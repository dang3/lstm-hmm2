sbb
add
mov
mov
ret
xorl
cmp
cmp
xor
outsb
jecxz
aas
inc
rclb
mov
mov
jle
sarl
je
mov
pop
scas
icebp
inc
and
arpl
push
and
outsb
cld
push
lahf
mov
xchg
sub
sub
or
sub
popa
sub
xor
jnp
js
fs
push
cmc
lret
out
cmpsb
lahf
imul
cmpsl
adc
mov
aas
lret
cmp
adc
stos
in
scas
ljmp
mov
mov
xlat
xchg
push
add
fbld
lea
stc
xor
lock
mov
stc
int
cmpsb
fwait
shlb
lahf
xor
pop
hlt
lcall
mov
adc
inc
mov
inc
aaa
ret
mov
fimull
sbb
lds
xorb
dec
fisubl
pop
imul
adc
out
push
bound
sub
mov
es
push
mov
cmp
arpl
cli
jmp
adc
lahf
dec
jo
jl
outsl
mov
and
icebp
inc
jne
jbe
rcll
std
scas
pop
xor
mov
idiv
aam
das
xchg
subb
in
mov
mov
jae
int3
pushf
std
mov
aaa
jbe
pop
cmpsl
pusha
lcallw
pop
push
push
inc
mov
sub
and
sbbl
roll
pop
loopne
sarb
dec
stos
test
xchg
dec
pop
pop
sbb
aas
iret
inc
dec
mov
cs
mov
sbb
xchg
cmp
or
jmp
cmc
cmpsb
push
xor
ret
insb
fcompl
inc
and
lock
iret
xor
mov
or
cwtl
sub
xor
lock
sbb
je
jns
popf
mov
mov
loope
stos
or
scas
mov
jbe
mov
cltd
js
mov
popf
push
ret
inc
jecxz
jne
movsl
aad
adc
mov
mov
ja
pop
gs
js
stos
pop
in
adc
mov
scas
pop
or
mov
dec
jge
cmp
inc
sub
cs
pop
movsl
xor
insl
inc
sub
test
test
mov
adc
bound
pop
adc
gs
mov
cmp
adc
dec
ss
pop
iret
ja
and
addl
push
idivl
mov
mov
fstl
jp
out
in
out
push
push
sbb
dec
jge
idivb
cmc
push
or
cmp
xor
jae
stos
fwait
sahf
addb
idivl
mov
pop
mov
adc
sbb
cld
ret
mov
fisubrs
ficoml
fadds
xchg
fdivs
mov
and
fdivp
addr16
mov
and
push
lret
sub
pop
cwtl
xlat
mov
lret
fs
shl
mov
xchg
inc
cmp
subl
mov
mov
and
sub
dec
mov
xor
int
dec
xor
dec
jmp
sub
push
hlt
lret
stos
in
fsubrl
mov
into
rcrb
std
xor
jo
das
xchg
push
push
dec
mov
pop
xchg
inc
cmp
and
dec
dec
fwait
sbb
pop
push
rcl
mov
int
jno
push
push
rorl
iret
in
or
dec
jnp
push
xorb
or
cwtl
rclb
std
js
lods
cld
xchg
inc
lahf
insb
aad
dec
insl
jae
push
call
add
xchg
pop
sbb
cmpsl
loope
xchg
rcrl
fs
ja
fadds
sub
insl
cld
stc
mov
and
jns
fsubl
orb
call
test
mov
mov
push
jb
or
dec
sbb
mov
xor
sbb
xor
out
push
aad
enter
add
cmpl
mov
push
int3
jns
movsl
into
jmp
cmpsl
int
xchg
call
sti
jbe
adc
dec
js
adc
lret
movl
out
and
sbb
xchg
in
das
and
cmc
xor
adc
lret
push
inc
addl
mov
sti
movsb
mov
mov
sbbl
mov
orl
js
fwait
add
pop
inc
andl
and
in
mov
subb
dec
mov
pop
jo
mov
push
xchg
clc
popf
out
push
xchg
xchg
fistps
push
jnp
test
sbb
adc
cmp
sbb
rolb
into
das
lahf
out
dec
js
jne
jns
dec
xchg
outsb
jbe
iret
xor
loope
jl
add
dec
mov
mov
shrl
in
ret
rorb
cltd
cmp
push
mov
jecxz
inc
repnz
lret
aaa
cmp
repz
aad
cmpsb
arpl
xchg
testb
mov
sub
jo
dec
xchg
add
cmc
adc
sbb
ret
xor
ljmp
je
push
add
inc
movl
movsb
xor
and
and
inc
cmpsb
js
cmp
je
mov
sbb
in
dec
ret
lret
add
sub
cld
jne
out
mov
mov
gs
adc
sub
jnp
icebp
and
out
insb
cmp
pop
ss
adc
mov
xchg
fisttpll
movsl
push
pop
pop
mov
dec
mov
inc
sbb
fdivrs
movsl
push
ds
sbb
or
inc
mov
cmp
jp
mov
mov
adc
fs
and
dec
sub
pushf
insl
inc
aaa
cmpsl
call
xor
or
or
cli
pop
repz
and
xchg
mov
fcmovbe
insl
push
loope
popa
call
jno
lock
sub
test
out
std
popa
mov
sub
or
push
sub
nopl
pop
call
out
mov
inc
mov
add
enter
fs
cld
into
xchg
gs
cmp
sbb
pushf
nop
out
sbb
je
shlb
and
adc
cmp
jmp
lea
clc
mov
dec
push
sbb
fs
xchg
sub
push
inc
xchg
loopne
daa
cmp
fsubrp
add
inc
mov
jecxz
push
fs
inc
rcr
aad
out
push
scas
inc
jge
cli
repz
aad
cmc
xchg
or
in
aas
cmp
bound
and
loop
xor
adc
push
and
lea
gs
lds
mov
lret
sbb
stc
frstor
adc
outsb
push
in
enter
push
jno
jle
test
jmp
out
xor
lea
jmp
xchg
sbb
test
fisubrs
inc
jo
fucomip
test
lea
inc
fistps
jno
ret
scas
shl
push
sbb
and
rcll
test
stos
cmp
fadds
sbbl
rcll
cmp
and
push
outsb
dec
cld
pop
or
test
and
add
js
lret
cltd
imul
adc
push
lret
xchg
fmuls
ret
push
pop
mov
frstor
stc
cltd
pushf
int3
cltd
push
cmp
or
cmc
or
jns
push
dec
cmp
adc
xorl
stc
mov
mov
xor
pop
sbb
out
and
mov
enter
and
dec
xor
sub
sahf
mov
es
mov
scas
push
mov
lret
roll
sbb
leave
and
adc
add
dec
divb
fisubs
xor
loopne
rorb
cmp
inc
in
lods
dec
add
ret
xchg
popf
xor
fsubrs
mov
and
or
jmp
dec
push
adc
aas
inc
add
jecxz
mov
push
test
jg
inc
aaa
inc
outsb
cwtl
hlt
adc
mov
repz
push
or
stos
push
scas
xchg
push
mov
stos
ss
jnp
jns
loop
jbe
repz
idiv
imul
and
push
push
fidivl
xchg
xchg
rcl
and
mov
mov
mov
add
popa
fadds
out
sbb
pusha
xor
or
push
inc
or
shl
aad
mov
add
sbb
push
sbb
jo
adc
push
cmp
decb
movsl
dec
das
imul
je
mov
jns
sbb
cmpsb
loope
push
mov
std
and
push
sub
push
adc
mov
pop
pop
daa
loopne
xchg
push
in
xchg
out
sub
sbb
lock
xchg
sarl
cmc
sbb
sub
aam
mov
test
xchg
sbb
jnp
das
aam
inc
add
fdivp
sar
dec
add
sub
out
dec
xchg
mov
movsb
jns
cs
lods
mov
stos
mov
out
xor
jbe
sbb
pop
mov
insb
cmc
jne
les
insl
sub
mov
ret
xor
and
inc
shl
fisubs
sub
out
inc
lret
lret
sbb
push
leave
int3
hlt
cmc
dec
mov
jnp
pop
sub
mov
adc
dec
lock
mov
lea
outsl
xsha256
cmpsb
mov
push
pop
imul
repz
mov
fnsave
sub
mov
push
fdivrl
xor
addr16
mov
enter
icebp
xchg
pop
mov
lcall
mov
xor
xchg
call
fbld
sbb
lret
add
jmp
dec
cmp
test
adc
xor
or
xchg
xor
or
jl
xorl
repz
hlt
push
mov
xchg
xchg
inc
jbe
imul
cmp
dec
cmpsb
daa
arpl
out
repz
in
inc
ret
stos
and
sbb
or
or
nop
or
push
imull
outsl
addr16
loopne
pop
sbb
or
shl
data16
test
pop
dec
push
mov
scas
push
push
scas
mov
xlat
cmp
lods
jne
testb
std
pop
sbb
repz
imul
lds
xor
cmc
mov
sub
aam
jae
sub
mov
push
lahf
push
scas
nop
shrl
cmpsl
mov
or
mov
push
call
cmp
inc
test
daa
lods
mov
add
daa
fs
icebp
mov
mov
in
in
jnp
insb
mov
and
loop
pop
lods
cs
pushf
sub
xchg
pop
push
ds
sub
xor
mov
imul
pusha
divb
fprem1
sub
or
pop
inc
sub
movlps
push
sbb
scas
ror
je
push
ret
jno
lods
jne
add
ja
jnp
cmc
cmp
cmp
testl
sbb
bsr
cmp
ret
fdivrs
adc
xlat
push
das
jl
dec
movb
inc
jo
test
push
mov
pop
xor
loopne
fs
pop
add
sbb
jne
push
jl
jae
adc
mov
in
mov
popf
aaa
je
leave
jmp
inc
add
xchg
out
xchg
insb
add
dec
movsl
js
adc
negl
sti
not
add
movsl
mov
lea
jae
les
add
add
int
jp
icebp
adc
and
xor
push
repz
inc
fsubrs
pop
movsl
cli
out
cmp
lods
push
in
int
cmpsb
jo
jg
fisubl
fstpt
mov
adc
xchg
add
push
jl
push
popa
or
jle
or
cmp
in
cmp
cmp
inc
insl
stos
pop
fistps
and
adc
xchg
les
test
rclb
ljmp
icebp
or
lods
dec
sbb
mov
jge
imul
test
js
in
and
icebp
mov
jae
inc
fstpl
mov
jae
fcmovbe
and
push
aad
push
inc
scas
movsl
js
scas
push
xchg
push
pop
or
js
push
mov
xor
lahf
or
sub
sub
pop
dec
pusha
or
xchg
sti
mov
test
fcom
mov
pop
and
scas
jne
jnp
jns
push
add
rcrb
mov
test
push
and
dec
lds
push
fnstcw
mov
and
adc
jl
inc
fstl
mov
std
adc
cwtl
push
push
add
xchg
arpl
dec
repnz
cli
rolb
lahf
push
add
out
jp
test
push
push
cmp
loopne
cmp
mov
dec
fmuls
xchg
test
add
jle
je
jnp
mov
lods
jb
leave
xorb
mov
dec
jbe
and
jnp
pop
dec
mov
inc
jp
imul
or
shl
xor
fisubrs
icebp
add
sbb
daa
call
lret
pop
insl
and
lea
mov
push
ret
add
test
in
lds
int
cmpsb
pop
push
and
out
icebp
fwait
add
enter
es
hlt
mov
mov
xor
popa
cmp
into
jg
adc
shrl
jle
js
cmpl
fdivl
gs
sarl
fst
and
or
mov
cmp
stos
popf
xchg
jns
xorl
movl
xchg
imul
dec
push
adc
lcall
sub
std
incl
cli
idivl
mov
xchg
adc
mov
push
sbb
inc
pop
les
testl
sub
lods
movsb
or
or
pop
mov
inc
push
ja
or
int3
xchg
push
cld
and
push
sbb
dec
cs
push
pop
imul
mov
out
jnp
fs
add
and
and
add
xorb
test
pop
in
in
aaa
cmp
mov
es
sar
icebp
push
es
fs
out
sbb
push
xlat
push
xor
xor
mov
and
pop
mov
mov
lcall
push
xor
mov
sahf
mov
out
nop
in
insb
pop
add
ss
xlat
scas
push
and
stos
jne
lods
add
push
pop
testl
push
aas
test
les
lret
push
inc
test
jb
mov
jmp
aas
jbe
int
movl
sbb
cwtl
popf
push
lods
rcrl
dec
and
sub
pop
mov
inc
jp
mov
shr
or
push
cs
lret
out
jb
or
and
push
xlat
fldenv
lret
cmpl
iret
insb
lcall
cmp
mov
adc
mov
inc
daa
sub
sahf
or
sbb
lea
js
dec
pop
fcompl
je
leave
bound
loop
mov
out
lcall
push
fistpll
bound
out
mov
test
sub
dec
adc
movsb
mov
pop
ds
xor
add
cmp
sub
mov
push
imul
ficompl
fisubl
test
mov
rol
pop
fistl
xchg
aaa
fwait
dec
or
jo
iret
xchg
xor
lds
add
mov
mov
aas
mov
stc
enterw
call
mov
sub
popf
rcrl
sub
xor
pushf
leave
mov
aaa
and
push
inc
xor
loopne
push
and
call
jb
mov
imul
add
xchg
lods
add
adc
push
aad
insl
or
lock
cmpsl
pop
es
jae
adc
sbb
xchg
and
movsl
jo
mov
push
lods
rol
xchg
cltd
shlb
nop
in
sahf
pop
lock
inc
add
loop
cld
jne
or
xchg
jge
mov
inc
mov
pushf
aam
stos
sbb
xchg
pop
xor
stos
cmp
cmp
push
loop
jmp
jmp
stos
adc
and
xchg
stc
scas
adc
and
jnp
pusha
xchg
dec
aad
ret
adc
sub
mov
das
pop
movsb
mov
loope
call
lods
cli
loope
repz
enter
in
test
sub
add
ljmpw
pop
daa
cli
mov
pop
mov
xchg
jmp
cmp
push
or
sub
jo
stos
mov
sbb
jmp
push
and
mov
jmp
stos
sbb
cltd
xchg
xchg
inc
rorl
pop
sti
mov
fwait
pop
test
mov
xor
lock
dec
or
dec
popf
dec
fstpt
adcl
mov
mov
stos
lret
xchg
mov
adc
push
insl
jle
or
jp
sbb
jge
div
loope
jge
imul
sub
jae
cmp
dec
jae
xor
js
hlt
jb
pop
sub
and
adc
shl
pop
cmpsb
daa
insl
mov
mov
cmp
repnz
insl
push
push
push
jns
mov
ljmp
push
test
lods
das
mov
mov
xor
pusha
sbb
fcom
enter
mov
cltd
mov
cmp
mov
push
dec
aam
inc
cmp
jl
sub
push
inc
or
jle
xor
jmp
inc
cs
xor
fldt
xchg
mov
sbb
mov
jge
iret
push
daa
in
pop
add
dec
jmp
xchg
jmp
cmpl
scas
sbb
mov
test
sbb
lea
pop
cmp
cli
popa
cmc
and
jns
lods
aaa
pop
jge
inc
adc
push
sub
dec
jle
sub
popa
mov
rorb
jo
je
sbb
divl
pop
mov
popf
mov
daa
dec
push
push
sbb
add
or
lods
aam
movsb
call
in
push
xlat
lret
mov
push
mov
and
incl
dec
jp
fidivrl
pop
shl
insl
scas
jnp
out
mov
sub
cmp
xchg
mov
add
lcall
cmp
cmp
add
stos
cmp
lock
ficoml
pop
jns
in
jecxz
xor
jno
ss
in
mov
imul
test
push
sbb
ret
leave
pop
push
out
adc
cwtl
stc
jno
cli
out
pop
outsb
loope
daa
lds
dec
xchg
xchg
arpl
mov
sub
shr
div
add
adc
cmp
stos
rcrb
or
xchg
jl
pop
jns
sbb
xchg
icebp
dec
pop
adcb
pop
and
imul
jae
sub
insl
xchg
xor
jno
mov
fnstenv
clc
js
sti
cltd
or
lock
xchg
ja
dec
xchg
cmp
decb
cmpsl
leave
and
jl
bound
aas
and
fadd
dec
aad
and
add
push
pop
aas
out
ss
jp
jle
outsl
jle
push
ljmp
data16
test
push
push
notb
pop
in
sub
insl
in
fnstenv
data16
in
pop
ret
and
xor
xor
lcall
arpl
push
stc
sub
outsl
dec
cmp
adc
mov
add
jle
les
push
cmpsb
dec
scas
mov
lds
daa
dec
inc
fwait
mov
push
fcmovb
pop
aaa
or
cwtl
mov
dec
bound
xor
xchg
data16
out
pop
lret
mov
push
lcall
dec
and
jmp
fwait
test
cltd
in
jecxz
xchg
outsb
push
mov
inc
test
cmp
das
fcom
mov
pusha
and
dec
lcall
pushf
fidivrs
pop
inc
and
scas
popf
xchg
stos
mov
pop
std
or
in
xchg
scas
cld
sbb
dec
test
aad
dec
or
orl
mov
in
sub
jo
pop
adc
popw
add
fs
dec
out
xchg
pop
in
inc
ficoml
or
cli
loope
pop
pop
lods
push
jge
cli
mov
shll
cmpsl
rcll
xor
fsubrl
fbstp
or
dec
into
sub
aas
mov
in
loopne
jle
ja
les
aad
sbb
test
aam
rclb
insl
xor
pop
push
mov
out
pop
mov
dec
inc
pop
inc
sbb
bound
pop
jge
iret
out
xlat
fisubl
jo
inc
adc
test
imul
mov
xchg
andl
out
popa
mov
daa
pop
mov
sub
add
mov
popf
sub
ficompl
inc
popf
lcall
jbe
mov
jle
clc
movsl
lea
fiaddl
hlt
inc
and
sub
lahf
inc
mov
add
jp
je
dec
add
xlat
test
jne
imul
push
jp
mov
add
test
inc
or
mov
mov
inc
insb
int3
test
sbb
in
pop
jns
lret
cmc
push
adc
mov
sub
fdivs
mov
or
es
pop
lret
pusha
sub
adc
pop
xor
mov
add
mov
mov
stc
mov
shrb
xchg
popf
sbbl
movsl
shr
jp
aas
jb
lds
or
jge
push
shll
repnz
popa
jl
out
jo
xor
mov
cmpsl
jmp
push
inc
pushf
add
sbb
dec
push
fidivl
sub
inc
adc
mov
fisubl
nop
push
xchg
xchg
dec
mov
mov
jp
jmp
das
loope
push
es
mov
mov
inc
les
out
out
andl
xchg
enter
add
rcr
inc
sarb
stc
loop
sub
aam
mov
pop
push
xor
fs
roll
daa
mov
jb
cltd
xchg
add
mov
out
scas
fimull
inc
aas
cs
fwait
xchg
sub
inc
adc
cs
push
outsb
mov
inc
pop
pop
pop
xor
repz
mov
jle
xchg
lret
cmp
xchg
push
psubsw
fs
push
in
sub
mov
xchg
ss
xor
nop
jns
stc
outsb
jbe
inc
mov
cmpsl
fwait
iret
addr16
cmc
mov
pop
leave
add
adc
imul
and
xor
xlat
pop
insl
inc
mov
xlat
and
dec
or
sub
ret
scas
xchg
sbb
iret
adc
xchg
jnp,pn
mov
jnp,pt
cmpsb
insb
jmp
add
dec
mov
aaa
or
and
lcall
cld
aad
sub
fdivr
mov
or
popf
push
ds
or
push
jbe
jmp
lds
test
mov
jl
testb
push
loope
mov
outsb
sti
ror
push
or
mov
loop
in
loopne
jg
stos
pop
sti
jae
mov
and
insl
sub
dec
mov
gs
add
inc
xor
cmpsl
addr16
mov
test
leave
inc
outsl
cmp
push
mov
cmp
lock
push
mov
loop
int
jl
inc
push
insl
xor
mov
iret
jmp
add
or
xchg
xchg
cmpsb
arpl
mov
stos
adc
stos
jne
mov
test
push
in
clc
jnp
dec
push
ret
in
mov
sbb
and
adcb
sbb
jno
cs
rolb
cltd
clc
arpl
lock
cmp
aaa
enter
mov
testb
dec
dec
int
or
insb
xlat
jecxz
inc
jge
jg
sub
int3
mov
imul
fwait
inc
je
xchg
cmp
jl
dec
adc
mov
incb
test
cmp
and
jo
dec
in
push
imul
xor
xor
enter
push
cmc
test
pop
lea
data16
insb
out
xchg
jne
cmpsb
icebp
jecxz
and
cmp
pop
dec
les
dec
ljmp
cltd
or
lods
mov
cmp
mov
popf
cwtl
mov
xchg
xchg
cmc
inc
push
lock
inc
ss
pushf
aad
ja
or
pop
hlt
inc
cmp
in
dec
xor
mov
sbb
test
xor
lds
xchg
pop
mov
je
add
das
les
inc
mov
sti
xchg
incb
test
mov
testl
out
xchg
sub
mov
jle
frstor
pop
mov
in
push
inc
in
mov
loop
daa
outsw
xor
pop
cmp
and
out
xchg
push
mov
xorl
inc
aad
pop
outsl
add
xchg
inc
xlat
xor
lods
push
outsl
aad
sub
push
rcl
pushf
leave
sbb
push
pusha
test
mov
sub
push
xchg
xor
sbb
lods
in
std
into
pop
fwait
pop
cs
fidivrs
jmp
cmp
pop
push
arpl
cltd
inc
mov
push
mov
cltd
pop
jecxz
push
mov
inc
xlat
subb
addr16
sbb
mov
or
lahf
cld
push
or
gs
movsl
loopne,pt
xchg
cmp
scas
rorl
insl
add
out
popa
lahf
push
mov
into
out
mov
lods
into
or
and
dec
cmp
mov
andb
mov
sbb
shrb
push
jmp
pop
ret
inc
push
mov
dec
mov
ljmp
cwtl
add
in
xchg
fsubrs
add
mov
sub
xor
mov
mov
cmp
pusha
pop
xchg
jo
mov
scas
mov
cmp
mov
add
inc
fiadds
ret
orb
nop
push
clc
xlat
mov
lds
push
mov
movsb
bound
into
cltd
shl
cmp
xchg
cli
jmp
loopne
enter
mov
sbb
cmpsl
add
clc
scas
pop
cltd
sub
mov
or
sbb
stos
push
sub
pand
lock
movsb
lcall
inc
and
xchg
cmp
pop
fldenv
or
jle
jmp
push
xchg
cld
xbegin
sub
jle
cmpl
and
rol
xor
mov
andl
dec
inc
cmpsb
push
xchg
fstp
xor
insl
or
mov
mov
push
inc
jno
jmp
leave
stc
gs
add
outsb
iret
inc
movsl
in
sarb
retw
dec
add
lcall
jmp
aad
mov
sbb
cmp
and
les
lret
adc
mov
pusha
pop
gs
mov
mov
rolb
sbb
cs
popl
xchg
mov
imul
arpl
sbb
rolb
dec
stos
mov
and
cli
inc
mov
fwait
daa
or
das
insl
idivl
add
mov
ds
jp
or
add
mov
xor
das
mov
dec
pop
push
out
mov
stos
pop
and
jns
sbb
pop
test
xchg
sub
filds
cld
xor
imul
testb
call
ja
aam
push
xchg
pop
inc
scas
xchg
and
loopne
lds
xor
sbbl
xchg
imul
dec
inc
clc
add
hlt
into
pop
pop
cltd
mov
cmp
fildl
loope
dec
adc
mov
mov
mov
xchg
shll
stos
xor
xor
cmp
push
insb
or
bound
add
mov
jp
outsb
adc
pop
cld
out
mov
dec
ss
leave
cmp
cltd
pop
xchg
lahf
das
and
xorb
xchg
cmp
in
scas
std
in
fsts
xchg
rolb
cli
xchg
pushf
mov
in
filds
jns
pop
ja
cmp
frstpm(287
aas
mov
lcall
jne
rorl
jo
push
in
fdivr
sub
xor
or
int
subl
mov
pop
cmpb
add
test
xchg
add
mov
sbb
in
pop
jge
mov
or
jo
lods
mov
jae
fildl
jne
mov
add
subb
scas
into
movsl
lea
xor
mov
add
outsl
das
xor
xchg
sub
sub
fildll
repz
adc
mov
xor
xchg
or
lock
stos
sti
dec
iret
fsubs
roll
pop
cmp
fbstp
lea
mov
pop
inc
ljmp
push
inc
int
push
fwait
into
push
aaa
xchg
sbb
adc
mov
mov
mov
push
mov
sahf
add
adc
xor
cmp
xor
dec
push
jg
mov
inc
and
push
cmp
out
insl
pop
pop
mov
into
xor
xor
jns
xchg
nop
fldenv
inc
inc
ja
push
out
pop
cmp
ret
loope
cmp
jno
in
loopne
mov
pop
adc
pusha
or
pop
xchg
jb
adc
and
lcall
movsb
pop
sarb
cmp
dec
or
imul
sbb
inc
mov
or
fistpl
inc
movsb
sti
pop
dec
xchg
imul
push
pop
or
add
cmpsl
jnp
in
pop
sub
fnstcw
dec
aam
xchg
out
lds
out
mov
xor
cmc
loop
cs
mov
mov
in
fistl
xchg
cmp
sub
enter
js
add
cltd
iret
inc
fnstsw
jae
cmpsl
les
adc
ja
jmp
sbb
out
dec
and
mov
daa
out
cltd
sahf
pop
mov
pop
ljmp
mov
xor
jp
sbb
fnsave
imul
dec
and
mov
xchg
push
xchg
jnp
ret
mov
inc
inc
mov
push
mov
std
ljmp
out
repnz
lret
cmpsb
push
and
jo
adc
fsubrl
push
addl
push
clc
flds
jecxz
icebp
mov
add
push
andl
les
cmp
mov
fidivrs
adc
std
push
or
pop
scas
mov
hlt
add
negb
setns
dec
inc
mov
jecxz
insl
dec
scas
fsubrs
push
xor
leave
js
inc
mov
pop
mov
mov
add
lret
push
add
in
rcrl
push
and
rclb
mov
dec
push
sub
mov
or
push
add
mov
loope
push
adc
repz
mov
enter
or
adc
pop
push
aad
in
cwtl
pop
in
mov
jecxz
frstor
in
fbld
pushf
test
rorl
in
cli
ss
lcall
jo
fucom
aad
push
imul
mov
cmp
lods
mov
jg
add
sub
jmp
mov
or
pushf
or
jae
cwtl
push
popf
mov
mov
jge
jns
and
sahf
out
cmpsl
fadds
insl
mov
and
lods
mov
add
out
push
xor
xor
popa
rolb
add
movsb
loop
push
push
pop
orb
ljmp
inc
cld
int3
adc
push
add
and
mov
stc
rol
cltd
and
dec
sbb
or
inc
jno
scas
pusha
addl
lahf
mov
insb
repnz
or
cmpsb
es
out
test
mov
out
push
daa
mov
das
in
out
mov
mov
sahf
gs
mov
xchg
adc
jle
iret
pusha
pop
das
rcrb
xchg
nop
ss
push
and
es
fistps
push
fwait
sub
xorb
enter
addb
out
pushf
adc
xor
sub
add
adc
pop
std
and
sbb
icebp
xor
fisubl
mov
int3
stos
push
xor
jne
cmp
lahf
or
popa
enter
popa
test
push
popf
xchg
out
orl
out
in
jmp
and
push
in
std
and
jb
test
aas
in
mov
adc
call
sbb
jmp
adc
bound
lret
inc
in
rorb
dec
or
sti
sub
jmp
fldl
inc
dec
xor
in
pop
add
jbe
icebp
stc
ret
push
mulb
push
mov
or
xor
enter
scas
mov
pop
xlat
lods
mov
jecxz
in
sbbb
add
xor
shrl
jmp
dec
mov
cmp
jg
xor
ds
mov
loope
push
imul
aad
out
jns
add
out
jno
mov
lods
imul
inc
scas
cmovp
fsubrl
cmpsl
mov
aas
or
in
aas
xor
movsl
mov
jge
pop
sbb
push
and
je
loopne
dec
push
sahf
sbb
and
dec
sarb
inc
inc
filds
fidivl
dec
mov
shlb
sub
movsb
pop
inc
pusha
int3
cmp
pop
fimuls
ss
sub
gs
int
enter
cmpsl
jmp
sbb
adc
ss
or
aas
xor
cmovo
lret
sbb
cmpsl
inc
jp
xor
in
jp,pt
jbe
imul
lcall
nop
mov
and
mov
ljmp
arpl
iret
popl
test
movsl
adc
ljmp
sbb
jp
jge
inc
ljmp
ljmp
pop
and
push
fidivl
outsb
jns
es
and
iret
jns
mov
mov
inc
sub
dec
add
popa
dec
pop
push
sbb
add
aaa
cs
shlb
jg
rorl
push
jge
xchg
icebp
testb
push
cld
sbb
or
mov
in
cmpsl
and
sbb
test
push
or
out
inc
roll
cmp
jl
sti
rorl
les
sub
insb
pusha
push
jecxz
test
sbb
outsl
and
pop
imul
sbb
xor
and
inc
pop
pop
push
sbbb
call
loope
mov
hlt
iret
fildl
imul
dec
or
adc
in
mov
inc
mov
mov
jecxz
imul
into
cld
xchg
and
xchg
cmp
lret
adc
scas
pop
xchg
sub
xchg
js
in
fsubrp
xchg
aam
dec
std
xchg
jb
sbb
jnp
inc
mov
pop
sbb
stc
mov
xor
cmpsl
adc
push
rolb
sub
pop
mov
aas
dec
or
xchg
adc
dec
daa
pop
in
int
or
mov
outsb
shlb
mov
das
clc
daa
mov
out
cmp
sbb
jb
xchg
sbb
mov
dec
pop
inc
pop
ret
int
testb
rorb
or
xlat
loop
dec
and
pop
pop
or
lods
aad
sahf
and
into
cs
sub
cmpsb
mov
mov
shl
push
or
jne
push
dec
call
es
dec
stc
lds
cli
mov
mov
xor
jb
outsb
cmp
push
xchg
xchg
lea
mov
es
xchg
loopne
shlb
cmc
mov
xchg
jg
push
sub
daa
mov
stc
adc
jg
orl
adc
test
sub
sahf
in
push
jg
pop
cmc
push
mov
sahf
inc
sarl
lea
xchg
rcll
adc
lock
inc
ret
sub
cs
xchg
int3
xor
xchg
int3
xlat
movb
hlt
scas
aad
add
hlt
popa
je
dec
dec
into
xor
sar
andb
enter
adc
or
jno
mov
negb
out
push
jne
shlb
adc
jo
rorb
xchg
bound
sti
mov
int
jns
mulb
add
repz
mov
cmp
lmsw
dec
leave
aaa
shrb
xchg
pushf
sbb
mov
into
repnz
push
ret
sti
jb
push
pushf
mov
fistpl
mov
movsb
mov
nop
mov
lea
mov
int3
jo
adc
adc
push
or
mov
xchg
dec
fs
push
out
sbb
xchg
xchg
dec
ds
and
and
pop
pop
xlat
scas
sub
fs
inc
fiadds
dec
cmp
fadd
add
int
mov
pushl
repnz
clc
push
inc
repz
push
pushl
clc
icebp
mov
jno
xor
jne
clc
adc
ljmp
aam
push
sub
jmp
xchg
add
sti
mov
xor
push
inc
push
add
push
sahf
insb
ljmp
jmp
stos
mov
mov
push
fstpl
mov
jbe
jmp
xchg
icebp
adc
xor
add
lods
cmp
imul
lret
aaa
ljmp
fs
iret
cld
lds
fsts
xchg
jne
push
jnp
xchg
rorl
mov
arpl
rol
cmpsl
mov
sti
cmpsb
jle
push
gs
mov
aad
push
pop
xchg
scas
and
loop
dec
movaps
fisubrs
mov
cltd
popf
ds
into
xor
xchg
repnz
sbb
mov
in
es
adc
inc
lods
shll
rcrb
decb
add
lea
ss
dec
cmp
xchg
sub
pop
fsubrl
inc
call
stc
cmp
xchg
sbb
fistps
add
clc
xchg
push
cmc
inc
lods
and
cmp
jmp
push
xchg
adc
add
and
in
mov
or
cltd
sbb
inc
jno
ja
sbb
leave
mov
pop
scas
pop
dec
sbb
jge
iret
inc
lcall
mov
in
dec
ret
ret
cmp
xor
bound
xchg
xchg
jl
daa
pop
push
and
addr16
jno
in
out
sbb
jns
iret
pop
outsl
scas
add
fistl
mov
sub
pop
leave
fs
cmc
fwait
test
shl
push
sub
add
pushf
mov
insb
shll
xchg
add
or
dec
shll
das
sub
mov
testl
shl
repz
sbb
cmp
dec
sbb
sbb
pop
enter
push
mov
and
add
ret
sbb
cmc
ljmp
push
pop
bound
mov
pusha
dec
cmp
sarb
mov
pop
repnz
mov
ret
pop
in
addl
mov
inc
add
jnp
or
imul
aas
xor
lcall
and
rcr
lret
push
or
add
mov
mov
out
adc
xchg
jl
or
pop
sub
shll
inc
inc
scas
insl
dec
mov
push
and
test
sub
in
testb
or
cltd
rorb
bound
push
push
add
aad
fsubp
insl
faddl
dec
aam
movsb
inc
dec
arpl
rorl
out
pop
rcrb
xchg
adc
mov
push
fidivs
adc
adc
xor
pop
das
adc
mov
mov
xor
test
iret
std
pop
out
fidivrs
mov
push
nop
sub
clc
std
mov
sub
psubq
xchg
inc
mov
adc
aam
pop
push
icebp
mov
out
test
dec
and
stos
sbb
or
adc
orl
shlb
int3
pop
cmp
pop
sbb
aad
ljmp
fidivrl
icebp
fwait
repnz
in
pop
in
stos
das
lret
addl
repz
sub
stos
add
loop
lahf
jnp
popa
jmp
sub
mov
mov
hlt
roll
insl
loopne
xor
pop
or
test
iret
xchg
adc
leave
in
pop
cli
dec
cmp
push
ss
xchg
shrb
push
dec
mov
xor
fsubrs
xor
jmp
es
ss
sbb
or
into
adc
in
repnz
pop
jae
test
or
dec
nop
sbb
xchg
and
sbb
sti
lret
stos
mov
es
push
pop
dec
test
dec
test
sarl
data16
xlat
cmp
mov
pop
push
sub
xor
adc
mov
adc
push
into
and
hlt
lret
xchg
jle
pop
inc
out
dec
mov
adc
montmul
cmpsb
xorb
ret
cmp
add
mov
dec
testl
xchg
dec
and
mov
mov
out
arpl
insl
movsl
mov
xchg
mov
popa
aaa
les
fs
push
sub
pop
fcmovb
mov
fs
mov
lret
ret
std
xor
test
nop
cwtl
movsb
icebp
xchg
push
and
les
jmp
fdecstp
pop
repz
jecxz
popf
add
negl
jmp
and
out
xorl
sub
xchg
rcll
sbb
dec
scas
or
ret
xchg
lods
sub
imul
or
arpl
fidivrs
xor
inc
jbe
lret
and
mov
aas
aam
jl
fisttpll
mov
idivl
mov
out
negb
movsb
daa
ljmp
jo
clc
repz
mov
arpl
xchg
xchg
addr16
into
out
mov
negb
pop
fdivs
fnsave
sahf
cwtl
jnp
outsb
outsb
inc
or
test
sbb
out
or
sbb
fldt
and
test
mov
hlt
lods
jno
loope
cmpsl
jmp
int
mov
pop
xchg
arpl
or
adc
inc
pusha
insb
xchg
jg
jns
mov
aam
add
pop
es
mov
cmp
xlat
pop
call
mov
xchg
cmc
sub
mov
sub
ds
xor
adc
push
jno
dec
ret
cmp
push
cs
sub
xchg
inc
outsb
or
jl
adc
iret
or
mov
scas
sbb
and
push
cmc
sbb
aam
push
ljmp
cld
dec
xchg
fwait
aaa
add
push
les
cwtl
in
scas
xlat
iret
add
stos
mov
inc
sbb
in
in
in
xchg
bound
in
sub
ret
cmpsb
fistl
add
dec
and
arpl
loop
cwtl
xchg
dec
xchg
inc
xchg
test
js
stos
stos
fadds
stos
and
mov
mov
lock
jmp
add
jnp
aaa
jno
popa
mov
jecxz
pop
aam
mov
pop
add
insl
cmp
sub
mov
push
ficomps
out
jge
sub
imul
loope
outsl
icebp
inc
loop
outsl
fiaddl
xchg
jbe
push
rcr
push
push
fcmovb
cltd
mulb
sub
mov
lock
leave
xor
push
sbb
jge
adc
scas
mov
inc
rorl
add
mov
xor
pushf
and
sbb
dec
adc
repnz
sbb
sub
addb
fcmovbe
push
stos
push
imul
pop
mov
daa
jns
stos
mov
mov
cmc
loope
cld
scas
fimuls
shl
sub
test
mov
and
xchg
movsl
or
lahf
les
je
mov
jecxz
adc
sbb
sub
arpl
les
sbb
aad
aas
xchg
leave
jmp
into
push
sub
or
add
pop
scas
or
and
adc
shll
mov
xor
mov
fidivrl
into
rolb
and
stos
mov
jg
out
test
fisubl
inc
mov
add
mov
push
pop
inc
mov
xchg
fcom
mov
mov
adc
psrlq
xchg
add
insb
rcll
lahf
stos
pop
ljmp
je
cmp
roll
jmp
lret
outsb
iret
add
lcall
and
shlb
pop
out
push
inc
ficomps
out
out
jle
or
arpl
arpl
icebp
lahf
push
fildll
dec
bound
imul
stos
adcl
pushf
push
mov
push
mov
mov
std
pop
xor
jmp
nop
lret
les
mov
rorb
call
xchg
shrb
mov
dec
pop
xorl
lods
imul
js
mov
arpl
and
xor
jno
and
jbe
push
xchg
aad
mov
sti
or
adc
rclb
and
jle
xor
popa
push
mov
in
ljmp
push
adc
inc
jecxz
xchg
and
call
sub
mov
sub
push
mov
xlat
lahf
lahf
inc
push
mov
cmpsl
mov
aaa
test
test
cmpb
pop
popf
adc
sbb
push
fnsave
aas
pop
enter
xchg
test
jae
popf
pop
jnp
scas
mov
xchg
mov
aam
rorb
mov
call
ret
outsl
stos
dec
cmc
fildll
jne
bound
xchg
pop
popa
stc
test
add
add
out
pop
les
mov
sbb
inc
push
jno
in
inc
test
xchg
scas
cmp
loop
or
outsb
mov
or
scas
add
icebp
or
ss
inc
jl
dec
movsl
cmc
inc
and
inc
mov
inc
xchg
lods
dec
loopne
in
jge
jecxz
addr16
fcmovne
repz
pop
add
push
and
aad
lahf
inc
in
xchg
sbb
jecxz
subb
jmp
sbb
stos
fnstenvs
scas
dec
jmp
mov
dec
jl
in
loope
lahf
jmp
push
movsb
pop
jae
cmp
insb
les
in
bound
scas
mov
das
sti
ljmp
dec
stos
divl
dec
icebp
mov
sub
push
fsubp
jnp
test
push
daa
flds
aas
cmp
jmp
ss
imul
xor
daa
jle
jge
xchg
mov
movb
gs
mov
mov
adcl
rorb
mov
loop
mov
jo
add
mov
les
rcrl
out
cli
push
addps
std
movsl
in
pop
cmp
or
inc
sarb
mov
bound
mov
cmp
sbb
ficoms
cmp
or
movsb
pop
dec
inc
fisttpl
xchg
and
repnz
mov
icebp
push
xor
or
mov
es
pushf
cmp
cmp
cmp
mov
push
mov
mov
dec
cltd
mov
mov
jg
mov
inc
sub
ret
mov
enter
mov
das
mov
pop
inc
xchg
jns
shlb
jne
mov
into
mov
jl
mov
cltd
cs
or
cs
aas
lods
mov
outsb
aam
xchg
mov
sub
jecxz
push
andl
es
cld
lds
out
mov
cmp
cli
sub
clc
adc
fdivrl
aam
inc
or
sbb
mov
cs
pop
pop
out
jno
inc
ja
sbb
xchg
fldt
pop
into
dec
sub
xor
arpl
lods
mov
push
cmpsb
into
pop
rorb
int3
jp
outsl
in
out
jae
stc
movsl
leave
test
aad
sbb
test
ret
and
cmpsb
pop
inc
jo
mov
and
cld
movsl
das
fadd
pop
push
mov
popa
dec
mov
enter
sahf
sbb
ss
sbb
xor
arpl
and
jne
es
mov
jmp
jne
fld
and
fidivs
sub
mov
or
adc
lods
repz
leave
pop
lret
lret
adc
jle
xor
and
xlat
or
add
cli
pop
mov
push
cmp
and
sbb
leave
xchg
test
or
loopne
jmp
mov
mov
aaa
xor
jg
jbe
cli
mov
inc
inc
or
sub
pop
xchg
popa
mov
cli
popl
sbb
scas
pop
dec
inc
push
push
jbe
cmpsl
add
push
dec
xlat
inc
add
clc
icebp
test
mov
ret
xchg
loop
gs
adc
insb
fiadds
jecxz
push
adc
stc
xchg
ljmp
enter
shll
push
sbb
mov
pop
dec
xchg
fldcw
gs
lods
add
lods
hlt
daa
hlt
adcl
lea
ds
outsb
call
xor
xor
iret
xor
lret
insb
xchg
inc
icebp
imul
int3
arpl
mov
sbb
pmullw
shrl
loop
adc
jnp
adc
mov
fdivrl
xor
push
push
mov
ret
dec
jne
sar
lea
lods
rcrl
mov
lea
fdivl
ret
and
mov
xor
les
pop
fwait
out
mov
fdivr
icebp
aaa
int
in
cs
jno
jno
sarl
fcomps
lea
loop
inc
mov
xor
jmp
push
je
adc
ja
and
int
mov
mov
push
sti
sbb
movl
jle
imul
xlat
repz
shrb
xlat
test
movsb
xlat
or
and
jbe
or
jmp
clc
cmp
movl
decb
mov
dec
adc
adc
push
out
add
rorl
sub
cmpsl
adc
mov
xchg
loope
andl
addr16
pop
pop
pop
fdivs
sbb
orb
test
pop
repnz
scas
insb
dec
xor
scas
stos
and
jmp
iret
nop
or
movsl
cmp
mov
cmpsb
loopne
movsb
pop
pop
outsl
cwtl
arpl
cmpsl
pop
push
mul
enter
sbb
mov
movb
fistps
rcrl
inc
sub
outsl
lods
aas
popl
mov
push
test
cld
bound
jae
xor
cmp
dec
mov
dec
cmp
aam
dec
pop
push
xchg
cmpl
pop
pusha
test
jecxz
cmpsl
cwtl
add
scas
dec
sbb
xchg
push
xor
jecxz
insl
cs
lret
ror
add
jmp
inc
mov
push
call
shl
pop
xor
out
mov
data16
test
add
bound
xchg
sub
stos
enter
scas
xchg
push
js
leave
xor
daa
pop
add
mov
mov
loop
or
pop
shrl
add
cli
push
out
cmp
xor
out
mov
je
inc
mov
or
imul
mov
movsl
mov
or
decl
sub
lcall
cli
cs
dec
cmp
xor
cli
add
movsb
insl
add
mov
pop
lds
mov
mov
adc
ret
bnd
pop
xchg
inc
jl
mov
pop
adcb
sub
mov
js
and
sub
sub
call
xchg
gs
and
gs
aam
adc
mov
inc
xchg
inc
pusha
jmp
pop
cmp
out
pop
sbbl
sarb
ljmp
ja
test
mov
pushf
test
xor
js
test
sbb
cmp
mov
and
or
scas
and
mov
repz
test
mov
ret
mov
sub
mov
or
xor
inc
xchg
sbb
stos
aaa
pusha
inc
sbb
sbb
in
fwait
andb
sub
mov
jp
or
scas
pop
and
xor
add
loope
mov
jns
push
fcmovne
sahf
rcl
cmc
jle
dec
imul
inc
js
add
push
hlt
outsb
scas
insl
lret
add
lahf
enter
mov
notl
loop
popf
xchg
sarb
and
mov
mov
test
mov
scas
inc
sti
mov
mov
jg
inc
inc
orb
cltd
mov
inc
and
xor
or
xchg
xor
jo
xorb
mov
cmp
das
mov
cmpsb
addr16
insl
fidivs
fcmovbe
xchg
jp
lea
sub
movsl
dec
pop
add
ss
xor
mov
push
mov
mov
jecxz
fwait
shrb
push
push
cmc
test
notb
sub
cmc
mov
repz
push
jmp
movl
sub
outsl
mov
adc
push
pop
push
test
fcomps
pop
dec
xchg
xor
sub
fcmove
pop
call
mov
mov
cmp
das
mov
insb
ds
jge
dec
xor
mov
jge
xor
sub
gs
scas
das
cmpsb
mov
or
sub
jno
daa
icebp
call
add
inc
add
jmp
in
iret
cmp
jg
enter
insl
cli
pop
bnd
std
ss
in
mov
mov
enter
stos
and
mov
push
inc
cmp
arpl
cltd
aad
lret
test
cmpsl
xchg
inc
aad
mov
cmc
mov
mov
sarb
or
sub
xchg
imul
inc
pop
shrb
mov
push
fistpll
xchg
int3
mov
das
mov
inc
mov
pop
and
mov
push
add
dec
aam
jae
daa
mov
fstpt
decl
loop
push
and
sbb
sahf
mov
ljmp
push
repz
jo
pop
pop
mov
popa
je
inc
cmp
lods
cmpsl
dec
fstl
aad
add
iret
push
jb
shll
in
xchg
pop
rcr
test
lret
inc
sub
mov
xlat
add
pop
adc
push
adc
xor
lahf
repz
mov
loop
cli
and
or
lock
out
mov
jne
aam
das
clc
jb
int
or
inc
cmc
sub
test
adc
dec
or
jg
pop
and
imul
jmp
andl
jg
mov
data16
test
add
aaa
inc
inc
pop
jo
sub
adc
int3
mov
fstps
inc
push
push
jb
out
or
cmp
imul
push
mov
push
mov
cs
pop
dec
sti
loopne
mov
xchg
adc
dec
fistl
inc
and
and
jne
fsubs
push
cli
lock
xchg
das
popa
xchg
xchg
jno
mov
cmp
or
jecxz
leave
pop
mov
rcr
xlat
xchg
mov
cltd
lock
dec
ret
push
xchg
loop
cld
push
aam
int3
fcmovnbe
in
push
arpl
xor
sub
in
dec
lret
dec
push
int
aad
push
mov
pop
add
mov
push
fisttpl
mov
adc
arpl
test
mov
mov
enter
out
mov
fmull
nop
dec
lahf
mov
mov
ffreep
arpl
fwait
cmpb
popa
out
loopne
pop
divl
lock
push
std
and
aad
das
stos
add
and
test
mov
bound
xchg
xor
cmpsl
outsb
xor
rcrb
push
shll
jge
jmp
test
outsl
xor
nop
nop
push
test
pop
mov
and
adc
bnd
sar
inc
inc
inc
stc
je
xchg
mov
mov
lock
pop
in
call
icebp
add
mov
mov
and
leave
push
or
sub
shlb
mov
lret
xor
loope
mov
movsl
sub
movsl
jne
imul
or
lcall
notb
je
shll
pop
outsl
push
mov
xorl
mov
dec
stos
xor
data16
mov
in
bound
jbe
outsb
sub
aam
mov
sbb
cmp
ret
pop
setno
outsb
add
and
jo
aad
leave
jg
cmp
stos
rcll
test
xor
in
push
aad
mov
push
mov
xchg
and
daa
cli
shl
idivl
cmpsb
jbe
mov
xchg
dec
cmp
ret
clc
adc
sahf
add
xor
sahf
jnp
sub
xor
cmp
notl
test
xchg
mov
mov
idivb
jg
xor
out
adc
lock
movsb
jbe
test
xchg
aaa
iret
sbb
or
and
jns
inc
aas
xor
addr16
adc
stc
xor
int3
jns
push
shlb
movsb
lock
and
movsb
pusha
cmp
push
cld
aad
mov
mov
ja
out
and
cmc
push
rcl
push
dec
mov
xlat
cwtl
inc
std
adc
and
dec
pop
test
xlat
xchg
sub
xchg
outsl
movl
in
mov
lods
mov
cmpsb
jbe
lock
sbb
cmp
out
dec
cmpl
jno
cmp
rorl
jb
pop
sub
test
xor
insb
shl
jg
je
jle
lods
adcb
jo
cli
pop
sahf
in
test
mov
mov
inc
fimuls
fsubrs
gs
lret
inc
cmpl
sarl
or
mov
inc
inc
push
sub
pop
lret
sahf
sbb
mov
loope
adc
outsb
inc
xchg
inc
push
in
jmp
dec
xor
loope
pop
mov
and
or
or
xchg
mov
pop
push
and
or
mov
popa
icebp
mov
add
inc
add
cld
jne
ljmp
inc
sbb
push
jle
dec
adc
cmc
pop
xor
xchg
shrl
out
in
mov
adc
push
cmp
addr16
xor
lret
fdiv
loopne
dec
leave
inc
push
push
xchg
test
int3
mov
insb
lcall
fucom
lods
pop
outsb
dec
data16
in
jb
test
rcr
enter
bound
cmc
in
loope
les
push
mov
dec
pop
mov
sbb
mov
leave
fistpll
scas
clc
divl
imul
lods
push
clc
repz
jnp
rorb
push
push
mov
adc
sbb
inc
fidivs
enter
nop
adc
adc
lods
inc
mov
test
fnsave
add
jl
leave
push
out
cmp
in
into
dec
mov
fdivs
enter
add
or
leave
mov
mov
add
shl
push
jle
in
and
pop
lods
in
hlt
lret
ror
xchg
cmp
int3
lahf
popa
test
int3
or
sbb
loope
push
xor
loopne
add
lret
mov
arpl
fists
sub
xchg
test
pop
mov
clc
imul
mov
cmpl
pop
shll
arpl
mov
xor
inc
decb
mov
xchg
jnp
test
push
jo
outsb
or
and
cs
insb
mov
cld
incb
int3
repz
mov
xchg
les
xchg
fsubrl
ret
stos
test
fstpl
nop
repnz
fwait
ret
ljmp
mov
cltd
xchg
and
repz
push
push
mov
enter
es
inc
shrl
or
xchg
shrb
jb
mov
ljmp
jno
sub
cltd
fs
and
insb
cwtl
les
jbe
das
sbb
dec
pop
outsb
jae
xchg
adc
out
inc
insb
pop
mov
inc
jbe
arpl
push
mov
cld
loopne
mov
xchg
outsb
inc
lret
cli
push
idivl
in
insb
ja
pop
jl
push
add
leave
scas
insb
pop
jns
imul
inc
dec
in
sub
sbb
test
dec
and
sub
loope
movsl
clc
xor
es
push
dec
mov
pop
pop
push
test
divl
ss
pop
leave
insb
xchg
shll
stc
pop
shll
sbb
negb
cs
push
mov
mov
movsb
pop
cmc
push
cltd
js
xchg
icebp
addr16
ja
push
add
jle
cs
pusha
push
repnz
stc
in
cs
js
popf
testb
adc
mov
mov
sbb
or
daa
cmp
je,pn
lods
std
cmpsb
insl
sbb
push
or
pop
xchg
push
xorl
js
xchg
shll
add
inc
repz
loope
mov
jmp
ja
jnp
mov
mov
arpl
fwait
loopne
mov
mov
xor
pop
pop
add
adc
xchg
test
dec
lods
ret
std
mov
outsb
sahf
sbb
cld
shrl
mov
or
test
in
push
mov
and
ret
std
or
add
fadds
mov
loop
adc
mov
pusha
mov
pop
nop
out
jne
dec
ret
lcall
sbb
es
dec
test
cmpsb
cmp
xchg
push
sub
popf
inc
pop
sbbl
adc
xchg
shl
leave
xchg
jle
sub
or
in
dec
jle
cmp
mov
sub
inc
dec
inc
ds
stos
leave
minps
xchg
movsl
dec
mov
add
fsts
xlat
ds
mov
jns
shlb
sbb
xchg
sbb
ljmp
push
mov
cli
not
rclb
xor
addr16
imul
in
xchg
les
ss
sub
sub
mov
test
xor
inc
xlat
xchg
push
lcall
cli
popa
mov
pop
lret
or
cmc
jmp
testb
bnd
pop
mov
scas
xor
std
mov
sbb
xchg
sbb
enter
pop
fnsave
jne
push
loopne
or
xchg
pop
and
popf
gs
in
mov
inc
jl
out
je
and
loop
arpl
repz
inc
push
xor
mov
ja,pt
cmp
loop
mov
clc
hlt
pop
ljmp
movsb
gs
movl
push
es
mov
sub
mov
add
test
mov
iret
int3
pushf
icebp
lods
adc
adc
cmpsb
out
popf
jp
push
pushf
pop
mov
aaa
xchg
cld
adc
mov
fs
in
push
pop
movsl
dec
sub
rcll
outsl
mov
mov
addr16
lds
ret
sub
iret
ret
or
pusha
outsl
xor
clc
call
sub
je
push
fmuls
or
out
dec
ljmp
clc
psadbw
loop
cmpsl
sub
inc
dec
mov
cmp
ja
jl
push
jb
mov
stos
cmp
arpl
cmpsl
xchg
sbb
mov
sub
sbb
orb
sbb
outsb
mov
int
movsl
jl
jg
mov
add
out
insl
xchg
mov
mov
pop
fstl
sbb
dec
stc
lcall
jnp
xor
imul
adc
mov
xchg
pop
mov
cmpsb
mov
dec
mov
xchg
cmpsl
adc
lcall
dec
ret
daa
ret
pop
adc
inc
xchg
xor
call
incb
rol
inc
push
sbb
mov
mov
adc
push
and
adc
push
outsl
dec
repz
in
addr16
dec
and
mov
fwait
pop
jle
loope
jge
xorb
mov
mov
or
pop
jbe
jge
jno
xchg
xor
dec
xlat
inc
dec
push
sub
inc
sub
scas
sub
push
es
out
sti
push
stos
jle
in
pop
int
xchg
iret
adc
outsb
jno
push
ljmp
and
adc
push
arpl
imul
pushf
push
dec
sub
push
imul
jb
push
push
leave
test
cmpsb
jns
dec
mov
mov
jecxz
dec
mov
jbe
mov
sub
js
xor
mov
cld
xor
and
xchg
loop
cmp
or
jmp
roll
mov
jbe
rcr
fld
inc
pusha
jnp
mov
mov
addr16
push
pop
push
xor
push
sbb
sub
mov
addl
push
mov
test
inc
fsubrp
mov
imull
inc
in
fisttpll
pop
and
mov
packuswb
add
jecxz
lret
mov
xchg
or
jl
mov
pop
xchg
inc
inc
pop
xchg
jmp
sub
dec
scas
or
rorb
dec
imul
sub
cmp
add
iret
inc
jp
shlb
int
jno
fisttpl
icebp
into
out
or
popf
mov
inc
and
xchg
or
ja
inc
pop
jno
xchg
dec
xor
out
and
jmp
leave
sub
ds
dec
fs
rcrb
test
inc
in
daa
and
mov
lret
call
sahf
ljmp
shr
aad
inc
mov
adc
mov
jp
insb
out
cmp
int3
inc
movsl
pop
in
xchg
xor
inc
cmc
insl
loope
sub
js
test
and
test
adc
or
cmp
inc
cmp
cwtl
aas
xor
push
mov
push
roll
stc
sub
inc
das
mov
rorb
mov
sbb
add
mov
filds
cmpsb
cmp
xor
dec
scas
ljmp
fs
addr16
repnz
gs
int3
dec
frstor
push
mov
adc
push
pop
push
lahf
in
mov
push
pop
nop
into
sbb
inc
cmp
cmp
call
clc
dec
push
or
mov
inc
mov
mov
int
lock
pop
jns
scas
push
outsl
mov
and
sbb
jo
pop
push
int
pop
push
sub
andb
loopne
xlat
fwait
dec
unpckhps
scas
lock
pop
jmp
sbb
xor
mov
push
pop
jecxz
push
mov
mov
je
in
inc
int
adc
shrb
fcompl
sub
mov
mov
ret
lods
inc
loopne
enter
mov
repz
mov
and
jne
lret
xchg
iret
pop
testl
call
into
xor
pusha
push
psubusb
lds
mov
push
cltd
xchg
jp
cmpsl
std
imul
aad
push
mov
pop
hlt
imul
stos
jae
cmp
or
or
jp
adc
es
scas
insb
pop
mov
pop
dec
loope
mov
adc
lea
popf
pop
sub
fsts
mov
push
mov
sub
test
mov
out
test
fucom
pop
cmp
and
aaa
xorl
or
fldcw
cmp
sbb
mov
mov
dec
mov
aaa
orl
aam
xchg
dec
jo
xchg
repz
push
gs
mov
stc
leave
inc
xchg
incl
roll
subb
repz
popa
and
dec
sbb
insl
jl
sub
cltd
and
daa
add
jle
int3
mov
mov
and
lds
cli
push
aaa
mov
ror
enter
sahf
movsl
repz
call
fildl
add
ja
test
idivb
add
adc
jne
int3
ds
inc
add
mov
sbb
test
pop
loopne
push
stos
shl
push
push
adc
roll
xor
xchg
aas
dec
ds
sub
mov
mov
mov
xor
ljmp
sarl
inc
sbb
imul
sub
pop
ds
sbb
test
push
in
push
scas
push
loop
pop
mov
adc
push
pop
and
insl
imul
ss
jl
xchg
cli
mov
or
add
test
dec
lock
xchg
push
mov
cwtl
mov
out
push
push
mov
cmpsl
popf
pushf
bound
inc
loopne
insl
ds
adc
cmp
pop
xchg
xchg
xor
outsl
xor
pop
aam
rorl
jb
popf
mov
loopne
mov
sti
dec
sbb
addl
mov
add
lea
fcoms
jo
clc
and
idivb
fsts
std
pop
adc
sahf
test
mulb
jmp
call
jle
inc
lret
and
pushf
lds
push
shll
insb
mov
mov
mov
mov
movsl
jo
add
rep
jne
push
push
jb
sbb
sbb
ljmp
mov
inc
jge
pop
pop
xlat
mov
or
pushf
xchg
pop
push
and
insb
aad
aam
xchg
test
mov
xchg
pop
mov
cmpsl
sbb
dec
cmp
inc
jo
cwtl
pop
rcrb
xorb
shrl
mov
js
xorb
mov
xchg
dec
jecxz
fndisi(8087
sbb
lods
decb
cmp
ljmp
decl
pop
shrl
and
push
loop
les
mov
cmp
cld
jns
push
push
mov
and
mov
and
and
scas
test
adcl
aaa
fildl
faddl
xchg
stc
mov
addr16
imul
shl
jg
mov
cltd
es
das
and
mov
dec
repnz
push
inc
ret
jno
jecxz
cli
flds
sti
pop
sub
mov
in
into
jb
jmp
test
lcall
adc
mov
inc
ljmp
cmp
std
or
call
push
mov
pop
xchg
andb
imul
mov
inc
or
mov
loopne
and
push
mov
pop
and
movsb
ret
ljmp
mov
jb
push
pushf
push
cmpsl
es
addb
pop
out
cmpsb
out
mov
out
int3
aas
or
movd
pop
mov
cmpsl
hlt
push
and
fcmovne
pop
add
jg
ljmp
mov
pushf
push
jae
stos
mov
stc
sarb
scas
outsl
popa
repnz
or
insb
mov
add
sbbb
sbb
arpl
stos
inc
xor
adc
jb
push
adc
stos
adc
scas
sbb
cmp
xorb
in
test
lcall
sti
dec
jl
enter
enter
aas
mov
es
out
daa
imul
inc
shl
push
push
repnz
add
lock
hlt
push
aad
pop
push
aaa
mov
mov
sbb
pop
lret
enter
or
pop
or
es
movsl
mov
mov
mov
xlat
gs
or
cmpsl
inc
and
jmp
sbb
stos
and
dec
mov
mov
and
pop
shr
ljmp
jns
mov
bound
cld
out
mov
xor
sub
xchg
pop
loop
xchg
js
aam
add
jno
pop
sbb
fistl
lret
cmpsb
and
enter
xchg
and
scas
loopne
clc
add
adc
imul
push
pushf
lea
mov
das
movsl
insb
pop
adc
insb
cld
mov
mov
popa
mov
stos
imul
add
mov
cmpl
xlat
mov
ret
shlb
xchg
imul
pop
cmpsl
dec
dec
pop
push
ds
lahf
or
jno
lret
and
outsl
xchg
xlat
and
aas
fidivl
add
cmovo
stos
lret
cmp
push
aam
bts
cmpsl
push
lods
dec
mov
jle
je
nop
cs
negl
or
pop
xor
push
test
cmp
jg
inc
mov
fildl
pop
add
sbb
pusha
or
sbb
popa
fimuls
push
cld
out
ret
pop
in
push
cmp
pop
outsl
imul
daa
cmpsl
lret
dec
xor
mov
push
scas
inc
push
mov
movsb
lret
dec
fildl
adc
mov
inc
outsl
dec
jge
cltd
faddl
fcoms
gs
lock
sbb
add
xor
cwtl
pop
dec
stos
fcoml
adc
sbb
test
xor
stos
or
xchg
xchg
mov
in
adc
shr
sti
daa
cli
movsb
xchg
mov
sbb
jmp
mov
mov
jo
inc
push
cmp
sub
pop
cmp
mov
and
inc
inc
jmp
inc
lret
jo
push
aad
mov
push
pop
mov
mov
arpl
stos
rorb
mov
xchg
jbe
xchg
push
jae
sub
add
sbb
mov
push
inc
adc
leave
xor
mov
fidivrl
pop
inc
jl
sbb
imul
iret
push
cmp
test
test
punpckhdq
out
fistpl
push
fstp
lds
dec
push
jg
xor
and
in
inc
pop
aad
sar
mov
xor
mov
cli
dec
lcall
jle
jns
and
popa
sub
lret
scas
inc
fs
outsl
out
jle
adc
jmp
mov
stc
les
jnp
clc
add
mov
jne
aad
jmp
enter
sbb
sti
mov
sbb
into
and
daa
cmpsl
inc
mov
mov
inc
mov
push
dec
bnd
or
adc
repnz
test
shll
sub
lret
ljmp
mov
cmp
les
xchg
ljmp
ret
push
sbb
shrb
aaa
lahf
mov
sahf
mov
jne
xchg
aam
mov
jl
dec
aad
jbe
adc
insb
pop
testl
jle
xchg
pop
fwait
pusha
pop
push
movsl
fs
cmp
je
lcall
iret
popa
push
push
aam
mov
packssdw
sub
mov
push
sbb
mov
add
and
cmpsl
or
movsb
test
andl
idivl
xor
into
push
repnz
sbb
jne
hlt
jmp
cmpsb
cmp
inc
mov
cmp
mov
or
jge
in
js
clc
xor
and
mov
adc
add
push
stc
es
mov
idivl
pop
adc
sbb
sbb
add
int3
je
imul
rcrb
cmp
sub
mov
pop
pop
cmc
movsl
movsl
ret
inc
adc
es
mov
insl
mov
jno
ljmp
jno
fistpll
jecxz
xor
cld
test
idivl
iret
push
mov
das
mov
push
and
inc
add
nop
mov
xor
es
sub
fidivrl
pusha
jle
in
stos
sbb
or
and
cmp
fldl
pusha
cmpsl
pop
lods
out
das
pop
sahf
mov
js
mov
inc
jmp
inc
lods
lds
pop
dec
cld
xlat
fisttps
xchg
js
dec
stc
xor
dec
call
jnp
cltd
pop
ss
ds
adcl
mov
xchg
addb
outsl
mov
testb
lods
push
inc
xchg
and
movswl
add
inc
cwtl
stos
adc
cmpsl
pop
pushf
or
mov
push
negb
cmp
shll
sti
mov
and
fcmovb
mov
cli
mov
loop
hlt
arpl
inc
pop
popf
orl
mov
and
dec
cmpsl
fucom
popa
int3
pop
insb
adc
in
mov
xchg
mov
cltd
push
sub
sbb
adc
push
int3
lods
pop
xchg
and
mov
shr
dec
inc
insl
outsb
add
pop
arpl
clc
sahf
inc
push
nop
push
pop
pop
sbb
pop
rclb
out
push
sub
cmp
fs
sbb
cmpsl
jnp
into
insb
pop
out
jmp
negb
jne
stos
fldenv
or
imul
aam
pop
loop
into
jns
es
dec
jecxz
std
inc
repz
rorl
jecxz
mov
push
loop
dec
cmpsb
icebp
pop
xor
popl
addr16
icebp
mov
clc
sbb
aad
fcomp
fnstcw
ret
inc
sbb
sub
jo
pop
testl
inc
dec
test
mov
and
lods
out
inc
clc
and
ss
popa
and
dec
lods
lret
jnp
into
std
outsl
xchg
jmp
int3
aam
inc
push
cmc
addb
cwtl
xchg
mov
insl
cmp
add
mov
movsl
cmp
ljmp
sahf
inc
xchg
movq
jno
push
arpl
inc
jbe
mov
sub
sbb
dec
inc
jp
fcompl
mov
lods
push
enter
push
add
pop
push
fadds
sbb
push
dec
xor
dec
rcrb
popf
loop
outsl
xchg
lret
andb
scas
xor
mov
xor
jne
seto
outsb
neg
sub
sub
jecxz
mov
clc
cld
xchg
sub
dec
add
cld
inc
mov
fmuls
in
mov
test
outsl
mov
call
and
push
push
sar
punpckldq
xchg
fidivl
and
jecxz
imul
adc
fbstp
pop
adc
mov
pop
cmp
stos
pop
mov
mov
jecxz
pop
jne
lock
enter
xchg
pop
cmp
cmpsb
ljmp
test
xor
push
cmp
sbbb
pop
xchg
loopne
mov
pusha
idivl
enter
jns
les
pop
out
xlat
testb
lahf
xlat
push
call
imul
pop
or
out
addr16
pop
ror
jl
subl
jmp
loop
or
mov
xor
pushf
xor
push
jnp
or
pusha
icebp
push
aad
and
iret
ds
jmp
or
rcrl
testl
daa
jmp
sbb
add
sub
xor
stos
stc
pop
push
add
gs
movsb
mov
int3
out
push
xchg
pop
push
call
in
cmp
insb
sbb
fmuls
cld
addr16
int
js
xchg
addr16
mov
sub
std
xor
sub
xchg
mov
in
sbb
mov
mov
gs
and
ja
xor
mov
std
pop
cs
cmpsb
xchg
dec
jae
mov
dec
mov
xor
ljmp
in
or
addr16
pop
xchg
push
scas
andl
test
pop
adc
pusha
mov
cmpsb
ret
test
in
in
aaa
lock
mov
inc
cltd
lods
imul
icebp
adc
cmp
call
divl
idivl
cli
xchg
in
je
xchg
xchg
repnz
jp
dec
es
pop
rclb
sahf
out
int3
imul
fwait
cmpsb
mov
lods
outsb
and
mov
lock
pop
jnp
cmp
cmp
jbe
in
into
cld
ss
sbb
ss
cli
sbb
loope
pop
pop
movsb
outsl
adc
in
fsubs
push
fisubl
aas
into
in
sbbb
cld
pop
inc
je
mov
mov
adc
test
dec
out
js
mov
lods
xchg
dec
pshufw
test
inc
pop
sbb
pop
jb
mov
pop
cmp
mov
popf
ror
xchg
std
adc
maskmovq
testl
jp
shl
push
out
push
addb
push
dec
fidivrs
push
pushf
add
sub
fnstcw
scas
cmc
inc
mov
sar
fcom
lahf
fs
cmp
div
dec
ds
pop
xchg
outsb
sarl
lds
jle
push
fimuls
pop
inc
push
mov
add
mov
dec
fs
in
das
test
imul
inc
or
sbb
scas
mov
cmp
scas
adc
sub
out
not
adc
push
repz
xchg
in
sahf
stc
mov
ficomps
jp
inc
rclb
or
int
mov
dec
aad
je
mov
lods
dec
test
adc
mov
cwtl
xor
jne
mov
shrb
inc
sub
mov
call
fistpll
pop
test
in
scas
push
mov
int3
sbb
lahf
loop
adc
int
adc
movsl
pop
ja
jle
dec
mov
mov
inc
and
test
push
cmp
jnp
repz
jns
popf
cmp
xchg
les
imul
cmp
fisubrl
cmc
ret
mov
test
arpl
push
or
cmpb
and
adc
add
dec
cs
cmp
pop
scas
add
rol
inc
pop
out
and
jmp
bound
pop
jns
lods
ljmp
mov
mov
dec
mov
into
mov
imul
pop
or
jp
cmp
ds
dec
cmpsl
inc
and
mov
lods
loopne
mov
sbb
js
add
rclb
pop
mov
pop
clc
pop
les
mov
enter
jns
adc
xor
fwait
and
inc
inc
test
fs
add
jno
hlt
shl
mov
out
xor
xorl
xor
xchg
mov
ret
push
jg
rclb
loope
out
mov
test
daa
mov
add
adc
fidivs
sub
mov
sbb
dec
sbb
test
push
cmc
xchg
lds
sub
mov
leave
inc
mov
xlat
jbe
pop
jae
ja
ja
inc
out
nop
imul
pop
outsb
out
popf
mov
sbb
fwait
mov
dec
xor
iret
out
sub
sbb
hlt
arpl
sub
sti
inc
xchg
mov
lahf
call
and
clc
xlat
mov
ljmp
sub
push
dec
mov
push
push
outsl
sarb
jmp
adc
fsubs
pop
mov
sbb
repnz
clc
sbb
shrl
inc
jnp
inc
enter
push
push
subl
sub
stc
les
or
dec
shl
popa
xchg
sub
addl
xchg
push
xlat
mov
or
xor
flds
pop
mov
pushf
pushf
orl
xchg
mov
inc
pop
pusha
dec
inc
les
inc
mov
clc
repnz
stos
ss
cltd
or
sti
data16
call
jno
shrl
xchg
or
sub
std
and
fs
jbe
fs
pop
into
cltd
or
add
dec
cmp
cld
in
dec
push
imul
out
outsl
xor
or
xor
ljmp
pop
pusha
mov
mov
xchg
test
pop
mov
lahf
stos
enter
outsl
sbb
data16
rcrl
dec
pop
fiadds
pop
imul
gs
mov
aaa
adc
int
xchg
dec
jnp
cmc
mov
jno
push
adc
clc
xchg
popf
sub
adc
inc
inc
rol
in
push
mov
xor
outsb
push
push
and
xchg
jecxz
adc
stc
push
aam
addr16
test
pop
cmp
push
sub
dec
sub
daa
xchg
fmul
icebp
scas
jle
push
in
jmp
or
jo
jb
xchg
adc
cmp
mov
inc
call
fs
hlt
xchg
sub
daa
data16
push
je
dec
xor
pop
push
jno
or
js
repnz
inc
adc
push
pushf
rcrb
test
pop
dec
cmp
shrb
mov
lahf
xchg
pop
lcall
xchg
and
cmp
inc
pop
ss
jl
cld
xchg
inc
inc
mov
pop
lret
xchg
scas
ja
imul
sub
sub
pusha
outsl
add
and
in
jb
clc
mov
je
mov
mov
ljmp
dec
xor
clc
mov
jns
adc
and
cli
loopne
or
or
test
sbb
xor
push
mov
loope
lods
cld
test
fadds
sub
ss
and
sbb
sti
cmp
mov
sub
adc
mov
in
push
mov
mov
es
out
lcall
lea
sub
ja
pop
shl
inc
push
ja
cmc
adc
mov
xchg
cmp
xlat
sub
sub
enter
outsl
jge
mov
imulb
pushf
dec
push
sub
hlt
mov
mov
stos
xor
mov
add
jl
dec
mov
push
mov
adc
test
repnz
repnz
mov
jp
lods
mov
mov
sbb
mov
add
fwait
aas
in
or
mov
dec
lds
ds
std
cmp
into
xchg
pop
icebp
mov
ret
add
pusha
leave
repz
pop
push
ss
lcall
sbb
push
pop
les
lock
cmp
add
inc
and
clc
push
jb
jb
cld
rclb
sahf
inc
loopne
mov
lcall
pop
movsb
sbb
pop
cmp
push
and
lahf
es
lods
lret
pushf
jb
sub
shlb
cmp
add
cmp
mov
ja
jo
shlb
dec
jb
hlt
js
sbb
mov
adc
ret
call
xchg
fistpll
sbb
xchg
inc
mov
stos
call
cmc
pop
xchg
xchg
stos
add
adc
popa
and
jl
leave
js
sbb
fwait
cmp
lret
add
or
sbb
bound
imul
pop
and
ret
push
stos
test
pop
xchg
mov
cmp
dec
popf
cmp
insl
ljmp
mov
or
adc
sub
or
cwtl
rclb
in
mov
shlb
in
or
push
fcmovb
add
jle
push
cmc
add
cmpsl
sti
mov
adc
adc
ds
in
push
rcrl
sub
sub
pop
jo
inc
sbb
sub
mov
je
dec
xor
insb
cli
mov
adc
mov
mov
xor
sahf
es
fwait
xchg
pop
pop
frstor
cmp
mov
pop
cmp
imull
dec
fldl
mov
je
rcrb
jmp
scas
es
fcomp
pop
loope
and
pop
and
inc
push
jle
fbld
movsb
mov
adc
je
hlt
enter
movsl
pop
fsin
inc
outsl
mov
ds
arpl
add
push
push
jp
mov
mov
jecxz
icebp
jge
push
cmp
clc
xor
push
aaa
jmp
mov
test
out
arpl
pop
sub
pop
cmp
mov
jae
sub
xor
lock
or
pop
cwtl
push
mov
xchg
mov
ljmp
mov
jnp
sbb
fdivrl
jo
xchg
movsl
imul
fs
mov
stc
int3
jns
ja
pop
sti
mov
push
or
scas
adc
insb
les
sbb
leave
add
je
mov
pop
pop
fisubs
adc
mov
xor
mov
cmp
jl
inc
mov
push
ds
js
and
dec
cwtl
cmpsl
bound
add
pusha
inc
inc
or
push
sbb
push
xchg
add
daa
cli
out
mov
aaa
push
or
lods
sub
es
nop
pop
mov
lcall
lock
fs
ds
dec
mov
jbe
ret
add
xor
xchg
insb
gs
mov
inc
cli
stos
xor
sbb
int
dec
dec
jns
cmp
jmp
ret
xor
xor
arpl
repnz
sbb
jmp
adc
dec
adc
fsubl
test
dec
and
addr16
rclb
imul
and
xchg
pop
pop
pusha
cmp
ficomps
mov
sbb
sbb
sub
push
mov
movsb
xor
in
hlt
and
cli
inc
fistps
add
pop
aaa
mov
cmp
cmpsb
imul
adc
les
out
jnp
mov
push
xchg
in
aaa
mov
pop
daa
adc
sub
arpl
jbe
mov
inc
insb
sbb
and
cld
daa
test
es
inc
or
jno
pop
sbb
mov
or
add
iret
mov
rcll
xlat
mov
and
nop
ljmp
mov
nop
loopne
int
lea
movsl
dec
pop
fcmovnu
jle
and
fsubl
xchg
adc
ret
jg
mov
out
fistps
std
sahf
fsubs
aas
pop
mov
add
insl
sti
push
fs
fcmovb
inc
xchg
dec
push
xchg
xchg
xchg
xchg
cmp
popa
les
adc
in
movsb
data16
je
stos
loop
inc
lret
clc
adc
mov
push
adc
mov
lahf
xchg
push
ljmp
or
popa
and
sub
sarl
sub
adc
mov
pop
inc
xor
inc
cmp
sub
in
xchg
or
fs
xor
addb
out
arpl
gs
lret
add
in
and
sub
sti
aam
push
and
dec
hlt
leave
sub
jns
cmpsl
mov
push
add
mov
repz
adcl
or
inc
mov
cltd
test
cld
dec
mov
push
lret
sahf
imul
jle
xchg
lea
mov
cmp
std
dec
mov
iret
pop
fisubrs
outsb
adc
xor
xchg
sub
rcl
pop
mov
imul
push
scas
cmp
dec
push
jmp
lret
popa
out
sahf
pop
inc
lret
lcall
mov
jge
fsubrp
and
rcrl
daa
mov
sub
mov
and
popa
push
shrl
xchg
mov
adc
pushf
pop
or
addr16
pop
adc
movsb
pop
jmp
ret
test
dec
inc
mov
out
pop
adc
cmp
andnps
stos
mov
mov
adc
push
cmp
xor
popa
repz
pop
sbb
iret
adc
lds
into
mov
lret
mov
jno
push
pop
jns
jge
icebp
ret
sbb
pop
cmpsb
xor
dec
or
in
jl
jbe
dec
bound
xchg
push
pop
push
je
jle
mov
pop
jle
pop
dec
sbb
nopl
mov
mov
jl
cmpsb
cli
cmc
push
in
adc
std
jecxz
xlat
cmpb
out
or
pusha
and
or
and
jnp
notl
cli
pop
mov
loop
mov
pop
pop
jae
jae
hlt
mov
inc
hlt
dec
imul
out
arpl
stc
and
shrl
inc
fisttpll
jae
push
push
sbb
dec
push
mov
dec
mull
pusha
xchg
push
push
out
pop
mov
ficoms
pop
inc
fidivl
imul
sub
push
movsb
xor
pop
or
hlt
cld
jle
scas
push
lahf
aas
mov
mov
mov
and
addr16
xchg
aas
xor
dec
adc
xlat
dec
jbe
loope
scas
shlb
gs
daa
aaa
sbbl
jns
mov
cmp
imul
mov
jle
sbb
test
out
bound
add
in
fisubrs
push
loop
aad
add
outsb
lods
pop
in
in
sbb
mov
sahf
hlt
sahf
lahf
scas
arpl
push
daa
add
mov
or
cmc
rcll
cmp
mov
addr16
pushf
insl
pop
sub
es
movsb
imull
fdivrp
orb
jp
jae,pn
xchg
std
popa
or
sti
xor
enter
ja
scas
outsl
call
fcmovu
lods
xchg
mov
ficoml
push
xchg
arpl
int
test
sbb
fwait
scas
pop
mov
cltd
lcall
cs
dec
cmp
stos
cmp
rcl
insl
add
movsl
mov
inc
repz
and
cmpsl
iret
jl
mov
inc
xchg
and
call
pop
pop
sbb
inc
je
adcb
lret
lea
pop
and
cli
mul
lret
popf
mov
cmp
lahf
sub
mov
fsts
scas
mov
lahf
push
xchg
mov
fdivr
xor
ds
xchg
aam
xchg
cmpsb
cmp
xor
test
aad
cmp
mov
shr
and
inc
inc
xchg
mov
and
jp
sub
push
inc
cmc
inc
loop
gs
and
cmpsl
lea
pop
adc
scas
push
dec
pop
cli
adc
push
add
cmp
lock
mov
lret
lret
and
daa
xlat
dec
faddl
pop
xor
pop
test
add
xlat
outsl
movsb
std
sti
int3
mov
sarb
cli
xchg
out
push
scas
test
mov
daa
jbe
mov
sbb
jne
xchg
push
mov
in
xor
mov
shl
loop
xchg
xlat
lods
mov
push
inc
mov
sbb
test
les
pushf
fildl
leave
cmp
scas
rclb
cmc
loopne
imul
cmp
mov
out
sbb
and
fnstcw
xor
dec
test
stos
cs
lret
imul
or
dec
add
cwtl
jg
and
cld
daa
push
jmp
lods
or
lea
cltd
lods
sahf
mov
lret
loopne
mov
cmp
dec
fstl
or
inc
lock
scas
push
shlb
add
push
xchg
mov
cltd
or
sti
enter
or
xchg
adc
loop
sub
fsubrs
add
adc
lods
xor
or
sub
into
cmp
mov
fidivrs
sbb
cli
pop
in
mov
mov
adc
add
lcall
jl
ret
xor
push
jne
inc
mov
arpl
jnp
and
and
lds
testl
xchg
mov
loop
sbb
cld
negl
mov
andl
fucomp
in
cmp
cmp
loop
jmp
mov
inc
loop
cmp
jno
subl
out
inc
popa
std
pop
xor
test
clc
ds
lods
addl
aad
pop
sub
repnz
dec
fcomps
movl
xchg
and
mov
add
test
add
stos
add
cmp
and
xchg
sub
in
stc
and
mov
ss
sub
mov
shll
movsb
mov
xor
sbb
divb
or
aaa
shll
adc
in
aas
push
xor
xchg
xor
cmp
mov
stos
cmpsb
or
xchg
mov
pop
push
adc
test
into
and
pop
in
add
orl
xorl
mov
sarb
push
sbb
xor
fwait
test
and
lret
pop
popf
loop
add
fldl
lods
sub
in
out
out
fisttpl
push
insb
bound
icebp
xor
jae
mov
push
jmp
mov
cmp
out
loop
ret
das
push
mov
push
aaa
jns
jg
lock
dec
test
mov
or
fs
fwait
or
mov
std
and
cmp
push
ss
and
xor
repz
add
pop
iret
shlb
aam
fistps
pusha
mov
iret
ds
push
pop
ret
jle
mov
or
iret
mov
push
pop
mov
mov
push
cli
or
mov
fbstp
int
adcb
xchg
dec
and
pop
js
mov
int3
push
jmp
jl
jge
sbb
push
add
mov
iret
subl
popf
rorb
jb
pop
lret
adc
pop
pop
sarl
and
add
or
mov
out
les
adc
add
adc
mov
inc
jl
xchg
push
fadd
jbe
sub
int
js
jle
sub
jmp
das
sbb
inc
loopne
inc
loop
inc
lea
push
loopne
or
mov
or
sub
xor
push
dec
mov
cmc
mov
adc
mov
in
xor
movsl
outsl
pop
xor
data16
jl
aaa
sbb
in
dec
pextrw
dec
fidivrl
adc
and
lods
add
inc
sbb
adc
les
rclb
add
icebp
xchg
arpl
sub
mov
imul
pop
sbb
sub
adc
sub
jl
adc
popf
and
aam
out
xor
push
inc
jl
imul
in
es
mov
std
shrl
lcall
loop
mov
int
jmp
or
xchg
test
sti
mov
mov
push
mov
cs
xor
inc
nop
cmpsb
xchg
jnp
push
add
push
mov
push
mov
inc
xchg
xor
sbb
pop
adc
fadds
xchg
pop
pop
cld
sti
lock
in
inc
or
int
sub
dec
mov
sbb
or
pusha
insb
rdpmc
sbb
cmpsl
fsubrs
xchg
jnp
add
aaa
call
loop
mov
nop
inc
push
mov
jo
out
stos
sub
sub
xor
xchg
cli
cmp
lock
xchg
sub
lds
cld
dec
mov
pop
rcr
ds
aaa
push
push
mov
pop
pop
rol
cmp
loope
rcll
cmp
out
dec
pop
jbe
or
xlat
addr16
mov
mov
cwtl
ret
cmpsb
testb
dec
popa
imulb
adc
lods
jbe
pop
or
cmp
adc
out
push
cmpb
dec
call
push
xlat
lahf
ja
mov
or
int3
xor
vcvtpd2dqx
pusha
adc
push
mov
rorb
adc
mov
sub
and
push
cld
mov
aam
jne
dec
lahf
nop
mov
mov
out
dec
jno
pushf
pop
lds
sbb
imul
insl
ss
loop
pop
cmp
mov
pop
dec
xchg
insl
lret
jb
and
mov
dec
jo
mov
inc
add
inc
push
cmp
mov
pop
in
lahf
xchg
stc
sub
push
les
mov
xchg
dec
addb
shr
fidivs
push
loope
add
cmp
push
jp
xchg
fdiv
sahf
add
fstl
fs
pop
in
mov
mov
ret
gs
xchg
imul
xlat
fcmovb
icebp
adc
mov
and
jne
cmp
jo
repnz
subb
ficoml
mov
js
xor
dec
pop
sbb
jae
pusha
in
push
pop
scas
sbb
and
rcr
xchg
ret
sbb
fisubrl
xchg
enter
jge
mov
inc
das
xchg
scas
dec
fcomip
inc
push
adc
pusha
fstpt
jo
inc
rcll
aam
dec
lea
je
sub
mov
lret
std
loopne
pop
scas
cmp
lock
movsl
loopne
frstor
dec
les
mov
inc
sbb
push
imul
addr16
imul
inc
stos
aad
inc
inc
push
rorb
jb
xor
sbb
pop
xor
pop
xchg
inc
cmp
fistpl
insl
xchg
inc
jb,pt
mov
out
or
push
sbb
xlat
insb
mov
mov
cmc
bound
js
xor
pushf
sar
fcmovnu
iret
loopne
stos
hlt
sub
cmp
cmp
mov
scas
sub
push
dec
xor
fisttpll
push
decb
mov
sbb
out
test
scas
cld
or
cmpsl
sub
pusha
mov
mov
daa
dec
mov
xchg
or
mov
mov
mov
cli
in
jmp
sub
sahf
nop
jne
sub
sarb
inc
mov
and
clc
sbbb
adc
fwait
adc
xor
repnz
sub
xor
sub
scas
in
cli
cmp
inc
push
cmpsb
and
std
xchg
jp
adc
and
outsb
push
sub
imul
push
xchg
ljmp
lahf
dec
packsswb
bound
sbb
inc
xchg
cmpsl
adc
inc
popl
frstor
mov
scas
mov
ds
push
das
xchg
dec
and
clc
bound
jnp
mov
jecxz
jp
and
testl
mov
ret
sub
dec
call
iret
mov
lcall
jo
xor
add
fisttps
pushf
flds
xor
dec
scas
lods
sub
jns
popa
xor
push
test
xchg
xchg
out
mov
cltd
or
sub
lahf
mov
in
shl
aaa
or
inc
mov
sub
ret
lahf
xchg
inc
cmp
xchg
pushf
cltd
lods
sub
cmp
rclb
loope
and
push
sbb
push
scas
push
jb
xchg
in
jbe
pushf
std
popf
xor
repnz
jg
aas
cmp
jno
sti
sbb
and
repz
scas
or
jmp
pushf
inc
add
aas
out
cmp
xor
sub
ja
pop
js
outsb
lock
dec
jne
popa
arpl
pushf
push
in
mov
push
pop
stos
push
lret
bound
aam
leave
mov
pop
jg
sub
mov
outsl
and
shl
and
addr16
pop
mov
mov
push
or
std
addr16
int
add
pop
out
fcoms
adc
push
adc
adc
mov
fstpl
or
push
inc
mov
dec
cli
aam
xorl
mov
mov
mov
xor
pop
jmp
fsubl
mov
popf
rorl
lret
int
inc
xchg
movsb
repnz
mov
ficomps
gs
pushf
mov
inc
mov
sub
pushf
and
add
js
iret
inc
xchg
ja
xor
sbb
out
test
fcmovbe
cmp
push
filds
out
retw
adc
lcall
push
mov
xchg
or
cwtl
adc
cmp
daa
cmp
xor
push
cs
pop
mov
push
mov
or
clc
das
xchg
fimull
push
dec
jmp
je
mov
cwtl
jns
or
inc
mov
outsb
mov
cmc
leave
outsb
in
xor
xlat
in
mov
or
push
call
xor
jbe
pop
push
push
adc
dec
mov
and
fnstsw
adc
ds
in
pop
sarb
fistpl
sar
cli
dec
push
jecxz
lods
dec
cwtl
mov
pop
fistpl
inc
ja
addr16
dec
jl
insl
sbb
fdivl
ja
cmp
and
mov
pop
gs
adc
hlt
andl
orb
jp
in
and
std
mov
es
lret
mov
aad
insl
and
pop
sub
or
popf
adc
sbb
push
fldcw
push
outsl
stc
mov
outsl
or
scas
jl
repnz
into
sbb
ret
xchg
rcrb
sarb
fstp
push
pop
jbe
divb
shrl
rorb
adc
lcall
int
xchg
jge
adc
push
adc
sbb
lods
ret
ffree
mov
mov
push
mov
or
aas
cmpsl
inc
clc
movsl
in
fidivl
sub
int3
loop
adc
lock
repnz
jge
sahf
cmp
enter
cmp
dec
inc
xchg
adc
int3
orb
xor
push
mov
sbb
pop
mov
call
cmpb
frstpm(287
das
inc
lahf
int
in
xchg
xchg
and
push
lret
mov
or
push
repz
pop
mov
les
mov
cmp
test
ficompl
mov
fwait
imul
adc
sti
shll
loope
dec
xchg
cmc
jg
shlb
loop
in
xchg
daa
adc
push
pop
lods
push
cli
inc
pusha
xor
sti
mov
fwait
push
out
mov
push
cmp
mov
xchg
jbe
and
fadd
es
adc
ficomps
test
dec
test
and
incb
addr16
into
nop
jno
push
in
jmp
loop
mov
call
mov
es
sub
cltd
or
cmp
out
lcall
imul
test
out
push
sub
fwait
int3
inc
ja
pusha
stos
dec
lods
lret
jnp
rclb
sbb
sub
aad
mov
jg
jb
jg
js
enter
xchg
and
xchg
pop
or
in
cmpsb
inc
sub
mov
or
sbbb
inc
lds
xchg
xor
enter
push
push
leave
sar
pop
in
mov
lcall
add
movsb
scas
lea
add
add
xor
icebp
rcrb
mov
outsl
andb
sti
xchg
iret
fdivr
jmp
xchg
sub
adc
push
or
adc
movsb
cmpsl
and
mov
cmpsl
hlt
xchg
dec
rcrl
inc
in
push
adc
mov
push
mov
sub
xchg
dec
push
or
xchg
shll
inc
movsb
sub
enter
fmuls
and
div
mov
and
mov
mov
daa
mov
and
and
dec
fs
mov
movsb
xchg
push
mov
xchg
std
adc
int
out
fcomip
mov
clc
daa
loope
divl
xlat
mov
stc
xor
repnz
fs
mov
mov
sahf
lcall
add
mov
repnz
shlb
mov
jl
arpl
xchg
mov
pusha
in
fcomps
shlb
pop
hlt
sub
inc
mov
xchg
test
aas
sub
push
pop
mov
sbb
sbb
into
pop
jae
and
test
int3
fs
popa
mov
jecxz
push
outsl
mov
fnstsw
mov
ds
dec
scas
stc
pop
pop
gs
or
jg
scas
into
mov
insb
fcmovb
rorl
push
sahf
cmp
jne
sub
daa
pop
ret
sub
fadd
pop
je
bound
cmp
jne
daa
nopl
out
jmp
movsl
adc
xor
pop
cltd
sarl
idivl
popa
jecxz
pop
jg
push
repz
jo
adc
jp
std
sbb
cltd
mov
nop
sarl
xchg
add
sbb
jmp
aam
mov
pop
mov
out
das
or
and
mov
dec
loopne
leave
inc
mov
jp
push
inc
hlt
mov
dec
xchg
jle
add
push
dec
dec
icebp
mov
les
mov
stc
push
xchg
dec
xchg
or
popl
out
sahf
shrl
jnp
sub
pop
jae
bnd
daa
inc
inc
loopne
cmp
jp
scas
xchg
ds
leave
pop
pop
ss
aas
negb
aam
cld
jnp
int
sahf
pop
adc
out
or
ret
jae
mov
inc
or
cmpsl
mov
lock
pop
sub
lahf
lret
and
pop
aas
scas
sbb
mov
sti
pop
fsub
dec
inc
pop
mov
test
rcll
add
ja
pop
jmp
ret
popf
inc
outsb
push
mov
cmp
sarl
jae
push
scas
push
bound
add
mov
cmp
scas
push
fadd
clc
mov
aam
lret
mov
jb
sbb
js
jbe
dec
dec
mov
and
lock
jo
push
inc
dec
into
leave
nop
cmpsl
movsb
stos
mov
outsl
pop
out
imul
dec
outsb
aaa
mov
sbb
cwtl
cmp
mov
ret
out
test
dec
rcrl
cmp
xor
and
dec
push
popa
mov
aas
or
out
popf
andl
push
xchg
cwtl
ljmp
sbb
adcb
lahf
push
cli
push
jmp
movsl
inc
push
sub
loop
mov
dec
orl
and
add
aas
pop
dec
or
and
push
jno
mov
clc
ret
clc
pop
icebp
inc
fwait
insl
dec
pop
dec
fidivrs
lods
jo
jne
enter
fwait
pop
nop
dec
call
cmc
jecxz
push
test
mov
and
shlb
jecxz
gs
add
ret
pop
hlt
enter
inc
push
mov
ret
iret
fwait
movsb
in
xor
stc
jge
in
bnd
jecxz
mov
ss
jl
inc
cmp
movsl
add
inc
xchg
orl
inc
test
cltd
sbb
push
movzwl
adc
fstps
add
loopne
cld
dec
sub
iret
mov
pop
jno
cld
outsb
cmp
pop
fstpt
dec
fnstenv
fidivl
pop
sub
inc
sbb
out
mov
sub
cmp
scas
dec
lock
cmpsb
ja
sub
cmc
mov
clc
mov
ficomps
cmp
inc
arpl
shlb
add
push
lods
mov
push
sahf
mov
shr
daa
aas
inc
mov
adc
or
mov
push
fisubs
daa
fmuls
mov
add
mov
and
int
repz
inc
push
push
adc
imul
pop
setge
xchg
out
pop
xorb
lea
jae
pop
mov
fidivs
jmp
jmp
popf
pop
fisubs
iret
iret
out
mov
xchg
mov
lock
shl
pop
popf
lds
mov
hlt
adc
rolb
sub
ss
cmpb
inc
test
xchg
dec
push
jmp
pushf
xor
lgs
ljmp
push
pop
and
out
dec
lcall
dec
cmpsl
popa
in
mov
arpl
rol
inc
sbb
mov
lods
mov
data16
jl
stc
pushl
outsl
fildl
xchg
imul
cs
loopne
and
jno
fidivs
ss
add
popf
or
fmull
pusha
movsb
sbb
push
xchg
sub
sti
mov
add
dec
inc
adc
call
pop
sub
add
fs
leave
sbb
cld
test
sbb
xchg
bound
push
jo
jle
es
xor
movsl
add
scas
sti
out
pop
and
xchg
dec
lods
loop
mov
sub
ret
inc
jge
fwait
dec
sahf
xor
popa
divl
sar
imul
and
ja
adc
popf
fcompl
loope
outsl
call
repnz
and
mov
push
popf
not
mov
pop
dec
push
mov
or
cltd
jmp
add
inc
cwtl
mov
dec
cmp
xchg
pop
push
mov
stos
mov
addb
sbb
xor
idivb
add
cmp
lahf
inc
sub
outsb
push
jno
pop
shlb
push
fstpt
std
lds
out
ljmp
xchg
ss
sti
jne
cmp
iret
cwtl
ja
dec
add
inc
sub
xor
das
mov
jmp
daa
xchg
sub
clc
scas
mov
js
push
sti
rorl
xor
push
movsl
iret
lods
out
add
addb
es
leave
or
push
and
add
lock
hlt
outsb
pop
in
aas
sarl
lahf
in
stc
xchg
pushw
push
dec
fiaddl
loope
test
test
aad
and
xchg
in
fmul
jns
daa
les
cmp
cmpsb
cmc
jle
into
test
xlat
test
mov
popf
arpl
jb
into
mov
nop
ret
pop
add
mov
cld
test
shl
aas
loopne
xorl
aad
add
mov
test
ror
add
out
sbb
add
inc
and
mov
mov
mov
fmuls
mov
mov
mov
dec
mul
dec
pusha
out
jle
mov
lea
cmc
xor
inc
imul
and
jae
cmpsb
xor
fwait
stos
fistl
repnz
jmp
lret
loopne
dec
xchg
sub
or
icebp
mov
jo
imul
iret
addr16
pop
push
int
or
ja
popf
pushf
pushf
mov
test
lea
cmp
fidivrs
int
lods
cltd
sub
push
jne
sbb
icebp
sub
in
fs
mov
pop
sbb
repnz
mov
out
pop
push
stc
lret
mov
adc
pop
jmp
push
arpl
pop
pop
push
sbbb
jle
imul
xchg
xor
jecxz
ret
pop
cltd
lret
fiadds
push
adc
fldt
mov
sbb
outsl
adc
movsb
mov
push
sti
enter
fpatan
lods
insl
movsl
scas
mov
cltd
mov
mov
dec
test
fnstsw
leave
arpl
lcall
adc
mov
push
xchg
shll
lods
xor
sahf
jge
xchg
movl
sub
lret
in
inc
mov
mov
std
push
popa
std
jg
les
in
into
stc
or
fwait
add
gs
je
jmp
xchg
stc
dec
sbb
icebp
aas
or
mov
xchg
dec
stos
psubb
push
inc
adc
call
mov
add
lock
mov
jo
cmpsb
mov
adc
cwtl
addr16
aaa
jns
mov
cs
pusha
push
pop
das
and
jp
sub
addr16
imul
dec
sub
cwtl
xchg
imul
stos
jae
divl
jbe
adc
mov
mov
ljmp
add
rcrl
shrb
sahf
stos
inc
loop
mov
sbbl
xlat
fildl
cmovns
testl
mov
cltd
pop
ret
cmpsl
setg
mov
ret
pop
sbb
xchg
aam
cli
xchg
cmp
inc
aam
ja
repz
test
sbb
mov
mov
cmp
imul
insl
pop
movsb
push
mov
pop
sub
mov
ljmp
lcall
mov
push
adc
cmp
mov
cli
les
aas
iret
dec
inc
push
push
or
push
fwait
int
test
sbb
cld
inc
fdiv
mov
sbb
lret
cmp
and
adc
jle
test
pop
jg
jno
xchg
cmp
adc
sub
mov
and
xchg
pop
ficoms
sub
popf
mov
and
mov
lock
inc
pop
shrl
jb
sbb
adc
mov
mov
or
cmpl
push
inc
xchg
in
cmp
nop
add
repz
les
push
and
stc
xor
fdivl
scas
mov
addr16
in
lahf
movsl
loopne
mov
xlat
cwtl
fmul
or
lock
mov
in
jmp
dec
push
loopne
clc
adc
pop
cmpl
mov
in
cmpsl
cmp
sub
and
pop
adc
push
loopne
add
push
sbb
loop
push
clc
ficomps
push
out
in
xchg
movsl
and
sbb
fldenv
sbb
xacquire
add
test
mov
scas
in
add
dec
xchg
xor
je
jnp
fmul
jbe
push
mov
stos
je
fisttps
int3
insb
fcomps
test
into
dec
sahf
hlt
test
cmp
bnd
fwait
jb
lret
fs
fistl
pop
mov
int3
sbbl
pop
xlat
cltd
stc
repz
sub
mov
cmp
test
add
dec
or
inc
aas
jl
xchg
cs
push
inc
popl
cmpsl
cmp
cltd
dec
dec
pop
push
cli
test
xchg
cmpsl
int3
sub
cmpsl
out
mov
mov
sbb
jmp
adc
sbb
xchg
pop
lcall
inc
mov
mov
add
in
xor
popa
or
sbb
xchg
cwtl
fiaddl
cld
add
push
inc
aam
xor
dec
push
or
adc
add
cmp
push
in
repnz
aam
dec
int
mov
mov
test
shr
mov
inc
pop
sahf
cmpsb
pop
cwtl
in
fimuls
push
ljmp
pop
jle
sbb
imul
clc
add
inc
fs
cmc
sbb
jp
aad
dec
pop
sub
addr16
insb
adc
popf
fistpll
mov
or
pushf
ja
adc
punpckldq
pop
inc
cmp
fwait
sbb
shll
icebp
or
jmp
add
ljmp
or
test
mov
sbb
mov
inc
and
push
cltd
cltd
sub
imul
cwtl
int
add
repnz
aas
insl
test
add
sbb
push
push
cmp
push
lret
mov
js
mov
xchg
xchg
lret
hlt
pop
and
pop
xor
stos
lods
jns
mov
mov
lea
or
enter
fs
je
cmp
jle
adc
fwait
mov
inc
cmpsb
jmp
cmpsl
mov
jbe
leave
nop
lahf
mov
lret
mov
adcw
clc
dec
testb
add
jle
arpl
or
sti
add
and
loopne
xchg
sbb
push
push
and
not
popa
mov
xchg
nop
add
jp
mov
pop
push
dec
cli
add
sub
lods
in
cli
jmp
mov
and
jecxz
push
fs
sahf
mov
sbb
inc
daa
jge
push
mov
xchg
add
cs
and
xor
pop
loop
pop
lahf
lds
hlt
dec
inc
pop
xor
ja
adc
mov
adc
rclb
and
aam
mov
fucom
adc
cs
jle
daa
je
xchg
in
aad
add
jo
push
testb
test
paddb
or
mov
and
push
push
fdiv
popl
push
and
inc
nop
dec
insb
push
cld
sarb
mov
dec
jl
mov
or
js
shll
sti
push
and
push
stc
sar
popf
pop
bound
cmp
je
out
fs
mov
mov
aas
outsb
inc
repnz
out
push
movsb
rcl
loop
adc
int3
clc
cmp
or
iret
mov
test
dec
outsl
scas
xchg
cli
int
das
leave
inc
xor
es
enter
fildll
fisttpl
mov
sub
pop
cmp
lods
jo
jne
lods
loope
add
das
sahf
push
xchg
add
pushf
ds
fs
lret
in
imul
lock
in
sub
push
out
push
jecxz
mov
and
jle
xor
pop
arpl
cmp
inc
mov
cmc
outsb
add
lds
xchg
popa
in
adc
pop
mov
inc
push
mov
or
add
ljmp
mov
loop
outsl
dec
jo
popl
ds
inc
jle
sub
adc
adc
clc
add
icebp
jp
and
das
int3
push
cmpsl
add
hlt
loop
jne
xor
sub
lods
sbb
loope
insl
jg
orb
pop
into
sbb
int3
fisubrs
cmc
out
jno
popa
cltd
fnsave
sub
push
add
lock
hlt
cmp
out
mov
fwait
inc
sub
imul
mov
outsl
dec
scas
scas
mov
push
mov
inc
rclb
fldl
xchg
jg
hlt
mov
mov
fdivp
dec
jp
mov
js
sbbl
fnstcw
sbb
mov
jge
add
test
cmp
out
mov
sub
xchg
je
and
push
movsl
sub
out
loop
pop
mov
push
fmuls
add
or
xlat
addb
pop
push
mov
cmp
es
add
in
je
sbb
ljmp
cmp
jae,pn
adc
fldcw
dec
repnz
popf
jo
scas
push
notb
pop
mov
popf
test
enter
ljmp
aad
das
mov
mov
inc
ret
in
lods
pop
rcrb
sub
test
xlat
pop
add
insl
int3
lods
scas
loop,pn
jo
jae
sahf
mov
movsl
adc
rorl
mov
xchg
fwait
in
insl
cmp
nop
and
inc
jmp
subl
xchg
xlat
je
push
ret
ret
orb
mov
fsubr
jne
inc
or
iret
lcall
lds
jmp
inc
pop
inc
add
mov
mov
push
push
jg
sbb
mov
enter
nop
loopne
in
xchg
imul
inc
imul
es
mov
pop
js
mov
sub
movsl
lods
pop
and
fiadds
add
int3
dec
test
push
roll
fcmovne
popf
push
pop
push
jp
test
xchg
push
lret
jbe
pop
das
mov
dec
clc
jp
test
loopne
cli
in
adc
jle
hlt
divl
inc
jbe
repnz
push
sub
fwait
inc
cwtl
mov
adc
pop
insb
inc
shlb
dec
nop
fucomip
pop
jg
jnp
ds
xlat
pop
fwait
mov
jmp
inc
push
out
stos
push
movsl
add
pop
movsb
push
pushf
lret
lds
dec
and
cmp
jge
ja
imul
outsb
and
inc
aas
mov
push
scas
add
cmc
lods
add
out
lahf
arpl
and
push
sub
out
ror
add
psllq
xorl
cmp
inc
sbbb
mov
mov
or
xor
int3
or
push
scas
jae
lcall
gs
repnz
sub
roll
cmp
sbb
mov
add
cmp
stc
sub
xchg
mov
cmp
sbb
repnz
sub
ljmp
dec
mov
mov
mov
xchg
mov
inc
and
lret
adc
out
outsb
add
add
mov
jge
fiadds
repz
shlb
lods
aad
ljmp
in
dec
xor
xchg
mov
push
andb
clc
inc
and
roll
int3
push
xor
lock
or
inc
xchg
clc
xchg
xchg
ljmp
aas
outsl
dec
inc
dec
insl
pop
pushf
mov
push
sti
mov
outsl
es
inc
rorl
jecxz
je
ret
dec
cmp
sahf
pop
imul
and
mov
sarb
xchg
pushf
dec
mov
jbe
push
mov
pop
pop
fdivrl
xchg
inc
fisubs
insb
shrb
aas
xchg
mov
inc
lret
fnsave
lret
push
xor
movsl
mov
outsl
or
std
jb
add
pop
jmp
adc
scas
fsts
pop
sub
or
arpl
fiaddl
mov
lds
ljmp
imul
mov
mov
mov
inc
data16
popf
ss
adc
es
sub
push
lods
hlt
xchg
or
cmp
test
hlt
inc
in
andb
inc
mov
adc
andl
mov
ja
xor
ss
adc
mov
pusha
clc
inc
fwait
mov
out
ret
dec
and
push
subl
mov
lods
mov
aas
fdivrp
aad
push
mov
arpl
jnp
xchg
mov
mov
hlt
dec
jbe
ret
or
mov
movsb
es
adc
popf
jo
outsb
jns
sbb
pop
and
in
add
xor
fsubs
rclb
out
xorl
std
lret
pop
ss
out
cmpsb
fsubp
jmp
pop
enter
bound
gs
rcll
aam
xchg
daa
jnp
pop
cmp
push
cmp
js
xchg
dec
adc
je
neg
mov
pop
movl
loop
ret
push
add
movb
lea
outsl
adc
inc
sub
in
mov
fdiv
orl
and
mov
xchg
test
jno
mov
dec
loop
xor
mov
scas
mov
mov
sar
xchg
sbb
ja
xor
inc
jo
pop
sub
sub
outsb
arpl
push
cmc
jge
das
sbb
lods
scas
mov
inc
cwtl
xchg
push
loopne
fsubr
push
mov
jno
in
outsb
and
mov
xchg
jae
jg
push
push
sbb
hlt
leave
mov
pop
scas
int
push
xchg
ljmp
lock
enter
lds
daa
stos
les
out
sub
or
jno
sub
dec
fcomps
pushf
pop
cltd
out
fsubp
clc
out
add
xlat
xchg
xlat
xchg
xor
push
mov
cmp
jmp
xor
lret
jge
int
push
push
in
out
push
adc
sub
lahf
jnp
mov
lods
test
cmp
clc
clc
inc
mov
and
sub
addr16
js
and
negb
loopne
mov
xchg
enter
pop
or
movsl
ret
mov
xchg
inc
mov
ret
jp
jp
mov
sub
adc
inc
cltd
imul
jae
outsb
push
xor
popa
xchg
add
or
sbb
jno
and
adc
or
mov
loopne
xor
mov
pusha
xor
jne
addl
add
jae
mov
idivb
gs
dec
mov
pop
xor
inc
fsubrl
sub
mov
adc
xor
nop
decl
pop
lea
stos
push
jge
dec
in
add
clc
icebp
pop
stos
push
test
idivb
lret
adcb
cmc
cli
inc
pop
sbb
and
movsl
jge
sbb
or
xor
test
lret
aas
dec
xchg
fmul
push
stos
push
movsl
adc
lcall
clc
mov
mov
xchg
andb
in
pop
lret
xchg
cwtl
mov
push
sbb
loope
shlb
jmp
scas
mov
es
rolb
lods
mov
mov
adc
dec
mov
push
stos
outsl
xor
fimull
pop
push
int
sub
xor
loope
ds
out
sub
jle
popf
dec
repz
std
lods
pop
stc
inc
push
inc
xor
sbb
das
cmpsb
stc
pop
mov
mov
out
fildll
mov
cmc
fwait
aas
insl
cmpsb
lds
sarl
mov
sbb
mov
inc
sub
push
testl
repz
out
stc
pop
pop
adc
add
or
ja
mov
jge
mov
xchg
jmp
loop
jb
mov
cmp
jmp
std
cs
cwtl
xchg
pop
cmpsb
cltd
push
jns
ds
pop
add
mov
insl
push
pop
or
push
in
jge
je
adc
nop
loop
mov
sbb
inc
call
push
imul
adc
outsb
sbb
push
daa
mov
push
mov
sub
insl
pop
mov
sub
ret
insl
or
push
btr
std
cmovno
and
cli
add
xor
push
inc
lret
into
push
movsb
pusha
push
sti
jne
jns
fldl2e
sbb
mov
movsb
or
push
adc
add
ret
ljmp
jbe
outsb
pop
ds
push
in
lret
push
and
sbb
stos
jp
clc
mov
mov
mov
popf
ret
and
cmpsl
mov
iret
adc
icebp
int3
rorb
push
mov
mov
xchg
mov
ret
jmp
or
mov
push
jl
movsb
lock
inc
cmp
js
sbb
add
mov
cli
out
aad
aam
cld
sbb
stc
decb
jmp
pop
loope
fs
jne
xlat
daa
ds
xor
daa
push
pop
sbb
pop
mov
aaa
pusha
jmp
mov
scas
movsl
jmp
cmp
cs
add
xchg
ret
nop
repz
out
pop
pop
outsb
in
mov
cmpsl
push
out
fxch
cmp
sub
into
push
xchg
jbe
lds
mov
xchg
jmp
mov
addr16
fists
jecxz
inc
adc
repz
add
inc
cmp
fs
adc
hlt
fcoms
and
ja
mov
enter
popl
sbb
jbe
aam
jns
and
mov
enter
js
cltd
xchg
mov
xchg
adc
cs
int
mov
inc
ficoml
in
and
mov
mull
pop
push
pop
sete
int
mov
arpl
lods
pandn
inc
inc
mov
mov
mov
jne
shlb
ret
or
pop
ds
out
int
int3
in
push
cmp
push
add
popa
jg
lret
inc
mov
imul
push
fiadds
xor
cmp
stos
adc
inc
mov
pop
fildll
enter
and
mov
mov
mov
frstor
push
subl
loope
jne
pushf
pop
mov
loope
call
imul
adc
jo
and
fs
out
mov
xchg
rorl
popa
inc
add
and
rcrb
push
inc
int
push
nop
mov
pop
jnp
movsl
mov
fbstp
sbb
fsub
jbe
jne
jns
rcrb
inc
xor
lahf
shll
sub
sbb
mov
fstl
test
rorl
mull
clc
or
or
sbb
loope
and
cmp
nop
jb
pop
cmpsl
insl
and
pop
push
jecxz
subb
das
xchg
nop
leave
out
out
stc
imul
inc
or
inc
jns
outsl
pop
push
add
sbb
divl
sub
push
pop
pusha
cmpsb
lods
inc
add
cmp
popf
and
stos
pop
mov
sub
sub
mov
inc
sbb
cmp
lahf
bound
jns
cld
cltd
arpl
stos
inc
push
lret
out
pop
xlat
clc
pop
mov
sbb
loope
daa
idiv
xchg
arpl
jge
cli
jnp
pushf
push
dec
imull
inc
sbb
stc
popa
jnp
inc
xchg
dec
pop
pop
jle
mov
lods
cs
stos
aam
sub
out
mov
xchg
pusha
daa
aad
rcrl
add
inc
andb
xchg
repnz
aam
push
ret
lahf
stos
lds
popf
aad
jl
jle
sbb
inc
inc
pusha
mov
or
jns
jmp
pop
mov
push
in
fadd
pop
push
cmp
sub
rorl
out
nop
xlat
mov
push
pop
out
xor
shlb
adc
mov
in
test
arpl
xchg
xorb
stos
jns
mov
inc
jnp
sbb
fcmovnu
pushf
lods
call
pop
aas
push
jb
add
push
lods
sarb
dec
mov
fisttpl
xor
cmc
or
aad
xchg
clc
push
cmp
sub
adc
in
adc
mov
cltd
mov
ret
ds
sub
pop
dec
push
add
les
daa
lcall
movsb
jae
sub
aas
test
jge
xor
inc
xor
int3
push
mov
xchg
ret
flds
mov
adc
fwait
xchg
xchg
outsb
outsl
daa
jp
fwait
lods
pushl
ja
je
lret
stos
fists
mov
das
lcall
mov
int3
out
sbb
pop
xchg
icebp
mov
insl
sub
fwait
xor
sbb
movsl
aad
addl
ja
push
addr16
data16
les
jb
hlt
sub
js
ljmp
push
in
das
mov
dec
mov
push
or
cmp
ss
sbb
jae
sahf
sbb
mov
mov
jge
mov
cmp
stos
std
jmp
mov
mov
js
add
xor
imul
push
lret
jmp
mov
push
mov
icebp
stc
mov
test
inc
addl
pop
lock
repnz
sub
ret
mov
mov
inc
push
addb
adc
add
into
out
jmp
mov
push
lahf
ss
mov
lcall
or
dec
das
mov
aam
xchg
cmpsl
push
cmp
fisubs
and
dec
ss
hlt
xor
loope
and
test
lahf
xor
fstpl
rolb
nop
rcr
mov
dec
sbb
idiv
jo
fdivl
stos
push
dec
imul
sub
lods
out
ret
jnp
sub
rol
shll
inc
call
and
inc
pop
shr
div
xlat
aas
leave
sub
and
push
push
xor
jns
out
inc
movsl
mov
mov
pop
xor
int3
pusha
cmp
lods
ret
mov
js
pop
fisttps
push
enter
xor
ja
dec
sub
adc
mov
psraw
bound
mov
inc
into
mov
lcall
insl
shrb
push
loop
das
jg
pushf
xor
mov
aas
fsts
sub
and
jno
loop
or
dec
inc
cmpsb
adc
bound
or
dec
movsb
test
pop
fiaddl
mov
jb
mov
add
xchg
ss
sbb
sub
xlat
decl
pop
shrl
push
stos
popa
xchg
cmpsl
xchg
inc
cmp
xchg
aas
lahf
insl
ret
ffree
jmp
xor
add
sub
lret
mov
lret
cmpsl
push
repnz
popa
call
add
dec
call
dec
call
push
mov
loop
fcoms
push
int
test
cmp
daa
jns
inc
daa
sbbl
movsl
xorb
dec
neg
shl
xchg
ljmp
mov
in
mov
push
sub
mov
nop
leave
mov
incl
dec
out
jae
in
add
xchg
xchg
inc
lds
out
repnz
push
icebp
lret
adc
scas
test
out
add
int
frstor
or
sbb
xchg
addr16
mov
fisubrs
idivl
mov
imul
icebp
pop
dec
jmp
sbb
pop
lock
jnp
or
mov
out
and
lret
jecxz
jbe
loope
jbe
mov
mov
movsb
shrl
jne
mov
sub
mov
es
imul
loop
xor
dec
sub
ud1
clc
mov
mov
sti
jae
adc
xchg
ss
arpl
dec
sti
outsb
jl
or
iret
faddp
adc
cli
push
jmp
scas
into
ja
movlps
test
ror
dec
mov
imull
add
and
push
stc
sbb
mov
add
jae
xor
ss
aam
leave
adc
push
adc
test
jmp
loop
push
sbb
jle
mov
xchg
das
ss
xor
xor
ljmp
xor
sbb
imul
dec
mov
push
jge
and
inc
push
jno
mov
insl
inc
fdivs
sti
in
cmpsl
or
sub
enter
jae
dec
repnz
lcall
out
inc
insl
not
jno
push
mov
sbb
jl
test
lds
sti
in
and
mov
cmp
movsl
inc
mov
data16
mov
xchg
dec
cwtl
jno
fsubrs
popf
mov
leave
fmulp
mov
inc
xchg
and
adc
loopne
fildl
mov
cmp
mov
lcall
or
cmp
mov
test
mov
jo
xor
mov
cmpsl
push
inc
in
scas
popa
iret
pushf
add
mov
sbb
xor
mov
mov
in
adc
xor
push
xchg
stc
mov
lret
outsl
sbb
fidivs
arpl
dec
sbb
leave
dec
jl
idivb
ds
xchg
cmpsl
xor
out
pop
mov
fnstcw
arpl
xchg
mov
aas
scas
pop
ja
dec
sub
jecxz
inc
sub
or
mov
repnz
cltd
rorb
push
mov
sub
pop
adc
lods
and
cmp
jno
jmp
or
cmp
cmp
adc
xor
xchg
loope
ja
pop
rolb
push
lret
test
jnp
inc
push
js
or
xor
jmp
stc
lahf
jbe
jo
in
cmp
push
fiadds
loope
mov
or
imul
std
sar
lss
mov
lods
stos
xor
sahf
pop
sbbl
iret
aam
xchg
and
sub
stc
xor
jge
inc
pop
pop
cmpsb
andb
rolb
int3
lcall
mov
cwtl
mov
mov
jle
stos
xor
daa
fisttpll
in
popf
jg
push
nop
xchg
add
les
sbb
xchg
xchg
cmp
jae
cmp
push
cltd
imul
push
insl
mov
and
xchg
lahf
hlt
xchg
pop
shlb
adc
gs
insl
iret
mov
inc
aaa
cmpsb
jp
shll
adc
xchg
push
cmp
pop
pop
addr16
fstl
pop
arpl
mov
push
cmp
or
stos
repnz
aam
pop
sub
out
les
stc
lcall
pop
mov
clc
xchg
push
push
repnz
bound
fidivl
imul
movsb
cmp
dec
mov
pop
xchg
or
jmp
adc
push
push
popf
imul
add
fimull
out
cmp
mov
testb
dec
push
repz
push
sbb
imul
pop
call
or
movsl
das
inc
lods
and
xor
pop
dec
mov
rcrl
mov
fisttps
in
push
ret
push
xchg
push
cltd
or
call
push
dec
add
push
sub
lock
shl
mov
leave
cli
fwait
shrb
in
adc
jl
cwtl
mov
pushf
fsubl
mov
rclb
cltd
mov
pop
xor
in
add
push
les
mov
dec
in
mov
iret
hlt
and
aaa
mov
addr16
mov
mov
mov
mov
out
sbb
lds
roll
popa
cmp
sbb
mov
jnp
cmp
and
mov
mov
in
out
pop
in
jg
xchg
jecxz
pop
xlat
rcrl
xor
mov
aam
out
add
or
bound
adc
outsl
or
jle
and
pop
std
mov
xor
xor
dec
stos
jbe
mov
es
fisttpll
lods
push
sahf
mov
inc
js
cld
push
jo
lock
mov
add
je
jmp
or
cmp
push
add
cmp
paddd
and
xchg
rorb
rorl
and
jecxz
xchg
lods
std
sahf
shlb
sbb
fwait
mov
sub
pop
outsl
and
inc
ljmp
sahf
sti
mov
stos
negb
jl
icebp
sbb
testl
or
or
movsb
push
inc
and
mov
sahf
loopne
sub
add
mov
push
jne
cmc
das
fwait
xchg
stc
movsb
push
pop
xchg
mov
add
rorb
clc
jns
sbbb
push
sarb
dec
stos
fs
push
fwait
insb
adc
outsb
mov
adc
lret
daa
lock
out
jne
cwtl
mov
adcl
or
inc
dec
fwait
sub
inc
rcrb
cli
mov
imul
in
mov
sub
imul
jmp
shl
inc
test
cmp
daa
js
push
inc
pop
popf
adc
pop
xchg
dec
test
fists
inc
dec
sub
call
ss
sub
adcl
popf
fistps
ds
repz
mov
xor
aad
push
in
or
in
inc
dec
xor
jp
cli
sbbb
fidivrs
loope
fmull
mov
push
jge
ja
xchg
adcl
cmp
push
fistl
push
mov
push
mov
in
outsl
lock
xor
outsl
and
stos
pop
pushl
mov
inc
push
cmpsl
sti
clc
xor
fistps
jo
jbe
adc
shrb
xor
std
std
dec
loop
and
nop
popf
xchg
mov
ret
inc
dec
insb
xlat
push
in
mov
xchg
pusha
fstps
xor
and
push
inc
jge
xchg
inc
dec
push
or
pop
inc
push
test
sub
cmp
sbb
insl
or
sub
add
cmp
push
ds
push
imul
mov
lahf
sub
jp
int3
es
or
or
stos
int3
xchg
pop
inc
pop
xor
addb
mov
sub
mov
addr16
loop
or
lods
sbb
mov
pop
shrb
push
xchg
mov
int
fnclex
mov
xchg
fidivrl
sub
push
inc
filds
loope
adc
xchg
pop
aaa
jp
mov
and
fisttpl
xchg
sub
pop
iret
test
cmp
mov
lea
mov
jmp
sbb
nop
movsl
push
outsl
adc
daa
cmc
mov
arpl
nop
adc
cld
lods
mov
mov
idivb
ja
iret
jns
inc
and
popa
fsubrl
pop
gs
push
cld
mov
push
add
aaa
sbb
in
lea
add
or
xor
lcall
add
add
sub
adc
jl
mov
out
lods
sbb
sbb
and
adc
sub
icebp
call
push
cmp
clc
lcall
dec
fimuls
mov
jecxz
mov
sbb
dec
lock
int3
inc
and
cltd
inc
movsl
movsl
lds
mov
test
aas
xor
jns
lret
pop
decb
and
ljmp
std
nop
sub
xchg
ret
xor
in
fildl
fwait
pop
pop
andb
stos
xchg
xchg
enter
sarb
bound
fwait
enter
or
inc
mov
jp
insl
cmpsb
aas
add
dec
lods
orb
pop
andl
adc
dec
je
add
xchg
push
movsb
mov
shl
imul
push
rorb
loop
mov
fucomp
mov
int3
scas
push
add
lcall
pop
xchg
mov
add
inc
lods
sbb
jne
sub
stc
jl
add
pop
loopne
cmp
adc
cmp
cmp
fwait
rolb
notb
sti
jae
in
cli
fucomi
cmpsl
push
sbb
jle
frstor
or
inc
popf
or
or
addr16
sbb
enter
pop
mov
fisubs
sub
sbb
lds
lahf
push
loop
aas
xchg
pop
xchg
shrb
sub
mov
pop
mov
pop
mov
adc
jp
es
mov
das
add
loop
mov
mov
mov
ds
jecxz
push
cli
cmpsl
ja
cmp
dec
inc
lods
mov
sub
dec
fidivrs
dec
mov
repz
mov
test
pop
aaa
inc
xor
stos
push
jne
jecxz
xor
test
add
push
pop
rcrb
xor
sbb
shrl
lcall
test
mov
dec
or
dec
pop
lock
jnp
mov
pop
push
je
fldenv
ljmp
das
imul
xor
fcomps
push
xchg
push
movsl
xchg
aaa
push
int
or
daa
and
das
aas
imul
mov
mov
inc
bound
imul
xchg
mov
pop
jl
or
negb
jae
repz
sub
jl
shrl
inc
test
mov
xor
cmp
dec
cltd
mov
js
in
into
push
sti
into
pop
insl
lea
stc
das
mov
leave
and
dec
aas
push
aaa
data16
gs
dec
pop
mov
mov
rcr
or
lea
xchg
mov
inc
mov
stc
sbb
mov
dec
mov
add
mov
incl
icebp
xor
jae
push
pop
jge
inc
out
addb
shl
cmp
mov
stos
jnp
xchg
sub
add
out
fdivrs
insb
fsubr
sbb
adc
in
scas
inc
xor
je
sub
in
sub
int
incb
cmp
insl
lods
sbb
pushf
rorb
bound
xlat
sbb
fldcw
je
xchg
nop
cmp
sub
cmp
testb
andb
loopne
fistl
mov
mov
ja
push
movsl
jbe
test
enter
adc
popf
inc
mov
cld
pushf
hlt
out
pop
jns
or
ja
mov
aaa
aad
fwait
sbb
sub
fs
mov
sti
outsb
pop
adc
inc
out
dec
bound
in
push
les
xlat
dec
xchg
pop
jecxz
mov
shrl
int3
jle
imull
or
xchg
outsl
lods
xor
mov
adc
push
andl
adc
shr
scas
scas
pusha
mov
lcall
and
mov
adc
enter
cmc
mov
push
fistpl
rcll
inc
test
mov
pop
dec
repz
and
mov
xor
push
push
sub
stc
movsl
lds
cmp
xchg
dec
test
push
push
movl
out
inc
or
xchg
in
xor
stos
mov
pop
ficoms
imul
xchg
or
in
sub
ljmp
popl
pushf
and
jp
bound
loop
jmp
mov
je
nop
movsl
jp
sahf
push
divb
pop
jne
cmp
clc
mov
stos
lods
addr16
movsb
loope
and
adc
pop
es
mov
pop
adc
jo
mov
ficoms
js
dec
lods
in
mov
test
scas
lock
or
mov
lea
repnz
decb
pop
js
sbbb
xor
je
imul
cmp
lahf
xchg
andl
cmp
cmp
xchg
adc
ja
fnstcw
xorl
dec
cmc
dec
cmp
lock
xor
dec
lahf
add
stos
adcb
mov
arpl
imul
neg
add
sub
jl
jo
and
inc
lds
cli
rolb
add
fs
xor
test
cltd
cmp
xchg
jae
mov
push
gs
pop
andb
cmp
bound
sbb
dec
mov
mov
ret
inc
hlt
pop
imul
daa
scas
xchg
jg
mov
aad
pop
cmp
xchg
out
sbb
fsubr
lret
nop
lea
int3
inc
dec
inc
dec
sbb
xor
jecxz
add
and
and
xchg
lods
lea
pop
sub
mul
addl
pop
push
add
pop
sub
inc
sub
out
rorb
mov
fldt
mov
das
das
lods
and
sar
pop
fcmovnb
mov
jmp
data16
lret
out
xchg
repz
clc
jo
adc
int
out
je
xor
loope
lock
arpl
add
out
in
imul
fyl2x
push
add
scas
repnz
rcrl
jae
imul
cmp
inc
sub
pop
int3
pop
pop
fildll
and
shrl
lret
xchg
lods
fs
insb
ret
cmp
mov
xchg
push
cmp
xor
inc
faddl
call
pop
das
dec
mov
push
mov
cmp
ficoms
jno
or
orb
aaa
jo
sbb
xchg
sahf
ret
testb
mov
scas
jbe
mov
and
cli
or
cld
and
mov
test
out
jb
mov
sbb
xchg
mov
dec
add
and
push
lea
std
sub
ret
cmp
js
cmc
into
js
or
lea
les
lahf
pushf
int
test
cmp
test
popa
jno
and
or
ss
push
fldcw
ret
adc
dec
pop
les
inc
xchg
push
mov
sub
mov
xchg
xlat
imull
jge
cmp
lahf
mov
dec
sahf
push
inc
sahf
sub
inc
imul
fs
aam
add
or
sbb
pop
cmpsb
push
stc
pop
push
cmpsl
fcomi
gs
or
inc
xchg
fiadds
jmp
pop
hlt
xchg
ja
je
pop
lods
dec
fidivs
sbb
repnz
push
jnp
stos
xchg
mov
adc
in
shll
outsb
test
and
sahf
xchg
sbb
adc
mov
xor
gs
repz
rep
cwtl
push
loopne
push
jge
add
cwtl
xor
nop
xchg
call
xchg
aad
popa
cli
sbb
push
repnz
insb
orb
icebp
or
pop
daa
xlat
inc
cmp
sbb
push
lcall
pop
xor
mov
call
lahf
cli
or
pushf
or
xor
mov
gs
or
sbb
or
cmpsl
pop
sbb
cmp
lock
jmpw
inc
or
incb
jp
mov
addr16
and
movsl
lock
mov
inc
repnz
int3
xor
arpl
inc
fiadds
arpl
mov
jb
stc
fwait
mov
fidivrl
cmp
mov
mov
adc
xchg
jno
mov
or
mov
clc
sar
inc
jb
test
inc
lea
pop
inc
mov
inc
insb
test
sti
enter
lods
out
or
mov
mov
repnz
ja
outsl
shlb
add
out
popa
pop
add
pop
fwait
mov
cld
inc
and
fiadds
pop
jae
into
fcmovnb
out
or
mov
pusha
pushf
mov
dec
mov
scas
cld
and
jno
into
fsubrs
ror
adc
cld
and
not
jge
and
aam
jb
inc
sbb
push
dec
pop
push
stc
mov
jnp
dec
pop
inc
inc
jne
test
cmp
ds
mov
addr16
scas
cld
mov
adc
xor
sahf
out
std
push
outsb
std
sahf
insl
aaa
jge
sahf
pop
lock
cmp
adc
mov
add
mov
test
and
cmp
xchg
enter
cmc
push
xor
or
xchg
aad
xor
aam
mov
std
mov
movsb
js
push
ficoml
sar
jb
push
mov
add
lahf
inc
jo
cmp
xor
sub
loopne
in
add
lea
movsl
and
stos
cmp
mov
nop
outsb
push
mov
imul
jp
cltd
scas
repnz
jnp
mov
jl
movsb
inc
nop
cmp
mov
mov
dec
jle
out
cwtl
or
inc
loope
pop
sbb
ss
dec
push
cmpb
add
sbb
dec
jnp
scas
and
stc
enter
mov
push
gs
icebp
sbb
add
pop
cmp
and
cmpsl
add
push
out
cs
xchg
adcb
sbbl
pop
mov
jecxz
ds
jge
sbb
jae
fcoml
scas
mov
mov
sahf
or
shl
jne
data16
jl
xor
sub
dec
roll
mov
inc
test
inc
loopne
sbb
mov
or
mov
ja
scas
lcall
sub
cli
xchg
mov
mov
jns
sub
push
cmp
xchg
xor
repnz
mov
lcall
leave
aaa
xorb
xchg
call
pushf
or
cmpsb
or
nop
inc
xchg
or
stos
ret
ret
or
pop
scas
pop
adc
jecxz
mov
mov
xchg
shlb
movsl
sub
lea
gs
xorl
mov
das
fsubl
mov
push
outsl
mov
retw
sub
cmp
push
push
adc
jg
pop
repz
fcomps
and
push
sbb
sub
shlb
push
out
flds
and
out
mov
dec
xchg
push
call
int3
mov
jbe
test
add
cmp
sbb
sbb
push
pop
jb
add
sub
and
test
sub
jecxz,pn
aad
inc
dec
rolb
and
push
lods
or
gs
lods
lock
cmp
nop
pop
cmpsl
fucompp
mov
dec
or
and
aam
call
jg
jb
mov
scas
or
push
xchg
and
jne
push
push
xor
call
int3
nop
ret
rorb
jno
cmp
pop
xor
push
push
add
movsl
mov
xor
js
clc
test
cmp
jnp
sub
test
insb
lcall
out
mov
jne
push
xor
shl
out
outsl
pop
inc
cmc
jb
mov
mov
decl
in
fimull
mov
in
xlat
jb
imul
idivb
adc
mov
jecxz
dec
sbb
jb
imul
add
lds
hlt
lods
ss
push
pusha
jle
fdivl
jo
lret
pop
fadds
mov
push
sbbb
mulb
sub
add
sbbl
popa
push
dec
dec
cmp
sub
icebp
pop
pop
cmp
push
pop
mov
mov
movsl
mov
fdivrs
scas
js
push
or
daa
arpl
das
inc
mov
mov
inc
inc
insb
pop
sbb
outsb
cmp
fisubs
ja
xor
call
lret
xor
pusha
out
sbb
fmuls
mov
jl
daa
dec
jle
sub
mov
in
and
aaa
push
subl
lock
xor
cld
mov
jmp
cmp
addr16
sbb
cmp
and
movsb
push
sbb
xor
cmpsl
out
mov
loope
fs
cmp
dec
add
andb
cmp
xchg
mov
push
scas
jno
mov
mov
sub
mov
or
jl
push
gs
xor
push
dec
les
mov
mov
dec
ljmp
xchg
inc
pop
fcmovb
push
outsb
pop
adc
and
imul
cli
push
out
outsl
mov
mov
mov
mov
loopne
lods
cmc
out
or
add
adc
lcall
xchg
sub
cmp
or
mov
mov
cwtl
call
push
loope
xchg
and
jp
sbb
sub
fadds
popf
stos
inc
daa
push
cmp
leave
mov
rclb
notl
leave
lods
aad
lea
mov
popw
mov
xorl
push
jno
lock
popf
stos
fs
lcall
les
sbb
hlt
mov
mov
mov
imull
jp
mov
test
xchg
xor
fdivrl
cmp
movsl
adc
fsts
adc
rcll
repz
lock
add
mov
jp
mov
jns
dec
scas
ja
cmpsb
inc
jecxz
inc
push
dec
rorb
jno
push
or
cmpsb
sbb
and
cwtl
add
sub
fisttpll
and
pop
mov
mov
xchg
xchg
mov
cli
push
pusha
inc
cmp
mov
mov
push
ljmp
sbb
dec
mov
repz
fdivr
push
sbb
int3
push
insb
xchg
mov
dec
dec
push
xor
sub
cs
dec
mov
in
pop
loop
pop
mov
pushf
fnstenv
loopne
daa
inc
fstpt
cwtl
les
pop
and
dec
mov
fdivrl
aad
xor
push
lods
jmp
test
test
sub
scas
mov
gs
lea
js
cmp
loope
add
repnz
fbstp
dec
pusha
inc
cmp
jb
in
jnp
or
add
cmp
shlb
scas
mov
in
xchg
pop
ret
jle
and
out
fdivs
out
subps
pop
fcoml
stos
lcall
fdiv
sub
mov
xchg
cld
xchg
cmp
shrb
mov
adc
test
add
mov
ds
cmp
lds
or
or
sbb
inc
and
mov
pop
xor
push
popa
mov
lcall
mov
pop
aam
jns
add
mov
xchg
pop
adc
sub
pop
adc
xor
pop
jle
jmp
in
inc
sub
ds
out
test
ljmp
out
xchg
push
jg
pop
clc
repz
sbb
jae
pop
test
notb
pop
inc
or
out
ret
repnz
in
add
test
xchg
xor
dec
outsl
cmp
ljmp
adc
or
push
push
cmpl
in
ret
mov
sub
cmpsl
outsl
mov
jno
cld
mov
push
push
and
push
jmp
movsb
das
sbb
sbb
pop
jp
mov
xchg
jae
or
aaa
test
aaa
push
mov
gs
jne
add
pop
arpl
es
dec
adc
in
lock
frstor
nop
xor
cmc
out
cli
outsl
ret
test
shlb
adc
xchg
test
mov
imul
insb
aas
fdivrl
and
or
mov
adc
daa
inc
mov
push
mov
testl
xor
cs
dec
js
inc
cmpsl
xchg
dec
or
mov
sub
loopne
cmp
testb
nop
mov
into
cmpsb
xchg
imul
mov
inc
cmp
aas
cmp
jnp
xchg
mov
dec
xchg
call
movsl
ljmp
jae
repnz
out
sbb
fmull
in
jae
dec
loopne
jno
cmpsl
or
mov
shrb
mov
inc
out
push
mov
sti
test
cmc
nop
push
sbb
lahf
lret
pop
fwait
dec
stos
xor
mov
pop
xorb
xor
mov
iret
stos
in
fwait
push
mov
jne
popf
popa
mov
push
nop
out
push
or
ds
imul
andl
adc
pop
scas
test
into
push
sti
addb
mov
jle
ljmp
jne
mov
sbb
xor
stos
mov
movsl
in
mov
test
ret
pop
mov
setg
cmpsb
mull
cmc
shlb
push
aaa
insb
sub
ds
xchg
mov
xor
aad
loopne
fidivrl
dec
aad
push
push
pop
inc
mov
enter
inc
mov
sbb
and
cmp
mov
pushf
inc
in
inc
or
scas
test
fnstsw
loopne
jge
pop
mov
inc
cmp
rol
cmp
push
iret
mov
mov
repnz
inc
loopne
cwtl
test
fbld
jo
test
popf
clc
call
dec
add
mov
nop
movq
lret
pop
stos
add
outsb
inc
mov
jae
sbb
and
leave
and
push
fwait
pop
and
or
xor
cmp
nop
xchg
imul
repz
stos
lods
jmp
lahf
out
mov
inc
mov
mov
add
repnz
aam
andb
push
add
and
repz
adc
sub
mov
adc
dec
dec
fwait
addr16
or
insl
sbb
cmp
adcl
dec
test
insb
xor
xchg
lds
hlt
jnp
aam
outsb
adc
aaa
or
pop
or
inc
jbe
fnstcw
jae
add
mov
or
insl
clc
insl
pop
jge
out
cmp
jae
loope
dec
jle
xchg
lods
inc
stos
sahf
mov
ret
inc
mov
clc
outsb
mov
repz
ss
test
out
jns
js
test
sub
sbb
or
push
lods
popf
xchg
lret
pushf
sbb
or
push
icebp
add
cmp
stos
add
mov
xlat
div
into
pusha
fs
mov
fisttpll
push
jecxz
arpl
out
mov
fcmovne
mov
sub
dec
inc
or
jl
xor
pop
sti
loopne
add
or
cli
and
sbb
hlt
sbb
jbe
mov
daa
ret
gs
push
adc
or
adc
out
pop
scas
in
sub
faddp
xchg
xlat
jo
or
and
mov
outsb
dec
in
pop
lods
es
rcrb
es
lcall
gs
sbbl
sarb
dec
xchg
rclb
adc
or
mov
mov
inc
cmp
push
imull
mov
pop
xor
push
sbbb
push
push
daa
push
mov
out
add
sub
mov
addr16
dec
addl
cli
std
popa
sti
sbb
in
mov
lods
add
mov
xchg
flds
daa
aam
jmp
pop
in
sub
mov
into
dec
add
inc
xchg
scas
ret
in
pop
mov
pusha
inc
mov
xchg
adc
push
loop
lods
sti
gs
mov
pop
jecxz
xchg
dec
test
in
or
or
cmpsl
lods
cld
in
enter
lahf
push
test
sbb
pop
int3
inc
xchg
mov
add
adc
fmul
mulb
xor
xorb
push
add
out
inc
xchg
sbb
fcmovbe
testb
mov
xor
mov
jl
jno
dec
rolb
mov
out
and
clc
push
pop
ficoml
movsl
rorb
dec
add
or
jae
dec
fsubs
dec
ss
sub
xlat
shl
or
mov
sbb
sahf
icebp
xchg
sbb
ss
mov
push
std
cwtl
jmp
mov
fs
sbb
clc
outsl
popa
lock
inc
das
mov
push
adc
push
dec
lea
sti
dec
inc
pusha
cltd
fnstsw
daa
push
push
mov
jae
mov
or
into
addr16
ret
adc
out
push
mov
fsubl
adcl
ret
mov
test
cwtl
js
and
adc
pop
jb
mov
out
cmpsb
fdiv
xchg
cmp
dec
cs
mov
mov
jns
add
sub
add
mov
test
dec
fildll
icebp
mov
jle
and
cmpsl
ror
outsl
sarl
or
jmp
xchg
pop
insb
jmp
pop
outsb
negl
xchg
mov
shlb
loop
ds
int
xor
into
xchg
in
jl
mov
fcoml
sbb
lods
dec
loop
jl
lds
movsl
sti
mov
jo
or
sub
or
adc
inc
cmp
test
jne
dec
fs
dec
nop
scas
out
xor
std
sbb
outsb
jno
jbe
dec
xchg
pop
aas
cld
stos
mov
cmp
fldt
mov
or
push
xor
jbe
xchg
lods
sbb
arpl
ds
icebp
popa
popf
and
dec
aad
add
mov
sbb
in
pop
push
scas
sub
icebp
mov
out
repz
push
mov
cmpb
popf
sbb
mov
jbe
addr16
jnp
lock
psubw
sub
jns
add
in
ret
icebp
dec
push
ljmp
subl
aam
pop
inc
pop
push
and
scas
mov
inc
decb
jnp
scas
inc
pop
addr16
outsl
and
mov
insl
pop
push
lcall
mov
iret
rol
enter
push
or
xor
sbb
cltd
flds
fldenv
aas
jmp
or
imul
push
pop
nop
xor
daa
pop
enter
test
ret
loop
ret
add
push
push
mov
aaa
bound
shl
and
dec
or
push
pop
in
les
push
call
sbb
cmp
insb
outsl
add
push
jg
xorw
cld
add
popf
push
leave
fistpl
sub
add
outsl
sahf
mov
fsubr
fadds
movsb
xchg
or
out
push
mov
jns
xchg
mov
scas
add
cmp
mov
jecxz
stos
sahf
scas
jmp
adc
cmpsl
inc
fst
mov
test
dec
pusha
push
xchg
ljmp
xor
mov
jge
pop
shrb
rol
xor
adc
mov
loope
xchg
push
sbb
roll
xchg
scas
pop
jl
mov
push
fnstcw
or
movsb
cli
lret
add
and
rclb
lods
inc
push
pop
xchg
out
scas
ja
pop
sbb
les
repz
je
jecxz
out
loop
std
mov
add
jmp
mov
sbb
repz
jl
leave
out
push
mov
out
insl
movl
ljmp
cmc
lods
mov
push
push
int
js
lock
dec
ljmp
lret
push
sub
xchg
or
cmp
fmul
add
loop
shlb
arpl
mov
dec
or
int3
cltd
xor
mov
ds
mov
dec
adc
push
sub
ret
pop
push
inc
hlt
lea
fcomip
cmp
pop
mov
pop
iret
mov
and
ret
inc
jbe
adc
pop
or
push
arpl
enter
xchg
mov
cmp
je
in
sbb
lods
sub
mov
sub
jmp
mov
mov
test
imul
adc
mov
dec
xchg
sbb
xor
insb
xor
mov
push
adc
dec
lock
jo
mov
shlb
xchg
jno
pop
or
das
mov
cmc
push
push
mov
mov
sub
lds
pop
xor
mov
lret
int
inc
adc
cmp
out
div
sbb
add
dec
adc
xchg
gs
mov
mov
nop
dec
xchg
mov
mov
cmp
sub
notb
sub
repz
sarl
adc
test
cli
dec
call
xor
in
adc
or
pop
arpl
push
mov
and
pushf
or
jo
aaa
stc
xlat
lret
adc
jb
mov
jp
not
adc
xchg
adc
in
sarb
pop
jge
bnd
xchg
push
inc
cmp
or
divb
scas
iret
mov
inc
adc
sub
lock
aaa
out
fildl
fs
mov
ljmp
jns
push
loopne
pop
adcb
pop
inc
or
mov
adc
adc
dec
subl
jl
fwait
clc
mov
cmp
inc
adc
sub
fldl
xchg
icebp
loopne
jns
lret
xchg
cmc
inc
xor
test
dec
arpl
ficomps
fwait
dec
cmc
test
stos
pop
and
sbb
mov
icebp
test
shlb
scas
nop
inc
lret
add
jb
imul
add
jo
xor
rolb
mov
jle
cmp
incl
sbb
bnd
adc
jb
pop
hlt
push
fimull
add
xchg
mov
clc
add
mov
cmp
enter
dec
push
mov
dec
push
inc
push
test
and
mov
test
loop
sub
dec
inc
sub
fldcw
dec
sti
repz
icebp
cs
roll
out
xor
cmp
cltd
test
call
xlat
mov
int
jmp
adc
mov
lcall
jne
icebp
outsb
push
popf
jle
pushf
inc
insl
or
pop
lea
jno
cmp
and
sbb
shl
mov
das
repnz
pop
hlt
fdivrp
ret
ljmp
movsl
fcmovnu
subl
loopne
jle
xchg
sub
jb
sub
cmc
or
hlt
sbb
lcall
je
sub
jbe
std
inc
lret
out
fstpl
and
or
mov
das
pop
rcrl
and
lods
jge
out
cs
call
adc
insb
cmpsl
jae
bound
pushf
fwait
fisubl
sahf
cmp
call
cmc
out
out
ljmp
adc
inc
cwtl
mov
ret
mov
xchg
loope
pop
aaa
mov
or
andl
mov
sub
push
int3
pop
loopne
stos
sbb
cmp
lahf
xor
mov
fdiv
inc
xchg
pop
cltd
push
rcrl
pop
in
or
and
aas
call
mov
outsl
jmp
inc
shrl
outsl
cld
shrb
and
stc
repnz
ljmp
adc
push
fsubl
ret
pop
mov
sub
aam
test
int3
adc
cmp
add
sub
dec
mov
jae
jno
in
in
or
out
mov
xchg
decl
lahf
sub
lock
add
adc
aaa
cmp
je
das
or
sub
nop
push
mov
xlat
ret
mov
ss
inc
fimuls
sbb
scas
jne
adcb
mov
pop
roll
fcompl
inc
cli
ret
rcrb
es
popf
fdivl
fidivrs
mov
dec
test
jge
pop
cmp
jle
mov
test
sub
or
adc
test
dec
scas
mov
sub
loope
dec
pusha
inc
scas
push
push
mov
std
imul
and
dec
jb
inc
out
lret
and
push
mov
mov
loop
out
sbb
es
or
lret
daa
out
adc
outsl
and
or
add
scas
fs
in
push
add
pop
les
or
jmp
aaa
pop
jg
icebp
pop
jg
lods
mov
push
jle
js
leave
xchg
sbb
fwait
inc
clc
mov
inc
sti
mov
jbe
and
leave
cmp
aas
icebp
insb
and
or
loope
gs
mov
std
push
ret
pop
data16
jl
push
inc
sub
leave
xor
shr
adc
data16
imul
sbb
loop
add
sbb
sbb
popf
xchg
xorl
or
cmp
mov
and
call
mov
adc
push
xlat
insl
movsb
mov
jne
js
push
pop
sbb
popf
scas
aad
adc
push
in
jle
mul
in
lds
inc
cmp
push
aaa
jno
ss
xor
daa
inc
cs
out
cltd
or
dec
mov
data16
pop
push
cmp
scas
sub
mov
sahf
ljmp
adc
pop
lret
xor
aad
mov
shl
mov
push
fnstenv
dec
mov
pop
pop
das
add
add
insl
cmp
arpl
ret
lret
push
fnstsw
or
lret
iret
scas
pop
ret
ret
fdivrl
lock
inc
into
jae
pop
sti
movaps
xlat
inc
sub
adc
pop
jae
fdivr
shlb
xor
or
addr16
fdivl
mov
xor
mov
mov
into
fistpll
insb
test
mov
jo
cmp
das
insb
iret
mov
mov
imul
push
stos
call
inc
cltd
xor
movsb
inc
divl
inc
lods
cmp
aam
pop
out
dec
cs
and
dec
lsl
ds
fcoms
into
insb
mov
pushf
fsubl
icebp
xchg
addl
mov
inc
pop
scas
sbb
pop
outsl
movsl
mov
in
ja
daa
aas
les
xor
movsl
rcrl
mov
push
and
mov
ds
push
sub
sahf
nop
push
lods
faddl
hlt
out
sbb
pop
push
stos
and
repz
inc
lds
icebp
dec
inc
jbe
xlat
xor
nop
lods
dec
pop
push
cmpsb
repnz
or
jno
sbb
popa
jle
mov
pop
daa
or
push
xchg
lock
or
fstpl
mov
ret
gs
es
mov
cs
pop
test
int3
jecxz
daa
lcall
in
add
ja
pop
add
sbb
xlat
mov
lret
dec
push
push
arpl
or
aam
lret
popa
xchg
mov
aam
and
jb
pop
cmp
mov
inc
xchg
mov
xchg
cmp
add
mov
mov
or
mov
adcb
pop
lcall
inc
je
cmc
and
jge
push
push
jecxz
inc
lcall
je
cmp
icebp
lds
fwait
add
pop
dec
push
xchg
sbbb
lret
and
jmp
fistps
stc
daa
in
and
jae
aaa
xor
pop
push
stc
mov
pop
ds
xor
jnp
out
sub
js
into
mov
dec
insl
loop
push
test
push
out
out
mov
pop
adc
mov
fdivrs
test
dec
sti
mov
fsubl
test
pop
pusha
mov
repnz
lret
ret
arpl
mov
xorb
cmpsl
mov
out
jecxz
int3
jmp
jno
stc
sub
cs
sub
mov
enter
sub
in
jns
pop
inc
jmp
rcll
cmp
jb
fbstp
ficomps
iret
mov
fld
push
xchg
ficoml
adc
ret
mov
xchg
aam
and
xor
or
push
sbb
cmp
pop
stos
jae
inc
fisubs
and
mov
mov
in
pop
cmp
pusha
cmp
stc
push
mov
mov
push
nop
pop
in
inc
adc
mov
lods
loope
or
cmpsb
subb
and
pop
or
in
int
add
hlt
sbb
insl
sub
push
xchg
mov
fistps
sbb
popf
test
pop
dec
icebp
xchg
mov
and
jne
lea
lahf
or
aas
lods
ret
mov
xchg
hlt
sti
dec
and
xchg
les
sbb
iret
ja
push
mov
adc
dec
or
js
adc
jns
hlt
movsl
pusha
add
sub
data16
mov
das
mov
xlat
jge
call
cmp
adc
push
inc
out
fisttpll
push
mov
push
adc
imul
adc
pop
fstpl
js
insb
xchg
push
mov
jno
pop
add
das
fdivrl
sub
or
dec
mov
cmp
or
hlt
fdivr
das
mov
push
xchg
rcr
lcall
push
stc
aas
and
mov
mov
lret
lret
mov
dec
jnp
jae
mov
jno
cmc
pop
test
std
fwait
repz
addr16
and
lods
sub
and
pop
in
add
lret
inc
add
mov
movsl
and
push
inc
pop
lret
call
in
sub
xchg
adc
sub
aas
jno
bound
mov
jle
incl
cmp
push
push
adc
frstor
cmpsb
divl
xor
pop
cltd
cltd
mov
test
adc
pop
in
and
cwtl
push
pop
sub
ljmp
dec
adc
arpl
inc
push
divl
xchg
std
into
test
daa
out
ret
clc
jmp
dec
xor
ss
stos
movsl
imulb
adc
inc
insl
mov
xor
push
cmc
into
jb
mov
pushf
enter
movsl
add
add
mov
fstps
xchg
aam
xchg
aam
out
movl
adc
push
jecxz
dec
cmp
movsb
daa
inc
mov
mov
push
movsb
mulb
push
xchg
std
push
data16
sbb
jno
mov
jbe
mov
push
ret
sub
scas
xchg
fsubr
stos
adc
sar
popa
push
inc
sub
and
jno
or
push
xchg
hlt
popa
cmpsb
sub
imul
daa
je
roll
in
jp
lea
sti
insl
cltd
jns
add
jnp
std
mov
dec
push
push
insb
push
inc
mov
mov
jb
adc
mov
sub
pop
ficoms
jmp
fstps
pop
lods
inc
leave
adc
mov
sbb
ljmp
fdivl
mov
and
sub
and
inc
cld
and
ja
out
push
dec
sub
ja
xchg
jmp
aam
push
or
fildll
pop
out
jecxz
mov
sbb
mov
add
mov
mov
clc
dec
ret
jg
lods
or
imul
lea
adc
lea
mov
push
cld
cld
popa
mov
ja
mov
lds
and
dec
and
xor
test
mov
std
xchg
popf
pop
cmpb
dec
mov
sub
int3
xchg
cli
push
mov
idivl
insl
push
sub
mov
xchg
cli
cmc
js
push
jb
dec
xchg
lods
pop
stc
mov
xor
cwtl
mov
sbb
add
fdivrs
or
movsl
bound
lods
adc
in
sti
inc
ret
adc
pop
test
movsl
jle
mov
jnp
repz
test
imul
mov
test
mov
mov
test
adc
int3
mov
fwait
xor
push
sub
pop
push
push
cwtl
push
lds
pop
inc
int
xor
adc
loopne
xor
push
push
dec
push
lods
aas
cmp
pusha
cld
insl
sub
loopne
xlat
cld
test
pop
adc
jne
lds
xor
dec
movsl
outsl
stos
js
loope
mov
sub
in
das
xchg
rcr
xor
mov
aaa
stc
mov
sub
test
mov
jg
ss
std
jle
jmp
add
imul
and
stos
xchg
das
inc
imul
or
and
cmp
or
inc
mov
mov
adc
mov
add
inc
rclb
andl
cwtl
jp
sbb
mov
fists
pushf
jmp
rcl
mov
in
imul
les
inc
addb
aam
cmp
into
mov
dec
adc
or
fcmovbe
and
insl
jmp
xchg
pop
sbb
adc
xchg
sub
lret
jecxz
mov
popf
test
je
imul
fs
mov
mov
sahf
pop
fiadds
mov
push
rsm
cs
in
cmp
mov
out
lods
inc
jo
fstl
push
daa
ficoms
cltd
mov
dec
roll
outsb
notl
push
int
incl
lods
aaa
cmp
push
xchg
xchg
or
mov
mov
insb
add
jge
outsl
adc
xor
sbbl
leave
imul
iret
xor
pop
pop
dec
dec
ds
sub
rclb
push
pop
pop
lock
inc
dec
roll
xor
sub
mov
orb
dec
bound
or
xor
mov
mov
mov
icebp
and
stos
les
mov
rclb
fs
aas
push
pushf
xchg
inc
mov
neg
push
jbe
mov
nop
pop
add
sub
xor
mov
ljmp
rorl
lock
es
jmp
js
cs
cwtl
inc
cmp
lret
rol
and
pushf
push
mov
jp
push
cmp
pop
xor
sub
xor
lcall
mov
and
or
faddl
in
repz
out
push
mov
push
sub
popa
hlt
pop
push
mov
xor
push
in
test
imul
mov
cmp
jno
mov
or
sub
cmp
lret
or
ss
movsl
cmp
adc
adc
add
push
mov
xor
push
mov
mov
push
test
gs
fwait
inc
mov
or
or
shll
sti
out
nop
mov
cwtl
or
lret
int3
or
or
jae
dec
loope
jne
or
sahf
sbb
lock
data16
leave
and
mov
repnz
sub
mov
xchg
lods
clc
jge
sbb
rclb
pop
fs
pop
aad
or
mov
xchg
and
inc
cld
scas
lods
call
or
in
or
shll
repnz
loope
imul
add
out
jns
mov
aam
xchg
xchg
inc
push
lahf
push
cltd
push
jge
adc
push
inc
fisttps
push
inc
mov
in
jbe
ja
fwait
stos
scas
push
fcmove
mov
cmp
in
pop
inc
cmp
leave
inc
add
jmp
outsl
jne,pt
int
repnz
sti
mov
jg
jns
dec
push
mov
or
jae
add
int3
adc
push
dec
inc
jbe
pushf
arpl
cmpsl
push
push
int
mov
mov
adc
push
push
mov
and
dec
lods
xchg
cmpsb
mov
mov
cmp
sub
cld
cld
mov
scas
dec
jo
icebp
aas
sahf
cmpsb
js
fisttpll
mov
jns
push
stos
mov
loop
push
xchg
or
mov
data16
cmp
push
dec
xchg
cmc
or
test
xchg
cmc
push
arpl
add
cmpsb
je
or
scas
jmp
and
or
pop
xchg
enter
pop
mov
test
add
scas
pop
mov
loope
imul
mov
imul
iret
mov
sub
faddl
mov
mov
pop
in
inc
jbe
faddl
add
mov
call
mov
jle
cmpsl
or
popf
ds
lods
mov
mov
lret
loopne
push
ror
insb
repz
jecxz
lods
add
push
adc
push
xchg
sub
leave
inc
xchg
xchg
sahf
sub
or
mov
lods
sbb
xchg
cwtl
imul
ffreep
and
or
pop
xchg
leave
test
and
int
push
cmp
in
stc
sbb
sub
xchg
scas
cmpsl
into
dec
xchg
dec
push
cmp
test
std
pop
jno
push
xor
mov
mov
push
dec
js,pn
in
and
xchg
outsl
cld
repnz
out
jg
cmp
test
xor
mov
mov
cmpsl
repnz
xchg
mov
adc
xor
mov
sub
rcpps
mov
rcrb
xchg
and
mov
lds
xor
adc
mov
fcomps
pop
subl
fidivrl
inc
loope
add
sbb
orb
push
mov
add
cmp
mov
es
dec
xchg
scas
add
jmp
pop
sbb
js
mov
xchg
aas
pushf
hlt
cmp
xchg
fs
xchg
out
add
pop
sub
arpl
fsubl
or
xchg
sub
add
xchg
or
clc
adc
cltd
lcall
xor
incb
and
dec
ret
dec
cmp
jbe
mov
in
sbb
mov
ret
cwtl
adc
xchg
sbb
test
lcall
inc
xlat
out
adcl
outsl
mov
inc
fs
roll
mov
stos
add
addl
push
pop
inc
mov
jne
hlt
andb
rcrl
mov
subb
push
daa
mov
ss
iret
xor
mov
pop
outsl
test
sub
arpl
push
mov
shll
xor
loope
fcomi
dec
or
lret
cmp
roll
shll
pop
inc
scas
adc
ljmp
inc
lret
cltd
inc
sub
stos
sahf
dec
and
cmp
sarb
and
cwtl
mov
fstl
fcoms
mov
out
mov
xor
in
pop
cld
sub
xor
mov
mov
iret
clc
pop
dec
js
aas
out
xor
add
mov
mov
sbb
cmp
lea
out
sbb
jbe
into
cs
inc
inc
dec
in
ds
sub
mov
rcrl
das
jno
jbe
pushf
lea
jno
sbb
jmp
xchg
push
mov
stos
mov
mov
inc
loopne
into
imul
or
in
mov
mov
fwait
lods
shl
mov
push
xor
and
jns
movsl
and
xchg
scas
sbb
subb
mov
mov
dec
sbb
jle
rcrb
pop
out
jl
pop
sbb
xchg
sahf
pop
int
aaa
mov
add
add
dec
lea
lds
dec
mov
pop
mov
cmpsl
es
mov
lea
std
dec
orb
mov
test
cli
es
jge,pn
fsubrp
into
pop
aas
fyl2xp1
dec
pop
mov
fistl
es
aad
mov
cli
enter
fdivrp
es
dec
jno
in
fsts
out
xchg
in
loop
dec
sub
push
popf
call
enter
jmp
nop
aaa
push
bound
ret
sbb
rol
enter
js
xchg
and
xchg
inc
outsb
les
and
dec
jg
xor
loopne
mov
mov
out
add
dec
cmpsl
xor
xor
jge
add
inc
mov
incl
pop
cmp
rcl
xchg
jp
in
mov
jo
adc
jns
xor
mov
lods
enter
sbb
jmp
adc
jmp
mov
sbbl
and
movl
data16
jbe
adcl
lock
test
inc
dec
cmp
ljmp
xor
sbb
ret
movsb
or
sub
inc
adc
cmp
cltd
movsb
pop
mov
movsb
xchg
insl
sub
xchg
iret
shrl
xor
pushf
mov
pop
xlat
test
lods
test
cmp
push
in
jb
movsb
xchg
ror
std
adc
loop
aam
aad
pop
shl
fldcw
jo
push
cmp
mov
mov
inc
push
mov
iret
xor
fwait
mov
xor
lcall
ret
shr
push
hlt
cmpsl
push
xor
imul
iret
stc
cmp
cmc
adc
cmp
sub
mov
or
in
fdivrs
in
pushf
and
lahf
mov
mulb
test
add
mov
mov
int
sub
cmp
orb
cwtl
xchg
pop
and
loop
cltd
ficoms
dec
mov
inc
fimuls
lods
dec
fdivp
cwtl
mov
xchg
stos
adc
ss
mov
je
jno
cld
fcmovnb
lahf
mov
fs
add
popa
lcall
pop
push
xor
add
or
scas
adcb
int3
addr16
cmp
dec
divb
cmp
xor
mov
push
add
out
rdseed
jae
push
push
cwtl
flds
call
jbe
add
pop
fldl
rorl
jae
std
in
iret
je
lahf
jns
test
xor
push
jo
pushf
outsb
xchg
add
mov
push
fmull
in
fiaddl
adc
push
dec
inc
xor
xchg
dec
pop
xchg
mov
sbbl
ja
cmpsb
cmpsb
jecxz
push
push
sbb
push
faddl
pop
fwait
mov
and
jmp
xchg
incb
sub
arpl
jae
insl
ljmp
fwait
pushf
mov
xchg
and
mov
jb
int3
adc
mov
mov
pusha
add
push
ret
or
stos
pop
arpl
inc
pop
loop
pop
dec
xor
jno
adcl
fsubrl
mov
out
jl
sti
sbb
out
mov
sub
adc
xchg
daa
mov
and
lock
cmp
addr16
cwtl
in
cmp
jecxz
push
add
xchg
lock
cs
inc
add
iret
in
dec
fs
arpl
pop
cmp
loopne
mov
shrb
xlat
test
inc
imulb
inc
in
jle
call
fisubrs
pop
sub
jge
dec
and
or
out
cmovp
imul
sub
loope
mov
dec
pop
jb
and
adc
gs
add
and
pop
dec
lea
mov
test
add
xchg
scas
data16
dec
outsb
mov
pop
sbb
inc
pop
sbb
cwtl
popa
rorb
aam
add
test
sbb
sti
pusha
cmpsl
call
ss
call
jecxz
push
jne
jns
pop
or
aad
xchg
cmpsb
sub
pop
push
sbb
hlt
arpl
xchg
popf
inc
push
pop
and
cmp
adc
rcll
sub
jb
jecxz
cmp
pop
push
fiadds
outsl
jb
jb
dec
mov
test
outsl
mov
cmp
hlt
lcall
xchg
dec
pop
es
pop
lock
lods
or
xchg
test
movsb
add
shrl
lea
ds
test
mov
xchg
cmp
data16
mov
icebp
adc
mov
push
pop
add
fnsave
and
push
inc
pop
shl
pop
jbe
jmp
sub
ja
and
ret
lock
int
mov
fistl
orl
in
xchg
loope
les
pop
dec
mov
and
orl
aas
adc
outsb
push
pop
push
xchg
or
mov
ror
push
mov
mov
mov
jg
push
and
loopne
adc
gs
insb
fs
cmp
dec
mov
sbb
cmc
in
mov
mov
cmp
push
jge
mov
test
jne
inc
dec
cwtl
cmp
outsb
sbb
sbb
dec
cmp
rcl
jge
push
jge
push
xchg
xchg
adcl
shl
dec
sti
mov
or
mov
mov
xchg
mov
aad
jecxz
outsl
xor
cltd
jmp
or
dec
dec
lods
ljmp
adc
ja
mov
std
add
mov
or
xor
cmpsb
ficompl
pusha
das
mov
dec
mov
daa
inc
in
nop
pop
in
pusha
shlb
adc
add
cmp
test
out
adc
mulb
idivb
insl
lret
add
xchg
inc
imul
mov
xchg
sbb
ficoml
in
mov
andl
shlb
and
aaa
jo
mov
das
push
ret
das
out
ficoms
and
xlat
mov
pop
mov
mov
mov
pop
push
xchg
popa
mov
movsb
and
or
mov
add
fldt
sahf
and
mov
xchg
adc
enter
push
addr16
dec
nop
adc
or
cmp
hlt
lahf
push
mov
shlb
rorb
inc
xchg
imul
or
stos
fs
fcomp
xor
pusha
aad
stos
loop
sbbb
and
sti
add
aad
aad
cs
adc
aaa
push
dec
stc
dec
sbb
add
js
mov
in
dec
shl
jecxz
es
inc
cmpl
push
sub
or
shll
in
pop
rcrl
inc
and
sub
mov
jle
lahf
outsb
aad
es
clc
adc
movsb
aaa
jne
mov
jge
pusha
push
sub
sti
jmp
jbe
pop
pop
push
loopne
aas
sbbb
es
adc
test
mov
ret
add
int3
sarl
sbbb
sbbl
aam
push
test
xchg
jns
cmp
bound
cmpsb
enter
jmp
pop
rolb
jnp
inc
fimuls
pop
or
mov
fildll
cltd
addr16
aas
loop
cmp
lahf
add
aad
add
repz
loop
jns
cs
xchg
mov
das
adc
outsb
jb
loop
mov
push
fsub
inc
or
jb
mov
ja
xchg
xor
cli
lret
xchg
out
push
ret
test
adc
addr16
es
pop
dec
dec
fucomp
pusha
push
negb
das
js
and
adc
and
or
popf
stos
outsb
push
ss
lret
fisttpl
mov
cmp
xor
jbe
or
int3
jne
mov
rcrb
mov
arpl
mov
pusha
and
jge
push
out
arpl
leave
decl
jg
add
inc
fmull
xchg
jno
addr16
clc
push
into
and
pop
xchg
out
mov
jg
fdivp
in
icebp
insl
and
xor
dec
or
jo
je
xchg
loopne
in
push
jae
push
fimull
push
adc
js
xor
xchg
xchg
sti
cmp
fiadds
push
xchg
imul
mov
sub
push
pop
gs
adc
mov
pop
push
cmpsb
xor
cmp
sub
add
inc
adc
movsl
ret
inc
or
jge
cmp
adc
xor
adc
xor
adc
mov
fcoml
inc
push
cli
loop
jp
cmpsb
inc
popf
jbe
jl
ljmp
jmp
roll
loopne
lock
scas
and
shr
enter
outsl
in
das
cmpsl
sub
cld
lock
daa
cmp
jp
sub
in
sub
jmp
fsts
mov
daa
sub
fucomp
cltd
push
lcall
jnp
jp
adcl
lret
mov
mov
push
push
cmp
adc
push
test
mov
push
cs
inc
mov
cmp
repnz
mov
mov
pusha
cmp
adc
dec
dec
inc
jge
les
pop
popa
aaa
mov
push
jge
xor
incl
adcl
adc
xchg
mov
push
test
popa
fildll
fs
loope
and
mov
fld
adc
inc
out
push
push
fcmovb
or
or
sub
mov
out
into
mov
xor
and
mov
movsl
jl
loop
push
mov
clc
cmp
es
inc
or
xor
xor
repz
imul
in
jbe
pop
out
arpl
cmpsl
jmp
shlb
xor
inc
in
jbe
fwait
push
shrl
cltd
ret
imul
scas
cwtl
lahf
movsl
inc
out
shlb
popa
pop
es
jge
outsb
mov
cmp
fcmovnb
dec
ret
jg
push
adc
jge
cmp
enter
stos
lods
inc
sbbb
out
push
sub
stc
das
xchg
inc
or
js
stc
inc
and
cmp
dec
cmp
test
loope
jbe
inc
cmp
ret
push
cli
cwtl
roll
xchg
aas
add
pop
adcb
adc
jecxz
xor
jmp
sub
mov
sbbb
mov
int3
sahf
xor
lock
lret
jns
jb
push
mov
lods
in
and
cli
mov
and
pusha
push
or
call
into
inc
jg
add
or
adcl
jecxz
cmpsl
push
fdivs
mov
les
iret
pop
nop
sahf
jne
jp
arpl
scas
jnp
push
mov
dec
fs
fwait
push
xchg
and
sti
stos
mov
addl
mov
sbb
stos
mov
subb
sub
mov
push
mov
mov
mov
inc
and
in
mov
mov
cltd
push
push
and
aas
stc
cmpsl
stos
lret
xor
or
insl
pop
out
or
pusha
js
mov
inc
sti
push
insb
jl
dec
repnz
rcl
popf
dec
add
inc
ja
rorl
lcall
sbb
in
pop
sbb
out
movsl
sbb
dec
out
fldt
in
pop
lret
push
jmp
jae
cs
adc
sub
lret
lret
lea
add
jle
faddl
fistl
int3
fimuls
cmp
jmp
push
mov
std
sbb
jnp
inc
cwtl
repnz
inc
mov
sub
inc
inc
and
lret
fimull
push
repz
clc
jne
cmp
jbe
faddl
or
rol
jl
outsb
cwtl
cli
adc
push
add
cmpsl
xchg
jo
add
sub
jns
orl
sub
sbb
xchg
loopne
mov
rclb
pop
or
inc
enter
inc
adc
inc
jle
hlt
jbe
enter
out
sti
xchg
jns
inc
add
dec
mov
jp
add
outsb
xor
inc
pusha
mov
mov
js
iret
add
lret
xor
sub
or
cli
outsb
jns
add
loop
lods
add
xchg
pop
test
jbe
xchg
rcrl
outsl
cmp
outsl
fwait
jns
cmp
add
fimull
dec
into
cwtl
gs
cli
std
out
nop
pop
sbb
inc
xchg
xchg
mov
or
insl
mov
pop
lods
popf
scas
mov
and
ja
aad
fisttpll
cmp
jbe
insb
jmp
shll
sbb
out
int3
mov
push
sub
jbe
nop
dec
xor
xchg
and
ret
push
sub
xor
shrb
in
out
ret
lock
adc
add
loopne
inc
imul
pushf
in
adc
test
pop
jne
push
nop
cmp
out
mov
add
pop
mov
jae
les
cld
cmp
inc
or
inc
fbld
dec
repz
mov
fcmovbe
lahf
incb
divb
push
movsl
mov
out
pop
cmp
sbb
es
bound
push
lods
ss
dec
adc
sbb
push
pushf
subl
sbb
xor
lods
dec
mov
stos
adc
rorl
aad
inc
jae
aaa
mov
cmc
lea
decb
sbb
pop
xchg
clc
mov
es
sbb
or
sub
push
test
psrlw
mov
add
je
xlat
lods
fnstenv
push
stos
jbe
push
add
jge
int3
das
sbb
adc
in
sub
lock
push
pusha
in
xor
aad
dec
or
lea
imul
adc
lods
test
data16
orl
shrl
hlt
dec
pusha
sub
fisubs
cwtl
mov
pop
int
xchg
adc
je
aad
xchg
xlat
mov
push
mov
dec
call
xor
sbb
xchg
push
lret
sub
push
pop
mov
pushf
stos
orl
inc
outsb
insb
es
or
inc
fcomip
fidivs
add
pusha
fcmovne
mov
insl
sbb
das
stos
add
pop
push
xchg
orb
adc
daa
and
out
mov
iret
mov
bound
adc
add
aam
mov
ja
cmp
fs
int
pushf
out
sti
cmp
push
cmpsb
sti
cmp
adc
hlt
cmp
mov
mov
ret
in
sub
mov
adc
incl
or
sub
test
aas
aas
sub
inc
adc
xchg
and
pop
xor
mov
lahf
fldt
push
mov
add
dec
ret
cwtl
cltd
andb
push
scas
je
add
mov
movsl
popf
insb
mov
push
popa
pop
inc
mov
adc
jne
xchg
std
test
cli
out
lds
jge
xor
iret
imul
aaa
sub
inc
sub
subl
sub
ret
shrb
scas
sub
mov
hlt
aad
cli
cmp
mov
aam
in
adc
fiadds
add
into
adc
lcall
xchg
xchg
insb
cmp
neg
mov
mov
lods
scas
int3
mov
add
dec
or
repnz
pop
push
mov
mov
pushf
add
popa
and
jle
sbb
push
mov
pop
pop
getsec
out
cld
push
mov
inc
enter
js
push
mov
insl
mov
popf
mov
std
cmp
inc
inc
adc
int3
inc
xor
and
jb
mov
leave
lods
jo
popf
cli
sub
std
int
jecxz
adc
push
xor
cld
inc
push
repnz
dec
mov
mov
xor
jecxz
ret
pop
mov
lcall
movsb
mov
adc
pop
mov
into
fstpl
outsb
inc
js
sub
sbb
xor
cmc
xchg
popa
stos
fisttpl
xor
jl
in
mov
push
jb
cmpsb
push
inc
add
dec
data16
xor
sub
cmp
and
sbb
test
outsl
lret
push
aaa
arpl
fwait
push
ja
gs
sub
lods
les
pop
cltd
fadds
jle
cmp
stos
es
adc
dec
outsl
enter
jge
cltd
aas
fildl
cs
popf
mov
stos
pop
mov
arpl
shlb
repnz
jo
lahf
mov
sbb
lahf
arpl
in
fucomp
add
testb
mov
ret
dec
out
mov
into
stc
push
jnp
or
jmp
fs
pop
aad
or
imul
mov
and
jle
cmc
jg
fdivrp
cmpsl
add
sub
movl
or
rcll
insl
jno
xchg
mov
bound
adc
sbb
fadd
out
in
jecxz
push
inc
push
pop
imul
lcall
mov
jg
scas
sbb
scas
test
test
cmc
fidivrl
outsl
dec
sbb
or
pop
jbe
add
xchg
sub
dec
outsb
xchg
and
push
leave
fadds
dec
xchg
or
test
add
and
mov
in
test
add
pop
push
nop
mov
jmp
sahf
lods
stos
sub
outsl
pop
or
or
je
push
adc
jb
pop
and
cltd
lahf
in
add
mov
cmpsl
aaa
fistpll
daa
dec
outsl
pop
idivb
and
insl
ss
loope
xor
add
int
xchg
andb
push
adc
jg
addr16
jno
stos
pop
push
xchg
cmp
mov
out
bound
push
mov
push
iret
ficomps
mov
xlat
xor
pop
or
xor
lahf
push
pusha
add
jg
jo
cmp
inc
pop
clc
mov
orl
data16
and
add
and
dec
ret
push
lret
test
add
push
pop
into
jg
nopl
ds
popa
pop
mov
nop
es
mov
mov
rcl
icebp
jmp
out
jmp
mov
mov
bound
outsl
pop
and
pop
dec
lret
adc
out
cmovg
cltd
popa
fcoml
add
psraw
test
in
jno
add
cmp
sub
addb
sarb
xchg
push
jbe
scas
inc
outsb
enter
dec
call
mov
mov
jmp
push
mov
jae
movsl
pop
idiv
dec
fstl
in
js
adc
jmp
cmpsb
push
jns
adc
push
orb
xcrypt-ctr
cmpsl
pop
ljmp
test
mov
mov
push
inc
in
inc
jp
outsb
fistps
aaa
das
xchg
call
daa
cltd
push
or
mov
mov
pop
mov
clc
xor
dec
aad
mov
insb
daa
fs
outsl
xor
lret
dec
aaa
xchg
mov
add
pop
xchg
inc
mov
int
fldenv
fldt
pop
mov
xchg
adc
hlt
ret
jb
int
std
mov
sarb
and
dec
ret
push
subl
out
jl
dec
daa
das
inc
in
imul
xor
or
pop
popf
femms
pop
in
jno
sbb
int
lret
pop
in
cmp
cmp
xor
pop
mov
pusha
popa
jle
les
inc
mov
push
and
fisubrl
xor
lock
int
cltd
hlt
fsubr
cmc
mov
mov
addr16
cmc
cmp
movb
cmp
cmpsl
repnz
push
sbb
scas
sub
pop
incl
and
pop
pop
dec
jns
scas
mov
inc
ret
jp
test
cmp
aas
cmpsl
data16
ja
sbb
fnstenv
mov
roll
aas
cmp
cmp
jecxz
std
or
push
adc
test
mov
adc
imul
sub
jle
inc
arpl
in
mov
dec
dec
aaa
jp
in
ss
stos
mov
pop
or
pushf
fiaddl
mov
pop
int3
and
pop
adc
or
ds
lea
cltd
pop
xchg
out
in
sarb
pop
xchg
loopne
ret
int3
lock
add
enter
out
aam
insb
test
sti
lock
cld
sbb
loope
sarb
lret
sub
hlt
add
jno
shlb
pop
jae
out
aad
aam
in
popf
mov
push
add
xchg
leave
mov
or
mov
add
adc
dec
inc
cmp
xchg
mov
add
inc
push
push
adc
lods
mov
push
shl
mov
jbe
lea
xchg
xor
lods
inc
movsb
adc
in
rcrl
das
and
xchg
sub
vcvtps2dq
adc
push
pop
dec
or
dec
mov
and
cmp
and
ror
cpuid
or
jp
repnz
imull
mov
push
cmp
xor
jb
and
rolb
mov
outsl
daa
jne
inc
adc
inc
sbb
xchg
push
shll
fsub
fisttps
sub
mov
es
ss
pop
and
mov
jp
xchg
xor
push
push
das
es
ds
mov
xor
and
addl
jae
stc
mov
lea
jp
adc
cmp
stc
add
push
xor
xor
imul
lret
out
xor
cmp
pop
in
dec
sbb
and
enter
jl
pop
out
push
ljmp
mov
push
mov
shrb
movsw
scas
or
iret
out
mov
or
aad
emms
mov
shr
adc
xor
push
into
add
enter
aaa
mov
lock
jmp
pop
sub
pushf
shll
mov
jno
lcall
stos
stos
icebp
cs
jne
xor
push
call
pop
sbbl
int
inc
mov
enter
xchg
pop
adc
push
jns
add
movl
xor
ss
mov
les
leave
imul
mov
mov
mov
ret
xchg
inc
jp
test
mov
arpl
pop
push
sbb
cmp
push
daa
lahf
jmp
pop
leave
mov
insl
mov
jo
pusha
sub
imul
out
push
mov
mov
sbb
repz
xchg
or
sbb
test
enter
sbb
push
push
sbb
sti
push
les
push
sub
or
add
out
outsl
ffree
sbb
cmp
mov
pop
inc
in
jbe
and
sub
sub
ss
dec
out
xchg
cli
push
cmp
adc
mov
mov
xor
imul
test
lods
sub
or
inc
xchg
rcrb
jge
mov
cmc
fmul
repnz
push
outsb
xorl
aas
sti
or
cmp
fdiv
jne
popf
scas
mov
into
cmp
mov
jle
mov
in
dec
das
daa
iret
test
mov
inc
lret
push
aas
es
iret
lea
cltd
ds
into
fisttpll
xor
push
ja
sbb
push
add
lret
aaa
out
ds
cmp
or
insb
jl
inc
push
add
cli
outsb
push
mov
call
pop
ret
cmp
inc
xor
dec
icebp
xchg
add
pop
popa
jecxz
sbb
push
cmpb
sbb
sub
or
jl
adcb
popa
bound
inc
out
add
jg,pn
adc
int3
or
pop
cmc
nop
out
mov
outsb
fidivrl
lret
js
inc
movsl
cmpb
lods
pusha
add
jns
push
scas
outsb
sahf
dec
lcall
pusha
cltd
popa
fwait
loope
mov
cld
iret
mov
sahf
sahf
stos
pop
sbb
mov
xlat
xchg
lock
mov
jge
xor
fcomi
jle
mov
cmpsl
xor
repz
mov
sub
add
test
jne
mov
jle
shrb
jo
loope
sbb
sub
aas
xchg
jle
inc
shrl
or
int3
dec
cwtl
popa
lcall
sarl
xchg
dec
jno
insb
cmpsl
nop
adc
lock
mov
sahf
adc
rcl
mov
in
sbb
push
inc
mov
jae
pushf
lret
mov
incl
cmpsl
pop
jp
in
in
insb
ljmp
sbb
sub
cmp
inc
xchg
cld
outsb
pop
sbb
mov
xor
insl
push
aam
mov
scas
outsb
sbb
movsb
mov
xlat
lcall
sub
ljmp
pop
fstpl
push
inc
test
sbb
cld
rolb
insl
xchg
pushf
sahf
and
mov
jp
mov
cld
decb
leave
jg
in
xor
sub
pop
pop
pop
jge
pop
popa
int
and
repnz
jae
dec
jns
popf
xor
inc
sahf
jecxz
xchg
mov
pop
sub
loop
sbb
repz
fdivl
xchg
jb
jecxz
or
sub
das
cmc
fnstenv
cmc
xor
add
pop
jge
in
insb
into
repz
lds
jmp
jnp
mov
xor
add
ret
push
mov
mov
xchg
dec
push
mov
mov
xchg
sub
movsl
lods
cmp
jo
jbe
pop
push
test
cmp
movsl
push
xchg
and
mov
xor
lahf
mov
mov
sbb
rol
push
adc
cmpsb
push
jmp
in
jbe
sbb
cmovs
int3
push
and
roll
add
sub
mov
cmpl
and
xor
popf
push
push
jbe
sub
outsb
test
push
cltd
je
repz
mov
push
aas
outsb
icebp
aam
sbb
mov
and
cmp
or
movsb
jo
jnp
inc
or
or
cs
cld
js
shrb
mov
mov
jo
xor
dec
sti
bound
pop
subb
out
push
enter
sahf
je
pop
xchg
push
pop
inc
push
and
aaa
insl
mov
dec
ds
xor
cmc
dec
ret
add
lahf
lcall
push
inc
jmp
mov
pop
push
pop
arpl
mov
push
add
aam
ja
ss
xor
mov
mov
jl
xchg
adc
adc
cltd
and
jnp
mov
in
jo
out
mov
cmp
cs
icebp
dec
xor
fdivs
xor
int3
pusha
and
icebp
pop
into
sub
xchg
inc
ss
sub
xchg
mov
outsb
jl
jb
mov
mov
clc
scas
adc
lret
dec
das
test
mov
sub
addr16
js
mov
repz
aad
push
push
test
xor
mov
ds
inc
rcl
rorl
lock
sbb
lods
cmp
test
test
adc
and
ljmp
data16
divl
cmpb
into
fnstsw
or
sub
aad
xor
adc
pop
jmp
aad
push
adc
jle
addr16
push
ret
mov
insl
mov
rcll
das
sbb
imul
rcrl
adc
sub
mov
cmp
adc
fwait
daa
mov
data16
shl
out
je
loop
jns
loope
in
fwait
and
pop
loop
loopne
cmc
and
cltd
jne
jle
subb
xor
or
mov
jmp
sub
push
fs
adc
loop
mov
sti
push
dec
aaa
inc
repz
into
dec
or
dec
mov
bnd
mov
cmpl
ret
aas
inc
mov
push
movsl
adc
dec
mov
into
je
dec
jmp
and
ja
or
xchg
add
jp
stc
push
pop
or
xchg
mov
mov
xchg
push
sub
mov
sbb
xchg
aad
push
test
pop
mov
jge
clc
gs
sub
or
pop
jmp
push
add
insl
jecxz
xor
addr16
fisubl
fimull
aad
xor
mov
ja
and
dec
xchg
push
js
call
addr16
aas
pop
sub
or
movb
into
dec
subb
test
push
pusha
test
mov
mov
out
int
sbb
xor
sbb
dec
arpl
aaa
adc
call
push
xchg
fwait
or
push
or
addb
fisttpl
sub
jne
lcall
das
in
mov
fldenv
out
xchg
flds
sahf
sub
dec
push
pop
and
xchg
cs
inc
int3
test
out
pop
jmp
xchg
adc
or
cli
jle
gs
jmp
cmp
and
das
out
add
out
dec
cmp
leave
fcoml
les
call
out
mov
dec
fwait
call
push
rcl
mov
movsl
in
mov
imul
xorl
jns
pop
cmp
jb
xchg
cs
sbb
or
mov
ret
push
shl
sub
lods
popf
add
add
mov
or
shl
xor
push
rcl
fsubrl
lcall
aaa
pop
cmp
dec
xchg
test
adc
rcrl
adc
jne
mov
dec
mov
sahf
xor
pop
add
xor
jns
repnz
inc
shll
lea
out
std
xlat
xor
mov
aam
setle
dec
jne
insb
jge
jecxz
mov
out
int
rolb
or
dec
out
sbb
mov
cwtl
movsb
dec
dec
arpl
or
jmp
fstpl
jbe
and
js
jae
popa
jle
xlat
loopne
mov
sub
mov
push
sbb
cmp
daa
test
cld
test
fistl
iret
jo
sbb
mov
jmp
xor
push
pop
and
sbb
pop
movsl
insl
pop
aam
cwtl
mov
push
mov
adc
fildl
inc
mov
mov
loope
imul
push
cmpsb
jo
dec
sbb
pop
imul
dec
shlb
adc
xlat
cmpsl
leave
cmc
add
test
pop
fwait
mov
sbb
mov
int3
fmuls
scas
push
sub
mov
xorb
inc
add
push
movl
xor
out
push
ret
scas
or
mov
pop
iret
dec
rolb
jne
neg
ja
add
pop
lds
mov
push
dec
roll
nop
call
ja
out
push
dec
and
push
mov
xchg
sbb
data16
cli
stc
in
scas
or
ror
jae
pop
scas
lret
les
in
dec
adc
and
xchg
js
stos
mov
adc
mov
add
push
mov
out
jb
data16
pop
pushf
lods
push
jne
xchg
jne
adc
test
or
cmpsb
cwtl
or
fdivrl
sbb
scas
dec
cmc
rcl
aam
popl
scas
sub
inc
das
and
inc
shrb
and
add
sub
pop
rep
push
jle,pt
push
aad
jge
inc
sub
insl
jno
inc
in
lret
lods
cmp
out
orl
aas
inc
pop
orl
xchg
imul
push
lcall
push
aam
mov
mov
add
mov
in
mov
pop
cs
push
sbb
pop
adc
dec
mov
aaa
in
fsub
inc
xor
cmp
push
gs
pop
jae
push
mov
dec
outsl
dec
push
pop
ds
inc
push
xchg
cmpsb
jmp
xchg
jle
push
and
cld
dec
hlt
lret
push
das
dec
dec
inc
daa
sub
dec
mov
imul
jg
xor
insb
mov
mov
addr16
mov
mov
mov
hlt
popf
push
xor
push
xchg
scas
add
mov
cmc
stos
push
mov
shll
sbb
arpl
cltd
or
out
sbb
sub
stos
stos
jne
call
fidivl
mov
xchg
xor
xchg
in
mov
mov
pop
xlat
pop
ret
push
dec
jl
sbb
movsl
fmull
pop
push
add
or
and
push
mov
inc
icebp
add
pusha
push
pop
mov
scas
jne
fldenv
xlat
fadd
adc
fnstsw
lret
jge
sub
mov
sub
out
jno
jl
sub
dec
inc
sbb
jo
mov
cmp
inc
filds
loope
gs
lods
loop
sub
xchg
movb
jge
pushw
out
push
cli
fwait
mov
push
mov
cmp
jo
enter
lret
cmp
push
inc
pop
xchg
aam
in
outsb
subl
fildl
push
out
or
loope
xchg
stos
mov
aad
loopne
adc
xor
mov
outsb
arpl
mov
fiadds
movsb
xchg
shrb
cs
mov
jo
cmpsl
sbb
repz
and
adc
pop
fnstsw
rclb
cmp
aam
add
jo
sub
inc
adc
pop
mov
dec
and
cmp
add
dec
lret
dec
or
push
adcl
pop
icebp
sti
mov
std
sbb
xchg
mov
jecxz
push
shrb
xchg
adc
aam
imul
jnp
push
adc
das
rcll
test
insb
hlt
test
lock
jl
and
sbbb
add
mov
pop
cmp
mov
and
outsb
add
push
pusha
cwtl
and
fs
outsb
vandpd
data16
push
pushl
add
je
pop
sub
call
mov
stc
sub
lods
jecxz
mov
push
fidivl
push
pop
mov
xor
cmp
cmp
inc
int3
cli
sbb
mul
jmp
imulb
adc
cmc
popf
lock
inc
dec
fcmovnb
or
inc
shl
adc
jno
popf
xor
sbb
cmp
mov
aaa
or
out
push
xchg
fsubs
hlt
loopne
adc
push
and
mov
stc
les
cmp
adc
xchg
pusha
jb
xor
popf
and
or
popa
out
fcomip
push
inc
scas
lret
js
inc
insb
pinsrw
clc
ljmp
rclb
jbe
insl
xchg
insl
adc
test
pop
aas
add
mov
idiv
sub
aas
cltd
into
mov
call
movsl
int3
or
jge
and
mov
mov
jnp
inc
pop
and
and
scas
fdivl
pop
addb
lods
sti
ja
xor
gs
sysexit
sbb
adc
stos
test
es
inc
js
sub
daa
aam
lcall
loopne
subl
and
adc
arpl
dec
xor
daa
add
sbb
cltd
xchg
dec
sbb
sub
fidivl
push
daa
dec
jbe
icebp
mov
xchg
cmp
add
scas
mov
pop
ficoms
add
lock
mov
mov
jecxz
adc
add
mov
xor
jne
fucomp
dec
outsb
lock
jecxz
aam
cmc
out
jge
cmpsb
arpl
sub
xor
in
or
dec
pop
mov
sub
cltd
out
cs
mov
popf
loop
ss
mov
add
ret
movsl
mov
sbb
out
and
jbe
into
aas
and
xorb
shlb
call
mov
sbb
loop
or
mov
leave
sub
fbld
pop
mov
sub
nop
jecxz
push
insb
bound
mov
testb
or
adc
es
cltd
test
adc
cltd
addb
test
mov
sub
ret
cmp
or
push
xchg
insb
orl
jne
ret
or
adc
adc
sub
fs
dec
ror
adc
es
lahf
aas
ja
or
xchg
xor
jg
jo
sarb
daa
je
dec
cmc
hlt
push
add
jae
jp
fwait
xacquire
mov
icebp
lods
mov
sbb
filds
jmp
mov
cld
fmull
stos
xchg
mov
jle
aad
jae
in
inc
cltd
out
push
imull
push
cmp
push
xchg
outsb
loopne
icebp
lret
adc
pushf
mov
fsts
ret
mov
cmc
sub
sub
rcl
mov
and
fldt
subl
notb
cmp
xchg
insb
pop
shrl
mov
scas
lcall
pop
push
shll
fimuls
xchg
mov
outsl
xor
insb
xchg
sbbl
hlt
push
push
das
notl
push
test
fildll
rol
xor
jnp
cs
add
repnz
or
sub
sub
mov
loope
jae
lods
sub
enter
adc
out
mov
jmp
pusha
les
pusha
xchg
jbe
icebp
mov
push
jle
pop
hlt
aaa
popa
cmp
call
mov
in
rorb
jle
xor
push
ljmp
cmp
mov
add
inc
mov
sub
inc
sub
ja
cmp
sbb
mov
pushf
nop
push
mov
adc
pushf
mov
scas
adc
bound
cmp
sbb
pop
paddusb
movsl
and
cs
orl
cmp
jo
gs
xor
pop
mov
xchg
push
into
xchg
and
fidivs
add
lds
pop
mov
inc
adc
ret
sbb
pop
into
dec
or
xor
dec
aad
mov
mov
clc
and
cld
pushf
ljmp
mov
jmp
inc
iret
and
or
fst
or
das
add
call
int3
and
int3
and
fdivs
xor
stos
sbb
ja
mov
imul
mov
repnz
fimuls
or
xchg
les
test
add
mov
scas
test
xor
sub
xor
fstps
es
inc
jmp
xchg
mov
sbb
arpl
xchg
filds
jne
sub
loope
cmp
dec
mov
inc
xchg
fs
dec
lcall
cwtl
loope
jmp
in
cmp
divl
fnsave
pop
add
lods
les
stos
loope
mov
aam
add
mov
es
push
xchg
xorl
es
mov
mov
cs
lds
fucomp
push
inc
out
or
pop
pop
jcxz
stc
push
sbb
xchg
dec
and
cs
js
push
js
decb
mov
mov
fdivrs
scas
jb
cmp
jge
and
push
aad
xor
sbb
cld
push
xchg
mov
cmp
sbb
les
lods
mov
dec
mov
xchg
clc
call
mov
xchg
pop
aaa
imul
xchg
mov
add
or
xchg
dec
aas
lret
lahf
adc
rol
repnz
test
mov
cmp
mov
and
repz
mov
aad
testl
mov
or
push
lods
enter
enter
data16
push
and
sbb
insl
addr16
jle
mov
insl
leave
xor
fstl
inc
out
push
push
adc
addl
push
xor
lcall
pop
daa
add
cmc
mov
xchg
sahf
lret
popa
pop
push
stc
push
sub
jmp
sub
stos
mov
or
or
jle
or
jne
mov
mov
cmpsb
in
adc
sbb
or
cmp
loope
mov
scas
pop
sbb
adc
pop
cmp
jl
insl
out
insb
pop
dec
pop
repz
test
jo
ss
sbb
sbb
or
dec
cmp
scas
cmpsb
lods
xor
fwait
add
push
in
fdiv
xchg
nop
popa
sub
lret
icebp
mov
xorb
repnz
repz
sub
pop
push
mov
mov
arpl
shll
cli
out
adc
cmp
cld
jp
jle
mov
adc
daa
mov
mov
and
jo
mov
aad
into
sub
cmp
adc
mov
mov
nop
repnz
and
jo
push
or
adc
loopne
imul
push
push
mov
push
rcrl
dec
or
and
imul
loopne
xchg
bound
rcrl
sub
in
mov
cltd
push
popa
pop
sbb
sbb
or
mov
jb
out
cs
in
xor
int
pop
push
pcmpgtd
mov
add
push
push
push
pop
in
add
repnz
das
cmp
xchg
cltd
aas
insl
jb
inc
lock
nop
pop
sbb
mov
mov
adc
fnstsw
shll
clc
into
pop
mov
scas
mov
test
push
mov
pop
orl
out
jns
ljmp
out
dec
outsb
lcall
aam
push
jle
shll
xor
cwtl
jno
insl
mov
jmp
outsl
hlt
sbb
gs
pop
adc
add
fildll
pop
pusha
cmp
cmp
sub
dec
sub
add
push
shrb
inc
xchg
sub
cwtl
fldcw
sbb
call
hlt
pop
jl
bnd
sub
xchg
mov
bound
inc
xchg
inc
imul
iret
mov
push
jg
lret
xchg
and
mov
jb
insb
pusha
mov
jnp
mov
push
inc
xor
xchg
stos
sub
icebp
push
lods
lods
pop
jl
lds
rcll
sbb
jo
nop
push
rcl
mov
rolb
mov
aam
lods
cmpsl
jl
ret
out
pop
xchg
inc
push
hlt
cmpsl
mov
cmp
ss
mov
mov
mov
repz
jo
shld
sahf
mov
arpl
out
pop
es
push
repnz
mov
faddp
in
leave
mov
add
ljmp
inc
add
adc
in
outsb
icebp
pop
dec
xor
pop
fldln2
mov
stos
je
xchg
xchg
adcl
push
hlt
icebp
ffreep
pop
xchg
add
jecxz
cmp
pushf
and
ret
jnp
jecxz
mov
mov
mov
inc
scas
xor
mov
mov
xor
repz
popf
cld
jne
cmp
xor
mov
adc
xor
inc
cmp
cmp
stos
cmp
divl
adc
adc
add
push
jecxz
cli
push
or
mov
nop
mov
shl
and
ja
vpshaq
sub
clc
rclb
pop
out
movsl
in
dec
jecxz
mov
inc
ror
mov
lcall
dec
repz
dec
ret
test
sbb
mov
and
adc
lahf
push
adc
jmp
jl
adc
sub
push
xor
sbb
in
mov
inc
cli
stos
out
scas
mov
pop
fs
add
xorb
mov
cmp
sub
mov
or
in
stc
cli
cmp
std
pop
xchg
test
mov
pop
pop
add
sub
inc
in
scas
mov
jmp
test
fbld
sub
jle
nop
daa
and
jmp
mov
ja
cld
lods
pop
xor
shr
xlat
pop
mov
bnd
mov
sub
in
adc
sub
jecxz
add
and
pop
lds
jmp
movd
adc
cmpsl
add
cli
adc
cli
cmpsl
lcall
loop
push
xchg
lock
mov
pop
jp
call
xor
outsb
sbb
das
das
xorb
push
cmp
jae
in
cmp
xchg
xor
icebp
jle
imul
ret
xlat
mov
out
pop
add
cmpsb
daa
mov
pop
daa
push
in
test
pop
mov
jae
cmp
cltd
and
fimuls
daa
or
xor
vmwrite
cmp
jge
cld
inc
lock
jne
mov
cmp
or
xor
int3
pop
sub
push
out
orb
and
fs
lahf
inc
jns
mov
and
ret
into
ja
and
lret
fcmovbe
in
ret
mov
repz
lret
aam
push
call
jo
mov
jno
jg
add
push
mov
out
jg
lahf
inc
icebp
js
mov
xor
fistpll
pop
cmp
mov
dec
in
scas
xchg
mov
js
out
int
lods
test
mov
out
mov
xchg
sub
insb
pop
loopne
cmp
cmc
imul
mov
cmpsl
sub
cmpsb
push
or
sbbl
mov
add
pushl
data16
loope
rcrb
push
mov
lods
in
xchg
pop
arpl
ret
fstp
in
xor
cli
pop
xchg
es
lods
enter
clc
clc
push
inc
mov
fwait
jle
push
pop
das
sbb
pop
cs
repnz
pop
or
popa
test
mov
xchg
xchg
mov
test
and
iret
sbb
mov
mov
lahf
outsb
lcall
lcall
jo
mov
cmp
pushf
push
lret
bound
and
lock
and
jecxz
inc
pop
mov
pop
shr
dec
mov
xlat
lret
and
les
and
das
stos
mov
push
pop
stos
jnp
add
imul
dec
jne
xor
push
lods
pop
inc
enter
out
mov
cltd
les
pop
xor
xchg
push
push
inc
push
add
movsl
dec
lods
push
es
pop
imul
xor
lock
fstps
fisttps
movl
xchg
mov
popf
in
xchg
sub
or
ds
fdivl
adc
mov
es
icebp
subl
mov
arpl
mov
cmpsb
inc
xor
push
fsts
push
pop
les
push
or
and
push
movsb
shlb
imul
js
or
sbb
inc
pop
arpl
push
js
jl
repz
cld
lods
lret
xchg
cmp
lret
xchg
je
frstor
xchg
cmpsl
enter
and
aaa
xchg
pop
cmp
jg
pop
lea
out
jo
daa
pop
cmp
ficoms
sahf
stos
xor
icebp
test
enter
fiadds
add
inc
mov
test
or
mov
lahf
loop
out
fnstcw
cmpsl
je
sub
add
pop
mov
data16
insb
dec
into
and
fs
or
in
jo
push
sti
loop
jmp
mov
andb
imul
adc
push
shlb
sbbb
or
scas
mov
mov
mov
lret
adc
pop
iret
pop
jo
lea
xchg
mov
mov
push
or
imul
xor
sbb
outsl
cltd
push
jbe
mov
gs
mov
idivl
jecxz
fimuls
shl
repnz
inc
imull
aad
das
pop
cvtps2pi
xor
mov
push
xchg
mov
cmpsl
aaa
jl
fcoms
roll
mov
mov
xor
mov
jg
inc
pop
fldcw
imul
add
dec
int3
int
mov
or
in
lea
mov
jmp
adc
push
xor
mov
mov
stos
mov
insl
xor
outsb
fs
and
fcomps
add
dec
xlat
sahf
fs
inc
mov
cli
std
mov
pop
pop
jl
pop
add
rorb
jle
jecxz
mov
aam
out
mov
push
jb
stc
mov
jge
rolb
orl
mov
call
add
arpl
lods
clc
lods
repnz
dec
in
das
and
stos
pop
gs
inc
lcall
add
inc
int3
jecxz
pop
popf
cwtl
pop
xchg
mov
cld
lock
cmc
bound
xchg
ret
loopne
cmpsb
inc
cwtl
roll
cmp
mov
adc
jl
sub
test
mov
lods
and
mov
jne
idivl
movsl
fmuls
inc
fisubrs
test
inc
sub
sarb
aas
mov
int
cmp
push
ficoml
iret
inc
imul
movsl
mov
push
xchg
jb
and
pop
pop
or
ret
mov
xor
push
sub
adc
ficompl
sbb
push
or
test
mov
sarb
shlb
shr
shlb
push
loop
sbb
popf
bound
fstl
pop
cld
push
outsb
add
adc
add
sysret
cwtl
sti
add
pop
cmpsl
mov
mov
inc
add
pop
jge
jecxz
out
inc
dec
mov
insl
mov
enter
cmp
mov
into
daa
pop
dec
mov
mov
aam
push
push
lock
add
xchg
cmpl
inc
sub
pxor
pop
mov
std
or
add
push
lods
inc
adc
gs
cwtl
mov
cmp
push
adc
std
adc
jnp
pusha
sub
add
in
fmuls
push
push
inc
lock
inc
jo
jo
ret
icebp
repnz
pushf
jp
outsl
addr16
xor
pop
daa
inc
xor
jne
jbe
les
in
add
xor
movsl
rcrl
scas
inc
jge
test
mov
icebp
test
lock
jb
rolb
mov
jmp
lret
inc
pop
ljmp
in
adc
arpl
int3
xor
ret
mov
popa
loopne
cmc
imul
mov
sub
in
lret
ljmp
dec
pop
stc
xchg
xor
aad
inc
mov
xor
xor
pop
pop
cmp
push
fdivl
aas
mov
adc
or
mov
je
imul
clc
sbb
jo
ss
outsb
bound
test
pusha
insb
out
aad
push
adc
lods
in
jne
inc
cmp
scas
leave
pop
adc
inc
push
mov
popf
inc
lds
pushf
ds
sbb
fcomip
popa
popf
sti
fstp
lret
int
rcr
mov
enter
stc
lret
fnstenv
fwait
js
pushf
cmpsb
mov
in
pop
pop
push
xchg
sbb
pop
insb
xchg
mov
imull
out
iret
shll
sub
sarb
pop
sbb
repz
jmp
xor
fsub
xchg
into
jnp
scas
xor
mov
or
push
cmp
pop
mov
repnz
sahf
jbe,pn
add
and
adc
or
lock
inc
hlt
inc
or
repz
jle
movsl
andl
fs
mov
fistl
gs
pop
ss
lcall
imul
mov
push
arpl
ret
std
xor
sbb
aas
punpcklwd
inc
sbb
popf
and
mov
fs
rcrl
add
pop
in
out
cmp
je
shlb
fisubrl
jp
daa
sahf
lds
jne
cmp
or
outsb
out
test
cmc
mov
mov
xrelease
data16
das
shrl
lahf
imul
test
dec
xor
icebp
xchg
and
lods
mov
cli
inc
icebp
inc
or
mov
mov
dec
and
push
pop
dec
pop
nop
adc
call
fldcw
stos
and
adc
mov
loop
das
sti
clc
divb
xchg
ret
mov
aas
mov
cmp
jae
sub
and
icebp
sbb
testl
and
jle
ljmp
in
inc
aam
sbb
out
inc
addr16
data16
adc
das
mov
and
jmp
and
pop
mov
je
imul
nop
lret
imul
mov
mov
add
xchg
ja
mov
imul
cli
sub
in
push
into
test
cmp
pop
pop
outsl
ret
sbb
mov
cltd
mov
sbb
jns
mov
cwtl
cmp
pop
pop
xor
jno
sbbl
into
jl
imul
and
aad
pop
imul
insb
scas
fisubl
sbb
pop
cs
fiadds
cmp
jmp
ficompl
fcomps
push
test
gs
cs
jp
inc
in
enter
xchg
mov
sub
cmp
dec
sbb
mov
fsts
lock
imul
into
stos
mov
dec
cld
push
push
pop
cmpsl
xchg
pop
movsl
push
pushf
lods
lea
scas
pusha
repnz
movsb
arpl
add
jp
xor
and
jl
lret
push
cli
push
mov
mov
addr16
pop
cmp
push
jns
fucomi
addr16
ficomps
sbb
cwtl
out
push
mov
out
inc
xchg
fcomp
stc
push
mov
sub
lret
or
jne
outsl
inc
leave
out
test
stos
out
das
pop
or
mov
rcl
dec
cld
and
xor
into
sti
push
lret
lret
aas
and
jmpw
mov
add
mov
or
sbb
sbb
pushf
jmp
dec
out
dec
aam
mov
ds
xchg
sbb
pop
cli
or
stos
sbb
sbb
stc
pop
flds
loop
pusha
outsb
push
dec
inc
stc
bound
pop
das
rcrl
jp
mov
cmp
push
adc
xor
or
ret
test
cmc
push
not
cmp
fnsave
ret
in
sub
pop
jmp
stos
pop
hlt
aas
les
jl
adc
sbb
cmp
andb
xchg
mov
add
add
mov
add
or
xchg
repnz
push
or
mov
pushf
cmp
cmp
movsl
sbb
mov
imul
inc
daa
test
mov
sbb
xchg
cmc
pop
mov
iret
xor
push
xor
inc
jge
lahf
mov
cmp
es
mov
push
stc
mov
jge
adc
movsb
sbb
stc
mov
mov
incl
add
xchg
call
mov
rcrl
mov
arpl
icebp
aad
hlt
les
fsubrs
and
pop
jno
xchg
xchg
cmp
fwait
psrlw
lods
dec
jge
scas
xlat
fwait
push
xchg
xor
bound
fwait
mov
shrb
iret
outsb
xor
fcompl
push
popa
pop
xchg
out
icebp
lods
sti
jg
ret
inc
sbbl
rcrb
mov
push
clc
jl
jne
or
mov
aam
aam
fnstsw
fucomip
xchg
dec
lea
or
movsb
dec
xor
push
cmc
mov
inc
or
loope
movl
in
sahf
andb
and
push
sub
pop
jns
inc
push
sbb
and
cmc
and
or
mov
out
stc
fdivrs
lcall
adc
sbb
xor
jo
push
pop
fcomip
stc
push
fs
and
push
cld
sub
pop
cmovnp
push
push
bound
mov
push
mov
push
stos
mov
adc
mov
adc
push
push
test
add
mov
inc
ret
xor
cwtl
pushf
clc
xor
dec
push
mov
jbe
aam
xchg
fwait
in
lea
inc
and
stc
mov
lods
in
mov
mov
movsl
scas
aam
scas
push
pusha
sbb
int
fs
ljmp
dec
sub
adc
pop
or
adc
add
xchg
mov
inc
add
pop
cmp
sbbb
pop
into
push
clc
cmp
andb
stos
shl
xor
cwtl
cmp
push
loope
mov
je
and
adc
lods
repnz
xchg
cmpsl
stc
jecxz
sub
lret
jne
outsl
sbb
mov
psubb
je
push
nop
add
jmp
pop
rol
es
sbb
fucom
rorb
mov
jno
jae
jne
xchg
jl
mov
cmpsl
dec
pop
xor
mov
mov
popf
sti
jmp
in
mov
nop
xor
push
dec
jnp
daa
push
out
dec
and
and
jmp
or
push
addr16
pop
sbb
cmp
xor
aaa
in
pop
add
stos
and
mov
cwtl
mov
adc
les
insb
lods
mov
std
nop
cmp
pop
stos
push
nop
xor
lret
mov
pop
nop
inc
lret
inc
roll
and
cmp
popa
aas
in
mov
cwtl
mov
cmpl
js
movsl
dec
xchg
adc
mov
outsl
addr16
mov
push
dec
cmp
sahf
xchg
roll
fdivrl
ret
lods
dec
cmp
bound
pop
sub
mov
lss
lods
je
inc
push
mov
mov
cld
and
pop
adc
shll
xor
outsl
aam
mov
mov
ret
fidivl
push
or
sub
sarb
shll
add
add
lock
inc
jbe
addr16
in
pusha
inc
push
jg
adc
and
int3
sub
dec
stos
loopne
stc
inc
je
sbb
and
xchg
fsubl
push
inc
icebp
adc
sub
lods
xor
jecxz
sub
gs
or
inc
add
mov
mov
and
negb
adc
leave
sbb
jo
in
mov
or
push
dec
xchg
push
and
or
fadds
les
sub
cmp
loopne
out
outsb
add
lods
push
pop
ljmp
pop
push
mov
mov
xchg
loope
loop
sbb
pop
pop
arpl
jnp
in
push
cmp
jne
push
lods
cmp
inc
push
push
insb
inc
fs
mov
insl
mov
jno
lds
or
dec
mov
gs
int
push
dec
push
into
jno
pop
xchg
and
in
mov
das
jmp
inc
mull
es
shrl
lods
test
stc
ret
std
ds
mov
mov
mov
and
sarl
xor
je
ret
adc
test
xchg
pop
xor
vmovsd
adc
mov
call
mov
jns
pop
dec
pop
jns
shll
in
add
adc
mov
cltd
xchg
sbb
sub
and
dec
mov
je
mov
mov
cld
out
lods
xchg
push
mov
xchg
rcll
sub
mov
pop
stc
call
les
sub
loope
ja
test
jno
or
stc
pop
mov
pop
ret
in
cmp
cmp
ret
repz
lcall
push
lcall
icebp
outsb
movsl
adc
jne
jbe
push
add
je
leave
lret
lahf
bound
movsl
clc
fbstp
pop
sbb
jmp
add
jg
mov
shll
adc
push
mov
xor
lret
mov
push
out
push
clc
call
sbb
lods
pop
ret
lahf
push
fs
or
xchg
cmpsl
aad
sub
push
adc
fwait
outsl
adc
mov
push
popf
ret
lret
dec
out
or
xchg
cmp
movsb
sub
lret
shll
gs
inc
pop
add
sbb
rcll
out
outsl
nop
fsts
xchg
decl
push
mov
adc
mov
lcall
inc
pop
rolb
mov
pop
push
push
fcoms
les
xor
sub
repnz
dec
test
sub
cmp
jg
ja
sti
les
lret
in
cmp
iret
repz
pop
mov
mov
add
loope
int3
sub
nop
push
out
xlat
sub
ret
pop
loopne
enter
cmpsb
xchg
mov
dec
into
push
daa
sti
sub
cmp
pop
out
add
and
mov
das
sub
add
push
js
push
movb
addr16
adc
or
test
fwait
and
and
andb
inc
mov
push
shll
ja
jmp
add
jge
enter
neg
inc
movsb
lods
mov
ljmp
cli
push
jmp
in
mov
imulb
ds
push
out
push
inc
les
pop
mov
xchg
xchg
sti
push
popl
push
lahf
inc
pop
fdivrs
fwait
lcall
and
mov
fsubrp
xchg
jnp
into
cmpl
pop
lea
stos
std
sbb
lret
jg
test
pop
ret
pop
mov
dec
jo
jmp
cltd
fsubrl
and
jo
xchg
sbb
je
xchg
jo
push
pop
call
stos
cli
mov
jb
jnp
fwait
std
out
jecxz
leave
jmp
stos
adc
xchg
add
pop
mov
insb
inc
adc
in
insb
pop
xor
or
dec
and
xor
sub
pop
mov
fwait
rcrl
xor
loopne
adc
jle
adc
pop
push
mov
jns
movsl
notb
xchg
int
jge
mov
xor
add
xlat
add
push
inc
sub
mov
sub
std
mov
pop
scas
leave
jge
out
add
adc
enter
pop
sbb
fimuls
in
sub
imul
outsb
mov
adc
jb
fldt
out
cmp
pop
arpl
mov
adc
cmp
xchg
pop
movsb
pop
jmp
adc
nop
fbld
pop
inc
pop
mov
ljmp
sbb
stos
aaa
cs
jmp
sub
fcmovbe
call
sarb
jbe
jo
lret
loope
out
mov
test
mov
and
jge
mov
or
pop
xchg
sbb
xchg
xchg
adc
cmp
add
xor
jecxz
pushl
les
rolb
push
test
adc
lds
jbe
popl
sbb
lds
addb
jl
and
movlps
dec
mov
shlb
mov
or
push
mov
arpl
enter
lea
push
fdivrs
mov
outsl
rorl
stc
loopne
cmp
xorb
fsubs
mov
xchg
adc
sbb
inc
xchg
in
test
in
push
mov
mov
lret
push
xchg
jl
push
push
pop
mov
add
dec
mov
int3
bound
mov
mov
movsl
jl
lods
or
mov
push
call
sahf
sbb
in
in
and
or
ret
mov
jne
scas
mov
inc
cwtl
fdivrl
popa
imul
mov
orb
pushf
cmp
mov
cwtl
test
push
aaa
loop
cli
stos
adc
aam
jg
or
jno
cmc
int
imull
mov
jecxz
adc
inc
push
sub
xlat
clc
sub
sbb
aad
loopne
mov
mov
jae
push
sub
stos
adc
pop
xchg
test
adc
pop
lds
fucomp
test
push
jmp
pop
stos
lods
test
xor
ffree
sub
xor
push
xlat
ret
xchg
cmc
nop
mov
cmpsl
adc
test
add
push
inc
hlt
rcrb
cmp
fmulp
mov
jb
xchg
or
out
cmp
les
aaa
pop
mov
sahf
push
mov
lods
lock
adc
lock
lcall
dec
popa
call
adc
fwait
adc
mov
mov
mov
mov
cmp
iret
js
cwtl
inc
pop
jmp
into
test
cli
loop
adc
outsl
out
imul
daa
cs
mov
xchg
cmp
lcall
mov
cmp
loope
ret
inc
pop
into
movsb
mov
and
shl
inc
rclb
cli
mov
dec
jle
pop
aad
mov
shlb
lds
mov
jmp
ficompl
lret
pop
aad
loope
jge
xor
pop
iret
stos
jnp
inc
push
inc
inc
mov
push
adc
scas
xchg
aas
in
mov
push
ss
adc
sbb
xchg
hlt
jne
push
icebp
rcl
addr16
jns
jbe
or
aad
repnz
mov
and
push
push
std
xlat
mov
jp
mov
inc
mov
adc
es
jg
int
cmp
pop
xchg
pop
push
mov
push
loopne
jo
add
sub
fsubrl
jns
mov
mov
inc
jns
and
xchg
sub
inc
dec
inc
rol
ds
in
mov
xlat
pop
popa
inc
aaa
cmp
mov
xchg
in
cmpsb
enter
cmp
fdiv
or
adc
ret
lock
pop
out
mov
jo
mov
test
xor
and
cmp
es
add
xchg
mov
insl
mov
dec
push
loopne
xor
xchg
arpl
mov
fdivl
rcr
aad
xchg
or
mov
cmc
inc
ds
std
cmp
mov
push
es
xchg
xor
and
xchg
inc
push
adc
dec
gs
lods
inc
dec
xorb
add
jecxz
sub
loop
fsub
pop
enter
es
mov
mov
or
int3
jge
dec
mov
hlt
sub
jg
dec
lahf
jle
cmc
dec
add
mov
movsl
divb
xor
pop
mov
cmp
cmp
pushf
loope
sar
jae
mov
in
dec
ljmp
or
stos
xchg
fnstsw
pop
xchg
lds
dec
pop
cmc
mov
jmp
dec
fwait
dec
stos
scas
jae
test
jle
jo
sahf
repz
mov
and
insl
mov
aas
cmp
lea
mov
or
fstp
pushl
jns
cmp
mov
add
cli
dec
pop
push
loopne
shlb
adc
addr16
iret
scas
mov
jg
or
sahf
aaa
sarb
lock
test
jecxz
mov
xchg
push
repnz
mov
push
jp
fstpt
repz
sub
mov
test
daa
in
arpl
mov
inc
and
rcll
ja
je
loop
dec
addr16
pop
or
add
xchg
mov
negl
pop
addr16
mov
insl
cmp
jns
dec
shr
dec
jle
shlb
pushf
push
cwtl
xchg
pop
arpl
push
add
push
pop
inc
scas
test
xor
sbb
mov
fwait
pop
mov
xor
loope
gs
mull
xchg
dec
mov
sbb
loopne
adc
mov
jg
out
push
popa
lea
push
adc
icebp
negl
pop
pop
lods
inc
xor
mov
lods
and
ret
mov
fists
adc
jmp
rorb
mov
bound
cld
repz
gs
mov
div
xor
mov
icebp
stos
jb
scas
adc
idivb
inc
or
std
cs
sub
sub
or
mov
inc
push
or
dec
sub
out
lahf
cmc
xor
push
std
cmp
aad
or
jo
mov
fcomp
jb
push
shlb
test
bsr
or
notl
pop
mov
xchg
add
xchg
xchg
test
repz
cmc
sarl
mov
push
sbb
adc
inc
fdiv
xchg
out
fdivs
jae
sub
lock
lock
ds
rcrl
clc
push
push
inc
out
sbb
test
fstl
push
add
lds
lret
ret
or
or
adc
fwait
dec
fsubrs
sbbb
and
dec
cmpl
cmpsb
push
das
and
adc
sti
out
push
out
mov
fwait
adc
insl
xchg
sbb
jg
out
popa
push
lods
mov
mov
or
push
mov
sub
js
out
lods
sub
cwtl
jo
xchg
shlb
call
mov
dec
insb
out
jmp
sbb
xchg
push
dec
fisttps
and
nop
pop
js
stc
inc
dec
repz
in
or
adc
mov
movsb
or
mov
add
xchg
pop
data16
loope
orb
mov
icebp
mov
or
not
movsb
int3
cmp
scas
pop
lods
loopne
add
sbb
sub
aaa
mov
xor
or
xor
imul
sbb
mov
aas
pop
je
fsubs
lret
fwait
iret
repz
jg
fidivrs
sbb
cmp
xchg
jp
ljmp
test
lea
inc
pop
adc
lds
mov
inc
push
fs
add
adc
clc
pop
jno
mov
mov
leave
hlt
mov
insb
out
mov
test
loope
jl
ja
into
daa
outsl
xchg
mov
sbb
movsb
jae
loop
sub
or
lcall
inc
pop
lcall
pop
sbb
cmpsb
test
rcr
sbb
jns
scas
xchg
or
inc
add
pusha
add
filds
sbb
xor
jmp
pop
sub
jne
sbbl
or
jb
pop
inc
push
adc
adc
adc
mov
test
fstl
daa
mov
cmp
aas
cli
inc
mov
iret
xchg
lods
adc
adc
data16
jmp
lods
fisttpl
cmpsb
addb
add
test
test
adc
daa
ss
mov
mov
xor
lret
pop
mov
test
and
and
cmp
xor
sbb
pop
push
sub
sub
out
xchg
xlat
stos
faddl
ja
les
rorb
jle
dec
js
sbb
fstl
mov
and
gs
in
jnp
xchg
scas
pop
push
inc
xor
cmp
imulb
nop
sbb
jl
cs
pop
hlt
and
inc
in
bound
fildll
inc
aaa
add
and
mov
inc
inc
sti
cwtl
sub
cld
fsubl
test
sbb
stc
sub
out
sub
pop
jecxz
pop
push
neg
out
jmp
scas
or
or
xor
lds
or
int
jecxz
add
xor
sarl
jnp
or
lret
nop
insb
dec
push
iret
sbb
jb
cmpsl
aas
add
sub
mov
xchg
aad
jg
mov
shr
sub
inc
out
dec
rcll
lret
sub
lret
inc
sub
or
cmc
pop
and
and
jno
into
pavgb
mov
in
ds
adc
jecxz
das
sub
mov
fwait
jne
mov
dec
jmp
loope
in
cmpsl
neg
out
sub
add
or
mov
push
int
jl
movsb
gs
arpl
stc
dec
fcompl
pop
sarl
push
mov
fists
movsl
or
lcall
cmp
push
cmp
stc
cwtl
ret
sti
cmp
add
call
push
inc
mov
adc
ret
mov
cmp
inc
decl
or
mov
es
jecxz
cmc
cmp
aam
sahf
add
mov
lcall
mov
es
sbb
hlt
sbb
mov
lcall
hlt
mov
mov
push
fwait
push
jno
xor
sub
insl
bound
jle
xor
xor
inc
mov
hlt
push
insl
call
push
and
mov
dec
insl
stos
jb
push
imul
loope
xchg
jecxz
mov
lds
stc
lcall
add
imul
aas
iret
mov
xor
lcall
mov
test
push
addr16
cld
movsl
popf
je
push
push
loopne
mov
jnp
pop
xor
mov
xor
rorb
lock
inc
test
push
cwtl
cmpsl
insl
inc
mov
imul
faddl
ds
mov
sbb
mov
mov
jbe
jmp
inc
insl
ja
outsb
pop
fs
mov
and
call
mov
dec
xor
ja
push
sahf
insb
push
loop
negl
jno
jl
add
cmp
sbb
cmp
xor
xchg
jl
mov
pop
push
addr16
cwtl
and
push
lcall
mov
pop
jne
enter
mov
inc
sub
ja
adc
cmpl
js
rorb
inc
adc
sbb
gs
mov
mov
imul
pop
inc
add
push
sub
xchg
xlat
out
xchg
outsl
loope
mov
aam
jb
fnstcw
mov
bnd
add
or
imul
rcrl
aaa
gs
aaa
sti
add
cmp
pushf
inc
repz
mov
shlb
ret
mov
pop
cmp
adc
push
jl
sub
push
int
enter
aad
rolb
mov
push
add
mov
pop
mov
sbb
aam
dec
xchg
xchg
add
popf
imul
or
scas
popl
xor
and
mov
xor
call
mov
mov
movsl
gs
and
sub
sbb
int3
dec
mov
or
pop
rcrl
sbb
cmpsl
fisttpl
aam
mov
push
jo
and
sbb
inc
cltd
in
in
aad
repnz
cmp
xor
mov
pushf
and
dec
into
ficompl
jl
ficoms
xor
add
push
add
std
and
sbb
push
out
stos
add
pop
xchg
je
pop
inc
scas
out
adc
pop
inc
das
fstpt
or
into
xor
and
mov
sbb
outsb
imul
xchg
push
test
ret
test
push
frstor
mov
and
lods
hlt
shll
jecxz
movsl
mov
in
inc
sub
movsl
mov
pushf
adc
jnp
mov
mov
add
pop
outsb
push
sub
dec
in
lret
dec
push
int
in
xchg
cmpl
xchg
int3
mov
adc
inc
xor
dec
mov
icebp
fimuls
xchg
fsubrl
lock
test
lahf
lea
stos
and
adc
pop
sbbl
mov
clc
or
ret
pop
push
mov
jmp
jl
sub
sahf
in
inc
jp
cmpsl
rclb
pop
dec
mull
or
loopne
dec
leave
jae
mov
or
jne
int
movsb
ljmp
sbb
mov
mov
xor
mov
std
test
xor
xchg
push
roll
pop
std
or
cmp
sbb
es
jmp
dec
fcomps
mov
jns
sbb
lock
sbb
insb
push
inc
clc
or
aam
pushl
out
xchg
sub
int
xor
es
xchg
int3
adc
xor
push
dec
orl
jb
out
outsb
xchg
shll
xor
movsb
es
or
insb
jae
mov
int3
es
mov
push
or
cld
loope
mov
sub
test
lea
rcr
arpl
xorb
repnz
cmp
ss
shlb
fimuls
add
leave
cwtl
rol
sarb
xchg
cltd
fistl
mov
jno
dec
push
insb
outsb
xchg
sbbb
mov
cmc
test
fdivl
je
xor
mov
stc
ret
sahf
mulb
jg
pop
scas
sub
push
adc
inc
movsl
outsb
stos
push
jbe
mov
pusha
add
lods
cmp
cmpsb
imul
pop
xchg
scas
aas
insl
push
or
imul
das
dec
insb
stos
jecxz
jle
loopne
lret
add
lret
loope
adc
push
lcall
xchg
adc
adc
or
jmp
cs
sub
arpl
cmp
dec
into
lock
in
jae
and
pop
addr16
push
daa
out
sub
scas
aas
push
and
xor
fidivs
fs
mov
jecxz
fwait
mov
scas
pop
or
push
xchg
mov
call
xor
and
sbb
fsubs
sbb
adc
xlat
dec
adc
mov
sub
or
test
icebp
scas
mov
fcomps
and
enter
dec
add
pop
mov
adc
iret
hlt
mov
xor
outsl
or
mov
dec
insb
fidivl
out
or
out
jns
insb
sahf
dec
and
loopne
xlat
shrb
stc
in
mov
add
int3
mov
mov
lahf
mov
inc
pop
cmp
dec
mov
inc
xchg
xchg
sub
mov
fdivr
push
push
pop
mov
push
adc
mov
insb
push
in
fimull
xor
enter
sbb
jp
adc
pop
stos
dec
xchg
daa
and
mov
aas
scas
jle
sub
cmp
xchg
xlat
hlt
cmpb
test
and
insl
sti
loop
fsubl
sti
fs
insb
push
push
fiaddl
popa
jbe
jns
loopne
out
ljmp
sub
aad
jp
mov
out
push
fdivrl
xchg
adc
jbe
ljmp
test
jbe
push
or
sarb
add
xchg
movsb
mov
insl
push
aas
lock
call
xchg
hlt
shlb
mov
mov
insb
xchg
mov
popf
adcl
jl
sbb
js
inc
sub
push
fcomp
push
jp
xchg
out
fwait
nop
popa
dec
test
cmp
dec
fwait
rclb
shr
push
xchg
test
rcr
icebp
inc
cld
idivl
cld
lahf
dec
mov
inc
dec
push
xchg
clc
or
or
aam
pop
sub
popf
xchg
loopne
cmp
cmp
push
imul
lcall
lods
or
pushf
in
inc
in
nop
inc
mov
in
test
shlb
cltd
shll
jno
push
arpl
cmc
testb
iret
mov
out
push
les
sub
lahf
adc
sahf
sub
push
scas
addl
push
xchg
xor
pop
and
aas
mov
movsl
aaa
mov
dec
fdivl
fsubl
lock
add
loop
pop
in
mov
mov
push
into
mov
lods
jbe
cltd
nop
aam
or
bndstx
push
clc
cmpsl
pop
lock
fimull
add
cld
mov
daa
hlt
push
pusha
pop
fiaddl
cmp
roll
mov
jge
mov
pop
mov
mov
cmpsb
pushf
pushf
shl
xchg
imul
xor
sar
fidivrl
mov
adc
hlt
notb
iretw
jo
sbb
ljmp
jmp
cmp
mov
movsl
fs
stos
pop
jecxz
sub
jecxz
sti
lret
addr16
insb
adc
out
jbe
loope
cli
mov
outsb
repnz
mov
lcall
fiadds
pop
mov
jno
xor
imul
push
xor
lods
or
or
or
jne
mov
in
inc
lret
sar
xchg
imul
push
and
test
adc
jb
inc
popl
fcmove
lret
adc
vshufps
pop
subl
pop
add
fdivrp
insb
stc
or
mul
adc
mov
in
push
movsb
pusha
mov
shlb
fwait
add
repz
xchg
pop
dec
xlat
mov
pop
stos
hlt
aam
test
inc
pushf
xlat
push
push
inc
xor
loop
sti
in
in
jg
test
mov
movsl
jo
jge
mov
mov
pop
lret
mov
add
mull
mov
push
mov
cltd
dec
insb
sub
jmp
dec
push
sub
mov
pop
jge
cmovae
push
mov
dec
mov
pop
dec
subl
push
cld
sub
jge
adc
mov
test
cmp
and
data16
mov
ficompl
push
xor
mov
or
pushf
std
faddl
push
push
jnp
out
mov
pop
cmp
repz
mov
mov
xchg
xor
inc
mov
sub
add
imul
popa
add
sbb
mov
in
and
in
xchg
pop
hlt
repz
sub
pop
jp
pop
mov
and
scas
pushf
bswap
fstl
jle
adc
in
scas
add
hlt
mov
sub
loope
dec
rolb
test
aas
jecxz
loope
scas
in
cmp
loopne
push
push
xor
data16
mov
sbb
leave
rclb
test
ret
jecxz
lods
cmp
insl
sbb
hlt
repz
cmp
or
loopne
cs
addb
cmp
int
inc
lods
xchg
mov
mov
andb
cmpsb
or
xchg
aaa
jns
pop
sub
and
xchg
pusha
into
jae
pusha
aad
movsl
push
adc
mov
add
pop
ja
popa
imul
cld
xchg
fistpll
jne
daa
stos
sbb
orl
jo
call
loop
mov
mov
lret
jp
sbb
jno
push
rorb
pop
leave
push
inc
push
fisttps
push
testb
mov
fnstenv
lcall
bound
jle
cmp
mov
xorl
cmpl
or
mov
sahf
sub
cmp
ja
in
daa
sbb
inc
in
xor
pusha
mov
xchg
push
cmp
fbld
aas
icebp
dec
dec
mov
jecxz
ss
leave
fwait
xlat
jo
lea
xchg
out
jle
xchg
sahf
call
push
mov
xchg
xchg
popa
loopne
dec
jp
fdivrs
mov
xor
mov
leave
fdivrp
roll
orl
stc
dec
or
cld
clc
cmpl
push
and
lret
in
pusha
mov
aad
and
xchg
mov
jb
bound
dec
and
and
push
xchg
jmp
pop
mov
icebp
jge
insb
mov
xchg
notl
int3
jnp
dec
jns
ficompl
push
movsb
dec
xchg
outsl
mov
cld
sub
cs
mov
int
push
lods
and
mov
data16
nop
frstor
pop
add
ret
lret
insb
push
cmpl
and
cltd
cmp
or
out
inc
inc
addb
mov
pop
push
adc
sbb
sti
lret
mov
inc
push
sub
jl
pop
fdivp
dec
insl
and
push
aas
nop
jle
je
adc
int
dec
xchg
cmp
cmc
sub
mov
fwait
das
sub
push
xchg
mov
jmp
xchg
mov
inc
or
in
pop
sti
jl
subl
inc
test
scas
insb
shll
dec
pop
rcll
add
pop
push
mov
jg
loopne
mov
test
sbb
psubusb
fwait
repnz
stos
inc
inc
adc
dec
inc
xchg
ret
mov
dec
xor
xor
fstl
scas
arpl
loope
or
int3
aam
jle
ss
adc
inc
daa
add
pop
loopne
sahf
mov
cmp
daa
add
sub
stc
mov
push
adc
incl
sbb
push
push
dec
shlb
std
sub
int
pop
push
inc
jno
mov
sbb
inc
out
jns
dec
push
leave
sub
and
mov
dec
xchg
popa
inc
sub
sbb
xchg
lock
dec
fcomps
sbb
add
aam
imul
xlat
out
out
out
mov
aam
pop
std
xchg
sub
sbb
cmp
ret
rorb
repz
les
lock
test
mov
or
inc
out
xorb
push
shrl
outsl
jb
add
or
or
sbb
lcall
lods
loop
pop
mov
js
push
test
fmul
rcrl
sub
iret
cmp
dec
jle
pushf
sub
scas
mov
or
shlb
add
inc
inc
cmpsl
andl
arpl
push
ss
mov
mov
or
mov
cmp
sub
xor
and
dec
xchg
inc
sbb
out
je
or
xchg
push
inc
movsl
cmpsb
push
sub
stc
js
call
pop
ret
and
lret
stc
xor
mov
jns
arpl
dec
cmp
dec
pop
jno
mov
jno
repnz
pop
lret
xchg
stc
adc
test
push
sar
pusha
mov
movsb
frstor
xchg
fstl
pop
insb
addr16
xchg
dec
inc
cmp
adc
push
dec
cmpsb
loop
into
leave
sub
ret
sahf
jl
xlat
repz
mov
sub
scas
and
int3
inc
mov
inc
cld
in
outsb
inc
out
aam
jp
rcrl
or
add
test
or
pop
cmc
push
nop
sub
nop
xchg
inc
lret
mov
or
push
push
sub
pop
dec
outsl
test
mov
sbb
leave
outsl
or
pop
sbb
or
in
xchg
mov
addr16
xorb
outsl
adc
pop
cmpsl
xchg
push
subb
xor
jle
sub
sbb
sbb
cmpsl
pop
movsb
cmpsl
add
loope
mov
pop
pop
cmpsb
jg
jp
nop
inc
fadds
out
ljmp
int3
xchg
mov
movsb
fsubrp
dec
or
adc
scas
push
cmpsl
cmp
or
pop
xchg
mov
sarb
lea
sub
jle
pop
mov
xor
and
outsl
add
sub
aad
test
adc
xchg
mov
mov
ljmp
movsb
inc
enter
jnp
mov
sbb
daa
lret
lahf
daa
inc
pop
mov
mov
mov
inc
clc
cwtl
movsl
ja
mov
hlt
mov
sbb
jmp
cmc
stos
cli
mov
lret
push
mov
pusha
lds
popf
mov
addr16
xor
mov
sbbb
xchg
push
jb
pop
pusha
and
mov
and
aas
addr16
mov
dec
lcall
pop
jp
aad
add
jne
daa
adc
inc
outsb
jecxz
arpl
test
mov
hlt
std
mov
test
push
shl
sbb
and
or
mov
bnd
jb
or
aas
push
stos
mov
lock
push
ljmp
fstl
arpl
mov
mov
orl
inc
pop
pop
test
cld
push
js
jp
pop
test
add
cwtl
je
sbb
xchg
orb
dec
orl
jns
push
clc
int
ljmp
repz
adc
adc
or
scas
rclb
loope
je
jle
pop
shll
sarb
push
jge
cmp
jbe
mov
mov
add
push
cmp
or
inc
jg
aam
pop
ss
inc
add
lods
outsb
xchg
lret
cs
xchg
inc
jbe
jle
xorl
outsb
insb
jg
or
pop
icebp
mov
stc
mov
add
pop
popa
adc
and
xlat
icebp
shrl
push
mov
test
add
dec
dec
xorl
not
mov
out
cltd
sub
xchg
fldt
mov
inc
adc
int3
sbb
int3
xchg
imul
fsubrl
out
sub
push
pop
and
mov
dec
jp
fmul
pop
push
xchg
sub
cmp
xor
idiv
adc
mov
out
into
ljmp
ss
sbbl
dec
inc
rol
ffreep
fwait
inc
pop
add
fisttpl
adc
mov
mov
test
lods
push
cmpsb
mov
enter
shl
mov
inc
mov
sahf
test
fimuls
sub
sbb
push
push
pop
cltd
push
mov
dec
jo
pop
mov
ljmp
dec
pop
cmp
push
xor
sbbl
dec
cmc
push
imul
push
aas
into
push
daa
cmpl
push
dec
push
jecxz
push
mov
roll
pop
inc
pop
fmuls
test
shll
jecxz
jle
jae
pop
push
imul
inc
ret
out
add
jl
push
jne
mov
sbb
jmp
jnp
jbe
lods
jp
inc
test
cld
xchg
sub
lret
mov
ss
jnp
jmp
pop
inc
adc
mov
les
aaa
pop
xchg
lods
icebp
xchg
adc
jecxz
cld
mov
shrb
repnz
xchg
loope
mov
jnp
sarb
mov
pop
mov
mov
je
jg
inc
push
shll
cmpsl
mov
inc
daa
push
push
push
rol
jbe
xchg
fcomi
mov
in
mov
insl
repz
das
lea
sbb
push
lcall
mov
movsl
mov
cmpb
jp
xchg
bound
jnp
inc
jp
clc
dec
mov
cmc
dec
stos
xchg
loop
cli
mov
cmp
mov
int
push
mov
inc
aas
add
test
mov
xchg
pop
cmpsb
or
in
out
sbb
fildll
mov
cmp
dec
int3
add
sub
push
shll
pxor
inc
ficoml
dec
mov
jle
scas
arpl
nop
adc
mov
test
inc
nop
and
mov
jae
push
cmp
lret
sarb
aad
dec
pop
add
dec
cmp
into
mov
inc
mov
es
pop
out
inc
jp
and
adc
dec
jne
out
mov
ficompl
pop
std
xor
xchg
ds
ljmp
push
jge
mov
mov
mov
push
lret
rcl
jae
adc
mov
aad
mov
xchg
mov
hlt
xor
adc
popf
outsb
and
aas
jmp
mov
rorl
adc
sbb
inc
movsb
xchg
and
mov
ljmp
jge
mov
incl
or
dec
jg
add
test
fdivrs
scas
sub
in
jmp
pop
jecxz
addr16
jne
es
dec
loop
dec
cmc
dec
jns
push
push
push
cltd
ret
imul
divl
push
cmp
iret
enter
in
and
xor
cmpsb
mov
fcoml
dec
mov
rcll
jg
loope
sbb
mov
cmp
mov
xchg
fld1
sbb
xor
scas
std
xor
jns
pop
xchg
iret
jge
cwtl
lock
pop
cmp
mov
xchg
loope
and
les
hlt
rcll
pop
je
sbb
loopne
mov
scas
test
lods
lods
into
mov
mov
or
mov
aaa
dec
cmc
pushf
adc
out
xchg
mov
xor
and
and
aaa
std
jmp
rolb
push
adc
in
adc
imul
xor
cmovne
and
push
lret
fcoml
mov
pop
mov
cltd
jp
cltd
sub
jg
pop
stos
mov
sbb
add
adc
loop
inc
sub
mov
out
lods
incb
dec
jp
shl
adc
adc
pop
inc
xor
and
insb
psraw
pop
clc
or
enter
jo
lret
pop
push
jp
jg
int
stos
mov
jb
cmp
mov
std
addr16
sarl
ror
mov
pop
adc
dec
jnp
movsl
std
int
or
inc
dec
test
insb
and
movb
iret
pop
add
sbb
add
fcomi
out
test
leave
mov
nop
mov
roll
jg
outsl
push
pop
inc
cmc
sahf
mov
in
pop
xchg
call
mov
mov
mov
movb
imul
mov
dec
in
enter
pop
and
and
add
pop
fcompl
insl
rorb
and
stc
mov
test
xor
adc
int
ja
sub
enter
push
out
inc
mov
inc
jno
mov
mov
addr16
scas
fcoms
ret
fsubr
jbe
jg
cmp
inc
inc
inc
subl
add
push
repz
mov
mov
cltd
mov
test
mov
decl
push
or
mov
loop
or
fwait
push
int
jmp
add
clc
je
add
pop
shlb
xchg
std
jle
sbb
mov
mov
and
imul
mov
sarb
jbe
pop
xchg
rcrb
inc
mov
sbb
lret
sbb
into
test
decb
xor
mov
iret
dec
fwait
push
cmp
lods
fcmovnb
aad
xor
test
idiv
bt
fnstsw
fmuls
add
jnp
ds
in
out
insl
add
stc
mov
in
popf
or
pop
hlt
hlt
inc
test
mov
mov
or
ja
mov
jnp
ljmp
mov
mov
pop
add
imull
or
cmpsb
cmpl
pop
test
adc
pop
in
shl
jb
ficomps
in
scas
nop
add
repz
xchg
or
jb
jne
adc
xor
mov
call
xchg
mov
inc
cmpsl
sbb
aad
das
push
repz
repz
dec
out
jge
rdtsc
and
cmp
mov
ljmp
sub
lret
stos
shlb
aam
cmpsl
and
imul
push
addr16
fdivrl
push
push
cmp
out
xchg
in
add
ret
pop
push
mov
scas
jg
mov
adc
flds
std
loopne
test
lods
into
sbb
xchg
shll
out
test
cwtl
and
out
xchg
stos
push
stc
xchg
sbb
rorb
adc
mov
pop
subl
mov
imul
xchg
cmp
xchg
repz
jmp
push
sub
jo
movsl
idivb
pop
push
cld
mov
shr
repnz
push
pop
push
cmp
mov
cmpsb
push
ret
ret
into
pop
icebp
push
inc
rcl
xchg
or
insb
mov
sbb
dec
jb
mov
or
inc
xchg
fldcw
shlb
loope
test
out
gs
dec
inc
or
popa
mov
pop
xchg
leave
jecxz
and
push
fdivs
cmpsl
cmp
aam
push
bound
mov
lock
inc
dec
mov
pop
lea
out
sbb
iret
xor
scas
imul
xchg
push
pop
push
ljmp
pop
arpl
jno
les
aam
je
scas
lret
dec
rclb
mov
adc
lods
sbb
xchg
mov
fnstsw
aad
mov
add
mov
fs
sbb
mov
add
add
test
pop
ljmp
aas
lods
sbb
cmpsb
add
ja
fwait
mov
mov
push
pop
fnstsw
adc
mov
mov
sbb
pushf
mov
sbb
das
jmp
flds
mov
or
leave
fs
adc
pop
sar
mov
dec
or
add
xor
and
loop
lret
imul
cmp
int
push
cwtl
pushl
cld
lods
inc
mov
ret
test
cld
fdivrl
push
push
cwtl
and
test
adc
xchg
loope
leave
xor
ret
call
repz
lods
stc
shlb
jns
into
jae
jle
dec
dec
cmp
imul
pop
inc
imul
jge
aam
dec
icebp
test
insb
aas
jl
or
repnz
pushf
or
pop
dec
call
movsl
sub
inc
xor
cmpsb
in
push
inc
inc
sub
jecxz
hlt
pop
dec
push
pop
push
out
fs
mov
jns
mov
pop
mov
mov
mov
sti
fwait
inc
cmp
jecxz
inc
rolb
sub
aas
in
ljmp
fwait
aas
and
js
cmpsb
mov
pop
int
push
jg
sbb
dec
enter
outsl
lret
mov
push
add
mov
xchg
bound
xlat
xlat
sti
jne
repnz
lock
pop
nop
test
mov
pop
mov
add
cli
xchg
in
mov
pop
cli
hlt
imul
in
insb
mov
sub
jno
leave
mov
imul
mov
mov
adc
popf
add
push
push
call
cmpsb
xchg
xchg
pop
and
inc
loop
test
movsl
or
frstor
cmc
roll
mov
xor
xlat
enter
mov
lods
mov
leave
sub
adc
add
push
lret
rol
popf
int
inc
jbe
bnd
push
out
aad
push
mov
mov
or
sbb
orl
sub
stos
stos
xchg
es
sarb
mov
jmp
in
adc
adc
jns
popf
dec
dec
or
jb
fadds
cltd
mov
jle
cmpsl
icebp
imulb
bound
aas
pop
jle
lcall
push
repnz
clc
cmp
inc
and
out
jae
push
enter
leave
inc
or
fdivrl
negb
mov
jmp
add
js
sbb
aad
inc
dec
clc
in
insl
in
sub
xchg
sub
ds
sbb
jg
jb
pusha
xchg
inc
and
mov
jne
pop
add
xor
std
jg
sbb
iret
mov
mov
test
mov
sbb
sbb
rcrb
arpl
xchg
xchg
iret
iret
stos
fxch
sbb
es
add
cwtl
out
movsl
icebp
mov
cmpsl
mov
adc
xor
mov
xor
or
add
push
bound
in
test
pop
out
pop
int
xor
push
ja
lock
and
jns
sub
mov
mov
clc
xorl
mov
inc
jmp
enter
cmp
insb
enter
mov
imul
pop
add
lock
imul
or
into
insl
adc
lcall
xlat
xchg
in
add
lds
pop
push
imul
out
test
sbb
iret
jl
jno
ds
cli
sbb
mov
add
inc
mov
mov
mov
sbbl
mov
cmp
minps
jmp
sub
add
lock
mov
sub
xor
imul
inc
icebp
inc
mov
pop
jle
int
jle
mov
or
faddl
movsl
dec
hlt
and
xor
push
jl
push
inc
out
mov
add
push
cmp
add
out
lea
sbb
cmp
lahf
ret
mov
lcall
fdivrl
pushf
cmpsb
shrb
add
nop
xor
lret
adc
push
ds
xchg
xor
fwait
jne
and
es
imul
push
out
xor
in
in
or
add
movb
and
leave
aaa
sub
jno
mov
lds
std
jmp
imul
int
leave
cmp
lret
scas
insb
flds
orb
arpl
lret
test
adc
mov
jnp
test
in
inc
cmpps
jbe
aam
sbb
xor
lahf
xor
mov
mov
fwait
jg
jmp
imul
sahf
inc
aad
lock
push
mov
and
push
lds
cwtl
cmc
or
lock
push
dec
lods
cmpsb
or
adc
test
mov
inc
or
movsb
mov
xchg
jb,pt
push
dec
shll
lock
or
jecxz
cmpsb
cmp
dec
mov
sbb
repnz
inc
dec
or
ud1
and
test
sbb
add
arpl
lods
mov
repnz
shrb
test
xor
mov
jecxz
data16
sbbb
xchg
aam
imul
scas
stos
xchg
mov
adc
imul
jle
dec
adc
rol
sti
in
sub
xchg
out
shrb
push
add
ret
stos
xchg
repz
mov
out
sub
adc
xchg
mov
clc
push
ja
ror
movsb
rcll
mov
jecxz
adc
inc
mov
jns
aaa
fcoms
pop
in
xchg
jle
adc
popf
sbb
mov
lods
lret
inc
repnz
add
cmpsb
adc
int3
sbb
enter
mov
bound
in
xchg
add
outsb
pop
rcll
jle
add
imul
pop
test
xor
lahf
xchg
mov
fbstp
pusha
popf
jl
mov
dec
mov
mov
xchg
movsl
sbb
fcomip
out
mov
add
adc
and
mov
ljmp
sbbb
fnsave
ja
xchg
pop
mov
inc
or
cli
jle
add
jge
fimull
adc
in
ss
or
mov
jecxz
cwtl
div
aad
cmpsb
dec
mov
dec
mov
mov
xlat
imul
xchg
cwtl
bound
or
mov
cmpsb
test
popf
mov
addr16
mov
dec
lahf
test
imul
pop
out
or
addr16
mov
mov
iret
mov
xor
fmul
push
adc
lahf
gs
sbb
cmp
pushf
push
in
test
xor
mov
ds
lea
out
jae
jns
adcb
lea
or
subl
fwait
shrl
dec
pusha
and
in
adc
pop
imul
xchg
inc
daa
adc
jae
xor
mov
pop
repz
fisttps
sbb
ret
in
mov
call
call
lock
mov
in
dec
fwait
adc
jnp
jl
fldl
jge
pop
insl
push
push
addr16
push
movsl
pop
adc
in
cmp
xor
dec
fmulp
sbbl
mov
jo
mov
push
jns
add
mov
mov
movsl
and
ret
sub
and
imul
shll
adc
andb
sbb
mov
aas
rol
pop
stos
dec
cmpl
mov
ljmp
push
xor
xchg
inc
fbstp
xchg
sbbb
dec
mov
jmp
adc
testl
stos
mov
or
int
fistl
test
mov
hlt
push
inc
iret
test
fcompl
pop
aas
add
imul
sbb
fnstenv
adc
daa
sub
add
repnz
sbb
in
xchg
mov
cld
adc
pop
dec
sbb
test
shll
inc
hlt
adc
addr16
and
xor
jle
inc
orb
pop
lock
mov
outsl
scas
mov
fisttpll
fldenv
lahf
xorl
adc
ss
fcmovne
push
sbb
xor
les
push
mov
add
nop
lret
ffreep
ficompl
jp
add
in
insl
andb
aas
leave
mov
mov
sub
sub
inc
mov
and
sub
and
xchg
jns
fisubrl
js
and
and
jb
mov
repnz
dec
dec
fs
and
repz
or
clc
push
pop
mov
jp
test
and
cld
add
ret
push
xchg
jns
aad
push
fs
cwtl
mov
mov
pop
add
pop
and
in
cmp
jle
cmpsb
inc
fiaddl
inc
andl
movlps
lods
pop
xchg
push
out
push
jb
je
loope
ficomps
clc
inc
ja
jl
out
push
std
test
popf
inc
mov
dec
lods
xchg
out
repz
mov
xchg
lds
jle
nop
fs
adc
mov
xchg
or
sub
mov
jg
scas
inc
loopne
xor
xor
movsl
imul
sarb
push
aad
mov
mov
pop
fisubrl
xchg
jmp
ret
cltd
nop
pushf
sub
jb
into
daa
pusha
pop
movsl
inc
insb
jo
fwait
sbb
cwtl
xor
jecxz
or
and
push
lea
mov
data16
fcomip
mov
jne
push
ret
cwtl
shll
xchg
jecxz
scas
cld
stos
dec
aam
ja
add
push
and
and
jnp
and
lds
jecxz
loopne
jecxz
mov
sbb
mov
push
jne
push
mov
mov
fimuls
and
add
addb
add
jo
adc
rcrl
outsl
jnp
out
sub
mov
int
jb
xchg
mov
xchg
push
popa
nop
repz
jmp
fldcw
jmp
test
sbb
call
cmp
pop
fwait
cli
sbb
cmp
push
nop
lcall
fcomp
mov
mov
push
push
and
test
cmp
fisttpll
push
test
adcb
jb
mov
push
pushf
add
dec
arpl
add
mov
sahf
mov
or
fcmovnb
add
std
outsl
sub
mov
outsb
outsb
nop
gs
cltd
xor
jmp
dec
push
sbb
mov
mov
pop
dec
das
scas
insb
mov
lret
shll
jnp
ss
pop
cmc
popf
cld
cmp
sbb
jg
sti
je
lods
shlb
push
mov
frstor
or
mov
mov
mov
lods
push
lods
mov
xchg
pop
sub
mov
cli
loopne
xchg
push
add
shll
in
mov
mov
insl
aad
adc
pop
or
add
fidivrs
bound
dec
icebp
sub
and
into
rclb
bound
mul
xor
or
les
push
gs
mov
dec
scas
add
pop
pop
xchg
out
push
cmpsl
pop
jbe
int
clc
out
xchg
adc
je
adcl
pop
stos
inc
mov
enter
xor
push
pop
iret
lods
dec
fldenv
aas
inc
orb
pop
repz
lods
and
jecxz
adc
enter
lret
jae
pusha
out
stos
jp
xchg
push
mov
pop
rolb
pusha
subl
sbb
ss
les
push
xchg
push
ss
push
cld
aaa
scas
mov
in
loop
sub
mov
out
gs
dec
jge
push
cmp
xchg
mov
dec
or
mov
jb
aas
ret
pop
inc
and
stc
and
and
xor
lea
dec
scas
adc
adc
and
push
jns
call
inc
sti
stos
pop
mov
int3
add
and
push
je
cmp
push
or
popf
popa
cmp
stc
mov
mov
ret
pop
subl
lret
xor
lret
xlat
stos
outsl
mov
test
push
shrb
sbb
xorb
fstps
inc
inc
enter
dec
xchg
push
mov
adc
negb
leave
xchg
mov
mov
mov
push
jns
ret
add
push
movsl
enter
cld
mov
mov
and
jg
hlt
idiv
dec
fildl
lods
loope
add
fsts
jmp
out
out
pusha
xor
lods
loop
cmp
in
shlb
int
mov
xchg
mov
scas
xor
xchg
xchg
mov
pop
out
testb
pop
fcomp
pop
outsb
push
js
test
notb
push
orl
stos
dec
mov
xchg
mov
inc
into
loopne
popa
lods
in
fisttps
cld
cmp
add
shll
push
jae
imul
movsb
gs
add
adcl
repnz
loopne
in
sub
pop
xchg
push
stos
mov
xor
iret
cmp
pop
repz
xor
push
int
outsl
dec
aad
xchg
testb
cs
sub
add
jg
xchg
aaa
movsb
cli
fcomip
hlt
xchg
idivb
xor
mov
push
inc
push
cmp
or
test
enter
push
arpl
ja
test
mov
or
and
add
mov
and
or
xorb
xchg
mov
mov
pushf
fadds
xor
loop
mov
push
or
xor
jnp
sbb
mov
cltd
lahf
cmp
mov
gs
jno
gs
sbb
mov
xlat
or
mov
fistpl
fwait
push
or
ds
mov
into
shl
mov
xchg
dec
lds
popf
scas
sti
inc
pop
sbb
bswap
aad
pop
rcrb
or
xor
mov
or
and
sub
dec
xchg
je
pop
das
loop
and
jae
cwtl
cwtl
push
repz
cmp
ss
hlt
push
stos
div
push
aaa
test
jmp
push
fdivl
or
sti
std
sbbl
inc
js
popf
icebp
jg
cltd
inc
mov
leave
push
cwtl
aaa
aad
test
dec
stc
push
popf
in
dec
lcall
mov
aaa
cmc
sub
std
lods
mov
cmp
out
lahf
dec
push
dec
cli
data16
test
in
cmp
mov
testb
and
mov
outsl
and
cmp
mov
icebp
jl
pop
adc
dec
fldz
out
dec
scas
cmpsb
sub
mov
imul
mov
fwait
lock
cmp
pop
test
or
sub
pushf
xchg
addr16
roll
mov
scas
cmpsl
lods
add
lock
aam
mov
mov
je
dec
mov
add
cmp
push
cmp
or
jmp
mov
and
mov
test
xchg
pushl
mov
je
pop
pop
mov
jnp
xchg
and
insb
sbb
lcall
cmp
pop
test
ds
arpl
ljmp
inc
jecxz
sub
pop
aaa
hlt
and
int
jns
ret
dec
divb
sub
mov
cmp
adc
xor
pop
mov
scas
push
sub
pushf
xlat
adc
inc
jmp
add
pmaddwd
enter
ret
push
dec
inc
loopne
and
xorb
jbe
push
pop
adc
popf
out
mov
cld
icebp
lret
rcr
imul
imul
insb
ss
scas
loopne
call
and
popf
add
imul
jno
jmp
lahf
push
push
adc
dec
mov
jno
lds
xchg
out
andb
dec
mov
dec
test
insb
and
mov
outsb
vpgatherqq
pop
test
enter
inc
pop
xchg
jmp
cltd
ret
dec
shlb
ret
mov
push
push
jmp
push
test
stos
ja
xor
out
push
jnp
loopne
and
xlat
cmp
iret
push
sub
cs
mov
leave
into
add
or
cmp
stos
cmc
cltd
jne
xchg
inc
pusha
into
mov
mov
add
and
sti
mov
sub
fdivl
cmpsb
sbb
or
cmp
aaa
or
lods
pop
sub
xchg
adc
movsl
push
mov
incl
sbb
mov
testl
or
leave
fsubl
push
and
sub
add
call
sub
or
xchg
adc
bnd
cmpsl
mov
je
mov
cli
call
pop
pop
push
pushf
mov
aas
imul
ljmp
mov
adc
cmp
mov
div
inc
sub
test
lock
cmp
ja
mov
test
ss
in
xor
std
call
push
popa
outsl
negb
leave
lcall
add
sahf
push
jmp
jmp
fisttpl
jl
pop
xor
sub
and
mov
enter
jbe
mov
lds
mov
aas
imul
pop
jb
and
inc
jle
std
out
xchg
testb
add
xchg
or
bound
mov
testl
cwtl
pop
adc
adc
data16
push
inc
mov
lods
xchg
andl
mov
sahf
mov
das
and
repz
mov
bnd
negl
out
inc
add
cld
ds
lods
and
mov
dec
lods
pop
push
sbb
fldl
and
inc
push
adc
jle
adc
pop
aas
or
lods
sub
ja
aas
push
rolb
mov
and
stos
jbe
icebp
xchg
arpl
mov
push
cwtl
enter
mov
lock
or
jbe
xchg
cmp
mov
xchg
test
lcall
stc
mov
dec
cli
cmp
sub
xor
mov
test
aas
fwait
xchg
out
mov
jae
xchg
push
or
iret
inc
adc
loop
inc
push
test
inc
sbb
xchg
sub
stos
mov
sub
popf
xorl
bound
cmpsl
lods
cld
adc
and
test
sub
inc
mov
das
out
xchg
iret
adc
and
xor
insw
jecxz
lods
cs
ja
in
out
daa
lret
loope
sub
pop
jge
ret
sub
hlt
inc
ficoms
jp
jg
jecxz
subb
cmp
inc
push
sub
test
adc
push
sub
xchg
lods
mov
sub
repnz
lods
jp
in
xor
or
mov
les
jmp
dec
dec
stos
mov
ja
fistpl
popa
xorl
and
mov
add
aad
movsb
jge
scas
rorl
inc
or
hlt
sub
push
cmpsb
jne
mov
xchg
std
push
fdivr
cmp
test
and
sub
aas
add
sub
fdivr
fstps
aam
sti
mov
cmp
xor
jne
or
out
mov
jbe
pop
mov
pop
aam
mov
xor
movsb
in
push
push
scas
repnz
testl
ret
dec
gs
and
cmpsl
test
or
dec
lahf
xchg
mov
std
mov
aad
loope
int
pop
lahf
movsb
jp
jbe
ja
loop
xchg
into
mov
adc
stos
nop
call
inc
jbe
xchg
iret
out
mov
mov
notl
dec
mov
lcall
mov
test
push
pop
ja
sti
cmpsl
jb
mov
fs
pop
and
mov
int3
mov
mov
les
lret
lahf
mov
xlat
sub
jne
and
out
subb
ja
int
fdivrl
fdivs
clc
jg
stos
and
aam
push
jmp
push
adcb
sbb
mov
les
cmp
out
inc
sbb
icebp
popf
sbb
enter
xor
and
mov
imull
dec
mov
push
dec
pop
cmp
enter
lret
mov
xchg
xorb
inc
call
daa
jl
gs
cmc
mov
dec
testl
icebp
lods
cmpsl
cmc
mov
dec
sub
push
into
in
idivb
cmp
xor
cltd
push
mov
sub
jge
jecxz
pop
incb
push
adcb
lods
pop
cmp
cli
mov
insl
xchg
add
mov
pop
pop
sarl
scas
notb
lahf
pop
int3
inc
scas
cli
add
jle
jmp
xor
and
xchg
fsubp
mov
pop
add
ret
add
out
and
pop
fucomip
or
sbb
mov
mov
lods
push
js
cltd
shll
and
inc
outsb
and
sbb
loop
sub
dec
fstp
jg
out
stos
pop
imul
sub
jp
push
and
push
rcll
or
popa
xchg
xor
dec
das
pop
pop
aam
mov
leave
dec
pop
xchg
pop
mov
jno
icebp
adc
into
dec
dec
add
adc
dec
mov
scas
movsl
add
enter
stos
insl
repnz
out
add
testl
xchg
out
cmp
mov
mov
enter
mov
sbb
cmpsl
lret
pop
jne
sub
sub
stos
xor
mov
xor
jmp
xor
inc
les
fadd
add
sub
pop
ds
mov
rorl
lret
jae
ss
roll
jno
cmpsl
push
pop
mov
add
movsb
pop
or
cmp
xor
jb
cmp
jg
aas
fcompl
fs
mov
icebp
sbb
add
jle
or
mov
pusha
and
mov
cmp
data16
or
sub
iret
cmp
jecxz
or
popl
scas
cmp
imull
outsb
push
inc
push
hlt
adc
adc
mov
cli
sbb
jns
dec
pop
mov
inc
push
std
insb
out
bnd
loope
subb
adc
loop
push
aas
stos
pop
pop
mov
dec
dec
dec
sbb
insl
or
push
lods
aad
inc
adc
cmpsb
addr16
aaa
mov
in
outsb
test
pop
loop
sub
push
mull
dec
mov
push
rolb
ret
xchg
mov
push
insl
aam
mov
sarb
xchg
cmpsl
mov
pop
sub
mov
push
outsl
xchg
pop
cmp
and
cmp
mov
cmp
xchg
lea
testb
jae
fprem1
addl
adc
fs
cmp
xor
cmp
fists
lea
jecxz
loop
inc
je
add
mov
lcall
test
pop
xorb
mov
arpl
roll
filds
add
dec
xor
inc
cmpsl
xchg
pusha
adc
pop
inc
aam
sbbb
lock
int3
and
dec
mov
fsincos
inc
push
shlb
rorb
push
add
cmpsl
into
loop
incb
xchg
sub
push
jbe
cmp
roll
and
int3
push
and
mov
mov
test
jno
sub
push
xor
lahf
imul
aaa
dec
xlat
cld
jle
ja
ja
aad
cmpsb
repz
es
loop
push
int3
dec
sbb
jge
jmp
mov
cmp
stos
pop
dec
lods
pop
jb
das
out
stos
insb
rcrb
push
cmp
inc
jo
sbb
mov
inc
lcall
stos
dec
shll
pop
clc
scas
mov
mov
out
jmp
cmc
cmc
sti
cmp
push
add
xchg
fs
call
push
ret
mov
push
scas
dec
pop
mov
mov
incb
inc
cmp
lret
ret
pop
int
aas
add
mov
mov
ficoml
push
xor
mov
unpckhps
icebp
sbb
mov
dec
in
mov
int
nop
rolb
xor
mov
jb
aaa
mov
loope
jo
mov
xchg
sbb
lret
xlat
mov
jge
jmp
xchg
leave
sub
test
cmpl
and
push
dec
shlb
cmp
in
sub
inc
xor
xor
jae
shlb
das
out
xor
or
cmpsb
mov
xor
insl
icebp
xchg
jbe
inc
and
or
inc
shr
stos
or
out
sti
mov
ret
in
dec
test
lea
mov
pop
adc
leave
push
adc
mov
lods
jne
ficoml
cld
sbb
sbb
cmp
and
pop
adc
stc
and
enter
jne
dec
mov
out
scas
dec
mov
rclb
push
sbb
xchg
cmp
repz
popl
push
icebp
inc
sub
xchg
into
jno
lea
insb
and
cltd
into
mov
push
imul
sahf
push
lods
shl
push
decl
add
sub
mov
jle
mov
push
or
mov
push
xor
lret
iret
mov
stos
in
stos
mov
int
or
inc
push
sbb
aam
mov
aad
dec
mov
in
adc
jae
jo
mov
xor
add
mov
fisttps
inc
in
sub
fisubrl
int3
into
mov
adc
xchg
call
call
and
push
pop
enter
repz
jg
iret
outsb
lcall
sbb
ljmp
fs
push
in
cmp
mov
or
int
xor
js
jo
ret
idivl
gs
scas
imull
sahf
hlt
jns
test
mov
xor
hlt
sub
push
adc
insl
dec
imul
rorb
cmp
addr16
sbb
xor
inc
adcb
mov
or
cld
leave
dec
jo
pop
mov
pop
jge
mov
lret
dec
xchg
je
lcall
jnp
add
pop
ljmp
push
cmp
mov
pand
shr
daa
out
pop
popf
push
cmp
inc
inc
loope
jno
mov
pop
pop
frstor
push
mov
mov
jle
in
out
fs
lods
fdivs
mov
mov
cmp
inc
mov
sub
popa
sbb
sub
ljmp
hlt
test
inc
push
sub
enter
imul
sbb
bound
popf
and
or
inc
cmp
lret
movsbl
mov
cmp
push
and
cltd
les
xor
pop
outsl
cmp
mov
dec
jne
pop
jl
fs
rolb
cwtl
push
test
xor
not
je
and
addb
sbb
push
jge
sub
ja
sbb
ljmp
jae
gs
test
and
scas
sarl
arpl
push
imul
ja
popa
shlb
push
clc
xlat
add
sub
and
clc
inc
inc
sub
cmc
cmpsb
dec
sbb
sub
mov
ss
mov
sbb
mov
mov
add
mov
sub
cmp
mov
aad
dec
mov
push
pop
dec
mov
rorb
es
sub
outsb
aas
cmp
lcall
mov
hlt
lds
dec
adc
dec
nop
fwait
imul
or
pusha
lods
mov
mov
shl
xor
iret
push
mov
mov
push
popa
jle
sub
aam
test
jae
jo
lcall
dec
cmc
ror
sub
pop
mov
out
mov
cwtl
movsb
xchg
sub
pop
dec
cltd
adc
ds
or
mov
jmp
pop
push
sub
adc
xchg
or
ds
fucomp
out
imul
dec
lods
mov
inc
hlt
aas
shlb
fnsave
xchg
xchg
push
xchg
in
jp
pop
lret
stc
cwtl
sub
shlb
pop
popa
fs
sbb
xchg
lock
pop
xor
mov
insb
scas
pusha
shlb
ja
pushf
adc
jp
or
jae
sbb
fs
fnstsw
sub
cmp
xchg
jae
adc
orb
jne
xor
jp
jne
insb
dec
mov
mov
dec
ret
adc
inc
in
jg
sbb
out
mov
fstps
mov
call
hlt
fxch
vpxor
lea
dec
cmp
hlt
inc
add
sbb
es
cmp
xchg
xlat
push
imul
sar
adc
mov
xchg
scas
data16
in
stc
call
enter
mov
mov
je
mov
outsl
jl
mov
pop
cltd
mov
fs
ret
lret
rclb
push
jge
cmp
les
lds
add
mov
xchg
push
lods
adc
mov
mov
ret
adc
sti
mov
jbe
call
enter
les
subb
gs
sub
fwait
jle
mov
lcall
fistl
leave
jecxz
pop
add
fucom
cmp
sbb
aaa
ret
mov
push
pop
xchg
clc
lahf
cmp
stos
push
aad
movsl
cmpsl
insl
mov
xor
ljmp
or
xchg
pop
iret
sub
stos
or
ret
cmp
add
out
aad
push
je
mov
xchg
icebp
aad
adc
dec
and
add
les
cld
mov
rorb
pop
lahf
or
xchg
mov
mov
push
aas
xor
push
ds
add
leave
lock
daa
lahf
pop
pusha
std
fisubs
pop
mov
pop
lds
cmpsl
pop
add
adc
cltd
xor
popa
fcomps
bound
mov
ffreep
lea
pop
ror
pop
cmp
js
je
stos
daa
add
push
dec
scas
dec
jne
bound
add
dec
cwtl
push
pop
mov
in
das
sub
mov
sti
pop
in
imul
sub
dec
inc
cmpsb
jl
jno
rcrl
or
pop
xor
or
push
push
jl
jl
push
cld
aam
push
cmpsl
jg
outsl
push
sbb
pop
mov
sarl
ss
punpckhbw
ss
sbb
mov
push
enter
push
js
sub
les
sub
sub
push
shlb
and
push
pop
outsl
sub
and
sbb
sbb
mov
mov
outsb
scas
add
push
dec
and
mov
mov
jne
jecxz
mov
nop
xor
push
into
lret
lods
je
fmull
jno
aas
pushl
andb
loopne
jno
jp
repnz
inc
xchg
push
stos
stc
cmp
loope
push
pop
pop
lods
mov
sub
mov
mov
pop
jbe
or
lret
movsb
in
js
nop
mov
adc
mov
push
xlat
push
mov
adc
push
pushf
mov
mov
xchg
or
nop
idiv
icebp
sbb
test
or
or
mov
push
ret
add
lds
lock
test
rcl
inc
mov
repz
pushl
xor
inc
pop
dec
pop
pop
xchg
adc
lock
gs
pop
cwtl
rep
scas
mov
jge
fcoms
imul
mov
xchg
jge
das
dec
sahf
jmp
cmpsb
jb
add
xor
and
sarl
mov
adc
hlt
les
imul
dec
or
in
fyl2xp1
cltd
ficomps
cmpsl
push
mov
into
js
mov
mov
push
inc
push
test
xchg
sti
and
push
outsl
xchg
shl
xor
mov
lods
pop
out
mov
out
imul
sbb
out
xor
ret
pop
lret
ret
lcall
cmp
fdivs
mov
filds
pop
lcall
inc
ficomps
bound
cmpsl
movsb
push
fwait
out
jno
mov
xchg
adc
add
out
scas
lods
pop
fisubs
dec
icebp
stos
leave
dec
dec
and
mov
push
ss
test
jb
test
out
and
jae
add
loope
bnd
push
aam
ja
test
sbb
movsb
lea
mov
pop
pop
rcl
daa
sbb
test
sub
dec
sub
loop
movsl
xchg
cmp
jmp
push
stos
fsubl
in
push
cmp
mov
jb
iret
inc
and
mov
jge
push
iret
ds
icebp
test
shrl
cltd
mov
bound
mov
jle
test
popa
mov
push
movsb
mov
lcall
pop
jo
mov
add
mov
in
pushf
or
mov
hlt
and
sub
addr16
into
sbb
lea
xchg
cmc
push
push
push
sub
jo
mov
cltd
hlt
aaa
xor
xchg
jecxz
and
mov
pop
sar
push
repnz
mov
sti
stos
adc
dec
ds
mov
pop
mov
add
dec
push
pusha
and
ss
sahf
test
fadds
shll
jbe
faddl
adc
ror
and
imul
push
das
repz
jnp
pop
shll
xchg
mov
xor
mov
repz
sbb
adc
loopne
sbb
repnz
or
or
repnz
pushf
pop
shll
sub
push
push
pop
sub
jmp
and
loop
add
aas
or
in
cmpsb
pusha
aaa
aam
notb
sub
cmp
push
ret
icebp
dec
fcmovnb
rorb
movq
cmc
pop
out
gs
shlb
loopne
lods
xor
inc
call
lret
and
cmc
jo
imul
mov
inc
adc
xacquire
fsubr
cmp
adc
sub
mov
imul
jo
setns
jnp
add
fwait
mov
pop
aaa
sbb
scas
inc
cmp
jl
das
scas
sarb
jo
and
mov
lcall
xchg
movsl
inc
add
mov
int3
cmpsb
xlat
hlt
rclb
push
ja
rolb
rclb
aam
in
xchg
cltd
jns
mov
mov
rclb
fstps
sub
cmp
and
sub
clc
test
and
sbb
rclb
jno
fdivp
sub
sbb
xor
flds
out
mov
cmp
push
mov
scas
sti
enter
or
pushf
or
mov
lds
jg
jbe
push
pop
dec
loop
sub
lods
aam
jns
lret
mov
sti
das
jmp
shrb
jg
sbb
and
aad
pop
aaa
push
push
mov
es
sbb
scas
xor
in
dec
popa
aas
push
xchg
mov
arpl
push
leave
lcall
fbld
mov
jmp
xchg
push
scas
es
mov
push
adc
movl
push
hlt
pop
stos
push
imul
fstpl
popf
jl
int3
xor
js
xchg
fstps
loopne
mov
enter
add
sub
push
inc
lcall
xchg
and
movsb
ds
push
mov
ret
pop
xchg
xor
adc
mov
pop
popl
adcb
enter
sti
sahf
push
mov
dec
mov
or
ss
add
insl
and
in
pop
loope
inc
ficompl
icebp
mov
stc
xor
fidivrs
pushl
mov
push
pop
add
in
adc
push
pop
pusha
xor
and
aas
mov
push
daa
inc
loope
int3
lahf
cli
push
mov
xor
jne,pn
es
mov
cmp
jmp
std
mov
xor
les
mov
push
movsl
sub
test
xor
and
fisubrl
arpl
push
adc
pushf
add
sub
sbbl
dec
hlt
rcrl
test
add
repz
pop
pop
imul
cmpsl
pop
jmp
out
jg
lods
sbb
xor
jecxz
insl
fsubrs
xor
cmp
cld
ljmp
fwait
imull
ljmp
inc
movsl
loope
cmp
sbb
fwait
pop
pop
ret
push
sub
roll
and
out
into
cltd
mov
roll
lods
xor
push
adc
mov
mov
mov
popf
xchg
add
xchg
add
mov
add
paddsw
fs
int
sbb
fbstp
aaa
imul
mov
rorl
fnsave
enter
lods
mov
mov
out
push
and
cmp
mov
dec
pop
add
xor
out
add
jmp
shrl
cli
pop
mov
cmpsb
sbb
jo
int3
jae
orb
in
shlb
and
jns
and
sbb
jg
xor
jecxz
pop
or
cmpsl
lret
sbb
call
pushf
stc
bound
data16
icebp
lret
test
pop
mov
mov
sub
popa
loope
shll
xchg
inc
popf
cmp
or
adc
les
sub
xchg
sbb
pop
iret
and
fisubl
negb
ret
push
xlat
and
loopne
inc
jnp
ja
adc
and
mov
stos
cwtl
loop
mov
xorl
jne
sub
mov
xchg
inc
mov
dec
xchg
out
dec
jg
sar
sarl
cmp
sbb
mov
sahf
and
inc
inc
enter
cmp
mov
repnz
lods
and
pop
push
xchg
xor
xor
cmpsb
xor
cmp
fwait
and
pop
push
jle
notb
xchg
scas
inc
inc
insl
inc
inc
or
test
aad
in
idiv
testb
cmp
pushf
icebp
fwait
xor
xchg
jg
outsb
imul
insl
stos
daa
inc
ret
mov
jp
aam
lcall
dec
dec
iret
jmp
jbe
cmp
adc
inc
dec
arpl
pop
nop
inc
jp
dec
push
andl
sub
push
sbb
aas
lahf
mov
cltd
lods
cwtl
jno
pop
jg
insl
mov
dec
test
loope
pop
icebp
push
xchg
fsubrl
push
dec
bound
out
mov
mov
xchg
jne
repz
adc
and
iret
pop
cmpsl
push
jae
jmp
push
ret
mov
leave
fcmovu
repnz
jb
clc
testb
lock
daa
fstl
aad
test
mov
xchg
out
jl
das
outsb
jno
and
xor
lods
int
push
mov
adc
sub
xor
in
sub
mov
pop
pop
cwtl
cli
sub
pop
cmc
xchg
push
push
test
popf
or
adcl
or
es
insb
push
inc
ret
gs
hlt
outsb
lods
adc
sbb
push
mov
mov
dec
fcomi
mov
cmp
mov
or
jl
fisttpl
sbb
ret
aam
test
dec
pop
mov
cmp
fdivrl
adc
std
lret
imul
insb
fwait
aas
ljmp
into
bound
xor
add
sub
stc
jle
cwtl
ss
dec
pop
sub
dec
cwtl
cmp
inc
ret
cwtl
add
mov
int
pop
test
sub
aaa
punpckhdq
xchg
jno
adc
aas
movsl
addr16
sarl
push
pop
test
mov
pop
lods
neg
notb
jae
loop
push
dec
into
mov
mov
xor
popf
sub
scas
xor
outsl
mov
cwtl
sub
jg
pop
adc
inc
jae
arpl
mov
outsb
arpl
sub
mov
xchg
sbb
subl
mov
lret
or
cmp
int
insl
cmp
sbb
push
test
stc
lock
mov
in
rcl
sub
lods
loope
jns
sub
stos
or
and
jge
outsb
add
sbb
cmp
fsub
loopne
cmp
push
mov
pop
cmp
mov
bound
js
and
dec
inc
arpl
sub
sahf
cld
mov
pop
fcoms
data16
inc
rcl
pop
in
xorb
mov
xchg
or
cld
pop
int3
ljmp
xchg
jmp
xchg
mov
jns
test
cmpsb
xlat
push
sub
pop
test
mov
xor
adc
push
dec
sbb
add
out
pop
jnp
jns
mul
movsb
les
mov
lcall
or
ret
or
inc
push
dec
jnp
jb
ss
pushf
dec
push
js
add
push
fcomip
out
scas
popa
loope
sti
cmc
cmp
sti
clc
cltd
add
xlat
daa
fnsave
jbe
decl
xor
pop
out
jno,pn
aad
imul
fmuls
mov
mov
jmp
jg
cmpsl
cmp
shlb
pop
jno
ja
lret
pop
jl
pop
pop
mov
jle
adc
cmp
cmp
push
mov
lods
sarl
xchg
mov
lahf
jp
fdivrs
dec
stos
mov
xor
mov
daa
xchg
cmp
inc
fsubs
xchg
push
sbbl
sbb
xor
mov
out
cmp
sbb
negb
jmp
lds
repz
xchg
stc
cmp
push
je
jmp
sbb
pushf
pusha
xor
add
jle,pt
sub
dec
mov
lcall
xchg
iret
push
negl
sbb
jecxz
rcll
fimuls
or
lods
push
stos
or
ret
sub
push
out
neg
mov
pop
sbb
in
push
in
cwtl
sbb
cmpsl
push
dec
add
outsl
rcrb
loop
mov
shlb
xor
mov
int
inc
add
into
dec
lock
sbb
mov
lcall
lock
sub
mov
pop
add
into
rcl
xchg
inc
cmpb
imul
cmp
xchg
sub
jnp
xor
filds
les
or
or
inc
sbb
jbe
push
stc
dec
sub
push
jmp
gs
mov
cltd
jbe
mov
or
jmp
adc
imul
pop
inc
dec
mov
xchg
inc
scas
pop
push
repz
mov
xor
hlt
push
stc
jg
nop
lock
addr16
or
jecxz
int
cmp
aaa
push
pop
push
cmpsb
test
push
flds
std
cmc
mov
push
outsl
mov
xchg
jmp
dec
repz
lods
xchg
sar
mov
test
sub
pusha
idiv
ret
mov
push
outsl
inc
lret
or
lcall
dec
sbb
orb
cmc
stos
push
cmpsl
sti
scas
xor
data16
inc
faddp
fwait
ss
cmp
shl
xchg
add
inc
aaa
pusha
out
jno
das
jecxz
shrb
popa
ja
fldenv
icebp
pusha
les
adc
divl
pop
mov
mov
push
push
adc
push
aas
icebp
sub
std
ret
outsb
dec
scas
add
sub
jmp
xchg
dec
xchg
shrb
sbb
sub
inc
stos
ret
mov
or
ljmp
in
xchg
mov
lds
fisttpl
jne
aaa
stos
ficoms
jl
lea
shlb
nop
mov
jo
mov
xor
aas
mov
sub
fsub
inc
mov
dec
dec
inc
push
das
jmp
jecxz
sahf
test
jle
mov
enter
push
arpl
imulb
mov
outsl
mov
nop
shll
dec
imul
pop
stos
bndstx
cmp
add
popf
sahf
mov
mov
xchg
aaa
and
sub
push
cmp
push
push
push
xchg
mov
mov
and
stc
loop
xchg
int
fdivl
scas
jle
je
dec
adc
aam
adc
popf
fmuls
cmp
into
stos
rol
xlat
xor
imul
mov
jo
jae
rcl
cmp
jns
lahf
or
and
cmp
push
and
xor
mov
and
std
or
and
daa
outsl
mov
pushf
mov
cmove
add
push
xchg
jns
inc
daa
into
xchg
les
shlb
jns
adc
rclb
sbb
cwtl
test
xor
xchg
insl
pop
mov
push
push
and
xchg
popf
xor
out
rol
adcb
jae
jbe
mov
imul
stos
mov
xchg
ss
sarb
jecxz
mov
inc
sbb
aaa
push
dec
loope
xchg
fidivrl
push
pop
adc
in
fwait
pop
addr16
inc
scas
rorb
mov
lret
sbb
cmpsl
out
jl
cwtl
jae
mov
cmp
rcrl
inc
add
mov
lret
jle
lret
cmp
popa
sbb
push
gs
cmp
xchg
adc
xchg
fs
aas
dec
mov
jge
js
adc
sti
jmp
fists
push
int
lds
and
repz
sti
in
sahf
push
add
stos
dec
dec
sbb
fwait
sti
sub
cmp
sbb
cmp
and
sbb
push
shr
and
jmp
jno
hlt
pop
fcmove
loope
sarb
pop
lret
inc
rorb
in
mov
rcr
push
aad
mov
cmp
xor
pop
jne
es
adc
pop
ret
das
jo
xor
popf
cs
mov
scas
dec
fcoms
lahf
xchg
sahf
pushf
mov
pop
jmp
or
mov
and
cltd
or
sbb
inc
add
scas
lcall
push
push
adc
jns
loopne
pusha
repnz
jl
leave
fs
pusha
mov
xor
xchg
jmp
scas
fiadds
call
jg
ret
rclb
pop
jo
add
xlat
cmp
add
adc
stc
pop
popf
int
or
xor
sub
outsb
adc
les
mov
mov
or
mov
mov
and
ja
lret
icebp
mov
inc
data16
inc
ret
jns
add
addr16
inc
ficompl
idivb
sbb
rcr
lcall
in
mov
popf
lods
push
kmovb
mov
jp
and
inc
mov
lret
xchg
xchg
fstpl
in
sbb
pop
sub
xor
mov
ficoml
ja
push
lea
or
andl
fwait
cwtl
int
inc
lods
and
lea
in
pop
lahf
call
sti
ja
movb
and
jp
dec
or
aad
or
xor
pop
jno
sbb
bound
mov
cmp
enter
mov
mov
inc
and
cmp
outsl
cmp
xor
int
cltd
sub
push
testb
inc
dec
mov
jge
ja
or
xchg
adc
jbe
in
in
mov
dec
clc
push
cmpsl
fcmovnu
testb
rclb
mov
jle
jne
lds
mov
out
lret
lods
int
pop
or
mov
mov
aad
sub
scas
cs
push
cmpsb
sub
xacquire
aam
psubusw
lahf
popa
pop
inc
inc
arpl
movb
push
jae
jmp
loope
lds
repnz
fbld
ret
xlat
adc
cmp
xchg
mov
sti
iret
fcom
lahf
gs
mov
addr16
pop
cltd
or
arpl
lds
cmp
inc
idivb
cmp
and
mov
sub
push
repnz
lods
inc
lcall
push
sahf
push
cmpsl
cltd
das
or
rclb
jg
addr16
in
insb
fstps
addr16
jp
mov
push
xchg
mov
push
cmp
add
sbb
and
mov
cwtl
or
cmp
push
xchg
and
rcl
idivb
mov
cmp
cltd
std
loopne
cld
push
xchg
xor
jmp
sar
pop
jbe
mov
test
jne
sub
fadds
lcall
loopne
push
xchg
popa
xor
mov
in
jns
sub
cmp
dec
rclb
shlb
adc
stos
fidivrl
inc
mov
mov
sbb
cltd
inc
dec
fxrstor
adc
rclb
dec
dec
pusha
fcoms
and
into
add
cwtl
sub
aaa
fcompl
rorl
fwait
dec
inc
popa
mov
pop
cmp
cmpsl
jo
sarb
xor
xor
pop
dec
xchg
dec
mov
and
fimull
xor
adc
sub
dec
sbb
mov
push
sub
mov
movsl
mov
rolb
das
mov
push
jmp
leave
inc
mov
add
testl
jg
hlt
jne
fists
les
je
rorl
das
pushl
ret
popa
xchg
add
mov
xor
push
fiadds
push
sub
mov
sbb
mov
mov
ljmp
cmpsl
int3
mov
xor
jmp
jecxz
sbb
flds
icebp
jl
ljmp
cmc
sub
pop
leave
les
mov
add
les
mov
out
fistpl
hlt
xlat
imul
cwtl
popa
hlt
mov
mov
aas
stc
jmp
std
push
mov
faddl
xor
das
cwtl
idivl
enter
pop
xor
int3
lret
mov
mov
imul
sbb
dec
or
pop
lods
test
mov
and
gs
xchg
incb
or
jp
shll
test
lret
push
mov
insl
inc
mov
ja
das
mov
cmp
stc
aas
addr16
icebp
orl
shrl
fidivrs
sbb
inc
adc
jg
shrl
lea
xchg
jae
adc
dec
test
pushf
pop
sbb
push
sarl
mov
movsb
inc
clc
xchg
icebp
inc
xor
mov
mov
mov
bound
xchg
out
mov
push
adc
scas
xor
dec
mov
adc
sbb
mov
rol
cwtl
inc
outsb
push
lea
push
push
fdivl
pop
addb
xor
out
jnp
push
insl
idivl
pop
and
push
push
inc
mov
shrb
fs
dec
in
pushf
push
test
push
pop
imul
popa
sahf
add
testl
xchg
cmp
add
inc
ret
xor
lret
mov
shll
jbe
dec
sub
xchg
aad
dec
out
or
scas
mov
xchg
add
sbb
mov
stos
test
xchg
jmp
mov
ljmp
int
adc
or
sbbb
and
push
mov
loopne
ljmp
arpl
cmpsb
sbb
bound
sub
cmp
int3
rep
outsl
sub
jl
add
test
push
loopne
cmp
out
ret
adc
idivl
push
int3
dec
fistpl
std
test
stos
dec
cld
pop
jnp
or
sarl
xchg
mov
mov
cmp
cmp
adc
movsl
mov
push
jb
sbb
psrlw
bound
jle
lea
hlt
dec
jecxz
loope
jb
lret
test
mov
xchg
xor
sub
and
dec
mov
lock
daa
arpl
divl
shl
leave
mov
cmp
mov
xlat
movl
fdivl
mov
sub
inc
sbb
lahf
shll
mov
and
sbb
push
cmpsl
mov
jl
pop
inc
out
adc
int3
pusha
adc
mov
imul
dec
movsb
imul
xchg
aas
movsl
out
cld
lods
xchg
dec
shrb
dec
inc
imul
mov
in
push
sbb
pop
mov
fs
pop
outsb
pusha
jbe
inc
sbb
push
and
cs
mov
inc
and
push
jg
mov
shr
sbb
and
xchg
jl
pop
out
inc
shl
adcb
lret
or
lcall
jbe
pop
ja
ja
dec
mov
sti
xchg
jecxz
rcrl
xor
cli
mov
loope
cmpsb
or
sub
pop
std
ds
xchg
rorb
test
jl
lahf
pop
cld
stos
mov
sbb
lcall
sbb
xorl
dec
std
pop
sbb
dec
add
mov
dec
daa
imul
mov
icebp
aaa
int
aaa
lahf
scas
loop
sub
jecxz
push
leave
sbb
cmp
insl
inc
dec
js
push
adc
testl
dec
push
inc
shlb
cli
test
xchg
mov
shll
clc
sbb
int3
shrl
test
arpl
lahf
scas
insb
inc
nop
jo
inc
pop
icebp
nop
std
popa
mov
or
jo
jecxz
iret
loop
cld
push
les
and
push
addb
popa
cmp
lahf
mov
lahf
sbb
xor
adc
test
xor
sti
mov
or
popf
jns
loop
push
inc
pusha
popf
mov
int3
stos
inc
push
test
insl
push
scas
pop
cmp
ss
neg
or
icebp
stos
call
lods
mov
pop
and
sbb
aad
out
or
or
lahf
into
imul
cmp
scas
int
lahf
mov
in
fimuls
daa
test
sbb
roll
dec
jge
inc
cmpsl
stc
dec
push
add
call
lds
aad
jbe
inc
outsl
stos
sub
lret
xor
repz
xchg
mov
push
and
and
movsl
pop
ja
in
ret
adc
mov
push
dec
and
pop
jbe
fisttps
push
jg
pop
out
dec
lock
stos
pushf
ds
inc
test
cmc
int3
dec
fsts
mov
xor
pop
outsb
and
dec
jg
sub
pop
jecxz
movsb
mov
xor
repnz
mov
jae
xor
fists
cmp
insl
out
das
loopne
in
call
xchg
ljmp
nop
popa
inc
rcr
pop
sbb
add
stos
nop
call
or
pop
js
pushf
inc
movsb
imul
jnp
lahf
mov
leave
and
push
ljmp
sub
jno
scas
dec
shrb
cmc
loopne
scas
pop
cmc
add
adc
xchg
xor
mov
jecxz
scas
cmp
and
adc
pop
push
cmp
mov
pop
sub
and
cli
pop
std
xor
cld
in
jl
mull
xchg
inc
xchg
ss
sub
es
sbb
bound
jne
adc
mov
stos
call
das
sub
scas
mov
lds
arpl
gs
pushf
xor
hlt
stc
or
mov
ficompl
add
lcall
mov
add
sbb
out
cltd
sub
adc
ja
and
sub
inc
pop
mov
ret
and
cmp
orb
jno
outsb
cld
pop
mov
jmp
jbe
mov
xchg
jl
inc
out
insb
pop
pop
pop
xlat
movsl
je
imull
pushf
xor
out
rolb
stos
add
mov
out
mov
dec
add
push
addl
push
xchg
aad
fidivs
mov
fdivrl
push
xchg
jecxz
movsl
ljmp
mov
test
cwtl
add
repnz
dec
jge
popa
fistpl
pop
shrl
fs
int
pop
out
inc
inc
push
test
not
and
cwtl
mov
out
mov
add
mov
xchg
and
mov
xchg
mov
cwtl
ficoml
push
mov
lea
jno
aam
outsl
ja
mov
rolb
jl
jae
cmp
xchg
mov
cmc
push
adc
xchg
sbb
fldt
xchg
into
dec
aas
add
xchg
les
xchg
pop
lods
add
pop
addl
mov
mov
sbb
mov
pop
push
push
jmp
in
mov
adc
pop
pop
fstl
xor
mov
mov
xor
jle
sbb
imull
xchg
add
push
dec
addr16
sub
mov
and
data16
cmp
pop
mov
insb
pop
sub
stos
xor
jl
fisttpll
jns
jo
push
es
addr16
or
mov
mov
dec
adc
mov
ror
inc
inc
xchg
pop
jle
mov
sub
int
ds
rcrb
sbb
or
das
sub
inc
lcall
repnz
in
and
push
fdivrl
pop
popf
insb
or
mov
jae
loope
sub
lea
mov
dec
gs
into
cmp
mov
jb
lcall
lods
jns
mov
jecxz
mov
and
dec
mov
aaa
adc
ret
test
push
ja
adc
add
shl
cmpsl
test
stos
mov
jae
imul
movsl
mov
lods
xor
mov
lea
movsl
loope
ret
push
shrl
inc
mov
dec
pop
xor
loope
pop
push
mov
mov
cltd
cmp
add
dec
mov
xchg
cmp
rclb
xchg
or
sbb
mov
ret
cld
fwait
popf
sarb
inc
jae
sbb
lds
rorb
adc
mov
jae
dec
adc
xchg
jns
or
jl
jp
inc
notb
fs
mov
xor
mov
pop
jnp
push
mov
cltd
mov
mov
jge
int
hlt
dec
and
pop
add
aam
outsb
shll
cmp
sbb
jne
xchg
jae
inc
cmc
xchg
fnstcw
rcll
cmp
jge
jne
adc
mov
add
inc
cmp
popf
xlat
mov
push
std
jmp
stos
leave
outsl
rcl
mov
movq
push
mov
mov
fadd
lret
pop
jge
sub
adc
xor
shrl
xlat
sub
ljmp
aaa
int
dec
daa
aaa
mov
add
int3
pop
hlt
sub
incl
push
sub
imul
add
sbb
and
popa
sbb
sbb
cmp
sahf
stos
xchg
cmp
push
lret
or
les
mov
cmp
or
mov
push
scas
mov
xchg
push
mov
lret
scas
aad
push
imul
cmp
add
test
inc
andb
jo
or
fwait
mov
ds
shl
movsb
and
mov
push
add
loope
shrb
cld
fistps
add
ljmp
mov
icebp
xor
jb
mov
call
mov
loop
arpl
lahf
pop
fs
xchg
mov
mov
int3
sbb
shrb
int
push
push
push
out
push
enter
adc
imul
push
pop
adc
movsb
cmpsl
mov
aas
and
jo
sti
push
inc
icebp
mov
fsts
mov
xorl
push
dec
icebp
ljmp
mov
mov
addr16
adc
xor
inc
cld
iret
cs
out
mov
inc
mov
test
lea
fwait
cmp
xchg
mov
jnp
or
xchg
sbb
lds
jno
ret
mov
add
jl
mov
inc
mov
jbe
dec
push
lcall
xrelease
gs
out
test
pusha
push
je
test
scas
push
imul
ror
rolb
cmpsl
lea
test
jle
fistpl
jae
xchg
mov
xor
rorb
xchg
aaa
test
dec
pop
sahf
call
dec
add
adc
sub
sbb
xchg
add
mov
rcl
push
mov
sbb
xlat
adc
fwait
pop
jp
jae
addr16
inc
movups
mov
dec
int3
push
adcb
outsb
xchg
into
cmp
sbb
push
roll
pushf
xor
push
mov
xchg
dec
lcall
xchg
fldl
jbe
adc
push
cmp
inc
mov
mov
mov
jns
mov
notl
xchg
sub
cmc
xchg
sbb
push
jle
lea
ds
test
mov
scas
hlt
jg
and
lret
pop
pop
or
in
in
push
sub
lret
dec
fnstsw
call
sbb
ljmp
lret
adc
mov
test
sbb
jo
push
shll
std
push
dec
cmp
push
jns
push
addl
shlb
ss
mov
mov
jg
sbb
add
mov
insb
xchg
jo
aaa
add
jge
outsb
adc
aam
fwait
jmp
xchg
jb
jmp
xchg
add
sbb
push
inc
fdivrl
dec
cmp
daa
mov
imul
pop
es
fsubr
jp
std
cmp
jle
addb
fcmovne
js
stos
jne
divl
mov
aas
movsb
fldenv
adc
add
arpl
je
mov
or
fwait
pop
sbb
push
int
fs
jbe
mov
mov
pusha
jb
fcoms
fmul
xchg
ja
out
mov
ljmp
dec
add
ret
add
aas
or
add
inc
mov
cltd
inc
jbe
cld
dec
pop
enter
xor
popf
hlt
xchg
push
xlat
cmp
ljmp
stc
out
or
ss
fldpi
int
out
pop
dec
in
ss
fstps
lcall
movsb
movsb
aam
stc
negb
and
xchg
xor
mov
ljmp
test
cmp
adc
jge
pop
ret
adc
xchg
sbb
xchg
fistpl
dec
data16
cmpsl
scas
add
test
mov
pop
sti
mov
mov
in
push
inc
sub
std
xchg
int
ffree
cld
leave
cmpsl
lock
je
mov
roll
ljmp
push
ret
dec
loop
xor
fldl
mov
call
hlt
xchg
jne
or
and
fucomp
add
cmc
cmp
sub
gs
or
notl
push
mov
outsb
inc
je
sahf
inc
xlat
testl
insb
sub
push
test
nop
sarl
mov
out
mov
dec
inc
js
test
jne
mov
cli
xchg
pop
ljmp
lret
push
jns
sub
xor
and
lret
adc
cmpsb
mov
lods
pop
sbb
mov
fnsave
sahf
jecxz
loope
test
mov
out
std
orl
xor
cmp
or
xor
data16
out
movsb
mov
out
dec
dec
push
cmpsb
cmp
jmp
and
lret
or
lods
jge
pop
cmp
les
xchg
jl
jl
mov
bound
add
mov
movsb
mov
out
sar
sub
mov
ret
popa
push
xchg
jne
rorl
add
or
jo
fwait
mov
pop
adc
adc
xchg
xchg
lods
xor
or
jl
daa
cmpsb
jae
out
ret
mov
cmovs
stos
scas
lret
xor
xchg
gs
mov
mov
push
aas
repnz
stos
outsl
sbb
xchg
add
fimuls
out
push
dec
xchg
xchg
adc
inc
xlat
scas
fbld
leave
xlat
into
jmp
out
sub
pop
stc
xor
imul
jg
sub
cmpsl
sbb
subl
shrl
sbb
xchg
xlat
loop
fisttpl
and
jmp
jbe
sarb
scas
dec
aad
fs
pop
and
popl
mov
sahf
sahf
inc
jbe
or
icebp
mov
gs
or
xchg
les
xchg
xor
lods
insl
xchg
pop
adc
cs
fmul
call
and
mov
xor
fisttps
leave
in
adc
sbb
icebp
ret
mov
pop
notb
pop
push
aaa
mov
push
push
xchg
gs
mov
dec
mov
lods
xchg
lods
out
sbbl
outsb
add
out
cmp
pop
out
mov
inc
and
or
pop
jnp
arpl
sbb
loope
jmp
and
imul
jl
sub
inc
clc
cmpb
sub
flds
push
jns
lahf
dec
lret
adc
stos
bound
add
aam
std
mov
icebp
icebp
movsl
sub
push
mov
arpl
adc
jmp
adc
aad
sbbl
cmpl
out
add
in
fnstsw
jbe
pop
fwait
cli
leave
xchg
sub
or
push
add
add
mov
mov
and
roll
dec
les
sbb
and
push
fcmovbe
xor
push
stos
inc
cli
add
xorl
loopne
push
xchg
cmp
mov
xlat
mov
jns
rol
mov
pop
inc
js
pop
pop
lods
cmpsb
and
cmp
adc
mov
xorb
inc
adc
push
xlat
stc
cs
mov
cli
pop
pop
xor
popf
add
jae
loope
cmpsl
mov
cmp
xor
and
dec
ljmp
cs
hlt
xor
ret
adc
sub
fmul
and
aas
insb
dec
xchg
out
push
xchg
mov
aas
add
leave
js
dec
popf
popa
cmpsl
or
inc
jecxz
insl
aad
mov
mov
bound
rcrl
inc
aas
pushf
data16
fdivrs
lret
xor
stos
fimuls
mov
sub
gs
and
mov
repz
hlt
pop
jp
out
fucomip
mov
jmp
cwtl
enter
xor
jecxz
lahf
in
and
out
jg
pcmpeqd
push
mov
xor
addl
and
daa
dec
aas
push
inc
jne
mov
sbb
mov
jp
inc
push
or
inc
cs
in
lret
das
lahf
sub
out
push
or
lea
ret
bound
sbb
xchg
int3
in
fdiv
enter
cltd
pop
lret
mov
ret
loopne
pushf
mov
xchg
mov
inc
jle
push
mov
mov
lret
inc
adc
aam
pushf
repz
push
jb
jl
leave
pxor
lds
push
cltd
jmp
es
stos
dec
cmp
mov
fcoms
mov
movb
xor
cmp
jmp
es
out
mov
cld
dec
aas
mov
dec
aas
stc
shll
pushf
push
inc
lret
ljmp
jle
sub
in
and
stos
inc
sbb
push
jnp
mov
lods
xor
adcl
push
je
jg
sub
push
orb
mov
lret
add
out
jo
pusha
les
push
mov
shl
leave
xor
xchg
push
lret
xchg
cmp
sub
inc
jecxz
jge
jne
xchg
inc
dec
mov
pop
add
rcrl
daa
push
add
jb
cltd
lret
pop
cmpb
cmp
mov
pop
jb
sub
stos
lods
mov
xor
or
cli
aad
icebp
movsb
or
mov
jecxz
xlat
and
aad
sub
popf
push
mov
cmpl
nop
sub
loope
jb
xchg
mov
jno
xchg
push
mov
bound
push
sbb
mov
pop
mov
xchg
repnz
push
ss
es
stos
push
iret
push
xchg
int
mov
dec
xchg
jl
aad
sub
fimuls
ud0
scas
shrl
xchg
mov
into
sub
sub
cmc
xchg
jle
xchg
mov
add
scas
adcl
inc
ja
outsb
test
inc
sub
rcl
xor
jns
loopne
rcrb
xchg
mov
mov
cmp
negl
push
je
popf
inc
pop
or
inc
mov
and
faddl
lahf
mov
xchg
pop
xchg
cmp
stos
and
mov
xchg
dec
sub
cmc
lock
lock
sbbl
loop
cwtl
arpl
cmpsb
imul
in
jl
pop
sbb
test
call
xor
xlat
jnp
xchg
dec
mov
into
jecxz
push
pop
lret
push
daa
ss
iret
stos
push
mov
xlat
repz
xchg
out
je
push
adc
dec
fst
mov
mov
inc
or
and
scas
cmp
je
cmp
insb
and
mov
cmp
pusha
pop
test
mov
roll
push
das
mov
pop
cmp
inc
mov
test
mov
jecxz
pop
pop
mov
lret
xchg
je
fidivrl
or
data16
dec
out
and
mov
call
dec
popf
jl
pusha
stc
pop
jle
cmp
filds
imul
mov
xlat
jns
cmpsl
push
mov
jo
in
mov
aaa
out
or
lret
mov
mov
inc
jg
xchg
mov
fstpt
stc
push
orb
mov
in
cmpsl
clc
add
add
dec
mov
and
loopne
and
sarb
sarl
xchg
adc
xor
cmp
pop
inc
adc
ret
enter
lods
sahf
call
mov
push
mov
dec
rclb
rcrl
iret
mov
subw
push
loopne
movl
and
push
movsl
jle
rcrb
mov
and
xchg
pop
movsl
xchg
and
repnz
js
stos
loop
dec
js
pop
test
adc
ds
sahf
sub
mov
mov
sbb
sbb
push
fwait
out
js
dec
mov
scas
inc
test
repnz
ja
movnti
or
imul
int
jmp
xchg
popa
inc
aad
jne
cld
enter
ret
cmc
call
cs
fldl
mov
cs
adc
mov
inc
gs
adc
pop
gs
loope
fcomp
cmp
mov
in
jle
mov
xchg
add
incb
inc
call
loope
iret
dec
cs
or
aam
arpl
movsl
jge
lahf
aam
dec
add
jns
sbb
and
mov
fsts
scas
adc
mov
cmp
add
icebp
push
ltr
ficoms
bound
int
xor
jl
rcll
push
shrb
pushf
push
mov
popf
inc
mov
rorl
shll
negb
xor
push
mov
and
call
scas
add
jo
fwait
ja
xchg
cli
mov
inc
mov
adc
sub
arpl
call
push
dec
inc
jmp
cmp
dec
pop
cmp
imul
push
outsl
and
add
test
ret
jle
pop
lret
int
loope
pop
mov
dec
aas
fwait
cld
out
outsl
outsb
or
pop
inc
mov
adc
les
shll
test
mov
call
clc
cli
mov
mov
movsl
lret
dec
pop
cmp
leave
dec
enter
aaa
call
lret
dec
int
arpl
pshufw
pop
push
and
or
push
test
lahf
out
int3
push
and
fnstcw
pop
bound
push
dec
fists
bound
lods
and
cs
xor
xchg
lock
and
scas
push
xor
bound
dec
inc
jo
pop
ljmp
jg
inc
loopne
out
pop
dec
fstl
adc
test
jle
sub
bound
aas
mov
mov
xor
lods
add
jl
pop
cmp
cltd
js
fdivl
enter
call
aam
leave
jb
enter
jnp
pop
jmp
rep
jno
pop
movsb
sbb
mov
outsb
push
int3
push
sub
sti
push
aas
pop
aaa
jge
int
sub
rcrl
scas
lret
arpl
push
mov
fcompl
inc
jns
sbb
xor
adc
psadbw
add
jmp
scas
clc
shrl
mov
mov
call
inc
cwtl
sub
xor
xor
xor
in
cs
cli
fwait
and
addr16
xor
lret
or
scas
adc
xchg
mov
repz
add
arpl
mov
mov
mov
mov
movb
cmpsb
mov
xor
push
xor
or
aam
push
call
lcall
xchg
out
push
push
mov
ret
add
dec
in
mov
inc
fnstenv
pushf
ret
lods
xor
xor
outsb
sti
stc
mov
sbb
cmp
out
sbb
je
das
lret
add
xor
mov
dec
pop
jle
cmp
dec
je
mul
mov
iret
aas
cld
addr16
flds
fxtract
pop
mov
outsb
test
insb
popa
pop
insl
and
mov
fadds
mov
and
sub
xor
or
push
imul
mov
or
adc
inc
icebp
movsl
scas
mov
and
in
mov
push
inc
mov
test
push
ljmp
push
lods
adc
inc
xchg
icebp
mov
mov
insl
inc
pop
fcoml
mov
outsl
cmpsl
jae
lock
fisubl
jne
in
sahf
lcall
lahf
inc
dec
or
mov
orb
into
lods
dec
movl
das
mov
mov
mov
jae
iret
cmp
add
jbe
lock
push
pop
rcll
shlb
loop
aaa
aad
mov
pushf
rcll
cmp
rcl
icebp
fscale
leave
scas
les
in
jns
pusha
mov
push
mov
xchg
add
aaa
mov
int3
mov
ljmp
aaa
or
ret
push
push
mov
and
push
pop
aaa
movsb
xchg
sahf
out
pop
pushf
invd
cwtl
fcompl
cmp
popf
and
mov
cld
or
inc
mov
fildl
sub
clc
es
lods
push
push
push
mov
enter
pop
nop
sub
movsb
lcall
pushf
and
and
insb
mov
pop
les
add
icebp
icebp
and
mov
push
fwait
inc
push
enter
movaps
xchg
sbb
rcrl
ljmp
stos
jle
dec
insl
hlt
or
cmp
inc
dec
ds
push
daa
mov
insl
cmp
mov
mov
call
sbb
jg
repz
pop
sub
sub
xchg
mov
popa
out
inc
pop
xor
sub
lret
push
xchg
rorb
arpl
dec
sti
das
insb
pusha
dec
mov
out
lods
mov
and
leave
es
enter
scas
or
test
cwtl
inc
out
fdivr
iret
lea
pop
adc
xchg
pop
xchg
cwtl
fdivr
mov
dec
insb
jno
sub
sahf
rcrb
pop
cs
loopne
mov
pop
call
mov
outsb
jno
push
sbb
xchg
test
mov
mov
sub
dec
cmp
mov
xor
in
pop
mov
insb
repz
or
stos
jns
pop
mov
outsb
aam
jg
cmp
inc
jbe
pop
andb
ljmp
test
push
jae
push
lret
pop
mov
popa
or
jo
aam
pop
cmp
dec
add
mov
adc
movsl
add
mov
xor
sub
pop
mov
movsb
inc
jl
into
test
std
fs
cltd
js
testl
sbb
repnz
scas
sub
loopne
mov
mov
int
inc
push
xor
jno
cmp
push
cli
addr16
mov
push
pop
call
sbb
dec
xor
adc
xchg
sbb
stos
mov
sbb
jb
sub
mov
pop
jae
fwait
mov
pop
je
cmc
call
sbb
inc
mov
scas
push
popa
popf
jb
jp
popa
cmp
pop
loopne
dec
push
test
pop
in
lahf
xor
dec
cmp
div
push
push
lods
and
lds
repz
xlat
jl
sub
xchg
push
inc
std
hlt
adc
std
dec
clc
pop
xor
sbb
xchg
adc
jge
scas
xchg
rolb
leave
lahf
push
ret
jbe
add
repz
rolb
jne
push
ss
rclb
jecxz
mov
xchg
jb
xor
sub
or
icebp
or
out
sbb
aad
fdivrl
movsb
ret
dec
pop
clc
aas
mov
add
and
sbb
inc
mov
or
pop
dec
out
dec
shr
adc
gs
pop
jnp
xorb
call
sbb
sbb
dec
nop
sti
lock
inc
cmp
mov
inc
jo
xor
mov
stc
xchg
xchg
popa
and
adc
sub
mov
ja
call
push
xchg
push
xor
push
lods
shll
fsubs
cmc
inc
and
sbb
test
bound
outsl
sti
test
fdivp
jl
aaa
movzbl
jb
mov
sbb
cmpb
into
push
fstl
outsl
adc
xchg
xorb
repz
mov
inc
mov
mov
xchg
pop
mov
movsl
idiv
lret
popf
clc
test
fcoms
icebp
adc
repnz
scas
xchg
or
jnp
cmp
loop
pop
in
hlt
into
int3
xor
xor
in
xor
fsubrl
or
pop
lahf
push
iret
ret
xchg
int
stos
mov
and
inc
ja
popf
push
ss
test
pusha
cwtl
cwtl
mov
xchg
xchg
add
xor
insl
je
test
mov
test
mov
push
setp
mov
mov
push
mov
mov
fbld
xchg
sub
loopne
add
mov
stos
pop
pusha
and
push
fisubrl
xchg
aaa
dec
leave
dec
push
leave
add
xor
mov
fstpl
jle
jno
jl
push
sbb
ficoms
mov
push
or
fnsave
popa
imul
outsb
je
mov
ljmp
add
dec
cmp
xchg
aaa
fsubs
outsb
lret
into
int
mov
mov
sbb
iret
sbb
xor
je
adc
mov
push
sbb
pushf
cs
scas
test
sbb
iret
sti
inc
and
lret
mov
ss
xor
mov
ret
iret
mov
movsb
cmpsb
icebp
add
inc
in
lcall
mov
jecxz
cli
test
or
push
or
push
inc
push
int3
aas
push
out
sbb
push
pop
ljmp
xor
std
xor
inc
jge
not
adc
and
std
or
adc
mov
outsb
popf
es
repz
adc
mov
insl
mov
sub
lods
mov
jno
sub
mov
inc
jge
shrl
inc
lahf
jo
pop
ficomps
pusha
loop
mov
loop
std
jae
addr16
aad
jns
lret
xchg
mov
fildll
sbb
push
bound
lcall
ret
sbb
and
adc
mov
add
mov
push
std
fsubr
scas
push
fs
inc
or
movsb
mov
aad
outsb
xchg
mov
lcall
sti
daa
add
shr
fisubrs
adc
into
cwtl
testl
shll
or
dec
add
dec
mov
in
repnz
imul
push
jns
les
xchg
jp
push
hlt
loope
cmp
icebp
test
jnp
ja
xchg
jbe
cmc
test
bound
fwait
push
cmp
mov
into
out
xor
in
cmp
inc
sbb
dec
aad
cs
popa
and
idiv
out
mov
bound
es
mov
dec
cmpsl
inc
pop
mov
xchg
test
movsl
xchg
mov
pop
inc
and
lea
and
or
lea
push
or
int3
out
mov
xor
jns
adc
inc
jg
test
mov
pop
mov
inc
scas
ja
adc
in
sbb
inc
insl
push
lcall
xorl
pop
inc
aam
and
and
vandps
dec
pop
xchg
cli
cmp
adc
add
daa
lahf
mov
loope
mov
pop
incb
fmuls
adc
lret
in
or
jo
shr
mov
or
mov
mov
clc
adc
stc
sbb
arpl
mov
pop
stos
xchg
add
pop
xor
and
ficoml
mov
imull
lock
pop
sbb
lea
sub
movl
inc
clc
jle
daa
in
jle
mov
lods
ja
mov
sbb
and
lcall
add
push
push
out
loope
fsubs
fistps
jecxz
rcll
sub
add
or
adc
pusha
adc
cmpsl
cwtl
adc
push
sub
sbb
inc
mov
stos
mov
mov
jecxz
aas
lods
mov
add
jne
push
jae
jne
stos
cli
sbb
xor
mov
push
cwtl
std
fstl
cld
add
rol
inc
hlt
loopne
cmc
daa
jae
mull
cmp
mov
adc
lds
negl
mov
pop
stos
push
cmp
push
orl
cmp
push
outsl
arpl
jbe
cmp
mov
sub
jl
sub
jle
mov
jnp
int
fwait
mov
cwtl
fisubrl
cmp
fisttps
lods
imul
mov
mov
jns
sub
sub
jle
pusha
xchg
insl
adc
mov
or
sub
inc
mov
lret
jae
mov
mov
jne
test
inc
pop
inc
call
pusha
jae
fdivrl
push
mov
sub
popf
mov
pop
pop
hlt
sbb
xchg
push
insb
shlb
jp
add
aam
sub
xor
addr16
mov
sbb
jne
inc
mov
sti
iret
test
jo
cld
adc
push
mov
jge
dec
stc
adc
bound
addr16
lret
push
loopne
shl
imul
push
std
ret
or
dec
jnp
lods
mov
sar
push
bound
addl
test
and
xlat
arpl
dec
cmp
xchg
stos
out
pop
in
hlt
mov
mov
loope
rorb
push
iret
lds
int
int3
add
lahf
pop
mov
mov
ret
insl
out
dec
xor
mov
mov
outsl
mov
imul
jle
sub
jae
nop
lcall
mov
fstps
pop
adc
push
aaa
test
fdivrl
mov
dec
pop
aam
out
inc
clc
jno
daa
andb
push
dec
cmp
outsl
adc
dec
xchg
loope
bound
loopne
mov
xchg
dec
aaa
cmc
dec
stc
cmp
mov
mov
adc
orl
loope
pop
sbb
rclb
scas
iret
mov
xchg
xchg
aad
pminsw
mov
jo
fidivl
jle
cmpsb
inc
and
xchg
loope
lock
unpckhps
sub
inc
shl
pop
add
in
push
jb
lds
in
imull
sti
dec
mov
fldt
sbb
or
mov
push
cmc
imul
jp
sub
std
orb
cltd
dec
es
inc
addr16
dec
pushf
fsubl
outsb
jecxz
or
push
push
loopne
dec
jb
fnstcw
hlt
push
mov
and
jo
inc
stc
add
lcall
sub
fmuls
movsb
scas
rcll
mov
lcall
xor
mov
fxch
cmp
inc
sub
dec
jno
sbbb
add
aam
das
ret
out
mov
xor
push
mov
push
mov
js
ljmp
dec
push
xor
inc
imul
movsl
jb
mov
dec
push
inc
cmp
mov
int3
rcll
xor
aad
shlb
pop
push
add
imul
repz
mov
cltd
pop
lahf
stos
loope
outsl
icebp
inc
test
or
ss
aam
push
int3
inc
add
pop
inc
std
fnstsw
lods
pop
leave
push
mov
xlat
imul
arpl
push
pop
testb
sbb
mull
xorb
pop
xchg
fadds
popf
sub
mov
enter
aas
fs
imul
inc
push
out
jae
int
hlt
nop
jmp
jae
call
dec
cmpsl
add
mov
in
aas
adc
mov
out
in
loop
movsl
sub
loopne
mov
ljmp
dec
mov
mov
iret
leave
mov
roll
clc
mov
clc
sub
int3
sub
cmp
or
jae
loop
xchg
inc
add
ret
mov
rcrl
sub
or
mov
inc
mov
mov
xor
add
sbb
cmp
add
lret
std
mov
and
cwtl
loopne
jo
cld
call
cld
mov
xchg
rorl
jnp
out
xchg
in
and
rep
fsubrl
jns
out
or
pushf
enter
cmp
mov
aam
cmp
jae
fistps
lock
mov
inc
push
cmp
mov
cmc
out
cmc
add
add
mov
cmp
cwtl
ret
xchg
cmovo
scas
popa
adc
movsb
jo
push
xchg
imul
adc
push
sbb
adc
lahf
les
outsl
lret
jns
push
jno
lcall
stos
add
inc
cmc
popa
dec
sbb
inc
sub
lea
js
fstps
rcrb
mov
sahf
lds
jecxz
mov
mov
mov
aas
insb
push
mov
jl
inc
cmp
dec
or
test
ja
js
sahf
je
push
jb
andl
inc
inc
shlb
or
mov
xchg
ja
dec
mov
mov
mov
imul
icebp
lds
push
lods
mov
cli
stos
mov
mov
bound
les
jne
push
sub
pop
push
cli
ja
fimull
add
adc
push
addl
ret
scas
lahf
into
sti
cmp
jp
sub
xor
or
sub
lret
aas
and
mov
sti
test
jbe
out
call
movsl
imul
jp
or
ja
adc
rorb
mov
adc
xchg
adc
adc
fsubl
lret
sub
jnp
or
outsb
and
mov
mov
cmovle
cwtl
cmova
inc
cmp
push
push
xchg
xorb
adc
std
jbe
sar
call
lret
cld
jno
repz
leave
push
sbb
es
jae
sub
sbb
add
lods
ds
or
mov
xlat
pop
cmp
aam
jmp
insl
sbb
loopne
jmp
mov
ret
sbb
andl
stc
or
aas
and
in
inc
gs
adc
push
cmp
jnp
ds
cmp
push
cmpsl
xchg
pop
jno
sti
lahf
enter
add
adc
sbbb
aam
pop
movsb
cmp
aas
loop
divl
and
mov
mov
sub
pop
and
es
icebp
cmp
fdivrp
rcll
stos
or
mov
in
leave
push
mov
jo
aaa
inc
cmp
and
lds
pop
in
pop
jge
cmp
jnp
out
adc
cs
inc
gs
jmp
pusha
int3
pop
pusha
pusha
push
test
or
jl
ret
lret
cli
test
gs
push
jne
test
mov
xchg
mov
insl
sbb
jg
mov
and
push
inc
ret
jb
pop
adc
clc
lods
dec
xchg
jno
add
jp
out
das
and
notb
jecxz
pop
jg
xchg
int
push
xor
pop
ret
adc
gs
repnz
mov
cwtl
test
push
lods
fnstsw
or
loope
inc
fsts
xor
push
out
ret
cwtl
cld
sbb
push
or
cmp
enter
lahf
or
xchg
and
ljmp
inc
dec
pop
pop
xlat
out
cs
cmp
hlt
into
ljmp
outsl
fdivs
in
mov
out
shlb
out
into
adc
and
insl
loop
pop
mov
mov
jl
sub
lock
sub
mov
adc
shll
or
aam
push
inc
stos
loopne
insb
cmp
and
enter
and
xchg
aam
sub
inc
jmp
in
mov
dec
fstps
mov
cmc
or
ss
rcrl
js
cmc
push
inc
mov
scas
cs
inc
or
das
sub
out
stos
ficomps
xor
add
stc
inc
dec
xor
leave
jl
das
nop
aas
ds
stos
daa
fistl
stos
cmpsb
jb
adc
and
inc
outsl
push
aam
test
std
jle,pt
cli
sub
ds
sub
pop
in
sbb
dec
xchg
cmc
dec
nop
inc
push
loop
sbbb
lret
rolb
fsts
mov
push
pop
cmpsl
call
popf
in
cmpsb
cmp
mov
push
arpl
push
sub
xchg
aas
cwtl
mov
aaa
xor
dec
fistl
mov
adc
xchg
adc
jecxz
push
sub
sub
lods
xor
lcall
iret
sub
mov
mov
pop
jp
cmp
push
jl
lea
sbb
adc
mov
and
sub
shrl
test
jg
pop
cmp
mov
xchg
gs
xchg
das
call
mov
popf
dec
inc
lods
push
jb
and
mov
push
xchg
inc
in
push
push
aam
sbb
jmp
mov
cmc
mov
sbb
add
jnp
loopne
mov
xchg
lds
mov
in
insb
push
mov
sbb
out
fcomip
or
incl
dec
pop
ret
test
jge
dec
or
push
cltd
xchg
popa
dec
fld1
jns
fmuls
push
mov
stc
jo
lret
jl
sub
loope
add
cmpl
cld
cmp
jo
enter
movsl
xchg
mov
cmp
aam
inc
jae
out
incl
jbe
shrl
jmp
dec
add
cmp
mov
cwtl
iret
adc
lock
fisttps
push
mov
push
jecxz
andl
fisttps
scas
loopne
cmpsb
leave
dec
dec
pinsrw
cwtl
lret
xor
adc
clc
xor
bound
adc
insb
mov
mov
sahf
xchg
sbb
or
popa
mov
pop
popf
mov
sar
outsl
jp
lock
xlat
outsb
inc
push
mov
mov
and
mov
inc
xor
pusha
dec
jp
mov
and
mov
xor
pop
imul
cmc
mov
sbb
adc
xchg
stc
bound
in
and
fidivrs
into
rcrl
mov
je
or
xor
pop
fadds
add
or
movsb
call
mov
scas
pop
imul
mov
mov
out
pop
xchg
pop
sub
test
scas
fidivs
cwtl
mov
push
and
testb
adcl
into
call
pop
sbb
lods
lds
pop
inc
xchg
pusha
aaa
daa
adc
mov
xlat
or
stos
xor
mov
mov
jle
les
arpl
xchg
mov
sbb
test
repz
imul
xor
sub
imul
cmc
pop
inc
mov
mov
push
pop
xor
in
cltd
dec
out
mov
test
sahf
pop
and
dec
int
fisttps
xor
lea
pushf
push
lea
or
pop
negl
push
cltd
lods
mov
mov
out
into
insb
mov
cmp
mov
enter
andb
imul
das
cwtl
shlw
jbe
fmuls
imul
and
xor
push
leave
xlat
xchg
lock
out
sub
pop
lret
dec
push
test
cmp
sbbl
or
sub
enter
sbb
pop
imul
pop
jmp
outsl
mov
sbb
sbbl
stos
inc
cs
aad
inc
or
inc
daa
adc
es
lods
stc
call
popf
and
sbb
mov
cmp
repz
adc
adc
dec
push
add
repnz
adc
test
mov
jl
das
xor
jge
and
xchg
and
lahf
mov
inc
test
imul
popa
inc
push
bound
fldenv
hlt
and
cli
pop
decl
pop
jns
add
les
mov
int3
mov
mov
jmp
pushf
jno
mov
arpl
xchg
or
xchg
iret
stos
dec
imul
int
jnp
xchg
ret
mov
cli
dec
dec
movsl
and
mov
imul
jge
mov
in
fucomip
push
mov
lods
out
loope,pn
fs
sub
fmulp
dec
cmc
dec
xchg
pushf
mov
add
cmp
ja
lds
call
mov
es
leave
adc
cld
pop
lret
xchg
mov
mov
mov
pop
mov
pop
mov
sbb
aas
inc
dec
lret
xchg
cmpsb
mov
cmp
rcr
mov
bnd
add
inc
jecxz
mov
ljmp
xor
mov
cmp
insl
clc
sbb
clc
push
shrl
add
xor
xchg
push
push
push
xchg
mov
mov
daa
insb
and
pushf
aad
add
shr
fs
adc
gs
sbb
mov
pop
mov
fwait
xor
jle
inc
pusha
jl
mov
lock
xchg
lcall
xor
aam
adc
jo
jg
pusha
and
pop
dec
push
pop
aas
push
push
in
mov
or
and
jle
jnp
and
cs
push
mov
and
bound
sahf
adc
ret
and
push
jns
sahf
mov
xor
ljmp
xor
or
in
jns
sbb
xor
sti
daa
xchg
inc
mov
xor
or
jno
xor
add
movsl
push
shll
mov
in
dec
fdivrs
cmp
in
sbb
loop
popa
aaa
or
inc
insl
inc
adc
push
test
je
xchg
xchg
dec
ror
and
insl
mov
and
jecxz
xchg
stos
cmc
in
cmpsb
and
call
dec
mov
mov
loop
ret
mov
fdivr
and
mov
jg
mov
jg
aad
xchg
mov
push
lods
lds
push
xchg
ljmp
sbb
push
incl
enter
xchg
mov
call
mov
jge
pusha
shrb
or
inc
pop
inc
imul
mov
js
dec
clc
idivl
popa
jbe
nop
test
inc
add
lock
and
scas
aam
in
loope
cmp
movsl
dec
or
mov
jnp
outsl
jbe
adc
pop
hlt
jmp
es
jo
mov
or
nop
std
ljmpw
dec
xchg
fcoms
or
jbe
mov
or
mov
pop
dec
test
xchg
pop
leave
lcall
sub
push
jbe
xor
inc
push
mov
icebp
push
out
inc
pop
sbb
push
popa
lock
pusha
mov
adc
popf
mov
xchg
xchg
inc
ret
daa
int3
fisubl
dec
insb
push
fmul
jns
sbb
push
xchg
subb
das
repnz
dec
mov
mov
ss
push
lods
fcoml
add
mov
jae
pop
ss
test
pop
shlb
and
addl
mov
outsb
push
jbe
fsubp
jle
shl
fistps
cmp
jl
popa
adc
push
adc
leave
in
lret
lds
push
sbb
out
mov
data16
cmp
inc
ret
or
loop
in
mov
push
mov
add
pop
lea
ret
movsb
mov
adc
fstpt
call
or
cs
cmp
dec
lods
popf
pop
test
incb
imul
inc
pop
clc
ja
outsb
or
stc
lds
lods
mov
pusha
je
out
push
repz
mov
clc
pop
insb
test
dec
mov
aam
mov
fucomi
push
cltd
xchg
pop
dec
inc
std
mov
loope
mov
fbld
ja
in
orb
xchg
mov
push
cmp
lea
mov
mov
ljmp
mov
in
mov
jge
aam
aad
pop
jmp
std
lods
or
stc
sub
add
pop
popf
xor
jge
out
jb
cmp
test
scas
pop
pop
inc
call
sbb
pop
das
shlb
dec
movsb
pop
add
mov
and
cmc
mov
inc
mov
mov
sbb
adc
pop
std
and
sub
add
lods
rcr
pusha
sub
loopne
stos
push
cmp
pop
cmp
data16
insb
or
or
stos
lock
sbb
subb
adc
push
ljmp
lcall
mov
mov
hlt
cmpsl
shl
sub
adc
and
add
and
pushl
daa
out
push
fsts
aad
pushf
cmp
cltd
xchg
sbb
jbe
mov
dec
jp
aam
test
mov
push
test
mov
push
imul
mov
mov
hlt
loopne
sub
fistps
add
cmp
mov
or
fdivrp
mov
inc
movsl
cmp
shlb
incl
jno
aas
mov
ja
pop
je
cmpsb
jl
ds
jp
dec
sbbl
cmp
shrb
test
rcrl
or
xor
inc
mov
cmp
cmp
aam
or
js
out
mov
or
fwait
inc
cmpsb
push
and
fs
movsb
jb
and
stos
lods
loop
add
shr
mov
xchg
pop
mov
cmpsb
xor
lock
jle
les
mov
int3
leave
xor
push
mov
or
cmp
imul
cmpsl
fs
outsl
in
mov
mov
mov
xchg
popf
fadds
or
fwait
inc
and
in
loopne
or
pop
sub
mov
shlb
mov
pop
lds
ds
int
mov
mov
mov
test
push
adc
mov
adc
aas
les
mov
cmp
lods
pop
int3
mov
bnd
out
vmovq
jle
hlt
leave
xchg
lret
push
cmp
add
pop
out
xchg
and
mov
push
jl
adc
mov
in
mov
mov
jp
lods
inc
lods
or
or
lret
dec
xlat
je
ja
mov
int
cltd
les
movsl
or
xor
fcoms
test
or
cmp
mov
xor
std
into
mov
sti
cmpb
push
dec
sub
stc
sbb
lret
pop
and
nop
movsl
adc
dec
push
pop
inc
push
js
jb
fistl
mov
xchg
or
daa
cmp
arpl
xchg
dec
jl
sbb
mov
lods
push
push
dec
adc
adc
add
fstps
jo
cmp
jns
pushf
hlt
jns
out
cmc
xchg
lods
cli
cmp
adc
sub
test
std
ja
int
mov
jno
xchg
adc
out
stos
adc
aaa
mov
adc
das
mov
and
pop
stos
insl
outsb
repnz
or
push
lret
fcompl
ljmp
mov
xlat
pop
sbb
int
push
mov
sub
add
outsb
adc
adc
mov
jge
insb
fs
cmp
stc
jbe
and
in
xor
or
testb
fadds
xchg
inc
mov
lret
push
xchg
icebp
pop
pop
das
in
cmpsl
int3
cmp
loop
inc
hlt
jle
xor
ss
rcr
mov
xchg
or
mov
lods
es
add
jle
scas
pusha
mov
negb
lods
sbb
inc
aad
js
mov
add
xchg
cltd
call
adc
fidivrl
dec
push
lods
mov
push
add
outsb
xor
popa
and
and
sarl
lds
add
shr
test
and
mov
sbb
outsb
mov
lods
sti
loop
mov
mov
and
rcrl
leave
mov
sub
js
push
or
adc
nop
lds
push
pop
shlb
sub
xor
jne
pusha
xor
fsts
addr16
cmp
dec
pop
cmp
pop
cmc
sbbl
fsubrl
movsl
sub
repz
mov
call
jmp
push
loopne
mov
add
pop
cmp
into
xchg
jg
sub
adc
outsl
jnp
push
cmp
pop
mov
sub
ljmp
push
test
push
mov
mov
and
loopne
jbe
mov
hlt
popf
lea
pop
lds
cmp
lds
mov
movsl
sbb
xchg
xor
cli
sti
mov
cmpl
xchg
sub
xchg
pusha
adc
sub
idivl
fsubrl
mov
aad
and
mov
subb
addr16
jo
xor
xchg
inc
pushf
push
xor
or
pop
sub
adc
xor
xchg
adc
push
sub
push
dec
add
cmp
cmp
lret
int
add
gs
adc
iret
cmp
lcall
std
xor
mov
outsl
dec
cld
das
mov
mul
rdpmc
add
push
mov
loope
outsl
shlb
pop
cmc
ds
jae
fistpll
and
xor
pop
mov
mov
jnp
mov
push
mov
ja
push
add
xchg
dec
pushf
call
adc
dec
pusha
push
jns
jp
xor
out
ja
pushf
scas
dec
inc
sub
lahf
loop
push
xchg
lcall
sbb
or
scas
sub
xor
dec
cld
push
leave
mov
negb
gs
scas
sahf
jne
fwait
int3
jo
mov
stos
test
loope
stc
mov
pop
push
dec
adc
bound
vmovntpd
sar
mov
lret
dec
xchg
xor
xchg
test
das
adc
pop
in
inc
popa
or
mov
xor
push
std
stc
xchg
test
mov
roll
stos
ret
adc
in
test
in
mov
aad
out
inc
push
xlat
orl
xchg
loopne
adc
enter
cmpsb
jecxz
cmp
fldenv
dec
jmp
mov
mov
out
inc
sub
loopne
xchg
cmp
je
push
cs
xor
xchg
cmpsl
xchg
stos
add
cmpsb
lret
insl
pop
cmp
sarl
push
std
sbb
and
adc
pushw
sahf
js
pop
or
add
pushf
arpl
out
dec
incl
push
lods
cmp
or
sbb
push
add
xchg
xchg
pop
jle
sub
adc
call
jp
in
add
cmc
sarl
cmc
dec
popa
jno
out
clc
mov
and
ja
gs
sti
daa
dec
sbb
es
jecxz
sub
scas
add
cmp
cmpb
pop
xchg
out
rorl
pusha
aad
sbb
mov
lods
insb
xchg
loope
xchg
push
push
data16
sub
pop
push
jo
add
aad
xchg
sbb
xchg
mov
adc
js
mov
mov
adc
pop
ret
mov
ss
add
outsb
stos
sti
addr16
cmp
es
lock
dec
ljmp
lock
pop
cwtl
dec
adc
push
iret
int3
cltd
adc
sbb
in
dec
pop
mov
push
dec
loop
adc
xor
dec
fwait
cmp
movsl
js
xor
mov
push
in
inc
mov
stc
add
pop
sub
add
push
fwait
cmp
sub
mov
aaa
xacquire
call
inc
dec
pop
enter
rcrb
pop
dec
mov
out
cmc
je
icebp
lcall
mov
inc
fdivl
loope
mov
add
xchg
add
rolb
out
addl
pop
and
jl
xlat
lods
xchg
outsl
pop
jp
outsl
sti
lock
push
xchg
jnp
push
aas
std
adc
cmp
mov
aas
push
and
stos
outsl
sti
jl
jge
mov
insb
sbb
add
inc
push
leave
push
mov
mov
loopne
mov
jg
stc
jnp
cmp
and
stos
ret
xor
mov
mov
leave
popf
xor
mov
popa
addr16
inc
sbb
imul
popa
mov
mov
mov
stos
mov
loop
aad
test
test
or
in
mov
mov
gs
aaa
or
or
in
mov
dec
mov
push
pop
cmc
inc
loope
mov
popa
push
mov
dec
cmpsl
ds
sbb
cmpsl
data16
add
shll
int3
jge
xchg
fcmovnbe
mov
push
loopne
icebp
sbb
stc
add
aas
loopne
add
test
push
repnz
sbb
add
scas
into
add
dec
mov
rclb
or
mov
or
push
mov
push
pop
shll
mov
xchg
test
fisubl
inc
repz
aaa
iret
subb
cmp
jo
repz
insl
fisubrs
cmpl
pusha
inc
dec
pop
xchg
sub
mov
imul
adc
lds
cmp
icebp
xor
cmp
jb
fwait
in
lea
add
and
scas
adc
lods
cmp
pop
rolb
fwait
pop
adc
xchg
ss
insl
push
mov
mov
pop
in
jo
sar
xchg
add
imul
xchg
lahf
xchg
add
out
cmp
out
mov
clc
lcall
rclw
xchg
xchg
pushf
adc
lds
cmp
jb
inc
test
cmp
das
mov
mov
push
rcrl
sub
lds
sarb
push
push
scas
adc
fcmovnbe
jmp
mov
test
hlt
ficomps
popa
sub
sahf
push
mov
je
xorb
sub
jo
in
lret
scas
pop
pop
cmp
sbb
or
lods
pop
sbb
pop
ds
fdivs
je
push
mov
imul
subl
leave
aas
xor
xchg
dec
loope
fcom
push
jmp
pop
test
sub
sbb
aas
aam
cmp
lret
stc
insl
mov
scas
mov
arpl
sub
add
pop
push
inc
and
sub
adc
dec
and
mov
xchg
sub
inc
pushf
cmp
fsubs
stos
lret
mov
jge
shll
outsb
lahf
jge
jp
xor
daa
loopne
aad
shlb
xchg
dec
jns
inc
or
repz
mov
stos
loope
jecxz
sbb
lock
stos
cmpsb
cld
cmc
sbb
jmp
adc
pop
mov
adc
dec
lret
adc
roll
cmp
push
lock
mov
sbb
mov
mov
mov
mov
adc
pop
sub
adc
lods
scas
dec
add
jmp
jp
int
push
scas
das
xchg
lods
sbb
mov
std
push
add
pusha
ret
lret
fucom
cwtl
pop
or
pop
fsts
cmc
iret
add
xor
lret
jnp
xchg
add
cltd
roll
rcl
repz
jmp
test
das
int
in
leave
xor
sbb
push
push
test
and
or
sub
in
fcompl
popf
int
or
arpl
add
call
pop
jmp
push
inc
sub
lcall
pop
out
push
push
fwait
into
push
iret
xchg
shr
fists
push
lea
jp
sbb
test
or
cmp
or
movsb
fcmovnbe
pushf
push
fidivl
mov
mov
jnp
xlat
out
cmp
adc
fsubl
ret
or
jae
cltd
and
sbb
pop
jnp
shl
outsb
add
inc
mov
rclb
or
adc
loop
stos
mov
fidivl
sahf
jle
test
dec
clc
push
inc
icebp
hlt
mov
js
sahf
movb
insl
out
test
cwtl
aam
add
push
ds
mov
xor
add
push
sub
xlat
stos
sub
cmp
icebp
and
jnp
pop
dec
pusha
add
adc
xor
pop
push
cmp
addr16
cmp
lahf
in
and
sub
cmp
dec
in
pop
std
xchg
dec
pusha
mov
repz
jg
jp
xchg
arpl
mov
sub
js
fldt
push
aas
adcl
pop
mov
jl
lret
in
dec
sbb
mov
lock
ret
sbb
xor
repz
and
fcoms
movsl
ja
cmp
ret
test
lcall
jg
inc
add
xlat
jmp
xchg
rcrb
add
gs
pop
fisttps
iret
ss
in
mov
call
daa
mov
arpl
inc
pop
call
add
js
and
lahf
imul
xchg
inc
pop
mov
addr16
jno
adc
mov
add
add
test
sub
int3
je
in
sub
pop
pop
dec
and
iret
sbb
mov
push
mov
push
lret
stos
lret
adc
mov
xchg
inc
jecxz
jle
inc
lock
stos
or
add
nop
pop
pop
cmp
mov
inc
xchg
and
and
add
int3
push
mov
pop
mov
mov
insb
ret
lea
cmp
pop
test
call
add
jecxz
aam
adc
lea
sub
mov
cmp
and
fnstenv
jnp
jmp
inc
fcoml
les
mov
sbb
fidivs
test
gs
jno
xor
xor
xchg
es
inc
dec
cmpb
clc
sti
outsb
xchg
je
cltd
int3
je
popf
and
sub
out
mov
dec
push
or
dec
inc
sbb
ds
mov
aam
popa
and
test
out
cmp
out
pop
out
or
pop
mov
imulb
popa
addr16
aas
inc
dec
or
pop
movsb
cmp
movsl
mov
mov
repnz
xchg
test
call
mov
adc
push
ret
fldt
mov
aas
or
fwait
loop
int3
out
sbb
sti
xor
inc
mov
in
dec
or
or
pop
daa
sahf
scas
sbb
fisubrl
adc
mov
test
imul
into
mov
pop
jmp
out
inc
in
or
leave
stos
and
sahf
aaa
jae
sub
cltd
push
mov
out
mov
repnz
cmpsl
push
xchg
lahf
fstl
jmp
mov
addl
mov
nop
xchg
fistpll
lds
arpl
data16
insb
adc
adc
test
adc
in
xor
or
fidivl
pop
xor
aaa
repz
popf
sub
jg
and
xorl
int3
push
and
xor
pop
pushf
jno
pop
or
lods
orb
mov
testl
sbb
subb
ja
mov
fidivl
ss
imulb
pushf
ja
lret
mov
popa
mov
les
js
add
pushw
adc
sub
mov
lret
add
inc
sahf
push
push
repz
or
cmp
mov
sti
push
es
jecxz
xchg
adc
pop
add
rcr
repz
cmp
sbb
inc
pusha
push
arpl
clc
inc
push
pushf
cs
test
pop
fnstsw
dec
ret
imul
push
fidivs
rcr
pop
mov
std
je
xor
wrmsr
scas
add
pop
js,pt
call
mov
je
jb
sub
loope
sbb
inc
push
xor
aad
es
les
bound
push
lods
popa
int3
jmp
mov
iret
xchg
cmp
pop
lret
cli
push
push
xchg
stos
loop
ret
push
and
sub
dec
cwtl
rol
xchg
data16
push
orl
xchg
jbe
rcrl
push
xlat
test
nop
and
int
mov
cmp
mov
out
std
push
mov
outsb
test
or
adc
leave
mov
pop
aas
or
sbb
or
ret
inc
xor
lods
mov
enter
push
and
cli
stos
aam
cli
mov
mov
push
xchg
outsb
adc
mov
pop
into
sti
push
sub
int
mov
jne
je
fiaddl
leave
icebp
mov
lock
repnz
jns
movl
in
insb
cwtl
dec
mulb
or
mov
and
stc
adc
dec
pusha
lods
xor
dec
ret
and
mov
push
imul
adc
sahf
in
and
lods
imul
js
adcb
mov
xor
jb
mov
mov
adc
insb
push
sub
dec
seto
mov
adcl
jns
inc
and
xchg
jo
add
sub
pop
jne
mov
icebp
in
loop
push
push
xchg
fs
sbb
rorl
in
xlat
pop
mov
push
enterw
adc
jecxz
fcomps
xchg
pusha
movsl
int3
imul
out
imulb
es
mov
mov
movsl
in
mov
std
adc
pop
cmpsb
jp
dec
pushf
add
jae
mov
gs
movsb
mov
cmp
rclb
in
mov
hlt
loope
pop
mov
and
call
jo
aam
jb
mov
dec
fisttps
and
lea
gs
add
aaa
int3
pop
lods
mov
test
sub
adc
loop
fidivl
xchg
dec
pop
aaa
movsl
or
pop
lock
nop/reserved
out
rcrb
gs
sbb
incl
and
int
dec
pop
dec
and
cmp
jbe
in
shl
push
inc
leave
sub
push
scas
iret
push
or
jbe
mov
cwtl
push
jg
cmc
push
xchg
adc
in
adc
sbb
sbb
dec
mov
in
js
in
bound
cmpsb
sub
sub
shrl
call
fisubrl
inc
aam
xor
iret
add
xor
es
push
sub
aam
out
pop
ret
icebp
xchg
push
sub
movsl
je
or
hlt
out
pushf
loope
cmp
mov
sub
sbb
repnz
xchg
cmp
push
into
sbbb
sti
adc
pusha
out
subb
fmuls
inc
add
fistps
ret
mov
insl
cltd
mov
sbb
adc
or
push
scas
mov
out
mov
mov
inc
mov
push
inc
gs
add
xorb
sbb
mov
mov
jae
lds
mov
add
scas
ljmp
mov
jae
insb
push
sbb
add
jns
inc
cmp
out
cmpsb
aam
loop
sub
xchg
mov
jb
and
in
inc
movsb
mulb
and
ffreep
xlat
sub
pop
push
push
dec
lahf
mov
ja,pt
mov
adc
ja
jg
xchg
rorl
test
inc
out
add
ljmp
add
scas
test
test
pop
scas
out
xchg
in
btc
scas
in
mov
xor
int3
mov
mov
dec
jae
pop
jmp
xor
mov
clc
or
dec
push
push
adc
popl
sub
lret
adcl
scas
push
ret
mov
arpl
or
in
cwtl
sbb
mov
cmp
js
rcl
lock
inc
jne
jnp
jne,pt
addl
adc
loopne
or
cwtl
cmc
xor
imul
sbb
add
sbb
add
gs
fisttps
mov
inc
and
mov
xor
jle
xchg
mov
push
je
seto
pop
fcomp
add
rolb
aas
xchg
cmc
xchg
mov
loopne
les
inc
sub
aad
cli
imul
or
jnp
and
cmpsl
dec
and
sbb
adcb
fldcw
call
and
jb
out
test
push
cs
andl
add
jbe
pop
adc
pop
dec
hlt
mov
arpl
pop
push
in
mov
pop
stos
xchg
lods
cwtl
addr16
adc
in
push
loope
mov
mov
orb
inc
ret
sbb
js
cmpl
ja
imul
add
ror
mov
inc
adc
mov
mov
add
popf
add
repnz
fdivrp
inc
push
loope
shlb
inc
cmp
lcall
fsubl
repz
and
lea
pop
repnz
cs
stos
pop
cs
or
inc
ficoml
xchg
sbb
sub
testb
push
sti
cmp
mov
mull
fstpl
data16
std
daa
add
sub
movsl
xlat
pop
mov
xchg
sbb
flds
dec
in
es
inc
leave
dec
adcl
adc
lcall
fbstp
jb
loopne
rcr
fcmovnu
push
test
inc
add
cwtl
out
mov
mov
mov
lcall
pushw
fucomi
adc
imul
lahf
and
pop
test
popl
cmp
out
sub
xchg
mov
lret
sub
xor
js
cmp
mov
mov
adc
or
es
enter
test
lahf
jne
mov
push
push
testl
jb
jne
loop
out
enter
or
lret
mov
dec
mov
adc
lea
loop
int
jne
das
mov
jmp
aad
push
aaa
mov
mov
mov
adc
push
jmp
sbb
pop
sub
mov
pop
call
sub
lock
or
roll
add
lds
mov
mov
pop
cli
push
xor
add
cmc
fs
jp
fisubrl
test
and
or
pushf
lahf
ret
mov
pop
repz
push
push
mov
mov
es
aad
cmp
insb
mov
aam
dec
pop
imul
mov
std
mov
jb
loop
sub
jg
sbb
sbb
and
std
fs
add
sbb
test
push
in
push
xchg
repnz
hlt
xchg
jp
int3
sti
sbb
lock
repz
loopne,pn
fld
inc
add
sub
sub
push
cmpb
shlb
jbe
mov
sbb
push
cmp
aas
loop
push
jg
inc
decl
jmp
or
pop
shll
dec
lods
push
jl
mov
dec
lods
aas
jecxz
mov
adc
mov
mov
dec
in
in
or
adc
add
jle
jo
pop
pop
mov
fmuls
jns
aad
daa
lock
fnsave
xor
xchg
cmp
movsb
in
xchg
psubw
es
shrl
into
rorb
push
jne
pop
or
jbe
movsb
test
push
std
add
cmpsl
lret
xor
orb
sbb
xchg
cmpb
mov
outsl
mov
or
stos
xchg
cmp
or
jp
mov
imul
ljmp
dec
lcall
divb
xchg
mov
test
inc
sbb
stos
adc
inc
lea
lds
mov
jne
nop
pusha
ljmp
sub
in
and
mov
or
mov
mov
jae
testb
mov
ja
in
cmp
inc
in
cwtl
mov
lahf
sbbl
dec
lcall
xchg
mov
bound
add
loope
fucomip
ljmp
ret
add
fisubrs
shrl
mov
mov
xchg
and
sbb
mov
xor
scas
mov
fsubrp
nop
and
bound
icebp
cmc
pop
cmp
out
pop
cmc
jg
stos
push
test
mov
jmp
lea
nop
loopne
inc
xchg
cld
js
call
test
hlt
jns
jnp
dec
lods
outsl
repnz
aas
fidivrs
fwait
ja
into
sbbb
loopne
shlb
or
int3
fadds
data16
jl
mov
push
push
imul
mov
mov
sub
loopne
leave
shr
cmp
jnp
sbb
addr16
jbe
lds
or
nop
push
mov
cwtl
lret
and
jmp
mov
jmp
les
sbb
mov
jns
shlb
xchg
in
fwait
mov
sub
test
jp
sub
pop
int3
lahf
enter
loop
movsl
fmull
dec
fisttpl
mov
mov
mov
adcl
xor
psubsb
dec
lock
or
inc
mov
inc
mov
outsl
push
lds
ljmp
mov
mov
sbb
ret
and
mov
push
ret
mov
or
repz
mov
lret
pop
adc
ret
cmpsb
sbb
push
push
push
jne
stos
or
arpl
movups
jo
call
sub
imul
xlat
dec
cmp
cmp
divl
inc
rolb
in
cli
js
popa
call
in
movsl
or
dec
in
dec
inc
xchg
push
pop
adc
mov
jecxz
in
shll
out
mov
xor
dec
loope
popa
fimull
lods
and
andl
dec
aam
fcmove
add
mov
inc
aad
adc
outsb
xchg
pop
loop
shl
push
and
adc
push
sbbl
loope
or
cmpsb
pushf
aaa
fistl
mov
imul
mov
inc
mov
push
sub
xor
shll
mov
imul
cwtl
pop
imul
aas
push
mov
test
sahf
jne
test
mov
lods
lea
pop
jne
imul
call
and
out
xchg
je
arpl
cld
aas
ret
ds
push
ss
xchg
sub
adc
outsl
or
mov
test
push
mov
pop
arpl
add
or
roll
fxch
dec
sub
daa
mov
iret
daa
leave
enter
and
and
dec
add
inc
hlt
or
lahf
sbb
fwait
mov
add
pop
pop
mov
xchg
ret
js
icebp
out
jg
jae
test
xchg
int3
scas
mov
sahf
mov
adc
mov
mov
out
divl
xchg
lea
mov
dec
cmp
stc
imul
xor
push
push
sub
cmp
adc
push
pop
ret
leave
sub
pop
test
inc
inc
fdivs
push
inc
adc
test
pop
adc
inc
call
sbb
mov
xlat
in
mov
jge
and
scas
fsubrl
pushf
fnstcw
or
jge
outsb
mov
add
mov
inc
and
mov
push
out
cli
mov
or
faddl
cli
inc
lock
mov
push
fsub
testl
lods
mov
lds
xchg
loope
push
repz
sbb
mov
mov
xchg
and
out
aad
dec
popa
out
lahf
jae
stos
sub
push
out
cmp
mov
push
jg
insl
add
fcmovb
jnp
inc
jo
fld
xor
fistpll
adc
outsl
test
dec
inc
mov
add
outsb
movsb
add
pop
adc
jns
pusha
dec
sahf
sbb
pop
xchg
test
jmp
es
out
inc
cld
outsb
cs
mov
pusha
push
xchg
fs
je
int3
mov
iret
push
out
add
jmp
mov
jmp
mov
add
gs
ja
fld
mov
adc
in
sbb
jne
enter
repnz
mov
fmuls
mov
or
cs
dec
insb
ret
mov
cmp
mov
mov
xchg
or
aad
ret
adc
lahf
aam
outsl
add
dec
mov
push
jbe
std
sti
or
inc
xchg
jmp
dec
push
ss
out
ret
inc
adc
lock
xchg
dec
gs
lock
jle
or
jae
scas
or
mov
test
fdivrl
jo
icebp
imul
imul
cmc
xor
outsb
fs
sub
int3
cmp
cmp
lea
xlat
and
pusha
mov
mov
dec
sbb
sti
and
xchg
sub
daa
push
insb
adc
cmp
fucompp
cld
mov
test
mov
mull
xor
xor
mov
shlb
fwait
stos
pop
ja
push
pop
stos
jne
pop
mov
adc
test
jmp
int
popf
jge
and
in
mov
push
xor
test
loope
mov
test
outsl
mov
subb
pop
add
out
inc
pusha
push
outsb
pop
push
das
int3
ljmp
inc
fdivrl
cwtl
and
cmp
inc
popa
mov
and
cmpsb
out
mov
clc
jg
and
mov
arpl
gs
lahf
sbb
dec
stos
repz
mov
push
xchg
ja
pop
and
aas
mov
pop
stc
add
jae
mov
xor
or
lds
lds
sbb
xlat
mov
add
cmp
mov
xor
mov
popa
push
popa
insb
push
test
dec
push
and
push
int3
insb
rclb
push
clc
scas
push
xchg
in
fnsave
xchg
orb
and
shl
cmp
pop
jnp
mov
pop
and
push
xchg
xlat
and
lcall
xchg
shlb
test
sub
mov
or
out
add
inc
sbb
jg
push
jno
sub
ds
xor
sub
loopne
push
add
jg
lcall
jb
loope
adc
fucomp
pop
and
xchg
xor
bound
out
push
jbe
daa
or
cmpsl
add
in
outsb
pop
fidivrl
add
dec
daa
pop
pop
adc
xor
lods
jl
and
jmp
shll
sbb
cwtl
fists
sti
fiadds
add
adc
aam
add
aas
or
or
movsl
push
cmpsl
xor
leave
cmp
test
sbb
pushf
cmc
push
jae
nop
cwtl
mov
loopne
pop
imul
fnstsw
std
pop
jmp
sub
in
icebp
sahf
aaa
cmpb
scas
in
test
imul
lods
fists
xchg
aaa
hlt
mov
jb
and
imul
mov
and
imul
sub
flds
adc
mov
out
repz
mov
mov
lahf
dec
mov
adc
lods
pop
mov
push
or
ret
iret
jg
test
sub
cmp
mov
cltd
mov
add
sbb
pop
sub
nop
adc
jbe
sub
pop
jae
pushf
xorl
jmp
dec
rcr
loop
sub
mov
dec
cli
push
dec
loope
mov
sub
stos
inc
jns
mov
and
dec
push
pop
jnp
sub
leave
outsl
mov
add
add
inc
pop
movsb
cmc
xchg
add
push
in
gs
out
sub
pop
adc
fdivr
jmp
lods
push
negb
mov
hlt
cs
test
sbb
push
cmc
xchg
fcoms
jecxz
shlb
lret
add
xchg
sub
lcall
shl
pop
xlat
stc
loop
mov
outsb
roll
adc
mov
pop
dec
out
or
cmpsl
sti
es
call
cltd
mov
mov
outsl
adc
jnp
xor
lcall
test
add
std
xor
mov
loope
pushf
pop
cmpsb
mov
dec
mov
sbb
inc
in
jb
int
out
or
std
cmovg
mov
scas
adc
int
movsl
scas
xchg
dec
cld
mov
jo
push
lcall
shll
shl
mov
roll
adc
or
rcrb
sub
add
xchg
lret
call
and
or
pop
fldl
rcr
stc
jno
pushf
mov
sbb
push
shr
mov
ficompl
mov
cmp
xor
sub
test
mov
sub
rolb
rolb
xlat
sub
into
add
xor
hlt
push
bound
aaa
add
inc
mov
dec
mov
sub
sub
fs
pusha
sub
in
decl
mov
cmpb
movsl
shr
or
les
jge,pt
mov
mov
orb
ret
push
call
xchg
add
rorb
sbb
push
fdiv
push
out
xchg
mov
lock
sbb
jecxz
sub
imul
or
xor
pop
into
hlt
jnp
dec
mov
dec
sub
in
push
insb
hlt
add
mov
add
xor
mov
adc
mov
xchg
lahf
add
mov
adc
xor
lcall
and
out
or
lcall
fwait
cmp
out
jl
pop
push
aam
push
insl
or
fbstp
xchg
sbb
icebp
jae
decb
into
popf
leave
xor
xchg
das
imull
push
ret
xchg
mov
sbb
sub
sub
rdmsr
sub
mov
adc
dec
or
imul
data16
mov
cmc
mov
testl
in
or
inc
xlat
mov
mov
push
xchg
cmpsb
jns
fldcw
xchg
popf
inc
xor
xor
dec
pop
hlt
ficomps
mov
iret
or
inc
enter
movsl
sub
frstor
sbb
shll
pop
fnstcw
jns
inc
movb
jbe
sub
sub
inc
push
imul
sub
cmp
mov
ja
adc
dec
push
cmp
lock
push
push
clc
loope
xchg
stc
fwait
mov
movsb
icebp
sbb
pop
mov
iret
nop
adc
loope
ss
dec
imull
fs
scas
mov
inc
testl
jecxz
adc
dec
pushf
sbb
fists
mov
or
and
bndstx
mov
orl
and
or
mov
out
ret
pop
aaa
idivb
pop
rorl
out
dec
sbb
lcall
nop
or
dec
sub
imul
int
test
jp
movsb
hlt
jb
and
bound
xchg
mov
sub
push
push
or
test
xor
movsb
in
or
adc
insb
stc
shl
pop
cld
and
cltd
xchg
xchg
push
test
insl
popa
dec
add
dec
and
popf
out
out
push
shrb
repz
pushf
cmpsb
ja
sbb
in
jmp
mov
adc
es
mov
dec
int3
jl
popa
ret
jmp
cmp
xchg
mov
mov
and
cld
mov
pop
insl
fcompl
mov
ds
cli
mov
outsl
ljmp
xchg
hlt
mov
sti
dec
stos
lods
fcomps
jb
jp
mov
movsb
mov
dec
ficoms
inc
pop
cmp
add
fsave
push
cli
out
int3
addr16
notl
ljmp
shll
push
fadds
mov
sbb
mov
call
fcmovnbe
mov
sub
mov
mov
lods
imul
dec
add
push
ficomps
cmp
flds
cli
scas
lds
mov
in
shr
imul
addr16
add
bound
dec
test
add
shlb
lea
and
adc
ss
popa
jnp
push
aaa
push
data16
adc
jle
and
adc
sti
jmp
das
aaa
fimull
sbb
pop
mov
sbb
mov
mov
or
cmpsb
sbb
imul
mov
pop
stc
push
and
lock
add
mov
pop
lret
push
dec
pop
test
hlt
sub
dec
ljmp
mov
out
fwait
leave
sbb
or
lods
frstor
lds
les
gs
add
push
jge
sbb
cmpsb
out
adc
jle
fistps
cmp
or
shll
push
stos
ret
push
fimull
jge
in
int3
sub
stos
pusha
mov
in
outsl
adc
clc
mov
sahf
lods
jmp
inc
inc
add
into
push
jecxz
out
xlat
or
loop
or
lods
lret
jp
fildll
fadd
cmc
dec
mov
pop
repnz
addb
pop
and
xlat
jl
scas
jl
mov
ret
pop
ret
insl
icebp
imul
or
sub
movsb
xor
mov
roll
cmpsb
pushf
sti
loope
fisubrs
adc
dec
std
xor
test
les
pop
cmpsl
inc
ret
xchg
cmpsb
test
test
sbb
lds
popf
cmp
add
inc
outsl
pop
sub
push
push
pop
inc
mov
mov
in
pop
out
jne
pop
stc
cwtl
and
lahf
dec
mov
inc
sbb
dec
cltd
paddq
mov
mov
mov
icebp
xor
test
inc
adc
inc
xchg
scas
xchg
loope
jnp
push
push
out
insb
push
movsb
lods
jns
sbb
jb
bound
and
push
cwtl
sahf
dec
lret
pop
call
ficomps
dec
dec
punpckhdq
das
and
push
and
pusha
ja
xlat
cwtl
jp
test
and
push
mov
adc
mov
xor
xor
jo
arpl
fisttpl
and
daa
sbb
pop
movsl
xchg
or
bound
push
push
ljmp
push
cmp
xor
mov
loope
lret
pop
xor
hlt
and
xchg
push
pop
or
xor
outsl
sbb
cld
mov
loopne
pop
pushf
sub
push
je
mov
pop
jl
jp
lods
stc
inc
adc
add
cld
cli
push
cmp
insb
ror
movsb
mov
in
push
fcompl
dec
stos
or
jl
popf
jle
sbb
xor
mov
xor
push
lods
pop
add
jecxz
xor
add
je
lret
pop
push
mov
test
repz
addr16
or
jl
dec
pushl
jne
in
sbb
iret
cltd
arpl
loope
mov
xchg
cli
add
push
out
push
pop
vmread
pop
xchg
xor
mov
push
mov
mull
stos
inc
lahf
mov
cwtl
lret
sahf
push
test
jno
mov
dec
pushf
idivb
ret
prefetch
cmpsl
dec
scas
aam
cmc
xchg
aad
sbb
fisubrs
cmc
cmp
pop
mov
test
mov
enter
inc
insl
inc
xor
int3
shll
push
adc
jo
and
xlat
add
push
lret
sbb
movsl
xlat
sub
insb
lock
rorl
lods
int3
inc
ret
adc
mov
hlt
and
lret
mov
sub
or
jne
fldenv
fsts
ljmp
sub
mov
test
add
int3
sahf
dec
add
push
xlat
push
mov
je
test
call
xchg
cmp
cmp
adcb
lods
inc
insl
repz
insb
dec
mov
mov
push
repnz
mov
jo
mov
add
inc
push
xchg
movsl
shrl
notb
xchg
xchg
mov
inc
cmp
mov
aad
aam
sbb
cmc
hlt
push
mov
fidivrl
adc
push
popa
cli
test
arpl
pop
icebp
jp
or
push
or
mov
movsl
xor
sub
lcall
cmpb
push
pop
mov
add
pushf
gs
scas
pop
add
out
imul
mov
sbbl
dec
dec
jp
pop
mov
imul
push
mov
inc
into
jl
fsubs
pop
dec
cmpsb
mov
push
nop
aas
xor
inc
and
lahf
cmpb
out
repz
jb
jp
cmp
outsb
dec
fwait
aad
repnz
shl
adc
test
xor
jb
pop
cmp
push
cs
mov
ret
cmp
mov
fnsave
pop
stos
loop
clc
test
lret
aaa
gs
clc
inc
outsl
xor
test
or
mov
test
stc
pop
xchg
hlt
adc
mov
roll
dec
cmp
sbb
int
stc
cvtps2pi
adc
cmp
fldcw
into
mov
addr16
stc
xor
test
lea
stos
movl
leave
mov
cmpsl
mov
fnsave
jmp
enter
push
adc
into
mov
jb
ljmp
or
cmp
dec
insb
lret
imul
xchg
ljmp
testb
scas
xchg
fisttps
scas
sbb
sti
pop
sbb
rep
popf
sub
rorb
or
dec
std
cmp
mov
je
lock
mov
inc
int
sti
or
sub
roll
adc
sbb
icebp
fsubrs
dec
repz
aaa
outsb
inc
dec
add
xchg
mov
rcrl
mov
rcr
mov
cmp
xchg
fstp
jne
mov
pushf
scas
push
jge
jns
cltd
aas
inc
mov
push
stos
enter
push
sahf
pop
mov
dec
xchg
push
xor
inc
je
fwait
ret
movb
mov
xor
ficomps
lcall
std
dec
add
cli
add
push
dec
rorb
mov
inc
push
cmp
sub
sub
addb
sbb
std
jno
loope
pusha
stc
cmp
or
adc
clc
inc
lret
dec
stc
lock
in
lods
sub
push
add
repz
jg
aas
popf
and
mov
mov
addl
sarl
mov
lcall
push
push
push
test
xchg
loope
jg
push
ss
shll
cmpsb
mov
std
movl
insl
jnp
dec
adc
aam
mov
mov
push
insl
mov
and
sub
sub
into
dec
mov
adc
jo
mov
loopne
jbe
xchg
sub
push
push
or
jno
dec
push
in
jge
dec
test
incl
scas
mov
cmp
xor
cmp
fldt
mov
pop
xchg
lret
ret
pushl
std
imul
push
scas
add
test
into
jnp
push
xor
pop
adc
jne
insl
dec
cmp
pop
clc
outsl
iret
icebp
pop
mov
mov
xchg
scas
xchg
mov
xchg
xchg
in
add
cmpsb
test
fdivr
inc
xchg
inc
push
mov
sub
loopne
movsl
sbb
xorl
and
adc
out
shll
jecxz,pt
adc
in
insb
loop
ss
pushf
sub
sbb
mov
jbe
out
mov
sub
insb
pop
imul
fldenv
in
and
jmp
scas
inc
mov
sub
rclb
sbb
inc
jecxz
cmp
in
adc
sahf
test
gs
std
mov
sarb
popl
inc
adc
aaa
jne
rclb
sarb
rorl
mov
stos
add
scas
loopne
inc
add
movsb
bnd
dec
insl
cwtl
lods
pop
icebp
xchg
imul
add
push
mov
lods
mov
sti
sarb
loop,pt
xor
inc
or
cltd
dec
adc
out
mov
push
cmp
call
loop
inc
add
pop
out
lea
push
dec
dec
fldl
fdivrl
and
dec
data16
inc
mov
xor
sub
fwait
ljmp
add
or
shll
fidivrl
in
int
arpl
push
adc
icebp
lret
into
xchg
imul
nop
cs
add
push
xlat
push
sub
aas
inc
mov
jno
mov
mov
cmpb
cs
cmp
add
jbe
andl
int
xor
icebp
imul
inc
add
inc
imul
mov
push
outsl
pop
fmul
mov
pop
in
or
add
movsl
lods
lock
mov
rclb
jmp
xchg
push
or
pop
cs
loopne
dec
and
enter
mov
add
mov
push
sbb
add
mov
xlat
call
mov
inc
stos
cmpsl
or
sbb
pushf
xchg
jecxz
xchg
mov
push
push
in
out
fs
inc
sub
xchg
inc
call
leave
push
mov
ret
cmp
int
lahf
jp
and
sahf
xlat
shlb
std
jae
mul
mov
ficompl
lea
mov
out
repz
cmpsl
cmpsl
ss
jno
shrb
adc
inc
push
dec
addr16
stos
subl
ror
pop
into
and
mov
stos
or
pop
mov
push
and
adc
lret
and
loope
mov
sbb
out
sar
popf
testb
mov
ljmp
mov
rcll
mov
push
mov
icebp
cmpsl
jae
pop
cmp
aaa
stos
scas
add
xchg
jle
out
xchg
test
mov
add
ljmp
pop
ja
lret
xor
cmp
outsl
fsubrs
cmpsb
mov
in
cmp
adc
lds
int3
negl
lcall
cmpb
jnp
retw
jmp
inc
imul
mov
sahf
in
adc
fsubrl
dec
sti
dec
repz
icebp
or
outsb
cmp
ret
push
hlt
mov
aam
pusha
push
aas
leave
sbb
sub
or
imul
or
cs
add
lea
xchg
in
pop
adc
and
sub
and
jg
adc
or
inc
call
mov
xor
and
bnd
shlb
pushf
aad
imul
icebp
mov
add
inc
addr16
cmp
fldcw
sbb
cmpsl
push
pop
xor
adc
out
clc
data16
das
cmp
nop
popa
dec
mov
or
mov
imul
loopne
mov
pusha
and
add
mov
inc
mov
add
pop
pop
inc
inc
mov
push
sub
dec
ja
mov
lret
mov
mov
addl
push
fwait
mov
lods
repnz
fs
clc
ret
push
jb
cmpb
push
daa
lcall
insl
dec
pop
call
and
fucomi
jl
dec
xlat
sub
int
in
mov
jne
movsb
stos
mov
scas
or
jg
mov
shrb
adc
push
in
cmc
mov
movsl
cmp
dec
jns
mov
ljmp
push
cltd
mov
jle
sbb
push
push
pop
push
sub
cwtl
jp
push
push
mov
cmp
in
jle
call
sbbl
and
push
jnp
pop
sub
sbb
cmp
cmc
xchg
push
inc
pusha
pop
or
sti
mov
ret
mov
outsb
outsb
jns
insb
mov
add
out
mov
inc
shll
cmpsb
fstl
pop
sbb
rcl
scas
dec
sbb
push
lret
jne
popa
adc
into
out
xlat
sub
jg
or
aad
adc
pop
lods
ret
cmpsb
jo
mov
arpl
test
popf
movsb
pop
shr
stos
add
lds
jb
mov
ss
mov
mov
or
lcall
mov
orb
push
mov
push
mov
sub
dec
js
mov
jbe,pt
enter
and
or
into
xor
pop
cltd
icebp
aas
outsl
xchg
pushf
sbb
rorl
adc
cwtl
in
or
push
cmp
mov
mov
popf
iret
pop
xlat
sahf
daa
repz
and
inc
adc
aaa
rol
lret
mov
cli
push
mov
dec
mov
cmc
xor
cmp
out
push
loopne
mov
cmp
mov
mov
fwait
push
xlat
mov
aas
jecxz
mov
fwait
enter
push
or
repz
test
sahf
or
mov
dec
ds
xchg
call
dec
das
inc
insl
pop
fldt
repz
jge
dec
inc
out
rcrb
cli
adc
fdivl
mov
or
hlt
mov
pop
sahf
lds
mov
or
mov
mov
mov
pushw
pop
inc
repz
add
fwait
add
mulb
pop
fbld
push
nop
mov
inc
push
sbb
cltd
lods
add
inc
pop
jne
pop
dec
mov
loopne
push
scas
dec
pop
or
repnz
sbb
fstp
stos
jmp
xor
scas
jnp
mov
es
cld
mov
ljmp
popf
mov
imul
dec
sub
getsec
call
popf
mov
mov
icebp
shl
cmpsl
dec
fcoml
or
cmc
fwait
cmp
push
sbbl
ret
and
xlat
push
ja
cwtl
lods
jg
icebp
popa
add
jbe
dec
push
mov
sahf
subb
loope
pop
loope
je
mov
jle
push
repz
clc
cmp
fistpll
ss
stos
movsb
pop
outsb
mov
mov
ret
fwait
sbb
xor
sti
push
or
js
movsl
fdivrs
aad
sbb
jp
mov
fisubrl
mov
xchg
daa
inc
push
fcmovnb
pushf
mov
out
mov
sub
push
pushf
sub
cmp
push
out
add
sahf
jle
mov
mov
xor
aas
mov
jb
sahf
pop
sahf
int
mov
lock
enter
pop
rol
mov
fsubrl
cmp
popl
cmp
or
mov
out
lea
ljmp
mov
fidivs
cmpsl
out
movsb
std
daa
movsl
shr
jns
mov
dec
js
sbb
inc
in
loop
add
sahf
fsubrl
js
fcoml
aad
into
xor
inc
mov
mov
lahf
pop
das
repnz
mov
mov
lea
out
push
cmp
outsl
mov
loopne
cltd
aas
clc
jno
sbb
and
lock
sbb
xchg
cmc
int3
push
cmp
popa
lahf
pop
in
enter
or
es
cmpb
dec
js
push
xor
xlat
mov
pop
and
inc
mov
mov
ret
call
push
fwait
xchg
addr16
and
mov
mov
sbb
pusha
out
adc
or
subb
jns
pop
ljmp
and
aad
mov
callw
inc
pop
jecxz
inc
sarb
fwait
jmp
lahf
je
sar
arpl
pop
data16
lds
xchg
popf
ret
jo
push
mov
pop
insb
mov
mov
xchg
push
ljmp
insb
xchg
dec
lods
or
dec
dec
lret
lcall
sbb
stc
add
mov
add
shlb
rclb
lcall
sbb
sbb
aaa
data16
push
lods
cltd
mov
adc
popa
xor
sub
fsubl
pop
mov
adc
test
das
mov
adc
pop
icebp
std
popf
mov
and
pushf
sahf
add
or
mov
jmp
xchg
out
xchg
mov
test
lods
pop
pusha
jno
dec
test
bound
cli
in
out
xchg
mov
aaa
or
adc
ficomps
imul
movsl
mov
iret
imul
inc
inc
xor
push
xchg
mov
std
in
jl
push
or
inc
mov
int
addr16
repnz
inc
pusha
sbb
xchg
aad
in
cmp
jb
cmp
je
shll
inc
insl
flds
dec
shlb
gs
jno
jae
add
iret
fcom
cmpsl
dec
cld
pop
aad
mov
or
push
inc
jb
push
shlb
popa
ficompl
lea
push
pop
pop
xor
sbb
lea
xchg
sub
lcall
adc
mov
xchg
sbb
mov
dec
jmp
jl
cmp
cmp
je
fsubs
mov
or
inc
push
mov
sbb
dec
clc
test
imul
xchg
cmp
dec
pop
inc
repz
push
mov
stos
adc
cli
sbb
add
add
lret
mov
inc
cmp
fistpl
leave
mov
inc
adc
incl
outsl
mov
inc
insl
sarl
xorb
jns
dec
xchg
or
js
and
add
dec
mov
adc
or
popf
push
mov
aad
sbb
or
or
incl
aaa
out
popf
xor
push
stc
adc
inc
in
add
ret
aad
cld
push
btcl
lcall
arpl
dec
cmp
fisubl
cltd
adc
xor
inc
push
loopne
cmp
jo
movsb
out
mov
rol
push
inc
imul
and
icebp
jmp
js
or
xor
orl
cmp
jae
sub
or
push
std
aas
pop
loopne
test
lret
shlb
dec
imul
mov
loop
fbstp
fiaddl
mov
jle
mov
shld
mov
scas
adc
ja
pop
xor
mov
mov
inc
xor
cmp
shrb
cli
dec
mov
mov
sbb
stos
shll
dec
lcall
jb
jge
mov
xchg
mov
fbld
or
cmp
xor
movsb
dec
addr16
inc
ss
push
sub
or
push
inc
push
cmc
in
sub
lret
lret
fisubrs
fs
sbb
xor
sbb
push
jecxz
hlt
mov
xchg
into
pop
icebp
xchg
fists
out
pop
loopne
jns
js
jae
push
and
jle
jae
into
lods
mov
sub
inc
or
inc
add
lods
idivb
mov
iret
fisubrs
popa
insb
rorl
mov
out
xor
adc
popf
and
push
fists
pop
insb
dec
push
leave
and
popa
std
aas
lret
fcoms
std
mov
jge
push
out
jp
ss
das
lea
jbe
and
daa
mov
sbb
loopne
or
and
aaa
push
push
or
movsl
or
inc
fists
ds
into
mov
or
fs
pop
sub
arpl
movb
adc
ljmp
cld
xchg
ljmp
add
test
in
jp
iret
sbb
outsl
std
addr16
lods
xchg
pop
ficomps
mov
adc
test
mov
push
movsb
fcmovbe
pop
lahf
xchg
fsubrp
dec
sub
xchg
xor
addr16
data16
or
xor
mov
xchg
jnp
das
lods
xchg
mov
xchg
push
cmp
mov
push
jo
dec
pop
loope
std
adc
adc
adc
mov
sub
shl
jge
xor
pop
jmp
ror
adc
les
in
into
xchg
addr16
mov
pop
sbb
pop
inc
pop
sti
fstps
aam
jno
push
mov
mov
movsb
push
lcall
pop
movsb
adc
mov
sarb
jo
cmp
insl
rorb
test
or
mov
test
xor
inc
in
test
sti
mov
pop
cmp
cmp
fsubl
in
andl
imul
xchg
enter
push
lea
mulb
pop
cmp
aas
xchg
or
xchg
sbb
bound
xchg
fdivs
jge
inc
aam
stc
out
int3
js
xchg
dec
dec
popf
sbb
mov
fldl
dec
fbld
fldl
pop
loopne
je
mov
mov
xchg
mov
out
push
shll
push
push
imul
xor
pop
mov
or
fistps
jns
cmpsb
xchg
add
test
bound
jmp
insl
loope
sahf
repnz
test
sub
lret
inc
jne
push
add
nop
mov
out
das
in
andb
dec
push
and
es
mov
sbbl
add
out
mov
mov
xor
mov
aaa
adc
mov
fiadds
loopne
sub
popa
imul
int3
in
leave
cmp
lds
xor
loop
push
mov
cwtl
dec
cwtl
dec
push
test
push
jno
push
sub
fs
inc
mov
jbe
icebp
es
scas
add
adc
rorl
push
mov
and
jg
add
imul
outsb
inc
imul
leave
jle
test
sahf
sub
int3
out
fwait
mov
daa
in
add
jb
dec
jle
add
dec
lods
mov
cmpsb
pop
add
insb
add
add
pop
add
lret
jmp
jno
shl
hlt
lcall
cld
clc
and
xchg
movsb
repnz
sub
loope
ljmp
xlat
sub
sub
stc
push
gs
mov
push
xchg
xchg
ja
mov
add
lock
pop
inc
shrl
daa
add
lcall
pop
jmp
inc
mov
scas
test
pushl
xchg
add
dec
inc
mov
sub
pop
push
add
mov
add
aas
add
jge
cltd
jb
clc
push
cmp
push
fsubs
mov
mov
add
in
push
aam
mov
enter
add
push
mov
xchg
push
pop
pop
mov
push
stc
test
in
push
mov
add
xchg
xchg
inc
mov
std
repz
lret
xor
popf
mov
xchg
clc
dec
cmp
rcrl
mov
add
inc
jp
mov
xor
lcall
call
jge
pop
popf
in
or
and
ds
mov
sub
jb
xor
inc
jo
loope
mov
push
sub
cmovae
jb
xchg
mov
mov
cmpsl
pop
pop
jg
mov
xchg
cmpsl
mov
call
cld
pop
cmp
push
mov
lods
les
loopne
popa
orb
sub
fs
and
shl
mov
lret
and
cs
pop
int
fs
lret
call
push
es
int3
aas
daa
adc
mov
add
adc
sbb
dec
mov
testb
fldenv
xlat
imul
sub
rcrb
dec
xor
arpl
mov
sub
or
shl
notb
loopne
loope
sub
mov
arpl
or
sahf
fadd
inc
ret
outsb
ja
sti
push
xchg
mov
ja
inc
jns
ret
add
adc
cmp
fcmovnu
popf
sub
push
add
or
sub
repz
mov
dec
gs
and
inc
lds
clc
lret
mov
mov
sbb
add
fimuls
mov
jg
in
ds
lcall
pop
xchg
cmp
divl
jo
push
adc
test
pop
mov
mov
or
push
inc
test
xor
scas
jns
pop
stc
imul
fmuls
xchg
jb
dec
std
dec
in
ret
dec
scas
outsl
enter
sub
filds
enter
test
mov
daa
stc
rcrb
les
loope
xor
xchg
pop
jge
mov
addr16
sarl
out
sub
mov
pop
je
jg
dec
inc
fisubs
add
xor
cmp
sub
cwtl
aam
insb
stc
ret
mov
and
pop
mov
mov
fldl
adc
jne
jl
jmp
pop
xchg
mov
int
dec
cmp
scas
loope
clc
push
push
in
pop
iret
add
imul
arpl
lcall
ficoms
int
sbb
sub
aad
lss
and
xor
mov
cmp
xchg
orl
subl
sbb
test
xor
decl
in
mov
scas
es
cmp
adc
fcoms
push
loopne
or
push
in
shlb
inc
aam
jne
xchg
iret
sub
repnz
push
into
and
test
xchg
dec
into
in
pop
sbb
pop
sub
xor
xchg
xor
nop
imul
xor
ret
aas
sub
mov
dec
jnp
jae
push
loop
insb
dec
add
pop
sti
adc
cmp
pushf
mov
inc
nop
add
pop
adc
jge
mov
xlat
sub
divl
sahf
rolb
xchg
jno
outsl
add
call
sti
fisttpl
dec
cs
sub
sub
add
jb
scas
sub
sub
jg
pop
fcmovbe
lds
call
ljmp
mov
nop
or
mov
cli
in
cmp
jecxz
jb
aas
pop
or
loope
rep
push
outsl
call
push
push
popa
sub
xor
je
aad
scas
lods
add
inc
fistpll
push
jecxz
add
jns
dec
lret
sub
sbb
ljmp
jg
test
rcl
mov
sbb
mov
or
enter
out
call
orb
popf
icebp
mov
stos
jmp
sbb
fnstenv
dec
dec
into
ror
push
addr16
mov
jmp
imul
rorb
add
and
loopne
pop
fwait
mov
loope
push
sub
add
adc
sti
out
movsl
mov
dec
add
dec
jbe
push
mov
mov
sbb
pusha
xchg
cmp
mov
cmpsl
divb
rcr
sbb
sub
pop
nop
loopne
jmp
incb
addr16
inc
xlat
lret
js
mov
out
dec
and
cs
jmp
mov
mull
sbbb
cmpsb
jp
mov
es
ret
enter
mov
int3
adc
in
jp
mov
sub
adc
in
out
je
push
xor
aam
jp
es
shlb
pop
in
jno
xorl
out
sti
xchg
cmpsb
pop
or
xlat
enter
shrb
inc
add
jle
fcompl
aad
push
int
xchg
iret
ja
mov
adc
xchg
push
pop
mov
scas
cmp
xchg
and
xchg
xor
mov
mov
stos
or
ret
repz
fsub
xchg
pop
sbb
or
imul
int
dec
daa
xor
pop
div
into
mov
std
dec
imul
mov
fistl
sbb
stos
or
or
fsubrp
imul
xor
std
mov
outsl
cmp
clc
and
cli
sub
arpl
mov
repz
pop
jno
push
jb
pusha
inc
push
movb
test
push
mov
push
pusha
aaa
jg
pop
dec
loop
cli
adc
inc
adc
das
dec
sub
hlt
gs
or
cs
arpl
add
sbb
rclb
and
dec
mov
daa
lcall
push
xchg
popa
repz
int3
addr16
mov
mov
and
jl
lea
fstl
rol
push
in
pop
jnp
test
cmp
in
mov
push
mov
dec
fsubl
or
mov
or
xlat
mov
inc
mov
jp
outsb
nop
mov
add
gs
sbb
cmp
and
flds
sub
jnp
push
mov
inc
dec
dec
int
js
ljmp
xor
insb
adc
repz
leave
sbb
les
sub
push
fcomps
pop
filds
adc
rorl
or
dec
outsb
repnz
jg
push
insl
push
mov
jmp
mov
loopne
out
imulb
sub
sahf
jo
ret
sbb
push
repnz
xchg
pop
out
lods
add
out
pop
push
inc
mov
xlat
gs
sbb
out
xor
pop
jo,pn
fcoml
popa
int3
aad
stos
ljmp
icebp
jp
jns
test
pop
push
and
or
call
and
das
repnz
xlat
daa
jg
mov
ja
mov
sbb
push
xor
xchg
jbe
rorl
lcall
or
test
push
das
cltd
lods
push
jbe
xchg
jmp
jmp
adc
xchg
pop
add
cmp
mov
ljmp
inc
lods
cmp
int3
sahf
push
aam
push
inc
subb
ja
hlt
push
push
out
xorl
outsl
or
test
aad
and
js
out
repz
jp
sbb
pop
lret
and
fbld
pop
in
push
push
dec
test
or
pop
fcomip
xchg
mov
idiv
and
adc
lea
aas
add
pop
add
add
into
pop
out
stc
xor
and
popf
adc
mov
stos
xor
pusha
xchg
cltd
push
jg,pt
test
pop
sahf
fs
test
mov
or
imul
xor
sub
jle
or
dec
dec
mov
jne
cmpsb
sub
add
gs
fnstenv
cmp
cmpsl
adc
xor
mov
jno
jno
mov
andb
pop
adc
ljmp
inc
mov
cmp
jns
lock
mov
dec
outsb
aam
test
add
pop
pop
loop
cmpsl
lahf
cmp
dec
mov
mov
lods
rorb
sbb
popf
into
popa
fwait
jbe
dec
mov
aad
add
mov
inc
leave
enter
jne
pusha
add
shll
addl
in
les
push
test
cwtl
mov
jbe
mov
jmp
mov
push
jae
pushf
sahf
sub
lahf
pop
inc
cmp
jle
jae
sti
fsts
orl
rorb
outsb
sub
inc
roll
sahf
jl
jmp
mov
cmpsb
sbb
je
iret
lret
in
mov
mov
jg
icebp
iret
add
jge
mov
adc
dec
sbb
sbb
xorb
out
cmc
add
std
mov
mov
das
mov
sbb
insb
and
mov
js
mov
xchg
jg
xchg
xor
sbb
insl
adc
fcom
pop
dec
outsl
hlt
push
push
sahf
push
daa
xor
jnp
xchg
cmp
sbb
scas
jmp
fcoml
lods
pop
aas
jle
mov
sbb
mov
or
outsl
mov
jle
sub
pop
imul
dec
jmp
fldl
inc
ret
jns
xchg
gs
and
mov
ficoml
sub
dec
in
in
xor
mov
lret
cmp
iret
push
xor
mov
mov
lcall
push
fnsave
mov
in
add
out
xor
push
dec
mov
test
leave
add
xchg
sub
sti
add
nop
ror
push
push
ja
test
inc
push
xchg
adc
ret
mov
outsl
mov
testl
xchg
sub
mov
out
jmp
mov
xchg
shrb
cwtl
mov
or
inc
push
aas
mov
idiv
int
insl
mov
test
leave
ljmp
ror
adc
push
push
push
pop
push
push
cmp
jecxz
xlat
mov
iret
int3
adc
movsb
jge
adc
pop
icebp
inc
fndisi(8087
mov
mov
sbb
inc
mov
cmpsb
daa
mov
inc
mov
push
adc
push
lock
and
lea
sahf
imul
aaa
mov
push
xor
jecxz
fcmovne
iret
idivb
adc
jmp
sti
xchg
xchg
push
lahf
outsb
stos
add
push
cmp
sub
cmp
and
lcall
sub
pop
and
xchg
shlb
call
cwtl
jnp
rcrb
out
out
fcoms
testl
out
dec
mov
push
mov
into
ret
mov
das
push
pop
mov
pop
pop
push
pop
scas
dec
test
xchg
and
hlt
dec
cli
out
xchg
fmulp
sub
xchg
push
cmpsb
sub
push
or
pop
hlt
test
push
aas
pop
push
jle
mov
mov
fnstsw
popl
out
add
bound
xchg
popa
repnz
xchg
sub
and
sub
cmc
cltd
sbb
add
push
inc
xor
adc
or
imul
mov
jmp
outsb
mov
movsl
shr
imul
and
int
xorl
adc
xor
xor
scas
xchg
aaa
push
loope
test
cmp
imull
cmp
push
repnz
shrb
pop
or
push
jl
push
arpl
dec
and
xchg
cmpl
mov
adc
repnz
pop
test
inc
cmp
sarb
jb
or
push
push
mov
repz
adc
mov
incb
push
aad
fists
sub
pop
testl
add
std
mov
subl
jmp
enter
stos
popf
mov
xchg
cmpl
ret
insb
mov
in
mov
mov
cmpsl
sub
sub
xchg
sub
test
outsl
cs
in
jg
jae
inc
xor
dec
test
test
stc
lods
or
lea
mov
test
gs
inc
mov
aad
pop
dec
fcomps
sub
stos
popa
sub
mov
cltd
rcr
mov
adc
mov
sbb
mov
mov
daa
andb
loopne
sbb
les
data16
stos
lock
sub
iret
outsl
ret
mov
lret
imul
das
sbb
aas
and
arpl
and
bound
lods
and
or
adc
mov
cmp
sbb
cmpsb
push
test
mov
sub
pop
andl
inc
mov
jne
stos
push
nop
les
stc
or
aad
fucom
jl
lret
mov
xor
ficompl
adc
cmp
pop
out
mov
leave
shrl
out
mov
mov
add
or
mov
stos
fsin
xchg
jp
mov
add
or
inc
and
sub
outsb
jp
pop
ljmp
push
aad
xchg
ds
andl
loopne
lods
inc
aaa
divl
fidivl
sub
repnz
in
dec
xchg
jg
push
dec
sarl
bts
insb
mov
ds
jae
dec
jl
push
lds
mov
adc
rcrb
mov
jbe
in
xchg
mov
outsb
xchg
dec
aaa
push
dec
shlb
cmpsb
mov
leave
movsb
jp
and
call
push
imul
push
push
or
or
sbb
mov
xor
push
lock
js
adc
xor
pop
dec
push
bound
fistps
outsl
cmpsl
fisttps
clc
xor
push
in
sbb
or
fucom
mov
cwtl
stos
cwtl
inc
jbe
jno
adc
cs
lcall
mov
jns
xor
pop
and
cwtl
adc
lret
jmp
sbb
xchg
jg
loope
pop
lea
dec
sub
add
loopne
data16
xchg
rcrb
jle
sbb
fs
and
mov
aam
insl
add
push
popf
jns
ret
nop
test
cli
aam
rorl
test
inc
outsl
out
xor
fdivl
cmp
rorl
fcmove
pop
adc
or
or
add
sti
mov
jmp
jb
mov
mov
orl
cmpsb
pop
ljmp
rolb
int3
ds
xor
and
inc
cmpsb
sub
push
das
loope
or
fmulp
lret
sub
sarb
js
xchg
addr16
xchg
add
cltd
cmpsl
inc
lea
or
sbbb
xor
jg
in
inc
mov
rcrl
scas
sbb
sbbb
inc
imul
jecxz
xor
or
dec
adc
or
sub
insb
inc
pop
lock
repz
or
sub
mov
push
daa
neg
cltd
test
sbb
aad
fcmovnb
xor
mov
rclb
dec
pushf
ret
mov
add
mov
int
shl
sub
test
lret
dec
neg
cmpsb
jecxz
shll
and
jns
mov
lods
mov
mov
sub
mov
loop
cmp
bound
fstpl
popf
jecxz
stos
js
imull
sbb
push
lret
inc
test
mov
mov
adc
xlat
std
inc
pop
and
cs
add
inc
pop
repnz
mov
adc
or
push
jecxz
xor
adc
popf
xor
and
cld
popa
xorb
or
cltd
lds
push
xchg
xor
cmp
inc
cs
adc
pop
mov
jl
mov
push
fists
pop
add
sbb
lods
jecxz
cld
popa
pop
dec
and
sbb
jl
dec
fwait
mov
shl
jb
out
into
sub
dec
lods
pop
lea
push
mov
cwtl
xchg
mov
or
gs
pop
js
pop
jb
xlat
mov
jmp
jno
mov
repnz
leave
pop
sbb
out
jbe
or
rcr
push
popf
leave
xor
mov
sub
sahf
mov
mov
adc
sbb
or
xchg
xlat
ret
jl
or
lret
popa
aaa
xchg
push
aam
xor
xlat
fimull
pop
mov
cmpl
jg
lahf
and
nop
and
lods
xchg
jg
addb
jbe
setl
jnp
in
out
stos
xchg
pop
adc
mov
scas
cmp
rclb
push
fcompl
cmp
mov
sbb
jecxz
or
mov
sub
std
repnz
rcr
mov
and
push
mov
or
test
add
pop
xchg
mov
or
cld
popa
pop
cmc
sub
mov
and
push
and
lock
jecxz
cmp
mov
inc
das
mov
pop
add
pop
or
enter
xchg
stc
lcall
mov
jb
dec
popf
push
xchg
dec
xchg
push
sbb
scas
adc
add
nop
std
mov
dec
mov
push
iret
xchg
fidivl
jle
mov
loope
push
jle
es
cs
jp
sbb
xor
cwtl
push
jb
loope
sbb
stos
dec
add
adc
inc
and
xchg
fs
or
clc
out
adc
insl
lods
in
test
or
sub
inc
xor
repz
orl
in
loope
cmc
pop
mov
and
in
or
repnz
loopne
sti
adc
xchg
sub
pop
inc
jne
sbb
aad
push
mov
cmp
xor
popf
cmpsl
mov
mov
mov
cmp
or
adc
sub
and
cs
xchg
xchg
pop
or
cmp
add
iret
add
push
xor
jecxz
adc
out
push
push
test
fdivrl
push
adc
or
std
pop
loop
jge
fimuls
jno
or
aad
sub
mov
rolb
js
imul
adc
xchg
sub
mov
mov
lahf
sarb
lret
dec
add
dec
jl,pt
adc
push
adc
lods
mov
repz
sub
or
dec
jno
icebp
xchg
dec
dec
repz
xchg
and
and
mov
icebp
aam
mov
js
jns
insb
and
mov
movsb
hlt
push
xchg
test
lahf
jmp
mov
mov
jbe
nop
data16
jg
lea
inc
jbe
inc
or
sbb
xor
in
push
fistl
pop
and
pusha
cmp
mov
adc
pop
jno
mov
push
addr16
inc
inc
cs
adc
xor
int
push
lock
test
lds
xchg
mov
xchg
adc
adc
cli
xchg
cmp
push
sbb
or
jle
jb
mov
insl
popa
ljmp
inc
shll
or
fs
add
inc
pop
jno
pop
xchg
adcl
mov
stc
or
xor
in
lods
mov
mov
nop
cmp
pop
xor
ja
nop
call
jb
scas
fimuls
shll
mov
dec
xor
stc
test
std
arpl
push
movsb
scas
jnp
or
adc
subl
call
or
addb
mov
cmpsb
icebp
and
cmc
inc
xchg
mov
pusha
sbb
and
sbb
and
fcmove
js
mov
push
fmull
out
push
test
lock
adc
push
jne
aas
fs
rcr
mov
xor
jle
mov
push
sbb
ljmp
and
mov
sbb
int3
mov
stos
in
imull
mov
bound
ficomps
jnp
add
scas
pop
loop
lods
jne
push
cmpsl
mov
push
push
sbb
aad
adc
xchg
pop
inc
push
push
int
jae
nop
add
cmp
cmp
jno
mov
sbb
int
mov
bswap
subb
test
dec
mov
jb
sub
xor
cmpb
jb
pop
adc
xchg
out
pop
dec
cld
cmpsb
std
xor
div
push
push
xchg
xor
dec
sub
push
ljmp
test
jo
movsl
inc
addr16
fcoms
ficoml
jp
pop
cmp
hlt
and
clc
je
cwtl
imul
pop
cmp
test
xchg
xchg
sbb
xor
sub
mov
shl
xor
aaa
divl
gs
fwait
push
or
loop
jge
push
xorb
push
int
or
ret
lea
sub
inc
out
in
mov
and
fiadds
jecxz
dec
cltd
test
xchg
aam
cmovge
adc
jle
call
cmpsb
jmp
enter
movsl
xchg
into
pop
or
jl
sub
add
cmp
test
push
lahf
pop
es
inc
ret
inc
add
push
jnp
xor
pusha
test
out
mov
fiadds
push
cmpsb
dec
jecxz
out
int3
scas
or
lret
test
test
rcrb
test
test
scas
sti
sub
push
sahf
ret
push
inc
call
fildl
mov
out
jl
in
adc
sub
and
mov
mov
repnz
aaa
pop
out
lock
jo,pn
mov
movsl
insl
dec
es
jecxz
pop
ds
pop
int
jae
mov
sahf
mov
es
cltd
push
fldenv
repz
push
lret
cltd
iret
adc
cmpl
xor
js
fsubrl
out
sti
mov
mov
xchg
cmp
jecxz
lods
xor
xor
sbb
cmp
add
rclb
jb
pop
mov
data16
nop
ficoml
pop
hlt
out
mov
cltd
dec
out
mov
movsb
sbb
inc
int
fdivs
cmp
cs
das
mov
sub
jecxz
test
es
add
and
mov
push
stos
fcoml
xor
cmp
inc
xchg
mov
pop
ss
inc
popa
xchg
cwtl
sub
pop
mov
fst
rolb
xor
lret
mov
test
push
into
sahf
movsl
pop
pop
outsl
and
bound
jb
into
adc
mov
push
hlt
mov
sub
leave
jmp
shlb
jbe
repz
pusha
test
imul
add
adc
out
leave
repz
repnz
cmp
lods
jne
rcrl
jbe
rorb
dec
packuswb
jae
pop
scas
mov
shlb
mov
gs
rcrl
mov
xor
popf
lods
cmp
mov
addr16
mov
outsl
stos
mov
xlat
mov
fbstp
gs
jne
xchg
popf
push
js
ret
mov
cltd
das
mov
aam
jecxz
sub
or
dec
outsl
ret
cmpsl
outsl
add
mov
mov
ja
dec
push
cmp
push
push
negl
mov
ss
or
dec
stc
out
lds
out
add
pop
lcall
cmpsb
ss
sub
sbb
cmp
repz
sub
or
xchg
xchg
shl
sbb
scas
xchg
push
fiaddl
lcall
popa
ret
pop
pop
pop
outsl
insl
and
xchg
xchg
jecxz
addr16
xchg
mov
xchg
adc
mov
int3
mov
inc
aaa
xor
sbb
ss
fadd
xor
lods
fisubrs
daa
xlat
inc
push
push
pop
jnp
jb
pop
mov
push
icebp
iret
push
push
dec
xchg
fwait
sti
test
sub
dec
xchg
cmp
inc
loopne
pop
jae
inc
cmp
inc
add
lcall
and
push
cld
or
or
test
dec
inc
rdtsc
push
xlat
or
fstpl
orb
xor
push
daa
jg
xor
mov
adc
dec
dec
sub
outsb
or
pop
push
fwait
les
outsl
cmpsl
sub
push
mov
sbb
cmpl
sbb
movsb
sub
inc
dec
inc
dec
lock
add
popf
xchg
test
stos
roll
push
ffree
fcomip
in
into
pop
inc
and
into
test
cmp
xchg
and
inc
jl
xor
fs
xchg
movsb
mov
cli
sti
push
out
mov
aas
or
xor
mov
xor
inc
fbstp
push
sti
loop
mulb
push
sub
cmpl
sbb
rol
aam
cmc
jmp
jnp
insl
mov
pop
arpl
dec
jns
in
pusha
mov
fwait
inc
xor
pop
adc
pusha
dec
imul
scas
test
adcb
jge
pop
sub
rcrl
mov
cmpsb
lret
lods
rcl
xchg
push
in
inc
xor
in
push
push
jle
dec
imul
fs
arpl
jae
std
jno
lahf
mov
sub
aaa
enter
loop
cs
sbb
adc
inc
or
mov
ljmp
mov
pop
lahf
pop
fs
rcll
ret
mov
ljmp
push
xchg
ljmp
adc
xor
scas
lods
and
sub
roll
enter
leave
aas
lock
and
les
bound
push
xchg
outsb
push
lock
or
mov
pushf
popl
movsb
sub
imul
push
cmpsl
pop
nop
cmpsl
jns
xor
mov
testb
inc
xchg
test
xchg
cwtl
out
push
sub
roll
jae
dec
jbe
mov
mov
pop
mov
sub
in
pop
idivb
inc
nop
jbe
mov
cli
push
mov
test
push
leave
pop
leave
das
addr16
call
nopl
mov
ja
movl
scas
rolb
fadds
cmp
fs
cmpsl
mov
jge
push
cmpsl
ret
pop
push
adcl
adc
sarb
repnz
and
lcall
jecxz
mov
jb
inc
xchg
xlat
xchg
pop
xchg
jle
jno
dec
out
out
ret
jecxz,pn
lock
or
and
mov
mov
dec
xchg
jae
pusha
fcompl
enter
or
mov
mov
inc
out
ret
xor
data16
pop
mov
add
mov
pop
lret
test
stc
mov
pusha
adc
repnz
xor
ret
test
in
jmp
pop
cmp
bound
push
and
push
xchg
xorl
fdivrl
mov
cmp
xor
cld
das
jmp
cmp
fildll
jno
in
pop
fstpl
dec
fnsave
adc
cmp
sub
or
push
push
mov
adc
inc
mov
xor
ss
ljmp
or
push
ljmp
adc
ds
loope
sbb
les
loop
mov
mov
fisubl
dec
xor
outsb
sub
push
cmp
ret
push
aad
pop
push
mov
push
xchg
pop
test
sub
rorl
movsb
popl
add
xor
mov
outsl
mov
jp
pop
jmp
repz
test
test
divb
jo
lods
out
fdivrl
dec
adc
jnp
jl
mov
cmp
jmp
xor
xchg
mov
or
jnp
push
sub
int3
add
mov
inc
push
jge
std
call
jno
jecxz
roll
mov
stc
mov
jae
nop
sub
jmp
shrl
dec
mov
lret
out
fidivrs
ds
jg
sub
mov
push
popf
gs
adc
sbb
outsb
mov
mov
out
rorb
bound
xor
cmp
mov
pop
in
sub
mov
pop
in
jnp
push
jge
fsubrs
push
cmpxchg
out
sub
inc
fisttpll
fisttpll
aaa
popa
sti
aam
sbb
mov
test
test
imul
in
rorl
sub
lret
gs
pop
daa
outsl
and
loop
add
push
data16
xorl
pop
movsb
inc
mov
ds
lock
test
mov
fdivp
psubsb
cmp
xchg
sub
lods
imul
push
xchg
stos
aad
add
dec
vpshaq
adc
jle
mov
pop
rorb
mov
data16
xor
mov
pop
xor
in
or
push
pop
adc
stos
out
sbb
mov
ffreep
dec
and
adcl
ds
cmp
mov
std
jl
cwtl
lods
adc
fstpl
movsl
call
sub
pop
icebp
popf
dec
ss
adc
int3
in
out
dec
push
adc
mov
clc
icebp
test
jecxz
lods
sbb
adc
rorl
xor
aam
pop
add
push
add
and
addr16
daa
cltd
stos
cmpsb
insb
mov
popf
out
in
mov
adc
das
shl
jge
mov
ds
cmpsb
adc
cmp
notl
mov
movsb
pop
fistpll
dec
inc
jnp
mov
mov
mov
fisubs
pop
and
iret
sbb
and
ds
test
mov
mov
icebp
lahf
mov
cmp
push
sub
ds
gs
mov
mov
inc
mov
cmpb
idivb
lods
mov
in
das
in
aam
lret
aam
dec
jae
mov
or
icebp
mov
movsb
insl
imul
jno
and
mov
fimuls
insl
aas
divb
dec
adc
stc
ficompl
repz
das
mov
mov
push
arpl
and
mov
daa
scas
adc
rcrl
sbb
cwtl
pop
sbbl
shrb
xor
adc
pop
in
push
dec
popf
pop
cs
sub
and
cmc
push
mov
cld
roll
pop
int
jns
in
jb
mov
mov
fidivrs
int3
cmp
xchg
add
std
inc
ljmp
add
xor
std
xchg
les
xchg
fistps
lds
ret
xlat
aaa
fcom
in
enter
in
and
cmpsb
pop
mov
popf
mov
and
xchg
fildll
jbe
jnp
xchg
xor
shrl
lcall
sub
in
loop
dec
push
jo
frstor
mov
and
ja
xchg
pop
pushf
sbb
mov
es
sahf
int
adc
data16
sub
mov
pushl
js
mov
pop
mov
gs
pop
cli
addb
sub
lods
sarb
lret
cmp
pop
push
fcom
push
clc
jp
sbb
xchg
mov
push
ret
sbb
and
dec
insl
mov
iret
xor
mov
sbb
sti
mov
dec
pop
lret
sub
sbb
fdivl
mov
sarl
cmpb
push
mov
add
push
mov
inc
pop
sub
push
das
shll
dec
mov
test
pop
and
cmp
int3
and
inc
adc
xor
push
push
xchg
ljmp
cmp
mov
mov
inc
push
or
lahf
in
cmp
push
lahf
ds
mov
int
sbb
push
xor
stos
loop
sbb
enter
mov
test
adc
and
or
ret
pushf
mov
subl
mov
cs
int3
cli
test
loopne
mov
mov
call
xor
and
or
sbb
dec
popf
add
sbbb
cmp
mov
pop
mov
call
inc
adc
mov
insb
inc
aam
cli
dec
jnp
adc
push
fnsave
mov
mov
repz
cld
xor
sbb
sub
fwait
mov
push
adc
in
nop
mov
arpl
aad
adc
movsb
outsl
jmp
fwait
adcb
test
sub
jns
ret
or
aas
iret
fildll
adc
fdivrl
adc
les
pop
loope
adcl
xchg
lock
or
ret
cmp
mov
push
xchg
out
std
pop
ljmp
push
xorl
lea
fwait
cmp
call
adc
test
jb
ret
cmp
mov
adc
jnp
inc
or
ja
jns
fldl
and
dec
out
stc
ss
aad
scas
mov
jle
das
leave
scas
imul
fildl
repz
fiadds
int3
or
xor
jo
ja
and
jns
fnstsw
pop
dec
ds
sbb
jnp
fnsave
test
cmp
lret
sbb
lret
sub
add
push
cli
push
push
popf
pop
iret
in
repz
movsl
lret
or
ja
dec
iret
push
stos
mov
and
int3
adc
mov
int3
jno
or
in
xchg
sti
imul
lods
les
out
loopne
dec
push
clc
fsubl
cmp
lahf
cwtl
in
mov
jne
cmp
jl
int3
xchg
cmpsb
es
mov
ja
aaa
dec
gs
leave
mov
push
ss
jp
lret
outsb
adc
inc
inc
hlt
xchg
ss
jno
xor
iret
ficoms
inc
and
filds
fistpll
fisubl
and
cmp
and
cmp
popf
push
bound
mov
dec
movsb
ds
loope
ret
insb
mov
add
and
cltd
movsl
stos
xor
fildll
mov
das
dec
out
in
pop
jl
add
xchg
lret
xchg
jnp
jb
je
xor
negb
push
mov
out
cld
idivb
push
dec
rcrl
enter
fsubs
stc
lock
pop
pmovmskb
xchg
pop
rcll
push
ds
mov
push
mov
mov
pusha
repz
jne
arpl
inc
lret
in
cmp
pop
mov
insb
sub
xor
sbb
call
mov
inc
dec
shlb
negb
loope
xorl
xchg
ja
dec
dec
mov
ss
add
in
xor
xchg
jns
test
and
mov
push
mov
es
fnsave
inc
sbb
jl
mov
xchg
std
hlt
jb
fwait
testb
movsb
pop
into
jmp
fadds
xlat
xchg
stc
inc
mov
pop
cmp
mov
repnz
pop
mov
fildll
or
inc
push
push
lcall
cmpsl
out
nop
fwait
xchg
add
ror
ficoms
jo
xchg
mov
adc
popa
lods
fsubs
in
sbb
test
sbb
mov
loope
xchg
sti
jmp
xchg
movsb
pop
test
push
ljmp
enter
not
loopne
xor
cmp
shrl
and
pusha
mov
pop
push
or
in
xor
jmp
cmp
mov
testl
xor
test
sub
xor
push
or
push
pop
sub
lea
movsb
fstps
cmp
pop
clc
push
pop
test
enter
adc
lods
dec
aas
fldcw
and
ja
aas
aaa
jb
inc
andb
addb
inc
fisubrs
mov
aad
dec
pop
and
push
xor
lds
mov
jno
xchg
pop
sbb
xchg
iret
xor
jno
sbb
inc
test
jle
stos
push
lret
push
arpl
out
jb
leave
out
pop
ljmp
xor
subl
lret
xlat
pop
jb
or
icebp
mov
scas
mov
out
into
or
mov
mov
jns
pop
std
mov
nop
sti
mov
lds
xor
in
je
pop
movsl
push
adc
inc
add
movsl
inc
sub
jno
mov
hlt
inc
test
fiadds
movsb
mov
hlt
pop
cwtl
lcall
xchg
lahf
ret
and
inc
loop
adc
scas
shl
jb
pusha
xchg
out
repnz
push
mov
in
push
xchg
dec
lret
cmp
negl
iret
adc
mov
cmpsb
icebp
pop
scas
adc
and
mov
xchg
loopne
in
pushf
adc
in
outsb
iret
in
jbe
mov
neg
ss
in
sarl
mov
loope
cmpsl
dec
cltd
inc
into
sbb
hlt
fcoml
mov
jp
in
push
popa
sahf
or
pop
test
sub
sub
ret
jae
xor
push
jns
mov
and
push
iret
or
aaa
inc
test
push
test
cmp
movsl
xchg
mov
xchg
xor
fs
jp
add
xchg
daa
xorb
cmp
pop
pop
lods
push
adc
mov
jmp
pop
or
out
and
gs
jp
jo
push
push
aas
aas
xor
scas
iret
mov
repnz
outsb
and
fstpl
fwait
cltd
jae
hlt
pop
inc
out
pop
mov
aaa
repnz
mov
ror
jmp
inc
pusha
push
pop
lea
push
inc
daa
pop
ja
push
in
lret
sbbb
push
or
fmull
cmp
test
test
lds
fldl2e
xchg
and
cmp
ret
push
and
mov
and
xchg
lahf
iret
push
jge
call
dec
int
call
lret
add
pop
inc
pop
xchg
adc
cmp
hlt
push
adc
scas
cmp
dec
adc
shlb
pop
fbstp
lret
test
int3
lods
sbb
mov
xor
xchg
orb
daa
mov
ror
xor
js
out
int
int3
ss
push
es
or
inc
jp
xchg
cli
daa
lahf
fwait
xor
rol
push
pop
adc
fst
xor
jle
cmp
inc
iret
ljmp
cmp
xor
mov
in
inc
cltd
pop
dec
sub
loope
push
and
pushf
loope
aas
or
shr
sbb
jno
push
push
cmc
gs
pop
sbb
stc
mov
lds
sbb
enter
rorl
jmp
pop
add
icebp
mov
mov
xor
xchg
mov
bound
add
sbb
lods
and
cli
out
mov
sub
sbb
lcall
jo
mov
repnz
push
push
lret
out
mov
and
call
jb
fimuls
arpl
jbe
std
mov
and
das
xchg
jb
sub
add
dec
mov
sbb
xlat
int3
orb
push
inc
dec
xor
cmp
idivb
inc
outsl
lds
stos
jns
xchg
jge
mul
aam
xor
xor
jp
movsb
jp
xor
add
loopne
shrb
rcrl
sub
imul
fdivl
add
das
mov
pop
call
push
jge
loopne
lock
je
xlat
scas
mov
out
sbb
cs
mov
ds
push
push
mov
adc
sarb
xchg
ljmp
lcall
dec
push
sarl
or
sub
data16
jle
cltd
test
and
mov
mov
iret
mov
mov
rol
lock
or
insb
sub
cltd
jne
fmulp
push
enter
pop
dec
mov
dec
xor
shl
cwtl
mov
cmpsb
nop
jg
cwtl
xchg
imulb
imul
jmp
pop
add
dec
popa
cwtl
popa
movsl
mov
cwtl
pop
lds
mov
nop
push
push
mov
ds
pop
fdiv
dec
aad
lods
sbb
popf
mov
popf
lea
sbb
adc
out
inc
les
xor
aaa
mov
cmc
inc
pushl
test
jbe
mov
movsl
into
push
gs
les
mov
and
pop
cltd
sub
rcrb
in
je
xlat
icebp
sub
dec
shlb
imul
imul
insl
mov
jg
psrlw
test
cmp
sahf
adc
mov
mull
cmp
cli
mov
bound
into
lds
adc
jle
fisubl
fs
mov
into
inc
push
icebp
shlb
jmp
mov
lea
and
pop
enter
inc
rcr
jno
adc
sbbb
fnstcw
movsl
cmp
fwait
ret
pop
or
scas
imul
dec
clc
aad
test
cld
xor
xor
call
mov
mov
adc
dec
iret
fnstenv
test
sbb
push
and
mov
insb
sub
cmc
pop
adc
dec
out
push
mov
xchg
sbb
sarb
popa
cmp
xchg
xchg
imul
mov
in
enter
xchg
andb
xor
dec
cmp
call
and
pusha
xor
out
xchg
pop
pop
xor
pop
jmp
and
cmp
sbb
scas
out
test
insb
mov
add
out
mov
dec
outsb
sbb
push
xchg
jbe
mov
mov
lcall
mov
jne
mov
filds
adc
jae
inc
sbb
jo
mov
sbb
sbb
stc
or
jo
test
push
pop
mov
nopl
clc
mov
push
loope
mov
outsb
lods
cmc
xor
jbe
cmpsl
mov
fwait
xor
shl
mov
mov
cmp
mov
and
sbb
mov
and
shlb
das
jns
lea
jp
jmp
push
sub
icebp
aas
rcrb
xchg
xchg
xchg
out
mov
dec
aas
in
push
imul
rcrl
mov
icebp
pop
and
inc
test
mov
mov
mov
xchg
add
out
xchg
jp
lds
pop
sub
movsl
sub
mulb
jle
fisubrs
push
push
push
fidivrs
fwait
call
lods
imull
cltd
jle
dec
xor
mov
jl
neg
pop
jbe
inc
or
jp
movaps
icebp
aad
cmp
repz
stos
icebp
in
in
push
add
cld
mov
push
fs
aam
daa
bound
push
rcll
adc
sub
mov
std
call
mov
xchg
add
mov
add
cmp
add
mov
add
mov
mov
mov
aad
cmpl
push
xor
add
ret
loop
stos
lock
in
jae
pop
hlt
mov
fnsave
or
sbb
mov
adc
hlt
pop
popa
add
hlt
jp
push
push
popf
mov
out
mov
pop
loopne
push
and
fs
out
mov
lcall
dec
rcll
pop
in
mov
mov
xchg
sub
xor
mov
jmp
scas
pop
jmp
jo
pop
mov
lock
ret
lret
mov
push
mov
push
mov
mov
cmc
das
fwait
add
sbb
lahf
xchg
outsl
jne
adc
xchg
xchg
out
push
fchs
or
cmp
ja
mov
xchg
xor
lret
mov
pop
sti
dec
call
mov
xor
adc
ljmp
repz
ds
imul
cmc
inc
pop
int
push
mov
shr
pop
daa
test
or
push
iret
push
mov
test
aas
sub
ljmp
mov
jne
mov
and
js
lret
or
dec
inc
mov
lds
pop
es
outsl
mov
and
mov
jl
jp
mov
dec
mov
adc
insb
add
mov
cmp
stc
jge
xchg
xchg
cmp
cltd
movsb
mov
inc
inc
popa
out
lret
orl
out
aas
pop
rorl
out
or
divb
push
xor
test
in
ret
out
movsl
push
stos
add
sahf
mov
sub
cmpsl
stc
subl
sbb
loop
std
popf
cwtl
and
repnz
pop
leave
div
test
fildl
movsb
inc
and
sub
mov
push
jmp
add
push
movsl
roll
cmp
dec
and
push
mov
test
xor
movb
movsl
sub
dec
insl
out
pop
outsb
xchg
stos
jle
out
pop
cmp
mov
insb
push
sbbl
or
xchg
cmpsl
sub
movsb
mov
dec
dec
je
mov
dec
mov
xchg
setne
mov
pop
mov
outsl
mov
lods
ljmp
shlb
je
rcrb
jbe
adc
mov
mov
pop
enter
out
push
dec
mov
adcl
cmp
push
or
adc
loopne
in
movsb
sub
mov
pop
adc
inc
pop
insl
hlt
push
xor
inc
push
or
fmuls
sbb
adc
xlat
cmp
fiadds
fldl
sbb
popf
inc
jbe
cmpsb
jp
mov
pusha
lods
push
and
fadd
adc
mov
xchg
stos
ss
inc
inc
call
jecxz
dec
lret
daa
in
adc
sti
sbb
push
jnp
stc
jge
cltd
sbb
mov
mov
in
inc
mov
jg
mov
inc
icebp
or
push
stos
cmp
repz
jne
adc
jge
imul
jp
ljmp
stc
jb
mov
mov
sahf
orb
sbb
xchg
movsl
or
les
rcrl
mov
dec
test
mulb
pop
sbb
mov
mov
jns
aam
push
outsb
pop
imul
mov
scas
ss
ja
xchg
inc
sbb
and
xchg
arpl
mov
push
sbb
mov
xchg
push
cmp
imul
xorb
jge
inc
test
pop
je
push
std
cs
arpl
scas
test
idivl
arpl
mov
cli
jl
dec
ss
or
mov
dec
rcl
movsb
xor
mov
pop
fwait
in
and
xchg
pop
pop
fmull
push
inc
mov
ficoms
lahf
adc
loopne
mov
insl
push
fucomp
pushf
inc
mov
stos
pop
mov
cmpb
sub
stc
xor
push
scas
adc
sbb
int
push
inc
xchg
rcl
fsubr
loope
jmp
mov
xor
pop
jmp
xor
add
clc
insl
sbb
fiadds
dec
jne
push
je
stc
dec
add
daa
jae
sbb
jge
sahf
cltd
imul
pusha
dec
pop
mov
popa
cmp
xchg
mov
pop
mov
push
adc
or
push
cmpsl
cltd
jecxz
js
cld
xchg
enter
mov
fdivrp
jo
mov
test
fwait
or
mov
fistps
faddl
push
rcll
stos
pop
inc
cmpsb
call
mov
xor
lods
or
push
lret
movsl
adc
in
cmp
std
add
jbe
mov
mov
xor
pop
fwait
gs
sub
sub
lcall
das
popa
outsb
add
dec
mov
sub
pop
add
inc
shlb
out
mov
cs
fwait
sub
and
mov
test
fiaddl
sub
rcrl
ja
or
sub
out
imul
adc
cld
cmp
inc
push
mov
cmp
in
insl
mov
push
jo
inc
add
es
shl
jbe
loope
sbb
xor
fdivl
scas
dec
dec
mov
dec
xor
xor
fsubrl
aad
movsl
push
and
dec
mov
mov
jnp
lds
js
cmc
push
xorl
leave
xchg
les
push
push
sub
sbb
jb
fcmovnbe
ljmp
data16
adc
ljmp
int3
fldt
loope
cwtl
sahf
in
pushl
test
gs
dec
xor
pop
scas
jae
mov
mov
pmulhrw
das
inc
pop
or
orl
mov
ljmp
andl
rolb
fidivs
into
pop
mov
pop
xchg
add
adc
add
repz
jnp
push
out
out
ds
jae
adc
add
sub
pusha
rcr
jae
adc
lea
in
cmp
or
jge
mov
dec
js
test
es
das
or
pusha
inc
and
push
je
xchg
hlt
rcl
jle
test
sahf
mov
in
jmp
pop
fildll
pop
jnp
adc
jae
loope
std
fildl
xchg
sti
scas
mov
mov
loop
xor
push
push
push
shl
stos
inc
leave
pop
cld
and
loop
mov
dec
mov
test
dec
pop
sub
jne
pushf
aad
dec
les
ljmp
out
mov
sbb
mov
lret
push
mov
test
mov
adc
pop
je
dec
hlt
repz
pop
pusha
cmp
push
repnz
aas
stc
jl
enter
add
nop
xor
sub
adc
outsb
mov
mov
jnp
or
loop
jl
int3
bound
sbb
sub
push
mov
dec
test
outsb
jmp
push
mov
lahf
mov
les
ljmp
cs
nop
insl
stos
aaa
push
ljmp
mov
lret
or
repnz
dec
aas
sbb
push
pop
rclb
add
xor
fildl
cmp
adc
and
ds
sub
scas
aam
lahf
mov
loop
mov
mulb
divl
and
inc
mov
xchg
loop
adc
xor
adc
or
jbe
test
push
pop
int
sbb
cmc
pop
xorb
je
fsubrl
pop
xor
and
mov
push
outsl
addr16
jmp
out
ljmpw
sbb
pop
pop
addr16
xchg
cli
daa
dec
lret
add
lock
adc
inc
jecxz
cmp
scas
clc
mov
pushf
arpl
pop
in
mov
jns
shl
int
sbb
stc
loop
test
jp
daa
imul
xchg
or
out
sub
xor
cmp
insb
test
imul
pop
cmpsl
inc
icebp
xchg
ficoms
ss
aaa
add
test
inc
repz
aaa
pcmpgtw
pop
add
mov
stc
sbb
loope
stos
cli
lret
sahf
mov
and
sarb
stc
es
mov
dec
aad
jg
or
ja
stc
push
int3
adc
dec
sarb
cltd
jae
add
push
mov
push
into
xor
and
cmp
aam
bound
xor
test
test
bound
adc
adc
aad
mov
adc
sub
icebp
popa
jp
fiaddl
and
and
fwait
cmp
cmp
mov
sub
xchg
aaa
mov
enter
jo
jp
popa
sbb
jae
push
adc
addr16
jae
push
pop
sub
jno
mov
mov
xchg
jne
js
xor
mov
pslld
inc
pop
and
and
add
push
xchg
and
pusha
jl
sbb
lods
xchg
cmp
dec
jmp
push
es
test
outsb
ret
dec
psrad
fldcw
imulb
dec
or
test
cmpsb
inc
repz
xchg
imul
fcompl
les
int3
add
jecxz
out
lock
jp
adc
fidivl
jae
rolb
fsqrt
mov
mov
mov
ficoml
bound
dec
add
incb
sbb
jo
in
sbb
popf
dec
arpl
test
movl
xor
inc
imul
cmp
iret
stos
mov
movsl
pop
shrl
mov
dec
ja
add
cwtl
movsb
fdivrl
mov
mov
xlat
mov
push
aad
fnstenv
dec
popf
adc
sbb
test
sub
in
push
xor
push
roll
int3
or
mov
pop
mov
and
adc
ret
mov
cmp
mov
nop
mov
and
call
push
push
test
push
adc
push
or
mov
pmuludq
xchg
inc
adc
mov
dec
jno
dec
daa
call
jo
mov
jl
pusha
jg
adc
icebp
sti
gs
clc
icebp
jb
mov
sbb
fcmovnb
inc
xchg
das
in
pop
repz
inc
ret
mov
lods
test
mov
adc
dec
lret
out
filds
popf
mov
inc
in
mov
sub
inc
notl
jb
ljmp
lcall
rolb
cwtl
loope
add
jmp
jmp
dec
insb
shrl
fistpll
inc
std
test
outsl
xchg
lcall
push
out
push
mov
sbb
push
into
and
push
repnz
xchg
jns
and
clc
js
xchg
dec
add
and
fstl
mov
loop
test
xchg
xchg
sbb
lret
and
fisubrl
fwait
lea
dec
movsl
movsb
xor
cmp
sub
es
cltd
fidivrl
mov
push
pop
mov
xchg
sub
jge
adc
fldenv
dec
jns
fisubrl
dec
das
fwait
sub
push
mov
sbb
and
xlat
sbb
rorb
fcmovne
inc
xchg
popa
or
sub
xchg
push
aad
icebp
pop
jns
jnp
and
sti
mov
into
sbb
gs
add
mov
and
mov
xchg
insb
in
mov
test
popf
rol
sub
sbb
and
insl
test
nop
int3
jb,pn
outsl
insl
ds
push
pusha
dec
icebp
add
fsubrs
add
in
inc
dec
xor
mov
scas
icebp
push
and
mov
cmp
add
add
scas
mov
pop
mov
push
mov
mov
mov
gs
push
mov
xchg
aam
mov
gs
and
add
fsts
mov
and
cmp
popa
inc
sbb
mov
fsubrs
aas
rcll
mov
addr16
lea
fwait
iret
push
das
test
ds
in
inc
loopne
cmc
or
mov
lret
addr16
pop
pop
loop
sar
in
in
sbb
mov
push
icebp
or
in
jne
jl
lods
lahf
in
mov
inc
inc
mov
js
sbb
xchg
inc
filds
jb
and
adc
push
iret
test
inc
xor
pop
outsl
ret
shll
scas
outsb
inc
shr
cli
movsb
xor
pop
push
adc
sbb
pop
cmpsl
int
fisubs
push
sbb
or
push
imul
push
js
mov
and
push
test
push
dec
xor
stc
push
leavew
sarb
push
inc
lret
cltd
jne
int3
orl
sub
inc
lea
fmull
xchg
mov
pop
mov
lea
stos
scas
pop
dec
lret
cmp
daa
sahf
stc
into
test
fcomps
stos
mov
push
repz
cmc
adc
sti
imul
add
outsb
xchg
mov
andl
mov
jmp
push
xchg
ret
mov
sbb
xlat
int3
pop
scas
std
push
shrl
sub
mov
daa
pop
dec
xchg
xlat
aaa
cmp
jo
clc
jbe
ljmp
gs
cmp
shrl
repnz
adc
loope
in
jnp
cmp
inc
jb
lea
addr16
into
push
cwtl
int3
adc
mov
add
cmpsb
test
mov
movsb
xchg
in
mov
adc
aas
pop
push
popf
shrl
in
rorb
push
rcr
mov
pop
xor
sahf
fadd
cwtl
and
push
test
aas
cmpl
js
nop
mov
sbb
fs
push
bound
rcl
jmp
mov
mov
cmpsl
and
mov
add
lock
adcb
mov
jg
pop
lods
lea
sub
mov
sub
addr16
mov
inc
pop
outsb
nop
mov
fisttps
inc
and
cmp
dec
in
push
mov
jl
and
jbe
sub
xchg
divl
testl
mov
xor
arpl
add
dec
aad
jp
jle
xlat
jg
data16
xchg
xchg
mov
inc
mov
stc
xor
out
lods
imul
das
jmp
sub
sbb
adc
insl
jg
mov
adc
icebp
insl
insl
movsb
cmc
add
adc
xchg
or
sbb
and
push
xchg
fcmovnb
xor
xchg
sub
jge
mov
add
sahf
or
sarb
pop
scas
pop
lcall
roll
mov
rorl
inc
pop
cs
xor
add
mov
jge
inc
pusha
or
pop
stos
or
dec
insb
pop
adc
les
sbb
dec
xchg
fisubs
jnp
fbld
out
xlat
into
cwtl
pop
lahf
xor
movsl
dec
push
xchg
fwait
or
loop
mov
xor
mov
dec
or
mov
xor
jg
and
jmp
push
mov
roll
sbb
sahf
jns
inc
mov
lds
adc
insb
sbb
mov
ljmp
mov
sub
test
push
mov
dec
std
int3
sbb
mov
cmpsb
negb
fsubs
xchg
inc
cs
mov
leave
dec
in
or
loop,pt
add
out
cmp
jne
dec
add
mov
push
or
addr16
pop
jo
pop
imul
jmp
je
xor
sbb
movsl
mov
cmp
ds
or
out
and
push
fwait
je
es
inc
xchg
jge
mov
and
or
popa
dec
rolb
mov
iret
adc
nop
xor
and
adc
inc
cli
addr16
js
rolb
enter
sub
inc
mov
shr
int
and
imul
in
push
arpl
dec
iret
inc
cltd
cmp
mov
mov
mov
and
imul
jb
sti
stc
pop
jns
stc
out
leave
push
sub
insl
xlat
inc
cs
push
gs
cmp
sbb
cmp
imul
mov
xchg
or
jnp
flds
add
sub
dec
jns
xlat
aad
inc
xchg
inc
or
xor
adc
sbb
mov
hlt
add
dec
sahf
adc
cmpl
rorl
adc
mov
lock
jb
popf
push
adc
into
add
pop
ret
push
cld
dec
add
repz
dec
adc
icebp
jne
arpl
aas
insl
fs
adc
push
add
mov
insl
sub
daa
cltd
insl
dec
lds
mov
and
inc
call
or
pop
mov
test
cmp
push
mov
add
mov
xchg
hlt
movsb
call
fidivrs
push
mov
mov
jb
xor
dec
mov
aas
cmp
lds
lret
push
jmp
sub
add
stos
dec
add
ficompl
out
stos
adc
cmp
mov
bound
fdivrl
int
outsl
adc
dec
dec
inc
imul
push
test
popf
mov
sbb
inc
pushf
lret
sbb
out
pusha
scas
dec
jmp
mov
int
inc
mov
out
mov
or
in
xor
enter
clc
dec
lea
cltd
popf
mov
mov
push
jmp
jae
push
inc
mov
imul
add
dec
data16
mov
mov
das
filds
sbb
add
or
arpl
popa
xchg
cmp
or
inc
ficoml
and
cs
in
addb
cmp
sub
pop
orb
adc
divb
or
xor
push
mov
push
jp
mov
mov
cli
in
lds
int3
testl
add
inc
xchg
insb
call
mov
mov
mov
jne
out
mov
adc
cmpsl
stos
mov
mov
fdiv
push
aam
mov
ret
loope
adc
stos
push
ja
mov
sub
ja
inc
je
and
mov
leave
push
cmpb
or
fucom
rcll
adc
addr16
xchg
jp
xchg
int
pop
pop
mov
cmpsl
shl
xor
pop
adc
and
pop
imul
scas
jo
aaa
add
xor
push
lcall
fidivs
inc
sub
push
sahf
fsubrl
cli
mov
insb
arpl
jnp
sbb
inc
ljmp
xchg
sti
add
push
out
dec
jno
in
push
iret
adc
rcpps
jl
mov
add
or
icebp
push
xor
xchg
push
push
mov
les
pop
cld
sub
mov
nop
fists
in
rcrl
and
lcall
imul
or
pushf
xlat
sub
les
jno
push
mov
cmp
nop
mov
in
inc
ret
leave
mov
adc
jmp
inc
popf
mov
scas
out
xlat
cwtl
inc
dec
andb
pop
je
push
inc
adc
or
imul
adc
pop
cmpsb
add
push
inc
xor
out
cwtl
xlat
jmp
jle
jns
mov
sub
repnz
cmp
dec
mov
jecxz
out
mov
movnti
test
jo
adc
push
cli
mov
xrelease
fmull
sbb
addb
xchg
jmp
adc
push
sti
fwait
mov
shlb
add
aam
xor
and
and
xchg
lcall
jb
add
sub
test
jo
imul
cmp
inc
xchg
lcall
sub
ficoms
fidivs
insl
ds
sub
mov
scas
sahf
pop
mov
xchg
sub
je
mov
gs
jge
xlat
adc
fnsave
cli
mov
mov
insl
test
cmp
psubsb
scas
xchg
cmp
sub
push
or
push
popa
xor
rcrl
inc
scas
push
sub
ret
push
loopne
scas
xchg
insb
push
in
and
arpl
mov
mov
stos
xlat
arpl
out
sahf
shl
nop
lret
adc
mov
es
xor
dec
icebp
jg
push
jp
push
inc
pop
inc
sub
sbb
cmp
lret
jl
call
cmp
std
int
pushl
dec
adc
push
loope
out
xor
xor
fidivl
roll
pop
cli
repz
mov
jno
or
xor
pop
cld
ss
jno
imul
ret
enter
jns
into
sahf
push
in
lahf
jo
or
faddl
mov
add
inc
cmpsb
in
push
inc
cmp
hlt
sbb
jb
xchg
and
repz
in
aas
jns
cmp
or
repz
jo
scas
gs
xchg
out
xchg
cmp
add
push
sub
mov
and
adc
dec
cmc
aas
cli
and
mov
mov
stc
sub
jle
cmp
jns
jmp
mov
pop
int3
and
mov
stc
or
cmp
movsb
mov
inc
mov
dec
mov
cmp
mov
dec
paddd
hlt
inc
xor
xchg
pop
mov
hlt
jg
enter
shrl
jae
cmp
movsl
mov
mov
jo
fisubs
dec
xor
jae
inc
es
pop
pop
out
ds
test
or
jmp
pushf
xorl
in
lods
loope
mov
adc
out
insb
loop
mov
xor
and
mov
stos
mov
mov
sahf
add
ljmp
imul
lret
cld
popa
loop
mov
mov
insb
add
fnstenv
test
in
mov
adc
jmp
push
pop
repnz
push
int3
push
cmpsb
les
cmp
inc
mov
xchg
ret
xchg
inc
int
jg
popf
push
push
xchg
xor
mov
imul
test
bound
jp
sahf
cltd
scas
mov
ret
mov
push
xchg
jne
push
fsubl
out
ljmp
push
add
xchg
xchg
pusha
fcmovne
inc
lods
jne
mov
cmp
pminsw
pop
pop
add
push
and
mov
sahf
add
test
jmp
sub
lock
pop
mov
mov
or
popf
pushf
fcmovnu
adc
or
mov
es
lcall
cmp
inc
mov
pop
jge
fsubs
imul
lea
aam
aas
stos
mov
xor
in
leavew
and
nop
xchg
aam
mov
sub
gs
mov
les
sarb
test
mov
mov
xor
lret
bnd
dec
jnp
push
pop
dec
pop
mov
cmp
sarl
xchg
mov
pushf
in
js
in
jb
dec
push
mov
call
fwait
test
push
popa
ss
push
dec
cmp
repnz
xor
loope
push
mov
mov
jge
mov
mov
loope
fcmove
dec
testl
xchg
inc
lods
imul
pop
sahf
pop
ds
out
shrb
jmp
movsb
std
or
into
sbb
push
and
lea
jecxz
inc
cmp
loop
push
jbe
loop
mov
xchg
sub
push
call
mov
or
lea
cld
sub
pop
cli
pop
push
adc
mov
add
or
and
mov
pop
pop
xor
xchg
outsl
movsl
movsl
mov
pop
lahf
je
outsb
jbe
mov
mov
cmpsl
popa
int
lds
and
mov
jo
mov
jle
or
adc
adc
in
fwait
xor
cmpsb
test
idiv
popf
pop
mov
mov
rcrl
icebp
inc
imul
cmp
aam
shlb
shlb
xchg
and
adc
xchg
insl
mov
mov
or
fwait
adc
push
addr16
adc
push
inc
loope
or
clc
inc
js
call
in
mov
sub
shrb
lea
mov
mov
cld
adcb
movsl
outsb
and
orl
xchg
daa
sub
and
stos
cmpsl
aad
int
loopne
jecxz
pop
push
adc
fcomi
outsb
inc
in
add
movsb
adc
lret
cmp
in
ds
cltd
sub
inc
or
sbb
sti
and
pop
insb
fwait
xor
inc
mov
into
shrb
push
adcl
out
mov
mov
notb
pop
sbb
stos
cmc
jle
jg
shl
mov
cwtl
push
jp
out
sbb
rclb
lods
int
xchg
out
jnp
out
fisubrs
jnp
incl
arpl
lret
lahf
dec
mov
inc
movb
shr
je
call
xchg
aam
push
xchg
inc
bound
mov
pop
mov
vcvtps2dq
fs
pop
js
sbbb
testb
insl
aaa
int3
cmp
lcall
push
gs
test
mov
rol
and
jnp
imul
adc
in
adc
std
fmull
xor
enter
mov
cmp
out
xor
sbb
push
or
popf
insb
das
cmp
fwait
les
insl
ljmp
outsb
and
test
outsb
ljmp
xacquire
mov
jne
pop
dec
mul
mov
in
std
push
sub
inc
aaa
es
mov
xchg
outsl
call
out
jle
subl
fistl
out
f2xm1
push
or
dec
fidivs
cld
fisubrs
jbe
xchg
fcmovnbe
ret
test
ret
outsb
cmpsl
jl
rol
sbb
enter
jnp
inc
aas
xchg
arpl
cli
in
pop
clc
mov
dec
scas
dec
inc
lds
popa
mov
jnp
mov
iret
repnz
insl
out
out
mov
xchg
adc
dec
iret
popf
pop
repnz
push
inc
dec
sti
mov
inc
push
test
stos
lds
dec
sbb
cld
outsl
xor
xchg
or
lock
mov
cld
push
mov
xor
std
jge
stc
xchg
mov
cwtl
mov
cmpsl
pop
pusha
decl
pusha
mov
sbb
push
stos
push
lds
std
push
and
imul
xor
pop
sbb
filds
loope
outsb
and
out
fwait
jmp
ret
sub
push
js
ja
icebp
push
pusha
xchg
push
sbb
cmp
xorb
push
repnz
sub
mov
pushf
cmp
in
cli
stos
push
and
or
fucomp
jecxz
xchg
dec
stc
scas
sub
xchg
xchg
inc
ds
sub
cmp
jge
cli
clc
orb
out
push
iret
hlt
repz
jecxz
outsb
push
gs
out
in
lods
rorb
aaa
and
imul
enter
cs
cmp
push
jns
int
xchg
cmp
stos
js
lret
cmp
jl
inc
mov
aam
push
ret
mov
sahf
pop
ss
rol
jb
add
sbb
push
int3
inc
in
mov
leave
or
ss
iret
mov
call
cmpl
loop
movsb
sahf
and
mov
sarl
iret
mov
or
adc
ret
loop
fs
jle
or
jmp
stos
fsubs
pusha
dec
jl
movsb
cmp
aaa
sbb
jle,pn
xlat
icebp
sbb
xchg
movsl
push
out
mov
xor
nop
outsb
xchg
xchg
or
inc
dec
jae
pop
dec
daa
sub
dec
inc
pop
fwait
and
cmpl
mov
mov
andb
in
push
pop
mov
popa
lahf
loope
mov
inc
js
lret
and
test
test
scas
fidivs
divl
imulb
sub
inc
lahf
add
cli
cmp
shlb
add
sbb
sbb
ljmp
sbb
mov
pop
outsl
aas
pop
icebp
pop
mov
or
aas
in
das
cs
les
aas
loope
sbb
push
mov
mov
cwtl
jnp
loope
xchg
mov
and
insl
mov
sub
orl
inc
mov
ret
clc
es
push
sbb
sbb
ja
imul
test
ficoml
das
lods
inc
mov
popa
xchg
hlt
fnstenv
loopne
cmp
mov
roll
data16
mov
loopne
sub
aaa
pop
push
pop
jbe
fldcw
xchg
xchg
dec
call
xor
mov
cmp
jnp
aaa
cmpsl
out
fiadds
mov
xor
push
inc
out
xchg
in
int3
xor
adc
cld
imul
and
fwait
jmp
andb
outsl
lret
jbe
jb
mov
cmp
mov
call
out
cli
shll
bound
add
push
pop
fs
stc
shll
and
adc
das
or
cmp
mov
enter
dec
mov
dec
mov
outsl
cmpsb
mov
in
sub
pop
jno
jno
xor
lds
jo
and
repnz
cmp
fildl
jne
lea
into
call
lcall
xchg
or
or
sbb
loop
fcoml
push
jne
sub
xor
sbb
int3
fcmovnbe
pop
mov
jecxz
push
ss
insl
outsl
fistpl
fcomps
jae
mov
ret
pop
ss
mov
js
push
xor
xor
or
stos
hlt
mov
iret
movsl
jno
or
or
dec
push
mov
inc
mov
jge
inc
int3
mov
add
sub
mov
outsl
jns
adc
xchg
jmp
pop
or
and
sbb
mov
jo
add
out
xlat
repnz
sbb
or
loop
sbbb
inc
test
cmp
pop
repz
arpl
pop
jle
imul
pop
jle
in
pusha
sub
jo
les
inc
lds
xchg
jmp
shlb
adc
gs
test
dec
fmull
hlt
jae
lods
or
jl
xchg
inc
or
xor
jmp
push
or
leave
mov
mov
inc
push
je
lret
or
mov
ret
mov
mov
fidivrl
cmp
push
push
mov
mov
fwait
ret
mov
cltd
sbb
sti
adc
adc
push
arpl
inc
xchg
sarl
lcall
pop
pop
pop
mov
popf
or
sbb
out
stos
dec
mov
jl
out
mov
pop
xor
divb
test
cmp
fisttpl
sub
sbb
or
sahf
hlt
mov
fidivrl
mov
xor
mov
cwtl
dec
jecxz
jge
sar
aam
cwtl
pop
dec
mov
out
xor
sahf
popa
insb
jp
add
sub
hlt
sub
lret
fwait
sbb
in
pop
push
cmpl
or
in
div
fwait
mov
neg
add
iret
or
ds
fnstenv
in
cli
cltd
xlat
xchg
daa
or
mov
insb
mov
mov
ret
outsl
out
repnz
pop
je
mov
jns
sub
cmc
add
lret
mov
orl
aad
loop
push
hlt
sub
jns
fcoml
imul
sahf
jge
mov
push
mov
push
and
cmp
sarb
test
cmp
movsl
push
repnz
mov
hlt
push
repz
stos
or
mov
pop
xor
sbb
orb
add
jbe
jbe
shll
pushf
cs
mov
aad
aaa
ds
sbb
jo
into
cmp
out
rcrb
dec
jecxz
xchg
pusha
xchg
jl
xor
mov
rorl
int
std
sbb
sbb
push
aam
dec
sbb
test
add
push
mov
subb
cmp
loop
xchg
xchg
stos
sbbb
rol
in
lret
xchg
push
cmp
mov
imul
sbb
add
push
fwait
sub
xchg
lds
hlt
out
xchg
cltd
testl
loop
jg
xorl
adc
ja
sub
xor
insb
xchg
ja
sub
rcr
cld
jnp,pn
popf
and
push
and
test
pop
fcoml
pop
lea
add
adc
or
mov
inc
push
lret
lret
mov
fsts
inc
xchg
or
stos
data16
in
fisttps
pop
mov
testl
pop
xchg
cwtl
icebp
std
inc
fdivrl
jmp
cmp
fcmove
mov
and
pop
mov
shrl
mov
testb
icebp
aam
stc
sub
inc
and
mov
lods
je
cmpsb
xchg
lahf
xor
imulb
loopne
xchg
out
xor
pop
cmp
mov
jmp
or
lock
into
stc
or
inc
enter
sahf
pop
mov
data16
loope
fists
mov
test
ds
push
xchg
cmpsb
push
maskmovq
divl
sub
jo
mov
inc
sbb
mov
daa
leave
push
ror
push
mov
addb
insl
and
addr16
data16
fmuls
dec
jp
xchg
push
mov
faddp
sahf
scas
adc
das
repz
shlb
xchg
sahf
icebp
adc
inc
sub
idivl
rorb
mov
mov
jb
pop
daa
mov
push
fidivs
xor
pop
pop
pop
insb
std
daa
cwtl
in
mov
ret
shrl
outsb
xchg
jno
push
je
lret
lret
jge
jnp
stos
pop
popa
rolb
stos
or
aaa
xchg
pop
arpl
mov
loopne
testl
lret
dec
ja
jecxz
or
in
push
push
xchg
fsubrp
fst
jp
mov
lcall
popa
and
add
sub
pop
in
add
dec
cwtl
in
adc
fldt
stos
dec
adc
loop
in
negb
insl
push
in
add
mov
data16
xchg
lock
xchg
in
lds
pop
and
sub
nop
ret
and
xchg
xor
jmp
subb
daa
adc
mov
push
int3
pop
add
insl
out
loope
mov
cmc
bound
cmp
and
push
push
jle
cmpsl
sbb
ret
pop
cli
sahf
rol
fidivrl
inc
les
popa
or
dec
repz
out
inc
sub
add
ret
dec
movsl
cmc
fadd
js
add
pop
adc
mov
scas
dec
lods
lds
dec
mov
mov
xor
pop
loop
inc
lret
pop
jns
add
std
mov
rclb
das
paddusb
adc
dec
sti
decl
jns
imul
push
dec
pop
rclb
sub
adc
mov
aas
push
dec
xchg
mov
jl
sub
push
shrb
push
shld
enter
dec
inc
ja
pushf
lock
scas
bnd
add
test
cmpb
sub
push
jmp
push
or
cltd
mov
mov
mov
cltd
xchg
popa
das
out
mov
addr16
fucomi
adc
add
inc
call
adc
jmp
popa
xor
dec
add
in
push
sub
cltd
dec
inc
ljmp
xchg
call
nop
push
cltd
pop
movsb
je
push
pop
xor
pop
or
test
pop
inc
fsub
movsb
stc
mov
call
xor
and
sbb
jo
sbb
cmpb
js
push
rolb
in
and
mov
mov
mov
sbb
movsl
popa
call
cmpsb
dec
jnp
xchg
adc
loop
cmp
out
dec
arpl
test
mov
cmpsl
scas
stc
test
lds
bnd
pop
cwtl
aad
jno
mov
dec
adc
pop
sub
sub
ret
cltd
push
loop
sub
dec
dec
in
aam
imul
icebp
jo
shr
pop
rclb
jo
jne
jb
jo
cmpsl
or
adc
mov
mov
test
call
inc
leave
push
fmul
test
paddusb
ret
sub
out
push
pusha
cmpsl
int
int
push
or
mov
xchg
inc
sub
pusha
lock
xor
outsl
loop
dec
mov
xchg
dec
pop
push
fistps
pop
pop
inc
adc
nop
orl
insb
push
or
mov
imul
sub
mov
bound
js
imul
push
jbe
test
imul
rcr
movl
into
pushf
xchg
pop
outsl
xchg
test
repnz
in
and
insb
rol
or
ds
gs
push
ret
stc
fdivrl
call
aaa
mov
or
jnp
xor
mov
pusha
lds
test
fs
outsb
fsub
ret
mov
jle
stc
out
test
jge
xor
add
cmp
or
or
xor
pushf
imul
scas
fists
cmp
sbb
into
lods
mov
out
mov
jo
fdivrs
lds
lods
add
pop
enter
repnz
sub
arpl
daa
cltd
aas
sub
xorb
insl
js
adc
mov
faddp
cmp
scas
jp
andb
mov
pop
aas
loopne
fs
push
jns
aam
roll
addr16
arpl
sub
and
mov
mov
aaa
jmp
jns
cs
outsl
cmpsl
test
std
dec
push
mov
pop
loopne
adc
repz
push
rcll
int
test
add
enter
adc
ret
pop
out
pop
stc
lret
std
mov
and
push
hlt
aaa
loopne
int3
pop
mov
cmc
out
adc
test
pop
out
add
jmp
or
sbb
lods
call
fadds
pop
or
jae
sti
bound
ds
xor
lahf
mov
sbb
xchg
outsb
js
incl
je
push
jg
pusha
mov
adc
test
mov
loop
and
adc
addr16
pushl
inc
adc
mov
push
jmp
daa
mov
adc
jbe
bound
movsl
out
out
pusha
pop
cmc
jns
inc
sbb
jle
cmp
xor
jmp
pop
pop
popa
sub
rorb
mov
dec
pusha
call
mov
mov
inc
mov
mov
jns
insb
enter
inc
xchg
movsb
dec
mov
test
push
addr16
loope
fmull
xlat
ficompl
cmp
test
in
sub
jl
fidivl
notl
adc
jb
and
in
stc
mov
lahf
cmpsl
test
rcl
call
add
lea
mov
jmp
lahf
shll
xor
pop
xchg
aas
and
loopne
cmpsl
adc
sbb
push
pop
in
jns
mov
xor
push
mov
repz
jne
lcall
gs
cwtl
push
clc
xchg
gs
push
outsb
xchg
push
cmpsl
jle
xchg
pop
and
sbb
das
cmp
seto
mov
dec
mov
jb
lcall
sbb
cli
sbb
xchg
cwtl
cwtl
cmp
or
or
jp
and
lahf
sub
cmpsb
lret
mov
icebp
pop
cli
loope
shll
or
out
adc
sub
and
faddl
dec
mov
out
jp
jmp
fnsave
aas
push
push
loop
in
or
pop
mov
sbb
add
xchg
call
int
inc
mov
lods
cld
or
popa
xor
cltd
push
adc
loopne
lret
aad
adc
mov
and
mov
cmp
jb
rcr
enter
cmp
xchg
and
lahf
rolb
iret
or
push
mov
xor
jl
jns
fisubrs
imul
mov
loope
dec
jne
push
xchg
xchg
pop
or
push
bound
pop
das
in
inc
xlat
insb
or
rol
inc
xlat
jmp
dec
mov
xor
scas
add
jns
xor
xchg
ret
adc
ds
dec
pop
and
mov
decb
pop
pop
out
pop
mov
push
ja
pop
aam
ss
int
ljmp
cmpl
xor
adc
stos
dec
lahf
mov
fcoms
xor
aam
xabort
repz
mov
in
pop
pop
stc
pop
xor
sbb
stos
cli
sub
mov
icebp
test
test
mov
stc
popf
bound
test
and
mov
push
dec
sarb
xchg
dec
inc
xchg
aaa
cli
jns
scas
notb
pop
dec
loop
int
dec
inc
adc
dec
test
adc
sub
jecxz
jl
pushf
push
jne
pmaxsw
mov
stos
xor
push
xor
cmp
sub
jnp
pop
jecxz
xorl
inc
test
shrl
cmc
outsl
mov
inc
lea
pusha
inc
adc
mov
mov
subb
fistps
cmp
cltd
xchg
test
adc
nop
shll
push
adc
cmpsl
mov
jmp
dec
pop
jl
rol
sub
pop
adc
jp
dec
dec
push
pop
jl
xchg
das
mov
shl
inc
xor
lods
xchg
cmpsb
imul
sbb
mov
adc
stos
ret
push
cmp
mov
nop
cli
push
nop
xchg
ljmp
pop
popa
mov
sahf
imul
mov
push
add
rorb
mov
leave
jl
call
sub
mov
jp
pop
jno
mov
mov
imul
sub
ret
pushl
mov
xor
iret
inc
lods
and
add
ds
mov
mov
lea
mov
popa
loop
cmp
xor
sub
in
testb
push
inc
push
aam
aad
mov
scas
pop
adc
jno
or
xlat
stos
adc
sahf
jbe
ficoms
push
andb
push
mov
lret
mov
cltd
shl
aad
loopne
stos
in
popf
sti
aad
fcoms
outsl
repz
shll
jge
pop
and
cs
inc
jae
xlat
xor
mov
insb
pop
sbb
loop
cli
add
shll
jae
cmp
xor
mov
lcall
test
adc
clc
setno
cwtl
mov
ja
xchg
adc
pop
fisubl
xchg
outsb
mov
xchg
inc
addr16
pop
inc
sahf
loop
or
pop
mov
dec
repnz
cwtl
add
nop
in
mov
shll
mov
lret
push
adc
mull
jae,pt
ret
jle
lds
xor
rol
or
gs
push
sub
inc
push
or
pushf
cmc
cmpb
enter
inc
je
imul
dec
adc
mov
inc
shlb
adc
mov
int3
pop
sbb
push
mov
out
jle
shl
push
xchg
jmp
inc
test
adc
pop
mov
lock
cli
jl
push
leave
ds
jmp
xchg
mull
pop
stos
jae
xchg
pop
outsl
pop
das
lret
pop
pop
popa
loopne
mov
mov
cwtl
mov
pop
and
xor
inc
fdivr
nop
or
mov
and
inc
jne
jecxz
lods
push
bound
bound
mov
add
enter
jmp
mov
nop
fwait
imul
loopne
imul
lret
sbb
adc
ret
jo
add
out
cwtl
inc
sub
cmc
add
sarb
dec
mov
shlb
test
shl
mov
dec
jae
ds
hlt
dec
sbb
or
addr16
cs
cmp
dec
rolb
jno
xchg
mov
sub
add
xor
imul
inc
sti
mov
push
rol
cmpsb
rcr
jg
mov
mov
xchg
inc
jmp
and
mov
popf
sbb
xchg
cmp
daa
int3
xor
imul
or
out
gs
testb
ljmp
sbb
cmp
adc
and
lea
repnz
or
adc
mov
mov
lea
test
pop
icebp
nop
repnz
pop
mov
sbb
xor
pop
leave
add
mov
lcall
sbb
call
out
jmp
add
shr
mov
movl
xchg
loope
mov
dec
rol
or
xchg
and
loope
dec
lret
movsl
dec
and
cwtl
jmpw
add
popf
push
and
ret
xlat
push
add
inc
pop
sbb
mov
add
inc
dec
int
push
lock
jnp
movsl
in
fmul
xor
and
imul
xchg
lods
lcall
pop
lret
push
pop
jge
mov
jmp
icebp
sahf
inc
outsl
sub
aas
das
mov
add
mov
mov
pop
shrb
sub
test
aam
std
insl
pop
inc
xor
std
mov
xor
sbb
xchg
add
or
into
or
push
ret
fdivl
out
push
flds
add
out
mov
in
insb
pop
leave
fwait
out
or
std
dec
add
lret
jb
loop
xlat
dec
mov
xchg
mov
addr16
repnz
popf
cmpsl
mov
shrl
lahf
lret
xor
mov
lar
int
mov
jno
movsb
into
pop
dec
cmpsl
and
xor
int
xlat
fwait
push
jae
pop
ja
mov
out
sahf
jne
sub
cmp
scas
add
fstpl
pop
pushf
mov
out
mov
test
les
mov
aas
sub
xchg
sbb
in
mov
or
jno
and
jno
pand
pop
inc
pop
xor
mov
cmp
in
cmpsb
into
cs
mov
push
dec
cmp
imul
push
jne
jle
addr16
scas
cld
iret
xor
int3
sub
imul
fdivs
sbb
jae
adc
add
outsl
mov
data16
sub
pop
mov
clc
mov
or
and
bound
pop
jmp
es
inc
jo
fmull
sub
mov
imul
popa
mov
and
cmp
imul
jle
jno
adc
lcall
xor
mov
and
dec
sarl
fst
nop
orb
outsb
inc
mov
movsb
shll
arpl
and
and
out
add
xor
pop
cld
ja,pn
mov
sub
loope
and
cltd
mov
or
in
mov
sbb
pop
js
inc
into
inc
dec
popa
jnp
push
mov
add
sbb
fidivrs
int3
outsl
movsl
sub
cmp
sbb
sub
dec
pop
adc
insl
outsb
sub
divb
lock
inc
push
jmp
mov
fwait
mov
pop
jne
mov
xor
dec
imul
sub
inc
xchg
ud0
fstl
xchg
jmp
dec
sarl
gs
xchg
ja
inc
pop
rclb
xor
mov
mov
mov
push
addr16
jl
cmpsb
movsl
cmp
mov
scas
xor
xor
lods
sarb
push
cwtl
iret
jbe
xor
call
std
dec
cs
xor
addb
mov
test
mov
rorb
pop
fistpll
mov
insb
inc
popa
mov
shlb
mov
mov
jle
call
mov
push
sti
fst
add
mov
xchg
push
and
lds
jae
dec
add
cmp
testl
mov
lock
in
sbb
fwait
cli
rcrl
or
imul
pop
xchg
dec
lcall
popf
ficoml
xor
inc
lods
adc
sub
ja
sbb
sbb
test
mov
or
sub
pop
fst
jnp
jge
ljmp
mov
xlat
xchg
or
repz
push
rcll
mov
cs
sbb
shl
ret
cmpsb
jb
mov
jb
adc
aaa
jb
movb
gs
sub
in
adc
push
cmp
pusha
xchg
or
test
jp
cmpsb
jge
sarl
testl
hlt
add
cltd
inc
cmp
jg
std
mov
sarl
add
out
add
out
cmp
into
sar
jo
loope
imul
cmp
lods
icebp
pop
push
mov
addr16
dec
mov
jo
ja
and
inc
xchg
jb
enter
jg
mov
loope
shll
dec
jp
or
push
sti
ds
shll
inc
addb
push
jae
mov
dec
sarl
sahf
mov
xor
xor
shrb
xchg
divl
jecxz
sarb
dec
push
inc
sub
cli
fld
ss
shlb
mov
adc
aad
inc
decb
outsb
mov
sbb
lcall
push
sbb
aam
dec
xchg
cs
adc
cmpb
xchg
scas
xor
bound
mov
hlt
jecxz
dec
mov
and
in
dec
sub
add
jmp
add
jno
cmp
dec
div
notb
sbb
sub
rorb
inc
sbb
test
int3
out
imul
loope
inc
mov
popa
inc
decl
mov
jg
lea
enter
out
test
sub
sar
push
push
mov
jae
jmp
xor
int3
cmpsb
mov
test
addl
arpl
push
in
mov
dec
adc
mov
xchg
stc
lea
inc
and
out
lret
pusha
mov
movaps
mov
push
out
popa
in
mov
rcl
xlat
sbb
rolb
xor
fbstp
das
pop
add
cld
loopne
lcall
dec
or
ljmp
sbb
add
mov
jae
paddq
pushf
lock
mov
lret
add
adc
inc
add
ja
sub
scas
xlat
and
mov
int3
sti
jl
push
xor
pop
push
cmp
cmp
sbb
int
dec
inc
mov
xor
pop
imul
or
filds
cmpsl
daa
je
xchg
mov
cmp
sbb
push
loop
in
adc
leave
test
enter
xchg
inc
lahf
mov
je
lcall
aam
cmp
fdivr
xchg
fisttps
jo
inc
mov
test
adc
xor
dec
push
fbstp
jge
int
bound
mov
mov
lds
sbb
cmp
hlt
push
jb
sahf
pop
push
mov
gs
insl
aaa
sub
add
sbb
fwait
test
lcall
insl
fcomps
ror
aas
or
jge
push
inc
mov
mov
popa
lret
jp
dec
mov
cmpsb
stos
hlt
inc
aam
cmp
stc
xor
sbb
std
in
dec
pop
fucomp
pop
sti
in
faddl
fsubrs
xor
xor
push
dec
sub
cs
jo
pop
fisttpll
out
add
das
adc
js
push
or
or
mov
push
mov
stc
dec
xor
les
pushf
lret
push
in
pop
xchg
cmp
add
push
or
out
xchg
mov
aaa
mov
push
mov
pop
pop
pop
xor
test
js
add
cmc
push
insb
jno
dec
lahf
or
outsb
add
mov
imul
outsb
leave
inc
mov
pop
popl
cmp
test
lods
mov
out
in
adc
mov
xchg
test
rorl
nop
cmp
dec
add
jg
fbld
mov
scas
mov
test
cltd
je
xchg
test
cmc
sbb
out
jecxz
mov
or
cli
and
or
pop
sar
je
and
fsubrs
jns
pop
mov
xchg
repz
shl
add
iret
scas
sete
inc
dec
sub
mov
dec
add
sahf
stos
lret
pop
sbb
stc
inc
out
into
dec
xlat
adc
jmp
lods
push
mov
aad
xchg
xor
in
movsb
jle
pop
sbb
or
jp
movb
cmp
mov
leave
push
dec
mov
or
dec
dec
lahf
ret
push
call
cmp
adc
mov
daa
fdiv
test
xchg
xchg
xorl
mov
fwait
xchg
pusha
mov
in
and
xchg
mov
les
imul
loope
jmp
imul
cmp
push
add
and
sbb
enter
xor
xchg
sbb
xor
stos
pop
out
add
or
cmp
in
push
outsb
lock
dec
push
aad
jno
mov
cmp
dec
leave
mov
int
in
mov
mov
add
out
lock
lahf
pop
push
ss
sbb
mov
outsb
xchg
sbb
shrl
and
mov
imulb
fistps
outsb
fists
add
call
and
das
adc
xchg
cs
filds
adc
test
ja
ret
and
std
adcb
push
lea
lahf
ljmp
push
scas
jl
lret
leave
mov
lret
dec
cmp
lods
pop
sbb
inc
add
fadd
jge
push
xchg
lods
insl
sub
loop
lock
mov
arpl
cmp
pop
aaa
jmp
dec
jnp
fisttps
hlt
icebp
ret
rcrl
out
mov
shrb
pop
shl
adcb
test
xor
pop
test
push
lds
ds
daa
sub
jp
dec
fisttpl
outsl
xlat
clc
mov
inc
xor
xor
xchg
sbb
or
gs
mov
inc
and
das
inc
sbb
xchg
adcb
jae
gs
push
push
xchg
outsl
dec
jmp
inc
mov
and
xchg
jnp
shrb
aas
testl
orb
push
sbb
std
je
test
push
mov
mov
pop
sbb
jae
xor
fs
or
adc
jmp
adc
inc
pop
data16
jge
push
adc
lahf
mov
xor
push
xor
inc
sbbb
sub
out
test
xor
insl
add
ret
xor
sbb
lret
adc
jb
inc
sbb
inc
xchg
or
ror
cmp
or
test
cmp
popf
dec
out
mov
lods
outsb
adc
jmp
mov
leave
cltd
xchg
jmp
jg
addb
inc
pop
cmp
sbb
mov
insb
pushf
jno,pn
jp
jl
mov
fwait
adc
data16
insb
cmp
mov
mov
loopne
jg
dec
sahf
jns
pusha
ret
dec
sbb
xchg
jns
adc
fidivl
xlat
outsb
inc
xchg
lock
or
adcl
or
sti
fs
fsubl
rcrl
pop
or
push
sarb
pop
cmpsb
push
jb
imul
xor
adc
pop
sbb
pop
jns
ss
fldcw
test
jle
push
dec
or
sbb
fsubl
call
jmp
push
push
cltd
in
jmp
add
jno
mov
xor
ficomps
or
lock
sarb
rcrl
mov
movsb
in
int
clc
mov
pushf
lret
adc
pushl
test
or
or
out
lds
test
mov
sahf
aam
movsb
lret
stc
xchg
pusha
dec
jg
mov
adc
mov
mov
mov
mov
sub
and
dec
mov
cmpb
sbb
sbb
jns
lret
mov
xor
inc
jmp
test
cmpsb
lods
nop
push
ret
push
cmp
daa
in
mov
ror
nop
mov
out
sub
outsb
fcompl
je
ret
stos
fnstsw
sbb
fdivrs
lret
ja
stos
jae
cmc
data16
push
in
fsubl
rorl
leave
fldcw
outsl
mov
sbb
jns
jg
mov
mov
pop
inc
sub
daa
cmp
stc
enter
adc
sub
sbb
movsl
mov
xchg
and
mov
dec
push
jmp
cmc
ljmp
push
in
cmp
add
mov
addr16
xchg
mov
mov
mov
std
pop
xor
xchg
xchg
push
ljmp
std
loope
test
mov
fldl
jae
dec
inc
mov
and
sbb
mov
rolb
int3
or
jecxz
repnz
je
adc
ja
lahf
push
dec
xchg
ljmp
xchg
xlat
xlat
mov
insb
ret
stos
pop
adc
add
inc
lret
pop
int
mov
cltd
jl
fdivrl
bound
fiadds
in
mov
cli
pop
scas
adcl
icebp
dec
roll
mov
out
aam
mov
push
ljmp
daa
sti
cmp
push
dec
jnp
stc
mov
in
outsb
fwait
inc
daa
cmp
xrelease
xchg
lods
call
xchg
cmp
push
incl
popf
lds
lods
add
mov
mov
aaa
jg
xorb
loop
ljmp
movl
mov
dec
xor
and
jnp
movsb
enter
sub
icebp
stc
jne,pt
lods
pushf
cmp
sarb
jle
cmp
push
jae
rclb
call
dec
or
mov
push
or
into
mov
add
cmpsl
sub
aam
add
ljmp
mov
sbb
test
dec
cmp
jns
into
cmp
sbb
jbe
cmpsl
jnp
scas
sbb
jge
dec
mov
dec
cmp
cmp
push
or
cmp
mov
inc
add
push
icebp
push
int
or
outsl
repnz
cmp
xchg
jae
add
xchg
aas
push
xor
enter
sar
push
or
cmpsl
push
enter
fcoml
pusha
adc
and
ljmp
iret
cmp
lahf
inc
arpl
xor
js
nop
cmc
lret
aam
popf
out
in
push
rorl
mov
xchg
enter
and
or
lds
repnz
out
xor
inc
jne
jae
fincstp
call
adcb
inc
add
je
jne
adcl
popf
add
lcall
mov
imul
fsubl
fwait
xchg
push
sbb
push
mov
inc
inc
adc
pop
xor
popa
pop
xor
jb
scas
pop
and
nop
scas
out
cmp
xchg
andl
in
pop
cltd
xor
sub
rorb
ja
mov
pop
inc
sahf
in
repz
dec
in
std
jne
mov
stos
cmpsb
jb
jno
cmp
jo,pt
pop
jo
inc
cwtl
cltd
or
dec
xor
push
mov
dec
shrb
out
inc
shr
dec
sub
sub
imul
enter
xor
pop
jecxz
jmp
lahf
lock
and
push
pusha
adc
imul
mov
xchg
loop
fwait
cmpsb
fdivrl
dec
test
divl
jmp
das
pop
lahf
and
xchg
xor
imul
popa
out
fcoml
in
cmpsl
jbe
bound
mov
arpl
leave
xchg
pushf
jl
sbb
insl
ret
push
cmpsl
jb
int3
jmp
in
es
rclb
dec
aas
mov
push
inc
out
xchg
push
mov
lods
es
pop
or
rol
dec
movsl
inc
sbb
add
mov
movsb
sub
xor
or
js
cmp
cmp
scas
ds
cmpb
add
lea
movsl
in
in
mov
sbb
sahf
cmp
or
lret
inc
scas
sahf
fsubrs
mov
jmp
mov
mov
into
mov
mov
push
xchg
mov
in
mov
and
pop
rcrl
nop
push
repz
push
enter
inc
push
out
dec
xlat
scas
adcl
push
xchg
lea
psubsw
movsb
or
outsb
je
in
psubusw
pop
jns
lcall
sub
aaa
outsb
fistps
pop
in
aam
mov
insl
shlb
popa
repnz
shr
mov
jnp
scas
mov
sahf
test
fmul
sub
jecxz
mov
loop
imul
push
mov
loop
dec
insl
adcb
add
fwait
in
mov
add
sbb
and
push
jae
out
add
je
aas
push
rorb
sub
inc
aaa
pop
and
mov
and
jno
and
mov
inc
add
mov
in
pop
sbb
dec
repz
pop
jae
call
mov
mov
enter
lcall
js
pop
test
xchg
cmp
clc
fxtract
call
xor
inc
add
jg
clc
mov
out
subb
push
adc
sahf
jae
cli
pop
cmc
and
je
jo
nop
jo
lods
pop
sub
mull
les
test
sbb
dec
cmpsl
dec
jns
gs
or
adc
shlb
test
leave
pop
jo
sti
das
push
dec
rorb
roll
lods
pop
call
sbb
cmpsl
push
jnp
jp
or
adc
push
jbe
pop
xchg
repz
adcl
in
pop
inc
push
adc
std
pop
dec
imul
enter
add
in
dec
cmp
xor
aam
adc
mov
or
push
popa
push
negb
jo
xchg
stc
scas
cwtl
ficompl
out
jg
mov
cmpsl
insb
push
jns
sti
or
sbb
mov
push
sub
xchg
rclb
cltd
pusha
scas
sub
sti
fdivs
mov
jmp
mov
jg
scas
sahf
lahf
imul
std
int3
xchg
xchg
sub
cmp
mov
and
lret
adc
dec
rorb
imul
add
ja
inc
jg
aas
push
faddl
pusha
or
cltd
aam
mov
xlat
lods
xchg
out
ja
gs
pop
decb
dec
ret
ljmp
inc
jl
iret
push
pusha
cld
push
in
dec
fildl
mov
call
and
js
push
mov
add
in
in
mov
jle
add
scas
mov
outsb
jp
mov
pop
ljmp
mov
sub
test
lahf
inc
stos
or
fwait
sbb
negb
push
es
das
sub
popl
pop
fmulp
inc
aad
imul
shlb
jae
jmp
loopne
scas
data16
incb
std
and
cwtl
fstpt
shll
test
stos
jnp
xor
sbb
inc
xlat
lret
adc
subl
loope
mov
jnp
mov
imul
call
bound
jp
mov
icebp
and
negb
das
mov
sub
je
cmc
mov
jle
or
fisttpl
addr16
out
mov
mov
shrl
sti
xchg
fadds
jnp
mov
in
movsl
push
jnp
pop
movsb
or
push
xchg
xor
sbb
and
xchg
jp
imul
mov
daa
loope
sar
xchg
xchg
dec
xor
or
cmp
ret
sbb
adc
push
jno
pop
testl
jnp
mov
push
jmp
dec
jg
popa
pop
rcrl
stos
aam
stc
inc
dec
in
dec
mov
cmc
scas
jmp
pushf
inc
or
sub
mov
sbb
aas
icebp
xlat
aad
testb
je
movsl
mov
pop
cmp
mov
sbb
sahf
or
daa
mov
out
pusha
fsubs
pushf
repnz
cmp
mov
and
push
push
lea
add
inc
dec
jmp
add
std
scas
or
and
jle
shlb
mov
popf
loope
shll
fiadds
mov
dec
mov
bound
mov
lds
divl
call
or
sbbl
xchg
jge
lds
into
cwtl
jo
push
rcrl
ds
cmp
xchg
rcr
test
mov
push
xchg
cmp
dec
pop
inc
mov
jmp
lcall
daa
push
xchg
lds
dec
mov
cmpsl
pop
aad
int3
adc
push
ret
add
xchg
or
mov
xor
xchg
enter
mov
sbb
xchg
dec
xor
icebp
inc
shr
mov
xor
mov
pop
jmp
mov
js
les
outsl
add
stos
dec
js
scas
das
mov
ds
movsl
jg
sub
das
out
cmp
sbb
mov
clc
jo
pop
jp
mov
gs
out
out
jne
repnz
outsb
jp
call
xrelease
insb
and
shrl
ja
je
xlat
sub
int3
insl
ss
addb
andl
cltd
cli
sub
rclb
insb
jb
mov
push
push
mov
dec
inc
xchg
pop
ja
mov
pop
es
jnp
addr16
push
jns
roll
push
mov
jo
pop
jl
inc
jl
fisttpl
jo
dec
jne
dec
test
pusha
or
cs
cmp
out
dec
rcl
add
and
sbb
and
add
loopne
mov
out
xchg
pop
aam
fldt
sti
imul
sbb
lret
mov
filds
dec
mov
pop
mov
rorl
and
fldenv
or
pop
pop
jmp
mov
jmp
insl
inc
rclb
cmpsl
nop
dec
aam
xor
leave
xor
je
xchg
adc
dec
in
sarb
mov
movsb
jne
popl
jb
lds
xlat
xor
cmpsb
imul
and
mov
sbb
cmpsl
cmp
cmpl
test
aas
adcl
lea
pusha
fmull
or
xchg
cmp
mov
dec
cmpl
fisttpll
jecxz
aad
test
test
loopne
jmp
xor
insb
lcall
adc
aad
fnstsw
lea
push
lahf
pop
stos
push
sbb
inc
addr16
pop
imul
mov
lock
or
mov
addr16
cmpsl
xchg
inc
ljmp
popf
ja
testl
sbb
scas
inc
push
lods
jnp
cmc
add
inc
je
sbbb
push
mov
movsl
xchg
in
and
pop
xorl
notl
pop
outsb
arpl
rcll
sub
cmp
pop
push
in
stc
inc
jmp
mov
mov
adc
sbb
xor
lret
call
xor
mov
and
in
jno
ljmp
or
mov
push
insb
sub
jbe
adc
or
jae
jg
mov
cltd
adcb
ljmp
pop
adc
scas
xor
xor
nop
loope
pop
mov
popa
dec
in
sbb
push
stc
jbe
lahf
clts
mov
dec
popf
daa
xchg
mov
mov
hlt
hlt
loope
mov
arpl
push
cmpsb
xchg
imulb
stos
test
cmp
push
aaa
out
orb
repnz
xor
mov
aas
sarl
jne
jmp
nop
fsubrs
cmpsb
shlb
xor
mov
sbb
adc
jle
or
les
adc
ror
dec
es
sbbl
sbb
mov
aas
call
jns
pusha
pop
and
mov
aaa
push
test
push
sbbl
xchg
pushf
fidivl
mov
scas
push
decl
shll
dec
insl
fisubs
xchg
sti
lret
push
push
adc
lods
sarb
rep
push
cmpsl
fwait
rolb
sbb
out
fwait
sub
xor
cmp
xchg
lret
ss
pop
rcll
lret
dec
xor
xchg
stos
pusha
sarl
das
mov
mov
cli
push
xchg
jle
push
lods
pop
xor
hlt
mov
jl
mov
idivb
fadd
xor
pop
jle
jg
dec
push
pop
repnz
aas
sbb
fwait
pop
jns
push
pop
push
xchg
lods
and
sbb
and
ss
or
shrl
leave
push
in
mov
rclb
std
mov
pop
stos
xor
pop
push
sub
ljmp
rorb
push
sub
jns
outsl
gs
and
insb
stc
loopne
inc
cmc
into
pop
ror
mov
adc
out
xchg
xor
xor
gs
mov
int3
shrb
and
mov
hlt
xor
lods
ja
out
leave
push
arpl
cwtl
test
fstpl
mov
into
sub
inc
dec
stos
push
push
jmp
jp
cmp
jl
ffree
test
push
xor
jae
pushf
or
iret
ret
add
sub
cmpsb
push
mov
inc
inc
dec
mov
adc
lcall
push
ljmp
xor
mov
js
sbb
push
movb
pushf
sub
add
faddl
push
clc
fs
pop
cmpsb
cmpb
push
xchg
in
xor
xlat
xchg
add
jo
xchg
push
push
scas
cli
and
adc
inc
sarb
gs
push
mov
xor
mov
aam
push
repnz
std
fs
mov
clc
inc
xor
push
or
dec
enter
push
pop
fsubl
adc
scas
mov
arpl
aas
jno
sbb
xchg
sbb
sub
jge
cmp
jno
xchg
jns
insb
inc
leave
cs
mov
mov
push
insl
popf
adc
jge
dec
jb
out
scas
inc
mov
loopne
mov
push
push
push
inc
xchg
mov
mov
addl
sbb
rclb
inc
pusha
mov
hlt
call
jnp
pushf
sub
jp
stc
rorb
sti
fwait
das
cmpsb
and
ret
pop
insb
mov
mov
xchg
push
and
int
and
inc
jge
stc
out
dec
sub
pop
rcrl
jp
adc
pop
test
data16
mov
dec
jmp
cmp
mov
mov
lea
jmp
adc
pop
movsl
dec
and
test
out
js
mov
icebp
mov
decb
rep
dec
movl
push
inc
mov
ss
sub
pop
cli
pop
out
aad
push
popa
scas
mov
mov
pop
inc
fimull
in
jae
cmp
fwait
pop
aas
mov
mov
hlt
mov
out
push
je
pop
iret
cmp
push
sti
inc
xlat
insl
ja
xchg
pop
hlt
or
pusha
sahf
out
and
insl
repnz
and
lret
ficoms
fwait
add
adc
sub
inc
mov
mov
in
adc
mov
inc
jge
or
push
inc
lahf
fsubrp
and
lds
mov
clc
xchg
call
sti
push
xor
jns
cmp
add
clc
repnz
ret
js
and
pop
inc
adc
dec
jge
or
push
subb
ficomps
mov
outsb
stos
jmp
popa
shrb
cmpsb
jo
sbb
js
aad
das
and
test
dec
hlt
cmpl
or
loope
add
xchg
jg
call
lcall
outsb
leave
inc
mov
or
jmp
test
push
lods
jb
leave
xor
pop
scas
shufps
inc
push
jne
cmp
inc
mov
in
xchg
sbb
inc
cmp
cwtl
int
push
fcmovnb
lods
sub
dec
loope
push
push
ja
jg
data16
clc
daa
test
add
int3
stos
push
xchg
push
mov
mov
xchg
inc
mov
repz
mov
in
lret
xchg
ljmp
loope
pop
subb
andb
fwait
clc
bound
inc
xchg
pop
aad
lret
jne
mov
xor
and
je
cli
push
fcoms
push
xchg
inc
dec
movlps
movb
jg
adc
sbb
enter
add
cmp
out
testl
pop
mov
imul
lods
iret
imul
scas
pushf
cltd
or
pop
inc
mov
cwtl
mov
add
imul
hlt
shl
sbb
add
sbb
jle
or
cmpsl
testl
negl
sub
in
out
pop
pop
add
cli
lods
in
dec
pushf
push
iret
cmpsl
lret
lods
cld
or
jg
sub
loop
cli
cmp
jbe
pushf
xchg
xchg
pop
add
stos
and
test
pop
test
and
xchg
in
pop
ret
sub
pop
in
or
inc
add
nop
pop
aam
mov
cli
jno
mov
cmp
repz
xchg
addl
cmc
inc
loop
movsl
add
repz
insb
pop
out
dec
cmp
insb
das
shll
jo
and
and
out
pop
push
outsl
inc
xchg
mov
pop
and
out
sahf
enter
xchg
int3
stc
fisubs
stos
mov
push
scas
fucompp
inc
sti
aaa
movl
mov
hlt
push
js
rorb
xor
inc
or
or
fnstenv
inc
dec
les
inc
fsubl
or
clc
adc
mov
add
xor
dec
inc
std
or
cmp
inc
push
sbb
push
mul
out
repz
fldz
xor
mov
cld
cmpsl
pusha
mov
lcall
sti
ret
gs
sbb
mov
adc
xor
push
test
aaa
insb
sti
aad
stos
lods
std
jae
lds
xchg
in
jecxz
int3
aad
cmp
pop
into
orl
fs
lret
xchg
mov
xchg
pop
ret
popf
mov
stc
jle
scas
push
push
repnz
cld
mov
add
inc
insl
imul
xchg
leave
repnz
push
mov
imull
adc
jns
sub
and
imul
sahf
in
xor
insb
ficompl
mov
imul
cmp
push
dec
xor
jmp
leave
inc
mov
push
mov
jno
test
xor
test
lret
dec
sbb
or
add
mov
xchg
stc
je
push
mov
mov
inc
xor
xor
arpl
into
gs
sub
push
movsl
mov
inc
jne
or
dec
push
daa
xor
fwait
jns
sub
outsb
cmp
out
lods
jecxz
mov
push
mov
sub
jecxz
bound
mov
stos
xor
addl
sbb
shll
imul
call
subl
add
inc
fcoml
jns
popl
and
mov
movsb
stos
mov
faddl
fldln2
shll
fisubl
je
mov
flds
int3
mov
sbb
xchg
repz
push
inc
int3
mov
sub
out
sbb
sbb
ficompl
sbb
add
add
cmp
das
mov
fcompl
jmp
xor
add
hlt
les
pop
popf
bound
fcompl
add
std
test
cmp
insb
clc
test
les
shlb
imul
dec
xor
out
mov
lcall
jg
arpl
xchg
into
iret
rorl
fisubs
addr16
out
pop
in
cmp
mov
cwtl
andl
push
repnz
cmc
movsl
dec
into
cmc
lcall
js
jmp
adc
dec
xor
cmc
push
mov
mov
mov
inc
sub
jae
mov
nop
push
push
pusha
pop
and
leave
inc
pop
xchg
dec
sbb
mov
cltd
outsb
call
sbb
or
adcl
pop
mov
jge
out
mov
dec
jne
rorl
dec
sti
jl
cmpsb
xor
repz
subl
pushf
or
dec
out
jmp
iret
icebp
popf
jg
jmp
idiv
je
or
pop
sarl
je
add
jbe
test
push
push
jecxz
fnsave
lock
and
dec
test
fcomps
adc
cmp
test
jae
ds
out
nop
test
das
lds
or
jns
outsl
sub
dec
fwait
or
subl
or
xor
or
adc
dec
push
out
or
loope
popa
in
daa
out
aam
xor
push
jne,pn
iret
inc
pop
xchg
inc
mov
inc
and
or
jb
inc
nop
jbe
stos
out
mov
add
rolb
and
pop
iret
mov
inc
inc
jmp
sarb
xor
pop
mov
or
arpl
mov
fldcw
push
and
xlat
mov
push
mov
jmp
mov
sar
pop
cmpsb
jbe
push
jle
xor
inc
movsb
call
ss
aaa
sbbl
loop
xchg
mov
popf
push
push
lret
sub
mov
mov
aad
pop
rol
xchg
pushf
mov
lock
inc
inc
sbb
out
out
int3
xchg
imul
push
xchg
jo
test
fcompl
push
hlt
inc
fildl
adc
nop
aas
lods
add
pop
and
jle
lds
or
push
sbb
sub
or
adc
pushf
xchg
mov
pop
lahf
sbb
add
xlat
cmp
jmp
pop
int
sub
ljmp
sti
pop
das
es
out
pushf
mov
shlb
pop
mov
mov
mov
sbb
icebp
fdivs
cmpsl
rcr
push
fisttps
sub
sti
mov
mov
xchg
jo
pop
push
outsb
popf
fldl
div
notb
xchg
add
nop
ja
push
int3
lock
mov
mov
sub
fmull
mov
jae
push
subl
jae
push
pop
loope
movsb
pushf
push
clc
push
ret
sahf
pop
xchg
mov
jae
aaa
sub
clc
sub
sbb
pop
cmp
cmp
out
adc
mov
or
imul
or
mov
xchg
and
xchg
in
test
mov
seta
pop
movsb
mov
ret
pusha
push
std
fcmove
mov
jns
add
add
and
xlat
push
inc
int3
dec
pop
mov
pop
fistps
aas
inc
cwtl
stos
int
sahf
xor
mov
lock
pop
xor
cmc
adc
pop
js
mov
popf
or
cmp
cld
imul
out
fwait
cmc
loope
sub
cmpsl
fs
cli
cmpsb
and
hlt
mov
pop
dec
sahf
sti
repz
mov
mov
xor
push
adc
add
in
divb
dec
adc
or
push
lahf
push
jno
nop
aad
sbb
in
out
sti
imul
add
out
inc
add
out
and
fsubl
je
sub
push
xor
pop
stos
iret
repz
xchg
jp
mov
stos
stos
int
sbb
jg
xchg
and
lahf
push
inc
sbb
cli
sbb
xor
mov
dec
stos
rcrl
je
mov
movsl
dec
in
mov
sbb
xor
xchg
pop
idivb
fistps
mov
pop
mov
xchg
fimuls
sub
pop
test
xchg
inc
jne
jg
mov
sub
sub
imul
loopne
xor
pop
xchg
inc
push
mov
cmp
or
adc
leave
jmp
std
fildll
dec
sub
adc
mov
inc
adc
aad
jns
sub
cli
mov
inc
cltd
sub
or
iret
imul
out
hlt
sahf
rcrb
jno
shlb
xchg
pushf
imul
sbb
lock
mov
dec
cmp
lret
dec
xchg
pop
push
int3
cmp
outsb
fs
dec
lret
repnz
dec
notb
cmp
jmp
jl
jmp
add
loop
jmp
inc
es
sbb
and
dec
inc
aad
in
and
lods
lods
xchg
test
enter
jl
shll
mov
mov
cmpl
mov
inc
inc
xchg
sbb
cmpsb
std
movsb
sub
or
jbe
dec
sbb
inc
push
xchg
sbb
in
mov
inc
push
push
pushf
arpl
sbb
mov
dec
push
and
dec
inc
in
lcall
adc
jl
mov
mov
stc
cmp
mov
shll
incl
int3
xor
add
lods
in
jbe
outsb
fsubs
cltd
sar
imulb
fstl
out
sahf
pop
lds
gs
clc
mov
rcrb
test
xor
in
sub
mov
lret
jno
dec
in
push
push
add
mov
fcom
mov
push
ret
ret
add
into
lret
jecxz
fsubr
inc
scas
pushf
sbb
ficomps
pop
jb
cwtl
pop
test
adc
mov
test
inc
sti
ret
or
dec
jbe
xchg
ja
push
inc
lds
cmc
adc
mov
or
popf
push
lods
sub
or
leave
xor
push
pop
xchg
sbb
pop
ret
push
mov
inc
cmp
or
jmp
cwtl
dec
stos
push
xchg
test
iret
imul
insl
pop
in
ljmp
fs
add
sub
mov
and
xchg
mov
scas
cwtl
jns
and
aas
int3
out
in
int
sub
and
dec
pusha
dec
add
std
sub
sbb
rolb
inc
cs
and
enter
repnz
jmp
jle
jbe
push
sbb
mov
in
mov
sub
sub
test
and
jmp
out
je
sub
addb
scas
or
xchg
cmp
ret
xchg
leave
lea
mov
in
je
sti
mov
xchg
mov
sub
xchg
xchg
jle
mov
mov
insl
jns
das
movl
popf
push
leave
xor
fisttpll
or
mov
mov
and
lea
inc
xor
dec
gs
icebp
jne
xlat
ret
pop
setns
fwait
adc
mov
pop
rcll
cmp
imul
xchg
adc
add
cmpb
inc
push
pop
push
gs
inc
mov
adc
adc
mov
adc
nop
daa
lea
std
or
push
filds
je
mov
int3
mov
fisubs
shlb
xchg
cmc
pop
addr16
add
xchg
fmull
notl
push
imull
lds
cmp
cmp
mov
outsl
mov
in
mov
push
mov
and
mov
scas
js
pop
jl
adc
jnp
mov
ljmp
cmpsl
add
movsb
adc
int3
push
cmp
jecxz
std
in
add
test
cmpsl
pusha
fldt
idivb
je
pop
ja
pop
sbb
jle
push
test
jnp
js
mov
in
loope
ss
xor
sbb
test
hlt
movsb
lds
pop
imul
and
loopne
fdivrl
cwtl
sub
addr16
mov
imul
fstpt
adc
ds
stos
mov
push
xchg
mov
and
leave
sub
mov
mov
aaa
hlt
and
jle
xchg
popf
js
xor
sbb
pop
inc
in
in
fs
pop
pusha
push
xchg
and
push
cmpb
dec
push
inc
jl
je
outsb
das
sub
call
aas
mov
roll
ss
adc
mov
or
pushf
cmp
mulb
sub
pop
jo
cmp
pushw
cmpsl
xchg
mov
pop
pop
inc
jl
outsb
mov
stos
in
aam
mov
lahf
jp
movsl
pushf
pop
and
test
mov
jno
ds
scas
inc
repz
shl
out
outsb
shll
scas
push
stos
cs
add
je
mov
popa
cmp
ret
cmp
in
sub
ffreep
icebp
loopne
shrb
popa
into
lahf
shrb
add
cmp
push
mov
and
jle
daa
push
mov
pop
xchg
cltd
cmp
in
mov
imul
std
push
mov
subb
sti
jae
test
sbb
dec
notb
sbb
hlt
cltd
xchg
cmp
add
loope
or
filds
sahf
cmp
cwtl
dec
lds
repz
xor
jne
cmp
fdiv
mov
and
fwait
mov
lahf
stos
or
cmp
adc
imul
mov
mov
les
push
cmp
sbb
fs
cmpsb
fwait
in
cmp
dec
jecxz
scas
push
nop
es
cmpsb
add
aas
and
dec
jg
mov
fdivl
push
je
add
dec
jb
xor
repz
stos
pop
lods
loop
fadd
or
outsb
addr16
adc
add
add
std
pop
stos
add
roll
mov
adc
push
andb
xchg
fnsave
outsl
outsl
mov
nop
or
lea
imul
and
insl
and
push
mov
pushfw
xchg
mov
mov
xor
int3
dec
imul
aam
or
call
orl
loop
movsl
cmp
pop
ds
dec
sti
sbb
aas
enter
add
fisttps
cld
jp
dec
dec
lods
jmp
xchg
dec
test
lret
pop
jmp
inc
roll
icebp
dec
stos
adc
jl
in
add
dec
scas
ja
push
rclb
push
inc
jl
sahf
mov
test
mov
test
mov
cmp
mov
stc
xchg
sbb
popf
mov
clc
or
into
mov
adc
mov
push
and
rolb
stc
daa
movsl
daa
nop
and
cli
das
jl
xchg
andb
repz
iret
lret
jge
jecxz
lea
add
xchg
arpl
xor
cmp
xchg
sbb
lods
cmp
adc
cmp
push
add
cmp
cs
pusha
fisttpl
leave
adc
rorb
jle
dec
dec
push
sub
cli
inc
insb
rcl
sub
inc
loope
aaa
cmc
pop
adc
cli
imul
pop
xor
lret
notl
loop
sub
stos
mov
sbb
cmp
shlb
push
pop
into
pop
subb
xchg
mov
imul
test
imul
xor
in
mov
loope
push
shrb
sub
inc
push
cltd
inc
aas
mov
cld
lcall
mov
and
es
outsl
push
jbe
mov
enter
out
adc
adc
out
leave
inc
sbb
pop
xchg
adc
mov
sbb
popa
out
sub
jae
add
xchg
pop
xchg
lret
outsb
popf
adc
xor
adc
mov
push
loope
or
pop
out
push
call
pop
sti
dec
sbb
add
mov
inc
ja
dec
movsb
xor
lea
fnstsw
dec
and
jp
inc
push
popf
xor
jae
insb
aaa
cli
ljmp
inc
inc
lcall
out
pop
jmp
rclb
adc
xchg
push
xchg
sbb
inc
packuswb
inc
popa
mov
push
jle
repnz
test
xor
or
ss
iret
adc
in
sbb
xchg
dec
mov
in
sub
es
inc
xor
popa
fistps
pop
movsb
test
dec
fistpl
lahf
lahf
lods
xor
mov
push
cld
jl
mov
out
loop
sub
cltd
imul
sub
mov
je
add
mov
adc
mov
mov
test
lahf
dec
adc
popa
pop
mov
out
sahf
cmpsl
aad
dec
inc
push
movsb
outsb
sbb
add
pusha
int3
aaa
xchg
and
mov
test
call
fnstenv
pop
movsl
test
push
push
lock
iret
sbb
inc
ss
mov
scas
fsubs
sbb
outsl
sahf
push
into
int
or
fs
inc
shlb
test
cwtl
mov
lret
test
dec
shlb
jge
xchg
or
psubb
js
fldenv
insl
ja
dec
and
xchg
enter
inc
xor
jno
mov
in
inc
jns
movsl
xchg
iret
and
jb
filds
pop
xor
call
adc
stc
xorb
push
ljmp
orb
in
daa
cwtl
lods
inc
std
push
in
xchg
push
push
popa
stc
pop
jo
inc
push
es
movsb
sbb
rcr
jp
xchg
adc
push
ss
loop
out
xor
rcl
push
jns
push
popf
mov
mov
shl
out
rorl
cmpsb
jnp
inc
rcrl
and
sbb
cmp
jp
mov
pusha
push
sarl
insl
test
push
mov
insb
ret
ss
popf
roll
and
xor
mov
sub
cld
scas
xchg
or
and
mov
sti
aas
mov
imul
jmp
push
das
test
movsb
loop
nop
ror
xchg
movsb
sub
jbe
add
adc
add
enter
das
jo
out
inc
adc
insl
call
push
out
adc
nop
cmp
in
adc
mov
aaa
dec
add
adc
fimull
mov
fcmove
outsl
and
inc
sub
inc
adc
add
in
repz
dec
lahf
fs
mov
dec
jbe
ja
pop
xor
insl
dec
cld
dec
sbb
cmp
mov
cmpb
sbb
push
jle
mov
js
or
mov
and
iret
sbb
lahf
fisubrs
inc
fs
aad
push
in
imul
mov
cmpb
dec
xor
inc
stos
and
xor
jge
popa
cld
scas
outsb
clc
jp
sti
cwtl
mov
test
push
inc
clc
cmp
dec
inc
ja
dec
mov
fsubs
stos
sub
orb
xchg
dec
mov
xchg
inc
pop
xor
iret
fimuls
movsb
jae
es
jecxz
fadds
enter
add
xor
add
hlt
test
add
adc
inc
fmuls
and
adc
mov
lods
push
call
sbb
shlb
shr
shrb
xchg
jno
jo
ret
xchg
lcall
sub
push
sub
popf
mov
test
inc
cmp
jmp
fidivrs
cmc
in
xlat
inc
jge
dec
pop
pushf
sbb
cld
lods
sub
pop
fwait
push
popa
or
notb
and
in
sub
movsb
outsl
mov
out
je
jle
sarl
xchg
push
je
ja
push
inc
pop
rolb
pop
fdivrs
mov
push
xchg
pop
adc
cmp
hlt
out
cltd
xor
out
push
and
fidivrs
xchg
cmp
inc
mov
dec
int3
aam
nop
inc
rclb
stos
mov
cmpl
aam
bnd
ja
xchg
fwait
ljmp
nop
jp
xchg
xchg
cld
mov
aam
xor
das
xchg
inc
outsl
xor
mov
je
hlt
dec
sub
and
leave
subl
cltd
cmpsb
add
add
js
xchg
push
ficoml
xchg
shll
inc
daa
adc
cmpsb
mov
sbb
xchg
or
inc
loop
pop
dec
icebp
mov
mov
pop
push
jae
popf
sub
sarl
pop
sbb
ret
lret
pop
lret
fs
repz
lret
rolb
pushl
lds
inc
dec
int3
daa
cli
and
daa
adc
or
ja
aad
xor
and
lock
inc
jg
dec
xchg
sub
cli
xchg
ljmp
loopne
popa
icebp
xor
inc
dec
xchg
daa
rol
and
adc
aas
mov
sub
jle
shrl
popa
pop
push
data16
mov
and
pop
jne
inc
mov
rcrl
int3
jo
divl
es
xor
jg
pop
test
insb
aas
testb
les
cmpl
mov
sbb
movsb
or
rorb
push
mov
popa
cltd
test
dec
movsl
jle
xchg
pop
mov
pop
push
dec
push
xchg
mov
nop
stos
fwait
lea
add
cmc
shll
outsb
clc
lahf
fdivl
mov
mov
int
xchg
ljmp
xchg
pop
ror
pop
sub
push
mov
insl
shr
mov
jo
lcall
stos
push
sbb
sub
lret
mov
test
jmp
jb
sbb
mov
mov
mov
cmpsb
pop
mov
lcall
cltd
addb
pop
inc
movsl
bound
lock
rcll
loop
imul
xlat
xor
lods
int
sub
push
call
cmpsb
test
sahf
push
or
xor
adc
sahf
dec
jae
jge
outsl
aam
or
bound
out
mov
mov
push
psubsb
fnstenv
mov
mov
bound
push
rcrb
mov
push
lock
rcll
inc
xchg
popa
pop
and
or
inc
test
jb
push
sbb
sub
and
fidivrl
xchg
data16
mov
mov
fdivr
push
xor
fisubrl
call
mov
and
mov
gs
sbb
repnz
xor
sub
ret
das
mov
rclb
xchg
std
test
int3
mov
and
je
test
mov
rcrl
push
je
je
lock
in
adc
cmpsl
fstps
mov
addr16
xor
in
jecxz
sbb
add
pop
lds
mov
aas
clc
mov
or
mov
je
push
cmp
call
add
aas
cmc
shl
or
xor
mov
xor
mov
cmpl
addr16
iret
jb
cli
rcll
icebp
mov
xchg
lods
xchg
inc
push
mov
dec
test
xchg
add
ret
pushf
and
jo
arpl
popf
jbe
je
popf
or
int
push
insb
add
or
xor
rcll
push
jnp
fwait
ss
gs
lods
inc
pop
jge
shrl
mov
fwait
jnp
lock
xchg
repz
xor
and
adc
xor
lahf
popf
sbb
aam
pop
je
stc
mov
dec
mov
or
adc
mov
popa
es
xor
mov
int
fistpl
rol
dec
in
pop
cli
shrb
cmp
jbe
mov
cli
and
mov
stc
pop
aad
xor
xor
adc
lcall
and
pop
or
push
orw
into
adcl
mov
addr16
inc
leave
mov
fcmovu
pushl
xor
or
std
sbb
xor
mov
and
ljmp
test
dec
sub
movsl
pop
lcall
sbb
jg
inc
push
mov
in
clc
std
pop
pop
xchg
das
or
push
shll
push
cmp
xor
xor
push
mov
cmpsb
mov
fstpt
or
mov
jl
imulb
cmpsl
fsubrl
rcl
aas
cli
out
in
int
mov
sub
icebp
popf
int3
mov
or
js
mov
jle
sub
sbb
ficoms
cmp
popa
sbb
xchg
mov
dec
into
stc
and
mov
dec
pushl
mov
nop
aaa
xchg
pop
xchg
dec
movsb
xor
nop
sub
insl
pop
cmp
mov
or
out
push
fnstenv
lcall
jbe
pop
push
adc
shrb
xor
les
and
dec
or
movzwl
repnz
ljmp
xchg
jnp
xchg
jmp
fmull
loop
xor
stos
or
pop
pop
cltd
xor
sahf
lds
leave
xor
bound
xchg
xchg
lock
cltd
data16
push
pusha
add
push
pop
mov
shrl
repnz
gs
xchg
stc
mov
mov
inc
xor
loop
or
fwait
xor
pop
psrlw
movsb
out
clc
stos
ret
xor
mov
pusha
leave
adc
sub
jg
pop
pop
mov
jno
fisttps
dec
test
adc
xchg
fisttpl
in
mov
push
jno
sbb
jle
mov
sub
push
orb
mov
cld
sbb
stos
or
mov
jb,pn
outsb
lea
pop
cmpsl
lcall
fsubs
mov
mov
movsl
scas
adc
lock
andb
popf
out
fcmovbe
sub
cmp
push
jmp
fmulp
jmp
dec
lods
push
in
and
ljmp
stos
cmp
daa
std
pushf
mov
and
loopne
and
lods
and
jbe
inc
or
adc
jl
repz
jecxz
or
pop
cmc
sbb
pop
adc
fildll
jne
jae
sub
arpl
sub
or
cmp
loopne
and
jns
xor
jg
aaa
mov
imulb
cwtl
out
push
sbb
cmp
adc
push
and
or
pop
pop
fdivrl
lds
leave
push
dec
or
mov
iret
js
push
jne
in
sbb
hlt
out
xchg
shrl
xor
add
jge
test
mov
mov
fwait
call
out
xchg
add
xor
stos
in
push
cmpsb
lret
notb
iret
mov
shl
jmp
sub
pop
mov
pushf
push
mov
pop
stos
jmp
roll
clc
inc
inc
xchg
dec
sti
faddl
jnp
dec
test
mov
dec
out
clc
or
push
push
mov
sub
and
dec
je
jmp
adc
stos
mov
test
mov
dec
jmp
repnz
arpl
sbb
dec
or
lret
mov
xchg
imul
sub
movl
inc
dec
enter
cmp
inc
xor
nop
xor
jge
push
xor
push
mov
dec
stc
add
xor
pop
out
and
imul
dec
push
xchg
mov
sub
jbe
rorb
ret
cmpsb
xchg
jbe
loop
xor
jecxz
inc
mov
inc
mov
daa
jbe
and
xor
xchg
stc
movsl
lcall
sbb
pop
xor
lds
or
sub
in
leave
sbbb
mov
pop
rcrb
xchg
lret
inc
ljmp
sahf
addr16
pop
sbbl
insb
lret
lods
dec
adc
sub
lds
xchg
adc
insl
or
dec
xchg
lcall
test
mov
fldcw
mov
xor
mov
dec
fsubrs
xlat
dec
dec
xchg
push
cwtl
faddp
or
inc
out
ffree
sbb
lcall
push
aad
dec
mov
jp
jbe
aad
loopne
cmp
pop
lea
je
mov
lds
pop
mov
lcall
or
xor
add
sub
repnz
xor
and
xchg
daa
jae
movsl
movsl
je
std
cmpsb
insb
sahf
mov
cli
rcrl
jle
test
hlt
out
add
js
imul
push
cs
mov
stos
and
inc
adc
ja
loop
cld
clc
xchg
clc
sbb
cmp
icebp
xor
aas
adc
jnp
lea
add
xor
inc
lock
pop
lcall
pop
leave
jecxz
bndstx
popf
inc
bound
inc
and
out
addb
sarb
push
in
add
test
inc
xchg
jnp
xor
fnstsw
insl
jnp
inc
cmpl
lods
pop
dec
stc
jnp
out
and
sbb
cmpsb
scas
nop
and
xchg
mov
dec
je
insl
pushl
sbb
add
pop
pop
add
pop
pop
das
outsb
and
mov
mov
ds
mov
xor
cmpsb
mov
xor
test
ja
in
xor
pop
xchg
mov
cmp
xchg
adc
lock
sub
cmpsb
repnz
loop
xor
in
mov
pop
jbe
mov
into
lcall
mov
jg
pushf
dec
pop
bound
jp
icebp
mov
movsb
xchg
fcom
push
pop
lds
pop
int3
pop
ret
dec
test
or
sub
jno
cmpsl
nop
xchg
sbb
sarb
adc
xchg
jb
pop
mov
in
cld
push
fadds
notl
testb
mov
xchg
push
and
ss
les
jl,pt
outsb
popa
mov
push
orl
cli
or
cmp
mov
sub
mov
mov
push
and
out
test
fwait
and
scas
test
jbe
add
shl
test
inc
aaa
jae
pop
or
insl
xchg
add
and
xor
jg
test
std
addr16
jae
mov
mov
mov
sbb
sub
cmpsl
lods
push
dec
sub
es
scas
out
clc
jae
pop
cmpsb
cli
cmpsl
lea
dec
dec
test
dec
mov
sub
jmp
cmpsb
lahf
push
fwait
dec
add
lds
jg
lock
dec
or
pop
insl
sub
call
mov
dec
push
push
bound
mov
adc
repnz
dec
adc
sahf
push
dec
addb
lcall
jle
cltd
xorb
movl
pusha
movsl
jge
pop
daa
hlt
mov
and
or
or
fcmovnu
scas
ja
jecxz
sbb
xchg
shlb
arpl
dec
push
aad
add
test
lcall
inc
xchg
xor
pop
lock
mov
add
sbb
inc
repz
dec
in
jg
or
mov
es
cmc
sahf
movsb
fistpl
ret
addb
ss
lea
xor
sbb
insl
arpl
adc
das
das
mov
aad
push
push
xchg
pop
jb
lock
ja
lods
movsb
sub
roll
mov
ss
sub
jle
push
xchg
int3
in
jge
daa
adc
add
dec
cmp
xor
shr
sbb
mov
sbb
cmpsb
jb
shrl
xchg
add
xlat
mov
sbb
rcr
ljmp
mov
lea
pop
mov
sti
call
das
xor
imul
mov
jae
cmp
pop
adc
lret
cmc
mov
orl
sub
cli
rol
shrl
in
sub
cmp
jnp
cld
scas
xchg
add
adc
sbb
subl
fs
bound
movsl
fldenv
gs
mov
stos
mov
push
jo
fcomps
insl
cmp
sub
int
pop
jne
cltd
adcl
adc
inc
ret
mov
mov
insb
inc
cmp
lret
mov
into
ja
jecxz
movl
jg
jp
int
dec
push
andl
xor
lcall
out
int3
sahf
fwait
movsl
pop
sbb
push
sbb
and
test
shlb
imul
cmp
sub
or
lret
inc
loop
cli
outsb
jnp
mov
inc
cwtl
adc
pop
jmp
jnp
jno
adc
iret
ret
mov
add
stc
imul
xchg
inc
ss
mov
jle
jle
jge,pn
dec
lds
pop
mov
lahf
xor
push
rcrl
std
xchg
pushf
jns
sarl
loop
call
in
iret
mov
sub
sub
inc
ret
scas
aas
out
repnz
mov
addl
push
xchg
daa
dec
jecxz
in
mov
inc
jnp
push
sbb
xchg
clc
and
sbb
xchg
and
xor
add
fldl
fmuls
ja
push
adc
mov
cs
add
dec
ret
sbb
xor
adc
aam
dec
insb
pop
xor
jge
add
cmp
sub
add
xchg
and
pop
adc
cmp
xchg
ret
imul
outsl
jmp
mov
sbb
xchg
out
cmp
aas
sbb
jp
inc
mov
scas
mov
int
cmp
xchg
int3
pop
cld
cltd
jg
enter
cmp
push
ror
cmpb
cs
inc
and
aad
pop
lahf
dec
call
insl
push
mov
and
and
xor
repnz
popf
leave
mov
sahf
lahf
xchg
mov
push
into
pop
lea
sub
fstpt
sbb
icebp
xchg
sub
jnp
jbe
jp
repnz
pop
add
push
push
xor
pop
or
cmp
sbb
mov
rol
mov
loope
and
push
xor
lahf
sbb
out
and
or
es
push
pop
lods
pop
imul
pop
fisubrs
mov
addr16
dec
push
fs
iret
jns
mov
mov
rol
gs
lcall
and
sub
mov
jp
jg
jp
push
dec
push
inc
test
or
push
xchg
nop
cmpsl
dec
imul
pushl
dec
scas
insb
sbb
inc
shrl
push
mov
faddl
and
mov
loop
or
inc
cmp
dec
xchg
mov
shl
mov
push
jbe
or
insl
sti
dec
cli
lods
in
in
mov
mov
inc
sub
pop
or
fcmovne
cmp
dec
js
stos
out
or
ret
pushf
and
push
leave
pop
sti
bound
dec
stos
sbb
aas
xlat
jp
sub
jmp
bound
push
das
shll
inc
mov
ja
jge
jmp
dec
push
mov
cmpsb
popf
jmp
mov
cwtl
aad
cmp
pop
test
dec
out
sub
fs
push
jo
ja
jns
out
andl
xchg
out
sub
pop
sbb
shll
sub
mov
cmc
test
fsincos
push
jns
sub
jb
test
insb
stos
call
cmp
sub
sbb
xchg
sbb
or
loopne
lea
sbb
rorl
mov
dec
rorl
stc
inc
leave
mov
jmp
sub
push
mov
cmp
cmp
fcmove
pushf
scas
hlt
push
ret
lret
sub
insl
mull
add
fsincos
js
push
jmp
int
pop
pop
or
lods
pop
jg
sbb
adc
sbb
push
movsl
hlt
int3
dec
pop
imul
xor
xchg
add
mov
ret
cmp
pop
xchg
daa
sub
pop
int
sbb
es
push
popa
push
mov
jg
add
imul
hlt
loope
aam
jge,pt
lds
push
xor
in
pop
arpl
je
imul
mov
ja
mov
or
aaa
cmpsb
inc
clc
cmp
jecxz
js
inc
adc
jle
lret
outsb
ljmp
add
ljmp
xchg
jbe
testl
shll
and
sub
imulb
adc
ret
aam
xor
add
mov
mov
dec
shlb
sub
js
pop
dec
sbbb
in
or
popa
dec
ret
popa
inc
cmp
mov
mov
inc
pop
mov
pop
test
inc
jns
or
cltd
jle
push
testb
add
push
leave
shll
add
pop
jbe
addl
mov
aad
or
push
js
je
xchg
cld
ljmp
in
cmpsl
pop
jmp
loop
imul
das
jns
int
mulb
push
xchg
jmp
lcall
sub
cmc
pop
lret
push
pusha
mov
leave
jb
rolb
mov
in
fcoms
pop
icebp
adc
add
lret
pop
addb
sbb
mov
int3
inc
icebp
test
lret
in
je
mov
push
repz
push
fcoms
jge
aam
aam
into
mov
ds
mov
mov
adc
sbb
jno
cmp
or
loopne
and
mov
icebp
jbe
scas
lret
lret
jecxz
adc
repz
mov
shrl
pop
out
lahf
lods
xor
mov
inc
sbb
testb
shrb
xchg
mov
or
out
pusha
dec
in
cmc
out
in
cmc
popa
mov
mov
and
mov
push
push
mov
mov
xor
hlt
aam
add
mov
testb
push
cs
jnp
mov
das
aam
pop
mov
call
sub
in
push
scas
sub
iret
das
lods
in
test
lcall
outsl
call
hlt
mov
out
xchg
call
jl
dec
mov
outsb
movsb
mov
out
mov
lods
stos
out
push
fisttpll
imul
add
mov
inc
and
loope
stc
mov
push
mov
and
test
xor
jnp
pop
popf
jne
pop
inc
and
jno
push
inc
loopne
adc
fwait
daa
push
test
mov
sbb
add
inc
imul
mov
add
sub
cmp
lea
dec
add
mov
adc
push
lcall
int
pop
hlt
repnz
repnz
cwtl
mov
and
in
outsb
pushf
push
and
push
fpatan
pop
lock
mov
fbld
jne
adc
into
jae
in
or
inc
daa
xor
out
callw
lret
movsl
dec
shrb
mov
xchg
or
lahf
fidivs
cmp
push
dec
adc
xorl
fldl
mov
mov
loope
pop
add
outsb
sahf
out
jns
addr16
jno
xchg
xlat
lods
aam
push
xchg
cmpsl
inc
jle
inc
mov
push
orb
cmc
daa
mov
lods
jp
std
push
or
and
std
bound
into
add
inc
sarl
lret
in
neg
in
sbb
pop
int
popa
push
decl
test
outsl
pushf
pop
xchg
pop
sbb
shlb
insl
aam
into
cmp
mov
std
lret
mov
sbb
cmpsl
test
mov
xchg
testl
test
ljmp
roll
jo
aam
movsb
sub
out
cmp
cmp
inc
sbb
xor
mov
jne
bound
or
cmpsl
movsl
dec
adc
push
mov
mov
or
shr
insl
mov
sbb
aas
repz
xlat
bound
scas
fisubrl
jg
mov
cmp
xchg
mov
les
ds
sub
cmpb
inc
xor
stc
push
fiaddl
sub
gs
dec
xor
repnz
xlat
mov
incb
bound
arpl
jecxz
lcall
add
fisubs
jne
shrl
adc
jle
cli
mov
pop
test
aas
insl
rolb
rol
mov
xor
mov
mov
push
sbb
jl
jnp
xchg
push
fsubrs
in
lret
outsb
push
cmpsl
xchg
mov
jbe
test
std
hlt
xchg
rorb
mov
add
hlt
ja
sub
cld
lret
ja
dec
xchg
sub
jbe
sbb
lds
das
das
rorl
fs
and
xchg
data16
xchg
mov
mov
jno
xchg
les
lds
mov
sub
sub
pop
repnz
stos
decb
das
push
mov
inc
ljmp
mov
mov
xchg
clc
das
push
or
xchg
sti
out
fsts
add
arpl
xchg
outsl
test
xchg
cld
aam
add
sbb
in
imul
sub
sub
push
jecxz
sbb
std
cmp
cmpb
roll
mov
inc
das
arpl
xor
pusha
xor
popa
popf
mov
ficomps
mov
or
mov
popa
das
pop
mov
pop
call
js
lret
mov
fneni(8087
or
in
push
cli
mov
fcoms
inc
out
jge
pop
pop
inc
int
jmp
sarb
mov
cli
jb
dec
ja
loop
sub
fs
aam
fisubrs
adc
or
sub
push
fwait
insl
pushf
cmp
xchg
or
pop
ss
xchg
js
lods
lcall
shrb
pusha
mov
cmp
hlt
xchg
push
test
sbbl
cmpsl
add
rcl
add
sahf
mov
pop
mov
dec
aam
clc
pusha
lods
cmp
mov
mov
mov
dec
popf
aam
adc
fwait
jp
popa
and
stc
add
outsl
mov
mov
push
mov
fisubrl
nop
push
shrl
xchg
xor
scas
push
das
je
stos
and
push
ja
cld
cmp
xor
sahf
pusha
es
jmp
cmp
rclb
out
sti
pop
je
mov
inc
jbe
inc
mov
pop
aaa
out
adc
addps
fs
scas
lock
repnz
jnp
push
push
mov
mov
inc
stos
sub
and
adc
dec
bound
loope
xor
and
pop
cwtl
xchg
ja
sbbb
mov
neg
in
out
in
or
lock
or
inc
js
xchg
ja
pop
mov
sbb
adc
dec
xor
sub
pop
xchg
pop
adc
lahf
adc
fildl
xor
repnz
pop
stos
jle
je
sbbb
int3
in
out
bound
adc
or
icebp
pushf
rorb
adc
rol
fcomp
out
repz
jnp
insl
clc
shrl
inc
xor
xchg
jecxz
std
gs
push
movsb
mull
test
test
sub
cmp
mov
je
stos
jmp
shlb
mov
loope
pusha
clc
cmc
aad
xor
push
scas
imul
adc
fcomps
jo
pop
mov
pusha
std
add
sub
test
xchg
xchg
movsb
popa
or
scas
mov
idivl
inc
push
lcall
lret
add
xchg
xchg
jns
lret
adc
inc
jns
mov
movsl
dec
mov
xchg
fwait
and
movsl
mov
or
out
les
push
mov
pop
xchg
aam
dec
mov
dec
mov
scas
ds
jmp
add
ficoms
pop
test
mov
mov
lock
pop
mov
sub
imul
pop
pop
cmp
add
popa
insb
jne
pop
add
inc
sbb
adc
jge
pushl
icebp
vmread
aaa
rcrb
mov
mov
xorb
xorl
xor
lea
outsl
ficompl
push
adc
les
adc
xchg
pop
pusha
and
adc
pop
sti
lar
icebp
dec
rolb
inc
pop
push
push
enter
movl
sub
push
push
inc
inc
test
mov
sbb
push
outsl
mov
jge
or
xor
inc
ljmp
xor
push
cmp
inc
faddp
inc
add
adc
cmc
adc
jmp
gs
mov
sbb
and
push
mov
dec
out
sub
idivb
jns
xlat
data16
or
std
or
mov
and
das
dec
jg
xor
inc
stos
pop
add
jbe
mov
cltd
stos
scas
testb
inc
adc
inc
cmp
clc
jae
adc
jmp
jl
cmp
lahf
mov
sub
icebp
sbb
out
mov
dec
lret
add
inc
jnp
mov
ret
mov
lahf
mov
mov
lcall
inc
dec
cmp
daa
jg
jae
fwait
hlt
mov
gs
inc
push
movsb
lods
and
adc
testl
mov
cmp
lcall
inc
or
cmpsb
js
cmp
out
lcall
clc
cmovbe
movsb
sub
mov
pushf
in
or
cmp
xor
add
fisttpll
les
dec
test
nop
lods
sti
pushf
xlat
ds
mov
int
or
jmp
adc
pop
aad
pop
xchg
imul
push
jno
ljmp
scas
hlt
and
adc
add
fcmovnu
dec
pop
xchg
imul
lods
dec
inc
ds
mov
add
adc
xor
push
mov
inc
es
cli
mov
lock
add
jb
mov
adc
cli
iret
fs
loop
roll
xchg
ds
lods
lods
rclb
in
pop
popa
int
stos
xchg
or
push
xchg
mov
loop
dec
leave
je
in
mov
and
jmp
pop
or
xor
fmul
loop
mov
xchg
int3
fiadds
and
mov
or
rcl
pop
cmp
pop
stos
sbbl
cli
lahf
push
mov
stc
xor
jle
fwait
xor
scas
jecxz
xor
aas
xlat
sti
hlt
lods
loope
out
adc
mov
aas
and
js
sbb
enter
mov
lods
mov
test
pop
mov
pop
mov
pop
incb
adc
mov
ljmp
xchg
push
out
jns
call
aaa
out
cmp
cltd
aas
pusha
iret
add
sarb
push
loope
mov
loop
enter
leave
clc
fidivl
or
fdivrl
idivl
in
add
or
mov
adc
iret
stos
push
mov
add
dec
fisubrs
pop
xor
jns
xchg
into
mov
scas
push
imulb
das
or
jbe
mov
xchg
or
ljmp
dec
or
pop
sbb
xchg
and
lahf
mov
cld
shr
jae
mov
movsl
clc
pop
andl
xor
les
adc
xchg
jnp
clc
popf
arpl
jge
mov
pop
sar
ds
shl
push
adc
and
nop
fwait
xchg
add
shll
outsl
or
bound
pop
imul
mov
pop
imul
cmp
shll
js
imul
mov
cmc
cmp
cmp
testl
and
xor
std
in
addb
mov
xlat
pop
ja
loope
dec
pop
xchg
inc
popa
pop
dec
mov
sub
mov
aas
fwait
adc
mov
push
stos
imul
adc
ja
push
dec
cltd
rorl
imul
xor
std
push
les
loop
and
lods
scas
imul
stos
xchg
mov
pop
pop
inc
dec
or
out
sbb
sbb
xchg
call
sub
sub
add
imul
in
jno
idivl
mov
repnz
push
add
pop
push
lock
dec
in
mov
je
xor
neg
outsl
sub
cmp
js
push
es
jp
dec
or
pop
push
jns
cmp
jg
dec
mov
sahf
xchg
fistl
shll
dec
inc
sbb
adc
daa
shr
int
cltd
loop
addr16
pop
cld
jnp
outsb
adc
in
shlb
arpl
jle
ljmp
dec
sbb
lret
faddp
inc
fidivs
fbstp
jmp
pop
imul
ja
inc
daa
data16
add
or
pop
outsl
sub
cwtl
cmp
fsubrs
out
movsl
push
inc
lods
into
mov
cmp
cmp
xor
imul
mulb
notb
or
cmp
cwtl
mov
mov
rcrl
test
xor
fstpt
int
enter
xchg
cmc
aam
es
and
xchg
mov
sbb
clc
das
and
sbb
test
adc
inc
out
xchg
push
cmp
mov
mov
mov
mov
xlat
xchg
dec
icebp
in
xchg
sbb
pop
adc
or
data16
adc
cmpsb
inc
notb
fldt
cmp
hlt
xchg
and
cltd
pop
mov
xchg
adc
and
add
cmp
aam
sub
dec
imul
add
mov
xor
sahf
rcl
sbb
adc
mov
imul
xorl
fisttps
xchg
xchg
sub
mov
test
ljmp
xlat
sbb
xchg
lods
xchg
imul
push
mov
ret
jl
push
lret
pop
mov
add
inc
movsl
push
jno
popf
std
sub
sbb
cli
daa
push
clc
outsb
cmc
lock
dec
cli
sbb
push
mov
aad
sbb
cmpl
out
mov
jp
out
insb
cmpsb
jmp
cmp
pop
lods
ret
mov
lret
sbb
sahf
outsb
fisttpl
cmc
mov
fnstenv
inc
xor
stc
mov
gs
push
adc
sub
dec
pushw
sbb
and
xchg
lods
stc
btr
call
cltd
out
das
clc
mov
jmp
outsl
ss
jbe
jle
xchg
lret
loop
push
cmpsb
cwtl
ljmpw
mov
mov
jle
mov
xchg
jge
jnp
leave
aad
xlat
fbld
pop
popa
cltd
frndint
fisttpll
push
xchg
data16
and
xchg
repnz
ljmp
adc
xor
mov
stos
popa
cmp
jne
pop
or
adcb
dec
shl
pushf
xchg
xchg
add
dec
leave
out
cs
scas
pop
xchg
mov
popa
popl
outsl
push
pop
or
lahf
pop
out
mov
and
mov
mov
sbb
pushf
xchg
xchg
xorl
sub
rolb
dec
mov
scas
push
cmpsl
incl
jno
add
fs
adc
hlt
pop
and
lds
pop
outsl
sahf
xchg
push
inc
pusha
pop
adc
mov
fidivl
dec
repnz
shlb
add
mov
mov
push
or
cmp
pushf
movsl
and
adc
lret
push
xchg
push
addl
adc
mull
popf
xchg
dec
and
popf
outsl
cmp
hlt
jp
les
lock
idiv
movl
mov
pushf
add
in
push
xor
pushf
es
cli
cmp
dec
and
xor
lcall
icebp
adc
push
or
adc
mov
incb
add
idivb
repnz
push
sbb
pop
sbb
ds
add
aad
test
int3
cmp
pop
push
jns
push
inc
fldl
call
es
test
xchg
xchg
cs
xchg
or
mov
add
dec
adc
cwtl
iret
pop
pushf
cmpl
ret
fcomip
jo
sub
cmp
das
popa
es
ret
ss
fbld
add
mov
rcrl
lret
push
push
jno
loopne
inc
mov
mulb
xchg
inc
and
cmp
test
aaa
shrl
or
xor
rorb
adc
outsb
inc
fsub
push
sar
lock
xchg
pmulhuw
lea
xchg
shl
adc
push
push
insl
js
cwtl
fwait
ljmp
popa
dec
js
push
mov
push
lds
pop
stc
in
bswap
adc
pop
mov
xorb
pushf
into
jmp
idivl
ret
pop
cmp
inc
out
stos
push
dec
mov
mov
nop
iret
insl
repz
repz
in
push
jnp
in
pop
pop
or
in
cmp
jl
fdivr
dec
imul
and
insb
mov
inc
imul
in
xchg
mov
jae
movsl
iret
jae
outsl
aam
iret
pushl
dec
mov
push
dec
sbbb
test
cld
lock
test
jae
jo
mulb
xchg
fcoml
xchg
xchg
bound
pushf
gs
push
and
pop
repnz
frstor
mov
xchg
mov
mov
out
pushf
cmp
insl
ret
inc
mov
or
mov
insb
insb
and
js
xchg
mov
mov
jmp
add
jne
mov
lret
ss
nop
fwait
lea
es
lods
psllw
js
cmc
push
push
add
jmp
sbb
pop
xchg
fmuls
rcrb
xlat
into
addb
roll
pushf
push
sub
push
hlt
dec
aad
sbb
loop
decl
pop
xchg
fnop
mov
sarb
fdivrp
shrl
cmpsb
mov
lods
mov
fdivrs
mov
push
insl
dec
push
jl
out
inc
sahf
enter
push
push
cld
adc
iret
mov
lods
js,pn
pop
jo
jecxz
or
scas
mov
mov
rclb
mov
or
mov
dec
ret
pop
stos
push
xor
xchg
mov
mov
in
fcomi
adc
xchg
mov
add
add
mov
sbb
or
xor
mov
jnp
pop
scas
inc
mov
loopne
in
lcall
lahf
inc
test
popa
mov
cmpsl
out
enter
jns
pop
jmp
or
pop
mov
jecxz
add
mov
scas
push
pop
data16
loopne
mov
ret
mov
mov
enter
sub
mov
loop
jbe
pushf
gs
aas
stos
fisttpl
fstp
hlt
movl
test
lock
mov
mov
test
mov
mov
xchg
or
ret
jne
mov
stos
jmp
pop
xchg
dec
iret
dec
add
push
and
and
xchg
test
dec
adc
adc
fldt
xor
xor
mov
out
imul
push
lds
shr
dec
mov
loop
jbe
inc
xchg
dec
pop
inc
push
and
je
pop
cmpsl
cmp
lds
cmp
and
jecxz
jmp
push
cs
stos
and
cs
mov
fiaddl
sub
movsb
cmpsl
les
cmc
icebp
sarb
adc
push
shll
jmp
mov
mov
fucompp
add
mov
fnstcw
xorl
xchg
cmp
push
dec
mov
filds
and
or
sbb
dec
fmull
mov
cmp
add
jb
mov
add
icebp
test
xchg
sbb
movsl
mov
jae
jge
mov
and
jno
cmp
push
cmp
aas
adc
das
cmp
arpl
outsb
fmulp
jp
or
aas
inc
inc
add
lcall
aam
dec
test
jne
sub
xchg
jmp
sbb
enter
lret
sbb
xor
inc
loope
push
inc
test
push
xlat
pop
adc
pop
pop
adc
gs
cmp
push
jne
mov
mov
jbe
push
dec
mov
xlat
mov
push
and
mov
fdivrl
xchg
inc
push
enter
inc
sti
mov
inc
push
jne,pt
sub
inc
fcompl
or
cwtl
xor
and
mov
out
aam
ret
jns
mov
mov
mov
mov
test
aaa
push
xor
sub
sahf
out
sub
xchg
mov
inc
lahf
iret
mov
xlat
adc
cli
jne
movsl
lods
and
stc
ja
dec
fstps
ja
rcrb
ds
inc
int
scas
and
jmp
xchg
cli
sbb
sub
sahf
movhps
jge
shll
fidivl
nop
fcoml
jae
je
xchg
rcll
daa
scas
lahf
pop
mov
sbb
aaa
jne
out
lds
xchg
ficoms
mov
iret
pop
pop
cld
jecxz
daa
repnz
adc
push
adc
lods
jo
jecxz
mov
mov
mov
popa
testl
lds
mov
push
dec
ljmp
fadd
sbb
jno
out
addr16
cmp
xchg
jae
jmp
hlt
cmp
jp
dec
push
xor
push
sub
xor
cmpsl
mov
data16
jge
arpl
jno
sub
andl
xor
enter
aaa
mov
xor
push
push
lods
cli
fiaddl
xor
pop
cs
xchg
cli
loope
add
jmp
jne
or
dec
mov
in
xor
mov
cli
jnp
outsb
jle
movsb
xchg
jno
movaps
popf
addl
add
mov
lret
rcrb
sbb
fwait
aas
hlt
xchg
pop
aam
push
add
fldl
sub
jne
ficoml
in
mov
pop
popa
fdivr
push
pusha
jge
add
repnz
xor
scas
aaa
repnz
fnsave
outsb
outsb
movsl
lret
mov
dec
jmp
add
shr
push
jp
lock
test
and
mov
mov
pop
and
shll
mov
daa
or
cvtpi2ps
mov
es
adc
cmp
pop
dec
jo
add
hlt
inc
fcom
add
mov
loope
negl
out
fwait
inc
pop
lods
test
mov
scas
scas
mov
cmpsl
cmpsb
jne
out
jge
adc
into
xchg
sub
and
js
shlb
inc
test
insb
das
mov
outsb
xor
mov
cmp
inc
test
rolb
or
outsb
jno
mov
push
pop
sbbl
loop
xor
sbb
mov
fcmovnu
movsb
out
mov
xchg
movsb
test
lds
pop
lods
cld
push
cwtl
iret
stc
fs
sbb
mov
sbb
or
jno
cmp
movsl
push
add
and
mov
jle
pop
xchg
push
inc
push
xchg
out
ljmp
dec
stos
adc
popf
push
sbb
push
cmpsl
mov
je
fstl
lret
scas
push
sub
int3
sub
mov
rclb
jns
cltd
xchg
fbstp
or
add
xor
xor
nop
fildll
mov
ljmp
mov
pop
xchg
push
cli
iret
mov
stos
inc
call
pop
ret
call
xchg
pop
es
cmpsl
clc
mov
push
pop
dec
dec
fnstsw
pop
mov
push
pop
jl
lret
sub
fisubrl
fimull
xchg
je
mov
mov
les
push
mov
pop
add
loopne
and
adc
jl
repz
sub
inc
shl
sub
fimuls
fildll
mov
pop
lods
pop
mov
sub
div
push
xlat
and
dec
jp
or
cltd
mov
jmp
mov
in
mov
ljmp
nop
sub
mov
jecxz
push
adc
mov
loopnew
inc
test
or
jg
loop
mov
test
cmp
movsb
scas
jae
cmpsb
xor
cmp
push
xchg
cmp
fnstenv
add
scas
enter
std
mov
or
insb
sbb
adc
aaa
mov
sub
in
add
enter
flds
cmp
and
adc
out
and
cmp
and
dec
nop
in
out
jb
xchg
jno
cmp
pop
mov
and
idivl
inc
sbb
mov
mov
inc
pop
int3
cmp
xchg
mov
jge
outsl
mov
and
mov
loopne
push
sbb
sbb
cltd
mov
dec
add
xlat
pop
rorb
cmpsb
mov
andl
inc
popa
cltd
dec
mov
lods
clc
clc
in
mov
sbb
mov
jne
push
mov
js
sbb
movb
sbb
push
je
cmp
sub
jecxz
aam
mov
cmc
push
mov
or
rolb
jmp
dec
add
mov
add
inc
mov
in
pop
fwait
or
sub
xchg
xor
xor
add
pop
pop
ss
mov
jb
int3
xchg
push
rcll
or
stc
hlt
mov
sub
leavew
ss
sti
sahf
inc
mov
xor
enter
inc
xor
jl
fwait
cs
xchg
lret
dec
adc
inc
orl
mov
cmp
mov
xor
ror
out
jne
add
jo
lods
xchg
clc
jns
fldt
shll
fnclex
xchg
dec
into
dec
xchg
mov
adc
and
imul
fbld
push
push
mov
or
repz
andl
fcmovnbe
adc
jbe
add
scas
mov
mov
or
mov
xchg
cli
push
xor
push
shll
lock
mov
in
loope
ljmp
dec
or
dec
add
stc
ja
inc
or
insb
ds
cmc
mov
pop
push
mov
aad
call
outsl
mov
cmp
pop
orb
push
dec
jmp
cmp
addr16
dec
loop
test
cld
scas
imul
movsb
inc
jne
outsb
jp
test
andb
or
xchg
or
push
shlb
push
jge
ret
fiaddl
or
xchg
out
std
sub
iret
add
xor
std
mov
popf
andb
pop
and
xchg
and
out
nop
call
dec
loopne
mov
sbb
mov
xchg
sti
add
and
iret
add
out
scas
aam
and
inc
loope
sahf
cld
imul
push
add
jne
adc
cmpsw
mov
xchg
mov
loop
fs
jbe
and
bound
push
lods
xchg
lahf
pop
pushf
sahf
stos
ret
dec
leave
pop
pop
mov
scas
shr
ljmp
pop
cmc
lcall
cmpsb
or
dec
mov
jmp
sub
pop
mov
pop
shll
scas
pop
dec
cmp
loopne
cmp
xor
stos
cmc
jmp
lcall
lds
xchg
in
fucomi
bound
add
mov
repnz
mov
or
sub
aas
arpl
mov
push
jp
mov
div
out
sub
mov
pop
les
test
mov
test
aam
fs
mov
int
mov
js
sub
nop
mov
pop
fisubrl
xor
aas
add
mov
xor
cmpsl
jno
fincstp
or
cmp
jmp
into
dec
ja
mov
or
imul
cli
fs
pop
xor
push
push
lock
mov
dec
loope
lret
pushf
mov
jb
jb
lret
mov
xchg
jecxz
xlat
nop
mov
jecxz
jp
jne
mov
xor
repz
mov
add
imul
dec
repz
scas
imul
mov
icebp
jg
repnz
scas
pop
dec
call
mov
movb
sti
pop
pop
sti
imul
dec
sub
xchg
sbb
pop
or
int3
fucomp
je
mov
dec
mov
mov
mov
ret
fdivrl
and
neg
add
or
out
out
or
loop
mov
fsubs
xor
sub
sub
or
lret
jl
je
xchg
cmp
stos
inc
jne
call
mov
adc
mov
repnz
xchg
mov
les
and
mov
xor
scas
icebp
add
aam
jg
pop
xchg
add
aaa
push
mov
cmpsb
shrb
adc
shr
sbb
imul
fs
fs
popf
es
adc
sbb
clc
push
pusha
pop
enter
pop
and
mov
inc
mov
lcall
vpxor
inc
fs
jmp
sbb
jl
pop
xor
mov
mov
fwait
inc
lods
inc
pop
xchg
adcb
test
add
mov
add
sti
clc
loopne
mov
ja
jo
xor
push
std
ficomps
pop
sub
xor
and
inc
orb
push
xor
cwtl
int
and
outsl
mov
aam
pop
mov
loope
xchg
bound
stos
push
lahf
shl
ljmp
and
adc
in
ret
inc
fldt
pop
or
call
push
lret
mov
jle
and
adc
sbb
pop
cltd
push
and
push
test
jno
mov
push
jnp
int
mov
rcrl
std
test
mov
fisttpll
gs
xor
in
xor
pop
mov
xor
mov
or
aas
mov
adc
jmp
les
push
stc
test
xchg
out
mov
bound
mov
push
mov
pop
or
repnz
out
fistpll
sbbb
pop
adc
movb
and
outsl
xor
cmp
or
lea
inc
cmpsb
inc
cmp
fcomps
outsb
sti
sbb
mov
fiadds
in
clc
mov
or
and
sar
mov
int
xchg
fs
fstpl
std
clc
dec
pushf
nop
dec
and
xchg
mov
rclb
lods
mov
pop
xor
xchg
jnp
xor
lods
sbb
or
cmpl
cmp
adc
fnsave
cmpsl
aaa
mov
mov
pop
push
lret
inc
addr16
mov
mov
add
xor
xor
push
xchg
cmp
aaa
jge
cmp
pop
mov
ret
cmpsb
enter
iret
jp
shl
push
fwait
adc
inc
not
xor
mov
ret
mov
dec
stos
mov
sbb
fistpll
fisttpl
stos
xor
pop
or
test
test
mov
cmp
outsb
jmp
mov
mov
mov
sub
mov
dec
xor
das
cmpl
and
mov
pop
mov
pop
lods
sbb
je
mov
xchg
or
add
ds
push
inc
daa
rorl
fcmovnu
push
sub
pop
imul
push
les
xor
cmp
cmpsl
icebp
adc
cmpsb
push
mov
mov
sbb
sar
mov
std
insb
mov
cmp
xchg
cld
xor
ficoms
in
in
jmp
rolb
and
bound
xchg
pop
mov
push
aas
inc
popf
bound
cmp
lret
scas
mov
loop
mov
sub
jmp
js
dec
int
fdivl
sbb
fs
ds
and
adcl
inc
mov
stc
jge
pop
test
outsb
sbb
push
int
pop
pushf
cmp
mov
jecxz
icebp
test
cwtl
pop
sub
fdivr
xor
leave
shlb
mov
adc
shr
and
pop
push
movsb
mov
pop
ror
mov
mov
roll
xor
push
and
daa
xlat
mov
or
inc
jns
mov
jp
popa
pop
rcll
and
lods
add
xorl
gs
xor
pop
icebp
and
pop
jo
sbb
pop
cmp
jno
test
xor
in
insb
mov
xchg
pop
test
mov
mov
cvtdq2ps
inc
jno
xchg
loope
xchg
out
jnp
insl
hlt
and
sti
ret
mov
rcr
das
pmaxsw
leave
lcall
xchg
je
int
ret
test
loope
inc
mov
sarb
ja
jbe
addr16
scas
je
mov
fsubrs
int3
push
sbb
sete
clc
xchg
and
xchg
fdivrl
in
and
push
xor
fidivrl
mov
les
inc
cmp
dec
cli
repz
lock
push
xchg
jecxz
or
cmp
andl
ja
jg
cli
in
mov
jle
test
push
mov
mov
gs
into
loopne,pt
daa
hlt
cmp
dec
mov
xchg
pop
inc
in
sbb
movsb
arpl
lods
gs
push
inc
cmpsl
mov
mov
xchg
or
sub
or
popf
loopne
shll
add
es
out
mov
pop
push
xor
in
ljmp
mov
roll
loopne
xchg
in
mov
xchg
loop
in
cmpl
ds
jg
push
sub
insb
insl
sbb
or
lret
test
sti
ds
mov
aam
or
mov
xor
add
adcl
jno
mov
jbe
dec
movsb
sbb
test
bound
ljmp
push
addr16
cld
add
data16
xchg
bound
mov
adc
pop
cmpsl
orb
dec
sbb
adc
add
js
fisttpl
hlt
sub
mov
sbb
aam
lds
ret
dec
mov
pop
pusha
inc
rolb
jmp
sub
jnp
in
mov
adc
jecxz
pusha
and
mov
data16
in
out
movsl
lahf
ret
inc
int3
scas
mov
int3
shrl
mov
and
lods
inc
adc
adc
in
adc
cmp
push
cmp
push
sbb
inc
std
push
test
test
xor
in
cmp
js
mov
push
adc
sub
outsl
in
jnp
pop
das
lret
pop
xchg
mov
jle
fs
imul
fisubrs
jno
frstor
scas
mov
std
add
jl
pop
aaa
dec
insb
stos
pop
bound
xchg
mov
shll
mov
mov
inc
mov
cltd
dec
addr16
push
shlb
inc
xchg
cmp
mov
hlt
aad
shl
add
jb
aad
dec
pop
popa
ja
push
subl
inc
add
fwait
imul
xor
fwait
rolb
jae
or
lods
add
into
sbb
sub
into
test
sahf
test
fsubrs
imul
rcr
cmpsl
stos
popf
sti
inc
mov
sbb
ret
cmpsb
and
out
pusha
hlt
push
jl
arpl
scas
mov
push
mov
stos
sbb
addr16
sbb
loope
push
dec
sarl
outsl
inc
addr16
stos
adc
sub
dec
jne
and
out
fsubr
push
js
adc
js
sbb
xor
imul
and
push
addr16
movsb
mov
xor
cmp
addr16
adc
inc
push
jl
push
mov
popa
mov
lret
cmp
and
cmpl
push
mov
cmc
mov
out
iret
fwait
xchg
and
in
inc
jmp
push
xchg
or
stos
sub
cmp
cwtl
ljmp
sbb
cld
shlb
fyl2xp1
std
stc
mov
mov
sub
outsl
cmp
mov
cld
xchg
movb
add
xchg
ja
pushf
test
arpl
enter
adc
out
inc
pop
dec
and
xor
call
lock
mov
add
mov
jge
int
adc
sub
push
mov
daa
jmp
mov
pop
stc
test
das
leave
insb
jmp
pop
sub
push
lahf
jno
mov
mov
out
sti
lahf
or
cwtl
notb
leave
insl
lahf
js
rol
and
repz
sahf
or
fsts
adc
and
into
std
sub
mov
cld
int
test
sbb
test
outsb
rcll
int
js
jno
push
mov
scas
adc
fisubrl
push
sbb
arpl
mov
stos
add
mov
add
das
dec
icebp
push
fidivrs
sub
jp
jl
andl
mov
outsb
dec
xor
add
add
push
and
mov
cmp
jecxz
xor
mov
push
rorb
xor
inc
add
pop
aam
in
sbb
xchg
xor
xor
fbstp
ss
inc
arpl
cltd
or
hlt
mulb
and
rcll
adc
adc
scas
pop
jns
lcall
jns
fisttps
pop
xchg
aad
jae
les
and
out
and
aam
jge
fiaddl
push
out
xchg
jb
or
lds
mov
sar
mov
mov
jmp
push
mov
or
mov
cmp
lret
subb
dec
adc
sbb
addl
sub
pop
sar
fidivrl
fdivrs
stos
pop
pushf
pop
sti
rclb
sahf
jmp
inc
inc
and
push
aad
mov
push
and
cwtl
pop
add
fisubrl
push
xor
sbb
mov
faddp
add
test
cmp
negb
movsb
test
sbb
iret
pop
hlt
sbb
push
sub
xor
jg
in
stos
sub
fisubrs
jl
sti
ja
fwait
ret
dec
or
das
stos
das
in
stc
xlat
xlat
lea
and
fstpt
ret
stos
mov
cld
popa
loope
inc
dec
sbb
iret
xor
xchg
or
and
jns
imulb
enter
add
jno
stos
cmpsl
adc
or
add
xor
sub
pushf
sbb
push
ljmp
in
outsl
notb
fidivl
popf
cmpsl
stos
push
push
dec
jnp
mov
inc
push
int
cmp
ja
jg
jbe
push
loopne
std
mov
fisubl
lods
push
or
outsb
sbb
ljmp
push
jmp
mov
lret
xor
sub
out
mov
in
pop
daa
xchg
xchg
sahf
push
jns
xchg
push
ret
push
ret
add
fadds
jo
jmp
sub
cmp
add
push
aas
jecxz
std
int
adc
movsb
ret
sub
push
cmp
imul
cmp
shr
pop
adc
and
pop
xchg
xor
in
in
xlat
adc
push
pop
sbb
sbb
test
lds
cmpsl
in
lret
enter
cs
out
cwtl
lods
pop
fdivl
sti
xor
push
mov
inc
jns
or
push
mov
sbb
negb
dec
lods
pusha
notl
std
mov
out
iret
push
adc
sbb
push
xor
jo
inc
push
in
outsl
sub
popf
ds
xchg
xchg
jecxz
jmp
insb
push
push
int
sarl
push
test
jno
pop
ret
sbbl
xor
mov
or
imul
sti
test
es
fstpt
sub
cwtl
jmp
out
int
ret
scas
cmp
jle
jl
in
popa
inc
in
scas
sub
fwait
les
pop
fcoms
pop
mov
jno
push
sub
outsb
ror
das
or
rclb
dec
lret
push
int
sarb
pop
mov
es
inc
inc
jb
add
lea
mov
lock
gs
jmp
ss
movsl
inc
adc
cmp
loopne
out
testl
inc
clc
cmpsl
adc
popf
aad
stc
adc
and
bound
mov
ror
pop
push
decl
nop
in
testb
ret
lret
ss
inc
rolb
mov
mov
sub
nop
dec
and
adcl
fildll
cmp
pusha
imul
jae
ss
fsubl
ret
popa
mov
add
stos
jno
popf
sbb
or
cmp
movsb
mov
dec
ja
arpl
cmc
mov
shll
rolb
pusha
add
sbb
adc
fidivrl
in
pop
lock
lds
inc
call
mov
lret
jle
clc
out
adc
inc
jbe
jl
or
ds
and
loop
rorb
ja
imul
outsl
mov
or
jbe
jg
lret
das
dec
adc
push
test
inc
aam
xchg
ds
scas
jbe
cld
or
sub
and
xchg
mov
push
xor
scas
test
push
adc
xor
jnp
mov
dec
jns
pop
jmp
das
jmp
jg
xor
hlt
lock
adc
fimull
or
out
add
mov
pop
inc
inc
xchg
ja
daa
in
cmp
cltd
out
lret
test
add
in
push
adc
stc
aas
cmp
add
test
xor
jne
lret
andl
push
inc
test
mov
fldln2
sub
dec
fistps
push
inc
aaa
cmp
iret
outsb
cmp
xchg
inc
decl
ljmp
popa
mull
mull
sub
ret
dec
mov
or
sbb
lock
mov
pushf
add
fadds
lahf
in
sbb
lret
test
ja
lcall
lahf
fwait
jmp
sub
jbe
jge
hlt
daa
popf
pop
stos
aas
pusha
jae
add
pop
insb
dec
sub
cld
pop
xchg
imul
inc
add
mov
dec
and
fstps
or
and
pusha
insl
mov
ss
loop
xlat
ficompl
jnp
xchg
bound
inc
lret
nop
add
pushf
int3
cltd
movsb
xor
loope
sbb
mov
loopne
adc
cmp
mov
loop
inc
jp
adc
sbb
add
mov
sbb
and
pushf
rol
repnz
inc
or
add
test
xchg
jnp
push
jno
ja
xchg
cli
insb
jmp
and
mov
mov
adc
or
jp
add
adcb
repnz
pop
xchg
orb
jbe
ja
repz
adc
fdivl
xchg
xor
lea
add
test
mov
mov
and
cmp
and
and
mov
xchg
push
inc
sub
ret
sub
xor
add
mov
add
or
cld
clc
and
mov
ljmp
or
pop
mov
push
popa
add
xchg
pop
adc
out
cld
add
push
fs
faddl
out
push
aam
mov
lods
mov
jae
cmp
push
std
pushf
nop
scas
push
xchg
pop
mov
xchg
leave
xor
xor
aam
xchg
jno
test
or
cmpsb
imul
cmp
fnstsw
jg
test
pop
mov
cmp
mov
xchg
mov
insl
push
fiaddl
mov
jae
insb
scas
out
call
dec
or
xchg
push
imul
lods
and
mov
cmp
mov
push
jecxz
int3
data16
ja
mov
xor
xchg
adcl
addb
loop
loop
adc
xchg
cmp
jnp
push
mov
arpl
arpl
push
aad
arpl
push
jmp
adc
in
pop
adcb
push
mov
mov
faddp
arpl
inc
pop
outsb
mov
lods
sub
add
mov
fisubl
and
sbb
mov
ja
vdivss
fdivs
aas
lock
stos
mov
dec
ja
or
and
lock
lods
cltd
shr
dec
in
ja
imul
mov
stos
mov
das
lods
mov
adc
pop
inc
cmp
or
xor
push
popf
and
movsl
pop
mov
orb
fidivrl
dec
leave
push
in
jae
movsl
dec
loop
push
mov
les
jg
jnp
subl
inc
mov
lods
jecxz
xlat
sbb
mov
enter
xor
pushf
pop
out
mov
cmp
movsb
rorl
fcmove
mov
pop
pop
push
xor
add
dec
orb
sbb
popf
push
loope
lods
jmp
or
ret
pop
cli
pop
inc
ds
xchg
cmp
add
lcall
jns
xchg
add
pop
lods
push
sub
pop
and
sub
pop
sub
push
add
add
xor
pusha
mov
ret
fbld
push
sub
in
xor
push
mov
pop
insb
xor
mov
fisubl
mov
pop
inc
mov
xchg
imul
inc
push
jbe
fistps
inc
fistpll
popa
push
in
loopne
test
outsb
jb
lret
dec
insb
pop
setae
arpl
xor
mov
sbb
adc
sti
add
inc
loope
mov
daa
inc
repnz
inc
negl
addr16
pop
out
xor
cs
cmp
xor
fildll
in
mov
and
out
xor
mov
pusha
rolb
xchg
js
inc
or
loopne
cmp
xchg
out
or
hlt
push
cltd
bound
xchg
lret
adc
push
loop
outsl
cmp
mov
xchg
push
jge
push
mov
adc
inc
test
cmp
fwait
mov
arpl
ljmp
jno
inc
mov
clc
add
jae
mov
mov
jne
push
or
adc
jno
imul
dec
xchg
push
div
push
jecxz
and
stc
jo
jns
sbb
add
imul
cld
outsl
pop
pop
aam
testl
xchg
fnstenv
inc
pop
adcl
aad
iret
push
ja
imul
push
jae
pop
scas
insl
in
fcomp
and
ret
pop
test
xchg
cli
push
outsl
inc
rclb
ret
jmp
mov
out
adc
jecxz
inc
outsl
clc
push
ja
push
mov
push
lret
xlat
movb
outsb
enter
inc
mov
cmp
loope
ds
mov
pop
mov
xor
es
cmpsb
scas
xchg
push
jmp
inc
pop
stos
rorl
int3
cmp
out
mov
loopne
stos
pop
cmp
push
mov
dec
in
cmc
cmp
outsb
stos
dec
or
and
jae
test
outsb
nop
mov
lea
bound
data16
stos
aas
and
ljmp
pop
ret
jo
mov
jge
fwait
iret
fadds
pop
jmp
inc
mov
mov
imul
xchg
jmp
sar
mov
add
aam
hlt
pop
xchg
xchg
push
test
push
sti
add
push
inc
divb
lahf
sub
sahf
sub
scas
pop
es
sahf
cmpb
movsb
mov
shlb
push
ret
pop
sub
in
faddl
cmpsb
shrl
ror
pop
pop
lods
lods
rclb
adc
into
pop
mov
dec
dec
daa
mov
push
movsl
lahf
jmp
push
fwait
jg
les
inc
push
xchg
sti
lock
xor
sub
sar
fsubrs
pop
pop
jge
cmp
cwtl
enter
xchg
adc
mov
and
int3
inc
loope
lea
lret
xchg
pusha
xchg
aaa
xchg
testl
jge
daa
cmp
mov
insb
lods
fdivrl
or
bound
clc
lahf
xchg
sub
add
jo
out
push
lahf
repnz
xor
sub
cmpsb
insl
out
ud1
or
out
inc
lea
std
add
mov
flds
stos
arpl
and
aas
lock
insb
fbld
pop
clc
arpl
or
repnz
out
or
movsb
inc
popa
adc
stc
pop
inc
cwtl
scas
std
mov
lods
stc
andw
lods
cmpsl
iret
xor
fmuls
in
call
jne
scas
sub
rcrb
dec
lds
flds
ss
xchg
loop
add
hlt
dec
lcall
xorl
das
gs
fdivrs
cmp
jns
or
into
cltd
ret
dec
sarb
pop
gs
clc
pop
arpl
cmp
sub
mov
inc
push
call
jnp
push
dec
mov
lret
repz
pusha
cld
inc
or
daa
inc
cmp
pusha
mov
sub
nop
mov
push
jmp
xchg
stc
mov
mov
sub
cmp
js
dec
or
mov
subl
ds
jmp
imul
repz
stos
cli
pop
insl
pop
lds
ja
sbb
sub
pop
aaa
inc
nop
pop
xchg
lcall
push
es
ds
push
cmp
repz
jbe
lods
decb
sti
dec
pop
out
ss
jb
pop
cli
fs
sub
rolb
not
adc
out
inc
enter
repz
mov
cs
ljmp
imul
ja
mov
push
data16
sbb
push
mov
movsl
inc
fnstcw
andb
push
dec
mov
mov
sub
jp
test
rorb
mov
int3
inc
push
daa
push
lea
or
xchg
int
lock
ror
add
testb
mov
movsb
rcll
inc
out
add
fs
adc
fnsave
dec
mov
lret
dec
xchg
adc
ficomps
adc
or
sbb
adc
xchg
pushf
dec
inc
dec
lret
int
xchg
jl
and
lret
int3
dec
jns
jb
popa
xor
iret
add
inc
inc
mov
push
xor
jae
pop
aas
div
cwtl
or
xor
testl
inc
sub
dec
jb
repz
cs
cmp
push
xchg
add
adc
xchg
push
pop
sar
and
add
das
mov
fwait
addr16
jmp
lea
xor
and
bound
mov
or
xchg
and
xor
daa
xchg
popf
ret
xor
shrb
sbb
xor
xchg
into
movsl
repz
mov
xchg
loopne
jg
stos
sub
int3
pop
mov
push
out
sub
stos
jbe
nop
enter
pop
and
push
jge
adc
cmc
mov
jb
js
pop
movsb
pop
scas
daa
sub
cmpb
add
aas
js
push
js
iret
add
jo
cwtl
arpl
test
add
movsb
rol
push
fadd
sub
test
add
jns
mov
lods
cmp
in
add
ljmp
inc
sub
sbb
jecxz
insl
scas
imul
sahf
pop
cmp
or
xchg
pop
aad
fs
sbb
xlat
push
mov
mov
outsb
ret
lds
addr16
pop
pop
stos
mov
enter
movsl
push
or
xchg
sbb
scas
into
push
mov
out
je
les
es
mov
xchg
stos
lcall
fstps
insb
and
push
lea
fmull
repz
pop
rcrb
sub
sub
scas
leave
cli
outsl
divl
insl
fs
cltd
add
cli
mov
repz
mov
clc
mov
mov
inc
and
xchg
push
mov
dec
insb
test
push
cltd
xor
js
mov
ja
arpl
loop
popf
mov
fnstcw
sbb
sub
fidivs
aam
std
jle
jle
rorl
mov
testl
jae
loop
pop
fbld
outsl
sbb
cli
xchg
jmp
or
pop
mov
aaa
fsubr
sbb
dec
fsubrl
clc
add
imul
and
hlt
push
test
fdivrs
inc
and
xor
pushf
jo
or
loope
fiaddl
add
dec
repnz
mov
shrb
aas
pop
sbb
pop
inc
jnp
popf
addr16
fidivrs
fildl
push
mov
push
outsl
data16
inc
aam
sbb
nop
pop
aas
out
iretw
sbb
imulb
add
xor
fbstp
outsl
icebp
jae
sub
inc
out
es
and
sarl
or
jns
push
roll
add
adc
mov
mov
lock
and
dec
ss
jmp
decb
cltd
xor
lock
jge
mov
enter
inc
lods
mov
sbb
xchg
test
movsb
cwtl
test
adc
dec
sbb
rolb
aas
mov
out
pop
in
or
cmp
jnp
mov
and
or
test
sbb
jne
sub
cmp
hlt
mov
adc
push
outsl
mov
xchg
jo
popa
xchg
test
lds
cmp
lahf
mov
pop
shrb
or
push
test
leave
aas
ja
push
jnp
int
jae
push
mov
outsl
iret
pop
pop
sbb
lret
jg
inc
shll
push
in
popa
mov
mov
mov
loop
or
xor
aaa
or
aad
dec
add
dec
inc
and
cmp
shll
jne
push
add
in
adc
xor
nop
mov
insb
fwait
push
push
push
test
dec
add
push
or
or
jae
std
sbb
popf
mov
les
mov
mov
mov
cmp
pop
lods
outsl
sub
js
cmp
hlt
repnz
add
or
mov
cmc
and
push
jae
push
mov
mov
push
mov
mov
inc
rcrl
or
ss
insl
outsl
into
sti
mov
xchg
inc
sahf
add
push
in
lds
loopne
xchg
mov
in
cwtl
in
add
sbb
mov
dec
pop
mov
jmp
push
xchg
sbb
push
mov
jmp
add
lock
xlat
ret
xor
jge
mov
add
shlb
std
imul
adc
push
mov
aaa
jle
in
pop
test
aaa
movsl
pop
call
rcrb
mov
ficoml
insb
add
cmpsl
push
push
inc
out
add
mov
int
sub
cmp
ja
lret
in
push
dec
and
std
cmp
xchg
and
loope
or
cmc
cpuid
lock
push
push
jne
mov
and
std
xor
xor
in
sub
push
dec
push
loop
sbb
mov
sarl
or
jnp
and
sti
pop
adc
cmpsb
adc
xchg
dec
add
repnz
fidivs
sbb
out
jmp
lret
add
jns
enter
movsl
cs
add
sti
in
jle
jecxz
out
mov
jle
in
cmc
out
mov
sub
repnz
lock
dec
jg
popa
sbb
pop
adc
or
cmp
lods
sarl
sbb
or
dec
mov
ss
lahf
sbb
mov
mov
shlb
bound
adc
add
lds
xor
sub
dec
mov
iret
jno
rcr
push
loopne
aaa
insl
fcompl
aad
cli
in
push
push
and
aas
loopne
or
rcr
lret
jbe
aad
ficoms
aad
cmc
push
je
pop
jle
pusha
push
pop
je
sarl
xlat
testb
push
lods
inc
imul
xchg
xor
imul
mov
or
pushf
roll
push
iret
dec
clc
fwait
leave
in
outsb
ss
push
sarb
mov
xchg
push
in
push
in
push
mov
or
test
inc
xchg
xchg
imul
adcb
pop
lahf
fcompl
adc
mov
jo
sahf
xchg
fcomps
adc
lods
or
cmp
jmp
outsl
hlt
mov
sbbb
in
mov
and
jl
stc
push
fwait
out
in
and
mov
mov
pusha
test
push
leave
cmp
cld
repz
push
xchg
pop
mov
jecxz
jge
inc
out
xchg
sti
mov
test
xlat
in
or
rorl
push
cmp
nopl
mov
cmpsl
mov
dec
or
shll
lret
mov
mov
mov
nop
inc
repnz
test
lds
sub
adc
xchg
mov
mov
js
out
or
loopne
inc
in
mov
jecxz
js
lods
dec
mov
jg
notl
insb
fs
sub
jge
cmp
adc
std
jl
stos
out
pop
sub
stos
sub
cmp
stos
out
xchg
inc
push
mov
xchg
sub
mov
roll
mov
lock
jbe
mov
adc
lahf
lahf
xchg
bound
loope
mov
mov
ss
lcall
cld
fisubrl
or
movb
inc
jnp
jno
xor
jbe
pop
or
loop
cwtl
sbb
lahf
xchg
popl
cmp
inc
sarl
mov
int
mov
inc
daa
ffree
sub
dec
call
inc
dec
popf
dec
push
mov
test
jg
jmp
or
dec
aaa
xchg
xor
dec
inc
dec
cmpsb
jmp
loopne
mov
lods
dec
and
inc
sahf
xchg
popf
in
push
mov
mov
jg
call
push
stos
cmp
xchg
bound
icebp
push
mov
mov
arpl
lods
jle
sbb
xor
pop
xorb
aad
inc
push
push
std
mov
lds
out
int3
rolb
lea
std
lahf
outsb
pop
xlat
mov
xchg
push
stos
sub
imul
jmp
mov
adc
adc
jno
or
out
pusha
bound
movsl
dec
repnz
sahf
jno
gs
repz
push
enter
daa
dec
mov
sbb
pusha
test
movsb
jmp
cmp
aaa
lods
mov
inc
fwait
daa
shlb
sub
je
add
repz
pop
lods
push
xchg
ret
or
and
jmp
lahf
repnz
mov
cmp
jl
sub
sbbb
and
imul
jecxz
daa
xlat
dec
clc
dec
jno
dec
in
call
sub
xchg
jg
sub
pop
adc
in
mov
pop
xchg
dec
cli
mov
mov
out
ret
adc
aam
xor
lods
cmp
test
lea
in
jmp
mov
shlb
pop
push
idivb
cmp
adc
cld
stos
test
or
mov
adc
inc
cmc
sahf
xor
or
and
adc
pop
dec
std
pop
test
push
mov
xchg
mov
sbb
cmp
mov
mov
mov
fpatan
cmp
dec
negb
fsubl
mov
repnz
push
iret
pop
jmp
xor
xchg
xor
jecxz
fdivp
xor
mov
mov
rol
rcll
dec
and
movsl
sbb
nop
mov
addl
and
sbb
clc
lock
mov
adc
adc
mov
mov
adcb
push
pop
outsb
in
test
adc
xor
push
and
adc
adc
lahf
xchg
mov
or
enter
mov
push
jge
addl
push
js
lods
lds
lds
das
and
xchg
push
shr
inc
das
fstps
scas
push
bound
mov
sub
adc
and
add
dec
pop
in
iret
push
ds
add
clc
fs
test
mov
adc
scas
aaa
mov
inc
xlat
addb
cltd
out
bound
fsubrs
push
jae
mov
int
in
or
mov
inc
add
loop
or
push
mov
jo
inc
and
pop
rorl
sbb
adc
mov
and
cmp
dec
cmpsb
and
aas
test
stos
mov
jne
mov
mov
aas
push
mov
xchg
cltd
das
sbb
pop
jne
cmpsb
push
repnz
push
cs
inc
xorb
mov
cmp
insl
pop
mov
xchg
pop
aaa
or
out
jmp
stos
mov
sbb
pop
sbb
fdivr
popa
lods
icebp
inc
scas
lcall
cmp
cltd
mov
loop
jno
in
lods
push
jmp
and
xlat
stos
sbb
add
mov
dec
ret
aas
imul
push
fisubrl
push
aaa
push
jbe
mov
mov
aam
push
or
test
pop
repnz
sbb
and
mov
stos
fwait
cs
mov
inc
xor
je
push
xchg
js
mov
lea
lds
rorb
mov
into
je
popf
mov
into
adc
popf
fdivr
push
jg
outsl
enter
inc
pop
xlat
dec
xchg
inc
cmc
and
xchg
es
es
push
push
sti
rclb
das
push
cmp
fistpll
iret
xor
sahf
cmp
test
in
mov
ficompl
dec
aad
mov
rcrb
outsb
jno
jns
add
sub
inc
loopne
mov
dec
or
or
jp
inc
xlat
add
jl
dec
push
repz
lret
jmp
jl
loope
inc
hlt
sbb
popl
in
sub
clc
insl
insb
mov
rcrb
lret
inc
stos
mov
dec
ret
cmp
ja
sub
mov
in
out
or
leave
sbb
push
push
mov
or
lret
mov
lds
movsl
lret
rcll
cmp
repnz
ret
leave
jb
and
pop
jnp
xorl
jge
popf
and
lods
roll
xor
push
xchg
or
loopne
add
call
lret
cwtl
insl
mov
xor
jns
sub
xor
insl
pop
pop
push
fcmove
cld
pop
inc
lahf
push
sub
aad
movsl
fs
pmaxsw
daa
out
push
push
and
inc
mov
pusha
movsl
cltd
loopne
inc
add
mov
leave
imull
sub
enter
dec
jno
xchg
enter
sbb
add
je
dec
xorl
dec
adcl
movsl
push
aad
fisttpl
xchg
imul
in
ret
jmp
pop
mov
ja
pop
xchg
mov
adc
shll
push
xchg
fwait
and
lea
mov
int3
pop
push
arpl
outsb
jmp
xor
rorb
inc
inc
fiaddl
adc
mov
insl
or
dec
loopne
outsb
gs
cwtl
pop
jne
add
adc
sbb
loopne
js
fs
fisubrs
roll
scas
loopne
pusha
sbb
mov
jmp
adc
add
push
dec
adc
fidivrs
out
push
dec
ficompl
sub
add
jne
sbb
inc
aas
push
inc
in
insb
mov
sti
mov
lcall
clc
dec
test
mov
dec
leave
adc
sbb
notb
and
test
mov
movsb
movsl
clc
pop
push
lock
mov
push
push
mov
xor
fisubrs
jge
lcall
inc
shrb
stc
cli
push
pop
pusha
inc
ljmp
scas
add
sub
xlat
cmp
xor
enter
adc
test
mov
or
sbb
mov
sbb
insl
mov
sbb
push
jo
dec
mov
ret
xchg
jl
mov
iret
mov
mov
push
mov
lods
adc
push
mov
dec
inc
or
and
sbb
xchg
in
push
jbe
jb
sub
movb
popa
mov
or
pop
sbb
jbe
sub
fcompl
shrb
je
popf
add
enter
mov
add
sbb
jbe
rcll
sbb
xchg
dec
inc
aad
mov
pop
push
ds
jne
imul
xchg
hlt
shl
hlt
cmpsl
sub
outsl
mov
fs
in
outsb
lods
pop
inc
ljmp
sbb
leave
pop
cmp
mov
mov
pusha
dec
stos
and
pop
fstp
fs
push
and
ret
adc
cmpb
out
and
pop
xor
xor
dec
inc
out
emms
addb
xor
lcall
inc
js
inc
dec
pop
pop
mov
mov
xor
and
mov
xchg
push
scas
and
ret
leave
mov
dec
arpl
sbb
in
nop
and
fwait
sub
out
dec
mov
and
rorb
xor
sub
repnz
xor
sbb
into
outsl
imul
hlt
lret
or
push
xchg
cmp
fdivr
sub
jl
xor
jle
in
outsb
icebp
enter
cmp
push
jg
test
ljmp
fwait
push
repz
mov
scas
ljmp
sahf
popa
jae
in
cmc
ficoms
leave
push
cmpsl
push
adcb
mov
cld
insb
out
adc
mov
imul
stc
pop
jne
nop
rcrl
repz
push
ret
iret
push
pop
and
adc
sbb
jg
adc
mov
push
xor
lahf
jecxz
scas
sbb
cmp
stc
popf
xor
stos
aam
ja
ljmp
movups
push
jle
orl
cmpsb
sti
cli
sbb
mov
mov
dec
popl
xlat
popf
repnz
xchg
sbb
dec
jmp
jno
pcmpeqw
xchg
xchg
lods
insb
cli
in
xchg
push
shl
mov
lret
test
xchg
fdivl
xlat
xor
xchg
es
loope
sub
nop
pop
loop
xchg
ds
popa
xlat
cli
push
pop
outsb
jne
js
jg
mov
rorb
adc
popa
adcb
adc
mov
dec
push
cmpsl
fdivr
adc
xchg
and
adc
cmc
fcmovb
jp
aaa
mov
or
cli
fisttpll
sub
pushf
xchg
push
push
adc
mov
pusha
call
test
jbe
lods
lods
out
xchg
xchg
mov
or
in
test
xor
jno
mov
lahf
fldt
bound
outsb
xor
cltd
pop
test
xchg
fldcw
and
cmp
fiadds
push
mov
stc
adc
pop
mov
xchg
pop
or
dec
dec
decb
pop
loope
sub
test
xchg
xchg
dec
daa
sti
xchg
sub
jbe
lcall
test
popf
fwait
cmp
sbb
xor
out
cmp
jle
pop
cwtl
out
popa
jbe
sarl
pop
test
cmc
je
cwtl
mov
jg
add
xchg
xchg
arpl
loope
jne
imul
inc
insb
jbe
dec
push
pop
cmpsl
jo
inc
mov
clc
push
lret
push
mov
fisttpl
cli
ljmp
iret
lods
repnz
xchg
sbb
push
adc
xor
pop
sub
dec
sbb
and
mov
push
add
pop
cmp
dec
jmp
cmp
insl
pop
lods
jecxz
repnz
jge
shll
push
sub
xor
adcl
jae
ja
xorb
xchg
in
sbb
cmp
mov
inc
loop
xchg
popf
cmpsb
out
push
aas
jae
test
sbb
fldt
xchg
jmp
jl
repnz
ret
adc
sahf
and
inc
pusha
dec
mov
and
stos
sahf
lret
or
icebp
sbb
cmpsl
lret
lret
les
cmpsl
add
cwtl
lds
push
adc
imul
mov
cmpsl
jne
cltd
xchg
mov
test
insl
dec
iret
mov
mov
xor
and
stc
push
add
outsl
fnstsw
sub
sub
cmpsl
push
pop
xor
ror
mov
testl
and
or
jne
in
push
pop
es
mov
cmpsb
int
push
sbb
negb
adc
cmp
xlat
push
mov
pop
loop
xor
repz
dec
mov
hlt
dec
pop
xor
dec
cs
pop
hlt
icebp
lock
hlt
shl
pushf
stc
stos
sub
pop
or
xchg
xchg
insl
outsl
test
xchg
jecxz
sbb
js
dec
popa
sbb
lock
js
sbb
mov
cmpsl
push
insl
fcoms
gs
lahf
cmpl
imull
imul
imul
arpl
je
movsb
in
adc
push
mov
shll
pop
mov
xchg
lods
xchg
in
adc
add
jnp
push
ficoml
arpl
daa
or
pop
jmp
pop
lret
aas
cmp
inc
jle
cwtl
mov
sbb
fs
fsubrl
cmp
ret
icebp
inc
adc
sbb
mov
inc
inc
push
pusha
out
stos
bound
stos
test
jbe
mov
inc
cs
or
orb
repnz
mov
dec
leave
mov
push
adc
fcmovnu
add
jnp
jmp
addr16
inc
mov
inc
aad
add
pop
insl
cmp
sbb
mov
mov
mov
or
arpl
enter
fdivl
subl
addb
fidivrl
push
icebp
insl
xchg
pop
pop
sub
mov
xor
mov
inc
stc
out
fsubr
sub
sub
hlt
push
out
insb
fwait
rcl
loope
adc
cmp
add
jns
lock
cwtl
mov
add
clc
addr16
mov
ret
int
sbb
jns
clc
push
aad
out
push
and
je
xchg
mov
in
popa
filds
mov
gs
movsb
ficompl
mov
xchg
jge
cs
sbb
rcrb
sbb
fmul
ret
lea
xor
imulb
in
dec
loopne
arpl
add
mov
push
lret
lock
clc
mov
pop
arpl
popf
sub
sbb
ret
xchg
test
sub
fsubr
push
or
dec
inc
push
pop
jge
pusha
enter
pusha
inc
test
jae
jg
scas
inc
test
or
fistl
lahf
inc
out
jo
repnz
ror
cld
cs
sub
sbb
lcall
fwait
dec
push
stos
adc
adc
xchg
fs
std
mov
xor
or
in
lea
movsb
xlat
mov
into
sti
jns
xor
jnp
cmp
add
push
cmc
repz
pop
xor
cltd
cmpl
ja
push
push
iret
shlb
std
sbb
mov
adc
pop
push
dec
cmpb
scas
out
addl
pop
xor
dec
out
int3
jmp
mov
stos
xchg
dec
imul
inc
gs
js
es
stos
sub
mov
add
pop
xor
push
lds
add
sub
sub
enter
shr
or
dec
test
out
pusha
pop
ret
jl
push
insb
outsl
add
ret
test
adcb
ljmp
ret
sub
push
ret
and
xchg
outsl
xor
inc
add
mov
ja
xor
adc
das
xchg
jnp
popa
add
pop
add
cmp
jp
popf
les
in
scas
xor
fldz
jp
mov
xor
mov
or
jl
je
arpl
add
ret
push
shll
sbb
xor
xchg
xor
jae
adcb
adc
jbe
ss
push
pop
int3
icebp
shll
mov
push
xchg
jnp
dec
subl
in
call
out
orb
sahf
mov
add
mov
testl
cltd
repnz
data16
incl
cmpsl
mov
pop
lcall
xor
xor
pop
ds
sbbb
rcll
orb
xchg
test
fsubs
push
xchg
repz
sti
fstps
jne
mov
xchg
cmc
enter
testb
das
mov
test
inc
outsb
or
daa
xchg
stos
sbb
or
add
int
fimuls
loope
or
and
xchg
inc
aaa
xchg
sub
int3
leave
into
ja
cltd
push
das
mov
icebp
or
iret
lret
xchg
inc
lods
mov
and
inc
loop
or
mov
cmpsb
shr
pushl
push
cmp
inc
dec
outsl
pop
pop
je
inc
dec
push
ret
mov
fsubs
movsb
pop
sub
xchg
add
stos
mov
test
pusha
repnz
dec
mov
sbb
or
mov
pop
sub
lret
inc
add
into
cmp
cmc
or
mov
push
rorb
mov
shlb
out
arpl
incl
imul
je
enter
in
in
cmp
mov
cltd
xchg
or
adc
mov
js
ret
data16
mov
xlat
insl
rcl
xor
jnp
mov
jmp
stos
xor
out
sahf
in
jno
or
loope
push
inc
and
outsl
dec
int3
dec
cmp
inc
mov
notl
loope
jle
xchg
xlat
in
movsb
jl
sub
fwait
mov
dec
xor
leave
push
sbb
mov
test
stos
jb
icebp
mov
clc
sbb
xchg
mov
and
jg
jb
jg
out
dec
sub
push
fwait
pop
nop
lahf
sub
or
mov
divb
push
jge
daa
xchg
mov
mov
jae
vunpcklpd
or
inc
inc
scas
lds
sbb
aas
pop
xor
cmp
lret
cmp
movsb
cld
dec
mov
and
mov
dec
dec
xchg
sahf
pop
sub
fidivrs
xchg
xor
sub
ja
out
pushf
jbe
cmpsb
push
xchg
clc
sub
mov
loopne
inc
aam
or
add
mov
cmc
push
xchg
js
inc
outsb
adc
insb
mov
mov
int3
cmp
sbb
mov
mov
pop
fistl
jbe
movsl
jge
sbb
repz
inc
and
stc
mov
xchg
dec
jnp
sub
outsl
push
jo
idiv
pop
inc
icebp
push
pop
popa
inc
cld
sti
mov
test
mov
outsl
je
xor
adc
in
xor
pop
lcall
adc
mov
out
cmpsb
mov
bound
cs
addr16
push
test
push
push
int3
sti
sbb
sti
in
daa
hlt
push
xchg
lret
mov
sub
cmp
sub
out
cmp
ds
pop
mov
sub
lret
fistpl
lods
stc
adc
sub
xchg
icebp
mov
mov
das
sahf
addb
cmc
jbe
cmp
or
daa
shrb
into
xlat
mov
mov
xor
lods
aaa
std
divl
dec
inc
inc
lret
cmpsb
or
inc
push
inc
mov
ret
xchg
stc
daa
xchg
and
mov
pop
push
xor
jge
and
or
adc
dec
sub
idiv
sub
pop
and
lea
int3
push
shr
push
push
inc
mov
imul
les
mov
jl
push
xchg
iret
or
jno
push
fwait
hlt
push
xor
aas
out
mov
repz
lret
outsb
pop
jno
sbb
mov
mov
mov
inc
cld
and
cs
filds
test
jb
push
hlt
daa
loopne
push
xor
test
xor
movsb
xor
pushf
sbb
add
cmp
popf
rcrl
movsl
ret
mov
mov
sub
stc
push
imul
jmp
test
push
imul
jmp
out
filds
xor
xor
cli
dec
sarb
movsb
dec
cmpsb
lods
mov
mov
mov
lds
popa
adc
loop
mov
fs
pop
insl
and
sbb
mov
ja
test
xor
push
sub
das
xchg
xor
or
mov
or
sti
sbb
out
out
jmp
scas
fimull
lea
pop
in
mov
rcrb
add
loopne
rclb
es
cli
sbb
xchg
idivl
or
movsl
rcrl
mov
arpl
and
cltd
mov
pop
mov
ret
call
sub
cmp
lods
xchg
cltd
je
or
ja
loope
inc
in
lock
jno
popa
mov
addr16
aam
sub
dec
pusha
adc
jp
adc
rcr
pop
cld
inc
add
mov
xor
jmp
jecxz
les
pop
push
mov
or
push
mov
outsb
pop
xchg
add
ret
add
xchg
mov
push
mov
cmpsb
shlb
leave
fsubl
xor
cmpl
mov
andb
mov
jo
movsb
subl
dec
jb
pop
rolb
adc
gs
sbb
push
dec
insl
jae
rolb
stc
jle
adc
in
nop
cmp
rcl
stc
sahf
pop
push
add
lds
push
push
xchg
push
pop
mov
mov
clc
loop
stos
adc
in
shlb
in
outsl
push
daa
or
and
xchg
sub
into
test
xorl
jmp
cmp
das
sub
scas
adc
das
ud0
pop
mov
xchg
add
push
xor
sbb
sub
aas
xchg
ret
aas
scas
pop
or
scas
inc
jle
mov
mov
mov
stos
arpl
sbb
and
xor
ljmp
lods
add
daa
push
mov
outsl
sub
dec
into
popa
or
xchg
faddl
das
dec
out
xchg
xor
lods
mov
lahf
push
fmuls
adc
adc
push
push
aas
sub
in
and
loop
pop
mov
outsl
pop
stc
test
ds
loopne
cmp
leave
cmp
mov
mov
add
shl
cld
stos
fucom
mov
jae
pop
int3
fwait
or
data16
jmp
jb
faddl
loop
rolb
lods
and
mov
loope
mov
fcoms
xchg
push
sbb
xchg
popaw
xlat
test
mov
pop
dec
xchg
jle
mov
jp
adc
jne
arpl
push
lods
loope
mov
jb
mov
adc
sub
sbbl
jnp
fildll
pop
test
lret
inc
pop
xlat
or
stos
lock
pop
or
and
inc
stc
aas
xlat
mov
and
mov
inc
mov
jle
mov
sbb
lret
mov
data16
iret
out
xchg
in
xchg
xchg
mov
and
dec
cmpsw
rclb
inc
enter
lret
sti
fstpt
pop
mov
xchg
outsl
pop
clc
rcrb
sub
fsubr
jo
cs
dec
setb
and
mov
push
test
jecxz
xor
je
sub
adc
dec
or
jb
cmc
fidivrs
mov
xorl
sbb
xchg
push
sbb
das
add
das
xchg
sub
jecxz
fisubl
test
les
jp
enter
mov
popa
pop
sub
sub
out
mov
fmull
mov
stos
or
jle
ljmp
daa
daa
in
out
lea
jl
sbb
lret
dec
push
aaa
mov
xor
xchg
mull
xchg
call
cmp
lods
jno
adc
loopne
fisttpl
cmp
xchg
jl
aas
fiadds
cli
lcall
xor
aam
int
push
push
cmpsl
in
pop
test
inc
sahf
dec
pop
push
pop
and
repz
xchg
in
push
cmp
repnz
pop
push
mov
scas
lods
je
add
and
bnd
lods
pop
lret
xor
lret
rcr
and
sbb
in
push
and
psrlq
xchg
aaa
pop
mov
mov
mov
call
jmp
loope
and
and
pop
lret
ficompl
stc
int
fsubl
lcall
fwait
cs
sub
mov
stc
pop
mov
nop
adc
inc
sbb
or
mov
push
add
out
sbbb
pop
sbb
fmull
mov
test
mov
shl
mov
push
in
sbb
out
sbb
orb
jb
sub
xchg
icebp
pop
out
jno
sbb
cmp
call
inc
mov
and
mov
in
stos
test
mov
aas
or
stos
movsl
sbb
shll
and
outsl
xor
clc
and
xlat
out
sahf
and
add
aam
adc
jmp
cli
lahf
gs
fs
not
adc
mov
cmp
rcrl
lods
mov
xlat
rcr
fndisi(8087
rorb
popf
sub
leave
arpl
jg
dec
outsb
inc
jecxz
cmc
xchg
adc
sub
loopw
pop
int
jne
iret
add
es
push
scas
idiv
push
rclb
mov
mov
pushf
loopne
dec
pop
cmp
jmp
mov
std
cmp
mov
test
shrb
mov
out
nop
lcall
test
iret
and
or
or
pop
mov
sub
lret
inc
inc
xchg
jle
sbb
mov
push
adc
repz
aam
cs
rcll
mov
sub
add
xchg
push
push
ds
cs
inc
repnz
int
sti
ret
mov
das
gs
and
cli
in
push
dec
or
sub
mov
push
pop
in
lds
cmp
fwait
jno
ret
xchg
add
lret
cmc
test
inc
cs
bound
xchg
pop
repnz
mov
clc
lods
dec
fldl
loope
mov
repnz
push
jge
jge
push
xor
andl
mov
mov
add
hlt
fisttps
scas
jp
jle
pop
cmp
dec
mov
fmul
adcl
imul
mov
adc
or
mov
in
hlt
ss
mov
dec
movsb
fwait
jl
hlt
pop
lock
mov
jb
jp
add
mulb
into
ja
inc
scas
adc
inc
push
xor
pop
push
mov
cltd
addr16
mov
fsubrs
mov
inc
mov
enter
arpl
aad
mov
fbld
mov
or
xor
mov
cmp
jo
inc
aaa
movsl
mov
mov
mov
mov
lahf
cmpsl
pushf
scas
push
fistpll
movsl
push
movsl
fisttps
jae
push
std
push
iret
jl
das
xchg
push
xchg
mov
lcall
cmp
je
pop
pop
jnp
sbb
mov
cmpsl
loop
test
fwait
mov
js
inc
push
insb
xor
addr16
pusha
or
out
dec
cmp
int3
jl
mov
sar
dec
gs
xchg
mov
and
xchg
out
and
sbb
xor
push
push
adc
dec
cmc
dec
sbb
js
scas
pushf
sbb
sbbl
popa
js
push
fwait
mov
pusha
adcb
hlt
outsb
int3
pushf
fdivrl
test
cmp
jb
mov
ljmp
jge
cmpsb
ja
lahf
in
mov
psraw
mov
jbe
push
pop
xor
test
das
pop
xor
mov
outsl
xchg
cmp
lods
enter
call
stos
jp
pop
aaa
push
adc
repnz
mov
out
xchg
cmpsb
adc
lods
int
lret
cmp
pop
loop
out
jne
idivl
push
imul
or
and
insb
pop
and
popa
mov
movsb
jecxz
andl
cmp
aas
xchg
faddl
lods
xchg
dec
stos
pop
jmp
into
cs
mov
adc
mov
in
xor
lea
insb
pushf
mov
jb
fbstp
xchg
sbb
bound
mov
cmpsb
push
std
rolb
xor
fmuls
push
push
lret
or
sub
mov
fimull
xchg
popa
cmpsl
mov
xor
nop
mov
jnp
mov
out
inc
inc
sbb
jo
dec
out
ljmp
add
xchg
hlt
push
or
cld
imulb
jp
pop
jecxz
pop
lods
xor
inc
repz
sub
arpl
icebp
xor
dec
mov
fstp
aam
test
cmp
loope
int
js
notl
mov
or
xlat
xchg
js
mov
lret
xor
mov
push
lret
push
dec
lret
pop
dec
dec
arpl
sbb
test
push
cmp
inc
clc
cmc
push
lods
data16
mov
int
and
call
rorb
in
lock
scas
icebp
shll
mov
cld
std
mov
loop
gs
mov
lret
jmp
in
pop
jns
sti
mov
repz
adc
out
daa
test
cmc
mov
arpl
adc
test
or
loop
int
push
enter
aas
dec
jmp
imul
and
push
push
xlat
in
mov
in
sbb
jp
inc
dec
out
mov
aam
test
inc
fimuls
mov
insl
cmpsl
jbe
push
test
add
loopne
arpl
xor
mov
ss
cs
add
ret
outsl
push
std
and
cwtl
ljmp
testb
js
add
fiadds
mov
sbb
mov
mov
pop
adc
aas
cmp
push
mov
or
sbb
dec
jno
dec
das
add
push
aas
movsl
lock
cwtl
arpl
inc
test
inc
incb
push
add
add
mov
into
xchg
jecxz
add
adc
jge
mov
or
loopne
xchg
pusha
sub
popa
leave
in
xor
test
roll
add
das
xchg
push
jno
cs
xchg
repnz
insl
insb
mov
jno
test
add
or
sbb
and
fwait
mov
mov
mov
pushf
mov
lret
cld
pop
sub
or
cmp
xchg
xor
cwtl
sbb
je
rcrl
repnz
cmp
mov
sbb
jns
jecxz
xchg
stc
testb
test
push
adc
jl
add
test
dec
insl
pop
xchg
incl
mov
xchg
gs
insl
xchg
out
mov
push
push
popa
mov
dec
insl
mov
sub
cltd
ffreep
repz
roll
mov
push
mull
or
or
mov
adc
aam
or
jne
jb
dec
add
jns
cmpsl
inc
inc
cmp
lret
jns
ret
mov
dec
das
fldenv
inc
mov
sar
cmp
inc
xor
notb
adc
add
xchg
xchg
or
imul
mov
mov
pushf
out
jae
xchg
adc
aas
mov
adc
fwait
shl
int3
push
fdivrs
enter
and
mov
arpl
cmc
lea
jb
ljmp
in
jo
push
sbb
xchg
insb
xor
xor
mov
inc
mov
push
mov
leave
add
fisttps
or
jb
pop
ftst
pushf
mov
sbb
aas
cmp
test
cmpb
cmpsb
stos
ss
xorb
mov
sbbb
loop
xor
push
add
lcall
adc
test
mov
sbb
pop
les
lods
push
in
sub
add
or
mov
int
fwait
addl
mov
xchg
fildll
xchg
popa
inc
lahf
push
inc
addr16
mov
sbb
mov
jno
lea
sub
sahf
scas
pop
sub
inc
mov
movsl
loope
stc
mov
fsubl
xlat
mov
and
iret
mov
sub
adc
cld
jno
stc
pushf
in
pop
or
jnp
inc
jg
push
mov
mov
unpcklps
and
lea
push
cmpsl
adc
pop
ljmp
mov
repz
daa
icebp
sahf
fisubs
or
sbb
dec
inc
daa
mov
adc
add
jge
mov
xor
xor
push
movsb
rcrb
push
movsb
dec
sbb
sub
xlat
mov
inc
sbbl
aam
pop
cltd
lods
or
pushf
ret
daa
decb
sbb
inc
dec
inc
sbb
std
xchg
mov
cwtl
sub
test
arpl
les
popf
nop
jo
data16
aaa
les
aas
scas
sub
inc
push
xor
aam
sub
daa
jo
xor
push
cmpsb
nop
pushl
sbb
or
and
clc
mov
add
jle
rcr
arpl
sbb
dec
add
repz
xchg
sahf
xorl
cli
adc
adc
js
cmp
inc
imul
cwtl
pop
sub
int
mov
sti
mov
pop
rcl
js
test
stos
fsubrl
fldcw
inc
out
cmp
insb
push
xor
mov
cmpsb
arpl
push
out
inc
push
pop
outsl
adc
jmp
inc
pop
je
pop
cmpsb
lcall
in
push
jae
dec
add
mov
jns
add
and
mov
outsl
sub
jns
and
mov
lock
cli
stos
movsl
push
enter
sub
iret
cmp
or
cli
imul
push
ja
call
out
ljmp
jge
dec
inc
and
mov
pop
roll
jbe
jnp
cmp
out
bound
mov
jle
iret
dec
mov
sub
out
stos
or
inc
or
push
scas
movsl
cmc
outsl
lcall
pop
stos
insl
lods
insb
or
int3
in
repz
xchg
sti
ret
cmp
add
fimull
loop
mov
push
sbb
notb
cli
add
pop
test
inc
pop
mov
ds
or
out
fistl
popl
nop
pop
cwtl
ds
mov
aad
sbb
adc
jnp
cmp
orb
aad
sub
cmpl
push
mov
jl
inc
mov
push
cld
pushl
test
inc
sbb
inc
lock
mov
arpl
mov
cmp
jl
repnz
jmp
popf
test
fnstcw
sbb
roll
adc
lods
mov
nop
push
mov
push
xchg
mov
aaa
jne
adc
shlb
pop
pop
mov
xchg
lock
adcb
sbb
imul
int
lret
hlt
les
test
hlt
add
decb
sbb
lret
sub
pop
repnz
in
and
ljmp
enter
mov
mov
pop
mov
or
scas
jne
push
jp
push
fistpll
mov
out
loop
mov
ja
lahf
adc
push
jae
mov
xor
out
pop
inc
cltd
or
imul
mov
inc
dec
dec
jnp
lret
enter
dec
xorl
enter
out
mov
mov
pop
push
cmpsl
out
mov
popa
xor
sbb
jle
mov
lock
in
cmpsl
adc
adc
cli
mov
push
push
pop
mov
xchg
push
xchg
cmpsl
je
sub
stc
pop
adc
mov
nop
mov
dec
push
mov
repnz
insb
sarb
fcompl
mulb
push
stos
addl
jge
and
cli
fnstenv
mov
xor
fbld
ljmp
lock
jg
popa
push
jns
stc
sti
lods
dec
push
jno,pt
jae
loope
jecxz
jae
ret
ret
lahf
mov
bound
sbb
adc
int3
xchg
add
push
sub
jge
sub
mov
dec
scas
idivb
jae
es
shr
in
mov
leave
clc
test
push
xchg
jae
push
es
inc
mov
fildl
in
jns
pop
fildl
andb
sbb
add
test
scas
in
daa
sbb
pop
xor
xchg
xchg
rcrb
push
bound
xor
xor
stc
in
fwait
sbb
and
cmpsl
jg
fnstenv
insl
bound
rcll
or
dec
aam
and
cmp
testl
daa
aam
jg
repz
test
outsl
addr16
mov
inc
jo
popa
mov
sahf
sbb
orl
mov
add
add
jb
mov
ljmp
test
jp
out
lcall
pop
sbbb
fbld
mov
jge
cmpsb
pop
idivb
repz
push
mul
out
lods
fstps
adc
and
cmp
mov
and
and
sub
xor
movsl
pushf
adc
daa
and
and
jnp
lods
sub
jne
fidivrl
push
and
sub
test
bound
imul
loop
mov
in
leave
push
push
sbb
push
mov
ret
or
mov
mov
addr16
incl
mov
push
adc
stos
loopne
fimuls
outsb
cmc
lea
stos
adc
lock
sub
mov
cmp
cs
scas
insl
ja
push
in
mov
xor
mov
hlt
xchg
adc
mov
jg
and
dec
sti
inc
xchg
in
mov
jno
cmpsl
cltd
mov
mov
aad
jns
xchg
add
pusha
adc
mov
xchg
jle
mov
sbb
ret
ljmp
xchg
cmp
mov
jnp
adc
in
getsec
pop
pusha
adc
lcall
or
std
mov
cmp
mov
lret
ljmp
and
jg
movsl
nop
adc
add
lret
icebp
cmpsb
pushf
push
aas
fwait
sahf
mov
xchg
mov
mov
les
mov
push
add
inc
cli
cmp
jl
enter
xchg
xchg
in
inc
bound
std
iret
int
push
pop
repz
or
test
add
cmc
mov
ret
pop
fbstp
mov
pop
or
sub
leave
je
shll
mov
dec
jnp
hlt
pop
mov
insl
hlt
adc
mov
jbe
loop
inc
adc
xor
leave
neg
cmp
stc
push
add
inc
jbe
xor
mov
sub
subb
mov
ficoml
or
leave
in
mov
sbb
xor
sub
dec
test
jmp
dec
into
pop
lret
outsl
mov
arpl
add
call
cmp
imul
xor
loope
xorb
shll
jno
andl
sub
pop
add
mov
es
rol
mov
cmp
mov
jb
inc
movsb
jmp
inc
je
leave
xchg
xchg
cli
pop
mov
adc
lock
and
or
nop
sbb
aaa
push
mov
xor
cmpsl
push
addr16
scas
cld
mov
stc
dec
pushf
mov
loop
pop
outsl
mov
mov
outsb
outsl
fcompl
sahf
push
mov
mov
hlt
cli
ffree
mov
sbb
jl
mov
dec
inc
loope
repz
mov
mov
xchg
push
mov
mov
pop
pop
push
jecxz
add
xlat
rclb
fwait
bound
cmp
sbb
xchg
cmp
fiaddl
sahf
daa
pop
mov
push
arpl
mov
sbb
push
inc
pop
jge
add
sar
xor
dec
cmp
mov
jecxz
imul
push
push
scas
mov
roll
xor
leave
filds
stos
cmp
fwait
dec
jo
add
sub
adc
sti
mov
cmp
push
and
ljmp
mov
sbb
addb
fwait
call
push
cwtl
fldenv
ret
test
pop
enter
in
jge
pop
cmp
xchg
xchg
jmp
cmpsb
pop
cmp
in
ljmp
mov
sub
jge
push
adc
or
popa
cmp
cmp
test
xchg
outsl
sub
incl
je
out
lahf
aaa
mov
and
xchg
sub
mov
jmp
jno
push
mov
out
xchg
pop
jecxz
and
cmp
adc
pop
xor
pop
addr16
je
xchg
es
test
push
addr16
ja
inc
inc
adc
inc
outsl
lret
pop
scas
mov
adc
fistpll
push
js
jecxz
sbb
iret
push
test
lea
ds
int
jo
pushl
mov
sub
xor
jecxz
inc
add
dec
jo
push
adc
cwtl
xchg
es
dec
jae
negb
cmp
popa
aad
xchg
dec
insl
ss
inc
mov
inc
data16
cmpl
cmp
fucom
dec
cwtl
push
push
sbbb
sbb
adc
mov
mov
outsb
inc
stos
push
adc
mov
je
adc
adc
push
dec
and
push
mov
pop
bound
daa
inc
jp
movsb
and
sti
mov
sub
mov
inc
enter
dec
icebp
jle
dec
push
lds
adc
enter
inc
outsl
inc
pusha
mov
pushf
sub
enter
daa
jo
clc
push
xor
xchg
inc
pop
les
out
in
jg
mov
cmpb
sbb
cmp
or
adc
cmp
test
push
dec
loope
stc
cmpsb
xchg
cmpsb
clc
rol
daa
xchg
fldcw
jbe
insb
jbe
lods
push
dec
add
fstpt
inc
dec
push
mov
push
dec
into
shll
push
out
and
popf
mov
cltd
mov
idivl
aas
sub
add
push
imul
jecxz
mov
or
or
xchg
jecxz
ss
push
mov
das
push
or
stos
cltd
xor
jne
pusha
int
ret
xor
fildl
nop
ss
mov
adc
mov
cli
mov
cli
jmp
pop
xchg
outsl
cli
mov
jmp
dec
mov
pushf
jne
push
loop
or
pusha
scas
sbb
dec
sbb
jae
push
mov
mov
push
addr16
mov
jle
mov
mov
lret
outsb
imul
lds
hlt
inc
imul
movsl
arpl
pop
imul
inc
xchg
popa
push
cmp
aaa
push
test
or
stos
cld
in
repz
bnd
inc
pusha
roll
push
xchg
repnz
jae
sub
jmp
adc
sub
shll
or
push
sbb
and
fs
sub
push
out
cltd
sub
icebp
sub
sbb
mov
adc
js
jno
push
test
in
jb
add
push
mov
mov
icebp
ret
inc
inc
and
jle
fwait
mov
shll
mov
shll
dec
bound
fisubs
jns
push
mov
mov
repz
push
outsb
ds
dec
sub
ja
movsl
cmp
imul
insl
ret
rcr
add
sarb
mov
cmpsl
scas
leave
cmp
fmuls
sub
pop
mov
clc
addr16
shlb
mov
test
xchg
nop
pop
jmp
inc
sahf
es
xchg
mov
insb
pop
sbb
movsb
inc
lahf
fnstcw
fldl
xchg
dec
sbb
adc
push
ret
mov
inc
shl
pop
and
push
enter
inc
sbb
aad
jge
shlb
dec
int
mov
mov
cmp
das
mov
mov
add
pop
jp
loopne
subb
pusha
shr
movsl
test
das
jnp
adc
in
insl
push
dec
mov
int
jmp
pushf
adc
and
adc
cli
pop
and
inc
and
dec
adc
insl
mov
mov
int3
in
mov
mov
lods
xchg
out
cli
lea
repz
ljmp
cmpsb
adc
mov
int3
ja
mov
mov
jne
andl
xchg
dec
daa
inc
xor
out
xor
rol
mov
or
sub
xorb
mov
mov
mov
dec
xchg
inc
aad
cltd
push
inc
pop
inc
out
stos
inc
sub
mov
jns
ret
les
adc
aam
adc
jo
lods
sbb
bnd
jno
cmc
mov
sbb
pop
mov
fs
aad
lods
or
inc
icebp
mov
repz
sub
aad
cmp
cmp
fwait
jb
push
dec
add
adc
lcall
push
pushf
cmc
or
clc
call
sbb
dec
cs
xchg
hlt
decl
inc
stc
sub
xchg
push
or
or
loopnew
fs
inc
pop
inc
xor
jne
scas
cmp
pop
pop
in
gs
fucomi
scas
pop
call
shll
int
mov
inc
push
add
adc
xchg
sub
jle
pop
scas
pop
shll
pop
xchg
sub
dec
aaa
icebp
and
mov
addr16
xor
sbbl
in
test
push
mov
adc
or
add
ja
jae
push
ja
xchg
cmp
sub
imul
or
push
dec
and
das
jne
fisubrs
mov
xor
mov
jne
or
jg
jnp
lret
add
jo
sub
lock
pop
dec
aas
push
add
ds
ficompl
dec
push
cmc
adc
cld
inc
aad
adc
fistl
mov
sub
fstpl
aam
mov
or
stos
jae
dec
adc
rep
adc
gs
jge
fistpll
imul
or
jo
data16
in
mov
das
dec
pop
aad
imul
in
repz
int3
mov
mov
add
mov
mov
sbb
test
lret
mov
cli
dec
pop
cmp
mov
and
das
lahf
stos
mov
add
mov
mov
pushf
arpl
stos
adc
and
scas
sub
add
stos
cmp
xor
push
cmc
aas
hlt
lock
sbb
cmpsl
sub
outsl
sahf
mov
sahf
aad
nop
mov
outsb
cli
sti
cmp
cmp
js
pop
or
fwait
sub
adc
clc
lret
xlat
push
popa
aas
adc
out
pop
mov
aas
xchg
xchg
out
push
fistps
cmp
sti
jecxz
sub
fidivrl
push
mul
mulps
cs
mov
and
ja
ret
adc
pop
cmp
lahf
test
mov
mov
mov
or
jg
push
jns
mov
mov
test
add
mov
sub
dec
and
popf
push
mov
int3
loope
sbb
or
loop
stos
ja
and
mov
jnp
fucomp
lcall
mov
loop
test
mov
fwait
sti
dec
in
fmuls
xchg
pusha
call
lret
pop
fldln2
or
dec
or
and
fmulp
dec
das
out
and
es
insl
xchg
cmpsb
ja
sbb
bound
pushf
dec
xadd
call
cmp
je
sarb
lret
ret
mov
cmpsl
jae
rorb
xchg
je
cmp
jae
popf
sahf
push
insl
sbb
sahf
fnstcw
adcb
push
fisubs
lods
dec
fisubl
jg
adc
cmp
mov
test
js
repz
hlt
andl
dec
ret
jecxz
jbe
outsb
pop
frstor
inc
aaa
into
fisttps
push
mov
jecxz
mov
sbb
fnstsw
dec
xor
cmpsb
jno
sbbb
outsb
lods
in
repz
jb
shll
call
repnz
sub
push
cmp
sti
std
inc
lods
call
dec
stos
jno
or
clc
lods
adc
jo
cwtl
andb
fmull
in
stos
pop
fstl
add
push
mov
xchg
xor
sub
mov
sub
inc
stos
or
daa
push
inc
sarl
aaa
popf
int
inc
xchg
jge
xchg
and
lcall
mov
addr16
inc
add
mov
sbb
jne
dec
loop
jg
out
and
mov
mov
rolb
test
nop
inc
pop
dec
stos
and
sbb
mov
scas
test
dec
cltd
or
push
std
pop
jle
adc
std
mov
ror
hlt
leave
test
and
lds
aaa
mov
cmpsb
dec
add
call
ret
add
out
and
pushf
xor
shrb
adc
and
out
push
cmp
mov
jp
fwait
out
lods
loop
sbb
sub
jno
adc
jo
call
xor
call
orl
add
mov
jmp
or
push
lcall
ret
int3
fsts
sbb
push
fadds
std
mov
fnstcw
mov
cmpsl
add
pop
mov
scas
sbb
jp
push
sbb
stos
sti
mov
int
jb
std
cmc
jge
icebp
popa
xorl
and
inc
mov
cmpl
mov
xor
mov
jmp
inc
aam
lcall
movsb
iret
mul
sahf
lods
adc
shlb
loop
lret
shr
lahf
push
mov
cmp
mov
dec
std
ffree
bound
xchg
repnz
shlb
cwtl
ret
xor
push
clc
out
xor
fisttpll
sub
icebp
xor
lcall
add
fldenv
inc
js
mov
fstp
add
mov
mov
outsl
repz
sahf
test
sub
gs
in
dec
ljmp
fsubr
das
mov
icebp
or
add
add
loopne
inc
in
or
sub
jge
mov
std
pop
add
int
scas
daa
push
ss
cltd
push
pop
add
jl
sahf
sahf
xor
lret
mov
movsb
in
test
ret
clc
movsb
nop
pop
xchg
xchg
sbb
adc
sbbl
mov
adc
mov
lods
mov
push
pop
push
enter
push
pop
roll
loop
jg
in
mov
pop
adc
bound
in
or
jle
mov
loopne
pop
push
rolb
dec
and
xchg
dec
testb
outsl
stos
pop
and
push
lods
scas
pop
add
fsubs
in
icebp
or
jo
push
push
add
iret
hlt
shlb
mov
push
or
sub
insb
repnz
mov
mov
pop
inc
mov
adc
andl
in
in
hlt
leave
pop
or
sub
imul
pop
lea
jl
push
push
jo
sub
in
mov
mov
sub
and
xchg
out
push
dec
mov
pop
inc
addb
dec
pop
push
hlt
push
xlat
pop
xchg
mov
fdivrs
inc
dec
sbb
jne
cmp
cltd
mov
dec
jns
lds
into
pop
and
lea
negb
pop
mov
js
or
xchg
add
arpl
sub
cmp
mov
xchg
out
sub
cmp
xor
sbb
jnp
in
fwait
jg
xchg
imul
pop
xchg
jo
ja
inc
jae
int3
dec
pop
xchg
mov
jae
fimull
mov
leave
push
cmpsl
int3
ja
loope
sub
mov
inc
jmp
xlat
push
sahf
dec
shlb
outsb
jmp
fnstsw
outsl
xlat
loop
das
jl
push
fwait
mov
out
sahf
jb
mov
pop
cld
pusha
repnz
paddsb
jmp
xchg
mov
sub
and
out
push
data16
mov
outsl
aad
jns
nop
mov
pop
pop
sub
daa
or
mov
mov
mov
mov
fsubrp
sbb
cmp
shlb
xchg
pop
ss
fdivl
popl
andb
sarl
lods
xchg
loop
int3
mov
mov
mov
rcr
int3
jp
pop
out
mov
jno
mov
loopne
cmp
adc
adc
negb
adcl
mov
fnstenv
sbb
addr16
push
movsb
cli
in
pop
push
rclb
into
rcl
test
sbb
sub
loop
add
push
adc
test
mov
out
fisubl
dec
test
test
dec
iret
arpl
cld
mov
adc
nopl
push
mov
daa
mov
adc
lcall
in
cmp
and
push
inc
loope
xor
fdivs
mov
gs
xchg
cmp
jne
xor
aaa
aam
adc
pop
mov
daa
push
stos
push
adc
mov
fmulp
push
stos
data16
jbe
outsl
outsb
mov
cmpsb
adc
ret
dec
mov
cltd
sub
add
adc
mov
jmp
lock
push
fisubs
cs
out
lods
cmp
adc
mov
mov
adc
jbe
and
sarb
push
insl
mov
lods
pop
cli
add
arpl
mov
mov
pop
add
jns
call
movsb
cmp
imul
jns
inc
inc
push
shrl
xorl
jmp
and
push
mov
out
add
addr16
xor
xlat
and
sete
repz
xor
fsubs
test
xor
sbb
jb
std
xchg
fldt
test
adc
hlt
xchg
push
loope
jl
xchg
mov
pop
test
stc
or
jno
or
jnp
scas
add
imul
push
adc
xchg
add
into
pushf
mov
and
std
mov
jg
pop
call
mov
push
cmpsb
bound
ds
pop
sbb
mov
mov
movsl
negl
lods
scas
push
dec
push
rcrl
loope
and
mov
cmp
inc
mov
push
stos
sub
push
dec
mov
adc
jne
fs
jo
test
icebp
in
and
subl
xchg
push
push
adc
adc
jbe
pop
inc
mov
inc
jno
mov
test
xchg
adc
jne,pt
push
loope
pop
gs
jecxz
pop
aad
push
sbb
xor
xor
std
incb
or
pushf
jmp
mov
add
icebp
lods
or
insl
mov
cmp
cs
xchg
ss
mov
fistpl
mov
mov
jecxz
fnstcw
xchg
sub
fdivs
shl
xchg
shrl
add
xlat
sub
mov
js
push
mov
jo
or
dec
or
dec
cmp
push
adc
ficomps
or
sbb
mov
adc
cmp
push
sbb
les
aaa
cld
inc
hlt
xlat
and
outsb
dec
cmp
jmp
fstpt
fsts
test
xor
clc
push
test
popa
std
out
xchg
xor
dec
sub
sub
loop
jne
cli
cmp
or
mov
shll
fstpt
mov
stc
dec
out
mov
jnp
jle
dec
fnstsw
repz
add
lret
mov
mov
mov
outsl
fldenv
sahf
je
and
add
push
xor
xor
xor
mov
stc
sbb
cmpsl
jbe
lahf
jnp
dec
mov
add
iret
xchg
cmp
out
das
mov
js
jg
enter
ljmp
jns
and
adc
cmc
outsl
xchg
jne
testl
jmp
sbb
mov
jbe
orl
add
es
jge
push
les
mov
nop
lds
sahf
mov
int
fimull
outsl
push
scas
xor
hlt
pop
lock
sbb
or
fldcw
shlb
xchg
test
jns
ret
pop
add
in
cmp
sti
xchg
mov
mov
outsl
and
adc
fstl
into
xchg
je
xor
out
xor
jae
shlb
bound
pop
jo
jb
mov
rcrb
fiadds
in
pushf
adc
xchg
cs
jge
or
clc
mull
je
cli
push
ja
sahf
andb
add
and
cmp
push
in
jnp
aam
in
xchg
xor
leave
gs
xchg
push
test
sbb
dec
xor
addl
lds
add
stos
xor
dec
push
movsb
adc
not
fistpll
outsl
cmp
roll
insl
fdivrs
jge
pop
and
outsb
cmp
sub
or
pop
or
scas
cltd
loop
scas
jmp
cmp
add
outsl
shlb
mov
popa
sahf
mov
leave
call
xchg
mov
xlat
imul
outsl
adc
pop
in
or
mov
mov
fs
mov
pusha
fistpl
dec
fsts
cmp
pusha
cltd
xchg
dec
insl
dec
jbe
into
inc
jbe
pop
sub
mov
lea
scas
repz
inc
sub
out
orl
dec
add
and
sub
xchg
pop
inc
cmp
lds
repz
fldcw
shlb
call
int
sahf
jbe
or
push
imul
cmp
adc
aas
pop
sub
mov
lods
or
fbstp
inc
cmp
call
scas
xchg
push
dec
gs
sbb
rcrb
add
or
lock
aam
xchg
or
lea
and
mov
sub
dec
lret
std
pop
pop
add
push
scas
fstpl
sub
pop
pop
iret
sahf
jecxz
fnstcw
add
dec
add
mov
cwtl
loop
imul
popf
xchg
sbb
xor
xor
xor
loopne
push
mov
push
shrl
cmp
frstor
andb
xchg
mov
inc
sahf
push
push
dec
ss
push
pop
add
inc
mov
jmp
js
xor
dec
sbb
gs
dec
xor
jne
or
fs
gs
fldt
jae
pushf
cmp
cs
fimuls
sti
nop
adc
or
xchg
mov
inc
dec
dec
fsubrs
lea
push
cltd
pop
jbe
adc
std
fidivl
mov
inc
mov
mov
test
mov
mov
inc
sub
or
jp
lock
hlt
fdivl
cmp
add
test
mov
mov
outsl
fwait
inc
and
clc
jp
pop
ja
into
nop
pushf
xchg
add
dec
sub
adc
hlt
mov
dec
sbb
aad
add
es
pop
das
fwait
jb
push
adc
adc
lcall
out
test
inc
pop
sbb
cmp
in
cmpsl
pop
cltd
mov
je
mov
lahf
outsl
fsubrs
and
jns
stos
or
mov
adc
arpl
ret
mov
std
test
xchg
xlat
call
addr16
or
popf
test
mov
cmp
mov
iret
xchg
ds
xchg
testb
adc
fcom
cmp
dec
jl
jnp
scas
pop
mov
repz
sbb
mulb
test
test
push
repnz
ficomps
das
add
hlt
int3
gs
dec
ss
leave
test
test
testl
sbb
test
jo
insb
add
incb
insb
adc
and
dec
cltd
loopne
lahf
sub
mov
jae
roll
inc
iret
and
or
mov
nop
pop
les
xchg
push
xor
rcll
loopne
out
fucomip
xchg
adc
jg
xchg
mov
dec
xor
inc
dec
push
orl
inc
adc
fadds
inc
js
or
jbe
leave
add
jmp
fsubrs
in
lcall
mov
test
jns
xor
push
aad
fadds
test
shl
fmulp
mov
adc
ja
inc
shlb
add
sbb
insl
cwtl
fs
pushw
push
mov
xchg
inc
push
shrb
je
dec
cld
mov
iret
into
xor
ret
mov
lret
jno
add
shrb
pop
iret
cmp
insb
outsb
rcrb
fwait
mov
ret
inc
out
and
jno
ds
xchg
mov
cmp
daa
aad
movsb
jb
scas
loopne
js
loop
test
mov
dec
mov
es
adc
lods
jecxz
and
push
add
xlat
and
mov
insb
dec
dec
enter
nop
jmp
cmp
pop
jp
xlat
push
jb
sub
popf
inc
adcb
mov
cmpsl
jg
imul
test
sub
fisubrs
or
in
push
xor
sbb
sbb
mov
jge
inc
sbb
adc
ret
idivb
mov
aam
cld
call
sub
fst
cmp
xchg
mov
and
mov
lret
pushf
aad
imul
lods
push
sbb
les
test
arpl
inc
push
mov
stos
push
scas
mov
cmp
lcall
imul
ret
pop
out
mov
jl
leave
repnz
das
insb
lods
mov
add
test
push
insb
inc
lret
sbb
popf
cmp
imul
ret
mov
jo
adc
ds
jbe
add
xor
sub
push
jae
adc
jmp
push
xor
sub
xchg
pop
stc
int3
sub
dec
loope
xlat
loope
arpl
jle
jbe
pop
push
mov
adcb
lods
sbb
jp
fdiv
inc
adc
jge
cmp
call
mov
movsl
push
enter
jge
xor
xchg
adc
and
addr16
arpl
fdiv
cmp
mov
js
or
sbbb
pop
push
adc
fistl
xor
jno
movsb
dec
int3
jnp
popa
sub
stos
ret
loop
mov
or
test
inc
scas
adc
mov
xchg
test
mov
mov
add
roll
jge
xchg
lcall
fstps
pop
fstps
push
sahf
jp
in
fsub
repnz
jp
and
jbe
mov
cltd
jo
in
mov
adc
in
popf
bound
gs
adc
mov
ret
mov
mov
pop
je
scas
lcall
nop
in
incb
inc
fs
xor
popa
movsb
fs
sub
mov
push
or
cwtl
jg
pop
faddl
arpl
pop
push
decb
jno
loope
or
jecxz
cmp
lret
ljmp
xor
pop
mov
jg
fwait
addr16
push
mov
mov
into
les
fs
dec
test
pop
decl
incb
dec
sbb
mov
or
test
in
sub
sti
hlt
and
paddb
and
test
xor
ret
in
jmp
in
xchg
push
push
ljmp
ret
mov
ljmp
mov
lods
mov
or
mov
sub
lea
repz
mov
lock
mov
leave
jge
mov
imul
les
outsl
mov
xchg
cltd
pop
jg
adc
out
popf
ljmp
adc
fs
mov
shlb
push
mov
cmp
sbb
xchg
xchg
in
out
ja
in
push
out
insl
jne
xchg
cltd
dec
jnp
add
mov
cmpb
pop
sub
sbb
inc
sarl
insl
add
cmc
add
pop
lds
mov
pop
aam
cmp
mov
adc
jle
xchg
lea
ror
jmp
cld
in
dec
stos
int3
sti
clc
jnp
cmc
fistps
dec
pop
mov
repnz
fbld
mov
or
mov
lock
xor
adc
sbb
sub
xchg
popf
pop
negl
popa
inc
dec
push
nop
cmp
das
fsts
cmp
fmull
xor
cld
or
sbb
movsl
inc
and
andl
or
popa
out
lods
inc
int3
dec
imul
leave
nop
imul
push
cmp
push
stos
mov
push
jmp
xor
rcr
outsl
jne
ds
inc
jne
iret
xchg
mov
out
adcb
lock
sub
fsts
mov
shrb
gs
dec
push
mov
cmpsb
dec
sbb
cmc
pop
cmp
push
add
aas
and
add
sti
test
cmp
lods
das
cmpsl
stc
pop
fcmovne
stc
cltd
adc
sbb
fdivrl
ja
pop
shrl
sbb
jae
aas
repnz
daa
loop
xchg
xor
sub
sbb
push
test
gs
cmp
mov
movsb
cli
sub
ljmp
jmp
xor
dec
enter
and
push
cmp
mov
xorb
jmp
js
shlb
das
testl
adc
cmp
stos
mov
xor
mov
lret
inc
in
fsub
lock
dec
lret
mov
dec
out
mov
or
and
test
aad
shr
arpl
popl
hlt
fwait
and
pop
xchg
push
fbld
in
repz
popf
hlt
lock
jmp
insl
jnp
add
xchg
mov
lcall
or
sbb
fwait
xchg
or
test
inc
mov
lret
bound
out
scas
push
pop
dec
mov
add
inc
popa
popf
xchg
stos
iret
insl
in
lea
loope
mov
inc
clc
xlat
pop
out
aaa
mov
imul
cmpsl
mov
push
jmp
mov
das
cmp
test
int
test
inc
fcomp
add
sub
jns
das
cld
sbb
mov
or
and
fcoms
jg
mov
lcall
call
mov
outsl
or
repnz
daa
cmp
jmp
adc
cltd
into
in
andl
stos
in
mov
rcrl
push
jns
in
into
xchg
ljmp
insb
inc
mov
lahf
pop
ret
push
in
ds
stos
rclb
mov
fistpl
nop
ds
adc
pop
inc
movsl
adc
jbe
popa
rcrb
jmp
and
outsl
sub
stos
out
cli
pusha
fwait
dec
cmp
hlt
mov
sbb
imul
nop
pop
xchg
inc
movsl
roll
push
scas
sub
mov
pop
pop
sbb
push
and
jbe
test
jecxz
mov
xor
lock
and
movsl
lods
cld
test
shlb
frstor
pop
dec
fwait
sub
lods
es
xchg
inc
mov
insl
jnp
pop
inc
adc
sub
lahf
sub
out
mov
add
pop
cmp
js
push
mov
inc
mov
stc
jge
cmp
pop
test
cld
mov
in
mov
push
push
jne
sbb
adc
in
mov
fcmovbe
lret
gs
mov
push
sahf
imul
adc
daa
loopne
scas
sbb
mov
subps
pop
cmc
xor
imulb
test
sarb
rcl
out
push
inc
test
mov
std
lock
mov
cmpb
cmp
aad
or
nop
and
mov
push
push
inc
out
dec
mov
test
fwait
or
mov
mov
out
or
sti
cwtl
mov
or
sbb
daa
test
daa
aas
pop
dec
dec
xor
sbb
sbb
fcoml
loope
fidivs
push
dec
test
jp
dec
pop
pop
daa
mov
ficoml
int
addr16
xor
ret
test
cmpsl
aam
stos
mov
inc
jae
add
inc
cs
movsb
lret
ficoml
imul
lods
push
xchg
repnz
loopne
lahf
call
and
shl
push
jbe
inc
sbbl
jb
adc
push
jo
ret
jl
jg
mov
hlt
jecxz
and
jl
xchg
dec
mov
movsb
push
in
repnz
mov
fistps
pushf
push
mov
jl
inc
out
jg
sub
mov
xchg
cs
mov
hlt
adc
int
jo
inc
and
ja
pop
in
js
fs
loope
int
lea
clc
dec
stc
icebp
shl
fildl
xchg
aam
cmp
fcompl
add
loope
jl
pop
std
pop
leave
inc
push
jmp
mov
add
out
test
out
addb
fdivrl
lret
adc
pop
out
clc
sbb
test
dec
xor
inc
jmp
jno,pn
repnz
in
pop
lahf
jmp
push
xlat
adc
mov
mov
mov
lods
mov
mov
mov
add
xor
xchg
and
fists
je
inc
jae
dec
adc
adc
sahf
or
in
fcompl
movsb
outsl
fwait
pusha
mov
call
xchg
sbb
hlt
scas
or
pushw
stos
xlat
adcb
jle
push
mov
sub
dec
push
lods
push
lcall
psrad
dec
test
xor
jnp
lea
les
ficoml
shrl
ficomps
fwait
push
scas
js
fistpl
sub
add
bound
or
pop
insl
dec
or
mov
sub
mov
jb
dec
andl
in
adc
cmpsb
jmp
mov
cmp
inc
jg
and
mov
pop
shll
ss
scas
mov
adc
mov
sub
cmp
xor
xchg
mov
fdivs
push
aaa
push
cmpsb
jp
adc
arpl
in
loope
push
jmp
popf
pushf
sub
std
mov
fwait
cmc
fs
daa
arpl
in
out
daa
push
loop
jns
pop
xchg
pusha
arpl
in
inc
hlt
les
pop
cmpsl
mov
pop
sahf
push
insb
std
in
insb
jno
out
lds
sub
or
push
pop
jo
or
jp
lcall
xchg
lret
cmpsl
lret
js
inc
mov
mov
xor
sub
iret
xor
sbb
push
lcall
gs
pop
inc
daa
ja
mov
iret
fstl
or
clc
lock
sti
sbb
test
jecxz
adc
outsl
data16
cli
add
fisubrl
xchg
add
outsl
insb
loopne
loope
xchg
iret
add
insb
adc
inc
unpcklps
sbb
je
xor
outsl
inc
lods
dec
or
jecxz
xchg
push
sub
cwtl
adc
mov
push
clc
sub
movsb
fdivrl
inc
jnp
pop
dec
dec
repz
shrb
les
mov
xlat
cld
jb
push
enter
or
sarl
pop
lret
testb
mov
div
out
inc
cmc
repz
dec
and
jnp
js
xchg
adc
dec
repz
mov
divl
clc
xchg
sub
inc
add
mov
stos
mov
push
fwait
aam
fiadds
add
pop
or
pop
cmp
pop
into
cmp
imul
jns
sbb
mov
out
mov
mov
insb
xor
mov
lret
inc
pushf
bound
add
mov
mov
rolb
jne
lahf
jne
shrl
xor
gs
push
pop
into
out
push
adc
aam
xor
cmp
pop
lret
push
out
xchg
fsubrl
pop
dec
push
into
in
popa
pop
lret
scas
fisubrs
lds
xlat
sbb
pop
fldcw
lret
sbb
mov
dec
arpl
in
rcll
loop
jmp
dec
cmp
loopne
jecxz
jle
sbb
mov
jmp
in
lods
jmp
cmp
out
mov
sbb
mov
push
xchg
mov
pop
mov
in
sub
cld
mov
xchg
in
daa
mov
movsl
pop
sub
jno
nop
fbld
testb
pop
mov
lcall
and
mov
pop
add
inc
add
inc
jo
bound
jnp
je
sbb
ds
jmp
int3
je
add
lcall
inc
dec
decl
mov
and
mov
cli
and
push
jbe
mov
xor
outsb
call
adc
dec
pop
out
mov
xchg
fldcw
lcall
cltd
or
jbe
pop
xchg
mov
mov
jns
push
bound
cld
xlat
sub
or
mov
testl
std
adcl
stos
sub
or
and
push
ficompl
pop
sbbl
or
repnz
pushf
hlt
dec
xchg
lret
or
inc
arpl
shll
imul
mov
ret
addb
int
or
sbb
pop
test
test
push
cmpb
arpl
in
push
mov
jae
pop
xor
in
jnp
stos
push
dec
cmp
shr
jae
cmp
jnp
popa
fcomp
and
and
or
fsts
sarl
cmp
jno
xchg
scas
insl
popa
in
xchg
in
and
inc
aam
add
lods
dec
jo
lahf
sbb
imul
es
cli
add
iret
mov
push
and
cmpl
add
repnz
loope
repz
xor
das
add
in
dec
negl
inc
lods
and
sahf
pop
or
xchg
mov
mov
scas
jne
xor
adc
lcall
std
aas
push
je
inc
jg
push
inc
loop
push
inc
jne
lret
call
movsl
dec
adc
faddl
clc
gs
jb
xor
dec
incb
sbb
add
and
mov
mov
add
pop
inc
test
sub
gs
lret
mov
xorl
pop
pop
dec
rol
jne
mov
je
data16
push
int3
pop
add
fstpt
rorb
push
jle
cli
jl
pushl
mov
das
xchg
das
xor
test
fimuls
in
fiaddl
jno
je
add
jmp
roll
es
pop
add
mov
mov
dec
pop
ljmp
cmp
sbb
mov
jg
aad
add
enter
pushf
push
push
sti
insl
fucomp
push
jp
test
clc
lock
gs
les
sub
fildll
mov
test
mov
xchg
sbbl
jmp
or
int
mov
dec
cwtl
fs
sbb
rcrl
std
xchg
hlt
popf
or
xchg
push
icebp
cmpsl
test
gs
pop
loop
xchg
jae
mov
push
fistl
jg
xchg
xchg
jbe
add
mov
sub
iret
or
aad
push
jb
sbb
add
popa
pop
mov
fisttpl
cltd
cmpsl
inc
adc
mov
mov
roll
mov
pop
or
repnz
mov
call
add
lea
jmp
jg
rcrb
mov
mov
loopne
sub
inc
mov
les
jle
test
mov
jns
mov
dec
jle
lods
mov
pop
xchg
sti
nop
pop
mov
cmp
dec
pop
clc
mov
sub
hlt
scas
jl
ficoms
ret
xchg
push
nop
add
arpl
mov
sbb
bound
push
les
sbb
adc
dec
pop
mov
push
xchg
mov
dec
fldenv
rcrb
sub
mov
push
fwait
data16
pop
cwtl
mov
cli
out
in
cli
outsl
mov
rcr
jmp
or
dec
dec
jne
add
xchg
sub
and
pop
or
rorl
in
pop
mov
dec
lahf
add
cltd
xchg
les
and
mov
dec
fdivrs
mov
scas
loopne
ret
lahf
xor
push
sbb
jmp
sub
loope
xor
inc
inc
mov
mov
or
or
xor
sbb
add
pop
xchg
sbb
stc
loopne
cmp
mov
std
std
das
ret
cmpb
sbb
pop
cmp
fsubrp
jns
daa
push
fidivs
push
push
cmp
inc
pop
adc
jb
clc
rcr
mov
in
test
or
pusha
mov
xchg
nop
add
sub
out
inc
xor
fsubrs
pop
outsl
notb
mov
add
mov
push
inc
jecxz
fwait
movsb
push
and
in
add
incb
mov
les
mov
sbb
and
jge
lret
loopne
push
mov
popa
and
repz
mov
mov
mov
xchg
repz
add
js
cmp
and
or
push
adc
xor
sbb
push
in
addr16
out
inc
bound
popf
test
cmp
jb
mul
or
xorb
pop
xchg
lret
push
xor
test
or
pop
in
xor
sbb
loopne
cmp
or
ret
xchg
fst
adc
imul
and
sbb
xor
cmp
xchg
adc
sub
lret
jmp
adc
outsb
mov
mov
imul
out
pop
add
lret
insl
cs
mov
mov
sbb
scas
dec
mov
mov
and
mov
aad
out
cmp
das
imul
daa
mov
xchg
int3
pop
in
xchg
andl
rorl
aas
cmp
inc
xchg
sub
adc
ljmp
sti
push
push
shlb
mov
and
sbb
mov
adc
lock
cmpl
push
sub
pop
sbb
dec
xor
mov
sbb
movsl
sbb
in
imul
jnp
jbe
mov
jge
fadds
cmpsl
jae
mov
dec
les
faddl
je
jb
fldcw
adc
int3
data16
aaa
mov
and
fdivrl
out
pusha
gs
or
addb
inc
dec
clc
lcall
pop
out
mov
cltd
fld
cwtl
jno
add
mov
and
or
jb
in
pop
xchg
push
dec
loopne
pop
loopne
add
aam
jb
add
sub
shlb
fstps
mov
dec
sub
sti
pop
dec
lds
les
das
mov
sbb
in
add
in
rcrb
pusha
inc
xor
and
cmpsl
enter
icebp
jne
insl
push
push
xchg
xor
mov
cli
jb
rcll
clc
xchg
lds
js
sub
pop
popa
sub
jmp
mov
and
sbb
cmpsb
fcompl
mov
es
and
push
add
outsl
cmp
cltd
cmp
ds
shlb
sub
pop
mov
out
jge
mov
xchg
adc
stos
mov
mov
inc
fsubrs
adc
add
jmp
adc
outsb
mov
adc
stc
popa
mov
and
pop
gs
push
xlat
jg
mov
add
lret
jecxz
inc
sahf
sbb
std
scas
dec
xchg
mov
push
push
add
es
dec
xchg
mov
sbbl
dec
out
ror
pop
add
inc
xor
dec
inc
push
adc
jle
adc
sub
out
insb
aas
xchg
sbb
lcall
insl
push
cli
scas
in
movsb
movsb
adc
dec
pop
movsl
push
inc
fwait
mov
pushf
cmpl
ja
test
xor
sbbb
mov
imulb
sub
ljmp
push
sub
call
inc
aad
inc
fstl
pop
mov
inc
xor
mov
dec
ss
fdiv
ret
pop
insl
jle
sub
push
pushf
dec
adc
insl
hlt
add
xchg
push
test
mov
lret
lret
cmpsl
mov
mov
add
inc
jnp
clc
int3
mov
xchg
push
lods
mov
aam
neg
mov
xor
and
les
iret
stc
mov
outsb
or
pop
pop
xor
sub
call
sbb
cmc
xor
sbb
pop
popf
aam
cli
rorl
add
pop
sub
add
ja
icebp
decl
xlat
popf
and
xor
in
loopne
dec
dec
or
iret
jg
xchg
dec
push
cmp
loop
gs
in
es
pop
fs
cli
ss
mov
xor
inc
or
std
je
dec
mov
xor
shrl
fidivl
inc
mov
es
inc
xor
into
imul
sub
nop
movsl
inc
icebp
popf
ljmp
hlt
xchg
fisubs
iret
push
movsb
mov
adc
mov
iret
fs
xchg
outsl
push
int3
inc
js
xchg
fwait
cmp
dec
hlt
jnp
mov
out
clc
and
sub
mov
jmp
mov
push
xchg
cmp
xchg
mov
test
jnp
sub
mov
xchg
mov
mov
add
push
notb
out
test
popf
ljmp
out
mov
push
add
mov
xchg
mov
pop
gs
je
psllw
push
hlt
lea
lret
cmpsb
adcl
xchg
push
aaa
and
mov
stos
fisttps
in
movsl
sub
or
mov
lea
in
jle
sub
aaa
movsb
aam
stc
sahf
and
or
fsubrl
pop
adc
enter
in
pop
adc
cld
dec
mov
ljmp
into
scas
cmp
nop
lret
aam
mov
cmp
push
leave
adc
addr16
data16
adc
repnz
leave
jp
inc
push
repz
cmp
xor
jae
lret
dec
call
ds
mov
jle
sub
xor
pop
fidivrs
pop
push
mov
mov
aam
mov
std
xchg
xchg
xchg
sbb
into
fcoml
ja
subl
cmpsl
jp
lahf
dec
les
test
test
call
mov
dec
sbb
lock
clc
scas
jae
mov
pop
or
dec
es
adc
xchg
lret
inc
daa
pop
insb
out
xchg
xor
adc
dec
or
push
into
cld
inc
and
cmp
jp
sbb
sbbb
xchg
dec
dec
cmp
xor
cmpsl
mov
pushl
fildll
mov
std
add
inc
mov
lret
test
pop
xchg
push
add
mov
shlb
or
mov
adc
or
xor
mov
pusha
fchs
shll
lret
xchg
stc
pusha
scas
pop
nop
cmp
and
loopne
leave
jg
scas
sbbb
icebp
sbb
mov
gs
mov
dec
dec
inc
lock
push
jecxz
dec
lahf
push
mov
ficoms
xchg
dec
fldenv
xchg
mov
jp
xchg
add
adc
pop
shl
lock
jecxz
jo
out
mov
mov
std
jp
inc
flds
loopne
jbe
outsb
xchg
xchg
hlt
xchg
sbb
dec
das
inc
add
cmp
aas
std
xchg
pop
dec
push
mov
arpl
scas
int
mov
mov
sub
ror
jne
xchg
sbbb
cmpsl
mov
popf
mov
sti
mov
jecxz
cmpsb
scas
ds
mov
fistl
inc
add
imul
and
popa
dec
fsubrs
rcrl
cld
cs
inc
idivb
rorl
insl
test
arpl
dec
pop
xchg
inc
xor
cmp
out
add
jne
jge
lahf
sub
jle
dec
pop
movsl
mov
dec
xor
bound
fnsave
scas
dec
add
dec
mov
fstpl
inc
inc
test
sbb
loop
pusha
cmp
lds
cmp
lods
mov
lea
inc
xor
out
xor
into
cmpsl
push
inc
pop
ljmp
mov
testl
fcmovnu
jo
imul
dec
sub
mov
aas
inc
jb
push
das
mov
call
sbb
shlb
inc
stc
pop
stc
out
dec
nop
es
push
cmp
mov
and
mov
xrelease
xchg
shl
push
repz
lea
push
sbb
inc
test
outsb
adc
outsb
adc
mov
pop
mov
pop
xchg
loopne
fisttpll
or
pop
inc
mov
fisubrs
jbe
mov
fidivrl
cmc
push
mov
or
gs
pop
test
cmp
mov
pop
cmp
jge
mov
jne
scas
aad
jecxz
push
pop
repz
push
mov
lahf
hlt
sbb
mov
cltd
push
xchg
cltd
loopne
jb
cltd
cmp
and
cmp
cs
lahf
or
divb
fistps
lret
mov
xchg
dec
sbb
add
cmc
dec
cmpsl
push
arpl
test
push
ss
and
mov
jge
mov
iret
dec
enter
movsb
scas
sahf
aas
test
mov
inc
popa
mov
pusha
inc
ljmp
dec
xor
rep
stos
sarl
jne
push
push
pushf
icebp
and
hlt
dec
mov
mov
sti
pop
test
and
mov
dec
adc
cwtl
sub
dec
out
cmp
aaa
push
xor
xor
pop
mov
sbb
lahf
fs
out
jnp
and
daa
sub
or
test
fcomp
xor
jecxz
add
std
push
lcall
stos
cmp
out
and
mov
in
inc
jae
das
ficompl
adc
jbe
ds
pop
sbb
sbb
dec
sub
je
xchg
cmc
dec
in
subl
ds
cmpsl
cmp
leave
pop
mov
shll
xchg
aaa
orl
mov
jbe
push
mov
or
push
enter
nop
pop
mov
pop
ja
mov
mov
pop
leave
sbb
outsb
mov
aad
aaa
push
mov
lahf
dec
fcompl
scas
fsub
scas
inc
mov
jne
in
xchg
in
adc
imul
jo
xchg
cld
test
cmpb
cmp
aad
or
movsb
dec
jns
imull
pop
and
nop
push
rcll
iret
xor
outsb
outsl
stc
out
div
pop
xor
inc
adc
out
mov
lret
rcll
icebp
fwait
mov
stc
jg
xchg
mov
outsl
stos
mov
jbe
cmp
cmp
xchg
pop
mov
or
aad
pop
mov
insl
adc
sub
mov
inc
enter
jg
inc
iret
xor
in
cmp
test
xchg
dec
mov
loopne
push
pop
arpl
mov
xchg
stos
sub
xchg
lods
arpl
cltd
in
jno
rorl
inc
inc
stos
add
ret
adc
imul
mov
or
add
lods
xchg
sbb
cmp
movsl
mov
push
cld
xor
push
xor
push
arpl
jne
es
sub
lret
mov
into
lock
mov
frstor
ret
push
sti
outsb
cmp
cmc
mov
rorl
pop
stos
ds
lea
call
icebp
mov
inc
pop
pop
or
gs
add
movsl
fdivrs
dec
dec
test
jns
nop
pusha
add
enter
mov
mov
add
fs
jg
adc
mov
jmp
xor
jbe
pop
outsb
sti
add
dec
mov
push
dec
xor
stc
or
cmp
addr16
lock
add
loopne
or
clc
jg
and
aaa
mov
jne
pop
pop
push
and
and
mov
out
mov
inc
enter
inc
or
xchg
loop
mov
xchg
notl
jmp
testb
sbb
xchg
pusha
xor
cltd
enter
adc
les
rcrl
push
shll
mov
pop
filds
sub
lcall
push
dec
mov
rcl
lahf
popf
daa
mov
and
mov
pop
clc
xor
into
lods
fidivrl
aas
data16
pop
into
test
fisttpl
les
xchg
inc
enter
pop
shrb
mov
or
sbb
mov
pop
pushf
rorl
aam
push
cmp
lea
pop
mov
cld
xlat
xor
lea
xchg
imul
ret
test
cmp
int
dec
pop
insb
in
pop
pop
ljmp
sbb
jno
iret
nop
xchg
push
je
push
jae
aas
or
push
xchg
sbb
xchg
orl
mov
int
dec
mov
lock
jae
add
jge
inc
pop
sbb
lar
in
out
movsl
or
mov
xor
test
mov
sub
lcall
inc
push
push
orl
cs
mov
mov
andl
pop
loop
adc
mov
jp
xor
in
lret
sarl
and
orb
lret
add
dec
out
or
shlb
mov
xchg
lock
lds
aad
mov
adc
test
outsb
daa
sub
filds
sbb
dec
mov
mov
push
fidivl
pop
jge
inc
mov
test
lcall
iret
xorl
pop
repnz
xor
fildll
ret
push
cmp
mov
or
ss
or
iret
push
testl
dec
fldl
fucomp
or
dec
xchg
jbe
jae
and
test
cmp
xor
sub
mov
push
pop
sbb
xchg
popa
les
jg
das
testl
imul
lea
adc
test
fcmovnu
cwtl
fiaddl
inc
adc
cwtl
imul
pop
addl
cmp
fisttpl
cmc
ljmp
dec
inc
shll
dec
in
lods
sbb
jb
dec
sub
push
arpl
push
mov
fcmovnu
ja
into
inc
jbe
ret
rcr
ja
mov
xor
push
jo
aam
lcall
icebp
icebp
adc
adc
jp
add
push
mov
adc
or
in
or
je
push
sbb
leave
fwait
int
adc
sbb
jp
pop
rcll
inc
lods
mov
mov
aam
fs
inc
lds
gs
xor
or
push
icebp
das
or
mov
test
dec
pop
cmpsl
movsb
cmpsl
and
sbb
cmp
ds
sahf
clc
jno
rcll
je
repnz
fwait
mov
int3
inc
mov
cwtl
enter
or
mov
pop
sub
outsl
insl
shl
pop
mov
and
push
adc
and
test
pop
daa
fists
repz
outsl
jmp
mov
int3
dec
mov
movsl
rcrl
int
jbe
xchg
loop
xor
and
imul
add
push
xor
aas
int3
add
loope
aas
mov
mov
popf
inc
repnz
push
leave
mov
stos
out
jmp
aam
pop
jge
pushf
clc
fs
imul
and
adc
pop
or
adcl
mov
push
loopne
in
jge
push
or
jmp
mov
xor
in
mov
or
shl
iret
cltd
jo
daa
pushf
sbb
popf
pusha
pusha
inc
cmp
or
xor
sub
fisubrs
mul
and
scas
dec
lds
or
jg
aad
cwtl
push
adc
xor
ret
mov
or
jp
nop
jg
pop
lret
pop
add
fdiv
sbb
xor
mov
push
popf
sbb
xchg
and
jecxz
xor
push
rorl
daa
jmp
pop
sbbb
aaa
dec
cmp
jge
sub
inc
push
loop
loope
adc
pop
sub
popf
fidivs
cli
mov
xchg
jecxz
add
jge
rol
sbb
add
jne
cltd
add
mov
mov
mov
inc
mov
stos
imul
mov
sbb
cmpsl
and
mov
es
pushf
aad
sub
jo
jbe
inc
cmpsl
loope
jecxz
jg
jl
fnstsw
sub
jge
xchg
and
push
out
jbe
idivl
stos
mov
and
push
push
daa
cmpl
adc
mov
pushf
arpl
in
adc
or
dec
lds
xlat
jge
roll
dec
and
mov
jbe
mov
in
clc
dec
ds
mov
ficoms
mov
cmp
push
xchg
sbb
sub
mov
xchg
cmp
repz
pushf
xor
mov
loopne
sbb
stc
outsb
pop
jg
hlt
mov
std
popl
ud0
xor
push
cmp
lds
and
jb
xchg
xor
lock
xor
insl
daa
cmp
push
dec
stos
call
test
xor
bound
adc
jge
and
mov
push
push
dec
mov
vminpd
push
test
test
test
jne
test
int
nop
lahf
leave
jle
jo
popa
gs
mov
dec
xchg
or
rorb
mov
xlat
jp
mov
cld
xchg
pop
test
xchg
adc
ret
leave
pop
arpl
int
enter
mov
adc
shlb
pop
xchg
pop
fcmovu
pop
dec
lods
xchg
jb
mov
pop
call
adc
inc
dec
pushf
shl
pop
jge
das
push
add
out
lds
test
addr16
adc
add
push
pop
sbb
call
push
ss
or
nop
cmc
les
pushf
sti
inc
ja
fistl
or
mov
push
push
outsb
or
test
test
inc
in
sbb
orb
icebp
mov
cld
pop
sub
lds
call
xorl
pop
mov
lret
cmp
shll
pop
jae
rolb
clc
les
cwtl
cmp
mov
aas
xor
lods
pushf
jnp
sub
cwtl
mov
xchg
fdivrl
dec
stos
cs
mov
out
or
mov
leave
aam
clc
pop
jne
cmp
mov
aad
xor
aad
out
mov
mov
pop
add
ret
or
jne
mov
aad
mov
push
and
test
inc
scas
xor
jecxz
lea
xor
sbb
or
scas
add
mov
xchg
xchg
fldenv
sub
pop
stc
sbb
in
mov
pusha
xchg
push
out
adc
aaa
pop
cld
or
scas
pop
dec
cmpsl
int3
shr
sbb
mov
sbb
lret
and
inc
push
lahf
scas
ret
lds
loope
setns
bound
test
or
dec
jle
lret
lahf
out
ss
shl
xor
inc
sbbl
mov
jb
jmp
out
sbb
pmaddwd
push
mov
repz
dec
jmp
lock
xor
add
mov
movsb
jmp
jge
and
in
mov
xchg
mov
cld
dec
xor
inc
push
or
sub
jle
or
jo
icebp
or
ja
ficoms
fsubrs
sti
add
imul
jne
ds
cmp
pop
test
fdivl
in
sti
pop
aam
mov
imul
aad
cmp
sub
jecxz
mov
hlt
arpl
jnp
sarb
int
movsb
test
mov
push
cmp
mov
negl
cmp
std
mov
xchg
push
push
enter
ret
ss
inc
mov
and
pop
aas
pusha
enter
outsb
int
mov
pop
repz
imul
lods
pop
and
xchg
sub
push
std
je
and
aaa
nop
hlt
xchg
sahf
les
inc
sahf
ficomps
jo
mov
pop
jae
repnz
repz
xor
xor
fbstp
lock
jmp
dec
lcall
std
cmp
lcall
sti
dec
arpl
xor
push
mov
shl
std
jno
jb
es
out
lock
inc
mov
mov
repz
add
in
xor
rclb
mov
pop
insl
out
push
fisubl
mov
jmp
cmpsb
jl
into
std
movsb
push
jno
enter
or
mov
pop
xchg
xor
xchg
push
pop
out
lret
sub
add
dec
lahf
in
cmc
jne
xor
daa
push
sub
fwait
xor
dec
push
test
mov
pusha
lea
imul
sub
das
push
jno
inc
jne
pop
dec
or
stos
push
sbb
dec
fs
out
pop
jns
xchg
pop
cld
and
inc
test
mov
mov
pushf
scas
mov
jge
cld
divl
sti
test
cmp
cltd
sub
fcmovbe
and
add
loopne
dec
inc
cmp
add
mov
ficompl
fsubs
loop
mov
jns
in
lods
sbb
mov
lret
cmp
adc
repnz
push
dec
repz
adc
in
push
addb
inc
xchg
enter
cmp
cmp
add
mov
mov
mov
js
cmp
cmp
cmp
xchg
mov
sub
sub
aam
je
push
and
cmp
aas
add
clc
ret
shl
mov
fcoms
jns
nop
cmp
adc
out
in
gs
jg
or
fwait
pop
cmp
push
daa
data16
xchg
jmp
inc
dec
jg
inc
ja
mov
aas
push
lcall
lock
int3
fists
pop
imul
lcall
es
mull
push
mov
cwtl
addr16
inc
cs
sub
pop
jmp
cmp
mov
pop
mov
dec
stos
bnd
imul
push
int3
jg
cmpsb
push
cmpsl
ret
arpl
inc
stc
pop
std
aad
sbb
imul
cltd
sub
jne
shlb
les
call
clc
dec
mov
or
pop
and
mov
jae
mov
pop
cli
lret
push
addr16
xchg
sahf
or
and
aad
loop
push
pop
dec
add
fiaddl
imul
pop
into
pusha
stos
sbb
pop
outsl
jo
mov
sbb
mov
in
call
xchg
or
loopne
sahf
push
push
xlat
lahf
push
jge
and
mov
push
stos
jp
inc
cmp
cmc
inc
mov
icebp
out
mov
outsl
aas
fidivl
ret
call
fwait
jecxz
mov
and
enter
js
push
adc
dec
mov
frstor
das
sub
fistpll
cmpsl
jne
push
rcll
and
movsb
sar
push
pop
mov
pop
mov
dec
pop
imul
jo
dec
ss
dec
jae
and
mov
pop
jmp
lcall
fucomp
mov
jmp
daa
and
push
sub
fimuls
push
daa
es
jns
push
mov
inc
fs
mov
ds
lock
loope
outsl
add
call
loopne
shrl
sub
nop
sbb
jb
dec
daa
pop
test
mov
and
push
mov
dec
inc
and
push
sub
out
xchg
sub
out
cli
mov
inc
call
fnsave
mov
cmpb
imul
fldl
xchg
bnd
inc
nop
dec
sbb
es
loope
cltd
sub
push
popf
push
ja
pop
fs
dec
lods
and
lods
mov
mov
xchg
callw
stc
ljmp
push
sub
cmp
mov
sarb
add
push
icebp
mov
lock
inc
rcrb
jbe
push
inc
cwtl
jg
in
and
mov
mov
outsl
pop
lahf
mov
and
xchg
inc
xor
bound
pop
and
sahf
fstpt
pop
mov
cmpsl
loopne
jmp
jbe
addr16
inc
pop
sub
mov
pusha
mov
int
aam
pop
adc
xchg
push
int3
test
and
in
cmpb
call
push
xlat
or
sbb
stos
fnstcw
sar
cltd
xchg
sahf
push
push
and
shlb
jns
sub
mov
into
repnz
jle
and
add
add
jge
fstpt
cs
jg
sub
sbb
push
xor
sub
sub
loop
or
cmp
lcall
mov
sti
adc
pop
sbb
in
cltd
adc
or
hlt
movsb
mov
dec
xchg
pop
mov
push
popa
arpl
xor
rorl
inc
lods
std
sbb
outsb
and
mov
cmp
jl
shlb
test
and
xchg
add
dec
dec
push
out
and
daa
jae
push
push
jg
stos
add
xchg
int
adc
fstl
add
adc
aaa
nop
shlb
fstp
dec
sbb
cli
inc
jnp
inc
xor
mov
dec
cs
cmp
and
cltd
scas
mov
call
je
cmc
inc
sub
dec
bound
lea
pop
xchg
loope
test
inc
fcompl
mov
mov
mov
xor
imul
jbe
mov
cwtl
insb
das
add
sbb
xchg
cmpl
shrb
jge
lock
push
cltd
pop
popa
call
pop
pop
dec
inc
sbb
jmp
inc
adc
mov
jl
mov
jb
sub
pop
sbbb
inc
dec
bound
add
cmp
add
pop
mov
and
ds
and
dec
mov
cmp
ds
jl
stos
cltd
imul
ret
fimull
sub
in
jmp
sbb
xchg
les
scas
pop
ret
xchg
inc
test
stc
negl
stos
mov
mov
jge
push
mov
lea
icebp
push
fs
pop
das
adc
adc
out
or
or
mov
out
or
cmpb
push
out
inc
jns
sub
push
xchg
repnz
ss
xchg
add
or
mov
lods
sub
or
data16
inc
adc
or
inc
sub
jge
push
insb
pop
out
arpl
push
ror
add
cmp
js
jbe
imul
in
aad
jp
pop
push
mov
mov
mov
adc
lds
aad
push
xchg
adc
movsb
fnstsw
es
mov
movsb
ret
push
into
sbb
mov
imul
mov
gs
mov
mov
movsb
ljmp
cmpsb
dec
jge
cmp
jb
lods
xchg
xor
xor
and
cmc
adc
xor
fs
loop
or
aad
rcl
int3
cmp
stos
push
mov
daa
adc
and
mov
jnp
xlat
xchg
sti
addb
gs
sub
and
cmpsb
xchg
outsb
or
adc
loope
leave
xchg
jle
lcall
sub
push
push
scas
test
adc
dec
jle
ss
mov
std
inc
sub
aaa
mov
xchg
and
jmp
pushw
xchg
push
std
pop
and
push
or
pop
lcall
mov
lock
xchg
push
mov
in
cs
sub
push
pop
or
or
fs
cmp
pop
into
xchg
xor
imul
add
popa
sub
jns
jmp
mov
shl
test
or
rclb
fidivrs
mov
mov
pop
mov
out
sub
in
add
jg
mov
add
nop
xor
dec
dec
inc
loopne
imul
loop
mov
xchg
frstor
ja
pop
fdecstp
xor
pop
lret
ss
inc
xchg
inc
jmp
push
push
btr
push
xor
ljmp
inc
mov
xlat
pop
cwtl
jge
push
sub
xor
bound
pop
ljmp
xchg
jmp
push
push
out
sbb
and
dec
js
jge
shlb
cmp
or
int3
dec
xor
sub
pop
jns
in
xor
stc
std
mov
mov
mov
adc
out
sbb
popf
jecxz
push
outsl
insb
mov
mov
ljmp
mov
imul
shl
stos
adcb
and
ja
sbb
imul
dec
rcrl
test
push
insb
sub
icebp
aad
cmpsb
es
pop
mov
scas
adc
xchg
enter
pop
cmp
dec
adc
adc
loope
mov
push
std
testb
push
dec
popf
ret
jmp
mov
imul
test
jmp
xlat
add
sti
xchg
dec
pop
data16
out
lock
popl
sbb
ds
mov
push
jle
mov
scas
sub
mov
and
push
fs
jnp
sub
scas
data16
imul
xor
sbb
inc
filds
pusha
pop
loope
mov
or
hlt
lods
cmp
or
mov
outsl
mov
or
mov
push
lcall
pop
loope
lret
xor
or
in
jmp
cltd
and
xchg
jo
insl
mov
clc
pop
jnp
fistl
aas
sub
aad
lds
fs
popf
ror
movsb
sbb
cmp
out
cmpsb
rcrb
mov
mov
enter
or
in
push
call
or
mov
mov
insl
jbe
pop
cs
mov
mov
loopne
xchg
xor
xchg
push
push
je
push
lds
sbb
inc
cltd
and
jl
push
sub
jl
add
mov
enter
imul
and
test
or
arpl
inc
stos
aad
pop
or
dec
mov
mov
xchg
sub
loopne
fs
add
outsl
fwait
sbb
imul
test
jne
cwtl
outsl
aaa
pop
shlb
int
inc
fwait
inc
add
or
mov
pushf
push
scas
and
jno
mov
stc
inc
xchg
lea
mov
xor
mov
adc
and
sub
inc
mov
add
push
mul
sbb
sub
das
sub
adc
push
pop
mov
fmuls
lods
xchg
mov
push
scas
cld
repnz
push
sbb
jo
lcall
fisubrl
jno
mov
cmp
xor
xor
aas
fcompl
xor
pop
ljmp
mov
xchg
mov
cmp
push
mov
cwtl
xchg
mov
cmpsl
mov
xchg
or
lcall
dec
or
movsl
cmp
dec
cmpl
xor
loop
lcall
out
cmp
popf
inc
sub
outsl
scas
xchg
enter
scas
in
clc
gs
ja
out
orl
mov
mov
aas
lods
mov
out
xchg
iret
je
ja
pop
das
cs
gs
pop
lock
int
lock
xor
imul
xchg
cmp
add
nop
mov
inc
mov
ss
mov
adc
mov
scas
mov
sbb
xchg
jb
nop
xchg
cmp
sbb
jae
ret
lret
lea
imul
into
sub
mov
bound
les
imul
cmp
mov
jae
sti
shll
cmpsl
jp
sbb
xchg
xchg
out
nop
push
outsb
jno
and
adc
cmp
enter
jmp
dec
call
push
imul
xor
cli
jge
pop
jae
adc
mov
mov
addr16
jmp
adc
cmp
roll
push
or
roll
cmpsb
addb
cld
mov
int
jmp
repz
mov
mov
and
sbb
mov
add
xchg
cmpsl
dec
xchg
sbb
inc
pop
sub
lret
lods
push
mov
xlat
fsubrp
je
sbb
jns
add
dec
ja
movsb
jmp
fldl2e
inc
push
jae
shrl
adc
movsb
push
xor
mov
cmovne
out
pusha
push
or
pop
fs
shlb
mulb
out
out
inc
fildll
and
pop
mov
stos
js
ss
cmp
push
out
aas
rorl
cmpsl
das
xchg
or
in
jns
adc
cld
je
inc
mov
pop
xchg
popa
pop
mov
xor
cmp
mov
int3
add
lea
mov
mov
xlat
movsl
jo
das
fs
enter
jmp
adcb
push
inc
add
call
xchg
loope
mov
sbb
fmul
fs
nopl
loop
pop
bound
jne
push
push
in
inc
inc
int3
js
imul
imulb
sbb
pop
data16
add
out
pop
mov
lcall
mov
dec
ds
in
sarb
mov
xchg
out
fisttpl
pop
dec
mov
push
cld
pop
adc
outsb
and
rclb
and
xchg
mov
lret
mov
mov
push
in
pop
sub
jmp
xchg
pop
pop
pushf
xor
xchg
and
inc
fs
ret
subb
repnz
jmp
lcall
icebp
sahf
mov
pop
pop
sbb
push
dec
scas
xchg
jle
pop
adcl
outsl
pop
lods
clc
push
sbb
scas
pop
subb
mov
jb
sub
mov
das
add
push
jl
xor
dec
icebp
aam
es
js
xor
in
pop
jl
cmc
adc
ss
aas
imul
mov
daa
and
cwtl
push
icebp
jne
ret
call
push
cmp
mov
lcall
movsb
cltd
je
and
inc
add
cwtl
scas
inc
sub
ss
add
mov
mov
mov
out
ds
adc
inc
dec
mov
lock
cmp
scas
xchg
or
rcl
inc
test
dec
mov
adc
fs
fucompp
jnp
xchg
pusha
jb
ret
pop
aad
test
cmpsl
xor
jnp
aam
dec
leave
adc
mov
jl
dec
pop
mov
pop
in
sti
test
es
stos
cld
jns
xor
inc
jae
sub
mov
leave
aaa
push
push
mov
push
scas
in
mov
mov
aaa
inc
xor
cld
mov
jmp
outsl
stc
pop
push
pop
mov
stc
add
jmp
cwtl
jl
fndisi(8087
xor
rolb
add
and
imul
imulb
std
mov
push
mov
push
push
inc
fnstcw
pop
mov
sbb
adc
mov
sbb
mov
dec
ret
mov
ss
insl
rcrl
mull
ret
in
push
add
push
fstl
mov
fnstcw
mov
jg
jbe
mov
or
movsl
orb
popa
mov
call
imul
pop
add
cmp
repz
cld
or
push
xchg
cld
aas
add
pop
movl
dec
or
gs
out
dec
xlat
add
fimull
dec
ss
lea
cwtl
rcrb
jns
lds
jg
push
adc
xor
scas
push
or
inc
icebp
in
lret
mov
vpunpckhdq
dec
lret
cwtl
iret
outsb
mov
lods
pop
sub
inc
mov
push
dec
stos
mov
and
mov
fwait
arpl
sub
lock
sbb
sarl
mov
xlat
les
jmp
mov
rcrb
scas
jo
dec
push
movq
test
jnp
notb
sahf
push
inc
clc
rolb
dec
jbe
daa
xor
adc
out
jae
cmp
mov
lea
xor
adc
sarb
inc
in
cmc
ret
inc
ljmp
leave
jns
push
dec
adc
sbb
sub
xlat
sub
das
outsl
mov
daa
stos
leave
js
push
int3
lret
popf
call
jl
aad
push
movsb
std
sub
fsub
inc
xchg
inc
sub
in
inc
mov
mov
push
or
inc
jb
mov
xlat
dec
pop
push
das
push
xor
incb
dec
mov
pop
imul
fisttpll
inc
leave
pop
cmp
dec
in
dec
fidivs
test
sbb
outsb
xor
sub
mov
test
test
xchg
or
fisttpl
fdivl
mov
jns
pop
imul
mov
adc
mov
popa
aam
ret
pop
enter
push
int
push
push
sti
outsl
out
add
push
jle
sbb
rorb
cmpl
xchg
ja
ljmp
lahf
xor
out
fnsave
adc
mov
push
jmp
mov
iret
mov
pop
mov
push
leave
jp
and
push
data16
xlat
jae
add
aaa
add
mov
cmp
jp
dec
xchg
insb
mov
cli
push
je
or
hlt
add
int3
shl
fnstcw
pop
inc
dec
es
push
jmp
push
add
mov
fisttps
bound
lret
stos
and
out
sahf
sarb
arpl
add
dec
das
add
std
mov
jns
icebp
or
push
ss
cmp
add
push
or
movsl
xor
mov
loope
xchg
das
jne
hlt
jae
pop
popl
xlat
negb
add
cmp
icebp
and
or
fdivrl
sar
lahf
mov
mov
and
jb
push
cltd
cmp
mov
or
xchg
pusha
scas
rcl
mov
mov
pop
daa
popa
test
jo
fiadds
pushf
pop
ja
xor
jnp
xchg
cmpps
data16
scas
push
out
fadd
mov
fisubl
sbb
lahf
cmp
sub
jl
jecxz
mov
rol
jb
sti
xor
dec
sub
ss
test
pop
pop
faddl
xchg
xor
jmp
test
cmpb
pusha
add
push
test
scas
in
mov
inc
add
mov
mov
xor
sbb
mov
pop
xor
test
xor
push
ja
cs
and
cmp
imul
lret
dec
mov
dec
inc
sar
lods
loopne
stc
mov
sar
xchg
les
xlat
cmp
xchg
insl
cmp
mov
add
push
pop
flds
cmp
fnstenv
test
push
clc
repnz
or
movsl
stos
cltd
test
fisubs
clc
and
into
cmp
sub
mov
aad
shlb
push
jo
ret
mov
lods
xchg
stos
jae
sub
daa
pop
push
sub
push
cwtl
jle
mov
pushf
mov
sub
leave
mov
push
clc
test
dec
ret
mov
sbb
pextrw
or
in
imulb
nop
push
insl
inc
mov
cmp
cmpsb
ret
push
ljmp
jp
fcom
enter
out
es
jae
adc
cmp
xchg
lods
mov
popf
jbe,pt
cmp
sarb
rcrb
andl
icebp
popa
sbb
fdiv
popa
popf
and
lock
decb
or
int
aas
fdivrs
fimuls
jmp
test
fdivrs
rcrb
notb
cmpb
mov
adc
sub
outsb
and
push
xchg
ret
xchg
mov
cwtl
and
mov
sub
mov
mov
mov
mov
lcall
addl
dec
or
xchg
xor
cwtl
das
push
inc
or
sbb
push
fists
inc
mov
loope
js
mov
loope
pop
andl
and
xchg
mov
aam
notb
mov
push
add
push
mov
xor
and
out
or
fistpl
sbb
jl
movsl
sub
bound
pop
pop
jns
dec
in
ret
cmp
xor
arpl
rcrb
sub
adc
shrl
aaa
adc
mov
cs
pop
jmp
dec
clc
ljmp
data16
xchg
repz
nop
dec
adc
add
iret
iret
push
out
jne
test
pop
mov
sbb
repnz
cmp
add
sub
scas
inc
sti
add
jno
mov
mov
jl
and
fwait
adc
add
data16
js
loope
fwait
test
mov
add
mov
and
enter
scas
out
jle
dec
xchg
test
testb
filds
scas
add
push
cltd
push
adc
testb
scas
push
inc
movsb
ret
mov
dec
dec
sub
in
add
pop
xchg
sbb
inc
adc
pop
arpl
nop
ljmp
sub
ljmp
mov
xchg
jl
add
and
dec
ucomiss
pop
pop
ret
and
ret
mov
lahf
adc
xchg
stos
je
inc
imul
fwait
rcll
push
test
sub
xchg
aam
xorb
xor
mov
jbe
ret
xorb
and
loopne
mov
ret
cmp
out
xorl
fwait
xchg
cmp
push
sarb
xor
mov
add
push
push
in
fidivrl
cmpsb
aad
sub
mov
xor
scas
cmc
clc
test
daa
out
std
pushf
loop
cmpsb
sub
adc
add
scas
fdivs
icebp
out
or
push
and
sbb
outsb
icebp
je
push
cmp
loope
inc
pop
xchg
pop
cmp
sahf
adc
out
aam
ret
sub
jp
lahf
push
jge
add
xor
cmp
or
xorb
insl
iret
das
fisttpll
enter
ja
fcompl
lock
mov
or
or
sahf
inc
cld
insl
adc
push
lds
xlat
in
das
fs
mov
out
jl
cwtl
addl
push
push
cmp
imul
stc
fs
shlb
out
lea
push
xchg
cmpsl
jno
sbb
jae
sbb
jne,pn
in
xlat
push
jo
leave
aas
insb
lea
outsl
enter
lds
push
jne
mov
fs
out
getsec
ljmp
enter
pop
ss
pop
mov
cwtl
xor
bound
sti
or
jmp
cs
cli
repz
xor
clc
inc
xchg
adc
sbb
cmp
push
inc
mov
mov
mov
adc
inc
stos
loop
in
push
jb
in
pushf
sub
pop
ja
pop
or
jle
enter
movsb
shrl
cmp
cmp
adc
cmp
cmp
xlat
push
mov
mov
dec
dec
stos
aad
mov
mov
push
bound
test
fs
scas
mov
pop
sub
lahf
adc
mov
sub
inc
adc
mov
andb
pop
or
cmpsb
adc
aaa
adc
ljmp
lahf
sbb
mov
xor
lea
je
pop
adc
into
pop
sbb
ljmp
and
or
sbb
xchg
add
fmulp
push
or
push
adc
sub
pusha
shl
ja
dec
scas
stos
inc
push
pop
scas
out
xor
rolb
jb
daa
xor
clc
or
mov
movl
adc
jno
jmp
fwait
add
or
adc
out
roll
mov
cmpsb
addr16
mov
mov
mov
cmp
xchg
dec
aad
dec
mov
xchg
movsl
ret
mov
mov
call
push
movsb
ret
push
cmp
mov
xchg
std
sbb
jmp
sbb
les
xchg
daa
fstps
or
popf
cltd
dec
les
lret
and
sub
ret
xchg
rcr
cmp
and
pop
out
pushf
cltd
push
outsb
push
or
cmp
ret
ret
test
loopne
jbe
stc
cmpsb
cmpsb
mov
ljmp
mov
js
push
jae
rclb
popa
popf
aad
jnp
int3
pop
movsl
dec
out
aaa
jecxz
adcl
mov
jge
cltd
adc
or
test
xchg
mov
in
js
fs
lret
push
int3
inc
popf
inc
mov
mov
mov
iret
in
dec
cmp
cmpsl
cld
sub
xor
ds
sub
sbb
jge
insb
shrb
jns
push
scas
shrl
repnz
jecxz
sbbb
test
pusha
pushf
push
data16
loopne
xchg
outsb
leave
and
je
fisttpll
sti
pop
push
mov
dec
jns
inc
je
js
jae
xor
xor
mov
cmp
xor
push
push
or
nop
xor
xor
push
fs
cs
pusha
push
test
roll
scas
lods
enter
xchg
test
gs
jle
aad
aad
fnstcw
adc
or
cmc
cmp
adc
jge
iret
int
sahf
jo
mov
push
insl
fnstsw
int
cmp
inc
push
daa
jecxz
xlat
outsl
xor
loopne
sub
arpl
xchg
ret
mov
jno
xor
sub
lods
rorl
shll
dec
shlb
pop
cmp
adc
pop
jg
xchg
hlt
sbb
or
xor
ret
cs
lret
sub
lret
rolb
pop
popf
arpl
push
in
adc
in
dec
ja
rclb
sbb
push
mov
xchg
lock
sbb
mov
sub
out
das
insl
mov
lds
int3
jp
lock
inc
xor
lcall
pop
daa
jle
out
sub
pop
or
hlt
dec
mov
imull
jle
hlt
push
pushf
je
lret
cld
pop
or
add
adc
cmp
dec
rcrb
mov
pop
and
lcall
xor
fcoms
cmp
cmpsb
imul
sbb
inc
sbb
incb
dec
jne
inc
out
pop
mov
jg
mov
movsl
imul
sbb
or
dec
mov
jl
push
pop
ds
mov
xchg
lods
jae
scas
xchg
xchg
or
arpl
sbb
nop
mov
add
mov
mov
push
inc
xchg
pop
aad
fiadds
lock
shll
jns
push
inc
movsl
cmp
push
lret
mov
mov
sub
cwtl
pop
jl
mov
xchg
ss
push
add
or
jge
or
pop
push
dec
pusha
mov
jle
lods
jae
pushf
sahf
mov
in
mov
cmpsb
xlat
rcl
test
mov
hlt
push
repz
sbb
xor
push
jmp
push
fs
xor
clc
out
cvtps2pi
or
sbb
or
dec
pop
rol
mov
int3
mov
leave
add
jg
icebp
lods
lret
jo
xor
jle
jno
js,pt
sbb
imul
std
and
hlt
xchg
jge
cltd
cli
xchg
test
mov
mov
shll
nopl
fucomp
mov
das
daa
call
push
mov
scas
push
in
jne
xchg
or
pop
pop
push
lret
sub
inc
leave
fwait
adc
push
push
cmp
cwtl
aaa
sub
push
aas
out
mov
loope
addps
inc
mov
push
cld
mov
xchg
push
jg
jmp
sbb
or
xchg
sbb
mov
jl
push
pop
cmpsb
lea
loopne
ds
in
cld
imul
fyl2xp1
inc
js
scas
mov
icebp
sub
dec
shrl
push
sub
test
cwtl
adc
pop
shll
add
mov
push
mov
push
fidivs
call
mov
sbb
or
sub
inc
std
or
or
pop
add
add
add
ret
mov
dec
pop
andb
add
xlat
fcoml
xor
outsl
repnz
jno
int3
in
pop
pushf
out
push
jbe
sub
mov
dec
sbb
sub
insb
xchg
imul
pop
or
sbb
xchg
inc
add
data16
int3
bound
imul
mov
jecxz
sbb
lea
aam
mov
scas
icebp
popf
call
jl
shrl
in
clc
out
lahf
sbb
xlat
packsswb
add
divb
mov
mov
sti
les
xchg
ds
into
incb
jae
scas
aas
inc
call
pop
mov
push
push
arpl
add
fstl
iret
scas
aas
jp
xchg
push
jbe
out
lret
fldcw
test
shll
adc
add
inc
mov
lret
gs
orb
icebp
ljmp
sbb
cwtl
xchg
mov
sub
mov
pop
or
sbb
xlat
int3
hlt
loope
jle
mov
xor
sbb
hlt
out
pusha
and
hlt
lds
js
pop
lahf
push
lock
jmp
adc
imul
lret
mov
inc
pop
cmp
push
imul
cmp
mov
sbbl
push
cmp
ljmp
std
setne
ds
call
and
inc
sbb
in
cmpsb
movsl
test
jecxz
or
out
das
cltd
mov
int
arpl
imul
xchg
iret
mov
sbb
lock
push
icebp
sahf
lock
add
mov
inc
mov
adc
das
mov
ss
push
xchg
mov
repz
prefetchwt1
inc
add
subb
mov
ljmp
int3
sbb
cmp
stos
or
jge
stos
add
sahf
fdivl
sbb
das
sbb
lds
xchg
addr16
int
or
pop
lods
sbb
dec
or
cmp
icebp
lcall
movsl
add
inc
xor
mov
inc
lahf
cltd
into
dec
mov
dec
cs
sub
xorl
leave
jge
ret
xchg
imul
fdivrl
pop
jnp
xor
addl
les
cmp
icebp
add
je
bnd
lea
jecxz
jb
int3
lods
mov
jne
lret
mov
mov
push
sub
aad
xchg
add
jl
int
insb
adc
jo
cmc
andb
xchg
sahf
movsb
fstpl
cld
loop
mov
ret
mov
into
out
adc
es
pop
lret
inc
and
iret
nop
lea
pop
mov
or
call
and
rclb
stos
push
les
sar
jmp
lods
mov
lret
int3
mov
push
or
pop
mov
ss
call
je
fidivl
push
aam
push
stos
loope
jae
cltd
stos
scas
sub
sbb
jg
jmp
loop
cmc
and
add
pop
insb
pop
push
xchg
loop
jge
bound
ret
jae
mov
ds
arpl
loope
xlat
out
pop
testl
insl
pop
cmp
inc
movsl
cmpsb
shrl
out
test
mull
mov
outsb
jecxz
bound
jns
ja
call
lcall
mov
cmpl
and
adc
jne
fs
fs
and
pmovmskb
imul
mov
mov
pop
push
in
jbe
xchg
xchg
les
aas
shrb
enter
and
bound
stc
cmc
jb
cli
add
lret
fsubrs
push
aas
outsl
stc
mov
add
cmp
pop
loope
les
push
shl
imul
lds
pop
outsb
mov
lods
or
je
and
and
dec
bound
rcrl
test
sbb
sub
push
or
push
push
inc
sti
and
xor
clc
pop
dec
or
cmp
stos
pop
pop
pusha
into
ret
push
out
mov
aaa
sub
mov
fcompl
or
jl
in
pop
or
pop
or
push
xchg
push
push
iret
in
test
cld
cmc
ljmp
andl
pop
bound
pop
add
add
xchg
sbb
mov
mov
scas
or
push
xor
les
cld
bnd
add
lret
orl
cmpl
cmp
aas
rsm
lret
add
hlt
movsl
xchg
lcall
loope
stos
xor
sbbl
or
into
and
mov
adc
ja
cmc
iret
gs
lock
fmuls
jp
dec
or
cmpsl
dec
lds
inc
mov
nop
and
pushf
iret
dec
loope
pop
clc
mov
sub
sbb
fidivl
or
inc
shll
xlat
push
iret
jnp
fscale
loop
js
dec
push
clc
sbb
iret
mov
repnz
adc
outsb
dec
sti
and
es
and
pop
jg
inc
lret
inc
ss
xor
cs
cltd
add
pop
mulb
sbb
out
loop
and
inc
mov
mov
loope
iret
sbb
push
xchg
sti
ljmp
sbb
pop
pop
and
fildll
mov
data16
pushl
and
rcll
xchg
repz
push
not
pop
xchg
pop
adc
test
shlb
lahf
push
loope
shrb
dec
add
into
dec
or
fcos
xchg
cs
push
adc
insb
fsubl
flds
mov
outsl
push
mov
ljmp
iret
jmp
jle
idivl
clc
insl
mov
cmp
push
jp
les
shlb
fildl
stc
inc
loopne
mov
cmp
dec
fcomip
pushf
adc
test
in
jle
in
and
rcrb
mov
mov
push
sarl
mov
sub
mov
pop
aam
repnz
adc
outsl
cmp
sub
in
shlb
in
inc
fucomi
pop
add
xchg
out
sbb
aam
data16
arpl
mov
ss
add
insb
jg
ss
or
and
xor
push
adc
loop
pushf
mov
push
cmp
or
ret
subl
pop
add
xor
das
mov
repz
test
ja
jge
js
push
out
daa
dec
frstor
ljmp
popl
sub
push
jp
sti
xor
clc
sbb
std
movzwl
lret
das
cltd
dec
inc
add
rcl
push
sbb
fdivrs
push
jmp
mov
pop
mov
add
stos
aas
es
sbb
mov
or
xchg
sbb
sbb
xlat
mov
out
out
xchg
jno
loopne
add
fwait
xor
jae
jge
in
cmp
pop
pushf
enter
nop
out
outsl
sub
mov
cmp
divl
xor
stos
xchg
int
setb
icebp
daa
sub
pop
inc
mov
mov
je
das
fisttps
add
pushf
out
aas
daa
cmp
mov
inc
stos
dec
test
mov
shlb
pusha
add
ficomps
pop
leave
add
and
add
pop
test
pushl
fbstp
adc
es
jne
sub
push
mov
mov
ljmp
adc
ljmp
or
pop
cmp
jne
inc
sub
xor
pop
in
adc
or
iret
push
jae
pop
imul
hlt
jge
xchg
or
push
adc
loop
push
add
push
sub
cs
daa
dec
dec
clc
mov
inc
data16
xchg
repz
out
clc
dec
mov
cs
addb
movsb
call
cld
push
cld
mov
xchg
mov
dec
and
js
mov
es
inc
stos
fisttpll
es
stos
arpl
scas
add
bound
mov
loop
bound
inc
mov
popa
mov
sbb
sbb
pop
repnz
cltd
inc
mov
or
int
push
xchg
rcrb
movb
sbb
mov
push
mov
test
jmp
mov
stos
lock
push
mov
dec
push
push
cvtps2pd
into
mov
rolb
repz
fwait
rorl
mov
in
cwtl
xchg
fcmovbe
shll
in
push
stc
outsl
dec
or
jns
fidivrl
mov
or
lods
xchg
pop
dec
jg
xchg
push
adcb
loope
nop
push
push
push
mov
mov
ljmp
pop
sbb
out
jg
cltd
mov
rcrb
mov
push
mov
mov
lock
mov
xor
cli
jo
jge
and
loopne
pop
daa
inc
pusha
xor
sub
mov
addr16
push
ljmp
sahf
sbb
mov
mov
mov
lret
imul
pop
mov
mov
sarl
sbb
std
jae
insl
lds
or
pop
rorb
add
jge
lahf
enter
leave
adc
ss
xchg
or
fs
mov
push
sbb
fnstcw
dec
xor
in
rclb
sub
and
in
ljmp
sub
inc
pop
and
push
addr16
addl
sub
cli
mov
popf
pop
or
gs
test
pop
adc
sbb
jae
xor
push
imulb
movsl
out
adcb
mov
push
into
shlb
idiv
mov
loope
push
and
popf
sub
aam
jmp
fistpl
mov
mov
stos
in
jg
cmp
in
sub
inc
lea
adc
xor
xor
and
add
mov
addr16
push
lcall
out
xchg
test
test
test
jp
popa
and
shll
xor
inc
cmpsl
out
sahf
rcrb
sbb
cs
pop
xor
data16
pop
jcxz
jmp
cmp
add
icebp
pushf
iret
cmp
in
pop
sti
sub
ss
sub
jae
jno
mov
shlb
push
loopne
pop
insl
mov
xchg
xchg
pop
adc
xchg
or
and
ljmp
cli
js
ficompl
push
arpl
mull
sbb
dec
xchg
decb
mov
add
mov
mov
dec
jl
rcll
adc
xchg
xchg
sub
jecxz
push
int3
sub
loop
fcmovnu
sti
fisttps
inc
out
pop
add
in
mov
sbb
inc
mov
and
aad
imul
out
mov
pop
xlat
sarb
out
movsb
in
subl
adc
js
stc
and
adc
xchg
mov
mov
jo
negb
add
and
xchg
pop
mov
dec
mov
inc
push
ljmp
stos
rorb
cld
and
loop
mov
adcl
add
inc
shrl
push
adc
dec
scas
cmpsb
sub
mov
mov
pop
cmp
in
mov
jo,pt
out
std
test
fimuls
imul
sbb
pop
out
test
and
sub
nop
cmpsb
andl
or
inc
mov
xor
mov
clc
hlt
ja
xchg
fisubrs
mov
out
push
test
into
or
test
jecxz
fcoml
mov
ret
aad
int
iret
cmpl
mov
adc
inc
popf
push
rcrb
xor
jmp
xchg
adc
xor
aam
subb
gs
daa
mov
mov
add
lock
fisubrs
mov
push
daa
mov
push
testl
inc
jecxz
insl
xor
loope
repnz
scas
jmp
lock
mov
jno
xor
iret
insl
adc
lds
and
jno
bound
test
push
inc
xchg
add
std
gs
or
movsl
jb
xchg
mov
fdivl
sub
sarl
int3
stos
jae
xchg
mov
sub
pop
negl
push
and
xchg
loope
fiaddl
jno
jns
cmp
pop
in
divl
mov
cmp
inc
icebp
sbb
mov
push
jnp
push
shll
aad
cmpsl
hlt
stos
lret
push
adc
sub
pop
bound
test
das
jg
rorb
cmpsb
movsl
cli
push
aas
push
fdivs
jae,pt
mov
sub
or
cs
out
std
pop
inc
mov
push
shrb
sbb
mov
mov
data16
enter
inc
xchg
mov
lock
sub
mov
mov
repnz
dec
jp
stos
pop
inc
mov
mov
outsb
pop
pop
cs
xchg
inc
repz
movsl
mov
je
mov
ja
scas
inc
cmp
in
movsb
ljmp
inc
lds
inc
pop
adc
rcr
stos
mov
dec
cmp
cwtl
or
xchg
cmpl
and
sbb
pop
pop
and
xlat
stos
filds
add
lds
test
mov
jp
jge
dec
loope
sahf
in
cmp
push
dec
add
hlt
add
mov
scas
mov
jb
sbb
nop
popf
push
rorl
and
mov
sub
inc
hlt
push
jo
je
nop
jle
cld
mov
pop
cltd
xchg
pop
lret
or
movsb
jge
push
and
mov
int3
push
xor
jne
loop
mov
add
scas
dec
ds
inc
pop
mov
out
mov
lock
cli
cltd
sbb
flds
pop
cmp
stos
xor
insl
or
or
jb
and
mov
mov
or
insb
push
sbb
push
sbb
or
mov
xchg
and
lds
add
aad
sub
insb
push
push
push
and
cmp
in
cld
aaa
xor
outsl
pop
xor
or
inc
lret
test
dec
jle
and
sbb
cmp
in
movl
jmp
fldenv
xor
pop
cmpb
adc
jbe
loop
test
lahf
lret
gs
mov
in
ret
inc
test
movsb
jo
or
rcl
mov
xchg
jg
cmp
add
aas
jge
adc
adc
sti
mov
dec
movsl
mov
scas
push
adc
push
mov
push
call
into
pop
insb
jns
roll
mov
jmp
inc
adcl
loop
dec
inc
pushf
cwtl
mov
jno
xchg
cmp
popa
add
push
leave
xchg
add
lret
sahf
mov
cmp
lods
pop
nop
mov
sub
or
jno
jg
cwtl
cmc
and
and
addr16
mov
stos
mov
fwait
inc
iret
cld
imul
xchg
mov
push
and
lock
out
push
cmp
mov
in
sub
push
dec
jmp
pushf
mov
cmp
aam
ljmp
push
cmp
mov
ja
cmp
fcmovbe
stos
adc
fnstsw
adc
lods
fwait
lcall
inc
mov
into
xor
adc
mov
movsb
test
jne
jg
push
add
lahf
mov
addr16
scas
xchg
fisttpll
add
test
adc
jno
add
in
ret
sbb
mov
enter
push
jo
jb
test
add
jne
xor
and
jo
pop
insb
fstpl
and
sbb
xchg
and
xor
dec
and
lret
pop
xchg
cmp
sbb
add
cli
cmc
je
icebp
rclb
loop
mov
sbb
cwtl
mov
imul
jb
inc
test
in
jns
lret
dec
ror
cmc
fisubl
jb
push
xchg
dec
jno
and
in
pop
cli
aaa
mov
shll
and
das
pop
sahf
mov
leave
je
push
xor
ljmp
xchg
call
jbe
mov
jg
lret
mov
or
in
or
cltd
enter
lcall
xor
popa
lret
xchg
push
or
mov
pop
or
leave
mov
sahf
jmp
add
sti
jl
dec
xor
js
cmp
mov
ss
faddl
cmp
outsb
push
jmp
or
aas
popl
pop
cwtl
mov
inc
push
mov
cmc
fldcw
lds
addb
inc
mov
push
adc
ret
scas
ror
scas
int
out
aaa
dec
insl
je
movsb
pop
mov
and
popl
das
jp
rcll
pop
xchg
pop
inc
scas
push
xor
xchg
scas
mov
cmc
fs
jmp
mov
mov
fnsave
xchg
sbb
stos
lahf
lods
mov
ds
lret
xchg
es
jae
lret
fnstcw
repnz
push
jp
movsl
in
mov
mov
loopne
fimull
pop
sbb
adc
pop
xor
outsb
aas
mov
lods
xchg
icebp
mov
adc
imul
or
cmp
lret
and
inc
pop
adc
gs
dec
cmpsb
push
in
fcoml
arpl
outsl
and
adc
arpl
inc
pop
popa
xor
mov
clc
and
mov
loopne
lods
mov
dec
lret
or
or
xchg
stc
out
jo
pop
inc
mov
xor
lret
or
lcall
int3
addb
es
and
scas
movsb
sbb
xorb
xor
xchg
mov
popf
fnstsw
adc
jb
insl
bound
test
push
xchg
push
add
sbb
out
adc
jnp
aas
std
mov
or
adc
sarb
jnp
std
movhps
imul
ret
mov
bound
mov
and
fmuls
stc
push
push
push
lds
push
jle
out
das
mov
out
rolb
pop
mov
push
xlat
xchg
inc
rcr
imul
daa
aam
xchg
pop
jl
fwait
inc
xchg
ja
cmp
in
mov
xchg
das
test
adc
sahf
cmp
push
popa
sbb
pop
sbb
idivl
std
fimuls
out
mov
notl
inc
sub
or
dec
cmp
stos
shlb
shll
scas
mov
pop
clc
mov
xor
fs
inc
lcall
iret
xchg
sub
xor
pushf
xchg
sub
pop
loopne
dec
push
adc
sbb
mov
or
iret
jg
mov
aaa
add
mov
in
inc
adc
inc
aaa
lods
pop
or
or
and
lahf
dec
into
or
scas
bound
lea
aas
scas
movsb
push
add
pop
fs
dec
fldcw
adc
aas
inc
loope
xlat
pop
pushaw
pusha
mov
imul
xor
lret
adc
notl
cld
sbb
pop
mov
mov
pop
pop
add
cmpsl
addr16
jge
and
scas
repnz
mov
inc
inc
pusha
add
mov
mov
pop
mov
pop
sub
insl
cmpsb
ja
cmc
push
xchg
mov
fidivs
mov
cltd
out
xchg
test
mov
mov
lock
push
xor
lret
lods
add
loop
movsl
arpl
inc
dec
adc
and
add
lds
cwtl
je
dec
sti
mov
xor
or
adc
ds
mov
fstpl
pop
popa
lret
stos
sub
addr16
xchg
enter
or
clc
call
scas
shlb
pop
and
pop
add
xchg
outsl
push
fucomi
push
push
or
outsl
cmp
sbb
fisubs
cld
pop
roll
orb
pop
out
jb
sbb
fwait
rorl
pusha
mov
cld
aas
xchg
in
repz
loopew
add
repnz
sub
pop
dec
lret
jp
icebp
or
and
ss
shlb
and
jo
adc
jmp
int
adc
mov
jo
mov
and
fwait
mov
test
ljmp
dec
testl
in
and
in
imul
mov
jmp
mov
lock
sbb
leave
imul
cmpsb
adc
jns
adc
add
mov
add
pop
aam
and
pop
push
mov
mov
mov
mov
sti
xchg
jne
fwait
or
and
mov
pop
clc
mov
cmpl
jl
mov
pop
xchg
in
cmp
arpl
dec
pop
lret
jle
mov
daa
idivl
dec
shlb
scas
sub
or
push
sti
popf
inc
loope
xlat
outsb
pop
dec
in
dec
neg
mov
xchg
push
out
test
dec
ds
push
movsl
sti
out
pop
adc
ljmp
add
fwait
test
rcrb
orb
adc
in
cmc
and
pop
roll
add
stos
fs
loope
das
repnz
divb
lock
and
das
push
jle
cmpsl
sbb
push
movsb
mov
adc
notl
or
mov
jge
ja
shrl
pop
ret
dec
sti
jecxz
push
out
mov
roll
or
push
andb
sbb
jne
mov
push
push
orl
repnz
popf
sbb
in
mov
stos
sti
aas
inc
addr16
mov
lahf
outsb
fistpl
ds
xchg
lahf
jl
xor
sar
add
inc
fwait
idivl
test
inc
push
ror
lea
jecxz
int3
xchg
cmp
inc
jmp
roll
subb
aaa
or
sub
dec
orl
lahf
loope
pop
inc
addb
dec
mov
in
xchg
pop
inc
mov
daa
dec
and
mov
test
jae
sbb
xchg
adc
into
pop
adc
enter
mov
decl
aam
mov
inc
cmp
add
out
mov
adcl
mov
test
pusha
or
mov
mov
repnz
and
imul
mov
xor
xchg
call
stos
add
adc
add
lds
cwtl
std
pop
sub
add
dec
lods
ds
mov
mov
mov
cwtl
sbb
mov
sbb
fiaddl
lcall
pop
sahf
sub
mov
ficoml
imul
rcll
add
inc
outsb
pop
inc
jno
stos
cmpsl
test
jns
xchg
mov
mov
pop
push
sub
test
inc
jae
mov
push
push
dec
sti
test
push
jl
clc
in
arpl
push
xor
lret
jecxz,pn
pop
dec
and
pop
jp
pop
jo
mov
movsl
or
inc
shlb
sub
iret
or
fsubr
arpl
scas
xchg
daa
inc
jnp
rclb
hlt
ljmp
mov
fcomip
iret
imul
mov
jae
jle
popa
mov
mov
push
mov
push
mov
mov
pusha
test
xor
xor
mov
adc
es
int
aad
loopne
in
add
arpl
adc
loop
xchg
pop
add
and
jns
cmpsb
push
inc
inc
fldl
xchg
push
push
movsb
jp
mov
adc
mov
cs
lods
int
fsubr
xchg
pop
sbb
pop
push
pushf
pusha
push
les
push
js,pt
mov
loope
test
and
pushf
pop
jge
call
notb
add
icebp
addb
cmpsb
and
jbe
mov
cmp
popf
ja
sbb
add
xor
iret
mov
push
pop
not
adc
pop
xchg
mov
dec
mov
mov
aam
mov
lret
mov
dec
or
les
mov
rolb
push
sub
sub
pcmpgtd
insl
sub
fistpl
repz
outsl
sub
mov
shrl
sbb
es
filds
dec
inc
lret
add
xor
out
cmc
or
scas
hlt
aas
mov
out
out
rorb
loope
popf
repnz
push
jmp
sbb
jmp
inc
cmp
and
sub
sbb
inc
faddp
sub
or
stos
pop
dec
inc
stc
adc
out
push
cmpsb
cmp
loop
adc
ljmp
addr16
jle
pop
add
mov
xchg
pop
dec
xchg
mov
xchg
pop
xor
fcoms
int3
push
aas
push
out
pop
xor
jg
jg
sub
and
inc
js
sub
inc
or
sub
andb
fdivr
clc
in
push
in
mov
or
andl
push
and
int
loope
lcall
adc
call
inc
fs
sbb
lods
jns
movzbl
loop
jne
rcrl
fcompl
shll
push
repz
add
sbb
pushf
movsb
adc
pushf
out
xor
es
out
in
mov
imul
cmp
loop
mov
fs
sub
in
cli
jmp
outsl
pop
js
negl
ret
repnz
lods
xor
lock
jb
orl
or
pop
mov
stos
jo
xchg
ljmp
out
dec
cmp
dec
push
mov
mov
sbb
push
pop
cmp
cmp
lahf
pusha
es
cwtl
jbe
lods
imul
jae
push
jle
ret
test
daa
scas
xor
push
xchg
enter
out
pop
pop
jp
jl
in
sub
and
mov
or
jb
inc
push
mov
repz
mov
fsubr
xor
cmp
je
mov
seta
pop
dec
jnp
pushf
add
sarl
fs
pop
jnp
stos
xchg
rclb
sub
push
ret
dec
cli
mov
sub
mov
xchg
sahf
rcr
push
adc
and
test
mov
pop
xchg
or
cmc
in
sbb
lret
push
jl
icebp
sbb
loop
xchg
cmp
mov
sbb
js
addr16
mov
jmp
test
mov
lds
sbb
outsl
xlat
sub
outsl
aaa
mov
xchg
cmp
mov
inc
imul
inc
add
fbld
jg
cmpsl
fwait
outsb
push
dec
dec
insl
lret
dec
nopl
sar
pop
popf
test
arpl
dec
mov
cmc
jle
fstps
xor
xchg
adc
mov
rorl
add
flds
add
push
loopne
stos
sub
pop
xchg
mov
mov
jae
fwait
cltd
pop
sti
cs
mov
mov
ffreep
in
lahf
add
xchg
or
push
rcrb
outsl
int
pop
jns
das
sahf
out
push
in
cmp
les
jle
mov
xor
cltd
insb
xor
repnz
inc
incb
dec
jb
pop
sub
cmpsl
out
add
incl
out
xor
xor
push
cmc
fs
dec
jae
xor
test
pop
sahf
pop
in
sbb
add
rorb
movb
add
mov
push
mov
andb
test
adcb
repnz
add
ret
dec
inc
sub
inc
mov
pop
sahf
adc
shrl
testl
dec
aad
shrl
test
lcall
add
pop
mov
out
sub
fsincos
jae
fs
mov
mov
loope
xchg
and
adc
test
adc
mov
in
lret
rorl
sbbb
nop
subb
push
inc
dec
in
mov
xorl
imul
int3
js
ss
enter
fstpt
xchg
xor
aad
jmp
pop
cwtl
push
adc
fcoms
pusha
inc
das
jno
sti
mov
mov
lret
adc
int
mov
dec
std
lea
aas
rcll
cmpsb
inc
push
cmpsb
pop
or
cs
in
jecxz
fbld
out
sub
std
add
push
roll
dec
push
xchg
pop
in
loope
insl
mov
insl
je
cmc
jae
jge
rcrl
sub
hlt
ja
pop
xor
lahf
jbe
pushf
push
xchg
adc
pop
je
mov
sahf
pop
xlat
push
mov
and
outsb
and
cmp
popa
pop
pop
scas
xchg
sub
add
ja
inc
xor
in
inc
jecxz
fdivs
adc
cmc
push
lea
cwtl
xchg
nop
mov
outsl
jae
dec
loop
addr16
and
mov
std
jmp
xlat
scas
mov
fs
mov
daa
popa
cmp
sub
cmpb
cmp
xorb
sarb
pop
xlat
shrb
dec
add
aas
mov
fisttpll
sub
fists
xchg
in
mov
pop
pusha
push
push
lock
adc
gs
sbb
jo
in
movsl
inc
test
into
pop
sub
idivb
lret
enter
call
test
scas
mov
cli
dec
call
pop
push
ret
insl
loope
sbb
and
clc
outsl
popa
pop
rcrb
jo
jb
mov
ljmp
sub
out
outsl
pop
adc
dec
cmp
clc
adc
out
imul
push
mov
jnp
lahf
jge
pop
leave
and
sbb
lock
dec
fists
in
test
imul
imul
adc
mov
stos
insb
ljmp
mov
dec
stc
jo
arpl
pop
sub
lret
lcall
loope
adc
test
fsub
mov
data16
iret
test
or
mov
lret
or
fstl
repnz
dec
lret
pop
sub
insl
jp
or
xchg
and
add
dec
in
idivb
or
and
lea
and
sub
xor
fnstcw
and
jbe
ljmp
lock
out
mov
inc
mov
insl
popf
fidivs
dec
sbb
movsl
repnz
aad
fs
and
cmp
mov
mov
sub
data16
outsb
dec
lret
jne
inc
or
and
mov
rcrl
test
daa
fs
imul
jg
push
cltd
sbb
into
pop
sti
in
fnstcw
pop
push
mov
repnz
push
loopne
push
mov
adc
out
cmp
outsl
test
push
jne
pmaxub
pop
jns,pt
addr16
les
mov
xchg
pop
jns
mov
mov
int
and
cmp
sahf
cltd
sarb
pop
jae
or
jl
rol
add
and
lods
out
xor
lcall
xchg
xor
dec
dec
jl
push
dec
es
stos
repnz
add
test
inc
out
xor
mov
push
push
dec
mov
pop
dec
inc
jl
adc
sbb
push
into
xchg
lret
fwait
leave
xchg
sbb
or
inc
jl
fisubrl
bound
xchg
mov
repz
insb
jp
sub
stos
xchg
and
mov
sbb
fadds
cmc
jb
or
sahf
ret
xchg
jae
sbb
xchg
ss
mov
mov
shlb
jmp
test
out
and
inc
insb
mov
lret
xchg
push
inc
add
pop
test
dec
hlt
cmpl
movsl
dec
pop
fsubl
mov
inc
push
adc
mov
dec
jo
inc
mov
sbb
test
imul
movsl
std
in
jo
push
mov
out
sbb
dec
and
adc
cmp
shll
adc
fwait
mov
nop
inc
inc
rorb
movsl
add
fisttps
sub
pushf
jp
je
cmc
pop
shrl
nop
dec
mov
pop
out
out
cmp
outsb
pop
mull
fwait
sbb
sub
xorl
sbb
out
imul
or
xor
shrb
or
push
leave
mov
and
movsb
and
in
jb
push
cld
add
add
stos
add
cmpsl
push
dec
cmp
mov
add
gs
cltd
repnz
jmp
dec
out
lea
fisttpll
push
cmpsl
ret
daa
xchg
xor
add
icebp
mov
and
jmp
imul
xor
test
es
arpl
mull
push
pop
popf
or
movsb
shlb
jbe
mov
sub
dec
cmpsl
loope
in
push
adc
jbe
push
push
rolb
xchg
shl
arpl
xor
mov
dec
imul
data16
dec
js
jne
jne
mov
push
mov
jle
dec
inc
dec
pusha
mov
cld
stos
mov
push
out
loope
sub
cwtl
cmp
or
andl
lret
aam
aas
adc
imul
or
push
loop
jge
hlt
outsl
lcall
sbb
xchg
mov
and
sub
mov
jl
jbe
movq
lret
in
enter
sub
into
test
xchg
inc
jnp
inc
sbb
out
insb
int
fs
pop
insb
mull
xor
cli
sub
jns
mov
xor
les
in
sub
push
jg
out
scas
bound
dec
pop
std
addr16
scas
addr16
arpl
das
xchg
sub
xchg
add
dec
into
sahf
sub
lret
add
rcrb
fxtract
mov
mov
movsl
je
or
ja
imul
pop
jg,pt
fwait
xlat
bound
arpl
adc
test
mov
leave
stos
adc
and
pop
push
notl
dec
ja,pn
mov
negl
repnz
decb
and
sbb
lods
adc
stos
sahf
xor
push
mov
lods
pop
pop
mov
leave
sahf
add
nop
test
sbb
sbb
outsb
sar
pop
adc
cmpsb
mov
leave
xchg
add
es
or
cli
dec
adc
faddl
adc
pop
stos
mov
scas
mov
mov
gs
jbe
dec
dec
in
das
cld
dec
push
movsl
add
arpl
dec
scas
mov
loopne
xchg
icebp
mov
sub
mov
pop
jecxz
int
inc
inc
inc
out
cmp
shlb
mov
xlat
and
pop
and
ret
lock
pusha
je
notl
jmp
mov
ret
xor
sahf
jno
push
xchg
pop
pushf
xlat
mov
dec
nop
das
jno
pop
popf
push
shll
and
out
jp
pop
loop
lret
inc
insl
xor
call
cmp
movsb
stc
jecxz
imull
sub
aas
cmp
push
fcoms
pop
mov
cmp
mov
test
mov
jb
adc
rcrl
sub
fsubr
pusha
loopne
sub
imul
idivb
xchg
sbb
pop
loop
xchg
std
andb
xchg
push
and
fiaddl
and
mov
std
sbb
inc
mov
mov
enter
stos
inc
add
je
xor
test
sbb
xchg
testl
in
dec
rcll
add
pop
ss
je
sub
ret
sar
adc
andb
ss
xor
mov
or
and
scas
xrelease
push
int
xchg
mov
push
dec
daa
out
cltd
jge
xchg
or
repnz
mov
cli
mov
adc
call
add
sub
mov
fs
and
jge
dec
gs
sub
mov
xor
je
jl
in
mov
aad
ljmp
sbb
cld
mov
sbb
iret
jle
and
xor
sbb
out
dec
add
sbb
xor
dec
dec
rcl
mov
cmpsb
test
push
xorl
ret
leave
testl
push
and
jge
jecxz
add
push
cld
push
jno
rorb
or
fs
mov
jp
add
rcrb
dec
iret
xchg
push
mov
pop
out
adc
test
push
push
test
xchg
in
or
shl
mov
pop
pop
jmp
sbb
and
cli
cli
xor
test
dec
cmp
add
leave
jecxz
xchg
imul
pop
andl
push
xor
ljmp
dec
aam
sbb
and
jmp
fcoms
xchg
sub
ljmp
insb
mov
pop
sbb
dec
mov
mov
hlt
aas
pop
outsl
push
scas
stos
mov
mov
adc
mov
stos
hlt
sbb
les
pop
test
rolb
cmp
mov
dec
pop
cltd
cltd
and
hlt
fcomps
movsl
stos
mov
mov
mov
popa
outsb
cld
sub
shll
aas
ret
jmp
outsb
scas
lret
hlt
pushf
mov
adc
call
jno
xor
dec
xorl
lods
movsb
xchg
add
ss
sub
adc
sbb
xor
out
jbe
xchg
jle
cli
sub
or
push
sbb
sbb
pop
dec
in
popa
pop
les
lea
int3
addr16
dec
data16
sub
scas
and
inc
repnz
and
rorl
test
add
add
push
jecxz
sti
push
insb
xor
mov
push
mov
or
lahf
leave
imul
stos
xchg
add
testb
sbb
test
je
push
jnp
bound
mov
jp,pt
clc
push
pushf
shr
mov
ja
jle
aad
push
cmp
mov
xor
and
test
inc
xlat
sub
insl
mov
or
pop
pop
repnz
sahf
fwait
pop
fsubl
stos
adcl
mov
push
rcrl
mov
dec
aad
pop
fcomip
add
add
mov
cwtl
cmc
dec
mov
pop
xchg
or
or
fnstcw
mov
ret
mov
mov
sub
mov
mov
cltd
mov
pop
cmp
mov
inc
and
scas
and
loope
inc
out
jo
cmp
mov
cmc
push
iret
fs
ss
pushf
jl
xor
push
ret
push
das
mov
mov
xor
std
mov
xor
fwait
and
ret
repnz
adc
aas
sbb
sahf
shrb
insb
dec
push
add
lret
call
mov
out
xor
loopne
push
mov
sub
sub
push
lods
cwtl
pop
pop
shl
xchg
sub
ds
js
push
adc
or
mov
mov
clc
jle
cmpsl
jge
sub
jmp
lahf
les
stos
mov
popa
and
inc
fwait
inc
adc
movsl
iret
and
ja
sub
push
sub
movsl
mov
loop
mov
das
outsl
daa
leave
push
push
insb
outsb
add
add
fstpt
rclb
int3
mov
sbb
repz
dec
sub
sub
add
leave
mov
data16
or
mov
das
adc
jmp
daa
ret
sbb
daa
mov
loop
sti
lahf
dec
cmp
mov
pop
pop
push
icebp
push
xlat
call
inc
xlat
fimuls
in
ljmp
inc
notl
mov
fsubs
push
popf
aaa
popf
outsb
mov
cmc
ja
dec
dec
les
or
mov
mov
dec
mov
ss
xor
or
fimull
sub
xchg
cs
pop
xchg
push
insl
mov
pop
jl
sbb
inc
sub
pushf
add
std
xor
sbb
ss
pop
push
jae
jmp
shll
arpl
push
push
test
xchg
push
imul
mov
sbb
in
rcrb
xor
mov
testb
xchg
loop
jle
cmpb
jnp
adc
inc
mov
mov
popf
hlt
bound
jo,pn
xor
sub
insl
xchg
dec
idiv
fcompl
scas
pop
dec
adc
addb
push
outsb
sub
and
aas
jecxz
sub
sbb
pop
or
and
inc
xlat
pop
ret
jge
jecxz
inc
xchg
gs
fdivr
out
in
xor
jecxz
fwait
arpl
lock
ret
pusha
mov
test
ds
mov
mov
mov
lods
mov
mov
inc
or
es
adc
shl
repz
inc
loop
xchg
addr16
jnp
test
inc
ljmp
mov
sub
rcrl
cmp
jmp
or
jle
ljmp
faddl
jb
out
pop
dec
mov
jle
dec
pop
out
dec
ror
xchg
rorb
pop
jb
and
mov
xor
pop
and
std
pop
imul
mov
into
jg
jg
pusha
popa
inc
clc
sti
dec
jle
sub
add
imul
or
fst
lods
test
aam
fimuls
xor
stos
lret
add
test
and
sbb
rclb
adc
push
dec
xchg
pop
je
xlat
adc
pushf
subl
xor
jb
dec
leave
imul
dec
add
push
xchg
sarb
scas
sbb
xchg
pop
xchg
cmc
cs
sbb
outsl
or
sub
cwtl
sub
lcall
jbe
jae
mov
cmp
pop
divb
fucomi
xor
sahf
mov
sti
lret
or
and
stc
outsb
dec
mov
outsb
shll
stos
and
cmp
sub
pop
push
pop
stc
push
repz
ljmp
into
aam
ret
add
dec
inc
das
lods
lahf
lock
sub
aad
xor
cmp
sti
ds
push
add
xchg
movsb
xor
rolb
cmc
mov
pop
shlb
pusha
gs
pop
dec
add
sbb
addr16
cs
icebp
xor
push
and
lods
pop
inc
cmpl
in
sbb
sbb
inc
mov
xchg
rcr
jne
jg
jp
jno
add
push
shlb
jecxz
adc
xor
xor
push
inc
mov
sub
dec
sub
pop
in
lock
dec
in
mov
rorb
sbb
repnz
ret
mov
add
popa
xor
pushw
std
or
jns
cmpsb
in
stos
adc
jno
mov
popf
mov
fwait
mov
outsb
inc
xchg
dec
sbb
dec
jge
pop
stos
ljmp
and
imul
mov
stc
or
pop
inc
fwait
pop
mov
lea
ja
inc
jno
push
out
addl
adc
xchg
sbb
and
call
and
bound
adc
lret
jle
fimull
xor
cmp
jl
mov
xor
sbb
mov
pop
mov
dec
repnz
push
icebp
mov
popf
xchg
pop
sbb
mov
xchg
add
add
dec
aas
xor
cmpsl
push
repz
xor
mov
outsl
adc
scas
sub
adc
xadd
jne
ret
or
mov
inc
fldenv
lret
roll
scas
fnsave
push
or
mov
jno
andl
sti
push
cmp
fwait
imulb
pop
repnz
and
xor
icebp
pop
mov
mov
or
pop
inc
imul
fisubrs
jns
xlat
xchg
ret
out
push
xor
arpl
scas
pop
mov
or
cwtl
cwtl
push
test
inc
pop
sub
and
mov
mov
mov
sub
jns
ljmp
les
hlt
and
ds
pop
adc
lock
mov
movsl
inc
cmpsl
xor
jmp
repz
sub
mov
jae
cmpsb
fists
loopne
sbb
mov
mov
jmp
sar
mov
call
cmp
lret
scas
add
out
std
pop
sbb
inc
and
fisubl
je
test
dec
aas
mov
pop
jb
jno
aaa
or
hlt
pushf
push
hlt
scas
or
testl
add
sbb
push
jnp
push
push
into
inc
in
test
out
pop
inc
gs
inc
lret
lock
out
out
movsl
sbb
das
jnp
sbb
hlt
sbb
std
popf
or
rcrb
jl
or
nop
shl
stos
or
pushf
ljmp
jecxz
push
mov
jge
push
repnz
faddl
inc
xchg
xchg
hlt
in
jg
add
xor
jp
jle
jne
inc
lods
mov
dec
test
stos
lock
stos
push
mov
data16
or
mov
gs
lret
push
jp
or
rolb
push
sub
rolb
and
sti
mulb
es
mov
cmp
pop
stc
mov
xchg
or
outsl
in
mov
and
cmp
les
cmc
cmp
or
xchg
add
les
out
jle
jle
cmc
in
daa
mov
xchg
cmpsb
adc
test
xor
pop
push
or
adc
jns
add
mov
sub
sbb
jae
or
test
push
pusha
push
push
inc
dec
arpl
or
sub
push
repz
mov
cli
std
int
loop
push
hlt
push
and
scas
xchg
jge
jo
fbld
adc
jge
push
add
xor
clc
pusha
push
jo
xor
stos
mov
enter
pop
jno
add
mov
addb
es
jecxz
push
and
mov
ja
and
adc
movsb
fistps
inc
cmpsb
or
mov
pop
rorb
pushf
xor
je
cmpsl
push
test
aaa
fidivrs
and
imul
cmpsl
xchg
pop
out
lods
push
cmp
shll
push
icebp
dec
fbstp
jns
gs
mov
or
insb
sub
lock
pop
mov
cmpsb
iret
adc
mov
cmpb
push
bound
and
pusha
sbb
pop
pop
or
adc
add
das
and
rorl
pop
cmp
xchg
xchg
mov
ret
inc
or
sbb
jne
adc
popw
mov
xor
xchg
mov
shl
fimuls
js
rep
sub
lds
or
mov
mov
mov
fwait
lret
testl
cmpsb
cli
aas
lods
std
rcr
mov
xor
fcmovnbe
inc
jbe
sbb
repnz
push
xor
scas
aad
xchg
popf
pop
cmp
imulb
pop
or
test
pop
iret
sub
outsb
or
xchg
outsb
sbb
into
insb
stos
cmp
ljmp
pop
mov
fbld
subb
cmp
push
cmp
xchg
cmp
xchg
scas
add
mov
mov
cmp
aam
xor
push
nop
mov
cmp
jns
decl
pop
ror
es
clc
call
stos
roll
frstor
icebp
shl
fs
pop
dec
andb
mov
repz
or
pop
xchg
mov
ret
dec
cmp
jno
in
insb
fistpll
add
push
add
pop
icebp
jae,pn
mov
call
jge
lret
pop
adc
in
arpl
popf
repz
in
movsb
mov
scas
cmp
cmp
mov
cmp
nop
jno
pop
leave
icebp
jae
stos
divb
or
mov
imul
mov
test
xor
push
push
push
cli
scas
lcall
mov
add
cltd
mov
test
jns
faddl
xor
aam
flds
ret
mov
sahf
cmp
or
xchg
in
push
and
test
in
jbe
scas
adc
aas
aad
inc
pop
and
lahf
outsl
fsubl
and
iret
push
sti
inc
inc
movsl
cmc
dec
sbb
mov
xor
xor
roll
mov
rclb
mov
sbb
mov
test
mov
in
outsl
inc
jmp
push
sarl
shl
pop
ss
aad
adc
das
mov
xchg
jmp
mov
sbb
popf
aad
rcll
pushf
xor
xor
mov
mov
mov
push
jecxz
lcall
or
pop
enter
sti
cmp
jp
jmp
and
adc
push
pusha
enter
clc
insb
movsl
cs
and
mov
mov
stc
pop
add
les
andl
and
sub
idivb
addb
jno
adc
testb
fstpl
movsl
dec
mov
jnp
jg
jle
lods
xchg
stos
mov
inc
in
sahf
pushf
jb
dec
imul
mov
icebp
hlt
push
mov
das
add
mov
test
xchg
cmp
add
mov
inc
cmpsb
cmp
xor
test
sub
out
pop
cmp
pop
mov
push
and
loop
add
aam
pusha
jbe
andb
ja
mov
cwtl
out
cmp
les
xchg
insl
adc
jns
jp
leave
sbb
aad
mov
addr16
cmp
push
push
mov
pop
pop
insb
mov
mov
inc
aam
sub
in
xor
sti
xchg
addr16
cmpsb
sar
cmp
jb
pop
dec
cwtl
inc
sti
pop
notb
js
xor
sub
test
xchg
mov
or
dec
gs
mov
decl
fstl
addr16
cmp
aas
push
lret
fistl
and
sbb
xchg
sbb
push
dec
mov
loopne
sbb
divl
sbbl
adc
push
pushf
add
daa
dec
and
ret
sbb
xlat
sub
es
ret
movsb
jno
enter
push
jmp
sub
pushf
mov
xchg
jmp
add
out
dec
mov
fildl
sbb
arpl
popa
movsl
nop
add
cmp
and
jl
xchg
test
rcl
lret
test
inc
inc
pusha
js
dec
daa
nop
or
sub
mov
or
or
xchg
or
es
pop
adc
ss
push
mov
mov
xchg
sahf
orb
xchg
clc
jmp
pushl
sahf
and
into
popa
sti
mov
pop
jne
jno
and
jne
mov
ljmp
inc
arpl
nop
cs
iret
es
push
into
loopne
pop
imull
lcall
mov
cwtl
lret
sahf
and
popf
insb
call
add
dec
cs
shlb
rolb
mov
add
outsl
and
add
and
push
pop
mov
and
and
rolb
xchg
mov
pop
mov
jae
mov
test
jge
pop
dec
lods
int3
xchg
mov
cmpl
out
push
xchg
push
push
add
mov
jge
mov
jns
inc
adc
into
pop
test
fnstcw
mov
inc
or
cmpsb
loope
and
test
xor
add
imul
mov
ffree
push
push
xchg
mov
mov
pop
icebp
icebp
mov
xchg
mov
jo
stc
pop
push
xor
dec
int
fsubl
jnp
push
and
inc
cli
frstor
mov
int
call
xor
sahf
adc
insb
adc
xchg
cmp
test
pop
dec
sub
fistps
xchg
enter
pop
out
test
inc
rol
lock
hlt
mov
or
mov
mov
jno
out
test
jno
rorb
or
ret
imul
insl
lret
aad
and
push
lods
pop
cmc
mov
pop
ds
pusha
dec
mov
push
jecxz
sbb
outsb
dec
mov
adc
push
popa
pop
addr16
xchg
gs
jge
push
sbb
adc
xchg
xchg
fs
ss
loope
lock
mov
sub
int
xor
mov
cmp
cmp
data16
xor
mov
mov
cmp
daa
lcall
add
ss
fcoms
sbb
xchg
mov
call
movsb
cmp
insb
sbb
adc
sub
xlat
dec
popf
inc
call
sbb
adc
fnop
mov
fsubs
pop
mov
push
push
or
fs
xchg
cmp
sbb
cwtl
sub
xorl
rcl
in
fwait
popf
add
int
jp
lret
sbb
int
push
pop
or
mov
and
bound
enter
sbb
fsubrl
cmp
dec
sbb
sub
hlt
inc
xchg
dec
fsubrs
jge,pn
fsub
dec
jecxz
repnz
clc
mov
daa
mov
pop
stos
cwtl
test
sbb
adc
jae
lcall
cmpsb
inc
into
lods
les
stos
test
and
cs
sub
lds
dec
add
movsb
pushf
out
add
popa
xor
movsl
stos
xchg
clc
stos
test
mov
insb
cmpsl
and
fcoml
add
sbb
pop
sbb
cmp
clc
scas
mov
scas
lods
lahf
inc
outsl
outsl
scas
sbb
test
mov
pusha
xchg
shll
sbb
loopne
sub
mov
fwait
mov
xchg
call
jbe
mov
loopne
sbb
shl
shll
adc
cmp
xrelease
pop
push
lods
int3
mov
pusha
lods
and
inc
push
mull
mov
ja
pop
push
cmp
dec
inc
hlt
addr16
mov
sbb
adc
jge
or
pop
fisttps
dec
scas
jb
adc
movsb
cli
jg
mov
add
jge
test
mov
scas
div
xchg
inc
sub
mov
xchg
sbb
lds
sbb
dec
mov
jl
jg
subl
pusha
jp
test
push
das
add
ja
mov
cwtl
xor
push
dec
jp
fcmovne
dec
loopne
or
add
mov
in
call
push
sub
pop
aas
out
lret
pop
sbb
movsb
in
icebp
push
xchg
sbb
lods
insl
cmp
inc
inc
imul
xchg
das
scas
addr16
adc
adc
aam
daa
adc
jmp
aas
stos
enter
je
andl
jbe
addl
faddl
and
mov
pop
out
inc
mov
test
addr16
aad
cmp
add
repz
xchg
push
cwtl
jo
inc
dec
test
inc
mov
lock
push
push
mov
push
pop
pop
cltd
in
ljmp
cmp
mov
inc
fidivrs
clc
out
loope
in
xor
rorb
stos
pop
cmp
rorb
jb
clc
shr
lea
mov
mov
emms
cltd
cmpsb
inc
outsb
jo
mov
outsb
in
xlat
fwait
xchg
scas
gs
fs
cli
mov
sub
pop
cld
and
ret
nop
mov
mov
mov
movsb
lret
xchg
decb
sbb
adc
lcall
iret
orl
subb
in
add
mov
imul
rolb
in
add
jmp
jnp
iret
sub
sbb
xor
mov
sbb
mov
pop
nop
or
call
mov
aaa
jns
xchg
cld
es
cmp
mov
jo
sub
jge
add
mov
push
aad
fstl
fidivrs
jp
lret
out
shlb
aaa
cmp
jmp
outsl
cmc
pop
test
adc
xor
out
xor
das
gs
and
push
cmpsl
outsl
mov
mov
or
fldenv
and
cmp
xor
xor
mov
aaa
pop
push
add
mov
pop
pop
mov
push
push
mov
cmpsl
mov
ret
sub
ss
sti
inc
in
cmp
mov
sub
bound
push
cmp
adc
je
data16
ret
jle
jg
dec
xor
je
or
jmp
dec
enter
lret
pop
shlb
or
je
popa
mov
cmp
sbbb
fisubs
mov
adc
inc
jp
push
mov
jmp
fistl
push
jno
in
test
sub
lea
push
in
loop
dec
pop
push
mov
or
push
outsb
mov
ret
mov
mull
loopne
imul
add
loopne
lock
or
stc
mov
push
or
pop
xchg
adc
inc
test
push
fs
cmc
enter
out
movsb
sub
leave
push
ret
pop
cmp
sub
test
sub
xchg
out
testl
stc
inc
es
sbb
xor
inc
ds
call
out
adc
lea
cmpsb
mov
stc
lret
movq
cltd
jp
negl
pop
xchg
or
dec
add
xor
inc
pop
pusha
dec
out
mov
pop
inc
and
push
clc
sbb
add
fdivl
js
mov
incb
and
faddl
mov
lea
xchg
pop
dec
cwtl
fcompl
mov
loope
sbb
dec
ja
andb
fidivrs
jo
xchg
insb
sub
dec
enter
xor
push
lret
push
jnp
sub
outsb
aam
jo
xor
push
dec
out
jb
inc
stos
dec
jb
jmp
jbe
mov
adc
sbb
cltd
cmp
mov
inc
jl
aad
add
in
xchg
push
and
dec
add
fs
ljmp
insb
dec
in
mov
cmp
shrl
mov
push
dec
mov
sarb
movsbl
pop
or
cmpsl
aad
dec
pop
cmpsl
inc
push
insb
adc
jl
mov
dec
adc
sbb
cmp
adc
xchg
pushf
add
imul
xor
mov
out
add
dec
ds
sahf
mov
cmpb
aad
ja
pop
cs
les
roll
inc
mov
jecxz
sbb
stos
clc
push
fisttps
sub
jb
and
xor
jg
pop
mov
cs
mov
jnp
cwtl
mov
enter
loop
jns
or
jbe
data16
xchg
lods
int3
je
mov
xor
ss
xor
push
fisttps
fadd
stos
sub
sub
mov
or
ret
pusha
cmp
pop
mov
cmp
jp
rcll
aad
jmp
out
or
testb
or
fldenv
sub
xor
jmp
mov
inc
or
xor
dec
fmul
dec
cwtl
data16
movsl
add
mov
mov
adc
jnp
mov
jno
in
and
mov
roll
jns
adc
in
in
imul
push
test
mov
fwait
stc
aas
ljmp
mov
shll
cmp
rcl
mov
sub
pop
enter
mull
fwait
mov
in
push
ds
test
lret
dec
and
or
push
jg
jb
sub
xchg
dec
dec
loopne
mov
out
stc
jne
insl
lahf
mov
in
mov
jne
lret
int
mov
sub
pop
jmp
dec
cli
enter
enter
mov
ret
ja
aas
and
pop
repz
mov
xchg
aam
icebp
daa
add
push
mov
aaa
mov
insb
sub
jl
in
jmp
push
pop
lahf
ret
and
mov
pop
dec
int
imul
ljmp
or
inc
insb
pop
mov
es
cmp
fildl
cmp
movsl
add
fcos
add
in
in
adc
in
ret
les
ficompl
les
jge
and
leave
incl
pusha
cltd
int3
je
xor
mov
sub
int
jp
mov
and
aas
popa
ret
mov
arpl
andb
gs
jmp
xlat
mov
mov
mov
or
adc
xchg
add
cmpsb
push
xchg
adc
mov
ja
xorl
in
sbbb
sbb
sbb
add
dec
cld
pop
push
mov
in
sub
cwtl
mov
pop
cmpsl
cli
xor
lock
arpl
push
cmpsl
testb
adc
movb
insb
or
mov
lahf
pop
mov
mov
popl
sbb
dec
pop
bound
mov
and
in
call
outsl
rep
out
pop
out
push
clc
loopne
push
or
sar
test
sub
mov
push
mov
cmc
adcl
push
jge
push
adc
icebp
inc
and
cmp
addb
sbb
and
jae
aaa
ja
and
pop
mov
insl
insl
es
adc
and
mov
pusha
push
nop
daa
test
pop
lods
outsb
out
inc
sbb
popa
xchg
movsl
xor
add
push
push
fwait
mov
sub
cmc
stos
dec
pop
push
stos
push
lahf
stc
rcrb
enter
les
cltd
and
push
xor
testb
sbb
xchg
movsb
ret
test
out
dec
xchg
inc
pop
cmc
push
repnz
js
mov
xchg
shl
mov
sub
and
cli
mov
fmul
popa
pusha
imul
mov
and
bound
sub
negb
pop
fwait
sub
and
outsb
pushf
in
pop
mov
sbb
mov
cltd
pop
lock
je
lcall
mov
add
push
cs
lret
nop
shlb
mov
sarl
inc
sbb
lods
or
xchg
out
roll
sbb
and
scas
dec
aas
mov
bound
xlat
xchg
sub
add
std
stos
movsb
mov
sti
and
scas
lods
repz
lods
jl
sbb
cmp
xchg
push
mov
ret
scas
fdivr
fwait
push
mov
icebp
jno
fs
lock
fs
adc
in
fs
ja
je
dec
hlt
xchg
shlb
dec
mov
cmp
xchg
js
je
inc
pusha
arpl
push
icebp
and
orb
arpl
mov
dec
xchg
int
mov
ss
sbb
or
mov
shl
sbb
ja
and
cltd
push
in
stos
push
inc
inc
lds
and
fsubrs
repz
notl
mov
and
lds
insb
movsl
sbb
int
adc
mov
fwait
xchg
pop
movsb
push
sahf
test
frstor
in
roll
insl
int
sbb
cmp
push
mov
xor
insl
fcompl
add
lods
insb
and
mov
adc
pop
push
xchg
cmp
jae
sub
ds
je
aad
mov
ret
je
adc
ret
sbb
popf
mov
aad
cmp
cwtl
pusha
sbb
fdivr
daa
mov
movsl
adc
sbb
pushf
rcl
sub
dec
hlt
sub
dec
cwtl
fisttpll
sbb
lods
mov
push
cmpsb
dec
inc
sub
or
ss
mov
in
jae
mov
shll
leave
xlat
mov
jmp
jnp
cmc
lret
jg
pop
xchg
cmp
mov
jle
hlt
je
or
cmp
or
push
push
in
jne
sti
dec
and
fistpl
sub
cli
sahf
divb
popf
cmc
orl
ret
add
sbb
push
mov
gs
xchg
sub
mov
adc
xchg
sahf
sbb
cmp
push
mov
mov
sub
adc
mov
test
imul
jnp
mov
out
aad
stos
xchg
repnz
test
cmp
add
fdivl
or
mov
push
lret
rclb
repnz
sub
jnp
sub
jbe
push
iret
lcall
push
mov
in
insb
add
push
dec
pop
inc
mov
leave
jecxz
ror
xlat
cmpl
xor
fs
sub
mov
pop
das
call
xchg
jbe
ja
mov
or
in
cmc
lret
lods
jle
and
cli
enter
and
rcrb
sti
sbb
int
sub
mov
xor
aas
ficoml
xchg
enter
cwtl
gs
xor
sbb
dec
test
mov
leave
cli
ret
push
loopne
dec
daa
testl
jp
jle
pop
xchg
xor
pop
jne
mov
testl
adc
push
or
fstps
test
sbb
jne
lock
aam
mov
data16
cld
or
out
add
push
movsl
mov
mov
adc
pop
xor
lret
les
xor
xor
test
fsubs
into
loopne
rorb
xchg
sbb
jne
in
jae
lret
movsl
shl
adc
push
jg
push
cmpsl
lret
sub
into
cmp
push
test
dec
cltd
pushf
mov
adc
mov
jle
pop
adc
jns
push
cmc
mov
test
and
or
cs
shl
rolb
sbb
call
call
jg
fstps
insb
test
lods
jle
fwait
repnz
pop
mov
jecxz
xor
xor
aad
and
sbb
and
pop
inc
xchg
lret
ret
fs
mov
push
lods
inc
lahf
or
mov
stc
push
cmc
mov
aam
mov
pushf
cmp
test
lahf
test
xor
sbb
std
mov
adc
out
das
lret
inc
add
fwait
icebp
pop
pop
aam
dec
pusha
out
andb
dec
shrb
movsl
jmp
lret
cld
mov
mov
pop
sbb
pop
xor
lret
icebp
xchg
lcall
sbb
rclb
dec
xchg
cmp
jl
rclb
xor
enter
outsb
mov
add
push
dec
dec
rcl
mov
cld
dec
adc
add
pop
fcoml
divb
loopne
ret
adc
push
dec
stc
test
orl
popf
inc
ljmp
inc
fnstcw
mov
cmp
jb
inc
or
rclb
mov
mov
lcall
or
insb
call
scas
mov
in
fwait
sbb
pop
and
popa
mov
bound
out
call
xchg
fldl
int3
stos
ret
cs
mov
movsl
lret
imul
ret
mov
inc
mov
or
stc
outsl
mov
mov
dec
add
icebp
pop
insb
fistl
pop
loop
mov
jecxz
jmp
jno
mov
mov
fldcw
rorl
jno
mov
xor
xor
or
or
sarb
pop
pop
in
mov
ret
test
sahf
xchg
popa
in
jmp
not
mov
dec
repnz
loopne
sub
cmpsl
lock
dec
mov
cpuid
dec
repz
mov
push
inc
dec
add
xor
out
lock
add
int3
lret
pop
aas
imul
xor
cltd
addr16
bound
ret
outsb
repnz
rorb
mov
addl
dec
pop
leave
loope
ljmp
xor
xor
ja
push
xor
insb
cmpsb
andl
or
sbb
jecxz
pop
shrb
xor
inc
ret
sbb
mov
movq
mov
jge
insb
test
in
inc
push
jbe
and
scas
xchg
test
pop
rcrl
pop
and
xchg
jmp
sub
push
cmp
popa
sub
adc
sub
std
and
adc
inc
aaa
mov
jle
pushf
xchg
inc
push
mov
push
xor
mov
fisubl
xchg
lods
add
push
andb
arpl
imul
push
xor
loop
shlb
push
pop
xor
rolb
sub
mov
adc
push
stos
adc
sbb
xchg
movsb
sbb
inc
push
rcrb
lea
rcll
clc
stc
dec
in
cmp
push
and
dec
sahf
inc
repz
clc
adc
mov
shr
sbb
fstpl
sahf
and
dec
aas
sub
scas
and
pop
popf
fdivs
sbbb
sbb
mov
es
jnp
out
sbb
pop
xor
push
adc
xchg
mov
shrl
cmp
inc
test
add
mov
data16
dec
or
dec
fiadds
iret
and
inc
aas
popa
fwait
outsl
jns
jecxz
lea
xor
or
mov
push
insl
insb
add
pop
sbb
mov
add
fisttpll
cmp
loop
aas
jp
lock
inc
mov
jbe
sub
sub
mov
fdivrs
mov
sbb
es
xchg
dec
lds
and
push
fisubs
ljmp
fcoml
gs
fs
lods
xchg
jae
push
cli
xor
xchg
pop
ja
das
hlt
daa
sbb
adc
enter
shl
jno
sub
imul
mov
pushf
push
mov
das
es
mov
out
inc
leave
mov
cmp
repnz
sub
inc
xchg
cmp
mov
inc
jae
mov
incl
fdivrs
jns
invd
stos
jl
stos
popa
out
add
mov
mov
loop
test
sbb
pop
iret
cmp
fcmovbe
test
mov
or
dec
test
xor
and
fisubrl
add
add
lods
jbe
fsubrs
jnp
cmp
pusha
inc
loope
xchg
jle
jg
lea
mov
pop
xchg
fnstcw
or
mov
pop
leave
pusha
js
stos
loop
sbbb
pusha
pushf
jp
cmpsb
adc
in
mov
mov
mov
fnsave
and
mulb
lods
mov
lret
and
pushf
push
jo
insb
inc
out
rorl
jecxz
cwtl
or
dec
xchg
add
fnstcw
mov
shlb
inc
push
shll
fwait
xchg
adc
inc
in
sub
inc
lret
movsb
lea
xchg
fldt
pop
fiadds
dec
jb
imul
movsb
xchg
in
and
into
inc
movsb
jnp
xchg
xor
lock
out
pop
stos
lock
es
push
add
mov
js
setnp
xchg
mov
ret
push
xchg
xchg
nop
popf
push
clc
cmpsl
stos
mov
inc
rorb
fs
fists
xchg
adc
ficoms
mov
push
dec
cmpsb
cmp
in
add
ja
pushf
sbb
xlat
jne
xor
lea
pop
pminsw
insb
mov
add
push
nop
xchg
outsb
enter
cmp
ret
xor
jle
in
and
sub
mov
add
or
adc
int
insl
dec
xor
mov
rcrb
inc
nop
inc
outsl
xchg
sbb
out
xchg
push
sub
pop
rol
cld
mov
in
loope
pop
ret
rep
ficoms
adcl
add
fwait
rcrl
jl
push
pop
hlt
ds
data16
popa
es
mov
dec
mov
inc
mov
pop
lds
or
das
test
sahf
or
mov
cmc
push
push
push
inc
popf
cwtl
jae
call
imul
jmp
arpl
adc
fldenv
out
sbb
inc
ja
sbb
add
outsl
or
je
call
xchg
xchg
insl
sub
mov
outsb
jne
or
mul
iret
jne
mov
mov
jg
dec
mov
dec
sbb
ret
xor
dec
scas
adc
jbe
rclb
aaa
xchg
xor
and
push
xchg
mov
adc
mov
cltd
xchg
insl
and
add
mov
ret
or
lods
push
push
orl
clc
mov
cmp
xchg
jns
sub
sbbl
inc
mov
pop
mov
jle
pop
andb
jne
push
scas
sbb
sbb
hlt
loopnew
dec
adc
adc
cltd
or
fbstp
divl
fdivrs
adc
cltd
jp
cmpsl
in
cwtl
jb
lods
inc
cmp
push
int3
lods
dec
dec
pop
mov
lret
pop
jo
mov
adc
lods
call
xchg
jg
add
and
fldenv
sub
and
insl
cmp
rol
aam
dec
std
or
push
sub
jl
mov
vmovsd
les
popf
xor
out
cmp
insb
mov
push
jno
loope
lea
out
nop
out
pop
mov
cmp
decb
insb
in
xchg
jle
pop
adc
ds
xchg
sub
stos
fs
mov
lahf
call
mov
mov
cmp
mov
adc
aaa
mov
cmp
adc
mov
insb
xchg
call
ljmp
insb
jg
xchg
lret
sub
clc
les
pop
shll
imul
out
add
xchg
cmp
jle
ss
fs
and
fsubs
loopne
mov
into
sub
or
xor
lds
fisttpl
ret
push
negb
pop
lods
mov
cmp
rcl
out
int
ljmp
mov
cmc
jp
jno
pusha
subb
ja
xchg
push
mov
xchg
add
popa
imul
pop
pop
subb
hlt
push
ss
cmp
pop
xchg
ljmp
lods
ficompl
cltd
add
xorb
in
popa
lea
repnz
pop
dec
daa
sbb
subb
jns
cmpsb
inc
push
xchg
test
and
push
push
jae
jle
pop
test
mov
or
loop
xchg
sbb
mov
xchg
lret
out
bound
mov
push
sub
in
orb
push
push
arpl
mov
nop
jp
adcb
gs
pop
jecxz
jp
jns
adc
fmuls
or
adc
test
cltd
cli
mov
je
xchg
mov
jecxz
jecxz
call
lods
jo
ja
repz
mov
push
mov
xorb
cmp
sbb
repz
mov
popa
inc
mov
push
mov
cmp
test
jb
fs
mov
das
adc
pop
imul
dec
mov
test
mov
xor
das
sub
sub
sbb
xor
fldenv
pop
sub
add
aas
push
std
dec
insb
cs
cltd
enter
pop
hlt
cltd
pop
into
jae
jle
fadd
lods
mov
xlat
push
mov
aad
aad
enter
add
sahf
dec
pop
fists
sbb
add
test
dec
nop
cltd
push
inc
pop
repz
les
fidivrs
jge
push
dec
mov
jp
ds
push
in
subl
sbb
cmp
je
pop
lahf
mov
out
inc
push
push
je
sub
inc
mov
gs
xor
outsb
stos
jb
mov
and
push
xor
mov
dec
mov
xor
inc
sub
ret
sub
mov
or
pushf
push
sub
ror
mov
mov
pop
movsl
clc
ss
push
pusha
pop
ret
lret
rolb
inc
dec
mov
das
fstl
lds
paddusb
inc
movsl
movsb
ja
ret
cs
lods
aaa
cmpsl
jb
sbb
leave
mov
out
lds
xchg
aad
and
xchg
cmp
mov
mov
sbb
scas
mov
je
fwait
jg
mov
adc
test
dec
repnz
sbb
jb
xor
mov
insb
jnp
cmp
adc
mov
bound
push
dec
mov
lret
pusha
push
push
pushf
enter
cmp
mov
dec
loope
sub
pop
xchg
cltd
mov
inc
scas
inc
rcll
repz
es
pop
or
dec
cs
into
sbb
mov
xor
test
test
ss
push
loope
cmp
loop
cmp
jge
popa
pop
scas
pop
push
aam
pushf
sub
inc
mov
jne
sbb
jno
mov
mov
call
nop
jge
pushf
js
ljmp
add
dec
imul
cmp
adc
ret
mov
push
insb
sub
jo
or
sahf
xchg
das
gs
adc
mov
xchg
lret
xor
sub
and
test
add
popf
sbb
test
sub
adc
mov
or
adc
mov
or
pop
sahf
sub
jl
jbe
ret
hlt
jl
jb
xchg
movsl
fidivrl
int3
sub
adc
add
mov
rcrl
ret
jmp
pop
fldenv
shlb
andb
add
jmp
arpl
adc
push
sysexit
fs
loope
xor
fdivrs
cmp
push
cli
jbe
mov
adc
jnp
sarb
add
add
dec
iret
movsb
add
sbb
fidivs
sbb
cltd
insb
xlat
call
mov
pop
inc
jmp
roll
pop
aas
lret
stos
loopne
pop
xchg
sbb
in
fsubs
pop
fimull
or
mov
jecxz
shr
out
out
movsb
sub
out
repz
xor
adc
lods
pop
ret
dec
call
clc
cwtl
imul
lods
sbb
clc
pushl
cs
lret
or
scas
aaa
jge
sub
pop
jno
out
dec
repnz
dec
outsl
mov
dec
dec
test
gs
push
sbb
cli
mov
pop
sbb
pusha
mov
movsl
rorl
mov
hlt
popa
aad
in
aam
pop
dec
xor
cmp
inc
push
mov
cmp
dec
or
jle
iret
outsb
call
test
pushl
in
push
pop
fstpt
stos
inc
cmpsl
je
add
or
xor
popa
scas
and
std
sbb
or
fwait
xor
pop
rorb
movsl
jns
popa
in
xchg
pop
jb
jl
lret
aas
aam
jns
inc
and
xlat
mov
add
rolb
iret
inc
add
adc
fcomi
jnp
in
adc
or
xor
add
or
mov
aad
and
sub
mulb
shlb
andl
iret
filds
mov
sub
cmpsb
adc
fldt
pop
rorb
or
cwtl
ss
sarb
cmp
xor
inc
mov
rolb
shrl
pop
ljmp
push
and
jns
mov
xor
xor
and
lret
enter
xor
cmp
js
imul
xchg
dec
mov
jmp
int3
or
xchg
push
out
mov
notl
jnp
repnz
std
adc
dec
repz
mov
lea
enter
push
add
mov
mov
fisttpl
gs
popf
sub
ret
shrl
sbb
rcr
out
sahf
test
leave
add
dec
xor
lahf
push
xchg
xor
cs
imul
repnz
jecxz
adc
call
fidivs
and
or
loop
cli
sub
andb
test
pop
adc
into
cmpsb
dec
xor
int3
push
mov
adc
push
daa
add
pop
xorb
out
aam
lret
sub
or
sti
xchg
mov
and
xor
hlt
in
js
es
insl
add
jo
pop
mov
pop
lret
les
xchg
cltd
inc
lock
lret
mov
popf
jmp
jne
push
add
or
pop
and
ja
jmp
aaa
cld
jl
mov
or
dec
rcr
adc
add
sub
mov
mov
loopne
mov
sti
cmp
scas
push
in
mov
inc
icebp
rorb
add
lock
inc
movsl
nop
jmp
das
lods
xchg
mov
test
sub
addb
dec
add
and
lret
jge
pushf
pop
imul
rorb
mov
lods
sar
jge
stc
add
fs
sahf
fisubrl
popf
cmp
or
mov
pop
and
dec
push
lods
cld
jecxz
mov
xchg
mov
imul
repnz
pop
cltd
and
jp
or
in
lea
mov
out
pop
ret
mov
lret
mov
int
repz
call
repnz
xor
outsl
jb
pop
ljmp
cmp
mov
jbe
mov
pop
sub
frstor
xor
and
subb
xchg
xchg
sti
adc
lret
lds
rcrb
pop
xchg
outsb
fdivl
stos
inc
idiv
mov
xor
cmp
xor
push
stc
fisttps
mov
mov
inc
xchg
and
out
es
or
je
sub
shlb
outsl
cmp
pop
ljmp
nop/reserved
dec
push
sahf
and
xchg
ret
lds
cli
out
mov
add
mov
mov
ja
jnp
pop
dec
jns
jmp
mov
imul
push
or
pop
pop
data16
jb
pop
sub
push
inc
sbb
xchg
in
mov
mov
inc
xchg
cltd
xorb
and
and
rorb
hlt
les
fistl
mov
xlat
xor
rcll
imul
and
jnp
and
mov
addr16
lock
sub
cltd
xorb
mov
inc
loopne
out
cwtl
in
jb
loopne
jnp
adc
paddd
jb
jb
int
push
jno
lods
test
and
mov
daa
js
cmp
lahf
or
mov
aad
adc
xor
pushf
popa
cmpxchg
emms
test
xchg
mov
mov
mov
aad
les
lret
push
xor
int
cmc
adc
mov
data16
pop
inc
out
lahf
and
mov
sbb
cmp
fs
xor
push
loopne
cmp
cmp
daa
stc
xchg
dec
dec
cmp
lods
lahf
mov
data16
fmuls
repnz
daa
dec
into
adc
ds
dec
mov
adc
sub
test
inc
push
add
jge
gs
adc
fistpl
pop
xchg
jbe
hlt
mov
lock
push
shlb
or
in
into
insb
sub
fcoml
mov
orb
sub
ljmp
mov
cmp
fdivs
inc
shrl
mov
and
cmp
push
xchg
adc
roll
inc
enter
mov
mov
int3
sbb
jno
subl
pop
push
icebp
push
cmp
push
scas
lea
push
xchg
fistps
or
int
sbb
je
inc
lock
rcl
jl
test
xlat
pop
adc
fadd
ficoml
inc
shrb
shl
loopne
dec
aam
dec
adc
push
mov
movsb
and
rorb
inc
mov
shl
lea
sti
into
jo
jno
cmp
or
add
xchg
faddp
cs
movups
fstl
adc
daa
popa
adc
fsubp
push
js
dec
xchg
aad
mov
into
adc
repz
jo
sar
scas
cmpsl
into
inc
imul
sti
xor
sti
enter
fisttps
push
movsbl
daa
cmp
xor
and
inc
xor
and
xchg
les
add
leave
repz
idiv
jno
stc
xchg
lds
mov
push
sub
inc
hlt
daa
insb
imul
dec
int
int3
push
int
add
pop
adc
xchg
js
sub
pop
add
fisttpl
jle
fldenv
imul
call
xor
adc
xlat
mov
aam
jmp
xlat
imul
and
mulb
rcll
or
int3
scas
pushf
outsb
xchg
insl
cli
xchg
push
sbb
movsl
scas
lds
or
int
sbb
push
push
xor
jge
mov
cltd
popa
xchg
andl
adcl
push
jne
add
iret
data16
jge
movsl
fmuls
adc
dec
fdivr
pop
fwait
ljmp
cs
jo
xchg
jge
lret
pop
mov
bound
rcll
aad
ljmp
bound
inc
push
pop
scas
cmpsl
jns
insb
and
jge
pop
sahf
mov
fsubs
push
shrl
mov
stos
fyl2x
pop
xchg
sbb
jmp
ja
mov
xor
into
ja
into
pusha
sbb
test
cmpl
or
xchg
dec
xor
movzwl
movaps
or
fs
mov
arpl
ret
mov
adc
add
clc
jno
hlt
outsb
pop
sub
test
fnsave
adc
scas
or
cmp
fbstp
test
loopne
or
pusha
cmp
fsubs
dec
push
lock
push
aaa
shrl
xor
ljmp
movl
mov
mov
icebp
cmp
mov
dec
repnz
ss
lods
fucomi
jecxz
shrl
fbstp
push
cmp
adc
dec
push
mov
lds
cmc
arpl
lods
mov
cmpsl
cmp
jmp
jbe
inc
cmpsb
bnd
repz
lods
in
notl
int
testb
or
arpl
cwtl
subl
push
or
scas
js
dec
popf
scas
xchg
sub
add
neg
daa
lock
mov
int3
xor
stc
inc
add
subl
lret
push
xchg
pusha
std
add
mov
xchg
mov
leave
stos
call
push
ljmp
lods
jbe
das
insl
ljmp
jo,pn
out
hlt
movsb
or
rcl
push
sub
or
js
cmc
mov
mov
into
pop
in
or
add
rclb
and
adc
inc
or
pop
jmp
and
loopne
mov
jmp
jae
dec
cwtl
mov
cltd
mov
push
cmp
dec
aaa
add
data16
pusha
roll
mov
and
pop
sbbb
lods
mov
pop
sub
dec
and
in
stos
aaa
mov
in
dec
filds
add
pop
mov
xchg
mov
rcrl
in
insl
adc
push
xor
and
cmp
dec
addl
fcomp
fnsave
mov
and
das
rcl
popf
adc
sarb
push
mov
sbb
add
pop
mov
xorl
testb
cmp
sahf
xchg
aad
out
mov
loope
mov
jmp
out
jl
jecxz
xchg
mov
into
sahf
inc
fidivl
ret
je
imul
loopne
adc
ficomps
out
divl
out
leave
or
mov
pop
ja
ret
rcl
pushf
mov
cmc
xor
push
adc
shlb
icebp
popa
stos
jno
mov
sbb
das
int3
outsb
push
xor
pop
aam
mov
push
pop
sub
sub
mov
test
aad
dec
into
push
jmp
test
add
xchg
xchg
or
cmp
jg
or
xor
sahf
mov
lea
mov
jmp
or
inc
sbb
pop
jle
xchg
dec
movsb
movsl
xor
cmp
pusha
xchg
loope
add
mov
test
fwait
xchg
clc
in
cmc
xlat
pop
jbe
mov
push
jp
add
loopne
outsl
pop
pushf
jg
testb
pop
lret
cwtl
pop
rorb
sbb
loop
jns
add
sub
mov
shll
xchg
or
sbb
cld
or
lods
mov
shlb
xchg
add
cltd
subb
rcrw
jmp
rcrl
inc
add
cmp
stos
cmp
mov
xor
in
push
stos
pop
cmpb
popa
out
dec
stos
cmp
mov
loopne
ret
ror
jle
xchg
cmp
add
icebp
mov
stos
cmp
mov
scas
pop
jl
data16
adc
inc
mov
scas
xchg
and
pop
lock
in
fidivs
push
mov
cld
pop
clc
das
test
fwait
dec
js
gs
icebp
jg
clc
pop
loopne
mov
pop
dec
push
sti
jp
mov
or
jmp
out
nop
push
popf
mov
into
iret
insb
mov
aam
push
mov
cmp
outsb
int
jns
movsl
es
lret
lods
jl
aas
inc
test
pop
inc
mov
add
sbb
loop
dec
push
rolb
inc
sub
das
dec
push
mov
mov
adc
mov
cld
int
cmp
rcll
xchg
call
fisubl
outsl
xchg
in
push
xchg
pop
cmp
das
sbb
jecxz
imul
jne
out
movsl
dec
dec
addb
addb
test
ret
stc
int
ret
stos
movsl
arpl
push
popf
jl
and
dec
adc
mov
sbb
dec
aas
xor
cmpsl
push
stc
adc
aas
or
popa
pop
cs
leave
lret
lods
cmp
mov
clc
jecxz
std
stos
js
jnp
dec
fildl
mov
xchg
xchg
ja
insl
lock
out
xor
pop
loop
xor
rclb
push
stc
sti
enter
mov
or
xor
push
std
insb
aad
sahf
in
fldt
roll
addr16
adc
and
ret
lret
push
rdmsr
push
out
outsl
sub
push
sub
mov
das
std
out
adc
loopne
pop
jo
cmp
mov
icebp
cmp
shr
sub
mov
test
push
xor
cmp
mov
call
and
bnd
imul
dec
idivl
lcall
lea
outsl
insl
dec
xlat
inc
popa
fsts
enter
sti
mov
inc
fsubl
xchg
fimuls
inc
jnp
aam
mov
call
mov
sbb
mov
add
dec
push
mov
mov
cmp
test
adcb
xor
vpcmpgtd
sbb
mov
shl
jecxz
nop
das
push
in
repz
imul
out
dec
mov
jnp
cltd
mov
lea
aas
into
enterw
jo
lret
jo
and
ljmp
les
shl
xor
fstps
push
rcl
clc
jecxz
scas
shlb
stos
xor
dec
mov
mov
mov
sbb
shl
adc
js
sbbl
idivl
inc
lods
mov
mov
repz
mov
mov
or
scas
hlt
jb
sbb
jge
fildll
test
ss
mov
sub
enter
and
mov
mov
push
fwait
mov
xor
rcr
adc
jnp
mov
pushf
ret
push
lods
out
xchg
lods
jbe
cli
mov
das
js
js
mov
test
insb
jge
mov
mov
push
stos
xchg
stos
sar
movsl
lret
data16
fists
daa
into
sbb
cwtl
mov
jbe
cmc
dec
and
arpl
push
test
or
dec
push
dec
push
mov
push
das
shlb
cmp
movsb
imul
nop
jle
xor
idivb
and
scas
mov
and
sub
call
add
aam
das
sti
pop
mov
sbb
add
sub
sub
les
or
mov
pop
lcall
mov
lret
in
pop
and
into
mov
bound
ret
cmpsb
test
insb
inc
xor
pop
jne
mov
into
aam
and
sarl
jle
jl
add
mov
das
sub
lret
mov
mov
lea
adc
lods
dec
in
rcrl
or
pop
cmp
into
jbe
ljmp
mov
shl
aaa
pop
fisttpll
mov
call
xchg
and
add
lds
outsb
push
mov
inc
leave
xor
xchg
cmp
mov
in
pop
push
fwait
shll
fisubrs
into
rcrb
jbe
cmp
sbb
push
mov
lahf
add
icebp
sub
dec
rcrb
jb
jmp
fldl
and
arpl
sbb
inc
jmp
inc
inc
call
insl
dec
stos
fcoms
out
sbb
sbb
mov
mov
loop
jbe
stc
and
xchg
dec
cwtl
adcl
mov
jl
sub
jne
xor
ds
xor
dec
repnz
sub
adc
loope
mov
cmp
ret
push
push
out
shlb
adc
dec
inc
cmc
in
add
fstps
cmpsb
leave
sbb
outsl
ds
push
dec
pushf
cmp
daa
cmc
lcall
outsb
push
arpl
mov
push
xorl
xlat
sub
xor
or
test
ss
fwait
pop
cld
sbb
ljmp
lahf
popf
js
mov
sbb
push
push
mov
enter
out
out
movsl
cld
mov
clc
jno
pop
mov
in
cmpb
sbb
filds
mov
mov
sub
pop
ret
xor
imul
add
xchg
popf
in
sarb
nop
inc
cmp
lods
loop
dec
or
fimuls
mov
or
mov
sbb
mov
adcb
aad
push
popf
sbb
das
inc
repz
xlat
test
test
sti
add
jo
mov
inc
ljmp
cmp
jns
pop
or
push
xlat
inc
add
popf
and
ret
jns
inc
fisttpll
insl
jno
iret
in
cmp
cli
mov
popl
jb
in
pop
lcall
rcl
jbe
push
xor
or
push
push
pop
out
rcrl
push
xorb
mov
cwtl
cmp
jg
cmp
mov
mov
outsb
test
sub
jge
and
shrb
pushf
or
ja
dec
data16
and
dec
scas
lea
push
jne
aad
pusha
mov
pusha
rorb
xchg
jecxz
out
aad
inc
cmp
jae
pop
jl
enter
push
xor
mov
push
sbb
mov
ret
or
sbb
ret
and
ret
mov
repz
daa
pop
jmp
or
cwtl
xchg
loopne
xchg
add
sbb
or
bound
test
inc
fcmove
iret
dec
mov
push
movsb
dec
dec
mov
ret
test
mov
push
mov
inc
neg
and
jge
pop
jnp
mov
lret
fldt
push
dec
shl
jge
adc
loopne
jp
in
sub
push
pop
push
fimuls
je
xchg
lcall
inc
jmp
clc
pop
mov
rcrl
sbb
mov
or
loopne
dec
sub
mov
cwtl
mov
pop
lret
movsl
sub
lock
jmp
mov
movsl
fisubl
jbe
es
test
insl
test
aas
mov
popa
iret
mov
push
jp
adc
mov
rolb
loope
mov
mov
mov
imul
aas
daa
ja
ja
in
adc
push
inc
imul
adc
scas
imull
fidivrl
sub
adc
in
outsl
xor
dec
mov
cmp
andl
xor
mov
pop
stc
cmp
dec
pushf
dec
outsb
jmp
fabs
xor
dec
xor
xchg
push
test
push
adc
stos
ret
and
jmp
pop
push
push
jl
pop
movl
bound
sbb
in
mov
mov
sbb
sbb
push
dec
sub
pop
lods
into
adc
adc
adc
ss
mov
inc
test
inc
pop
loopne
jnp
imull
inc
pop
clc
outsl
mov
aas
ljmp
outsl
cmp
addr16
sbbl
roll
mov
cmp
sbb
ss
xor
mov
or
push
push
jge
jle
and
xor
daa
jmp
mov
stc
xor
popf
jecxz
in
push
cmpsl
clc
xor
inc
call
push
jo
loop
test
subb
xor
aam
fistpl
ds
mov
ret
pop
mov
sahf
jno
mov
cmp
sub
aad
outsl
mov
push
or
mov
stc
jl
std
mov
xor
jmp
add
mov
mov
mov
dec
out
dec
or
mov
push
and
stos
and
xchg
fsubs
xchg
imul
push
inc
push
cld
jno
aad
popa
adc
push
cmc
cld
pop
repz
pop
test
inc
sahf
test
test
imul
outsb
pop
rol
adc
adc
cmp
cmp
inc
jbe
mov
cmpsb
dec
jbe
push
insl
cmp
inc
add
cmp
and
inc
gs
dec
sub
les
mov
push
or
cmpsb
dec
insb
xor
and
mov
cmp
stos
xor
je
out
xchg
mov
mov
cmp
cmp
nop
hlt
or
es
adc
adc
pop
cmp
lcall
cltd
test
pop
mov
test
in
test
cli
sub
or
mov
hlt
adc
in
mov
jno
aad
fs
xorb
mov
pop
mov
jecxz
dec
adc
push
and
and
test
aad
stc
jle
jb
or
aam
dec
adc
pop
jmp
inc
push
test
fidivs
pop
adc
shlb
push
jnp
icebp
push
sbb
lret
outsl
adc
mov
outsl
stc
fstpl
scas
js
sti
scas
mov
ret
mov
jns
push
pop
sbb
fwait
loope
pop
sub
int3
push
xor
adc
lret
je
enter
xchg
pop
aaa
aas
rcll
mov
mov
and
les
sahf
ljmp
inc
xchg
pushf
inc
pushf
and
pop
movsl
xchg
sbb
inc
push
pusha
faddp
call
in
lret
jl
sarb
jp
std
adc
cli
inc
movsb
and
push
push
in
sub
xchg
imul
mov
add
xchg
mov
jne
jb
jl
xchg
scas
xchg
insl
inc
lods
imul
icebp
or
cmpsl
mov
aaa
arpl
inc
lea
inc
gs
iret
outsl
jmp
int
cmp
stos
mov
add
and
mov
xchg
adc
je
xor
loopne
xchg
adc
push
jbe
aas
or
add
stos
jo
sub
daa
push
cs
xchg
jl
jmp
loop
and
je
stos
adc
scas
in
loop
gs
jmp
stos
or
push
xor
cmpsl
push
and
imul
cltd
inc
pushf
mov
bound
rcl
je
inc
mov
adc
sbb
sahf
lods
pop
fcompl
movsl
cmp
jg
icebp
dec
jle
dec
imul
sbb
arpl
js
cmp
in
out
or
loope
pop
loope
ret
test
push
pop
xor
notb
pop
das
lret
pop
insb
jo
iret
xorb
sbbl
mov
jg
lcall
xor
ss
push
cmpsb
fstps
xor
pop
mov
inc
icebp
pop
push
inc
stc
xor
jns
mov
into
in
mov
scas
sbb
dec
mov
push
je
jnp
std
mov
xor
mov
btc
out
int
mov
jno
mov
pop
cmp
jb
ja
pop
pop
xchg
mov
mov
xor
xchg
dec
aaa
pop
aaa
mov
bound
xchg
sarb
add
pop
mov
test
out
add
std
dec
sti
adc
sbb
addl
dec
fnsave
jmp
jb
or
dec
cmovno
les
shlb
sti
dec
push
xor
add
xchg
in
iret
pop
xchg
jne
iret
sub
negb
fcmovnb
cmp
sbb
in
das
or
mov
lcall
daa
xchg
or
inc
push
cli
data16
mov
xor
mov
xchg
fwait
sub
inc
fldcw
push
mov
mov
mov
fs
call
cmp
add
scas
sub
das
sub
cltd
push
cmp
sar
cwtl
dec
cmp
ljmp
je
jo
clc
inc
test
push
add
cltd
mov
mov
xchg
and
subb
fstps
mov
scas
ret
push
fsubs
add
movb
mov
mov
adc
insl
je
sbb
aad
sbb
out
pop
hlt
js
pop
cmpsb
mov
jnp
paddd
push
sub
lahf
enter
ret
pop
ret
std
arpl
dec
addr16
shl
loope
cmpsb
repnz
adc
or
sar
add
data16
cmp
cmpsb
lret
test
add
clc
or
or
fisubs
push
loope
cmc
push
jne
xor
lcall
or
and
es
outsl
sbb
or
jg
xor
dec
call
nop
dec
fucomip
jge
push
push
loop
cmp
push
mov
xchg
jecxz
lds
mov
and
push
mov
fiaddl
add
iret
sbb
outsl
jl
mov
adc
pop
loope
or
and
push
aad
gs
pop
lods
mov
jmp
cmpb
sbb
es
or
test
add
es
sbb
cmpb
mov
adc
mov
jge
aam
xor
popf
push
xor
or
add
jl
add
xor
lods
xlat
scas
fcoml
test
jge
out
jns
outsb
mov
cld
ret
hlt
add
push
or
lret
js
push
clc
push
loop
sbbl
mov
enter
and
jno
or
lret
stos
mov
mov
sbb
enter
dec
lret
fwait
cli
inc
std
mov
sbb
cmpsb
push
sar
mov
mov
out
and
jl
push
push
sbb
sub
sti
fmuls
pop
shll
mov
iret
sub
sahf
push
mov
xor
and
push
notl
sub
sub
and
push
push
cli
out
jle
push
push
push
cli
sub
push
loope
dec
push
fstps
mov
ljmp
leave
adc
add
sbb
into
xor
in
lret
scas
add
sbb
insl
daa
xchg
shl
cmc
push
cmp
jnp
sbb
int3
cmp
dec
loope
add
or
pop
inc
and
hlt
xor
mov
sbb
jmp
das
pop
imul
test
dec
or
and
push
faddp
and
adc
push
addl
outsl
dec
rcll
pop
lret
inc
inc
out
inc
pop
ds
iret
adc
sbb
xor
dec
sbb
lret
shr
push
mov
mov
stos
inc
femms
dec
mov
aas
daa
ret
scas
xor
add
push
jae
in
mov
jno
xor
cli
and
push
xchg
push
fs
dec
mov
rorl
xor
or
stos
inc
and
xchg
imul
and
rorb
call
adc
cltd
fstpl
sti
pop
stos
lcall
adc
nop
jne
adc
xchg
lds
inc
or
xor
xor
add
push
xchg
mov
mov
test
cld
sbb
add
adc
cmp
mov
dec
insl
lret
and
mov
bound
fisttpll
or
pop
pop
push
push
jb
cmp
jnp
sub
mov
cmp
jns
push
cmp
ret
jae
mov
inc
mov
out
in
mov
dec
add
jecxz
fwait
mov
dec
iret
jp
xorl
jb
push
mov
int3
xor
cli
clc
pop
cmp
int
sbb
pusha
test
jle
les
cli
push
xlat
cmc
adc
mov
xchg
push
or
mov
pop
lods
jbe
leave
xor
sub
lret
inc
aad
loope
sub
mov
xorl
push
inc
in
fstpl
cmp
cltd
mov
repnz
mov
sahf
out
push
and
push
jge
adc
or
pop
and
sub
mov
movsb
jnp
push
daa
inc
hlt
push
dec
cwtl
pop
leave
hlt
fidivrl
test
mov
pop
cwtl
sub
outsb
and
or
mov
data16
or
insl
xor
mov
push
nop
push
xchg
xchg
jl
aad
jmp
or
and
mov
movd
xchg
pop
in
aaa
xchg
xchg
inc
lods
or
movsl
insl
mov
or
xchg
mov
ds
call
push
pop
mov
jns
adc
out
xchg
dec
adc
or
xor
nop
jge
sub
push
popa
cmp
fimull
xor
cmp
lds
rcrl
push
ror
xchg
mov
stos
inc
sahf
inc
aad
pop
aam
push
lret
sub
test
call
xchg
lahf
scas
inc
jno
push
dec
push
stos
repnz
xorl
je
inc
sahf
jl
sbb
jg
or
stos
add
pop
out
add
mov
mov
adc
sbb
loop
ds
push
and
mov
repz
sahf
jl
xlat
sahf
cs
jbe
cmp
dec
jnp
leave
ja
lea
cmp
repz
cmp
add
push
pop
fwait
cmpsl
test
mov
sbb
shrl
hlt
addr16
push
and
mov
cmpsb
fisttpl
out
inc
aam
stos
pop
jp
fstpt
loope
dec
pop
aam
clc
in
or
ret
push
jnp
in
xchg
xchg
fs
inc
adc
and
outsl
insb
lcall
sbb
aad
cltd
inc
mov
bound
sbb
fwait
inc
imul
jae
lret
xchg
insl
ljmp
mov
jg
mov
mov
ljmp
dec
xchg
and
mov
mov
jle
jbe
lds
and
dec
inc
loop
xchg
loop
pop
mov
pop
xchg
loopne
jns
test
mov
sar
lock
imul
or
outsb
das
insl
jmp
adc
dec
jne
add
sti
adc
fs
test
push
test
and
xor
mov
dec
jecxz
ret
pop
sbb
scas
pop
inc
adc
mov
push
add
sbb
arpl
jp
pushf
iret
pop
xor
lret
xor
mov
push
jle
nop
nop
sbb
cmp
mov
imul
data16
mov
sbb
mov
cld
pop
sbb
xor
nop
iret
and
push
cld
mov
std
hlt
dec
add
dec
inc
pop
jb
or
mov
jnp
out
cld
and
pop
adc
and
push
cmp
insl
cmpsl
or
pop
loop
jne
dec
pusha
pop
mov
outsl
pop
xchg
out
or
pop
cli
mov
popa
sarl
aam
repnz
adc
and
add
sbb
ljmp
xchg
scas
mov
mov
test
jp
ret
cli
les
sub
lea
add
inc
push
push
fnstsw
mov
cltd
push
sar
and
movsl
or
data16
sub
mov
rcr
ja
inc
push
push
shrb
push
lahf
inc
int
sub
data16
pop
push
and
in
test
mov
xor
add
jl
cmp
or
mov
dec
lcall
sarl
stos
in
leave
inc
fs
fmuls
pop
addr16
lcall
je
push
hlt
lods
or
mov
adc
xchg
mov
sbb
jo
xchg
and
mov
inc
jb
imulb
xor
sub
sbbl
lahf
mov
sub
mov
jle
inc
jp
movsl
lret
aam
dec
cmpsb
imul
pop
out
xlat
fwait
test
int
rolb
int3
adc
jle
es
sbb
push
sbb
out
and
es
jae
cmpsb
mov
repnz
pop
iret
mov
outsb
jnp
push
aad
test
xchg
adc
cmp
ss
xlat
mov
jne
clc
icebp
lcall
popf
xor
repnz
adc
adc
cmp
pop
sub
pop
data16
mov
arpl
leave
or
movsl
jmp
iret
sahf
std
xor
sahf
add
arpl
adc
loope
sbb
fisttpl
ss
test
xor
lret
xor
mov
mov
repz
test
insl
sbb
mov
jg
xchg
or
xchg
xchg
or
call
out
jp
popa
jb
xchg
cmp
mov
gs
sti
mov
or
inc
data16
jb
mov
push
dec
repnz
jne
xlat
add
add
sub
add
addl
sahf
jge
add
mov
jge
jne
test
sub
stos
push
sbbl
fsubrl
insb
sub
inc
sub
push
rcl
push
sarl
and
mov
mov
xchg
cmp
ds
iret
dec
and
mov
sbb
cmc
adc
inc
dec
push
pop
sbb
out
insl
scas
aas
scas
enter
icebp
and
mov
lahf
call
jns
iret
or
push
sti
adc
aaa
jnp
lea
shrl
loop
mov
add
dec
mulb
test
xor
ja
xchg
cwtl
ret
jo
scas
mov
xor
hlt
adc
pop
mov
dec
mov
rcrb
mov
leave
sti
in
sub
aas
cs
iret
mov
jne
cmp
ljmp
jmp
fidivs
jmp
push
mov
sahf
inc
out
mov
push
push
pop
jecxz
xlat
mov
mov
test
lret
scas
cltd
in
sbb
in
rcl
mov
imul
add
dec
out
mov
loopne
cmp
dec
inc
subl
xor
fs
cmpsb
in
fdivrl
mov
sbb
repnz
movsb
dec
push
lret
pop
push
xchg
cld
jp
xor
mov
sbb
sbb
xchg
xor
lret
inc
gs
jb
mov
xor
sahf
xchg
or
les
inc
mov
mov
jecxz
aad
in
xchg
in
je
leave
adc
pop
adc
dec
sub
mov
jae
mov
mov
popf
fsub
scas
mov
mov
les
imul
push
push
lret
dec
lods
sbb
pop
push
ja
and
aas
adc
ljmp
xor
and
sub
mov
into
out
outsb
idivl
sbbl
jbe
insl
push
pop
or
test
sbb
adc
flds
xor
push
sub
inc
fucomp
mov
outsb
je
lahf
mov
jnp,pt
pop
int
lret
sbb
fcmovne
jmp
fcmovb
or
sarb
iret
pop
push
loope,pn
mov
jg
xor
in
nop
inc
out
lret
lods
pop
out
das
hlt
mov
icebp
sahf
and
ljmp
dec
cld
jns
sti
dec
lret
daa
sbb
int
enter
or
lods
fstpt
fbld
aas
aas
inc
shr
mov
test
mov
lods
xor
imul
enter
call
fmull
or
jmp
mov
pop
jmp
add
rcrb
lcall
pop
and
xlat
pop
call
lods
aad
pusha
gs
aad
and
imul
jo
xlat
ret
test
into
and
cltd
stos
les
imul
sbb
lock
movsl
into
dec
outsl
mov
js
js
aad
mov
mov
mov
aam
outsb
test
jp
imul
lds
or
rcll
add
enter
and
les
xchg
ljmp
mov
add
cmp
call
fcoms
aad
jnp
jmp
pushf
xor
daa
stos
insl
add
push
push
cmp
mov
add
push
mov
lods
add
or
or
sbb
inc
sub
shrl
ret
mov
jmp
mov
mov
add
fwait
jecxz
dec
dec
jo
or
sbb
icebp
cltd
jecxz
push
sub
push
jge
lcall
add
mov
stc
into
imul
cmp
nop
dec
pop
mov
ss
jae
xor
and
jb
inc
push
jg
mov
ja
xchg
sub
movsb
pop
sub
mov
inc
das
mov
js
jg
lds
faddl
movsb
test
aad
lahf
or
or
loope
add
xor
xchg
js
test
jnp
stos
test
push
xchg
les
iret
and
repz
out
mov
stos
jl
iret
push
inc
in
sbb
inc
leave
pop
xchg
mov
popa
jne
xchg
add
xor
stos
lret
sub
andb
not
jb
xchg
outsb
ret
jg
jns
popf
and
nop
pop
fxch
inc
shl
mov
and
subb
bound
adc
andb
shlb
cmp
xchg
xchg
dec
das
test
jae
repnz
faddl
sub
push
shlb
xlat
push
mov
fdivs
push
mov
xor
dec
out
shlb
stos
xor
je
adc
mov
mov
bound
mov
pop
mov
jg
inc
cltd
dec
sbb
fdivp
aaa
push
mov
out
sbb
cmp
insl
out
xchg
mov
sahf
outsl
xor
mov
and
insl
sbb
or
lock
sti
nop
lcall
iret
jle
iret
mov
in
test
lcall
fbld
fisttps
push
lds
lret
mov
jno
mov
pop
enter
in
lods
mov
pop
ror
outsl
cltd
or
jmp
push
cmp
test
inc
out
and
lret
cmp
dec
mov
jnp,pt
enter
adc
push
fimull
push
ljmp
jg
add
test
int3
or
lahf
outsl
shl
mov
xor
pop
pop
push
jbe
fistpl
insl
or
xchg
mov
fsubl
outsb
cmp
test
xchg
xchg
ljmp
jecxz
adc
and
stc
lahf
xchg
cmp
fmull
rcll
fcoms
xchg
adc
sbbl
shrb
or
ljmp
push
cli
ljmp
add
je
int
iret
and
push
call
xchg
pop
in
bound
arpl
daa
into
into
aaa
cmpsb
jp
loope
mov
sbb
or
leave
test
adc
add
cmp
xchg
mov
lods
dec
lock
gs
fidivrs
insb
popa
mov
pop
dec
inc
mov
out
out
imul
out
jle
sub
mov
xchg
push
mov
cwtl
mov
dec
jg
mov
aad
mov
mov
pop
xchg
dec
xchg
adc
adc
mov
push
and
in
add
outsb
xor
add
cli
dec
sbb
jo
pop
sbb
mov
mov
xchg
or
or
sub
jge
inc
adc
sarl
lea
scas
add
xor
adc
daa
xchg
aas
jns
movb
int
sub
push
ds
scas
das
cmpsb
cmc
in
aad
pop
ret
xchg
mov
ret
jecxz
hlt
bound
dec
outsl
cld
xchg
pop
shlb
std
mov
jno
dec
mov
jbe
mov
cmc
cmp
rcr
cmpsb
aam
js
push
jbe
in
insl
pop
mov
adc
xor
add
dec
inc
mov
rcrl
or
fwait
or
push
pop
cli
outsl
out
in
pushf
sub
repnz
fmulp
sbb
xchg
xchg
inc
insb
fmuls
icebp
xchg
or
push
adcb
sbb
aad
sbbb
push
pop
jmp
fcoms
fimuls
pop
repz
outsb
out
pop
mov
imull
and
outsl
and
addr16
dec
cmp
fwait
icebp
jbe
push
mov
push
mov
mov
std
jns
cli
xor
cmp
ret
ret
test
push
frstor
mov
sti
mov
imul
test
pop
hlt
mov
bound
mov
adc
repnz
push
mov
ret
dec
sub
ds
push
cli
jmp
punpckldq
jl
dec
cmp
test
mov
popa
dec
mov
icebp
or
fadds
xor
sbb
clc
pop
scas
js
je
aas
xchg
fidivrl
lret
adc
inc
std
sbb
mov
add
mov
mov
arpl
mov
jo
sbb
fsubl
jne
add
rcrb
push
push
sub
adc
and
and
cmpsb
mov
sub
arpl
xor
rorb
int3
xor
cmp
pop
sahf
sub
aas
push
ret
flds
into
shr
imul
addr16
pushw
les
xchg
loop
jmp
imul
sub
int3
in
test
stos
rcll
mov
sub
arpl
scas
dec
pusha
cltd
mov
loop
rclb
insl
mov
movsb
aas
xchg
int
repnz
mov
sbb
add
mov
pop
push
xor
fisubs
es
lcall
pop
push
sbb
adc
je
ja
std
push
sub
jns
mov
test
xor
mov
fsubr
faddl
in
cli
xchg
aaa
and
frstor
imul
in
or
stc
jns
es
sti
rorl
cmpsb
dec
imul
mov
push
xor
insb
std
loopne
outsb
adc
push
xchg
inc
into
jne
lret
aaa
test
cmp
or
test
push
push
mov
sbb
pop
fldt
xchg
or
pop
or
push
out
sub
loopne
xchg
mov
lcall
lahf
sbb
test
adc
or
pop
sti
lods
decb
fimuls
inc
push
push
pop
call
cwtl
sbb
seta
nop
icebp
jg
inc
and
negl
loopne
imul
mov
mov
mov
xchg
and
pop
xor
inc
cmp
mov
lea
adcl
or
mov
fadd
push
jmp
shll
enter
add
dec
imul
mov
outsb
mov
les
inc
and
and
add
push
push
pop
mov
lret
cmp
je
jbe
mov
fcompl
add
mov
das
lret
jmp
pop
push
sti
sbb
lahf
sbb
mov
jmp
fisubl
outsl
mov
mov
xor
imull
out
mov
shll
jmp
adc
orl
pop
inc
cmpsl
jl
add
mov
roll
mov
movsb
mov
lahf
mov
push
stc
jmp
pop
leave
adcb
data16
and
cltd
idiv
xor
push
pusha
sahf
shll
push
hlt
nop
add
mov
xor
gs
jl
cmp
in
fwait
out
push
jb
mov
pop
sub
or
fnstenv
lea
fldt
fstps
nop
sti
mov
sub
sub
dec
add
mov
xor
add
jbe
add
in
cs
sarb
adc
or
aas
imul
mov
or
push
out
mov
les
gs
js
test
sahf
insl
adcl
shrb
push
xor
lods
sahf
push
jnp
ficompl
ss
mov
adc
mov
orl
sub
cmpsb
pop
jae
std
xor
repnz
aaa
movsl
push
sub
cmp
call
xchg
mov
stos
repz
xor
hlt
push
cmp
add
mov
orl
adc
repnz
xor
imul
jns
jo
or
daa
xchg
pop
pop
dec
dec
movsb
push
add
pop
cmp
mov
inc
es
mov
add
mov
xor
mov
hlt
outsl
outsb
inc
bnd
out
mov
mov
movsl
outsl
lahf
xchg
fnstsw
popa
test
loopne
dec
push
sbb
and
loope
imul
sub
jno
jns
imul
fidivrs
sbb
or
mov
add
das
out
aaa
stos
inc
je
rcr
cmp
xor
inc
das
mov
out
dec
andps
test
cs
aaa
in
sbb
jg
adc
mov
lock
jg
in
adc
jp
cmp
dec
mov
mov
call
pop
fstpl
cld
ret
stc
dec
daa
pop
je
into
sahf
push
sub
scas
or
push
insb
or
cmp
sub
mov
aaa
dec
mov
adc
das
xor
jnp
jns
xchg
pop
adc
add
ja
sub
push
outsb
icebp
xchg
nop
or
fistpll
mov
clc
loop
cmp
xlat
push
and
lahf
add
popf
jecxz
and
cmpsb
jae
adc
ljmp
inc
clc
xchg
lods
callw
nop
addr16
cmpsl
lods
xchg
push
outsb
mov
aaa
iret
and
xchg
mov
repnz
inc
jne
sar
pop
mov
mov
in
cmp
mov
push
and
xlat
rcl
push
stc
movsb
sarb
lods
decl
adc
dec
movsb
pushf
arpl
jge
popa
test
aad
and
ror
lret
or
mov
jae
into
mov
iret
xchg
mov
out
fstps
scas
test
ds
cmpsb
je
xchg
ret
xlat
adc
lods
fiadds
adc
mov
adc
imul
arpl
add
ss
lret
jmp
test
ljmp
shll
add
xchg
xorb
idivl
push
adc
push
testl
fistpl
xchg
cltd
scas
xchg
movsb
push
and
sub
dec
jo
addb
adc
in
dec
push
cmp
dec
adc
push
lods
inc
pushf
and
sbb
subb
or
jl
xchg
int3
or
adc
jo
mov
jae
arpl
aaa
pop
push
in
dec
jo
sub
dec
iret
mov
pop
pop
lret
adc
mov
mov
imul
test
repz
in
out
adc
sar
ljmp
and
pop
mov
mov
fwait
sbb
inc
cwtl
xor
ds
cmp
std
repnz
sbb
mov
mov
cmpsl
cmc
dec
xor
inc
cmpsb
sbb
adc
pop
adc
stc
add
daa
ret
pop
dec
inc
mov
xchg
adc
in
rcrb
add
mov
sbb
xchg
jae
pushl
neg
push
jnp
test
imul
shlb
out
jl
push
pop
push
mov
movsl
xor
dec
lea
fwait
movsl
in
mov
push
pop
cli
dec
lock
jecxz
js
cmp
cld
and
mov
xor
xlat
in
repz
mov
inc
jge
imul
mov
rcll
fmull
stc
jmp
popa
in
cwtl
mov
fcompl
xchg
mov
fcoms
addb
pop
dec
pop
mov
iretw
or
aaa
test
adc
cltd
mov
add
mov
insb
cmp
dec
insb
das
pop
jmp
mov
dec
ret
fistpl
adc
mov
adc
repz
cmp
imul
les
mov
push
into
dec
in
mov
fs
inc
mov
je
xchg
aad
lcall
jns
nop
jne
loop
scas
mov
push
lds
dec
out
inc
stc
jp
rcrl
inc
pop
adc
test
xchg
sbb
sub
subb
push
nop
pop
push
cmpsb
cli
dec
sub
jns
cld
and
pop
loop
and
and
mov
inc
out
orl
ds
test
mov
or
call
cwtl
and
xlat
adc
inc
jp
xchg
mov
push
lcall
lret
rcrl
scas
cmp
xchg
nop
dec
lret
je
jle
mov
jecxz
ret
push
add
jns
mov
mov
and
insb
mov
scas
pop
xchg
fwait
loope
xor
push
js
imul
dec
jo
jmp
pop
add
push
cmp
je
mov
xchg
flds
lds
adc
arpl
and
fidivrs
xchg
rclb
fisubs
jns
xchg
jb
das
push
lcall
push
push
in
ret
enter
sbb
lcall
and
pop
and
repz
adc
pop
lahf
mov
jp
sub
xor
scas
test
outsl
pop
divb
les
arpl
pop
mov
mov
xchg
imul
loop
sbbb
mov
dec
fsub
dec
bound
int3
pop
sbb
inc
shrb
lods
fadds
sbb
fsubrs
in
jge
iret
gs
cmp
push
pop
pusha
ja
shll
jno
jnp
xchg
xor
dec
movsb
aas
mov
add
sbb
push
cmpsl
int
mov
sbb
lock
je
mov
or
add
mov
push
pop
xor
sub
je
adc
sbb
adc
cmc
mov
and
cltd
adc
test
add
call
cmp
jns
and
sub
jmp
sub
mov
push
xchg
inc
pusha
and
jg
ja
push
cmp
nop
sbb
stos
dec
jecxz
inc
int
frstor
mov
push
fs
sbb
jne
pop
cmpsl
in
push
shrl
scas
lds
cmc
mov
pop
int3
mov
cmp
dec
dec
sarl
lods
jecxz
push
out
push
jo
xchg
pop
sahf
xchg
xchg
test
xor
nop
push
mov
das
mov
add
mov
lcall
sti
inc
test
jns
fs
das
push
pop
aam
mov
fmull
or
ds
mov
stos
lea
inc
xchg
icebp
pop
aam
xor
ljmp
jl
adc
cmp
mov
push
mov
aas
es
cmp
inc
jno
cmp
xchg
scas
outsl
cmpsl
mov
es
sbb
rcrb
xorps
xchg
inc
sbb
jl
fildl
test
fcmovnbe
and
nop
jge
xchg
xor
lock
or
shrl
dec
xchg
fsubp
push
add
inc
mov
add
adc
dec
into
shlb
cmpb
xchg
sbb
inc
xchg
cmp
test
xor
popa
nop
push
or
jo
jne
sub
push
out
outsl
pop
jecxz
cld
xchg
shrb
in
pop
xor
sti
mov
iret
std
ret
je
inc
loop
dec
ljmp
mov
mov
int3
imul
pop
push
jns
lea
inc
ja
clc
insb
fstpl
pop
cmpsb
out
pop
or
loope
dec
scas
sub
or
jbe
sub
leave
adc
lods
push
int
push
sub
fisttpl
aaa
and
and
ds
xor
jecxz
jecxz
cmp
cmp
inc
xor
jno
cli
adc
lcall
adc
rolb
mov
sbb
add
rcll
pop
push
or
call
xchg
stos
push
into
sti
negl
jb
or
pop
push
pop
iret
movsl
mov
rorl
xchg
sbb
test
adc
xor
cmp
shlb
xor
mov
push
test
push
jp
mov
jb
outsl
pop
mov
sub
ja
add
fisubl
adc
and
stos
movsl
aas
test
imul
cmc
add
mov
cltd
lret
sbb
rcll
pop
nop
pop
idivl
ds
push
cmpsl
cmpsb
addb
ds
in
mov
adc
sbb
push
jmp
out
jno
cltd
stos
loop
aaa
sub
cwtl
sbb
bound
push
sarb
fmul
cmp
ss
ret
sub
sub
mov
js
inc
int3
inc
mov
negl
cld
lock
add
mov
sbb
nop
sti
and
aam
rcrl
jle
jmp
dec
sbb
mov
sub
inc
fisubs
lahf
nop
aam
jecxz
jnp
dec
int3
mov
ja
or
or
out
add
pusha
je
mov
orb
mov
ret
movsl
sub
mov
mov
adc
and
adc
push
adc
int
push
inc
popw
xchg
scas
pop
sbb
jmp
mov
jb
mov
loope
mov
idivb
test
pusha
push
fisubs
jmp
scas
subl
cmp
loop
jbe
inc
out
and
aas
xor
aam
js
xchg
mov
mov
jle
adc
shrl
mov
dec
sub
adc
sub
jge
mov
aas
je
mov
cmp
stos
andl
ret
lahf
push
sti
inc
mov
test
inc
lret
mov
push
gs
mov
enter
push
add
add
in
cmp
out
cmp
pop
mov
aam
in
xchg
mov
jb
loopne
inc
imul
xchg
rclb
call
inc
fsubs
icebp
push
jb
lods
mov
fldl
jne
mov
dec
fdivrs
pop
mov
lods
dec
cmp
psubq
movsb
push
cmp
jo
and
xorl
cmp
mov
push
mov
jns
call
or
cltd
jmp
imul
aaa
stc
cli
xchg
push
stc
ss
ja
fwait
jo
arpl
arpl
mov
mov
in
sub
add
sub
dec
jno
push
faddp
rorb
push
fidivrl
loope
mov
repz
in
orl
jg
adc
or
mov
or
out
fs
sbb
sub
jmp
pusha
movsb
xchg
jb
jecxz
jle
ret
mov
push
enter
stos
push
out
sti
js
adc
in
loope
stos
and
lds
nop
mov
fwait
lahf
clc
es
cmp
or
fdivs
loopne
sbb
sbb
add
adc
mov
rcll
gs
add
and
movsl
fmull
mov
jno
out
adc
xrelease
xchg
xchg
mov
faddp
xor
sti
sub
les
out
push
xchg
cmp
scas
and
lahf
out
mov
mov
inc
popa
mov
xlat
or
jnp
repnz
jbe
lea
jle
mov
aaa
std
and
mov
or
getsec
pop
inc
pop
push
mov
inc
outsl
pushf
dec
xor
push
aas
inc
sbb
stos
pop
mov
xchg
aam
sbb
rorl
jge
adc
mov
data16
sbb
push
mov
ret
shlb
iret
mov
push
sti
loop
nop
sub
mov
std
mov
lea
mov
pop
je
or
mov
push
pushf
ds
lock
arpl
loop
xlat
je
sub
addl
pop
cmp
addr16
jge
test
out
in
push
pushf
mov
cmc
and
xchg
push
pop
mov
les
xchg
dec
loop
imul
sub
fldl
pop
test
call
jecxz
xchg
dec
das
repz
xlat
lods
lahf
aas
xchg
and
fs
xchg
jbe
jae
push
das
jp
jbe
mov
fidivl
pop
or
insb
jae
int
pop
push
xor
pop
imul
pop
daa
mov
je
mov
and
push
sarl
aad
jo
pop
shll
xchg
mov
or
xorl
xchg
fidivl
mov
and
in
pop
adc
hlt
push
push
mov
inc
inc
sbbb
jle
cmp
xor
pop
fs
imul
sbb
mov
and
mov
loope
jle
sbb
push
cmp
movsb
add
add
cmpsb
push
add
or
dec
and
sbb
jo
ljmp
sub
mov
inc
cli
sub
push
jno
dec
jns
mov
xor
lahf
gs
xchg
das
dec
in
loope
orb
loopne
sahf
mov
imull
divl
jle
xor
xchg
call
lods
jmp
cmc
fisubl
cmp
iret
xchg
in
rolb
push
inc
pop
repnz
push
mov
jle
clc
mov
cmp
dec
sub
jae
lahf
sbb
jns
ss
repz
jg
gs
adc
rclb
pop
loop
out
add
mov
sub
test
push
or
add
mov
pop
lret
cli
test
rclb
jmp
mov
idivl
lds
mov
decb
out
cld
hlt
pop
iret
sub
fdivrs
sub
movsb
outsl
jl
sbb
rep
dec
lods
dec
stc
cs
jp
push
lcall
or
daa
jae
mov
mov
ljmp
roll
loopne
mov
fdivrl
loope
sbb
pop
dec
mov
lea
jmp
or
cli
stos
push
dec
inc
push
out
lods
mov
rcrb
lods
movsl
add
addr16
jno
inc
mov
inc
jp
add
cmovg
les
xchg
hlt
mov
repz
mov
and
mov
xchg
ja
mov
divl
fnsave
pop
adc
sub
repz
mov
in
ds
add
cmp
mov
xchg
sbb
add
daa
fsts
and
movsb
cmpsl
inc
mov
lds
leave
mov
fst
push
subb
inc
pop
std
hlt
cmp
cmpsb
add
test
sub
adc
dec
movaps
in
cltd
xor
sahf
pop
xlat
add
push
dec
leave
dec
mov
xchg
xchg
mov
ss
push
sbb
lret
movsb
adc
clc
iret
scas
add
mov
mov
jge
out
fcoms
lods
jae
or
imul
mov
mov
mov
aas
lea
push
aas
push
shll
cmpsl
pop
pop
push
cmp
ret
push
aad
pop
xchg
sub
cmpsl
or
jbe
and
mov
nop
pop
push
test
cli
ret
ret
xchg
fsubs
cmpsl
mov
dec
pop
dec
mov
imull
cmpb
pop
loopne
int3
cmp
lods
mov
jne
scas
mov
je
negb
lock
sub
xchg
push
cmp
roll
xor
xor
mov
mov
repz
fisttpl
jno
cmp
mov
xor
inc
or
sub
repnz
outsl
push
jl
ret
out
call
adc
sbb
and
pop
xor
into
inc
fists
data16
bt
jl
or
mov
outsl
arpl
je
jmp
jbe
push
fwait
add
cmpb
jae
lea
scas
or
jmp
shlb
inc
imull
mov
dec
filds
or
imul
mov
sahf
test
or
mov
cmp
enter
xor
pop
push
mov
icebp
fimuls
aaa
jbe
pop
hlt
out
icebp
popf
aad
xchg
dec
jb
jecxz,pt
xchg
mull
rorb
sbb
jne
dec
sub
sbb
les
movsb
or
dec
sahf
insl
inc
sub
daa
rol
lret
inc
mov
int
clc
and
xor
dec
rolb
dec
ja
mov
data16
idiv
pop
std
cmpsb
xchg
mov
xor
rorl
mov
icebp
mov
call
out
insl
sub
daa
iret
lea
cld
std
mov
stc
nop
jl
mull
incb
test
xchg
leave
iret
sbb
popa
movsb
adc
pop
jnp
lcall
mov
push
ret
pop
imul
inc
imul
dec
cld
orl
sbb
call
adc
ror
cltd
dec
jp
mov
clc
push
aam
add
jne
push
fucomi
pop
pop
data16
xor
test
mov
mov
push
pushf
int
cmp
push
pop
in
add
sub
outsl
xchg
sbb
or
mov
sar
xchg
pop
rorl
outsl
cmp
sbbl
mov
les
test
lods
test
jo
scas
stos
das
adc
push
jno
dec
and
loope
notb
xchg
fcomip
dec
adc
jne
jle
inc
addr16
jnp
insl
idivl
add
sahf
sub
dec
imul
adcb
xchg
fmuls
adc
inc
jge
aam
mov
cmp
arpl
cli
and
sbb
mov
cmp
push
enter
sub
sub
daa
lret
popa
hlt
cmp
dec
cltd
cmp
fimull
shll
adc
sahf
adc
in
mov
or
and
sub
es
je
sub
push
sbb
int3
popa
addr16
in
mov
add
lock
lcall
decb
bound
jo
xor
jge
push
xchg
xor
sbb
or
pop
lcall
das
lock
loop
mov
hlt
add
iret
lret
out
sub
pop
jl
cmpsl
inc
sahf
mov
mov
in
and
cld
inc
or
and
daa
push
sbb
cmp
movsb
push
dec
xchg
andl
fistpl
mov
ret
mov
xor
xor
sbb
push
inc
ss
cmpsb
cld
and
loop
push
adc
adc
data16
test
in
xchg
push
inc
push
ret
cltd
ror
cmp
in
faddp
repnz
push
lods
sub
push
xor
outsb
cli
cmpsb
shl
inc
add
daa
rol
push
outsb
ret
pop
enter
cmpsl
das
out
lahf
sbb
ljmp
pop
ficomps
or
icebp
insl
jge
add
aam
push
sarb
mov
sub
dec
add
divb
mov
fisttpl
and
xchg
iret
cmp
hlt
int3
or
ss
mul
push
pop
mov
cld
mov
adc
enter
test
cmp
jno
ljmp
lret
inc
imull
pop
mov
jnp
mov
es
js
adc
adc
test
add
mov
adc
mov
fdivr
mov
xlat
sub
add
push
bound
jecxz
xchg
test
aaa
test
adc
xchg
aad
insb
je
int3
add
stos
adc
pushf
int
xor
int3
jmp
sub
lods
rcrb
jle
loopne
xchg
ds
mov
inc
inc
sarl
jne
dec
push
fidivs
jbe
shl
scas
dec
mov
mov
scas
inc
add
gs
push
xchg
sahf
lods
and
mov
pop
mov
sti
js
aam
ljmp
jnp
mov
sbb
adc
push
adcl
aad
jmp
and
jl
call
pop
jle
adcb
push
ljmp
mov
sub
jle
adc
jne
aaa
dec
push
repnz
lret
enter
and
push
add
xor
ror
fdivrp
inc
insl
insl
add
scas
mov
icebp
fimuls
jle
jbe
adc
xchg
and
push
mov
int3
pop
push
dec
out
jle
sbb
mov
loop
dec
leave
jne
xchg
or
cmp
push
out
push
add
fadds
cmp
out
in
in
xorl
lods
cmp
jp
jns
mov
ljmp
mov
rorb
insl
xchg
cmp
jmp
push
adc
mov
cld
mov
enter
fwait
enter
adc
fildll
push
add
add
mov
push
mov
jecxz
pop
cmpsl
and
cmp
cmp
imul
shll
dec
sub
sbb
xchg
arpl
mov
pop
or
jbe
push
mov
xchg
push
push
out
mov
loope
clc
in
iret
and
cld
cmp
xor
mov
and
gs
mov
and
push
ret
lods
or
xchg
push
pop
inc
test
mov
cwtl
out
jp
mov
loope
lds
mov
push
int
add
sahf
dec
pop
mov
xchg
lahf
icebp
cli
ja
adc
jp
lods
notl
lods
jp
inc
sub
dec
mov
pop
adc
push
fbld
data16
xor
jnp
in
aaa
ret
or
add
fst
xchg
arpl
sub
js
int
inc
jecxz
aas
cmp
mov
stos
int3
sahf
ss
dec
nop
test
fnstcw
imul
and
int
ljmp
test
pop
in
jns
push
xchg
pop
and
sbb
mov
xchg
rcll
rorb
and
cwtl
je
sti
aam
lret
jmp
ret
leave
sti
mov
ret
sub
lcall
fisubs
cmp
lea
rolb
mov
ds
and
mov
sbbl
daa
mov
ss
dec
pop
enter
mov
and
inc
pop
sbb
add
stos
mov
mov
aam
pop
cmp
insl
jno
mov
xchg
fs
jle
arpl
leave
shl
aad
mov
ss
fildl
repnz
or
add
pop
push
pop
dec
ljmp
fwait
mov
cmp
cltd
dec
and
push
aam
stos
push
pop
fisubrl
movsl
rclb
xchg
orb
daa
xor
xchg
pop
jecxz
adc
mov
or
dec
cli
push
xchg
clc
add
mov
sti
xchg
nop
loop
cmp
pusha
popa
push
call
fisttps
mov
mov
daa
ret
pushf
xchg
movsb
push
enter
outsb
cmp
pop
xchg
outsl
loope
sub
xchg
and
js
ja
insl
lret
cmp
xor
sub
and
fmul
aad
lods
push
inc
in
sub
add
xchg
add
push
mov
lock
les
out
nop
fbld
jns
mov
jbe
sbb
pop
insl
lahf
sbb
fisttpll
mov
sbb
out
push
adc
push
das
adc
mov
outsl
movsb
dec
lea
xor
je
cmp
mov
repz
push
xchg
aad
lods
push
or
adc
inc
add
mov
fs
jl
and
xor
xchg
xchg
mov
pop
jl
mull
push
lock
cmc
out
inc
shrl
jp
nop
jnp
int
cmc
push
outsl
das
cwtl
or
das
jg
das
xchg
inc
shr
in
ljmp
inc
xchg
test
les
dec
call
mov
scas
in
and
outsl
enter
mov
jg
and
pop
or
push
push
dec
fsubrp
adc
and
fsub
pop
add
inc
mov
clc
xlat
cmpsl
and
mov
icebp
inc
push
xchg
std
fs
rclb
add
sbb
mov
roll
shl
stc
xor
push
push
les
sahf
popf
mov
pop
cld
sbb
popa
mov
jae
push
repnz
dec
pop
xor
lahf
fdivl
push
or
lret
insl
fwait
mov
cli
out
sub
xchg
call
adc
gs
pushf
or
fdiv
cli
jo
add
cld
jecxz
stos
jno,pt
in
mov
aaa
ficoml
dec
adc
dec
adc
out
push
adc
mov
bnd
inc
hlt
and
mov
int3
push
dec
addr16
push
int3
xchg
mov
jecxz
lcall
incb
and
and
sub
or
and
xor
jecxz
orb
into
pop
loop
out
jl
push
mov
mov
ret
roll
jle
jnp
push
pop
cld
aam
das
data16
loop
shll
out
cmp
add
ljmp
jo
mov
cmp
pop
mov
arpl
rcrb
xor
xchg
test
dec
mov
xchg
inc
imul
inc
add
mov
jl
ret
jae
cmp
xchg
mov
sbb
push
push
jne
movsb
mov
xor
ucomiss
shl
push
popl
jno
daa
hlt
fistl
fisubrs
fidivrl
mov
les
popa
xchg
shll
xor
adc
xor
jns
inc
das
in
mov
aad
hlt
arpl
nop
xor
push
dec
xor
repz
in
add
lcall
inc
jg
shrb
imul
jp
sti
in
jecxz
mov
sub
jecxz
inc
test
and
sar
mov
sub
mov
dec
push
pop
addb
cmpsl
outsb
aam
leave
ret
stos
and
imul
xor
adc
lret
jle
mov
pop
pop
frstor
adcl
fsub
mov
push
push
fldcw
cltd
pop
mov
loop
mov
and
cmpsb
add
sbb
dec
lret
test
clc
dec
pop
jo
mov
lcall
sbb
popf
push
inc
mov
pop
in
loope
stos
jae
movb
fildl
sbb
mov
repnz
jp
xchg
into
stc
test
test
jae
sub
mov
sub
xor
pop
in
je
rorb
mov
sub
lock
dec
add
xchg
icebp
pop
mov
mov
ja
inc
xor
into
ret
movsl
push
out
mov
push
js
inc
sahf
nop
shl
add
ret
dec
sti
idiv
inc
lcall
mov
mov
loop
iret
cmp
mov
test
pushl
pop
add
stos
aam
dec
sub
xchg
jl
cli
shl
je
das
sub
shrb
ret
loopne
shlb
outsb
mov
dec
lods
scas
add
call
sbb
call
sbb
pop
mov
push
jl
pop
lock
jns
jecxz
fucomip
mov
fisttps
call
cmpsl
add
aas
xlat
pop
fadds
cltd
xor
stc
dec
lret
shll
fistpll
test
mov
sub
push
fadd
sahf
fldl
int3
pushf
cld
nop
and
xor
repnz
push
insl
std
cmp
dec
mov
and
lahf
sub
shr
add
out
test
out
xor
lahf
clc
arpl
dec
mov
lret
mov
stos
add
adc
mov
out
and
sbb
rcrl
test
xchg
xchg
arpl
andl
sub
out
fadd
sahf
lea
jle
dec
sub
sbb
push
cwtd
cmp
cmp
fnstcw
sub
cmp
xor
inc
push
sti
cmpsb
xlat
push
in
cmp
mov
cmp
dec
sbb
dec
jnp
fstpl
out
fiadds
aam
xlat
daa
scas
pop
rorb
mov
sbb
cld
sbb
xor
xchg
and
out
lock
mov
mov
pop
lds
outsl
xchg
or
sbb
mov
xlat
sti
add
das
fstpl
dec
jecxz
sub
iret
movsb
mov
push
sub
lret
inc
mov
push
into
xchg
pop
inc
mov
repz
cltd
loopne
bound
mov
repz
aad
jo
or
pop
jmp
sub
push
stos
neg
cmp
flds
stos
fldt
cmc
mov
adc
and
call
imul
nop
jl
into
aad
jo
fadd
lds
call
xchg
or
xchg
cmp
adc
popf
out
sub
insb
test
loopne
push
push
loopne
add
inc
aad
ljmp
xorb
pop
pop
dec
jb
inc
pop
in
xor
add
pop
insl
adc
dec
into
aam
adc
pop
int
cld
cmp
mov
pop
xchg
mov
cmp
add
shll
sti
adc
push
mov
jmp
in
mov
enter
flds
in
inc
lea
sti
cmp
jmp
mov
fisttpll
fisttpl
rcll
sbbl
out
ffreep
dec
or
inc
dec
sarl
insl
fmuls
test
je
rcll
or
cli
and
xchg
clc
xor
mov
call
push
movsb
inc
jl
cltd
aaa
jp
xor
pop
popa
push
jnp
push
cmp
jo
lods
in
pop
adc
ret
ficompl
or
fbld
scas
pop
push
and
and
jno
jecxz
sub
loop
jno
jmp
lret
mov
cmp
stos
mov
push
out
addb
arpl
lea
sbb
fs
rcrb
popa
xor
sbb
mov
leave
scas
dec
and
dec
and
js
xor
adc
inc
pop
loope
pop
ljmp
push
cltd
rcll
mov
mov
add
mov
xor
push
cld
mov
inc
push
sbb
and
dec
dec
pop
mov
into
jnp
repz
ret
dec
clc
inc
push
test
cmp
popf
std
cltd
jo
jl
test
or
sub
dec
outsl
or
xchg
pop
sub
jae
or
xor
push
jecxz
outsl
inc
hlt
test
adc
or
scas
jp
gs
icebp
xchg
xchg
loop
mov
int3
inc
xchg
pop
sub
js
clc
dec
je
mov
cli
aad
add
sbb
lods
daa
or
fstps
test
and
jge
popa
mov
out
lea
popa
mov
movl
daa
push
xor
je
ds
pop
pop
loop
sub
jns
sub
mov
mov
mov
fnstenv
push
cli
fnstenv
pop
cli
lret
cltd
ljmp
adc
mov
push
jmp
jmp
pushf
pop
xor
enter
pushw
xor
inc
adc
js
lods
push
leave
aas
pop
xor
je
cmp
scas
inc
add
enter
pusha
jl
mov
xlat
lea
rcrl
sub
mov
bound
push
mov
mov
add
dec
mov
and
sbb
add
lret
push
jmp
jns
enter
ret
rolb
jge
push
imul
push
aam
lds
jmp
pop
data16
loope
pop
in
mov
pop
lahf
shll
sub
sbb
fmuls
mov
jg
xor
dec
in
shlb
fs
imul
add
je
xor
popa
ret
into
inc
loope
add
mov
sub
and
mov
das
iret
inc
cmpsb
outsl
sti
ss
ljmp
in
push
out
and
sbb
es
cmc
mov
aas
fcoml
pushf
add
shrb
or
push
enter
std
xor
addl
insb
and
les
mov
cmp
test
loope
inc
mov
dec
pop
hlt
lods
mov
sub
jne
sbb
mov
fcompl
clc
sub
sbb
stos
roll
xor
cltd
cmp
mov
es
push
loopne
incb
xchg
and
jg
lret
xchg
pop
jge
ljmpw
jecxz
filds
movsl
pop
sbb
aad
lock
jno
shll
push
rcr
arpl
or
loopne
popa
sbb
mov
xchg
cmp
sub
hlt
mov
jbe
gs
sub
cli
bound
xchg
int3
rcll
imul
and
test
fisubrl
pop
cmp
xchg
jns
push
push
ss
xsaves
in
push
fcmovnbe
and
inc
aaa
int
adc
pop
mov
fistpll
mov
ljmp
mul
mulb
aad
sti
mov
and
push
sbb
in
cmc
mov
fstpt
popf
xchg
xchg
imul
sub
pop
sub
dec
xchg
gs
mulb
push
cld
jo
in
fidivl
xor
bound
fldt
push
scas
cmpb
cmp
lret
sbb
cmc
scas
shl
xor
inc
mov
loop
xchg
mov
lock
es
loope
mov
inc
cmp
mov
dec
dec
xor
test
jp
pop
into
sub
pushf
jle
adc
or
xchg
push
stos
out
mov
decl
std
rcrb
jge
cmp
ret
lea
push
cmp
cmc
sbb
pop
cmp
in
dec
pushf
scas
mov
mov
xor
aad
ret
push
movsb
cmpl
sbb
cwtl
je
pop
xor
xchg
mov
xchg
cmpsl
xchg
dec
xor
mov
test
ja
sub
int3
popf
lods
icebp
arpl
mov
popf
scas
push
popl
fdivrs
roll
in
xchg
adc
pop
mov
aaa
jle
push
out
xchg
pusha
loop
push
jns
lahf
mov
ficoms
push
dec
mov
mov
jno
pop
shl
push
xchg
sub
mov
and
imul
cld
xor
lret
in
sahf
mov
pop
xchg
push
cmc
loopne
call
adc
hlt
jge
lret
call
or
out
sti
loope
xorl
mov
pmulhw
inc
test
es
add
repnz
ret
or
sub
imul
inc
leave
nop
cmp
je
adc
xchg
xchg
inc
lock
cmpsl
imul
jae
mov
call
adc
test
outsl
inc
mov
roll
gs
in
sahf
fiaddl
sarl
and
lret
mov
inc
jl
mov
xor
int
add
fadds
inc
push
add
lock
mov
jo
sbb
jp
jno
pop
xchg
mov
fnsave
sub
add
inc
ret
aad
xchg
push
in
nop
sbb
hlt
clc
or
bound
sub
mov
pop
push
dec
xor
sarb
sbb
jmp
cltd
lods
stos
pushf
sub
add
mov
lahf
mov
dec
adc
xchg
loop
pop
jp
push
shrl
xor
mov
push
jg
arpl
lods
cmp
pop
jp
mov
push
push
or
loope
and
add
jnp
mov
jmp
cwtl
lahf
repz
daa
scas
ret
lahf
xor
mov
cmp
mov
call
or
daa
rcll
imul
pop
adc
jge
xor
arpl
inc
sar
aas
sub
movsb
movb
dec
pop
inc
mov
mov
out
iret
sbb
cmpb
test
sahf
orl
pusha
xchg
into
js
xchg
jge
mov
testl
xlat
jle
jnp
adc
sahf
into
push
sbb
jo
leave
inc
and
push
jmp
mov
daa
mov
ror
or
cltd
stos
fidivl
cwtl
sub
mov
pop
fwait
and
jae
cmp
ss
cmpsl
mov
mov
int
scas
shll
cltd
imul
outsb
mov
out
je
jecxz
pushf
mov
inc
pushf
shll
cli
adc
xor
xchg
or
or
cwtl
loopne
sub
pop
mov
pop
xlat
stc
ret
out
cmp
sub
pop
xor
mov
push
mov
pop
test
lods
sbb
adc
cmpsl
mov
mov
xchg
xor
or
pushf
push
jbe
xchg
pop
rol
jae
hlt
loope
mov
pop
ljmp
jo
sbbb
adc
mov
sub
rcr
pop
dec
mov
jecxz
sbb
mov
mov
cltd
push
push
sub
mov
ret
mov
add
leave
mov
fcom
daa
jecxz
lcall
add
mov
lods
xor
rcr
outsl
js
out
out
loop
sbb
mov
push
xchg
test
ja
daa
mov
les
lods
cwtl
popf
mov
dec
ss
adc
mov
lds
fcomps
or
pushl
imul
jmp
inc
add
cmp
dec
repz
movsb
xlat
aas
ja
mov
dec
jp
mov
or
pop
popfw
test
adc
dec
pop
pop
inc
xchg
cmp
mov
in
mov
mov
pop
mov
rcll
cltd
inc
pop
pop
ja
cmp
sub
mov
xchg
js
ret
pop
and
cs
ja
addr16
mov
cmp
dec
xchg
ret
mov
mov
sub
push
rorb
mov
loop
jge
add
push
daa
mov
cmp
gs
and
xor
dec
and
outsb
mov
jp
sub
mov
sbb
cmp
fucomp
clc
push
push
int3
stos
rcrb
xchg
cmc
cmpsb
lret
jecxz
and
lret
loop
stos
daa
add
jmp
sbb
in
jmp
cs
in
jbe
mov
mov
and
je
repnz
out
or
scas
xor
mov
movq
mov
cld
shll
sbb
aad
sub
sbbl
sub
fisubl
adc
jnp
test
mov
add
mov
xchg
cmp
sahf
lret
push
insb
pop
pusha
ljmp
sub
lock
outsb
in
scas
xchg
mov
cmpsb
lods
popa
outsb
into
inc
cmp
pop
xchg
adcl
in
jl
pop
lret
xchg
or
mov
fildll
mov
outsl
dec
pop
or
icebp
push
mov
bound
pop
cmp
mov
cwtl
mov
cmovns
sub
xchg
cmpb
lcall
push
test
jnp
out
push
iret
je
pop
lret
push
ret
std
mov
ds
mov
mov
jae
or
fs
cmpsb
out
shlb
cltd
mov
enter
dec
xchg
lods
cli
mov
out
enter
or
mov
push
and
and
shlb
mov
sub
lret
push
int
pop
cmp
adc
sub
repnz
push
xchg
popf
out
rcll
mov
bound
icebp
push
xchg
orl
mov
sbb
daa
dec
mov
add
js
iret
decl
sub
add
jle
mov
mov
xchg
mov
push
jb
loopne
subl
cld
cwtl
das
and
in
and
out
xchg
push
push
mov
icebp
sbb
flds
rol
aaa
mov
into
lea
lea
rcrl
in
fcmovu
out
jmp
or
sbb
jae
cmp
and
gs
gs
push
xchg
inc
jne
cmp
lods
out
cmp
dec
sahf
scas
movsl
xor
mov
outsl
iret
xor
inc
and
push
or
pushf
hlt
push
ljmp
or
lret
stos
fisubrs
push
ljmp
cmpsl
imul
xchg
jge
fimuls
fsubs
adc
sub
mov
stos
test
xchg
xor
sbb
xchg
imul
rcrl
jg
cmp
push
test
xor
fimull
pop
jne
pop
xor
sub
out
jo
cmp
pop
insb
mov
bnd
sbb
or
dec
add
sbb
ljmp
pop
dec
ds
or
push
dec
xor
sbb
mov
inc
pusha
xor
icebp
ja,pt
cmc
call
cltd
pop
jmp
mov
push
mov
insb
add
xchg
mov
cmpb
adc
dec
les
jne
aam
push
jmp
out
dec
adc
stc
cmp
loop
stos
arpl
and
cmp
sti
push
leave
inc
aad
sub
cli
jnp
push
adc
cmpsb
pop
xchg
adc
xor
cmp
sbb
aad
mov
adc
push
lock
xchg
sub
jecxz
push
in
and
sbb
lea
mov
into
in
pop
sbb
add
mov
mov
in
mov
sbb
out
cld
xor
or
es
pushf
les
divb
pop
repnz
xor
push
xchg
adc
sub
mov
out
ffreep
mov
std
push
es
aam
dec
xchg
das
shl
jp
add
inc
cs
cli
or
fmul
out
pop
int3
mov
in
je
std
into
cmpsb
into
movsb
and
nop
xor
push
aas
xor
cwtl
and
mov
adc
inc
divl
aad
mov
aad
jns
add
pop
sub
mov
shlb
or
imul
sub
les
push
loop
insb
cmp
daa
xchg
rorb
mov
hlt
adc
or
fxch
mov
or
dec
lret
xlat
scas
jp
addr16
mov
das
incb
xchg
pusha
mov
je
push
les
int3
mov
out
popf
rorl
outsb
sub
roll
mov
lret
xor
leave
adc
test
push
stos
inc
xor
adc
loop
mov
inc
sbb
jmp
cmp
jb
adc
in
jmp
or
lods
push
in
inc
cmp
pushf
dec
jp
inc
mov
ret
cmp
pop
cmp
mov
movsl
adcb
jbe
cmpsb
aad
jne
cwtl
pop
push
sub
xchg
mov
bnd
loope
dec
pop
repnz
mov
mov
ljmp
pop
imul
mov
xor
fs
out
mov
xchg
stos
sahf
cmpsl
int3
lea
add
xchg
fisubs
xor
scas
rol
or
dec
fs
int3
add
aad
mov
stos
pusha
pusha
nop
loop
loop
dec
sub
xor
xchg
cld
scas
push
sbb
add
jno
fbld
pushf
es
mov
dec
movl
movsl
pop
and
out
enter
fists
jo
dec
roll
mov
push
out
movsl
push
jns
push
pop
jle
adc
or
sbb
cmp
add
fstl
sbb
adc
jbe
jns
push
cmc
data16
and
jmp
cltd
movq
leave
add
mov
popf
outsl
or
jbe
out
rorl
jnp
xlat
add
divl
jb
sti
sub
test
in
aaa
out
jo
pop
aas
lret
add
dec
cmp
inc
enter
in
into
lcall
mov
leave
fisubrs
lock
cmpsl
shrl
repz
sbb
jbe
stos
push
jp
les
adc
mov
adc
cmp
pop
sub
movsb
dec
adc
in
imul
test
sub
xchg
xor
pop
xlat
jnp
sub
mov
add
pop
out
iret
nop
out
sbb
xchg
pop
push
mov
pop
xchg
mov
inc
lret
xor
sbb
stos
sti
cmpsb
scas
dec
jle
cmc
inc
inc
std
mov
push
dec
out
sub
int3
and
call
mov
xor
jmp
xor
minps
push
insb
out
mov
inc
mov
out
loop
push
adc
sahf
pop
test
xor
xor
jp
adc
pop
mulb
push
and
fdivrs
fadd
arpl
pop
adc
rolb
fs
cmp
push
ffree
push
call
mov
and
sbb
fs
or
dec
add
jge
fs
push
and
cmp
add
xchg
sub
adc
xchg
add
fwait
mov
mov
insb
lea
xchg
cwtl
hlt
movsb
cltd
movsb
imul
mov
outsb
cltd
inc
outsb
xor
in
jle
std
push
movl
lds
jnp
pop
mov
sbb
call
ss
shlb
outsl
iret
xchg
sbb
repnz
je
mov
jnp
int
pop
mov
scas
fcompl
ds
sub
sbb
dec
pop
or
leave
xlat
dec
push
cmpsb
push
push
out
cwtl
inc
dec
call
inc
push
jg
adc
pop
rcrl
sub
jl
xchg
and
push
cmpsb
jl
fs
pop
stos
pop
pop
fldenv
pop
fisttps
es
inc
lods
out
jno
cmpsl
outsb
mov
pusha
push
fucomi
xchg
sbb
loopne
sub
mov
ss
std
jns
mov
sub
cmp
dec
jns
mov
inc
push
aam
insl
cmp
gs
inc
ret
sub
jae
fcoml
scas
pusha
clc
loope
dec
icebp
push
cwtl
rcrb
jae
and
xor
stc
or
add
mov
pop
adc
sub
js
push
shrb
jecxz
sub
fdivl
pop
out
cmpsl
loope
daa
iret
pushf
movsb
sahf
mov
xor
dec
xor
pushf
ljmp
push
jb
jle
mov
shrl
outsl
negb
iret
sbb
jbe
mov
cwtl
in
int
jo
jne
nop
test
outsb
cmpsb
nop
or
pop
dec
xlat
bndldx
push
pop
ljmp
add
dec
fists
sub
mov
in
jp
xor
cli
and
cmpsl
sub
push
inc
test
cmp
pop
leave
sub
popa
cmpsb
jbe
xchg
or
and
sbb
fmul
stc
div
adc
mov
stc
or
call
pop
pop
mov
test
mov
cmpsl
push
lods
testl
lea
sbb
jb
xchg
lods
enter
or
or
in
pop
int3
arpl
inc
adc
mov
cmp
push
or
hlt
das
lods
push
mov
test
call
test
ljmp
sti
jle
jb
repnz
and
fsubs
xchg
popf
dec
xor
adc
mov
insl
ds
cli
out
insb
or
arpl
push
icebp
mov
mov
push
popa
pop
out
clc
icebp
mov
mov
insb
mov
inc
add
xchg
gs
loopne
dec
jle
fldt
mov
dec
in
cmp
movsb
push
dec
fldl
fwait
stc
pushf
or
rcrb
and
xor
sbb
aas
aas
xchg
dec
imul
ret
add
cld
mov
jge
mov
out
fldenv
pop
mov
cmp
mov
pop
int
aas
push
xor
pop
cmp
aad
xchg
lds
inc
and
test
pop
aas
jl
testb
ret
leave
sbb
into
mov
flds
mov
dec
cltd
shll
add
cmp
dec
les
add
movsb
cmp
dec
mov
test
add
jns
ja
shrl
pop
arpl
mov
shrb
out
lock
jns
cli
cmp
bound
ds
inc
sar
ret
shlb
sarl
lahf
mov
push
adc
dec
lahf
mov
loop
mov
int
dec
ljmp
or
mov
test
std
push
cmc
shll
dec
insb
jp
cmp
rcr
push
movsb
mov
push
out
mov
aas
aam
loopne
sbb
mov
mov
mov
inc
fucom
mov
call
sbb
and
loopne
fs
push
fwait
xchg
sbb
jle
stc
js
xchg
ss
mov
jecxz
or
std
pop
push
lcall
mov
movsb
push
mov
sub
xor
sbb
cmp
push
pop
mov
adc
push
popa
sbb
cmp
xchg
xchg
js
xlat
aam
out
nop
and
sbb
push
loopne
jns
add
or
adcl
fst
xchg
movsl
jecxz
out
dec
sub
jnp
neg
jb
cld
test
nop
xchg
test
mov
xor
jo
xor
leave
movsl
testb
mov
xor
cmc
push
sbb
ret
mov
inc
mov
cmpsb
lcall
xlat
iret
mov
rcrb
es
adc
mov
mov
cmc
into
ss
ret
lcall
ja
sub
dec
test
out
in
movsb
pop
aaa
outsl
cmp
je
fdivrl
cld
xor
das
inc
xlat
dec
data16
dec
xor
xchg
mov
in
push
push
test
mov
lcall
fs
push
push
jns
in
push
pop
xchg
in
xchg
and
mov
inc
sub
dec
outsl
pushl
push
push
mov
jmp
push
mov
fs
add
push
test
test
fbld
out
push
cli
inc
div
test
jmp
je
add
pop
add
xchg
outsb
pop
iret
repnz
clc
testl
sti
mov
push
mov
fidivs
out
dec
pop
loop
jbe
shll
dec
mov
out
out
mov
pushf
dec
les
and
mov
fisubl
xchg
shrb
inc
fmuls
repz
xor
fsts
pop
adc
fstl
adc
or
adcl
lret
imul
sbbb
lock
in
imul
push
test
jg
and
mov
cltd
xor
scas
mov
xor
adc
je
xor
mov
or
lds
sbb
lea
adc
mov
leave
add
sub
mov
sahf
fucomip
movsl
push
mov
push
test
movsl
sbb
outsl
push
sbb
push
xlat
cld
test
lret
jbe
inc
push
push
mov
leave
sbb
ror
mov
mov
jl
insl
add
and
mov
ja
sub
movsb
lea
inc
pop
mov
sti
cmpsb
arpl
xchg
push
xchg
bound
cmp
mov
sub
cwtl
call
sahf
mov
js
cmp
andb
sbb
scas
or
pusha
popf
jo
push
loopne
in
pop
dec
ret
push
inc
and
mov
and
pop
adc
push
leave
iret
lods
xchg
mov
cmp
test
addr16
int
jbe
negb
pop
pop
pushf
setg
add
test
bound
pop
leave
jle
cmp
int
jge
and
cmp
jnp
push
add
fst
jg
lods
mov
pop
test
lcall
jo
jno
imul
shl
cmc
test
not
inc
mov
and
sbb
mov
or
movsb
shll
scas
push
test
inc
mov
popw
movsb
in
xchg
lret
andl
test
scas
aaa
sub
test
jb
xchg
and
pop
in
jge
xchg
test
push
push
and
arpl
cmp
ret
rcl
orl
icebp
push
sub
inc
aam
mov
in
mov
lock
jbe
enter
jo
add
mov
mov
pop
fnsave
jecxz
xchg
ficoms
mov
add
jbe
mov
fsubrl
cmp
adc
int
mov
mov
insl
rcrl
jge
or
jnp
loope
and
incl
mov
cli
insl
mov
xchg
and
scas
arpl
fsub
frstor
aas
jecxz
inc
aas
push
lds
pushf
mov
push
aaa
sub
incb
cmp
adc
les
cmc
int
ljmp
nop
sub
andl
mov
lds
cwtl
push
rcrl
mov
icebp
aas
cmp
nop
adc
mov
dec
jbe
inc
jbe
push
adc
cmpsl
cmp
std
hlt
sbb
pop
iret
in
addb
pop
sub
ja
repnz
and
flds
and
rorl
push
jns
lcall
pop
cmp
adc
inc
scas
mov
adc
jno
add
xor
cmp
cmp
imul
aaa
lret
jmp
lods
jecxz
enter
pop
cmp
sbb
rcll
inc
aad
mov
out
in
stos
inc
push
mov
fcoml
mov
and
mov
and
in
lea
sub
adc
mov
mov
mov
leave
bound
adc
ja
stos
lock
xchg
xchg
pop
xchg
mov
adc
daa
pop
mov
mov
cmp
test
push
shrl
sbb
add
movsb
test
movsb
cmc
or
push
push
push
xchg
xlat
sub
xor
fdivl
xchg
inc
imul
mov
sbb
xor
fcomp
cmp
std
fidivs
int
fwait
mov
sub
pop
fldcw
cmc
mov
daa
dec
pop
mov
xchg
aas
insl
bound
adc
iret
imul
jl
cwtl
jmp
popa
xor
int3
hlt
sbb
es
and
xor
or
mov
and
imul
xor
mov
scas
movsb
or
orl
movsl
cs
fdivl
push
jns
idivb
hlt
mov
jae
in
repnz
leave
inc
jne
jg
testb
mov
jo
arpl
inc
nop
ret
fs
pushf
push
rcrb
inc
lds
out
cld
cltd
repnz
cmpsl
addb
fwait
xchg
xchg
jnp
lods
xchg
outsb
rcrb
and
int
push
movsl
dec
scas
push
xor
push
in
add
mov
cmp
js
rolb
into
and
mov
lcall
jns
mov
or
adc
mov
pop
push
in
stc
popf
jb
mov
lret
daa
sbb
mov
imul
rorb
xchg
push
rorl
cmp
adc
repnz
sub
cmc
pop
xchg
bound
add
mov
adc
call
dec
push
mov
inc
fldcw
push
inc
mov
mov
adc
sti
ljmp
push
fst
pop
mulb
out
or
fcmovnbe
sbb
jge
sub
hlt
test
add
jg
xchg
push
test
ret
pop
sbb
js
mov
push
je
movsb
jno
mov
xor
movsl
jl
lock
and
jecxz
gs
mov
jge
cmpl
dec
inc
and
fldenv
inc
sbb
adcl
dec
pop
lcall
jecxz
or
jo
and
xlat
jmp
sarl
bound
shlb
in
clc
mov
and
popa
hlt
xchg
jne
testb
out
and
xchg
mov
xchg
adc
sar
mov
mov
inc
xchg
shlb
fdivrl
icebp
icebp
or
mov
pop
cs
sub
dec
les
mov
mov
and
sub
mov
and
daa
imul
mov
ljmp
les
inc
iret
xor
xchg
xchg
mov
icebp
mov
movl
add
or
shlb
out
cmp
xchg
sbb
sub
sub
repnz
cmp
sbb
lds
aad
fxch
aas
ja
inc
aaa
mov
xor
cmp
pop
pop
or
out
mov
sub
add
jo
push
adc
jge
dec
inc
mov
cli
pop
imul
scas
and
inc
mov
or
shll
sbb
cli
xchg
lahf
scas
push
xlat
dec
sarl
push
push
dec
in
imul
ret
mov
dec
sub
xchg
fs
sub
lods
xorb
mov
outsb
aas
dec
ret
pusha
cmp
jae
push
cs
fidivs
mov
adc
xchg
cs
std
lods
les
push
xor
shr
or
call
jle
mov
or
xor
pop
jmp
and
in
loope
repz
arpl
test
mov
push
inc
in
add
xchg
bnd
jl
xchg
call
add
ss
imul
cmp
cmpsb
sarb
notl
je
lcall
lret
jmp
loop
rorb
pop
cltd
inc
push
xor
cmp
inc
push
pop
daa
mov
inc
je
scas
std
sbb
rorl
mov
fld
or
test
cmp
pop
icebp
adc
cmp
daa
fidivl
push
jae
mov
orb
adc
dec
xor
imul
jle
mov
xorl
andb
sub
push
inc
scas
gs
adcb
ret
xlat
lea
xchg
mov
sbb
mov
or
cmp
dec
movsl
xchg
add
int3
jb
jl
nop
scas
fcomps
jle
jecxz
cltd
push
rcrb
cmc
cli
pop
dec
mov
push
mov
fsubl
jge
fiaddl
mov
sti
imul
jle
or
imul
pop
mov
in
aad
mov
jecxz
push
inc
push
push
test
mov
xlat
or
mov
ret
arpl
jp
inc
xchg
int3
mov
lahf
push
movb
dec
add
xor
jmp
in
mov
xchg
mov
repnz
out
jp
lcall
jp
mov
ret
aas
repz
xchg
pop
fldl
xchg
iret
inc
lahf
fbld
mov
sbb
mov
pop
loopne
push
cmc
mov
xchg
mov
jbe
or
lahf
into
loope
and
into
sbb
pop
mov
pop
ds
sub
pop
fwait
int3
insb
imul
in
jb
cmpsb
shl
addr16
xor
mov
or
jbe
pushl
bound
cmp
pop
testb
mov
mov
pop
fdivrs
adc
lahf
mov
test
icebp
lret
pop
mov
push
addr16
mov
dec
lds
inc
and
xchg
test
js
test
fs
hlt
jecxz
leave
stos
and
or
scas
push
or
aas
clc
ret
or
aad
fs
or
inc
cmc
insl
sbb
mov
jl
mov
jecxz
mov
cmp
inc
mov
and
cs
icebp
mov
inc
mov
push
add
and
mov
clc
mov
cmp
bound
pop
lods
mov
add
sub
jge
pop
cmpsl
gs
adc
xchg
out
xor
xor
fdivl
pop
xor
mov
imul
dec
xchg
mov
mov
sub
dec
int
sub
add
cmpb
inc
movsb
xchg
mov
out
fs
inc
push
or
lret
xor
pop
sub
fnstsw
aas
nop
xchg
adc
loop
mov
icebp
mov
add
mov
out
loope
ss
cltd
in
stc
ds
clc
scas
stos
add
sti
test
cmp
sarb
not
test
es
add
sub
ss
out
repnz
pop
add
xor
pop
pop
popf
aam
out
lahf
jbe
xor
sti
pop
nop
es
data16
fidivl
cmp
jae,pn
repnz
mov
andb
rcrb
or
jne
leave
sti
xor
in
dec
pushf
lret
iret
ror
cld
scas
mov
adc
popf
mov
cmp
cmp
push
push
add
loopne
mov
ljmp
testl
shll
scas
cmpl
cmpsb
lret
mov
sub
insl
push
cld
or
xor
addr16
xchg
jno
adc
pusha
sahf
sbb
sub
sbb
test
daa
es
pop
add
jo
mov
push
sub
push
in
mov
subl
jge
or
lret
cmpsl
cmc
enter
sbb
cli
jle
push
mov
and
xor
xchg
lret
or
jns
mov
cs
stos
jl
scas
or
pusha
in
mov
aaa
cwtl
inc
bound
inc
and
add
sub
mov
mov
push
inc
arpl
lds
or
in
or
popf
xor
sbb
pcmpeqw
pop
movsb
mov
push
inc
aaa
fmull
adcb
lret
hlt
cmp
ljmp
and
repnz
xor
loopne
and
mov
cmp
mov
and
sub
js
int
leave
out
pushf
enter
jl
js
fistpll
movsl
jns
out
enter
cwtl
shll
cmp
incl
popl
cmp
addr16
int
aaa
jl
add
xchg
add
sbb
aaa
adc
mov
std
cmpsb
mov
sub
adcb
or
mov
sti
lcall
das
icebp
dec
test
ret
mov
fdivrs
and
pushf
int
fwait
and
cmp
roll
repz
fsubs
cltd
call
mov
jno
sbb
mov
stc
into
in
test
jge
adc
add
sbb
sub
mov
shlb
out
test
add
jmp
repnz
sub
adc
sbb
jnp
mov
addl
sbb
pop
jl
jl
or
test
arpl
rorl
test
and
push
push
fiaddl
dec
add
mov
inc
pop
sbb
fdivr
cmp
mov
xchg
adc
lea
xor
push
adc
mov
addr16
jg
out
dec
adc
pushf
xchg
xchg
ret
adc
rcrl
imul
sbb
inc
test
into
lods
stos
cli
push
sti
mov
fnstenv
hlt
cs
mov
mov
pop
shll
rorb
push
jno
cmp
sub
imul
fwait
sub
push
addr16
imul
add
add
mov
clc
push
dec
mov
mov
imul
push
push
bound
clc
ja
xor
sbb
jo
pop
fucomp
mov
test
leave
flds
sbb
mov
nop
or
outsb
dec
lea
mov
mov
mov
fs
js
xor
ret
aas
sub
sahf
daa
loop
mov
cmp
add
push
pusha
sbb
ss
mov
sub
outsb
test
sbb
or
out
jecxz
test
fs
jecxz
push
js
jle
gs
adcl
jge
pop
outsb
jnp
jno
jmp
push
or
sub
ds
dec
es
das
sub
pop
xchg
dec
nop
dec
enter
jns
sbb
lods
sub
and
mov
fs
ret
test
fs
push
sbb
xor
cmp
sarl
cmp
mov
incb
mov
xchg
enter
xchg
inc
mov
cmp
sbb
pop
and
ret
jbe
leave
stos
sub
xor
and
inc
subb
insb
and
mov
and
aas
cli
inc
xchg
pushf
pop
addr16
imul
cld
jne
cmpsl
gs
push
scas
rorb
mov
movsl
cmp
jg
sub
daa
sub
test
and
mov
dec
shl
popa
push
push
xor
or
outsb
mov
imul
jae
cmp
das
jecxz
out
stos
jb
xchg
test
arpl
adc
cld
stos
mov
lods
or
loope
scas
test
and
dec
mov
lcall
fimull
sahf
inc
add
iret
push
push
xchg
mov
mov
aam
push
push
cs
outsl
xor
or
movsl
leave
out
lret
sub
push
pop
into
inc
pop
mov
or
jbe
pop
pop
jecxz
mov
cmp
or
dec
xor
mov
mov
shl
dec
ret
into
arpl
xchg
adc
push
sub
stos
cmp
orb
cmpsb
or
neg
inc
insl
lahf
cld
xchg
inc
jp
push
mov
push
iret
pop
jmp
iret
and
mov
fwait
sub
loop
jg
xchg
into
xchg
ds
cwtl
and
faddl
das
insb
mov
mov
popa
jp
mov
popa
mov
scas
xor
cmpsb
lret
cwtl
in
push
movsl
cld
pushf
and
xor
lcall
fists
mov
ret
dec
lret
mov
shl
fcoml
enter
sarl
jecxz
lock
fidivrl
cwtl
scas
lcall
sti
les
add
xchg
pop
pop
scas
repnz
mov
ljmp
sbb
sbb
xchg
pop
mov
and
out
mov
mov
mov
setae
inc
mov
movsl
call
dec
and
ja
xchg
outsl
rcll
and
int3
insl
out
ret
jnp
dec
daa
mov
mov
adc
loop
sbb
sarb
loopne
mov
lcall
add
sarl
lods
mov
jb
dec
push
int3
lahf
shlb
xor
pop
cltd
addl
scas
call
enter
andb
or
add
sbb
jl
pusha
stos
das
xchg
mov
adc
jmp
enter
daa
mov
das
mov
fcomps
or
inc
mov
sbb
cmp
xchg
push
lds
lcall
dec
into
sbb
test
jl
cld
fistpl
cltd
or
xor
imul
dec
loope
xchg
popa
xchg
lods
fistl
pop
aaa
dec
sti
lahf
icebp
cmp
ds
cmp
stos
data16
iret
gs
call
lret
aad
es
gs
loop
daa
fldl
jae
push
push
or
notl
mov
sub
jp
pop
push
cwtl
mov
dec
mov
rolb
inc
mov
add
and
xchg
adc
push
nop
arpl
imulb
out
push
push
out
lds
push
add
mov
out
mov
mov
jp
pop
sub
xchg
adc
adc
leave
push
stos
lea
add
push
flds
jns
dec
mov
mov
pusha
mov
sub
jae
jno
stos
mov
scas
test
std
push
push
mov
xor
and
or
in
movsl
inc
inc
xchg
stos
in
mov
add
add
aas
xchg
jns
jl
pop
xchg
nop
pop
int3
jns
mov
cs
sub
sbb
stc
push
mov
pop
and
jg
cmpsb
cmp
out
cwtl
xlat
push
add
sub
jbe
and
outsl
flds
push
rcr
shll
aas
test
cmp
push
xchg
out
adc
movsb
sbb
dec
inc
insb
pop
pop
imul
stc
js
or
add
clc
popa
ret
int
and
test
lret
xchg
jp
call
popa
pop
lea
and
outsl
and
dec
xchg
repnz
adc
data16
lods
jecxz
inc
mov
test
adc
adc
adc
aas
lods
push
and
xor
popa
mov
mov
push
daa
popf
mov
xor
xor
cwtl
jle
out
cmp
adc
fbld
sbb
or
or
push
bnd
jl
mov
xchg
rclb
xor
or
daa
lahf
shll
mov
dec
xorl
jl
xor
gs
subb
jne
mov
inc
inc
inc
sarb
adc
cli
jns
jnp
cwtl
jmp
lea
imul
sub
jns
lret
mov
sbb
popf
jnp
ljmp
movsb
sub
mov
test
repnz
mov
sti
sub
adc
xor
xchg
rorl
loopne
jae
or
cmp
lcall
lret
jne
ja
mov
rcll
sub
push
inc
jbe
in
xor
xchg
loope
jmp
push
mov
jbe
mov
lods
repnz
cli
roll
test
repz
sarl
xchg
pop
inc
insb
push
int
daa
out
mov
popf
sbb
jg
dec
dec
iret
mov
out
mov
lea
jmp
out
push
xchg
shrl
lods
pop
ficomps
ret
fisubs
xchg
dec
lret
jnp
lock
pusha
mov
add
jb
push
test
lds
cmp
mov
inc
out
cmp
lea
adc
das
push
cmc
pop
jge
sub
stos
shrb
jno
sbb
scas
cli
std
addr16
pop
sub
test
js
adc
into
scas
adc
in
lret
pop
add
sbb
cmp
jae
in
in
shlb
rcr
repnz
jp
repz
js
call
and
pop
test
ljmp
or
or
sbb
or
inc
jge
and
fstl
pop
jge
aam
ds
mov
mov
out
push
pop
cmpsb
fisubrl
adc
mov
mov
sub
jbe
adc
fsts
push
cmp
push
push
lods
pop
sub
in
cmp
aaa
cmp
jl
stos
inc
dec
mov
push
dec
push
mul
iret
out
jo
mov
enter
push
push
test
inc
xor
pop
pop
push
in
std
movsb
popa
adc
inc
dec
push
fstpl
and
push
mov
leave
xchg
adc
jge
shrl
lods
cmp
fisttpll
shll
cmp
cmpsb
jbe
xchg
inc
mov
dec
lret
mov
adc
sarb
xor
sti
xor
lock
ret
mov
cmpsb
out
scas
push
fmull
jl
daa
xor
into
incl
cwtl
loope
lret
mov
stc
les
add
fbstp
loope
sub
gs
ljmp
mov
lods
jb
subl
out
stc
ss
sbb
jl
test
stos
mov
mov
stos
fdivrl
popa
sbb
add
cli
jne
fcompl
mov
add
in
cmp
call
mov
jns
push
fwait
rorl
movsb
jmp
dec
and
pop
cmp
out
stos
inc
aad
test
imul
inc
push
xor
loope
gs
cmp
aad
push
icebp
add
mov
xor
mov
fistpl
jns
cli
jge
sub
jl
fldl
cld
int3
add
in
fs
test
test
pop
std
pop
dec
in
sti
lret
mov
bound
scas
call
xor
hlt
adc
mov
sub
or
sub
ret
clc
jns
stc
mov
add
sbb
in
mov
adc
lret
cwtl
popa
pop
addr16
push
mov
scas
xor
filds
std
lods
jp
dec
testl
jg
fistps
push
xchg
sbb
aam
aaa
or
fldt
sbb
jb
xchg
dec
add
sbb
je
inc
call
or
push
ret
ror
loop
and
mov
fwait
mov
pop
jmp
adc
rorb
pop
ret
mov
sbb
fisubs
pop
xor
lret
sub
subb
or
test
and
cmp
cmp
test
test
lea
out
push
sbb
cmp
mov
fs
adc
leave
sbb
adc
xor
out
cltd
mov
jge
pushf
daa
sahf
mov
leave
mov
dec
mov
rolb
sbb
pushl
loopne
rolb
dec
ret
sbb
or
testb
dec
ds
hlt
push
mov
jmp
loope
dec
pop
mov
inc
adc
mov
xor
pop
loop
jo
add
cmpb
lret
loopne
mov
jae
sub
mov
stos
mov
xor
pop
and
stos
jge
cmp
clc
int
or
pop
pusha
sti
outsl
movsl
sub
mov
or
stos
bound
test
dec
xchg
in
mov
mov
bound
push
xchg
push
stc
dec
jg
movsb
add
int3
roll
sub
ja
adc
leave
mov
loopne
jno
and
jne
jbe
into
xor
stc
add
add
inc
out
mov
cmpsl
jbe
cmp
add
iret
push
inc
or
inc
pop
mov
fdivl
push
jno
jmp
inc
cmpsl
push
js
jmp
jo
sahf
mov
imul
dec
call
insb
xchg
jns
pop
stc
mov
test
outsb
pop
out
add
ret
xchg
and
flds
sbb
xor
shrb
leave
aad
stos
dec
lahf
scas
cmp
inc
aaa
mov
stos
xchg
pop
js
out
mov
mov
popa
or
fsubrl
je
sbb
cld
sarl
iret
cmpsl
cmp
pop
inc
loope
lret
outsl
orb
shr
sbb
mov
sub
imul
mov
mov
or
pushf
sbb
mov
push
mov
jmp
cmp
aad
pop
cmp
jb
ds
mov
or
pop
adc
inc
jg
mov
dec
addb
lock
shll
dec
pop
cwtl
rcrl
sbb
inc
mov
jae
adcl
mov
xchg
adc
sar
lea
outsl
jo
mov
xchg
popf
lea
mov
test
stos
sbb
mov
cli
jl
dec
cmp
push
pushf
push
jne
add
in
xchg
mov
rclb
iret
fwait
adc
rcll
aam
or
jge
push
cmp
or
or
sarl
cs
into
popa
mov
mov
lret
out
enter
out
xlat
xor
push
popa
dec
jmp
mov
out
jmp
xchg
gs
cmp
sbb
sub
mov
push
in
mov
addr16
je
or
jo
cld
jns
sbb
xor
push
ret
and
sub
sub
scas
pop
mov
clc
fmulp
xor
jbe
xor
repz
leave
add
lock
mov
dec
pop
push
insl
cmp
add
pop
in
aam
lret
stos
stc
cld
iret
mov
xchg
mov
mov
mov
scas
cwtl
dec
pop
loopne
loope
and
mov
stos
mov
cmp
pop
dec
xchg
adc
ljmp
rcl
mov
xorl
ret
mov
inc
scas
dec
and
mov
int3
and
cmp
xlat
cmp
aad
rcrl
cmp
inc
push
fnsave
xchg
push
mov
mov
jmp
fdivs
out
pusha
mov
jmp
cwtl
ss
pop
aaa
push
sub
icebp
loopne
cltd
aaa
jmp
push
out
cmc
es
mov
mov
aas
frstor
xor
icebp
frstor
mov
rcrl
pop
ds
dec
mov
sub
popl
pop
loope
xor
movsl
inc
pop
std
jge
lret
cwtl
rol
jae
imul
push
sub
sbb
and
lret
je
popa
dec
fldcw
test
leave
cmpb
and
imul
inc
in
push
fisubrl
shlb
jnp
and
in
jmp
dec
sub
les
push
push
insb
xchg
cwtl
cli
out
lods
mov
insb
inc
cmp
sbb
dec
mov
ja
push
mov
pusha
in
xchg
add
shr
push
aam
sub
pop
mov
mov
adc
sbb
popa
jmp
inc
in
pop
int3
test
test
rclb
adc
cli
add
xchg
and
stos
test
and
in
out
enter
imul
stc
aad
sbb
sarb
add
inc
pop
mov
sbbb
adc
adc
push
inc
stos
cli
cmp
pop
je
fbld
stc
stc
fisubl
jle,pt
in
or
popa
mov
sbb
stos
ja
xchg
iret
pop
ret
int
mov
inc
fistps
fsubrs
mov
ficomps
add
lods
mov
popf
fcmove
mov
icebp
mov
add
in
daa
pop
jmp
pop
adc
add
iret
sub
cmc
stc
movsb
loopne
fcoms
fistl
sbb
jp
js
scas
sub
and
xchg
pop
loope
sbb
sbb
jne
gs
inc
push
dec
subl
mov
sbb
lds
add
add
insb
pushf
mov
and
outsb
frstor
sbb
call
aad
push
out
pop
repz
xchg
dec
dec
sbb
mov
push
icebp
xchg
stos
jp
cmpb
xorl
adc
bound
dec
fs
and
lds
sub
cltd
arpl
cmp
mov
add
mov
add
std
mov
fsubrs
jmp
ret
aas
pop
sbb
mov
xlat
inc
xchg
pop
sti
push
out
lahf
sub
mov
xor
and
or
mov
lcall
sub
mov
in
sti
add
jl
mov
cmc
or
fnstsw
sbb
xor
push
loope
cmp
addb
add
rcll
loopne
pop
lahf
imul
pop
in
jne
pop
push
testl
fistl
jle
xchg
lret
cltd
dec
jo
addr16
or
out
int3
shrb
pop
dec
icebp
jg
and
mov
aad
rcll
and
xchg
fs
or
cmpsb
inc
sub
cmp
push
or
mov
xchg
mov
lods
outsl
dec
jns
sahf
imul
add
aam
mov
aas
adc
or
ftst
sbb
mov
loop
mov
aaa
je
mov
adc
inc
or
inc
or
cmp
jge
xor
jmp
movsb
ds
orl
pushf
jle
hlt
inc
ret
push
and
popf
or
loope
fldenv
aam
or
xor
cmp
in
dec
and
and
jmp
popa
ds
pop
lret
mov
pop
gs
mov
outsb
sub
inc
jno
pushf
adc
or
cld
test
or
inc
pop
sbb
in
push
push
aam
xchg
cld
pop
dec
push
stos
xchg
in
lods
ret
sbb
loope
xchg
loop
jp
aam
jae
shrb
ja
into
add
lds
cli
lods
sub
repz
testb
sbb
mul
gs
mov
aas
mov
stc
movsl
xchg
mov
rorb
xchg
popf
jl
jb
loopne
out
iret
xor
mov
push
lret
rclb
inc
push
sti
cmp
fisubrs
sar
in
jecxz
subl
orl
push
or
mov
enter
sub
aaa
mov
bound
aas
xchg
sub
lahf
jnp
fists
das
in
in
xor
shll
or
or
or
enter
fdivp
sbb
push
aam
adc
cs
add
fldl
mov
sub
out
push
cs
mov
xchg
cmp
cs
enter
aaa
push
add
testb
fstl
xchg
sub
cltd
jnp
in
movsb
ds
dec
es
clc
jecxz
mov
lds
aas
pop
into
push
and
xchg
int
fldl
inc
jg
add
cwtd
xor
push
out
and
sbb
gs
push
out
inc
jg
cmp
push
sub
dec
cmp
and
push
dec
pop
cmp
inc
fxch
dec
lea
jle
adc
xchg
pop
test
push
stos
mov
inc
mov
adc
lea
or
push
out
cli
dec
leave
fs
scas
in
xor
loope
rorb
hlt
jl
or
cmp
fstpt
jbe
cmpsl
cs
lret
bound
sub
sub
aad
ds
inc
pop
dec
jmp
ffree
in
mov
addr16
xor
cmp
xlat
imul
pop
add
jecxz
cmp
fidivrs
les
ljmp
sar
mov
out
nop
das
sbb
test
add
jno
in
scas
push
int3
cmp
xor
pushl
sub
jne
es
xchg
outsb
clc
xchg
push
push
and
pop
lock
jns
int
jmp
out
add
and
into
jae
lods
and
into
inc
inc
pop
xchg
pop
pop
icebp
inc
test
cmp
fadd
push
and
mov
sbb
repnz
rorl
enter
movntq
pop
stos
sbb
repnz
lcall
and
adc
test
mov
flds
mov
mov
les
enter
movsl
jb
ja
lock
mov
gs
pop
jmp
es
cmp
mov
cmpsb
or
adc
xchg
ret
fstps
jns
in
or
imul
pop
or
xchg
xlat
les
cmc
hlt
int
mov
cmc
es
xchg
outsl
clc
mov
enter
or
testb
inc
fwait
adc
push
cmc
dec
jne
add
xor
push
lret
test
loopne
fs
and
mov
arpl
push
or
adc
mov
sub
rolb
jmp
inc
rclb
push
es
lock
inc
lcall
jne
test
push
mov
pop
xor
ret
aaa
fstpt
in
dec
inc
orl
jle
les
lret
in
addr16
lods
nop
repz
std
jg
int3
sbb
fildl
lcall
adcb
or
sbb
xlat
add
push
cmc
mov
roll
in
rcrb
out
repz
mov
out
mov
mov
test
xor
cwtl
push
pop
test
mov
and
leave
push
adc
and
mov
addr16
mov
xchg
hlt
lds
mov
pop
in
cmp
cltd
mov
jo
sub
insb
cmp
subl
sub
add
pop
lcall
dec
rolb
into
xor
mov
lods
sbb
lahf
inc
lds
aas
sbb
sbb
mov
inc
fimuls
xor
aam
xchg
inc
daa
jno
xor
aaa
or
mov
cs
sub
cltd
gs
push
xchg
out
fstl
out
mov
mov
out
js
cld
and
sbb
dec
and
sub
sbb
push
cmc
pop
repz
xchg
stos
mov
push
popfw
inc
jg
cmp
in
scas
mov
lods
xlat
cmp
outsl
mov
lds
cs
xor
daa
and
addl
push
nop
pop
lret
dec
aaa
or
sbb
and
push
jp
inc
int
adc
sbbl
popa
lcall
push
mov
push
or
outsb
add
scas
data16
jge
ss
lods
or
pop
pop
scas
push
adc
cltd
mov
cs
sub
or
add
gs
sbb
sbb
xorb
xor
movsb
imul
nop
dec
push
push
jle
push
sbbl
fisttpl
daa
in
mov
mov
in
fcmovb
pop
push
jnp
int3
push
mov
int
and
mov
jl
sub
mov
pop
loop
jne
cmp
cmp
loop
test
push
arpl
in
imul
aad
repnz
mov
jb
out
pcmpgtd
lods
enter
xchg
fldenv
fisubl
test
mov
xor
pop
pop
mov
das
fwait
fs
leave
imul
mov
and
cmpsl
adcl
add
cmc
mov
popa
and
xchg
xor
lds
mov
mov
or
mov
mov
adc
out
daa
sub
bound
rcrl
pop
push
mov
cmc
cmp
pop
dec
arpl
scas
fwait
add
mov
xchg
aas
dec
mov
xchg
loope
aad
or
jae
pop
les
lods
arpl
aam
xor
insl
int3
sub
jge
out
repz
leave
cld
push
xor
gs
mov
sbb
sahf
push
lea
lret
jp
movl
lcall
pop
dec
loope
pop
sub
mov
sbb
jne
cs
push
sub
mov
push
mov
sbb
and
cs
lea
lret
push
sub
les
icebp
into
dec
inc
hlt
xchg
rolb
jge
xchg
lods
shrb
hlt
movsb
sub
nop
dec
in
hlt
sahf
push
pop
into
fdivrl
cmc
notb
xchg
pusha
testl
push
mov
test
pop
mov
or
mov
cmp
dec
mov
in
mov
cmpsl
les
cmpsb
clc
dec
cltd
adc
lods
lahf
and
std
or
fisubrs
popf
xchg
mov
dec
ficoms
setbe
fstl
fs
jb
mov
add
xchg
or
in
shrb
movb
jb
outsb
dec
js
int
fucom
shlb
cli
jo
adc
jo
mov
dec
jae
clc
sbb
sahf
lock
pop
les
ss
and
rcrb
xlat
les
pop
mov
sbb
sub
xor
add
push
push
mov
icebp
mov
xor
fwait
pop
addr16
sub
dec
cmp
fldt
push
jecxz
mov
and
inc
push
out
call
adc
pushf
sub
jp
dec
and
lock
repz
fs
push
in
es
ljmp
test
stos
js
ljmp
mov
xorb
push
lahf
fmull
outsl
adc
scas
mov
jge
xchg
addr16
scas
jae
jbe
sub
call
ret
mov
mov
adc
sub
gs
incb
stc
outsl
shrl
jns
sarl
push
popa
das
or
std
pop
dec
xlat
push
xchg
adc
es
nop
leave
fs
daa
sahf
or
cmpsl
test
and
mov
in
repnz
sbb
adc
jbe
into
dec
mov
adc
push
outsl
push
cmpl
pusha
aaa
enter
sti
mov
and
and
and
jnp
mov
negb
dec
cmp
mov
mov
ljmp
pop
jo
nop
lcall
ffreep
add
fstpt
mov
aad
adc
inc
sub
jno
cmp
adc
mov
jae
sub
sbb
iret
pop
and
mov
mov
scas
push
cmp
insl
icebp
dec
aas
scas
mov
pushf
push
test
cmovo
adc
mov
std
test
fildl
rorl
mov
push
cmp
gs
sarb
push
add
pop
adc
sbb
add
pop
shrb
repnz
rol
adc
je
bound
cmp
lcall
or
int
xor
push
icebp
mov
push
jns
pop
pop
lahf
cwtl
jecxz
not
cmp
out
sub
mov
out
icebp
es
push
inc
cltd
fistpl
add
shlb
cmp
or
mov
xor
adc
and
aaa
push
pop
rolb
fistpl
and
jg
xchg
cmp
je
outsl
xchg
int3
popf
mov
add
scas
leave
out
stc
rcrb
dec
push
mov
push
xor
fs
xor
mov
jle
jge
fsts
xchg
push
subb
mov
and
out
lea
mov
enter
or
push
jnp
cmpsl
jmp
sbbb
or
aaa
mov
adc
and
jmp
xchg
addr16
add
push
das
cs
push
jmp
add
dec
sbb
jb
jge
popaw
cmpsb
popa
int
jae
sbb
sub
outsb
jg
mov
pop
mov
adc
mov
or
adc
inc
pop
mov
nop
in
sub
lods
repz
addr16
mov
scas
leave
scas
mov
and
adcl
sbb
push
jnp
push
mov
mov
mov
mov
sbb
aad
pop
out
and
rclb
jmp
pushf
and
add
pop
add
jp
outsl
and
add
mov
adc
mov
cmp
adc
mov
xor
push
aas
pop
sbb
cmp
movsl
mov
out
cld
jl
aad
add
xor
in
push
mov
sti
mov
jb
outsl
arpl
jle
mov
mov
ja
push
jl
push
mov
cmp
cmp
cmp
imul
outsb
push
jae
cmp
adc
es
repz
xor
into
jecxz
adc
push
ja
push
out
mov
out
imul
pop
into
jns
cltd
clc
cmpl
imul
out
shlb
lds
or
adcb
xchg
aad
clc
sub
mov
repz
andb
or
pop
push
aaa
movsb
ret
cmp
icebp
in
dec
ret
cmp
mov
cmp
mov
or
mov
xchg
mov
pushf
cmp
fwait
mov
pushl
dec
outsl
add
andl
das
pop
adc
xor
popa
xor
fwait
movsb
sub
pushf
mov
xchg
movsl
outsb
pop
test
and
fsubs
push
cltd
cmpsl
notb
movsb
xor
sti
push
add
adc
xlat
cmp
js
popf
adc
add
sub
mov
fistps
cmp
call
push
iret
ret
bound
xorb
mov
lods
imul
mov
adc
jb
stc
daa
outsb
pop
in
lahf
jecxz
mov
pop
js
insl
into
hlt
mov
js
jb
cmpsb
inc
rcrl
xchg
popf
jp
daa
sub
addb
or
clc
jp
mov
nop
jg
pop
dec
addr16
fstps
push
jg
push
mov
jle
lods
inc
fsubrl
outsl
rolb
leave
jmp
sub
sbb
pushf
test
das
test
mov
into
inc
xchg
push
js
push
jns
xchg
rorb
cmpsl
mov
mov
jnp
mov
dec
mov
jle
rorl
sub
or
jno
popf
pop
pop
cmp
loop
xchg
or
add
or
cmc
lock
xchg
xchg
sarl
lds
dec
insb
sbb
sbb
stos
fidivl
and
in
fiadds
out
cmp
or
rcll
inc
cli
inc
mov
xchg
test
adc
sub
popf
popa
xor
ss
stc
je
loopne
mov
xor
aad
out
xchg
adc
xor
stos
cmpsb
rorl
adc
xchg
inc
mov
aaa
xchg
cmpsl
or
insl
sahf
mov
pop
add
mov
repnz
lahf
outsb
dec
aas
xchg
or
pop
clc
lds
in
xor
daa
out
loope
add
lret
mov
sbb
mov
leave
jle
repnz
mov
mov
mov
lcall
into
sti
aad
pop
jge
xor
xchg
push
je
or
mov
jecxz
fildl
add
jne
xchg
sti
ror
cld
in
cmp
jmp
daa
mov
adc
lods
aad
and
subb
out
stos
fcmovb
mov
sar
daa
add
push
hlt
lcall
popf
sbb
out
insl
out
push
subl
mov
mov
and
data16
aas
and
mov
negl
repz
icebp
dec
outsl
or
rcrb
dec
pop
adc
cmpsb
loope
push
cltd
sbb
push
sbb
mov
ss
adc
pop
aas
cli
sbb
adc
fstpl
cli
sub
mov
adc
imul
jo
and
jle
cli
test
in
xor
scas
adc
addb
sub
ret
fmul
mul
sub
fidivrs
mov
pop
add
call
jo
iret
xchg
insb
repz
popf
lcall
mov
xchg
test
out
and
sub
and
addr16
enter
sbb
fldenv
push
cwtl
cli
pop
dec
je
stos
xchg
pop
scas
leave
pop
mov
sbb
mov
mov
setb
xor
lods
cld
lds
cmp
jns
sub
dec
pop
loopne
mov
clc
lock
clc
rorl
ficompl
andl
dec
js
dec
jo
fst
cmp
or
pop
jae
repz
test
cmc
fcmovnu
arpl
sub
mov
dec
sub
xchg
pop
enter
repnz
call
dec
xlat
sbb
into
mov
jl
mov
shrl
je
dec
loopne
test
pop
lods
scas
dec
fldt
sub
inc
inc
mov
cmp
lret
mov
andnps
mov
mov
stos
add
addl
mov
push
stc
movsl
adc
mov
and
into
push
ss
jo
xchg
das
movsb
fsubrs
lahf
out
lock
xchg
push
bound
dec
les
mov
adc
inc
fcmovnu
and
clc
and
mov
fldt
mov
fnstenv
cli
mov
das
outsl
xchg
call
jmp
loopne
mov
jle
js
jmp
std
ret
cmp
outsb
xor
notl
sbb
xchg
sarb
and
push
lret
mov
xchg
pop
loop
sbb
packssdw
out
lods
jne
call
jbe
dec
push
pop
mov
jge
push
adc
and
mov
sti
inc
gs
aam
nop
fdivrs
das
inc
pushf
cli
or
jge
in
arpl
mov
cwtl
sbb
loop
clc
test
leave
cmpsb
mov
js
dec
clc
and
shll
movsl
loope
xrelease
aas
mov
movb
jecxz
xchg
mov
arpl
ret
sahf
loope
shlb
cwtl
mov
lret
or
lahf
and
sahf
and
mov
mov
ss
fstpt
mov
cld
sar
or
xlat
cmpsl
cwtl
jmp
pop
pushf
sub
pop
ja
xor
fisubs
pop
cmp
mov
rcrb
and
cli
mov
and
jl
popf
aad
loop
popf
mov
and
push
and
push
mov
lret
xor
xchg
in
es
pusha
push
inc
jo
rorl
jp
pop
enter
push
stc
movsl
pop
push
adc
xchg
popf
mov
inc
es
jae
aas
add
scas
fstl
jnp
cli
inc
js
adc
std
mov
or
xchg
lahf
or
jne
nop
ret
jl
leave
movsb
popf
and
sbb
cmp
push
mov
or
and
repnz
cs
in
or
loop
mov
cwtl
sbb
rcll
loop
mov
push
clc
pop
icebp
sub
xor
cmp
push
pause
in
les
divl
fbstp
sub
adcl
retw
aam
jne
in
xchg
movsl
lret
nop
pop
fwait
daa
outsb
loop
fmul
cwtl
lret
movb
or
mov
jg
iret
xchg
sub
pushf
call
sbb
sbbl
leave
lock
fs
sbb
sbb
aam
lds
sarb
adc
stc
daa
repnz
mov
or
xor
cmp
imul
leave
je
test
xorb
push
pop
push
jecxz
cmc
filds
test
pop
add
test
sti
lcall
pop
push
fldcw
dec
cmpsl
cmpsb
xchg
les
daa
mov
dec
inc
add
loop
lret
cmp
mov
jae
jb
mov
popa
cmc
sti
xor
inc
hlt
mov
push
and
es
shll
xchg
popa
sahf
fbld
out
pop
cmpl
lea
inc
xchg
popa
ss
iret
mov
sub
sub
pop
and
push
ja
sbb
adc
add
loopne
nop
push
insl
and
jp
mov
sub
mov
mov
test
aad
push
sub
lock
lret
icebp
icebp
jge
popf
sar
paddsb
in
dec
rolb
and
daa
insb
dec
fstpt
sbb
mov
inc
leave
push
fcoms
mov
pop
push
icebp
mov
and
into
cld
dec
mov
mov
pop
and
xchg
rcrb
inc
das
mov
scas
jae
jp
imul
mov
call
jle
pop
cmpsl
pop
sbb
aas
test
sub
iret
loope
xor
lret
fcoms
mov
jo
pop
mov
push
daa
mov
cmpb
rclb
pop
testl
jmp
add
inc
xchg
cmp
dec
mov
inc
into
inc
push
add
dec
sbb
rcrb
dec
mov
mov
lahf
mov
and
sbb
jns
and
movl
insl
movsl
sbb
sub
mov
xchg
fisubl
xchg
test
cwtl
mov
insl
cmpb
or
pop
jne
test
adc
arpl
inc
test
std
mov
ja
int3
je
andb
xchg
in
mov
add
repnz
popf
jle
lock
test
and
popa
cs
mov
jle
mov
cmp
mov
mov
xchg
sub
mov
ret
fsubr
mov
scas
and
cmp
fs
divb
shlb
mov
mov
nop
movsb
dec
or
inc
push
test
jg
iret
test
mov
xor
sbb
gs
outsl
xchg
scas
out
mov
insl
cli
cmp
insb
mov
mov
movsb
dec
fidivl
pop
push
inc
clc
xchg
mov
xor
adc
mov
push
insb
aaa
hlt
pop
cmp
sbb
iret
pop
or
sub
xor
in
insl
sbb
addr16
sbb
or
cmpsb
cmp
bnd
cmpsb
inc
xor
mov
mov
adc
jmp
in
lret
push
cmpsl
bound
pop
je
add
push
or
pop
loope
cmpsb
push
aad
jmp
mov
mov
mov
daa
aas
adc
aam
mov
cwtl
lcall
movsb
and
inc
dec
xchg
addr16
push
cmp
adc
pop
xor
or
pop
popf
pop
push
shlb
daa
movsl
mov
mov
and
cltd
inc
jae
jb
mov
faddl
ljmp
dec
lods
sub
ret
mov
dec
lods
cld
divl
mov
roll
adc
out
std
and
dec
mov
mov
sbb
xchg
decl
push
iret
scas
pop
js
sbb
adc
in
lcall
or
testl
stos
jge
push
adc
xchg
or
push
imul
fnstenv
gs
or
outsb
xlat
xchg
rcll
cmp
push
pop
int3
std
bound
mov
mov
pop
sub
aam
repnz
jbe
inc
or
clc
sti
fcmovnu
mov
xor
push
or
cli
in
jns
jge
xor
adc
and
gs
jno
mov
xor
pusha
shlb
imul
and
aam
push
add
jmp
fwait
mov
adcl
addr16
adcb
out
or
sub
inc
iret
inc
dec
pop
inc
cmp
outsb
xchg
lods
dec
loopne
or
enter
fistl
xchg
addl
cmp
lcall
fsubrs
stos
xchg
xor
js
fcoms
mov
cmp
movsb
mov
mov
xlat
xor
loope
sbb
stc
iret
and
inc
add
and
notb
push
jecxz
sub
mov
add
jno
es
lret
jo
jo
ret
xor
fcomps
dec
xchg
jno
jns
fs
lock
pop
js
lahf
xchg
jo
mov
leave
popf
cmp
fldt
pop
add
in
loope
inc
xor
scas
xor
jmp
fidivrs
andl
push
stos
pop
mov
es
sarl
pusha
jne
cmp
xor
pop
lcall
inc
add
push
mov
es
daa
les
lahf
xchg
in
bound
ret
or
mov
add
sub
aam
add
fisubl
push
sbb
jp
push
loope
repnz
imul
das
lea
out
stos
sbb
mov
jne
adcb
ss
mov
jo
lahf
popa
pushf
push
cmp
cmpsb
mov
xorb
pop
add
fisttpl
dec
inc
inc
pop
jmp
mov
lcall
jo
adc
ds
sub
int
xlat
arpl
push
shlb
lods
inc
and
pop
mov
out
repnz
insl
fldcw
stc
popa
testb
push
inc
push
xchg
fstp
jge
add
lret
jl
les
loopne
and
sbb
inc
adc
adc
jns
out
mov
pusha
outsw
nop
sub
int3
pop
pushf
lock
mov
inc
aas
psrlq
mov
loopne
insl
cmp
mov
and
cmp
lods
xor
xor
loopne
xor
xor
inc
ds
add
sub
or
and
cli
aas
nop
push
stc
fwait
jno
imul
mov
mov
cmp
hlt
pusha
int3
jne
shlb
mov
sbb
loopne
aad
roll
stos
xchg
push
in
sub
pop
fnsave
xchg
pop
inc
and
insl
cmp
dec
sub
pop
xchg
sbb
fsubs
inc
sub
rolb
sub
cmp
aad
xchg
push
sbb
pop
pop
scas
rclb
pop
jecxz
loop
or
jmp
xchg
pushf
push
jg
adc
mov
push
xor
cs
movsb
sahf
cli
in
sbb
dec
movsl
cmpsl
and
or
ja
inc
aaa
imul
int
mov
fsts
sbb
xchg
ss
mov
push
popa
dec
mov
js
insb
je
fstp
scas
mov
cltd
xchg
cli
push
push
pop
cmp
xchg
xor
push
in
or
cmp
in
and
lea
add
dec
dec
arpl
out
xorb
add
sub
imul
cmc
popa
lods
adc
push
lods
pop
fcoms
sub
push
ret
leave
adc
jle
xchg
loopne
sub
adc
hlt
scas
scas
xorl
mov
enter
add
leave
pop
call
xor
sbb
add
push
push
sub
add
inc
and
mov
inc
les
and
out
lret
inc
or
movsb
mov
cld
flds
repnz
sub
mov
pop
sbb
aas
ja
adc
and
mov
push
jl
xchg
outsl
xchg
pusha
sahf
fadds
fnsave
incl
fildl
cs
push
add
das
or
fadds
sbb
push
push
je
das
test
sbb
sub
test
inc
jp
sbbl
mov
sbb
jecxz
in
popf
flds
lods
dec
repnz
pop
das
add
push
int
push
adc
pop
cmp
rorb
push
jecxz
mov
xchg
popf
ljmp
adc
fnstcw
cmp
adc
andb
in
insl
subl
in
dec
sbb
xchg
jl
pop
cmp
test
stos
jg
test
movsl
fidivs
jecxz
jle
inc
lret
and
dec
movl
rcrl
adc
xchg
imul
xchg
arpl
sti
sbb
fs
push
sub
push
mov
inc
xchg
fmul
idiv
fyl2xp1
sbb
jmp
mov
cmp
xchg
rclb
add
push
pop
fsts
xchg
stos
or
js
cmp
test
mov
push
push
xchg
push
fmulp
sub
in
add
repnz
jmp
es
xchg
pop
cmpsb
xor
pop
ss
in
fcoml
mov
in
sbb
pop
jecxz
imul
mov
addr16
xchg
out
xchg
mov
dec
push
and
sbb
movsb
sub
ljmp
and
mov
push
sbb
mov
mov
loope
ret
jle
jne
jbe
out
inc
jge
arpl
movsl
dec
and
mov
cmp
xlat
clc
stc
iret
sbb
test
adc
and
ret
scas
test
testl
xchg
ret
or
mov
or
push
dec
fs
jb
in
decb
or
mov
xchg
jae
mov
cwtl
jl
jns
std
mov
call
inc
xchg
push
pop
int
pop
dec
mov
xor
and
xchg
push
add
mov
std
test
xchg
xor
inc
dec
push
sti
arpl
mov
adc
adc
cmp
push
xor
xchg
ret
mov
stc
sub
jns
inc
sbb
xor
out
or
dec
insl
mov
pusha
mov
jecxz
call
cmp
inc
cld
cmpsl
and
mov
pop
xchg
lret
pop
mov
inc
xchg
adc
stc
mov
cmpsb
imul
cmp
inc
jbe
push
cmpsl
xchg
decl
sub
and
iret
inc
push
leave
lcall
sti
inc
into
or
insb
xor
arpl
jp
jecxz
imul
test
aam
or
sbb
mov
mov
mov
jo
jae
or
inc
outsl
sbb
cli
fiadds
xchg
mov
sahf
pusha
add
push
cmp
aam
in
outsl
pop
pusha
mov
jmp
push
pop
stos
loopne
cmpsl
in
or
bound
cmp
and
loope
lods
shlb
dec
and
out
xor
push
bound
bound
aam
mov
mov
into
pop
push
out
scas
mov
xlat
bound
sub
addr16
lods
dec
cltd
mov
mov
sub
mov
iret
fadds
ss
or
in
int
ficoms
arpl
ret
insb
addr16
aam
xor
lahf
enter
adc
or
imul
or
jo
outsb
je
or
aad
sbb
sub
sti
xor
adc
adc
stos
xchg
push
inc
mov
sub
fmulp
out
mov
pop
lahf
push
iret
pop
fmul
mov
sub
in
cmp
dec
repz
sub
push
dec
ror
ret
pop
jl
pop
inc
out
push
mov
adc
pop
mov
mov
or
pop
lock
and
push
jnp
sahf
in
xor
inc
inc
das
mov
and
pop
call
cmp
push
clc
cmp
mov
cli
xor
sahf
xor
lcall
mov
push
mov
pop
fcomip
dec
pop
loop
or
data16
test
aad
mov
inc
test
in
xlat
in
xor
or
testb
add
sarl
test
filds
mov
ret
cs
shrb
xor
pop
cs
dec
in
dec
cmp
mov
dec
push
pop
inc
or
cs
out
mov
sbb
shl
mov
push
cmc
outsl
ja
xchg
stc
stc
adc
mov
shl
in
push
out
add
or
mov
mov
sti
mov
adc
jl
sub
leave
das
ja
pop
ja
stc
push
dec
enter
or
cmp
push
sub
push
sti
loop
pop
loop
pop
pop
push
addr16
rol
mov
sbb
lock
cmp
and
loope
xor
hlt
test
jl
sbb
adc
and
shl
test
daa
addb
je
nop
mov
popa
jne
js
movsb
mov
mov
inc
push
xor
sub
popf
daa
in
and
es
je
dec
out
xor
test
arpl
cs
das
mov
mov
sahf
add
and
push
sbb
ljmpw
pop
popf
pop
sub
jmp
nop
or
das
mov
inc
leave
int
scas
in
cltd
add
jbe
and
lahf
cld
push
sbb
sbb
dec
cmc
xorb
mov
push
mov
add
mov
push
xchg
mov
sub
mov
jp
push
fistpll
push
repz
pop
push
lcall
xlat
mov
rcl
jb
les
mov
call
sub
outsb
repz
xchg
out
ja
ficompl
dec
push
popf
scas
fwait
adc
mov
xchg
popa
int
xor
lods
arpl
sbb
imul
jle
adc
or
jmp
xor
inc
lcall
arpl
rol
xchg
jb
fs
or
je
jp
jnp
dec
insb
cmp
xchg
testl
mov
jb
adc
in
nop
int
shlb
fstps
movsl
mov
sub
mov
push
pop
cmpsb
insl
fwait
lods
cmp
cmpsb
and
and
jmp
lds
lret
test
outsb
out
mov
pop
jne
or
cmp
push
add
pop
insb
dec
jbe
fisttps
sbb
and
or
sub
xchg
xchg
inc
dec
insb
adc
xor
jl
lret
test
jnp
jl
jl
jl
inc
test
in
scas
ja
jnp
aaa
sahf
lea
jmp
sbb
inc
sbb
pop
adc
fadds
in
es
clc
mov
add
mov
add
pop
fimuls
out
sbb
and
dec
int
lahf
js
lock
or
in
std
and
pop
jp
adc
insb
je
push
sub
pop
xchg
jbe
pusha
inc
mov
xchg
loope
push
out
mov
push
es
and
shlb
add
adc
xor
icebp
leave
pop
xor
cld
repnz
notb
cmp
hlt
mov
les
xchg
xchg
sub
dec
sbb
inc
in
sahf
out
or
add
lret
test
out
test
aas
and
test
in
inc
mov
mov
lret
in
add
in
mov
in
lret
sub
lret
cmp
outsl
repnz
cmp
adc
xor
mov
inc
hlt
loope
arpl
mov
adc
mov
xor
and
jbe
inc
xchg
add
jbe
mov
and
pusha
sbb
dec
jle
clc
clc
adc
xchg
or
xor
push
insb
push
sub
ja
cmp
std
pusha
jg
xor
shlb
pop
push
jns
jg
pop
mov
jb
cmc
adc
mov
push
inc
dec
lds
lret
and
rclb
jb
add
mov
scas
call
jmp
loopne
lret
push
mov
outsb
aas
cmp
adc
dec
test
or
push
fadd
stc
pop
cmc
xorps
sub
insb
or
xchg
fsubrl
outsb
xor
or
pusha
pop
push
das
push
sbb
push
aad
sbb
js
jnp
repnz
iret
in
insl
lret
adc
push
iret
fcoms
repz
push
cmp
mov
xor
or
movsb
cmp
in
and
lods
cmp
outsl
push
cltd
pop
push
mov
lods
int
jecxz
push
jmp
or
lods
ja
jecxz
mov
rorl
and
mov
pop
xor
xlat
cmpsl
movsl
mov
fisubrl
outsl
push
imul
sarl
jne
ret
mov
rcrl
jns
ret
popa
faddl
or
lods
ficoms
cmp
or
fisttpll
aaa
outsl
xor
loopne
leave
rclb
cwtl
or
in
outsl
pop
lret
jnp
and
lods
popa
pop
fldz
pop
sar
loopne
outsb
pop
fwait
xchg
popa
pop
mov
and
push
icebp
loopne
out
test
mov
mov
pop
lock
insl
pop
fmuls
mov
movsl
decb
xchg
data16
jo
fstp
iret
ret
mov
imulb
push
mov
sub
lret
iret
sbb
in
inc
mov
das
in
jp
add
scas
dec
ret
fwait
xor
dec
out
sub
xchg
or
pop
push
push
out
jmp
mov
cmp
mov
add
ss
jle
add
jmp
xchg
lcall
mov
sti
out
pop
push
out
mov
rcll
inc
sti
add
movnti
ret
xchg
stos
and
pop
ss
xor
xchg
or
jmp
fs
push
inc
push
mov
scas
or
push
and
mov
jne
mov
mov
cmp
xor
mov
jae
mov
lret
xchg
push
sub
insb
fcmove
sbb
push
lods
imul
lcall
cwtl
push
jp
rcr
mov
das
cmp
inc
daa
cltd
push
dec
stos
roll
sbb
mov
outsb
leave
stc
cli
push
and
pop
int
jecxz
add
and
push
je
push
fcomp
imul
adc
mov
lds
cli
arpl
psubsw
cld
add
and
cmc
ljmp
pop
scas
call
adc
sub
inc
cmc
cmp
xlat
sub
ss
cmpsb
jno
inc
aaa
pop
mov
push
ficoml
aaa
loope
sub
test
leave
js
test
stc
xor
lods
pusha
sbb
jne
push
js
insb
fadds
push
adc
add
lock
dec
mov
jecxz
or
fcmovb
inc
pop
mov
stos
clc
push
adc
outsl
daa
incl
rcrl
pushf
or
fstpl
es
mov
and
mov
lock
test
or
mov
fcomi
sarl
stos
adc
and
in
aad
es
test
xchg
dec
dec
mov
push
loopne
jecxz
xchg
add
sub
clc
repnz
lret
out
ret
adc
mov
shrl
imul
stos
repnz
outsl
cmp
out
icebp
fdivl
jl
outsl
xor
xchg
dec
xor
dec
lds
inc
xchg
cs
mov
gs
push
xor
fimuls
adc
mov
pop
or
mov
inc
inc
fadd
sbb
mov
out
jns
adc
push
fisubs
add
or
je
into
cmp
ss
aam
adc
mov
imul
scas
movsb
fisubrs
mov
dec
test
scas
or
adc
and
sti
xchg
cmp
loop
cmpsl
xor
into
out
sub
lcall
stc
push
push
mov
jbe
out
push
cmpsl
and
pop
push
ret
jl
xor
sub
mov
in
pop
adc
ret
mov
pusha
or
mov
xchg
push
lods
cmc
xor
or
test
pushf
ret
push
xor
ret
stos
stc
mov
int
data16
pop
push
ljmp
cmp
mov
gs
pusha
fsubs
inc
sbb
stos
jmp
data16
std
add
into
and
cmp
lods
pushf
outsl
aam
sub
pop
mov
cltd
je
outsb
jecxz
leave
repnz
mov
pop
xlat
add
cld
sarl
fs
inc
out
les
ss
setno
or
sbb
in
daa
out
push
push
cmp
cmp
es
leave
fmull
add
cmp
fmul
sbb
loop
and
xor
nop
mov
insl
mov
xchg
cmpsl
jnp
xchg
inc
movsb
xlat
or
sub
add
ficompl
test
je
dec
sbb
cs
pop
mov
shl
xor
cmp
and
fst
int
mov
push
data16
sub
fisttpll
lcall
fstpt
shll
cltd
nop
sub
pop
icebp
into
shl
mov
or
or
aas
out
mov
mov
xor
sub
lahf
jmp
cltd
mov
cmp
movsb
jg
sahf
inc
repz
movsb
rclb
add
lds
dec
in
xchg
mov
mov
cmp
repz
jmp
cld
out
cltd
jge
pop
fistl
movsl
lods
jmp
mov
or
xchg
mov
jp
inc
sub
push
inc
jae
inc
ficompl
dec
insl
leave
stc
xlat
cwtl
cmpsb
or
inc
jo
jns,pt
mov
pusha
push
ss
std
dec
inc
jae
daa
aaa
xchg
iret
imul
stos
clc
clc
lods
xchg
dec
inc
stos
adc
mov
sbb
pop
popf
addr16
bound
dec
orb
dec
pop
int
adc
xchg
pop
in
xchg
cmc
ret
pop
cmpb
sub
mov
out
sub
jle
push
or
stos
push
adc
leave
out
pop
es
dec
jnp
dec
sti
sbb
fs
mov
mov
shlb
inc
or
std
fimuls
cmp
fistpll
sbb
stos
push
mov
or
int3
int
hlt
mov
iret
lea
daa
sbb
cmpb
mov
inc
rcrl
push
insl
data16
xchg
lahf
adc
fldt
fldl
jmp
leave
aas
jge
mov
pop
out
push
fs
add
adc
out
xchg
repnz
lahf
xchg
sub
sub
lea
sbb
mov
sub
mov
popf
jecxz
lds
loope
xchg
dec
push
or
jno
xchg
int3
and
mov
mov
sbb
clc
mov
ljmp
es
mov
out
adc
out
push
aam
repnz
or
pop
lock
push
and
cmp
xlat
mov
jge
add
add
push
out
pop
or
jecxz
stos
fidivrl
and
je
mov
sub
inc
sub
and
push
pop
dec
mov
out
insl
xchg
outsl
and
ret
icebp
lcall
push
sub
scas
or
pop
sbb
cmc
adc
jmp
add
ficompl
daa
mov
popa
inc
xchg
jno
sub
loope
and
fcomps
enter
das
pop
js
push
mov
pop
xor
cmpsl
cmp
sbb
outsl
push
push
std
repnz
add
xchg
mov
cli
add
push
xchg
mov
sub
dec
hlt
mov
mov
mov
push
push
cld
je
addl
xchg
xorb
mov
and
fcmovne
lcall
mov
lcall
outsl
jo
mov
jns
mov
xor
clc
lret
and
rorb
arpl
ret
pop
mov
imul
lods
push
xor
jle
lret
in
sarl
xor
xor
imul
in
lods
push
pop
xchg
push
xchg
cmp
sub
sub
jnp
cltd
fists
xor
pop
xor
nop
and
mov
cs
push
loop
loopne
in
jae
xchg
xor
jbe
cs
stos
hlt
mov
mov
jecxz
sahf
popf
xchg
movsb
push
mov
dec
jg
add
adcb
aas
divl
jne
jne
jbe
insb
lea
daa
int
dec
std
mov
cltd
xchg
pushf
mov
dec
mov
fildll
repnz
repnz
mov
insb
xchg
pop
mov
or
mov
mov
pop
cmp
jmp
push
outsl
cmpsl
sub
dec
sti
mov
push
mov
fsubp
mov
mov
xchg
popa
push
cltd
mov
pusha
in
jae
insb
repnz
mov
pop
jns
cmp
imul
enter
dec
roll
addr16
addl
popa
cmc
and
or
enter
jb
aas
pop
imul
xor
js
sub
add
xor
inc
bound
iret
jmp
ss
pop
pop
xchg
imul
aaa
cld
jno
leave
pop
dec
and
movsl
cmp
pop
pop
add
cmp
push
insb
push
mov
mov
push
in
mov
xbegin
xchg
call
daa
sbb
sbbl
pop
aam
adc
jne
cmp
add
addb
popa
sbbb
lock
add
jg
imul
ret
cld
pusha
pop
sbb
ljmp
lcall
push
addr16
xor
outsb
cli
and
outsb
shrb
stc
cmpsb
cld
cwtl
or
lods
and
xchg
int3
xlat
push
shl
inc
out
fimull
dec
pop
sub
outsl
daa
sub
mov
and
or
sub
leave
jb
and
jle
push
test
inc
xor
loop
out
cmc
cmp
std
stc
jge
cmp
dec
sbb
xchg
pop
cmp
mov
fisttpll
or
es
test
sub
movsb
mov
add
or
repz
mov
xchg
repz
adc
outsb
cmc
sub
adc
imul
mov
jle
les
sub
pop
imul
loope
dec
out
and
les
push
jae
jecxz
mov
sbb
sar
xor
lods
scas
jge
mov
pop
jbe
xchg
sub
and
mov
int3
out
rclb
ds
and
lcall
out
or
les
arpl
int
divl
push
dec
imul
mov
push
jno
ret
cmp
mov
jmp
push
push
jmp
insl
inc
lds
imul
addr16
adc
cwtl
or
sbb
xor
in
enter
mov
dec
lods
jecxz
adc
push
mov
adc
stc
pop
sbb
les
loope
mov
bound
movsl
insl
repz
cmpl
insb
inc
in
jl
imul
or
stc
push
bound
loopne
mov
sti
cmp
mov
or
dec
adcl
testb
inc
lret
les
repz
sbb
aas
test
or
sti
int
mov
dec
shll
in
lds
xchg
jg
ljmp
imul
sahf
imul
pop
leave
shlb
push
mov
sbb
outsl
or
mov
and
stos
jne
inc
and
xorl
enter
in
imul
aad
xchg
shlb
out
fs
lods
rcrl
sbb
adc
into
dec
ds
pop
xor
jnp
mov
ret
push
inc
gs
sahf
adc
jns
pop
nop
jae
cwtl
mov
cmp
popa
push
push
divb
aas
cwtl
test
mov
mov
pop
push
adc
sub
dec
xchg
cmp
sarb
inc
dec
xchg
xor
int
mov
mov
jg
cmp
inc
in
or
call
fbld
ret
sbb
outsb
rorl
popf
lret
jl
or
lret
xchg
mov
bound
mov
push
clc
fcomps
inc
data16
orl
xchg
add
ret
jbe
insb
aaa
sbb
in
push
insl
int3
inc
jne
andl
loop
cmpsb
cmc
dec
out
sbb
fstpl
jg
jl
add
imul
rorb
outsl
lcall
subl
inc
inc
xor
xor
sub
add
outsl
pop
es
or
mov
sbb
fisubs
ja
xor
rcrl
fwait
adc
dec
mov
jns
push
cmp
push
cmc
add
insl
lret
xor
cmp
hlt
loopne
xchg
or
lret
outsb
mov
xchg
push
sub
and
xor
clc
push
inc
mov
ljmp
stc
pop
stc
je
repz
inc
cwtl
imul
jns
cmpsb
push
and
cmp
in
mov
fwait
adc
scas
dec
mov
mov
jo
add
mov
aam
push
stc
push
xchg
mov
jp
addr16
sbb
push
ja
sub
test
mov
inc
in
push
arpl
jnp
aam
mov
repnz
pop
push
daa
sbb
xchg
add
imul
jl
mov
ficoml
stc
dec
xlat
mov
mov
movsb
lcall
ret
daa
sub
adc
xor
xchg
mov
mov
push
mov
outsb
test
xchg
stos
cmpb
std
push
shrb
mov
xchg
lea
icebp
popa
add
inc
add
jmp
aas
and
xor
mov
in
or
mov
adcb
push
inc
rol
dec
call
mov
stc
aas
cs
dec
into
adc
cmp
shrb
popa
pop
sar
xchg
inc
leave
out
shrl
outsb
mov
push
cwtl
cmp
jp
test
inc
sub
mov
stc
int3
xlat
addr16
pop
stos
fidivrs
loope
inc
mov
iret
jl
or
int3
pop
inc
arpl
data16
jl
rorl
mov
das
add
loopne
lret
pusha
mov
push
roll
ss
call
sti
sub
popa
out
cmp
cmpsb
jg
and
xchg
insb
jns
cli
xor
test
push
sub
pop
in
xchg
cltd
inc
inc
bound
jg
cmpsl
jb
cld
push
xchg
in
ret
lea
inc
pop
out
cmpsl
dec
push
cltd
mov
ret
sub
sbb
jecxz
into
or
xorb
scas
mov
xchg
push
fisttpll
mov
pop
lcall
mov
add
fstps
mov
inc
jno
loopne
push
inc
call
popf
imul
bound
in
in
jne
mov
push
sub
xor
insl
cmpsb
sub
rclb
pop
and
mov
fadds
int3
push
nop
je
popa
push
loopne
jg
aaa
xor
loope
sub
and
jo
rcr
push
lds
pusha
jge
or
nop
into
orb
les
dec
mov
sbb
mov
fisttpll
push
xchg
push
pop
and
jp
fsubp
test
sub
xchg
fsub
idiv
outsb
sahf
jnp
int3
loopne
mov
and
mov
test
pop
xlat
movsb
scas
iret
pop
aaa
xchg
addb
xchg
mov
mov
push
jmp
imul
push
mov
out
jp
ja
gs
test
xor
out
lret
xor
and
and
mov
push
cmp
mov
es
mov
lret
cmpb
test
or
sub
das
scas
lret
push
cmp
and
push
fwait
pop
lret
or
imul
sarb
mov
lock
jns
pop
mov
test
add
mov
or
mov
adc
dec
popa
xor
jg
fs
sahf
je
xor
dec
sub
push
inc
loop
inc
inc
lock
nop
fwait
cs
jae
insb
xchg
mov
lock
pushf
sbb
js
jo
mov
add
ss
movsb
je
lret
mov
sub
sbb
out
es
loop
notb
mov
popl
cmp
xorl
repz
xchg
ljmp
rclb
mov
test
xchg
sarl
daa
cmpsl
jmp
into
mov
fwait
insb
add
loop
es
xchg
test
movsl
push
cltd
adc
sbb
insl
nop
shlb
add
insl
jo
fsubl
cld
sbb
jecxz
add
sahf
pop
cmp
rclb
addb
jnp
pop
add
in
mov
ss
stc
add
mov
mov
inc
sub
cmp
out
push
loop
repnz
cmc
sbb
jecxz
sbb
sti
cli
sub
push
into
cs
mov
inc
movsl
dec
into
xchg
inc
lahf
repnz
lods
and
inc
pusha
jo
imul
jo
mov
push
jo
mov
fwait
xchg
dec
in
add
imul
in
inc
lds
ljmp
dec
mov
loopne
dec
clc
mov
stos
shlb
lods
lcall
clc
add
rolb
adc
mov
adc
pop
or
inc
cs
jo
and
pushf
or
xor
jo
sub
stos
xor
mov
dec
rclb
cmpsb
dec
lcall
or
cs
inc
jge
and
imul
hlt
cmp
popf
stos
or
popa
add
iret
mov
imull
push
lds
sub
int
mov
hlt
jnp
loop
sbb
sbb
xor
fcmovbe
pop
imul
push
ret
xchg
dec
sub
les
jne
or
lods
mov
in
jne
push
ja
add
xchg
dec
push
cwtl
jle
jo
xchg
jns
sahf
jae
jne
loopne
mov
xchg
mov
lock
nop
and
lds
pusha
inc
jecxz
je
insb
pop
roll
adc
and
add
lods
push
aaa
pop
mov
xor
or
rclb
test
sti
es
cmovne
mov
push
sub
in
jg
cli
cmp
repnz
jg
sbb
lcall
scas
stos
xchg
mov
sbb
leave
inc
loop
mov
push
add
out
fcoms
sahf
adcb
data16
sbb
mov
and
icebp
out
jecxz
stc
std
ret
mov
outsl
mov
cmc
sub
js
fstpt
mov
rep
sti
xchg
ljmp
scas
cmp
andb
jg
dec
jl
or
dec
ljmp
mov
pop
test
or
lds
cmp
movsl
mov
fwait
lret
outsb
dec
pop
inc
xor
mov
mov
out
popa
cmp
cmp
add
xor
xlat
pop
and
mov
dec
mov
mov
in
mov
inc
repz
xchg
inc
xchg
fnsave
lret
pop
inc
nop
adc
imul
mov
mov
rol
decl
and
xchg
scas
bnd
sub
jno
loopne
insb
insb
lretw
pop
pop
xor
push
or
cmp
sub
xchg
ss
dec
pop
xor
mov
mov
xor
inc
cs
out
xor
dec
pushl
pop
inc
leave
nop
pop
xor
jge
mov
sarl
iret
scas
inc
imul
dec
imul
pop
pop
fisubs
xchg
mov
out
xchg
dec
or
xor
mov
jle
inc
hlt
or
mov
and
adc
mov
in
push
popa
rcrb
popf
push
or
fstps
test
out
lock
sbb
aas
push
ljmp
xchg
or
and
scas
iret
movsl
mov
popf
and
xchg
push
mov
jg
insb
jae
repz
imul
push
mov
repz
jg
inc
aas
adc
int3
loopne
ror
lret
fcomps
sub
mov
arpl
test
jne
cmp
pop
add
pop
sbb
rolb
dec
test
mov
fnstenv
mov
arpl
mov
adc
js
shlb
dec
lock
lea
inc
cmp
lock
aas
fdivrp
xchg
addb
test
ds
decb
push
xchg
outsb
movsl
xchg
or
xor
lcall
or
in
movsl
in
mov
adc
mov
daa
dec
scas
xor
cs
es
jo
sub
sub
pop
aaa
insb
arpl
push
cmpb
nop
xchg
outsb
mov
adc
inc
neg
cmp
mov
dec
enter
xchg
imul
xor
jp
xor
add
data16
lret
fadd
dec
mov
in
mov
ret
sbb
pop
mov
dec
inc
inc
xchg
mov
cmp
ja
mov
cmpsb
adc
jge
jg
sub
unpckhps
lcall
addr16
mov
lret
out
dec
jo
scas
adc
xchg
out
imul
and
loop
sti
lahf
fdivrl
fists
sub
mov
pop
xor
rolb
sbb
mov
lcall
hlt
fdivs
sbb
imul
push
roll
popf
inc
js
loop
cwtl
inc
mov
or
jo
mov
jnp
ljmp
adc
ljmp
sbb
loopne
and
addr16
add
mov
jbe
lcall
movsb
jmp
xor
or
or
sbb
mov
sub
cmp
mov
lret
fadd
adc
int3
sub
lea
sbb
divl
xchg
xchg
push
inc
das
lret
mov
push
lock
mov
mov
dec
dec
add
sub
fistps
xlat
xor
mov
rclb
push
mov
lods
fistps
in
and
jae
or
cwtl
add
sti
fildl
mov
push
mov
lret
add
les
hlt
cmp
lahf
lcall
sahf
movsl
sbb
daa
add
adc
inc
and
js
or
cmpsb
ljmp
cmpsl
outsl
test
xchg
jne
out
clc
jns
pop
sbbl
or
cmp
xorb
xchg
popa
ret
or
xlat
mov
or
push
loope
movsb
sbb
mov
mov
sub
fucomip
andb
sub
cmc
icebp
mov
cmp
pop
sbb
loope
and
out
pop
xor
js
popf
movsl
add
mov
cmp
hlt
inc
and
add
repnz
mov
mov
and
mov
sahf
mov
or
in
aam
rorl
rol
jmp
test
cmp
shl
gs
pop
std
cmpl
sub
int
add
mov
hlt
je
sti
mov
aad
inc
fcmovbe
cmpsl
fcompl
push
clc
mov
fcmovu
xor
popl
pushf
imul
insl
xchg
or
mov
mov
cmp
call
inc
mov
into
ljmp
lods
in
mov
insb
in
mov
jle
pop
ss
mov
rorb
test
sbb
push
ljmp
xchg
mov
mov
and
adc
push
fidivrl
inc
jae
sar
push
and
cwtl
scas
add
xchg
push
xor
in
xchg
out
popf
cmp
pop
and
xchg
inc
out
mov
mov
sahf
cmpsl
fnstsw
cmpsb
sbbb
out
add
sbbb
in
je
jmp
or
movl
or
dec
xchg
dec
arpl
jns
mov
lret
negl
xor
fwait
iret
loopew
jnp
dec
push
testb
xchg
mov
dec
pop
mov
lea
outsl
dec
or
inc
popa
xchg
cmp
inc
in
test
fst
in
outsb
and
pop
xchg
and
xchg
xor
push
sub
sbb
lods
dec
xchg
lahf
xchg
fwait
push
enter
cmp
xor
iret
stos
add
scas
sub
out
into
cmpsl
xchg
rcl
pavgw
xchg
pushf
mov
xchg
insl
mov
adc
mov
daa
lods
mov
inc
inc
push
test
ljmp
cmp
mov
loope
fwait
out
jmp
and
mov
dec
adc
je
inc
imul
cmp
lcall
imul
in
in
jmp
sub
xor
xor
pushf
add
fsubp
jp
rcrl
ret
push
lcall
jnp
lock
arpl
aam
lock
adc
mov
dec
pop
loope
inc
bound
jbe
ud2
nop
test
pop
xor
cld
cmp
xchg
xchg
cmp
inc
mov
es
scas
or
stos
xor
aas
insb
fdivrs
scas
cmc
pop
shll
inc
sub
sub
xabort
push
mov
stos
push
sub
mov
ljmp
mov
xor
clc
outsb
mov
dec
test
loope
jle
dec
cmpsb
popf
pop
pop
push
popf
add
jmp
xlat
stc
je
push
outsb
ficompl
xchg
outsb
jne
out
and
int
dec
mov
ja
ss
loope
adc
into
jl
sbb
movsl
sbb
movsl
push
shl
fstps
fsubrs
scas
push
movsb
mov
jbe
xchg
xorb
mov
mov
aam
repnz
add
popf
nop
lret
cmpsb
fsin
test
sbb
out
pop
mov
in
push
xor
and
das
push
push
mov
mov
xchg
cmp
in
inc
mov
jo
ret
clc
loop
add
shl
iret
jb
in
int
mov
ljmp
xor
sbb
outsl
into
pop
mov
incl
sub
sbb
mov
sbb
aaa
andl
fdivrl
icebp
sub
fs
dec
lahf
pop
cmp
push
add
add
test
in
xchg
adc
lret
lock
cmp
mov
xchg
out
xor
imul
in
loopne
pop
cltd
in
add
and
jnp
cli
add
repnz
cmpsl
sti
out
inc
into
cmp
rol
xchg
sub
popa
xor
les
lcall
je
xchg
push
int3
rolb
call
mov
pop
imul
sbb
insl
fcmovne
pop
idivb
add
sahf
dec
xchg
pop
out
imul
jg
and
xchg
gs
sub
insb
adc
cmpsl
push
lods
adc
pop
cmp
call
and
push
call
pop
sbb
pop
les
sbb
mov
mov
imul
fdivrl
jae
outsl
ret
lcall
push
aam
dec
mov
or
stos
test
cs
enter
loopne
sbb
adc
mov
jnp
shlb
shlb
pop
gs
fwait
sub
adc
out
hlt
inc
fcomip
or
mov
fidivrl
into
lret
cld
ljmp
fucomip
push
xor
sub
or
mov
test
ret
mov
pop
rcll
sbb
test
push
pushl
pop
mov
pop
xorb
sbb
imul
roll
icebp
je
or
roll
jns
pop
fisubrl
jae
adc
mov
aam
inc
dec
mov
push
xchg
lock
repz
inc
xchg
and
aam
cs
adc
in
cmpsb
jo
lahf
mov
fdivl
pushf
pop
scas
mov
sub
cmpsl
leave
jnp
dec
adc
adc
lods
js
bound
rclb
ret
repz
push
es
pop
cmp
outsl
or
lahf
or
js
std
insb
aad
xchg
push
insb
test
lods
scas
xchg
and
int3
or
enter
mov
pop
jg
repnz
cltd
les
inc
dec
sub
scas
adc
sbb
xchg
xchg
rcrb
lea
add
and
scas
sbb
dec
push
xor
in
push
outsb
hlt
int
mov
fsts
test
mov
inc
or
arpl
sbb
sub
cwtl
jmp
push
scas
sbb
sub
and
bound
outsl
add
xchg
imul
test
jl
mov
mov
and
inc
cmc
int
and
xor
imul
std
lods
push
jae
jmp
data16
loop
and
repz
in
sbb
mov
add
mov
iret
andl
bsf
in
mov
xchg
adc
insl
lds
jno
lds
mov
cmp
idiv
mov
fwait
bnd
xchg
jnp
sub
jmp
in
mov
pop
je
push
xchg
ret
inc
mov
push
outsb
cwtl
adc
mov
cmp
add
imul
xor
xlat
push
icebp
push
ljmp
pop
or
decb
je
lret
cmpsb
daa
dec
shrb
pop
or
insl
mov
push
scas
mov
jnp
lds
inc
pop
out
jne
pop
push
lods
push
adc
mov
jecxz
adc
aas
scas
cmp
in
into
adc
ja
mov
ds
ja
stos
pushf
mov
popf
into
dec
cmpb
dec
add
fcoms
shll
sti
mov
outsb
add
xor
xor
sub
cmp
jp
adc
ljmp
and
icebp
pop
jno
lcall
mov
dec
xchg
sbbl
hlt
xor
int
pop
aad
mov
loope
push
outsb
sbb
addr16
mov
mov
adc
ret
cltd
push
std
pop
fsubrs
mov
lahf
push
nop
outsb
inc
mov
test
mov
xor
jmp
mov
add
pop
dec
in
jmp
loope
rorl
fmuls
pop
adc
inc
mov
stos
shr
dec
xor
leave
scas
cmp
xor
jle
sbbb
xchg
add
mov
out
lret
dec
mov
inc
jmp
stc
bound
push
adc
fstps
jmp
cmp
lock
cmpsl
add
pop
loopne
test
ror
or
hlt
mov
fwait
test
jmp
jmp
imul
xor
xchg
int
adc
outsb
sti
arpl
pop
aaa
nop
dec
lea
ss
mov
sub
pop
enter
mov
call
xor
nop
push
push
cwtl
push
daa
adc
shll
dec
aaa
mov
jle
mov
and
mov
repz
mov
mov
sar
icebp
insl
scas
out
pop
cmp
data16
gs
fdivrs
sub
push
cmp
daa
sub
je
jecxz
fbld
fsub
cli
and
or
int3
enter
add
pop
sbb
por
cmp
xor
adc
sahf
imul
xchg
and
imull
out
jbe
pop
add
mov
xchg
rclb
sbb
lahf
xchg
je
bound
push
clc
add
push
pop
and
xchg
outsl
jle
cmpsb
jae
iret
test
test
xchg
add
adc
lcall
adc
or
imul
inc
enter
les
adc
pushf
out
xchg
fcomps
sahf
push
cs
and
in
les
mov
rcrb
jl
ficoml
sbb
call
dec
aaa
daa
ret
jp
xchg
xchg
jecxz
das
outsl
dec
xor
imul
jne
xor
cmp
cs
jne
dec
imul
popa
inc
and
test
mov
jl
scas
sub
push
test
cmpsl
imul
or
mov
mov
push
dec
mov
inc
mov
xor
jbe
cmp
and
aas
pop
leave
cmc
daa
sub
or
inc
orb
insb
daa
lahf
add
into
sbb
inc
mov
aaa
jmp
mov
jbe
jmp
lods
pop
in
lods
mov
sti
lret
xchg
gs
mov
cmp
jno
push
dec
add
dec
push
xchg
add
dec
pop
and
mov
inc
mov
out
jnp
cld
xlat
push
add
xchg
push
aaa
mov
imul
dec
fnstcw
fdivp
adc
fnstcw
les
or
mov
sbb
pop
in
xchg
dec
fdiv
or
xor
fistpl
or
inc
mov
lret
jg
mov
repz
xor
mov
xchg
out
xchg
pop
or
or
jge
add
mov
movsl
orb
dec
icebp
cmpsl
scas
pop
movsl
push
adc
cmp
leave
jne
aas
in
rcrl
add
jb
stos
cmp
cwtl
mov
xor
cmp
sbb
xchg
cli
sbb
call
aaa
out
andb
into
push
and
mov
jnp
stos
push
inc
lret
sti
mov
jbe
jns
loopne
sub
lock
lock
notb
jp
push
mov
repnz
pop
lcall
jno
es
jae
adc
push
and
add
in
mov
xchg
fisubrl
out
xchg
imul
divl
push
xor
outsb
and
mov
xor
adc
inc
mov
sub
test
push
in
rcll
rclb
dec
jle
lods
pushf
push
xlat
insb
or
cmp
add
ja
aad
dec
mov
jmp
aaa
jmp
sbb
insl
pusha
push
aaa
mov
or
cmpsb
repnz
cmp
pop
scas
outsb
mov
ret
cwtl
lahf
daa
in
enter
fistpl
stos
mov
stos
dec
mov
cmp
inc
test
pop
mov
sub
out
sbb
ficoms
loope
or
mov
jge
arpl
cmpsl
add
cmp
int
inc
push
add
rclb
xchg
addl
mov
jns
sub
inc
cmpl
mov
and
into
sar
adc
enter
lahf
or
insl
adc
fsubrl
loopne
pushf
test
sbb
out
xor
imul
xchg
and
mov
pusha
pop
xchg
push
mov
lea
aas
adc
inc
lods
out
xchg
pop
inc
cltd
inc
imulb
push
adc
mov
fldcw
dec
pushf
out
adcb
loop
mov
popa
lret
jle
rcl
test
out
or
cmp
lea
push
xor
inc
mov
add
scas
mov
out
into
jmp
and
stos
jmp
rolb
iret
scas
arpl
ret
and
shll
jbe,pn
adc
jbe
pop
fisttpll
add
pop
stos
loop
mov
sbb
fstpt
lahf
mov
xchg
pushf
rcll
gs
repnz
jae
movsb
data16
cmp
jp
xchg
pop
enter
lcall
pop
mov
adc
add
dec
enter
fldenv
out
and
sbb
les
jbe
lcall
fsubs
sub
outsl
sbb
jecxz
cmp
mov
testl
ja
add
cltd
mov
jae
adc
push
jge
xchg
test
inc
das
out
jns
push
call
gs
push
pop
faddl
out
jge
inc
jmp
mov
push
xor
repnz
xchg
cs
xchg
push
std
xor
gs
mov
xor
std
xchg
lret
test
mov
mov
cltd
test
dec
gs
test
push
push
or
inc
cmp
sub
testb
cmpsb
cmc
dec
inc
xchg
scas
add
out
xchg
adc
pop
pop
pushf
not
lahf
jmp
push
mov
cmpb
movb
inc
mov
arpl
jns
xchg
mov
add
cmc
aam
add
mov
popa
xor
cmpsl
xchg
sbb
loopne
jle
test
cmp
xor
lock
xchg
imul
xchg
faddl
data16
and
cwtl
insl
popa
mov
lcall
inc
lahf
cli
jb
jp
and
sub
xor
dec
lahf
jle
fs
inc
mov
cmp
cmc
dec
lahf
into
cmp
sbb
xchg
scas
outsb
inc
dec
pop
push
jnp
bound
dec
cmp
and
lods
sub
sbb
or
inc
xor
sub
das
add
test
jb
jno
mov
cld
aas
jne
test
push
cwtl
sbb
movsl
or
data16
pop
inc
out
jo
data16
jle
adc
mov
mov
xor
sbb
icebp
inc
jp
xchg
adc
push
push
aad
jo
imul
dec
mov
bound
insl
push
xor
sbb
sbb
inc
lock
jb
rolb
pop
and
mov
in
xor
cmpsb
push
test
push
mov
jnp
popfw
pop
in
pop
shrl
pop
pop
dec
add
mov
fs
dec
das
js
jle
or
xor
int3
cmc
mov
aas
lret
lods
cmpsb
cmp
popf
mov
and
out
rorb
inc
aam
mov
jbe
cmpsb
jecxz
shl
adc
imul
adc
testl
cmpsl
pop
xor
dec
lret
ja
and
jmp
out
mov
inc
ficoms
xor
sub
fdivrl
int3
lds
insl
lgdtl
dec
in
sub
bnd
les
loop
push
dec
add
adc
rcrl
jb
push
lret
lock
rol
adc
xor
jnp
add
bswap
aad
sub
mov
fsubrl
cmp
or
daa
xor
jo
cmp
inc
lret
mov
mov
pop
dec
mov
adc
popa
lods
faddp
inc
xor
lds
mov
shl
enter
xchg
testl
mov
in
push
mov
cli
ljmp
cmp
push
sub
adc
rcrb
sbb
dec
je
or
push
mov
fisubs
loope
sbb
or
aad
imul
stos
inc
nop
inc
notb
pop
mov
xor
cmp
outsb
fldl
lcall
aaa
imul
or
scas
lea
add
add
in
aaa
or
sbb
pusha
adc
jno
cltd
mov
jmp
js
xor
cli
stos
mov
insl
imul
insb
mov
rclb
cmp
loopne
aam
clc
adc
fdivrs
loope
aas
in
mov
pusha
mov
test
push
sarb
mov
sti
pop
mov
cmp
pop
in
pop
mov
das
dec
mov
insb
or
aam
inc
xchg
sarl
cwtl
xlat
push
mov
jae
cld
jmp
push
mov
dec
das
lea
rcrb
mov
mov
push
movsb
lea
xor
insl
xor
fwait
bound
pop
sti
push
add
xor
mov
dec
sbb
in
adc
sub
jns
mov
loopne
in
cmp
test
lcall
or
add
pop
mov
lret
aaa
in
or
lcall
test
pushf
lret
ljmp
cmpsb
pop
out
mov
xor
sbb
dec
dec
mov
xchg
loopne
mov
hlt
fidivl
and
pop
xor
rol
int
rcl
hlt
fwait
icebp
andb
jg
in
jge
push
loope
icebp
sbb
sub
mov
das
mov
push
xchg
adc
jne
lahf
popa
jmp
pop
pop
push
add
jns
dec
jp
inc
pop
jecxz
jecxz
inc
lods
test
sub
xor
lods
add
popa
or
lret
push
cli
dec
cmpl
lret
xchg
push
rclb
cmpsb
jno
sub
dec
or
seto
cmp
rolb
cmp
add
adc
hlt
mov
push
mov
std
mov
mov
jmp
mov
mov
push
nop
testb
and
pop
adc
xor
popa
push
sub
lret
sbb
and
cmp
outsl
int
inc
jo
nop
sbbl
dec
or
std
fs
daa
mov
je
int
mov
adc
lods
adc
cmp
daa
sbb
fistpll
push
mov
mov
and
jne
dec
ss
roll
inc
jae
mov
or
mov
dec
pop
pop
sub
mov
mov
aas
push
daa
xor
cmp
jg
sbb
data16
loope
adc
adc
adcb
fst
push
xor
adc
push
sub
out
int3
xchg
rcrl
out
xor
daa
fdivl
popa
inc
out
outsb
jbe
fcmovbe
mov
ljmp
pop
and
xor
mov
adc
inc
sub
xchg
pushf
test
adcl
inc
sub
in
sub
or
xchg
xchg
or
or
add
sub
push
mov
add
xorb
ljmp
jns
call
sub
jb
insl
sub
pop
or
imulb
push
add
rcll
jb
mov
pop
adc
sub
je
movsb
cmp
add
adcl
je
jae
xor
adc
push
ret
push
sbbb
cltd
notb
lret
outsb
arpl
and
loopne
xchg
lea
mov
jae
in
fcmovnbe
sahf
add
xchg
in
lahf
add
cltd
xchg
test
hlt
push
push
rclb
cld
mov
enter
imul
jnp
addl
nop
ds
test
pop
enter
test
cwtl
outsl
mov
or
push
pop
inc
aas
outsl
sub
push
out
xor
fwait
pop
push
sbb
xorl
sub
rclb
daa
in
mov
test
shlb
mov
xchg
xor
push
stos
sbb
and
bound
in
push
pop
and
push
dec
xchg
jnp
adc
xor
mov
mov
jecxz
fadd
sbb
mov
push
cmc
xlat
das
cs
xor
mov
aaa
lret
and
cmpsb
pop
dec
fstl
dec
sub
pop
mov
cmp
add
lcall
bound
lods
fwait
ss
js
xchg
ret
cmp
push
adc
imull
lcall
add
outsl
adc
notl
out
lret
sub
mov
jae
adc
movsl
push
pop
and
mov
cmpsb
not
fldcw
mov
jmp
in
aaa
cmp
mov
jp
and
jl
negl
and
pop
fmull
scas
ljmp
mov
sbb
xchg
and
hlt
mov
scas
and
repz
loop
xorl
inc
mov
or
and
cmp
pop
cli
in
pop
add
scas
adc
int3
hlt
test
jecxz
xchg
test
mov
xchg
sbb
or
jp
pop
adcb
movsb
push
fdivs
add
jp
jb
mov
dec
fmull
jbe
and
dec
mov
mov
cli
aaa
sub
out
fldenv
pushf
lods
inc
sbbl
addl
push
push
test
xchg
adc
orb
dec
testb
pop
test
adc
rcrb
adc
push
mov
lods
cmp
inc
xchg
sarl
mov
cmpsl
pop
cmpsl
jbe
fmull
gs
out
loopne
das
jp
in
mov
push
mov
dec
push
jge
xchg
mov
xchg
and
js
lods
ja
push
mov
mov
into
mov
sbb
ja
test
fbld
jg
popf
arpl
xor
pop
je
sub
xchg
mov
xchg
shrb
shlb
mov
fiadds
in
mov
popl
add
jle
mov
pop
int3
sbb
xor
push
lahf
aad
mov
pop
fistps
clc
mov
push
out
into
sub
jb
mov
cmpsb
cmp
call
test
in
or
cwtl
mov
inc
bound
dec
mov
outsl
pop
add
and
pop
das
and
push
pop
test
inc
fs
mov
mov
out
and
push
fcoml
aas
cmc
xchg
es
testb
sahf
jmp
add
in
cmp
adc
fmul
mov
dec
test
add
cmc
pop
sub
ret
loope
adc
mov
fldl
add
inc
das
and
rclb
sbb
pop
out
jno
pop
jl
fs
or
out
sbb
iret
xor
flds
outsb
fistpl
out
pop
pop
arpl
lods
add
data16
gs
xchg
cmp
test
ds
imul
adc
sbb
pop
movsl
pop
lock
adc
mov
imull
cwtl
insb
push
and
add
decb
sahf
ds
sbb
mov
add
pop
enter
aas
cwtl
push
and
cmp
jp
push
mov
in
adc
cld
sub
ret
lcall
dec
dec
std
testb
push
lock
std
jmp
stos
test
mov
scas
scas
adc
mov
cmpsl
negb
leave
ffree
aas
ss
dec
sahf
filds
sub
add
mov
lcall
cmp
push
rcrl
pop
es
pop
arpl
inc
scas
pop
pop
mov
je
imul
add
jge
mov
call
iret
mov
popa
xchg
mov
cltd
das
adcl
mov
jbe
in
hlt
std
jns
movsb
adc
scas
sub
in
je
inc
enter
pushf
mov
insb
fwait
unpckhps
dec
dec
pop
push
addr16
jnp
mov
adc
jge
xchg
loopne
ja
mov
lds
xchg
loopne
lcall
xchg
jae
repnz
rcrb
loope
jno
shlb
mov
mov
pop
mov
push
adc
imul
cmp
sub
dec
push
xchg
popa
cs
or
mov
jl
daa
ss
mov
sbb
aad
jo
mov
daa
push
and
mov
adc
push
adc
stos
mov
pusha
adc
sbb
outsb
shlb
mov
outsl
cmpsl
fimuls
sub
fldcw
call
lock
adc
outsb
movsl
les
leave
add
loop
stos
out
addr16
xlat
sti
sbb
in
sbb
mov
inc
pop
adc
ljmp
sub
inc
shll
add
sbb
mov
dec
loopne
xchg
orb
inc
jb
mov
sarb
in
pop
sbb
mov
loopne
sbb
fsubs
xor
out
and
aam
jno
xor
loop
addl
pushf
pop
clc
loopne
jno
push
je
or
push
call
cli
mov
icebp
outsl
clc
inc
sbb
lcall
jg
push
pusha
push
ficompl
xchg
jo
add
ss
cld
aad
dec
lcall
pusha
lret
call
shl
pop
sub
aas
je
xor
lea
xor
popf
aaa
das
imul
jae
cmc
jecxz
into
fnstsw
mov
sub
aam
cwtl
out
in
xchg
nop
repz
adc
mov
stc
aad
daa
enter
add
out
cmp
movsl
mov
inc
add
movsl
dec
mov
inc
adc
inc
jle
call
lcall
sti
cmp
jbe
jmp
jae
stos
mov
or
adc
scas
push
clc
insb
adc
push
or
das
mov
add
xchg
inc
adc
aas
ss
imul
sbb
bound
popf
pop
mov
or
fwait
outsl
inc
test
xlat
aam
stc
mov
mov
jmp
cmp
addl
popf
sub
pop
mov
and
pop
push
xchg
lods
push
aas
mov
mov
add
xor
scas
clc
pop
push
jnp
and
xchg
pushf
mov
int3
lods
pop
imulb
and
rol
mov
out
push
imul
xor
in
cmpsl
xor
pop
fistl
xor
and
bound
fwait
cmpsb
jp
aad
lods
xor
sub
sub
idivb
dec
add
inc
jbe
arpl
sbb
into
dec
cmc
fcompl
sarl
push
lret
std
cmp
adc
adc
add
std
xchg
cs
in
mov
shll
xor
inc
add
bswap
lods
mov
xchg
dec
int
aas
cli
pop
jp
pop
adc
push
cli
test
std
fisttpll
mov
mov
inc
rorl
and
xor
mov
test
and
jmp
push
dec
mov
mov
cs
xlat
mov
and
or
cmp
out
fdivl
lea
pop
jbe
incl
lods
jl
js
lahf
movsl
push
xchg
movsb
cmp
jbe
and
xchg
shlb
xlat
sub
xchg
hlt
lock
xor
insb
js
mov
fcmovnb
shll
mov
mov
cmp
mov
lret
in
mov
mov
addr16
xchg
sub
in
xor
or
cmp
and
push
cmp
adc
mov
in
sub
pop
xor
hlt
iret
jg
xchg
sbb
pop
test
dec
mov
pushf
dec
sahf
adc
aad
and
je
adc
shr
shll
roll
inc
cmpsl
pop
shll
std
mov
in
ret
loop
sbb
lcall
mov
xchg
cltd
xchg
stos
mov
stos
repz
dec
cmp
push
or
xchg
add
and
xchg
dec
xchg
cmpsb
fwait
movsl
repz
push
cmp
loope
std
lea
jge
decl
iret
scas
push
lods
add
insb
inc
aaa
jg
cli
pushf
fsubrp
sbb
sub
insb
adc
lcall
mov
push
leave
push
sub
sbb
adc
inc
or
mov
xchg
aas
sbb
bound
add
outsl
adc
test
push
xchg
loopne
push
sub
fistpll
sbb
stos
movsl
mov
out
pushf
sub
gs
out
in
repz
es
sbb
xchg
outsb
jle
shrl
in
js
xor
xchg
push
arpl
adc
pop
cmp
mov
fisubrs
daa
fsubrs
sbb
push
add
rcll
sub
lret
add
jmp
cs
jg
daa
inc
in
mov
orb
jge
jbe
ljmp
xlat
jae
push
cmp
lret
push
ret
fdivl
push
jns
call
jmp
xchg
js
mov
sub
arpl
sub
scas
in
push
andl
and
divb
adc
fsubl
test
jmp
sub
sbb
stos
scas
mov
not
popf
stc
mov
clc
pop
ljmp
loop
repnz
xchg
pop
test
scas
pop
loope
fistps
into
push
cltd
gs
scas
and
lods
cmpsb
lods
adc
xchg
fstl
inc
sti
icebp
loop
jae
test
sub
inc
shlb
cmp
cmp
and
int
xor
jl
xchg
push
xchg
int3
outsb
lds
in
sbb
xchg
pop
fildll
cmpsb
mov
pop
sbb
lock
cmp
mov
sbb
pop
cltd
leave
std
add
sti
xor
add
je
incb
ja
pop
cwtl
in
movsl
xor
jnp
cmpl
cld
int
scas
pop
loop
mov
orl
mov
int
scas
insl
rclb
mov
clc
sub
pop
mov
flds
inc
cli
add
pop
sub
xchg
and
cmc
jns
mov
mov
or
xor
jne
loopne
add
cmp
nop
bound
push
fcomps
int
jl
pop
xor
hlt
pop
pop
shlb
fsubrp
xchg
mov
nop
repnz
ds
dec
mov
into
cmp
std
cmc
pop
mov
lret
mov
add
fsubl
xchg
int3
mov
mov
int
pop
popf
sub
ja
mov
mov
std
sub
add
cwtl
stos
mov
sbb
jp
cmp
scas
and
adc
adc
sub
mov
cmp
push
and
mulb
je
cmp
push
gs
dec
push
sbb
adc
je
mov
mov
mov
aam
push
mov
sbb
dec
out
into
cmp
popf
mov
mov
mov
loop
push
adc
rorb
inc
lret
and
xchg
cmp
js
sti
fiadds
fmulp
pop
jp
xor
push
add
push
pop
jecxz
sub
xor
mov
cltd
dec
mov
roll
enter
xor
inc
jg
cmc
mov
test
lahf
ret
jbe
add
xchg
fnstsw
clc
sahf
fsubs
ret
push
imul
ret
mov
andps
sbb
adc
push
pop
jae
xlat
inc
pop
stos
jle
repz
dec
outsl
ljmp
test
dec
and
xor
stc
dec
mov
mov
jmp
jno
push
cmp
pop
jbe
cmp
mov
pushf
clc
dec
sbb
jle
mov
mov
pop
sub
iret
sub
jle
sbb
lock
aam
xchg
push
sarl
ds
jne
sub
inc
test
cmpb
jnp
xchg
sbb
insl
out
enter
mov
sub
psubusb
leave
push
push
mov
push
call
dec
iret
test
in
shlb
sub
xlat
cmp
cmp
hlt
dec
mov
repz
dec
pop
pushf
dec
xor
push
or
addr16
push
add
adc
jno
aad
push
jnp
and
mov
or
lret
jae
aam
jg
jp
mov
mov
mov
sti
loopne
test
addr16
and
sbb
mov
repz
icebp
cli
mov
cmp
xchg
pop
jmp
aad
movsl
mov
mov
rolb
dec
jns
mov
movsl
lret
aas
mov
or
jecxz
mov
int3
gs
mov
inc
stos
push
in
aad
mov
les
jmp
inc
dec
hlt
and
dec
lea
ret
xchg
add
test
push
cwtl
push
arpl
shrl
pop
divl
xchg
sub
mov
inc
inc
scas
add
lods
push
pop
push
mov
enter
out
xor
movsl
adc
dec
stc
mov
and
mov
jge
in
push
jb
enter
cmpsb
mov
repz
mov
adcb
arpl
pushl
push
sbb
jbe
js
push
inc
and
sbb
and
push
adc
in
sbb
add
xchg
out
jecxz
dec
adc
xor
repz
adc
shll
daa
dec
xchg
fmull
cmp
fs
pop
adc
mov
mov
and
jns
ja
mov
jge
push
and
jg
adc
adc
adc
adc
dec
or
in
xchg
xor
ret
cmp
or
jae
ljmp
movsb
mov
daa
notb
mov
scas
xchg
add
xchg
mov
xchg
nop
or
push
add
adc
test
pop
rclb
iret
jmp
data16
lret
mov
fmuls
xor
fs
jb
mov
mov
cmpsb
in
add
vpshuflw
scas
rolb
jnp
xchg
roll
mov
mov
jnp
xor
cmp
dec
jmp
clc
or
filds
mov
fistpl
or
pop
daa
cmc
add
inc
lret
mov
xor
push
call
daa
dec
cltd
ret
push
jno
cs
shlb
add
movsl
mov
lret
iret
lods
pop
insb
dec
xlat
mov
and
test
mov
jle
adc
testb
adc
push
cli
sub
mul
div
push
inc
out
aam
dec
dec
mov
jle,pn
mov
mov
adc
insl
lods
add
or
gs
lret
pop
mov
mov
jbe
mov
jae
inc
in
pop
and
adc
lret
jle
and
lret
push
xor
inc
shll
fidivs
jns
or
das
push
jge
fcom
lahf
add
adc
fs
std
scas
pushf
dec
inc
pop
imul
mov
call
stc
inc
xchg
adc
inc
push
cmp
inc
or
pop
ret
and
fldt
add
mov
dec
adc
fcomps
pushf
adc
jge
xchg
sbb
adc
and
cmova
stos
pop
lret
sti
or
pushf
pop
mov
scas
lea
mov
daa
ss
test
out
sbb
mov
out
js
dec
jge
adc
jmp
iret
stc
movsl
fwait
daa
pop
stos
pushf
mov
outsb
push
pop
outsl
loopne
addr16
ljmp
mov
pop
das
stos
jecxz
xor
test
es
adc
test
jge
jl
rclb
outsb
xchg
or
mov
xor
cmp
shrl
enter
ret
cmp
mov
test
cs
push
jecxz
inc
fwait
shrl
and
inc
incl
xchg
mov
add
push
repz
dec
and
stos
insl
cmpb
negb
clc
xchg
mov
jnp
es
jo
push
xor
js
int3
divb
movsb
stos
adc
loopew
aas
sub
adc
iret
push
push
or
add
dec
cwtl
mov
fstps
xor
xor
mov
mov
mov
cwtl
lahf
rcrb
or
and
sarb
scas
aad
aad
clc
test
lock
iret
sub
inc
mov
fcomip
cmp
fsubp
in
pop
pop
xchg
mov
call
repnz
call
mov
xchg
in
adc
jmp
popa
add
iret
xlat
or
xlat
mov
dec
int
into
fdivrl
sbb
int
inc
repz
rcrb
in
jge
jo
pop
loope
and
mov
out
mov
fdivs
jmp
adc
mov
mov
hlt
es
mov
inc
sub
push
lea
not
in
lods
pop
pop
lods
andb
frstor
jmp
fidivs
loopne
cs
inc
dec
push
pop
inc
and
out
int3
xchg
jmp
aam
mov
and
push
add
add
nop
mov
dec
mov
mov
xchg
clc
push
xchg
or
mov
loop
stos
pop
outsl
sbb
pop
mov
pop
sbb
shrb
push
cmc
mov
repz
inc
int
cwtl
addr16
stos
lods
pop
call
push
aaa
xor
in
sub
leave
add
sbb
mov
pusha
lock
adcl
or
insb
repnz
incb
stc
pop
clc
rorl
mov
imul
push
ja
fbld
aam
mov
stc
mov
push
dec
dec
jmp
enter
and
pop
mov
insb
lods
stos
xlat
lods
outsb
dec
and
jbe,pn
adc
mov
push
mov
dec
jo
inc
daa
mov
mov
fdivrl
test
es
pop
shll
sub
rcll
push
xchg
sub
sub
mov
xor
rcr
inc
es
imul
inc
or
pop
mov
sub
cmp
sbb
jecxz
imul
sub
sbb
mov
pop
mov
cld
gs
jbe
cmp
cmp
js
sbb
jle
sbb
movsl
push
jnp
push
in
xchg
shrb
pusha
mov
jne
dec
cli
xchg
jmp
xorl
movsb
popf
stos
int
arpl
xchg
xor
sbb
and
into
out
dec
clc
mov
jae,pn
movb
int
add
fcoms
or
push
out
jbe
int3
es
sub
scas
mov
pop
movsl
cld
mov
dec
dec
filds
popa
test
add
popl
jp
or
cli
sub
inc
hlt
sub
push
into
xchg
dec
inc
outsl
mov
adc
mov
addr16
mov
xchg
mov
dec
in
sub
jge
add
mov
dec
ret
dec
xchg
push
decb
pop
movsl
icebp
es
jnp
in
jbe
pushf
xchg
xchg
mov
stos
xor
cmc
push
dec
push
repnz
adc
cmc
arpl
sbb
push
lds
push
xlat
call
in
cltd
lret
into
dec
mov
into
repz
adc
cmc
xchg
and
aad
mov
inc
fidivrs
fsubs
xchg
push
fildll
push
js
lahf
andl
dec
and
iret
sbb
mull
rcll
rorl
push
mov
and
addr16
rclb
push
pop
sub
ret
repnz
lea
cli
jl
push
mov
fstps
sub
out
fwait
shlb
imul
sub
mov
rcrl
add
in
icebp
icebp
or
mov
mov
pop
imulb
or
inc
adcb
insb
xchg
testl
adc
mov
fnstcw
push
in
xor
addr16
cs
gs
mov
mov
mov
rol
xor
xchg
mov
jge
lahf
fstps
fidivrl
mov
xchg
sti
jl
sarl
mov
jne
pusha
push
pop
add
inc
adc
mov
cld
je
sub
jecxz
rcl
fcomip
cld
into
mov
mov
popa
shlb
dec
adc
sub
lds
dec
mov
xor
out
push
orl
flds
jae
sub
andl
imul
into
js
insl
jl
inc
shlb
pop
aad
fistpll
mov
in
dec
mov
cmp
ljmp
mov
hlt
test
adc
imul
mov
inc
aam
pusha
sub
movsb
mov
adc
jecxz
dec
popl
mov
or
mov
adc
mov
ss
fcompp
dec
test
js
inc
repnz
daa
cmp
adc
mov
test
sub
imul
xor
insl
or
movsl
add
mov
or
cmp
out
movsl
jmp
jno
clc
adc
pop
nop
dec
pop
pop
cmp
sbb
or
add
aas
mov
call
leave
pop
sub
aas
pop
leave
and
jle
in
lock
in
xchg
jecxz
push
push
rolb
ret
jg
lea
clc
mov
sub
dec
and
in
mov
adc
dec
jl
jecxz
add
sahf
ret
mov
or
daa
mov
cmp
pop
cmpsb
pop
test
addr16
and
dec
notl
insb
push
testb
dec
out
loope
mov
add
sbb
loope
pop
mov
test
xor
push
clc
push
push
faddl
inc
adc
mov
js
xchg
movsb
mov
lahf
push
add
test
push
cmp
inc
das
int
jp
xor
aam
test
xchg
fstl
adc
inc
mov
push
inc
jns
fnstcw
push
xchg
xlat
xor
sbb
push
sub
mov
call
dec
cltd
xor
aaa
fsubrs
mov
xchg
nop
push
sub
push
or
test
jns
mov
lret
mov
add
push
push
mov
jp
or
mov
je
mov
movsl
stos
popf
cmp
and
enter
mov
sub
mov
ja
dec
sub
insl
in
mov
sbb
pcmpgtd
jno
adc
jmp
fsubrl
repnz
cmp
cmp
xchg
movsb
inc
scas
dec
vpavgb
mov
iret
or
mov
and
jne
int3
add
lcall
and
sub
cs
cmp
lea
leave
in
aam
dec
push
insb
clc
mov
sbb
mov
mov
lods
jp
sbb
aaa
shlb
sbb
push
xchg
jb
mov
add
aam
iret
in
scas
shl
lcall
fidivrs
sub
lahf
xor
xchg
push
loopne
or
xor
mov
xor
sub
in
in
mov
xlat
ficomps
jnp
cli
push
into
push
sub
scas
stos
je
mov
sub
sbb
sbb
sahf
push
lret
xchg
cmp
xchg
pop
cmp
jno
jg
push
aas
enter
mov
shr
jo
vcmpsd
outsb
dec
test
cmp
inc
or
jecxz
push
imul
fnsave
mov
dec
test
dec
mov
dec
les
sti
dec
xchg
int3
cmp
add
mov
xchg
shld
or
inc
ja,pt
jo
aad
testl
dec
movsl
fidivl
xor
lds
xchg
in
lock
xchg
stos
dec
push
cmpsl
fcoml
aam
jnp
repz
push
cli
jg
movsl
add
mov
xor
mov
mov
push
leave
adc
mov
test
or
ret
jle
pop
call
push
inc
insl
pop
mov
lea
les
test
mov
bound
enter
mov
xchg
loope
sbb
je
and
out
and
data16
aad
or
xorb
dec
push
sahf
adc
jae
sbb
test
sub
pop
jle
sbb
loop
ret
sti
notb
sti
mov
hlt
add
pop
lods
mov
push
inc
imul
lods
lods
dec
loopne
and
lcall
ljmp
adc
fstl
fldt
jp
inc
push
movsb
adc
out
fstl
dec
in
inc
out
push
sbb
sbb
js
std
mov
push
insl
or
ja
add
pushf
aaa
add
stos
jecxz
fldt
sub
stc
xchg
mov
scas
sarb
test
sahf
test
addr16
xor
imul
pop
nop
je
or
aaa
iret
cltd
and
adc
dec
loop
imul
mov
push
lods
push
push
call
subb
xor
mov
in
and
or
sbb
sbb
fwait
mov
or
test
icebp
mov
dec
jecxz
push
movsl
inc
jecxz
jle
pop
into
loope
xchg
adc
push
vpaddd
adc
xchg
pop
sub
insb
in
sbb
sbb
sub
out
dec
stc
xchg
mov
ljmp
ficompl
dec
xlat
fmull
andl
push
xchg
dec
mov
mov
or
xchg
mov
jg
ret
int3
ja
sarb
nop
in
xor
shl
test
push
in
and
mov
fimull
loopne
movsb
add
inc
int
movsl
pop
mov
mov
lea
or
jo
call
pop
test
pop
pop
inc
push
movsl
lret
pop
gs
jbe
js
fwait
sub
fildll
xchg
and
idivl
dec
mov
jmp
xchg
cmc
xchg
jb
orb
test
inc
sub
insb
mov
nop
test
push
nop
pop
inc
mov
arpl
call
or
test
movsl
push
inc
and
mov
mov
or
lahf
push
mov
loop
xor
lock
out
push
movsb
test
sub
sbb
fs
into
mov
and
lea
insl
pop
push
inc
int
outsl
lcall
push
mov
outsb
jbe
cmp
xchg
add
and
xchg
fsubrl
xor
ret
addr16
clc
mov
and
sar
test
mov
mov
scas
pop
scas
gs
push
and
clc
add
or
cwtl
outsl
xor
or
jnp
adc
cmpsb
arpl
mov
sub
rclb
pop
lea
push
cmp
sub
aaa
cmc
and
fs
jg
sbb
cmpsl
pop
adc
jl
rol
cld
es
xor
add
push
cld
enter
ds
push
mov
xchg
xor
loope
cmp
test
xor
scas
or
pop
add
mov
jg
in
stos
fwait
in
fxch
mov
ret
sub
lods
lods
mov
adc
negb
push
jb
in
xchg
loop
sub
dec
aas
pop
push
repnz
insb
ret
push
sbb
aas
pop
cmpsb
pop
cmp
fs
mov
mov
clc
push
mov
das
sar
sbb
inc
sub
adc
imul
fldcw
cltd
sahf
jp
mov
cvttps2pi
pop
jle
sti
pop
pop
call
pop
or
add
aaa
or
loopne
or
dec
mov
xor
and
cmp
cmp
lods
loope
mov
hlt
cmpsb
bound
arpl
iret
xor
mov
xchg
dec
dec
and
cmp
pop
pop
adc
mov
xor
ss
xchg
out
int
lock
lret
cld
sbb
sub
pop
into
jle
ds
ret
cmpsb
inc
das
lahf
xor
inc
dec
push
xchg
roll
jb
push
outsb
insl
push
and
rolb
addr16
sub
mov
jl
mov
lods
push
ret
ret
rcl
mov
push
push
ret
shrb
push
sub
jb
iret
repz
dec
out
pushw
xlat
repnz
int
sbb
lret
and
loopne
push
pop
xchg
fwait
jno
shl
fnstcw
xchg
push
adc
minps
data16
push
daa
lock
jge
filds
les
sti
or
bswap
in
fmull
fwait
std
add
cmovo
push
xchg
jne
sbb
mov
ss
jge
mov
adc
mov
std
stos
sbb
ja
repz
jns
lcall
add
cmpsl
js
push
xchg
es
push
cltd
dec
pop
aad
or
dec
pop
rclb
push
insb
adc
scas
sarl
imul
fadds
ljmp
rcrl
aad
stc
cli
mov
xor
push
xor
aam
ja
mov
fsubs
sub
or
shlb
aam
scas
pushf
dec
dec
push
xorl
push
js
mov
pop
jbe
jbe
mov
loope
adc
cli
or
mov
adc
loop
ja
dec
inc
inc
xor
inc
mov
in
pop
or
insb
jg
add
xchg
xchg
or
add
pop
sbbb
mov
jne
add
std
jecxz
das
mov
icebp
jl
js
je
outsl
in
dec
xor
sub
or
adc
lret
mov
stos
mov
decl
mov
in
push
pop
iret
or
sub
testl
sub
mov
test
add
jp
lds
pushfw
stos
into
adc
movsl
pop
mov
outsb
insb
dec
adc
std
lcall
js
pop
loop
addr16
movsl
je
mov
clc
pop
leave
xchg
xor
lea
sbbb
xchg
push
adc
sub
insl
inc
not
in
repnz
pusha
sti
daa
jg
negb
popa
xlat
or
out
hlt
jbe
out
mov
fimuls
cli
outsb
cwtl
mov
popa
cld
cmp
xchg
dec
jp
or
testb
cmpsb
or
add
aad
in
movsl
cmc
add
sbb
scas
mov
daa
into
ret
orps
out
test
aaa
cmp
repz
sbb
sbb
push
dec
mov
or
xor
cmpsl
loop
jge
dec
sahf
ret
and
addr16
mov
gs
xchg
jge
sahf
and
in
mov
loopne
imul
icebp
sub
mov
dec
jp
xchg
cmp
and
adc
cmpb
shrl
daa
jle
jb
xchg
mov
inc
daa
inc
push
jg
add
cmpsb
rcrl
sbb
fisubl
test
jecxz
dec
icebp
dec
and
fdivp
inc
mov
cld
test
mov
jp
push
das
push
fcompl
scas
push
scas
xchg
popw
pop
pusha
xchg
mov
test
or
xchg
lods
mov
jnp
sar
sbb
dec
jg
add
sahf
xchg
pushf
push
loop
mov
push
seta
ja
mov
push
push
js
mov
fistps
and
daa
and
ljmp
loopne
mov
and
push
xor
dec
pop
call
pop
shrb
adc
dec
jmp
xor
xor
jo
mov
aaa
sub
inc
fisubrs
fyl2xp1
in
adc
nop
test
xor
sub
std
push
bnd
int3
adc
popa
and
inc
jbe
mov
mov
mov
int
fldt
sub
sbb
jno
cmp
aas
mov
scas
inc
pop
cmp
push
mov
loop
jle
xor
ffree
mov
pusha
imul
jecxz
inc
in
or
inc
in
push
push
testl
jns
jbe
push
les
mov
and
pop
mov
and
push
lret
in
testb
fldcw
xchg
jmp
pop
xlat
or
pop
addr16
push
xlat
fnsave
jmp
mov
dec
arpl
sti
xor
pop
mov
push
std
push
or
cmp
mov
aad
imul
xor
call
and
int
adc
loop
mov
mov
ficomps
lcall
pop
mov
out
stos
in
pop
push
jmp
and
cmp
aad
aaa
xchg
mov
jl
fidivrs
mov
test
or
adc
mov
repnz
icebp
cwtl
jno
sbb
addr16
addr16
and
mov
into
add
adc
mov
test
sbb
pop
mov
rorl
inc
insb
mov
dec
lods
xchg
loop
mov
cmp
lea
adc
push
das
dec
aaa
pop
mov
jecxz
fwait
sub
jmp
or
aas
sub
or
inc
lods
jb
ret
sbb
into
gs
cmc
shr
pop
addb
fs
xchg
hlt
add
cmpsl
adc
dec
mov
mov
cmp
ja
cld
pushf
mov
mov
call
cs
sbb
shl
scas
and
sbb
mov
ret
dec
mov
in
mov
adcb
fstp
lock
push
stos
in
dec
pop
and
in
or
popa
aam
fcmovbe
vpmacssdqh
mov
mov
push
jge
mov
test
sub
inc
inc
pop
adc
and
loope
scas
shll
inc
jno
pop
mov
pop
ret
xor
sbb
push
movsb
jne
dec
mov
pop
les
movsb
stc
testl
or
orb
xor
mov
pop
sub
fistps
cmp
lret
jle
cmp
push
imul
cs
cld
pop
add
or
lret
loopne
ret
mov
jb
or
out
stc
fsubr
mov
je
test
arpl
popa
mov
mov
fucomi
lea
pop
shll
sbb
loope
loop
shlb
xor
cltd
xchg
jo
mov
mov
ljmp
fnstcw
or
stos
inc
out
push
pop
stos
mov
cmp
jmp
int
out
push
loope
scas
rcrl
pop
adc
stc
mov
push
mov
dec
les
pop
ljmp
or
push
and
pop
sbb
les
popf
shlb
push
sub
and
fwait
jb
jle
ret
insb
stos
iret
cmpsb
dec
xchg
pop
jbe
mov
xchg
xchg
jl
shrb
mov
mov
addr16
pop
pop
nop
mov
call
loopne
mov
push
xor
in
mov
jmp
mov
mov
sbb
mov
cwtl
imul
ret
adc
fmull
fisubrl
push
sti
and
fsubs
lods
xlat
pop
popf
mov
cli
xchg
add
jno
stos
cmpsl
mov
dec
shrl
sarb
repz
shrl
sarl
jo
inc
xor
dec
cs
jl
cld
ret
lret
stc
fisttpl
push
jp
leave
ret
pop
push
movl
in
cmp
leave
test
fildll
push
imul
mov
lea
push
int
add
out
cmp
das
shl
mov
xor
jne
mov
loope
ficoml
push
push
mov
cmpl
jo
xchg
xchg
ljmp
mov
ffree
sub
pop
adc
adc
push
pop
aam
add
inc
int3
jns
addr16
xchg
repnz
pop
stc
pop
xchg
stc
repnz
orl
jle
adc
jp
fldl
xchg
pop
lea
cmp
jmp
mov
ds
out
add
divl
pop
out
das
sub
aam
xor
xor
testb
lock
aam
push
pushf
sahf
mov
fs
sub
jp
test
arpl
daa
je
lahf
adc
fs
leave
push
pushf
and
movsb
or
int
and
cli
mov
arpl
ret
in
mov
xchg
mov
icebp
fwait
shll
fwait
jae
cmp
jg
or
nop
or
pop
clc
outsb
jp
out
mov
loop
icebp
hlt
outsl
inc
cwtl
out
mov
jmp
imul
sbb
nop
xchg
push
push
ss
ret
mov
rorb
sahf
or
push
lds
rcrl
xchg
push
add
inc
pushf
arpl
jl
int3
les
cmp
in
cld
inc
out
pop
and
sbb
js
sahf
or
push
xchg
clc
cmp
xor
mov
add
icebp
push
mov
movsb
adc
sbb
lds
add
in
adc
push
xor
sbb
mov
sub
push
sub
adc
pushf
add
shll
xor
xchg
inc
pop
faddl
xchg
mov
shrb
pusha
or
in
js
jns
fbld
mov
sub
mov
jb
xchg
out
push
repnz
jae
bound
mov
ficompl
pop
or
or
mov
sbb
or
stc
outsb
cltd
scas
inc
xchg
inc
dec
or
idivl
fstps
pop
cmpsb
cmp
add
stos
mov
lahf
mov
push
test
test
ja
sbb
cmc
lret
adc
aaa
xchg
dec
scas
subb
mov
lds
add
sti
jne
in
mov
fisubl
mov
out
push
arpl
and
sbb
dec
shr
test
arpl
aaa
fadd
fisubs
push
sbb
xchg
out
xor
jl
mov
sbb
fdivrs
mov
or
daa
jmp
pushf
push
and
orl
inc
add
jb
popa
push
call
jb
dec
cmp
lock
lcall
jns
fsub
xchg
mov
daa
out
and
out
idivb
mov
sbb
pop
jb
sahf
xchg
mov
inc
mov
out
in
test
lock
mov
lahf
sbb
jmp
mov
mov
mov
inc
push
jp
out
mov
movsl
popf
add
jb
sti
cmp
repz
sub
leavew
fucomp
adc
int3
cli
jns
push
nop
adc
call
sub
pop
stos
test
sub
sbb
lret
and
push
sbb
cmpsb
enter
or
pop
lods
shll
ret
xor
mov
and
sbb
push
aad
inc
mov
ret
pop
adc
dec
test
ret
int
xor
in
mov
inc
aad
pop
xchg
dec
xchg
daa
mov
mov
pop
xchg
pop
sbb
inc
and
sbb
sub
enter
sarb
lds
pop
icebp
xor
orb
bnd
repz
into
jmp
cmp
cwtl
or
aaa
jne
pusha
std
mov
push
outsb
jecxz
xor
pop
in
adc
xchg
clc
pop
jne
dec
clc
pop
arpl
popa
jae
sti
sub
cltd
xor
mov
jmp
fs
dec
xchg
icebp
mov
lret
xchg
daa
add
push
jge
or
call
aam
inc
adc
fcmovnb
dec
lds
in
out
mov
cltd
aaa
cmpsl
or
dec
xor
mov
fdivs
rcll
sbb
inc
or
gs
leave
bnd
xchg
arpl
lret
dec
int3
cs
add
fisubl
in
insb
aad
mov
outsl
push
rorb
addl
es
jo
ss
push
push
pop
gs
cmp
xchg
jb
mov
shlb
mov
sub
sub
pop
icebp
dec
pcmpgtb
pop
adc
out
lods
mov
and
daa
ret
imul
iret
outsl
dec
cmpsl
nop
jg
adc
adc
xor
ret
std
dec
or
push
dec
scas
xlat
lock
adc
dec
dec
xor
pusha
sbb
negl
lcall
stos
push
scas
jmp
popa
push
xchg
out
xchg
mov
pusha
mov
xor
xchg
cmp
mov
push
data16
cmpsb
dec
cli
pop
xor
test
cmpsl
test
dec
cmp
push
pop
cmp
ss
je
hlt
jae
shl
enter
lahf
das
dec
fcmovne
jns
cmp
push
lcall
push
inc
cmc
jbe
shl
cltd
in
jmp
int3
dec
push
xor
mov
pop
sub
shlb
or
mov
decb
fucom
les
cmpsl
aad
lahf
sbb
jbe
mov
outsb
and
mov
cmp
jg
call
sbb
and
arpl
xor
pop
add
xchg
scas
daa
mov
rcr
std
inc
fwait
or
insb
loopne
sti
imul
push
loop
adc
pop
aam
xchg
push
dec
add
sti
pusha
xor
cmp
std
cmc
ret
inc
lret
sub
fst
mov
add
xchg
mov
popa
test
jae
sub
cwtl
jmp
mov
in
insb
in
pop
pop
cmp
movb
add
mov
xor
sahf
bnd
test
pop
dec
sti
mov
and
ret
pusha
stos
pusha
cmp
xor
inc
mov
xchg
cmp
xor
xor
loope
cmp
clc
pushf
sbb
lret
clc
int3
cmp
cltd
sub
bound
jp
gs
lcall
and
adc
mov
add
jb
sub
movsb
pop
sbb
notl
or
and
aas
xor
jmp
mov
stos
sub
or
xchg
stos
cmp
loopne
loop,pt
insb
sbb
nop
cmp
mov
xchg
movsb
aad
arpl
in
cmp
or
xor
lret
lock
mov
mov
cmp
ss
repnz
dec
adc
sub
in
cmc
pop
ret
incb
mov
mov
andps
dec
bound
scas
jnp
xchg
pop
xor
es
xchg
ficomps
cmp
dec
xor
jecxz
and
cmp
adc
movsl
pop
shlb
decb
ret
cmp
cmp
test
mov
dec
mov
insb
cmp
sbb
push
xor
cmp
pop
cwtl
sub
imul
testl
mov
pop
cmp
xchg
pop
cwtl
les
push
sub
popa
std
arpl
loop
mov
inc
frstor
pop
add
push
cmp
dec
lods
ja
inc
movsl
loopne
lds
xchg
mov
xchg
addb
daa
loope
or
imul
pop
clc
xlat
rcll
mov
pop
jge
and
leave
mov
cmp
add
out
sub
mov
mov
dec
mov
dec
ss
aam
mov
mov
pusha
lea
or
insl
cmp
push
sti
popa
out
aas
aaa
mov
push
cwtl
dec
mov
aad
stos
cld
and
pop
dec
mov
xchg
test
movsl
pop
out
sbb
in
aaa
sarl
jge
inc
or
xchg
push
and
sahf
xchg
into
jp
jo
mov
leave
mov
cld
push
dec
arpl
or
xor
int
push
aad
mov
inc
xchg
jp
mov
mov
dec
adc
loopne
movsl
push
enter
daa
cld
jae
inc
and
neg
stos
xor
neg
mov
add
aam
and
or
arpl
xlat
sub
add
stos
fidivrl
popa
mov
popa
stos
lock
push
xchg
outsl
rcr
push
movsl
pusha
mov
mov
cmp
cmp
ljmp
testl
test
jae
sbb
push
ss
ret
lret
adc
cmp
adc
shlb
stos
mov
imul
push
dec
lods
test
in
test
xor
les
pop
scas
sbb
flds
xor
movb
dec
mov
inc
inc
push
rcrl
adc
fucom
jl
mov
lcall
cmp
in
jl
fs
loope
adc
stos
adc
fdivrs
in
add
push
imul
out
push
sbb
add
jns
cmp
fstpt
push
sbb
imul
cwtl
xor
sub
es
xchg
jg
push
lcall
mov
mov
inc
jns
sbb
idiv
repnz
add
popa
popa
xchg
push
shll
testb
sbb
jecxz
ljmp
cmpl
mov
shll
lret
mov
xor
dec
adc
cli
lods
cmpsl
lea
adc
jnp
jmp
pop
icebp
inc
jle
sbb
pop
popf
test
lcall
lcall
dec
outsl
mov
lock
js
imul
xchg
nop
stos
insb
add
xorl
adc
sbb
add
testl
insl
js
pop
roll
mov
mov
movsb
sub
jno
xchg
dec
add
sahf
adc
into
and
rcrb
cli
adc
stos
into
movsb
xchg
pop
stc
or
adc
lahf
sahf
mov
ss
mov
test
pop
inc
out
nop
movsl
jbe
sub
or
das
loopne
stc
in
pop
imul
mov
movsl
cmp
lret
push
inc
inc
pop
xchg
add
dec
scas
test
mov
lret
push
hlt
xchg
shlb
push
negl
jp
shll
cmp
ss
inc
pusha
dec
mov
xchg
mov
pop
lcall
shlb
pusha
pop
div
mov
hlt
test
rorl
jmp
stc
imul
mov
dec
pop
mov
cltd
lods
jp
js
rolb
shld
jbe
mov
xor
mov
push
adc
mov
in
ja
sbb
inc
dec
pop
xchg
mov
and
test
mov
ss
pusha
xlat
mov
and
enter
repnz
aaa
sub
shr
pop
in
sbb
pop
or
gs
mov
adcb
mov
daa
scas
mov
insb
mov
pusha
imul
cld
out
add
rcrl
adc
fsub
out
mov
addr16
frstor
ret
sti
xchg
nop
push
in
call
je
mov
or
movsl
pop
lds
sub
mov
jecxz
dec
cmp
in
mov
push
daa
sbb
jmp
jge
inc
sbb
int3
mov
lods
inc
jmp
xchg
adc
mov
hlt
inc
movsb
jle
jp
mov
in
push
int
mov
das
mov
fldt
pop
fwait
cs
pop
lret
mov
xchg
sti
out
jmp
pushf
and
sarl
popa
out
xchg
mov
mov
inc
mov
stos
roll
or
dec
mov
inc
and
add
ficoml
out
jle
es
jle
dec
push
bound
mov
mov
lea
sub
mov
mov
clc
mov
pop
fadds
push
lea
push
lret
xor
notb
push
lds
lds
and
mov
cwtl
cmpsb
es
mov
std
fldl
and
rcrl
mov
repnz
loope
inc
sbbb
ss
inc
ficoml
das
push
sub
ja
orb
test
popf
push
shlb
jbe
ja
aam
inc
scas
adc
int3
mov
xchg
push
pop
or
dec
or
pop
and
and
cwtl
sbb
lret
mov
jb
pmullw
cmp
orl
jge
dec
rolb
nop
and
and
loop
pusha
lods
xor
int
xlat
dec
push
gs
enter
xchg
jne
arpl
popf
jne
mov
push
fistpl
repnz
mov
repnz
mov
xchg
push
mov
add
and
push
jge
pop
mov
test
jl
int3
icebp
mov
test
adc
jge
sbb
lods
iret
inc
jecxz
scas
jecxz
addb
add
sub
adc
fidivs
repnz
cmp
push
fisttpll
dec
cmc
cld
jecxz
mov
fldcw
or
sti
pop
test
xchg
mov
cwtl
mov
aad
add
mov
ret
pusha
and
test
dec
loopne
dec
divl
insl
dec
jecxz
xchg
xchg
mov
push
pushf
jbe
into
fsubrl
test
fidivs
in
mov
jmp
insb
movsb
and
enter
test
sub
mull
call
outsb
stos
stos
mov
mov
or
adc
sbb
xchg
push
shlb
jbe
or
mov
rorl
sub
mov
inc
ret
mov
xor
and
fsubrs
cwtl
aas
mov
add
mov
mov
cmpsl
out
fbstp
fdivs
xor
cmp
xchg
inc
add
outsb
jno
aam
sti
add
fs
pop
stos
push
mov
xor
adc
inc
add
rolb
or
lahf
test
fsubl
test
mov
mov
mov
xchg
sub
shl
jae
loope
cs
inc
nop
xchg
jne
mov
mov
rcll
mov
push
add
fnstenv
jg
xchg
daa
decl
shlb
mov
lahf
leave
sbb
fimuls
mov
mov
ret
ret
lret
add
mov
inc
mov
xlat
push
iret
cmp
push
icebp
sbb
pop
pop
mov
daa
fdiv
lock
pop
fcoml
ds
push
or
pop
dec
or
xor
arpl
ror
jmp
add
dec
lock
inc
and
out
arpl
sti
cltd
jnp
jl
adc
inc
shll
pop
ror
into
arpl
mov
in
dec
mov
scas
xchg
testl
pop
lahf
inc
insl
fwait
pop
cmpsb
rclb
ss
dec
iret
movsl
and
pop
in
mov
lret
popa
notl
mov
clc
adc
mov
inc
sub
bound
mov
xor
fabs
lods
pop
lret
add
and
sub
insb
loopne
lods
jns
insl
cmp
adcl
ja
push
jae
cli
leave
mov
cltd
subb
inc
outsl
das
push
push
in
insb
test
es
ja
sub
sbbb
xchg
ss
mov
fists
pop
push
fildl
call
jl
aam
add
xchg
sub
mov
mov
imul
sub
es
xor
pop
popf
into
out
inc
mov
arpl
and
cmp
pop
xchg
gs
mov
subb
push
lahf
lea
fstps
jne
popf
pop
cld
into
add
push
xchg
outsl
jnp
ds
cmp
leave
mov
mov
sbb
lods
inc
xchg
test
sub
rcrb
cwtl
push
test
repz
ljmp
orb
pop
push
cmpsl
mov
cmc
push
mov
rorl
xchg
shrb
xchg
dec
xor
subb
movsb
push
mov
fistpll
mov
imul
inc
in
jg
dec
rcl
orl
pop
sarl
push
iret
mov
icebp
or
das
add
adc
xchg
xchg
mov
xlat
push
sub
inc
insl
clc
xlat
xchg
sarb
mov
or
stos
xchg
jmp
mov
dec
push
fisttps
mov
xor
add
lea
and
mov
dec
icebp
mov
daa
or
stos
cmp
adcl
sbb
icebp
xchg
fsubrs
dec
cltd
icebp
aaa
xchg
cmp
loop
mov
mov
test
pop
cmp
xor
jge
or
add
pop
and
out
mov
in
ljmp
jno
dec
add
jg
clc
jg
std
inc
in
loope
inc
push
int3
jmp
xchg
inc
fld
ret
shrb
xlat
sub
outsl
push
mulb
mov
stos
inc
outsl
pushf
ja
repnz
ja
scas
rcrl
pop
test
daa
fsubrp
hlt
mov
inc
and
inc
enter
nop
sbb
sub
leave
adc
mov
loope
ret
insl
push
ret
jnp
mov
pop
xor
xor
or
mov
push
and
fstpt
out
dec
cwtl
or
cmpsl
mov
inc
icebp
icebp
inc
sub
in
xchg
lods
inc
das
jg
loope
insl
sahf
sbb
and
dec
std
sbb
pushf
inc
mov
mov
jno
adc
cmpsb
add
movsb
jnp
pop
and
xchg
das
sub
lea
add
cmpl
stc
lahf
les
test
push
insb
out
pop
shll
adc
call
mov
push
lcall
inc
pop
ret
and
arpl
or
pusha
cs
shrb
cmc
int3
mov
inc
pop
inc
cmp
sbb
rclb
sub
xor
sub
cmp
mov
aas
inc
jecxz
imul
and
lcall
clc
loopne
inc
int3
pop
aad
sbb
xchg
mov
pop
adc
mov
insl
xchg
jecxz
inc
dec
ss
mov
pusha
scas
xor
lods
inc
outsl
int3
negl
scas
jl
xor
pop
mov
jae,pt
ljmp
loope
in
shlb
xor
adc
mov
shrb
add
test
and
insb
lahf
mov
adc
mov
mov
dec
add
lcall
ret
loop
jecxz
or
jge
xor
movsl
push
sahf
fdivs
shrl
outsl
scas
cmp
sahf
lahf
jle
les
lcall
or
movsl
stos
pop
out
clc
or
icebp
jo
lcall
inc
jge
jl
sbb
fmulp
add
outsl
sbb
lahf
lret
or
stc
sbb
xorb
mov
cld
loope
sbb
xor
out
pop
xor
add
xchg
mov
cmp
cmp
sbb
xor
jbe
das
inc
int3
nop
xchg
stos
add
xchg
gs
jg
in
les
insl
xor
stc
xor
push
xchg
push
cmc
mov
mov
mov
fidivs
adc
insl
pop
pop
xor
leave
lods
push
aad
loope
inc
xor
and
xor
dec
xor
xchg
imul
mov
or
push
lret
mov
popa
sahf
push
fadds
or
fs
add
or
popf
adc
outsb
inc
xchg
lock
sbb
and
test
es
or
divl
mov
and
cltd
out
cwtl
inc
sub
repz
push
aam
jbe
test
ja
mov
arpl
lods
sbb
mov
imul
dec
or
sub
mov
xor
inc
fsubs
jns
push
ja
xor
aaa
xor
repz
nop
xor
jno
iret
or
cli
push
lds
lods
jg
sbb
jae
mov
and
xor
inc
or
ret
push
jo
in
inc
insb
xchg
jnp
or
cmc
and
repz
pop
push
lods
sbb
xchg
das
mov
movsb
rorb
sub
lret
mov
jge
stos
mov
ja
xchg
dec
cmc
repnz
rorb
daa
and
pop
or
lret
repnz
icebp
lea
push
lods
mov
subb
pop
mov
cltd
or
popf
scas
jnp
dec
or
cmp
adc
mov
adc
cmpsl
jmp
xchg
movsb
sub
push
xchg
mov
inc
aam
sub
mov
or
orl
into
gs
fwait
ljmp
mov
pushl
mov
les
jbe
cli
outsb
xchg
imul
imul
addr16
jmp
ja
mov
mov
sub
mov
cmpsb
or
mov
add
ljmp
adc
sbb
aad
fisubs
push
loopne
arpl
enter
dec
add
daa
pop
lods
add
add
sub
dec
xlat
cmpsb
adc
push
mov
and
inc
and
sbb
mov
les
cli
into
jle
adc
or
push
mov
addr16
mov
fisttpll
and
and
xchg
adc
loopne
mov
cltd
pop
mov
movsl
ret
les
cwtl
lret
cmp
stc
scas
ds
fadd
jno
lret
loop
int
std
xlat
insb
mov
repz
mov
xor
stos
lds
pushf
sbb
rcrl
test
xchg
stc
mov
call
clc
jmp
mov
int3
mov
mov
push
mov
dec
jg
mov
in
insb
cmp
adc
scas
loope
imul
cld
enter
sahf
out
daa
movsl
xchg
and
test
dec
fnstsw
xlat
jno
lock
sub
je
inc
hlt
cmp
insb
bound
hlt
mov
aad
aaa
fiaddl
das
popf
fdivrs
pop
sbb
pusha
pop
sbb
stc
xchg
jl
leave
cli
fndisi(8087
outsb
insb
mov
xchg
xor
cmp
ds
in
aaa
or
fnstenv
adc
pop
mull
and
lcall
dec
mov
push
orl
sarl
sbb
sbb
rorl
cmp
iret
mov
clc
divb
add
fwait
pop
pop
push
stc
js
fxch
and
xor
lahf
mov
sarb
add
je
pop
xor
mov
shll
jbe
ja
into
mov
je
adc
iret
jecxz
mov
int3
loopne
inc
iret
and
popf
inc
cltd
shrb
cld
pop
ljmp
mov
rcrl
add
popa
mov
cmp
lea
mov
ljmp
jmp
addl
dec
loope
and
rcll
in
inc
jl
sbb
cmp
das
dec
mov
mov
sbb
cmp
insb
cmp
inc
jle
sahf
test
mov
push
push
pop
jbe
xchg
stc
mov
pop
dec
cmpsl
setle
cwtl
fcoms
xchg
dec
inc
mov
push
xor
fucomip
out
sub
xor
mov
push
ds
fwait
aaa
fsts
push
mov
and
out
jmp
data16
mov
hlt
or
imul
out
hlt
outsl
and
jmp
or
add
cmpsl
lret
jns
out
adc
or
test
lret
sub
pop
cs
jae
arpl
push
sbb
movsb
sbb
gs
cmpb
push
xorb
fidivrs
jb
xchg
loope
ds
into
stc
mov
stos
or
sub
hlt
jecxz
inc
xchg
sbb
mov
aas
cltd
push
add
enter
jecxz
mov
mov
aam
popf
xor
aas
dec
sub
pop
test
inc
ja
in
mov
ljmp
imul
imul
inc
outsb
sub
adc
sbb
out
sub
sub
cmp
or
pop
ffreep
ret
mov
ret
negl
xchg
clc
cmpsb
mov
xchg
ljmp
push
in
sub
and
repnz
inc
fnsave
pushf
cmc
jl
adc
and
rclb
mov
arpl
scas
pop
loopne
fbstp
fldcw
sarb
lcall
mov
inc
cltd
repnz
popf
adc
mov
ja
fistps
add
mov
mov
test
sub
andb
sub
lret
jmp
enter
jle
dec
pop
mov
add
cs
jge
iret
fistps
divl
mov
mov
push
jecxz
sub
or
insl
mov
jo
shlb
frstor
fnstcw
mov
outsb
lcall
test
pop
mov
push
sub
mov
add
xchg
mov
stos
sbb
ret
xchg
movsb
popf
call
pop
pop
push
icebp
or
mov
in
in
add
mov
jecxz
add
xchg
iret
and
xchg
pop
shl
cwtl
negl
add
in
out
pop
pushf
jno
inc
fcom
rcll
ret
mov
hlt
clc
adc
mov
mov
out
mov
xchg
rorb
xchg
cmp
in
mov
mov
dec
int
sbb
cmp
movsl
stos
and
mov
push
mov
adc
addr16
jae,pt
add
adc
data16
rorb
push
ja
and
jb
lea
sarb
fistpll
cltd
pop
and
adc
dec
sbb
sbb
rclb
sbb
mov
mov
pop
cmpsl
pop
and
and
xorb
ja
mov
popa
add
fists
add
call
insb
dec
lods
je
xor
xchg
push
and
mov
call
inc
jge
jns
mov
xchg
mov
pushf
and
rol
push
outsb
repz
iret
insl
push
push
inc
adc
hlt
scas
push
jle
sub
xchg
aad
xchg
pop
imul
and
sbb
push
scas
sub
xor
aaa
sub
push
or
cmpsl
addr16
fwait
gs
outsb
mov
jb
pop
push
push
push
lods
sub
and
mov
repnz
xchg
enter
cli
repz
gs
hlt
cltd
mov
jmp
test
loop
sahf
sub
arpl
mov
enter
pop
and
ja
cmp
xor
jbe
xchg
fisubrs
dec
stos
or
in
inc
arpl
jl
xor
push
jae
cmp
sbb
xchg
or
mov
dec
cmp
nop
sbb
sbb
dec
xor
push
mov
jb
pop
lods
in
dec
push
scas
in
mov
cli
xchg
inc
mov
adc
adc
inc
test
in
mov
pop
mov
sub
imulb
sub
inc
push
call
push
sub
mov
mov
movsl
sbb
mov
loope
mov
mov
jb
mov
pop
xchg
mov
xchg
cld
loope
ror
dec
mov
jo
sub
loop
je
loope
int3
inc
mov
scas
push
mov
imul
cmpl
aam
pop
inc
inc
mov
aam
das
add
fsts
movsl
fidivl
je
jbe
lock
add
fistpl
jp
dec
xor
add
ds
adc
jl
shrb
lods
dec
mov
inc
jg
xchg
mov
and
arpl
xchg
aas
lret
jne
push
xor
mov
inc
imul
mov
cmc
adc
push
sbb
fsubl
mov
inc
jbe
sbb
imul
and
push
mov
jp
mov
mov
addr16
sub
outsb
loopne
inc
sbb
mov
push
aam
pop
mov
ret
lds
adc
mov
dec
test
sub
or
lods
xor
fmul
rorb
jmp
jae
clc
sbb
jmp
test
ds
jg
mov
fcomp
push
imul
mov
scas
fwait
push
es
and
pop
std
mov
ljmp
mov
dec
sub
sbbl
repz
mov
sub
push
mov
popa
movb
cmp
or
adc
aas
pop
pop
mov
cmpsl
cld
adc
test
mov
inc
sub
dec
xor
sbb
call
sldt
ret
movsb
pop
dec
in
lea
ds
or
out
leave
mov
imul
aas
push
aam
call
movsl
sbb
hlt
iret
ror
push
dec
pop
pop
mov
mov
mov
es
cwtl
pop
lcall
mov
push
stc
or
arpl
and
loop
icebp
ljmp
sbb
lods
rcrl
push
in
enter
mov
addr16
push
jnp
insb
dec
jo
cld
mov
jge
and
sbb
push
out
inc
jp
pop
dec
rcr
push
cmp
xchg
mov
inc
xchg
insl
test
scas
adc
ret
movsl
pop
mov
sbb
xor
lret
imul
dec
xor
dec
and
in
lret
inc
je
daa
shlb
and
jns
int
cmp
int3
inc
ljmp
cli
imul
adc
mov
jne
popa
inc
add
popa
stos
or
lret
ficoml
clc
sub
lret
lods
dec
sub
sbbl
movsb
mov
repz
cld
sub
pop
dec
mov
pop
pop
stos
lods
nop
aaa
insl
in
sbb
outsb
aaa
incb
cmp
loope
leave
push
mov
mov
sbb
sti
mov
jp
aaa
in
and
inc
mov
adc
mov
mov
jnp
jne
fwait
movb
mov
fimuls
bound
jne
sahf
stos
push
test
fsubrl
fdivr
inc
pop
insl
out
fld
inc
xchg
test
ja
loopne
pop
push
shrl
push
cmpsl
push
fnstsw
lock
push
cld
jge
into
adc
inc
rorb
js
xchg
loopne
loope
scas
adc
push
das
lret
rcrl
xlat
pop
mov
fcmovb
jb
push
mov
pop
mov
lods
push
jb
adcb
sub
dec
test
stos
notb
jno
cmc
sbb
movb
mov
daa
aas
test
aad
shlb
sbb
aas
fdivs
xchg
shll
dec
stos
mov
aaa
ja
into
aas
inc
aas
sti
xor
add
jle
arpl
aaa
jecxz
das
dec
setno
add
add
mov
test
mov
and
in
lcall
out
js
pop
addl
aad
divl
cs
push
mov
push
xor
and
xchg
pop
hlt
dec
or
adc
cmp
mov
add
push
mov
decb
loopne
pop
cltd
sbb
les
addb
jns
xchg
push
pop
fldenv
xor
push
std
mov
jmp
pushf
int3
xchg
or
cli
add
sbb
mov
sbb
iret
mov
mov
cmc
js
xchg
inc
push
jl
test
mov
pop
cld
movsb
rorl
iret
insb
pop
or
mov
xchg
jmp
daa
add
inc
cmp
xchg
in
pop
xchg
and
mov
mov
test
cmp
jnp
mov
mov
inc
arpl
mov
inc
imulb
push
cwtl
add
jne
push
jbe
cmp
test
pop
inc
push
pop
outsb
sti
add
pop
adc
adc
cmp
add
push
popa
imull
adcb
mov
in
sbb
loopne
sub
lds
or
sub
pop
inc
lea
jecxz
cmp
in
jb
das
pushl
pop
subb
outsl
insl
sbb
icebp
push
ja
dec
rorb
push
mov
jp
mov
shll
xor
fistpl
mov
dec
mov
stos
xchg
lahf
cmpsb
sbb
dec
sbb
stos
and
icebp
fidivrl
cli
inc
in
arpl
ret
dec
mov
dec
lret
pop
sub
test
cmp
mull
inc
add
jnp
add
hlt
mov
pusha
mov
sub
jo
push
sbb
test
sbb
lcall
sub
ss
inc
insb
popf
addr16
stos
int3
cmp
push
and
lea
movsb
or
sub
notb
jmp
mov
cmp
add
mov
ret
lea
fbld
fpatan
sub
mov
adc
insb
imul
repz
jle
push
repnz
cmpsl
inc
lahf
mov
shr
dec
test
lcall
mov
nop
add
mov
cmp
dec
out
jns
push
std
and
mov
vmread
data16
into
xor
lret
daa
cmpsb
testl
ret
cli
mov
xchg
fwait
mov
loop
ja
out
lret
std
push
loope
lcall
xor
push
test
clc
sub
data16
scas
mov
fsubp
add
outsl
push
ds
ljmp
ljmp
mov
daa
lahf
xchg
dec
pop
push
stos
mov
jae
cmpsb
mov
clc
cs
pop
push
push
loope
sbb
sub
add
jg
out
fistpl
mov
jno
js
adc
adc
movsl
and
dec
sub
sub
gs
jecxz
xor
loop
popa
mov
inc
fdivl
add
sub
sub
mov
add
cmc
push
lods
xlat
pop
loop
aad
push
lret
or
sbbl
pop
insl
or
mov
stc
add
and
jo
mov
xor
pop
cwtl
fcmove
mov
inc
jl
enter
cltd
push
int
lds
ret
push
jmp
mov
loop
cmp
xchg
jl
es
in
stc
in
cmp
inc
pop
test
mov
push
jmp
ja
jle
jnp
dec
gs
xor
sub
push
and
sub
js
cmpsb
pusha
and
xchg
lods
cmp
hlt
lcall
cmp
test
jo
lods
xor
adc
fs
sub
stc
pop
jno
mull
popf
loope
mov
lods
xlat
jg
xor
push
push
xor
push
ss
ja
ret
xor
inc
pop
test
lret
loop
imul
jg
test
ss
lahf
aaa
into
inc
test
pop
rorl
negb
fwait
and
jo
or
add
xchg
and
test
mov
and
xlat
sbb
adc
or
adc
sbb
cli
cmp
sarl
out
sbb
inc
iret
mov
loopne
jmp
iret
ja
aam
jo
rorl
or
jg
inc
jns
xchg
loopne
jbe
int3
and
inc
pop
xor
jecxz
dec
cmpsl
jno
shrl
js
idivb
push
mov
mov
pop
fnstenv
rcrb
push
xor
or
in
ficoml
scas
js
mov
jl
testl
rorl
or
add
cmp
pop
pop
sbb
push
addl
stos
movsl
inc
cltd
mov
xchg
add
sbb
aas
mov
aad
mov
mov
out
movsl
rcll
mov
pusha
and
repz
cltd
lods
mov
int3
outsl
mov
sub
jg
mov
imulb
jno
xchg
lret
sub
pop
rorb
sub
push
mov
out
loope
mov
cmpsb
push
xor
arpl
or
sub
jno
leave
adc
cmp
pop
insb
lcall
mov
mov
mov
adc
sub
out
in
sub
pop
mov
xchg
dec
jno
imul
int3
sbb
scas
push
add
mov
xor
fldt
push
cmp
outsl
adc
insl
adc
out
stos
out
dec
mov
imul
cmp
jnp
out
sub
stc
popa
mov
sbb
ds
sarl
or
inc
jl
jl
mov
jl
sub
test
aas
sub
dec
mov
daa
insb
imul
dec
aas
subb
pop
aaa
out
inc
stos
add
rep
and
aam
in
mov
dec
lods
fsubl
movsl
jo
or
test
mov
fadds
or
xorb
popa
lret
mov
aam
sub
leave
dec
jae
dec
mov
dec
lock
movsl
out
ret
data16
mov
addr16
loop
add
rcll
rcr
popf
mov
xchg
cmp
mov
faddl
push
dec
push
jmp
ljmp
imul
xor
adc
push
jge
psrld
or
lret
lret
cmp
jb
push
cs
mov
js
mov
leave
call
or
mov
out
in
cmp
xchg
or
adc
jb
in
ljmp
int3
notl
jge
movsb
xchg
sub
mov
adc
add
loope
mov
lods
int
pop
mov
fwait
stos
mov
jmp
adc
loop
notb
push
ret
repz
stos
sub
pop
popa
sbb
push
incb
pusha
scas
cmc
gs
push
xchg
or
add
push
bound
add
mov
or
icebp
imul
fists
xor
aad
cs
xlat
xchg
sbb
sub
lds
test
push
sub
in
arpl
mov
into
push
dec
and
int3
test
or
sbb
mov
dec
push
inc
or
jnp
outsl
xlat
sbb
mov
and
ljmp
aas
sahf
cmc
into
hlt
inc
inc
or
inc
cmc
lods
movsl
data16
push
jbe
or
flds
mov
lods
rorb
adc
pop
sbb
and
pop
inc
mov
dec
mov
cmpsl
sbb
dec
ljmp
or
sub
dec
xor
mov
mov
sbb
pop
push
pop
fdivs
lods
pop
fdiv
jno
add
jle
xchg
je
out
or
cmp
sub
insb
cmp
cmp
addr16
lea
pop
sub
xor
stos
dec
mov
xchg
adc
or
mov
movsl
pop
jmp
dec
add
dec
popf
scas
push
dec
nop
in
pop
loope
mov
jle
clc
xor
jns
lcall
test
inc
push
mov
xchg
outsb
mov
jmp
int
fimull
int3
or
mov
mov
insl
call
sbbb
int3
sub
enter
sbb
xlat
notl
mov
stos
test
add
cli
es
xchg
xchg
mov
pop
xor
pop
stos
add
and
mov
test
roll
sub
sahf
push
jno
mov
mov
mov
bound
and
cld
inc
pop
xor
jns
fnstcw
sub
mov
orl
jl
fisubrs
mov
push
fcoml
rep
je
cmp
pop
lcall
jge
cmp
push
test
scas
outsl
leave
inc
xlat
sbb
sbbl
ljmp
cmp
insl
test
sub
adc
int
dec
inc
sub
aaa
je
in
pushf
mov
mov
cmp
push
add
and
xchg
test
lret
in
jns
cli
xchg
xchg
mov
xchg
aaa
mov
sti
stos
fisubs
mov
mov
cltd
cmp
lcall
cmpsb
daa
popa
cli
mov
icebp
jno
lret
in
pop
arpl
jp
hlt
fwait
je
xorb
movsl
push
imul
cmp
loope
test
insb
mov
pop
mov
repnz
enter
cmp
sub
inc
lcall
out
push
cmp
sub
jae
lret
mov
lock
mov
popa
inc
and
mov
addr16
jns
push
popf
je
lcall
nop
pushf
adc
mov
mov
mov
shlb
or
mov
mov
xor
or
jbe
jns
xor
cwtl
vunpckhpd
mov
adc
pop
sbbl
std
xchg
sti
fldenv
lds
or
rcrb
jb
xor
insb
insl
mov
cmc
stc
adcb
movsb
inc
aas
leave
out
lds
jb
jo
and
mov
push
fimull
mov
mov
ret
rclb
xchg
mov
adc
scas
ja
imul
pop
sarb
push
xchg
decl
xchg
or
or
lods
and
add
lods
push
cmp
push
cmp
xor
mov
adc
xchg
or
fdivs
dec
mov
add
cld
mov
sbb
mov
andl
inc
loopne
pop
sbb
sub
lock
inc
sub
scas
lret
lret
pop
in
dec
mov
sbb
xlat
mov
dec
mov
mov
cmc
push
bound
pop
pop
xor
scas
jae
sbb
rolb
nop
repz
mov
popw
sub
sti
ret
adc
xor
and
jb
fnstenv
and
inc
xor
mov
test
sbb
dec
xchg
jecxz
and
lcall
dec
aad
in
in
sbbl
pop
dec
cmpsb
in
rorb
in
aaa
mov
mov
out
and
in
mov
imul
add
fbld
push
xorb
ret
mov
sub
aaa
mov
fwait
dec
mov
loop
jne
and
adc
xchg
sub
fldl
cmp
sbb
test
cwtl
js
in
loop
jno
in
xor
mov
out
push
xor
cmp
inc
inc
inc
lds
mov
push
pop
roll
fst
xor
insb
fcoml
out
std
mov
fwait
xchg
inc
loope
int3
add
in
or
jle
add
jnp
in
fs
jae
and
cmpsl
dec
mov
repnz
inc
cld
dec
idiv
call
scas
xchg
fbstp
pop
setp
pop
mov
dec
movsb
xor
jb
jmp
adc
clc
cmpl
lds
dec
or
inc
imul
xor
aaa
pusha
repnz
test
pop
xchg
sub
pop
movsl
mov
or
aas
xchg
lea
jb
and
jl
nop
test
sbb
sub
pop
cmp
movsl
jns,pt
cmp
and
jnp
lock
dec
mov
rcl
mov
lds
xor
add
data16
lcall
rcl
int3
cmpl
cld
jnp
jne
ror
iret
aas
sbb
repz
out
pop
inc
jecxz
adc
pop
xor
aas
cmp
push
inc
out
cmp
cmp
cwtl
pop
sub
fidivrl
xlat
cmovl
dec
add
insl
out
jns
push
xchg
mov
jge
flds
push
sub
mov
lret
adc
cmp
icebp
or
dec
lods
les
les
pop
adc
xchg
js
pop
outsl
mov
jle
cmp
cmpl
int
jl
jmp
fxch
icebp
dec
out
fcoms
mov
push
inc
dec
mov
fisttpl
jae
fists
gs
jno
test
sbb
fdivrp
push
addl
inc
inc
or
cmp
dec
mov
ds
je
rorl
lods
mov
jp
les
fistps
mov
int3
sbb
pop
adcl
sbb
dec
lret
or
out
insl
leave
insb
pop
jg
arpl
pop
pop
push
add
jge
icebp
fidivl
inc
push
clc
es
sub
lret
push
or
sbb
cmc
cs
int
ss
or
sbb
jnp
inc
cmp
call
andb
dec
ret
test
mov
fcoms
test
bound
xchg
aaa
pop
in
dec
mov
sub
adc
ret
pop
jl
mov
push
or
in
pop
mov
stc
into
fsts
fsubl
lcall
cld
int3
test
cmp
clc
loope
pusha
out
outsb
outsb
notb
rep
lret
ror
loop
adc
push
test
pop
loope
pop
lret
jbe
fstps
sub
shl
sub
fisubl
shl
and
xor
hlt
jecxz
mov
inc
jl
jmp
sbb
lret
bound
outsb
arpl
xor
push
popf
cltd
stos
xor
cli
icebp
ret
aaa
jge
aaa
push
mov
xor
mov
rcrb
sub
adc
xchg
xor
ljmp
jbe
sbb
and
insb
push
dec
repnz
inc
dec
fldenv
dec
mull
inc
xorl
ja
push
jo
mov
loope
mov
pop
out
xlat
mov
adc
adc
aaa
mov
cmp
shl
xor
test
je
fidivrs
cmp
fmull
push
jbe
sbb
jne
mov
mov
mov
outsl
inc
adc
dec
pop
cmc
xor
fldl
ja
test
push
push
jnp
scas
cmp
movsb
aam
add
mov
icebp
push
dec
sahf
sti
add
cmp
jle
clc
push
out
icebp
push
mov
mov
pop
test
shrb
sahf
inc
notl
pop
xchg
pop
fldenv
mov
sub
fists
dec
shr
scas
aas
rcrl
cmpsl
or
push
out
push
fmull
push
ja
jmp
inc
std
xchg
inc
sbb
sub
call
imulb
cmp
imul
mov
ljmp
hlt
xor
pop
cmc
dec
mov
adc
dec
fstpt
insl
lcall
sbb
push
xchg
adc
or
inc
mov
jg
jl
sbb
lea
dec
pop
mov
lret
je
jno
test
into
add
sbb
ja
dec
mov
pop
out
xlat
mov
push
mov
loop
clc
sub
shlb
js
xchg
stc
push
pop
lret
xchg
xchg
dec
ss
push
cltd
mov
or
mov
lods
push
loope
inc
out
subl
dec
push
js
mov
ficoms
lods
shrl
and
dec
test
loopne
mov
fs
sbb
repz
jns
roll
mov
mov
jl
lret
jg
or
cmpsb
ret
adc
inc
pop
insb
outsl
push
xchg
xchg
or
jge
sub
mov
rdmsr
nop
adc
jno
jmp
jo
and
les
sbb
jg
in
ja
dec
fcomp
aam
and
sub
push
cmp
scas
lods
ss
mov
jns
adc
cld
dec
push
dec
test
dec
fistpll
sub
cwtl
mov
xor
pop
movsb
mov
push
mov
jb
push
mov
pop
repz
das
out
or
inc
imul
add
cld
push
xchg
push
arpl
inc
jns
sbb
xor
cs
sbb
cmp
inc
jl
scas
dec
add
popf
mul
test
sbb
mov
mov
hlt
pop
push
or
mov
jbe
and
popf
scas
jecxz
inc
xchg
int3
stos
xor
cli
jnp
fimull
into
scas
cmp
andl
pop
sbb
lcall
xor
and
inc
mov
jmp
popa
cli
or
sbb
test
sub
jge
loope
pop
daa
mov
mov
push
nop
sarl
adc
sti
addr16
das
fs
clc
nop
pop
pop
insb
mov
inc
adc
push
rcr
testl
pushf
ljmp
into
mov
jl
pop
jg
sbb
cld
mov
gs
dec
adc
enter
lret
dec
pushf
inc
mov
cmp
es
repz
xchg
lcall
xchg
or
imul
arpl
xchg
aam
mov
or
repnz
test
js
pop
mov
xchg
jno
cmpsl
sbb
js
push
sub
movsl
sarl
jp
imul
push
and
mov
in
cltd
repz
xchg
push
inc
dec
fst
fiadds
mov
icebp
popa
sbb
mov
jno
call
mov
js
xchg
mov
lcall
fs
dec
fdivl
and
shll
popa
jnp
add
hlt
jp
lcall
jle
aad
push
cmp
add
sbb
clc
sbb
rcrb
pop
jge
push
nop
fcom
jle
imul
xchg
out
and
fdivrs
aaa
sbbb
jno
mov
inc
mov
std
cltd
lret
scas
xchg
stos
push
stos
imul
shll
jnp
jae
mov
adc
std
add
fmuls
push
mov
push
cwtl
push
xchg
into
push
inc
adcb
jge
into
add
icebp
jns
loope
fwait
hlt
cmp
clc
cmp
out
dec
loop
add
test
xchg
in
inc
push
divb
dec
push
ret
scas
cwtl
mov
pop
bound
adc
mov
lahf
xchg
sbb
xchg
outsl
addr16
push
xchg
and
inc
pushf
sbb
xor
add
jge
repnz
sbb
mov
push
gs
test
rorb
pop
pop
mov
fsubrp
add
or
sti
push
std
mov
inc
inc
mov
call
out
jo
jmp
sbb
push
outsl
adc
pop
xchg
loop
outsl
aas
pop
out
fwait
cs
sbb
inc
rolb
lahf
jg
ds
ret
fcom
js
loopne
mov
enter
or
add
sbb
ret
xor
xchg
cmp
cmp
repz
add
cltd
inc
cmp
mov
mov
add
inc
repnz
cmp
cmc
stos
push
fists
jge
jmp
cmp
sub
into
xchg
or
pusha
fsubl
fldenv
inc
add
cmp
xchg
adc
aas
adc
popf
lods
xor
test
inc
gs
popa
jno
rcl
pop
fst
int3
dec
xor
cltd
xchg
cmp
sbb
in
lea
fidivl
or
dec
fs
sahf
aas
mov
lcall
nop
push
fldenv
push
ds
mov
out
out
add
lret
mov
pop
mov
and
cltd
bound
notl
xor
and
hlt
sbb
ja
and
pusha
jg
movsl
push
mov
push
pop
xor
cmp
bound
sub
rorl
sti
pop
mov
rclb
jl
adc
fsubs
lods
pop
inc
cmp
xchg
aad
stos
xchg
outsb
push
inc
cmpsl
out
or
insl
out
mov
cld
push
mov
loop
cld
dec
push
imul
stos
and
adc
cld
test
mov
shlb
int3
fcmovne
repnz
cmp
mov
popf
imul
dec
ret
lock
aad
out
insb
je
push
jecxz
inc
sbb
cmp
xor
and
mov
adc
iret
or
mov
loop
test
xchg
push
adcb
sbb
pushf
jg
or
sub
aam
rcll
mov
mov
cmp
aaa
pop
inc
xlat
aas
idivl
push
fimull
aad
jecxz
mov
sbb
add
mov
scas
cmp
mov
sbb
jb
iret
cmp
bound
loopne
sarl
inc
js
mov
add
scas
mov
cmpsl
adc
cmp
mov
iret
mov
mov
daa
dec
stos
out
stos
cmp
mov
inc
jae
mov
rep
pop
add
es
jnp
pop
jle
jne
cmp
jp
xor
lret
decb
outsl
push
ret
mov
jne
loope
sbb
or
popa
stos
out
aam
inc
mov
ljmp
popf
loop
lods
add
adc
lea
les
stos
inc
cs
sub
faddl
mov
addb
mov
mov
mov
insb
push
dec
clc
data16
push
shlb
mov
cmpsb
fsubrs
lock
mov
pop
ffreep
mov
add
aas
sub
mov
xchg
aam
pushf
xchg
mov
leave
and
in
je
sub
mov
jbe
mov
movsl
add
jmp
sub
gs
movsl
aam
xchg
pop
push
sub
mov
xchg
or
pop
subl
add
ret
stc
jle
adc
cwtl
insb
jb
clc
out
xchg
divl
out
test
pushf
add
or
add
inc
jp
je
inc
lea
jmp
mov
push
adc
lret
sti
fidivrl
movsb
push
movsl
imul
pop
shrl
movsb
push
and
iret
xchg
daa
lods
outsl
or
in
out
shlb
int3
pop
imul
pminsw
mov
nop
mov
dec
sbb
xor
lock
mov
imul
popa
sbb
lods
clc
jae,pn
jg
xchg
mov
mov
gs
mov
out
inc
add
jb
mov
lea
rclb
hlt
movsl
mov
xor
call
ss
jecxz
jno
xchg
sti
mov
ret
popa
push
pop
lock
jnp
pop
jo
mov
sub
dec
pop
scas
repz
dec
mov
aaa
fadds
cmpsl
imul
xchg
jo
stc
lret
cltd
xchg
jbe
lods
jl
sbb
jb
aaa
mov
pop
sti
lea
mov
pop
and
xor
scas
sub
movsl
arpl
sub
psubw
pop
jae
lea
cmp
cs
insb
sub
and
addb
ja
cwtl
jl
mov
mov
les
inc
dec
lods
sub
frstor
sti
loop
sahf
pop
in
mov
jo
jl
xor
nop
out
jle
mov
or
jae
lcall
mov
inc
mov
xlat
gs
xchg
sub
fwait
dec
arpl
je
iret
sub
sbb
bound
mov
imul
or
xchg
pop
jb
punpcklwd
aaa
mov
pop
fldt
mov
mov
inc
icebp
dec
add
adc
int
mov
rolb
das
ljmp
fwait
cwtl
repz
out
mov
pop
add
sub
jp
dec
jnp
hlt
ret
cld
xchg
popa
mov
imul
loope
ss
pop
movups
clc
popa
in
mov
inc
in
cmc
scas
aad
std
scas
js
xchg
jecxz
sub
mov
ss
repz
lock
mov
orl
or
pop
insb
arpl
inc
int
scas
cld
mov
mov
movzbl
push
jg
cltd
sahf
xor
cmp
popf
xchg
cmp
int3
mov
jl
out
loop
je
dec
push
fisubs
ret
mov
js
mov
jle
mov
mov
jns
sub
mov
pop
pusha
insb
or
clc
jmp
in
xchg
dec
clc
lods
push
add
mov
rorl
lret
push
fucomi
in
loop
sub
push
mov
xchg
mov
popf
and
rclb
imull
pop
sti
sub
fimuls
mov
movsb
or
dec
and
add
mov
ljmp
push
inc
rcr
sub
mov
jmp
loopne
dec
cmp
xlat
push
xchg
mov
xor
jno
sbb
jae
jl
hlt
add
insl
mov
pop
sbb
cmpb
jnp
lcall
push
cmpsb
movb
cwtl
or
dec
outsl
mov
imul
add
dec
mov
cwtl
push
mov
push
fdivr
xchg
mov
lds
or
and
lret
and
mov
test
adc
mov
or
das
das
out
inc
int3
sbb
push
lahf
sbb
outsl
data16
ljmp
lret
scas
adc
pushf
jmp
pusha
jo
mov
and
pcmpeqb
mov
ja
js
out
push
add
adc
inc
lcall
movsb
int3
hlt
sbb
andl
mov
rcll
sub
popa
xor
xchg
fsubr
cmp
je
push
mov
mov
xchg
push
pop
mov
popf
aam
or
lahf
cli
fcompl
outsb
push
sbb
and
pop
mov
bound
add
psadbw
out
dec
xor
int
sub
jae
inc
xor
add
or
add
test
or
push
cmc
outsb
adc
in
mov
and
adc
sbbl
clc
mov
hlt
leave
test
movsb
add
mov
stos
mov
jp
cmp
pop
addl
call
mov
stos
lcall
leave
std
jmp
stos
mov
dec
add
xchg
stos
jmp
lret
lock
pop
lret
fwait
pusha
scas
ds
cmp
and
or
jp
mov
enter
inc
clc
xlat
insl
cltd
nop
orl
mov
cld
les
or
scas
stos
inc
add
int3
jnp
push
or
mov
sbb
lea
movsb
lcall
mov
mov
daa
jno
pop
inc
cli
pusha
mov
leave
dec
ret
sbb
jae
xor
and
jno
pop
pushw
jnp
jbe
imul
gs
adc
cmpsl
adc
sub
mov
jmp
xchg
loopne
adc
push
arpl
es
mov
cmovle
arpl
cmc
mov
and
movsb
sbb
rcrb
mov
mov
adc
mov
js
gs
imul
mov
shlb
pop
aad
call
pop
mov
shrl
arpl
cli
sbb
xchg
les
shl
call
leave
ljmp
out
pop
inc
or
call
out
fs
dec
jg
aam
cmp
cmp
and
or
pand
imul
aad
xor
les
jmp
pushf
jp
scas
mov
popa
push
in
jmp
jg
pop
stos
push
bound
sti
inc
addb
ds
mov
daa
push
jnp
inc
jmp
dec
mov
or
cs
push
push
out
scas
xchg
mov
sbb
cmp
push
sbb
pop
jg
lret
fldcw
xchg
out
sti
pusha
pop
inc
push
stos
jne
jae
shll
adc
adc
push
mov
pop
mov
jnp
mov
in
js
jge
jp
cmp
add
mov
popf
pop
cmp
ja
mov
ljmp
add
push
pop
fnstenv
push
jp
clc
sub
inc
mov
jns
loop
rcr
stc
mov
popf
sahf
lahf
gs
pop
xor
call
lret
loope
and
or
adc
insb
arpl
jne
mov
mov
xor
and
lock
rolb
xchg
push
inc
cltd
subl
int3
ja
in
xor
iret
lock
jecxz
fwait
or
call
rol
fdivrs
clc
mov
dec
jmp
push
fstpt
dec
sub
mov
lods
add
rolb
xchg
mov
sbb
shr
jg
lods
movsb
sub
xor
add
shrb
das
xchg
cwtl
sub
stos
pop
push
adc
push
mov
loopne
pop
add
fnstcw
out
fiaddl
imul
cltd
mov
jo
outsl
add
push
mov
add
push
sbbl
push
mov
test
scas
mov
mov
bound
fs
out
xchg
shll
sub
cmp
mov
lds
pushf
mov
cmp
sbb
push
aaa
jge
adc
not
aad
nop
insl
or
aaa
adc
int
pushl
popf
out
xchg
xlat
adc
mov
into
bndldx
call
paddusw
cmp
jmp
stos
jle
or
inc
call
ja
sbb
lret
push
ss
pop
lea
ja
stos
into
cmp
rolb
ds
pop
aas
add
loope
hlt
xchg
stc
add
outsb
sahf
inc
sbb
add
inc
sub
and
aad
inc
mov
les
or
sub
mov
push
jo
xchg
dec
or
insb
push
inc
adc
scas
and
push
lcall
mov
sbb
and
inc
loop
je
ja
pop
and
mov
sub
fsts
jb
or
push
sub
or
inc
clc
and
imul
ss
fildll
lahf
addr16
stos
xor
add
xor
rcr
lock
add
fisttps
pop
out
xchg
xchg
dec
cmpl
andl
mov
sub
iret
xchg
dec
pop
mov
sbb
fdivs
xor
xor
sbb
xchg
cs
adc
pop
shl
xor
aaa
movsb
push
xlat
xchg
adc
int3
mov
aas
cltd
negl
test
lcall
cmpsl
outsl
sti
addl
std
add
loop
outsl
cld
pop
xchg
xchg
int
sbb
notb
pop
mov
enter
or
or
xor
cmp
js
push
jb
jo
push
or
sbb
add
xor
aaa
std
mov
jne
je
jb
push
pop
ja
inc
pusha
test
pusha
rcll
add
pusha
xor
mov
bound
stos
loope
or
push
pop
mov
push
xlat
adc
dec
into
jns
xchg
add
xor
data16
mov
int3
mov
add
push
sub
js
leave
mov
sbb
shlb
stos
cwtl
imul
mov
push
es
ds
add
add
jne
cmp
push
call
inc
pop
pushf
jl
lahf
sbb
les
repz
icebp
mov
loope
aaa
cs
notb
subl
icebp
arpl
mov
cltd
dec
ss
imul
push
mov
sahf
add
and
andb
stos
sahf
xchg
cmp
insl
call
mov
imul
pop
and
sarl
pop
lds
outsl
cmp
xor
add
push
xchg
adc
out
xchg
pop
push
push
xchg
cmp
cwtl
xchg
sub
dec
addl
fbld
cmp
outsl
scas
pop
xor
aad
ds
popa
fwait
push
add
jecxz
in
jbe
mov
xchg
mov
jg
add
repnz
sbb
mov
push
out
add
jg
sub
divb
daa
fadd
pushf
inc
fldl
into
iret
xor
pop
loopne
jae
pushf
push
mov
add
les
imull
mov
insl
lods
mov
sub
mov
pop
in
loope
jb
cmpsb
mov
lret
dec
fbld
sarl
in
or
movsb
push
sbb
pop
imul
outsl
js
mov
add
sbb
sahf
mov
dec
mov
inc
push
stc
mov
pushf
les
xlat
movsl
push
jmp
mov
push
loopne
inc
pushf
mov
and
sarl
mov
das
loopne
inc
sti
les
cli
int3
fistpl
push
iret
lret
fs
jno
add
dec
imul
dec
pusha
push
push
sbb
cmpl
lret
dec
mov
popa
cmc
push
pop
sbb
aam
ljmp
push
subb
or
mov
fsub
mov
les
adc
sbb
out
or
push
sub
stos
out
insl
movsb
mov
stc
fnstenv
mov
mov
frstor
add
xchg
lahf
sub
push
pop
sti
lds
mov
movsl
sbb
rcr
popf
mov
add
jmp
sbb
rolb
ret
push
or
int
in
pop
xlat
addr16
xor
jle
add
imul
sbbb
push
gs
pop
sbb
test
push
inc
push
sti
jmp
mov
scas
imul
add
jl
inc
cwtl
and
mov
ja
push
test
imul
icebp
shll
sbbl
popf
cwtl
cmpsb
push
inc
xchg
pop
inc
scas
enter
es
je
in
xor
in
ret
ljmp
inc
dec
mov
sbb
jmp
and
aas
iret
aas
movsb
adc
mov
sbb
push
loope
bound
jns
loopne
loope
stos
int
xchg
or
dec
mov
sub
sub
rolb
sysenter
test
out
and
dec
inc
cmp
and
rorb
pop
jo
pop
inc
arpl
adc
sub
outsb
xchg
sti
push
clc
adc
cs
lods
testl
mov
dec
pushf
mov
jecxz
nop
push
dec
inc
pop
je
daa
insb
movsl
adc
push
push
mov
mov
push
addl
cmp
mov
xor
sub
inc
out
inc
xor
push
in
mov
test
in
sbb
cmp
stos
in
mov
mov
adc
jle
out
stos
lea
sub
fidivl
aas
test
and
shll
shll
inc
add
sub
xlat
fistpll
nop
sub
xor
dec
jae
negl
push
sbb
inc
xchg
mov
xor
add
lea
jbe
cmp
cli
mov
cld
icebp
lods
lret
sbb
pop
inc
mov
out
cmp
in
pop
inc
adc
loope
mov
cmpsl
jg
push
in
xchg
data16
sub
mov
jp
jnp
dec
mov
xchg
cltd
jno
jbe
xlat
pop
mov
fwait
js
and
or
lahf
sbb
fwait
insl
dec
adc
call
adc
loopne
iret
sub
arpl
test
push
movsl
lret
xor
sbb
dec
pop
idivb
cwtl
xor
idivl
in
je
xor
sarb
inc
pop
push
in
lret
test
cltd
xlat
fstps
les
pop
and
adc
mov
xor
xchg
sbb
scas
adc
mov
push
mov
cmp
int
stos
xor
pusha
iret
fs
cs
in
fdivrl
mov
pusha
jns
mov
lret
aas
stc
fisubs
cwtl
imul
jb
ret
ss
cmp
test
shrl
das
add
fnstcw
cmpsb
out
cmp
xchg
mov
adc
push
or
push
pop
sahf
push
rol
out
jnp
pop
xchg
sar
cmpb
clc
fldl
cmp
jl
inc
dec
cmc
jge
cmp
cmp
jbe
sahf
xor
leave
rorl
cmp
fcomi
sbb
insl
sbb
and
jb
mov
je
fs
inc
jge
ljmp
jg
inc
sbb
lahf
pop
das
jne
cs
daa
lret
mov
rclb
push
scas
sarl
es
xchg
loop
cmpsl
cmp
mov
jo
add
jnp
jle
enter
cltd
movsb
lock
rsm
push
in
stc
adc
test
hlt
bound
adc
or
xchg
cmp
movsb
adc
sbb
shrl
out
sub
dec
and
push
and
les
xchg
sub
mov
in
add
or
arpl
imul
jne
or
lods
rolb
cld
add
and
sbb
jg
punpckhbw
jle
fidivrl
loop
cmp
dec
pusha
push
xchg
xor
cmp
out
xchg
mov
jb
ficomps
aad
shll
popa
mov
mov
sub
cmp
mov
jno
push
dec
and
push
sbb
bound
lods
and
test
das
pop
gs
push
out
ficoml
mov
mov
pop
adc
xchg
test
sbb
pop
pop
xor
push
sbb
mov
xchg
or
mov
lret
rcrl
jle
bound
shlb
aad
xor
cmp
mov
push
jecxz
shrb
rcll
inc
nop
mov
stos
cmp
adc
imulb
and
adc
push
js
rorb
inc
loope
push
in
out
cmc
dec
ror
std
xchg
and
enter
movsb
xor
fisubrl
cmp
out
addl
dec
pop
cli
cltd
adc
dec
inc
mov
mov
shlb
and
push
ds
jae
cmp
imul
insb
sub
mov
stos
dec
push
jge
cmpsl
mov
testl
imul
pop
hlt
push
cmp
fs
cmpb
mov
mov
add
or
ret
lock
in
loope
add
add
sub
sub
push
sbb
push
or
mov
cmp
scas
push
mov
inc
stc
jmp
pop
mov
nop
dec
ret
ss
mov
pop
gs
xchg
dec
test
push
xor
inc
xchg
pushf
cmp
mov
fisubl
rorb
push
ljmp
es
sbb
push
stos
jg
adc
fdivl
repnz
jmp
adc
pop
mov
mov
arpl
mov
fdivs
lahf
stos
mov
test
dec
in
cmp
cmp
out
or
leave
scas
dec
xor
inc
in
cmpsl
add
icebp
repz
aam
jge
jno
in
cs
pusha
cltd
push
stos
pop
fwait
mov
subb
mov
push
xor
cmp
lock
mov
xchg
push
rcr
jns,pt
xor
jns
in
and
push
je
push
cld
mov
adc
loop
sub
sti
scas
orb
sahf
loopne
arpl
das
mov
jmp
aam
imul
mov
dec
imul
push
lock
dec
ret
in
mov
cmp
mov
or
add
dec
shll
xor
dec
push
push
pop
aad
rcr
xchg
pop
imul
sbb
jp
xchg
jno
mov
gs
pop
xor
or
outsb
and
aas
mov
stos
imul
aas
xor
test
cwtl
in
xchg
clc
mov
mov
add
xchg
jmp
inc
lock
in
or
stos
daa
arpl
xchg
test
inc
je
cwtl
xor
repz
out
xor
test
cli
mov
fstpl
and
std
les
push
popa
mov
sub
jecxz
out
iret
pop
jno
dec
loop
jl
pop
jle
inc
adc
mov
rclb
jmp
adc
les
mov
or
sbb
lods
aam
aas
push
jmp
sbbb
pop
pop
test
push
xlat
in
pop
pushf
jmp
add
ret
add
push
repz
and
adc
lea
push
mov
xchg
cli
cmc
rolb
mov
hlt
or
mov
adc
mov
or
fs
mov
xchg
xor
cltd
or
insb
lret
push
popf
call
jae
mov
pop
dec
repz
sub
test
xchg
pop
mov
adc
lods
sbb
jge
loopne
jmp
shrl
push
mov
jns
jmp
jo
cmc
cmpsb
fnstenv
int3
das
pop
pop
and
sub
sbb
jmp
xor
pop
sbb
or
cmp
sbb
test
xchg
jne
jge
push
cmp
aad
dec
pop
in
push
jnp
fstp
cmc
call
in
mov
aaa
push
jae
sbb
stc
addr16
std
jl
or
dec
xor
jo
scas
push
xchg
adc
push
inc
int
mov
sbb
lock
cwtl
outsl
shlb
mov
sbb
sti
negl
push
sarb
sti
jbe
enter
fcmovne
cwtl
dec
jl
mov
imul
cmp
pop
hlt
jp
cwtl
lds
inc
rcr
ret
xlat
xchg
cmc
xchg
cltd
shlb
mov
mov
pushf
movl
cli
xorb
popa
cmpsl
out
lcall
dec
pop
cmp
js
jmp
xlat
jnp
mov
mov
cwtl
pop
test
std
pop
stos
addr16
punpcklwd
int3
jge
jae
sti
xor
les
dec
mov
add
sbb
pop
ret
adc
mov
xchg
ljmp
dec
jg
sbb
adc
sti
mov
movsl
pop
out
imul
cmp
cmp
pop
push
adcl
shl
xchg
sahf
pop
andb
xchg
cwtl
in
and
ss
adc
fistps
mov
aas
sub
movsb
fadds
in
or
fs
adc
icebp
out
rcl
jecxz
in
mov
push
mov
or
aas
xchg
sub
pop
dec
out
fwait
gs
pop
cmp
aam
fdivr
iret
clc
inc
xchg
and
cmc
scas
push
test
add
push
leave
aas
add
pop
clc
and
xchg
clc
std
stos
dec
adc
sbb
insl
mov
dec
cmc
insl
jb
rcll
pop
cmp
and
cmp
icebp
jmp
in
rcr
lods
mov
adcl
sbb
adc
jae
test
adc
cli
ljmp
addr16
mov
pusha
sti
movd
sbb
pop
stos
adc
cmp
push
sbb
pop
add
iret
es
mov
pop
jnp
daa
jb
mov
mov
leave
scas
daa
sub
fstl
fsubl
push
movsl
cmp
pop
mov
enter
js
fxam
nop
scas
and
repnz
or
cmova
jmp
add
xchg
ret
xchg
es
call
out
or
and
repz
ret
fwait
mov
pop
xorl
mov
push
data16
jecxz
sub
inc
inc
lcall
pop
cltd
fisubl
cld
aaa
lcall
push
jne
outsb
cmp
aaa
inc
inc
add
cld
sbb
fstp
es
cs
incl
jbe
lods
div
mov
inc
adc
ss
sub
leave
mov
inc
pop
push
mov
data16
push
popf
or
push
fnsave
push
pop
aas
aas
jg
call
push
sub
stc
mov
add
stos
mov
adc
data16
add
js
pop
lret
xchg
loope
jnp
sbb
vmwrite
js
stos
mov
sub
enter
aam
mov
cmp
add
movsl
int
mov
mov
in
mov
push
add
inc
pop
mov
fs
cmp
call
pop
movsl
stc
sbb
jl
jecxz
cmp
mov
movsl
sub
mov
jmp
cmp
out
popf
ljmp
iret
in
out
sbb
inc
mov
loop
mov
mov
mov
in
inc
mov
repz
stos
xchg
gs
cmc
enter
aam
lret
jae
loope
xor
cltd
fadds
ss
sbb
decb
adc
mov
push
scas
add
ficoml
cmp
stos
inc
in
addr16
scas
sti
adc
ja
cld
scas
xchg
mov
fwait
out
mov
out
adc
push
lea
hlt
mov
int
mov
cli
push
add
movsb
add
dec
and
sub
pop
ja
bound
imul
inc
lcall
imul
dec
stos
faddl
ss
adc
mov
add
std
push
xchg
cmc
pushf
cwtl
sbb
inc
mov
push
mov
stos
pop
inc
mov
loope
xor
sahf
mov
sbb
and
adc
lock
dec
nop
add
popa
mull
push
test
sbb
scas
aaa
jb
out
mov
cmp
andl
jg
cmp
mov
xlat
inc
sti
mov
stos
adc
inc
aaa
test
push
xor
sub
gs
fbld
outsb
je
add
mov
pop
jge
pop
stos
xchg
mov
fcoml
xchg
sub
mov
push
lock
or
pop
xchg
repz
xor
and
jo
jmp
push
add
xchg
mov
pusha
push
nop
xchg
test
mov
iret
xchg
rcrl
fucomi
lods
adc
rcll
dec
scas
movsw
add
mov
mov
clc
pushf
js
pop
mov
iret
cmpsl
loop
push
mov
scas
jg
ret
and
jmp
call
nop
mov
adc
push
sbb
lods
push
lcall
call
arpl
pop
push
cmc
mov
shl
scas
out
imul
sub
mov
shlb
dec
lret
rcr
inc
jmp
mov
pop
mov
push
dec
sbb
imul
sbb
sbb
mov
inc
sub
pop
ret
movsb
daa
push
int3
xchg
xor
xchg
and
js
or
fisubrl
out
jno
leave
sub
lods
mov
jo
jns
incl
sbb
mov
xor
scas
loop
lea
mov
inc
lcall
mov
pop
ljmp
sub
adc
ss
dec
and
sbb
cs
call
test
cmp
xorb
mov
pop
dec
lods
mov
inc
mov
sbb
enter
sbb
fildll
adc
stc
movd
push
notb
scas
in
fnstenv
jle
js
es
scas
pop
adc
mov
jmp
call
mov
add
aas
rcrl
push
shlb
sbb
mov
mov
or
aam
outsb
iret
leave
outsb
ret
call
out
jne
scas
mov
push
mov
sub
int
push
push
push
inc
fisubs
jbe
fsubrl
out
xor
dec
cmpsb
push
push
xor
cld
adc
jmp
test
mov
js
jecxz
aas
loop
pop
cltd
clc
mov
add
pop
mov
mov
js
sysenter
lret
dec
push
pop
mov
data16
cmp
push
iret
pop
pop
mov
xchg
mov
mov
or
inc
cmc
data16
fidivs
aam
ljmp
scas
mov
testl
bound
and
xor
in
test
add
sub
in
push
mov
adc
testb
sub
scas
stc
push
sub
cld
fidivrs
inc
xchg
mov
lcall
xchg
sahf
leave
test
jne
cmp
add
mov
xorb
scas
hlt
insb
pusha
test
fwait
popf
in
arpl
lahf
repnz
repz
sbbb
stc
lods
sub
xchg
stos
test
repz
int
add
sarb
inc
cs
enter
push
or
mov
gs
out
test
fcoms
and
mov
mov
ficompl
daa
addr16
fwait
jecxz
xor
sub
jmp
mov
cmpl
dec
push
cmp
inc
jmp
idivb
add
add
add
ljmp
repz
xchg
jg
mov
jmp
dec
mov
adc
js
aas
xchg
sub
sbb
into
xchg
sub
js
int
cmp
outsb
adc
xchg
movsl
mov
insb
push
push
shlb
xor
dec
pop
mov
cmp
mov
fstps
dec
les
push
lods
xor
mov
addb
dec
shl
or
pop
cld
push
cwtl
aas
or
test
mov
cmpsb
ss
push
out
cmp
pop
and
imull
inc
inc
adcb
aas
mov
adc
push
xor
push
inc
jl
xor
sarb
xor
out
fdivr
fildll
dec
lret
fldenv
repz
cmp
icebp
daa
jl
adc
call
sub
nop
test
ja
imul
sbb
xchg
jp
mov
inc
cli
dec
push
int3
sub
xor
outsb
imul
inc
push
fisttpll
or
arpl
in
adc
and
shlb
push
cld
imul
clc
pushf
and
into
leave
inc
jno
add
ret
sbb
cmp
insl
movsl
out
imul
pmovmskb
in
jns
inc
dec
jb
lret
ljmp
das
fnsave
mov
sbb
ret
mov
pop
sbb
orl
jae
ret
clc
hlt
popf
lret
inc
pusha
adc
and
loopne
test
or
rorl
fldcw
dec
mov
test
fidivrl
add
pusha
into
lahf
js
enter
out
adc
ljmp
and
dec
jl
out
mov
adc
rcrb
scas
pop
push
mov
lret
push
daa
dec
cmp
lea
sub
rclb
nop
mov
push
pushf
mov
xorb
inc
pushf
adc
mov
or
es
mov
xchg
and
sahf
xor
clc
clc
cmp
movsl
push
adcl
cmp
call
in
pop
dec
pusha
mov
pop
cmp
les
adc
pop
outsb
sbb
sub
das
aam
je
lods
sub
cli
sub
sub
mov
sub
sub
pop
push
mov
cmc
shlb
out
ja
jle
mov
mov
jnp
cltd
and
add
pop
rclb
jmp
push
outsl
mov
mov
dec
jb
add
pusha
fnstcw
sbb
xchg
scas
gs
stos
cmp
push
lahf
jbe
jg
int
rcr
and
jae
jae
es
add
or
cmpl
or
aam
xchg
int3
push
fld
push
inc
adc
ja
xor
test
shr
aad
or
clc
and
jnp
js
test
adc
les
loope
cmp
mov
mov
push
nop
pop
fistpll
icebp
sub
lret
stos
in
fs
mov
ds
movsl
icebp
repnz
cltd
sbb
popl
xchg
xor
int3
bound
imulb
cmp
add
or
mov
inc
ret
fbstp
pusha
add
pop
clc
adc
out
sbb
imul
sub
cmp
in
xchg
mov
enter
adc
inc
dec
mov
sbb
dec
cmp
cmp
divl
scas
sbb
das
pushf
add
fs
lods
xchg
pusha
or
mov
sbb
sarl
movhps
stos
cmp
push
jb
loop
imull
das
xlat
insb
and
and
out
mov
aam
popa
jg
mov
adc
arpl
repnz
xchg
and
fsub
popf
stc
jg
mov
xchg
mov
loope
loope
pop
into
mov
mov
adc
data16
inc
cli
xchg
push
add
and
mov
cmc
mov
xchg
loopne
push
and
testl
jge
push
and
cli
in
or
js
arpl
test
jbe
add
xchg
push
mov
push
adc
xor
rcrl
das
cltd
mov
inc
int3
pop
stc
mulb
mov
arpl
roll
push
test
or
jb
mov
fsubrl
push
shlb
mov
dec
jnp
popa
cmc
jecxz
sahf
push
int3
ss
leave
sbb
cmc
mov
mov
and
es
sub
mov
xor
mov
xchg
movsl
adc
and
xor
insb
mov
test
dec
xor
sbb
jb
cltd
inc
xchg
pusha
leave
cmp
scas
lds
sub
jns
loope
adc
mov
dec
add
push
test
pop
and
inc
orl
loop
dec
mov
jns
sbb
mov
cmp
std
push
shr
inc
iret
mov
pop
es
and
shrl
es
repz
out
int3
mov
add
popa
lcall
push
leave
push
jmp
sbb
pop
mov
push
lock
sahf
mov
dec
int
fs
adc
fdivs
rcl
aam
sti
cmp
leave
jp
jnp
xor
sub
xor
das
les
or
jmp
fimull
sar
rcll
mov
jno
test
and
jnp
push
negb
mov
enter
inc
mov
ret
jle
mov
dec
ds
rorl
or
jecxz
lock
inc
mov
push
mov
repnz
and
loope
movsl
sbb
add
jnp
bound
pop
aaa
mov
negb
inc
sbb
jp
cwtl
sub
sysret
out
stc
adc
cmp
pop
push
pusha
jmp
dec
push
test
push
hlt
inc
fs
dec
dec
cmp
pop
push
das
mov
add
les
add
adcb
stos
nop
mov
mov
push
mov
lret
sbb
test
mov
int3
fsub
cmpl
loopne
out
inc
decb
inc
pusha
ds
loopne
adc
mov
cli
cmc
dec
test
pop
and
dec
mov
loopne
icebp
cmp
lret
fs
bound
ficomps
xchg
stos
mov
pop
arpl
js
pop
mov
cmp
push
loope
daa
pop
push
lock
dec
dec
daa
mov
imul
inc
lea
aam
imul
inc
cmp
mov
pushf
ret
repz
xor
ss
pop
aad
mov
in
or
fcoml
xor
push
fisttpl
pop
push
pop
sahf
daa
mov
fistps
test
sub
fistpll
mov
or
mov
mov
and
pop
loopne
pop
pushf
int3
mov
arpl
pop
lret
stos
arpl
loopne
pandn
mov
xchg
xor
mov
leave
insb
inc
fsubrs
cmpsb
sub
loopne
jecxz
sar
mov
pop
out
add
js
jge,pn
dec
imul
sahf
lcall
adc
push
adc
fwait
sub
imul
lock
xor
data16
push
dec
xor
cmp
adc
sbb
mov
push
sub
mov
inc
pop
ljmp
pusha
dec
sub
pop
cltd
arpl
mov
stc
push
mov
dec
rcll
mov
ss
incb
xchg
adcl
cwtl
call
lods
mov
mov
add
shll
shl
add
add
cmp
jg
pop
sub
xor
int3
in
cmp
lea
sub
jecxz
cmpsb
data16
mov
xchg
je
cmpsb
cmp
pcmpgtw
mov
push
insl
push
adc
fisubl
cmp
hlt
lret
lods
inc
add
mov
fimull
dec
jo
lcall
stc
mov
mov
xor
cvtps2pi
loop
xchg
sub
lock
or
or
loop
scas
mov
js
loopne
fs
ds
movsb
subl
mov
cmp
xchg
dec
mov
jg
mov
pop
sub
dec
xchg
mov
adc
fcomp
pop
sbb
or
and
mov
int
test
pop
jae
xor
push
inc
adc
jg
out
mov
sbb
lock
xchg
mov
cltd
cmc
fsubp
addps
xchg
add
inc
fidivl
add
or
inc
cmp
loope
sti
icebp
adc
imul
cld
adc
and
adc
and
inc
test
out
pop
in
and
lock
orl
mov
ret
scas
xchg
mov
push
jbe
xor
es
outsl
adc
mov
dec
mov
lods
or
and
cmp
imul
mov
jns
cltd
orl
sub
push
jl
xchg
xchg
sbbb
addl
movaps
aam
jns
loopne
mov
adc
jbe
js
lret
mov
pushf
or
jle
push
mov
rolb
hlt
jmp
cmpsl
popf
cmpsb
movsl
movsl
aad
out
xchg
repnz
roll
mov
repnz
jmp
mov
cld
loopne
ljmp
jmp
pop
jnp
movntq
mov
inc
fsts
es
call
bound
sti
clc
stc
or
jecxz
push
movsb
sbb
dec
inc
pop
stos
xor
and
inc
jmp
and
sbb
nop
jge
dec
push
jp
mov
repz
or
inc
cmp
rorl
cmpb
daa
pop
addr16
or
hlt
ja
jno
fisttpll
and
out
shll
xlat
nop
into
inc
mov
sbb
push
outsb
mov
pop
pop
xchg
cmp
pop
notb
jns
movsb
test
ljmp
out
fnstsw
shrl
xchg
dec
and
add
sarb
or
es
std
or
sti
iret
cmp
push
fcmove
xlat
cmpsb
mov
or
ds
sbb
mov
arpl
xchg
mov
xor
push
push
dec
push
jns
jae
xor
add
sarb
sbb
imul
push
xlat
bound
xchg
pusha
mov
in
fimuls
xchg
cmp
mov
idivb
sahf
adc
call
in
cmp
rorb
mov
or
imul
xor
leave
dec
xchg
jo
adc
pop
cmp
loopne
test
push
ret
mov
xor
xor
sub
sbb
out
popf
cmp
pop
cs
js
adc
arpl
pop
mov
push
sbb
jl
aaa
pop
xchg
xor
mov
lods
cmpsb
xchg
rorl
xor
pop
jae
cmp
dec
sub
imul
imul
xchg
sub
xchg
mov
add
mov
iret
mov
sahf
out
cmp
fucomi
in
dec
enter
rolb
stos
jmp
adcl
mov
add
xchg
xor
pop
jbe
pop
packsswb
stos
es
cmpsl
xor
mov
sbb
sti
and
lods
shrl
jbe,pn
fisttpl
sbb
cmc
test
jp
adc
mov
mov
xchg
jle
sbb
xor
gs
ficomps
jae
sub
mov
scas
lea
sbb
comiss
das
inc
inc
cmp
bound
adc
insb
adc
ja
pop
ret
inc
cmp
inc
popl
fistpll
sahf
rorl
sti
mov
mov
ret
mov
adc
jb
or
sarl
lds
rcrl
pop
das
je
add
inc
pushf
sbb
mov
les
xor
ficomps
shrl
pusha
jb
outsb
arpl
mov
and
inc
dec
dec
addr16
cmp
cli
popf
fucom
add
pushf
aad
xor
lcall
fistps
mov
xchg
aaa
jl
xor
in
push
test
scas
jb
inc
cmp
bound
mov
dec
push
mov
mull
or
repnz
cmp
bound
push
xchg
pop
and
test
inc
sbb
clc
mov
mov
faddl
mov
not
xchg
jmp
push
outsb
ljmp
daa
lock
xor
rorl
fildll
cmp
std
cmp
scas
aaa
sub
push
xchg
pop
mov
sub
pop
push
mov
add
subl
jb
xchg
ficompl
xlat
sbb
xchg
das
or
addr16
aas
or
and
pusha
mov
and
stos
mov
jp
imul
test
shlb
add
lods
mov
mov
xor
and
cmpsb
sti
repz
jns
mov
rolb
lret
call
push
jle
sahf
add
repz
xchg
mov
test
jbe
xor
push
outsl
jae
pop
jns
jb
add
sahf
ret
dec
mov
ret
daa
popf
mov
clc
xor
mov
adc
inc
adcb
std
mov
outsb
sbb
sbb
dec
hlt
or
jnp
testl
aas
in
into
push
mov
xor
aas
inc
pop
inc
inc
loopne
jne
ds
scas
mov
pushf
mov
dec
dec
lock
lods
jbe
lahf
push
insb
push
fistpl
add
add
icebp
inc
adc
mov
adc
jno
fcoml
ret
or
cwtl
into
mov
pop
js
sbb
or
fisubrs
push
adc
pop
lahf
cmpsl
test
lcall
cmp
sub
pop
sub
mov
adc
and
pop
sub
push
out
xchg
jnp
pop
cld
and
and
iret
jno
bound
push
cmp
int3
sbb
add
inc
jns
pop
mov
imul
sub
add
jae
mov
sarl
adc
cmp
pop
ljmp
mov
add
imul
mov
movsb
rclb
lods
sti
sub
adc
or
sbb
pop
inc
dec
xchg
aam
lret
lret
fnstsw
bound
pop
sbb
sub
pop
aam
pop
sub
adc
xchg
xor
arpl
xchg
mov
and
in
xchg
clc
lcall
outsl
add
cld
inc
ja
add
or
sbb
fucomip
mov
js
xchg
repnz
inc
mov
xchg
test
or
push
jl
push
out
pop
clc
jle
stos
sti
cmp
ret
xchg
adc
or
dec
mov
xchg
xor
test
add
pop
mov
sub
add
lods
inc
aad
int
fiaddl
cwtl
or
in
es
mov
pop
ret
out
pop
in
cmp
lock
push
imul
int
sub
ficoms
inc
push
call
rcl
pop
xchg
enter
mov
stc
mov
fdivl
push
mov
repnz
cld
ds
mov
dec
or
imul
iret
shlb
and
aas
cmc
and
imul
cld
rorl
or
inc
stos
adc
jo
jo
mov
mov
imul
addr16
stos
sbb
cmp
xchg
sahf
xchg
icebp
sti
icebp
lea
hlt
es
add
push
push
or
stos
in
mov
inc
pop
mov
shll
pop
int
add
push
add
xor
xchg
rclb
mov
xchg
lods
cmp
imull
test
test
dec
arpl
xchg
shlb
mov
lea
incb
out
sub
jne
pop
ss
jmp
xor
test
xor
fmuls
push
sub
cmpsb
mov
mov
add
and
rolb
cmpsb
dec
test
jge
lret
cmp
rorl
mov
cltd
and
jle
sbb
cmp
ficompl
in
stos
sub
movsb
add
add
xlat
notb
arpl
xchg
fisubl
or
cmc
add
lea
mov
add
pop
lock
in
leave
int3
jge
xchg
sbb
cmp
dec
js
cs
adc
adc
jmp
fistl
sbb
std
call
lods
cmp
lcall
mov
mov
dec
insb
movzbl
out
mov
push
adc
dec
pop
leave
sahf
loope
cli
int
mov
call
fimull
shll
adc
xchg
dec
repnz
mov
fimuls
lret
addr16
mov
hlt
es
push
mov
sub
fbld
mov
push
faddp
fnstsw
fidivrs
fisubrl
adc
lahf
sbb
hlt
dec
cli
jo
imul
push
mov
repz
xchg
int3
pop
dec
xchg
paddd
aaa
xchg
and
js
lret
mov
movsb
out
mov
lcall
adc
adc
add
mov
addl
fistl
add
mov
popl
push
jle
cmp
lock
mov
pushf
mov
dec
jne
jbe
and
pop
sbb
push
roll
je
jmp
push
xor
sbb
adc
rolb
imul
jae
and
mov
or
sub
ret
inc
out
subb
cmp
or
aam
xor
ss
cmp
xchg
aaa
pop
test
int3
sbb
pop
sub
test
sbb
mov
ret
push
aas
adc
jbe
pop
popl
xchg
imull
sbb
loopne
cmp
xor
jp
pop
cmp
repz
decb
test
pop
fs
cmp
mov
xor
push
add
inc
std
inc
xor
rol
scas
insl
push
out
dec
pop
js
ret
mov
sbb
loopne
out
jecxz
sub
sbb
cmp
out
adc
lds
stc
scas
xor
andb
aam
jne
mov
push
pushf
das
mov
jae
adc
sub
faddl
pop
cmc
xor
and
into
mov
mov
mov
mov
and
roll
dec
pop
xchg
and
mov
orl
cmp
rcrb
fsub
inc
repz
stc
xor
clc
jp
movsb
test
lcall
popa
cmp
or
or
or
or
in
stos
out
xchg
xchg
jno
push
cmp
fs
repnz
push
clc
es
js
xchg
mov
adc
mov
sbb
mov
adcb
adc
mov
mov
pop
aaa
in
xchg
inc
xor
lret
sbb
test
and
jbe
pop
inc
testb
lds
out
daa
cmp
pop
mov
into
mov
xor
dec
sub
and
mov
xor
xchg
xchg
fwait
ret
movsb
mov
inc
stos
adcl
xor
or
add
xchg
and
test
test
hlt
in
mov
inc
ja
jmp
mov
pop
out
orb
aam
mov
adc
fldl
ja
jmp
lret
or
inc
fmul
sub
leave
mov
sub
sarl
les
loop
stos
out
mov
fistpl
push
add
fisubrl
in
pusha
mov
add
ljmp
jge
pop
pop
ljmp
xchg
mov
push
xor
pusha
push
xchg
int3
xchg
pop
jb
dec
add
pop
jbe
sti
xor
pop
xor
pop
lods
test
xor
popf
jle
add
leave
pop
mov
dec
add
cmp
xor
rclb
daa
out
adc
stc
shlb
mov
xchg
call
push
and
fmulp
pop
jns
es
or
jecxz
mov
add
repz
and
xchg
fsubr
lea
push
push
sahf
lock
cltd
adc
jl
mov
dec
repz
scas
and
sar
cmpsl
daa
movlps
fnsave
pop
cmp
dec
gs
cwtl
adc
add
scas
pop
ret
push
and
add
bnd
add
and
popa
cmp
inc
repz
test
sub
bound
mov
pop
inc
outsb
mov
xor
cmp
cs
xor
pop
xchg
or
faddl
push
push
sub
addr16
sub
loopne
pop
inc
int3
pop
push
sub
das
xor
cmc
sbb
pop
xchg
repz
sub
cmp
dec
cmpb
out
test
sub
dec
or
faddl
insl
ret
cmc
in
pusha
mov
sub
movsb
test
inc
sbb
jb
cmp
lret
sbbb
add
loop
add
loope
add
cs
mov
mov
dec
fcompl
repz
xchg
das
outsb
inc
jl
xchg
call
xor
xchg
adc
inc
lods
mov
lock
out
or
jns
subl
inc
mov
test
inc
fildll
mov
jns
popa
pop
and
mov
lods
aas
imul
jge
ljmp
fnstenv
mov
jmp
mov
nop
sbb
add
inc
add
daa
imul
pusha
mov
xor
xchg
jae
repz
or
mov
imul
rorl
push
mov
or
aas
mov
cwtl
cld
out
mov
push
aaa
pop
data16
int3
into
sub
pop
cmp
mov
mov
cmp
sbb
out
sub
cmp
adc
cld
pop
push
mov
push
mov
fildll
sub
stos
into
out
fcom
jmp
test
test
jo
cltd
and
and
mov
sbb
hlt
and
ficompl
mull
xor
push
add
or
push
xchg
fidivs
cmpsl
movsb
mov
mov
shl
mov
rcll
rcl
pop
xchg
mov
addr16
test
pop
mov
xor
sbb
jbe
pop
mov
pop
lret
jno
dec
cmp
pop
inc
mov
xchg
add
sbb
or
ja
and
test
push
test
jl
jge
mov
xchg
mov
int
test
lock
jno
cmp
adc
into
iret
lock
lods
sarl
mov
mov
cwtl
fwait
xchg
pop
shrl
add
xchg
out
lock
ret
dec
arpl
cwtl
cmp
pop
into
jecxz
lods
ret
dec
jmp
into
sub
fwait
mov
cmp
cmpsb
mov
daa
insl
out
lret
mov
mov
fldl
cmp
xchg
mov
sahf
out
testl
test
in
inc
push
arpl
inc
fcomip
sub
mov
push
fimuls
cmp
fs
jge
xor
clc
stos
enter
movb
cltd
sahf
dec
mov
xchg
inc
ljmp
xor
shll
test
or
sbb
mov
cmp
flds
rorb
das
leave
test
mov
mov
cmp
dec
xor
bound
xchg
xchg
or
rorl
stc
outsb
repz
loopne
jmp
pushl
xchg
and
mov
sahf
repz
stc
sub
cmp
lret
mov
aam
in
into
fmuls
aas
imulb
mov
mov
pushf
mov
fcmovnb
pop
adc
or
addr16
movsb
inc
inc
repnz
cmpl
cmp
xor
imul
cmpsb
dec
int
xchg
lods
dec
stc
or
lds
dec
push
addr16
sub
lock
pop
rcrl
int3
adc
xchg
enter
jle
lock
outsl
movsb
or
test
push
push
icebp
rorl
sahf
mov
sbb
jge
loopne
outsb
sbb
stos
aas
cli
mov
cmp
test
mov
sbb
cmp
and
adc
mov
dec
mov
pushaw
imul
or
aam
dec
mov
cld
jno
pop
dec
jns
inc
mov
enter
imul
pop
aad
push
xor
or
sub
xchg
shl
push
mov
testl
gs
jo
stos
test
fcomps
adc
stos
sub
je
push
xchg
add
subl
jmp
aas
adcl
rcrb
mov
arpl
js
int
cwtl
lea
jno
testb
sbb
ss
lods
push
xor
push
loope
mov
mov
int
mov
gs
and
stos
pop
dec
jae
push
leave
sahf
sbb
mov
cmpsl
repnz
push
hlt
test
dec
call
cltd
es
imul
push
mov
adc
mov
cmp
xchg
jp
jns
push
aad
adc
int3
fsubrs
push
pop
mov
cmpl
mov
nop
dec
inc
loopne
lret
fistl
sbbl
inc
jno
mov
pop
push
pop
je
sbb
and
mov
cmp
xchg
cltd
hlt
shll
jp
sub
int
add
ficoml
movsb
aaa
pop
xchg
xchg
imul
cmp
nop
push
sub
outsb
int
rolb
mov
push
aam
test
enter
jae
mov
mov
dec
shlb
int3
test
inc
int
rclb
sub
sub
jg
dec
notb
lods
imul
push
sahf
movsb
sar
push
call
push
and
sahf
movsl
jg
mov
inc
xchg
pop
jg
mov
mov
popf
popa
je
scas
inc
pop
push
popf
and
lret
mov
sbb
je
aaa
adc
into
and
lods
xchg
in
cmp
cmc
leave
adc
inc
into
decb
or
andb
cmc
mov
jmp
mov
fwait
sub
mov
lods
xchg
or
push
repnz
js
pop
loopne
sub
sbb
das
sub
inc
push
pop
pop
jne
pop
sbb
fcmovnb
dec
pop
xchg
cmp
mov
in
outsl
aas
mov
push
pop
lds
pusha
add
dec
adcb
les
mov
push
mov
mov
into
sti
clc
shrl
sub
fdivrl
dec
pop
stos
mov
add
push
in
xlat
pop
aas
mov
jno
pop
dec
sub
into
shlb
les
jno
push
and
pop
je
xchg
inc
sub
mov
or
dec
into
ljmp
push
xor
jae
ret
push
dec
mov
jne
jg
and
ja
jns
orb
mov
lds
and
pop
daa
pop
lds
xchg
xor
addl
cmp
push
or
sub
movsl
push
ss
push
scas
popl
xchg
stos
pop
xor
test
add
add
add
inc
loop
xor
iret
mov
xlat
sub
mov
dec
sub
call
push
fwait
push
jecxz
imul
aad
xchg
dec
dec
inc
xchg
pop
test
gs
repz
sub
mov
inc
cltd
and
mov
xchg
cmp
rclb
test
mov
and
fwait
pusha
sub
fwait
and
pushf
mov
sti
jge
mov
sub
sbb
aam
lods
xchg
in
mov
or
das
jne
pushf
rolb
es
adc
sahf
imul
aas
cmp
dec
jns
sarl
movsl
aas
lods
mov
das
ret
stc
cmp
and
les
and
sbb
lods
fwait
test
cmpsb
cmpsl
mov
dec
jno
or
pop
les
pop
xlat
cmp
ja
movb
outsb
jg
mov
add
lahf
stos
xlat
push
test
fcompl
nop
push
xor
insb
jo
cmp
sub
flds
xor
pop
pop
sub
jge
jp
cld
or
inc
les
ljmp
loop
adc
adc
movsb
pop
add
and
or
ss
aad
dec
xor
add
push
add
xchg
xchg
pop
sbb
lcall
mov
xor
dec
and
pop
outsb
addl
cmpsb
add
lods
jl
imul
lea
test
xor
xchg
dec
mov
sbb
push
dec
icebp
ss
inc
add
lret
packssdw
jo
mov
push
loop
push
stos
push
popf
push
lret
xchg
adc
sub
push
adc
adc
adc
outsl
push
jmp
in
xchg
cld
mov
inc
ficomps
cmp
repnz
ret
mov
pop
push
sti
dec
dec
sub
test
fisubrs
repz
sarl
fmulp
call
dec
mov
xor
mov
test
popf
inc
cwtl
mov
lcall
popf
mov
sbb
shlb
sub
dec
jg
shl
int3
negb
addr16
pop
testb
pop
xchg
adc
jg
int
mov
stc
mov
lret
adcb
jp
stc
dec
push
pop
cld
hlt
hlt
in
xor
mov
pushl
lock
push
xcrypt-ecb
cmpsl
dec
pop
cmp
cld
xor
xor
inc
ljmp
dec
mov
and
scas
mov
push
loope
daa
mov
push
push
mov
ja
mov
mov
and
jne
xchg
xchg
cmp
mov
mov
mov
daa
push
test
ret
testl
loope
xchg
addr16
mov
mov
mulb
sti
lock
pop
jnp
mov
stos
xchg
sbb
stos
addr16
push
sarb
arpl
push
pop
je
cmp
sbb
outsl
fwait
cmp
fwait
mov
cmp
add
dec
push
call
cs
fwait
enter
aam
mov
stos
cs
loop
out
xchg
aam
cmc
pop
int
and
outsl
sbb
pop
repz
xor
sub
test
mov
fiadds
popa
fstl
mov
es
xchg
fmulp
ds
dec
fbstp
adcb
ret
mov
and
mov
push
data16
rol
rcrl
pop
nop
dec
nop
ret
or
pop
imul
adc
rolb
adcb
test
jo
pop
xchg
outsl
ret
sub
arpl
adc
xchg
pushf
inc
and
pop
lods
les
push
sub
mov
outsb
outsl
push
dec
in
cmp
xchg
insl
lods
jecxz
xor
push
add
add
jp
ds
into
jo
mov
and
notl
loope
mov
sub
movsb
inc
lahf
mov
and
gs
loop
enter
dec
js
sub
movsl
into
inc
out
mov
orl
inc
sbb
push
sbb
out
push
sbb
cmp
insb
std
push
jl
scas
popa
test
loopne
or
pop
add
out
pop
xchg
mov
mov
pop
fstpt
movsl
jle
inc
hlt
xchg
mov
cwtl
push
sarl
aad
push
push
ret
mov
popa
cmp
daa
mov
mov
cs
jo
test
hlt
ret
test
mov
adc
mull
pop
imul
stos
or
cs
xor
out
cld
hlt
dec
dec
adc
call
push
aam
adc
cmp
scas
sub
sbb
imull
add
test
jmp
pop
aas
pusha
icebp
xchg
shrl
adc
push
xlat
divb
pop
jecxz
and
mov
xchg
nop
cmp
and
cmc
test
lea
mov
or
insl
mov
scas
sbb
sub
cmp
jecxz
and
ss
cmp
xor
test
mov
mov
inc
mull
cmp
lret
or
push
xchg
sarl
jecxz
daa
fwait
std
adc
cmp
fildl
and
rorl
out
lret
stc
push
testb
add
das
adc
xor
cld
iret
cli
mov
scas
pop
mov
push
cld
pop
mov
jmp
pop
push
jae
add
les
ficomps
sbbb
sub
lods
sub
jecxz
sub
dec
add
add
sub
xor
and
data16
push
jne
mov
imul
enter
adc
or
ficompl
xor
cmpl
iret
bound
lock
aaa
mov
pop
pop
mov
xchg
cmpb
ljmp
jno
or
das
sahf
aad
adc
xchg
cmp
xor
add
js
addr16
das
sahf
push
bound
int3
mov
or
jbe
loop
sub
and
add
cmc
mov
repnz
adc
sbb
js,pn
mov
cwtl
test
add
xor
pop
divl
mov
mov
adc
lock
cli
or
sub
jl
push
xor
subb
push
sub
sub
scas
sub
xchg
adc
mov
leave
pop
dec
repnz
fimull
xor
scas
scas
pop
push
shrl
rorl
add
shr
push
or
sbb
fiadds
sbb
jbe
xchg
cmpsl
mov
lods
xor
push
add
sub
sbb
or
xor
ljmp
sbb
cltd
repnz
xor
mov
int
dec
loope
iret
cmp
es
mov
jbe
cmpsb
lret
out
push
int3
scas
out
xchg
bound
addb
adc
or
rcrl
sbb
test
dec
jo
jg
ja
xor
dec
std
mov
push
adcb
sub
mov
and
test
sti
hlt
push
scas
inc
in
pop
into
jmp
mov
pop
adc
div
jae
jno
rolb
int3
fdivrs
aam
sub
int
loop
jecxz
in
repz
mov
pop
push
push
xchg
fwait
mov
mov
je
je
pop
add
add
push
mov
adc
dec
repnz
and
pop
mov
dec
jb
jle
mov
jp
or
je
push
scas
hlt
aas
in
dec
stc
daa
xchg
push
in
pop
je
adcb
sbb
lahf
push
and
cmp
mov
aam
push
push
out
clc
mov
jecxz
adc
mov
ret
std
adc
adc
sub
pop
mov
push
ja
xlat
pop
shlb
imul
and
cmp
xchg
and
xlat
pop
cmp
cwtl
sub
mov
xor
xchg
inc
out
sahf
mov
cmc
into
jne
push
aaa
sub
xchg
cltd
pushw
xchg
push
loopne
fucom
or
lods
mov
pop
and
loopne
enter
fnstenv
and
cmp
cmpsl
and
xor
adc
sub
popf
xchg
dec
outsb
adc
add
inc
push
loopne
push
aad
pop
push
pop
mov
sbb
sarl
or
sub
out
jns
sbb
iret
inc
push
imul
mov
rcrb
inc
sub
push
mov
jo
mov
xor
mov
cwtl
push
fdivrs
imul
outsl
mov
inc
xlat
loopw
test
mov
mov
pop
stc
out
jb
aaa
cmpsl
inc
fs
or
sub
sbb
push
cmpsb
scas
sub
in
into
or
mov
and
shll
and
push
xor
sub
mov
dec
shlb
push
imul
and
test
cmc
or
jge
mov
insl
jp
out
dec
push
cmpsl
sbb
dec
dec
in
and
out
add
ljmp
test
sti
outsl
pop
negl
movsl
pop
push
xor
fsubl
adc
sarb
mov
mov
mov
in
push
negl
clc
std
sub
mov
push
cs
das
addr16
inc
push
xchg
and
fsubs
pop
jb
cli
lods
dec
rolb
aaa
or
sbb
xor
lods
sahf
push
das
popa
into
ljmp
mov
sbb
shlb
jnp
mov
add
and
push
cltd
enter
xor
aam
xchg
push
pop
xchg
cmpsl
outsl
mov
in
pop
push
aaa
lds
push
mov
clc
sti
and
cmp
stos
cmpsl
add
aaa
inc
sub
sbb
rcrl
mov
mul
lahf
packsswb
mov
mov
mov
sarb
mov
xor
mov
cld
push
dec
mov
mov
lock
and
arpl
je
and
fwait
lahf
mov
sti
adc
test
sbb
xchg
or
mov
cmp
rcr
xchg
call
fwait
pop
jecxz
in
add
xor
pop
arpl
mov
in
das
jno,pt
int
inc
push
mov
dec
divb
jmp
cmp
sbb
cs
add
or
add
push
cld
test
dec
push
cwtl
pop
xor
es
mov
pop
lahf
cmp
mov
in
loope
loopne
hlt
mov
or
ds
idiv
push
ret
sub
idiv
pop
shrl
fdivrs
mov
cs
in
loope
mov
push
lock
incb
jp
fstl
xchg
aas
sub
fsub
cmpsb
mov
inc
scas
pop
pop
pop
and
imul
xor
mov
loop
add
lods
pop
xlat
xchg
push
aad
lods
push
rol
xor
out
repz
xorb
xchg
iret
data16
add
test
and
test
sub
in
push
push
shrl
nop
mov
adc
dec
jo
not
pushfw
mov
lret
sub
inc
xor
jge
dec
je
lock
pop
bound
repz
sbb
lea
xchg
cmp
push
adcb
int
and
cmc
xor
cmp
std
sub
cmp
lock
ret
in
test
int
mov
inc
ret
shl
mov
loop
test
pop
or
ret
inc
ss
push
int
sahf
xchg
xor
push
xor
je
aad
nop
sbb
mov
fnstsw
cld
sbb
sub
and
jle
cltd
sbb
mov
out
cmp
inc
pop
imul
hlt
lcall
into
pop
mov
jmp
cmc
jge
mov
jge
jge
jmp
sub
shlb
xor
testb
add
mov
leave
lods
addl
jle
push
loopne
in
cmc
out
aam
adc
ljmp
mov
movsb
lock
addr16
sbb
addr16
popa
outsb
dec
and
xor
orb
aam
outsb
cmp
xchg
rol
jp
cmpsl
cmp
cmp
inc
and
faddp
xchg
push
mov
xchg
call
inc
mov
mov
cmc
test
sbb
out
push
mov
jnp
lods
mulb
push
dec
dec
insb
mov
ljmp
loop
pop
mov
subb
das
push
cmpsb
mov
push
sbb
add
aas
test
gs
push
lret
xchg
pushf
pop
dec
pop
mov
jbe
pusha
pusha
push
aaa
jg
jo
push
movntq
out
call
es
pop
cmp
sbb
or
repnz
xor
sbb
sbb
testb
arpl
push
outsb
mov
cwtl
mov
xor
inc
lock
repz
pop
lcall
push
or
sbb
inc
mov
and
hlt
jo
orl
xchg
sub
imul
stos
sbb
xchg
jnp
adc
imul
jbe
mov
xor
or
mov
imul
outsl
cs
into
cmp
mov
dec
insb
mov
ret
mov
jne
cmp
or
dec
pop
add
adc
in
bound
cs
xlat
mov
mov
dec
cmp
or
scas
mov
push
cmp
pop
mov
add
sbb
jg
in
sbb
dec
shll
int3
sarb
mov
push
pop
sbb
subb
imull
out
out
addb
mov
ret
adc
dec
or
inc
mov
icebp
scas
mov
jecxz
dec
or
sar
mov
mov
lock
aad
cli
test
fnstenv
and
sub
xor
fsubl
into
pop
popa
and
pop
pop
dec
jg
push
in
sti
sbb
mov
out
adc
mov
hlt
rorb
lret
adc
in
sbb
xchg
cmp
out
cltd
js
mov
cmp
sub
test
jge
xor
ljmp
scas
imul
fnsave
imulb
jno
or
sbb
arpl
xorl
or
jnp
xor
mov
xchg
fdivs
sbb
rolb
loopne
xchg
dec
add
out
popf
lahf
or
lea
sbb
jp
into
movsb
loopne
xlat
xchg
mov
cwtl
loopne
or
gs
scas
jp
xor
or
fsub
ret
aas
lods
cmp
lahf
out
mov
jg
mov
inc
mov
outsl
inc
repz
mov
mov
jb
aam
ds
and
sub
sbb
mov
lsl
sbb
mov
dec
inc
jl
dec
mov
call
in
or
mov
int3
pop
clc
push
mov
inc
sub
push
xor
stos
or
fdivr
ljmp
pop
adc
mov
fiadds
cs
pop
fistl
cmp
jg
nop
test
and
cmp
iret
mov
sub
repz
cmpsb
fcomip
push
out
dec
add
sbb
fbstp
fcomi
lock
cmp
dec
bound
test
fstpl
mov
rorl
sbb
add
ljmp
sarl
add
adc
cmp
ret
jae
mov
popf
lds
daa
adc
sbb
ret
xor
sahf
mov
cmp
pop
xlat
jne
xor
xchg
outsl
mov
mov
mov
in
test
and
inc
fldcw
sahf
inc
mov
shll
pushf
aad
cwtl
faddl
es
je
inc
sub
dec
jg
add
sbb
in
push
lret
xlat
movsb
loop
pop
sahf
push
nop
jl
rol
xor
roll
sarb
add
sub
clc
cltd
push
jns
jecxz
push
ret
mov
sub
mov
scas
addr16
mov
xchg
mov
or
xchg
ljmp
call
xchg
pop
mov
xchg
mov
loope
fdivrp
xchg
dec
sub
lret
leave
mov
and
insb
stos
loopne
js
sub
fs
xor
mov
mov
popf
sub
cmp
jmp
ds
mov
out
imul
jg
aad
pop
les
sub
cmpsl
xchg
dec
or
mov
lea
arpl
andl
mov
dec
bound
mov
push
out
fsubr
add
push
jns
loop,pn
push
or
push
jne
sub
nop
add
pop
cmp
add
mov
or
xor
xadd
and
mov
fbld
sub
sub
ja
nop
sbb
push
es
mov
sub
jno
adc
and
inc
ljmp
mov
or
pop
mov
inc
xlat
lods
outsl
or
dec
jl
jbe
pop
test
dec
sub
lock
inc
outsb
cmp
ss
xchg
push
addr16
pusha
rorb
sbb
cmp
push
data16
int3
stc
cmp
sub
xchg
mov
out
imul
xchg
sbb
fwait
insl
xchg
mov
mov
sbb
mov
add
inc
jbe
and
iret
cwtl
fstl
fcoml
les
add
stos
pusha
inc
fs
jb
insb
loop
inc
and
xchg
and
adc
std
mov
cmp
pop
bound
addr16
enter
je
fbld
loope
idivb
jl
add
movsl
xchg
ds
add
xchg
inc
mov
cld
mov
inc
test
aad
dec
jge
or
adc
inc
mov
add
in
and
lahf
pop
xchg
test
pop
and
fiaddl
ret
cmpb
rcl
xchg
pop
lret
nop
lods
mov
bound
jl
int3
mov
push
stos
aaa
dec
enter
xchg
inc
das
pop
imul
push
imul
imul
popf
cwtl
sbb
sarb
dec
mov
movsb
mov
mov
dec
push
add
xorb
call
sbb
dec
lret
stos
ret
iret
push
stos
test
jecxz
cmc
adc
lret
pop
insb
push
imul
cmp
in
dec
daa
pop
movsb
or
xor
out
aaa
popa
sahf
or
enter
xor
idivb
hlt
pushf
pop
cmp
cmp
push
add
dec
imul
xor
into
mov
outsl
dec
bound
and
shll
out
aaa
and
xchg
imul
int3
aaa
nop
dec
out
outsl
jl
mov
je
imul
arpl
ss
and
loop
jp
fldt
push
xor
fadds
mov
mov
xchg
jecxz
cld
adc
mov
add
mov
ret
inc
pushf
mov
cmp
insl
push
sub
jae
popa
and
adc
sbb
xchg
mov
lds
lahf
sarl
jae
mov
and
ja
imulb
xor
sahf
insb
jp
js
sbb
jp
aam
xchg
add
and
sarb
fwait
sahf
push
add
mov
inc
push
sub
pop
in
jns
ficomps
mov
mov
xor
dec
test
sarb
pop
in
lock
clc
dec
sbb
pop
cltd
jne
fnstenv
push
or
sub
dec
mov
divb
xlat
fsubrl
jae
inc
sbb
push
in
cmp
ss
mov
stos
imul
rolb
jle
dec
std
jno
dec
aad
jp
or
ljmp
es
push
and
aad
scas
mov
push
shr
mov
adc
mov
mov
mov
adc
testl
mov
rcrl
cmp
mull
push
jp
add
lahf
cmovl
pop
es
inc
sbb
pop
lahf
mov
les
or
lcall
add
pop
cmp
mov
icebp
adc
and
fistpl
repnz
pop
pop
dec
call
xor
cmp
sub
iret
repz
pop
cmp
sub
inc
jno
adc
sub
loopne
inc
lahf
cmp
cmp
scas
test
mov
aaa
mov
daa
push
js
cmp
into
enter
cmp
pop
insb
pop
sub
incl
push
adc
push
in
arpl
add
sub
add
mov
xor
repnz
mov
dec
add
in
ret
mov
repz
inc
pop
shrb
add
push
nop
jbe
xor
xor
iret
stc
sbb
sbb
cmp
leave
and
cwtl
push
arpl
aam
sub
jmp
or
outsb
xchg
push
stc
sub
hlt
lods
xchg
add
movsb
nop
cmpsl
movsl
mov
inc
fisttpll
in
andb
leave
dec
cmp
xor
pop
hlt
les
ja
jg
push
js
sbb
cltd
test
push
jo
jb
sub
aad
pop
fidivrl
push
mov
or
lret
ret
add
lock
iret
adc
xor
in
scas
loopne
jb
cwtl
das
dec
pop
mov
jbe
mov
lret
mov
sbb
push
mov
outsb
add
adc
xor
adc
push
add
js
addb
push
adc
push
mov
xor
icebp
or
inc
xor
pop
cwtl
sarb
xchg
sub
aam
mov
mov
mov
loope
adc
inc
mov
pop
sub
push
push
aad
inc
mov
mov
sub
invd
pop
dec
lret
inc
jl
push
cli
push
sbb
clc
fs
jle
adcb
xor
sahf
mov
enter
les
cld
sbb
and
or
and
xchg
adc
mul
lea
push
cltd
lds
lret
mov
push
or
int3
int
sbb
push
pusha
add
pusha
out
dec
sahf
or
movsl
pop
mov
stos
ja
in
and
push
movsb
adc
mov
sbbl
outsb
dec
mov
hlt
and
pop
xchg
imul
insb
test
xchg
dec
dec
sbb
inc
push
jne
sahf
loop
or
push
xlat
mov
arpl
jge
pop
out
aas
icebp
sbb
push
mov
lcall
lock
daa
and
cmp
push
mov
repnz
sbb
and
lods
pop
lcall
ret
or
lods
mov
mov
sub
test
add
push
cmp
fstpl
push
mov
into
dec
adc
adc
cmp
inc
or
add
repz
mov
ret
mov
jl
add
divb
test
sub
test
pop
es
push
pop
inc
lds
jecxz
mov
push
xchg
ljmp
in
je
pop
xor
cmpsb
mov
xor
mov
sub
cmpsb
les
xor
stc
xchg
repnz
movsb
pop
cmp
xchg
insl
pop
fiadds
jl
enter
lock
mov
stc
jno
cmp
js
stos
repz
xor
jne
jge
and
lock
add
fdivrs
pop
imul
cli
mov
mov
test
sub
adc
enter
jnp
push
and
ret
pop
out
jp
adc
sub
mov
pop
dec
ljmp
xor
inc
stos
insb
mov
jle
dec
rcll
lea
popl
pushf
add
inc
pop
cmp
fcoms
jo
leave
sbb
aaa
out
cmp
jne
repz
xlat
addr16
cmp
xor
repnz
jnp
pop
and
insl
movsb
inc
sub
mov
sbb
cmp
fnstsw
nop
push
arpl
xor
and
jo
or
mov
jge
adc
andl
mov
or
mov
push
cmp
lods
aam
in
lret
jmp
xchg
lret
jmp
jg
sbb
inc
fnstcw
es
xchg
mov
or
fists
outsb
lods
sbb
loopne
or
ja
inc
js
pusha
clc
pop
cmp
hlt
jmp
aas
add
daa
cmp
mov
lds
pushf
dec
jg
lods
xchg
in
addr16
ljmp
push
stos
add
sbb
xor
xchg
std
loop
and
sar
xor
mov
dec
mov
pop
daa
inc
and
fistpl
call
inc
or
cvtps2pi
jmp
ror
out
inc
imul
ret
shll
mov
inc
jbe
fs
dec
aam
xor
rolb
dec
stc
loop
mov
or
dec
int
scas
les
rcrl
outsl
mov
lcall
mov
mov
adc
ficoml
jnp
int
pop
movl
movsb
dec
fstl
cmp
js
mov
mov
cmp
xor
and
sbb
sub
sbb
inc
dec
xchg
cmp
mov
pop
int
out
and
sbb
jecxz
fidivrs
jmp
jb
cli
lea
fsubs
loope
cmp
mov
lds
fcoms
push
xchg
jo
mov
data16
pop
hlt
inc
cmc
dec
mov
loopne
jns
fstps
push
dec
repnz
outsb
jp
inc
popf
pop
nop
repnz
scas
cmovp
pop
mov
cmp
add
testl
stc
pop
je
movsb
fnsave
cmc
mov
mov
xchg
in
push
mov
sbb
femms
cmp
fstpl
stos
out
lea
sbb
out
mov
pop
das
out
addr16
add
lcall
test
and
sub
mov
add
test
iret
xchg
je
in
sub
jecxz
cmpsb
in
inc
out
scas
outsl
lret
mov
add
pushf
jb
movsl
dec
insl
fldcw
adc
cmpsl
or
or
push
loopne
pushf
ret
sub
sti
or
hlt
xchg
mov
push
lock
pop
xor
push
dec
test
dec
ljmp
in
dec
pop
pop
sbb
adc
popa
icebp
xor
push
fldl
repz
mov
dec
add
int3
ret
cmp
jbe
dec
mov
outsb
jo
cmpsb
lret
xor
je
ret
imul
pop
lret
mov
and
lea
es
and
jmp
or
push
je
sub
and
pop
bound
cwtl
xchg
or
test
sets
dec
fwait
push
pushf
mov
jg
fistpl
aam
mov
jne
xchg
das
or
cmp
sbb
bound
out
cmpsl
xor
loopne
mov
insl
cltd
jle
call
lret
cltd
out
ds
adc
adc
jl
cmpsb
rclb
aad
xchg
int3
inc
cmc
dec
pop
andl
mov
outsb
enter
cwtl
pushl
pop
rol
add
fcomps
dec
shrl
testb
movsb
xor
ja
pop
pop
ror
iret
repnz
pop
dec
mov
push
gs
inc
sbb
out
js
stos
popa
scas
out
dec
mov
imul
outsl
push
and
stos
mov
in
mov
add
xor
sub
sub
mov
jecxz
add
scas
pop
cld
iret
aaa
jnp
push
mov
outsb
jge
sbb
ljmp
repnz
mov
and
fstpl
cwtl
addb
scas
mov
or
aas
ljmp
pop
aaa
xchg
pop
cmpsl
sub
fmul
mov
and
in
and
xchg
nop
mov
ds
xchg
sbbb
lcall
lahf
and
push
xchg
out
loopne
or
repnz
push
sub
xor
mov
mov
lahf
int3
sub
mov
push
xchg
and
ss
ret
insb
pop
scas
insb
lret
fistl
adc
jnp
inc
add
jge
icebp
xor
cmpsb
dec
inc
cld
pop
push
push
xchg
out
mov
sub
add
or
jle
stc
sub
or
or
dec
push
js
vmovdqu
test
mov
lds
fwait
pop
and
aam
adc
les
push
ret
xchg
fldl2e
or
fdivs
test
mov
mov
sub
in
cmp
js
and
gs
mov
outsl
xor
mov
push
sbb
jb
aam
ljmp
insl
adc
enter
incb
lock
cmp
xchg
outsl
enter
push
push
std
push
fidivrl
lahf
jnp
dec
jp
mov
les
nop
cmp
jle
jge
cmp
stos
aas
push
xchg
hlt
and
xor
mov
int3
sub
out
and
js
inc
ret
jg
out
add
icebp
pop
push
mov
das
addl
dec
cwtl
xchg
movsl
cmp
jp
jns
js
paddb
cwtl
rclb
lea
test
dec
scas
jne
aam
push
in
repz
scas
dec
dec
push
shlb
sub
dec
xor
ret
mov
mov
push
ja
push
imul
in
popa
bound
cmpsb
mov
lahf
mov
mov
pusha
dec
dec
adc
sub
push
push
mov
cmp
ja
cli
sbb
mov
stos
push
pusha
adc
xor
fidivrs
or
and
cmp
subl
pop
add
sbb
or
mov
pop
sbb
pop
jns
push
push
lds
lods
or
pushf
mov
xchg
pop
pop
cmp
adc
cld
sti
xor
xor
out
fs
fstps
sbb
loopne
add
cmp
xchg
inc
pop
cmp
into
es
mov
inc
push
out
outsb
pop
subl
sbb
int3
jb
ds
mov
out
push
jl
mov
call
fdivrl
mov
add
sarl
jb
mov
repnz
pop
cmp
xchg
adc
lods
repz
mov
and
and
cmp
jo
jp
mov
iret
and
lods
cmpsl
mov
test
ljmp
jg
cmpsb
and
dec
stos
mov
xor
mov
adc
movsb
jl
push
shlb
xlat
adc
movsb
mov
cmp
xchg
fists
dec
mov
loop
mov
push
scas
or
rcll
mov
jge
mov
xchg
push
mov
stc
loope
test
inc
pop
mov
scas
clc
test
orl
mov
mov
sti
stos
cmp
repnz
icebp
scas
aad
stos
cmpsl
enter
stc
std
fwait
pop
xchg
push
push
hlt
xchg
jbe
jle
pop
fistl
dec
jnp
xchg
sbb
rolb
lds
je
fldz
jo
in
sbbl
cwtl
insb
sbb
cmpsl
xchg
push
icebp
cmp
pop
lock
loopne
shrl
or
pop
fldenv
std
aam
push
inc
call
lcall
lea
pushl
mov
pop
lods
movsl
pusha
repz
inc
and
dec
mov
dec
push
lods
ss
push
mov
cwtl
pop
sub
jo
je
cwtl
push
mov
add
and
or
xor
lret
mov
pop
cmc
cmpsl
pop
cmpsb
pop
push
pop
repz
cmp
adc
movsl
and
mov
sub
in
ja
lret
mov
aaa
arpl
stos
pushf
and
test
xor
das
inc
jl
fsubr
scas
mov
jl
xor
in
loopne
fwait
jp
dec
cmc
dec
cmp
mov
adc
xchg
adc
jg
rcrl
dec
lahf
dec
jg
imul
dec
push
pop
jmp
mov
iret
dec
stos
movsb
shrl
mov
mov
into
xor
pushf
scas
cmp
push
stos
mov
jg
add
lock
stos
dec
xchg
sahf
pop
or
stos
or
xchg
xlat
fmul
es
cld
push
cmp
mov
or
int
push
bound
push
arpl
mov
addr16
test
sbb
sarl
jmp
js
inc
xcrypt-ofb
cmpsl
sub
pop
in
daa
xor
js
push
outsl
fbld
dec
dec
xor
movsb
jnp
sub
cwtl
arpl
sbb
fists
ror
sbb
mov
out
or
outsl
stc
std
testb
pop
decl
push
fsubp
sbb
shrb
jne
jnp
pop
inc
mov
loop
inc
xor
xor
jle
mov
in
cmp
pushf
lock
xchg
mov
shlb
fcompl
punpckldq
mov
and
xlat
cld
xchg
mov
xchg
mov
mov
aam
xchg
jmp
ret
inc
es
aad
or
aad
pop
add
dec
or
aad
loope
pop
aam
loopne
rolb
pop
testb
leave
and
fwait
cmp
lea
into
push
sub
add
and
call
push
adc
jne
mul
das
cmp
pop
pop
arpl
and
repz
jp
iret
xor
fcom
pop
lea
inc
pop
or
mov
xlat
add
int3
mov
cmp
and
and
js
sub
jp
ljmp
lcall
ror
int3
test
pop
cmpsl
add
lret
push
cld
test
addr16
push
incl
fiaddl
jmp
aas
movsb
adc
fcomps
gs
test
scas
xchg
ret
mov
pop
mov
push
lods
loopne
aam
pop
cmp
sub
xchg
in
sbb
mov
bound
xchg
and
dec
sbb
shrb
jge
inc
ret
mov
add
in
clc
ja
mov
ss
add
leave
xchg
sub
mov
pop
dec
fmuls
out
movsb
and
cmp
jo
pop
mov
cmc
fdivs
sub
and
lcall
mov
mov
add
mov
popa
pop
mov
cmp
lods
pop
pop
xchg
jl
call
decb
sub
std
test
pop
xor
repz
cmpsl
mov
and
test
fstpt
es
shll
out
std
sbb
std
jmp
and
das
cmpsl
lods
push
and
xchg
fsubrp
stos
push
ss
cltd
inc
cld
sbb
test
negb
je
push
dec
sti
xor
outsb
stc
cmp
iret
adcl
push
add
xor
imul
sbb
in
adc
add
inc
inc
fnstenv
push
movl
ds
cmp
mov
inc
cmp
call
loopne
lret
popa
aaa
push
scas
ret
das
inc
push
jmp
lahf
lock
idiv
adc
jnp
pop
xchg
lret
aam
lcall
xchg
mov
call
lods
arpl
out
aaa
in
pop
cmpsb
cwtl
pusha
imul
lock
in
push
faddl
sbb
cmp
ret
aas
in
out
push
das
xor
imul
hlt
daa
jns
pop
sub
lahf
adc
dec
roll
push
jo
stc
pop
repnz
add
xchg
adc
mov
ljmp
ljmp
xchg
insl
in
nop
cmc
daa
mov
stc
cs
dec
iret
jnp
mov
sub
cmp
arpl
js
mov
cmp
jge
inc
ljmp
or
ret
std
inc
mov
push
xor
movl
sbb
pop
ds
gs
push
addr16
lock
loopne
clc
lea
dec
sub
fwait
cmpsb
cmp
mov
add
fwait
in
sti
std
cltd
sub
out
sbb
xor
jbe
or
sbb
sbb
add
sub
jno
stc
sub
outsl
sbb
cmp
out
sbb
test
jne
fs
pop
inc
sbb
push
cmc
xor
lea
pop
arpl
sbb
pop
aas
mov
cs
add
push
leave
jmp
jge
inc
push
cmp
icebp
or
mov
nop
sbb
cmpsl
pop
adc
pushl
or
adc
mov
or
mov
iret
mov
add
adc
hlt
pushf
sub
fimuls
jno
pop
ret
insl
sub
mov
mov
sub
push
hlt
sarl
mov
fidivrs
push
loope
pushf
loope
jae
jne
adc
adc
mov
mov
bound
push
in
mov
inc
fsubrl
push
mov
enter
lret
fs
fistl
sbb
popf
dec
sbb
mov
jo
push
fsubrl
xchg
push
and
test
push
sti
into
into
leave
sbb
or
cld
jp
inc
orb
push
jecxz
cmp
push
rcrb
subl
mov
pop
inc
mov
repnz
jnp
nop
add
push
imul
jg
enter
movsl
cld
orb
jns
add
std
inc
lcall
mov
sub
pushf
push
cs
fucom
test
pusha
andb
mov
in
inc
movsl
aam
cmp
mov
pop
mov
pop
push
out
pop
sub
sbb
repz
stc
xor
stos
scas
xchg
adc
push
lea
gs
out
inc
ret
inc
and
adc
aad
sub
push
es
jmp
add
inc
jmp
pop
and
lret
jg
out
sub
dec
lret
inc
mov
sbb
loop
jle
jecxz
arpl
cmpl
not
or
mov
gs
popf
push
and
jnp
push
push
addl
stos
aas
push
movsb
or
scas
scas
and
xchg
inc
sbb
idivb
scas
clc
dec
int3
xchg
testb
cmp
stos
into
data16
jp
add
mov
or
das
xchg
or
pop
dec
pop
cmc
jmp
push
push
stos
pop
xchg
dec
hlt
addr16
push
sbb
bound
das
xchg
lcall
repnz
xchg
lods
test
sub
mov
sbb
test
in
pop
add
mov
das
or
test
adc
nop
scas
xchg
mov
xchg
test
jle
cli
repnz
xchg
jmp
jge
xor
inc
dec
sbb
and
dec
outsl
push
pop
mov
xor
cmp
xor
lods
sbb
aad
jb
out
in
dec
aas
or
mov
in
lea
cmp
mov
ret
lahf
inc
sub
loopne
mov
shrb
pop
ret
test
leave
inc
sub
jmp
sub
pop
inc
and
add
adc
and
jmp
and
mov
fstpt
or
inc
sti
jo
js
shlb
lods
icebp
adc
aas
in
adc
ds
stc
mov
cli
lds
jbe
insl
rol
shll
mov
scas
mov
test
sbb
pop
out
and
xor
test
xor
hlt
ret
sbbl
stos
push
mov
jnp
jmp
pop
mov
orl
loop
mov
push
adc
fstps
jecxz
aas
jns
sbb
cmp
call
out
lods
mov
aad
dec
pop
and
lret
inc
out
and
pop
pop
pop
loope
mov
ret
pop
inc
das
cs
and
int
push
push
mov
insb
lds
xchg
std
inc
cmp
jge
inc
sub
clc
lods
lret
push
sahf
pop
test
jbe
add
mov
dec
mov
rcrl
dec
fcompl
mov
movsl
lock
fiaddl
lret
aas
call
mov
mov
push
shl
pop
aaa
adcb
xchg
push
sbb
jp
stos
out
fdivp
bound
lahf
les
mov
inc
mov
rcrl
fsubl
aam
stc
xchg
mov
inc
xor
idivl
push
xchg
adc
lcall
sbb
inc
mov
repz
into
pop
fldenv
insb
int3
adc
xlat
jnp
fsincos
out
das
addl
push
in
cmp
popa
or
ret
xlat
inc
clc
pop
push
ficoms
lcall
repnz
dec
cmpsl
into
mov
repz
sahf
cwtl
cmp
pop
mov
das
xchg
adc
add
mov
icebp
mov
aaa
repnz
adc
sbb
or
insb
jle
cmp
cwtl
inc
stc
call
pop
push
outsb
sbb
add
inc
lods
adc
das
dec
in
ss
dec
mov
jge
scas
cmp
shr
fwait
nop
push
adc
popa
mov
mov
outsl
xor
xchg
fisubl
nop
dec
mov
or
push
push
cltd
pop
fdivs
lahf
push
jp
xchg
mov
lock
imul
sahf
popa
dec
push
mov
jo
mov
mov
sub
adc
mov
pop
mov
dec
lahf
repz
cmpsb
push
call
ss
mov
in
gs
gs
clc
push
mov
insb
stc
test
test
mov
in
and
add
out
lods
dec
xchg
popf
mov
add
or
cmpsl
xlat
push
mov
test
scas
mov
xchg
push
sub
outsl
and
mov
jb
sub
cld
add
pusha
mov
inc
or
enter
loope
adc
push
xchg
outsb
outsl
lds
add
sahf
leave
xchg
repnz
mov
std
mov
mov
xor
dec
in
pop
orl
aad
sbb
notl
dec
in
mov
push
cmp
xlat
ret
sarl
subl
bound
xchg
cmp
outsl
movsb
cld
or
lret
fnop
xchg
jno
and
sbb
mov
mov
sub
fucomp
mov
dec
mov
inc
adc
mov
and
insl
dec
mov
cltd
sbb
add
or
jae
pushf
stos
add
test
data16
jmp
in
sbb
add
ss
cli
out
mov
jg
mov
stos
or
adc
pop
out
sbb
and
pop
add
mov
xlat
sbb
pop
fldt
dec
add
or
pushf
popf
cmc
add
jge
jae
add
or
xlat
das
incb
aaa
enter
repnz
inc
fmull
or
sarb
xor
lea
pushf
insl
and
das
fcomps
arpl
jg
pop
and
lds
mov
push
js
aam
sub
inc
in
jg
lods
jle
add
cmp
adc
aam
outsb
xchg
mov
imull
mov
sbb
mov
mov
pop
popf
dec
lods
sti
fidivrl
and
inc
testl
aas
add
jecxz
lock
sub
test
pop
dec
sbb
push
xchg
pop
push
bound
and
ja
int3
mov
pop
outsb
push
daa
push
and
sti
lret
xor
sub
pop
mov
push
cmp
mov
xchg
pop
sub
sbb
scas
loop
xor
cmp
dec
fld
mov
imul
sbb
test
clc
pop
jae
out
std
and
sbb
mov
inc
movsl
lret
lds
clc
mov
enter
int
jmp
jae
mov
xor
sti
xchg
push
and
sbb
or
leave
ss
js
pop
lds
lret
lods
or
dec
cmp
rcrl
push
dec
rcrb
stos
cmp
ljmp
out
sti
cmp
pushl
push
roll
loope
movsb
adc
fists
cmp
push
add
adc
in
aas
popf
inc
stc
aaa
cmp
sarb
mov
pop
popa
mov
test
call
and
cmpsl
xor
inc
cmc
and
dec
push
pop
dec
inc
ret
add
and
sub
pop
add
mov
pop
int
adc
jl
call
jge
push
push
sbbb
cmp
sbb
fstps
sbb
and
ds
stos
sub
int3
sahf
or
popf
in
pop
or
adc
icebp
nop
jb
dec
arpl
in
and
es
sahf
mov
std
mov
push
fwait
and
ret
cmp
jbe
mov
push
push
stos
shlb
xchg
inc
mov
shrl
ds
xor
mov
pop
mov
ret
cmp
mov
push
icebp
xchg
mov
cli
jae
dec
mov
cmp
js
mov
mov
mov
imul
in
gs
jge
jbe
mov
xor
fwait
lods
push
cmp
xor
lcall
or
pop
inc
push
cmc
sbb
out
mov
dec
mov
inc
add
xor
mov
jecxz
pop
scas
scas
push
adc
jae
dec
dec
pop
dec
mov
call
xchg
mov
jle
sbb
jnp
xlat
push
stos
in
int3
ret
mov
in
das
or
xor
int3
inc
pop
and
mov
mov
aad
mov
movsb
popf
jle
sbb
mov
xchg
add
bsf
ja
testl
mov
shll
gs
mov
es
test
sub
inc
int
xor
inc
stos
push
mov
fwait
sarb
sarb
xor
mov
fildll
roll
push
pop
mov
outsl
mov
mov
or
cwtl
and
cmp
pop
test
test
sub
mov
pop
int3
imul
push
and
lcall
aaa
cmpsl
pop
daa
mov
push
into
push
dec
repz
cli
mov
out
test
scas
icebp
pop
sub
add
ret
lods
pop
adc
arpl
adc
cmp
mov
jecxz
popf
mov
pop
jo
ds
mov
int
sbb
mov
les
mov
fnstsw
ljmp
xchg
loop
sub
adc
out
xor
and
lret
jle
xchg
ljmp
in
movsl
add
lret
xchg
inc
xchg
ret
popf
pushl
lock
pop
push
jnp
std
and
pushf
inc
xor
jecxz
cli
mov
sub
jp
xchg
pushf
adc
dec
popa
jl
jmp
scas
mov
dec
adc
shlb
cltd
aas
les
jecxz
jge
cmpb
test
pop
iret
lods
fisubrl
out
mov
xchg
fmul
imul
dec
nop
daa
insl
pop
sbb
mov
shll
push
ja
adc
stc
dec
iret
cmpsb
mov
sbbl
stos
fs
jne
inc
jb
jbe
movsb
hlt
mov
sub
fisttpl
push
sti
mov
loop
in
or
mov
pop
push
cmp
xchg
stc
mov
aad
lods
jp
and
repnz
insl
pop
mov
add
adc
or
mov
mov
sub
scas
xchg
sarl
dec
jbe
mov
or
xor
rcrb
rol
lahf
mov
xchg
imul
outsl
and
lods
inc
es
dec
cltd
mov
gs
jle
add
dec
mov
fildll
adcb
jb
stos
cmp
cmp
jg
push
xor
test
sub
dec
int
test
xor
xor
sbb
call
sbb
dec
iret
jo
stos
imul
mov
push
aad
push
les
out
daa
test
push
sbb
fiaddl
jne
rcrb
xor
adc
enter
sahf
bound
cmc
loope
clc
pop
ss
cli
adc
push
fcoml
ljmp
mov
ds
mov
push
pop
push
cmc
mov
xor
ret
inc
sbb
mov
inc
or
add
notb
xchg
inc
xstore-rng
cmpsl
inc
addr16
icebp
int3
outsb
xor
mov
mov
adc
gs
or
pop
aaa
cmpsb
ficomps
jecxz
stc
repz
shl
push
cmp
push
lahf
test
xchg
cmp
cmc
into
add
movsb
mov
stos
jl
mov
dec
jne
mov
inc
stos
rorb
cmpb
fldcw
into
cs
std
mov
sub
insb
xor
pop
inc
mov
dec
inc
daa
clc
dec
inc
sbb
pop
in
loop
cmp
pop
leave
in
mov
pop
add
sbb
pop
mov
cmp
pop
mov
outsl
sub
inc
sub
loopne
jo
push
sub
push
sahf
cmp
pop
fidivs
and
cmp
pop
jae
inc
pusha
aaa
repnz
movsl
dec
xor
ljmp
fisttpll
inc
stc
pop
pushf
mov
test
cmpsb
mov
repnz
add
popa
adc
xchg
sbb
mov
cli
jmp
xchg
lock
xlat
lea
mov
out
mov
mov
sbb
inc
or
cmp
mov
ds
sbb
push
sti
stos
push
cs
push
xor
int
jo
fisubrs
lea
xorl
ljmp
cmp
mov
xor
cmp
jge
inc
pop
repz
mov
mov
dec
jecxz
mov
std
test
push
xchg
jne
xchg
push
cmc
scas
xor
sub
add
push
adc
fidivs
and
ljmp
mov
cwtl
sub
mov
std
popa
adc
decl
push
cmp
push
xlat
push
adc
incb
mov
fnstenv
addr16
es
xchg
lret
lds
add
and
js
sub
pop
andl
lahf
jo
add
push
or
popf
pushf
pop
pop
mov
cltd
and
dec
xchg
and
sahf
ds
stos
iret
dec
mov
les
adc
rclb
push
sub
in
sbb
rol
cmp
push
jg
popa
lahf
dec
jl
out
xchg
mov
sbb
stos
mov
outsl
add
push
lcall
lock
scas
sbb
mov
mov
mov
fsqrt
push
add
fistpl
pop
fwait
insl
rclb
stos
rorb
dec
sbb
pop
inc
aam
outsb
mov
in
jmp
inc
sub
dec
cmpsb
jb
xchg
sbb
push
ja
out
mov
lret
leave
cli
cmpsb
jne
xchg
rep
adc
sub
aad
loop
out
sub
sub
xchg
aam
mov
shll
mov
fldcw
lods
jecxz
repz
add
sub
mov
push
fsubrl
adc
mov
leave
int
sbb
inc
mov
shr
mov
movsl
aaa
js
call
mov
pop
aaa
leave
mov
fdivr
or
push
sbb
popf
push
aaa
cmp
lret
cmpl
ret
cld
xchg
sub
iret
sahf
mov
testl
int
std
stos
dec
icebp
cmp
ss
clc
lea
or
daa
mov
add
hlt
push
xchg
call
stc
sub
aam
popf
pop
cld
insb
push
ss
into
arpl
cmp
cmp
bound
test
rorb
shlb
leave
push
stos
popa
neg
js
pop
sti
push
sub
dec
test
insb
test
cld
mov
cmp
jne
jge
testl
cltd
mov
sub
inc
arpl
cmpl
repnz
lahf
or
shll
adc
jnp
cmp
out
jle
mov
loop
std
mov
dec
mov
icebp
ljmp
setp
jmp
loopne
fstp
test
mov
mov
scas
das
dec
neg
jecxz
dec
ret
daa
js
nop
mov
jge
outsb
sahf
cmp
mov
push
push
mov
xor
in
sbb
roll
cmc
dec
sbb
push
jns
popa
clc
push
jo
enter
push
dec
rcrb
or
mov
or
adc
add
jmp
aad
sarl
mov
xlat
jmp
mov
repnz
jne
movsl
out
add
mov
int
mov
loope
push
lret
test
lcall
pop
clc
stos
pusha
adc
add
xlat
mov
out
movsl
cs
jns
and
sbbl
addl
inc
divb
out
in
call
xor
xor
jecxz
cld
jns
fists
lahf
sbbb
call
xlat
jb
std
mov
pop
jnp
inc
cmp
pop
cmp
inc
sub
adc
xchg
ret
int3
add
mov
loopne
ret
es
jl
aad
ljmp
sub
rcll
mov
mov
xchg
mov
or
cvtps2pd
push
cmp
sar
cmp
out
iret
xchg
pop
es
fnstcw
adc
jg
inc
enter
lahf
cmp
xorl
mov
testb
lret
add
push
or
xchg
insl
pop
lods
mov
test
bound
scas
inc
mov
inc
aam
fld1
push
sbb
ds
arpl
or
in
inc
addb
and
xor
lds
sub
aaa
jae
fwait
dec
std
std
imul
lock
inc
repnz
add
cmp
out
mov
outsb
lock
xor
scas
nop
rcrl
xor
inc
xchg
mov
into
fiadds
sbb
pop
mov
add
in
pop
enter
out
xorb
push
push
mov
imul
sub
mov
dec
xchg
subl
add
mov
repnz
xor
pop
and
cmp
mov
add
or
xlat
test
lret
sub
loopne
int3
jg
lods
jae
call
push
cmpsl
mov
add
pop
ja
cwtl
movsl
xor
jecxz
insl
sbbl
jno
negl
push
push
sub
fistpll
dec
or
sub
mov
push
mov
cmpsl
fisttpll
shlb
stc
roll
leave
inc
and
mov
mov
xchg
cld
cmpsb
pop
dec
jecxz
in
pop
leave
cli
subb
int
out
pop
fdivs
ds
mov
push
dec
out
push
and
rorl
cmp
add
hlt
cmp
popa
iret
push
shll
push
mov
add
sub
push
pusha
add
into
push
rclb
mov
mov
jecxz
lds
or
imulb
jle
xchg
jb
outsl
add
das
lahf
push
mov
jle
pop
xchg
loope
insl
fidivrs
inc
ss
push
mov
add
hlt
mov
and
les
inc
and
std
or
subb
xchg
test
mov
jge
sbb
aaa
rolb
les
clc
ret
dec
mov
dec
popa
sub
out
outsl
xor
jo
adc
inc
push
xchg
add
and
jmp
bound
gs
push
daa
mov
lods
jle
mov
jle
insb
lods
jb
addr16
add
mov
adc
xchg
std
jmp
pop
jo
push
jae
xchg
or
cmpb
mov
inc
and
lcall
loope
stos
pop
or
xlat
js
fs
lds
imul
xchg
inc
ja
js
loopne
xchg
add
popa
jns
sbb
ljmp
test
xor
ss
sbb
jge
aam
or
ret
pop
test
cmp
cwtl
mov
jmp
pop
xlat
jecxz
fwait
xlat
mov
cld
je
aam
adc
sbb
gs
cmp
sbb
int3
cwtl
adc
mov
adc
mov
cmp
and
mov
pop
outsb
jbe
ja
sub
mov
sub
adcl
push
and
and
lock
mov
lret
adc
test
js
push
sub
mov
in
test
ja
mov
push
inc
js
jb
pop
ljmp
fcom
pop
mov
clc
leave
in
jae
shll
dec
pop
sbbb
adc
jg
xchg
test
stos
mov
nop
sub
out
ss
sub
jno
jge
mov
and
pop
mov
and
inc
mov
loopne
leave
js
mov
movsb
mov
dec
testl
sbb
pop
shr
add
aaa
je
ja
add
jle
test
mov
fisttps
es
sub
fidivrs
pop
lea
adc
xor
test
stos
rolb
testl
insl
xor
loopne
jbe
push
inc
lcall
and
in
jo
arpl
pop
push
jmp
or
mov
add
jg
fwait
xlat
in
mov
pop
push
neg
popa
bound
mov
shll
jns
fildl
jne
std
or
and
shl
and
int
adc
cli
mov
int3
mov
and
mov
pop
lock
sub
enter
inc
adc
repz
sub
dec
mov
icebp
inc
mulb
subb
test
inc
inc
add
mov
adc
dec
or
imul
loopne
frstor
jae
ret
fcmovu
cmpsb
jle
cld
loop
push
repnz
ja
pop
push
inc
stc
push
out
lods
sbb
lea
xor
sub
testb
xorl
ja
insl
sbb
xchg
loop
adc
push
xor
xor
iret
xchg
mov
vmovaps
test
push
hlt
or
fidivrl
popf
cmp
pop
or
arpl
popf
fcmovbe
sub
and
jp
add
loopne
stos
shl
dec
in
jns
pop
shll
in
inc
inc
sti
hlt
adc
push
arpl
pop
sbb
jp
flds
scas
ja
or
fstpt
stos
flds
mov
or
jecxz
das
mov
nop
nop
cli
data16
stos
mov
sarl
scas
pop
int3
mov
out
mov
in
scas
or
outsb
movsb
adc
add
xchg
in
sub
sarl
cltd
cmp
jb
test
xchg
lds
mov
pop
icebp
push
jb
aam
loop
sbb
pop
push
les
xor
adc
or
pop
aas
out
fisubrl
or
mov
lcall
mov
sbb
ss
test
adc
inc
jb
or
in
cli
mov
xchg
lcall
lock
scas
pusha
push
pusha
push
sub
xor
jnp
lea
dec
dec
pop
insb
jp
fimuls
dec
jno
imul
shl
jg
aad
mov
sub
dec
pop
movsb
cmpsl
into
cltd
cs
cli
push
jl
jae
aad
add
inc
push
fcmove
xchg
out
ljmp
mov
add
add
xor
mov
and
jge
scas
adc
jp
ret
call
sbb
scas
bound
test
in
cmpsb
jb
push
push
or
in
fldl
inc
pop
out
jb
push
add
xchg
scas
fstl
pop
aam
in
fimull
xchg
bound
idivl
sbb
cmp
imul
outsb
push
bound
leave
mov
mov
enter
push
je
stos
lret
cmp
shrl
imul
jo
xor
sbb
ljmp
fisttps
fwait
out
or
scas
xor
xor
mov
xor
adc
iret
idivb
fdivs
ljmp
idiv
pop
lods
dec
jo
das
aam
jae
jb
and
sub
fwait
test
sub
int3
jnp
mov
sbb
notb
test
lea
dec
idivl
jg
mov
lods
pusha
add
adc
call
addr16
out
imul
pop
mov
fisubl
popa
js
loopne
dec
jne
cmp
inc
ja
jmp
pop
dec
mov
mov
or
pop
jne
notb
out
testb
jbe
std
outsl
sbb
test
imul
inc
push
jo
scas
pop
in
cmp
pop
sub
iret
or
idivl
dec
sbb
xor
adc
mov
bound
in
pushf
negb
pop
xchg
pop
test
push
pop
and
icebp
sub
pop
sti
and
mov
fisubs
mov
pop
jnp
mov
xor
in
sub
or
xchg
loop
jge
arpl
xchg
mov
mov
mov
or
out
cli
ret
shrb
mov
cmc
xchg
dec
jle
push
mov
lods
mov
lods
outsl
sub
inc
sbb
mov
pop
inc
jo
pop
shl
xor
je
adc
pusha
popf
lock
loopne
stos
push
out
aad
pop
mov
call
aaa
cmpl
call
inc
test
add
loopne
and
das
jecxz
lea
xchg
mov
dec
pop
out
or
sbb
cltd
pop
mov
lea
enter
movsb
stos
ss
inc
loopne
mov
popf
adc
push
sub
xchg
jecxz
xchg
jbe
pop
or
mov
fistpll
les
enter
js
xchg
adc
out
adc
sahf
push
push
pop
sub
jg
inc
xlat
dec
or
fsts
xor
or
and
lahf
push
leave
out
fwait
or
xlat
loopne
ret
dec
fisttpl
fstpt
or
je
in
jmp
imul
and
out
test
cwtl
repnz
mov
sub
fildll
mov
push
daa
xlat
pop
ret
insb
stos
fwait
das
mov
dec
mov
jl
sub
popf
sbb
lret
mov
xchg
mov
das
mov
scas
jecxz
shrl
stos
icebp
sub
and
dec
int
adc
mov
push
xchg
mov
mov
xchg
sbb
mov
mov
xchg
cmp
xchg
scas
stos
stos
out
imul
pop
data16
inc
pop
movsl
scas
jle
mov
fld
jmp
filds
push
inc
push
mov
jecxz
rol
xchg
lret
xor
js
pushf
loopne
sti
pop
adc
inc
sub
test
xchg
movsl
fwait
mov
push
push
lahf
fnsave
ficoms
and
pop
mov
add
pop
jo
lea
fldl
mov
testl
pushf
test
lret
jns
pop
push
xchg
pushf
fsubrl
and
outsb
inc
or
inc
das
mov
jmp
inc
xchg
fwait
pop
stos
fildl
or
or
les
arpl
mov
jns
mov
addl
and
rclb
fildll
movsl
push
outsb
in
mov
out
sub
and
scas
mov
loope
aaa
lret
sub
and
das
fwait
and
jb
das
in
jo
leave
divb
aas
xchg
pop
fistps
jmp
pusha
xchg
je
push
inc
pop
in
arpl
mov
xchg
or
sbb
pop
rclb
push
jl
pop
fisttps
out
xor
lods
jns
cld
jmp
xor
rorb
push
incb
cmp
out
cmpsl
dec
and
sub
jmp
rcrl
fstl
cmp
mov
add
out
std
mov
inc
jns
xor
pop
scas
push
movsb
mov
jns
cltd
lock
xor
popa
or
mov
icebp
inc
das
cwtl
popa
jg
jmp
sub
call
mov
data16
mov
push
sub
icebp
in
lcall
aam
push
jbe
xchg
sti
es
mov
add
es
jae
movsl
ret
out
cwtl
jno
aad
sbb
insl
addr16
cmp
fcomip
insb
sbb
adc
test
arpl
jp
jae
fisubl
shl
stc
es
xor
rep
jl
xor
loop
repnz
adc
into
mov
popf
inc
js
sub
insl
icebp
cwtl
push
adc
mov
adc
pushf
icebp
movsl
sbb
mov
push
push
out
sbb
lods
push
mov
aad
and
imul
push
mov
mov
pop
and
popf
popa
or
int3
xchg
xchg
imul
mov
xchg
aad
sub
test
jnp
ljmp
add
dec
mov
clc
mov
pop
xor
es
leave
jno
push
neg
pop
pop
or
push
test
fdecstp
push
or
inc
stos
push
cmc
test
lods
incb
add
subb
outsb
sub
pop
push
xchg
ficoms
adc
mov
arpl
add
or
cmp
sub
xor
out
or
mov
lods
std
push
pop
cmpsb
cmp
push
aam
add
out
xlat
std
out
je
call
cmp
mov
adc
add
inc
push
and
or
ja
mov
insb
js
push
mov
sarl
jo
imulb
scas
push
mulb
mov
mov
jnp
xor
sbb
inc
mov
push
es
sbb
into
push
or
jl
add
mov
in
push
into
inc
and
mov
test
xor
mov
push
dec
mov
jp
pop
xor
jnp
jns
sub
push
cmp
jb
inc
or
ljmp
add
mov
mov
shlb
in
jns
cs
push
mov
push
pop
adc
bnd
xor
aaa
fisubrl
dec
push
ja
adc
dec
push
mov
inc
sub
mov
rolb
nop
pop
rorl
mov
lret
pop
push
movsb
inc
std
insl
fimuls
movsl
mov
incb
push
pop
dec
ficoml
sbb
jae
fimull
sbb
xor
xchg
push
cld
aam
ljmp
xchg
out
push
loop
je
std
in
mov
inc
mov
pop
pop
sbb
insb
jmp
inc
mov
mov
xchg
mov
mov
mov
cmpsb
and
add
mov
dec
cld
sbb
mov
lods
sbb
push
dec
mov
add
mov
lahf
push
or
inc
inc
fpatan
mov
mov
fistps
cli
jecxz
push
inc
push
xor
xlat
jmp
mov
popf
call
js
mov
cmp
cwtl
pop
xchg
cmp
push
or
push
add
nop
addr16
sbb
pop
jl
mov
lds
jmp
cs
test
in
loope
lods
mov
mov
xchg
push
push
shrl
mov
cwtd
dec
in
imul
add
adc
ffree
dec
xchg
mov
mov
cmp
push
das
jmp
pusha
cmc
and
or
in
roll
cmpl
and
inc
pop
ret
adcl
in
movsl
and
ds
insb
mov
pushf
add
sti
cmp
dec
xchg
mov
pop
fbld
inc
shlb
mov
inc
shl
push
add
mov
fstpt
fstpt
sub
xchg
popf
cli
jnp
pop
inc
loop
xchg
scas
pop
popf
cs
adc
gs
bound
sub
pushf
add
les
jns
mov
clc
jb
add
jmp
mov
outsb
pop
push
jg
aaa
sub
ljmp
outsl
push
lea
mov
loop
jb
and
repnz
jmp
cwtl
xchg
jg
nop
loope
mov
lods
and
mov
and
in
lods
cmp
jb
add
mov
and
or
loope
mov
int3
shlb
sbb
gs
dec
cwtl
jns
mov
dec
jbe
cmpsb
jle
pop
idivb
adc
pop
xchg
adc
std
fs
push
xchg
xor
xchg
xchg
xchg
fldenv
pop
sub
ret
fdivrl
outsl
push
ljmp
dec
mov
ljmp
in
hlt
mov
fwait
test
push
insl
adc
clc
fs
add
leave
jg
xor
dec
daa
xchg
cmpsl
stos
fs
add
mov
mov
or
push
mov
jbe
jne
imul
int
insl
push
xlat
bound
or
call
outsb
lea
xor
pop
es
outsl
loopne
jmp
jecxz
xor
pop
out
int
pop
stos
jmp
add
pop
rorl
out
lcall
lods
std
lret
adc
shll
mov
add
lods
lods
rcr
pusha
and
jo
cltd
decb
sbb
adc
int3
fildll
adc
das
sbb
int3
sbb
ret
ja
mov
add
jbe
mov
adc
outsl
ljmp
aad
fcoms
mov
adcb
push
popa
xorb
xchg
lret
push
sbb
dec
notl
pop
dec
push
lcall
mov
adc
lea
inc
add
add
xchg
loopne
cltd
js
mov
ret
lds
inc
sub
pushf
mov
es
lods
pop
xchg
data16
mov
dec
lcall
xchg
sbb
fnstcw
inc
out
pop
lahf
neg
and
inc
jb
call
lret
add
add
out
pshufw
sub
das
sub
fdivs
mov
add
pusha
filds
cmp
mov
arpl
mov
enter
les
imul
jae
push
push
jmp
jp
fbld
into
sbbb
ja
movsl
cmp
push
add
insb
in
fcmovne
jecxz
fcmovb
add
or
hlt
push
inc
insb
in
icebp
mov
sbb
dec
adc
mov
mov
mov
sar
lea
decb
cmp
stos
pushf
and
loope
fadd
out
add
cmp
dec
outsl
jne
fistl
sub
scas
fwait
loopne
pop
push
ljmp
mov
pop
push
dec
dec
sbb
out
repz
or
xchg
arpl
mov
in
inc
cmpsb
jb
arpl
pop
ds
aad
movsl
add
sbb
mov
mov
sbb
mov
cmp
mov
pop
adc
lret
and
sub
fs
out
pop
mov
push
xor
lret
adcb
loopne
jnp
dec
pushw
or
test
ljmp
pop
sub
adc
stos
mov
insl
mov
subl
mov
dec
popa
add
aaa
jp
jge
or
sbb
bound
ret
shl
stc
iret
push
test
sbb
sbb
pop
or
aad
loope
mov
mov
sbb
std
pop
loopne
xchg
jl
xlat
adc
fidivrs
popf
sub
insb
inc
mov
pop
pop
data16
push
push
out
cwtl
jb
icebp
out
mov
dec
push
cli
jb
mov
xor
cld
xor
xchg
out
testb
push
int
inc
sbb
shr
decl
fwait
adc
dec
jecxz
mov
dec
addl
loopne
mov
sub
mov
idivb
jno
and
js
fimull
sbb
cmp
xchg
mov
nop
xchg
push
lods
leave
jl
das
ret
pop
mov
psrlw
lock
mov
scas
dec
push
int
jae
cmp
rcll
je
loop
add
dec
push
dec
mov
or
lock
cmp
pop
sub
push
gs
sub
clc
int
xchg
cmpb
mov
lcall
fstps
in
mov
fbstp
stc
xchg
cmp
shlb
dec
adc
rcrb
stos
xlat
and
xchg
rcrl
dec
jg
xor
not
cs
mov
xor
imull
aad
lahf
mov
push
insb
jno
dec
loopne
xchg
cmp
bound
jg
jae
mov
sbb
mov
or
daa
cmp
adc
nop
dec
pop
xor
push
push
pop
lea
inc
inc
push
scas
or
cmp
std
adc
rcl
test
xchg
jp
stc
or
or
mov
mov
fs
in
inc
or
xor
pusha
or
sub
stc
adcb
pop
pop
dec
add
jns
jne
das
xor
movl
mov
mov
in
stos
xchg
cmpsl
push
arpl
mov
orl
adcb
lods
add
icebp
push
jp
push
repz
shl
stos
mov
push
cmp
mov
or
and
cs
cmpsl
cmp
movsb
jne
mov
xor
add
daa
fwait
cmpsl
mov
cmp
mov
daa
mov
fcomps
out
pop
jge
mov
mov
clc
jo
imul
sbb
cmpsl
popa
mov
pop
cmc
mov
mov
dec
rdtsc
sub
mov
sahf
cltd
test
push
lock
or
int
sbbl
sbb
iret
mov
addr16
and
mov
lcall
push
imul
test
aad
out
outsl
mov
mov
mov
mov
inc
pop
push
push
jle
dec
repnz
xchg
das
ljmp
push
ret
dec
rcrl
pop
cs
enter
in
movsl
mov
dec
xchg
push
fimull
cmc
and
or
ljmp
call
mov
inc
add
xchg
add
dec
xchg
adc
xchg
mov
shl
sbb
xor
je
cwtl
mov
jp
xor
js
mov
punpckldq
lds
pop
push
push
pop
mulb
incb
sub
mov
xchg
aas
xlat
pop
lret
daa
negl
call
cmp
mov
adc
nop
aaa
out
xchg
mov
lds
adc
cmp
sbb
inc
int
push
jnp
rorl
mov
roll
push
inc
arpl
mov
xchg
push
pop
add
add
mov
ret
add
lret
and
cwtl
or
sbb
adc
loope
lods
js
mov
or
dec
in
jmp
lret
cmpsl
xlat
cli
pop
hlt
enter
std
lock
push
mov
fsubl
push
sbbl
into
or
lcall
mov
rol
mov
lods
div
div
test
adcb
cmp
imul
mov
loopne
and
sub
mov
cld
shlb
outsl
mov
inc
ret
pop
aam
add
cmp
dec
stos
pop
out
push
test
jne
jp
cmpsl
cs
push
lods
leave
xor
adc
pop
jae
inc
push
xchg
ljmp
push
lahf
sub
inc
push
xchg
js
shlb
xchg
jecxz
sub
cs
sub
pop
pusha
pop
add
pusha
call
xchg
push
jp
shrb
jmp
test
mov
in
and
test
in
inc
loop
sbb
decl
sbb
mov
sub
dec
mov
shrb
mov
lcall
xchg
out
add
mov
out
jne
test
sub
pop
fwait
loop
jns
mov
or
mov
mov
out
xchg
in
mov
rorb
mov
xor
outsl
shlb
testl
mov
dec
orb
es
popa
add
fdivrs
add
mov
mov
rep
dec
jp
push
pusha
sub
enter
int3
pop
imul
cwtl
enter
inc
jbe
xchg
jg
test
pop
dec
mov
loop
jecxz
test
xchg
push
stos
clc
inc
cmpsb
out
cmc
movsl
shll
scas
and
adc
shl
repnz
in
pop
fidivs
nop
jnp
cs
dec
insl
and
stos
dec
fcomip
out
jno
fcoml
insl
adc
cli
jg
dec
sbb
cmp
sub
lret
popf
fs
dec
push
jecxz
pop
cmpsl
xchg
sbb
xchg
or
stos
sub
outsl
xchg
mov
sbbl
xchg
addr16
and
test
mov
sub
prefetcht1
dec
mov
and
insb
test
push
imul
xchg
pop
pop
ds
out
mov
adc
cmpsb
cwtl
cmpb
fwait
popl
inc
int3
popf
ja
test
iret
les
xor
xor
shlb
or
out
arpl
cli
loopne
lret
lret
das
into
and
in
jge
enter
ficompl
mov
or
pop
movsl
sbb
cld
aad
fldcw
sbb
popf
js
fs
jbe
aad
out
sub
ljmp
xchg
sub
fxch
addr16
test
dec
pushf
jne
sbb
fcom
lock
pop
and
mov
sub
pop
aas
lret
pop
jns
ljmp
iret
fbld
lret
jns
dec
mov
repz
gs
xchg
arpl
scas
and
pop
aaa
sbb
or
mov
imul
sahf
jecxz
sub
pushf
push
stos
pop
cltd
sbb
xor
xor
xor
xor
loope
cmp
es
neg
dec
inc
outsl
mov
dec
ret
mov
ret
or
add
out
jnp
mov
or
push
pusha
xchg
and
ljmp
outsb
lret
push
loopne
inc
rorb
sbb
or
sarb
nop
push
mov
push
nop
sti
out
hlt
add
or
xchg
inc
xor
push
jp
popf
lret
cmpsl
xchg
scas
fistpl
dec
jl
fsts
ss
and
cmp
popa
push
jbe
jns
add
out
sbb
or
jl
cmp
rcr
or
cli
cmp
pop
cli
jg
cmpsb
mov
xchg
imul
popf
fadd
lock
dec
stos
ljmp
push
pop
xor
out
lods
ret
mov
ds
push
je
mov
inc
pop
fsubrs
sti
and
dec
stos
sbb
aas
push
xlat
xor
jge
and
cmpl
mov
mov
lret
inc
push
pop
xor
cltd
daa
mov
xchg
rorl
bound
into
xchg
gs
adc
dec
int3
mov
cld
and
daa
fildl
jp
scas
out
aam
test
and
hlt
adc
push
push
jae
dec
into
scas
push
lea
shl
orb
repnz
add
inc
les
dec
roll
xor
vmovq
or
xchg
pushf
sbb
cld
pop
jle
repz
cmpsb
mov
inc
or
out
sahf
push
xchg
pop
lods
mov
mov
push
and
push
jae
jl
jnp
jb
jg
cmp
and
sarb
out
bndldx
jnp
sbb
testl
sub
out
rcrl
pop
inc
and
dec
mov
aad
bound
rol
xchg
mov
sbb
mov
aad
sbb
data16
xor
shl
lds
add
ret
pusha
adc
testb
xchg
mov
add
std
icebp
stos
into
and
push
cwtl
xor
bswap
scas
in
fnop
add
cmp
int3
xchg
mov
mov
dec
mov
xor
enter
jns
cmp
jmp
addl
jmp
shrl
lea
sbb
cltd
call
data16
mov
addb
mov
jg
dec
mov
test
test
pushf
jl
es
fistps
stc
pop
addr16
jo
call
ja
sub
mov
es
or
mov
imul
jmp
mov
cmp
test
mov
stos
xchg
stos
addb
test
adcb
ret
sub
daa
xlat
push
xchg
jecxz
out
xor
or
fisttps
mov
sbb
les
sub
imul
mov
xorb
jno
cwtl
and
hlt
add
es
and
divb
out
pop
push
push
cs
pop
and
jmp
imul
enter
stos
jnp
icebp
xchg
fildll
add
dec
push
rcll
push
stc
xor
ljmp
imul
push
call
cwtl
insb
mov
adc
push
add
pop
jecxz
or
iret
pop
mov
inc
mov
fsubr
xor
loop
mov
imul
add
mov
lahf
push
xchg
adc
mov
arpl
test
push
adc
mov
xor
inc
stc
pop
mov
test
push
push
sbb
mov
pop
xchg
shr
mov
mov
sub
sahf
cwtl
lds
jns
fists
mov
xchg
orl
mov
mov
cmpsl
xchg
inc
iret
stc
sub
or
fwait
mov
sbb
stos
js
iret
hlt
cmp
mov
xor
add
movsl
inc
rcll
je
cwtl
jo
call
scas
dec
test
into
mov
jp
inc
aad
or
insb
cmp
push
dec
sub
stc
clc
in
rclb
pop
cmc
sub
mov
jge
inc
xchg
outsb
rcr
mov
mov
int
adc
pop
cmp
mov
pop
xchg
or
push
adc
mov
mov
jns
leave
es
mov
or
xlat
out
xor
cmp
inc
rol
popf
fmull
insb
clc
and
addr16
cmp
inc
mov
sahf
mov
imul
iret
jg
call
sbb
js
lahf
in
or
fistl
and
rcl
pop
icebp
outsb
push
inc
jge
adc
and
mov
test
in
inc
ds
int
xor
subb
dec
sbb
xor
int
jno
jp
jns
push
mov
add
sbb
mov
dec
fs
jo
xor
xor
int3
icebp
fs
xchg
sub
insl
inc
pop
inc
adc
mov
jecxz
inc
mov
jp
mov
iret
imul
dec
stos
outsl
ja
cwtl
stc
mov
cmc
or
fistpl
adc
xorl
adc
xor
and
mov
inc
or
jmp
loop
dec
sbb
push
stos
fisubrl
cld
push
add
outsb
ja
sbb
mov
cmpsl
mov
jmp
pop
loop
jns
pusha
fsts
and
push
es
xor
adc
shl
shll
mov
and
iret
sub
aam
aad
dec
sub
in
push
into
in
daa
mov
push
add
mov
in
add
mov
and
fisubrs
inc
or
or
sub
mov
popa
mov
pop
out
cmpsb
addb
addb
adc
xor
daa
dec
ret
aad
sub
jecxz
lds
mov
mov
sbb
insb
adc
xchg
fxch
nopl
rcrb
xor
xchg
and
cmc
inc
push
mov
push
popf
mov
rorl
test
mov
fucomip
dec
mov
adc
pop
pop
inc
jnp
mov
insl
mov
scas
push
rcr
push
jns
sbb
add
nop
mov
repz
jne
xor
push
dec
test
fwait
lret
xor
jns
andb
lahf
in
mov
out
inc
pop
or
and
aad
out
cld
adc
mov
or
jge
rcrl
or
lock
leave
push
pminsw
pop
pop
fdivr
push
loope
xchg
hlt
scas
repnz
xchg
movsb
fnstenv
loope
hlt
ret
jle
jmp
adc
out
lcall
xchg
xchg
das
sahf
lods
pop
stc
and
sub
movsl
pop
jbe
insl
mov
or
mov
adc
pop
loopne
mov
les
add
mov
leave
fidivs
mov
xchg
fmull
imul
in
dec
pop
push
popa
pop
scas
aas
in
mov
cmp
rorb
pop
or
xor
dec
scas
mov
scas
pop
and
aas
mov
and
mov
test
sub
xchg
push
push
and
rcrb
repnz
push
fwait
std
and
jns
jle
xchg
mov
ror
lds
hlt
and
or
iret
arpl
ret
pop
xlat
cld
daa
xor
into
xor
xchg
xor
jne
sbb
fcompl
add
lcall
sub
inc
mov
jo
stos
aad
aad
and
sar
rclb
mov
inc
int3
jp
and
test
xchg
add
xchg
enter
ja
mov
cmpsb
fisubrs
mov
in
pushf
cmpsl
sbb
cmc
lea
sbb
loopne
divl
jg
fmuls
dec
je
sbb
sub
fsin
fldcw
jge
in
idivb
stos
fiadds
sub
sbb
sbb
aaa
pop
fbld
lock
inc
test
adc
adc
lock
and
stc
and
xor
xchg
and
xchg
add
mov
push
adc
push
sub
dec
xor
xor
repnz
jno
nop
loope
jnp
aad
adc
dec
test
fnstsw
sub
jno
stos
es
add
sub
ja
sub
cld
add
push
jbe
cmc
push
and
notb
in
mov
and
add
sar
fs
jecxz
cs
push
aas
inc
aaa
loope
out
js
mov
jns
sbb
fwait
iret
mov
test
mov
ret
enter
dec
and
fisubrl
add
and
stos
push
pop
filds
push
sub
sub
cmpb
movsl
xchg
decl
out
rclb
insb
repnz
pop
dec
mov
scas
jecxz
or
mulb
imul
sbb
popf
daa
xor
movsb
lock
repz
lock
das
unpcklps
popf
mov
push
pop
pusha
xchg
sti
orl
jne
inc
jnp
mov
push
outsl
ret
push
inc
mov
cmp
xchg
xchg
sub
add
movsl
incl
push
and
and
fadd
fildll
out
inc
rcr
cmpsb
and
or
add
aam
inc
shll
jae
adcb
and
fcoml
popa
nop
inc
pushf
xor
sbb
mov
clc
lods
lods
mov
fsubl
mov
into
js
mov
ja
jae
adc
lret
mov
mov
xor
adc
sbb
lds
mov
pushf
aad
add
popa
aas
xchg
insl
or
mov
cld
sub
push
pop
mov
sub
push
dec
les
outsl
push
in
mov
in
and
jge
cwtl
and
hlt
int
mov
xchg
punpckldq
adc
lret
xchg
cwtl
out
stos
mov
xchg
pop
inc
lahf
push
mov
into
rolb
pushf
dec
mov
stos
xor
sbb
adc
fidivl
push
sub
mov
notl
jge
jecxz
in
pusha
xchg
leave
imul
addl
add
les
addr16
sub
arpl
into
leave
mov
mov
pop
imul
dec
pop
lret
popa
int
add
xchg
sub
cmpsb
sbb
nop
xchg
enter
pushf
leave
in
push
jb
mov
loope
lcall
stos
push
jmp
test
js
fucomp
sbb
test
in
adc
mov
jl
shrl
add
imul
or
sti
bound
or
cmp
jb
cmp
data16
cmp
dec
pop
scas
adc
mov
pop
jns
cwtl
xor
lahf
aaa
mov
or
stc
loop
or
inc
fidivrl
into
insl
inc
adc
aaa
jmp
test
mov
mov
aas
shll
mov
xchg
loope
jbe
std
mov
movsb
scas
push
xchg
mov
mov
jmp
add
int3
add
lret
cmc
into
or
sub
sub
jl
mov
sbb
test
sub
scas
jno
stc
pusha
addl
enter
repnz
cmc
sub
fimuls
xchg
mov
pop
addr16
bound
cmp
mov
inc
cmp
push
mov
mov
lods
aam
xchg
lods
cmp
roll
inc
jns
xchg
inc
jecxz
dec
mov
jg
shlb
sbb
jb
sti
int3
std
lods
jns
call
orl
mov
jo
in
les
pop
add
adc
mov
sahf
out
mov
pushf
rorl
insl
addl
mov
adc
pushl
daa
inc
add
add
ja
ret
add
push
xchg
xor
push
je
cltd
xchg
or
jno
jge
mov
mov
jmp
push
jns
addl
aaa
pminub
push
bound
or
sub
cmc
aad
ror
sub
xchg
movsb
push
neg
pop
pop
or
fildl
add
jno
push
sarl
fdivs
dec
popa
lahf
jl
mov
dec
sbb
xchg
push
cmp
mov
sbb
hlt
push
iret
push
sahf
xchg
cmpl
mov
pop
movsl
loopne
cmpsb
dec
popf
mov
or
push
or
sbb
mov
cwtl
mov
out
adc
dec
pop
inc
test
xor
mov
mov
pop
adc
mov
out
sbb
xchg
mov
bound
roll
and
cmpsl
into
les
jmp
mov
fidivrs
pop
dec
mov
cmc
mov
fcom
and
add
ja
aas
cld
into
cmp
shlb
dec
repnz
imul
xchg
mov
ror
xchg
xor
sarb
into
rolb
add
xchg
mov
lahf
fisubrl
pop
xchg
pop
adcl
xchg
push
ret
popf
add
push
call
loopne
push
push
flds
lea
xchg
fists
or
pop
outsl
outsl
mov
mov
ret
in
dec
mov
inc
mov
gs
push
loop
addb
pop
ret
cmpsb
mov
jge
mov
or
sbb
push
stos
or
sbb
out
fiaddl
jp
add
out
dec
sbb
leave
pop
mov
stc
es
loopne
icebp
push
stos
loope
icebp
or
daa
out
ds
fsubr
add
dec
xor
push
rorl
scas
scas
insb
push
push
or
cmp
lea
jno
lea
cli
xchg
sbb
cmp
push
andl
stc
pop
decb
or
data16
pop
in
ja
das
inc
dec
add
arpl
sarl
or
loope
lcall
sarl
jmp
fidivrl
pop
leave
lret
icebp
ljmp
in
lahf
scas
and
test
push
in
pop
aaa
pop
jbe
or
cmp
sub
ljmp
mov
lds
push
push
push
xor
aaa
daa
mov
movsl
mov
mov
outsl
negl
stos
or
dec
add
add
cmc
cwtl
pop
movsl
cwtl
or
cmp
adc
in
out
sub
rcrl
out
add
sub
and
sub
cmpsl
insb
sub
sar
mov
fldcw
jns
push
hlt
sbb
mov
lret
push
mov
ret
mov
lahf
pop
lret
mov
lcall
and
dec
jl
xor
ja
jnp
ror
and
pusha
pusha
into
dec
test
push
rolb
ret
xor
insl
cwtl
lret
pop
dec
mov
cli
rorb
inc
sarl
inc
mov
xor
fmulp
push
stos
aam
dec
jae
lcall
add
add
fwait
cmpsb
push
lcall
movsl
mov
mov
mov
or
loopne
imull
shrl
xchg
sub
jmp
jecxz
xor
pop
es
ffree
push
xchg
sbb
imul
test
jle
stc
fidivl
aas
adc
inc
sbb
pop
or
pushf
jo
pushf
dec
mov
lcall
aad
inc
roll
xor
adc
push
pop
aas
sub
lods
add
push
or
jae
icebp
pop
jmp
sar
mov
out
adc
jp
dec
fadds
mov
sub
inc
test
inc
aam
mov
jbe
adcb
mov
arpl
and
or
pop
ljmp
mov
inc
inc
dec
cmp
ret
dec
les
sbb
leave
sbb
inc
push
rcl
addb
and
popa
mov
sub
outsb
add
call
push
and
inc
and
repz
lds
dec
add
push
push
push
fadds
movsb
dec
dec
cmp
sub
nop
mov
lea
in
popa
into
xor
cmp
xlat
loop
mov
out
pop
push
scas
or
pop
clc
jecxz
jb
loopne
cmc
loop
pop
fidivl
dec
clc
cwtl
mov
xchg
das
imul
sub
fstpl
mov
push
cli
lock
call
scas
push
add
call
mov
mov
loopne
lods
xor
nop
push
jne
mov
push
ret
ds
pop
xchg
push
dec
sub
out
jg
dec
pop
mov
sub
imul
insb
cmp
cmpsb
lcall
cmc
bound
jl
lcall
in
jb,pt
lahf
mov
pop
inc
faddl
outsb
test
inc
mov
jns
shlb
adc
jmp
mov
sbb
imul
xchg
ffree
add
cmc
pop
lcall
test
pop
xor
std
addr16
cmp
inc
aaa
cmpsl
js
jle
or
and
fcompl
cwtl
jae
int
leave
xchg
ret
xor
mov
mov
insl
add
stos
call
sarl
xor
mov
inc
xor
sub
push
repz
cmc
hlt
add
sbb
lods
scas
movl
cmc
daa
mov
inc
adc
mov
push
mov
inc
popa
inc
imul
insb
dec
das
add
push
pop
inc
out
jns
sahf
jnp
pop
adc
pop
xchg
adc
mov
outsb
mov
mov
das
mov
sub
cmp
mov
cmp
rorb
adc
mov
pop
sub
in
sbb
sub
pop
adc
insl
pop
ljmp
in
out
test
jbe
loopne
sub
popf
dec
jg
insb
mov
xor
xchg
ficomps
daa
arpl
dec
cmp
shll
mov
dec
ljmp
xchg
gs
pop
rorb
fimuls
and
adc
mov
mov
mov
pop
imul
nop
ljmp
xor
popa
cmc
add
repnz
into
and
sbb
add
cmp
jnp
push
call
movsb
or
mov
mov
mov
pop
jb
sahf
mov
in
out
pop
ja
mov
dec
xchg
pushf
mov
clc
fsub
insb
lods
jl
cmpsb
out
aad
lods
xlat
or
sbb
cwtl
add
nopl
jno
nop
cmp
mov
cli
test
repnz
aad
sahf
ret
nop
int
loope
ljmp
or
lret
imul
cld
repnz
in
mov
xor
pop
int
cmp
fsubrp
lret
mov
push
sarb
nop
mov
adc
or
dec
ss
mov
in
add
or
outsl
and
xor
sbbl
dec
xchg
popa
xor
mov
dec
fisubl
loop
xchg
push
xor
movsl
push
pop
mov
in
fmull
pop
jp
movsl
cmp
jp
in
xor
xchg
bound
out
inc
out
imul
scas
cltd
test
jecxz
in
and
dec
call
mov
or
add
push
add
sbb
popf
aam
mov
stc
xlat
sub
adc
aam
cmp
jge
gs
and
ljmp
pop
sub
sbb
adc
push
test
mov
sub
std
xchg
rolb
mov
fdivrl
cltd
pop
mov
loope
sarb
popa
insl
and
sub
dec
fistpll
imul
xor
xchg
and
add
inc
or
out
jo
test
add
inc
adc
dec
stc
pop
test
xchg
pop
cs
imul
pop
loope
cmp
es
add
das
aad
jb
adc
jge
pop
pop
add
mov
mov
jg
ret
and
push
movsl
mov
xor
pop
mov
xchg
jle
jb
popf
sbb
add
jle
push
outsb
lret
push
mov
outsl
aad
fldenv
std
xor
call
leave
js
stos
pop
xchg
bound
in
jbe
insl
xorl
xor
sub
xchg
mov
aam
and
adc
sbb
cwtl
xor
adc
call
in
hlt
xchg
addr16
call
fs
cmp
mov
pushf
decl
fiaddl
mov
inc
add
ljmp
dec
jne
cmp
add
ficompl
mov
ret
enter
inc
fabs
inc
pop
or
pop
fsubrp
shl
fsubrs
bound
cmpsl
loop
ret
jmp
insl
mov
mov
popa
test
mov
std
int
xor
shl
jae
arpl
dec
ss
cmovl
ja
pop
adc
lea
push
fildll
lcall
lahf
pop
icebp
icebp
xor
arpl
mov
xchg
sub
notl
adc
fisttps
nop
dec
xchg
sbb
mov
das
les
and
imul
inc
xchg
sti
pop
fbstp
mov
test
pop
ret
dec
sub
in
lock
mov
icebp
cmp
push
mul
popa
xchg
daa
out
push
jbe
inc
jno
bound
pop
sub
pop
lahf
adc
push
pop
call
into
aam
in
dec
jne
lea
out
inc
fchs
or
out
call
push
sbb
dec
mov
mov
adc
cwtl
enter
sub
idivb
mov
xor
popf
mov
and
dec
xor
sub
xorb
xor
inc
or
lret
sbb
xchg
and
ss
jecxz
scas
sarl
mov
push
fsubl
call
xlat
push
lcall
adc
out
jno
xlat
jnp
xchg
pop
dec
xor
into
inc
fistpl
fldenv
and
gs
test
jmp
xor
incl
inc
adc
fmul
and
daa
pop
fsubl
push
pop
sub
inc
out
push
sbb
cmp
ja
or
int3
cmpsl
movsl
jb
mov
jbe
fistl
xor
lret
mov
sub
push
movaps
inc
daa
imul
xlat
movsb
and
xchg
icebp
sbb
add
fldcw
pop
dec
mov
into
adc
adc
les
dec
mov
xchg
jl
data16
jne
push
cwtl
adc
negl
add
mov
bound
jbe
fidivrs
sbb
dec
sbb
roll
enter
shlb
or
xchg
repz
pop
in
fwait
lock
xor
ss
sbb
test
xor
cmp
xchg
lahf
and
hlt
xlat
dec
cmp
ja
popa
xchg
jp
out
movsl
jb
pop
test
cld
pop
aam
test
adc
lods
loope
mov
movsb
add
dec
je
inc
sub
popa
push
out
sbb
stc
add
sub
mov
test
mov
mov
std
inc
shlb
mov
stos
or
int3
sbb
lods
fmull
sub
mov
fcomi
inc
sub
popa
mov
xor
push
push
arpl
fiadds
adc
pushf
and
dec
pop
popf
sub
sub
jnp
mov
xchg
lcall
loopne
or
fistpll
jg
mov
mov
sti
std
inc
cli
dec
lcall
dec
cmpsl
arpl
sti
into
fs
mov
mov
sar
cmp
sub
xor
je
bsr
jle
popf
mov
movsb
fcompl
testb
cltd
sahf
add
mov
pushf
xor
ret
mov
jns
jg
add
adc
jg
sub
mov
stos
pop
jne,pt
cwtl
push
xchg
fmuls
jmp
shll
call
lock
icebp
xor
je
insb
addl
jg
shrl
jae
out
fdiv
or
push
sarl
inc
jns
push
ret
mov
pop
imul
into
jae
add
adc
out
iret
loop
shrb
es
and
jecxz
cmp
xlat
mov
cltd
jg
push
je
inc
lcall
cld
pop
shrl
xlat
sub
scas
lahf
push
cmp
xor
jb
shrb
ljmp
lahf
pop
mov
stos
jge
cmp
sbb
mov
or
imul
jmp
pop
divl
or
mov
iret
jle
push
inc
in
push
int
outsb
cs
sbb
jle
pushf
xchg
mov
xchg
push
or
push
jne
ja
cmp
inc
jns
mov
lret
stc
mov
adc
mov
xchg
and
cmpsb
sbb
test
cmpsb
pop
roll
cmpsl
adc
xchg
imulb
adc
movsb
jle
movsl
dec
lods
or
xor
push
xchg
in
sub
mov
push
daa
sahf
pop
push
mov
cmpsb
mov
mov
push
addr16
mov
mov
repnz
push
xchg
out
adc
scas
add
inc
hlt
adc
movsl
into
push
movnti
leave
iret
adc
lods
push
jle
xor
add
nop
xor
inc
rcrb
xor
sbb
outsl
mov
loopne
pop
dec
pop
repnz
clc
in
jnp
jmp
mov
test
cmp
pop
inc
testl
sbb
inc
lds
and
jnp
pop
arpl
mov
and
and
stc
sbb
sub
call
das
movb
xchg
mov
pop
adc
jae
lods
hlt
push
es
mov
mov
negb
dec
and
int3
jno
sub
add
cmc
rcr
pop
sbb
or
inc
loope
imul
push
out
dec
lret
xor
addl
std
arpl
mov
js
cmp
imul
mov
fwait
int3
jb
xor
insb
rorl
dec
inc
loop
push
outsb
adcb
outsb
subb
inc
ds
push
or
das
cmpsl
mov
scas
push
mov
rol
out
in
pop
test
pop
lods
and
pushf
xor
ja
lret
movsb
fwait
xchg
pushf
add
data16
add
in
pop
jns
and
decl
stos
int3
dec
lret
pushf
add
inc
sub
sarl
cli
gs
cs
push
mov
sub
ds
adc
ret
inc
inc
add
push
xchg
xchg
xchg
jp
loop
lods
jo
cmp
outsl
lret
sub
or
iret
sbb
out
int3
mov
pushf
iret
aas
pop
ja
ror
pop
xor
in
scas
jne
sbb
pop
or
arpl
pop
cli
sbb
fdivl
mov
popa
icebp
ret
jb
in
ret
add
cmp
pop
jns
mov
fimuls
test
adc
pop
pop
push
adc
int
jmp
jg
in
pop
mov
sub
and
mov
dec
dec
adc
mov
shll
push
xor
ljmp
lock
and
mov
xor
scas
mov
into
movsb
add
insb
daa
add
inc
stos
out
mov
jl
cmpsb
xchg
movsb
mov
popa
testl
cmp
xor
mov
cs
daa
jnp
insb
lds
xchg
and
insl
loopne
and
cmp
jno
stc
mov
movsl
adc
imul
cmp
stos
dec
sub
add
sti
inc
mov
pop
dec
in
mov
or
pop
int
pop
lret
push
mov
leave
scas
push
fs
pop
jge
dec
ljmp
fdivs
lret
cmc
mov
dec
lea
movsl
lretw
dec
ret
mov
sbb
shll
fwait
dec
and
mov
sub
adc
add
mov
lret
in
shll
lods
cmp
dec
not
jno
jmp
call
inc
sahf
dec
push
inc
mov
or
xchg
jp
movsl
js
or
nop
dec
cld
mov
cmc
ljmp
push
aas
loop
mov
stos
andb
dec
es
sti
and
sbb
dec
or
rcrb
sbb
jbe
push
into
pop
sti
dec
les
pop
or
cwtl
movb
mov
pop
jne
pop
pop
or
dec
or
pop
mov
cmp
add
jno
jae
xchg
test
add
mov
xchg
out
adc
sbb
or
inc
mov
inc
les
fdivs
push
push
mov
insb
sbb
add
mov
mov
test
xor
nop
cli
pusha
sub
dec
nop
mov
mov
jbe
movsb
aad
jl
xor
mov
movsl
cmp
add
adc
sahf
mov
sub
adc
jmp
push
add
popa
dec
movsb
std
je
ds
pushf
adc
add
sub
mov
jge
in
xchg
sti
lret
pop
ds
mov
sbb
jl
inc
xchg
js
sub
stos
and
in
mov
pop
mov
bound
adc
adc
push
adc
stc
sub
insl
add
mov
int3
jb
ds
xor
dec
sahf
mov
pushf
in
mov
inc
mov
std
mov
adc
push
pop
jbe
lods
mov
and
mov
or
xor
cmp
popa
xchg
out
into
test
sub
jecxz
sbb
icebp
das
cli
cltd
sti
jmp
fsubs
or
add
sub
arpl
in
and
mov
scas
pop
lods
inc
dec
lret
mov
jo
xor
repz
leave
push
cmp
and
sbb
fs
iret
mov
nop
cmc
fadds
add
or
xchg
fcoms
inc
popa
mov
shl
sbb
inc
xchg
mov
mov
mov
push
pop
iret
std
je
fwait
lea
imul
cmpsb
dec
mov
cmpsl
insl
negb
into
push
adc
dec
mov
mov
jge
dec
pop
mov
jnp
push
push
add
daa
roll
cmp
jl
insb
xlat
xchg
pop
std
jp
cmp
jecxz
add
dec
pop
jno
dec
xor
data16
movsb
sbb
push
pop
and
out
push
bound
aam
and
rcrl
jg
mov
and
sbb
daa
add
pop
inc
aam
pop
sbb
cmpsb
mov
sub
and
jnp
das
in
leave
loope
cmp
enter
jb
mov
lods
mov
mov
ljmp
loopne
ficomps
dec
gs
mov
push
xor
mov
xchg
xchg
outsl
fcomip
movsb
sbb
sub
pushf
je
add
mov
lods
scas
repz
ljmp
pop
mov
iret
inc
lea
or
push
stos
lds
ja
bound
cwtl
push
dec
cmp
push
subl
sbb
out
mov
fisttps
rcrb
jmp
mov
stc
xchg
xor
inc
fldcw
adc
cmp
xchg
push
rcrb
shrl
mov
int
or
filds
scas
xchg
imul
clc
pusha
jno
sbb
dec
jb
popf
cmpsb
jnp
cmp
pop
movsl
clc
mull
ja
adc
les
ror
int
mov
pop
or
inc
test
lret
dec
push
mov
fisubl
push
cs
or
cmp
mov
adc
xor
xchg
adc
mov
sub
stos
fcoms
sbb
into
stos
aas
adc
add
sbb
jb
adc
ret
xchg
imul
stc
jne
leave
je
cs
pop
mov
mov
fs
das
lods
enter
test
sarb
sub
dec
adc
push
sub
lods
faddl
outsl
das
mov
pop
enter
lret
adc
call
test
jns
cld
xor
fs
cwtd
and
pop
mov
aas
cmp
inc
inc
cmc
sub
mov
loopne
cwtl
icebp
jg
jmp
rcll
lds
ret
adc
out
mov
lret
and
sahf
gs
les
addr16
cmpsb
fnsave
push
out
pop
lcall
jle
xor
std
xchg
out
xchg
mov
and
js
sub
mov
sti
or
mov
outsb
fcomi
clc
insb
out
jmp
mov
arpl
xor
pop
adc
fbld
dec
mov
daa
in
inc
add
or
lahf
and
and
mov
or
outsl
jp
es
mov
int
sbb
movsl
xchg
jp
pop
adc
adc
ljmp
sub
dec
or
adc
and
inc
xchg
lcall
push
push
sbb
add
repnz
out
mov
push
push
pop
stc
loope
ds
xor
sub
int
mov
dec
fisubrl
mov
stos
sub
mov
loop
aas
cmp
pop
add
outsb
pushf
push
icebp
dec
jbe
cli
mov
add
jno
mov
sub
adc
dec
lods
mov
xor
push
stc
xor
repnz
xor
mov
imul
lods
add
out
dec
mov
fistl
sbb
in
sub
xchg
lret
rol
add
xchg
pop
out
xchg
add
out
add
cwtl
aad
sub
pop
or
cmp
sub
pinsrw
adc
insb
in
mov
push
outsb
dec
scas
fidivl
pusha
clc
xor
inc
xchg
jmp
ror
sub
push
cmp
pop
cli
rcr
arpl
icebp
mov
and
fimuls
xor
xchg
or
jp
jmp
adc
mov
lds
pushf
scas
and
lock
pop
mov
inc
inc
pushf
std
adcb
aas
xchg
scas
mov
sbb
int
push
push
pop
xchg
pop
sbb
movsl
icebp
adc
leave
push
sub
lret
inc
out
dec
shlb
jle
add
jl
cli
add
sbb
lock
scas
movsl
ror
sbb
mov
xchg
dec
js
push
inc
cmp
pop
ret
movsb
cmp
je
aaa
xchg
adc
pushf
js
jle
jns
je
pop
in
movsb
lods
sub
or
xchg
cmp
enter
cmpsl
shlb
inc
sub
pop
mov
jbe
or
data16
dec
pop
int
pusha
inc
cli
into
sub
int
inc
cmpb
xor
ja
je
jo
push
in
or
and
xchg
movsl
test
xor
pminsw
push
in
mov
and
filds
in
icebp
jecxz
stc
xchg
scas
scas
cmpsb
aam
shlb
sub
imul
pop
and
int3
mov
dec
xlat
sub
in
cmp
cwtl
and
sub
cld
sahf
push
add
adc
aas
dec
ja
cmp
jecxz
bound
rolb
lock
mov
out
pushf
xlat
js
mov
into
jge
sub
stc
dec
jl
shrl
in
stos
test
std
adc
out
jle
xor
adc
sar
xchg
push
mov
std
pop
push
in
push
scas
fisttpl
mov
mov
jne
lret
sub
sub
js
add
or
mov
cmpsb
dec
mov
xchg
insl
divb
inc
xlat
mov
xchg
mov
and
ja
or
cmpsl
or
push
sbb
mov
and
loop
mov
ljmp
xlat
int
dec
arpl
sbb
lods
mov
scas
cmp
fildll
inc
xchg
cmc
mov
je
repz
jge
and
jb
sub
xchg
xor
xchg
aas
jmp
nop
lds
xchg
test
test
bound
push
mov
hlt
mov
add
mov
movsl
jl
ljmp
rcr
ss
xor
ror
adc
stos
arpl
xor
andb
inc
out
mov
xor
frndint
and
shll
test
adc
std
xor
repz
insl
insl
or
add
sub
push
adc
ret
mov
shr
call
leave
das
stos
sbb
andl
pop
push
push
xor
cmpsl
push
into
mov
or
xor
roll
cmp
cmp
dec
fstpl
xchg
xchg
pop
add
push
sbb
rcr
inc
aam
push
in
sub
mov
out
or
test
rcr
xor
subb
mov
or
outsb
iret
pop
test
popf
push
or
push
mov
mov
mov
inc
in
and
test
pop
pop
inc
or
xor
inc
inc
in
ret
shl
and
pop
loope
orb
xorl
or
xchg
fcomps
stos
pushf
xchg
mov
dec
daa
push
aas
aam
popl
in
jae
pop
mov
or
xchg
xchg
sub
aam
lea
sub
jge
cmp
cmp
xchg
push
std
ret
stc
inc
xor
inc
hlt
lahf
loope
je
pusha
mov
pop
dec
xchg
add
sbb
movsb
out
dec
xor
fwait
xor
or
xor
jo
adc
shll
sub
mov
inc
jnp
aaa
adc
loop
aam
jb
xchg
xchg
arpl
add
adc
dec
jae
cmc
in
loopne
mov
xor
loopne
test
pop
les
xchg
jle
in
sub
cmc
sbb
fsubr
ja
test
adc
sub
popf
cwtl
add
jne
dec
aam
imul
cmpsl
push
cmp
lea
bound
mov
cmp
imul
test
aaa
sbb
insb
enter
lock
nop
xchg
or
sub
cmp
outsb
sarb
xchg
sbb
pushf
cmc
aad
dec
outsb
pop
aad
inc
or
clc
sub
shrb
push
ret
test
sub
push
adcl
xchg
xchg
in
gs
icebp
movsb
cmpsb
adc
push
pop
cmpsl
dec
inc
roll
test
jae,pn
mov
cld
mov
out
faddl
xor
dec
std
mov
jae
fwait
shll
je
and
movsb
push
jp
fdiv
shll
and
xchg
aam
inc
ljmp
mov
cmp
sbb
jns
ja
mov
push
add
mov
lret
rclb
aad
inc
push
aad
sub
test
dec
push
sbb
inc
shlb
jns
mov
mov
mov
pushf
adc
enter
sbbb
adc
adc
test
jg
je
daa
sbb
and
xchg
lahf
jo
sti
popa
xor
mov
adc
xchg
xchg
cmp
and
les
push
jle
lret
jno
jae
stos
xchg
inc
rorl
cltd
mov
mov
movsl
lock
lods
test
cli
dec
sarb
inc
lret
test
cltd
cmp
pop
cli
into
cmc
xor
insl
sbb
std
icebp
hlt
push
enter
adc
sbb
push
jl
add
dec
jp
jle
andb
mov
stos
shl
fldl
mov
in
sbbl
lret
cwtl
cmpsb
mov
ja
mov
out
and
stos
mov
movsb
cli
jg
jae
popf
xchg
adc
out
jo
mov
pop
cld
test
testl
adc
dec
sarl
or
int3
stos
lret
mov
repnz
lret
loopne
xor
imul
pop
mov
repz
pop
fildll
sub
cwtl
jg
add
lods
dec
inc
push
jb
mov
pop
fwait
loopne
jns
js
xor
or
dec
cmc
scas
sbb
lods
mov
dec
das
lcall
lret
and
mov
jmp
cmpsl
push
mov
enter
sub
sub
lods
ss
out
call
jns
arpl
jbe
pop
or
dec
inc
into
pop
loopne
movsb
pop
dec
repz
rcrb
pop
mov
fchs
and
ljmp
int3
aad
movsb
sbb
or
movsb
enter
xor
jp
push
dec
dec
movsl
or
cmp
and
inc
popf
push
fcoms
rcll
test
jb
lock
daa
mov
pop
fcmovbe
pop
sub
fidivs
mov
inc
mov
insl
mov
je
jb
jnp,pn
insb
movsb
xchg
mov
and
outsl
std
xchg
add
in
stos
pop
divl
imul
jbe
andb
xor
mov
jne
push
pop
cltd
adc
jno
jge
mov
inc
fcompl
mov
inc
shlb
sub
cli
xor
pop
sti
xlat
loop
dec
insl
idiv
dec
mull
int3
xorl
shrb
sub
dec
lock
jo
cmp
mull
fldpi
icebp
xchg
mov
pop
movsb
inc
pop
mov
adc
cli
xchg
in
pushf
out
testl
lock
daa
shr
sarb
sub
lock
pop
insl
mov
loop
lcall
add
mov
cltd
cmp
or
dec
and
aas
mov
sbb
into
loop
adc
and
push
or
in
pop
mov
jno
xchg
sub
mov
mov
pop
add
jmp
pusha
imul
loopne
or
xchg
inc
sub
int
inc
lret
cltd
jp
push
xor
pop
jne
cwtl
aad
rol
adc
notb
push
test
mov
idivb
mov
adc
sub
test
adc
cwtl
pop
and
adc
cmp
call
iret
cwtl
jg
outsb
inc
add
dec
cmp
sub
sub
or
and
jbe
ret
aas
adc
sub
mov
ficompl
repz
dec
mov
mull
notl
mov
mov
mov
inc
les
xchg
xchg
ljmp
daa
iret
mov
mov
sbb
cli
sbb
mov
push
inc
movsl
es
mov
sbb
inc
test
dec
mov
iret
jp
jbe
and
push
loope
fcom
inc
sahf
ja
mov
arpl
ret
shrb
pop
and
lock
ja
adc
negb
outsb
outsb
sbb
push
pop
imul
inc
add
jb
mov
jbe
mov
add
jp
pushf
dec
idiv
cmp
sub
ljmp
pop
imul
push
fistpl
test
lods
fidivl
popa
popf
cmp
lea
icebp
nop
xlat
sbb
lods
cmp
pmaddwd
xorb
test
arpl
sub
and
jo
push
cmp
lcall
ja
das
adcb
push
insl
mov
rclb
add
gs
add
xchg
inc
and
pop
mov
sbb
popf
add
add
mov
dec
jge
data16
imul
lea
negb
cmpsb
xor
xor
test
ss
adc
sub
sub
int
push
adc
insl
nop
hlt
or
fisubl
mov
insl
fsts
fisttpll
inc
jbe
push
jecxz,pt
jmp
cmpsl
cmpsl
dec
push
jl
push
push
jne
jmp
inc
lea
sbb
out
cmp
je
inc
outsb
scas
lods
int
push
mov
or
cmpsb
rcrl
testb
cmpsb
in
daa
addl
scas
pusha
cmp
fldl
and
les
enter
loopne
pop
or
int
xchg
mov
out
mov
push
les
in
int3
xchg
xor
rolb
push
dec
adc
inc
push
adc
and
inc
sub
rclb
data16
xchg
pop
xchg
in
js
les
push
into
aaa
pop
subl
xor
movsl
in
pop
iret
mov
xchg
jno
push
inc
sub
mov
sub
mov
cmc
daa
xchg
in
ljmp
inc
sub
fwait
or
xchg
js
int
jecxz
cmp
das
ss
dec
adc
xchg
fimull
loopne
and
movsl
dec
cld
mov
test
and
in
mov
sub
aaa
lahf
lahf
mov
add
xchg
data16
mov
mov
sbb
repnz
idiv
dec
pop
push
pop
imulb
jo
mov
jge
push
mov
out
les
mov
call
and
push
sar
js
test
sub
mov
add
push
push
jae
test
jge
pop
mov
add
cmp
daa
inc
ss
hlt
cmpsl
divb
lods
mov
test
mov
popf
or
fsubs
pushf
mov
fildl
xchg
cmp
mov
lcall
adc
jmp
jae
hlt
mov
push
mov
xchg
sbb
test
xorb
mov
sbbl
out
pop
das
out
adc
out
add
outsb
jl
push
insb
or
lret
stos
stc
pusha
jnp
je
sub
xchg
sbb
lret
sbb
jbe
mov
pop
outsb
mov
sarb
mov
ss
pop
mov
cltd
lods
popf
in
popf
in
pop
jecxz
shlb
js
sub
lods
dec
arpl
or
push
jne
into
pop
jae
mov
add
lcall
mov
push
jno
xchg
std
loopne
cwtl
mov
fisttpl
inc
xchg
test
jp
pop
shlb
movsb
in
arpl
or
mov
inc
sahf
sub
call
fdivl
dec
cmp
cmp
in
xchg
insb
xchg
push
lcall
jno
sbb
adcl
inc
adc
jb
adc
sub
jb
cmc
mov
jg
or
and
mov
lods
add
popf
call
dec
je
push
xchg
mov
pop
push
mov
lahf
ss
push
dec
jnp
and
mov
daa
rorl
lret
dec
cmp
mov
or
adcl
mov
mulb
bound
sub
pop
movsl
std
mov
jns
lds
inc
fnstcw
jns
je
and
lret
xor
gs
repnz
dec
in
in
data16
in
insl
popa
hlt
sahf
hlt
daa
sti
test
test
xchg
fidivs
imull
or
ds
mov
sub
jle
mov
ja
aaa
mov
imul
data16
data16
mov
xchg
lods
orb
stos
test
xchg
ss
jno
mov
cs
filds
cmp
or
je
sub
loopne
imul
jno
dec
xchg
jo
out
sub
xchg
and
jl
imul
daa
aam
mov
jecxz
pop
je
xchg
daa
adc
out
add
lods
mov
sub
pusha
push
cmc
jge
imul
pushf
mov
mov
mov
mov
mov
out
inc
xchg
mov
xchg
rolb
les
in
jns
push
cmp
mov
push
lods
jb
leave
mov
in
mov
mov
inc
and
clc
pop
push
or
or
jmp
or
xchg
addr16
mov
rcl
test
lahf
gs
outsb
lret
dec
inc
data16
dec
xor
icebp
mov
mov
pop
add
ds
or
pop
fisttps
sbb
xor
ret
inc
xchg
movaps
push
in
clc
js
dec
nop
cmpsb
and
sub
dec
idiv
xor
in
jecxz
imul
loope
push
daa
sub
or
js
adc
inc
arpl
cmp
call
int3
sub
lcall
push
dec
stc
adc
rcrl
mov
ficompl
cli
call
outsb
xchg
outsb
aam
shrb
pop
addr16
sbb
cmc
add
fdivrl
subl
scas
int3
adc
fwait
cmp
mov
push
pop
sub
ret
push
or
jo
xchg
sbb
adc
ja
push
out
ljmp
cmp
cs
daa
leave
lcall
hlt
mov
jp
lcall
test
adc
clc
in
jge
std
xor
cmc
loop
idiv
and
nop
idiv
and
into
jg
arpl
cmp
pop
ds
xchg
out
dec
xchg
mov
mov
mov
testb
adc
fcoms
out
repz
sub
or
add
insl
lods
xor
cmpsl
sub
out
dec
fs
mov
aam
cmc
inc
mov
xchg
imul
int
aam
mov
adc
add
shr
movsb
test
inc
lret
pusha
sbbb
push
call
nop
pop
mov
adc
pop
sbb
pop
vpaddq
test
lods
dec
sub
mov
aaa
dec
lods
xor
nop
mov
push
add
cmp
mov
sub
lret
pop
adc
loop
arpl
ss
cld
push
xor
mov
jb
shll
lret
pop
jmp
mov
pop
mov
mov
adc
mov
sub
adc
jmp
in
and
mov
cmp
daa
push
insb
or
cmpsb
adc
mov
push
push
push
ljmp
jge
xchg
les
cwtl
xor
frstor
xchg
pop
in
movsb
xor
ljmp
mov
call
mov
data16
adc
sahf
mov
loope
push
test
jmp
sbb
sub
das
loop
call
lods
enter
ja
notl
fdivl
notl
xor
pop
stos
notb
pop
fsin
push
leave
je
mov
pop
je
lods
repnz
popf
ljmp
mov
jmp
xor
rol
in
mov
mov
or
lret
mov
push
dec
mov
and
sbb
nop
mov
mov
scas
cmc
dec
lret
cmpsl
xchg
cmc
and
test
sbb
cld
push
imul
outsb
dec
mov
sub
pop
adcb
cmpsl
mov
hlt
and
rorb
in
mov
sbb
inc
sub
packuswb
aad
cld
orb
out
xchg
sbb
in
pop
jbe
jb
sbb
test
sub
sub
std
sahf
adc
pop
daa
nop
iret
fdivp
mov
sbb
and
pop
maxps
js
imul
ja
jp
push
sbb
js
sbb
ds
js
test
pop
mov
pop
mov
rclb
stos
sub
rolb
rorl
imul
sub
aaa
adc
pushf
pop
cmp
xor
jno
sahf
imul
adc
movsb
stc
mov
xchg
arpl
jae
add
xorb
sahf
cli
imul
and
or
sub
xlat
test
mov
push
cs
cmp
lds
movsl
fisttpll
add
add
clc
test
or
xchg
sub
lret
ffreep
cmp
outsb
outsb
hlt
xorl
jnp
xchg
push
sub
scas
insl
popf
cld
adc
daa
jbe
and
int3
stos
fdivp
mov
ljmp
or
dec
repz
inc
mov
nop
loope
int3
leave
mov
int3
xorl
inc
dec
push
std
stos
hlt
add
ljmp
pop
jns
jbe
dec
shrl
sbbb
dec
push
mov
cld
imul
and
pop
testl
in
pushl
sub
jge
mov
ret
scas
int3
jle
outsl
sbb
cmp
popa
lahf
and
mov
aam
xchg
cs
xlat
xchg
cmc
mov
xchg
jnp
notl
stc
fsub
xchg
xor
jecxz
push
sub
sbb
lahf
cmpsl
sbb
jle
sub
les
lods
cmpsb
mov
dec
call
jo
loop
subl
jg
adc
push
pop
inc
jmp
sub
insl
add
xchg
sahf
fs
xchg
mov
push
mov
dec
cmp
cmp
jl
inc
ret
jne
shlb
add
fs
xchg
bound
pop
loop
mov
sbb
mov
ja
xchg
mov
or
int
lcall
push
inc
mov
jp
mov
dec
into
ja
pop
sbb
gs
aaa
cmp
or
ret
repz
mov
jnp
push
stc
sbb
push
pop
jne
add
stos
push
pop
andl
mov
and
fcmovb
enter
divb
fsubrp
sub
mov
dec
cs
les
in
mov
pusha
movsb
daa
outsb
and
andb
das
nop
cmpsl
xchg
push
sub
ljmp
push
cmpsl
fwait
cmp
aas
lods
mov
leave
sub
jge
fildl
jg
adc
dec
bound
imul
mov
dec
ljmp
aaa
xchg
rcll
inc
cmc
xlat
lods
jns
pop
jg
add
add
jnp
lret
ja
pusha
push
out
mov
das
push
xor
lock
cmpsl
sub
mov
stc
das
dec
mov
movsb
je
sbbb
or
mov
fs
lahf
rcrb
jns
xor
adcl
cmc
jg
mov
pusha
xor
das
repz
push
add
test
dec
sti
cmp
arpl
ja
jp
jle
lea
xchg
push
sbb
pop
cmp
fsub
cmp
push
fnsave
addr16
sub
insl
cwtl
lea
not
scas
in
mov
inc
lret
jns
xor
xchg
add
sbb
sub
movsl
je
cmpsb
and
dec
js
in
ds
adc
add
test
pop
mov
test
stc
cmp
rorb
cli
sub
in
std
mov
jp
xor
inc
or
dec
xorb
cmp
icebp
popf
dec
popf
mov
pop
out
scas
dec
in
jb
jbe
jns
lock
mov
ds
pop
mov
pop
mov
aad
adc
stos
xor
std
mov
aad
dec
add
jmp
or
mov
pop
pop
inc
int
cmpsl
je
push
xor
sti
adcl
inc
dec
mov
and
hlt
jp
jae
adc
cmc
inc
cmp
push
adcl
or
loopne
fnstcw
into
aam
sbb
sub
out
mov
mov
pop
enter
push
jo
paddusw
sbb
sbb
jno
fldl
in
jb
hlt
mov
ja
mov
push
cmp
test
mov
call
push
sub
out
subb
mov
push
cwtl
lods
push
mov
xchg
dec
xchg
mov
sbb
sub
fcomps
stos
mov
jle
or
push
adc
cltd
ret
out
adc
xor
jp
ja
movsl
inc
add
mov
das
pop
add
and
lcall
imul
rcrl
int
iret
rcl
mov
popf
mov
jno
sahf
scas
lahf
and
hlt
mov
aam
adc
and
fucom
lcall
xor
adcl
dec
jle
inc
movsl
xor
out
cs
aam
iret
repz
and
cmp
test
push
push
addr16
call
enter
leave
testb
xchg
dec
icebp
adc
js
adc
lret
mov
out
stc
push
call
or
dec
xchg
jne
or
mov
mov
sub
aad
mov
fmull
mov
mov
shrl
data16
cmpl
dec
xchg
cs
stos
push
jge
iret
cld
pop
gs
and
inc
xchg
in
pop
sbb
jle
mov
adc
outsl
sub
test
xchg
je
cld
out
and
lea
out
and
loop
test
je
sbb
outsb
jae
icebp
popf
popa
call
test
cmp
pop
into
dec
fbld
aad
bound
mov
sub
clc
movsl
pop
mov
ret
jb
or
mov
sbb
test
ret
or
adc
ss
add
inc
jmp
jge
movsl
pop
xor
clc
xchg
sub
xchg
jnp
xchg
dec
flds
xchg
adc
fmulp
sub
in
nop
inc
lret
clc
bound
cmp
pusha
mov
and
rcr
sarb
mov
and
and
inc
xchg
mov
test
jno
ret
add
push
pop
push
cmp
cmpsb
dec
jne
xchg
lds
jb
in
fs
fcmovu
aaa
test
add
dec
rclb
shll
int3
pop
inc
out
cs
xchg
data16
sbb
cmp
sbb
cmp
xchg
dec
scas
dec
xchg
jg
inc
sub
mov
scas
mov
xor
inc
add
sub
inc
hlt
inc
mov
and
or
mov
cmc
inc
pop
stc
fidivs
inc
cmpsl
add
cld
imul
adc
xor
call
mov
xlat
sbb
cli
add
enter
test
sahf
jecxz
jb
je
outsb
pop
iret
in
cmp
popf
outsl
stos
push
inc
in
push
xchg
adc
fnstcw
outsb
lcall
hlt
je
call
xchg
lods
sbb
fnstenv
inc
psrld
push
iret
les
push
loop
sbb
popf
fstl
andl
cmp
outsb
mov
dec
xor
mov
mov
test
aaa
ljmp
dec
cmp
mov
xchg
fstl
cwtl
imul
mov
fmuls
sbb
push
push
sub
add
xor
mov
fbstp
xchg
sbbb
jg
popa
cmpb
xor
aas
loope
arpl
cmp
lar
jmp
loopne
cmp
roll
cli
jae
mov
and
dec
or
addb
pushf
xlat
ss
mov
int3
lret
loop
rcr
enter
push
repz
dec
in
insb
jnp
push
loopne
mov
jge
mov
addr16
xor
cmpsb
stos
sub
dec
push
stos
push
xor
sub
xlat
lahf
jge
iret
add
mov
dec
cmc
mov
hlt
addr16
jmp
mov
mov
jae
in
mov
inc
adc
mov
loop
adcb
popf
sub
sar
fimuls
out
insb
addr16
iret
scas
xor
mov
wbinvd
cmp
push
mov
call
inc
sti
addb
ror
pop
pop
cmp
pop
nop
sub
and
call
cmp
cmpl
aaa
jle
jmp
xlat
fmull
jle
out
or
scas
sub
pop
pop
mov
push
subl
pop
movzwl
jl
add
loop
dec
jl
push
pop
cld
pushf
xor
push
xor
push
dec
popa
and
push
mov
pop
inc
rorl
adc
sbb
loopne
test
out
idivl
or
or
push
mov
jg
aas
sub
cmp
test
or
push
xor
adc
sub
xor
or
imul
sar
sbb
inc
movsb
or
xchg
xor
mov
sbb
lods
and
push
dec
std
dec
xor
in
jo
xchg
mov
dec
pop
xchg
cmp
or
jmp
jmp
pop
ds
jge
jge
roll
shr
loope
and
push
dec
mov
cmp
rclb
insb
fldenv
dec
popa
fistl
scas
dec
xchg
xor
jp
scas
stc
lods
iret
in
cwtl
cmc
add
jbe
xor
frstor
jae
cmp
xchg
fcmovne
lock
and
inc
pop
pop
push
inc
popa
sbb
test
sub
mov
and
mov
movsl
inc
mov
shlb
adc
fwait
or
push
dec
idiv
mov
std
in
hlt
lods
xor
outsb
sti
int
push
sbb
stc
cmp
ljmp
adcl
ss
adc
pop
push
cld
ret
nop
inc
in
gs
stos
sbb
mov
aas
out
inc
mov
mov
iret
je
fistps
les
jl
and
loope
sub
cwtl
jns
lods
pop
mov
or
sbb
in
stos
outsl
dec
cmp
push
inc
jecxz
stc
inc
inc
sub
pop
insb
pavgw
dec
fs
jp
lock
cmp
out
dec
out
mov
sbb
sub
sub
lret
sub
popa
test
dec
sub
flds
stc
lock
jg
pop
dec
pushf
push
lds
sub
orl
negl
mov
add
fbld
xor
adcl
cli
daa
sub
imul
bnd
add
cmpsb
xchg
inc
pop
dec
imul
stos
pop
add
lret
cmp
repnz
inc
jl
cli
adc
jecxz
xchg
addl
ja
or
cmpsl
xchg
sbb
adc
mov
nop
je
sub
aas
and
mov
pop
cld
jno
popa
cmc
outsl
je
aad
and
or
ret
cmp
pop
and
fisttpl
lea
rolb
mov
fldt
shrl
lahf
jmp
xor
lret
jmp
and
test
enter
mov
xor
sbb
rcll
mov
int
xchg
mov
fstl
inc
pop
and
nop
filds
xchg
ljmp
outsl
enter
in
in
aaa
enter
cmp
popf
xor
xor
push
adc
fists
call
arpl
push
dec
pusha
mov
lods
mov
mov
jle
mov
dec
repz
xchg
test
int3
insl
jns
jmp
adc
movsb
add
cmpsb
lret
jo
mov
fsts
dec
mov
ret
repnz
dec
pop
mov
inc
or
or
imul
mov
jecxz
xchg
or
inc
fwait
mov
xchg
js
xchg
js
stc
xchg
aam
add
data16
stc
out
scas
mov
jmp
mov
add
or
add
mov
mov
xor
lea
fistpl
xchg
into
insb
clc
xchg
xchg
push
jnp
pushf
lods
rol
pop
shll
mov
repz
jnp
insb
repnz
add
jne
push
nop
fisubrl
insl
or
inc
fcompl
pop
sub
in
nop
pop
mov
add
mov
cld
pop
or
xor
dec
mov
push
stos
sahf
cmpb
mov
push
push
mov
add
mov
lds
lods
sub
out
and
and
mov
push
push
mov
das
loopne
mov
add
aam
push
or
scas
cmp
xor
sub
out
fisttpll
pop
cmp
and
dec
cmp
inc
dec
movsl
out
dec
mov
scas
cmp
mov
cmc
sbb
popf
arpl
out
negl
ficomps
out
push
ss
add
sub
adc
mov
sbb
popl
xor
xchg
jmp
hlt
pop
bsr
mov
mov
sbb
jno
aaa
xchg
jne
fsubrs
subb
jmp
int3
mov
mov
and
pop
push
jb
into
test
xlat
mov
jp
daa
dec
sbb
shlb
jnp
clc
out
mov
dec
out
cld
fbld
adc
mov
push
pop
int3
addb
lcall
das
mov
cmpsl
fwait
inc
fs
fimuls
mov
jecxz
cltd
sarb
inc
fcmovb
sahf
pop
sub
fdivs
and
sub
dec
dec
pushf
cmp
cltd
gs
cwtl
andb
ficoml
jmp
push
mov
sub
sub
arpl
mov
xchg
jno
mov
adc
cmp
mov
int3
enter
pop
loope
test
add
int
xor
and
and
pop
insb
fdivrs
sbb
not
repnz
mov
loopne
or
xchg
stos
lcall
jmp
sbb
mov
xor
mov
in
icebp
fs
mov
and
mov
sti
xor
hlt
lret
jmp
sbb
inc
lahf
in
ds
dec
test
or
or
aas
ficomps
xor
and
push
jp
arpl
inc
sbb
jo
mov
daa
push
call
in
jmp
xchg
lret
pop
nop
or
cltd
stc
jb
arpl
inc
xlat
dec
xchg
testl
pop
rcrl
clc
gs
or
mov
xchg
jp
mov
dec
sub
mov
sbb
xchg
rclb
mov
push
inc
sub
push
xchg
mov
mov
add
jp
pop
mov
decl
bswap
lret
ljmp
jp
mov
or
xchg
in
cmp
out
iret
leave
add
ja
js
stc
jo
into
inc
pop
push
add
movsl
add
cltd
and
scas
sbb
sub
loop
lds
cmp
divb
fildll
jno
push
pop
pop
xor
mov
mov
fstps
cs
int
mov
clc
jae
pop
cmp
sbb
inc
leave
lret
sub
jbe
mov
arpl
jmp
cmpsb
mov
inc
lahf
testb
js
shll
cld
xchg
mov
cmp
jge
fidivrs
cwtl
je
test
inc
in
xchg
daa
inc
cmpl
and
outsl
inc
push
jns
and
imul
add
add
mov
or
pop
push
enter
jmp
loopne
mov
mov
shr
sbbl
push
lahf
lret
fsubrs
adc
in
dec
lea
xor
shll
sbb
push
insl
or
scas
fcmovnbe
sbb
pop
cmp
pop
sbb
sub
adc
clc
jns
imul
loope
aam
cmp
dec
mov
push
test
push
stos
dec
mov
jne
add
mov
pop
pusha
cmpsl
pop
mov
pop
lds
inc
xor
cli
out
ds
out
sbb
fimull
out
push
jbe
or
ficoms
mov
dec
push
add
addr16
divl
addr16
loop
aas
enter
add
cmp
jp
loop
mov
xor
xchg
imul
mov
movsb
dec
jl,pn
cwtl
lock
imul
sbb
jne
int
into
rolb
dec
scas
mov
stos
sahf
data16
jle
adc
xor
jle
mov
out
int3
pop
or
inc
or
add
jns
mov
jo
lret
test
jne
in
sti
out
adc
mov
inc
sbb
loope
add
clc
cmp
jne
addr16
aas
movsl
adc
pop
inc
xchg
adc
push
mov
xchg
inc
fwait
scas
add
ja
dec
or
repz
fidivl
out
pushf
jb
cmc
sarl
pop
movsb
std
scas
ss
dec
jne
xlat
lret
cmpsb
div
pop
cmp
movsl
or
outsb
dec
dec
or
jbe
lock
add
pop
mov
xchg
mov
ret
adcl
popf
or
mov
data16
dec
gs
ja
mov
mov
sub
and
dec
mov
pop
fcomps
sub
scas
jno
mov
pushf
sahf
movsl
inc
pop
arpl
mov
cwtl
cmp
shrl
sub
int
and
cmp
dec
pop
jge
shr
jno
sub
xchg
out
sbb
push
fidivrs
stos
mov
shlb
inc
cmp
sub
mov
jge
fistpll
imul
xchg
pop
fsubrl
mov
mov
mov
dec
mov
xor
pop
ja
test
or
iret
inc
pop
sub
cli
cmp
push
xlat
sbb
lret
adc
sub
mul
insl
loop
dec
incb
insb
inc
and
cmp
xchg
ret
negb
and
xchg
inc
and
std
sbb
mov
mov
sbb
addr16
sarb
sbb
aaa
dec
fldcw
lret
dec
ljmp
pop
add
fisubrs
mov
cmp
insl
hlt
aaa
jle
pop
push
stos
and
mov
das
bound
ret
pop
dec
jmp
add
fnsave
testl
jecxz
aam
mov
lret
mov
lods
or
sti
loop
je
arpl
xor
fwait
out
xor
xchg
and
push
cli
lods
mov
aaa
sub
inc
leave
dec
pushf
out
xor
adc
xlat
dec
hlt
popa
faddl
adc
mov
scas
xchg
and
or
test
dec
mov
outsb
out
sbb
lods
add
imul
cmc
add
add
fdivs
cmpsb
jnp
or
je
in
out
icebp
mov
mov
mov
pop
aas
xor
jge
xor
sarl
dec
out
push
dec
mov
sub
sbb
mov
push
inc
enter
repz
icebp
adc
jmp
ret
xlat
or
repnz
imul
mov
data16
push
dec
sub
lds
adc
mov
movsl
outsl
shrb
fsubrs
lock
popf
das
adc
jle
xor
cmp
xor
adc
popa
rol
test
sub
or
cmp
rcrl
shl
lret
push
dec
and
outsb
jge
into
shll
enter
in
jno
mov
xchg
lret
testl
in
push
mov
or
xchg
mov
mov
mov
mov
add
pusha
outsl
dec
add
mov
daa
inc
cmp
cmp
aam
std
pop
popa
jbe
lock
movsb
pop
mov
je
adc
test
and
push
leave
xor
pop
into
ds
in
rcrb
xchg
mov
cli
lret
adc
fnstenv
add
cmp
bound
mov
push
aaa
lds
pop
pop
nop
xchg
mov
icebp
das
jl
sbb
or
and
jo
and
fs
inc
xchg
iret
insb
lods
fwait
add
sub
pushf
adc
or
inc
push
mov
call
daa
jb
jnp
push
jecxz
sbb
push
pop
mov
icebp
cmpsb
gs
fisubrs
bswap
and
imul
in
mov
ds
adc
pushf
adc
test
int
mov
std
loope
or
and
into
push
and
add
cli
ja
add
xchg
les
out
cs
jmp
fisubs
jle
mov
pop
int
loop
js
leave
lods
fsubrs
call
mov
cld
xchg
push
jne
iret
test
dec
adc
sbb
orb
imul
scas
dec
movsb
push
rcll
shlb
cmpsl
inc
sbb
mov
add
fnstenv
mov
pop
icebp
pop
lods
inc
in
cli
pop
lods
mov
enter
adc
xor
scas
pop
adc
add
into
cmp
ret
rcl
fwait
in
sbb
not
test
dec
mov
mov
and
jns
xchg
sub
andl
sarb
push
mov
cmp
adc
outsl
mov
out
mov
sbb
ds
orl
push
push
pop
test
das
int
fldenv
fimull
stos
sub
adc
nop
int
jnp
shrl
or
ja
xchg
js
into
push
mov
or
jmp
ljmp
jmp
movsb
inc
add
or
dec
inc
repnz
pop
pop
push
or
xor
divl
mov
loope
test
mov
lret
stc
xor
popa
pop
call
xorb
mov
push
adc
sub
mov
scas
or
mov
out
xor
insb
sarl
call
fsubp
dec
pushf
lods
fmul
push
xor
and
outsl
xchg
test
adc
xor
pop
add
mov
xor
inc
rclb
cltd
cs
cmpsl
test
fadds
or
sbb
push
push
sub
ret
mov
cltd
lahf
jb
dec
mov
cmpsl
shlb
xchg
jne
mov
sbb
sbb
add
and
mov
push
mov
mov
pop
call
dec
sbb
loope
test
iret
inc
gs
ret
mov
andl
test
daa
mov
lods
and
fidivrl
mov
iret
push
cmp
adc
popa
es
in
mov
mov
jl
xor
lret
push
cld
jno
push
dec
shlb
leave
lret
xchg
jle
test
imul
pop
push
in
in
mov
daa
pop
dec
push
sbb
add
in
adc
jmp
insl
test
pop
mov
arpl
aas
fimull
shr
mov
mul
nop
out
push
cmc
mov
mov
add
cmp
mull
sub
pop
call
std
jg
inc
xchg
fimull
pop
cmp
xchg
inc
dec
cmp
xorb
mov
into
push
cltd
outsb
mov
clc
cmp
jb
cld
sub
or
xchg
adc
or
inc
test
lret
mov
pop
in
mov
add
xchg
stc
xchg
fsubrl
or
jns
sbb
shl
bndstx
test
or
inc
rclb
bound
movsb
es
xchg
ljmp
jmp
adcb
out
or
data16
pop
inc
pop
jmp
push
or
das
xchg
dec
and
mov
out
dec
cmc
imul
push
cmp
mov
xchg
sbb
out
test
dec
fcom
lcall
dec
pop
loop
pushf
cmc
ret
das
and
mov
push
in
lods
xchg
cmpsl
insl
sbb
cld
mov
or
mov
mov
xchg
int3
popf
in
jne
or
in
loope
and
je
movsb
mov
sub
je
mov
inc
int3
in
push
jmp
ficomps
push
push
repnz
push
xor
imul
mov
xchg
nop
and
pop
xor
addb
enter
pusha
out
cmp
into
loop
jb
mov
icebp
fidivrl
test
mov
adc
cmp
popf
or
jmp
or
jns
loope
dec
cwtl
clc
cmovp
call
jl
scas
movsl
mov
push
jl
xchg
push
add
mov
mov
jg
subb
push
or
push
inc
fimull
cs
or
in
pop
je
jge
pop
ds
jno
int3
sbb
std
xlat
fmuls
push
xchg
inc
push
js
jmp
imul
or
jp
jno
mov
mov
sub
xchg
les
scas
mov
scas
frstor
push
adc
jno
dec
xor
aas
ffree
rcr
adc
mov
xor
hlt
adc
cmp
pushf
test
in
add
es
xor
cwtl
push
sub
pop
or
add
xor
sti
mov
cs
and
pop
xor
adc
imull
js
lds
mov
in
arpl
jae
jb
add
jge
out
ja
sbb
sbb
outsl
cmp
or
out
test
inc
mov
scas
add
mov
pop
cltd
data16
insl
in
mov
or
push
inc
dec
mov
mov
mov
gs
mov
or
xchg
or
cli
dec
push
adc
addr16
xchg
xchg
outsl
scas
fs
in
mov
dec
adc
push
rcll
xor
cmp
and
pop
jae
je
sti
dec
mov
inc
out
fwait
icebp
outsl
add
sarl
or
xor
addr16
fbld
add
jmp
sub
lock
push
cmpsl
stos
jnp
jnp
sbb
pop
fs
jnp
addr16
imull
inc
pop
sub
incl
in
xchg
jo
jae
mov
xchg
push
jnp
arpl
pop
insl
mov
out
rorl
pop
ja
xchg
sbb
jnp
inc
xor
fcoml
xchg
ret
imull
pop
imul
cmpsl
cmpl
repnz
cmp
out
out
outsb
mov
fisubrl
adc
sbb
cli
out
inc
pop
push
inc
cwtl
or
loope
aad
pop
jmp
filds
dec
cmpsb
inc
or
mov
pusha
xchg
in
mov
jo
std
out
pop
adc
andb
adc
mov
adc
clc
out
push
and
fbstp
arpl
and
cwtl
call
mov
sbb
ror
mov
push
cwtl
out
test
dec
stos
xor
mov
movsb
out
imul
into
lahf
pop
pusha
imul
popf
pop
push
xchg
lahf
and
lcall
xor
scas
int3
es
push
sub
in
imulb
and
jp
jno
cmp
aaa
jne
fwait
je
and
in
mov
fisubrl
repnz
iret
ret
sub
stos
push
fdivrs
mov
sbb
and
sub
loopne
jns
loop
push
push
lret
rorl
xor
cmp
cli
push
iret
repnz
das
xlat
pop
and
mov
insl
in
adc
pop
xor
fsubl
mov
add
stos
into
loopne
mov
imul
mov
lods
and
mov
inc
jo
iret
out
xchg
idivl
cli
adc
icebp
ja
push
jno
push
les
lret
popa
ret
pop
push
mov
mov
mov
jo
add
xchg
scas
ficoms
pop
add
push
mov
jnp
inc
lock
cltd
mov
mov
jecxz
adc
popf
inc
cmp
jge
jecxz
cmp
push
dec
sub
fcmovnb
dec
ficoml
in
dec
mov
lds
scas
movsb
dec
add
ss
sahf
scas
stc
les
and
cmp
sub
jmp
adc
das
push
aad
dec
xchg
add
dec
iret
inc
mov
jae
dec
repz
ficomps
mov
mov
xor
jle
cmp
flds
test
pop
mov
push
cld
ficomps
stos
mov
inc
fwait
lods
xor
adc
jns
bound
orb
lea
dec
fsubrl
dec
lret
mov
pop
fists
xorl
push
adc
cmc
xor
les
jl
int3
cltd
dec
mov
xor
out
xor
data16
mov
push
xor
out
sahf
inc
pushf
sub
mov
adc
jns
addr16
hlt
mov
fcmovbe
inc
xor
aaa
pop
call
xchg
stc
and
sbb
mov
adc
mov
hlt
xchg
not
std
adc
xchg
or
push
pushl
lods
mov
mov
inc
or
mov
sbb
lock
xlat
out
std
xlat
jns
cwtl
nop
scas
adcl
test
and
mov
add
jge
ss
adc
jecxz
lahf
mov
mov
and
mov
push
xchg
daa
ljmp
dec
iret
ds
xor
and
push
and
xchg
dec
cmpl
inc
sbbb
dec
fmulp
push
std
adc
jp
rolb
lods
imul
pop
adc
mov
xor
rcrl
xchg
inc
ret
pop
dec
lods
xor
pushf
jno
lret
cld
out
push
popf
loop
out
cld
ds
scas
and
push
fsub
cmpsl
cwtl
sbbl
in
jmp
dec
cmp
xchg
push
push
test
jnp
add
push
jge
outsl
cli
fldcw
sub
inc
mov
inc
ljmp
jbe
inc
xchg
out
mov
xchg
jmp
loope
xor
and
push
push
mov
jl
fistps
push
ljmp
mov
dec
adc
insb
xor
fstp
jb
ja
adc
loop
mov
repz
mov
cmp
jne
inc
xchg
call
push
sub
ds
and
js
dec
enter
clc
pop
adc
dec
mov
lods
adc
jle
bswap
or
test
je
pop
adc
rcll
push
inc
lret
sbb
adc
mov
mov
or
inc
cwtl
lcall
inc
fcoms
into
ficoml
ret
jae
ficoml
mov
mov
push
fistps
adc
mov
cli
fwait
mov
push
add
mov
addr16
imul
push
jbe
sbb
andl
test
sbb
aam
push
hlt
lret
imul
jl
jge
loope
and
imul
inc
inc
cld
xchg
mov
das
cmpsb
jl
mov
mov
or
cmp
aas
mov
and
sub
outsl
arpl
insb
jno
and
jnp
rep
int
into
lods
pusha
adc
xchg
sbb
mov
das
cltd
sub
aad
jmp
ret
push
stos
leave
jns
shlb
cld
inc
jmp
leave
arpl
jl
in
lods
xchg
js
out
inc
sub
xor
lret
sub
scas
inc
es
arpl
test
repz
inc
js
cmpsl
jb
push
aas
lcall
pop
popa
and
sbb
sub
mov
jb
mov
cmp
loopne
sub
or
dec
pop
xor
mov
std
daa
in
xor
popf
mov
fldenv
les
sbb
mov
js
lods
xor
xchg
gs
and
jl
mov
push
push
xchg
pushf
test
insb
mov
enter
in
ja
mov
aas
jo
mov
stc
cs
call
rcrl
outsl
adc
fdivr
jge
daa
dec
xchg
bound
out
rep
pop
cltd
jne
mov
pop
xchg
sub
scas
jbe
pop
xchg
cwtl
push
lock
adc
cmp
push
adc
ds
test
int
in
sbb
mov
test
fisubs
dec
mov
mov
xchg
roll
xlat
dec
adc
std
and
push
xlat
or
ss
xor
cmp
xchg
ret
into
sahf
inc
mov
xor
push
jne
cld
mov
push
cmp
mov
arpl
dec
pop
shlb
jge
lods
or
xlat
mov
fmull
int3
out
aaa
imul
jp
aaa
ljmp
and
aaa
shll
iret
mov
pop
mov
or
int3
insb
push
nop
mov
mov
push
dec
cmp
jg
mov
mov
les
and
jl,pt
cltd
or
adc
sbb
xor
mov
adc
lret
pusha
cmp
sbb
cli
add
std
cmc
cwtl
and
cmc
or
test
nopl
adc
sbb
jle
mov
cmp
popf
pop
ds
mov
popf
sub
mov
adc
lcall
pop
pop
leave
jmp
adc
test
pop
jno
mov
outsb
inc
sbb
outsb
mov
adc
add
loopne
mov
jno
repz
cli
jge
push
inc
cmp
sbb
das
dec
mov
cld
sbb
bound
cmp
push
std
jl
push
cmp
inc
cmpl
mov
lds
adcb
mov
arpl
sub
lds
xchg
test
dec
cmp
je
inc
add
outsb
jmp
mov
pop
jae
inc
jecxz
push
cmp
mov
xor
jno
fnsave
int
aad
rcr
cmp
rcrl
pusha
cmp
lods
inc
and
ljmp
xor
mov
std
push
aad
cs
xchg
mov
mov
dec
xchg
fstpl
stc
hlt
aam
lds
cmp
cli
bound
aam
xor
jg
jae
and
mov
aas
xchg
fbstp
or
jae
mov
sub
push
xor
xor
mov
cmp
add
mov
hlt
inc
and
pusha
in
testl
sbb
rorl
push
stc
push
sub
xchg
cmp
leave
mov
push
lods
mov
add
orb
jp
xor
push
push
loope
fistps
adc
mov
dec
inc
outsb
push
hlt
lods
xor
xchg
pop
jb
stos
call
push
sbb
in
or
cltd
push
jle
inc
rcll
fstps
xchg
inc
push
pop
sub
repnz
sub
cmp
loope
repz
imul
inc
and
xchg
inc
mov
cmp
in
cmpsl
dec
cmp
dec
cli
sbb
cmpsb
inc
lods
fs
sbb
out
push
gs
les
push
dec
int
out
cli
xrstors
adc
or
subl
mov
and
jg
inc
pop
lahf
int3
lock
dec
sahf
mov
outsl
mov
add
js
sbb
pop
jnp
cmpsl
add
out
subl
sbb
or
inc
or
dec
movsb
rcll
jnp
out
cwtl
jmp
jbe
arpl
enter
fisubl
js
ds
push
mov
addl
lcall
fistpll
xchg
adc
ret
lahf
lods
or
lods
or
ret
insb
shl
mov
mov
jne
lods
pop
lds
lds
sbb
adc
int3
and
cmc
cs
ljmp
fistps
jmp
aas
adcl
les
in
mov
cs
mov
aaa
jecxz
test
mov
test
add
les
bound
js
lret
faddl
sub
mov
sbb
std
and
sahf
cmc
push
icebp
aas
fucom
loopne
add
std
addl
jo
add
std
xchg
push
jae
pop
je
sbb
and
mov
adc
rolb
add
cmp
cmp
pop
test
mulb
ja
push
and
sbb
es
cmp
jmp
dec
cmpl
lea
add
rcrb
add
jp
ret
out
orb
and
insl
lods
and
lahf
enter
mov
xchg
mov
pushf
cmp
cld
pop
out
sbbb
mov
xchg
cmp
mov
add
ljmp
lret
js
test
xchg
sub
mov
inc
push
xchg
mov
rcrb
js
sarl
arpl
mov
jne
aad
lods
xchg
jecxz
decl
xor
fstl
inc
mov
imul
mov
movsb
outsl
xchg
dec
xor
jo
idivl
loopne
jns
insl
sbb
jl
jae
clc
into
ja
cmp
cmp
xor
psubsw
cs
sti
or
repz
fiaddl
in
lcall
imul
cmp
xchg
addr16
adc
mov
push
add
mov
movsl
push
dec
aad
or
in
dec
loop,pt
push
icebp
int
out
inc
inc
and
jne
push
mov
inc
cs
add
mov
add
int
mov
fisubl
sub
xor
inc
ficoms
cmp
enter
call
aad
popa
cld
and
lahf
push
pop
insl
xor
fs
jge
clc
dec
dec
jnp
in
jbe
and
mov
add
or
lret
jle
inc
push
repnz
xchg
aaa
inc
repz
call
jmp
aas
into
mov
fistps
mov
sub
fsub
pop
orb
xchg
inc
in
jbe
fsubrl
loop
insb
cmp
mov
out
dec
test
lahf
ljmp
mov
int
ret
dec
or
dec
jne
movsb
or
fldt
jbe
cmc
push
ret
jns
xchg
mov
or
movsl
sbb
inc
sbb
mov
leave
jle
stos
mov
push
in
mov
xchg
std
mov
and
insb
outsb
sub
mov
ret
ss
dec
clc
negl
xchg
mov
test
pop
pop
out
bound
mov
arpl
inc
lcall
imul
rcrl
cmp
jo
dec
pop
jp
jbe
push
jb
lods
lock
mov
rclb
jg
adc
stc
adc
daa
fldcw
sbb
out
bound
push
dec
aam
aaa
xchg
mov
int3
jbe
xchg
jno
pop
scas
xchg
rolb
adc
imul
pop
inc
and
xchg
outsl
pop
jne
into
xor
sbb
arpl
enter
mov
pop
sub
repnz
pushw
mov
mov
xor
mov
scas
fmull
in
sti
dec
ffreep
xor
push
push
bnd
ret
loop
push
leave
push
loopne,pt
xlat
cmpsb
dec
es
mov
adc
cmp
sbb
mov
xchg
dec
adc
outsb
jecxz
dec
jecxz
xor
push
scas
jbe
xor
test
mov
cmp
sbbl
cmp
jg
xor
scas
mov
js
xchg
mov
lahf
out
idivl
rcrl
test
fbld
jo
push
pop
in
push
lock
repz
ret
dec
arpl
jle
sbb
pop
shll
aas
jle
data16
loopne
xchg
dec
lds
add
addr16
jne
test
mov
mov
imul
mov
push
mov
mov
mov
movsl
and
test
dec
lret
push
in
mov
mov
mov
pop
dec
dec
cli
xor
aam
scas
inc
xchg
sub
scas
adc
rcrl
pusha
lock
xlat
out
mov
ljmp
jg
add
and
push
imul
xchg
shrl
jmp
fadds
xor
sub
mov
pop
inc
xchg
sti
adc
pop
fdivs
mov
call
mull
inc
lods
push
push
xor
xchg
push
repz
arpl
lods
adc
pop
pop
mov
pop
out
mov
cld
pop
jb
fcomps
xchg
dec
stos
int
xor
push
sub
lods
inc
or
stos
divl
push
push
loope
out
inc
fildll
es
test
mov
inc
pop
ds
dec
jb
fnsave
test
int3
sub
inc
xchg
rcrb
scas
xchg
push
mov
mov
packssdw
mov
jae
lret
gs
cs
sbb
pop
iret
loop
jbe
stos
cmc
pop
call
jp
sub
gs
mov
movsl
outsb
sub
into
mov
jnp
push
cs
cmp
xor
lcall
adc
out
out
mov
cmp
jecxz
push
sbb
inc
pop
addl
aas
lds
xchg
aas
xchg
out
push
mov
mov
stc
mov
lock
fidivs
xor
pop
clc
mov
and
cld
les
mov
mov
out
inc
cmp
xchg
stc
sbb
cld
cs
cmp
scas
jge
pop
sbb
lret
add
xchg
mov
lods
cli
inc
mov
inc
test
stos
jl
and
mov
xchg
cmp
mov
insl
push
push
in
lock
sub
lea
icebp
xchg
sub
insl
add
add
call
ret
mov
pop
idivb
je
fcoms
in
or
mov
mov
jl
popf
andb
fs
xchg
jge
call
ljmp
inc
sub
or
ss
in
sub
jp
jl
ljmp
and
cwtl
orb
daa
shlb
imul
add
and
icebp
loop
xchg
lcall
and
into
inc
cmp
cmp
push
mov
psadbw
mov
imul
xor
pop
jle
and
dec
pop
mov
and
sahf
das
xor
test
out
insb
call
xor
xchg
jg
adc
or
mov
lret
add
les
in
out
lock
adc
xchg
bound
inc
cmc
clc
sub
repz
mov
adc
lea
sbb
sub
mov
lds
cmp
push
shrl
push
xor
push
push
cltd
jbe
fiaddl
fwait
subl
in
and
dec
or
sarb
jle
push
subl
xchg
mov
push
inc
inc
xchg
movsl
mov
test
inc
dec
push
push
cmp
cmp
add
xor
popf
movsb
and
loope
iret
inc
sbb
push
jl
aas
scas
pushf
or
inc
or
ljmp
js
aaa
mov
je
xor
push
pop
xchg
das
mov
jo
std
dec
icebp
cmpsb
adc
cltd
sarl
mov
call
aaa
mov
jl
mov
add
fstpt
cmp
sub
mov
cmp
push
xor
out
out
pushf
popa
inc
cmp
lds
sti
mov
sti
adc
add
inc
in
and
push
sahf
gs
inc
mov
jmp
push
mov
inc
adc
lret
gs
push
xchg
mov
cmp
cmp
inc
cmpsb
sbb
cmp
jecxz
adc
sub
fwait
jmp
stos
and
rolb
push
ret
daa
mov
dec
lret
repnz
test
aaa
in
bound
pop
xor
lret
add
mov
sbb
xlat
jae
gs
inc
ss
shrl
add
sbb
stos
clc
jl
xor
add
mov
mov
lock
xor
test
mov
inc
ja
and
xor
jge
insb
mov
push
pop
addr16
jbe
test
mull
dec
orl
xor
and
repz
vpshlb
fwait
push
jg
and
iret
or
mov
xor
inc
mov
fstl
xchg
lret
mov
and
xchg
cmpsl
mov
or
lcall
aaa
jbe
ret
or
dec
adc
in
dec
ljmp
jns
jae
test
ds
aaa
mov
and
cmp
pop
aam
cld
icebp
push
mov
std
dec
xchg
ss
test
aas
add
and
sbb
andb
test
leave
mov
out
sarb
push
or
push
out
lret
aas
pop
and
subl
pushf
sbb
ljmp
lret
test
lahf
mov
out
jge
add
add
mov
dec
xor
mov
loopne
addb
mov
sub
sub
sub
clc
lock
xor
or
daa
sbb
test
mov
inc
in
movsl
test
in
ffree
in
mov
sti
and
cmp
aaa
xchg
mov
sti
add
data16
cwtl
jb
icebp
cwtl
sarb
cltd
adc
push
xchg
iret
lret
xchg
jne
repz
jae
into
sbb
and
inc
inc
sub
addr16
pop
sub
lret
xchg
inc
loop
dec
sbb
cmp
pop
xor
push
repz
dec
rorl
lods
cmp
mov
testl
sub
pop
das
addr16
test
icebp
sub
aas
add
and
sti
in
popa
push
sbb
xor
push
shlb
xchg
popa
jp
inc
je
iret
aam
push
into
fistpll
and
push
cwtl
insl
ja
mov
rcr
pop
aad
sub
mov
mov
mov
imul
push
mov
es
sub
add
int
jmp
push
xor
bound
aam
and
inc
jbe
jo
aad
cli
jbe
ftst
je
xchg
mov
into
pop
mov
jne
jae
dec
jae
cmp
rcl
fisubl
fistl
jae
pushf
imul
and
sti
push
push
stc
cwtl
hlt
mov
mov
or
pop
fidivrs
adc
mov
pushl
adc
fsubrl
mov
add
int
icebp
jno
stos
dec
adcl
outsb
cld
or
stos
outsb
das
ja
and
ret
out
xor
and
or
pop
jnp
mov
test
test
cmp
add
test
inc
out
dec
das
jp
mov
shlb
lods
dec
adc
dec
mov
aam
ret
push
subb
jl
in
pushf
sub
shl
loop
jg
pop
adc
pop
test
outsl
sub
xchg
in
cmp
fisubrs
fstps
jae
pop
and
aas
push
sbb
scas
adc
dec
add
and
mov
dec
adc
loop
repz
lock
and
xchg
into
ljmp
aam
mov
mov
add
xor
shll
bound
std
fwait
push
pop
shl
inc
mov
js,pt
inc
add
imul
xchg
add
add
sub
shll
mov
push
mov
cmp
popa
lret
mov
mov
clc
adc
sbb
jae
dec
jecxz
shrb
mov
in
loop
xchg
sarb
mov
jecxz
pop
and
stos
push
mov
in
popa
jnp
jae
mov
sbb
xchg
cltd
and
stc
inc
push
and
sub
or
popf
das
sahf
fcomps
jl
nop
arpl
inc
fstps
lods
addr16
rcrl
lret
test
and
or
adc
loop
cmp
cmp
ljmp
push
and
es
mov
lods
lods
jbe
push
movsl
daa
cltd
das
push
cmp
es
clc
inc
cmpb
sbbb
mov
scas
out
jnp
fidivrs
std
adc
xchg
mov
subb
fcomps
outsb
addr16
add
dec
loope
and
push
dec
adc
addr16
mov
xchg
mov
out
sub
jge
sub
shll
insb
ss
lods
xor
pushf
mov
cs
push
shrb
mov
int
lea
dec
sub
aas
lods
add
js
insb
insb
mov
xchg
jl
jae,pn
ret
clc
loopne
sti
repz
xchg
ds
sahf
mov
call
icebp
xchg
sbb
cmp
jecxz
lret
cmpsb
dec
jae
push
stc
rcl
outsb
add
jbe
lret
sub
fnsave
push
scas
xor
jnp
lahf
outsl
dec
js
mov
xchg
mov
sub
mov
rcl
fmuls
cmp
sarl
ds
jne
inc
ficoms
gs
fs
jle
ficoms
sahf
outsb
aad
shrl
push
dec
pop
aas
cmpsb
jecxz
mov
add
pusha
sub
into
out
mov
outsl
jg
outsb
cltd
fs
popf
out
aaa
push
inc
stos
mov
add
cmp
stos
lds
sub
leave
lds
sahf
inc
or
cmc
pop
or
xchg
dec
mov
ficompl
clc
punpckhbw
push
insb
in
popa
dec
xor
sbb
pop
sub
pop
int
dec
add
popa
push
hlt
push
es
inc
dec
sbb
mov
xor
lret
enter
mov
outsl
inc
or
add
cmp
add
outsb
or
leave
movsb
ja
mov
test
push
jp
fdivs
in
xchg
sbb
mov
test
jle
mov
iret
mov
aad
jbe
or
pusha
scas
sahf
push
pop
movsb
sbb
cmp
pop
cmpsl
loope
std
cmpsl
mov
inc
shl
push
inc
loop
nop
es
pushw
push
iret
add
push
fsubrs
mov
lret
popf
sbb
into
push
clc
out
inc
stos
cmp
push
dec
cs
cmp
pusha
cmp
push
jbe
xor
inc
mov
lahf
sub
fwait
lock
test
sbb
xchg
jge
movups
or
sub
ja
clc
adcb
addps
stos
roll
lock
inc
push
pop
inc
mov
pop
sbb
lods
mov
dec
shll
lods
lds
xor
xor
jp
pop
pop
and
adc
rclb
pop
or
cli
xchg
cwtl
pushf
adcl
push
ss
adc
sub
mov
outsb
xlat
test
movsb
shrl
std
pusha
sub
pop
shr
and
das
fidivl
sbb
mov
xor
sahf
ret
movsb
push
and
push
out
mov
enter
add
fisttpll
sub
push
dec
cld
repnz
jg
push
fsubs
sub
insl
lahf
fwait
lock
mov
and
shll
js
xor
mov
sub
shlw
dec
sub
mov
aas
fwait
fs
adc
mov
dec
insb
push
out
xchg
subl
mov
imul
out
add
xchg
mov
push
test
cld
push
sbb
pop
pushf
and
fdivr
and
mov
ficoms
leave
arpl
das
popa
pop
mov
les
xor
bound
push
jg
shlb
mul
sbb
cmp
adc
js
cmp
or
loope
inc
push
xor
lcall
sub
dec
jg
test
xchg
mov
ret
cmp
insb
jbe
xor
das
jl
mov
leave
pop
es
fistpl
push
pop
daa
out
xchg
inc
mov
fmuls
js
aaa
aam
out
lods
int3
arpl
movsl
jmp
add
mov
rorl
insb
mov
xor
cmpsl
jl
stos
jno
mov
mov
and
enter
adc
mov
cmp
jecxz
or
cmp
adc
lea
pop
dec
xchg
push
inc
jge
sbb
jecxz
inc
sahf
cld
jbe
cltd
inc
mov
or
jle
lods
xor
lods
outsb
pop
jl
loop
ljmp
lcall
mov
inc
js
inc
cli
jb
inc
scas
push
pop
out
mov
rolb
pop
mov
or
outsl
mov
shlb
dec
fisttpl
mov
aaa
dec
xor
sbb
add
frstor
or
adc
inc
ficoml
adc
scas
arpl
cmp
pop
mov
ret
sbb
inc
sarb
leave
xor
push
jns
or
in
out
sub
push
test
xor
pop
out
shr
cmp
dec
xchg
sbb
gs
test
negl
loop
nop
std
mov
dec
loop
mov
mov
or
in
mov
adcl
push
test
stc
sbb
or
les
in
or
lret
out
or
movsb
cltd
lds
outsl
jno
in
cmpsb
cmp
xchg
push
jb
ss
xchg
ss
pusha
mov
sbb
or
lret
mov
pop
push
jae
imul
jbe
stc
push
les
scas
ret
xor
sbb
dec
dec
lods
into
shll
mov
movsb
cmpsb
daa
sahf
mov
insl
shrl
xchg
rcrl
sbb
fwait
add
setnp
prefetch
fldl
gs
sub
xchg
je
sbb
repnz
scas
inc
mov
add
roll
or
mov
mov
fdivrs
xor
lds
xchg
out
mov
push
adc
adc
bound
outsl
or
xchg
dec
stos
inc
xor
jmp
xchg
jbe
mov
flds
fcoml
pop
call
xchg
in
push
pop
mov
mov
mov
bound
or
inc
mov
aas
scas
mov
aad
mulb
adc
mov
pop
subb
push
push
adc
and
cwtl
movsl
mov
or
mov
jl
jnp
dec
adc
sub
adc
fldenv
xor
lcall
push
scas
or
js
adc
fidivrl
mulb
ljmp
rcrb
adcl
and
adc
pusha
mov
adc
std
movsl
test
dec
cmp
push
pop
xchg
scas
loopne
or
frstor
mov
and
arpl
lret
outsb
mov
dec
into
mov
test
pop
fwait
movsl
stos
aad
rcr
pop
and
lret
lock
push
or
ds
mov
jmp
pop
push
push
in
xorb
dec
fcoml
cmpl
mov
cli
lds
pop
cwtl
decl
enter
jo
pop
mov
jp
sarl
pop
xchg
les
dec
mov
lret
cli
leave
mov
push
pop
pop
jo
arpl
jns
cmp
pop
xchg
stos
add
push
dec
pop
fwait
and
insl
pop
mov
inc
fdivs
repnz
in
ja
mov
fiadds
mov
sarb
pop
sub
dec
fdivl
call
outsb
pop
incl
sub
inc
add
ds
repnz
jae
jne
lret
mov
inc
rolb
adc
enter
jns,pn
dec
pop
fsts
outsl
leave
sbb
movsb
clc
sub
scas
jge
jg
dec
std
sub
and
mov
testb
mov
popa
aas
adc
lahf
or
dec
pop
cmova
mov
mov
outsb
push
sbb
add
fstpt
test
adc
insb
out
in
sbb
imul
cmp
push
lods
cmp
rcrl
out
sub
insb
in
and
lea
das
test
mov
add
in
popa
and
inc
mov
pop
lret
pop
xchg
cmpsb
push
dec
adc
repnz
enter
loopne
fiadds
scas
lret
dec
and
rcll
add
les
push
mov
sbb
cmp
sub
mov
sbb
push
jno
fldt
mov
fwait
insl
mov
fsub
add
mov
inc
dec
xor
add
std
push
mov
cmc
cmp
mov
adc
inc
in
and
xor
adc
dec
sbb
mov
cmc
test
ja
lret
jo
das
out
and
add
dec
mov
dec
pop
jmp
movsl
sub
adc
mov
lea
inc
mov
dec
dec
cmp
cmc
lret
dec
pop
or
cmpsb
push
mulb
adc
sbb
fistl
inc
pop
lock
dec
stos
addr16
dec
jmp
js
jle
jne
scas
bound
push
sti
sbb
gs
sbb
fidivrl
inc
cmp
adc
sahf
shlb
outsl
xor
enter
bound
add
pop
into
mov
sub
mov
icebp
jmp
mov
movsb
mov
imul
fstl
testb
int
sbb
out
lea
mov
call
or
bound
movsl
addl
cmp
jne
adc
cmp
push
or
push
imul
push
xchg
fs
into
pop
inc
or
inc
aam
mov
in
dec
pop
imul
mov
inc
add
xlat
mov
je
notb
dec
int3
pop
out
and
sbb
pop
adc
adc
cltd
mov
and
add
cmpsb
cmpsb
mov
cmp
popa
xchg
push
jmp
cmp
inc
aam
mov
subb
xlat
pop
nop
popa
das
lret
ss
imul
mov
pop
cmc
mov
popw
and
std
xlat
mov
mov
add
std
and
mov
pushf
xor
xchg
or
lds
dec
cmpb
outsb
scas
nopl
or
mov
popf
test
sti
cmp
push
faddl
fwait
adc
sbb
les
xchg
out
popf
pop
mov
mov
xchg
adc
es
mov
daa
imul
xor
ret
or
cmc
test
insl
jnp
adc
push
jne
test
xor
cmp
xchg
xchg
inc
pop
scas
cmp
mov
in
incb
hlt
push
cmp
fcmove
movsb
sub
xchg
inc
and
lahf
lret
and
mov
mov
fwait
arpl
xchg
and
out
in
std
sbb
or
adcl
push
dec
in
jl
outsl
dec
and
popa
cld
add
cmp
inc
std
and
push
inc
scas
aaa
shlb
xchg
cli
test
or
xchg
lods
pop
je
jb
adc
cltd
inc
js
pusha
or
xor
aaa
pop
enter
rorb
push
push
jmp
inc
iret
and
dec
cmpsl
or
je
jmp
shr
test
xchg
pop
lret
push
insb
sbb
stc
addr16
into
sbb
popf
pusha
jnp
dec
cmp
lods
sub
adc
lds
outsb
test
mov
and
push
stos
call
int
cmp
xor
shll
loopne
push
xchg
aad
pop
stc
xor
bound
jl
bound
movsl
sbb
iret
inc
popa
and
add
or
add
enter
in
push
jl
ja
stos
jmp
or
test
or
sbb
fildl
jne
mov
pop
mov
test
fistpll
pop
ret
dec
sub
pop
jnp
and
jmp
mov
and
ret
into
testl
cmp
xor
shrb
jbe
sbb
test
ja
int
sub
lret
data16
lret
xchg
and
imul
mov
loop
aas
jg
loop
je
sub
mov
sbb
push
add
fists
pop
cli
movb
push
mov
cld
xor
mov
sbb
pop
and
jl
pusha
lods
jb
pop
sahf
xor
mov
cmp
rcll
lcall
jp
cs
jno
inc
add
dec
in
sub
repnz
xchg
jnp
ret
mov
pop
rorl
add
dec
sti
mov
stc
mov
fsubr
fwait
lods
and
jae
push
jge
cmp
test
mov
loope
fdivs
cmc
adc
sarl
insl
pop
mov
nop
in
insb
cmpsl
adc
test
or
loopne
cld
imul
mov
dec
int3
pop
jp
jae
test
push
mov
jl
cmc
lods
out
pop
insb
repnz
ficompl
rol
cmp
rorl
lea
adc
cmc
inc
pop
sub
fcoms
cmp
fs
outsb
sub
xchg
ret
or
mov
dec
pop
or
pop
jp
lret
mov
stos
push
mov
mov
sbb
mov
in
stos
jle
sahf
fwait
push
loop
scas
movsb
xchg
dec
jle
sbb
sbbb
jns
in
js
pop
lahf
ss
addb
cli
stc
aas
in
xlat
into
cmp
inc
xor
push
filds
or
mov
xor
push
jg
jp
adc
inc
hlt
jnp
dec
loope
mull
jl
dec
jl
mov
popa
push
scas
push
lret
mov
add
orl
shll
icebp
addl
dec
lods
movsb
or
data16
mov
cmpsl
adc
cmpsl
paddw
push
xchg
cmp
push
int
shlb
fcomps
inc
js
hlt
jge
stos
mov
call
jp
stos
fsub
nop
push
sbb
es
ret
es
jmp
add
aas
inc
int
dec
ret
scas
sbb
shlb
sbb
cmp
xor
fstps
xchg
lea
mov
loopne
sbb
mov
roll
mov
cmpsl
and
xor
loop
icebp
loope
or
jmp
mov
or
xchg
dec
inc
inc
out
cmp
adc
iret
in
xchg
insl
pushf
mov
mov
pop
sbb
rolb
movsb
cmp
jno
iret
ds
push
ljmp
cmpsb
inc
js
loope
adc
loop
mov
pop
pop
aaa
inc
mov
repnz
or
loopw
lods
int
mov
lea
sub
xor
xor
fstl
negb
and
daa
pop
xor
lods
adc
mov
mov
inc
fildll
ja
addr16
cmpsb
mov
pop
inc
arpl
shrl
fucompp
mov
test
cwtl
ret
lret
or
or
pop
cmc
dec
and
mov
inc
dec
sub
push
jg
mov
pop
jp
andl
gs
and
cmp
int3
adc
insl
leave
arpl
cmp
hlt
lds
inc
and
std
jle
clc
or
stc
add
inc
fldl
mov
cmp
in
divb
mov
inc
int
lcall
repnz
popa
ja
mov
leave
cmp
imul
dec
shll
sub
aad
push
out
rcl
xchg
jg
in
sahf
leave
xchg
movsb
adc
jne
gs
pop
leave
xchg
addb
add
repz
sub
ja
mov
repnz
cmc
shl
sbb
push
xchg
lret
into
adc
push
mov
jl
jecxz
mov
cmp
aam
dec
xchg
xchg
gs
xchg
lock
bound
sub
hlt
sahf
lcall
test
xchg
cmp
dec
jne
fnstcw
enter
in
fcmovnb
push
push
xchg
lret
xchg
lods
xor
int
jbe
pop
jns
mov
aad
adc
test
aas
push
and
mov
test
dec
out
push
inc
mov
mov
sbb
mov
add
cmp
scas
cmp
pusha
sub
aad
lahf
rcrb
scas
dec
inc
pop
sub
dec
arpl
adc
and
in
loopne
mov
enter
dec
lret
js
add
cmp
xchg
loope
popa
adc
or
jmp
cmpsl
mov
stc
jg
jo
inc
xchg
xor
jge
jnp
cmp
insb
inc
push
iret
arpl
hlt
pop
sbb
nop
dec
mov
lods
repnz
ficoml
adc
dec
mov
pop
and
adc
cmp
cmp
xchg
dec
shll
orl
push
sub
push
xchg
sbb
and
pop
stos
adc
je
xchg
pop
nop
fmulp
stc
mov
inc
mov
add
xchg
dec
std
pop
or
xor
mov
sub
cmpsl
push
pop
inc
cmpsb
inc
out
or
test
adc
sub
xlat
cmp
cmp
imul
mov
test
and
aad
mov
xchg
or
jle
cmc
stc
mov
push
test
aaa
mov
sbb
rorl
shll
subb
fwait
mov
add
mov
sbb
add
imul
jge
jb
or
push
pop
mov
lock
cmp
aaa
js
xor
scas
add
mov
loope
sti
cli
sub
repnz
pop
jge
pop
adc
daa
jno
jecxz
cmp
cwtl
cld
movsl
dec
pop
fistps
lahf
fiadds
pop
fwait
pop
clc
in
imul
divb
sub
mov
fcomps
xchg
scas
nop
push
mov
cmpsb
in
out
in
in
in
faddp
sbb
push
cwtl
jg
pusha
insb
in
stos
stos
push
xorb
add
push
clc
xchg
sbb
lret
pop
jb
mov
fnstenv
mov
and
add
cmp
and
fsubs
lcall
jno
cmp
ds
pop
in
pop
shl
movsl
loop
and
repz
cmp
jp
dec
jge
aas
ss
or
je
leave
hlt
outsl
cld
divl
repnz
or
or
insb
imul
call
add
insl
out
roll
adc
pop
jle
les
lret
cmp
and
sub
cmp
and
imul
stos
cld
cli
jae
sbb
push
sub
mov
xchg
push
cmp
negl
lahf
xchg
mov
adc
clc
jbe
jo
test
mov
mov
jl
je
sbb
xorb
orb
leave
and
and
and
add
insl
mov
push
add
sub
sbb
sub
add
and
add
aas
aam
aaa
sbb
jp
mov
push
add
cli
sub
lretw
xchg
lds
int
mov
dec
rclb
mov
lret
stc
rorb
dec
pop
fsubs
enter
adc
ljmp
xchg
in
add
dec
pop
pop
lret
adc
cmp
pop
ret
or
or
add
jno
outsb
mov
pushl
aam
insl
fidivrl
dec
sub
jnp
inc
stc
out
mov
mov
jnp
pop
add
clc
xor
fiaddl
and
push
cli
les
pop
addl
repz
inc
mov
out
jle
cld
jecxz
daa
push
aad
push
addr16
push
cltd
dec
inc
test
jo
sarb
sub
movsb
cmp
jno
xor
cli
cmp
mov
pop
mov
leave
stos
and
adc
and
sbb
in
pop
ja
out
or
popa
push
dec
xor
sarb
sub
pusha
imul
dec
add
mov
idivb
pop
sbb
hlt
push
outsb
fistpll
jno
push
es
int
popf
xchg
sub
add
dec
push
mov
and
cmpsb
push
xchg
lods
scas
out
pop
push
les
mov
dec
xchg
jno
push
adc
mov
subb
in
nop
cmp
mov
fwait
adc
jg
rcll
mov
pop
mov
mov
pop
movsl
stos
lret
idivl
mov
sti
mov
out
push
call
mov
mov
dec
adc
nop
jnp
or
gs
lods
vmovlps
sbb
int3
icebp
mov
sub
dec
mov
add
or
lret
out
ja
test
orl
sbb
push
pminub
es
movsb
or
in
xchg
xor
cmp
movb
sub
lods
leave
arpl
cmp
adc
pop
jge
dec
sti
aaa
push
sti
xor
push
xor
mov
pushf
mov
cmpsb
inc
nop
mov
sbb
jg
aad
es
push
jp
sub
cwtl
mov
xchg
sub
cmc
and
sub
in
enter
into
insb
fdivrl
mov
mov
test
jb
sbb
xchg
cmp
jno
dec
sub
in
dec
xorl
push
hlt
mov
fisttpl
xor
cmp
dec
jle
xchg
dec
sbb
orb
push
push
or
mov
jo
xlat
add
add
test
mov
and
mov
imul
mov
lock
cwtl
ret
pinsrw
xchg
fs
shll
sbb
push
lods
das
cwtl
imul
inc
imul
lcall
cmp
pop
mov
sbb
mov
enter
movsb
fsubrp
push
add
push
in
fmull
stos
mov
pop
inc
sub
fcoml
inc
sbb
inc
and
lods
lods
shrl
pop
mov
push
fadds
outsl
mov
jb
and
jns
mov
pop
loope
sub
xorb
jbe
cmp
cmpsb
movsb
scas
jbe
loopne
test
ror
push
cmpl
push
popa
xor
lcall
ljmp
outsb
lahf
cmpsb
pop
ja
insb
sub
or
jmp
mov
mov
pop
dec
iret
out
add
pop
addr16
fdivs
cli
pushf
fisttpl
imul
fimull
and
push
push
jecxz
push
inc
rorb
insb
mov
testl
jno
pusha
jle
xor
jnp
into
jle
xchg
xor
and
and
xor
in
and
cmc
into
adc
jmp
mov
xchg
out
xchg
shll
xchg
mov
add
xchg
cli
lods
mov
popa
sub
sti
push
sarl
mov
xchg
test
mov
and
sbb
into
mov
push
mov
stos
xor
insb
pop
lock
mov
loopne
jecxz
adc
inc
cmp
sub
cmpsl
leave
xorb
jno
sbb
popf
sub
fwait
jns
sbb
mov
xor
pavgw
lock
cmp
jns
cli
das
lock
out
stos
movsb
xor
sub
push
cmpsb
nop
aad
mov
xchg
adc
out
xchg
pop
movsl
mov
enter
hlt
inc
mov
das
enter
repnz
jecxz
xchg
or
adc
sbb
clc
adc
ret
jno
mov
cmpsl
ja
insl
sub
jecxz
add
mov
fstps
sub
inc
daa
cmp
pop
rclb
mov
add
mov
push
aam
cmpsb
cmc
pop
dec
sub
call
adc
repz
fsubs
jns
and
repz
push
lret
sub
mov
ret
adc
mov
and
lret
dec
xchg
and
imul
mov
mov
stos
popl
mov
cmp
jl
dec
pop
ficoms
leave
sub
hlt
jno
cmp
outsb
cltd
dec
cmp
movsb
pop
mov
mov
mov
hlt
sub
xchg
sarl
xchg
fidivs
pop
add
or
test
or
fcomps
xchg
mov
scas
imul
cmpsl
and
arpl
lods
mov
popa
inc
neg
push
xchg
mov
lret
and
mov
daa
dec
pop
bound
sub
sbb
cmpsb
add
xchg
iret
xchg
test
and
int3
sub
das
fcmovb
adc
cld
push
out
cmp
sti
ror
xor
cmp
xchg
out
fs
or
sub
int
push
fxch
jle
repz
in
pop
setno
in
push
adc
add
xor
incl
and
pop
add
test
out
add
inc
insb
pop
data16
scas
scas
inc
push
jno
xchg
in
adc
cli
stc
sbb
push
movl
dec
lcall
mov
outsb
push
dec
cmpb
pop
inc
inc
xchg
out
lahf
adc
mov
jne
pushf
test
pop
mov
add
pop
pop
cli
cmp
push
bnd
xchg
js
in
inc
std
lret
test
test
pop
sbb
insl
and
aaa
aaa
xchg
add
ss
adc
sbb
nop
int3
xorb
lret
pop
fildl
inc
jnp
pop
aaa
mov
divb
push
sub
loop
pusha
sub
add
inc
push
inc
push
hlt
fs
mov
sbb
sub
leave
mov
and
push
mov
outsb
lret
int3
xlat
int3
das
insl
or
sub
lds
and
jnp
jg
push
mov
hlt
insb
push
cmp
jp
es
mov
mov
dec
fimuls
andb
hlt
mov
xor
inc
adc
inc
pop
fdivl
mov
inc
lods
int
pop
inc
dec
xor
dec
icebp
inc
imul
xchg
mov
and
mov
pop
mov
sub
leave
in
jle
xchg
cmp
cltd
pop
jb
sbb
pusha
std
loop
clc
xchg
sub
mov
popf
or
xor
or
enter
test
shlb
mov
ds
cmp
pop
jmp
pop
sbbb
jecxz
or
outsl
out
rcrl
xchg
fldt
std
or
xchg
and
lret
mov
and
pop
sbb
pop
jnp
outsl
or
movsb
fsubrs
mov
add
push
pushf
lock
outsb
ds
inc
subl
cmpb
inc
mov
lret
ret
lret
ljmp
loope
std
cs
pop
lea
subl
mov
inc
scas
xorl
addr16
cmp
ja
sub
dec
mov
xchg
out
and
roll
enter
in
fsub
cmp
jecxz
stc
jo
mov
mov
mov
fwait
xor
sbb
cvttps2pi
scas
mov
or
popa
inc
fucomip
mov
fs
imul
dec
mov
mov
sub
adc
stc
jecxz
pop
jecxz
push
pop
xchg
mov
dec
lahf
pop
push
mov
inc
es
out
mov
inc
xchg
mov
jo
sbb
test
jb
out
pusha
das
sub
into
test
adc
jnp
lds
clc
adcb
repz
xor
or
mov
shrl
push
xchg
loopne
shlb
mov
mov
inc
loope
dec
cmp
aam
xlat
popl
lods
or
imul
repnz
gs
mov
sbb
or
scas
lahf
mov
mov
or
jmp
xor
mov
push
cmp
adc
jl
out
cmp
mov
stc
push
test
jb
jg
out
jp
popa
fwait
xchg
movsb
mov
std
pusha
mov
pop
xor
gs
jl
add
lock
lods
mov
loop
mov
icebp
mov
fidivs
bound
test
adc
inc
pusha
add
push
sahf
xchg
lret
cmp
lcall
xchg
fdiv
sub
xchg
mov
mov
nop
nop
loope
mov
xchg
dec
sbb
jbe
loope
in
and
das
jge
popf
cmp
ret
fistpl
in
loopne
xor
lret
fildl
mov
addr16
jne
pusha
push
push
mov
aam
sub
gs
xchg
dec
lret
int
sbb
sbb
inc
ja
xor
xor
in
outsb
inc
dec
out
or
dec
and
mov
sbb
mov
fldcw
mov
inc
test
xor
cmp
pop
inc
and
mov
cwtl
lds
dec
jns
pop
jns
and
push
pop
shll
add
xorl
mov
ss
pushf
das
dec
gs
loop
popf
shrb
mov
in
and
pop
leave
cmp
xchg
pop
scas
sbb
jns
sahf
sub
rcrb
pop
pop
int
push
clc
lret
sbb
loopne
test
shrb
sbb
jae
jge
add
daa
cmpsb
inc
sbb
mov
das
push
push
popf
cmp
mov
inc
sti
cmp
xchg
arpl
adc
les
ljmp
and
mov
enter
adc
vmovss
jecxz
sbb
sbb
xorl
popa
cmp
mov
sbb
out
jae
dec
add
dec
jb
and
mov
nop
push
cwtl
lods
clc
dec
out
push
inc
imul
jb
jne
push
pop
loope
pop
sahf
test
pop
jnp
xchg
push
pop
inc
cmp
push
dec
jmp
fimuls
nop
ret
les
test
jg
loope
ss
pusha
test
jmp
mov
out
aaa
dec
data16
adc
xor
stc
mov
flds
xchg
xor
imul
mov
daa
dec
enter
leave
jno
dec
fcmovu
push
aaa
repnz
pop
out
adc
pop
shr
out
loope
jp
mov
stc
jge
dec
data16
imul
sub
jmp
dec
leave
mov
call
inc
sub
andl
xchg
lcall
leave
mov
cmp
lods
icebp
testb
mul
out
in
pop
adc
mov
shlb
or
xor
xchg
aaa
jb
aas
outsb
jge
mov
movsl
mov
in
xorb
bound
pusha
inc
cmp
xor
jns
in
xchg
int
in
scas
stc
push
std
aad
mov
mov
pop
incb
adcl
xor
les
rcrb
adc
insb
jae
cmp
sbb
aam
xor
lods
sti
mov
pop
cmp
mov
or
push
and
add
jb
or
sub
or
push
fwait
mov
fstps
lret
daa
mov
in
mov
adc
and
ficompl
roll
cltd
aaa
mov
pop
push
dec
lret
and
loopne
adc
dec
sub
sub
and
jbe
fsts
pop
fwait
and
hlt
mov
fmull
movsl
cmc
lret
and
adc
xchg
inc
sub
outsl
xchg
out
fisubl
fcomps
jg
sub
aaa
fisubs
imul
int3
cmpsl
cltd
stos
jno
adc
bound
imul
rorb
aad
mov
push
movsb
adc
jecxz
lea
xchg
push
popa
sbb
or
mov
lea
mov
fldt
add
pop
clc
lock
dec
addb
arpl
ss
hlt
jb
ljmp
std
leave
test
or
lcall
pop
mov
xchg
sub
rcl
mov
cmp
cmp
pop
and
dec
push
lds
iret
cli
loope
fwait
mov
pushf
ret
inc
and
stos
cmp
jmp
jno
ljmp
gs
dec
call
adc
adc
arpl
cmp
scas
cmp
loopne
jnp
movsb
fistl
cmc
shll
dec
sbb
ljmp
add
cmp
rclb
cmp
js
jns
orb
lock
popf
adc
adc
adc
aam
sub
fsubrs
jmp
cltd
push
sahf
and
stos
mov
push
popf
rolb
mov
push
pop
mov
jge
sbb
and
mov
mov
lock
outsl
loopne
cmp
jbe
mov
negb
push
sub
popf
cmp
in
mov
push
xchg
inc
inc
add
inc
jl
movsl
and
or
or
ret
fdivrl
add
enter
xor
nop
pop
fdivl
cltd
imull
in
bound
adc
xchg
out
pop
and
pop
scas
stos
sub
xchg
cltd
inc
sbb
std
js
lods
pop
cmp
mov
inc
push
xchg
mov
adc
cmp
ret
pop
rcr
xchg
and
loopne
loopne
frstor
sahf
popa
mov
je
push
jnp
aam
fwait
data16
repnz
movsl
mov
pop
out
inc
pop
add
or
test
mov
dec
push
jb
xchg
jb
ret
push
loop
insl
outsl
sub
pop
jbe
push
loope
hlt
xchg
sti
cld
imull
iret
std
shrl
rorl
sub
insl
enter
aas
test
enter
mov
push
jl
dec
popl
fistpll
sub
cmp
in
inc
cmp
mov
mov
outsl
movl
jae
clc
pushf
ret
gs
sbb
xchg
popa
flds
fstpl
lahf
xchg
xor
and
dec
push
fiaddl
mov
sahf
ss
jno
arpl
adc
inc
dec
mov
jae
mov
jne
mov
and
jle
shld
ret
lret
pop
in
aad
jl
mov
pop
call
mov
aad
xchg
cs
push
jle
repz
mov
cmp
stos
fdivrs
lcall
pop
shl
test
add
and
push
mov
mov
jnp
push
addr16
adc
addr16
xor
sbb
jb
pushf
xor
imul
in
ret
test
movsl
jnp
outsb
add
gs
sub
sub
mov
rcrl
pop
mov
mov
push
xor
fdivrl
insb
pop
dec
pop
movsl
nop
pop
test
pop
inc
jl
test
sub
cltd
mov
inc
jae
shrb
pop
sbb
mov
repz
pop
xchg
cmp
cmp
and
fbld
add
cmpsl
pusha
jecxz
enter
out
ljmp
loop
hlt
xor
mov
sbb
stc
mov
and
mov
mov
mov
ficompl
pop
push
into
dec
mov
push
and
mov
cld
fnstcw
dec
add
lret
pusha
ja
fstpl
xchg
incl
ret
stc
sbb
fsub
xchg
mov
jmp
shlb
leave
cltd
iret
popa
dec
pop
stos
mov
mov
mov
int3
mov
shlb
fldl
jl
or
cmp
sbb
mov
cmpsl
aam
xor
imull
js
or
lret
xor
mov
sub
adc
int
aam
inc
bound
test
aam
gs
or
out
mov
fldenv
fcompl
jmp
xchg
repz
pop
pusha
or
imul
inc
ret
aaa
mov
mov
lret
xchg
and
jge
or
lea
out
std
cmp
dec
mov
lret
test
and
insl
and
mov
aad
mov
jbe
scas
cli
or
insl
and
sarl
jmp
or
add
scas
in
bound
pop
scas
repz
aam
dec
orb
ret
loop
cmpsb
add
sub
out
ja
sbb
cld
mov
es
mov
filds
roll
sub
mov
sub
push
jbe
mov
movsb
adc
ret
lea
je
jge
xor
dec
dec
movsl
sub
clc
cmpsb
jp
test
insl
ud1
fst
xchg
leave
cli
mov
subb
nop
out
out
movb
xor
add
jmp
push
xchg
jae
jge
sbb
sar
push
push
fucomip
jb
mov
sbb
push
xchg
flds
mov
std
mov
repnz
scas
test
sti
leave
leave
pop
pop
inc
test
ret
vpavgb
arpl
jnp
call
in
mov
and
hlt
xor
sahf
and
subb
inc
pop
push
push
fwait
and
lgs
push
gs
add
push
out
push
jg
mov
hlt
sub
loope
add
out
pop
fisttps
fcmovu
rolb
and
sub
xor
dec
std
in
cmp
arpl
xchg
in
and
int3
pop
fs
jbe
xorl
hlt
fadd
insb
gs
loopne
adc
xchg
lods
lock
sub
xlat
outsl
in
sub
inc
mov
mov
inc
xchg
pop
fildl
xchg
add
xchg
int3
cli
jnp
or
lds
push
mov
mov
enter
pop
jp
cmp
pop
push
xchg
cmpl
xor
sub
pop
add
sti
jae
sti
dec
mov
ds
lret
xchg
fdivrs
cmp
lods
dec
xchg
incl
stos
lret
jbe
or
lock
test
fcoms
inc
xchg
mov
int3
icebp
jbe
cmpl
xchg
mov
ljmp
mov
cmc
adc
sbb
bound
mov
out
popa
incl
push
push
mov
out
scas
dec
inc
inc
sub
xor
loope
jmp
jmp
mov
shrb
jae
stc
jp
jno
cmc
ret
dec
imul
stos
leave
stos
mov
dec
std
pop
pop
out
jne
mov
test
jge
lea
adc
xchg
pop
mov
stos
pop
pop
or
cmp
dec
dec
cmp
sub
test
inc
rorb
jne
sahf
in
jne
xor
adc
std
incb
pop
dec
inc
push
faddp
mov
loopne
cmp
mov
jb
push
shlb
daa
aad
xor
jmp
fnsave
int3
jo
les
inc
repnz
push
rorb
lea
mov
sbb
jle
jge
xor
jns
popa
xchg
shll
or
push
mov
ja
lcall
xor
cs
pop
push
mov
push
jle
lods
jne
ds
xorl
popf
xchg
test
jge
je
or
hlt
fdivrs
lcall
les
dec
jno
add
sub
jmp
fisubrl
sub
mov
jge
mov
stc
add
mov
xchg
ret
fnsave
xchg
sbb
hlt
xor
cwtl
sub
xor
adc
mov
in
and
loope
std
sbb
cmp
test
inc
subb
dec
inc
loop
cli
xchg
mov
cwtl
stos
push
hlt
out
scas
aam
fisttpll
ja
push
call
cmp
push
mov
push
mov
push
cmp
cwtl
ret
dec
sti
sub
push
fdivr
push
push
leave
xlat
dec
mov
ds
or
int3
in
mov
scas
jg
mov
xchg
push
ss
dec
ror
mov
je
daa
mov
scas
mov
cmp
stc
in
sub
mov
imul
arpl
test
jne
xor
adc
leave
cmc
data16
cmpsb
lahf
jns
notb
jne
fadds
roll
push
sub
frstor
test
int
cld
push
jns
mov
arpl
out
fsts
mov
adcl
ret
jnp
mov
das
scas
stos
cmp
loope
inc
add
fldcw
sahf
int3
lods
aaa
dec
ret
mov
clc
mov
pop
xchg
mov
dec
cltd
dec
mov
xor
test
stos
jae
hlt
pop
mov
pop
ja
cmp
mov
or
adc
mov
sbb
daa
dec
lahf
sysexit
push
mov
call
mov
test
pop
nop
pop
xlat
jl
repz
dec
loope
lea
fistpll
adc
popa
cmp
je
adc
popf
adc
out
adc
pop
dec
mov
ret
loopne,pt
fists
or
cmp
mov
std
daa
fadds
xor
cmc
inc
nop
notb
scas
jge
dec
mov
jae
mov
outsl
lods
ljmp
hlt
fisttps
adc
daa
popf
or
inc
outsl
pushf
cmp
mov
int3
call
sub
push
xor
push
add
push
push
in
sbb
int
jecxz
pop
test
into
mov
push
fucomi
test
sub
rcll
xor
sti
adc
shl
mov
or
dec
in
push
cmp
in
ficoml
mov
ret
dec
xchg
jle
pop
xor
bound
pushf
or
add
es
outsl
pop
insb
lods
or
xchg
dec
stc
pop
add
jp
and
mov
sub
int
lds
nop
cmpsl
pop
mov
cwtl
push
cmp
rorb
fiadds
push
jno
dec
divb
or
push
fnstcw
dec
outsl
and
mov
iret
adc
inc
ds
xchg
gs
ds
pop
rorb
js
inc
xchg
mov
add
loop
test
inc
mov
repz
mov
push
aam
arpl
stos
jnp
cmp
cwtl
xor
roll
add
fbld
mov
pop
mov
sbb
nop
insb
adc
sub
and
out
leave
add
fisttpll
cmp
mov
cli
filds
xchg
cmp
cmp
dec
mov
popl
lods
fdiv
mov
ds
adc
push
lret
push
pop
push
clc
dec
dec
cld
outsl
sbb
mov
mov
adc
addr16
inc
inc
fidivs
cmp
test
jae
and
bound
push
bound
ror
add
test
mov
pop
mov
or
scas
push
bound
lahf
xchg
push
loop
inc
push
inc
cmp
fstps
jo
xlat
lahf
sahf
add
push
nop
cmpsl
mov
pop
mov
into
adc
jb
jae
push
dec
int3
ret
lds
repnz
shr
std
sahf
push
loope
mov
aam
cwtl
sub
aaa
mov
mov
lret
and
mov
add
jne
rcll
dec
pop
push
push
dec
cli
inc
xchg
stos
cmp
xor
push
pusha
and
callw
pop
add
adc
adc
push
dec
fndisi(8087
dec
inc
imul
xchg
mov
jae
in
and
lcall
mov
cmp
xchg
jne
or
pop
dec
push
fdivp
dec
mov
lock
mov
pop
outsb
jmp
add
jecxz
ljmp
xchg
cli
cltd
push
mov
pop
jo
sbb
scas
call
dec
ss
sub
das
fprem1
dec
xchg
fwait
test
add
stc
imul
das
cld
push
fldenv
mov
push
aaa
das
cld
jae
add
push
fdiv
out
loopne
movsl
adc
xchg
out
loopne
pusha
ja
test
mov
cmp
adc
clc
sahf
sbb
dec
sub
push
mov
adc
int3
out
cmpsl
vpshldw
dec
push
inc
stos
add
mov
and
out
jns
ljmp
xchg
mov
jo
adc
inc
movsb
mov
int
and
imul
mov
push
jno
lock
mov
test
in
adc
popf
mov
mov
pusha
test
fsts
push
jno
add
cmp
dec
jl
jae
shrl
mov
cmp
dec
mov
data16
in
jecxz
push
pop
adc
shrb
adc
dec
add
sbb
cmp
rcll
sahf
mov
jl
cld
lcall
insl
loopne
ljmp
enter
mov
fsubr
pop
pop
cmc
sbb
cmp
lock
sub
sbb
push
repz
mov
out
jae
adc
add
insb
shlb
int3
lret
or
cmc
fcmovnb
inc
dec
mov
in
loope
test
sub
daa
push
push
pop
das
aaa
pop
xchg
or
cmp
cltd
inc
xchg
loope
js,pt
addr16
int
scas
cmpsl
dec
mov
lock
push
sahf
rcll
adc
loop
cs
inc
jg
cmp
daa
cmp
pop
mov
push
xchg
mov
mov
xchg
movsb
jb
mov
es
in
mov
sarl
add
sub
fsub
test
subb
xchg
jae
sub
fbstp
inc
jl
adcb
int
adc
cmc
daa
cmpl
sbb
cs
insl
push
in
clc
add
adc
push
mov
repz
lods
jmp
sbb
lods
adc
ja
sub
aas
xchg
ret
inc
and
aas
int
sbb
bound
insl
in
in
mov
ja
push
and
and
and
pushf
aam
push
jno
and
lret
jae
imul
inc
fdivrl
in
or
repz
in
and
and
inc
jecxz
arpl
adc
mov
in
sti
push
and
imul
aam
es
fnstenv
xlat
or
push
outsb
push
xchg
xor
and
jg
mov
bound
cmpsl
je
rclb
clc
scas
xchg
sbb
mov
decb
jmp
mov
add
fucom
out
aad
scas
pop
lods
repz
jnp
sub
push
in
leave
push
mov
addr16
insl
add
int
xchg
sbb
in
mov
ds
xlat
inc
adc
scas
pop
out
insl
loope
xchg
mov
or
cmc
jle
pop
shl
loop
mov
pushf
or
push
cltd
mov
mov
mov
lret
rorb
aas
gs
movsb
mov
decb
lds
movsb
test
xor
lret
mov
sbb
test
sarb
cs
and
loope
fistpl
inc
lods
imul
into
adc
inc
or
xlat
cmpb
mov
and
xor
std
mov
sub
adc
jno
adc
dec
dec
shrl
int3
push
cmp
ret
adc
call
popa
or
jmp
lock
sahf
xchg
inc
jg
sub
shr
and
add
out
inc
in
xchg
repz
dec
jnp
test
cmp
mov
fstpt
fnstcw
gs
in
mov
leave
cmp
sbb
cmp
fisubrl
cs
mul
in
sbbb
xchg
stos
movsb
or
pop
cld
incb
mov
out
popa
pop
out
int
pusha
nop
pop
dec
jae
adc
sbb
mov
xchg
sbb
mov
xor
ljmp
or
loop
in
lods
jo
cmp
jp
sub
mov
xchg
lret
scas
cmp
inc
mov
in
ds
in
lods
mov
mov
fidivrs
inc
das
sub
cmpsl
stc
sarb
mov
cmc
xchg
sub
loop
jo
loopne
fldl
aad
jo
adc
bound
lods
jb
lea
in
jge
sub
movsl
arpl
adc
mov
xchg
jnp
pminub
or
mov
cltd
mov
jecxz
push
rcl
or
popa
xchg
or
or
dec
insl
pop
jecxz
repnz
into
mov
or
push
cmpsb
lret
mov
add
mov
dec
cli
rcll
lret
pop
test
es
sbb
mov
pop
sbb
lret
stos
fwait
mov
push
imul
popa
rorl
je
sbb
aaa
sub
jae
pusha
out
sub
testl
push
lock
call
mov
adc
sti
mov
in
lods
test
lret
fidivl
add
cmc
cmc
test
ss
inc
xlat
icebp
dec
or
push
dec
cmpsb
mov
hlt
mov
pop
ljmp
loope
cmp
cmp
lock
inc
jp
leave
hlt
xchg
xchg
jnp
dec
fadds
and
movsl
loope
das
out
mov
ds
loop
xchg
lds
out
rorl
sbbl
stos
ljmp
mov
imul
mov
notl
leave
call
lcall
notb
xor
inc
es
adc
cli
jae
sub
pop
pusha
iret
jne
setg
xchg
std
pusha
aam
sbb
or
sub
cli
or
out
mov
lahf
mov
mov
mov
and
and
aam
lods
cmp
or
loop
mov
ljmp
sub
arpl
dec
lods
das
std
imul
add
ds
sbb
stos
cltd
cmp
push
lahf
add
cmp
lret
lret
cmpsl
xor
or
int3
or
or
and
adc
mov
mov
and
sub
jle
fs
outsb
in
cs
pop
push
fwait
xchg
or
lcall
mov
lods
cmpsl
stos
lock
mov
addr16
lods
cmp
push
pop
ficoml
fcomps
mov
cmp
mov
push
push
movsl
loop
or
and
pop
lret
lods
push
nop
movsl
pop
inc
lds
sbb
dec
dec
mov
mov
daa
imul
mov
outsl
rcll
jnp
and
gs
fistps
add
inc
mov
add
lcall
xchg
in
push
or
mov
mov
or
aam
pop
lret
sbb
repz
dec
xor
je
icebp
lahf
movsl
das
shlb
dec
push
inc
jnp
jl
inc
jb
fstpl
outsl
leave
ljmp
xor
jb
adc
jns
jge
sbb
xchg
repz
in
bts
std
xchg
movsl
loopne
aad
xor
push
cmp
lahf
test
mov
xlat
dec
aad
lret
aaa
sub
xchg
mov
enter
mov
add
xchg
test
idivl
pop
lahf
mov
aad
inc
aad
nop
cld
or
mov
xchg
jl
jmp
mov
cltd
xchg
sbb
sub
and
adc
sub
loope
ljmp
es
xchg
and
out
mov
enter
decl
shll
pusha
out
mov
xor
mov
in
mov
push
sub
xchg
xor
dec
dec
les
movsl
or
bound
xorb
mov
enter
jno
fs
out
and
or
in
and
daa
pop
or
cmpsl
xlat
inc
mov
mov
js
push
cmpsb
repnz
pop
sbb
cmp
stc
sub
in
xor
or
mov
dec
or
aaa
sub
popa
stos
sti
movsl
out
hlt
adc
sub
js
jle
and
punpcklwd
cld
shrl
dec
jno
jge
mov
imul
jae
rcr
insl
xchg
sub
xlat
xchg
notb
pop
jo
push
fimuls
adc
je
out
test
popf
rorb
out
pop
popf
push
loopne
xorl
mov
decl
mov
outsl
sub
test
push
or
lret
jl
push
icebp
jb
mov
jle
movsb
subb
aad
fiadds
pop
jno
jmp
lret
push
push
outsl
mov
dec
sub
mov
jo
je
ja
test
adc
repnz
push
mov
mov
xor
pop
push
mov
mov
cmp
in
loopne
lock
out
sbb
cmp
push
xor
jg
mov
cmp
outsl
add
mov
sub
pop
popf
dec
ss
jb
pop
jg
faddp
ja
dec
cld
mov
cmp
cmp
nop
adc
shrl
and
je
or
inc
int3
aaa
push
mov
dec
add
lret
js
mov
and
mov
pop
add
popa
mov
xchg
mov
popf
ficoms
pushf
inc
lret
int3
nop
addr16
dec
dec
mov
lods
fstpl
xor
add
leave
jns
or
popf
push
pop
xchg
out
mov
and
inc
mov
and
push
shr
andb
mov
xchg
pop
pop
loope
js
push
lock
aad
cmp
push
fwait
scas
jmp
aad
xlat
inc
sub
cmpsl
sub
xchg
sbb
pop
jle
dec
pop
add
fmuls
and
ret
rcll
xchg
add
cmp
xchg
pusha
jle
inc
shlb
loop
addl
jg
dec
add
fld
ficoml
fisttpl
das
enter
mov
xchg
nop
pusha
insl
lahf
jle
xor
or
push
psrld
adc
out
aaa
or
loopne
dec
shrl
out
xchg
adc
cmp
imul
mov
xchg
and
repz
adc
add
mov
enter
insb
stos
outsb
faddl
scas
ret
fbstp
test
das
int3
dec
pop
lock
fsubs
out
jne
cmp
sbbl
sbb
dec
aad
lds
stos
lret
call
aad
sbb
aam
cmp
les
jno
test
pop
dec
dec
push
adc
mov
ret
pop
cltd
sahf
je
mov
mov
lcall
dec
inc
push
nop
adc
ds
inc
lods
rclb
push
add
loope
inc
clc
mov
in
inc
dec
int3
xor
rorb
sub
and
mov
push
jl
adc
cmp
sarl
or
xor
push
test
push
test
xchg
cmp
push
lods
rolb
jle
push
pop
aaa
ds
ss
push
or
out
cmp
test
push
push
test
fistl
mov
insl
jg
lods
in
hlt
lods
and
test
out
mov
das
mov
inc
jl
mov
ror
cmp
xor
and
mov
add
pop
xchg
out
imulb
or
cmc
shll
mov
pop
imul
sub
or
mov
dec
and
aam
sbbl
sahf
pop
leave
cmp
shlb
int
out
mov
pushf
fsts
nop
ret
test
ss
add
pop
dec
sti
add
or
mov
dec
outsb
and
decb
inc
mov
and
out
pop
xchg
loopne
mov
out
jp
daa
adc
scas
shll
imul
push
mov
outsl
hlt
cmp
aaa
push
rolb
pop
or
mov
pop
ffree
fisttps
and
mov
sub
ret
rcl
pop
add
pop
jmp
arpl
xor
sbb
out
enter
jae
and
sbbb
je
es
jp
lods
adc
daa
mov
mov
ret
nop
push
mov
decb
imul
fbstp
mov
mov
mov
imul
sbb
cmpsl
idivb
push
push
inc
inc
imul
add
inc
mov
adc
std
add
fdivp
jle
xchg
xchg
pop
rcrb
sub
in
push
pop
mov
repz
push
mov
fsubrs
out
mov
xchg
jl
gs
dec
lahf
and
inc
mov
punpckldq
lds
imul
fs
pop
ficomps
pop
dec
int
js
or
sub
xchg
and
das
mov
sub
decl
nop
push
stos
mov
sbb
fsubrs
cwtl
out
pop
fs
arpl
cmp
sbb
mov
gs
add
cld
decl
xchg
shrb
push
xor
mov
mov
jg
xchg
bnd
adcl
imul
or
xchg
pop
mov
iret
in
push
jecxz
xchg
xor
jg
cs
dec
sub
enter
xchg
imul
push
pushf
lods
sbb
bound
loopne
sub
insb
pop
fcomp
pop
or
jl
jl
or
dec
popfw
pop
out
lcall
jb
in
std
mov
push
aas
loope
jmp
cmp
jmp
inc
rolb
frstor
jnp
adc
add
rcrl
mov
inc
lea
cmp
test
pop
gs
clc
sahf
push
pop
mov
das
sub
pushf
rolb
xchg
jp
inc
cs
aad
jg
inc
test
jecxz
and
cli
outsb
jge
jp
stc
or
or
ret
repz
cmp
pop
cmp
aaa
mov
pushf
fildll
pop
cli
lock
ss
sbb
pop
sub
addr16
fildl
push
pop
es
pushf
sbb
or
mov
leave
std
das
sbb
xor
aad
bound
enter
ja
inc
negb
jbe
inc
rorb
in
mov
ljmp
mov
jle
out
mov
add
pop
or
fadds
lods
sub
repnz
inc
cmpb
aam
fisubrl
xor
sbb
test
ljmp
or
lahf
sti
pop
stc
stc
lea
mov
into
xchg
and
mov
pop
orl
sbb
mov
popa
xchg
imul
aam
lods
mov
std
stos
mov
pushf
jecxz
cs
push
call
pop
int
cld
aad
add
jle
leave
xchg
pop
mov
mov
pop
mov
stos
mov
adc
xchg
out
lcall
push
sub
push
xchg
bound
imul
idivb
out
fstpl
stc
pop
jl
lds
repz
inc
mov
ja
ret
aad
ret
test
or
out
aas
jmp
push
mov
repz
jns
hlt
mov
add
mov
cmp
cmp
lret
pop
cmp
mov
cmp
xlat
or
ror
mov
out
adc
and
xchg
mov
outsb
ss
test
fstl
mov
add
jge
int
cmpsl
loope
and
ljmp
mov
mov
sbb
and
or
enter
or
repz
push
xchg
sub
jae
add
and
rcrb
xchg
rol
js
out
jo
sbb
cmp
jp
pusha
mov
or
repz
jl
xorl
fcomp
fistps
cmpsb
mov
mov
hlt
lcall
push
out
imul
pop
aas
negl
push
std
mov
popf
pop
mov
adc
lea
sarb
fwait
scas
cmp
jp
aas
ljmp
jnp
sub
repnz
minps
nop
and
jg
and
mov
in
push
and
hlt
xchg
fnstcw
jp
vandnps
push
sbb
loop
loopne
xchg
sbbb
pop
add
mov
aad
sarw
xchg
mov
add
mov
push
rcrb
xor
sbb
test
mov
xlat
in
xlat
push
and
adc
pop
mov
aaa
inc
mov
or
push
movsl
rol
add
aad
inc
pop
xchg
loop
xchg
pop
mov
mov
cmp
xor
arpl
out
roll
xorb
push
leave
shl
fadds
stc
in
inc
dec
inc
in
mov
pushf
mov
mov
out
lock
test
in
pop
rclb
mov
pop
subb
sahf
add
sub
push
jl
sti
mov
jl
pushf
in
mov
divl
push
es
pop
repz
in
mov
cmp
and
data16
lods
ja
movsb
adc
or
adc
inc
pushf
xchg
jno
pop
leave
mov
xchg
test
sbb
jmp
popf
push
mov
or
mov
push
loopne
and
or
push
sbb
call
jbe
and
add
push
inc
dec
add
mov
nop
adc
xchg
mov
pop
addl
es
adc
sub
pop
push
out
insl
mov
adc
dec
inc
xor
dec
jno
fsubs
rol
rcr
cltd
add
insb
cmc
lahf
xchg
sbb
pop
push
int
out
sub
into
cmp
xlat
pop
fmull
xor
inc
test
adc
imul
stos
icebp
and
dec
cmp
imul
scas
nop
xchg
xchg
jg
dec
adc
bound
pusha
push
inc
add
out
lods
mov
xchg
cmp
dec
mov
push
xlat
jbe
mov
mov
out
sbb
and
mov
shl
mov
mov
dec
cmp
jle
bnd
cltd
sbb
nop
jmp
mov
stos
lock
lock
xlat
pop
mov
imul
aam
stos
mov
aas
xchg
mov
aad
sbb
test
incb
pop
adc
mov
xchg
hlt
xchg
pushf
insl
in
xchg
pop
jo
push
jecxz
sub
or
roll
jge
arpl
adc
mov
pop
jmp
mov
cltd
pop
or
cmpsb
sub
or
bound
sub
mov
lretw
lahf
stos
aaa
stos
xchg
lock
dec
mov
mov
pop
xlat
mov
push
cmp
sti
sbb
fisubrs
dec
test
cmc
lahf
ret
jp
inc
sbb
int3
in
jle
cmc
cmp
xchg
jmp
and
mov
loope
fs
fsubs
je
mov
mov
mov
xor
cli
mov
daa
out
imul
ja
push
arpl
and
jbe
icebp
adc
jecxz,pt
mov
cmpsb
push
loop
sub
lods
orb
cmp
jbe
dec
sbb
aam
push
push
jge
xlat
jo
loope
cmp
push
xchg
subb
pop
and
icebp
and
sub
negb
push
cmp
icebp
adc
cmp
push
lret
and
repz
adc
push
pop
fistps
ret
les
mov
mov
pop
push
fistl
jge
loopne
and
jge
mov
cmp
lds
iret
ljmp
jo
lea
lcall
push
add
mov
and
pop
ret
hlt
jmp
dec
pop
addr16
adc
rcrb
adc
lods
movsl
mov
mov
xchg
cs
mov
and
test
mov
cmp
lods
icebp
lods
xchg
fisubrs
dec
and
mov
ss
ret
mov
jns
xchg
lcall
ds
fcmovne
or
xchg
xor
xchg
mov
jns
pop
js
test
sti
dec
les
int
shlb
and
pusha
iret
imul
into
loop
test
sbb
xchg
mov
adc
lret
dec
lahf
fs
cmpsl
repz
xchg
in
and
mov
enter
jmp
jb
jb
pop
js
sbb
imul
loop
add
mov
mov
adc
lea
mov
into
mov
mov
loop
xchg
mov
sbb
mov
repnz
mov
xchg
ret
dec
sbb
inc
mov
enter
mov
sbb
push
lock
mov
mov
pop
pop
ficomps
mov
push
test
fsubrs
and
mov
inc
inc
cmp
jle
cltd
add
test
pop
mov
shlb
sub
outsb
jae
add
incb
add
or
jle
insl
popa
aas
jl
cmpsb
lods
mov
push
or
mov
ja
add
mov
hlt
or
repz
inc
mov
push
mov
or
arpl
add
jb
lods
cmpsb
push
jmp
out
jg
xchg
repnz
dec
repz
fsts
pop
mov
xchg
fiadds
dec
ret
popf
lret
in
lea
pop
icebp
mov
or
jno
inc
cmp
jnp
shlb
repnz
pop
sti
cmp
leave
test
cmp
dec
dec
inc
cld
pop
jl
pop
or
pusha
push
pop
cmp
jle
pushf
sbb
and
mov
mov
dec
push
ljmp
push
pushf
dec
out
lret
inc
andl
in
ds
fsubr
nop
andb
rclb
sbb
jmp
jae
loope
idivb
shll
sbbb
cmp
sub
lret
jo
sbb
mov
mov
rcrl
adcl
xlat
push
sti
push
scas
lret
nop
fnstenv
fwait
xchg
add
jne
sahf
out
mov
cmpsl
popf
and
lahf
test
stos
sub
mov
adc
ret
aad
dec
or
rorb
mov
sbb
mov
cmpl
shlb
ljmp
jnp
ja
xchg
pusha
mov
add
cmc
inc
ret
repz
pop
test
dec
dec
int
mov
add
xor
dec
xor
das
mov
imul
push
in
mov
adc
std
out
add
clc
faddl
pop
cld
mov
pop
scas
jmp
jo
adcl
xchg
dec
jb
dec
mov
push
sarl
aas
add
lret
fadds
outsl
and
movsl
loop
sarl
test
out
mov
ljmp
jg
imul
enter
sbb
push
push
fwait
cmovnp
inc
dec
int3
mov
fs
adc
subl
mov
push
test
xor
cmp
test
push
aas
xchg
iret
and
hlt
mov
and
pop
mov
xchg
jno
pop
lods
addr16
fs
stos
loop
cli
scas
insl
ss
fmull
cwtl
and
xor
jnp
push
lods
mov
push
insb
jnp
dec
push
jecxz
fsubl
icebp
jns
jne
mov
and
sub
cwtl
dec
ror
push
jnp
aas
fsts
shll
or
jbe
dec
imul
mov
sub
roll
cmp
jno
sti
push
ljmp
xchg
repz
notl
xor
mov
inc
stos
cmpsl
aad
pop
fwait
rcrl
testb
push
sbb
iret
repnz
jecxz
jns
jns
pop
pop
addr16
pop
cmpl
mov
scas
cli
pop
adc
pusha
out
pop
iret
push
repnz
les
sahf
pop
jne
push
stc
or
push
popf
in
lret
mov
fcmovu
lahf
aas
fcmovnbe
lret
pop
push
inc
mov
fmulp
or
xor
mov
out
push
arpl
dec
cmp
cmp
sbb
popa
mov
in
cmpb
and
je
lods
cmpsl
ds
daa
mov
mov
in
mov
fmuls
vandnps
adc
pop
xlat
adc
inc
test
dec
jmp
push
popf
xor
sub
inc
inc
sbb
push
xchg
movsl
cmpsb
or
test
rcll
out
jno
stos
xadd
dec
shlb
ljmp
sub
jge
cld
adc
sub
or
aas
cs
test
stos
sbb
cmp
sbb
lcall
cmpsl
fstl
xchg
scas
sbb
jecxz
js
dec
pop
add
inc
divb
xchg
daa
in
js
into
jecxz
pop
addl
mov
jle
jge
fs
loop
fwait
shrb
mov
sar
in
mov
xchg
ljmp
cld
rorb
pop
jge
sbb
push
adc
pop
pop
lcall
cwtl
xlat
lods
not
mov
xchg
and
div
in
inc
dec
mov
iret
andl
jbe
clc
xchg
jns
clc
xor
add
dec
add
in
sub
jg
fsubrs
cmp
mov
push
sti
cmp
fnstenv
and
sbb
cmpsb
pop
inc
xchg
mov
cmpxchg
cmp
stc
adc
or
jb
fldl
test
rorb
lea
mov
adc
outsb
in
aad
icebp
mov
aas
shrb
and
fwait
insb
loop
adc
pop
dec
int3
int
push
sbb
out
fs
lret
adc
jmp
out
xchg
cmp
inc
cmp
test
outsl
mov
cli
sti
jmp
mov
ret
fidivs
dec
mov
loope
movsb
mov
addr16
or
mov
addr16
sub
in
popa
push
xor
sub
pushf
and
movsl
sbb
sub
fs
cs
clc
jle
aas
push
hlt
add
and
or
fsts
sbb
out
cwtl
jge
icebp
fwait
mov
lret
outsl
lahf
mov
adc
fidivrl
lret
iret
xor
mov
xor
sub
add
mov
js
mov
insl
dec
je
scas
dec
nop
stos
ja
jg
into
or
mov
inc
ds
inc
inc
xchg
and
jo
mov
cmp
adc
fsubrs
dec
jbe
je
lock
xor
lret
add
inc
jp
sbb
ljmp
and
subb
jo
or
fstp
mov
dec
les
ret
outsl
ja
je
ret
xchg
push
push
pop
jle
sub
test
mov
adc
xor
inc
fcoms
pop
jo
mov
cwtl
xchg
push
scas
mov
mov
mov
les
in
jmp
and
push
roll
aas
in
mov
lods
pop
adc
out
push
and
out
push
insl
sti
mov
aam
loop
mov
cwtl
int3
negb
loop
icebp
sub
or
lret
pop
mov
mov
adc
sub
hlt
pop
lods
sbb
mov
mov
arpl
inc
fbstp
mov
inc
je
cmpsl
push
sub
dec
nop
cltd
fmul
stc
inc
cmpsl
xchg
and
mov
std
xorl
add
int3
leave
fsubr
lock
shl
into
push
inc
lcall
dec
and
pop
push
cmp
nop
ss
push
sub
hlt
xchg
icebp
icebp
fpatan
xor
xor
inc
aas
sbb
or
psadbw
jge
xor
add
int
fdiv
jo
push
cmp
dec
push
test
xchg
mov
mul
fld1
std
lock
into
sbb
xchg
inc
sbb
xorb
push
xchg
aaa
adc
cmp
lea
imul
notb
cmpsl
movsl
in
call
sbb
xchg
jg
mov
je
mov
pop
fs
sbb
aad
shlb
cmc
test
inc
dec
loope
add
sahf
xor
ds
adc
das
lea
add
xor
inc
xchg
sti
sbb
stc
jl
shll
xor
pop
aas
push
push
jbe
test
sbb
push
stos
fdiv
cli
mov
daa
push
sub
idiv
ds
insl
adc
mov
gs
call
in
push
lds
mov
rcll
add
jle
inc
rcrb
out
sub
pop
and
cmc
mov
sub
sti
add
mov
mov
stc
mov
and
dec
dec
mov
lods
loop
ret
das
xchg
movsl
and
pop
xor
mov
movsb
loopne
inc
sbb
pop
mov
xlat
in
imul
mov
pop
xchg
adc
and
clc
jne
nop
sbb
pusha
outsl
movsl
aam
cmp
xchg
push
les
popf
imul
data16
fbstp
xor
mov
ss
push
mov
in
push
push
addr16
in
pop
fbld
add
xchg
xor
mul
pop
cmp
repnz
bnd
adc
sub
or
inc
jmp
xor
jno
adc
push
pop
push
inc
sarl
fisubl
sub
ss
xchg
add
push
mov
and
jb
jp
pusha
or
mov
rcll
fidivs
mov
mov
cmpl
push
cwtl
ficompl
ja
pop
xor
adc
icebp
cli
jg
mov
in
mov
dec
push
push
test
adc
leave
aad
cli
adc
pop
call
sbb
xor
inc
stc
mov
or
xchg
mov
test
mov
sub
test
nop
out
and
inc
cmp
mov
stos
adcl
movsl
dec
pop
xor
adc
in
jge
roll
mov
push
repnz
adc
gs
mov
inc
fdivrl
movsb
xchg
test
xor
aas
pop
push
cli
out
push
xchg
insb
in
in
add
je
xchg
aam
daa
scas
les
mov
sub
or
sar
daa
in
pop
push
xor
mov
call
sub
cmp
in
sbb
xchg
xorl
xor
cmp
cli
sub
mov
mov
mov
fnstsw
sti
out
in
les
mov
jmp
popa
xchg
xor
stos
cmpsb
out
mov
outsl
test
sub
xchg
dec
pop
sub
insl
xor
jmp
push
ficomps
xchg
sbb
dec
mov
mov
mov
mov
test
mov
das
pop
out
outsb
aam
pop
adc
scas
sub
inc
dec
into
and
imul
shlb
sbb
outsl
das
add
pop
mov
add
push
mov
xor
addr16
je
addb
mov
push
cmp
inc
xor
sub
mov
xor
adc
negl
mov
inc
and
loopne
popa
mov
dec
gs
int3
lcall
sub
sub
insl
dec
repz
mov
push
cli
or
out
stos
cmp
pushf
cltd
icebp
mov
ljmp
and
popf
xchg
test
xchg
pusha
adc
jae
lar
addr16
sbbl
xchg
sbb
sbb
push
inc
mov
and
pusha
leave
movsl
mov
mov
xor
into
or
adc
addl
lock
and
lahf
or
sar
stos
in
in
daa
mov
dec
add
in
mov
jp,pt
mov
and
and
dec
sti
std
out
stos
leave
loop
insl
in
jp
pop
ss
adc
lea
lods
fisubrl
mull
dec
inc
xchg
pop
ret
cwtl
fnstenv
out
push
push
push
inc
dec
scas
in
push
out
icebp
popf
jns
into
mov
add
addr16
cltd
add
inc
cld
mov
stos
movsl
cmp
cmpsl
adc
or
mov
shlb
dec
or
mov
push
cmpb
jmp
daa
add
rcrl
sub
sbb
je
mov
outsb
xchg
push
in
sbb
mov
scas
popf
repnz
and
std
jne
roll
xor
lods
cmp
movsl
jo
inc
loope
mov
mov
fwait
push
xchg
scas
push
hlt
mov
inc
mov
xchg
adc
fidivs
dec
mov
sub
push
stos
mov
sbb
xchg
xlat
outsb
add
sub
xor
mov
jmp
addr16
pop
add
shlb
sbb
mov
dec
mov
or
jnp
mov
in
rorl
xchg
cld
or
pop
add
jno
out
pusha
cli
mov
in
dec
sahf
jno
mov
mov
or
jmp
push
in
in
fcoml
lret
imull
ret
lret
sub
shll
adc
test
lods
xchg
ds
sub
jb
outsb
push
adc
shlb
dec
in
xchg
daa
or
das
cmp
mov
mov
and
sub
sarb
lock
fwait
loop
inc
fprem1
lods
jae
data16
rolb
xor
or
mov
es
pusha
repnz
pop
mov
inc
push
pop
inc
mov
inc
or
adc
inc
sbb
mov
jg
xchg
shll
das
idivb
dec
dec
cmp
push
inc
ret
add
mov
mov
mov
je
push
jns
and
mov
xorb
mov
fwait
outsl
out
cltd
lods
push
mov
fisubl
push
inc
xor
lods
neg
mov
cltd
adcb
dec
dec
addr16
arpl
sbb
xchg
movsb
insl
mov
lea
sub
fmuls
or
or
xor
lcall
test
test
jl
mov
fwait
cld
popa
pop
and
dec
out
fcmovnb
bound
xchg
sub
adc
mov
sbb
pop
mov
in
ficoms
lea
and
xchg
inc
sub
shll
daa
insl
sub
std
xchg
adc
aaa
xchg
sbb
daa
mov
dec
push
inc
movsb
imul
movsl
sub
mov
jg
mov
lds
mov
mov
push
in
movsl
stc
push
test
jnp
testb
mov
jno
mov
clc
push
divl
cmpsl
xchg
imulb
outsb
movsl
rep
jae
cld
sub
and
leave
ret
scas
pushf
notb
cmpsl
loop
inc
mov
mov
add
roll
adc
test
dec
mov
pop
jns
repnz
repnz
dec
push
pop
test
add
push
out
pop
mov
in
dec
hlt
in
sub
movsl
pop
xor
jae
dec
add
pusha
into
cmp
mov
sahf
aaa
fisubl
add
stos
mov
je
jmp
cld
js
xorl
leave
adc
jns
inc
rcrb
icebp
sahf
pop
jmp
cwtl
cmp
jmp
lahf
scas
mov
cmpl
daa
add
xchg
pop
push
es
aad
sbb
mov
movsl
xor
cwtl
sti
lods
decl
push
in
inc
sbb
sbb
mov
push
mov
int
int
adc
testl
daa
cmp
pushl
shr
inc
rcrb
in
pop
aam
cmp
clc
ja
movsb
inc
nop
int3
pop
jmp
sub
rcll
out
xchg
cltd
shrl
popf
insb
adc
out
cltd
mov
sub
cli
mov
cmp
inc
mov
orl
call
jge
sbb
fbstp
add
lea
dec
lcall
mov
mov
ret
rorl
sbb
sbb
mov
loopne
cmp
pop
sub
bound
movsb
sbb
hlt
hlt
cmc
fmuls
jle
pop
cmovae
sub
mov
pop
jp
fstl
notb
xchg
and
pop
cmp
out
scas
in
dec
push
adc
cwtl
push
mov
xchg
ret
sbb
dec
jmp
inc
mov
or
lcall
jbe
mov
xor
jb
mov
inc
loope
and
adc
push
or
icebp
icebp
mov
stc
jmp
mov
iret
mov
loop
mov
cld
les
and
in
enter
ret
xor
sbb
or
cmp
stos
and
push
sbb
push
push
and
push
in
lods
mov
xchg
mov
ds
pop
push
push
aaa
add
sti
mov
test
xor
frstor
pop
leave
fiadds
sub
inc
lods
repnz
xchg
add
jns
push
push
xor
aas
jmp
xchg
mov
xlat
xor
or
loopne
sti
dec
cli
lret
push
pop
inc
sahf
clc
inc
push
imul
cld
sti
jae
mov
mov
inc
loope
jmp
cmp
mov
icebp
xchg
mov
sub
and
inc
aas
cmp
sti
inc
cmp
dec
pop
mov
in
adc
xchg
and
xchg
mov
jb
lods
dec
cmp
dec
sub
cld
cmpsb
or
cmp
dec
mov
pushf
jne
aam
ret
xor
and
xlat
or
dec
push
pop
out
insl
pop
xchg
test
dec
cmp
imul
inc
out
cltd
pop
test
lock
jnp
cmp
sub
pusha
push
pushf
jb
xchg
mov
fisubrs
fisubrl
mov
jae
sub
insl
cwtl
ret
int3
fisubs
cs
outsb
push
mov
xor
in
mov
add
jnp
lahf
loopne
push
push
repnz
loop
jae
pop
lock
pusha
xchg
xchg
lahf
adc
jo
pop
sub
out
ret
rcrb
dec
adc
add
pshufw
sbbb
add
movsb
into
test
and
movsb
and
loopne
xor
pop
int3
fwait
in
in
int
out
inc
cmp
jg
and
xor
and
pop
mov
cmpsl
out
mov
dec
xchg
dec
xchg
fdivrs
ret
mov
fldcw
mov
mov
loopne
xchg
addb
test
jg
enter
dec
fsubs
test
aad
movsb
sub
shll
xor
adc
pop
mov
jmp
nop
ljmp
sbb
repnz
push
sahf
push
das
out
lcall
iret
in
testb
lock
insl
mov
clc
or
mov
cli
out
test
ret
push
popf
in
cli
cmp
pop
imul
jb
int3
mov
neg
stc
roll
adc
xchg
loope
in
jnp
push
out
and
adc
jb
xor
add
inc
lea
mov
stc
fisttps
add
hlt
add
rcrl
lret
mov
or
xor
pushf
ss
sub
add
imull
adc
sub
add
jns
rcll
repnz
and
cli
shrb
xchg
inc
xchg
into
jp
mov
mov
dec
repz
cmpsb
jecxz
jg
out
xorb
idivb
or
in
out
pop
in
and
pop
lock
mov
push
xchg
lea
dec
mov
or
dec
xchg
and
mov
jae
mov
cmp
ffree
cmp
insl
xchg
or
xchg
adc
popf
add
push
lds
je
mov
cmc
jbe
leave
iret
adc
lods
sbb
mov
mov
or
sbb
mov
mov
jb
adc
scas
shll
inc
ret
pop
mov
aas
loopne
out
pop
pop
jb
gs
and
mov
mov
mov
xlat
pop
icebp
mov
push
repnz
lret
lods
and
stos
sub
mov
nopl
or
jle
pop
lods
lcall
jmp
gs
enter
or
popa
fcoms
divl
or
mov
pop
dec
je
cmp
out
pop
push
and
dec
movsl
cmp
mov
bswap
inc
notl
jns
fimuls
in
popf
lods
rolb
cmpl
adc
fwait
xchg
mov
sub
xchg
or
inc
xchg
push
les
mov
fcompl
jg
sub
or
mov
repnz
mov
lock
hlt
sbb
aaa
pop
sub
mov
push
outsb
dec
loopne
sub
xlat
xchg
into
jne
fdiv
pop
punpckhdq
int
je
pop
sub
sub
jmp
scas
dec
and
mov
hlt
lahf
clc
dec
mov
loopne
or
mov
and
jo
mov
jl
pop
ret
push
jl
addr16
xor
ret
loopne
jb
lds
pushf
dec
sbb
and
cmp
adc
dec
pop
mov
sbb
imul
fsub
jns
nop
mov
and
push
repz
cmp
jnp
sbb
ret
pop
dec
or
leave
xor
xchg
js
pop
test
dec
jmp
xor
dec
rcrb
imul
popf
push
shll
dec
ret
push
pop
add
jp
lcall
sub
jb
out
in
mov
jae
sbb
mov
adc
mov
mov
sbb
adc
lds
add
stos
scas
mov
daa
inc
movsl
sbb
cltd
sub
jg
lret
jb
xor
pop
mov
and
inc
cwtl
scas
mov
int3
fdivrl
cmc
mov
mov
sub
sbb
imul
sub
outsl
add
xlat
aam
call
mov
and
insb
sub
sahf
sub
jmp
ja
mov
sbb
xor
lods
outsl
jge
pop
leave
sarb
repz
test
xlat
xor
dec
iret
repz
mov
mov
mov
pop
je
iret
jne
or
test
mov
aam
cmpsl
int3
jae
aad
sub
adc
fildll
insb
cvtdq2ps
data16
inc
mov
pop
dec
fnstenv
push
in
adc
lret
das
adc
sub
popf
das
es
in
lahf
add
inc
push
push
push
push
sbb
or
inc
adc
idivb
lret
or
mov
sub
and
fmuls
mov
iret
mov
push
pushw
mov
or
scas
push
loop
ret
sbbb
clc
push
mov
in
push
add
loope
shr
nop
cmp
mov
push
into
jge
adc
aaa
scas
adc
std
clc
cmpsl
repz
xchg
pop
in
gs
xor
xchg
fwait
mov
or
xchg
xchg
fs
fmull
stos
add
xor
mov
cmp
sahf
insl
imull
jge
mov
lret
inc
inc
lahf
repnz
ljmp
cs
mov
and
gs
xor
xor
inc
cmp
xchg
jno
push
fcomps
mov
jae
push
xchg
mov
insb
inc
insb
xlat
inc
push
pop
js
mov
sub
pop
dec
push
lods
mov
push
nop
inc
sub
jne
test
xchg
mov
jns
sti
adc
sahf
jge
dec
jle
sbb
cmp
jo
add
xchg
je
pop
out
aas
pop
mov
je
in
pop
loop
je
adc
xlat
ja
dec
imul
pop
push
cmpsb
add
and
or
daa
dec
das
xchg
jmp
jae
xchg
xchg
push
push
pop
add
mov
mov
enter
clc
pop
pop
sarb
inc
popf
mov
xchg
adc
mov
iret
imul
cs
fistpl
loope
xchg
mov
mov
or
out
push
xor
xchg
mov
pop
dec
and
or
dec
dec
cli
push
and
fs
outsb
cltd
ljmp
mov
sahf
sbb
test
in
std
arpl
sahf
icebp
lods
lret
loope
mov
nop
jb
mov
lret
imul
pushf
pushf
mov
and
push
cmpsl
mov
adc
ret
adc
mov
mov
xchg
out
hlt
xchg
rorb
in
gs
lods
daa
incl
movsb
mov
enter
xor
les
ret
pop
or
sub
aaa
sbb
inc
xchg
cmp
sbb
movsb
les
jae
mov
int3
stos
push
inc
imul
add
jl
xchg
orb
cld
xor
xchg
sub
pop
mov
fs
outsl
sub
inc
xlat
dec
sbb
xor
push
cmp
jg
xchg
cwtl
in
lea
pushf
sbbb
jge
test
mov
lods
repnz
cmc
repz
add
pop
js
shlb
fisttpl
adc
and
xchg
fwait
jo
in
jp
jg
xchg
lret
pop
jb
xor
mov
inc
xchg
push
dec
into
push
arpl
xchg
mov
cmp
sahf
mov
jbe
xchg
mov
dec
inc
or
iret
cld
dec
cmp
add
repz
jle
ds
rcrb
xchg
sub
mov
pop
sub
movsl
adcl
sub
fwait
mov
pop
inc
pop
cmp
xchg
testl
dec
mov
xor
add
inc
loope
mov
gs
adc
shll
lret
push
mov
lods
addr16
js
mov
scas
mov
pusha
push
imul
outsl
push
jno
adc
push
orb
adc
and
and
mov
pop
xchg
jnp
push
pop
gs
xor
push
outsb
arpl
jnp
sbb
bswap
rcll
loop
xchg
lret
loope
repz
rcrl
nop
cwtl
outsl
dec
pushf
int3
mov
adc
inc
sbb
inc
scas
out
insb
insb
pop
test
repnz
and
test
insl
jge
cmpb
add
mov
add
push
ret
add
xor
lods
sti
int
mov
cld
jmp
in
lds
addr16
popf
mov
mov
stos
ja
js
mov
mov
in
ds
lods
jnp
je
inc
push
jbe
js
clc
pop
add
aaa
xchg
push
xchg
xchg
outsb
in
mov
notl
loop
scas
frstor
adc
test
ficompl
repz
xchg
test
std
daa
pop
cmpsl
cld
inc
aad
movsb
sbb
lahf
sub
test
js
push
mulb
daa
jns
and
sbb
adc
aaa
out
mov
jb
push
lcall
mov
psubw
xor
cmpsb
je
mov
shll
outsb
in
fldenv
push
push
mov
fcoml
mov
ret
leave
mov
int3
lods
out
in
icebp
loope
fidivs
dec
dec
mov
sbb
sar
mov
pop
int3
mov
nop
mov
xchg
imul
test
cmc
push
int3
or
punpckhwd
outsb
mov
xor
das
xor
and
rep
daa
push
add
add
daa
dec
gs
pop
aaa
push
popf
cmp
orb
mov
gs
add
pop
nop
in
int
pop
lds
mov
mov
sub
aaa
xchg
test
in
cmp
pop
into
imul
sarl
outsl
add
filds
pushf
mov
stos
loope
ficompl
call
or
dec
jb
pusha
imul
mov
aas
and
rorl
pusha
inc
xchg
nop
xchg
jge
add
fldl
xor
xor
lods
dec
xlat
pop
inc
mov
push
test
clc
fcoms
aas
lcall
mov
out
mulb
mov
sahf
ss
icebp
cli
loopne
mov
cwtl
mov
xor
inc
inc
arpl
sub
lret
jmp
mov
push
cmp
int3
cli
and
data16
mov
ss
sbb
fwait
jbe
popa
jmp
adcl
push
movsl
jge
add
push
xchg
test
repz
daa
out
and
mov
mov
push
popf
aad
and
jecxz
mov
shlb
fstl
adc
cli
mull
pop
mov
add
mov
test
shll
xor
imul
mov
dec
add
pushf
inc
mov
adc
cmp
mov
cmp
adc
sub
dec
andb
and
in
mov
mov
pop
test
movsl
sbb
fs
insb
cwtl
daa
lods
mov
dec
repnz
mov
mov
push
icebp
xchg
aad
cwtl
test
dec
push
aad
xlat
pop
cwtl
mov
daa
xlat
repnz
adc
add
in
lcall
mov
inc
add
pushf
adc
xchg
mov
xchg
push
aas
adc
les
mov
loope,pn
mov
pop
in
lods
std
mov
icebp
inc
and
and
test
jle
ja
mov
inc
jns
sbb
test
data16
inc
lcall
push
jmp
rcll
leave
sub
cmp
cmc
xor
aaa
int3
call
adc
pop
in
xchg
pop
cmp
inc
popf
lret
fxch
inc
aam
xchg
jmp
adc
cmp
pop
mov
and
aaa
repnz
cltd
jo
loope
lods
call
mov
scas
movsl
adc
push
push
outsb
mov
xchg
mov
and
sub
repz
loope
and
push
out
add
mov
add
lock
or
fwait
out
ss
call
push
in
out
pop
out
or
sarl
add
add
mov
mov
jnp
ljmp
cmpsl
sbb
and
push
aad
and
jbe
ss
pop
pop
or
push
in
mov
mov
pop
and
scas
xor
sub
pushf
push
pop
daa
xchg
or
out
push
in
sub
pop
cltd
mov
iret
xchg
fsubrs
stos
ja
dec
ds
fnstenv
fsubl
inc
mov
stc
pop
sub
add
lcall
mov
add
dec
mov
mov
pushf
inc
ffreep
dec
xchg
inc
cmpsl
jnp
test
mov
imul
lds
movsb
icebp
jns
clc
jl
out
mov
xor
pop
addr16
mov
xchg
mov
mov
push
or
xchg
test
test
xchg
in
pop
enter
add
es
dec
and
test
add
es
fs
mov
pop
adc
out
lds
or
push
call
mov
lret
or
inc
shll
pop
or
or
mov
push
jmp
or
mov
jmp
jge
imul
push
sbb
call
dec
xchg
mov
add
and
scas
movsb
fbld
cmc
test
dec
loope
pop
xor
mov
push
and
mov
push
sub
mov
or
and
fbstp
cli
mov
inc
dec
mov
or
cmp
jmp
jg
fs
lahf
test
mov
aad
mov
in
add
jno
push
pop
scas
dec
rorl
ja
leave
xchg
je
mov
inc
pop
inc
fsubl
sbb
gs
sub
inc
das
jne
popa
pushf
or
mov
xchg
adc
xchg
xlat
les
mov
gs
sbb
sub
scas
lcall
arpl
mov
or
inc
pop
and
stos
lret
xor
or
inc
dec
xor
xor
jbe
pop
stos
and
cwtl
xor
ss
cli
in
ljmp
rcll
sbb
xor
push
sub
push
fldenv
adc
and
push
scas
aaa
dec
icebp
dec
sbb
lcall
clc
or
into
mov
xor
call
mov
lahf
std
ficomps
lret
mov
aam
andl
fldt
jne
xor
sti
adc
bound
sub
test
icebp
repnz
int
push
fbld
ja
push
dec
in
jmp
sub
repz
ret
out
inc
sbb
mov
add
or
lret
adc
fsts
jp
xor
xchg
cmp
dec
mov
fimuls
in
fbstp
jmp
imul
jb
xchg
cltd
xchg
sbb
mov
mov
xchg
sti
push
rcr
cmc
pop
call
cmp
in
loope
shrl
test
or
shlb
push
mov
push
lods
xor
xor
in
mov
cltd
imul
adc
push
les
inc
scas
int
xchg
mov
sbb
adcl
stc
stos
push
sahf
jle
loopne
and
lock
movsb
jle
lret
sub
xchg
dec
mov
bound
push
pop
jg
cmpsl
out
sub
mov
mov
and
fcoml
and
in
jnp
mov
cmc
mov
add
cltd
pop
dec
stos
mov
dec
mov
in
inc
or
lret
popf
add
into
inc
lods
insl
sbb
pinsrw
xchg
cmc
loop
ret
lock
jne
add
fs
xchg
insl
fsub
notb
push
inc
dec
xor
add
push
mov
mov
adc
add
and
pop
jp
jbe
mov
leave
lods
and
pusha
xor
addb
push
inc
or
lods
pop
sub
inc
out
decl
mov
mov
dec
jae
test
xor
inc
jno
jae
jmp
hlt
das
fsubs
xchg
jp
inc
or
imul
out
jge
icebp
mov
pop
mov
lods
ss
sti
fdivs
or
sbb
adc
test
jmp
sub
cmp
dec
pop
sbb
mov
pop
push
or
stos
pop
insb
hlt
outsl
rolb
xchg
cld
mov
xchg
pop
sbb
outsb
lret
xchg
ss
dec
adc
mov
in
mov
dec
nop
push
in
stos
jl
sub
push
popf
pop
xlat
mov
ljmp
jae
popf
adc
or
xor
into
jecxz
mov
scas
psraw
aam
fistps
arpl
gs
or
pop
jecxz
rorl
and
test
out
in
pop
addr16
jge
les
mov
aaa
mov
pop
fdivrs
push
push
push
mov
cmpl
scas
inc
jmp
jecxz
mov
pop
fldenv
adcb
mov
loop
int3
cmpsl
adc
jno
mov
jb
fcoml
out
pushf
jmp
cs
test
mov
outsl
fisttpll
xchg
add
mov
sbb
lret
lods
dec
fwait
push
or
ret
pop
pop
cmc
nop
mov
mov
xchg
scas
mov
and
ds
call
pusha
es
imul
fbstp
dec
add
add
inc
mul
cwtl
cld
inc
xor
es
orb
xlat
test
or
scas
mov
mov
and
dec
out
push
test
js
sub
lea
mov
mov
pop
mov
push
in
shll
jnp
je
mov
sub
imul
jne
jl
shr
mov
mov
ror
dec
out
mov
mov
mov
and
sub
pop
mov
pop
lcall
xchg
pop
data16
daa
inc
pusha
mov
xchg
add
and
cmc
jl
pop
push
adc
mov
xor
push
js
out
pop
outsl
xchg
loopne
fwait
popa
rcr
pop
psrlw
jp
fldt
jae
mov
cmc
es
cmpsl
inc
jno
decl
sbb
lcall
pop
push
mov
leave
xor
sbb
daa
jle
clc
add
sbb
jae
cli
or
test
cli
sub
pop
aam
subb
insl
or
dec
in
jno
pop
in
dec
push
dec
js
inc
jno
js
movsl
jb
out
fnstsw
mov
icebp
dec
mov
mov
mov
pushw
es
xor
mov
sbb
and
fistl
pushf
je
sub
sub
fdivrl
xchg
dec
xor
xchg
cmpb
loop
je
icebp
ds
push
fsts
fidivl
stos
std
out
aam
xor
or
pop
fwait
cld
int
cs
inc
cmp
sub
adc
in
push
add
sbb
push
inc
lods
gs
jo
sahf
insl
bound
aaa
xor
jbe
sbb
aaa
ljmp
std
xor
xor
lds
push
insl
push
mov
add
xor
in
mov
inc
or
aam
mov
negb
and
cmp
call
add
aaa
jo
xor
mov
pop
mov
dec
mov
mov
in
int3
push
ljmp
pop
arpl
mov
mov
insb
add
or
scas
insb
jp
sbb
xchg
nop
mov
fiadds
adc
stc
insb
xor
mov
mov
or
or
cmp
mov
push
lds
in
dec
sti
mov
arpl
sub
xchg
sub
pop
jns
inc
fwait
stc
int
ja
ficoml
adc
adc
in
or
mov
dec
data16
adc
test
dec
adc
mov
rorb
es
lods
addb
cmp
push
repz
inc
push
sahf
cli
ficompl
loopne
add
or
shll
in
int
hlt
imulb
mov
sbb
cli
add
push
pop
je
loop
sub
dec
jge
stos
push
pop
sarl
mov
cmc
or
push
sub
cmp
pop
adc
test
andl
inc
add
cs
inc
add
mov
push
add
jae
adc
sahf
inc
sbb
push
test
xor
imul
cli
nop
ja
mov
int
arpl
es
rcl
mov
push
add
xor
mov
gs
gs
jecxz
lods
sub
lods
mov
sbb
or
push
sarb
mov
cmp
and
inc
fs
inc
or
jp
mov
inc
aad
insl
xlat
sub
inc
xchg
pop
sti
ret
pop
pop
mov
xchg
dec
push
pop
and
inc
or
adc
shll
pop
pop
pop
fistpl
push
cld
test
add
mov
ret
mov
mov
in
test
jne
inc
and
xor
xlat
fstps
adc
and
push
fdivr
and
hlt
outsb
jmp
imul
inc
add
js
cli
sub
jnp
shl
fmull
adc
push
outsl
pop
scas
or
aam
mov
cmp
adc
pop
xorb
mov
enter
add
push
flds
icebp
repz
add
push
push
mov
inc
dec
cmpsl
sub
xchg
neg
xlat
stc
clc
mov
sbb
in
sub
mov
xchg
imull
stos
pop
cld
repz
fildl
test
jl
stos
jg
cmp
fsub
fsubp
rcrl
out
cmp
or
rorb
leave
or
sub
or
inc
fwait
dec
js
xlat
xchg
xchg
jno
inc
jno
scas
xchg
sahf
fidivl
add
xor
fsts
arpl
inc
push
and
stc
add
mov
inc
pop
inc
lds
xor
sub
dec
sub
jae
lret
dec
lcall
shlb
mov
repnz
loopne
add
cli
in
cld
xchg
sub
fbstp
loope
jae
dec
push
inc
mov
jne
push
adc
adc
cmp
sub
movsl
divl
ficoms
mov
inc
shlb
cld
or
mov
xor
repnz
test
lcall
mov
lret
fdivp
xor
dec
xor
jl
repnz
ljmp
mov
jo
stos
mov
into
mov
dec
mov
adc
sub
inc
test
lahf
jae
fisubs
jbe
jae
mov
dec
jl
push
loopne
popf
inc
adc
out
ret
popf
test
mov
cwtl
mov
sub
pop
mov
xchg
xor
in
cmp
push
xchg
adcl
jl
adc
push
movsl
sub
stos
xorb
cs
sbb
add
mov
xchg
sbb
dec
cmp
jns
xor
mov
dec
adcl
mull
out
sbb
jp
les
push
orb
inc
movsl
mov
popf
push
jmp
xor
push
xchg
vshufpd
and
xchg
in
or
xor
ss
adc
ss
in
popf
leave
push
xor
rorb
sbb
push
gs
pop
jae
jmp
out
sub
xchg
pop
subb
mov
imul
mov
insl
shrl
insb
sbb
movsl
mov
cbtw
pop
fs
mov
push
js
fsts
mov
sbb
jle
fwait
mov
push
in
dec
inc
lds
push
jecxz
insb
adc
decl
int
popa
mov
jl
mov
mov
into
dec
cmp
mov
fdivrl
aam
movsl
sti
sbb
jnp
cs
mov
rolb
sbb
outsl
ret
cli
dec
cmpsb
dec
lahf
cmp
in
pop
pop
mov
jae
and
and
hlt
push
dec
fisttps
add
jne
adc
mov
aas
mov
enter
aam
gs
add
pusha
cmc
repz
aas
mov
notb
mov
inc
imul
in
fdiv
rcll
pop
adc
push
sub
loop
adc
test
or
xor
lret
pop
mov
adc
dec
xor
repz
aad
ja
sahf
ds
adc
sti
sub
mov
cld
sahf
add
in
sub
out
mov
sub
fptan
cmp
mov
mov
repz
dec
and
pushf
aad
jo
xchg
mov
adc
mov
jle
test
or
mov
pop
rolb
punpckhwd
and
sub
sbb
xor
mov
and
mov
push
mov
mov
sbb
push
and
dec
rcr
mov
mov
arpl
cwtl
dec
cmp
imul
shrl
pop
dec
stos
dec
push
jecxz
adc
jmp
call
loope
mov
pop
cmp
dec
dec
sbb
fcoml
aam
push
pop
ret
inc
jecxz
lods
push
scas
popf
mov
pop
movsb
clc
outsb
std
imul
xor
insb
or
in
and
cli
jb
shrl
int3
sub
mov
pop
fcomp
push
enter
das
fsubp
mov
sbb
out
add
sar
je
add
mov
mov
mov
nop
pop
sti
cmp
jmp
cmp
lret
jge
lods
in
dec
xor
leave
pushf
mov
xor
faddl
mov
push
mov
test
mov
xchg
je
and
push
insl
xchg
sub
or
and
into
pop
mov
inc
imul
cmp
jecxz
mov
nop
or
out
aas
nop
call
adc
jno
shr
pop
stc
adc
aam
pop
cwtl
adc
scas
mov
or
stc
dec
into
pushf
or
data16
cmp
mov
push
es
jge
cmp
xlat
ficoms
fdivrl
xor
cmp
testb
cmp
adcl
js
cltd
push
sbb
and
sub
and
jecxz
int3
decb
cld
pop
imul
xor
mov
mov
dec
xor
ret
sbb
adc
cltd
sub
push
push
inc
outsl
xor
lock
sub
or
push
stos
xlat
xchg
mov
loope
fucomi
insb
outsb
in
cmp
jne
mov
lods
aam
sub
and
adc
xchg
xchg
xor
mov
push
movsb
push
mov
mov
divb
in
out
adc
mov
outsb
jb
sbb
xor
xor
sbb
sbb
cmp
pop
je
and
stos
idivb
pop
or
lods
inc
sbb
mov
rcrb
fcomi
and
aaa
das
mov
jge
jb
inc
sbb
mov
aaa
lret
adc
in
add
fldt
jno
addr16
es
scas
dec
xchg
mov
sahf
jmp
jo
lock
push
adc
adc
fld
shrl
pop
clc
lds
jo
jb
jbe
push
mov
push
aam
aad
cmpsl
outsl
inc
ss
addr16
cmc
cmp
pop
andl
jmp
lahf
popa
roll
imul
loopne
add
jo
mov
popl
repz
jecxz
sub
cmpsb
push
mov
sub
loope
test
cltd
in
xchg
leave
pop
les
lock
popf
cmpb
xor
bound
jnp
les
ret
bound
lcall
mov
add
mov
nop
sub
int
mov
out
xor
jno
aam
add
jne
aaa
je
lahf
push
xchg
mov
push
aas
mov
movsl
or
ficoms
je
or
xor
sbb
lahf
xchg
daa
call
mov
call
lret
dec
daa
vmovdqa
mov
imul
aam
cld
push
outsl
dec
cmp
insb
fisttpll
sbb
mov
es
xor
pop
sbb
lock
add
in
inc
inc
mov
mov
insl
fdivrl
loop
cli
cmp
or
inc
xor
dec
lret
loop
cmp
and
jp
call
mov
xchg
xchg
inc
lods
or
fsubl
pop
jecxz
in
stc
cmpb
subb
sbb
fnsave
addr16
aaa
xchg
leave
aad
xchg
cmp
inc
or
es
push
test
cmp
xchg
fistl
ret
sahf
mov
fadd
push
pop
iret
mulb
pushf
cld
ret
ret
enter
in
cmp
fwait
aas
or
orb
sbb
jno
inc
push
into
in
fwait
mov
imul
aad
push
cltd
loop
ret
jno
mov
mov
xchg
mov
sahf
mov
mov
mov
jae
mov
std
mov
xchg
sub
xor
mov
sahf
jle
in
xchg
cli
push
mov
cmp
cld
adc
lds
push
pop
hlt
jbe
in
pop
push
ss
mov
add
fisttpll
fists
inc
fildl
in
or
add
js
pop
or
imul
sub
subl
sbb
adc
jmp
push
xlat
imul
xor
aas
int
add
call
or
pushf
imul
cli
test
mov
pop
adc
shr
adc
into
xor
push
js
in
pop
sub
push
add
dec
or
out
push
add
sub
or
and
daa
out
xor
test
js
mov
mov
rorb
incb
int3
fldt
fs
outsl
add
mov
aas
inc
sahf
mov
icebp
dec
jp
test
mov
icebp
outsl
adc
add
cmpsb
jge
or
mov
fisubl
lret
sbb
inc
pop
lds
es
ss
sbb
nop
sub
repnz
addl
cmp
cltd
call
pop
aaa
pop
inc
pusha
lret
cwtl
mov
lods
or
je
and
movsl
outsb
fwait
jb
les
ds
inc
mov
sub
mov
test
ja
pop
lret
dec
mov
cmpsl
push
mov
test
push
je
insl
cli
shll
bound
orl
push
push
or
lock
andb
adc
lcall
jmp
aas
div
out
push
jl
aad
jmp
cmp
push
mov
test
jne
jbe
hlt
mov
or
insl
sub
js
sub
hlt
into
into
mov
xchg
leave
movsl
hlt
add
daa
mov
test
lahf
das
les
cmc
jns
lods
lods
pop
xchg
and
sub
insb
pop
sub
sti
push
in
outsl
inc
movb
movsb
test
inc
adc
arpl
popa
jg
jg,pt
lcall
jp
insb
daa
mov
out
mov
test
scas
test
sbb
cmpsb
addl
xor
jnp
out
pop
lahf
idivb
out
sub
xor
adc
pop
add
into
jle
mov
push
dec
or
push
cmp
xchg
adc
leave
pop
stos
pop
mov
out
jl
mov
rcl
and
cmpl
xor
xor
movsl
mov
mov
push
mov
adc
dec
fsubrs
lods
fsts
testl
rcl
or
shrl
push
sub
xlat
pop
mov
jno
ss
sub
sub
and
hlt
cmpsb
push
popa
fcoml
push
pop
add
push
clc
adc
mov
or
je
add
sub
roll
sub
mov
idivb
mov
popa
enter
sub
xlat
divb
inc
jbe
stc
xlat
sbb
cmp
movsl
xor
bound
mov
inc
scas
iret
lret
dec
outsb
jg
mov
fldcw
popa
xchg
frstor
dec
out
outsb
bound
mov
lahf
jno
sub
daa
jns
xor
orl
or
push
xor
icebp
in
arpl
test
into
lods
mov
xor
scas
les
inc
mov
test
sub
and
adc
ror
arpl
fwait
push
lods
sub
aad
sbb
jnp
xchg
or
fisubrl
pop
jne
cmp
mov
and
mov
ss
jmp
lods
cli
add
jp
cs
ret
popa
add
ds
add
adc
loope
mov
aaa
addr16
push
push
lcall
push
fldt
loop
pop
ret
mov
loopne
jecxz
push
add
out
testl
in
dec
cmp
jnp
ds
nop
xchg
mov
xchg
mov
and
dec
sarl
test
sbb
mov
or
test
stc
cld
loopne
test
and
add
adc
jge
out
test
mov
xchg
std
inc
rcrl
mov
jmp
mov
int3
stos
imul
stos
stos
dec
dec
jo
aaa
cmp
scas
nop
sub
or
leave
in
push
sub
lds
repnz
rcr
jp
lock
test
or
addl
and
sahf
subl
cmp
xchg
test
or
sbb
stc
stos
iret
mov
xor
lret
pop
cli
lock
pop
les
pusha
insl
xchg
sub
fcoml
xchg
popw
add
flds
or
rcrl
mov
cmp
fildl
fsubrs
adc
push
pop
in
cmpsl
mov
aad
xchg
or
push
mov
inc
imul
insl
add
icebp
or
xor
xchg
mov
cli
xor
mov
scas
jl
test
test
ret
std
push
adc
outsl
lcall
adc
jle
js
add
ret
jmp
sub
or
testb
mov
dec
mov
mov
pop
ret
repnz
pop
mov
or
inc
mov
test
repnz
push
jne
jecxz
shll
inc
push
lahf
fdivr
sub
cltd
loopne
add
in
stos
inc
fcomps
push
pop
popa
jle
mov
add
ja
mov
test
jbe
imul
mov
or
mov
mov
adc
xchg
push
rcrb
push
sub
int
movsl
push
cwtl
sbb
popf
mov
push
pushf
adcl
in
and
iret
mov
dec
leave
hlt
outsb
call
aad
or
mov
xor
adc
in
into
mov
aas
mov
movsb
mov
pop
in
cmpsl
test
das
int3
pop
xor
xor
or
orl
mov
mov
mov
scas
outsb
adc
stos
mov
or
xchg
into
addr16
dec
fldenv
jmp
arpl
xor
jecxz
inc
add
vshufps
in
push
mov
xor
frstor
add
push
mov
fistps
cwtl
mov
lret
test
push
cmp
mov
stc
cmpb
or
push
pop
cmpsl
mov
addr16
dec
pop
xor
mov
aad
icebp
push
psubd
sub
cwtl
jmp
or
mov
sti
call
pop
repz
adc
outsl
scas
lcall
push
xor
lahf
scas
cmc
arpl
repnz
adc
mov
mov
pop
fidivl
jne
push
or
adc
adc
jl
mov
aam
mov
into
xor
adc
push
xor
and
outsl
inc
cwtl
dec
gs
xor
divb
sbb
sub
out
lds
ljmp
enter
and
imul
test
jmp
adc
mov
std
test
int
pushf
mov
jbe
imul
lock
fistl
mov
add
push
aaa
and
roll
insl
cmp
pop
add
int
jp
jg
jne
pop
out
mov
imul
mov
cmp
adc
push
push
sub
scas
les
ds
mov
or
sub
sbb
jl
cmpsl
mov
imul
jne
das
arpl
out
dec
sub
lcall
cmp
cs
xchg
mov
or
aam
call
ds
adc
cld
inc
arpl
jb
and
lods
or
cmpsb
sub
mov
mov
inc
rclb
fisubrl
jo
add
insb
and
mov
out
push
add
mov
push
jecxz
and
or
cmp
insl
push
mov
bound
rorb
xchg
sbb
lods
and
sbb
rorb
movsb
sub
jl
ljmp
add
lret
sbb
or
cli
rorb
push
fistps
pushf
in
testl
sbb
ljmp
jge
int
int3
hlt
enter
mov
xchg
add
loope
cmp
dec
inc
fwait
pop
mov
pop
sti
jg
mov
fwait
lret
int
mov
int
fbstp
mov
ja
sub
or
xchg
cmp
cmc
faddl
xchg
cmp
and
xchg
xchg
in
dec
push
int
ret
aam
insb
jo
add
jmp
pop
push
aam
scas
pop
jne
dec
push
sub
push
sbb
fwait
pop
and
idiv
mov
or
insl
ja
shl
fists
mov
cmp
popl
test
mov
push
in
test
stos
jns
insb
jne
pop
dec
loop
jp
mov
lods
pushf
mov
push
dec
cmc
dec
out
pop
push
add
pop
iret
sarl
ret
pop
loope
or
loope
push
cwtl
push
ficomps
shll
sub
sub
in
fidivrs
push
jno
inc
aaa
xchg
stos
movsl
xor
mov
adc
sub
pop
jns
cmpsb
pop
push
xchg
sbb
and
cmp
sbb
ljmp
loope
mov
adc
int3
push
dec
fisubl
xor
popa
adc
sbb
xchg
sbb
dec
popa
test
outsb
or
mov
test
arpl
dec
inc
jl
sbb
push
adc
add
sub
and
xchg
jo
mov
sub
push
daa
lods
push
lcall
sub
mov
in
lea
mov
add
dec
out
xchg
inc
sti
stos
sarb
dec
in
mov
popf
mov
es
fimull
lcall
sbbb
add
cwtl
sub
pop
sbb
xchg
jne
test
je
mov
int3
add
push
pop
jge
cmp
int3
jb
or
test
sbb
pop
es
loope
dec
movsb
aas
int
out
rcl
notl
or
mov
adc
adc
fcmove
jecxz
aad
imul
pop
jae
cs
addr16
sbb
cmc
mov
testl
loopne
pop
xor
adc
std
test
mov
repz
xchg
pop
cmp
stc
scas
call
loope
push
jle
cmpl
cli
mov
stos
xchg
into
sahf
jg
inc
leave
or
adc
popf
aaa
fcoml
jg
aam
inc
mov
mov
sbb
cmpsl
adc
cmp
sbb
and
mov
inc
rcrb
leave
xchg
ficoms
jno
or
adc
out
hlt
cmp
insl
dec
cmp
test
mov
sbb
cmp
mov
es
fiadds
aas
inc
mov
iret
movsb
dec
ror
ret
sub
sbb
mov
jne
mov
adc
rcl
inc
jns
pushf
cmc
and
push
and
pop
stos
mov
inc
pusha
mulb
es
or
adc
cmpl
std
adcl
pop
icebp
mov
nop
aaa
cmp
cmpsb
jp
pop
add
fistpl
pop
repz
cmc
push
jle
adc
mov
push
nop
mov
scas
add
cmp
roll
popf
adc
jae
pop
out
loop
les
push
divb
test
dec
fsubp
andl
mov
ret
outsb
push
push
pop
xchg
cmp
test
std
shrb
mov
pushf
adc
cmc
cmp
jb
fimull
pushf
add
cld
je
shrl
call
pop
rol
adc
sbb
cmp
lret
fcompl
and
hlt
inc
sub
cmp
add
addb
adc
mov
mov
jnp
ds
sbb
movsb
dec
cmpsb
push
aad
in
aad
inc
fdiv
pop
mov
call
jle
add
and
aas
adc
and
ret
test
out
and
mov
loope
movsl
dec
adc
mov
test
push
pop
xchg
pop
mov
inc
push
cmpsb
out
pop
sbb
inc
xor
ljmp
cmpsb
dec
bnd
or
cmp
sbb
mov
sub
sbb
dec
cmpl
xchg
imul
loope
addr16
fs
inc
push
pop
jl
sbb
bound
hlt
stos
pop
xor
mov
push
fcoml
andl
xchg
push
pop
enter
inc
adc
add
pop
or
scas
int
cld
shll
or
push
jge
cmpsl
iret
mov
jmp
dec
data16
mov
or
inc
stos
ret
jns
std
jl
sbb
mov
jbe
xchg
roll
andb
addr16
cmc
push
fimull
pop
inc
xor
sub
add
mov
sti
push
icebp
addr16
aaa
adc
mov
and
xlat
stos
push
jmp
mov
and
test
mov
inc
mov
aam
sbbb
mov
jno
rcl
popa
jmp
sti
pop
pop
pop
xchg
push
aaa
aam
out
jecxz
pop
add
mov
push
aas
sti
cmp
test
movsl
jno
push
repnz
cmpsl
cmc
sub
pop
ss
cwtl
das
add
mov
lahf
jae
es
fidivrl
ret
fnsave
inc
or
imul
push
xlat
movsl
dec
and
push
push
mov
aas
out
and
jecxz
push
or
cmp
dec
sub
lahf
or
fucomip
pop
aas
xor
jge
mov
sbb
shll
aaa
add
loop
mov
cs
pop
sti
or
mov
outsb
lret
dec
jl
mov
sarl
ljmp
mov
shrd
jns
xlat
xor
sub
icebp
or
loopne
mov
xor
cmp
sbb
in
mov
daa
rcrb
int
push
jne
mov
push
iret
shll
sub
push
sbb
lods
pop
dec
pop
lock
imul
out
cld
shrl
loopne
jnp
pop
out
cwtl
push
xchg
cli
fnstcw
dec
jl
rorb
jbe
jmp
loopne
xor
mov
xchg
mov
cmp
mov
sti
inc
in
sbb
call
inc
mov
sahf
push
adc
fwait
out
sub
es
fld
ficoms
jno
mov
lods
dec
xchg
cld
stc
repz
mov
jle
popa
xor
dec
inc
dec
jge
mov
stos
push
scas
repz
adc
adc
stos
mov
push
mov
and
jb
loop
hlt
mov
mov
jo
push
jno
mov
mov
ja
xor
lcall
sti
lods
testl
and
cmp
addl
repz
mov
movsl
sub
ds
daa
push
outsb
jb
push
push
int3
in
test
cmpsb
loopne
xor
movsb
pop
addr16
ja
hlt
push
or
cmp
outsb
jne
adc
iret
inc
push
les
decb
inc
cmpsl
mov
loopne
fmull
stos
and
flds
mov
pop
jmp
and
mov
push
push
xlat
pop
or
test
subl
je
mov
test
jecxz
mov
mov
jmp
adc
pop
decb
nop
or
dec
popw
movsl
dec
imul
es
pop
enter
xchg
add
gs
cmc
and
push
movsb
sti
scas
ret
subl
outsb
or
pop
je
test
mov
int
jmp
imul
sbb
pop
cltd
int3
rcll
cmp
inc
add
das
pop
xchg
adc
inc
inc
negl
rcll
pop
lods
fwait
push
scas
xadd
je
pop
and
test
fxch
arpl
or
lea
jb
sbb
mull
std
xor
jns
push
xchg
sbb
stos
aas
jns
insl
xor
lcall
out
mov
mov
jmp
inc
jmp
mov
aas
ficomps
xchg
repz
in
jecxz
outsl
adc
mov
addr16
test
ljmp
sbb
lock
dec
push
mov
lods
jne
cli
xor
push
jnp
mov
cmp
jnp
adc
sub
popa
sbb
or
add
push
adc
lret
cmp
push
cli
push
les
out
or
sbb
mov
cli
jae
cmp
lcall
int3
fbld
jb
jge
je
xchg
dec
jnp
arpl
adc
dec
mov
jns
ds
sbb
outsb
cwtl
stc
popa
in
test
push
stc
outsb
xchg
or
ljmp
xchg
data16
les
pop
lahf
lock
or
aas
pop
maskmovq
mull
pushf
cmpsb
or
enter
iret
ss
pop
and
js
xchg
rorb
enter
pop
in
push
push
jae
xor
pushf
jle
movhps
cli
adc
rclb
push
out
out
mov
addb
sub
or
int
xchg
mov
sub
mov
ja
push
fcoml
notb
jne
mov
notl
pop
sbb
std
in
sbb
mov
dec
xchg
mov
popa
cli
pop
ret
or
mov
sbb
out
jmp
cmc
movsb
xchg
xor
out
insl
mov
inc
cmp
pop
pusha
inc
nop
xor
clc
xchg
mov
dec
imul
inc
loop
dec
xchg
ja
aad
push
fwait
arpl
adc
mov
or
sbb
push
sub
xchg
pusha
push
add
jp
mov
mov
pusha
sbb
xlat
les
in
pop
es
jne
pop
sti
xchg
arpl
cmp
test
aas
orl
fwait
mov
imull
dec
mov
shll
adc
inc
and
clc
das
sbb
jge
mov
int3
jo
outsl
cs
pop
jno
xchg
out
into
pop
movsl
loop
fcoml
je
or
push
sahf
push
add
js
push
dec
mov
lcall
mov
shl
jecxz
or
loope
mov
call
shll
or
std
jp
jge
cmp
mov
aad
cmp
cmp
call
mov
push
aam
push
and
mov
add
ucomiss
mov
and
test
sbb
pop
sub
lock
xlat
adc
or
shr
subl
inc
mov
insb
insl
inc
mov
inc
xchg
jle
mov
pop
adc
mov
inc
mov
push
add
sti
adc
xchg
push
and
push
repnz
xchg
movsl
and
xchg
mov
push
lcall
pop
sub
mov
sbb
pop
pop
cmc
jmp
push
mov
xchg
fisubrs
test
pop
repz
js
js
sub
mov
sbb
sarl
mov
icebp
insb
test
mov
push
lock
lcall
enter
push
mov
leave
sub
aaa
dec
dec
push
adc
ret
mov
ja
daa
ljmp
cmp
pop
enter
sbb
adc
push
test
arpl
lds
fwait
or
xchg
cbtw
jmp
pop
dec
push
stos
pop
enter
mov
sbb
sbb
in
cltd
popl
cmp
lock
fcoml
pushf
mov
leave
mov
dec
gs
mov
pop
push
cmp
loope
mov
in
aad
xor
pusha
into
ja
cmc
xchg
mov
fidivs
imul
push
pop
idivb
or
call
push
mov
cmp
pop
dec
inc
in
les
sarb
lods
test
adc
push
pop
hlt
lock
adc
mov
push
inc
lea
fadds
fs
adc
cmp
push
cmpl
into
ja
xchg
gs
or
adc
xchg
mov
punpcklwd
sarl
ljmp
in
outsb
inc
xchg
leave
rorl
and
popa
repz
xchg
mov
cli
gs
mov
cmp
dec
pop
cmp
xchg
mov
jmp
adc
or
push
movsl
stos
cmp
sarb
mov
inc
sbb
xchg
cs
les
loopne
mov
rolb
sbb
jne
sub
fcoms
ds
jg
enter
in
aad
ds
je
xor
or
add
cmc
aaa
cmp
outsb
insb
xchg
cmp
adc
push
ret
adc
mov
outsb
into
push
das
ret
nop
jne
dec
mov
fiadds
jg
mov
mov
push
pop
push
mov
mov
fisubs
xchg
xor
or
lock
rorl
xor
dec
leave
and
lret
test
cmpsl
lret
add
in
xor
subl
add
lods
dec
into
mov
lock
cmp
inc
cmpsb
jnp
cmp
and
jecxz
shl
addr16
insb
call
jge
push
xor
out
lock
stos
xchg
add
xchg
pushf
jge
xchg
xchg
ds
rcr
push
into
in
je
insl
shll
xchg
nop
sti
or
sbb
repnz
lret
xchg
fistpl
xor
notb
mov
stos
pusha
xor
aaa
mov
test
cmpsb
cmp
sub
gs
adc
orb
inc
xor
and
popf
and
nop
fimull
or
jl
xchg
push
scas
dec
push
sbb
mov
ja
fstps
out
sbb
dec
cmp
incb
popf
inc
jbe
movsb
cmpsb
dec
lret
in
stos
pop
cld
jp
dec
aam
mov
sub
bound
cmp
mov
adc
sbb
daa
fcoml
dec
or
shrb
and
cs
cmp
dec
cld
mov
cli
ret
enter
mov
dec
jecxz
test
mov
test
pop
repnz
ljmp
push
sbb
mov
mov
addr16
pop
ret
mov
pop
cmpsl
pushf
xor
adc
xorl
cld
sbb
ds
sahf
dec
xchg
daa
pusha
jae
popa
push
outsb
daa
mov
jns
xorb
and
es
pushf
adc
cmpsl
scas
adc
xchg
lods
pop
pop
aam
cltd
addr16
into
insl
cmpsl
mov
push
fnstcw
adc
push
fcoml
or
xor
gs
jo
loopne
push
repz
call
mov
jp
sub
jae
cmpsl
adcb
sbb
cli
aas
in
lods
subl
jle
cwtl
hlt
mov
cmpsb
icebp
dec
xlat
mov
mov
jmp
popa
outsl
call
push
cli
es
fs
fsubl
aam
mov
dec
or
insl
mov
popa
inc
and
pusha
cld
je
pop
in
xchg
xchg
stos
cmp
and
andb
loopne
int
test
cmpsb
mov
add
fcmovbe
add
and
xchg
push
mov
jle
adc
mov
jno
mov
sbb
or
mov
xchg
cmpsb
mov
inc
addb
fldl
jae
clc
pop
mov
fwait
mov
loop
insb
aas
test
adc
cmpsb
ljmp
pop
clc
mov
mov
xor
test
add
mov
xor
xor
js
insl
and
call
and
jb
sub
xor
fdivl
sbb
xchg
sar
adc
addl
jns
xchg
addb
leave
fmul
punpckhwd
push
inc
testb
mov
push
addl
test
push
movsl
push
lea
ds
repz
xlat
subl
in
test
or
or
xchg
dec
iret
or
add
jno
lcall
or
sub
mov
or
enter
mov
inc
sbb
fdivs
dec
movsb
clc
pop
js
add
dec
fildl
aam
sbb
cmc
cmp
mov
adc
push
pop
rcrb
dec
mov
mov
lock
nop
icebp
out
repz
sbb
rcl
jecxz
sbb
jbe
lret
mov
pop
cmp
push
int
cs
add
mov
mov
pop
inc
in
in
hlt
mov
pushf
loopne
mov
stos
lahf
jb
xchg
sub
repnz
jb
xlat
jb
cmp
loop
inc
inc
aaa
jne
imul
mov
xor
add
insl
sarb
jbe
test
out
push
ljmp
xchg
lds
jbe
lahf
mov
arpl
dec
in
dec
jg
jl
push
dec
mov
push
mov
int
sub
jae
xchg
add
mov
inc
adc
add
repz
shl
push
shrd
in
rol
repnz
bound
jns
cltd
jne
cmpsl
fsubp
mov
fstpt
sub
rcrl
mov
andl
call
mov
xor
imul
stos
ss
imul
mov
loopne
mov
mov
or
xchg
mov
clc
inc
loopne
ret
hlt
fwait
dec
sbb
ret
test
orb
mov
outsb
jp
sti
daa
aad
adc
ja
jbe
mov
push
nop
cmp
dec
xor
idivl
adc
adc
mov
lea
cmp
fwait
adc
out
jmp
mov
cmp
sbb
xchg
xchg
cwtl
or
mov
shlb
dec
data16
and
xor
jge
sub
std
ffree
ret
aam
xchg
inc
mov
pop
pop
loope
inc
lahf
shlb
mov
fimull
test
jno
cmpsb
stos
ljmp
dec
jne
mov
xor
sbb
jle
lret
dec
jecxz
cwtl
xchg
aaa
jb
repnz
dec
cmpsl
push
mov
lahf
jecxz
push
and
in
push
rorb
shrl
test
stos
sub
cmp
cmpsl
pushf
mov
cmp
out
stos
sbb
daa
sub
adc
lea
out
jb
xchg
dec
push
add
popf
mov
sub
pusha
in
jae
dec
fdivl
pop
jnp
mov
pop
rcrl
and
mov
fwait
iret
leave
sub
push
leave
and
dec
mov
cld
push
ss
cmp
rolb
stc
mov
test
dec
test
inc
mov
jle
pop
push
pushf
arpl
adc
lret
testb
add
xchg
aaa
pop
adc
imul
test
push
notb
inc
inc
pop
or
cli
sbbb
sub
or
jmp
jno
dec
cmpsl
stc
fcmove
mov
mov
negl
sbb
mov
cmpsl
ljmp
pop
insl
ja
icebp
lret
and
popf
mov
add
insb
sbb
enter
sbb
dec
dec
aam
inc
insl
loope
fmuls
add
jge
sahf
scas
xchg
test
jno
xchg
and
lock
lcall
stc
out
mov
pop
dec
mov
push
cmp
ja
jnp
dec
fwait
jo
andl
movsb
jmp
outsl
push
stos
xchg
inc
leave
xchg
adc
je
movsb
fstps
adc
xchg
arpl
adcl
outsb
dec
cmp
ds
gs
sub
dec
and
pop
arpl
adc
std
cmp
xor
pop
or
in
pop
xchg
popa
sbb
call
xor
je
push
mov
enter
mov
stos
aam
lret
subl
sbb
xchg
xor
adc
push
inc
je
mov
int
xor
pop
mov
mov
mov
fdiv
out
pop
outsl
leave
mov
mov
dec
mov
inc
pop
push
xchg
xchg
fnstenv
pop
movsb
push
pop
ja
push
push
dec
test
lret
loope
push
and
sbb
add
sub
add
sbb
adc
ficoms
outsl
out
push
dec
les
lods
mov
jno
xchg
add
fisubs
out
js
lods
xchg
gs
dec
push
cmp
not
dec
ljmp
xor
in
stc
and
sub
lock
test
out
mov
and
push
rcrb
and
jle
imul
dec
imul
xlat
test
outsl
and
jl
lds
sahf
and
inc
divb
out
jbe
movaps
pusha
xchg
in
jns
in
adc
imul
pushf
cli
ret
sub
mov
mov
ljmp
xchg
mov
mov
pop
and
push
sub
add
fsubrs
js
add
xor
jl
ja
pop
jne
and
and
xlat
fsts
ja
nop
adc
and
push
fs
or
inc
jge
add
lcall
andb
rorb
clc
aas
fsubrl
ficompl
jecxz
call
adc
fisttpl
fsub
xor
mov
je
insl
aam
mov
push
dec
or
out
xor
ds
mov
pop
mov
adc
shll
inc
test
jnp
scas
jecxz
je
pop
sbb
shlb
jb
loope
adc
fs
dec
or
nop
scas
adc
xchg
adc
mov
xor
xchg
cs
pop
add
add
cmp
adc
clc
imul
push
pop
dec
xor
cmpsl
inc
sub
fsubr
sub
push
mov
orl
inc
or
push
int3
inc
dec
bound
fcompl
shl
loopne
testb
mov
xchg
xlat
lds
lds
jle
in
xlat
push
cmp
pop
fwait
jmp
mov
jecxz
jnp
fisttps
fstps
mov
sbb
hlt
sbb
test
sarb
mov
std
jb
jno
outsb
sti
dec
rolb
inc
clc
xor
and
cmc
and
cmp
rcrl
add
push
and
aaa
icebp
dec
xchg
cli
adc
aaa
add
inc
ror
in
inc
in
mov
mov
jae
xor
sarl
rcrb
jb
shld
iret
jl
out
lret
sub
inc
inc
popa
es
incb
adc
jg
cs
mov
cmp
in
dec
popa
out
out
pop
push
pushf
jl
and
sahf
mov
into
mov
dec
outsb
in
mov
jge
fcmovnu
repnz
dec
cwtl
mov
pusha
inc
fldenv
dec
xchg
push
sbb
pop
lret
mov
mov
repnz
sub
js
imul
divl
push
pusha
jge
xchg
jb
lea
pop
test
fwait
push
lods
mov
xor
pop
loopne
movsb
test
dec
mov
sub
dec
aam
mov
mov
push
push
sti
or
mov
hlt
movsb
dec
mov
xchg
push
test
push
mov
push
xor
or
push
push
hlt
xchg
jecxz
and
int
mov
jae
fs
cld
or
cs
mov
mov
pop
push
or
push
imul
cmp
out
add
je
and
xor
into
int3
and
lds
test
xor
test
lcall
xchg
or
mov
in
and
pop
lea
pusha
mov
js
les
repnz
add
sbb
sub
jns
pop
je
push
mov
test
fcompp
mov
incb
xor
mov
ss
scas
mov
jo
pop
shld
cwtl
sbb
dec
inc
lods
test
cmpsl
in
lret
icebp
and
add
fincstp
push
and
add
lock
aas
fmuls
pusha
mov
movsb
jne
setl
mov
nop
jecxz
dec
jmp
push
sub
sbb
pop
mov
sub
ljmp
xlat
fsubs
sbb
sub
lods
cld
lods
hlt
sub
cmc
mov
testb
mov
push
repnz
fsub
fidivl
jp
fldcw
dec
popa
faddl
mov
les
jmp
inc
jbe
dec
and
add
dec
imul
cmc
lret
mov
push
cwtl
lea
mov
jno
push
mov
add
call
xchg
es
inc
lock
daa
and
mov
daa
lret
adc
cli
outsb
and
add
mull
ror
add
ja
xchg
jp
and
sbb
mov
cmp
ret
ds
scas
sub
push
xor
int3
xor
jmp
insb
cs
adc
xor
xchg
gs
xchg
push
pop
jmp
mov
pop
addr16
sbb
cmpsl
lds
lea
pmaddwd
int3
daa
lret
adc
jns
enter
or
fstl
popf
int
pusha
lds
stc
push
add
jb
and
xchg
xor
push
fsubp
movsl
pop
pop
jne
loopne
cltd
mov
leave
and
xlat
sub
pop
push
push
fidivl
ss
dec
adc
fwait
shrb
pop
sti
orb
or
sti
out
cmp
into
orb
jb
sub
mov
and
test
lret
dec
sbb
jno
ret
xor
or
int3
outsb
sub
xchg
lods
movsl
das
cmpl
cli
pop
ljmp
pcmpeqw
fisttpl
inc
jl
or
fwait
out
imul
sub
aam
xor
and
mov
int
xchg
lret
stc
lods
fists
into
rorl
lcall
sub
pop
int3
in
pushf
leave
movsb
mov
scas
inc
scas
sub
push
mov
jge
scas
mov
or
xchg
jg
popf
arpl
xchg
in
fs
mov
pop
sbb
loopne
mov
movsl
fisubrl
jae
aad
sahf
xor
lds
movsb
inc
sub
sti
je
cmp
push
fcoms
ljmp
rorb
daa
lods
inc
mov
cs
xchg
jo
pop
mov
jmp
cmc
cltd
mov
add
mov
dec
es
or
inc
mov
inc
inc
ds
pushf
mov
xor
faddl
push
sar
mov
hlt
xchg
lea
das
cmc
lods
imul
push
xor
ds
bound
and
pop
mov
jnp
test
jmp
inc
inc
xchg
add
push
mov
fsubs
xor
out
in
or
repnz
cld
loope
xlat
jo
mov
test
insb
into
scas
jmp
and
fwait
aam
jmp
mov
cmc
clc
cmp
inc
ror
lret
imul
adc
rorl
inc
cmp
insb
ret
cmp
lock
push
ss
sub
mov
dec
sbb
jae
popf
test
sub
sbb
inc
and
dec
lret
fisttpl
hlt
popa
mov
cmp
lods
xchg
push
mov
jae
dec
and
push
sar
popa
icebp
data16
jnp
pushl
push
fnstsw
fidivrs
and
stos
jo
jp
inc
cmp
cmp
stos
sbb
push
mov
xchg
dec
shll
sbb
jnp
jl
into
rolb
xchg
mov
xlat
xor
cmpsl
xchg
stc
xchg
push
sbb
loop
cmp
pop
pop
pushf
cmc
adc
push
jg
and
dec
sbb
cmpb
mov
leave
push
cmp
dec
xchg
jmp
aaa
mov
xchg
sbb
repz
mov
adc
and
cmp
push
popf
sahf
sti
pop
xchg
int
enter
sbb
mov
push
aad
push
adc
cmp
ds
sarb
insl
sti
sbb
or
std
imul
or
pop
pop
inc
or
sbb
gs
leave
gs
mov
imul
jmp
cld
jmp
xchg
xor
hlt
outsl
add
xchg
xchg
int
std
rorl
pop
pusha
pop
out
xchg
mov
xchg
jo
sti
or
outsb
cmpsl
nop
out
cmpsl
xor
popa
or
mov
xlat
jo
divb
aaa
mov
mov
xor
loopne
out
mov
pop
xor
sbb
pop
testl
mov
mov
lods
mov
cmp
pop
lret
fisubl
mov
push
movsb
enter
lods
jecxz
cmpsb
or
test
fdivl
ljmp
js
mov
jo
cwtl
mov
cmpb
adc
test
loopne
mov
jmp
call
enter
push
das
sarb
rcrb
clc
mov
imul
inc
js
xchg
dec
add
adcl
and
pop
fwait
outsb
dec
mov
or
mov
xlat
sbbb
inc
push
enter
cmp
adc
shlb
sub
mov
mov
stos
sti
leave
std
xchg
aas
jg
fwait
and
enter
cmpsl
in
leave
ds
sbb
loope
jecxz
flds
in
aas
jmp
dec
mov
arpl
inc
sbb
in
les
arpl
push
xchg
push
jp
rcrl
outsl
sbb
test
out
loop
movsl
xor
aam
pop
fucomip
clc
mov
insb
pop
and
or
bound
or
xchg
sahf
add
fadds
adc
pop
inc
rcrl
data16
mov
test
or
mov
adc
mov
shrb
add
sbb
jmp
and
inc
rcr
jb
jne
mov
sahf
lret
and
mov
inc
das
and
xor
mov
jo
jns
aaa
ret
mov
cmpb
adc
in
clc
mul
out
xor
imul
jmp
sub
leave
push
push
insl
insl
addr16
push
jmp
test
or
movlps
les
in
adc
scas
dec
insb
out
sbb
pop
mov
jl
jge
pop
xor
outsl
aas
dec
out
pop
test
sbb
pop
xor
sbb
fcmovnb
into
negb
xor
pop
xchg
cmp
dec
jo
fidivrs
out
dec
daa
push
push
or
fcoml
mov
xchg
stos
push
add
mov
arpl
iret
fldt
outsb
icebp
out
jb
cmpsb
sbb
inc
dec
test
sub
add
mov
rorb
mov
lcall
test
insl
inc
cmp
dec
rcrb
mov
shlb
hlt
sbb
cmc
aad
aad
xor
andb
xorb
imul
sbb
cld
fnstenv
mov
lret
sti
fcmovnbe
inc
xchg
xchg
movsb
scas
loop
stos
les
adc
je
xchg
dec
inc
pop
add
add
ljmp
dec
inc
dec
push
aaa
mov
frstor
cs
dec
push
sti
mov
cmp
push
imulb
adc
push
insb
xchg
incb
jo
jmp
push
fiaddl
xchg
enter
xchg
mov
push
jbe
or
aaa
int3
repnz
mov
and
adc
pop
loopne
mov
sub
data16
push
dec
pop
xchg
pop
jne
mov
js
filds
rolb
movsb
inc
arpl
in
jle
or
push
pop
or
xor
xchg
inc
sti
push
mov
mov
add
repnz
sub
pop
push
iret
inc
lock
imul
pop
outsl
add
xchg
imul
insb
into
fwait
mov
aas
ss
xchg
inc
mov
insb
xlat
subb
repnz
aad
rcrl
and
addr16
or
mov
xchg
mov
lods
mov
inc
and
int3
xor
pop
mov
add
inc
out
push
cmp
lds
fisubrs
jmp
inc
stos
mov
xlat
mov
lret
inc
inc
sub
jecxz
sub
pop
fsub
imull
fwait
dec
int
mov
int3
stc
adc
cmpsb
stc
cmp
out
add
roll
fdivl
mov
and
or
ret
test
in
mov
cld
push
sarl
mov
subb
and
fsubrl
fistps
push
sbb
jmp
push
mov
mov
test
dec
pop
sarb
push
int
xchg
add
dec
out
pop
test
pop
mov
xchg
mov
add
dec
cmp
insb
xchg
push
outsl
repnz
mov
adc
cmp
xchg
mov
int
or
test
nop
sbb
lcall
cli
xchg
cmp
repz
xor
cmp
insl
mov
mov
js
test
mov
sbb
cmp
jmp
in
xchg
fadd
scas
in
jbe
fucomi
pop
add
jns
fwait
je
sahf
loop
rolb
ret
mov
movl
pop
pop
out
jne
lock
je
in
leave
pop
mov
pusha
fildll
jg
lcall
jmp
xlat
xchg
cmp
mov
add
hlt
cmc
adc
mov
add
imul
jns
cld
cmc
xor
xor
xchg
and
vphadddq
push
sub
outsb
sbb
xor
loop
incl
in
sbb
ljmp
pop
fimuls
cmp
ret
jno,pt
decl
jns
outsl
lcall
adc
inc
lds
xchg
push
out
mov
push
mov
mov
mov
mov
divl
xor
ret
push
sbb
in
aad
cwtl
fbld
mov
cmpsb
in
shl
adc
shll
or
pop
loope
jmp
inc
xchg
les
or
push
and
mull
inc
pushf
adc
je
fs
ja
sub
fistps
clc
rorb
xchg
dec
jne
cmpsb
xor
jne
cmpsl
out
test
jae
push
fs
sub
xlat
rorl
mov
rcr
sbb
mov
cmpps
mov
xchg
ror
fistpll
pop
fisubs
adc
sahf
ds
push
ss
dec
dec
lods
cmp
outsl
sbb
aas
mov
iret
and
jo
imul
push
dec
push
dec
xchg
sub
push
sub
or
jl
jbe
stos
ljmp
dec
cmp
loopne
fstpt
into
andl
xor
rclb
push
mov
fistps
loope
call
cmp
out
lods
je
mov
mov
hlt
adc
stos
sub
xor
sahf
and
pop
and
pop
sar
jbe
add
sub
xlat
inc
vcvttsd2si
lock
pusha
pushf
into
jb
lahf
icebp
dec
cmp
dec
dec
or
cmp
jo
cld
push
out
mov
in
add
sarl
mov
insb
push
mov
jne
xchg
mov
shl
inc
gs
into
fistpll
out
outsl
xor
push
subb
into
outsb
jno
jb
daa
cmpsb
bound
fisttpll
insb
lret
sbb
mov
ds
mov
ss
imul
in
push
outsb
mov
shl
mov
out
out
aaa
jbe
out
fldenv
sti
adc
les
mov
pop
cli
mov
sbb
psubsb
filds
push
add
ss
imul
adc
push
add
pop
in
mov
jb
add
movsl
je
cwtl
inc
inc
mov
sbb
cmp
repz
cmp
out
pop
jp
arpl
outsb
cmp
lods
push
jmp
mov
xor
dec
and
sbb
sbb
add
and
jae
sub
call
dec
push
push
cmp
test
mov
adc
imul
add
pop
lcall
and
mov
mov
sbb
shll
pop
inc
stos
outsl
xchg
xor
jecxz
cmpsl
push
in
cmp
testb
mov
rclb
mov
bound
les
adc
and
repnz
xor
jb
pop
xor
sbb
pop
push
mov
cld
inc
andb
sbb
lock
fildl
mov
nop
push
popa
fxtract
push
xor
cmp
lcall
pop
push
add
push
push
sahf
xchg
sbb
call
cmc
inc
mov
adc
lea
hlt
push
and
sahf
cmp
cmpsb
push
adc
dec
jb
in
inc
dec
jmp
xchg
cmp
adc
xchg
dec
dec
jmp
fwait
lock
mov
lea
xchg
ss
pop
jae
pop
data16
and
into
add
cld
fiaddl
fcompl
inc
push
decl
and
lcall
rolb
fcomp
mov
xchg
push
jb
inc
mov
stos
imul
test
jp
test
push
jne
adc
mov
jge
mov
or
xor
outsl
mov
lret
testb
pop
xchg
cli
shrb
cs
inc
shr
outsb
jmp
add
mov
std
fstps
in
push
rclb
mov
add
into
pop
xchg
andl
hlt
adc
jns
mov
int3
jae
mov
adc
arpl
push
dec
inc
or
insl
adc
pop
cld
add
and
xor
sahf
fsubs
aaa
jmp
outsb
out
xor
cmc
xchg
xchg
adc
inc
dec
fadd
jno
xchg
inc
test
inc
inc
test
xchg
repnz
arpl
or
sub
ret
mov
shlb
cltd
sub
and
inc
xlat
cli
jmp
sbb
adc
xlat
xchg
jecxz
mov
add
shlb
imul
xchg
scas
mov
push
push
rcll
je
mov
mov
loopne
jo
dec
arpl
stos
popa
adc
addb
jnp
mov
and
decb
lahf
xlat
test
enter
mov
mov
pop
and
and
imul
js
or
mov
xchg
rcll
in
rcrb
adc
cli
lcall
mov
aas
or
pop
pop
cltd
xchg
sub
stos
add
adc
cwtl
add
aas
hlt
jle
pushf
setl
stos
or
or
roll
loopne
rol
gs
jae
ret
shrb
cmp
inc
xchg
inc
and
xor
insb
adc
jle
ljmp
mov
data16
jne
scas
mov
pop
inc
roll
inc
faddl
adc
mov
jae
mov
cmp
dec
or
add
push
repnz
xchg
iret
xlat
or
mov
or
sbb
sub
pop
mov
stos
pusha
mov
and
mov
adc
push
mov
mov
pop
js
shrl
jle
data16
vshufpd
pusha
cmp
scas
fimuls
jns
pop
push
mov
mov
repz
nop
nop
iret
mov
mov
test
pop
mov
scas
loopne
mov
jp
daa
bound
inc
sub
fucomip
mov
addl
dec
cltd
jae
cs
lret
push
pop
repnz
nop
or
outsl
push
jae
add
out
xchg
lods
std
leave
mov
dec
or
lret
shrb
cltd
in
pop
stos
lea
push
jmp
mov
cld
rolb
add
mov
sti
outsl
leave
in
fidivrs
adc
fchs
in
dec
adc
cmp
sbb
lahf
mov
test
mov
insl
mov
cs
orl
popf
je
sub
fistps
cmp
adc
jb
adc
or
cmp
mov
push
xchg
inc
jae
and
mov
xorl
and
push
xchg
lret
cmp
xor
xchg
lret
dec
pop
icebp
imul
lock
mov
or
hlt
or
das
es
clc
mov
push
mov
out
mov
mov
mov
das
aas
push
jno
add
xor
mov
leave
jmp
jge
push
fisubrl
subl
jae
push
or
jo,pt
mov
shlb
nop
push
das
es
repnz
mov
dec
ss
rorb
daa
add
mov
ss
ret
aaa
push
push
sub
jb
daa
cmp
jnp
aad
sbb
movsl
lcall
cmpsl
incb
fisubl
lea
and
popf
jg
mov
outsl
scas
inc
cmp
xlat
enter
dec
repnz
rcl
adcb
out
jo
add
popf
in
xor
pushf
test
adc
and
ret
sahf
xchg
sub
xor
sbb
jle
call
mov
repnz
adc
add
lret
fucomi
inc
jp
fs
aam
add
sub
dec
incl
lcall
cmpl
out
pop
ljmp
fldl
lods
push
outsl
scas
cld
mov
dec
rolb
arpl
sbb
mov
lahf
add
stos
jne
inc
cs
insb
mov
push
out
into
stos
data16
add
push
lret
ja
adc
enter
ss
push
push
dec
push
xor
pop
and
repnz
je
clc
enter
mov
push
push
sub
dec
xor
loopne
stc
cmp
xor
mov
and
addb
cmc
popf
push
cmpsb
cli
dec
sbb
sbb
pop
jle
mov
cmc
cmp
mov
stc
mov
xchg
in
insl
in
mov
stc
mov
rdpmc
inc
stos
and
push
ret
or
xchg
cltd
lret
mov
leave
or
mov
push
mov
mov
mov
nop
test
push
repnz
scas
mov
cwtl
mov
mov
ret
sbb
arpl
mov
push
pop
push
xor
sbb
nop
call
cld
scas
mov
iret
jmp
aaa
hlt
inc
das
scas
popa
xor
xchg
leave
outsb
jae
mov
jmp
sbb
cli
add
xchg
into
sahf
jns
xchg
repnz
mov
push
xchg
mov
pop
push
inc
push
insb
jge
pop
xchg
sub
lcall
hlt
cli
push
je
mov
or
jmp
or
repz
mov
mov
mov
cmp
data16
data16
cmc
mov
out
jne
mov
cltd
js
pop
inc
cmp
jnp
push
sbb
cmp
inc
arpl
clc
into
or
clc
ret
jb
push
fisubrl
pop
mov
psubusw
loopne
add
in
xlat
push
sbb
cmpsl
inc
jl
cmp
das
push
sub
jp
add
sub
dec
lods
mov
add
divl
jmp
xor
or
dec
arpl
sub
scas
inc
fwait
mov
pop
xchg
xchg
and
cli
das
fs
jge
imul
add
push
sbb
adc
lret
fiaddl
xchg
cltd
mov
cmp
xchg
pop
aas
or
xor
scas
lods
das
scas
insl
fucomip
imul
stos
fs
push
sahf
dec
rcrb
add
jbe
repz
loope
lret
jp
mov
sti
dec
test
xor
mov
mov
das
repz
mov
movsl
scas
into
xchg
sbb
push
cmc
jae
adc
jmp
mov
testl
mov
mov
adc
inc
dec
fsubrl
adc
rorl
pushf
jge
lret
xchg
test
cmp
push
cmp
fs
fsubrl
sub
subl
jae,pn
imul
or
imul
shlb
xchg
lret
inc
jle
and
sub
es
sbbl
sahf
adc
inc
pop
dec
xor
loope
mov
mov
movswl
inc
pushf
mov
outsb
jo
pushf
fdivl
movsl
adcl
cs
popf
pop
jnp
cltd
fbstp
lock
cmp
cli
jb
cmp
insl
loope
pop
inc
mov
push
outsl
imulb
sti
sti
pop
daa
mov
fiaddl
mov
fsubl
cltd
pop
push
mov
fstps
or
aas
xor
xor
in
push
daa
fs
adc
sub
mov
pop
imul
sub
shll
add
out
mov
test
mov
out
daa
notb
mov
xor
sub
shrl
je
pop
and
mov
adc
decb
mov
aam
jge
loope
xor
icebp
inc
dec
sub
rolb
insb
in
or
popf
xchg
or
mov
push
scas
push
add
inc
dec
mov
pop
jg
addr16
dec
scas
xchg
add
call
mov
repz
fisttpl
mov
das
jnp
cmpsl
xchg
inc
stc
cltd
inc
xchg
jecxz
lock
jp
xor
ja
je
xor
mov
pop
and
cmp
iret
mov
xchg
push
lahf
cmc
push
mov
cld
or
push
push
and
adc
mov
cld
int3
lahf
lds
test
push
and
je
sub
lea
mov
data16
jo
jbe
dec
repz
jmp
xchg
out
nop
call
in
xchg
jns
xchg
add
mov
rcrb
out
mov
fdivs
mov
test
push
bound
push
adc
test
test
pop
adc
fcompl
insl
stc
inc
adc
in
pop
js
shll
inc
popa
movsb
adc
jg
sub
pop
fstpl
scas
fdivrl
pop
aam
repz
call
mov
ds
jbe
shlb
call
cmp
mov
pop
xlat
push
push
loop
dec
push
lahf
lds
push
pop
or
inc
jg
fisttpl
aam
aad
je
or
xlat
jo
mov
mov
push
mov
push
push
lods
insl
into
mov
js
mov
jmp
mov
fsub
data16
jecxz
xchg
dec
stc
pop
popf
mov
mov
mov
push
lahf
or
add
dec
popw
xchg
xchg
shr
lahf
pop
das
and
mov
inc
out
outsl
imul
push
nop
pop
push
adc
test
cwtl
rcl
add
push
loop
xchg
and
in
pop
pop
mov
xor
xchg
addb
dec
mov
rcr
push
xchg
cli
testl
dec
pop
sarw
sub
push
adc
and
fcompl
cmp
je
pop
dec
mov
sbb
loop
xor
in
add
in
out
push
fwait
movsl
adc
pop
mov
xchg
add
and
lea
in
xchg
or
mov
fnstenv
push
inc
ret
fbld
mov
dec
fcomps
aad
mov
mov
movsl
lcall
stc
sub
jne
mov
stos
mov
jb
fnsave
rorb
lret
je
loop
ss
push
sub
fstpt
aam
mov
pop
in
sarl
loopne
adc
mov
mov
fdivs
mov
lcall
shll
dec
rcrb
cltd
sbb
push
mov
inc
lcall
cmpb
sti
scas
pcmpgtd
pop
addr16
popa
inc
repnz
mov
mov
jns
icebp
loope
push
mov
fwait
mov
push
out
mov
fstps
movsb
hlt
jge
dec
and
push
in
mov
out
mov
and
sub
cs
jp
pop
xor
fnstcw
mov
dec
push
inc
fidivrs
popf
cld
add
push
mov
jb
adc
mov
int3
int
movsb
xor
fs
mov
add
add
mov
js
negb
adc
ss
mov
or
jg
lret
push
push
cwtl
xor
cltd
add
xchg
rcrb
mov
push
adc
and
arpl
je
inc
inc
cmp
fstpl
cmc
inc
xchg
loopne
and
xor
loop
in
lret
sub
dec
mov
inc
mov
dec
dec
ficomps
cmc
repnz
push
leave
rolb
cmp
ret
jne
pop
in
mul
dec
into
icebp
loop
ja
iret
push
imul
push
add
ja
mov
clc
dec
or
jg
xchg
mov
jge
fucomp
fs
inc
and
hlt
scas
fwait
xlat
gs
or
adc
into
test
andb
push
ja
sbb
lea
into
adc
jge
jl
stos
xor
dec
cld
mov
in
mov
pushf
cmp
pop
insl
mov
scas
scas
js
lock
inc
push
pop
xor
cmp
cmp
ficomps
adc
mov
xchg
js
sbb
insb
in
mov
mov
xor
jp
shl
and
xchg
cli
stc
and
push
and
out
in
inc
ljmp
sbb
pop
mov
cmpsl
mov
mov
pop
add
and
test
outsl
cwtl
jmp
mov
cwtl
das
xor
sbb
and
movsl
xchg
fmuls
shlb
push
push
fcom
mov
iret
jecxz
outsl
lahf
mov
dec
aaa
pop
ret
mov
call
data16
add
mov
pop
cld
pop
sbb
jecxz
fwait
adc
inc
pop
je
mov
cmp
and
jo
pusha
inc
pop
stos
jbe
incl
jl
gs
test
ljmp
and
dec
push
inc
or
aaa
mov
outsl
inc
add
or
mov
mov
dec
test
lods
andl
outsb
push
adc
and
fidivrl
pop
sub
pushf
mov
add
sbb
jle
sarb
inc
xor
cmovns
stos
xor
sub
xchg
push
roll
xor
fld
jl
push
push
clc
or
ss
fdivrs
mov
push
ja
add
dec
xchg
adc
sub
and
mov
sub
add
sbb
add
insb
xchg
pop
inc
out
add
fsubrl
out
ljmp
es
mov
pop
jmp
into
gs
jmp
xor
pop
loopne
mov
mov
loopne
jmp
cmc
ret
xchg
adc
dec
arpl
enter
mov
pushf
mov
adc
mov
packsswb
jbe
fs
jbe
test
jae
je
pop
xchg
fisttps
movsl
inc
sbb
fscale
xor
ss
dec
and
xchg
jne
clc
jb
sbb
shr
inc
mov
repnz
adc
xchg
ja
enter
ret
sbb
ds
cmpsl
xor
dec
addr16
rcll
add
add
mov
lock
or
jg
and
ret
push
shl
insl
shlb
sbb
pop
setl
mov
rcrb
sub
push
xchg
xorb
push
lock
pop
sahf
jl
dec
sub
test
popf
push
cmp
sub
notb
stos
sbb
mov
sub
imul
aaa
dec
dec
ret
pop
or
inc
data16
or
notb
dec
pushf
pop
pop
int
xchg
inc
add
fildl
or
dec
push
pop
xchg
xor
stc
into
jnp
flds
fistpll
fs
lret
push
mov
popf
lret
ret
xchg
movsl
loopne
fisttpll
dec
inc
lahf
lods
dec
fwait
popf
and
test
cmp
cmc
out
lods
push
aam
mov
xchg
repnz
lods
jns
ret
add
std
rolb
rcrl
push
lea
jmp
ljmp
sbb
or
dec
repnz
xchg
push
in
test
xorb
cmp
test
pusha
jns
cltd
popa
jae
cmpsl
test
pusha
add
push
add
movsl
sbb
lret
push
add
insl
cwtl
push
sub
push
lods
jb
fs
iret
mov
movsl
mov
jb
sub
add
outsb
imulb
aas
sahf
das
testb
repz
scas
in
mov
cld
mov
push
lret
sbb
cld
jecxz
adc
mov
inc
add
aas
push
pop
ret
mov
xor
shll
rcrb
cmp
scas
dec
and
cmc
ja
mov
jmp
xchg
pop
dec
negb
js
negl
jo
inc
in
stc
in
out
add
lahf
sbb
fmuls
pop
or
push
aas
jge
xor
jmp
cli
rorl
aad
pushf
push
jg
int
cmc
test
arpl
lock
jo
mov
mov
pop
insb
test
mov
int
ljmp
repz
xchg
popf
xor
xor
in
addb
mov
cltd
mov
mov
lret
or
xchg
mov
int3
dec
ds
push
loope
adc
pop
loopne
ljmp
xlat
jmp
sbb
cmp
fimuls
loope
cltd
and
inc
popf
popf
sbb
jns
adc
or
test
mov
aaa
loop
lods
mov
dec
inc
push
pushl
js
and
pop
push
movsl
cld
ror
cmc
mov
xchg
enter
enter
or
fiaddl
test
fisubs
push
xchg
hlt
out
mov
xlat
pop
push
leave
jns
add
xor
sbb
imul
rcl
cs
test
dec
movsb
mov
xor
shr
sub
fs
xor
add
das
sbb
imul
ret
mov
inc
pop
push
mov
xchg
ja
jg
mov
xchg
jge
orl
dec
hlt
daa
mov
xor
push
rolb
jns
jbe
cmc
push
movsl
addl
inc
mov
lret
pop
movsb
pop
out
aad
mov
mov
ss
xchg
aad
fnstenv
movsl
mov
inc
jl
leave
cmc
inc
cmp
lcall
mov
idivb
imul
dec
jnp
aaa
lods
leave
fdivr
push
sub
jge
test
and
loop
mov
xor
imul
jns
nop
dec
leave
in
mull
xor
ljmp
add
addr16
test
in
xchg
or
lds
and
jmp
stc
mov
test
outsl
push
stos
cmp
pop
leave
test
inc
rcrl
mov
mov
jg
jl
xlat
sbb
mov
mov
mov
pop
out
fs
fs
data16
inc
push
rcrb
mov
js
movsb
ja
std
pop
int3
and
push
rclb
cld
mov
fsts
cli
cmpsl
aam
add
dec
ljmp
pop
dec
fidivrs
xlat
cmp
popf
cmp
add
int
add
pop
push
xchg
mov
jmp
das
lods
dec
pop
insl
push
imul
mov
subl
std
sbb
jecxz
hlt
fucomp
fbstp
testb
mov
xor
stc
xor
movhps
mov
inc
out
pushf
pop
aas
inc
and
xchg
movsl
and
adc
pushl
mov
int
rolb
mov
mov
xchg
inc
pop
lret
out
pop
arpl
push
das
push
mov
jns
iret
ss
cmp
sbbb
in
stos
fwait
jp
jo
or
fisubrl
nop
insl
icebp
in
mov
jb
rorb
out
pop
pop
cmpb
or
cli
pop
fistpll
jle
xlat
repz
mov
or
mov
push
push
enter
pusha
add
jmp
add
test
rol
mov
jmp
sbb
push
adc
cmp
rcll
nop
mov
fdivrp
pop
adc
adc
xchg
mov
fcmove
enter
imulb
lods
int
cwtl
mov
insl
scas
fldl
jmp
rorb
push
outsl
mov
pop
leave
adc
stos
rorl
add
ja
aad
stc
pop
dec
pop
cld
cmp
lods
or
ss
mov
push
imul
jp
pop
notl
out
inc
adc
data16
sbb
jnp
ficoms
stos
fdivrl
dec
cs
mov
xor
adc
mov
mov
xlat
pop
mov
push
insb
jae
inc
sbb
mov
fstp
cmp
sub
pop
jmp
aam
sbb
dec
cli
cmpsb
out
jne
scas
cmpb
sub
and
neg
dec
cmp
imul
cwtl
cmpsl
sarb
mov
add
mov
fisttps
inc
adcl
enter
fiaddl
test
or
pusha
mov
mov
adc
lds
sbb
andl
pop
add
add
cmp
mov
scas
loopne
not
sbb
mov
fcmovbe
adc
faddp
inc
cli
cli
fdivl
xchg
out
pusha
andl
dec
jnp
in
jnp
pop
stc
adc
sub
cld
or
pop
cmp
inc
mov
in
insb
mov
int
cltd
adc
xor
scas
jge
pop
cmpsl
sti
pop
nop
mov
not
movsb
inc
mov
shrb
test
xor
xchg
dec
stc
icebp
in
mov
xor
cmp
in
xchg
lret
pop
jecxz
pop
pop
daa
pop
mov
mov
xor
sub
adc
movsb
push
or
jecxz
dec
sub
adc
out
iret
idivl
push
aam
out
push
push
inc
pop
xchg
sahf
imul
inc
loop
push
fnstenv
pushw
shll
hlt
mov
fimull
ficomps
jnp
jno
aam
stc
mov
add
out
lret
lods
imul
ljmp
ja
adc
out
mov
mov
sub
adc
stos
inc
icebp
and
mov
add
mov
les
es
repnz
lret
pop
jle
lcall
inc
jle
in
in
sti
es
es
insb
dec
sub
push
mov
dec
hlt
add
mov
test
mov
lds
sub
jl
imul
cmovae
or
insl
bound
push
mov
pop
pop
pushf
xchg
ljmp
xor
mov
arpl
sub
jns
mov
fmul
pushf
cmpsl
lock
jb
or
jne
push
dec
sub
aas
mov
scas
and
aas
add
jg
cltd
stos
aam
inc
mov
popl
leave
cwtl
mov
cmpsb
or
loope
xchg
aad
mov
jmp
daa
jno
cmp
or
andl
inc
push
sbb
cmpsl
out
sbb
jbe
insb
outsb
pop
add
jae
add
repz
js
sbb
lret
mov
dec
cmpsb
jecxz
outsl
mov
or
jecxz
enter
sub
shll
stos
insl
mov
in
mov
jnp
or
add
adc
stos
popl
sbb
pop
adc
decl
lahf
cli
xor
sbb
das
mov
lret
cmc
cmpsb
out
stos
inc
push
xchg
mov
jno
jl
cmc
sub
popf
xor
loopne
mov
lret
fdivs
sub
adc
inc
dec
das
push
cs
popf
out
fwait
dec
mov
dec
inc
hlt
dec
and
jae
xchg
sbb
or
lock
jnp
cltd
push
fimuls
das
push
daa
insl
or
mov
dec
fs
enter
cwtl
dec
jl
or
jo
aad
pushf
pop
or
jl
cwtl
jge
aam
sub
les
icebp
icebp
fadds
mov
jb
stos
inc
push
outsl
push
inc
jno
sahf
or
shlb
ja
dec
scas
in
inc
hlt
pop
ljmp
xor
push
cli
mov
xchg
pop
mov
cmp
cmpsb
and
cmpl
mov
dec
lea
fidivl
or
scas
and
xor
mov
scas
jbe
cmp
and
mov
mull
push
leave
xor
ret
fldcw
mov
sub
dec
lods
dec
outsb
mov
xor
bound
test
scas
add
sahf
das
subb
jae
loope
fdivrs
out
push
add
in
mov
in
iret
push
into
int3
stc
push
mov
sub
insb
mov
adc
adcb
aad
dec
test
dec
daa
xchg
mov
in
pop
outsb
cli
and
cmc
add
jmp
add
movsb
out
xchg
jno
adc
add
lahf
mov
cwtl
dec
aaa
cmp
dec
test
imul
imul
sub
xchg
jg
xor
arpl
lahf
sbb
scas
test
lahf
mov
xchg
and
pop
stos
pop
pop
pop
sbbb
mov
mov
push
call
dec
mov
mov
insl
cmc
out
sbb
push
jno
in
dec
aam
mov
push
cmpl
arpl
loope
push
ror
lcall
jo
repz
cwtl
outsl
push
pop
push
push
push
lret
push
es
cmp
xor
imul
clc
add
gs
jnp
lahf
jmp
arpl
pop
jno
dec
popa
mov
lret
dec
and
xchg
and
xchg
mov
or
mov
xchg
ss
lret
gs
mov
testl
ret
jno
mov
jle
insl
fs
dec
in
andl
es
rclb
in
mov
lds
dec
outsl
ret
insb
ljmp
out
mov
imul
je
push
scas
fldenv
ficoms
cwtl
loop
les
movsl
jbe
jge
push
sahf
sti
jle
and
sub
push
xchg
cmp
test
inc
int
into
ss
dec
adc
aas
jns
fnstcw
cmp
dec
gs
sub
dec
xchg
jmp
push
iret
and
lods
lret
fcmovne
fcmovbe
mov
popf
int3
push
jg
aad
loope
sub
and
addr16
add
push
bound
lock
mov
jnp
pusha
lret
loop
cli
addl
in
xchg
lret
and
loopne
push
stos
xor
mov
pop
call
xchg
push
pop
mov
xchg
adc
xchg
sahf
and
xchg
mov
ret
dec
sbb
scas
das
lret
jmp
push
inc
lods
hlt
repz
movsl
push
clc
lods
add
pop
mov
loop
fstpt
adc
mov
inc
jmp
arpl
jo
pushf
push
mov
xlat
xchg
lock
xchg
add
jg
cmp
sarl
mov
imul
pop
scas
pop
je
and
inc
cmp
ret
jb
ds
fisubrl
dec
xor
popf
cmpsb
aam
leave
cmp
fwait
jg
or
dec
mov
mov
ficoml
sub
add
ljmp
push
loop
stos
add
loope
xor
out
fadds
push
sub
in
push
push
js
outsl
pop
fstl
jne
lcall
xchg
and
mov
arpl
xor
sbb
mov
xchg
sub
dec
out
push
js
in
leave
gs
and
pusha
mov
cs
cs
dec
testl
dec
xor
jnp
sbb
fs
sbb
icebp
push
int3
cli
mov
cmp
xchg
icebp
out
dec
jle
jp
pop
pop
and
and
xchg
test
addr16
dec
jle
cmpsl
sbb
scas
scas
add
ljmp
cmp
lods
test
xor
adc
lcall
popa
ficompl
pop
dec
and
fiaddl
cmc
or
mov
divps
push
inc
lea
and
loopne
inc
pop
subb
push
cmp
adc
dec
cld
out
xor
jnp
mov
mov
shrb
xor
adcl
mov
add
sub
pop
add
push
pushf
xor
daa
daa
fimuls
ret
inc
out
imul
std
xchg
mov
adc
ret
popf
sbb
fsts
mov
xchg
nop
pop
sub
dec
in
popf
or
pop
stos
scas
xor
dec
rol
push
lret
mov
adc
ss
sub
inc
aam
iret
scas
es
je
inc
and
lods
jns
aaa
mov
dec
divl
pop
mov
mov
cs
mov
out
dec
push
aam
push
or
shrl
outsb
mov
pop
add
out
cmpsl
aas
test
rorb
and
sarl
cltd
xchg
add
jae
mov
cmp
sbb
xlat
mov
scas
cmp
dec
cli
ss
sub
pop
jae
lods
mov
aam
adc
and
dec
sbb
sbb
mov
cmpsl
cmp
bound
cmp
into
arpl
jbe
mov
mov
push
int
daa
sbb
pop
outsb
mulps
pop
cmp
xlat
std
andb
addr16
or
lea
aas
fldl
xchg
insb
adc
dec
pop
pop
in
addr16
cmp
movsl
inc
pop
cmc
aam
pop
testl
and
rcr
rorl
cmp
add
dec
cwtl
out
mov
or
mov
test
push
cld
adcl
outsl
dec
add
pop
rcrb
cmc
lahf
mov
cld
daa
insb
adc
cmpsl
cltd
xor
pop
pop
pop
push
test
orl
or
fistl
mov
dec
mov
iret
movsb
rcrl
dec
popf
sbb
inc
add
jae
and
stc
daa
sti
fs
in
or
xor
jmp
sahf
test
xchg
mov
movsb
add
push
jns
xchg
aam
insb
mov
push
mov
loop
jg
addr16
push
sar
mov
xor
jp
sbb
cs
cmp
pop
iret
xor
scas
scas
aaa
mov
call
dec
out
mov
out
movsb
shrl
pop
xor
add
add
lods
dec
cmpsb
jge
sub
cmpsb
push
fsts
roll
popa
pop
movsb
pop
scas
dec
scas
daa
pop
adc
jo
xchg
sbb
xorb
dec
jmp
ds
xchg
pop
cmp
arpl
mov
xlat
es
push
cmc
pop
mov
stc
test
lcall
or
shrl
xor
or
sub
jns
mov
cmp
xchg
push
dec
cltd
pop
push
cmp
iret
fucomi
sub
mov
mov
adc
adc
push
and
jne
jle
pop
xchg
ss
mov
mov
orl
adc
pop
pusha
jbe
movl
daa
push
inc
and
out
mov
pop
xor
xchg
cmp
fwait
shlb
call
cmp
jae
xchg
and
jns
xor
pop
pop
mov
mov
cmp
fnstenv
sub
pushl
cmc
out
dec
arpl
mov
sbb
aas
inc
mov
and
add
push
and
arpl
dec
cmc
rcll
negl
pop
fs
and
mov
popf
pop
mov
bound
cmp
in
inc
imul
add
jns
mov
sub
dec
sub
jg
push
mov
subl
jno
xor
call
inc
fmuls
stos
test
sbb
dec
pop
lea
inc
xor
imul
pop
iret
lret
in
cli
imulb
add
jge
xchg
shrb
lock
mov
sub
shl
xchg
cmp
and
pop
subb
inc
mov
stos
cmp
outsl
push
inc
in
mov
stos
jg
cld
sbbb
sub
data16
sbb
clc
shll
ss
test
dec
in
test
sbb
jmp
cmp
sub
out
add
into
add
xor
sbb
arpl
inc
cltd
cmpsl
jge
into
mov
dec
lea
out
aad
cmp
ss
pop
xchg
shl
cs
and
mov
mov
test
xor
daa
inc
subl
cli
mov
mov
adc
mov
or
xor
jmp
push
push
inc
repz
mov
mov
lcall
jecxz
xor
call
mov
sub
inc
sbb
cs
fnstenv
cmp
cli
shrb
pop
pop
daa
or
and
push
fsubp
adc
jmp
sbbl
inc
mov
loop
jl
push
aaa
fldl
mov
cwtl
je
sub
inc
icebp
jnp
daa
xchg
adc
add
mov
add
and
call
call
aaa
xchg
bnd
xchg
jg
sbb
xor
push
adc
adc
sub
add
pop
lods
fisubrs
lds
ljmp
pop
inc
mov
sub
xchg
xor
popf
jns
push
dec
jle
adc
shr
mov
ret
movb
lret
pop
inc
sub
aam
xor
jmp
pop
push
repz
dec
andl
jbe
outsb
lret
xchg
cmp
lods
into
daa
lock
jl
cmp
ss
adc
xchg
mov
jp
sahf
shlb
fidivrs
mov
xor
int
inc
mov
call
xlat
or
push
fdivr
mov
ljmp
lahf
inc
cmp
notl
shlb
loop
inc
mov
xor
daa
inc
inc
mov
out
es
arpl
ljmp
dec
pusha
add
mov
std
popa
aaa
imul
lock
cmp
adc
repz
or
lea
mov
aaa
or
andb
push
loop
jns
bound
lret
aam
movsb
sub
mov
loope
cmp
mov
pop
int3
dec
je
pop
sub
xor
adc
fwait
xchg
arpl
add
adc
ds
xchg
out
movsb
mov
iret
inc
lods
scas
lcall
js
in
xchg
nop
cmovnp
cmp
mov
popf
testb
mov
dec
cmpsl
bound
xor
pushf
push
inc
push
jmp
lahf
mov
cmp
scas
dec
mov
fisubrs
dec
mov
sbb
dec
mov
add
movsb
shr
xor
cmp
push
dec
out
cli
insl
nop
and
jmp
sbb
les
cmp
cmp
jge
and
mov
push
fs
rorb
and
shl
loopne
in
iret
mov
cmpsb
je
and
pop
xchg
push
outsb
jmp
cmpsl
test
cmp
loop
pop
fstpl
mov
popf
jno
sub
push
in
adc
imulb
or
push
dec
adc
jnp
ss
mov
or
or
jbe
aam
in
insb
lea
adc
push
stc
add
push
das
les
jl
push
jl
cmp
nop
and
flds
aas
mov
outsl
daa
fildll
mov
push
lret
push
inc
cmpsb
push
sub
dec
push
or
lcall
adc
bound
inc
nop
imul
push
std
mov
in
cmp
mov
pop
jne
mov
mov
push
jecxz
or
mov
mov
mov
xor
pop
scas
subb
and
ljmp
xor
pop
mov
inc
iret
xor
pop
push
sub
push
jo
pop
mov
push
std
test
mov
daa
cld
jmp
push
scas
and
pop
adc
sub
imul
xchg
push
test
insb
jno
mov
xor
mov
jns
inc
xor
and
shl
push
xchg
sbb
pop
ljmp
mov
or
aas
and
or
mov
add
cli
loope
xchg
lret
xchg
and
fcmove
xor
and
mov
dec
xor
mov
xchg
jmp
nop
jno
mov
xchg
fnstcw
bts
cmpsb
test
fisubrl
negl
hlt
mov
push
xlat
aaa
ja
mov
mov
and
sbb
jl
push
or
xchg
mov
in
cmpsb
jle
imul
repz
add
push
dec
dec
dec
movb
ds
xchg
add
pushf
aam
xor
in
push
dec
andb
testb
rcl
nop
scas
dec
jg
test
cmp
enter
bound
jno
insb
fnsave
ljmp
icebp
fucom
addb
dec
mov
lea
rclb
shr
orb
aam
lea
dec
xor
push
sti
xor
push
mov
mov
xchg
movsb
xchg
adc
rclb
mov
push
push
fimuls
sbb
adc
out
pop
xlat
jl
or
or
pushf
inc
and
inc
xchg
addr16
push
push
dec
cmp
cmpsl
loop
or
sub
mov
xor
orl
jecxz
lea
imul
loop
imul
cmpsl
aam
push
insb
fidivl
sub
addr16
xlat
fwait
sbb
cmc
mov
mov
jne
dec
rclb
mov
pop
fisttpll
ret
mov
xor
aaa
ficompl
cmpsl
jbe
subb
jecxz
and
jno
inc
mov
rcrb
mov
cwtl
inc
push
dec
int3
push
push
xor
aad
into
stos
mov
or
jmp
es
in
sbb
mov
and
mov
ret
fwait
mov
jo
sbb
cmc
ret
pop
mov
mov
fs
bnd
and
pop
adc
cmp
stc
mov
int
xor
xorb
cs
jbe
mov
lret
clc
movsl
adc
sbb
mov
lcall
sub
adc
push
das
mov
fprem1
mov
mov
lret
xchg
bound
andb
push
jg
cmp
loopne
loop
pop
adc
push
cmp
ret
dec
xchg
popa
cmpb
cmp
int3
popa
outsb
test
stc
mov
sahf
movsb
cmp
fucomi
inc
push
dec
mov
les
sbb
sbb
and
fs
aas
loope
mov
outsb
push
add
in
mov
and
jmp
add
sbb
mov
addr16
mov
fadds
daa
pop
incl
addl
pop
pop
call
xchg
sub
loopne
push
ss
cmp
dec
sbb
adc
pusha
out
imul
gs
cmp
imul
aam
nop
mov
lcall
push
fcmovu
add
sub
inc
imul
sti
mov
adc
xchg
test
mov
enter
cmp
sti
and
add
mov
sbbb
pop
cmp
test
imul
adc
dec
jns
cmp
jne
add
arpl
frstor
enter
mov
sub
dec
mov
cltd
std
flds
pop
mov
xchg
mov
rorb
cpuid
cmp
jle
lds
push
sbb
clc
mov
mov
inc
test
pop
fwait
jge
loopne
popa
sarb
mov
aas
mov
lahf
jg
pop
scas
adc
cwtl
stos
pop
neg
mov
arpl
repz
inc
iret
or
int3
jecxz
addr16
lcall
pop
push
and
out
lret
lret
mov
and
jbe
out
jmp
mov
out
push
dec
data16
ljmp
and
inc
jl
mov
xor
sub
lret
pop
popa
int3
xchg
inc
or
shrb
int3
jne
mov
mul
mov
dec
cmp
fisttpll
lods
or
pop
xor
pusha
xor
je
dec
mov
aas
aaa
or
nop
sbb
mov
push
mov
sbb
popa
xchg
inc
mov
movsl
mov
lcall
inc
and
and
arpl
xchg
rcrb
xor
fistl
xor
pop
jo
pop
jmp
mov
ljmp
in
jecxz
add
std
repz
mov
push
sub
adc
add
insl
ljmp
sbb
push
leave
je
and
xchg
xor
enter
sub
mov
jle
mov
test
dec
or
daa
or
and
dec
dec
and
mov
mov
mov
aas
adc
into
roll
dec
mov
adc
pop
lret
repz
ret
sub
ret
xchg
mov
je
ret
jp
mov
cmp
inc
lds
adc
dec
pop
mov
out
cmp
mov
cmp
jge
mov
rcrl
notl
ja
mov
inc
mov
dec
out
mov
mov
adc
pop
push
and
xchg
mov
lret
jge
push
push
cmp
cmp
mov
mov
in
and
inc
jns
pop
pop
je
jb
add
mov
aas
pop
test
cmp
lahf
lea
sarb
jle
stc
or
test
push
mov
pop
dec
xchg
out
mov
cmp
pop
pop
mov
xchg
cmp
sbb
mov
lods
add
imul
repz
sbb
mov
or
push
scas
js
dec
stc
sub
jae
arpl
jnp
push
inc
nop
ret
das
test
and
ljmp
or
fnop
call
add
adc
and
cwtl
mov
fildll
jb
ds
add
inc
sahf
mov
popf
rolb
xchg
jge
cmpsb
enter
ss
push
pop
lods
fisttpll
lea
adc
inc
or
fwait
pop
aad
outsl
ret
lahf
mov
mov
jle
mov
stos
mov
mov
mov
js
push
aad
or
ret
mov
imul
or
aad
aas
stc
stc
mov
add
test
cmc
popa
mov
stos
in
dec
xchg
rol
mov
dec
pop
test
sub
pop
sbb
dec
pop
test
dec
mov
ret
lods
scas
jae
ror
pop
xor
mov
sub
jl
adc
mov
loope
push
xchg
push
int3
outsl
jp
int
leave
sarl
and
cmp
in
push
mov
in
mov
jne
pop
fmul
dec
addr16
fsubs
fnstcw
jecxz
pop
lss
pop
push
jno
xchg
aas
rclb
sbb
push
mov
pop
jle
jmp
jp
sub
mov
xor
mov
ret
pop
cli
loope
sub
xor
mov
dec
int
enter
call
pop
xlat
mov
stos
cmp
call
mov
push
fmull
jb
ror
sbb
mov
ret
inc
xchg
or
mov
cs
sbbb
cld
test
mov
iret
xchg
mov
popf
cmp
lods
gs
lahf
data16
jb
pop
mov
jae
xchg
cmpsl
pop
pusha
call
push
js
in
add
or
jle
xchg
push
mov
cmp
cmpsl
dec
fnstcw
ds
xchg
mov
je
mov
divb
xchg
sahf
adc
shll
mov
das
sub
cmpsb
xchg
shlb
mov
dec
in
cltd
pop
add
xor
jge
pop
std
loop
pop
aas
fidivrl
fmuls
xchg
out
sbb
pop
fs
mov
in
pop
inc
push
and
or
insl
sbb
fcoms
ss
clc
shlb
add
cmc
lret
sahf
cmp
stos
or
sbbb
repnz
sbb
cmpsb
push
popf
push
adc
cmpsb
mov
cmp
xchg
lret
adc
insl
sub
fcmovnu
pop
shll
and
adc
and
pusha
sub
movsb
jno
push
sbb
mov
rcrb
add
shld
out
mov
cld
jl
pop
xchg
push
pop
mov
mov
imul
xchg
cmp
xor
cmp
aaa
inc
test
xor
inc
sbb
fildl
cmp
repnz
or
test
cmp
mov
jl
sahf
aas
xor
fidivrl
push
std
cltd
add
mov
mov
cmpsl
mov
sbb
inc
inc
pop
xor
es
inc
stos
test
jnp
daa
fnstsw
sbb
mov
aas
sarb
shl
add
and
rorb
mov
add
jmp
stos
mov
lahf
repz
rcrb
jnp
mov
jae
and
pop
lods
xor
imul
in
popa
shrl
les
pushf
pop
popa
jmp
frstor
mov
int
les
add
mov
push
insb
pop
scas
test
pop
sti
add
mov
sahf
andb
loope
sbb
pop
inc
jo
call
sbb
add
mov
inc
mov
ljmp
movsb
mov
mov
and
pop
push
pop
dec
mov
mov
add
xchg
fstpl
data16
aad
jo
mov
movsl
push
sub
cwtl
xor
mov
push
pop
hlt
add
sbb
inc
lds
fildl
dec
lret
filds
jnp
cld
movl
shrl
and
stos
push
sbbb
pusha
sub
addr16
cld
push
and
xchg
adc
fdivr
mov
fbstp
aad
add
inc
andb
xchg
inc
andl
fsubl
xor
or
and
cmp
add
adc
pushf
hlt
pusha
adc
jns
lret
es
lock
rcrb
mov
out
pop
call
je
out
dec
mov
sbb
cs
inc
sbb
jmp
icebp
mov
jno
xchg
push
xlat
mov
mov
movl
xchg
xchg
int3
shlb
push
leave
lret
mov
inc
jle
cltd
int
int3
test
cmpsl
adc
imull
loop
mov
xlat
fdivrl
xchg
adc
in
jp
insl
aam
or
and
sub
andb
ret
imul
mov
cmp
lahf
call
push
add
mov
adc
lcall
inc
and
mov
dec
repz
in
fs
inc
lods
push
fldcw
fistpl
ret
imul
push
lock
push
mov
xor
pop
jp
jns,pt
aaa
ds
arpl
lock
add
lret
imul
rcr
push
sahf
sub
dec
push
mov
jns
jno
stos
shl
adc
scas
push
int3
xor
or
movsb
cmp
loope
cmp
hlt
push
testb
and
push
push
addr16
out
pop
sbb
cld
adc
xchg
jae
or
jnp
aaa
pop
cmc
jb
push
mov
cmc
xchg
shl
cmp
ror
sub
or
cltd
outsl
xor
xor
mov
cs
push
clc
and
lds
sti
xor
jo
mov
xlat
stc
pop
outsl
push
inc
dec
mov
mov
jecxz
sahf
sbb
jnp
mov
xchg
in
fimuls
lock
mov
shll
and
out
jno
test
and
iret
sti
dec
fwait
add
sbb
sbb
dec
xchg
adc
lret
repz
jmp
pop
shlb
adc
lods
push
pop
cwtl
fwait
push
and
inc
inc
xor
movsb
sub
lods
movsb
and
add
jo
xchg
add
cmp
cs
cmpsl
stc
mov
dec
stos
inc
data16
and
ret
movsl
rorl
push
mov
mov
loopne
not
cmpsb
or
fiaddl
js
aad
xchg
sub
inc
push
fs
jae
leave
jle
data16
or
push
xchg
imul
sbb
imul
cmpsl
movsb
mov
mov
dec
mov
stos
or
outsb
aam
leave
add
fwait
xchg
mov
mov
add
sub
and
jle
sbbl
test
fnsave
sahf
xchg
mov
jnp
jnp
cmpsl
sti
push
out
aas
jge
lret
jge
pop
pop
int
cltd
mov
pop
shll
sub
js
or
mov
jnp
pop
adc
jbe
mov
pop
mov
out
and
cmpsl
jo
or
and
fcoml
cwtl
add
cmp
mov
sarl
or
sbb
lods
in
sbbl
icebp
ljmp
jge
push
pop
add
xor
push
dec
or
pop
dec
lock
inc
mov
inc
jle
in
shll
ret
insb
jns
loope
mov
cmp
mov
jmp
and
loope
lds
dec
fisubs
shr
or
rcl
les
mov
pop
sub
or
sti
pop
pusha
scas
mov
adc
loope
movsb
insb
aad
mov
bound
orl
adc
shl
frstor
pop
shl
sahf
inc
push
iret
inc
mov
imul
jns
icebp
sub
xor
add
cmp
js
insb
mov
pop
pushf
pusha
mov
adc
fxch
pop
pop
pushf
call
rorb
mov
addr16
std
push
rcrl
addr16
lret
or
call
mov
outsb
ja
mov
pop
aad
mov
les
push
mov
aas
js
mov
jae
shll
fisttps
into
dec
dec
or
loopne
fsubr
jle
or
push
inc
leave
lahf
xor
and
gs
xor
pop
notl
iret
fisubl
in
loopne
lock
xor
pop
pop
xor
mov
jg
out
daa
inc
mov
mov
push
outsl
mov
lds
pop
adc
cmpsb
sti
jnp
arpl
pop
and
xchg
test
test
movl
sub
xor
mov
pop
mov
ja
pop
mov
mov
push
mov
loope,pt
jno
test
outsb
cwtl
pop
ljmp
nop
inc
lcall
mov
aam
add
push
rcrb
sub
pop
lcall
cmpsb
push
jmp
cmc
mov
xchg
pop
fdiv
lods
movsl
mov
adc
and
xchg
xlat
cld
mov
imul
jns
xchg
iret
mov
sbb
cmp
call
add
fidivs
insb
add
notb
pop
ficomps
add
push
pushf
cltd
push
mov
inc
ret
mov
scas
loope
jp
int
cmpl
adcl
fs
ror
addb
hlt
in
test
mov
add
jbe
scas
les
pop
fcompp
push
mov
dec
jno
sbb
lret
dec
push
mov
fucomip
sub
sbb
shr
iret
jg
lcall
lea
or
in
stc
cmp
movsb
jmp
mov
and
pushf
xor
in
js
ret
adc
and
iret
sbb
idiv
icebp
dec
push
fnstenv
xchg
sbb
movsl
scas
cmc
insb
mov
jmp
mov
arpl
jae
gs
jbe
roll
adc
mov
cmpsb
xchg
out
fmul
repnz
push
mov
test
mov
rcll
pop
fs
pop
sti
push
add
sbbl
jmp
orl
sbb
shl
xor
lret
mov
fs
mov
inc
sub
mov
fldt
cmp
jmp
pop
pop
nop
into
ret
in
aad
mov
mov
pop
mov
in
loop
xchg
xchg
stc
and
ds
sarb
leave
adc
push
movsb
les
jl
jmp
jp
pop
pop
push
add
adc
iret
lahf
aaa
call
sahf
test
iret
and
fldcw
test
xchg
mov
pop
xor
cmp
pop
fisubrl
mov
fmul
adc
movsl
loopne
outsl
push
popf
jbe
push
icebp
add
pop
ljmp
xchg
pop
cltd
negb
mov
xchg
push
sarb
mov
loop
push
push
repnz
mov
cmpsl
or
sbb
loope
sbb
or
lret
push
add
mov
xor
in
sti
mov
sub
movsb
inc
out
movsb
mov
fdivrs
cmp
or
cmp
mov
mov
add
aam
cld
jns
xchg
ficoms
dec
push
nop
out
and
mov
jle
movsb
fucom
push
lret
mov
xchg
insl
jmp
mov
stos
ret
pop
icebp
ja
inc
in
add
xchg
nop
test
roll
cld
orl
nop
mov
andb
add
loop
std
mov
stos
push
xchg
dec
adc
push
fnsave
cmp
movsb
push
inc
js
out
adc
dec
xchg
lods
xor
jbe
add
int
dec
setb
leave
out
dec
dec
shl
enter
jnp
repnz
dec
xor
push
add
jbe
fmul
outsb
cmp
pusha
ret
sarb
sahf
push
shrb
pusha
and
lret
pop
aaa
or
or
sub
sbb
notl
xor
inc
xorl
popf
out
pop
jb
movsl
add
imul
lock
shrb
test
pop
pop
ret
insb
xor
jne
mov
fisubl
out
adc
push
mov
sbb
fsub
sub
push
pop
paddd
or
in
jp
add
sub
jns
popf
rep
out
mov
inc
mov
xor
scas
cwtl
adc
in
inc
mov
ds
rorb
ds
cli
dec
jge
aaa
add
sub
mov
scas
stos
pop
pushl
cmpsl
int3
mov
jg
inc
xlat
sub
aam
xchg
dec
or
jg
inc
std
cmp
jnp
popf
dec
lds
cli
nop
ds
mov
cmp
daa
jecxz
mov
and
cmp
cltd
sbb
pusha
aas
jp
aad
fwait
rcl
test
mov
pop
in
jnp
mov
dec
loopne
lret
cwtl
andb
cmc
data16
lret
or
mov
ret
inc
sti
or
cmp
lcall
std
and
cmpsl
pop
adc
clc
push
cmp
int
jmp
jmp
mov
adcb
movsb
and
js
je
call
ss
jns
mul
xor
cltd
mov
loop
movsl
and
hlt
in
push
pop
into
inc
push
jp
cmp
pause
lahf
inc
insl
subb
jne
sahf
repnz
inc
lds
call
jg
negb
aaa
xor
jp
in
lods
in
jmp
xchg
ljmp
scas
js
mov
lods
push
in
hlt
cwtl
into
push
or
call
ja
inc
mov
pop
mov
mov
ja
push
dec
xchg
cmp
jae
adc
imul
mov
and
lea
or
mov
lret
sub
loope
lret
mov
popa
push
loop
fildl
les
leave
and
mov
cmp
xor
jae
dec
icebp
xchg
add
out
in
cmp
jae
mov
push
sbb
jo
stos
aas
popa
and
push
out
test
mov
and
fadds
or
jmp
push
imul
pop
pop
jb
testb
mov
stos
popa
push
cld
sbb
mov
mov
imul
lods
mov
push
dec
mov
jns
adc
jae
test
enter
sub
push
stc
jo
xchg
pop
iret
int3
pop
jnp
out
fdivrl
jl
fwait
mov
insl
pop
imul
test
adc
out
sahf
mov
popf
insb
mov
or
add
stos
inc
dec
push
in
cmp
xor
mov
in
and
popf
das
loop
dec
ss
test
xor
mov
frstor
jl
mov
cmc
mov
fs
inc
mov
rcrb
imul
cs
and
jg
xor
push
fwait
adc
lcall
push
outsl
ss
cmpsl
pop
in
or
gs
pop
iret
xor
push
xchg
and
outsb
xchg
test
add
pop
xor
adc
jl
and
ss
stos
in
out
xor
mov
inc
andl
or
cltd
sub
je,pn
mull
mov
lock
mov
iret
leave
and
in
push
gs
pop
and
enter
sbb
cmp
xor
fimuls
bndstx
outsl
ss
mov
ficoml
sbb
mov
adc
or
xchg
cli
cli
movsl
in
and
cli
and
cmp
aaa
in
loopne
into
mov
loope
jno
mov
push
mov
jne
mov
add
call
cmp
xchg
mov
je
lcall
push
pop
xchg
sub
insb
popa
inc
lds
mov
in
inc
jge
push
aad
imul
push
xchg
or
sarb
outsl
test
cmp
mov
inc
arpl
xor
dec
jb
xchg
ret
shlb
pop
inc
lds
push
insb
push
repnz
sbb
dec
movl
mov
push
jo
adc
in
add
and
sub
hlt
adc
cwtl
xor
in
jge
fmul
insl
mov
mov
sti
fsubs
imul
xchg
sub
gs
adc
fimull
sub
insb
sbb
xchg
dec
int3
ljmp
out
shrb
sbb
ret
push
int
and
push
in
cmp
xchg
enter
pop
and
addb
cltd
mov
adc
repz
lods
dec
popa
fsubp
mov
cmpsl
gs
sbb
sbb
in
mov
ljmp
sbb
dec
in
mov
sub
iret
jecxz
mov
fdivrl
in
push
sub
aaa
push
lcall
dec
lahf
icebp
or
lcall
mov
rcr
pusha
cwtl
filds
pop
aam
movsl
inc
pop
daa
es
sar
popf
fadds
mov
pshufw
stos
movsl
jno
lea
xchg
test
inc
or
jnp
shlb
mov
data16
mov
repz
stos
iret
ja
fs
sbb
and
cmpsl
xchg
out
adc
loopne
cmpsl
stos
inc
cwtl
push
out
jne
clc
xchg
orb
fwait
pop
pop
fs
mov
out
dec
mov
cmpsl
je
cmc
subb
cmp
scas
jg
fistl
addr16
lret
add
pop
addl
daa
mov
std
je
mov
xchg
jo
shl
cltd
jmp
imul
negl
je
and
mov
insl
ds
and
pop
jg
mov
scas
add
out
adc
sahf
sbb
loope
clc
xor
mov
stc
or
xor
lods
cmp
mov
loope
and
fs
divb
std
add
mov
add
and
ja
int
cwtl
push
and
jb
mov
ret
inc
loopne
movzwl
jge
outsl
or
sub
add
iret
jle
outsl
inc
shlb
sbb
mov
lahf
cmp
pshufw
ljmp
hlt
xchg
stos
hlt
sub
out
repnz
jecxz
adc
lret
out
mov
mov
xchg
ss
dec
les
imul
negb
fisttpl
dec
mov
outsb
and
es
cmp
dec
insb
ficoml
cmp
jge
cs
test
xchg
xor
data16
add
in
addb
in
je
cmp
outsb
pop
clc
dec
jl
std
js
add
aas
adc
int
sbb
dec
ljmp
lret
mov
clc
inc
add
dec
mov
push
shrb
mov
in
jle
pop
pop
cmp
mov
ja
jno
test
jg
pop
shrb
iret
dec
decl
pop
add
pop
jns
test
sti
movsl
sub
test
xor
popa
sub
lret
jp
daa
pop
xor
mov
push
leave
mov
mov
incl
insb
fcmovnb
add
leave
push
dec
scas
push
inc
pushw
int
adc
mov
out
aaa
inc
add
test
lock
mov
loopne
mov
inc
mov
les
or
in
xor
out
stos
or
jmp
outsb
push
push
mov
push
adc
or
xchg
iret
push
test
adc
imul
jnp
sbb
and
push
test
insb
in
aam
xchg
and
jle
mov
fs
xlat
and
mov
cmc
cltd
jno
fmuls
mov
nop
cmp
xchg
pop
aam
movsl
mov
pop
int
pop
je
pop
jmp
jle
scas
cmp
push
mov
sbbl
jg
or
adc
cwtl
movl
sub
cmp
xor
popf
mull
shlb
iret
jmp
scas
xchg
mov
jo
lret
xlat
out
je
xchg
and
mov
sbb
mov
test
bound
jno
pop
aas
pop
icebp
xchg
test
mov
in
rclb
cmpsb
push
imul
and
push
idivb
sar
cmpsl
arpl
scas
mov
dec
std
stos
repnz
adc
daa
pop
inc
add
imul
inc
inc
loopne
pop
inc
insl
pcmpeqb
ret
mov
push
cmp
in
loopne
mov
mov
push
aas
adc
add
sbb
rcl
pushf
mov
push
jecxz
sub
mov
push
shr
xchg
ljmp
cwtl
add
lcall
xchg
mov
inc
xor
adcl
out
popf
outsb
mov
jmp
mov
pop
and
cmpsl
jmp
roll
fisttpll
out
jns
fidivrl
push
add
mov
sbb
stos
pop
ja
push
pop
ret
dec
insl
arpl
fisubrs
sarb
imul
shl
loop
pop
cwtl
push
in
out
rcrb
cmp
out
inc
and
cmp
gs
jmp
sbb
sbb
ret
xor
xchg
sub
nop
mov
jb
leave
pop
adc
dec
fldt
and
cmp
js
scas
arpl
add
cmpb
mov
in
mov
out
cmp
mov
mov
mov
sub
sub
xor
push
insb
data16
cld
in
fadds
fsubl
arpl
sti
sub
jle
sahf
add
aas
stos
ret
mov
sahf
mov
xor
xchg
jp
sub
cmp
adc
pusha
cwtl
pop
cmp
xchg
stos
dec
addr16
inc
hlt
incb
gs
add
pop
xor
pop
test
ret
out
lea
sbb
adc
mov
pop
lret
inc
fucomip
dec
rcll
gs
xor
enter
cli
repnz
imul
xchg
mov
jl
shl
mov
and
jno
jno
loop
push
inc
je
lods
imul
sub
xchg
ficompl
lods
pop
nop
sbb
ficompl
stos
jg
in
jecxz
gs
xchg
mov
adc
dec
mov
sbb
sar
fiaddl
js
ficomps
xchg
outsl
movsb
mov
mov
push
xchg
mov
cmp
mov
mulb
mov
or
cmpsb
test
push
lcall
imul
and
xor
aad
movsl
je
js
jae
pop
adc
fs
insl
dec
push
loopne
sbb
mov
sub
into
push
sbb
lods
shll
mov
lcall
pop
xchg
mov
mov
mov
sahf
lcall
movsb
push
push
or
mov
jb
arpl
loopne
shlb
mov
bound
mov
jecxz
imull
enter
mov
iret
dec
push
sarl
shlb
lahf
adc
mov
mov
push
rorb
mov
cmp
and
arpl
xor
sub
mov
shl
mov
jnp
mov
test
mov
lea
in
rcl
in
loop
testb
adc
mov
fsubrs
lret
hlt
mov
ficompl
or
mov
adc
aas
mov
cmpsb
repnz
mov
cli
pop
adc
int3
sub
jg
and
jb
and
inc
sub
pop
pop
cltd
xchg
cmpsl
fldt
std
sti
divb
lds
lods
test
mov
or
cmp
mov
xlat
cmc
jbe
and
rorb
fadds
adc
fsubrs
ds
pop
sarl
lds
pop
testl
add
and
mov
lret
loop
adc
inc
addr16
inc
ss
mov
mov
pop
or
sub
aaa
pop
aad
ret
mov
push
andl
add
inc
inc
sbb
scas
adc
mov
jns
dec
mov
in
icebp
stc
jl
cmpsb
mov
lea
dec
data16
or
push
pop
mov
and
jg
push
sbb
mov
dec
out
and
int
ret
and
in
and
ret
dec
lods
inc
add
shrl
iret
fstp
daa
lret
pushl
dec
aam
mov
out
daa
bound
mov
inc
lods
push
xor
aam
fbstp
xchg
cli
and
pop
int3
in
fwait
insb
iret
xor
loopne
subb
xor
push
jp
or
std
fadds
das
test
or
stos
jle
test
jo
fld
insl
xchg
or
cmp
or
loopne
sub
xor
jno
dec
addr16
lea
sbb
pop
insb
mov
into
int
xchg
fldt
dec
repz
dec
xor
fstps
push
sbbl
inc
jl
push
fiaddl
adc
cltd
dec
scas
enter
cmp
std
xchg
inc
mov
dec
pop
add
iret
mov
pop
mov
pushf
push
cmp
push
xchg
push
lcall
push
push
ja
pop
test
jecxz
das
int3
push
adc
rcll
jno
fwait
xor
xchg
filds
addr16
insl
and
dec
lds
es
or
or
push
popa
cmp
sub
inc
rcrb
leave
mov
mov
jge
test
aam
push
in
adc
leave
xchg
mov
insl
mov
cltd
sub
adc
jne
repz
jp
pop
dec
movsl
xor
sub
mov
inc
and
leave
addr16
xor
jbe
insl
addb
fbstp
or
adc
imul
dec
sti
lahf
fdivp
roll
pop
adc
out
dec
or
jmp
inc
mov
pop
jbe
rolb
sbb
mov
fcoml
test
lahf
jge
mov
mov
nopl
sbb
pop
pop
jg
and
add
fsubl
adc
cwtl
jmp
out
adc
add
xlat
outsb
jbe
stc
jne
sub
sub
inc
push
cli
cli
lods
sub
jle
push
jo
xchg
cmpb
xchg
pop
dec
sub
arpl
fstp
push
xor
outsl
in
out
cmp
jo
jl
sahf
xchg
ficomps
mov
push
cmp
push
mov
out
mov
pop
gs
out
push
call
hlt
mov
fucomi
loope
mov
cltd
or
cmp
inc
out
dec
dec
lods
mov
sub
mov
lods
mov
or
out
sbb
ds
inc
push
dec
hlt
adc
insl
fcoms
jmp
pop
pop
aas
das
and
jb
iret
push
adc
or
push
mov
out
mov
repz
fmuls
in
imul
xor
ja
repnz
movsl
lahf
outsl
cwtl
jl
pushf
mov
loope
mov
cmp
mov
lret
scas
inc
gs
mov
or
movsl
dec
and
jl
rcl
call
cmp
adc
mov
test
aaa
push
mov
or
mov
sub
fdivrs
sbb
jmp
sub
pop
add
insl
lahf
push
outsb
inc
ret
jbe
pop
fisubs
test
add
enter
jg
in
pop
sub
das
xor
cmp
mov
mov
dec
and
and
sbb
sarl
imul
push
fmuls
mov
xlat
roll
dec
add
shl
pop
push
loope
call
xor
mov
pop
andb
jb
lret
pop
pop
pop
pop
test
jbe
dec
mov
inc
push
adc
mov
xchg
bound
insl
ss
repnz
fwait
or
or
outsb
mov
adc
inc
cli
jmp
loope
xchg
and
xchg
and
cmpsb
leave
xor
gs
dec
in
leave
lcall
cmp
aaa
fildl
jmp
inc
dec
mov
xor
pop
in
xchg
mov
clc
test
rolb
cmpsl
sub
cmp
or
inc
or
jecxz
inc
cmp
in
inc
les
push
int
ss
cmp
cld
push
cmp
adc
sub
or
in
dec
iret
jge
sub
or
daa
push
loop
test
in
mov
pop
ret
movsb
sbb
jo
xchg
cmp
adc
jae
add
sub
push
fwait
mov
fwait
imul
or
lods
sbb
inc
push
rclb
addr16
mov
mov
xor
nop
lods
mov
jg
push
dec
jnp
adc
mov
rclb
int
mov
and
enter
mov
inc
fstps
stos
test
xor
cmp
int3
outsb
test
cmpsb
jmp
aaa
das
adc
das
push
push
mov
shrl
shll
ffree
pop
inc
xchg
cmp
pop
hlt
pop
cmp
jge
lds
lcall
lods
mov
pop
pop
mov
pusha
and
out
cli
inc
jo
adc
arpl
test
mov
call
pop
test
pop
mov
or
lret
pop
inc
lds
out
pop
and
add
movsb
or
fsubrl
data16
adc
sub
imul
push
loopne
rolb
cmp
lcall
xchg
or
sub
adc
and
cs
pusha
dec
mov
jno
repz
xchg
shll
xchg
lret
mov
cld
mov
mov
and
sbb
dec
insl
insb
add
imul
sbb
subb
jns
sub
in
push
cwtl
cmpsb
inc
sbb
inc
adc
clc
loope
shll
pop
cli
mov
mov
push
jle
clc
dec
adcl
push
or
test
xchg
mov
sahf
or
test
es
mov
sub
add
adc
mov
cld
cltd
sbb
cld
decb
sbb
leave
fnstenv
leave
popf
inc
xlat
jl
inc
movsl
sbb
inc
pop
in
xchg
in
pop
les
push
inc
call
pop
push
mov
jmp
ds
addl
lds
pop
dec
fists
mov
arpl
xchg
cmc
push
aam
dec
push
sub
mov
sbb
sbb
add
insl
in
in
repnz
js
xchg
jp
push
dec
sbb
sub
dec
shrb
imul
xor
xchg
lret
jmp
icebp
pushf
inc
sub
xlat
pusha
std
add
hlt
inc
sarb
push
sti
sub
aas
cmpl
pop
adc
mov
leave
out
insl
dec
imul
ret
dec
insl
pop
loope
push
imul
jae
jno
in
pop
bound
add
fucomi
and
es
dec
shl
pop
pop
sti
inc
lods
out
dec
jo
xorb
addr16
sbb
jno
xchg
dec
ds
jo
lcall
mov
stos
std
add
aaa
inc
cli
clc
and
movl
xor
dec
sub
insl
popf
fildll
jns
fists
jbe
int3
mov
sar
push
fstl
mov
scas
push
sarl
test
mov
jo
xchg
shr
mov
cmp
jb
xchg
stc
and
push
push
jno
cmp
iret
sub
sub
sbb
int3
or
adc
xchg
ds
pop
fnstsw
gs
imulb
lods
sbb
pusha
test
loop
dec
int3
jmp
test
add
jb
pop
dec
push
sub
push
and
sub
or
jo
inc
inc
mov
and
mov
testl
stos
mov
lcall
lahf
nop
cmp
fdivs
fwait
and
movsb
push
pop
and
jge
and
mov
lret
jbe
sub
jno
dec
and
cwtl
pop
rcl
or
test
push
sbb
test
aaa
bound
xchg
pusha
xchg
fists
lcall
pop
icebp
fistps
push
ss
pop
in
subl
adc
test
cmc
and
xor
pop
jle
cltd
idiv
icebp
lea
das
xchg
push
ret
pop
ss
decb
or
mov
pop
add
rcrb
cmp
fdivrs
and
shll
jl
outsb
out
in
ljmp
repnz
imul
mov
mov
adc
mov
adc
mov
call
add
add
fdivrs
sbb
cmc
pop
addr16
lret
insl
xor
loopne
push
ss
push
dec
push
repz
arpl
fidivrs
mov
sti
and
xchg
jo
sub
mov
push
mov
int3
in
test
addl
dec
cmp
xor
aam
testl
insb
cmp
lahf
cltd
add
pop
pusha
outsl
out
push
int
into
outsl
hlt
inc
or
repz
sti
ror
jle
ss
add
jg
inc
add
sub
pop
push
adcb
xchg
sbb
ds
mov
lret
out
pop
ja
cmpsl
inc
repz
xchg
xor
shrb
stc
cmp
hlt
jmp
cld
cmp
into
sub
sub
mov
inc
pushf
push
cld
aaa
and
loop
push
jmp
push
sub
sbb
lcall
in
push
lock
mov
iret
cmp
icebp
out
push
stos
mov
mov
in
das
adc
mov
ret
pop
sahf
adc
mov
es
adc
imul
or
outsb
into
mov
xor
ret
popa
ret
fcom
je
lea
daa
es
ret
mov
jecxz
and
and
mov
cmpsl
cmp
sahf
sahf
push
repnz
lods
add
pop
xchg
int3
sbb
fbstp
sar
sbb
pop
pushf
mov
lret
call
add
in
out
cmpsb
push
cmp
pop
sbb
mov
or
mov
jne
icebp
lock
out
movb
dec
mov
adc
jg
fmuls
inc
andl
sbb
lods
mov
imul
or
idivl
icebp
jge
push
jg
cmc
adc
xlat
xor
mov
rcll
xor
in
scas
lret
push
dec
inc
sbb
pop
fsubrs
std
gs
mov
outsb
mov
and
jg
mov
dec
sub
sbb
orl
sub
andb
push
aad
roll
and
or
sti
sub
in
xchg
subl
xchg
gs
fimull
adc
scas
mov
push
pop
adc
push
or
fisubrl
stos
ret
cmp
cmpsb
lahf
pop
mov
aaa
call
mov
enter
add
push
jne
scas
mov
jbe
push
cmpsb
jo
cmp
int3
add
inc
push
inc
in
std
xor
negl
fwait
inc
and
dec
jp
dec
shrb
mov
sub
mov
lcall
stos
call
add
xchg
ret
xchg
shll
bound
xor
mov
icebp
sar
xchg
out
or
leave
xchg
int3
jge
mov
loope
jg
ret
in
cmp
cmp
ja
mov
fildl
jae
adc
in
or
inc
ret
pop
lea
push
les
and
shr
pop
hlt
pop
mov
mov
fwait
and
mov
cmp
sahf
sbb
cld
mov
lods
test
xchg
jmp
lcall
jge
push
mov
cs
xor
or
mov
aas
out
ds
and
jg
lds
fdivr
aas
lcall
push
add
inc
sti
sti
inc
pop
jg
popa
cli
mov
aaa
inc
clc
out
aam
addb
adc
adc
icebp
in
inc
aaa
mov
fcoms
loopne
ds
mov
and
jle
jb
or
mov
call
jo
cmp
fs
xchg
dec
xchg
pop
ret
lods
scas
dec
mov
in
movsb
test
ficomps
pop
cmpsl
and
out
int
and
imul
js
jnp
call
push
lock
cmpsl
out
pop
mov
rcll
pusha
inc
addl
mov
mov
call
cli
fwait
xchg
hlt
add
cmpb
push
lahf
mov
fdivrl
pop
xor
mov
xchg
adc
gs
lods
or
jg
jb
shlb
and
jecxz
fmul
sbb
jnp
outsb
pop
mov
sub
mov
sbb
pusha
jge
xchg
mov
sub
lods
add
cmpsb
movsb
mov
adc
repz
add
aad
rclb
xor
and
or
outsl
arpl
sti
aam
sti
ficomps
stc
vmread
pop
in
adc
jge
in
or
lea
or
lea
lret
xlat
inc
dec
out
pusha
ret
fbld
mov
jp
push
cmpsl
es
mov
or
push
ficomps
jno
lcall
xorb
test
xchg
js
frstor
les
outsb
mov
inc
vmovq
lret
add
mov
in
dec
insl
fistl
mov
sahf
inc
incb
mov
cmp
cltd
ret
je
fdivrs
or
cmp
push
sbb
pop
and
ret
aaa
roll
mov
jl
lea
lds
push
outsb
jl
adc
nop
cwtl
les
sbb
iret
int3
sbb
xor
loope
pop
mov
xor
arpl
mov
jg
xchg
sub
jo
mov
out
cmp
fnstenv
inc
test
add
out
aam
ds
sbb
cli
add
push
outsl
jb
cmp
jmp
imul
call
fwait
push
fmull
adc
stos
iret
jns
rorl
cmp
sbb
cmp
cmp
inc
sbb
or
cs
shr
inc
cltd
mov
aad
test
out
sti
aas
mov
scas
out
cld
xorb
divb
lock
mov
fiaddl
cmp
sub
test
push
call
sub
jp
stc
push
js
push
imul
andb
inc
repnz
out
push
fsubs
add
mov
and
ja
jbe
dec
hlt
xor
mov
dec
ret
lock
std
jle
addl
adc
fs
aas
cmpsb
push
pop
mov
xor
pop
jp
xor
ret
jns
in
sti
imul
mov
lods
daa
mov
loop
xor
mov
in
cmc
sub
lods
sarl
in
sbb
repz
jb
mov
in
xchg
insl
add
cs
push
lock
out
sbb
xchg
jo
clc
sbbb
mov
fcmovb
jne
test
movsb
int3
jne
sbb
aam
or
dec
loopne
pusha
push
fwait
push
push
dec
xorl
bound
adc
cmp
xorl
fisttpll
mov
stos
dec
adc
orl
push
push
mov
call
clc
add
shrb
and
addr16
leave
scas
pushf
mov
ret
sbb
jae
mov
in
mov
push
pop
cmp
push
mov
or
lret
mov
faddp
xchg
outsl
mov
sub
in
mov
xor
xchg
pop
lret
xor
inc
xor
out
cli
lret
stos
fmull
pop
xor
rolb
idivl
hlt
popf
cmpl
mov
mov
ret
pop
dec
jmp
insl
jge
or
nop
cmp
jne
add
and
push
and
cwtl
or
ljmp
pop
hlt
hlt
js
mov
add
and
push
fcmovb
scas
test
pop
fldenv
adc
mov
imul
repnz
xor
mov
push
sbb
cmp
addr16
mov
mov
dec
aad
xchg
mov
pop
mov
mov
inc
sub
mov
pop
pushf
popf
pop
clc
fs
jl
or
jbe
jg
sbb
mov
add
ficomps
bound
iret
inc
add
or
inc
repz
and
push
in
xchg
icebp
ds
lcall
pusha
jecxz
test
jecxz
popa
lcall
and
xlat
sbb
aam
inc
jb
in
into
or
sbb
xor
mov
leave
push
push
adc
cmpsb
loope
xchg
icebp
push
push
jnp
sbb
stos
sub
dec
xlat
leave
sbbl
mov
jae
dec
push
pop
inc
sbb
subb
incl
leave
push
aam
out
rcrl
sarl
xor
cmpps
pop
push
aam
jecxz
cmp
and
ds
movsl
ss
decl
lds
sbb
jl
fs
shl
dec
xor
mov
dec
arpl
add
mov
xor
lcall
and
mov
mov
fs
jle
roll
dec
pop
cmpb
stos
dec
movsl
xchg
push
inc
jne
fwait
xor
jge
in
addr16
jae
pop
test
iret
push
inc
add
cmp
lods
pop
repz
adc
pop
sbbl
mov
outsl
jbe
inc
adc
add
mov
cmpl
ret
imul
pop
cmpsl
xchg
jp
xchg
or
mov
jecxz
adc
cmpsb
jmp
mov
aas
call
xchg
shlb
inc
lret
xor
and
ds
cmp
repz
shrb
lock
mov
scas
sub
fsubrs
movsl
lret
mov
and
jno
inc
imul
test
ret
push
sti
dec
xor
cmpsb
das
push
cwtl
xchg
jl
lret
cmp
cmp
hlt
sahf
mov
shrb
out
fildll
cmp
add
cmpb
pop
fstl
jmp
push
cmp
fdivl
scas
fwait
push
cmp
hlt
fildll
ds
out
gs
addr16
bts
jnp
test
mov
lret
pop
pop
push
mov
jne
pop
mov
incl
mov
pop
mov
push
lret
std
data16
mov
ds
push
inc
jecxz
jl
jge
push
mov
push
data16
dec
and
and
mov
pop
xchg
pop
push
sbb
pop
ja
xchg
mov
mov
xchg
jbe
lods
scas
cmp
mov
lcall
sub
idivb
scas
lods
sbb
add
mov
mov
aam
mov
repz
add
xor
or
andl
pop
nop
fsubrl
in
mov
xchg
les
pop
sbbb
push
jo
cmpsb
or
enter
movl
ja
outsl
cmp
in
lret
dec
lret
addb
jnp
mov
pop
push
call
mov
popf
rcr
cmp
ljmp
xor
xchg
movsl
insl
mov
inc
jne
test
jmp
in
add
pusha
aam
dec
outsb
push
pop
inc
fistl
mov
je
mov
out
add
jne
addr16
mov
jl
pop
lret
cltd
loop
loope
mov
fcoml
pop
insb
sbb
mov
loope
xchg
mov
call
inc
jg
sub
xor
in
popa
mov
popa
and
mov
pop
stos
repnz
and
sbb
sub
sub
arpl
push
or
nop
repz
lcall
cwtl
add
dec
or
lcallw
test
xchg
adc
cmp
pop
into
movsl
hlt
stc
cs
mov
adc
test
xor
push
or
movsl
subl
mov
pop
adc
testl
and
imul
dec
sbb
insb
mov
divb
int3
bound
pusha
or
inc
fwait
mov
pop
xchg
out
cwtl
or
cli
mov
sahf
xor
daa
mov
pop
adc
in
xchg
repnz
addr16
dec
xor
iret
ljmp
bound
gs
aas
call
add
mov
mov
jge
imull
xor
dec
push
push
mov
and
jecxz
int
xchg
push
jecxz
loop
testl
push
imul
or
inc
xchg
cmpsb
xchg
adc
cmp
lds
andl
ret
cmp
inc
repnz
xchg
mul
jns
mov
bound
aas
xor
xchg
and
loop
dec
xor
popa
fistpll
mov
cmp
lods
mov
inc
mov
inc
movsl
cmp
mov
add
add
in
mov
dec
and
fidivl
stos
inc
sbb
cs
outsb
jmp
push
jecxz
adc
fistps
lods
insl
popf
xchg
pop
int
inc
and
jnp
enter
push
int
fldl2t
insl
rcrb
or
loop
dec
or
or
lock
stos
mov
jb
imul
aas
sbb
decl
clc
xchg
and
xchg
cmp
mov
in
push
dec
jmp
adc
insb
sub
cmpsb
inc
pop
mov
dec
jecxz
push
hlt
sbb
lret
cmp
imul
inc
hlt
adc
mov
jbe
or
mov
aam
scas
in
dec
sbb
mov
sbbb
punpckhwd
fdiv
cmp
add
add
fisttpl
pushf
cmpsb
mov
push
push
xlat
pop
stc
xor
aas
add
movsl
mov
mov
mov
push
sahf
je
or
xor
jne
mov
push
rorb
mov
mov
push
and
lods
into
sbb
jecxz
jo
push
cld
mov
fisttpll
jne
xlat
loop
lds
cmp
fdivs
sti
xchg
fnstsw
cmp
popa
push
frstor
les
mov
push
mov
rorb
dec
cmc
mov
out
jmp
xor
mov
push
jns
js
mov
xchg
loope
outsb
jg
lds
test
in
out
es
aaa
ljmp
mov
or
mov
xchg
mov
xor
sbb
rcr
push
lcall
cmp
xchg
cs
mov
add
out
jge
jo
push
pop
fsubrs
movsb
jg
or
push
js
test
mov
lock
or
xchg
rcll
xchg
cmp
jmp
pop
icebp
pop
push
fidivrl
pop
fwait
mov
mov
rcll
sti
cs
out
inc
gs
mov
bound
je
andb
cld
pop
les
add
sbb
fldcw
sub
dec
into
mull
mov
fsubs
fidivrl
test
jecxz
and
or
mov
jbe
xchg
test
popf
adc
or
xchg
iret
inc
inc
fdivr
xchg
loopne
pop
fistl
mov
enter
mov
frstor
das
insb
adc
imul
ret
fstps
mov
out
mov
in
sarl
dec
mov
jge
outsl
int3
push
sub
cmp
sbb
xchg
jle
and
sbb
sbb
sub
jecxz
pop
jp
gs
bound
push
roll
pop
aaa
fimull
sahf
xor
aad
arpl
sub
dec
mov
outsb
adc
jle
jbe
pop
pop
test
out
fsubl
test
adcb
cli
lret
shrb
int3
adc
hlt
ljmp
imul
xchg
pop
insl
sbb
jbe
mov
sbb
dec
mov
outsl
mov
sub
ss
mov
hlt
aas
jl
jmp
cld
lds
inc
xchg
sahf
push
push
mov
mov
ds
in
insb
aas
mov
inc
test
stos
arpl
jb
lds
dec
inc
xchg
xor
adc
cmpsl
std
mov
push
cmp
jno
mov
or
add
inc
jae
sbb
test
mov
mov
std
ja
es
jmp
pop
pop
dec
pusha
dec
shlb
sub
cmp
pop
ljmp
sbb
and
dec
in
jp
popf
cmp
mov
shlb
icebp
nop
push
dec
les
mov
into
add
aam
les
cmp
xor
lds
test
les
mov
cmp
sub
and
add
jb
jmp
xlat
cmp
loopne
out
cmp
in
xchg
jg
mov
fiaddl
insl
lds
jns
dec
and
xor
testl
dec
enter
aas
insb
es
lahf
jmp
arpl
je
push
scas
sub
push
adc
inc
lret
inc
pop
js
movsb
popf
lret
sbb
ret
lods
jecxz
pusha
sbb
jg
fisttps
idivb
imul
cld
aad
cmc
scas
adc
or
aad
popf
mov
or
roll
push
sub
stos
sub
dec
cs
sbb
or
or
movsb
cltd
sub
xchg
inc
jg
inc
mov
xchg
pop
push
cmc
popa
nop
add
sub
repz
test
push
out
movsb
mov
mov
pop
nop
or
and
in
inc
xchg
dec
idivb
je
jb
subb
inc
aad
scas
sbb
mov
jmp
cltd
arpl
mov
fsubl
push
jb
cld
orl
jmp
push
sub
add
cmp
jge
rcl
cmpsb
jns
or
lea
or
mov
jno
int
cmp
mov
es
nop
mov
adc
data16
incb
push
mov
aad
scas
xchg
fnstsw
lds
faddl
mov
push
lret
and
es
inc
rolb
inc
sbb
mov
mov
push
xchg
cmp
sub
jbe
jl
mov
stc
mov
pop
sub
repz
in
pop
call
sbbb
out
add
xor
cmp
xor
jecxz
and
jge
popf
adc
lret
mov
adc
xchg
jbe
cmc
add
into
mov
mov
mov
pop
test
test
out
xchg
out
mov
dec
push
and
leave
dec
inc
push
pop
xchg
ret
mov
ret
inc
mov
popf
in
sar
popf
popa
jp
pop
lods
add
xchg
cmpsl
jp
mov
sub
add
pushf
int3
cmove
je
push
xchg
pop
or
or
mov
xchg
inc
pusha
mov
in
mov
lds
call
orl
gs
push
fistps
push
fmuls
test
in
sete
jmp
dec
push
sub
cmp
mov
fwait
cwtl
sub
int
js
int3
fs
xchg
and
call
movsl
out
rcrb
testl
sahf
pop
xchg
push
hlt
not
lds
mov
out
rorb
arpl
in
inc
xlat
cmp
dec
sbbl
sbbl
loope
cmpsl
jge
movsl
push
sbb
stos
add
in
jle
aas
pop
addr16
fldl
mov
jnp
notb
pop
inc
ds
jle
sti
sti
ficompl
add
xchg
pop
sub
cld
mov
mov
adcb
sbb
mov
jmp
std
jle
insl
int
adc
inc
aaa
cmpl
popf
into
je
lret
sub
adc
cmp
cmp
pop
cmp
jge
adc
pop
mov
xor
pop
sub
outsb
add
add
cmpsl
and
jg
mov
mov
in
test
pop
xor
fidivrl
dec
enter
popf
jge
test
les
add
jns
int
mov
out
sub
das
fwait
arpl
lock
pushf
xchg
fisubrs
shll
push
js
pop
mov
xor
add
pop
hlt
sti
mov
out
sbb
cmpsb
push
fsubrs
fisttpl
fmuls
clc
sbb
add
add
mov
les
sub
push
jno
jae
xchg
jo
or
out
mov
jo
sub
mov
mov
dec
jmp
mov
mov
and
inc
movsl
sbb
dec
push
xchg
cmp
dec
sub
xchg
hlt
sbb
pop
mov
in
scas
xlat
inc
mov
sti
or
jle
dec
jb
rolb
imul
lds
jp
jnp
repz
mov
repnz
aas
cwtl
dec
mov
movb
repnz
xor
test
pushl
or
push
rcll
bound
push
cmpsb
outsl
idivb
lea
mov
cld
push
fildl
xor
cmp
push
sarb
ret
icebp
mov
mov
mov
push
clc
cmp
in
insl
sub
jmp
pop
inc
lods
in
aaa
adc
mov
jo
dec
scas
mov
adc
sbb
jne
pusha
xchg
aad
ja
jno
xlat
repz
scas
pop
cltd
daa
mov
and
mov
mov
adc
cmp
sub
sub
insb
pushf
lcall
mov
xchg
mov
out
sub
stos
clc
jp
add
arpl
data16
sbb
jnp
addb
pop
pop
dec
pop
lods
jle
loop
pop
aaa
out
sub
sbb
bound
gs
mov
pop
jbe
arpl
ffree
xor
lea
icebp
fdivrp
push
add
aam
mov
jae
jle
mov
adc
icebp
sub
test
gs
lds
fdivp
ljmp
test
ja
push
xor
ds
int
inc
sub
fistl
push
pop
lcall
mov
and
push
xor
lods
movsb
lds
mov
imul
std
dec
mov
inc
fmul
mov
cwtl
ds
rorl
push
push
cmc
jmp
inc
clc
fsubrs
mov
shr
adc
dec
fdivrs
sub
in
icebp
push
hlt
rcrb
push
cmp
lds
jecxz
jo
aaa
mov
xor
ss
call
test
call
cmpsl
xchg
mov
mov
mov
or
ss
pop
aas
enter
mov
addl
or
lret
xlat
pushf
sub
adc
push
mov
mov
dec
stos
lods
inc
decl
mov
sub
dec
addl
mov
pusha
in
insb
sub
or
jbe
es
fimull
push
add
adc
add
lcall
mov
stos
jecxz
jae
in
jnp
pop
pusha
cltd
stos
add
lea
mov
pushf
pushf
sub
add
and
fimuls
orb
shlb
sub
sub
gs
stos
adc
movsb
fldcw
dec
pop
sbb
xchg
ljmp
mov
push
add
inc
fldcw
bound
mov
into
daa
mov
test
shlb
outsb
mov
and
pop
mov
leave
and
and
fadds
and
cmpsb
icebp
imul
cmpsl
test
xor
dec
mov
iret
mov
outsl
je
daa
dec
and
rol
shrb
mov
and
push
scas
xchg
mov
or
std
cmp
jnp
imul
xchg
rol
test
cld
xchg
loop
dec
jl
gs
dec
jge
jne
sarb
lock
and
sbb
test
inc
inc
test
push
mov
mov
mov
stos
pop
repnz
mov
aam
mov
ds
xchg
xchg
jae
jg
aad
sub
push
leave
jg
imul
imul
jmp
rcr
push
inc
sbb
leave
mov
and
mov
cld
mov
rclb
xor
lret
lock
aas
inc
mov
sub
aad
cmp
adc
dec
jmp
xorb
hlt
push
cld
movsl
aad
mov
push
push
dec
stc
xor
jbe
fcmovnbe
and
aaa
movsb
int
lret
jne
add
mov
add
mov
mov
sbb
out
mov
cmpb
jne
xchg
stos
cmp
js
push
xchg
xchg
sti
push
test
stos
xchg
popf
cli
dec
add
adc
ret
scas
std
jb
jmp
lret
fstl
mov
ljmp
call
cwtl
push
push
mov
dec
mov
int3
test
in
popf
xor
ljmp
jno
fnstsw
enter
push
inc
bound
inc
fs
push
mov
or
movzwl
out
outsb
sub
sub
ja
loop
shlb
or
cmpsl
shlb
std
jmp
add
mov
ss
push
test
sub
daa
inc
imul
clc
push
je
sub
cmc
mov
iret
cltd
add
push
xchg
aad
pop
mov
sub
push
ret
cmp
test
mov
push
fisubrl
daa
sub
roll
jge
jl
mov
insl
faddl
mov
out
lcall
xor
xorb
adc
mov
cltd
xlat
es
sub
inc
push
dec
and
divb
mov
add
add
pminub
dec
mov
xchg
jb
out
push
cmpsl
mov
mov
mov
mov
sbb
mov
fs
data16
pushf
lahf
out
cwtl
test
jl
inc
int
jnp
dec
dec
rorb
hlt
cld
out
or
lods
out
sub
shr
xchg
stc
push
and
fstps
lods
stos
cmpsb
shrb
push
xchg
outsb
dec
repz
jae
mov
mov
mov
inc
mov
add
add
mov
mov
dec
sub
lods
outsl
scas
fiadds
cmpb
jae
jp
lahf
jno
int
jg
aam
fs
mov
movsl
dec
mov
and
pop
lret
push
jp
loopne
xchg
je
jae
outsl
push
inc
xlat
ret
movsl
adc
call
xlat
mov
loopne
es
mov
mull
push
adc
and
mov
outsb
add
scas
call
out
xchg
popf
fadds
js
daa
incb
popf
push
movsl
cltd
jb
rep
data16
dec
das
and
fisttpll
mov
cs
xchg
int3
aad
repz
scas
adc
push
shlb
insb
sbb
pop
pop
xor
bound
add
dec
in
pop
fcom
push
cmp
mov
stc
enter
jb
add
push
or
data16
xor
cs
push
lds
inc
aad
xor
xor
test
sbb
xchg
mov
xchg
xchg
mov
in
push
mov
add
test
add
int3
rol
int3
int
lcall
xchg
das
sbb
hlt
test
popf
pop
or
loope
mov
jg
push
dec
outsl
jmp
mov
push
dec
mov
mov
sbb
inc
and
hlt
add
int3
jmp
rcrl
push
sbb
lcall
mov
inc
cmpsl
je
push
cli
dec
iret
pop
xor
cmp
popf
lret
addl
int3
mov
js
inc
popf
add
mov
add
cmp
adc
test
mov
jp
es
addr16
les
les
in
ljmp
cmp
jmp
sbb
mov
shl
testb
out
iret
xor
jmp
ja
sbb
pop
sahf
mov
jge
inc
ja
jb
mov
outsl
cmp
xor
sbb
xchg
xor
movsl
in
mov
in
pop
das
mov
or
mov
orl
arpl
in
jle
or
jnp
sbb
inc
cs
ljmp
mov
cmpl
aaa
pop
addr16
adcl
jmp
jecxz
mov
xor
enter
or
xchg
pop
pop
adc
pop
enter
movaps
push
fbld
movsb
dec
add
pop
mov
mov
fucompp
add
fcmovnu
out
data16
fstl
mov
int
push
aaa
push
dec
mov
push
xor
insb
sbb
testb
xchg
and
cld
add
sti
fildl
imul
xor
rorl
jle
mov
add
jmp
hlt
inc
push
fidivl
arpl
call
bound
pop
out
push
jl
jl
aas
cmp
adc
lahf
jp
pop
dec
faddl
push
inc
into
mov
shlb
push
inc
and
imul
dec
adc
repnz
call
loop
loopne
jmp
or
sbb
sbb
jg
mov
adc
arpl
hlt
add
xor
push
movsl
mov
jp
pop
inc
stc
xor
shlb
jae
xorps
idiv
sub
inc
dec
dec
and
push
pop
je
adc
outsb
fs
mov
adc
or
mov
sahf
mov
push
push
xchg
bound
inc
mov
adc
inc
dec
mov
fiaddl
gs
lret
inc
push
sbb
pop
stos
pop
rorb
icebp
inc
pop
jle
sub
hlt
imul
mov
push
dec
cmp
int
or
xorl
ret
imul
fnstsw
inc
rorb
push
arpl
dec
insl
scas
cld
scas
pop
lods
outsb
pop
mov
or
xor
sbb
test
rorb
cli
arpl
out
or
aad
xor
dec
xchg
pusha
popf
std
fcompl
ret
dec
or
mov
loop
sub
and
xchg
adc
test
das
ss
dec
dec
outsl
adcb
push
test
mov
pusha
xchg
mov
push
js,pn
dec
out
ret
cmpsb
and
sarl
call
iret
cmp
jl
jecxz
ss
ja
hlt
xchg
cmp
sbb
jns
sti
mulb
pop
jecxz
iret
xchg
xlat
pop
mov
adc
shr
fidivs
scas
lock
ret
fdivrp
mov
xor
sub
mov
stos
dec
out
xchg
into
dec
push
jge
repz
inc
xchg
cmp
sub
sbb
jae
jl
sbb
out
lahf
decb
lods
ja
push
aas
loopne
pop
mov
pusha
imul
dec
mov
test
or
addr16
push
pop
mov
cmc
in
sub
std
pusha
xchg
imul
adc
imul
inc
xor
es
pop
mov
and
mov
sbb
fdivs
cs
push
leave
repz
xchg
jo
mov
push
pminub
in
sahf
filds
jo
repz
xor
push
rcrl
iret
xor
fs
xchg
fisubrl
push
imul
push
xchg
je
fidivl
lahf
fcompl
adc
mov
adc
sbb
loope
push
sbb
daa
cld
xchg
jb
jbe
xchg
das
loope
fdivp
sub
lods
lcall
ret
cld
loope
popa
sbb
pop
mov
cmpsb
es
add
iret
push
xchg
adc
push
mov
xchg
mov
in
insl
inc
mov
jae
popf
sahf
cmpsl
shl
lret
mov
xor
repz
jno
push
in
push
xchg
sub
aad
mov
pop
mov
sbb
inc
xor
fnsave
shrb
imul
hlt
test
mov
stos
push
iret
dec
mov
scas
movsb
les
sub
ss
aas
or
pusha
outsb
mov
xor
enter
push
out
cld
sbbl
xchg
scas
mov
enter
stos
jecxz
popa
and
sbb
mov
inc
test
sub
or
push
jnp
fcomps
pop
or
aaa
imul
xor
jp
lcall
lock
movsb
dec
popf
lcall
cwtl
loopne
push
push
add
pop
sbb
ret
jnp
pop
push
popa
sbb
fsts
dec
xor
adc
jo
adc
or
and
push
and
sub
js
push
adc
out
shll
sbb
jp
xlat
jecxz
mov
test
mov
movsb
add
sub
jecxz
mov
push
push
mov
xor
out
inc
hlt
sub
fdivrs
dec
cmp
cwtl
ljmp
inc
pop
push
imul
push
xor
popa
insl
sub
xchg
sbb
clc
push
cs
xchg
xchg
je
dec
mov
add
mov
aam
cs
sahf
in
jne
decl
int
lea
xor
cld
mov
fidivrl
xchg
sbb
out
jbe
orb
insl
test
fidivs
sbb
sbb
sahf
repnz
push
mov
inc
inc
es
repz
xchg
cmp
sbb
aad
adc
xchg
push
into
roll
frstor
rorb
test
cmpsb
mov
xchg
add
loope
sub
sahf
pop
nop
push
notb
vorpd
nop
shll
xchg
out
jg
incl
ja
lock
js
dec
lods
rcrb
andb
sbb
cmpsl
jb
and
inc
in
pop
cwtl
lods
jae
pop
push
jle
invd
ljmp
or
enter
sbb
sarb
mov
inc
xor
fnstenv
mov
jg
bnd
push
jg
lahf
jle
addr16
outsl
aam
je
inc
test
dec
sub
test
or
mov
jg
pop
test
xor
js
mov
sub
aam
fiadds
pusha
xchg
lahf
xchg
lret
daa
push
out
pop
gs
xor
mov
push
mov
sahf
mov
jno
mov
arpl
jle
push
aaa
je
pop
aaa
leave
or
cmp
or
sti
inc
push
imul
lock
push
popf
add
mov
or
pop
sbb
into
and
scas
xor
fwait
mov
stos
or
das
loope
movsb
rcrl
and
cwtl
fwait
divb
mov
adc
scas
cmpsb
or
xchg
xor
inc
int
cmpb
lock
out
push
push
sbbl
inc
cmp
push
mov
mov
icebp
inc
das
rcl
push
push
rorl
lea
outsb
or
je
ja
and
idivl
mov
fadds
jp
scas
inc
fs
xor
rol
push
and
jnp
ljmp
loop
and
xor
mov
clc
mov
in
push
fldcw
pop
dec
cmp
insl
push
and
pop
dec
adc
mov
and
push
mov
rorb
sbb
mov
test
sbb
inc
in
xchg
mov
daa
xchg
sti
dec
pop
inc
pop
cmp
test
das
mulb
shll
xor
jecxz
lret
or
ljmp
dec
sarl
scas
or
int
dec
inc
ds
std
inc
add
test
cltd
ret
es
nop
ret
xchg
add
addr16
stos
sub
inc
and
add
cld
hlt
cltd
cltd
cwtl
xor
notb
jmp
mov
pop
jo
xor
popl
sub
sbb
sub
inc
xchg
xchg
test
negb
lods
gs
pushf
or
jp
sub
fs
mov
pop
inc
sub
jbe
in
fcmovnu
lds
repnz
das
lcall
pminsw
jmp
xor
loopne
std
mov
jne
mov
mov
sbb
push
int3
mov
scas
sub
adc
rcll
or
pop
sub
sub
dec
bnd
sar
mov
daa
push
lcall
lea
icebp
push
or
div
pop
iret
xor
mov
jne
and
addl
es
adc
or
push
push
add
fistpl
sbb
xor
inc
lahf
fsubl
push
out
dec
mov
ret
movsb
sbb
push
call
adc
push
xchg
dec
addr16
sbb
mov
scas
mov
or
fs
out
xor
sub
mov
lods
imul
cmpb
popa
mov
xor
fwait
mov
idivb
nop
or
lcall
lret
mov
sbb
and
push
fs
push
cmp
mov
pop
test
jbe
cmp
daa
popl
ljmp
xchg
loop
adc
mov
add
subb
inc
or
outsb
sbb
or
cmpsb
cwtl
jns
test
test
leave
lods
insb
aas
lcall
loopne
loop
push
aad
mov
jae
gs
sar
cmp
lds
and
ficomps
jmp
and
lds
sub
insl
in
test
push
in
insb
pop
loop
test
pusha
dec
and
test
nop
imul
pushf
cmp
cmpsb
test
inc
jge
pop
cltd
stos
and
scas
pop
leave
jg
push
insl
in
inc
cmc
cmpsl
into
fadd
popf
rol
fbld
and
push
xchg
jnp
dec
pop
push
jp
inc
add
clc
repz
fidivl
or
rcrl
arpl
and
ljmp
js
ficompl
dec
or
arpl
and
or
jbe
in
repnz
icebp
aad
push
pop
and
int3
cmp
pop
aaa
pop
and
jmp
js
mov
push
xchg
lret
dec
add
xchg
addb
and
lock
jne
inc
sub
mov
idivb
sub
rcrb
dec
and
xlat
pop
fdivrs
jmp
repnz
mov
outsb
icebp
mov
cli
lock
test
add
sub
arpl
outsl
pop
mov
or
icebp
mov
push
lcall
jnp
pop
xchg
xchg
fmull
rcl
scas
fimull
aas
cmpsl
fwait
push
clc
popa
cmp
adc
or
popf
scas
push
sbb
sub
inc
xor
cmc
mov
sub
roll
fdivr
xlat
mov
dec
push
roll
xor
or
push
mov
outsl
mov
cmpsb
dec
js
jb
cmp
fiadds
sti
xor
cmc
dec
inc
sbb
xchg
je
jb
lret
sti
loop
inc
and
pushf
das
jge
fbstp
pop
xorl
inc
push
pushf
incl
mov
xchg
insb
enter
daa
push
fstps
dec
cld
jg
pop
adc
mov
dec
inc
mov
aam
imul
in
adc
das
push
inc
sub
add
cmp
xchg
cmp
mov
in
pop
sahf
loopne
cmc
je
call
out
nop
xchg
movsb
xchg
inc
mov
xchg
je
add
dec
pop
push
or
pop
jmp
fstpl
push
aam
shlb
pop
add
lret
es
mov
cltd
mov
and
cmpsb
inc
cmpsl
adc
repz
in
push
jge
lock
aaa
scas
xlat
popf
cmp
roll
aam
cli
and
xchg
cmpsl
mov
mov
mov
hlt
and
xor
in
dec
dec
pushf
push
sbb
mov
cmpsb
test
inc
pusha
mov
rcrl
dec
sub
push
sub
jno
adc
addr16
adc
pop
cmpsb
das
or
sub
int3
jmp
xor
in
or
lahf
aaa
and
dec
fisttpll
xor
lea
shl
in
outsl
cwtl
inc
out
and
xchg
jae
scas
lret
jmp
cmpsl
icebp
das
mov
lret
jmp
push
insb
insb
cwtl
mov
lcall
inc
mov
dec
and
scas
ja
push
sarb
stc
inc
fcoml
testb
fisttps
movsl
sub
fwait
je
test
mov
loope
out
mov
lret
jo
add
mov
loope
adc
inc
xor
mov
or
das
test
stos
sbb
jp
sub
loopne
ja
cmpb
insb
push
int3
pop
aad
inc
mov
jae
mov
and
hlt
sbb
mov
or
inc
movsl
cmp
jo
and
inc
ljmp
push
lcall
outsb
xor
inc
inc
fs
xor
ja
ljmp
sbb
or
in
daa
rsqrtps
jmp
shrb
xchg
or
dec
adc
push
fbld
aam
int3
cld
mov
pop
aam
add
dec
add
push
cmovp
jge
cs
out
sbb
lcall
fildl
inc
inc
push
jns
andl
fbld
loop
shll
ss
xchg
aaa
hlt
mov
adc
ljmp
mov
xchg
cmp
loopne
or
ljmp
insb
xor
mov
ficoms
pop
test
add
cs
or
xorl
pop
and
jle
inc
and
test
fdiv
pop
stos
or
in
add
cmp
mov
cmp
outsl
aam
and
movsb
dec
dec
mov
add
mov
mov
jno
push
adc
cmc
adcb
and
loope
lods
or
dec
jns
jb
mov
jo
sub
adc
inc
into
bound
leave
movsb
fdivs
dec
ljmp
pop
daa
sub
jnp
adc
aaa
idivl
ret
repz
dec
inc
mov
mov
jbe
leave
int3
invd
in
adc
in
pop
fbld
fwait
movsl
xchg
pop
xchg
mov
mov
bsf
jne
test
outsb
je
push
or
mov
cwtl
dec
ret
push
rcl
jmp
pushw
or
lret
cwtl
adc
mov
cltd
clc
scas
mov
mov
and
or
std
lret
xchg
xchg
jle
lods
sub
push
sbbl
sarb
loope
test
mov
psraw
sub
pop
shrb
adc
add
mov
adc
icebp
xchg
jbe
mov
pop
lahf
mov
add
ljmp
ja
push
lea
loop
fwait
mov
add
aam
sub
ror
and
iret
cmp
push
add
xor
arpl
movsl
mov
sbb
adc
jb
ret
sahf
dec
cmp
sbb
imul
mull
out
or
insb
mov
cmp
lret
arpl
or
inc
adc
cld
and
adc
shll
pusha
add
cmpb
add
int
push
and
jns
mov
dec
xor
xchg
cmp
adc
je
cmp
shlb
jnp
rorl
into
frstor
jge
cmp
fistpll
jo
xchg
pop
imul
rclb
test
or
enter
movsl
cld
imul
call
pop
inc
inc
mov
adc
inc
sbb
mov
icebp
pop
mov
mov
sbb
push
ret
test
gs
in
cmp
xor
call
les
dec
gs
mov
mov
mov
scas
gs
sub
jge
pop
clc
lea
ds
xchg
dec
push
or
push
mov
jb
hlt
xor
pop
lret
mov
cmp
mov
push
mov
push
in
out
sbb
inc
jmp
rcrl
sbb
mov
jle
mov
das
cmp
outsb
je
popa
push
test
out
mov
loopne
mov
push
mov
stos
push
in
sub
bnd
ffreep
mov
out
xchg
or
jg
mov
iret
pop
xor
les
pop
movsb
sub
adc
rol
iret
fs
in
mov
daa
push
push
je
ret
addr16
xchg
cmp
jle
shll
cmp
xor
or
stos
jecxz
cmc
rep
xbegin
movsl
push
fisttpll
cmp
xchg
push
xchg
pop
and
mov
movsb
std
lea
out
pop
in
sbb
stc
scas
outsb
mov
fnstsw
xor
mov
pop
aaa
pusha
xchg
mov
popf
dec
outsb
jne
dec
daa
rorl
lret
in
or
cs
ret
leave
gs
aad
cs
cs
jge
add
mov
into
addb
daa
push
loop
mov
push
add
jne
adc
cwtl
push
es
jecxz
or
fwait
ja
xchg
in
leave
inc
cmp
jp
adc
dec
loop
mov
jg
fldt
pushf
and
mov
push
add
or
jbe
lcall
out
push
push
sarb
xchg
mov
mov
jns
lcall
in
aaa
gs
test
stos
pushf
push
scas
in
xor
mov
or
sub
mov
out
ds
enter
jl
mulb
fadd
inc
pop
or
jo
in
arpl
jbe
scas
stos
jae
mov
xchg
push
pop
xchg
sbb
fsubr
inc
sub
jecxz
test
and
jo
arpl
inc
insb
iret
sbb
add
imul
ja
sub
cmp
pusha
ss
ret
in
or
jne
aaa
movsb
sub
nop
dec
mov
push
add
js
fcomip
xchg
fdivp
jo
add
in
in
jb
mov
add
das
ret
dec
or
xor
dec
data16
fsubl
std
fisubrs
sbb
xchg
inc
aaa
cmp
es
cwtl
mov
push
adc
push
dec
sub
pop
scas
aad
push
test
insl
mov
mov
dec
pusha
cld
inc
rcll
ja
bnd
insb
popf
pop
fidivs
hlt
and
cwtl
stos
mov
jp
push
out
jg
andb
imul
std
mov
aas
xor
sarb
insb
ss
icebp
pop
cmp
arpl
ja
sub
cpuid
mov
sub
push
rclb
add
js
shlb
fcmovnbe
xor
mov
pop
call
orl
test
add
js
test
xor
and
fdivrp
divps
mov
arpl
push
popf
ret
xchg
fptan
xchg
mov
test
add
inc
popa
xlat
mov
dec
or
fildl
cmc
sbb
jp
or
test
scas
pop
mov
xor
dec
mov
sahf
repnz
jecxz
inc
orl
pop
mov
dec
adc
das
loop
or
repz
sti
adc
mov
jg
pop
dec
pop
dec
and
push
lcall
loop
mov
mov
mov
mov
cmc
mov
jo
nop
call
inc
xlat
and
inc
mov
ret
outsb
mov
mov
ljmp
pop
insb
xchg
cmpsl
rcr
addr16
pop
xchg
xchg
and
imul
jo
in
lods
scas
add
inc
dec
in
push
fnstcw
out
sub
pop
jbe
jns
pop
in
aaa
aad
scas
sti
jb
mov
dec
xor
ss
int
scas
imul
sahf
jo
mov
insl
lret
jg
xchg
or
clc
ljmp
pop
sub
daa
repz
jo
daa
jbe
dec
or
xor
mull
sub
ds
shll
ficoms
test
inc
sbb
mov
add
and
in
cmp
lods
mov
stos
es
xor
or
push
cmp
icebp
hlt
push
inc
scas
scas
into
gs
adc
daa
or
mov
sub
insb
mov
mov
mov
lahf
mov
popf
cmpsl
mov
test
outsl
cmpsb
inc
scas
cmpsl
stos
out
out
adc
inc
popa
mov
out
pushf
pop
mov
and
and
mov
orb
cmp
orl
ret
adc
callw
push
pop
and
push
mov
mov
mov
adc
sbb
mov
out
popa
imul
mov
inc
or
xchg
fldcw
sbb
js
add
test
pop
push
rcrl
xchg
xchg
xor
and
shlb
or
push
jg
xor
pop
rcrl
cmc
lret
jl
in
dec
inc
mov
mov
xchg
clc
into
shrb
cmp
sahf
call
mov
call
inc
mov
cld
adc
lcall
add
and
jmp
adc
pop
jl
ror
push
pop
and
inc
test
paddb
pop
daa
mov
scas
loope
rorb
fstps
or
jl
cld
and
and
xlat
mov
pop
lcall
les
jmp
fcmovne
pusha
data16
push
dec
lock
push
push
sub
xor
loop
add
add
pop
jns
int
scas
xchg
imul
cmc
xorb
aam
pop
mov
jge
gs
ja
mov
dec
out
out
std
fisubl
push
and
dec
adc
adc
mov
mov
cmc
sbb
mov
xchg
xor
pusha
sub
idivl
popa
mov
jns
fidivs
jp
nop
call
cmpsl
fcomip
mov
or
xor
in
adc
andb
aad
addb
push
push
push
aaa
push
jb
sub
push
popa
mov
ret
iret
out
add
pop
pop
rolb
dec
cwtl
and
mov
and
xchg
push
pop
outsl
inc
mov
lock
or
dec
sub
mov
rep
dec
jmp
cld
js
mov
bound
jb
push
xor
cmp
idivl
xor
adc
fildll
xchg
lret
xchg
jnp
arpl
mov
outsb
gs
jp
nop
flds
test
ja
jge
ljmp
js
xchg
stos
sarl
xor
lods
pushf
loop
xor
std
add
mov
sub
add
in
imulb
and
push
fdivl
pop
mov
andb
movb
xor
xor
aaa
ficompl
out
mov
data16
insb
lret
dec
popa
or
dec
pop
push
ret
mov
les
jne
adc
adc
adc
aaa
into
cmp
mov
add
es
and
push
add
mov
pop
call
push
sub
cmp
jp
jno
pusha
sub
dec
rorb
dec
add
mov
ljmp
xorl
mov
in
add
push
jge
test
adc
sub
jae
mov
pop
cwtl
pop
pop
push
out
arpl
inc
adc
xchg
jno
inc
sub
cmp
js
rorl
imul
inc
test
or
mov
push
scas
fidivs
mov
ficompl
mov
cmp
imul
jo
xor
cmpsb
push
loopne
stos
xor
in
cld
jecxz
stos
push
xchg
scas
sbb
sarb
out
clc
sub
push
movsl
loop
hlt
pop
jbe
inc
adc
out
loop
das
mov
icebp
mov
mov
fucomip
ds
daa
lcall
adc
fs
sub
call
test
fcmovu
fcmovnb
call
fwait
mov
xor
orb
mov
out
lds
or
fdiv
in
jne
cmp
arpl
pop
enter
push
jae,pt
dec
fidivl
mov
mov
ret
and
jmp
cmpsl
sub
jmp
std
xor
or
in
stc
data16
mov
xchg
pop
stc
mov
roll
push
addl
repnz
test
fmuls
inc
mov
and
xor
test
addw
shr
lods
in
ds
mov
fcmovu
leave
jge
lret
sub
lahf
adc
mov
inc
push
cmp
mov
shrl
mov
adc
cmp
jecxz
dec
testb
addb
ss
mov
mov
ds
int
lahf
insl
pop
inc
mov
push
jns
xor
xchg
jns
mov
or
pop
jae
popa
push
mov
inc
jle
out
add
adc
or
mov
push
sub
sub
ja
push
push
repz
pop
sub
pushf
repz
dec
mov
push
pop
mov
inc
xchg
in
jp
into
cltd
jl
xchg
insl
push
jecxz
push
fistl
mov
sbbl
scas
and
dec
pop
push
mov
xchg
jl
iret
xchg
dec
sub
push
inc
adc
ds
lea
xchg
jbe
xlat
cltd
or
insl
nop
data16
lods
xchg
icebp
jae
movsb
sbb
mov
sub
js
pop
xchg
xor
dec
in
in
pop
add
sbb
adc
mov
mov
add
push
clc
inc
mov
ret
pop
shlb
sti
pop
dec
movsb
jo
rcl
ljmp
sbb
nop
loop
lds
test
movsl
push
lods
mov
test
lret
fisttpll
out
imul
outsb
add
xchg
pop
mov
into
jmp
je
shrl
xchg
adc
xchg
xchg
sub
jle
dec
mulb
out
into
das
lock
test
jno
add
add
scas
xor
mov
sahf
jb
inc
pop
adc
sub
jno
push
and
xor
aaa
sbb
movsl
stos
ja
mov
or
dec
push
leave
aaa
adcl
stos
and
jge
enter
insb
sti
repz
ret
scas
in
adc
push
or
lret
pop
into
testl
push
fcmovnb
mov
cmpsb
pmullw
dec
das
and
xchg
xchg
mov
repnz
jne
int3
pop
dec
inc
aas
out
shlb
xchg
jl
or
jp
xor
xchg
push
stc
sbb
out
lods
ja
cmp
mov
lret
mov
mov
out
push
dec
dec
inc
testb
int3
stos
or
mov
pop
sub
jecxz
or
push
jnp
ds
jne
push
cld
int3
pop
pop
jbe
push
out
or
xor
in
push
nop
lcall
xchg
push
pop
js
imul
fldl
std
stc
or
pop
push
sub
imul
out
inc
push
jmp
sbb
sbb
sahf
jns
mov
and
adc
sti
mov
fistpll
and
mov
popa
inc
pcmpeqb
out
dec
adc
shr
xchg
insb
lock
mov
xchg
rcr
out
fisttpl
sti
rolb
or
stos
adcl
fnstsw
ret
sub
pop
rcrl
inc
test
cmpl
fcoms
jmp
test
ret
das
pop
xchg
cwtl
aam
push
pop
inc
xchg
loop
rep
dec
add
push
std
es
jmp
int
sub
cmc
sub
push
sti
cmpsl
mov
inc
aas
jl
sti
or
pop
divl
push
xor
mov
jmp
sub
jnp
lahf
cmpsl
cmpb
int
pusha
fs
xlat
loope
and
xchg
sbb
pop
xchg
sub
ss
movsb
loopne
push
jle
in
imul
test
in
ret
cltd
sub
lds
mov
or
inc
lods
pop
mov
shl
stc
int3
xor
cmp
push
fmul
mov
daa
movsb
int3
mov
mov
jb
rcrb
pop
scas
icebp
cmp
xacquire
loop
push
outsl
mov
mov
cld
imul
and
fwait
mov
fdivl
outsl
or
inc
fwait
inc
es
and
and
negl
inc
addr16
ss
or
mov
das
test
and
mov
insb
jl
push
mov
cli
mov
in
popf
sbb
jno
ja
dec
jecxz
mov
xlat
insb
fildl
scas
jb
xor
adc
nop
add
scas
mov
jp
cmp
xchg
popf
fistpl
add
dec
in
rcll
pop
mov
mov
push
push
int
ja
in
movsb
popf
push
mov
cs
pop
aas
in
imul
sub
push
push
adc
sbb
pop
jnp
mov
mov
dec
lcall
scas
outsl
dec
idivl
dec
adc
xchg
or
repnz
outsb
dec
cli
out
out
mov
mov
inc
sbb
roll
out
adc
xchg
sbb
pop
or
adcb
sti
add
mov
sub
int
xchg
loopne
cli
adc
or
pop
sbb
rclb
lods
jecxz
sti
xor
xchg
mov
pop
daa
jo
mov
mov
or
add
mov
loope
mov
mov
mov
fisubrl
fidivrl
push
push
jns
ret
stos
mov
mov
rorb
out
pop
int
inc
test
out
in
inc
pop
push
inc
jnp
xlat
xor
push
int
fsubl
jg
lock
sbb
rol
mov
mov
enter
add
mov
cmp
lods
inc
mov
rorl
fstps
fdivr
fnstcw
in
or
repnz
adc
jle
out
scas
inc
inc
test
int3
popf
fdivrs
or
out
insl
pop
mov
out
fimull
push
test
aam
push
lret
cli
or
adc
cmp
loope
mov
or
addb
std
adcl
mov
imul
mov
mov
push
das
aam
fnstcw
lret
jo
push
mov
ds
mov
fstl
icebp
mov
xchg
lock
cld
rolb
stc
lcall
leave
xchg
pop
scas
xchg
call
jo
data16
rcll
adc
jp
ljmp
inc
mov
loope
adc
aas
xor
xchg
jae
fimuls
pop
xor
fistl
lods
xor
jne
cs
loopne
cmc
dec
daa
int3
pusha
ss
push
outsb
lock
mov
and
lods
out
test
jl
loope
shrb
sar
jno
and
inc
fists
adc
jbe
mov
fistpl
movsl
xchg
enter
mov
jp
dec
xchg
cmp
pushf
in
sub
int
cmp
rcl
cmp
negb
nop
insl
call
sbb
popf
ret
jg
jo
aad
sbb
dec
xchg
and
sub
in
and
out
xor
bound
cmp
lret
add
arpl
jbe
aas
stc
lock
mov
push
pop
bound
xorl
cwtl
sub
lods
inc
sub
in
stos
dec
iret
data16
shrl
xchg
jb
pop
mov
sub
adc
scas
in
jo
iret
lret
gs
or
mov
popf
push
sbb
outsl
mov
mov
push
and
iret
jne
rcr
outsl
inc
and
mov
aas
sub
imul
ss
std
mov
jo
and
jmp
sbb
push
fcoml
xor
jge
call
add
mov
or
lahf
and
test
sbb
add
sub
dec
test
cmp
xlat
insl
xor
call
mov
jl
test
lods
xor
xchg
mov
mov
and
in
sub
out
and
stos
popf
fimuls
xchg
insb
in
out
pop
mov
cmp
fwait
jp
adc
or
push
test
sbb
jnp
or
xchg
pop
xorl
mov
adc
in
loope
mov
orb
xor
lret
das
inc
mov
sar
popa
fldl
inc
sbb
inc
dec
in
dec
jae
rorl
add
mov
mov
repnz
push
sbb
mov
mov
cmp
jns
add
outsl
inc
xchg
inc
lret
ljmp
sub
pop
or
pop
push
mov
cs
mov
ja
jp
movl
cli
jecxz
hlt
jno
hlt
xor
xchg
iret
dec
add
stos
and
cld
sbb
rorb
incb
pop
mov
pop
fwait
mov
pop
sbb
cltd
ficoml
xchg
adc
in
insl
aas
push
clc
adc
sti
es
fwait
dec
dec
inc
mov
jecxz
push
js
push
xor
xor
arpl
popf
pop
inc
push
xor
jg
sbb
sbb
jo
mov
jns
add
or
or
pop
xor
mov
pusha
jg
cmp
movl
or
dec
dec
dec
ljmp
mov
stos
fmulp
outsl
loope
out
lds
cmp
lcall
cmp
jno
xchg
cmp
cs
outsl
std
mov
mov
mov
inc
imul
push
je
adc
adc
test
aad
sbbb
pop
mov
xchg
shrl
scas
imul
sti
xchg
bound
stc
ja
push
push
fwait
ret
rcrl
jp
nop
or
xchg
int3
jbe
das
jns
rorl
xor
stos
pop
into
andb
push
in
rclb
lods
inc
in
inc
dec
jge
push
aad
dec
andl
adcl
jg
cmp
mov
pop
adc
mov
out
test
imul
sub
fstpt
push
xchg
jne
fcmovu
mov
xlat
leave
and
sub
push
gs
sahf
fisubrs
sub
lds
jmp
in
or
fimuls
repz
push
daa
fbstp
sbb
sub
int3
pusha
sbb
iret
mov
js
aas
sbb
inc
xchg
bound
add
push
insb
popf
js
or
sbb
inc
sub
pushf
jne
push
xchg
cmpsl
push
addr16
dec
shlb
mov
insl
and
test
mov
mov
repz
xchg
cmp
stos
scas
jge
mov
jecxz
rclb
xchg
std
sbb
cmpb
iret
add
xsha1
cmpsb
or
jp
add
shlb
add
rcrb
aam
bswap
xchg
jbe
pop
lcall
push
mov
fwait
jne
loope
test
jo
mov
or
rorl
push
repnz
in
or
mov
jp
data16
fstpt
push
dec
out
call
cmc
es
push
es
push
in
sbb
repz
jne
in
push
das
adc
fcoms
or
dec
call
mov
rolb
mov
in
push
and
ret
les
shrl
add
cmpb
xor
and
jnp
mov
or
pop
add
out
test
jns
test
mov
mov
mov
shlb
mov
jmp
idivb
xchg
flds
push
aam
icebp
insb
cmpsb
mov
sti
out
in
int
pusha
inc
mov
jmp
mov
incb
cmp
xchg
mov
dec
aaa
mov
bound
lds
aas
fldl
jbe
pop
loopne
push
repz
aam
cmpsl
push
mov
mov
xor
pop
cwtl
loope
sbb
mov
fs
dec
sarl
push
adc
mov
lock
dec
inc
dec
lods
mov
mov
push
std
add
test
out
aad
mov
fiaddl
mov
or
sub
repnz
xor
ljmp
push
mov
sarl
into
jmp
or
cmp
jae
push
ss
jne
roll
add
fcmovne
adcl
dec
pop
aaa
add
pop
add
mov
rcll
cmp
cmp
es
or
sbb
les
push
xlat
pop
aad
xchg
iret
mov
sbb
add
xor
pop
mov
push
sub
sahf
push
push
lahf
push
mov
pop
out
popf
add
jo
out
jg
add
mov
xor
jle
frstor
sbbl
call
mulb
notb
ja
cmovbe
and
and
imull
std
xor
push
dec
clc
add
cltd
xor
mov
inc
dec
sbb
xlat
mov
pusha
je
popa
mov
and
dec
aaa
and
sbb
adc
adc
add
adc
lahf
add
mov
add
popf
pop
jmp
std
cltd
xchg
imul
xor
insb
mov
adc
scas
jb
rcrb
push
cmp
cmc
dec
ja
pop
inc
or
lret
addl
and
cmp
repz
mov
sub
orl
pop
sub
int
bound
cmpsl
xchg
fidivrs
and
jmp
lcall
ja
sbb
inc
lds
push
mov
adc
push
shll
in
lods
fstpl
cmp
or
neg
xor
push
lds
ss
dec
das
mov
and
mov
repz
cmp
int
mov
mov
mov
sarl
ja
jmp
ret
loop
stos
leave
fldl
jge
mov
imul
fldl
sbb
stos
lret
ret
inc
add
roll
aas
fadd
jne
test
xchg
dec
repz
iret
inc
pop
int
adc
in
rcl
mov
inc
adc
jno
add
dec
ss
scas
xorb
push
dec
adc
jmp
rorb
xor
lret
xchg
outsl
stos
xor
jbe
divb
lcall
hlt
ret
inc
lret
mov
lock
aam
and
cmpsb
pop
sub
push
sbb
jl
out
js
repnz
mov
or
in
mov
hlt
pop
mov
dec
pusha
push
mov
lahf
stc
aam
enter
push
inc
movsl
int3
pop
sub
enter
jae
adc
int
mov
push
mov
and
int
push
cmp
or
xchg
sub
and
inc
pop
xchg
out
or
sub
repnz
cmpsl
adc
ja
jnp
push
mov
inc
sub
mov
pop
sbb
in
jecxz
ds
jl
dec
pop
ljmp
xchg
inc
mov
xchg
lock
pushf
adcb
ja
lds
lcall
mov
fisubl
cli
push
adc
xchg
mov
fiaddl
pop
sub
inc
mov
add
xchg
ja
dec
repnz
add
rcrl
pusha
mov
add
jecxz
sbb
imul
mov
mov
inc
sbb
xchg
xchg
jle
or
leave
push
add
ljmp
inc
or
push
insl
rolb
loop
out
adc
mov
je
pop
insb
mov
xchg
or
sbb
stc
movsl
subb
mov
mov
jg
add
push
gs
add
aam
out
jge
daa
push
inc
outsb
inc
jg
xchg
inc
inc
push
and
loope
or
pop
mov
in
mov
mov
test
repz
repnz
scas
push
mov
jae
lfs
pop
adc
lret
jns
insb
je
pop
roll
push
pop
or
xor
jp
add
cmpb
clc
subb
cmpsb
clc
repnz
add
daa
jmp
inc
xor
outsb
xlat
ret
mov
sub
mov
jmp
subl
stos
add
cmpsl
mov
pop
push
pop
push
fwait
cmp
mov
sahf
addr16
mov
fimull
in
pusha
in
xor
xor
jp
arpl
push
lods
xchg
test
dec
loope
stc
jb
mov
push
xor
xchg
sbb
jge
mov
sub
nop
sub
add
push
out
add
mov
repnz
inc
xor
addr16
imul
lock
mov
in
arpl
xor
or
dec
cmp
frstor
scas
shl
cld
popf
add
es
mov
in
or
pop
cmp
xor
cld
stc
std
adc
imul
cmp
or
insb
add
push
sub
stos
lret
push
aas
repnz
jnp
in
sbb
sarb
mov
cmp
hlt
sbb
clc
jns
xor
xchg
leave
bound
outsl
push
cld
iret
mov
divb
sahf
frstor
das
add
jo
xchg
jae
jmp
sahf
fwait
xor
popa
jae
fwait
insl
xchg
popa
inc
daa
or
xchg
mov
pushf
int
sub
jbe
daa
pop
testb
or
dec
outsl
ffree
xor
in
jnp
and
inc
test
jo
sbb
xchg
push
xchg
mov
cmp
repz
sbb
and
mov
push
pop
sbb
push
push
cmp
cmc
mov
xor
dec
shl
sub
imul
mov
mov
add
pop
mov
mov
xchg
jns
jno
and
sub
xorl
sbb
pop
popf
pushf
and
fcompl
mov
aam
mov
lret
push
xchg
pusha
push
cmp
insl
xchg
cmp
xchg
cli
clc
cmc
lea
into
pextrw
and
xchg
je
call
bound
xor
xchg
nop
xchg
inc
clc
lret
adc
inc
xchg
cwtl
mov
pusha
sbb
pop
push
ja
xor
iret
or
cld
jp
test
or
sbbl
or
nop
bound
fs
sbb
out
pop
mov
jo
cmp
xor
rcr
sub
dec
enter
data16
or
in
inc
cltd
enter
in
mov
mov
and
mov
into
pop
add
insl
pusha
adc
mov
shlb
or
loopne
xchg
xor
test
push
call
dec
sub
mov
jecxz
std
int
mov
loop
adc
jne
jnp
dec
repnz
mov
mov
pop
xor
or
mov
icebp
mov
mov
lcall
mov
jmp
clc
cmp
mov
test
movsl
into
jl
jne
dec
inc
lret
sbb
cli
or
leave
cmp
insl
mov
call
jae
int
xchg
adc
popa
lret
inc
adc
icebp
cwtl
sub
mov
mov
scas
mov
jb
adc
cmp
mov
xchg
jb
into
test
push
cmp
aam
pushf
xchg
pop
add
sti
and
inc
jg
shl
test
shl
scas
jg
xor
sbb
mov
add
sub
test
rcll
inc
xchg
outsl
clc
dec
popf
jne
adc
out
mov
push
repnz
add
sub
std
jo
mov
inc
mov
pop
nop
jne
dec
sub
push
mov
stos
push
jecxz
push
inc
mov
fldcw
in
insl
adc
push
xor
jle
stc
mov
sbb
lea
ljmp
sahf
ret
cwtl
repz
imul
xchg
cmp
xor
add
cmp
inc
inc
jmp
mov
movsb
test
inc
push
dec
mov
gs
add
add
rcll
lea
mov
pusha
mov
mov
sti
inc
sbb
dec
sub
pop
sbb
loopne
xchg
scas
adc
sti
push
mov
rclb
jb
adc
inc
subl
mov
xchg
pushf
ret
cmpsb
iret
out
push
std
in
cmpsl
push
cmp
or
ljmp
jmp
add
nop
aas
int3
out
js
cmp
cmp
mov
add
jns
rorb
mov
mov
add
xchg
js
push
fcmove
sub
popl
sbb
sbb
sbb
subl
mov
cmpsl
jnp
pop
gs
xchg
icebp
sub
in
mov
jne
and
sbb
outsl
ds
loopne
fincstp
shlb
xchg
pop
movsl
adc
sbb
arpl
popf
jns
pop
or
pop
pop
pushf
or
dec
leave
fmulp
les
mov
push
jnp
mov
add
es
into
icebp
enter
inc
add
xchg
shll
imul
aam
or
enter
adcl
mov
rdpmc
addb
jnp
push
inc
out
out
mov
adc
repz
popa
nop
jecxz
xchg
pop
xor
shrl
test
add
xchg
popf
pusha
xor
jl
jg
xchg
fwait
push
xor
add
push
push
mov
push
fcoms
repz
sub
jp
mov
push
dec
dec
and
sbb
stos
dec
std
lret
negb
sti
mov
roll
jne
mov
ljmp
out
push
xchg
xchg
push
outsl
and
dec
bound
out
dec
sti
lcall
aas
sub
arpl
lret
add
cmpsl
push
mov
in
pop
xchg
sbb
adc
xchg
and
dec
xor
sub
rolb
mov
pop
xor
adc
in
mov
push
jp
fnstsw
ret
insl
mov
lret
inc
aad
dec
cwtl
mov
pop
out
aam
shrl
das
push
arpl
cs
imul
mov
and
inc
lret
addr16
divl
jns
mov
andb
idivb
push
mov
out
bound
mov
dec
cmpsl
sub
dec
out
mov
stos
add
lock
cwtl
inc
xchg
imul
inc
enter
jle
mov
in
cmp
cmpsb
add
sub
dec
lea
mov
xor
test
or
mov
outsl
jl
inc
xchg
add
mov
jle
adc
mov
adc
cwtl
jl
jg
aam
ficompl
mov
int3
popa
frstor
fidivrs
nop
push
adc
test
cmp
aam
sbb
inc
and
mov
loop
cmc
sub
leave
sub
xor
inc
xorb
test
dec
movl
out
cmp
sub
or
lcall
iret
add
test
imul
pop
scas
jnp
pop
jbe
inc
je
cs
pop
xchg
and
adc
xor
xchg
fstl
out
sarl
iret
and
in
cmpsb
xlat
lcall
mov
cmpsb
cmp
pop
jg
dec
scas
in
scas
sbb
loop
lret
mov
cmp
in
inc
cltd
push
dec
push
gs
adcl
adc
popa
xchg
mov
fsubs
int3
addr16
jnp
call
ss
xchg
adc
dec
cmpsl
sbb
insl
sub
adc
ret
aad
rcl
insb
inc
mov
loope
fidivl
rcll
mov
xchg
jp
xchg
or
std
adc
push
push
repz
pop
sbb
je
fistpl
dec
repnz
jg
loopne
stos
ss
cmp
rcll
mov
shl
sbb
sbb
xlat
out
jge
jno
ret
out
xor
adc
xchg
mov
loop
pop
sbb
stc
imul
pop
xor
xchg
lea
ljmp
jge
in
in
push
and
push
loopne
or
adc
mov
push
xchg
movsl
cmp
xchg
mov
sbb
dec
sub
into
jnp
mov
inc
jne
pop
cmpsb
outsb
mov
and
fwait
loope
test
stc
sub
xchg
repnz
xchg
nop
adc
sti
sub
js
ret
int3
mov
repz
fwait
das
leave
inc
in
into
pop
es
addr16
nop
scas
push
add
mov
aas
les
mov
cmpsb
test
lock
jnp
xlat
pop
xor
inc
mov
ja
mov
cmp
adc
xor
mov
iret
mov
push
xorb
pop
out
jns
out
xchg
sbb
adc
mov
ret
lock
add
push
les
cmp
stos
pop
pop
subl
mov
push
daa
mov
mov
pop
fwait
test
dec
insl
out
xor
pop
in
and
enter
jg
stos
xchg
inc
sbbb
mov
adc
cmpsb
mov
mov
movsl
adc
scas
popf
movsb
fistps
pop
pop
or
inc
push
xor
cltd
cld
pop
sbb
pop
iret
jecxz
or
out
insl
cs
in
mov
mov
ss
repz
popa
dec
add
mov
in
mov
test
fmulp
mov
mov
dec
sbb
dec
mov
lret
pop
jl
adc
fs
push
pop
rorl
fists
jbe
push
xor
gs
mov
mov
lahf
dec
cmp
out
adc
mov
lods
es
sub
add
cmpsb
xchg
fisttps
je
movsb
ret
jo
mov
xor
or
xchg
repz
pushf
repz
inc
in
sub
setl
jnp
ss
andb
sub
jl
sub
dec
xchg
icebp
fs
xchg
pop
mov
xchg
in
or
cld
push
or
mov
addb
cli
aad
int
imul
stc
xchg
lea
jecxz
dec
mov
insb
sbb
mov
jl
pop
fwait
aam
add
test
insl
cmp
jno
pop
mov
sti
rcr
add
fs
mov
cmp
repnz
mov
push
mov
push
cmp
dec
cmc
fldl
gs
sbb
out
or
jns
pop
sti
xchg
sbb
lds
adcl
jb
shll
and
dec
roll
repnz
rcrb
add
jb
mov
mov
test
sbb
mov
sbb
fstp
pop
cmc
scas
pop
mov
jle
loope
ljmp
adc
sarb
inc
adc
mov
out
dec
dec
leave
sbb
dec
push
icebp
mov
mov
jmp
pop
scas
mov
imul
popa
mov
aam
cwtl
inc
add
xchg
mov
daa
push
sahf
adc
cmp
xchg
into
pop
add
ss
or
dec
push
cmpsl
loope
fmull
xchg
mov
push
lods
cmp
or
sbb
fistpl
mov
push
jg
xchg
fs
rclb
pop
loopne
test
xor
sbb
shll
mull
push
adc
mov
mov
fsub
mov
test
mov
mov
lds
aas
lahf
and
dec
das
mov
and
ret
into
push
sarb
and
xchg
cltd
repz
adc
cmpl
sti
sbb
jle
stc
adc
cmpsl
sub
insl
push
test
adc
cmpl
pushf
daa
cmpsl
pusha
mov
add
xchg
and
ljmp
sbb
inc
and
in
iret
repnz
mov
popf
mov
push
fs
stos
push
add
popf
add
inc
mov
aad
push
nop
int
jo
sbb
stos
popf
add
stos
push
mov
jo
push
into
inc
dec
push
xor
dec
jl
cld
je
les
mov
adc
jg
test
roll
xor
mov
lock
or
inc
test
arpl
mov
pop
stos
xor
push
and
adc
adc
sahf
jl
ja
mov
push
aaa
mov
pop
es
jle
scas
mov
icebp
inc
sbb
inc
loope
and
imul
pop
cld
mov
lret
ljmp
fisubl
mov
mov
adc
and
popa
pop
mov
cmpsl
sub
push
pop
pop
sub
in
jecxz
or
push
sub
adc
clc
xchg
mov
mov
addr16
pusha
inc
add
xor
sbb
mov
xchg
stc
xchg
adc
loopne
mov
cmpsl
scas
add
sti
mov
std
ffree
dec
fcoml
mov
outsb
loope
inc
shll
push
or
mov
push
fisubrl
nop
in
aas
jns
rorl
pop
test
outsl
add
adc
scas
jl
imul
jp
jl
adc
cmp
cs
mov
mov
adcb
mov
jo
fists
sub
jge
in
in
sub
imul
outsl
jmp
push
test
inc
push
or
andl
dec
sbb
add
outsb
xchg
mov
pushl
jne
call
adc
jbe
pop
mov
xlat
cwtl
pop
inc
clc
fwait
loopne
gs
sarb
sub
or
loope
adc
pop
lcall
lcall
xlat
mov
stos
es
fcomi
lahf
adc
int
call
lds
pop
popfw
xor
in
test
pop
das
and
icebp
mov
push
cltd
xor
lcall
gs
push
cmp
or
int
subl
xchg
bound
adc
nop
popa
lods
aaa
iret
inc
test
xor
fimuls
cmpsl
out
xor
mov
lea
subb
cmpsl
push
dec
jns
sbb
dec
mov
sbb
test
cltd
jl
xor
sbb
pop
es
outsb
hlt
rcll
js
mov
leave
pop
sub
test
rorb
jp
bound
cltd
in
and
rcll
enter
and
jno
jg
adc
rolb
jle
addr16
add
fistl
dec
iret
push
dec
push
mov
xor
xchg
test
xor
subb
xchg
dec
push
outsl
aas
push
test
xor
mov
mov
nop
clc
jmp
or
jmp
enter
decl
mov
loope
outsb
in
jge
dec
testb
cmp
stos
sbb
je
enter
xchg
adc
sarb
jmp
pop
push
mov
inc
jns
fadd
cmp
mov
lret
pop
mov
mov
adc
lcall
lods
add
sub
mov
adc
and
mov
mov
dec
cmp
arpl
push
mov
mov
xchg
jp
mov
push
fstps
adc
or
sub
and
jg
fimull
push
mov
lret
pop
mov
inc
fisttps
imul
push
mov
push
bound
mov
xchg
pop
sub
jnp
and
pusha
into
inc
xor
cmpw
inc
rcl
movsl
aas
lret
mov
orps
arpl
xor
and
fsubr
cmp
sbb
mov
aad
inc
in
xchg
dec
inc
bound
adc
cmpl
inc
movsb
jmp
mov
sbb
ljmp
xchg
mov
int
and
fimull
and
sub
mov
ja
cmp
das
cmp
nop
and
loope
aam
push
dec
fists
das
mov
xorl
in
popa
mov
push
or
int
mov
test
fcoms
jp
push
adc
and
mov
cmp
cwtl
jle
shlb
xor
hlt
hlt
xchg
popa
dec
ret
enter
in
dec
jge
and
xor
sbb
imul
mov
push
push
push
mov
popa
cmp
fbld
jns
dec
imul
in
cld
test
out
xlat
loop
mov
data16
dec
cld
mov
cmpsw
rcrb
aas
sbbl
and
mov
test
mov
scas
iret
mov
popf
xchg
xchg
pop
xor
mov
scas
mov
daa
ss
sbb
ret
pop
leave
insl
xor
sub
push
or
out
insl
daa
adc
inc
fsubr
test
je
jecxz
push
xor
dec
fwait
and
cs
jp
hlt
loop
inc
jno
or
lds
mov
adc
test
adc
dec
cmpb
rorl
push
in
lahf
mov
pop
in
stos
jmp
and
cmp
loopne
push
outsl
cwtl
push
and
cli
pop
mov
xor
mov
push
sub
js
fadds
inc
out
lods
rcrb
popf
cmp
mov
repnz
jno
cmp
out
mov
cmp
jns
dec
cld
sbb
dec
mov
pushf
je
or
mov
sti
fcom
daa
daa
jns
jecxz
or
or
std
push
fdivs
jecxz
setge
call
or
mul
add
je
cmp
lea
sub
repz
or
std
ficomps
sub
pop
out
shr
stc
xor
xor
movb
push
shl
fdivrs
enter
outsl
mov
cmp
fs
xor
mov
lea
jl
inc
in
mov
fwait
cli
mov
jle
scas
rcl
scas
dec
mov
jge
addr16
xchg
pop
dec
out
lea
adcl
xchg
in
jbe
addr16
push
dec
rclb
inc
xchg
inc
xchg
dec
rcrl
mov
mov
nop
addb
inc
pop
lea
lods
push
adc
pop
mov
mov
cmp
xor
lods
into
dec
jle
int
fisubs
fcmovbe
mul
enter
sub
fsqrt
inc
pop
pushf
sbb
hlt
mov
cmp
je
adc
sub
adcb
leave
subl
test
por
testb
adcl
adc
or
lods
push
jl
adc
daa
or
neg
jns
jae
enter
insl
int
aaa
jp
sbb
fmuls
jnp
sub
nop
popa
push
jb
pop
int
pusha
mov
sbb
rorl
fdivl
in
sti
and
jns
and
sarb
push
mov
lea
out
jo
push
les
xchg
xchg
in
pop
push
aam
and
sub
mov
mov
jmp
sbb
adc
cmpl
mov
shlb
dec
movsl
sbb
sub
lret
pop
or
cli
loopne
lock
scas
out
frstor
and
enter
push
mov
repz
lock
xor
shrb
data16
je
call
jbe
ficoml
popa
cmp
mov
sahf
data16
pop
jb
xor
or
add
popf
cmpsb
mov
lret
insl
outsl
jbe
sub
in
mov
leave
xchg
mov
lea
fmul
xchg
mov
fcomp
lahf
mov
push
xor
push
rorb
cmc
lods
cs
mov
adcb
mov
rcrb
ret
dec
inc
sahf
mov
rcrb
cmp
dec
cwtl
add
nop
std
out
push
ljmp
and
pop
mov
imul
jbe
mov
orl
scas
dec
aas
sub
dec
mov
xor
or
fs
rorb
push
sbb
out
repnz
xchg
out
daa
mov
mov
mov
pop
sub
lods
push
pusha
mov
pusha
mov
inc
xchg
adc
xor
add
ljmp
or
and
adc
shll
mov
stc
imul
out
dec
fmuls
mov
jae
gs
jecxz
popa
push
nop
popf
ret
push
fiadds
insl
or
mov
jo
lret
pop
pop
stc
pop
jp
shll
les
mov
cli
mov
and
xchg
sbb
pop
or
add
jno
fcoms
cltd
dec
adcb
call
jg
nop
mov
inc
test
adc
add
push
pop
hlt
sub
dec
shll
jl
lods
inc
xor
adc
xchg
xchg
into
ret
lret
pop
das
jo
sub
mov
jl
mov
adc
xchg
aad
out
jg
jl
ljmp
ret
outsb
adc
daa
sbbb
mov
lock
jmp
inc
aad
and
sub
sbbl
or
push
xchg
push
sbb
pop
mov
cli
lods
sahf
push
dec
push
ror
push
pop
int
lret
push
sub
jp
push
fwait
popa
pop
push
andb
arpl
pop
adcb
dec
xor
test
ret
jmp
nop
fs
lods
jns
mov
mov
jg
xchg
push
aad
xchg
ja
roll
jle
mov
shl
mov
sti
cltd
jae
cmp
jae
bound
out
mov
pop
stos
mov
hlt
addb
sub
sbb
out
mov
sub
xchg
pop
hlt
mov
cli
out
int
adc
and
cld
loope
fldl
jp
rolb
push
arpl
jecxz
stos
jae
mov
sbbb
int
cmpsl
fwait
outsl
test
std
stc
sahf
stc
jmp
mov
outsl
xchg
imul
packuswb
adc
jge
jl
push
lea
pop
jg
or
jns
add
enter
stos
mov
insl
fistl
jl
dec
cmp
pop
ds
out
xor
jae
js
mov
inc
add
fisubs
and
lcall
lret
gs
in
sub
jl
pushf
jne
dec
sbb
xor
lret
ja
inc
imulb
in
fs
in
cmp
sarb
xor
gs
scas
push
addr16
mov
cmpb
adc
sub
sbb
xor
lods
pop
cmp
sbb
mov
and
dec
into
ret
aam
xor
mov
cwtl
mov
gs
lcall
scas
push
mov
xor
adc
std
aaa
ret
cld
lock
in
ljmp
mov
lds
pop
fidivrs
push
sahf
mov
sub
dec
je
dec
sarb
pop
and
or
push
mov
sbb
dec
aaa
in
ret
icebp
mov
xchg
xchg
mov
aas
xorb
dec
dec
sbb
in
xor
adc
xor
aaa
or
xchg
mov
popf
xor
or
pop
sbb
and
push
mov
stos
test
mov
or
pop
fdivrl
add
lret
xchg
test
cltd
vprotq
sbb
loop
in
mov
es
int
adc
cltd
cmpsl
cmp
stos
lret
pop
pop
mov
or
fwait
movsb
iret
fmul
cli
out
push
cld
push
jb
push
sti
iret
por
repz
mov
xor
push
imul
dec
sbb
sub
je
or
rcr
jg
ja
xchg
mov
ja
push
jae
cmpl
divl
jbe
add
mov
ficompl
jbe
ret
sahf
loop
aam
scas
jnp
dec
push
or
in
jp
aad
xorb
out
and
push
or
in
cld
out
jno
mov
jecxz
sub
movsb
add
cmp
pop
xlat
jb
std
mov
and
mov
and
sub
push
or
sbb
sbb
sub
push
jecxz
mov
and
pop
mov
xor
ds
mulb
stc
lds
mov
das
lods
testb
cmp
sarl
dec
jle
ljmp
dec
mov
jle
test
je
nop
jecxz
add
cmpsl
stos
xchg
ljmp
mov
fmull
push
fistps
xchg
jno
mov
xorb
inc
and
fcomip
inc
cmp
or
pop
call
mov
mov
add
or
popa
jg
pop
aad
jbe
bound
es
in
jns
cwtl
sub
sbb
mov
orb
jnp
push
test
jge
ljmp
in
loopne
std
in
push
mov
das
add
in
inc
in
add
mov
jnp
sbb
aas
fbld
insb
out
jae
aaa
cmpsl
call
jmp
xchg
fucomi
adc
test
dec
mov
int
lea
jno
je
xchg
arpl
dec
inc
add
insb
add
or
cs
sub
dec
and
repnz
pop
cmp
cs
pop
cmp
outsb
sbb
pop
lock
stos
adc
jne
es
cmp
sbb
outsl
dec
pop
out
clc
shl
mov
add
mov
sub
xchg
mov
movsl
repnz
shr
inc
push
or
cld
push
lret
shlb
stos
push
mov
sub
push
jne
adc
pop
repnz
leave
fs
fnstsw
add
mov
sub
dec
mov
or
inc
lcall
mov
lds
mov
fdivrl
xchg
sbb
outsl
sahf
mov
dec
add
xor
leave
push
roll
les
xchg
add
dec
mov
cmpsb
mov
jae
add
fldenv
adc
push
and
xchg
not
in
sub
pop
pop
scas
cmpsb
shlb
pop
jo
add
xor
lock
add
xorl
cwtl
pop
ljmp
sub
aam
repz
shr
pusha
inc
lods
inc
int
bound
or
add
sub
pop
gs
or
cltd
test
push
es
xchg
out
xchg
mov
and
mov
jne
loop
sbb
popf
jno
bound
lods
fcmovbe
stos
sbb
xor
cmp
loope
fstl
insb
mov
push
inc
aaa
mov
jmp
add
mov
imul
into
test
inc
push
addb
lea
mov
jne
aad
dec
ljmp
clc
xchg
in
cmpsb
lock
addr16
sub
mov
scas
push
cmp
cwtl
test
jae
push
xchg
outsb
stos
xchg
cmp
outsl
pop
aam
cli
mov
cmpsl
scas
mov
mov
push
lods
movsb
cmp
mov
xor
jo
xchg
push
lret
sbb
int3
andb
jne
aaa
fwait
popf
jo
add
jg
test
ja
dec
jmp
fistl
sbb
jl
nop
int
pop
sbb
lock
cltd
mov
pop
jle
fcmovu
test
xor
cwtl
mov
imul
or
or
loope
sub
adc
xchg
jb
stos
push
ror
pop
cmp
pop
add
pop
or
adcl
out
pop
or
jecxz
addr16
es
insb
lods
jl
popf
lds
loopne
cmp
push
ljmp
jbe
movsb
mov
xchg
stos
push
or
push
in
bnd
dec
sub
xchg
mov
jecxz
dec
jmp
mov
adcb
xchg
cmp
aaa
jge
cmc
mov
or
stc
lret
loope
in
jo
lods
sbb
sub
dec
jb
lods
rcr
mov
sub
push
into
push
and
aam
clc
mov
lods
jbe
ds
inc
jl
mov
jge
and
dec
push
push
cli
test
lret
ret
mov
jle
addr16
imul
lcall
xchg
mov
test
aas
sbbl
xchg
lret
mov
popa
pop
pop
jns
xchg
xor
and
lcall
pxor
cmp
mov
mov
or
addr16
inc
insl
sub
jne
test
mov
aaa
out
incl
mov
mov
out
pop
and
pop
into
push
cmp
jle
sbb
pop
sbb
and
or
adc
mov
sbb
leave
inc
in
cmc
sti
xor
xchg
pop
ss
dec
jae
repnz
jo
test
aad
push
pop
mov
pushf
jmp
pusha
cld
or
aam
or
add
inc
inc
adc
inc
sbb
xor
sub
inc
adc
rolb
jg
push
mov
mov
cmp
adc
mov
or
cmpsl
push
lock
stc
subb
jb
test
int
ja
dec
xor
aaa
dec
mov
and
fadds
rorb
cmp
inc
mov
pop
jp
inc
pop
inc
pop
ss
xor
pop
pop
fdivs
cmp
sub
cmp
jo
in
sbb
loope
jnp
scas
push
mov
int3
addb
xchg
pop
cmp
loopne
sub
scas
sub
inc
lahf
loope
loope
push
fwait
gs
add
cmp
pushf
into
inc
sub
push
testb
or
orl
push
scas
adc
mov
mov
inc
clc
loopne
lea
and
es
mov
movsb
xor
and
mov
enter
sub
mov
adc
inc
mov
fwait
lret
mov
fwait
repnz
xchg
xor
andl
adc
jns
fwait
pop
cwtl
adc
and
cmp
outsl
mov
mov
outsb
pusha
sub
cwtl
aaa
inc
cld
cmp
aas
les
mov
xchg
mov
add
je
cmp
pop
dec
sub
ret
in
pop
xor
outsb
mov
inc
push
enter
or
and
mov
mov
stc
ljmp
sbb
push
jp
add
xchg
mov
orl
ja
pop
add
sub
pop
pop
or
cli
es
xchg
push
push
in
pop
out
and
mov
cmp
dec
add
mov
and
enter
ss
mov
cs
xor
sbb
inc
movsl
mov
pop
fadds
sub
inc
mov
das
inc
cmp
fcmovnu
addr16
lods
insb
idivb
out
add
inc
popa
xchg
rclb
sub
in
and
pop
add
negl
aam
cli
jns
mov
dec
cld
xchg
movsl
mov
lcall
pop
pop
es
cltd
loop
add
mov
jp
out
dec
mov
inc
pop
shr
sub
shrb
or
cmp
into
adc
dec
cmp
addr16
sub
xor
in
pop
and
pusha
push
xchg
push
out
push
sbb
push
dec
popa
je
push
ret
xchg
cwtl
cmp
sub
mov
sbb
daa
or
fldt
loopne
nop
pop
stc
pusha
and
jno
add
mov
int
rcr
mov
pop
dec
cld
bound
rep
push
xor
ffreep
les
lods
movsl
lcall
push
mov
and
sbb
out
cmp
lds
sbb
pop
sbb
cwtl
push
pop
pop
push
mov
dec
jge
sbb
push
frstor
or
jmp
or
out
pop
sub
cmpsl
sbb
cmp
lahf
leave
mov
cs
mov
or
jmp
movsb
jle
fidivs
out
popa
mov
jecxz
mov
adc
out
xchg
dec
jmp
mov
jge
daa
fs
dec
fcomps
dec
imulb
mov
dec
add
add
movsl
mov
in
and
mov
sbbl
out
xor
mov
sbb
sub
lret
or
jle
fnstsw
push
and
cmpsl
jb
mov
movsl
stos
cld
pop
imul
addr16
mov
icebp
mov
ret
cmc
loop
clc
and
mov
sti
hlt
lock
jmp
push
add
dec
and
mov
scas
pop
sbb
aam
add
push
xor
shlb
inc
xor
jmp
es
movb
insb
test
pop
test
push
jns
jno
dec
push
jb
outsl
xor
cli
daa
jle
aam
or
insb
sub
test
xor
mov
in
inc
aaa
movsb
jecxz
jmp
push
jno
test
enter
dec
mov
sub
enter
and
inc
add
xchg
inc
mov
negl
std
addl
pop
test
jge
in
lea
add
push
scas
pop
ret
sbb
outsb
inc
loop
mov
das
adc
in
and
push
or
cmp
test
popf
inc
adc
inc
iret
and
dec
vmread
mov
std
iret
lods
pop
push
fsts
test
daa
sbb
movsb
xor
testb
sar
sbb
lcall
inc
iret
cmpxchg
inc
addr16
sub
jl
lret
out
in
mov
lea
and
and
adc
push
and
clc
fstl
arpl
adc
rcrl
pop
into
clc
mov
repnz
mov
sub
jo
aaa
inc
mov
insb
inc
jmp
mov
test
jl
mov
fs
inc
dec
cmpsl
or
push
jnp
clc
scas
into
mov
shrb
ds
cli
or
xor
push
sarl
adc
xchg
sbb
sub
push
push
fimull
out
sub
jle
pop
cmp
add
icebp
cmp
xor
lcall
sbb
data16
mov
mov
jl
es
pop
outsb
lcall
dec
repnz
adc
xchg
call
test
xchg
inc
mov
sub
pop
jecxz
orb
mov
movsl
fbstp
mov
es
clc
pop
inc
insl
fsubl
int
dec
mov
sub
nop
adc
aam
xor
add
mov
xchg
bound
sbb
aaa
and
or
fisttpll
leave
inc
pop
jle
call
dec
push
mov
sbb
mov
dec
inc
aaa
sbb
loop
push
sub
ljmp
or
fcompp
lahf
pop
fildl
int3
mov
cmp
aas
mov
cmpsl
popf
or
xor
mov
pop
push
push
push
jle
je
xor
lret
sub
nop
push
xchg
imul
lea
pop
add
and
push
and
mov
dec
mov
add
scas
push
inc
xchg
jns
clc
out
shr
lds
inc
jo
push
jo
mov
test
cmpsl
imul
fs
call
pop
mov
out
leave
push
loopne
movb
inc
xor
sbb
dec
sbb
or
out
mov
jp
out
xorb
pop
leave
cmpsl
xor
mov
or
cmp
adc
jae
xor
fmull
mov
gs
mov
outsb
or
data16
data16
ljmp
xor
bound
loop
mov
fs
imul
out
mov
fistl
loop
mov
lock
cmc
stc
pop
pop
jge
outsb
ret
inc
dec
jo
in
inc
decb
mov
adc
and
mov
push
out
dec
push
lock
ljmp
adc
xchg
mov
dec
cld
mov
jb
dec
rcrb
negl
jp
test
jecxz
mov
lds
cmpl
jg
push
movsb
fwait
mov
mov
mov
mov
xchg
mov
mov
repnz
cmc
fs
repnz
pop
mov
stc
test
sbb
xor
pop
sbb
sarb
or
lret
cmp
push
stos
rclb
jae
ret
cmp
inc
add
aaa
xor
sbb
cltd
not
hlt
jns
sub
in
inc
dec
mov
fistpll
out
pop
push
lock
dec
and
rcrl
push
ffree
cmc
ss
jns
pop
mov
aas
sbb
je
xor
pop
mov
sbb
cmc
fstpt
outsb
xor
add
ljmp
mov
lods
mov
out
std
and
ss
call
cmpsl
dec
icebp
sbb
dec
jb
mov
out
xor
outsl
add
nop
and
lock
xchg
sub
call
xlat
pop
cmp
dec
mov
add
push
daa
mov
dec
out
jae
roll
arpl
arpl
inc
fdivrs
sub
je
mov
mov
jnp
pop
xchg
push
dec
or
lahf
hlt
pmuludq
mov
or
sub
mov
jnp
or
pop
cmc
in
fstl
pause
xchg
lahf
lea
inc
out
jge
cs
and
gs
mov
enter
mov
xlat
mov
inc
fistps
pop
pop
cmpsl
inc
inc
cmc
or
std
out
imul
push
out
pop
insb
jmp
movsb
or
pop
leave
jnp
mov
jno
std
aad
out
popf
outsl
inc
inc
or
fs
aaa
sbb
dec
test
xchg
leave
sbb
inc
push
xor
fs
test
daa
les
pusha
cmp
jp
adc
or
repz
les
shll
mov
pushf
or
fabs
stos
faddl
ret
adc
sarb
or
and
jge
cltd
pop
cmpsl
mov
int
cmp
sbb
cmp
shrb
inc
pushf
mov
popa
outsl
fcoml
aam
cli
xchg
leave
pusha
adc
mov
out
neg
mov
mov
ljmp
jge
shl
lret
cmp
push
inc
mov
cmpsb
out
push
testl
lds
pusha
sbb
loopne
stos
dec
adc
rorl
sbb
jp
xchg
and
loope
and
xor
adc
in
mov
test
and
fidivrs
mov
and
pop
mov
cmp
clc
cld
imull
imul
mov
pop
adc
pop
inc
divl
shrl
add
push
sbb
mov
repz
push
xchg
aad
call
aad
in
or
stos
repnz
xchg
or
mov
pop
lock
insl
shr
ret
dec
mov
enter
scas
stc
cmp
push
test
aaa
movsb
in
or
int3
rclb
imul
ds
jb
dec
inc
pushf
incl
add
lds
clc
jns
imulb
xor
test
gs
insl
cmc
cmp
fidivrs
xor
cmp
xor
sub
pushf
cmp
adc
inc
cmp
gs
repnz
and
xchg
cmp
push
sub
std
in
sbb
add
jbe
mov
push
pop
push
cmc
ds
daa
rcrl
and
insl
cmp
and
sti
xor
and
jae
clc
xor
add
xchg
push
push
xor
scas
adc
pop
mov
xchg
test
dec
inc
jmp
je
or
stos
xchg
shlb
scas
lds
mov
mov
dec
jne
push
lea
sub
lcall
inc
movsl
jno
cs
insb
xchg
divl
dec
mov
mov
in
out
aad
pop
clc
add
pop
loope
jg
jo
hlt
pop
xchg
jnp
fbld
dec
shll
je
aaa
push
sar
and
mov
mov
jno
filds
mov
test
xchg
cmp
out
in
dec
add
sti
cmp
rorb
and
fnstenv
pop
pop
sub
push
nop
aaa
ja
into
sbbl
sbb
add
enter
adc
pushf
fldenv
xchg
in
xor
mov
mov
cwtl
cld
xchg
pop
fucomip
pop
test
es
sub
jle
and
cmp
xor
insl
iret
mov
or
jp
lcall
sbb
adc
and
ds
adc
push
jmp
or
ja
mov
loopne
sub
rorb
je
mov
sub
cld
mov
lds
pop
in
adc
and
icebp
push
jle
fildll
cmpsl
cld
test
in
mov
xchg
leave
mov
cmpsb
pop
xor
cmp
aas
add
call
shlb
mov
sub
jl
into
out
pushf
xor
xchg
cli
lahf
inc
mov
pop
and
imul
xlat
xchg
sbb
push
mov
add
cmp
inc
cmove
xchg
sysenter
jle
mov
sub
fcom
adc
addb
pop
mov
and
or
inc
or
aad
shrl
int3
mov
mov
or
lods
cmpsb
and
push
inc
mov
cmpsl
or
jmp
cmp
aas
inc
clc
and
lret
test
mov
icebp
dec
ljmp
push
mov
xchg
cltd
jl
pop
mov
mov
or
jmp
lods
sbb
cmp
dec
movb
mov
rcr
jecxz
xchg
movsb
push
xchg
pop
fistl
es
lods
lock
jp
pop
lods
xchg
fcomp
daa
xor
sbb
sbb
mov
lds
cli
mov
int
adc
sub
mov
jnp
adc
popa
mov
ljmp
mov
push
lcall
pop
testb
add
cmpsb
adc
mull
fstps
xchg
pop
in
shr
jmp
pop
inc
dec
jns
jne
xchg
call
in
and
fimull
rcl
add
test
jle
cmp
pop
fldcw
lods
inc
lods
cmpsb
pop
add
fildl
out
xchg
sti
ljmp
stos
jno
fsubrl
loopne
lret
rorl
push
sub
filds
data16
or
iret
xor
xor
in
pop
lds
imulb
fwait
or
push
adc
jmp
js
sbb
and
jns
addr16
push
movsl
jo
incb
test
inc
mov
add
push
int3
movsl
xchg
pop
inc
data16
pop
rcl
adc
fnstenv
cmpsb
add
adc
outsb
dec
lock
mov
aaa
sub
popa
sbb
cmp
jp
dec
cld
pop
daa
loopne
pop
lods
xchg
in
fistps
pop
aam
decl
jg
gs
jbe
add
or
sbb
cmp
sahf
push
push
ret
xor
adc
push
sbb
inc
out
adc
fisubs
subl
insl
jmp
pop
call
push
pushf
dec
ljmp
lcall
and
rclb
sarb
fstpt
jmp
xchg
jge
sti
sbb
ljmp
adc
setg
cld
sarl
adc
xlat
data16
mov
out
dec
adc
fnstcw
fcmovbe
push
cmpsl
jo
and
and
movsl
push
jge
mov
jl
cmpl
adc
int3
dec
push
pop
fsubrp
mov
mov
xchg
mov
cmp
or
subl
jmp
or
pushf
xchg
icebp
xchg
push
xor
pop
lahf
inc
lcall
xor
add
mov
loope
jbe
movaps
pushf
int3
aam
fwait
mov
inc
dec
mov
les
out
adc
dec
and
insl
push
popf
ds
add
cmpsb
mov
movsl
xchg
rorb
cmpb
adc
hlt
xor
clc
or
cmp
fnstcw
stos
sbb
mov
push
in
xor
inc
pushl
lahf
mov
mov
stc
jnp
pusha
cmp
mov
mov
repnz
addr16
cmp
push
jp
addr16
test
addr16
jo
cmp
mov
mov
inc
ror
mov
cmpsb
fildll
add
dec
outsb
std
or
test
add
arpl
sbb
sbb
inc
decb
inc
ds
jge
adc
mov
jb
xchg
mov
cltd
cltd
shll
pop
push
cs
call
dec
cli
sub
cwtl
lock
movsb
in
ss
push
out
pusha
lds
lock
pop
cltd
pop
scas
in
aam
jmp
lods
mov
pop
add
in
sti
lock
andl
movsb
sahf
in
cmp
jne
cmc
ds
xchg
jae
lret
hlt
xchg
in
pop
jbe
imul
leave
in
aad
dec
orb
push
shlb
cwtl
fmull
jle
adc
jg
loopne
jae
scas
ret
dec
ljmp
mov
cmpsl
and
subl
lahf
sbb
adc
jle
jno
scas
sub
sbbb
ret
mov
inc
jne
seto
lock
in
adc
jne
mov
mov
pop
lods
daa
fsts
bound
jp
sbb
xchg
rcrl
sbb
cwtl
xlat
inc
js
shlb
jns
xorl
jno
in
push
xchg
fsts
mov
dec
popf
je
dec
push
in
and
mov
xchg
in
add
mov
test
mov
insl
dec
dec
push
mov
and
icebp
fs
test
daa
adc
in
and
ss
bound
or
enter
sti
xlat
xlat
scas
popf
loopne
dec
jg
adc
push
in
sahf
mov
jae
addb
lock
sub
outsb
dec
popa
sbb
xchg
add
je
lret
inc
cmc
sub
aaa
pop
mov
or
jb
xor
pusha
pop
ss
xor
mov
sbb
and
les
in
cmp
push
loop
in
xor
gs
sbb
int
cmp
lea
cmp
mov
movsb
js
je
hlt
xor
cmp
jb
lcall
jbe
cwtl
mov
dec
sarl
ret
or
push
nop
outsl
sbb
push
mov
xchg
ljmp
mov
xchg
fwait
jecxz
repz
gs
inc
loopne
in
dec
je
mov
jl
pop
dec
push
movsb
enter
into
shrb
lret
imul
mov
inc
aas
xorl
mov
popa
push
add
or
fnstenv
adc
loope
sbb
ret
jge
mov
ljmp
xor
lds
jl
mov
xchg
inc
push
cli
push
xchg
and
ds
jge
lds
dec
pop
sbb
jbe
mov
cltd
arpl
ds
sahf
lret
push
adc
inc
int
pop
test
stos
test
or
mov
adc
and
push
cmpsl
jae
popf
push
or
pop
jnp
push
scas
push
adc
das
shrb
fimuls
mov
adc
jo
jo
fsubrl
xor
push
nop
jb
popf
mov
push
xor
mov
sbb
sub
mov
dec
mov
or
fldcw
push
sti
cmpsb
cmpsb
loope
sub
inc
or
aas
push
mov
popa
out
icebp
sbbl
mov
xor
cs
jne
insl
jecxz
xor
and
mov
int3
fwait
in
xchg
push
lcall
insl
and
jne
cmpsb
and
xorl
mov
add
xchg
add
cwtl
mov
enter
arpl
in
hlt
push
jmp
or
int3
fdivr
enter
jp
sub
fs
mov
sub
pop
lock
sbb
add
jge
or
stc
leave
dec
lret
sub
xor
aam
xchg
mov
rcll
fwait
lock
sub
rcrb
pop
js
push
mov
clc
mov
filds
in
inc
cld
xchg
fistpl
mov
cs
jle
xor
mov
js
inc
xor
pop
cmp
arpl
adc
ret
adc
mov
adc
mov
hlt
les
pushf
cmp
adc
mov
pop
scas
cmc
mov
cmpsb
cmp
xchg
jbe
fimull
aad
scas
fmulp
mov
xor
push
cmpsl
popf
shrb
jb
je
mov
inc
add
shlb
stos
je
divl
push
xchg
popa
mov
pusha
out
mov
add
sbb
les
sbb
mov
fucom
loop
pop
dec
sbb
mov
jmp
or
imul
jg
sub
fadds
cmp
fisubs
pop
xor
fnsave
xchg
jmp
push
lret
fidivrs
shll
gs
push
xchg
leave
sahf
cwtl
cmp
xchg
dec
inc
xchg
nop
insl
cs
pop
test
outsl
xlat
inc
sub
test
outsl
jge
addr16
lret
andb
sbb
mov
xor
out
or
mov
jno
xchg
divb
fidivs
outsb
shll
cmpl
push
jecxz
or
mov
jo
out
jecxz
fidivs
dec
pop
xor
add
loop
and
jge
jp
ret
aad
and
add
notb
jle
sahf
aas
jns
xchg
imul
jle
push
pop
sbb
mov
mov
xchg
aas
and
add
lcall
call
test
aas
mov
movsb
leave
xchg
lock
lods
mov
add
daa
and
adc
les
jmp
ss
or
sub
adc
sbb
cs
push
in
das
sub
xchg
into
dec
jb
in
inc
bt
mov
mov
sti
lods
out
jnp
add
and
cmp
enter
fcomps
mov
pushf
es
cmc
aam
pop
rcrb
add
mov
addl
push
repnz
and
dec
ja
sub
sbb
and
rclb
lds
sbb
jb
cmp
inc
add
je
add
sbb
push
test
jno
or
jmp
into
jge
sbb
gs
or
addr16
aam
cli
out
inc
addb
fs
xchg
xor
mov
jmp
lods
aam
lock
lcall
cmc
jge
adc
push
mov
jb
push
stos
in
in
in
push
or
and
or
jo
or
pop
dec
lods
loop
js
xchg
mov
mov
sub
xor
xor
add
sbb
and
dec
dec
cmp
mov
lcall
and
sub
cld
adcl
push
loop
pop
jl
ja
imul
cli
ja
cltd
dec
popa
in
mov
pushf
mulb
pop
cmpsl
sarl
enter
cli
mov
pop
sbb
mov
cmpsb
mov
xchg
xchg
pop
mov
daa
lret
mov
jb
mov
cmpsl
dec
xor
orb
ret
inc
in
lahf
sub
fisubs
pop
ret
stc
cmpsl
jmp
dec
and
stos
adc
js
cli
inc
loope
js
fmull
dec
push
andb
jo
pop
sub
mov
pop
xchg
and
pop
mov
mov
cmp
mov
sbb
mov
js
add
adc
push
in
jno
cmp
dec
das
jnp
cwtl
js
pop
pop
cmp
push
sbb
jmp
adc
or
pop
push
movsl
pop
fstp
out
sahf
add
fwait
mov
jne
imul
or
movb
movsb
in
bound
fwait
xchg
sbb
add
shlb
add
lods
lds
xlat
aas
mov
pandn
and
cltd
dec
rcrl
xor
imulb
mov
aam
mov
mov
ror
cmpsb
loopne
push
movsl
mov
jmp
add
and
and
and
jmp
mov
push
imul
test
push
push
addb
fwait
add
fisttpl
inc
mov
push
sub
pop
es
sub
cmp
mov
dec
pop
push
dec
sbb
sub
mov
cmc
insl
jae
dec
das
mov
mov
hlt
sbb
ror
jmp
movsb
in
lret
inc
shlb
xor
mov
jns
dec
rcl
or
xor
inc
pop
mov
xlat
mov
ret
outsb
lret
adc
das
sub
jbe
inc
push
shll
cmp
jle
xorl
repz
cmp
ljmp
sbb
cmp
and
cmp
jecxz
mov
test
les
jp
push
insb
push
mov
pop
mov
mov
leave
xlat
in
push
mov
push
and
pop
stos
popf
mov
jle
je
xchg
jb
scas
jecxz
test
jbe
xor
sbb
inc
add
aam
fmuls
das
test
push
movsb
sbb
sub
aam
out
pop
insb
frstor
mov
pop
into
imul
out
add
aaa
test
mov
push
cmp
cld
sub
pop
mov
mov
aam
mov
popl
stc
gs
insb
pop
push
dec
jl
out
inc
enter
push
cmp
testl
scas
and
cli
sub
push
xor
sbb
lods
and
sub
sbb
inc
das
call
adc
and
ror
mov
push
cmp
and
xchg
out
xchg
or
ss
sbb
cmc
lea
loopne
fistl
add
sub
sbb
insb
mov
outsb
mov
cmp
sub
bound
movsl
and
mov
int
dec
cmp
adc
xchg
dec
out
or
sub
sbb
add
add
sbb
rclb
inc
xchg
test
daa
inc
xor
push
jmp
shlb
cwtl
push
pop
in
jb
and
xchg
out
cmc
jge
push
cld
dec
aas
inc
je
shll
xlat
mov
xchg
negl
sub
xchg
push
imul
in
push
sbb
ret
shrl
out
lock
xor
fisubl
mov
sbb
mov
jbe
in
ja,pn
inc
mov
jecxz
loop
dec
adc
sub
lret
add
push
in
test
mov
out
aaa
push
popf
clc
push
jmp
lret
cmp
addr16
sub
pop
or
in
or
fs
sub
ja
pop
in
and
pop
sahf
fwait
push
ljmp
insb
arpl
and
iret
test
int
mov
inc
mov
cmpsl
inc
xchg
push
xchg
or
repz
lcall
rorb
jg
mov
fldl
cmp
jno
fs
pop
pop
push
mov
stos
jae
lret
neg
in
sbb
push
mov
and
or
push
js
gs
cli
mov
idivb
pop
loope
or
inc
pop
lds
sbb
xchg
arpl
mov
jg
repnz
cltd
dec
pop
dec
push
sub
into
pop
fsqrt
add
out
enter
movsb
lret
push
out
cmc
icebp
and
xor
xchg
xchg
in
lfs
sub
pusha
test
fisubl
xchg
popa
push
test
lea
jmp
push
sub
out
outsb
loop
cmp
xchg
xchg
sub
mov
or
rorb
or
pop
sub
sbb
decb
das
jp
mov
fldl
sbb
xchg
pop
dec
adc
cmc
xor
pop
sub
shl
leave
aas
sti
mov
sub
out
mov
pop
lock
inc
inc
xchg
dec
jmp
jno
or
cmp
loopne
leave
inc
dec
push
cltd
movsl
movsb
add
bnd
cmp
xchg
fs
mov
adc
je
movsl
pushf
and
jne
les
sbb
jo
fisttpl
imul
arpl
and
icebp
lret
jg
push
fs
dec
cmp
test
xchg
lret
pop
pop
rorl
outsl
call
stos
idivl
inc
add
filds
mov
jmp
jb
sub
icebp
pushf
add
xor
xorl
int
sarl
jae
cli
xchg
sub
aaa
imul
cmc
jmp
mov
dec
push
sub
mov
rorl
repnz
push
dec
mov
mov
pop
mov
rcr
xchg
xchg
faddl
cli
adc
mov
rorw
sbb
cmc
test
daa
testb
add
sti
xchg
int
leave
nop
push
push
jo
cwtl
adc
add
push
clc
mov
sub
fisttpll
xor
jl
int
add
or
jmp
jae
aad
xor
mov
fsubrs
in
add
sbb
sbb
ret
cmc
pop
nop
add
es
or
jne
shr
out
push
jl
push
mov
in
jne
push
fs
das
mov
hlt
or
pop
pop
loope
mov
jb
insl
gs
pop
stos
fsubrs
cmp
xor
mov
xor
push
sbb
fs
jge
shll
rcrl
mov
cmp
popa
xchg
mov
and
inc
push
sub
jle
rcl
sbb
les
push
inc
inc
xchg
jg
imul
push
pop
pop
fsubs
int3
icebp
mov
cs
ds
cmp
jno
loop
mov
mov
add
mov
sbb
ljmp
cmp
rorb
fisubrs
add
or
jno
push
rcll
push
xor
in
fstpl
mov
orl
fidivl
addr16
inc
push
push
jmp
mov
lcall
jmp
cld
add
xchg
loop
or
add
insb
dec
push
dec
icebp
mov
rcrl
cmp
out
ljmp
push
sbb
test
frstor
imul
roll
fs
push
cs
dec
adc
dec
cltd
sub
mov
insb
jmp
sti
ret
mov
icebp
mov
push
in
lcall
pop
fnstcw
scas
adc
add
xor
push
shl
fsubl
addr16
movsb
mov
jb
sub
adc
pop
mov
ret
and
jl
xor
clc
lcall
cltd
add
mov
outsb
cli
aas
rcll
sub
mov
out
cmpsl
movsb
cmc
in
daa
lods
mov
and
pop
jne
mov
mov
out
leave
push
iret
xchg
fwait
push
icebp
pop
out
inc
jle
lods
cmpsb
fcmovnu
xchg
dec
cmpsb
enter
shrb
pop
testl
int3
cltd
shr
add
mov
sub
add
adc
cmp
jmp
aad
cmpsb
ljmp
cmpsb
popa
mov
mov
repz
scas
fbld
out
mov
pop
ret
pop
sbb
aam
cmp
and
ljmp
or
sti
decl
xchg
xchg
imul
ja
lock
and
shl
dec
jbe
lahf
arpl
mov
aaa
xchg
adcb
add
rcll
jb
sbb
cltd
test
dec
ss
xor
addr16
cmp
repz
jge
shrl
xor
scas
mov
pop
jae
mov
shll
xchg
mov
mov
fs
xchg
test
mov
jg
sub
fwait
lock
mov
adc
ret
lods
pushf
pop
test
mov
mov
jnp
daa
je
pop
aad
mov
inc
mov
loop
jbe
mov
mov
bound
cltd
push
add
pop
cmc
daa
aad
add
cmp
dec
mov
je
mov
jmp
push
push
fdivrl
and
les
test
ret
cs
push
popf
add
pop
repnz
jle
push
fcompl
jne
inc
mov
xor
js
out
loope
push
sub
dec
mov
push
jno
mov
mov
outsl
stos
int3
repnz
mov
outsb
mov
cmpsb
js
adc
and
dec
jbe
mov
repnz
jge
sub
int
xor
pop
dec
into
int
jp
sahf
sbb
imul
add
mov
mov
stos
out
jae
ja
leave
scas
mov
gs
push
iret
inc
jle
xor
mov
mov
stos
cs
mov
lock
xchg
add
testb
clc
popa
dec
out
mov
movsl
lods
je
dec
and
lods
inc
cmc
ret
outsb
or
xchg
aas
mov
add
jne
repnz
cmp
sub
pop
test
and
lock
out
js
sbb
push
loopne
aam
movsb
mov
and
fisubs
xchg
nop
mov
mov
les
pop
xchg
xor
mov
sbb
mov
stos
mov
fcoms
dec
leave
sub
in
insl
add
imul
das
in
loop
js
inc
push
sar
mov
and
test
out
jge
push
aad
dec
jo
inc
push
in
in
daa
xor
cli
adc
push
and
sbb
cs
xchg
adc
mov
lea
inc
and
sbb
cmc
adc
inc
mov
and
ja
outsb
cmp
out
shl
sub
pop
adc
mov
jecxz
jbe
movsb
cld
test
lahf
iret
mov
insb
add
out
xchg
xor
xor
rolb
test
loopne
or
add
xchg
ds
adc
cs
mov
and
push
mov
aam
cmpsb
out
push
xchg
icebp
mov
mov
mov
fidivl
add
xchg
into
xchg
das
sbb
ljmp
ret
xchg
ljmp
xchg
inc
jne
mov
orl
and
mov
sub
int3
pusha
decb
xchg
cmpsl
xchg
and
jmp
ss
out
lods
xchg
dec
push
push
dec
push
sahf
sbb
cmp
inc
arpl
cld
mov
shl
loop
jno
cltd
pop
xor
cli
xchg
lods
mov
xor
pop
loope
sub
lcall
pop
mov
mov
sbbl
orb
add
pop
cs
or
adc
rcrl
inc
imul
sbb
inc
ret
or
aas
lahf
mov
cmpsl
les
sbb
push
add
push
push
repz
ja
cmp
test
xor
stos
lock
jno
xchg
adc
ja
insb
xchg
jnp
xchg
cmp
notb
imul
leave
add
and
lock
sarl
add
iret
aaa
xchg
push
jo
xor
jno
in
jbe
lret
or
add
addl
pop
mov
loopne
fsubrl
dec
imulb
lcall
out
aas
xor
pop
shll
dec
and
cmp
pop
lds
stos
mov
ficompl
shrl
dec
data16
push
cmpsl
ja
xchg
in
push
rorl
inc
mov
add
rcrb
cmc
jle
divl
fldcw
inc
adc
out
scas
inc
dec
add
pop
mov
frstor
mov
inc
pop
mov
push
adc
pushf
inc
pop
fisubl
lret
imul
sbb
mov
pop
sub
rclb
cmpsl
ss
mov
pop
js
into
dec
xchg
testb
outsb
sti
popf
push
cmp
mov
dec
popf
repz
sahf
dec
cmpsl
or
gs
mov
in
xchg
call
decb
scas
iret
out
add
pop
adc
mov
lcall
xor
or
pusha
push
jl
aam
aam
sub
mov
jecxz
and
mov
and
roll
in
addr16
sbb
and
jmp
sti
lea
lods
cmc
xchg
fs
sbb
push
xor
repz
jmp
dec
inc
pop
push
jp
push
test
scas
cmp
fsubl
jno
lods
rcrb
or
mov
jnp
mov
ja
imul
aam
cld
push
add
arpl
push
sub
aaa
jbe
bound
repnz
mov
pop
push
dec
popl
or
aas
xor
and
or
xorb
jnp
xchg
xorb
pop
jge
aam
jge
xchg
add
imul
cmp
adc
popa
and
sub
pop
pop
add
movsb
outsl
cmp
jp
mov
sbb
nop
jp
mov
stc
ss
sahf
neg
xor
leave
jp
inc
call
add
sti
scas
dec
stos
shl
xlat
jge
sbb
aaa
or
into
daa
push
pop
xlat
fs
fisttps
xchg
lret
mov
idivb
mul
ss
fsub
push
sub
out
insb
pop
incl
jecxz
pop
in
adc
inc
inc
loop
jbe
mov
sbb
push
mov
inc
push
inc
pop
inc
addr16
sub
in
movsb
insl
mov
xchg
negl
shlb
cmc
in
pop
mov
stos
shlb
fnstenv
daa
lret
xor
insl
xlat
fdivl
xchg
mov
out
push
mov
mov
inc
mov
xchg
call
mov
mull
or
bound
loopne
and
daa
imul
in
push
add
popa
sub
insb
xor
push
xchg
xchg
cmp
daa
sarl
bound
cmp
lcall
addr16
mov
jp
mov
adc
rcrb
imul
decb
cmc
xchg
lea
in
out
popf
dec
and
mov
imul
jae
xchg
aaa
dec
inc
push
out
out
mov
mov
lds
dec
lds
mov
in
inc
popf
cltd
dec
jns
dec
jmp
sti
xor
popf
icebp
and
xchg
les
xchg
imul
int3
sbb
psrlw
cltd
repz
pop
in
es
adc
rorb
iret
iret
scas
xlat
mov
in
xchg
loope
out
fbstp
jmp
cltd
test
js
xchg
sbb
xor
adc
mov
sahf
divb
mov
xchg
mov
xorl
inc
je
push
lret
aam
jge
test
mov
fisubs
fwait
mov
cmp
popa
cmpsb
sub
loopne
testl
mov
clc
pop
mov
mov
mov
jb
fcoms
add
sbb
cmc
xchg
sub
xchg
and
xchg
clc
cmp
test
sbb
push
or
cltd
sbb
mov
xchg
and
mov
pushf
push
xchg
inc
xchg
loope
or
sbb
push
xchg
mov
or
mov
loop
rclb
cli
mov
mov
mov
adc
or
xor
je
movsb
lea
lret
jge
ret
mov
adc
mov
mov
xor
xchg
push
push
mov
adc
push
jae
insl
in
test
mov
fistpll
mov
ss
aas
lods
cs
push
scas
je
lods
push
push
jmp
jnp
sbb
cli
cmc
fmull
pushf
scas
mov
mov
adc
rcrl
sbb
pop
fldl
lret
addb
cmc
jnp
pop
fisttpll
sbb
pop
js
andb
stos
adc
rol
fisttps
lock
mov
lret
cmc
hlt
xchg
cmp
push
icebp
test
ja
inc
ficomps
in
or
jns
inc
test
cs
das
xchg
cmpsl
xor
out
sbbl
test
das
outsl
out
push
ret
mov
aam
loop
mov
cli
inc
in
xor
pop
fucom
dec
ror
push
xchg
and
xor
rolb
mov
sub
lret
lock
rep
into
cmp
xchg
inc
pop
aam
inc
or
daa
lea
mov
pop
mov
in
mov
mov
adc
cli
cs
add
bnd
negl
or
mov
cmp
enter
subl
mov
movsb
jo
cli
mov
dec
arpl
or
loop
add
and
cwtl
movsl
cwtl
push
mov
jns
xchg
dec
js
fstenv
adc
shlb
loop
in
icebp
test
clc
repz
mov
lods
pop
enter
jp
dec
jae
cli
sahf
scas
jb
sbb
popf
jae
pusha
ds
cltd
xchg
mov
and
add
cmp
push
xchg
adc
mov
adcl
ljmp
xchg
out
adc
scas
push
sbb
clc
mov
stc
ljmp
pop
mov
and
or
and
pusha
cmp
popf
enter
dec
gs
call
dec
pop
daa
dec
and
sbb
sbb
mov
fdivrs
cmp
or
pop
push
add
int
ja
int3
push
jnp
pop
mov
sub
divb
cwtl
or
orb
add
sub
push
js
sub
outsl
mov
imul
cmc
frstor
sbb
icebp
add
push
xor
scas
int3
mov
icebp
out
je
ja
aam
mov
or
sbb
jecxz
loop
je
mov
mov
inc
xchg
or
mov
addl
loop
push
sub
cmp
les
mov
jp
lods
jmp
push
sbb
ss
loopne
mov
add
xchg
push
aaa
sbb
pop
mov
push
jo
cli
imul
ret
pop
jecxz
sti
je
out
inc
add
fidivs
adc
rdpmc
or
mov
cmpsb
fs
xor
jmp
adc
lea
pop
leave
leave
add
lods
out
dec
xor
lret
push
pop
push
add
ljmp
lahf
cmp
push
sbb
dec
aas
push
leave
and
xchg
push
sub
fidivrs
in
leave
iret
cltd
sbbb
pushf
adc
cwtl
hlt
rolb
or
cmp
ja
push
cld
xchg
xor
cmp
xor
je
xchg
mov
xor
shlb
sbb
enter
mulb
dec
xor
loope
sahf
jmp
nop
mov
pop
jb
divb
lods
adc
mov
data16
iret
jge
dec
test
dec
xor
cli
ftst
into
inc
adc
xor
pop
mov
jns
out
mov
mov
mov
aad
hlt
cmp
pop
fwait
out
hlt
aad
cli
jnp
out
xchg
push
js
arpl
jle
xor
pop
jno,pn
int
aas
sub
ret
popa
push
cmp
pop
sbb
pusha
sub
adc
sub
jae
mov
mov
jmp
addr16
push
add
pop
pop
repnz
pop
cltd
pop
jbe
pusha
pop
mov
mov
xchg
stos
pop
gs
adc
and
push
pusha
push
jmp
jmp
cmpsb
add
loope
sbb
cltd
dec
in
test
test
insb
sbb
and
push
jns
ret
adc
outsb
xchg
add
and
mov
cld
test
xor
add
or
push
jns
cmpsb
xlat
lods
push
data16
fwait
pushf
ds
mov
adc
ret
jg
sbb
pop
inc
dec
dec
pop
in
mov
cs
cmpl
mov
mov
push
jb
cmp
aas
aam
scas
jmp
das
ficoml
xor
insb
xacquire
mov
jle
outsl
pushf
jne
inc
push
lock
pop
aam
pop
pop
dec
pop
add
mov
push
xchg
and
mov
add
or
pop
mov
out
pusha
jl
repnz
scas
out
cmpsl
jg
cmp
sahf
pop
fs
and
mov
sbb
mov
mov
pop
inc
pop
jge
jne
shll
jns
bnd
into
imull
xchg
push
lcall
push
test
sub
ljmp
jecxz
rorb
popw
push
pop
inc
cmp
mov
out
call
dec
jne
mov
push
add
mov
push
test
sub
pop
das
mov
jo
add
push
cmpsl
hlt
or
icebp
inc
lcall
dec
lods
sar
push
and
daa
xchg
insb
test
cmpsl
xor
jle
dec
loope
stos
repz
xor
mov
aas
mov
sbb
fcoml
ret
std
push
aad
jg
aam
js
or
in
rcrb
cmp
inc
outsb
dec
or
pusha
mov
ljmp
add
add
arpl
les
pop
add
adc
lods
mov
fbld
mov
fxch
add
sbb
cmp
arpl
pop
add
insb
repz
jo
insb
and
cs
outsb
sub
out
push
aas
jmp
mov
mov
xor
and
scas
mov
push
shr
cmp
cmp
push
stos
lret
sbb
adc
aad
push
sbb
loope
mov
push
repz
xor
push
dec
popa
jp
adc
inc
push
call
faddl
add
movsb
mov
repz
mov
lea
dec
cmp
iret
jno
jecxz
fcomip
movsb
mov
xchg
fbld
sbb
inc
and
jns
cmc
push
adc
pop
shlb
cwtl
inc
cmp
into
nop
aad
mov
cmc
lret
stos
adc
lahf
xchg
mov
jg
pop
lods
mov
scas
or
pop
cwtl
es
push
inc
xchg
inc
outsl
mov
cmpsl
jmp
fbld
movsl
mov
jno,pt
dec
cltd
dec
js
les
test
mov
in
clc
cs
repz
fwait
mov
jg,pt
shr
sbb
cmp
shlb
test
lret
out
test
shr
add
push
fisttpl
push
and
adc
push
scas
mov
or
pushf
fbld
aad
cmpsl
int3
loop
movsb
pop
sub
xor
mov
pop
insl
insb
add
push
dec
sbb
push
iret
js
jp
cld
out
adc
mov
xchg
into
aaa
je
inc
xchg
inc
pop
or
adc
sbb
push
sarb
imul
ret
push
cld
pop
pop
ja
mov
mov
jb
jp
mov
mov
sub
inc
and
cltd
and
aam
das
cmc
lahf
cmc
out
ret
fldenv
and
mov
push
dec
pop
out
mov
sub
ret
push
icebp
xor
mov
sub
mov
nop
push
int
cmc
xchg
add
rcrl
mov
adc
mov
or
jae
addr16
push
dec
repz
mov
mov
addr16
cs
adc
aad
pop
in
sub
mov
aas
imul
jmp
push
out
mov
mov
xchg
repnz
mov
cwtl
xor
ss
sub
or
xlat
pop
mov
jbe
shlb
enter
or
add
jae
iret
xchg
icebp
rol
mov
dec
data16
or
mov
inc
adc
cmpsl
cmp
inc
add
and
xor
test
sbb
xlat
xor
test
xor
add
scas
mov
inc
cmpsl
pop
mov
dec
mov
mov
insb
inc
and
imul
iret
jge
in
mov
test
jle
jb
pop
out
mov
pop
lahf
sbb
stc
sbb
sub
sbb
jecxz
and
xlat
aad
or
jo
sub
stc
fildl
mov
sti
ret
jp
mov
pop
xor
mov
cmp
daa
repz
frstor
sti
repz
out
negl
iret
cmpsb
in
and
and
test
pop
call
mov
in
mov
xor
mov
and
jne
and
lcall
mov
adc
ret
repz
pop
ljmp
imul
ja
jb
cli
mov
jl
fstpl
iret
mov
pushf
mov
sbb
mov
loope
mov
ficoml
jl
push
js
mov
mov
xor
lods
add
or
jge
fidivl
pushf
mov
cmp
sar
push
inc
sub
movsb
xchg
dec
aaa
mov
paddsw
aam
mov
push
jecxz
adc
lods
adc
mov
xchg
test
adc
inc
and
fcomip
js
fwait
shrw
jno
je
jecxz
movsl
stos
dec
dec
fcom
pop
jnp
loopne
add
xchg
mov
cmpsb
sbbl
push
cmp
xchg
mov
pop
subb
pop
or
aam
into
sbb
es
jno
push
mov
rclw
notl
in
pop
les
cmp
mov
cli
hlt
mov
sub
mov
push
rolb
mov
mov
test
jns
inc
pusha
mov
or
clc
mov
in
cmp
push
test
daa
push
fidivrl
cs
add
push
movl
inc
mov
cltd
repnz
and
xlat
movsb
mov
cmp
push
jno
jne
pop
in
push
and
xchg
adc
pop
cli
cmp
dec
jmp
dec
repnz
cmpsb
fldt
push
in
les
out
and
pusha
ljmp
sub
sub
pop
mov
cmp
and
mov
sbb
xchg
popf
in
cmc
pop
xchg
in
lds
add
pop
adc
cmp
lret
fisttpll
jmp
ret
add
fdivrp
mov
jle
xchg
xchg
inc
movsb
int3
mov
or
inc
cmp
inc
ss
add
sbb
adc
inc
push
xor
dec
mov
out
out
dec
or
fiadds
push
push
cmp
mov
add
push
nop
rorb
inc
enter
mov
jno
out
and
inc
pop
je
movsl
inc
pop
add
push
loop
cmpsb
push
jae
mov
lock
or
ret
sbb
mov
jbe
ja
fs
dec
iret
dec
cwtl
mov
repz
mov
mov
ljmp
out
jge
stc
jo
lahf
inc
xchg
push
sub
cli
jnp
xor
pop
fs
jns
pop
daa
xchg
mov
pop
fsub
inc
add
jmp
cld
leave
sti
xor
xchg
in
cmpsb
das
ret
jmp
mov
or
lds
add
sti
dec
and
dec
ret
int3
cmpsb
dec
in
xchg
xchg
rcll
add
mov
ds
imul
iret
xor
xor
mov
adc
sti
cmp
jp
sub
jo
xor
jmp
jg
insl
out
aaa
ret
mov
out
idivl
rorl
popf
push
dec
push
jecxz
push
add
enter
jbe
mov
in
mov
inc
and
loope
jecxz
fidivrl
rorb
jecxz
inc
push
cmp
mov
fwait
ljmp
pop
jl
ljmp
popa
ret
mov
repz
shlb
jp
in
push
out
pop
xchg
sub
xor
cmp
sti
adc
mov
out
mov
call
out
in
enter
mov
aad
xchg
dec
xor
or
push
push
mov
jbe
or
lea
jge
sbb
xchg
dec
insb
lds
or
rclb
lahf
clc
daa
scas
aam
push
inc
or
cs
inc
insb
ret
mov
in
lret
lcall
cmpsl
or
into
sbb
loop
sbb
pop
mov
lea
push
mov
mov
xor
mov
mov
das
xchg
pop
in
pop
fcomi
add
push
arpl
xor
sub
loope
push
arpl
sbb
aas
dec
sets
and
add
popa
out
xlat
loopne
adc
lret
and
xchg
pop
sub
and
mov
mov
and
repz
mov
mov
dec
dec
dec
sahf
and
push
les
mov
sbb
mov
xchg
insb
cmpsl
jno
rcrl
sbb
sbb
leave
mov
sahf
mov
dec
xor
and
imul
jns
mov
lea
jb
sbb
das
frstor
sbb
mov
popa
mov
repz
push
aad
push
add
hlt
mov
lret
leave
pand
cmp
add
fistpll
pop
lcall
aaa
gs
pop
outsb
les
pop
filds
lods
add
mov
dec
out
push
sub
dec
xchg
movsb
ds
inc
fs
inc
cs
cmpsb
and
cwtl
xor
shll
fnstcw
std
sti
mov
out
inc
jg
or
popf
cmpsl
push
das
cltd
cmpsl
mov
xor
cwtl
in
movsb
aas
pop
sub
dec
iret
sbb
roll
bound
xor
xchg
push
dec
dec
test
fcomps
push
mov
xchg
shll
ret
inc
add
sub
ret
xchg
pushf
adc
or
push
xchg
pusha
rclb
cld
mov
repnz
jmp
adc
dec
cmp
push
mov
inc
xchg
les
cmp
cli
sub
mov
scas
fsts
xchg
test
inc
jle
xorb
add
cwtl
into
sbb
jns
xchg
and
sbb
xchg
leave
adc
add
int
inc
add
cli
lods
mov
fimuls
mov
lret
pop
cmp
mov
ja
bnd
fidivrs
mov
arpl
orb
lcall
jmp
bound
sbb
stc
xchg
fucom
or
inc
in
in
dec
lds
add
jmp
pop
loope
add
test
inc
in
fucom
or
mov
scas
cmp
test
rcrb
pop
sti
adc
push
adc
shlb
xchg
add
out
push
mov
pop
int3
xchg
jle
stos
out
repnz
lcall
pop
pop
stos
test
or
repnz
test
loopne
xorl
in
or
imul
aaa
mov
cmpsb
pop
jecxz
jno
hlt
int3
xchg
imul
push
pop
pop
mov
in
jmp
mov
inc
and
add
xor
dec
sbb
adc
or
mull
data16
shlb
pop
xor
cmpsl
ds
sbbb
mov
popa
ljmp
fisubs
sub
xlat
push
mov
js
or
in
in
int3
fists
sbb
lret
imul
jno
adc
adc
mov
mov
mov
hlt
sub
push
jae
mov
call
cmpsb
aas
mov
aaa
dec
aad
aad
inc
push
outsl
mov
fcomps
push
dec
sbb
push
xor
jbe
das
jge
mov
sarl
into
clc
cmp
mov
andl
inc
jae
cmpsb
lds
test
mov
mov
or
jmp
jecxz
and
and
pop
adc
fldl
jb
push
cs
int
xor
into
sub
es
push
pop
mov
adc
stos
and
andb
cltd
popl
lods
repz
rcr
add
mov
aam
jmp
xor
xchg
push
pop
xor
adc
xchg
sbb
or
push
call
clc
mov
push
and
mov
cmpsl
adc
push
pop
push
inc
shll
sar
xchg
mov
or
das
pusha
add
mov
mov
mov
bswap
sub
aas
sbb
sub
jae
insl
daa
popa
inc
sarl
scas
arpl
add
outsl
cld
in
sub
out
xor
and
mov
xchg
sbb
mov
pop
pushf
lcall
cmpsl
fwait
loopne
dec
cs
rolb
sti
mov
add
dec
cltd
mov
xchg
adc
cmpsb
mov
cmp
inc
mov
mov
mov
shl
mov
inc
loopne
scas
pusha
repnz
les
pop
imul
divb
and
jnp
insb
aam
iret
mov
or
loopne
loope
push
fcoms
rorb
movsl
daa
add
in
lret
ja
in
cmp
out
sarb
les
arpl
cli
inc
sbb
test
dec
sar
movsl
or
fildll
bound
adc
daa
sub
push
mov
cmc
inc
in
sub
inc
mov
mov
xchg
push
adc
repz
icebp
xchg
loop
outsl
xor
cld
nopl
add
ret
pusha
xlat
and
and
mov
pop
dec
inc
popa
nop
sbb
loopne
mov
out
sub
sbb
popf
pop
rolb
xchg
and
sbb
mov
xor
shl
dec
orb
push
or
jbe
pop
push
cwtl
jl
and
cli
pushf
out
cwtl
sub
sar
or
mov
cs
mov
aad
jl
xor
test
popf
cmp
pop
xor
std
pusha
cmp
mov
rcr
xchg
ret
adc
or
adc
dec
pop
push
popf
imul
imul
imul
or
ret
xchg
fstps
add
lcall
lcall
mov
push
sti
lods
sub
cmp
test
test
nop
shl
mov
and
cmpsb
mov
gs
scas
lea
mov
scas
ficomps
pop
mov
mov
pushf
xor
adc
scas
lods
adc
push
bnd
push
push
imul
push
fcomps
lock
dec
dec
mov
lods
lret
and
test
rcrl
sub
pop
addr16
incl
js
xchg
or
and
fists
in
test
pop
push
lods
lea
and
jg
sbb
rolb
cmpl
mov
subb
push
shrl
xlat
jnp
cmp
fists
mov
fadd
aas
cmp
jae
sbb
and
es
sbbb
in
icebp
call
sub
sarb
dec
dec
cmpsl
pop
jbe
pop
dec
cld
push
and
mov
scas
jecxz
mov
sar
mov
sub
and
pusha
dec
adc
xlat
inc
xchg
insb
int
mov
jne
repz
add
jo
sub
cwtl
fdivr
sarl
orl
lods
stos
mov
xchg
js
loope
mov
ret
popa
std
das
dec
cltd
xchg
push
test
cs
bound
ret
inc
daa
push
or
mov
sarl
gs
jmp
xchg
mov
int
in
cmp
pop
inc
cs
and
mov
enter
add
mov
push
and
cwtl
inc
xor
out
lahf
andl
pcmpeqw
add
js
lcall
aas
in
add
xor
fwait
xorb
xor
out
fisttps
mov
rorb
rolb
xchg
in
lret
push
cmp
sbb
ljmp
popf
fs
icebp
in
subb
push
jp
out
out
xor
or
ret
cwtl
or
jl
sub
pushf
xchg
sub
and
mov
test
ds
dec
jmp
mov
sub
mov
sub
insl
aad
xchg
stos
mov
sbb
stos
ss
outsl
add
push
stc
mov
pop
nop
icebp
mov
iret
xor
sbb
cmpsb
shl
cld
mov
inc
cmpsb
dec
out
dec
xor
pop
lret
jecxz
clc
sbb
xchg
xchg
and
jp
shrl
mov
cmp
movsb
xchg
inc
or
adc
push
sbb
lret
add
cmpsl
push
xchg
or
mov
pop
sbb
mov
pop
jne
add
mov
xchg
mov
sbb
int
mov
and
mulb
into
push
ss
mov
push
push
lea
jl
add
mov
pop
pop
lahf
dec
pop
push
ds
es
imul
ljmp
in
movsb
dec
jg
cmp
es
fst
jecxz
mov
mov
notl
dec
std
and
pop
xchg
mov
pop
lahf
lds
mov
lock
lret
hlt
lahf
fldenv
daa
imul
repnz
cmp
inc
push
push
in
pop
add
int
pop
jbe
mov
mov
sbb
testl
insb
ljmp
sbb
movsb
in
mov
insb
dec
mov
or
jle
popf
test
push
and
lahf
or
and
and
xor
cmp
mov
jae
jecxz
pop
jl
test
jmp
ljmp
arpl
ret
sbb
mov
adc
add
dec
mov
stc
xchg
push
push
fnsave
xor
mov
push
loope
push
inc
jg
addr16
mov
mov
or
repz
push
jb
cmp
leave
mov
dec
add
inc
roll
paddb
mov
xor
xor
in
push
icebp
aas
sti
icebp
add
xlat
hlt
fnstsw
push
xor
iret
xchg
adc
mov
pop
cmp
lcall
and
add
mov
scas
mov
mov
dec
xlat
cmp
push
sti
cmc
jecxz
insb
popf
sub
in
adcl
push
xchg
fcompl
dec
std
nop
add
adc
lods
lret
adc
fldl
jnp
jne
jb
sbb
fsubrs
jecxz
adc
cmpsl
ret
icebp
xor
dec
icebp
pop
imul
aam
mov
inc
sub
sarb
pop
rolb
xchg
adc
or
xchg
pushf
mov
push
bound
push
cmc
xor
inc
add
mov
fidivrl
hlt
mul
jno
call
loopne
mov
fcomip
mov
in
test
cmpsb
in
fldcw
xchg
popfw
push
and
jnp
mov
ljmp
mov
or
push
enter
lods
xchg
std
scas
mov
out
insl
test
jb
push
pop
mov
and
rcll
pop
adc
sub
loope
in
sahf
cld
mov
adc
push
stos
fisubrl
notb
inc
jecxz
mov
cmp
testb
mov
jg
jge
bound
inc
sub
mov
inc
add
push
pop
cli
add
cld
mov
lea
mov
movsb
pop
arpl
out
push
pushf
inc
and
push
push
sub
outsb
leave
dec
sub
out
xor
mov
jnp
jnp
xor
sub
mov
or
cmc
clc
dec
and
movsb
test
test
fucomi
jae
sub
mov
inc
push
clc
jnp
cld
mov
push
cltd
sub
in
pop
mov
cltd
add
adc
push
data16
inc
leave
adc
push
xor
cmp
jne
popa
xchg
xchg
push
imul
movsl
test
rclb
fbld
pop
subl
dec
sub
mov
or
mov
rcrl
sbb
lods
dec
fists
lods
in
inc
movsb
xor
stos
outsb
mov
mov
rcll
std
cmp
jl
inc
mov
ret
cmp
es
push
jnp
adc
and
aaa
ljmp
rclb
movsl
fmull
jae
lods
inc
fists
js
sub
push
in
push
and
xor
hlt
xchg
jp
add
popa
mov
test
cmc
loopne
loopne
adc
add
inc
negb
xor
incb
pop
bound
cmp
dec
scas
movl
je
lahf
leave
mov
pop
xorb
push
jo
push
pop
enter
mov
push
outsb
jo
enter
notl
mov
lgs
pushf
inc
mov
or
jb
mov
sub
jo
ljmp
faddp
push
adcb
jl
mov
js
arpl
pop
bound
divl
gs
xchg
cld
lcall
mov
into
dec
lock
xchg
aam
ss
mov
out
fwait
and
add
lcall
lahf
pop
or
movsb
ds
pmulhuw
fldl
add
or
insl
cmp
aam
stc
pop
xor
lahf
push
jp
shlb
xchg
scas
outsb
decl
cmc
int3
cmc
int3
or
ljmp
movsb
test
mov
sub
cmpsl
sar
cmp
daa
xorb
pop
jge
sub
stos
mov
add
stos
push
into
xor
sbb
cld
adc
and
and
int3
adc
into
pop
inc
xor
push
dec
pushf
cmp
rorb
sbb
sahf
pop
in
mov
sub
inc
sub
arpl
out
pusha
lods
mov
push
lea
sbbl
andb
mov
dec
pop
dec
pushf
ss
add
pushf
ja
stc
out
fwait
imull
cmp
lcall
pop
mov
adc
and
jge
push
notl
ja
mov
scas
int
dec
pop
dec
cltd
in
pop
test
call
mov
mov
add
iret
push
jecxz
xor
sahf
jbe
cmp
mov
fistps
dec
xchg
cltd
xor
pop
mov
xchg
sbb
sub
loopne
repz
mov
pusha
repnz
or
dec
cwtl
leave
jp
xchg
cmpsb
call
lahf
xor
in
adc
jge
jmp
xchg
dec
negl
sbb
sub
and
push
push
xchg
popf
sub
ss
popa
movhps
popa
cmp
jle
movsb
out
add
imul
xchg
xlat
mov
xchg
mov
or
xchg
pop
lcall
add
aad
xchg
scas
clc
call
pop
enter
pop
adc
or
sar
movsl
test
lods
scas
sbb
jno
sbb
mov
fwait
bound
insb
xchg
jb
sbb
nop
out
arpl
setbe
andl
test
jge
lea
test
repnz
out
jo
mul
in
popa
std
sub
or
hlt
add
out
and
fwait
jbe
std
mov
xchg
and
loop
dec
shl
or
dec
movsb
jo
je
jle
jae
sub
outsl
fisttps
cwtl
fstpl
mov
fcoms
loopne
imul
mov
ret
scas
jg
shl
dec
inc
fbstp
push
addb
in
out
dec
movsl
outsb
mov
push
imul
iret
rcl
lret
dec
jecxz
cltd
pusha
lahf
and
sub
push
cltd
sub
repnz
adc
scas
das
adc
sbb
sbb
cli
sub
sahf
loope
pushf
sub
test
cmpsl
push
adc
xchg
stos
in
imul
hlt
ljmp
mov
inc
mov
cmpsb
sub
xchg
addr16
ret
repz
mov
add
push
dec
add
sbb
jno,pn
rcl
cmp
sbb
inc
int3
add
xlat
shlb
insb
sarb
or
mov
into
les
popa
gs
aam
out
inc
stos
mov
cmpb
sub
movsb
pop
jmp
sti
inc
mov
sub
xchg
adc
sub
jbe
inc
leave
cmp
inc
or
shrl
imul
lcall
push
cmp
je
xor
push
insl
mov
pop
ja
popl
enter
add
adc
lds
inc
packuswb
cmp
daa
iret
clc
int3
subb
add
sub
outsl
lods
sbb
sbb
into
repz
dec
inc
iret
repz
dec
inc
push
dec
int3
mov
enter
fimull
cwtl
dec
pop
inc
adc
cmovle
and
cld
dec
aad
dec
mov
mov
inc
stos
inc
pop
addr16
fistpll
cmp
xor
and
cmp
mov
push
lock
sub
arpl
out
or
sbbb
in
aam
fucomi
lcall
pop
cmp
je
jno
mov
cmp
sub
mov
stc
xchg
movb
fistpl
lods
mov
jmp
leave
in
dec
mov
push
or
push
adc
sbb
mov
je
sbb
es
mov
push
xor
leave
aam
xor
push
mov
clc
sub
xchg
sub
stos
lock
dec
jp
lods
push
dec
or
mov
das
push
push
cmp
out
jns
mul
mov
cmpl
mov
mov
addb
mov
xchg
flds
pusha
mov
cmp
cmp
clc
hlt
add
ss
fcompl
and
cmp
sub
lahf
out
lret
aam
pop
and
mov
cmc
mov
sub
mov
repz
ljmp
adc
sti
pop
icebp
add
mov
insl
out
je
bound
jg
aaa
mov
js
xor
push
and
and
adc
cmpsb
movsb
sub
push
sti
and
jge
daa
xlat
sub
adc
cmp
mov
mov
xchg
in
mov
out
test
xor
jo
push
jns
add
push
pop
icebp
sub
pushl
xchg
aaa
mov
and
xor
mov
fdivl
jno
or
inc
jo
ja
js
mov
mov
push
ror
rorl
es
inc
dec
cli
cs
xchg
mov
cmpsb
shl
sbb
clc
mov
cwtl
xchg
ss
and
mov
imul
mov
cld
pop
enter
mov
mov
fcoms
push
sub
and
dec
inc
inc
pop
fdivrp
cmc
jmp
mov
sub
data16
mov
testb
lcall
mov
shr
inc
mov
ret
shlb
int3
mov
pop
int
xchg
dec
sbb
icebp
pop
bound
aaa
cli
les
add
add
xchg
popf
cmp
jb
cmpb
xchg
inc
mov
add
out
ret
cmp
shl
pusha
mov
stc
mov
jle
bound
jmp
enter
sub
dec
mov
sub
ficoml
cmpsl
aaa
jno
aad
mov
mov
mov
aas
test
and
jb
cmpsl
aam
hlt
dec
loop
xor
mov
pusha
push
insl
into
enter
int3
mov
mov
sbb
pop
or
sub
shll
xor
mov
ret
leave
popf
add
insl
enter
int3
lcall
imul
les
icebp
mov
sub
dec
sub
jg
scas
inc
dec
out
cmpsl
push
sub
xchg
imul
sbb
or
inc
add
jecxz
inc
insl
jmp
sbb
dec
or
std
and
jno
inc
adc
loop
push
cmp
sub
and
adc
ss
xchg
push
pop
mov
enter
shl
mov
push
mov
rcl
add
repnz
fucomip
out
sbb
sbb
xor
enter
cmp
push
inc
mov
jmp
sub
mov
add
xchg
add
js
dec
out
mov
mov
nop
in
jl
mov
aad
jmp
cmp
addr16
cmc
cltd
sub
test
push
gs
mov
fcmovne
mov
subb
xor
neg
lret
xor
cmp
mov
inc
fildll
add
pushw
cld
push
jmp
and
sahf
mov
dec
fs
mov
adc
cmpsb
pop
stos
insl
jg
mov
xor
xchg
clc
add
int
punpcklwd
and
jge
shll
ja
stos
int3
ret
mov
movsl
xor
filds
nop
fcmove
and
jno
xchg
movsl
das
pop
mov
jns
xchg
fdivl
cmp
xchg
aas
adc
inc
lret
jmp
cltd
xchg
add
pop
lods
loope
dec
jge
and
js
lahf
stc
push
es
jbe
je
adc
iret
out
stos
movsb
push
mov
std
aam
push
mov
dec
mov
lock
call
sub
pop
jns
push
pop
repnz
out
rcll
test
mov
test
xchg
sub
js
add
arpl
push
mov
lods
add
icebp
jnp
jg
mov
jae
pop
xlat
outsl
ret
xor
xor
or
sbb
outsl
out
cld
pop
push
xchg
mov
clc
sub
scas
icebp
xchg
add
insl
ja
sbb
push
push
and
push
pop
adc
jmp
jecxz
xor
nop
out
leave
or
jb
dec
sbb
mov
call
daa
mov
and
out
dec
aaa
pop
inc
aam
jb
sub
mov
mov
sub
outsb
test
out
popa
mov
push
lock
out
dec
xor
out
lcall
fdivrl
or
mov
outsb
lret
mov
xchg
scas
mov
movsb
inc
xor
adc
adc
or
and
sbb
xor
in
push
aad
cmp
aam
dec
in
lcall
aaa
sub
jno
push
fcmovne
fsts
rcl
je
lock
lret
ret
push
add
popf
cmpsl
jmp
mov
mov
sub
aam
xchg
xchg
cmpsl
mov
sub
or
loopne
push
push
sub
jb
mov
sub
into
in
jecxz
ss
inc
jno
imul
inc
mov
push
add
icebp
and
sbb
or
inc
and
push
push
es
fs
mov
or
sub
mov
call
dec
out
call
and
add
sahf
or
xchg
out
cmp
jg
pushf
out
and
jecxz
in
into
jns
fs
push
mov
jbe
shrl
xor
xchg
xor
int
sub
mov
and
and
scas
aaa
push
enter
enter
pop
test
pop
push
cvtdq2ps
mov
ret
sahf
fdivl
cmpsl
and
pop
es
sub
decl
cmp
idiv
sub
mov
mov
aas
mov
push
mov
jno
inc
xchg
hlt
iret
lret
mov
and
jnp
mov
iret
dec
ja
sbb
dec
push
mov
repnz
scas
jle
push
jmp
sub
repnz
mov
cmc
outsb
or
cmp
adc
dec
stc
insb
and
clc
ljmp
add
cmp
pusha
push
mov
dec
push
test
jle
lea
mov
shll
add
push
ss
mov
jmp
xchg
push
inc
fsubl
repnz
imul
loopne
sarl
xchg
mov
je
bound
fildll
iret
loop
lahf
push
cmp
mov
mov
inc
jbe,pt
adc
push
add
call
pop
inc
je
fldenv
lds
pop
xchg
add
pop
out
in
call
add
and
sarl
pop
ficoml
in
mov
test
adc
push
mov
jns
add
imul
dec
mov
xor
sub
jae
call
loope
xor
je
subl
loopne
adcl
in
mov
pop
pop
cmc
push
pop
repnz
ds
scas
inc
aam
and
repnz
or
int3
aas
testb
and
pop
push
add
lret
scas
push
lret
fildl
test
cmp
pop
es
push
std
pop
in
sbb
add
lcall
sub
popf
mov
int3
shr
test
mov
imul
fmuls
inc
xchg
nop
mov
mov
gs
pop
inc
lods
mov
push
mov
aam
shll
xor
inc
test
icebp
insb
stc
loope
sarl
pop
adc
jp
pop
lahf
and
jo
add
je
adc
call
pop
push
xlat
subb
xlat
jno
sbb
xchg
rolb
push
shll
push
push
in
test
in
xor
out
repz
mov
pop
push
mov
call
maskmovq
add
lea
pushf
push
gs
insl
mov
xor
aad
out
push
ror
dec
adc
jmp
fcoms
fidivrl
pop
xor
mov
jns
pop
loopne
mov
xor
mov
lods
lea
jnp
in
negb
mov
or
rcll
in
inc
out
sub
and
pop
iret
ljmp
aas
js
cmp
jle
ja
and
and
push
loope
mov
insl
repnz
or
push
mov
mov
or
push
jbe
ds
inc
mov
dec
sub
cmpsl
push
cmc
out
push
shlb
addb
cmp
jecxz
and
repnz
mov
cld
rcr
pop
push
push
loope
neg
xchg
stos
jbe
dec
mov
xchg
pop
movsb
inc
movsl
sbb
fmul
movsl
into
adc
data16
dec
xchg
lret
stos
rcrl
test
mov
lret
fldenv
sub
push
push
pop
push
push
fstpl
sti
and
add
add
movsl
push
adc
aaa
sub
add
call
sbb
push
jmp
dec
stc
sbb
mov
xor
add
bound
movsl
movsl
mov
movsl
push
sti
sub
and
pop
push
cmp
and
cmp
jp
pop
das
idivb
sub
jle
xchg
rcrb
je
pop
push
sub
jo
or
bound
adc
dec
sbb
daa
push
dec
cmp
fisubrs
dec
sbb
xchg
shlb
aam
cmp
jg
jmp
loopne
cs
pop
jg
outsl
add
push
lret
imul
in
das
adc
sbb
bound
mov
dec
outsl
xlat
daa
xchg
mov
jl
scas
xor
adc
arpl
shl
pop
mov
pop
jns
outsb
push
js
push
jne
and
adc
mov
push
das
sbb
das
sbb
push
adc
out
mov
hlt
and
lock
fdivrs
push
pop
cmp
adc
jg
scas
fcomi
cwtd
jb
clc
divb
fmulp
cmp
mov
cli
push
imul
shll
fwait
mov
cwtl
outsb
add
and
addr16
test
pop
rclb
lods
mov
dec
adc
push
outsl
in
mov
or
xor
push
les
push
mov
dec
sbb
bound
fldt
je
or
daa
stos
lods
call
jge
test
mov
insl
out
or
jle
fcoms
xor
in
cwtl
inc
popf
nop
xchg
sub
shrl
stos
or
pop
out
cmp
adcb
mov
jl
repnz
shlb
mov
fnstcw
mov
jnp
and
cmp
test
sbb
int
add
movsb
roll
sub
pop
std
sub
xor
fadds
cltd
xchg
cmpsl
jge
jge
jge
pop
sbb
pop
ljmp
push
inc
cmp
and
paddd
or
mov
mov
mov
lods
icebp
je
adcl
cmp
add
jnp
or
mov
push
mov
leave
dec
dec
pop
xchg
dec
sbb
pop
ljmp
testb
leave
cmp
out
pop
push
sub
mov
mov
aas
mov
push
mov
sahf
insl
roll
add
mov
sub
stc
lock
jecxz
fisubrs
jbe
jns
dec
push
and
and
scas
mov
add
mov
pop
shlb
inc
fbstp
push
loope
mov
ret
add
int3
mov
out
inc
in
cwtl
dec
lock
outsl
and
jno
lea
out
xchg
es
mov
add
imul
dec
add
rclb
lea
xchg
movsb
push
push
mov
pop
and
cmp
adc
mov
fsubrs
xchg
dec
mov
xchg
notb
pop
test
cmp
cmp
cmp
sub
js
or
adc
jae
int
jmp
scas
jmp
mov
jecxz
jl
test
les
mov
jge
adc
inc
inc
outsb
or
pushf
add
pop
sahf
testl
pop
je
mov
cmpsl
jo
cmpsl
mov
popf
jmp
xchg
add
lcall
iret
incl
pop
inc
std
lret
cli
loope
cmp
test
and
pop
xchg
ljmp
jnp
or
xchg
arpl
aad
addb
mov
jne
test
push
add
dec
test
adc
dec
cmp
jns
lcall
mov
std
cmpl
dec
loop
jb
jecxz
outsb
int
sbb
pop
ret
mov
cmp
out
popa
inc
hlt
cmp
mov
imul
scas
mov
xchg
es
loope
leave
das
cmpsb
jg
mov
bound
cmpsb
int3
inc
mov
test
movsb
movsb
icebp
jb
jl
fucom
cwtl
mov
cmp
push
fnstsw
dec
xchg
shll
sti
fwait
xchg
shll
pop
sti
and
mov
push
test
mov
das
pop
nop
into
xor
shr
cmp
lret
xor
jle
roll
in
daa
adc
and
dec
xchg
jo
mov
stc
movsb
addr16
ss
lods
xchg
pop
loopne
fnsave
inc
aaa
mov
push
dec
test
xor
xchg
repz
sub
mull
push
ss
mov
lock
xchg
pop
notl
adc
loop
sbb
push
xchg
inc
shlb
push
mov
sub
insb
fsubl
lods
lret
mov
rorl
leave
es
push
test
add
loopne
and
loope
aaa
rcr
add
iret
pop
adc
inc
mov
mov
jmp
shlb
scas
sub
and
test
stos
rcrb
rorl
cld
pop
cld
shrb
fiaddl
test
cwtl
xchg
sbb
sbb
scas
add
dec
adc
or
ljmp
xchg
mov
hlt
sub
mov
fnop
std
dec
mov
push
test
lods
cmpsl
mov
and
push
xor
push
popa
repnz
jle
pop
rcll
stc
push
inc
sbbl
repz
or
addr16
mov
cwtl
mov
stc
xor
aaa
in
jmp
sti
mov
and
lahf
rolb
cs
mov
ja
popf
or
jnp
lcall
dec
jno
test
add
push
aaa
mov
outsb
mov
push
mov
xor
mov
add
mov
movb
sbb
int
or
sahf
cmp
ret
jns
popf
mov
or
fildll
popa
add
inc
xor
orl
and
imul
scas
adc
std
in
sbb
mov
aaa
rcll
xlat
and
jl
xor
inc
cli
or
in
dec
gs
insb
out
test
push
mov
lcall
fcompp
loope
enter
cmp
repnz
xor
mov
fists
cld
jnp
pop
adc
in
loop
cs
push
jno
sbb
cmpsl
lret
subl
push
pusha
xor
test
push
addl
out
movsb
sbb
mov
xor
mov
aaa
jmp
xchg
vmovaps
cld
jbe
mov
scas
jle
mov
icebp
jbe
lods
jl
dec
cvtdq2ps
repz
les
sarb
or
push
cmp
or
loopne
in
je
icebp
inc
mov
add
dec
inc
hlt
sub
jns
xchg
jns
hlt
in
push
stos
test
push
aam
pusha
xor
lods
hlt
sub
fcoms
sahf
aas
xor
cmp
mov
lock
cmc
stos
mov
mov
es
lahf
push
fisttps
mov
xor
inc
jle
jmp
lret
ja
ret
mov
push
arpl
aas
adc
cs
int
inc
mov
fs
adc
loopne
cs
popa
shl
and
mov
mov
lret
sbb
jle
jns
dec
pop
inc
frstor
ds
and
fildll
int
xchg
out
push
test
jnp
pop
shll
imul
popf
not
loope
je
mov
and
stos
push
dec
cli
outsb
std
mov
jg
popf
cmp
incl
push
les
sub
aaa
xor
popa
rclb
aaa
pop
cmovnp
jle
pop
cmp
ret
mov
ret
inc
js
pop
and
lret
adc
lahf
cmp
add
ljmp
mov
cmpsb
push
mov
mov
call
fucomp
push
fidivrs
pop
adc
test
mov
mov
push
mov
sbbl
dec
mov
repnz
cmp
push
mov
mov
dec
mov
sub
jb
xor
pop
adc
insl
imulb
pop
jge
cli
xor
mov
ja
xchg
pop
cs
movsb
lret
nop
xchg
push
inc
inc
xor
lock
xlat
ja
pop
inc
dec
or
add
jge
push
mov
jg
stc
lret
mov
out
aam
adc
subl
idivb
int
mov
dec
inc
out
add
and
sbb
xchg
sbb
in
ficompl
lds
bnd
cwtl
lods
int
lds
shlb
xchg
jns
lods
insl
sbb
cld
adc
movsl
mov
jnp
imul
movsb
or
fcmovbe
jae
add
lods
aas
dec
jbe
mov
xchg
test
imul
fsubrl
mov
aaa
and
sub
addr16
fs
xor
and
mov
xchg
sbb
cmp
mov
out
or
mov
push
pushf
jno
adc
sub
dec
aam
jnp
mov
arpl
lret
mov
cli
mov
add
outsl
out
iret
scas
sub
sbb
shll
add
mov
xchg
add
add
pop
aaa
out
and
mov
mov
dec
iret
fsubp
mov
jle
cmp
ds
push
movsb
lods
ss
lret
incb
ror
test
push
ja
push
ffreep
pop
and
leave
pop
inc
pop
inc
cmp
testb
in
or
pop
pushf
sarb
mov
lcall
xchg
mov
aam
scas
mov
xchg
cs
and
dec
mov
arpl
inc
jns
int3
mov
sbb
mov
sub
mov
inc
inc
mov
in
pop
in
mov
mov
dec
sub
rcll
xchg
adc
mov
imul
xor
lea
leave
in
fisttpll
pop
xor
pusha
call
fucom
inc
push
das
pop
enter
aaa
push
adc
sahf
sub
scas
xchg
mov
push
fildl
jmp
or
cli
ss
lea
cmp
mov
mov
insb
ss
mov
mov
movsb
loopne
cwtl
mov
icebp
rclb
or
push
sbb
cmp
adc
inc
pop
adc
jno
ficoml
aaa
jae
jne
popf
mov
imul
sub
xchg
push
call
push
imul
adc
adc
negb
call
je
add
push
stos
icebp
cs
in
push
xlat
sti
lahf
out
mov
dec
sub
dec
push
pop
rol
cli
xchg
xchg
divb
es
push
jmp
arpl
ja
enter
xor
push
aam
jl
cli
adc
cmp
and
sub
sub
pushf
jg
adc
add
sbb
cwtl
inc
inc
das
jo
insb
out
out
ds
mov
negb
cmpl
dec
lods
and
mov
loopne
add
sub
mov
adcl
mov
or
data16
pushf
pop
in
adc
scas
movsl
and
ds
test
jle
pop
pop
add
xor
mov
shll
dec
sbbb
xchg
lock
aam
sahf
fmull
pop
insl
add
icebp
push
push
adc
dec
mov
mov
pop
push
jge
inc
xchg
out
fsubs
shlb
sbb
jo
or
dec
jne
gs
mov
stc
insb
out
cwtl
fs
jmp
adcl
jle
lret
add
jp
adc
scas
adc
sbb
pop
and
sub
add
sub
sbb
clc
cltd
xor
out
and
and
jno
rcll
in
int
sub
dec
ret
pop
inc
fnsave
push
aas
shrl
dec
push
mov
sub
cmp
and
xchg
sub
sarb
test
or
mov
mov
xchg
cltd
mov
inc
leave
cltd
enter
mov
fst
cwtl
xlat
test
push
mov
cmpsb
xlat
push
je
mov
inc
and
pop
cmc
jne
xor
sub
repz
adc
pop
aaa
inc
dec
testl
mov
mov
jno
xchg
xchg
in
pop
das
js
pop
push
jns
and
into
sbb
pop
and
mov
sub
pop
insb
iret
ficomps
adc
jg
loopne
xor
ds
sbb
adc
xchg
aaa
shll
jo
add
inc
add
inc
imul
shrl
and
ljmp
adc
imul
into
dec
pop
jbe
fiadds
js
xchg
ljmp
xchg
in
jecxz
aaa
push
add
nop
add
and
cmp
int
add
jne
out
aaa
lods
inc
movsl
jae
fstp
pushf
cs
and
test
call
jne
loope
into
jns
sysenter
xlat
arpl
cmp
adc
mov
jnp
ljmp
mov
scas
xchg
push
sarl
adc
aas
cmp
dec
adc
push
in
mov
push
addb
mov
sti
xor
mov
dec
mov
loop
shl
push
aaa
xchg
sbb
mov
dec
movsl
mov
adc
imul
aas
in
adc
lcall
push
call
sub
mov
xor
loopne
gs
div
stos
jecxz
lods
jno
xchg
sub
movsb
sbb
jns
pop
mov
test
jbe
xlat
jb
in
pop
pusha
mov
mov
mov
imul
or
or
ret
aaa
cmp
or
mov
ret
test
repnz
mov
imul
repnz
aaa
inc
adc
or
push
xchg
or
divb
cmpsl
aas
cmp
and
lret
inc
pop
xchg
popa
add
dec
dec
xor
inc
fiaddl
cmp
ljmp
push
in
daa
stos
mov
adc
js
inc
push
jbe
add
lret
test
mov
aam
lods
and
std
mov
pop
test
push
test
je
enter
sbb
xlat
cmpsl
jg
popa
add
sbb
rorb
inc
iret
rcrl
sub
mov
and
je
ret
cmp
jbe
movl
pop
xor
jl
adc
cmp
cmc
in
mov
pop
repnz
cmp
xor
sbbl
or
dec
scas
sub
pop
pop
je
lahf
push
push
repz
xchg
imul
cmp
xor
jle
mov
shll
daa
sub
mov
leave
inc
push
lea
cmp
in
jp
push
dec
xchg
push
daa
or
out
and
or
jl
xor
int3
push
ljmp
movsl
inc
fnstsw
imul
repnz
sbb
test
std
add
fldenv
mov
js
add
mov
xchg
ljmp
aam
bound
test
xchg
push
imul
push
rorb
or
xor
jno
mov
sti
adc
leave
push
bound
push
orl
les
cmpsb
add
jle
repz
xchg
sarb
fdivrp
pop
lea
out
dec
fwait
dec
pop
xchg
dec
mov
andb
ret
adc
mov
roll
push
adc
dec
xor
movsl
sbb
xor
inc
push
and
and
sarb
mov
add
addr16
mov
aas
inc
fimull
je
ret
jno
jl
inc
lahf
addr16
xchg
lea
mov
push
jge
pop
mov
adc
popa
pop
and
fxtract
icebp
and
xchg
xor
pop
int
loopne
mov
mov
fidivs
aaa
mov
xchg
and
adc
sub
out
mov
adc
int
cmp
inc
jle
les
jnp
cmp
push
jg
mov
les
xor
jne
xchg
inc
inc
sbb
add
lret
mov
or
or
fnstcw
ret
iret
and
mov
adc
imul
dec
xchg
mov
sub
mov
mov
fsub
jle
xchg
xlat
nop
or
dec
out
xchg
pop
xchg
imul
stc
add
pusha
lea
pop
mov
addr16
sbb
fldl
adc
dec
dec
pop
pushf
jp
fcomi
xlat
push
icebp
fwait
mov
insb
xchg
movsb
imul
mov
loopne
mov
xchg
iret
xor
and
jns
or
pop
cmp
arpl
mov
jle
mov
jecxz
adc
push
jb
repz
inc
sbb
push
cs
inc
mov
mov
stc
popa
xor
addr16
jl
lahf
adc
sbb
mov
mov
lock
sbbl
add
aaa
sub
repz
movsl
or
iret
cmc
sub
mov
mov
pop
jecxz
fwait
aas
in
mov
cmp
and
imul
lahf
jo
pop
dec
std
pop
les
xor
push
outsb
outsl
jecxz
testl
insl
pop
out
inc
addb
pop
mov
dec
cltd
push
push
mov
cmp
xchg
adc
adc
mov
mov
push
into
movsb
add
add
in
call
test
dec
dec
dec
pop
sub
fxch
jae
ds
sub
xor
push
aam
lahf
dec
or
aaa
mov
xchg
cld
ljmp
xchg
inc
sbb
mov
add
fs
mov
ljmp
jle
mov
add
sbb
call
arpl
jp
adc
xor
mov
mov
enter
xchg
adc
and
out
fdivs
or
dec
enter
adc
mov
sub
push
jl
shll
pop
lds
push
lcall
outsl
push
out
lcall
outsb
fs
es
lret
popf
add
add
je
sub
xchg
shlb
push
aam
je
lods
loope
or
jne
mov
bound
jmp
movsl
xor
cmp
xchg
bound
ret
xchg
mov
jne
jge
add
jnp
int3
jbe
hlt
jns
cmovnp
mov
cmpb
pop
popa
test
ret
hlt
mov
dec
call
xor
sub
xlat
jmp
dec
pop
or
inc
or
push
int3
add
add
ds
push
shll
and
arpl
je
test
addr16
mov
ljmp
outsb
into
iret
fldenv
pusha
fmulp
pop
mov
call
dec
jns
dec
mov
imul
mov
imul
inc
fwait
dec
push
sub
aaa
lahf
stos
icebp
movntps
fdivp
cs
inc
popa
test
mov
cmp
loope
xor
cli
mov
movsb
and
cmp
icebp
lret
jge
daa
nop
cmpsb
subb
add
push
rolb
xchg
les
lret
pop
sub
cmp
xor
dec
pop
sar
sub
cmp
pop
push
pusha
adc
aas
xchg
icebp
push
rorb
push
dec
or
or
stos
ss
movb
mov
daa
hlt
fidivrl
jp
test
sbb
in
repz
out
or
jbe
or
ficoml
iret
ljmp
in
push
sbb
out
jg
inc
lret
out
imul
jb
movsb
cmp
jne
sub
mulb
jne
rcll
lds
pop
and
mov
das
mov
lods
xchg
sbb
rclb
sbbl
xor
mov
and
pop
shll
lcall
insb
ret
in
jle
sahf
cmp
shll
aad
leave
rclb
shrb
insl
sub
lret
add
xor
mov
xchg
xchg
mov
mov
jbe
cmp
mov
jno
or
in
and
mov
in
jp
rorb
cwtl
dec
xor
add
fcoml
jbe
pop
mov
jg
call
sub
or
dec
or
outsb
pop
es
test
enter
mov
lcall
enter
dec
in
mov
repz
adc
lcall
aad
imulb
inc
psrad
mov
iret
xchg
dec
lods
shrl
hlt
ss
xor
mov
fmuls
add
sub
mov
sub
pop
jbe
pushf
adc
add
out
mov
inc
out
jne
adc
xor
mov
push
jp
xchg
or
fbstp
sub
sbb
mov
ja
aam
xlat
lret
das
adc
andl
push
testl
xchg
jecxz
mov
adc
outsl
jle
rep
sbbl
cmpsb
xchg
add
push
mov
or
add
das
dec
std
add
push
sbb
sbb
loopne
dec
enter
xor
dec
xchg
daa
or
adc
mov
push
cmp
pusha
fimull
mov
das
loopne
cld
inc
ss
fimuls
pushf
test
push
clc
dec
lret
push
jp
and
xchg
cmc
gs
push
faddl
sbb
cmc
sti
popf
daa
mov
ds
call
mov
cmp
je
add
sub
not
pushf
push
rolb
mov
sub
xchg
xchg
imul
leave
mov
sub
mov
sub
inc
and
mov
subb
sub
or
mov
and
add
jnp
cmp
ficoms
or
inc
lock
jb
out
test
push
test
push
sbb
ljmp
cltd
mov
add
xor
or
clc
daa
add
repz
sub
or
pop
test
xor
in
mov
jnp
daa
mov
repz
loopne
and
inc
and
or
inc
or
pop
test
pop
xor
ljmp
loope
sahf
je
push
add
out
imul
cmp
shll
mov
gs
mov
into
cmp
dec
add
inc
sbb
xchg
mov
sub
stos
mov
loopne
jmp
enter
ja
in
cmp
pop
repnz
test
rcll
cmp
ljmp
jo
inc
lods
and
cmp
push
testl
sub
mov
pop
jge
aam
call
push
or
push
outsl
or
test
xor
sbb
fnstcw
mov
and
push
int3
cmp
xor
cmpb
imul
insb
iret
jge
add
xchg
je
xchg
mov
mov
div
imul
movsb
daa
scas
pop
dec
push
call
andl
push
mov
rolb
shrb
mov
fcompl
int3
hlt
push
icebp
push
pop
xor
lock
lahf
in
xchg
cmp
je
in
xchg
out
jo
push
dec
inc
mov
ja
pop
inc
add
push
cmp
mov
pop
and
fsubs
pop
cmpsb
jmp
in
jg
jp
xlat
movsl
sub
je
out
cmp
mulb
movsl
int
mov
sub
cmpsb
xlat
cmpsl
push
dec
add
aad
fisubl
mov
test
cmp
push
jo
dec
jnp
mov
sub
dec
jge
sti
pop
jle
sbb
pop
mov
push
pop
sti
dec
sbb
cmpsl
arpl
pop
adc
adc
pop
jbe
out
add
jns
stc
inc
rorl
pop
gs
cmpb
out
cs
clc
test
cld
das
std
jae
mov
lds
xchg
cwtl
push
sub
aas
mov
ljmp
bound
pusha
sarb
push
sbbb
cli
pop
mov
pop
icebp
dec
movsb
mov
adc
push
and
imul
movsl
adc
addr16
fwait
push
push
leave
mov
or
out
pop
adc
fists
cmp
call
xchg
ss
add
fs
mov
sbb
in
jecxz
sbb
cmpsl
jg
imul
xchg
and
je
add
sub
adc
xchg
or
aaa
cmpb
negb
sahf
sbb
sbb
aam
inc
mov
aam
pop
lods
add
dec
lock
arpl
push
or
lds
mov
jl
jl
push
push
push
push
rorb
or
sbb
or
inc
add
divb
or
fstpl
xchg
inc
outsb
sbb
cwtl
and
mov
cs
cli
addb
outsb
pop
jecxz
mov
imull
xchg
cmc
xorb
daa
xchg
test
cmp
lea
inc
shlb
add
aad
lods
leave
fldenv
sti
xchg
icebp
cltd
xchg
jbe
or
pusha
sub
jnp
push
in
pop
dec
loope
out
out
fidivs
add
pop
xorl
add
mov
fnstenv
fsubs
jbe
push
mov
es
pusha
fidivrs
xor
mov
das
in
adc
test
stc
ds
push
popa
jge
fdivrl
js
xchg
repz
xchg
call
fists
add
or
cmp
dec
scas
lods
dec
fidivrs
mov
pop
adc
sbb
iret
into
loop
cmp
dec
int
imul
movsb
incb
pushf
aas
inc
jmp
xor
pop
js
lods
and
aaa
clc
mov
aam
inc
jb
out
xor
push
or
sbb
mov
bndldx
mov
or
push
xchg
cmpsl
mov
xchg
sbb
sbb
repnz
fistps
inc
xchg
sub
movsl
mov
xor
add
pushw
nop
daa
or
cld
scas
lds
je
mov
lret
cmp
xchg
jp
sbb
xchg
lret
xchg
into
shl
cld
cs
jmp
fstl
push
stos
ficomps
xor
jne
cmp
cmc
repz
inc
dec
cmpsl
mov
lcall
add
xchg
jbe
lret
inc
xor
or
push
insb
int
frstor
mov
fsts
push
pop
mov
insb
or
mov
sub
ret
or
pushf
decl
xor
or
xchg
orb
fptan
dec
int3
xor
mov
fs
adc
push
inc
lods
jl
scas
sub
pop
lock
dec
jns
hlt
push
daa
and
loop
cld
xchg
mov
xchg
cli
or
xchg
cltd
call
add
and
fisttpll
outsb
lret
es
push
jp
scas
fwait
repz
setb
cmpsl
mov
sub
pushf
and
jnp
pop
cmp
call
and
and
push
movsl
add
rclb
aam
adc
inc
popa
mov
enter
jle
mov
sub
mov
sbb
add
stos
mov
outsl
add
lcall
push
ljmp
mov
loope
filds
ja
pop
cmpsl
jl
xchg
loope,pn
out
loop
cs
lea
stos
xor
ja
shl
inc
cmp
and
jb
imul
cmp
jo
jbe
xor
push
sub
xor
push
lods
enter
test
sar
stc
dec
dec
fiaddl
out
stos
add
in
sbb
stc
rcrb
jp
jl
shll
inc
fldt
adc
jb
xchg
dec
lret
xchg
inc
test
add
add
cmp
fistpll
xchg
insb
enter
cmp
lods
imul
mov
dec
mov
and
inc
ja
xlat
mov
je
fsubp
in
push
ss
hlt
xchg
outsl
stos
in
and
xchg
push
pop
insb
movsb
dec
push
gs
aas
test
pop
lahf
jno
imul
psadbw
mov
inc
in
lea
jp
iret
xchg
repnz
mov
xchg
imul
jbe
lahf
add
sbb
pop
add
int
adcl
mov
loope
cmc
sbb
cltd
outsl
into
cltd
cmp
les
lret
out
cmp
mov
xor
je
mov
in
movsl
shll
cmp
sub
hlt
ficoms
roll
mov
xor
sbb
jne
xchg
xlat
jl
xor
je
xor
fdivl
push
rclb
jmp
cmpsb
test
sbb
mov
ret
addb
sub
in
fisubrs
inc
cli
imul
pushf
rcrb
mov
cmp
and
movsb
sub
mov
mul
xchg
in
repnz
leave
andl
out
mov
das
mov
stos
cmpsb
fs
into
push
scas
mov
imul
fiadds
aad
scas
std
mov
call
jae
add
loope
lcall
and
and
jle
mov
stos
push
arpl
adc
push
xor
gs
cmp
call
or
mov
and
mov
pushf
mov
xor
push
mov
mov
push
mov
orl
inc
ljmp
pop
cmp
adc
out
add
out
in
ss
or
shl
imulb
cli
adc
ja
push
xchg
mov
movsb
push
mov
fimuls
enter
sub
hlt
jmp
pop
stos
pop
testl
dec
dec
mov
xchg
xchg
sbb
dec
jg
test
mov
aam
lcall
rcll
rclb
ss
xor
push
loope
sub
loopne
clc
mov
movb
cld
sar
pop
rorb
xor
mov
xorb
and
mov
je
js
aaa
dec
je
mov
stos
jl
fndisi(8087
fwait
jns
fwait
popf
das
xor
push
es
mov
sbb
mov
adc
dec
dec
int3
inc
and
cwtl
pop
xor
push
movl
mov
out
enter
mov
clc
cwtl
pop
sub
push
sub
mov
inc
jecxz
xor
aaa
frstor
pop
push
mov
and
push
jno
pusha
mov
bound
aaa
fcomps
xor
jbe
lock
aaa
cmp
fwait
jp
fnstcw
xchg
lock
jo
push
call
inc
bts
dec
aam
add
data16
xchg
daa
insb
mov
nop
sub
imul
push
lea
popf
jmp
push
jge
test
dec
iret
mov
stos
int3
sub
aaa
mulb
cmpsl
scas
lods
dec
negb
and
loope
push
dec
les
pop
outsb
xchg
scas
xor
push
mov
sbb
xchg
outsb
pop
push
ja
stos
add
or
movlps
mov
rcll
sahf
aam
dec
hlt
loopne
repz
scas
jno
rolb
ds
arpl
arpl
test
push
sub
test
stc
sub
mov
test
int
lea
testb
fcomip
pusha
dec
insb
sbb
sbb
or
in
je
pusha
pusha
jmp
punpcklbw
jns
inc
sub
sbb
sbb
sbb
mov
and
xchg
cwtl
clc
scas
xchg
sub
pop
bound
dec
rorb
fmull
inc
scas
xor
out
jmp
cld
mov
inc
xor
es
dec
cs
inc
adc
jg
sbb
in
std
sub
cltd
mov
mov
or
sub
pop
jo
aad
xor
or
adc
ret
rorb
or
pop
stc
dec
bound
mov
mov
dec
mov
sbb
decl
and
in
pop
add
cmc
in
cmovno
shrl
jae
js
orl
call
push
ds
sub
fmull
fadds
mov
xor
pusha
xchg
leave
adc
int3
iret
and
cs
imul
mov
notl
aam
incl
push
cmp
mov
idivb
sahf
fwait
cmp
imul
imulb
movsb
dec
jno
pushf
xchg
addl
into
jno,pn
or
mov
or
push
mov
in
rcl
cmp
push
pushf
mov
lahf
sbb
cmpsl
adc
sbb
sub
scas
aas
mov
xchg
xor
or
gs
cmova
ja
sub
cli
addr16
testl
push
mov
or
mov
pop
xchg
mov
enter
icebp
sbb
push
push
jmp
dec
xchg
pop
or
or
pop
aaa
dec
fnstsw
mov
leave
mov
add
sub
add
or
push
inc
sub
mov
in
cmp
jmp
jae
out
aam
test
pop
mov
jp
arpl
push
js
adc
cld
xchg
jne
orl
rclb
jl
push
test
dec
cmp
mov
xchg
lret
icebp
push
sub
imul
in
js
inc
pop
icebp
adc
push
jg
lret
push
pop
loope
sub
pop
fcmovne
mov
fisttpl
cs
cmp
cwtl
je
add
rcrb
jnp
sbb
dec
xor
ljmp
pop
push
iret
and
and
cld
mov
ljmp
das
in
jne
aas
arpl
pushl
mov
fcoml
and
pop
or
xor
mov
push
aam
nop
xchg
sub
fists
stos
in
or
xor
mov
fildll
pop
adc
pop
jae
sbb
xchg
mov
jno
jns
fcoms
imul
rclb
mov
and
add
jmp
mov
adc
outsb
push
shlb
sar
push
das
mov
ds
fcoml
pusha
push
arpl
insb
or
jg
aas
mov
jbe
fnstsw
xor
sub
xor
xor
xchg
adc
iret
call
cmp
pop
out
add
ret
jmp
add
dec
out
test
inc
and
jp
sub
mov
add
push
popf
shlb
dec
push
stos
dec
loop
mov
mov
push
sbb
or
push
sub
dec
stos
mov
lods
mov
mov
sbb
jae
inc
dec
and
mov
mov
testl
dec
jnp
scas
pop
fcoms
dec
sub
sub
xchg
dec
scas
insl
dec
lods
loope
loop
adc
sub
push
adc
pop
addr16
sub
popa
insl
and
fdivl
in
mov
and
push
fsubrs
repz
mov
addr16
inc
das
std
lock
mov
scas
jnp
out
xchg
ljmp
rorb
mov
sbbb
sub
and
jmp
call
je
pmuludq
fistl
bnd
jmp
dec
stos
cltd
jb
lods
mov
xchg
in
cmp
subb
lcall
sahf
pop
mov
stc
or
dec
sbb
dec
or
mov
loop
push
push
jae
sub
fwait
jmp
xchg
test
mov
or
pop
jb
mov
pop
cmp
add
rcrb
xor
in
dec
sub
mov
mov
lcall
add
sti
ficoms
mov
mov
jecxz
insl
mov
push
pop
mov
or
add
dec
mov
add
dec
mov
xor
adc
outsb
mov
cli
jl
sti
repnz
add
sbb
sub
add
testl
pop
sbb
cld
icebp
adc
shrb
sub
xchg
pop
sahf
pop
ss
aaa
or
clc
ljmp
xchg
jmp
push
dec
aaa
cmpb
dec
or
les
cmc
add
adc
enter
xchg
mov
jno
cmpsl
data16
jb
outsb
sbbl
dec
sbb
mov
jl
xor
lahf
push
repnz
mov
insl
movsb
cmp
shlb
scas
push
add
push
lahf
scas
icebp
add
sub
dec
ficomps
test
into
dec
inc
cmp
push
clc
sub
xchg
int3
fcmovne
mov
repnz
scas
xor
sub
pop
outsl
into
mov
pop
cltd
cmc
outsb
pop
rcrb
es
cmp
sbb
xchg
int3
cmc
mov
jmp
xchg
jmp
filds
out
adc
scas
pop
subb
iret
js
mov
ret
repz
inc
orb
mov
ret
pusha
andb
out
lods
cmpsb
xor
sbb
dec
add
pushf
out
push
sbb
xor
and
xchg
fmuls
std
mov
adc
push
mov
mov
daa
mov
push
je
cmp
adc
dec
mov
cld
and
inc
add
stos
mov
cmp
dec
dec
xchg
pop
jns
imul
loopne
dec
cmp
cmc
or
lret
ficoms
push
popa
dec
pop
arpl
jp
cmpsb
out
lods
scas
xor
or
sbb
xchg
pop
lahf
pop
pusha
in
add
ljmp
adc
jge
mov
cltd
mov
adc
pop
cmp
loope
lcall
popf
or
cld
push
mov
push
lcall
addr16
imul
adc
mov
fs
clc
mov
test
dec
mov
push
push
outsl
dec
inc
insb
loope
sub
js
enter
das
adc
xchg
jecxz
std
inc
sbb
xlat
repz
xchg
and
mov
push
out
out
mov
sub
rolb
in
pop
stos
roll
aas
cmp
mov
inc
test
lock
repz
lcall
xor
hlt
pop
out
fdivl
and
addl
lret
movsb
adcl
inc
scas
adc
xchg
fwait
ds
xor
in
lds
pushf
das
mov
inc
or
jle
sub
sbb
out
inc
fwait
pop
jge
fnstcw
rcl
rorl
adc
xor
aaa
inc
mov
mov
test
aam
sbb
arpl
dec
rolb
pushf
mov
fldpi
roll
add
int3
pusha
jle
pushf
int3
outsb
dec
xor
sub
and
mov
orb
loop
xchg
jmp
xchg
pop
cmp
cwtl
fbstp
in
and
fs
negb
adc
jb
or
jle
iret
loop
jne
pop
ret
inc
lods
lods
push
loope
xorl
jae
mov
and
pop
sub
mov
or
in
inc
dec
adc
sbb
lea
dec
fwait
fs
shll
sbb
sbb
js
mov
lahf
dec
mov
stos
into
inc
ds
addr16
dec
mov
notb
pop
add
push
loop
shll
leave
pop
pop
fs
imull
lahf
call
cmpb
xlat
ja
add
mov
xchg
mov
imul
ljmp
inc
std
daa
adc
adc
in
xchg
mov
cmp
inc
outsb
mov
cs
and
lret
cld
xchg
cmp
pop
leave
jne
mov
into
inc
sub
stc
repnz
xchg
mov
mov
call
fisubrs
outsl
enter
sub
dec
cmpl
mov
push
sbb
xchg
aam
sbbl
into
jp
pushf
fisubs
pop
in
int3
sbb
add
and
call
push
je
das
cmc
inc
dec
daa
adc
lahf
and
insb
imul
inc
popf
stos
fnstsw
movsl
push
and
out
dec
call
adc
cltd
pop
sti
insb
add
jecxz
jecxz
movsl
lahf
dec
cmp
xor
jecxz
jg
rcl
or
add
adc
popa
xlat
lahf
jb
sbb
xor
sub
fsub
push
cmp
fstpl
xor
fnstenv
mov
sub
pop
inc
rcrb
sbb
push
inc
or
popa
or
sbb
inc
out
xchg
jns
adc
insb
add
mov
shr
bound
mov
or
adc
lahf
xchg
je
enter
repz
xchg
dec
sbb
add
leave
testl
sbb
out
or
dec
mov
jbe
sub
push
mov
inc
lcall
sahf
pushf
fidivl
stc
cmp
sti
outsb
lahf
jl
mov
in
lcall
xor
or
jecxz
fs
push
add
cltd
lahf
cmpsb
fisttpll
inc
in
sub
test
or
insb
push
xor
pop
sub
fwait
lret
ret
mov
mov
xchg
cmpsl
mov
mov
push
and
lahf
mov
and
outsl
mov
sbb
popa
inc
pop
dec
aad
xchg
je,pn
inc
iret
mov
into
fsub
sub
divl
loop
out
push
sub
call
add
pop
xor
call
test
aaa
outsl
sub
dec
mov
and
push
les
sub
xchg
jp
addr16
adc
mov
pop
xchg
mov
lods
js
or
sub
out
and
insl
test
lock
das
test
cmpb
mov
ret
sti
dec
ja
cmp
or
add
and
aas
adc
out
out
sub
orb
xor
xor
mov
mov
jp
aas
push
pop
dec
xor
sub
xor
pop
fcompl
push
sbb
pop
xchg
js
pop
cwtl
inc
gs
mov
sarl
pop
into
inc
sub
hlt
cmc
fldt
xchg
test
mov
mov
jns
pop
sbb
hlt
mov
enter
inc
mov
rcll
xchg
mov
inc
and
cli
mov
adc
jmp
into
ret
mov
aas
cs
mov
add
ret
xor
xchg
das
and
mov
mov
call
jp
cltd
in
mov
pop
or
and
mov
mov
pop
clc
pusha
xor
ljmp
inc
std
sbb
cwtl
es
aad
popa
out
adc
xchg
adc
in
pushf
inc
dec
mov
enter
adc
faddl
inc
pmaddwd
test
incl
mov
movsb
mov
shrb
push
das
xchg
leave
leave
pop
das
adc
mov
arpl
lret
les
dec
mov
sub
dec
push
movl
pop
notl
les
mov
stos
repz
nop
pusha
xorb
adc
shl
push
in
lock
cmc
ja
dec
inc
mov
jb
iret
sub
mov
shr
sahf
movsl
pushl
xor
inc
in
or
adc
jne
rolb
dec
popa
ret
cmpsl
cmpsb
push
xor
fcom
arpl
int
ljmp
fnstenv
negl
cld
mov
lahf
std
ja
lcall
cmp
mov
adc
mov
xor
mov
inc
push
pop
adc
test
clc
fnsave
jp
mov
cmp
dec
push
stos
scas
dec
sbb
mov
xor
xchg
adc
add
repz
inc
mov
cmp
cli
repz
roll
push
std
dec
fs
ja
in
iret
pop
in
in
cmp
aaa
lahf
cmpb
aam
lahf
stos
push
mov
in
lea
jns
lcall
mov
push
in
movsb
cmp
mov
xchg
or
std
fisubrl
stc
mov
loope
xchg
bswap
scas
cmpsb
xlat
add
adc
loopne
mov
sub
cld
dec
inc
xor
push
jns
les
sahf
andb
inc
seta
xor
test
jp
sub
mov
orb
icebp
out
cmc
repnz
pop
pop
stc
and
xor
loopne
fwait
push
sub
ss
lahf
lcall
mov
mov
popf
mov
cmpsl
out
mov
mov
cltd
iret
dec
mov
jns
andl
jns
cmpsl
test
lahf
fld1
adc
jmp
movsb
mov
in
insl
cmp
cmp
xchg
cmp
pop
lock
lds
pop
adc
out
mov
jge
imul
cmp
cmpsb
sbb
aad
cmp
fmul
mov
stos
cmpsl
mov
shlb
jb
in
iret
xchg
popa
xchg
aam
mov
mov
adc
add
out
sahf
pop
aaa
adcb
out
mov
xlat
mov
ret
and
aam
imul
push
lea
mov
jg
sub
out
into
sbb
adc
loop
insl
in
jne
push
adc
inc
push
aas
push
mov
inc
scas
push
decl
mov
mov
data16
xchg
scas
xor
aam
pop
arpl
pop
stc
add
pop
sub
test
push
inc
loopne
addr16
xchg
jecxz
adc
pop
ds
push
cli
fiadds
ljmp
mov
mov
or
dec
in
or
jp
leave
push
or
sbb
sbb
and
sbb
notb
xor
or
jno
adc
fdivr
fmull
sub
rorl
nop
add
xor
inc
in
push
dec
daa
rorl
jmp
jnp
mov
inc
test
dec
push
jbe
and
repnz
xchg
xor
sbb
mov
leave
mov
rcll
xor
out
aam
sub
adc
and
jns
ss
sahf
inc
xabort
int
mov
fwait
pushf
cmpsb
dec
hlt
sbb
jns
add
mov
fdivl
dec
bound
lea
and
xchg
leave
sbb
add
mov
push
mov
ja
sbb
mov
outsb
dec
sub
cmp
js
out
adc
or
add
cmc
push
jb
xchg
fcompl
fsubl
xor
das
push
aad
mov
and
subl
int
mov
jecxz
call
xchg
insl
dec
xchg
xor
xor
xchg
fimull
push
pop
out
adc
imul
mov
fwait
or
notb
jbe
pop
mov
mov
in
popf
in
push
mov
cmp
mov
mov
pop
pop
dec
xor
inc
jbe
sbb
jb
out
and
shl
xor
push
xor
ret
dec
rcll
dec
dec
shlb
and
aaa
nop
jg
mov
shr
lret
fists
lds
cmpsb
adc
loopne
push
lahf
lock
pop
mov
and
stc
push
pop
movb
hlt
out
adc
sbb
mov
cld
test
outsb
lock
dec
lcall
push
aaa
fstpt
fsubrl
sbb
aam
inc
xor
shlb
push
mov
pusha
sbb
fcomp
loop
jb
or
stos
sbb
imul
mov
or
and
push
stc
fwait
addr16
jae
xchg
sbb
stos
das
add
mov
push
fsubs
push
xlat
and
repz
loop
outsb
push
inc
js
jle
sbb
add
jecxz
nop
pop
xor
jb
aas
sub
inc
and
popa
sub
mov
aad
pop
push
xor
addr16
aas
adc
insl
in
mov
xchg
push
and
cli
lods
loope
push
add
fimuls
stos
mov
mov
ss
ret
ret
mov
fnstsw
ret
pop
pop
jne
pop
outsl
push
inc
push
mov
iret
push
cmp
int3
push
das
lods
mov
or
cltd
nop
push
leave
push
cmp
cmpsb
lods
icebp
in
xor
mov
dec
xchg
mov
jecxz
xlat
dec
mov
shrb
lahf
xchg
repz
cmp
jmp
or
add
lods
lahf
push
aas
test
dec
adcb
std
pop
xchg
mov
jmp
sbb
or
fcom
jb
or
insb
ficoms
mov
sbb
cld
cmp
lcall
add
push
loope
in
out
mov
and
add
cwtl
add
xlat
jns
cmc
mov
mov
dec
cltd
test
xchg
int
scas
mov
xchg
shr
xor
aaa
inc
jno
ljmp
scas
sbb
mov
and
retw
add
pop
cwtl
jns
cmovbe
mov
cli
std
fcompl
add
cmp
imul
cwtl
movsl
movsb
daa
xchg
dec
push
daa
repnz
sbb
mov
popf
inc
sbb
ret
fucomp
mov
xor
push
mov
mov
fsubr
fbld
sbb
js
lods
mov
sbb
jbe
and
in
sub
call
fisttpl
jae
lods
sti
xor
push
cmp
jp
mov
lods
divl
pop
mov
jo
push
sub
or
lahf
test
adc
inc
in
stos
or
adc
xchg
insb
mov
pop
loopne
jle
sub
test
repnz
je
mov
rorb
mov
pop
int3
fnstcw
daa
dec
in
mov
inc
xchg
fwait
jb
popf
pop
in
scas
sub
sbbb
inc
sti
xchg
jmp
repz
aaa
mov
mov
add
sbb
imul
pop
dec
ja
cld
lret
jle
dec
shll
mulb
imul
decb
jecxz
sbbb
lahf
loopne
cmpsb
loop
arpl
es
mov
add
pop
xchg
hlt
mov
cmp
lock
imul
mov
mov
icebp
pop
jne
xor
push
mov
dec
push
ror
cli
sbb
push
clc
adc
xchg
push
lock
fisttpl
mov
lcall
insb
push
cmp
ja
jecxz
lahf
aaa
jp
lcall
or
in
xchg
or
jnp
or
pop
je
popf
inc
outsl
insb
jmp
push
jns
mov
xchg
andb
scas
add
imulb
sub
repnz
rcr
pushf
insb
fdivl
and
jecxz
jmp
mov
movsl
je
sbb
adc
arpl
dec
cmp
inc
adc
adc
and
pop
pop
in
aaa
int3
ljmp
inc
mov
xlat
xor
in
cmp
in
int
and
mov
mov
jnp
je
push
es
pushf
rcl
adc
out
push
enter
and
pop
cli
loopne
xchg
mov
jmp
fwait
mov
pop
mov
mov
divl
stos
add
rcll
push
lcall
xlat
mov
ret
aaa
mov
iret
cltd
cltd
aam
sub
fmulp
and
call
pop
jge
leave
stc
scas
divb
cmp
sub
and
iret
lods
insb
test
out
lahf
gs
or
test
pop
mov
cmp
icebp
js
mov
dec
xchg
fildl
rorl
xlat
jns
stos
insb
jno
fnstsw
fldcw
lods
fldl
addb
adc
ss
dec
mov
inc
xchg
lea
pusha
cmp
bound
mov
push
inc
xlat
xchg
call
sub
pop
and
xchg
clc
xchg
push
out
in
cmp
outsb
insl
push
std
aas
jbe,pn
and
rorl
add
pop
or
mov
iret
daa
dec
xor
mov
divl
stos
sbb
mov
dec
out
das
hlt
rol
mov
pop
pop
sub
xor
xchg
mov
cmpl
push
lock
aad
and
pop
jecxz
mov
jo
push
bound
out
loopne
cwtl
inc
mov
pop
push
jge
push
jne
lea
daa
loopne
inc
shrb
adc
pop
add
xchg
rolb
das
sub
idiv
jl
adc
mov
pop
sbb
jmp
in
cmp
repz
cmpsb
lret
test
das
jecxz,pt
push
dec
fisubl
push
hlt
pop
pushw
cli
xchg
jae
add
jae
movsb
int
mov
fisubrl
fs
dec
fldcw
dec
in
sbb
mov
fbstp
or
mov
ror
push
inc
out
xor
mov
mov
push
movsb
in
fnsave
mov
ja
push
mov
cli
pop
dec
inc
js
add
je
aaa
or
test
push
stos
aam
mov
enter
out
rclb
and
mov
pop
mov
leave
leave
jae
jp
mov
dec
and
rcll
xchg
loopne
mov
pop
fldln2
mov
xor
push
jecxz
cmp
mov
out
nop
fstp
dec
adc
mov
icebp
dec
xchg
jmp
xchg
push
mov
xor
rcll
push
xor
xchg
shr
pop
sub
mov
cmp
jg
xchg
dec
je
and
xor
xchg
jb
cmp
popa
ficoml
loop
loope
sub
xchg
adc
or
lcall
xlat
popl
jno
adc
xorl
or
mov
mov
repnz
in
cmpsl
or
out
adc
cmp
jmp
mov
mov
jae
mov
cltd
fldcw
outsb
sbb
sbb
aaa
clc
cmp
vmread
inc
aam
movsl
and
rol
into
ss
inc
cmpsb
sbb
test
mov
and
fsub
mov
shlb
xchg
sbb
or
cmovle
push
les
test
cwtl
hlt
dec
mov
sub
pop
and
pop
xchg
xorl
inc
sub
inc
outsb
hlt
jnp
ret
scas
and
push
or
add
sub
mov
jp
jge
adc
and
and
push
add
daa
ds
shlb
pop
test
es
sti
cmp
dec
pop
in
cli
call
sub
pop
sub
mov
dec
int
fadd
fcmovu
outsb
test
in
pusha
sbb
jbe
xor
add
adc
jnp
ret
in
shrb
xor
iret
inc
test
ficoml
pop
hlt
aam
sahf
dec
mov
cmp
lods
ljmp
xchg
dec
rcl
in
push
and
pop
mov
imul
push
lods
pop
ret
ja
aam
sti
jb
xchg
dec
imul
cltd
xor
push
xchg
lods
addr16
add
push
popf
dec
cmpsb
ja
test
jb
addr16
adc
fwait
mov
cli
mov
pop
inc
adc
sub
sbb
sahf
dec
add
out
repnz
fisttps
loopne
lret
inc
pop
pop
div
cmp
push
sbb
pushf
adc
idivb
std
push
lcall
outsl
dec
sub
rol
scas
xchg
rol
mov
pop
inc
test
adc
jo
push
mov
jecxz
mov
lods
lea
movsl
add
push
xor
jl
xchg
adc
test
cmp
pop
out
push
mov
stos
pop
pop
gs
je
hlt
add
nop
jl
pop
cmp
pop
not
mulb
cmpl
insb
hlt
and
add
fisubl
ret
and
orl
xlat
lahf
rcrl
pop
rcll
add
jmp
nop
inc
sbb
mov
push
mov
mov
xor
lds
outsl
ficoms
xchg
cmp
mov
and
push
out
pop
addl
jb
push
std
inc
push
dec
and
gs
incl
pop
push
sti
xlat
test
imul
int3
and
sub
std
push
ret
mov
mov
pop
push
insl
shlb
sub
dec
les
inc
sbb
insl
or
cmp
adc
sbb
iret
adc
mov
shrd
ljmp
sbb
xlat
xchg
pop
mov
jae
or
sub
sbb
pop
adc
lret
pop
jmp
add
adc
call
push
pop
or
xchg
push
push
sub
jae
repnz
xchg
repz
dec
jmp
mov
mov
dec
cli
mov
mov
loopne
iret
je
pop
mov
scas
fnstenv
popa
sbb
fisubrl
fildl
stos
into
mov
arpl
push
pop
dec
mov
iret
and
scas
cmp
sub
mov
aas
mov
imul
sub
sub
imul
push
add
adcb
cmc
xorl
outsl
mov
lods
inc
jl
outsb
cmp
mov
mov
inc
push
mov
lret
xchg
push
add
sahf
mov
cmpsl
test
int3
add
inc
inc
inc
add
pusha
mov
jecxz
sub
cmp
push
dec
loopne
out
sahf
xor
sub
cli
push
push
xor
test
out
sbb
jmp
lea
outsl
and
push
cmp
jecxz
lret
sub
jl
mov
jb
lods
mov
inc
popf
jecxz
icebp
dec
mov
subl
std
insb
and
jecxz
daa
outsl
jb
orb
or
sub
mov
jg
xor
push
data16
daa
or
cmovno
mov
insb
push
hlt
xchg
cmc
dec
mov
dec
faddl
adc
mov
cmc
outsl
ljmp
jbe
sub
pop
iret
xchg
jmp
xor
rolb
adc
andb
lahf
test
je
xchg
aad
into
cmp
mov
aas
xor
pop
mov
pop
inc
daa
insb
xchg
jae
mov
es
sbb
ljmp
into
loop
idiv
shrl
leave
inc
aam
aad
jmp
fldlg2
sub
nop
test
sbb
imul
adc
out
or
rclb
imul
jmp
pop
jb
inc
test
popf
or
push
pop
cwtl
loop
aam
fimull
fildl
mov
push
ljmp
ror
bound
jle
fistps
pop
negb
xchg
in
lea
xor
inc
jecxz
in
pushf
xor
fisubrl
jno
mov
incb
rcll
xchg
jmp
add
aaa
push
call
bound
cmp
sub
cs
ffreep
and
jae
mov
movsl
addr16
loope
sbb
xchg
jnp
push
mov
mov
mov
pop
push
mov
lret
ret
mov
add
push
jg
sbb
sub
iret
das
movsb
sbb
xor
hlt
jg
test
push
pusha
pop
sub
dec
pop
adc
clc
pop
cwtl
xor
std
jne
jge
fsubl
out
jbe
inc
sub
cmp
xchg
aam
fsubrl
and
push
and
imul
jnp
pop
pop
outsl
or
jl
jp
fisubl
imul
pop
lret
sbb
fs
mov
sbb
adc
ljmp
inc
mov
iret
cmp
shlb
lret
sub
mov
outsb
inc
insl
cwtl
das
xor
add
inc
dec
int
xchg
dec
xlat
xchg
add
mov
std
dec
mov
mov
aad
decl
or
adc
fwait
mov
stos
sub
jmp
xchg
inc
popa
addr16
adc
push
mov
jne
mov
push
xor
mov
stos
fcompl
data16
push
ret
jmp
mov
sbb
xchg
sbb
inc
push
call
xchg
sarl
cwtl
push
imul
and
out
fwait
adc
sarl
dec
mov
les
inc
jae
mov
and
and
push
out
fnstsw
xlat
aaa
jbe
addl
insl
loop
adc
leave
jae
mov
test
inc
xchg
push
int
and
xor
sbb
jp
push
jle,pt
mov
ds
push
jne
cmc
mov
or
imul
push
jne
test
xchg
pop
hlt
int
jae
das
lret
lahf
jbe
outsb
je
mov
test
movsl
xor
cli
and
push
sbb
aaa
pop
test
push
scas
lahf
pusha
jbe
pop
stc
loope
mov
mov
dec
dec
and
dec
push
fstpl
pop
add
add
cld
jg
roll
mov
mov
loop
ret
cmp
sub
clc
ds
popa
out
jnp
jns
mov
pop
sub
cwtl
xlat
or
arpl
xor
int3
push
into
jns
data16
in
ret
sbb
mov
push
xchg
lods
stos
jle
or
nop
dec
ds
sbb
insl
cmp
enter
daa
sti
xchg
mov
stos
out
push
xchg
and
mov
cmp
repz
sub
xor
sarl
sbb
xor
and
sub
das
mov
pop
lret
jp
xor
sub
arpl
fists
mov
les
xchg
sbb
push
das
pop
mov
je
add
out
xor
pop
xchg
lahf
gs
ljmp
insl
rclb
ror
addl
mov
cwtl
mov
pop
outsl
loop
scas
fisubs
lea
mov
imulb
inc
icebp
lahf
or
ret
inc
inc
or
orl
pop
repnz
mov
sub
adc
xor
jl
mov
ficompl
mov
mov
adc
int3
das
mov
js
and
lods
pop
sub
lods
ss
add
loope
xor
jbe
push
enter
dec
pop
test
push
shrl
cmp
hlt
lea
shrl
lods
test
in
in
into
mov
jl
repnz
ja
fsubl
ret
inc
push
addr16
movups
sti
dec
mov
or
inc
xor
mov
lea
andl
lods
into
sbb
pop
mov
movaps
mov
mov
cmpsb
cmpsb
mov
sub
mov
roll
lcall
jb
lods
scas
xchg
push
or
pop
push
aas
sub
inc
sub
mov
and
mov
sub
mov
push
repnz
popf
adc
and
fiadds
adc
xchg
cmpl
std
pusha
shr
je
js
push
add
call
cmp
xor
push
cli
jbe
nop
in
pop
mov
push
sbb
es
or
add
and
xchg
pop
mov
xchg
add
cmpsb
ljmp
out
pop
dec
pop
mov
sahf
addr16
mov
push
hlt
xor
adc
jbe
cmp
mov
lret
out
mov
movl
hlt
jmp
mov
and
and
insl
cmpsb
or
pop
adc
aaa
sbb
mov
push
fstpl
in
stc
mov
pushf
jb
call
cmc
jno
inc
dec
mov
sti
sub
scas
jge
add
mov
decb
fs
push
and
arpl
jo
add
fisubl
fadds
xchg
lods
mov
mov
jno
inc
xchg
mov
inc
ja
stos
cmp
and
sub
and
inc
rcrb
adc
nop
rorl
leave
adc
add
adc
flds
daa
xchg
ror
sar
xor
dec
out
lcall
jp
add
leave
lret
adc
adc
push
or
pop
fdivrs
aas
stos
lret
adc
jnp
xchg
subb
fmul
xchg
mov
in
es
dec
xor
add
inc
std
xchg
ja
cmpl
xchg
mov
and
call
mov
jae
loopne
popa
add
fnsave
fmul
and
cli
addr16
fsubp
movsb
pop
cmp
push
pusha
in
cmc
or
adc
sbb
push
sti
push
mov
call
ret
pop
cld
int
sub
mov
push
inc
aad
lcall
xchg
cmpsl
sbbl
inc
in
into
inc
push
fwait
mov
adc
pop
mov
sbb
cmpsb
scas
xchg
lods
test
sbb
sbb
pop
cmc
enter
out
cmp
inc
mov
shr
or
sbb
mov
and
insb
dec
dec
mov
sub
xchg
mov
push
mov
movsb
xor
xchg
sahf
arpl
sub
test
stos
fwait
bound
mov
push
push
pop
rorb
xor
stos
mov
jge
pop
lock
add
mov
lcall
insl
sti
sub
aaa
mov
pop
pop
cmpsb
call
push
sahf
rcll
roll
xor
cld
xchg
fucomip
pop
push
mov
inc
pop
mov
push
pop
push
push
out
cmc
pop
adcb
outsl
pop
add
pop
and
mov
cwtl
inc
cmp
dec
out
xor
pop
push
in
insb
in
xrstor
cmovg
push
xor
dec
pop
or
cmp
mov
mov
out
addl
stos
movsl
cmp
mov
inc
inc
movsl
arpl
outsl
repz
xchg
test
shll
enter
ljmp
imul
dec
mov
in
aaa
mov
jo
sub
sbb
lea
jno
dec
aad
fstps
add
test
cmpsb
adc
mov
out
pop
fisttpll
out
or
js
js
cmp
scas
js
ljmp
jl
std
xchg
popa
push
clc
insl
out
lods
cmp
mov
push
dec
test
popaw
xor
leave
repnz
sahf
mov
loop,pn
fidivs
scas
sbb
sbb
cmp
jg,pt
ss
jne
mov
movlps
mov
mov
out
cmp
lretw
mov
mov
in
int
sti
ret
pusha
push
adc
xchg
repz
push
test
add
out
jae
pop
add
push
push
push
push
test
in
jmp
lcall
iret
or
clc
xrelease
jl
mov
cmp
andl
cmp
jg
test
dec
mov
cmpsb
in
jno
pop
inc
and
out
fs
adcl
outsb
nop
dec
mov
adc
in
push
in
jmp
rorl
cmp
jecxz
pop
pop
pushl
cwtl
jo
movsb
iret
pop
jp
mov
mov
adc
push
or
fidivrl
test
leave
stc
pop
std
or
aaa
lret
pop
xor
je
xchg
ljmp
shll
shlb
in
js
movb
arpl
or
cs
lcall
fdivrl
xor
xchg
push
repz
imul
dec
es
mov
jecxz
orl
clc
shll
inc
pushf
cltd
dec
mov
out
and
push
mov
pop
push
xor
mov
xlat
xchg
mov
scas
imul
xor
ja
in
mov
loop
test
sti
sub
xor
sti
add
mov
pop
sub
jmp
sbb
push
imul
push
adc
xor
dec
das
xchg
std
sub
aas
es
insb
cmc
xchg
inc
pop
bound
hlt
std
cmp
ret
cwtl
jne
jg
jg
pop
xor
fcomip
jbe
je
or
xchg
mov
insl
int
lods
push
sbb
jno
cltd
cmp
daa
push
sub
xor
jge
inc
mov
jnp
ds
rcrb
ja
mov
jg
sbb
jl
jno
test
loope
jbe
push
dec
jno
jb
or
add
repnz
data16
push
pop
mov
or
mov
out
mov
xor
aad
add
jg
xor
int3
aas
cli
dec
adc
mov
and
sbb
xchg
xlat
pop
mov
in
pop
xlat
cli
or
scas
movsl
jne
ret
or
fnstcw
jp
mov
out
and
gs
jns
or
xor
inc
and
cmp
fstl
cltd
cld
aaa
adc
and
rorb
popf
leave
push
fsubr
xchg
xor
dec
shlb
loope
fisubl
pop
push
addr16
pushw
jno
stos
std
std
orb
adc
decb
xchg
pop
xor
dec
adc
in
jbe
into
mov
jns
int3
dec
jae
add
popf
pop
ret
loopne
lahf
sbb
ja
dec
adc
cmc
outsl
fsubp
stos
pop
fidivs
jg
cmp
jmp
test
inc
inc
pop
xor
or
jmp
jecxz
jl
and
repz
int
fildll
and
popa
mov
jns
cwtl
aad
mov
sarl
daa
jno
jl
int
pop
insb
adc
imull
inc
xchg
call
mov
push
popf
pop
adc
cmpsb
sbb
in
flds
aaa
inc
imul
push
jno
scas
mov
rep
shrb
testl
shl
cwtl
pusha
movsb
dec
fidivl
les
outsb
mov
stc
mov
push
jne
xchg
inc
lret
pop
fiadds
imul
and
lds
andb
sub
cwtl
insl
fsubr
mov
add
popa
ljmp
out
shlb
sub
mov
mov
mov
pusha
jmp
leave
jl
mov
dec
imul
outsb
and
aam
mov
jns
push
shl
dec
je
test
test
mov
out
ljmp
sbb
mov
pop
sub
aas
call
cmp
sbb
sub
sub
add
out
int3
ja
fcmovne
stos
and
mov
xchg
scas
mov
fidivrs
mov
test
movl
jnp
jmp
dec
fs
sarl
xchg
cs
out
out
int3
adc
sub
loop
jmp
mov
push
clc
sub
loope
movsl
push
mov
andl
or
pop
or
int3
xchg
pop
or
out
shrb
nop
pop
fistl
stos
icebp
imul
or
mov
imul
lods
adc
shrl
mov
ror
outsl
lock
push
pop
test
sbb
xchg
shrb
ljmp
shll
cmp
pop
xor
ror
push
or
jno
and
adc
jmp
and
sub
imul
jns
xchg
mov
pop
insb
pop
pop
adc
cmp
pop
inc
je
imul
or
cmpl
inc
inc
push
jg
sub
xchg
adc
inc
out
icebp
push
divb
mov
mov
xchg
call
pusha
movsl
xchg
xchg
testl
addb
add
in
jp,pn
arpl
mov
test
loope
xor
mov
sbb
fs
je
int
shrl
or
adc
mov
sub
dec
cmpl
sbb
dec
dec
dec
xor
mov
pop
inc
daa
leave
div
cmpb
fcompl
mov
out
mov
xchg
jnp
or
xor
arpl
ficompl
clc
push
mov
iret
or
test
mov
push
xchg
ds
cmpsl
mov
pop
pop
ds
push
xor
ss
sbb
rcrb
push
cmpxchg
insb
in
aad
push
mov
addr16
jg
push
out
jnp
dec
test
and
cmp
pop
das
pop
lret
pop
nop
adcb
mov
cltd
fsubs
pop
popf
or
cmpsl
add
imul
and
sub
in
inc
adcl
imul
push
popf
or
movsb
pop
out
xchg
xchg
pop
mov
mov
mov
popa
and
xchg
sahf
fadds
sar
movl
cmp
fwait
inc
and
fs
lods
and
inc
mov
adc
xchg
pop
divl
es
or
into
cltd
arpl
xchg
shrb
fbstp
cmp
push
inc
or
mov
inc
inc
xor
outsl
cmpsl
xchg
mov
sub
dec
aad
nop
dec
es
jmp
dec
aaa
xchg
mov
pop
inc
and
xor
loopne
imul
and
xchg
pusha
les
cmp
fcoml
inc
movsl
sahf
into
pop
mov
jge
sub
or
inc
xchg
pushf
add
lcall
mov
jge
aam
cmpsb
sub
mov
mov
push
movsl
inc
mov
aam
inc
scas
fildl
mov
inc
mov
adc
adc
jge
mov
inc
xchg
sbb
and
push
rclb
shll
inc
jno
fwait
or
or
cmp
cmp
jb
jne
lods
hlt
ss
scas
mov
das
mov
lahf
sbb
mov
jmp
sbb
ret
jmp
pop
fldl
divl
add
cmp
aas
sti
inc
sbb
aam
lock
add
iret
add
loop
daa
orl
xor
push
adc
sub
jecxz
movsb
sbb
xlat
xchg
outsl
xorl
loop
fcomps
cmp
push
mov
aas
or
push
bound
push
push
jl
stos
jno
or
bound
mov
in
and
sarb
in
or
int
int
ja
movsl
bound
push
xchg
mov
stos
xchg
rcrb
adcl
out
fstps
fdivs
pop
mov
jp
fldl
leave
inc
lret
jl
jmp
or
enter
sub
or
les
insl
mov
ds
add
sbb
test
lods
push
sub
addb
jns
pop
aad
xor
xchg
loopne
jmp
mov
dec
or
pop
movsl
mov
fsts
sub
enter
ret
and
jns
loope
jne
push
das
push
fcmove
je
ja
pop
xchg
or
dec
lea
in
sbb
iret
mov
ljmp
sahf
daa
and
or
cmp
in
mov
xor
enter
insl
mov
lods
pop
dec
push
dec
mov
mov
pop
aaa
jo
mov
iret
hlt
ret
xor
ret
insl
lcall
testl
inc
inc
jbe
xchg
pop
outsb
outsb
inc
sub
ret
sahf
mov
insl
add
out
pushf
push
mov
sbb
add
push
xor
lcall
lahf
cmpsb
adc
popf
or
inc
inc
js
push
fdiv
in
dec
sub
dec
push
and
ficompl
test
rorl
xchg
int3
jl
pop
jp
sub
mov
pop
push
ds
mov
inc
icebp
pop
push
xchg
stos
mov
push
movsb
cmc
mov
mov
cmpl
popa
add
rolb
xlat
adc
in
pop
mov
orl
stos
jbe
inc
inc
add
dec
jnp
inc
sbb
pop
cwtl
xchg
cltd
sbb
xor
repnz
ds
mov
sti
mov
dec
jg
dec
and
push
std
outsb
lcall
mov
clc
push
fbstp
loop
enter
push
mov
pop
jle
inc
fistps
popf
sbb
cmp
push
dec
push
and
push
not
data16
mov
xor
test
xchg
shlb
sbb
cmp
cs
pop
sbb
std
int3
add
sub
pop
icebp
dec
out
test
arpl
pop
sbb
jmp
fldl
dec
mov
xor
mov
addr16
cs
int3
repnz
or
pop
sub
out
out
rorb
test
mov
insl
rcrb
cmpb
mov
std
pop
aas
adc
or
stc
enter
gs
xor
dec
cld
gs
movsl
inc
mov
and
ffree
cli
mov
lret
dec
icebp
lods
out
pop
xor
clc
pop
mov
jb
sub
aas
or
mov
mov
popf
dec
adc
pusha
pop
xchg
sub
fisttps
xchg
bound
mov
popf
add
add
cmp
sub
pop
sbb
mov
insb
outsl
jmp
fcmovnbe
jne
mov
lcall
movsl
cltd
outsb
les
test
sbb
and
stos
xchg
lock
loopne
repnz
mov
sbb
mov
jae
in
inc
jo
xor
in
and
cmp
inc
jne
push
jp
gs
nop
jnp
and
repz
inc
push
lret
in
sarb
jecxz
and
nop
aas
adc
dec
adc
or
repnz
pop
xor
int
xchg
dec
icebp
pop
aas
mov
cltd
adc
adc
pop
imul
or
mov
loopne
sub
mov
pop
leave
repnz
cli
sbb
test
fsubp
lret
inc
inc
adc
pop
data16
test
js
les
cmpsl
call
insl
cmpb
imul
and
jb
and
mov
xchg
dec
daa
and
inc
xor
std
xchg
movsl
sbb
inc
gs
mov
push
scas
popa
mov
sub
ja
dec
push
sahf
loopne
out
xchg
shl
jmp
fmuls
push
sub
out
cli
loop
mov
test
xor
lret
push
and
add
rolb
push
nop
aad
arpl
inc
jecxz
pop
mov
popa
xchg
pop
xor
push
push
push
xchg
pop
xchg
cwtl
lahf
ret
and
inc
sbb
cmp
pop
cmp
or
mov
inc
or
rcrl
fs
mov
push
pop
movsb
imul
mov
icebp
mov
xchg
notb
add
scas
lahf
iret
mov
and
and
mov
sti
cld
sti
xor
cmp
push
loope
lea
sbb
push
or
ds
ret
clc
inc
outsb
xor
ret
scas
movsl
call
and
sbb
push
lahf
push
out
sub
imul
mov
out
insl
inc
dec
push
and
aaa
mov
jnp
jl
insb
aas
jne
dec
xchg
jbe
data16
mov
xlat
jecxz
inc
enter
adc
repnz
jnp
dec
sub
inc
cmp
mov
cmp
je
pop
mov
xchg
or
pop
out
sbb
repz
fsubs
bnd
lret
in
xor
fnsave
jb
rcrl
cmp
xchg
pop
pop
cld
mov
xchg
in
je
popl
xchg
dec
pop
ljmpw
push
xor
mov
daa
or
or
sub
mov
xor
faddp
jb
cs
or
leave
aaa
jle
scas
xor
mov
sbb
mov
cmpsb
lret
jmp
push
gs
inc
loop
pop
inc
cli
sub
sub
rcrl
inc
in
dec
push
fs
movsl
jbe
adc
mov
andb
testb
xor
xor
and
cltd
mov
int3
pop
rcll
push
sub
mov
cmp
jg
lret
outsb
sbb
adc
mov
sbb
jb
and
movsl
bound
pop
xlat
xor
mov
iret
fistpl
sbbl
push
dec
dec
sbb
pop
shrl
pushf
push
sub
xor
mov
pushf
pop
or
and
sbb
dec
fwait
cs
ds
pavgw
nop
adc
mov
and
cmpsb
xor
pop
xchg
fildll
and
mov
mov
mov
aad
mov
push
adc
lcall
xchg
mov
test
stos
cmpsb
mov
mov
repz
fdivl
sbb
mov
add
stc
inc
popf
out
add
cmp
insl
lret
mov
fcomps
gs
jp
pop
mov
xor
fmull
sub
test
push
mov
pushf
xchg
jecxz
push
mov
mov
fsubrs
xor
adc
leave
shrb
outsl
std
mov
ds
mov
ror
jne
fsubrl
pop
stc
jno
dec
lea
outsb
cli
stos
loope
cmpl
out
or
xor
add
in
jp
xchg
sbb
rcr
mov
pop
test
shr
sarl
je
xchg
push
cwtl
xlat
xchg
mov
leave
mov
xor
pop
jge
hlt
or
shrb
and
test
int3
or
test
fimuls
sti
call
loope
xor
or
pusha
push
mov
lret
idivl
jle
fildll
rcr
push
es
mov
xor
fdivs
xor
and
and
or
adcl
add
lods
pop
flds
aam
push
pushf
inc
cmc
lds
push
push
aam
push
lahf
sbb
pop
pmullw
testl
dec
mov
xor
xor
lret
cmp
popf
pop
out
addr16
and
loop
xchg
inc
pop
and
adc
lcall
push
xchg
xor
jle
mov
jp
jle
loop
adc
cmp
xchg
or
mov
jmp
es
aad
mov
daa
xchg
call
std
inc
xchg
movb
jae
lods
outsl
or
mov
mov
push
pop
mov
adcl
rcrb
lock
aas
std
sbb
ret
mov
rol
imul
mov
push
xchg
mov
xchg
add
push
inc
sbb
imulb
jno
nop
push
test
pushf
sbb
add
das
pop
dec
jmp
fwait
dec
jmp
shll
or
aam
jae
dec
jg
pop
mov
aad
lea
int3
cmp
loope
pushf
int
pusha
hlt
clc
ss
sbb
ss
movsb
cld
sub
sub
xor
xbegin
scas
mov
jecxz
and
jbe
scas
push
cmp
dec
push
xor
mov
mov
and
add
and
aam
stos
and
jne
add
or
mov
sub
jle
xor
push
enter
lods
sbb
outsl
push
fsincos
scas
aaa
jecxz
loopne
pusha
mov
push
hlt
movl
fsubs
sbb
push
pop
fiaddl
push
sbb
imul
xor
push
pop
jns
mov
fwait
adc
loop
in
mov
and
mov
push
loop
mov
shll
mov
out
sub
sub
xchg
test
mov
or
jno
lret
call
outsb
add
imul
call
inc
sbb
iret
mov
xchg
or
jb
xchg
ret
mov
pop
aaa
and
sub
cwtl
js
fiadds
idivl
sbb
cmpsb
dec
xor
jno
enter
in
and
pop
cs
sahf
in
in
jae
or
int3
js
repnz
out
fsubr
fldl
subl
loop
pushf
jae
sbb
or
xlat
int3
push
mov
jp
sub
icebp
push
pop
push
xchg
pop
sti
jle
addr16
xchg
jecxz
movsb
mov
or
inc
xor
fnstsw
cmp
xchg
fistps
sarb
rcrl
outsb
mov
xchg
xchg
sub
adc
cmp
sarb
jmp
dec
pusha
std
dec
cmp
rcl
cmpsl
imul
movsb
jl
pushf
sub
icebp
std
aad
xor
sbb
pop
pop
mov
cmpb
loop
sbbb
test
add
in
xchg
jno
or
pop
dec
adc
pop
or
inc
mov
dec
pop
and
lods
xor
xor
jp
ret
loopne
sub
dec
jle
call
ss
jne
mov
jo
xorb
bound
sub
lds
sub
cmc
lcall
mov
test
fs
mov
jg
in
scas
out
aad
in
add
pop
inc
cmovs
leave
addr16
and
sub
sub
fst
mov
negl
mov
aam
and
push
iret
sbb
std
repz
pop
js
dec
xchg
inc
aaa
xchg
sbb
xor
movsb
xchg
lods
pop
xchg
aam
xchg
mov
xlat
iret
xchg
push
rcll
stos
adc
test
jo
pop
cmp
xor
stc
clc
rolb
in
or
dec
pop
mov
jo
popa
fisubl
adc
ss
xchg
je
xlat
cs
cmp
sbb
lcall
rcrb
or
mov
adc
popa
push
add
pop
test
roll
mov
pop
lock
and
ret
jae
fwait
vmovss
rcrb
iret
dec
adc
dec
jo
sub
sarl
add
inc
sbb
mov
or
jns
xor
mov
mov
mov
mov
xchg
xchg
outsl
cld
movsb
and
lods
es
insb
lds
push
mov
cmp
lds
sub
push
outsl
xchg
mov
inc
test
jnp
nop
stc
loope
cltd
sbb
xchg
in
mov
jge
ljmp
and
in
in
adc
xchg
pop
in
fsts
and
xchg
out
sub
repnz
or
sub
gs
aam
scas
js
pop
daa
mov
cmc
mov
push
cwtl
in
scas
test
subb
sbb
lock
sbb
xor
pop
mov
or
aaa
or
outsl
je
add
in
fisttps
scas
add
fs
in
cmpl
adc
jo
inc
pop
scas
not
lock
das
in
pop
add
push
cmc
shl
fildl
lods
sub
jge
cli
inc
int3
push
xchg
mov
xchg
dec
outsb
mov
add
ja
inc
aam
aam
pop
roll
mov
adc
xor
add
inc
mov
lods
cli
outsb
cmp
dec
inc
pop
aaa
jl
or
cmpl
mov
fsubr
cmp
inc
test
sub
fnstcw
into
xor
clc
mov
shlb
stos
xchg
sbb
stc
mov
push
push
mov
nop
cwtl
outsb
mov
testb
adc
and
sbb
sti
pop
push
pushl
loopne
into
adc
test
adc
loop
iret
add
sbb
fnstcw
addr16
adc
xor
repnz
lret
lods
mov
shlb
jns
mov
pop
ljmp
jmp
pusha
ffreep
imul
push
movsl
addl
or
out
jmp
lahf
inc
jmp
jne
out
jmp
fs
inc
int
data16
mov
adc
shrb
cmpl
cmpsl
jge
mov
mov
mov
fisttpl
cwtl
aaa
jp
push
pop
daa
cmc
and
pop
cmpsl
sti
and
dec
jns
xchg
adc
cmp
into
aam
movsb
jp
lcall
scas
fsub
mov
dec
mov
lea
arpl
out
fcmovne
mov
testl
pushf
ja
outsl
es
popa
or
out
in
adc
iret
cld
inc
jno
ss
push
hlt
mov
std
mov
inc
sbb
mov
push
mov
jmp
add
sbb
inc
pop
sbb
leave
push
icebp
iret
test
push
stos
fdivr
lret
push
sbb
or
cmc
fdivrs
push
and
xor
push
push
divl
lea
cmp
adc
in
cmp
sahf
mov
popa
pop
pop
gs
mov
cmp
sub
mov
ja
mov
cmpsb
mov
lcall
add
lods
xlat
pop
popf
cmp
in
or
sbb
subb
xor
leave
clc
aad
xchg
cli
bound
jp
sbbb
and
daa
leave
dec
inc
or
sbb
xor
cli
dec
or
rolb
or
lret
lret
mov
cmpsb
ftst
sub
jp
gs
jmp
movsl
das
pop
aaa
cmp
out
test
mov
lods
push
aaa
mov
dec
mov
cmp
test
mov
xchg
mov
push
stc
data16
fimull
cmp
jns
xor
pop
pop
popf
and
loopne
mov
jge
js
fiaddl
rcll
repnz
inc
lea
xchg
nop
repz
pusha
fistps
push
ret
pop
inc
ja
push
mov
das
mov
pusha
or
movsl
mov
jmp
inc
rclb
mov
lea
ret
popa
dec
xchg
in
loope
ret
cwtl
je
jbe
xor
mov
mov
jmp
jo
loop
daa
jecxz
lock
addr16
fwait
sub
jl
mov
cli
fucomi
clc
out
pop
add
faddl
and
adc
sub
inc
adc
lods
outsb
xor
pop
in
shrl
stc
les
or
cli
cwtl
sahf
insb
and
stos
pop
lcall
mov
es
and
fiadds
adc
lahf
es
lods
cmpsb
sub
lods
imul
or
outsb
sahf
sarl
lea
adc
and
pusha
mov
std
insl
je
lods
xchg
repnz
add
sub
fiadds
pop
shr
xlat
andl
fistpll
sub
mov
and
push
or
pop
pop
inc
jp
loope
imul
xor
pop
push
imul
addr16
add
clc
jo
outsl
insl
js
out
push
divl
pop
mov
test
scas
add
lods
cmc
int
dec
fadd
lods
rorl
cwtl
jnp
pop
and
jbe
stos
in
jo
xchg
pop
cmpsl
out
or
ljmp
mov
sbb
mov
cwtl
mov
cmpsb
xor
inc
out
or
dec
and
rolb
cwtl
or
xchg
dec
cwtl
inc
or
mov
shll
mov
outsb
jecxz
repz
xchg
loop
mov
cmc
cmp
pushf
into
mov
pushf
and
stos
sub
clc
cmc
push
add
dec
mov
jo
push
xchg
adc
lea
push
stos
data16
push
rcrb
xchg
stos
out
imul
mov
mov
and
test
clc
push
adc
pop
es
aas
roll
in
cmpsb
sub
pop
sarb
adc
add
mov
xor
movsl
adc
and
out
out
fsubp
adc
es
push
jb
popa
cltd
test
rorb
jp
ljmp
call
movl
scas
add
or
mov
pop
sti
lds
xor
pop
stos
xchg
cmp
xchg
xorl
js
add
mov
mov
xor
adc
daa
mov
cmp
push
rolb
imul
insb
daa
stos
or
cli
les
in
add
in
mov
std
jmp
outsb
mov
test
daa
dec
xor
push
or
stos
test
cs
ret
idivl
dec
push
lcall
cmp
repnz
push
bound
jo
jne
inc
push
xchg
shrd
mov
pop
inc
mov
int3
data16
inc
mov
and
lock
cltd
push
aam
or
mov
or
or
faddl
mov
lock
lea
and
mov
js
orb
or
cmp
cmc
sbb
xchg
rcr
icebp
jg
ret
gs
ljmp
data16
nop
xchg
iret
lock
pop
out
lock
stc
loop
adc
add
xlat
sar
sub
jg
test
and
sahf
mov
adcl
add
or
daa
pop
ret
jg
test
movsb
dec
xor
sbb
aas
push
xchg
idivl
cld
lcall
push
cmp
cwtl
or
jae
loopne
jbe
jecxz
pusha
pop
in
in
fadd
dec
out
pop
cmp
inc
cs
mov
dec
sbb
or
and
jae
scas
sahf
stos
int
push
mov
cmpsl
cmp
rorb
push
mov
in
ja
insb
mov
fwait
dec
push
rcrb
mov
icebp
jnp
hlt
jl
mov
or
mov
cltd
adc
fistpll
push
pop
xor
out
adc
jb
ficoms
adc
bound
xchg
movsb
loop
inc
xor
mov
rcl
cpuid
iret
push
adc
pop
mov
imul
cltd
sti
ret
sti
jg
les
out
push
test
icebp
jecxz
pop
jbe
subl
xlat
adc
pushf
push
mov
cmp
enter
iret
in
or
dec
inc
shll
lret
xchg
iret
lods
loopne
lock
add
negl
lret
mov
sbb
jbe
leave
sahf
inc
push
or
inc
lahf
xchg
pop
popa
jo
add
jns
sub
and
mov
repz
roll
hlt
inc
aam
test
jmp
cltd
shll
ds
pop
ja
sarb
mov
sbb
mov
adc
lds
dec
jnp
or
in
jp
pop
mov
aas
and
shll
leave
jns
push
mov
std
fisttps
xor
xchg
add
mov
pop
dec
fadd
in
pop
cmp
imul
or
ret
mov
or
fdiv
mov
dec
popf
pop
xchg
mov
jp
push
bound
cmp
lahf
fwait
sub
mov
xlat
jne
jmp
add
stc
mov
int3
push
popa
fmuls
sub
sub
insl
cmp
lds
pusha
mov
pop
jmp
or
insl
clc
sub
lods
stos
lcall
cmp
addr16
push
mov
push
sub
fwait
jecxz
mov
fs
stc
mov
add
testl
mulb
loope
out
aad
jne
leave
add
mov
mov
out
mov
jb
jnp
xchg
or
inc
jns
pop
mov
and
faddl
adc
mov
xchg
sbb
sub
push
inc
lret
pop
or
cmc
mov
mov
xchg
cwtl
mov
in
cs
bound
mov
pop
jmp
js
xchg
dec
pop
shlb
xor
or
push
or
test
mov
cmc
shll
loop
popf
lea
xchg
dec
jp
xor
rcll
push
add
sub
xchg
and
pop
inc
xchg
lret
jl
testb
adc
roll
cs
pusha
pop
dec
add
out
adc
xchg
movsb
pop
pop
outsl
outsb
psubq
add
dec
mov
sbb
decl
ret
ss
cmpsb
ja
or
pop
dec
xchg
sbb
jmp
loope
xchg
fisubrl
sbb
fmull
fildl
mov
je
mov
addb
or
aad
push
loopne
xor
mov
xor
fnsave
repz
xchg
int
add
rcr
cmpsl
sti
ret
repnz
lcall
cmp
inc
sub
sub
inc
movsl
insl
xor
mov
lahf
int3
pop
xor
xor
or
sub
push
arpl
dec
push
int3
std
testb
add
pop
and
lods
fadds
or
inc
fisubl
int
cli
mov
test
pusha
add
sub
outsl
rolb
xlat
fwait
out
ja
dec
rorl
lcall
test
inc
insb
movsl
adc
jg
test
inc
lds
andl
dec
ljmp
jl
jg
fists
mov
or
andb
mov
push
leave
xchg
mov
movsb
mov
push
sbb
jge
mov
pop
out
mov
fistpl
inc
fidivl
cmp
sbb
add
sub
cmp
push
test
mov
call
stos
test
loope
popa
sub
ror
xchg
push
dec
mov
shrb
push
movsb
sub
add
push
pop
fucom
fwait
ret
out
mov
sbb
shl
dec
sub
push
es
sub
cmc
insb
int3
and
xchg
push
mov
jp
push
fsubrs
fucomip
mov
cmp
adc
or
ss
out
jno
in
les
sub
popa
adc
ja
movl
ljmp
mov
test
iret
mov
push
add
inc
cmp
scas
mov
mov
add
fisubs
jbe
pop
xchg
sub
mov
and
mov
jp
subl
ss
out
jg
sbb
hlt
pop
pusha
inc
std
pop
sbb
push
add
add
orb
xlat
leave
mov
and
das
addb
out
pusha
inc
jp
lock
daa
or
in
out
decb
jmp
cli
aas
sti
ret
lret
out
cwtl
addl
fadd
enter
mov
out
icebp
mov
inc
or
inc
pop
sbb
adc
sti
mov
jo
sti
xlat
mov
sbb
pop
mov
ljmp
push
rdmsr
cld
ljmp
out
mov
mov
movsb
lea
mov
ficoms
or
cld
adcl
cmpb
mov
cmc
xlat
lret
test
shlb
test
add
iret
sbb
inc
and
push
xchg
outsb
or
and
pop
dec
cltd
dec
movsl
arpl
arpl
outsl
inc
sarl
mov
jnp
mov
rorl
jnp
xchg
fdivl
mov
dec
lods
fwait
dec
push
cmp
mov
sub
cmp
or
cli
lcall
inc
call
pop
dec
out
stos
loope
or
aas
xor
shrb
lods
repnz
or
add
imul
rorl
iret
add
movsb
xor
cmpsl
sbb
aas
mov
cmp
gs
scas
mov
sub
and
call
xor
sar
pop
or
mov
daa
cmp
shrb
sub
pusha
mov
fsubrl
cmp
adc
add
dec
mov
and
and
push
stos
push
repnz
jne
dec
push
or
xchg
les
lods
nop
pop
mov
and
loope
icebp
jo
lods
pop
mov
daa
scas
pcmpgtw
sarl
pop
jl
and
fisttps
loop
add
in
fcomip
insb
jbe
sbbb
popa
lret
jnp
add
fcmovne
mov
mov
mov
sbb
fmuls
xchg
fs
pop
sbb
movsb
sbb
jmp
xor
sahf
aam
ljmp
rcrb
or
add
test
or
outsb
es
nop
lea
leave
mov
xchg
or
mov
mov
rorl
xorb
push
aad
push
or
jne
xchg
jl
mov
lods
xchg
inc
dec
and
call
mov
push
pop
fisubrl
scas
dec
jno
cli
dec
dec
mov
mov
mov
sbb
insl
sub
fisubs
in
loop
mov
sub
sub
lcall
leave
or
js
orl
adcl
lahf
je
add
cld
cld
sub
notl
mov
dec
sub
mov
cwtl
or
push
sub
pop
xchg
sub
imul
and
imul
add
or
jbe
out
xchg
or
in
xchg
lods
cmpb
xor
nop
push
fidivrl
aad
shr
xor
jge
testb
mov
and
adc
lods
subl
adc
ret
inc
fsubrl
dec
ret
scas
sub
das
ret
int
push
xor
mov
mov
notb
idivl
cmp
pop
mov
dec
scas
mov
inc
aaa
shll
std
mov
shll
js
incl
ss
fcoms
and
das
xor
inc
dec
fsts
mov
pop
popf
int
cmp
ret
out
repnz
fidivrs
push
cmp
push
inc
dec
pop
push
mov
inc
dec
std
jbe
pop
xchg
push
cmc
les
movsb
in
jb
test
jp
insl
iret
cld
outsb
and
push
xchg
das
dec
adc
jecxz
cmpsb
xor
push
jne
popa
outsl
and
sub
push
jnp
ret
iret
xlat
fidivrl
inc
dec
cmp
fwait
es
mov
mov
popa
sbb
enter
je
jb
fadds
pop
sti
in
mov
push
sbb
cld
jne
popa
sti
or
mov
data16
pusha
sbb
leave
mov
mov
scas
pop
mov
jb
fnop
lds
jg
and
jne
or
push
xchg
movsl
sarb
pop
sub
out
sub
xor
mov
aas
aad
mov
mov
dec
pop
nop
sbb
loope
in
xlat
dec
xor
or
stos
cmp
lods
push
inc
lods
sbb
adc
xchg
dec
xor
jl
mov
and
pop
in
or
imul
lcall
sub
fcmovnb
out
add
std
inc
cmp
add
jbe
insl
fwait
mov
rcrl
fistps
xchg
sub
mov
imul
cmpsl
ficomps
mov
push
and
and
dec
cmp
or
push
mov
sbb
ficompl
cmpsb
xor
push
dec
cmpsb
stc
movsb
orw
hlt
out
push
out
addr16
mov
pop
fs
enter
les
sbb
es
cmp
push
mov
std
xchg
test
shrb
pop
adc
sub
or
in
orb
jmp
clc
stos
bound
cld
dec
mov
dec
arpl
sub
sub
decb
insb
or
jnp
xchg
xor
mov
dec
test
xchg
aad
sub
mov
les
pop
je
fs
sti
stos
lcall
jle
arpl
inc
rcll
jecxz,pn
sub
std
add
inc
adc
jbe
cmp
lock
sahf
loopne
or
pop
push
inc
push
inc
popf
mov
loopne
pop
mov
ret
or
rorl
mov
pusha
inc
aad
mov
cmp
jae
and
call
lods
mov
cmpsl
xchg
push
pushf
dec
fistpll
fs
sbb
pop
insl
sti
add
in
sahf
repnz
pop
int
cmp
sub
in
mov
mov
nop
stos
icebp
inc
mov
lock
popf
das
sub
push
push
pop
subl
mov
sub
sahf
pop
jo
cltd
xchg
sub
or
repz
insb
sbb
call
jle
test
insl
sub
sbb
push
push
call
cmp
cmc
fcmovbe
arpl
into
adc
jno
and
cwtl
scas
data16
data16
ja
outsb
pcmpeqb
in
shlb
cmp
ds
jp
mov
xchg
jmp
fucomp
insl
es
cwtl
dec
movsb
lock
xor
cmp
jg
lea
scas
lret
jmp
sub
gs
rorb
mov
push
xor
mov
loopne
sbb
inc
xor
in
arpl
push
push
inc
pop
pop
leave
ror
mov
stos
inc
cmp
stos
mov
repnz
sti
inc
jge
xlat
dec
je
in
adc
or
push
loopw
push
addr16
xchg
loope
cmpb
scas
cmp
mov
mov
cli
fimuls
inc
mov
jo
fstpt
xor
dec
std
in
mov
pop
adc
mov
dec
mov
xchg
sbb
dec
inc
ret
aas
mov
mov
xor
xchg
repz
pop
cmp
mov
loope
arpl
cmp
pusha
mov
stc
pop
int
xor
jo
or
sub
mov
outsb
aaa
in
fs
sub
pop
repz
pop
shlb
mov
jmp
sarb
aaa
fistpl
addr16
gs
loop
test
ret
jo
cmc
cmpsl
pop
test
dec
mov
xchg
and
iretw
jae
pop
cmpsb
movsb
inc
std
fwait
nop
push
mov
shl
clc
push
subl
out
outsb
mov
mov
adc
rorb
bts
add
xorb
enter
loopne
cld
add
add
add
lods
ss
mov
fistl
cmp
xchg
sub
push
scas
or
jne
rorb
scas
xor
mov
jae,pn
sub
adc
stos
mov
mov
cld
ja
adc
mov
push
jb
inc
scas
mov
imul
das
cmpsl
dec
and
xchg
adc
or
push
adc
scas
or
lds
imulb
jg
stc
fucomi
push
in
mov
cmp
les
jmp
pop
divl
push
jo
ret
gs
mov
out
or
inc
jne
jl
clc
add
jp
ja
enter
cmp
mov
pop
or
mov
pop
insb
lock
icebp
inc
jns
lret
cltd
pop
and
push
or
or
out
imul
jmp
jge
sbb
or
jae
daa
outsb
mov
jae
cwtl
or
push
push
jl
xor
push
mov
lret
sub
xor
dec
xchg
and
fisubl
ds
add
xchg
sbb
xor
mov
outsl
add
sbb
xchg
jle
mov
cmpsb
pop
sub
cmp
mov
into
mov
mov
sub
jnp
out
ja
outsl
test
xor
sarl
movsl
into
repz
or
lret
sti
cld
mov
pop
jge
pop
fsubp
inc
mov
rclb
mov
xlat
je
xor
mov
or
xchg
mov
cmp
mov
push
pop
push
xor
mov
or
adc
pop
xchg
fists
push
dec
fwait
or
out
push
adc
mov
mov
add
cmp
out
fistl
insb
lods
push
cmp
inc
daa
int
mov
cmp
cmp
int3
inc
divb
inc
jns
jp
das
fsub
cmp
jne
and
cmp
int3
ret
aaa
stos
je
test
test
adc
mov
test
xor
push
rep
inc
shlb
rsm
out
and
mov
xchg
out
clc
push
cltd
loope
and
cmp
push
mov
scas
dec
fcoml
jnp
and
cltd
es
or
or
and
btc
fwait
mov
pusha
in
outsb
lea
std
aaa
cmp
jmp
xchg
push
jp
dec
es
inc
pop
or
test
ds
je
adc
jle
out
push
aaa
es
sbb
shrb
pusha
dec
ja
ja
fsubp
pop
aaa
and
push
lea
push
sub
lods
fwait
daa
jbe
data16
push
cmp
sub
cmp
nop
mov
popa
adc
xchg
js
add
daa
stos
xor
stos
sbb
mov
enter
pop
leave
inc
inc
push
inc
or
jle
mov
rorb
mov
stos
hlt
lea
mov
sub
mov
add
adc
jno
and
dec
jmp
fistpl
scas
mov
es
mov
int
into
adc
jmp
cmpl
in
icebp
mov
pop
xchg
mov
cli
in
hlt
inc
lds
sub
icebp
cmp
bound
adc
sarl
pop
pusha
adc
out
and
xor
inc
jb
imul
outsl
sbb
sub
rorl
adc
fldl
sahf
xor
push
jno
shl
jns
test
mov
ficomps
faddp
call
call
xchg
inc
jns
dec
or
mov
inc
mov
js
mov
jbe
push
cld
inc
push
cmp
inc
jge
mov
sti
mov
adc
sub
int
rorl
pop
int3
lods
sbb
mov
stc
xor
and
jo
fs
repz
addl
and
dec
mov
xchg
xchg
add
sbb
mov
push
mov
mov
and
iret
cmp
scas
sub
mov
push
imul
inc
lcall
es
dec
test
pop
lcall
pop
les
cmp
mov
std
in
jg
mov
adc
fs
dec
push
lahf
inc
testb
sub
idivl
add
cmp
mov
lods
cmpsb
cmc
icebp
repnz
sbb
fs
fisttps
jg
inc
xor
pop
cmp
outsb
xor
lods
in
xor
movsl
mov
xchg
push
inc
mov
mov
out
pop
pop
cwtl
in
push
mov
mov
pop
rorb
jae
jo
testl
scas
sub
mov
push
dec
mov
call
cmp
jae
sub
sti
add
roll
imul
movsl
inc
mov
gs
fsubs
popa
ljmp
lahf
and
fisubrl
pusha
imul
je
movsl
xchg
data16
mov
repz
xchg
fisubs
cmpsl
push
jecxz
imul
cmp
add
sub
aad
stc
push
push
sbbb
pusha
and
mov
push
cmpsl
fisubrl
and
into
pop
xor
aad
lods
lock
push
in
loopne
jecxz
je
dec
cltd
movsb
out
xchg
fistps
jno
mov
enter
fnstcw
dec
push
xor
jne
lds
xchg
adc
and
add
and
sbb
push
js
outsl
xor
daa
inc
jne
sub
fisttps
fbld
call
mov
aad
cmp
es
push
cltd
out
out
arpl
lods
andb
daa
add
cs
mov
fs
pop
mov
or
sbb
pop
arpl
call
lcall
lahf
leave
push
mov
lods
inc
fcoml
mov
pop
lods
mov
cmp
push
mov
dec
addr16
rorb
pop
notw
adc
inc
fidivrs
mov
push
pop
mov
xor
pcmpeqb
or
or
popa
cmp
push
dec
xor
shl
jns
push
add
jns
repz
jle
hlt
imul
mov
ds
loopne
scas
push
and
sbb
shll
icebp
popa
xchg
pop
cld
pop
fisubs
lcall
adc
stos
mov
add
dec
jle
inc
lea
pop
dec
out
imul
sbb
mov
dec
xorl
pop
pop
cli
out
shl
jmp
leave
movsl
jo
mov
mov
jo
imul
les
and
out
sbb
add
push
movsl
or
repz
mov
cmp
fsubrs
leave
cwtd
adc
scas
ror
pop
and
ja
xchg
and
pusha
cli
dec
in
mov
adc
xchg
outsl
inc
mov
jge
sbb
ss
pop
jg
sarb
push
fldt
sub
mov
aad
push
push
dec
int
xchg
inc
xchg
gs
add
mov
pop
jp
cli
fistl
jecxz
jae
dec
jae
int
add
mov
lock
ret
jmp
cltd
mov
sti
bound
les
lds
call
push
mov
sbb
or
movl
dec
fs
sbb
xlat
fldenv
inc
pop
push
filds
dec
arpl
mov
stc
dec
inc
es
shlb
cmp
insb
scas
cmp
repz
mov
adc
loope
push
or
push
cs
je
sbb
ret
xchg
pushf
mov
sbb
ja
mov
cmp
pop
add
outsl
mov
sub
push
and
mov
jnp
loop
sti
fsubl
shl
pop
push
popa
mov
mov
dec
stc
sub
xor
repnz
xchg
inc
push
aad
and
stos
or
lds
and
mov
and
mov
call
test
and
cmpsb
fnstenv
dec
std
mov
out
dec
adc
ljmp
lea
pop
mov
aam
mov
cmp
pop
hlt
insl
push
fdivl
ljmp
xchg
jg
sbb
mov
xor
out
add
or
out
and
or
push
rclb
fsubr
jecxz
bndstx
dec
movsl
clc
lret
mov
xor
or
xor
lds
and
cld
mov
insl
dec
jbe
ffreep
push
cmpsb
lods
in
sub
hlt
in
imul
and
roll
jb
lea
adc
jno
in
je
jle
nop
test
mov
mov
lds
lahf
xchg
push
mov
cwtl
cmp
pop
insl
lea
mov
pushfw
cmp
dec
pop
xor
jbe
imul
xor
iret
xchg
push
adc
lock
or
rorl
xchg
and
mov
xchg
mov
stc
pop
lret
movb
loop
adc
ds
fistpll
data16
add
stos
push
jo
mov
add
cli
lea
and
not
inc
std
pop
in
or
add
rcrb
cmp
iret
out
lods
inc
ret
iret
push
add
fbld
and
mov
cmp
fsubl
cltd
inc
arpl
int3
lret
je
imul
ja
cmp
and
popa
cwtl
xchg
inc
push
mov
in
mov
mov
mov
adc
adc
xor
fs
mov
sbb
fs
add
inc
inc
out
lock
mov
mov
ret
lods
or
xor
les
test
lret
pop
add
lcall
dec
lds
data16
rcrl
mov
inc
cmc
push
xor
gs
iret
adc
mov
stos
jno
xchg
sbb
xor
dec
xchg
pop
mov
stc
lods
pop
jg
adc
and
insb
lds
sub
jae
jno
jne
jp
leave
fadd
insl
xchg
and
test
movsb
or
and
hlt
adc
inc
stc
jno
sbb
outsb
adc
je
es
mov
lods
or
cmc
addb
pop
arpl
push
fdivrs
out
pop
test
cmc
scas
mov
pop
insl
mov
outsb
pushf
or
sub
into
fbld
mov
jmp
mov
in
push
pop
pop
pop
lret
cmpsb
fstpl
xchg
repnz
test
xchg
idivl
aam
pop
rorb
fdivl
in
dec
inc
in
out
std
dec
dec
dec
jmp
lods
ja
or
mov
out
out
cmpsl
addr16
scas
xchg
xor
mulb
inc
pop
mov
push
stos
insl
divl
shlb
sbb
mul
sub
ret
push
pop
cmp
mov
cli
adc
add
pushf
lcall
cli
jo
test
jp
lods
negb
in
sti
cmp
jl
mov
jecxz
je,pn
ret
scas
or
repnz
add
mov
in
jns
or
pushf
and
stos
xchg
sub
and
pop
jb
test
xor
or
pop
add
fistl
inc
push
add
enter
xor
inc
clc
cmp
sbb
in
mov
mov
orb
pop
mov
jo
xchg
mov
jns
leave
pop
enter
mov
adc
and
push
addb
add
push
adc
inc
xchg
and
xor
sbb
insl
shll
mov
fwait
loop
mov
sub
pop
lret
adcb
mov
out
cltd
or
mull
lcall
rolb
hlt
jl
xor
and
jns
lahf
dec
push
aaa
push
das
movsl
repnz
or
xchg
mov
cld
mov
gs
lea
dec
sub
in
insb
and
popf
pop
divl
dec
mov
mov
sub
call
jecxz
aaa
ds
pop
sbb
ficoms
pop
cltd
fwait
or
stos
mov
and
mov
popa
enter
scas
jecxz
clc
call
push
adc
and
fisubl
not
adcl
push
push
outsb
xchg
pop
loopne
lock
lods
popf
andb
jno
movsb
push
shrb
mov
cmpsb
pushf
rcll
inc
mov
jae
or
cmp
je
xchg
cmpsb
mov
jecxz
jmp
cli
nop
in
loopne
pop
in
push
fmulp
dec
sub
mull
call
push
out
ljmp
fsts
outsb
jmp
jns
test
push
push
mov
sub
inc
xor
leave
scas
out
fsubr
push
cmpsb
aas
sbb
cmpsb
mov
in
add
sti
movsl
aas
adc
jle
pop
jo
xor
out
mov
je
adc
mov
arpl
xchg
data16
test
gs
pop
test
mov
mov
xor
aad
mov
mov
icebp
loop
incl
sahf
out
xlat
lret
pop
mov
sahf
xor
mov
and
insb
fists
xchg
test
loop
ja
stc
aam
cmpb
aam
loope
cmp
cmp
adcl
push
mov
ret
mov
mov
or
pop
inc
ror
cmp
in
cli
out
ret
lea
mov
int3
ffreep
cmpsb
dec
sbb
xlat
push
jl
push
dec
xor
out
ret
test
jae
addr16
in
ret
repnz
pop
ljmp
dec
repnz
pop
mov
mov
jne
arpl
sub
lret
hlt
frstor
or
call
add
mov
mov
fisubrs
jp
xlat
adc
hlt
fstpt
adc
nop
test
mul
enter
add
mov
dec
aad
add
pop
les
cmp
push
pop
xchg
ret
and
xchg
push
aam
mov
hlt
mov
hlt
mov
shlb
dec
aaa
leave
and
push
iret
and
sbb
pop
xlat
jb
dec
jg
mov
mov
movsl
sti
xchg
mov
dec
test
dec
jle
lods
push
subl
dec
adc
xchg
jo
cmp
push
xor
dec
add
sti
mov
repnz
incb
sub
dec
pop
jmp
imul
xchg
divb
or
int
popa
data16
fstl
jle
incl
xor
jnp
sbb
mov
shl
icebp
push
xor
xchg
lods
add
stc
ds
xchg
arpl
and
mul
lods
icebp
or
cltd
add
xor
dec
sbb
mov
lea
xor
std
inc
cld
push
lret
notb
jl
xchg
jae
inc
das
iret
sbb
xor
daa
jmp
pop
cmp
fldl
push
mov
cs
imul
pop
mov
lcall
sub
jae
and
cmpb
pop
stc
in
mov
and
dec
push
int
push
jae
push
adc
sbb
inc
mov
out
jnp
xor
mov
jle
test
and
push
daa
ret
es
pop
nop
sub
add
inc
mov
fs
ret
test
in
aaa
xchg
addr16
fdivs
xchg
pushf
sahf
out
frstor
cwtl
and
inc
inc
nop
and
clc
dec
mov
xor
sarl
lds
fwait
pop
xchg
cmp
fisubrs
jmp
pop
push
dec
int
daa
mov
repnz
push
enter
repnz
std
cld
popa
mov
add
push
cmp
and
cmp
sub
pop
lods
shlb
sarl
insb
lods
shlb
jae
adc
dec
adc
add
pop
pop
pop
in
add
sub
cmp
scas
inc
mov
dec
sbb
xchg
aas
mov
iret
add
xchg
jb
inc
inc
inc
xchg
sarb
mov
mov
jne
mov
pop
xchg
mov
aam
adc
dec
pop
cmp
mov
pop
fstps
lods
pop
jnp
pushf
frstor
dec
ja
dec
mov
or
cmpsl
adc
cmpsl
mov
mov
jmp
addr16
mov
inc
xor
sti
adc
cld
in
loopne
lahf
inc
or
mov
lods
imul
xchg
divb
movsl
push
jl
cmc
in
dec
pop
xchg
in
jne
loop
jmp
cld
cmpsb
pop
inc
int
cmp
scas
mov
in
push
adc
test
mov
cmpsl
scas
cmpsl
push
mov
or
mov
pop
push
loopne
clc
mov
cmpsl
addb
pop
repnz
sub
push
inc
xchg
shl
icebp
pop
out
cmp
repnz
jo
testb
adc
pop
aam
dec
dec
repnz
cmp
orb
ret
in
or
popf
in
out
test
xor
jbe
mov
ret
daa
cld
and
in
and
xor
push
enter
pop
xor
mov
sarl
sahf
and
xor
scas
in
xorl
pop
dec
dec
push
je
leave
and
jmp
sahf
mov
mov
cmp
ret
ds
arpl
jg
xor
jbe
lds
pop
and
js
daa
les
add
mov
hlt
rorb
sub
hlt
dec
inc
daa
cs
testb
in
pop
out
and
imul
nop
pop
jne
fdivr
lret
sbb
js
sub
sub
test
jg
in
sub
fucomip
cmp
push
call
xor
sbb
inc
cmp
lret
mov
adc
subb
je
cmpsl
mov
pop
xor
or
mov
movsb
repnz
out
cmpsl
lahf
dec
lock
mov
dec
rclb
repz
ret
or
xchg
xor
inc
adc
out
and
repz
xlat
adc
mov
ds
mov
ljmp
jle
pusha
jge
pop
jb
es
cmp
inc
aaa
or
hlt
js
cwtl
adc
daa
mov
cs
sbb
jmp
addr16
scas
or
push
mov
dec
cmp
cmc
mov
sub
pop
and
or
ret
push
sub
pop
popf
pop
inc
mov
jne
call
test
fs
mov
push
rol
rclb
js
xchg
and
adc
loop
cmp
sub
ja
mov
inc
pop
jno
mov
sub
mov
mov
imul
and
lods
cmpsl
sti
lods
call
addr16
pop
pop
nop
xchg
je
sub
shll
mov
xchg
dec
push
cwtl
cs
xlat
dec
hlt
fnstsw
pop
frstor
call
fwait
imul
jmp
pop
sahf
adc
xchg
xor
pop
push
in
push
xchg
lret
cmp
shll
div
shr
ljmp
sbb
aaa
xor
sub
insl
out
pop
and
cli
cs
adc
add
inc
mov
push
and
and
js
call
sbb
inc
imul
and
hlt
or
pop
mov
mov
or
inc
adc
fisubrl
mov
add
jno
popf
test
pop
lahf
mov
push
ds
cli
sbb
ret
mov
loope
sbb
or
jne
mov
int
cld
or
fnstsw
cmp
lock
mov
mov
ret
aas
adc
bound
test
pop
and
fnstcw
rcll
clc
aam
ja
rcrb
into
sti
repnz
pusha
popf
pop
xor
daa
mov
lahf
inc
rorl
push
movsb
push
pop
nop
cmp
icebp
sbb
popa
mov
cwtl
shrb
mov
inc
jmp
mov
out
add
sub
outsb
pushf
mov
and
add
enter
call
addr16
sub
imul
push
add
outsl
pushf
cmp
push
mov
inc
stc
hlt
mov
push
scas
xor
and
mov
pop
mov
out
fstl
sti
pop
leave
negb
inc
inc
in
inc
dec
arpl
sti
lock
icebp
dec
push
repz
jbe
dec
sbb
sub
dec
mov
fstpl
iret
jnp
mov
cmpsb
fadds
aaa
mov
pop
adc
jo
push
sub
push
stos
mov
mov
xchg
lods
subl
mov
adc
jp
and
loope
ret
mov
mov
mov
aad
shl
mov
stos
lcall
dec
mov
nop
gs
in
repz
ss
xor
es
mov
rclb
aad
xchg
repnz
and
fwait
fwait
roll
bswap
and
pop
test
xlat
push
mov
xor
mov
bound
jnp
sbb
xor
shlb
adc
cmp
xchg
sahf
xchg
mov
jp
mov
ret
inc
or
mov
cmp
adc
in
dec
cmpsl
fimull
aad
adc
leave
movsb
push
add
pop
jg
xchg
hlt
and
mov
pop
bound
call
sub
mov
imul
mov
mov
lret
adc
add
ret
or
cmp
and
push
sub
enter
add
sub
and
out
push
popf
rorl
imul
movsl
or
jmp
push
outsl
sub
xchg
push
bound
in
test
jmp
jg
pop
and
dec
inc
iret
or
sub
icebp
scas
pushw
push
push
push
insl
mov
push
fildl
inc
adc
je
nop
mov
in
lock
mov
add
cld
jecxz
xor
pop
cwtl
aaa
sub
or
inc
inc
push
xchg
lock
scas
cmpsb
pop
push
jecxz
jl
addr16
add
inc
dec
movsb
scas
mov
mov
mov
jo
fs
in
loop
and
adc
lret
xor
dec
pop
xlat
xchg
mov
daa
test
jns
ret
pop
arpl
jge
push
inc
pushw
mov
dec
or
add
inc
fcoml
sub
imul
mov
loop
mov
cmp
jmp
push
jnp
add
push
fnstenv
lods
inc
dec
xchg
add
or
jo
sub
adc
add
sbb
andl
pushf
pop
out
push
adc
stc
mov
cmp
jge
sbb
bound
xchg
mov
cs
jnp
sub
jbe
mov
lret
outsb
lods
jle
push
aam
sbb
jbe
repz
ficomps
mov
inc
dec
shll
in
fmul
push
divl
es
cmp
xlat
and
adc
pop
stc
and
dec
or
les
and
rcll
pop
mov
xchg
sub
sub
aaa
enter
cmp
nop
rclb
sbb
mov
ljmp
out
xor
sub
sub
repnz
test
mov
jle
dec
adc
loope
rolb
mov
and
mov
pop
mov
xor
or
int3
xchg
dec
mov
repnz
lods
into
mov
mov
orb
enter
cs
dec
lods
ficoms
mov
sbb
mov
outsl
xor
shll
les
xchg
add
pop
pop
mov
mov
ss
sti
pop
sahf
xor
shlb
cld
shlb
incl
xchg
jmp
cmp
dec
out
dec
jo
aam
push
push
jmp
cmpsl
jns
lahf
push
stos
mov
int
lods
in
pop
or
int3
xorl
mov
es
sbb
adc
arpl
cmpb
lret
lds
or
movsb
mov
cmpb
jo
in
dec
adc
popa
add
mov
fimull
lcall
cmp
adcb
add
test
popa
ret
sub
cmp
mov
push
sahf
movlps
jecxz
test
adc
mov
test
pop
in
or
mov
adc
shr
out
mov
lret
outsl
inc
sbb
fistps
aas
clc
lods
jns
clc
and
and
inc
sub
sub
sub
cmp
sub
cmp
clc
andl
movsb
mov
mov
sbb
mov
or
dec
jge
js
cwtl
shll
xchg
mov
movsb
or
hlt
push
cmc
xchg
add
inc
or
out
jmp
push
ja
imul
sbb
cli
or
cmpsw
mov
mov
inc
dec
stos
or
rcl
aad
cmp
insb
stos
cmp
dec
mull
pop
pop
sti
pop
aaa
int3
insb
xchg
push
xchg
pop
push
mov
jle
and
fs
leave
daa
jo
rcr
setns
je
cmp
insl
std
ljmp
cld
inc
sub
inc
loopne
sub
inc
dec
jle
mov
aaa
mov
lret
dec
pop
lcall
cli
ds
adc
xor
sbb
jb
cvtps2pi
jp
pop
push
pop
ret
addr16
popa
out
pop
mov
nop
mov
xchg
fdivl
rcll
call
jl
fidivrs
sbb
push
incb
jne
jne
pop
mov
icebp
div
orl
and
adc
jo
pop
cwtd
mov
cmpsl
dec
ljmp
popf
imul
adc
mov
sub
jp
pop
and
fstp
lods
cmp
shrl
dec
xchg
adc
imul
sub
orb
inc
enter
cld
loopne
sub
sub
dec
pushf
inc
push
sbb
xchg
mov
cmp
push
and
pop
sti
pop
mov
and
mov
pop
pop
adc
or
cmp
push
imul
xor
sar
lret
pushf
outsl
add
inc
ret
and
pop
dec
sbb
jl
sbbb
push
test
jbe
in
push
je
mov
push
gs
push
enter
add
dec
je
sar
cltd
mov
jae
and
pop
pusha
fisubrs
sub
or
faddl
out
push
and
xchg
or
dec
jmp
adc
push
mov
fisttpl
jbe
add
xchg
nop
or
push
mov
xchg
cmp
stc
jmp
stos
push
mov
mov
xor
cltd
push
in
sbb
xor
xchg
leave
cmp
nop
xchg
jae
in
lds
out
xchg
fstpl
movsb
sub
push
xlat
cmp
rcl
jle
xor
icebp
aam
sbb
fiadds
mov
sti
inc
jg
push
or
jb
xchg
mov
push
dec
fucomip
sub
xchg
push
push
jno
sbb
test
push
adc
jno
xchg
inc
jne
aas
or
add
aam
insb
adc
call
outsb
loopne
aad
sbb
xor
sbb
dec
je
fadd
sub
repz
shll
test
cmpsb
rorb
clc
call
xchg
repz
cmp
fsubrl
insb
dec
push
push
lcall
adc
push
es
and
ja
pop
mov
inc
lcall
test
mov
iret
pop
in
call
push
not
invd
cmpsl
push
inc
ror
and
xor
int3
fiadds
in
ja
xchg
sahf
sbb
jns
mov
out
mov
sub
and
sarb
mov
in
test
sbb
out
js
dec
mov
movsb
out
test
ljmp
daa
loope
shlb
mov
pushf
sbb
adc
cltd
sbb
adc
push
out
inc
jbe
pop
stos
test
and
inc
lahf
mov
push
out
mov
int
test
push
popa
lret
test
je
xchg
cmp
push
in
mov
push
mov
cmpsb
ret
mov
lods
add
and
dec
mov
shrb
psubsw
inc
dec
xchg
cmp
pop
dec
mov
xchg
push
xchg
lret
push
out
popf
dec
daa
mov
xchg
shl
sarb
test
cwtl
and
xchg
inc
xor
mov
test
pop
push
jnp
ds
arpl
jmp
fadds
lret
mov
pusha
aaa
dec
jl
jp
lret
xchg
in
dec
cmp
in
sub
daa
push
dec
inc
cmp
and
lea
stc
loopne
clc
inc
out
hlt
sub
cld
fadd
arpl
push
cli
cmpsb
xor
in
sbbl
dec
in
add
push
cs
test
outsb
jae
hlt
mov
fwait
cmp
out
sub
inc
or
icebp
movsb
ret
xor
pop
pop
and
mov
push
pop
pop
xchg
xchg
repz
stc
mov
arpl
inc
jnp
push
pop
iret
test
outsb
push
dec
sbb
shlb
lods
sbb
shrl
icebp
aaa
push
subl
mov
mov
test
in
or
sti
xchg
mov
lods
outsl
aam
xorl
movsb
adc
jl
xor
adc
iret
stc
sbb
fiadds
pop
loopne
sub
sub
aam
ja
jne
mov
aaa
or
jo
add
scas
adc
jl
rcrb
gs
sub
mov
sbb
cltd
or
push
mov
aas
aad
popf
leave
dec
arpl
mov
push
sbb
imul
sub
icebp
sub
xor
ret
lods
sub
sbb
dec
sub
jp
rcl
dec
push
dec
jns
xchg
push
inc
ljmp
lods
sub
clc
sub
mov
mov
lret
xchg
xor
jbe
mov
fdivs
insl
pop
jecxz
shlb
adcb
pop
inc
sbb
pop
call
mov
push
test
aam
inc
jae
dec
push
pop
mov
pushf
mov
lahf
jmp
adc
dec
rcll
adc
in
dec
bound
inc
pop
int
mov
fbstp
imul
nop/reserved
mov
call
lds
pop
popa
sub
fistl
push
or
fldl
inc
rcl
xchg
xor
lahf
orl
adc
orb
adc
inc
inc
cmp
cmpl
loopne
out
jmp
fdivp
mov
mov
cmpsl
or
adc
inc
sbb
push
es
lock
xchg
out
lock
push
xor
push
inc
jo
dec
outsb
pop
fisttpl
lea
bound
mov
inc
inc
int3
sbb
pop
mov
nop
pop
mov
mov
sbb
pop
mov
pop
cmp
push
xor
cli
ror
fwait
or
xchg
into
sbb
lcall
arpl
jg
sarb
loopne
xor
push
lret
leave
inc
aad
and
jo
dec
dec
hlt
and
dec
or
and
and
sti
inc
xor
dec
fnstcw
dec
stc
mov
and
xchg
ss
xlat
in
std
outsl
mov
pop
mov
insl
data16
xchg
sbb
loope
mov
push
in
xchg
xchg
leave
pop
movsl
inc
lock
mov
call
mov
cwtl
ds
adc
cmpsl
std
mov
cmp
aad
xchg
sub
push
add
shll
dec
es
jo
jge
sbb
roll
insl
inc
adc
and
addb
pop
mov
cli
pop
pop
xor
cs
in
ss
outsb
fdivrs
div
sbb
cwtl
jle
sub
icebp
and
inc
xor
mov
push
mov
add
sbb
dec
aam
and
rdpmc
or
bound
dec
scas
es
mov
jbe
sub
jnp
sub
mov
das
fsubr
sbb
and
es
pushf
dec
mov
and
adc
sub
xchg
and
ret
pushl
inc
inc
xor
iret
dec
les
sbb
mov
aaa
xchg
imul
inc
cmc
popf
mov
sbb
xchg
or
jae
xor
out
sub
mov
addb
adc
xor
add
and
push
jbe
xchg
xchg
push
gs
das
inc
push
scas
push
inc
push
dec
shl
sub
mov
jg
cmpsl
cmpsb
xor
xor
repnz
xchg
sbb
repz
xor
cmpsb
mov
push
fsubr
push
add
call
add
hlt
popa
cmp
add
cmpsb
xor
mov
jl
insl
adc
cli
add
leave
lret
xchg
inc
addb
xchg
filds
or
sub
cli
insb
lea
xor
mov
cli
inc
push
punpcklwd
divl
adc
es
xchg
push
dec
xor
pop
subb
testb
or
inc
push
dec
lahf
shlb
iret
push
in
adc
push
push
and
and
test
push
outsl
orb
test
repnz
mov
mov
pop
xorl
int3
dec
iret
idivb
dec
arpl
leave
out
mov
cmp
loope
jmp
icebp
paddb
push
add
dec
incl
mov
sbb
push
scas
dec
sbb
sahf
addr16
cltd
das
adc
add
fildl
ja
add
outsb
push
add
sub
pop
daa
out
mov
aam
cmp
push
mov
popf
dec
pop
cltd
cmc
inc
xchg
test
in
pop
fcmovnb
push
sbb
sub
push
dec
inc
inc
icebp
mov
jb
xor
add
add
fwait
cld
sub
neg
arpl
test
xchg
and
incb
repz
add
add
shlb
inc
jg
xchg
push
pop
cmpl
sti
sub
lds
mov
in
pop
pop
cmp
sub
cmc
mov
inc
sub
movsl
cltd
std
mov
mov
std
test
decb
pushf
gs
jb
adc
inc
sti
jmp
fistps
add
mov
shrl
mov
packssdw
bnd
cmp
mov
lea
ret
sub
clc
lahf
stc
mov
push
adc
xchg
push
icebp
pop
inc
sbb
ja
mov
or
test
cmp
add
arpl
out
xor
and
mov
daa
cs
shll
mov
cmp
mov
add
adcb
pop
sub
mov
sahf
aam
add
mov
not
test
xchg
popa
mov
sub
adc
fldcw
pop
gs
pop
out
stc
pop
mov
aas
cmp
push
cmovbe
jae
add
popf
ror
repz
xor
jmp
dec
gs
into
inc
cli
leave
add
sub
adc
jle
push
lret
inc
in
addb
ljmp
push
pop
adc
movsl
or
pop
xchg
cld
jbe
cltd
add
pop
xchg
in
clc
xchg
popf
out
jle
push
sub
cmp
lds
mov
jmp
xor
aad
xor
and
pop
mov
out
or
hlt
cmp
add
in
or
das
lret
cwtl
sbb
sbb
jb
sarl
sub
lahf
decl
mov
sub
cmpsl
imul
cmp
xor
js
inc
lock
push
and
add
cmp
cli
cmpsb
cmc
cld
fdiv
jge
push
push
out
mov
or
adc
les
andb
enter
cld
mov
lods
mov
insl
adc
adc
and
enter
mov
jp
popf
sbb
mov
loope,pt
adc
mov
add
fstp
cmpsb
jge
lcall
xor
movsb
ret
dec
in
jbe
xor
lcall
das
sub
inc
or
or
push
cmc
aas
out
lcall
faddp
or
lods
addr16
add
movl
movsl
pop
imul
addr16
lahf
outsl
and
push
or
mov
cmp
repz
dec
inc
out
cmovg
lahf
bound
sub
add
adc
jmp
push
ret
xchg
inc
cmp
shll
mov
movsb
jle
imull
adc
in
mov
xchg
xchg
call
mov
pop
jne
ret
mov
mov
or
fistl
fs
mov
or
inc
sub
insl
dec
adc
and
aam
shrb
aam
mov
and
mov
arpl
ret
gs
xchg
cwtl
iret
sub
hlt
xchg
mov
stos
and
cmp
cwtl
mov
gs
xchg
imul
cltd
or
popf
enter
mov
movsl
sub
push
xchg
push
inc
mov
adc
aaa
cmp
in
cmc
jg
clc
xor
in
cld
and
cltd
aas
out
or
shl
and
or
push
movsl
fidivrs
and
popa
inc
or
inc
jne
mov
push
push
add
mov
xchg
adc
test
popf
sub
dec
and
sahf
addb
ret
sti
rclb
jecxz
sarb
add
inc
repnz
dec
ret
sub
pop
xchg
test
das
mov
das
xchg
flds
test
out
in
inc
mov
lret
adc
mov
loope
lods
pop
mov
out
or
cld
adc
popa
fdiv
or
xchg
jnp
cmc
out
icebp
xchg
mov
fwait
xor
packsswb
pusha
xor
mov
mov
scas
ret
or
shlb
in
and
std
jg
cmp
push
cmp
dec
sub
push
pop
push
jge
dec
popa
jno
cmpsl
xor
dec
jge,pt
add
mov
ret
mov
fidivrl
sub
loopne
fistl
push
je
add
push
arpl
jle
into
dec
adc
lcall
lret
xor
out
xor
mov
push
shrb
mov
push
adc
in
popf
cmp
pop
jp
loopne
lods
sbb
aam
dec
sub
inc
push
jo
fisttpl
add
pushf
mov
loop
jl
mov
ret
notb
pop
fwait
add
sub
add
jmp
repnz
mov
add
cmp
and
xor
scas
xor
pop
nop
add
daa
hlt
lds
cmp
outsb
add
hlt
push
popf
sub
enter
and
xchg
jl
dec
ret
shrl
inc
mov
xchg
bound
sub
pop
mov
add
bound
sbb
cmpsl
fisubrl
movsb
test
xor
lcall
xchg
std
das
pop
ret
and
cmp
or
subb
testb
jp
test
or
rclb
adc
fsubr
cwtl
push
mov
fbld
and
fcmovnbe
jno
add
jg
xchg
mov
push
and
pop
out
test
cli
mov
mov
jne
mov
inc
je
ja
loope
mov
adc
ja
xlat
fs
pop
sti
jle
pop
pop
loop
push
insl
and
mov
ljmp
and
xor
sti
mov
mov
repnz
mov
cmpsb
aaa
repnz
xchg
out
and
test
out
jbe
mov
mov
sahf
imul
sub
int
int3
sti
pop
lods
fsubs
push
dec
mov
ljmp
hlt
fsubrl
cmpsb
xchg
jne
inc
sbb
sbb
inc
mov
xchg
inc
pop
pusha
xlat
mov
scas
and
cwtl
pop
xchg
test
loopne
out
movsl
fcoml
mov
je
adc
mov
mov
fwait
scas
pushf
ljmp
mov
mov
test
pop
add
or
inc
loopne
repnz
repz
pop
mov
push
push
int3
mov
shl
inc
dec
push
sbb
in
outsb
inc
jp
sub
popa
xchg
rorb
fsubp
inc
int
adc
leave
test
mov
insb
ret
insl
inc
lret
xor
fucomi
sub
mov
push
xor
or
jmp
sbb
aad
in
lret
or
dec
jno
cmpsl
pop
cmpsb
sahf
jns
leave
stos
adc
xor
shrl
mov
pusha
dec
fadd
or
inc
jp
iret
pop
inc
sub
aas
push
outsl
or
sbb
mov
setp
outsb
ret
jne
lret
rorb
push
jno
fs
and
cmp
stos
int
mov
mov
stos
pop
pop
add
push
aam
pop
into
ja
loopne
push
xor
popl
cltd
xor
pop
cmpsb
ja
pop
into
push
push
ljmp
loop
xchg
push
enter
insl
push
jp
dec
push
in
jmp
les
mov
jne
cld
lods
mov
and
les
jmp
cmp
adc
mov
dec
test
sbb
out
mov
pushf
mov
ret
daa
push
mov
ficomps
dec
pop
xchg
pop
inc
cmp
push
push
aam
shl
mov
popf
dec
fisubrl
adc
js
js
push
rcl
shlb
out
call
pop
or
int3
add
xchg
pop
jge
jo
add
repz
mov
in
test
aaa
adc
cmp
outsb
sbb
clc
gs
or
mov
xorb
xor
repz
xchg
adc
dec
mul
les
orl
jnp
jb
push
push
cmp
and
sbb
out
pop
sbb
jb
pop
mov
cmp
sarb
xchg
movsl
js
adc
sti
sti
sbb
test
cmp
outsl
mov
pop
pop
cs
in
inc
mov
push
or
jae
jp
movsl
or
sub
pop
inc
and
xchg
decl
in
mov
pop
popa
mov
andb
fimuls
in
or
and
and
pop
movsbl
xchg
mov
sub
push
fwait
xchg
push
mov
mov
cmpsl
scas
sub
scas
mov
inc
cmpsb
cli
test
push
movsb
mov
adc
adc
fwait
iret
notb
fs
mov
movsl
pop
push
popa
aaa
ficoml
clc
pop
mov
mov
lds
lock
outsb
xchg
add
sub
push
push
mov
pop
inc
and
movsb
and
movsl
or
outsb
cli
test
mov
sub
push
add
sub
arpl
dec
aaa
scas
push
or
bound
or
jne
mov
sub
aam
xchg
in
loope
xchg
lods
std
mov
icebp
pop
pop
inc
ljmp
addr16
repz
cltd
sbb
pushl
cwtl
or
lcall
jb
xchg
mov
aad
gs
sbb
fmull
xchg
popf
jmp
mov
add
outsb
push
inc
js
es
cltd
sti
dec
insl
sub
and
xor
adc
les
rcrl
sbb
mov
shrl
rcll
sub
div
mov
add
mov
xchg
hlt
test
js
arpl
in
mov
xor
adc
xor
mov
sar
cmp
movsl
enter
outsb
mov
xor
add
cmpb
dec
mov
loope
push
sub
icebp
insl
mov
out
sub
mov
mov
lahf
or
fisubl
sub
cmp
cltd
iret
pushw
std
pushf
lret
xor
imul
jb
pushf
mov
or
pop
and
fsts
jne
or
push
mulb
ret
inc
jp
sub
mov
dec
and
and
movsl
add
dec
cmp
testb
inc
ret
jmp
cmpsb
scas
push
add
jg
adc
xor
push
out
test
mov
push
dec
cmp
cli
cwtl
pop
hlt
test
cmpb
xor
mov
andl
mov
push
jmp
push
cmp
iret
popf
push
jmp
pop
popa
mov
fldl
sub
das
ss
and
movl
mov
dec
imul
fs
imul
cmp
dec
cmp
movsb
or
movsb
or
push
xor
out
or
cmp
xchg
repz
sub
mov
mov
inc
dec
pushf
sahf
ds
dec
pop
jnp
dec
loopne
loope
mov
add
leave
or
sbb
leave
dec
dec
jmp
packuswb
jo
dec
stc
pusha
mov
outsb
mov
hlt
inc
pop
scas
or
mov
or
dec
push
call
fbstp
pop
fwait
mov
jge
adc
cli
ret
int
test
xchg
imul
push
cs
dec
dec
cmp
aam
mov
cltd
inc
dec
inc
jge
stos
push
jae
enter
jnp
xlat
cmpsb
jnp
and
fstpt
push
pop
pop
adc
sub
jp
arpl
sahf
hlt
mov
xor
out
sbb
xchg
stc
sub
push
into
idivb
push
out
in
adc
or
mov
xchg
std
push
mov
aam
lret
imul
insl
cmp
cwtl
cwtl
addr16
icebp
and
cmpsb
add
repnz
mov
loop
mov
test
mov
xchg
ja
and
movsb
test
sar
sub
ds
dec
data16
mov
xchg
mov
stos
popa
dec
xchg
sub
push
mov
sbb
cld
pop
cmp
and
into
push
inc
push
cmp
xor
mov
adc
and
icebp
fildll
inc
rcrb
addr16
dec
aam
sbb
negw
mov
add
lahf
jne
ret
in
add
adc
and
cli
or
ja
xor
xchg
sbb
dec
mov
or
ds
lods
add
fsubrs
mov
imul
sbb
pop
cmpsb
lds
sbb
js
dec
leave
fisttpl
lock
jne
xor
jo
mov
add
adc
fs
mov
aad
addb
mov
xor
int
sarb
push
pop
cmc
rclb
pop
jo
mov
xchg
and
xchg
dec
test
rclb
movsl
xchg
ret
fsubs
repz
xorb
xor
jg,pn
xor
or
jne
int3
xchg
into
mov
sub
add
popf
hlt
imul
inc
lret
xor
mov
push
or
repnz
xchg
fucomi
sti
push
cld
nop
aas
inc
addl
xchg
outsb
and
pop
push
xchg
pop
arpl
inc
cmc
dec
push
mov
fmuls
adc
xor
dec
or
dec
popf
ss
ja
pop
pop
cmpsb
push
push
jecxz
loop
lahf
mov
inc
fcomi
xor
add
decb
add
mov
dec
test
jns
fcmovne
mov
sub
jl
les
pop
nop
ds
mov
mov
or
inc
sub
fsubs
lahf
pop
sahf
loopne
or
push
xor
add
adc
lods
push
stos
cmpsl
les
mov
loopne
jecxz
out
ffree
inc
pusha
mov
daa
xchg
leave
xchg
or
orb
push
jne
or
clc
dec
add
sub
mull
imul
aam
jl
sub
pop
sahf
adc
les
incl
cwtl
jecxz
dec
xor
or
sti
jp
mov
xor
cmp
cli
or
jb
xchg
xchg
icebp
xchg
ljmp
call
jg
push
xchg
jae
enter
push
out
mov
mov
int3
cmp
cmpsl
mov
stos
mov
add
repz
data16
cwtl
pop
dec
std
stc
andb
mov
mov
push
jmp
jbe
loopne
in
mov
xor
cmpsl
xor
lea
mov
fnstenv
int
sub
cmpsb
mov
inc
je
ljmp
xchg
das
aam
pop
adc
subb
dec
adc
fidivl
mov
inc
mov
jp
lahf
push
dec
jle
pop
inc
aas
dec
mov
mov
jl
mov
and
pop
push
ret
les
lock
ja
out
jle
bound
rol
or
test
xchg
cmp
inc
or
nop
addr16
sub
pop
loop
test
jge
repnz
inc
and
cmp
aam
jo
call
dec
arpl
sbb
adc
sub
push
xchg
sub
mov
inc
sub
push
insb
sbb
xchg
lods
sahf
or
ljmp
std
adc
mov
mov
inc
incb
je
add
mov
cmp
or
sti
daa
push
jbe
pop
inc
out
mov
lahf
jmp
pusha
popa
add
lods
pop
sub
jno
xchg
dec
in
arpl
rol
xchg
sbb
sbb
push
cmp
cmp
divl
add
into
push
adc
neg
clc
popf
mulb
or
fstl
dec
mov
mov
inc
push
lea
or
popf
xor
mov
inc
popa
ljmp
mov
pushf
icebp
je
imul
mov
insb
out
jo
rcrl
int3
sbb
imul
out
cmp
add
cmp
pushf
sub
sbbl
lods
jl
outsl
inc
mov
pop
jbe
cs
jb
xchg
add
aam
jge
adcb
jl
sub
or
cmp
push
jecxz
mov
jl
push
cmp
mov
test
xchg
cmc
das
fucomp
bound
loope
mov
inc
jmp
mov
cld
rclb
rorb
imulb
dec
mov
test
mov
cmp
jae
sbb
xchg
adc
dec
mov
push
jg
pop
mov
mov
dec
outsl
iret
and
stos
mov
xchg
mov
shrb
cmp
lods
je
xchg
fcmovu
pushf
sbbb
push
fwait
or
aas
add
dec
imul
outsb
adc
aas
push
xor
inc
pusha
testl
bound
mov
and
movsl
and
xor
decl
call
xor
cli
inc
nop
data16
insl
stc
xchg
clc
dec
es
dec
shlb
xor
jmp
cmp
cwtl
jmp
popa
pushf
jg
mov
add
jb
insb
dec
shll
lahf
xor
inc
pop
addr16
data16
xor
pop
fists
lods
add
js
rorb
push
xchg
fsubrs
aam
enter
in
in
fisubrl
sub
push
dec
pop
ds
or
inc
mov
adc
movsb
aam
push
scas
adc
sub
in
cltd
sub
adc
mov
ljmp
jmp
add
sbb
in
adc
fidivl
sahf
cmp
jmp
lcall
push
sub
fdivs
mov
scas
cltd
mov
stos
sbb
imul
imul
lcall
insb
sbb
sbb
dec
scas
dec
out
popf
jmp
pop
inc
adc
inc
adc
cmp
leave
inc
push
add
lahf
adc
cmp
mov
and
fcmove
sub
cmp
push
xchg
mov
and
jne
mov
and
insb
and
bound
in
mov
dec
push
in
and
cmpsb
decl
pop
mov
ss
dec
pop
dec
outsl
xor
imul
inc
xor
enter
xchg
popf
xchg
es
sub
cs
mov
insl
xchg
sbb
cmpsb
imul
mov
push
popf
mov
add
scas
enter
push
mov
mov
add
and
jge
push
into
gs
in
sub
push
mov
pop
xchg
jecxz
xchg
clc
lods
imul
xorb
fsts
addb
or
sub
pushfw
xchg
ret
xchg
dec
sbb
arpl
xor
sub
push
outsb
sti
rorb
addl
lahf
gs
in
add
push
cmp
sbb
roll
mov
mov
leave
dec
shlb
dec
dec
xor
inc
cmp
aad
out
mov
idivl
mov
aad
sbb
xchg
push
xchg
inc
stos
int
pop
push
and
push
and
adc
fcmovu
dec
fldl2t
dec
std
push
xchg
cwtl
adc
mov
xchg
adc
dec
xor
mov
push
add
fsubrl
loope
loope
out
lock
xchg
ret
cmp
inc
mov
jmp
nop
test
dec
or
mov
sub
out
xor
fsts
test
adc
push
pop
or
cmp
bound
out
push
and
ficomps
sub
mov
mov
dec
rclb
icebp
or
or
outsl
call
cltd
test
cmp
jmp
jmp
cltd
daa
mov
mov
mov
cs
mov
jmp
into
fs
loop
or
add
aaa
mov
adc
jecxz
pop
jno
pop
pop
sbb
stc
pop
je
aad
leave
pop
aad
or
imul
jbe
sti
inc
inc
stos
fucomp
decl
jno
aaa
imull
sbb
stc
sbb
cwtl
mov
add
or
jns
mov
xchg
jns
mov
cmpb
and
and
pop
stos
add
and
aad
cld
adc
loop
inc
cmp
movsl
dec
pop
jp
clc
ret
inc
sti
fdivrs
iret
ds
scas
jo
jne
mov
stc
jmp
push
xchg
jne
fadd
das
jmp
lock
mov
out
jle
dec
and
add
shlb
xor
sbb
push
xchg
ss
gs
jb
shrl
das
xor
test
cmpl
lcall
scas
jnp
xor
out
mov
test
push
in
out
test
jb
out
flds
sbb
mov
xchg
sbb
in
fcomps
nop
xor
pop
add
popa
out
lods
ret
xchg
std
xchg
mov
mov
popa
mov
into
mov
cmp
stos
fwait
out
mov
fdivs
jecxz
dec
sub
stos
sub
ja
sbb
popa
inc
mov
nop
scas
dec
jno
es
imul
fwait
lcall
es
imul
js
ror
mov
jmp
push
adc
or
inc
cmp
mov
adc
ljmp
adc
and
into
shl
in
lock
and
stos
imulb
mov
xchg
into
sub
mov
mov
cmp
lahf
jo
sub
in
jo
scas
test
push
push
dec
pushl
and
xor
loop
xlat
in
pop
int
clc
cli
js
and
adc
lcall
lods
jne
sub
sub
fsubr
into
stos
push
push
icebp
and
stos
lret
mov
outsl
fnsave
pop
inc
repnz
pop
mov
sbb
add
bound
mull
sbb
pop
xchg
inc
cmpsl
sub
les
fiaddl
ret
out
add
ljmp
push
pop
mov
add
mov
andb
addr16
jnp
sub
mov
icebp
call
scas
test
repnz
jbe
and
and
and
push
imul
leave
mov
fimull
icebp
adc
and
lock
jp
jl
repz
test
js
test
sahf
add
inc
scas
dec
pop
cmp
pop
push
xor
rcrb
and
bound
cmp
pop
cli
ret
cltd
dec
adc
leave
mov
xor
push
testb
sub
xchg
scas
out
out
mov
jno
xor
push
push
loope
andb
jp
lret
mov
adc
xor
adc
int3
dec
int3
xlat
push
es
je
lea
cmp
mov
int
repnz
aaa
xchg
and
inc
mov
mov
adc
lret
call
jbe
dec
cmp
lahf
shrl
in
das
nop
cmp
xchg
ds
outsl
mov
jl
and
out
insl
sti
add
xor
xchg
mov
les
and
lcall
cs
pop
orb
loopne
repnz
in
repnz
outsl
sub
sub
xchg
cmp
and
fcomps
cld
add
clc
cli
ror
addr16
cwtl
testl
mov
ja
inc
cmc
jecxz
adc
xchg
jge
loope
cwtl
sbb
and
cmc
or
dec
pop
and
mov
xor
fucomp
out
add
lods
rcr
or
gs
aas
insl
testb
adc
push
add
mov
lcall
jbe
pop
xchg
or
dec
add
outsl
or
mov
sahf
push
inc
cs
addr16
mov
xchg
jbe
stos
xchg
push
jno
fdivrl
mov
push
test
push
and
mov
pop
fwait
mov
xor
in
pop
pop
mov
pusha
add
sbb
loop
cmp
movsb
jmp
popf
adc
jle
inc
or
lods
push
add
sub
sbb
ljmp
mov
incl
mulb
pop
in
icebp
lea
testl
push
negb
cmp
inc
and
sub
lods
test
mov
scas
xor
pop
xchg
jge
ret
in
mov
dec
adc
fsubl
xchg
cli
add
mov
leave
mov
mov
je
mov
inc
cmpb
pop
shrl
sub
popa
daa
mov
mov
insb
scas
jmp
and
jp
lods
jl
jmp
push
xor
aaa
sbb
dec
stc
push
push
mov
lds
mov
push
mov
adc
mov
xchg
dec
loopne
sbb
mov
mov
lahf
rclb
pop
dec
and
jae
lds
out
xchg
mov
out
fstpt
icebp
testl
outsl
cmp
adc
sbb
sbb
inc
je
insb
jae
fistl
sub
aad
daa
cs
jns
or
pop
jmp
sbb
pop
nop
mull
shl
rclb
cmp
mov
aad
fidivl
daa
dec
ljmp
inc
leave
je
cli
clc
mov
jnp
nop
sahf
nop
dec
in
jns
jno
mov
lret
sub
dec
fistl
adc
or
ja
cwtl
and
les
test
push
adc
cmpsl
in
adc
dec
fsubrl
cmp
sti
je
js
pop
or
lcall
push
jb
mov
pop
loop
dec
jbe
sbb
xor
and
test
dec
cltd
mov
or
push
jmp
sub
sbb
stc
scas
xorl
pop
outsb
les
inc
or
pop
iret
rorb
jmp
jp
pop
stc
fidivl
pop
inc
popa
in
sub
mov
das
sub
or
scas
gs
inc
jp
pusha
push
xchg
movsb
pop
add
rorl
and
dec
sarl
mov
jne
into
in
sbb
inc
loopne
rcr
mov
lods
mov
add
xlat
dec
lret
fnstenv
xlat
jnp
pop
subl
pop
push
jne
mov
cwtl
mov
xor
lret
push
cwtl
xchg
gs
cmp
inc
mov
je
push
jmp
and
insb
push
or
xor
sarb
mov
ret
pop
addb
xchg
lds
add
mov
lock
dec
shrl
lcall
sub
cmp
inc
xchg
jle
out
push
rorl
es
add
jo
fstl
jecxz
add
jl
test
popf
adc
pop
test
imul
push
xchg
scas
push
push
stos
and
imul
sbbl
loop
out
jg
bound
aas
dec
pop
mov
mov
cli
mov
lds
out
push
insl
out
int3
and
hlt
std
sub
mov
add
jns
aad
loopne
icebp
aad
mov
add
push
fdivrl
jbe
clc
in
mov
mov
inc
and
getsec
sub
mov
pop
mov
xchg
outsl
add
imul
scas
scas
mov
adc
rorl
loopne
movsl
sar
lcall
jl
cs
adc
fisubs
fstps
jecxz
push
push
pop
int3
outsb
scas
lea
mov
mov
int3
dec
dec
lea
lods
mov
xor
addr16
xchg
in
cmp
mov
lods
mov
xor
push
pop
loope
xchg
enter
sbb
out
add
mov
mov
lret
bound
pop
xchg
pop
xchg
sbb
dec
dec
testl
out
mov
cmc
sub
cs
shll
fs
fistl
adc
pop
imul
daa
jnp
bound
rcll
jns
in
cmpxchg8b
pop
cmp
pop
ret
xor
cmp
aas
addr16
out
cmpsl
daa
sub
xchg
pop
stc
mov
adc
popf
decb
jp
adc
xor
mov
dec
dec
imul
adc
inc
ds
pop
jno
mov
lret
lahf
and
gs
lods
psrlq
stos
jb
test
ret
pop
fldcw
cwtl
push
xchg
fdivrl
cli
mov
fxch
mov
jae
icebp
std
add
push
push
mov
inc
scas
add
pop
push
inc
add
hlt
and
push
outsl
dec
stos
and
ds
lds
push
mov
xchg
pop
dec
inc
lret
inc
mov
mov
jo
popf
jecxz
inc
test
push
and
cld
cmp
mov
imul
pop
cld
or
mov
icebp
add
mov
outsl
cmpsb
jmp
jle
rolb
shlb
inc
shrl
shrb
into
xor
jp
jb
sub
lds
dec
mov
ret
xchg
cli
cmpsb
adc
les
scas
insb
mov
icebp
mov
jp,pt
jle
sbb
ret
sbb
push
into
loopne
push
sub
addl
mov
mov
lds
or
xrelease
imul
repnz
mov
in
scas
and
mov
leave
adc
shrb
int3
jp
sti
lea
in
filds
imul
dec
sub
mov
nop
ret
scas
inc
sub
xorl
mov
shl
addr16
jle
popa
jns
clc
cmp
test
lret
inc
adc
gs
imul
rcll
mov
mov
xchg
inc
into
mov
sbbb
jle
icebp
xor
cmpsb
mov
add
mov
mov
shrb
dec
pop
inc
mov
ja
bound
aaa
or
push
add
setno
xchg
push
cmpsb
mov
lahf
cwtl
aad
out
fucomp
ja
out
inc
insl
push
adc
or
and
cld
sub
inc
cmp
mov
stos
arpl
pop
pop
stc
addr16
mov
adc
jmp
xor
cs
sub
dec
adc
adcb
data16
push
sbb
mov
outsl
cmovae
pop
jo
pusha
int3
js
inc
ljmp
xor
sbb
aaa
xchg
lods
xchg
inc
out
cmp
call
aas
bnd
outsl
xchg
lock
mov
lret
pop
loop
or
insl
and
lods
hlt
les
push
xchg
or
outsl
mov
je
loop
mov
out
adc
sahf
imul
les
cld
or
cmp
pop
adc
add
rol
jp,pt
jecxz
out
xorl
inc
mov
roll
subb
pop
pop
jo
shrd
adc
movsb
cmp
pop
mov
aad
add
ds
sub
stc
jne
movsl
add
xchg
rclb
les
test
les
test
es
sub
jno
push
xchg
shl
xchg
push
das
jl
xchg
lret
mov
stos
fsubl
dec
jge
sbb
pop
stos
rol
popf
inc
push
dec
inc
pop
cwtl
stos
ja
dec
jns
aad
cs
loop
mov
repz
push
daa
out
sub
call
mov
out
bnd
mov
mov
sub
mov
mov
xorb
in
inc
xchg
add
jge
insb
je
ss
ror
lcall
enter
mov
iret
fildl
mov
inc
mov
or
sbb
jg
inc
ss
xchg
cwtl
cwtl
add
insl
popa
movsb
ret
dec
dec
jmp
pop
and
and
inc
xor
sub
lds
sbb
les
mov
js
sahf
mov
rorl
add
pop
push
scas
sbb
cmc
pop
fldt
loopne
das
pushf
dec
mov
lahf
mov
dec
adc
xchg
cmpb
pop
push
lods
inc
cli
add
je
push
push
std
jl
push
sbb
xchg
xchg
test
cs
int3
repz
in
outsl
jmp
mov
add
and
out
scas
mov
test
lret
and
sbb
ret
fadd
xchg
popf
mov
mov
mov
bnd
adc
jnp
fdivrl
sbb
loopne
sarl
out
xchg
rcrl
sub
add
ret
clc
fcmovu
test
movsl
test
ss
lret
mov
scas
sub
dec
push
and
pop
stos
rcll
mov
mov
ljmp
cmpb
hlt
or
mov
cmp
cmp
out
sub
insl
clc
repnz
xchg
in
mov
push
mov
jg
insb
sub
pop
ret
push
popf
dec
cwtl
mov
mov
xor
push
pop
and
movsl
es
mov
pop
int
ds
in
loope
leave
cltd
dec
fdivrs
icebp
push
jae
fstpl
scas
mov
lods
loop
and
movsb
sub
mov
dec
pusha
insl
or
daa
popf
out
enter
jns
jecxz
xor
test
push
pushf
push
inc
xor
shlb
in
inc
mov
pop
cmp
jle
fidivs
jp
lret
adc
or
add
pop
mov
test
cmp
cwtl
xchg
cmp
call
mov
sbb
inc
sub
pop
mov
pxor
pushf
pop
sub
es
and
fcmovbe
cmp
mov
mov
add
rcrl
inc
or
pusha
inc
adc
cli
jge
cwtl
jnp
les
sbb
cltd
push
loopne
iret
cmp
in
shrl
sbb
jae
push
loopne
stc
jl
outsb
int3
xchg
push
lea
or
mov
jge
lret
cld
rolb
loop
dec
sub
fwait
pop
scas
add
je
mov
movsb
sbb
sbb
add
testb
and
aam
dec
cmpsl
lods
out
repz
lods
test
out
pop
sub
pusha
jb
mov
jmp
out
bound
les
dec
jg
test
pop
cmpsl
bound
cli
std
nop
sbb
je
adc
jmp
inc
out
add
sbb
jb
repnz
lcall
cmp
pop
jbe
les
and
rorl
mov
repz
pop
pop
gs
popa
xchg
repz
and
pop
test
mov
dec
jp
nop
shrb
and
jecxz
bound
aas
add
pop
lds
mov
in
mov
lcall
or
pop
add
movsb
dec
or
jo
bound
sub
rcll
mov
movsb
pop
jno
call
imul
adcl
push
mov
mov
addr16
std
mov
push
push
stos
xor
ret
ja
movsb
xchg
xchg
xchg
pop
arpl
jg
sbb
enter
jp
cmp
ret
js
inc
mov
jno
shr
sbb
jnp
or
pusha
lret
sub
ss
mov
push
es
mov
rorb
sub
mov
lahf
lahf
xlat
fdivl
mov
repz
xor
adc
andb
data16
ljmp
mov
inc
movsb
gs
push
arpl
nop
sbb
hlt
xchg
insb
dec
jo
mov
loop
sbb
cmp
sbb
push
mov
cwtl
notl
mov
and
xchg
pop
repnz
iret
cmp
cmp
repz
pop
outsb
sub
adc
xchg
test
mov
into
push
je
pop
mov
sbb
sbb
insl
mov
push
mov
add
scas
subl
mov
add
bound
pusha
addr16
push
adc
stos
dec
popf
mov
in
fmul
cmpsb
xchg
adc
mov
fsubs
mov
push
jmp
fcoms
dec
sahf
addr16
dec
and
imul
outsl
mov
push
push
sbb
rorl
pop
mov
lret
scas
pop
sbb
and
outsb
lcall
jno
mov
fdivrl
cmpsl
repz
ja
shr
enter
fsubrl
icebp
fwait
dec
and
dec
push
in
adc
add
js
addr16
test
gs
xor
movq
mov
mov
cmp
sbb
fldenv
adc
xchg
fs
je
ds
cmp
cmpsl
outsl
loopne
jecxz
add
je
popa
mov
push
shlb
outsb
nop
inc
cld
push
fisttps
lcall
cmc
push
add
stos
mov
test
popf
pop
icebp
dec
dec
push
mov
stos
jne
out
add
and
sbb
into
cmc
inc
aam
mov
subb
and
jnp
test
cltd
loopne
xor
sahf
mov
and
adc
mov
sub
or
pop
out
sub
aaa
aaa
push
imul
inc
scas
add
push
arpl
jge
daa
das
mov
call
jle,pn
in
mov
ret
sbbb
loop
jbe
jno
ret
int
fcoml
xlat
pop
push
pop
sub
push
int
inc
and
mov
jo
lods
push
outsl
clc
inc
test
xchg
test
pushf
dec
pop
and
mov
aas
push
imul
mov
mov
icebp
sub
std
ds
aas
cmp
cmpsb
in
or
in
cmpsl
dec
xchg
lods
mov
enter
out
movsb
inc
jne
ss
push
icebp
repnz
or
adc
leave
pusha
inc
or
push
mov
lret
adc
cmp
push
xor
mov
mov
xor
addr16
sahf
es
adc
sub
icebp
mov
mov
jmp
out
inc
xchg
inc
inc
jmp
mov
cmp
stos
movsl
pop
fiadds
push
jle
repnz
inc
xor
nop
imul
out
int
ljmp
cmpl
ffreep
xchg
sahf
mov
inc
sub
scas
and
jne
push
pop
push
jmp
int
pop
push
inc
jecxz
out
daa
and
pop
sbb
stos
or
sub
in
hlt
stos
inc
dec
vpsrld
push
addr16
jl
pop
fwait
dec
jp
rcrl
test
mov
mov
lds
insl
scas
push
mov
mov
stos
mov
in
jno
and
stos
stos
ret
pop
push
mov
cmp
push
xor
std
mov
shll
outsb
loopne
mov
ljmp
hlt
ja
cwtl
je
jecxz
addr16
pop
jbe
push
sbb
outsl
add
daa
and
mov
pop
xlat
pop
xor
push
xchg
mov
dec
decb
nop
rolb
mov
ret
dec
mov
mov
lea
and
dec
mov
out
aas
xchg
jno
add
mov
cmp
ret
inc
cmp
sub
in
stos
bound
int
adc
inc
lds
imul
jl
jno
loop
dec
inc
inc
lods
gs
movsl
hlt
mov
and
divl
sbb
movsl
pop
or
repnz
scas
sub
inc
dec
les
js
xor
adc
adc
mov
mov
mov
adc
fdivr
lea
mov
pusha
cmp
es
cmc
out
ret
mov
mov
jmp
out
jnp
cmp
insb
xchg
cwtl
cld
pop
or
das
cmp
push
dec
lock
stos
sbb
pop
mov
cmp
jbe
pop
test
repz
jle
fwait
adc
jbe
in
ljmp
incb
orb
cmp
mov
and
push
adc
cmp
cmp
mov
jb
out
sub
divl
nop
fldenv
enter
sahf
add
cld
push
xor
cwtl
mov
enter
push
ret
sub
dec
mov
scas
mov
pusha
imul
aaa
push
sbb
cmp
pop
or
and
loopne
inc
jnp
inc
sbb
arpl
push
mov
cwtl
pop
testl
subl
addr16
arpl
mov
sub
and
popf
rol
pop
xchg
inc
aaa
cltd
stc
pusha
shll
loop,pn
inc
bound
xchg
mov
loopne
aad
cmp
lods
sahf
mov
push
repz
or
jne
xchg
sub
inc
sub
mov
push
popf
or
into
rcr
add
and
fidivrl
in
jmp
es
or
jne
sbbl
icebp
leave
mov
xchg
ret
pop
inc
push
sti
push
aaa
shl
and
push
inc
std
adc
mov
jnp
or
mov
sub
out
adc
cmpsb
push
js
js
add
loope
jae
xor
pushf
je
xor
aaa
pop
popf
xor
mov
movb
mov
in
add
or
imul
test
aam
ret
pop
lods
jle
pop
mov
icebp
fwait
add
mov
movsb
rcr
lcall
pop
test
arpl
xchg
scas
jne
push
cs
hlt
inc
cmp
pop
into
sub
mov
adc
jae
fimuls
push
jecxz
mov
push
inc
in
xor
push
std
or
xor
loopne
push
gs
adc
or
mov
in
lock
cmp
daa
or
test
cmp
and
cltd
je
int3
jno
mov
aas
mov
and
dec
ja
push
push
mov
std
inc
xorl
enter
pop
push
cmp
mov
pop
data16
lcall
xchg
inc
in
xor
fmull
push
fs
jmp
jl
addl
lods
mov
fbstp
xorb
cwtl
arpl
dec
dec
pop
xchg
fsubr
mov
dec
fisttpll
jecxz
sbb
test
pop
imul
adc
cs
sbb
lret
dec
jns
mov
cmp
mov
push
mov
movsb
xor
in
movsl
andl
jne
adc
shrb
call
fisubs
sbb
adc
leave
jno
xor
mov
mov
jo
leave
int3
mov
mov
cwtl
cmp
test
xor
imul
mov
jne
mov
in
xchg
jne,pn
add
inc
imul
mov
test
jecxz
push
outsl
lea
hlt
int
ret
mov
mov
bound
imul
lret
cld
mov
xor
xchg
xchg
pop
test
adc
fmul
orl
xor
inc
or
push
add
imul
lods
adc
cmp
shlb
sub
fmuls
xor
or
nop
jg
mov
loop
mov
pop
shlb
xor
xor
mov
rcll
clc
adc
jmp
and
lds
imul
out
test
cltd
lret
ds
bound
test
ret
mov
dec
push
and
mov
in
jg
repnz
pop
push
and
mov
shr
jbe
xchg
cwtl
adc
ud2
les
and
pop
mov
addr16
jb
push
gs
out
inc
clc
and
mov
lds
fimull
in
xorl
mov
mov
insb
mov
cmp
mov
cmp
out
mov
sbbb
cltd
sbb
push
jnp
aas
rclb
popf
bound
sub
bound
or
jae
adc
cld
sbb
mov
cmpsb
xor
or
dec
and
pop
sub
outsb
xchg
jnp
jnp
dec
pusha
loop
pushf
push
mov
mov
testl
jno
popf
ret
jae
lea
push
or
out
jmp
xor
lds
insb
rcl
ret
pop
push
cmpsb
jmp
cmp
xchg
cmc
ret
sub
jg
jge
loop
testb
fwait
mov
test
cmpsb
xchg
mov
aam
icebp
dec
add
push
add
aad
dec
call
dec
cmp
dec
push
mov
jl
gs
clc
ja
enter
dec
dec
cli
jae
outsl
jg
dec
test
jle
xchg
mov
in
or
dec
cmp
dec
mov
hlt
add
pop
jno
mov
sarl
mov
mov
std
mov
movsl
fwait
mov
repz
mov
jp
cmp
xchg
xlat
shl
mov
hlt
push
push
sub
push
repz
push
jae
cs
jge
shlb
rcll
jg
push
mov
dec
mov
dec
repz
pop
sbb
pusha
lds
out
xchg
add
ljmp
insb
dec
fmuls
jno
add
out
lret
mov
mov
add
fwait
sub
adc
lret
hlt
pop
cmpsb
sti
adc
dec
in
dec
repnz
loop
mov
stc
lock
push
mov
ds
mov
and
mov
movsb
lret
sub
sbb
pop
push
mov
lcall
adc
int3
and
scas
xchg
call
in
inc
enter
jns
std
icebp
cmp
cmp
mov
xor
jmp
pushl
call
mov
dec
sub
mov
icebp
xor
rorl
jle
jmp
and
lret
sub
cwtl
shll
adc
stos
loope
jb
imul
cmpsb
jmp
jno
sti
data16
lcall
push
subl
jg
and
cmp
or
mov
mov
pop
or
xchg
hlt
mov
mov
test
loopne
in
dec
sub
sub
pop
pusha
test
sbb
lods
xchg
lock
cwtl
xor
call
adc
icebp
imul
fadd
int
fs
test
or
popa
mov
into
repnz
das
enter
pop
sti
sub
xor
dec
fdivrl
clc
push
push
cmp
sub
cmp
in
outsb
cmp
inc
mov
lahf
sub
mov
insl
jmp
outsb
pop
sti
inc
sbb
sub
sbb
ds
stos
sub
test
test
and
arpl
sbb
jnp
or
cld
out
mov
leave
adc
stos
push
xor
fs
xlat
push
cmpsl
or
or
fninit
push
and
int3
xor
add
pop
mov
jmp
pop
pop
add
fcompl
mov
shlb
jmp
mov
sbb
add
sbb
ret
sub
bound
mov
les
leave
jp
stos
jo
push
dec
loope
out
jnp
cltd
addl
cmpsl
xchg
popf
inc
push
jo
jg
mov
or
jbe
inc
cmp
xor
das
mov
dec
divl
ss
aas
jp
dec
daa
clc
mov
mov
pop
mov
movzbl
icebp
dec
adc
mov
mov
xchg
stc
mov
xchg
lods
xor
cmp
sbb
sti
or
mov
jmp
test
stos
push
inc
xchg
adc
aas
mov
out
push
es
fildll
popf
ljmp
sbb
or
pop
test
sahf
ss
clc
wrmsr
sbb
cli
les
scas
sbb
sbb
push
dec
mov
inc
push
push
inc
scas
jge
jge
aaa
adc
imul
lahf
icebp
pushl
hlt
fmulp
popf
dec
mov
push
and
fs
mov
test
shr
mov
adc
repnz
mov
lods
outsb
adc
out
daa
push
cli
cmpsb
adc
mov
pop
xchg
orb
decb
mov
xor
xor
inc
aaa
lock
sahf
dec
pop
xorl
arpl
outsl
push
pop
mov
es
ss
call
mov
in
add
shll
lds
pop
pop
scas
inc
add
add
or
push
jae
cmc
xchg
cmpsl
push
ja
lcall
push
cmp
loope
aam
mov
insl
gs
lret
and
hlt
xchg
jnp
jl
inc
jge
in
inc
pop
jo
mov
inc
dec
xchg
add
in
inc
mov
jp
adc
repnz
les
push
into
jmp
mov
pop
adc
dec
in
or
xcrypt-ctr
cmpsl
pop
mov
in
xchg
cmp
test
pusha
addr16
sbb
ret
sub
cli
icebp
mov
lahf
out
ret
test
push
mov
push
pop
xor
imul
cmp
aaa
cmp
popl
int3
sub
rolb
in
loopne
pop
fldl
pop
addr16
lcall
aad
fists
xchg
xorb
xlat
rcrb
push
imul
dec
and
mov
ret
popl
popf
movb
call
lea
push
jp
mov
xchg
fidivrs
gs
inc
out
fcmove
out
in
mov
outsl
pop
inc
js
dec
sbb
test
es
out
or
lds
call
mov
into
int3
into
divb
arpl
jmp
mov
cld
inc
in
dec
popl
fmul
imul
adc
mov
sbb
mov
gs
adc
cmc
inc
addr16
jle
cmp
in
jmp
or
aad
aaa
fnsave
jb
sahf
addr16
inc
dec
ja
lea
sub
adc
repz
dec
ss
ret
inc
push
pop
stc
jmp
arpl
jg
ja
or
repz
ficoms
lret
jle
in
xchg
pop
xchg
notl
xchg
cmpsb
pop
jl
fnstsw
xchg
cwtl
ds
push
jne
cmpsb
mov
mov
pop
xchg
inc
dec
mov
lahf
jns
mov
lds
mov
cmp
jp
call
std
rorl
dec
lods
add
sbb
jecxz
cmp
adc
add
repnz
xchg
push
mov
mov
fdivs
mov
cmc
fstps
std
jne
adc
data16
mov
and
dec
mov
dec
sub
add
adc
jp
jne
sub
push
jp
xor
sbb
mov
cmpsl
or
mov
lahf
jbe
xchg
adc
hlt
xlat
pop
or
lahf
call
or
pop
popf
cmpb
inc
or
sbb
inc
mov
rorb
cs
adc
pop
inc
std
mov
jmp
inc
pop
xor
or
cmpsl
add
stc
lock
mov
lretw
test
leave
cltd
push
xor
addr16
cwtl
andb
cmpsb
popl
cmp
sbb
in
ret
aad
mov
dec
jne
lds
mov
jo
pop
std
lods
inc
mov
add
xchg
out
insb
jb
lea
push
addr16
andb
rcrl
fwait
pop
out
xchg
jp
out
in
out
test
out
sub
les
add
pop
pop
out
or
lret
xchg
mov
jb
xchg
jbe
or
and
ficoms
insb
scas
int
ret
mov
stos
aam
je
int
xchg
lds
inc
loop
scas
add
add
inc
cmp
cmp
xchg
es
stos
mov
adc
lods
jmp
subb
ds
aad
clc
call
jl
cmp
cmp
fwait
push
mov
arpl
push
in
outsb
or
lcall
jecxz
ljmp
arpl
aam
adc
xchg
xor
aas
xchg
sti
sub
in
sbb
int3
aaa
ret
push
popa
imul
push
inc
sbb
les
das
ds
mov
je
mov
cmp
adc
pop
push
insl
outsl
add
adc
mov
xchg
push
loope
shrb
lea
pop
dec
inc
ret
dec
sub
faddl
loopne
dec
push
fdivp
movsb
sbb
cmp
scas
sub
iret
xor
push
sbb
ds
aas
imul
or
aam
sbb
push
dec
add
addr16
dec
jns
in
push
fsts
xchg
push
sbb
jns
movsl
fs
lcall
sbbb
movsb
imul
add
mov
arpl
fdivrs
lcall
mov
lret
xor
lahf
sbb
sub
pusha
shll
push
jb
ret
and
pop
xor
cmpl
lds
mov
adcl
mov
push
andl
call
lds
adc
mov
cmp
clc
aam
inc
cmp
xor
sahf
test
fstp
push
jae
push
loope
push
pusha
out
xor
sub
hlt
cmc
inc
das
jae
aad
jo
add
ds
iret
in
fdivl
shrb
add
mov
cs
pop
enter
sbb
enter
sub
test
jmp
in
jo
shll
and
sbb
jge
sbb
pop
mov
dec
idivl
in
pop
pop
es
testl
sub
jne
lea
lock
loop
test
jg
mov
adc
mov
dec
and
arpl
pop
xor
popa
stc
rcll
inc
lods
sub
jbe
cmpsb
insl
xor
cwtl
fdiv
shll
outsl
lret
and
outsb
mov
fildll
fadd
jnp
xor
and
popf
push
mov
es
or
loop
push
addb
add
dec
cltd
push
mov
stos
sub
mov
pop
and
mov
cmpl
mov
shrl
add
cmp
lds
decb
or
jp
insb
cli
fstpt
outsl
add
ss
and
fnsetpm(287
out
fidivrs
push
mov
test
aad
push
call
jno
lock
push
pop
mov
inc
sbb
fdivp
dec
imul
mov
mov
movsb
cltd
call
mov
mov
dec
in
push
popa
daa
enter
testl
popa
or
pusha
cmp
dec
dec
and
mov
and
mov
xor
lods
mov
in
or
addr16
pop
jg
sbbl
and
dec
stos
out
mov
jmp
cmp
mov
dec
ret
mov
enter
roll
addr16
mov
mov
or
sbb
cmp
imul
popa
jge
push
addr16
jmp
xchg
mov
popf
mov
bnd
loope
inc
stos
cltd
lds
fnstenv
aas
ret
and
nop
insl
test
cmp
stos
xchg
iret
fucomi
lods
mov
sub
mov
rorb
push
push
cmc
mov
xchg
push
dec
pop
clc
jno
lds
push
fisubrs
stos
dec
adc
pop
insb
mov
fildl
dec
pop
into
insl
cltd
or
jno
insb
movsl
push
and
and
dec
jo
jo
sbb
rorl
add
sbb
xchg
cmc
pusha
aam
jl
adc
imul
cwtl
cmp
adcb
lods
repz
call
enter
out
adc
push
int
mov
bound
sbb
cmp
xchg
cmpsl
clc
push
test
ljmp
repz
jecxz
ret
push
sbb
jb
sbb
lret
mov
nop
mov
jnp
fildll
loop
sbb
jge
daa
xchg
test
mov
push
cmp
lret
cmpl
call
cwtl
xchg
out
fs
test
das
loope
jle
push
jle
sbb
mov
dec
or
lods
js
cmp
test
ret
dec
or
pop
mov
xor
mov
jge
inc
push
adc
div
cmc
or
data16
and
inc
cmp
and
popa
xor
mov
rolb
dec
jae
pop
outsl
mov
mov
sbb
out
dec
jae
mov
push
test
cmc
lods
dec
movsl
lea
aam
xlat
cmp
xor
jl
test
pop
add
rcl
mov
fsubrs
test
xor
jo
push
ja
dec
cmp
ficoms
push
pusha
clc
pushf
push
jecxz
cwtl
jmp
inc
test
test
jnp
push
sbb
iret
ljmp
js
movl
lea
xor
mov
rorb
xchg
sub
dec
add
inc
mov
xchg
lock
out
ja
sub
push
jecxz
push
ret
shlb
jo
aam
and
imul
sbb
sub
jno
xchg
out
mov
add
int3
outsb
pop
cmp
in
xorl
js
enter
adc
adc
xchg
out
mov
adc
add
sbb
jo
push
movsl
rcl
pop
and
mov
push
dec
ja
test
scas
out
dec
sub
es
testb
sbb
inc
test
adc
mov
or
pop
jbe
sub
push
push
outsb
int
sbb
pushf
cmp
cmp
insl
inc
jbe
mov
xchg
or
adc
outsb
sarb
aaa
dec
ds
and
mov
xlat
push
inc
jecxz
cmp
inc
dec
or
sbb
mov
inc
orb
xor
xchg
adcb
lret
ja
mov
fs
out
mov
pop
sub
xchg
dec
jb
push
sbb
cmp
aad
imul
xchg
lret
pusha
mov
lea
or
dec
int
repz
std
or
sub
addr16
out
aad
pcmpgtd
mov
xor
fisubrl
mov
push
sbb
jnp
fsubrl
xchg
add
dec
adc
fstpt
lds
jmp
jge
jns
sbb
stc
lret
and
enter
cld
shlb
mov
aam
aad
in
dec
cmp
cmpl
mov
rcl
cli
jmp
inc
cmp
aad
fwait
sub
subb
mov
adc
xchg
dec
mov
addr16
inc
bound
cltd
add
jns
sti
gs
addb
push
cs
cltd
jmp
sahf
mov
dec
cmc
mov
insb
into
sbb
push
pop
xchg
xor
lahf
sub
fisubs
into
mov
xor
xor
ds
push
js
fistl
push
inc
jbe
icebp
aam
sub
lods
cmp
ss
pop
fdivrs
test
xor
inc
xor
sbb
aad
insb
mov
jo
pop
sbb
xor
push
push
xor
jns
arpl
mov
mov
sbb
cwtl
push
sbb
push
ljmp
testb
gs
pushf
imul
mov
cmp
adc
aad
lret
push
mov
cmp
and
out
mov
cwtl
jmp
ds
mov
sbb
or
ret
imul
or
out
fisttpll
xor
stos
icebp
mov
mov
mov
cmp
cld
xor
test
sbbl
mov
jne
test
push
int
shlb
pop
push
xor
or
lds
pop
rorl
mov
sub
movsb
jecxz
add
or
inc
les
movsl
xlat
adc
aaa
mov
in
cmp
int3
scas
test
adcl
adc
rcr
clc
fmull
aad
ljmp
cli
and
or
js
mov
pop
inc
popf
bound
xchg
push
cmp
dec
push
loope
enter
addb
pushf
dec
inc
cmpsl
dec
test
mov
in
jle
sbb
xchg
out
pop
lock
pop
mov
sub
mov
xor
mov
jbe
mov
lods
xchg
mov
je
sub
repnz
adcl
xor
sub
mov
call
inc
push
or
out
sbb
jecxz
shr
jmp
cmpsb
sti
lfs
jmp
dec
scas
mov
jmp
xlat
cli
mov
push
je
xor
mov
cmp
fbstp
frndint
xchg
aaa
sub
mov
out
push
pop
or
test
out
movsl
negb
outsl
pusha
int
adc
fdivr
xchg
bound
sbb
fs
dec
add
scas
sub
push
sub
mov
insb
jmp
adc
mov
sbb
mov
or
jmp
fwait
dec
and
xchg
push
xchg
and
test
lds
dec
fucomip
sub
xchg
jns
shlb
jo
adc
cli
in
pop
movb
repz
pop
and
inc
repz
loopne
popf
lods
and
les
in
pop
add
adc
aaa
or
jno
cmp
in
scas
cmp
pop
xchg
ljmp
dec
call
mov
push
and
mov
sbb
sub
out
out
in
subl
out
jno
cmp
dec
jg
inc
andl
out
test
movl
pop
scas
test
scas
jg
mov
cmp
js
je
ss
push
push
jl
sub
mov
rcll
cmp
xor
xchg
rcll
mov
mov
ljmp
cmp
out
adc
repnz
add
repnz
arpl
and
xchg
xchg
push
insl
mov
sub
stos
mov
mov
or
stos
lret
call
jae
repnz
dec
and
ljmp
call
mov
sub
pop
subl
xchg
enter
push
outsb
fisubs
cs
xchg
filds
ret
adc
lcall
and
adc
aad
roll
xor
push
xor
js
or
mov
dec
push
jae
dec
xchg
jg
pop
jp
xor
cmpsl
mov
sbb
out
xor
popf
jo
ret
mov
out
cld
ljmp
or
cmc
fistpll
mov
mov
add
pop
or
out
es
cmovp
xchg
add
enter
daa
pop
sub
movsb
test
adc
mov
dec
clc
ficoml
xchg
arpl
dec
pop
scas
adc
pushf
push
outsl
pop
stos
out
std
shl
push
dec
jle
cli
lret
fs
test
inc
mov
push
outsl
jge
cmp
std
adc
push
iret
xchg
sub
cld
mov
push
int
jbe
shl
xor
movsl
adc
into
bound
jo
push
outsl
out
dec
scas
cmc
popa
pop
insb
inc
push
stc
shll
imul
cmp
negb
push
pop
inc
fcmovb
into
push
out
mov
xor
jne
fcompl
adc
or
mov
repnz
iret
into
pop
inc
enter
adc
add
mov
sbb
lcall
mov
stc
aad
notl
fmull
sti
mov
add
cmpb
ss
rorb
and
cmp
ret
add
jae
cmpsl
cmpsb
lret
insl
xor
fmuls
xor
shl
repnz
outsb
faddp
push
mov
lods
pushf
call
nop
mov
pop
pop
mov
test
out
data16
xchg
xor
add
mov
in
inc
xchg
add
cmpb
test
ljmp
daa
dec
in
into
pop
inc
and
stos
cld
call
jo
jle
dec
testl
mov
arpl
push
jnp
mov
fucomi
dec
shll
and
repz
loope
cmpsb
mov
je
into
xor
imul
enter
sub
popa
inc
xchg
out
je
lock
add
sbbb
leave
xchg
xor
ret
filds
dec
icebp
cmp
popa
jbe
mov
add
sbb
stos
sub
fimuls
cmp
clc
cmc
lods
ret
int3
popf
pushf
cmp
subl
test
mov
inc
int3
lret
jns
ret
xchg
hlt
rcl
or
daa
jmp
mov
je
jno
lock
mov
sbb
ja
divl
push
ss
dec
pop
cmpsb
mov
jns
pop
aad
mov
aas
adc
add
shrl
aaa
dec
dec
pop
movsl
jbe
dec
std
imulb
daa
jae
es
out
shlb
push
pop
scas
ljmp
lret
bound
xchg
loope
mov
adc
sbb
cmpsb
leave
andb
in
adc
lret
push
mov
stc
pop
test
mov
outsb
inc
or
push
fmulp
and
dec
push
mov
pop
js
pop
popf
xchg
in
cmpsl
aas
rclb
lds
mov
ja
cmp
fwait
stc
fcomi
push
outsl
insl
das
cmp
pushf
aad
cmp
jne
inc
pop
xchg
rcll
mov
jo
ss
addb
fs
mov
test
mov
adc
cmp
lahf
mov
daa
cmpsl
sbb
lahf
leave
es
and
out
pushf
jne
dec
xchg
jp
jbe
in
ret
sub
sub
xchg
insl
popa
sub
add
cli
ret
iret
scas
in
aaa
ja
das
push
pop
cltd
rolb
test
push
lods
aaa
jae
mov
adc
push
dec
das
push
imul
ss
idivl
push
mov
mov
pop
adc
sbb
in
xchg
cmc
insl
and
je
sub
nop
xchg
jge
cmp
cld
or
cmc
sbb
dec
lret
jmp
sbb
cmc
sub
push
adc
cmp
adc
mov
cltd
or
mov
and
ret
sub
and
push
push
loope
and
daa
test
sub
das
push
jle
lcall
pushf
sbbb
mov
cmp
mov
imul
mov
cmc
xor
arpl
push
jg
ja
adc
inc
add
dec
sub
mov
sbb
pop
add
fsubrl
scas
jns
rcll
or
cmpsl
mov
ret
mov
mov
call
or
inc
andl
repz
inc
adc
jno
mov
push
mov
insl
aad
addr16
cmpsl
push
cmp
push
lods
daa
push
ret
mov
in
mov
push
mov
xchg
adc
cs
add
add
and
cmp
cmp
cmp
mov
cli
mov
mov
cmp
scas
loope
pop
inc
stos
mov
andb
cmp
inc
lahf
jbe
xor
jecxz
sbbb
pop
and
pop
dec
repnz
fldln2
aad
jns
fstsw
dec
adc
mov
xor
pop
sbb
dec
cmp
cmpsb
out
add
addr16
daa
cmpsb
rcl
ret
xor
sahf
imul
cmp
ret
fwait
psllw
jmp
fcomi
mov
fcompl
faddl
rclb
dec
sti
cmp
mulb
and
lret
dec
jg
add
xor
movsb
stc
jl
and
repz
lahf
xchg
add
scas
cmp
outsb
adc
fwait
iret
push
or
inc
movsl
jno
std
pop
pop
scas
loope
adc
test
mov
push
jns
cli
fs
jmp
testb
mov
sysenter
mov
sbb
out
mov
add
add
sbb
push
dec
mov
or
lea
clc
push
loope
dec
mov
out
jg
or
cwtl
ret
cmc
sub
fwait
xor
mov
dec
xor
aas
cs
push
mov
fs
push
jns
mov
daa
test
and
notl
outsb
mov
mov
xchg
pop
iret
mov
sub
and
or
xor
mov
inc
mov
mov
mov
mov
add
outsl
lock
add
and
imul
imul
test
stos
dec
xor
mov
mov
jmp
addr16
stos
lea
iret
push
xor
mov
dec
add
or
xchg
inc
call
push
in
cmc
xor
jl
fwait
pop
inc
xchg
repnz
or
es
stos
jge
or
sahf
insb
add
add
and
inc
popa
call
sahf
mov
imul
into
push
mov
push
mov
xor
loopne
call
aas
movl
dec
sub
repnz
jne
xor
movsl
cmp
mov
pushf
insl
cli
xor
mov
xor
orl
mov
lods
loope
jl
adc
cmp
push
xor
in
les
xor
xor
xchg
cmp
popa
and
push
jp
add
lahf
xchg
jo
jg
stc
mov
sbb
push
ror
fsts
add
neg
add
cmp
ret
sub
lret
bound
push
addl
jmp
mov
pop
cli
push
cs
sti
out
jmp
jns
sbb
push
cmp
jge
cli
mov
sub
loop
cmp
mov
lcall
sub
push
hlt
aam
loope
push
dec
aam
xchg
daa
jecxz
jp
ljmp
mov
int
push
adc
in
pop
outsb
jl
xor
cmp
xor
or
jp
mov
je
cmp
add
pop
cmc
adc
cltd
jge
daa
push
push
movl
dec
adc
testb
inc
rorl
lea
adc
fnstcw
rorb
mov
jo
aad
out
in
adc
push
and
outsl
xchg
mov
in
das
movsb
cmp
push
lods
push
cmp
xorl
push
clc
cmp
mov
cmp
js
cmp
sub
fs
movsl
stc
stos
das
incl
sub
xor
jl
mov
aaa
in
rol
cmp
cmp
cmp
add
mov
test
mov
push
adc
fmul
imul
xor
out
mov
push
lret
adcl
fs
mov
das
add
pusha
inc
push
dec
cmp
in
enter
jl
push
mov
or
pop
push
add
stos
sarl
shlb
in
sbb
and
mov
stos
mov
jge
jbe
fsts
or
sub
add
inc
orb
jae
mov
repnz
ja
outsl
push
jno
mov
fs
dec
pop
ret
out
dec
jno,pn
outsb
mov
leave
fimuls
xchg
jb
shlb
bound
mov
out
sbb
jg
lock
lods
in
jle
sbb
sub
mov
mov
jno
fisttpll
shll
pop
add
cmpsb
mov
mov
jecxz
jbe
push
and
rcr
dec
xor
shl
pop
sbb
rclb
sbb
or
lea
add
test
pop
ljmp
mov
imul
pop
mov
out
mov
pop
ljmp
lea
mov
adcl
loop
or
xchg
vpsubw
out
ds
sbb
or
dec
lock
aaa
addr16
sub
in
inc
jne
sub
ffree
stos
mov
push
das
insl
push
and
fistl
repnz
pop
ret
fldt
js
sub
addr16
cmp
sub
mov
fldl
inc
icebp
repz
or
sub
mov
cmp
inc
xchg
xchg
fld
negb
outsb
push
outsb
push
adc
mov
mov
pop
mov
or
push
inc
fistps
mov
nop
mov
dec
pop
loopne
jge
dec
mov
mov
mov
fstps
mov
adc
lcall
dec
mov
fidivl
in
push
dec
or
xor
testl
loop,pt
in
add
in
push
push
jecxz
fistps
mov
mov
xchg
pop
add
push
mov
push
cltd
pushw
mov
cmp
xchg
fwait
loopne
dec
addr16
movapd
jae
leave
mov
inc
pop
mov
and
mov
les
out
mov
shrb
cld
push
push
scas
mov
xchg
push
xor
in
xchg
inc
cmp
xor
cwtl
sub
fwait
xorl
aam
inc
xchg
sbb
ret
sub
lds
mov
in
sub
cmp
mov
addr16
ds
sub
sub
addr16
jecxz
in
lret
xchg
iret
stos
mov
lahf
in
jle
pop
daa
sarb
mov
push
cs
jno
and
fwait
pop
lods
mov
sbbl
fstps
lock
stos
aad
inc
dec
and
and
adcl
jle
dec
sub
cmp
enter
inc
imulb
jecxz
xlat
jns
sbb
pop
sbb
ja
adc
pop
or
dec
add
stc
push
incb
and
mov
test
out
adc
push
sub
sbb
test
xchg
ljmp
sub
fsub
bnd
ds
add
fidivs
lahf
xor
mulb
lahf
stos
roll
pop
mov
pusha
pushf
iret
aas
mov
and
les
ret
add
and
lea
pop
push
dec
aad
out
jb
adc
in
sub
add
scas
je
mov
push
adc
sbb
mov
or
adc
adc
mov
mov
insl
pop
insl
xor
dec
sbb
stos
leave
out
test
lcall
cmpsb
and
fs
jae
sub
xchg
jne
in
push
flds
daa
sbb
adc
lock
das
int
shlb
stos
mov
lods
mov
xchg
and
stos
mov
cmp
jmp
test
or
insl
mov
mov
test
or
adc
das
sahf
mov
sub
pop
ljmp
je
dec
hlt
sbb
aam
push
or
shrb
cvtdq2ps
pop
dec
push
fcomi
push
pop
mov
mov
popa
jbe
enter
xor
lret
in
pop
stc
jl
pop
and
daa
out
sub
sub
cmp
dec
and
inc
dec
push
repnz
fwait
addl
dec
nop
sub
xlat
jno
inc
pop
mov
sbbb
mov
pop
push
push
push
ds
add
lret
movsl
mov
push
xchg
xor
lods
and
jmp
outsb
pop
es
inc
lret
mov
jle
inc
mov
fdivr
in
shll
sti
cs
std
mov
sahf
sbb
cmpb
iret
mov
out
and
lods
xchg
imul
pop
aas
cli
mov
mov
in
leave
sbbl
dec
push
add
sti
rorl
test
mov
or
mov
arpl
and
inc
sub
hlt
xor
out
jo
pop
fdiv
or
inc
mov
ret
or
in
les
cmpsb
lret
cltd
aaa
stos
cmp
or
cmp
insb
dec
ret
sysenter
sbb
das
push
ja
cmp
sub
lahf
cs
xchg
jno
jne
in
cmp
scas
jo
out
sahf
notl
lods
sahf
test
mov
lahf
jnp
push
push
lods
les
xor
mul
mov
pop
xchg
ljmp
lret
loopne
es
xchg
dec
xorb
inc
out
and
cmp
stc
cmp
ds
cmp
jp
filds
jae
or
push
sub
ret
sbb
stos
inc
add
mul
dec
sbb
insb
inc
cli
jg
mov
inc
stos
repnz
xor
sub
fsubrl
lcall
leave
mov
int
lcall
fdivs
aam
cmc
adc
mov
das
and
xor
sbb
out
enter
pop
sub
in
pushf
xor
xchg
xor
ret
dec
xlat
sub
test
imul
rol
mov
jae
cli
jbe
testb
xchg
out
repz
scas
xor
sub
mov
mov
lods
ret
daa
jp
adc
daa
xchg
inc
mov
fdivrs
pop
adc
dec
push
out
jno
mov
sbb
repz
popf
mov
shll
mov
movsb
iret
and
and
sub
mov
imul
lds
mov
jno
push
es
jns
or
and
push
loopne
sbb
and
test
aam
xchg
jmp
push
xchg
xor
int3
mov
sub
cmovl
jle
push
call
xor
jmp
or
sbb
adc
fsubs
adc
xor
mov
call
loop
cmpsb
pop
test
testb
aaa
mov
int3
std
and
ret
mov
loope
call
insb
and
ret
in
insl
loope
push
scas
decb
into
scas
aas
sbb
mov
lods
fisubrl
xchg
push
mov
push
xor
dec
mull
out
adc
cmp
mov
sbb
in
pop
sbb
sti
and
adc
loop
lock
popf
das
push
orb
leave
popa
mov
push
cmpsb
xor
hlt
leave
sbbb
icebp
dec
in
dec
sbb
mov
jle
add
xchg
or
xor
scas
lods
aas
add
cmp
cmp
lock
movsl
jle
aad
adcl
imulb
repnz
sti
xorb
dec
adcb
adc
or
lds
shlb
rcrb
popf
pop
inc
dec
jnp
push
fsubs
loop
mov
adc
in
push
mov
xchg
adc
test
icebp
sbb
cmp
pusha
jae
bound
cmp
cli
and
and
or
mov
dec
xor
inc
out
xchg
jno
sub
inc
stos
out
scas
mov
sti
std
loope
loopne
mov
adc
cmp
ljmp
lea
pop
nop
pop
mov
xor
and
sub
cmpsl
in
sub
mov
jo
fdivrl
push
dec
xchg
mov
out
xchg
fcomi
int
fbld
mov
adc
xchg
in
push
or
dec
add
sahf
mov
call
inc
sub
dec
pop
sub
xchg
mov
xor
xor
mov
aaa
mov
sbb
int3
aad
popf
and
sbb
out
mov
inc
outsb
or
add
daa
dec
rolb
sub
xor
cmp
inc
adc
push
decl
ds
lret
ja
add
xchg
out
pop
cmp
mov
insl
cwtl
xchg
sub
jb
daa
icebp
adcl
and
and
xor
pushf
mov
rorl
mov
mov
in
inc
imul
sarl
mov
adc
or
inc
loope
adc
and
insl
dec
add
cmp
repnz
mov
mov
cmp
dec
xor
sub
rcll
mov
dec
pushf
addr16
test
cmp
shl
pop
inc
inc
out
int
add
lds
ret
jns
movsb
enter
jg
stos
push
and
addr16
fwait
inc
nop
incb
xchg
xchg
bound
dec
pop
div
cltd
aaa
sarl
lcall
ss
mov
cmp
cmc
mov
dec
jne
push
and
mov
xchg
clc
add
adc
pop
iret
and
push
sahf
xor
sahf
or
inc
mov
mov
int3
dec
xor
cmpsl
xor
sahf
inc
push
loop
inc
push
jbe
mov
les
rcrb
mov
int3
aas
ficompl
xchg
cmp
out
inc
inc
xchg
lods
stos
fwait
ds
int
js
push
fsubp
leave
mov
test
les
push
inc
ret
mov
mov
dec
daa
fwait
jno
fxtract
adc
and
jmp
movsb
xor
imul
cwtl
jne
fdivl
iret
iret
adc
xchg
notl
and
mov
lods
pop
mov
sub
and
sbb
shll
ljmp
pop
mov
pop
adc
shlb
cmp
xchg
lret
adc
fsubrs
inc
pop
pop
lahf
xchg
sub
mov
clc
cmp
sbb
arpl
js
sbb
push
mov
ss
sti
pushf
gs
stc
xchg
sbb
outsb
add
sub
mov
cs
mov
out
sub
add
xor
test
je
fld1
mov
add
push
sti
jge
js
leave
xor
lret
pop
push
cmpsb
arpl
xchg
push
shlb
cltd
xchg
cmp
pop
addr16
movsb
pop
ja
loop
mov
jo
hlt
in
xchg
ss
or
adc
push
sbb
or
test
mov
mov
std
std
add
ljmp
pop
mov
and
mov
add
rorb
mov
mov
mov
das
sbb
dec
push
inc
fdivrl
idiv
adc
push
jg
push
jp
arpl
jge
sub
lock
sbb
inc
subb
das
sbb
jge
sub
jp
xchg
xchg
mov
mov
xlat
addr16
add
decb
add
lods
je
xor
addb
cs
int3
push
data16
loopne
adc
leave
out
arpl
mov
mov
aas
or
hlt
jbe
stc
jp
sub
xchg
leave
inc
movsb
imul
jno
mov
dec
mov
jo
jns
popf
push
jge
xchg
cmp
push
jmp
test
cmp
mov
shl
ljmp
push
mov
fsubs
sub
dec
or
gs
xlat
cmp
and
jb
push
mov
hlt
je
sub
scas
pop
test
aam
fdivl
movsl
imul
stc
push
repnz
je
cmpsl
push
inc
cmp
xchg
out
add
push
jbe
stos
iret
bound
rol
stc
stos
jp
xor
jns
jae
pop
cltd
adc
mov
jl
lods
ds
jp
dec
dec
insl
cld
cmp
pop
in
xor
or
pop
or
enter
pop
sub
popa
lods
sub
fmull
fiaddl
push
pop
rcr
notl
mov
int
fisttps
imul
jae
test
adc
scas
loopne
orb
int3
sbb
and
insb
testb
xor
enter
sub
jmp
add
fisttps
xchg
lock
sub
jge
movl
mov
push
cmp
jmp
pop
push
stos
mov
xchg
addb
in
jg
sbb
mov
mov
dec
xorb
jle
or
outsl
dec
adc
scas
cmc
test
push
mov
pop
dec
mov
mov
sarl
jmp
inc
or
add
push
imul
insl
das
repnz
fidivl
fcoml
in
pop
es
roll
jg
repnz
movsb
sub
je
mov
shll
addr16
mov
sbb
into
or
test
lcall
ret
and
sahf
push
inc
dec
mov
pop
mov
pop
xor
dec
clc
jb
rcrl
mov
xchg
movsl
inc
xchg
in
push
je
push
scas
mov
or
add
sahf
mov
iret
repz
ficoml
clc
jns
pop
out
icebp
imulb
imul
pop
push
clc
jecxz
test
mov
xlat
lret
lock
cld
pop
psllq
mov
mov
jns
xor
mov
mov
xlat
inc
and
lds
xchg
hlt
aam
hlt
fs
dec
xor
push
jnp
mov
ffree
xor
mov
mov
adc
stos
jne
ss
fdivrp
xchg
movsl
jge
mov
push
out
pop
in
out
pop
inc
sbbb
pop
sbb
mov
lret
pop
stos
inc
sub
shl
pop
fbstp
clc
cli
pop
outsl
push
lcall
mov
stos
lret
loop
jmp
jge
repz
leave
movsl
mov
adc
mov
cld
pop
mov
je
xchg
fidivl
add
lret
xor
sbb
in
or
cmp
mov
sbb
xchg
or
push
and
push
arpl
dec
pop
mov
inc
into
aad
push
clc
addr16
adc
mov
or
cmc
test
sbb
outsb
sarl
push
fadd
xchg
aad
dec
cmp
out
mov
fnstenv
rclb
mov
addr16
mov
lods
xchg
xchg
adc
mov
cmp
mov
xor
jge
int3
mov
into
and
pop
pusha
xchg
mov
xchg
xchg
mov
ret
stc
mov
lret
ss
adc
and
incl
add
sbb
pop
sub
sarl
xchg
or
add
pop
es
xlat
hlt
xchg
ret
ret
adc
jno
lcall
jge
stc
lods
dec
xchg
jnp
ljmp
sub
jns
stc
or
dec
mov
pop
out
cmp
and
jmp
sbb
insl
stos
adc
fnstenv
aam
mov
push
cmp
dec
sub
addr16
sbb
outsb
pushf
sub
push
jo
sti
int3
sahf
sarl
push
and
xor
cli
jg
ffree
lcall
pop
or
push
adc
push
lods
add
test
add
cmp
cmp
or
jo
mov
xlat
add
cmpsb
mov
hlt
cli
mov
add
jg
imul
cmp
xchg
add
out
and
repz
ljmp
ret
nop
jnp
outsl
and
inc
imul
rcll
jb
push
xchg
pop
fbld
or
or
add
and
mov
das
lods
adc
and
int3
xchg
sahf
push
mov
in
add
sub
cmpsb
cmp
rclb
add
dec
adc
mov
jge
cld
testl
addl
outsl
push
inc
xlat
or
out
test
jecxz
iret
sub
cwtl
cmp
fimull
xchg
pop
mov
mov
neg
xor
repnz
das
aas
out
lret
mov
out
lock
clc
jp
push
jecxz
aam
jge
add
sbb
mov
sbbb
in
sub
jge
pop
int3
or
xor
mov
mov
jecxz
mov
jb
insb
test
sub
bnd
pop
add
sub
test
scas
lock
push
jbe
enter
xor
xor
mov
adc
add
pusha
pop
jle,pt
repz
xchg
imul
push
add
sarb
jge
lcall
cmp
mov
jmp
jnp
push
mov
mov
lret
cs
ds
dec
push
push
jle
push
jge
shll
and
push
das
cli
dec
imul
fwait
stos
adc
cli
jo
mov
inc
in
mov
sbb
mov
bound
sub
xchg
pop
push
lods
adc
divl
pop
mov
nop
mov
les
fdivrs
mov
jnp
inc
dec
aam
adc
loop
cmp
jne
mov
cmpsl
test
xchg
mov
pop
scas
into
jge
cmp
xlat
sbb
and
rorl
in
inc
sub
pop
repnz
ja
cmpb
xchg
xchg
nop
in
repnz
mov
push
mov
sbb
pop
push
dec
adc
inc
xchg
mov
jbe
cli
push
iret
mov
jmp
movsb
lret
repz
in
push
cltd
or
ss
inc
test
add
test
sub
jmp
mov
sub
fdivrs
in
or
arpl
dec
sbb
nop
lods
xchg
iret
mov
pop
mov
pop
or
sbb
push
xlat
xchg
cmp
jl
enter
xchg
jle
and
mov
mov
daa
cmp
mov
rep
sarb
add
rol
jecxz
ja
push
dec
ficoms
cs
movl
ljmp
stos
inc
lds
cmp
mov
es
mov
imul
scas
xchg
sub
xlat
or
pop
add
pushf
jle
mov
adc
inc
mov
call
cmp
mov
fildll
mov
stos
rcll
repz
les
push
jp
adc
sub
ret
mov
xchg
leave
push
jge
pop
stc
dec
jge
js
push
inc
cmc
test
or
fcmovb
fwait
jb
sub
pop
push
pop
sbb
test
shlb
push
popf
std
push
jmp
mov
jmp
aad
mov
push
or
mov
insb
out
popf
add
fldcw
cs
lods
add
sbb
mov
sbb
ljmp
loope
sub
and
inc
xchg
jnp
jg
mov
into
and
jg
sub
and
push
repz
js
push
ret
andl
ljmp
repnz
hlt
adc
push
imul
xchg
sub
filds
lock
movsl
lahf
nop
js
adc
dec
sarb
cmp
mov
sbb
and
test
and
xlat
mov
fimull
lret
stos
or
push
fildll
cmp
out
rcrl
push
fwait
mov
std
jmp
jae
push
imul
push
jp
int
clc
push
dec
adc
cli
sahf
je
cmp
xlat
adc
mov
into
daa
xor
or
jnp
out
es
rcll
dec
cmp
sbb
pop
dec
imul
dec
pop
iret
bound
repz
mov
push
cmpsb
fdivr
mov
data16
fnstenv
into
insl
mov
pop
adcb
inc
cld
jmp
xchg
lea
data16
scas
lret
cld
in
mov
stc
sahf
cmpsb
inc
or
pop
dec
xchg
jno
jnp
xchg
lcall
loope
jp
mov
pop
mov
push
adc
stc
pusha
lock
and
je
mov
dec
sub
insb
inc
dec
dec
push
icebp
or
nop
fsubrs
clc
jnp
out
adc
cs
in
loop
push
popa
xchg
jbe
dec
test
sub
faddl
and
inc
fisubrs
iret
xor
lds
into
clc
mov
inc
dec
out
push
out
inc
pop
sbb
and
je
pop
ja
mov
inc
cmpsb
cmpsb
pushf
sub
xor
dec
add
mov
movsb
stos
fnstsw
dec
enter
repz
loopne
mov
das
xor
faddl
dec
jnp
mov
jnp
push
jbe
jge
add
sbb
sub
add
inc
subl
lods
popa
aad
and
icebp
sbb
data16
mov
add
add
xchg
iret
inc
cmp
adc
in
or
sti
xchg
sti
add
int
mov
mov
jecxz
inc
test
xchg
arpl
dec
call
std
popf
sbb
cmp
inc
jmp
xchg
pop
mov
loop
lcall
cmc
or
pop
cmp
jg
mov
and
or
out
xchg
inc
popf
and
xor
fisubrs
in
xchg
sbb
push
fstps
out
fsts
mov
iret
mov
icebp
mov
sti
xchg
sbb
sbbb
pop
xchg
and
push
and
stc
test
out
xlat
sub
add
push
stos
ror
idivl
lods
mov
jne
ficomps
xlat
add
xchg
push
cmpsb
flds
xchg
mov
out
fs
popa
hlt
lods
dec
xor
lcall
xor
test
iret
roll
push
jno
stos
cld
pop
fisttpl
push
sub
sbb
sub
xchg
shlb
or
int3
xchg
adc
inc
aad
nop
addr16
mov
xor
ds
les
lea
xchg
add
pop
sbb
and
fiaddl
loopne
add
pop
mov
fldenv
push
pop
insl
cltd
or
sub
addr16
jb
jns
repz
idivl
clc
pop
jb
adcl
sahf
pop
ret
and
es
fwait
push
test
pop
sbb
int
dec
lods
popa
insb
mov
mov
jg
rcrb
imul
loope
data16
add
or
mov
or
and
popf
push
sub
ljmp
mov
mov
jl
popf
adc
pop
xor
sar
mov
pop
lock
ds
es
sahf
ja
pop
ljmp
add
mov
fbld
mov
dec
movsl
or
inc
int
shrl
push
pop
or
pop
push
arpl
cmp
dec
repnz
jl
adc
xchg
fistl
lods
jbe
pop
leave
inc
mov
fisubrs
leave
jle
pop
push
aam
sub
mov
push
jecxz
xor
cwtl
jmp
sahf
incl
sub
xchg
lock
divl
daa
in
outsb
sub
shl
pop
jg
or
jg
imulb
push
mov
std
add
adc
pushf
push
cs
xchg
bound
sarb
mov
scas
xlat
imul
fs
out
sub
push
and
aas
push
aaa
mov
sub
test
nop
adc
rcrb
scas
fbld
std
cmp
lcall
shll
and
insl
mov
fimuls
inc
push
push
adc
and
and
shlb
rol
stc
out
jmp
cs
mov
out
cmp
and
fwait
inc
les
inc
lds
stos
dec
push
jle
push
push
xor
xchg
jecxz
out
add
scas
fnstenv
adc
lcall
cmp
shll
inc
or
push
push
mov
push
mov
out
xchg
in
clc
and
mov
mov
xor
mov
and
test
mov
repnz
and
or
aas
mov
adc
pusha
mov
sbb
in
int3
sub
add
push
push
sarl
jnp
xchg
sub
pop
test
movsl
xlat
jne
repnz
les
sub
cli
jp
stc
clc
fs
lods
push
xchg
sub
jle
into
testb
cmp
adc
jnp
cs
dec
jnp
pop
shll
push
gs
adc
mov
pushf
jecxz
shlb
js
aam
push
xchg
bound
push
pop
sub
mov
mov
daa
in
mov
add
jne
fwait
shl
jge
fsubr
cmp
lret
add
mov
push
adc
jo
or
jns
loop
enter
push
jne
xchg
rcrl
sub
and
push
cmp
sub
sbb
shll
les
out
or
or
push
popf
jo
xchg
add
ficomps
xchg
xchg
test
jne
call
cs
jl
pop
inc
push
adc
xchg
out
lret
push
test
mov
push
cmc
or
jnp
dec
cmpl
pop
pushf
push
ret
cmp
mov
sbb
insb
loop
inc
pop
ficompl
mov
loop
pop
insl
dec
mov
inc
aaa
cli
pushf
rcl
shrb
shl
int
add
jno
out
or
sbb
sti
pusha
call
je
dec
jl
cwtl
fstp
aam
mov
push
lret
lds
mov
fimull
dec
mov
aam
xchg
pushf
fsubrl
or
jns
cmp
xlat
out
popa
jno
icebp
push
into
test
pop
add
insl
popf
mov
inc
lret
test
jle
lds
pop
jecxz
xchg
fwait
test
js
pop
mov
xor
inc
add
adc
mov
push
shrb
push
push
inc
inc
insl
sub
adc
pusha
inc
fisubs
inc
cmp
fsubrs
stos
add
pop
lods
shrb
arpl
xor
std
aas
adc
loop
jbe
sarl
jmp
icebp
mov
add
jl
and
and
dec
js
mov
mov
xchg
mov
pop
push
aad
cmp
pushf
cmp
sarb
adc
jbe
or
sbb
std
out
iret
setno
rorl
adc
xchg
je
push
bnd
inc
enter
mov
jno
or
push
clc
mov
sub
mov
mulb
pop
shlb
xor
pop
test
inc
subb
mov
or
inc
popa
ret
cmp
sub
jae
mov
or
aas
movsb
test
je
jp
jmp
mov
rclb
outsb
xchg
mov
scas
notl
test
in
cmpsl
xchg
lcall
push
adc
jle
adc
arpl
mov
je
ret
or
iret
test
leave
lods
int3
dec
push
les
addr16
lds
out
ja
repz
and
test
je
mov
loope
shrl
arpl
scas
jl
out
sarl
add
jg
daa
dec
pop
lods
push
mov
add
sub
int
jo
cmp
push
sbb
lods
data16
xchg
mov
ja
xor
xacquire
sbb
cmp
aad
pop
pop
add
insl
dec
sar
add
sbb
out
mov
pop
push
cmpl
sub
xchg
xorb
rorl
or
xchg
mov
mov
fwait
push
outsl
jmp
imul
pop
xchg
inc
testb
fdivr
or
xor
mov
jno
fcomp
aad
insb
lods
jge
pushf
mov
ret
shll
cltd
xor
add
add
inc
xchg
int3
sub
aaa
or
xchg
ret
push
ljmp
nop
mov
rcll
insl
push
outsb
xchg
fidivrl
jp
inc
movsb
test
lock
sti
pop
cmpsb
add
jmp
mov
dec
out
sub
inc
addr16
stos
push
pushf
enter
jae
pop
jb
cmp
sti
sub
test
cmp
popf
adcl
xchg
jle
sub
and
or
jmp
push
xor
lods
in
adc
scas
push
loopne
out
es
xchg
js
cmp
in
inc
pop
lcall
fwait
loop
cltd
lock
push
fucomip
js
insb
aaa
jmp
cmpsb
lods
pop
out
cmp
enter
pop
or
jge
lret
sahf
jmp
icebp
xor
scas
cmp
jae
pop
xchg
shr
insl
jmp
bound
mov
jp
lcall
jbe
mov
nop
bound
sbb
and
mov
inc
sbb
or
ss
mov
rorl
cmp
loopne
int
shrb
cwtl
and
mov
movsb
jne
jle
mov
arpl
les
mov
into
pusha
aas
and
or
mov
mov
push
loopne
scas
inc
jb
out
push
or
sbb
daa
or
sbb
dec
cld
cmp
and
mov
mov
xor
sbb
push
int3
lret
loop
pushl
add
repnz
data16
xor
xlat
mov
stc
and
mov
mov
push
test
icebp
push
clc
push
aas
jge
cltd
jnp
addr16
shrb
scas
xchg
pop
fiaddl
mov
es
sbb
data16
add
dec
int
push
push
xlat
lea
shr
inc
xchg
adc
jnp
xchg
rcll
adc
scas
mov
mov
mov
inc
repnz
je
shr
pop
mov
ret
mov
dec
mov
inc
aad
inc
and
inc
push
mov
ja
pop
and
aaa
into
repnz
xchg
int3
dec
inc
lret
pop
or
xor
add
dec
jb
mov
inc
push
and
pop
xchg
and
sbbb
jmp
xor
shl
test
shr
hlt
mov
xchg
pop
mov
sub
mov
xchg
cmp
mov
in
mov
in
push
jo
popa
in
sub
call
jg
adc
idivb
cmp
es
add
add
dec
call
or
mov
cmp
mov
sub
cmc
and
je
fbstp
inc
jb
aaa
cmp
jo
popa
inc
pop
adc
adc
fcoml
push
pop
xor
outsl
add
or
xor
movsl
add
or
lds
xchg
movsb
in
shrl
scas
sub
mov
out
imul
mov
or
pop
xchg
out
into
xchg
jmp
push
push
fcomps
and
xor
push
data16
inc
lret
xor
xlat
inc
ss
pop
sbb
pop
mov
and
lock
shl
inc
test
aas
ja
mov
in
cwtl
je
gs
or
inc
dec
scas
ja
stos
repz
inc
and
lahf
bound
fs
imul
incb
outsl
adc
inc
loop
cmpsb
cld
and
adc
mov
icebp
movsl
cli
jae
sub
adc
push
flds
scas
bound
cmp
lods
mov
mov
outsl
and
aaa
add
mov
nop
lods
testl
test
stos
inc
mov
dec
or
imul
aad
scas
test
test
es
enter
pop
lret
mov
dec
mov
pop
jl
fwait
cmp
das
in
nop
lret
mov
adc
out
ss
cmp
rcrl
test
sub
or
mov
scas
daa
int
adc
jge
jo
notb
scas
mov
adc
push
sub
and
stc
sarl
cmp
outsb
inc
push
push
push
subl
hlt
push
popl
movsb
push
gs
loopne
dec
fsubrs
in
sub
and
push
lret
lret
mov
jo
add
add
pop
sub
push
dec
stc
les
imul
push
cs
and
out
cmc
adc
lret
je
stc
add
xchg
and
jns
jecxz
bound
add
std
mov
pop
imul
xchg
clc
mov
dec
and
test
pop
pop
pop
or
adc
cmc
je
mov
push
and
sar
jno
pop
sahf
add
xlat
pop
sbb
sahf
fs
lock
jmp
or
sbb
mov
add
push
jmp
shlb
jge
repz
vpcmpgtd
popa
nop
lds
enter
sbb
jecxz
pop
fisubrl
subl
xor
cltd
ret
mov
xor
pop
mov
pop
xor
test
jmp
lret
cwtl
lods
jmp
pop
repnz
shlb
mov
pop
pop
outsb
imul
mov
cmp
cmp
inc
shrb
jns
sub
add
aaa
or
pop
xorb
popf
in
test
arpl
push
add
lcall
out
xlat
stos
test
sbb
or
xchg
sub
inc
sbb
sub
cwtl
pop
push
aas
jp
fwait
xorl
divl
call
es
sbb
subb
lea
repnz
dec
popl
push
mov
and
negb
mov
mov
jle
aas
das
shlb
cld
push
pushl
mov
push
cs
xor
in
aam
pop
pop
cltd
dec
mov
fwait
and
mov
add
into
xor
xchg
pop
rorl
dec
fst
in
ss
jo
pop
shlb
std
adc
adc
pushf
push
lcall
iret
or
mov
mov
cmp
cli
cmpsl
popf
dec
je
cltd
sbbb
pop
push
sub
lds
or
dec
fsubrs
aam
ror
xchg
mov
cmpsl
jae
or
mov
pop
mov
neg
ja
fsubl
decb
mov
cli
movsl
fwait
cmp
out
adc
call
popa
add
add
sbb
mov
loop
test
jecxz
pop
ret
stos
inc
pushf
xorl
sub
es
add
loopne
jmp
mov
shll
ljmp
lods
int
pop
mov
fdiv
aad
dec
mov
push
mov
push
push
mov
jecxz
std
and
adc
shlb
pop
push
sbb
adc
dec
mov
les
loopne
dec
test
push
movsb
mov
mov
add
add
imul
xchg
into
adc
inc
sbb
bound
sbb
mov
in
popa
push
lcall
mov
aam
aam
push
dec
rorl
fcompl
mov
and
daa
test
push
jnp
pushf
in
xor
or
rorb
or
fidivs
popf
test
stc
std
repz
popa
in
sub
jb
pop
mov
push
jecxz
scas
icebp
stos
jp
fwait
out
and
pcmpeqw
mov
sbb
shl
mov
pusha
ja
and
adc
sub
sub
push
jbe
nop
mull
test
jl
rol
out
gs
inc
adc
ss
mov
aas
xor
int
xchg
adc
and
sbb
mov
push
fdivr
xor
push
and
pop
stos
mov
pop
in
in
xchg
mov
or
xchg
push
xchg
mov
movsl
or
inc
push
loopne
scas
adc
add
mov
cmc
dec
jnp
add
in
add
fisubl
xchg
pop
rcrb
pop
and
push
negl
aas
pushf
sub
or
pop
pop
xor
xchg
nop
lock
xchg
pop
cmp
cmp
and
lds
leave
sub
bound
jne
loopne
mov
jle
jle
push
mov
scas
daa
pusha
cmpsl
inc
mov
cmp
sbb
add
add
jg
cmp
mov
push
ss
sub
je
cmpsl
loope
test
cld
call
idivb
adc
nop
cmp
pop
out
sar
loopne
xchg
andb
jno
dec
jne
scas
add
in
lahf
mov
popf
daa
add
mov
in
push
inc
fcom
mov
lods
aam
inc
rolb
push
lds
mov
cmc
in
mov
push
orb
clc
mov
and
dec
lock
pop
adc
pop
addb
adc
cmovp
cmp
int3
clc
xchg
mov
int3
ret
xchg
sub
xor
and
xchg
push
dec
fcomps
into
scas
rcrl
out
popa
push
and
mov
add
xacquire
icebp
pop
jo
int
loope
dec
in
push
es
mov
sub
daa
lds
add
daa
jno
cld
cmp
mov
lock
aaa
je
std
mov
int
test
loope
add
adc
inc
adc
mov
push
dec
inc
popf
sub
sahf
sub
dec
ret
nop
mov
jnp
dec
in
insl
push
movl
scas
insl
adc
daa
lahf
xchg
xchg
xor
fcomps
flds
fwait
loop
repz
or
sahf
insb
push
jns
std
fidivrs
adc
stos
dec
iret
addr16
cmp
xchg
popa
daa
nop
xor
ffreep
movsl
xlat
mov
sti
jno
mov
xchg
push
mov
mov
repz
loop
rorl
loope
repnz
adc
ja
ljmp
movsl
sub
icebp
inc
cld
jmp
sub
icebp
and
js
imul
shrl
jl
adc
stos
clc
jo
sub
inc
pop
fcompl
xchg
in
scas
fstl
fldt
sbb
or
loop
pop
notb
pop
add
dec
pop
xor
inc
testb
pop
jne
xchg
pop
push
int3
testb
bound
movlps
out
rcll
aas
xchg
idivl
or
les
xlat
fs
mov
mov
xchg
add
mov
xlat
stc
jbe
mov
mov
xor
or
mov
mov
add
rclb
mov
fsubr
stos
and
pusha
jns
mov
add
push
mov
push
mov
call
out
mov
or
adc
or
lea
push
ss
mov
push
push
cmp
sub
in
sbb
pop
lds
and
fisubl
cmp
enter
in
or
nop
ljmp
jmp
sbb
stos
or
push
scas
pop
jmp
jge
pop
cmp
jl
jg
les
imulb
xchg
cmp
jecxz
pusha
ss
xor
repnz
sub
pop
addb
jp
adc
out
insb
mov
out
xor
pop
xchg
fs
jg
sub
mov
add
mov
sub
and
xchg
sarb
lock
push
insl
je
push
out
test
adc
stc
out
mov
jecxz
cld
adc
hlt
mov
lahf
inc
mov
adc
xor
dec
sbb
out
add
test
mul
pop
sbb
cmpb
fstps
push
icebp
das
sti
fbld
call
and
push
std
jno
bound
leave
mov
dec
imul
cmp
aas
mov
pop
cmpsl
int
insb
pushl
push
dec
test
sub
mov
mov
mov
pushf
jb
inc
push
or
imul
push
sbb
push
cmp
push
movsb
sub
fcmovnu
cld
cmp
jne
test
in
push
dec
mov
inc
nop
jl
add
jp
jmp
inc
mov
pop
sbbb
out
pop
fs
adc
out
imull
aas
dec
out
jns
rclb
in
mov
mov
cltd
inc
mov
pushf
mov
aas
or
rcrb
push
das
cmpsb
movsl
push
sub
dec
sbb
inc
ss
cmp
gs
stc
cli
and
xor
mov
jno
jp
push
adc
or
mov
xor
mov
push
xor
int
push
xchg
push
xchg
sbb
cmp
mov
out
cmp
dec
dec
or
pop
cwtl
sti
cmp
inc
xchg
xorl
and
xchg
aaa
push
ja
push
shl
test
or
icebp
pop
jg
pop
push
loop
jmp
scas
mov
dec
sbb
dec
sub
inc
sub
sbb
mov
test
jne
mov
cmp
cwtl
jno
ljmp
stos
xchg
dec
lcall
or
imul
movsb
daa
cmpsl
xchg
mov
in
lahf
popf
xchg
fstpt
cmpsl
andb
mov
cwtl
daa
scas
fdivrp
test
xor
loopne
xchg
movsl
xor
mov
dec
mov
rcrl
jae
push
loope
into
das
jl
push
cmpsb
xor
cmp
xor
les
cmc
test
lods
stos
cs
mov
sbb
lds
sbb
mov
loop
in
mov
mov
js
pop
pushf
loop
or
cltd
icebp
scas
pop
les
fs
xor
adcb
in
sub
add
dec
je
sbb
movsl
out
mov
imul
add
insb
js
scas
sbbl
xchg
and
add
xchg
outsl
jp
pop
faddl
mov
aas
or
xchg
sbb
enter
cmp
mov
aas
sub
das
add
std
test
cwtl
pop
xor
mov
insl
pop
push
or
mov
pop
mov
pop
subb
cld
cs
dec
pop
mov
pushl
push
and
xor
insb
push
mov
jnp
dec
daa
push
cld
int3
test
jge
adc
cmp
dec
outsb
adc
mov
pop
in
push
inc
cwtl
mov
iret
ret
xchg
outsb
loopne
jae
mov
jle
or
mov
sbb
xchg
mov
ficomps
jns
sbb
pop
outsb
xchg
cmp
jno
aam
and
xor
inc
cmp
pop
adc
jne
push
pop
cmp
cli
test
test
shlb
ficompl
inc
mov
mov
mov
outsb
sbb
push
pop
or
icebp
jo
mov
loope
push
cs
xchg
leave
ss
and
repz
mov
add
subb
sahf
js
mov
lods
aas
stos
push
add
sysret
test
lret
cmc
push
test
jl
add
test
mov
fcmovnu
insl
lcall
mov
leave
xor
push
in
lahf
ficoms
push
push
cs
je
sub
pop
or
cmp
and
xor
dec
mov
push
inc
xor
mov
fs
aas
jmp
int3
xchg
ja
add
test
shll
push
cld
push
mov
adc
icebp
cmp
andl
fs
mov
lods
out
and
cmc
mov
scas
adc
dec
out
inc
mov
push
cld
pop
xchg
mov
push
les
into
enter
cmc
outsl
mov
adc
or
icebp
sub
rcrl
inc
lret
sahf
aaa
cmpsb
dec
push
clc
sub
orl
fnstsw
jl
ljmp
pop
popf
sbb
addl
or
pushf
sti
repz
mov
sbbb
pop
fists
rcll
fistps
test
or
or
lock
mov
adc
insb
cltd
mov
inc
in
cmp
enter
stos
inc
ljmp
or
fldenv
jnp
imul
push
insl
dec
and
and
ds
pop
loopne
rorb
lea
mov
mov
cmp
dec
lret
mov
push
lret
scas
add
nop
stc
out
mov
jle
outsb
fcmovnb
jge
add
mov
xchg
and
mov
jmp
sbb
adc
mov
addr16
sbb
lods
sbb
data16
mov
dec
lretw
fwait
adc
sub
lds
push
js
ror
mov
aas
mov
cs
rolb
fxch
pop
fstps
mov
js
dec
and
addr16
lods
jecxz
pop
es
arpl
pop
std
lret
pop
mov
mov
push
lea
in
movb
cmp
filds
and
pop
xor
sbb
xchg
or
std
sbb
jmp
jg
or
mov
dec
and
and
add
arpl
add
fidivs
inc
pop
cmp
or
dec
push
stc
leave
and
data16
dec
xor
popa
xorl
jb
sbb
xchg
sub
daa
sti
sarb
fdivrl
xor
fs
jl
push
cmp
push
push
mov
aam
jle
or
mov
cs
push
ja
es
mov
leave
dec
sbb
in
int
pop
push
rorb
push
push
das
mov
mov
mov
push
xor
cmpl
clc
aam
xchg
inc
shr
sbb
or
jns
jle
sbb
xchg
dec
daa
loope
das
std
or
in
sbb
pop
scas
loope,pt
mov
fisubrs
sbb
push
xchg
mov
and
mov
sbb
sbb
js
out
push
xor
mov
das
pop
sub
xor
outsb
je
sub
xchg
xchg
push
ds
cld
push
fwait
in
rcrb
loop
or
push
enter
mov
push
cwtl
cmpsb
test
mov
dec
and
pop
retw
pop
stos
orb
repnz
cltd
sub
and
dec
jb
push
dec
adc
gs
xchg
adc
nop
xor
lods
repz
imul
mov
jb
lret
rorl
add
xchg
push
mov
lahf
fadd
loope
jae
ja
insb
mov
adc
data16
addr16
cltd
mov
rcr
das
ljmp
gs
jne
jae
in
push
pushf
and
stos
repz
loop
stos
cmp
mov
jne
push
jae
cld
cmp
jns
xor
mov
jne
fldl2t
xor
dec
std
fwait
inc
mov
mov
daa
and
xlat
int
nop
loopne
jmp
xor
filds
test
or
loope
or
int3
cmc
add
adc
adc
xchg
lahf
in
jge
inc
jle
nop
daa
xchg
push
jne
call
stc
lods
aam
jns
inc
les
inc
mov
and
mov
std
fstpt
cmp
jne
bound
dec
add
or
mov
xchg
les
cmpl
ficoms
repnz
rol
inc
push
fstl
dec
lea
clc
shl
scas
dec
mov
andb
fidivrs
mov
sub
mov
sti
cmp
in
jecxz
cmc
adc
xor
sbb
xchg
xchg
jmp
popf
jge
xchg
push
push
adc
push
jae
dec
testl
dec
in
roll
pop
jb
mov
push
dec
xchg
pop
and
mov
push
lea
dec
sahf
dec
jne
leave
filds
sahf
xor
dec
xchg
push
arpl
out
daa
inc
fwait
mov
iret
fildl
or
xor
fwait
inc
jmp
popf
mov
das
insb
add
pop
mov
mov
sbb
or
fstps
nop
fiadds
fists
mov
add
inc
lret
test
lods
fwait
test
jnp
add
cmp
mov
stc
daa
cmp
xchg
fs
enter
paddb
fcompl
mov
sub
push
scas
xchg
inc
jo
push
pop
sub
add
jmp
sub
push
sbb
iret
xchg
inc
push
das
add
jno
inc
xchg
jge
stc
test
fimuls
stos
mov
sbb
cmp
fists
push
push
inc
jl
decb
mov
mov
mov
sub
jg
dec
outsl
cmp
add
out
xchg
jbe
mov
push
pop
fdivrl
pop
ds
out
mov
adc
das
adc
lcall
lock
mov
dec
add
and
mov
hlt
inc
mov
mov
repnz
add
test
ja
jle
jp
add
pop
mov
scas
pop
add
stos
push
pusha
aaa
mov
xchg
daa
out
lret
ds
insb
xor
or
lods
sbb
mov
cs
aad
testl
add
inc
ret
jmp
enter
test
imul
cmp
stos
pushf
push
fwait
inc
int
out
mov
inc
mov
cli
xlat
ljmp
xor
fmuls
fwait
cmp
les
data16
lahf
inc
fists
mov
idivb
cmp
jmp
cmpl
add
cs
or
xchg
lret
fnstcw
lods
popa
xchg
and
dec
scas
and
pop
loope
or
mov
pushf
std
mov
imul
fiadds
dec
jmp
stos
dec
test
or
xorl
add
or
stos
jge
sbb
push
sub
jo
repnz
scas
fstpl
shlb
sub
jno
pop
jbe
push
mov
sub
lret
js
dec
cmp
scas
mov
popf
negb
or
xchg
cwtl
fstpt
mov
push
jl
cs
mov
fyl2xp1
mov
push
cmp
mov
mov
out
xchg
xor
jmp
or
mov
mov
or
cmc
addr16
pop
sbb
xchg
xchg
lock
sub
ljmp
fmull
pusha
sahf
dec
mov
mov
ljmp
mov
push
and
inc
sbb
adc
jg
inc
jmp
and
orb
pop
ss
cwtl
push
sti
cmp
es
aad
test
int
or
cmpsb
ret
inc
mov
mov
pop
movsb
dec
sbb
dec
mov
jbe
shl
xchg
leave
imul
jnp
ljmp
or
aad
ja
xchg
cli
adc
or
out
push
jb
outsl
fmuls
shlb
dec
inc
jnp
jb
ja
jo
shll
or
imul
mov
in
inc
pop
jns
mov
xchg
cmp
jno
aaa
sbb
adcl
inc
repnz
nop
sub
scas
xchg
jecxz
inc
cld
or
lret
rclb
popa
testl
sbb
icebp
aad
push
repnz
leave
popa
xor
test
and
mov
fidivrl
add
mov
gs
cmp
jno
adc
mov
inc
enter
dec
adc
scas
adc
das
bound
push
xor
in
lods
xchg
in
ljmp
add
xor
fadd
xchg
jbe
fiaddl
sub
mov
lret
jl
pop
stc
mov
sub
lahf
xchg
mov
xchg
push
in
es
lea
int3
mov
lock
bound
push
push
popf
imul
xlat
xchg
daa
xor
sub
xorl
push
icebp
sub
not
lret
inc
les
pushf
mov
les
aas
mov
outsb
push
loope
repz
xchg
aas
sbb
lods
mov
xchg
xor
mov
mov
mov
rcrb
lods
sti
mov
loop
into
insb
imul
mov
jecxz
xor
inc
lock
adc
nop
xor
loope
movsl
scas
call
ret
xor
shl
arpl
xor
adc
xchg
add
mov
sub
pop
xor
pop
stos
stos
jno
mov
xchg
lea
mov
pop
sbb
inc
xlat
jo
jno,pt
xchg
cli
mov
mov
scas
inc
leave
add
mov
and
ljmp
mov
inc
loopne
scas
xor
mov
sub
pushf
inc
pop
dec
std
flds
sbb
xor
jp
icebp
insl
scas
jge
cmp
adc
inc
dec
xchg
inc
out
jge
imul
xchg
sub
jecxz
mov
mov
aas
inc
and
xchg
xchg
insb
xor
inc
push
sub
leave
fisttps
jg
clc
call
jp
jp
movsb
push
into
loop
cmc
jmp
jns
jl
loope
pushf
xchg
lds
pop
daa
jp
popl
mov
imul
jnp
mov
sub
mov
sub
lds
push
pusha
icebp
pop
push
mov
mov
jo
jecxz
cmp
add
jne
cmpsl
cmpsl
mov
cmp
xchg
mov
call
in
pop
in
pop
int3
out
jb
imul
mov
dec
data16
test
aad
jle
nop
pop
negl
mov
cmp
mov
xlat
stos
aaa
pop
out
cwtl
adc
call
dec
pushf
cmc
fs
push
int
dec
mov
mov
cmp
scas
pop
cmp
mov
jge
js
dec
xchg
dec
push
or
std
adc
inc
push
cmpsb
adc
xlat
push
xchg
push
pop
js
lahf
inc
loope
jae
pop
stc
mov
jecxz
mov
in
aas
in
xchg
dec
pop
jl
rcrb
in
inc
stos
dec
push
lea
cmp
in
mov
fucomp
pop
fistps
sti
mov
xchg
int
ljmp
ss
mov
sub
or
insl
push
adc
or
cwtl
mov
jb
xorb
cmp
push
rolb
push
out
dec
gs
mov
push
cld
xor
push
push
icebp
dec
jns
jb
ret
aas
and
jno
adc
inc
mov
mov
hlt
fnstcw
pushf
or
mov
inc
lcall
fldcw
pop
mov
test
cmp
or
mov
cld
loopne
push
loop
das
mov
dec
iret
in
sbb
add
aaa
and
add
hlt
movsl
es
repz
mov
pusha
adc
pop
enter
sbb
cmp
dec
cli
fadd
icebp
add
fdivrl
xorb
xchg
aam
fs
cmpsl
mov
fdivrl
addl
xchg
mov
mov
loope
inc
xchg
sub
rcll
sbb
and
das
dec
push
in
fwait
sahf
dec
outsl
in
pop
mov
mov
cltd
inc
push
mov
push
inc
ja
push
repnz
leave
movb
xchg
sub
aaa
adc
or
sbb
jmp
scas
and
in
std
push
jle
clc
enter
push
xchg
mov
dec
pushf
and
repnz
out
mov
add
mov
dec
xchg
lahf
lods
clc
rcll
movsb
aad
adc
push
cmc
test
and
js
inc
and
jns
pop
push
xor
pop
mov
pop
sbb
mov
xor
mov
add
push
sti
pop
or
fwait
push
pop
sub
push
xor
ret
push
cmpsl
int
cmpsb
or
mov
or
in
dec
into
push
sbb
loope
jge
mov
je
xchg
in
loopne
movsl
shlb
adc
fwait
push
push
sbb
out
rorl
xor
stos
sub
mov
push
sub
out
imull
cmp
and
imul
rcl
sbb
aaa
pusha
cmp
mov
xchg
or
inc
or
mov
xchg
imul
lret
arpl
aaa
in
hlt
sub
jno
sbb
nop
or
xchg
mov
add
inc
int
lods
and
and
loop
or
lret
push
dec
bound
repnz
inc
scas
sbb
inc
or
sub
imul
int3
and
pop
jmp
xor
jo
pushf
lahf
adc
push
lahf
pop
lods
cmp
arpl
mov
push
mov
push
aam
jmp
xchg
xchg
and
loope
sbb
js
mov
sbb
push
adc
gs
sbb
outsl
ret
add
xchg
sbb
push
push
das
aas
jle
jmp
notl
icebp
push
fs
sahf
push
test
ret
bound
adcl
neg
lea
mov
stc
mov
and
pop
enter
mov
sti
push
data16
scas
mov
cmp
xchg
xor
push
xlat
test
mov
ss
jmp
scas
xchg
leave
sbb
jle
xchg
and
jmp
jbe
cmpsl
lahf
jmp
addr16
dec
xor
sbb
dec
dec
adc
xchg
shl
lock
mov
jns
sarl
mov
jecxz
add
pusha
in
push
adc
sti
push
or
imul
aam
pop
test
push
sarl
imul
and
pop
sub
sbb
xchg
push
testl
ljmp
std
nop
test
dec
sub
insl
cmpsl
repz
dec
mov
fbstp
dec
addl
and
test
xor
sub
xchg
js
mov
adcb
std
jnp
pop
or
mov
pop
mov
add
addr16
xorl
fs
data16
sbb
scas
cld
test
int
and
cli
mov
add
dec
mov
idivb
jne
push
xchg
pop
sub
add
mov
pop
push
add
sbb
add
hlt
xchg
les
and
jns
xchg
inc
test
xchg
inc
pop
fsubs
movsl
scas
add
popaw
insl
add
call
and
sub
leave
aad
push
aaa
cli
ret
mov
sahf
subb
cmpl
mov
or
int3
sbbb
in
movsb
dec
add
xchg
leave
in
add
int3
ja
dec
daa
into
subb
sub
sub
ljmp
cltd
and
shll
mov
cmpsl
mov
out
test
movb
out
push
popf
mov
ljmp
out
lahf
loopne
aad
test
jns
andb
xchg
cmpsb
loop
inc
mov
xchg
shll
repz
pop
ljmp
dec
sbb
cmp
push
xchg
add
jno
pop
mov
cli
test
jp
push
push
aam
mov
add
mov
testl
leave
pop
shrl
xchg
bound
cltd
mov
sub
shll
fidivs
jae
cmp
cmpsl
mov
lret
push
mov
mov
clc
push
stc
rorl
sbb
add
movsb
lock
pop
xor
test
mov
scas
int
mov
fldl
xchg
xchg
fmull
les
jns
imul
sub
pop
mov
mov
push
mov
mov
stc
arpl
dec
xor
adc
cs
and
add
shl
xchg
mov
sbb
push
mov
stos
inc
mov
into
jge
mov
and
inc
je
iret
call
xchg
out
sub
xor
add
push
das
sub
stos
mov
out
negl
je
cmp
lret
test
push
cmpsb
sub
dec
dec
pop
and
cmc
jg
jmp
mov
dec
mov
rorb
mov
roll
jno
ss
popf
pop
push
int3
out
ret
jne
pop
adc
sarb
jmp
jmp
cmp
orb
imul
or
aam
mov
inc
jae
mov
test
sbb
iret
dec
sbb
popa
jl
xchg
and
mov
add
inc
and
adc
inc
jb
gs
fwait
pop
fcmovnbe
sbb
aad
xor
stc
int3
loope
push
push
push
sar
mov
jno
and
popf
and
pop
inc
push
out
adc
sahf
or
sbb
mov
cmp
pop
jl
notb
push
repz
arpl
sbb
pushf
inc
mov
fisubrs
mov
mov
cwtl
or
inc
stos
jle
push
sahf
fstl
repnz
cmc
mov
dec
xlat
jae
aad
mov
sbbw
jecxz
mov
xchg
das
dec
jns
subl
lahf
push
das
mov
xchg
mov
repnz
push
sarl
arpl
insb
fdivl
jmp
cmp
pop
mov
cwtl
lods
jb
stos
push
test
mov
push
stos
add
or
mov
aad
addl
rep
push
and
into
ficoml
xchg
popa
mov
in
mov
xor
pushf
rolb
in
jne
outsl
and
push
ficoml
aaa
xlat
cmp
dec
inc
rsm
aas
pop
popf
cmpb
inc
push
out
lea
scas
xchg
jbe
xlat
fwait
inc
fs
test
out
pusha
pop
dec
imul
in
push
inc
jle
and
lgs
arpl
inc
mov
mov
mov
out
in
cmpb
lea
pop
ret
insb
fisubrs
mov
sbb
adc
jle
ret
mov
xchg
jl
jmp
cmp
int3
shlb
addb
push
pushf
stos
repz
fidivrl
dec
adc
mov
mov
stos
std
xor
mov
and
inc
dec
pop
shll
inc
ficoml
add
ja
insl
pop
cwtl
ja
fdivr
nop
push
psraw
add
pop
jge
in
sub
adc
jl
cmp
sub
inc
imul
enter
and
or
cltd
mov
into
subb
or
repnz
and
lea
jno
arpl
push
cwtl
and
add
push
cwtl
repz
jp
add
loop
into
loop
cmpsl
xchg
leave
out
pop
mov
jns
aam
sbb
adc
aad
negl
gs
frstor
das
sarb
sar
int3
call
mov
movsb
jmp
pop
es
push
cmp
loopne
enter
inc
push
leave
insl
pop
test
jmp
movsl
ret
push
adc
jmp
add
imul
xlat
btc
test
jne
cmpsb
ss
stos
in
pop
add
jb
push
mov
push
out
adc
pop
xchg
sub
sub
jle
nop
mov
ficompl
int3
and
out
xchg
test
cld
mov
push
sbb
addr16
in
out
in
cli
or
arpl
das
xor
stos
cmp
sbb
scas
cltd
cmp
ss
cmp
jg
xchg
rclb
lock
add
mov
mov
dec
stc
outsl
sti
sbb
in
call
jae
loope
fcmovbe
rorb
cmp
mov
sbb
mov
arpl
xor
je
movsb
push
pushf
mov
cmpsl
sbb
movsb
outsl
push
movsb
arpl
fisttpll
cmp
cld
les
bound
shll
jae
inc
or
or
jmp
pop
or
push
popa
cwtl
stos
and
cmp
mov
pop
mov
bound
pop
xchg
add
mov
mov
dec
loope
xchg
dec
add
jge
lods
iret
loop
mov
fistps
mov
imul
xlat
dec
jp
insl
test
cmp
pop
ss
sub
ret
addb
decb
mov
jmp
xchg
mov
inc
mov
mov
xor
xchg
jmp
xor
dec
lret
sub
adc
cltd
into
popf
in
mov
aaa
sub
push
inc
rcr
iret
leave
adc
int3
xchg
cmp
hlt
out
pand
loope
stos
jl
insb
fnsave
add
or
sub
sub
shll
lea
push
push
mov
pop
int3
jne
jge
ret
sub
dec
lret
and
pop
inc
dec
cwtl
xchg
pop
sub
enter
mov
jns
in
dec
mov
mov
or
jbe
xchg
mov
imull
push
jno
and
and
leave
shll
mov
xlat
mov
mov
jmp
mov
push
push
add
cld
popl
push
dec
fidivs
or
call
mov
leave
shlb
xchg
arpl
mov
or
lahf
mov
shlb
cmpl
shl
push
arpl
movl
loop
mul
mov
dec
subb
or
sahf
and
insl
xor
xchg
fsubrs
aaa
ficompl
stos
cwtl
add
jl
sub
cwtl
pop
stc
js
add
lea
adc
ret
xchg
cmp
pop
test
xchg
sbbl
cmp
dec
in
in
lret
pop
les
test
adc
outsb
and
mov
pop
pop
and
dec
sub
test
jbe
lea
in
pop
adc
jmp
test
jl
or
imul
ret
cmp
jbe
lods
inc
stos
push
xor
jl
mov
cmpsl
sub
scas
mov
adcl
mov
pushf
iret
mov
sub
push
hlt
dec
push
lret
shrb
loopne
mov
add
mov
sahf
sub
in
movsb
cmp
xlat
cmpsl
add
and
xor
negb
xor
add
push
push
lods
popl
push
mov
jno
arpl
push
mov
lcall
outsl
push
mov
lods
xor
scas
pop
out
pop
push
je
movsl
sbb
lock
push
push
add
aaa
xor
out
fiadds
pushf
adc
xchg
xchg
mov
imulb
and
addr16
pushl
js
push
bound
cmc
adc
negl
mov
stos
adc
fisubl
mov
insl
aam
bound
cmp
inc
mov
pop
pop
call
add
inc
imul
js
jb
rcl
loopne
and
push
cmpsb
rcll
xchg
pushf
jo
fsts
xchg
mov
and
xchg
into
pop
int3
cmp
rcrl
lds
ret
pop
xor
add
cs
xchg
imull
jg
sti
insl
xchg
outsl
pop
bound
and
shlb
add
stc
cli
add
mov
xchg
jnp
enter
or
popf
mov
dec
dec
test
xchg
jmp
pop
sub
lock
repz
mov
inc
push
push
sbb
pop
lds
arpl
mov
insl
mov
mov
push
fwait
lods
scas
or
xchg
fsubrs
lea
inc
push
dec
sbb
repz
mov
mov
mov
test
fnstsw
xchg
or
dec
dec
aas
mov
mov
icebp
inc
lock
imul
push
mov
push
mov
loop
jecxz
es
and
cmc
xor
loopne
mov
stos
std
fwait
cltd
push
sbb
or
push
inc
int
lahf
and
out
or
add
jge
cmc
or
add
dec
lret
mov
add
out
les
cmc
dec
test
inc
lcall
mov
ljmp
jne
outsb
mov
mov
pop
pushf
dec
mov
enter
sub
cs
add
stos
hlt
adc
jge
pop
mov
jg
rolb
lret
xchg
cltd
jbe
sbb
mov
xor
adc
jnp
lock
push
jl
cmp
jbe
movsl
sbb
ja
push
in
xchg
and
or
outsb
xor
mov
and
or
and
insl
jp
aas
insl
xor
mov
add
loop
cmp
popf
jl,pt
ret
inc
scas
lahf
xor
outsb
js
pop
lods
adc
loop
jecxz
inc
sub
loop
movsb
inc
dec
addr16
dec
outsl
adc
insb
scas
imull
fcompl
jb
fldcw
cmc
mov
ja
cmp
imul
jb
gs
cmp
sub
loop
xchg
cmp
movsl
add
lcall
sub
int3
pop
movsb
jae
cmp
inc
movsb
idiv
inc
out
inc
ja
popa
push
decb
or
loope
jg
inc
sub
push
ret
or
xchg
mov
xchg
jmp
or
fwait
call
or
xchg
out
fidivrs
inc
js
mov
fadds
xchg
jge
addr16
in
push
mov
mov
ret
mov
scas
es
fildll
mov
push
dec
add
mov
aam
cmc
inc
mov
xor
pop
mov
loopne
gs
cld
jae
inc
mov
xchg
lods
movsl
cmpsb
iret
cmpsb
or
push
dec
and
jg
cmp
frstor
xchg
sbb
scas
in
sahf
outsb
mov
sub
mov
out
or
inc
loopne
popa
xor
pushf
in
clc
mov
inc
add
in
jne
cli
sub
pop
outsb
xchg
dec
cltd
shrl
lds
jns
dec
xchg
outsb
aaa
jge
jle
sbb
jbe
mov
mov
ds
shlb
sbb
mov
sahf
pop
fsubrs
call
add
repnz
testl
adc
fbstp
outsl
adc
cli
sbb
cmp
hlt
xchg
ret
xor
mov
loopne
mov
scas
pop
mov
add
in
add
les
sub
sarb
mov
clc
fcompl
adc
imul
test
mov
mov
dec
sahf
loop
cli
or
pop
xchg
adc
inc
mov
fwait
push
push
fwait
add
aaa
out
lea
es
sbb
cmpsl
or
mov
xchg
ja
add
pop
or
pushf
iret
or
ds
cmp
dec
pop
mov
cmp
fists
out
enter
out
mov
dec
cmc
aaa
xchg
inc
cmpsb
int3
rcll
lds
xchg
pop
xor
inc
jecxz
mov
aam
jae
jb
lods
xchg
sub
cli
push
xchg
lcall
cmp
int
inc
bound
mov
sbb
hlt
or
into
cltd
mov
iret
out
dec
jmp
out
nop
xchg
jb
aaa
or
bound
popf
jno
adc
adcb
bound
dec
insb
xchg
fbld
cwtl
mov
sbb
push
dec
std
sbb
jmp
and
mov
jle
loop
or
mov
data16
dec
cs
bound
cmp
push
insb
loope
xor
fistl
movsb
ret
lcall
xchg
loop
imul
mov
pop
roll
push
dec
mov
or
add
test
xchg
xor
and
insb
adc
stc
or
test
sub
add
loope
dec
scas
data16
adcl
ficoml
xorl
jge
xchg
fnsave
popf
mov
inc
loop
sarl
mov
cld
xor
dec
push
dec
mov
pop
jge
aas
cld
cmp
movb
lret
push
shl
arpl
mov
scas
jp
dec
sub
push
mov
cld
test
mov
addr16
push
push
decl
rolb
faddp
xchg
popf
and
pusha
in
sub
out
push
and
orb
dec
pop
pusha
std
iret
sbb
in
inc
mov
loop
xor
adc
lret
and
cs
xor
enter
sub
dec
aam
and
fisubs
cmp
stos
out
jl
xchg
fs
in
inc
ss
and
cmp
cmp
xor
imull
inc
lds
jne
jae,pt
add
jo
push
and
sub
rclb
insl
enter
and
notl
push
dec
test
int3
cs
mov
out
mov
mov
movsb
sbb
mov
ss
mov
pop
mov
xlat
jo
push
iret
daa
xchg
addl
push
dec
mov
sahf
push
stos
jl
mov
mov
push
in
ret
leave
jmp
in
mov
sub
sub
fs
sbb
mov
and
sub
mov
fistpll
fistps
mov
add
pop
mov
xchg
pop
insl
int3
inc
gs
je
js
fiaddl
fcmovnu
adc
lods
daa
add
push
out
and
rorb
mov
shl
push
mov
out
int
mov
scas
mov
jl
pop
sub
lods
enter
mov
je
cmpsb
ficoml
and
jmp
sub
rcll
cld
leave
stc
add
mov
mov
call
imul
jo
cmpsb
fnsave
fisttpl
repz
ret
add
nop
call
mov
dec
cmpb
shlb
stc
adc
mov
cmp
push
add
ret
test
int3
sahf
sbb
lahf
ret
loopne
pusha
xchg
cmp
ret
inc
adc
xchg
add
pop
fs
ret
push
push
popa
out
xchg
push
mov
jae
push
and
andl
imul
add
and
out
and
and
mov
into
out
push
inc
ds
xchg
outsl
pushf
cmc
and
inc
xor
sbb
sub
dec
sbb
insl
rcl
outsb
mov
dec
in
lahf
sub
das
dec
xchg
js
xor
jb
push
pusha
jp
mov
outsl
repz
jl
adcl
lods
hlt
add
neg
cmp
repz
and
sbb
les
iret
lods
mov
sub
jb
ds
aad
xor
cmc
ds
in
push
jp
xchg
ret
adc
aas
jg,pt
mov
lcall
test
adc
inc
fsubp
jne
ret
xchg
arpl
mov
lret
add
cli
in
popf
insl
inc
xor
cmc
shrl
adc
add
int3
jbe
or
cmp
loopne
ja
inc
xchg
adc
fisubrs
cmp
xchg
lods
xor
and
inc
cmpb
icebp
fs
call
insb
ja
cmpsb
int
pusha
repz
or
movsl
cwtl
cmp
daa
scas
xor
sti
inc
ja
and
xor
xor
pop
lds
push
or
rclb
inc
daa
mov
mov
out
mov
add
mov
mov
iret
popa
cmp
sub
sub
or
leave
cmp
sbb
daa
sbb
dec
lret
in
dec
and
scas
and
xchg
stos
stos
inc
out
ja
and
fistl
jp
cmp
int3
jecxz
sub
mov
add
in
roll
sub
sahf
mov
inc
mov
pop
sub
add
ds
and
and
arpl
sbb
xor
lds
sub
xor
mov
push
cmpsl
stos
cwtl
mov
cltd
mov
push
sti
xchg
pop
stc
out
xchg
cmpsl
mov
lcall
test
mov
mov
leave
sbb
push
hlt
loopne
ss
mov
mov
pushf
and
jnp
sbbb
lret
arpl
lret
ret
repnz
cmp
add
cmp
mov
push
jno
les
outsl
pop
mov
xchg
or
and
push
pop
dec
push
jl
jecxz
cmp
mov
mov
lret
cld
repz
daa
or
lret
out
push
push
cwtl
lret
sub
pop
movsb
std
mov
stos
cmp
pcmpeqb
les
push
or
int3
movsl
mov
jbe
jmp
scas
stc
jl
int3
loopne
jb
and
dec
xor
popf
sbb
add
test
ret
jge
xor
lcall
mov
out
jno
and
cmp
stc
xor
adc
push
and
das
dec
xchg
lcall
fisttpl
packuswb
mov
imul
shlb
stc
xchg
xor
or
xor
pusha
push
enter
inc
pop
enter
in
movsb
fiadds
aad
lret
into
add
lock
cld
in
xorl
outsl
clc
cmp
inc
insb
dec
mov
push
xchg
cmp
sub
mov
nop
or
jns
adc
sub
push
cwtl
shrb
adc
mov
jle
int
mov
out
dec
test
lea
aas
out
adc
push
xchg
push
sbb
sbb
in
mov
mov
out
das
inc
lds
xor
jno
divb
dec
inc
repnz
popf
sbb
pop
dec
lds
jae
clc
inc
pushf
mov
push
jl
lds
clc
inc
in
jp
adc
mov
in
adc
cmovle
fildll
adc
ret
sti
jns
fs
divl
in
stc
movsl
pusha
iret
xchg
push
call
aam
cli
jmp
cld
hlt
dec
and
add
pop
sub
lcall
pusha
popa
cwtl
or
fcoml
popf
mov
pop
pop
jns
inc
bound
mov
mov
outsb
daa
xchg
or
cmp
xchg
inc
mov
mov
pop
pop
push
xor
xor
mov
dec
std
push
daa
pop
std
shlb
insb
stos
jns
jns
std
dec
arpl
insl
daa
stos
push
aad
mov
dec
mul
xor
sbb
and
mov
cmpsb
stos
lock
cmp
js
push
mov
pusha
xchg
sbb
dec
imul
mov
adc
mov
push
mov
fwait
test
lock
sarl
stos
sub
insl
xchg
xor
test
mov
loope
rorb
ljmp
std
outsl
push
pushf
loop
in
dec
add
inc
shrb
fldt
inc
insl
lret
or
sub
addr16
dec
jl
es
cmpsl
and
push
push
mov
imul
out
push
lahf
cmp
in
testl
mov
mov
jmp
aas
xchg
or
hlt
cld
repnz
pop
or
add
mov
addr16
adc
aam
aad
cmc
add
enter
es
adc
adc
call
faddl
pop
mov
mov
filds
inc
push
stos
fdivrs
xor
xor
icebp
mov
lods
movhps
dec
mov
test
sbb
jl
sti
mov
stos
das
sub
mov
cmp
or
popf
in
pop
xchg
dec
lahf
jb
xchg
xchg
loop
test
sahf
xchg
xchg
nop
fcmovnbe
mov
pusha
or
cmc
loope
pop
cltd
into
orb
jo
andl
aaa
mov
out
mov
repnz
in
enter
daa
xor
mul
dec
enterw
or
and
push
cmpsb
in
repz
sbb
lods
jnp
sti
ret
add
ret
test
dec
lds
stc
adc
jp
dec
mov
xchg
lods
mov
mov
ret
js
push
mov
and
lock
adc
outsl
mov
enter
int3
mov
rcll
sub
xor
lret
icebp
subb
aad
pop
xchg
incl
lock
das
enter
or
sub
lcall
divl
les
lea
int3
cmp
cwtl
aad
shll
xlat
dec
popf
or
mov
adc
jb
push
fstl
std
bound
aad
mov
lcall
scas
popa
sub
and
or
insl
insb
mov
jle
add
pop
cmpsl
mov
push
inc
mov
std
aam
mov
sub
lea
cs
inc
xchg
pop
xchg
loopne
lock
mov
je
mov
out
or
outsl
in
rorl
push
aas
cmp
stos
xchg
add
lods
jne
cmp
ja
enter
dec
jg
loopne
cmc
test
popa
movsl
fcoms
in
jo
lfence
and
adc
movl
jecxz
sub
call
jo
ror
test
jmp
imul
cmp
clc
adc
mov
data16
pop
mov
xchg
fs
dec
mov
inc
jae
add
lret
dec
iret
in
out
cmp
inc
xchg
xchg
icebp
adc
jg
push
stc
jbe
negb
adc
or
das
aaa
fnstenv
repnz
or
xchg
push
lahf
mov
xchg
arpl
mov
fldenv
sbb
mov
xor
cwtl
xchg
dec
push
mov
test
jp
into
cld
fmull
aas
es
and
pushf
aas
icebp
fistl
add
std
pop
rol
xor
mov
repz
les
inc
mov
sbb
add
mov
add
loopne
les
in
jo
in
mov
and
dec
aaa
mov
xchg
pop
mov
xorb
add
cmp
and
adc
xor
lret
orl
std
movsb
rclb
sarl
dec
dec
push
std
jne
inc
jp
mov
pop
or
push
pop
addr16
loop
adc
adc
cmp
pop
xchg
sahf
sub
fidivs
mov
das
mov
les
fsubl
fcoms
jns
mov
ss
sub
mov
test
mov
fdivrs
fdiv
adc
mov
popa
cli
mov
add
cmp
js
arpl
dec
faddl
mov
aad
js
push
sbb
push
in
cmp
pop
pop
lahf
sbb
and
mov
mov
mov
inc
and
cmp
inc
out
insl
imul
sub
pop
nop
inc
stc
xchg
rolb
fisubrl
pushf
push
inc
mov
pop
xor
cli
gs
pop
in
adc
cmp
and
add
sub
jno
xchg
push
and
mov
fcomip
mov
fidivs
push
cmc
jle,pt
jp
pop
push
jns
ja
loop
mov
aas
lahf
lahf
and
fstl
pop
mov
loopne
lock
pusha
push
cmpsb
mov
pop
scas
ja
cmpsb
pop
into
push
out
rol
dec
in
pause
jbe
push
mov
mov
lret
mov
ss
lock
xor
or
mov
adc
adc
mov
inc
mov
mov
pop
imulb
sbb
in
sbb
fisttpll
dec
sbb
and
rcrb
mov
lret
fmulp
loop
out
mov
mov
mov
or
sbb
leave
mov
cmp
ja
push
icebp
fs
test
dec
cld
cmp
daa
add
push
sbb
pop
inc
xor
rolb
mov
call
push
push
mov
icebp
fs
jg
insb
leave
enter
test
int
and
pop
aam
sarl
mov
shl
jle
mov
jbe
inc
sub
add
into
dec
and
lcall
mov
jo
or
hlt
outsl
into
rcrl
dec
xchg
mov
sub
pop
lods
mov
jecxz
ret
and
inc
subl
or
and
into
push
sbb
add
xor
dec
fcomp
push
pop
iret
push
jne
inc
push
and
cmp
push
cmp
jb
pop
fiaddl
sarb
dec
sti
sub
in
mov
pop
pop
cmp
icebp
test
push
dec
stos
mov
cld
popa
push
cmp
fwait
sbb
pop
push
ret
call
test
mov
jnp
mov
xchg
loop
js
popa
sar
or
fxtract
shr
lret
stc
push
incb
cwtl
jns
sub
xchg
jae
mov
repz
in
fnsave
ret
ret
cmp
push
add
sub
mov
mov
scas
xor
xchg
and
xor
les
jns
aas
push
fbld
or
les
push
mov
pop
testb
pop
lahf
jae
pop
lahf
dec
cmpsb
loop
mov
mov
ret
out
pop
pop
fs
fsts
imul
rcll
pop
xor
push
daa
sbb
cltd
fwait
popf
pop
in
in
pop
scas
iret
push
mov
sarl
push
jae
cmpl
inc
call
sub
and
mov
lds
jb
mov
repz
addr16
lods
inc
dec
pop
pop
adc
push
or
add
or
mov
jecxz
push
mov
xchg
pop
adc
daa
aas
mov
pop
aad
sub
pushf
in
scas
cwtl
push
or
mov
or
loop
add
lock
loope
fldl
in
mov
push
jmp
andb
leave
pop
loop
xchg
pop
lods
dec
sub
inc
addl
sub
fdivl
js
and
ljmp
cmp
stc
pop
popa
cmpsb
stos
xlat
jne
enter
add
push
outsl
movl
ljmp
add
inc
jnp
fidivs
fwait
push
call
push
inc
or
fld
xchg
add
jp
pop
pushf
nop
xchg
in
test
sub
cmp
fldt
mov
daa
mov
xor
inc
push
aam
and
int
in
mov
aam
sbbl
mov
xlat
rcrb
outsb
jnp,pt
sub
fstps
cmp
lret
push
jb
pop
add
mov
pop
cltd
scas
fidivl
xor
or
repz
repnz
inc
cmpsb
mov
nop
pop
dec
cmc
adc
mov
int
pusha
push
arpl
mov
and
jp
jno
clc
xor
mov
sti
push
xchg
push
mov
dec
lea
mov
and
mov
clc
sub
loopne,pn
push
jge
sti
inc
ret
imul
clc
inc
cltd
cmp
jbe
cli
shlb
ljmp
push
cmp
mov
inc
fld
test
xchg
fwait
test
jmp
fs
rcrb
test
rolb
bound
nop
dec
pop
xchg
adc
sarl
pop
aas
mov
scas
in
fisubs
add
je
and
daa
sahf
pop
mov
cmp
pop
mov
hlt
pop
mov
lods
loope
jle
and
cmp
movsb
dec
sbbl
mov
movsb
mov
pop
add
push
cmc
lret
dec
mov
int
cmp
es
insl
inc
xchg
gs
out
in
add
test
call
push
mov
mov
xchg
jno
rorb
subl
or
mov
movsl
mov
lcall
in
fidivrl
aam
inc
push
cmp
push
cmpsl
insl
cmp
and
in
sahf
clc
rcrl
repz
lret
aam
push
pushf
inc
jbe
dec
pushl
dec
pushf
pop
clc
mov
ret
push
mov
loop
inc
add
gs
nop
ret
scas
mov
adc
stos
fnsave
pop
jmp
enter
add
mov
pop
out
xor
js
dec
mov
mov
aas
shlb
pcmpeqb
dec
clc
cmp
in
nop
adc
mov
cmp
inc
adc
pop
out
aad
out
sbb
cmc
dec
aam
and
jmp
xor
lock
enter
fstl
mov
jmp
xchg
inc
cmp
or
enter
xchg
mov
fwait
cmp
out
test
pop
push
and
mov
int
and
ds
adc
clc
clc
xor
mov
xchg
or
cs
scas
inc
xor
aam
sub
stos
xchg
cmp
add
fists
test
jle
mov
loope
outsb
stos
inc
scas
fisubl
scas
add
pop
cmp
stos
stc
mov
inc
push
nop
decl
mov
outsb
outsl
xchg
pusha
mov
popf
arpl
jg
test
sbbl
andl
inc
mov
fwait
lret
out
scas
mov
xor
iret
jns
lock
dec
inc
cltd
lahf
repz
fwait
orb
rorw
scas
aas
mov
rorl
push
inc
imul
insl
stc
mov
inc
insb
jo
jae
mov
sub
mov
or
sarl
xchg
call
xchg
cmp
addr16
inc
and
pop
mov
mov
cmp
jno
out
icebp
inc
cmc
pop
mov
test
add
xlat
outsl
and
sub
jmp
fs
lcall
lcall
push
aam
inc
loopne
mov
add
pop
enter
mov
inc
test
cmp
dec
sub
leave
imul
repz
adc
insb
fxch
stos
clc
in
gs
enter
ret
repnz
add
or
test
stos
iret
in
lods
leave
jmp
mov
inc
cwtl
out
dec
pushl
or
pop
imul
or
pop
shlb
adc
pop
or
sti
mov
mov
mov
xor
movsl
fs
aad
lahf
sahf
push
ror
xor
or
xchg
loopne
add
negb
mov
or
ret
xchg
jge
sub
sbb
adc
or
mov
xchg
jge
inc
test
lret
rclb
sbb
mov
imul
or
inc
out
push
mov
test
lds
xchg
adc
bound
aam
lods
sub
mov
sub
sub
xchg
or
mov
int
push
push
pop
sub
jmp
mov
jmp
dec
mov
ja
cli
in
lea
dec
inc
test
jnp
stc
inc
pop
loop
and
jnp
push
popf
mull
jne
dec
iret
cs
inc
inc
dec
ficoms
sbb
mov
pop
xchg
out
adc
ljmp
sub
test
sar
aas
push
addb
pop
mov
and
sub
fnstenv
into
xchg
and
mov
xor
sub
daa
inc
cmp
cmp
fnstcw
cmpsl
and
push
jge
and
jo
es
lock
clc
add
adcb
pop
lds
stos
add
jnp
add
sbb
aam
and
popf
aad
addl
and
cli
pop
mov
mov
pop
movsb
daa
cmc
repnz
adc
insl
lret
sub
xlat
pushf
js
orl
idivb
pusha
push
test
std
pop
ret
test
add
mov
mov
dec
xor
or
loope
adc
adc
pop
push
or
push
inc
push
mov
jne
adc
dec
pusha
mov
lcall
or
or
pop
mov
dec
sbb
jae
imulb
pop
xor
daa
movsl
std
js
shll
mov
insl
scas
aaa
mov
pop
js
ja,pn
inc
dec
xor
fs
int
cld
lret
ficoms
cltd
push
std
arpl
mov
inc
ret
movsb
imul
dec
test
int
ret
inc
or
cmp
in
inc
jp
outsl
dec
jmp
mov
mov
outsb
cmpsb
inc
mov
insl
and
jne
mov
out
jle
int3
inc
loop
cld
sub
mov
shlb
mov
push
sub
sahf
push
fisttpl
pop
push
jle
mov
ljmp
pop
lods
dec
xchg
cwtl
das
xor
cmc
hlt
fs
rorl
scas
mov
stc
jmp
movsb
movsb
mov
and
and
cmp
pop
lock
inc
lcall
add
lret
stos
cmp
xlat
pop
and
xor
les
sbb
mov
cltd
mov
jb
xchg
push
xchg
adc
xchg
cs
sbb
pop
xchg
jmp
repz
push
jae
ja
or
mov
and
mov
jl
stc
sahf
sti
enter
mov
jno
std
lea
mov
inc
cs
jae
jb
inc
ret
sub
mov
imul
jle
aas
and
jmp
std
mov
jnp
mov
mov
cwtl
and
jns
faddp
insb
addr16
push
and
test
pop
adc
call
lret
push
inc
sbb
sbb
repz
lods
fldenv
pop
ret
icebp
jecxz
mov
dec
ficoml
dec
push
sbb
mov
push
fcmovnb
xchg
fcompl
scas
sbb
cmc
fs
cmp
push
sahf
cltd
das
pop
dec
std
sbb
es
fwait
rcrl
into
test
pop
push
xchg
xchg
xor
xchg
or
ss
enter
scas
jne
mov
dec
xchg
jle
les
adc
int
xor
jnp
cli
jg
xchg
mov
add
inc
loopne
ss
jmp
enter
loope
movsl
xchg
mull
and
mov
or
dec
xchg
mov
sti
jb
pop
xchg
rclb
or
int
fdivrl
out
fsubrl
dec
out
jmp
mov
cmp
mov
pop
fildll
fs
insb
daa
loopne
loopne
rcll
fs
pop
int3
ret
add
sbb
add
jb
jne
mov
push
mov
push
lahf
cmp
jmp
clc
enter
daa
sbb
add
push
hlt
outsl
rcll
sub
aad
lret
cmp
loope
call
mov
cld
fldcw
stc
andl
pop
shll
dec
and
pop
cmp
lret
sub
mov
insb
out
rcl
push
inc
dec
mov
mulb
or
jbe
push
std
imul
andl
adc
push
sub
mov
lret
pop
sbb
lods
mov
pop
je
cmp
mov
adc
das
into
bound
fwait
js
and
jge
sub
jae
mov
push
sbb
data16
dec
fdivs
das
dec
in
dec
dec
nop
push
insl
test
dec
push
icebp
repz
ss
cmp
lcall
adc
sti
push
pusha
cltd
cmpl
test
cli
aaa
sub
mov
sub
and
pop
hlt
cs
inc
push
jmp
add
lahf
xor
dec
incl
xlat
dec
add
push
cmpb
sbb
mov
pop
xor
xor
pop
xchg
sbb
mov
int
das
or
inc
mov
mov
push
mov
scas
xor
mov
push
clc
mov
int
add
jle
sbb
cmp
mov
lods
scas
test
int
cmp
or
insb
insl
add
pop
adc
push
int
cmpl
das
or
or
dec
icebp
ljmp
sti
js
dec
jecxz
mov
out
jbe
cltd
sarb
sub
in
sbb
and
xchg
fstps
cmp
fdivrs
dec
lods
inc
ljmp
aad
sbb
leave
js
test
sbb
scas
xchg
or
inc
dec
sub
dec
pop
out
pop
jle
stos
mov
xchg
rorl
push
imul
into
movhps
xlat
cmp
dec
dec
les
and
fsubl
call
fsubs
fdiv
les
scas
insl
test
push
insb
and
sub
jns
loopne
sbb
jns
pop
adc
adc
pop
jae
in
xor
inc
pop
jb
sarl
push
mov
xchg
pop
bound
and
pop
push
sub
out
cs
mov
mov
test
pop
sbb
xchg
jnp
scas
sbbl
pop
mov
imul
xchg
push
fidivrl
in
jecxz
jnp
and
mov
jge
lea
jae
push
jle
jb
popa
add
or
xchg
cmpl
lods
out
orl
jmp
jnp
mov
int
insl
gs
adc
outsb
std
repz
ljmp
ficompl
mov
mov
clc
mov
enter
int3
incl
js
popa
inc
imul
pop
iret
or
add
xor
popf
mov
fcmovnu
call
add
stc
xor
movsl
insl
movsl
sub
add
movsb
sub
fcmovnbe
psadbw
sbb
test
push
movsl
mov
jno
sub
or
jns
sbb
insb
pop
addr16
xorl
cmp
mov
mov
lods
sub
nop
sub
xchg
xor
jnp,pn
daa
jmp
test
cwtl
je
push
jmp
pop
inc
xchg
es
push
adc
mov
xchg
leave
cmp
mov
aaa
push
ja
jae
icebp
insb
in
and
jmp
or
mov
sub
and
inc
mov
mov
mov
jo
sbb
and
mov
dec
cmp
ficoml
pushf
sbb
cmp
push
imul
popf
xchg
and
pop
aas
test
dec
dec
dec
fisttps
adc
sbb
push
or
jno
push
sbb
xor
mov
xor
adc
inc
add
fistl
aad
shrb
sarb
mov
inc
sub
cmc
add
xchg
jge
popf
push
push
movsb
jmp
jbe
fdivrl
dec
leave
sub
push
xchg
lds
sub
sub
movsb
mov
ss
dec
sbb
mov
add
jo
mov
out
jecxz
repz
or
mov
and
in
loope
xchg
insl
scas
push
xchg
lcall
xchg
adc
imul
jg
ret
out
mov
js
lea
pop
xchg
mov
shrb
lds
and
dec
movsl
shrl
jge
jnp
stos
inc
add
sub
xchg
cmp
loopne
rcrl
lods
sahf
inc
hlt
andb
cli
xor
adc
pop
jl
sub
adc
test
stos
sub
js
xor
or
aas
and
pop
repnz
dec
pop
jnp
sub
scas
sbb
mulb
stc
ret
fsts
hlt
aam
sbb
sbb
push
mov
das
pop
data16
push
jae
mov
inc
enter
pop
xchg
pop
cld
jmp
xchg
mov
mull
ja
xchg
stos
cli
aaa
stc
mov
int3
fadd
push
cli
ljmp
inc
test
mov
sarb
adc
lret
into
jmp
push
mov
aas
lahf
mov
sti
xor
cvtps2pi
dec
cmp
movsl
xor
adc
orb
mov
rol
aad
push
push
add
jg
shl
outsb
mov
outsb
push
sbb
mov
dec
out
cld
popf
loopne
aas
push
mov
test
xchg
lock
cmp
sub
jo
in
loope
ja
inc
xor
push
mov
fwait
out
pop
add
xchg
cltd
xor
push
or
test
mov
xchg
cmc
into
mov
bound
icebp
int3
stos
adc
pop
push
sbb
sub
pop
push
push
lods
hlt
push
js
inc
les
push
test
sub
aam
loopne
dec
cmc
div
sub
xlat
aam
fdivrl
sub
inc
jmp
cmp
repnz
loope
fisttpll
loop
inc
pusha
mov
mov
push
imulb
sub
push
aaa
lods
cmc
push
cs
xor
push
pop
or
out
xor
shr
movsl
or
add
subb
loopne
cwtl
lods
fwait
mov
sub
addl
push
mov
jnp
in
jp
xlat
adc
jb
add
fisubl
or
shrb
sub
cmp
add
das
cmp
lods
cmpb
mov
imull
jp
faddl
scas
mov
stos
int3
pop
jmp
and
sub
rcr
std
inc
or
out
cmpsl
dec
arpl
dec
and
xor
dec
pop
sub
ds
add
lds
test
and
push
andb
iret
sub
sub
mov
in
mov
cld
stc
lahf
popf
test
out
movsl
dec
cmovo
sub
adc
pop
cmp
add
push
pop
out
push
out
mov
shrl
je
lods
push
cwtl
fs
xorl
mov
mov
mov
shrl
out
lcall
mov
enter
mov
cmp
push
out
fs
fnstcw
scas
pop
adc
inc
xor
jl
fisubs
leave
xchg
mov
movsb
std
ja
sbb
scas
ss
mov
xchg
cmpsb
push
sar
jle
mov
testb
fildll
enter
inc
xchg
aaa
dec
sbb
pop
lock
jl
sbb
adc
out
and
jno
pop
push
dec
in
decb
sub
adc
mov
pop
inc
or
fadds
gs
and
cmp
mov
lods
imul
in
cwtl
out
mov
xchg
into
jae
daa
lods
ret
jne
or
add
or
clc
inc
jl
xchg
push
pop
daa
popa
sub
fs
mov
insl
mov
dec
lods
jb
into
cmp
add
cmp
push
lahf
push
lret
xchg
lods
jmp
lcall
inc
cmp
and
push
dec
stc
repnz
lods
nop
out
or
ret
push
aam
dec
imul
add
cmpsb
pop
adc
std
mov
dec
jns
lret
pushf
outsb
imul
mov
dec
xor
add
mov
cmpsl
cs
inc
out
out
dec
popf
leave
mov
inc
pop
mov
adc
aaa
mov
and
insl
xchg
mov
arpl
je
sbb
sub
sbb
in
jno
in
push
popf
cmpsb
or
mov
xchg
in
xlat
test
sub
adc
andb
and
xchg
jecxz
in
pop
inc
dec
lahf
pop
jle
insb
outsl
inc
adc
xchg
mov
popa
popf
mov
push
xchg
sub
xchg
mull
pop
push
inc
outsl
enter
and
dec
sahf
pop
stos
xchg
mov
out
cld
mov
insb
lcall
cwtl
call
push
dec
or
int
outsb
inc
inc
scas
shlb
add
mov
jmp
scas
lock
call
jecxz
and
mov
dec
pop
adc
mov
push
mov
mov
dec
sarl
mov
lods
in
mov
jmp
pushf
stc
or
push
xchg
out
mov
cmp
dec
dec
ror
in
daa
pop
int3
aaa
test
xchg
xor
pop
nop
or
incl
or
sti
js
cmc
mov
sbb
push
scas
call
jle
cmpsl
or
xchg
push
scas
pop
push
movsl
fsubrs
fwait
dec
arpl
sarb
outsl
inc
xor
or
rorb
xchg
jne
xchg
inc
int
pop
data16
movsl
je
cmp
test
fnclex
lahf
xchg
daa
daa
inc
push
lds
aam
out
fldt
adc
leave
jne
and
and
sub
cltd
cmpsl
lock
dec
insl
sbb
add
notb
ljmp
cmp
lds
cmp
dec
insw
mov
and
mov
std
in
test
mov
sub
lds
and
inc
iret
std
in
add
loopne
outsl
xchg
push
jno
dec
cltd
dec
lods
sub
js
xlat
adc
lods
add
pop
xchg
subl
cs
loope
add
loopne
fldt
jge
ret
cmpb
orl
pop
fsubl
jle
pusha
pushf
pop
rorb
jl
sub
out
ds
in
jae
adc
or
imul
mov
loop
mov
jno
jl
and
rcrl
cwtl
aas
xchg
mulb
stos
inc
fadds
dec
lock
add
dec
into
sbb
mov
xchg
pop
mov
push
dec
movsb
loopne
sti
in
fldt
int3
pusha
fs
iret
mov
adc
aas
cld
jl
adc
hlt
pop
cmp
int3
and
pop
cmp
cmpsl
iret
inc
cli
stc
and
int
sbb
mov
pop
cmp
cld
outsl
stos
sbb
xchg
aad
or
mov
dec
lcall
add
repnz
push
test
xchg
cmp
xor
xor
inc
sti
xchg
lds
fcoml
lea
fcompl
inc
lods
xor
es
push
mov
test
les
inc
add
xor
popf
mov
add
pop
lock
mov
xchg
cmp
in
test
pop
sub
inc
jp
shll
mov
adc
mov
shrb
adc
js
clc
xchg
jmp
stos
jae
mov
mov
xor
or
fcompl
jae
ljmp
sub
cmpsl
imul
and
xor
sbb
dec
pop
popa
dec
pop
pop
push
jl
pop
ja
pop
cmp
ja
mov
stc
aad
fimull
lods
lods
jo
rol
aad
mov
inc
in
sbb
push
lds
sbb
xchg
mov
icebp
cmpsb
ret
pusha
mov
or
popf
jb
test
pop
pop
cli
shrb
push
and
add
ja
sub
mov
dec
pop
ljmp
sbb
bound
add
mov
test
add
sahf
push
movsl
mov
cli
mov
xchg
sbb
ja
jl
add
or
push
xor
pop
and
add
divl
cwtl
mov
pop
jno
dec
imul
push
jge
sub
fcom
pop
adc
cmp
dec
mov
add
or
pop
js
pop
sbb
rorb
mov
dec
sub
jo
xchg
aas
pop
push
mov
ja
push
or
mov
sub
sbb
dec
or
xchg
lret
or
cmpsb
add
xchg
cmp
and
pop
fcoms
adc
mov
xlat
into
pushf
out
mov
repnz
ja
test
shl
imul
mov
repz
cwtl
jle
adc
fdivr
das
int
data16
adc
inc
arpl
pop
ss
aaa
inc
mov
sub
pop
push
sub
mov
inc
andb
mov
push
popl
adcl
ficompl
scas
scas
inc
pop
and
nop
dec
sbb
fisttpl
inc
lods
add
inc
aad
ljmp
test
mov
das
xchg
xchg
lcall
loopne
lock
push
and
xchg
cli
dec
in
insb
movb
jge
shl
jns
fisubs
lods
inc
in
mov
xchg
test
lea
loope
iret
je
xchg
xchg
mov
leave
and
pusha
testb
sub
adc
inc
jno
ljmp
sahf
shrb
or
dec
cld
sbb
dec
leave
inc
sub
test
out
bound
jl
adc
mov
add
xchg
xor
mov
xchg
jne
dec
cmp
stc
jg
mov
cmc
xchg
in
xchg
xor
sti
cmp
orb
push
loop
insb
ljmp
and
sbb
xor
mov
mov
adc
or
adc
loopne
out
pop
xor
loope
lds
pop
mov
xor
clc
bound
xchg
jbe
cmp
insb
adc
xchg
aad
lret
xor
sahf
push
mov
dec
scas
mov
sbb
icebp
fucomip
fwait
sub
push
movsl
out
out
add
std
shll
mov
jbe
pxor
ret
hlt
xor
mov
cwtl
rclb
sub
cmp
mov
test
lods
and
jo
sbb
jne
or
mov
ret
push
dec
inc
cmp
popf
cwtl
jle
dec
mov
scas
jecxz
mov
popl
dec
stc
neg
loopne
in
xchg
pop
pushf
iret
xor
dec
and
push
and
xchg
or
or
cmp
inc
push
jmp
fisubl
push
movsb
inc
push
rcrl
out
js
out
adc
mov
ret
mov
shrl
scas
xor
inc
out
push
js
add
cs
jbe
mov
cmpsb
adc
pop
and
in
push
xchg
or
push
or
sbb
add
dec
or
pushf
pop
inc
xor
sbb
sbb
in
pop
sar
and
cmp
or
jb
jg
int3
cmp
xchg
out
out
test
cmovl
repnz
mov
insb
test
mov
aam
jp
add
mov
mov
jae
subl
push
push
std
cmpsl
data16
mov
mov
or
lods
push
sbb
mov
dec
mov
push
cmp
push
int
add
and
inc
daa
adc
divb
cwtl
and
adc
and
fcomip
fwait
test
test
and
mov
mov
out
push
cld
cmpsb
cmp
sti
out
nop
mov
lds
dec
inc
lods
test
fadd
push
cmp
xchg
into
cmpsb
lock
sbb
mov
inc
mov
add
and
cmpsb
inc
jge
or
sub
ret
and
insb
mov
dec
push
aaa
sarb
ds
jge
jb
gs
scas
out
add
adc
lahf
sbb
inc
loop
mov
cli
pushf
icebp
out
cmp
xchg
in
pop
add
sarb
xor
cltd
xor
into
fcomip
lods
js
pop
sarl
push
sbbb
jg
aad
stos
fiaddl
inc
neg
fmuls
pop
jl
and
sbb
push
mov
out
dec
sti
mov
pop
dec
lret
repnz
or
push
mov
sub
les
jo
mov
add
push
les
and
adc
mov
push
repnz
test
cmpsb
jge
cli
fnstcw
or
mov
fcompl
sahf
push
insl
das
aad
xor
adc
mov
test
js
cvtpi2ps
andb
pop
adc
lahf
pushf
lahf
lret
xor
push
loope
jle
mov
dec
jp
jge
dec
ret
mov
cmc
lret
lcall
rol
mov
push
scas
incb
cli
dec
add
mov
loope
pop
mov
dec
daa
loopne
icebp
rorl
jl
jp
cmp
sub
mov
xchg
sbb
inc
jl
mov
inc
sbb
shrl
outsl
rcl
adc
sahf
push
sub
and
ja
jnp
or
mov
xlat
mov
shrb
cmpsl
dec
adc
push
mov
popa
ljmp
mov
push
lahf
push
mov
adc
adc
adc
push
pop
fidivrs
and
cmp
test
je,pn
shl
pop
mov
fisubs
shll
cmc
in
outsl
jecxz
cld
jecxz
push
leave
jecxz
mov
cpuid
outsl
dec
mov
pop
out
inc
cwtl
call
mov
shlb
out
out
scas
cltd
cltd
push
outsb
ss
sbb
je
adc
mov
cmp
cs
ss
test
es
sbb
cmp
call
cmp
in
subb
and
mov
inc
mov
jmp
in
sti
loope
push
or
icebp
test
stc
data16
mov
adc
fsubs
cmc
or
mov
cltd
mov
or
fisubl
jns
mov
inc
es
das
fidivrl
cld
and
jne
cmp
aaa
push
pop
cmpsb
sub
hlt
inc
mov
cmpsl
xchg
dec
cmp
mov
xchg
cmp
or
aaa
mov
adc
push
sbb
cwtl
pop
adc
fmull
sbb
mov
and
or
push
mov
and
lods
add
or
int3
pushf
ret
cmpsl
fdivrs
jns,pt
ret
arpl
std
cmp
in
fs
ljmp
push
inc
jns
cmc
push
and
pop
movsl
mov
fisubl
and
pushf
pushf
sub
fdivs
dec
test
push
aas
fistl
push
xor
std
xor
push
xchg
ljmp
and
fdivrp
out
dec
xchg
lcall
cli
pop
jns
clc
mov
mov
pop
movsb
push
cmp
cltd
std
push
testl
lods
mov
or
subl
inc
fwait
mov
mov
sbb
add
dec
push
cmpsl
pushf
dec
arpl
mov
daa
les
dec
loop
out
fnstcw
lret
mov
mov
and
faddp
add
sub
std
add
shrl
sub
imul
and
cmp
jns
jmp
addr16
jae
jo
push
lahf
popf
into
pop
call
sub
in
push
out
ret
mov
sub
pop
repnz
or
add
test
sbb
jp
pop
sub
mov
popf
pop
add
iret
rclb
jns
or
sbb
inc
cli
mov
cmp
jp
in
ret
mov
mov
cs
rolb
pop
jp
out
inc
and
fdivrs
jno
sbb
out
jl
lods
cltd
mov
mov
ja
clc
jae
xchg
dec
pop
js
test
sbbl
cld
les
and
fldl
pop
stos
scas
adc
adc
xor
stos
xchg
push
ret
jae
lahf
popa
mov
xor
out
adc
pop
inc
lods
jne
fstpt
and
mov
xor
inc
sahf
mov
mov
adc
pop
ret
jle
lea
movsl
aam
adc
xor
loope
mov
add
test
and
push
or
push
mov
ljmp
inc
add
fcomi
pop
pop
in
push
hlt
clc
sbb
daa
stos
dec
rolb
movsb
or
pushf
movsb
frstor
int3
cmpsl
jge
lcall
shrb
mov
dec
or
push
cltd
hlt
inc
lods
adc
add
out
xchg
sar
and
fistps
sbbl
xchg
jo
push
mov
xchg
out
mov
jbe
xor
shll
jg
jo
xchg
ja
incl
jmp
mov
iret
and
pusha
scas
pop
sbb
inc
mov
pop
hlt
xchg
fildll
and
sbb
movsb
adcl
or
fwait
mov
rorl
mov
cwtl
adcb
sar
test
cli
js
inc
cmpsb
cmp
dec
inc
lcall
clc
sub
cmp
dec
push
sbb
and
int3
cmp
sbb
cmp
add
insl
dec
sbb
and
aaa
shrb
jb
popf
xor
or
mov
xor
inc
scas
fcompl
dec
dec
fnstenv
xchg
stos
js
lods
stos
scas
scas
and
push
xor
jg
push
out
pop
hlt
xchg
jb
mov
pop
les
sti
sub
jne,pn
das
mov
jle
mov
mov
or
sbb
add
ljmp
hlt
jp
sbb
test
out
dec
ret
jae
add
mov
dec
pop
mov
pushf
repnz
lock
adc
xchg
fwait
mov
or
sub
mov
cmpsl
pop
lret
jecxz
add
outsl
add
pop
jmp
rcrl
jge
mov
push
jmp
xchg
roll
pop
rcrl
lods
sub
ret
lds
pop
inc
xor
cmpsb
addb
ss
dec
fstpl
dec
or
outsl
dec
xlat
jmp
ret
jge
sub
jle
fcompl
filds
sbb
in
inc
icebp
push
loop
jae
xor
sub
test
push
add
xlat
loopne
or
sbb
enter
sub
jnp
add
subb
mov
rcl
mov
sub
in
nop
pop
lock
call
fisubs
adc
mov
outsl
test
imul
pusha
sub
mov
fildll
cmpsl
push
imul
fisttps
cmpsl
out
pop
lds
xchg
push
jnp
loope
out
mov
fidivrs
and
aad
fwait
sub
push
xchg
inc
bound
jmp
fs
sbbl
pop
push
dec
xor
pop
xor
sub
fsubl
imul
inc
xor
insb
sub
xor
outsb
jns
mov
jl
dec
loopne
in
fnstenv
insl
lods
aas
test
and
es
int
fisubrs
xchg
fdivrs
lea
mov
dec
jno
ljmp
mov
lock
aad
push
bound
movsl
push
jo
lods
adc
sbb
mov
lret
jbe
and
add
insb
out
add
jge
inc
test
and
jmp
shlb
jno
pop
jmp
sub
loop
sbb
pop
push
repz
xchg
loopne
insb
push
aas
fisubs
dec
or
jl
xchg
insb
stos
test
jnp
imul
push
ret
jmp
mov
sbb
ds
inc
mov
not
mov
fldpi
or
push
lods
sbb
mov
jge
stos
and
jge
add
adc
mov
movsb
dec
cmpsb
iret
pop
sbb
sbb
jb
and
or
daa
lock
frstpm(287
push
mov
mov
sbb
and
std
mov
hlt
das
mov
int
aam
xor
je
lods
repz
or
lock
sub
out
loope
stc
fildll
stos
rorl
lods
cmpsb
stos
lods
add
scas
in
sub
nop
add
loope
test
cs
das
cmc
jb
sub
lock
fstps
nop
pop
sub
lcall
cld
xchg
sti
adc
out
push
and
mov
clc
mov
jns
es
rcl
xor
cmpsl
pop
stc
sarl
jl
pushf
lea
sub
clc
insb
icebp
addl
loop
mov
nop
sub
pop
push
ss
or
pop
adc
add
std
inc
outsl
adc
pop
jne
inc
js
shll
mov
pop
xchg
adc
cli
cwtl
jnp
mov
push
add
xchg
pop
lea
arpl
push
je
es
add
inc
add
popf
xchg
movsb
cmpb
and
pop
pop
je
repnz
mov
int
lcall
and
movsb
xor
scas
xor
out
mov
test
adc
test
and
mulb
data16
mov
push
bnd
nop
add
movsb
mov
fs
arpl
jns
pop
push
in
mov
cli
mov
cs
movsb
pusha
out
mov
pop
inc
mov
lahf
lock
mov
jae
jle
fdivrl
cltd
xchg
fmull
into
pop
inc
test
ret
out
lock
xor
ljmp
mov
dec
add
jle
nop
int
cwtl
xor
sub
sbb
mov
sub
lea
sbb
push
adc
push
leave
shll
and
shrb
lahf
dec
sub
mov
xchg
sbb
add
xchg
ljmp
dec
mov
stc
bswap
xlat
jl
add
mov
sti
add
jp
mov
jns
inc
loopne
decl
cld
inc
sbb
adc
mov
xchg
xor
cbtw
test
dec
lret
pop
jp
insl
mov
pop
mov
pop
inc
test
cmpsl
or
push
xchg
xor
daa
jnp
test
cwtl
sub
mov
and
gs
jecxz
pop
or
clc
aam
imul
mov
cli
xor
push
repz
mov
lods
loope
cs
xchg
push
in
push
pop
xor
pop
aam
fcomps
mov
aas
push
shlb
out
insl
cli
insb
push
mov
cmp
outsl
ds
test
and
xchg
xor
mov
pop
daa
mov
dec
stc
pop
push
test
lods
sti
mov
fisttpl
lds
or
jb
jne
pop
adc
pop
movsb
cmpsl
shlb
sbb
imul
sbb
jle
mov
pop
pop
jnp
loopne
scas
push
stos
dec
pusha
pop
or
das
inc
xlat
jl
xor
dec
test
cvtpi2ps
fsubrl
cmpb
fidivrl
popa
lods
jecxz
std
mov
push
cli
or
loope
stos
mov
and
icebp
mov
jle
aad
or
shrl
outsl
repnz
cmp
lods
call
lret
lds
mov
push
pop
sti
xchg
test
xor
and
mov
jle
or
addb
hlt
popf
in
mov
mov
inc
scas
sbb
and
bound
ljmp
cmp
dec
lods
jmp
push
loop
pop
add
lods
or
cmpsb
dec
sarl
jmp
mov
enter
lock
in
mov
repnz
rorl
in
lret
scas
ss
js
popf
add
test
sbb
sbb
inc
sarb
nop
push
sub
mov
xchg
xor
pop
xchg
aas
out
mov
dec
arpl
adc
lds
outsl
inc
xchg
push
mov
push
and
or
insb
dec
jecxz
mov
bound
xor
daa
idiv
mov
inc
adc
push
mov
jmp
push
xor
int
out
call
nop
or
ds
mov
cmc
imul
xchg
jp
jmp
xchg
push
sub
push
jp
in
sub
ficoml
ja
and
hlt
outsl
test
push
mov
ret
inc
sbb
lods
gs
aam
scas
sbb
lcall
push
sub
inc
inc
out
pop
arpl
inc
pop
pop
pusha
jl
adc
xchg
dec
insl
mov
sub
push
sbb
ret
mov
mov
cmp
cmpsb
xchg
ficoml
xchg
jb
xchg
cmpsb
jnp
add
xlat
test
out
dec
in
cmp
lock
cmp
mov
ss
fbld
xchg
pop
mov
fmuls
jl
lods
mov
in
push
in
mov
mov
iret
jecxz
scas
cmp
nop
xor
jb
subb
xchg
sarl
dec
movsl
mov
sahf
mov
sbb
addb
sbb
pusha
sub
movsb
daa
pop
xor
movsl
ss
les
out
jae
sub
xor
in
cmp
jnp
ja
lahf
mov
shlb
pusha
icebp
mov
enter
mov
or
add
aad
nop
mov
jecxz
cmp
mov
sbbl
ret
ficomps
pop
leave
stc
push
out
mov
pop
int3
int
adc
push
mov
cmc
ret
sub
out
leave
mov
sub
mov
cli
shl
adc
cmpsl
leave
cmpsb
fcmovnu
jmp
or
lret
mov
cld
fldt
aad
es
mov
lods
jne
adc
test
xor
lcall
rorb
ljmp
or
dec
lods
push
inc
je
icebp
xchg
mov
stos
sbbl
in
inc
das
loope
mov
nop
xchg
jp
insb
xchg
push
nop
out
das
push
xchg
ss
fwait
xchg
sbb
add
leave
mov
roll
cli
cmp
pusha
xchg
xlat
push
adc
fstl
lds
jecxz
inc
xchg
mov
pop
gs
sar
mov
insl
ret
mov
jg
add
imul
push
cmp
sub
stos
stos
inc
xchg
sub
jns
decb
out
int3
iret
rorb
xor
loop
adc
dec
jmp
add
scas
ss
mov
mov
push
or
in
jae
out
js
data16
sbb
or
lahf
inc
inc
aad
mov
mov
cmp
shlb
push
leave
imul
mov
shl
add
mov
insl
stos
sub
aaa
inc
les
mov
mov
fsub
sarl
jl
fld
xlat
xor
mov
call
xchg
mov
pop
ficoms
popa
ds
cmp
outsl
hlt
add
ss
das
sub
xor
out
orb
adc
xor
outsl
xchg
mov
pop
pop
inc
dec
add
loope
inc
cwtl
pop
loope
xchg
cmp
int
test
jmp
notb
xchg
or
sbb
out
pop
dec
and
mov
jl
add
cmc
mov
cmpb
mov
mov
int
add
lahf
mov
shlb
ja
cmp
sub
addr16
andl
rol
mov
inc
cmc
pop
mov
pop
xor
fsubr
dec
into
test
xor
xchg
lahf
sarb
cmp
les
add
pop
push
out
sbb
add
int
cmc
inc
cmp
dec
mov
dec
sub
ljmp
adc
insb
xor
insl
xor
mov
xor
and
lret
aas
jae
stc
push
cmpb
loop
repz
aaa
or
mov
xor
or
sbb
pushf
loope
pop
sbb
sub
out
jo
stc
jg
loope
loope
movsl
mov
lock
ss
cmp
jl
outsl
lea
mov
out
cmpsb
outsl
sti
sbb
adc
jmp
repnz
cmp
pop
sub
pop
pop
stos
and
mov
data16
sbb
dec
std
mov
sbb
sbb
mov
not
iret
adc
pop
mov
jmp
or
popa
gs
xchg
mov
ret
push
mov
jle
out
enter
clc
xchg
ret
fcomps
push
inc
cmp
aaa
push
mov
xlat
sti
mov
mov
mov
clc
sbb
cmp
cltd
out
mov
insl
cmpsl
xchg
fmuls
dec
lcall
data16
push
jno
mov
add
mov
xchg
daa
push
cmp
mov
orb
lret
xchg
rep
push
mov
jb
lock
sbb
cmp
push
pushf
lret
cmp
lahf
jge
sbb
mov
sub
cwtl
mov
inc
xor
bound
mov
lods
xor
sub
shll
loop
jo
lret
out
pop
in
push
popa
and
cltd
roll
or
xchg
mov
dec
lcall
test
dec
add
rorb
and
mov
pop
inc
ficoml
imul
mov
xchg
xor
add
push
pop
stos
pop
xchg
cs
sti
lods
pop
cmp
insb
and
lods
or
pop
cmpsb
enter
mov
mov
orl
mov
and
xlat
sbb
inc
inc
sbb
imul
jg
mov
jmp
out
jmp
add
mov
or
mov
ds
dec
mov
mov
mov
lea
mov
shll
enter
sbb
arpl
pop
std
sbb
pop
sbb
movsl
std
sub
adc
pop
push
xchg
push
bound
xlat
push
fst
dec
lret
push
and
dec
mov
push
cmpsl
sbbb
push
stc
push
paddsw
out
movsl
inc
xchg
adc
call
lock
int
jmp
push
push
mov
sti
enter
or
mov
sahf
and
shl
loope
lods
xchg
and
mov
sarl
xchg
nop
outsb
mov
call
mov
outsl
inc
and
mov
sub
jb
cmc
mov
stc
cwtl
push
jl
aas
in
ffreep
xchg
xchg
sub
pop
out
lcall
xchg
fistpl
or
popf
dec
or
inc
pop
cli
add
call
das
ds
lcall
imul
fcoms
ret
int
inc
jecxz
jecxz
pop
inc
lret
push
cli
scas
mov
and
sbb
pop
and
in
jmp
jecxz
lret
cs
xchg
sbb
out
sub
adc
cld
sbb
rorb
pop
cld
xor
iret
push
daa
ss
test
fistpl
scas
enter
lcall
mov
clc
lret
jno
dec
push
mov
data16
pop
sbb
clc
sub
pushf
push
iret
call
mov
out
fdiv
dec
nop
or
fcmove
xor
lods
gs
enter
cmp
cltd
jo
inc
rolb
loope
dec
cmp
push
scas
xchg
push
xor
pushf
cmp
push
mov
leave
mov
and
ss
ret
pop
into
cmp
mov
loope
mov
daa
and
test
jp
pushf
jl
sbb
mov
mov
fldl
inc
test
cmpsb
lcall
xor
xor
sbb
pushf
mov
pop
lcall
and
xchg
lcall
adc
outsl
xorl
mov
stos
repnz
pop
pop
pop
enter
scas
add
cs
dec
dec
sarl
mov
mov
je
scas
ficomps
sahf
xchg
dec
sbb
insl
mov
sbb
sti
outsb
out
pop
add
jne
in
sbb
mov
jbe
xchg
fcoml
or
popa
jecxz
out
outsb
shrl
mov
movsl
cltd
cmc
jp
dec
sar
pop
pop
mov
xchg
popf
adc
inc
xlat
pop
addl
mov
and
jge
sbb
inc
push
mov
arpl
push
lods
adc
cltd
sbb
je
lret
dec
rol
pusha
outsl
filds
imul
mov
outsl
cmp
inc
shlb
aaa
int3
xchg
xor
inc
mov
lock
shll
rcl
outsb
mov
not
xchg
jae
cmp
add
pop
cmp
pop
movsl
xchg
shll
xor
movb
mov
and
shr
pop
mov
lds
lods
adc
pop
cmpsb
xlat
cmp
in
loop
sub
lea
xchg
jno
cmpsb
fwait
push
fs
xorb
repz
add
cltd
repz
push
stos
jecxz
ljmp
xchg
pop
insb
aas
sub
inc
test
gs
lock
mov
std
fcoms
cmp
aas
inc
jne
mull
iret
aad
add
daa
ret
loop
or
ret
mov
aad
cmc
movl
fst
pop
scas
xor
insl
cmc
daa
pop
rol
andb
repnz
jns
cmpsl
and
dec
movzwl
dec
iret
pop
xchg
or
pop
cmpsb
mov
cmp
add
push
fistpll
outsl
lds
inc
or
cmc
adc
jmp
scas
push
lret
xor
leave
mov
test
mov
fisubrs
sub
inc
or
push
cld
mov
ret
lea
dec
jno
xchg
cmpl
mov
adc
ret
mov
sub
mov
inc
mov
ds
sbb
inc
pusha
rorl
jge
xor
add
xor
adc
jnp
sub
psrld
add
jbe
cld
mov
push
bound
cmp
add
lcall
dec
mov
xchg
adc
mov
loope
jmp
inc
inc
mov
pop
cmp
mov
cltd
and
xor
add
or
xlat
dec
and
mov
push
outsb
or
sbb
pop
cs
dec
fildll
repz
cmp
xor
neg
mov
mov
pop
push
gs
inc
push
push
aad
pop
dec
adc
push
stos
pop
dec
cmpsb
sub
and
add
adc
jne
subl
mov
aam
in
adc
cmp
ss
call
mov
mov
je
pop
sbb
lea
sub
sarl
add
test
jnp
pop
faddl
sbb
cs
pusha
sbb
and
popf
mov
sub
arpl
out
or
mov
push
fdivrp
test
in
jge
push
add
test
adc
jmp
mov
mov
mov
rcrb
push
cld
gs
pushf
arpl
dec
insb
cmpsb
xor
inc
popa
mov
cmp
lock
inc
inc
stos
sbb
out
mov
test
cmp
std
dec
ret
movsb
push
xchg
loope
ret
xor
xor
arpl
pop
fs
sar
adc
cmp
outsl
iret
lret
cmp
shrb
in
shlb
adc
ret
fwait
cltd
pop
out
je
and
dec
out
hlt
pop
cld
mov
xchg
sub
xchg
rcr
push
orb
dec
mov
sahf
fwait
xchg
pop
mov
aaa
jge
ja
sub
out
in
add
mov
dec
into
and
and
mov
scas
jb
inc
pusha
cli
popa
btc
dec
cmc
pop
testl
mov
inc
stc
sti
mov
es
hlt
clc
mov
std
xor
mov
out
adc
stos
or
popf
mov
cmp
jp
js
in
fldt
popf
xor
cmp
ljmp
fs
xchg
movsl
call
and
loop
mov
je
mov
inc
jbe
lahf
es
xor
nop
ror
mov
adc
test
push
lods
fbld
imul
pop
and
aaa
fwait
dec
xchg
shlb
ret
lret
cmp
jge
pop
cmp
lea
push
mov
and
das
test
mov
hlt
mov
loope
in
aam
ret
stc
push
xlat
inc
mov
int3
loopne
sbb
mov
inc
push
mov
sub
xchg
rcrl
and
sbb
insl
pop
push
popa
fistpl
gs
xchg
rcll
sub
lahf
jb
lret
xchg
inc
in
push
lods
mov
push
xchg
push
or
cs
flds
dec
xchg
mov
icebp
fnstcw
pop
pop
popa
xchg
push
add
push
aam
push
nop
and
push
cmp
xchg
and
out
pop
jnp
mov
sub
imul
rcrb
xor
dec
inc
mov
lods
jae
pushf
mov
aaa
int
cmpsw
and
mov
int3
arpl
and
scas
insl
outsb
add
and
loopne
push
dec
sub
mov
add
cmpsl
punpcklwd
sub
push
iret
fs
mov
cmp
in
sub
sbb
dec
pop
jae
cmp
iret
lcall
add
xchg
repnz
aaa
bound
jmp
rolb
insl
dec
dec
scas
cmp
aaa
dec
cmpsl
mov
mov
jecxz
es
mov
das
in
xchg
pop
mov
in
in
mov
lahf
add
mov
jnp
enter
add
sbb
notl
lods
and
lret
adc
push
push
dec
and
xor
inc
imul
call
sub
negl
int3
dec
mov
fnstcw
xchg
xor
test
repnz
int3
out
xor
in
adcb
and
or
sbb
lods
js
mov
adc
fwait
xchg
jecxz
xor
imul
mov
lahf
ss
sti
test
outsl
pop
aam
daa
hlt
fwait
imul
sbb
jb
dec
cmc
mov
pushf
mov
lret
movsb
inc
out
cmp
push
nop
push
cli
gs
iret
jle
xor
pop
clc
sub
push
rcl
daa
daa
inc
add
insl
sbb
enter
mov
inc
cmpsl
mov
fs
sub
scas
add
adc
adc
fbld
ljmp
dec
jnp
dec
mov
sbb
dec
jo
lods
sbb
clc
stos
xchg
push
stos
pop
mov
mov
adc
mov
jl
dec
mov
orl
leave
int
sub
inc
vpsrld
push
push
dec
sbb
sub
insl
pop
push
pop
idivl
or
add
out
ret
sub
add
xor
jg
add
stc
data16
out
inc
sub
in
stc
add
cmp
jecxz
push
jge
int
xchg
loopne
push
testb
cmpsb
inc
int
subb
mov
inc
jmp
mov
dec
sbbb
outsl
mov
cmp
imul
pop
adc
popa
aad
and
icebp
mov
fcmovbe
jmp
sbb
mov
in
out
push
or
pusha
xchg
pop
clc
xor
cltd
fcmovbe
imul
inc
dec
xor
int3
push
push
in
xor
or
out
push
xchg
and
push
inc
cmp
add
inc
mov
lods
cmc
mov
insb
xorb
outsb
sahf
xor
push
ja
mov
jl
out
lahf
sub
es
ret
ret
adc
xchg
adc
push
cli
push
adc
mov
pop
hlt
xchg
inc
dec
fdivrp
xchg
out
lahf
pop
xchg
inc
push
sbb
nop
hlt
jmp
pop
stos
lret
mov
lea
jg
mov
push
xor
mov
and
rcrl
daa
dec
shll
scas
lret
sbb
mov
cmp
out
ss
cwtl
mov
sbb
jno
mov
cwtl
mulb
lock
dec
xor
sub
pop
xlat
push
push
loope
xchg
sub
das
shll
adc
shrb
dec
fsubr
fsts
and
rclb
aad
lahf
in
lret
push
ljmp
cmpsl
in
xchg
or
xor
sbb
es
ds
mov
int
inc
iret
jnp
test
cmp
idivb
test
and
xchg
sub
rcrb
imul
cltd
out
mov
aam
dec
adc
dec
cmp
xchg
inc
ja
jmp
mov
jl
cmp
rolb
dec
xchg
enter
dec
cli
out
int
mov
xlat
mov
rcrb
cli
mov
push
xchg
add
lahf
sbb
xchg
ss
or
pop
outsb
mov
fcomi
out
stos
popf
mov
hlt
cmc
dec
mov
int3
sub
or
push
in
data16
mov
lea
dec
cmp
or
popa
adc
xchg
mov
call
cmp
mov
xor
cmp
pop
ja
or
jg
mov
scas
push
sub
aas
push
je
adcb
dec
mov
scas
dec
xor
and
mov
stc
sahf
cltd
outsb
adc
std
adc
mov
mov
push
mov
push
jb
push
push
sub
mull
sbb
repnz
mov
xchg
jb
ficomps
xchg
sbb
mov
or
adc
stos
add
adc
xor
clc
seto
fdivr
or
and
cmpsl
test
leave
adc
aaa
mov
imul
cmc
lret
std
call
mov
fcom
cmp
out
out
mov
mov
jns
lock
add
or
jb
cmpsb
sub
adc
js
mov
dec
push
mov
sti
idivl
les
addl
jae
mov
dec
rcll
mov
or
mov
popf
or
push
daa
ror
xor
imul
xorb
pop
mov
rorl
cmpsb
cmpl
cmp
mov
lea
ja
dec
mov
hlt
iret
xchg
aaa
out
xchg
imul
dec
mov
mov
lods
jns
in
mov
jle
sub
test
aad
lret
popa
pop
out
xchg
mov
dec
dec
push
fistpl
adc
dec
shlb
lds
jae
mov
ret
add
int
aaa
sub
jns
jp
jmp
andl
dec
inc
out
and
inc
pop
jecxz
cmp
movsb
sub
data16
jge
fs
lods
and
lret
jne
push
xor
dec
sbb
push
jp
mov
mov
mov
test
pop
insl
add
clc
xchg
jnp
notb
in
lods
sub
pop
add
loope
shll
subb
aam
mov
negb
jp
repz
pop
movsl
add
jnp
scas
out
jge
mov
mov
push
mov
aas
jmp
stos
bnd
int
and
and
test
lahf
sub
out
fnstsw
pop
fwait
scas
xlat
imul
xor
and
aas
mov
movsl
adc
pop
adc
arpl
rclb
enter
push
call
jnp
push
lea
ss
dec
inc
fcoms
fcomps
xor
leave
movsl
rorl
lea
cltd
gs
or
cld
sbb
in
sub
push
ret
lcall
or
push
jns
iret
loopne
mov
or
cmp
ss
das
pop
pop
or
mov
push
push
pop
pop
mov
sbb
and
pop
ljmp
dec
imul
add
mov
pop
aaa
and
or
out
jmp
arpl
dec
pop
cwtl
jbe
sbb
pushf
daa
pop
push
jle
dec
leave
aad
and
inc
scas
popa
cmpsl
imul
xor
pusha
dec
and
xor
mov
pop
push
push
in
push
outsl
sar
or
mov
jns
sub
jno
pop
add
cmp
push
je
xor
ljmp
add
es
mov
dec
jp
iret
mov
dec
push
cltd
das
sub
ror
xlat
fistps
imul
cmpsb
enter
in
pop
inc
out
sub
leave
pop
xorb
jne
jecxz,pn
lods
lods
add
sbb
lods
lods
push
gs
jns
inc
xlat
arpl
sbb
mov
sbb
xor
lret
fcompl
das
fstl
add
mov
push
inc
adc
push
lods
push
je
xor
xchg
daa
bound
push
xchg
out
inc
fldl
test
out
mov
or
ret
cli
mov
scas
mov
shll
cld
aas
les
cmp
sbb
add
jmp
int3
cltd
leave
fistpll
enter
sti
sub
xlat
fnsave
adc
mov
cmp
and
ret
mov
sub
std
jae
fcomip
cmp
into
cmp
xor
inc
out
dec
push
daa
mov
sbb
data16
pop
ljmp
xchg
das
fildll
xchg
and
and
sub
pop
int3
std
dec
pushf
jo
jno
inc
fdivs
and
sub
sbb
sarb
scas
adc
mov
mov
jmp
sub
scas
push
stos
aas
inc
cmp
enter
shl
cltd
outsb
aam
and
push
subb
lcall
jo
xchg
mov
adcl
scas
jg
jle
pop
push
pushaw
dec
flds
jl
ja
imul
xchg
adc
mov
nop
push
mov
mov
js
mov
movsl
and
xchg
int3
cmp
clc
xchg
cmp
inc
cli
test
pop
out
xor
fisttpl
mov
arpl
out
pop
sbb
decl
pusha
inc
xor
ror
push
cmpsb
test
out
js
add
mov
pop
out
inc
mov
roll
sbb
jle
or
mov
or
dec
dec
pop
cmpsl
stos
addr16
les
pop
mov
add
aaa
test
xor
repz
pop
or
adc
jb
fists
popa
stc
int
pushf
push
sub
cmc
or
imul
ds
mov
and
test
jp
mov
aam
sahf
push
adc
cmp
cmp
cmp
mov
lahf
adc
cmp
and
sbb
insl
mov
cmc
popa
push
popf
adc
push
sbb
jbe
notl
out
xchg
cld
sbb
mov
mov
xchg
sbb
scas
ret
es
arpl
or
sub
ljmp
lahf
dec
adc
sbb
faddp
repnz
test
bound
or
lock
addl
out
rcll
bound
inc
pop
movsb
repz
and
loope
fs
cmpsb
lods
add
mov
add
imul
lods
ss
xchg
adcb
negl
and
sti
jbe
ljmp
cmp
sbbl
pushf
pop
jns
pop
in
aad
mov
in
sahf
outsl
in
push
subb
and
and
into
leave
and
push
inc
mov
ficomps
outsb
lods
jg
cmp
cmpsb
mov
roll
xchg
rorl
push
nop
movsb
mov
mov
push
imul
faddl
pop
sahf
push
sbb
mov
sbb
jecxz
mov
jae
pop
fistpl
jne
inc
push
inc
xchg
cmp
scas
cmpsb
push
fisubs
outsb
and
adc
mov
sub
pop
cld
push
and
sub
or
loope
bound
fcmovnbe
sub
xor
or
test
jecxz
rcrb
and
or
cmpsb
popa
aaa
rcl
movsb
shll
dec
mov
ss
push
sbb
fsubrl
dec
and
nop
andl
cmp
iret
pop
negb
imul
out
add
and
cld
jge
iret
push
lods
mov
lret
inc
sub
dec
jge
insb
gs
mov
mov
hlt
je
mov
cmp
loopne
je
cmpsl
mov
cmp
call
rorb
testl
jecxz
jns
xor
daa
dec
sbb
ds
add
mov
cmp
sti
xchg
mov
into
cmpsb
sub
fwait
cmp
xchg
push
lcall
sub
fadds
mov
xchg
jb
mov
arpl
lods
pushf
loopne
rorb
add
test
fs
fxch
outsb
and
je
push
stos
sub
or
shrl
es
xor
sbb
jle
insl
or
sub
cmp
enter
mov
jg
insb
mov
std
ja
dec
hlt
cltd
mov
push
ljmp
cmp
and
jnp
sub
cmp
jnp
xor
or
jmp
lahf
imul
pop
scas
xchg
out
roll
in
jb
cmpl
xor
mov
sub
and
xor
andb
or
mov
cld
push
movsl
shrb
jge
pop
arpl
mov
mov
addb
sbb
lds
fmuls
jp
insl
ljmp
add
mov
adc
les
decb
mov
mov
stc
or
mov
mov
mov
cmp
and
jnp
or
pop
cmp
dec
popf
inc
out
xchg
pop
test
push
out
rcl
out
add
cld
dec
or
std
cs
popf
adc
dec
pop
sub
lahf
test
cmpsl
mov
cmp
lret
lea
xchg
into
sbb
add
xchg
cmp
adc
enter
mov
cmp
adc
mov
push
pop
lea
or
das
xlat
inc
jne
dec
or
outsb
push
ss
mov
and
jnp
fcompl
insb
cmp
push
sbb
push
mov
push
cld
jno
jmp
in
jl
mov
mul
loopne
adc
inc
mov
push
xor
pop
fstpl
aas
cmp
cmp
mov
xchg
imul
pusha
adc
nop
dec
xchg
push
rcrl
aaa
sarl
mov
cmpsl
rorl
push
and
jmp
add
and
or
and
lds
test
xchg
sub
lahf
test
pop
std
test
jnp
xchg
cli
fidivl
xor
mov
movsl
push
and
inc
push
dec
adc
cmp
cmp
lds
push
jl
loopne
push
and
jp
repnz
mov
js
into
and
fcmovu
xor
fsubs
sbb
fs
adc
test
cmp
xchg
inc
xchg
dec
mov
sar
push
or
int3
mov
cli
lret
or
mov
lds
cltd
mov
js
inc
dec
out
mov
rorl
scas
lock
ljmp
add
add
pop
mov
gs
hlt
push
pop
jmp
scas
jle
xchg
xor
mov
mov
nop
adc
in
int3
xchg
xor
mov
push
int
movl
cmpsl
mov
jno
dec
push
int
mov
jle
mov
dec
in
adc
mov
int3
inc
gs
movsl
aam
lret
addb
push
rol
mov
pusha
out
pop
pop
mov
fwait
mov
push
adc
mov
add
cmp
ja
notb
scas
xchg
mov
movsl
mov
mov
call
sub
addr16
cmp
popf
sbb
push
shl
popa
add
cli
and
xlat
ret
stos
sub
xchg
popf
xchg
int3
test
outsl
jp
xlat
jbe
push
imul
mov
sub
mov
mov
arpl
sub
jne
add
xchg
in
push
inc
popa
lea
aaa
inc
adc
cmpsl
inc
mov
cmp
in
mov
or
inc
xor
cltd
into
enter
mov
jns
bswap
scas
mov
inc
aam
inc
mov
xchg
rorb
fisubl
add
mov
aas
xchg
mov
imul
fcoms
aam
outsl
aaa
repnz
or
call
aaa
test
imul
xor
and
cmp
adc
jns
mov
aam
lahf
ljmp
stc
decb
xchg
push
push
pop
push
outsl
orl
mov
mov
pop
es
ror
xchg
mov
xchg
jge
in
mov
mov
add
rcll
jnp
inc
mov
out
test
inc
ja
lods
mov
iret
add
icebp
pop
xor
divl
cmp
inc
inc
filds
js
xor
arpl
in
inc
shr
lea
daa
mov
daa
popf
sbb
push
dec
pop
xlat
add
xchg
fildl
mov
and
ja
or
dec
or
dec
mov
leave
loop
aaa
inc
dec
bound
fs
je
lods
sub
or
mov
mov
inc
pop
cmp
mov
popa
std
dec
cltd
insb
mov
ss
scas
push
dec
pop
cmc
scas
push
outsl
sahf
push
xorl
push
fidivrl
cmp
gs
fs
fwait
vcvttsd2si
fnsave
sub
xchg
push
cmpsb
dec
ljmp
out
sar
fldt
push
sub
mov
mov
lock
mov
push
cld
or
aad
mov
es
add
or
repz
push
repnz
adc
je,pn
cmp
cld
or
or
fidivl
into
and
loopne
jg
mov
push
inc
ds
hlt
les
push
out
sub
in
cmpsl
dec
and
pushf
inc
and
clc
iret
dec
call
inc
mov
xor
scas
dec
jmp
pop
xchg
sub
pop
ds
and
sub
fbld
dec
icebp
stos
mov
mov
xchg
fimuls
and
jmp
pop
sbb
fs
mov
pop
scas
mov
sub
adc
inc
inc
push
adc
lcall
lock
xchg
push
sbb
adc
mov
push
into
mov
and
ja
sub
sbb
xlat
pop
andb
cmpsl
xor
aad
inc
mov
in
and
jp
mov
out
mov
and
mov
ljmp
ja
dec
dec
add
pop
adc
inc
pusha
ret
push
pop
cmpsb
mov
xor
pushf
repnz
xchg
jo
cmpsl
sbb
mov
icebp
xor
scas
sti
mov
mov
fsubs
pop
adc
xchg
cltd
mov
xor
xchg
sti
out
sbb
inc
or
ret
test
push
ja
add
mov
xor
ss
push
mov
mov
xchg
loop
sub
in
insl
cli
or
xchg
mov
fs
mov
pop
shl
add
iret
push
repz
sbb
mov
adc
inc
hlt
or
push
lods
mov
pop
and
sti
pushf
ja
dec
test
xchg
clc
lock
dec
mov
mov
dec
add
mov
sub
lahf
bound
lahf
and
xchg
in
arpl
outsl
or
xchg
and
xchg
pusha
shr
scas
fst
repz
add
xchg
pop
sub
and
fidivs
dec
and
shlb
jmp
cmp
enter
xor
mov
shlb
or
lret
dec
repnz
fsubl
arpl
rolb
sti
inc
jne
or
in
cltd
f2xm1
mov
rorb
repz
mov
es
and
scas
xchg
pop
mov
stc
xor
pop
into
inc
pop
fsubr
pop
aam
dec
mov
lret
sub
push
sarl
mov
lcall
or
xchg
adc
add
cmp
mov
test
or
inc
rclb
cmc
fwait
dec
xor
int3
lahf
add
push
mov
cmc
and
add
push
push
or
mov
rcr
testl
or
sbb
adc
xchg
aam
jb
addl
sub
lret
pop
bound
dec
aad
stos
divb
rcrl
sub
dec
out
jmp
pop
mov
inc
es
mov
in
cld
fistpl
or
sbb
pop
sbb
xchg
push
fwait
js
addr16
in
pop
or
xchg
pop
dec
std
mov
lahf
cmpsl
cmp
lock
fiaddl
sub
scas
fldcw
mov
jnp
lcall
xchg
ljmp
sub
lods
enter
pop
leave
add
cmp
and
or
scas
andb
cld
jo
nop
rol
lcall
mov
xchg
jb
mov
sahf
pop
push
scas
pop
xchg
adc
les
sbb
das
rcr
mov
add
aad
inc
fldcw
jl
ret
adc
or
inc
bound
cmp
movsl
mov
mov
lods
mov
inc
mov
adc
xchg
sub
mov
sar
gs
imul
je
pusha
inc
ja
inc
mov
adc
push
push
cmpsl
sub
int3
mov
inc
push
and
or
inc
cmp
jbe
jp
pop
fiadds
push
add
cmp
repz
cmp
or
pop
mov
stos
loope
inc
and
adc
loop
fadd
push
mov
mov
gs
out
xchg
cmp
shl
pop
inc
push
mov
or
enter
and
push
cmp
sbb
dec
fidivrs
aad
push
pop
sti
ja
cltd
cmpsl
and
shll
sub
iret
nop
in
sbb
dec
sbb
clc
or
cltd
aam
pusha
lahf
adc
or
cmp
ret
fadd
sub
mov
rorb
mov
outsb
aas
xor
and
fildll
leave
divb
lock
sub
mov
out
inc
pop
xchg
outsl
clc
sub
insl
lahf
cmp
pop
ja
xlat
rorb
fdivrl
mov
aas
dec
xor
mov
fsubr
sub
mov
jbe
mov
sbb
dec
cmpsb
loopne
repz
lds
cltd
xor
testb
pop
inc
adc
xchg
mov
jl
mov
ret
ret
ret
popa
stc
pop
imul
imul
lds
mov
scas
sub
pop
lods
dec
pop
mov
and
cmp
stos
repnz
movsl
cmp
adc
in
jne
push
popf
xchg
repz
popf
iret
jae
das
mov
ret
jmp
aad
cmp
or
and
les
cmp
and
in
pop
jmp
mov
adc
push
data16
cmp
pop
inc
inc
in
pop
or
cld
dec
fbld
dec
int3
xchg
mov
imul
scas
cmp
int3
aas
out
xor
into
inc
fsubl
sub
cmp
jecxz
cmp
mov
inc
in
push
jg
vmwrite
stc
dec
dec
inc
xor
mov
sub
lcall
dec
imul
mov
fs
das
and
cmp
xlat
sub
adc
cwtl
scas
mov
push
xchg
addr16
push
xor
pushf
add
jne
test
aad
mov
popa
jne
mov
mov
mov
xor
dec
add
ret
or
stos
pushw
cld
aaa
cmpsl
fcomps
sub
pop
sbb
jae
jo
and
cwtl
cld
fwait
addr16
push
cli
subl
mov
ffreep
or
mov
popa
repz
pushf
hlt
push
xor
mov
xchg
nop
clc
jl
adc
daa
mov
mov
test
cmpsl
mov
int3
ljmp
out
ficompl
xlat
jb
xchg
and
out
mov
test
pop
mov
sub
cmp
inc
in
mov
jp
ja
or
push
xor
dec
es
sarl
pop
ds
cmp
enter
int
enter
sbbb
adc
repz
daa
and
hlt
daa
sub
das
adc
aam
setns
jecxz
mov
pop
shll
pop
xor
cmp
mov
stos
sub
pop
and
addr16
mov
inc
inc
mov
xor
pop
aam
fs
lret
in
out
jecxz
jle
int
stos
test
jno
test
insb
pop
fwait
adc
gs
sub
testb
cmp
mov
orb
add
sbb
sbb
fbstp
imul
outsb
adc
adc
sbb
fadd
adc
rclb
test
and
push
mov
or
clc
outsb
ds
arpl
inc
mov
lahf
or
inc
push
inc
rcl
jmp
cwtl
or
sbb
dec
xchg
adc
inc
iret
lea
arpl
in
sub
iret
cmc
outsb
cmpsb
aad
int
push
test
xorb
xor
push
in
dec
adc
divl
push
shll
jp
enter
imul
and
mov
jle
xchg
jl
ja
inc
imul
push
fadds
mov
ret
out
mov
cmp
mov
mov
in
and
mov
iret
cmp
mov
jnp
repnz
mov
aam
fnstenv
mov
inc
test
jns
leave
test
into
cmpsb
orl
lea
and
cs
xlat
sub
dec
mov
std
sub
pop
adc
lcall
lret
xor
aaa
cmpl
sub
adc
fdivrs
orl
inc
sahf
ret
ja
sub
scas
in
repnz
cwtl
lret
cld
push
loop
add
lcall
mov
push
add
adc
mov
leave
sbb
stc
ljmp
imul
repz
popf
mov
push
subb
ss
inc
loopne
mov
int3
bound
cs
and
push
sub
enter
sti
mov
mov
inc
push
divb
cmovo
inc
aas
xor
repz
sbb
daa
mov
fldl
pop
xor
je
cmpsb
adc
ljmp
mov
jnp
cmpsl
outsl
idivl
pop
jae
mov
cmpsl
add
neg
aaa
mulb
pushf
loopne
mov
dec
jbe
mov
into
or
fwait
ret
mov
iret
fildl
mov
adc
aas
xlat
mov
pop
mov
sar
inc
adc
pop
imul
mov
and
lahf
add
cmp
sbb
pop
in
push
and
test
and
pop
jecxz
sbb
mov
sarl
dec
cmp
push
lret
xchg
popf
movsl
xchg
shlb
out
cmp
test
fucomp
sbb
push
and
xor
pop
sub
mov
jmp
clc
test
sahf
cli
dec
add
leave
insb
mov
xchg
mov
inc
inc
es
sub
dec
loope
cmp
lret
aas
mov
ljmp
ja
inc
fwait
in
mov
fsubrl
xchg
insl
mov
arpl
cmpsb
in
lods
mov
stos
lods
inc
rorl
xor
cmp
aaa
sub
xchg
movsb
jns
xchg
aas
xchg
dec
mov
mov
int3
das
mov
or
pop
jne
inc
daa
outsb
pop
insb
jo
roll
lret
mov
lahf
sbb
add
xor
mov
push
xor
out
inc
call
fisttpll
shll
sub
fdivrl
jmp
ret
scas
push
packsswb
inc
popf
cmp
xchg
inc
xor
subl
cmpb
outsl
xor
bound
pop
mov
and
ret
movsl
mov
jp
in
sbb
gs
fs
pop
push
adc
xor
es
aas
dec
jbe
xchg
mov
repz
mov
outsb
jae
mov
xchg
jg
xlat
lea
jge
fnstsw
pop
pop
sbb
popf
outsb
into
xor
in
cmp
sub
out
push
test
xchg
or
lret
fstpt
scas
push
sbb
jo
ljmp
push
mov
push
cmp
das
push
pop
shll
sub
lock
cmpsl
and
jns
jecxz
int3
add
pop
enter
pop
mov
imul
dec
ret
xorb
rclb
push
mov
shrl
xor
lahf
mov
iret
lss
cmp
add
int3
cs
jnp
loope
inc
fisttpll
fs
sub
and
add
xor
or
jbe
lock
cld
sub
lods
inc
out
inc
and
push
sub
push
push
lret
movntq
or
xor
incb
cmp
mov
insb
mov
pop
push
cmpsb
inc
popa
cli
push
enter
sbb
cwtl
pop
and
insb
adc
or
jns
or
sbb
xor
into
jp
sbb
xor
sub
repnz
push
xchg
jp
mov
sbb
adc
add
and
sub
arpl
jmp
lahf
mov
data16
mov
mov
ljmp
push
jae
insl
shr
andb
mov
daa
jne
das
jle
scas
cs
popf
inc
cld
inc
int
aas
add
test
ret
inc
lds
cmpsl
xor
cli
mov
pop
jp
lcall
ror
mov
idivb
xor
mov
pusha
adc
movsl
xchg
ret
xchg
test
lock
add
sarb
adc
dec
movl
push
inc
test
xor
xlat
clc
mov
cmp
push
int3
pushl
mov
push
pop
mov
imul
mov
or
lods
sbb
lret
add
jge
bound
lret
xchg
repnz
outsb
or
or
cmc
push
insl
push
jl
add
in
movsl
lret
push
push
xor
sbb
int3
xchg
add
jmp
dec
pop
aad
stos
jo
lds
xor
xor
les
inc
movsb
pop
and
int3
push
int
mov
inc
std
mov
popa
in
aad
daa
pop
scas
mov
add
mov
sbb
mov
out
fisubl
shll
rolb
outsb
cmp
and
mull
roll
adc
lods
add
je
imul
jmp
cmp
jmp
and
cli
xchg
or
push
cmpsl
jnp
dec
jb
add
testb
dec
jle
popf
js
xchg
sbbl
push
jecxz
repnz
mov
aad
or
mov
pop
call
adcl
mov
push
jecxz
fisubl
dec
mov
jne
stos
pop
mov
push
nop
jmp
pop
xor
xchg
pop
mov
stos
or
xor
mov
mov
fcomps
pop
idivl
inc
xor
stos
repz
adc
je
jnp
stos
xlat
movsl
jno
bound
jbe
outsb
sbb
push
mov
xlat
sahf
jnp
mov
xlat
mov
fidivrl
jg
pop
or
sarb
mov
pusha
sub
ds
xchg
loop
or
rcll
mov
adc
addb
mov
stc
leave
lcall
in
or
scas
ret
stos
pusha
int3
push
push
test
and
outsl
push
or
lret
or
test
test
dec
jmp
xor
sbb
dec
aad
lahf
or
sbb
mov
mov
cmc
in
out
mov
dec
push
sbb
xchg
sbbl
sub
js
mov
outsl
jecxz
fists
push
ljmp
mov
shr
jmp
jno
jl
push
pop
les
arpl
icebp
dec
sbb
adc
ja
adc
and
inc
pushf
cli
push
push
out
inc
pop
lret
clc
cmp
adc
imul
jl
fucom
loope
rolb
clc
loop
add
and
jb
cmp
and
test
xchg
imul
push
mov
xor
mov
outsl
imul
pop
outsb
mov
push
sbb
fcmovne
jo
popa
push
sarl
add
pop
mov
inc
lds
add
testb
outsl
mov
ffree
outsb
inc
fcomip
int
pop
repnz
fsubrs
ret
jns
add
aas
mov
or
push
ficoms
lods
filds
clc
aad
xor
mov
cmp
pop
sub
sub
push
rcll
mov
sahf
add
das
out
sahf
sbb
out
out
pusha
add
repz
pop
nop
mov
stos
loop
mov
fnsave
mov
ljmp
stos
lds
pop
adc
mov
arpl
movsb
mov
mov
stos
pop
mov
cmpsb
test
test
data16
mov
sbb
and
fcoms
das
lds
dec
clc
add
and
push
data16
mov
ja
mov
sbb
or
mov
seto
out
mov
push
daa
jae
aaa
push
fimull
sub
loop
adcl
ret
pop
mov
inc
cmpsb
jl
adc
jmp
rcll
jmp
adc
inc
cmc
xor
xorb
sbb
push
mov
and
mov
aam
or
xchg
xor
push
add
mov
adc
xchg
mov
xchg
pop
sar
test
xor
adc
inc
pop
sub
ficompl
or
out
mov
stc
outsb
nop
mov
jne
imul
fmuls
stos
or
fwait
dec
and
xchg
jne
dec
fldt
loop
cmp
xor
dec
test
and
cmp
shll
in
in
stos
cs
inc
test
add
int3
pop
and
pop
sub
adc
add
sbb
push
cmp
mov
push
sbb
pop
push
mov
push
xor
test
and
fisttps
fwait
pop
jecxz
adc
xchg
push
mov
cli
je
cwtl
inc
scas
add
je
inc
jp
pop
xchg
adc
lods
sarb
cmp
mov
lahf
in
push
jl
andb
add
out
sbb
sbb
mov
ds
or
dec
out
int3
xchg
sub
inc
mov
mov
cmp
pusha
inc
pop
jo
shrb
sti
jge
scas
xchg
mov
xor
push
jg
cmp
mov
ss
or
jle
pop
iret
dec
cmpsl
mov
dec
mov
inc
mov
pop
jnp
inc
out
cmpsb
inc
in
ret
int3
or
or
iret
mov
push
sbb
stos
push
cmpsl
xchg
clc
pop
hlt
mov
adc
inc
sarl
rcrl
ror
mov
mov
adc
int
std
int3
movsb
xchg
pop
dec
jmp
push
stc
fcomi
ja
inc
sub
mov
rcrl
pop
mov
push
cmpsl
mov
pop
xchg
adc
iret
xchg
negl
insb
pop
imul
pushf
sub
xchg
mov
scas
popf
xorb
add
mov
xchg
je
cld
pusha
int
sti
in
mov
push
mov
rcl
mov
out
add
mov
fidivrl
sub
ret
push
sbb
popa
js
and
cmp
call
pop
add
mov
sbb
pusha
test
movsl
popa
mov
fsubrs
sub
pop
mov
ss
imul
sarb
inc
and
insl
ds
adc
lods
stos
shlb
push
daa
mov
test
aad
jb
daa
ds
decb
or
mov
fcomps
aas
cmpsb
mov
mov
mov
cltd
adcw
pop
cmp
imul
das
stc
inc
mov
cmp
mov
add
fmull
and
jg
loope
mov
sub
lds
push
and
inc
dec
push
enter
fwait
stos
jmp
std
jo
outsl
xchg
shll
fildl
ret
add
sub
arpl
or
jle
dec
or
loope
out
xchg
decb
cmpsl
mov
sti
or
jmp
push
cmp
test
jae
and
int3
sbb
movl
test
into
push
addr16
pop
sbb
cs
pop
shl
insl
mov
aad
mov
jae
les
pop
adc
testl
sbb
mov
jae
push
sbb
adc
sub
pushf
sbb
mov
mov
jmp
test
je
lret
mov
fs
dec
and
int
inc
pop
decl
in
mov
mov
stos
xor
sbb
pop
jg
leave
sub
add
fdivr
dec
add
dec
gs
mov
dec
push
lret
sbb
xchg
push
or
movsl
fwait
and
dec
in
sub
test
fsubrl
xor
mov
fs
cmp
or
test
cmp
popa
lods
imul
mov
cmp
out
and
mov
jns
inc
xchg
test
jo
fdivrs
leave
cmpsb
xchg
jle
pop
out
enter
mov
cmp
sbbl
push
push
je
sbb
repnz
ds
push
cmp
pop
add
stos
cli
and
cmp
push
pop
fs
push
jmp
cld
sub
jbe
pop
add
jecxz
lahf
ret
or
addr16
ret
cli
or
adc
pop
enter
testl
lock
fisubl
mov
inc
xchg
mov
daa
adc
call
fisubrl
ficoml
adc
pop
je
enter
pushf
mov
jnp
lock
scas
dec
mov
mov
dec
jmp
call
push
arpl
stos
nop
push
add
mov
out
bound
cmpsl
pop
loope,pt
iret
push
cmpsb
and
lahf
jae
pop
insl
sub
js
pop
out
je
xchg
fdiv
filds
sbb
fdivr
arpl
repnz
ljmp
and
inc
pop
jnp
or
hlt
adc
push
add
lds
into
xor
insb
repnz
sbb
cmp
xchg
lcall
out
xor
bound
push
ret
sbb
jno
cld
cmpsb
xor
xchg
fidivrl
add
jbe
cmp
push
in
repz
mul
cwtl
or
testb
scas
hlt
pushf
test
std
lea
lcall
adc
add
dec
sub
mov
mov
fsubrl
inc
push
xchg
mov
movb
mull
icebp
lret
leave
pop
mov
sub
adc
sub
adc
or
or
je
roll
lret
sub
pusha
pop
aaa
sbbl
dec
jge
movsb
cld
movsb
int3
xchg
and
mov
les
cli
enter
push
inc
adc
mov
pop
test
sbb
test
mov
adc
fisubrl
out
movsb
loopne
mov
push
mov
push
cmp
sti
fwait
xchg
inc
sub
mov
and
imul
push
sahf
add
jnp
in
sub
dec
sub
movsb
sub
rorb
jo
fstps
sbb
xchg
mov
cmpl
cltd
sbb
and
icebp
mov
xor
inc
xor
daa
adc
sub
loope
negb
movsl
nop
jmp
ds
iret
test
clc
push
jge
mov
mov
stos
out
neg
and
cmpsb
in
movsb
adc
dec
clc
bound
push
add
inc
mov
iret
shl
andl
shrb
cmpsl
imul
or
rcrb
or
lock
jbe
leave
mov
jecxz
jge
fwait
jmp
shll
into
ret
lock
mov
sub
lcall
das
sbb
aad
dec
adc
rcll
dec
inc
mov
and
mov
scas
pop
data16
sbb
ss
jl
out
dec
sbb
in
jnp
inc
je
mov
pop
dec
in
rep
jnp
scas
dec
cwtl
fstpt
rcll
add
mov
xor
mov
jbe
inc
cmc
jle
movb
aas
push
lods
sbb
jp
pushf
mov
mov
or
loope
or
dec
or
push
mov
loop
sbbb
shl
lods
fsubr
or
xchg
js
bound
cmpsl
jmp
hlt
mov
or
testb
xchg
cmp
or
pop
push
fnstenv
mov
test
and
xor
imul
es
sahf
in
lret
jo
inc
fwait
std
std
mov
push
cmpsl
leave
mov
mov
xor
dec
lods
jb
test
loope
clc
int3
dec
mov
mov
mov
into
sbb
cmpsl
xchg
push
sbb
repnz
mov
xchg
int3
jbe
sbbb
xchg
jne
pop
and
xor
loop
cmp
and
hlt
or
push
push
mov
movsl
out
filds
stos
mov
mov
mov
xor
es
sub
mov
ret
sbb
fstpl
cmp
xor
lret
iret
pop
mov
sub
jae
cmc
push
popf
cmp
adc
and
cltd
popa
shrl
lea
sbb
test
push
adc
inc
inc
out
jecxz
jnp
mulb
sbb
and
out
xchg
jb
xchg
mov
testb
jne
sub
and
jae
insb
inc
inc
scas
and
sbb
cmp
mov
ret
sbb
jp
xor
out
ds
fwait
or
lods
test
mov
ret
xchg
shll
pop
call
jmp
cli
sahf
das
or
mov
sarl
push
scas
rol
mov
pop
mov
mov
dec
ret
push
add
adc
imul
and
out
cmpb
push
shlb
mov
add
cmp
lods
movb
roll
pop
shl
clc
fldl2e
mov
sub
insb
push
jmp
in
paddb
jp
jns
sbb
das
fisubrs
xor
je
out
lcall
dec
lods
sub
inc
mov
jns
or
mov
xchg
dec
nop
fimull
pop
mov
enter
je
out
mov
mov
mov
fnstenv
rcll
add
dec
scas
pushf
sub
mov
mov
popf
mov
xchg
jp
cltd
mov
mov
cmp
aas
xchg
insb
jecxz
sub
aaa
pop
cmp
stos
add
int3
inc
cmp
addr16
popf
jnp
js
sahf
mov
mov
jg
push
jno
test
or
addr16
lcall
jmp
mov
popl
fwait
test
mov
test
sbb
lcall
aad
mov
or
mov
inc
pop
clc
dec
mov
mov
xor
or
inc
imul
mov
js
add
shrb
mov
in
mov
push
filds
add
hlt
xrelease
mov
test
mov
or
sub
xchg
int
movq
or
loopne
pop
imul
pop
mov
dec
test
fwait
mov
fisttpll
pusha
mov
sarb
cmpsl
jns
aam
mov
mov
ljmp
loop
cwtl
es
xchg
mov
jae
sbb
xlat
pop
lock
pop
xchg
out
and
daa
pop
mov
jnp
out
and
jbe
cwtl
xchg
loop
hlt
lea
add
push
inc
cmp
push
mov
lret
xor
pushf
mov
xor
frstor
lods
sub
test
sub
or
lods
or
cmpsl
jle
sbb
mov
repz
adc
mov
dec
sub
bound
sbb
lcall
mov
sub
int
cmp
call
fstpl
push
xchg
sbb
xchg
xor
cmpb
std
jg
pop
adcb
das
out
jecxz
xor
fs
adc
jae
loope
adc
push
or
inc
es
push
jne
mov
call
push
pop
xchg
int
cmc
fst
jmp
loope
xor
pop
mov
into
mov
enter
and
repz
lods
or
xchg
dec
pop
jle
mov
aad
pop
rolb
xchg
xor
jp
xor
mov
sarb
sub
push
pop
outsl
or
mov
fwait
shlb
outsl
push
jae
stos
push
push
repz
inc
in
xchg
cmp
cmc
sub
sbb
adc
and
test
ds
sbb
imul
aam
pop
je
and
jbe
inc
cli
or
push
icebp
and
into
pop
dec
jp
xchg
push
pusha
adc
xchg
and
jp
dec
cmpl
mov
push
add
sti
loopne
mov
push
ficoms
jae
orl
stos
in
aas
iret
into
adc
sbb
mov
aam
cmc
dec
pop
sbb
mov
sub
test
push
hlt
in
sbb
ret
pusha
sti
push
leave
cld
jb
pop
aam
scas
add
sub
out
adc
rcrb
inc
or
outsl
leave
push
fwait
pop
hlt
xor
mov
aas
push
leave
popf
add
jnp
mov
pop
cmpsl
into
fadds
mov
mov
aad
push
mov
mov
cli
lcall
jecxz
mov
lea
fwait
mov
adc
dec
and
clc
inc
adc
sub
or
repz
das
xchg
xchg
movsl
xlat
adc
jbe
rcr
and
dec
push
pop
dec
mov
js
lock
jnp
test
scas
push
repnz
inc
mov
cmc
jecxz
push
nop
subl
jbe
jnp
out
or
pop
ret
inc
gs
movl
shll
push
in
xor
scas
adc
loopne
js
outsb
push
mov
add
fwait
push
insl
adcb
push
jae
fildll
inc
insl
cli
and
popf
pop
push
pop
mov
inc
mov
xor
call
dec
ret
xchg
sti
mov
push
out
mov
xor
cmpsb
ret
bnd
mov
jb
adc
jo
add
pop
aaa
mov
test
cmp
fldcw
adc
dec
sbb
imul
je
enter
jnp
shl
xchg
andl
pushf
dec
cmp
add
in
pop
dec
mov
mov
cmp
sub
imulb
icebp
shrl
testl
das
loop
or
add
cmp
mov
inc
push
sbb
icebp
movsb
repnz
add
iret
insl
arpl
loopne
pop
xchg
lods
cmc
and
lahf
lahf
mov
pop
adc
sub
push
adc
adc
fbld
xor
cmp
enter
js
mov
xchg
adc
inc
flds
push
sbb
cmp
imul
decb
push
fistps
sbb
std
xor
out
ret
gs
add
leave
pusha
pop
les
in
mov
inc
xchg
js
inc
dec
ret
inc
sar
xchg
out
or
and
popf
and
mov
stos
fistpll
sbb
or
jle
ss
addl
mov
movsl
push
adc
rolb
add
inc
xchg
jo
mov
fstps
dec
ja
push
sbb
push
jmp
add
adc
jo
mov
ret
cmpb
ss
cmpsl
inc
add
outsb
adc
andb
push
sbbl
icebp
insb
lds
clc
xchg
xor
inc
scas
das
rcll
jecxz
idiv
out
outsl
push
test
add
addr16
cs
gs
nop
xchg
xlat
fdiv
movsb
insl
jmp
and
xor
push
pop
movl
in
jp
fs
or
push
sbb
xchg
xorb
dec
cmc
dec
movl
add
jge
add
inc
mov
push
ja
and
stos
dec
and
fcmovnbe
sub
push
pusha
sbb
jmp
fld
dec
ds
push
sbb
xchg
jno
ljmp
in
stc
push
cmp
xor
sbb
insl
jns
pushf
adc
pushf
imul
and
push
arpl
fdivs
mov
bound
xchg
cld
arpl
rorl
fnsave
mov
movsb
adc
xchg
or
adc
roll
sahf
sbb
xchg
ss
xchg
out
push
mov
xchg
ss
jae
pop
mul
outsb
rclb
rcll
pop
hlt
or
xchg
pop
mov
test
cmpsl
jle
push
pushf
movsb
sub
xchg
xor
push
arpl
adc
lods
std
mov
push
nop
rcrl
xor
js
inc
pop
mov
std
xchg
loope
stos
imul
push
scas
lret
lahf
and
rol
das
push
mov
or
sarl
clc
test
or
adc
popf
lea
in
movlps
jb
fldt
and
leave
fs
or
popl
pop
aad
sub
pop
popf
rclb
mov
or
ficoms
in
movsb
pushf
movsb
sub
lahf
fisttps
add
test
or
xchg
int3
inc
js
add
xor
sti
add
int3
ret
addl
mov
fistps
or
test
mov
pushf
nop
frstor
call
stos
and
adc
or
stc
sti
adc
jnp
std
loope
pop
jno
aam
and
add
das
pop
xlat
loope
or
cmp
inc
sbb
pop
loopne
int
bound
sub
pop
sbb
cltd
outsb
push
cwtl
dec
or
push
jns
sub
push
xchg
out
push
xlat
add
and
jae
in
add
or
lods
popf
push
push
leave
xchg
xor
and
movsl
andl
test
lock
or
adcl
and
pushf
sub
sub
stc
mov
mov
pop
lret
call
mov
aad
mov
fisubl
jns
fstpl
push
mov
ss
lock
mov
cli
mov
lock
jbe
xlat
cld
inc
shll
sbb
aaa
and
and
into
mov
lret
sub
std
repz
and
test
ljmp
shll
xlat
pop
pop
cmovbe
mov
cmp
call
pop
out
jmp
pop
adc
clc
add
shl
adc
adc
push
sti
push
inc
xchg
push
xor
arpl
sub
ljmp
mov
cmp
movsl
mov
mov
or
mov
int3
xchg
testl
mov
pop
orl
xchg
push
jns
pop
and
and
pop
xor
push
dec
movsl
mov
jle
outsl
adc
clc
bound
stc
nop
adc
mov
pop
mov
dec
mov
hlt
adc
inc
mov
pop
adc
xchg
xor
mov
mov
and
lret
cmp
mov
xor
repnz
stos
jmp
sbb
cmp
xlat
bound
daa
and
or
fistpll
fdivrs
or
aam
dec
mov
cli
fdivrs
add
push
jns
jg,pn
mov
mov
lock
xchg
std
aad
pop
cli
pop
test
popa
adc
sub
sarl
push
out
iret
imul
mov
jne
scas
ss
cmp
test
xor
jno
mov
mov
cmc
cmp
push
push
cmp
movsb
call
pop
cmp
add
push
jo
push
loop
inc
popa
cs
ljmp
jl
jp
sub
xchg
sbb
arpl
bound
xchg
pop
xor
lea
cmp
and
mov
shrb
cmp
gs
lret
xchg
out
lahf
lods
add
push
repz
push
sub
and
cli
sub
sbb
fwait
xchg
cmp
adc
sub
xchg
clc
cs
nop
or
das
popa
lock
in
scas
loop
andb
mov
add
ss
xor
jecxz
cmp
addr16
fldt
pop
push
push
leave
inc
add
xorb
in
aaa
dec
jle
movsb
sbb
pop
xchg
fsub
cmpsl
mov
pop
sub
add
mov
mov
mov
fdivl
mov
push
cmp
xor
mov
addr16
movsb
xchg
adc
mov
sub
rolb
mov
xlat
push
jno
sbb
mov
xor
testl
or
jnp
push
fisttps
mov
pop
lds
fcmovnu
sbb
loopne
inc
or
add
push
and
mov
int3
enter
insb
inc
push
add
mov
cmp
xor
int3
clc
push
test
fcomi
addr16
pop
add
xchg
pusha
into
ficoml
maskmovq
divl
scas
data16
aad
rcl
dec
lea
cli
jnp
aad
push
leave
mov
rcl
fcoml
fidivrl
mov
mov
pop
test
dec
sarl
test
push
mov
into
cwtl
cmp
mov
subl
pusha
aaa
inc
lds
mov
adcl
fildll
xchg
mov
cmp
leave
cmc
sti
andb
mov
jo
sub
push
adc
lahf
and
ds
pop
and
push
popf
fisttpl
mov
push
mov
jle
add
imul
add
fmul
jl
mov
aas
dec
push
xchg
mov
mov
xor
cmp
std
cmpsl
add
xchg
push
gs
push
ss
loope
mov
mov
stos
test
ds
clc
xchg
ss
mov
in
add
mov
scas
ds
int3
dec
test
jg
aam
cmp
bound
mov
sub
jae
lods
jg
lcall
in
sbb
jmp
lods
stc
dec
lods
xor
adc
adc
jmp
jo
ja
aas
lret
inc
hlt
or
lods
mov
xor
inc
push
mov
dec
or
repz
push
in
lahf
aad
push
push
gs
and
mov
xchg
cmp
popf
stc
mov
mov
fst
push
xchg
jbe
add
cmc
sahf
in
lock
jno
pushf
aam
repnz
push
stos
pop
lods
out
imul
dec
lea
int3
sti
mov
lock
cmp
cmp
sti
pop
arpl
jbe
add
pop
or
sub
pop
sbb
sbb
push
rorl
mov
xor
les
mov
inc
fcmovu
testl
incb
pop
ret
inc
dec
int3
pop
andl
fmuls
scas
xlat
adc
and
sbbb
jne
xchg
dec
in
mov
dec
cli
push
outsl
jle
mov
mov
fldcw
mov
jo
xchg
mov
leave
sbb
clc
xor
sub
mov
mov
icebp
lods
mov
sub
ljmp
jo
sbb
adc
push
aad
dec
pushf
shll
cltd
inc
ss
xchg
subl
in
sub
add
mov
cmp
addl
add
sbb
lret
xor
sbb
out
les
dec
cld
icebp
out
jbe
xchg
mul
add
mov
push
cmp
mov
push
xor
mov
dec
es
popf
fadd
mov
test
stos
in
mov
clc
mov
enter
push
icebp
lcall
sarb
stos
cwtl
fistl
mov
cmp
pop
jmp
lret
es
and
gs
dec
test
mov
es
inc
jge
stos
ficompl
divw
jecxz
cmp
pop
xor
pusha
stc
push
fsubrs
stos
lods
mov
cmp
sub
push
idivb
shll
sub
inc
outsb
shrb
mov
fchs
dec
mov
xor
fnstcw
andl
sub
in
fidivrl
lea
lea
lods
icebp
je
movsb
push
jnp
rcrl
jns
adc
adc
ss
mov
xchg
add
push
out
xlat
fwait
mov
lret
xchg
or
cmp
pop
std
jns
out
push
push
xor
cmp
fisubrl
data16
xchg
aas
lret
xchg
adc
stos
push
sub
imulb
add
ror
xor
popf
push
shl
lods
add
and
jbe
cli
lret
cmp
mov
mov
aas
sbb
lahf
adc
xor
cli
add
cmp
inc
add
cmpsb
push
xchg
pop
mov
jae
pop
dec
ds
xor
and
xchg
jmp
pop
mov
or
imul
push
shll
icebp
mov
push
push
jl
mov
cmpsl
lods
in
jecxz
hlt
cmpsb
scas
mov
xchg
call
lahf
dec
in
and
sti
mov
idiv
mov
push
and
rolb
xor
pop
cli
cmp
sub
cmp
dec
xor
test
mov
xchg
xchg
repnz
mov
lcall
add
push
jno
lahf
sbb
into
popa
adc
sub
enter
inc
outsb
adc
into
lock
lea
dec
addb
pop
out
sub
adc
popf
pushf
nop
add
shll
sahf
in
mov
sub
pop
sarb
or
push
push
popa
pop
mov
xor
mov
jbe
pushf
in
adcl
int3
jns
fmuls
mov
lcall
mov
add
stc
add
stos
cmp
and
cmp
inc
lods
jge
pop
stos
rcll
add
jbe
fwait
ret
mov
out
dec
sbb
mov
xor
hlt
or
adc
push
xchg
icebp
shl
bound
sub
sub
ds
or
mov
repnz
cwtl
es
sub
negb
inc
les
movsb
mov
loope
imul
call
out
xor
shr
out
icebp
jmp
push
inc
jnp
jno
lods
mov
gs
jecxz
sbb
stos
call
cmp
cli
mov
in
pop
sbb
mov
fcos
sahf
loop
lea
jmp
rorb
cmpb
push
sbb
cli
sub
popa
stos
jge
xorl
sti
xor
mov
inc
shrb
repz
jne
dec
inc
sub
xchg
pop
pop
jae
sbb
leave
lret
addb
dec
xchg
inc
and
adc
into
cmp
das
jno
add
mov
insl
cltd
rolb
pop
mov
cmp
mov
cmpsb
or
cmp
adc
pushf
add
test
popa
push
lock
push
cmpsl
add
sbb
movsl
faddl
mov
fdivrs
in
data16
decl
loop
push
inc
push
dec
mov
lcall
cmp
cs
mov
fisubl
mov
out
pop
pushf
cli
imul
xorb
int
lret
dec
cmpsb
sbb
leave
and
jnp
push
in
mov
fimuls
test
clc
fisubrl
stos
lods
into
sub
jb
outsl
add
jmp
in
cmpsl
shlb
sub
xchg
mov
push
mov
mov
add
sbb
loop
lahf
mov
scas
sbb
lock
dec
or
push
and
push
enter
adc
sub
lret
and
scas
out
pop
mov
mov
xchg
pushf
push
xor
mov
xchg
or
adc
xor
hlt
andl
int3
sarb
xor
aad
cmp
lcall
jbe
data16
scas
push
int3
add
adc
jns
pusha
push
sub
or
fsubrl
push
sahf
mov
sub
mov
dec
jmp
mov
daa
jo
mov
and
shr
add
sbb
xchg
sahf
mov
ret
call
fwait
mov
sub
aaa
aas
mov
push
insl
push
jmp
jb
ds
mov
mov
popa
fcmovb
mov
sbb
ret
lcall
xchg
scas
ret
decb
and
mov
xor
aaa
or
lods
add
inc
mov
jnp
fsubrl
dec
cmp
and
push
push
adc
movsl
inc
mov
ror
inc
sahf
pop
imul
nop
and
jo
xor
jp
mov
sbb
into
test
mov
mov
arpl
or
dec
pop
pop
or
jp
and
fsubp
ja
in
xchg
sti
cmc
inc
ficoml
ljmp
iret
and
movl
cmp
pushf
pop
mov
sub
cmpsl
pop
stos
add
call
sbb
xor
jns
add
mov
aaa
repnz
in
test
xor
stos
add
sub
scas
jmp
mov
fildl
or
popa
xor
add
mov
add
repz
pop
data16
or
pop
push
popf
inc
push
inc
lret
aad
jg
push
mov
in
add
push
inc
and
shll
fidivl
xchg
mov
push
pop
cmp
adc
xor
loope
lahf
push
repz
xor
insl
loope
je
lock
sahf
stos
bound
and
test
push
mov
adc
or
rolb
fstpt
js
jne
push
dec
pop
dec
leave
pop
and
mov
jg
xor
fidivs
xchg
outsl
in
push
les
dec
adc
mov
sub
stos
fdivl
sbb
js
jns
fnstenv
fimull
das
dec
xchg
fidivrs
cwtl
or
cmp
jae
mov
mov
movsl
imul
xor
lcall
jae
inc
push
stos
jno
adc
bound
mov
xchg
inc
mov
repz
jmp
sub
and
add
call
das
push
adc
add
jns
xchg
jl
and
orl
cs
xor
cmp
dec
pop
and
loope
push
lcall
mov
cs
pop
push
push
gs
xor
push
cs
in
data16
dec
push
adc
jns
fisubrs
dec
xchg
add
rcrl
lock
dec
rcrb
mov
fcomps
push
loopne
pop
sti
ljmp
scas
mov
cli
adc
sub
add
ds
add
pop
sub
mov
outsb
pop
fdivl
jmp
mov
sub
inc
jmp
scas
inc
pushf
and
add
cmp
jecxz
and
mov
aaa
fbld
jle
xchg
xchg
fidivrs
xchg
fildll
testl
scas
idivb
ds
push
cmpsb
sahf
xchg
sbb
jo
mov
cmp
pop
dec
push
adc
fsubl
fwait
sub
int3
ffreep
and
sbb
dec
out
shll
add
push
push
imul
sbb
out
incb
xchg
mov
sti
xchg
dec
pop
pop
popa
and
push
add
cmp
sbb
dec
or
cmp
pop
sub
mov
in
push
cmpsl
sarb
subl
lock
push
stc
pop
popa
jbe
clc
xor
pushf
inc
mov
das
mov
dec
shll
or
and
mov
sub
xchg
lcall
and
int
xor
inc
push
fcmovbe
adc
in
and
shrl
mov
outsb
loopne
jnp
pop
mov
inc
je
cltd
inc
cmpsl
lahf
adc
data16
push
jae
dec
out
sub
fbld
push
jl
shl
les
sbb
or
jnp
jle
ljmp
jecxz
xchg
sbb
pop
or
mov
xchg
addr16
mov
sbb
imul
js
lock
out
lret
or
rcl
cmp
divb
cmpsl
aas
orb
push
stos
les
leave
insl
mov
fcompl
push
adc
mov
cmp
idivb
movsb
xor
cld
stos
scas
dec
outsl
out
leave
movl
js
pop
fnstenv
and
dec
dec
faddl
ret
popf
shll
jbe
pop
mov
add
fnstsw
repz
cmc
inc
jmp
mov
arpl
ja
ret
ret
ret
jecxz
dec
lretw
sub
xchg
push
xor
and
dec
jo
xor
and
inc
push
pusha
mov
mov
je
das
push
and
mov
jnp
xchg
push
push
or
idivb
xor
data16
inc
lcall
xchg
sahf
lea
inc
test
push
inc
or
jl
repnz
xchg
das
das
gs
xor
nop
sbb
js
sarl
nop
test
mov
push
pushf
pop
mov
mov
pop
adc
dec
ficoml
das
xor
mov
enter
push
adc
mov
lret
dec
mov
xor
push
jne
nop
call
aam
add
push
push
cmp
push
shrb
imul
pusha
imul
xchg
mov
push
inc
or
pop
sub
leave
push
and
mov
sub
dec
mov
pop
inc
inc
xchg
mov
imul
dec
lcall
cli
or
pushf
pop
push
das
push
cli
xchg
adc
xchg
jmp
add
fisttps
or
in
imul
jp
xchg
shlb
push
mov
and
add
sti
and
ljmp
mov
jge
shlb
fsubp
pop
inc
sti
mov
nop
xchg
push
in
hlt
std
cmpsl
xlat
mov
loope
mov
cmpsl
adc
push
leave
popa
xchg
and
fistpll
jmp
data16
lock
mov
jle
dec
lods
test
jb
into
inc
and
pop
addb
fsts
cltd
xor
mov
fbld
notl
filds
lret
nop
or
mov
jl
call
mov
roll
add
add
aad
cwtl
cmp
ja
addr16
nop
popl
xor
es
sti
fildl
outsb
pop
in
mov
dec
sub
inc
aaa
or
arpl
hlt
stos
negb
add
repnz
xchg
add
cmp
or
lret
pusha
rcr
ja
lahf
ror
or
mov
gs
mov
rcrl
xchg
fists
movsb
popf
outsb
loope
mov
xchg
stos
lret
movsb
push
popa
mov
mov
loopne
adc
in
xchg
fisubrs
pop
dec
pushf
xor
outsb
das
adc
fidivrl
mov
xor
dec
adc
ret
push
mov
mov
or
pop
in
das
fs
in
testb
mov
mov
xor
rorb
in
jge
cmp
shl
add
aam
push
daa
call
xchg
mov
fwait
sub
adc
dec
sub
fstps
mov
or
sbb
int
adc
lock
jne
out
das
inc
loope
jbe
mov
call
fdivrs
add
nop
push
push
jg
mov
or
fwait
xchg
dec
xor
adc
rcll
inc
fwait
cmp
pop
aas
adc
lret
push
in
imul
dec
dec
insl
xchg
in
je
xor
and
adc
xor
inc
hlt
cmp
jnp
and
rcr
gs
lahf
xchg
lahf
ss
cld
xchg
push
loop
aam
ja
sbb
mov
insb
loop
pop
lea
imul
test
cmp
mov
sbb
sub
testb
pop
mov
cmp
pop
sti
mov
mov
aas
dec
icebp
sbb
add
mov
xor
aas
inc
ds
jns
mov
or
testb
call
mov
imul
sahf
push
ljmp
hlt
gs
inc
cld
daa
dec
decl
movsl
inc
pushf
cmc
mov
insl
xchg
pop
cli
xchg
and
cwtl
aad
call
outsb
inc
mov
lods
sbb
int3
xchg
or
dec
pushf
dec
inc
pop
dec
xchg
sbb
fwait
xchg
inc
aad
add
mov
pop
pop
aad
sbb
xchg
dec
aam
test
xchg
or
stc
mov
clc
xchg
in
cltd
cmp
add
add
push
dec
sbb
pop
mov
mov
xor
pop
aad
shlb
js
les
sbb
icebp
and
xchg
pushf
ret
cmp
push
fidivl
pop
lock
shrb
je
push
loop
aas
pusha
invd
sbb
insl
mov
mov
dec
pop
and
jp
addl
xchg
lret
data16
fst
push
mov
sbb
repz
pushf
dec
int3
sahf
mov
xor
aaa
lcall
sbb
mov
and
les
fs
mov
push
test
dec
jno
push
jle
push
pop
orb
xor
mov
mov
and
or
shll
add
pop
outsb
jae
fildl
dec
punpckldq
lods
bound
cmpsl
notb
idivb
pop
out
jb
filds
pop
xor
movsb
test
into
jae
or
and
and
mov
cwtl
mov
and
xchg
arpl
pushl
mov
mov
xor
divl
inc
push
movsl
imul
jle
jp
in
push
fdivr
lods
adc
mov
mov
ljmp
mov
int3
sbb
rolb
push
ljmp
aaa
or
dec
scas
or
push
cld
inc
test
jns
lds
je
push
push
xchg
popf
rorb
movsb
inc
dec
push
imul
push
mov
lds
jns
daa
popf
dec
jno
or
xor
test
sub
ret
jecxz
add
push
jnp
iret
dec
cmp
mov
sub
cmc
pop
sub
cmpsb
mov
push
mov
lds
and
xchg
je
xchg
insl
and
sub
xorb
adc
jecxz
shll
or
in
jb
in
cmp
mov
mov
cmc
add
and
pop
push
mov
jns
and
leave
sub
in
xor
sub
xor
pop
xchg
inc
push
mov
ja
mov
xchg
hlt
rcrl
push
jl
lock
ljmp
adc
add
ja
dec
or
push
dec
cmp
addr16
dec
mov
inc
aas
mov
xor
mov
ja
pop
aaa
add
cs
aad
lret
dec
repnz
cs
lods
or
loop
inc
call
sbb
ja
mov
push
pop
fucomp
push
cwtl
adc
shlb
rclb
adc
pop
pop
fmul
jecxz
xor
ret
lds
inc
push
jae
loopne,pt
test
hlt
add
mov
sbb
xor
push
orl
insb
fs
xor
dec
in
loopne
mov
shrd
insl
icebp
pop
pushf
pop
sahf
ss
jmp
jne
mov
rolb
adc
jns
adcb
test
out
movsl
lcall
adc
xchg
cwtl
mov
add
int
mov
leave
std
and
adc
out
adc
xor
daa
sub
js
jmp
or
pop
out
in
test
sub
xchg
cmp
or
pop
stos
mov
jl
or
push
test
sub
adc
aas
xor
or
inc
push
inc
xor
xor
push
loop
movsl
movb
and
in
dec
xchg
shrl
out
push
insb
push
test
cmp
push
pop
les
sbb
sarb
ror
add
push
loop
adc
cmp
loop
ljmp
push
xchg
cmp
cmp
xchg
mov
in
sub
stos
in
fdivrs
cmp
cmp
iret
jne
mov
add
inc
or
adc
inc
inc
jns
cs
jne
sub
mov
push
sbb
ret
jp
push
and
data16
xchg
xchg
mov
lea
jae
leave
pminub
sub
mov
mov
out
push
sub
loop
hlt
dec
xchg
or
adc
mov
nop
sub
dec
mov
ja
push
movsb
scas
incb
call
pop
sub
xchg
cmp
scas
test
in
sub
sub
mov
out
push
inc
xchg
test
sub
xchg
xchg
xchg
lahf
xchg
lds
cmc
ret
jno
mov
orl
xor
daa
rorl
and
mov
dec
test
leave
testl
sub
mov
or
xchg
xchg
mov
dec
dec
jecxz
xchg
ja
pop
xchg
cmp
sub
xor
add
pop
int3
leave
daa
mov
push
xor
stos
movsb
jbe
mov
add
lahf
push
shr
mov
mov
testl
mov
inc
sbb
mov
rcrl
das
insl
jmp
sub
sub
mov
adc
pop
and
sub
std
cmpsb
add
test
fbld
testb
add
ja
dec
or
dec
xor
jg
push
dec
cmp
or
mov
pop
scas
ret
idivl
iret
mov
xchg
out
je
dec
add
jecxz
mov
adc
or
incb
insl
aaa
inc
lods
and
movsl
fimull
jle
sbb
stos
mov
daa
and
adc
lcall
lea
test
hlt
loopne
push
outsb
xchg
insb
sbb
sahf
jo
add
sbb
xor
ret
mov
add
cli
push
push
es
aam
jnp
sti
push
add
cmp
jne
mov
adc
push
mov
outsl
test
xchg
xlat
sbb
ret
inc
pop
repnz
loope
pop
pop
adc
enter
mov
daa
test
xchg
or
fpatan
add
and
push
dec
sub
cmp
mov
nop
pop
into
lret
jbe
or
jno
into
call
shrl
scas
xchg
pop
push
stos
sahf
and
gs
xor
or
repz
outsl
ljmp
mov
add
leave
jecxz
sbb
sub
sub
int
leave
pop
pop
lahf
in
mov
jb
mov
pop
shr
jmp
inc
xchg
in
pop
fwait
and
das
cmc
push
test
add
jae
mov
pcmpgtb
mov
inc
cwtl
jp
cmpsl
lods
mov
js
test
pop
test
imul
push
jnp
ret
not
pop
or
push
jl
mov
inc
ja
xchg
push
xchg
push
jb
inc
loope
add
js
xchg
inc
les
xlat
cmp
sub
stc
dec
fadd
test
icebp
movsl
pop
mov
dec
jp
and
les
inc
xchg
popf
add
mov
xchg
hlt
cli
mov
sbb
shrl
jb
loopne
inc
fists
xchg
out
add
pushl
pop
inc
pushf
jo
sbb
push
lods
mov
adc
xchg
inc
jp
pushf
mov
dec
adc
aaa
out
pop
push
aad
popf
inc
inc
mov
repz
hlt
dec
dec
aam
pop
ret
divb
pop
mov
repz
dec
pop
cmpsl
mov
fwait
lds
mov
fwait
inc
mov
sub
fsts
lds
jae
arpl
out
repz
mov
scas
call
mov
pop
jge
mov
cmpsb
mov
mov
sti
hlt
cmc
add
pop
inc
sub
jg
rcrl
movsl
rclb
loope
outsb
clc
ret
mov
mov
dec
sarl
sub
out
xor
pusha
push
sub
out
mov
pop
fsts
mov
popa
mov
inc
mov
js
iret
mov
outsl
adc
jp
push
adc
les
orl
add
pop
add
and
negb
je
and
push
inc
mov
aas
mov
pop
test
mov
pop
inc
ret
inc
cmpb
mov
frstor
loope
mov
test
jbe
xor
test
jo
adc
ds
or
mov
ret
inc
add
xchg
popa
fs
dec
ja
dec
xor
cld
mov
nop
sarb
sbb
ret
or
push
jge
fadds
xchg
and
jg
popa
push
dec
xor
shl
shll
push
cmpsb
dec
fbld
jb
mov
mov
cmp
sbb
insb
lds
mov
or
xor
lret
mov
push
int3
rep
insl
insb
movsb
mov
cltd
pop
push
xchg
outsl
dec
aaa
dec
xorl
lods
mov
sub
hlt
cmp
push
and
sub
mov
mov
in
daa
xchg
pop
mov
sbbb
test
mov
push
out
ja
leave
lds
push
imul
mov
ja
xchg
imul
cwtl
mov
imul
movlps
sub
iret
jecxz
fwait
inc
dec
jo
arpl
pop
les
sti
inc
mov
pop
or
mov
incb
xor
mov
imull
and
mov
push
dec
xchg
fbld
dec
mov
pop
mov
lcall
stc
add
in
dec
jg
jbe,pt
mov
or
out
loope
mov
addr16
bound
test
cmpsl
cmpsb
sarl
cmpsb
test
or
add
mov
mov
pop
ret
mov
js
arpl
mov
pop
shrb
inc
outsl
inc
cld
mov
mov
or
and
xlat
mov
mov
push
fcomi
dec
push
sub
mov
sub
ss
or
aam
sub
or
popa
divps
clc
mov
fst
outsl
popf
mov
mov
lret
mov
inc
test
repz
es
dec
cmp
shlb
in
test
aas
or
lods
ljmp
push
inc
packuswb
xchg
rcrl
and
adc
testb
add
shlb
repz
inc
xor
sub
xor
int3
jae
dec
ljmp
cmpsb
pop
lret
sbb
sub
clc
mov
inc
in
ds
xchg
mov
std
jl
daa
xor
icebp
cmp
push
into
sub
test
or
mov
outsb
insl
add
stc
dec
aaa
add
testb
sbb
outsb
icebp
lahf
push
or
xor
mov
xor
xchg
adc
mov
push
cmp
clc
and
or
inc
xor
push
sub
fsubl
mov
shlb
cld
cmc
lds
es
or
das
movsl
mov
cld
push
jbe
scas
sbb
mov
das
loop
xchg
stos
dec
inc
out
mov
adc
cmpsb
add
nop
inc
add
lahf
xlat
jno
cld
mov
xor
sbb
sbb
xchg
outsl
int3
loop
loope
movsl
negl
cmp
dec
repnz
dec
mov
xor
adc
adc
lock
lahf
fs
sub
cmc
and
lahf
test
in
cs
leave
mov
cmp
mov
mov
mov
jp
inc
mov
adcl
lds
sbb
pusha
clc
loopne
fdivrl
scas
sub
jge
jmp
in
out
into
outsb
xchg
mov
or
pop
repnz
jbe
xchg
add
ljmp
cmp
push
loop
enter
xchg
rcrb
ljmp
sub
out
stos
cli
sarl
addr16
mov
cwtl
jno
pushf
and
out
fsts
addr16
lret
ret
sbb
sbb
outsb
jp
inc
fnstsw
mov
mov
adc
inc
or
add
mov
fwait
jnp
adc
rclb
push
push
fldt
popf
mov
out
inc
daa
mov
ljmp
loopne
ret
cmpsb
mov
cmp
add
insl
ja
mov
add
sbb
or
loope
rcrb
rorl
mov
jae
dec
add
cmp
lea
push
fstpl
fucomip
repnz
adc
cmp
push
outsb
pop
sbb
icebp
inc
call
jmp
push
int
and
or
sub
xchg
xchg
rcll
dec
xchg
cmp
push
jno
mov
jns
and
ds
mov
inc
notb
clc
add
stc
arpl
fistps
push
stos
loopne
pop
ret
sbb
loopne
dec
jle
jbe
push
int3
xor
sbb
fsub
in
sbb
lock
xchg
lea
jg
adc
outsl
cli
sub
or
addl
xchg
sub
xlat
mov
pop
in
das
faddl
aas
loope
jne
js
into
pop
push
stos
mov
sarb
and
sub
jbe
cmpsb
sti
sub
sbb
hlt
adc
mov
mov
and
leave
pop
mov
cwtl
inc
mov
fcmove
mov
shrl
fwait
shll
in
sbb
repz
sbb
pop
mov
jge
sar
mov
andl
sub
lods
fcoms
jmp
roll
test
ss
mov
iret
jge
dec
pusha
or
fidivrl
push
rorb
int3
stos
pop
inc
mov
sbb
cmova
xchg
mov
daa
adc
jno
loope
adc
mov
jecxz
test
dec
xchg
popf
pop
in
sbb
jo
test
pop
xchg
divb
lahf
lcall
cli
cmp
dec
and
jo
xchg
mov
cmpsl
pop
mov
in
lret
and
and
pop
adc
inc
roll
sti
sar
dec
mov
xchg
xchg
aad
pop
packsswb
sub
and
or
jne
cmp
cwtl
rcll
das
fisttpll
sbb
jno
add
js
addr16
ljmp
or
into
sub
shlb
imul
push
and
add
adc
dec
pop
lret
sub
cltd
jne
mov
mov
sub
in
or
sbbb
xchg
mov
mov
lods
movsl
cld
fsts
test
test
fwait
sub
pop
jo
mov
pushf
push
int3
mov
adc
js
insl
xchg
insl
jecxz
mov
aam
das
push
lods
mov
popf
adc
jae
lods
mov
inc
popa
test
jns
aad
jb
cmpsb
add
add
scas
jno
xor
jp
shrb
mov
xchg
push
test
sub
sub
mov
popf
stc
jbe
cs
mov
mov
push
into
jp
dec
in
daa
jg
xchg
jbe
enter
mov
insl
das
dec
sar
fnstsw
fsubrs
sub
or
sbbb
cli
xchg
mov
ret
mov
fidivl
dec
add
pop
mov
outsl
sub
mov
sbb
adc
aam
inc
inc
ljmp
jo
nop
push
sub
testb
test
je
sbb
xchg
mov
sbb
inc
stos
sahf
ds
or
push
or
es
stc
add
pop
ds
aad
xchg
mov
mov
subb
add
inc
mov
scas
adc
mov
mov
sub
or
xchg
jl
mov
sbb
push
or
test
test
cmp
pop
ja
jge
sahf
xor
jne
push
sub
sbb
push
inc
test
adc
pop
rcrl
arpl
pop
lea
push
sbb
lahf
dec
and
test
aad
add
lock
add
sti
xchg
pop
iret
fiadds
cmp
test
insl
or
ret
xchg
add
dec
mov
push
outsl
jbe
xor
jns
aam
push
push
dec
repz
xchg
pop
into
je
enter
out
lcall
cwtl
stos
lods
mov
pushf
inc
lods
test
sti
test
jmp
inc
out
into
pop
jns
mov
sbb
mov
cmc
orl
rclb
adc
mov
daa
int
jnp
ret
std
mov
push
xor
mov
iret
push
aas
pop
sti
loopne
lods
test
ficoml
lds
xchg
lods
jl
js
fbstp
das
daa
add
push
adc
inc
jae
mov
out
and
test
sub
bswap
lds
addr16
push
pop
mov
mov
loope
mov
push
pop
aam
inc
xchg
xor
or
shll
jg
fcoms
hlt
clc
or
and
jecxz
inc
lcall
imul
rolb
fsubrl
add
sbb
jnp
je
lahf
add
and
and
and
jl
aaa
test
repnz
test
mov
fldt
bnd
or
je
lret
dec
orl
mov
jge
xchg
dec
cmp
push
or
xchg
ss
pop
xlat
flds
push
xchg
push
cltd
iret
sbb
cmovns
or
outsl
aad
mov
xchg
aaa
ds
and
lea
fistl
push
push
pop
jp
push
inc
mov
mov
mull
out
js
push
insl
repnz
mov
sub
xchg
push
js
push
xor
aas
xchg
xchg
inc
aad
stc
cmp
and
and
nop
sahf
inc
and
into
add
cmpsb
sbb
add
and
jge
push
mov
cmp
lds
lods
mov
and
xlat
jge
scas
dec
cld
or
fimull
xorl
sbb
mov
sbb
and
dec
pop
femms
in
adc
shrb
jp
popa
or
std
mov
pusha
xchg
ljmp
and
aad
add
cmp
cmp
jbe
fsubl
cmc
dec
push
ds
mov
int3
mov
sbb
stos
sub
mov
mov
js
mov
adcb
cs
lea
jecxz
mov
lea
xchg
cmp
or
push
movsl
insb
or
mov
stos
movsb
in
sahf
ret
add
cmpsl
pop
mov
push
xchg
lea
mov
lods
jbe
jg
pop
mov
les
push
lret
xor
jbe
inc
incb
insl
loop
jnp
ljmp
mov
stos
push
xor
push
int
or
bound
push
dec
dec
inc
repnz
jnp
push
mov
cld
or
jp
cmp
int3
js
sub
push
xor
jbe
mov
jno
stos
jmp
lcall
xchg
ret
sub
mov
or
popf
mov
lret
pop
sub
add
cmpb
pop
mov
int3
jno
pop
jae
mov
cld
out
adc
and
scas
xor
pop
in
sbb
ds
cwtl
inc
mov
dec
movsl
fbld
inc
xchg
iret
std
pop
cmpsl
rcll
add
xor
sub
in
imul
and
mov
inc
push
xor
sub
fists
insl
clc
enter
fcmove
push
movsb
shrl
filds
jg
scas
das
or
gs
pop
orl
loope
shlb
adcb
add
push
fmuls
mov
mov
mov
xchg
sub
mov
push
sbb
pushf
cmp
add
mov
int
es
sti
daa
jnp
ds
out
adc
rcrl
mov
or
lea
aaa
or
andl
push
dec
push
repnz
lods
aaa
push
imul
push
repnz
test
add
lock
add
xchg
repnz
repnz
xor
stc
mov
pop
iret
es
loop
xor
sarl
xlat
dec
push
cmp
sub
xchg
jp
cmp
into
xchg
cmp
jo
jnp
push
pop
lea
jmp
fwait
jp
idivb
cmp
add
push
out
sarl
clc
aaa
mov
cld
fcmovbe
repz
xchg
xor
jnp
and
fs
adc
ret
lahf
fcomip
and
ficoml
push
or
cld
shr
das
fsin
ret
pop
daa
out
push
aam
cmp
sbb
add
mov
adc
ljmp
mov
dec
inc
sub
mov
push
int
inc
jmp
jns
fidivs
sbb
mov
and
or
jae
sbb
inc
idiv
cltd
inc
sarb
and
sbb
inc
ds
popf
xor
pop
push
jb
sbb
imul
adc
rclb
jno
rcrb
lret
pop
fsubl
in
cmp
scas
mov
cmpsb
ror
aaa
cmp
mov
cwtl
pusha
pop
cmp
mov
sbb
popf
shll
pop
jge
push
cmpsl
popa
movsb
call
xor
push
stos
add
sub
out
sbbb
clc
cmp
arpl
pop
clc
xchg
test
jne
push
aad
xor
xchg
testl
cmpl
negl
ja
mov
and
dec
push
or
inc
mov
cmc
push
xor
sub
pop
lds
fstl
repnz
shlb
inc
sbb
jne
adc
in
loope
inc
mov
adc
dec
lret
xchg
cmpsl
test
fwait
ret
mov
test
test
jns
call
aad
jns
lahf
cmp
outsl
or
cld
jns,pn
shl
in
sub
push
std
and
in
push
nop
cmp
stos
ds
push
pop
push
clc
mov
dec
sti
push
xor
ror
sub
aam
xchg
mov
lret
pop
xchg
sub
mov
pop
mov
aad
daa
mov
sub
loope
fmul
push
das
xchg
mov
lret
sbb
push
fildll
out
in
icebp
in
push
loopne
lock
dec
add
cmp
sub
xor
cmpsb
loopne
mov
pop
inc
lock
loope
dec
adc
mov
mov
les
jno
adc
mov
jbe
inc
pop
pop
xlat
popl
insl
sub
daa
adc
aam
into
sub
ds
aas
popf
and
adc
sbb
add
fwait
xchg
inc
pushf
lods
and
mov
mov
ljmp
and
cmp
add
mov
pop
push
inc
out
pop
cmpsl
cmp
or
sbb
std
push
mov
pop
xchg
nop
mov
adc
fsubs
sub
in
sbb
cmp
fisubrs
cmp
push
xor
testb
add
cmp
cmc
or
mov
jmp
pop
and
cmp
out
in
xchg
sbb
ds
out
xchg
xor
dec
mov
imul
sub
rcl
icebp
jb
pop
ficomps
jecxz
or
rorb
arpl
mov
sub
movsl
repz
mov
dec
test
add
pop
das
insl
jmp
or
cmp
mov
mov
repz
inc
sbb
inc
sub
shrb
ret
scas
cltd
lcall
dec
mov
or
pop
sbb
jnp
and
or
lret
mov
dec
mov
mov
fwait
add
cmp
pushl
fs
xchg
jle
arpl
inc
pushf
mov
mov
fwait
test
xchg
pop
sbb
xor
adcl
mov
cmp
dec
movsb
xor
cld
stc
into
in
pop
and
cmc
ret
in
mov
jle
xchg
jle
jb
mov
mov
sbb
insb
outsb
adc
jae
icebp
dec
push
pop
out
xlat
pop
dec
mov
sbb
sbb
cmp
sarb
js
sti
xor
jl
jo
mov
inc
mov
pop
mov
add
or
xchg
xchg
sbb
and
test
sbbb
mov
jle
pop
aad
or
adc
xchg
das
icebp
jne
mov
leave
inc
xor
test
mov
mov
sub
cmpl
xchg
add
jno
mov
loope
fistps
ret
inc
jle
jno
mov
fsubs
push
cmp
test
pusha
imul
jne
jl
push
sub
ret
das
xor
push
xchg
add
sarl
fwait
mov
xlat
lods
arpl
idivb
push
ljmp
aas
inc
jg
mov
call
add
addr16
sbb
mov
cwtl
jmp
shlb
xchg
test
xlat
mov
inc
decl
pop
int
mov
xor
lds
mov
pushf
xchg
icebp
ljmp
test
jmp
ss
sbb
inc
in
shl
mov
fildll
div
mov
xchg
cs
xchg
cmp
push
dec
outsl
leave
push
mov
cltd
xchg
into
inc
outsl
jns
js
stos
fnsave
fs
inc
insb
jns
sbb
ret
cmpsl
pop
clc
xor
dec
add
add
mov
and
fadd
out
dec
ficoml
subb
adc
data16
je
cmpsl
shr
adcl
fs
or
mov
jl
pop
mov
pop
shr
aas
push
mov
insb
lods
cmovno
lds
push
pushf
mov
sbb
jecxz
repnz
add
and
cmc
in
bound
shrb
adc
loope
xchg
mov
out
icebp
xor
enter
push
and
or
pop
inc
adc
mov
popf
mov
cmp
mov
ret
rcrl
daa
mov
or
or
pop
mov
mov
jb
add
dec
xor
fstp
xor
addw
mov
rcll
pushf
out
add
mov
cmpsl
repz
cmpsb
mov
bound
les
wbinvd
pushf
in
imul
notl
add
push
sub
dec
jmp
negl
xchg
add
rorb
push
int
sar
fdivr
jg
nop
arpl
xor
push
test
dec
int
mov
nop
ret
in
rcrl
cmpsb
jge
imul
push
mov
sub
lock
clc
test
xchg
ss
inc
sub
outsl
adc
inc
or
mov
popf
stc
cs
sbb
push
sub
xlat
xchg
imul
sbb
mov
filds
fwait
int
lret
movsl
lods
insb
pop
lea
push
mov
out
lcall
mov
jle
popf
and
scas
sub
jne
jl
fcmovnb
push
add
sub
fldl
fwait
add
or
xor
hlt
jge
aam
mov
pushf
push
mov
fisubrl
cmp
xchg
lcall
adc
jmp
xchg
je
jno
std
shll
xchg
lock
out
in
fs
cli
or
sub
imul
jg
push
inc
arpl
xor
add
sbb
jae
sbbl
mov
in
xchg
adc
ljmp
adc
and
xor
pusha
rolb
push
xor
or
pop
cmc
scas
shl
in
mov
enter
addr16
lock
inc
push
js
xchg
sub
add
sub
mov
dec
pop
and
in
adc
xchg
sbb
cld
dec
pop
test
jae
jle
push
mov
adc
enter
daa
pop
ss
sar
mov
ret
into
lret
mov
mov
mov
cmp
xor
cmp
int
rolb
sti
push
in
mov
fadds
into
xchg
rcr
mov
out
rclb
dec
lock
sbbl
lcall
inc
aaa
lret
out
inc
mov
adc
cltd
hlt
push
jecxz
lret
mov
pop
aad
lret
xchg
pop
pop
ret
sub
in
cmp
xchg
rcrb
add
or
pop
es
jp
pop
cltd
hlt
icebp
aad
xchg
sbb
les
push
jno
add
mov
adc
fwait
add
adc
add
jbe
ret
mov
add
pop
xor
fwait
mov
scas
pop
pop
mov
xlat
cltd
xchg
add
xchg
xor
neg
dec
pop
and
xchg
in
cmp
adc
les
bound
mov
jmp
or
mov
jl
push
jg
lret
insl
inc
fdivs
ja
popf
arpl
fadds
cmp
pop
orb
lods
inc
lcall
shld
lcall
ss
cwtl
rcrl
sub
mov
xor
fsubr
and
xor
cwtl
and
sub
je
sbb
jg
ret
add
inc
test
nop
cli
add
std
adc
inc
sti
sub
sub
icebp
pop
mov
add
xor
enter
sbbl
movsl
push
adc
not
push
mov
pop
or
pop
pop
xor
xor
push
push
jl
xor
addb
cmp
mov
ds
xchg
add
mov
sub
dec
insb
test
nop
out
cld
sbb
mov
sub
cltd
rorb
jp
jne,pn
andb
dec
ds
aas
daa
lea
xchg
mov
pop
xor
dec
insb
sbb
xchg
mov
jne
and
dec
inc
cmp
int
push
cmp
fists
xor
ja
ret
and
cmp
xor
shl
jno
jns
std
pushf
dec
movsb
pop
mov
gs
pop
nop
xchg
jo
mov
test
popl
into
iret
imul
sub
fisttpl
xchg
mov
xor
out
xchg
in
mov
xchg
in
dec
movl
cltd
xlat
or
add
mov
add
in
leave
mov
mov
inc
xor
je
sar
ficomps
push
gs
iret
std
and
dec
in
add
in
test
adc
lret
sbb
cmp
and
mov
sbb
and
mov
je
jbe
ret
sarl
mov
cmp
push
pop
mov
ficoml
outsl
in
push
inc
and
xchg
fistpll
loop
jbe
cmpsb
stos
cmp
in
sub
pop
lods
adc
je
push
jmp
sub
scas
dec
jl
push
imul
scas
and
xchg
sub
fsubl
push
sub
stos
aas
test
mov
enter
fwait
in
dec
jne
sub
rcr
and
cmc
out
popa
sbb
sti
sub
rcr
sub
int
or
sub
lock
fidivrs
push
nop
push
sbb
lahf
std
scas
rorb
lds
sub
push
or
or
xchg
or
push
fcoms
lahf
mov
jo
roll
dec
fidivrl
push
cmp
dec
fisttps
mov
dec
mov
cmc
addb
nop
stc
xchg
outsb
mov
mov
push
adc
jmp
mov
xchg
das
js
imul
scas
xor
mov
dec
sbb
sbb
das
add
in
mov
cltd
adc
bound
out
scas
int3
cli
pop
jle
mov
cltd
adc
dec
and
cwtl
push
fdivrp
rcrl
sbb
adc
mov
xchg
in
decw
xor
mov
fisttps
jle
adc
leave
test
out
dec
sub
subb
dec
mov
into
mov
ret
xchg
cmpsb
hlt
pop
fadds
lret
and
pop
dec
movl
add
push
ret
movl
ss
lods
mov
jl
lods
pop
inc
iret
mov
pushf
pop
cmp
dec
out
xor
sbb
or
adc
arpl
xor
testl
test
lcall
repnz
insb
cmc
dec
out
add
mov
inc
fnstenv
sbb
jae
stos
lret
fwait
mov
push
addr16
jmp
pop
outsl
insl
insb
test
rolb
or
popa
popa
loope
std
dec
adcl
jnp
fmull
in
mov
add
insb
inc
addr16
mov
dec
pushf
mov
pop
cmc
pusha
lock
insb
ret
xchg
ljmp
cmp
cs
mov
mov
dec
shl
cmp
ret
jecxz
fiadds
enter
lret
negl
sahf
int3
pop
imul
cmp
push
mov
mov
push
jne
sub
out
divb
jecxz
push
cmpsb
or
rclb
sub
fcmovne
movsl
insb
leave
pop
adc
imul
dec
sbb
scas
sub
inc
xorl
cmp
std
mov
cmpsl
lock
cmpsb
dec
fidivs
or
fs
cli
pop
sbb
sub
cmpsl
fidivrl
sub
add
mov
mov
stos
cmp
pop
sbb
adc
dec
fs
fwait
or
jp
fwait
ljmp
rcll
testb
xchg
pop
push
mov
cmp
sbb
cmp
inc
rolb
aam
sarl
push
xchg
aam
mov
pop
loopne
adc
popf
shl
loop
adc
insl
movsl
dec
loopne
shrb
lods
das
ljmp
jle
pop
inc
ja
lea
mov
inc
cmp
pop
hlt
aas
inc
and
jns
lods
sar
lods
test
fsubrs
push
std
mov
xchg
cwtl
daa
loope
int3
mov
cmp
sbb
sub
sbb
dec
loop
lds
jns
add
testl
xor
mov
hlt
mov
xchg
jae
stc
cld
push
pop
fdivr
pusha
pusha
jbe
loopne
mov
pusha
roll
or
ljmp
dec
add
fstpt
out
adc
jbe
loop
insb
push
jno
sbb
lods
and
xchg
or
jnp
insb
pop
iret
into
pop
and
jns
gs
add
push
cmp
sbb
mov
mov
cld
mov
cmp
or
mov
jne
lcall
nop
out
pop
ret
add
in
lock
xchg
mov
sub
xor
lods
pop
sbb
mov
jns
mov
sbb
insb
cli
stos
add
roll
stc
mov
mov
push
xor
and
sti
and
xchg
push
leave
mov
cmp
ja
xor
and
into
hlt
lahf
xor
xchg
stos
push
pop
out
orl
cmp
cmp
pop
lcall
popf
xchg
xor
mov
mov
dec
jp
insb
ss
scas
xchg
push
cs
push
loopne
jo
lret
inc
jo
movsl
dec
inc
mov
mov
and
cmp
fidivl
loop
adc
mov
popf
push
xor
add
jge
cltd
dec
sub
mov
sbb
jae
jle
cmp
orl
test
jmp
mov
repz
jb
mov
sar
test
call
pop
enter
xor
rcrl
js
or
xchg
adc
in
cmpsb
clc
pop
pop
cmp
in
mov
fbld
shr
sbb
xchg
push
aas
aas
or
hlt
mov
ss
push
inc
xchg
xchg
cwtl
pop
push
aad
xor
xchg
fistpll
aad
addr16
out
or
mov
mov
iret
repnz
cmp
insl
mov
stos
in
scas
stos
in
xchg
xor
in
cli
aaa
andb
ljmp
sbb
adc
in
add
adc
jg
rcrb
movsb
ss
das
cmp
mov
fwait
push
fists
xor
sub
dec
mov
out
movsb
rorl
push
add
call
dec
jno
fildll
out
hlt
add
out
lods
push
jp
mov
jbe
adc
cmpsl
movsl
jecxz
sahf
insb
pop
mov
sbb
push
xchg
xor
cmp
xor
mov
sbb
push
dec
add
test
add
mov
pop
incl
mov
orb
repz
cmp
dec
sbb
jmp
dec
inc
sub
mov
or
rorl
add
ss
add
push
mov
popa
jb
dec
xor
scas
cmpsl
arpl
movzwl
cld
out
test
jnp
mov
xchg
jge
adc
hlt
loope
aaa
jecxz
xor
jmp
outsl
sub
inc
and
dec
cwtl
xor
dec
mov
inc
jge
add
inc
nop
jnp
rep
cmp
hlt
mov
adc
xchg
js
ret
ret
out
repnz
shl
dec
outsl
push
fiaddl
imul
enter
gs
or
and
sbb
es
mov
jmp
ja
pop
lret
adc
jb
rolb
mov
repnz
adcb
aas
pop
xor
js
arpl
adc
outsb
xor
xchg
xchg
test
mov
ljmp
mov
pop
movl
into
cmp
out
mov
std
adc
push
outsb
pop
lods
stos
sbb
dec
shrb
lds
aaa
test
repnz
pop
or
push
sub
in
cli
stos
add
xorl
push
loopne
es
aam
lods
sbb
mov
adc
inc
ja
inc
popa
or
mov
xchg
mov
or
or
pop
cld
mov
push
push
adc
xor
xchg
or
rcrb
cmp
cmp
push
shl
cmpsb
stc
mov
outsl
inc
mov
cmp
sahf
sub
lods
cltd
xchg
xor
pop
mov
sti
jns,pn
add
push
fldl
sub
das
mov
call
sti
cmpsb
in
stos
cmp
leave
jnp
loopne
pop
jb
aas
pop
adc
data16
jle
nop
sub
insl
loope
cli
dec
mov
subl
add
mov
out
out
add
dec
aas
xchg
mov
mov
mov
mov
cmp
test
cli
gs
jp
jo
int
xchg
in
mov
test
adc
adcb
add
dec
xor
pop
cld
fdiv
xor
jmp
mov
sbb
sbb
pop
pop
fcomps
cli
and
cmpsl
aad
pop
xchg
cmp
push
xor
push
xchg
mov
jnp
inc
call
hlt
sbb
or
mov
cmp
arpl
xchg
mov
xor
xor
in
scas
cmp
mulb
ss
mov
hlt
add
mov
and
xor
push
fs
xor
pop
pop
bound
mov
or
cmpsb
call
pop
testl
inc
mov
pushf
sub
adc
xor
lods
jmp
lcall
mov
jno
mov
pop
fcoms
ret
gs
push
dec
mov
loopne
sbb
aad
addr16
das
push
das
mov
lret
arpl
adc
stos
in
jecxz
in
fcomps
loope
sub
cmpsb
cmp
and
mov
daa
mov
mov
adc
adc
jnp
in
and
daa
outsl
mov
test
xor
pop
adc
inc
pop
xor
and
repz
xchg
inc
xchg
mov
pop
mov
mov
sub
pop
xchg
dec
jmp
and
cmp
fs
mov
jle
pusha
cmpsb
ret
jnp
xor
les
push
mov
fwait
xchg
cli
mov
lret
scas
inc
and
lock
dec
jecxz
fs
xchg
add
push
mov
clc
or
popf
out
insb
cmp
xor
push
mov
adc
movsl
mov
add
testb
inc
jno
pop
ljmp
pop
dec
pop
pmulhuw
pop
or
pop
clc
icebp
mov
mov
dec
sub
push
pop
shrw
jge
pop
push
shll
xchg
rcrb
lret
cmc
jecxz
test
push
xchg
fcmovu
lds
mov
enter
or
fldl2e
lods
mov
dec
push
lret
adc
pusha
dec
ljmp
mov
jne
mov
sbb
and
js
add
mov
mov
xchg
dec
mov
mov
xchg
outsl
rclb
test
arpl
and
and
decb
sbb
or
dec
mov
cmp
scas
test
adc
add
sub
inc
jmp
gs
push
scas
out
in
jns
xchg
inc
nop
enter
pop
pushf
pop
outsl
nop
mov
cmp
shll
or
pop
add
shrb
dec
jo
push
cmp
test
negb
ja
pop
aad
xor
adc
dec
cmp
mov
cld
inc
data16
jg
pop
out
in
rclb
loop
hlt
or
xchg
add
stos
andl
insl
rorl
cs
scas
data16
sbb
popf
xor
rcll
push
out
jecxz
aaa
xchg
pusha
push
shlb
dec
adc
and
push
adc
sbb
imul
pop
mov
fisttpll
in
pop
jmp
mov
mov
das
sbb
lock
xor
fcompl
or
xor
mov
movsl
jp
and
loop
in
fnstsw
push
inc
cld
rcpps
push
scas
sub
sbb
ret
mov
xchg
shrb
adc
jmp
rcrl
int3
add
out
js
lds
addr16
dec
mov
push
push
and
jns
mov
mov
stos
ret
lods
aaa
pop
add
test
push
pushf
jb
sbb
mov
pop
push
movsl
inc
imul
cmp
xlat
nop
arpl
jne
in
test
fs
jb
and
pusha
fs
mov
adc
mov
push
mov
xor
gs
es
insb
pushf
or
lods
jp
lcall
xchg
scas
xchg
and
lret
js
xchg
mov
loopne
sbb
jle
dec
stos
nop
jmp
loopne
sub
lods
mov
and
cltd
movsl
outsb
dec
sahf
or
cwtl
adc
jnp
fcoml
aam
sbb
cmp
mov
cmpsl
imul
arpl
jmp
and
scas
loop
icebp
js
xchg
xor
data16
pop
stos
jl
mov
xchg
inc
pop
push
insb
pop
mov
cmp
scas
sub
sub
xor
cli
scas
jns
mov
mov
add
int
ret
lods
xlat
mov
repz
cmp
ret
stos
jle
cmp
fidivrs
das
jbe
movsl
push
jno
xor
inc
push
stos
jns
fadds
aam
mov
cmp
pop
aad
mov
addl
and
lret
adc
ret
mov
dec
push
cmc
pinsrw
aad
div
ljmp
cmp
call
sbb
lds
repz
xchg
push
push
mov
fists
or
push
mov
mov
in
lahf
orl
lret
je
mov
jne
repz
imul
ljmp
mov
jnp
movsb
fs
mov
arpl
adc
cwtl
fdivrp
aaa
scas
out
xlat
ret
inc
mov
pop
in
dec
pop
mov
xor
push
xchg
loop
sbb
pop
sbb
loop
hlt
jecxz
in
int
adc
jnp
pusha
push
xorl
inc
bnd
add
popf
insb
or
bound
lods
out
mov
xor
mov
imul
fwait
xchg
mov
movsl
jmp
dec
push
js
cltd
push
mov
jg
mov
mov
faddp
sbb
int
sbb
repz
repz
std
and
fsub
push
sbb
jg
lahf
pusha
inc
inc
aaa
aam
jle
push
outsb
lret
push
cmp
ret
or
in
nop
mov
scas
repz
xor
xchg
lods
daa
xor
dec
stos
pop
lahf
xchg
in
popa
test
enter
mov
leave
cmp
cmc
ljmp
xor
popa
pop
rcll
sti
push
ret
xchg
xor
dec
mov
dec
les
frstor
xchg
mov
jl
or
icebp
rorb
pop
icebp
sub
fisttpll
fistpl
jne
cli
or
aaa
or
ja
xchg
jp
mov
imul
adc
enter
test
shll
fistl
pop
fadds
repz
mov
adc
stos
jns
or
inc
int
and
xor
out
cmp
ret
es
das
push
mov
movsl
stos
sbb
mov
sti
push
imul
jmp
lret
jge
loopne
das
sbb
jl
mov
scas
pop
sarl
and
inc
cmpsb
xchg
mov
inc
pop
clc
fsub
incb
add
loop
cmpsb
ds
in
adc
xchg
movsl
imul
xor
in
mov
scas
mov
mov
cld
mov
inc
into
xor
fmull
jb
lea
es
and
push
push
addr16
and
cltd
std
loopne
out
jbe
ljmp
push
jg
xchg
scas
jbe
leave
or
cmp
shll
cmp
adc
out
inc
iret
cmc
sahf
sbb
decl
cld
push
cmp
in
bound
inc
lods
add
sbb
jnp
repnz
testb
in
jl
mov
dec
jle
out
mov
jle
sbb
mov
push
jmp
int3
fcompl
dec
shrl
or
pop
xchg
jecxz
test
lcall
mov
inc
jne
lock
stos
cmpsl
fprem
cld
xchg
and
mov
sub
sub
ret
sbbl
inc
data16
xchg
jo
cmpsb
movsl
jno
leave
popa
fdivs
cmp
int3
aaa
and
flds
icebp
mov
call
nop
adcb
fisttps
cli
pop
sbb
mov
shl
pop
add
aas
fidivrl
adc
rcrl
or
push
xchg
adc
rcrb
or
mov
sbb
aas
cmp
jne
jge
xchg
xor
mov
inc
test
mov
adc
add
or
xchg
sub
ss
stos
in
pushf
jbe
imul
outsb
ljmp
pop
cmpsb
cmp
push
dec
inc
mov
jnp
test
mov
scas
popf
adc
cmpl
jmp
in
mov
shlb
fisttps
push
aad
lods
bound
mov
sbb
pusha
sbb
mov
daa
xor
cmp
inc
and
adc
jne
insl
xchg
push
sbb
mov
sub
popf
out
repz
aam
pop
roll
fs
mov
xor
cmp
cmc
sub
jno
mov
cmp
and
orl
sub
dec
test
outsl
sbb
jnp
dec
mov
push
xchg
cli
mov
ds
jbe
mov
pop
xchg
mov
sbb
mov
and
cmp
xor
test
add
and
xchg
mov
sub
pop
test
sbb
mov
lds
mov
jno
lods
das
sbb
and
pop
enter
pushf
shrl
add
xchg
xor
gs
adcl
xchg
mov
cltd
imul
jle
sub
imul
mov
inc
ss
xor
push
mov
inc
das
icebp
mov
stos
movsl
outsl
lds
and
pop
jnp
loope
lahf
or
stc
sub
pop
adc
sahf
inc
cmpsb
dec
mov
jmp
mov
jno
push
mov
in
fstpl
mov
stos
jo
cmp
or
pop
imull
dec
cmp
clc
test
mov
lret
clc
or
mov
fidivs
mov
das
lret
mov
pushf
test
pop
aas
fnstsw
loopne
and
ds
xchg
xor
iret
inc
xchg
imul
outsl
addl
push
ja,pt
and
or
fsts
inc
xlat
or
mov
and
inc
icebp
in
pop
ljmp
stc
scas
inc
jae
push
cmpsl
hlt
ret
ljmp
push
fisubrs
out
jp
jns
push
inc
gs
in
inc
adc
mov
mov
repz
daa
pop
xchg
inc
pop
in
stos
mov
ror
retw
push
data16
bound
mov
sub
call
or
pop
inc
add
in
imul
mov
insl
dec
movb
int3
xchg
jae
cltd
test
out
je
cmp
ds
adc
gs
rcrb
shrw
addr16
mov
lcall
cmp
xchg
das
inc
das
sbb
pop
pop
push
pop
and
jl
cli
pop
popa
xchg
xor
sbb
jp
mov
sub
inc
mov
cmp
add
lock
pushf
mov
sti
sbb
xor
xor
fsts
inc
jb
test
cmp
push
outsb
fwait
fwait
aas
jg
push
repnz
pop
pop
mov
jmp
xchg
fildll
lods
jnp
nop
mov
add
into
mov
cmp
mov
sbb
fs
out
lret
bound
sahf
dec
mov
pop
dec
sub
in
cmpsb
roll
jecxz
sub
push
nop
das
jmp
out
jmp
mov
or
jo
sbb
fcoml
jl
sub
dec
je
movsb
stc
and
pop
aaa
jb
xor
sub
or
push
adc
mov
inc
ja
xor
repnz
testb
outsl
add
mov
sub
rol
xchg
xlat
ljmp
sbb
xor
push
bound
push
jle
add
inc
mov
insl
jle
cli
mov
sub
lock
mov
or
jbe
in
ja
cs
add
fs
jmp
mov
addr16
dec
addb
cmp
pushf
push
sub
add
test
jle
push
subl
inc
adc
pop
aaa
stos
mov
pop
sbb
ret
add
pop
mov
popa
pop
dec
arpl
xchg
das
gs
lds
jo
sub
push
mov
adc
ja
cmc
shlb
mov
mov
xchg
mov
mov
mov
pushf
lock
insl
nop
or
sub
push
insl
cmc
test
movsl
jne
loope
xchg
aas
nop
hlt
in
fistpll
inc
lods
sub
repz
add
imul
pop
fisubs
fwait
sahf
out
adc
ja
repz
and
imul
xor
sbb
test
aas
filds
and
and
and
in
mov
pop
mov
int
inc
stos
mov
arpl
pop
sbb
cltd
loopne
repz
stos
addr16
push
ficompl
xorl
push
in
cmpb
and
scas
loop
pop
test
mov
mov
popa
xor
inc
nop
and
xor
cmp
stos
mov
or
add
or
imul
dec
jle
mov
push
inc
sbb
and
jnp
push
daa
shlb
or
cltd
mov
pop
push
push
stc
je
andl
lods
adc
and
inc
cmpsb
cmp
jmp
pushf
mov
xlat
jbe
add
push
shl
jb
mov
and
add
jbe
cwtl
jo
movsb
pushf
push
xlat
sbb
in
cmpsl
push
cltd
cmp
sub
cmp
stos
push
jns
mov
push
addr16
cmp
lods
inc
loopne
push
lock
dec
shlb
pop
or
mov
fs
ror
add
popa
mov
xorb
lret
xchg
pusha
bnd
pop
lahf
test
aad
fbld
jnp
cbtw
mov
push
pop
aaa
adc
pop
dec
mov
jge
loop
addr16
adc
jmp
mov
mov
pop
addr16
ret
rcrb
cmp
stos
xor
inc
in
int
add
adc
dec
div
inc
fstl
aam
lcall
pop
roll
lods
fcomps
mov
out
movsl
test
icebp
inc
mov
jnp
sub
pop
leave
xor
loopne
push
jge
pop
jge
lock
stos
dec
sahf
mov
cs
bound
mov
in
movsb
xor
sti
adc
nop
ds
or
pop
insb
sbb
outsl
or
stc
push
movsl
adcb
and
add
daa
pop
mov
xchg
and
dec
xorl
insl
xchg
shr
sub
pop
and
and
bound
adcl
ss
cmp
cmpsl
cli
fs
mov
cmc
cli
icebp
lret
push
jp
dec
jl
inc
fisubrs
dec
repnz
and
js
and
mov
popl
ljmp
jns
cmp
jns
add
xchg
test
addl
lock
mov
out
inc
cmp
iret
lea
add
out
lock
mov
mov
dec
xor
cmpsl
inc
push
add
pop
cli
inc
xchg
mov
sbb
int
jb
call
inc
jmp
cmp
mov
ret
dec
call
jecxz
pop
xchg
lret
mov
shll
das
out
testl
je
pop
inc
and
cld
adc
mov
xchg
call
mov
pushf
leave
xchg
push
jp
daa
mov
lcall
lds
inc
mov
and
out
push
out
test
pop
cmc
into
loope
mov
movsb
insb
and
dec
or
adc
in
pop
pop
and
jo
je
cmp
push
jmp
sbb
pop
or
lock
je
daa
iret
mov
mov
fs
mov
push
xchg
sbb
sahf
testb
test
ficomps
sub
nop
sbb
or
pushf
test
inc
icebp
or
stos
push
fsts
pusha
enter
je
cs
dec
inc
inc
dec
lea
xchg
cmp
sub
rcl
fs
out
xchg
imul
jl
lock
cld
stc
push
pop
cmp
or
mov
mov
clc
adc
nop
and
ds
cmc
movsb
inc
dec
add
pop
fidivrs
sbb
cmc
add
inc
ss
and
pop
aam
cmpsl
sahf
jnp
jne
shl
pop
clc
add
in
setbe
or
popa
adc
pusha
dec
jo
movsl
pop
add
cs
inc
arpl
push
add
inc
cmpsl
or
sub
push
fidivrl
dec
cmp
xor
cmp
flds
push
sbb
cmp
nop
in
or
jbe
insb
in
ret
mov
insl
cld
sub
fistl
ds
mov
push
bound
xchg
stos
ret
dec
addb
xchg
inc
movsb
pop
test
pop
xor
lock
mov
sbb
inc
and
adc
clc
ror
mov
cmp
inc
and
shrl
repnz
xchg
ss
fwait
in
jp
lods
pusha
and
shll
mov
ret
add
push
jmp
fidivrl
adc
push
xor
dec
orb
sub
in
test
jne
xchg
jecxz
aad
or
cmpb
inc
in
shrb
sarl
dec
xor
xchg
xor
fsts
insb
jecxz
mov
inc
inc
test
mov
ds
in
int
sub
icebp
cmc
stos
inc
jp
or
aam
stc
dec
xchg
jnp
loope
push
je
inc
in
movsl
mov
imul
sbbb
push
inc
lods
push
clc
ds
js
shrl
push
fildll
imul
pop
pop
ljmp
leave
popf
adc
cwtl
imul
scas
xor
dec
mov
out
inc
xchg
pop
insb
loopne
xor
loopne
pop
xchg
pop
pushf
xchg
out
imul
addl
imul
inc
sahf
and
cltd
lods
in
sub
in
add
jmp
fisubrl
and
inc
lret
stc
mov
call
je
push
xchg
adc
sbb
dec
sti
cmp
ss
fwait
inc
gs
jnp
dec
sub
movsl
clc
xchg
xchg
jg
ds
inc
aad
test
sar
mov
adc
mov
faddl
mov
paddw
sub
pop
insb
mov
xor
mov
adc
stos
xchg
fcoml
repz
lret
xorb
fs
mov
loop
dec
loopne
jecxz
sbb
sbb
lret
adc
lret
push
test
dec
movsl
fidivrs
dec
pop
ljmp
int
cmp
lods
inc
loopne
mov
jge
push
mov
fmul
adc
mul
dec
lret
dec
mov
jb
inc
ret
jmp
mov
jle
fiaddl
icebp
movsl
mov
pop
xchg
dec
push
pushf
fwait
pop
push
fbstp
add
loop
in
test
bt
xchg
mov
fstps
adc
cmp
add
in
xchg
imul
call
arpl
mov
fldcw
xchg
mov
mov
push
sti
adc
cmc
js
sub
push
inc
and
push
add
cltd
push
add
or
int
cmp
mov
pop
and
inc
mov
add
push
es
cmp
jae
popa
dec
cmpsl
dec
js
xor
movsb
jl
sbb
jg
jmp
lea
pop
pop
mov
inc
std
mov
mov
pop
mov
call
or
imul
in
jns
out
pop
js
add
bound
pop
xor
xchg
out
ret
fisubl
psrlw
push
lock
rclb
add
mov
and
bound
ret
xor
aas
rcrl
das
mov
loope
mov
cmp
sub
and
ret
rol
and
jne
out
adc
jge
pop
dec
jae
mov
push
jecxz
jmp
cmp
stos
aas
mov
addr16
arpl
leave
jbe
loope
out
inc
sbb
bound
orl
fisttps
or
mov
pop
lods
imul
cld
dec
fists
mov
das
adc
or
sahf
jmp
xorb
ds
push
bound
xchg
or
shll
pushf
loop
dec
mov
inc
adc
out
scas
ret
mov
shll
xor
push
cmpsl
cli
push
push
sub
lret
ret
push
shll
push
int3
in
das
dec
or
dec
mov
jnp
adc
inc
mov
pop
mov
adc
sti
mov
mov
xchg
mov
ja
lret
cmp
inc
xchg
jmp
fcoml
pop
xchg
decl
stos
sub
add
and
jo
push
movsb
fs
pop
cmovbe
pop
mov
ret
sub
sbb
sub
cmpsb
test
jne
adc
mov
cmp
dec
out
fcomps
adc
in
arpl
push
mov
mov
jbe
cmp
mov
cmpsw
mov
cmp
jecxz
adc
dec
and
jnp
das
out
shr
aas
adc
or
aad
push
cmp
jne
rcrb
pop
imul
dec
call
test
mov
test
fmull
mov
mov
jns
lret
sub
push
dec
mov
sbb
jmp
cmp
mov
loop
xlat
xchg
adc
xor
movsb
js
xchg
rcl
sub
mov
ret
jg
dec
mov
dec
incl
sub
mov
movsb
cltd
cmp
invd
sti
notl
push
cld
arpl
cli
popf
mulps
or
xor
mov
or
mov
push
call
push
sub
jl
adcb
inc
xor
jmp
mov
pusha
shrl
into
scas
xor
outsb
repz
test
outsl
mov
dec
es
aam
fdivp
loopne
mov
jp
sbb
sub
pop
cld
cwtl
negb
adc
lahf
ret
lock
push
jae
lea
jns
or
xchg
mov
fisubs
mov
xchg
movsb
and
enter
lahf
outsl
dec
mov
mov
and
scas
pop
jae
scas
ret
push
sbb
out
adc
sahf
xchg
mov
in
clc
pusha
cli
lret
cmp
push
loop
ss
or
and
ret
pop
mov
insl
and
ret
sub
les
icebp
xor
cmp
mov
sbb
pop
imul
insb
sub
push
hlt
cwtl
mov
repz
mov
sub
or
sub
push
aas
shll
mov
clc
je
call
dec
mov
jae
mov
dec
cmpb
xchg
push
xor
sub
mov
arpl
push
js
out
pop
add
sbb
hlt
shl
mov
in
mov
dec
mov
in
sub
mov
push
or
cmp
cmp
in
ljmp
lea
push
pusha
lock
scas
daa
in
in
xchg
push
dec
cmp
ficompl
sar
test
pop
add
repnz
sub
fwait
in
ja
jg
lods
cli
add
mov
movsl
les
xchg
sbb
xor
movsl
pop
fstl
stc
jp
inc
fbld
pop
xchg
fnstsw
fwait
scas
push
xchg
xchg
pop
lea
sub
xchg
jno
into
adc
sbb
dec
xchg
es
cltd
xchg
outsb
lahf
mov
pop
inc
imul
jp
inc
mov
shr
sub
sbb
xor
mov
xor
or
stos
mov
push
outsb
sub
adc
in
xor
scas
jno
jecxz
test
arpl
mov
xor
push
roll
ds
jns
jnp
sub
or
dec
mov
xor
and
aad
enter
inc
mov
enter
pop
push
mov
xchg
lret
lret
or
or
stc
dec
jno
adc
jns
cs
jmp
les
push
flds
scas
aaa
roll
cmp
xor
xchg
xchg
jbe
out
cltd
cwtl
cld
xorl
jecxz
rcrb
mov
pop
inc
jmp
or
ja
ds
in
pop
mov
out
jg
pop
idivb
mov
inc
clc
jns
out
mov
loop
dec
push
ficompl
movb
scas
sti
fnstsw
add
jo
je
ret
inc
jmp
add
fstl
pop
xchg
mov
sahf
movsb
rep
loop
inc
mov
loope
and
insl
bound
mov
decl
jecxz
mov
push
outsl
cmc
addb
gs
cmc
leave
pop
nop
cmpsl
mov
imull
mov
je
pop
out
and
xor
std
cmp
sbb
lods
jno
inc
pusha
scas
or
xchg
in
adc
sub
mov
xchg
mov
cmp
ljmp
ret
jge
fistps
les
shrb
xchg
movsb
dec
pop
pop
call
out
push
pop
and
insb
pop
mov
jno
loop
xchg
fdivp
sub
hlt
sbb
in
jns
movsl
out
mov
inc
add
add
xchg
jl
stc
add
pop
mov
ret
ret
lods
xor
shrl
cmc
sarb
mov
mov
xchg
das
loopne
sub
push
mov
xor
test
mov
int3
in
imul
mov
xchg
test
ror
push
fwait
sbb
and
push
lret
lea
adc
sbb
mov
jge
sti
sbbb
pop
push
aam
push
decb
outsl
aas
negl
fstpl
mov
pop
and
cli
jb
rolb
jne
das
iret
adc
frstor
jecxz
fwait
and
enter
divl
xchg
and
mov
sbbb
fdivs
setp
faddl
jmp
adc
adcb
stos
ficompl
fstpt
hlt
imul
xchg
xor
movsl
push
insb
add
sbb
fdivs
outsl
lea
mov
cmpb
jg
and
pop
pusha
nop
jle
faddp
and
mov
pop
add
push
xor
sub
into
adc
pop
push
adc
inc
lret
in
xchg
and
xchg
add
mov
imul
or
out
popf
lods
dec
in
cltd
lahf
scas
xchg
lds
add
popl
imul
xor
push
pmaddwd
pop
rcl
push
adc
inc
cltd
loope
repnz
rcr
push
leave
lret
andl
or
dec
sti
scas
insb
aam
bound
and
mov
popa
mov
and
pop
insl
cmp
in
pushf
testl
adc
ljmp
inc
cs
lcall
xor
ficomps
xor
push
pop
dec
bound
or
into
ficompl
sbb
push
jmp
lret
push
mov
pop
xorl
push
sbbl
shrb
sbb
icebp
mov
rorl
lock
sbb
std
mov
outsl
pop
add
add
jl
mov
imul
cmp
push
dec
movsl
cmp
dec
int3
iret
pushf
or
ficomps
dec
jmp
in
and
or
jl
into
test
xlat
or
call
out
xchg
shll
outsl
pusha
cmp
push
in
testb
js
mov
je
dec
loope
mov
inc
xchg
into
pop
xor
mul
add
pop
jo
nop
jmp
cmpsl
rcl
shlb
push
fadds
mov
nop
ficomps
dec
push
fs
scas
jecxz
aaa
rclb
stos
and
shll
in
jle
nop
js
dec
pop
xchg
ss
adc
pmulhw
push
popa
or
cmp
mov
xor
sbb
and
adc
mov
xchg
push
sarl
xlat
or
dec
lds
popa
mov
cmpsb
outsb
scas
movsl
dec
xor
add
fsts
test
sbb
mov
mov
push
fdivp
cmp
lds
clc
cwtl
dec
pop
test
rorb
xchg
rcrb
add
fildl
adc
jp
ja
xchg
jne
add
xchg
lock
popa
inc
jl
xor
divl
aaa
int
scas
sub
fdiv
xor
loopne
inc
sbb
and
ss
stos
fucomip
rolb
mov
dec
rorb
mov
sbb
pop
lret
pop
mov
add
fldenv
insl
mov
cmp
or
inc
or
sarb
sbb
into
and
out
mov
int3
rclb
andb
mov
inc
es
push
loopne
or
pop
cld
sahf
and
into
lods
or
dec
pop
jns
inc
xor
push
inc
push
lcall
leave
hlt
addr16
xor
jo
popa
or
jne
adc
mov
in
int3
ss
mov
leave
insb
push
sub
in
xor
aas
movsb
aaa
push
sbb
inc
adc
out
pop
jge
mov
and
sub
xchg
jne
fwait
push
nop
jle
inc
test
sahf
pushf
add
lret
dec
sub
mov
push
dec
iret
or
fs
mov
imul
jecxz
iret
aaa
mov
pusha
xor
pop
movsb
sarb
in
testb
sbb
mov
xor
fwait
outsl
nop
mov
mov
sub
push
ja
fisubs
mov
jecxz
leave
lret
mov
cwtl
rcrb
pop
xchg
mov
insl
mov
f2xm1
sub
cmpsb
sbb
xor
cmpsb
in
xchg
cmp
int3
loop
or
arpl
fisubrs
jo
adcb
inc
pusha
cmp
ret
jp
mov
fidivrs
lods
inc
inc
jo
ljmp
loope
and
mov
arpl
push
mov
sub
add
jo
mov
stos
subb
shll
out
xor
mov
lret
out
mov
cwtl
stc
mov
mov
push
stos
mov
test
idivl
ss
jl
cld
test
inc
movsb
or
in
xor
pop
inc
mov
outsl
push
jb
add
cmc
sub
adc
pop
lret
insl
mov
cs
sarb
push
sbb
cmp
xor
outsb
pop
fmull
mov
imul
jae
push
mov
add
call
call
pop
jbe
cltd
fcmovnu
cli
aas
aam
mull
rorb
push
xor
add
out
shrl
sbb
mov
in
pop
and
sbb
stc
cmp
mov
and
adc
adc
xchg
jmp
mov
fiaddl
js
push
adc
and
sbb
xchg
pop
or
cmp
jno
sarl
jae
push
and
out
repz
ja
inc
push
decb
pop
imul
out
push
add
sbb
inc
shl
test
orb
stos
fists
xor
fwait
imul
out
mov
das
lret
gs
stc
sub
cmp
stos
fwait
add
sbb
push
inc
sub
pop
mov
pop
xchg
or
jne
pop
aas
addl
dec
mov
rep
outsb
adc
lock
cmp
mov
mulb
mov
inc
icebp
jge
leave
push
push
xor
sbb
mov
jecxz
inc
mov
mov
jne
jle
mov
inc
mov
or
add
xlat
js
xor
fimull
mov
pop
lret
outsb
popa
std
std
les
ljmp
mov
pop
pop
cmp
popa
adc
pop
aam
jb
std
mov
cmpsl
or
mov
cltd
sbb
mov
aas
jmp
das
aam
popf
cld
loope
sbbl
xchg
push
pop
sbb
shll
dec
inc
jle
jecxz
stos
data16
dec
in
ret
ds
popf
out
daa
jb
xor
sbb
dec
and
xchg
jge
sub
dec
data16
mov
add
jle
loop
sbb
gs
push
inc
imul
jno
push
int3
rorb
decb
je
dec
shlb
push
sahf
jo
push
rolb
cmp
xchg
leave
sub
dec
push
scas
dec
sub
xchg
js
cmc
out
scas
mov
inc
in
cwtl
sbb
out
pop
jg
ficompl
sub
xchg
fisttps
gs
sub
shlb
pop
leave
cmp
insb
dec
std
nop
dec
mov
nop
and
int
xchg
add
add
push
mov
rclb
lods
mov
jns
mov
ja
pop
xlat
cmp
push
push
lcall
inc
jno
out
lahf
seto
orl
mov
int3
push
icebp
test
add
jl
push
gs
in
gs
cli
or
cmp
cltd
test
xor
rclb
fimull
mov
xchg
sbb
jnp
mov
scas
int
xchg
mov
mov
clc
pushf
push
or
dec
and
mov
push
movsb
mov
mov
dec
aam
les
push
xchg
lret
and
insb
mov
sub
push
jo
lcall
pop
in
xchg
clc
mov
mov
movsl
ret
inc
test
pop
in
ss
mov
movb
adc
cld
sbb
jmp
adc
or
pop
cmp
out
sbbl
fbld
and
fdivrp
in
add
bound
dec
push
jne
insl
push
in
xchg
push
decb
out
jg
std
push
sti
dec
lahf
mov
pop
push
push
push
lea
imul
popf
jnp
push
stos
xor
or
scas
mov
cmovo
jg
or
daa
or
jae
das
xchg
js
mov
fsubrl
xchg
sbb
out
mov
testl
pop
rorb
in
xchg
aaa
add
loop
xchg
out
cmp
in
sub
cmp
leave
shlb
and
adc
dec
push
dec
xor
add
xchg
js
cmc
or
or
dec
inc
lds
cmpsl
dec
dec
nop
adc
insb
orl
pop
cli
roll
lds
shlb
nop
cli
xor
jl
adc
jne
mov
xor
mov
lds
inc
je
or
and
stos
add
sbbl
out
add
fdivrs
cmpsl
stos
mov
pop
mull
loop
pop
xchg
jnp
or
cmp
dec
je
inc
jbe
mov
pop
into
test
add
je
mov
inc
out
lock
ret
int3
push
jns
inc
mov
sub
cltd
push
mov
cld
pop
sbbb
mov
ja
fsubs
pop
adcl
cwtl
clc
fs
mov
outsb
stos
mov
pop
test
pop
loop
les
cs
push
arpl
xor
fs
dec
adcb
pop
pusha
shufps
mov
xor
aaa
and
xchg
punpckhbw
or
pop
inc
push
mov
xor
icebp
cmpsl
std
cli
orl
add
in
push
fneni(8087
dec
xchg
icebp
repz
xchg
mov
sbb
cltd
fcmove
pop
jo
lock
call
adc
mov
mov
jl,pt
aas
icebp
rcr
sub
xor
sub
stc
in
jl
sub
jnp
ficoms
jle
add
in
sub
sub
pop
outsl
mov
out
dec
push
ss
mov
mov
mov
fisttps
push
je
mov
into
mov
sti
pop
add
mov
sbb
fidivrs
or
out
or
cmp
je
insl
cmc
jne
imul
fbld
fs
hlt
daa
add
xor
push
scas
mov
sbb
rolb
sub
jmp
lcall
je
pushf
aas
mov
and
cmp
fdivr
insl
or
or
ret
aaa
add
xor
icebp
ret
stos
sbb
xchg
mov
pusha
ds
or
rcr
shl
cs
mov
pusha
popf
xchg
or
lahf
repnz
insl
mov
push
inc
or
subl
repz
movsb
cli
test
cwtl
pop
les
in
or
cwtl
in
mov
sbb
mov
rcll
mov
stos
dec
loopne
popf
mov
add
aaa
orl
or
sub
mov
dec
and
sbb
rcr
lods
pop
addr16
jp
mov
sub
out
xor
nop
call
shlb
lods
inc
xchg
out
xchg
sub
bound
sub
rorb
mov
aad
xlat
inc
cs
je
jg
sub
scas
xlat
cltd
test
jo
pop
fdivs
xor
push
lods
insb
cmp
and
outsl
push
pand
cltd
inc
mov
movsl
mov
cmp
test
mov
data16
push
pop
mov
mov
inc
cmc
in
loopne
imul
push
inc
jg
or
cmpl
fucomp
adc
mov
stos
jns
lea
mov
dec
adc
iret
xchg
ficompl
ficoms
popf
adc
pop
cwtl
xchg
fcom
mov
fisttpll
fisttpl
stos
rclb
adcl
pop
imul
lahf
sub
or
cmc
xchg
cmp
push
mov
xor
sbb
test
push
nop
int
hlt
test
sbb
repnz
hlt
iret
sbb
add
add
push
lret
pop
lret
enter
stc
das
js
cmp
adc
sbb
std
xchg
in
call
repz
aad
jge
mov
cli
jecxz
add
es
push
into
test
sub
imul
leave
jo
int3
sahf
push
iret
pop
call
das
notl
inc
inc
loope
inc
repz
add
xor
inc
sub
ficoml
cmp
pop
mov
jecxz
scas
bound
mov
mov
mov
xchg
and
xchg
rcrl
addr16
aaa
enter
imul
jp
pusha
jmp
xor
jecxz
mov
mov
inc
das
mov
notl
push
or
xorl
aad
daa
stc
pusha
inc
outsl
or
sahf
and
jae
loop
mov
mov
aas
rolb
push
inc
movsb
pop
mov
outsb
adc
push
jp
dec
into
cmpsl
cltd
mov
cmp
fildl
jns
fcom
xor
inc
xor
xchg
pop
xchg
mov
in
and
loope
test
lea
mov
xchg
es
sbb
adc
mov
cmp
cld
jge
push
je
pop
scas
pop
stos
clc
sbb
mov
outsb
jno
sbbb
faddl
ds
ficomps
aam
jge
adc
jae
adc
and
pop
lret
add
cmp
lea
xchg
insl
cmp
pop
inc
mov
add
popa
in
sbb
sahf
lds
jge
inc
xchg
and
fiadds
cmp
movsb
mov
in
adc
cmpl
adc
sub
mov
lcall
cld
sbb
sbb
insb
xchg
cmp
push
lods
cli
out
dec
mov
out
fdivr
arpl
imul
subl
dec
test
sbb
into
rolb
popa
xor
stos
into
xchg
pop
jl
orb
jg
jne
in
int3
mov
adc
shll
call
push
mov
into
or
into
rcr
das
testl
cmc
mov
mov
dec
and
into
inc
add
filds
mov
cli
mov
mov
fwait
out
fstpt
std
sahf
cli
push
sub
and
andb
xchg
xor
xor
loop
jge
lret
mov
sbb
imul
jae
scas
cmp
jno
jmp
stos
xor
test
xor
mov
clc
xchg
jno
push
std
push
adc
xchg
movsb
cltd
out
lea
push
xor
xchg
data16
add
js
mov
sbb
sbb
mov
or
lock
xchg
ss
shlb
cld
xor
mov
aas
mov
shrl
aaa
mov
xchg
cmp
addr16
xchg
pop
mov
inc
xorl
and
orb
inc
xor
iret
cmp
mov
mov
adcl
and
xor
fisttpll
decl
push
fsubrl
dec
insl
mov
ja
pushf
push
mov
shrl
test
or
add
jno
sbb
imul
jbe
jb
gs
xchg
jle
push
mov
cmp
mov
cmp
mov
into
adc
pop
jbe
mov
icebp
jmp
adcb
inc
fcoms
xor
mov
int
scas
lret
push
mov
out
pop
pop
jnp
pop
cmp
adcl
ds
pop
stos
jmp
in
mov
in
pop
iret
jp
sahf
jbe
xchg
lahf
movsl
jl
and
push
movsl
xchg
jmp
or
sub
sub
add
jecxz
mov
cltd
cmpsb
aaa
xchg
dec
imul
xchg
pop
aad
dec
dec
and
std
and
sti
arpl
movsl
pop
push
xchg
cs
ja
push
int3
negl
fstpl
pop
inc
sub
jmp
adc
test
cli
push
fwait
push
and
adc
in
xchg
inc
xor
jnp
adc
lods
dec
push
mov
into
xchg
fs
push
mov
dec
cmc
popa
fidivl
mov
mov
cld
xchg
int3
mov
sbb
jnp
cmp
add
icebp
out
enter
mov
rcll
jno
cs
test
scas
cmp
sub
fs
fldl
nop
pushf
push
out
pop
shlb
adc
xchg
pusha
popa
dec
dec
push
mov
jl
jne
jns
jg
fsubs
aaa
iret
sub
test
cmc
aaa
mov
sub
mov
xchg
jae
jns
test
andb
mov
leave
nop
xchg
fmulp
test
rorl
gs
sub
mov
popf
adc
or
mov
nop
inc
call
mov
push
popf
dec
aas
dec
outsl
fcmovb
pop
xchg
roll
mov
les
adc
je
mov
cld
sti
into
dec
push
dec
movsl
xorb
jo
mov
cltd
dec
lods
int3
xchg
adc
jmp
imulb
xor
jge
ljmp
lock
add
imul
xor
ficoms
mov
negb
cs
mov
dec
or
pusha
pop
addl
fs
lret
pop
pop
cmp
insl
out
and
dec
fnstenv
ds
push
mov
call
mov
jo
loope
and
push
mov
sub
shrl
cmpsb
ret
mov
sbb
dec
push
jo
rorl
jnp
rcr
repz
sbbl
mov
test
or
cmpsb
sub
lahf
inc
mov
int3
out
push
jns
cmc
jne
psubd
cmp
pop
popa
enter
cld
push
ficoml
out
enter
sbb
push
movsl
pop
fiaddl
out
ljmp
iret
sbb
int
enter
and
jl
mov
lahf
sbb
mov
inc
inc
aas
mov
jg
insb
cmp
mov
mov
adc
xor
and
insl
cmp
mov
fmuls
sbb
push
sub
adc
pop
mov
pusha
sbb
sub
aam
inc
pusha
jge
adc
fcomps
mov
in
adc
sub
mov
jecxz
sub
fmul
ficomps
mov
nop
xchg
addr16
push
loope
out
loopne
mov
mov
and
aaa
aas
loopne
outsl
sahf
mov
inc
jmp
fs
add
add
inc
popa
into
loopne
andb
dec
fadds
fstps
xor
hlt
or
dec
stc
fnstcw
pop
sbb
sar
loop
pop
push
push
in
xchg
push
outsl
shlb
test
jmp
cmpsl
mov
test
out
push
fdivrl
ljmp
push
xor
mov
enter
addr16
cltd
xor
or
out
mov
pop
adc
pop
je
mov
mov
ret
idivl
add
das
xor
pusha
push
cmp
cmp
ljmp
push
aas
mov
dec
push
addr16
testl
mov
mov
ffreep
fsts
loope
mov
clts
je
jo
cmp
adc
andl
jp
push
dec
fnstcw
movsl
sub
daa
insl
pop
push
out
pop
inc
repz
inc
pop
and
mov
pusha
ljmp
hlt
adc
push
or
jo
sbb
das
rorl
and
and
iret
and
mov
shll
daa
sub
imul
mov
adc
dec
mov
fisttpll
ret
in
addl
inc
sbb
mov
mov
imul
dec
psllq
cmp
dec
aad
sub
fwait
xchg
lret
negb
jbe
adc
fwait
mov
test
pop
mov
mov
and
loopne
xchg
mov
js
pop
jecxz
scas
or
addb
cltd
popa
je
out
jbe
ja
cld
mov
mov
imul
push
and
add
imul
dec
scas
or
mov
pop
cmp
test
stc
ret
fmuls
das
idivb
sbbl
outsb
ljmp
stc
sub
push
and
cli
fbld
cmp
dec
xchg
decl
mov
movsl
aam
mov
xchg
mov
push
stc
pop
out
inc
mov
jp
xor
stc
das
loop
imul
mov
ss
mov
cmp
jge
in
movsl
sub
dec
das
xchg
sbb
sbb
push
xor
jae
jno
adc
lea
dec
xor
mov
icebp
in
add
or
lret
mov
add
outsb
aad
xor
mov
outsl
add
scas
out
cmp
add
add
inc
cmp
mov
scas
adc
sti
scas
cmp
mov
sahf
adcl
pop
mov
mov
xchg
pushf
leave
add
xor
scas
outsl
sub
icebp
fistpl
and
and
rorl
jmp
in
inc
jbe
sbb
je
push
pop
pop
or
scas
pop
sti
enter
mov
mov
test
mov
aaa
in
xchg
lods
mov
fwait
imul
sub
outsb
adc
filds
mov
mov
and
ljmp
gs
sub
lods
cmpsb
imul
lock
and
insb
outsl
mov
cmp
pop
aad
icebp
lods
rcrb
and
test
ffreep
adc
push
mov
enter
shr
cmpsb
aas
mov
rcrl
xchg
xchg
cmpsb
test
lea
fwait
sub
and
test
pop
repz
bound
dec
or
shrl
cmp
dec
fs
mov
cmpsb
out
lea
mov
pushf
mov
pop
rcr
adc
or
pop
xchg
xchg
push
ret
cmp
mov
out
mov
in
jle
inc
sbb
scas
xor
cmp
fwait
or
ret
jp
jmp
mov
sbb
into
cmpsl
xlat
fsubl
inc
movsb
bound
stos
and
movsl
inc
pop
and
add
jl
pop
jne
fisttpll
cli
mov
mov
sbb
push
dec
pushf
mov
mov
push
imul
jp
mov
lds
imul
jmp
jl
or
gs
pop
dec
test
cmp
std
jmp
jmp
mov
out
sarl
or
into
test
mov
dec
or
or
scas
pop
push
mov
pop
jmp
cmp
pop
fcoml
fwait
out
xor
inc
mov
dec
mov
fmull
push
fs
pop
lret
cmc
and
inc
xlat
xchg
mov
ret
cmpsl
inc
adc
push
mov
add
xor
imulb
das
and
dec
aas
mov
imulb
pop
push
lcall
sbb
cmp
outsb
dec
std
rcrb
popa
sbb
out
mov
loopne
sbb
cli
push
xor
and
rorl
inc
dec
sub
jecxz
ret
mov
lret
stos
xor
lahf
push
sti
dec
push
insb
shlb
xor
mov
dec
xchg
leave
subb
fiaddl
push
das
inc
pop
xchg
xchg
or
test
sar
neg
pushf
pop
stos
in
adc
movsl
int
pop
into
mov
fidivrs
pusha
pop
jg
je
cmc
cmp
std
jecxz
lret
cmpsl
je
jbe
xor
cmp
xor
pop
pop
adc
fs
into
lret
loop
clc
or
inc
adc
cwtl
pop
mov
lea
push
xor
daa
fnsave
sbb
adc
mov
jbe
pushl
jne
adc
or
test
movsl
lahf
dec
gs
lahf
jmp
dec
cmc
mov
fsubrl
imul
adc
and
sbb
and
lea
push
aad
jb
out
cmp
mov
push
jb
push
rcr
arpl
xchg
jecxz
inc
dec
insl
in
shrl
jns
mov
shrb
sub
ljmp
lds
call
jl
inc
test
mov
mov
insb
pop
jl
aas
and
xchg
nop
stc
inc
jp
pop
dec
adc
xor
xor
ja
jmp
sub
inc
lcall
sub
in
in
lea
cmp
add
in
cmp
xchg
mov
cmp
pop
pop
inc
cmp
rclb
test
dec
push
xchg
je
addl
xchg
sbbl
mov
inc
push
sti
pop
jge
ret
lock
or
push
test
jle
mov
stos
ret
pushf
insl
jle
insb
inc
iret
jb
jns
fsubrs
dec
fnstsw
jno
je
sbb
xor
mov
mov
stc
je
inc
icebp
inc
push
faddl
adc
arpl
or
outsb
pop
out
insl
outsl
add
jo
jo
cmp
mov
lahf
enter
lock
repnz
mov
sbb
add
xor
sahf
dec
sub
mov
pop
ret
repnz
lods
mov
into
push
lahf
popl
dec
dec
pushf
sub
push
jecxz
out
pop
out
ss
pop
inc
lods
js
cwtl
push
loopne
fisubs
jmp
mov
dec
add
mov
je
sbb
sbb
in
or
add
loop,pt
and
sbb
mov
xor
ficoms
dec
pop
outsl
xchg
daa
add
mov
rolb
mov
ljmp
aad
das
call
pop
std
mov
xor
ds
mov
lret
shrl
jne
repnz
lret
fwait
addr16
cmp
pop
leave
fwait
scas
mov
adc
adc
mov
xchg
insl
fdivrl
push
popa
bnd
movsb
mov
insl
arpl
pop
jne
mov
test
xor
mov
cmpsb
repz
pop
jno
out
mov
jne
sti
stos
lods
push
bound
repz
xor
pop
mov
icebp
xor
dec
rcr
xchg
xchg
or
dec
dec
cwtl
lods
jmp
shrb
dec
call
imul
aas
pop
xor
ja
sub
inc
popa
sbb
popf
stos
out
or
imul
fstl
pop
iret
push
lds
bound
mov
stos
pop
xchg
shlb
mov
push
and
push
dec
bnd
xchg
fstpt
jne
dec
mov
insl
sahf
subl
out
ret
mov
mov
sub
push
inc
test
addr16
mov
mov
scas
sti
inc
mov
inc
popf
add
out
mov
test
mov
fbstp
xchg
push
into
cmpsb
fcoml
gs
add
adc
sbb
cmc
sbb
jle
xchg
xor
xor
hlt
mov
scas
jns
je
fidivl
xor
pop
test
add
jno
stos
ja
push
cmc
sahf
vpsraw
xor
pop
ja
mov
cmc
cmp
out
adc
xchg
and
xchg
sub
fisubs
loopne
inc
cmp
xor
and
das
sti
mov
test
rcll
jns
in
mov
aas
cltd
das
inc
mov
je
and
dec
mov
test
mov
jbe
push
test
ja
or
psraw
cmp
aas
mov
loopne
cmp
lock
mov
sbb
jmp
cs
jno
dec
pop
sti
stc
sarl
inc
into
xchg
pusha
push
add
popf
xor
es
adc
clc
push
rclb
pop
cmpsb
fmull
dec
lods
mov
add
cmp
xchg
fiaddl
loopne
int
scas
xchg
in
cld
stc
int
filds
or
dec
mov
sbb
insb
icebp
mov
jae
push
or
repnz
aaa
gs
fwait
mov
cs
sub
rcl
inc
dec
clc
jle
shrl
mov
pushf
loopne
dec
cmpsb
nop
lock
sub
xorb
push
iret
fstl
lahf
or
jecxz
dec
pusha
mov
and
fcomps
jecxz
pop
xchg
loopne
mov
loop
pop
notl
call
sti
push
push
in
jno
add
dec
pop
cmp
rcrb
sub
adc
insl
adc
mov
add
push
inc
add
jno
jnp
xchg
mov
jno
mov
cmp
jb
fnstsw
xor
vaddps
js
into
rorb
imul
in
out
and
push
sub
cmp
and
ja,pt
pop
xor
test
lret
sub
std
cmc
lods
inc
aaa
les
out
lock
dec
dec
lahf
repz
orl
xchg
push
xor
adc
test
lret
sbb
cmpsb
aam
ja
rorl
xchg
jo
xchg
pop
in
add
xor
pop
movsl
xor
scas
jns
sub
jnp
and
inc
jbe
jo
xchg
push
mov
inc
push
hlt
xchg
pop
addr16
inc
push
mov
pop
and
or
mov
mov
xor
jb
movsl
adc
and
mov
dec
mov
pop
sahf
addr16
test
arpl
ljmp
stos
pop
jl
orb
cmp
and
out
adc
pop
sub
fwait
cmp
adc
jns
cld
rcll
inc
push
test
fsubs
xor
je
jno
cmp
sbb
fisubs
jb
mov
jnp
cmp
or
outsl
mov
stc
test
jno
jge
inc
cmp
dec
jne
lahf
das
inc
push
sub
adc
sbb
xor
sbb
mov
scas
rolb
add
sti
mov
lock
mov
jle
and
pushf
pop
xor
jae
scas
daa
or
movsl
sub
in
sub
add
mov
pop
add
data16
lret
stc
or
push
divl
xchg
iret
lods
or
adc
daa
push
mov
call
cwtl
inc
ljmp
out
inc
jle
xor
mov
inc
fisubrs
dec
or
popf
fisubs
inc
jp
stos
cmp
inc
mov
dec
lods
xor
lcall
add
and
push
mov
jne
xchg
bound
mov
mov
dec
cmp
cmpl
out
inc
sub
push
pop
aas
repnz
mov
pop
popa
adc
idivl
cmp
cwtl
insl
mov
movsl
sub
inc
into
xchg
push
adc
cli
je
lea
scas
or
in
sbb
leave
jne
xlat
pop
xchg
ret
and
les
xchg
pop
neg
cmp
cs
xor
push
lret
out
rorl
and
sbb
test
pop
push
cmpsb
sti
ds
mov
or
sub
jno
shlb
fs
enter
mov
jmp
push
xchg
mov
loopne
mov
sbbb
mov
dec
push
jnp
cmp
out
mov
shl
popa
jnp
push
cmp
pop
roll
mov
sbb
jno
dec
adc
adc
in
jl
stc
dec
sahf
ds
stos
aad
jbe
mov
mov
arpl
cmp
dec
add
ret
sub
cmc
lea
xor
test
dec
sub
into
aaa
mov
lock
cmc
stos
lcall
hlt
push
pop
sub
ret
stc
inc
ja
out
pslld
pop
lea
jp
cs
mov
fucomp
mov
fsubrp
xchg
pop
roll
mov
jle
xchg
add
negl
sub
call
push
iret
cmp
xor
adc
mov
stos
int3
cltd
add
std
sub
out
cs
pop
adcb
les
pop
jmp
sbb
adc
ds
in
rclb
push
addb
shrb
add
paddw
movsl
xchg
and
out
sbb
mov
cmp
ja
mov
imul
and
mov
in
aam
into
inc
mov
push
or
stos
dec
adc
fisubl
or
js
or
cmp
in
addr16
or
xor
dec
idivl
jge
arpl
gs
cmc
add
out
sub
cmp
lods
and
sub
adc
add
outsb
test
cmp
or
aam
test
rcll
notl
push
jecxz
inc
lock
fs
or
mov
cmp
sti
stc
inc
out
add
fisttps
dec
jge
dec
cld
call
dec
rcrl
mov
mov
or
inc
notl
mov
adc
pop
lret
push
jecxz
in
mov
dec
loop
addb
stc
push
pop
in
pop
cs
mov
loop
push
out
jnp
sbb
das
fisttps
adc
add
arpl
int
mov
ret
sub
jge
movsl
call
mov
jo
loop
cmp
sbb
dec
jp
sub
adc
jl
daa
sbb
loop
scas
icebp
sahf
push
in
pusha
jmp
int3
addr16
std
sub
addr16
mov
loop
push
inc
mov
push
xlat
aam
mov
out
lods
movsl
push
xchg
cmc
icebp
test
lret
adc
ds
and
inc
gs
imul
xlat
gs
xchg
xchg
lret
ror
jp
sbb
and
scas
ret
xchg
cmp
test
xchg
loope
xor
push
mov
popf
sub
push
loop
push
stc
pop
aaa
add
lds
xchg
pop
push
xor
mov
daa
jbe
ljmp
pusha
push
push
iret
jns
push
es
xchg
pop
dec
xor
mov
jmp
push
jae
popf
inc
leave
pop
sub
add
xchg
mov
jo
outsl
in
jecxz
subl
ljmp
arpl
or
pop
mov
pusha
add
cmpsl
or
dec
aaa
pop
xor
xor
xchg
mov
sti
xchg
pop
cs
push
sbbl
aad
sti
push
mov
dec
xchg
fcmove
ret
jae
rolb
cmp
mov
fs
add
adc
xor
in
sbb
fistl
inc
test
adc
jmp
enter
loopne
movl
out
xchg
js
fldcw
aas
out
sbb
mov
jmp
das
ret
aad
sbb
int3
sarl
and
cs
out
adc
sbb
daa
cltd
fs
mov
cld
lods
pop
mov
stc
sbb
std
lds
mov
mov
push
xchg
push
jnp
fisubrs
mov
stc
sbb
mov
add
xchg
cld
fstl
flds
jae
arpl
stc
inc
cltd
pop
mov
xor
in
add
lret
lcall
sti
bound
int
push
push
dec
popa
in
neg
xchg
es
out
jns
sbb
xlat
push
dec
mov
call
shl
jge
pop
xchg
mov
je
sti
inc
sub
data16
mov
popf
sub
clc
sti
out
push
pand
or
js
jae
sbb
or
mov
xchg
aaa
pop
bound
pop
inc
inc
jg
icebp
dec
cmp
int
sahf
inc
nop
sbb
inc
out
jae
mov
jnp
dec
lock
mov
mov
inc
xchg
sub
push
cld
sbb
adc
push
mov
fdiv
shrb
mov
xchg
and
cld
cmp
test
mov
xor
jnp
addr16
jmp
lea
repnz
int3
pushf
cmc
push
jbe
add
mov
mov
sbb
sbb
fs
dec
push
jle
mov
inc
or
rcrb
aam
cld
adc
mov
insb
cmp
rclb
push
jl
xor
add
arpl
and
and
cmpsl
mov
in
std
psllw
ret
xor
cmp
scas
jbe
cld
jge
in
leave
and
push
pop
inc
jns
cmpsl
arpl
jmp
lods
inc
xchg
dec
incl
cmpsb
add
decb
push
ja
jno
mov
testl
push
mov
rorl
inc
test
daa
out
xor
js
lret
push
mov
mov
mov
add
data16
add
or
and
jp
mov
shlb
and
cli
in
lret
int
push
test
cmp
scas
sub
dec
in
xchg
pushf
add
outsl
sti
pop
outsb
cmpl
push
xchg
dec
adc
cmp
mov
icebp
test
and
imul
lock
xchg
int
add
adc
cmpb
xor
mov
loopne
int
mov
mov
mov
mov
or
push
push
dec
add
jl
ffree
mov
dec
cmp
jmp
jle
pop
nop
push
pop
in
inc
aaa
and
mov
jno
dec
pop
or
pop
cmc
adc
jmp
cwtl
out
push
sub
scas
xorb
cmp
jns
rcrl
pop
push
mov
fbstp
inc
sbb
mov
add
cmp
cmpsl
inc
push
fmulp
push
mov
in
into
mov
loopne
fists
push
aam
and
lods
adc
fwait
stos
push
roll
or
call
xchg
mov
push
stos
pushf
and
test
pop
cwtl
push
bound
mov
ljmp
or
pusha
cmp
push
pop
icebp
insl
pop
adc
and
push
adc
xchg
out
xlat
leave
jns
in
cmp
and
push
xor
icebp
mov
ja
gs
sbb
mov
pusha
adc
leave
mov
stos
mov
test
cmp
lcall
xor
mov
popf
lret
fwait
adc
cmc
filds
stos
dec
mov
sahf
nop
mov
jecxz
insl
inc
in
hlt
sub
xor
in
cs
jb
mov
cmp
pop
jl
movsb
scas
add
daa
push
insl
mov
pop
mov
add
mov
jae
ret
push
js
inc
dec
jno
sub
icebp
or
add
fcmovu
cltd
aas
jo
in
std
mov
cmpsl
and
mov
pop
jmp
sub
outsl
lcall
das
and
test
movsl
push
cmpl
cmp
jg
popf
push
xchg
out
out
outsl
add
into
mov
pop
cmc
add
mov
jmp
push
rol
push
movsl
xor
mov
paddq
jecxz
adc
push
pop
push
jne,pt
cld
fdivp
js
sub
push
or
cmp
pushf
scas
mov
push
mov
movsl
fs
adc
rcll
dec
jmp
and
xor
push
xor
push
daa
and
xchg
setg
ss
pushl
push
xchg
int
ss
xor
cmp
xchg
sub
loope
pusha
push
rclb
adc
push
sbb
outsb
loopne
xchg
mov
sbbb
movsb
cmp
or
outsl
movsl
sub
inc
cmp
xor
jge
stos
inc
es
or
shrl
jns
xchg
dec
dec
repnz
ss
int3
cmp
dec
pushf
push
push
mov
sarl
push
test
stc
arpl
lea
lret
lret
insb
or
test
movsl
imul
daa
lods
jge
pop
sbb
cmpsl
xchg
sub
inc
inc
cmp
cwtl
ret
ja
add
cmc
jge
xorl
xchg
movsl
and
add
mov
leave
pushf
test
xlat
inc
lods
pop
add
sub
push
into
loope
sbb
adc
ret
mov
xor
int3
cmp
sbb
icebp
dec
cmp
mov
lret
cmpsl
insb
mov
sub
loopne
xor
pushf
sub
addr16
xlat
sub
pop
stos
dec
xor
aad
aam
xor
jg
add
cmovs
mov
dec
out
mov
pushf
sub
sbb
xchg
out
dec
out
inc
sbb
ret
mov
add
cmp
mov
push
fucom
dec
xchg
data16
je
lock
mov
xchg
mov
cmp
mov
iret
pushf
push
add
subl
rcrl
cld
cltd
in
mov
sub
push
mov
cwtl
movsb
out
cld
lock
test
cmpsb
push
push
ds
pop
std
xchg
sub
mov
or
sarl
and
in
or
dec
gs
idiv
and
sbb
imul
lahf
enter
or
sbb
cmpsl
jp
test
sti
push
adc
and
mov
inc
jg
or
mov
fwait
imul
push
xchg
cs
dec
das
sub
inc
cmp
push
mull
mov
mov
mov
inc
mov
pop
je
lcall
push
in
push
sbb
add
jge
pop
fbstp
mov
loope
cld
and
mov
xchg
jmp
cs
les
aam
sahf
sub
mov
out
es
cld
das
mov
mov
in
sbb
sbb
scas
lcall
jecxz
rclb
aas
lods
and
mov
dec
xchg
mov
cmpsl
mov
mov
mov
jle
lea
out
mov
pop
cmpsl
lret
mov
lds
and
loop
arpl
popa
xor
das
in
add
mov
fidivs
icebp
fidivrs
mov
and
cs
adc
hlt
or
mov
aad
dec
fcoml
or
push
in
js
mov
or
fwait
xchg
inc
outsl
push
xchg
push
sbb
jecxz
je
fucomp
xchg
jl
adc
xor
sub
mov
lret
daa
inc
push
movsb
idivl
sbb
iret
dec
push
cltd
ret
test
out
or
out
cmp
sub
cmp
mov
fstpt
mov
hlt
cli
arpl
clc
sbb
sub
icebp
pop
mov
lods
sub
xor
scas
iret
leave
filds
fnstsw
push
popa
in
jp
gs
cwtl
sti
outsl
cmc
icebp
aaa
jnp
sbb
das
or
cmp
cmp
xchg
imul
pop
icebp
jg
jmp
stos
in
mov
pusha
mov
sbb
pop
aas
mov
jns
add
imul
in
test
loope
push
pop
push
push
jle
imul
mov
dec
rcll
pop
or
push
mov
out
xchg
cmp
xchg
or
sbb
sub
mov
and
repnz
push
add
cld
and
or
push
adc
cmp
pop
loopne
push
fldl
aad
lcall
inc
icebp
inc
jp
pop
inc
lea
insl
imul
outsb
or
mov
sub
push
sbb
loope
call
shll
sarl
cwtl
xor
fbstp
loope
aad
in
aas
lds
xor
movsl
lret
push
mov
out
mov
push
lods
fldcw
adc
push
jmp
dec
mov
je
push
fmul
ss
movlhps
nop
xchg
push
loope
fnstsw
push
push
mov
xor
movsb
nop
push
clc
lods
les
mov
aad
sbbl
outsb
push
cmp
mov
inc
insl
jno
int3
xchg
pop
test
xchg
out
xchg
cmpsl
ficoms
mov
cmp
ja
mov
decl
das
mov
sub
or
lret
ja
pop
sbb
or
jge
fdiv
dec
stos
fcoml
pop
jo
std
rolb
into
shrb
cmp
insb
arpl
dec
addb
fwait
and
jne
pop
nop
push
loope
jle
push
jne
add
pop
cld
les
push
pop
inc
adc
sbb
mov
jo
pop
out
xchg
xor
sbb
mov
lret
mov
jnp
inc
inc
test
jg
add
or
jp
mov
pop
xchg
xchg
das
inc
mov
jae
dec
cwtl
nop
es
mov
mov
lds
js
or
xchg
and
fnstenv
mov
es
mov
ljmp
lahf
cld
nop
jo
movsb
add
ret
xchg
dec
pop
cmp
jb
pop
les
pop
shrl
repnz
ret
cmp
xchg
sbb
inc
mov
mov
xchg
push
dec
dec
xchg
dec
call
daa
inc
push
cmp
push
repz
sub
or
jnp
sub
imul
jmp
push
fwait
loop
inc
fidivrl
fistpl
out
xchg
adc
jl
adc
push
mov
fldcw
sbb
dec
mov
mov
test
mov
adc
add
mov
pop
add
mov
xchg
test
pushf
lcall
addl
mov
fisubrs
fstps
or
and
dec
pop
out
hlt
test
pop
popw
cld
xchg
mov
test
loope
insl
js
mov
push
push
mov
in
loopne
pop
xor
nop
lods
insb
cmpb
dec
mov
xlat
mov
xchg
mov
sahf
sbb
setb
mov
mov
cltd
cs
adc
jno
notl
mov
lea
adcb
and
dec
jge
in
fistl
sub
mov
sub
mov
roll
incb
stos
and
loop
je
cmpsb
insb
push
repnz
int
adc
mov
fnstenv
add
push
mov
outsl
pop
into
inc
fstps
es
jle
lods
call
sahf
mov
inc
jno
loope
iret
mov
clts
and
cwtl
pmaxub
sbb
mov
bound
fwait
sub
shrl
adc
sbb
mov
lea
js
test
int3
mov
pop
divb
ja
xor
xchg
jne
aam
jne
inc
scas
xorb
loop
std
cli
enter
xor
xchg
fnsave
add
mov
dec
rdtsc
fs
aaa
into
jmp
dec
sub
aad
mov
subl
repz
jb
loop
jecxz
pusha
pop
std
jne
fisttps
add
aas
aaa
sub
push
mov
pop
movsb
mov
rcrb
ds
in
jnp
sarb
sbb
fisubrl
adc
jo
mov
lahf
adc
inc
fcomps
outsl
inc
push
lcall
jb
and
xor
mov
loop
sbb
test
arpl
add
lea
inc
loop
addl
dec
push
cmp
iret
adc
mov
push
and
mov
dec
lods
pop
stos
add
push
mov
or
fmull
adc
lods
scas
sbb
jecxz
xchg
outsb
shrl
adc
inc
cmp
cmc
xchg
push
shll
pop
iret
xor
in
andb
dec
sbb
or
stos
cmp
dec
cmp
scas
iret
or
xchg
mov
je
sub
jp
pop
jae
mov
mov
xor
inc
adc
inc
mov
out
subb
es
cmp
mov
pusha
mov
mov
mov
cmp
gs
add
jl
xchg
mov
out
and
push
push
mov
mov
inc
std
jl
shll
loope
in
lahf
mov
jae
out
fwait
xchg
popf
adcl
adc
push
jle
aas
cmpsl
mov
pop
pusha
mov
or
dec
arpl
adc
enter
cmp
and
or
clc
xor
dec
sub
aad
test
inc
mov
dec
cmp
cmp
xchg
add
or
xor
pop
icebp
pusha
xor
mov
jo
xchg
xlat
divl
jg
xchg
sbb
adc
aaa
add
lds
push
push
cmp
pop
lods
xor
pop
int3
adc
insl
xchg
or
mov
cmp
mov
pop
cwtl
sbb
sarb
shrl
mov
xchg
aas
jb
call
mov
inc
testl
dec
jle
dec
mov
faddp
xor
inc
cmpsl
mov
movsb
xor
adc
and
xchg
cmp
add
and
jg
aaa
lret
mov
cmp
mov
clc
out
loop
sub
dec
pop
in
mov
adc
push
dec
sbb
dec
mov
mov
insl
mov
add
cld
sbb
jle
and
push
flds
stos
arpl
std
mov
loope
mov
aad
scas
mov
xchg
jp
xchg
pop
jne
cmp
push
add
les
push
inc
pop
jnp
lods
cmc
dec
out
mov
outsb
and
adc
shl
movb
xlat
jecxz
jo
push
subl
jmp
or
inc
and
lret
or
leave
and
in
and
lock
jp
cmp
pop
data16
aas
xchg
data16
sub
xor
out
call
jnp
pop
cmpsb
inc
inc
mov
call
push
push
ljmp
push
sbb
cmp
jg
aaa
filds
pop
dec
cmp
jmp
fwait
cmp
dec
push
lea
pushf
mov
xor
pop
ja
imul
push
add
sub
sbb
icebp
push
stc
sbb
aam
push
sbb
fwait
adc
xchg
and
pop
popf
jmp
sbb
loop
xchg
iret
arpl
lret
mov
shrl
out
lret
sbbb
unpcklps
outsl
xchg
mov
add
pop
jbe
or
ljmp
push
fimull
jecxz
pusha
aas
dec
sbbb
ds
xchg
push
hlt
xchg
scas
sbb
jp
arpl
cmpsl
jns
insl
repnz
or
push
in
mov
or
adc
sbb
lret
lods
imul
in
ja
repz
or
sbb
push
or
mov
inc
out
sbb
out
lea
stc
lock
mov
enter
sub
movsl
push
sub
loopne
or
cmp
push
leave
xor
jne
loope
arpl
faddl
xchg
jg
jnp
imul
dec
adc
xor
xor
icebp
inc
sbb
xchg
xchg
lea
scas
test
std
dec
rolb
pop
imul
sub
xchg
outsb
ss
and
xchg
cmp
adc
out
xor
cmpsl
xchg
mov
xor
in
xor
pop
adc
insb
scas
repz
push
fidivrl
and
int3
in
fsubs
mov
push
sbb
mov
out
lock
std
popa
fldcw
scas
outsb
jns
outsb
pop
stos
insb
shll
int3
dec
jp
insb
add
insb
inc
imul
mov
outsb
fwait
add
loope
out
aad
aaa
rolb
pop
fisttpll
sarb
cmp
jp
and
mov
xchg
addr16
cmpsl
fists
and
add
jo
imul
les
test
nop
pcmpeqw
push
icebp
sbb
lret
shrl
cli
pushf
cld
inc
push
sbb
rol
stc
fmulp
int
in
xchg
jo
rcrb
js
fisubl
or
aas
mov
push
into
jmp
sub
push
iret
insb
stos
test
imul
dec
out
and
sahf
imul
jmp
inc
std
lcall
cmp
idivb
adc
inc
mov
xor
and
dec
pusha
std
fcompl
popf
pop
sub
push
int
gs
outsl
es
pop
std
bound
js
push
mov
xchg
fcoms
push
inc
push
rcrb
enter
and
pop
lea
jo
rclb
fsubp
call
fidivs
mov
roll
sbb
fidivs
test
je
fists
mov
push
fwait
ja
repnz
or
adc
mov
sahf
lcall
sbb
ficoms
push
test
jg
mov
jnp
rcr
mov
pop
inc
or
cmp
movsl
sbb
mul
test
aaa
shlb
pop
incb
clc
xorl
ds
jne
pop
lea
or
aam
data16
sbb
aaa
pop
cmp
rcll
iret
mov
jmp
sbb
sub
or
inc
lods
jns
fsubl
jmp
add
push
push
roll
mov
push
xchg
pop
data16
fnstenv
jae
sahf
add
pop
call
jno
mov
imul
sarl
xchg
nop
mov
mov
sub
int3
fcomi
cmc
idiv
sbb
mov
scas
add
mov
pop
je
arpl
sub
pop
fidivrs
test
add
test
sbb
pop
pop
imul
push
ret
mov
pusha
and
lahf
or
xor
sbb
sub
jle
cmp
sbb
add
push
mov
das
mov
cli
data16
out
xor
leave
in
jp
loopne
mov
mov
mov
xchg
cmovnp
repz
cltd
cmp
mov
add
cmp
bound
xchg
cmc
jl
aaa
icebp
xchg
mov
push
repnz
xchg
xor
or
loop
mov
ja
test
dec
mov
xchg
fisttpll
das
or
mov
rcll
dec
jl
sub
jl
sbb
xor
sub
add
xor
mov
jbe
into
xchg
pop
div
cwtl
negb
pop
cmc
pop
xchg
fstl
mov
xchg
insb
jecxz
sub
xchg
stos
bnd
add
push
cld
mov
in
std
and
fwait
sbb
xchg
inc
div
nop
mov
lods
push
in
xlat
mov
pop
fndisi(8087
aas
rcrl
test
pop
sub
outsb
pop
xor
scas
adc
ja
leave
cltd
push
adc
lock
gs
fisttps
pop
add
jbe
add
and
add
push
mov
xor
rcrb
clc
add
mov
push
xchg
data16
jbe
vmwrite
lods
jns
jae
out
inc
hlt
mov
dec
jecxz
mov
pop
xchg
movswl
mov
and
mov
jmp
push
test
mov
or
pop
pop
adc
mov
int
pop
xchg
sbb
push
add
and
subl
lds
in
lea
dec
movsb
jno
or
xor
leave
cmpsb
mov
mov
cwtl
mov
add
pop
pop
mov
adc
push
scas
xchg
lret
push
mov
xchg
xchg
loop
add
rcrb
mov
sbb
pushf
loopne
xor
sub
push
daa
xorb
dec
mov
add
add
dec
mov
dec
cmp
mov
dec
gs
inc
aam
dec
mov
fcoms
mov
sub
push
inc
push
push
loope
sahf
pop
xchg
xor
in
mov
push
jle
ja
incb
out
push
jns
gs
hlt
insb
xchg
ja
mov
jns
xor
pop
out
popa
jle
jge
cmp
mov
inc
incb
and
pop
out
cld
mov
test
xor
adc
jo
mov
jle
ss
inc
inc
dec
dec
adc
pushf
pop
jae
fidivs
popf
cmp
stos
inc
mov
icebp
jb
test
ss
push
jnp
decl
mul
popl
dec
jno
mov
bound
sub
hlt
jle
pop
add
sbb
outsl
mov
ret
jmp
mov
push
arpl
mov
into
sbb
xchg
imulb
sbb
das
js
jle
cs
aas
add
sti
ds
bound
repz
dec
cmc
and
mov
js
cmp
jne
test
call
aam
ss
movsl
loop
aad
pop
xchg
cmp
mov
mov
in
cli
movsl
insl
mov
ret
test
push
clc
out
scas
mov
jne
enter
cs
movsl
dec
aad
mov
incl
sub
cwtl
jl
pushf
mov
aam
lea
lret
loop
hlt
mov
vpsubw
imul
pop
stc
subb
rclb
insb
or
mov
clc
or
stos
push
add
xor
or
pushf
faddl
jmp
inc
or
dec
sub
out
push
adc
xor
mov
loop
jne
dec
mov
and
sub
cmc
cmc
bound
cmpsb
push
jne
and
addr16
jecxz
cmp
test
sahf
mov
sub
mov
ja
mov
cltd
adc
and
out
in
cld
ficoms
pop
push
pop
sbb
shll
std
xor
cltd
int3
fisttps
inc
sub
repnz
push
cmp
aas
ljmp
jg
adc
ljmp
mov
mov
dec
addr16
xchg
sub
pop
mov
cmpb
nop
and
mov
insb
xor
out
push
stos
or
jmp
test
popf
rorl
ljmp
movb
ljmp
scas
in
call
xor
fists
icebp
shrl
lahf
test
sub
mov
sbb
mov
jbe
xchg
and
inc
andl
mov
or
jl
loopne
xor
mov
in
lahf
adc
mov
mov
mov
adc
dec
int3
ret
add
jns
push
mov
in
sti
les
sub
cmpsl
mov
mov
pop
hlt
lock
jmp
jae
popa
pushf
lcall
rclb
call
gs
ficompl
lret
negb
lcall
outsb
xchg
sbb
jno
adc
jl
xchg
mov
add
fmul
xor
in
mov
cmc
pop
sbb
mov
cmp
xchg
dec
xchg
add
mov
pop
and
mov
and
outsb
mov
popa
ja
dec
add
in
sbb
mov
outsb
add
pop
daa
loopne
xchg
push
int
sbb
lahf
lods
orb
outsb
jge
xchg
loope
in
fs
sbb
jbe
outsb
jns
les
push
pop
dec
lds
hlt
ficoml
mov
iret
adcl
shl
mov
lds
sub
gs
repnz
xchg
lahf
adc
xchg
inc
sub
test
rcll
aaa
sarb
movsb
sub
mov
sbb
bound
loopne
or
mov
dec
inc
mov
in
push
and
mov
cmpl
mov
daa
push
insl
pop
sub
add
push
lock
ds
xor
inc
or
jg
cmp
scas
outsb
push
push
ljmp
arpl
inc
test
lcall
push
stos
idivl
mov
leave
add
push
popf
das
out
xchg
arpl
mov
mov
push
lea
pusha
mov
repz
leave
movsb
cmp
in
sub
jecxz
fwait
adc
test
bound
jle
iret
cmp
ror
mov
stc
push
in
andb
mov
test
or
sub
inc
push
dec
dec
mov
push
leave
dec
xlat
popa
xchg
push
es
das
lods
jne
add
sbb
push
leave
push
clc
mov
xchg
iret
ss
mulb
fwait
cmp
cwtl
aad
into
pop
cmc
cmp
push
dec
mov
dec
adc
cld
cmc
mov
repz
and
arpl
aas
ret
dec
sub
xorl
xchg
and
jp
repnz
mov
add
gs
paddb
dec
sti
push
les
or
es
or
mov
or
addr16
in
fimuls
test
mov
xor
lret
mov
fists
jb
fdivr
xchg
in
nop
std
cmp
cs
mov
arpl
test
sbb
and
push
cld
push
out
xor
aaa
test
dec
jecxz
jae
orb
xchg
and
push
adc
jecxz
cmp
shrl
lret
lock
sbb
lcall
insb
sbb
sahf
sbb
add
das
pop
fdivr
call
fwait
outsl
mov
push
adc
sub
adc
lds
sti
inc
inc
or
nop
in
rorb
ret
mov
inc
jg
adc
sbb
dec
inc
xor
andb
cmp
filds
stos
dec
dec
ljmp
daa
gs
mov
leave
push
fwait
mov
add
std
mov
popl
test
lret
push
jl
lock
daa
mov
and
sub
rcll
cmp
mov
mov
jns
mov
add
mov
popa
cmp
movsb
test
push
mov
lret
push
pusha
pop
mov
mov
push
and
mov
int
dec
cmp
lods
enter
pop
inc
jae
cmp
jbe
push
cmp
xor
lea
or
in
loope
or
insl
fimull
mov
lods
int3
enter
das
loop
inc
jg
orb
mov
daa
sbb
adc
sub
inc
loope
int
orl
cmp
xchg
xchg
inc
sbb
rolb
icebp
subb
xchg
ret
daa
adc
inc
push
and
jne
mov
cmpsb
ret
imul
jmp
aad
pushf
out
push
mov
adc
cmp
inc
xor
xchg
gs
mov
cs
aas
jns
pop
in
call
pop
cmp
ja
out
pop
mov
inc
mov
daa
xor
push
jns
and
cmpsb
rol
incl
testb
jb
sbb
aaa
ljmp
ja
out
xchg
dec
popf
lea
jp
add
icebp
addr16
pop
js
lret
mov
pop
dec
xchg
sub
mov
push
inc
jle
mov
pop
dec
dec
xor
stc
ret
inc
jo
lock
or
mov
mov
push
and
int
xchg
lret
ja
clc
enter
lahf
add
xchg
sbb
fwait
xor
fmull
jecxz
fstp
ljmp
nop
lret
cmp
push
out
lahf
push
pop
rcll
cmpsl
lods
pop
xor
sub
sbb
xchg
dec
push
push
and
imul
jecxz
imul
bound
sbb
imul
sub
es
cmp
and
pop
aaa
adc
xchg
jns
adc
xor
sub
dec
cld
hlt
test
call
addb
mov
cmp
lea
mov
loopne
adc
in
fisttps
ret
add
pop
mov
outsb
or
mov
mov
cltd
add
aas
popa
repz
leave
jecxz
js
sbb
xor
movsl
pop
jmp
or
inc
adc
adc
dec
mov
cli
pushf
nop
xlat
xor
je
sbb
sbb
jmp
test
jnp
ja
imul
jmp
sbb
jmp
inc
sbb
push
inc
icebp
pop
rorb
jbe
push
dec
push
inc
ret
jbe
push
dec
cmp
dec
mov
jle
out
ss
jae
cmpsb
lret
popf
jge
cmp
and
jnp
pop
iret
mov
div
roll
push
stos
inc
add
pop
xor
cld
fildl
jmp
sub
out
and
jl
dec
bswap
add
sbb
ljmp
std
jae
jns
lea
add
mov
and
movsl
cmpsb
mov
in
lahf
jo
or
ror
pop
jns
and
inc
xor
popf
fimull
jb
mov
xor
mov
cld
inc
add
xchg
xchg
jge
and
mov
jmp
mov
fsub
int
push
call
cwtl
test
add
push
push
ret
gs
imull
xchg
gs
pushf
sahf
push
loop
pop
int
imul
cld
imul
rol
mov
dec
pushf
fldenv
dec
push
pop
stc
test
sbb
mov
xchg
xchg
popf
sarb
jae
fyl2xp1
add
aad
sub
lret
add
mov
jns
lock
lods
dec
push
mov
ret
rol
gs
and
pop
or
jns
sbb
mov
pusha
mov
add
aaa
aam
add
icebp
scas
dec
jnp
stc
mov
fstl
movl
negl
inc
imul
inc
cmc
sahf
mov
pop
dec
je
dec
pop
sub
leave
mov
in
xchg
imul
in
sti
jne
popa
adc
jno
roll
xchg
push
lea
loop
push
iret
imul
add
lret
push
lock
cmp
out
pop
or
jmp
aad
mov
xchg
incb
lods
leave
sarl
sub
out
jecxz
mov
push
jmp
pop
inc
stc
jmp
rcrl
xchg
mov
sub
mul
ss
loop
scas
mov
js
mov
fcompl
and
push
push
rcl
pop
adc
cmc
inc
mov
jmp
mov
adc
jns
outsb
movsb
div
fstpt
call
xlat
xchg
sahf
lock
notb
idivl
idivl
gs
subb
or
jno
js
push
fisubs
aam
xchg
ss
lahf
mov
lahf
les
xchg
pushf
dec
push
das
jne
push
mov
clc
push
jl
movsb
loop
cmpsl
xlat
fnsave
scas
adc
scas
or
push
data16
mov
dec
sarb
inc
pop
jnp
lods
dec
loopne
aas
test
incb
popf
push
imul
cltd
or
jnp
aaa
test
cli
dec
pushf
daa
push
adc
sub
pop
rorb
xchg
add
inc
pop
and
hlt
xor
dec
sbb
mov
add
pop
jnp
cltd
lcall
sahf
mov
lcall
jbe
aaa
bound
clc
mov
sbb
pushf
jnp
sub
pop
in
push
inc
pop
pop
mov
xchg
repnz
scas
cld
ljmp
ja
lock
and
push
sub
fiadds
pop
and
mov
lods
adc
xchg
sub
add
cmpsl
pop
aam
movsl
jae
shll
scas
dec
xor
or
movsl
push
dec
inc
mov
and
sahf
and
shr
fisttpll
fsubr
outsb
jbe
push
stos
sar
insb
fldt
test
dec
cmp
fwait
in
ror
mov
sbb
cltd
imul
arpl
pop
repnz
mov
shrl
jg
add
jbe
fadds
mov
shrb
sbb
adc
mov
cwtl
cmc
pop
iret
insl
sbb
push
jno
das
lahf
add
ret
test
jmp
int
stos
out
cmc
lods
mov
dec
stos
inc
pop
mov
scas
dec
rclb
and
dec
rolb
sbb
xor
std
ret
aas
loope
sbb
ljmp
pop
lcall
ficoms
aaa
and
icebp
cmp
push
sbb
push
mov
mov
les
sbb
pushf
sbb
test
gs
and
mov
push
je
es
jp
xchg
sbb
testl
lea
aad
out
les
mov
std
adc
sub
int3
and
inc
cli
add
dec
inc
lea
mov
xor
jno
sbb
outsb
mov
xlat
jmp
jns
scas
outsl
out
fdivrs
insb
jbe
xchg
pop
dec
call
cmpsb
sbb
mov
or
add
lock
in
test
add
mov
xchg
ret
jp
xor
lock
fildll
xor
movsl
sub
ds
cmp
in
push
jp
les
std
cmp
inc
inc
fldl
rclb
sahf
in
jne
stc
test
push
stos
sbb
sbb
mov
pop
push
inc
out
and
ret
out
hlt
jnp
mov
arpl
out
lcall
ja
packuswb
mov
loop
or
je
jle
ljmp
ret
repnz
fisttpl
dec
sbb
mov
std
push
sbb
ret
and
lret
jg
icebp
push
push
mov
test
aas
push
fmull
mov
lret
mov
clc
adc
ljmp
jl
adc
outsb
push
xor
bswap
xchg
pop
mov
add
dec
ret
inc
mov
inc
add
mov
pop
xor
add
ljmp
or
fcomps
movsl
adc
lcall
into
orb
lock
in
cmc
lock
jae
or
call
movsl
add
xchg
and
push
lret
imul
inc
ja
or
popa
and
frstor
es
arpl
jle
xchg
pop
cmp
mov
jae
imul
mov
aas
addb
dec
adc
sub
fwait
orl
addr16
bound
xlat
jmp
inc
add
inc
push
bound
fdivrs
push
sub
test
inc
call
xchg
clc
push
repnz
jg
sub
mov
fldcw
mov
in
xchg
notl
lcall
ja
mov
inc
daa
add
int
mov
shl
and
cmpsl
inc
or
scas
mov
popf
in
mov
xchg
stos
nop
loope
cmpsb
or
aas
mov
add
shll
jl
cwtl
xchg
cli
imul
rcrb
push
daa
cmpsb
pushf
dec
jl
cwtl
adc
mov
mov
mov
push
adc
fcomps
cmpb
in
fstps
fcoms
ja
jo
mov
jno
inc
xchg
mov
mov
inc
outsl
pop
fisubrl
adc
mov
cmpsl
mov
insl
inc
roll
xchg
push
test
dec
and
call
xchg
mov
loope
dec
xor
push
aad
ljmp
outsl
jns
dec
mov
add
hlt
enter
enter
mov
push
in
and
sbb
inc
push
jge
xchg
ds
decl
sub
push
call
aad
lea
out
mov
popf
fadds
ss
sahf
jg
loop
cmp
jno
cs
int3
ja
sbb
arpl
sub
jb
mov
xor
cmpl
push
inc
mov
inc
xor
or
inc
xor
xorl
jmp
xor
inc
test
mov
pusha
mov
push
dec
cmp
rcl
push
andl
popf
pop
mov
int
pop
push
repz
xchg
nop
mov
out
adc
outsl
sub
sub
imul
xchg
popa
fidivrs
fimull
push
mov
mov
cs
inc
pop
es
mov
ljmp
js
cmp
orb
inc
or
xchg
adc
in
cmp
pop
cs
stos
add
mov
fs
popf
xchg
adc
hlt
sub
mov
adc
imul
repnz
xor
or
mov
test
fidivrl
dec
jmp
mov
mov
orl
cld
das
into
inc
push
iret
mov
xchg
loope
push
mov
mov
mov
cltd
cli
push
aad
push
xchg
or
movsb
sbbb
inc
pop
sti
mov
push
dec
jno
mov
adc
je
or
mov
jmp
xchg
push
xor
jne
mov
outsl
mov
addr16
cli
lcall
mov
and
into
sub
fwait
stos
in
cmp
lods
fcomps
push
mov
stos
sahf
pop
xor
ss
jno
test
dec
or
xor
sbb
popf
jnp
jo
add
sub
cltd
xchg
lret
lds
pop
jecxz
jbe
cmp
fdiv
xor
mov
popl
adc
enter
jmp
in
dec
mov
adc
mov
lea
fdivrp
or
es
rolb
lcall
mov
std
mov
and
inc
mov
mov
adc
or
push
sub
imul
jecxz
xchg
add
cmp
jecxz
inc
mov
xor
hlt
lret
xor
sbb
aas
enter
out
ss
mov
jbe
adc
jbe
loopne
pop
push
jp
adc
jne
test
mov
or
jb
mov
adc
data16
jmp
daa
cmp
sbb
sar
xor
fs
test
adc
xor
pusha
pop
iret
stos
jl
dec
mov
in
repz
shl
mov
xchg
inc
add
cmpsb
aam
jae
sbb
pop
imul
and
cmpsl
jecxz
sti
push
ret
pop
mov
movsb
hlt
movsl
clc
imul
add
dec
pop
add
jo
out
fisttpll
popf
imul
pusha
pop
decl
nop
pop
pop
lret
roll
cmpb
mov
jle
je
jb
sub
inc
mov
gs
stc
jmp
loop
or
xor
inc
mov
fwait
nop
cs
xchg
push
test
jmp
sub
xlat
das
jno
test
stos
mov
test
inc
cltd
pop
xchg
sbb
cld
fidivrs
sbb
mov
cmpsl
pop
xor
ljmp
mov
test
popf
mov
cmp
rorl
hlt
aad
inc
inc
push
ja
mov
outsl
mov
out
invd
cld
loope
cltd
orl
rep
inc
push
xchg
inc
push
jge
xorb
jae
xor
push
push
dec
hlt
dec
dec
clc
lods
scas
or
int
xor
xchg
push
jb
and
adc
and
clc
fs
or
pop
aad
cmp
or
bt
mov
ds
add
movsl
jbe
fwait
or
inc
mov
shll
ret
add
or
xchg
popf
int
popl
psadbw
add
push
std
and
call
add
cltd
jno
jb
adc
fsts
in
inc
pop
in
cwtl
fsubl
jae
xchg
and
int3
sub
and
sbb
cmp
std
push
adc
pop
and
mov
jl
jg
dec
mov
add
sbb
or
xchg
fstp
aad
mov
xor
les
repnz
xchg
popa
mov
jnp
jno
jg
sahf
outsl
sbb
push
movsl
jge
xor
out
cld
lret
xchg
int3
in
or
jmp
fcomps
mov
sbb
ror
mov
mov
sbb
loop
movsb
jl
pop
cltd
add
adc
sbb
loopne
mov
or
scas
imul
lea
xchg
adc
mov
cmp
xchg
outsb
and
mov
sub
or
sbb
loopne
and
add
add
jl
xlat
int3
test
leave
pop
in
in
notb
xorb
adc
jle
or
inc
ret
mov
fisubl
ror
in
push
mov
fs
ljmp
pop
test
adc
psubb
xor
sbb
dec
loope
mov
enter
cmp
imul
xchg
or
pop
lret
dec
fst
sbb
and
fnstenv
mov
adc
xchg
mov
dec
jg
inc
sub
psubsb
pop
jecxz
jbe
mov
add
add
add
cmp
std
cwtl
push
pop
lods
pop
xchg
mov
test
ss
mov
cmc
int3
xchg
orb
push
push
jns
jp
jp
mov
jle
in
jge
icebp
push
in
sub
dec
add
pushf
popf
inc
sbb
and
sbb
mov
jmp
inc
pop
cmpsb
repnz
aad
lea
mov
shlb
xor
xor
outsb
rclb
and
adc
push
xchg
imul
ds
stc
std
sub
mov
sub
frstor
mov
icebp
cltd
xchg
cmp
subl
insb
enter
cli
outsl
imul
scas
mov
mov
insb
sub
pop
pop
std
jb
mov
cmc
nop
scas
mov
sbb
mov
ret
and
push
movsb
sbb
jg
inc
adc
scas
scas
or
cmp
mov
out
inc
je
dec
mov
pop
sbb
scas
stos
rolb
js
xchg
enter
shlb
xor
mov
push
pop
jns
add
xchg
inc
or
xor
xlat
inc
fisubs
xchg
mov
aad
add
cmp
adc
clc
adc
xor
mov
stos
stc
mov
fcompl
mov
imul
js
xor
adc
push
xchg
add
and
rorb
xor
ja
ja
jae
bound
rcrb
loop
jbe
ret
dec
push
jno
add
lock
insl
cli
add
ja
push
jns
lret
xor
lea
mov
adc
lds
and
ror
rol
divb
cmp
repz
int
add
pop
xchg
mov
and
pop
xchg
ss
shll
sub
add
xor
jmp
daa
imul
adcl
or
fprem
mov
jne
into
pusha
add
adc
sbb
xor
lds
jecxz
pop
and
xlat
mov
pop
pop
in
mov
scas
push
jo
ret
test
pop
repnz
insb
pop
fldenv
jae
ja
dec
orl
les
cmpsl
jae
int3
sub
mov
imul
aam
mov
mov
scas
lret
rcr
sub
xchg
cmp
cmc
ret
pop
inc
arpl
push
dec
pop
push
or
cmp
adc
sub
mov
pop
sbb
popf
fs
pop
xor
dec
add
leave
add
cli
xor
iret
inc
cmp
lods
xchg
std
dec
repnz
nop
loope
es
jl
sahf
sahf
inc
xchg
loop
aad
sub
fsts
imull
push
or
pop
mov
xor
mov
pop
push
cmpsl
or
dec
lret
loopne
lcall
subl
fs
push
push
cli
popf
xchg
addb
mov
adc
and
dec
lds
iret
nop
pop
adc
push
xchg
std
enter
or
in
push
lea
sti
scas
jl
push
adc
stc
aad
and
xchg
out
xor
mov
inc
bound
shll
loop
test
ja
jo
fnstcw
or
mov
pop
sbb
rcrl
or
arpl
mov
data16
int
inc
pop
xor
push
scas
sub
enter
or
cmp
adc
lea
inc
lahf
or
add
mov
mov
test
and
xchg
andl
jae
ljmp
in
adc
push
mov
add
fcmovnu
cmpsl
pop
jmp
xor
sbb
mov
sub
adc
mov
xor
fwait
js
fisubl
iret
adc
addr16
jb
call
push
jmp
repnz
or
cmp
sbb
cltd
jae
adc
cmp
and
and
jno
add
jb
in
or
cli
cmp
adc
insl
rcrb
jae
adcb
stos
fsubrp
cmpsb
out
and
fcoml
sti
push
cmp
loopne
lret
mov
push
xchg
push
sbb
push
inc
clc
inc
stos
popf
add
fs
roll
insb
ficomps
mov
dec
arpl
scas
cmc
cld
inc
sbb
and
pop
inc
mov
ret
mov
jge
in
push
aam
and
mov
sub
sbb
xchg
adc
push
ljmp
ret
or
sbb
sbb
lds
mov
pop
or
test
leave
cmp
push
and
sbb
decl
mov
incb
ds
mov
push
pop
cld
jns
fcompl
icebp
repnz
mov
fdivrl
lea
jb
pop
sbb
addr16
aaa
gs
aam
and
jle
scas
ljmp
mov
jnp
pop
pop
mov
insb
ret
flds
shl
pop
test
outsb
or
rcrb
pop
cmc
lea
xor
ljmp
inc
mov
fisubl
mov
xchg
jb
dec
icebp
mov
or
mov
arpl
cmp
in
cs
or
jp
pushf
xchg
loopne
aaa
inc
mov
les
sub
data16
cmpsl
pop
in
ret
xor
stos
fsubl
jb
xor
pop
int
dec
pop
inc
icebp
fdivrp
inc
dec
stos
call
fisubs
xchg
dec
out
mov
mov
add
outsl
cli
dec
fists
sbb
test
out
pop
add
call
push
add
and
js
jp
mov
fidivrs
mov
scas
sub
loopne
cli
je
jle
sub
pushf
cld
pop
sbb
xchg
leave
gs
push
in
stc
or
sub
xor
xor
inc
jp
mov
inc
add
mov
es
ds
sub
push
push
movsb
xor
das
push
pop
js
pop
xchg
outsl
pop
lea
mov
mov
xor
das
add
jmp
mov
mov
fmuls
jno
into
mov
in
sub
fcmove
xchg
daa
adc
in
jmp
lahf
scas
adc
pusha
pop
push
xchg
js
xorl
sub
lds
add
pop
push
lods
sub
out
push
aad
mov
lock
scas
outsb
push
mov
add
icebp
mov
fsubp
add
xor
sub
pop
out
or
sbb
push
bound
mov
aaa
cltd
jmp
mov
xchg
dec
xchg
out
aaa
mov
jb
shrl
outsl
add
pop
fldenv
cmp
mov
sub
fcoms
fxch
mov
and
jg
scas
xor
or
jo
cmpsl
gs
mov
iret
cltd
mov
mov
loope
ret
mov
mov
mov
adc
mov
push
incb
jae
lret
push
and
jbe
jns
inc
std
js
negb
or
jo
cwtl
mov
aam
adc
repz
aaa
test
ret
adc
orb
pop
ret
ds
sbb
cld
ret
fs
popa
imul
jae
xor
jle
adc
test
mov
testb
pop
pop
in
mov
je
or
addb
push
xchg
dec
scas
and
sbb
add
dec
cmp
daa
cli
aas
pusha
das
pop
xchg
cmp
jg
mov
push
sahf
mov
mov
rorl
mov
pop
mov
mov
cmpsl
jns
inc
outsl
inc
mov
pushf
aad
xor
std
jmp
xor
stc
inc
push
jl
jno
aam
push
pop
out
neg
and
movsb
inc
stc
nop
cmc
fwait
sar
xchg
lods
jne
mov
cli
ss
mov
dec
add
in
sti
inc
das
outsl
fldt
sbb
push
sti
xor
mov
aad
sub
das
push
mov
aad
dec
js
jo
adc
ficoml
popf
orl
adcl
ja
idivb
xchg
test
mov
insb
enter
inc
in
push
movsb
xchg
stc
test
and
add
lar
cmp
jg
add
sti
je
lds
movsb
jp
pop
rclb
stc
cmpsb
out
add
pop
pop
jnp
jns
insb
hlt
repz
push
xchg
mov
jecxz
mov
repz
andb
mov
mov
cmp
mov
inc
mov
push
bound
or
xchg
arpl
lret
in
adc
pop
sub
rcll
out
subb
adc
fcomp
pop
addr16
mov
fnstenv
and
add
lods
push
out
fdivrl
jmp
mov
paddsw
mov
mov
lock
pop
ljmp
insl
pop
cmp
jbe
cltd
jl
xor
sub
xchg
sahf
je
push
ret
push
fistl
xchg
mov
push
pop
mov
lcall
adc
popa
icebp
adc
jge
inc
push
jmp
test
in
cmp
leave
lds
ljmp
mov
jb
dec
cmpsb
pop
mov
pop
cmpsl
rorl
xor
sbb
pop
movsb
lahf
mov
xchg
inc
outsb
dec
addr16
push
jae
mov
outsb
mov
sahf
sbb
push
pop
flds
cmp
cmp
push
push
lea
inc
push
or
sti
mov
ficomps
mov
inc
mov
call
fiadds
pop
into
or
sbb
cmp
jae
mov
int3
and
mov
fildll
jnp
add
mov
mov
pop
lret
xor
mov
xchg
loopne
jle
inc
out
xchg
mov
mov
cld
cmc
sti
gs
les
fisttps
mull
jmp
xchg
cltd
mov
pop
in
inc
xlat
mov
inc
fidivl
jmp
out
test
push
ss
popa
cmp
das
loope
aad
adcl
enter
fisttpl
jle
cmpsb
pop
scas
mov
fstpt
bound
inc
dec
sbb
jno
mov
xchg
mov
lahf
dec
aad
into
pop
ret
adc
bound
mov
pop
lds
ss
clc
push
lahf
xchg
cli
add
out
mov
or
and
sti
xor
int3
or
arpl
jge
loop
pop
in
or
or
mov
push
sbb
arpl
call
flds
pop
sbb
jle
and
pop
fildl
in
push
jno
push
ret
adc
cmc
dec
in
fdivs
mov
loopne
cld
push
mov
cmp
fidivrs
icebp
pop
inc
xchg
sub
sub
in
roll
push
adcl
enter
pop
and
rolb
xor
ljmp
xor
adc
inc
loopne
iret
cmpsl
out
push
adc
xor
mov
jae
sbb
mov
and
test
movsl
int3
aaa
daa
jne
scas
sub
rclb
clc
and
into
cld
iret
iret
subl
add
adc
mov
icebp
pop
pop
out
push
lret
jae
sti
imul
int
xchg
iret
fidivrl
ret
out
stos
cmp
xor
pop
xor
sub
cmp
inc
les
pop
xchg
and
push
and
sbb
mov
dec
orl
mov
test
dec
sub
rcrb
das
rcrl
lods
pop
jge
dec
xchg
xchg
shrb
rolb
lea
es
cmp
imull
imul
out
in
ja
inc
mov
fwait
popa
cld
test
shll
data16
and
lahf
pop
arpl
stos
xlat
xorl
sub
inc
sub
ljmp
mov
cmp
dec
roll
mov
mov
imul
push
cltd
dec
sahf
ror
imul
scas
fdivrs
insb
cmpb
popa
in
cmp
out
mov
les
add
inc
ds
fdivrs
movsb
and
insb
pop
adc
lds
shrl
das
xor
push
dec
push
ret
pushl
mov
adc
or
push
push
fisubl
mov
nop
into
dec
movsb
xor
imul
lahf
or
fcomps
adc
mov
sti
inc
and
ja
adc
es
jno
je
fidivrs
adc
loopne
cmp
mov
addr16
pushf
or
imul
cmc
lods
mov
xor
inc
pop
push
rcll
clc
mov
lret
pop
fisttpl
sbb
fiaddl
in
and
out
xchg
jo
insl
sbbb
mov
push
mov
fimuls
add
dec
rcr
jmp
in
push
pop
aad
inc
xchg
xchg
adc
xchg
jge
sbb
sbb
jg
push
mov
push
popf
xor
rcll
stos
mov
pop
gs
mov
inc
pop
pop
in
icebp
bound
fs
sbbb
call
pop
mov
mov
add
test
push
dec
pop
lahf
adc
push
mov
test
push
stos
test
dec
inc
out
dec
jle
icebp
shll
pop
lds
fwait
int3
pop
repnz
data16
mov
fidivrs
mov
imul
out
or
test
pop
je,pt
cmp
aaa
cmpsb
ficoms
mov
cmp
jnp
outsl
sub
jb
xchg
mov
sub
pop
cmpsl
fidivrs
adc
scas
push
inc
or
inc
mov
adc
fidivl
test
or
pop
out
cmp
adc
and
push
in
inc
or
push
rolb
jmp
lods
je
dec
jp
cld
loope
aaa
repnz
sub
outsb
jno
mov
cmp
xchg
repnz
jg
insb
es
dec
fnsave
insl
fsubrs
pop
ret
pop
sbb
or
dec
ljmp
in
arpl
mov
mov
adcb
hlt
gs
dec
mov
xchg
jae
loop
pop
and
mov
and
js
popa
sbb
or
fmulp
jge
jmp
fisubs
das
inc
mov
adc
mov
fldenv
mov
popa
mov
adc
dec
in
pop
addr16
leave
shl
cltd
ds
fdivrl
push
and
stos
ret
xchg
xchg
push
pop
add
mov
and
lods
or
jecxz
lcall
call
pop
insb
aas
jge
aad
or
rolb
imul
mov
mov
adc
sbb
data16
ss
add
mov
adc
and
insl
mov
sti
in
push
add
mov
sbb
mov
add
xor
xchg
add
les
sub
mov
aas
ljmp
clc
divb
pushf
icebp
xor
lcall
clc
dec
call
mov
push
fwait
cmp
dec
stos
into
mul
add
sbb
xchg
andb
es
dec
lea
jecxz
dec
jae
inc
sbb
mov
scas
jb
fcmovnu
or
test
aaa
adcl
lahf
xor
add
std
shll
pushf
adc
pop
jno
add
xlat
out
mov
pop
jo
sbbl
ret
sbb
inc
in
nop
pop
nop
cmp
lea
cmc
je
fmull
xchg
ljmp
sti
push
ljmp
mov
fs
arpl
and
test
fwait
push
fidivs
pop
xor
sbb
push
sbb
jno
in
or
xor
out
sub
pop
cli
push
cmp
push
dec
jmp
dec
mov
mov
negl
add
fldenv
arpl
xor
stos
mov
add
call
and
cmc
and
cmp
lret
mov
pop
lcall
or
pop
xor
mov
dec
sub
push
pop
popa
xchg
rcrb
or
aad
dec
rcll
fdivrs
les
popa
mov
dec
push
mov
push
pop
xchg
adcl
jno
insb
roll
mov
mov
sub
scas
call
xlat
test
pushf
mov
lret
xor
mov
cltd
rcrl
call
insb
pavgw
leave
push
arpl
add
out
in
and
mov
lret
fs
add
mov
cmpsl
ret
adc
out
mov
inc
sub
out
add
cmp
mov
imul
sbbb
movsw
add
and
pushf
mov
xchg
mov
push
and
jecxz
cmpsl
pop
mov
popf
dec
mov
sbb
andb
adc
jns
test
hlt
jnp
cli
std
int3
push
adc
or
call
sbb
sbb
mov
push
fcompl
jle
mov
rcrl
mov
jbe
scas
mov
pop
nop
stos
adc
movlhps
js
int
add
shll
jl
mov
or
dec
adc
dec
jb
cmp
outsb
mov
jbe
es
jecxz
cmp
popf
popa
lods
shrb
cmp
pop
xchg
loop
cmp
or
pop
scas
mov
xor
inc
lcall
inc
gs
popa
add
mov
fs
dec
imul
mov
push
andb
jne
sbb
jno
cmpsl
xchg
sbb
xchg
mov
add
mov
mov
mov
mov
mov
xchg
pop
in
stc
cld
or
lea
xchg
stc
lods
inc
jmp
mov
or
cmp
arpl
sbb
subb
popf
fdiv
pushf
jp
add
addl
fdivrl
or
xchg
fcompl
je
sbb
fimull
test
and
inc
cmpsl
daa
push
lods
pop
adc
ret
rol
xor
in
test
sub
mov
mov
xchg
dec
out
mov
jge
fdivrs
mov
and
xor
and
xor
mov
imul
scas
or
je
adc
inc
or
mov
aas
lock
jne
mov
inc
pusha
repnz
xchg
pusha
mov
jns
pop
mov
xchg
cmp
aam
push
pusha
test
or
pop
cmp
ds
adc
xchg
adc
or
sbb
aas
fcoml
pop
sub
adc
fsubr
gs
daa
adc
cmp
pusha
and
popf
push
cmpsl
aad
cmc
pop
out
push
fwait
push
jo
xor
sub
ja
or
pushf
loopne
loop
mov
adc
xor
jo
jb
mov
mov
push
and
das
rolb
xchg
lods
arpl
in
sub
inc
mov
mov
mov
loope
ljmp
mov
test
cmp
sub
test
sub
ljmp
sti
in
dec
xchg
mov
adc
xchg
int3
add
xor
mov
jmp
add
xchg
mov
dec
shlb
out
sub
nop
sbb
xor
imul
jecxz
cltd
in
mov
mov
test
incb
dec
add
jbe
es
fwait
mov
add
cwtl
add
lret
hlt
push
bound
push
dec
cmp
cltd
push
shlb
int3
sbb
mov
pop
es
xor
mov
icebp
mov
arpl
out
mov
rcl
sbbb
push
scas
inc
add
call
adc
add
dec
pop
mov
ss
sub
lret
sbb
mov
or
insb
repnz
lret
and
and
nop
int3
test
mov
jb
pop
hlt
jns
xor
jnp
lea
push
imul
mov
adcl
xchg
nop
clc
cmp
mov
adc
ficomps
ljmp
nop
in
cmpsb
add
push
call
or
adc
cli
repnz
sti
loope
dec
push
pop
mov
cmpsb
and
mov
lds
or
inc
cmc
or
xlat
mov
jecxz
adc
and
stos
out
in
ljmp
fs
mov
clc
repz
pop
out
dec
inc
jg
pop
fildl
mov
add
sbb
mov
jl
pop
xor
jo
mov
dec
shr
push
add
cmpsl
fsubr
mov
sub
in
aas
into
push
inc
jb
mov
fsub
push
inc
mov
loop
push
jecxz
es
lock
sbb
insb
sti
adc
sbb
jbe
jae
daa
add
inc
sbb
into
clc
jb
fmuls
idivb
ja
cmpsl
popf
push
lret
jno
inc
jp
xchg
pop
adc
mov
imul
mov
lods
pop
cmpsl
out
test
es
ljmp
cmp
xlat
fs
or
jb
cltd
outsb
and
pop
test
pop
fwait
lret
xor
mov
pop
push
lock
adc
shlb
js
ss
xchg
push
mov
sti
pusha
test
xchg
sub
push
popa
js
scas
inc
orl
stos
mov
aad
ljmp
mov
or
dec
pop
lret
jbe
sub
dec
jb
and
into
rclb
insl
into
frstor
imul
outsl
push
ret
incb
sbb
fdivl
les
pop
lret
hlt
pop
pop
leave
mov
xor
ficomps
mov
add
push
movsl
out
inc
insb
test
mov
pusha
pushf
out
ja
mov
add
jns
dec
ret
js
dec
dec
xchg
outsl
nop
add
ss
xor
lds
fwait
mov
and
mov
addl
fcmovnu
push
aas
cltd
mov
es
test
pop
test
fs
fstl
in
ror
data16
cmpb
push
adc
sbb
mov
mov
andb
mov
hlt
mov
dec
add
aas
out
push
cmp
notl
and
mov
out
imul
lret
push
sbb
ja
cwtl
outsb
mov
sub
jmp
leave
jl
xchg
xlat
repnz
jb
pop
aam
jne
dec
pop
sub
jmp
cli
in
xchg
sub
cmpsl
sti
shrb
sub
xor
mov
xchg
adc
lcall
lret
inc
movsb
push
test
repz
or
push
adc
leave
mov
xchg
aam
jecxz
adc
sub
mov
frstor
jns
inc
cwtl
das
sbb
sub
cmp
repnz
int
lods
mov
mov
xchg
dec
mov
mov
lds
repz
scas
jo
and
lahf
ret
aad
loop
paddsb
cmp
mov
sbb
and
popa
test
popf
jg
pop
mov
in
andl
jmp
mov
arpl
jo
int
push
and
mov
cmpsl
gs
mov
pop
cli
inc
addb
mov
fcomp
mov
mov
and
loop
clc
test
jnp
int3
xchg
test
loopne
mov
cmp
fsubs
sub
jmp
and
stos
pop
ljmp
or
insb
adc
andb
fsubs
and
dec
imul
xchg
xchg
mov
fnstsw
cli
in
xchg
scas
lods
ds
pop
adc
lea
pusha
jb
bound
outsl
jae
mov
pop
jns
lock
mov
cmp
inc
pop
repz
xchg
xchg
jb
mov
fdivl
add
les
insb
lcall
outsb
mov
and
in
mov
ja
or
inc
decb
push
xchg
inc
xlat
call
mov
mov
pop
cmp
inc
aaa
insb
and
sbb
dec
xor
dec
mov
outsb
cmp
sbb
cld
addb
inc
into
push
push
xchg
ss
or
ds
mov
mov
push
sub
ss
mov
mov
dec
cmpsl
or
insl
inc
xchg
mulb
sbb
fwait
sbb
push
sub
out
jl
dec
jo
imul
lea
pop
mull
rcrb
inc
add
add
inc
lea
loopne
imul
rol
mov
ljmp
and
push
mov
mov
push
fistps
hlt
dec
push
mov
dec
enter
adc
mov
jnp
mov
cmpb
data16
or
daa
dec
ret
mov
add
ljmp
nop
stos
adc
pop
pop
sbb
sbb
mov
sub
jo
sub
fnstcw
fcompl
repz
cmp
jnp
adc
ret
and
mov
inc
testl
cltd
pop
cmp
dec
push
push
ror
les
insl
sbb
clc
stc
add
int
mov
jp
int3
repnz
pop
adc
mov
mov
mov
sarb
jo
or
xchg
mov
push
dec
inc
ljmp
ljmp
hlt
imul
push
cmp
sti
out
jp
and
cmp
ret
mov
mov
scas
fdivrs
pop
mov
orl
daa
pop
mov
and
xchg
dec
or
and
shlb
jl
cs
mov
pop
loop
sarl
pop
dec
js
sbb
mov
cmpsl
dec
jle
add
insb
mov
sub
cmp
adc
mov
adc
addr16
push
push
jmp
xchg
sub
jbe
pop
sti
sbb
aaa
daa
push
ret
xchg
inc
lcall
fcompl
mov
and
les
pop
std
aam
pushf
mov
enter
lret
sub
and
or
sub
fcomp
outsb
lods
icebp
fisttpl
cltd
mov
lcall
xchg
ljmp
jbe
cltd
pop
sub
rcrl
or
jl
nop
mov
dec
mov
popa
in
push
outsb
and
push
xchg
test
jae
push
add
sti
fistpll
cli
aam
ss
ss
sub
aaa
shrl
les
loope
add
rep
jmp
cmpl
or
cld
push
testl
push
mov
xor
ds
push
dec
dec
jnp
push
jg
xor
into
lea
gs
stc
jb
enter
mov
scas
into
icebp
jnp
lret
mov
aam
lcall
lret
and
xchg
xlat
xchg
mov
push
aas
bound
fcmove
dec
bound
and
pusha
jno
push
dec
aam
int3
std
scas
inc
shr
sub
cld
imul
rcr
jl
scas
popa
repz
push
xchg
sub
dec
inc
imul
lds
out
mov
xchg
subb
popf
imull
call
xorb
and
sbb
cwtl
outsl
cmp
imul
stos
lea
cmp
fisubl
mov
push
in
subl
xor
arpl
arpl
xchg
inc
adc
scas
jb
dec
rcl
jns
ret
xchg
push
jge
mov
mov
out
mov
add
jne
mov
and
xchg
jmp
popf
or
or
pop
dec
dec
push
std
mov
mov
adc
cmp
pop
neg
xchg
pop
sub
jle
mov
lds
mov
push
jecxz
loopne
test
dec
fistpl
pop
shlb
xlat
dec
mov
mov
lcall
or
movsl
outsb
pop
fiaddl
test
add
push
sbb
andl
fisubl
dec
jmp
and
adc
and
add
scas
mov
daa
hlt
out
xor
movsl
jns
jne
into
or
jbe
testl
sbb
pop
pop
add
xchg
test
or
insl
std
push
mov
imul
in
repnz
leave
aam
mov
dec
pushf
repz
or
pop
fld1
sbb
xchg
fsubrp
fsts
jo
in
pop
xchg
mov
js
orl
or
adc
cmp
add
cs
mov
test
xor
sub
push
cmp
lock
es
iret
cli
jns
into
inc
popf
mov
imul
arpl
push
outsl
das
sbb
adc
sahf
pusha
cld
or
jno
out
xchg
je
mov
imul
xor
and
dec
sub
xlat
leave
leave
cmp
call
lea
mov
dec
mov
ljmp
xorb
push
add
roll
shrl
dec
les
xor
push
jno
cmp
insb
sbb
sbb
clc
lods
lds
mov
inc
out
push
cmp
pop
movb
ret
cmp
sahf
xchg
std
les
mov
call
jb
sbb
xchg
clc
push
adc
flds
or
pop
sbb
xchg
loopne
xor
jecxz
outsb
ja
mov
aaa
jl
add
mov
adc
and
es
adc
jb
mov
pop
fcomi
xor
aaa
mov
cmp
insl
mov
cltd
push
pusha
pop
aad
cmp
xor
pop
in
repnz
lock
fst
cmpsb
push
aam
test
lock
mov
jno
lea
add
out
inc
or
pop
sub
ja
out
stos
jg
sti
adcl
xchg
or
inc
sub
lret
xchg
cmp
hlt
fstpl
mov
push
imul
mov
arpl
dec
mov
mov
repnz
in
ljmp
jmp
test
ja
cmp
or
loope
jecxz
lahf
dec
xchg
pop
jno
mov
pop
mov
pop
ret
imul
push
inc
scas
xchg
dec
push
xor
push
pop
lds
sbb
xchg
fwait
movsb
cmp
out
pop
jnp
mov
pop
daa
push
adc
movsb
pop
int
or
inc
sahf
xor
sbb
add
push
xchg
roll
in
jle
mov
test
mov
and
arpl
stos
scas
repnz
lahf
scas
sahf
jbe
jno
mov
dec
into
mov
insb
inc
mov
jge
xchg
push
sbb
lods
scas
pop
fnstsw
sar
inc
insb
jb
test
mov
mov
sub
jne
mov
mov
lds
ret
mov
cmp
xor
das
inc
loopne
push
rcrb
arpl
jnp
ja
jl
jmp
sbb
mov
push
sub
repz
xchg
dec
sbb
scas
repnz
bound
fwait
imul
mov
jnp
or
cmc
cmpsb
or
lods
mov
pop
lret
sbb
pop
inc
and
cmp
lock
jmp
negl
sbb
mov
mov
nop
int
xchg
filds
xorb
imul
push
sarl
out
lods
cld
fsubrl
mov
repnz
cmp
sahf
cld
stc
sbb
dec
cmpsb
jecxz
mov
mov
lods
and
jns
out
popa
loopne
movsb
sahf
out
push
ljmp
leave
xchg
in
addr16
cmp
jo
mov
test
fadds
cltd
scas
mov
adc
aad
or
fsts
xor
in
les
loope
sarl
ret
shll
adc
add
das
into
pop
repz
or
popa
ror
pop
ja
push
popf
mov
cld
adc
add
or
adc
aad
cltd
inc
cs
xor
inc
dec
push
lcall
jno
adc
movsb
or
dec
cmc
cmpsl
mov
sub
loopne
sti
popf
enter
pushf
dec
ds
jge
and
jecxz
adc
fdivs
xor
or
and
aas
adc
sbb
push
jns
movsb
sbb
add
mov
xor
in
jl
repz
cld
aad
dec
movsb
test
es
mov
sub
aam
pop
xor
jp
pop
dec
push
lea
test
xchg
dec
ds
ss
cmpsl
or
dec
mulb
xchg
xchg
in
adc
sbb
jecxz
movsl
and
movb
jae
push
stos
mov
adc
outsb
sbb
into
push
pop
out
push
xor
cli
test
les
out
std
or
in
addr16
test
stos
mov
or
outsb
pop
mov
subb
mov
test
loopne
sub
rolb
je
jmp
xchg
out
insb
fcomps
imul
xchg
cltd
push
adc
adc
out
lods
lock
notb
es
push
shrl
inc
adc
mov
movsl
not
xchg
cmpsl
into
popf
inc
pop
mov
mov
ror
pop
mov
cli
js
data16
ret
movsb
jmp
ret
ret
pop
push
jb
js
shll
stos
push
fs
jno
mov
mov
stos
enter
jae
push
push
cmp
out
sti
cmpsb
cmpsl
idivl
lcall
or
xor
andl
mov
pop
loopne
push
and
dec
ficompl
movsb
dec
ficomps
divb
mov
ss
insb
mov
aam
and
sbb
aas
push
test
inc
xchg
push
cwtl
push
data16
insb
rorl
lods
je
sub
and
jnp
data16
jecxz
addl
outsl
gs
daa
dec
mov
sub
or
push
sbb
mov
movsb
sbb
jmp
pop
dec
gs
cmp
rsqrtps
call
and
mov
popa
jne
xor
jae
popa
sbb
mov
imul
jmp
test
or
sbb
rorl
cltd
cmpsl
nop
roll
cwtl
sub
add
inc
movsw
fstps
inc
mov
dec
movsl
jno
popf
xchg
adc
inc
loop
int3
jg
mov
push
mov
nop
jnp
push
into
inc
je
sub
mov
jmp
or
test
cmp
dec
adc
arpl
push
jb
pcmpeqb
dec
add
sub
arpl
scas
aaa
inc
jmp
push
dec
faddl
out
scas
xor
jg
sbbl
cwtl
lret
dec
jmp
jge
sub
pop
add
in
loop
daa
jg
cmc
out
push
jb
sub
cmp
dec
sub
jb
aas
jne
mov
mov
mov
jb
mov
lods
cltd
shll
test
out
imul
adc
addb
push
mov
and
in
pop
pop
cmp
push
es
fldenv
into
adc
das
out
jns
mov
push
jmp
and
fisubl
adcb
std
pop
push
add
ja
mov
xor
jp
push
mov
mov
mulb
movsl
mull
pop
sahf
and
inc
adc
leave
dec
inc
int
fadds
lock
sar
lods
ss
sub
dec
out
lock
in
add
hlt
xlat
sbb
out
rorb
cmpsb
out
mov
test
jo
jmp
sahf
cltd
ret
cmc
leave
test
fsubrp
mov
inc
push
mov
fdivr
icebp
test
adc
jb
mov
cld
mov
mov
cmp
and
push
stos
daa
sbb
out
mul
jne
sub
push
lds
fisttpl
pop
push
jne
mov
fidivl
in
cmp
sub
pop
or
fistpll
mov
imul
inc
js
scas
icebp
les
jno
arpl
mov
adc
xchg
pusha
sahf
jecxz
lret
ss
icebp
pop
jecxz
repz
aaa
or
mov
movsb
fmul
outsl
dec
xchg
sub
lret
sbb
pop
das
pop
push
bound
add
jl
in
cltd
xchg
sub
sub
in
cli
pop
pop
inc
adc
xchg
xor
stc
push
cli
inc
adcl
push
popf
and
lds
aas
stos
out
outsb
lahf
sbb
push
jmp
data16
cli
outsl
movsl
pusha
insl
mov
mov
jg
in
in
in
inc
pop
pop
nop
xor
sub
rol
inc
out
xchg
loopne
jo
push
jp
and
xchg
movsl
das
add
or
sub
xor
mov
ja
imul
or
lods
jae
cmp
rcrb
mov
lock
mov
aam
jae
enter
or
push
roll
shrl
push
or
sbb
ds
mov
push
out
sbb
int3
inc
push
jbe
mov
movsb
insl
lahf
je
in
adcl
movsb
inc
out
sub
mov
orl
loope
arpl
mov
stos
and
xorl
imul
dec
gs
xchg
popl
je
aaa
inc
sbb
in
test
aam
xchg
adc
mov
movl
pop
inc
jnp
jl
popf
and
fnstenv
addb
and
rol
fwait
hlt
mov
sbb
inc
cli
cmp
lret
test
sub
mov
test
inc
mov
push
dec
and
sarb
pop
cs
push
inc
mov
xchg
aam
lcall
lods
jecxz
push
aad
data16
lcall
xchg
insl
dec
ret
addr16
cld
pop
inc
jb
cmpsl
mov
sub
push
add
cmp
pushf
in
mov
mov
aaa
mov
sbb
stos
sbbb
mov
jne
mov
xchg
and
jg
mov
pop
or
out
loope
movsb
add
cwtl
cmp
sbbb
cmpsl
cld
sbb
fistpl
fimuls
xor
sbb
js
test
mov
fwait
daa
call
pop
mov
hlt
dec
hlt
cmp
mov
pop
adc
outsl
aaa
lret
filds
pop
cmp
inc
jle
xchg
push
push
es
not
mov
pslld
push
sbb
stc
movsb
mov
stos
in
cmp
push
xchg
xor
push
add
fcmovne
shlb
jbe
mov
daa
mov
inc
mov
and
bound
mov
pop
push
push
jecxz
andb
jmp
mov
fwait
xchg
fnsave
sti
test
fistps
dec
add
jbe
mov
add
pop
lods
dec
aam
jle
dec
or
lahf
nop
xor
or
sbb
xchg
cmp
and
mov
xor
add
xchg
hlt
adc
popa
inc
repz
push
jl
addr16
or
test
out
xor
imull
xchg
subl
pop
xchg
lds
xchg
inc
pop
lods
rol
int
sti
xchg
mov
xor
lahf
sti
push
pop
cltd
cmp
outsl
and
and
mov
out
pop
in
jnp
sti
adc
leave
sbb
pop
test
testb
pushf
xchg
das
mov
add
mov
or
mov
rcll
adc
out
add
pop
aas
xor
int3
sbb
sub
das
pop
rcrl
mov
cmc
shlb
lcall
addr16
mov
lock
jnp
inc
xchg
imul
mov
lods
inc
popl
push
mov
ffreep
add
ret
sahf
stc
lahf
dec
lret
or
data16
mov
mov
pop
jl
sbb
mov
ljmp
loope
pop
push
adcb
enter
jg
mov
push
jmp
lods
std
or
xor
push
inc
test
fiaddl
pop
pusha
lcall
pop
clc
push
into
fildl
xchg
xchg
loopne
mov
xchg
xchg
imul
add
cmp
sub
mov
mov
insl
push
mov
xor
aad
into
jo
mov
push
inc
cmp
pushf
mov
hlt
xchg
sub
out
jnp
push
ds
inc
mov
pop
and
push
dec
add
xchg
add
xchg
mov
cmp
out
xchg
adc
pop
jb
pop
mov
dec
push
cmp
xchg
xor
push
sbbb
mov
add
ss
adc
lret
dec
cs
pop
sbb
shl
jle
mov
push
lret
loopne
push
fwait
fs
push
jl
rep
test
stos
cmp
in
repz
pop
lods
aad
or
int3
pusha
xor
add
cmp
cld
and
xchg
mov
pusha
adc
xchg
lcall
mov
add
shrb
xor
mov
cmp
fldt
adc
mov
stos
mov
rcll
leave
ja
jecxz
into
rcrb
push
ss
inc
outsl
testl
lods
mov
push
mov
mov
cs
xor
enter
mov
cltd
rorb
mov
call
and
add
mov
or
mov
cmpsb
sbb
lcall
mov
cld
jne
ret
sbb
mov
and
xchg
xchg
fcomps
clc
in
fnstenv
jbe
imul
xchg
movsl
mov
dec
and
enter
mov
test
dec
jae
insl
fcmovb
ss
fstps
or
cs
push
pop
dec
dec
adc
jb
add
dec
das
test
pop
push
push
icebp
cmp
push
cmp
leave
repnz
inc
in
mov
mov
test
lods
mov
mov
aaa
push
das
popf
imul
aam
mov
dec
sbb
sbb
mov
cmpsb
add
cld
jns
adc
test
fisttps
mov
dec
or
push
arpl
xchg
mov
adc
lret
in
dec
ljmp
pushf
sbb
mov
stc
xorb
mov
push
addb
gs
imulb
hlt
jl
cmp
adc
push
mov
mov
loope
or
pop
fdivrs
jnp
fmul
clc
sub
out
test
stc
jb
mov
mov
jp
das
mov
and
sub
xlat
xchg
mov
push
out
pop
sbb
xlat
adc
mov
fs
push
pop
add
and
inc
mov
jp
jge
call
hlt
mov
outsb
mov
nop
sarb
hlt
push
inc
xor
sarl
adc
gs
fdivs
xchg
and
pop
sbb
int
cmp
push
ret
insl
in
mov
fcmovb
iret
clc
jle
sbb
insl
xor
push
jns
cmp
xor
and
cmp
adc
and
sbb
int
mov
cmp
roll
int3
jl
test
add
or
lahf
xor
enter
aaa
lahf
int3
fdivp
int
das
es
iret
insl
inc
and
push
shlb
pushf
negb
aaa
xchg
iret
sub
jne
sub
int3
js
xchg
daa
lea
xchg
pusha
sbbb
jmp
je
dec
repnz
hlt
add
mov
jmp
xchg
loope
xchg
das
sti
or
dec
push
sbb
dec
int3
pop
maskmovq
aas
cmc
sub
or
sbb
push
mov
mov
scas
or
popa
clc
test
mov
pop
jle
mov
dec
adc
push
mov
push
mov
in
fmulp
pop
ret
xor
scas
call
arpl
push
jecxz
and
pusha
and
les
mov
xchg
outsl
mov
repnz
cmp
fbstp
std
sbb
fldcw
pop
fmuls
call
push
pushf
test
mov
jp
cs
cld
mov
mov
iret
in
test
rcrb
jae
stos
cld
test
xchg
pop
data16
int3
dec
xchg
jle
mov
stos
aad
and
lret
and
dec
insb
daa
cwtd
or
fldcw
fidivrs
jbe
add
cmp
cli
scas
and
sub
pop
push
sbb
scas
pop
ja
sbb
aam
clc
adc
jns
push
les
or
jae
sti
inc
test
xchg
xchg
lcall
push
cli
xchg
adc
in
pop
inc
xchg
and
jb
and
inc
jmp
jns
push
mov
inc
xlat
add
xchg
out
ret
adc
cmp
xor
and
xchg
xor
push
and
mov
decb
jbe
out
cmpsl
inc
cmp
mov
addb
lret
mov
jo
jns
xor
sub
aad
jge
ret
andb
mov
mov
sub
movsl
ret
ja
sub
mov
xchg
jmp
mov
dec
aam
push
cli
jno
sti
jecxz
sbb
sbb
fldl
jo
enter
pop
push
out
mov
cmpsl
push
std
and
loop
pushf
out
fsubp
loope
or
xchg
clc
lods
std
hlt
scas
outsb
addr16
push
pop
pop
dec
add
stc
inc
dec
or
test
sub
sbb
clc
mov
xchg
cmp
mov
xchg
arpl
cmc
rorb
lret
into
fisttpl
sbb
cmp
in
add
popa
ja
inc
call
pop
out
mov
jge
push
adcl
xchg
inc
sub
sub
xchg
shlb
xor
scas
shr
test
fldt
repnz
pop
mov
into
xor
popf
rorl
fistl
xor
adc
sbb
outsb
mov
xchg
cmpsl
push
je
pop
sbb
push
in
inc
mov
pop
mov
jae
sub
lds
pop
nop
popf
push
sub
sti
jg
push
jb
sbb
sub
loopne
and
in
mov
clc
dec
movb
scas
movsb
pop
arpl
clc
test
leave
mov
aaa
sbb
mov
fs
ds
jne
dec
xchg
or
out
shrb
or
pushf
mov
lods
pop
popf
inc
fdivrl
xchg
popa
rcrl
cmp
out
pcmpgtw
jno
lret
lock
adc
lret
rcrb
inc
iret
daa
adc
inc
cmp
iret
push
jne
das
mov
inc
mov
mov
or
lods
sub
mov
mov
cmp
jmp
mov
mov
add
push
loope
rorb
in
ret
je
cwtl
inc
xor
xorl
pop
ds
xlat
mov
push
pop
outsl
inc
push
or
addr16
les
repnz
test
pop
call
adc
sbb
cwtl
add
lods
push
out
inc
in
mov
and
sbb
sub
xchg
das
mov
aaa
test
ss
enter
stc
rorb
fbstp
mov
xchg
repnz
inc
punpckhdq
vmread
fldl
test
icebp
lock
sub
movsl
cld
or
lret
dec
or
or
and
fsubrl
pushf
mov
loopne
and
jne
mov
sub
jp
push
push
push
insb
cltd
xor
and
daa
push
cmp
call
push
xlat
mov
or
rorb
mov
repz
mov
inc
push
dec
iret
sbb
test
jmp
jp
push
in
shll
sahf
jnp
dec
mov
into
xor
sarb
pop
pop
mov
ror
js
and
xlat
sti
lock
mov
jbe
movsb
stos
pop
rcl
push
ret
xchg
mov
xor
sbb
xchg
out
insl
and
rolb
pop
xchg
pop
fmul
data16
movsl
pop
adc
in
dec
mov
push
inc
out
or
lods
jl
outsl
icebp
in
jb
or
and
lods
shll
sub
js
xor
add
jae
stc
insb
push
xchg
dec
gs
lret
cltd
sbb
fwait
mov
push
pop
repz
idivl
and
push
aaa
cmpsl
cmp
in
cwtl
mull
inc
mov
test
jbe
or
cld
pop
lcall
bound
popf
xchg
addr16
cmp
xor
sbb
jge
in
sub
dec
cwtl
xor
and
inc
inc
inc
mov
add
sbb
adc
push
les
xchg
lods
loope
mov
stos
out
add
and
mov
jmp
pop
push
pop
in
pop
pop
xchg
adcl
insl
add
xchg
loopne
lods
mov
pop
in
add
sbb
div
out
enter
mov
or
mov
pop
imul
shl
push
add
or
lahf
fwait
bound
sub
pop
xchg
out
jle
inc
cmp
dec
inc
push
jns
adc
add
ja
push
xchg
out
lcallw
lea
xchg
loopne
lods
or
daa
test
movl
cmp
mov
dec
testb
loope
xor
pop
jmp
cmp
je
jl
jb
xorb
mov
inc
mov
inc
mov
gs
mov
adc
jecxz
nop
or
cmp
test
xor
clc
frstor
cmp
xchg
das
cltd
sbb
sti
aam
xchg
xchg
in
pushf
and
cld
cli
addr16
jge
ret
adc
subb
xor
cmpsb
int3
mov
out
mov
mov
cmpl
rolb
outsl
aaa
and
jg
mov
jp
ret
andl
pop
stc
xor
cmp
repnz
push
aam
aaa
jge
xchg
leave
add
adc
sbb
insb
cmpsl
outsb
and
push
pop
pushf
sub
dec
mov
mov
fnsave
jg
out
ds
mov
repnz
ljmp
gs
loopne
inc
jl
cmpsb
add
xchg
dec
ss
loop
nop
lret
push
sbb
pushaw
xchg
mov
or
jnp
out
xor
testb
sbb
xchg
and
jbe
adc
enter
insb
test
imul
jmp
cmpl
adc
jecxz
in
stos
mov
loop
daa
sub
dec
cmpsb
cli
or
sub
pop
dec
jno
clc
out
sti
cmp
pop
ds
rcrl
fbstp
mov
in
aas
xchg
imul
sbb
sahf
mov
mov
lret
pop
xor
pop
cmp
push
insl
mov
mov
gs
mov
push
dec
or
adc
lea
adc
loopne
and
adc
xor
stos
addb
adc
add
adc
aas
inc
pop
shl
imul
or
xchg
dec
dec
xchg
xorb
adc
dec
mov
clc
out
or
adc
mov
sbb
xchg
stos
sbb
lods
jg
insw
pop
xor
movsb
jb
add
aad
fsubs
fs
xor
pop
loop
enter
test
mov
pop
mov
in
xchg
outsb
les
pushf
in
std
mov
push
mov
or
sti
and
bound
dec
lods
push
sub
cld
and
nop
lds
xor
lahf
jp
cmp
xchg
fucomi
xchg
or
mov
scas
lock
mov
dec
sbb
testl
repz
out
stc
xchg
dec
in
cli
outsl
dec
test
imul
adc
xor
aad
daa
into
adc
out
in
dec
cmpsb
repz
je
js
insl
fs
lahf
push
push
jb
loopne
jo
fs
xor
rorl
testl
in
xlat
mov
mov
shlb
in
pop
scas
mov
mov
inc
sub
cld
lock
jno
out
sti
inc
mov
jmp
sbb
jp
in
hlt
sub
and
std
stc
push
lcall
movsl
sub
lock
inc
adc
pop
add
jnp
lock
mov
add
and
xchg
inc
xchg
add
inc
pusha
push
mov
mov
stc
ret
ljmp
stos
test
and
enter
mov
inc
lds
cmp
repz
xor
inc
int
jecxz
enter
sbb
cmp
data16
sbb
mov
addr16
std
sub
ret
ss
mov
add
jb
xchg
mov
cmp
cld
aam
lcall
test
jae
or
ljmp
es
cmc
repnz
and
lahf
or
mov
imul
push
idivl
dec
pop
sub
imull
sahf
add
and
sbb
call
xchg
cmpsl
pop
mov
mov
jns
stc
pop
pxor
loop
test
and
arpl
and
data16
xor
jg
mov
fs
int3
dec
insl
push
push
pop
sbb
in
inc
xchg
mov
mov
jmp
xor
call
xor
imull
mov
loop
inc
enter
mov
cmc
add
stc
pop
fdivr
jp
stos
ljmp
fisubrs
xchg
out
into
sbb
jecxz
xor
xor
and
movsb
out
ds
pop
jg
ret
mov
jp
inc
inc
lret
add
push
mov
popf
cmp
sub
fcomps
sbb
cmp
pushf
sub
push
and
xchg
ret
pop
xchg
mov
mov
and
stos
adc
out
sbb
push
leave
arpl
mov
call
push
outsl
jbe
sbb
iret
rolb
cmovp
adc
mov
dec
outsl
fbstp
cwtl
fdivs
sbb
push
ret
dec
and
xor
xchg
jg
daa
inc
cmpsl
xchg
sub
xor
lcall
push
and
call
outsl
or
bound
sbb
out
xchg
mov
jg
push
push
out
test
pop
bndstx
push
cmp
sbb
inc
sarb
mov
insl
push
dec
loop
aas
dec
out
ja
not
call
fs
mov
les
mov
mov
xchg
outsb
test
pop
cmpsb
mov
or
mov
stos
xchg
push
lret
movsl
ljmp
push
in
pop
and
jl
faddp
cs
scas
mov
sbb
lahf
jp
test
mov
mov
sub
adc
aad
sub
ja
cltd
inc
mov
lods
test
or
leave
sub
je
scas
addl
pop
pop
cmp
xor
in
outsb
mov
mov
mov
lods
mov
outsb
or
mov
in
cltd
rol
mov
push
push
in
fwait
adc
adc
mov
adc
and
int3
ficompl
adcb
add
and
test
sub
frstor
test
pop
and
out
aam
out
pushf
outsl
aam
inc
jb
xchg
stos
cltd
sbb
mov
push
daa
and
jae
adc
or
xor
push
fs
out
and
int
jo
pop
add
ss
mov
hlt
xlat
mov
daa
and
push
cwtl
lds
jmp
sbb
add
ret
and
fcmove
ss
mov
jne
xchg
jnp
ljmp
xchg
bound
mov
outsl
adc
inc
gs
ficoms
lret
lock
fbstp
cmp
out
pop
mov
sub
add
cmp
jl
xlat
and
fdivs
nop
fcom
inc
nop
mov
dec
ss
cmp
test
icebp
stos
lret
cwtl
fisttpll
mov
xlat
fwait
cmc
ret
stos
clc
sub
scas
inc
in
mov
inc
or
dec
mov
je
aas
aas
xchg
cltd
mov
xor
jne
mov
pop
lahf
mov
cmpsb
cmc
iret
lcall
fs
lods
cld
roll
xchg
lcall
mov
dec
sub
cmp
test
cmp
les
flds
lea
cld
xor
xchg
in
mov
call
pusha
sub
lock
mov
shll
mov
or
arpl
enter
sub
mov
or
lret
dec
adc
lcall
ret
mov
cmc
cmpsl
pushf
data16
hlt
and
lahf
cs
mov
jl
fnstenv
std
int3
sbb
dec
pushf
xor
in
repnz
or
loope
lock
or
imul
xchg
mov
mov
sbb
xlat
sub
push
mov
or
lret
xor
dec
repz
adc
in
sahf
jmp
popf
jl
xor
mov
push
xor
cld
adc
test
mov
cwtl
sub
sbb
and
in
repnz
add
inc
push
sbb
or
lods
cs
xchg
movsb
push
loop
fptan
jl
pop
mov
arpl
mov
cmp
pop
in
push
mul
dec
mov
xor
pop
mov
lret
aaa
inc
call
mov
lcall
daa
and
scas
or
ds
mov
jle
imul
add
test
rorb
nop
mov
mov
jg
sarl
xor
in
movl
inc
jle
mov
cmp
xchg
enter
jg
imul
ret
cmp
arpl
xor
daa
lods
out
xchg
push
shrl
stos
or
fsubrs
mov
pop
pop
shrb
mov
aam
imulb
mov
pop
xchg
jne
loope
jns
addr16
cmc
ja
adc
lock
or
mov
sahf
and
imul
sti
pop
stc
mov
cltd
lods
incl
jge
pop
push
sub
inc
je
xchg
bound
in
adc
pop
inc
mov
addr16
sbb
test
lahf
or
push
orb
or
add
mov
out
mov
mov
sub
in
dec
cs
push
stos
je
stos
lds
sub
xlat
test
cwtl
jbe
sbb
nop
ljmp
or
ret
mov
loopne
dec
aas
imul
insb
cwtl
sbb
pop
cmpsb
jne
sbb
daa
fsubrl
mov
rcr
jbe
jbe
stos
jge
or
pusha
rcl
and
js
popa
sbbl
std
mov
clc
ljmp
pop
pop
fisubl
insb
add
icebp
jno
hlt
loope
push
mov
les
sub
std
les
mov
and
gs
sbb
fwait
test
pop
sub
jns
hlt
add
mov
cli
aam
cmp
sbb
loope
out
test
pop
movsl
xchg
push
cwtl
in
js
adc
sub
popa
xor
mov
xchg
inc
imul
int3
jg
mov
xchg
notl
scas
dec
pop
mov
enter
pop
or
in
lods
sbb
ds
fidivrs
out
gs
sbb
sarb
fldt
adc
push
push
shll
mov
push
imull
stos
sub
mov
or
inc
jae
pop
int
push
call
inc
sti
sub
adc
aam
sub
dec
dec
pop
lods
pop
mov
push
or
inc
and
sbb
mov
insl
mov
std
sbb
jecxz
sub
out
pop
stc
out
dec
mov
and
aad
xchg
jmp
jl
lret
cmp
jecxz
cmc
and
bound
xor
inc
cmp
into
int3
or
inc
cld
cmc
fdivs
jnp
cld
adc
and
je
iret
fisttpll
sub
pop
pop
test
subb
sub
test
sahf
sub
popf
ret
xor
in
pop
hlt
gs
aad
mov
mov
mul
out
test
push
add
cmp
std
lret
sbbl
jge
mov
push
addr16
lea
sbb
pop
insl
xchg
jecxz
das
outsb
inc
gs
pop
and
into
aam
xchg
xor
je
inc
and
out
ss
mov
aaa
pop
pop
xor
sbb
rcrb
fcomp
lock
jl
jb
movl
and
and
dec
xor
dec
cmp
add
mov
push
in
mov
shl
insb
lea
ror
mov
mov
xorb
inc
out
cmova
lcall
das
adc
adc
and
fwait
insl
jg
aad
mov
mov
mov
pop
sbb
push
lret
xchg
in
xor
inc
jnp
rorl
adc
jae
xor
ds
loop
xchg
in
mov
push
xchg
shrl
imul
ret
cwtl
daa
ret
pop
push
mov
mov
ret
shll
jmp
xor
mov
push
and
inc
dec
xorb
rorb
rcr
mov
push
mov
mov
sub
inc
cli
popa
mov
loop
push
mov
andl
test
push
bound
sahf
dec
push
pop
icebp
push
sbb
loope
jmp
fdivr
jge
outsb
outsl
xchg
mov
or
imul
mov
test
pop
insb
inc
je
push
inc
sub
insl
pop
mov
jg
out
sbb
ficoms
xor
lcall
mov
incl
mov
sub
or
imull
popf
push
push
inc
mov
adcb
inc
in
xchg
testl
jecxz
int3
lret
xchg
mov
punpckhbw
popa
and
dec
push
push
and
call
jo
push
stc
imul
and
jnp
loope
mov
stos
push
dec
gs
push
lods
xchg
and
adc
mov
sbb
daa
lahf
push
repnz
inc
test
xchg
mov
pop
hlt
lcall
xor
or
out
inc
mov
out
mov
insl
xorl
bound
iret
incb
lods
adc
sbbb
rol
add
clc
cli
mov
mov
or
imul
jns
xchg
or
xor
mov
mov
imull
popf
and
aam
pop
sub
add
popa
pop
xor
sub
pop
imul
mov
pushf
and
in
cmp
adc
mov
test
ss
cmp
popa
and
pushf
imul
or
mov
xchg
mov
and
push
rclb
add
inc
fnsave
add
jbe
jl
shl
cltd
scas
sbb
jae
jmp
adc
out
jae
fdiv
cwtl
mov
or
test
lret
leave
pop
adc
inc
jg
cs
sbb
and
mov
lret
adc
lahf
ljmp
cli
scas
adc
scas
sub
ja
push
mov
scas
xor
fneni(8087
lock
jecxz
daa
jge
movsb
sub
lret
data16
mov
jae
xchg
out
xchg
inc
in
pop
out
js
aam
js
add
les
lahf
fcmovbe
jl
cmpsb
inc
mov
and
inc
mov
inc
dec
outsl
or
pop
popa
xor
and
loopne
out
out
adc
xor
add
jae
insb
and
mov
mov
sbb
sbb
xchg
push
fbld
out
xchg
or
xchg
cwtl
push
mov
test
nop
xor
add
sub
and
adcl
mov
int
dec
pushf
pop
mov
mov
cmp
loope
xchg
and
into
fdivs
scas
stc
adc
mov
cltd
outsl
cmp
into
xchg
scas
push
in
pusha
les
inc
add
testb
lods
xor
pop
dec
lahf
push
fxch
aaa
and
sbb
movsl
xchg
pop
ljmp
loope
and
xchg
and
sub
int3
sahf
mov
ficoml
inc
call
mul
sbb
sbb
arpl
cli
xor
imul
or
or
std
adc
repz
add
sbb
or
je
mov
rol
fldl
roll
inc
repz
imul
and
outsl
cmp
cmp
cmp
cltd
mov
pop
mov
push
cmp
sar
mov
push
mov
push
push
vdivpd
jns
les
lock
daa
jns
pop
dec
mov
sbb
in
sti
xor
aaa
sub
orl
ds
nop
inc
ficompl
mov
int
cmp
loope
lret
or
adc
dec
dec
pop
mov
mov
push
adc
lret
sub
mov
in
jmp
les
mov
ret
add
jno
xchg
iret
dec
sbb
ret
out
xchg
icebp
ror
call
adc
mov
sbb
pop
test
adc
xchg
mov
stos
pop
pop
ss
xor
outsl
fucomip
push
std
aam
es
mov
stos
mov
cmc
mov
or
filds
or
pop
into
xor
push
adc
loope
xchg
sbb
ja
ja
mov
shll
jns
add
mov
and
arpl
fadds
xlat
das
sub
mov
hlt
mov
insb
cmp
rcrl
out
cmc
out
xor
push
inc
int3
push
mov
sti
dec
aas
lret
cmp
or
jecxz
inc
push
and
mov
movl
stos
iret
cmc
jecxz
sub
clc
adc
mov
push
adc
lea
ret
lret
mov
and
xchg
push
add
xor
test
mov
pop
lret
push
idivb
xchg
cmp
aas
cmp
pop
es
mov
and
movsl
cmp
ret
cmpsl
loope
xchg
sub
fmuls
test
sub
sbb
jmp
jns
mov
inc
int
aad
push
rcr
jb
mov
pusha
mov
and
outsb
adc
pop
inc
sahf
mov
mov
loop
pop
fistps
mov
mov
push
and
dec
jecxz
addr16
aam
mov
repnz
pop
scas
sub
shrl
std
fimull
mov
push
fldl
icebp
add
xor
cmpsl
push
movsl
js
sub
fisubrl
xchg
lock
aas
xor
nop
sub
sub
rcr
pop
jo
pop
enter
or
adc
arpl
fxch
sub
insl
xor
lds
orl
mov
imul
xorl
and
cmp
mov
mov
cmp
mov
lahf
mov
insb
lea
sbb
test
mov
loope
add
scas
fwait
pop
sbb
push
aam
dec
out
out
push
inc
es
fchs
cmp
and
lret
jecxz
pop
and
inc
aaa
pop
mov
push
out
push
loope
adc
imul
dec
into
cltd
sbb
and
push
mov
notb
or
gs
imul
cmpsl
lock
xor
inc
cmpsl
cli
cltd
push
cmp
push
jnp
add
das
jnp
jne
loopne
inc
mov
xor
imul
dec
nop
fiaddl
out
insl
pop
jae
cmp
or
pop
mov
pop
xchg
lock
jmp
outsb
shll
aad
ja
cmp
jns
mov
jp
fwait
fs
jo
fists
pop
imul
lret
int
and
les
mov
cmp
push
and
cmc
rcrl
add
mov
and
xchg
jno
mov
pop
sbb
leave
push
and
mov
jnp
xor
cmp
bound
fucomi
rcrl
mov
add
ret
and
dec
ficompl
mov
pushf
jl
jnp
inc
push
jae
ret
mov
jne
inc
jno
cld
fmull
mov
test
push
sti
push
insb
push
nop
push
and
and
fcoml
into
std
push
jno
mov
test
shlb
mov
ret
push
pop
dec
push
push
push
cmp
shll
mov
adc
sub
jne
inc
mov
jp
pop
pop
call
adc
xchg
pushf
je
out
mov
push
rorb
inc
mov
enter
xchg
pop
mull
xlat
out
pop
in
dec
inc
xchg
pop
leave
imull
loop
cmp
lods
stc
clc
and
mov
outsb
lahf
add
nop
mulb
cwtl
iret
inc
mov
xchg
in
push
mov
pop
mov
jl
and
rclb
pop
ja
sbb
xchg
stos
dec
lahf
mov
in
xchg
aam
cmp
cli
xchg
push
scas
stos
sti
enter
outsb
js
adcb
sub
fisttps
filds
call
xchg
ja
adcl
push
jmp
mov
and
les
pop
dec
ret
out
jecxz
fnstenv
dec
lods
aas
dec
jbe
mov
jmp
clc
int
lcall
out
xor
sbb
cmc
and
sub
push
hlt
sub
mov
adc
sbb
pop
or
jge
push
jbe
adc
xchg
sbb
das
int3
jbe
insl
mov
push
movsl
orb
mov
add
mov
fwait
cmp
mov
test
fiadds
mov
enter
sub
jnp
inc
shlb
repnz
sbb
mov
jo
leave
jb
push
push
mov
pop
cmc
or
and
xor
mov
rcr
in
pop
iret
imul
cmpsl
in
sbb
scas
pop
xor
notb
lret
rcll
jp
jae
push
add
mov
or
pop
pop
js
cmp
pop
int
sbb
and
mov
push
call
xchg
das
bound
lahf
adc
mov
in
or
cs
in
int3
inc
outsb
adc
cmp
push
mov
xor
fidivl
sbb
xchg
in
jmp
in
mov
cld
inc
movswl
xor
jge
jnp
sub
mov
rclb
call
xchg
ffreep
sbb
mov
and
ficoms
rolb
gs
push
fstl
xchg
jmp
ja
mov
pop
cld
popa
xor
sub
ja
scas
dec
adc
dec
outsb
sub
xor
jae
lahf
repz
fidivrl
cmp
xchg
sahf
arpl
test
sbb
mov
pusha
adc
cmc
loope
jo
daa
aaa
add
or
pop
adc
mov
je
sub
sbb
dec
sbb
lcall
push
sbb
jle
adc
xor
mov
cmpsl
std
shll
jmp
xor
out
je
in
xchg
std
mov
mov
mov
sarb
lret
mov
shll
or
inc
inc
pop
cmp
mov
inc
scas
mov
xchg
inc
sub
shlb
jns
popa
out
jnp
jae
xchg
test
imul
ja
jnp
jecxz
bound
adc
xchg
into
lock
testl
adc
out
add
pop
mov
pop
xchg
jns
xor
add
out
out
int
decl
inc
lcall
mov
mov
jle
inc
cmp
imulb
adc
add
cli
aam
adc
adc
adc
mov
add
push
mov
mov
cld
jg
lahf
scas
daa
jne
cmc
hlt
shrl
dec
js
jo
daa
sub
popa
jns
cmp
test
xchg
sbb
and
xchg
loopne
mov
out
add
dec
adc
xchg
pop
dec
sub
fisubl
mov
and
adcl
daa
and
jmp
clc
xlat
sub
sub
pop
sbb
pop
mov
dec
repnz
fisubs
popa
and
sub
test
mov
pop
popl
fcomps
pop
pop
lock
mov
in
out
jl
jbe
jne
movsl
xor
pushf
rorb
les
scas
jns
jl
repnz
push
mov
push
inc
jecxz
cli
push
push
jmp
sbb
icebp
sbb
sub
jne
les
sub
mov
int3
lds
push
es
roll
xlat
insb
adc
sub
sub
popf
inc
lods
inc
jnp
hlt
stc
jo
scas
mov
in
jns
mov
adc
and
xchg
int
lret
test
lcall
mov
shl
hlt
rcr
movsl
gs
into
or
pop
dec
fs
push
and
inc
push
sar
repnz
and
xor
jge
cmp
nop
loop
or
imul
leave
jae
mov
gs
push
pop
pop
xor
xlat
pop
add
push
push
cmp
sub
int3
cli
fsubs
lcall
xchg
cmp
jp
aas
fcmovnb
leave
cmpb
das
inc
mov
sbb
in
enter
aam
sbb
mov
mov
jne
jae
or
out
cmp
mov
push
aas
lock
jae
loopne
cmc
jecxz
mov
dec
push
decl
repnz
adc
loope
aad
filds
inc
push
outsl
sub
stc
out
popf
out
or
xchg
lcall
mov
mov
inc
je
mov
movsl
jp
ret
sbb
pop
sbb
cmc
lea
add
push
scas
cmp
dec
and
mov
xchg
pushf
out
enter
inc
aas
fidivl
fidivs
dec
int
pop
adc
cmp
push
mov
mov
jae
stos
adc
push
aam
adc
mov
xor
ja
lret
mov
xchg
loop
loopne
cltd
lods
pusha
in
ss
dec
jns
add
lea
addr16
aad
mov
sbb
cltd
cmpsb
dec
xor
pop
jge
lret
ja
xor
pop
xor
mov
pop
ljmp
icebp
popl
andl
pushf
push
jge
out
xor
ret
mov
rcll
sub
push
mov
ljmp
out
pop
ja
pushf
mul
xor
jbe
mov
mov
aad
push
movb
jp
iret
imul
rcrb
fisubrl
push
iret
and
call
enter
mov
sbb
cwtl
nop
xor
movsl
std
loop
fisttps
push
xchg
icebp
dec
pop
jge
lods
idiv
cmc
cltd
test
mov
inc
xchg
jb
rcrb
les
mov
pushf
xchg
repnz
xchg
sbb
push
sbb
adcb
and
aaa
and
or
aam
loop
dec
push
popa
aad
pop
push
lahf
sbb
mov
inc
and
pop
jecxz
sbb
bound
and
cmpsb
cmp
mov
jp
adcb
push
andb
xor
data16
jp
lret
fisttpll
lret
repnz
mov
push
mov
fldenv
pop
es
xchg
aaa
loop
cmpsl
repnz
pusha
andl
jb
jmp
test
jae
jmp
lret
aad
das
xchg
shlb
loop
cld
loopne
outsl
pop
aaa
cmp
cmpsl
push
incl
xchg
cmc
rorb
push
push
dec
or
mov
arpl
cmp
ret
xchg
or
and
sub
mov
xchg
mov
pop
fisttpll
hlt
push
lretw
fdivp
das
scas
dec
lock
fwait
sarl
sub
or
andl
cli
addr16
outsb
outsl
pop
inc
jl
inc
mov
aas
mov
pop
sbb
adc
rcrl
lret
out
sarb
pop
adc
or
and
pop
or
cltd
mov
jp
les
add
inc
push
mov
lods
dec
fsubs
in
cli
xchg
loopne
pop
repnz
pop
mov
sahf
cmpsl
aaa
xchg
pop
push
ljmp
adc
hlt
dec
mov
push
repz
jne
xchg
cmp
in
push
mov
dec
xlat
mov
clc
psrad
cmc
pop
repz
pop
gs
sarb
outsb
pop
stos
outsl
or
mov
jl
xor
xchg
cmp
pop
mov
fcomps
jae
fidivrl
or
or
and
test
jg
jl
jg
mov
adc
add
xlat
xchg
je
repnz
das
stos
stos
insb
lods
jmp
lret
sub
xorb
ja
gs
lods
ret
aad
mov
rcr
rolb
test
xorb
ret
xlat
movhps
cmp
push
outsb
arpl
xor
imul
cltd
sub
popf
mov
jl
int3
out
sbb
in
cmp
xchg
roll
mov
xor
loope
pop
xor
add
out
shrl
cwtl
dec
cmp
sub
mov
ss
push
jbe
lods
add
jg
cmp
movsl
and
in
aas
addr16
push
mov
lods
dec
cld
lahf
xlat
xor
adc
ss
mov
mov
or
mov
cltd
popa
push
xor
sbb
ret
mov
push
iret
jl
fmull
xor
rcll
xchg
ja
ss
jl
fistpl
pcmpeqd
inc
dec
or
push
movsl
mov
push
mov
dec
repnz
shlb
mov
in
jp,pn
lea
pop
mov
mov
xor
repnz
in
cwtl
dec
imul
aam
ret
mov
mov
inc
inc
lods
xor
ficomps
cmp
ret
mov
lea
leave
adc
enter
jne
mov
repnz
mov
out
push
push
jne
jno
jae
push
xor
js
jb
fwait
ss
add
mov
lret
jp
sbb
push
mov
xchg
and
sub
inc
dec
push
jbe
mov
or
aad
add
mov
adc
popf
jp
stc
jae
mov
imul
pop
mov
fadds
in
outsl
or
jns
jp
xchg
lods
rorl
xchg
and
cmpsb
stc
mov
add
iret
stos
jge
jecxz
lods
sub
bswap
rol
xchg
add
rclw
adc
mov
mov
hlt
cmp
adc
push
mov
xchg
inc
xchg
out
dec
jmp
add
inc
mov
mov
mov
add
jg
jp
fsubrl
push
test
xchg
lock
sbb
xor
repz
js
pop
ds
dec
stos
sub
scas
repz
sbb
xor
or
cltd
sub
lcall
xor
gs
mov
mov
mov
divl
pusha
sub
sub
jae
sub
ljmp
xchg
fdivrp
ja
loopne
lods
and
jge
mov
cli
jecxz
test
fsubrs
repnz
sub
pop
cltd
loopne
sarl
fmull
cs
cwtl
pushf
fwait
pop
mov
push
ret
adc
imul
clc
push
cmpsl
jae
mov
add
repnz
popf
out
lret
mov
cmp
fs
pop
jle
repz
lret
push
xor
push
mov
outsb
add
xchg
and
sub
mov
dec
mov
minps
mov
ja
enter
pop
cwtl
lock
push
jo
add
sub
and
xchg
and
xchg
jae
sbb
inc
popa
push
popa
add
out
pop
mov
pop
or
xchg
or
and
xchg
popf
xor
addl
insb
andb
das
push
fucomi
push
mov
scas
mov
cli
rcrl
lahf
je
jecxz
mov
jmp
xchg
insl
aas
push
es
cmp
stc
and
mov
pop
sarb
shll
push
xchg
rcrb
jae
ljmp
fnstenv
aas
outsl
cmp
les
lods
aaa
shll
push
and
mov
in
and
sbb
adc
dec
das
mov
enter
add
out
adc
jae
repnz
lret
inc
aas
iret
das
xchg
fincstp
into
loope
or
mov
pop
mov
pop
cmp
sub
sarb
push
lods
push
test
xorl
pop
popa
lret
bound
les
pusha
mov
or
cld
mov
dec
out
in
jo
sbb
push
jmp
mov
adc
stos
imul
adc
push
and
icebp
adc
jmp
mov
and
xor
jecxz
sbb
xor
adc
and
sub
iret
pop
aaa
fdivs
cmp
clc
mulb
sub
jbe
mov
fsubrl
scas
and
xchg
pop
sbb
and
xor
mov
mov
mov
and
enter
xor
mov
sub
aad
nop
inc
pop
add
call
xchg
mov
jb
or
mov
clc
mov
sub
ja
test
add
repnz
lahf
mov
inc
xchg
jbe
popa
mov
add
push
dec
mov
les
sbb
jno
add
std
insb
adc
mov
mov
mov
ret
mov
lahf
sarb
push
and
mov
leave
sub
adc
and
std
sbb
and
adc
pop
jmp
dec
xchg
cli
sahf
les
insb
sbb
mov
mov
sub
jl
incl
aaa
jge
bound
mov
fwait
mov
or
mov
dec
jns
pop
mov
xor
cwtl
std
je
cwtl
lea
stc
test
inc
cmpsb
sub
sub
inc
rorb
and
push
sub
in
stc
cmp
cmp
xchg
xor
mov
xchg
mov
inc
push
mov
sub
mov
xchg
xor
jae
or
push
stc
test
mov
xchg
cs
pusha
pop
or
cmp
loope
mov
sub
and
mov
push
fnsave
out
icebp
test
push
cmp
dec
cld
and
adc
not
mov
clc
sbb
shrb
add
adc
lcall
popa
xchg
sub
leave
lds
insb
push
pop
outsb
jnp
push
cmp
and
in
xchg
test
mov
inc
inc
sbb
jecxz
out
clc
fucomi
cltd
adc
pop
in
cmp
dec
and
and
cmp
dec
negl
test
jnp
mov
je
pop
and
stos
nop
pop
cmp
fwait
int3
adc
sbb
outsb
testl
ficoms
add
push
jae
leave
jae
xor
adc
cli
jecxz
add
imul
mov
inc
mov
int
xlat
clc
pushf
dec
cmp
xchg
push
jae
cwtl
ds
push
inc
je
fdivrs
inc
push
arpl
sbb
pop
jl
add
incl
popa
xor
in
inc
repz
mov
push
mov
pop
daa
dec
adc
mov
mov
or
xchg
or
mov
aas
stos
mov
push
fdivs
cmpsb
mov
ds
xlat
fbld
inc
mov
sti
arpl
mov
adc
inc
repnz
cmp
outsb
pop
shrb
repnz
mov
in
pop
adc
test
xor
adc
shl
mov
ja
push
pop
jmp
out
jo
ret
sbb
mov
cmpsb
cmp
test
adc
loope
dec
mov
ljmp
dec
loope
ja
ret
adc
cmpsb
sub
popa
lock
push
and
add
pushf
sub
loopne
mov
mov
xchg
test
xor
mov
gs
lret
jnp
mov
pop
ficoms
xchg
ljmp
xchg
mov
and
mov
push
pop
rorb
out
test
xor
test
jl
cmp
push
loopne
lea
xchg
lea
adc
call
mov
push
enter
rol
out
xchg
stc
outsb
push
mov
cs
popa
out
out
or
aam
ficompl
adc
jmp
testl
lds
sbb
adc
jnp
jl
movsb
cmp
xor
loope
mov
push
xchg
arpl
mov
out
bound
shl
add
adc
call
xlat
and
iret
push
lea
int3
shlb
pop
xor
lahf
addl
dec
inc
and
or
add
das
push
lods
cmp
add
and
or
fwait
sub
cmp
push
into
insb
cld
daa
out
push
lock
inc
push
test
loopne
inc
push
mov
dec
std
jb
cli
out
mov
pop
and
adc
stos
pop
iret
pop
sahf
and
inc
movsl
repz
xchg
dec
sub
and
push
sbb
popf
xchg
dec
push
shl
ret
popa
adc
dec
call
add
ljmp
das
cmp
push
insb
dec
dec
adc
sub
inc
lret
insl
nop
fwait
test
sarl
jmp
dec
call
js
adc
ret
std
popf
and
daa
jnp
sub
fnsave
outsl
push
sbb
aam
pop
pop
sbb
enter
mov
hlt
lcall
pop
ds
lret
sahf
repnz
inc
adc
nop
imull
dec
sti
or
pop
push
aas
fisubrs
pop
sbb
cs
add
mov
into
sbb
clc
outsb
pop
lods
and
daa
icebp
xor
jecxz
jecxz
ret
outsb
adc
mov
push
or
popf
adc
gs
aas
cmp
xchg
cltd
stc
xchg
sbbl
pop
sahf
push
pop
ficomps
xchg
dec
push
jo
rcr
popl
sub
imul
out
sti
push
mov
ljmp
sbbb
fcomps
adc
into
push
sub
ret
pop
and
stos
push
mov
testl
push
fsubrs
js
cmp
mov
or
adc
aas
push
sub
push
insl
jp
aaa
mov
lods
loope
je
sbb
cld
sbbl
push
mov
int
leave
ja
jp
sbb
in
cmp
mov
mov
sbb
rorl
cwtl
inc
mov
add
fcomps
jbe
out
pop
in
popa
lret
add
out
rclb
jo
movsl
mov
cmp
call
xchg
stos
mov
fisubs
and
std
loopne
test
rclb
ret
out
rcrb
cmp
leave
sub
ja
ret
pop
das
cwtl
fs
push
in
cmp
mov
popa
out
or
mov
xor
scas
dec
jne
leave
call
into
mov
loope
rcl
push
jae
mov
pop
lds
clc
subl
aad
or
mov
lods
sub
xchg
daa
imul
adc
push
popf
lahf
pop
xor
pop
xchg
or
sbb
add
jg
lret
adc
inc
test
push
sub
enter
in
sub
push
lods
fidivrs
push
push
test
lcall
dec
pop
jle
adc
xor
inc
mov
inc
xor
lds
lods
push
xchg
test
and
insb
es
mull
je
shlb
mov
sbb
xchg
test
sbb
das
xor
loope
cmc
jecxz
imul
adc
dec
pop
xor
lahf
jno
push
fisubrl
pop
mov
adc
mov
push
lret
jg
ret
js
movsb
jnp
dec
push
inc
or
and
mov
lods
or
out
je
testl
mov
push
leave
pop
fisttps
mov
xchg
xor
pop
xchg
pushf
push
sbb
pushf
push
test
jno
mov
and
ret
clc
mov
call
nop
fbstp
adc
in
loopne
sbb
mov
mov
jne
sahf
lret
sti
sbb
fcompl
mull
push
xchg
jno
add
mov
lret
je
lock
add
add
or
sub
decl
xor
hlt
sub
mov
scas
imul
int
jae
mov
aaa
mov
xor
add
inc
clc
dec
add
dec
cmp
xchg
dec
xchg
loopne
xlat
scas
jecxz
dec
jmp
scas
xchg
adc
push
lahf
cs
xchg
cmp
add
lcall
cmpsb
scas
lea
pushf
xor
jnp
sub
mov
scas
lahf
sub
daa
jmp
idivl
stos
pop
iret
int3
jg
inc
cwtl
xchg
dec
lret
fadds
pushf
jnp
mov
sbb
mov
jecxz
cmpsb
jns
fs
out
iret
xchg
push
cli
loopne
lret
cmp
or
outsl
mov
fldz
inc
mov
inc
pop
out
mov
in
sub
pop
aad
pop
pop
pop
fwait
insl
xchg
dec
jge
jo
inc
xor
testb
jmp
push
mov
or
rclb
mov
imul
sbb
add
mov
jmp
push
ja
xor
add
or
outsl
jbe
lcall
cmpb
mov
test
aaa
shlb
sbb
lahf
adc
pop
imul
jno
or
push
movsb
scas
mov
repnz
test
shrb
or
fildl
lcall
xchg
lcall
enter
mov
mov
xor
inc
stc
in
lahf
dec
and
jnp
insl
sbb
add
stos
push
xor
sub
testl
arpl
shll
scas
xor
sbb
and
mov
out
xchg
push
or
adc
mov
fisttpll
in
cmc
aas
lret
int3
into
js
inc
pop
pop
cltd
rcrl
jg
cwtl
pop
in
xchg
icebp
mov
outsb
cld
xlat
cli
addr16
or
pop
fstp
mov
mov
cmc
inc
cmpsl
cmp
stos
and
mov
arpl
push
clc
sarb
xor
sarb
pop
por
add
xor
sub
mov
adc
mov
hlt
pop
stos
mov
mov
mov
xchg
loopne
out
pusha
lret
add
mov
push
nop
and
or
rcrb
cmp
pop
mov
out
inc
es
mov
fists
clc
push
jmp
dec
jmp
loope
mov
mov
stos
aas
sub
pop
in
xorb
mov
loope
adc
push
cmp
cmp
dec
fcoml
scas
int
jg
addr16
fdivs
inc
or
fdivl
jg
notb
cwtl
xor
cmp
scas
push
scas
pop
pop
gs
cmpsb
insl
out
imul
ss
es
and
les
sahf
add
aam
imul
inc
jne
inc
insb
subb
sub
scas
fcomp
movsb
enter
sbb
sub
adc
popa
sarb
scas
jmp
nop
inc
xchg
jnp
mov
mov
push
jl
fwait
sbb
lcall
pop
fwait
mov
in
inc
fistpl
push
test
test
out
sbb
pushf
fcoms
cmpb
mov
repz
xchg
aas
adc
fidivrl
pop
mov
inc
ds
cwtl
and
push
frstor
pop
cld
push
pushf
mov
xchg
cmp
xor
cld
jle
std
decl
xchg
test
push
mov
imul
mov
sub
mov
xchg
sub
push
out
movsb
mov
cltd
jmp
popa
jo
jo
mov
mov
ret
cltd
add
xchg
jle
lock
movsb
hlt
add
dec
sub
add
adc
pop
and
adc
and
cmp
push
les
inc
xlat
mov
push
adc
sbb
lock
pop
pop
ljmp
out
sub
fdivrp
ds
cmpsb
fwait
or
sti
mov
hlt
leave
cmp
jmp
pop
mov
sub
inc
imul
mov
data16
push
jns
lea
adc
xor
lahf
xor
pop
rcrb
imul
mov
and
cli
daa
jbe
das
repz
scas
repz
hlt
sub
inc
sti
mov
pop
nop
sub
in
aam
inc
fnstenv
add
jl
addb
push
adc
jo
cmp
push
pop
outsb
lods
cmp
pushf
inc
cmp
cmpsb
jne
rcr
aas
out
and
lods
mov
in
or
push
in
out
mov
inc
mov
sub
lret
adc
stc
add
fs
mov
add
dec
sub
aam
pop
cld
int
shll
out
add
adc
loop
jae
inc
lds
stos
xor
add
es
jne
enter
jle
dec
push
paddsb
mov
mov
push
jmp
pop
xor
mov
or
out
dec
jp
pop
adc
mov
push
aad
sbb
stos
mov
mov
inc
test
adc
inc
jle
notb
jae
or
and
jo
xchg
push
or
and
aaa
xchg
jge
or
cmp
std
sahf
movaps
mov
in
sub
push
and
push
fsubs
dec
repnz
repz
push
inc
inc
xchg
fnsave
xlat
add
push
sub
add
rorl
and
lahf
cmp
dec
sub
test
xchg
mov
push
dec
daa
data16
or
push
fs
dec
jb
movsl
dec
push
or
and
mull
pop
lret
push
into
inc
jnp
aaa
clc
sti
int3
jmp
jecxz
pop
adc
or
rorb
daa
push
adc
dec
sub
dec
imul
add
data16
loop
clc
and
rolb
jno
mov
adc
mov
lds
lea
pop
mov
aad
lcall
loop
std
mov
dec
lret
mov
fwait
cmpsb
xor
and
mov
adc
mov
mov
push
adc
cmpb
fdivrl
sti
cmc
cmp
in
jne
sbb
arpl
dec
cmpsl
ja
mov
insb
leave
orb
jl
mov
jle
popf
popa
inc
std
jb
int3
mov
fidivrl
pop
and
mov
mov
add
add
ret
xchg
pop
arpl
dec
movsl
mov
mov
mov
lret
fsubl
mov
test
sbb
mov
clc
mov
dec
pop
inc
leave
adc
mov
popf
addl
gs
sbb
xor
je
int
sti
sbb
inc
mov
jae
pushf
lds
decb
icebp
push
sbb
fiaddl
shrb
std
loope
xchg
sbb
push
and
inc
data16
addr16
adc
out
mov
inc
add
push
mov
jb
ds
mov
cmp
dec
add
adc
xor
ds
mov
xlat
pop
in
and
nop
sub
inc
inc
sbb
jecxz
ret
inc
adc
leave
jg
mov
adc
dec
pop
jae
inc
jns
mulb
call
outsl
dec
mov
and
inc
inc
js
adc
mov
sahf
dec
adc
mov
stos
sbb
xchg
mull
ret
sbb
dec
data16
mov
gs
data16
arpl
repnz
nop
ret
xchg
mov
das
sbb
xor
stc
daa
imul
outsl
xchg
scas
ret
dec
int
test
cmpsl
sti
push
ror
jb
sub
sbb
and
cs
push
mov
push
dec
pop
adc
out
and
in
insl
cmp
xor
int3
in
test
xlat
dec
inc
insl
jbe
pop
sub
je
push
fsts
xorb
cmp
sbbb
cmp
and
decb
lret
testl
mov
xor
repz
adc
je
aam
xchg
mov
and
fnstsw
mov
sbb
call
sub
adc
movaps
cmp
mov
add
or
loopne
adc
or
outsl
dec
mov
je
xlat
mov
xor
xor
aas
jg
mov
fwait
xor
repz
adc
lahf
in
mov
repnz
and
dec
pop
test
push
inc
fisubrl
pop
in
sbb
cli
jns
mov
sbb
xchg
mov
sarb
cs
xor
mov
ljmpw
adc
mov
rorl
inc
or
mov
mov
fnstcw
xchg
test
xlat
bound
sub
lods
jp
mov
out
pushf
lahf
ja
lahf
es
cmpl
xchg
rorl
fbld
lret
mov
mov
scas
ja
mov
push
xchg
mov
outsb
lcall
in
jl
cli
lret
cld
lret
je
push
dec
bound
xchg
cmp
add
push
movsl
xor
imul
mov
mov
adc
xchg
pop
adc
jmp
sbb
and
std
jge
or
mov
out
mov
testb
aaa
shl
or
dec
xchg
mov
dec
jns
arpl
pop
cmc
adc
imul
mov
xchg
mull
repnz
loop
dec
mov
sbb
out
pop
aad
aas
inc
cmp
xor
iret
out
lret
inc
pop
cmp
sbb
lods
pop
lods
or
push
mov
mov
shll
fsub
fs
jne
in
shll
mov
aam
and
push
xchg
addr16
pop
xor
jae
push
mov
scas
pop
pop
jmp
sbbb
cmp
dec
push
xor
rolb
adc
sub
mov
lcall
cmpl
lock
lock
dec
push
inc
dec
rorb
ds
cmpsb
andb
sbb
dec
xchg
mov
xor
push
adc
outsb
mov
imulb
cmp
insl
cld
xchg
je
xor
mov
outsl
push
fwait
push
add
or
arpl
push
stos
ja
and
out
jo
int3
out
push
adc
out
adc
lahf
lods
xchg
dec
jmp
and
ret
aam
rclb
jle
loope
es
arpl
in
cli
pop
xor
testb
jecxz
scas
repz
or
adc
les
rcll
in
push
shll
ret
inc
adc
xor
xchg
and
mov
gs
mov
push
and
mov
xor
dec
pop
jae
out
outsb
inc
adc
fidivl
fisubrs
cmpsl
mov
test
cmp
fistpl
popf
cmp
mov
cld
rclb
dec
mov
ja
sub
push
dec
add
popa
push
or
inc
push
ss
stos
push
loop
sub
rorb
mov
mov
frstor
cmpsb
sub
pop
iret
mov
popa
mov
lcall
xchg
cwtl
insl
andps
test
mov
out
repz
sub
add
test
neg
stos
in
jecxz
push
sub
imul
addr16
pusha
lods
jae
stos
dec
leave
pop
fyl2xp1
out
or
insb
adc
out
test
lock
mov
ret
dec
in
lock
in
xchg
mov
int
cld
and
add
shrl
jae
pop
sub
cmpsb
shrb
cmp
mov
fs
movsl
sub
add
fst
push
sbb
mov
sub
mov
xchg
add
ret
jp
outsl
test
lahf
sub
xchg
or
push
pop
fistl
cli
inc
sub
insb
pop
outsb
add
int
xchg
xor
xchg
std
or
xor
cmp
add
mov
sub
xor
movsl
push
push
or
add
dec
shl
ds
pop
ljmp
adc
dec
outsl
inc
aaa
jo
cld
mov
sbb
inc
xchg
or
xlat
and
push
cmc
or
outsb
mov
jecxz
mov
dec
popa
arpl
aad
and
mov
shr
repnz
mov
sahf
inc
nop
mov
cld
icebp
movzwl
xor
push
mov
xchg
mov
jnp
cltd
xchg
add
push
out
data16
xor
je
inc
pop
inc
jecxz
push
outsb
adcb
sbb
and
push
mov
pop
in
jne
cmp
std
xchg
and
fucomip
mov
xchg
clc
lods
in
push
cld
les
or
pop
pushf
gs
xchg
cld
pop
jl
cli
int3
fidivrl
jmp
sahf
sti
int
enter
add
or
lods
mov
mov
bound
movsl
mov
fbstp
dec
ret
xchg
cmp
inc
test
addb
movb
nop
sub
adc
sub
xchg
stc
xor
inc
and
lahf
lods
fmuls
xor
shl
dec
into
pop
jmp
pushf
fdivl
inc
jecxz
or
stos
jmp
cmp
push
sahf
mov
pop
sbb
frstor
insl
adc
pusha
and
cmp
sti
out
sub
push
repnz
jle
faddl
mov
dec
lods
mov
decb
fsts
repz
pop
pop
je
sahf
cmp
ret
mov
and
popf
mov
cmpsb
push
or
aaa
test
inc
mov
out
ds
stos
mov
pop
and
mov
insb
or
xchg
add
adc
dec
mov
or
inc
loope
cmp
lea
icebp
adc
mov
dec
pop
pop
push
push
push
inc
icebp
mov
mov
lret
inc
fcomip
and
xor
xchg
adc
stos
cmpsb
insl
jo
or
scas
dec
and
add
jb
jae
stc
jb
inc
jmp
add
mov
xorl
std
outsb
pop
dec
jge
xchg
stos
mov
paddb
mov
mov
into
xchg
sub
shll
and
push
add
in
sub
iret
xchg
mov
rolb
mov
inc
test
scas
out
popf
push
mov
inc
and
sub
cmp
cmp
mov
mov
enter
pop
lcall
fwait
push
pop
or
lret
dec
out
aaa
js
sbb
xchg
or
pop
cmp
and
sti
inc
sub
mov
imull
xchg
jo
repz
pusha
jno
int
insl
insl
lret
cmp
jg
popa
fbld
outsb
outsb
dec
mov
pop
mov
cli
daa
rcrl
sbb
xorl
iret
mov
mov
les
sbb
push
adc
and
lds
adc
jnp
outsl
adc
xorl
cld
in
mov
and
insl
mov
ds
cmp
sub
pop
fs
aam
xchg
jle
mov
xchg
add
jmp
aaa
outsb
fimuls
push
shll
sub
lods
test
es
mov
test
or
mov
jbe
pushf
mov
sbb
mov
sub
and
imul
push
cmp
arpl
mov
sbb
inc
fcoms
cmp
mov
sub
mov
sti
das
push
or
add
test
stc
in
pop
fcoms
cwtl
mov
mov
sub
mov
mov
mov
into
shrb
cwtl
dec
hlt
push
adcb
pop
clc
sbb
add
outsb
inc
clc
jb
cmp
out
xlat
testl
push
addr16
sbb
into
lods
or
adc
pop
and
lret
xchg
mov
js
add
push
outsb
aas
dec
jp
out
in
fldenv
add
push
or
movsl
lods
ret
dec
arpl
call
inc
out
sbb
loope
dec
sbb
xchg
lods
imul
sub
adcl
inc
insl
pusha
xor
sbb
imul
xchg
repz
push
std
xor
popf
inc
iret
push
ljmpw
add
xchg
in
mov
out
mov
je
cmp
sub
les
cmp
aaa
adc
inc
push
mov
pop
out
js
xor
pop
mov
mov
daa
pop
bound
xor
adc
dec
xchg
shll
ret
roll
pushl
sti
test
and
xor
xchg
cmp
mov
sti
pop
std
out
fcomps
ret
clc
in
mov
cs
mov
and
subl
push
pop
shll
or
lods
adc
xlat
shrb
mov
mov
adc
or
jns
fdivr
int3
shll
jle
push
repnz
js
int3
hlt
stos
pusha
popf
sbb
mov
mov
test
add
es
or
jb
lahf
adc
out
lahf
into
dec
fists
adc
repz
push
push
testl
ffreep
fbstp
jno
inc
pop
xor
pushl
in
inc
xchg
push
int
negl
fbld
scas
mov
pop
movl
mull
in
xor
pop
or
pop
adc
adc
es
push
imul
mov
ja
je
push
lock
jo
xchg
xor
jnp
or
imul
mov
xor
ret
jno
jmp
xor
lods
clc
mov
insb
push
sbb
call
aam
dec
out
lcall
sbb
sbb
mov
sbb
aas
js
or
pop
rorb
jns
inc
and
sub
sbb
adc
cmpsl
scas
rcl
insl
mov
sbb
clc
out
rol
add
insl
cmpsb
dec
stc
vmovaps
sarl
adc
cmp
pop
je
sub
inc
imul
outsl
dec
inc
pop
cli
mov
insb
jns
or
out
jne
dec
bnd
lock
mov
jne
adc
icebp
shll
pushf
dec
mov
insb
iret
dec
cmp
push
fildl
ret
je
ret
shrl
push
out
es
or
push
std
rorb
pop
dec
mov
and
xchg
dec
jnp
shll
arpl
xchg
sub
pop
jae
cmp
cmp
pusha
cmc
mov
ja
add
mov
inc
adc
and
mov
ret
cs
mov
push
xchg
negb
dec
xor
mov
je
add
rorl
cmp
xchg
lahf
jns
mov
or
inc
mul
xor
cld
cmp
cmp
dec
dec
daa
fistpll
leave
mov
rorl
inc
sbbb
in
add
in
xchg
ret
adcl
push
std
mov
xchg
pop
cmp
push
xchg
fisubs
mov
add
xchg
add
and
rclb
and
stos
nop
sub
int
cmp
test
mov
cld
or
insl
outsl
fisttps
lea
fistpll
push
push
hlt
xchg
subb
lods
or
xor
mov
imul
test
sahf
sbb
mov
loopne
inc
out
andl
es
push
xchg
sbb
les
cmp
dec
test
cmp
dec
pop
repnz
xchg
xchg
dec
ds
cmpsb
js
xor
sub
incl
mov
clc
and
mov
or
ljmp
loope
rolb
mov
sbb
insl
mov
jo
fldcw
jg
mov
loopne
popa
and
fisubrl
jo
ds
mov
mov
inc
shrb
pop
out
es
sub
cmpsl
stos
push
dec
enter
lods
or
js
icebp
pop
xchg
push
cmp
adc
dec
in
loop
ja
or
adc
arpl
test
int
push
mov
cmp
sbbb
mov
int
jne
push
in
add
fs
and
adc
out
add
out
movsl
jmp
out
pop
dec
jno
cmpb
jne
inc
rolb
push
pop
xlat
mov
in
cmc
inc
sbb
fs
hlt
popa
cmp
and
inc
ss
fcoms
mov
cwtl
pop
arpl
mov
mov
aaa
push
lret
test
lret
dec
sbb
and
jle
or
repz
xor
ret
cmp
jb
adc
pop
les
push
clc
cmp
test
cltd
xchg
dec
ret
cmp
in
xlat
mov
hlt
add
pushf
sahf
and
mov
push
jno
es
in
imul
mov
pop
jo
jmp
popa
enter
and
jecxz
and
and
xor
movsl
lods
orl
je
and
push
cmpb
daa
cmp
out
xchg
shll
loop
mulb
shl
popa
xchg
ja
call
mov
xchg
je
mov
divl
sahf
lock
inc
push
adc
dec
jo
clc
dec
pop
fstp
fsts
mov
popf
hlt
jns
push
push
lahf
add
cs
add
xchg
or
sti
mov
stos
push
mov
loopne
mov
rcll
adc
push
xlat
lcall
cmp
mov
scas
popa
cli
imul
sub
xchg
test
inc
pop
fdivr
mov
cmpsb
sti
stos
sub
les
pop
push
xchg
in
lret
imul
pop
arpl
sub
xor
insb
and
adc
push
sbb
aam
xor
hlt
push
sbb
fbstp
pop
iret
subb
addr16
or
scas
pop
add
jle
jo
add
xor
insl
ret
dec
ret
cltd
fwait
and
mov
push
dec
jnp
notb
cmpsl
pop
bound
xchg
nop
xchg
je
scas
or
xor
fbld
pop
xchg
test
mov
jecxz
xchg
hlt
inc
push
add
dec
loope
ja
cli
cmp
and
mov
loopne
mov
add
outsw
mov
mov
aaa
addb
jae
mov
cli
movsl
pop
ret
xchg
add
adc
pop
sbb
fisubl
dec
jb
xor
cltd
jg
fsubrs
push
sub
push
mov
loopne
in
mov
sbb
popa
xchg
sub
sbb
scas
les
push
and
adc
dec
jne
sbb
jb
insl
lret
movsl
or
or
mov
adc
rcl
dec
lcall
daa
adc
xor
jb
ror
jl
mov
add
cmp
mov
and
inc
xor
out
mov
pop
mov
iret
in
insl
stc
xchg
cmp
lods
insl
dec
imul
push
sbbl
sti
mov
call
inc
or
xchg
xchg
clc
mov
cmpsl
lret
aam
mov
adc
add
loope
rorl
mov
jno
jbe
test
jge
jmp
or
loopne
push
sbb
jnp
shrl
pusha
inc
insl
jne
sub
add
xlat
loop
lahf
mov
lret
lods
stos
sbb
mov
or
test
dec
test
dec
pop
jnp
loope
or
pop
xchg
ljmp
add
je
xchg
or
ss
pop
cltd
mov
xchg
shl
mov
int3
mov
and
out
xchg
sub
add
arpl
test
fdivs
dec
and
jp
xlat
mov
hlt
push
jmp
into
lcall
into
jl
xor
pusha
rclb
dec
lret
push
sahf
stc
and
add
pop
mov
and
divl
inc
hlt
ljmp
cmpsb
cmp
inc
ficoml
adcl
loopne
clc
mov
addr16
or
jno
in
jg
aam
mov
fs
int3
es
cmp
fcmovb
dec
stos
jb
mov
popa
add
mov
out
and
cmp
sbb
flds
cmp
pop
arpl
test
adc
pop
push
dec
dec
pop
out
imul
pushf
add
cmpsl
mov
adc
call
inc
adc
fsts
pop
cmp
dec
inc
mov
test
clc
lock
sub
push
test
push
mov
xchg
adc
xchg
push
test
xchg
dec
push
test
cmp
sahf
add
aas
xor
adc
sub
jmp
push
loopne
cltd
adc
mov
nop
mov
inc
xchg
ret
sarb
adc
mov
sub
test
sbb
ljmp
jnp
push
into
xor
cmp
mov
xchg
push
or
das
mov
push
es
fcoml
shrb
jp
ja
push
sbb
push
push
aaa
pop
sbb
js
in
test
mov
stc
mov
fnstenv
xchg
add
lds
lret
cmpsb
and
adc
mov
dec
pop
inc
bound
cli
loopne
fiaddl
push
dec
out
addl
in
bound
ss
imul
adc
hlt
dec
push
test
push
lods
shlb
xchg
mov
and
movsb
jno
dec
sub
mov
enter
andb
stc
adc
mov
mov
dec
pop
and
jecxz
enter
roll
orl
pushf
lea
outsl
fs
cmp
sbb
push
jmp
rcrl
add
test
pop
sub
cmp
fwait
addb
mov
std
cltd
cmp
loope
addr16
stos
push
pop
test
fwait
pop
xchg
sub
push
fisubrs
add
out
cmpsl
and
enter
mov
mov
mov
dec
out
jno
sub
and
aam
mov
divb
mov
movsl
mov
fisubrl
mov
insl
fadds
lods
aas
leave
in
movsb
mov
xor
and
lret
and
xchg
stos
enter
add
testl
mov
mov
add
cwtl
cmp
pop
cmpsl
outsb
or
jno
in
fs
sub
mov
mov
lahf
hlt
mov
xorl
lds
mov
insb
popf
inc
and
add
sub
aam
lock
insb
dec
sbbl
in
in
aas
jne
jnp
jge
fwait
xchg
jnp
fcoml
loope
imul
inc
fsubs
dec
adc
push
leave
or
jo
shl
pusha
adc
mov
ret
ss
stc
fcoms
neg
ror
shrb
fcmovnu
xchg
xchg
push
jp
jo
and
rolb
lea
out
jle
int
adc
push
imul
dec
mov
movaps
sbb
jecxz
xchg
cmp
push
xor
or
lods
dec
clc
sub
rclb
jge
pop
pop
jno
pop
call
fcompl
xchg
lret
test
shll
pop
adc
cmpsb
notl
mov
daa
daa
mov
rcll
adc
sbb
call
in
std
stos
jmp
push
imull
jne
sub
and
arpl
mov
adc
cmp
clc
dec
gs
mov
and
xchg
fs
sub
dec
add
fimull
sbbb
sbb
lock
addr16
fwait
addr16
inc
lds
jnp
and
ret
stos
ja
jne
insl
or
cmp
dec
mov
cwtl
repz
lds
jecxz
pop
and
roll
lret
cld
test
notb
pusha
xlat
rcrb
jle
push
jmp
push
xchg
out
out
cmpsb
lock
lea
jl
xor
xchg
push
pop
sbb
lret
jecxz
jne
faddl
rcl
loopne
cwtl
cmc
mov
sbb
xchg
jmp
lahf
orb
stc
clc
ds
xor
aad
dec
sub
adc
mov
push
shl
test
ret
mov
adc
cld
lcall
les
lret
lds
jnp
inc
sarb
in
push
jmp
outsl
inc
in
sub
inc
shl
cmp
rclb
lcall
mov
push
shrb
jbe
loope
sti
std
fsub
mov
test
test
xchg
adc
shrb
xchg
xor
subb
dec
ljmp
mov
popf
dec
imul
mov
and
add
push
repz
add
addl
sarb
fwait
mov
repnz
mov
out
les
adc
mov
cmp
and
popf
adc
mov
mov
mov
cmp
test
aam
or
add
and
lcall
faddl
inc
sarl
insb
or
rcpps
and
addr16
mov
jne
out
or
inc
pop
adc
mov
ja
adc
shll
fwait
arpl
movsb
xchg
adc
or
shrl
adc
loopne
lea
mov
jle
inc
bound
insb
lahf
nop
xchg
out
sub
movsb
lea
xor
cmpsb
sub
aam
movsl
xchg
loop
and
jns
push
les
adc
xor
fsts
jae
dec
out
xchg
lcall
int
mov
sub
adc
xchg
leave
stos
lahf
lret
fldenv
rolb
add
add
jg
dec
push
fldcw
push
lcall
cmpsb
fcmovbe
mov
and
roll
sbbb
jno
ret
test
jmp
mov
jle
arpl
add
sbb
clc
pop
clc
dec
jge
into
inc
sbb
int
scas
in
jle
jl
sbb
lahf
cmp
mov
sub
shrl
inc
mov
daa
pushf
test
in
fcom
jmp
clc
xchg
or
add
aaa
mov
and
fisubl
clc
jns
cld
mov
mov
in
mov
icebp
std
adc
mov
out
addr16
inc
data16
popf
xor
cmp
lret
data16
mov
fldt
mov
push
inc
and
or
mov
jecxz
sub
in
sub
ss
xor
jecxz
ja
gs
mov
jo
or
mov
pop
adc
inc
adc
pop
mov
mov
dec
mov
out
ret
mov
push
mov
sub
jl
movsb
add
push
pop
repz
sti
test
add
jne
xchg
mov
dec
repz
xchg
mov
mov
loope
mov
orl
ljmp
cs
sbb
aad
push
ds
ds
and
mov
out
test
add
in
notl
push
xor
leave
addr16
sbb
cltd
cmp
orl
adc
cmpsb
mov
pop
pop
or
mov
and
mov
ret
notl
outsb
cmpsl
daa
push
mov
mov
pusha
fldcw
and
insb
or
pop
jns
stos
subl
cs
fs
js
in
sahf
pop
xchg
imul
xor
xchg
aaa
aas
out
pop
lahf
ficomps
or
mov
leave
addb
push
out
push
mov
add
pop
jl
or
clc
outsb
fsub
dec
pop
pop
mov
fsub
mov
lcall
or
hlt
jne
popf
sub
jo
cwtl
or
imul
loopne
adc
dec
nop
addr16
push
xchg
sbb
repnz
enter
ret
mov
pop
popf
jae
rorl
shrb
pop
and
jg
jp
push
inc
and
ret
imul
int3
push
sbb
cmp
xchg
or
mov
cmp
mov
xchg
into
fucom
add
and
and
cmp
pop
inc
sarb
lcall
jne
loopne
fiaddl
jnp
fcomip
push
push
push
jbe
sub
jmp
pusha
nop
mov
scas
inc
imul
mov
jecxz
mov
cmpsb
lcall
cmp
jns
iret
and
and
les
loopne
mov
xchg
test
stos
outsb
in
cltd
test
mov
icebp
fidivrs
fsubrl
jg
icebp
leave
sub
mov
in
xchg
mov
jnp
sbbl
sbb
add
jecxz
xchg
test
sbb
mov
pop
mov
fdivp
mov
lods
dec
pop
pop
jmp
push
xor
insl
mov
cmp
push
cmp
adcl
adcl
mov
add
mov
lock
out
push
mov
jnp
popa
push
fsts
js
mov
fwait
call
add
inc
es
xchg
inc
cld
outsb
dec
fnstenv
sbbb
xor
loop
push
jmp
pop
mov
cmp
arpl
xchg
into
lcall
or
cltd
or
int
dec
lret
pop
std
inc
enter
fdivr
adc
sub
out
psllq
jae
push
xlat
out
jl
xor
push
shrb
sub
mov
lods
push
pavgw
cs
in
scas
jl
and
test
cmp
dec
push
in
outsl
adcb
adc
xor
dec
loop
faddl
adc
pop
mov
sub
into
scas
jp
sarb
fwait
dec
int
sbb
cmp
add
xchg
hlt
sub
and
add
mov
xor
jbe
dec
mov
lea
lahf
inc
inc
pop
repz
sub
jecxz
push
loope
pop
lahf
sub
iret
mov
cld
mov
pop
sub
xor
and
loope
dec
inc
sarb
es
and
test
test
stos
mov
jp
add
jg
push
xor
push
clc
rorb
jmp
dec
sbb
ja
inc
sahf
inc
mov
loope
mov
sbb
fistps
test
in
loope
sar
jne
outsl
push
add
lcall
dec
in
lret
push
jno
lcall
stos
pop
repnz
out
mov
cmp
adc
mov
aam
int
fs
add
rorb
fistpl
sbb
dec
pushf
outsb
fsubr
jg
or
mov
mov
mov
cmp
push
cmc
gs
xchg
cmp
stc
xchg
in
out
pusha
pop
xor
arpl
and
and
pop
pop
jp
add
mov
xchg
out
cld
incl
jg
push
xchg
inc
pop
dec
push
aas
stc
push
push
jo
add
loop
sbb
add
pop
nop
pop
lock
push
mov
fwait
or
cwtl
push
scas
xor
mov
hlt
icebp
int3
aas
call
bound
xor
dec
icebp
fsubrl
ficompl
mov
or
imul
fiaddl
imul
cmpsl
inc
cld
movsl
cmp
fwait
je
xchg
sbb
fcoml
xor
adc
lahf
pop
mov
outsb
aaa
adc
or
add
inc
fildl
js
jg
shlb
cli
mov
sbb
in
shr
testl
add
outsb
pop
outsb
aas
stc
in
sbbb
inc
jle
jns
dec
mov
les
mov
nop
stos
lods
mov
cmp
sbb
daa
adc
ja
xor
add
and
ret
orl
pop
mov
jmp
aaa
xchg
jmp
push
rcrl
das
jg
adc
xchg
or
mov
cmp
push
sub
inc
jmp
cmpsb
mov
leave
jecxz
inc
pop
stc
mov
fisubrl
dec
jne
jle
rclb
inc
cmp
jl
mov
and
cmc
mov
inc
push
out
sbb
push
aam
jg
inc
daa
push
pop
xor
aas
lahf
inc
popa
ja
mov
mov
add
int3
movsl
sub
testl
mov
mov
push
pop
add
jns
xchg
xchg
xlat
add
lods
ljmp
dec
pop
or
adc
mov
in
sbb
stos
insl
sti
pop
xchg
pop
mov
arpl
in
faddl
mov
ss
sub
mov
filds
movsl
faddl
push
pop
and
xchg
lcall
mov
mov
mov
cmpsb
xor
cmp
fisubrl
push
mov
xchg
lods
outsl
xor
bnd
rcr
push
js
lahf
or
shll
add
sub
pushf
adc
out
mov
cmp
in
inc
jle
ja
jnp
cmp
out
push
hlt
mov
fs
sub
rcll
xchg
inc
jge
test
test
push
or
add
es
xlat
jmp
rclb
add
sbb
cli
outsl
pop
mov
shll
push
inc
add
add
ss
xchg
add
inc
cmp
dec
inc
adc
daa
pop
push
cmpsb
test
popa
inc
xchg
cs
jnp
repnz
loopne
inc
hlt
sub
data16
pop
in
shll
fisubs
xor
jmp
js
int
pop
sbb
xchg
sub
loope
les
stos
and
mov
xchg
mov
mov
out
pusha
nop
sub
loope
jb
push
clc
loope
call
hlt
movsb
fwait
icebp
je
pop
paddusw
clc
mov
cltd
aad
jmp
fcmovbe
scas
jge
enter
pop
cmpsl
xor
xchg
in
stc
cmc
xchg
sbbl
fisubrs
dec
pop
es
lock
fldenv
ret
popf
out
fstp
xchg
add
testb
sub
hlt
mov
cltd
jg
adc
dec
mov
push
aam
inc
test
xchg
sbb
les
xchg
inc
mov
icebp
mov
cmp
or
jle
cs
cli
and
imul
cmpsb
je
lahf
mov
inc
mov
pop
shrl
push
mov
dec
out
lods
bound
cld
addr16
sti
sti
inc
mov
mov
inc
mov
rol
lret
mov
incl
mov
loope
popf
xlat
aad
xor
mov
leave
hlt
popa
insb
xchg
pop
fldl
pop
gs
pop
pop
mov
xlat
lret
dec
out
xchg
inc
adc
and
leave
xchg
in
mov
sub
dec
push
mov
pop
movsl
in
mov
push
fldt
push
push
out
movsl
je
cmp
out
lret
jnp
and
ret
sahf
pop
cmp
jl
pop
ficoml
loop
mov
inc
add
xchg
dec
push
push
daa
pop
mov
xlat
adc
cmpb
je
mov
test
mov
jmp
bound
pushf
mov
inc
inc
and
or
pop
mov
adc
and
adc
hlt
mov
aas
push
dec
inc
out
lahf
jge
sub
dec
cmpsl
fsubrl
pop
or
ds
inc
adc
fildl
cli
xchg
mov
in
cmp
subl
pop
stos
sbb
push
dec
jmp
insb
setb
mov
jl
dec
pop
aas
fs
dec
dec
pop
lea
rol
inc
pushf
loopne
flds
sub
lds
jecxz
clc
jmp
mul
push
mov
adc
mov
sub
mov
insl
mov
lds
into
pop
push
push
imul
in
pop
add
jne
jnp
cmp
scas
cwtl
add
loopne
jne
std
mov
mov
rclb
repnz
xchg
mov
jb
mov
push
jl
mov
scas
sub
popa
fwait
repnz
adc
rol
adc
push
xchg
sub
in
and
add
popf
into
add
adc
jnp
and
adc
xlat
jns
adc
data16
loope
or
or
movb
cmpsl
dec
or
pop
enter
and
addb
push
out
xor
cmp
movsb
shlb
cmpsb
stos
loope
and
jmp
push
mov
cmp
xchg
icebp
mov
xor
out
bound
insb
push
xor
or
cmp
sbb
xchg
dec
xorl
test
jbe
push
iret
mov
cmp
push
movsb
lock
fildl
sbb
clc
push
lods
push
and
inc
into
adc
aad
cmp
mov
icebp
pusha
insl
pop
cmpsb
adc
sti
jnp
sub
lea
and
inc
movsl
les
push
repz
ret
repz
mov
adc
mov
movsb
inc
shrl
repnz
cmpsb
pop
mov
sahf
data16
sbb
or
mov
push
in
xchg
repnz
or
xchg
movsb
cltd
mov
mov
cmp
je
add
insl
clc
mov
inc
xchg
inc
out
or
fnstsw
xchg
testl
ja
dec
orl
push
mov
arpl
jno
pop
jno
arpl
jle
lcall
data16
scas
aaa
mov
xchg
ja
ds
fsubl
jl
mov
iret
push
jno
int3
shlb
ret
pop
pop
mov
out
cmp
pop
push
sti
or
cs
xor
in
push
fcomps
and
cwtl
std
mov
adc
pop
sbb
fwait
sbb
or
jle
jl
jle
in
jecxz
or
push
lahf
jb
gs
divl
ret
mov
adc
lcall
cmp
jo
and
and
sub
popa
movsb
push
inc
test
adc
cmp
add
pop
in
jb
jne
inc
rcrl
fwait
push
adc
sahf
add
out
clc
mov
mov
mov
xchg
lods
addb
fwait
cmc
fisttpll
add
xchg
rcll
sub
xchg
cld
dec
setl
int3
jl
in
adc
shl
lds
push
and
adc
imul
and
notb
pop
mov
push
aaa
sub
shll
sbb
call
jp
nop
cmp
mov
outsb
outsl
test
test
xor
xor
jae
cmp
xchg
adc
adc
sbb
cwtl
xchg
ret
jns
lds
push
mov
data16
call
jae
mov
das
xchg
nop
shll
mov
sub
push
pusha
arpl
fildl
ret
fsts
pop
mov
cs
dec
push
push
mov
add
sbb
mov
outsb
jp
sbb
out
mov
ret
pushf
lret
or
pushf
fimuls
cs
leave
arpl
adc
mov
adc
sub
pop
jle
sub
jnp
pop
pop
cmpsb
sbb
lea
incb
imul
lret
dec
inc
stc
xchg
push
xchg
fdiv
inc
mov
stos
adc
adcb
push
fildl
adc
fnstcw
add
iret
push
ja
push
inc
lods
mov
cmp
xor
mov
movsl
testb
clc
adc
rclb
popf
addr16
repnz
cmpsl
add
add
mov
or
xlat
mov
mov
je
sbb
lahf
mov
jnp
es
js
xor
push
cmp
push
cmp
repz
add
int
bnd
bound
add
fistpll
jne
test
lods
jmp
stos
pushf
lcall
shrl
lahf
stc
lods
aaa
adc
lret
mov
mul
sub
inc
in
push
hlt
fsubrs
or
or
fs
fldz
jbe
lcall
lods
adc
fisubrl
sbb
push
fldcw
ret
scas
mov
rcrb
sbb
push
mov
test
pop
incl
data16
les
jb
mov
jge
adc
dec
out
rol
sub
movhps
sahf
movsb
pop
jg
fistpll
call
jge
orl
lret
and
push
test
mov
int3
xchg
pusha
inc
push
cmp
dec
pop
cltd
aam
lea
pop
popa
mov
out
sub
sti
jle
sub
pop
jg
aad
jg
sti
xchg
dec
lret
mov
movsl
fwait
xor
loope
scas
lods
fdivrs
and
cmp
lcall
cmpb
jnp
scas
cmp
mov
and
xchg
jg
and
sub
lods
mov
inc
add
push
push
ret
dec
lret
pop
mov
add
or
cmp
add
lea
mov
push
mov
lods
mov
test
cmpsl
rorb
jo
fs
push
out
shll
lahf
movsl
decl
cwtl
mov
roll
lahf
push
out
jp
fmull
mov
and
cltd
scas
cmc
or
pop
div
fs
add
mov
cmp
imul
and
adc
lcall
add
push
cmp
fisubrl
mov
es
push
cmp
push
sbb
jb
mov
insb
push
sub
rcll
mov
out
test
pop
jae
inc
loop
mov
testb
push
gs
aam
in
mov
leave
mov
mov
lret
in
rol
fmuls
negb
outsl
lods
xlat
jb
sub
sbb
dec
or
fidivrs
out
jns
in
xchg
fcmove
push
lea
xchg
adc
imul
test
lahf
jmp
es
ja
dec
mov
mov
jo
jl
push
sbb
inc
pop
jno
mov
mov
sub
mov
add
mov
movsb
jnp
fadd
mov
push
mov
mov
pushf
dec
subl
gs
or
clc
aaa
fdivr
les
cmpsb
xor
in
aam
jp
xchg
mov
lret
fcom
mov
mov
cli
cmp
mov
mov
add
test
mov
inc
adc
imul
iret
es
hlt
and
daa
xlat
cld
stos
shlb
ss
dec
add
jns
jb
fwait
cwtl
mov
in
cmp
push
cmp
xor
sbb
adc
mov
cvtdq2ps
ret
aaa
shrb
dec
push
dec
int3
out
das
mov
cmp
repz
lock
xchg
out
scas
xchg
adc
aam
dec
lods
and
pop
or
add
cld
js
aad
push
adc
test
xchg
sbb
mov
lcall
and
fiadds
out
dec
pusha
out
jb
lahf
xor
repnz
push
shrl
fcoml
dec
sti
sahf
bound
mulb
mov
dec
mov
fmul
mov
clc
sub
inc
add
and
add
andl
movsl
jae
adc
popa
adc
aaa
mov
aad
ds
cwtl
mov
lea
push
pushl
jb
dec
sub
cmpsl
stos
mov
gs
flds
cltd
lahf
dec
sbb
pusha
stc
aas
fsubr
add
imul
pop
stos
or
add
gs
call
dec
sahf
cmc
daa
imul
in
and
fcmovne
xchg
aas
repz
cmp
aam
mov
les
sbbb
mov
mov
mov
in
scas
lret
cmpsb
sub
mov
and
fisubrs
out
push
push
xchg
sahf
xchg
xor
or
int3
cmp
mov
mov
int
mov
mov
call
pop
add
inc
xor
pop
cmp
ret
rolb
jb
xchg
push
mov
and
adc
dec
adc
mov
xor
stc
adc
mov
popa
adc
js
jb
test
sarb
sbb
js
aad
sbb
sbb
arpl
sub
cmpsl
in
pop
dec
cmpsb
lahf
add
mov
and
stc
dec
movsb
repz
aam
stc
test
sub
or
mov
dec
cmpsb
xchg
std
add
jno
in
jmp
mov
mov
sub
xchg
xchg
mov
ds
mov
testb
jmp
stos
add
push
jmp
cmc
mov
pusha
mov
daa
jbe
inc
lret
shr
dec
xchg
xrelease
mov
rclb
cmp
dec
sti
inc
sbb
xchg
sub
push
mov
dec
imul
pop
sahf
lahf
loopne
xorl
nop
gs
mov
and
sub
xor
add
cwtl
pop
mov
push
sub
adc
push
or
mov
ljmp
and
shld
imulb
cs
rcrb
and
cmpl
jb
mov
ficompl
hlt
scas
dec
lods
fcomip
fmull
fld
adc
mov
sbb
rcr
shlb
dec
mov
mov
sbb
xlat
sub
adc
jbe
or
idivb
dec
stos
xor
xchg
add
icebp
es
jno
iret
mov
inc
outsb
push
cmp
filds
loopne
mov
mov
mov
pop
xchg
mov
scas
mov
dec
out
loop
and
sbb
nop
mov
or
loope
cmp
jne
cmc
ds
loope
xor
out
jg
outsb
fistpll
cld
mov
xchg
or
jge
sbb
out
xchg
adc
lods
sub
or
or
sbb
mov
stos
ret
call
mov
int
or
inc
mov
in
mov
aad
pushf
push
xchg
aas
inc
xchg
jb
mov
insb
xchg
mov
mov
push
cmp
mov
adc
mov
hlt
pusha
rcrl
mov
mov
adc
mov
dec
pop
push
out
push
loopne
cs
data16
inc
cmp
push
cltd
aaa
insb
aam
outsl
cmp
lea
push
ror
cltd
mov
adc
mov
outsb
out
ss
vmulsd
mov
outsl
push
cld
push
cmp
xchg
and
cmp
mov
push
xor
sbb
add
mov
push
cmc
js
xchg
lods
cli
push
push
outsb
push
cmp
inc
sub
inc
subl
mov
mov
sahf
arpl
fstpl
xchg
push
jmp
add
enter
outsl
bound
stc
mov
sti
mov
pop
xchg
sub
push
out
add
add
aam
rcrl
stc
xchg
jae
jnp
mov
mov
nop
mov
push
push
fistpl
mov
mov
jmp
fnstcw
lods
dec
sub
dec
push
in
adc
inc
add
ss
cmp
cmpsl
pop
mov
incl
lret
ficoms
out
shlb
jmp
lods
cmp
das
inc
rcll
arpl
push
cmp
std
mov
add
gs
cwtl
xchg
out
and
mov
outsb
mov
pushf
pop
mov
addr16
and
or
ret
lret
clc
pop
or
sbb
sbb
int3
arpl
dec
xchg
cld
bound
pushf
sbb
sbb
imul
mov
jnp
scas
fbstp
stos
cwtl
fdivrl
mov
mov
jbe
sbb
stos
jnp
dec
imul
js
push
pushl
jp
pusha
and
jg
int3
mov
mov
shlb
scas
jb
lahf
push
pop
cmp
xchg
lcall
outsb
sbb
mov
div
insl
aas
rcrb
hlt
pop
cld
aas
out
or
jno
pop
cmpsb
test
sbb
jbe
dec
sbb
dec
ficomps
lcall
ficoml
stc
xchg
inc
aaa
push
in
and
or
cmp
push
fistpl
sub
xchg
cs
cmp
in
push
sbb
and
push
movsl
fcmovbe
cwtl
outsb
imul
cmc
out
sahf
dec
inc
cld
mov
aas
and
push
xor
or
or
xchg
sbb
mov
movsl
mov
in
sahf
cmc
sbb
mov
inc
jmp
and
mov
ljmp
out
xchg
das
xchg
repz
dec
repnz
sbb
js
subb
or
aaa
icebp
test
mov
pop
dec
xchg
mov
jle
mov
jns
push
test
xchg
pop
pop
sar
test
mov
mov
insb
sarb
and
lock
add
sub
xchg
aam
mov
mov
xor
adc
cmp
fsub
cmp
dec
jl
testl
fisubrs
and
mov
fsubs
loop
aad
fwait
repz
insb
scas
popa
jb
shlb
and
jo
sub
in
fldt
ficompl
fidivs
sbb
jb
cmp
cld
fwait
sbb
mov
outsl
std
scas
mov
pop
lea
stc
sub
push
cmc
jg
fimuls
and
mulb
mov
pop
jno
and
jle
lcall
mov
jg
cmp
jp
cmp
adc
mov
xor
pop
stos
mov
out
cmp
outsb
mov
push
adc
out
add
int3
sub
cmpsl
inc
popa
inc
lods
ds
lea
push
mov
inc
push
mov
xchg
scas
lret
or
jl
jne
adc
sahf
adc
movsb
pop
sub
les
jb
loop
adc
test
out
lret
insl
movsl
jge
mov
test
icebp
sbb
add
sahf
pop
rol
inc
aas
ss
xorl
xchg
ljmp
and
push
cmp
aas
mov
mov
data16
sbb
and
and
add
pop
fs
int
incb
inc
mov
pop
in
rcrl
push
out
lock
movsl
push
xor
test
loop
nop
outsb
jne
mov
or
add
outsb
out
mov
mov
subb
dec
cmovge
sub
arpl
pop
add
lret
or
subb
adc
out
call
inc
or
xchg
stc
test
in
aaa
cmp
sub
dec
add
lock
lock
mov
movsb
fbstp
arpl
inc
ret
arpl
push
jns
inc
int
mov
repnz
add
insb
js
sub
inc
shrb
sbb
divl
xlat
push
cmpsb
jne
lahf
or
push
ds
jno
xchg
repnz
popf
push
jmp
dec
mov
mov
fdivr
shlb
inc
mov
jg
cltd
scas
popf
sub
mov
in
pop
xor
mov
xor
and
les
divl
outsb
mov
fs
mov
in
data16
movsl
cmpsl
mov
out
push
cmpsb
imul
out
dec
pop
stos
mov
xchg
adc
and
jo
daa
out
test
je
aas
insb
pop
jo
rcll
sbb
imull
xchg
and
cmp
dec
pop
sbb
or
fstps
out
and
rorl
jne
pusha
or
dec
std
xlat
negl
and
dec
push
clc
inc
pop
cmp
cmpsb
test
sub
xlat
cmp
arpl
sub
sbbl
cs
sbb
jle
or
test
jp
cs
dec
pushf
sbb
test
cmp
loope
lret
sahf
cmp
pop
cmp
test
jmp
dec
mov
push
inc
out
repz
aas
scas
insb
inc
cs
pop
add
ss
fcoms
xor
addr16
fsubl
jno
aas
or
sahf
jno
stos
inc
push
gs
sub
pusha
shr
movsl
sti
xchg
xchg
enter
jno
or
adc
adc
cmpsb
cs
fstps
xor
ret
push
dec
fistps
lcall
pop
mov
sarb
incl
xorl
clc
daa
test
sub
stc
in
mov
mov
insl
orb
cltd
xor
pushf
xor
hlt
inc
adcl
mov
shlb
ja
push
int
jl
lcall
lcall
loop
pmullw
jmp
xchg
inc
fidivl
jmp
push
pop
sbb
sbb
pop
inc
xor
shll
cltd
pusha
and
out
ret
inc
addr16
mov
mov
pop
hlt
and
lret
push
stos
push
pop
push
lock
repz
mov
pop
dec
ljmp
jbe
dec
jnp
rcll
or
sub
sub
insl
in
pusha
lds
jns
pop
pushf
mov
lock
sbb
icebp
cmp
pushl
xchg
hlt
int
loope
mov
hlt
jns
mov
adc
jo
pusha
pop
pop
ljmp
xor
mov
das
or
inc
stos
bound
sub
outsl
ss
incl
fwait
pop
xchg
xchg
xor
jl
push
ss
lret
push
xchg
push
jb
sub
mov
dec
sub
gs
xor
cmp
shlb
sub
push
mov
jo
push
mov
xor
rorb
cld
add
das
subb
sbb
lods
fsts
das
out
ret
cmc
sbb
daa
jae
lock
or
pop
fdivr
test
in
sub
mov
fistpl
cmpsl
aad
xor
xor
dec
inc
xlat
enter
mov
jne
mov
int
jbe
outsl
mov
pop
mov
lcall
dec
pop
push
xchg
cmc
cmp
sub
fstpl
xchg
xchg
dec
jns
inc
sbb
addr16
jo
std
in
dec
pop
mov
or
outsl
mov
out
jbe
and
fwait
stos
adc
mov
loop
mov
or
mov
mov
cmp
in
xor
aas
pop
nop
out
sub
ja
mov
push
aaa
adc
mov
sbb
call
dec
mov
les
mov
pop
mov
loopne
sbb
rolb
jbe
mov
mov
daa
pop
sub
xorb
repz
data16
jecxz
adc
jb
movsb
icebp
out
iret
iret
push
jmp
out
imul
stc
cwtl
adc
cmp
jmp
lret
rcll
mov
cs
in
add
xchg
xor
cmpsl
rcrb
add
sub
subl
aad
jle
insl
je
jp
fwait
push
xchg
call
addr16
dec
or
pop
jae
ret
jp
imul
daa
xlat
inc
xlat
cmc
xor
mov
push
mov
imul
add
enter
lds
cmp
and
fistpll
clc
out
inc
xlat
jle
std
pop
jp
movsl
imul
sbb
out
out
inc
sub
push
pop
push
or
outsl
into
adc
loopne
shrl
xor
mov
dec
sub
sub
dec
mov
fwait
or
sub
inc
pop
fdivs
jne
add
mov
adc
ret
lock
daa
push
loopne
jno
lods
mov
adc
inc
mov
addr16
xchg
jno
jl
adc
leave
xor
stos
fldcw
jmp
outsl
and
dec
mov
ret
jp
sub
mov
fcomps
call
test
xchg
mov
faddl
sbb
inc
enter
cwtl
repnz
inc
aam
loopne
fwait
dec
mov
insb
ret
mov
aam
cmp
int
lods
sub
jae
arpl
mov
decl
push
pop
pop
mov
stos
in
out
aad
push
inc
xchg
adc
or
test
mov
ljmp
dec
and
es
jge
iret
stos
movb
in
and
inc
push
jp
jb
icebp
cmpsb
pop
and
mov
psrlq
fmull
rol
dec
sbbl
mov
daa
lcall
or
mov
jae
out
sub
and
test
iret
cltd
dec
cld
push
dec
mov
xor
bound
rorb
hlt
sbb
inc
sbb
addr16
inc
loope
dec
mov
xchg
test
das
adc
sub
andb
mov
sbb
and
fsubrl
xor
jne
push
add
adc
dec
mov
push
cmp
lcall
or
or
jnp
adc
cld
jl
sbb
adc
je
std
or
jp
out
fcoml
mov
in
stos
aas
xchg
inc
insb
inc
inc
stc
push
popf
call
ret
inc
and
loop
fs
xor
or
xor
sarb
pop
aas
lds
jp
gs
lret
add
jge
cmpsb
dec
jnp
pushf
cmp
mov
sbb
cmp
rcrb
mov
or
pop
aad
clc
fidivs
sbb
mov
test
xchg
jp
fcoml
xchg
sbb
sbb
lahf
xchg
std
mov
mov
in
or
xor
ficomps
mov
sbb
jne
sub
hlt
pop
int
cwtl
push
adc
inc
push
and
sbb
xlat
jne
mov
push
sbb
stos
stos
or
cmpb
push
call
or
in
sahf
xor
stos
jge
mov
mov
scas
push
pop
lds
xchg
sub
push
in
add
ds
sbb
sub
into
cmp
pop
mov
aas
adc
nop
addr16
sbb
insl
cwtl
rcll
lret
repz
mov
fwait
dec
adc
push
jno
xchg
fnstcw
dec
aas
and
insb
into
lods
arpl
add
mov
lods
or
mov
inc
mov
cmp
push
ljmp
jmp
inc
test
push
pop
jge
pop
lds
mov
cmc
neg
xchg
std
daa
movsb
sarb
in
imul
fwait
jg
jl
bound
xor
out
pushf
mov
adc
dec
sub
sub
mov
sbb
jp
mov
fdiv
pop
imul
or
cmp
data16
sub
aaa
in
mov
das
push
cmp
in
xchg
test
mov
pop
mov
and
push
insb
sbb
and
and
push
scas
push
dec
dec
xor
ja
add
xor
mov
ret
test
std
stc
jl,pn
xor
xor
and
pop
adc
pushf
aaa
cmpsb
fstpl
lods
dec
mov
xor
andl
pop
mov
jo
fldt
cmp
imull
lret
loop
loopne
jno
sahf
pop
push
cmp
faddp
lret
stos
mov
aam
int3
and
les
in
or
ja
push
into
pushf
jge
popf
rcrl
mov
mov
negb
das
mov
sbb
mov
pop
cs
mov
push
mov
push
mov
test
arpl
mov
sbbl
mov
xchg
xor
shrb
scas
push
test
mov
rcr
add
arpl
lcall
test
aaa
mov
add
cmpsl
jb
mov
xor
imul
repz
pop
in
xchg
add
int
mov
outsl
adc
mov
mov
push
jg
mov
repz
mov
mov
and
test
dec
mov
cmp
adc
dec
loop
sbb
lock
imul
das
enter
mov
push
cmc
push
int3
in
shl
int3
fimull
loop
aaa
jno
sbb
test
daa
loopne
arpl
jae
fcoml
cmpsb
out
dec
push
dec
sbbb
cwtl
xor
xor
cmp
popa
lods
add
inc
pop
lods
mov
mov
cmp
rol
xlat
cs
lea
pushf
loope
push
test
imul
fidivrl
add
sub
cmpsl
mov
lock
fisubrs
mov
or
mov
jl
inc
test
sbb
sub
aas
test
pop
insl
scas
jbe
faddl
sbbl
cwtl
fdivrl
stc
xchg
outsb
test
xchg
jne
xchg
inc
mov
mov
sahf
pop
inc
cld
cmpsb
movsl
push
xchg
push
test
rorl
dec
ffree
lret
sbb
cmp
push
lea
jo
cmc
clc
pop
into
inc
add
fmull
jp
cmp
sbb
in
in
insb
bnd
xchg
or
or
scas
in
push
sbb
rcrb
daa
jae
ret
inc
inc
push
xchg
jge
hlt
inc
mov
test
push
xchg
sbb
push
out
gs
or
mov
mov
mov
mov
pop
stc
into
lock
jne
push
rol
xchg
pop
nop
test
dec
mov
pop
sahf
mov
gs
push
mov
or
cmpb
mov
stc
push
inc
mov
es
lds
mov
cltd
cltd
loop
xlat
cmc
ret
lcall
sbb
aam
adc
hlt
sbb
test
popf
xchg
lock
jmp
jae
and
and
xor
repz
imul
test
in
test
jne
rcrb
test
ret
mov
shlb
xchg
cltd
aad
add
mov
xchg
add
jae
pop
insl
imul
sub
sti
dec
cmp
stos
daa
lea
fidivrs
repz
and
jns
jbe
mov
mov
or
sub
arpl
cmp
and
movsl
or
shrb
int
loope
ret
loope
loopne
inc
stc
cmp
stc
cmp
sbb
xchg
cmp
push
aaa
test
push
mov
test
xchg
and
xlat
cmp
aad
test
jle
add
dec
pop
adc
pushf
mov
mov
cmp
insb
mov
push
dec
jno
cmpsl
pop
lret
fistpl
xchg
in
dec
imul
and
push
adc
mov
icebp
sub
xchg
loop
push
jns
ljmp
sub
mov
xchg
ljmp
sub
and
ficoml
adc
sub
das
insl
testl
mov
xor
rorb
sahf
lret
mov
xor
cmp
add
push
dec
fsubrs
cmp
xor
cmp
and
outsl
mov
in
jno
mov
nop
test
sbb
jbe
outsl
repnz
xlat
addr16
or
xchg
movsl
das
repz
fadds
inc
inc
and
and
push
aad
push
mov
sahf
mov
cltd
push
mov
jno
cmp
pop
out
pop
int3
sbb
mov
cltd
dec
mov
hlt
adc
mov
aam
lds
js
mov
mov
out
mov
pop
test
lret
pop
dec
dec
add
mov
mov
mov
repnz
ds
sub
scas
push
dec
inc
std
cmpl
fmuls
lcall
outsl
fcmovbe
iret
xor
popf
adc
rorl
out
sbb
outsl
xchg
mov
lds
add
jbe
adcb
cmp
clc
cmc
test
sub
add
push
insl
lcall
out
ret
dec
fists
push
mov
fsubrl
xchg
arpl
or
sub
adc
xor
stc
jno
jnp,pt
or
mov
les
addl
stos
adc
push
xor
test
stc
sub
mov
in
loopne
pop
idiv
xor
mov
ja
mov
shr
js
fmuls
dec
push
mov
dec
mov
enter
aad
or
mov
jge
nop
mov
scas
or
sbb
sub
add
push
cmp
cli
loop
in
in
negb
cmp
mov
and
cli
in
lods
jnp
lahf
bound
sti
fdiv
adc
shl
stc
add
aad
pop
xchg
mov
leave
mov
stc
out
dec
push
jne
mov
push
sbb
dec
cmc
ret
mov
repnz
xchg
stos
aam
inc
int3
mov
cmpb
aas
jg
sarl
cmpsl
dec
mov
xor
negb
leave
clc
mov
sarb
xchg
inc
adc
inc
mov
sbb
popl
imul
jno
movsb
push
xchg
cmp
jns
fs
iret
fsubr
pop
pop
js
ret
ja
and
or
pop
std
sbb
data16
add
pop
pushf
inc
in
mov
mov
push
lret
mov
pushf
dec
pop
sahf
ja
ljmp
in
cmc
sbb
icebp
mov
out
inc
cs
jo
pop
pop
pop
mov
adc
int3
ljmp
dec
gs
adc
inc
push
lahf
inc
push
mov
inc
mov
xor
clc
xchg
daa
and
xchg
pop
pop
and
xor
sahf
pop
hlt
into
hlt
xor
mov
ja
xchg
mov
test
inc
sub
push
dec
or
xchg
movb
dec
xor
mov
test
mov
jo
jg
mov
dec
and
std
dec
cmpb
lahf
sbb
cmp
popf
pop
ja
sbb
dec
out
push
xchg
inc
xor
mov
adc
sbb
arpl
push
inc
lock
aas
lock
fsubrp
iret
dec
pop
test
xor
test
adc
lods
and
xchg
inc
sti
xor
and
inc
ret
inc
mov
pop
es
cmp
push
repnz
in
rclb
test
mov
mov
inc
jecxz
mov
mov
mov
xchg
jl
inc
push
cli
es
xchg
stos
fsub
inc
outsl
sub
lcall
ret
xchg
adc
cltd
mov
out
popa
les
xorb
movsb
repz
pop
adc
shll
cmp
imul
sahf
pop
push
mov
jp
repz
lods
inc
fmulp
cltd
jle
lock
xor
and
jb
inc
xchg
cmp
pop
shll
mov
pop
fnstenv
fistpl
sub
lock
jl
mov
loope
js
sub
std
fcomi
jl
fnsave
jge
shl
xor
rolb
pop
and
pop
test
mov
or
cltd
cmpsl
xchg
mov
sti
mov
jnp
popf
mov
leave
jmp
sbb
fsubl
sbb
dec
aaa
daa
movsb
in
inc
imul
sub
test
add
or
test
dec
pop
out
sub
jbe
dec
inc
cmp
xor
ljmp
shlb
pop
rol
sbb
repz
sbb
and
mov
aad
adc
lods
pop
jo
in
jne
push
dec
scas
loop
loope
cld
sub
push
aad
mov
movsl
scas
xor
cmp
insl
add
xlat
lods
incl
scas
imul
out
jo
and
xchg
leave
jecxz
mov
out
adc
stos
or
sbb
mov
and
loop
fidivrs
fwait
mov
divl
leave
add
xlat
mov
in
cli
sub
sti
cli
adc
xchg
test
mov
xchg
call
xchg
xchg
fcoml
push
addb
inc
sti
daa
jnp
mov
in
sbb
xchg
addl
cwtl
and
sub
stos
insl
lahf
mov
jmp
aad
cmpsl
add
jmp
rcr
aad
popa
loopne
lcall
and
mov
out
sbb
aas
mov
pop
out
add
and
loopne
movsb
test
adc
repnz
jne
xchg
xchg
push
loope
jge
pushl
cmpsl
movsl
add
ss
mov
scas
les
xchg
cs
inc
in
or
mov
mov
dec
jp
adc
pop
mov
ja
ds
sub
dec
fs
pushf
push
sub
in
jns
push
and
sbb
adc
xchg
imul
xor
lcall
dec
out
sub
pop
cwtl
sub
pusha
cltd
mov
pop
sahf
mov
jbe
xor
lcall
movb
pop
or
les
adc
int
test
fbld
mov
and
in
pop
aas
fsubrs
push
cwtl
or
pop
fnstcw
test
push
in
es
cmc
loope,pt
dec
cld
xor
lret
mov
xchg
xor
pop
adcb
cmp
mov
cmp
dec
mov
xchg
and
mov
sbb
pop
push
mov
lods
or
sbb
lahf
dec
je
push
mov
xor
mov
hlt
daa
xchg
pop
xchg
add
or
loopne
arpl
inc
out
mov
call
or
pop
push
mov
gs
push
sarb
stos
in
push
pop
mov
cmp
lds
mov
jmp
inc
inc
icebp
sub
cmp
mov
inc
movsb
pop
adc
cmp
jbe
inc
push
sbb
mov
insb
stc
outsb
mov
inc
aas
add
loop
ljmp
pop
xchg
cs
negl
mov
dec
ss
bound
cmp
movsl
mov
dec
pop
inc
lahf
int
xor
dec
cmc
xchg
icebp
fs
cmp
sbb
cmpsl
lea
mov
ljmp
jb
inc
push
ficoml
nop
cmpsb
sbb
int
dec
pop
imul
hlt
push
push
idiv
inc
lcall
push
popa
incb
out
or
and
aam
and
shr
push
mov
xchg
mov
fisttpl
clc
jl
stos
outsl
loope
dec
cmp
shlb
jmp
mov
cwtl
adc
mov
fstl
jp
clc
mov
mov
pop
pop
cld
cmpsb
sub
mov
pop
ljmp
fistpll
out
cmpsl
xchg
pop
adc
test
imulb
dec
adc
pop
mov
mov
test
and
xor
or
jg
jno
in
aam
jmp
jmp
test
mov
clc
or
icebp
movsl
xchg
mov
gs
mov
push
fstpt
jae
ret
xchg
call
scas
push
iret
cmpsl
mov
out
cmpsb
lret
inc
test
add
xor
push
test
movb
cmp
xchg
xlat
jmp
sbb
add
inc
jo
cmp
std
dec
fldt
inc
outsl
xor
call
cmpl
movb
push
pop
clc
mov
xor
aaa
fwait
dec
xchg
test
mov
mov
loope
mov
mov
jl
sbb
scas
sbbl
cmp
lcall
xor
pop
mov
lret
in
stos
and
out
inc
pop
call
and
cmpb
call
setge
scas
rorb
adc
scas
xchg
pop
jecxz
adc
in
fdivrl
imul
xor
or
fisubl
add
notb
mov
or
mov
sbb
es
add
cli
dec
jo
stos
cli
test
cmc
ds
inc
jg
std
std
in
fprem1
bt
mov
out
pop
in
in
lcallw
stos
out
insl
jp
xor
orl
cmpsb
mov
fsubrs
decl
and
insb
and
adc
shlb
or
iret
inc
hlt
test
adc
fsubs
jl
push
data16
pop
jno
mov
mov
loope
dec
cld
inc
movsl
mov
int3
mov
insl
mov
nop
loopne
lods
gs
inc
lods
fimuls
jecxz
aaa
add
lds
push
test
pop
je
lcall
rorb
repz
cmpsl
adc
lret
jmp
mov
or
js
sub
imul
in
out
shr
sahf
jl
jne
sbbb
sub
out
add
jbe
lcall
sbb
and
lret
mov
mov
adc
popa
int
test
ss
or
jae
jbe
xor
xchg
fcom
imul
xchg
imul
dec
call
imulb
jp
cmpsl
xlat
dec
jg
push
cmpsb
jb
xor
shrl
jo
clc
push
mov
mov
inc
push
inc
jb
push
sbb
add
jae
subl
out
pop
pop
xchg
xor
sub
inc
sbb
test
jmp
pop
mov
cwtl
inc
addr16
dec
pop
aam
lret
test
stc
and
xchg
leave
push
loope
add
fwait
aas
and
inc
out
push
addr16
sarl
inc
jge
pushf
cltd
repnz
pop
andl
xor
xchg
aam
inc
jae
mov
test
mov
mov
pushf
xor
mov
or
add
ja
or
leave
mov
xchg
popf
mov
xchg
les
dec
fistps
loop
pop
mov
sbb
negb
stos
cmc
cmp
fldenv
sub
cmp
jae
stos
fsubr
inc
mov
push
lods
jecxz
mov
mov
es
and
fildll
xchg
outsb
out
sbb
inc
dec
dec
data16
jnp
or
bnd
fmuls
push
push
sub
outsl
xchg
sbb
in
stos
movsl
inc
popl
pop
std
imul
pop
mov
mov
sub
in
or
lahf
mov
dec
cmp
stc
xor
jnp
sarl
pop
add
jns
xlat
out
mov
sub
dec
mov
loopne
cwtl
cmpsb
push
and
pop
out
jb
mov
inc
fnclex
push
sbb
adc
add
mov
sub
js
int3
in
shll
in
jno
ljmp
or
mov
out
lret
adc
cmp
lret
insl
out
dec
pop
cli
mov
xchg
clc
sahf
shlb
mov
inc
fldenv
inc
xchg
push
and
inc
dec
adc
ss
mov
push
in
mov
les
int
push
test
outsl
cmc
push
jl
pop
push
pop
dec
jmp
jmp
ret
pop
add
mov
cs
mov
int3
mov
jns
and
out
enter
test
dec
stos
ret
in
adc
push
mov
xchg
push
mov
outsl
dec
in
jge
cmpb
or
push
pushf
adc
dec
icebp
icebp
mov
push
jecxz
cmpsl
cltd
outsb
pop
arpl
lods
shl
dec
bound
mov
add
sbb
int
jbe
or
rcrb
stc
ljmp
mov
std
add
loopne
mov
add
mov
mov
add
mov
fmul
inc
icebp
adc
aas
cmp
outsb
cltd
inc
cwtl
pusha
and
mov
inc
sahf
lods
push
mov
out
fistps
test
outsl
loop
das
hlt
arpl
jnp
add
rcl
fistpl
jg
test
or
inc
add
leave
lea
mov
pop
mov
scas
push
push
pop
in
lds
aas
out
jmp
cmpsb
inc
lahf
pop
jno
js
movsl
push
jnp
mov
fcmovb
ljmp
add
jnp
xchg
out
lock
pop
xchg
sbb
dec
andb
add
cmp
mov
cmp
int3
mov
lahf
xor
test
mov
shrl
mov
hlt
out
sub
and
add
movsl
outsb
sbb
stc
xor
jno
dec
adc
dec
add
push
xchg
outsb
push
ljmp
subb
movsl
inc
adc
cmp
jmp
out
orl
add
mov
sbb
cli
cmpsb
lahf
push
std
push
js
into
add
sahf
cmp
test
inc
ret
pop
sub
sti
dec
jb
pushl
icebp
push
ljmp
cmp
add
loope
sub
lds
iret
push
inc
das
cmpl
sti
in
sub
mov
jl
fidivs
cmp
inc
les
pop
cli
inc
leave
jge
push
lret
inc
jns
pushf
jp
dec
int3
lret
int
int3
push
sbb
mov
in
jnp
or
jg
or
outsb
push
sbbb
cli
sbb
test
mov
imul
inc
lds
sbb
adc
add
sub
add
out
xchg
cmpl
push
xor
jmp
outsl
sbb
popa
sbb
iret
outsb
lock
das
test
or
fwait
pushf
repnz
jge
dec
mov
cmp
pop
cmc
add
sbb
movsl
mov
loopne
push
ss
xchg
fmuls
movsb
insb
xchg
inc
lods
mov
es
notb
push
ja
or
inc
stos
aaa
hlt
dec
repz
mov
fs
out
call
lock
les
jl
dec
loopne
inc
lods
popf
lret
sbb
adc
pop
cltd
test
xchg
xorl
inc
add
les
mov
lret
ds
ja
sub
mov
imul
push
test
inc
rorb
aas
adc
push
fsubs
jb
test
sub
mov
loopne
loopne
jge
dec
mov
pusha
mov
pop
in
jb
mov
es
mov
lock
dec
dec
inc
aaa
cmc
push
xchg
push
sarl
dec
xor
das
cs
pop
cmp
or
stc
popf
xor
adc
inc
cmp
sbb
cltd
in
sbb
mov
pop
cli
cwtl
sti
cmp
mov
es
jno
mov
pop
push
xchg
and
loop
sub
or
mov
cmpsl
cltd
or
xor
add
and
push
pushf
es
into
orb
movsl
adc
pop
rorb
test
pop
aam
pop
inc
jnp
scas
adc
in
ffreep
pop
in
cmp
clc
and
mov
and
test
adc
mov
arpl
mov
adc
ss
push
les
and
ficoms
pop
mov
pop
xchg
cltd
add
imul
or
jl
das
pop
jo
jg
jmp
mov
insl
cwtl
cwtl
push
shll
out
dec
dec
pop
mov
xchg
mov
jp
inc
add
mov
imul
and
nop
adc
loope
push
pop
in
scas
dec
cmp
mov
sub
lods
arpl
out
and
mov
sbb
out
mov
lahf
sbb
repz
rorb
jb
es
xchg
mov
push
or
pop
lock
je
fisttps
jl
jo
out
mov
daa
je
test
xor
sub
aad
pop
sub
pop
add
add
xchg
aam
aam
jle
outsb
sub
sub
or
daa
sub
mov
test
sti
xchg
dec
adc
loope
cmp
pop
jno
dec
xchg
and
movsb
or
imul
dec
int
xbegin
xchg
shrl
les
sub
imul
movsb
dec
xchg
mov
pop
push
jge
fsts
rol
or
shlb
add
in
push
std
scas
dec
jns
jne
add
xchg
loopne
sub
fadds
xchg
movsb
adc
aas
sbb
loope
pop
sub
mov
cmp
movsl
decl
xorb
popf
sti
dec
push
jmp
orl
mov
inc
adc
lcall
mov
xchg
xchg
dec
mov
and
sqrtps
cmp
fstpt
cltd
cli
mov
mov
in
fisubs
lcall
ret
enter
mov
ret
add
rol
or
sub
push
inc
shll
stc
sbb
xchg
stc
push
pop
fcoml
mov
scas
lcall
jns
or
out
imul
test
cmp
insb
and
sub
sbb
pop
pop
jg
mov
or
mov
iret
mov
mov
jno
xchg
cmp
or
out
pusha
jae
mull
int3
push
loopne
insb
cmpsl
test
out
jno
mov
iret
xchg
test
mov
xchg
fsubrs
out
cld
mov
rol
mov
mov
adc
mov
into
mov
and
dec
push
out
jnp
xchg
push
xchg
cs
sbb
repz
fcomps
adcl
mov
gs
and
xor
adc
dec
sbb
jns
push
scas
pop
cmp
cwtl
push
xor
je
mov
inc
pushf
push
imul
jge
je
insl
xchg
push
inc
sbb
or
inc
mov
ficomps
js
cmp
bound
mov
inc
lock
ret
icebp
jnp
stc
xor
or
call
dec
xchg
leave
adc
stos
enter
sub
ljmp
dec
xchg
lock
sub
add
jnp
movsb
negl
shl
mov
call
int
stos
cmp
lea
pop
std
dec
or
or
or
lahf
in
pop
rcrb
outsl
int
xor
and
ret
pop
insl
ds
pop
adc
or
adc
inc
js
imull
imul
fiadds
sbbb
sub
xlat
loop
xor
jmp
mov
outsb
dec
dec
xchg
add
jb
jbe
out
ja
lock
dec
andb
mov
dec
cmpsl
mov
add
pop
adc
shll
jbe
sbb
cli
pop
lods
fs
es
pop
icebp
mov
test
pop
and
iret
mov
mov
orl
lahf
dec
stos
mov
bound
sbb
inc
movl
dec
movsb
mov
mov
js
mov
mov
push
cmc
and
rcll
jg
test
sti
push
je
or
cmp
or
bound
push
inc
mov
dec
add
lods
mov
mov
sub
ret
add
push
xor
sbb
mov
repz
jno
sub
push
mov
sbb
push
fstpt
ljmp
leavew
sbb
cmp
test
pop
xchg
ljmp
jno
ljmp
mov
in
push
gs
inc
mov
xor
ds
movsl
pop
pop
iret
sub
xchg
dec
call
pop
stc
pop
call
xchg
mov
pop
les
push
pop
cmp
ds
or
cli
movsb
ja
into
fwait
jbe
mov
leave
ss
test
cmp
and
pop
xchg
mov
fisubrl
movmskps
ja
cwtl
lret
lcall
insl
mov
sbb
out
in
das
xchg
pop
in
and
xor
hlt
fldt
add
sbb
lea
scas
dec
cltd
mov
nop
clc
pop
hlt
lahf
insl
clc
lea
mov
mov
pushf
fsubrs
and
rclb
inc
insl
xlat
out
enter
push
pop
inc
orb
mov
cmp
mov
xor
inc
push
dec
adc
push
or
xor
jbe
adc
es
and
push
add
int
icebp
icebp
sbb
loop
mov
rcll
xchg
adc
rorb
test
mov
xorl
xor
inc
out
dec
adc
insb
xor
ret
pop
data16
outsl
xlat
add
lret
bound
mov
idivl
xchg
xor
sti
mov
fistps
fistl
xchg
aam
repnz
je
lret
fiaddl
mov
or
jmp
cmpsl
ret
xor
test
lds
mov
xor
outsb
adc
int
push
or
dec
xchg
push
mov
loope
and
lods
dec
addr16
scas
fsubrl
iret
arpl
dec
cwtl
cli
int
mov
enter
mov
out
cld
adc
daa
adc
sahf
inc
pop
ficompl
xor
adc
cmpb
inc
push
adc
adc
jne
aaa
imull
mov
mov
cmp
push
ficoms
xor
ss
or
jnp
sub
add
adc
ljmp
jg
or
xchg
sub
xor
adc
fchs
aad
nop
scas
adc
fmul
scas
lahf
dec
mov
cmc
jne
not
test
sbb
dec
or
mov
push
nop
sti
imul
xor
fists
sahf
lret
enter
mov
mov
lahf
call
push
aas
sub
or
pop
xchg
sbb
fimull
xlat
loopne
add
test
test
rcr
mov
pop
lret
loope
aaa
jmp
push
popa
pushf
dec
inc
jp
dec
flds
ret
pop
cli
jb
mov
dec
push
mov
push
cmp
push
mov
rcll
mov
inc
addr16
mov
loop
inc
mov
mov
xlat
xlat
and
xchg
inc
testb
mov
mov
lods
shl
pop
adc
sbb
cmp
sar
mov
pop
cmp
test
or
mov
cs
mov
out
jo
adc
pop
fsubl
mov
mov
or
cld
mov
and
mov
sbb
mov
inc
lret
mov
or
hlt
mov
sub
pushf
insl
inc
outsb
test
mov
notb
sbb
insb
pop
out
sub
jbe
inc
xchg
int3
mov
movl
push
stc
inc
or
test
inc
out
jo
inc
xor
mov
mov
daa
aas
dec
sub
lea
mov
fidivs
iret
mov
cld
fcoms
pop
fwait
mov
jl
mov
stos
mov
ljmp
ret
xchg
scas
into
mov
sarb
out
movsb
inc
sbb
dec
fnstenv
ret
cmp
push
cli
inc
nop
and
push
xchg
sub
and
scas
fstpt
lret
imul
sub
mov
xchg
adc
add
push
mov
mov
mov
mov
iret
mov
fsubrl
adc
sbb
fs
add
xor
leave
adc
test
stc
shrb
fcoms
mov
jle
jp
cmp
xorl
dec
aad
sbb
jecxz,pn
inc
js
pusha
rcrl
in
xchg
aad
and
xor
adc
jo
ret
imul
xchg
inc
lcall
sbb
dec
push
jno
test
out
inc
cmp
stc
jl
out
push
sub
xchg
adc
adc
mov
jg
mov
mov
or
hlt
pop
push
pop
daa
leave
jne
sbb
cmpb
jbe
ja
pop
adc
mov
push
or
jecxz
loopne
leave
lock
test
outsl
xchg
insl
lret
fisttps
out
xor
sbb
je
outsb
rcll
or
xchg
jb
je
pop
or
fstpt
rcrl
js
lret
popa
in
lahf
inc
je
or
call
insb
daa
sahf
mov
xor
bound
pop
or
scas
stc
std
ret
aas
adc
mov
data16
sar
cmpl
mov
fisubrl
bt
cmp
push
mov
out
sbb
scas
mov
aaa
scas
mov
std
and
js
xor
fistpl
leave
add
jne
lock
mov
enter
je
out
or
mov
mov
mov
and
mov
push
adc
dec
mov
mov
pop
sbb
fdivr
lds
sahf
dec
ret
push
fdivs
leave
mov
setg
dec
adc
cltd
mull
imul
cmp
xor
sub
cmp
pushf
aam
std
addr16
xchg
push
jae
cld
cmc
out
out
push
fwait
popa
roll
xchg
dec
and
int
insb
in
sub
sub
mov
adc
dec
sub
in
test
mov
inc
les
jno
push
dec
jmp
sti
in
cmp
inc
mov
ret
inc
lea
jno
test
dec
int3
mov
adc
mov
or
sub
stos
mov
jg
push
shrb
adc
or
cwtl
jmp
push
push
lret
pop
jle
dec
sbb
mov
in
sbb
mov
andb
mov
and
cmc
sbb
outsl
cltd
ss
popf
test
ret
sbb
mov
jno
mov
jmp
pop
and
lea
aaa
stos
lret
mov
cmp
jmp
mov
iret
adc
pop
rcll
mov
fwait
push
cmp
movsb
test
or
dec
loop
mov
add
not
pop
push
cs
adc
repz
ljmp
inc
fsincos
mov
aam
jg
add
xchg
sti
adc
jno
push
sbb
into
sub
lods
push
sbb
or
dec
adc
addl
sahf
cld
cmc
mov
gs
lret
bound
and
rcr
lea
mov
aaa
sub
inc
mov
repnz
and
ja
mov
cli
xor
dec
sbb
in
jne
in
mul
push
cld
sub
jp
jnp
inc
xchg
xor
mov
int3
adc
mov
sub
cmp
nop
xor
bound
in
xchg
shl
dec
add
shl
sub
fidivl
bswap
sahf
mov
es
in
mov
push
adc
mov
pop
and
mov
arpl
adc
or
mov
xlat
fstpt
icebp
push
jp
mov
test
or
adc
pusha
cmp
push
or
rclb
xchg
push
test
fdivrl
je
loope
xor
nop
ljmp
or
xor
and
ljmp
xor
imul
icebp
in
jge
push
jne
cwtl
inc
adc
fcmovnb
fs
inc
xchg
cmp
dec
pushf
cmp
inc
jg
orb
movsb
mov
scas
jno
cmp
xor
popf
xor
pop
fwait
sti
pop
mov
movsl
cmpsb
or
dec
jle
sbb
mov
js
ljmp
adc
inc
mov
nop
lods
fisttpl
movsb
jo
movsb
xchg
in
loope
cmp
push
stos
cmp
jb
aam
cmp
fldl
sbb
push
push
jp
xor
in
xor
cmp
sub
push
add
cmp
xor
pop
push
dec
pushf
test
and
test
popf
push
stos
rol
mov
subl
sub
or
sub
jge
mov
popa
or
mov
sahf
mov
movsl
and
or
loope
insb
add
mov
cmpsb
jns
sub
sub
push
rolb
cwtl
add
leave
mov
push
add
lahf
push
leave
shl
push
adc
out
cs
pop
sarl
cwtl
daa
xchg
mov
dec
psrlw
repnz
ret
inc
xor
leave
mov
xchg
aad
popa
bound
outsl
ret
cmpl
cmp
lods
push
adc
xchg
lret
pop
rcrl
daa
fcomi
insb
and
jmp
and
push
push
cmp
in
int3
aaa
mov
xchg
push
add
mov
fwait
dec
icebp
cs
bnd
sbb
iret
cmpb
push
adc
dec
loope
mov
js
in
sbb
aad
test
adc
andb
int
dec
mov
jge
xor
fwait
dec
loopne
jmp
out
dec
cltd
stos
pop
dec
jl
stc
pop
inc
in
ja
pop
ja
sahf
xlat
jg
mov
lea
sub
jno
jmp
and
stos
imul
inc
cmp
in
imul
and
out
jg
jnp
insb
fwait
test
in
pop
inc
mov
cwtl
out
inc
jbe
aas
out
xor
pushf
call
sub
sbb
adc
lcall
stos
pop
mov
and
lds
dec
ficomps
cmp
cmpsb
sbb
into
test
mov
xchg
sbbl
cld
jns
push
cmp
xchg
mov
mov
jg
xchg
bound
xchg
and
pop
inc
jne
sub
leave
je
push
mov
inc
mov
cld
push
aas
or
pop
rol
dec
add
cld
xchg
cmp
or
insl
mov
mov
mov
loopne
mov
pop
mov
lock
dec
insl
fwait
daa
pusha
mov
push
bound
mov
ds
mov
test
repz
call
adc
push
add
add
into
movsb
clc
ds
pop
lock
out
int3
add
cmpsb
mov
jbe
dec
arpl
ret
enter
sti
push
xor
int
pop
subb
cltd
dec
ja
sbb
rcrl
cmc
cs
or
xor
in
jle
inc
aam
mov
rolb
das
cltd
mov
jge
push
fs
inc
imul
aam
mov
into
gs
jns
mov
insb
cs
jmp
in
stos
sbb
xchg
pushf
push
call
jge
out
out
push
sub
mov
lods
lahf
pop
jmp
xor
jnp
dec
xor
je
int
inc
test
lods
lds
les
insb
pop
in
fcoml
and
mov
push
xchg
lret
out
mov
jo
xor
das
or
into
test
and
fs
in
cmpsl
xor
arpl
ljmp
out
xchg
iret
and
mov
movsb
divl
jecxz
loope
sti
pop
daa
mov
xlat
mov
hlt
sahf
lret
mov
xlat
sbb
mov
inc
sub
addr16
mov
push
xor
push
dec
push
adc
ja
aam
inc
xlat
xchg
and
xor
jle,pt
and
adc
rcll
xor
xchg
sub
dec
inc
jo
lds
xchg
and
in
sbb
dec
lea
pop
lahf
call
mov
fsubs
mov
cmp
mov
es
dec
sbb
xchg
mov
jns
icebp
das
mov
cmpl
subb
xchg
push
cmp
fnstenv
aas
cmp
lds
mov
xor
xlat
and
fstpl
cs
out
add
stos
adc
dec
movsl
pop
outsb
clc
add
dec
enter
jae
fisttpll
sub
rol
mov
cli
test
pop
movsb
je
mov
je
xchg
enter
scas
mov
mov
mov
repz
or
aad
jnp
loope
push
lock
ret
mov
arpl
nop
jecxz
rcr
lahf
jno
fldt
add
xchg
push
lret
or
push
jmp
daa
dec
pusha
mov
test
xor
loope
sti
outsl
inc
sub
daa
rol
lods
pop
inc
mov
jp
cmpsb
out
lds
xchg
and
push
arpl
cmp
mov
stos
dec
mov
xor
inc
repz
cmp
xor
cmp
dec
fisttps
dec
js
sbb
fistpl
inc
movsb
jae
pop
stc
int3
in
sub
insb
xchg
add
ds
maskmovq
imull
xor
xchg
dec
add
or
pop
xor
push
mov
aaa
jne
xchg
jbe
lock
sbb
xor
sub
and
jle
adc
xchg
mov
nop
addr16
shll
mov
dec
iret
pop
loope
addr16
mov
repnz
dec
not
aas
push
dec
mov
out
dec
test
rolb
daa
sub
sbb
dec
cmpsl
sub
stos
mov
imul
jo
jl
jmp
or
adc
dec
sub
test
sarb
or
pushf
sub
push
or
sub
pop
out
jle
mov
pushf
rolb
cwtl
mov
sub
mov
mov
aas
bound
mov
test
mov
inc
jb
adc
arpl
ds
in
fisubrl
xor
mov
mov
jne
lahf
lret
out
in
fidivs
repnz
addr16
fwait
in
cld
ud2
repnz
rcrl
adc
mov
cwtl
ss
pop
mov
addl
mov
inc
lods
push
pushf
cmpsb
add
sub
dec
add
stos
repnz
pop
cmp
adc
mov
mov
xchg
mov
stos
xor
inc
out
mov
aad
xor
sbb
push
iret
cmpsb
shr
pop
popf
add
scas
mov
dec
mov
xchg
call
push
fdivrl
rcll
inc
cmp
and
adc
sarb
xchg
shlb
sbb
mov
cmc
adc
mov
xchg
orl
mov
test
jmp
push
das
test
mov
mov
inc
sub
subl
xchg
jne
mov
lods
leave
sub
pop
xchg
xor
add
xlat
out
fcmovne
fldcw
xlat
pushf
insl
sub
cmp
lods
into
js
inc
std
mov
cs
jp
ljmp
dec
push
popf
int
xchg
in
push
test
fadd
nop
mov
sbb
call
bound
mov
add
cld
lock
push
adc
push
lret
sbb
cmp
in
cs
xor
inc
rorb
push
or
mov
xchg
mov
inc
cs
jmp
popa
popf
cld
je
mov
add
mov
rcrl
clc
fwait
xor
insb
inc
pop
adcb
arpl
pop
in
push
popa
movsl
into
jecxz
cmp
cltd
js
subb
loopne
push
fldl
cmc
movsb
pop
pop
insb
inc
mov
gs
xchg
mov
rcrb
int
xor
jp
test
pop
sub
test
or
ficomps
push
loop
or
adc
jnp
xchg
pushf
divb
mov
stos
mov
mov
cmpsl
push
repz
repz
pop
jne
out
dec
in
xor
adc
pushf
icebp
cli
pop
push
es
dec
dec
pop
push
inc
fiaddl
add
shll
sahf
mov
cmpsb
outsb
test
cmp
push
push
lret
xchg
adc
icebp
sub
test
icebp
inc
aas
inc
pop
rclb
pop
shl
push
jne
adc
scas
dec
adc
mov
xlat
movsl
jo
xchg
lock
inc
lcall
add
dec
gs
and
repnz
lcall
pop
loopne
or
xor
cmc
pushf
idivb
fmuls
insl
push
ljmp
stc
add
xchg
push
outsl
inc
leave
xchg
pop
dec
inc
ds
out
aaa
push
int
clc
ds
fucom
testl
pop
fs
int3
cltd
icebp
popa
rclb
fisubl
pop
movswl
into
mov
mov
clc
in
mov
fistps
in
cs
pop
jae
int
in
call
cmp
int3
lret
cld
int3
push
ja
cmp
cmpsl
andb
inc
cmp
adc
data16
mov
push
ds
in
adc
add
nop
test
fisubl
insb
mov
int3
int3
cld
mov
dec
jmp
sbb
push
loop
minps
xor
stos
cmp
clc
shll
loopne
cmp
arpl
outsl
cmp
fadds
clc
mov
lds
icebp
ja
aas
in
into
stos
mov
fsubl
push
jl,pn
inc
inc
push
sbb
jecxz
pusha
jmp
add
xlat
xlat
jle
xor
pop
mov
test
mov
push
loopne
pop
lods
push
xchg
mov
jp
mov
and
sub
sub
and
js
mov
xchg
cmp
push
sub
cmc
mov
xchg
mov
add
daa
and
mov
mov
mov
outsb
addr16
pop
mov
and
xchg
cmp
shl
lds
push
daa
jnp
adc
mov
test
inc
or
pop
mov
xor
pop
xor
mov
push
test
loopne
js
scas
push
ss
xchg
outsb
fsubrl
lret
push
lods
jg
jg
mov
mov
fucomip
push
and
or
mov
rol
xchg
mov
loop
cmp
lea
xchg
xor
dec
mov
add
jmp
inc
pusha
push
cltd
ret
adc
push
mov
cltd
push
fwait
scas
inc
cmp
std
jo
int
jl
rcrb
push
pop
cmpsl
push
loope
and
jecxz
stos
add
out
or
dec
and
xor
insl
jnp
push
sbb
dec
jb
fucomip
ds
test
add
and
add
pop
xchg
xchg
inc
rcll
adc
scas
scas
arpl
aaa
sbbb
fdivr
inc
push
add
jo
enter
lds
xchg
ljmp
add
in
sbb
mov
mov
test
fisttps
lcall
jnp
jl
dec
inc
adc
pop
lcall
fdivs
jne
pushl
shll
jmp
addr16
add
sarl
xchg
cmp
push
push
push
lret
lods
pusha
lret
xorb
adc
push
daa
nop
scas
jne
pop
fstpt
xor
icebp
fisubl
add
jb
inc
lret
xor
jb
ljmp
sub
mov
sub
jno
rcrl
sbb
into
sbb
pop
lcall
js
jge
mov
lret
movsl
sarb
loop,pn
adc
sbbl
mov
or
xor
sarl
inc
mov
xchg
add
mov
dec
mov
xchg
dec
sbb
popa
sub
mov
xchg
dec
sbb
push
aas
jecxz
lahf
popa
scas
mov
sub
inc
dec
jae
enter
int3
sub
or
sub
movsl
sahf
xlat
cmpb
inc
cmp
inc
push
scas
xchg
mov
push
adc
and
aam
sbb
pop
mov
jae
push
lea
mov
mov
lock
std
popa
push
ljmp
inc
or
test
adc
jg
mov
loopne
icebp
sub
cmp
mov
mov
push
fbld
hlt
repnz
push
sub
or
in
repz
jmp
xor
cli
and
sahf
dec
pop
push
sbb
push
outsb
and
aam
es
lds
jg
dec
adc
das
repz
cmp
jae
std
mov
out
mov
and
pop
cld
test
mov
mov
or
idiv
sbb
movsl
ret
adc
sub
sub
pushf
mov
mov
xchg
mov
dec
outsb
cmp
lods
jo
jbe
outsl
adc
dec
jns
inc
movsb
bound
sub
sarl
sub
pop
jno
testb
std
and
std
mov
ljmp
mov
inc
mov
dec
ds
testb
lock
mov
fistpl
lahf
mov
test
je
pop
cmp
dec
add
cltd
mov
add
push
shrb
xchg
cmc
ljmp
fcom
and
push
and
dec
cmc
push
jecxz
pop
fst
ret
lods
push
je
sub
push
push
test
lds
cmp
cmp
loope
mov
popa
sti
pop
lods
adc
cmp
cld
cmp
std
pop
pop
jno
add
jno
sub
rolb
insl
sub
mov
sbb
jle
sub
mov
lods
xor
in
in
lret
adc
gs
jns
int
out
ljmp
sub
push
gs
sahf
mov
and
push
lds
xchg
fnsave
sbb
loopne
jle
jge
ja
jmp
fsubrl
cltd
addr16
cmp
mov
cld
adc
popl
or
or
mov
insl
jecxz
icebp
pusha
mov
jle
ret
fcmovnu
sbb
pop
mov
das
js
es
outsl
rcrl
inc
mov
inc
shr
shlb
pop
mov
dec
cltd
push
sti
pop
int3
js
insl
push
je
outsl
push
add
idivl
inc
jp
shll
sarl
in
mov
mov
adc
mov
xchg
cs
push
pop
jl
ljmp
add
or
movsl
sub
movsb
adc
add
fwait
cmp
add
addl
jp
cli
xchg
mov
int
outsl
jno
scas
out
push
popa
outsb
les
loop
inc
push
test
cld
or
cmp
ljmp
daa
xchg
push
pop
mov
addr16
jnp
push
popf
cld
or
mov
inc
lret
add
add
jbe
ret
js
cmpsb
xchg
pop
mov
in
shl
loope
push
push
mov
stc
mov
cmp
sbb
mov
ret
mov
leave
sub
add
mulb
xor
lock
dec
dec
shrl
and
adc
and
push
mov
push
sahf
add
xchg
xchg
dec
ret
rcl
push
inc
pop
bound
or
test
push
jne
xor
or
xchg
popa
and
jb
push
out
fimull
mov
and
sbb
mov
loope
pop
mov
adc
add
pop
mov
sbb
mov
aas
and
cmc
adc
dec
pop
mov
mov
adcl
and
aas
jl
adc
ds
mov
jp
inc
or
sahf
lret
negl
lret
adc
testb
mov
xchg
cmpsb
mov
das
lret
insl
add
fnstenv
cs
repz
xchg
orl
test
push
fdivrl
sbb
pop
out
iret
jns
ja
pop
addl
das
push
std
js
out
das
mov
bound
cli
sbb
sbb
add
adc
and
pop
scas
out
or
stos
sbb
lahf
aam
xlat
imul
xor
pop
fsubl
jmp
pushw
xor
pop
sbbl
jbe
jae
pop
arpl
loopne
addl
inc
push
jp
das
mov
out
aad
movsb
sbb
mov
mov
jae
sarl
hlt
cmp
ret
sbbb
jne,pn
inc
in
btc
stos
sbb
push
pop
xchg
js
jmp
loop
jb
and
xor
dec
testb
dec
es
lahf
xor
outsl
sarb
movsl
in
fdiv
pop
aas
pop
sub
rcr
ret
mov
cmpl
add
xchg
dec
mov
cli
xchg
ficoms
pop
xor
xor
push
dec
sahf
inc
sub
std
jns
jns
push
xor
adc
jecxz
cmpsb
jmp
aad
cmpb
jmp
ret
sbb
ljmp
ret
inc
shr
add
pop
stos
cwtl
aas
adc
ss
or
fnsave
mov
mov
xor
jg
jb
repnz
rclb
mov
cmp
inc
jg
fidivrs
jno
push
jae
pushf
cld
iret
or
mov
enter
pop
sub
pusha
xor
or
pop
mov
inc
sbb
adcl
xchg
out
cmp
out
inc
ret
mov
pop
adc
clc
push
mov
mov
xor
mov
std
mov
int3
and
sti
inc
out
xchg
cmpsl
ret
sbb
loop
dec
mov
shll
sbb
xchg
push
add
pop
or
sbb
cld
mov
mov
in
arpl
jge
cmc
test
mov
adc
scas
aam
push
pop
add
cmpsb
punpckldq
stos
mov
bound
mov
iret
sbb
inc
dec
inc
data16
inc
clc
punpcklbw
adc
mov
jb
mov
push
out
and
lahf
push
pop
sbb
xor
jg
add
ja
cwtl
sub
jmp
adc
cmp
adc
movsb
xchg
lock
movsl
fistps
mov
test
sbb
sub
pop
int3
dec
pop
repz
jmp
aad
push
repz
lret
inc
dec
fcmovu
add
or
push
xchg
mov
mov
pushf
mov
pop
pop
les
inc
out
sbb
sub
dec
pop
negb
xchg
shlb
mov
adcb
sub
or
xchg
test
xlat
movsb
xchg
push
dec
sub
mov
add
dec
addb
repz
out
push
dec
jns
scas
cmp
pop
aas
insl
rcll
adc
sub
cs
jae
push
dec
cmpsl
in
add
das
jmp
out
mov
adc
push
xor
and
mov
scas
sbb
jb
mov
aad
mov
cmpsb
sub
jmp
inc
or
imulb
mov
pop
sub
cmpsb
xchg
cmp
dec
or
push
les
and
sbb
inc
inc
inc
sbb
aaa
adc
sbb
mov
cmpl
pop
sbb
mov
repnz
sub
sbb
and
jp
frstor
dec
dec
xchg
mov
lods
mov
outsb
and
mov
jge
sbb
sub
and
sahf
fcomps
imul
mov
hlt
sbb
sbb
mov
jle
out
inc
or
movl
jae
mov
mov
mov
jae
sahf
mov
aas
add
sbb
mov
je
or
push
mov
dec
xchg
sbb
jnp
in
mov
xchg
call
incl
adc
int3
fs
jl
dec
call
xor
das
test
fs
repnz
jge
sti
adc
rolw
fiaddl
xchg
sbb
lcall
jecxz
mov
jle
pop
cld
xor
sub
dec
dec
add
mov
lret
add
mov
sub
das
adcl
pop
dec
jns
add
sbb
cmpsb
dec
pop
lods
mov
ds
adc
dec
rorb
sub
testl
or
lods
pop
fcoml
add
inc
loope
sub
pop
jns
xchg
sub
fdivs
imul
mov
or
sbb
adc
std
mov
jnp
pop
bound
push
out
fldl
scas
jo
hlt
aam
dec
and
std
iret
jmp
mov
ds
mov
fadds
adc
jne
or
lret
test
cmp
lods
pop
fwait
into
mov
and
mov
sarb
and
loopne
inc
mov
lds
push
pushf
pop
fisttps
xchg
popf
push
shr
fwait
js
pop
loopne
pushf
adc
mov
faddl
ds
cmc
jns
and
xor
add
add
jg
inc
in
lea
fsub
sbb
push
mov
cmp
stos
in
jecxz
dec
add
repnz
xchg
add
arpl
pop
or
and
arpl
jnp
mov
mov
sti
sbb
fisttps
int3
xchg
and
loope
adc
dec
mov
pop
jnp
dec
xchg
cmp
clc
dec
out
adc
add
enter
lea
mov
add
adc
add
jge
js
push
jle
add
add
in
jo
enter
jge
xchg
push
cmp
out
es
jmp
in
inc
jp
aam
sbb
cmc
mov
xchg
add
sub
cs
fsubs
mov
inc
push
add
pop
push
pop
inc
in
pop
pop
leave
pop
js
daa
negb
adc
scas
mov
out
xor
cmpsl
xchg
dec
ss
add
popw
call
push
add
jmp
pop
sbb
cmp
sub
jae
cmp
and
jbe
jmp
add
pop
leave
push
stos
sub
mov
lds
lret
fdiv
mov
movsl
iret
mov
xchg
xchg
mov
rclb
xor
xorb
and
outsb
push
ds
lds
shr
popa
fadd
out
sarl
mov
xchg
in
cmc
lret
ss
adc
xchg
push
lods
sbb
jbe
jnp
int
outsb
push
icebp
cmp
rorl
sarl
push
std
gs
mov
in
cmp
xor
push
and
in
jp
jno
adc
fmul
lods
stos
js
add
test
sub
jb
outsl
mov
cmp
adc
mov
jo
jo
scas
insl
rol
imull
push
xor
dec
hlt
in
movsb
dec
mov
push
cs
bound
ret
jl
jns
cmpxchg
lret
dec
pop
mov
and
cs
ss
cmp
movsb
pop
in
bound
or
mov
pop
mov
popf
mov
xchg
pusha
adc
push
popf
xchg
lahf
jmp
push
and
xor
and
dec
repz
mov
mov
inc
mov
jne
pop
arpl
nop
hlt
ljmp
lret
loope
shrl
lds
bswap
shrb
shlb
inc
cmp
push
les
mov
sub
sub
mov
fcomps
cltd
mov
out
cs
mov
stos
divl
ret
stos
ficomps
sti
outsl
int3
mov
fsubrl
popa
push
adc
addb
push
std
jg
xchg
or
inc
adc
inc
movsl
stos
sti
cld
rorl
xchg
adc
shll
aas
lods
test
nop
stos
mov
movsl
sub
insl
mov
mov
cmp
pop
dec
adc
or
mov
adc
call
popf
cmpsl
popw
pop
js
jmp
jge
outsl
ljmp
mov
lods
lcall
push
lock
incl
imul
sub
iret
adc
lods
pushf
dec
rcrl
ss
mov
cli
adc
jg
or
or
pop
shrb
fadds
mov
nop
out
divl
icebp
sbb
sub
mov
cmp
cld
dec
cmc
push
adc
in
pop
xchg
dec
jbe
pop
adc
pmulhw
repnz
fstpl
fdivs
sub
jb
pop
repnz
sbb
gs
inc
dec
sub
add
lods
mov
dec
test
ss
push
dec
push
cld
cmp
pop
mov
push
addb
xor
or
push
scas
int3
aaa
dec
mov
cwtl
scas
cmp
dec
rorl
adc
adc
push
popa
ljmp
arpl
enter
cmp
cmc
cmp
insl
pusha
cwtl
push
lret
inc
push
hlt
and
dec
clc
dec
xor
xchg
nopl
outsl
mov
pop
or
sub
and
es
jnp
sbb
sbb
mov
xchg
ss
adc
scas
or
mov
iret
mov
pop
mov
and
in
jg
insl
or
push
lret
pop
popf
adc
sbb
mov
xchg
mov
frstor
mov
sub
repz
push
dec
sub
mov
pop
add
cmpsb
fimull
adc
roll
loop
or
sub
js
lods
rorb
fstps
mov
or
or
outsb
aaa
inc
xor
jmp
jmp
sub
sub
dec
xlat
and
pop
mov
and
jle
mov
push
adc
idivl
mov
sbbl
inc
test
call
loope
pop
xchg
sbb
js
mov
or
ja
lock
int3
popf
push
dec
push
cmp
mov
ljmp
dec
sbb
mov
sahf
ret
sub
push
dec
sub
or
mov
jnp
and
xchg
mov
popa
test
cltd
cmp
push
xchg
mov
popf
pop
clc
mov
adc
popf
lods
push
cmpsb
and
mov
xchg
repnz
ljmp
rep
cmp
sti
pop
pop
xchg
cmp
test
sarb
in
mov
cmp
insb
push
fdivs
outsb
mov
adc
sbb
jecxz
inc
push
fsubl
jp
jp
enter
push
jo
or
dec
mov
mov
and
iret
mov
loop
arpl
cmp
fstps
dec
xchg
pop
int3
int3
xlat
dec
pop
enter
push
sub
out
out
lret
ss
pavgw
repnz
push
mov
push
fwait
mov
sub
insl
xchg
std
or
sbb
mov
out
inc
sbb
xlat
mov
mov
lret
movb
adc
mov
in
cmp
popf
ss
icebp
mov
insb
mov
pop
daa
mov
popf
dec
xor
loopne
or
pop
cs
push
jl
sbb
scas
jge
pop
mov
sub
icebp
jbe
sbb
fidivs
jno
mov
xlat
fdivl
and
sbb
mov
pop
call
imul
mov
lods
mov
mov
xchg
jle
xchg
jnp
jns
lret
je
nop
scas
cmp
sub
jecxz
dec
fstpl
and
mov
adc
repz
jge
mov
sub
pop
jle
lock
push
pop
inc
lods
ss
xor
sbb
aam
sbb
cld
sub
test
jmp
rorl
cmp
push
push
cmpsb
movsb
adc
xchg
notl
mov
mov
inc
fbstp
and
adc
cmp
or
xor
pop
lret
test
push
test
push
or
in
cs
call
daa
in
roll
lahf
testl
ret
sub
fstl
jns
out
cmp
sbb
loopne
sbb
ficomps
push
idivl
pushl
mov
dec
call
inc
push
into
mov
popf
cmp
out
jmp
outsb
and
mov
sbb
daa
inc
out
xchg
iret
lret
icebp
xor
or
jmp
xchg
fwait
imul
sbb
hlt
cmp
mov
aam
arpl
mov
leave
popa
add
xchg
popa
imul
int3
lds
xor
pusha
mov
jns
jecxz
jo
cmp
ljmp
push
jno
repnz
cmpsl
imul
movsl
insb
pop
pusha
mov
dec
dec
sbb
addr16
orb
cli
sbb
sbb
stos
pop
lret
cwtl
mov
mov
outsl
out
push
fldt
outsb
out
sarb
push
ret
and
mov
rcl
in
xchg
aas
push
lock
dec
dec
mov
push
cmp
sub
mov
xchg
fstpt
cs
pop
stos
int3
jle
cmp
xchg
call
daa
in
mov
jae
loope
mov
or
xchg
cmp
imulb
mov
roll
test
sub
pop
push
and
push
lahf
dec
xchg
mov
jle
sbb
cmp
shlb
gs
movsl
sbb
xchg
icebp
jp
mov
mov
cwtl
xchg
xchg
xchg
add
mov
iret
dec
andb
adc
xor
or
not
and
lods
cmpsb
inc
aad
cmp
ljmp
pop
or
mov
scas
ds
push
pushf
push
and
cmp
dec
sub
pop
jbe
mov
mov
pop
and
sbb
arpl
push
mov
loopne
sbb
sbb
pop
and
add
mov
movsb
pop
hlt
push
cs
xlat
lods
xchg
jnp
push
ret
push
lret
push
aaa
pop
hlt
daa
jo
out
inc
and
cltd
nop
jnp
adc
pop
lret
int
and
jmp
hlt
js
jg
fadds
cmp
sbb
push
scas
shl
push
test
mov
jo
mov
cmpsb
mov
fisttps
inc
pop
inc
lds
sbb
cmc
cmp
mov
inc
adc
and
icebp
popa
push
adc
jb
push
decb
pop
cmc
fisubs
cwtl
sbb
pusha
push
xchg
or
in
cmp
das
stos
sahf
inc
dec
mov
popf
in
fsts
pop
repnz
repz
pop
xchg
imul
cmpsb
es
js
pop
push
and
sbb
cmp
mov
mov
mov
cmp
imul
scas
cmp
mov
jno
adc
mov
pop
lret
aas
js
imul
xor
cmc
xchg
dec
sbb
lret
or
mov
in
les
jae
and
sbb
adc
dec
popa
in
dec
jl
testl
cld
imul
ret
or
mov
ffree
mov
mov
addr16
rcrl
test
test
push
cwtl
dec
mov
sbb
fiadds
dec
jae
or
adc
test
movsl
add
inc
pop
pop
out
movsb
mov
sub
mov
imul
and
xlat
leave
sub
mov
out
mov
imul
stc
dec
dec
leave
jmp
jo
callw
loopne
call
push
inc
mov
insb
mov
xchg
loopne
sbb
push
repnz
inc
test
mov
pop
int
mov
in
cmp
mov
or
fwait
or
sub
fcmovnb
stc
ret
je
lods
mov
jb
mov
mov
sarl
xor
mov
pop
adc
fs
pop
in
loop
sti
jae
mov
leave
sub
fwait
jmp
push
stc
pop
in
and
dec
pop
add
push
mov
xor
inc
jmp
jb
inc
xor
jge
jne
out
push
cmpsb
sbb
sbb
xor
and
cmp
sub
xlat
or
pop
cmp
push
imul
push
xor
pop
push
fldcw
ljmp
and
push
sbb
xchg
fildll
fwait
mov
mov
and
jae
hlt
loopne
fistps
jle
pop
data16
jg
fcom
push
dec
cmp
lods
jecxz
je
js
pushf
or
push
xor
dec
xchg
shll
adc
mov
pop
fistpl
mov
inc
aad
arpl
repz
pusha
xchg
mov
iret
sub
imul
outsl
stos
lahf
enter
lods
sti
into
repnz
adc
aad
jge
jnp
fistpll
js
cmp
cmpsb
mov
scas
sub
jg
std
lcall
adc
ljmp
jno
lods
mov
repz
int
into
incb
das
push
adc
inc
jmp
add
fnstsw
arpl
push
inc
lods
mov
cmp
adc
cmp
clc
int
sub
sti
lea
fidivl
jo
adc
bound
jb
add
jmp
xor
jns
xor
pop
sti
adc
jl
imul
in
inc
pop
sbb
mov
push
fsubrs
sbb
mov
xchg
dec
xor
push
or
clc
jne
pop
repz
cmc
mov
das
jmp
fcmovb
pop
js
mov
adc
icebp
push
push
fs
sbb
dec
icebp
cltd
fldenv
repz
push
cmp
xor
ljmp
xchg
jae
and
aad
in
and
cmp
lahf
or
cmp
fldcw
mov
cmpsb
fadds
stos
pop
stc
pop
sub
addr16
mov
mov
cmpsl
int
jae
or
pop
lock
dec
arpl
sbb
cmp
adc
outsl
pop
ljmp
mov
sarb
pop
inc
mov
push
mov
xor
testl
and
pop
add
into
fimuls
outsb
enter
and
dec
dec
push
mov
jnp
fs
pusha
pop
pop
add
and
ja
aaa
mov
popf
iret
cmpsb
adc
fadds
sbb
jmp
aas
push
mov
repnz
je
fucomp
out
or
test
inc
sub
movsb
out
cmpsl
insl
addr16
rolb
popf
int
cmpl
popf
cmp
jb
fdivs
jae
xor
or
pop
mov
sahf
jl
cmpsb
jne
rcr
or
and
xor
cld
mov
xor
push
insl
rcrb
stos
add
aas
mov
xorb
pavgb
add
insl
dec
and
aaa
div
sbb
ss
cmp
push
cmc
in
stos
fxch
cmpl
adc
mov
scas
mov
push
mov
sbb
imul
aam
shrb
fcmovnu
jl
jge
dec
mov
pop
sahf
aaa
push
stos
or
data16
scas
pop
dec
out
mov
cmpsb
mov
inc
daa
leave
pop
inc
lret
dec
inc
inc
push
je
inc
ss
aad
inc
test
sub
idivb
stos
jecxz
xchg
loopne
cmp
inc
fstpt
cld
repnz
sar
lock
shlb
popa
adc
jp
jmp
mov
mov
test
xchg
pusha
stos
jmp
and
mov
out
adc
insb
loope
gs
xor
pop
jne
lahf
js
and
push
outsb
jno
bound
mov
sub
sbb
mov
cmp
imulb
out
js
jmp
mov
cmp
cmp
test
rorb
clc
jl
sub
inc
sub
icebp
sbb
dec
fdivrl
addl
add
mov
inc
and
adc
andb
jbe
scas
movsb
mov
and
xchg
loop
pop
or
cmp
xor
or
daa
ss
shll
shr
and
movb
pushf
imul
bound
cli
mov
xchg
xchg
rcrb
and
int
aaa
imul
jb
pop
or
push
les
mov
xchg
push
jl
xlat
das
daa
cld
daa
mov
ds
adc
mov
mov
mov
popa
aaa
jle
push
inc
cmp
sbb
sub
repz
lods
fs
push
iret
out
adcb
cs
in
mov
mov
mov
rcrb
js
mov
add
sahf
not
xchg
scas
jmp
push
enter
jne
loop
xor
dec
ret
scas
inc
and
cmp
mov
jnp
inc
rcrb
insl
aas
fsubl
sbb
push
ret
or
movsl
sbb
test
sbbl
adc
and
fwait
mov
mov
pop
sarl
adc
fisubrs
or
jl
pop
pop
subb
and
aad
aam
pop
xor
cltd
scas
jecxz
sub
jne
ret
clc
cmp
sarl
xchg
xor
mov
sbb
test
jne
lret
lret
xchg
inc
xorb
int3
fwait
push
rcrl
push
sbb
sahf
adc
lahf
lds
sbbb
mov
cld
pop
ljmp
xchg
lret
sbb
pop
pop
inc
xchg
negl
aaa
ljmp
movnti
mov
inc
ja
mov
push
mov
push
push
jb
stc
mov
xchg
sbb
sbb
dec
loopne
inc
push
mov
fisttpl
xchg
loope
mov
sub
in
jp
push
pop
sarl
pop
or
sbb
adc
adc
cmp
ljmp
loop
mov
imul
jmp
xchg
xor
push
out
lcall
sub
daa
mov
lods
add
lret
jle
or
xor
xchg
in
cmp
jae
and
xor
ja
aad
and
loopne
addr16
mov
cmp
xchg
popf
xchg
dec
pop
inc
sbb
pop
shrb
jg
addl
cs
lret
scas
jns
test
mov
sub
rol
rolb
pop
lret
lea
and
dec
push
xor
push
xor
adc
push
sarb
push
rorb
jg
inc
jnp
push
and
xor
adc
std
gs
cmpsl
jl
pop
pop
scas
lea
fldpi
sub
xchg
ja
adc
enterw
ja
clc
scas
sti
add
jns
xchg
mov
jmp
xor
imul
out
push
sbb
jne
insl
das
dec
add
jb
or
lret
cmc
in
add
aad
push
mov
xchg
adc
inc
loopne
rorb
cs
jmp
or
test
dec
movsb
mov
jg
sbb
lahf
pop
fucomi
dec
imul
test
mov
int3
xor
mov
stc
adc
adc
push
add
mov
xchg
mov
pop
or
inc
loopne
ret
mov
movsl
mov
lods
mov
sbb
inc
std
cmpsb
cmp
sahf
and
pop
daa
xor
sbb
xor
push
xchg
add
mov
jge
fidivrs
clc
les
push
daa
loope
call
fldln2
cmp
shrl
mulb
pusha
sbb
xchg
loopne
jmp
jae
sub
bound
adc
imul
jne
jno
fs
adc
inc
inc
jp
je
fnsetpm(287
xlat
mov
out
xchg
jno
mov
inc
stc
or
iret
jle
jne
rcll
scas
and
lret
pop
in
dec
xchg
insb
sahf
mov
shl
test
mov
xchg
adc
push
push
into
cld
outsl
repz
inc
and
test
fnsave
mov
or
decl
mov
fcmovbe
lock
clc
fucomp
dec
lock
loop
dec
in
jl
dec
ja
sbb
and
dec
jo
fdivl
outsb
inc
ss
sub
test
leave
in
jl
testl
and
fcompl
sub
mov
pop
jnp
popa
shrl
jns
aaa
rorb
and
loop
repz
inc
inc
mov
pop
cld
inc
inc
inc
mov
xor
nop
sar
xchg
dec
jo
mov
mov
pop
mov
enter
shll
and
popa
ret
addl
add
jle
cli
js
rol
sbb
loopne
dec
and
and
cmp
xor
hlt
mulb
outsb
in
adc
push
subb
mov
jnp
mov
fbstp
jmp
test
movsl
lods
out
jno
mov
dec
addr16
mov
push
inc
out
scas
gs
xor
mov
gs
js
dec
mov
flds
lahf
jae
into
hlt
sub
popf
adc
sbb
lods
jo,pn
or
stc
xchg
in
sbb
cld
test
lret
jl
xchg
leave
lea
pop
sub
pop
insl
mov
int3
pop
ficompl
pop
xor
inc
and
inc
sahf
dec
sub
shrl
mov
dec
pop
shrl
pusha
popf
mov
xchg
push
jbe
lcall
sub
out
mov
xor
xor
je
out
scas
popf
dec
adc
aad
and
and
jg
mov
fcom
xor
dec
fdivl
stc
aad
fmuls
inc
jns
jge
mov
and
push
rol
test
push
add
xchg
mov
repnz
std
in
push
mov
sbb
int
mul
lock
clc
push
jne
or
sub
leave
andb
imul
jmp
xchg
cmp
add
xchg
leave
mov
dec
xchg
xchg
adc
dec
in
lahf
test
adc
sbb
fiadds
cwtl
cmc
xor
sbb
arpl
adc
jmp
out
cmp
cmp
addl
inc
add
jae
enter
stc
mov
sbbl
and
std
dec
pop
jle
mov
movl
js
xchg
outsb
jecxz
adc
rorl
jnp
xchg
cld
fwait
pop
push
sub
stc
xchg
mov
cmp
xorl
in
pop
loope
mov
dec
lahf
and
repz
notb
mov
push
popa
jg
jae
jmp
imul
dec
xchg
mov
or
jbe
fldenv
hlt
loope
sbb
mov
je
loop
lds
inc
mov
mov
fistl
ret
orl
sbb
jnp
adc
dec
mov
push
cs
inc
enter
sahf
xorb
ja
add
push
pop
fists
sbbb
js
bnd
dec
dec
sub
jg
mov
out
das
cld
les
lret
sti
out
in
mov
xchg
lret
jmp
cwtl
pop
fstpt
mov
movsl
pop
mov
in
cld
mov
jns
lcall
jge
pushf
inc
mov
push
jecxz
jmp
pop
pop
call
sub
or
add
loopne
cli
jle
push
sti
imul
push
dec
pop
dec
scas
add
loope
lret
std
pop
jecxz
inc
pop
hlt
mov
pop
mov
xchg
cs
or
insl
sbb
mov
cmp
fbld
lcall
rcrl
xchg
in
mov
jns
mov
jne
fmuls
clc
push
lahf
test
test
insl
or
inc
out
mov
lcall
mov
mov
mov
test
fsts
clc
push
fwait
pop
rcl
mov
in
inc
test
push
or
jmp
add
loopne
cmc
cmp
xor
popf
cltd
pop
jl
rorl
cmp
cld
pusha
jmp
mov
insb
mov
and
xchg
in
loop
pop
adc
push
mov
mov
movsl
insl
mov
lea
test
pop
mov
pop
mov
or
adc
enter
mov
ficoms
or
xor
orl
xor
test
gs
xor
sub
mov
inc
and
clc
mov
mov
loope
ljmp
mov
lods
mov
arpl
clc
push
mov
ljmp
or
jle
pop
mov
pop
cmpsb
ds
and
sub
rcl
adc
mov
mov
movsb
jmp
pop
push
sub
jge
stos
test
or
push
inc
loop
add
push
mov
test
and
mov
rcr
lahf
out
jge
pop
dec
mov
sub
std
fistps
jnp
dec
add
mov
and
dec
test
mov
movsb
add
adc
push
xchg
sub
cmp
adc
aaa
xchg
push
lock
scas
call
fidivrl
pop
je
setbe
jp
ss
lcall
jecxz
push
frstor
add
mov
xor
mov
cs
inc
mov
adc
ja
dec
mov
jle
cmpl
test
cmp
mov
xor
in
frstor
stos
mov
xor
scas
xor
jne
xchg
pop
cwtl
mov
mov
and
jmp
aaa
cltd
icebp
adc
icebp
xor
pop
sub
add
ret
mov
lds
fmull
in
lahf
or
sbb
jae
mov
stc
xchg
mov
xrelease
mov
jbe
jno
sbb
add
cmp
icebp
pushf
stos
int
mov
jae
lahf
arpl
or
clc
xlat
push
xchg
stos
dec
or
jbe
fstps
outsl
cmpw
jae
andb
adc
arpl
imul
add
decb
fsubl
jmp
cmc
mov
xor
pop
jp,pn
add
add
cmpsl
leave
sti
outsl
lahf
mov
lret
lds
mov
add
dec
jnp
or
outsb
mov
jbe
or
movsb
aas
lret
cli
icebp
add
scas
stos
and
sti
sahf
mov
ja
xor
std
cmpsb
dec
mov
loope
cmp
pop
fidivrl
inc
dec
jns
lcall
dec
les
cmpsl
adc
dec
pop
in
adc
ljmp
ss
pusha
lds
push
dec
test
inc
pop
stos
or
xchg
xor
add
rcl
ficoms
stos
les
sbb
out
inc
cmpsb
adc
test
xor
add
xor
xchg
mov
or
psubw
push
xchg
xchg
rolb
in
ret
adc
leave
out
xchg
addl
popa
push
out
xor
outsb
gs
pop
push
dec
push
pop
xchg
repz
jno
jne
movsb
sub
bound
add
das
push
out
push
push
sub
out
sbb
pop
add
adc
inc
dec
lret
xor
shlb
mov
lret
push
scas
lea
jne
stos
fs
lret
push
fstpl
aaa
xchg
cmpsl
and
lahf
jl
xchg
push
into
jbe
add
and
int
enter
test
stos
fwait
push
sbb
imul
or
dec
pop
loopne
sub
adc
fbld
and
add
dec
imul
imul
pop
mov
loopne
data16
pop
pop
jns
xor
ds
push
or
mov
ljmp
popa
test
test
push
cmp
adc
rcll
repnz
mov
dec
lcall
loop
mov
mov
fnstsw
ret
jp
xor
jno
jmp
test
cmc
or
sbb
jl
sub
not
inc
mov
imul
mov
add
dec
scas
xchg
add
and
dec
adc
add
in
mov
push
inc
fnsave
in
mov
fstps
cwtl
nop
test
insb
icebp
shlb
xor
mov
mov
mov
fldl
mov
lret
lret
repnz
add
xchg
sti
rcl
loope
sub
sub
pusha
inc
sub
mov
dec
add
je
pusha
or
test
mov
xchg
pop
adc
cmp
mov
imul
ljmp
sub
mov
jl
movsl
push
jns
or
xor
iret
imull
mov
std
test
mov
xchg
insb
add
fwait
sub
sub
push
outsb
repz
popa
sub
adc
in
sub
repz
mov
cli
push
stos
test
pop
lods
pushf
addr16
sbb
jmp
xchg
sbb
mov
movsl
mov
mov
ffree
inc
and
push
xchg
popf
add
mov
inc
aad
popa
mov
fwait
and
test
fnstenv
psllw
push
inc
insl
push
dec
data16
imul
and
adc
mov
je
sbb
popf
mov
jmp
jnp
hlt
aaa
jnp
cwtl
std
dec
jg
scas
adc
aas
addr16
and
mov
mov
pop
and
outsb
mov
cwtl
pusha
jg
addr16
lods
or
sbb
dec
mov
push
jno
pop
mov
adc
lret
cmp
and
dec
mov
push
popf
add
daa
mov
jmp
or
sbb
lock
xchg
das
scas
lods
rclb
cmp
sahf
lock
into
jo
adc
push
sbb
pop
aad
push
data16
outsb
fstps
push
loope
cmp
aad
mov
mov
cs
es
push
mov
scas
je
mov
add
aad
xor
inc
mov
dec
pushf
loop
movsb
jno
pop
push
push
dec
add
inc
adc
pop
mov
inc
add
mov
mov
rclb
outsl
lcall
inc
ja
cmp
mov
adc
inc
push
lea
mov
pushf
lods
inc
dec
cs
lods
lret
mov
mov
lea
xchg
das
fsts
xchg
stos
push
pop
in
jnp
addr16
mov
shrb
adc
hlt
dec
push
mov
push
dec
jl
cli
popf
mov
xor
fcomi
inc
add
lahf
inc
stc
fwait
gs
cli
adc
sub
push
aam
lret
out
mov
sbb
pop
jbe
and
add
mov
mov
mov
dec
push
jmp
jmp
aaa
andb
rcrl
fs
addr16
pop
aaa
mov
and
adc
daa
sub
inc
or
fdivs
xor
adc
jecxz
pop
jne
lret
icebp
stos
inc
pop
faddp
dec
xchg
add
lret
mov
out
sbb
scas
daa
lock
xor
xor
imul
add
add
pop
lock
mov
add
push
js
mov
mov
dec
push
add
fldenv
cltd
push
shl
lods
rcll
mov
cmp
es
int
or
jnp
fs
mov
xchg
and
imul
push
lock
cs
mov
sbbl
jno
ss
andl
dec
jne
leave
andb
lret
inc
xor
enter
notl
imul
stc
imul
jp
ret
lods
stc
adc
movsb
pop
or
sub
test
or
jnp
fildll
call
das
inc
mov
aam
call
dec
psubw
xchg
and
mov
lret
and
into
jo
das
stos
jl
shl
pushf
push
call
fstpl
cmp
into
stos
jmp
sub
test
fidivs
lcall
leave
mov
sbb
scas
lods
inc
mov
add
mov
inc
and
int3
fadds
jae
mov
stc
xor
sahf
jnp
imul
pushf
pop
fidivs
push
xchg
cld
inc
push
fldcw
xchg
int
dec
pop
fstps
and
mov
addr16
dec
push
fnstsw
mov
clc
mov
sub
push
and
push
cmp
movsb
out
xor
cs
subb
mov
call
sarl
mov
mov
mov
cmp
pop
daa
and
mov
mov
nop
pop
jg
dec
popa
sbb
jle
and
inc
push
dec
arpl
push
js
xor
test
orb
push
out
push
mov
cmp
rcrb
rorl
dec
popf
dec
xor
fnstsw
fs
cmp
mov
pop
jbe
mov
jp
inc
cmp
cmp
test
fdivrp
and
inc
jns
jb
dec
cmp
inc
cmc
cwtl
fsubrs
ds
adc
dec
lods
lock
out
add
aad
xor
pop
fistpll
mov
adcb
inc
sbbl
adc
and
insl
inc
lods
or
xor
mov
into
int
push
dec
push
sub
pushf
addr16
cs
pop
dec
sbb
mov
sahf
ljmp
inc
push
lahf
ja
sbb
sub
xchg
testb
push
lea
ljmp
xchg
fsubrl
and
push
add
xor
sub
jge
in
dec
jl
out
mov
inc
fldl
std
jl
fwait
and
and
push
sar
sbb
cmp
jnp
pushw
push
mov
movsb
push
sbb
shl
mov
inc
cmp
mov
push
xchg
xchg
lods
repz
imul
mov
cmpsl
rcl
ljmp
mov
fcomps
dec
sarl
test
add
or
shlb
test
mov
inc
stos
popf
inc
stos
xor
insb
sti
jg
clc
scas
loope
repz
loopne
cmp
sbb
cmpsl
xor
pop
mov
aaa
mov
pop
fisubl
mov
cmp
cmpw
push
adc
add
addl
mov
aas
xor
push
dec
mov
sbb
xchg
dec
or
dec
cmp
xchg
lock
leave
jae
aaa
jl
lock
sbb
add
jne
cmp
lds
sub
mov
pusha
movsb
mov
lahf
mov
jge
add
pushf
xchg
xchg
pop
push
fldcw
lock
add
or
dec
pop
insl
cli
mov
jo
into
lret
loop
frstor
dec
arpl
cmp
leave
bound
mov
cmp
xchg
xchg
pop
mov
dec
push
fiadds
mov
or
xor
mov
push
lods
xor
sbb
fisubrl
mov
cmpl
or
out
jp
push
aam
nop
iret
sub
sbb
inc
sbb
sbb
pop
mov
insb
ret
cmpsb
jg
or
or
cmp
xchg
lret
xsha1
cmpsb
dec
fs
loop
out
mov
sub
js
inc
mov
jmp
int
sbb
int3
ja
or
and
call
dec
repz
jle
mov
mov
adcl
push
push
aas
or
jmp
dec
adc
cltd
sub
cmc
add
push
mov
imul
callw
push
adc
mov
xchg
ljmp
dec
dec
cwtl
fsubs
daa
and
mov
inc
and
adc
mov
mov
pop
mov
lcall
sbb
aam
mov
xor
popa
mov
insb
into
mov
add
mov
mov
lds
xor
sub
pop
mov
sti
and
notb
das
je
jb
or
push
jl
fnstsw
jno
adc
cmp
pop
leave
jle
xchg
push
imul
jbe
add
les
mov
ljmp
jp
in
rorb
xor
push
inc
fstpl
mov
push
push
inc
pop
dec
pop
mov
pop
pop
jg
dec
outsb
mov
dec
xchg
mov
mov
in
mov
daa
or
xchg
sub
add
push
aaa
sub
stos
xor
out
pop
arpl
push
arpl
pusha
cmp
pop
inc
call
testb
xor
inc
jge
call
test
mov
mov
inc
lahf
push
pop
jmp
popa
test
mov
jmp
rorl
inc
clc
pusha
xorb
sub
ds
cltd
fwait
mov
xchg
jmp
mov
sub
push
or
in
insb
ds
mov
dec
loopne
in
push
icebp
inc
mov
pop
addl
in
mov
out
pop
xchg
ja
mov
out
outsl
xchg
sbb
fisubrl
popf
adc
or
cmpsl
jp
sub
lock
pop
xor
add
mov
imul
and
mov
dec
mov
mov
add
dec
and
mov
das
enter
xor
lods
add
cmp
xorb
rclb
push
pop
cmpsl
ja
stos
push
xchg
dec
dec
or
sbb
aam
sahf
lea
ljmp
mov
lods
jbe
inc
int3
aam
shll
xor
aaa
push
shll
std
xchg
sub
xchg
mov
xchg
and
pcmpgtb
mov
int3
aaa
sbb
fildll
ljmp
jnp
mov
mov
test
pop
lods
cld
push
mov
cmc
mov
iret
or
in
mov
mov
daa
lods
mov
pop
test
dec
mov
add
push
lea
mov
and
xchg
dec
fstpt
mov
push
arpl
xor
cmp
out
xchg
jbe
xchg
arpl
xor
and
rorl
mov
xchg
aaa
sub
insl
jl
push
insl
enter
std
pop
leave
xchg
jae
gs
inc
outsl
fisubrs
mov
inc
cmp
add
mov
loopne
imul
loop
cwtl
lds
mov
out
scas
into
cs
and
into
test
test
and
pop
inc
inc
push
pop
sub
movb
cmp
out
add
jno
sbb
in
add
pop
stc
cmp
call
pop
ret
sub
rolb
jl
sub
mov
add
je
int
mov
xchg
sbb
pop
pop
imul
dec
mov
clc
lret
ret
sub
out
fidivs
daa
out
in
mov
sub
cld
cmp
movsl
add
insl
jp
mov
cmp
pop
out
out
mov
mov
negb
fisubl
mov
stos
mov
out
push
or
test
mov
add
lds
lods
fldt
dec
pop
pop
cltd
push
aad
mov
adc
push
inc
pop
sbb
lods
lods
add
daa
ds
mov
mov
fmul
mov
adc
fdivr
iret
mov
fmul
add
and
cs
repnz
xchg
fsub
test
cltd
sub
and
lahf
xchg
sarb
xchg
icebp
cmp
push
sbb
sahf
test
out
or
addb
lock
movsl
or
ret
mov
xor
mov
xchg
cs
push
pop
test
negl
cmpb
jl
popf
or
push
test
fbld
or
pop
fwait
das
mov
sbb
jmp
lret
mov
sub
sbb
nop
inc
lret
movsb
jo
cmp
mov
push
lea
mov
bound
jne
testb
pop
arpl
push
dec
les
movb
mov
xchg
iret
pop
aam
inc
fwait
pop
jno
sbb
sub
add
rcr
lret
stos
dec
call
rcll
push
shrb
mov
paddq
shr
push
mov
loopne
inc
out
movsl
shrb
or
orl
loopne
or
movsl
stos
std
add
or
xorl
cmp
jae
jg
lds
jmp
imul
data16
test
or
jmp
xor
ret
fistpll
or
sahf
dec
pop
sub
and
xchg
push
inc
push
mov
into
sub
jne
lcall
repnz
jg
popa
orb
push
loope
stos
int
cmp
cltd
mov
inc
dec
enter
test
addb
in
inc
sbb
dec
push
mov
jmp
pop
dec
mov
das
ja
addr16
push
je
xchg
xor
adc
push
sarb
inc
addr16
fildll
pop
pushf
aaa
dec
in
icebp
inc
cmc
xchg
jp
jae
adc
das
sub
stos
adc
nop
inc
ljmp
jle
pusha
xchg
sub
and
xor
push
mov
gs
and
pop
or
nop
out
mov
push
xor
lret
inc
stc
cltd
push
jbe
sub
and
es
pop
aam
mov
pop
icebp
hlt
mov
cmp
sbb
outsl
movsl
push
loope
jge
adcb
mov
push
xchg
lea
in
or
movsl
jecxz
xchg
and
push
pop
data16
ret
sbb
lret
fstpl
jmp
cmp
fsts
or
loope
inc
shrb
mov
mov
xchg
and
jb
sub
push
cmp
dec
stos
sahf
pop
shll
pop
and
adc
in
test
pusha
negb
push
xchg
inc
fsubs
rcrb
mov
int
inc
adc
pusha
aas
ja
ds
push
in
xor
into
mov
dec
enter
and
cmp
jmp
jo
mov
std
pop
idivb
imul
sbb
xor
add
xor
jg
mov
fs
fadds
addr16
add
inc
scas
push
xchg
xlat
call
pop
add
push
mov
push
lret
lret
push
push
aad
repnz
sbb
jp
cmpsb
xor
fcoml
mov
aad
movsb
sti
mov
iret
jge
clc
fsin
js
sub
push
adc
and
into
daa
clc
sub
icebp
mov
loop
outsb
push
iret
scas
popa
mov
mov
mov
jecxz
mov
xchg
adcl
jg
xchg
mov
cmp
ja
fbld
out
enter
cmpb
push
mov
js
jne
push
orl
fs
sbb
insl
sbb
bound
lret
loope
aaa
repnz
dec
pop
xchg
inc
mov
xor
cmp
mov
mov
lock
in
push
mov
int3
mov
xchg
xlat
pop
call
mov
pop
shrb
sarl
loop
jne
cwtl
ret
xor
fisubrs
push
xor
lds
xor
mov
divb
push
cmp
lock
out
xchg
mov
adc
sub
stos
and
jmp
loop
imulb
push
or
into
lcall
pop
jno
cmp
cmp
mov
adc
jg
xchg
js
sti
push
jg
lcall
push
enter
cltd
mov
add
push
ljmp
xor
in
pop
mov
mov
fstpl
ret
test
sbb
add
daa
mov
nop
lods
xor
enter
inc
inc
jmp
cmpsb
je
inc
jne
int
jae
push
dec
jg
jbe
test
in
sbb
mov
add
push
jmp
pushl
mov
or
fs
and
fcomp
xlat
clc
sub
je
mov
mov
adcb
pusha
jl
pop
mov
jns
and
pop
call
inc
data16
inc
jp
and
xchg
std
mov
pop
std
bound
and
nop
and
iret
es
cmp
dec
frstor
in
fstl
iret
mov
mov
xor
test
sbb
and
mov
sti
jg
sbb
in
lahf
mov
xchg
add
cmc
or
mov
lret
push
out
out
repnz
nop
flds
cmp
and
fwait
into
sbb
mov
xor
mov
test
test
ret
sbb
icebp
pop
ficomps
or
out
xchg
je
pop
into
repz
mov
jns
dec
xchg
mov
fsts
imul
stc
mov
aas
adc
pop
dec
scas
pop
call
fs
xchg
je
add
dec
and
sub
xchg
add
adcl
outsl
inc
or
sub
cmp
in
push
xlat
shll
pop
data16
std
negl
and
out
out
xor
inc
sti
insb
bound
jl
xlat
cli
cli
dec
pop
out
push
pop
jg
push
push
jg
test
adc
outsl
sub
int3
fidivrl
jge
jge
cmp
pop
lods
mov
mov
inc
mov
jnp
pop
cmp
in
push
out
pushf
out
aad
sub
lea
insb
repz
mov
mov
cmp
std
cli
test
cmpsb
push
fists
push
shl
outsb
jmp
out
xor
int3
or
sub
ds
out
shll
xlat
adc
incb
stos
rorl
ljmp
popa
and
sahf
xlat
iret
adc
inc
and
mov
test
or
std
cmc
and
adc
fwait
mov
ja
xchg
aad
movsb
faddp
and
push
lcall
and
inc
mov
scas
jp
and
xlat
xor
adc
mov
scas
xchg
and
rclb
cld
lret
add
add
jo
jecxz
cmp
dec
inc
push
push
mov
bound
icebp
decl
popf
inc
bound
gs
mov
or
pop
stos
mov
dec
int3
ja
xor
jg
out
jl
aas
out
pop
cmp
ljmp
and
daa
clc
jmp
iret
mov
popa
data16
aas
call
lods
cmp
mov
inc
mov
jp
xchg
into
filds
insl
cmp
ret
repnz
mov
mov
xchg
orb
js
fidivs
imul
add
mov
imul
mov
cmp
sete
add
call
xchg
jle
jle
dec
add
inc
or
xor
or
lea
pop
nop
je
jo
repnz
sbb
jp
call
jnp
stos
jns
enter
data16
add
cwtl
cmc
popa
aad
inc
cltd
cmpl
std
imul
fs
sahf
pop
leave
daa
mov
cwtl
mov
push
xchg
push
out
loopne
inc
push
push
shlb
fwait
add
push
xchg
data16
pop
inc
inc
jge
xchg
sbb
daa
cwtl
push
les
xchg
dec
aas
arpl
pop
sub
aad
enter
mov
cmpl
fwait
and
lock
mov
les
dec
aaa
sarb
xor
in
repnz
inc
lcall
stos
jecxz
aas
and
cmpsl
andl
adcb
andl
pop
push
sbb
icebp
jmp
dec
xor
xchg
push
push
xor
test
push
dec
xchg
xchg
in
movsl
add
inc
lock
lods
adc
xor
movsl
sahf
gs
and
repz
in
cmpsb
inc
cltd
inc
rcrl
push
das
cmp
shl
repz
in
ljmp
push
jne
inc
jmp
loop
push
sti
pop
into
scas
pop
rcr
out
pushf
xchg
dec
int3
rol
or
mov
mov
cmpsl
leave
dec
cmp
adc
aam
aam
inc
fistpll
jae
mov
and
lods
insl
mov
pop
lret
pop
adc
aas
aaa
stos
jecxz
out
and
xorb
pop
push
push
test
jmp
mov
out
dec
in
test
mov
jb
test
ljmp
and
push
imull
sti
fidivrs
xor
mov
out
sbb
jmp
out
sub
ret
xchg
outsb
lock
sub
cmp
ss
aas
jo
mov
pop
fwait
jge
repz
mov
add
dec
push
stc
mov
mov
pop
lods
inc
std
lcall
push
sub
inc
inc
je
ret
dec
fiadds
cmp
in
sub
cmp
xchg
xchg
jo
cmove
dec
js
roll
lock
repnz
push
pop
lock
gs
fdivl
bound
aaa
add
push
or
xchg
push
mov
and
and
shlb
lcall
sahf
mov
dec
xchg
xchg
mov
mov
push
cmpb
and
lock
ljmp
push
int3
inc
fs
mov
scas
es
push
int3
mov
pop
in
or
inc
adc
sahf
adc
cmpl
mov
sbb
mov
hlt
cmp
out
lahf
cmp
out
stc
jl
push
les
push
in
add
jmp
adc
orl
rcll
jae
aam
cmpsb
popa
mov
lods
sub
xor
and
stos
mov
sbb
popl
mov
je
mov
push
or
popf
push
aam
xchg
in
or
push
insl
test
mov
xor
jecxz
adc
inc
sbb
hlt
xchg
inc
addl
pop
adc
std
xor
push
inc
out
popf
fidivrs
or
sarb
aam
or
adc
fldl
rcrb
push
fmuls
lods
mov
fidivrl
lret
jmp
xchg
enter
add
sarb
xor
loope
ret
push
jb
mov
out
cld
xor
dec
movsl
jle
push
mov
test
lea
mov
mov
sub
lea
fwait
ljmp
mov
repnz
lret
rclb
sbb
mov
cmp
sarl
incb
ret
ds
push
xchg
mov
jp
cmp
cmp
mov
int
adc
cmp
cmp
push
movsl
xchg
cmp
cmp
xchg
into
jne
mov
cmp
fisubrs
nop
data16
jg
add
in
cmp
mov
xchg
mov
lea
stos
fst
add
push
add
pop
dec
cmp
hlt
in
ljmp
mov
sub
xor
pop
popa
mov
mov
inc
and
jmp
sub
sub
rcll
inc
shll
pushf
or
test
sbb
mov
jae
xchg
sub
cmpsl
mov
sub
jns
test
aaa
xor
xor
sbb
mov
sbb
lock
repnz
shrl
or
repnz
push
xlat
adc
or
and
rcl
adc
lcall
mov
push
push
jb
scas
mov
cmp
int
repz
andb
ret
jo
inc
ret
or
mov
mov
jle
xchg
iret
dec
adc
loopne
sahf
sub
mov
shll
js
hlt
ss
jmp
into
call
roll
cmp
je
repnz
in
xchg
pusha
flds
lret
mov
fmuls
or
jne
stos
fstpl
sarl
ret
cmpsl
outsl
mov
daa
dec
xor
pop
sbb
push
mov
xchg
fsubrp
xchg
mov
inc
mov
xchg
and
les
shr
push
aad
pop
sbb
fadds
mov
sti
imul
stos
xor
cmc
ljmp
fcoml
rcll
shl
sbb
xchg
sbb
mov
adc
cltd
fwait
rcr
scas
scas
rorl
ljmp
adc
and
aas
ss
test
cld
je
imul
push
push
dec
fcoms
sbb
clc
pop
ret
cmp
inc
inc
jns
sbb
stc
mov
shl
aam
aas
les
cmc
or
cltd
dec
xchg
xchg
imul
scas
inc
jmp
sub
gs
adc
es
in
pop
mov
mov
push
or
in
xor
mov
jmp
push
pop
fnstenv
scas
lret
ret
popf
loop
test
mov
aad
jl
hlt
in
xchg
sbb
faddl
testl
es
mov
adc
or
cltd
data16
negb
in
sbb
popa
cmp
das
in
stos
or
pop
jg
xor
data16
or
jno
stos
pop
test
xchg
or
aam
push
aaa
mov
addr16
sub
and
cmpsl
subl
leave
lea
sbb
fidivrl
pop
sbb
ljmp
les
fidivrs
sbb
cmpsb
fildll
mov
frstor
out
adc
imul
xchg
jbe
pop
repnz
inc
push
jle
sbb
sub
push
iret
sub
lods
stos
or
cmp
subb
mov
mov
pop
arpl
jae
xor
or
jl
sbbl
push
in
mov
mov
push
cmp
lds
dec
fsub
xor
aad
loop
in
cmpsb
mov
jns
stc
pop
aam
insb
in
cmpsl
mov
jns
xlat
fs
xchg
cld
xchg
stos
outsl
mov
ds
sbb
orl
or
and
jae
mov
xorl
push
leave
cmp
outsl
sub
inc
and
stos
xchg
push
test
jns
and
push
or
data16
sbb
scas
das
xor
xchg
push
sahf
xchg
add
push
addb
or
cmpb
cmp
imul
xor
rcll
nop
push
enter
xor
or
subl
movsb
mov
and
jl,pt
push
popf
stos
lret
fld
mov
out
cmp
xchg
mov
pop
sbb
adc
xor
push
outsb
or
popf
and
sub
ds
inc
pop
xlat
xchg
mov
cmpsl
sub
inc
shl
mov
push
sub
popf
pop
lret
iret
out
adc
jmp
xchg
addr16
je
daa
jg
ret
xor
jo
cmp
jle
xchg
xchg
push
mov
pop
sarl
mov
dec
add
lea
in
stos
bound
dec
ds
or
sbb
sub
cmp
decb
xchg
dec
les
int
in
and
shlb
push
push
push
out
sub
pop
outsl
arpl
call
jle
jle
sbb
adc
xchg
rcrl
pop
mov
sbbl
mov
cs
jl
xor
out
bound
cwtl
nop
call
jp
xchg
dec
xchg
das
add
jb
nop
outsl
pop
and
shlb
sbbl
and
vphadddq
in
xchg
adc
or
sub
test
aas
and
loopne
mov
pop
out
and
add
mov
jmp
xorl
std
inc
adc
lret
push
or
test
pop
sbb
fs
dec
jo
jmp
daa
das
cmp
fcom
push
jno
fwait
arpl
sbb
data16
pop
jne
pop
js
dec
xchg
and
push
fimull
jo
aas
push
int3
cmp
dec
sbb
and
shrb
gs
insl
or
sbb
dec
pop
push
sbb
adc
adc
pop
mov
test
xor
cmp
sbb
xor
xchg
and
inc
bound
shrl
sbb
inc
ret
outsb
jo
sbb
pop
and
dec
add
mov
imul
inc
xchg
sarb
mov
xor
test
sahf
xchg
mov
ljmp
cmpl
lock
pop
mov
add
sub
out
pop
cmp
fistps
scas
aam
xchg
inc
outsb
mov
stc
popf
imul
icebp
xlat
push
dec
cmp
jno
push
inc
lahf
and
mov
sub
push
add
ss
xchg
jge
mov
cmpsl
mov
sbb
and
adc
daa
push
adc
sbb
pusha
popf
inc
add
lahf
push
cltd
in
jecxz
mov
sub
cwtl
ficomps
fcoms
dec
jnp
pop
pop
lods
test
sub
and
add
pop
cmpsl
cs
out
test
inc
or
or
ss
out
mov
mov
mov
nopl
cmp
inc
fisubrs
push
xchg
mov
xchg
icebp
push
push
jbe
jne
mov
shlb
and
inc
jbe
mov
pop
insb
cmp
sbb
divl
xchg
pop
pop
xchg
dec
jnp
xchg
push
ret
ret
push
dec
pop
pavgb
in
xchg
lahf
sbb
jno
add
rclb
sbb
pushf
add
dec
jp
xchg
inc
cmpsb
movsl
test
inc
cmpsl
shrl
aas
mov
mov
cmp
xchg
mov
pushf
mov
push
ljmp
push
aad
in
adc
aad
pop
push
mov
imul
pop
adc
aaa
in
cmpsb
sar
and
enter
loop
into
fcompl
outsb
push
push
inc
sbb
call
std
mov
sub
and
pop
inc
inc
inc
inc
push
cmpsb
nop
mov
sarb
jae
xorl
inc
dec
xchg
daa
fs
insl
imul
pop
pop
imul
repz
and
lret
stos
outsl
test
adc
mov
out
out
out
dec
push
sub
or
adc
cmp
and
bound
and
test
jne
incb
mov
push
cmc
push
in
dec
out
imul
js
add
shl
pop
sub
jae
popf
arpl
pop
sub
lea
and
ss
jl
sbbb
fsub
inc
adc
into
mov
inc
adc
jo
cmpsl
xor
ret
jmp
aaa
dec
lea
rclb
jg
mov
je
push
and
lods
scas
bound
mov
aaa
pop
cltd
in
mov
in
add
mov
dec
sbbl
mov
pop
sbb
ss
in
sbb
jo
xor
loope
icebp
sub
mov
xor
pop
xchg
pop
aas
icebp
fmul
js
xchg
ljmp
fwait
and
movsl
mov
jp
mov
repz
fdivs
test
test
xchg
shlb
sti
push
fs
movsl
pop
mov
inc
jle
imul
sub
jb
pusha
fcompl
adc
mov
addr16
sarl
adc
stc
pop
sub
cmpsl
fldcw
lahf
rcrb
into
sub
std
mov
mov
dec
push
mov
gs
add
fistpl
scas
mov
xchg
sbb
sbb
push
mov
arpl
stc
jp
mov
sahf
int
inc
fs
xor
into
mov
cld
ja
or
pop
into
pop
jno
add
xor
enter
xor
sub
sbb
push
sbb
push
and
mov
cmp
add
mov
jmp
sti
adc
addb
inc
cs
fcomps
jmp
sbb
sub
aaa
aam
jb
cli
cmp
add
pop
push
pop
pop
mov
push
cmp
push
lds
push
cmp
negb
int3
mov
cld
adc
je
push
inc
lahf
aam
jg
adc
cmp
pushf
outsb
out
stos
icebp
and
clc
int
pop
js
fwait
out
add
inc
jge
lret
jg
sbb
xor
jg
fbld
adc
mov
fisttpll
jb
xchg
push
out
fbld
call
xchg
stos
stc
sahf
xchg
cmp
repnz
call
add
cmp
xchg
pop
das
hlt
mov
lret
out
lret
sub
sahf
addr16
stos
mov
call
or
testl
mov
sub
outsb
dec
xchg
jg
insl
push
jno
roll
flds
filds
repnz
lock
sub
je
dec
xchg
pop
cmp
adc
rclb
aas
adc
mov
xor
mov
fstps
imul
pop
testl
xor
ret
inc
dec
iret
or
je
xchg
test
test
push
in
stos
sub
mov
pop
cmp
outsb
outsl
lret
xlat
mov
mov
lret
fmul
daa
add
mov
jne
jge
test
xchg
inc
xchg
xlat
mov
mov
pop
out
outsb
aas
mov
clc
aas
rolb
or
cli
aam
enter
add
arpl
popa
aad
inc
mov
or
or
add
push
and
call
dec
add
pop
add
xchg
inc
loopne
scas
mov
rorl
pushf
mov
mov
jbe
aad
mov
movsl
push
fildl
mov
cmp
lret
mov
addr16
mov
cmp
fmuls
ja
xchg
jo
inc
ret
jg
cmp
sarl
sbb
lahf
add
in
mov
push
pop
dec
aaa
cmpsl
push
adc
jge
mov
adc
push
fwait
or
outsb
lretw
pusha
sar
push
and
je
lds
mov
cli
and
arpl
jne
enter
add
pop
xor
xor
or
cld
xor
pop
cmp
cs
test
scas
add
mov
test
dec
inc
stos
adcb
push
xlat
test
hlt
pusha
add
adc
lods
sbb
lea
iret
push
or
push
or
and
push
dec
bt
pop
pop
rolb
aaa
jae
push
xor
jmp
mov
rorb
xor
call
mov
lock
loop
push
fbstp
scas
packsswb
and
ljmp
notb
mov
aam
test
mov
test
push
cmp
movsl
aas
dec
cmpsl
ja
lahf
clc
push
xchg
je,pt
adc
cmc
and
push
es
test
and
out
xchg
dec
int
loop
mov
dec
js
add
sti
push
aam
pop
rolb
je
stos
ds
dec
and
jbe
or
shrl
jne
pushf
ja
push
push
pusha
jns
mov
stos
inc
mov
fs
scas
xchg
xor
ja
xchg
pop
sti
sub
inc
inc
sub
sub
xor
mov
dec
inc
lahf
lds
push
les
iret
stos
sub
sub
mov
dec
cmp
sub
clc
into
insl
jle
popa
es
cmp
mov
pop
jb
jl
push
test
les
dec
add
outsb
dec
aas
push
icebp
shrl
lcall
mov
cmp
insb
movsb
sub
mov
and
fs
clc
out
push
push
cs
mov
movsl
mov
lock
push
mov
hlt
lock
pop
fisubl
arpl
movsl
dec
imul
add
jp
push
ret
inc
stos
shrb
fnstcw
dec
xchg
cmp
out
pop
xchg
mov
lea
mov
lock
in
mov
lret
test
mov
fwait
mov
aas
mov
xor
push
dec
push
inc
or
xchg
repz
sti
xlat
sbb
inc
push
dec
ret
movsl
xorl
imul
pop
jae
pop
mov
insl
pop
lret
dec
sub
push
cmp
jbe
cmc
adc
in
cld
push
nop
sbb
outsb
inc
push
ret
inc
ja
out
lea
js
lret
cwtl
dec
cmp
push
xchg
xchg
and
cmp
inc
pushw
aaa
enter
xchg
xor
mov
cmp
in
aaa
or
pushl
dec
mov
and
stc
xchg
shl
pop
mov
inc
mov
movsl
jnp
pop
loopne
push
inc
inc
enter
pushf
and
out
mov
loope
push
jle
cmp
inc
mov
fdivs
add
sbb
mov
mov
and
das
fiaddl
decl
insb
out
lahf
pop
add
jle
mov
decl
mov
cltd
sarl
inc
loopne
subl
inc
push
js
lahf
xchg
jge,pn
jmp
iret
sub
push
pop
fsubl
pop
jno
pushl
cmp
mov
test
int
or
cmp
loopne
movsl
arpl
loop
sub
lods
outsl
icebp
out
outsl
lds
fiaddl
inc
les
ret
or
mov
xor
fstl
lahf
ja
xor
jg
call
xor
lods
xor
pop
dec
push
inc
repz
jns
imul
stc
mov
shrb
test
xchg
in
mov
dec
dec
cmp
out
sub
in
es
enter
nop
enter
xlat
ffree
inc
lds
icebp
das
inc
bnd
shr
or
outsl
fdivl
nop
mov
push
mov
in
adc
jae
and
or
sub
dec
imul
jmp
scas
inc
mov
sar
xchg
shl
sub
fsts
push
and
roll
add
imul
mov
pop
cmp
mov
pop
adc
nop
inc
xorps
inc
movsb
in
test
mov
inc
cmpsl
inc
or
jne
xchg
push
out
xchg
inc
js
mov
aad
xlat
mov
mov
push
adc
out
enter
xchg
push
sub
aam
xor
mov
in
push
je
das
lods
pop
xchg
lods
loop
int3
loop
push
jp
ficompl
adc
dec
cld
pop
push
ja
xorb
mov
add
lods
repz
cmpb
push
lahf
int3
jno
mov
mov
repnz
dec
dec
aas
filds
cmp
push
les
arpl
inc
inc
sbb
cmc
sbb
and
adcl
cpuid
sub
fs
fisubl
push
sbb
test
mov
pop
or
jbe
call
xchg
sarl
ljmp
ljmp
cmp
in
xchg
jnp
fs
push
or
dec
mov
test
sbb
pop
sub
aad
pop
dec
ss
fdivs
xlat
lods
mov
adc
xor
les
into
fxch
xchg
pop
mov
dec
sub
pusha
mov
xor
jge
adc
movsl
mov
adc
out
adc
jl
repz
sbbl
sub
pusha
xor
aad
test
or
or
jecxz
std
arpl
fmulp
xchg
jae
jg
push
cs
mov
ljmp
test
orb
out
loope
out
add
xchg
les
or
aas
or
into
cli
and
adc
stc
fcomps
sbb
daa
in
loop
cmpsl
fadds
enter
idivl
int
xchg
in
pop
inc
sti
adc
ljmp
test
adc
popf
sub
sub
mov
test
fdivl
pop
arpl
imul
cmp
add
iretw
dec
xor
mov
fistpl
push
xchg
mov
pusha
mov
lcall
popl
push
or
stc
pop
push
popa
jno
mov
movsb
fisubs
push
out
pop
xorl
xchg
fcoms
shrl
mov
xchg
inc
and
pop
xchg
sbb
popa
lods
push
mov
xor
jle
add
in
and
inc
aas
in
stos
insl
lcall
es
jae
and
insb
cwtl
pop
and
xchg
inc
pop
inc
fucom
push
mov
sbb
sbb
jno
adc
stos
xchg
sbb
ret
mov
ficoml
mov
mov
sbb
pop
cmp
xor
stos
jbe
fs
call
ja
arpl
jne
mov
shl
xchg
test
lcall
inc
test
adc
call
and
out
mov
ret
shr
push
xchg
xor
pushf
stc
push
adc
and
push
out
movsl
inc
add
and
es
es
and
outsl
xlat
xor
stos
push
test
cwtl
xchg
and
sbb
mov
fcoms
outsb
and
sub
gs
pop
out
arpl
xor
pop
push
pop
jl
lret
cmp
stos
cmc
adc
cmc
mov
push
loopne
into
xor
aam
and
push
shll
stos
fsubs
pop
mov
mov
add
mov
out
std
push
pop
popa
mov
xor
faddl
cmp
popa
push
inc
cwtl
aad
insb
add
imul
pusha
mov
pop
jge
push
call
in
sarb
cli
jmp
imul
xchg
sti
cmp
adc
jbe
push
rep
jae
loop
ret
enter
pop
add
and
inc
lea
aaa
sbb
pop
popa
push
push
or
add
out
rorl
inc
int3
mov
aam
fsub
std
iret
les
sub
xchg
in
lods
add
jno
or
or
or
push
hlt
push
ret
xchg
aam
les
jmp
test
mov
arpl
vsqrtpd
mov
adc
int
cmc
jo
or
jbe
loopne
adc
jb
jns
test
call
popa
jo
iret
push
insl
jecxz
cli
xchg
lods
clc
push
xchg
sti
push
sbb
dec
into
pusha
call
mov
fisttpl
scas
pop
out
outsl
sub
sub
cli
mov
pop
mov
cmp
adc
sub
jne
jge
orb
cld
lea
dec
mov
jecxz
and
movsb
dec
roll
add
fwait
out
sbb
pop
rcrb
les
dec
arpl
or
outsl
ret
lds
dec
lock
adc
inc
js
je
add
in
jb
and
xchg
adc
rorb
and
jnp
idivl
dec
fxch
mov
dec
xlat
mov
mov
scas
cwtl
adc
pop
xchg
aas
mov
mov
inc
call
and
sub
add
ficoms
xor
sbb
xchg
adc
into
jge
fbld
pop
jno
inc
out
push
scas
sbb
fsubs
jl
sti
outsb
pop
and
mov
cmc
mov
mov
subb
lret
mov
xor
adc
mov
clc
cmp
daa
fsubp
popf
js
jns
jbe
mov
hlt
lods
xchg
loop
or
sbb
or
scas
dec
cli
stos
add
pop
fstpt
inc
arpl
call
mov
out
sub
lods
and
test
push
xchg
mov
adc
add
fdivrs
jmp
outsb
dec
push
jmp
out
xchg
or
dec
add
aad
xchg
pop
mov
xchg
mov
mov
adc
ret
adc
dec
jp
jge
pop
in
mov
aam
stos
pop
lcall
cmp
and
in
jg
mov
cmp
add
lret
scas
sbb
lds
push
pop
rorl
negl
sub
push
pop
scas
cwtl
sub
xchg
cli
mov
fldenv
push
mov
pop
sub
popa
orb
mov
or
pushf
inc
push
aas
or
xor
stc
jg
mull
fsub
jmp
mov
leave
scas
jmp
out
pop
pop
fwait
andb
rolb
in
into
incl
xchg
sub
fimull
xor
jecxz
or
stos
pop
pop
adc
call
gs
ret
imul
shll
jnp
hlt
loope
xor
cmc
aam
xor
lds
pusha
sbb
and
xchg
mov
mov
mov
xor
enter
movl
pop
mov
out
stos
movsl
lods
fnstenv
mov
cmpsl
das
sbb
daa
mul
cmpsb
jmp
in
cmpsb
stos
mov
or
pop
push
lret
cmc
xor
imul
out
jb
loop
testl
inc
inc
pop
lcall
push
mov
jle
xor
test
push
fs
outsb
inc
or
jo
xlat
jmp
dec
orl
int
int3
xlat
repnz
adc
pusha
inc
fildl
adcb
push
dec
or
ja
out
cmp
shrb
test
push
xchg
mov
dec
adc
loop
insl
push
and
adc
movsl
movsl
fsubrp
dec
or
leave
cmpb
fnstcw
stos
jo
out
mov
pop
and
jnp
xchg
aas
sub
arpl
mov
push
inc
jns
adc
sbb
mov
out
push
movsb
or
in
lahf
out
pushf
mov
sbb
lea
shlb
jae
icebp
cmp
iret
loopne
or
pushf
pushf
or
and
inc
xlat
sar
cmc
sbb
jp
loopne
jbe
cmp
mov
push
outsb
xchg
scas
insb
sbb
xchg
movsl
iret
jae
fimull
jmp
int3
in
adc
sti
mov
pop
adc
outsl
mov
mov
inc
lcall
push
in
and
sbb
fs
stos
jmp
sbb
cli
icebp
ret
f2xm1
jns
stos
mov
sbb
mov
lds
and
mov
dec
add
clc
dec
jae
testb
mov
dec
sarl
xor
add
add
nop
or
iret
aam
mov
pop
lahf
in
or
pop
cmp
sbb
jp
jle
fwait
test
fst
inc
fnstsw
inc
pop
fucomi
pop
xor
out
outsl
inc
xchg
sbb
mov
pusha
dec
fucomip
pop
sub
cmp
es
std
rol
or
jno
mov
add
xor
mov
xor
je
out
daa
jle
mov
insb
cmp
dec
cmp
outsb
inc
inc
xchg
test
fidivrl
aaa
add
scas
mov
xchg
out
ret
mov
sub
pop
fstps
mov
les
addb
int
loopne
push
jecxz
or
or
pop
xchg
xchg
pop
movsb
push
ljmp
xor
cmp
stos
negl
fisubrl
faddp
lea
rorb
cmp
lret
lahf
ss
xor
xchg
and
stos
jae
pop
addr16
pop
iret
jecxz
outsl
cmp
xchg
dec
jl
ds
push
fcomps
or
jb
mov
dec
sti
lods
mov
call
test
sbb
xchg
inc
jb
mov
leave
mov
push
and
roll
push
inc
sub
adc
cmp
push
pop
std
push
jle
jp
pop
ret
repnz
aaa
clflush
lret
bound
xchg
lahf
jo
pop
jno
int3
fwait
and
outsb
cmpb
cmc
loope
aam
aas
jl
rcrl
xchg
addr16
xchg
xchg
sbb
xor
dec
push
cmp
lods
popf
loope
push
jne
inc
push
push
sub
jbe
mov
xor
cmp
call
cs
pop
xor
pop
or
jae
push
add
jo
iret
and
in
add
and
mov
push
imul
push
cwtl
or
and
nop
clc
sbb
push
lods
mov
in
shr
lea
xchg
jae
add
xor
pop
ja
or
inc
xchg
and
pop
dec
out
rcrb
inc
jo
out
adc
jge
fdivrl
add
and
inc
fwait
xchg
xchg
gs
xchg
mov
hlt
andb
pop
imul
cmpsb
test
lcall
or
add
or
inc
leave
xchg
adc
rcll
stos
outsl
out
inc
in
push
push
cmp
sbb
in
in
and
xor
xchg
leave
mov
cwtl
stos
loopne
push
shl
pushw
inc
fcmove
jno
sahf
cmp
mull
clc
dec
mov
test
iret
divl
cmp
add
insb
jle
pop
mov
xlat
and
mov
or
cmpsb
xorl
iret
jmp
stc
outsb
mov
jno
push
cwtl
xor
or
xchg
inc
sbb
in
mov
frstor
mov
or
outsb
mov
iret
or
fbstp
pop
insb
inc
add
add
jne
or
mov
mov
push
mov
add
aad
inc
out
xorl
popa
mov
push
cld
call
cmc
add
imul
aas
mov
sbb
xor
mov
int3
es
dec
cmp
push
pushf
add
and
cmp
sub
add
inc
iret
test
popf
xchg
lods
and
pop
es
lods
scas
cmp
sahf
push
nop
inc
clc
ror
lahf
and
jo
in
sub
and
mov
sbb
sub
nop
hlt
or
pop
dec
mov
jge
mov
mov
adc
mov
popf
stc
push
lods
pusha
das
lods
lods
mov
jae
arpl
scas
jns
notb
imull
out
cmpsb
pop
rcrb
xor
daa
add
adc
pop
cmp
jno
push
lods
inc
adc
dec
les
fmull
in
jle
imul
popf
mov
xchg
das
mov
push
mov
test
flds
stos
add
call
repnz
shll
xchg
sti
call
pop
das
pop
adc
les
mov
cwtl
xor
lret
mov
ja
sub
bound
cmp
leave
mov
out
rorb
std
decb
xor
xor
rcrl
outsb
mov
cltd
or
mov
adc
fstp
fucomip
mov
cmpl
mov
jne
lock
bound
icebp
mov
or
repnz
dec
int3
out
mov
jge
stc
mov
xor
and
aam
sbb
ja
test
mov
test
sbb
adc
pop
sbb
test
rclb
sub
int
lea
dec
dec
aas
outsb
gs
clc
sub
mov
xor
sub
inc
cmp
add
scas
test
lods
fiadds
and
add
mov
mov
sub
adc
lcall
pop
fimull
cmp
xchg
sub
cld
in
test
inc
fs
lock
adc
fs
mov
inc
les
aaa
sysret
std
test
out
push
addr16
repnz
lds
out
dec
pop
add
inc
icebp
mov
aas
test
xchg
or
add
jg
inc
into
mov
paddb
jo
xchg
adc
or
pop
mov
dec
jne
push
push
dec
test
fucomp
sub
fisubs
test
aaa
pop
call
and
cmp
and
inc
call
insb
jg
cmp
xor
pop
mov
fs
in
out
jl
and
lcall
divb
sub
fdivrs
sbb
dec
sarl
test
sbb
ret
bnd
or
push
add
adc
push
in
mov
adc
lods
arpl
pop
lods
stos
jmp
push
xor
and
and
scas
fs
nop
lds
das
cmp
lds
fs
and
out
dec
jne
or
popf
sub
and
push
sub
mov
mov
lea
adc
cltd
popa
shlb
add
cli
mov
pop
out
sbb
cs
inc
popf
dec
adc
repz
sub
push
mov
aam
outsb
mov
sub
cmpsb
dec
inc
xor
push
movsl
adc
test
cli
pop
ficoms
nop
leave
pop
dec
or
jmp
mov
xchg
jo
sbb
lret
mov
cld
movsl
sahf
lods
dec
iret
cmp
lea
aaa
cmp
pop
fldl
add
decb
orl
mov
sbb
mov
rolb
clc
jle
sbb
sbb
outsl
sbb
int3
add
hlt
sub
adc
push
dec
push
mov
push
sahf
mov
fstl
inc
jns
mov
or
das
add
pop
in
sub
iret
sbb
fdivs
jno
into
jp
shrl
xchg
je
xlat
cltd
xor
icebp
int3
testb
push
and
test
push
rclb
add
push
sbb
fucomi
mov
movb
fmull
mov
and
loop
out
adc
into
dec
ficoms
rsqrtps
mov
pushf
push
in
adc
ret
and
shlb
ds
inc
push
popf
inc
sub
ret
sub
inc
lea
inc
push
mov
pop
sbb
roll
jne
test
sub
jg
add
fwait
pop
pop
fistl
mov
and
mov
jnp
movsb
enter
bound
loop
ss
faddp
fwait
xchg
lcall
jo
and
dec
xchg
dec
or
xchg
or
arpl
sub
sbbb
lods
add
mov
js
jl
mulb
mov
ss
mov
shll
inc
cmp
pop
arpl
repnz
imul
xor
mov
jne
pop
push
sbb
xchg
mov
or
adc
out
pop
add
xor
cmp
mov
movsl
sub
mov
inc
xlat
arpl
pop
mov
pop
mov
add
aam
pop
add
mov
xor
adc
pop
sub
mov
mov
mov
dec
movsb
sbb
adc
dec
pop
aaa
into
push
cmpsl
mov
les
pop
cmp
mov
pop
daa
fisttpll
out
jl
dec
xor
mov
leave
push
adc
insl
and
bound
test
and
sub
xchg
xor
sahf
sbb
push
xchg
mov
fadds
je
into
sbb
jg
lret
and
push
repnz
cld
outsb
dec
inc
jmp
inc
or
lahf
ja
arpl
aas
dec
cmp
and
mov
pop
test
adc
pop
dec
icebp
jp
xor
aam
push
mov
test
jl
in
fcmovbe
xor
fdiv
popf
int3
test
jbe
push
mov
leave
inc
pusha
shll
xchg
call
pushl
push
rolb
or
int
dec
cmp
sbb
popa
inc
pop
mov
pop
sub
popa
in
lock
xchg
pusha
in
sti
adc
and
pushf
outsb
xor
jmp
push
lahf
mov
jmp
lret
mov
cltd
addr16
popa
in
adc
and
mov
lret
sbb
movsb
daa
dec
pop
cwtl
xchg
repnz
rorl
mov
out
xchg
popf
push
les
daa
out
and
or
mov
push
lret
push
int
adc
jo
jp
and
add
mov
daa
aas
push
stos
add
dec
pop
push
stos
mov
jge
sarl
movsl
mov
mov
cmpsb
sbb
fcoms
sbb
loope
adc
cltd
xchg
mov
sub
in
cmp
nop
dec
or
fwait
enter
cld
outsb
add
xchg
sahf
hlt
lods
and
ss
stos
and
push
mov
push
scas
adc
pop
and
xchg
std
loop
pop
lcall
pop
fs
add
imul
stos
imull
dec
cmp
jl
mov
sbb
cmpl
or
popa
test
aas
outsb
lds
out
lea
das
mov
sub
pop
pop
imull
cmc
imul
pushf
jge
or
adc
jmp
lret
negb
fcoms
mov
fwait
cmc
test
cmp
int
mov
and
cmpsl
mov
inc
sub
and
mov
nop
out
test
cmp
fdivs
cmp
dec
insl
push
loop
ret
push
fwait
jp
fisubrl
addl
lock
push
xchg
fidivs
arpl
stos
mov
mov
ret
sub
aas
cmp
adc
fxch
xor
mov
scas
fisttpll
sub
lock
adc
push
addr16
loopne
mov
aam
cli
mov
jne
cs
adc
ljmp
cmpsb
mov
fisttps
test
clc
jecxz
add
pusha
fs
cmp
lcall
imul
add
out
imul
dec
fstpt
mov
cmpb
mov
fnstsw
dec
pop
fdivs
outsb
xchg
mov
insb
repnz
pop
fdivrs
pusha
dec
mov
mov
insb
cmp
mov
int3
xchg
cmp
gs
pushf
flds
xlat
adc
jne
aam
mov
repz
pop
dec
mov
push
popa
es
movsl
inc
nop
mov
cmpsl
mov
xchg
and
test
into
inc
in
int3
or
mov
inc
sbb
mov
nop
into
mov
lods
int3
int3
cmp
mov
sbb
inc
test
sar
xchg
jae
xchg
pop
insl
sub
gs
lods
xchg
mov
insl
jg
loope
out
jo
xor
gs
sub
test
mov
push
push
in
pop
jnp
inc
mov
push
sahf
xlat
and
mov
popf
dec
and
sub
in
mov
nop
mov
jns
ja
lret
sti
imul
insl
dec
test
vshufps
sub
jbe
or
sbb
sbb
out
mov
imul
xchg
insb
push
test
or
pop
push
cmp
dec
mov
ror
int3
mov
inc
cmp
adc
iret
cmp
add
sbb
jle
lea
out
leave
pop
fucomip
addr16
cmpb
iret
xlat
xchg
push
test
int
aad
mov
add
fcomps
xchg
aam
test
xor
leave
lahf
loop
ds
movsbl
sub
pusha
sbbb
cmpsl
popf
fistl
mov
repz
inc
icebp
mov
mov
ja
scas
mov
shll
daa
and
dec
mov
fldt
mov
xor
ror
sub
cmp
jb
imul
sbb
sti
jae
fistps
enter
iret
dec
cmp
push
lea
xor
jns
sti
inc
jnp
push
mov
mov
lock
mov
lods
je
mov
pop
daa
sbb
fcompl
inc
shlb
mov
cmp
jne
and
dec
clc
sbb
lahf
inc
dec
add
popa
mov
jle
sbbl
jge
xchg
es
mov
adc
nop
add
mov
add
in
in
cmp
test
xor
push
aaa
and
inc
mov
insl
ja
lcall
shl
jg
push
cld
imul
lret
sbb
js
pop
mov
adc
inc
int
adc
sbb
ficoms
pop
xor
lcall
rclb
mov
and
daa
adcl
sub
xchg
sub
popa
fs
pushf
xchg
int3
mov
and
fwait
out
into
stos
sbb
hlt
fcmovb
push
repz
mov
jl
xchg
imull
pop
jno
cmp
xchg
pop
imul
xorl
int3
sbb
repz
ret
ss
cs
cli
loopne
ret
jo
icebp
mov
xchg
xchg
or
rclb
mov
mov
movsl
push
test
lock
cmc
ficoml
jmp
lret
pop
fldcw
lret
jb
fmul
mov
pop
push
mov
rclb
xor
push
arpl
add
popa
loope
lahf
cmp
adcl
mov
loop
xchg
je
and
add
mov
enter
sub
mov
xor
pop
lret
pop
icebp
fdivs
mov
ret
cmpl
pop
cli
mov
pushf
dec
jmp
test
xchg
mov
mov
dec
mov
dec
sub
jl
cld
push
mov
stos
add
in
jl
add
add
push
fwait
data16
shll
mov
cmpsb
rcl
pop
mov
mov
lahf
mov
out
or
movsl
jl
fmul
leave
mov
pop
clc
popf
in
fcmove
mov
mov
std
xchg
ret
cmp
and
push
xor
lret
inc
aad
ss
shrl
adc
out
cld
add
xlat
cltd
scas
loop
jge
jno
leave
call
push
clc
mov
popf
adc
ds
fimull
daa
loopne
stos
ds
mov
mov
out
es
aaa
outsl
cwtl
movsb
popf
out
adc
push
aaa
aas
jecxz
insl
mov
sub
nop
dec
xor
shl
nop
mov
dec
push
adc
and
add
pop
dec
aad
lock
push
movsl
jne
rorb
shl
aad
out
push
out
rol
popl
imul
xchg
mov
out
xchg
fs
adc
inc
insb
je
notl
adc
xchg
push
cs
mov
out
lcall
in
inc
cmp
inc
mov
jne
mov
loop
js
xor
mov
outsl
testb
sbb
rorb
jne
in
push
out
test
jp
pop
sbb
sbb
lret
ret
ror
push
daa
outsl
adc
lret
cmpsb
lcall
and
jb
adc
std
repnz
mov
ret
push
push
je
cmc
mov
ret
pop
out
jbe
daa
pop
push
int3
push
rorl
inc
jle
sub
xor
cmp
inc
or
icebp
call
adc
xchg
jbe
push
xchg
mov
out
mov
push
lods
jae
push
mov
mov
sub
mov
insb
or
les
movsl
addr16
imul
or
je
jg
sti
adc
aaa
pop
fs
mull
lods
in
es
enter
int
mov
sahf
mov
nop
mov
jg
sub
test
push
sbbb
notb
pop
mov
and
ss
rcrb
repnz
xor
insl
or
inc
das
stos
imulb
stc
pop
pop
scas
mov
push
leave
add
out
in
sbb
pop
or
mov
cmp
cmpsl
leave
add
mov
popa
je
xor
shll
notb
out
outsb
jp
and
and
push
jb
sarb
mov
aam
ja
icebp
or
push
shll
lods
pop
popa
xchg
lods
push
adc
add
test
out
daa
cmc
je
inc
ror
sbb
xchg
in
sbb
push
push
scas
add
add
lods
js
sbb
cwtl
pop
cmp
push
aam
stos
xchg
cmp
hlt
icebp
pop
pop
fisubl
into
mov
pop
xchg
adc
cltd
imul
popa
sarb
loope
clc
sti
dec
mov
jbe
and
xor
stc
mov
loop
mov
mov
leave
xor
in
orl
js
or
ret
or
ljmp
mov
clc
subl
sbb
and
xchg
gs
test
adc
xchg
fdivl
out
les
pop
sbb
cmp
cmpsb
rcll
psubb
in
push
je
push
inc
test
lods
adc
lods
add
mov
andb
insb
js
or
dec
adc
bound
inc
mov
xchg
shr
pop
pop
dec
add
stos
repz
fsubrl
adc
cmc
bound
mov
inc
movsb
cmp
push
mov
sub
jle
push
jmp
mov
in
push
dec
mov
das
dec
mov
into
xchg
mov
mov
lock
pop
test
lret
and
ss
in
cli
or
jb
sarb
call
stc
and
imul
fldenv
int3
stos
int
xchg
adc
push
aaa
jnp
and
cmpsl
add
cmovno
out
int
repnz
cmp
or
sbb
mov
push
sahf
jecxz
je
scas
pusha
les
and
divl
hlt
test
std
ret
mov
push
jo
jb
xchg
jge
adc
xor
fs
es
push
jae
adc
xlat
js
sbb
cmp
fidivrl
out
xchg
inc
cmp
and
add
cmp
stos
int3
pop
add
or
push
jmp
cli
and
xchg
push
aaa
aam
dec
testl
sub
dec
inc
dec
dec
pop
inc
dec
shl
dec
mov
out
dec
mov
xchg
sub
xchg
popa
ds
cmp
xorb
test
lock
sbbl
or
ja
xchg
imul
xchg
inc
mov
js
imulb
inc
sub
xchg
jle
pop
scas
sbb
jl
pop
adc
mov
lahf
sub
mov
lahf
fidivs
test
icebp
inc
mov
movsb
stos
or
xor
aad
ret
mov
sti
sbb
outsl
sti
push
pop
fmull
std
adc
into
jmp
mov
lods
sti
jns
push
stc
repnz
jecxz
pop
pop
lret
mov
jg
push
hlt
adc
stc
bound
add
dec
jb
sbb
add
addr16
out
inc
adc
test
pop
adc
dec
mov
pop
shlb
pop
xchg
mov
cmpsl
pushf
mov
mov
dec
xor
and
in
sbb
es
ja
repnz
jg
mov
fcmovbe
ljmp
aad
icebp
add
mov
nop
scas
xchg
out
hlt
xor
ret
mov
push
xchg
enter
bound
fisubs
and
andb
cltd
or
lret
jo
dec
inc
lahf
icebp
lcall
repnz
adc
gs
mov
jg
repz
xchg
cmp
outsl
push
xchg
push
outsl
push
cmp
inc
inc
dec
stos
sbb
inc
ja
mov
adc
jmp
adc
out
jmp
inc
mov
sub
int3
mov
push
xchg
loope
in
hlt
adcb
add
sbb
outsb
push
jnp
outsl
pushf
sub
fsts
lea
xchg
dec
lds
insl
out
mov
mov
sbb
jecxz
jno
mov
outsb
lcall
xor
cmp
mov
gs
inc
cmp
test
cld
push
mov
ja
xor
shll
aad
add
fcmovnb
in
data16
in
add
mov
push
pop
jmp
jmp
cmc
std
or
jecxz
mov
hlt
cmp
gs
push
xchg
dec
pop
jb
scas
sub
push
cmp
mov
fimull
je
fistps
ss
and
adc
std
subl
shlb
test
dec
out
ss
push
je
mov
xchg
insb
sahf
push
push
mov
and
fwait
jp
inc
pop
pop
lds
mov
test
loop
fildl
rclb
mov
push
imul
bound
xor
fcmovb
sbb
not
outsl
cmp
sub
addl
mov
fidivs
into
mov
clc
fcomps
shrb
mov
cli
aas
xchg
lret
and
ja
inc
adc
jno
add
in
outsl
clc
push
mov
popf
out
adc
push
mov
fstpt
iret
movsb
int
adc
cwtl
or
lret
push
push
pushf
adc
inc
sub
loop
stc
ds
mov
push
fiaddl
jmp
repnz
lcall
sti
fsubrs
aaa
jns
sbb
icebp
push
hlt
pop
jp
push
es
adc
fnsave
testl
adcl
mov
repnz
cmc
sbb
mov
jae
mov
es
pop
fstpt
outsl
pop
inc
fbstp
pop
jo
inc
mov
push
cmc
loop
push
hlt
out
cmp
int3
pop
sub
dec
mov
pop
insl
jb
xchg
push
movsl
adc
aam
nop
cmc
lds
shrl
in
ds
or
lock
ss
push
clc
xchg
idivl
add
dec
dec
stos
and
fidivrs
and
data16
dec
add
test
pop
sub
and
inc
xor
sbbb
roll
push
lea
daa
mov
pushf
icebp
into
data16
inc
and
aam
lds
les
push
xor
mov
ds
pop
sub
cmp
xor
inc
aas
jbe
test
icebp
and
repz
adc
xor
mov
mov
add
sub
add
adc
sbb
fimull
inc
push
and
mov
nop
mov
repz
in
dec
stos
adc
cmp
sbb
imul
cwtl
push
pusha
xchg
mov
push
pop
push
aaa
xor
out
daa
pop
add
sub
xor
daa
rcrb
dec
pop
jge
inc
dec
push
push
sub
repnz
ret
fmuls
lock
xor
pop
frstor
sub
les
fcom
and
dec
adc
pop
aam
mov
jmp
push
xor
push
lahf
arpl
cmpsl
pop
adc
cmp
aas
xchg
daa
lret
cmpsl
cmp
jl
pop
scas
pop
jp
sahf
popa
pop
sub
or
inc
filds
push
daa
and
iret
movsl
movsb
mov
mov
xor
or
fisttpl
sbb
loopne
xchg
fwait
cmpsb
xor
scas
xor
js
popl
xor
add
push
sbb
iret
or
shl
popf
jle
pop
rep
push
and
cmp
cwtl
fdivrl
shll
xor
popa
test
loope
push
lds
mov
add
inc
out
arpl
lea
pop
test
loope
lcall
sbb
enter
mov
cmp
test
push
or
enter
jns
dec
jne
mov
sbb
andb
es
add
dec
jecxz
xchg
movl
jae
or
pop
ffree
push
fildll
adc
les
fs
mov
cmp
scas
ds
mov
xchg
cs
loop
xchg
dec
ja
fcompl
xchg
or
adc
jb
pop
xchg
bound
inc
fcompp
outsl
sahf
mov
xor
push
inc
je
faddp
hlt
roll
hlt
fiadds
addl
sahf
pusha
mov
movsbl
or
mov
test
push
imul
push
push
test
xor
mov
je
mov
test
mov
sub
mov
das
andl
dec
and
push
xchg
or
mov
int
xchg
gs
sub
outsb
jnp
imul
pextrw
cmp
mov
int
inc
fildl
mov
ljmp
pop
add
add
push
pop
idiv
ja
xor
push
dec
or
int3
outsb
mov
fwait
pop
jb
je
out
push
pop
xchg
add
gs
and
stos
push
mov
add
mov
dec
mov
cmp
mov
xchg
push
mov
negl
adcb
mov
add
pop
fcompl
push
inc
in
repnz
adc
xor
mov
adc
pop
lds
jae
aas
daa
push
mov
mov
roll
sbb
mov
outsb
test
sti
fnstcw
jecxz
js
lods
shrl
sbb
stos
jge
cwtl
insb
neg
cmp
inc
jle
add
xchg
lods
fisubrl
lret
adc
xchg
pop
lods
adc
xchg
fwait
aaa
jns
and
dec
mov
jb
cs
pop
out
inc
mov
add
xor
adc
mov
mov
imul
fisubl
adc
mov
cld
pop
int3
in
push
es
subl
cmp
mov
insl
and
sbb
ja
pop
push
sub
stos
pop
popa
mov
imul
shrl
cmc
sub
xor
xor
xor
js
or
push
adc
mov
mov
int3
push
arpl
lret
loopne
imul
inc
aad
repz
cmp
movsl
dec
sar
es
mov
es
in
dec
push
cmp
in
stc
dec
imul
das
mov
push
scas
push
xchg
out
push
aas
mov
mov
mov
ficompl
lock
pop
fcmove
xchg
cs
xchg
xchg
dec
dec
and
mov
fwait
lret
mov
pop
push
outsb
jp
inc
nop
aaa
mov
inc
inc
outsl
push
out
mov
cli
push
jns
sti
mov
rcrb
test
cmp
lods
fwait
and
and
pushf
mov
jns
fwait
fs
cmp
push
dec
mov
and
inc
adc
mov
jl
or
jecxz
fmulp
jecxz
dec
lahf
popf
hlt
daa
sub
add
mov
adc
loop
shl
dec
add
xchg
xchg
lahf
xor
scas
push
cmpsb
jge
xlat
sti
testl
xchg
push
mov
cmp
add
mov
cwtl
jmp
das
jg
ret
sti
push
mov
inc
sti
cmp
rcrl
mov
xchg
mov
jecxz
in
iret
jg
gs
dec
int
jmp
ss
sbb
xchg
lret
jge
lods
out
pop
or
jno
mov
ss
fdivs
jp
push
push
add
in
shr
cli
dec
out
cmp
js
xlat
fstps
mov
mov
mov
jo
js
adc
jle
mov
xchg
pop
push
xchg
push
aas
xor
dec
sbb
cmp
les
pop
jl
orb
inc
xchg
and
mov
cltd
inc
adc
call
fbld
mov
and
jno
pop
xchg
mov
cli
fsubs
stos
push
ret
call
addr16
push
jbe
xor
stos
pop
iret
out
in
ror
push
js
push
xchg
testb
mov
bnd
jge
dec
ret
xor
mov
in
mov
jae
daa
mov
cld
jg
aam
inc
jb
pop
scas
adc
ret
mov
pop
jmp
adc
and
inc
pop
sbb
scas
sub
adc
ja
pop
jb
sarl
xorb
push
push
or
in
insl
cmp
subl
incl
insl
sbb
jmp
insl
into
xor
shll
dec
sti
sahf
test
jmp
jg
mov
loop
test
xor
xchg
repz
jne
add
jno
fwait
cwtl
enter
sbb
sahf
jl
mov
pop
std
sub
jle
xor
add
int3
mov
push
cmpsl
mov
xchg
sar
in
pusha
add
gs
sub
sub
adc
or
xor
mov
inc
jl
fsubrs
in
pop
es
or
rolb
jb
xchg
es
into
inc
mov
fadd
repz
mov
adc
push
out
and
adc
loop
fs
repnz
outsb
adc
repz
subb
arpl
cmp
or
cmp
jg
push
rcll
xchg
jecxz
add
push
ficoms
mov
xchg
mov
xchg
sub
push
xchg
aas
sbb
jbe
jmp
xchg
ja
cmp
fbld
mov
enter
mov
push
jmp
dec
xor
orl
push
and
aaa
out
dec
sbbb
cwtl
add
loope
lahf
mov
mov
ret
jge
pusha
push
add
sbb
inc
cmp
push
pusha
jmp
sbb
rorl
popa
pop
test
negl
bound
movsb
mov
loop
pop
ss
or
sub
mulb
imul
in
lock
nop
call
xchg
jl
arpl
call
sub
add
or
jbe
or
xchg
ljmp
leave
jle
imul
xchg
aam
pop
or
jo
pop
les
or
cmp
mov
loop
jge
call
and
jmp
sbb
popf
xchg
in
roll
or
out
outsl
mov
ffreep
and
xchg
dec
int
pushf
aas
cmc
ret
xor
nop
notb
cld
insl
adcl
pop
mov
jl
loope
shlb
mov
jae
fisubl
sub
jmp
les
mov
cs
or
repz
pop
dec
rorl
cli
dec
roll
jg,pn
adc
jl
notb
dec
ljmp
arpl
icebp
push
or
pop
dec
jnp
and
mov
test
cli
sub
lgs
lds
mov
inc
or
mov
xor
imul
pop
imul
into
mov
sub
jg
test
add
jmp
orl
in
push
pop
push
sahf
insl
push
mov
add
dec
insb
sbbl
jge
mov
mov
add
xchg
addr16
aam
mov
inc
push
mov
inc
roll
test
js
push
push
cmpsb
cmp
movsb
in
test
bound
fldt
sbb
aam
jae
and
lea
pop
jmp
js
les
loope
sub
mov
mov
jae
ficoml
and
pop
xchg
jno
int3
xchg
and
sbb
mov
and
jmp
fs
push
mov
adc
push
sub
mov
pop
popa
pop
jp
cli
scas
add
outsl
cmpsl
out
pop
sti
mov
mov
push
loope
fcmovbe
dec
sub
cmp
imul
arpl
mov
ret
imul
into
lea
lcall
gs
les
into
dec
js
xor
xor
or
push
adc
pop
xor
mov
jns
xchg
mov
rcl
fimull
cwtl
ficoml
mov
fucom
insb
pop
pop
mov
push
and
xchg
sbb
or
mov
out
scas
mov
repz
xor
insl
inc
xor
movsl
xor
and
ret
pop
int3
xchg
out
das
add
jle
xlat
addr16
fdiv
mov
jmp
adcl
mov
scas
sub
jb
dec
out
push
adc
daa
out
inc
outsb
add
sti
shrb
test
adc
jg
adc
mov
and
mov
cmpsb
js
out
xor
xor
jne
sub
inc
movsb
in
dec
addl
jmp
testb
dec
mov
push
sbb
dec
mov
fmulp
cs
shlb
jno
mov
jge
push
dec
fmuls
mov
in
jns
mov
and
fisttpll
movsb
call
mov
jecxz
mov
xor
mov
pushf
ja
test
push
loopne
sbb
push
mov
mov
repnz
lock
dec
inc
jbe
push
cmpb
gs
jl
mov
test
cmp
loopne
mov
pop
sub
ds
xchg
fsubrp
insl
out
fadd
aam
repnz
call
andb
dec
xchg
fisubrl
ja
iret
hlt
adc
lods
ds
ja
ljmp
mov
dec
and
cmp
inc
inc
cld
ret
cmp
mov
pop
out
xchg
faddl
and
pop
bound
xchg
mov
cmc
pop
xchg
xlat
stos
in
jnp
movsb
jl
mov
test
hlt
out
sub
aaa
in
jl
out
sbb
aam
test
push
mov
in
jbe
xchg
adc
daa
xchg
insb
jne
xchg
cmp
cwtl
jae
cmpsb
pop
fwait
outsb
notl
sbb
lds
ja
fwait
jle
adc
mov
jno
xchg
push
cmpsl
jge
mov
mov
sub
out
mov
pusha
out
ljmp
inc
and
aad
test
outsl
or
push
outsb
stc
sbb
je
loopne
shrl
loop
pushf
cmp
cld
push
orl
mov
xchg
fnstsw
pop
iret
push
int3
rolb
shr
xchg
xor
lret
mov
fstpl
loope
movb
mov
outsb
loopne
jge
loopne
jo
adc
mov
aaa
repnz
mov
cmpsl
lods
adc
dec
cmp
aam
jo
inc
adc
repz
xlat
cmpsb
test
insl
repnz
push
inc
mov
xchg
filds
shlb
add
mov
jle
pop
out
jnp
aam
pop
ror
add
push
mov
fcmovnbe
or
add
hlt
ja
xor
pop
jp
das
mov
cs
in
clc
out
mov
loop
aad
repz
arpl
xchg
push
or
jne
les
shl
testb
mov
inc
sub
pop
lods
pop
push
lods
es
fwait
xor
aam
insl
inc
sbb
or
add
scas
into
scas
mov
xchg
and
push
iret
xchg
jne
or
ficoml
outsb
icebp
lds
mov
inc
add
and
mov
or
mov
arpl
jecxz
xor
sub
sub
iret
dec
pop
pop
sbb
and
into
push
xor
pusha
fdivrl
or
arpl
xor
aas
sub
jl
pop
fs
ja
adc
in
leave
sub
hlt
cmpsb
fstl
sti
imul
aam
add
adc
outsl
mov
inc
pop
daa
sub
xorb
scas
adc
outsl
in
je
or
pop
cli
fcmovne
shl
pop
push
mov
pushf
nop
stc
xor
jno
sub
pop
pushf
or
jmp
and
lret
popf
cli
mov
xor
aad
inc
inc
insb
and
jle
push
fwait
lret
insl
imulb
in
popf
cmpsl
jns
push
dec
jb
mov
cltd
in
aad
inc
jns
fstl
shr
loopne
icebp
add
jbe
imul
insb
push
dec
pop
xchg
inc
cmpsb
pop
in
xchg
lea
les
pop
aaa
and
andl
xchg
mov
lods
inc
add
mov
dec
in
and
sub
xchg
clc
rcr
mov
and
ficompl
imul
and
inc
push
lcall
dec
or
cmp
jle
popf
imul
test
ret
sub
sbb
and
jae
dec
or
mov
pop
ret
mov
jne
fiadds
cli
cmp
xchg
inc
stos
sbb
outsb
xchg
sahf
xor
shll
test
imul
cltd
lods
aad
sbb
stos
xor
mov
adc
loopne
nop
into
adcl
inc
or
fdivl
dec
adc
pop
add
push
jle
fstpl
add
mov
scas
xchg
sahf
mov
shlb
mov
sbb
and
push
mov
sub
adc
jle
xor
nop
mov
push
cmp
mov
jge
push
adc
movsb
sbb
fcompl
inc
mov
mov
mov
mov
push
idivl
adcl
xlat
cmp
and
mov
xor
push
push
mov
push
outsl
and
sahf
cld
push
or
dec
add
enter
stc
addr16
js
add
test
mov
jbe
sbb
push
test
lods
js
hlt
repnz
dec
sub
stc
xchg
mov
mov
fildll
jb
les
outsb
cwtl
sbbl
and
sub
out
dec
inc
push
push
xchg
out
jmp
lods
cmpsl
sub
or
lcall
adc
mov
xchg
leave
pusha
cmpsb
push
jmp
push
cs
out
xchg
int
add
scas
fisttpl
cmp
inc
negb
lcall
dec
inc
jbe
sahf
lret
icebp
xor
pop
mov
adc
pushf
dec
add
movsb
out
mov
pop
mov
rcll
xor
in
sub
dec
jl
sbb
cmp
in
into
ds
shll
in
add
stos
in
int
inc
test
cmpsl
inc
imul
adc
sub
into
pop
mov
pop
inc
shlb
in
xchg
jmp
orb
adc
jp
inc
inc
push
sbb
jp
test
jb
pop
add
adc
pop
jl
lahf
mov
movsb
mov
or
xchg
test
mov
pop
sbb
push
out
ret
sub
call
out
mov
adc
stc
testb
out
arpl
lds
xor
and
mov
sbb
jge
sub
sti
jmp
sub
daa
mov
add
xor
mov
addb
sub
lret
jo
jge
mov
imul
ret
das
roll
clc
jg
repnz
inc
and
adc
inc
insl
push
mov
bound
add
arpl
test
xchg
add
jp
jecxz
jp
test
cmp
sar
jp
unpckhps
fcomps
adc
aaa
push
mov
mov
jne
es
call
xchg
pop
lods
pop
jno
mov
jmp
or
inc
and
cmp
arpl
adc
nop
clc
test
or
sbb
inc
shlb
sarl
mov
mov
sub
and
push
test
inc
xchg
push
fldl
push
movsl
add
pusha
faddl
xor
std
into
ror
dec
xchg
dec
jae
jmp
cwtl
es
jns
sub
mov
imul
sbb
call
pushf
xlat
xor
dec
sbb
cmp
ret
pop
fwait
mov
fcompl
test
jmp
stos
es
ds
inc
add
pusha
fs
sub
or
cmp
xlat
ret
scas
imul
insb
ffreep
in
xlat
lret
loop
or
nop
push
xchg
out
lcall
int3
fstpt
dec
pusha
inc
cmp
pop
and
testb
push
lret
adc
mov
mov
pop
call
lahf
cmp
pop
sub
aad
xchg
aaa
lods
jge
or
sarb
mov
push
clc
lods
adc
daa
xor
push
imul
sbb
scas
test
xchg
mov
rorl
jbe
adc
add
scas
lds
jns
stc
inc
mov
sub
lea
push
clc
pop
push
insl
gs
rorb
or
les
shlb
or
or
stc
inc
int
popl
into
rcrl
loopne
stc
imulb
pusha
pop
ljmp
sbb
movsl
adc
adc
frstor
add
xlat
and
xlat
sub
add
push
xor
xor
call
movsl
mov
mov
mov
sahf
mov
out
mov
cmc
inc
jecxz
xchg
and
mov
xchg
dec
cs
cmp
fwait
dec
pop
adc
fisubl
mov
xchg
push
jp
aas
inc
push
lods
cmp
dec
pop
inc
hlt
pop
jg
ds
jl
add
xlat
push
jno
jbe
rorb
lahf
sarl
and
shrl
or
xchg
aam
add
add
or
xor
cmp
add
divb
sbb
xchg
sahf
int3
jbe
imul
mov
es
out
ss
fwait
cmpsl
pop
and
xorl
cmp
sub
push
add
dec
adc
adc
subl
aam
mov
cmpsb
in
rorb
xor
aaa
sbb
jl
xchg
or
pop
sub
mov
notl
pop
ja
pop
or
xchg
insl
xor
push
push
in
add
lock
pop
testb
nop
enterw
loopne
jae
enter
inc
push
push
ret
loop
js
dec
and
inc
icebp
mov
pop
ret
or
mov
mov
add
cmp
fidivl
sarl
stos
add
sbb
pop
stos
out
xchg
movsb
rcll
add
ljmp
xchg
icebp
outsb
push
mov
push
cs
mov
sbb
repz
daa
mov
dec
or
mov
inc
xchg
mov
fsubs
mov
jb
stos
and
xchg
or
and
dec
mov
adc
sub
xor
mov
jmp
cwtl
in
or
repnz
rcl
dec
jle
jmp
sbb
loopne
fadds
sbb
and
mov
push
movsl
loop
cmp
lock
dec
mov
mov
or
stos
inc
stc
mov
pop
cmp
cld
mov
les
hlt
int
dec
in
ret
hlt
and
push
push
sub
sub
sbb
enter
sub
xchg
adc
xor
and
sub
mov
mov
xchg
xchg
adc
in
or
rolb
roll
stc
rorl
ret
aad
sti
jmp
rorl
out
xchg
in
shrl
negb
fmull
aam
lret
cmp
dec
add
sbb
cs
rclb
push
mov
loopne
mov
jmp
mov
jp
outsb
insl
lock
xchg
cmp
push
push
mov
fistps
mov
mov
mov
bound
je
dec
sbb
aad
xor
dec
cmp
add
jb
call
mov
das
aas
cli
in
incl
shr
inc
repnz
in
iret
sub
cmc
mov
pop
mov
pusha
jg
xor
xor
lods
cmp
into
subb
mov
pop
lods
sub
lods
mov
adc
jl
imul
fdivr
sahf
call
lahf
jnp
push
sarb
fmuls
or
jb
lods
nop
stos
xchg
inc
sub
lods
mov
mov
mov
cmp
push
sbb
xor
jle
push
mov
sbb
jge
out
jmp
sub
inc
test
jno
lret
movsb
gs
inc
xchg
add
mov
loope
xor
sahf
test
sbb
mov
mov
adc
pop
mov
mov
mov
xchg
mov
xor
mov
out
mov
push
and
aad
mov
pop
pop
out
and
dec
pop
push
jg
cmp
push
mov
lret
nop
out
leave
stos
aam
inc
mov
xor
adc
les
cmpsl
ds
pop
aad
mov
pop
dec
inc
or
cwtl
jae
enter
inc
fldt
int
pop
stc
xchg
out
ss
mov
aas
xchg
xchg
mov
rorl
pop
cmp
imul
and
mov
ja
pop
imul
pop
lahf
push
out
mov
lahf
inc
jmp
into
or
js
push
push
sbb
dec
mov
pop
lods
pop
xchg
or
aad
or
lret
iret
xchg
rcll
outsl
cli
out
add
inc
repnz
pushf
sbb
ljmp
test
jno
imul
xor
pop
fistpl
clc
and
ret
sub
sub
jne
inc
repz
mov
mov
ljmp
mov
outsl
mov
push
jecxz
imul
inc
lds
adc
test
repz
sbb
adc
aaa
ljmp
push
imul
jbe
sub
aad
add
push
xor
stos
iret
cmp
dec
dec
out
es
adcb
enter
mov
pop
bound
mov
sti
popa
dec
fidivrl
and
pop
lret
sbb
xchg
xor
sbb
cmp
pop
mov
mov
and
and
lahf
sub
not
cmp
mov
push
cmp
pushf
je
xchg
mov
out
jo
loop
mov
enter
jmp
and
push
into
loope
and
sbb
cmp
int
aam
movsl
sbb
sqrtps
je
jno
mov
cmc
inc
cmpsb
xor
lret
test
clc
or
sti
mov
in
add
jmp
les
pop
out
push
clc
dec
loopne
xchg
pop
sub
push
jge
idivb
jb
inc
jns
cltd
adcl
aas
adc
cmp
mov
fs
repz
sbb
mov
testb
or
jecxz
jmp
push
vpmuludq
dec
pop
adc
es
hlt
jmp
adc
insb
outsb
fimuls
inc
loop
jb
cmp
cmp
push
dec
xchg
in
dec
mov
xor
pop
or
inc
popa
or
sub
sub
xor
dec
mov
push
pop
jecxz
lahf
aaa
es
and
jo
shlb
jbe
daa
inc
popa
mov
lods
jo
cltd
or
popf
push
ljmp
icebp
gs
push
mov
sti
inc
data16
int
and
sahf
or
and
cmp
xchg
cmp
jp
lret
or
int3
jb
aas
mov
std
cmp
stos
fnstenv
jnp
int
test
xchg
adc
clc
pop
aaa
insl
or
ret
adc
dec
add
mov
sbb
dec
nop
aas
jmp
cmp
dec
or
xor
fwait
or
xchg
lcall
scas
dec
outsl
inc
js
jge
jno
jno
or
xchg
sar
inc
cmc
inc
or
test
add
pop
and
adc
inc
mov
test
jb
mov
je
outsl
daa
add
adcl
and
mov
pop
inc
add
in
loopne
inc
xor
stc
and
cmpsl
or
sub
fcmovbe
push
pop
adc
in
pop
test
or
adc
int3
xchg
cmp
js
cmovl
ss
and
outsb
xchg
mov
outsl
push
mov
pop
mov
push
jae
insl
or
and
mov
decb
push
and
cmp
inc
lods
xchg
subb
mov
fwait
int3
cmp
out
mov
clc
push
dec
jo
xor
insl
dec
push
xchg
lret
ret
jae
cld
and
fcomip
fisttpll
ss
daa
nop
cmc
int3
or
clc
cmp
sub
nop
scas
pop
add
jg
xor
gs
sbb
js
pop
and
in
sbb
mov
popa
sbb
clc
fisubl
push
scas
mov
pop
fmuls
lret
sbb
push
loop
jno
or
push
xchg
scas
aad
pop
insl
push
cmc
movb
jl
xlat
mov
std
ja
add
call
es
adc
les
rcrl
ret
inc
xlat
test
jg
jno
push
jmp
dec
pop
cli
xor
cmc
jmp
pop
dec
idivb
jmp
pop
lahf
lcall
insl
fdivrl
jmp
and
ja
push
shlb
js
idivb
outsb
xchg
cltd
cmp
fs
pop
cmc
dec
out
mov
repz
ljmp
fidivrl
or
or
es
jae
xor
mov
jmp
cld
sahf
mov
mov
fists
cs
pop
ret
fildl
sub
sbb
cmc
xor
sbb
pop
fldenv
push
outsl
scas
fcmovu
and
add
das
add
lods
pop
sar
arpl
shl
add
push
add
in
push
xchg
cmp
outsl
cmp
pop
je
xor
mov
dec
mov
dec
adc
movsl
iret
ljmp
addr16
cmpsl
adc
fs
repz
mov
hlt
mov
cmc
cs
mov
out
sub
push
adc
sub
lods
pop
into
jae
test
or
andl
movsb
or
push
sub
aas
jge
call
testb
xor
push
pop
pusha
int
jo
inc
andl
pusha
aaa
pop
mull
int3
pop
fwait
out
int
movsb
pop
xor
sbb
les
stos
lds
lcall
addr16
inc
mov
enter
ljmp
pop
cmpsl
xchg
mov
xchg
jecxz
sbb
dec
sub
std
sub
jl
add
mov
push
out
lcall
inc
cmp
ljmp
sub
pushl
xchg
cltd
dec
mov
push
out
and
push
scas
lods
push
inc
ja
lods
shll
sbb
mov
scas
and
enter
loop
iret
xor
movsl
or
js
and
mov
or
mov
dec
mov
adc
adc
mov
mov
std
adc
rcr
sbb
jg
mov
sbb
mov
mov
sub
rcr
fbld
push
mov
add
jns
add
test
ret
std
test
mov
and
xor
pop
daa
xchg
xor
push
cld
inc
mov
jo
lods
sbb
hlt
mov
test
repz
pop
dec
pop
mov
test
insb
dec
rorb
aaa
jb
aam
stos
pop
sub
mov
xor
and
pop
orb
xor
ret
cmp
add
jl
andl
xor
xor
rcrl
shr
cmp
lods
loop
xor
sbb
push
cmp
xchg
enter
adc
mov
shlb
lea
push
fbstp
dec
mov
sbb
fistpll
sub
push
enter
pop
push
adcb
ljmp
std
xchg
shll
xchg
push
or
ds
sbb
enter
mov
jb
adc
xor
cltd
repz
test
push
cmp
hlt
scas
inc
shr
cmp
dec
test
arpl
or
int
cmp
mov
insb
dec
jg
jo
mov
fimuls
mov
mov
testl
and
in
das
mov
in
popf
out
out
test
xor
xchg
pop
cmpb
in
push
xchg
jmp
sarl
repz
or
mov
mov
filds
inc
mov
inc
ljmp
push
fnstcw
adc
gs
fmul
cmpl
sti
push
in
sub
or
dec
jns
mov
call
mov
cmp
inc
inc
mov
dec
jl
dec
test
int3
das
shl
push
hlt
xor
mov
rorl
push
push
out
movsl
test
fnstsw
dec
push
clc
data16
push
lret
pop
pop
fldl
pop
shll
push
sbb
and
lret
mov
and
jb
fstpt
mov
jbe
cltd
pop
test
and
add
movsl
pop
nop
jle
jno
pop
fs
xchg
mov
stc
arpl
inc
mov
inc
les
sub
mov
das
sub
or
test
sbb
shll
xor
shll
enter
int3
loope
fs
pop
in
cmp
call
cmpb
outsb
or
inc
mov
fsubs
lods
mov
sub
out
pop
pop
jnp
mov
mov
dec
cmp
add
xor
and
push
xchg
jp
hlt
pop
mov
push
aas
sbb
jnp
adc
jne
xchg
es
xchg
es
mov
sahf
loop
push
adc
mov
mov
inc
loope
mov
cmp
and
roll
cmp
sbb
add
dec
ret
xchg
sub
fimull
xor
dec
ljmp
push
jl
xchg
jmp
sbb
repz
int
pop
mov
jo
pop
shlb
in
out
dec
iret
mov
mov
pop
adc
jnp
xor
mov
je
or
cmpsl
pusha
repnz
xchg
int3
mov
cs
xchg
lods
imul
sub
xor
xor
ret
push
imul
cli
arpl
sub
cs
jne
push
mov
mov
inc
neg
or
mov
aaa
push
or
inc
sub
cmc
enter
pop
sbb
insl
xchg
lock
call
xchg
ret
sbb
sub
bound
mov
xor
jle
test
negl
out
iret
or
loope
fdivs
fsubrl
stc
bound
fldl
jno
jo
mov
movsb
push
aas
fcmovb
jns
inc
and
dec
mov
out
ret
rcrb
pop
mov
icebp
packuswb
or
cmp
popf
jno
scas
push
xchg
push
stos
xchg
or
mov
test
mov
cmpsl
mov
xor
popf
ds
sarl
stos
jb
movsl
fwait
and
lds
and
and
inc
xor
and
jg
popa
fisubrs
pop
jmp
add
cwtl
mov
push
sbb
or
cmpsb
fwait
lods
and
daa
sti
adc
adc
jge
push
push
adc
inc
cmp
push
cmp
jge
mov
int3
inc
mul
in
lahf
mov
add
xchg
dec
mov
sbb
out
xchg
test
ljmp
dec
insl
pop
or
pop
in
cmpsb
add
adc
pop
xor
pop
push
test
add
pusha
fnstenv
sub
pop
mov
cmp
out
mov
cmp
insb
mov
jle
enter
in
pop
dec
adc
fiaddl
out
mov
cs
cmp
jp
add
cmpsb
push
xchg
push
mov
push
addr16
mov
cs
xorb
ret
ficoms
dec
loopne
xchg
add
into
jl
ja
sub
xor
mov
aas
scas
int
enter
mov
in
xchg
cmp
jb
pop
adc
cmp
fdivr
add
lods
cli
jecxz
dec
into
or
leave
xchg
or
adc
adc
mov
xchg
xorl
dec
xor
cmp
shlb
xchg
mov
out
add
lahf
jecxz
out
lret
insb
popf
mov
test
outsb
int
sbb
lock
jae
pop
iret
aaa
pop
out
lds
bound
dec
pop
les
cmp
and
jbe
cli
icebp
or
pop
xor
mov
pop
lahf
std
mov
mov
pop
and
dec
mov
in
cmp
sti
aaa
dec
or
daa
rolb
inc
push
out
jnp
imul
mov
jo
fiaddl
mov
int
jge
mov
push
push
roll
repnz
je
cli
add
adc
or
push
mov
pop
mov
cld
stc
daa
add
adc
cltd
sub
lds
outsb
xchg
mov
es
fistps
sub
cs
lcall
jg
or
insl
push
icebp
aad
out
pop
out
mov
je
jle
in
adc
shlb
out
fisubl
push
sbb
add
push
int3
dec
out
mov
mov
pop
pop
inc
mov
cmp
pop
pushf
dec
subl
cmp
adc
subl
xlat
cmpb
repnz
in
cmp
dec
mov
push
ljmp
rorb
js
stc
lds
add
mov
movsb
mov
push
cli
push
dec
or
xchg
mov
loopne
stc
leave
add
aad
fs
sbb
mov
dec
rolb
hlt
fistps
bound
stos
fldenv
addr16
and
es
daa
mov
nop
add
repnz
imul
pop
add
sub
dec
in
sbb
fwait
xor
lahf
js
cmp
movsl
stc
fcompl
in
outsb
shr
popf
inc
movsl
movsl
xchg
xchg
dec
nop
fwait
mov
out
mov
in
inc
cmp
pushf
push
mov
ja
mov
push
inc
pop
in
jae
pusha
dec
nop
adc
stos
pop
mov
push
aas
inc
movsb
adc
test
adc
test
jge
inc
cli
mov
int3
push
pop
inc
cltd
dec
adcl
popf
cmp
lds
or
sub
xchg
in
adc
filds
sub
adc
out
push
and
adc
inc
mov
sbb
in
aaa
cmp
push
repz
fmull
popf
or
cmp
adc
aas
mov
sub
ja
test
inc
mov
push
cmp
lret
lods
imull
rcll
xchg
decb
rorb
jle
mov
and
cwtl
push
adc
cli
mov
jmp
jp
adc
dec
into
flds
rcrl
sbb
sub
fwait
test
mov
sbbl
dec
fcmovne
scas
ret
call
push
sahf
loop
mov
mov
jg
cmc
xlat
push
gs
adc
pop
rclb
test
mov
lea
pop
leave
sbb
adc
cs
pop
cmp
iret
sahf
imul
pop
xor
scas
and
xor
pop
xor
jns
ret
dec
xchg
das
cli
loope
or
mov
xor
cli
xor
and
inc
fnstcw
mov
loop
cltd
imul
sub
lods
xchg
ljmp
lds
in
clc
jge
lahf
pop
insl
pop
xor
mov
adc
cmp
mov
cli
loope
out
add
adc
adc
xchg
out
adc
dec
das
push
iret
adc
push
sahf
pushf
das
jns
jbe
popl
xchg
std
dec
fsubs
fs
sub
push
add
jns
in
pop
inc
iret
mov
jecxz
fwait
jmp
rorl
icebp
test
pop
cmc
ljmp
sbb
mov
scas
int
xor
sbb
xchg
sbb
mov
sub
sub
push
mov
push
adc
push
adc
dec
jmp
adc
adc
inc
mov
sbb
pop
ret
es
adc
xor
dec
loopne
mov
scas
rclb
inc
or
fwait
xor
add
dec
les
cmp
and
pop
sub
imul
cmpsb
sub
push
and
mov
cld
add
test
test
dec
mov
divb
dec
xlat
xor
leave
inc
mov
pop
pusha
cmpsb
out
xor
add
sub
mov
xor
dec
add
into
jmp
dec
addr16
loope
xchg
popf
jnp
outsl
popf
lods
inc
cmc
adc
inc
xlat
inc
repz
repnz
das
inc
mov
add
cmp
sbb
mov
xlat
in
sub
ja
aas
lahf
gs
clc
mov
mull
pop
js
cmp
cmp
cmpsl
jecxz
out
stos
lods
je
dec
mov
add
adc
lock
rolb
pop
mov
into
ljmp
adc
bnd
pop
subl
les
dec
sub
adc
mov
pusha
mov
lcall
sbb
jmp
jl
adc
or
sbb
push
add
jmp
les
xchg
int3
imul
and
lods
inc
cwtl
sbb
inc
xor
lret
jl
aas
cmp
mov
inc
lods
imul
roll
or
mov
add
push
mov
or
xor
subl
push
mov
sbb
pop
dec
data16
mov
enter
sahf
cmp
in
sub
data16
xor
cli
sbb
add
pop
mov
repnz
xor
dec
negl
and
ds
mov
sbb
mov
punpcklwd
push
pop
ret
insl
push
push
push
dec
cmc
mov
in
pop
test
test
rorl
mov
js
stc
mov
sub
cmp
xor
test
aad
dec
cmp
fldenv
stos
sub
pushf
inc
pop
lret
mov
or
fstpl
sbb
loop
lods
mov
lods
or
rcl
insb
nop
out
bound
cli
dec
icebp
shlb
scas
outsb
inc
mov
insb
mov
inc
dec
xchg
xor
sbb
lods
push
fimuls
sar
and
fdivp
push
or
out
test
mov
popa
movsb
inc
leave
lods
and
stc
pop
out
insb
cmova
cmpb
aas
or
movsb
push
push
lea
mov
ds
adc
push
cld
pop
cld
popa
loopne
and
test
cmpl
adc
mul
and
mov
cmp
in
lahf
sbb
and
jle
cmpl
add
xor
nop
pushf
fcomps
pop
push
or
jns
scas
ret
out
adc
ret
mov
mov
repnz
mov
lock
cli
addr16
mov
cmc
les
adc
daa
add
sub
push
mov
fbstp
pop
cmp
rcrl
negl
jle
movsb
rorl
out
cld
ficoml
ret
outsb
xchg
push
ret
or
mov
ds
xor
adc
sahf
call
imul
scas
sbb
sbb
insl
cs
mov
fucomi
cmp
jb
lret
xchg
xchg
sbb
add
mov
out
cmp
jo
adc
mov
fistpl
cmp
mov
out
push
lock
mov
or
dec
pusha
pop
into
rcll
adcb
mov
loopne
push
mov
jno
pusha
sub
xchg
mov
es
fwait
std
lock
popf
pop
enter
and
mov
je
dec
leave
mov
packuswb
dec
lods
ret
inc
ret
sar
loop
outsb
shrb
or
push
inc
shrb
out
cltd
sub
xor
in
rep
mov
inc
insb
xor
mov
bound
push
das
lods
mov
mov
jecxz
out
xor
loop
std
outsb
loopne
fistl
shlb
into
fimuls
cmp
fs
and
ljmp
or
mov
pop
mov
cmp
dec
inc
jae
jle
subl
out
iret
fiadds
or
adc
jl
pop
jecxz
sarl
jb
inc
arpl
adc
add
xor
add
or
push
sbb
and
pop
repnz
mov
dec
or
test
imul
into
xchg
in
shrb
ja
pushf
jbe
ds
push
fs
stos
cs
mov
jl
jb
and
sub
xlat
shrl
imull
gs
inc
jl
and
sbb
xchg
stc
aam
adc
sahf
and
jae
dec
hlt
xchg
out
xchg
fsubr
stos
mov
push
push
mov
loop
sbb
jl
add
mov
jmp
jle
dec
lahf
in
pop
cltd
call
lcall
mov
insb
push
pop
rclb
push
mov
mov
xor
and
loopne
gs
xchg
test
mov
lahf
or
ret
xchg
popf
jl
jno
lcall
adc
aas
or
xorl
shll
or
mov
add
dec
or
dec
pop
cltd
pop
in
divb
xchg
lcall
or
repnz
mov
test
jg
inc
jl
in
lea
clc
add
roll
jl
fildl
pop
push
iret
sbb
lock
fldenv
cwtl
add
mov
popa
ds
sub
cmp
and
lods
or
enter
mov
les
xchg
aad
push
lea
adc
subb
fmul
enter
sub
jge
push
mov
out
dec
cld
jmp
inc
mov
jecxz
and
xlat
and
lods
push
sub
mov
add
pushf
dec
or
and
jg
xor
add
insl
cmp
pop
cmp
mov
sbb
or
xor
sbb
inc
lds
femms
xchg
or
into
sub
inc
andb
xchg
pushf
dec
shl
popf
or
xchg
mov
or
xchg
movsb
stos
ficoml
int3
and
jl
inc
popa
push
int3
sub
push
movsb
cmp
scas
pop
cmp
inc
xor
cmp
ror
std
mov
xlat
add
mov
outsb
jb
or
shlb
pop
andl
push
jge
add
icebp
inc
sbb
adc
push
lock
shll
popf
sbb
mov
test
hlt
dec
adc
mov
lods
enter
or
xchg
push
push
and
insl
out
loop
ss
sub
mov
sub
aas
imul
cli
push
cmp
loop
lret
sub
std
push
pop
xor
adc
ds
ljmp
hlt
test
pop
loopne
in
sub
pushf
je
sub
cld
paddsw
ret
pop
outsl
ret
mov
ss
sub
and
pop
push
push
or
in
or
sub
or
sub
push
and
scas
xchg
and
xchg
idivb
out
dec
jecxz
fnsave
sbb
mov
insb
adc
imul
sbb
cli
in
stos
xor
mov
sti
inc
cmp
sub
lret
pop
jge
xor
mov
mov
mov
adc
cs
in
rcr
scas
xlat
nop
inc
daa
adc
es
adc
inc
nop
cli
into
bound
jo
stc
fcmovbe
adc
int3
subb
aam
mov
mov
lea
or
lea
xor
and
popa
inc
push
iret
mov
test
xchg
call
dec
pop
xor
sub
adc
xchg
lcall
push
push
ja
xchg
popf
pushl
imul
shr
jle
cld
scas
out
imul
jns
cltd
xchg
jbe
lret
mov
jbe
fsubp
sbb
inc
xchg
cmc
addb
inc
nop
imul
sbb
inc
iret
cmpl
push
fiadds
pop
in
mov
les
mov
xor
cs
mov
call
cmc
pop
out
ljmp
push
test
adc
jnp
rolb
inc
sarl
test
cltd
cwtl
fsubrs
xor
mov
push
stc
mov
cmp
scas
outsb
test
pop
pusha
mov
ss
mov
or
aad
or
adc
mov
jno
lods
cmpsb
dec
gs
rcll
and
sbb
mulb
call
adc
push
inc
adc
or
test
cltd
jg
lcall
sti
xchg
retw
add
stos
jae
lods
cmp
mov
mov
inc
repz
add
add
pop
addr16
incl
ret
or
cmp
clc
inc
cmp
iret
in
sahf
push
push
pop
ror
jmp
push
mov
mov
into
outsl
sbb
xchg
out
fistpll
movsl
sub
cmp
dec
mov
push
lods
xchg
rcll
xor
push
cmp
insl
mov
pop
xchg
cmp
insb
test
push
cmp
clc
bound
repnz
add
sbb
mov
jg
pop
jae
adc
testl
jl
enter
cmpsl
in
pushf
cmp
mov
add
adc
lods
push
push
aas
stos
inc
ret
loopne
xor
jl
dec
addr16
push
push
imul
mov
pop
out
lret
xor
loop
cmp
adc
pop
jmp
and
pop
and
xchg
fwait
adc
pop
aad
lock
mov
cli
mov
das
test
push
addb
mov
push
stos
jge
or
sahf
jp
mov
and
test
je
call
pushf
jbe
dec
add
xor
and
lahf
in
cmc
dec
and
adc
sahf
mov
ja
movsb
out
push
test
xor
ret
push
in
dec
push
or
mov
dec
repnz
pop
ficompl
lea
cmp
xchg
inc
lret
iret
lds
loop
xor
mov
sbb
jp
xchg
stos
frstor
sbb
push
fistpll
mov
push
xchg
aaa
test
mov
dec
negb
push
push
adc
lods
cld
enter
lea
mov
mov
push
xchg
push
out
xchg
lods
xchg
sub
ljmp
xor
test
or
iret
mov
icebp
mov
mov
lock
addr16
xchg
add
xor
js
stc
pop
adc
frstor
mov
daa
in
jge
dec
pusha
cld
idivb
testb
dec
ljmp
add
cmp
inc
in
out
add
push
cmp
xchg
add
mov
xchg
sbb
pushf
xor
loopne
pop
sahf
mov
push
iret
adc
push
mov
addr16
dec
inc
testb
lock
pop
aad
mov
stc
push
lds
or
jle
adc
fsubrl
mov
fadds
push
jmp
mov
outsl
loopne
rorl
push
xor
out
psubw
jne
sub
mov
dec
xor
loopne
mov
testl
repnz
aam
addr16
ds
cmp
hlt
inc
sub
jmp
repnz
divb
fildl
subl
js
mov
mov
mov
cmp
lret
hlt
andb
and
dec
repnz
xchg
xchg
out
sub
cwtl
loopne
jmp
insb
das
pop
sbb
inc
xor
adc
xor
neg
pop
or
repz
ss
sbb
cmovs
sbb
jae
sbb
insl
imul
sarb
loop
jl
je
mov
adc
iret
aas
push
mov
shlb
and
pushf
add
cmp
mov
adc
xor
in
xchg
aad
sbb
mov
scas
adc
adc
xor
mov
popa
shrb
xorb
movb
or
mov
sub
pop
adc
outsl
push
lea
dec
shrl
xor
fists
mov
sbb
lods
cwtl
and
aas
mov
int
in
jg
inc
nop
fwait
repnz
pop
fcomps
sbb
jge
cs
push
xchg
loop
add
jno
cmc
or
adc
ja
push
outsb
out
mov
push
sub
out
ret
lods
imul
dec
mov
test
push
outsl
ss
jle
dec
sbb
push
pop
jns
adc
jae
sbb
push
aam
and
mov
push
repnz
outsb
xlat
mov
adc
int
in
sbb
mov
add
mov
and
adc
repnz
add
push
xor
mov
in
mov
adc
inc
sbbl
fdiv
ret
mov
or
int3
mov
aam
dec
mov
mov
mov
xor
mov
orl
stos
add
jg
test
jge
pop
jp
xor
cmp
pop
mov
imul
imul
rcr
add
in
inc
sub
xor
pop
pop
xor
xor
lahf
rcrb
push
sahf
xor
push
mov
fmuls
mov
icebp
pop
rclb
mov
inc
stos
rclb
or
ljmp
sub
dec
mov
sub
bound
adc
sbb
into
xchg
ds
rcrb
jg
xchg
jae
add
imul
outsb
jno
or
shll
je
mov
add
adcb
xor
sub
mov
xor
rcr
mov
rcrb
dec
sahf
punpckhwd
fsubp
mov
fs
sbb
imul
nop
mov
jge
in
jo
jne
inc
pop
jmp
cld
in
inc
dec
ja
pop
stc
adc
sbb
jno
sub
ja
mov
or
add
dec
daa
xchg
popf
push
loope
dec
and
rcrb
sarb
or
jne
jae
and
xor
sub
pop
in
lcall
xchg
xor
add
int3
mov
cwtl
push
adc
jnp
add
jmp
cmp
sti
hlt
inc
mov
mov
xchg
adc
in
arpl
gs
adc
mov
cmp
dec
das
xor
cli
push
xchg
jg
fcomp
out
mov
jp
cmp
xor
pop
lods
imul
cmp
inc
lret
mov
lods
inc
add
mov
les
repnz
and
mov
int
aaa
stc
xchg
mov
xchg
push
push
test
xor
or
xchg
and
sti
jns
dec
test
dec
jns
adc
push
pop
cmc
jp
push
add
mov
decl
mov
add
lcall
and
inc
cmp
pop
test
jns
adc
jge
pop
and
sbb
out
cmpsb
push
lock
inc
es
push
dec
je
scas
lds
leave
shl
outsl
out
aad
jmp
sub
cmp
or
mov
lea
test
out
cmpl
mov
xor
xor
push
popa
fistpll
outsl
loop
jns
aad
mov
inc
outsb
push
xchg
rcr
jno
pop
roll
add
mov
push
xchg
dec
add
scas
push
shrl
js
sbb
adc
mov
faddl
xor
sahf
bound
jle
popf
xlat
orb
aas
xor
xchg
jge
sarb
into
cmc
int
scas
mov
outsb
mov
or
jp
jge
sti
mov
jl
jnp
movsb
mov
cld
out
ret
pushf
mov
inc
mov
inc
dec
xchg
in
jmp
popf
mov
insl
xchg
je
jbe
jnp
mov
add
lods
test
mov
out
push
inc
dec
mov
test
aam
cmp
out
and
jns
cs
fcomip
sti
adc
rcrl
data16
leave
fistpll
arpl
movsl
jae
xor
in
outsb
outsb
sbb
ds
fistps
mov
test
add
clc
mov
jge
out
add
scas
inc
in
jmp
mov
ds
push
in
sub
mov
test
sbb
lea
loop
nop
jmp
mov
push
movsb
mov
rcr
cwtl
mov
sbb
into
fsubrs
add
pop
xchg
ss
push
cmp
lret
mov
pusha
xchg
inc
jmp
imul
fisttps
sub
inc
jge
jns
cmp
pop
lea
in
pop
roll
mov
inc
ljmp
pop
jno
and
dec
mov
test
mov
outsb
inc
in
mov
pushf
or
ja
push
stos
movsl
xchg
ljmp
lret
cmp
sti
and
in
insl
ret
cmp
orl
xor
push
add
xor
xor
rcrl
sbb
mov
push
lods
xor
out
call
dec
aaa
sbb
push
scas
push
inc
lds
cmpsl
orb
mov
outsl
insb
les
xor
mov
ja
ret
xchg
mov
jne
fiadds
pop
in
in
add
cwtl
cli
imul
lods
mov
dec
mov
inc
ja
push
in
mov
in
push
xchg
jg
cmp
xchg
jno
iret
xor
or
cmpsl
lret
ret
mov
dec
outsb
dec
fldt
in
and
outsb
inc
leave
sbbb
dec
andl
repz
push
lea
movsl
sbb
jle
stos
mov
xor
test
mov
fdivrs
js
fucomi
jle
mov
cmp
ret
sbb
xor
pop
mov
mov
aad
leave
leave
sub
shl
addl
inc
aam
pop
push
sbb
lock
push
push
lahf
and
inc
adc
pop
popf
jmp
mov
push
into
dec
jae
adc
packuswb
dec
xchg
pop
je
xchg
enter
push
lret
rol
lret
out
pop
dec
leave
roll
fwait
ret
mov
xchg
sub
movsb
adc
sbb
imul
xor
outsl
fwait
xor
cli
sbb
push
mov
push
xchg
lret
mov
data16
js
mov
cmc
mov
iret
push
jg
in
ja
outsb
ds
jle
iret
cmp
daa
dec
cmp
xor
mov
push
jns
xor
push
aad
das
cmp
sbb
adc
in
cmp
mov
lods
jb
mov
cwtl
push
mov
pop
fwait
int
cltd
cwtl
into
jmp
add
ds
mov
lahf
cmc
jp
pop
pop
dec
mov
push
lods
je
test
out
pop
adc
or
cmp
std
jmp
adc
mov
push
inc
mov
stos
sub
mov
mov
jmp
mov
cmp
dec
imul
mov
loope
dec
mov
add
stos
imul
cli
lock
adc
lock
jmp
loop
dec
leave
repz
mov
lock
mov
push
int3
divl
jecxz
and
loope
xor
test
pop
ret
jecxz
and
dec
shl
movsb
mov
sti
sub
xchg
repz
fwait
leave
xor
arpl
push
ljmp
mov
mov
cmp
adc
mov
fimuls
push
out
test
cmc
dec
cmpsl
pop
sbbb
jns
jb
pushf
pop
xor
dec
or
les
dec
mov
cmp
add
sbb
inc
lret
loop
dec
rcll
insl
je
mov
sbb
cmc
sbb
icebp
xchg
inc
push
mov
or
icebp
in
lcall
or
aam
gs
mov
jge
lock
push
arpl
hlt
cmpsb
mov
scas
push
insb
stos
movb
lret
maskmovq
negl
cmp
push
adc
cli
mov
push
shll
stos
in
sbb
fmull
add
add
add
aam
test
jg
xor
aad
sbb
lret
loope
cltd
dec
lock
roll
dec
and
pop
jo
pop
cmpsb
pop
cmp
adc
mov
movsb
loope
clc
dec
or
push
pusha
sbb
inc
and
xor
mov
test
push
or
pop
add
jg
in
ljmp
push
mov
lea
mov
adc
inc
adc
lea
repnz
out
sbb
cmp
push
or
cmp
in
and
pop
xchg
test
out
test
jge
lea
xlat
mov
xor
inc
jnp
daa
sbb
es
inc
cmp
sbb
flds
inc
sbb
icebp
jl
and
ss
roll
xchg
jge
loopne
push
loope
dec
loope
xchg
inc
inc
sub
loopne
daa
ja
dec
test
sbb
fs
hlt
sub
and
or
shrb
int3
mov
pop
inc
xor
pop
xorl
or
loopne
stc
loopne
shll
mov
cs
sub
pusha
orb
mov
mov
cmp
xlat
cli
shrl
dec
fisubrs
mov
pop
jecxz
loopne
xor
stos
int
mov
out
stos
out
mov
or
adcb
or
lock
add
jns
movsl
aas
fs
pop
sbb
imul
fwait
xchg
fisttpl
rcrb
mov
ficoms
sbb
sbb
pop
fsubr
jb
push
add
mov
or
nop
inc
int3
mov
cmpsl
pop
xchg
pusha
xchg
lea
xchg
imul
lock
std
cmpsl
dec
jecxz
adc
mov
pop
popf
push
lea
add
sbb
insl
mov
outsl
call
jae
fnstenv
clc
sub
adc
mov
mov
ja
push
or
mov
jo
xchg
push
xor
inc
dec
push
fstps
jmp
imul
lret
int3
jae
movsb
jp
adc
or
aaa
mov
xor
test
push
pop
icebp
dec
jmp
inc
int3
arpl
imul
arpl
in
xchg
loopne
sub
lea
sbb
pop
fnstsw
aad
xchg
mov
xlat
in
pop
cmp
lods
mov
jp
inc
loop
ret
pop
aam
sbb
int3
test
lret
jp
fbld
sub
sarl
fst
pop
outsb
mov
push
lahf
mov
in
in
scas
jle
mov
mov
int
push
cltd
xor
push
sub
test
and
pop
push
mov
inc
addb
lcall
xchg
mov
dec
addr16
xor
incb
popa
or
call
test
xchg
jmp
sbb
xchg
ja
xlat
addl
add
mov
or
or
cmpl
repz
clc
or
into
shr
mov
int
pop
cli
xchg
lea
out
push
out
inc
mov
mov
pusha
insl
dec
aas
mov
xchg
inc
add
xchg
mov
scas
sbb
icebp
pop
dec
jno
ret
nop
sbb
aad
xor
cmp
data16
mov
imul
lahf
sbb
dec
adc
sub
les
inc
insl
pushf
jns
iret
insl
es
mov
bound
or
cmp
sbb
loopne
decb
cmc
fidivs
jmp
lcall
enter
xchg
mov
and
popf
cmp
pop
imul
clts
mov
clc
pop
sbb
lret
and
fprem
pop
xchg
icebp
sub
mov
jp
cld
iret
xchg
das
and
push
mov
add
push
loope
add
inc
sbb
mov
pusha
xor
push
xor
loopne
call
mov
push
or
dec
lods
jae
pop
pop
hlt
mov
lods
insl
push
add
adc
or
mov
pusha
dec
shl
lea
lahf
mov
mov
in
and
inc
push
jmp
pusha
lret
jg
pop
ss
jne
mov
mov
js
adc
add
adc
mov
and
push
movsb
push
repnz
std
out
push
jp
enter
mov
jmp
xor
fdivr
aam
into
pop
jle
pusha
jne
in
cmp
scas
xchg
fdivl
inc
mov
lret
ret
xor
pusha
cmpsb
pop
sbb
cmp
push
jno
mov
mov
arpl
lds
push
lods
dec
lods
cmp
sahf
ss
cwtl
shll
mov
das
and
sub
inc
add
adc
call
mov
jae
push
adc
jecxz
mov
cmc
inc
aaa
andl
or
jns
adc
or
int
call
ret
and
test
jmp
jle
mov
into
mov
frndint
xchg
or
cmc
adc
sbb
enter
or
push
jae
loop
adc
sbb
xlat
jmp
push
pop
imul
mov
andl
xor
sahf
mov
inc
and
xchg
or
jge
sahf
int
popa
and
xor
adc
cmp
dec
out
ficompl
adc
mov
push
add
inc
mov
arpl
xchg
stos
imul
lods
fdivrl
push
mov
add
shl
mov
inc
sbb
cmpsl
insb
imul
pop
mov
ja
push
jl
lods
inc
add
mov
addb
mov
call
fsubl
popa
or
mov
xor
rcll
movsl
lret
sbbl
cli
inc
xor
aas
in
in
roll
xchg
lods
loopne
dec
shrb
gs
adc
pop
dec
and
xchg
cmp
ja
mov
lds
push
pop
mov
inc
cmc
divl
leave
imul
movsl
adc
jp
movsl
mov
das
mov
xchg
leave
mov
loop
xchg
inc
mov
ds
testl
cmp
mov
inc
test
sahf
xchg
mov
aad
xor
in
cpuid
jne
jae
xor
xchg
leave
aas
loop
fcmovne
sbb
aad
push
scas
mov
cmp
pop
mov
mov
roll
repz
pushw
pop
add
scas
stos
mov
stos
jmp
pop
out
cmpsb
in
into
cmp
add
repnz
lock
call
ret
cld
call
icebp
fistps
sahf
inc
movsl
mov
xchg
pop
adc
jnp
icebp
mov
scas
mov
mov
xchg
and
in
shll
xor
popf
and
inc
push
sbb
dec
outsb
inc
push
add
jmp
lds
jo
mov
pop
push
mov
cmpsl
sub
nop
rcrl
rcll
xor
fidivrl
and
inc
clc
cmp
bound
push
in
add
insl
popf
ret
out
sbb
pmullw
cmp
sbb
xchg
arpl
sbb
jb
aad
cmp
xchg
jmp
call
xchg
sti
inc
xor
mov
add
inc
dec
sarb
push
stos
iret
pop
inc
add
adc
es
xchg
dec
mov
daa
push
push
fidivrl
inc
jbe
rorl
mov
jno
xchg
xor
outsl
xchg
or
sarl
inc
icebp
xor
inc
inc
jno
in
xchg
ror
nop
mov
test
mov
fcomip
jnp
mov
sub
sub
jl
fnstenv
xchg
push
movsl
in
leave
aas
aam
pop
mov
es
pop
jg
push
movsb
stos
out
or
pop
jecxz
cmp
shlb
out
mov
xor
or
mov
adc
test
mov
out
sbb
fmull
aam
or
pushf
xor
sbb
cmpsb
int3
mov
cwtl
push
jns
je
pop
cmc
arpl
insl
stos
sbb
mov
mov
nop
nop
mov
in
out
or
lea
sbb
xlat
mov
out
pop
insb
mov
sbb
cmp
scas
lds
leave
sahf
sub
fsub
shl
sub
sub
sbb
sbb
movsw
inc
adc
in
adc
mov
test
jmp
cwtl
je
sbb
hlt
sbb
push
jg
jp
imul
jge
sti
xchg
inc
aaa
test
inc
aas
addr16
adc
inc
add
lods
int3
dec
daa
pusha
lret
test
lahf
jle
or
xchg
adc
stc
xchg
fdivs
lock
jl
std
pushf
mov
mov
ret
addr16
in
mov
aam
jg
jge
sbb
xor
push
cltd
int3
xchg
dec
pop
sub
and
mov
mov
push
sub
insb
inc
fcoms
add
aad
mov
insb
sub
fsub
shrl
fwait
xchg
mov
adc
push
ret
pop
push
dec
push
and
add
dec
addr16
mov
insl
repnz
jno
mov
adc
mov
or
lret
outsb
pop
outsb
adc
fs
pop
sub
jg
jmp
mov
scas
jl
push
mov
in
and
mov
mov
pop
add
jecxz
mov
adc
insb
test
mov
adc
xorl
rorl
pop
test
loope
sbb
jp
dec
xchg
shlb
sahf
cmp
nop
sbb
and
outsb
adc
test
int3
ret
pop
int3
adc
ret
les
and
xchg
frstor
lret
jnp
mov
adc
je
push
mov
push
dec
adc
jp
lcall
sbb
mov
lret
ret
mov
call
inc
adc
call
sbb
xchg
xor
mov
pop
pop
mov
das
xor
adc
roll
repnz
adc
bound
dec
ret
loope
cmp
push
add
repz
cmp
into
jnp
cmp
sbb
push
pop
jmp
push
mov
mov
jmp
and
bound
dec
fucom
mov
pop
jle
pop
xor
outsl
outsl
lea
add
fidivrl
dec
enter
hlt
popa
ss
imul
insl
andl
mov
add
mov
mov
bound
notl
jnp
mov
adc
neg
xchg
lret
daa
ror
add
xchg
xchg
jecxz
in
push
mov
xorl
aam
xor
ss
mov
aad
fmuls
mov
mov
jae
clts
pushf
fnstcw
or
jecxz
jge
dec
and
sub
js
dec
lret
inc
mov
dec
push
bound
cmp
mov
ja
rcll
add
lret
mov
xor
in
pop
gs
ss
sbb
rolb
pop
mov
jle
ds
sbb
pop
addr16
pushf
shr
push
inc
movsb
mov
or
mov
pop
ret
xchg
pop
std
jg
fistps
dec
fdivs
mov
xchg
loopne
movsl
fadd
fwait
rclb
cmpsl
into
pop
je
iret
icebp
pop
int3
roll
sub
sarl
xor
or
repz
fisttpl
pusha
iret
vcvtss2sd
enter
ret
jp
sub
pop
pop
xorl
ret
push
push
inc
xchg
and
jne
adc
mov
inc
push
sbb
jl
movsb
inc
jae
divl
mov
clc
cmp
outsl
mov
pop
rcrl
cmpsl
call
call
test
or
add
mov
jge
sbb
icebp
or
divb
loop
cmp
adc
adc
push
add
inc
insb
xor
mov
or
aad
inc
inc
add
mov
shll
test
leave
bound
sbb
cmpsb
movsb
pusha
cld
inc
lods
mov
pop
mov
jg
dec
xor
inc
xor
mov
jno
test
mov
imul
mov
nop
xchg
jnp
out
movsb
call
data16
out
cmc
mov
add
inc
push
inc
arpl
insb
mov
cmp
bound
in
cmp
mov
loope
pop
dec
js
dec
xchg
xchg
cmp
jae
sbb
jge
xlat
mov
mov
inc
pop
sarb
mov
push
subl
and
repnz
loopne
pop
lret
pause
hlt
fmull
sbb
push
cltd
mov
repnz
dec
aas
fcomps
mov
jp
dec
inc
imull
orl
dec
push
lret
leave
pop
popf
mov
adc
inc
cmp
in
cmp
adc
loopne
jae
pushl
or
jmp
lret
lods
sbb
jae
mov
cmp
outsb
push
pop
pop
cli
cmpsl
inc
call
aad
fdivr
jecxz
sti
adc
mov
mov
add
push
push
aad
repnz
lahf
lcall
mov
or
mov
or
movsl
xchg
out
lret
fs
sti
jno
sahf
dec
cltd
es
repnz
shll
cmpsb
fldt
dec
inc
sbb
xchg
push
add
je
test
in
ret
test
mov
jmp
aaa
pop
xorb
and
pushf
imul
jae
add
adc
test
aas
in
inc
into
mov
repz
inc
outsb
popa
add
sub
ret
cmp
sbb
mov
add
mov
xchg
mov
sub
push
mov
ret
hlt
sub
sbbl
in
aam
nop
cmp
sarb
dec
insl
xchg
loopne
dec
xchg
fstpl
inc
add
ret
subb
adc
movl
shl
fwait
ret
lahf
frstor
cld
dec
loopne
mov
pusha
jo
jno
cmp
pop
pop
ss
test
sbb
cli
lds
popf
notb
xor
and
addr16
cmpsb
mov
mov
mov
and
getsec
cli
cmp
mov
adc
mov
or
adcl
fcomip
jnp
push
sbb
jnp
mov
mov
or
test
mov
cs
push
hlt
hlt
popa
inc
movsb
inc
or
dec
loopne
int3
sbb
test
or
rolb
push
mov
cs
dec
in
push
out
jp
jb
negb
mov
insl
add
cltd
stc
dec
xor
testl
sbb
inc
xchg
push
repz
add
cmp
insl
jns
cwtl
cmpsl
test
or
xor
mov
jbe
sub
jmp
das
inc
lahf
sbb
push
jns
movsl
or
subl
push
mov
lds
lahf
xchg
movsl
incl
lods
pop
push
inc
push
popa
push
cmp
and
sub
pop
push
lcall
sub
cmp
ficomps
loop
push
pusha
pop
js
sub
inc
mov
dec
inc
jmp
sahf
loopne
in
ficomps
mov
mov
sub
test
cld
adc
in
or
cmp
mov
or
and
addr16
sahf
cmc
pop
jg
push
sub
movsb
sbb
fstps
cs
push
sti
or
lret
mov
or
jno
andl
push
dec
push
in
fdivl
pop
loop
fs
jno
repz
jecxz
out
jecxz
lcall
pop
iret
or
jae
push
aad
in
push
in
mov
mov
adc
mov
cwtl
mul
adc
mov
jno
in
xlat
sub
leave
inc
add
push
mov
add
stos
pop
xchg
out
inc
je
test
mov
popf
movsl
sti
int
or
inc
push
loop
pop
add
sbb
adc
imul
fisubrs
lea
into
outsb
loopne
pusha
jns
insl
xchg
clc
pushf
je
jno
rclb
xchg
in
mov
xlat
int
insb
psllq
dec
jle
out
fsubl
adc
ret
cmp
push
adc
ds
pop
das
in
test
pop
ss
daa
frstor
std
testb
mov
movsb
sbb
out
call
mov
inc
loope
rorb
mov
sbb
mov
inc
cmp
mov
mov
mov
push
scas
jl
in
stos
shlb
adc
popf
lahf
xlat
rcr
ret
and
mov
mov
ljmp
sti
hlt
add
push
cmp
xor
jbe
push
movsl
stos
fdivrs
mov
test
pop
sub
into
push
mov
mov
orl
mov
mov
iret
jnp
sbb
sub
ds
inc
cmc
mov
push
sub
or
in
and
cmc
and
mov
outsl
sub
xchg
push
and
lock
fsub
cmp
out
int3
int3
mov
or
scas
or
mov
inc
ja
and
mov
bound
push
xchg
icebp
and
mov
ja
loop
icebp
hlt
imul
inc
inc
hlt
jmp
hlt
sahf
js
fldenv
xor
adc
jne
test
sbb
sarl
movsl
mov
test
in
test
or
jno
mov
mov
and
adc
pop
mov
int3
fnsave
sub
pop
cmp
stos
rcrb
xchg
cmp
sahf
mov
sahf
push
sbb
push
je
sub
mov
xor
adc
jno
cmp
hlt
sbb
mov
jbe
lock
stos
jne
pushf
push
scas
dec
in
push
mov
and
rclb
dec
or
das
mov
dec
push
icebp
xlat
xor
mov
out
push
dec
jns
ljmp
push
test
dec
andl
pop
movsl
inc
dec
mov
mov
or
outsb
xor
rcrl
mov
and
pop
ds
lcall
pop
lods
pop
repz
loop
dec
push
subl
lds
sbb
xchg
stc
pop
hlt
sbb
mov
or
or
mov
inc
pop
xchg
mov
lcall
jno
mov
xor
or
or
push
pop
rorb
icebp
xchg
aad
add
int
pop
mov
adc
out
cmp
inc
jns
mov
dec
scas
inc
add
fcompl
insl
cmp
enter
repnz
repnz
inc
gs
aaa
push
jmp
push
insl
jmp
inc
bound
es
mov
pop
fwait
aam
orl
mov
push
fsub
push
lods
hlt
fwait
ss
jle
fstps
and
cmpsl
jne
inc
sbb
gs
or
js
mov
inc
xchg
into
mov
jo
aas
call
scas
mov
mov
and
mov
lods
cmp
xor
push
jle
push
nop
adc
mov
out
sbb
lret
fldenv
sub
dec
loopne
stos
mov
cltd
movsl
in
cmp
mov
fs
int
sub
mov
sbb
adc
jae
push
sbb
mov
sub
lcall
je
out
int
in
outsl
adc
insb
push
cmp
fisubl
shl
dec
inc
and
ret
aas
mov
ret
mov
insl
shlb
pushf
clc
push
add
out
adc
mov
push
push
cmpsb
sub
loope
insl
lret
sbb
fldenv
clc
outsl
out
ljmp
sub
xorb
sub
xchg
cwtl
xchg
dec
stos
nop
mov
dec
leave
stc
out
xor
dec
mov
imul
jae
add
test
int3
sti
jge
out
xchg
xor
inc
mov
inc
enter
dec
and
mov
sbb
push
int
cwtl
int3
pop
mov
add
mov
push
popa
sbb
pop
xchg
jns
push
push
test
sti
lret
cmpsb
xchg
or
fs
scas
decb
fsts
and
cmp
testb
fildl
mov
call
mov
push
aas
shll
mov
aas
shll
je
fildl
pop
je
cmp
mov
adc
outsb
mov
and
ret
sub
int
cmp
jns
imulb
sbb
push
loope
js
fcoms
icebp
ljmp
add
repnz
sbb
sbb
and
mov
lea
enter
xor
lods
mov
and
xchg
xchg
sbb
pop
lds
into
das
stos
xor
and
insw
add
adcl
xchg
inc
xchg
sub
jg
mov
push
push
mov
mov
jb
loopne
ret
cmp
push
nop
xchg
fldcw
es
push
arpl
push
int3
inc
adc
loop
jmp
xchg
insl
jmp
std
shl
enter
out
xacquire
aaa
test
int3
fs
leave
xor
sbb
nop
add
sub
pushf
dec
fcomi
add
psrld
cmp
cmpsl
flds
lods
loopne
clc
cmpsl
jecxz
fistps
mov
mov
push
lahf
les
les
jp
mov
cmp
push
mov
lea
rcr
jo
sahf
xor
sub
push
lret
fmuls
mov
aas
lds
test
fstpl
scas
mov
sub
xor
aad
clc
into
nop
shl
test
mov
sahf
pop
ljmp
mov
jb,pt
add
imul
push
push
ds
ja
mov
add
xchg
lods
jle
dec
cmp
fadd
sbb
or
mov
mov
mov
mov
pop
out
ret
add
lea
fdivs
je
call
xchg
loope
cmp
lock
mov
or
shlb
jle
cli
sbb
add
jle
mov
add
inc
ja
stc
test
iret
lods
out
mov
inc
icebp
ljmp
dec
movsl
repnz
out
repz
pusha
mov
pop
scas
push
push
adc
cmp
mov
fstpt
lret
mov
cltd
mov
xor
xchg
adc
push
mov
aam
stos
hlt
sub
in
jnp
jg
pop
mov
add
sub
dec
aam
sti
dec
xchg
fstl
int3
enter
push
xchg
outsb
jno
pop
sub
js
addr16
arpl
mov
or
shrl
jmp
sbb
cmp
sbb
lret
mov
xchg
xor
sub
nop
icebp
je
sbb
cmp
stos
add
aas
jb
inc
jo
je
mov
div
inc
scas
dec
mov
mov
mov
shrl
jnp
aaa
rcll
adc
cmp
jno
sub
jne
mov
clc
or
mov
push
ret
test
mov
jnp
inc
int
shrb
push
aas
clc
jbe
inc
in
lret
inc
nop
shlb
mov
mov
test
mov
cld
xchg
dec
sbb
stos
jae
jbe
lret
mov
cltd
jmp
dec
fbld
add
fdiv
add
insb
scas
les
int
and
pop
aaa
aam
push
push
in
inc
xchg
inc
inc
or
test
cmp
lret
dec
pop
fists
test
fsubrs
es
test
or
addr16
dec
push
in
popa
outsb
loope
int
lds
mov
stc
or
je
stos
push
sub
cmpsl
data16
enter
loopne
sub
adcl
out
jno
mov
push
jge
and
test
rcrw
ss
in
leave
adc
add
pusha
stc
sbb
loopne
mov
pop
inc
and
je
add
es
sbb
inc
dec
in
mov
sbb
pop
mov
dec
add
mov
push
cli
lahf
je
shl
bound
jle
data16
mov
testl
add
out
lret
rolb
mov
sar
ja
out
xchg
arpl
std
pop
pushf
cmpsb
mov
shrl
ret
into
push
mov
outsl
cmpb
je
inc
inc
mov
loopne
popf
mov
test
fadds
lock
popf
xor
arpl
cmc
mov
or
sub
mov
jp
sti
pushf
movsb
add
jnp
cmpsb
imul
bound
xchg
dec
push
shlb
mov
jmp
stos
jae
ret
rolb
decl
sbb
xor
cmp
adc
pop
and
cmpsl
xor
and
jnp
inc
in
push
xchg
cmp
out
sub
adcl
in
test
inc
sahf
mov
sbb
je
jne
lcall
jp
pop
in
pop
jge
out
inc
loope
lret
nop
dec
sub
or
mov
xchg
sbb
ja
cmp
je
fbld
ljmp
mov
dec
jmp
imul
mov
xor
pop
lahf
adc
into
insl
aas
orb
push
iret
and
dec
pop
std
mov
mov
fs
inc
mov
jmp
int3
and
and
loope
push
outsl
out
push
stc
in
cltd
subl
test
xor
mov
ljmp
sub
xchg
jp
loop
into
lret
mov
aaa
test
mov
clc
xor
jnp
cmp
icebp
mov
cld
out
push
inc
sbb
ret
add
cmp
xor
in
in
mov
sub
movsl
mov
into
lods
ret
int
jge
inc
sub
add
and
or
or
xchg
push
fdivrl
insl
pop
cs
adc
rorl
cltd
dec
mov
cmpsl
jl
shll
fwait
add
in
sbb
hlt
ljmp
xchg
sbb
push
jle
cmpsl
or
dec
dec
mov
inc
xchg
cmp
sub
inc
ss
int
add
inc
adc
and
add
addl
push
mov
das
cmp
flds
sbb
in
test
loopne
arpl
ud0
fstpt
add
or
cmp
or
out
mov
arpl
ret
hlt
and
loop
sbb
aaa
mov
test
pop
mov
pop
xchg
push
mov
cmp
flds
je
pop
ffree
cmpb
imul
repnz
ds
leave
jge
ljmp
mov
xor
xchg
js
cmc
std
fs
dec
cmc
mov
ljmp
aas
or
mov
cwtl
push
rcll
shlb
addb
int3
dec
fidivl
iret
gs
scas
inc
hlt
push
push
pop
lods
mov
or
add
xchg
jne
adc
xchg
fsubrs
mov
inc
cmc
xchg
stc
jecxz
mov
add
and
das
ja
jmp
cld
xor
sub
repz
je
stos
jmp
test
push
movsb
hlt
mov
in
push
cmpsb
lret
hlt
sarl
mov
stos
and
fadds
mov
add
jno
or
test
jp
push
aad
xchg
in
cmpsb
cmpsl
xchg
mov
jno
mov
pop
sahf
pop
push
mov
test
push
jb
cmp
mov
jmp
inc
inc
lret
sub
iret
xor
insb
subl
test
sbb
mov
inc
sbb
negl
movsb
cwtl
icebp
jbe
inc
popf
ja
icebp
cwtl
sub
jno
lods
dec
and
pusha
stc
repz
add
or
mov
pop
mov
pop
outsb
mov
fdivr
lds
mov
mov
outsl
or
dec
cmpsl
jl
xlat
sbb
cltd
xchg
pop
adc
sub
mov
xchg
ss
or
repz
insb
mov
mov
or
sbb
jmp
jo
pop
jb
js
loopne
adc
dec
insl
mov
in
into
rorb
aas
mov
out
cld
add
inc
lahf
adc
test
scas
insl
add
cwtl
add
sub
sub
mov
outsl
shlb
sub
ja
lock
ret
or
scas
mov
stos
push
inc
mov
pop
sub
and
scas
push
sbb
sub
cmp
jb
stos
ret
shll
add
das
cmc
aam
inc
sub
jbe
jp
scas
xor
cli
lds
lret
and
or
adc
jno
ret
arpl
inc
fwait
and
jecxz
mov
jle
sbb
push
sub
les
test
pop
dec
and
dec
jbe
out
lods
sbb
ficoms
das
sub
in
inc
and
scas
mov
repnz
arpl
jb
push
test
add
fmuls
mov
sbb
sub
adc
pop
cmpsb
mov
xor
leave
sahf
add
push
adc
mov
or
pusha
aam
xchg
cmp
add
pop
inc
mov
fildl
dec
xor
fdivs
rolb
dec
and
je
shrb
lock
clc
sub
jne
jbe
in
cmp
adc
lock
jmp
xor
mov
pop
fisubrl
std
pop
js
sub
xchg
pop
xchg
hlt
push
fstpt
and
nop
in
int3
inc
aas
jecxz
rcrl
xchg
mov
or
or
mov
jecxz
xchg
jns
mov
lahf
rorb
or
mov
jmp
ljmp
dec
or
clc
mov
xor
fsubl
sub
or
inc
and
jge
xor
iret
sbb
subl
test
hlt
lock
je
and
mov
and
mov
jbe
mov
pop
sub
mov
les
xchg
adc
jo
sub
imul
rorl
mov
out
inc
mov
ret
adc
lods
push
adc
mov
add
jae
xor
test
rcll
and
pop
int3
or
and
lds
pop
test
adc
adc
add
dec
inc
xchg
nop
mov
mov
ret
fidivl
call
xchg
fucom
add
inc
pop
scas
mov
test
and
mov
cmpsl
lods
and
push
or
imul
je
cmp
stc
push
xor
mov
jb
cmp
and
cltd
repz
add
pusha
iret
pushf
jnp
jmp
fadds
fwait
std
rolb
mov
stos
cli
sbb
scas
popa
lea
add
mov
negl
adc
repz
mov
jge
push
data16
adc
out
outsl
push
add
scas
bswap
mov
pop
das
enter
xchg
xchg
fbstp
dec
push
les
pop
or
mov
in
cmpsb
inc
insl
movsl
and
sub
scas
std
loope
pop
mov
push
xchg
popa
sti
bound
adc
pusha
subl
es
xor
xchg
dec
sbb
fiadds
jo
mov
jns
mov
add
inc
fnstsw
mov
adc
lahf
inc
sahf
mov
xor
mov
mov
cmpsb
insb
or
or
les
repnz
sbb
addr16
sub
cmp
stos
test
mov
inc
ret
jo
loopne
shll
sub
xchg
sbb
mov
dec
sub
mov
inc
aam
repz
cmp
mov
dec
fidivs
lods
xor
neg
xor
mov
dec
test
push
sbb
push
adc
out
and
push
push
dec
jmp
scas
aad
xchg
hlt
aam
dec
popa
leave
mov
in
leave
popa
mov
xor
aas
ja
jmp
mov
pop
shrl
aaa
cmp
pop
mov
pop
js
mov
jo
dec
std
rcrb
cmc
mov
sub
or
xor
fcmovnbe
call
mov
pusha
inc
popf
xor
jecxz,pn
adcb
adc
jno
ret
mov
add
jbe
stc
popf
lret
add
xor
in
rcll
add
pop
pop
mov
adc
roll
jmp
cmp
scas
adcl
ret
in
mov
fdivl
push
es
movsl
pop
xchg
iret
adc
mov
xor
hlt
sbb
and
cltd
dec
add
out
out
inc
sub
mov
sub
push
lahf
xlat
cs
lock
mov
mov
cmp
ds
clc
nop
mov
lods
mov
js
cwtl
int
add
xchg
mov
or
fidivs
jne
aaa
adc
and
sbb
pop
sti
pop
pop
fdivs
cli
movsb
stos
std
roll
or
mov
aaa
test
cltd
jo
dec
cmp
rcrb
inc
add
insl
sub
pop
sub
or
into
jg
mov
cmpsl
and
decl
sbb
fadds
jg
sub
out
gs
pop
call
inc
cmpsl
stos
mov
hlt
lock
jbe
mov
vrsqrtps
addr16
ss
mov
dec
fs
add
xchg
xchg
mov
add
and
enter
lret
inc
daa
cwtl
loope
ret
xor
inc
ss
sahf
pop
sub
sub
cmc
or
test
xchg
inc
mov
mov
clc
inc
mov
std
lcall
cld
stc
jge
inc
outsb
sub
rcrl
rcl
push
push
fnstsw
rorl
push
aas
sub
adc
je
mov
daa
out
test
fistpll
push
arpl
or
cld
mov
add
ret
mov
test
cmp
pop
imul
jnp
andb
jge
mov
and
mov
inc
xor
loopne
ret
cmpsb
sbb
xor
adc
in
sbb
bound
lds
sub
cmova
mov
shlb
jnp
sub
cmp
nop
and
aaa
jg
add
push
sub
inc
cli
mov
subb
incl
fisttpll
mov
jp
inc
std
fnsave
mov
or
lret
movsb
mov
dec
dec
and
xor
push
sbb
xor
stos
cmc
adc
nop
fcmovne
fstpl
dec
jle
leave
sahf
test
jmp
ljmp
imul
mov
and
sahf
add
insl
repnz
sub
sar
scas
in
mov
insl
push
je
pop
stos
fadds
pop
mov
mov
jns
daa
jns
and
push
dec
outsl
icebp
dec
lret
or
sbb
mov
insb
pop
xchg
xchg
leave
jmp
adc
or
mov
outsl
in
xchg
sahf
scas
or
sbb
pop
loopne
data16
gs
add
sti
fildll
enter
pop
popf
adc
or
ret
xor
inc
sbb
fdivrs
ja
dec
leave
pop
or
inc
rcr
jo
test
push
cli
mov
fisubrl
in
bound
push
jl
add
dec
in
xor
sbb
inc
int3
lods
jmp
xlat
scas
pop
cli
push
push
sbb
jp
or
mov
dec
imul
jno
repz
in
les
pop
pop
sahf
sti
push
push
mov
sub
or
sub
mov
sbb
incb
leave
aam
sub
cmpsb
inc
data16
nop
ret
mov
pop
ss
push
std
inc
jno
jns
arpl
mov
mov
mov
lahf
mov
aad
xchg
ds
call
push
mov
fld
lods
shlb
popa
ret
fadd
push
mov
sub
enter
test
popa
movsl
ret
inc
mov
mov
mov
inc
lds
popf
into
test
test
pop
imulb
mov
lahf
lcall
mov
out
cli
xlat
popf
or
and
jae
mov
mov
sbb
mov
xchg
xchg
mov
addr16
dec
shl
and
inc
xor
dec
arpl
test
pop
or
fsts
cltd
imulb
fcomp
mov
sbb
in
or
les
sbb
mov
rclb
jno
ficoms
or
andl
adc
daa
fmuls
lret
lods
xchg
cmp
nop
cmpsb
mov
lods
cmp
sar
pop
clc
sarl
clc
jle
ret
mov
sbb
int
cmp
add
mov
sbb
mov
lock
xor
test
dec
popa
pop
cltd
lret
mov
xor
pop
sub
in
loop
xor
mov
jnp
jae
xchg
test
xor
mov
push
mov
sbb
push
or
stos
cmp
std
inc
stc
and
mov
mov
mov
and
add
stos
adc
mov
jp
pusha
and
repz
lods
movsl
add
push
xor
jae
adc
js
imul
mov
fistpl
and
in
scas
pop
xchg
cli
sbb
dec
push
lock
pop
pop
cmpsl
push
push
aad
jo
xlat
rcll
xchg
call
in
mov
lods
lcall
push
ja
push
sbb
fldl
lahf
mov
scas
les
inc
fcoms
or
push
mov
push
lods
pop
movsb
pushf
das
ljmp
dec
xchg
xchg
arpl
aam
int
add
popa
lcall
jl
hlt
push
xchg
sub
clc
imul
push
insb
or
repnz
dec
lea
jp
movsl
push
std
daa
jno
adc
push
es
fwait
mov
adc
adc
lods
mov
mov
lods
lods
jl
cvttps2pi
xchg
adc
dec
das
sub
add
cmp
aaa
popf
pop
cmp
cmp
rcr
out
imul
sarb
fdiv
inc
cli
mov
mov
out
push
push
cmc
cli
sub
notl
or
sbb
es
mov
out
shl
ljmp
and
decb
pop
mov
dec
cmpsl
ljmp
or
mov
sbb
cld
or
das
sbb
pop
loope
sti
mov
push
jb
dec
push
mov
adc
lods
jecxz
out
in
in
or
stc
inc
out
push
mov
push
les
ja
xor
out
sarl
stos
outsl
and
out
pushf
orl
int
cmp
ds
test
mov
das
in
pusha
adc
loop
not
jg
jns
gs
orb
pop
jo
jnp
or
es
adc
dec
stc
mov
ret
push
inc
fistl
xorl
sti
inc
pushf
std
in
mov
mov
mov
pop
iret
inc
jle
nop
cmc
mov
push
lods
jle
dec
sbb
or
mov
sbb
out
sub
fidivs
mov
pop
movsb
pushf
xor
add
icebp
xchg
mov
or
mov
or
int
xchg
mov
sbb
jl
repnz
add
mov
xchg
xchg
aam
les
inc
ja
adc
add
mov
push
out
hlt
inc
sbb
int3
lret
fildl
inc
xor
jmp
imul
scas
iret
mov
mov
int
test
adc
xchg
dec
jg
ja
bound
in
outsb
cltd
adc
sbb
bound
push
jmp
xchg
push
loopne
xchg
pusha
and
sahf
insb
cltd
pop
icebp
roll
pop
mov
divb
mov
cli
push
mov
daa
xor
sub
ljmp
fnstcw
xor
idivl
xchg
movsb
xchg
adc
lcall
jns
arpl
xor
imul
push
popf
gs
or
push
hlt
jb
sub
movsl
jo
ja
dec
outsb
xor
jecxz
std
aad
int3
call
cmp
adc
imul
pop
pop
lret
mov
and
push
push
dec
cwtl
add
dec
sbb
data16
data16
mov
fldcw
inc
cmp
mov
add
cltd
xchg
hlt
xchg
jp
in
mov
push
xchg
push
arpl
fists
clc
cmpsb
pop
test
adc
xor
in
testb
jo
test
pop
sub
fs
adc
or
push
cmp
loope
call
lret
sbb
jge
fwait
iret
push
jp
jle
dec
or
push
adcl
out
data16
out
sub
or
enter
xor
fs
pop
sub
add
mov
dec
mov
out
add
scas
enter
dec
mov
nop
idiv
xor
rcrb
cwtl
cmp
mull
sqrtps
dec
mov
test
fldenv
cld
fstps
ja
sub
insb
test
mov
xchg
rorb
int
int3
mov
and
push
inc
dec
and
repnz
sbb
xchg
test
aaa
inc
cmp
ljmp
cmp
das
mov
int3
testl
ret
cmp
mov
je
xor
add
pusha
push
mov
sub
sub
and
add
js
mov
xchg
mov
and
icebp
ljmp
test
inc
and
push
lea
inc
cltd
push
icebp
les
dec
adc
dec
fimuls
mov
call
mov
cmp
addl
sti
aam
adcl
mov
xor
insl
mov
mov
fsub
cmpsb
xlat
test
xor
or
inc
mov
xchg
rcrb
cmp
popa
cmp
cmp
sbb
call
jb
sub
push
xchg
mov
je
mov
shl
and
sub
or
xor
sbb
subl
out
adc
roll
ljmp
lds
pop
adc
inc
iret
sbb
cmpb
clc
mov
popa
xchg
push
adc
push
inc
jnp
push
lahf
jge
sub
jge
pop
mov
in
daa
fstps
pushf
jns
pushf
movsb
jo
ret
ret
subl
mov
pop
and
mov
xchg
arpl
mov
shll
xchg
out
notb
xor
adc
test
and
daa
inc
mov
xchg
mov
lods
data16
rol
out
ficoml
int3
mov
sub
jne
dec
push
and
fisttpl
fdivrl
lock
lods
xor
add
stos
sub
lret
imull
jbe
les
sub
jo
add
aad
pop
pop
out
sbb
pop
xchg
or
pop
mov
and
mov
loopne
out
aam
push
xor
scas
xor
xor
xor
cli
fisubl
adc
sbb
vcvtdq2ps
nop
inc
into
cmp
in
sti
jmp
pop
mov
dec
pop
jle
popa
jb
sahf
dec
mov
mov
mov
arpl
fs
in
negb
mov
mov
pop
cmpb
shll
push
mov
or
xchg
push
bound
mov
sub
rcl
sar
sub
mov
scas
pop
mov
mov
lgs
fldl
jg
daa
and
in
mov
cld
cli
sbb
rolb
adcl
dec
ja
stc
xchg
leave
adc
inc
mull
leave
stc
test
mov
adc
and
dec
sbb
call
pop
xchg
xor
fnsave
xor
push
mov
repz
dec
addr16
cmp
sub
cmp
sub
pop
int3
adc
adc
scas
xor
dec
fs
and
incl
cmp
or
test
mov
pop
jge
add
clc
mov
cli
jecxz
mov
pusha
lcall
add
xor
sahf
in
outsl
cmp
inc
movsb
sub
fidivrl
lds
cmp
hlt
rorl
rorl
pop
stc
dec
dec
popa
popa
jbe
mov
das
mov
sub
mov
push
frstor
adc
dec
cmp
enter
dec
sbb
ja
add
and
mov
fdiv
sbb
dec
adc
mov
jle
sbb
adc
sub
outsl
sub
fcomps
dec
enter
icebp
rclb
imul
sarl
pushf
dec
imul
sbb
insb
jnp
repnz
xor
xor
sar
mov
arpl
cmp
xchg
popf
adc
lret
xchg
mov
push
add
jnp
pushf
bound
mov
lea
cmc
sub
movsb
fstp
out
jp
mov
dec
lcall
es
filds
js
mov
mov
dec
lds
lock
enter
add
stos
push
test
mov
pop
scas
addr16
and
inc
or
shr
mov
mov
and
adc
leave
loop
sub
dec
adc
xchg
leave
popa
pminub
or
lds
adc
movsl
sbb
out
mov
cs
jp
sub
and
rcl
or
rorb
cmp
cmc
lahf
xor
ret
int
push
sbb
dec
in
pop
dec
in
std
or
mov
or
in
rcrb
xchg
subb
out
shlb
pop
in
lods
cld
inc
cmpl
sub
clc
jo
lock
add
enter
jecxz
jle
mov
scas
addr16
rclb
lds
popa
iret
pushf
shrl
fsts
mov
lds
mov
adc
or
xchg
int3
add
mov
or
bound
sub
stos
and
mov
xor
arpl
shr
push
adc
aad
mov
push
mov
data16
sub
loope
or
outsl
xchg
lahf
adc
or
push
dec
xrelease
push
xchg
call
lds
lcall
cwtl
sti
ficomps
add
mov
push
test
shll
loope
mov
out
adc
jl
adc
xchg
add
jns
mov
inc
pop
aam
es
inc
movsl
jne
mov
sub
xchg
push
mov
cmp
inc
ljmp
pusha
mov
mov
cmp
jmp
sub
cli
out
inc
cwtl
imul
ror
sbb
push
loopne
std
push
in
std
test
test
sub
xchg
insl
icebp
out
xchg
test
push
js
insl
lea
xor
je
xor
popa
push
scas
fadd
aaa
push
and
fst
add
and
div
cwtl
inc
pop
aam
fldenv
or
push
add
xor
jns
aas
or
nop
lods
xchg
push
loop
cmp
push
cmp
cs
pop
arpl
inc
dec
sbb
cmc
adc
pop
loopne
in
push
push
mov
nop
sub
dec
mov
mov
jl
ljmp
jmp
pop
mov
test
xlat
cmp
aaa
or
sbb
jo
push
pushf
sbb
jae
enter
pusha
out
adc
cmp
dec
int3
mov
jmp
mov
cmp
sbb
xchg
ret
add
cmp
lret
sbb
into
jae
pop
add
or
fsub
push
mov
sbb
loopne
dec
xchg
add
out
jp
or
ror
or
aas
sub
test
sarl
sbb
imul
bound
sub
xchg
and
sub
sbb
loop
dec
pop
aaa
lods
mov
das
fisttpll
mov
fistps
hlt
pop
cmp
xlat
sub
cld
jecxz
add
sbb
fwait
cltd
out
cmp
inc
push
in
loope
es
cltd
mov
movsl
pushf
mov
jecxz
lahf
xor
jb
lcall
push
rclw
pop
jbe
adc
les
into
mov
cmp
shll
mov
jne
in
ja
push
and
clc
push
push
in
jno
cmp
xor
add
sbb
push
out
cmpb
aam
push
jb
fwait
xchg
add
inc
lods
fisubs
xor
mov
fistpll
adc
mov
xchg
sbb
lods
sub
fcmovnu
pop
or
stos
lock
inc
inc
and
inc
adc
mov
mov
pusha
cli
xchg
inc
add
std
dec
inc
fistpl
jl
adc
push
stos
cwtl
sbb
inc
mov
xchg
call
xchg
ret
imul
and
ss
lods
dec
fwait
loopne
mov
fisubl
inc
jbe
je
inc
aaa
aaa
xor
xor
jns
push
xchg
inc
mov
xlat
shrl
aaa
cmpsb
andl
enter
in
and
add
inc
mov
testb
in
outsb
int3
xor
mov
loop
push
imul
mov
movsl
push
pop
dec
fistl
add
mov
pushl
add
dec
rorb
int3
cmpsb
andl
pop
cmpsb
shrb
rclb
xchg
xchg
in
pop
jne
mov
test
sbb
xchg
pop
lahf
lods
dec
sub
lret
in
dec
pop
in
sub
cld
ljmp
shrl
leave
cli
in
iret
leave
maxps
cmc
ret
outsl
adc
aam
je
sbb
and
dec
test
sub
jne
pop
jle
repz
jecxz
lret
mov
adc
push
mov
xchg
shll
jo
jno
outsl
shrl
imul
add
dec
mov
ljmp
or
and
enter
mov
cmp
cmp
mov
pop
roll
int3
cmc
cs
inc
inc
xchg
lock
cltd
popl
fwait
push
push
jae
les
cmp
xchg
xor
jno
mov
stc
icebp
xchg
adc
cwtl
sbb
cs
ljmp
aad
pop
jae
in
js
addr16
fimull
ljmp
ja
mov
mov
fcomps
cmp
dec
test
ret
or
mov
xchg
adc
pop
mov
sub
mov
xchg
xlat
adc
dec
and
cmp
mov
mov
mov
pop
xor
lret
out
gs
push
and
mov
repnz
dec
or
xchg
les
adc
inc
jo
cltd
pop
jmp
pop
mov
repz
mov
movl
dec
sarl
dec
pop
pop
clc
test
leave
push
out
mov
jb
or
and
stos
lods
int
and
pop
add
sbb
outsl
loope
adc
lea
inc
jge
movsl
jo
sbb
sub
push
sub
cmp
jge
xor
mov
enter
dec
push
xchg
sbb
xor
xchg
mov
in
xchg
stos
sbb
lods
repz
ret
ja
and
mov
loopne
leave
mov
scas
sbb
mov
lret
jns
pop
gs
push
push
fsubrs
or
mov
aaa
into
ljmp
fprem1
add
push
fnsave
bound
push
push
mov
jno
fmull
cli
jmp
inc
pop
push
cmp
fwait
pop
call
call
mov
pusha
jg
insb
jmp
inc
lods
adc
or
push
adc
adc
fwait
adc
dec
mov
loope
lock
sbb
mov
sbb
sti
adc
mov
stc
or
scas
xor
in
fmul
jne
sub
dec
ret
push
aaa
sbb
cmpsb
or
mov
test
xchg
or
dec
in
adc
sub
mov
repz
xchg
dec
jae
dec
leave
inc
xor
test
or
sbbl
cs
push
shlb
push
mov
lcall
mov
fucomp
lea
gs
rclb
lret
nop
lret
lahf
and
push
add
mov
mov
xchg
pop
lea
mov
pop
adcb
xchg
cmp
daa
xchg
and
or
inc
jmp
sti
iret
aaa
mov
scas
rcrb
ret
jl
loopne
xchg
jbe
push
stos
mov
and
jb
mov
cmpsb
pop
or
inc
stc
jp
jl
push
inc
popa
les
insb
sub
adc
jae
jno
jecxz
rcl
pop
repz
jo
out
jmp
add
pop
lcall
push
mov
add
stos
xchg
orb
in
jb
pop
mov
movsl
pop
outsb
adc
jnp
pop
fwait
dec
lcall
scas
xor
adc
ss
sbb
adc
sbb
out
std
sub
add
stc
jo
outsl
or
fdivp
ss
lods
or
adc
leave
clc
mov
imul
sub
out
in
jecxz
ss
lods
in
jp
jne
int3
add
out
xor
adc
sub
sub
dec
lods
pop
ret
push
or
decl
jp
in
ljmp
mov
out
xchg
fsts
xor
mov
inc
pop
pop
int
inc
in
jl
ljmp
dec
imull
or
fidivrs
out
out
sahf
or
inc
sbb
mov
jmp
scas
shl
outsb
and
and
xchg
repnz
cmpsl
add
fimuls
or
aad
sbb
ret
out
pushf
pop
cmp
sub
pop
mov
push
aad
jge
add
inc
push
dec
xor
sub
mov
test
lahf
ljmp
adc
stc
cmp
xor
std
int3
jne
push
cmpsl
ss
inc
fld
dec
mov
fcompl
push
fwait
insl
icebp
sbb
stos
pop
add
ja
mov
inc
fcmove
jl
das
lahf
daa
aam
fldt
lea
mov
jne
inc
testl
sub
cmc
lds
outsb
in
fists
lea
jg
xlat
out
mov
jne
popf
gs
lds
sbb
dec
xor
mov
dec
adc
add
stos
adc
and
cmp
xchg
in
or
or
loopne
in
dec
gs
aam
push
repnz
push
mov
push
mov
je
fists
xor
leave
pop
gs
mov
push
roll
sub
jbe
mov
mov
pushf
mov
cmp
dec
sub
mov
or
out
adc
iret
testb
lret
or
lcall
xchg
aam
mov
in
fmull
cld
sub
dec
fcomps
imul
sti
xchg
pop
jns
jns
adc
pop
mov
push
cmc
stos
repnz
push
call
jg
mov
pop
shll
lock
dec
cmc
jp
dec
adc
xlat
jp
mov
shlb
mov
and
add
ja
jne
add
cwtl
cmc
dec
xchg
ss
mov
fdivrl
daa
cmp
mov
mov
cmp
and
mov
mov
fnstenv
sbbb
cli
jmp
sbb
call
or
imul
push
lock
mov
jp
das
filds
dec
out
out
daa
fucomip
mov
sub
int
js
and
std
and
mov
aam
adc
dec
and
and
xor
push
add
dec
pop
ret
js
push
jae
in
lcall
push
dec
mov
js
arpl
fld
jg
add
push
adc
jae
je
sahf
stos
pop
sbb
fldenv
mov
ljmp
push
mov
adc
fiadds
hlt
ja
je
jl
xchg
lret
subb
push
pop
lock
ret
push
bound
cmp
nop
inc
dec
paddusw
daa
fcomip
sub
movsl
mov
popa
mov
les
inc
jge
jno
or
insl
sub
in
pop
mov
faddl
pop
and
inc
jae
imul
leave
hlt
bound
in
mov
dec
ficompl
fldcw
shrl
xchg
ret
xchg
movsl
decl
cmp
mov
lret
popa
imul
jns
xchg
outsb
cltd
jge
dec
jmp
std
mov
loop
aam
int3
adcl
aad
cltd
insb
lret
push
mov
and
aaa
add
push
mov
addr16
shll
sti
mov
rclb
sbb
xchg
mov
pop
mov
shrl
addr16
and
push
xor
xor
movsb
repz
in
push
fsubrs
fucomi
jecxz
xor
addr16
int
dec
lcall
lret
lret
aaa
test
and
mov
push
inc
sub
dec
cmp
orb
dec
sbb
xchg
jge
out
or
or
inc
ja
xchg
dec
mov
adc
cmc
ja
test
hlt
push
jns
inc
int3
push
adc
movsl
inc
outsb
cwtl
xchg
lods
inc
int3
adc
rclb
jnp
pop
cmpsb
popf
dec
push
jp
and
mov
push
jns
inc
dec
jge
xchg
lcall
aam
sbb
sbb
sub
mov
add
roll
inc
sar
lea
dec
jbe
xchg
pop
adc
shll
out
push
mov
xor
cli
in
push
fildl
f2xm1
shrb
adc
ror
or
push
movsl
sarb
jo
jae
cli
roll
insb
aad
mov
mov
adc
adc
loope
cmp
or
dec
inc
inc
inc
xorl
mov
mov
xchg
outsb
sub
rol
outsl
int3
inc
mov
movsb
ret
pushl
and
insl
ficoml
dec
sbb
stos
cmp
or
jge
sbb
push
sub
jg
lret
dec
pop
movl
lods
adc
lahf
mov
pushf
sbbl
jnp
test
xchg
out
pop
dec
jne
inc
xor
movsl
inc
sbb
pop
push
cltd
aam
adc
adc
fmul
xchg
sbb
daa
jnp
fchs
out
jae
sbb
shl
test
mov
adcb
sbb
xchg
mov
dec
xor
test
xor
popa
sub
sarb
shrb
mov
push
xor
push
adc
popa
test
out
pop
sbb
ss
loopne
daa
repnz
sahf
cs
lret
or
rcrl
mov
fdiv
push
add
sub
pop
test
fwait
push
mov
mov
stos
rclb
aam
sbb
fidivs
cwtl
fbstp
lret
sbb
jmp
dec
xor
shrl
fld
jnp
lds
in
aaa
sarb
push
mov
mov
ljmp
arpl
cld
leave
sbb
sahf
pop
popf
ret
incl
test
inc
imul
fisttpl
and
stos
loopne
and
mov
adc
and
sub
inc
dec
adc
or
jp
mov
ljmp
cltd
dec
icebp
push
and
jp
pop
inc
jecxz
lock
mov
inc
int
xchg
in
orb
xchg
mov
xor
imull
inc
jae
jae
movzbl
pushf
push
into
pop
jg
imul
test
pop
add
or
orl
adc
or
sbb
mov
leave
jae
imul
dec
cmp
xor
cmc
mov
or
lret
adc
jp
sbb
iret
push
sub
xchg
imul
fsts
stos
xchg
jmp
leave
icebp
add
pop
loop
ss
mov
jge
lock
mov
inc
inc
cmp
daa
fmul
or
fsubrl
mov
xchg
pop
pop
shl
int
insb
sbbb
dec
repnz
lret
inc
and
mov
cmpsb
cmp
cmp
xchg
pop
inc
cmp
cli
imul
xlat
mov
test
xor
scas
xor
gs
add
mov
push
pop
xor
push
xchg
icebp
fwait
jbe
mov
jb
call
xchg
cltd
inc
fstpl
in
pushf
aaa
loop
fwait
sub
adc
xor
pop
adc
jae
or
dec
pop
flds
aam
jmp
popf
cmp
repnz
adc
in
hlt
xor
sahf
adc
inc
xor
mov
add
inc
nop
sub
repz
or
idivl
test
popf
add
xor
daa
mov
popf
subl
fldt
xchg
pop
xor
sbbl
xlat
aam
jnp
xchg
inc
daa
and
imul
clc
xchg
sbb
cmc
aas
cmpsl
outsl
mov
int
insl
js
and
cmp
dec
les
cli
fists
push
gs
in
dec
int
pop
loopne
rclb
mov
arpl
aad
mov
xchg
inc
or
lock
pop
or
mov
adc
mov
and
push
push
ds
mov
fcomps
fidivrs
aas
js
out
dec
lds
cli
hlt
pop
jle
aam
sti
mov
push
mov
rorb
mov
scas
xchg
xor
sbb
push
xor
fimuls
or
ja
lods
mov
dec
xchg
dec
sub
lret
pop
add
arpl
aam
add
leave
scas
popa
data16
jg
dec
jae
push
pop
xchg
jbe
call
inc
das
and
aas
xlat
fsubrs
ss
popf
push
popf
adc
adcb
iret
repz
dec
pop
iret
enter
add
adc
mov
ret
ljmp
ficompl
loop
mov
pusha
xrelease
sbb
hlt
jne
pushf
cmp
insb
into
pop
loop
xchg
enter
mov
pop
mov
pop
movsb
push
repz
dec
popf
pushf
out
jb
fwait
jae
cmpsb
dec
cmp
mov
loope
sahf
cmp
jae
shrl
push
mov
jae
sub
dec
cwtl
mov
sti
data16
data16
xchg
lods
sarb
das
mov
shll
fisttps
dec
dec
in
mov
clc
pop
or
ss
push
jge
mov
ret
lock
jl
out
push
jle
loope
dec
xor
enter
dec
or
jge
div
sbb
sti
jmp
xchg
mov
int
inc
jge
scas
push
pop
dec
ffreep
xchg
hlt
jnp
mov
incb
jo
mov
jne
push
rcl
pop
cld
repz
xchg
test
stc
cmp
andl
sbb
into
adc
and
mov
inc
sub
and
aad
test
cmc
je
hlt
jnp
shll
mov
adc
cmc
dec
test
dec
fwait
stos
xor
push
in
leave
cmp
pushf
mov
frstor
pop
jge
in
aaa
scas
stos
das
adc
dec
jnp
pop
push
pusha
jnp
mov
xor
pop
into
imul
stos
cld
out
cmp
jo
call
into
cmp
adc
and
mov
sbb
add
pop
iret
push
dec
dec
lock
cmp
jl
inc
cmp
xchg
or
sbb
int3
subl
jbe
fadds
or
dec
dec
xchg
shll
or
push
xor
ret
out
leave
lds
lock
inc
xchg
data16
js
out
mov
and
push
aad
iret
xchg
fiadds
jl
ret
popf
pop
subb
xchg
popf
sbb
shll
hlt
loope
or
jg
insl
jb
fdivl
out
movb
and
ss
jno
clc
and
mov
bound
fcomip
mov
jle
nop
dec
mov
jbe
out
out
sub
pop
fistpll
mov
fdivs
loop
shr
and
fwait
andl
bound
mov
xor
call
daa
cltd
push
out
mov
pop
mov
sub
popa
sub
testl
add
in
int
mov
inc
sti
add
adc
cmc
and
das
and
or
and
in
push
xlat
jns
add
jb
cld
or
xchg
popa
or
push
test
pop
cmp
mov
cmpsl
mov
xor
out
je
leave
popa
xor
xchg
mov
push
scas
sub
mov
hlt
cmpsb
std
or
and
mov
mul
xchg
mov
loope
dec
xchg
mov
bound
fistpll
cld
test
test
lahf
insb
inc
imul
clc
push
loop
mov
mov
jp
push
or
enter
pop
mov
jns
pop
push
jecxz
dec
ficoml
aad
jne
jae
rolb
push
push
or
mov
push
lahf
xchg
xor
lea
cmp
into
call
test
xchg
jp
imul
aad
mov
lea
mov
adc
out
inc
sbb
popa
fwait
xchg
fwait
mov
mov
sbb
pop
jecxz
popa
add
sub
pop
mov
push
sbb
cmc
repnz
es
sub
jbe
mov
mov
ss
dec
cmp
hlt
lcall
lock
push
out
add
outsl
sub
mov
push
xor
int3
into
xor
xlat
or
mov
add
dec
xchg
mov
mov
or
cld
jp
ret
adc
add
pop
sarb
add
sti
adc
rorb
pop
imul
lods
xchg
jne
popf
pop
ss
xchg
mov
push
push
fdivp
icebp
cmpsb
fwait
cwtl
pop
shr
imul
sub
lret
sub
push
ja
in
sarb
and
stc
mull
js
jo
pop
cmpsl
mov
jbe
dec
mov
movsl
xchg
lea
mov
mov
fwait
jno
pop
add
nop
scas
daa
dec
out
ljmp
or
xor
fstpt
jo
sub
arpl
lahf
push
or
pop
test
pop
cmp
or
sbb
xor
inc
fnsave
add
jmp
or
adc
and
leave
push
mov
roll
cs
mov
pop
sub
mov
fidivl
std
loop
mov
pop
iret
add
cmc
or
pop
loop
pop
pop
popa
test
mov
sbb
jmp
adc
jl
xchg
push
cmp
sub
addr16
pop
rorb
fnstenv
inc
shrl
lret
scas
push
xor
aaa
fldl
clc
mov
mull
add
jmp
and
imul
sub
jle
xchg
lods
lcall
orl
ret
xor
movsb
imulb
xorl
out
xchg
xchg
mov
clc
push
cmp
adc
stos
xor
dec
les
fs
in
in
into
gs
inc
add
testl
or
push
pop
adc
icebp
call
push
fistl
push
add
adc
add
push
rorb
add
shll
adc
xor
xor
ret
mov
jbe
repnz
outsl
push
in
xchg
fnstcw
mov
xor
test
or
and
inc
and
jno
xorl
jecxz
rclb
in
dec
adc
pop
cmp
push
sub
stc
dec
add
mov
jl
jecxz
stc
fbld
jbe
fcoms
push
mov
loopne
enter
and
mov
and
add
jle
scas
hlt
sub
stos
dec
mov
jo
cld
lock
mov
mov
movsb
sti
inc
cmc
xor
repnz
xchg
je
loopne
lods
xor
ss
fptan
enter
mov
mov
repz
jl
aas
adc
outsb
sbb
test
dec
std
cmc
push
decb
push
cmp
pop
outsb
in
jmp
sub
push
jecxz
data16
or
fwait
cld
popa
add
mov
xchg
jns
mov
xchg
jg
add
enter
xor
mov
lds
in
imull
mov
sahf
mov
fwait
mov
clc
add
or
clc
sub
xor
pop
int
sbb
jb
pop
repz
cmp
inc
push
xor
lcallw
icebp
xor
sahf
jb
adc
fwait
stos
ficomps
outsl
jl
pop
cmp
dec
jns
int3
cmp
cmp
dec
pop
jg
movsl
fs
mov
decb
add
mov
jbe
stos
mov
call
fs
inc
and
xchg
pop
sub
movsl
xor
outsb
leave
mov
pop
idivl
dec
jo
stos
ljmp
xor
dec
jge
or
dec
enter
lcall
xor
push
les
ret
mov
scas
jnp
or
mov
gs
div
aam
dec
cli
int
test
aaa
add
pop
rorl
push
mov
lods
pop
jle
clc
ljmp
repz
inc
ret
inc
popf
ficoms
cmp
aam
adc
stc
jmp
xor
lods
add
lret
fcoms
outsb
add
out
fiadds
inc
in
jno
jge
xor
ja
cld
shrb
out
add
pop
cwtl
in
imul
add
ljmp
mov
mov
push
or
mov
test
push
adc
jle
lds
xor
outsl
lcall
sbb
dec
xor
addl
mov
shll
mov
inc
je
mov
xor
sub
gs
mov
popa
mov
sub
mov
dec
addb
xchg
sarb
leave
sub
andb
enter
gs
adc
mov
cwtl
aam
mov
lret
daa
sbb
add
scas
fiaddl
pushf
ss
int3
repz
loope
push
ljmp
push
aas
adc
mov
mov
mov
aam
inc
add
sbb
loope
mov
cmp
pop
insb
sbb
test
mov
jmp
fmul
orl
or
adc
jne
xor
add
jp
sub
lock
jl
roll
xor
popf
sarb
dec
push
mov
cld
cmp
das
jecxz
jp
loope
mov
repz
add
mov
or
popf
sahf
or
jbe
cltd
mov
addb
sub
popa
ret
dec
ret
sub
mov
enter
jne
pop
add
xchg
mov
gs
mov
pop
les
inc
imul
shrb
pop
xchg
pop
push
mov
movsl
out
xchg
int3
outsb
insb
or
sub
ret
bound
jmp
jle
cmpl
add
mov
out
ret
adc
lods
inc
pop
out
mov
mov
outsb
jp
mov
into
inc
outsl
iret
jnp
and
iret
mov
xlat
push
cmc
subl
add
ss
add
push
and
shll
or
jo
jnp
mov
aam
hlt
insl
shl
mov
in
add
testb
adc
jno
sub
mov
repnz
xchg
xchg
lret
sbb
mov
push
in
or
adc
mov
adc
icebp
push
adc
inc
lds
pushf
mov
flds
pop
cli
sti
or
sbb
icebp
jg
in
push
lods
xchg
into
fidivs
push
std
cs
push
out
pop
jmp
in
fnstenv
mov
adc
mov
xchg
rcrl
jns
fstp
insl
xor
movsl
lock
sub
or
mov
cmp
inc
xchg
push
inc
sbb
xchg
leave
xchg
push
push
cmpsb
xor
xor
into
fidivrl
lods
int
cli
xor
cld
or
gs
xchg
outsb
jecxz
scas
stos
push
mov
sbb
push
xchg
sbb
mov
mov
pop
mov
cmp
push
cmpsb
ljmp
sbb
cmp
leave
cltd
add
insl
lret
dec
push
jnp
jl
inc
and
dec
push
cmp
out
and
pop
jno
rep
adc
push
js
inc
push
sti
in
pop
mov
lock
pop
stc
mov
outsb
or
mov
mov
incl
gs
dec
out
stc
sti
and
cmp
push
push
pop
pop
sbb
sbb
ret
sub
pop
lret
xchg
cmp
push
mov
aam
xor
lret
lcall
mov
xor
lcall
add
add
mov
out
iret
shl
je
or
ret
call
inc
inc
jne
or
push
inc
ret
insl
add
jp
div
lahf
or
push
dec
ret
and
sub
mov
add
pop
jne
lret
outsl
enter
jecxz
pop
xor
stos
jecxz
inc
xor
cmc
mov
popa
sbb
pop
ror
or
dec
and
jmp
jl
push
sbb
pusha
int
ss
daa
cmp
iret
adc
lds
scas
cmp
push
or
xchg
test
mov
mov
jbe
add
mov
pop
mov
mov
in
inc
add
xchg
cld
fdivr
sbb
mov
cmc
loop
pop
jb
sarl
hlt
inc
testb
icebp
lea
gs
add
test
xchg
jne
xor
sbb
jmp
nop
and
fs
cmc
cmp
xchg
cmpsl
dec
pop
roll
lds
cmp
cmp
out
add
inc
and
outsb
gs
jnp
and
out
add
push
push
int
imul
add
push
cmpb
fdivr
push
adc
push
out
xchg
or
fisttpll
aas
into
into
xchg
sbb
in
test
insb
and
clc
ret
dec
lcall
mov
mov
dec
aas
pop
inc
xor
daa
push
pop
mov
sbb
pop
push
mov
add
test
xor
into
test
sub
sbb
mov
adc
mov
mov
addr16
sbb
pop
push
loopne
jae
mov
and
fimuls
xchg
xor
and
mov
out
mov
mov
pop
mov
pop
aam
imul
add
cs
pushf
shll
xchg
pop
push
or
or
divl
or
dec
and
test
les
lods
stos
add
pop
fldcw
daa
shrb
andb
in
jmp
lret
dec
and
sbb
mov
xor
ror
cmpxchg
push
inc
enter
pop
xorl
mov
sub
dec
aad
icebp
test
add
pop
imul
jb
enter
add
lcall
push
cmc
xchg
test
push
sbb
in
or
sub
xchg
inc
sub
bound
mov
popa
add
ret
sbbl
xchg
jno
mov
ljmp
mov
divl
mov
push
push
fnstenv
push
or
jae
and
jno
push
cmp
popf
xchg
push
xchg
xor
jno
xchg
mov
ret
adc
jmp
pop
inc
adc
in
pop
data16
pop
mov
cmc
or
scas
and
mov
fadds
mov
mov
jmp
imul
xor
lods
nop
pusha
sbb
xchg
outsl
sbb
arpl
dec
loope
inc
xchg
push
or
lahf
pop
in
xchg
nop
jno
xchg
repz
xor
and
mov
cmp
test
outsb
push
or
push
lret
pop
or
xchg
daa
shlb
repz
mov
xor
dec
icebp
pop
fs
icebp
outsl
shrb
mov
popa
cwtl
popa
or
ja
mov
jb
jmp
jbe
dec
xor
jo
aaa
jmp
adc
movsl
mov
aaa
cli
push
lock
popf
push
lcall
pop
add
inc
mov
and
lret
jne
cmp
sub
aas
xlat
pop
imul
add
nop
loope
bound
lds
fcoml
call
in
push
cmp
cmp
dec
inc
in
fbld
cmp
mov
push
pop
pusha
or
dec
pop
cmc
call
jecxz
mov
add
mov
mov
sub
and
mov
or
dec
lods
leave
xor
pop
lds
jle
push
fbstp
loop
pop
mov
fabs
daa
pop
sbb
add
imul
shll
push
or
dec
ja
push
loopne
scas
js
inc
mov
inc
xchg
mov
mov
add
mov
sub
imul
movsb
cli
lahf
cmp
in
jecxz
adc
mov
dec
sbb
fucom
xor
mov
repz
mov
jecxz
rcrl
push
sti
jne
push
jle
testl
in
mov
pop
sbb
gs
add
xchg
add
xchg
pop
in
xchg
iret
outsl
mov
divb
jnp
scas
inc
scas
iret
xor
pop
stos
pop
inc
sar
xor
iret
inc
add
jmp
mov
arpl
dec
xor
rcll
icebp
shll
ja
jne
addl
call
movsw
popa
xor
mov
adc
lret
stos
fildll
cmp
pop
push
and
jae
add
lds
ss
test
lahf
aas
call
lret
xor
cmp
lods
ret
sub
ret
mov
in
dec
mov
loope
shlb
add
push
cmp
mov
xor
jl
sbb
cmp
xor
into
jno
jnp
icebp
lea
lock
inc
cwtl
sub
call
sti
and
ss
mov
push
jbe
loopne
sbb
test
cmp
jl
idiv
fisttps
cmpsb
mov
and
testb
cmpl
jne
or
pop
push
fidivs
jo
arpl
mov
inc
pop
xchg
lcall
lahf
and
pusha
addl
into
sbbb
push
adc
mov
inc
loopne
mov
pushf
push
xor
cmpl
and
icebp
cmc
cmp
mov
xor
push
xchg
loope
push
aam
lds
add
loop
int
sbb
into
or
ror
and
les
jb
dec
std
push
inc
jle
add
pop
sbb
leave
sbb
adc
and
rol
gs
jl
cmpsl
movsl
or
cmpsb
fs
push
push
cmp
jle
push
or
test
mov
xor
fisubrl
sub
out
ljmp
inc
cmp
repz
mov
cmp
add
adcb
sarb
and
xchg
insl
in
mov
sub
sub
aaa
cwtl
xor
pusha
insb
in
pop
fstl
test
xor
add
fwait
jp
test
cld
aam
jbe
sahf
cmpsl
adc
mov
and
sti
push
mov
jns
inc
sbb
imul
test
mov
jg
shrl
inc
shl
ja
cmpsl
and
dec
shlb
fisubrs
adcb
nop
nop
repnz
xor
pop
push
movsbl
push
int
aas
jns
jo
jmp
mov
pop
fsubr
mov
in
xor
mov
daa
lret
inc
push
je
stc
pop
jb
add
push
cmp
cld
and
push
inc
orb
sahf
fcompl
cmp
lods
ss
sub
push
push
inc
std
call
pusha
jp
pusha
aaa
into
aam
push
imul
lcall
shrb
inc
movsb
aaa
xor
pusha
jns
clc
les
movb
shll
pop
fldt
pop
popa
mov
xor
lods
repz
vcvttpd2dqx
mov
test
push
mov
push
ret
fldl
test
add
dec
call
push
pop
fs
cmpsl
dec
movsl
rcrb
lea
ret
cmp
and
push
out
fstpl
pop
push
lods
ljmp
jne
repz
mov
xchg
popf
adc
pusha
mov
and
push
push
pshufw
arpl
add
jbe
sbb
push
mov
xor
mov
mov
adc
mov
hlt
scas
pushf
jmp
push
repz
adc
testb
push
xor
add
test
mov
std
push
add
fldl
xor
into
push
arpl
imul
mov
imul
dec
mov
cltd
hlt
push
das
addr16
mov
jb
or
sub
mov
fisubl
fs
arpl
and
insb
sub
sbbb
jmp
dec
in
out
icebp
inc
inc
addr16
je
or
stc
rorb
int
fidivl
cwtl
jbe
or
jmp
decl
in
mov
ljmp
flds
insl
and
sahf
punpcklwd
enter
int
nop
adc
lods
das
pop
shll
xchg
push
out
stc
test
adc
decl
jns
scas
in
stos
inc
pop
sub
push
adc
ret
scas
jne
add
mov
mov
popa
xchg
dec
ret
sub
out
arpl
sbb
or
arpl
or
adc
mov
jae
xlat
in
adc
jmp
stos
pop
jne
mov
in
test
cmp
xor
pop
loop
cmpsb
ja
mov
popf
cltd
mov
popa
mov
popaw
mov
jbe
popf
out
and
jae
cmp
ret
inc
or
cmp
jl
xchg
fwait
test
aad
mulb
adc
adcb
pusha
pop
dec
shrb
aam
cwtl
dec
stos
dec
aaa
mov
loopne,pt
imul
xor
sub
and
clc
in
pop
popf
pop
jbe
sub
xor
out
xor
sub
sub
std
ret
jne
fiaddl
addb
movsb
push
cmp
jbe
mov
ja
sub
in
fistps
pop
sbb
aas
jmp
cmp
imul
push
push
loope
pop
pop
fiaddl
fwait
xchg
xchg
repz
mov
sbb
pop
pop
jg
jle
fadd
inc
lds
in
into
cmp
jns
aad
stos
insb
enter
jb
and
cmp
adcb
xorl
sbb
xor
pushf
cmpsl
mov
cltd
xor
mov
xchg
repz
push
cltd
faddl
fwait
pusha
push
andl
out
xor
sbb
je
sahf
outsl
cmpb
push
out
pusha
outsl
fnstenv
movsl
out
sbb
pop
stc
cmp
dec
cwtl
sbb
mov
loopne
and
mov
xor
xchg
mov
aas
xor
inc
mov
add
rcrl
push
pop
insl
int3
xor
mov
ss
mov
inc
adc
or
push
cwtl
aaa
in
jge
movsl
aad
neg
fisubrs
test
shl
cmp
scas
push
mov
daa
xchg
and
cmp
insl
pushf
dec
xor
nop
adcl
xchg
sbb
fwait
or
sub
orl
loope
leave
xchg
popf
or
pop
shrl
loope
out
push
call
xorb
hlt
pop
daa
cmp
frstor
and
mov
jle
test
popa
push
in
movb
sub
inc
out
fnstcw
push
cld
cld
xor
pop
xchg
sahf
out
mov
in
dec
icebp
jle
sub
shll
fisubl
cmpb
shll
mov
iret
push
sub
clc
lcall
mov
test
sub
rorb
insb
mov
mov
bnd
sub
pushf
dec
xchg
enter
scas
jnp
or
rcl
stc
jle
enter
clc
cmp
enter
push
lds
mov
cld
call
repz
mov
mov
stc
pop
cmp
or
cmc
aam
mov
mov
nop
jmp
push
push
lods
lcall
fnstcw
sub
jp
or
stos
in
fiaddl
push
mov
mov
mov
fcoms
mov
sub
aas
mov
pop
imul
lahf
test
inc
cmp
gs
xchg
sbb
movsb
xchg
ss
in
stc
xor
dec
pop
in
std
aaa
push
cmc
or
or
movsl
push
sub
in
xchg
jae
jge
fsubrl
rorb
int
mov
jae
push
out
imul
cmp
mov
xchg
sub
cmp
sbb
sar
sbb
xor
mov
dec
fldt
sub
std
ret
test
call
sbbl
xchg
dec
adc
adc
out
loopne
int3
mov
jnp
sub
jae
das
mov
aaa
cmp
lea
mov
insb
jp
leave
int3
inc
or
mov
aam
out
stc
xchg
fadds
aaa
xchg
and
dec
imull
cmc
xorb
cli
or
es
hlt
sbb
or
jbe
pop
mov
call
pop
mov
mov
shrl
lods
test
out
push
movsb
loope
and
jo
mov
insl
cmc
js
mov
push
fwait
pop
jl
dec
fldt
add
mov
pop
xchg
dec
out
testb
movsb
fstpl
outsl
std
testb
dec
or
jle
xchg
pop
add
mov
push
cmpsl
mov
cmp
sbb
jp
lds
cmp
cwtl
sub
push
stos
ds
jo
scas
mov
mov
icebp
mov
pop
sbb
rcll
mov
or
add
sar
nop
adc
and
xchg
mov
mov
push
lock
gs
cltd
and
sub
add
jge
cmpsb
nop
push
sbb
mov
sbb
test
adc
lock
insb
pop
ficoml
movsb
xlat
mov
stc
dec
pop
push
mov
dec
mov
jle
mov
in
xchg
xor
xchg
pop
and
roll
int3
out
sub
push
dec
nop
icebp
sbb
adc
sub
imul
cmp
mov
xchg
xchg
and
jmp
je
add
xor
push
shll
pusha
and
mov
cmpsb
push
xchg
xchg
xchg
push
in
or
cmpsb
xchg
jmp
dec
jge
aad
test
xor
adc
push
insb
xor
in
pop
mov
int
or
cmp
cmp
aam
xchg
cli
mov
fadd
push
inc
pop
cmp
inc
loop
push
pushf
mov
or
jle
xor
out
ds
test
pop
cmpsb
aas
jg
out
xlat
cmpsb
clc
aam
lret
inc
sub
rcll
adc
cmp
lret
std
xchg
cltd
les
adc
cwtl
dec
ds
out
mov
icebp
stos
test
stos
sahf
mov
out
sahf
mov
dec
jmp
pop
fstp
jg
fwait
pop
sbb
roll
fwait
loopne,pn
xor
jge
aaa
push
mov
outsb
out
mov
adc
repnz
mov
xchg
sarl
inc
mov
cltd
push
stos
imul
lods
movsb
cmpsl
adc
addr16
int
xchg
xchg
aad
clc
cmp
iret
out
or
mov
ret
popa
mov
rolb
std
dec
jb
mov
dec
movsl
push
imul
les
jne
in
outsl
ljmp
dec
adc
rclb
adc
orl
out
int
lds
mov
add
push
xchg
inc
xchg
fnsave
icebp
xchg
mov
jne
subw
jecxz
sub
mov
out
mov
negl
int
int3
jge
pop
lahf
or
rorl
fcoms
loop
xchg
or
lock
xchg
push
mov
sahf
jge
add
nop
push
inc
cmp
cmc
jb
dec
sbb
inc
dec
stos
sub
pop
js,pt
test
push
xchg
adc
lahf
xchg
aam
and
das
xor
aam
out
dec
sbb
cld
es
aaa
sub
mov
or
xor
scas
aaa
fildll
cmc
inc
mov
sbb
xchg
xor
jecxz,pn
inc
pop
shlb
jecxz
int
pop
or
jae
dec
jg
scas
sti
add
adc
and
test
mov
adc
add
pop
pushf
jo
rcrb
sub
je
mov
lcall
xor
mov
mov
test
in
scas
imul
out
flds
mov
movsb
iret
repz
stos
sub
aad
xor
mov
fcomi
movsl
or
and
popf
fidivrl
test
mov
jnp
fbld
push
jecxz
sbb
movsl
inc
sub
jno
mov
mov
adc
lods
xchg
mov
push
scas
sahf
adc
mov
and
imulb
in
fldt
les
sub
push
xor
xor
and
in
and
insb
out
pop
add
fisubs
js
icebp
fsubrl
stos
push
and
ret
pop
fidivs
dec
loope
or
xchg
inc
fisubrs
dec
add
call
push
mov
int3
mov
push
mov
xor
out
leave
das
les
lret
mov
xor
scas
xchg
ret
das
addr16
pop
mov
repnz
push
shrb
and
mov
mov
pop
out
jae
ss
sub
mov
mov
jmp
iret
out
add
roll
ss
add
fiaddl
mov
inc
push
icebp
jae
loop
or
iret
daa
adc
out
pop
inc
loop
sub
add
push
push
ja
test
xchg
or
cmpsl
jmp
fcompl
jmp
test
or
jns
xor
mov
lods
pop
and
daa
jbe
sub
jecxz
cmpb
push
outsl
mov
mov
pop
stos
mov
iret
sub
fisttpll
jmp
test
and
fs
or
int
mov
aad
pop
xorb
les
mov
aas
je
fimuls
div
jl
fwait
stos
cmp
mov
cmpb
adc
inc
test
into
xchg
jno
and
out
add
xchg
pusha
sub
cmpsb
xchg
lcall
loop
out
cmp
cmc
les
or
mov
and
ret
and
and
hlt
out
jns
scas
inc
lcall
mov
sbb
rorl
inc
adc
jl
stos
pushf
add
sub
in
or
and
dec
loop
mov
int3
inc
je
nop
add
mov
mov
rclb
dec
call
hlt
adc
das
inc
ds
inc
mov
push
cmp
pop
push
xor
pop
mov
and
mov
loop
cli
dec
sbb
ret
and
test
movsl
xchg
mov
clc
xchg
ljmp
jne
push
mov
loop
and
ficompl
jb
xor
addr16
push
jae
sbb
inc
add
inc
test
ljmp
arpl
xor
mov
mov
xlat
pop
cmc
xor
xor
mov
jp
ja
mov
dec
cld
xchg
stos
sbb
mov
mov
mov
push
jns
fdivl
or
lods
cmpsb
testb
xchg
insb
xlat
imulb
in
sub
add
jne
pop
sarl
sub
dec
mov
inc
lods
mov
orb
or
inc
out
inc
orl
jns
idivl
push
cmp
jmp
popa
lods
in
mov
cli
mov
push
xchg
data16
out
pop
cmp
mov
in
push
mov
lahf
adc
out
mov
cli
int
sbb
lea
xchg
dec
add
or
jo
mov
je
or
jmp
jb
aad
or
fs
dec
cmp
mov
xlat
shr
insb
xchg
jo
and
lods
popf
bound
cmc
movsb
adc
jno
and
jl
inc
pushf
pop
dec
sbb
mull
lret
ljmp
xor
neg
loope
shl
mov
jge
mov
in
fucomi
mov
sub
pop
adc
lret
push
dec
mov
push
xchg
dec
inc
add
aas
cli
sbb
inc
inc
sbb
fisubrl
jecxz
cmp
push
fdivl
push
scas
add
jno
jecxz
rcll
mov
lods
push
mov
or
cmp
mov
pop
sbb
jge
js
outsl
das
inc
dec
mov
out
sub
cld
jns
dec
out
or
insl
push
jo
push
push
dec
push
cmp
xchg
pop
sub
inc
lahf
pop
daa
in
imul
hlt
adc
gs
and
test
call
nop
or
lods
das
lahf
push
sub
in
in
inc
arpl
sub
dec
fs
popf
insb
sub
ret
cmp
movl
mov
and
jns
sub
lcall
mov
mov
cmp
push
stos
jb
mov
or
mov
notb
test
daa
xchg
push
push
icebp
and
lret
pushf
jno
pusha
push
push
dec
popf
ret
xchg
dec
in
movsl
jmp
mov
mov
popf
adc
pop
out
jnp
lods
std
subb
sub
lods
jb
push
adc
test
outsl
cs
lcall
sub
imul
jae
ds
xor
adc
jns
mov
pushf
xor
leave
xorl
test
lret
cmp
fmull
call
insb
jg
and
push
cmpsl
js
mov
cwtl
pop
cmp
inc
fwait
adc
daa
pop
int
inc
cmp
scas
in
fimull
sub
adcb
rcll
data16
scas
add
negl
in
sbb
stos
push
or
shll
sbb
imul
inc
xor
in
jg
inc
jae
xchg
sub
mov
sbbl
inc
or
pop
xchg
out
sbb
sub
in
call
repnz
inc
jle
sbb
and
pop
pop
lret
pop
or
cs
iret
push
lods
sbb
push
jle
dec
or
mov
bound
add
mov
pop
sbb
pop
into
addl
outsl
sahf
and
sbbb
in
adc
enter
mov
lret
mov
or
pop
in
adc
sbb
mov
and
or
scas
fsts
cmp
fmulp
in
mov
ss
loop
mov
mov
xlat
decl
dec
or
es
add
pop
jns
mov
notb
cmp
push
loopne
popf
and
mulb
ja
mov
cmc
call
mov
push
roll
pop
mov
add
sub
mov
jg
incl
andb
loop
inc
addb
pop
sub
pop
add
inc
dec
push
nop
aad
or
pop
fsub
xor
cmp
cs
test
pushf
insb
aas
shrl
jle
test
aad
mov
adc
out
push
pop
pcmpgtd
rcrb
mov
mov
mov
into
jecxz
leave
aaa
aad
gs
jge
inc
dec
push
fstpl
mov
outsl
push
xchg
mov
sti
idivl
imul
fbld
mov
lock
xchg
icebp
add
jno
cmp
push
data16
sbb
xor
dec
mov
lret
mov
ficoml
rcrl
aas
jnp
insl
cmpsb
mov
int3
sahf
mov
cmp
popa
subl
mov
popa
push
sub
iret
or
js
stos
push
xchg
pop
data16
jmp
mov
mov
mov
notl
shrl
xchg
push
and
jae
shrb
xchg
lret
inc
dec
test
dec
fcompl
push
cs
dec
stos
push
push
xor
sbb
lock
lret
cli
inc
mov
xor
mov
dec
mov
push
add
iret
add
scas
push
or
enter
lahf
aam
or
lock
in
mov
jg
add
shlb
ret
mov
cwtl
fnstsw
ret
inc
test
mov
mov
loop
xchg
in
sbb
sbb
popf
add
inc
inc
test
cmova
add
lock
in
test
pop
test
inc
push
or
mov
int
or
cmp
aaa
in
push
or
cli
jbe
fdivl
jo
iret
dec
mov
aas
push
push
int3
pop
jl
sub
jl
or
sbb
outsb
ss
fsubrl
cmp
xlat
sbb
xor
test
push
lea
xor
adc
in
jge
lea
and
inc
xor
sub
stos
or
fisubl
and
ret
cmpsb
jae
sbb
test
ljmp
jns
xchg
xchg
neg
sbb
push
test
ja
pop
push
inc
imul
jmp
inc
sbb
das
sbb
add
adc
out
push
push
sub
test
adc
pop
pop
filds
inc
and
mov
aam
iret
icebp
addr16
push
adc
pop
cmp
scas
aas
sub
pop
pop
sbb
lea
and
in
pusha
popf
xor
pop
fistl
outsl
cld
mov
push
cmp
ss
fsts
jle
dec
adc
sub
int
sub
sub
outsb
sub
mov
jg
xchg
jge
in
mov
jns
xor
in
adc
fadd
ljmp
out
out
cmpsl
lds
out
xchg
stos
push
ficomps
jno
add
pop
test
pop
jo
fidivs
sbb
and
dec
dec
jp
test
inc
cld
test
mov
sbb
add
pop
sti
sbb
pop
adc
pop
jnp
je
popa
fnsave
in
mov
mov
clc
fstp
in
fstps
inc
and
pop
pushf
es
notb
or
subl
mov
mov
repz
mov
push
iret
pop
enter
inc
ljmp
pop
push
or
inc
sahf
mov
jae
movsl
xchg
add
add
push
test
dec
pop
pop
sub
push
mov
lods
ficoml
add
and
dec
mov
mov
test
xchg
test
mov
jmp
scas
jmp
jo
insb
sub
mov
sub
popa
in
int3
ret
mov
outsl
mov
out
insb
test
in
cmp
les
push
add
sbb
mov
fsubs
popa
loop
mov
mov
add
pop
cmp
arpl
icebp
xchg
cwtl
arpl
and
clc
xor
arpl
xor
pop
push
stos
mov
and
ficoml
xlat
sub
lret
fstpl
or
loop
mov
ficoms
ficompl
push
popa
xchg
sbb
xor
sti
or
jnp
mov
jbe
xchg
xor
cs
cmc
in
pop
xchg
ret
movsb
je
push
inc
hlt
jge
daa
rcrl
cltd
xchg
sbb
arpl
arpl
loop
sub
xor
xor
addr16
mov
in
pop
pop
mov
lods
ret
pop
das
stos
jae
mov
decl
xchg
mov
push
mov
imul
mov
push
add
rcrl
mov
cmc
mov
sahf
sahf
or
and
mov
inc
pop
pop
dec
adc
xor
fisubs
in
ja
push
rcll
scas
inc
test
xchg
mov
fimull
xor
scas
repnz
sbb
xlat
add
push
fincstp
insb
sbb
int3
out
sbb
neg
mov
cmpsl
pop
fidivrs
inc
orb
cs
jge
rorl
pop
cmp
xchg
dec
or
and
lock
in
push
xor
xor
mov
sbb
cltd
adc
push
pop
bound
or
mov
add
push
sub
cmp
pop
xchg
nop/reserved
aad
xlat
xchg
dec
scas
or
pop
loopne
jns,pt
add
cmp
xchg
push
roll
dec
test
add
sub
enter
push
loop
push
insb
pop
out
call
les
add
in
mov
mov
ds
xor
cld
iret
pop
mov
scas
fdivrs
or
mov
repnz
inc
or
jnp
dec
xor
sub
aam
and
sub
in
xchg
xchg
pop
dec
fistpl
xchg
fdiv
mov
or
mov
rclb
orb
and
or
mov
sub
test
rcrb
push
test
das
lcall
fidivl
push
xchg
cmp
sbb
out
sbb
fwait
push
into
adc
fcomps
outsl
adc
rclb
add
fnstcw
or
and
aad
jae
push
mov
xchg
xlat
mov
xor
and
cltd
fs
push
cs
or
insl
sti
add
jns
sahf
mov
cmp
xchg
pop
dec
shrl
hlt
sub
mov
jge
pop
pop
push
adc
test
test
mov
js
inc
and
cmpsl
shlb
in
ljmp
fwait
imul
sub
pop
add
add
push
lds
cmc
xchg
xor
stos
cmp
fs
or
xchg
inc
pop
xlat
dec
cmp
and
js
cmc
daa
test
clc
scas
int3
jbe
xchg
xchg
add
sub
out
adc
push
and
push
jo
xchg
movsb
movsb
adc
sub
lcall
repnz
popf
mov
jle
push
push
pop
xor
or
mov
test
ficomps
mov
dec
xor
iret
ljmp
dec
inc
outsl
in
cmp
mov
cwtl
and
ljmp
scas
ret
test
jmp
or
stos
pop
mov
clc
xchg
add
stos
jp
push
lods
in
in
mov
pop
pop
pop
cmp
jae
pavgw
aad
mov
insl
fisubs
push
arpl
pop
jecxz
imul
test
fists
inc
xor
data16
mov
pop
or
cs
gs
fadd
dec
icebp
jle
flds
repnz
mov
xchg
test
in
inc
mov
jo
mov
in
cmpsl
mov
pop
mov
sub
and
pushf
imul
fwait
in
fs
pop
nop
add
js
xor
pop
ret
or
prefetchnta
push
clc
out
loopne
and
adc
cli
mov
jo
jne
cmpsl
xor
ds
insb
and
and
aad
popaw
mov
push
cmc
lcall
insl
cmpsl
mov
movb
pop
jmp
sbb
mov
in
sahf
and
stos
jne,pn
lea
mov
jo
jne
out
push
push
inc
mov
sbb
jle
dec
fwait
jno
nop
in
inc
mov
jae
mov
jmp
jb
mulb
fnstsw
jae
enter
ret
in
pop
push
xor
sbb
or
xor
sub
popa
ret
sbb
add
adc
into
lret
mov
insb
push
jne
cmp
out
stc
lock
xor
fcoml
sub
mov
jge
sbb
shrb
or
jne
outsb
loopne
mov
and
push
add
stos
call
and
stos
out
mov
rorl
jmp
jmp
and
inc
cmp
push
pop
cs
jne
pushf
iret
jmp
inc
iret
dec
repz
xchg
imul
and
fadds
jo
add
das
cmp
scas
add
and
push
mov
daa
adc
lahf
jno
jns
inc
testb
and
imull
hlt
xor
lods
pusha
jae
jb
xchg
jno
outsl
out
or
inc
jle
fnstsw
mov
fcmovb
cmp
lahf
dec
pop
xchg
push
pop
push
ret
add
adc
mov
into
mov
sub
mov
sbb
jge
adc
orl
xor
sahf
mov
add
lret
outsb
mov
or
pop
push
adc
ret
sbb
push
adc
jp
test
loop
data16
or
add
enter
jbe
jns
jle
out
sbb
cmpsb
les
sub
leave
inc
mov
push
xor
mov
inc
jbe
and
imul
lods
pop
xchg
divb
std
cmp
jb
leave
out
mov
or
jo
xor
insb
out
ss
fucomp
dec
jmp
sbbl
fdivrs
fisttpll
fimull
dec
aad
hlt
push
jmp
shlb
xor
dec
mov
add
popa
inc
mov
shr
mov
repnz
or
push
and
enter
mov
sub
adc
mov
popa
pushf
push
es
fnsave
xchg
cmp
rorb
lds
add
xchg
pop
mov
loopne
sub
bound
jnp
scas
fwait
clc
mov
and
imul
mov
outsb
jg
ss
lds
in
ss
xor
mov
mov
sub
sub
or
aam
push
and
inc
daa
das
mov
test
push
scas
jecxz
pop
pop
movsb
push
mov
ror
jmp
and
sub
inc
jo
movsl
inc
cmp
leave
push
pop
fsubs
pop
jecxz
sar
lds
outsl
mov
add
push
inc
fs
call
push
pop
mov
fadd
loopne
mov
movsb
mov
add
je
lret
pop
bound
lret
movsl
lods
add
jl
insl
xor
or
mov
scas
push
cmpb
inc
loop
stos
mov
popa
inc
push
add
fstpl
movl
sbb
test
fsubr
shr
push
add
pushf
mov
std
mov
aam
daa
sub
xchg
pushf
imulb
adc
adc
or
add
sub
daa
loope
data16
cli
mov
sbb
push
dec
jl
aaa
sbb
mov
sbb
xchg
pop
arpl
les
scas
sbbb
mov
cmovae
xchg
int3
jp
addr16
and
adc
daa
inc
push
movsb
cwtd
stos
add
pop
flds
insb
aad
or
push
es
and
out
sbb
mov
jo
add
int3
int3
out
mov
scas
mov
stc
nop
into
shrb
mov
dec
inc
in
xchg
add
lods
inc
addl
je
bnd
frstor
aam
or
out
push
scas
pop
sbb
aad
ljmp
outsb
sbb
movsb
sbb
pop
dec
pop
lods
test
inc
jbe
sbb
repz
insb
inc
jns
xor
pop
cmpsb
aam
ret
daa
xor
jle
sbb
inc
in
xor
stc
outsl
xor
lret
and
clc
jge
stos
mov
add
mov
je
outsb
cwtl
cli
sub
jg
mov
inc
lret
jne
mov
aam
xchg
stc
cmp
jb
sbb
mov
inc
adc
into
mov
mov
decb
mov
pop
clc
movsb
xor
mov
cwtl
inc
push
scas
fcomps
cmp
jb
movsl
mov
in
pushf
or
pop
or
ljmp
aas
pop
pop
daa
enter
testb
xchg
lods
push
add
test
xchg
fdivrp
stc
ret
jge
shlb
jne
cmp
int
push
jg
test
push
push
loopne
dec
jmp
or
add
outsl
sub
lods
sbb
in
arpl
xchg
dec
mov
out
lds
jb
cs
out
jno
mov
bound
xlat
or
movsb
inc
int
loope
mov
scas
jno
cmc
jmp
mov
mov
cmp
sbb
or
sub
incb
into
or
xchg
test
dec
lock
mov
mov
out
lret
jnp
pop
daa
mov
mov
inc
inc
out
pop
add
or
add
inc
inc
add
lcall
sub
jo
mov
xchg
imul
mov
test
loop
mov
loope
adc
daa
cmp
pop
sti
lods
rcr
mov
mov
mov
popf
imul
enter
xchg
and
into
push
xchg
adc
pop
rcrl
adc
idivb
jbe
inc
jns
aam
xor
xorl
test
xchg
mov
mov
imul
cli
inc
int3
add
jmp
lds
insl
lds
icebp
fisubrs
sbb
xchg
and
cmp
mov
mov
ja
leave
jnp
clc
mov
jae
inc
out
cmp
lahf
xchg
or
xlat
push
movsb
or
mov
mov
add
mov
lahf
es
xor
mov
jae
and
lahf
neg
push
jle
shll
adc
movb
xchg
mov
in
pop
mov
sbb
pop
or
popf
stc
ljmp
jmp
mov
cmp
dec
imul
add
xchg
imul
cmp
jo
jmp
sbb
xchg
add
cld
das
jo
shrl
idivl
cmp
das
les
or
sbb
and
sahf
sub
std
fcoml
or
repnz
or
and
and
xchg
adc
lahf
je
clc
in
jecxz
pop
inc
mov
mov
xorl
mov
ljmp
fwait
int3
lods
mov
push
adc
rol
mov
imul
and
leave
xor
std
pop
pop
fildl
add
cmc
mov
nop
call
mov
sbbl
inc
cmpsb
das
movsb
jno
insb
pop
xor
push
mov
dec
jbe
xchg
xor
jo
inc
cltd
loopne
pop
inc
mov
call
dec
mov
cmp
sbb
push
inc
pop
mov
mov
mov
or
loopne
out
subl
jp
cld
add
xor
into
cmpsl
int
in
sahf
shll
fwait
cmp
mov
mov
sahf
push
je
adc
lods
pop
cmp
inc
pop
gs
ja
mov
pop
fsubl
lock
call
mov
rcrb
pushl
mov
shl
xor
pop
sub
in
jp
fwait
mov
add
ficompl
lods
test
rcr
movl
popa
cwtl
lea
lcall
mov
inc
and
xor
sub
inc
sub
insb
dec
mov
stc
xlat
mov
xchg
inc
hlt
stos
sarl
and
add
insb
lock
sarl
mov
pushf
mov
fcomps
cld
inc
sahf
xchg
adc
xor
mov
or
or
out
pop
mov
into
push
add
mov
pushf
repz
xor
mov
mov
jg
push
sbb
int3
xchg
das
repnz
cmp
aam
stc
mov
es
sbb
test
mov
ret
mov
xchg
lock
testl
out
loopne
mov
inc
sub
mov
fmull
mov
cmp
push
in
out
lcall
ret
push
imul
xor
xor
push
test
jb
add
push
rclb
jne
data16
push
movl
xor
mov
scas
dec
sbb
push
xchg
mov
repnz
int3
xchg
lock
jns
xor
mov
orb
cmp
in
adc
imul
ret
lds
ret
test
jp
inc
in
movl
fisubrs
orb
lods
mov
mov
dec
roll
jecxz
in
aas
cli
shlb
enter
sub
pop
push
outsb
lret
mov
stos
dec
mov
hlt
nop
jmp
push
stc
mov
mov
inc
ss
sub
dec
shll
bound
arpl
addl
test
jecxz
add
xchg
fs
daa
mov
cwtl
mov
sub
shl
or
insb
push
sub
or
mov
sub
clc
inc
mov
aad
inc
outsl
aaa
pop
fnsave
fistl
xor
ror
mov
add
xchg
mov
subl
sub
sub
mov
out
or
jge
add
push
push
andb
out
out
jg
repnz
lret
call
dec
push
mov
cld
or
push
or
sbb
sarl
mov
jp
xor
in
nop
add
add
or
and
pop
dec
lret
mov
adc
jp
jecxz
in
pop
std
push
outsb
inc
imul
jge
pop
jge
jne
ret
mov
mov
loope
cmp
vzeroall
xchg
xchg
add
xchg
cwtl
inc
push
mull
out
call
cli
adc
mov
negb
jg
daa
pop
xor
dec
and
sub
aaa
push
inc
pop
int
pop
scas
and
adc
bound
dec
repnz
cmp
mov
lods
xchg
inc
das
xlat
mov
xorb
pop
cmpsl
stos
insl
jmp
pop
or
rorl
pop
add
pop
mov
adc
aam
stos
loopne
enter
push
or
mov
lcall
daa
std
dec
add
push
cmp
cltd
lcall
mov
cwtl
xchg
ret
cltd
mov
mov
mov
mov
ds
jge
jge
jnp
int3
mov
sub
and
pop
pop
mov
outsb
std
or
and
nop
or
loopne,pt
jne
cmpsl
lahf
sbb
mov
sub
pop
xor
or
jmp
test
sbb
aad
mov
xchg
in
addr16
mov
fldenv
lds
fcomps
stc
fdiv
test
pop
lcall
test
popa
adc
insl
fwait
je
imul
daa
mov
jns
mov
xlat
jg
mov
call
cltd
nop
ss
mov
push
jecxz
xchg
mov
jg
lods
mov
pusha
out
sti
punpckldq
mov
bound
data16
movsb
pop
js
test
pop
fdivp
and
in
es
jge
mov
xchg
push
subb
xchg
je
sti
mov
push
jle
test
sub
jl
mov
ss
mov
in
mov
lea
fisttpll
pop
xor
jo
outsb
cmpsl
mov
mov
inc
das
fiaddl
cmp
fiadds
lods
mov
add
mov
out
subl
xchg
push
and
ret
les
ja
push
loope
hlt
push
or
push
rcll
imul
adc
int
daa
test
repz
imul
mov
shr
ss
cli
enter
xchg
xlat
pop
sti
outsl
faddl
mov
jmp
cmpsl
repz
scas
test
add
adc
out
lret
ja
mov
std
mov
scas
sub
hlt
mov
sarb
or
lret
jg
xchg
jo
lcall
cmp
pop
jl
and
pop
test
xorl
cmpsb
cmovnp
jecxz
add
sbbb
mov
push
js
lahf
ss
mov
ret
cmpb
filds
push
mov
movsb
addr16
mov
jbe
and
mulb
scas
and
adc
in
mov
and
adc
inc
mov
into
pop
mov
stc
loope
icebp
or
mov
fsubl
stos
mov
or
enter
mov
xchg
or
mov
outsb
lock
push
jno
fmulp
mov
stos
lds
lcall
inc
popa
sbb
lcall
or
push
mov
das
mov
icebp
gs
push
dec
scas
cmc
outsl
lea
sbbl
enter
stos
cmp
and
das
inc
cmp
xor
sbb
adc
arpl
jbe
mov
sbb
add
int3
in
dec
mov
push
pop
push
roll
rorb
arpl
iret
push
cmpsb
and
jmp
sahf
aad
push
and
fsub
sti
stos
rcrl
sbb
pop
pmulhuw
mov
pop
fwait
adc
mov
insb
jbe
lods
bound
mov
clc
js
shr
hlt
sub
fcoms
imul
ret
push
int
out
pop
add
jl
test
xchg
dec
mov
jecxz
mov
das
pop
mov
xchg
icebp
or
shrb
addr16
xchg
int3
nop
gs
sub
pop
push
cmp
outsb
popf
xor
push
sbb
je
stos
push
out
pop
ret
stos
data16
mov
jle
jne
mov
loop
aas
sbb
inc
testb
inc
aas
loopne
insl
orl
mov
gs
xchg
cmpsl
shlb
loop
stos
mulb
test
les
pop
dec
mov
pop
adc
pop
xor
movsl
mov
outsl
inc
cmpsl
xchg
pop
rorb
add
cltd
fadds
jae
xchg
or
fnsave
idiv
nop
clc
xchg
popa
cld
lea
xorb
loopne
xor
jb
std
sahf
aaa
mov
out
inc
mov
cs
outsb
dec
sub
sahf
loope
out
xor
mov
das
hlt
dec
ja
adc
cmpsb
sti
in
mov
mov
mov
int3
dec
mov
ret
outsl
mov
mov
aas
push
bound
outsl
adc
add
imul
insb
sahf
stos
call
sbb
inc
mov
jnp
pmuludq
mov
sub
outsb
lds
imull
nop
jl
jb
stos
xor
inc
dec
repnz
loopne
subb
mov
and
and
mov
daa
pusha
and
xchg
cmp
xchg
inc
or
or
xchg
mov
and
mov
lret
jge
dec
cmp
sbb
pop
mov
inc
pop
lock
clc
cmpsb
orb
iret
das
jge
mov
insl
mov
jb
and
ss
data16
xchg
xor
jmp
icebp
lret
inc
aas
cld
les
bound
loope
push
lds
mov
imul
pop
les
mov
push
push
ror
mov
shrb
mov
cmp
ja
jne
repz
jns
hlt
push
or
sub
jecxz
and
add
adc
jg
jle
dec
push
dec
mov
stc
dec
sbbl
rorl
sub
lcall
mov
fistpl
aam
fwait
mov
ss
jge
out
push
mov
outsl
cld
pop
in
mov
add
mov
cli
ljmp
popa
jge
xchg
daa
jg
imul
stc
push
or
std
loope
adc
push
popa
sbb
out
cmpsb
xor
dec
jnp
mov
xlat
sbb
mov
movsl
add
mov
arpl
sbb
ja
inc
shlb
pop
jmp
mov
in
adc
addr16
mov
sub
cmpsl
cmpsl
cmp
jge
mov
mov
icebp
and
mov
int
lea
ds
negl
stos
mov
ficoml
mov
in
cmp
inc
loop
pop
stc
cmp
icebp
pop
negl
cmpsl
inc
push
sbb
lret
nop
outsl
dec
lock
out
mov
push
adc
cld
push
add
mov
sbb
mov
daa
das
dec
push
pop
out
xchg
aad
pop
in
insb
add
adc
test
sbb
jns
mov
cmp
test
fisubl
in
out
arpl
in
lods
xchg
jle
xchg
xchg
subb
addr16
cmpb
ds
sarl
fbstp
imul
mov
sub
ds
popa
jmp
xor
repz
mov
adc
adc
jb
fsubl
ficompl
sub
shrb
sbb
jmp
cs
leave
ret
push
rclb
call
shlb
cmp
inc
shrb
cmp
ficomps
mov
shr
push
cmp
out
scas
mov
das
dec
add
cltd
cmp
mov
xchg
mov
push
sahf
dec
cmp
cli
clc
into
out
add
and
mov
jae
and
adc
cmp
mov
adc
cli
aas
ja
dec
es
push
int3
addr16
in
dec
mov
movsl
cld
inc
jb
adc
pop
mov
insb
xchg
and
insb
hlt
xchg
pusha
adc
ja
cmp
mov
clc
inc
and
sub
cmpsb
movsb
lret
or
lock
lds
cmc
pop
mov
enter
add
pop
add
les
adc
cmp
sbb
sarb
mov
outsl
cmpsl
jecxz
add
mov
cmp
dec
and
jmp
psrad
sub
jnp
cmpsl
fidivs
cltd
pop
jo
cmp
lahf
std
adc
dec
movsb
xchg
rcll
sbb
fisttpl
sbb
call
inc
adc
jle
lock
in
cld
and
push
stc
and
int
insl
push
or
jnp
sbb
pusha
cs
pop
cmc
leave
cmp
sub
rolw
or
mov
or
mov
mov
sahf
cmc
mov
nop
xchg
sub
or
mov
ss
clc
dec
sub
data16
lea
pop
pop
cld
jecxz
cld
call
outsb
repnz
and
cmpsl
mov
aas
push
scas
shll
sahf
and
mov
cmpsb
lods
add
dec
inc
push
sbb
xor
js
nop
fsubr
jmp
mov
fs
out
dec
adc
adc
mov
mov
jne
movsb
inc
mulb
fnsave
fildl
sbb
or
in
xchg
andb
push
inc
mov
xor
push
pop
mov
test
push
fs
shll
jb
push
mulb
push
inc
aas
ss
into
std
push
stos
sbb
xorb
repz
clc
dec
dec
jg
cli
adc
aas
sub
outsl
pop
ss
dec
jge
fwait
fwait
sti
and
add
pop
xchg
cwtl
xor
repnz
std
adc
div
in
and
es
mov
js
scas
push
inc
and
jns
inc
outsb
int3
adc
jne
std
imul
hlt
dec
in
and
shlb
push
mov
sbb
hlt
and
fstps
xchg
cltd
sub
sbb
inc
fldcw
cltd
push
pusha
loopne
inc
push
adc
add
and
ja
sub
push
jmp
jge
push
push
xor
outsl
cmpb
test
jae
fildl
mov
je
xchg
cli
loop
dec
hlt
adc
lods
popa
mov
movsl
add
cmpsl
push
mov
stos
sub
xchg
xchg
mov
mov
ljmp
aad
out
sti
mov
or
out
mov
in
xchg
cmpsb
add
rcrb
sub
popw
in
cwtl
add
and
or
pushf
inc
andl
fsubs
jl
sbb
fdivrl
stc
dec
popa
fistl
xor
scas
fnstenv
icebp
sbb
dec
insl
sub
sbb
add
and
lods
adc
push
adcl
imul
int3
out
dec
xchg
pop
ss
sbb
add
dec
dec
dec
popa
das
rclw
sbb
jg
call
cltd
mov
loope
inc
lret
faddl
scas
push
cltd
int
and
insl
icebp
fcompl
nop
mov
xchg
and
lahf
movsl
push
movsb
mov
out
repnz
dec
xor
sbb
test
mov
cmp
in
sub
gs
addb
mov
xchg
ret
rolb
cmp
sub
xchg
lock
pop
xor
push
and
lods
loop
xor
fldcw
sahf
loop
dec
xchg
addr16
sbb
push
sub
fcoms
out
dec
aaa
add
sub
ret
fiadds
xchg
ss
or
add
cmc
aam
mov
dec
imul
cmpsl
loopne
outsb
sub
sar
cwtl
das
pop
jmp
in
orl
mov
shr
fisttpll
dec
icebp
hlt
out
inc
add
xor
dec
and
out
mov
mov
add
or
pop
cli
adc
cmp
adc
mov
xchg
add
push
lock
iret
lock
dec
je
push
sbb
jb
lcall
mov
cmpsb
mov
aas
cli
lds
lahf
mov
jge
daa
ja
xor
mov
and
in
add
cltd
ret
cs
in
repz
xchg
dec
cwtl
and
cld
iret
xor
and
push
push
and
adc
rorl
dec
xchg
jnp
and
sarl
xor
jp
add
roll
push
ss
inc
and
fidivl
inc
push
pop
ja
movsl
xchg
pop
lcall
adc
fcompl
dec
inc
mov
pop
jp
out
push
sahf
hlt
addr16
icebp
sub
stos
mov
stos
mov
cmpl
jo
dec
add
cmpsb
cmp
xchg
vpsrlw
in
cwtl
xchg
mov
out
dec
sbb
and
fisubs
shrl
lods
push
pop
or
xor
filds
ret
xchg
push
flds
pusha
mov
fs
imul
orb
cmp
xor
loope
sub
cmp
mov
xor
incl
push
fcmovbe
filds
push
iret
pop
mov
insb
mov
inc
bound
std
pop
rcrl
arpl
dec
lcall
push
aas
jne
mov
push
inc
bound
das
std
addr16
addb
add
xor
repnz
decl
pushl
dec
cs
nop
in
inc
xchg
cmpsl
inc
jp
cmc
cmp
push
lods
stos
and
stos
adcb
xchg
or
or
mov
add
jbe
sarb
mov
and
mov
adc
jno
mov
sbb
cwtl
mov
push
dec
sub
mov
in
sub
std
xchg
xchg
mov
xchg
sar
jbe
cmp
into
test
mov
imul
test
int
scas
adc
push
nop
cmp
lret
push
cld
fistl
mov
push
dec
xor
rorl
adc
xchg
push
les
aad
pop
aaa
inc
adc
or
pop
and
sahf
pop
test
stos
fwait
add
mov
add
insb
dec
outsl
mov
mov
adc
popf
cmp
xchg
cs
and
ror
mull
stos
push
adc
xor
das
cmp
inc
push
aad
and
push
jecxz
sti
enter
insb
int
sub
jno
repnz
sbb
xor
mov
or
cmp
andl
push
cmp
mov
push
dec
and
jne
test
adc
pop
lcall
xchg
insl
pop
sbb
ret
fisubrl
pop
cmp
mov
out
xlat
xor
lea
push
mov
mov
cmpl
movsb
sub
sti
xchg
fstl
mov
xor
notb
and
jbe
lret
pop
xor
cmpl
sub
cs
scas
push
sub
cmp
jns
stos
push
push
mov
push
dec
loope
repnz
test
sub
xor
aas
aaa
push
inc
sahf
xchg
xor
pop
icebp
rcrl
xorl
push
fidivl
pushf
cmc
mov
fnsave
fwait
stos
xchg
dec
popf
inc
andb
imul
cmpl
push
mov
adc
stc
je
or
js
mov
scas
mov
mov
mov
lods
or
lds
adc
in
dec
push
pusha
shll
pop
mov
jp
scas
movsb
add
sti
cmp
jg
pop
hlt
fcmovnb
data16
imul
pop
adc
icebp
xor
je
jne
dec
mov
pop
push
mov
adc
push
dec
push
test
rep
or
push
and
pop
jbe
jle
mov
stos
pop
cli
bound
xchg
inc
cwtl
rclb
std
jle
popa
dec
jns
mov
je
stos
fsubs
dec
push
stos
mov
jo
jmp
adc
loop
hlt
aad
mov
adc
cli
movsl
insb
mov
mov
mov
mov
sbb
and
cs
outsl
sar
shlb
movsl
lret
lcall
or
test
je
and
jg
movsb
iret
jmp
aad
sti
jne
add
pop
popa
jl
hlt
lods
pusha
jecxz
les
pop
dec
leave
loope
or
push
mov
mov
add
push
iret
lods
gs
arpl
mov
inc
mov
and
popf
aaa
jne
mov
jge
stc
cld
push
loopne
pushf
pushf
call
scas
stos
adc
aam
jno
jge
mov
cmc
pop
mov
push
fmull
in
fldt
ss
dec
lahf
ror
addl
add
mov
data16
call
mov
cmpb
ds
shrb
inc
push
int3
adc
repz
cmp
or
xor
xchg
push
or
fldenv
mov
or
movsl
cmp
sub
xchg
rclb
fidivl
mov
and
sahf
cmp
push
mov
add
mov
fs
into
pusha
or
jo
inc
ja
test
mov
popf
mov
fldl
add
xchg
mov
push
sub
rorb
mov
inc
and
sub
xchg
sub
sbb
sub
mov
in
or
call
inc
stos
addb
inc
sahf
xchg
dec
repnz
enter
push
jle
jns
inc
xor
inc
and
sbb
mov
xchg
fucomp
repz
sbb
and
pop
cmpsb
jmp
lret
cmpsl
push
mov
adc
stos
in
into
cli
inc
mov
jo
or
pop
nop
mov
lods
push
mov
lahf
lea
push
xor
adc
jg
addr16
add
lock
push
cmp
pop
out
iret
sub
cmp
test
mov
outsl
ret
iret
or
and
lock
ret
push
ss
mov
pusha
push
lock
cmp
mov
mov
ljmp
insl
lea
pop
test
ljmp
test
ret
addb
jbe
ds
insb
add
loop
pop
jne
cmc
adc
in
cmp
xor
cmpsl
mov
in
inc
es
sub
pop
adc
repnz
mov
cmp
ret
cmp
jg
mov
daa
lret
xlat
std
les
lock
stos
stos
lea
nop
rorb
jmp
jl
scas
xchg
out
fdivs
cli
jp
xor
ss
inc
loopne
jl
sub
cmovns
push
mov
push
fstpl
mov
fdecstp
dec
mov
dec
dec
sarl
mov
rcl
pop
popa
dec
jnp
add
add
enter
lret
mov
xor
data16
sbb
jl
aad
or
fisttpll
jp
sbb
shlb
in
mov
lahf
icebp
cmp
lret
out
inc
fdivrs
aaa
inc
push
scas
dec
push
test
adc
xor
shl
inc
mov
jo
xchg
jle
sarl
fs
mov
iret
cld
ds
ds
cs
test
iret
sarb
dec
sbbb
push
jg
les
rclb
inc
xchg
dec
adcl
out
lea
push
ret
test
xchg
push
pop
or
stos
pop
mov
mov
cld
and
dec
inc
xor
and
xor
outsl
shll
xchg
sbb
jo
xor
jl
sbbl
pop
sub
mov
outsb
xchg
ret
xor
out
and
and
cmp
xor
push
mov
pop
mov
jne
lret
faddl
mov
jge
jecxz
out
test
ret
test
mov
cmpsb
out
and
and
unpckhps
cmp
and
jo
adc
fdiv
aas
cmpsb
ljmp
cmp
les
push
repnz
jbe
adcb
mov
mov
lcall
int3
mov
lret
push
fldenv
jne
outsl
jp
pop
rclb
les
sbb
cs
test
fbstp
dec
lret
sub
cld
push
inc
test
jno
in
dec
fisttpll
sub
shll
test
sub
in
jbe
mov
stos
push
adc
lods
andb
pop
stos
add
dec
inc
or
enter
mov
ret
xchg
push
jmp
lcall
add
lret
or
sub
loop
mov
sub
mov
adc
mov
cmp
cmc
loope
aad
sbb
mov
roll
mov
add
pop
in
adc
mov
mov
arpl
or
aam
rcrl
xchg
ret
out
stos
or
loop
sub
push
inc
mov
lea
lret
push
cmp
and
mov
lret
insb
ljmp
push
ret
leave
movsl
sbb
push
xor
fcmovne
push
lret
sub
cmp
cld
cmp
cld
andl
inc
sub
es
pop
pop
test
xor
jbe
push
orb
push
stos
xlat
pusha
shlb
xchg
fiadds
insl
mov
les
push
adc
sahf
fs
jns
les
mov
mov
xchg
vmovss
adc
cmc
push
std
cmp
rorb
aaa
xlat
rcrl
std
les
cli
jle
pop
dec
aad
cmpsl
jle
pop
mov
shlb
mov
nopl
enter
xchg
cmpl
dec
sete
jmp
or
jp
mov
rcll
sahf
inc
xchg
inc
sub
in
jno
xchg
cmp
cmc
mov
mov
stos
out
or
mov
repnz
mov
add
stos
mov
gs
jp
or
gs
pop
jg
jae
xor
xor
cmp
cltd
push
xchg
sbb
repz
jnp
add
pop
outsl
mov
mov
push
cmp
ljmp
xchg
dec
xlat
push
xor
xchg
test
push
inc
loop
jl
xor
or
cld
xor
cmpsb
and
xchg
xchg
mov
pusha
xchg
xor
lret
das
fimull
push
xchg
and
nop
leave
mov
mov
and
mov
jno
sbb
mov
or
pop
xchg
jo
add
push
sub
bswap
dec
pop
dec
sub
jbe
and
sub
inc
data16
in
lret
dec
push
jne
addb
and
add
test
dec
xchg
push
imul
xor
xor
xor
push
shl
and
or
cmp
out
jmp
mov
test
mov
out
ja
mov
cmp
jb
lahf
inc
in
insl
cmp
pusha
push
mov
sub
pop
test
test
mov
int
and
enter
js
fimull
es
cmp
jne
lods
rcrl
mov
inc
push
lock
out
xchg
pop
mov
loop
enter
pop
mov
mov
xchg
xor
into
inc
mov
add
pusha
cmp
and
outsb
leave
fadds
loope
aam
xchg
xor
jl
enter
mov
gs
fstl
jecxz
test
or
add
clc
fninit
pop
or
inc
fwait
popa
sarl
and
pavgw
mov
add
push
xchg
ljmp
sti
das
xor
dec
pop
mov
icebp
inc
xor
mov
xchg
test
lock
mov
lds
std
push
xor
aas
rcll
aaa
inc
jl
gs
inc
xchg
sbb
xchg
repz
pop
repnz
jo
stc
lret
incb
push
daa
or
fldcw
loopne
outsl
sub
sbb
fstpl
fidivrs
sub
cmpsl
ss
mov
test
fwait
call
dec
arpl
fwait
ret
mov
shrb
fs
or
sub
dec
jecxz
leave
jno
stc
jge
loopne
cmp
mov
sub
xchg
xchg
shll
inc
jnp
pusha
cli
mov
loop
arpl
push
push
xor
inc
lret
and
aad
roll
cs
mov
in
cmp
sbb
jg
into
mov
mov
push
shl
aad
lahf
mov
in
xor
cmc
das
dec
add
inc
pop
or
cli
jne
lret
rolb
sarl
daa
push
and
out
fisubl
dec
mov
out
shlb
mov
cmp
lock
dec
sahf
and
out
mov
nop
or
cmp
ss
xor
inc
push
popf
sahf
mov
add
dec
sub
mov
dec
js
cmp
sub
add
xor
loopne
mov
xor
sub
ret
cmp
xchg
xor
push
push
push
xor
into
jmp
loope
add
push
xchg
aam
fcomps
xor
fxch
das
sub
sbb
jge
js
mov
xorl
jb
xchg
rcrb
cltd
xchg
lahf
push
stos
add
mov
push
cwtl
sub
out
cmp
repz
je
imul
call
jo
cmp
push
lea
jge
mov
sbb
jne
fisubl
mov
stos
sbb
mov
dec
and
test
jo
loop
std
cmp
adc
aaa
mov
cmpsl
in
ljmp
sbb
xor
push
jmp
lret
aad
adc
xchg
cwtl
rorb
xchg
enter
sub
mov
mov
cs
sbb
mov
inc
sbbb
iret
loop
sub
add
cs
stos
fbld
lret
dec
arpl
add
enter
xor
add
roll
sub
jb
sbb
decb
xor
push
roll
push
mov
mov
push
mov
fidivl
mov
sub
sub
int3
nop
xor
jo
jne
jb
xlat
jns
or
sbb
mov
jge
xchg
mov
xchg
dec
test
sub
inc
or
scas
js
repnz
repnz
xor
sarl
sbb
adc
ret
test
sbb
ffree
jp
movsl
xor
iret
xchg
sub
add
lods
jl
xchg
inc
outsl
outsb
leave
outsl
xor
mov
fwait
inc
xlat
inc
cmp
ss
mov
adc
add
addr16
pushf
and
xchg
inc
pop
ljmp
cwtl
xchg
shlb
inc
dec
sbb
and
pusha
jmp
add
outsb
in
cltd
inc
sbb
sub
xchg
imul
and
mov
in
mov
mov
mov
sub
adc
xor
in
xchg
leave
rorb
ss
and
jmp
dec
in
test
jmp
or
pop
mov
push
and
cwtl
jbe
incb
das
lock
testl
or
dec
scas
scas
add
les
inc
sbb
test
lods
cltd
test
mov
sub
test
test
xchg
out
push
mov
rolb
ja
mov
mov
adc
push
mov
mov
clc
jo
fmul
popa
dec
jecxz
call
dec
or
inc
fisttpl
pushf
in
jecxz
add
popa
mov
sub
pusha
cmpsb
pop
xor
mov
dec
dec
repz
adc
outsl
dec
or
fs
mov
push
decl
std
or
jmp
insb
dec
adc
popa
dec
dec
stos
mov
lods
or
aaa
pop
mov
cmp
cmpl
data16
jnp
shll
pop
scas
das
rclb
in
cmp
add
cli
notb
push
into
pop
cli
mov
mov
ljmp
xlat
sbb
jne
fisttpll
sub
jb
mov
mov
xchg
icebp
sub
aam
in
js
into
push
push
insb
adc
roll
push
test
aam
sti
out
shr
dec
jbe
rcrl
xor
mov
mov
xchg
and
imul
cmp
pop
lods
sbb
mov
into
je
mov
add
and
out
addl
push
cmp
inc
and
inc
pop
and
inc
js
xor
fisubrl
iret
loop
addr16
cli
les
movsl
mov
mov
add
out
xchg
icebp
add
push
scas
fstp
mov
nop
pop
test
fdivr
into
lds
mov
les
imulb
jp
and
add
int
and
pusha
in
stos
lock
dec
jbe
pop
xchg
mov
push
xchg
xchg
sbb
cmc
adc
ret
xor
dec
mov
mov
sbb
inc
or
bound
adc
leave
mov
mov
insb
xor
cli
call
rorl
lods
addr16
xlat
push
push
add
mov
sub
pushf
cwtl
rol
pop
shlb
jp
fs
imul
push
aas
and
push
pop
lods
jg
push
sub
xchg
adc
pop
arpl
int3
nop
orb
insl
stos
adc
into
inc
xchg
ret
jno
jne
xchg
sbb
push
mov
test
lods
jno
jmp
or
dec
jne
lds
sarl
xor
sbb
addr16
imul
daa
ja
addr16
and
hlt
ret
push
push
aam
shl
xchg
or
call
pop
scas
into
mov
ret
dec
mov
pop
lcall
jge
cmp
mov
or
mov
hlt
stos
dec
outsl
lea
push
ds
cmpb
pop
cmp
xor
repnz
pusha
sahf
xor
pop
scas
cs
sub
add
loope
xchg
lahf
fcmovnb
movsl
xor
cltd
dec
rcr
mov
pop
xchg
mov
inc
mov
mov
inc
sbb
dec
jge
jmp
loope
push
inc
fsubrl
add
jl
sti
in
cli
movsl
xchg
iret
xor
sbb
or
int
inc
lock
sbb
testb
shl
fdivrl
pop
sbb
xor
mov
popa
sub
fcomi
jge
fadds
cmp
mov
adc
and
push
loopne
pop
imul
stos
les
std
jae
xchg
pushf
imul
fcompl
cmp
xchg
cmpsl
mov
stos
jnp
mov
es
dec
inc
mov
aad
push
shl
or
mov
popf
out
or
ja
fsubp
out
add
in
and
pop
lret
dec
xchg
mov
stc
bound
push
pop
push
adc
cmp
adc
pop
test
adc
lods
push
cmpsl
sub
stc
jbe
sub
jle
sub
mov
aaa
push
pop
test
pop
jge
pop
mov
and
xor
nop
jge
mov
lock
iret
repz
stc
daa
sbb
sub
sbbb
jno
mov
es
jecxz
orb
pop
jecxz
cmp
lods
jg
xchg
jb
std
dec
mov
stos
call
jp
movb
jno
aas
movsl
aas
outsl
ret
stc
inc
fwait
push
in
jge
mov
or
dec
stc
imul
xor
data16
cmpsb
mov
pop
sub
mov
dec
test
mov
mov
lcall
lahf
test
cmp
inc
cmpsb
sti
pop
xorl
ficompl
arpl
sbb
jp
adc
faddl
mov
sub
jmp
add
out
cltd
iret
sbb
js
sti
mov
call
aam
pop
sub
pop
mov
or
mov
aad
repnz
and
mov
sub
mov
xchg
orb
xchg
rclb
imull
out
sti
outsl
and
xor
aas
mov
out
lret
in
and
popf
push
mov
push
popf
push
test
outsb
fadd
cmp
and
push
cs
aam
stos
add
fwait
out
loopne
xor
mov
insb
jae
sti
fisubs
dec
f2xm1
xchg
es
repz
mov
jp
pop
out
fistps
xchg
movsl
dec
rcl
pop
cli
lods
add
dec
pop
aam
movnti
aad
jb
sub
mov
rep
jnp
popf
sub
adc
mov
xchg
xchg
mov
mov
inc
bound
fmull
adc
push
ffree
push
cs
or
fcmovnbe
adc
hlt
popf
push
cmp
repz
out
sbbb
out
inc
pop
xor
movsb
inc
fistpl
ljmp
popa
xchg
out
add
xchg
pop
filds
xchg
inc
pop
or
aam
sub
rcll
in
test
fmull
dec
lods
es
push
aad
inc
or
fwait
loope
and
xchg
hlt
or
mov
imul
pop
jbe
mov
out
pusha
cmp
sqrtps
call
icebp
pop
mov
xor
bound
das
mulb
lret
nop
xor
out
adc
xor
mov
mov
xlat
mov
and
mov
imull
movzwl
addr16
mov
sbb
fwait
mov
cmpsl
gs
iret
in
stos
mov
mov
loope
test
sub
inc
cmp
shlb
cltd
das
xchg
decl
lods
mov
mov
mov
lock
xchg
cmp
subl
jno,pn
mov
pop
inc
icebp
fstpt
scas
jmp
jb
pop
test
nop
sti
inc
push
testb
mov
inc
dec
aas
and
aaa
flds
sub
cmc
aad
xor
dec
inc
dec
mov
pop
pop
pop
test
pop
clc
gs
leave
xchg
add
sbb
insl
mov
mov
movsb
and
lods
xchg
add
push
aas
inc
bound
fmul
test
mov
je
aas
or
into
mov
mov
addr16
push
in
or
pop
xorb
sub
ret
fadd
int
mov
push
fprem1
cmp
movsl
hlt
jne
push
out
mov
xchg
add
pop
in
cmp
loope
dec
and
pop
rorb
arpl
ret
cli
add
data16
mov
xor
xchg
jp
xchg
call
std
push
ret
and
out
dec
outsl
insl
out
adc
xchg
addr16
aad
push
cmpl
test
fwait
sbbl
sub
loope
pop
or
inc
stos
lret
add
loop
cs
mov
mov
das
mov
xchg
adc
and
cmpsl
mov
push
arpl
jb
cmpb
push
in
repz
push
ss
fbstp
pop
xchg
and
push
enter
mov
loope
xchg
pop
and
mov
out
lea
push
mov
xor
jle
adc
aas
fwait
jnp
scas
subl
test
mov
jno
add
addr16
and
aam
into
or
js
je
mov
mov
orb
call
fcompl
mov
pop
add
xchg
add
fsubrl
sbb
pmullw
test
dec
adc
add
jae
inc
mov
xchg
test
mov
inc
jl
sub
fdivs
imulb
or
adc
jl
pop
mov
insl
pop
test
and
and
lock
mov
mull
xor
in
mov
vpmacsdql
adc
lret
inc
mov
test
adc
insl
push
sbb
sbbb
push
xor
and
les
enter
inc
lret
decb
cmc
mov
xchg
and
mov
sbb
ja
xor
cmp
out
pop
stos
sarl
cmp
enter
sub
es
dec
mov
jecxz
mov
xchg
loop
test
dec
jmp
sub
jb
adc
xor
jbe
imul
or
in
inc
movsl
in
adc
push
pusha
rcrb
fsubr
add
stos
xchg
pop
xor
xlat
scas
or
lret
sbb
xor
jne
push
testl
rcr
mov
cmp
mov
sti
sarl
mov
out
gs
mov
mov
rep
mov
push
jns
pop
xlat
cmp
imul
mov
inc
dec
adc
jne
xor
imul
jo
inc
jmp
sbb
dec
sbb
cmp
mov
cmpsb
mov
lret
dec
insb
das
into
dec
ds
pop
pop
lret
rcrl
shl
loop
push
aaa
xor
jae
ljmp
xchg
inc
xchg
leave
push
call
or
aad
mov
adc
aas
adc
sub
mov
iret
lcall
sar
loop
pop
andl
es
xchg
add
inc
inc
jmp
adc
mov
jae
imul
push
mov
jmp
mov
adc
mov
inc
adc
dec
push
mov
shll
repnz
sbb
test
into
jo
icebp
ja
test
dec
cmpsb
fwait
dec
and
shrl
in
xchg
pop
xchg
add
push
mov
sahf
lahf
sbb
out
fcmove
fs
test
xchg
inc
pushf
mov
cmc
jb
dec
jge
lds
dec
push
outsb
std
jge
ss
cwtl
pop
popf
test
cmp
add
loop
cli
scas
jno
and
fldt
lods
cmp
or
jns
mov
sub
mov
xchg
stos
out
jge
and
in
add
cmp
out
lahf
dec
inc
push
dec
fmuls
or
pop
cmc
movsb
andb
inc
loope
sbb
push
sahf
fistpll
jecxz
shl
pop
xchg
xlat
sub
test
imul
icebp
xlat
jecxz
sbb
int3
iret
stos
sarb
shlb
sbb
shl
add
aad
and
dec
mov
lea
mov
pop
sub
pop
cli
jne
jo
cs
dec
xor
inc
iret
lods
or
popf
push
push
sbb
jg
mov
lret
add
inc
sub
inc
gs
xchg
pop
mov
mul
orps
es
scas
sbb
repnz
cld
shlb
hlt
ret
test
je
mov
jg
adc
inc
or
dec
lds
push
dec
hlt
shlb
adc
xor
addr16
stos
fs
add
das
hlt
out
movsb
pop
aas
loope
movsb
jmp
mov
add
xor
sub
div
test
jae
shl
jp
cmp
fiaddl
push
adc
dec
push
and
pop
arpl
outsb
lods
pop
outsb
xchg
push
test
shl
pop
movl
fistps
in
inc
cltd
jne
shl
push
cld
mov
pushf
adc
jnp
jnp
push
lret
je
mov
lds
dec
sub
repz
cld
gs
sbb
test
ljmp
cmpsb
jne
lahf
notb
adc
sahf
test
lahf
scas
cmpsb
push
out
sti
pop
lods
stos
fisubrs
gs
add
pop
inc
and
push
pop
popf
movsl
jbe
rclb
gs
lret
orb
jle
pop
pop
push
in
jo
cmp
jne
push
stc
ret
jecxz
adcb
es
subl
jno
rclb
insl
cli
sahf
icebp
lret
sbb
pop
lea
lods
xlat
xor
sbb
jecxz
add
or
mov
jmp
leave
sub
shlb
movsb
outsl
mov
jo
mov
push
call
rorb
rclb
cmc
loop
int3
clc
fdiv
add
push
adcl
sub
arpl
adc
pop
mov
cli
dec
repz
inc
aas
jmp
cmp
popa
sarl
xchg
aam
pop
adc
push
jecxz
pushf
test
pushf
pop
xlat
push
xlat
data16
lds
std
inc
aad
jmp
negl
js
sbb
or
mov
push
inc
pop
mov
mov
mov
pushf
add
std
xor
fld
cmp
push
cmp
or
rorl
pop
inc
adc
sbb
aaa
add
pop
pop
data16
bnd
mov
mov
lods
stc
int
dec
mov
xchg
mov
clc
or
add
mov
int
into
mov
dec
and
mov
pusha
pop
xchg
mov
mov
mov
jne
add
cwtl
mov
mov
xor
mov
fsubrl
dec
or
lea
fs
cmp
testl
or
inc
stos
imul
cltd
mov
in
adc
pop
pop
mov
push
and
mov
dec
ror
mov
and
ds
scas
rcrb
ror
mov
xchg
arpl
shrl
mov
xor
aam
mov
pop
sub
and
jnp
dec
push
push
push
loop
jb
add
clc
jecxz
outsl
mov
lahf
or
and
pop
add
xchg
mov
inc
outsb
jbe
bound
mov
subb
inc
lahf
push
je
pusha
jb
and
mov
xor
stos
mov
and
jmp
sub
movsl
mov
adc
add
sbb
mov
xor
push
xor
insl
inc
xchg
and
pop
hlt
fs
pop
sbb
out
popf
mov
fmuls
aad
popf
dec
add
je
mov
ret
sti
push
shrb
insb
adc
mov
adc
cld
sbb
mov
add
cltd
ret
and
pop
push
sub
mov
mov
xor
mov
mov
adc
aaa
subps
mov
dec
call
push
jbe
mov
fldcw
mov
imul
outsl
jbe
push
mov
add
and
inc
cmpsl
mov
int
push
pandn
mov
outsl
rcr
test
test
lret
mov
lods
jno
ds
call
rcrb
sub
ret
loopne
xchg
ljmp
sbb
xchg
lods
ljmp
pop
in
lds
ficoms
cltd
shll
and
xchg
fisubrl
ljmp
sti
add
js
cmp
inc
subl
test
ds
js
mov
outsb
or
mov
movsl
mov
ret
mov
mov
mov
xchg
pop
rcrl
das
or
subb
das
cmp
xchg
iret
loop
pop
ror
shll
ret
call
mov
or
cmp
les
clc
add
sub
dec
adc
adc
xchg
out
imul
mov
pop
add
add
movsl
ss
sbb
rcrb
sub
sub
jb
addb
mov
rcrl
out
push
je
insb
mov
sub
iret
cld
adc
ds
lds
rcrl
push
jo
adc
fisttpll
or
push
lret
push
notl
xchg
add
push
sbb
adc
ds
fcomps
lahf
dec
adc
repz
push
push
mov
int
mov
ret
rcrb
lahf
push
cmpsb
in
aam
fwait
or
insl
cmpsb
push
inc
int3
inc
add
mov
jg
shlb
dec
pushf
and
push
call
in
adc
add
jecxz
xor
out
mov
dec
jmp
sti
dec
jg
loope
jecxz
sub
push
es
mov
out
lret
call
or
in
xor
ret
jp
jle
ud0
or
xchg
dec
stc
lods
push
mov
xchg
mov
popf
fwait
notb
jns
inc
and
jle
movsb
inc
or
mov
inc
mov
call
adc
mov
loop
cmc
mov
xchg
les
sahf
xchg
sub
arpl
xor
sub
mov
mul
mov
arpl
lcall
jle
jecxz
imulb
gs
fisubrs
mov
aad
bound
testb
pop
and
xchg
js
add
int3
mov
outsl
inc
insl
mov
xchg
fidivrl
shlb
in
and
mov
sub
xchg
pop
div
loop
jmp
lock
push
mov
push
repz
loopne
adc
dec
jecxz
dec
jg
mov
push
xor
call
into
adc
pushw
xorl
cmc
jle
sbb
arpl
dec
daa
insl
popf
test
cmc
mov
fimuls
or
mov
pop
mov
dec
inc
nop
inc
add
jmp
insl
push
xor
stos
icebp
loop
insl
sub
cmp
lahf
lods
data16
fistl
mov
fcomps
inc
pop
sbb
mov
cmc
sbb
in
xchg
mov
or
push
dec
cmp
cli
test
lcall
adc
das
pop
and
pop
fistps
xor
pop
es
test
mov
testb
lret
sub
jb
mov
jl
inc
roll
pop
sbb
push
inc
xchg
popf
rcrl
cmc
ret
push
lea
mov
ret
daa
inc
push
and
jnp
push
hlt
add
fimull
pop
mov
xor
xor
dec
add
js
adc
mov
sar
pop
xor
andl
ret
cmp
or
cli
in
loop
inc
mov
sbb
cmpsb
push
fmuls
cld
sub
sbb
xor
sub
push
subb
and
inc
jle
loope
imul
ja
ds
adc
jno
jb
loop
std
sbb
outsl
push
popa
roll
cmp
dec
jnp
xchg
stos
mov
xchg
ds
push
shlb
stc
adc
bnd
mov
xor
ret
and
and
fxch
lret
sbb
push
lds
xlat
roll
sbb
push
push
nop
lock
ret
mov
cmp
in
cltd
out
dec
jge
push
pusha
xor
jecxz
sbb
ljmp
dec
fcomps
cmp
sub
fwait
mov
mov
add
mov
loop
dec
mov
in
cmp
cmpsl
ljmp
push
rcrl
adc
mov
or
jp
inc
xchg
lods
cmp
add
jl
and
cld
cmp
pop
data16
ss
filds
mov
jge
call
push
loop
push
outsb
cmp
dec
pop
in
push
or
pop
stos
inc
mov
test
xor
mov
xchg
pop
hlt
cmovb
popa
mov
lahf
cs
leave
mov
ret
xchg
sub
and
dec
xchg
pusha
stos
inc
sti
ret
dec
addr16
xorl
dec
add
call
mov
mov
xchg
fwait
mov
test
or
xchg
out
int
es
mov
or
das
sbb
fcoms
mov
mov
jne
loope
sub
mov
fisttps
pusha
test
fnstenv
jge,pn
pop
stos
pop
and
sbb
dec
arpl
rorl
shl
cli
mov
push
lock
lock
mov
test
mov
shll
ret
mov
jne
js
lods
pop
mov
and
inc
sub
push
mov
popf
fadds
dec
sbb
jns
lret
aaa
loop
mov
sahf
push
into
or
inc
outsb
xchg
push
jp
in
pusha
jl
dec
xor
inc
inc
mov
mov
in
pusha
enter
push
push
repz
cltd
mov
fstl
imul
mov
pop
imul
xchg
sbb
pop
cmpsb
mov
js
sub
xor
sbb
es
loop
xchg
and
mov
lds
pop
xor
stos
jmp
sub
std
cli
dec
jne
daa
jbe
mov
xchg
adc
xchg
cmp
loop
insl
xor
popa
jo
mov
inc
jns
inc
dec
scas
mov
pop
xor
cmp
mov
pop
sub
inc
aam
and
ja
jle
and
push
mov
pop
popa
sbb
dec
stos
loop
or
outsl
aad
mov
fsubrp
rcrl
xor
or
mov
repz
cli
cmc
scas
sbb
or
cwtl
lock
stos
cmpsb
mov
mov
add
cltd
data16
jecxz
dec
sub
popf
adc
ljmp
fwait
mov
movsl
lock
sub
jecxz
push
mov
out
pop
cmc
icebp
inc
mov
pop
dec
xor
scas
inc
frstor
xchg
inc
mov
jge
mov
pop
mov
leave
fisubl
lods
out
ficoms
add
jl
jns
cld
popf
add
scas
je
hlt
cmpsb
push
jae
sub
or
mov
lret
adc
pop
mov
inc
cld
mov
pop
sub
inc
xor
push
add
push
dec
shl
shr
pushf
jae
lret
lss
dec
sub
pop
aas
iret
jns
sbb
and
fmuls
in
out
push
jb
mov
and
mov
mov
cwtl
arpl
lahf
fldt
orl
xlat
push
ret
ret
int
popa
jno
push
inc
movsb
ficompl
sbb
negb
les
xor
cltd
pop
shrb
cmp
sub
mov
pop
out
outsl
es
jle
or
xor
mov
ret
into
mov
ficoml
test
data16
xor
enter
cmp
pusha
xchg
stos
aam
and
pop
testl
je
push
jecxz
imul
add
adc
sub
scas
xchg
imul
mov
add
ljmp
dec
cwtl
sub
js
mov
cmpsl
and
xorb
push
andl
out
daa
push
inc
or
bnd
jnp
mov
or
inc
sahf
fdivl
in
mov
fmuls
jecxz
popa
mov
inc
popf
orb
and
fcoml
clc
adc
dec
ret
outsb
movsl
sahf
push
stos
or
cmp
add
xor
mov
add
push
popf
in
iret
mov
mov
movsl
rolb
xor
ror
sub
in
pop
cmp
test
lods
mov
rcrb
xor
xor
sbb
sub
and
xchg
pop
xchg
pop
xor
cmp
push
cmp
sbb
iret
in
fimull
push
movsl
mov
test
iret
or
mov
adc
ja
jmp
pop
enter
fldl
pop
ja
into
jmp
in
fwait
scas
and
dec
cmp
add
ret
cmp
and
mov
icebp
cwtl
pop
fiaddl
cmp
add
inc
mov
lock
push
jl
mov
insl
cmp
jae
fisubl
jmp
sub
pushf
dec
add
inc
jp
fdivl
push
mov
pop
ds
jmp
mov
xor
shrb
daa
lea
jae
mov
dec
ss
repz
clc
mov
rorb
push
push
or
repnz
insb
hlt
insl
lret
pop
int
test
dec
clc
fmul
adc
stos
mov
adc
dec
std
insb
out
aad
stos
flds
cmpsb
addr16
pop
xor
imul
sub
int
js
in
cmovno
add
in
ljmp
lret
ja
rcrl
loop
call
jbe
ror
mov
arpl
pusha
jae
je
mov
sbb
fwait
popf
pop
es
std
xchg
cmpsl
lahf
sti
mov
fimull
adc
adc
adc
lds
aaa
jp
push
adc
lret
or
cltd
ja
mov
mov
sub
sub
into
sub
fists
lcall
sbb
pop
fnstenv
mov
lock
shlb
cmp
inc
push
xor
jecxz
push
mov
rorb
mov
call
lret
shl
cli
mov
sahf
rorl
mov
divl
inc
jge
dec
and
pop
dec
enter
and
jp
or
insb
js
aam
cmc
push
fstl
js
jo
nop
jle
movsl
lock
fldenv
push
repz
mov
inc
jo
jnp
icebp
fcoms
test
rdtsc
rcr
mov
pop
mov
sub
pop
ljmp
jae
pop
pop
pop
in
xchg
stos
inc
rcrb
mov
cmp
mov
xchg
jge
push
stc
xor
push
shll
mov
inc
mov
add
nop
ss
push
scas
leave
incb
mov
mov
push
imul
xlat
jl
mov
orb
mov
adc
fsubl
outsl
scas
adc
out
pop
adc
rcrl
fidivrl
dec
and
leave
push
dec
mov
rcl
jb
cwtl
jns
enter
movsb
cld
lea
sub
push
icebp
fimull
aad
pop
push
push
cmp
and
pop
add
lret
mov
into
movsb
out
push
adc
ret
push
pop
pop
mov
ficoml
pop
push
test
divps
fdivr
bnd
cmpsl
jb
cmp
in
and
dec
mov
lcall
pop
and
inc
jns
call
dec
jae
and
mov
fs
cmp
mov
xchg
and
lds
push
and
fs
pop
rcrl
mov
rorb
jp
sbbb
insb
or
lret
add
sub
pop
push
fildll
enter
ss
das
in
sub
add
bnd
pop
jecxz
cmp
rcll
cmp
push
loope
sub
test
out
and
sub
push
mov
sub
mov
mov
xchg
mov
mov
mov
addb
mov
inc
pop
fbstp
out
loop
leave
inc
jne
and
push
or
cld
sub
push
bound
dec
cmp
aas
lods
popf
sbb
iret
fldz
subb
or
popa
fdiv
jno
ret
dec
ds
mov
mov
daa
xchg
push
jl
mov
fisubs
mov
mov
inc
inc
mov
mov
leave
lret
xor
push
and
in
ds
ljmp
fadds
sub
test
stc
test
mov
hlt
cmpl
mov
imul
pop
div
outsb
xchg
imul
add
sub
jns
ret
push
push
adc
repnz
cwtl
lret
ds
push
imull
mov
lea
cmp
lds
daa
pop
jno
cwtl
mov
fiadds
ja
jbe
insb
aam
mov
mov
int3
jle
cmpsb
pop
hlt
adc
lock
ja
ret
pop
std
cmp
stc
xchg
add
and
stc
xchg
cmp
mov
jb
xchg
mov
and
aad
dec
or
cwtl
in
fmull
and
popa
sub
sahf
jmp
adc
lret
pop
push
xchg
sahf
ja
sub
out
mov
pop
jl
push
aaa
ror
or
and
in
cmpsl
fsubrl
fincstp
mov
test
test
mov
add
cltd
cs
outsb
push
fxch
in
mov
mov
cld
lock
push
icebp
mov
outsl
lds
sahf
xor
loope
ret
dec
add
pop
movsb
add
into
cltd
arpl
fwait
negb
add
stos
mov
mov
xchg
pushf
jge
ljmp
sbb
outsb
push
xlat
and
das
xchg
ja
leave
les
jg
pop
mov
mov
cmovle
dec
fcoms
adc
or
jge
in
xor
dec
pusha
arpl
aam
pop
arpl
push
pop
cmp
js
pusha
fldl
add
cwtl
mov
mov
jp
hlt
scas
fistps
add
push
fists
int3
das
les
lahf
cmovge
leave
inc
in
mov
rcrl
cmp
cld
jge
xchg
fildl
and
orb
test
add
das
xor
fs
xor
mov
cmp
jo
and
sub
mov
les
loope
aaa
imull
push
xor
xchg
cmc
pop
push
push
sbb
enter
cmp
enter
sub
aas
rorb
pop
lret
movb
dec
jae
xchg
xor
push
pop
rcrb
ds
jl
cmp
or
andb
insb
pop
sub
jno
dec
leave
flds
xchg
jp
sbb
data16
and
mov
push
xlat
stos
push
fcompl
idivb
jnp
imul
sub
call
cmp
aaa
add
pop
push
mov
adc
dec
out
aam
sub
mov
and
add
xchg
mov
fsts
ret
psubsb
ficoms
mov
int3
mov
ficoml
mov
or
loop
dec
adcb
loop
push
sbb
loope
and
insb
lcall
stos
mov
and
inc
cmp
les
aad
jnp
repz
orl
mov
mov
add
mov
mov
mov
pop
stos
dec
mov
and
test
cmp
pop
add
test
cwtl
pop
sarb
xchg
inc
cmp
int3
sub
fldl
or
adc
jbe
aad
cltd
xor
mov
lret
pop
sub
mov
or
in
sahf
daa
adc
sahf
fiaddl
rorb
les
and
jge
repz
fld
mov
stc
xchg
popf
mov
fs
add
push
ja
test
or
mov
sub
test
lods
js
mov
pushaw
or
loopne
scas
imul
mov
inc
sbb
mov
pop
pushf
push
and
dec
cld
pop
mov
mov
pop
ret
or
xchg
adc
push
fisubl
ret
adc
pop
push
add
mov
or
xor
pop
xchg
inc
iret
and
add
popa
pop
lock
sub
jle
jmp
jno
test
cmp
hlt
pop
les
jmp
lds
jecxz
mov
movsb
push
ljmp
and
cmp
mov
mov
pop
sub
sub
movsb
xchg
pop
dec
xor
int3
loope
xor
push
popa
fisubrl
cmpsb
adc
xchg
gs
iret
push
mov
xchg
push
xchg
jne
jge
mov
ret
mov
scas
dec
pop
sub
xor
cmp
das
mov
mov
test
jmp
cld
push
arpl
and
adc
js
cwtl
fs
add
xchg
rclb
cmp
aad
mov
xchg
fcoml
jne
insl
fildl
adc
int3
jl
jle
add
out
cld
outsl
jnp
dec
and
add
ljmp
cmp
and
sub
sbb
mov
dec
lods
xorb
and
setns
xor
sub
mov
lea
les
or
ljmp
frstor
inc
pop
dec
leave
in
fistps
jbe
xchg
ret
scas
mov
out
sahf
sub
sbb
jge
adc
fs
test
sbb
jmp
jb
inc
mull
sbb
insl
xchg
loop
je
mov
xchg
jns
sub
jbe
jnp
mov
mov
mov
nop
popf
mov
pop
nop
pop
ret
insl
es
mov
or
mov
xchg
adc
rolb
data16
jns
dec
mov
xchg
mov
mov
scas
lods
and
xor
insb
adc
adc
add
sti
in
std
mov
mov
cs
adc
adc
pop
mov
loope
cmp
push
and
fwait
dec
sub
pop
icebp
cmpps
push
jg
data16
push
sub
orl
xchg
test
fwait
popf
lods
sahf
mov
cltd
ficoms
dec
or
and
push
mov
movsb
lret
cmp
popa
fsubrs
push
and
dec
fnsave
repz
xorl
dec
xor
mov
arpl
xchg
inc
add
cmpb
add
inc
fmul
mov
pop
or
fbstp
inc
jge
push
in
in
dec
cmp
push
mov
movsl
test
jp
aaa
jno
and
not
mov
in
data16
ja
pop
out
stos
movsb
je
push
jle
scas
inc
inc
or
add
sub
je
mov
dec
clc
pop
mov
dec
pusha
mov
rcl
sbb
fcmovb
movsl
fidivl
cmp
jge
movsb
and
ret
cltd
clc
aam
jne
cltd
and
loope
mov
push
inc
test
pop
in
mov
fdivs
mov
pop
dec
cmp
sarl
mov
and
push
imul
js
dec
inc
jae
sbb
sbb
in
popa
test
cli
inc
mov
fstps
arpl
xor
pop
dec
sbb
mov
ss
cmc
ret
dec
fildll
jecxz
lds
and
lds
cltd
mov
ds
std
out
mov
scas
add
test
jle
shlb
scas
jae
arpl
sti
adc
xor
adc
cli
test
adc
fchs
imul
clc
dec
out
xchg
mov
aad
mov
xchg
ja
ljmp
movsl
add
xchg
sbb
and
pop
dec
push
or
adc
or
jmp
test
scas
xchg
fdivs
pop
fwait
jns
mov
cltd
xchg
lds
lahf
cmp
insb
adc
xchg
sbbl
iret
jno
inc
add
movsb
arpl
sarb
and
cld
inc
mov
fldln2
inc
or
pop
mov
test
sbb
mov
push
cmp
stos
lock
sub
test
cmp
jge
inc
aaa
gs
cmp
pusha
dec
jmp
ror
xlat
jmp
cmpl
push
repnz
cmp
sti
leave
push
scas
pop
stos
int
mov
cld
cld
sarl
xchg
or
jbe
cmpsb
sub
push
popa
stos
mov
or
pop
or
push
fsts
fcoml
js
das
call
repnz
sub
jge
sbb
dec
pusha
sbb
loope
ja
xor
push
inc
sbb
out
sub
cmp
hlt
pop
iret
nop
pop
jns
ja
das
das
push
sbb
jg
loop
test
pop
cmpsl
jb
add
in
inc
cld
or
call
stc
outsl
addr16
pop
add
rclb
repz
sarb
fucomp
inc
mov
xor
mov
mov
fcompl
into
dec
hlt
popa
mov
mov
popa
in
and
mov
pop
push
lock
jno
pop
mov
mov
loopne,pn
out
adc
loopne
cmovo
in
sbb
xchg
xchg
repz
dec
mov
repnz
lea
frstor
imul
int3
sysexit
cld
adc
mov
push
sbb
mov
ljmp
xor
sub
or
out
or
inc
mov
into
mov
ret
shlb
ljmp
loopne,pn
nop
fdivs
nop
pop
into
cmp
pop
inc
and
push
and
mov
test
popa
hlt
daa
jmp
xor
lret
mov
rolb
sti
cld
add
ret
pop
ret
and
stos
sub
cmp
sbbb
test
jle
or
ret
movsb
fsub
mov
xor
push
into
pop
shrb
mov
cli
xchg
adcb
jge
daa
rclb
cmpsb
lret
movsl
inc
scas
cs
in
push
popf
adc
add
push
mov
and
cs
adc
mov
xchg
pop
outsb
pop
pop
mov
adc
xchg
lock
sub
jns
jno
pop
jg
decl
cltd
invlpg
les
inc
mov
lcall
js
movsl
mov
mov
xlat
outsb
inc
sbb
mov
inc
iret
mov
sbb
inc
cmp
fwait
fs
dec
push
pop
and
loope
movb
adc
mov
sub
inc
xchg
mov
jne
inc
enter
add
cmpl
dec
pushf
mov
lods
mov
pushf
clc
inc
pop
ret
mov
lcall
outsl
or
je
aaa
mov
adc
call
cmp
cmp
faddl
and
jbe
mov
stos
xchg
mov
in
cmp
insb
les
dec
and
movsl
xor
adc
mov
sub
dec
lcall
and
adc
mov
setno
mov
mov
cs
loope
push
mov
push
cltd
cmpsb
adc
imul
cli
dec
lock
movsb
xor
data16
cmp
into
addr16
mov
clc
dec
mov
xchg
arpl
adc
fwait
cmp
push
mov
mov
xchg
aam
bound
aaa
add
mov
add
ret
test
sahf
pusha
pushf
mov
fisubs
rcl
jnp
push
xlat
mov
mov
sub
add
or
xchg
lods
popa
div
std
mov
mov
pop
fildl
fimull
add
arpl
shl
negl
jae
lods
test
cmpsl
cmp
pop
fildl
int
xchg
les
mov
in
test
cmp
add
addl
test
dec
cmp
les
leave
arpl
push
loopne
dec
pop
orl
loop
int
out
fadds
test
lret
repnz
ds
loop
add
in
icebp
cmp
sbb
sub
sbb
xor
in
cmp
xchg
push
jnp
pop
pop
lods
xchg
ret
add
xadd
push
pop
stos
xchg
mov
fstl
cmpsb
cld
inc
shll
ljmp
push
inc
clc
aad
scas
icebp
int3
aas
cmc
jno
inc
iret
int3
sbb
lahf
mov
dec
aas
es
ja
cli
insl
mov
icebp
fistpl
push
pushf
out
lods
popa
mov
fisubrl
and
mov
mov
push
mov
aam
cwtl
xchg
cmp
cmpsb
jb
jg
cmpsl
mov
loope
jb
stc
sbb
pusha
cli
push
mov
ds
lret
mov
xchg
jae
fstpl
jge
jo
mov
in
out
shlb
cmpsl
or
pop
jp
jbe
mov
sbb
movsb
decl
stc
stos
sbb
adc
mov
out
lcall
or
cmp
int3
cmc
mov
icebp
or
inc
test
jge
jns
dec
or
xchg
daa
adc
mov
lock
sub
iret
js
push
cli
xor
daa
addr16
inc
lahf
mov
std
shl
insl
lret
jne
pop
xchg
clc
fisubl
arpl
jnp
inc
lods
addr16
sbb
mov
mov
int
xor
cmp
jns,pn
pop
cmpsl
sahf
inc
stc
pop
shl
mov
mov
mov
lds
mov
mov
mov
mov
jb
orl
call
sub
lahf
ja
loope
call
cmp
sub
xor
mov
sub
or
aam
cmp
in
sub
xchg
lret
cmp
or
mov
pop
popl
jmp
dec
stos
sub
popa
and
movl
inc
je
sbb
mov
or
inc
ret
lahf
std
xor
ret
xlat
mov
mov
cmp
add
rclb
push
xor
or
lea
stc
lock
iret
stos
scas
test
add
pop
test
movl
cmp
fwait
repz
aaa
insl
xor
pushf
test
ror
loope
movsl
popa
push
outsb
jmp
aad
div
cmp
or
mov
imul
outsl
xchg
push
jo
out
inc
push
xlat
sbb
pushw
dec
aaa
add
mov
mov
jae
or
cmpsb
pop
and
in
pop
cmp
jp
mov
xchg
mov
or
add
push
mov
and
mov
pop
mov
and
or
jo
or
xlat
mov
sub
iret
jb
pop
xor
xor
call
push
mov
lds
cs
push
mov
or
push
xlat
int3
in
jge
es
pop
arpl
cmp
and
in
imull
xchg
mov
out
lods
scas
push
pop
ret
aas
jne
mov
adc
fildll
adc
xchg
fimuls
pop
inc
outsl
jne
pusha
inc
or
mov
ret
xlat
adc
and
in
xchg
lds
or
movsl
mov
or
lret
scas
mov
adc
enter
xor
mov
cwtl
jne
mov
rcll
out
les
add
jns
inc
cmpsl
mov
rolb
loop
inc
shl
subb
pop
fstpt
nop
sti
mov
xchg
shlb
sbb
sbb
jmp
pop
sbb
push
cli
inc
adc
subl
fldt
or
cmp
pop
test
dec
aaa
push
lret
inc
sub
mov
shrl
cli
inc
roll
mov
sbbb
jl
or
loopne
mov
ficomps
or
es
adc
inc
mov
xchg
ret
or
shl
inc
arpl
test
jg
repnz
jl
jo
sar
insb
insb
in
adc
cld
or
pushf
enter
in
inc
and
jnp
js
mov
cmp
cmp
xor
shlb
sahf
xor
rclb
int
dec
pushf
fsubl
mov
mov
shll
or
repnz
sbbb
push
dec
mov
inc
aam
aaa
fcoms
js
bound
std
or
mov
sbb
push
cmc
inc
out
scas
cmp
cmpsl
cmp
pop
test
and
out
cltd
cmp
sbb
jne
adc
sti
das
mov
ja
jns
mov
mov
jp,pn
jbe
sub
leave
outsb
imul
or
mov
lret
push
in
mov
out
push
push
repz
jns
lods
aad
mov
add
movsb
outsb
fcomps
lods
adc
out
imul
and
imul
pop
lcall
out
mov
jo
cmp
fsubl
dec
ss
aas
push
mov
lret
movsb
push
mov
gs
cmc
mov
je
add
xor
stc
scas
dec
int3
push
in
jbe
inc
push
or
mov
mov
lgs
pop
pop
shll
inc
inc
xchg
ljmp
daa
iret
dec
pusha
pop
cmc
sbb
adc
mov
mov
sarb
cltd
aas
int
jnp
add
mov
dec
cld
shlb
mov
iret
or
xlat
enter
xor
scas
xchg
dec
out
ja
pop
inc
and
add
in
je
stc
inc
fdivrs
mov
mov
adcl
jbe
xchg
mov
sbb
add
inc
in
lods
stos
adc
jae
mov
int
pop
scas
push
lods
imul
sub
sub
mov
icebp
cmp
mov
dec
incb
aas
int3
xlat
xor
fistpll
in
pop
leave
mov
jns
or
incl
iret
dec
cmpsb
push
or
sarb
dec
push
cltd
aaa
cld
xchg
shrl
xchg
mov
pop
jno
scas
pusha
push
or
pop
sbb
mov
add
push
imul
cmp
test
mov
push
cli
pop
fnstenv
push
test
add
mov
in
nop
enter
jnp
imul
stos
push
cmpsb
add
sbb
cmpsl
and
pop
imul
stos
push
sub
into
subb
sub
insb
sbb
cmp
add
loop
fildll
xorl
cmp
or
mov
test
and
push
cltd
add
xor
jge
aas
push
sahf
jns
inc
lahf
cmp
enter
push
addr16
xlat
xchg
cmp
or
cmc
lcall
out
in
imul
jb
aas
insb
xor
xlat
add
testb
cmp
add
push
push
in
js
aad
fiadds
mov
xlat
mov
arpl
mov
in
ljmp
xor
inc
cmp
out
scas
push
mov
and
rol
lock
push
and
adc
rep
inc
insb
imul
cmp
rcll
xchg
pop
pop
cs
std
cmp
cs
jge
inc
cmpsl
push
mov
fadds
or
lods
cmp
icebp
push
cwtl
rorb
inc
loope,pn
jnp
xor
sti
fmull
jnp
push
xchg
cmpb
scas
cmp
fistl
aaa
mov
cmpsb
dec
lahf
and
dec
fsubr
jmp
ss
mov
scas
fldcw
jno
scas
mov
and
jge
xor
inc
mov
mov
das
sub
xchg
mov
test
cmp
mov
push
frstor
or
shrl
jge
repz
ss
push
cmp
push
idiv
ds
jae
loop
dec
push
cltd
jno
adc
mov
test
dec
into
push
xchg
daa
fimull
or
sahf
test
call
dec
mov
inc
sub
adc
jle
into
fs
and
cli
ret
aas
mov
lods
stc
xchg
divl
xchg
adc
insl
scas
movsl
loopne
scas
cld
push
mov
insb
hlt
jmp
lahf
cli
mov
lcall
fs
mov
push
push
sub
dec
sbb
popa
push
bound
xor
mull
scas
adc
aam
mov
out
jne
leave
mov
test
enter
mov
cli
arpl
sub
fwait
je
out
pop
int
stc
jp
jno
jnp
fcomip
pop
jnp
sbbl
mov
push
fucom
divl
inc
std
dec
xor
std
into
sub
in
mov
sbb
pop
cmp
jl
insb
test
hlt
cld
push
pop
push
jecxz
sub
rcrb
jno
or
sbb
outsl
inc
stos
dec
addr16
jne
push
add
ljmp
pop
scas
sub
enter
add
ret
sahf
sar
mov
ja
pop
xchg
fnstenv
stos
dec
shlb
push
in
sub
mov
pop
xchg
mov
fisttpll
jp
adc
insb
sbb
dec
sub
mov
into
mov
pushf
dec
sub
inc
rclb
xchg
add
jns
add
les
cmp
xchg
pop
ljmp
xchg
leave
mov
pop
push
pushf
les
mov
mov
adc
jmp
aad
dec
mov
fcmovbe
xor
add
lds
pop
fsubp
icebp
pop
insb
dec
in
pop
push
mov
xchg
cmpsb
adc
lds
in
mov
add
pushf
and
dec
aaa
or
cld
insl
cmpl
push
in
mov
and
xchg
scas
dec
inc
xor
push
push
adc
ficomps
jl
mov
pop
adc
sahf
dec
sbbl
idivl
adc
push
repnz
pop
lret
insl
cmpb
mov
adc
stc
xchg
xor
outsb
sbb
and
jge
mov
xchg
cmp
fadd
lds
ss
repnz
test
aad
jnp
cmp
into
mov
test
out
testl
inc
cmpl
icebp
sub
div
lret
mov
sbb
arpl
cs
cwtl
jnp
and
inc
xchg
push
sub
xchg
fldl
imul
lahf
ror
pop
push
or
fadds
test
cltd
dec
mov
jne
mov
sbb
inc
hlt
jae
mov
mov
sti
lahf
mov
aad
in
inc
popa
aas
push
ljmp
scas
pop
inc
sub
arpl
pop
pop
test
fldcw
dec
testb
sahf
nop
sub
pop
sbb
data16
sub
xor
testb
in
scas
stos
cmpsb
iret
and
push
movsl
and
mov
lret
xor
dec
lret
lcall
push
sub
icebp
and
inc
mov
cs
jae
bound
aaa
in
inc
mov
data16
mov
fimull
popa
scas
dec
xor
cltd
clc
fmuls
and
dec
dec
enter
or
mov
jo
or
fwait
dec
insl
pop
aaa
mov
cmp
cmp
fstps
cmp
add
pop
icebp
fisttpl
mov
adc
push
sub
push
cmp
sub
test
mov
pusha
cs
jno
sbb
xor
xchg
push
cmove
out
and
fistl
fs
inc
je
fiadds
rclb
incb
sbb
cmp
and
jmp
fwait
cmp
in
cmc
lock
ja
xor
outsl
push
adc
mov
and
scas
aam
pop
dec
jl
clc
sbb
sahf
repnz
fsubp
rol
xchg
sub
xchg
xchg
fsubrl
jg
ret
xchg
add
lahf
sbb
sbb
inc
add
sub
or
in
mov
into
jo
lcall
pop
sbb
test
jmp
addr16
fnstsw
sbb
hlt
xchg
and
xor
scas
in
inc
mov
dec
sub
popa
xor
dec
test
call
sbb
and
push
pop
push
push
mov
mov
adc
and
add
or
or
outsb
lahf
xor
cld
in
cmc
sub
popa
dec
xchg
mov
xchg
push
or
sub
add
dec
lea
inc
mov
aam
cltd
mov
dec
insb
cmpsb
add
cli
mov
inc
mov
test
push
add
sub
mov
scas
mov
mov
pop
jne
and
dec
outsl
sbb
cli
dec
xor
jmp
adcb
outsl
outsb
inc
out
xchg
imul
sbb
leave
cmpsb
mov
mov
loopne
out
ret
jae
jg
adc
sbb
sub
mov
test
mov
mov
ret
out
arpl
fldt
or
push
out
pop
adc
mov
mov
sti
out
ljmp
push
sub
dec
mov
add
cwtl
mov
rcrb
test
stc
pop
cmp
frstor
push
dec
dec
leave
pop
mov
dec
fsub
pop
ficoml
mov
jne
push
cmc
mov
inc
mov
test
jb
lret
pop
into
mov
bound
xchg
and
push
mov
iret
test
ret
mov
jg
jne
xchg
push
notb
ljmp
dec
lret
fmull
lds
inc
jb
fmuls
gs
mov
aas
iret
mov
push
mov
jecxz
push
dec
sbb
dec
mov
mov
in
push
cmp
pop
xchg
fsubrl
and
fwait
js
jb
stos
jbe
adc
in
mov
inc
xor
scas
cmp
sub
sbb
xor
out
pop
push
push
lods
xor
test
rcr
lret
dec
in
push
ds
inc
iret
mov
mov
pop
push
jne
xorb
and
fmul
mov
sbb
push
rclb
mov
xor
in
jle
pop
pop
imul
push
repz
push
fstpt
out
jp
jmp
hlt
out
pop
notl
sbb
sbb
push
and
movsl
cmp
inc
xchg
jno
mov
sub
or
hlt
pop
adc
sbb
fsubp
cmp
cmp
fstp
mov
mov
dec
testl
xor
mov
xchg
in
stos
cmc
les
fwait
inc
pop
cld
sub
jae
gs
loopne
mov
stos
mov
xchg
roll
pop
sbb
pop
out
jbe
jno
inc
jnp
mov
mov
imul
imul
pop
fwait
dec
imul
bound
add
push
lea
and
mov
das
int3
int
or
stc
adc
test
sahf
dec
inc
sbb
adc
js
jno
push
sarb
xchg
inc
dec
adc
jae
outsl
fwait
int3
add
decl
out
jecxz
cmp
adc
out
shlb
pop
pop
lods
add
adc
cli
jle
sub
minps
xchg
jl
gs
out
mov
aaa
sahf
into
jp
and
imul
add
mov
out
test
push
sbb
sti
clc
cld
push
ss
fs
and
sti
lcall
sub
jg
push
mov
xor
and
adc
push
in
xorl
cmp
out
cwtl
mov
xchg
cmp
adc
shlb
sahf
inc
bound
push
outsl
or
aam
jae
in
xchg
sbb
jge
shrb
sbb
loop
orb
pop
xor
jae
xchg
push
jge
inc
cmp
dec
shl
inc
dec
data16
mov
mov
jnp
imul
scas
inc
or
xor
mov
nop
addl
pop
xchg
xchg
popa
sarl
je
jbe
in
fwait
and
bound
mov
mov
inc
inc
ficoml
sarb
push
loop
sbb
insb
scas
or
fdivl
jns
test
mov
push
fiadds
pop
adc
mov
pop
cwtl
fcomip
decl
das
sbb
subb
push
fdivl
popf
loopne
cmpsl
sbb
xchg
jmp
sbb
decb
ret
out
loop
push
rorb
sbb
stos
iret
loopne
push
popf
push
lcall
and
pop
adc
fstps
pop
sub
fsts
cmp
pop
ds
popa
loopne
dec
nop
jmp
mov
das
movsb
push
lret
and
xchg
xchg
clc
mov
fwait
daa
adc
cmp
push
mov
stos
arpl
push
mov
jmp
imul
push
jmp
aaa
xor
mov
mov
adc
inc
jecxz
fwait
dec
insb
xchg
xor
xor
push
daa
imul
mov
mov
pop
insl
neg
mov
fdivrs
lock
or
lret
jl
push
add
mov
outsb
es
lods
stos
adc
inc
xor
iret
dec
mov
movsl
jae
inc
cli
cmp
les
popa
pop
jp
fidivs
movsl
aaa
push
push
dec
in
or
add
fildll
cmp
addr16
xchg
sbbb
inc
push
jle
push
adc
int3
pop
repz
loop
sub
and
mov
cwtl
sbb
ror
cmp
or
mov
cmp
scas
pextrw
test
and
aas
jbe
sahf
scas
cmp
ss
mov
iret
xchg
or
jge
daa
inc
cmp
push
out
xchg
shll
mov
cld
cmovle
adc
lcall
ja
rcrl
mov
dec
adc
out
loopne
test
sahf
inc
add
test
dec
jl
jae
mov
push
xchg
pop
cmp
or
lret
jp
cmp
mov
movsb
lds
clc
into
or
loope
sub
sbb
lock
jmp
mov
jp
stc
sub
or
add
lock
jle
pushf
sti
hlt
mov
cld
mov
pop
mov
out
push
lock
int3
mov
sti
lret
fistpl
sub
scas
jo
in
scas
cld
pop
cmpsl
rolb
dec
xchg
push
stc
dec
dec
dec
movsl
aad
mov
lods
push
cli
push
rol
mov
icebp
clc
mov
lods
add
jae
das
pop
mov
mov
xor
cmp
lcall
adc
loop
hlt
fsubrl
mov
adc
shlb
ret
insb
clc
cld
fadd
cld
outsb
stos
icebp
push
jge
cmpsl
jecxz
jle
scas
mov
mov
out
dec
add
insb
xor
pusha
adc
pop
mov
pop
push
in
mov
fwait
mov
shlb
mov
adc
test
or
cmp
outsb
pop
flds
mov
rorb
fnstenv
pop
jge
test
add
jb
dec
xchg
ja
jmp
xor
xor
pop
inc
jnp
lods
jl
int
xor
xchg
mov
insl
test
cmp
cmp
lock
fisttpll
in
faddl
hlt
pop
push
inc
rcr
ret
pushf
adc
sbb
jne
stos
dec
int3
sar
push
lahf
pop
mov
movsb
icebp
jno
jbe
int3
jo
inc
mov
xchg
sub
sub
orb
fs
push
jns
stos
and
xor
test
jmp
cmc
mov
lods
out
mov
xchg
inc
dec
push
mov
add
stc
mov
add
xor
xor
xor
loop
test
xchg
pop
push
mov
out
pop
add
aad
dec
push
inc
mov
dec
shrb
xor
adc
push
adc
mov
dec
jecxz
fiaddl
popf
ljmp
mov
mov
cmpsl
sbb
xchg
adc
push
sub
loope
fcompl
rcll
mov
push
cmp
xchg
sahf
push
jne
inc
jl
dec
ds
mov
jge
jg
adc
xor
cmp
xchg
icebp
call
pop
out
add
imul
mov
mov
test
dec
nop
pop
ficoms
or
lods
cli
mov
fistl
aas
mov
dec
and
in
fisubrl
mov
pop
mov
mov
jmp
movsb
movsb
clc
mov
iret
daa
scas
pop
imul
daa
icebp
cmc
idivl
jnp
and
push
scas
dec
cmp
cmp
sarl
mov
arpl
add
outsl
lcall
adc
and
sbb
push
inc
push
push
sbb
jl
in
sbb
jne
lods
xchg
sub
js
push
in
or
in
dec
xchg
pop
jbe
or
mov
rcrl
cli
pop
and
movsl
pushf
mov
jno
mov
sub
cwtl
jbe
jle
shr
mov
or
shrb
mov
mov
ja
xor
fsubl
pop
cld
movsb
jle
in
mov
mov
fwait
sub
movb
out
lahf
add
push
stos
decl
xchg
mov
jecxz
data16
cmp
cwtl
adc
aas
inc
test
or
dec
mov
ja
es
pop
int
xchg
stos
shrb
ret
fcmovnu
test
or
jmp
leave
add
push
pop
inc
vunpckhps
adc
push
loop
push
mov
in
push
iret
rolb
pop
out
je
mov
cmp
xor
fs
adc
xlat
xchg
cmp
dec
sahf
shrl
shl
fwait
adc
out
fdivl
andb
xor
enter
lods
movsb
into
or
mov
pop
repz
or
and
cltd
push
test
dec
insb
xchg
rolb
or
xchg
push
pop
mov
in
mov
jae
iret
mov
sbb
jp
ss
popa
and
in
lods
jno
push
mov
dec
jmp
jae
seta
hlt
xlat
repnz
and
lret
push
push
xor
mov
icebp
fistpl
cmp
add
xchg
mov
inc
dec
xorl
pop
jne
lock
int
adc
aam
pop
dec
mov
aam
call
movsl
test
fsts
dec
pop
loopne
jns
ror
insl
push
mov
lret
stos
jmp
xor
jle
sbb
xor
insb
mov
test
add
pop
pop
sbb
xor
cmpl
pop
mov
and
mov
imul
sarl
lcall
imul
jo
repnz
loopne
mov
push
mov
enter
sub
xchg
lahf
je
add
int
imul
add
mov
mov
mov
sbb
pop
jp
icebp
insl
cmpsb
jg
sub
dec
enter
push
iret
lahf
mov
add
push
xor
gs
int
sub
ds
pop
pusha
adcb
jnp
jg
stc
xchg
leave
stos
inc
ret
inc
xor
adc
fisttpll
aas
jae
add
mov
cmp
mov
and
jbe
lcall
mov
fs
or
mov
sub
pop
mov
xchg
or
fdivrl
faddl
xor
loopne
lock
hlt
push
jg
inc
mov
xor
insb
rcll
mov
sbb
stc
shlb
mov
pushf
mov
dec
stc
push
mov
fldl
cmp
cmpsb
dec
pop
lahf
mov
pop
inc
xchg
inc
out
push
pop
or
xchg
pushf
push
das
outsb
adc
mov
rcrl
mov
adc
adc
lahf
mov
arpl
imul
pop
xor
repnz
sub
lock
shll
add
inc
mov
out
pop
pushf
out
inc
push
fmulp
bswap
setbe
push
pop
test
sbb
lods
mov
sub
insl
icebp
xor
mov
mov
mov
call
in
and
mov
je
xor
lahf
loope
mov
dec
adc
mov
push
jne
add
inc
inc
jge
pop
mov
cltd
lds
dec
lods
mov
cmpsb
cmp
popa
addl
out
pop
dec
push
add
sub
inc
push
leave
out
cld
mov
mov
aas
lahf
inc
sub
and
in
mov
dec
cmc
push
add
mov
or
out
out
jno
popf
add
push
and
in
push
fistps
movsl
repz
mov
pop
cmp
and
es
ret
int3
add
sbb
shlb
test
push
mov
adc
xchg
push
jae
xor
pop
insl
outsb
or
repz
testb
ja
dec
in
mov
jmp
ret
xor
not
enter
in
mov
cmp
sub
outsl
jmp
pop
insl
in
sbb
outsl
nop
push
push
aaa
loop
test
xchg
loope
jne
aas
adc
repnz
int3
addr16
dec
flds
mov
je
lret
adc
xor
inc
mov
dec
jmp
mov
dec
aad
sbb
jp
bound
movsl
movsl
addr16
xchg
adc
enter
in
push
clc
addl
shrl
imul
sbb
mov
out
fmull
cwtl
int3
sbb
lret
xor
dec
aas
adc
imul
or
pop
clc
mov
cmp
cmp
sbb
fwait
ret
daa
ret
test
fcomps
fdivrl
movsl
fwait
push
adc
inc
sbb
mov
pop
sbb
mov
das
add
icebp
xor
xchg
mov
cmp
or
movsl
sub
shll
and
fnsave
mov
mov
or
adc
cmp
mov
mov
xlat
cmp
rcrb
lods
xchg
inc
xchg
pop
fsubrl
dec
pop
cmc
fistl
inc
push
out
mov
lock
pop
bound
xor
cmp
cmpsb
jnp
sbb
cmc
push
pop
movsb
lods
push
dec
data16
js
jmp
mov
add
adc
ficoms
out
loope
lcall
daa
out
out
add
in
mov
outsb
mov
inc
lret
mov
sub
mov
in
mov
imul
mov
or
orl
nop
sbb
dec
addl
jb
cwtl
sub
xor
sub
das
xchg
clc
inc
mov
mov
les
xor
testb
xchg
fwait
mov
mov
adc
jmp
sub
daa
xchg
loopne
in
sti
jae
fs
dec
xchg
fisubl
xchg
hlt
lock
test
pushl
aam
out
arpl
stos
pop
lods
aad
xor
add
ds
fnstcw
inc
mov
outsl
cld
add
jno
js
jns
ljmp
jp
cmp
dec
sub
roll
jmp
das
lea
dec
xchg
mov
mov
push
cmpsb
xchg
decb
pusha
pop
sbb
pop
dec
and
xor
fdivs
imul
mov
lcall
xchg
fbld
sbb
fwait
jns
push
adc
imul
dec
jne
fwait
pop
jge
outsb
out
lds
jg
stos
leave
iret
and
clc
dec
das
popa
cmp
fidivl
sub
movsb
clc
sbb
or
sbb
mov
stos
mov
ffree
mov
or
rcrl
cltd
and
jbe
push
mov
movsb
fsubs
sbb
subl
mov
scas
cmpsb
int3
jbe
add
add
jne
xor
iret
dec
icebp
cs
lcall
cmpl
outsl
sub
das
inc
cmpb
dec
mov
pop
xor
dec
xor
clc
std
lods
ljmp
js
cmp
mov
iret
sub
xor
popa
inc
mov
mov
push
roll
lret
mov
mov
out
inc
pop
mov
sbb
in
ss
fbld
jecxz
xchg
xchg
sbb
lret
dec
rcrl
and
fldenv
jnp
lcall
pop
push
sbb
jo
mov
std
into
mov
dec
lods
jae
jp
pushf
repz
push
clc
add
andb
std
jle
mov
jb
shrl
int3
adc
sbb
addl
jae
aad
sbb
test
mov
xchg
iret
pop
push
add
adc
jle
or
mov
arpl
imul
sub
rcll
cmpsl
and
movnti
ret
pop
push
mov
scas
xchg
jmp
push
xchg
and
mov
ret
cmp
idiv
jle
xor
inc
lret
xchg
pop
add
xor
cld
inc
loop
or
jp
test
addb
and
andl
mov
lods
jne
and
stos
add
popa
movsl
pop
mov
pop
movsb
cs
pop
cmp
cmpsb
mov
cltd
mov
aas
adc
bound
test
clc
and
mov
inc
shrl
lock
inc
jg
or
and
inc
vmovaps
cmpsl
cmp
pop
adcb
leave
test
jno
lods
adc
hlt
pop
mov
cwtl
sbbl
push
cmp
pop
test
inc
push
jae
outsb
aad
in
fsubrs
popa
xlat
aas
out
mov
rolb
push
addr16
and
arpl
sti
dec
lock
test
sti
dec
out
pusha
mov
outsb
sub
mov
add
sbb
lods
hlt
pushf
data16
mov
dec
insb
cmp
lahf
sti
push
fs
sbb
and
or
fcompl
les
scas
xchg
jo
push
loope
mov
inc
pop
lahf
gs
and
mov
hlt
into
ja
xchg
sti
cmp
cmpsl
adc
inc
cmp
loop
push
inc
push
fsts
in
lahf
clc
xchg
mov
repz
leave
pop
jmp
out
dec
nop
sub
or
test
jge
in
pop
in
mov
sar
lcall
inc
xchg
and
mov
out
dec
aad
xchg
loop
clc
sub
add
xchg
aaa
dec
mov
loope
jno
lcall
cmpsb
dec
mov
fldcw
inc
shlb
or
cmpsl
in
mov
dec
xchg
and
jbe
push
jae
sti
lods
inc
jns
adc
rorl
cli
bnd
adc
pop
and
inc
xchg
push
mov
test
or
mov
das
movsl
push
push
cs
add
jp
cmp
or
ljmp
mov
das
xchg
in
mov
int
add
add
cmp
pushf
pop
clc
loopne
popa
sbb
ja
gs
mov
or
lret
dec
jnp
icebp
xchg
cmp
icebp
psraw
int
xchg
or
xchg
in
dec
mov
ffreep
enter
push
dec
addb
xchg
loope
mov
adc
into
mov
mov
xchg
xchg
decl
pop
lahf
mov
pop
push
mov
pop
icebp
pop
call
mov
bnd
add
mov
outsl
das
mov
jge
mov
pop
add
sbb
ret
int3
in
xor
orb
cs
adc
cmp
cmp
or
dec
adc
test
mov
rcrl
call
jmp
bound
call
and
mov
push
cmp
mov
xchg
jecxz
add
mov
cmp
jecxz
gs
sub
xor
shrl
out
or
loop
jnp
add
push
push
mov
neg
or
xchg
inc
stos
push
popa
lret
test
mov
mov
lret
rcrl
mov
fbld
or
mov
lods
imul
out
aaa
inc
ret
or
sub
shlb
xchg
sub
fidivs
insl
test
shlb
mov
bound
jo
cmp
loop
jns
xchg
dec
enter
xor
inc
jno
push
push
or
sar
rcrb
popf
mov
pop
cmp
dec
xor
sub
out
and
outsb
xor
scas
aad
int3
inc
jge
dec
loop
lods
rolb
outsb
mov
sub
repz
aam
sbb
lahf
mov
jbe
push
push
lds
negb
pusha
scas
push
cld
rolb
pop
or
and
sub
sahf
cli
pusha
repz
pop
lods
sub
mov
mov
cwtl
repz
notl
mov
inc
or
pop
lcall
cmp
test
mov
or
loop
xchg
int3
xchg
or
lock
pop
push
popa
mov
inc
jge
les
incb
inc
ffreep
pop
mov
xor
fnstcw
xchg
xchg
loop
jne
scas
jge
test
imul
lds
int3
daa
into
jp
inc
pusha
or
sub
les
int3
sbb
js
mov
movsl
cmpsb
jge
loop
sbb
cmpsl
mov
mov
inc
in
mov
stc
xchg
adc
les
cmp
mov
fisubrl
xlat
jo
int3
scas
movsb
loope
mov
mov
fwait
xor
repz
mov
fidivrs
inc
cmpsb
aad
jns
insl
mov
push
cs
sbb
inc
sub
inc
insb
adc
mov
mov
jle
jno
test
popf
inc
xor
nop
and
push
neg
mov
mov
rcrb
sbb
cmp
push
xlat
imulb
test
div
popa
gs
or
enter
mov
push
mov
sbb
pop
ss
idivl
cmpsb
adc
xor
aas
lods
jg
sbb
faddl
xor
test
inc
fcomi
sbb
push
inc
out
mul
dec
je
sbb
jo
cltd
sbb
mov
lods
mov
xor
pop
mov
das
mov
addr16
jl
leave
mov
rolb
outsl
sbb
mov
fxtract
mov
jge
xor
loope
jl
aam
fwait
inc
iret
orl
mulb
mov
lret
stc
bswap
cmp
fwait
mov
sub
popa
movsb
xchg
xchg
cld
mov
sbb
lods
or
pop
push
fisubl
inc
xchg
enter
xchg
jo
dec
push
xor
inc
into
xchg
inc
data16
jg
mov
pusha
lock
mov
test
xchg
dec
sbb
mov
mov
loope
sbb
and
in
mov
add
lods
cltd
sbb
cmpsl
setnp
inc
xchg
in
jp
imulb
add
xchg
push
les
lret
mov
rol
inc
mov
xlat
and
ljmp
stos
movsl
ror
lods
adc
sbb
dec
lods
data16
push
mov
bound
roll
dec
ds
mov
jbe
add
insb
fstpt
test
imul
lcall
out
fidivs
sub
out
mov
jecxz
std
std
sub
adc
sub
xor
push
rcrb
sub
movb
add
or
les
das
mov
nop
xor
rol
jl
testl
repz
jmp
and
xor
inc
xor
outsl
mov
jmp
mov
mov
or
sahf
jg
into
push
insl
pop
test
fsub
aaa
arpl
test
mov
or
repnz
lret
in
push
dec
or
xor
pop
xchg
lds
jmp
das
inc
sub
call
imul
ret
add
imul
fldt
push
jne
cmpsl
outsb
mov
sti
je
repnz
or
gs
test
testb
and
repz
inc
xor
cmc
stos
add
loop
xor
add
scas
pop
and
mov
dec
pop
pop
mov
fadds
testl
ljmp
inc
sbb
jp
dec
mov
and
les
pop
inc
or
xchg
sahf
fcmovnbe
cmpsb
rcr
rclb
dec
std
xchg
sbb
ret
jecxz
pop
call
fstl
xor
jmp
stos
adc
or
fiaddl
mov
loope
lea
mov
or
and
push
outsl
cmp
pop
in
pop
fcomip
out
mov
sbb
adc
fwait
ss
add
leave
xchg
sub
ret
out
shlb
push
cmp
mov
mov
mov
popf
cld
mov
mov
mov
pop
dec
jle
xor
push
cmpsl
mov
adc
aad
and
push
jnp
test
and
push
in
mov
aaa
mov
lods
scas
pusha
dec
sbb
dec
mov
pop
push
cmp
movsb
imul
stc
mov
inc
stos
out
xchg
jecxz
cmp
std
popa
sbb
mov
sub
sub
sti
lods
imul
push
out
out
mov
das
add
lahf
mov
fnstenv
movb
into
pop
cmp
rclb
insb
mov
mov
mov
push
inc
das
and
mov
stos
inc
fwait
add
in
xchg
fiaddl
popf
enter
lahf
pushf
addr16
push
add
push
dec
jne
dec
insl
pop
shll
das
or
movsl
subb
jb
push
cmp
in
lea
es
xlat
enter
cmp
add
sahf
xor
pop
mov
imulb
leave
lret
and
pop
pop
lahf
mov
push
push
andb
xor
fs
enter
out
adcl
scas
adc
mov
pop
pop
inc
xchg
lods
inc
xor
sbb
sti
pop
sbb
int3
js
mov
xor
or
push
test
cmp
mov
and
pop
out
out
mov
ds
xor
xor
rcrb
ret
ret
mov
enter
jae
loopne
rcr
popf
js
shll
cli
mov
repz
adcl
and
shrl
out
nop
pop
inc
pusha
test
jno
loopne
daa
xchg
push
mov
les
jne
sbb
push
xchg
pop
inc
mov
mov
mov
aam
int
in
stos
out
add
and
mov
or
outsb
icebp
jne
outsl
push
or
shll
in
inc
or
mov
lods
les
push
adc
sbb
aam
test
call
pop
push
daa
ss
pop
popa
mov
inc
xor
and
or
push
out
mov
aas
jne
daa
dec
sbb
jg
test
out
mov
pop
jns
stos
sbb
jns
jecxz
scas
fildll
addr16
test
mov
mov
inc
pop
insl
mov
adc
or
fcoms
in
fdivrl
mov
sub
mov
pusha
xchg
jno
dec
xchg
inc
mov
addl
into
add
jmp
mov
call
js
dec
mov
iret
push
dec
in
rorb
mov
sub
roll
mov
inc
insb
mov
pushf
mov
dec
loope
push
iret
push
stc
test
scas
popa
dec
cmpsl
fsubrp
cmpsb
jg
xchg
jno
stc
lret
inc
xor
push
jns
cli
and
jne
sbb
and
sti
dec
int3
fcoms
cwtl
sub
pusha
add
je
sub
rcr
out
jae
shl
xchg
ss
mov
out
vmulps
pop
xlat
jbe
stos
cld
adc
scas
popf
fs
xchg
fdivs
loop
lahf
scas
push
gs
push
shll
push
into
mov
xor
daa
push
push
lods
jae
add
out
lahf
les
mov
mov
mov
and
fcompl
sahf
repz
add
cltd
sub
sub
shlb
mov
loopne
fimuls
mov
sbb
int3
setns
jo
jge
xor
add
inc
inc
pop
push
cs
repz
fld
hlt
xor
cmp
xlat
mov
adc
rorb
int3
jnp
out
xchg
inc
arpl
pusha
sahf
mov
inc
add
push
jmp
enter
pop
icebp
fs
sarl
pop
addr16
popf
mov
inc
or
cmp
push
cmp
add
out
outsb
xor
cmp
movsb
inc
aam
xor
sbb
mov
mov
ja
add
inc
or
push
imul
in
ja
repnz
cmp
pop
mov
fisttpll
in
mov
in
pop
out
inc
jbe
push
sti
fisubl
add
sub
popa
lods
jo
aam
jecxz
push
arpl
adc
outsb
xor
mov
stc
mov
lds
orl
push
test
test
inc
mov
mov
jnp
xchg
std
popa
outsb
rorb
jg
and
cmc
inc
xchg
data16
push
mov
fsubp
fwait
add
cmp
cmc
fs
iret
insl
int3
mov
js
xlat
lock
sbb
pop
fcoml
adc
xchg
xor
pop
movsl
imul
aaa
je
lret
into
mov
mov
add
lock
andb
xchg
fstps
jo
jg
dec
inc
mov
pop
enter
dec
divb
rclb
xchg
xchg
xchg
push
iret
ss
pusha
fildl
add
mov
mov
dec
jl
mov
xlat
lcall
dec
cld
inc
addr16
bound
push
cwtl
inc
push
push
call
fists
jne
loopne
imull
adc
ret
stos
and
aas
sbb
pop
ss
jge
push
stos
pop
stc
cli
xchg
lahf
test
and
sar
mov
std
and
mov
pop
test
repz
int
loopne
mov
cmc
lahf
mov
cmpl
pop
lcall
imul
xchg
cmpsl
shll
js
outsb
inc
cld
stc
incl
dec
or
inc
jp
sbb
and
xor
push
and
sti
pusha
incb
xchg
or
mov
lock
sbb
sub
cs
jl
cmp
imul
dec
sbb
xchg
test
in
nop
xor
jge
cmp
push
push
mov
jmp
push
rcll
bound
jnp
push
jg
sbb
mov
dec
push
xchg
adc
pusha
mov
iret
bound
jne
out
jbe
dec
loopne
cmpl
les
inc
adc
repnz
xchg
or
xchg
dec
inc
sbb
sti
and
inc
pop
sub
inc
lods
repnz
pop
repnz
cmp
add
outsb
mov
fcmovu
out
cld
rorb
cmpsb
js
add
test
jae
lea
push
std
scas
scas
ja
ja
sub
hlt
int3
mov
jae
inc
aaa
or
insb
pop
aaa
push
in
mov
mov
imul
rorl
aaa
out
mov
or
outsb
mov
or
jmp
std
nop
call
pop
psllq
dec
xchg
push
xor
adc
popa
insb
jb
jno
or
fs
sbb
push
mov
xchg
lods
xor
imul
cmp
jle
das
in
test
std
test
subb
jne
push
stos
push
push
dec
push
pop
cmpsb
mov
add
xor
and
fs
dec
jmp
jno
sahf
jl
and
lods
sbb
cmp
or
fiaddl
sbb
mov
test
push
pop
xchg
bound
mov
scas
cmp
lods
cmpsb
loopne
jmp
stos
aaa
add
lods
dec
or
and
mov
adc
ret
cmpsb
arpl
sbb
cmp
lock
xor
cmc
neg
roll
test
imul
jecxz
imul
mov
xchg
lret
cmp
repnz
adc
insb
ja
fnstcw
lret
iret
into
fldcw
cld
adc
pop
sbb
out
cld
jb
das
inc
leave
sbb
mov
add
mov
cltd
add
push
dec
std
inc
sbb
mov
push
mull
out
fdivrs
push
jo
lods
sbb
fdivl
jg
xchg
cmpsl
cmp
xor
mov
and
sbb
loop
sbb
fisubrs
inc
add
lea
xchg
test
sub
cltd
stc
repnz
pop
mov
lods
adc
stos
jle
ret
inc
cmp
bnd
xchg
pop
scas
mov
pop
add
data16
cmp
cmpsl
push
outsb
jns
aaa
mov
push
popf
push
adc
pop
mov
or
mov
daa
xchg
call
clts
cmp
cmp
flds
je
lahf
scas
ret
cmc
xor
lock
daa
jmp
rcrb
cmp
in
daa
pop
or
in
cmpsl
rcpps
mov
mov
into
popl
xor
xchg
pop
clc
popa
test
cmc
sub
mov
jmp
cs
out
addl
daa
lods
arpl
in
or
inc
fbld
in
pop
push
push
negl
jo
lods
sbb
gs
push
mov
jmp
jne
add
sbb
in
ret
mov
pop
out
loope
mov
enter
push
imul
sub
sarb
xchg
xor
jns
loop
loopne
loopne
and
iret
inc
ja
stos
dec
out
inc
cmp
dec
lods
xlat
inc
test
jne
pop
jne
mov
mov
ret
repnz
aaa
test
loopne
push
push
addl
jecxz
rorl
cmp
jns
loopne
aaa
push
sbb
and
inc
mov
inc
outsb
or
pop
arpl
ja
cmpsl
xorl
flds
jmp
sub
inc
pop
outsb
mov
or
insb
mov
mov
or
xchg
xacquire
jo
push
dec
push
xchg
add
and
mov
fwait
outsl
mov
inc
xchg
mov
call
xchg
les
xchg
bound
jle
add
dec
into
lcall
or
or
push
sbb
andl
ss
sarb
mov
inc
xchg
pop
mov
push
jg
pushf
jne
push
fidivs
add
xor
mov
daa
out
jle
imul
out
inc
popf
dec
cld
sub
mov
cmp
inc
mov
mov
repnz
shll
dec
and
xor
xchg
ss
mov
rcll
and
jmp
out
push
in
gs
rcrl
cs
cmp
jp
sub
hlt
push
mov
pop
cmp
fnsave
push
data16
dec
pop
aam
xchg
jne
adc
rcrl
push
popf
cli
scas
ret
xchg
xchg
pop
cmp
adc
mov
mov
aam
fcompl
outsl
add
pushf
inc
outsb
inc
xorb
xchg
aam
or
and
sub
mov
adc
aad
daa
xchg
mull
or
rcll
pop
std
je
test
xor
pop
lahf
ret
popf
out
or
push
mov
push
sbb
popa
out
stos
out
test
add
jl
nop
pop
iret
mov
sub
in
push
idivb
imul
clc
out
push
and
jae
adc
movsl
push
xchg
shll
aam
aas
xlat
outsl
insl
lods
sub
leave
and
subl
dec
test
cmp
iret
dec
imul
std
adc
int
xor
enter
enter
mov
int
idiv
lret
sub
mov
pop
popf
daa
fcmove
in
mov
jne
lret
mov
mov
insb
add
loop
mov
xor
inc
arpl
or
lods
jns
fmul
int
xor
mov
dec
push
shr
xor
and
inc
pusha
xlat
jo
sub
pushf
faddp
in
cmpsb
into
call
xchg
test
xlat
pop
jae
lret
xor
sbb
scas
icebp
push
jecxz
lahf
dec
ds
dec
mov
in
int
arpl
jae
jmp
mov
or
pop
dec
jb
pusha
or
stos
lock
js
or
add
scas
jge
lods
outsl
add
dec
jg
add
sarl
jg
push
scas
pushf
rcl
outsl
push
mov
scas
pop
push
push
repz
shlb
lret
inc
inc
aad
jle
call
fst
andb
pop
xor
push
lahf
cld
js
std
cmp
jg
dec
call
aaa
mov
xor
shlb
loope
mov
jle
mov
test
sti
mov
cmpsl
scas
sub
mov
xchg
out
xlat
add
inc
test
mov
or
stc
jno
inc
movsl
dec
testl
je
dec
xlat
add
das
xchg
push
sbb
gs
leave
mov
jns
les
aad
jnp
adcl
or
push
inc
push
or
fs
mov
mov
nop
aad
loope
mov
mov
rcr
sub
and
jecxz
scas
cmc
xor
push
mov
je
xor
in
movups
test
or
lret
adc
xchg
cld
lods
loope
test
push
xchg
mov
insl
test
xchg
test
insb
mov
cld
dec
pop
divb
cld
into
mov
jno
mov
push
jmp
gs
daa
dec
pop
mov
dec
mov
sbb
xor
jg
lea
jo
mov
je
xor
cmpsb
in
bound
popa
enter
jmp
nop
and
daa
arpl
pop
dec
dec
int
sbb
xor
loop
out
mov
loope
mov
mov
xchg
mov
les
loop
fiadds
scas
xor
data16
xchg
cmpsb
data16
fs
and
lock
fcmovnu
pop
dec
pusha
xchg
test
stc
clc
jb
sub
sbb
mov
push
mov
adc
loopne
jns
xor
testl
bound
cmpsb
dec
pop
jmp
int3
jo
dec
jge
ja
ljmp
mov
repz
repz
insl
pushf
cmp
pop
jnp
in
mov
ret
mov
xlat
adc
stc
fucompp
test
push
cmovae
push
mov
cmp
fidivrs
push
xlat
push
mov
bound
testb
pop
pop
jg
scas
imul
cmp
cmpsl
stc
and
movsl
mov
jg
pop
clc
inc
inc
enter
and
xlat
inc
rorb
add
repz
je
cmpsl
loop
mov
and
rorl
rcr
dec
inc
mov
mov
inc
pop
shr
scas
mov
fidivrl
std
xchg
pushf
xchg
jnp
jecxz
push
mov
addl
lret
into
mov
decl
xor
xchg
mov
pop
test
lock
mov
push
jl
mov
je
pop
inc
mov
inc
mov
in
pop
shlb
cmp
mov
lds
sarl
pop
incl
fwait
sbb
mov
jmp
mov
jae
xor
std
mov
mov
push
dec
lods
test
ss
jae
mov
test
mov
sub
push
xorb
addl
mov
cmpb
scas
scas
and
call
and
in
add
add
imul
dec
push
mov
add
jmp
in
pop
arpl
jbe
popw
hlt
xor
xlat
mov
inc
movb
popf
xor
mov
mov
lret
mov
mov
inc
loop
or
in
icebp
xor
adc
sbb
testl
cltd
adc
pop
xchg
out
loop
jnp
mov
mov
in
insl
adc
test
in
hlt
pop
and
xchg
jmp
je
mov
dec
jb
ljmp
repnz
or
imul
mov
pushf
aad
fcoms
push
adc
clc
or
aaa
insl
lods
ret
aam
mov
xlat
mov
sbb
fnstenv
sbb
xchg
sbb
mov
lock
out
fildl
insl
sub
mov
jno
in
movsl
mov
lret
ljmp
jae
xchg
mov
cmp
daa
fwait
push
jae
pop
cmp
dec
aam
insl
shrl
xchg
jns
cmpxchg
jl
xchg
or
mov
or
movsb
or
and
jecxz
cmp
loope
ret
mov
cwtl
sub
jnp
pop
out
or
sbb
add
lret
jge
xchg
xor
sub
jno
clc
je
out
daa
sahf
xorl
pop
inc
es
adc
sub
aam
jg
push
xchg
dec
jb
movsl
pop
icebp
cmp
or
ds
sub
pop
and
popf
stos
testl
xchg
dec
lea
sahf
lock
imul
outsl
dec
insb
and
lods
test
mov
in
shlb
scas
aam
in
or
daa
call
jp
ret
fninit
lods
clc
sbb
sub
loopne
mov
jae
sub
adc
insl
mov
add
in
pop
xor
adc
or
xchg
jo
xor
mov
mov
popa
gs
das
sbb
into
loop
popf
and
mov
sub
lcall
cmp
cmp
mov
pushf
mulb
scas
out
xchg
mov
aas
xchg
cmp
sub
pop
or
insl
cmpsl
xor
shlb
test
inc
popa
push
cli
xor
add
fcomp
xchg
jnp
push
mov
push
cmpsl
jge
mov
adc
jne
clc
lcall
push
push
mov
cmpsl
xor
gs
mov
aad
inc
dec
js
pop
push
jmp
push
enter
nop
addr16
cmp
and
ja
mov
shlb
insb
faddp
push
scas
push
push
fs
sbb
adc
test
bound
sbb
std
xor
test
add
mov
inc
rcrb
cmp
and
sbb
pop
jmp
inc
lods
bound
adc
stos
smsw
test
sahf
mov
sbb
popa
stos
out
loope
add
mov
jo
or
mov
outsb
inc
sbb
loopne
lods
fisubrs
and
jae
or
pop
sarl
movsl
xor
pop
xor
pop
fistps
jnp
xchg
int3
stc
mov
fstl
xor
push
inc
push
jns
rcrl
add
std
repnz
cmp
xor
fstpt
lcall
pushf
sub
jns
aas
in
xor
cs
mov
or
jno
fdivp
and
iret
push
mov
dec
fildl
or
lret
cwtl
mov
sbb
inc
insl
stc
arpl
mov
orl
leave
mov
fistpl
into
rcrb
daa
pop
jmp
or
popf
pusha
int3
aam
and
mov
mov
mul
cmp
inc
and
lea
adc
sar
out
leave
cmp
inc
sub
loop
scas
mov
push
fsubrp
add
sub
sub
cmp
push
fisttpll
mov
cmp
inc
dec
pop
cmp
js
std
lret
test
sub
arpl
push
adc
inc
pop
fs
js
adc
sbb
sbb
push
int3
loop
subb
adc
iret
cmp
inc
pop
add
outsl
adc
mov
mov
mov
pop
idivb
test
adc
or
in
popa
xor
or
sahf
mov
add
push
inc
sub
mov
loop
cli
subb
test
inc
pop
jo
inc
jecxz
cli
sub
lods
jno
xlat
jg
out
pusha
xchg
es
rclb
sub
adcl
xor
outsb
mov
clc
mov
or
movsl
xchg
mov
imul
xchg
fs
cli
clc
shrb
push
gs
dec
and
addb
cli
and
push
stos
inc
or
rclb
imul
mov
xor
das
outsb
mov
cmp
xchg
es
enter
flds
ret
sbb
add
aad
pop
pop
repnz
mov
gs
jne
cld
push
jns
adc
ret
setae
sbb
inc
mov
js
pop
repz
ret
clc
sbb
hlt
addr16
xchg
mov
scas
rolb
test
in
arpl
sbb
hlt
in
cmp
cmpl
adc
lret
pop
cld
sbb
mov
xor
stc
andl
cwtl
push
cmc
stos
add
cmp
add
inc
mov
adc
jbe
out
int
mov
outsl
pushf
and
in
sub
sbb
aaa
daa
aas
fs
stos
fistl
xchg
addr16
aad
les
lret
rcl
mov
shl
jecxz
outsb
jno
sahf
sbb
mov
outsb
aad
pop
mov
add
mov
stos
mov
ja
adc
mov
inc
addr16
xor
mov
mov
clc
push
in
mov
sub
inc
pop
jno
or
mov
imul
xchg
push
dec
adc
into
stc
aas
rcrb
daa
inc
dec
mov
repz
dec
adc
xor
sub
je
add
dec
sub
and
push
add
xchg
cmp
mov
inc
loope
or
cmpsb
inc
pop
movsb
jno
dec
pop
pusha
lahf
aas
pop
daa
xchg
int3
xchg
fs
pushf
pop
mov
cwtl
loopne
push
outsl
xlat
jle
dec
mov
sbb
xchg
fbstp
pop
mov
sub
push
mov
jbe
lods
fmul
push
mov
sahf
cmp
dec
adc
pop
mov
jg
es
cmpsb
sahf
pop
jbe
jae
dec
dec
xchg
add
inc
popa
push
scas
cs
arpl
cmp
pop
stc
jne
clc
aaa
push
leave
mov
lods
mov
sub
ret
stc
adc
cmp
lock
jmp
push
dec
divb
add
mov
dec
enter
inc
jb
add
andl
test
stos
xor
mov
cmp
push
sahf
jmp
pop
and
cmc
lods
pop
inc
add
xchg
pop
sbb
out
divl
in
lcall
xchg
std
dec
mov
aas
sbb
push
jae
in
iret
lods
ja
int
enter
xchg
adc
mov
pop
and
lds
xchg
sar
mov
xchg
loope
jbe
cmp
frstor
dec
adc
mov
cli
lcall
ret
aas
out
sub
out
lock
jecxz
sbb
pop
faddl
ret
xchg
add
xchg
mov
or
or
and
mov
jle
lods
xchg
mov
ficomps
dec
mov
or
lcall
movl
cli
repz
cmp
pop
push
test
adc
loope
int
ret
cmpsl
pop
push
iret
sbb
mov
jo
jle
pop
mov
cmp
call
dec
mov
or
cli
fstpl
inc
mov
mov
ljmp
adc
push
xchg
dec
test
push
aaa
or
push
ror
inc
jg
mov
fs
scas
xchg
xchg
loop
out
xchg
out
popf
aam
imul
push
aaa
nop
out
fisttpll
jg
ret
lret
mov
jbe
call
in
jmp
jl
pushf
data16
ss
in
sub
daa
pop
out
mov
fdivs
ss
mov
fucomp
inc
nop
cltd
lds
stc
es
aam
outsl
lea
xchg
add
push
inc
or
popa
adc
inc
push
outsl
or
mov
sub
stc
outsb
or
pop
fs
push
adcl
adc
sti
test
fisubrs
decl
lahf
fisubrl
adc
dec
xor
test
stos
mov
add
cmp
jecxz
popl
pop
dec
sbb
jo
adc
cmp
lds
xchg
dec
xchg
pushf
das
and
sbb
in
in
xchg
lcall
cld
dec
add
pop
mov
adc
pop
fisttps
mov
jno
and
ds
ljmp
mov
sub
stos
shll
int3
jg
ljmp
insl
or
out
mov
lock
inc
iret
xchg
idivl
jle
xor
lods
push
mov
add
je
push
push
inc
mov
mov
sub
jns
and
jmp
push
pop
lret
xchg
fstl
add
inc
out
sub
loopne
rcrb
call
xor
cmp
jne
loope
add
push
dec
ds
pop
int3
jno
dec
and
ljmp
scas
jle
push
ret
and
loopne
xchg
inc
xchg
inc
cmc
add
dec
mov
ja
mov
xchg
sub
sub
imul
stos
mov
testb
fcoml
inc
cwtl
jo
jne
pop
or
mov
into
xchg
fdivl
push
clc
scas
inc
pop
adcl
ret
clc
add
sub
dec
test
movsb
test
mov
shl
mov
pop
inc
sub
aam
outsb
sbb
sub
lds
adc
xor
pop
cmp
add
mov
sub
stos
test
mov
push
cltd
into
adc
inc
outsl
je
inc
popf
xchg
mov
adc
mov
addb
outsb
sbb
adcb
xchg
cmp
dec
xchg
mov
xor
sbb
and
rolb
cltd
pop
lds
shll
cmp
cmp
pop
mov
hlt
movsl
aad
aaa
notl
cmp
fs
ja
call
xchg
inc
sbb
mov
mov
xchg
lods
inc
dec
daa
out
dec
pop
dec
repnz
loop
jno
push
mov
sti
lods
pop
push
inc
jne,pt
jle
push
imul
sbb
jl
push
pop
mov
sub
or
fldl
push
enter
cmp
jns
mov
fistpll
push
rcr
cld
mov
pop
out
cmp
imul
mov
popa
mov
inc
sub
xchg
and
icebp
scas
ja
cmpsb
fldt
gs
divb
push
mov
cltd
cld
fnstenv
sub
xchg
mov
jp
cmp
mov
dec
incb
in
pop
inc
sahf
or
rcll
cmp
or
leave
xor
push
jmp
xor
movsl
adc
lds
aam
jg
movsb
rorl
loop
imul
ljmp
jl
pop
adc
fdivl
xor
jns
ret
mov
rorl
pminsw
test
sub
hlt
es
mov
std
jb
lds
jbe
sbb
or
pop
adc
into
mov
jge,pn
xchg
inc
cmpsw
mov
push
dec
xor
sub
out
popf
es
jp
repz
stos
imul
out
jne
and
pop
fstpt
out
jo
sti
dec
jb
mov
add
cltd
dec
test
mov
mov
ret
roll
mov
imul
push
and
add
mov
loope
or
subl
je
into
in
int3
adc
xchg
jo
pop
jmp
mov
insb
xchg
ljmp
out
in
mov
outsl
and
jb
fstl
cltd
lret
lds
add
aad
pop
mov
out
add
inc
sub
jecxz
loopne
rclb
mov
out
inc
xor
insb
mov
add
jo
lods
imul
ss
imul
push
sar
lods
mov
xor
stos
mov
jns
cmp
pop
rcrb
or
pop
pusha
add
adc
icebp
sar
mov
xchg
icebp
sbbb
xor
loop
or
pop
call
xor
es
inc
int3
lcall
pop
cmpsb
xor
inc
sub
imul
ficompl
divb
pop
mov
aas
cmc
jl
push
fisttps
fistl
das
pop
in
xchg
push
in
les
and
xor
push
test
or
sahf
mov
and
xchg
mov
adcl
cmpsb
fcomps
xorb
stc
insl
jb
cltd
mov
stos
je
push
jge
xor
fbld
xor
lahf
push
imul
lods
sbb
cli
test
pop
xor
mov
xor
rorb
xchg
mov
and
aam
lret
paddw
cltd
cmp
cmp
mov
cmpsb
stos
inc
out
out
in
jnp
mov
jmp
xchg
mov
fcoml
xchg
pusha
or
cmpsl
mov
in
inc
fstl
test
stc
pop
movsb
and
jle
movsl
inc
cmpsb
jns
mov
pop
fldcw
aam
es
lret
ds
xor
ljmp
sub
repnz
sbb
aam
cmp
xor
outsl
cmp
jmp
aam
lds
cli
rorl
sarb
adc
sub
pop
jne
and
mov
ss
stos
xor
mov
mov
lahf
movl
movsb
adc
and
inc
sub
out
insl
ljmp
inc
clc
popa
bnd
pop
dec
inc
xor
xchg
fdiv
xor
aaa
adc
rcrb
pop
push
js
andl
push
daa
mov
sti
or
cmp
cmp
aad
mov
gs
fwait
adcb
popa
mov
clc
shl
mov
cli
sbb
sub
pop
dec
aas
sub
dec
fcoms
and
inc
mov
push
mov
mov
stos
xchg
gs
pop
test
pop
mov
mov
popa
sbb
or
xor
mov
ljmp
push
xor
dec
jge
inc
xor
mov
pop
scas
pop
pop
cli
jne
add
ret
lret
xchg
sub
xchg
leave
jne
ror
jae
and
movsb
pop
lock
in
push
cld
xor
pushw
fmull
fdivs
lret
xchg
xchg
jbe
mov
gs
xor
push
mov
add
inc
je
test
cli
nop
adcl
push
ljmp
test
jecxz
jg
jnp
push
dec
mov
cmpsb
popf
adc
sbb
bound
std
cmp
add
cs
mov
dec
movsb
jns
out
add
mov
std
cmp
sbbl
adc
arpl
pmaddwd
ja
sarb
or
dec
pop
mov
pusha
rcrb
pushf
int3
adc
mov
out
xchg
movsl
ror
mov
and
pop
sbb
sahf
lods
fsubr
cltd
repnz
pusha
pop
inc
sti
mov
push
xchg
xor
iret
stos
ret
sbb
mov
cs
dec
mov
out
call
stos
sbb
fnstenv
pop
pop
pusha
sbb
jbe
sbb
mov
jle
sub
push
dec
mov
pusha
aaa
scas
sbb
dec
sub
ss
xor
into
push
add
decl
in
jge
xchg
and
popa
sub
jns
cmp
push
scas
cltd
fists
sub
lcall
es
adc
test
jae
pop
push
arpl
mulb
inc
and
iret
negb
idivl
flds
repnz
dec
popa
jae
inc
sbb
in
test
xor
dec
inc
addr16
jle
es
pop
mov
lret
and
cli
imul
data16
pop
fcomp
fcmovbe
ret
sub
fwait
xor
jl
daa
lahf
aas
cli
dec
xor
jg
shll
mov
movsb
repz
ss
je
push
xor
sub
inc
flds
xchg
adc
pop
pop
mov
mov
sub
adc
loopne
in
push
ss
sbb
pop
call
xchg
jns
popa
jp
cli
or
push
and
mov
xor
mov
mov
repnz
jb
mov
jmp
jmp
mov
xchg
ss
decb
call
rorb
mov
popa
and
mov
lcall
sahf
pop
orb
xor
cltd
xchg
mov
ljmp
fwait
jnp
mov
jno
inc
ficoms
mov
push
xchg
pop
roll
sbb
cmp
insl
out
ds
sbb
ja
inc
jmp
inc
scas
fisttps
add
cmpsb
cli
mov
pop
std
les
dec
lret
push
xor
add
push
fwait
add
fcoms
sbb
dec
add
push
mov
incb
push
push
jb
repnz
out
dec
mov
adc
mov
daa
dec
imul
inc
bound
test
fstpl
bound
scas
in
cs
mov
mov
sbb
sarl
imul
into
jp
scas
push
jb
ss
dec
xchg
into
int3
xchg
sub
xchg
divb
inc
pop
push
push
and
lcall
jg
cwtl
mov
adcb
mov
adc
js
int
push
icebp
test
xor
lcall
jl
sub
ret
movsl
dec
jnp
popa
pushf
lcall
mov
and
dec
xor
std
ljmp
adc
scas
hlt
jecxz
daa
jg
adc
pop
lods
pop
add
nop
aaa
inc
sub
push
xchg
mov
cmp
xorl
push
dec
test
push
addr16
xlat
adc
xor
inc
or
movsl
sarl
imul
les
sub
pop
fwait
xchg
sub
std
adc
mov
adc
in
xchg
pop
leave
xchg
adc
push
std
popa
and
sarl
scas
repz
dec
sub
add
push
pop
clc
mov
jo
stos
lret
fisubs
int3
dec
mov
test
sti
or
push
or
ficompl
dec
shlb
nop
mov
sub
in
add
mov
cld
hlt
ja
div
pop
add
sbb
fwait
shrl
pusha
outsl
lods
inc
insb
add
cmpsb
sbb
adc
or
cltd
dec
add
sbb
and
and
in
push
rep
popaw
adcl
jns
xlat
leave
mov
mov
shrb
ja
sbb
pop
jmpw
lock
addps
addr16
jecxz
or
dec
out
loope
daa
xchg
mov
jo
adc
cwtl
or
cmc
pop
cmpsb
lret
xor
inc
outsb
dec
sub
push
cmp
xchg
and
call
movsl
sti
cmp
fsubrp
repnz
jl
ret
inc
shll
mov
pop
jae
rcr
lock
pop
xchg
or
data16
scas
aaa
adc
pop
fs
xor
push
jg
mov
sub
orl
jne
mov
les
out
dec
js
xchg
push
repnz
push
cvtps2pi
jle
and
out
fildl
push
loop
cs
adc
cmp
cmp
dec
or
xor
jg
mov
lock
and
data16
mov
imul
inc
xor
push
jne
add
es
push
addr16
push
lds
push
das
fmull
ret
out
insl
notl
sbb
fisttps
ja
lret
jl
les
pop
lock
adc
adc
std
adc
idivl
mov
dec
add
clc
push
movsb
add
sub
or
add
or
and
adc
addr16
and
aam
push
push
xor
or
sti
inc
dec
xlat
xorb
xchg
mov
mov
ja
fwait
xor
cltd
xor
pop
loope
clc
push
cltd
pop
cmc
mov
shll
mov
dec
pop
stos
fsubrs
sub
cld
aas
loop
pop
jmp
das
loopne
adc
into
aam
dec
jecxz
fisttpl
adc
dec
loop
pop
cs
sub
aas
xchg
mov
sub
and
push
in
xor
mov
add
sub
adc
hlt
jge
sbb
mov
mov
orb
fadd
cwtl
fildll
fisttpll
push
sbb
cmp
mov
mov
enter
mov
cmp
loope
je
cmp
or
fildl
xchg
fwait
sbb
repnz
test
in
cmp
jp
add
mov
inc
adc
sub
ljmp
adc
xchg
mov
mov
pop
subl
sahf
dec
push
add
xchg
pop
clc
aad
xchg
idivb
enter
loope
movnti
sub
lahf
cmpsb
inc
das
mov
dec
dec
bound
and
insb
es
pop
pop
sahf
shlb
sahf
icebp
int
fnstenv
lds
enter
fnstsw
aad
push
shrb
pop
and
xor
aas
xor
pop
dec
in
clc
push
push
mov
and
mov
cmp
or
adc
mov
adc
dec
rol
dec
mov
push
mov
sub
je
xor
neg
fwait
add
sahf
ljmp
mov
cmp
arpl
ret
mov
scas
mov
imull
xchg
mov
leave
out
dec
pop
jp
sub
dec
adc
jbe
fmuls
pop
xchg
ret
cmpb
push
lock
mov
add
pop
call
movsl
jp
sbb
inc
loop
pop
inc
sbb
cmpb
mov
mov
rcr
mov
je
jmp
adc
push
add
out
insb
xchg
xchg
cmp
xchg
icebp
jo
xor
mov
cmpsl
add
enter
fldl
jb
add
inc
jmp
test
or
xor
add
mov
push
lea
outsl
jl
push
jnp
ds
jo
cmp
xor
sbb
mov
xor
scas
xchg
aas
pop
dec
xlat
ret
std
push
call
cmp
mov
inc
and
ja
pop
lret
popf
mov
adc
jo
sarb
stc
sbb
int3
and
stc
dec
aas
in
mov
sub
daa
and
push
sbb
rolb
pop
loopne
xor
leave
repz
cmovg
std
jo
sbb
pop
lahf
dec
aad
jl
jge
mov
jmp
dec
xchg
fdivs
cmpsb
or
sbb
push
rcll
mov
pop
cmp
xlat
aad
lea
pop
dec
addr16
rclb
in
jne
cmc
int
aaa
aad
mov
push
pop
dec
ficomps
push
decl
std
cmp
fadds
adc
cmp
inc
inc
jns
lret
xor
std
dec
add
dec
js
js
sbb
out
shll
adc
pop
xlat
push
jp
xor
mov
xor
xchg
pop
sbb
xchg
or
or
icebp
xchg
jl
iret
in
not
repnz
pop
push
push
lret
mov
gs
jl
pop
pusha
mov
mov
dec
cmpsl
loop
clc
shll
movb
cmp
sbb
xchg
cli
lea
incb
inc
insb
mov
mov
or
shll
mov
insl
ja
cmpsb
jb
inc
add
sub
add
jbe
and
fwait
hlt
mov
sub
jmp
push
adc
addb
jb
call
and
cld
or
int3
in
dec
adc
rorb
or
mov
stc
cmc
mov
mov
les
movsb
sub
frstor
cli
fs
xchg
jg
sub
lret
mov
xor
fnstcw
sub
adc
dec
pop
mov
jge
adc
jne
test
mov
fadds
inc
mov
aad
subb
outsb
add
jp
xchg
stos
push
push
add
xchg
mov
pushf
or
lods
adc
pop
sahf
out
mov
test
sahf
mov
ja
js
or
mov
cmpsb
mov
ds
cltd
mov
aam
sub
ljmp
xor
rorl
mov
subl
iret
mov
pop
jecxz
mov
mov
inc
stos
test
pusha
mov
pop
ds
xchg
pop
add
aaa
cmp
xchg
xor
insb
push
xchg
jo
call
cmp
cmp
adc
movsb
dec
outsb
and
and
pop
sub
lods
fadds
movsb
push
jo
mov
xchg
mov
scas
jo
and
ror
test
sub
push
sub
inc
mov
and
ficoms
xchg
or
dec
outsb
mov
or
nop
subl
mov
mov
mov
and
loopne
out
pop
std
xor
jl
mov
jbe
inc
jecxz
push
test
dec
test
push
adc
pop
dec
cmp
mov
insb
inc
lds
loopne
or
mov
idivl
in
inc
sbbb
mov
cmp
insl
ret
std
dec
lret
pop
test
imul
sub
jge
test
pop
pusha
mov
jns
iret
sbb
sbb
push
mull
addr16
cmp
fcom
adc
xor
xor
aam
cmp
in
cmp
mov
push
cmp
cli
ror
inc
pop
mov
arpl
jmp
adcl
ja
lahf
push
mov
mov
xorb
rcr
popf
stc
lock
xchg
cmpsl
mov
insl
addr16
out
repnz
add
enter
mov
mov
shrl
lock
das
je
ss
xchg
inc
inc
mov
in
fisubl
push
sub
out
daa
mov
push
jns
mov
jecxz
xlat
pushf
sub
pop
sbb
mov
in
mov
jp
into
inc
mov
fs
xchg
lods
rol
add
xchg
xchg
ret
xchg
lea
mov
xchg
cmp
fidivs
xor
mov
filds
lods
jo
mov
add
decb
jno
lea
mov
xchg
push
push
add
mov
push
insl
cltd
repnz
sbb
mov
mov
stc
mov
bound
fadd
adc
xor
dec
arpl
mov
mov
mov
int3
sub
jno
and
fnstsw
adc
mov
sahf
ljmp
cmp
sub
dec
bound
or
aaa
loope
test
xor
lcall
stc
cmp
js
aad
lcall
jl
pop
add
stos
xchg
dec
mov
mov
push
les
push
aas
std
cs
imul
mov
mov
and
fsubl
jl
movsb
and
jbe
mov
sub
mov
divb
and
xchg
pop
inc
dec
or
lcall
leave
movsb
jp
mov
insl
mov
mul
addr16
insb
xchg
movsl
imul
jbe
jg
test
dec
sti
xchg
xchg
fsubrl
inc
lcall
enter
dec
mov
int
cmp
repnz
or
scas
pop
test
sbb
movsb
aaa
test
daa
inc
xchg
cmp
fwait
out
push
and
push
xchg
std
jmp
imul
or
repnz
mov
lock
dec
sti
js
dec
out
mov
pop
je
lcall
call
add
xchg
inc
inc
mov
ja
std
dec
ret
imul
and
xchg
push
jbe
xor
mov
xlat
adc
imul
gs
shrl
loopne
lea
cmc
cs
mov
mov
push
leave
pop
fcomps
xlat
add
sub
sbb
xchg
lahf
cmp
js
inc
sbb
repz
leave
mov
xchg
xlat
jmp
dec
test
mov
das
pop
push
mov
sub
fisubrl
jb
rcll
cltd
pop
jo
pop
std
cmc
outsb
sub
xchg
jb
xchg
xor
sti
dec
cld
add
inc
lods
cmp
inc
cmp
cmc
repz
xor
jge
sbb
lea
movsb
test
mov
aam
stc
aad
dec
or
push
sub
iret
andl
pop
adc
adc
pop
int3
subb
jmp
sar
pop
stos
adc
dec
push
cmp
test
sbb
fisubrs
sbbb
pushf
push
push
rcrl
mov
mov
bound
inc
mov
nop
mov
pop
jns
es
aas
es
mov
inc
in
je
dec
or
cmp
loop
and
movsb
scas
iret
pop
inc
sbb
xor
pop
imul
dec
enter
xchg
fisttpl
in
mov
scas
mov
push
mov
out
mov
stc
je
push
or
jecxz
das
sbb
pop
jno
aas
xchg
jb
cmp
mov
add
out
inc
cwtl
mov
mov
dec
subl
inc
mov
in
nop
mov
hlt
mov
adc
inc
add
gs
and
add
int3
mov
test
mov
aas
test
push
pushf
insl
js
dec
daa
inc
cmp
daa
mov
mov
xchg
mov
shrl
imul
pop
pop
outsb
fidivrs
adc
xor
sub
xchg
pop
mov
popf
idivb
dec
arpl
in
nop
ret
adc
pop
xor
cmp
cli
lcall
les
pextrw
pop
xorb
jg
push
xor
movsl
out
cs
or
clc
add
in
test
push
or
add
pop
add
cmp
bound
test
jge
les
add
mov
pop
aam
sbb
lea
jbe
xchg
rcll
push
movsl
xor
cld
insb
lret
lret
jg
and
aad
cmp
mov
ljmp
jnp
jp
cmp
fists
xchg
mov
push
leave
push
ja
xor
lock
push
push
movsb
mov
clc
jnp
dec
hlt
push
ds
lret
cmp
insl
add
movsb
in
xchg
je
int
dec
es
inc
push
xchg
xchg
xor
insb
add
and
xchg
and
and
mov
cli
insb
cwtl
in
lret
sub
outsl
aad
add
jnp
fs
xchg
in
scas
mov
pop
dec
cmpsb
scas
inc
jg
pop
sbb
sbb
xchg
sbb
or
xchg
mov
lods
adcl
hlt
ret
and
and
xchg
repnz
sbb
jmp
testb
add
pop
in
pusha
sbb
dec
push
adc
std
loope
out
jnp
pusha
jns
lods
shr
mov
mov
adc
inc
xor
divl
add
push
cli
jns
icebp
pop
inc
stos
es
in
jae
mov
xchg
mov
adcb
mov
push
push
push
cld
add
push
aam
movsb
jns
xchg
or
cmpsl
mov
push
pop
clc
mov
lcall
sub
roll
adc
adc
mov
xchg
cwtl
pop
or
shrb
xchg
pop
sbb
ficoms
xor
cmp
daa
add
loope
or
push
movsb
jb
out
sbb
out
mov
in
clc
mov
or
imul
pop
cs
add
jmp
push
pop
mov
aam
out
push
sbb
in
lock
mov
pop
addr16
fidivl
movsl
sbb
adc
sub
in
aam
dec
add
dec
add
sbb
aas
roll
sar
cmp
xchg
imul
push
push
pop
and
sub
bound
cmpsl
addr16
mov
out
icebp
stc
add
enter
ljmp
out
jnp
cld
fucomi
sbb
pop
add
fldt
push
jle
add
es
xor
push
or
cmpb
dec
loop
push
jns
sbb
fcmovbe
sbb
sbb
pop
push
stos
incl
iret
jmp
bound
cmp
into
push
lds
sbb
sub
in
aam
imul
xor
inc
fstps
mov
scas
shrb
add
aam
in
mov
out
gs
ljmp
clc
popf
xchg
jl
mov
jle
xchg
fstl
sub
cltd
jae
or
frstor
sti
pop
or
mov
pop
call
jmp
mov
loope
mov
sbb
pusha
std
jl
push
jle
push
jmp
pop
mov
jmp
sahf
jns
nop
dec
fidivl
lds
insb
mov
xor
outsl
mov
mov
xor
fistl
test
xchg
jg
xchg
dec
std
jmp
mov
cld
inc
xchg
ljmp
shll
cmpsl
xchg
dec
jae
and
cmpsb
add
test
into
into
rclb
sbb
and
push
fs
mov
movsb
jmp
ljmp
xor
xchg
sub
mov
jmp
push
push
jb
ljmp
scas
nop
inc
call
int
dec
adc
mov
pop
cli
push
mov
in
out
icebp
sbb
aam
dec
jnp
xor
add
mov
in
pop
xor
adc
adcb
ret
inc
pop
loope
pop
repz
mov
mov
or
fists
adc
outsl
cwtl
inc
or
movsl
lds
xchg
jo
stos
filds
xor
xchg
out
or
push
dec
lret
mov
ret
cltd
and
xchg
jg
mov
adc
out
cld
jne
or
jp
and
test
xchg
lahf
stc
wbinvd
xchg
out
cmp
pop
cmpsl
push
push
movb
sub
xor
cmpb
data16
and
pushaw
mov
loopne
mov
mov
dec
mov
in
lods
and
xchg
mov
mull
aaa
dec
xor
mov
pop
addr16
dec
mov
push
jmp
ret
xchg
ss
out
cltd
cmp
xchg
idivb
test
pop
lods
jne
mov
shll
adc
fiaddl
xor
sub
movsl
aam
out
dec
xlat
cmp
cmpsb
or
inc
stc
fmull
repz
mov
stos
sub
outsl
add
push
jbe
xlat
push
cmp
mov
pop
mov
out
test
xor
sub
in
shrb
sub
push
or
add
cmp
scas
cmp
jle
fwait
in
sbb
pop
outsl
xlat
jmp
inc
dec
xor
insb
mov
cmp
test
push
sbb
bound
fdivrl
cmp
mov
in
cmp
add
loop
aaa
mov
hlt
adc
dec
ljmp
shl
and
jle
ljmp
xchg
inc
cmpsl
fwait
sahf
lods
cmpl
add
push
int
pop
dec
cld
lcall
pop
pop
adc
lahf
jp
int3
scas
scas
rol
arpl
adc
cmc
repz
icebp
or
shlb
add
in
test
cld
pop
movsb
adc
in
jle
mov
clc
mov
cmp
pop
mov
shrl
stos
push
leave
test
cmp
mov
xchg
sbb
jmp
jecxz
xor
cmp
or
testb
in
inc
call
cmp
test
ret
jg
pop
cmp
dec
cmp
test
mov
cltd
jmp
cmpsl
cmp
push
es
pop
pop
jbe
adc
call
leave
fsubrl
jle
inc
cli
mov
push
lock
aad
add
stos
gs
das
jecxz
dec
sub
and
inc
lock
pop
jle
les
lea
push
jle
push
ret
ret
adc
ss
movsb
nop
aaa
jae
test
xchg
or
xor
jl
mov
and
out
mov
ret
sbb
jns
rolb
sbb
and
push
lea
adc
nop
mov
pushf
cmpb
popa
pop
or
mov
jge
mov
int3
mov
imul
or
jbe
shrb
lret
cmp
mov
sar
testb
xor
fisubl
popa
arpl
sahf
cs
adc
outsl
call
xchg
popa
xchg
test
pop
jne
mov
ret
xchg
inc
into
dec
pop
mov
xor
sbb
lods
adc
add
fdivrs
adc
gs
and
sub
or
out
mov
loop
add
gs
pop
daa
add
pushf
mov
js
movsl
lret
test
movsl
enter
dec
sub
xor
mov
xchg
pop
xor
xor
pop
jge
mov
xchg
jno
std
loope
xchg
out
sub
push
adc
xchg
push
cmp
movsb
push
xor
xchg
jb
loop
fidivrs
stos
imul
jecxz
adc
inc
cmp
add
test
xchg
mov
mov
sarl
aas
enter
push
mov
test
sbb
mov
imul
rorb
iret
pop
fmull
push
movsl
lods
cmpsb
rcrb
dec
in
enter
maxps
dec
pop
popl
in
mov
int
rol
push
cld
mov
xor
inc
stos
and
data16
das
xor
in
addr16
fistpll
add
xor
xlat
xchg
sbbb
add
out
int
dec
movsb
test
mov
cmp
xor
outsl
pop
mov
movsb
cmp
sub
dec
ja
xor
into
ljmp
imul
xchg
mov
dec
test
les
jle
cmp
pop
and
mov
out
ja
lods
mov
lret
movl
and
inc
jno
fwait
cmpb
sbb
mov
aad
xchg
push
or
sub
fbld
out
jno
xor
cmp
imul
mov
cmp
jmp
sarb
aaa
test
iret
fwait
jmp
adc
mov
xor
sub
stos
ret
push
out
dec
mov
xor
cmc
pop
mov
mov
imul
loopne
cld
and
xchg
push
dec
fldenv
dec
in
shlb
cmp
jp
cs
cmp
das
addr16
xlat
mov
push
movsl
stos
and
cmpsl
xlat
mov
lds
loopne
add
sbb
std
sbb
inc
hlt
jg
push
cltd
fwait
in
shll
mov
sbbb
inc
fs
ja
sub
xor
pop
add
jnp
sbb
push
push
xchg
cmp
sbb
lock
iret
imul
dec
fcmovnbe
jns
enter
push
dec
hlt
mov
pop
fmulp
fiaddl
pop
setns
xor
cltd
iret
inc
cmp
jns,pn
jecxz
iret
push
mov
in
data16
mov
mov
sbb
push
lret
adc
ja
mov
adc
pop
lods
cld
dec
mov
xchg
pop
loop
ds
and
aas
ja
addl
enter
ds
int
je
xorb
xor
gs
jne
cli
inc
rclb
mov
push
mov
cmpsl
sub
xlat
jmp
into
shr
adc
test
xchg
pop
es
addr16
aas
or
lods
add
fisttpll
mov
dec
mov
ret
inc
jge
rdmsr
test
loop
stos
jb
stos
mov
xor
insl
sbb
and
clc
shrb
push
ret
out
ss
dec
inc
cs
frstor
pop
adc
mov
test
ret
insb
out
jne
xchg
scas
repnz
dec
into
and
ds
in
loopne
push
lret
adc
push
dec
nopl
clc
or
jae
push
lock
push
lret
ror
enter
das
and
rcrb
cmpsb
xchg
lcall
aas
pop
xchg
test
out
leave
fs
outsb
clc
pop
scas
pop
sub
aam
data16
repnz
js
gs
push
scas
fsubs
jb
mov
test
fidivs
push
mov
mov
mov
cld
mov
xchg
repnz
xchg
imul
negb
enter
xchg
jo
sti
out
jo
stos
cltd
cs
add
aaa
jl
in
aad
imul
lea
lea
cmpsl
sub
cmp
push
inc
mov
std
sub
fwait
inc
out
or
lcall
sub
push
and
push
lock
int3
icebp
fcomp
mov
sbb
sar
cmpsb
push
pop
pop
imull
sti
sbb
push
pushl
and
scas
jne
stc
dec
and
mov
sbb
push
inc
add
and
pop
xchg
cmc
mov
inc
push
jl
mov
jo
or
or
inc
lea
xlat
call
mov
mov
or
sbb
movsl
jbe
imul
mov
or
popf
out
lret
insb
out
fstps
mov
or
sarl
jmp
xchg
cltd
mov
jmp
inc
mov
pop
xor
sub
imul
enter
lret
scas
mov
sub
decl
sub
cld
ds
or
xchg
rcrl
test
scas
pminub
inc
mov
push
pop
pop
rorb
dec
mov
jl
cltd
mov
mov
in
dec
cmc
adc
dec
dec
push
pop
cmp
sub
test
mov
dec
adc
cltd
mov
mov
sub
stc
cld
push
jp
mov
pop
lcall
pop
add
aad
push
mov
push
rcrb
test
mov
add
xlat
pushf
jl
repnz
dec
sub
adc
sbb
pop
divb
into
xor
mov
mov
js
mov
mov
mov
inc
in
repz
mov
sub
adc
adc
iret
cmpl
mov
lret
sub
or
jns
and
mov
jb
inc
adc
cmpl
dec
lods
fnstenv
mov
fisttps
mov
mov
outsl
push
dec
mov
adc
adc
push
xor
insl
inc
xor
int3
aaa
pop
hlt
xlat
lds
loope
dec
xor
cmp
mov
cmp
or
jne
pop
scas
mov
fs
fsubrl
and
sub
call
mov
scas
lock
ret
dec
arpl
arpl
jg
mov
push
xor
gs
inc
orl
fdivp
fwait
sub
pop
mov
mov
fistps
test
cwtl
daa
mov
lods
cmp
adc
fs
ja
and
popa
mov
aaa
lock
or
aaa
jp
iret
loopne
lods
ret
sbb
mov
inc
sub
daa
dec
fs
das
xchg
cmovle
adc
fs
out
mov
fnstenv
enter
push
mov
insl
xor
imul
pop
cmp
sub
pop
add
adc
int
movsl
mov
inc
aam
pop
jne
rcrb
clc
mov
or
sarl
int3
bnd
pop
fstpl
and
rcr
sahf
shlb
or
das
cmp
pushf
fdivrs
std
cltd
stos
dec
mov
push
inc
addl
nop
outsb
jbe
aad
jecxz
fdivrl
bnd
push
fidivs
jmp
jnp
imul
lret
ret
repnz
push
inc
xchg
pusha
adc
inc
and
dec
push
bound
and
stos
xchg
sbb
and
cmp
inc
pop
add
scas
sub
mov
cmp
ljmp
addr16
xchg
call
cmpsl
out
pop
test
and
push
sub
adcb
call
cmp
arpl
jp
in
xchg
mov
addr16
mov
in
in
adcb
ljmp
pop
fldenv
xchg
or
add
push
mov
lea
jle
sub
add
or
rcll
jmp
out
dec
inc
jns
idivl
cli
fdivrs
sti
dec
jg
add
test
out
cltd
inc
push
mov
mov
imul
addl
jae
arpl
xchg
push
or
iret
lcall
aam
ret
fistpl
dec
mov
mov
jo
inc
leave
mov
push
xor
dec
gs
icebp
lcall
std
mov
insb
enter
lcall
adc
mulb
bound
xchg
mov
iret
aaa
push
cmp
sbb
test
dec
push
das
ja
cmp
pop
loope
mov
sbb
js
push
xchg
fimull
mov
push
mov
xor
sti
nop
mov
sbb
xchg
jo
push
push
sar
dec
xchg
xchg
testl
or
fstpl
decl
cmpsb
inc
insl
pop
push
push
jae
inc
adcb
and
faddp
leave
loopne
insb
lcall
daa
lahf
shr
mov
ja
das
mov
daa
push
adc
sub
or
fdivl
mov
cmpsl
mov
jl
mov
dec
lret
movsl
xor
dec
notb
fs
adcb
cmp
lahf
rclb
iret
lcall
in
mov
jno
mov
clc
movsl
fwait
cmp
or
sub
mov
jb
mov
rep
lea
add
in
sahf
push
fmull
adc
jb
mov
or
scas
ficoms
insb
lods
add
ret
xchg
push
daa
jl
insl
movsl
lahf
cmp
and
push
jmp
fnstenv
jp
ja
pop
in
pop
mov
stos
out
lahf
inc
push
fistpll
mov
sarl
aad
jl
adc
xchg
dec
sub
adc
mull
add
sti
test
mov
cli
jle
adc
mov
notb
jecxz
xchg
stos
cmpsb
fidivrl
mov
nop
lret
jae
in
ret
outsb
sub
adc
xor
out
jg
push
lret
stos
mov
lock
push
inc
pushf
pusha
add
in
cmp
pop
mov
repz
testl
paddsw
cmpsl
push
inc
mov
jne
movsb
jl
insb
push
sub
lcall
add
push
inc
xchg
mov
and
xor
outsl
repnz
stos
push
pop
dec
dec
xchg
in
jae
subl
repnz
mov
scas
testl
lcall
sahf
or
in
and
mov
std
cmpsl
jmp
mov
scas
jae
imul
cld
lods
popa
divl
std
lcall
xchg
sbb
push
jg
or
loop
incl
jne
lcall
cmpsb
loope
aaa
fildl
jl
ds
jecxz
lahf
addr16
xor
scas
jl
inc
xchg
mov
test
mov
popa
add
in
ja
lret
pop
sbb
pop
cwtl
testb
inc
dec
or
cmp
into
fcmovnu
ret
push
popa
mov
and
cmp
dec
ja
mov
js
jl
rorb
push
sub
mov
pop
arpl
push
movsl
push
popf
jl
push
lock
dec
stos
or
jbe
xchg
cmp
lret
xor
inc
mov
add
cmp
sarl
cmp
sarl
pop
loope
mov
jl
dec
mov
cmp
xlat
hlt
in
stc
sbb
xor
sbb
push
into
insl
addr16
fstpl
es
dec
fyl2x
nop
dec
cli
cmpsb
add
xchg
pop
call
xor
push
mov
mov
sbb
adc
negb
mov
je
pop
insb
sub
cmpsl
mov
xchg
aas
sub
inc
loopne
sub
sahf
or
mov
loopne
push
jp
int3
cltd
mov
push
or
mov
xchg
sub
rcl
jb
pop
cmpsb
sub
sub
mov
lods
hlt
cs
das
inc
imul
cmpb
enter
cwtl
cltd
xchg
add
jecxz
dec
push
bound
ss
loope
stc
and
sbb
cmp
jecxz
push
jne
xchg
fucomip
sbb
pop
xor
int
int3
leave
inc
adc
and
cmp
pop
negl
iret
aaa
mov
and
mov
js
sub
sub
orb
xchg
mov
cmp
add
rorl
xor
test
inc
das
jno
mov
xchg
and
mov
stos
adc
les
or
aam
cli
and
adc
xchg
or
fmull
xchg
mov
dec
add
add
stos
data16
sbbb
aaa
push
inc
int
and
xchg
and
call
mov
xorl
xor
mov
dec
sbb
fstps
hlt
insl
loope
xchg
popf
push
int3
fwait
adc
fcmovu
out
jle
jae
roll
lret
pop
dec
mull
xchg
inc
lret
es
cmp
enter
pop
les
in
shlb
and
cmpsl
fildll
or
sahf
clc
dec
sarl
adc
test
lea
dec
jecxz
cmp
sbb
push
lods
push
test
mov
ss
xchg
mov
dec
cmp
jge
imul
ljmp
mov
sub
loope
outsl
cmpsl
adc
dec
jae
add
in
push
and
cmp
inc
mov
jp
xor
xor
hlt
inc
mov
sti
adc
and
movsb
rcrb
add
sub
mov
and
packssdw
dec
rcrb
inc
pop
rclb
mov
aas
test
mov
in
icebp
lcall
js
cmp
adc
xchg
cmp
sahf
adc
add
jae
call
push
xchg
lret
shlb
push
cwtl
pushf
imul
and
rolb
ds
iret
xchg
in
add
push
mov
pop
mov
or
xor
push
add
xchg
in
imul
test
loope
push
stc
pop
mov
push
mov
push
sahf
int
repz
mov
jno
pop
adc
xorl
fists
divl
addr16
and
jmp
jp
jns
push
sub
push
out
daa
jecxz
dec
xchg
cltd
pop
std
xchg
xchg
imulb
ljmp
mov
and
lea
or
adc
mov
sbb
or
mov
or
sub
sub
xor
pushf
xchg
fld
lahf
xchg
mov
or
movsb
xorl
xor
js
cmp
mov
sbb
mov
rolb
add
mov
xchg
fidivl
loop
in
repnz
pop
sub
fwait
sbb
xchg
xchg
out
out
mov
loopne
gs
leave
dec
cmpsb
pushl
add
mov
and
jp
mov
and
out
xor
mov
lds
in
sub
inc
les
iret
sbb
cli
test
jmp
pop
imul
fs
test
sub
jg
gs
xchg
inc
sub
aad
or
mov
lods
adc
fstl
insl
cltd
out
mov
pop
call
out
ret
dec
cld
es
push
mov
fdiv
pop
adc
xor
inc
xor
adc
lret
xchg
nop
jbe
addr16
lret
push
cmpsl
xchg
and
roll
dec
mov
cmp
push
adc
xchg
leave
lock
testb
xor
push
add
test
xchg
sub
mov
ds
js
xchg
pushf
movsl
je
xchg
mov
mov
xlat
pop
js
jae
add
in
test
into
push
mov
insb
out
scas
fs
xchg
mov
mov
ja
repnz
or
cmpsb
add
mov
fldl
stc
sub
repnz
scas
cmc
andb
adc
lock
sub
cwtl
jnp
add
and
test
pop
xor
dec
adc
adc
insl
fsubl
mov
pop
cmovge
push
mov
sub
clc
jp
call
bound
lea
popl
inc
xchg
sub
inc
cli
pop
icebp
cld
in
push
mov
push
in
ds
bound
ds
dec
jnp
ret
sub
stos
repz
es
fidivrs
out
cmp
xorl
sahf
fs
pushf
insl
movsb
fwait
push
in
je
fs
add
push
lods
mov
mov
push
dec
iret
lods
insb
pop
or
flds
or
sbbb
sbbb
and
sub
les
jb
adc
dec
mov
incl
xchg
dec
dec
cmpl
adc
inc
pop
mov
inc
push
fcoms
pop
std
fs
jmp
pop
cmp
mov
call
jmp
stos
out
rclb
mov
test
in
inc
sbb
jg
scas
iret
cld
cmpsl
lock
or
push
sbb
imul
mov
ret
sbb
xor
mov
sbb
out
push
mov
icebp
test
test
cmp
jno
jns
test
mov
jns
xor
ja
jmp
in
cmpsl
xor
push
aam
loope
inc
mov
inc
inc
pop
scas
jb
jmp
xchg
test
xchg
sbb
cmp
cltd
adcb
stc
jb
pop
mov
xor
cwtl
xchg
insb
andb
outsb
pop
dec
test
cmp
adc
fisubrs
push
jmp
in
pop
decb
data16
lret
rol
mov
into
lret
test
jmp
push
mov
push
adc
mov
sub
sti
jge
daa
jl
es
fstpl
inc
xor
cs
inc
dec
repnz
in
xchg
mov
cmpsb
inc
test
and
mov
repnz
jle
insl
outsb
pop
in
dec
push
dec
push
pop
sub
inc
xchg
cld
xchg
or
pushf
push
mov
xor
mov
and
jo
nop
ss
adc
jmp
push
aam
insl
movsl
pop
loope
xchg
inc
lret
gs
lods
js
add
mov
stc
cmpsb
popf
pop
jp
mov
mov
add
jae
add
mov
js
xor
pop
movsb
loop
push
jmp
push
sub
leave
jns
inc
cwtl
jb
sbb
jno
dec
insb
lods
dec
mov
jecxz
xor
sub
jns
das
cmpb
stos
fwait
rol
das
daa
lods
movsb
push
fsubl
sbb
daa
pop
jne
fbstp
enter
loopne
inc
push
fidivs
xchg
pushf
pushf
adc
push
scas
fnsave
cli
inc
mov
nop
push
jl
sbb
test
xchg
add
arpl
pop
inc
jnp
mov
dec
leave
add
push
subb
insb
imul
shlb
pop
mov
inc
mov
jg
test
stos
cmc
xor
pop
stos
dec
sbb
push
push
xchg
push
ret
mov
gs
pop
sbb
xchg
jae
es
mov
aaa
fidivl
gs
test
test
mov
mov
pop
xlat
stos
leave
xor
mov
xchg
pop
or
loopne
jbe
int
push
sti
into
fsub
push
sub
pop
add
cwtl
xor
adc
sub
loop
fisttps
lret
xchg
fiaddl
rclb
hlt
les
push
insl
std
int
push
mov
pop
es
rcr
jb
mov
push
subl
leave
loop
imul
sub
and
movsl
xchg
xlat
jne
fcmove
sub
jae
dec
dec
push
scas
or
sub
inc
popf
test
cmp
sub
cli
and
sbb
mov
lock
and
sbb
jl
sbb
pop
je
push
jno
pop
push
test
jecxz
lods
cmp
dec
sub
dec
xlat
inc
xchg
sbb
mov
push
insb
std
cmp
sbb
movsb
mov
lods
adc
imul
mov
cmp
inc
jecxz
jle
jae
jae
mov
jp
andl
xchg
push
inc
dec
test
lret
mov
shr
inc
aam
xor
push
cld
cltd
jae
jne
test
cmpsl
cmpsb
mov
lds
clc
ds
imul
mov
mov
frstor
inc
cmp
xchg
fwait
xchg
add
mov
add
add
inc
into
mov
mov
pop
sbb
mov
movsl
pop
cld
and
pushf
mov
sti
outsb
lret
mov
jns
mov
inc
popf
pop
and
adc
mov
sbb
mov
imul
pushf
dec
sbb
pop
pop
dec
cld
mov
scas
js
mov
gs
jl
or
cs
push
inc
or
int3
mov
cmpsl
adcb
out
repnz
pop
mov
mov
loopne
stos
xchg
ficoml
push
icebp
xchg
ja
sub
jnp
setb
or
test
and
fstp
adc
test
pop
in
dec
push
push
or
das
add
pop
out
test
mov
adc
popa
and
inc
cmp
enter
xchg
push
cld
incb
neg
fsubs
pushf
add
out
hlt
out
cmc
or
push
mov
sub
inc
mov
push
movsl
ss
daa
cwtl
cmp
inc
or
imul
cmpsb
pop
jmp
sahf
daa
test
test
add
insb
xor
mov
sbb
mov
push
call
pop
lret
fisubs
js
leave
icebp
in
and
inc
push
mov
fs
lods
fsubr
aad
mov
inc
mov
inc
mov
adc
mov
mov
pop
test
and
or
mov
dec
jne
in
lds
sub
cmc
int3
xor
bound
setns
out
out
sub
xor
cmpsb
fstpl
cld
scas
pusha
not
pop
movb
sub
pop
xchg
clc
loopne
and
xchg
push
jg
rol
aaa
add
dec
dec
xchg
cltd
fmull
sbb
or
scas
stos
cmpsl
mov
push
xchg
cltd
sarb
lcall
add
cli
imul
mov
int3
inc
dec
shlb
sub
lods
push
fcomps
popf
ds
mov
lret
out
sub
ja
adc
sub
clc
sbb
je
ljmp
sahf
sbb
cmp
and
and
sbb
mov
sub
aad
xchg
pop
xchg
repnz
imull
popf
or
adc
mov
add
add
xlat
mov
mov
es
fisttpll
lds
inc
or
loop
popf
and
lcall
sub
fnsave
imul
jle
mov
ret
decl
mov
adc
mov
mov
adc
test
sbb
jp
inc
ljmp
aaa
push
mov
idivb
cs
jne
sub
push
adc
ljmp
push
pop
cld
or
jno
outsl
adc
movl
loope
clc
xchg
inc
rorb
icebp
fs
ret
fistl
xchg
lcall
push
mov
inc
xor
nop
push
cmp
mov
mov
ss
adc
in
xor
jbe
in
or
lret
pop
adc
mov
push
hlt
inc
add
loopne
xchg
jmp
sbb
dec
aam
or
scas
cmpsb
and
popa
jecxz
mov
insb
arpl
aam
inc
inc
jg
mov
test
fwait
and
mov
clc
sub
in
jge
imul
sbb
lcall
mov
dec
and
mov
xor
or
nop
or
je
jecxz
push
notb
xor
jp
xor
and
xchg
mov
daa
psubusb
cmpsl
iret
jno
sbb
sbb
add
mov
lock
inc
loopne
sub
push
aaa
pop
stc
das
add
scas
push
loopne
mov
mov
mov
pop
xchg
es
dec
jle
int3
stc
in
data16
xor
add
jne
sub
and
mov
loop
outsb
xor
imul
push
test
ljmp
orl
cmp
lret
xchg
stc
and
or
jg
or
in
cmp
inc
lods
push
mov
enter
jle
mov
cmp
mov
mov
sub
adc
add
adc
ja
out
adcb
mov
mov
cld
in
xor
xchg
pop
repz
add
push
xchg
mov
call
add
rcrb
cmp
push
jecxz
push
jle
or
into
adc
push
jnp
xchg
inc
cmp
xorb
insb
and
push
shl
hlt
and
cltd
xlat
push
adc
and
mov
out
adc
mov
dec
dec
aam
or
cmp
pop
jb
and
xchg
xor
mov
fdiv
and
jo
pusha
jle
or
aam
and
into
idivb
and
xor
add
inc
push
jno
sbbb
push
mov
xchg
sub
aas
push
fcompl
sti
and
dec
xchg
outsl
adc
int3
test
push
lahf
clc
imul
add
mov
pop
push
loop
rcrl
and
pop
mov
into
push
xchg
mov
ss
and
ret
push
scas
cmpb
jle
rolb
sub
cmc
std
ror
data16
rorl
cltd
push
pushf
xchg
dec
jno
inc
and
mov
fnstcw
mov
jge
fists
cmp
mov
push
mov
mov
arpl
cmc
orl
scas
shl
orl
xor
adc
ss
sub
aam
test
and
das
push
movsb
sub
push
add
pop
mov
hlt
sbb
pop
adc
aad
loope
cld
add
movsl
js
test
fdivs
outsb
push
sub
mov
pop
jo
popf
jo
enter
test
or
test
add
popf
cmpsb
mov
adc
mov
jl
sub
and
pop
movsl
xor
shrl
pop
int
dec
loopne
aaa
xor
adc
xor
jecxz
push
mov
mov
adc
ja
mov
pop
and
test
push
jecxz
sbb
cmp
aad
clc
dec
sbb
xor
sbb
push
sbb
mov
xor
mov
int3
xchg
pusha
ficoml
push
adc
out
in
gs
movsb
cmpsb
lcall
cltd
int3
lret
mov
in
mov
push
sbb
mov
js
adc
test
fcomps
ja
enter
adc
movl
out
call
jns
imul
cmp
imul
enter
push
loop
sarl
out
rorl
sub
mov
xor
in
sub
push
outsb
icebp
test
adc
cwtl
orb
sub
add
mov
addl
cmpsb
mov
add
rorb
les
mov
sarb
fsts
ljmp
imul
sub
push
sti
jmp
add
dec
xor
sahf
jo
inc
xchg
dec
fdiv
xchg
adc
mov
icebp
jmp
dec
xchg
cmp
test
nop
adc
xchg
pop
inc
mov
rolb
fildll
test
loope
mov
sbb
ja
inc
mov
add
mov
out
cmc
mov
inc
inc
adc
shl
xchg
push
inc
inc
adc
sub
push
lock
or
mov
dec
pop
push
sahf
outsl
cmp
std
lods
call
stos
loop
lret
rol
sbb
mov
fidivrs
sahf
inc
xchg
sub
and
pop
movsl
xchg
pop
std
jp
icebp
cmc
mov
test
mov
or
mov
lcall
dec
dec
pop
mov
in
dec
cmpsb
scas
add
push
cld
jbe
ljmp
pop
xor
shll
xchg
fs
push
dec
rorl
mov
fnsave
subb
aaa
clc
aaa
cli
sub
stos
shrb
scas
imul
or
mov
mov
sbb
cmp
nop
dec
inc
push
inc
mov
out
scas
adc
or
lock
in
lds
pop
xchg
lret
xor
mov
jne
dec
clc
scas
lds
jl
jmp
aam
mov
jge
call
cmp
inc
inc
jno
push
pop
lock
sub
fs
fisubrl
std
jne
test
cmp
mov
adc
sbb
dec
fwait
decl
clc
mov
jne
pop
in
lahf
mov
nop
icebp
xorb
xor
sbb
out
int
ss
sbb
aad
or
adc
iret
cmpb
scas
mov
cltd
jo
jne
jge
mov
cmp
stos
xchg
lds
lods
sub
dec
adc
dec
sti
inc
test
lock
call
scas
add
jnp
sbb
pop
cmp
and
loop
mov
loopne
xchg
jbe
sbb
insb
pop
xlat
fsts
rcrb
lods
inc
add
pop
outsb
outsl
dec
jl
enter
stos
mov
push
mov
push
lahf
pop
repnz
movsb
dec
rep
jns
std
mov
jp
and
xchg
inc
xlat
cmp
mov
ror
dec
hlt
adc
aam
jns
into
stos
rcrb
ds
ja
fwait
xchg
cli
outsl
push
sbb
popa
popf
adc
lret
iret
mov
inc
and
and
pop
sub
idivl
sub
or
push
xchg
jno
ljmp
notl
cld
aad
ja
mov
or
and
push
pop
inc
pop
sbb
xchg
xchg
int3
aaa
movsb
ja
xchg
or
mov
push
and
adc
xor
call
loopne
xor
adc
and
xor
xor
in
fwait
enter
sarb
dec
xor
rcr
jge
js
pop
testb
loopne
mov
sbb
sbb
dec
shlb
lret
jns
loopne
cmp
pop
sub
fisttps
repz
or
cwtl
adc
stos
jle
das
insb
lock
sar
pushf
or
pop
dec
push
pop
mov
int
xchg
out
ds
mov
ret
mov
test
sbb
inc
subb
movsb
xchg
xor
mov
dec
decl
adc
mov
ret
jecxz
fs
jmp
jne
xor
mov
imul
cmp
rolb
xlat
pop
pusha
pop
inc
cmpsl
sbbl
cld
add
jb
mov
in
sbb
mov
jmp
cmp
inc
push
push
out
insl
jne
iret
fisubs
mov
in
fptan
retw
loopne
sbb
or
jp
adc
xor
inc
pop
outsl
cmp
sub
sub
rorb
popf
pop
jns
fwait
dec
mov
xchg
adc
dec
outsl
movsb
nop
mov
insl
xchg
inc
ss
cltd
jecxz
cwtl
sbb
mov
xor
shll
add
jp
fstpt
out
add
or
xchg
mov
add
mov
das
cmp
and
nop
push
adc
repnz
aad
psrld
or
adc
aaa
mov
andl
ja
dec
movsl
movsl
flds
push
mov
loopne
icebp
loop
pop
push
shrb
dec
xchg
jo
js
fdiv
add
add
push
loopne
add
jecxz
push
decb
inc
das
iret
aam
adcb
dec
adc
xchg
add
inc
rcrl
repz
ret
lahf
push
jmp
sub
xchg
sub
movsb
out
push
sub
inc
iret
dec
mov
push
ja
sahf
daa
or
and
mov
out
push
or
les
inc
push
xchg
lahf
jle
jb
mov
adc
adc
ret
adc
rclb
cmp
loope
and
rolb
pushf
pop
cltd
ficoml
mov
xor
popf
ficoml
jmp
out
and
sbb
pop
lahf
sub
cmpb
mov
add
int
xorb
in
dec
scas
jbe
mov
adc
adc
adcb
or
insl
inc
sub
call
and
pop
xchg
loope
dec
mov
pusha
pop
sbb
mov
jg
sahf
push
lret
xor
mov
sub
push
scas
jp
sub
in
hlt
cmp
mov
outsb
sbb
pop
push
out
fstps
fidivl
mov
stc
sets
jo
dec
xchg
mov
fiadds
mov
pop
cwtl
inc
leave
fadds
dec
lods
scas
shlb
mov
repz
jl
jmp
lcall
or
mov
sbb
ss
cmp
and
ljmp
cmp
push
les
or
ljmp
push
sbb
push
sti
movl
jg
out
dec
push
sub
pop
int3
cmc
dec
cmp
enter
xlat
fwait
sbb
xchg
adc
mov
sbb
into
fdivl
push
add
rol
imul
sub
sbb
or
xor
stc
pusha
xor
xchg
lret
cmp
jge
or
inc
test
loopne
add
cmp
cmp
ds
scas
xor
or
push
sahf
or
stc
mov
jne
mov
movsb
lret
lds
insb
push
adc
lahf
sub
pop
jecxz
sub
aam
inc
clc
adc
in
in
sub
stos
movsl
dec
aam
dec
and
cltd
in
hlt
ljmp
inc
es
push
sub
ret
and
inc
mov
ret
outsl
cltd
ret
add
push
adc
xchg
mov
out
je
sub
arpl
and
jg
mov
and
push
das
mov
mov
popa
xor
xchg
je
inc
sub
fsubrl
pop
add
cmc
test
loopne
jle
adc
mov
xchg
jae
lcall
outsl
sbbb
stos
cmpsb
mov
scas
adc
add
adc
inc
mov
dec
out
loop
aaa
leave
fisttpl
dec
adc
int3
mov
dec
xor
lock
ds
sub
mov
push
jbe
repnz
daa
and
push
popa
pop
out
and
mov
hlt
add
push
aas
push
test
dec
dec
or
cmp
jne
xchg
dec
pushf
push
imul
test
cmp
lahf
iret
pushf
js
xor
xor
pop
fsubrp
pop
dec
push
fimull
sbb
or
sub
adc
jle
fildll
pop
adc
inc
ds
push
movsb
pop
mov
add
jnp
int3
stos
or
pop
inc
xchg
psllq
daa
mov
xlat
fwait
ss
push
repnz
push
sbb
mov
xchg
stc
mov
in
or
andb
push
popl
cmp
cmp
ja
mov
in
mov
mov
sub
jne
popf
mov
pop
and
out
or
cld
mov
nop
jg
pop
rcrl
xchg
fs
andl
mov
pusha
lret
ret
test
jae
sbb
xchg
iret
cld
xor
loope
fnstsw
sti
sub
adc
movsb
incl
jo
loop
icebp
xor
jae
lahf
mov
pop
cmp
mov
push
cmp
imul
pop
scas
xor
push
aam
int3
cmpsb
or
xor
xor
rcr
push
cmp
js
sub
scas
sub
pop
shl
sahf
rcrb
shrl
xor
out
and
jne
out
enter
outsb
iret
pop
push
push
popf
mov
mov
jp
push
sub
sbb
cmp
out
xor
jns
jmp
sub
fimull
mov
frstor
xor
int
or
cmp
xor
pushf
mov
xchg
and
loope
pop
in
lds
or
mov
pusha
push
inc
je
cmpsl
sbb
sbb
movsl
jae
sbb
xor
cli
mov
jnp
iret
sub
in
int3
mov
or
movsl
push
int3
les
add
sbb
xchg
jae
jge
jecxz
dec
je
or
xchg
jbe
sbb
daa
mov
dec
aad
sub
mov
xchg
inc
xlat
sub
xchg
inc
es
sbb
push
cltd
pop
or
out
xchg
pop
enter
ficoml
das
pusha
lcall
mov
bound
cli
push
xor
push
push
enter
xor
sbb
jne
shlb
jge
stc
lds
jnp
xor
jp
addr16
movsb
pop
int3
push
cwtl
lret
cmp
sbb
fidivs
insb
adc
pop
ret
inc
dec
mov
push
lock
xchg
dec
pop
mov
jl
and
adc
sbb
or
add
inc
and
icebp
shl
lods
dec
lock
jg
orb
inc
xchg
cld
cli
movsb
cmp
test
in
ljmp
pop
mov
cli
imul
nop
dec
jb
rolb
mov
xor
mov
lea
xchg
mov
push
dec
and
xlat
pop
fstpt
dec
sbb
dec
idivl
cmpsl
jbe
pushf
and
pop
xchg
rcrb
and
inc
mov
adcl
xor
push
movsl
loop
insl
jo
adc
lea
popa
push
mov
mov
mov
leave
hlt
lea
lods
fcoml
add
push
or
jle
cmp
call
insl
xor
jecxz
xor
adc
sbb
cmpl
lods
scas
idiv
add
push
sarl
gs
adc
mov
lahf
mov
ret
mov
mov
dec
aam
loop
inc
dec
pop
js
push
lods
jge
loopne
xor
mov
or
in
sbb
out
mov
sbb
loope
pop
and
dec
inc
sub
cli
pop
cmp
sbb
js
mov
mov
ret
jg
mov
mov
cmpl
xor
xorl
ljmp
out
les
divb
aaa
lahf
add
mov
sub
lods
out
test
cli
sbb
mov
mov
sbb
push
mov
or
xor
dec
fimull
int
dec
sub
dec
mov
out
std
iret
and
arpl
sub
scas
inc
cmp
mov
mov
iret
sbb
or
lret
push
mov
lahf
push
shll
mov
push
fmull
xor
jmp
daa
rorb
ret
jmp
ret
jg
data16
mov
test
ss
dec
jg
push
iret
arpl
les
test
in
fwait
dec
push
lods
sahf
sbb
in
fiaddl
scas
in
out
sbb
mov
lea
scas
sbb
in
inc
aaa
and
adc
cli
mov
xchg
and
xor
mov
and
sbb
inc
cmc
mov
lret
or
cmc
pop
inc
mov
mov
or
ljmp
push
mov
mov
movsl
cwtl
mov
lea
or
inc
pusha
addr16
xchg
movsl
jmp
stos
popf
scas
and
xchg
pop
inc
cmp
mov
dec
sbb
subl
adc
or
mov
jl
test
xchg
or
xor
iret
jne
dec
or
fidivrs
ja
mov
push
imul
cmpsb
sub
lcall
jmp
jne
inc
add
inc
cltd
cmp
call
int
or
jo
cli
push
cld
fstpt
push
lock
and
lret
lods
insl
pop
loop
fmull
sbb
dec
in
cs
sbb
cmpsb
daa
push
jmp
sub
lods
and
andb
pop
xor
xchg
sub
pushf
push
stc
insl
pop
adc
mov
gs
ret
sub
jnp
xchg
mov
jle
xchg
push
and
cmpsb
popf
push
xchg
jp
outsl
dec
mov
cwtl
in
push
out
sbb
push
mov
orb
sbb
inc
push
jecxz
ljmp
lods
xchg
mov
sub
pop
enter
xchg
xchg
scas
adc
adc
sti
pop
loop
adc
cmp
fcoms
icebp
jge
imul
mov
js
rcrb
outsl
add
inc
push
jnp
mov
aaa
ret
sub
dec
lret
pop
mov
pop
aaa
ret
popa
icebp
mov
inc
push
pop
idivl
sbb
mov
cmp
std
cmp
mov
movsl
cs
stc
shlb
stos
mov
mov
clc
jge
jns
mov
les
lods
fwait
sub
dec
lods
movsl
adc
das
outsb
mov
push
push
xor
lcall
jecxz
sbb
jmp
rolb
xor
add
sub
mov
and
lods
and
es
inc
inc
pop
or
mov
inc
xor
mov
iret
mov
xchg
mov
aaa
in
pop
xchg
push
dec
pop
aam
jne
pop
lret
inc
dec
mov
loope
rol
dec
push
sub
push
xchg
adc
ret
aas
or
xchg
pop
in
sahf
rorl
repz
sti
xchg
iret
in
rcrl
ljmp
fnsave
jb
push
aad
adc
out
sbb
imul
dec
testl
cmpsb
rolb
inc
icebp
ret
adc
inc
inc
insb
cmp
fidivl
push
xchg
ljmp
pop
mov
push
dec
pop
jg
test
cmc
jp
ret
adc
lea
add
mull
mov
idiv
daa
or
push
mov
imul
xor
jmp
xlat
xor
push
push
nop
into
fs
mov
jns
inc
loop
fldcw
sub
push
or
in
pop
decl
pslld
sbb
ja
mov
pop
xor
or
push
cwtl
pusha
pop
sub
add
mov
cmp
js
aam
mov
imulb
lcall
pop
pop
inc
mov
sub
in
dec
mov
aam
push
xchg
xorb
leave
push
icebp
sub
fstpt
arpl
inc
mov
inc
arpl
jmp
gs
addr16
aam
cwtl
dec
jmp
cmp
into
dec
leave
cwtl
sahf
stc
mov
and
jle
out
push
or
movsb
inc
mov
mov
xchg
pop
test
and
pop
addl
and
sub
and
lea
divb
fs
dec
or
jnp
jl
fiadds
test
mov
out
and
sbb
aam
jecxz
pop
rcrl
mov
fcmovb
ret
sti
jl
inc
inc
push
repnz
mov
cmp
loopne
scas
or
das
into
ds
mov
ljmp
icebp
mov
jmp
in
add
outsb
pop
loopne
repnz
shll
out
lods
mov
and
int3
sub
ret
repnz
push
leave
mov
test
or
or
add
jmp
scas
lret
dec
mov
mov
cltd
out
cmp
xchg
sbb
xor
jp
mov
add
bound
xor
dec
xor
in
or
divl
jle
xchg
mov
mov
push
pop
andl
lea
js
jge
orl
sbb
pop
lock
dec
fists
mov
out
or
icebp
loopne
popf
cmpsb
fnsave
push
jmp
xor
xchg
jno
adc
daa
xorl
stos
std
dec
inc
shll
stos
xchg
sbb
loope
adc
cmpsl
mov
repz
cmpsb
rorl
mov
xor
pop
mov
fildl
mov
xchg
jge
sbb
shrl
testb
stc
jbe
jbe
scas
movsl
cmpsl
ss
test
mov
fdivrl
ljmp
mov
movl
imul
mov
jb
movsb
int
mov
adc
fbld
mov
cmpsl
xor
add
outsb
dec
int3
imul
loope
or
push
and
and
mov
jnp
jo
jmp
out
add
adc
sqrtps
cmp
enter
sbb
add
push
add
push
repz
xor
or
in
js
pusha
int3
mov
test
arpl
aad
loop
fwait
lret
lods
xor
mov
jmp
shrl
jae
imul
addr16
repz
sbb
mov
iret
xor
xor
pop
insl
movsb
jno
shlb
js
push
call
pop
adc
xor
pop
ficompl
adcl
and
jle
mov
fwait
push
gs
mov
push
push
mov
iret
lahf
lret
or
imul
sarb
cmp
and
mov
arpl
mov
pop
xchg
mov
aas
pop
add
inc
sti
loopne
sahf
pop
push
shll
mov
int3
mov
cmovns
inc
or
int
mov
push
adc
pop
xchg
or
xchg
push
cmc
sti
and
shlb
int
xlat
inc
andl
cmp
pop
jle
mov
lret
stos
inc
inc
jno
push
mov
out
ret
int
out
arpl
test
mov
jge
leave
sub
add
jecxz
subl
push
imul
fisubrl
incb
cmpsl
andb
rolb
in
pop
push
cli
push
mov
sbb
test
jns
sbb
inc
mov
aam
sub
in
les
popf
in
xchg
sub
lret
cld
lret
ret
insb
pop
adc
rcll
inc
add
imul
add
mov
mov
add
or
adcb
mov
gs
daa
shrb
addl
aaa
inc
jo
hlt
or
ja
cmp
cld
fdivrl
arpl
sbb
adc
add
out
lcall
cmp
dec
insl
lods
decl
test
xchg
add
int3
dec
add
jne
aam
out
adc
fiaddl
mov
ja
int3
outsl
jmp
ja
in
cmp
cmp
adc
cmp
push
pushf
and
fists
in
pushf
mov
inc
xor
cwtl
jge
cmp
jl
je
xlat
inc
inc
shrb
orb
mov
lock
jecxz
mov
test
push
decl
jne
imul
popa
shlb
ds
lcall
sbb
inc
fisubl
mov
sbb
bound
mov
lret
pop
sbb
jb
cmp
inc
mov
divb
mov
pop
adc
cmp
add
jno
sarb
clc
mov
mov
pop
testl
sti
jo
movsl
mov
push
pop
xchg
subb
pop
push
fdivl
addl
fisttps
sub
stc
dec
dec
mov
sub
and
ljmp
testl
adc
ret
fldenv
pop
pop
inc
testl
aad
cmp
aas
lret
dec
cmp
std
call
cmp
or
push
in
sub
dec
push
mov
adcb
sar
daa
cli
dec
push
xor
jmp
cmpsb
xchg
xor
imul
jecxz
mov
push
ret
jge
inc
lock
in
sbb
ja
idivb
shl
jl
add
pop
push
xrelease
mov
inc
mov
mov
xchg
pop
or
insw
push
xor
je
outsl
out
push
cmp
out
xchg
or
jge
adc
or
test
in
cmpsb
xchg
cmpsl
mov
test
cmp
mov
notb
cmpsl
or
sti
inc
pop
cmp
pop
adc
sbb
xchg
imul
push
adc
dec
nop
jae
out
pop
sbb
jbe
mov
lods
adc
mov
mov
sbb
insb
dec
out
rclb
dec
mov
inc
fldlg2
std
adc
mov
push
fstp
sbb
cmpsb
pop
test
mov
jg
cld
insl
mov
or
es
inc
ret
adc
loopne
out
clc
loop
mov
dec
xor
mov
xor
repnz
out
das
mov
arpl
adc
dec
lods
movsl
sub
inc
stc
sbb
imul
mov
addl
push
hlt
fdivs
mov
imulb
cmp
cmp
jle
xor
inc
mov
int3
cli
mov
add
push
xorb
push
push
sbb
mov
push
fcoml
cld
cmpsl
dec
pop
xor
in
xor
inc
nop
aam
push
daa
dec
faddl
sbb
add
lret
hlt
ret
popf
imul
cmp
movsb
fs
xchg
or
sbb
inc
mov
cmp
fwait
int
dec
das
cld
adc
enter
gs
loop
jb
ja
push
loope
add
out
cmp
jl
sub
lock
push
push
dec
pop
dec
je
cmpsl
pushf
data16
outsb
insl
cmc
sarl
mov
mov
cwtl
int
inc
cs
inc
jno
in
mov
mov
or
jns
jnp
scas
add
sub
mov
icebp
cmp
lahf
ja
xchg
movsl
leave
pop
in
aam
cmpsb
out
jl
cli
and
rorl
push
pushf
repz
fdivrl
sbb
push
ficomps
mov
mov
pusha
aas
insb
pop
mov
dec
rorb
addr16
and
push
adc
xor
cwtl
push
cmpsb
xor
stos
lea
je
stc
dec
dec
fcmovne
mov
dec
mov
mov
mov
and
mov
cmpsb
pop
adc
out
xchg
mov
ja
sub
sbb
je
subl
out
cmp
es
aad
lock
je
es
lock
xchg
sahf
inc
xchg
inc
mov
outsb
mov
sub
addr16
push
push
mov
adc
xlat
mov
sbb
test
js
into
jb
push
in
jle
fwait
loop
mov
lret
out
js
stos
cmp
jle
fildll
ds
inc
xchg
jno
hlt
lods
pop
push
mov
sub
sub
or
into
jno
dec
mov
adc
popa
mov
ljmp
jno
mov
pop
adc
ljmp
mov
testl
in
fld1
mov
in
call
arpl
sbb
aam
or
nop
cmp
call
dec
ljmp
imul
in
jnp
mov
dec
outsb
mov
cli
cltd
xchg
mov
xchg
jne
in
push
dec
mov
leave
mov
add
rcr
lea
jle
jns
xchg
jle
jnp
dec
inc
lret
roll
pop
mov
push
clc
push
ljmp
push
add
xor
push
cmp
je
ret
fisttps
je
enter
int3
adc
add
mov
fs
scas
outsb
lret
and
xor
int
jmp
jmp
fwait
xchg
cs
adcl
push
enter
pop
mov
xchg
xchg
sti
lahf
mov
pusha
lret
call
out
sar
orb
or
push
mov
push
mov
js
sub
dec
and
pusha
lret
mov
js
mov
adc
xlat
cmpsb
xor
cmpsb
jnp
mov
pusha
cwtl
xor
cmp
orl
xor
pop
out
jecxz
imul
xchg
fldt
shl
mov
mov
ljmp
imul
enter
sti
rcrl
cltd
jp
cmpb
mov
loope
outsl
out
std
outsl
xor
mov
stc
jb
push
add
decb
mov
movsb
repnz
cmp
mov
mov
xchg
fcoml
cltd
adc
test
inc
addr16
cmp
push
mov
jne
inc
std
ret
mov
dec
cmp
inc
sbbl
sub
jl
aaa
xor
call
jb
cmpsl
in
fisttps
adc
adc
mov
notl
sti
lea
arpl
loop
out
sarl
cmp
adc
ds
cvtps2pi
jno
push
lods
push
clc
adc
js
dec
sahf
cmp
sbb
call
mov
and
inc
adc
push
notl
subl
mov
aam
inc
ret
mov
jbe
movsb
imul
imul
movsl
mov
pop
fisubrs
xor
decb
xchg
divl
in
push
pusha
fisubrs
adc
mov
pop
fwait
std
push
cmpl
cld
xchg
lcall
push
jns
repnz
adc
ds
or
dec
xchg
push
cld
fsubrs
adc
and
shrl
jle
xchg
jle
mov
test
lret
xchg
divb
add
or
and
xchg
cmp
ret
push
shll
ficompl
sub
ljmp
fs
jnp
and
fs
std
mov
nop
cmc
or
cmc
and
push
dec
dec
mov
not
out
gs
dec
mov
and
xchg
jl
je
jo
pop
push
test
adc
mov
insb
bound
rolb
jg
outsb
jb
arpl
ret
out
push
shlb
mov
mov
push
pushf
push
sbb
add
sti
pop
in
rorb
ret
outsl
daa
inc
aas
add
leave
insl
shrl
pop
mov
dec
scas
push
xchg
fildll
notb
cmp
mov
je
in
add
push
test
ficoms
pop
mov
mov
pop
pslld
je
jae
dec
push
cmp
aaa
rorb
ljmp
dec
cli
push
stc
test
dec
mov
xchg
fst
and
arpl
pop
ret
mov
sbb
test
cmp
sbb
inc
mov
dec
aaa
pushf
jp
mov
dec
push
loop
sbb
aad
sbb
movsl
out
lods
mov
push
lahf
push
fisubl
lret
std
cmpsb
sub
pop
scas
sub
mov
dec
lock
pop
sbb
call
pop
pop
dec
mov
movsl
cmpsb
das
push
sub
jne
cmp
pop
imul
in
mov
int
mov
cmc
mov
cmp
push
or
cmc
xor
mov
mov
jo
pop
mov
mov
and
pop
mov
sbb
or
cld
cmp
out
cmp
inc
in
das
out
inc
test
and
lods
call
lods
fisttpl
fwait
pop
pop
dec
jbe
cmp
fstps
sub
test
leave
xchg
xor
pop
or
cli
xor
jb
jae
call
mov
cmp
and
gs
mov
shl
hlt
aaa
adc
shl
xor
cmp
adc
jo
dec
and
adc
ljmp
fs
or
test
or
rcll
in
jp
fwait
inc
imul
xor
call
mov
aam
popf
inc
xlat
xor
adc
xchg
cmpsl
loopne
cmp
jl
sub
pop
js
out
mov
sbb
sbb
mov
mov
arpl
and
adc
test
mov
jne
ljmp
in
xchg
jo
hlt
dec
faddl
jb
cmp
shll
test
repz
push
in
mov
xor
lcall
lret
push
sbb
fldl
ret
mov
jne
sub
out
mov
sbb
out
xlat
jecxz
fdivs
dec
enter
dec
push
jp
fistl
adc
addr16
and
fisubrl
push
movsl
ljmp
xchg
pop
mov
daa
inc
mov
pusha
ret
or
push
xchg
push
adc
incl
popl
testl
or
xchg
mov
xchg
pop
lcall
cmpsb
pop
xchg
sub
mov
cmp
pop
xlat
jp
mov
sub
int
jb
jo
sbb
xchg
fidivrs
lock
jb
lea
dec
push
fistpl
aad
jmp
mov
push
and
pusha
sub
add
xor
cmc
popa
dec
cmp
fdivl
decl
stc
fstl
sbb
scas
xchg
sar
mov
bound
loope
je
or
shrb
jecxz
scas
je
adc
dec
addr16
nop
xchg
mov
push
inc
into
xchg
js
pop
mov
push
cld
dec
dec
jae
sahf
jle
xchg
add
or
jle
notl
mov
out
add
pusha
jge
mov
loop
mov
jle
int
jmp
jno
jmp
xchg
in
jecxz
dec
sti
and
mov
cmp
pop
mov
xchg
pop
addr16
ds
gs
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
or
clc
xchg
hlt
test
adc
jge
ljmp
mov
cmp
add
aam
add
xchg
mov
rorl
lds
test
dec
xchg
test
lock
cmpsb
dec
out
imul
dec
jo
ss
cld
dec
push
nop
outsl
hlt
xchg
sbb
rorb
sub
incl
fwait
cltd
cmp
incb
mov
lahf
sarl
jl
push
stos
ret
das
and
clc
mov
jne
jo
in
movsb
cli
mov
lea
cmpsb
rorb
adc
cmp
inc
cmp
jno
fsubrs
jno
ficomps
out
cs
add
js
mov
fldcw
pop
cmp
mov
xchg
imull
sub
mov
mov
les
fiaddl
xor
and
test
movsl
bound
mov
mov
rorb
jae
mov
outsl
out
lahf
push
into
cli
mov
adc
jnp
jecxz
fstp
pop
xlat
cmc
mov
out
es
cwtl
mov
pop
mov
mov
mov
imul
fimuls
stos
ds
pushf
jmp
nop
push
pop
dec
dec
or
inc
push
push
lahf
jb
rolb
es
arpl
pmulhw
ja
sbb
sahf
dec
adc
lret
movsl
and
xchg
jmp
inc
cwtl
mov
add
add
mov
pop
xor
dec
inc
divw
mov
and
cli
adc
sub
cld
xchg
sbb
xchg
lret
mov
pop
xchg
xor
lds
push
add
cmc
xchg
mov
fmuls
test
ja
jns
dec
or
rcrb
lret
sub
ljmp
or
xor
adc
imul
add
add
add
inc
xchg
push
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
xchg
mov
add
