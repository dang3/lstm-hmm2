push
mov
mov
dec
sub
sub
dec
sub
lea
mov
dec
dec
inc
dec
add
lea
mov
inc
sub
sub
call
call
call
dec
xor
lea
call
dec
dec
inc
inc
xor
lea
mov
dec
call
call
add
push
inc
call
dec
sub
call
lea
imul
dec
add
inc
inc
or
lea
movsbl
pop
dec
add
inc
add
inc
pop
or
lea
pop
mov
inc
add
inc
pop
inc
add
lea
mov
inc
dec
dec
dec
pop
xor
lea
pop
imul
inc
mov
add
add
call
add
add
lea
imul
ret
inc
dec
push
dec
add
push
xor
lea
push
movzbl
inc
push
dec
inc
push
dec
add
mov
lea
mov
push
sub
ret
push
inc
add
dec
or
lea
mov
dec
inc
dec
dec
add
lea
imul
dec
inc
dec
inc
xor
lea
movswl
dec
inc
add
inc
sub
lea
sub
sub
dec
inc
add
lea
mov
jmp
xor
mov
lea
mov
movzbl
sub
dec
add
dec
dec
and
add
lea
movzbl
mov
inc
xor
inc
add
inc
dec
or
lea
mov
dec
inc
inc
dec
add
lea
dec
jne
mov
mov
add
dec
pop
inc
dec
pop
add
lea
pop
mov
inc
inc
inc
dec
or
lea
movzwl
sub
inc
dec
add
ret
push
dec
or
lea
mov
inc
add
dec
dec
push
push
push
push
and
lea
imul
push
add
dec
sub
add
sub
lea
movswl
dec
add
mov
dec
push
dec
add
xor
lea
mov
push
add
inc
push
add
dec
pushl
or
call
lea
add
mov
inc
inc
inc
inc
or
lea
pop
ret
lea
mov
inc
inc
add
inc
dec
sub
mov
lea
mov
inc
sub
inc
inc
cmp
jb
or
xor
lea
imul
mov
sub
inc
mov
dec
inc
inc
xor
lea
mov
dec
add
inc
mov
add
add
cmp
jb
lea
mov
mov
inc
xor
inc
sub
xor
dec
and
pop
lea
imul
test
jbe
add
add
dec
dec
or
lea
mov
add
sub
dec
dec
or
lea
imul
add
sub
inc
inc
dec
sub
lea
mov
dec
dec
and
dec
inc
mov
xor
lea
movzbl
mov
sub
add
inc
inc
and
inc
sub
mov
lea
movsbl
mov
dec
inc
mov
inc
dec
mov
and
lea
inc
inc
add
dec
jne
dec
mov
and
lea
mov
inc
inc
dec
sub
sub
lea
imul
mov
add
dec
dec
dec
or
lea
imul
inc
mov
dec
dec
test
jbe
dec
xor
lea
mov
inc
sub
inc
inc
and
lea
mov
sub
inc
inc
sub
inc
and
lea
mov
sub
inc
add
and
dec
xor
mov
lea
mov
movzbl
dec
sub
add
add
dec
and
xor
lea
mov
mov
inc
movzbl
inc
sub
mov
add
jmp
sub
inc
dec
dec
and
lea
imul
inc
inc
dec
sub
xor
lea
movswl
pop
ret
push
dec
dec
dec
inc
and
lea
movzwl
inc
sub
add
dec
dec
and
lea
movsbl
inc
add
inc
dec
add
lea
mov
inc
sub
add
add
add
lea
imul
dec
push
inc
dec
push
inc
sub
push
lea
call
movswl
push
add
dec
pop
dec
inc
mov
and
lea
push
mov
sub
pop
sub
dec
and
inc
xor
cmp
je
lea
mov
sub
inc
add
dec
xor
int3
lea
mov
inc
sub
sub
dec
sub
lea
imul
inc
dec
inc
add
xor
lea
mov
inc
inc
add
add
sub
lea
mov
sub
ret
add
dec
pop
dec
ret
push
sub
push
lea
mov
push
inc
push
inc
push
dec
inc
push
and
lea
imul
add
dec
call
dec
push
add
or
lea
mov
movswl
mov
dec
add
mov
sub
sub
test
je
add
lea
mov
add
inc
inc
dec
add
jmp
lea
mov
mov
inc
dec
add
inc
xor
lea
mov
repnz
dec
add
add
inc
jmp
dec
and
lea
mov
add
inc
dec
add
add
lea
mov
dec
pop
pop
ret
push
inc
inc
inc
or
lea
movsbl
add
inc
inc
dec
xor
lea
mov
inc
add
dec
inc
or
lea
movswl
add
inc
sub
inc
and
lea
imul
dec
pop
ret
sub
inc
mov
dec
add
mov
xor
lea
mov
mov
dec
mov
inc
inc
xor
dec
or
mov
lea
movsbl
inc
sub
sub
dec
inc
or
lea
cmp
jb
mov
push
inc
inc
push
add
inc
push
xor
lea
mov
mov
inc
xor
dec
add
xor
sub
and
xor
lea
mov
push
dec
dec
xor
dec
inc
mov
add
lea
mov
dec
movzbl
dec
add
dec
or
add
lea
add
add
inc
movzbl
dec
inc
sub
jmp
daa
xor
icebp
test
jno
xchg
test
mov
mov
xor
je
push
das
jmp
add
cld
idivl
lods
shrb
iret
xchg
jmp
sub
arpl
mov
pop
call
out
les
and
popl
lods
inc
test
in
lret
and
data16
xor
dec
aas
loopne
loop
add
stos
jne
cli
push
mov
es
xchg
lret
gs
jo
dec
or
mov
sub
cmpsb
add
push
mull
lret
stc
push
and
fsts
cmpb
lcall
outsb
stos
daa
push
outsl
sahf
adc
cld
out
xor
mov
jo
or
cli
pop
popf
nop
popf
cli
pop
push
imul
jg
incb
jae
pushf
scas
fadd
int3
rcll
gs
out
es
or
shl
fisubs
jmp
sbb
fisubs
cmp
loope
icebp
xor
out
sbb
into
clc
outsl
xor
push
stc
inc
xor
inc
sbb
ljmp
jb
rolb
fwait
inc
fiadds
or
sub
inc
and
test
cmp
mov
movsl
ljmp
add
jnp
or
or
adc
xchg
outsb
push
cmpb
sub
xor
idivb
hlt
out
jecxz
add
addr16
or
mov
decb
iret
gs
pusha
repz
xorb
popf
insl
pop
aaa
inc
pop
xlat
ret
push
xchg
popa
int
cs
addr16
dec
add
clc
rcrl
test
aaa
test
fdivr
call
pop
loope
mov
jp
mov
mov
add
inc
ljmp
addr16
stos
pop
ljmp
xor
mov
ds
pop
cmpsl
xor
pusha
or
imul
xchg
add
test
out
imul
stos
rol
rorb
jbe
cmp
push
pop
inc
faddp
ficompl
xchg
inc
mov
imul
cs
pop
sub
sarl
je
sub
cs
sarb
lock
hlt
adc
sbb
mov
into
jge,pn
mov
mov
cmpb
rolb
jmp
jnp
xlat
jg
sbb
adc
jno
pop
ds
mov
sbb
and
fadd
mov
cmpsl
aas
jno
adc
mov
push
arpl
mov
jne
lret
pop
das
loopne
mov
adc
pop
push
add
scas
xchg
fmul
xchg
sub
or
mov
lock
in
inc
mov
mov
roll
in
push
inc
stos
xchg
stos
icebp
out
dec
xchg
dec
lcall
push
add
bound
mov
add
jo
pop
push
sbb
scas
movsl
sub
mov
adc
xchg
enter
mov
mov
push
loope
scas
add
lock
ret
addr16
xchg
cwtl
je
inc
jne
xchg
je
popf
sub
push
dec
lods
mov
lcall
sub
push
loopne
dec
mov
ret
push
cwtl
cmp
cmp
sub
or
xchg
mov
inc
and
sahf
stos
lahf
xor
sti
adc
gs
cmp
stos
mov
rclb
mov
push
iret
pushf
mov
shl
test
cmp
movsb
push
mov
je
ror
ja
bound
repnz
add
lock
mov
outsl
jb
add
mov
and
cmp
add
xchg
shlb
jmp
adc
fisubl
popa
pop
mov
mov
add
je
and
push
call
sbb
jno
shlb
mov
mov
dec
push
push
xor
dec
cltd
mov
sub
inc
xor
adc
fadds
cmp
aad
insl
dec
cmpsl
sub
inc
pop
loop
test
dec
outsb
jge
mov
sbb
push
mov
sub
rorb
arpl
mov
jge
or
inc
pop
pop
adcl
hlt
xor
out
test
and
and
leave
mov
lock
add
stos
or
imul
xor
pop
push
cwtl
mov
inc
adc
inc
scas
ds
mov
pop
sub
mov
in
aam
out
pushf
es
fildll
pop
outsb
movsl
dec
aaa
fstl
test
aam
test
dec
popa
fidivrl
les
aaa
negb
movsl
aaa
mov
imul
mov
pop
call
pop
lret
hlt
sub
shrl
jno
xor
sahf
loope
cmp
jmp
and
popa
loope
pop
sbb
arpl
jecxz
mov
daa
cwtl
bound
push
or
shrl
inc
cmpl
sbb
adc
add
adc
ja
fiadds
pop
and
ret
test
les
in
fldenv
mov
sar
outsb
lods
xchg
into
lea
jne
mov
inc
xor
insb
int
lcall
outsl
mov
or
cmpsl
jns
decb
insl
xchg
gs
adc
jb
mov
push
lods
scas
adc
mov
pcmpgtd
insb
dec
arpl
push
or
and
add
cmpl
jmp
mov
lock
mov
cmp
add
mov
push
out
mov
pop
mov
fstpl
lret
sbb
cmc
fimuls
sub
sub
ja
sahf
jb
sbb
loop
pop
call
rcl
fisubrl
add
insb
mov
dec
iret
ja
dec
std
mov
das
sub
mov
adc
mul
mov
pop
sbbb
inc
jae
sbb
add
cmpsl
jnp
cmc
cli
lahf
mov
inc
sub
mov
or
sub
or
add
sub
sbb
pop
inc
mov
testb
stc
lea
sub
xchg
or
bound
jnp
ret
bound
mov
dec
test
or
mov
or
add
aam
decl
pop
icebp
xor
add
data16
and
fstl
sarl
xor
scas
push
stos
fs
jmp
int3
addr16
adc
rcl
insl
mov
mov
insl
imul
pusha
mov
arpl
xchg
mov
lea
pop
sbb
or
push
mov
cmp
verw
or
cmp
jnp
fs
std
mov
push
andl
or
icebp
mov
mov
jne
jb
sbb
psubd
dec
jbe
fimuls
push
outsb
inc
jae
mov
ljmp
icebp
aaa
mov
cmp
les
ljmp
divl
stc
dec
test
pop
mov
adc
inc
mov
xchg
ret
test
hlt
xor
pop
ja
mov
movsb
ret
pushf
cmp
js
mov
aad
xor
sti
shll
push
mov
dec
out
rcl
movsb
call
fisubrs
arpl
orl
add
lcall
inc
out
jg
push
aaa
test
xor
or
xlat
sub
ja
faddl
sbb
nop
loop
inc
orb
jno
ds
in
orl
push
fimull
jae
xorb
jne
inc
adc
popa
faddp
shlb
bswap
add
stos
insl
lcall
out
outsl
adc
gs
inc
lods
pop
inc
dec
dec
push
lret
push
sbb
cmc
dec
mulb
ret
adc
subb
or
aam
je
andl
sti
sahf
enter
add
cs
push
adc
mov
xchg
and
jo
push
shlb
xor
sub
xor
std
or
mov
sbb
shl
stos
addr16
xchg
fs
jae
push
xor
adc
pop
aad
enter
dec
gs
jge
roll
mov
popa
sarl
push
stc
jmp
sbb
fwait
repz
adcl
jmp
daa
jnp
dec
imul
jne
jnp
faddl
cwtl
xchg
mov
sar
sarl
xchg
dec
movsb
cmpsb
cli
in
ja
fisubl
xchg
les
push
adc
sub
or
push
inc
sub
pop
das
dec
stc
xlat
fmull
test
push
or
int
cmp
dec
push
xchg
or
movsl
push
pop
dec
add
cmpsl
push
sbb
imul
ljmp
pop
cwtl
nop
test
repnz
lock
shll
pop
push
cmp
cmp
xor
sub
bound
add
fsubrs
or
push
adc
dec
nop
outsb
push
dec
xchg
cmp
je
cmpsl
lods
or
mov
ljmp
mov
mov
push
add
out
in
clc
orl
dec
addr16
imul
sub
clc
ret
inc
sub
cmp
ljmp
xchg
dec
mov
in
out
int3
inc
mov
mov
adc
dec
cmc
shrb
popa
dec
add
es
shlb
fwait
jb
icebp
dec
test
dec
imul
negb
negl
loopne
add
lods
outsb
clc
jl
inc
jecxz
fists
ret
dec
pop
es
xchg
lahf
loopne
sbb
aad
pop
ds
lret
xchg
pop
repnz
call
mov
lahf
test
mov
pushf
or
and
jnp
mov
lret
jecxz
or
into
leavew
cmc
aas
into
in
dec
popa
jl
je
out
sub
adc
jae
dec
movsb
or
adc
lock
push
inc
adc
inc
std
notl
sbbl
cltd
stos
imul
cmp
fldt
adc
and
enter
xlat
xchg
sarl
pop
lret
jp
cld
jbe
push
insl
jb
loope
cmp
mov
fs
roll
jno
mov
xchg
std
ret
mov
add
fsubrl
pop
cmp
cmc
jb
cli
lahf
int3
stc
mov
je
cltd
in
cmp
clc
pushf
pushf
mov
mov
add
sub
lcall
pop
mov
push
jle
pop
pop
out
out
daa
data16
pop
mov
mov
clc
imul
ljmp
out
pop
loope
movl
xchg
xor
push
je
and
out
call
inc
ret
xchg
arpl
out
add
jge
pop
xchg
gs
insb
fmuls
jb
aaa
aad
xlat
stos
mov
jb
jecxz
cmp
mov
in
push
leave
xor
mov
nop
lds
push
inc
jnp
ss
mov
cmp
cltd
dec
js
mov
ret
jle
nop
cmp
push
pop
movsl
add
inc
sbb
xchg
add
mov
mov
sub
dec
xlat
pop
mov
jl
jmp
mov
push
xor
or
out
call
lret
push
cmpsl
dec
jno
inc
and
sbb
stc
dec
jae
push
loopne
pop
pop
cmpsl
and
lret
jae
dec
mov
or
mov
pop
icebp
mov
xor
sub
dec
mov
add
daa
movsl
and
fmul
stos
pop
aam
fstpl
pop
push
popa
xor
inc
inc
adc
mov
clc
sub
les
cmp
push
pop
loopne
leave
jns
cmp
and
ror
test
lret
adc
test
cwtl
sub
pushl
push
jo
int
std
cli
imul
pop
adc
mov
cmp
lcall
nop
jae
jge
fnsave
fsubs
add
pop
jmp
fcmovbe
or
jb
xor
lret
add
xchg
test
in
lea
movsl
mov
jo
pushf
and
cli
sbb
int
arpl
and
or
pop
popa
fcmovu
cmpsl
jecxz
mov
dec
sub
ljmp
cwtl
sbb
adc
imul
jne
push
xor
xor
imul
inc
xchg
xor
iret
xorb
dec
in
pop
push
cli
daa
jecxz
outsb
xchg
popf
or
mov
mov
and
call
fldl
in
int
push
adc
adc
ret
adc
fld
jmp
inc
test
popa
jne
or
add
xor
sbb
leave
xor
pop
mov
xchg
out
push
push
inc
clc
pushl
mov
data16
rcl
movsb
xchg
or
cmp
outsb
popf
int3
add
test
mov
jnp
mov
jmp
xor
shr
cmp
fisubs
std
dec
jnp
icebp
push
push
mov
pop
clc
mov
pop
pop
enter
xchg
outsb
jne
adc
subl
pop
push
movsl
ret
fdivrl
clc
adc
cmc
fxch
iret
in
out
test
mov
pushf
into
fmull
cmpsb
movsb
out
xor
or
aam
popf
mov
imul
mov
mov
andl
xchg
xchg
and
pop
test
push
test
cmp
push
fidivs
sbb
add
and
lock
sub
es
mov
stos
cmpsl
adc
inc
stos
push
xor
jecxz
cmp
pop
and
cmc
test
test
rol
inc
or
pop
test
lret
push
ficoml
mov
push
mov
xchg
adc
imul
xlat
outsb
add
xor
xchg
inc
sub
test
xchg
lods
xchg
push
add
and
add
out
xchg
jge
push
mov
cmc
mov
ss
or
pop
cwtl
popa
int3
in
jge
cmp
dec
mov
jo
sahf
mov
pushf
outsb
in
jne
std
dec
test
outsl
mov
inc
pop
xchg
xor
add
sar
inc
rcl
adc
ss
mov
in
jb
mov
lods
icebp
fidivl
ficompl
push
inc
push
adc
push
or
pop
out
sbb
ds
xchg
test
test
jae
insb
push
iret
jmp
lods
hlt
mov
fistpll
enter
addr16
add
cld
inc
test
inc
cmp
pop
inc
mov
sbb
sub
jae
mov
cmp
jae
jp
push
mov
out
imul
sub
test
in
shlb
jmp
pusha
popf
arpl
mov
std
inc
in
pushf
sub
test
jg
xor
and
dec
or
jmp
jnp
and
or
hlt
insl
add
ret
imul
shll
dec
sub
mov
insl
xchg
rolb
adc
xor
loopne
lock
cs
ss
shrb
sahf
dec
xor
in
or
xor
test
lock
sub
or
imul
arpl
add
jne
push
lods
mov
push
scas
push
jns
orl
mov
addr16
xor
push
jecxz
pop
mov
rcrb
pop
push
lcall
sbb
pop
nop
shl
xchg
stos
and
add
pop
sub
cmp
sub
xor
aas
inc
add
mov
xchg
jno
and
adc
mov
xor
cmp
push
or
cltd
into
push
test
inc
push
cmpsl
or
push
mul
mov
ret
mov
mov
outsb
das
xor
mov
icebp
or
fsubrs
cmp
repz
and
stc
lock
and
loop
xorl
pusha
fs
std
adc
jbe
xchg
ret
jbe
and
insb
jnp
out
pop
lods
rcrl
cmpsl
outsl
xor
pop
cli
cs
into
jae
mov
fnsave
and
add
mul
imul
xchg
fidivrl
aaa
fisttpl
cmpsb
imul
xor
inc
inc
aam
ret
jge
xchg
in
mov
mov
mov
add
imul
loop
dec
sahf
pop
fmull
out
les
mov
sub
xor
scas
add
int3
inc
shrb
test
loope
shrb
inc
das
fimuls
test
ljmp
pop
and
or
fildll
test
sub
sbb
cmp
and
loope
xchg
pushf
push
aas
stos
xor
sub
jno
adc
pop
xchg
popf
in
daa
sbb
js
in
push
int3
ljmp
and
out
mov
cmp
test
xlat
mov
out
ror
cmp
aad
fwait
stos
ja
loop
mov
js
mov
adc
push
mov
pop
in
pop
shrb
mov
shrl
xchg
popf
test
adc
or
xchg
orl
fistps
xor
adc
cld
lea
cltd
and
pop
std
sbb
mov
mov
and
arpl
pop
jmp
and
jge,pt
imul
orb
repz
mov
int
es
xor
and
ud1
call
stos
mov
popaw
sbb
popa
imul
mov
inc
lods
fcoml
imul
cmpsl
insl
ss
xor
insl
out
loopne
adcl
out
fsubl
cmc
ds
stos
icebp
push
sbb
lods
pop
cmp
xchg
or
scas
lock
xchg
cmp
and
add
dec
cltd
cs
pop
ret
in
fistl
xchg
test
outsb
cmpb
adc
mov
aam
xchg
adc
or
push
pop
clc
jmp
sahf
add
cmp
push
js
mov
inc
or
mov
adc
imul
sbb
adc
xchg
and
sbb
clc
dec
mov
hlt
cs
or
inc
xchg
xchg
mov
or
dec
adc
gs
xchg
pop
xchg
push
pop
outsb
ret
mov
cmpsl
cld
shll
sarb
test
dec
js
adc
xchg
adcl
imul
test
jmp
mov
aad
xor
dec
popf
iret
mov
xchg
jns
lock
add
loope
cmpsb
xor
outsb
adc
lods
stos
pushf
push
insb
in
jae
adc
rorb
push
inc
mov
push
mov
cli
mov
or
dec
dec
push
popl
notb
cld
fcoml
cld
les
pop
jge
mov
xchg
enter
jae
in
insb
cld
xchg
cmc
arpl
xchg
mov
jo
inc
dec
out
out
pop
inc
cs
fistps
shr
fwait
adc
repnz
adc
mov
or
cmpsl
xchg
or
negb
lret
or
push
popa
sub
les
cltd
mov
rolb
sub
inc
pop
or
mov
fnstenv
pop
and
ja
sbb
pop
pop
int3
sbb
mov
sbb
xchg
xor
dec
clc
das
push
xor
ret
xchg
fisttpll
jmp
xor
movsl
aaa
aaa
fst
test
jl
xor
jns
mov
sbb
push
inc
and
push
sbb
inc
pop
jge
pop
mov
arpl
mov
mov
mov
jg
test
test
aaa
jmp
test
push
and
and
js
xor
push
xor
test
repnz
mov
test
hlt
push
push
ja
lea
subps
adc
cmp
mov
sbb
and
adc
xchg
push
mov
rcll
mov
iret
cld
cmp
jle
lahf
repnz
push
repz
leave
jecxz
ljmp
cmp
popa
jno
loope
dec
adc
ret
or
lret
incl
xchg
cmc
or
popf
adc
or
jb
jb
and
cmp
repnz
pop
cmpsb
into
lods
mov
stos
and
jmp
inc
xchg
pop
jecxz
lahf
inc
push
out
push
xchg
xor
leave
pop
sbb
adc
add
mov
push
pop
adc
dec
out
mov
movsl
sub
push
mov
cli
adc
fs
and
nop
jnp,pn
movsl
stos
xchg
fstps
daa
cmp
sub
mov
sarb
add
jecxz
cmp
not
pop
mov
call
fcmovu
mov
adc
das
sub
push
push
mov
addb
movsb
inc
jbe
mov
sub
or
ljmp
popf
cltd
flds
jns
in
cmp
in
push
inc
adc
inc
mov
aaa
mov
cmpsl
call
insb
inc
mov
inc
xor
jns
xchg
cmp
std
cmc
cmpsb
cmp
xor
ret
or
mov
and
leave
out
dec
xchg
das
int3
xchg
lea
shlb
stos
fdivl
ds
sbbl
sbb
sbb
adc
inc
mov
inc
xor
xchg
cmpsl
dec
cmpsb
loop
xchg
push
push
jp
dec
movsb
es
insl
jle
and
adc
shl
xlat
js
mov
in
adc
das
popf
jmp
aam
mov
jns
and
test
adc
stos
pop
and
loopne
pop
loope
fidivl
scas
lds
mov
cld
pop
lcall
jno
adc
mov
xchg
inc
cwtl
xchg
fucomip
js
imul
lahf
fsubrl
lret
inc
add
sbb
pop
js
sub
shll
jle
push
dec
lret
mov
in
jle
jno
lods
insl
push
test
repnz
jecxz
icebp
push
mov
mov
pop
stos
or
int
sbb
xchg
dec
sbb
xchg
cmp
mov
adc
jge
bound
sti
mov
negl
push
rcl
push
imul
or
mov
push
dec
push
sub
or
aad
scas
mov
push
xor
sbb
xchg
sbb
pop
and
cli
hlt
push
sbb
stos
aam
aad
mov
js
aaa
cmp
dec
addr16
xor
loop
in
adc
movsb
sahf
dec
or
mov
pushf
cld
lcall
pop
push
ds
dec
and
enter
scas
jno
xor
imul
in
test
adc
incl
inc
icebp
and
es
jo
ljmp
adc
cmp
adc
scas
js
inc
test
xchg
int3
push
bound
dec
pop
push
adc
dec
jge
mov
xor
aad
shll
outsb
aam
push
into
lcall
cmp
loopne
xchg
push
or
inc
and
add
fisubs
je
push
pusha
xchg
iret
jge
pop
push
test
mov
lret
push
and
sbb
int
jno
sbb
insb
cld
dec
repnz
stc
out
cmp
fmuls
or
dec
mov
add
jl
test
scas
adc
imul
push
mov
and
in
scas
xor
mov
imull
ljmp
sub
cmp
loop
pop
notl
dec
repnz
push
jae
adc
test
mov
xchg
jg
mov
or
pop
cld
sarl
mov
push
sub
stos
inc
dec
dec
xchg
pop
dec
sbb
mov
call
adc
imul
mov
cltd
sbb
adc
sbb
sbb
pop
aaa
mov
inc
fcoms
mov
popf
fs
push
out
in
and
lods
sub
push
daa
dec
adc
loopne
lea
sahf
mov
sti
dec
insl
inc
inc
adc
adc
sub
ret
int
or
outsl
rcll
lock
pop
jge
in
xchg
cld
add
mov
pop
jg
or
jns
xchg
dec
rolb
test
or
jns
cltd
cmp
stos
sub
pop
xlat
mov
mov
inc
int
cmp
inc
and
gs
pop
scas
data16
mov
out
sahf
dec
inc
daa
lods
adc
adc
lahf
and
in
xor
stos
xor
pusha
dec
inc
and
in
inc
fbld
cmpsl
aas
repnz
jnp
push
outsb
xlat
jecxz
pop
imul
mov
adc
inc
repz
stc
dec
push
jo
and
std
mov
mov
aad
pop
fisubs
aaa
lcall
imul
adc
mov
roll
mov
mov
inc
xorb
xchg
dec
mov
jge
xchg
jge
mov
cmp
mov
popa
jp
or
or
xor
pop
mov
clc
in
xchg
js
out
sub
ss
jg
mov
pop
es
inc
sbb
jp
cmp
ret
inc
jp
out
in
nop
js
inc
push
xor
xchg
dec
ss
fwait
pop
pop
ficoml
lea
cld
addr16
mov
xor
xor
jge
inc
fmuls
ret
mov
dec
xor
sub
dec
out
loopne
cwtl
mov
sbb
loop
fiaddl
mov
pop
fwait
pushl
mov
arpl
inc
dec
scas
pinsrw
jge
aam
mov
cli
lahf
xor
jl
icebp
in
sarb
jecxz
xor
push
sub
clc
sbb
add
in
mov
dec
pop
ficompl
dec
jbe
xchg
inc
into
or
or
mov
aam
lods
out
or
sub
fdivrp
adc
stc
push
test
inc
and
inc
sbbl
dec
enter
jmp
mov
jb
les
xchg
das
in
adc
call
outsl
fistpll
scas
xor
out
add
inc
xor
xlat
bound
aam
es
rcl
ja
sub
jae
pushl
push
out
daa
pusha
fxam
cltd
test
adc
cltd
push
jle
pop
and
dec
andl
imul
xchg
repz
movsl
cli
dec
sbb
cmp
adc
push
mov
sahf
mov
cmp
cs
aam
xchg
lds
lock
adc
sahf
push
add
jb
aaa
loopne
xor
std
push
test
pusha
or
xchg
rorb
jmp
outsl
mov
inc
and
jle
xchg
jns
push
lcall
loopne
das
out
dec
sub
fdiv
lods
inc
push
scas
push
cmp
mov
sub
mov
jnp
pushf
jmp
xor
pop
call
jb
mov
imul
mov
sbbl
xchg
dec
xchg
cmp
and
repnz
lret
rep
fdivl
mov
mov
or
and
xor
xor
jbe
lret
pop
negl
lds
ficompl
mov
fists
push
fnstcw
xor
mov
aam
jge
push
mov
outsl
xchg
pushf
ret
cmp
movsl
add
sbb
mov
sub
iret
adc
rcl
pop
aad
push
movd
cmpsl
or
hlt
sahf
enter
stos
inc
jmp
outsb
jns
cld
lea
rcrl
cmp
jb,pn
enter
enter
cld
sbb
mov
outsb
je
out
push
jle
pop
mov
pusha
or
xchg
sub
xor
fistl
push
mov
jb
or
outsb
inc
push
in
mov
and
in
or
sti
pusha
fistps
loopne
adc
test
decb
cmp
movsb
add
cwtl
scas
adc
push
pop
pop
cmpsl
bound
lods
or
stc
inc
js
ss
cmc
push
repz
mov
and
aaa
jbe
aad
add
in
not
adc
loope
sub
or
or
jmp
sub
es
test
ficompl
in
mov
outsb
sbb
xchg
test
mov
jb
int3
push
sarb
imul
adc
fstpl
sub
xchg
es
arpl
dec
jmp
and
xchg
loop
pop
ficomps
push
js
xorb
lods
cld
nop
mov
pop
ljmp
inc
les
lea
xlat
stc
jl
xchg
shlb
arpl
enter
fcompl
push
lret
push
and
enter
lahf
imulb
pop
sti
in
push
out
push
sbb
ret
jge
mov
ss
nop
adc
int
mov
sbb
add
or
mov
cmp
std
into
push
sbb
aas
push
and
mov
shll
leave
adc
lods
xor
inc
icebp
shr
mov
xchg
shl
test
mov
cltd
lahf
lcall
lods
xor
push
inc
lret
data16
cld
cmc
mov
lahf
fistpll
jp
sbb
stc
jns
daa
test
sub
inc
stc
pop
pop
imul
pop
int3
sahf
addr16
dec
sub
adc
sahf
add
mov
bnd
xor
hlt
ds
dec
fdiv
das
sub
and
cmc
bound
cmp
sub
insl
lret
mov
mul
jle
imul
and
or
adc
mov
sbb
dec
test
inc
add
xor
lret
push
push
scas
jecxz
mov
or
imul
cli
dec
pop
pop
xchg
std
pop
inc
hlt
lods
xlat
mov
pop
popf
add
sub
cld
mov
hlt
dec
mov
mov
xor
cmp
arpl
aaa
cmpsl
inc
lret
mov
andl
dec
out
push
aaa
mov
mov
sub
xor
dec
inc
imul
pop
push
cmp
addr16
shl
andb
test
nop
mov
popa
bound
sahf
inc
push
testl
aaa
sub
or
fcmovbe
fmul
jb
fcomp
lods
pop
lahf
faddl
sbb
jle
outsb
xchg
push
in
xchg
clc
xor
dec
adc
leave
mov
mov
inc
jg
xchg
sahf
js
mov
gs
add
popa
xchg
sub
loope
push
popa
push
jno
jp
pop
jbe
in
mov
shll
lods
out
xchg
movsl
mov
xor
insb
push
dec
pop
jle
pop
mov
push
fs
lock
mov
lret
xchg
inc
or
fnstcw
test
and
dec
ret
mov
push
or
addr16
mov
sbb
add
pop
mov
arpl
addr16
cmp
jg
clc
pushf
xchg
sbb
adc
push
call
or
cmp
dec
mov
sub
mov
outsl
insb
stos
inc
and
mov
sbb
iret
cli
adc
lods
xchg
lahf
fistl
mov
out
inc
mov
les
mov
hlt
aaa
outsb
ffree
sbb
fisttpl
mov
xor
jae
sbb
outsl
movsl
jp
pop
sbb
mov
cli
shll
pop
push
test
mov
loopne
loopne
stos
bound
adc
jg
ffreep
test
neg
inc
push
mov
inc
xchg
negl
imul
mov
jg
cmp
jge
sbb
jg
rcrb
xor
mov
jns
jecxz
fs
bound
jbe
test
sbb
imul
inc
xchg
jo
movsb
repz
xchg
sbbb
adc
mov
aad
jbe
in
cmpsb
dec
push
hlt
cmp
loop
in
in
push
mov
jp
mov
and
sub
sub
sahf
cmp
jecxz
fisubs
sub
and
dec
xchg
inc
loop
adc
dec
je
sbb
mov
add
imul
xor
mov
xchg
lock
inc
nop
mov
mov
sbb
and
ds
mov
jl
stc
mov
lret
sub
loop
js
nop
add
es
js
dec
enter
inc
movsl
xorl
xor
mov
jnp
inc
cld
pop
out
leave
dec
mov
imul
jge
mov
rorb
push
mov
inc
adc
sar
sub
ja
add
mov
cltd
mov
hlt
fists
xor
mov
test
addr16
or
mov
lahf
sbb
popf
nop
push
dec
pushf
inc
mov
add
ret
jb
push
filds
decl
mov
push
push
hlt
daa
mov
push
fmull
js
inc
inc
rcrb
addr16
dec
push
aad
or
xor
adc
mov
mov
push
clc
aas
ss
inc
xchg
push
cmp
test
sbb
fwait
sub
xor
ljmp
dec
sarb
jmp
int
xchg
xor
cmpsl
jmp
pop
push
out
sbb
arpl
sbb
dec
loope
imul
out
add
mov
mov
add
xchg
ljmp
addr16
add
in
adc
dec
pushf
cmpb
repz
je
loopne
and
scas
lock
cvtps2pd
or
lods
push
mov
pop
pusha
mov
pop
lcall
jp
sub
jle
movsb
mov
test
fimull
fistpll
jb
xchg
jge
push
sahf
dec
push
out
jb
faddl
test
dec
popf
pop
mov
test
lea
mov
dec
cmp
ja
xchg
je
arpl
iret
icebp
gs
mov
push
jne
push
lds
cmc
in
jbe
xor
or
fstpl
clc
cmp
sarb
pop
daa
js
mov
or
rclb
push
movsl
rclb
dec
std
fsubr
mov
adc
pop
jp
xlat
xchg
dec
insl
enter
test
jp
inc
push
daa
stos
xchg
cmp
push
mov
jmp
pop
int3
push
mov
dec
test
nop
xchg
out
mov
mov
fidivl
shlb
push
in
and
xor
dec
mov
dec
imul
dec
ss
xchg
fsubrl
or
ja
and
lcall
sub
xor
pop
push
or
es
jo
and
and
in
xor
mov
push
fisttpll
mov
sub
mov
ficoml
aaa
popa
lcall
mov
inc
pop
imul
cmp
xchg
jle
in
jns
xchg
mov
push
iret
cs
out
push
jne
sahf
nop
inc
lahf
push
ret
mov
push
inc
rorl
imul
mov
mov
icebp
or
xchg
adc
ret
fidivl
or
movsl
stos
jnp
or
clc
test
aaa
out
aad
jge
lahf
stos
or
sub
push
in
out
mov
outsl
pop
cmc
push
or
add
out
sub
out
sbb
mulb
xchg
cmp
loop
jmp
push
rcll
mov
insl
mov
ja
mov
fmuls
lds
leave
xor
mov
rolb
dec
sbb
sahf
xchg
sbb
sbb
shlb
inc
stos
cld
cs
xor
cltd
jp
xor
fwait
xchg
or
inc
jno
sarb
jb
push
out
inc
in
dec
out
pop
adc
cli
inc
or
jo
mov
fcmovu
fcmovne
jg
pop
sbb
push
mov
add
and
jle
cmp
push
scas
dec
lahf
call
dec
xchg
push
shll
dec
popa
aam
mov
or
mov
ret
adc
adc
imul
and
lret
fsubrl
mov
loopne
bound
idivb
hlt
mov
cltd
inc
adc
jmp
andl
adc
jbe
test
inc
xlat
imul
sub
jbe
nop
inc
fildl
imul
jnp
jb
mov
push
ret
mov
outsb
adc
js
sbb
cs
or
mov
scas
or
xor
sti
jl
pop
js
lret
sbbb
sarb
dec
jne
imul
jb
pop
inc
xor
add
push
adc
mov
enter
hlt
testb
hlt
sub
jge
mov
mov
mov
pusha
jecxz
rorl
xor
dec
xor
lea
lods
xchg
shll
inc
xor
out
ds
in
test
jl
jb
push
pop
enter
mov
cmpsl
sub
inc
xchg
inc
mov
shll
sbb
das
ja
cs
sti
fs
sti
xor
ret
movsl
inc
mov
ror
out
mov
rolb
jle
sub
cli
in
js
arpl
and
fstps
popa
mov
fidivl
lcall
fidivrl
push
pusha
sbb
add
aad
in
fsts
jne
jmp
loope
push
fstp
dec
pusha
out
inc
in
int3
and
xchg
out
lods
xor
cli
pop
shrb
cmp
mov
cltd
mov
inc
xor
xchg
inc
mov
xchg
mov
mov
ljmp
mov
stc
dec
gs
add
mov
les
add
adc
cmpsl
popf
dec
out
mov
push
push
mov
jl
cmc
mov
jl
jge
enter
push
popf
bound
xchg
dec
pop
mov
mov
cmp
scas
push
xor
mov
addr16
mov
push
mov
adc
bound
aad
sub
negl
jns
sub
mov
push
orl
addr16
mov
lcall
adc
sarb
adc
or
pop
cmpsl
jo
clc
int3
es
ret
pop
sbb
mov
in
push
inc
mov
push
lock
leave
mov
je
cmpsb
jecxz
mov
cmp
push
or
xchg
mov
adc
pop
sahf
jns
sbb
pushw
dec
mov
pop
aad
mov
push
stos
push
adc
xchg
lret
fmull
pusha
pop
test
inc
cld
scas
jne
mov
loopne
pop
enter
xor
add
push
ds
fwait
lret
xchg
mov
cwtl
mov
fs
daa
fwait
mov
ret
cmp
imul
popa
mov
lea
mov
mov
or
sbb
push
sub
jl
sbb
dec
in
hlt
int
dec
adc
out
test
stc
pop
lret
ja
stos
test
rorl
rolb
xchg
lret
hlt
or
cmp
add
clc
pop
mov
sub
out
xchg
fwait
ret
push
mov
popl
scas
cld
sub
mov
xor
add
and
arpl
inc
push
gs
shr
aam
cwtl
hlt
mov
test
mov
xchg
sbb
int3
ret
cwtl
sti
lods
adc
pop
jbe
lcall
mov
push
call
pop
cmc
xchg
idivb
enter
dec
push
fwait
sub
cli
inc
popf
sbb
hlt
mov
fsubs
fistl
imul
adc
pop
dec
and
push
dec
pop
adc
loopne
or
adc
xchg
mov
rorl
mov
in
sbb
mov
inc
mov
dec
sbbb
das
mov
sbb
xor
adc
outsb
out
and
xchg
add
inc
or
pop
and
mov
ret
adc
mov
push
cli
xlat
or
lahf
fldl
sarb
addr16
fimuls
std
inc
inc
mov
push
jg
mov
lret
mov
call
in
imul
repz
add
push
adc
sbb
nop
lock
dec
insb
stos
mov
add
stc
xchg
in
pushf
jns
rcl
or
xor
fnstsw
cmp
scas
and
mov
pop
icebp
push
ss
aas
gs
adc
gs
jno
lea
mull
mov
jp
clc
inc
dec
xor
cmpsb
out
xchg
push
push
jb
or
les
cmp
pop
lret
mulb
push
xchg
popf
mov
movsl
test
lret
insl
les
call
dec
or
mov
out
inc
pop
add
lock
stc
js
push
dec
mov
aas
in
loopne
add
arpl
xor
push
fwait
pop
shlb
sbb
push
jge
fidivrl
loope
lret
int
mov
test
adc
cs
out
mov
sti
jge
xchg
lods
movsb
add
imul
in
and
cltd
es
jo
mov
xchg
and
mov
imul
cltd
mov
sti
stos
cmp
mov
imul
pop
fs
mov
ja
cwtl
fucomip
inc
mov
call
push
dec
std
inc
leave
cmp
push
lahf
pop
sub
js
sbb
faddl
inc
pop
cmp
mov
mov
jge
jmp
jg
and
loope
leave
inc
xchg
xor
jns
jl
gs
test
iret
cmp
jge
rorb
xor
fisubrl
fnstcw
add
sbb
rolb
xor
xor
push
inc
sub
pop
fidivl
cltd
adcl
cmpsl
rol
not
cmp
out
dec
sub
cmc
imul
mov
jo
jo
pop
pop
sub
xchg
in
cmp
inc
push
cmp
clc
in
aad
mov
xchg
iret
xchg
negl
lods
int3
pop
inc
in
and
dec
jb
mov
cmc
dec
jmp
mov
movsl
cs
sub
push
sti
fcompl
push
pop
lods
mov
jns
movsl
adc
ficompl
jbe
and
dec
scas
adc
adc
pop
dec
aas
dec
rorb
out
xchg
hlt
and
fsts
aad
xchg
nop
pop
in
jno
dec
add
xor
jg
cli
dec
push
xchg
pop
push
mov
gs
xchg
push
cmpsl
pop
loope
push
push
call
mov
negl
lahf
adc
mov
pushf
push
inc
adc
cmpsb
lret
jle
stos
mov
movq
inc
or
js
pop
shll
fisttpl
adc
dec
test
out
adc
repz
imul
xchg
xchg
cmc
adc
cs
fwait
xor
jmp
inc
popa
cmc
subl
mull
mov
and
and
popa
dec
inc
cmpsl
dec
jl
xchg
dec
pop
and
mov
movsl
push
in
test
mull
out
add
andb
cmp
clc
pop
imul
mov
dec
insb
mov
into
inc
mov
push
pop
cmp
or
push
orl
aam
dec
sti
mov
jbe
xorb
loop
int3
mov
inc
jecxz
xchg
les
dec
xchg
fmull
lods
mov
dec
cli
dec
mov
cli
pop
jns
das
ss
enter
jl
fmull
inc
xchg
notb
push
cmp
dec
xchg
lds
lods
push
cmp
mov
mov
inc
popf
aas
sub
scas
icebp
xor
fadds
ret
pop
pop
sbb
sbb
lock
xchg
xor
sahf
ja
mov
out
icebp
add
ret
mov
add
addb
movsb
fldl
addr16
inc
push
js
jmp
ljmp
test
lea
cmp
mov
or
inc
mov
adc
and
xchg
fbstp
cmp
xchg
mov
scas
and
out
scas
scas
xlat
fisttpl
pop
inc
dec
loop
hlt
or
outsb
dec
jb
js
adc
cmp
in
lds
jno
outsb
pusha
ss
jne
mov
lock
jecxz
pop
adc
les
xchg
frstor
inc
cs
gs
jae
push
adc
and
lret
xchg
dec
pop
in
popa
pushf
flds
jns
pop
lds
cmp
jecxz
dec
xchg
in
xchg
es
pop
cmp
lea
jge
mov
cs
shrl
movsb
mov
pop
lods
std
xchg
rcrb
xchg
adc
and
aad
mov
jle
push
cmp
fdivrl
sbbl
sahf
mov
sbb
scas
in
stc
test
stc
jbe
clc
test
xchg
jmp
outsb
jne
fcmovb
sti
stc
push
lea
cmp
lret
data16
dec
pop
scas
adc
sbb
xchg
jecxz
lcall
cltd
movsb
imul
shrb
int
or
jmp
aam
js
pop
pop
aaa
xchg
faddl
push
mov
aaa
jge
negb
je
xor
xchg
xchg
mov
lock
dec
add
je
mov
xlat
popa
scas
mov
xchg
pop
cmpsl
leave
adc
sti
inc
mov
insb
or
mov
sti
and
or
aaa
jns
add
mov
cltd
movsl
or
xchg
sbb
and
ret
xchg
rorb
aam
adc
std
cs
inc
cmpsl
pop
stos
mov
sbb
movsl
jne
dec
addr16
clc
jne
mov
cmpsb
and
and
cs
mov
imul
jbe
mov
out
cmp
adc
repnz
xor
add
enter
imul
xor
cmp
filds
mov
cmp
lret
adc
sub
out
add
stos
xchg
jo
aad
xchg
dec
xchg
test
xchg
rcl
incb
jecxz
sarl
fwait
adc
push
and
fsubrs
rcrl
and
int3
sub
sub
out
ja
inc
iret
in
xor
xchg
push
dec
pushf
sub
ja
and
xchg
leave
cmp
jb
pop
test
mov
xchg
push
cmp
in
mov
rcl
sbb
push
or
inc
mov
xorl
or
adc
cmpsl
and
imull
insl
addr16
repnz
mov
push
cld
adc
movsb
jp
out
jb
pop
je
xor
aad
xchg
mov
jl
daa
push
aad
push
sub
push
adcl
lahf
xchg
push
fcomi
out
jmp
imul
std
popf
jge
dec
jmp
sbb
inc
out
aas
cmp
inc
outsl
pop
inc
add
in
xchg
sti
inc
cli
ret
test
push
inc
shrb
mov
sbb
jl
pop
scas
xchg
mov
and
inc
jne
jbe
push
or
cmp
jge
test
lahf
stos
sahf
and
inc
push
rolb
insb
mov
fcoms
filds
sbb
jae
push
pushf
shl
mov
sbb
lock
jnp
cmp
stc
mov
cmpsl
cmp
pusha
or
pushf
sbb
xchg
pop
xorl
scas
jmp
xorl
mov
jbe
lret
cld
das
add
mov
hlt
add
and
cmp
cmpsl
mov
mov
leave
dec
div
loop
jg
cmp
pop
hlt
mov
scas
sahf
sub
dec
aad
and
arpl
and
stos
cli
add
addb
cmp
dec
std
xchg
or
lods
or
push
insl
and
jne
fldenv
add
repz
mov
mulb
js
int3
je
ljmp
movsl
mov
cmp
xchg
test
inc
loop
mov
and
pop
enter
dec
aas
sub
ds
test
sbb
push
jae
lret
mov
pop
sub
dec
push
call
push
jl
and
mov
insb
add
push
shlb
decl
imul
cmp
or
idivl
es
std
xor
xor
cwtl
stos
cltd
mov
out
call
inc
mov
lds
cmp
gs
fdivrl
dec
push
pop
lods
sbb
and
mov
mov
mov
push
adc
dec
ret
rorl
add
xchg
sbb
inc
stos
mov
sarb
popa
fisubrs
in
pop
aad
mov
fnstsw
push
fists
mov
js
pop
not
cmpsl
lock
jo
dec
es
xlat
inc
aaa
sub
int3
sub
in
dec
insb
bound
xor
arpl
cli
pop
shlb
js
sub
cld
cmp
ret
jo
pop
scas
fisttpl
xor
or
sbb
pushf
jb
iret
inc
jae
lahf
pop
fmulp
std
jo
and
ficoms
pop
shrb
cmp
std
pusha
mov
out
jb
test
dec
loopne
or
or
xchg
pop
out
push
pop
adc
or
or
movsl
int
dec
out
or
sbb
mov
adc
xchg
push
in
mov
stos
mov
jbe
fsubp
int3
mov
fsubrl
push
lea
xor
or
jg
fdivl
or
je
dec
sub
jmp
cwtl
stos
aad
bound
xor
jne
xor
imul
mov
xchg
xor
and
and
pop
popf
rcrb
ret
xchg
jb
dec
add
mov
lods
cmp
sbb
mov
mov
repnz
mov
out
xchg
lods
inc
or
lock
mov
es
leave
or
inc
xchg
icebp
sahf
or
addr16
and
push
sub
mov
sbb
pop
scas
mov
pop
sahf
in
pop
mov
stos
sub
mov
lds
xchg
loopne
js
scas
cli
sub
lds
jb
xor
fninit
sti
inc
sub
out
xchg
xchg
shll
pop
push
add
sub
dec
xchg
inc
in
icebp
orb
sub
test
mov
stc
add
mov
push
mov
fsub
xor
push
mov
out
or
pushf
loop
xor
mov
cmpsb
xchg
cmpsl
mov
xlat
idivl
jno
xchg
pop
push
sub
inc
dec
or
mov
scas
negl
shr
fnstsw
jecxz
add
jns
jns
inc
push
lods
sti
jne
mov
scas
sub
sub
jmp
insl
shlb
or
lods
jl
test
pop
call
pop
fstps
dec
ljmp
test
or
stc
lahf
enter
int
ds
das
mov
out
outsb
jecxz
dec
pop
push
mov
je
cmp
mov
pop
scas
xchg
mov
mov
dec
mov
les
push
dec
jno
xor
inc
cmp
cwtl
dec
gs
or
xorl
enter
xchg
lock
sarb
adc
inc
push
icebp
push
mov
out
jecxz
sub
sbb
xor
sub
lret
mov
pop
mov
xchg
jbe
popa
out
or
mov
jns
and
dec
mov
cmpl
in
dec
jns
scas
insb
mov
sbb
pop
lret
gs
rorl
cmp
xor
mov
pop
xchg
mov
sub
pop
stc
xchg
xchg
jns
repz
xlat
popa
js
add
rorb
jmp
sub
cli
test
cmp
in
ljmp
fcoms
imul
lods
push
sub
mov
movsb
jl
mov
jmp
mov
xchg
push
lcall
int3
xor
inc
push
insl
ja
ret
lods
lahf
pop
cs
pop
push
shrd
jle
inc
sbb
adcb
push
or
es
movb
xchg
or
cmp
sbb
add
hlt
dec
xchg
lds
in
ja
int3
xchg
pushf
insb
cmp
push
incb
popf
imul
hlt
shlb
xchg
movsb
xchg
mov
sbb
xor
fistpll
add
les
repnz
sub
xchg
inc
lcall
punpckhwd
inc
lods
mov
stos
insb
jp
cmc
xor
sub
into
inc
cli
in
stc
cwtl
sub
xor
and
sbb
scas
inc
cmp
iret
test
xor
movsl
push
loope
push
ja
data16
mov
sbb
push
sti
arpl
subb
mov
pslld
das
jle
sbb
call
jp
mov
pop
and
iret
insb
inc
xor
lcall
adc
loopne
jg
icebp
inc
xor
in
fisubrs
call
xor
loope
jle
mov
xlat
cmp
xchg
cmp
movsb
popa
test
scas
push
cli
jle
sbb
arpl
sti
dec
push
mov
not
call
xchg
jne
dec
pop
pop
jmp
bound
inc
inc
xor
mov
mov
aad
out
lcall
insb
push
jo
lea
lahf
jmp
ja
pushf
jns
jns
cmp
in
test
lods
and
fmulp
adcb
fisttpl
es
nop
inc
cmp
iret
adc
jo
test
fisttpll
jmp
aad
cmp
out
inc
xchg
jmp
jmp
mov
jecxz
push
sqrtps
lds
pusha
push
adc
xchg
add
testl
cltd
popa
test
xchg
rcrl
xor
lcall
inc
stc
stos
lock
dec
or
or
mov
inc
sti
xlat
fsubr
add
lret
movsl
or
sub
xchg
push
js
jae
add
in
into
mov
cmpl
idivl
and
out
dec
xchg
inc
sarb
out
add
mov
cmp
shll
xor
lahf
imul
mov
rclb
jl
fcomps
jl
fdivrl
stos
inc
dec
sti
scas
xchg
rcll
aad
adc
movb
loop
pushf
movb
cmp
sbb
mov
sub
xlat
roll
inc
adc
cmc
sub
aam
xor
mov
sti
pop
inc
sti
js
mov
push
mov
sub
cmp
pop
and
in
dec
and
cwtl
dec
push
push
lsl
jb
sar
popf
aas
adc
cmp
adc
jae
cmc
shr
mov
rorl
data16
test
cli
and
inc
jg
xor
cmp
fnstcw
mov
jae
push
and
push
lret
sbb
jae
inc
mov
aas
mov
mov
inc
dec
int
add
aad
sbb
pop
scas
mov
xchg
sti
les
inc
or
sub
push
sub
pop
adc
xor
jmp
fnsave
lret
dec
std
in
stos
push
sub
cmp
push
mov
sbb
loop
mov
inc
iret
sub
lret
xchg
dec
adc
dec
mov
and
push
pop
int
jl
mov
fisubrl
cmp
mov
push
jnp
inc
iret
push
sbb
mov
mov
in
mov
lcall
mov
rcrb
fidivrs
mov
xchg
pop
es
adc
adc
pop
mov
xorb
xchg
cwtl
jle
and
xlat
into
call
aaa
inc
adc
push
jo
in
fisttps
push
lcall
jmp
jle
push
cld
jb
xchg
aam
jb
push
in
stc
cmpsl
add
and
clc
pop
fwait
mov
pusha
fwait
xchg
adc
hlt
pop
cmp
out
sub
inc
and
repnz
fbstp
push
andl
add
das
fdecstp
sbb
pop
pop
sub
push
dec
jb
stc
nop
xor
test
and
mov
and
lret
xorb
jns
push
ret
sbb
arpl
push
xor
mov
aaa
sub
jae
fwait
rclb
cltd
testb
movsl
nop
dec
scas
insb
pop
adc
arpl
jp
adc
push
pop
xchg
jo
jns
ret
or
clts
das
and
aad
stos
mov
jg
adc
adc
aaa
fsubrl
jle
jg
out
fmuls
and
imul
fisttps
lret
lods
jo
sub
arpl
cltd
push
xor
sahf
popl
es
int3
pop
mov
lahf
sub
xlat
pushf
jge
js
in
jnp
shlb
test
mov
sarb
addr16
xor
jne
int
mov
data16
mov
das
popf
out
inc
cmp
loop
xor
and
inc
and
fstpt
sub
ret
mov
mov
mov
cmpsb
movsl
mov
xchg
adc
cltd
dec
cmp
aaa
hlt
stos
stos
dec
jns
xchg
imul
mov
loop
fdiv
stos
jl
cwtl
push
push
jne
icebp
out
ror
insl
les
mov
ficoml
test
addb
add
push
aad
loope
cmp
aam
je
cmp
xchg
cmp
sub
push
push
push
lock
shll
flds
jno
ss
idivb
cmp
lret
jne
adc
dec
inc
mov
ja
add
bound
insl
adc
enter
mov
mov
inc
xor
cmp
mov
hlt
and
mov
dec
adc
inc
or
mov
inc
xchg
loopne
aam
jp
repnz
mov
push
lahf
fcoms
in
or
and
clc
es
pop
mov
sbb
aad
leave
stc
cmp
sbb
push
test
push
jmp
dec
add
fisubl
sti
inc
dec
sbb
inc
scas
cli
mov
mov
lods
les
or
sbb
xor
add
out
sbb
inc
call
sbb
pop
xor
pop
mov
test
leave
mov
mov
dec
xor
test
add
push
clc
push
js
and
insb
stos
cli
jg
jle
xchg
stc
xlat
adc
adc
mov
fisttpl
mov
and
xchg
sbb
dec
xchg
dec
les
or
mov
pop
mov
mov
mov
cmc
add
fistps
lcall
leave
xchg
test
mov
dec
enter
cltd
pop
push
pop
push
xchg
call
fstpt
lret
lds
push
clc
push
xor
adc
mov
mov
jbe
mov
inc
push
mov
dec
push
mov
mov
sti
fistl
ret
adc
jne
jae
or
pushl
inc
addr16
pop
xlat
test
push
and
inc
cs
scas
cmpl
adc
movsb
js
or
pop
xchg
fstpl
mov
ret
dec
and
scas
loop
mov
stos
mov
mov
jle
jnp
stc
inc
cmp
jbe
jl
pusha
inc
lahf
cltd
mov
sbb
mov
test
sub
lds
xor
cmc
cmp
scas
cmp
add
mov
stc
push
adc
mov
mov
lret
insl
stos
push
mov
fidivrs
fcomps
gs
push
inc
and
jo
lock
pop
ljmp
cmp
pop
test
imul
inc
dec
stos
xor
fistpll
push
sub
inc
in
insb
call
jae
or
sar
int
mov
stos
push
and
sbb
sbb
mov
sbb
jl
dec
bound
insl
sahf
shlb
jge
test
sbb
incl
mov
adc
push
add
inc
adc
out
test
inc
mov
sahf
out
enter
int
adc
xor
es
insl
adc
mov
xchg
pop
xchg
lods
shlb
sbb
mov
pop
in
dec
and
sbb
and
pop
fwait
lds
test
scas
rcr
enter
test
fimuls
add
xorl
ja
shlb
mov
mov
enter
sbb
les
mov
mov
in
or
imul
inc
mulb
sub
rcll
pop
icebp
cmp
popa
or
fnstcw
int
cli
adc
cmp
push
jo
popf
test
data16
mov
jbe
scas
jae
dec
adcb
in
jecxz
add
or
jnp
sub
jp
sub
leave
daa
js
mov
add
dec
sbb
test
dec
stc
insl
ds
jbe
sahf
lock
push
repnz
push
xchg
push
sub
test
or
adc
orl
icebp
cmpsb
xchg
add
sub
mov
dec
rol
leave
or
stc
push
or
mov
inc
dec
xor
xchg
mov
or
bound
cmpl
out
pop
and
pop
adc
movsb
jecxz
or
xchg
push
rorl
dec
mov
outsl
and
mov
fcompl
push
aad
outsl
pop
push
and
cmp
xchg
fucomp
jbe
lods
pop
arpl
dec
iret
dec
dec
mov
sar
jb
clc
pop
mov
lods
es
aas
add
outsl
xor
int
xchg
rcrl
jle
push
fs
xor
jno
or
aas
add
dec
cltd
ret
pop
loop
cmpl
inc
mov
fsts
xchg
les
cld
lret
ds
nop
push
popf
jge
push
xchg
imul
hlt
push
in
aam
inc
cli
mov
xor
cmp
xchg
jge
scas
adc
adc
inc
inc
xchg
mov
jb
sti
xchg
lret
lea
jnp
or
jmp
mov
cltd
cmp
jb
add
cmp
dec
lock
ret
pop
mov
dec
jae
xor
pop
xchg
jne
mov
mov
jo
dec
frstor
lds
nop
xor
lds
les
xchg
xor
jnp
mov
mov
xchg
mov
push
arpl
cmpsl
xor
mov
add
test
xor
aam
add
rcrl
dec
pop
inc
pop
mov
add
hlt
and
mov
in
pushl
outsl
repz
outsl
lea
push
adc
jbe
or
lahf
daa
popf
mov
cwtl
adc
in
sarb
in
bound
inc
cld
insl
cmc
fstl
icebp
imul
dec
test
inc
pop
sbb
adc
pusha
jmp
pop
xchg
sub
insb
mov
roll
jae
stc
sti
jmp
aaa
pop
dec
call
mov
mov
jg
cmp
sbb
lock
push
ss
stc
cli
inc
jle
and
das
jne
imul
or
mov
pop
inc
pop
mov
cmc
mov
jns
mov
push
add
adc
add
je
loop
and
ret
iret
in
addr16
js
xchg
out
imul
xchg
cwtl
lcall
push
ror
sbb
pop
adc
cmp
orb
push
push
cmp
dec
sbb
outsb
jecxz
xorb
les
jbe
and
mov
jge
mul
pop
mov
mov
lods
mov
movsb
cmp
add
pop
pop
fbstp
arpl
int3
pop
or
pop
jno
mov
test
xchg
mov
cld
fdivl
das
and
adc
mul
andl
sub
test
idivb
pop
sub
push
sub
mov
or
jecxz
dec
sub
sahf
lds
xchg
ss
cli
pushf
and
mov
stc
insb
jl
mov
mov
pop
push
mov
shll
mov
cltd
pop
in
and
or
movsl
push
pop
pop
or
cs
cld
cmp
mov
push
mov
inc
popf
outsb
outsb
imul
cli
push
push
fstpl
adc
inc
nop
test
pop
adc
dec
sub
mov
inc
jp
inc
daa
aad
adc
rcrb
int3
lock
sbb
mov
es
imul
sub
cmp
imul
pop
dec
sub
mov
xchg
rol
notb
arpl
fdivl
mov
xchg
shrl
jae
icebp
pop
imul
jg
add
lret
data16
pop
xchg
cmc
lods
mov
or
mov
mov
mov
pop
sub
mov
data16
xchg
rcrb
loope
xchg
decb
or
clc
cld
daa
dec
fimull
shll
je
cmp
xchg
add
mov
and
fidivrl
aad
dec
jp
clc
mov
push
arpl
mov
add
mov
ja
inc
daa
or
mov
xchg
test
bound
pop
or
ror
xchg
pop
push
sub
cmc
dec
repnz
outsb
sbb
in
and
cmp
movsl
pop
or
pushl
pop
jnp
and
lea
adc
mov
dec
or
jo
orl
les
and
aas
lcall
ret
mov
sbb
dec
test
popa
jmp
shrb
subl
inc
fdivrs
sub
jns
xchg
add
arpl
pop
mov
popf
pusha
sahf
cmpsl
xchg
int3
sbb
fbstp
ds
xor
es
js
ret
shl
les
out
inc
cwtl
pop
test
cmpsb
out
inc
pushf
xchg
cmp
sub
movsl
repz
repz
std
push
cmp
xor
pop
pop
sub
push
push
ja
hlt
dec
jb
inc
pop
stos
sub
pop
push
gs
jecxz
loopne
mov
jmp
jmp
lods
inc
sbb
push
pop
mov
jge
out
jp
xchg
ja
sbb
pop
and
vsqrtsd
decb
pop
je
jno
fdivs
inc
sbb
test
add
mov
dec
bound
or
test
cmpsb
jno
xchg
sti
pop
fldl
mov
sbb
jecxz
fmull
repnz
push
call
lahf
sbb
xchg
cmp
xchg
mov
mov
cwtl
fsub
pop
or
adc
sbb
cmc
nop
add
cmp
add
xor
inc
push
inc
push
xchg
mov
test
fnsave
mov
lret
or
cltd
and
aas
cmp
mov
mov
out
pop
sahf
mov
jecxz
mov
fwait
cmp
insb
in
into
les
pop
xor
pop
jg
addl
popa
add
outsb
cmp
sbb
pop
test
mov
testl
mov
mov
scas
adc
ds
pop
pop
xor
test
pop
push
mov
repnz
inc
adc
inc
sbb
loope
inc
sub
mov
add
fadd
cmp
fisubs
dec
pop
jne
lea
mov
xor
fcmovnb
sti
ret
lcall
jne
loop
pop
inc
out
sbb
rcl
mov
fdivs
movsb
xor
inc
arpl
dec
sbb
jp
pop
scas
pop
repnz
loop
inc
je
mov
mov
sahf
or
aad
scas
mov
and
mov
push
sub
mov
jmp
mov
cmp
jmp
fcoms
popa
int3
xchg
fnstsw
sub
xor
pop
jg
jp
adc
ficoml
dec
rcl
test
mov
jge
xlat
sub
inc
jb
inc
pushf
lret
test
add
lahf
mov
cmc
adc
pop
testb
mov
push
and
sbb
int3
notb
jb
scas
repz
out
push
gs
xor
mov
xchg
sbbl
inc
imul
cmp
jle
push
mov
sbb
mov
lods
jnp
jp
or
xor
and
inc
out
pop
ret
aad
outsb
cmp
out
sbbl
or
push
cmpsb
jp
outsb
addr16
and
repz
ss
cwtl
in
loop
add
inc
mov
mov
loopne
test
jmp
notl
cli
push
dec
stos
test
sbb
jle
shll
cmc
mov
ret
fs
outsb
cmp
pop
xchg
mov
insb
insl
push
cli
movsb
stos
icebp
pusha
pop
mov
jmp
xchg
dec
sti
in
sub
jne
mov
fldl2t
test
shrl
push
aam
xor
sahf
dec
jmp
jo
addr16
inc
scas
cmpl
cmp
sub
rcrb
and
mov
icebp
test
dec
test
push
push
cmp
mov
mov
jp
inc
lds
jmp
xchg
cmc
mov
mov
cmp
xchg
fcmovb
lahf
shrl
xor
call
loope
ret
push
bswap
shrb
push
jne
push
aas
imul
cmp
data16
popl
push
cld
sbb
cld
push
add
pop
jl
nop
scas
add
sbb
adc
push
outsb
movsl
sub
mov
addr16
mov
or
test
add
outsb
test
addr16
loop
xchg
ljmp
mov
dec
loopne
cmp
hlt
repnz
push
ficoml
sbbl
jo
sub
xchg
pcmpgtd
or
fs
mov
mov
pop
jle
arpl
scas
les
rcll
roll
and
scas
das
add
sub
adc
inc
jecxz
mov
jmp
mov
dec
ret
sub
cwtl
pop
sbb
xlat
add
mov
jmp
inc
out
mov
je
adc
lock
hlt
bound
mov
cmc
das
test
jge
xchg
lods
inc
pushf
add
adc
mov
adc
mov
inc
mov
movsl
cli
scas
and
pop
push
pop
mov
js
testb
andl
mov
ss
aam
test
and
jns,pn
lods
sbb
xchg
pop
dec
cmp
das
push
cmp
sbb
addr16
test
dec
ja
mov
push
mov
movsl
or
and
xchg
ja
cld
pop
stc
leave
aas
fdivrs
cmp
push
lcall
xlat
imul
test
lods
andb
ja
cli
xor
rcrl
lret
xor
pop
sbb
adc
xchg
cs
lock
out
movsl
jo
jno
push
mov
bound
das
add
xchg
sub
cmp
or
mov
mov
sahf
jecxz
jp
les
in
cmp
inc
cli
arpl
jns
push
jae
push
rolb
mov
dec
mov
lahf
and
mov
pop
popa
mov
add
adcb
jmp
es
lods
push
outsb
inc
das
cmpsb
xor
inc
addr16
in
push
push
std
ja
cmp
mov
inc
js
sti
movsl
jne
xchg
cmp
ret
sub
shll
jmp
les
orl
xor
or
sbb
add
xchg
push
in
cmc
xchg
pop
fildl
loopne
jo
aaa
lfs
ja
rorl
mov
loope
in
mov
aaa
ret
pushf
jmp
je
sbb
jb
cmpsl
fnstenv
jo
cmpsb
adc
out
mov
and
adc
mov
push
pop
das
popa
jae
clc
push
pop
sti
and
arpl
in
jl
fisubrs
mov
lods
cmp
loopne
adc
jbe
xchg
xchg
sub
int
jecxz
push
push
pop
sbb
mov
ja
mov
or
test
rcrl
rclb
decl
jb
ljmp
jecxz
idiv
dec
sub
mov
adc
and
sub
jp
or
push
clc
and
insl
dec
sub
and
push
clc
lahf
and
sub
fisttpll
out
sahf
pushf
lcall
mov
scas
sub
mov
cs
xchg
mov
orb
adc
sub
add
sbb
or
and
into
stos
jl
data16
push
fistl
cwtl
out
rcrl
mov
icebp
xchg
mov
outsb
rclb
lret
mov
xlat
sbb
test
xchg
mov
pusha
jns
mov
gs
popl
pop
lea
jle
xor
xchg
add
pushf
push
or
pop
fsubr
nop
mov
loop
ja
jo
sbb
rorl
lret
addr16
add
sub
mull
inc
sti
sbb
cmpsb
and
mov
push
movsb
in
int
and
jns
inc
jle
add
adc
xorb
es
or
sbb
xor
jbe
xchg
inc
pop
mov
out
loope
and
mov
mov
mov
mov
in
or
shrl
mov
repz
arpl
in
cs
out
out
std
or
hlt
adc
or
in
xlat
arpl
lods
xchg
inc
inc
out
inc
add
jae
dec
sti
rclb
lock
pop
rcr
sbb
push
jle
fwait
rolb
scas
mov
lret
xchg
popa
sarl
push
fs
mov
mov
and
jae
dec
frstor
inc
sub
leave
mov
adc
rcr
sub
add
lcall
imul
cmp
push
iret
sahf
lock
adc
repnz
enter
dec
aad
or
fstpl
push
xchg
cwtl
dec
lds
lahf
push
sbbb
jae
movsl
cmpps
push
jecxz
xor
xchg
jb
ja
jmp
dec
inc
out
cmp
mov
adc
outsl
outsb
mulb
dec
sub
sbb
loop
lock
jmp
sbb
pop
loop
mov
out
aaa
jnp
and
jecxz
loopne
stos
lret
mov
lcall
icebp
sub
scas
lds
sub
push
mov
mov
sub
push
adc
inc
add
std
and
push
push
fsubrl
xchg
fidivrs
sub
lods
add
aam
int
mov
jns
mov
out
jmp
xchg
nop
icebp
jecxz
les
inc
test
sub
pop
ljmp
xchg
sbb
pop
pushf
cmpsl
mov
mov
aas
cli
decl
ldmxcsr
loop
push
rclb
fwait
in
aam
sub
idivb
dec
inc
cmp
fdiv
adc
inc
out
and
xor
adc
pushf
jne
and
inc
cli
fwait
cmp
lods
push
gs
stc
loopne
dec
out
and
pop
push
in
sbb
repnz
mov
and
lods
dec
push
int3
adc
mov
dec
adc
out
and
subl
or
mov
data16
pushf
xor
or
and
imul
imul
repz
aad
aam
stos
or
lret
mov
std
leave
push
jo
repnz
adc
fwait
cwtl
sub
arpl
inc
mov
int
xor
movsl
dec
push
loopne
aam
js
mov
subb
push
sub
data16
out
xchg
push
stc
mov
fwait
add
mov
inc
or
lea
cmp
sbb
pop
aas
xor
jecxz
mov
push
test
test
push
mov
mov
inc
test
lret
scas
rorl
xchg
push
cs
dec
les
clc
mov
test
ret
into
jno
mov
jecxz
daa
pop
or
test
shrl
js
cli
sbb
lcall
pop
into
in
outsb
add
das
ljmp
scas
or
je
fs
jb
adcb
push
push
inc
js
test
push
add
push
fdivs
mov
cmp
xchg
or
push
and
loope
je
sbb
add
aam
loopne
fldl
aaa
fcmovb
push
ret
int
fs
cmp
test
jne
rcrl
and
ss
daa
or
out
popf
pop
movsb
pop
bound
jo
js
into
dec
pop
sbb
or
rolb
enter
movsb
popf
push
adc
xchg
loopne
mov
test
fwait
dec
fs
nop
or
mov
xchg
jne
loopne
push
into
mov
std
les
stc
int
xchg
jl
call
xchg
clc
es
pop
movsl
pop
test
mov
cmp
cmp
lret
mov
shlb
rcl
ret
and
xchg
inc
xchg
and
inc
fwait
push
sti
outsb
lcall
push
std
adc
rolb
mov
ja
icebp
xchg
loopne
imul
xlat
sub
arpl
push
out
xchg
and
mov
mov
push
lock
jecxz
fmull
cmp
adc
iret
lds
and
enter
ljmp
jmp
ja
inc
mov
mov
fwait
mov
mov
inc
ds
jge
push
mov
sti
xchg
cmpl
inc
inc
scas
sbb
fcmovnu
inc
xor
rclb
insb
fstpt
add
push
xor
enter
leave
mov
adc
cmp
cmp
dec
and
mov
clc
mov
test
jmp
push
push
fs
jl
inc
inc
jbe
xor
out
rcl
jns
mov
inc
or
sub
leave
jae
add
add
outsl
out
push
insb
enter
add
cmp
imul
push
aaa
and
addr16
mov
stos
int
les
fists
fwait
into
push
ret
sub
out
lret
dec
lret
sbb
or
or
inc
addr16
stos
sbb
pop
inc
testb
addr16
sahf
jl
inc
push
dec
pop
in
and
xchg
mov
adc
popf
mov
or
cli
fstpl
je
data16
int
push
push
pop
mov
into
dec
int3
mov
out
add
orb
and
mov
xor
xor
icebp
adc
ret
xor
loope
mov
rcr
add
add
push
movsl
cmc
jae
add
loop
mov
dec
pop
push
xchg
nop
hlt
xor
in
sbbl
add
pop
mov
sub
push
jg
adc
movb
stos
pop
jl
pushf
push
orl
xor
xchg
popf
scas
cmpsb
ds
sbb
mov
xchg
in
cwtl
pop
lea
fimuls
jne
push
dec
mov
fistps
subl
cmp
xor
arpl
jecxz
xor
xchg
mov
mov
sub
pop
jne
scas
icebp
pop
sbb
pop
mov
sub
cmpsb
mov
push
or
push
negb
inc
or
gs
adc
data16
scas
stos
out
mov
or
xorb
ret
xor
xor
xchg
sub
sbb
ss
or
mov
imul
in
and
loope
or
jae
inc
push
lcall
push
fdivr
push
pop
pop
jg
and
out
add
das
insl
mov
subl
cmp
and
sub
mov
insb
cmc
out
jecxz
imul
xchg
push
js
push
sarb
pop
pop
dec
inc
cmc
sar
lea
out
jb
mov
xchg
sub
push
shr
and
aas
xchg
xor
mov
jae
mov
lahf
jl,pt
fisubl
push
fsubr
ja
aam
sar
sbb
pushf
in
mov
shll
enter
mov
or
in
mov
adc
and
pop
xchg
xchg
or
outsb
cmpsl
cld
lds
in
add
inc
pop
loopne
jge
inc
dec
mov
push
or
dec
sub
jne
pop
xor
fsubrs
and
or
out
dec
subb
sub
gs
stos
cmpsl
jbe
dec
add
not
xor
test
int3
add
push
testl
stc
pop
aas
out
sub
adc
mov
adcl
jp
pop
mov
and
addr16
add
xor
xchg
mov
test
pop
jnp
fildl
jge
xor
out
adc
dec
gs
nop
mov
push
in
cli
subl
repz
and
sahf
cmp
xchg
adc
test
pop
stc
hlt
addr16
roll
mov
cld
sbb
divl
sbb
out
daa
lock
sub
pop
xchg
mov
jecxz
mov
aaa
and
adc
addl
mov
cmp
mov
sti
push
xchg
inc
mov
data16
rolb
or
sbb
outsl
pop
gs
xor
xor
mov
icebp
pop
in
push
pop
int
mov
mov
insl
jnp
pop
jns
push
loop
mov
das
mov
cmp
adc
test
sub
xchg
and
aad
adc
sub
dec
cltd
push
or
pop
mov
stos
jecxz
push
shl
fnsave
loope
mov
pusha
adc
push
sbb
mov
cld
inc
inc
or
in
dec
test
fstl
iret
incb
sbb
sbb
mov
sbb
push
ds
pmaxsw
and
in
or
fistl
pop
rcll
sbb
pop
add
add
jo
pop
shll
dec
push
push
ret
inc
sub
add
out
mov
pop
pop
add
aas
aaa
mov
or
loop
add
inc
mov
roll
xchg
in
mov
lods
mov
add
in
fisubrl
cmovae
lret
push
fcoms
dec
cmpsb
jmp
inc
push
ret
pop
call
lods
roll
sti
nop
xchg
jbe
lods
lea
dec
stc
add
shrb
popa
ds
inc
adc
mov
rclb
add
daa
addb
scas
xor
fnstenv
bound
mov
mov
scas
xchg
sub
jbe
cmp
aam
arpl
xor
movsl
lret
sti
xchg
rcrb
dec
lea
ss
sbb
scas
inc
loope
adcl
in
inc
cmp
sbb
mov
cmp
sarb
jle
add
inc
add
push
rcr
std
sbbl
mov
pushf
mov
or
and
cltd
popf
test
daa
cld
incl
mov
jg
jo
mov
lret
and
inc
push
mov
shll
addr16
outsl
jnp
addr16
cbtw
clc
pop
xor
imul
daa
jmp
shr
dec
leave
int3
lods
mov
xchg
std
rclb
outsb
jbe
aas
add
in
xchg
add
dec
cmc
pop
add
sub
xchg
cmc
daa
icebp
cld
mov
outsb
xchg
dec
jb
not
xchg
hlt
loopne
negl
jge
mov
ret
daa
jo
lods
dec
js
xor
push
testb
scas
adc
hlt
cmpl
jne
rclb
pop
push
jno
jno
ljmp
adc
iret
lret
cli
mov
jg
lea
jnp
imul
aad
xor
incb
fiadds
popa
xor
movsl
mov
bound
add
pop
aaa
vxorps
xchg
xor
lock
pushf
call
js
sub
and
enter
add
test
pop
aam
addb
inc
pop
adcb
push
push
xor
mov
loopne
cld
xor
repnz
sub
movsl
cld
rcr
dec
lahf
mov
jns
fcmovne
fstps
and
adc
jnp
cmpsb
fdivrs
lea
jbe
dec
add
mov
pop
add
in
call
inc
mov
aaa
inc
adc
loopne
fistps
push
xchg
inc
lret
enter
add
cs
cmc
into
fwait
jae
add
xchg
rorb
mov
dec
daa
xor
clc
dec
lock
pop
js
outsb
ja
push
pop
notb
ret
aas
out
enter
je
inc
sti
pusha
sbb
inc
aam
fxch
push
push
aaa
sub
push
cmp
test
mov
mov
cmp
outsl
ds
or
xchg
jnp
popf
xchg
push
fchs
add
dec
jge
fisubs
sbb
int
dec
ljmp
adc
sahf
shll
nop
out
fdivl
jno
push
add
xchg
mov
and
stc
xchg
pop
lcall
cmp
cltd
lret
in
loopne
lea
adc
xchg
js
mov
in
shrb
inc
pop
xchg
icebp
stos
ds
mov
sbb
xlat
inc
jmp
rcrb
repnz
repz
push
stos
js
roll
jecxz
repnz
mov
mov
sbb
push
lret
ja
mov
or
or
gs
sub
add
xor
test
outsl
fldlg2
push
pusha
sbb
loope
aad
and
mov
js
inc
jp
pop
scas
repz
push
sbb
push
out
jg
and
push
mov
xor
std
xor
gs
sbb
push
cmp
repnz
into
loop
insb
add
cwtl
flds
pop
mov
push
xorb
dec
mov
push
rol
sub
aaa
iretw
pop
mov
inc
cmp
lahf
cld
push
xorl
sub
mov
xrelease
aam
vpshufd
jle
into
sub
loop
mov
mov
jo
jo
arpl
cs
call
or
pusha
movsl
imul
cmp
xchg
test
aad
pop
movzbl
or
and
sub
aam
std
inc
inc
jg
xchg
mov
fdivrl
pop
dec
cli
pop
arpl
int3
or
loope
nop
pop
or
pushf
stos
fstp
mov
stos
jecxz
xchg
jae
mov
aas
pop
mov
jge
or
fsubrs
or
and
mov
icebp
xchg
in
sbb
dec
jo
xchg
cli
cmp
jne
dec
mov
mov
aaa
inc
push
and
rolb
cs
cwtl
shr
cmp
mov
and
jge
popa
xchg
mov
xchg
sahf
iret
repnz
mov
sbb
cs
rorb
inc
mov
jg
ljmp
in
push
call
or
sbb
pop
dec
pushf
outsl
shlb
cmp
mov
pop
add
jnp
pop
rorb
mov
dec
clc
xchg
mov
inc
repz
out
stos
loopne
push
pop
jle
ret
std
insl
jne
outsb
add
popa
les
push
imul
dec
pop
lds
jle
in
jge
or
cmp
jp
scas
scas
repnz
gs
test
and
testb
mov
mov
sbb
adc
add
pusha
outsl
shlb
push
dec
arpl
mov
lret
cld
in
cmpsl
adc
mov
je
loopne
addb
pop
cld
iret
pushf
jge
adc
mov
fistpll
in
add
xchg
sbb
jne
inc
and
pop
push
mov
popf
test
mov
xchg
imul
xchg
loop
dec
lods
notl
ret
and
das
popa
dec
lret
sbb
pop
notl
test
movb
outsb
scas
jmp
fcompl
clc
sbb
push
xchg
jns
sub
popa
push
imul
xchg
imulb
stos
cwtl
cmc
jo
lahf
inc
or
les
rorl
fcom
repnz
adc
mull
lock
and
mov
xchg
imul
loope
repnz
sub
dec
sti
inc
in
jnp
inc
dec
dec
jo
adc
mov
dec
fmuls
decl
ss
shrl
sbb
mov
pop
xor
lret
faddl
lea
je
clc
pushf
pop
lock
adc
cmp
pop
xchg
mov
jo
pop
sub
cmc
jb
pop
cmpsb
inc
data16
sbbb
lret
movsb
jl
lock
movsl
cmp
or
or
mov
sbb
jle
js
fstps
mov
mov
cmp
dec
push
popa
ss
xchg
xchg
fldenv
and
aaa
mov
add
repnz
cmp
sbb
xchg
decl
ljmp
xchg
cmpsb
or
xchg
lret
push
xorb
outsl
shl
push
scas
into
ljmp
inc
jp
inc
fbld
pop
das
jnp
ljmp
lcall
pop
xor
sbb
and
fcomip
scas
pop
pop
xlat
pushf
rcr
out
push
fistpll
mov
dec
pop
jp
and
xor
pop
and
dec
dec
mov
call
mov
rorl
in
scas
mov
dec
jbe
xor
push
xor
jnp
insl
leave
push
inc
pop
repz
jecxz
stos
jae
lock
mov
call
jg
imul
jns
pusha
cltd
sti
jne
pop
jl
or
or
mov
leave
pusha
xlat
test
pop
inc
xor
loopne
push
pop
adc
mov
aas
mov
add
xor
arpl
sbbb
sti
in
shlb
sub
decb
out
xor
mov
add
sub
lcall
jmp
out
lods
punpcklwd
dec
mov
addr16
outsb
xlat
repnz
sbb
cmp
mov
jl
nop
mov
call
cmp
pusha
inc
inc
pop
push
in
outsb
jg
fmuls
inc
jb
jno
addr16
bswap
inc
andl
rclb
lods
jg
jb
icebp
bnd
xor
pop
test
add
xchg
mov
addr16
jle
das
addb
aas
andb
mov
jmp
adc
sbb
idivl
jecxz
insb
xchg
scas
and
jmp
lcall
adc
dec
cmp
ja
fwait
insb
lcall
fdivrs
sub
js
rcrb
xor
pusha
movsl
andl
test
dec
pop
xorb
cmp
pop
ds
movsl
mov
ficompl
ljmp
ret
in
int
sbb
stos
fdiv
mov
inc
dec
outsb
sahf
popf
mov
mov
jb
mov
xchg
cs
jge
fwait
roll
sbb
gs
out
js
sub
jo
push
shlb
inc
mov
outsl
push
and
mov
fstps
pushf
push
ficoms
out
pop
push
es
cltd
mov
dec
push
push
xchg
loop
sub
mov
lcall
mov
jae
sti
xor
push
cmp
add
rcll
popa
imul
jne
mov
push
lods
push
xor
add
sub
sbb
push
pop
push
xor
cmp
mov
push
mov
fucom
mov
jnp
mov
aaa
data16
testl
test
push
jnp
xchg
rclb
repnz
sahf
test
stc
pop
gs
incl
dec
imul
pushf
mov
or
clc
pop
jmp
xor
jmp
push
cmp
jb
sbb
mov
iret
jns
lret
roll
ficomps
xchg
mov
sbb
sub
es
test
sbb
cmp
mov
fwait
cmpsb
jae
pop
mov
out
jns
jo
push
incl
sub
stos
enter
jmp
in
andb
or
fistpl
fstl
push
int
push
fadd
xor
xor
sub
fbstp
mov
cmp
sbb
data16
mov
int3
mov
lods
mov
dec
inc
call
push
nop
clc
mov
or
ds
sbb
shl
sub
push
sarl
sbb
clc
bound
jo
adc
call
xchg
or
dec
aad
imul
test
out
push
mov
shrb
fstl
fidivs
loopne
outsl
jge
push
loop
clc
pop
addl
in
jle
fldl
or
movsb
cmp
shlb
iret
xchg
lock
jne
pop
jecxz
inc
loop
movsl
dec
sbb
inc
sbb
mov
aam
add
inc
xor
inc
push
mov
out
arpl
pop
cwtl
mulb
or
mov
sub
into
out
das
les
adc
or
repz
fs
xor
push
sub
push
sbb
test
mov
pushf
and
or
std
mov
adc
stos
mov
xor
cld
inc
add
mov
pop
or
ret
repz
sbb
sbbb
sbbb
inc
mov
inc
sahf
mov
xor
adc
sti
push
call
aam
iret
lds
insb
rolb
in
ret
adc
pop
jb
dec
fcomi
shll
mov
data16
outsl
mov
mov
sbb
pop
call
sub
out
daa
lods
add
push
cmp
mov
xchg
fcoml
lds
xor
cltd
mov
mov
push
push
xchg
rcll
sbb
hlt
outsl
dec
inc
push
fildll
lods
enter
pop
adc
outsb
stc
incb
sbb
push
dec
mov
jns
xchg
dec
fists
shlb
movsl
cwtl
jl
sub
filds
inc
outsl
xor
imul
outsl
loopne
nop
fmul
clc
jae
pop
or
push
pop
dec
mov
mov
imul
das
bound
fimull
jno
fadds
push
cmp
lcall
lahf
out
xorb
es
sahf
loopne
xchg
movsl
add
dec
xchg
jge
xchg
mov
mov
fcoms
cmp
in
pop
jne
negb
popf
pop
ret
or
mov
cmp
sub
rcll
xor
sar
aas
in
lahf
out
mov
dec
fsubp
daa
push
and
inc
movsl
outsl
das
mov
ror
push
pop
dec
xchg
imul
inc
ss
mov
jb
mov
std
dec
into
or
aaa
test
dec
and
aaa
xchg
mov
sahf
mov
data16
and
gs
stc
loop
jo
jne
adc
ja
lock
or
insb
scas
into
loop
push
das
insb
or
out
scas
jmp
sub
testl
and
cmpsl
mov
mov
shlb
test
or
sub
out
inc
pop
mov
nop
pop
mov
and
dec
or
icebp
fdivl
and
andl
popa
ljmp
cmp
cmpb
sub
adc
aad
sub
loope
xchg
addr16
sub
clc
and
je
fmull
test
add
sub
adc
les
sub
cmp
test
mov
pop
mov
pop
je
lods
aas
sbb
push
outsb
outsb
mov
and
outsl
cli
das
xor
inc
push
dec
test
sbb
mov
adc
int
push
or
inc
mov
xchg
mov
cs
sbb
dec
add
loope
cli
cmp
dec
cmp
in
xchg
dec
ds
inc
adc
subl
push
mov
push
enter
jmp
enter
mov
push
inc
cli
xor
push
loope
movsb
lods
adc
cs
sbb
popa
test
jle
jmp
popf
sbb
ret
mov
push
push
sbb
add
or
insl
sbb
push
out
jnp
imul
pusha
adc
add
mov
jmp
pop
int3
out
aad
pop
jb
nop
daa
xor
sar
iret
into
leave
adc
xchg
push
xor
xor
xlat
pop
fnstenv
cld
cmp
add
dec
scas
notl
mov
sarl
sub
shlb
mov
pop
xchg
test
jno
adc
push
or
mov
lret
xor
imul
jae
or
shl
sbb
and
or
out
repnz
insb
or
mov
sbb
lock
mov
xchg
popa
xor
enter
out
inc
loope
or
shrl
xor
test
jmp
aam
mov
psrlq
aam
rcl
push
cltd
lods
loop
sub
js
jae
imul
adc
loop
mov
test
repz
cmp
xor
out
pop
imul
or
int3
clc
shll
inc
arpl
mov
inc
mov
aaa
lods
dec
test
popf
fwait
dec
clc
movsb
add
lret
das
push
filds
lods
xchg
flds
mov
xorl
jnp
lock
sahf
sarl
xor
sbb
add
stos
adc
std
inc
loope
popf
imul
add
incb
mov
cmp
leave
rcrl
adc
and
mov
xchg
std
push
outsl
mov
in
sbb
in
sbb
xchg
inc
das
mov
push
push
push
pusha
add
xchg
adc
out
sbb
inc
out
push
fists
and
outsl
fmull
and
stc
loop
mov
lret
cmpl
and
xchg
lret
je
mov
sbb
ljmp
mov
push
adc
mov
mov
xlat
cmovae
fbld
add
sub
or
mov
mov
mov
mov
sarl
and
test
jns
insb
mov
xchg
and
xchg
jae
dec
test
gs
add
adc
sub
pop
jge
movsl
push
cld
xchg
cmp
cmp
stc
lret
xor
jb
ret
and
and
inc
cmp
mov
stos
inc
test
jle,pn
push
jb
rorl
jge
inc
pop
xor
fs
je
push
jae
dec
push
and
aaa
popf
cwtl
movsl
pusha
xor
sub
test
cmpsl
push
jmp
pop
lahf
mov
rorb
jae
scas
sub
aaa
push
add
push
rclb
mov
fimull
xor
xchg
and
aad
rorl
rcrb
in
aas
cmpl
insl
sub
inc
push
push
pop
popa
cmpsl
inc
xchg
pop
or
xor
ror
inc
arpl
int
imul
or
fstps
sub
repz
or
and
and
and
xor
fs
sbb
fstpl
out
test
lods
sub
cmc
sub
jmp
pusha
fdiv
test
loopne
in
and
and
scas
ret
cmp
adcl
xlat
popf
inc
cmp
adc
cmpsl
sbb
sbb
cmp
lret
jl
cmpsl
loopne
push
mov
repz
and
fisubrl
mov
dec
mov
sti
mov
test
pushf
push
and
gs
int
sub
test
repz
jbe
xor
outsb
dec
mov
sbb
pop
or
cmp
mov
mov
pop
imul
lods
loope
rorl
push
dec
arpl
fstps
mov
bound
xchg
or
mov
jno
mov
scas
and
push
shll
scas
shlb
pop
xchg
xchg
cmc
sbb
mov
dec
in
xchg
dec
or
xchg
xchg
ljmp
pop
cmp
jle
push
xlat
push
mov
stos
add
mov
add
sahf
mov
mov
fbld
scas
pusha
push
pop
xor
jbe
dec
adc
addr16
jo
in
push
jbe
loopne
sub
xchg
insb
xchg
jb
cwtl
and
add
dec
lret
pop
pop
loopne
sbb
cld
fldl
jbe
mov
ret
xchg
and
sbb
and
and
lock
cmp
outsl
pop
aas
lods
add
mov
lret
mov
enter
sbb
test
cmp
push
cld
addr16
fstpl
and
adc
jns
test
push
add
sub
stc
sbb
xor
add
stc
in
mov
pushf
or
std
jns
pop
mov
pop
je
or
lock
cld
mov
jbe
dec
cmpsl
movsl
add
push
subl
movl
push
push
sbb
inc
jecxz
pop
sub
not
dec
imul
mov
js
push
mov
and
dec
pop
rolb
and
xor
std
and
push
fstpl
mov
fisubs
movsb
pushf
nop
mov
mov
push
pop
xchg
cmpsl
enter
mov
inc
sarl
ret
inc
and
stc
adc
xorl
cmpsl
mov
outsb
jle
cwtl
xor
mov
fsubr
das
xor
shll
add
xchg
or
xchg
and
bsf
addr16
jno
xchg
fs
pop
pop
ret
xchg
push
jge
fsubs
rorl
outsb
into
push
pop
jb
cmp
imul
fsubrs
push
ret
cmp
int
aaa
sub
and
jb
jmp
ret
and
int
les
cli
clc
neg
stc
cmpsl
jo
leave
push
es
push
fidivl
iret
loope
sub
jnp
rep
std
inc
daa
sbb
pop
jmp
xor
xor
inc
xchg
cld
cmp
in
inc
adc
inc
adc
mov
jecxz
push
xlat
xorb
and
pop
dec
xchg
scas
pop
dec
jle
xor
mov
mov
cmpsb
adc
stos
lcallw
inc
pop
fistps
cmpsw
fdivs
cmp
xor
dec
jo
mov
iret
jge
pop
xchg
popf
pop
mov
mov
sti
sbb
test
cmpsl
push
je
pop
push
pop
jae
sub
push
sbb
test
addl
push
mov
xor
xor
dec
dec
sbb
in
xor
sarl
rcrb
es
fldcw
into
in
ror
test
xor
stos
rorl
out
ja
pop
jmp
cmpsb
dec
push
call
cmp
xchg
movsb
push
and
inc
nop
dec
jl
imul
pop
rolb
cmc
clc
icebp
sbb
out
dec
sub
cli
adc
fmulp
xchg
or
xor
movl
in
cmp
mov
mov
aaa
rclb
sbb
movsl
pushf
mov
insb
push
je,pt
add
inc
outsb
adc
nop
movb
jmp
mov
lods
int3
in
sbb
inc
stos
call
cltd
push
mov
mov
xor
xor
pop
mov
xor
xlat
jo
incb
add
jbe
fs
jl
adc
icebp
mov
mov
leave
out
dec
pop
xor
lock
mov
fdivrs
stos
data16
mov
scas
xor
pop
punpckldq
sub
sub
add
xchg
jbe
push
aas
add
stos
loop
cli
leave
test
xchg
xchg
lret
xor
xchg
push
mov
xchg
add
fmull
jae
add
inc
enter
add
lahf
fs
pop
or
out
jmp
push
out
pop
cmpsl
inc
sub
mov
shl
xorl
repz
lods
xlat
jl
xchg
ds
jl
sbb
mov
insb
dec
cmpsb
push
iret
std
das
insb
jae
inc
push
les
mov
rcrl
xchg
inc
xchg
mov
add
jmp
push
shlb
xor
decl
stc
ret
push
pop
mov
arpl
mov
imul
push
mov
out
mov
fisubrl
pusha
cmpsb
mov
mov
and
add
push
sub
inc
xchg
orb
xor
add
cld
sbb
pop
fsubr
xor
out
arpl
xchg
push
dec
xor
push
or
fistl
inc
into
insl
pop
pop
shll
popa
mov
jle
dec
xor
push
repnz
in
pop
pop
int3
cld
mov
lcall
fsubs
js
pop
gs
push
into
cmp
mov
mov
leave
fcmovnu
xor
mov
notl
in
fwait
cmp
push
imull
sqrtps
adc
inc
xchg
outsl
in
cs
dec
mov
jnp
cmc
push
mov
std
enter
js
repnz
push
out
xor
mov
cmp
and
aad
sbb
sti
fidivs
jno
ja
cmp
mov
jbe
rorb
add
fbld
js
push
and
js
sbb
xchg
sbb
js
jmp
push
fisttpl
shll
and
mov
push
pop
adc
out
fwait
xlat
xchg
int3
push
in
bound
int
mov
push
insb
call
repz
repz
sub
test
mov
lret
mov
test
fs
shlb
pushf
gs
inc
andl
xor
int
mov
pop
shr
cmpsl
and
nop
shlb
outsl
loop
jmp
push
cmpsb
cmpsb
outsl
out
inc
mov
int3
loop
xor
pushf
mov
loope
je
std
inc
xor
and
hlt
adc
fwait
cmp
mov
push
ficomps
mov
mov
dec
jmp
mov
sub
sub
fists
xchg
sub
jg
sarl
in
loope
int3
dec
es
notl
mov
push
push
xor
xor
decl
pop
adc
mov
mov
imulb
test
stos
out
mov
pop
mov
sub
pause
popa
xlat
pop
mov
ljmp
cmpsb
subb
jecxz
ret
scas
imul
mov
push
or
out
fbld
inc
int3
xchg
inc
sbb
xor
sbb
imul
out
pushf
add
pushf
xchg
movl
rcl
sahf
loope
bound
sbb
mov
xchg
repnz
insl
rolb
ds
aaa
dec
jge
iret
adc
mov
sub
jp
shll
mov
enter
jb
add
out
jmp
and
scas
add
stos
es
ja
sbb
or
stc
sti
ljmp
popf
cmp
cld
mov
inc
jle
bound
ss
sbb
out
push
jb
cmp
aad
mov
mov
mov
pop
aaa
dec
adc
xor
test
xchg
adcb
aaa
push
out
das
mov
cmp
in
loop
push
test
pop
insb
dec
insb
push
jno
sbb
lea
lods
arpl
and
jecxz
dec
add
jmp
sub
xor
imul
out
or
in
mov
or
or
inc
bound
test
adc
sarl
pop
push
push
pop
inc
mov
jmp
pop
inc
scas
mov
cmp
scas
aad
add
sub
sbb
sarb
cld
fdivs
mov
pop
add
sahf
aaa
xor
ret
or
jle
jo
inc
test
lea
cmp
dec
pop
das
sbbl
ret
sahf
pop
adc
jmp
and
cmc
push
lret
aad
popa
jbe
add
enter
inc
mov
rorl
jge
adc
jo
jo
push
jge
ret
lret
xor
pushf
repnz
dec
je
sti
xorb
mov
scas
es
or
dec
es
jmp
cmpsb
sub
add
addl
jecxz
test
jle
lret
mov
add
jp
es
leave
ret
lahf
aas
jnp
sub
pop
imul
in
pop
bound
sbb
cltd
int3
mov
pop
pshufw
lods
push
mov
aaa
lahf
pushf
adc
loope
cmp
or
test
mov
pop
fisubs
pop
adc
sbb
fwait
push
pop
xor
outsb
clc
arpl
test
push
repz
inc
std
inc
lock
lahf
loope
xchg
sub
aas
sbb
gs
push
scas
jg
adc
ret
xlat
into
jg
dec
dec
sub
shlb
cmpsl
adc
sub
xor
movsb
iret
mov
jno
outsl
cmp
aas
push
mov
cld
dec
xchg
jne
rolb
lea
mov
aaa
ljmp
xchg
xchg
inc
push
div
or
sbb
mov
mov
aaa
ret
push
pop
pusha
lea
in
jmp
inc
xor
sub
inc
mul
loop
pushf
adc
pop
addr16
mov
jle
nop
addr16
or
mov
sub
cmp
std
repnz
sar
jp
push
fs
fcompl
pop
lods
or
mov
mov
popf
pushf
mov
cmp
mov
pop
js
xor
aad
iret
dec
jno
sub
gs
dec
push
or
inc
into
push
mov
fbld
enter
mov
insb
bound
cmp
xorb
jge
push
or
ljmp
jge
repz
jle
imul
inc
pop
pusha
adc
push
jae
and
xchg
mov
and
dec
pop
cwtl
popa
push
jae
fmuls
aad
leave
mov
mov
popf
push
and
mov
cmp
fcoms
rorl
fisubrl
or
push
popa
test
inc
cwtl
or
cmpsl
jae
mov
jns
ficompl
mov
pop
lods
aam
jp
sbb
popa
mov
into
dec
xchg
jle
push
dec
fildl
mov
ret
jp
mov
data16
push
pop
inc
pop
iret
pop
add
outsl
stos
cmp
jle
dec
lock
fildl
lea
stc
mov
ret
sub
pop
mov
xor
mov
in
lahf
inc
xor
test
jecxz
pushf
and
push
ss
jmp
das
das
mov
dec
pop
push
fisttps
xor
loop
jg,pn
push
loopne
decl
xchg
sbb
sbb
mov
xor
ja
push
sti
inc
sbb
ret
or
in
xor
add
add
or
mov
shr
ret
inc
scas
push
into
pop
xorb
pop
jle
mov
rcr
into
dec
scas
add
and
dec
jmp
pop
pop
outsl
lods
stos
cwtl
jnp
push
inc
add
mov
scas
out
imul
loopne
out
dec
cmpsl
or
je
nop
push
je
xchg
rcrb
rcr
pop
rol
jo,pn
inc
sub
nop
sub
mov
icebp
cmp
sbb
sbb
xchg
popf
push
cwtl
mov
into
cmp
push
push
jno
shlb
xor
xchg
jo
lea
mov
dec
jmp
or
in
fwait
push
test
rclb
mov
bound
jne
push
lret
add
into
and
lods
jecxz
xchg
mov
sub
sbb
push
enter
jnp
and
aam
and
push
sbb
out
fcoml
pop
test
xchg
push
fidivrl
dec
xor
int
in
jl
or
aam
mov
add
in
inc
cmp
test
fldcw
mov
dec
test
push
in
sub
lahf
mov
aad
call
pusha
cmp
ja
aas
ja
cmp
mov
inc
lods
lea
dec
dec
div
jge
sub
sub
lea
mov
pusha
dec
mov
xor
imul
jle
addr16
jmp
fistl
jbe
fsubrs
lea
rcrb
pop
les
inc
cld
xchg
popa
inc
xor
ljmp
stos
addb
xchg
mov
mov
sarl
pop
lods
lcall
mov
fnsave
daa
and
cmp
shrl
cmpsb
mov
adc
mov
xor
scas
les
scas
lret
pop
pop
adc
sub
mov
inc
int3
stos
std
adc
sbb
jno
rcrb
dec
xchg
sub
sbb
push
push
mov
xchg
xchg
push
mov
clc
lods
fs
mov
aaa
cmc
test
test
addr16
lods
shlb
or
arpl
mov
mov
dec
movsl
xor
xor
sub
aaa
push
or
imul
ljmp
mov
in
mov
bound
movsl
and
gs
je
stc
cwtl
je
data16
mov
cltd
mov
xchg
jbe
imul
ret
cmp
ja
push
cmp
jmp
xor
mov
repnz
mov
push
enter
adc
fcmovnb
in
and
cld
xor
jle
add
add
int
rcll
jnp
xchg
shll
push
outsl
and
jnp
add
adc
pop
stos
jle
bound
lret
je
lret
mov
jno
mov
jmp
push
jl
fs
cwtl
popf
call
xlat
repnz
mov
mov
mov
xor
cmpsl
aad
and
dec
std
loope
cmp
dec
cmp
adc
add
pop
fmuls
cli
stos
cmp
inc
outsb
aam
test
std
jg
xchg
or
mov
push
mov
test
pop
iret
add
scas
mov
shrl
nop
fcompp
insl
adc
dec
cmc
push
sub
dec
fwait
sbb
push
adc
inc
out
cli
mov
push
inc
pop
andl
lea
std
mov
inc
mov
inc
sbb
cmc
cmpsl
push
enter
jnp
leave
mov
fcomi
cld
jl
mov
dec
inc
sub
in
incl
cmp
mov
out
outsb
subb
mov
jp
cwtd
insl
gs
js
sbb
dec
pop
add
pop
jg
add
in
adc
add
or
je
rcrb
sbb
and
or
xchg
pop
fidivs
mov
pop
out
out
stos
pop
adc
push
mov
dec
lret
xchg
test
popa
jl
js
hlt
icebp
inc
je
xchg
in
jb
sub
sbb
jle
data16
sub
test
dec
inc
mov
or
cmp
pusha
pop
xlat
push
xchg
clc
xor
mov
int3
or
enter
jno
jb
ret
push
fnstcw
fwait
test
fisubl
lods
mov
adc
pop
and
adc
movsb
sbb
pop
inc
lret
iret
or
loop
fimuls
lret
adc
xchg
push
or
rcll
in
lret
add
pop
ja
and
aad
es
frstor
rol
test
movsb
xor
pop
cld
mov
addr16
sub
push
lods
pop
sbb
push
gs
xor
sbb
jno
sbb
int3
outsb
add
push
mov
and
inc
dec
jmp
or
jecxz
push
jo
imul
inc
sti
xchg
mov
jno
clc
dec
sub
sbb
test
cmp
das
cmp
cs
test
lret
push
mov
xchg
jb
mov
mov
data16
mov
mov
loopne
jecxz
in
cmpsb
lock
cltd
sar
and
in
xor
js
jo
xchg
dec
sub
sub
or
cltd
dec
adc
sub
int
sub
idivl
pop
sbb
dec
mov
mov
sarl
clc
cltd
loop
mov
sbb
imul
leave
test
xchg
repnz
cwtl
sar
pop
push
roll
imul
pushl
sahf
mov
sarb
mov
pop
pop
sti
mov
clc
push
xchg
push
out
push
and
xchg
imul
cmp
mov
mov
mov
jl
inc
pop
test
sub
es
xchg
insl
ret
push
imul
cmp
shl
push
hlt
icebp
inc
mov
leave
mov
pop
jmp
enter
aad
add
mov
lret
xor
ds
iret
cmc
xor
clc
adc
inc
das
jne
xor
rorb
mov
push
sub
jecxz
leave
loope
loope
std
pop
and
jno
in
push
hlt
sub
das
neg
inc
mov
adc
roll
loopne
mov
inc
xchg
rcrb
push
popa
stos
shll
mov
incl
xor
int3
repnz
loope
jnp
jg
outsl
dec
lea
sahf
fcmovb
inc
mov
cwtl
arpl
jmp
xchg
in
stc
ss
adc
gs
lret
mov
pop
pop
movsb
mov
or
add
rol
pop
in
push
lods
mull
cmpsl
mov
movl
xchg
out
mov
loope
mov
mov
test
pop
push
dec
fstpt
mov
cmpsl
jmp
jp
sti
out
jbe
inc
mov
bound
js
scas
mov
into
scas
xchg
nop
repz
mov
in
ss
fs
sahf
lods
test
cmc
stos
push
pop
popf
scas
test
sbb
pop
aam
arpl
cmp
jg
imul
test
rolb
lods
or
sub
mov
lret
or
in
xchg
int
sahf
jb
imulb
push
je
testb
push
pop
mov
fisubs
scas
mov
daa
push
lcallw
adc
nop/reserved
data16
imul
and
xor
and
icebp
fdivs
testb
pop
sbb
imul
lcall
insb
push
fmul
or
add
cwtl
adc
lcall
lcall
add
test
int
pop
scas
repnz
jb
cmp
fdiv
out
cmp
movsb
iret
repnz
imul
mov
mov
mov
push
mov
and
repnz
jo
xor
fstl
push
jecxz
stos
sub
push
and
or
mov
int
add
push
cs
mov
inc
fwait
xor
pop
ret
mov
lret
cmp
mov
add
push
push
idivb
cltd
mov
scas
mov
and
xor
add
xor
scas
test
pop
mov
push
sbbb
fucomi
out
popf
out
or
out
arpl
popf
push
das
xchg
repz
mov
push
add
mov
xor
out
xor
sub
into
insb
add
shll
pop
fucomp
xchg
aam
pop
dec
repnz
mov
sub
push
add
fisttpll
xor
js
mov
xor
jo
push
xchg
xchg
jecxz
and
test
idivb
outsb
in
sti
idiv
dec
fmull
lcall
jmp
or
ljmp
mov
call
inc
and
stos
cld
lcall
push
mov
stos
sub
jecxz
ror
cmc
sbbl
xor
shrl
xchg
outsl
call
and
add
jmp
mov
add
inc
das
lret
dec
pop
imul
mov
cmp
mov
mov
mov
cli
mov
clc
push
sbb
sub
stos
cmpsl
mov
and
ret
jl
mov
sbb
push
aad
sbb
leave
mov
mov
add
out
cmp
gs
mov
inc
in
dec
cmp
rclb
push
les
aaa
push
fwait
inc
push
adc
push
xchg
pop
cmp
inc
jmp
or
cld
push
out
adc
pop
sbb
int3
add
push
mov
push
push
roll
inc
test
push
call
pushl
sub
enter
icebp
xchg
cmp
pop
inc
icebp
add
movsb
and
push
popa
xor
jns
aam
cmp
sahf
mov
ljmp
pop
and
dec
sbb
jle
test
push
mov
leave
mov
scas
push
adc
dec
outsb
stos
dec
pop
outsb
in
leave
leave
inc
mov
cli
add
movsb
or
mov
inc
lods
lahf
pop
cmp
push
repnz
mov
add
in
mov
in
xor
dec
mov
pop
lds
movsl
adc
leave
mov
cs
xchg
xchg
mov
cmp
xchg
addl
pusha
lidtl
push
ja
push
outsl
mov
ret
in
mov
fdiv
or
inc
nop
dec
insb
push
clc
and
mov
dec
xchg
ror
and
sbb
inc
cmp
cmpsl
aad
push
lret
pop
jmp
loopne
add
mov
pop
push
jae
gs
adc
mov
pop
inc
dec
shufps
inc
xor
jle
imul
sub
inc
xchg
jnp
adc
xor
push
stos
push
hlt
movsl
call
pop
hlt
lret
je
fnsave
rclb
pop
mov
sub
jp
mov
repz
jne
xchg
lahf
cmc
dec
sbb
std
mov
mov
cld
push
clc
jb
mov
mov
dec
push
xchg
loopne
in
sub
or
shlb
jae
mov
mov
mov
mov
je
sub
or
sub
xor
sub
xor
adcb
jge
hlt
icebp
pop
call
fistpl
jnp
xchg
js
cmp
outsb
and
jb
in
testl
adcb
adc
sahf
fnstcw
jns
push
pop
jp
orl
push
dec
push
les
pop
popa
jmp
dec
pop
mov
jmp
dec
sbb
add
fists
inc
and
xchg
add
test
out
cwtl
pop
jnp
sti
cli
mov
cld
std
jmp
fdivrl
push
mov
inc
mov
cmpsl
sub
xchg
je
sti
popa
fdivrp
insl
aam
test
xchg
mov
jp
pop
out
push
pop
push
addr16
inc
aas
cs
sbb
lcall
cltd
and
xor
lahf
subb
dec
dec
push
mov
push
pushf
int3
mov
das
insb
or
stos
jle
out
mov
push
pushf
sbb
or
shl
je
sbb
mov
arpl
pop
loop
out
adc
icebp
je
les
add
dec
xor
movsl
test
nop
add
and
scas
ret
push
lret
fiaddl
cwtl
or
in
arpl
dec
sub
pop
xor
inc
push
adc
pop
or
stos
mov
loopne
jnp
shl
arpl
dec
xchg
pop
sbb
jmp
out
test
push
into
mov
imul
mov
leave
enter
es
mov
aad
and
icebp
xchg
inc
inc
jae
cmp
jl
int3
xlat
add
test
jge
or
jl
or
shl
lret
loope
out
aam
pop
pop
sbb
push
aad
mov
cwtl
outsl
push
rorb
inc
xadd
or
mov
ret
jb
popa
cltd
test
mov
push
or
pop
dec
scas
xchg
aas
rorl
ficoml
addb
jl
add
stos
mov
sti
lcall
stos
testb
sbb
popf
scas
shrb
repz
aam
test
push
adc
and
jg
cwtl
pop
js
call
adcb
jne
sbb
mov
push
and
aad
pushf
movsl
add
mov
mov
mov
ljmp
jg
popf
and
and
jle
dec
push
fwait
pop
lcall
notb
loope
jns
push
lret
adc
pop
sub
movsl
inc
adc
into
out
add
dec
stc
scas
dec
jg
icebp
ja
jmp
mov
add
jp
ds
loopne
rep
push
dec
ror
inc
aaa
loopne
pop
push
dec
inc
xchg
imul
adc
inc
push
mov
jecxz
inc
push
and
lea
jae
cmp
jmp
cli
bound
or
jge
adc
adc
and
cmp
inc
rorl
cs
adc
inc
notl
cld
and
outsl
mov
push
sbb
cmp
fsub
or
adc
and
cld
mov
in
pushf
mov
stos
js
int
loop
test
push
loop
sbb
add
sbb
idivb
mov
nop
jl
insb
dec
shll
cli
xchg
sub
test
cli
mov
mov
repz
jle
pop
dec
ss
pop
inc
lret
jl
inc
pop
sbb
mov
xor
in
iret
ljmp
mov
mov
xchg
loopne
test
push
pop
decl
xchg
cmpsl
scas
push
in
sbb
fdiv
xchg
push
cmpsb
cmp
mov
test
bound
and
sub
pop
sbb
adc
pusha
pop
and
and
xchg
and
fisttps
movsl
mov
and
in
ss
or
add
sbb
out
pop
lods
sarb
bound
and
inc
sbb
sti
sbb
ret
fcmovnu
loop
in
cmp
sub
and
shll
fldt
loop
push
repz
clc
sbb
mov
inc
in
ret
stc
stos
not
call
ljmp
loope
jb
xor
clc
out
xor
dec
mov
adc
std
aam
xor
addl
adc
or
jns
mov
sbb
je
add
pop
outsl
sbb
repnz
in
or
inc
lahf
arpl
sbb
imul
jb
sbb
lcall
mov
adc
sahf
clc
lahf
cmp
ljmp
or
xchg
jbe
sub
je
xchg
mov
rcl
pop
inc
daa
repz
aas
cmp
sbb
mov
sub
lds
push
sahf
mov
add
mov
mov
daa
sub
fs
push
clc
in
jmp
add
sbb
jns
or
ja
push
in
adc
outsl
lods
movsl
scas
daa
mov
push
ds
call
fildl
fcoml
sub
push
pop
orb
xchg
jmp
shll
and
mov
mov
adc
lock
lods
cld
stos
insl
daa
cmp
fwait
ds
and
repnz
int
scas
add
movsb
inc
xor
into
aad
xchg
repz
and
andb
hlt
or
push
cmp
adc
pop
ret
repz
push
cmp
fwait
jne
or
imul
das
and
sarl
sbb
rcr
sbb
jp
dec
repz
push
pop
pop
sbb
xor
sbbb
int3
aaa
sub
push
push
xchg
dec
mov
gs
inc
dec
into
in
mov
xchg
insl
or
sbb
dec
test
xchg
aaa
xor
jne
mov
jns
mov
into
mov
cmp
adc
cwtl
lret
rcl
je
cmp
cmp
outsl
lret
bound
out
xor
xor
call
dec
inc
sbb
pop
bound
xor
mov
cmp
test
movsl
je
jb
xor
sub
push
andnps
movl
dec
jo
fcmovnu
push
test
sbb
xchg
prefetch
pop
xchg
ds
mov
int3
ret
mov
stos
or
test
dec
mov
ret
movd
inc
or
icebp
push
test
fwait
test
sahf
xor
mov
nop
inc
scas
push
test
and
push
popf
xor
fs
rcrb
xchg
in
sbb
mov
stos
out
and
cmpsb
mov
cmc
js
jge
cld
das
ljmp
jae
scas
push
sbb
dec
sbb
and
cs
xchg
stc
ss
les
shrb
insb
jmp
sahf
xor
push
sub
fdivrl
dec
inc
mov
sub
loop
addr16
outsb
mov
mov
ds
adc
or
sbb
int
movsb
popf
sbb
out
cmp
jg
adc
inc
cli
lcall
imul
scas
out
xchg
sub
sbb
xor
pop
jo
sbb
mov
jle
mov
pop
outsl
mov
in
mov
cmp
dec
hlt
out
and
mov
cmp
orl
lcall
adc
or
sbb
jne
xor
xchg
dec
cmp
adc
rorb
adc
aad
lods
cmp
cs
lahf
or
in
push
xchg
aas
xchg
mov
mov
mov
or
notb
or
mov
movsl
cmp
cwtl
and
clc
and
jmp
xchg
lcall
rorl
scas
cmpsb
ret
ljmp
sbb
mov
jecxz
inc
adc
and
lahf
daa
addr16
test
push
pop
call
push
popa
aad
pop
leave
repnz
inc
sub
inc
jne
rorl
les
lods
fcomi
mov
hlt
fisttpl
cltd
mov
mov
pop
popf
cwtl
add
shrb
out
test
adc
sbb
scas
push
or
dec
pop
ljmp
jno
in
jno
or
inc
es
in
ret
mov
addb
xchg
ljmp
nop
xchg
and
xlat
dec
out
test
fcmovne
stc
and
out
rcl
cmp
jmp
xchg
mov
push
xchg
pop
add
xor
dec
daa
inc
jge
mov
cmp
xorl
mov
icebp
jp
mov
or
into
je
aam
xchg
xchg
push
mov
cmc
adc
fisttpl
bound
in
addr16
push
push
gs
and
addr16
outsb
push
mov
rcrl
push
mov
lods
or
bound
push
mov
fwait
xchg
cmpsl
jg
dec
xlat
cwtl
cmp
xchg
xor
sarl
cmp
sahf
fnstenv
dec
or
dec
pushf
jg
xor
xchg
or
xchg
lcall
sub
jl
hlt
or
movsb
in
rcll
aad
fnstsw
hlt
push
lcall
imul
sbb
mov
divl
rol
lods
inc
test
cli
jno
mov
loopne
stc
je
out
into
es
sub
scas
and
adc
daa
fimuls
mov
pop
lea
leave
and
xchg
xchg
shll
rorl
xor
data16
fstpl
lods
sub
nop
enter
sub
push
pushf
sbb
mov
frstor
jmp
repnz
cmp
jne
jns
jl
sbb
dec
pop
or
mov
xor
sub
sti
iret
cmpsl
add
sub
aas
or
lea
aad
rorb
jl
add
pop
cmc
adc
or
or
in
jnp
mov
inc
decl
mov
xlat
adc
test
cmp
int
mov
mov
mov
rol
sbb
dec
in
std
xor
xor
sub
std
mov
loopne
xlat
cld
pop
xor
movsl
and
test
sbb
movsb
sub
pushf
add
xor
xor
loope
cs
stos
mov
fldenv
cld
arpl
mov
mov
lret
push
mov
push
xchg
cmp
jp
icebp
cwtl
ret
lcall
lock
add
and
repz
call
xchg
mov
repnz
xchg
mov
push
push
icebp
sbb
sbb
push
rorb
pop
cmp
pusha
fstpl
std
add
jp
xor
repz
and
nop
stc
decl
mov
dec
loop
push
jl
or
pop
in
cmpsl
push
ldmxcsr
jb
push
mov
add
lods
inc
ret
push
test
mov
mov
into
sbb
stos
test
sti
xchg
sub
fs
pop
js
pop
pop
xchg
dec
in
xchg
pop
lock
mov
out
sbb
pop
fcmovu
adc
je
movsl
or
popf
push
shll
shrl
inc
add
xchg
inc
je
in
notb
repnz
push
and
divl
mov
out
ds
sub
pop
bswap
in
adc
lret
test
clc
cmp
cmp
dec
or
mov
xchg
repnz
das
xchg
xchg
aas
fwait
jno
enter
jae
mov
or
cwtl
add
jmp
mov
cmp
sbb
fbld
or
mov
pop
jae
fmuls
fldenv
pop
enter
push
mov
push
nop
cmpsl
lret
xor
and
popf
xchg
inc
in
into
iret
xchg
loope
dec
fs
cmp
cmp
cmpsb
inc
jl
int
in
imul
aad
aas
sub
xlat
cmp
sbb
das
push
pop
loope
ss
hlt
dec
test
lods
movsb
xchg
stc
dec
lock
jl
rclb
inc
sbb
sahf
negl
in
lea
push
mov
mov
lock
adc
push
sbb
orl
adc
out
cli
push
fadds
mov
pop
fwait
pop
lods
jo
cmp
inc
in
js
les
ficoml
stc
divl
pop
add
cs
fs
mov
cmp
daa
inc
cmp
add
mov
mov
mov
icebp
push
xchg
fcomip
jle
icebp
push
or
mov
mov
sub
push
lahf
psubusb
pusha
mov
sahf
inc
push
mov
cmp
xchg
std
inc
and
out
fxch
pop
cli
dec
inc
cltd
mov
cld
xchg
out
pop
je
xchg
test
xchg
cmp
in
add
popf
fdiv
mov
in
and
cmp
mov
add
ja
lods
pop
inc
pop
xor
push
mov
pop
cmp
sbb
sbb
inc
addr16
jo
fbstp
jle
mov
sbb
xchg
jge
loope,pt
shl
fst
rorb
xor
sahf
imul
popf
push
dec
push
pop
dec
cmp
bound
xor
jl
jbe
cmpl
xchg
sbb
subl
popa
inc
inc
inc
push
mov
cmp
std
int
adc
and
enter
mov
adc
shl
jl
loop
fisttps
ss
xchg
or
and
and
fst
mov
mov
mov
out
sub
jns
mov
jno
fisttpl
out
xor
je
dec
outsb
pop
dec
movsl
inc
fs
push
jae
add
imul
push
sub
movb
add
lahf
jle
sbb
xlat
xor
and
xor
jb
xor
or
fwait
jae
inc
aad
adc
push
xchg
rolb
or
dec
cltd
movsl
sarl
inc
push
push
push
jmp
add
test
xlat
xor
lods
sahf
inc
inc
pop
lock
data16
outsb
dec
dec
inc
movsl
scas
cmp
push
mov
fbld
fimuls
jmp
repz
aad
filds
lret
dec
pop
sbbb
dec
cmp
bound
fdiv
mov
add
push
notl
test
pop
ljmp
lea
cmpsl
popa
stos
adc
fstpt
push
dec
cmc
stos
or
jp
cld
jnp
test
lods
xchg
das
shrb
scas
sahf
or
sahf
int3
rorl
pop
popf
xor
dec
lret
enter
and
or
and
pop
rcll
adc
lret
roll
mov
loop
iret
mov
out
loopne
cmp
inc
sub
cmpl
pop
aas
loope
cli
push
or
mov
dec
js
in
jmp
push
sub
ljmp
enter
test
roll
cltd
jno
add
push
out
hlt
div
push
xorb
jle
ret
or
int3
add
sub
rcrl
cmpsl
or
xor
fdivs
psubw
sub
mov
or
in
ds
movsb
jnp
cmp
and
xchg
addb
sbb
cmp
and
lock
pop
adc
xchg
jmp
or
pushf
fbstp
mov
movsl
pop
stos
leave
in
dec
jnp
mov
outsb
fnsave
pop
xor
aas
pop
mov
and
mov
out
cmp
xchg
in
imul
out
popa
and
loope
movsl
aad
and
dec
shl
mov
bound
test
lcall
out
std
jecxz
dec
pop
jae
xchg
cli
push
and
daa
cmp
mov
mov
lcall
cmp
aam
out
add
inc
loopne
sbb
push
test
das
repz
int3
mov
cwtl
add
cmpsb
inc
adc
pop
daa
ficomps
xor
or
mov
xorl
mov
imul
sbb
test
push
cmp
out
jo
jg
repz
test
bound
jge
out
sub
sub
popf
push
jbe
jno
adc
repz
xor
dec
xchg
lcall
loopne
mov
sbb
mov
cli
mov
cmc
insl
in
dec
sbb
xor
lahf
cs
in
adc
fbstp
sbb
mov
adc
ss
loop
subl
and
pop
jmp
inc
xor
pushf
jnp
jecxz
mov
test
out
xchg
jp
lock
out
imul
movsb
push
sbb
aas
cmp
test
pusha
sub
scas
sub
sub
or
mov
mov
mov
add
inc
and
mov
jecxz
loopne
or
int3
jnp
out
faddl
cmpsb
push
xlat
hlt
fstl
jl
mov
xlat
shr
cli
loope
stc
mov
imul
xor
and
inc
inc
push
xchg
cmp
mov
xchg
jg
adc
adc
xlat
nop
stos
pop
mov
enter
inc
pop
adc
inc
mov
enter
add
gs
movsl
icebp
pop
pusha
movsb
adc
adc
inc
or
cmp
push
push
outsl
imulb
dec
mov
lret
icebp
arpl
out
sbb
scas
popf
test
fsubrl
xor
push
jbe
xlat
scas
clc
or
cmp
ficompl
push
sub
in
andl
popa
cmpsl
insb
push
push
inc
xchg
ss
mov
sub
negl
sarb
push
imul
inc
push
mov
mov
test
testb
inc
lods
outsb
or
imul
sub
mov
sbb
test
lds
aas
xchg
out
lret
sub
dec
imulb
fwait
sahf
lea
cmp
test
fwait
xor
pop
int3
xchg
aaa
jb
stos
and
xchg
jge
test
iret
test
add
nop
mov
pop
xlat
jg
mov
fs
mov
out
dec
fnstcw
lret
cmc
aaa
mov
in
pop
push
push
and
mov
lahf
test
mov
mov
or
ljmp
mov
js
or
jno
xchg
mov
outsb
jg
jo
mov
dec
daa
pop
flds
jno
mov
or
cmp
sahf
mov
mov
cmp
out
mov
xchg
aad
das
std
push
ja
jp
push
xchg
lret
and
push
jbe
xor
mov
stos
xchg
mov
sub
rcrl
test
xor
test
mov
pop
inc
shl
sti
cltd
iret
mov
inc
jp
jl
rsqrtps
imul
pop
in
sub
mov
shlb
in
or
sbb
movsl
loopne
push
cmp
inc
mov
mov
push
mov
out
dec
mov
out
int
addr16
loope
cmpsb
mov
xchg
mov
scas
or
sbb
add
ret
nop
mov
mov
js
xor
pop
push
call
mov
mov
xor
and
ss
jle
fcomps
lds
addb
dec
cmp
test
push
ja
movl
lock
std
js
sub
sbb
inc
ds
movsb
sti
jne
dec
int
jo
sbb
rcll
and
mov
cld
scas
ljmp
sbb
pop
mov
aad
lock
add
or
cmc
push
jecxz
cmp
jecxz
mov
jbe
jb
repnz
mov
adc
bts
insb
loope
push
pop
and
mov
pop
ljmp
dec
and
or
add
jge
imul
mov
mov
das
neg
and
lea
ss
fs
jg
mov
orl
add
sub
dec
lahf
ljmp
or
adc
aad
repz
aaa
cmpl
out
jmp
mov
pusha
mov
pop
fs
xchg
dec
lods
mov
inc
sbb
ljmp
js
js
gs
pushf
stc
insl
and
call
and
lock
lods
movsl
sub
dec
call
push
int
mov
inc
call
jge
iret
xor
cmp
aad
ljmp
mov
out
sub
in
pop
gs
pushf
inc
mov
mov
inc
in
dec
pop
call
movsl
sub
xor
cmp
popf
and
dec
fwait
mov
mov
or
push
xchg
inc
push
mov
pop
xchg
subb
out
sbb
jmp
adc
xchg
inc
imul
faddl
lahf
mov
mov
xchg
mov
vmovaps
insb
cmp
scas
ret
loop
pusha
imul
cltd
xor
adc
adc
popa
or
ss
inc
rorl
jp
or
and
daa
sbb
sbb
jno
test
xor
aaa
sbb
fdiv
and
mov
mov
xchg
pusha
hlt
repz
cmp
scas
iret
shlb
jns
pop
push
adc
jne
pushl
push
mov
adc
jmp
jecxz
mov
cltd
out
fmul
adc
jg
sub
cmpsb
inc
sahf
dec
push
mov
sti
aaa
int3
dec
fildl
dec
adc
xor
pushf
and
xor
jl
mov
imul
ret
xor
mov
in
out
ds
xor
cmp
aaa
addb
test
dec
xchg
push
mov
into
pop
pop
mov
lret
out
pop
lds
and
ljmp
mov
inc
dec
and
negl
call
sub
out
mulb
popa
nop
pop
push
mov
pop
mov
and
mov
test
push
mov
lret
pusha
data16
sub
xor
aam
cs
stos
pusha
je
mov
cmp
les
sbb
lahf
aas
dec
adc
jb
pop
or
mov
movsb
adc
loop
xchg
mov
mov
cmpsb
out
xor
int
mov
sti
data16
mov
sub
cltd
xor
adc
fildll
orb
push
adc
mov
lods
loopne,pt
sti
arpl
ss
push
jecxz
cmp
fs
jbe
imul
int3
mov
push
test
iret
push
mov
cmpsl
jne
popa
dec
sti
mov
mov
mov
rcll
mov
push
mov
rcl
loop
ds
mov
jg
jo
mov
jnp
sub
test
push
mov
lcall
cmp
mov
je
push
je
loop
or
xchg
cli
fists
xchg
mov
adc
pop
xchg
mov
sbb
add
pop
dec
mov
cmpl
mov
dec
adc
jp
lret
xor
jle
jns
ret
pop
hlt
enter
negl
jns
lret
stos
or
gs
das
in
test
pop
xchg
pop
xor
jns
adc
mov
sarl
cld
iret
jae
xchg
in
outsl
xchg
pop
xlat
cmp
into
mov
imulb
pop
sub
push
aam
sub
cmpsb
aas
test
das
leave
stc
lret
mov
test
xor
ljmp
adc
popa
lods
jno
mov
lret
xchg
push
stc
add
mov
out
cmp
aad
mov
neg
bswap
nop
test
nop
les
cs
mov
dec
aad
jmp
ret
fisttpl
push
and
push
into
add
test
adc
call
mov
adc
aas
sbb
ficoms
das
movsb
repz
cmc
pop
dec
mov
ljmp
and
add
in
xor
movsl
ljmp
stos
popl
jp
addr16
or
stos
adc
jb
outsl
pop
movsb
mov
mov
pop
out
loopne
adc
gs
dec
push
mov
mov
les
imul
sub
jecxz
and
add
lods
stc
push
loop
cmc
jle
xchg
sbb
rcrl
inc
movsb
sub
cmp
jg
les
add
pop
fimull
add
mov
mov
push
jl
mov
cs
cmpsl
adc
sub
fdivrl
out
ret
or
jecxz
jae
or
test
aad
imul
pop
sbb
jae
pusha
pop
fwait
cmp
mov
in
cmp
and
push
in
lea
xor
cmpsl
jb
mulb
fbld
pop
pop
adc
insb
push
or
loop
daa
mov
xlat
push
rorb
inc
sub
inc
cwtl
sub
lods
sbb
jle
stos
jmp
lods
sti
aam
sbb
bound
js
xor
mov
wrmsr
lea
fdivrp
jmp
stc
ljmp
mov
cmp
fwait
divb
enter
cmp
dec
call
es
pop
sub
inc
add
cmpl
dec
imul
xchg
lret
in
mov
jb
pop
cli
or
sbb
out
xchg
pop
adc
or
aad
xchg
and
adc
cmp
xor
pusha
dec
in
or
ret
and
xchg
inc
cmp
adc
ljmp
pop
dec
mov
jne
mov
shll
mov
fs
and
sarb
mov
leave
int3
pop
mov
inc
xchg
inc
mov
mov
push
stos
jo
and
and
outsl
pop
push
and
dec
movsl
xchg
faddl
ljmp
xchg
mov
mov
ret
jb
sbb
push
fmuls
ljmp
fsub
dec
in
pop
subl
mov
lock
add
mov
cmp
xrelease
mov
push
xchg
mov
xchg
xchg
jne
add
scas
cwtl
movsl
inc
fcmovnb
adc
mov
and
out
ret
mov
mov
mov
inc
and
jnp
repz
push
sub
ds
cmp
sub
imul
popa
pop
push
push
dec
push
pusha
dec
adc
dec
lds
out
mov
xor
testl
sbb
sub
repz
inc
push
xor
lahf
and
dec
jno
sub
pop
mov
push
in
pop
sarl
jne
std
stc
mov
out
pop
repz
stos
xchg
test
ss
js
insb
pop
sbb
bound
sti
sbb
jbe
push
scas
out
jb
pop
jne
aad
or
pop
dec
iret
icebp
inc
sub
imul
xor
jl
xchg
xchg
cltd
jne
cli
cmp
push
daa
int3
mov
stc
lahf
bound
mov
pushf
jo
xor
add
lret
mov
test
das
and
jnp
push
in
lods
gs
int
push
call
scas
xor
xchg
leave
out
cmpsl
movsb
adc
cmp
stos
rcrb
out
loop
jae
call
mov
ror
push
out
and
jbe
loopne
movsb
xchg
cmp
sarl
sahf
fwait
push
add
ss
sub
add
xor
xchg
inc
and
mov
pop
mov
movsl
cmp
inc
push
cmp
scas
ja
insl
xlat
mov
xchg
pop
inc
mov
cmp
and
cwtl
dec
jnp
outsb
in
loopne
or
hlt
pop
cmpsl
push
sub
push
adc
ror
mov
lods
insl
push
cmpsb
cmp
imul
mov
sti
xor
jle
fwait
in
jo
pop
insl
inc
jg
sub
insl
adc
xlat
jno
js
sbb
pop
in
push
and
cmp
ss
movsb
mov
jg
aas
jmp
mov
mov
inc
out
mov
xlat
lea
ds
out
ja
je
mov
jge
rolb
ds
dec
mov
ja
pusha
jp
out
repz
int
adcl
lock
adc
cmpsl
lock
dec
lret
xchg
jnp
xor
insb
pop
out
add
repnz
addr16
jg
mov
xor
xchg
xor
fidivl
and
adc
push
cmp
sbb
loopne,pt
ja
sbb
push
sti
xlat
mov
imul
inc
mov
scas
ljmp
loopne
or
loopne
rcrl
fs
push
add
cmp
cwtl
push
ret
jbe
jno
popa
popf
xchg
call
sbb
and
adc
adc
cmp
jecxz
pushf
add
cmp
xchg
aas
aas
dec
pop
test
sti
test
sub
mov
mov
flds
push
es
push
movsb
sahf
cmp
loop
fucom
pop
iret
pop
or
andb
jl
shld
sub
rorl
or
cwtl
mov
mov
inc
cld
mov
mov
fcoml
ss
mov
xchg
push
dec
cmp
in
xchg
sbb
pop
test
es
xchg
je
popf
negl
dec
sbb
pop
fwait
pop
sbb
mov
adc
xchg
hlt
stos
subb
mov
push
repz
jmp
jg
testl
dec
xchg
or
mov
add
and
push
mov
cmp
js
lock
insb
push
mov
xchg
cmp
xchg
fisubl
orl
ret
mov
mov
aad
push
jmp
or
incl
adc
inc
sub
fxch
rcrl
dec
lea
cmp
cltd
mov
mov
adcb
imul
icebp
loope
fstpt
imul
adc
pop
daa
bound
xchg
int
dec
mov
repnz
push
jbe
je
xchg
adc
cmp
or
jae
mov
pop
inc
mov
inc
push
fistps
cmp
out
jne
or
mov
dec
sbb
jno
mov
pusha
mov
jbe
daa
dec
mov
sub
arpl
addl
mov
mov
xchg
shrl
cmc
mov
rcll
lods
jl
sub
mov
jno
and
mov
mov
flds
aas
sbb
sbb
xor
push
inc
xchg
fnstsw
mov
mov
mov
int
push
mov
pop
mov
jl
or
lea
pop
dec
pop
jns
sbb
mov
bound
lret
add
mov
sbb
loop
jecxz
aam
cltd
test
sar
dec
mov
test
jmp
add
sub
jae
addl
jle
pop
xchg
daa
adc
pop
aam
sub
popa
push
ja
ss
mov
lds
dec
lret
out
sub
out
cs
subl
aaa
add
jge
push
jae
pop
lds
je
mov
xor
jg
mov
clc
or
mov
movsb
xchg
aas
notl
mov
inc
out
lds
mov
sbb
arpl
push
inc
das
jle
pop
movsb
xchg
leave
outsl
sbb
fdivrl
sub
in
nop
mov
inc
cltd
lds
xor
lock
orb
push
push
pop
or
xor
iret
sub
in
pop
test
ljmp
xor
outsb
sbb
xchg
into
mov
outsb
jg
test
lds
in
lea
mov
and
jnp
repz
icebp
sub
popf
insb
and
mov
xchg
mov
lret
out
xchg
cs
inc
iret
js
push
mov
rolb
fsts
shll
jl
enter
or
cmp
add
xchg
or
mov
mov
sbb
loope
lock
arpl
js
out
cmp
mov
lcall
and
mov
and
dec
jp
jp
mov
mov
out
adc
shll
cltd
xor
or
sub
lret
adc
pop
loopne
hlt
push
mov
cmp
inc
js
cld
add
mov
fistpll
xchg
or
mov
outsb
mov
add
xchg
sub
bnd
les
or
mov
jne
test
mov
aas
xor
sti
adc
ja
iret
xchg
inc
adc
into
pop
dec
loopne
mov
mov
popf
pop
iret
push
imul
and
iret
pop
mov
std
pop
testl
adc
ds
std
popf
sub
mov
adc
jo
mov
jbe
in
push
xor
inc
mov
mov
mov
jae
or
in
shrb
mov
add
cmp
push
add
adc
pop
push
adc
mov
fidivl
repnz
sub
adc
dec
cld
mov
aaa
lahf
std
out
mov
fnstenv
and
pcmpeqw
cmp
movsl
push
shl
adc
ffree
dec
clc
and
shl
xchg
and
pushf
out
mov
test
cmpsl
jmp
or
iret
hlt
sub
push
subl
cltd
in
push
mov
nop
jg
xor
movsb
mov
mov
mov
fsts
sub
fildl
mov
mov
adc
lock
adc
cli
aam
fwait
mov
sbb
cmpsb
mov
repnz
cmpsb
pxor
loopne
mov
jne
cs
daa
adc
push
add
jnp
vphaddbq
mov
inc
cli
adc
fdivrs
pop
mov
or
sbb
rcrb
pop
inc
xchg
cmp
sbb
mov
add
pop
adc
shlb
loop
aam
stos
int
popa
rorb
fadd
mov
adc
jl
cmp
mov
in
addl
fcoml
cmp
int
negl
test
mov
ror
dec
fsubrs
lea
cwtl
pushf
aas
in
xlat
stc
jp
add
mov
fdivrs
out
add
inc
rcr
arpl
mov
sub
mov
xchg
clc
cld
scas
add
adc
stos
cmp
cmpsl
dec
movsl
out
mov
lretw
inc
push
arpl
test
fsubs
push
cmpsb
mov
movsl
jg
int3
mov
lret
jno
call
or
push
inc
xchg
xchg
pop
test
movsl
xchg
adc
xchg
xlat
fistps
repz
xlat
test
pop
cmovnp
xor
sub
push
jg
test
and
daa
outsb
mov
roll
mov
cmp
rcl
loopne
call
pop
mov
cli
xchg
adc
push
into
fcmovnb
adcl
sbb
or
mov
jno
add
dec
out
pop
mov
cmp
sbbl
push
out
and
xchg
rcrl
mov
mov
test
add
xchg
stc
test
das
add
gs
xor
fcomip
sub
movsb
fbld
xchg
and
jne
jge
outsl
cs
lods
push
mov
mov
mov
jmp
xor
xor
test
inc
adc
inc
stos
sub
push
and
push
push
mov
cmp
cmp
xor
push
jae
jns
mov
sbb
call
push
daa
pop
or
cmpsb
out
or
push
outsl
insl
cmpsb
mov
mov
icebp
mov
jecxz
pop
popf
setae
imul
push
cmp
and
cmpsb
fsubr
fcomps
adc
test
mov
mov
shl
adc
pusha
pop
jge
xchg
push
scas
xlat
mov
pop
arpl
dec
xchg
adc
mov
enter
mov
pop
fldl
mov
stos
sub
xchg
mov
or
mov
push
cmpsb
fs
jmp
insl
cwtl
push
push
ret
flds
mov
fcompl
adc
sbb
xchg
mov
out
pop
pop
lret
jno
iret
fdivrl
sbb
les
xor
xor
push
pop
dec
mov
shlb
xchg
or
in
dec
scas
in
es
or
dec
cmp
in
xchg
jno
mov
xchg
int3
jp
jb
fadds
stc
aas
lret
pop
mov
add
mov
jge
push
stc
ficompl
adc
and
sub
mov
mov
jo
repnz
loop
xor
stos
adc
mov
mov
push
jge
ret
dec
push
loop
xor
icebp
out
xchg
cmpsl
pop
test
mov
pusha
imul
call
or
insl
call
lcall
mov
xor
jno
dec
lods
sbb
sahf
pop
push
jle
je
xchg
lret
mov
pop
loope
xor
mov
movsb
push
jecxz
movsl
test
mov
xchg
pop
iret
inc
leave
out
xchg
call
xor
enter
push
and
xor
lcall
cld
mov
push
int3
xor
aam
push
cmc
dec
pusha
sub
sub
icebp
adc
mov
and
leave
int3
imul
dec
pop
ret
or
jg
jle
jle
insb
sbbb
mov
sbb
stos
inc
jb
pop
leave
lods
shlb
movsl
jg
into
xor
mov
xor
inc
add
fsubs
call
sub
inc
fcmovnb
jge
dec
cmpsl
xor
cwtl
shl
loopne
sub
sub
sti
lds
cmp
xor
mov
mov
push
loopne
add
popf
mov
and
push
jle
je
ja
xchg
idiv
lea
xchg
shll
xchg
xchg
in
cmpsl
cmc
popf
add
fwait
sbb
rorb
mov
pop
sub
into
mov
bound
int3
xchg
clc
and
jge
insl
sub
out
inc
scas
pop
sbb
push
movsl
aad
sarl
inc
jmp
aam
mov
mov
stc
xor
jp
jmp
out
jb
mov
and
pop
and
mulb
mov
popa
stos
xor
lods
daa
adc
stos
je
dec
push
repz
push
cmpl
push
mov
mov
aam
adc
testb
push
push
scas
lods
or
and
xor
addr16
and
inc
addr16
jno
mov
ds
dec
xchg
loopne
sarb
bound
add
pusha
xchg
mov
out
mulb
xchg
popf
insl
mov
hlt
shll
cld
adc
jbe
into
call
adc
push
xor
or
daa
scas
rolb
mov
pop
cld
push
repnz
xlat
cmp
cmp
mov
mov
mov
negl
dec
lret
add
or
sub
xchg
cli
inc
jb
int
mov
dec
mov
dec
js
aad
sti
and
ja
push
pop
jns
push
ss
test
mov
jbe
fwait
aad
xchg
aas
scas
cld
and
sub
jle
fs
and
data16
cmp
jno
lea
inc
xchg
sub
jb
pop
sub
movsb
cmpsb
cmp
add
and
adc
insb
mov
mov
mov
loop
sahf
idivb
repz
inc
jbe
dec
xor
gs
pop
cli
push
and
fstpl
shlb
arpl
inc
outsb
ljmp
add
cmp
push
add
cmp
adc
lods
xchg
enter
dec
cld
jb
outsb
loop
inc
aaa
loopne
inc
mov
xor
pop
nop
stos
outsb
push
mov
dec
and
add
test
lods
mov
xlat
ret
int3
mov
imul
enter
ja
pusha
or
mov
jp
popa
fstps
test
lock
push
lcall
stos
nop
or
es
je
ja
popf
dec
mov
mov
gs
mov
and
push
mov
dec
push
sub
pop
mov
jle
and
stos
dec
dec
pop
hlt
push
dec
inc
fdivrl
jg
mov
scas
pusha
add
cwtl
int3
repz
push
or
adc
sarb
daa
lret
test
xor
hlt
lods
mov
add
jbe
out
sbb
clc
pop
adc
mov
sbb
xchg
mov
add
adc
das
ret
pop
js
das
jbe
inc
mov
xchg
fwait
shll
lock
push
iret
add
imul
mov
inc
jne
pop
dec
push
jmp
pop
mulb
lahf
sub
jg
js
add
cmpsl
mov
push
test
loope
inc
mov
dec
xchg
jmp
xchg
dec
pop
jbe
sbb
lret
test
out
mov
sbb
sti
mov
mov
out
mul
jge
xlat
mov
jl
inc
rorl
xchg
ja,pn
and
fistpl
xchg
add
sbb
cmp
call
xchg
push
add
add
mov
dec
dec
insb
out
sub
push
pop
sub
or
xor
fst
outsb
out
das
jbe
pop
mov
mov
sub
sti
jne
inc
jno
in
push
cmp
movsl
in
or
xchg
lret
xchg
mov
data16
push
xchg
iret
icebp
pop
pop
insb
sbb
fs
push
outsb
ds
in
call
xchg
cmpsb
xchg
or
lods
jl
push
into
aaa
aas
lahf
mov
xchg
insl
int3
mov
in
cld
cmp
mov
mov
push
mov
ja
movsl
lea
mov
adc
pop
adc
icebp
ret
cmp
inc
lret
jmp
sub
outsl
out
add
scas
ret
jle
repnz
sbb
xacquire
sub
cmp
mov
imul
and
mov
pop
pop
adc
cmp
xor
pusha
inc
stc
cs
movsb
xchg
jb
add
dec
je
mov
das
pushl
push
adc
inc
sbb
aaa
ja
dec
pop
js
dec
xor
sub
out
cli
fs
pop
hlt
xchg
addr16
imul
je
and
xchg
push
xchg
inc
cmp
mov
cli
xor
inc
cmp
lock
scas
call
cmp
test
in
lcall
mov
push
sti
sub
sub
ss
xchg
dec
pusha
xor
sbb
adc
sub
sub
insb
mov
dec
jae
jo
mov
cltd
ja
ret
push
rol
adc
cmp
in
add
mov
je
push
loope
sub
mov
icebp
sahf
push
ror
cmp
cmp
mov
push
dec
cs
ds
dec
pop
in
mov
pop
jmp
sbb
push
jno
in
sub
xlat
movsb
pop
pusha
and
rcl
shrl
xchg
ja
mov
lret
andb
and
xchg
fcmovnb
xchg
nop
ljmp
nop
mov
mulb
adc
push
sbbb
sbb
push
push
test
or
jp
loop
jp
jns
cltd
int
enter
je
arpl
add
mov
std
xchg
mov
cld
imul
xchg
stos
adc
push
out
cmpsl
popa
fwait
xchg
aam
xlat
sbb
mov
sbb
push
and
je
lahf
sbb
mov
test
add
scas
lea
and
fcoms
daa
fiaddl
mov
adc
ljmp
mov
xchg
jo
cld
pop
call
lcall
fnstenv
ficompl
add
shrl
insb
adc
sub
push
ret
loopne
inc
mov
ret
ja
popa
inc
jo
fstpl
sbb
fistl
or
jl
pop
idivl
lods
in
sbb
sub
add
pop
jmp
out
clc
jecxz
or
dec
adc
add
mov
mov
loope
dec
hlt
repnz
loopne
js
or
xor
sub
stos
bound
ss
movsl
lahf
shrl
inc
in
add
mov
in
xchg
cld
adc
fxch
es
jnp
imul
jmp
add
ds
sub
dec
dec
fildl
sahf
fiadds
loop
andl
xor
mov
adcl
call
cmp
lea
es
mov
adc
arpl
adc
add
nop
hlt
mov
or
mov
jge
xor
addps
int
push
dec
push
lods
mov
mov
mov
outsb
insl
push
push
fsubp
in
inc
testl
inc
sbb
sbbl
push
add
sub
xor
hlt
inc
insb
mov
repnz
fxam
arpl
push
jmp
mov
jno
sub
mov
hlt
fdivr
insb
add
pushf
movsl
ret
enter
add
jbe
or
or
pop
sub
adc
or
push
mov
ret
fcompl
push
or
daa
nop
lea
jne
sub
add
mov
push
ret
fisubs
insl
in
je
decb
mov
push
lods
adc
or
outsb
cmp
aas
pop
mov
rcrb
sbb
and
push
pop
xor
aas
bound
lods
pop
shrl
xchg
out
nop
iret
aad
sub
mov
popf
fnstsw
inc
jbe
lods
cmpsl
rol
push
ja
fbstp
std
jl
pop
popf
cmp
push
cmp
fadds
mov
les
cmc
aam
mov
mov
xchg
jg
jg
iret
pop
insl
jae
jmp
jns
popf
pop
pop
scas
xor
mov
popf
push
inc
push
sub
enter
add
clc
andl
jp
gs
xchg
ficomps
sub
jle
fsubl
inc
fsubl
sarl
mov
cmpsb
outsl
cli
into
fyl2xp1
mov
lds
outsb
mov
ja
aaa
sub
pop
les
dec
in
cld
pop
xchg
and
mov
in
negb
scas
adc
push
out
mov
or
push
xchg
mov
and
icebp
fisttpll
cmp
cmc
scas
test
ret
scas
xor
or
popa
int3
sbb
jns
sub
mov
mov
adc
sbb
inc
jecxz
jg
pop
add
xlat
push
jbe
in
jg
dec
sub
or
mov
ss
in
and
out
mov
sbb
jmp
inc
ljmp
ret
xor
pop
mov
xor
jo
inc
jnp
imul
mov
pusha
mov
dec
xchg
mov
jno
int3
cmp
loope
inc
icebp
add
push
mov
rclb
sbb
insl
dec
push
repz
int
insl
ss
jge
jbe
jg
jb
mov
dec
xchg
or
imul
jbe
xor
scas
dec
mov
inc
es
push
mov
stos
jmp
lds
add
xchg
cli
adc
dec
pop
push
jbe
clc
or
rolb
ljmp
jnp
fwait
inc
jae
mov
test
adc
mov
andb
sub
js
clc
push
add
xor
rcl
mov
sub
out
out
xor
mov
mov
cmpsl
and
fnstenv
sahf
sub
mov
lea
cmp
gs
pop
add
xor
xchg
loope
mov
push
push
add
sahf
fisubrs
dec
adc
popa
and
popf
fs
pop
andl
and
stc
popf
sub
mov
jae
pop
jnp
push
xchg
cmpsl
pop
mov
push
mov
cmp
adc
xchg
and
test
push
jo
arpl
pop
mov
sbb
or
add
or
cltd
push
jmp
pop
pop
mov
mov
cmp
or
imul
js
jns
std
dec
pop
mov
sub
outsl
fnstcw
movsb
loop
ficompl
xorl
inc
hlt
mov
enter
popa
or
in
js
fisttpl
dec
jne
sub
xchg
sub
insl
dec
imul
mov
or
xchg
push
jp
mov
inc
push
lret
sbb
in
bound
jae
xlat
sub
jle
push
stc
adc
lcall
inc
mov
lret
sbb
mov
roll
push
lret
icebp
push
dec
popf
pop
xor
mov
mov
xor
divb
test
cmp
xor
daa
cs
mov
push
enter
and
sub
pusha
fstps
lret
bound
mov
shl
jmp
pop
lahf
bound
bound
pop
popa
push
dec
adc
dec
loope
lcall
mov
xchg
mov
mov
and
pop
sbb
stos
andl
addr16
inc
sub
aad
dec
mov
insl
ds
call
pop
lock
xor
mov
gs
pushf
push
test
cmpb
cli
fsubrl
js
fisubs
mov
clc
sti
lret
inc
fists
mov
jb
cs
dec
lods
push
lds
pop
push
sti
cmpsb
mov
ja
out
jne
sti
data16
mov
je
fcmovb
gs
mov
or
imul
push
lock
test
inc
rolb
iret
stc
mov
mov
xchg
xchg
int3
adc
and
in
mov
mov
add
cmp
push
or
into
fadds
and
pusha
cmp
mov
xor
fcomps
js
jns
cltd
das
xlat
popf
or
xor
xor
pop
xchg
popa
push
icebp
push
outsl
aad
jo
mov
sub
mov
sub
sbb
movsl
cmp
xchg
mov
pop
ret
pop
fwait
mov
mov
add
jge
xchg
dec
js
and
in
mov
sbb
xchg
sti
mov
push
xchg
test
shlb
pop
add
add
xchg
out
test
xchg
dec
icebp
inc
xchg
pop
popf
mov
lret
jle
les
cmpsl
in
jae
dec
test
sarb
xor
popf
mov
popf
outsb
jmp
dec
jae
add
mov
test
aad
cmp
arpl
shrl
mov
mov
sub
test
or
push
pop
mov
fidivs
adc
stos
xor
jae
jno
or
jg
lods
push
fs
pop
mov
adc
pop
xor
das
xchg
rol
mov
jg
push
mov
lea
cli
cmp
inc
test
test
daa
lahf
lahf
inc
fmuls
adc
mov
pushf
subl
fidivl
pop
test
inc
test
pushf
lret
mov
xchg
xlat
sbb
pop
or
add
cwtl
hlt
mov
nop
cmc
rep
and
fsubrl
or
jecxz
rcrb
daa
jae
push
xchg
mov
cld
push
jp
jns
adc
fdivrl
ljmp
mov
and
mov
xor
icebp
inc
add
adcb
pushf
mov
pop
jecxz
jle
into
cld
arpl
jnp
xlat
sbbl
jo
jmp
push
movsb
push
test
ss
push
fwait
xchg
xor
loopne
je
bswap
adc
fisubrs
lds
iret
inc
in
test
jl
aas
lret
and
out
sbb
cld
or
inc
mov
icebp
mov
fxch
mov
xor
pop
mov
lods
cmp
gs
sub
test
pop
xchg
lea
hlt
jns
and
sub
lcall
add
jge
cmp
leave
fsts
leave
xchg
cmpsl
and
insl
add
aas
mov
push
xchg
push
cmc
jle
outsb
mov
mov
mov
add
inc
jge
or
jb
jo
iret
mov
fstps
jb
dec
cltd
xchg
xlat
xor
in
mov
mov
mov
dec
test
jns
enter
into
je
mov
cmpsl
cli
add
imul
push
push
xor
scas
lret
and
add
addr16
lahf
in
mov
jecxz
inc
psrlq
nop
lods
pop
xchg
out
mov
xchg
imul
das
test
pop
pop
bound
outsl
and
popa
fidivrs
xor
bound
push
sub
jns
lock
cwtl
pop
cmp
or
frstor
bound
jmp
fisttpll
cmp
or
inc
xchg
testl
jo
aam
mov
inc
push
fld
in
mov
shrl
or
inc
clc
lcall
in
aam
nop
cmp
or
xchg
pop
dec
imul
cmpsb
and
dec
leave
or
je
rorb
xchg
scas
or
xchg
cmpsl
and
cmp
ja
mov
pop
lock
push
aaa
inc
nop
sarl
push
sub
add
mov
jmp
inc
dec
and
scas
cltd
sahf
xchg
push
pusha
add
xor
xor
xor
dec
sbb
dec
adc
cs
cwtl
xchg
jb
mov
add
jnp
mov
lock
and
jnp
movl
and
bound
lea
mov
cli
cs
sti
negb
jecxz
ljmp
mov
insl
lods
ret
mov
and
add
sub
outsl
aas
cmc
pushf
lcall
xor
push
xchg
pop
push
cltd
xor
add
cmp
cld
cld
jnp
sub
jecxz
adc
mov
mov
cmp
adc
xchg
stos
jne
mov
dec
cmpsl
xchg
dec
jmp
shll
mov
fisubrl
push
ret
sbb
inc
push
cmp
xorl
lcall
subb
repnz
cwtl
lea
call
mov
rol
out
rcll
adc
inc
pop
pop
xor
gs
sbb
and
iret
jae
call
fcomps
adc
and
and
pshufw
add
sbb
push
shlb
sbb
lahf
addr16
adc
sbb
filds
test
cld
mov
cmpl
pop
and
lods
ds
subl
xor
xor
aas
xlat
cmp
lods
addr16
fstl
movsl
in
adc
test
rdpmc
ficoml
mov
push
iret
lahf
lahf
pop
clc
adc
and
cli
add
jl
xlat
mov
push
mov
mov
xor
and
xor
mov
imul
sub
pop
pop
out
mov
stos
test
jo
out
inc
inc
and
idiv
cltd
sahf
fs
in
jl
sbb
loope
or
sub
inc
cmpl
push
gs
aas
test
adc
xchg
jp
fcoms
cmp
popa
cmp
mov
mov
pusha
or
or
in
lods
movsb
mov
jb
mov
imul
pushf
in
dec
or
testb
scas
push
ja
xlat
cmp
xchg
addr16
ret
xor
adc
fidivrl
mov
jne
daa
call
inc
lret
stos
cwtl
pop
jp
mov
pop
jnp
cltd
cmpl
out
dec
int3
enter
rolb
decb
je
lock
mov
cmp
or
cs
add
or
cmp
jl
call
cmp
pop
dec
inc
nop
fnstcw
outsb
sti
inc
mov
imul
cmp
and
repz
inc
cmpsl
xor
mov
adc
xchg
dec
notb
les
rcrb
outsl
pop
push
mov
push
test
daa
ljmp
jnp
stc
sarl
cs
mov
fsts
dec
out
negl
movsb
push
ja
jl
pop
ret
jle
xlat
jg
dec
push
or
in
enter
repz
cmp
fistpll
in
ja
stc
xchg
cmp
loopne
sbb
pop
mov
sahf
jno
inc
pop
push
je
jmp
into
psrlq
daa
addr16
mov
mov
xor
int
pop
mov
xor
push
fwait
ljmp
icebp
xchg
pop
adc
xor
push
add
addr16
pop
insb
daa
ljmp
and
enter
cmp
mov
bnd
sub
fucom
mov
ficomps
scas
adc
sub
push
ja
dec
test
inc
pop
lock
lods
cwtl
es
fs
sti
std
out
repz
jp
add
popf
sahf
shll
jmp
loope
cmp
stc
push
xchg
mov
adc
ljmp
dec
xor
xchg
out
adc
test
mov
sbb
imul
mov
adc
adc
out
and
push
js
aam
xor
das
addr16
ja
xor
add
mov
cmp
rol
test
jae
and
leave
pop
pusha
bound
dec
mov
popa
loopne
pop
sbb
mov
cli
xchg
mov
loop
cmp
fwait
outsb
cwtl
inc
lods
jp
push
pop
dec
neg
xor
sub
mov
mov
sbb
push
mov
push
lcall
aad
xor
xlat
sub
cmp
les
adc
cltd
je
pop
aaa
mov
cmpsb
jge
pop
and
call
mov
pop
pushf
addr16
mov
add
scas
loop
loopne
in
stos
fdivrl
inc
sbb
push
cltd
dec
mov
pusha
push
sub
cmc
dec
stos
xchg
sahf
dec
sub
jb
into
scas
inc
add
popf
je
lcall
sub
popa
jae
pop
ror
jae
adc
aam
xchg
push
addr16
add
dec
stc
in
imul
xlat
push
adcb
inc
cmc
add
push
xchg
filds
mov
daa
sub
push
std
scas
mov
into
push
adc
and
add
cmp
rorl
and
movsl
jae
add
cmp
fisttps
push
out
pop
cmpl
popa
xchg
in
filds
mov
or
pop
loopne
mov
addr16
addr16
xor
hlt
and
dec
sub
mov
pop
sub
pop
out
pushf
or
fs
mov
push
out
fiaddl
pop
int
test
sbb
add
mov
xchg
sbb
mov
add
jle
sub
ds
loopne,pt
and
in
std
jmp
ds
pop
dec
stos
pop
cmc
add
xor
mov
cmp
sahf
fisttpll
test
inc
sub
iret
xor
sbb
outsb
loop
sti
or
leave
dec
hlt
orl
cld
mov
or
xorl
mov
and
faddl
dec
sbb
xlat
cmp
ror
xor
jo
in
dec
lret
mov
sbb
xchg
test
sub
mov
or
xchg
mov
push
insl
stos
leave
sti
jge
nop
mov
repnz
test
mov
andb
das
addb
jo
stc
out
aaa
or
push
adc
sbb
jbe
mull
cmp
lods
aas
repz
lret
dec
sbb
pop
test
adc
sbb
popa
jnp
cmp
mov
add
xor
mov
clc
cli
mov
rcrl
std
adc
cmp
ds
jo
int3
jmp
sbb
pop
sub
loope
fbstp
shr
pop
jmp
cmp
jnp
mov
cmp
out
mov
adc
pop
adc
mov
aaa
dec
dec
shll
mov
insb
jo
lock
inc
aad
data16
aad
popa
adc
jnp
jl
out
pop
adc
addr16
in
pop
and
push
lret
stc
pusha
andb
mov
adc
inc
xchg
inc
bound
orl
jmp
test
mov
inc
lea
pop
popf
aaa
aam
lahf
jae
shll
mov
mov
push
aas
xchg
es
frstor
rcll
stc
leave
or
jecxz
mov
fsubrs
mov
add
lret
jb
fidivrs
or
ljmp
pop
in
dec
rorb
dec
xchg
cmp
popf
or
dec
test
dec
pop
mov
loop
fcoml
js
adcl
loope
test
mov
pop
movsb
push
test
adc
sub
imul
inc
jp
mov
es
mov
fnclex
pop
out
sbb
jle
test
data16
mov
gs
push
xchg
out
add
jmp
clc
shll
fdivr
sbb
ret
aam
fmul
cli
dec
mov
loopne
inc
ljmp
cmc
mov
and
push
aad
mov
neg
fs
lret
lods
in
mov
bound
lods
insb
pop
jmp
loop
pop
fwait
ljmp
into
and
pop
mov
push
ret
lret
pushf
sbb
ret
dec
adc
jle
pop
out
ret
movsb
cmp
xchg
rcrb
mov
mov
mov
movsb
pop
fsubs
xor
push
fcoms
add
add
insb
lock
rorl
addr16
or
jge
bound
loopne
ja
xchg
les
ljmp
or
mov
and
std
sub
shll
je
pop
gs
push
pop
adc
dec
sub
sub
xchg
shll
out
push
mov
sub
sbb
mov
popf
add
popf
adc
fldl
jg
sub
ja
sub
push
rclb
xchg
cmpb
mov
test
je
sub
push
push
mov
mov
mov
aam
push
jae
ficoml
pop
test
push
jmp
jle
xchg
int
insl
pop
cmp
xchg
rcr
insb
mov
fdivl
push
imul
call
lea
xor
push
pop
ror
add
in
or
movsb
sbb
push
add
adc
add
cmp
or
xor
dec
add
test
mov
fdivs
outsb
mov
push
je
popa
mov
pop
sub
pop
mov
and
xchg
jno
stc
lock
fwait
push
jae
jle
icebp
fbstp
repnz
lret
ret
mov
in
mov
ficomps
mov
xchg
decb
jbe
inc
add
xlat
or
insl
mov
in
sbb
int3
xor
das
push
punpcklbw
mov
mov
cltd
add
aaa
add
adc
cli
shll
or
push
inc
sbb
pushf
aam
loopne
push
sbb
sbb
insb
aas
rorl
adc
cltd
insl
notl
push
push
sbb
jge,pt
lods
sarb
jg
arpl
xor
loopne
adc
push
xchg
ret
ja
in
dec
cld
adc
int3
cmp
lds
xchg
push
cltd
lret
sub
aad
int3
outsl
test
faddl
cmpsl
adc
in
pop
push
loop
cmpl
pushf
jns
popf
xchg
enter
or
adc
or
loopne
aaa
fmuls
mov
jge
add
loope
into
test
push
inc
imulb
sbb
hlt
push
and
or
cli
cmp
mov
pusha
ret
scas
add
or
std
ret
mov
jl
cmp
pextrw
xchg
xchg
in
fsts
inc
out
ja
pop
inc
sahf
or
xchg
ja
mov
xlat
and
pop
ljmp
pop
call
dec
mov
jge
pop
insl
sub
xchg
sahf
in
push
aad
xchg
fxch
sub
aad
pop
or
cs
rorb
lahf
sbb
jbe
scas
mov
inc
in
sub
imul
shlb
xlat
mov
sti
push
imul
rcrb
adc
lret
add
xor
inc
sbb
add
cmp
out
mov
loope
icebp
data16
mov
int3
ret
mov
repnz
inc
pop
out
pushf
ss
negl
lds
icebp
imull
dec
movsl
mov
mov
scas
loope
pop
xchg
or
sbb
push
fsts
dec
jl
ror
pop
and
dec
mov
cmp
sub
sub
xchg
imul
mov
push
push
cmp
mov
bound
xor
pusha
scas
and
push
xor
xor
jno
dec
add
inc
fisttpl
lods
add
mov
enter
je
cmp
cmp
dec
cmpsb
push
pop
movsl
test
inc
add
jg
add
jne
jecxz
lds
xor
fmulp
jnp
sub
push
pop
outsb
jle
xchg
mov
cmc
mov
xchg
negb
ret
inc
imul
aam
std
outsb
mov
dec
push
mov
out
incl
pop
pop
inc
aas
jmp
and
fsts
in
add
or
gs
out
pop
test
lahf
push
jecxz
mov
push
add
dec
daa
pushf
imul
mov
stos
push
rorb
arpl
sub
insl
int3
js
mov
inc
dec
mul
push
cmp
jmp
mov
dec
jb
call
dec
mov
xchg
in
rcll
mov
xchg
inc
push
mov
cmp
pop
daa
stos
fsubl
popa
loopne
sbb
call
repnz
mov
mov
mov
fwait
adc
or
test
sub
jmp
push
cwtl
pop
out
inc
mov
xchg
mov
pop
jne
call
push
ret
cmp
cmc
mov
sub
and
mov
out
in
shlb
mov
mov
lea
jno
push
test
fwait
repz
xor
xchg
sub
out
dec
cmpsl
lock
aam
cwtl
int3
in
cmp
jle
sbbl
into
jmp
cmp
pusha
add
stc
scas
dec
ja
mov
mov
add
or
mov
dec
das
loope
push
sarl
mov
out
gs
lds
and
lods
mov
insl
flds
out
cmp
xchg
call
mov
stc
lods
loope
shll
adc
lea
mov
mov
lret
add
pop
or
in
sub
test
cmp
add
arpl
xchg
aas
push
add
mov
and
adc
cmp
push
mov
mov
push
jle
add
je
mov
cmp
lret
cmpsb
scas
mov
push
jne
je
add
mov
sbb
jle
add
dec
jno
lret
std
je
and
out
popa
adc
cwtl
jg
aas
push
cwtl
xor
out
and
out
xor
and
popf
mov
push
insl
mov
shl
add
pop
xchg
nop
fs
or
in
dec
and
scas
imul
and
dec
jae
lock
inc
stos
sbb
mov
test
mov
and
fsubrs
jmp
dec
adc
push
or
sub
out
add
inc
add
pusha
jo
adc
adc
inc
repz
jle
jae
mov
pop
dec
and
je
test
jno
fadds
jbe
stos
popa
sbb
outsl
sahf
inc
or
fisubs
mov
pusha
mov
pushf
dec
sbb
jbe
movsb
pop
cmp
shlb
sahf
cs
adc
jle
test
fcompl
rcl
or
xchg
cwtl
cmp
mov
fisttpll
out
sub
push
pop
insl
xchg
jmp
fdivrs
imul
orl
cmp
xor
insb
lret
movsb
push
and
push
add
push
jg
dec
testl
push
scas
ret
mov
cmpsl
push
cmc
mov
xor
repz
into
in
pop
aam
xchg
in
push
inc
sub
and
and
adc
mov
mov
mov
movsl
dec
inc
mov
test
je
bound
mov
mov
pop
jne
loop
sub
outsl
add
in
scas
mov
jp
test
out
es
add
rorl
hlt
in
or
out
push
cmp
insl
dec
push
and
cmp
lods
mov
push
xchg
mov
pop
dec
sbb
pop
lret
push
xor
sahf
or
xor
sahf
enter
in
ret
mov
sub
mov
pop
add
enter
lods
aam
scas
xchg
xorb
icebp
push
cmp
inc
mov
dec
pop
mov
mov
aam
addr16
jp
daa
loopne
sub
movsl
aam
cmp
xchg
xchg
rorl
jae
cmp
data16
daa
shr
pop
dec
jb
pop
sbb
cmp
aaa
jbe
call
addr16
pop
imul
add
or
mov
push
dec
fstpl
and
call
xor
jmp
ds
pop
test
outsb
pop
clc
cmc
bound
nop
andb
xlat
sbb
mov
scas
pop
or
lods
roll
repz
clc
mov
subb
dec
adc
jno
aaa
jbe
cs
cli
adc
or
mov
ja
pop
fisubrs
outsl
movsb
outsl
cmp
daa
lret
push
sbb
and
pop
xlat
stos
or
shlb
lahf
cmp
popa
sbb
data16
pop
pop
push
rsqrtps
fincstp
aas
xorl
out
movsl
sub
mov
sub
cmp
ljmp
imul
fisttps
jae
in
sahf
sbb
mov
dec
lahf
mov
mov
dec
and
push
mov
ja
scas
call
and
in
add
lcall
pop
notb
inc
xor
xchg
sbb
lahf
sbb
xlat
xchg
pop
add
and
jg
jl
pushf
fiadds
repnz
pushf
jbe
mov
cmp
push
ret
sbb
repz
adc
pop
pop
dec
aas
sub
aaa
mov
pop
lock
adc
sbbl
xor
xor
fs
pop
mov
mov
loopne
xor
popf
cltd
fs
or
fcompl
fs
pop
push
pop
dec
dec
add
xchg
and
xor
repz
enter
inc
sub
mov
sbb
es
movsb
mov
in
jbe
pop
sub
and
cwtl
out
sub
xchg
aaa
ds
sbb
add
mov
sahf
pop
xchg
popa
mov
popf
pop
mov
ds
and
adc
lret
fisttpl
or
sbb
test
loopne
subb
xor
jge
push
inc
daa
or
dec
les
cmpsl
popf
jno
lds
insb
push
les
mov
insb
adc
push
pop
xchg
or
rclb
sbb
adc
mov
push
stos
pop
mov
sbb
add
pop
ja
push
add
pop
xchg
sbb
ret
or
cmp
jmp
sbb
jl
dec
mov
mov
fistl
push
mov
mov
xchg
test
cmp
jbe
je
mov
call
aam
lods
daa
cs
fsubrp
and
mov
xlat
jno
pop
inc
sub
mov
push
adc
cmp
outsl
out
aaa
in
sub
js
mov
cs
or
idiv
pop
lods
sbb
sbb
jge
fldenv
push
or
cmpsb
and
or
divb
and
in
fldcw
in
dec
jne
jae
outsb
test
icebp
mov
loopne
orl
cmp
dec
or
or
call
arpl
out
mov
sbb
inc
dec
aas
fisttps
sahf
push
cmp
sbb
sbb
lods
cmp
jae
lds
popf
xor
dec
xchg
jmp
ja
cmpsb
lea
jg
addr16
test
fists
mov
add
cmc
aad
push
rcr
inc
jle
cli
mov
sbb
or
lahf
xchg
cmpsb
adc
test
ror
sub
out
mov
insl
icebp
cmp
cmpsl
je
push
ja
fmuls
mov
jg
nop
push
je
xor
mov
enter
std
call
jno
sbb
addl
sbb
xor
adc
fimuls
pop
pop
inc
mov
fisubrl
inc
mov
loopne
cld
push
jg
xchg
jl
adc
test
cmp
addr16
shrb
imul
xchg
int
pop
sbb
adc
xchg
iret
adc
inc
push
pop
jmp
push
cmc
lcall
addl
xchg
mull
push
jo
roll
call
xor
ret
iret
xor
jne
cmpsl
mov
aaa
push
push
sub
je
jle
add
jae
test
cmp
jmp
adc
mov
push
test
sbb
xchg
sbb
daa
push
dec
pop
mov
dec
js
aaa
push
xchg
int3
cmp
add
lahf
not
xchg
mov
mov
nop
lea
lret
bound
cmp
jae
xchg
xchg
and
xor
pop
loope
add
sbb
rorl
add
movsb
sbb
push
lods
dec
xchg
push
push
xor
loopne
mov
cmpsb
and
fs
adc
divl
mov
pop
xor
add
dec
mov
lret
in
or
push
fdivr
jno
jno
xor
sub
jnp
outsb
test
stos
dec
lock
notl
je
daa
sti
aas
cmp
push
repz
add
mov
out
xor
lods
test
jne
outsb
pop
pop
sahf
mov
leave
js
repnz
movsl
fisubl
mov
dec
sub
jns
or
loop
out
xchg
xchg
enter
loope
xor
ret
cli
cmp
sub
push
xchg
scas
into
sbb
cs
jo
popf
xor
scas
ss
pop
pop
enter
mov
dec
dec
add
add
lds
sbb
scas
int
test
shll
cmp
movsb
sti
insb
popf
movsl
add
out
stc
clc
mov
dec
lea
shlb
sbb
sub
mov
cmpl
and
addr16
pop
iret
cmpsb
or
leave
push
cmp
cmp
push
dec
stos
out
in
mov
push
insb
into
cli
in
push
imul
sahf
ret
test
imul
fcmovnb
ret
mov
rcr
dec
sub
mov
sbbb
cli
push
mov
das
out
dec
and
mov
push
xchg
xchg
fwait
mov
sub
pop
dec
test
adc
test
orl
testl
fs
xchg
fwait
and
push
push
xor
push
mov
popa
push
adc
lea
pop
movsl
push
and
and
xchg
and
jecxz
jmp
dec
push
test
cs
cltd
jns
add
popf
std
sub
aas
ljmp
cmp
daa
or
pop
dec
pop
add
push
shrl
jno
aas
jbe
cmp
shl
imul
clc
aaa
popf
cmp
jb
shrl
stos
shlb
inc
and
lcall
test
jae
out
rcl
push
cwtl
mov
push
push
xor
cld
idivb
rcr
jns
push
sbb
pop
pop
sbb
lock
shr
inc
out
push
sbb
mov
bound
lahf
loopne
test
xchg
add
mov
test
inc
jnp
xchg
dec
enter
pop
ljmp
xchg
mov
fldl2e
and
mov
ret
or
xor
mov
or
jae
and
xorl
sub
pusha
insl
movsb
aad
mov
xchg
sub
inc
stc
cmp
pop
lods
push
fmuls
cmp
cmp
inc
xchg
testb
sub
xchg
push
loope
outsb
mov
scas
mov
mov
mov
addr16
sbb
lret
out
push
inc
xchg
push
jge
pop
mov
and
push
or
inc
cltd
shll
dec
fs
aaa
mov
and
adc
cmc
adc
mov
sub
xor
and
xchg
clc
push
and
or
je
push
das
pop
aas
lahf
les
inc
lds
cmp
addr16
stos
rclb
inc
pop
xor
mov
push
gs
jle
push
mov
je
xchg
push
lcall
mov
ss
xchg
xor
push
idivl
mov
adc
jle
jmp
mov
stos
push
cmp
es
push
bound
push
cld
mov
mov
mov
cld
mov
pop
push
pop
sub
jecxz
inc
shr
popf
mov
mov
and
inc
mov
out
add
call
cmp
mov
xchg
neg
int3
sbb
xchg
in
adc
pushf
es
xor
push
push
mov
idiv
in
sub
repz
xchg
jle
outsb
sbbb
mov
inc
clc
aad
test
or
aaa
xor
mov
and
lret
and
imul
push
ret
push
sub
and
and
pop
stos
lahf
shll
adc
inc
xor
lds
push
jp
cld
inc
lret
les
add
pop
xchg
outsb
pop
jnp
mov
add
inc
iret
cwtl
in
adc
lods
ljmp
mov
xchg
dec
outsl
in
gs
xor
js
and
roll
push
mov
xchg
repz
add
insl
xchg
xchg
lds
cmp
add
gs
and
cmpsl
sub
jmp
rcrb
mov
lret
les
cmpsl
ror
movsb
sbb
cmp
jp
stos
movaps
pop
jns
ret
add
cmpsb
call
inc
mov
jg
in
loopne
push
and
daa
jge
sbb
out
xor
pop
gs
pop
adc
aas
sarb
iret
in
mov
stos
mov
push
cmp
or
adcb
test
push
jbe
lods
adc
dec
push
imul
mov
ficoml
lock
pop
clc
subl
repz
cmp
in
sub
jmp
icebp
cmp
pop
ret
or
cmp
add
add
jae
and
dec
outsl
cli
lods
adc
lret
add
pushf
js
sub
popf
fdivs
dec
jb
xlat
clc
and
xor
jns
sub
shr
jl
fbstp
pop
mov
enter
fmull
mov
adc
jo
rcrl
orl
push
xchg
sub
jmp
out
pop
jnp
daa
popa
pop
aam
and
ret
sub
out
int3
or
xchg
pop
mov
dec
xlat
rolb
dec
adc
outsb
pop
xchg
mov
out
cltd
arpl
mov
popa
jno
stc
mov
fadds
lcall
inc
fstpt
inc
test
mov
sbb
inc
cmp
and
sti
sbb
dec
sahf
jae
xchg
rcrl
mov
sub
jmp
dec
pop
pop
ret
pushw
std
mov
call
ljmp
out
push
xchg
or
pop
and
push
loop
scas
dec
stos
loope
mov
adc
test
jo
int
insl
aas
dec
flds
repz
aad
inc
in
xchg
loopne
cmpsb
xor
mov
sbb
pop
repz
shrb
adcb
jle
aas
cmp
adc
scas
movsb
imul
sub
push
jge
sub
js
mov
ret
fst
or
imulb
jns
jne
or
ljmp
mov
es
inc
mov
sbb
rolb
mov
out
pop
rol
pop
dec
mov
andl
out
divl
mov
or
addb
xlat
cmp
movsb
adc
fldl
or
pop
lds
pop
push
adc
mov
or
scas
push
jge
dec
ja
flds
loop
inc
xor
and
inc
dec
mov
sub
pop
cld
mov
popa
js
pop
jb
inc
push
adc
or
cmpsl
shl
push
cmp
lods
fcoms
mov
icebp
test
lock
inc
jmp
mov
lea
cmp
ss
sub
jne
pop
push
pop
xor
push
movsl
aas
push
iret
mov
push
cmp
in
push
sub
xor
xchg
daa
leave
outsl
mov
fildll
sarb
cld
cltd
or
outsb
dec
cmp
adc
adc
jnp
pop
add
pop
aas
subl
cmc
add
ja
or
aad
repz
imull
jecxz
sbb
push
dec
xchg
mov
not
sbb
pushf
mov
sub
popa
jne
cltd
pop
lea
cmp
pop
xchg
repz
inc
sahf
push
mov
xorl
push
jp
ss
jne
mov
clc
clc
inc
jecxz
nop
jg
and
call
and
add
lret
adc
leave
cld
std
in
into
jbe
mov
cmp
cmpsl
jbe
adc
inc
pusha
dec
add
pusha
sahf
mov
mov
mov
mov
xlat
mov
cmp
mov
fdivrl
std
xchg
xor
dec
rclb
jb
cmp
subb
xchg
add
ret
push
cmp
cmpsl
inc
ret
ror
mov
fdivl
fwait
mov
out
mov
jne
jmp
aas
mov
mov
xchg
loope
pusha
scas
mov
pop
xor
aaa
cmp
cmc
xchg
stos
fs
and
fxch
mov
or
das
lods
pushf
es
iret
cmpsl
push
dec
montmul
cmpsb
xchg
push
sbb
jns
dec
mov
xor
cmp
xchg
enter
ret
adc
icebp
mov
jecxz
lods
arpl
cmpl
fwait
mov
imul
cwtl
popf
mov
dec
jecxz
jbe
mov
es
call
leave
jle,pn
cmpl
sub
push
jnp
pusha
mov
ffreep
or
pushf
adc
or
dec
rorl
jb
out
inc
out
in
jmp
lret
and
mov
in
push
movsl
jns
pop
loop
ret
enter
xor
cmc
call
iret
popf
pop
in
pop
mov
insl
lods
popf
lods
mov
cmc
fs
dec
and
fs
mov
dec
pop
mov
inc
loope
mov
pop
in
push
cwtl
pop
out
cmc
jns
lahf
sbb
pop
lret
or
ret
out
roll
dec
xor
aad
jne
popa
in
mov
jl
shll
push
lods
push
pusha
lds
inc
xchg
pop
ss
js
dec
cwtl
adc
push
fxch
gs
aas
cmc
push
push
pop
sbb
fmull
adc
iret
addr16
mov
pusha
pop
popf
test
test
xchg
or
push
sbb
jg
clc
dec
movsl
inc
popf
push
pop
divb
push
add
not
dec
outsb
add
psadbw
xchg
adc
sub
jg
sbb
xchg
mov
pop
clc
mov
or
mov
into
xchg
icebp
rcll
repnz
ljmp
orb
nop
add
adc
mov
jnp
in
movsb
popf
mov
lcall
rcr
inc
pop
loope
sbb
fcompl
scas
adc
fwait
aas
icebp
cmpl
fs
mov
dec
rcr
sub
xor
xor
cld
hlt
jecxz
inc
lcall
int3
lods
xchg
adc
sbb
jg
cmpsl
lcall
mov
xor
or
xor
mov
mov
mov
mov
imul
jnp
jo
add
or
dec
push
dec
mov
sub
imul
insb
fdivl
xor
push
pop
inc
push
or
push
int
cmp
sbb
aas
jno
in
add
popa
mov
push
popf
aam
push
mov
and
push
jl
inc
sti
xchg
sub
add
movsl
daa
push
jbe
xchg
push
cmpsl
sub
push
or
push
ljmp
sub
pop
sub
jle
push
sbb
out
jo
sti
jge
mov
in
lcall
adcl
xchg
subl
push
int
stc
mov
leave
push
jnp
cmp
push
adc
sub
sub
or
dec
mov
pushf
gs
fidivl
inc
lds
mov
ss
mov
lahf
sahf
cli
leave
test
out
iret
pop
sub
jnp
push
mov
pop
adc
dec
xchg
cld
mov
fucomi
sub
pop
movb
imul
and
jo
dec
xchg
xor
mov
rcrl
pop
add
andb
subb
jns
mov
imul
rclb
mov
mov
cld
cmp
lods
imulb
add
push
cltd
enter
mov
fdivrs
mov
cmpsl
rorl
pop
or
gs
or
int3
les
insb
sbb
lods
jne
or
jg
pop
mov
mov
xlat
imull
add
jo
mov
mov
fiaddl
mov
inc
scas
mov
pop
outsl
test
orb
test
lcall
pop
push
xor
mov
jl
inc
cmp
fbld
outsb
data16
cmp
incb
out
pop
lret
dec
push
mov
push
scas
sarb
add
dec
mov
rcr
jns
ficoms
mov
mov
and
ss
mov
rcrb
aaa
add
data16
push
faddp
sti
rcl
mov
and
xor
jno
sub
je
xchg
cmp
cmc
adc
in
mulb
arpl
dec
sti
inc
subl
mov
sbb
sub
xlat
sbb
iret
xchg
fiaddl
test
fidivl
pop
std
pop
jb
or
pusha
jle
sub
push
pop
jo
pop
dec
popf
loopne
xchg
ret
dec
push
pop
push
dec
addl
push
and
arpl
sbb
int
adc
cmpsl
repnz
dec
outsb
add
movsb
les
pushf
aas
arpl
jns
divl
fisttpll
mov
lahf
dec
sub
repz
mov
pop
int3
dec
sbb
jle
call
out
test
push
inc
insb
leave
outsl
cli
imul
add
sub
int3
test
jbe
divl
xchg
sarb
js
push
mov
dec
in
xbegin
and
imul
mov
sbb
int3
dec
and
lea
push
inc
das
loope
jbe
xchg
cwtl
jne
cltd
inc
repnz
addr16
fstps
es
in
lea
das
mov
or
je
cld
fdivs
push
adcb
scas
mov
lods
subb
add
repnz
dec
sub
jmp
xchg
negb
test
test
loopne
adc
jbe
mov
aad
pop
xchg
push
mov
in
jb
aad
rolb
pop
inc
or
push
mov
outsb
ror
push
jae
scas
cld
sub
sbb
sub
and
ret
lds
inc
mov
push
test
fsubl
pop
sub
dec
sub
lods
and
xor
jae
and
pop
or
xor
fsubp
lret
shrb
lea
nop
mov
adc
xchg
scas
mov
imul
xor
stc
mov
movsb
sbb
mov
lea
adc
addr16
xchg
ljmp
ljmp
fistl
mov
cmp
sbb
into
push
sbb
jae
lret
mov
mov
das
push
fsubrp
pop
cld
pushf
xchg
fisttpll
lods
cmp
bound
mov
cmp
je
push
jmp
mov
insb
inc
xchg
inc
xor
mov
inc
data16
xchg
js
push
xlat
mov
xlat
nop
push
xlat
sbb
cmp
popf
mov
aaa
nop
mov
pop
sub
mov
and
sub
pop
push
xor
jge
cmp
or
lcall
adc
xchg
push
push
aam
and
js
push
and
pop
repz
or
orl
mov
pop
fucomip
mov
push
pop
out
insb
imul
lcall
mov
loope
mov
mov
cld
lahf
pop
push
mov
test
or
hlt
xlat
pushf
sbb
in
adc
sub
rorl
icebp
pop
add
rcrl
cltd
cmp
pop
dec
cmp
push
fldt
outsl
addr16
stc
push
xlat
sbb
push
mov
mov
cmc
pop
cs
fwait
lcall
ljmp
pusha
loope
in
mov
ret
xor
pop
jns
pop
fmul
ljmp
mov
mov
adc
xchg
dec
push
adc
sub
adcl
cmc
addb
cmp
sbbb
gs
inc
roll
pushf
in
pop
push
pop
or
fidivl
pusha
mov
xor
or
jle
aaa
loopne
mov
fsubrl
mov
sahf
sbb
push
lea
pusha
push
mov
scas
ret
fs
dec
xchg
push
jae
jb
inc
les
jl
jmp
dec
cs
mov
popf
mov
ljmp
notb
jecxz
xorl
scas
push
add
rclb
jnp
mov
mov
daa
pop
sub
fnstsw
ret
cmpsl
popf
add
cmpsb
nop
lods
iret
xorl
leave
scas
cmp
repz
fmuls
cld
adc
cmp
int
test
pop
mov
mov
mov
xor
push
test
pop
push
adc
fs
das
jno
xchg
xchg
loope
test
dec
ljmp
sub
and
rcll
mov
add
pop
cld
xchg
or
ds
mov
pop
xchg
mov
push
clc
jmp
jae
add
inc
imul
xor
jmp
push
mov
xchg
fsubrl
mov
fidivrl
daa
mov
and
pop
inc
cmc
pop
mov
inc
push
push
lock
pushf
test
stos
and
inc
or
push
and
loopne
leave
lea
test
inc
and
mov
jbe
inc
movsl
sub
rcrb
out
out
daa
loope
ja
or
rclb
adc
adcb
push
nop
pop
mov
stos
sbb
ljmp
push
xor
sub
push
push
xor
add
push
mov
xor
pushf
cltd
pop
cmpsl
cltd
mov
in
ret
sub
jmp
push
push
ret
inc
mov
push
mov
mov
mov
dec
testb
aaa
dec
dec
loopne
or
sbb
inc
repz
push
mov
mov
and
fstpl
loopne
sub
in
cmp
ret
adc
fnclex
dec
xor
mov
xchg
mov
xchg
inc
bnd
inc
jp
fldcw
add
in
dec
pop
int3
mov
sbb
add
rclb
orl
and
mov
and
in
push
cmp
inc
movsb
in
cmp
out
int
add
es
mov
out
push
popf
sub
ret
xlat
mov
push
or
sbb
dec
xor
mov
insl
add
dec
imul
mov
mov
xchg
repz
jb
xor
jl
add
push
fistpll
sbb
sbb
jb
mov
call
mov
cli
fucomip
js
add
loopne
rcrb
ret
adc
dec
shrb
mov
iret
in
pusha
mov
inc
sti
pop
xor
int3
sti
addr16
call
adc
or
mov
mov
fisubrl
into
imul
ja
xlat
int3
imul
hlt
push
sbb
sti
outsb
jl
mov
adc
fsubrl
inc
loope
cmp
test
pop
mov
xchg
out
mov
not
xchg
jb
mov
sbb
xchg
movsl
pop
inc
sbb
getsec
sti
lcall
sub
repz
mov
fsts
sub
inc
xor
and
sbb
fmulp
pop
xor
adc
js
cmp
in
lds
mov
xchg
cmp
in
add
es
mov
int3
fs
aam
orb
and
mov
fiadds
int
adc
sti
dec
lods
outsl
loopne
ja
and
jne
jno
mov
sbb
xchg
jl
jno
pop
shll
xlat
cmc
stc
aad
push
lock
ss
pcmpgtd
bound
pop
stos
jae
add
dec
movsb
cmp
sbb
adc
lea
pop
insl
fimull
int3
cmp
sar
movl
ret
xor
sbb
pop
es
adc
fst
mov
mov
jnp
mov
lds
fidivrl
rcl
jbe
notl
mov
pop
jmp
pop
jmp
mov
pop
jne
rclb
cmp
pop
cmpsb
aad
cmp
cmc
mov
pop
push
ret
push
cmp
inc
cmp
or
sti
stc
roll
mov
lock
les
add
cmpsb
mull
xchg
push
sub
int
mov
dec
xorl
stos
pusha
jne
ret
rcpps
repnz
adc
aad
divl
cs
fcmovnu
push
xor
push
insb
jnp
jmp
xchg
mov
and
aad
enter
fidivrs
cli
jno
cmc
sub
or
in
mov
fiadds
subb
mov
push
fldl
punpcklbw
dec
adc
jmp
loop
mov
mov
fildll
push
cmp
ss
clc
ja
adc
popa
scas
rol
push
jecxz
fldenv
push
mov
mov
ss
jbe
das
imul
imul
push
jge
roll
in
xor
gs
lock
push
sub
jne
dec
mov
mov
mov
cld
popf
inc
mov
fimull
xorl
dec
push
jl
mov
adc
pop
push
ljmp
jmp
mov
sub
xor
push
bound
jmp
in
inc
and
clc
push
xor
sub
cmp
jno
jg
jmp
mov
sub
js
jecxz
movl
mov
inc
push
mov
xchg
inc
adc
mov
in
sbb
sarb
rclb
les
xchg
aad
in
std
pop
dec
lahf
lea
or
sub
inc
dec
sbb
jbe
xchg
sbb
mov
jge
test
sub
aam
daa
push
aam
cmp
les
inc
xchg
xor
mov
int3
mov
push
ljmp
iret
incl
pop
pushf
lods
cmpsl
or
xchg
jmp
push
sti
int
testb
es
fiadds
or
icebp
les
push
fldcw
ss
mov
xchg
mov
mov
addr16
les
mov
or
xor
mov
cmpsl
es
pop
xor
mov
adc
mov
imul
push
sub
test
lods
sub
mov
aaa
jl
aam
dec
dec
out
push
sub
fists
mov
int3
jmp
cmc
fisubrl
inc
pushaw
sbb
fisubrl
inc
fiadds
push
adc
pop
push
push
mov
aam
addr16
mov
fsubrs
and
jg
or
in
out
repnz
bound
out
pop
mov
cmp
jecxz
dec
std
xor
and
test
xchg
lds
pop
clc
in
jb
push
mov
push
ret
imul
outsl
xchg
bound
div
mov
jne
fildl
cs
das
pushf
push
pop
push
stos
fsubrl
and
lret
in
lock
sti
ljmp
addr16
cmp
push
mov
mov
icebp
les
inc
dec
dec
jl
mov
into
sbb
pop
or
int
stos
inc
cmpsl
dec
or
mov
inc
xor
pop
xchg
add
mov
les
test
cs
xchg
inc
popa
in
cmpsb
mov
xchg
inc
adc
xor
mov
push
popf
sbbl
and
cmp
in
lret
outsb
fsts
xchg
dec
imul
jge
in
jmp
sub
inc
fs
test
insb
pop
ss
xor
pushf
popa
data16
xchg
aad
mov
dec
mov
adc
push
sbb
hlt
lcall
jp
cmpsb
add
or
addb
inc
mov
adc
cmpb
cwtl
jae
es
iret
sbb
popf
inc
cs
inc
loop
mov
jecxz
add
jge
call
and
sbb
int3
movsl
ja
mov
out
mov
repnz
or
dec
lods
call
sbb
out
das
out
cmp
cld
adc
adc
cmpsl
or
mov
dec
mov
mov
mov
sbb
enter
mov
cmp
mov
jnp
cmp
popa
adc
out
push
das
popa
inc
mov
sahf
das
dec
sub
into
insl
aas
dec
dec
ror
jecxz
lcall
stc
sub
and
inc
cmp
jnp
jno
or
bound
stos
imul
sbb
push
pop
aaa
inc
les
cld
mov
rcll
mov
outsb
movswl
cmc
fadd
pop
mov
cmp
jae
xchg
loop
or
roll
mov
movsl
sbb
int3
cmp
fistps
jae
xor
cmp
dec
mov
cmpsl
inc
push
inc
or
inc
jge
sbb
dec
and
mov
gs
out
clc
pop
in
into
repz
lret
into
and
push
or
push
mov
cmpsl
mov
fwait
jb
scas
and
icebp
stos
add
adc
and
imul
stc
cltd
vphaddubq
mov
out
gs
imul
cmp
mov
hlt
xor
adcb
inc
pushf
jns
push
sbb
ljmp
repz
rorb
sub
xlat
xchg
or
cmp
inc
dec
fs
pop
into
cmp
mov
jg
pop
and
addr16
push
inc
cwtl
lods
outsl
inc
mov
push
insb
push
mov
inc
inc
sbb
xchg
outsl
cli
mov
mov
xor
or
nop
popf
mov
test
addl
or
push
shrl
push
js
adc
mov
fiadds
addr16
dec
jge
push
popf
ss
mov
push
sbb
outsb
jae
xchg
stos
enter
aad
push
loop
push
push
in
scas
jp
test
cmpsl
push
push
and
jge,pt
insl
insb
dec
adc
imul
mov
pop
test
popa
stc
jbe
lods
jmp
xchg
ffree
setns
jmp
cmp
int3
push
pushf
cli
mov
sti
out
pusha
pop
and
adc
sub
fbld
lds
aas
movsb
fimuls
pop
pop
adc
inc
push
subl
xchg
fistps
cmp
mov
xor
scas
aas
ret
mov
repz
mov
sbb
les
es
pop
xor
fdivr
js
jb
movsl
dec
dec
lds
mov
ret
pop
mov
je
pop
sbb
cld
mov
mov
and
or
repz
inc
ret
les
fcoml
repz
out
fadds
loop
xor
ja
push
pop
ror
inc
data16
fimuls
lahf
sarl
pop
inc
and
mov
pop
dec
jmp
mov
dec
leave
mov
ds
dec
mov
push
push
cmpsb
lock
pop
mov
xor
aas
add
loopne
mov
data16
sbb
dec
mov
outsl
idivl
adc
pop
sbb
lds
fcmovb
clc
adc
cmpsl
and
add
pop
push
xchg
fwait
lcall
cmpsl
popf
popf
mov
ljmpw
and
in
mov
dec
testb
aas
dec
dec
scas
andb
pop
fisubl
ret
xchg
mov
xchg
test
sbb
loopne
out
and
in
icebp
test
or
xor
and
push
add
stos
cmpsl
jne
push
fldt
stc
adc
push
int
popf
scas
sahf
sub
mov
or
in
mov
cltd
out
stc
cmpsb
jns
lds
mov
pop
rorl
inc
inc
sbb
and
daa
stos
lahf
popf
pop
mov
shl
fsubrs
and
xchg
insb
les
push
sbb
popa
push
jmp
or
jo
inc
lods
inc
adc
pop
mov
xchg
xlat
popa
xor
cs
ds
jns
dec
pop
mov
push
fildll
sbb
xor
xchg
lods
lods
push
mov
dec
test
and
xchg
xor
into
xchg
adc
aas
mov
mov
mov
in
inc
mov
aaa
stc
pop
dec
rolb
int3
shll
outsb
sbb
cmpsl
std
data16
pop
xchg
mov
mov
pop
jns
movsb
cmp
movsb
pop
push
adc
repnz
sub
aad
lea
jg
pop
add
mov
jnp
pop
clc
popa
aam
xchg
add
push
xchg
out
or
jns
mov
and
stc
cmpsl
jne
mov
shll
pop
mov
sbb
pushf
je,pn
dec
sbb
inc
xchg
sbb
loop
repz
sbb
icebp
pop
jo
push
orb
push
bound
jge
movsl
mov
and
loopne
orl
jo
in
in
and
xor
pop
in
jmp
gs
mov
lcall
cmp
ficomps
jno
dec
mov
xchg
sub
add
dec
jne
mov
cmp
in
add
es
mov
fmul
adc
jbe
pop
and
mov
call
into
jle
movsl
inc
in
xchg
mov
lock
mov
in
mov
cmp
hlt
scas
mov
cmp
pop
jge
xchg
cmpsl
or
push
hlt
sub
cmp
add
sbb
cltd
mov
jne
jmp
mov
pop
pop
lock
out
inc
jg
call
adc
iret
sbb
inc
add
adc
fsubs
outsl
minps
cmp
or
push
sbbl
gs
shrl
push
inc
dec
push
pushf
cmpl
jns
int
rclb
mov
lods
add
adc
nop
nop
leave
xor
jge
lcall
stos
clc
sub
pop
leave
cmp
mov
xlat
jecxz
rclb
call
faddl
pop
int3
repz
add
fadd
add
jbe
mov
or
es
in
lret
mov
xchg
lahf
movsb
push
pop
fsubl
mov
and
insb
cmp
sti
sub
push
fwait
jp
iret
sahf
divb
mov
jp
lods
fdivs
sub
inc
adc
leave
clc
jbe
dec
mov
repz
push
jb
jge
sbb
cmp
jecxz
in
mov
cwtl
mov
mov
rolb
out
push
out
mov
pop
aam
shll
out
mov
add
cmpsb
inc
pusha
fildl
sbb
in
clc
mov
ret
lods
cmp
or
dec
stos
inc
das
mov
mull
mov
sbb
inc
jbe
pop
ds
ret
jp
outsb
xchg
add
pop
push
cmp
out
out
xlat
xlat
sarl
or
push
mov
repz
int3
inc
gs
xchg
add
mov
dec
inc
sbb
jne
ds
test
mov
or
and
into
aas
data16
jns
dec
out
stc
call
adc
mov
movl
push
cmpl
or
adc
jae
pop
sub
incl
add
pop
jmp
stos
sub
inc
push
movsb
dec
cmpsl
push
stos
in
in
ficoml
and
scas
out
inc
cmc
stos
cmp
aad
imul
cmp
pop
xchg
xlat
add
or
cld
test
sub
mov
or
loop
stos
sbb
sub
cmp
sbb
sbb
call
lods
sbb
xlat
or
nop
adc
movsl
pop
mov
fnstenv
test
add
movsb
repnz
mov
mov
or
push
out
les
daa
test
dec
xchg
imul
pop
shll
js
mov
lods
push
pusha
jne
jg
mov
sbb
cmc
lret
add
add
add
dec
mov
jnp
xchg
pop
cltd
xor
aaa
sar
xchg
or
cs
sub
pop
dec
jp
mov
or
pop
cmp
aaa
sub
aam
movsl
ljmp
imul
gs
lahf
in
ret
pop
mov
sub
clc
xor
and
loope
stc
and
fwait
mov
sti
nop
iret
dec
cltd
jle
out
add
cmp
aam
and
sub
in
pop
sub
clc
fidivrs
jne
out
push
sti
stos
jb
jno
arpl
movl
stos
mov
andb
clc
lock
cld
shrb
mov
rolb
jo
sbb
gs
test
out
imul
pop
cmp
insb
lret
hlt
and
mov
and
mov
je
or
cs
lret
mov
icebp
xchg
and
popf
cwtl
jl
scas
fldenv
add
std
loope
mov
jmp
lds
dec
mov
adc
int3
icebp
cltd
and
cs
leave
pop
mov
fs
or
lcall
sub
pand
into
push
int
scas
cmc
dec
xorb
vpsubsw
mov
cmp
jge
xchg
jg
mov
inc
push
and
push
rorl
cltd
rol
mov
inc
push
in
pop
test
shl
mov
int
inc
add
pop
outsb
push
das
in
enter
or
push
sub
or
popa
mov
repnz
xchg
outsb
mov
movsb
cmp
push
je
std
cli
ret
sbb
push
shlb
push
int3
jo
popa
pop
mov
cmp
xchg
xchg
fnstsw
sar
mov
into
loopne
fucomp
add
sub
test
jae
sub
in
pop
negb
pop
movsl
sahf
sbb
mov
or
das
mov
enter
mov
push
mov
inc
sub
int
in
aam
xor
pusha
adc
mov
setge
nop
xor
mov
adc
xchg
popf
stc
icebp
xchg
inc
mov
and
xchg
mov
lods
mov
scas
mov
das
aam
dec
or
push
gs
repnz
cmc
sbb
sub
shll
pop
clc
in
xchg
fsubrp
and
daa
sar
dec
clc
and
pop
nop
adc
lahf
sbb
push
mov
aam
mov
cmp
or
ret
xchg
call
out
xor
ja
sub
enter
cmp
andb
stos
mov
cmp
mov
loopne
mov
add
ljmp
adc
pop
push
add
sbb
xor
xchg
daa
rorb
jb
pop
push
repnz
leave
mov
cmpsl
mov
or
call
sahf
scas
xor
jne
andl
or
xor
lahf
rcrl
pop
xor
push
rorl
add
push
push
data16
test
pop
pop
cmpl
pop
adc
mov
mov
pop
mov
je
cwtl
sbb
mov
pop
jne
rcll
es
jmp
inc
cmpb
test
xchg
jmp
andps
or
fbstp
mov
and
jmp
xlat
jmp
pushw
dec
mov
mov
shll
scas
and
insl
fnsave
mov
pop
sub
testb
jge
or
movsl
mov
imul
and
enter
cmp
imul
mov
or
setl
fwait
add
pop
bound
into
jle
xor
aas
repz
out
mov
mov
popa
push
add
push
negl
shlb
adc
push
xchg
cltd
and
fstps
arpl
adc
mov
cmpl
outsl
jno
dec
leave
jle
ljmp
cmpsl
cmp
fildl
mov
xchg
stos
mov
sahf
xchg
subl
mov
outsl
cmp
ret
gs
adc
xchg
lahf
lahf
mull
inc
cmpsb
push
jecxz
xchg
clc
lcall
inc
add
mov
cmpsl
into
jg
cmp
cmp
jno
mov
mov
pusha
das
testb
and
lods
or
loopne
pop
inc
out
and
mov
aam
mov
aas
addr16
jmp
sbb
mov
or
mov
mov
scas
dec
int3
xchg
xor
call
cmp
icebp
shll
pusha
push
xor
inc
pop
bnd
fs
and
inc
mov
push
scas
pusha
push
scas
sub
aad
data16
sbb
inc
adc
insb
sub
sub
inc
fdivl
loope
push
push
xchg
cmpsl
cmp
dec
mov
test
mov
cli
enter
cltd
or
mov
stos
loopne
clc
push
push
std
int3
xorl
xchg
jecxz
mov
and
jno
xor
jne
cwtl
xorb
movsl
loopne
movsl
out
stos
lods
xchg
cmpsl
jno
ljmp
cmp
aam
xchg
nop
sub
scas
mov
clc
cmp
lods
mov
adc
mov
inc
fisubs
jo
push
mov
pop
inc
push
leave
pop
push
xlat
push
mov
mov
sti
popa
lcall
addr16
dec
dec
or
and
lcall
cmp
xchg
cwtl
bound
mov
shl
push
pmuludq
mov
sub
and
push
xor
bound
inc
or
adcb
fidivs
movsb
cld
int
sbb
hlt
pop
adc
jmp
ret
xchg
in
out
mov
js
mov
cmp
and
push
xlat
inc
sbb
addr16
mov
jnp
jecxz
pushf
fdivs
add
push
inc
push
cmpsl
mov
mov
dec
mov
in
xlat
std
lret
mov
mov
or
lea
fsubs
das
aas
std
lods
movsb
mov
lret
fiadds
mov
fstpl
and
rclb
push
dec
pop
hlt
enter
fidivl
test
and
std
xchg
push
pop
cwtl
shrl
dec
mov
cmp
add
push
or
andl
mov
mov
mov
mov
nop
mov
jbe
out
rcrb
add
cs
pusha
mov
sub
outsl
mov
jl
or
testl
cmp
lcall
lret
sub
pop
cmp
notl
inc
loopne
fistpll
jp
leave
fistpll
push
mov
imul
pushf
mov
pop
addr16
jno
iret
in
mov
mov
jp
jmp
dec
jne
pop
cli
xchg
dec
jns
mov
pop
lock
daa
xor
outsb
shll
ss
or
sti
rorb
repnz
lahf
mov
fsubrs
inc
jns
cmpsb
gs
inc
push
mov
sbbl
or
ds
enter
fisttpl
inc
addr16
les
sarb
loop
out
push
dec
andb
sub
jns
fwait
inc
popf
cmp
ss
adcb
lea
mov
lds
lods
outsl
fcoms
pop
pop
fs
mov
sub
nop
das
or
push
mov
clc
push
gs
xorl
pop
xor
mov
dec
xchg
std
sub
mov
arpl
fbld
mov
mov
je
pusha
xchg
setbe
scas
sub
imulb
enter
loop
fdivl
pop
sahf
sarb
ja
jb
sub
adc
iret
fs
nop
jno
lcall
jge
lcall
pop
ret
mov
pop
add
mov
sub
int3
test
adc
lahf
sub
loopne
mov
popf
es
or
mov
or
sar
les
add
and
stos
inc
ret
iret
andl
xchg
xchg
in
cmp
bound
jmp
jge
stos
and
shr
mov
lods
clc
addr16
lahf
push
jns
test
dec
shrl
lcall
movsl
imul
repnz
stc
lcall
sub
mov
lret
rorb
insb
bound
and
and
loope
push
fldcw
mov
mov
fsub
out
shll
adc
xor
mov
dec
shlb
mov
mov
and
mov
sub
int
pop
popf
iret
adc
xor
pop
test
inc
or
js
out
cmpsb
mov
lods
rorl
subl
fistps
addr16
jl
push
call
rorb
jae
push
mov
inc
push
jne
mov
je,pt
movsb
int
ret
mov
jbe
mov
aas
pop
mov
adc
std
insb
test
fld
sub
mov
lods
pop
jecxz
lret
test
fcmovbe
popa
add
aam
popf
lret
adc
pusha
mov
sar
aam
iret
pusha
xchg
adc
notb
les
pop
insb
mov
imul
xchg
outsb
loopne
ficoms
push
aaa
xorl
sbb
ljmp
loopne
xor
push
out
les
push
push
cmc
dec
cmp
mov
sbb
ret
sub
cmc
jmp
bound
mov
push
pop
fadd
cld
into
popa
bound
mov
ds
and
ja
sbb
bound
jg
orb
mov
mov
mov
pop
or
xor
adc
lock
cwtl
dec
xor
xlat
xor
mov
jmp
add
push
push
mov
jge
jp
gs
add
int3
dec
mov
dec
jbe
mov
clc
push
movsl
frstor
mov
inc
lods
sti
mov
sbb
push
mov
adc
pop
sub
cmpxchg
push
add
insl
xor
pusha
js
jne
pop
and
dec
mov
repnz
sub
movsb
cmp
fstpl
jbe
std
push
sbb
sub
xor
test
iret
iret
push
pop
jle
fwait
bnd
sbb
por
jno
inc
and
push
clc
mov
xchg
sbb
repz
lcall
vshufps
fs
lea
add
mov
mov
sub
lret
dec
outsb
movsl
sbb
leave
sbb
stos
out
jp
je
out
inc
adc
hlt
cmc
imul
outsl
ficomps
cli
pusha
das
shrb
and
popf
sub
jb
sbbb
xor
push
mov
dec
mov
xchg
sbbb
les
push
xlat
jle
sub
and
insl
cld
and
push
xchg
lods
mov
cmc
out
call
pop
imul
mov
subb
insb
hlt
stos
mov
adcl
adc
ficoml
add
lds
loop
pop
push
sbb
mov
inc
das
dec
xor
loope
pop
out
sahf
hlt
out
imul
sbbb
dec
mov
xchg
xchg
xchg
adc
pop
pop
stc
dec
mov
je
add
in
into
scas
push
sub
push
scas
gs
xlat
sahf
negb
cs
fidivrs
fcomip
cltd
xlat
xchg
out
sub
ljmp
xchg
int
imul
je
scas
pop
xor
int3
testb
adc
loopne
bound
inc
mov
add
out
pop
call
jecxz
xchg
pop
add
repz
jmp
fwait
mov
jmp
adc
in
sbb
fbstp
inc
jecxz
sub
outsl
and
lea
jns
jge
ljmp
out
sbb
arpl
pop
mov
cwtl
xor
xor
mov
adc
aad
data16
int3
fnstsw
xchg
or
je
out
adc
std
mov
sub
stc
sbb
jns
stos
mov
push
sarb
jo
jl
les
sub
sbb
push
mov
inc
or
movl
or
lods
cwtl
add
xchg
fiadds
dec
inc
cmp
lcall
adc
adc
add
pop
sub
cmp
fisubrs
xor
shl
ret
cmp
out
or
jecxz
mov
mov
movsl
test
jbe
mov
cltd
aaa
bndldx
cmp
adc
in
fsubrs
inc
pcmpeqb
mov
and
insb
xor
rclb
mov
jmp
mov
and
repz
pop
add
sbb
dec
sbb
sub
sub
fs
outsb
sub
aas
cmc
cs
push
add
fwait
and
sti
cmpsb
rcrl
mov
or
sub
movsb
ds
add
sbb
xor
push
xor
idivl
or
mov
shl
sbb
rorb
adc
jno
pop
rolb
xchg
iret
cld
push
mov
add
dec
push
adc
push
sub
enter
or
jge
mov
outsl
pop
push
adc
and
pop
out
add
pop
out
mov
ror
inc
inc
push
lret
jo
cmpsl
mov
adc
in
mov
dec
clc
adc
jmp
cmpl
fsubr
cmp
mov
dec
ja
and
lods
add
movsl
cmpsb
mov
cmp
add
inc
adc
sbb
arpl
sub
sbb
push
mov
ds
lahf
mov
dec
mov
mov
push
push
mov
hlt
adc
lock
sub
pushw
or
outsb
mov
mov
arpl
lods
jne
lods
pusha
fs
shll
test
mov
mov
add
idivb
mov
sarb
inc
cmp
or
sbb
rcr
outsl
push
subb
inc
imul
mov
hlt
inc
enter
jnp
dec
ljmp
jg
mov
and
jbe
mov
push
ds
popa
mov
or
ss
iret
insl
andl
in
shrb
sub
gs
hlt
pop
out
cmpsl
pop
arpl
sbbb
jb
sbb
mov
pushf
inc
cmp
je
xor
adc
mov
push
pushf
or
push
pop
pop
in
in
fists
sahf
mov
jecxz
mov
pop
inc
mull
bound
int3
push
and
push
dec
pop
sbb
stos
and
mov
lahf
fstpt
cwtl
lods
movsb
data16
mov
orb
outsl
jns
js
int3
lret
cwtl
mov
loopne
lea
fnsave
sbb
cmc
pusha
sub
inc
into
sub
sbb
pusha
cs
lods
push
mov
js
add
pop
ds
lock
push
push
adcb
inc
pop
add
mov
pop
mov
adc
xlat
mov
mov
xchg
sub
dec
rcrb
sub
fs
cmc
xor
ret
fstl
addr16
stos
or
inc
mov
je
pop
lea
js
push
idiv
and
mov
in
xchg
xchg
sbb
sub
adc
push
test
call
inc
xor
xor
cmp
dec
jae
notb
popa
xor
sub
pop
push
jl
enter
sub
sub
icebp
bound
fistl
ljmp
pop
jle
aam
sbb
pop
cmpsb
jne
fstpt
xchg
in
inc
cmp
add
cmc
mov
adc
lea
fs
test
loopne
mov
xchg
cmp
imul
lcall
mov
mov
in
ds
scas
xchg
cmp
in
mov
or
inc
xchg
mov
mov
aas
imul
pusha
aad
xchg
mov
cltd
cld
push
inc
mov
test
outsb
sub
fdivs
stos
mov
and
push
divb
call
lahf
add
cwtl
cmc
imul
icebp
jne
jno
loop
insb
lock
mov
and
mov
jae
xor
aam
jno
test
sub
xchg
xor
aam
xor
mov
gs
stos
adc
cmp
sarl
jno
cmp
ss
pop
imul
mov
cmc
cld
cld
lahf
popw
dec
cmc
fcoms
aas
cltd
lret
sub
int3
lret
mov
scas
push
xchg
xchg
sti
fwait
inc
ret
into
jne
mov
add
sti
loop
sbb
in
pop
nop
into
cmpsb
push
mov
sbb
out
imulb
and
dec
mov
mov
cmp
pop
int3
mov
gs
cmp
jnp
loop
sbb
in
repz
fs
je
sbb
dec
test
stc
add
mov
outsl
mov
mov
pop
xor
cmp
jns
scas
push
cli
push
fisttps
iret
sub
sbb
aaa
clc
lea
imul
mov
repz
dec
cltd
aad
mov
insl
popa
mov
movsb
or
fisubl
xor
faddl
arpl
test
dec
xor
mov
pop
push
pop
scas
mov
push
mov
ds
mov
add
sti
and
xchg
cmp
les
fsubrl
jnp
push
insl
mov
pop
movsl
mov
subb
xchg
pop
fnstcw
and
iret
inc
adc
out
pop
sbb
icebp
jb
addr16
scas
pop
not
je
dec
add
mov
mov
sub
mov
std
adc
jg
xchg
test
imul
and
xor
fmuls
push
roll
fnstcw
idivb
mov
lahf
cs
inc
roll
push
out
lea
cltd
test
xchg
dec
jb
js
ds
repz
lcall
sbbb
iret
or
mov
dec
jbe
sbb
loope
into
outsb
cmp
xchg
jle
les
push
imul
inc
mov
xor
shll
out
sbb
das
mov
jle
adc
cmpsl
sbb
icebp
inc
mov
sbb
ror
xor
fidivs
mov
lods
adc
push
or
loope
and
rcrl
dec
fwait
jo
mov
call
iret
add
pusha
in
int
dec
sub
push
dec
pushf
out
loop
shlb
lahf
out
mov
jb
lock
dec
ljmp
push
or
sbb
ret
in
lods
pop
or
push
bound
scas
dec
xchg
jmp
mov
mov
add
xchg
sub
out
test
sub
pusha
pop
in
cld
push
sahf
xchg
icebp
subl
pop
movsb
push
lods
dec
imul
dec
adc
sbb
lahf
mov
adc
and
fildl
cmp
jns
dec
bound
jno
test
xchg
sub
shl
sbb
lret
test
dec
in
and
add
sti
outsl
repz
jb
into
divb
testb
pop
imulb
in
sbb
orb
icebp
xor
pop
xor
les
jbe
add
dec
sbb
jb
push
and
push
out
loop
scas
leave
iret
dec
add
mov
daa
sbb
je
mov
in
jno
adc
push
mov
ljmp
sarl
adc
insb
into
mov
mov
jl
pop
add
xchg
divl
ret
int3
test
lods
outsb
loope
jmp
inc
or
xor
rorl
addr16
and
cmpsb
xchg
sbb
dec
daa
xor
test
loopne
xlat
xor
adc
add
mov
cmc
loop
shll
adc
rcr
aad
inc
and
push
lahf
push
ds
dec
mov
add
pop
cmpb
jo
addb
sahf
loop
or
dec
inc
hlt
xor
add
incl
xor
outsb
mov
xchg
scas
rcrb
cli
sub
sbb
popf
test
fsts
popf
xor
or
cwtl
addb
dec
cmpsl
sbb
nop
xor
jns
gs
repz
mul
jle
fcoms
push
pusha
sbb
std
lock
arpl
or
or
std
arpl
cmp
clc
ja
andnps
shll
inc
ds
or
movsl
jbe
inc
gs
dec
inc
xchg
xchg
cmp
lock
repz
mov
test
lods
fs
or
into
in
xchg
sub
add
fdivs
idivb
out
dec
cltd
inc
in
enter
std
fldcw
js
inc
cltd
fcmovne
imul
mov
das
push
pop
nop
out
mov
jmp
mov
lds
shlb
mov
or
mov
ret
in
adc
andb
das
mov
mov
ljmp
lret
and
and
test
dec
lahf
jae
jp
add
aam
call
cwtl
jbe
lea
lods
or
jns
mov
inc
xorb
dec
xor
lock
out
dec
ret
sub
mov
ja
push
js
dec
jno
push
scas
shl
fdivs
out
push
mov
jae
addr16
sbb
dec
jae
mov
outsb
movsb
mov
sbb
das
adcb
xchg
push
addr16
jns
lret
pop
jg
xchg
cli
jne
test
mov
or
mov
lods
sbb
jp
mov
inc
push
popl
mov
sub
addb
pop
fiaddl
add
mov
dec
nop
in
mov
xor
int
add
lods
and
lods
cmp
mov
xchg
fstps
sbb
dec
push
aas
outsl
adc
cwtl
fmull
sbb
imul
mov
aad
push
or
lahf
outsl
call
mov
dec
xor
popf
push
arpl
idivl
xchg
fcomps
sbb
push
sbb
jecxz
mov
jbe
mov
in
sub
out
fwait
stc
ret
mov
iret
xor
dec
xor
lods
jle
push
adc
enter
das
sub
mov
pop
and
cld
xchg
inc
add
ds
or
mov
dec
repz
lahf
std
icebp
jle
dec
mov
push
cmp
lea
or
in
jl
mov
lods
gs
in
cmp
ret
jmp
loopne
inc
fs
pop
aas
xor
push
inc
adc
or
push
mov
sub
outsb
sub
mov
sub
sub
loope
notl
inc
dec
ja
inc
stos
dec
cmpsb
shrl
mov
iret
cmpsb
cmp
cmp
jo
int
jecxz
addb
xchg
fwait
dec
dec
sub
fwait
push
test
mov
pop
push
je
dec
das
add
icebp
xchg
ret
mov
sub
inc
add
popf
add
gs
xchg
out
xchg
maxps
jae
lods
jae
adc
test
adc
ficoml
push
cs
mov
jo
arpl
addr16
adc
and
lods
fldcw
mov
xchg
rcl
pushf
fisubl
cltd
xor
jl
shrl
adc
push
mov
lea
fwait
xchg
out
inc
jmp
data16
mov
loope
xor
jnp
aam
sub
dec
mov
nop
out
in
xchg
dec
repz
mov
aaa
lods
mov
cmpsb
jnp
cmp
jno
daa
jl
sbb
scas
enter
mov
adc
aas
push
and
push
lahf
ja
sbb
xchg
add
pop
cli
adc
stos
mov
fistpll
imul
pop
lret
xchg
jns
shr
adc
lcall
adc
hlt
jl
in
das
sti
xor
pop
stos
mov
cmpsl
sbb
inc
in
sub
arpl
stos
mov
or
arpl
lret
sub
mov
je
inc
dec
or
xor
rol
dec
push
addl
movb
xchg
dec
mov
sub
push
mov
loopne
gs
data16
cmc
mov
jmp
lods
and
mov
or
scas
int
jnp
out
insb
in
pop
sahf
jp
adc
enter
mov
cmp
or
push
fimuls
fdivl
xchg
jl
mov
out
popf
lods
inc
dec
jne
mov
add
and
imul
inc
mov
mov
ljmp
pop
push
imulb
loope
add
xor
mov
scas
mov
jl
fs
pusha
js
lods
cmc
shl
roll
pop
mov
xchg
add
dec
arpl
pop
xchg
add
sar
sarl
push
inc
adc
cmpsl
std
mov
sbb
lods
jmp
xchg
jle
mov
xchg
xor
movsl
push
sbb
dec
lock
nop
out
jne
mov
sub
rcrl
into
data16
push
mov
movsl
adc
push
in
dec
shrb
jb
sti
mov
adc
out
in
push
mov
jle
imul
inc
jbe
sub
push
jle
cwtl
jp
mov
push
adc
fdivrp
xchg
add
jo
sbb
xchg
insb
sub
sbb
aaa
aad
addr16
nop
ret
pop
jle
add
fldcw
push
add
lods
inc
dec
sahf
adc
inc
divb
push
aaa
mov
jmp
jle
adc
dec
stc
or
fs
jne
mov
in
inc
fnsave
push
mov
xchg
inc
and
dec
sub
mov
sub
inc
mov
cmp
push
insb
sbb
shll
adc
andb
ret
and
pop
mov
jecxz
jg
pop
sub
repnz
das
stc
push
scas
add
js
or
loop
test
fdiv
cld
xchg
and
idivl
stc
sub
fbld
add
fidivs
scas
mov
mov
aaa
lock
sub
insb
in
xchg
lds
mov
dec
aas
adc
lret
sahf
push
fsubrs
fbstp
xor
dec
in
pushf
push
lods
popa
dec
xor
fdivl
adc
ss
xor
and
push
mov
dec
rorl
or
jecxz
movsb
lods
dec
cmpsl
and
mov
add
arpl
ds
pop
popf
lret
fwait
sti
adc
jl
fists
fistl
pop
sbb
in
jge
push
cltd
pop
test
add
add
cld
push
push
std
mov
stos
clc
mov
sbb
dec
adc
pop
sbb
enter
fnstsw
fwait
addl
js
addr16
scas
and
xchg
xlat
xchg
xchg
mov
ret
inc
jnp
daa
pop
cmp
push
imul
adc
inc
sahf
inc
daa
aaa
pop
out
mov
arpl
das
xchg
jle
inc
or
mov
dec
cwtl
mov
mov
push
push
adc
jno
xlat
add
xchg
xchg
jbe
mov
add
pushf
lods
loopne
cltd
push
fimuls
push
les
xchg
or
pop
cwtl
add
lcall
out
and
gs
sub
pushf
dec
push
inc
push
cli
sbb
xchg
mov
js
jp
leave
or
cmp
std
call
cmp
mov
in
iret
scas
and
push
sub
xchg
loope
jecxz
rcrl
shll
cs
stos
lret
lret
loop
addb
lahf
dec
lahf
cltd
dec
stos
notl
les
inc
sbb
mov
sbb
xor
cmpsl
imul
mov
inc
outsb
ret
filds
cs
dec
dec
mov
sub
popf
into
mov
cmp
push
nop
add
lret
mov
jmp
fmul
lcall
jbe
scas
gs
lods
inc
and
roll
fcmovb
js
imul
adc
pcmpeqb
sbb
inc
pop
stos
cli
popa
shrl
mov
dec
test
ljmp
sub
pop
lods
les
out
adc
int
xchg
scas
dec
pop
aaa
pop
dec
jmp
jae
jecxz
mov
scas
repz
jo
jae
or
fcmovnb
in
ja
data16
dec
sti
mov
subl
xchg
test
testl
xor
mov
cmp
icebp
sub
push
in
into
push
lock
sbb
das
push
sub
popa
or
das
jecxz
enter
outsl
jp
mov
add
and
movhlps
mov
mov
mov
xchg
jnp
mov
cs
jl
imul
adc
sbb
and
mov
jns
push
adcl
test
stc
dec
ret
jbe
adc
add
mov
lret
mov
pop
leave
dec
shrl
out
decb
in
pop
jb
repz
filds
xor
push
mov
cmovl
lock
or
cltd
mov
adc
ja
mov
in
cmp
data16
mov
fisubs
jnp
stos
push
mov
or
jo
outsl
in
test
push
mov
jge
and
enter
pop
mov
lret
or
or
fstl
push
loop
rolb
cmp
adc
lahf
fs
jle
cmc
mov
scas
rclb
sarb
fildl
sbb
rorl
test
pop
inc
fistps
out
frstor
aas
les
push
movq
enter
push
cmp
push
adc
dec
dec
xchg
out
arpl
xchg
rcrl
movsl
xor
and
scas
xchg
or
loopne
movsb
add
cmpsb
int
movsl
pop
cmp
enter
dec
mov
in
or
add
addb
shlb
xor
hlt
xchg
lcall
das
out
or
ja
add
inc
and
push
loope
or
jp
and
sbb
aaa
ja
or
shl
lds
rol
lea
mov
pop
addr16
insl
jns
je
cmpsb
mov
test
leave
jns
pop
sbb
push
push
ss
push
add
es
dec
loop
into
or
mov
sbb
fists
inc
js
mov
enter
cld
fdivrp
xchg
gs
jnp
cwtl
mov
cmp
or
cld
push
sarl
test
movsb
repz
sbb
fiaddl
adc
stos
fstps
pusha
pop
andb
cld
incl
jg
sub
popf
cmp
rcl
jo
movsb
xchg
cmc
test
sbb
jecxz
mov
sub
divb
cli
mov
les
rolb
cmc
test
cmpsl
pop
sub
das
add
jmp
movsl
lods
movsl
or
je
mov
inc
nop
int3
or
stc
ljmp
ss
sahf
lds
mov
insb
or
xchg
cmp
and
xchg
aad
imul
xor
xchg
pop
fstp
je
and
cmp
jp
rcl
cld
out
push
sub
ret
or
sahf
cmp
fsubs
fildl
cmc
stc
push
movsb
xor
lcall
loope
sbb
les
arpl
filds
xchg
mov
jae
insl
cmp
stos
lcall
shll
pop
jle
jecxz
out
xchg
lea
inc
sarl
mov
adc
dec
pop
loop
rcr
pop
push
imul
cmp
ljmp
xchg
sarb
pop
mov
loopne
dec
mov
adc
scas
mov
and
hlt
mov
pop
dec
sahf
jmp
leave
repnz
testl
and
mov
lret
and
mov
jp
ror
scas
stos
fs
popf
jne
inc
ljmp
sbb
sub
les
aas
shrd
int
stc
in
lods
addr16
push
mov
add
mov
and
loop
sub
cltd
pop
fildl
push
push
pop
jmp
insl
jne
in
in
inc
and
sbb
test
cmp
call
inc
leave
push
pushf
push
sub
cmp
jae
inc
cs
jae
sbb
outsl
inc
mov
pop
repz
icebp
xchg
inc
pop
fisttpll
into
in
mov
dec
loopne
pushf
cmp
jg
xor
cmpsb
mov
jae
add
ljmp
testl
repz
repz
test
out
lds
inc
insl
lock
test
subl
cli
lret
jno
mov
push
gs
fnclex
dec
fcmovnb
dec
sbbl
punpcklwd
arpl
movsl
and
push
cmp
adc
addr16
xor
in
out
pop
sti
es
jo
test
jmp
jmp
pusha
popa
sbb
jmp
mov
idivl
shrl
xor
xchg
inc
sub
adc
or
ja
push
push
aad
jne
mov
nop
mov
sti
pusha
inc
and
xchg
jbe
lcall
fildl
add
cld
sub
cmp
insl
mov
fbstp
call
dec
or
sbb
add
fsubrl
mov
pop
mov
mov
mov
lods
push
lds
fstps
jmp
cmp
je
mov
int
out
setns
scas
hlt
pop
jns
xchg
sub
and
ljmp
roll
out
pop
lret
mov
add
test
adc
leave
ljmp
cmc
in
outsl
push
data16
rorb
fisubrs
aam
jne
fstpl
inc
jp
cmp
leave
adc
jg
dec
insb
fwait
xchg
stc
popf
add
dec
mov
mov
mov
jns
mov
cmp
lds
mov
xor
iret
es
das
rcrl
das
jo
dec
adc
das
std
adc
cs
xchg
cmpsl
mov
jo
ss
pop
movsl
jo
pushf
cmc
sub
in
mov
pop
out
aaa
sub
push
ret
pop
sbbl
test
nop
xchg
jg
sbbl
and
jmp
aas
add
add
and
adc
icebp
push
sub
sbb
test
xchg
std
inc
mov
lret
mov
sbb
pop
add
fdivr
sahf
ret
test
mov
int3
xchg
or
push
mov
pop
ljmp
cld
gs
fcomip
aad
adc
imul
dec
push
add
push
dec
lret
mov
mov
dec
xor
mov
add
cmpsl
xchg
or
or
jne
adc
push
xlat
jb
add
pop
mov
imulb
sbb
enter
push
jno
mov
mov
add
daa
xchg
xor
or
imul
push
xor
imul
int
and
dec
xchg
lahf
scas
outsb
fidivrs
adc
push
cli
insl
test
or
mov
out
mov
arpl
ljmp
scas
fcomps
mov
cmp
stos
xor
dec
fisubl
mov
or
push
jle
jae
jp
sbb
mov
out
sub
idivl
rolb
mov
fxch
das
or
aaa
inc
mov
scas
push
mov
add
out
mov
add
cwtl
inc
inc
jnp
ret
mov
and
in
pop
jge
lock
and
xchg
iret
mov
loopne
es
sub
in
cmpsl
push
or
es
dec
out
in
data16
lcall
push
dec
xor
mov
loopne
ret
sbb
pusha
cmpsl
pop
push
dec
pop
mov
xor
mov
mov
adc
scas
mov
fidivs
cmp
sarl
ja
hlt
cmc
inc
sahf
cltd
lret
cmpsb
xor
repnz
fadds
push
bound
xorl
hlt
repz
xor
push
rcrl
fdivr
lock
dec
out
jbe
mov
dec
sub
clc
dec
add
mov
addr16
in
xchg
xor
repz
cmp
pop
movsl
pop
clc
shll
pop
and
sbb
mov
mov
ja
aad
xor
add
sarb
xor
leave
add
push
outsb
push
adcl
pop
xchg
or
dec
cmp
and
push
into
pop
jns
pushf
arpl
fnstsw
or
mov
icebp
adc
lea
cmp
xchg
leave
clc
mov
xchg
dec
cmp
outsl
xor
cmp
mov
inc
sarb
or
xchg
and
cmp
sub
push
jl
int
dec
jle
sbb
mov
push
jnp
lret
cmpsb
insb
stos
jge
lock
pop
sbb
jp
outsb
lcall
ror
int
lret
inc
cwtl
pushf
or
sahf
lret
push
enter
mov
iret
adcb
cli
ret
dec
in
mov
cmp
pop
xchg
repnz
fdivp
push
data16
push
mov
fmuls
mov
sub
lods
inc
scas
bound
add
add
pop
mov
leave
xchg
xorl
xcrypt-ofb
cmpsl
sub
nop
jmp
xlat
push
dec
mov
sti
push
scas
xchg
dec
cmpsl
mov
jp
pushl
sbb
lods
gs
std
sahf
inc
pop
adc
mov
test
sub
pop
cmp
sbb
push
dec
dec
xchg
jne
jle
mov
mov
dec
jp
leave
jmp
ficoml
push
adc
fcomps
jnp
cmp
imul
xchg
out
ljmp
push
adc
imul
mov
mov
mov
inc
cs
sub
mov
adc
nop
jb
rcrb
mov
ss
mov
inc
jle
mov
cmp
lcall
mov
xchg
cmp
push
test
loopne
ljmp
push
dec
mov
sub
jp
push
xchg
icebp
sarb
push
xorl
das
jge
mov
les
adc
push
add
dec
inc
les
adc
ss
test
add
ret
imul
xchg
in
inc
cmpsb
cmpb
xor
jnp
sbb
push
aad
adc
arpl
xchg
cld
inc
sub
int
gs
sub
pop
cwtl
mov
jmp
xchg
or
bound
push
lcall
push
fs
cwtl
call
pushf
or
addr16
imul
das
ja
mov
lret
add
dec
in
out
cli
out
fidivrs
mov
or
pushf
pushf
push
cmpl
popf
cmc
cmpsl
push
sub
jne
pop
xor
dec
fsubl
and
aad
ret
stc
xlat
lret
loopne
mov
negb
clc
mov
shll
xlat
add
xchg
call
mov
inc
sahf
fucomp
inc
sbb
call
loope
dec
scas
jp
faddl
dec
sti
jne
rclb
test
inc
rcrb
push
loop
ret
push
insl
lcall
push
inc
add
and
pop
shrb
cvttps2pi
dec
clc
dec
jb
sbb
sbb
sar
inc
mov
and
repnz
and
inc
cmpsl
std
test
cmp
les
fmull
push
in
fdivrp
into
push
sub
call
adc
sub
lret
dec
sbb
pop
push
mov
es
insb
push
ret
loope
cmp
aaa
in
and
je
xchg
sti
lods
loopne
lahf
sar
mov
mov
loopne
add
sbb
aad
stc
cld
dec
inc
ret
inc
xchg
push
test
int3
push
imul
dec
aad
pusha
sub
cli
mov
ficomps
or
aaa
dec
sub
xor
adc
in
push
sti
daa
mov
pop
push
lock
in
mov
ljmp
sbb
stos
mov
add
shl
mov
les
cmpsb
lret
test
aam
pop
pop
fnstenv
jne
es
popa
adc
into
mov
loopne
js
aas
notl
cltd
sub
lods
pop
mov
push
pop
push
imul
stc
jecxz
aaa
add
pop
and
pop
in
aam
fstps
add
ret
mov
jae
cli
push
js
xchg
jle
loope
cmp
outsl
mov
aam
testl
mov
std
mov
mov
xor
hlt
pushf
ds
push
mov
and
outsb
adc
jge
sbb
adc
aam
icebp
inc
dec
incl
test
sbb
pop
mov
es
xchg
add
pushf
sub
pop
mov
scas
aad
sbb
push
in
sahf
movsb
jb
add
mov
cmp
jo
pop
fs
pushl
lock
cmp
or
out
jae
add
ret
pop
and
jb
ljmp
popa
xlat
push
enter
add
repz
iret
lahf
sbb
pop
push
mov
movsl
adc
test
in
jae
addr16
hlt
bound
inc
pop
cmp
clc
push
in
pop
xorb
adc
and
leave
test
mov
ds
loopne
ror
rcll
lea
fisubl
mov
jno
push
lods
insl
stos
jo
xlat
shl
mov
leave
jge
dec
fisubrl
sbb
hlt
pushf
xchg
outsl
in
dec
dec
xor
cmp
dec
cmp
and
imul
outsb
aas
fdivs
dec
pop
rcl
sub
sub
pop
stos
mov
loope
jecxz
inc
and
pop
mov
and
mov
push
pop
dec
aam
sbb
and
and
push
add
mov
incb
insl
es
xchg
xchg
mov
fcomip
stos
ret
ror
mov
mov
sub
scas
fdivl
mov
xchg
clc
loope
stc
idiv
adc
cmpsl
js
mov
adc
loop
cmp
xchg
mov
bound
or
inc
test
js
or
shrl
mov
jb
addr16
dec
dec
mov
xor
ss
stos
std
add
cmp
jo
xor
pop
cmpsb
mov
pop
in
sub
sti
push
int3
sbb
adc
iret
push
mov
orl
negl
cmp
fists
xchg
mov
xchg
push
into
mov
mov
jb
pusha
push
out
stc
cmp
fstl
cmpsb
and
pop
nop
pop
jnp
outsb
pop
fildll
in
pushf
mov
arpl
fiadds
dec
fsubrs
call
cmp
rcl
push
xchg
lods
adc
call
test
dec
push
movsl
lcall
jecxz
nop
cmp
or
cmpsb
inc
jnp
push
dec
fimull
lcall
sub
xor
ffreep
pop
push
mov
sub
ss
cmpsl
mov
jg
push
sbb
bound
dec
push
adc
push
das
add
mov
jge
in
rcl
jmp
or
je
mov
mov
repnz
cld
lret
lret
or
mov
xchg
sbb
xlat
loopne
lds
xorb
mov
in
inc
inc
call
push
cli
mov
sbbb
aad
dec
out
repz
in
jmp
roll
jmp
fnsave
mov
cltd
cmpsl
jb
push
dec
lcall
cmpsl
lea
dec
repnz
pop
fnstenv
cmp
lret
dec
mov
test
push
mov
call
mov
test
sub
js
mov
mov
sub
dec
mov
bound
bound
push
das
movsb
in
xchg
shll
push
mov
shlb
insb
movb
sbb
cmp
jmp
inc
leave
xchg
or
into
adc
sub
cmp
add
jge
enter
pop
pop
xor
adc
dec
ja
mov
add
frstor
test
scas
les
cmp
sbb
mov
pusha
out
lahf
test
cmp
sbb
stos
dec
rclb
mov
add
inc
lret
mov
push
aaa
mov
dec
outsl
jno
leave
cld
push
dec
sub
insb
shll
vmovapd
das
xor
out
jo
push
popf
jo
shlb
mov
inc
or
and
mov
mov
lock
mov
pop
xchg
shrl
scas
jbe
cwtl
xlat
fdivrp
or
pop
js
enter
jecxz
setne
testb
and
out
arpl
orb
sti
cmp
dec
jle
jecxz
stos
and
pop
pop
addr16
jle
or
rorb
inc
outsb
std
jb
les
enter
or
pushf
xor
shlb
pop
mov
sbb
cmpsl
outsl
xchg
xor
pop
les
in
cmp
test
and
test
cs
push
mov
xchg
jmp
sub
adcb
sub
or
loop
lahf
mov
push
pop
pop
lods
int3
dec
mov
lods
or
sbb
mov
push
xchg
xchg
sbbl
in
dec
stc
push
mov
pop
cmpsb
mov
es
sahf
sbb
mov
pusha
inc
int
lret
mov
into
sti
adc
and
lcall
mov
lret
pop
push
loop
push
insb
xbegin
push
in
movsl
rol
lods
ret
stos
leave
sub
pop
lock
les
lock
lcall
mov
subl
loop
jle
sbb
rcr
jne
popf
shl
in
xchg
mov
pop
andl
test
cli
jnp
mov
in
sahf
daa
stos
das
xchg
loopne
jb
jns
push
cwtl
xchg
ds
scas
inc
fildl
mov
movsb
ret
lcall
mov
sbb
repnz
sub
adc
cmp
test
test
push
insl
int3
push
push
mov
or
lea
xchg
ljmp
pop
ret
cmpsl
sub
mov
ret
add
push
ret
inc
ret
rorb
addr16
mov
cmpsl
int
sbb
aam
hlt
adc
insb
mov
mov
cmp
clc
ret
jne
les
in
cs
int
mov
test
movsb
or
and
ret
cmp
enter
ret
ret
and
aas
outsb
pushl
sub
cmp
outsl
popa
sahf
repnz
stc
test
sub
nop
adc
dec
push
cs
pop
cltd
pop
cltd
push
mov
addr16
cltd
lret
test
aad
mov
int3
jnp
pop
push
dec
sbb
mov
add
or
sbb
xor
test
imul
mov
sbbb
pop
and
pop
mov
pop
ds
outsl
inc
or
cld
shlb
jmp
andl
or
sbb
stos
popa
mov
mov
cmpsb
or
lahf
sbb
mov
xchg
clc
mov
out
mov
sbb
push
stc
in
fsubr
insl
ja
push
stc
stos
cltd
push
mov
sbbl
ja
push
sub
lahf
sub
pop
fdivrl
test
movsb
lea
movsb
loopne
mov
repz
jne
imul
sbb
xchg
and
mov
rcll
dec
dec
lock
mov
mov
ret
fsts
add
test
push
or
mov
scas
pop
int3
insb
lds
fnstenv
dec
push
aam
fs
int
int3
push
mov
push
faddp
hlt
int
in
jmp
cmpsl
ss
inc
sbb
fwait
arpl
in
jl
dec
mov
push
cld
dec
cwtl
in
mov
aam
fucomi
pop
add
out
arpl
xchg
mov
jecxz
sbb
and
mov
or
fdivrs
sbb
pop
xor
movsl
push
push
das
xchg
dec
push
addr16
int
stos
xlat
pop
pushf
test
lcall
pusha
cltd
push
pop
and
push
in
in
fistpl
arpl
mov
xor
mov
shll
adc
pushf
push
lahf
jle
and
mov
mov
lret
xchg
push
cmp
enter
xchg
cmp
adc
add
dec
flds
pop
pop
movsl
and
adc
stos
incl
push
fwait
add
les
xchg
mov
mov
xchg
loopne
out
mov
pop
push
add
ret
movsb
sti
je
jnp
and
mov
mov
xchg
xor
push
push
push
int
jnp
fisubrs
jecxz
mov
popf
and
andl
sub
xchg
add
pop
push
adc
cmp
adc
and
fisubs
cltd
jp
sub
push
test
inc
mov
leave
and
in
dec
popl
subl
or
sbb
xlat
hlt
ja
sub
aam
cmc
jnp
fisttps
add
pop
mov
ret
mov
mov
dec
jmp
mov
movl
adc
cmc
sub
xchg
in
daa
scas
add
pushl
push
addr16
je
repz
xor
mov
bound
call
push
mov
push
pop
lret
test
ljmp
cltd
or
mov
jno
clc
repnz
xor
mov
mov
adc
mull
icebp
pop
ret
data16
mov
cld
adc
mov
leave
jmp
lret
adc
and
jae
nop
dec
loop
xchg
adc
xchg
test
fs
imul
stc
incl
xorb
fs
out
xchg
data16
add
fstpt
daa
rolb
xorb
jmp
sbb
pop
adc
fdivrs
xchg
sbb
fdivr
xchg
sbb
xor
mov
mov
push
lods
ja
cs
push
aaa
xchg
enter
push
lcall
xchg
pop
xchg
add
repnz
mov
xchg
aaa
adc
cmpsl
pop
lahf
sub
push
loop
jmp
scas
mov
push
ds
xchg
aaa
mov
mov
dec
stos
shrl
dec
roll
adc
add
int3
inc
add
adc
add
inc
add
push
inc
add
add
imul
add
faddl
or
mov
