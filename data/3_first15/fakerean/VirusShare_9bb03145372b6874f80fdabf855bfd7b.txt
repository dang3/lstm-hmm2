sbb
add
data16
mov
dec
sti
dec
rcrb
cmp
pop
cmp
mov
fs
pushl
jp
pop
push
lcall
stos
xchg
xchg
mov
cli
jns
mov
jmp
add
test
lods
lcall
call
out
mov
add
outsb
sti
dec
mov
lret
and
arpl
lret
sbb
jp
nop
out
mov
pusha
pop
mov
cld
mov
push
ljmp
xor
cmpsl
ja
mov
fisttpll
xor
push
rcll
dec
fnstcw
std
mov
ret
iret
mov
les
cmp
ljmp
push
dec
ret
js
imull
pop
popf
xor
icebp
pop
frstor
mov
mov
xor
jno
test
inc
mov
popa
jecxz
mov
sahf
add
lahf
pushf
jae
imul
push
insl
syscall
push
sbb
add
out
mov
sbb
notl
test
loope
jno
mov
jecxz
shll
rcrb
in
pusha
arpl
mov
fwait
mov
adc
aas
cs
rorl
push
push
lock
mov
mov
xchg
pushf
push
cmp
pop
jl
mov
pop
xor
mov
mov
mov
bound
push
popf
sub
out
sub
fsubrl
mov
mov
inc
movsl
xor
loop
aad
scas
pop
outsb
mov
cmp
adc
loop
out
cmp
mov
outsb
mov
lods
mov
cmc
aad
pop
jle
mov
add
out
pop
pop
inc
lods
sbb
test
int
fidivrl
add
lret
test
jbe
adc
cmp
rcll
test
jo
test
bound
inc
aas
sbb
or
jp
fsts
shll
outsb
repnz
jl
xor
pop
stos
mov
cmp
xchg
mov
push
add
mov
add
jae
arpl
int
fistpll
jp
inc
or
sbb
ret
jae
into
jp
inc
ljmp
imul
int3
fmuls
and
stos
jno
repz
sbb
or
stc
sti
call
imul
lods
movl
in
cmpsb
dec
lcall
das
xor
shr
test
lock
fwait
mov
mov
clc
jg
mov
imul
decb
aad
sub
cmp
mov
push
push
pop
adc
bnd
xchg
repnz
cmp
int3
leave
fwait
or
movsb
or
mov
sarb
push
imul
add
data16
xlat
xchg
mov
jnp
test
movsb
lods
aaa
pop
mov
lret
imul
int
popl
fs
mov
mov
push
scas
daa
lods
pop
push
rcrb
ret
scas
sub
or
jp
pop
mov
daa
out
pushf
sarl
inc
push
aam
cmpsb
dec
and
stos
push
clc
loope
rol
mov
notl
dec
xchg
inc
aas
lret
testl
pop
push
and
xchg
xchg
outsb
xor
pop
cmp
ds
cmp
iret
mov
jne
pcmpeqw
push
mov
lea
xchg
jl
xlat
hlt
inc
xchg
ret
inc
lahf
adc
jb
test
mov
push
fildll
sub
cmpsl
lods
gs
pop
xlat
out
mov
scas
mov
push
out
push
loopne
cwtl
cltd
shrl
cmpsb
loope
imul
xor
sub
pushf
test
idivl
fistpll
mov
dec
repnz
insb
mov
int3
and
cmp
mov
push
cmp
in
push
stos
xchg
in
mov
insl
ss
dec
pop
xchg
add
ds
cmpsl
lea
ja
cli
mov
mov
popa
cld
int
loope
data16
xor
adc
loop
adc
mov
pusha
mov
pushl
adc
jo
sub
pop
scas
fistl
xor
jle
inc
and
shlb
push
push
sti
subb
out
xor
inc
dec
scas
pop
xor
add
push
divl
stos
sub
leave
loope
cli
xchg
mov
pushf
into
xchg
add
cmp
call
and
mov
sbb
fdivl
fistpll
xor
sub
fwait
pop
stos
adc
sahf
leave
jge
cmp
mov
dec
pop
insb
adc
iret
mov
lods
inc
xchg
xor
dec
mov
sti
push
lret
cwtl
leave
pop
jle
test
sti
jle
lea
addr16
es
ss
mov
jge
sbb
pushl
push
sbb
jmp
mov
pusha
es
pop
add
fstl
loope
pop
or
push
mov
popa
inc
imul
push
sub
dec
mov
cli
adc
push
jb
movsl
pop
loop
mov
push
mov
or
dec
fdivl
pusha
mov
out
rcll
push
dec
mov
adc
cvttps2pi
js
xor
mov
cld
mov
cmp
mov
outsb
pop
sub
outsb
xchg
xor
loopne
mov
and
or
hlt
les
push
cltd
inc
and
int
cli
adc
pop
xor
movsb
shr
mov
jne
push
xchg
add
adc
sbb
fwait
cwtl
xlat
pop
fisttps
mov
and
pop
fnstcw
gs
outsb
pop
mov
cmp
mov
mov
cmpsl
jns
jle
sbb
cmpsb
mov
jno
lret
jne
repnz
sarl
sub
je
jle
mov
xor
data16
adc
dec
call
add
xor
or
cmp
sbb
cltd
and
mov
push
add
repz
shrb
cmp
scas
pushf
adcl
mov
lcall
insb
or
mov
and
bound
dec
push
lds
inc
jns
cmp
dec
pusha
addr16
scas
sub
loopne
xlat
xchg
xchg
pop
push
jnp
orb
or
inc
push
mov
add
int3
pushf
mov
lcall
cmp
or
pop
cmp
sub
jns
sub
xchg
cmp
cmpsl
add
fdivrl
lret
lds
push
push
lock
sbb
jg
fs
je
js
mov
pop
fs
fisttps
ret
cmp
int
stc
xchg
push
push
gs
adc
cmp
push
inc
sbb
lahf
lahf
cmp
cmp
repz
fisubrs
sbb
push
inc
pop
adc
incb
repnz
mov
aad
cli
or
add
test
cwtl
jge
call
xor
ds
inc
lret
xchg
sbb
addr16
popa
cmp
aam
jg
adc
and
xchg
adc
ss
daa
xchg
push
ret
cmp
lret
adcb
push
lahf
jg
pavgb
mov
cmp
xchg
jbe
aas
mov
mov
mov
das
scas
xchg
sub
mov
imulb
jns
cwtl
mov
pop
mov
into
push
aam
sub
cwtl
loope
pop
xchg
push
test
mov
cwtl
sbbb
int3
aas
bound
adc
daa
lea
jnp
pop
divl
sub
cli
stc
fldenv
mov
out
add
cmp
adc
jae
stc
movsl
stos
ds
mov
and
or
and
push
mov
or
push
repnz
add
xor
movsl
lret
pop
xor
bnd
mov
mov
jns
push
fadds
sti
call
sti
pop
inc
mov
sbb
arpl
sbb
pop
repz
ret
mov
sbb
adc
clc
jg
aad
xchg
mov
pop
shl
mov
out
mov
out
pusha
out
push
sub
xchg
cld
nop
mov
adc
add
add
and
inc
ret
inc
xchg
cmp
cld
push
std
cltd
xchg
pop
outsb
stos
pop
rolb
lock
cmpsb
fdivrs
loope
push
xorl
aaa
lahf
fst
dec
fsubrp
repz
scas
testb
or
xor
stos
xlat
dec
sbb
mov
sub
imul
inc
mov
mov
scas
rorb
cmpb
insb
or
adc
dec
test
adc
outsl
inc
bound
inc
xchg
jae
int3
jg
stc
fwait
inc
push
iret
outsl
stos
ficoms
out
movsl
pop
sub
xor
mov
sub
sbb
data16
daa
fsub
xchg
dec
divb
mov
pusha
jmp
addr16
scas
repnz
or
rclb
mov
jno
lea
gs
mov
ds
lret
pusha
fnstcw
or
sbb
push
push
xlat
outsl
sahf
aad
jge
sbb
adc
fsubs
cwtl
cmp
mov
mov
add
ljmp
aas
mov
outsl
lret
pop
ja
jns
inc
std
xchg
inc
jnp
mov
sub
test
dec
fdivs
add
push
adc
lea
jae
dec
pop
mov
fidivrs
dec
leave
dec
sub
dec
pop
adc
cmp
add
xor
shll
or
sbb
sub
push
lcall
and
dec
fwait
in
test
pop
out
out
call
jo
mov
inc
pusha
lock
jbe
scas
jmp
movsl
sahf
jne
mov
lock
imul
pusha
jno
int3
test
xor
and
rorl
xchg
clc
cmp
push
jge
scas
cmpsl
or
xchg
pop
or
or
inc
leave
mov
add
repnz
inc
jne
xchg
push
aad
fidivrs
rcrb
push
add
cmp
pop
pushaw
push
adc
cmp
data16
jmp
adc
mov
cmp
inc
mov
push
ljmp
adc
fwait
xchg
subl
mov
in
imul
mov
inc
xchg
cmc
mov
cmp
inc
xchg
outsl
jg
mov
xor
mov
pop
popa
mov
mov
xor
sahf
jbe
outsl
push
rcrl
mov
mov
insb
lods
jmp
insb
sub
jle
and
mov
cmp
pusha
mov
fisttpl
dec
cmp
add
cwtl
dec
jbe
mov
push
shlb
xchg
push
cld
xor
adc
inc
nop
add
inc
imul
dec
and
shll
rol
lods
shll
clc
mov
xor
gs
mov
int
ss
or
mov
pop
xor
mov
dec
dec
and
iret
push
testl
jne
mov
push
aaa
imul
out
push
repz
ja
test
cmp
pop
dec
mov
and
movsb
mov
pop
in
inc
clc
insb
mov
dec
push
mov
dec
push
cwtl
mov
les
sub
pop
lock
pushf
cltd
enter
rclb
jmp
pop
rorb
lock
out
xchg
pop
loopne
add
pop
xor
pop
cvtps2pi
xchg
add
mov
mov
int3
sub
aaa
fldenv
iret
mov
ficoms
or
lea
dec
pop
out
jno
xor
adcb
pop
jae
pop
xchg
mov
cmc
sub
daa
lock
enter
dec
call
jg
lods
data16
in
ss
mov
pop
mov
lret
int
jno
in
pop
sub
add
xor
xchg
addr16
fnsave
push
mov
dec
mov
fisttpll
mov
arpl
pop
out
add
aas
aad
cmpsl
std
outsl
das
inc
imul
fwait
cmp
mov
sub
push
pushf
mov
xor
push
aam
rcl
sub
xchg
call
dec
mov
mov
sbb
inc
push
jno
pop
dec
dec
add
ficoms
push
enter
jne
add
sub
dec
jns
call
pop
inc
xor
and
cmp
std
or
out
push
ja
and
scas
mov
pop
or
or
jns
je
or
jmp
movsl
stc
ret
call
mov
jmp
xchg
or
add
call
or
out
in
cmc
pop
add
push
imul
xlat
fwait
sbb
shll
stc
mov
mov
mov
mov
xchg
adc
mov
std
test
hlt
adc
sub
xchg
push
dec
test
inc
adc
stos
les
dec
lock
sub
sbb
push
adc
xchg
fnstcw
jge
sub
sub
push
or
mov
add
mov
into
scas
pusha
mov
sub
cmpb
xchg
push
imul
dec
jbe
push
in
push
clc
imul
cmpsl
std
xor
pop
dec
orl
std
or
jo
rorb
hlt
in
sbb
test
jbe
mov
add
and
insl
flds
sub
add
pop
les
cmpsl
imul
sahf
shll
js
xchg
mov
push
mov
add
les
bnd
test
sahf
adc
push
lret
pop
mov
fisttpll
mov
mov
notl
pop
stc
imul
xor
mov
in
fldcw
adc
cmp
sub
test
divb
je
push
fbstp
sbb
data16
jne
sbb
icebp
adc
jecxz
or
add
mov
push
loop
fmull
addr16
push
mov
iret
adc
ret
in
stos
mov
hlt
pop
int
fildl
cmp
and
inc
xchg
ja
in
sbb
or
imul
or
icebp
xor
sub
lret
mov
jle
sbb
sbb
jp
cmc
std
inc
enter
mov
orl
dec
sbb
in
inc
mov
xchg
dec
out
aad
pushf
inc
and
mov
adc
push
pusha
xchg
filds
lea
sbb
mov
xor
lahf
out
mov
pop
jmp
jecxz
mov
xor
test
aaa
sbb
divl
mov
cmpsl
push
pop
xchg
loopne
push
push
jns
mov
sbb
icebp
repnz
lods
push
mov
sbb
sahf
cltd
adc
xorb
popa
inc
inc
lds
out
adc
mov
gs
mov
add
fcmovu
sti
fstps
fcmovnu
loop
cs
adc
jmp
in
mov
addr16
add
mov
pop
fcomip
mov
and
sbb
enter
mov
aam
xor
pop
push
jl
pextrw
dec
pop
es
pop
js
rclb
imul
or
fiaddl
add
loop
add
xchg
sub
adc
mov
movsb
sub
in
cltd
sahf
in
lock
jbe
lock
inc
sti
andl
stos
adc
aam
shl
lret
int3
or
adc
jbe
mov
call
ret
clc
or
mov
jge
ficoml
shlb
pushf
jnp
int3
sahf
int3
addr16
push
xor
inc
push
cli
sbb
cmp
add
dec
jae
ljmp
mov
jbe
outsl
push
out
shrl
in
mov
cmp
jg
loope
fisubl
push
movb
pop
jle
clc
out
or
pop
je
inc
mov
test
or
popa
pop
inc
sub
inc
pop
adc
jbe
mov
dec
pop
mov
push
push
in
push
pusha
xor
addr16
cld
mov
inc
int3
sbb
push
test
mov
jb
cs
rorl
push
out
pusha
mov
dec
js
popf
nop
aam
and
jl
adc
add
aas
push
push
sbb
outsl
ficompl
jns
mov
xchg
ret
sbb
xor
inc
lahf
push
or
or
lcall
mov
mov
pusha
adc
push
lahf
adc
rclb
dec
inc
sbb
loopne
int3
cmp
icebp
repnz
jp
stos
imul
add
in
incb
in
outsl
ja
fdivrs
add
mov
test
imul
add
xchg
lods
cmc
sbb
xor
loope
wbinvd
cmpsl
or
ror
bnd
mov
test
stc
std
mov
cmp
push
add
in
jno
sbb
cmp
inc
ret
lds
inc
sbb
and
mov
ja
sbb
ss
sub
or
mov
movsb
and
mov
push
imul
mov
les
insl
mov
mov
lcall
mov
jno
jecxz
mov
add
mov
insl
js
ror
stc
in
pop
out
in
xchg
adc
fisubrs
jge
ja
dec
test
in
adc
pop
aas
mov
fs
or
or
push
push
insl
pop
jg
inc
pop
xchg
aad
in
add
shrl
out
test
and
fldenv
iret
cmp
push
aas
dec
jbe
mul
gs
add
adc
bound
push
stos
or
jmp
cwtl
sub
mov
scas
hlt
cmpl
mov
sbb
ljmp
cmp
inc
lods
push
mov
xchg
jnp
xchg
in
jnp,pt
lea
rorl
or
sarb
push
add
in
inc
push
pop
leave
mov
adc
ljmp
loope
sub
adc
cli
dec
call
cmp
sbb
jmp
and
mov
xor
int
call
out
push
jle
mov
sub
fdivl
popa
popf
cs
js
pop
out
jg
dec
sub
mov
cmp
and
push
into
rolb
jmp
jmp
popa
mov
inc
push
aas
out
lock
mov
std
ds
clc
scas
jmp
add
mov
outsb
jno
jmp
repz
mov
fcomi
cmc
xchg
dec
push
mov
xchg
bnd
repnz
mov
outsl
sbb
cmp
dec
and
inc
popa
sbb
pop
push
out
inc
gs
and
ss
out
mov
xchg
sarb
push
int3
mov
xchg
ret
test
xor
inc
arpl
adc
dec
xor
adc
ret
sub
pop
jne
int
jo
iret
and
subl
sbb
fidivrs
push
push
dec
cld
orl
repnz
add
xchg
sarb
xor
xchg
push
gs
mov
mov
repnz
pop
repnz
out
jmp
dec
in
mov
roll
bound
out
pop
jp
add
mov
jmp
xlat
jne
lahf
imul
testl
lods
inc
mov
ja
jl
loop
in
sub
popa
ljmp
movb
cmp
pop
mov
scas
push
jae
pushf
scas
rcrl
dec
cmp
jle
inc
in
xor
iret
repz
je
adcb
adc
outsl
pop
mov
inc
mov
pop
pop
fistpll
sbb
scas
outsb
adc
clc
sahf
ja
and
push
insb
fwait
mov
push
mov
dec
or
jno
insl
shlb
ret
mov
fs
lahf
movsl
inc
pop
push
push
jl
test
call
pop
inc
inc
shrb
mov
test
jmp
je
bound
mov
fsubs
aam
icebp
in
lcall
cld
adc
sub
ret
inc
mov
gs
mov
insl
enter
je
lods
inc
lret
mov
or
mov
aam
andb
pop
roll
scas
xchg
popa
ds
nop
dec
mov
dec
lock
ds
or
or
or
cmp
mov
in
cmp
mov
sbb
sbbl
cwtl
inc
cmc
fildll
inc
testb
adc
std
daa
movsb
jae
mov
je
add
int3
add
fbld
das
fsub
xchg
jmp
xlat
cld
jbe
mov
sub
jmp
jb
mov
pop
push
lret
cmp
comiss
jg
xchg
jmp
dec
into
pop
cmpsl
xchg
lret
cmpsl
lock
pop
iret
pop
fisubrs
mov
test
pop
cmpsb
and
outsl
pop
and
mov
dec
ficomps
inc
adc
lds
xchg
dec
jno
mov
and
xor
mov
cmp
jl
dec
popf
les
aam
ljmp
add
push
fwait
push
cmpsb
out
out
es
lret
sub
cmp
adc
cmp
inc
imul
xor
pop
shlb
add
ds
jmp
iret
int
ljmp
in
push
and
xor
lock
outsl
mov
addr16
push
ja
pushf
loopne
loope
and
loop
mov
stc
imul
pop
xchg
sbb
in
adc
and
fdivp
sti
lock
xor
int3
dec
call
rcll
inc
sub
or
mulb
fucom
jmp
dec
dec
lret
jge
movsb
pop
cmpl
cs
icebp
aad
adc
adc
cld
mov
sub
in
in
inc
sbb
pusha
dec
sti
add
and
es
mov
xchg
lcall
outsb
repnz
loopne
or
jp
inc
loope
movsb
insb
sahf
sbb
pusha
iret
push
pushf
sahf
scas
ja
mov
push
arpl
test
inc
popf
aas
sub
mov
loopne
mov
test
ror
or
subb
cmp
sub
call
test
cmc
fs
or
data16
inc
enter
cmc
xchg
mov
cmp
pop
ret
and
out
add
or
sti
lcall
fucomi
xor
mov
push
adc
xchg
jmp
lcall
or
shrb
cmc
nop
add
mov
mov
xor
inc
push
jecxz
jns
xlat
push
add
insb
jg
adc
ss
lods
mov
jns
ja
mov
pop
pop
pop
sbb
push
pop
popa
scas
cmpsl
cmpsb
cltd
test
and
jmp
iret
xchg
xor
iret
js
mov
js
mov
mov
sbb
repz
out
adc
inc
jp
push
imul
push
sub
xchg
addr16
lahf
daa
test
and
pop
push
out
xor
sti
idiv
push
push
test
nop
cmp
xor
stos
cltd
jecxz
inc
sub
stc
lret
push
sbb
ja
sub
push
sbb
fisubrl
mov
and
loope
add
mov
loopne
dec
loope
jp
inc
pop
lock
idiv
mov
sub
dec
out
push
sub
outsl
jle
fmull
jge
add
push
outsb
in
lahf
pusha
cmpsl
imul
data16
push
xchg
mov
jnp
dec
popf
mov
cli
push
adc
shll
mov
cmpl
add
pushf
pop
movsb
bound
fcompl
cmp
pop
arpl
push
gs
aaa
fistps
fwait
pop
fidivl
push
enter
dec
or
mov
mov
cs
mov
je
mulb
ljmp
movsb
data16
clc
movsb
sahf
push
dec
psrld
push
push
pop
add
mov
out
lock
test
adc
gs
mov
add
push
sbb
mov
loope
jecxz
gs
jg
push
inc
sbb
cmp
movsl
adc
movsb
or
popa
jns
mov
loop
outsb
js
shll
push
push
mov
xchg
pop
add
fisubrs
cmp
idiv
mov
daa
xchg
jg
and
clc
loop
das
imul
fistpll
dec
sub
mov
pop
sub
lahf
or
mov
imul
pushf
dec
push
aas
in
repz
pop
cltd
cmc
shl
push
jne
add
ret
or
call
xchg
cmpsl
sub
dec
xchg
pushf
not
dec
filds
sub
xchg
cli
stc
int
add
lcall
call
mul
data16
sbb
sub
and
out
popf
out
cld
cmp
sub
push
ror
xor
inc
jge
and
loope
jl
fimuls
fldenv
xchg
mov
push
mov
sar
xor
and
push
push
fdivr
mov
dec
ja
lret
jns
push
push
xor
loop
xlat
dec
mov
lods
dec
repz
ror
xor
enter
aaa
mov
cmpb
fidivl
fs
pop
das
sub
xor
loopne
cmpsb
outsl
push
ljmp
jno
pushf
daa
int
xchg
jle
xor
cmp
jne
ss
jb
push
add
stos
int
mov
call
enter
outsl
dec
dec
fistpl
mov
xor
dec
pushf
pusha
test
push
inc
cmc
sbb
add
out
mov
cli
into
fildl
mov
dec
cmpsb
jge
xor
lret
out
adc
cwtl
push
ja
mov
xchg
aad
sub
cwtl
jb
repnz
pushf
in
cmp
fs
lds
enter
sti
mov
clc
push
out
mov
sub
adcb
cmp
mov
mov
cmp
sub
jmp
stc
jo
cmpsb
pop
mov
lea
inc
push
mov
mov
xlat
fldl
bound
fcomp
stos
out
dec
mov
lock
fcompl
jo
jle
mov
in
xor
cld
pop
aas
out
hlt
jecxz
jns
roll
xor
jecxz
ja
fistl
int3
adc
stc
mov
js
stos
sub
fwait
adc
lea
dec
cmp
mov
cmp
cmp
lock
mov
cmpsl
mov
sub
hlt
std
or
mov
loope
push
out
push
jnp
mov
cmpsl
push
int3
push
out
jbe
out
rorb
push
or
add
pop
pop
xchg
dec
or
mov
or
rcr
inc
sahf
jns
push
in
movsb
ja
push
pop
movsl
inc
xor
mov
dec
sub
inc
cmp
pusha
xchg
lahf
not
xchg
insl
mov
fadds
cmpsl
movsl
push
inc
mov
cmp
adc
pop
inc
icebp
push
mov
data16
test
stos
xchg
jmp
aad
sbb
and
ud0
out
pop
popf
stos
inc
pop
jno
jne
fimull
ror
pop
pop
pushf
push
push
xor
sub
xor
jp
aaa
mov
test
into
sub
mov
sti
jae
lahf
pop
data16
or
aas
pop
insb
adc
ja
xor
inc
mov
xor
xor
lahf
sub
aaa
pop
adc
popf
out
jo
xor
aam
imul
stc
or
cli
xor
xchg
loope
mov
sbb
test
xor
into
stc
dec
outsl
adc
and
push
or
sub
mov
lcall
cs
bound
push
clc
imul
mov
or
xor
fildl
add
js
adc
mov
add
push
in
push
jmp
push
scas
mov
jge
scas
inc
popf
rorl
cmp
lds
xor
xchg
rcl
ss
dec
push
xchg
inc
xchg
pop
in
sub
inc
movsb
mov
outsb
arpl
jno
mov
cmp
fdivl
or
push
mov
push
adc
mov
pop
sub
inc
mov
stos
push
xor
push
xor
sub
neg
pop
jge
push
add
jmp
mov
jmp
fiadds
push
icebp
repnz
shrb
push
jl
ds
adc
mov
in
in
popf
jp
lcall
cmpsb
fldt
sarl
fidivl
adc
mov
clc
or
adcl
mov
jnp
movsl
icebp
movsb
xchg
adc
dec
sti
mov
cmp
out
xor
xchg
das
lds
pinsrw
stos
xor
dec
fsubrs
out
cmp
fcompl
mov
xor
mov
je
jge
lret
shll
repz
fiadds
adc
pushf
ret
jno
scas
insl
mov
adc
scas
enter
sub
out
test
inc
jmp
fsubs
fnsave
ljmp
pop
dec
dec
or
orb
loop
loopne
or
push
inc
push
mov
mov
add
daa
test
sub
popa
or
lret
or
sbb
fimuls
leave
in
loopne
scas
xchg
in
pop
fs
push
xor
loopne
sbb
pusha
outsb
mov
out
cmp
fsubrl
ja
inc
ja
mov
addb
xor
push
pop
mov
xor
div
push
test
in
das
and
sbb
js
push
pop
addr16
leave
and
scas
jns
jb
sub
adc
imul
pop
shlb
add
int
data16
andps
aad
mov
ss
lods
xchg
ds
sub
sbb
pop
xchg
cmp
mov
adc
mov
push
ret
test
test
adcb
out
mov
out
js
jb
int
mov
dec
jmp
lcall
enter
fildll
pop
outsb
add
mov
les
push
adc
xchg
mov
lahf
gs
cmp
xor
test
jecxz
pushf
jne
stos
mov
popf
xchg
push
mov
dec
movsb
movb
mov
xchg
test
jne
cmp
imul
ljmp
lret
jecxz
js
jp
sbb
sub
lahf
ds
inc
mov
xor
inc
lods
dec
add
add
add
lahf
push
pop
mov
cmp
inc
push
in
cli
jo
dec
push
sbb
mov
popf
ret
mov
pop
mov
cld
arpl
xchg
fdivr
addr16
mov
sub
int
fmul
addr16
mov
insb
ficomps
mov
mov
cmp
and
sbb
or
dec
xchg
xor
imul
xor
cli
js
or
cmp
jle
fs
mul
mov
lock
inc
imul
push
pcmpeqd
popl
dec
mov
lock
lods
add
stos
or
mov
mov
jle
hlt
icebp
cmp
cli
xor
and
pop
dec
push
mov
outsl
int
js
sbb
test
cmp
adc
js
push
out
je
pop
sbb
flds
ljmp
xchg
mov
bswap
and
ret
stc
stos
push
mov
outsb
and
cmp
mov
lds
add
dec
lods
push
fisttpll
es
loopne
enter
mov
mov
push
and
stc
mov
outsl
add
lods
in
popa
lds
pop
outsl
iret
or
inc
iret
inc
add
adc
dec
in
push
sbb
jle
aad
sub
imul
xor
mov
xchg
cmpsb
je
xlat
sbb
or
scas
clc
mov
leave
ja
loope
cmp
aam
mov
aaa
inc
and
xchg
ds
pop
rorb
movsb
push
or
int3
cwtl
or
data16
out
shll
and
cmc
int
mov
inc
stc
std
mov
and
adc
jne
adc
mov
mov
test
jnp
rcr
aas
mov
fwait
insb
addr16
into
sar
repz
sahf
clc
mov
lods
aas
stos
pop
add
imul
mov
jno
outsb
mov
psubusb
loop
push
int
jl
mov
test
mov
mov
xchg
cmp
out
pop
cltd
sbb
mov
adc
lret
lock
into
and
and
loope
pushl
movsb
mov
pop
loope
pop
jle
push
lea
out
inc
push
or
fmull
inc
mov
push
and
jnp
inc
jae
pop
xor
fildll
fbstp
cmc
popf
jne
movsl
push
arpl
call
mov
mov
lea
ja
dec
cmc
mov
and
jp
fidivrs
or
insl
nop
dec
push
mov
mov
aad
cmp
movsl
jae
xor
fnstsw
fwait
movsl
arpl
sub
mov
in
fwait
dec
outsl
das
out
jnp
pop
sarl
and
xchg
fidivl
mov
int3
pop
cmp
sarl
cwtl
fsubrs
fimuls
add
jle
outsl
sbb
lret
and
add
or
aaa
orl
mov
jo
cmp
das
sbb
in
std
stos
into
xchg
inc
push
adc
aam
mov
pop
xchg
sub
enter
xchg
imul
test
adc
add
dec
dec
in
add
or
lods
mov
dec
pusha
push
mov
cmpsb
mov
loopne
outsl
sbb
call
push
cwtl
mov
sar
push
sarl
dec
in
pop
or
ret
int3
mov
sub
rcll
or
and
and
dec
ret
jmp
fisubs
inc
test
mov
mov
pop
push
xchg
fxsave
mov
mov
sbb
rol
into
les
xchg
lods
pop
loop
imul
in
xchg
mov
fdivrs
andnps
pop
xchg
dec
rclb
aam
jnp
mov
imul
mov
inc
xchg
cmc
dec
mov
inc
xor
jns
ret
add
xchg
add
lret
cmp
jmp
dec
shrb
loopne
outsb
dec
clc
cmp
jnp
jmp
xor
stos
imul
call
loop
mov
mov
out
mov
fidivrl
mov
in
cs
aad
addr16
mov
jle
popf
cmc
data16
dec
test
adc
lds
adc
out
mov
cltd
in
push
jnp
lods
add
imul
push
fidivrl
cwtl
sub
push
pop
or
fwait
loopne
popa
inc
popa
mov
mov
mov
cwtl
pop
add
xor
or
jne
adc
out
in
sahf
mov
cltd
mov
add
mov
jl
out
mov
loope
imul
dec
xor
pusha
xchg
adc
xchg
or
cmpsl
mov
push
icebp
insl
sub
inc
inc
pop
add
movsl
mov
mov
pusha
mov
dec
cmc
and
xchg
push
add
inc
outsb
push
jge
mov
rolb
jo
mov
clc
push
pop
inc
cmpsb
xchg
nop
mov
adc
cmp
fcomps
sbb
add
hlt
cli
fists
sbb
divb
or
add
fidivl
push
fisubrs
xor
cmp
xchg
pushl
dec
movsl
push
rorl
hlt
sbb
or
movsl
std
out
fsubl
bound
popa
ja
pop
cld
push
sti
or
pusha
mov
das
fucomp
dec
sarl
xor
and
xor
lds
dec
jno
mov
jae
stc
xor
sub
mov
sub
push
ljmp
cmp
cltd
mov
xlat
cmpsb
mov
rcrb
lret
pusha
test
add
dec
and
fsubp
and
jnp
ss
push
imul
inc
and
jns
pop
mov
clc
sbb
sub
pusha
or
cmp
je
sub
fwait
sub
dec
cmp
cmpl
imul
jg
out
aad
iret
cs
pop
testb
mov
loop
test
inc
loop
inc
mov
movsb
loope
push
or
outsl
lds
jbe
mov
jle
xor
repnz
dec
xchg
cltd
push
or
mov
pop
mov
es
xor
and
dec
xlat
in
hlt
mull
push
add
cmpsb
mov
aaa
pushf
mov
cwtl
cmp
cmp
jno
lahf
add
dec
xchg
xchg
je
add
jnp
cmpsb
stc
push
jl
leave
mov
add
mov
push
je
es
inc
das
adc
and
mov
sub
test
jle
and
loop
popa
sar
icebp
xchg
lock
ljmp
cwtl
jmp
mov
pushf
icebp
add
and
jmp
mov
push
lock
mov
inc
inc
dec
rorb
lods
jns
dec
mov
mov
inc
push
je
and
addr16
jns
lahf
adc
rolb
stc
insb
jbe
in
jne
hlt
pop
sub
test
lds
or
mov
lds
push
mov
sbb
cmp
mov
js
add
push
aaa
js
pop
dec
ja
mov
pop
daa
cwtl
jmp
dec
scas
cmp
subl
dec
or
repnz
or
dec
pushf
rclb
negb
xor
mov
popf
sbb
jle
data16
lret
add
repz
dec
rcrb
mov
roll
mov
jle
push
xchg
outsb
filds
ljmp
mov
int3
sub
pop
jle
shll
mov
enter
cmp
jmp
push
insl
jmp
jecxz
push
push
lods
std
in
lds
pop
push
out
push
dec
test
divb
or
lock
push
js
outsb
xor
push
iret
or
xchg
insb
cmpsb
xchg
mov
sahf
dec
adc
mov
sbb
leave
out
xor
xchg
sub
iret
dec
xlat
int
shll
sbb
xor
dec
jbe
mov
popa
jg
fcmovne
sbb
adc
mov
pop
imul
insl
xchg
fistl
cmpsl
xchg
add
or
ljmp
add
pop
test
xor
push
cwtl
jne
xlat
ds
loop
aaa
out
js
xchg
push
fisttpll
cld
mov
dec
add
test
mov
out
push
mov
cmpsl
in
jg
shlb
mov
popf
xchg
add
subl
or
xlat
lods
adcl
out
push
fmulp
or
or
int
call
sbbl
fwait
negb
and
and
mov
sub
nop
pop
pop
fistl
sbb
test
push
push
jno,pn
cmp
lret
loopne
cmp
or
test
fiaddl
dec
pop
fucomi
mov
orb
sub
mov
icebp
jne
ret
mov
jge
push
jle
xor
movsl
call
sti
clc
cmpsl
and
jb
or
add
sbb
mov
jecxz
dec
cmpsb
repz
ret
inc
sarb
sub
fnstenv
mov
jne
jecxz
dec
dec
jmp
repz
lret
aad
test
mov
out
out
je
pop
imull
cmc
xchg
ret
pop
leave
mov
and
jecxz
fisttpll
dec
inc
orb
loopne
push
jae
mov
js
ret
in
icebp
adc
scas
insb
push
pop
call
enter
fldl
jb
hlt
sub
lds
or
std
cmp
insl
adc
add
pop
lret
jbe
ljmp
push
mov
lcall
int
push
mov
mov
inc
movsl
xchg
or
aaa
sub
sub
or
and
in
pushf
pusha
mov
xchg
cmp
js
push
jns
lock
aaa
jns
mov
jmp
gs
lods
sbb
jb
insb
lods
inc
push
adc
mov
push
push
mov
iret
daa
mov
push
cmpsb
addr16
iret
fstpl
or
in
outsl
mov
test
adc
mov
call
aaa
repnz
push
imul
and
mov
scas
movsl
dec
adc
lret
dec
sbb
mov
sti
jl
push
addl
pop
es
or
divb
adc
adc
adc
or
bound
mov
push
fistps
outsl
dec
mov
inc
jle
sub
cmpsb
dec
mov
ja
out
cli
xchg
inc
test
inc
lods
push
jge
push
dec
rorl
mulb
sbb
sbb
lods
shrb
sti
sti
jle
push
or
sub
xor
aam
xor
xor
jbe
jo
xchg
lahf
dec
push
lret
mov
mov
int3
adc
lahf
mov
pop
and
mov
lods
xchg
ljmp
es
cli
sbb
fs
xchg
xchg
imul
data16
xchg
cli
out
stc
inc
push
adc
sub
in
pop
leave
or
gs
rcl
inc
xchg
iret
and
jns
sbb
inc
mov
or
add
es
and
shlb
jle
and
test
loopne
mov
lret
inc
pushf
pop
je
xchg
dec
test
cmp
jge
and
stos
shrb
imul
adc
fdivrl
lock
imul
pop
push
or
movsb
sub
adc
aam
and
ror
push
enter
les
aaa
mov
subl
arpl
push
jge
pop
stos
fcmovnb
sbb
jbe
inc
xchg
pusha
inc
in
adc
and
mov
jl
cli
rcrl
jecxz
cwtl
das
sub
and
out
cld
adc
push
adc
mov
andl
adc
push
and
pushf
add
mov
pop
and
pop
lret
xchg
lcall
push
repnz
push
aas
xor
jecxz
mov
loope
mov
scas
gs
and
and
bound
adc
and
fadds
lret
push
jle
add
in
jb
jne
fcmovbe
mov
xchg
xchg
pop
adc
push
push
and
add
and
xor
ret
sbb
jge
cmp
fwait
cmp
arpl
xorb
mov
imul
sbb
sub
aad
ss
xor
in
and
psubusw
or
pop
fwait
adc
or
mov
jb
jbe
out
lea
outsl
in
outsb
mov
iret
ret
cwtl
sbb
or
test
rcrb
cltd
add
lcall
mov
xlat
push
icebp
cmp
pop
xchg
xchg
loop
shll
jae
mov
adc
xor
aas
and
pop
or
jno
je
dec
jmp
jle
outsl
inc
sahf
lods
pop
jl
mov
dec
cmp
mov
and
sbb
aad
out
iret
pusha
aam
insl
outsl
push
mov
lock
dec
sbb
lea
fstpt
or
pop
mulb
or
push
or
sub
and
or
adc
dec
mulps
nop
pop
and
pop
jl
sub
or
repz
or
aad
jbe
lret
mov
subb
push
adc
push
ja
adc
inc
aad
sbb
js
cltd
mov
push
push
int3
mov
xchg
sbb
scas
imul
fstp
and
lock
cs
jp
sbb
or
mov
mov
sbb
adc
mov
xchg
repz
into
mov
fs
outsb
dec
pop
es
mov
mov
pop
lahf
push
dec
push
lds
rcr
outsb
movsb
pop
movsb
adc
into
pop
repz
dec
rolb
xchg
loope
stc
mov
push
mov
mov
xor
nop
out
cmc
mov
or
lock
xchg
cmp
orl
or
jne
aam
es
idivb
enter
addr16
mov
loopne
inc
cmp
out
aad
imul
push
cmp
gs
sbb
ljmp
popf
sbb
mov
bound
or
popf
xchg
lret
and
lds
cmp
mov
mov
shll
and
cltd
mov
adc
cld
jge
jmp
gs
mov
or
cmpsb
sub
mov
lret
xor
das
fldenv
gs
lret
lcall
mov
cld
movlps
jmp
mov
sub
loopne
xchg
ret
lods
dec
nop
into
in
adcb
insl
sub
add
ljmp
iret
xchg
mov
inc
lods
xchg
xor
inc
add
in
aad
icebp
stc
jnp
dec
fs
call
divl
adc
in
push
sbb
and
mov
mov
sbb
loopne
fimull
stc
or
outsb
sahf
mov
xchg
pop
or
dec
outsl
sti
inc
pop
mov
imulb
rcrb
rol
scas
or
fimuls
inc
push
subb
fdivp
dec
pop
mov
push
cmp
cli
sahf
adc
cmc
inc
and
xor
testl
call
mov
xorl
rorl
mov
and
dec
test
dec
jmp
sub
jle
cmc
jno
push
test
jmp
mov
je
lea
mov
aam
xchg
test
leave
arpl
cmp
cli
push
aam
xor
and
sub
inc
mov
in
lea
in
addr16
jmp
xor
lcall
fcmovnbe
insb
call
fadds
ss
lock
mov
pop
cmc
bound
mov
fs
inc
jmp
push
call
int3
xchg
sbb
es
push
jns
jp
mov
cli
mov
test
inc
add
inc
jae
ror
lods
adc
in
mov
cwtl
cmp
aaa
mov
mov
dec
mov
sbb
and
fcompl
shlb
es
jo
lret
std
sbbb
mov
sbb
adc
fidivs
mov
cmpsl
filds
or
mov
js
push
xchg
add
pop
stos
pop
adc
cli
repz
cli
pushf
loopne
rorb
insb
outsl
adc
jmp
xchg
movups
test
sub
subl
jnp
lea
sbb
dec
pop
iret
jp
sub
pop
cmpsb
dec
insb
add
push
mov
jl
pop
push
sbb
xchg
lcall
adcb
cmp
push
xor
fisttpl
push
cmp
int
inc
mov
rorl
cmc
xchg
out
push
aaa
inc
jno
jno
lods
test
out
cwtl
lcall
or
dec
ljmp
das
add
pop
xchg
stos
adc
stos
icebp
pop
sarb
test
rolb
leave
mov
lds
xor
mov
lods
inc
jmp
test
jne,pn
sahf
jns
cmpsl
and
mov
jecxz
and
jle
sbb
pop
jo
cwtl
cmp
loope
xchg
jb
fmul
dec
nop
cmpsl
jecxz
dec
and
inc
imul
push
cltd
ret
or
add
enter
cmpsb
dec
lods
das
jae
jns
adc
test
pop
aaa
sub
pushf
movsl
push
sbb
xchg
push
sbb
jne
and
pop
sub
xchg
xor
cmp
enter
sbb
lea
nop
cmpsl
or
jnp
lds
mov
decb
dec
cltd
and
lods
sahf
fildll
push
call
clc
mull
daa
repz
ret
sub
inc
clc
aas
or
rolb
sahf
scas
sub
jmp
cmp
add
and
and
les
pop
fidivs
jge
scas
fwait
out
aas
pop
mov
mov
add
orb
mov
jl
mov
stos
popf
dec
pop
nop
inc
imul
pop
or
cmp
or
lret
ss
jno
loope
add
sub
cmp
movsb
mov
arpl
js
loopne
cwtl
mov
cmp
mov
arpl
dec
icebp
stc
mov
jmp
push
pop
dec
and
push
scas
sbb
jl
cmp
sbb
mov
mov
js
mov
sti
popa
lret
mov
lds
ss
push
push
push
jns
rolb
aad
cmp
movsl
and
lods
fdivl
loopne
in
rorb
dec
psubusb
xchg
and
xlat
ret
pop
inc
cmpsl
negb
inc
or
outsl
cs
call
fs
mov
insl
adc
stos
mov
call
repnz
add
cli
std
mov
pop
lock
inc
stos
push
cmpsl
test
mov
xlat
jecxz
cltd
sbb
pop
insl
jle
mov
ret
sar
add
push
lods
add
push
xchg
mov
mov
int
mov
mov
sub
negb
bsf
pop
outsl
into
int
mov
fsub
inc
rclb
in
cwtl
out
push
inc
mov
imull
das
pop
je,pt
movsl
pop
push
cltd
cmp
dec
iret
xchg
les
push
push
push
dec
test
push
push
and
or
shlb
dec
outsb
vmovdqu
ret
int
aaa
pop
inc
add
scas
lods
or
jle
mov
mov
mov
xchg
lods
push
iret
popa
aad
aaa
cmc
xor
mov
addr16
leave
pop
jl
inc
jo
and
pop
sarb
loop
xor
dec
xchg
out
movsl
dec
mov
fwait
or
outsb
loop
loopne
xchg
and
outsl
mov
sarl
aaa
adc
mov
test
and
jmp
xchg
mov
daa
pop
out
sbb
ja
xchg
dec
pusha
xchg
adc
or
jecxz
flds
push
rcrl
aad
push
pop
push
xchg
out
enter
mov
pop
jnp
pop
fldl
dec
gs
mov
inc
or
or
jg
jnp
hlt
mov
lea
inc
mov
je
repnz
lods
add
pop
or
mov
cmpsl
inc
push
aas
stos
loop
jmp
dec
stos
jae
jmp
push
inc
cwtl
inc
fdivrl
aas
xlat
xchg
loop
iret
push
inc
aaa
lods
push
test
cmp
out
int3
sub
inc
jne
push
in
push
leave
test
fidivrs
lret
pop
xor
and
in
lds
push
adc
fistpl
sub
int
cmp
sub
cmc
arpl
inc
adc
pushf
inc
out
jecxz
aam
fsubl
and
imul
leave
rcrb
or
mov
pop
bound
add
xchg
sub
fidivrl
xchg
jecxz
adc
mov
xor
popf
jbe
jmp
xor
sbbb
xor
xchg
mov
mov
jecxz
stos
ss
cwtl
aas
dec
xor
mov
inc
rcll
jecxz
hlt
cltd
sub
inc
imul
fcmove
hlt
call
lock
hlt
cli
inc
mov
imul
sbb
xor
mov
jns
add
inc
es
rorl
icebp
dec
and
pop
imul
dec
aam
ret
sbb
repz
cmp
std
add
and
cmp
xchg
movsb
adc
inc
xchg
cmpsb
xchg
push
adc
mov
cmpsl
icebp
dec
movsb
xor
insb
pushf
cmp
xchg
xchg
in
fwait
out
fildl
loop
mov
sbb
loope
loopne
mov
loop
test
hlt
push
push
jne
dec
or
push
outsb
insb
shrl
popa
lea
into
or
add
jle
ret
cmp
or
sbb
sub
outsl
cs
jo
enter
mov
sti
repnz
mov
xchg
jp
add
enter
out
inc
add
adc
fucomp
and
rcrb
jmp
xchg
in
push
mov
int
push
mov
sub
test
mov
jmp
int3
sti
mov
jg
and
pop
movsb
fisubs
lea
fadd
in
out
out
aad
adc
nop
adc
pusha
shrl
sub
test
lock
test
mov
cmpsl
loope
insl
xchg
jle
push
sbb
insb
shrl
mov
adc
sbb
xor
sbb
jl
add
jle
jnp
dec
imul
and
cmc
nop
push
out
into
addr16
jmp
xchg
cli
cmp
cmp
iret
cmp
rol
test
inc
pop
into
cmp
outsb
cmp
jle
andb
mov
nop
or
mov
mov
shl
imul
jmp
jbe
adc
mov
test
out
mov
outsb
scas
or
cmp
loope
cmpsb
fldl
inc
dec
sbb
aaa
cli
and
jmp
je
mov
dec
test
mov
int3
and
mov
aas
push
int
jl
dec
mov
sub
add
xchg
mov
fs
mov
rcl
sub
in
iret
outsb
push
adc
xchg
xchg
lods
sub
mov
jne
ss
mov
pop
fbld
xchg
adc
push
or
test
fdivp
push
incb
jb
fsubrs
sahf
nop
jbe
xchg
fadds
xchg
add
shrl
call
add
push
mov
xorl
adc
cmp
xlat
test
mov
mov
mov
loop
and
pop
jne
push
aaa
sbb
xchg
mov
pop
clc
adc
jne
cmpsb
ja
sbb
int3
dec
loopne
push
daa
push
aas
push
insl
xchg
insl
shrb
sub
jbe
std
and
ret
mov
sub
sub
in
adc
pushf
in
in
dec
xchg
enter
dec
inc
hlt
pop
lods
imul
cmp
in
xchg
aas
mov
dec
imulb
mov
stc
add
pop
mov
add
cmp
mov
movsb
inc
dec
cmp
test
insl
cmpsb
pop
pop
aam
scas
mov
movb
dec
movsb
test
test
es
xor
mov
jl
movsl
cli
lcall
lock
pop
adc
fistpl
xchg
jbe
stc
dec
es
jne
xor
sbb
shl
or
push
push
sub
imul
sub
cmp
inc
lret
lret
out
popa
xor
in
pop
xor
jmp
clc
fistps
inc
divps
sarb
imul
aam
xor
add
cmc
ss
into
in
je
push
push
mov
pop
cmp
stos
push
jns
das
shl
xchg
std
jmp
sbb
das
lea
mov
mov
cmp
scas
cmpsl
out
mov
add
cmp
xchg
push
fwait
mov
out
scas
mov
outsl
shlb
out
mov
cmpb
rol
imul
cmp
imul
sarb
dec
mov
dec
int3
sbb
xor
outsl
add
test
imul
pop
jmp
and
jns
int
mov
dec
je
inc
xor
mov
cmc
sbb
out
xor
clc
push
mov
lcall
cmp
push
repz
xchg
or
arpl
dec
movsl
popa
add
ljmp
xor
ret
js
cmp
repz
scas
mov
push
sbb
jne
adc
test
push
lcall
xlat
inc
inc
mov
jmp
push
lret
mov
rol
mov
rcrb
mov
jb
mov
and
inc
fsubrp
cmp
scas
jmp
adc
cmpsl
cmpsl
or
cli
adcb
jo
fbstp
cli
adc
fdivrs
lcall
popf
insl
adc
pop
pop
test
jl
sub
leave
mov
shrb
stos
repnz
mov
xchg
daa
push
and
jmp
add
push
xchg
push
cmp
in
daa
mov
push
jno
shr
pusha
mov
sub
adc
jl
xchg
adc
sub
sub
clc
pop
pop
in
pop
cmp
inc
int
inc
mov
fdivrs
or
adc
adc
pop
fdivrl
lods
xor
cmp
fwait
sub
jl
jbe
test
sahf
push
mov
movsl
call
stc
inc
xchg
xor
clc
clc
inc
xor
adc
fdivs
cmpsb
sub
push
adc
cwtl
add
pusha
dec
arpl
jno
inc
mov
xor
cltd
fcmovne
test
pop
hlt
jle
cmp
xor
or
lahf
and
daa
jo
sahf
out
xor
mov
gs
sahf
xor
outsb
cmp
bound
add
pop
int
jg
aad
mov
inc
lahf
mov
add
loop
add
jmp
es
les
repz
js
adc
lcall
and
stc
jmp
jae
ljmp
jl
mov
sub
in
and
rolb
fmul
mov
fmull
outsb
loope
mov
jg
sahf
ror
out
add
rcrb
cmp
dec
mov
pop
cmc
ss
or
outsl
lea
push
adc
pop
flds
in
mov
lret
xor
cmp
shrb
filds
into
mov
pop
in
scas
mov
aaa
dec
or
loope
mov
dec
xchg
adc
movsb
push
push
scas
dec
aaa
cli
sti
test
jo
cmpsb
jno
inc
and
jno
cmp
sub
xlat
dec
andl
push
filds
cmp
in
pop
jmp
push
negb
mov
xor
push
out
pop
or
jns
xor
imul
pop
dec
pop
pushf
shll
push
fcom
mov
cmpsl
pop
nop
xchg
pop
in
pop
add
cli
jns
dec
xchg
inc
sub
loop
inc
in
sti
call
fisttpll
jb
insb
xchg
jbe
insb
pushl
jae
and
pusha
mov
adc
nop
ret
cmpsb
popa
mov
subb
mov
or
mov
dec
push
aam
ja
outsl
test
cwtl
andb
pusha
xor
movsb
pop
xor
and
jmp
push
xchg
loop
or
cld
mov
in
cmpsb
das
ljmp
pusha
in
fnstenv
and
sbb
ss
jno
dec
negl
sub
in
aas
or
movsb
mov
shr
or
xlat
imulb
cmp
popf
fdivl
adc
dec
sub
sbb
dec
push
push
xchg
out
mov
rolb
push
jns
mov
sub
cmpsl
jae
xor
sub
jg
in
fcmovnbe
repz
es
mov
rorl
add
in
lock
and
in
push
jl
ds
xor
cli
shrb
push
mov
notb
xor
fcompl
jnp
push
pop
lods
shl
mov
push
in
dec
iret
push
punpcklwd
es
dec
adc
inc
notl
sbb
cmc
dec
imul
dec
outsl
nop
xchg
adc
mov
sub
xor
ror
call
inc
jge
mov
rol
mov
pop
vmread
cmp
xor
aad
insb
pop
aam
dec
and
and
lock
xor
mov
xor
movsb
iret
je
push
xor
out
pop
or
jl
shrl
sbb
mov
nop
nop
adc
dec
or
es
shl
sahf
in
aas
imul
or
jle
cmpsl
repnz
jns
ret
and
int
lret
pop
cmp
addr16
repnz
mov
lock
int3
pop
mov
xchg
jbe
arpl
adc
pushf
mov
xchg
subl
fnstcw
pop
dec
jp
ret
iret
cmp
int
xor
xchg
and
mov
loop
sbb
stc
daa
push
push
icebp
push
arpl
or
and
es
adc
adc
les
xor
xchg
adc
or
jp
stos
lret
lret
adc
pop
mov
or
addr16
mov
lock
inc
cmp
jno
idivl
and
out
pop
push
cmp
in
cs
mov
pop
add
lret
push
frstor
add
pop
rcl
cltd
inc
cmp
aas
test
int
push
push
fisttpll
lods
dec
fwait
adc
or
or
or
mov
std
mov
mov
test
iret
fisubrs
sbb
popf
lret
imul
popa
xchg
inc
xor
add
mov
stc
aam
xchg
cmpsb
int
ds
movsb
inc
add
xchg
mov
cs
dec
dec
das
xchg
or
xchg
sub
test
repnz
loope
push
nop
mov
aam
xor
mov
sbb
movsb
add
xchg
xchg
jg
das
jg
out
and
repnz
xchg
addr16
out
mov
aas
cltd
mov
add
or
in
das
lret
ljmp
add
dec
push
sti
aam
dec
test
fildl
movsb
push
in
js
pop
xchg
clc
nop
leave
cmovle
es
push
daa
sub
jno
inc
in
inc
lods
mov
mov
xor
outsl
pop
gs
xor
push
ss
xor
out
jl
popa
cs
cmc
push
xor
dec
scas
cmp
sbb
dec
mov
xchg
test
or
cld
pushf
inc
rclb
and
fsts
push
sahf
sti
out
lahf
xchg
nop
lds
xchg
sub
xchg
stos
jb
inc
cmp
iret
jle
adc
into
sbb
lahf
popa
xchg
pop
sti
push
or
dec
add
imulb
sbb
popf
hlt
js
sub
or
mov
inc
adc
clc
pop
ds
adc
pop
pop
mov
pop
in
jo
aaa
dec
stos
or
aad
pop
inc
roll
stc
pop
xchg
test
pinsrw
lcall
push
cltd
movsb
and
xor
scas
movsl
pop
je
outsb
enter
jecxz
aas
push
das
testl
je,pt
test
mov
rcr
shlb
sub
cmp
xchg
mov
push
jp
inc
icebp
adc
gs
arpl
ret
sbb
xchg
pop
loop
pop
subb
movsb
add
or
or
mov
cli
test
insl
in
xor
ret
jg
scas
icebp
cmp
jne
dec
push
xchg
repz
jbe
mov
es
sbb
sbb
mov
push
rcll
push
rcl
xor
jbe
adc
gs
sub
inc
push
aam
pop
push
nop
scas
sbb
lods
inc
std
loop
sahf
dec
xchg
lods
or
xor
mov
lahf
jmp
jbe
addr16
les
jbe
test
sbbb
cmp
jbe
ret
lcall
sub
push
sbb
jp
sub
dec
xor
pop
xor
mov
mov
icebp
xchg
enter
into
and
stos
repz
mov
mov
mov
and
push
xchg
mov
xor
xor
scas
fs
cmp
xchg
or
jb
fdivr
aaa
idivb
mov
push
jp
iret
call
dec
lds
jno
scas
pop
fldl
cmp
leave
pop
clc
out
xlat
dec
sahf
cmp
in
test
sbb
jle
cmp
adc
push
and
rcrb
sub
cmpsb
pushf
enter
into
cltd
pop
arpl
sbb
cmp
push
xor
sub
mov
jb
xchg
iret
mov
pop
imul
mov
jb
dec
in
cmp
test
jbe
xchg
mov
iret
popa
cwtl
imul
inc
xor
or
sub
mov
dec
pop
test
inc
xor
js
ret
push
xchg
push
push
loop
xor
nop
xchg
dec
inc
inc
add
xlat
mov
sbb
adc
jns
push
pop
xor
cmc
je
mov
rclb
idivl
cld
popa
out
xchg
or
jns
gs
ret
outsb
push
sbb
and
push
or
pop
fidivrs
imul
cli
lret
outsl
jb
sub
add
loopne
sbb
stos
pop
lea
sbb
in
dec
shll
cmpsb
adc
ljmp
pop
and
loope
jle
pop
les
pop
push
out
fldcw
push
cmpsb
shlb
mov
addr16
mov
std
in
push
addl
aaa
jb
mov
jecxz
clc
add
xor
in
sbb
or
or
popf
les
orb
pop
nop
enter
sub
cli
scas
xchg
xor
xor
inc
movsb
xor
lret
mov
adc
clc
mov
popl
mov
or
adc
shll
xchg
add
lcall
cmp
xlat
add
lods
mov
xor
out
test
add
mov
insl
hlt
test
push
lret
mov
mov
jge
inc
popf
subb
mov
mulb
inc
cmp
pop
mov
icebp
or
std
test
xorb
test
mov
movsl
pop
shlb
out
mov
mov
mov
adc
xchg
scas
cs
sbb
mov
mov
lods
repz
pushf
das
xor
cmpsb
fst
ret
fimull
xchg
or
sub
ret
pop
mov
popf
dec
mov
push
ds
cmpsb
inc
sarl
sbb
jle
cmp
jns
int3
mov
add
pop
aas
and
or
lea
das
jge
pop
cltd
and
xlat
adc
add
mov
inc
mov
aad
xor
jmp
int3
and
into
cmp
stc
add
inc
hlt
rolb
loop
cmp
pop
je
or
outsb
ljmp
js
into
in
decb
jmp
mov
cmovo
and
roll
out
clc
mov
mov
outsl
mov
add
clc
inc
push
daa
xor
cld
jecxz
push
shlb
outsb
add
add
and
imul
in
lock
lcall
sbb
and
jl
incb
xchg
lods
addr16
nop
jne
dec
pop
lcall
xlat
push
mov
or
sub
scas
jb
sub
mov
and
stos
or
jno
push
stc
je
mov
push
xchg
mov
xor
xor
pop
jnp
repnz
rcl
mov
lcall
and
cwtl
mov
enter
shlb
inc
dec
popa
sbb
push
ss
jno
mov
cmp
fs
in
dec
cltd
push
mov
jae
ret
sbb
jle
mov
mov
sub
loopne
add
push
mov
loope
mov
into
jbe
fcomip
ss
jno
sti
pop
mov
iret
xchg
cltd
loope
loopne
lret
lock
stos
aas
sti
lret
lock
or
sub
ljmp
std
xchg
and
xorl
xchg
sbb
xor
call
je
mov
inc
mov
test
and
jb
push
outsb
xor
cmp
add
aad
iret
mov
fldl
cmpb
push
cwtl
jbe
jl
aaa
fwait
mov
loopne
ret
sbb
loopne
sub
inc
fidivl
sahf
aaa
ret
nop
in
inc
fsts
jecxz
mov
push
xchg
sbb
das
testb
sbb
insb
sbb
bound
out
orl
mov
jge
pop
add
sub
loope
push
imul
dec
dec
pop
arpl
lock
aaa
dec
xor
out
adc
mov
adc
mov
aas
dec
cltd
cmp
or
pop
movb
xchg
inc
cmp
mov
dec
and
push
dec
pusha
cli
call
mov
mov
add
mov
and
imul
lods
mov
jo
xchg
sub
std
mov
mov
ret
filds
or
rcrb
lods
rcl
lret
lods
out
hlt
sbb
movsl
rolb
jmp
sbb
ficoms
xor
jmp
mov
test
and
mov
dec
jg
das
arpl
xor
or
cmp
xor
inc
xor
js
in
negb
pop
and
jmp
add
inc
jp
testl
roll
mov
mov
popa
mov
imul
repnz
xor
xchg
jmp
call
mov
push
inc
cmp
rcr
sbbl
inc
aad
adc
jb
add
cld
arpl
das
dec
scas
int3
repz
pop
pushf
addr16
mov
or
je
mov
mov
loopne
ds
xor
ficoms
or
repnz
lea
es
int3
fucom
imulb
out
mov
sti
jg
lcall
add
mov
fidivrl
xchg
sub
mov
gs
mov
add
xor
scas
lcall
push
mov
pop
xor
jg
stos
adc
xor
mov
pop
mov
sahf
sarb
dec
scas
sub
addr16
je
xor
push
cmp
aas
fnsave
gs
scas
cmpsb
inc
cmp
iret
sbb
jp
bnd
or
mov
mov
pusha
ficoms
insl
dec
out
out
jp
fsub
mov
add
shlb
push
add
enter
or
lahf
das
pop
mov
mov
adc
imulb
mov
push
mov
jae
inc
mov
into
mov
rorl
jp
adc
push
sub
pop
ds
xor
xchg
and
lahf
mov
sarl
not
jmp
jae
jae
mov
mov
push
mov
scas
sarl
pop
test
or
pusha
mov
repz
jns
repnz
xchg
push
addr16
cmp
mov
jle
shrb
ret
jg
add
xchg
lods
ds
cwtl
sbb
push
sub
inc
dec
sub
jmp
push
leave
inc
sbb
add
sub
shl
stos
sbb
add
fnstsw
xchg
test
push
fs
mov
imul
xor
dec
lods
sub
jecxz
cmp
scas
dec
ret
push
and
mov
pop
cmp
jbe
add
insb
mov
pop
jns
pop
adc
mov
test
ficompl
cmp
push
dec
stos
fstp
popf
aam
arpl
xorl
daa
or
xchg
bound
inc
xor
stos
sbb
mov
mov
repz
xchg
ljmp
in
mov
jge
pop
mov
sub
cmp
popa
push
jl
scas
and
push
push
mov
pop
adc
sbb
fs
dec
push
xor
sub
fs
out
fldcw
xlat
lahf
jg
lea
dec
test
dec
jmp
jle
fcomps
push
xchg
out
sarl
and
repnz
into
pop
pop
mov
pusha
jno
add
pop
adc
test
pop
cmpb
int3
sub
call
lds
jb
mov
mov
scas
lret
xchg
mov
and
subl
enter
mov
xor
jne
out
adc
mov
sbb
push
mov
inc
fcompl
mov
cltd
xor
lods
pop
xchg
push
xchg
dec
jecxz
jl
sbb
lea
xor
mov
add
insl
adc
and
inc
lret
push
jle
dec
dec
sub
inc
and
mov
fildl
jbe
js
es
aad
dec
insb
adc
movsl
and
dec
jne
aas
push
mov
ret
lret
cmp
cmpsl
lods
or
mov
or
lea
mov
sbb
and
mov
test
push
sbb
cmp
out
aaa
repnz
fistps
adc
xlat
iret
ja
xor
sub
lcall
cmpsl
pop
outsl
mov
pop
fistl
bound
or
outsw
xchg
cltd
inc
ficompl
or
mov
cmp
or
outsb
inc
nop
inc
jecxz
movsb
mov
dec
mov
mov
mov
pop
pop
fs
rclb
hlt
clc
iret
scas
adcb
aaa
cmp
ficoml
hlt
movsl
mov
repz
rclb
xor
in
xchg
ljmp
repz
in
arpl
enter
in
sbb
ljmp
test
mov
push
clc
sahf
xlat
cs
pop
pusha
mov
pop
outsb
xor
test
or
outsl
icebp
test
mov
jl
ss
dec
push
pop
inc
push
cli
outsb
sbb
out
out
pop
lea
jge
cmp
jne
adc
cltd
dec
std
aad
dec
scas
cmp
call
xchg
int
mov
fwait
pcmpeqb
mov
xor
clc
fst
xchg
mov
out
or
jo
das
push
pop
leave
push
adc
xchg
jmp
or
mov
jge
xor
mov
nop
movsl
dec
push
xchg
int3
push
popa
jl
cmp
cmp
cli
in
scas
outsl
cli
and
dec
fs
sbb
pop
and
call
jno
adc
cmpsb
movb
mov
xor
sbb
push
or
aas
cmp
in
cmp
fidivrs
or
ret
jmp
push
mov
lds
jnp
les
clc
outsl
in
or
dec
or
and
in
jge
andl
push
cwtl
das
mov
int
mov
das
arpl
pusha
repz
push
jmp
or
nop
orb
ret
push
ss
mov
xchg
cmpsb
stos
add
movsl
in
aad
js
das
out
fwait
call
or
int3
mov
imul
xor
pusha
into
shlb
fdivrl
aad
push
dec
addl
out
mov
js
out
movsb
mov
push
sti
pop
sbb
xor
sahf
decb
daa
stos
and
add
inc
in
mov
ja
shld
test
fcmovnbe
or
push
dec
cmc
mov
fistpll
push
jg
push
mov
clc
mov
pop
loopne
jae
xchg
cmpb
inc
lret
outsb
movsb
sbb
pop
shll
fwait
js
dec
jae
adc
sbb
rcll
push
dec
rorl
mov
mov
aam
clc
mov
cmp
ja
add
cmp
outsb
scas
mov
mull
in
testl
das
rcrl
jle
adc
les
adc
nop
pop
xchg
cltd
jo
loop
ljmp
push
shlb
dec
push
cmpsb
imul
mov
insb
ror
aas
sbb
insl
repnz
icebp
or
adc
push
jo
push
sub
inc
or
jle
inc
fiadds
dec
cmp
mov
lods
ret
cmp
xor
lods
sub
nop
scas
sahf
sub
jecxz
push
sub
lods
jg
je
or
jae
mov
lret
fcmovnbe
cmp
fidivl
mov
sub
fdivl
outsb
fcmovb
jg
mov
in
add
or
out
cmpsl
orb
inc
gs
insl
add
mov
pushf
aad
pop
jle
jg
fucomip
or
inc
pop
pop
aad
jmp
push
inc
cmp
push
mov
lods
dec
pop
or
pop
and
fdivl
mov
ret
mov
sub
jl
xorl
sbb
sub
stc
sub
cmpsb
sarl
push
call
add
push
bound
xor
or
sbb
cmp
dec
in
and
dec
mov
mov
push
in
push
xor
add
sti
leave
jnp
iret
xor
jg
orb
inc
cwtl
das
sub
mov
adcb
adc
jne
pop
adc
dec
out
pop
test
add
inc
mov
mov
push
xchg
inc
cmpsl
inc
mov
jp
movsb
jbe
mov
sbb
lock
push
cs
xchg
inc
mov
inc
add
mov
clc
push
cmpsl
jp
into
lahf
jmp
inc
sub
int
xor
fidivrs
jb
push
stos
fwait
mov
cmp
lret
mov
mov
mov
ja
mov
in
sub
mov
dec
fnstcw
and
leave
pop
adc
xor
jge
roll
rep
mov
mov
xchg
push
rclb
or
push
shl
in
aam
xor
test
sbb
lcall
push
mov
int
or
xor
shlb
push
pop
dec
addb
add
push
mov
fnsave
punpcklwd
xchg
clc
xchg
xlat
add
rorb
sbb
adc
and
pop
and
rep
bound
mov
cmpsb
nop
bound
insl
pop
nop
movsb
mov
leave
cmpsl
mov
push
pop
xchg
or
adc
out
aad
add
jbe
cwtl
add
jb
sahf
push
xchg
pop
je
mov
jno
cmpsb
les
mov
scas
adcl
out
cmpb
and
xchg
pop
adc
mov
inc
hlt
xchg
insb
xor
xchg
add
sbb
dec
ljmp
xchg
dec
popa
insl
pushf
mov
nop
fstpl
sub
push
adc
out
jb
xchg
popa
xor
stos
push
addr16
pusha
ret
aam
stos
cmp
daa
fwait
pop
mov
cld
pop
sbb
xor
xchg
jbe
shrl
dec
xor
sbb
pop
lods
pop
or
mov
shr
fdivrs
testl
in
or
and
faddl
mov
xchg
add
lds
insb
adc
mov
pop
ljmp
xchg
shrl
iret
dec
js
xchg
out
or
mov
in
sub
push
mov
mov
out
or
shrl
add
mov
stos
and
pop
xlat
mov
add
insb
dec
sbb
aas
outsb
inc
in
push
pop
fs
out
les
jbe
xchg
daa
stos
or
movsl
mov
push
insb
rep
in
mov
aam
sahf
mov
fldenv
insb
dec
mov
inc
or
pop
scas
or
data16
sbb
outsb
pop
adc
mov
mov
mov
stc
pop
lcall
lahf
incl
pop
and
stc
jb
push
outsb
xchg
or
outsl
inc
rolb
int3
lds
sbb
jno
mov
or
enter
adc
mov
scas
adc
sbb
add
lods
outsl
ret
ja
xlat
es
pop
adc
cmp
fnstcw
dec
lahf
mov
mov
mov
in
repz
xchg
test
push
xchg
scas
rclb
and
xchg
gs
nop
cmp
data16
in
rcl
jne
sar
inc
fisubs
fisttpl
mov
mov
ljmp
cmp
add
fwait
jg
fsub
int3
stc
mov
adc
xchg
jecxz
fbld
pop
inc
stos
push
mov
ss
jnp
or
xchg
xchg
loopne
and
fs
cltd
lahf
ret
test
cli
mov
movsl
ljmp
jg
mov
sub
cmp
or
aaa
pushf
mov
leave
jo
dec
push
vpextrw
lds
jnp
fwait
loopne
rolb
bound
push
dec
xor
ljmp
push
aas
and
test
stc
sbb
inc
fidivl
and
and
add
fs
add
push
loope
test
inc
or
xchg
clc
lret
jmp
ds
enter
push
jb
in
cmp
fisttpl
movsl
mov
iret
icebp
bound
jae
inc
cmp
mov
mov
pop
pop
xor
movsb
andl
int
xchg
adc
in
pop
imul
cmc
addr16
xor
push
iret
jge
sti
sbb
out
and
clc
and
pop
in
lahf
in
xchg
rorl
shrl
insl
jmp
sub
pop
aad
fisubrl
adc
repz
mov
scas
arpl
sar
pop
pop
sbb
jae
stos
push
sub
test
push
xor
xchg
cwtl
pop
push
insl
nop
scas
xor
jae
dec
push
dec
xchg
mov
xchg
test
divb
inc
in
pop
lds
xchg
mov
dec
loope
movsl
jmp
mov
rcrb
nop
std
push
ja
adc
fsubl
arpl
push
stos
cmpsl
mov
or
imul
mov
ja
enter
mov
ds
lcall
inc
cmp
stos
jecxz
shll
xchg
mov
das
negl
sti
dec
into
mov
jmp
lods
hlt
xchg
enter
negb
lahf
jmp
repnz
pop
enter
jle
add
and
and
mov
imul
mov
in
or
and
lock
sbb
mov
cltd
pop
lods
mov
sbb
movsb
ljmp
pop
cmp
xor
sub
std
sub
jb
xor
mulb
jbe
xchg
jmp
dec
rorl
lahf
insl
mov
or
and
adc
push
faddl
push
loope
lret
mov
push
cmp
mov
push
xchg
sarl
xor
dec
mov
dec
aam
push
cmp
mov
fs
movsl
mov
out
push
arpl
aas
lret
lahf
data16
movsl
cwtl
pop
cmp
test
sbb
into
mov
xchg
pop
adc
fs
pop
mov
add
mov
jne
loopne
mov
push
mov
subl
adc
sbb
mov
lock
mov
xchg
imul
and
mov
cltd
test
pop
adcl
cmpsb
into
add
aam
xchg
xor
imul
sub
out
jno
jge
mov
bound
in
jge
xor
cmp
mov
xor
loop
inc
mov
and
or
mov
pop
fwait
test
fs
ljmp
outsl
sbb
ficompl
cli
jb
fcom
out
and
xor
loop
es
lock
ds
sbb
xor
xchg
pop
xchg
cld
xchg
push
dec
mov
push
pop
test
movsb
mov
cltd
ljmp
sti
add
xchg
inc
or
inc
adc
xchg
xchg
mov
mov
pop
mov
test
or
dec
xor
jnp
fs
stc
dec
fistpll
adc
pop
stc
xor
inc
mov
iret
jge
jns
das
cmp
iret
xor
xor
out
xchg
sub
enter
les
mov
test
into
das
clc
jne
mov
sbb
or
xor
pop
bound
loop
add
in
pop
mov
or
push
or
shrl
pop
in
insl
movb
sub
repnz
stc
test
loopne
enter
mov
add
jl
aad
icebp
jle
ret
aas
mov
bound
pusha
cmpsl
adc
pop
test
imul
fcompp
je
dec
out
push
pop
mov
jno
jp
and
mov
notb
push
pop
inc
test
clc
push
pushl
pop
jge
ljmp
xor
cmp
sub
inc
imul
hlt
call
and
cmp
loopne
mov
fstl
imulb
sub
inc
nop
dec
pop
repz
daa
outsl
cmp
mov
test
gs
sbb
pop
sub
add
push
xchg
xor
cld
inc
xchg
and
gs
arpl
mov
out
mov
into
pusha
inc
jmp
push
mov
pusha
pop
scas
cld
pop
mov
xchg
loop
shrb
sbb
shlb
leave
mov
jle
sub
mov
or
mov
pop
jg
cwtl
jp
dec
clc
bound
jne
pop
pop
testb
jae
pop
xchg
xchg
push
sub
addr16
mov
cmp
lds
jne
mov
daa
mov
popf
shld
loopne
cmpsb
scas
mov
mov
and
movsb
icebp
xor
xor
sarb
bound
push
cli
push
add
cmp
sbb
inc
mov
arpl
adc
lds
add
or
orb
aaa
xor
and
into
lods
pusha
mov
dec
outsb
cmp
jns
push
test
push
cltd
rcrb
sahf
adc
lock
cmp
repnz
loope
pop
and
xor
int3
daa
imul
orb
add
adc
mov
sub
mov
out
scas
out
cmc
cld
jae
rcr
inc
mov
stos
mov
imul
sub
imul
and
in
push
add
inc
scas
loopne
arpl
xchg
cmp
fs
add
adcb
enter
sbb
and
gs
add
and
fucom
icebp
into
inc
jp
xor
arpl
enter
cmp
bound
inc
sbb
loop
pop
cwtl
in
mov
in
in
test
sub
push
dec
jmp
cmp
shlb
ret
adc
mov
xchg
ss
cmp
testb
mov
or
mov
add
cmovbe
mov
pushf
aaa
push
imul
je
xor
inc
xchg
lock
imulb
orb
in
call
add
push
push
mov
xchg
data16
push
lods
test
mov
andb
sahf
testb
jae
cmpsl
mov
xchg
pop
xlat
icebp
xchg
inc
rcrb
xchg
pop
mov
adc
or
shl
cli
into
pop
add
sub
mov
ss
testl
push
sub
xchg
add
repz
add
inc
mov
outsl
pop
pop
int
icebp
inc
scas
cwtl
faddl
int
push
shlb
cltd
mov
mov
popf
ret
fdivl
mov
ret
fistps
fnsave
cmpsl
imul
cmpsl
push
xchg
popf
es
xlat
xchg
lahf
sbb
sub
fistps
scas
xchg
das
xchg
subl
cmc
shll
gs
jle
mov
enter
movsl
aad
pop
dec
enter
pop
add
test
mov
xchg
xor
lods
jge
stc
testb
imul
andb
adc
enter
addb
inc
inc
orl
psubb
fxam
clc
div
or
mov
add
xchg
add
xchg
pushf
les
xlat
cli
lods
test
test
lret
pop
and
pop
in
out
mov
pushf
jecxz
xchg
fiadds
mov
je
fdivrp
test
inc
sbbl
dec
dec
lcall
cmp
pop
jnp
jg
mov
dec
sbb
mov
jge
xchg
cmp
cli
rolb
or
lea
xorb
and
dec
jecxz
inc
mov
and
cld
xor
enter
push
adc
mov
dec
popf
xchg
je
mov
add
and
ds
jge
dec
cmpsb
sarb
mov
aam
js
call
xchg
adc
cld
arpl
imul
sbb
dec
scas
loopne
sbb
addl
xchg
mov
aaa
out
lock
sub
add
shll
cltd
mov
mov
jno
push
cmp
xor
sub
test
maxps
pop
mov
cmp
out
mov
ds
ljmp
adc
fisttpl
pop
mov
adc
in
inc
sbb
pop
popa
sbb
dec
les
ret
xchg
add
pop
fnstsw
and
dec
mov
je
adc
mov
test
xchg
fldpi
test
push
mov
mov
lods
std
fwait
push
push
dec
add
lods
cmp
cmp
cmp
inc
dec
ret
pop
scas
test
sub
add
fdivrl
pause
sub
arpl
push
leave
mov
rcrl
sub
xor
or
das
xchg
jp
xchg
mov
and
push
les
pop
shll
cmp
out
pop
std
ljmp
mov
imul
inc
lds
jne
nop
push
lea
rclb
gs
xor
adc
sub
or
mov
xor
add
push
imul
cmc
sbb
inc
push
data16
cmp
aaa
inc
push
addr16
or
outsl
dec
mov
cmpsb
xchg
sbb
popf
in
movl
mov
xor
shll
mov
xor
and
jae
mov
sbb
dec
inc
mov
lcallw
out
sbb
xchg
mov
ror
leave
cmp
xor
scas
outsl
cli
jo
mov
mov
jae
mov
bound
cltd
fs
mov
push
or
imul
rorb
jp
pop
sbb
xchg
fmuls
sbb
ret
mov
mov
cmp
and
mov
mov
popf
fwait
dec
mov
mov
and
leave
add
mov
adc
bound
jge
cmp
in
jp
loop
push
xchg
mov
in
je
dec
mov
cmp
in
mov
mov
je
adc
pop
xchg
mov
xor
mov
hlt
dec
add
xchg
pop
ds
jmp
movsb
scas
xchg
mov
cs
dec
shrb
sub
inc
rcrl
adc
cmp
mov
pop
add
xchg
or
jns
xor
mov
lea
cmp
outsl
dec
es
es
adc
cmpb
loope
cwtl
les
xor
movsl
jbe
gs
test
ljmp
mov
rolb
test
and
mov
and
ss
mov
jnp
std
scas
mov
pop
mov
push
xorb
adc
insb
shll
je
hlt
sbb
add
fstpl
outsb
lret
test
in
sarb
xor
aam
fldcw
mov
jmp
adc
jb
int3
pop
aam
shll
in
dec
add
or
sub
pop
sub
lods
jl
andb
cmp
xor
xor
or
gs
inc
add
xchg
stc
dec
xor
sarb
hlt
mov
push
inc
push
mov
testb
outsb
push
aam
divb
push
sub
fstl
push
cmc
movsb
inc
and
fwait
push
cli
ja
shlb
pop
xchg
add
mov
aam
daa
xor
sub
cwtl
clc
aas
cmp
stos
push
scas
or
pop
push
add
sub
sbb
xchg
into
loope
sar
stc
loop
pop
stc
ficompl
jo
insb
push
jmp
mov
sbb
add
xchg
cld
ss
leave
lods
js
call
shl
mov
mov
je
or
inc
jg
dec
lds
adc
xor
xor
adc
sub
xchg
mov
and
test
scas
lds
inc
fwait
pop
push
add
xor
shrl
out
sub
stos
sub
mov
repz
aas
popf
jle
dec
jl
hlt
movsb
xchg
pop
inc
sub
jmp
shlb
lcall
add
pop
mov
cmp
mov
shl
js
dec
mov
mov
dec
enter
inc
add
divl
jle
and
xor
mov
rolb
stc
dec
clc
push
inc
push
idivl
cld
push
mov
jne
xlat
rorl
mov
dec
cmp
push
repz
lret
arpl
pop
in
mov
add
jnp
mov
sub
ret
movsl
or
xchg
lcall
add
stos
xchg
inc
sbb
mov
xchg
outsb
push
mov
cmp
mov
in
jge
ss
mulb
xor
jno
push
jmp
pop
inc
cld
xchg
int3
mov
cmp
sbb
dec
out
pop
inc
mov
lock
int
inc
pop
test
push
dec
or
xchg
jge
xlat
hlt
mov
jmp
sbb
ljmp
ja
imul
test
stos
int3
shl
fsubl
jecxz
iret
jl
int3
jb
inc
adc
push
inc
add
xor
cld
add
add
movsb
mov
inc
xor
mov
imul
or
pusha
leave
loopne
push
push
xor
aaa
dec
stc
shll
das
les
fs
cs
xor
jo
mov
out
mov
fisubs
inc
lds
test
popa
push
lret
popa
mov
in
pushf
pop
stos
in
xchg
jl
mov
ss
pop
xor
clc
ljmp
gs
mov
mov
arpl
add
jmp
repnz
mov
cs
repz
pop
push
int3
jo
rorl
jne
push
pop
adc
mov
dec
divw
mov
jns
push
sbb
fstps
cltd
jbe
popa
cmp
xlat
mov
push
jb
mov
jnp
ds
test
lock
outsl
pop
arpl
or
pop
test
iret
lods
cs
cmp
test
add
fidivs
cmp
and
xchg
jl
xor
mov
test
test
push
movsl
insb
mov
push
mov
cmp
pop
das
pop
add
fsts
arpl
out
add
cwtl
jb
dec
xchg
pop
rcll
push
cwtl
ret
sbb
test
shrl
adc
stc
stos
push
leave
ret
mov
pop
cmp
in
scas
cwtl
clc
adc
sub
pushl
jmp
imul
adc
sub
xor
mov
out
out
push
mov
sbb
outsl
jecxz
add
data16
or
fwait
lods
orps
adc
mov
xor
call
jmp
clc
lea
push
sbb
mov
xor
fdivp
imulb
ret
or
add
jl
fwait
sbb
lods
rol
roll
push
call
lcall
into
and
or
xor
insl
loopne
jecxz
fcomps
cmp
xchg
int3
cmp
std
cmp
stos
inc
push
cmpsb
int
sti
test
jo
xlat
andl
scas
mov
or
cmp
inc
inc
jle
rcr
ret
ss
das
orb
pop
push
movsb
mov
mov
les
pop
mov
add
test
pop
inc
and
lods
push
cmp
outsb
arpl
aad
test
pop
pop
pop
pop
jge,pn
xor
mov
outsl
in
mov
and
loopne
test
pop
cli
mov
sbb
dec
mov
pop
jmp
sbb
sbb
insb
xchg
fs
mov
hlt
jae
imul
sbb
in
xchg
dec
das
add
fs
jne
pop
push
out
inc
xor
dec
jo
inc
aad
out
and
adc
pusha
sub
fdivrs
xor
fcmovnbe
fildll
sub
cmp
jmp
scas
mov
mov
pop
ds
mov
mov
test
cmc
out
lahf
cwtl
jle
xchg
dec
cmpsb
xlat
in
iret
and
push
and
inc
mov
iret
ret
lods
adc
push
mov
mov
jmp
mulb
push
push
mov
das
lcall
and
mov
aam
mov
push
addr16
fcompl
lods
out
loopne
add
jbe
cmp
pusha
roll
scas
cmp
orl
cmp
std
mov
pop
jns
mov
adc
adc
and
aaa
inc
int
xchg
lods
ret
orb
ret
and
pop
dec
xlat
add
sbb
add
inc
daa
ret
pop
mov
pop
test
push
sti
and
jbe
cld
sub
xor
or
inc
sysenter
mov
xorb
pop
je
jbe
inc
test
dec
lahf
and
pop
pop
pop
pop
sub
repz
jecxz
jmp
sbbl
pop
cmpsb
mov
xchg
popa
int3
mov
xchg
jge
push
imul
adc
xadd
cmpsl
and
pop
or
push
pop
rolb
pop
roll
mov
or
nop
int
imul
inc
cmp
add
jne
cmpsb
jmp
xor
out
xchg
mov
nop
xor
in
sub
xlat
scas
lods
push
adcb
insb
shll
cltd
inc
loope
mov
cmp
std
int
test
popa
rclb
mov
insl
inc
aas
sbb
jecxz
dec
push
pushf
sbb
addr16
sub
mov
je
outsb
negb
loop
fisubrs
sti
jle
lods
xor
xor
push
dec
scas
pop
in
xchg
imul
jge
push
insl
cmpsl
xlat
loope
mov
movsl
scas
cmp
xor
and
cmp
dec
lea
push
or
adc
dec
dec
lods
sub
jp
adc
ja
xchg
mov
xchg
addr16
and
jle
rolb
jmp
fcmovnbe
mov
sub
cmpsl
in
les
inc
dec
xor
push
inc
daa
pop
cmp
ss
dec
stos
imul
xor
mov
mov
ljmp
fcompl
jp
xor
jg
mov
push
les
sbb
or
lret
xor
pop
or
sub
jae
push
sub
or
fldt
ret
jmp
mov
js
pushf
cmp
ds
lock
lahf
movsb
pop
fstpl
push
add
push
imul
scas
sbb
cmp
into
lock
cmp
test
shrl
cmp
push
add
clc
out
lea
pop
lret
xor
pop
dec
push
mov
pop
jns
cmovp
mov
adc
pushf
add
call
jg
sbb
cmp
lds
adc
mov
dec
push
xchg
add
out
adc
std
jno
test
inc
outsl
leave
loop
leave
adc
xchg
xor
adc
mov
jbe
push
mov
lods
mov
loop
fldcw
add
add
jle
xor
xor
mov
imul
jns
jnp
jmp
outsl
data16
in
mov
push
xchg
fwait
bound
js
adcl
ret
addl
xor
retw
sbb
in
data16
xchg
stos
dec
inc
movsl
cmpb
mov
mov
sub
scas
push
or
mov
xor
pop
int
jp
mov
cwtl
mov
pop
jo
sar
mov
test
cmp
mov
cmp
push
cmp
jbe
mov
pop
xor
stos
gs
mov
fimuls
fs
add
mov
pop
cmp
adc
decl
test
or
scas
and
adcl
cmc
sbb
push
push
push
adc
arpl
clc
mov
dec
mov
inc
popf
adc
dec
pop
pushf
dec
dec
rcl
push
mov
insl
in
fsubrs
mov
sbb
rol
test
sbb
mov
inc
mov
jo
lahf
add
pop
iret
push
push
mov
stos
jnp
mov
or
mov
push
shr
adc
dec
inc
or
sahf
jns
push
sbb
xor
sub
adc
pop
adc
test
mov
bound
andl
call
dec
adc
cmp
mov
inc
and
xor
mov
imul
stos
mov
adc
jmp
in
mov
cmp
xchg
sahf
inc
jb
ficoms
mov
lret
mov
cmp
jmp
ds
add
test
aas
jmp
mov
insb
lret
fs
int
inc
inc
pop
fcomp
ljmp
insb
ja
adc
mov
mov
rolb
test
fcomi
rcrb
daa
ds
push
or
std
outsl
mov
sbb
cs
push
mov
out
adc
cli
sub
xchg
sbb
and
mov
adc
sbb
and
or
xchg
rcl
insl
inc
imul
fucomi
les
xchg
int3
outsb
xchg
inc
xchg
jecxz
es
mov
jnp
cwtl
cmc
mov
imul
fidivrs
lret
mov
insl
insl
js
test
mov
in
inc
icebp
inc
xchg
fdivl
jnp
stos
mov
push
jno
pop
pop
popa
jecxz
xor
mov
fsubl
cli
sub
or
jo
jae
popl
or
inc
pop
in
add
sbb
je
sti
cmc
push
inc
dec
push
in
icebp
mov
dec
lds
mov
push
push
dec
add
or
push
aad
xor
sub
push
or
sub
mov
enter
std
push
push
outsb
cmpsb
popa
lock
and
icebp
test
push
sarb
and
sbb
dec
xchg
dec
adc
or
addr16
cmp
push
lods
xchg
insl
outsl
cmpsl
push
lods
mov
jl
sub
cmp
or
out
xor
pop
dec
xorl
mov
push
stos
inc
inc
mov
jns
roll
sub
insb
mov
push
and
jne
jp
cmpsl
adc
push
or
call
mov
and
arpl
ret
test
das
inc
pop
cmc
fwait
mov
pop
scas
push
fidivrs
ficomps
mov
pop
pusha
jmp
shlb
cld
aas
pop
popa
xor
inc
aad
pop
ret
test
test
sbb
cmpsb
pop
leave
xor
cmp
sbb
xchg
xchg
sub
inc
cwtl
pop
fcmovbe
bound
dec
jecxz
loopne
cmpsb
packuswb
sbb
xor
push
pop
adc
fmull
jmp
sub
pop
mov
scas
sub
ljmp
mov
adc
dec
faddl
xchg
jmp
sbb
push
sbb
fs
sub
lods
add
push
icebp
pop
fdivl
ljmp
pushf
lahf
and
insb
aad
scas
jbe
out
popa
sahf
adc
cmc
fwait
insl
add
arpl
mov
pushf
orl
or
cmp
ficoml
cmp
dec
fsubrl
or
stos
lcall
cmpsl
cmpsb
lret
pop
inc
mov
ret
subb
int
mov
inc
lock
mov
iret
subl
sbb
jnp
mov
mov
sbb
cmp
xor
insl
adc
call
leave
jge
pop
mov
es
cmp
hlt
pusha
imul
out
in
and
jle
hlt
push
adc
out
sti
adc
imul
inc
test
into
je
push
pop
cmp
jo
push
inc
adc
ficoms
adcb
aam
xlat
loop
lahf
mov
sbb
xor
jo
psubusw
sub
xchg
hlt
cwtl
lcall
popf
divps
jmp
mov
jge
ljmp
add
bound
repnz
lcall
sub
and
and
sub
jmp
sub
jp
gs
int3
mov
cltd
aas
sbb
lea
mov
sub
cli
lods
adc
sbb
pop
xchg
push
gs
iret
add
jle
xor
sub
jo
in
mul
mov
xchg
mov
inc
andb
mov
arpl
insl
fmuls
ss
insb
inc
pop
and
push
mov
ljmp
inc
jle
or
fstpl
mov
pop
sti
ret
bound
ret
aaa
mov
movsl
mov
pop
inc
roll
push
xor
cltd
xor
jp
and
test
push
scas
sbb
xchg
bound
jo
jae
bound
sbb
mov
roll
mov
std
subb
aaa
mov
xor
loop
insl
dec
xchg
dec
stc
lahf
jae
clc
loop
cmp
cli
cmp
lcall
ss
mov
cmp
pop
fcom
lea
jp
call
cmpsb
arpl
jnp
int3
mov
cmp
int3
cwtl
xchg
int3
and
mov
jo
mov
dec
inc
and
pushf
or
idivb
sbb
dec
xor
jae
and
addr16
mov
mov
dec
dec
jg
cld
dec
xchg
popa
mov
pop
push
test
shlb
inc
jno
jb
addl
imul
sbb
shlb
add
dec
popf
sahf
jae
nop
pop
add
xchg
icebp
movsb
icebp
add
or
imul
test
cmp
ffree
movb
ss
inc
js
cmc
repz
in
imul
stc
jne
or
cli
mov
cmc
add
pop
sbb
mov
mov
sarl
test
xchg
cld
lret
push
mov
add
ret
lock
or
dec
jl
ss
inc
push
stos
mov
dec
out
mov
or
pop
hlt
cwtl
out
scas
cmp
lock
jne
jnp
and
aad
dec
scas
and
mov
pop
push
fwait
movsb
fsubrl
in
jle
gs
push
add
mov
sbb
bound
adc
sub
pusha
xor
mov
out
shr
or
cmp
outsl
cltd
bound
inc
or
push
xchg
bound
sub
xchg
push
sub
sub
lock
mov
jne
xchg
or
movsb
mov
dec
adc
adc
and
sbb
iret
cmpsb
aas
jne
mov
arpl
lahf
adc
stos
inc
stos
inc
stos
cmp
ret
lea
add
pushf
inc
sub
stc
int3
roll
sbb
sub
fwait
scas
mov
sbb
test
cmp
leave
dec
pop
ss
inc
jns
jge
iret
dec
lods
pop
jb
or
in
xlat
popf
scas
mov
inc
push
test
inc
js
sti
pop
jae
sti
gs
or
aas
push
lods
stc
subl
test
fdivr
outsb
mov
cmp
and
push
jmp
mov
int3
dec
imul
call
hlt
popa
les
pop
fists
jns
jno
and
aam
mov
cmp
int3
ret
jns
pop
mov
js
dec
or
loop
and
sbb
aaa
pushf
enter
sub
and
mov
fdivrl
cmpsb
xchg
jmp
in
jle
into
push
ljmp
pushf
inc
cltd
or
xchg
mov
movsb
gs
mov
scas
xor
cwtl
and
cmp
add
xchg
sbb
shrb
das
pop
or
jne
pusha
cmp
adc
mov
jno
in
mov
pop
pop
mov
test
imul
je
push
insb
sub
std
xor
fs
push
cld
sub
lret
call
pop
push
es
out
cmpsb
dec
sub
fisubl
cmp
hlt
lret
bound
and
xchg
les
push
mov
js
and
or
ficomps
movsb
xor
xor
aad
jne
pusha
or
outsb
inc
jecxz
std
add
insb
sti
lods
xor
sti
push
outsb
mov
pop
int
add
test
pop
sub
movl
fwait
adcb
imul
mov
xchg
pop
inc
and
jmp
push
and
in
mov
jge
fists
xchg
cltd
enter
push
inc
push
mov
dec
cli
je
rcr
sbb
adc
pop
pushf
xchg
sub
sub
cmp
and
sbb
or
xchg
idivl
rorb
lret
das
add
in
test
std
add
fldl
frstor
mov
and
inc
xor
orb
movsb
or
scas
jle
adc
popa
sub
mov
sub
fiadds
jg
push
or
ret
push
mov
aam
das
orb
fnsave
mov
or
les
imul
clc
pop
inc
mov
aad
call
sub
lret
cmc
jo
jnp
hlt
xchg
stos
fisubl
push
rclb
add
popf
popf
mov
xor
adc
rorl
sub
je
outsl
xchg
arpl
sbb
xchg
cmp
adc
jp
insl
cmpsl
out
mov
aaa
cmp
inc
mov
mov
add
xchg
iret
pop
xchg
fstps
loop
js
push
imul
sarb
cld
ds
push
mov
or
insb
push
jecxz
inc
ret
daa
std
ljmp
mov
in
iret
mov
jne
pop
and
add
push
mov
push
inc
fs
and
je
nop
movsb
push
cmp
add
xor
xchg
cmp
rol
push
sub
pop
and
outsb
pop
cli
dec
fiadds
je
push
lods
adcb
nop
jb
aas
xchg
and
ljmp
inc
jb
cmp
cs
push
dec
daa
je
mov
in
movb
rolb
clc
mov
push
divb
or
xor
ja
or
ljmp
inc
sub
sahf
cmc
sbb
mov
dec
shlb
js
test
stos
sti
add
cmc
iret
pop
das
mov
test
ljmp
inc
xchg
shlb
push
push
int
ret
jnp
aaa
inc
ja
decb
cli
outsl
mov
cltd
inc
inc
or
mov
pushf
xchg
push
sarb
push
xor
cmp
ss
cmp
sub
or
cmp
fildl
outsb
ficomps
fistpll
dec
stos
cmp
data16
les
dec
imul
aaa
dec
ljmp
ret
ret
test
fbstp
adc
or
cmp
jae
push
fdivl
aad
dec
and
insb
jno
adc
cmp
fnstcw
pop
pop
stos
mov
or
sub
fmuls
paddusb
xorb
push
xchg
mov
shll
pop
cmc
cmp
mov
aaa
pop
mov
jb
inc
out
mov
sbb
cmp
das
sbb
mov
sub
lock
xor
lahf
pop
xor
pop
test
pop
lds
xor
cmp
popf
lods
mov
into
mov
stc
in
add
cli
int
inc
add
and
pusha
mov
shll
stos
or
or
in
push
dec
test
jp
movsl
ret
dec
rcll
mov
inc
push
adc
into
rol
popa
test
in
sti
sub
add
shll
dec
inc
insb
push
add
je
jp
in
pop
xchg
add
pop
divb
add
int3
lahf
mov
test
jns
push
shlb
ret
mov
push
sbb
fisubl
mov
sahf
daa
repz
loop
mov
pop
sub
add
jno
adc
and
pop
lret
mov
ss
mov
mov
popa
sub
xlat
or
cmp
add
js
ss
gs
cmpsb
mov
loop
jmp
insl
cmp
or
pop
mov
xchg
jns
lds
mov
sbb
or
lret
pop
mov
fadd
aaa
lret
popf
imul
in
xchg
pop
sahf
out
and
pop
adc
inc
aad
push
ss
icebp
ja
cli
roll
mov
push
jb
shrl
das
inc
inc
es
dec
xchg
sub
push
pop
xor
stos
jno
pop
popf
jo
popa
mov
xchg
cmp
jns
jmp
jmp
or
es
fisubrs
sub
jno
pop
sub
xchg
in
call
jecxz
bound
in
jb
aad
scas
cmpl
cld
dec
xchg
test
mov
mov
mov
hlt
inc
dec
and
sbb
sub
ficompl
push
push
insl
xchg
and
xor
arpl
push
jle
ret
pop
and
inc
xorb
sti
scas
jecxz
shrl
lcall
jne
mov
stos
sub
lret
int3
lods
test
cmpb
push
inc
imul
pusha
lret
mov
add
dec
stc
or
and
add
mov
cmp
sub
aam
or
xor
test
imulb
or
nop
fldt
test
dec
insb
imul
repnz
std
insl
cmp
and
sbb
arpl
mov
xor
and
add
scas
std
sub
or
adc
push
les
ror
push
dec
cmp
fdivrl
push
pop
jno
push
stc
xchg
pushf
fisubl
rcll
icebp
pop
xchg
in
stos
icebp
mov
sbb
push
sub
jp
pop
imul
or
fwait
cmpsl
sahf
push
aaa
adc
mov
in
cld
clc
push
int3
in
je
xor
mov
mov
scas
or
out
aas
xor
jmp
xor
cmp
mov
lret
enter
push
cs
aam
jbe
ja
int3
pop
push
pop
pop
int3
or
fsubr
pop
push
imulb
pusha
enter
cmp
mov
pop
and
mov
xchg
xor
outsl
negl
sti
jp
inc
lret
cmpl
lcall
adc
mov
dec
rorw
inc
das
hlt
mov
cmp
adc
mov
add
add
and
push
and
stc
lds
inc
sub
or
mov
and
mul
std
xor
out
and
mov
cmp
xchg
loopne
jb
lret
ss
imul
jle
inc
inc
mov
cli
mov
insl
mov
fld1
mov
inc
daa
jb
pop
aas
aaa
std
stc
mov
xchg
xchg
mov
inc
rcll
jae
push
jmp
push
in
movsl
add
lret
pop
push
outsb
aad
jmp
test
test
add
fwait
sbbb
adc
dec
jecxz
dec
nop
js
inc
jge
roll
in
sbb
and
int
test
call
adc
sub
js
and
push
nop
dec
mov
stos
add
mov
sar
dec
dec
pop
insb
mov
cmp
sbb
test
jo
shlb
lods
push
leave
mov
jg
fldcw
or
xchg
outsb
dec
mov
ficoml
adc
inc
jb
ja
mov
les
inc
pop
mov
fisubs
jl
loope
loope
gs
jne
in
sub
cmp
push
mov
xor
pop
jbe
pushf
adc
icebp
fimuls
ds
xchg
cmp
adc
outsl
loopne
mov
mov
push
push
jns
hlt
cmpsb
push
sbb
push
pop
add
xor
rorl
cmc
add
xor
xor
mov
push
pop
jno
dec
repz
lods
sbb
push
jo
rcrl
dec
insl
xor
sti
mov
pusha
ds
cmp
cmpl
sub
lcall
addr16
pop
mov
jo
or
stos
out
loopne
add
add
gs
pop
hlt
xchg
xchg
xlat
movsl
stc
adc
mov
lahf
xor
leave
adc
enter
cmpsb
fiaddl
push
lods
xchg
call
addr16
xchg
popa
or
es
pop
pop
add
shll
jo
enter
jge
mov
sbbb
adc
lock
iret
jb
push
adc
xlat
push
cmpsb
inc
fiadds
pop
pop
ljmp
shl
push
inc
mov
adc
jne
xchg
xorb
hlt
insl
out
cmpsb
std
dec
movsl
jmp
push
mov
test
mov
lods
mov
push
push
and
cs
pop
mov
xor
push
dec
dec
ljmp
sbb
mov
testb
sub
pop
aas
mov
dec
icebp
in
sbb
cmp
imul
aaa
pop
les
divb
xor
push
cmp
rcrb
test
and
lods
inc
imul
mov
jnp
add
roll
aas
or
inc
push
push
ds
ret
sbb
xor
std
fsts
test
gs
loop
xor
inc
jle
ror
cld
out
test
or
push
in
ret
aam
and
sbb
outsl
pop
push
xor
xlat
mov
pop
mov
xchg
sub
sbbl
sbb
mov
inc
mov
fidivrl
out
loop
jo
ret
int3
pushf
mov
sbb
mov
jle
push
aam
jnp
jp
sub
jecxz
enter
fildll
out
ror
jecxz
out
or
pusha
sub
loopne
outsl
mov
cmp
rol
push
jae
mov
mov
enter
push
push
orl
sbb
pushl
jle
inc
cs
mov
nop
sbb
or
pop
and
pop
mov
jp
test
cmc
loopne
call
stos
push
mull
mov
movsl
bound
xor
push
and
faddp
mov
xchg
ja
xor
mov
add
in
loop
push
push
notl
add
xorb
arpl
test
outsb
push
mov
adc
imulb
pop
gs
ja
sub
loopne
pop
cwtl
rol
mov
pop
inc
sub
adc
lret
fadd
push
or
mov
outsb
sub
ss
sti
shrl
push
je
dec
sbb
cli
mov
mov
imul
fstps
loope
int3
test
insb
lods
js
insl
cld
das
popf
arpl
aaa
mov
mov
or
rcrl
adc
test
rolb
add
aad
push
inc
add
sub
xor
in
in
xor
push
dec
add
arpl
jbe
inc
mov
rcl
lods
add
xorb
negb
gs
xor
nop
gs
incb
pop
fldt
stos
mov
addb
cld
dec
push
cmp
cwtl
in
stc
outsb
mov
mov
and
pop
adc
sub
into
mov
jecxz
mov
mov
imul
xor
lods
adc
fcoml
mov
mov
les
call
faddl
jns
call
arpl
mov
into
sbb
enter
sbbb
dec
jmp
sti
addr16
adc
push
cmpsl
dec
call
jb
ja
mov
cmp
mov
dec
mov
adc
out
inc
mov
sub
or
ret
inc
jl
mov
cmc
sub
dec
adc
stos
out
hlt
jns
lret
outsb
lods
xor
cli
cli
jge
jecxz
mov
incb
and
mov
cmp
and
test
ds
jae
les
insl
sarl
lmsw
jecxz
mov
ds
stc
ds
in
ud0
push
jecxz
imul
or
daa
sbb
in
int
xor
dec
cmp
leave
jecxz
inc
ss
or
aaa
sahf
pop
mov
fcoms
mov
lea
inc
add
adc
push
test
lret
mov
xchg
sub
mov
pop
movsl
push
fsubrs
in
lret
sbb
xchg
pushf
sbb
ret
jae
negl
xchg
popa
test
das
daa
and
mov
mov
roll
cwtl
pop
popa
scas
jns
jno
inc
adc
sbb
add
xorl
clc
push
lcall
push
repz
mov
call
data16
and
ficoml
movsb
pushf
lods
sub
inc
or
and
mov
insl
adc
jb
mov
cmp
mov
cwtl
pop
pop
fwait
test
out
cltd
movsl
inc
sti
fcmovb
jno
testb
iret
daa
shlb
sbb
das
iret
push
lret
xor
xlat
test
fnstenv
out
xor
aas
cmc
fnsave
repnz
mov
and
fistl
mov
jno
mov
xchg
mov
daa
scas
ret
fstps
push
fdivrs
push
and
outsl
pusha
push
mov
ss
mov
or
xchg
lds
lahf
push
dec
lds
imul
adc
outsl
rclb
push
les
jb
cmp
es
insl
dec
adc
lret
cmpsb
dec
lds
xor
cmp
outsb
jne
lret
push
pop
daa
in
add
test
inc
mov
add
jp
aam
push
jge
add
loope
dec
cmpsb
xor
xchg
lock
push
cmp
fldenv
int3
fcoml
xchg
sub
cmpb
inc
xor
mov
cmpsl
out
mov
pop
push
subl
jl
aad
mov
dec
out
mov
hlt
and
push
pop
push
mov
sbb
cld
mov
mov
pop
popf
ffree
sub
or
insb
jbe
push
lock
xchg
xor
fcompp
aad
movsl
jo
adc
xlat
jmp
and
mov
sbb
in
add
add
push
add
stc
add
fs
jns
sbbb
and
cld
jb
in
jno
jle
andl
shlb
push
stos
mov
fwait
sub
dec
mov
xchg
cmp
jns
movsb
push
xchg
mov
cli
int3
pop
inc
nop
cmp
lock
imul
aam
xor
mov
mov
sub
es
mov
or
mov
lds
dec
cmp
mov
lahf
sbb
pop
cmpsb
inc
loop
hlt
pop
js
jg
ficoml
sub
vorps
and
jp
pop
daa
add
pop
xchg
push
and
pop
push
hlt
lods
addr16
push
xchg
mov
stc
fdivrl
cmp
mov
lcall
xor
mov
sub
dec
orb
inc
push
iret
adc
adc
sub
in
leave
jne
les
jnp
mov
test
inc
fdivrl
scas
test
adc
shlb
roll
jg
dec
sub
ds
pop
std
scas
xchg
jne
pop
dec
je
pushf
stc
shlb
filds
out
stos
fisubs
add
fcomps
mov
inc
sbb
aad
push
mov
popf
gs
push
mov
jge
ret
xor
mov
jge
les
iret
int
mov
mov
add
mov
fistl
mov
push
xor
ret
dec
gs
pop
pop
and
sub
sti
fidivrl
lcall
xchg
outsb
adc
pop
add
inc
into
sti
lock
in
orb
scas
imul
popl
xor
in
test
outsl
loope
outsb
dec
rolb
cmp
int3
stos
push
je
or
sar
or
addb
lahf
cmp
loope
and
lock
icebp
test
adc
mulb
sbb
lods
pop
stos
addr16
std
mov
hlt
sbb
test
imul
outsb
arpl
rolb
stos
dec
adc
or
fmull
out
ror
fsubrl
sbb
int
sbb
scas
sbb
lock
mov
sub
jae
mov
das
xchg
mov
pop
lods
inc
cmp
sbb
lods
data16
xor
sbb
data16
sbb
leave
rclb
test
fucomp
es
adc
dec
loop
sbb
mov
ret
mov
lods
mov
aad
rolb
push
xchg
mov
sarl
movl
movsl
dec
out
imul
mov
out
inc
or
mov
xchg
push
and
add
into
sub
dec
movl
or
mov
mov
cmp
loopne
outsl
push
xor
dec
adc
lahf
in
test
xchg
sub
push
mov
push
test
in
pusha
xchg
int
into
outsb
mov
test
push
pop
lcall
or
lcall
shrb
mov
std
aas
inc
sarl
repnz
sbb
pop
adc
push
xchg
and
push
adc
mov
sub
hlt
subl
mov
ja
cmp
cmp
adc
pop
in
clc
mov
xor
insb
cmp
inc
xchg
shlb
fists
rolb
xor
jge
jg
mov
or
shll
and
inc
aad
push
mov
addr16
js
jns
test
pop
aam
push
aas
sub
shlb
loope
ljmp
adc
jecxz
sub
sub
stos
xchg
or
dec
jecxz
cli
out
je
mov
mov
rcll
sbb
adc
in
pop
xchg
aam
sahf
addr16
push
rorb
int3
jge
dec
jno
sbb
pop
xlat
lock
outsl
or
iret
push
xor
aad
xchg
add
push
jns
push
dec
jp
ret
adc
push
jno
push
jb
or
push
pop
pop
int
pop
add
aam
in
lahf
dec
int3
mov
jne
jge
pop
xor
adc
popl
out
xlat
pushl
jb
sbb
into
out
sahf
call
push
leave
js
push
mov
jmp
or
in
rol
jg
data16
lods
adc
outsl
jns
sbb
push
filds
mov
lods
popf
sbb
fwait
and
int
xchg
jmp
test
in
jb
or
lret
es
sahf
int
or
sbb
mov
test
mov
xchg
ds
int3
call
or
stos
repz
xchg
cmpsb
mov
pusha
push
dec
aaa
push
mov
add
mov
loop
mov
jb
push
dec
pop
or
es
xor
aam
out
mov
xchg
xor
xor
pop
out
push
add
shll
out
ss
push
and
sub
mov
in
imul
and
xchg
les
bound
cmpsb
or
inc
clc
xchg
xor
ret
xor
dec
movsb
shl
lock
arpl
xchg
and
lock
scas
ficoml
mov
sub
mov
push
lods
lods
jns
roll
and
xchg
pushf
mov
das
js
aam
push
idivb
scas
arpl
dec
aas
jmp
xor
leave
insl
xchg
mov
adc
jo
movsb
cmpsb
bound
sub
icebp
fldz
bound
dec
add
stos
lods
lock
int
in
cmpsb
push
and
sub
loope
dec
int
sub
es
cmp
pop
pop
loop
sub
mov
aas
mov
mov
xor
inc
xlat
out
xchg
addr16
dec
lods
int3
cld
in
and
sub
shrl
mov
cwtl
jo
add
mov
dec
nop
ljmp
xchg
lds
mov
jecxz
scas
jnp
adc
jno
inc
out
in
stos
xchg
adc
sti
mov
cmp
sub
or
or
in
in
pop
sbb
or
mov
js
cmp
xchg
stos
out
inc
sahf
out
jp
mov
pusha
and
repnz
das
stc
push
push
cmp
mov
and
stos
xchg
repz
or
cmpsb
movsl
mov
cmp
mov
add
icebp
outsb
daa
mov
jnp
inc
xor
stos
insb
pop
and
xor
adc
mov
add
mov
leave
enter
cltd
into
pop
hlt
jecxz
pop
mov
mov
sbb
test
pop
or
ret
push
sbb
add
arpl
dec
mov
icebp
mov
inc
inc
inc
in
test
jns
jnp
aaa
lds
lock
pop
sahf
pop
jg
ja
into
adc
sub
maskmovq
testl
cmp
movsl
sub
cmp
push
inc
xor
adc
add
jb
inc
pop
dec
mov
cmp
cmpl
sti
fistpl
outsb
mov
or
sbb
or
stos
adc
mov
bnd
mov
pop
in
mov
mov
fs
xchg
inc
and
out
std
mov
mov
ljmp
scas
lret
adc
out
js
loope
int
push
jno
cwtl
mov
inc
pop
inc
imulb
mov
das
imulb
in
pop
fwait
dec
mov
jg
push
sbb
xor
subl
cmc
rorl
add
mov
les
dec
cmpsl
pop
lods
push
xchg
push
sub
push
cli
aad
mov
add
test
ds
and
movsl
mov
stos
xchg
jg
inc
inc
jge
lods
jne
icebp
inc
push
fiaddl
push
jae
pop
dec
pop
decb
add
push
xchg
mov
rcl
scas
adc
js
jns
cmc
lds
addl
out
repz
in
stos
scas
sti
push
mov
or
dec
lods
and
sub
std
inc
inc
dec
lret
mov
cmpsb
mov
jg
movsb
or
adc
sahf
stc
sub
daa
sbb
inc
es
xchg
mov
push
jo
mov
push
lret
in
and
fwait
jns
inc
sub
ljmp
in
in
mov
jecxz
mov
ror
xchg
xor
xor
cmp
fisttpll
pushf
cmp
push
jl
mov
mov
inc
fwait
cmp
cld
in
mov
popf
cmp
pop
mov
cmp
subl
xchg
cli
cmp
pop
add
lea
std
call
in
jns
notl
outsl
dec
js
js
das
sub
inc
in
out
call
fisttps
in
mov
cmp
movsl
sbb
frstor
push
xor
xorb
dec
scas
mov
das
imull
loope
jge
mov
jle
fcomip
sbb
cmp
sub
and
test
add
inc
rclb
movsl
inc
lock
push
push
insb
lret
insl
pop
inc
arpl
jns
pop
lods
jle
hlt
dec
dec
subl
xchg
jnp
int
dec
std
cmp
ret
dec
pop
outsb
leavew
test
cld
js,pt
js
les
jns
out
outsl
sub
sbb
out
clc
cmp
fstl
gs
enter
dec
xor
and
insl
push
push
add
push
dec
es
outsb
lret
fmuls
fdiv
les
mov
cli
mov
mov
fs
rcl
fs
lea
outsb
push
in
ljmp
dec
ficompl
ret
in
out
jecxz
lret
push
pop
aam
push
pop
jecxz
aam
jb
das
push
push
out
movsb
dec
cld
dec
jl
adc
pop
add
int
in
jno
adc
xor
fisttpl
hlt
sbbb
xchg
pop
movlps
pop
fnstsw
mov
mov
cltd
adc
push
mov
enter
add
adc
jnp
mov
repz
or
mov
sbb
bound
dec
xor
jmp
ret
jbe
sub
lods
push
bnd
arpl
cld
lahf
push
idivl
ret
or
xchg
pop
out
daa
mov
mov
sub
into
call
icebp
sub
push
push
addr16
and
ja
dec
pop
outsl
jg
leave
lret
mov
push
cmp
mov
aad
sub
pushf
roll
add
lods
hlt
fucomi
movsl
ret
mov
push
hlt
aaa
adc
nop
pop
push
or
push
daa
cmp
clc
sbb
in
jle
cmp
mov
jmp
lods
cmp
cmpsb
into
arpl
les
pop
dec
stos
add
aaa
pushf
cmc
sub
lcall
push
push
mov
lds
push
je
out
gs
xor
rcrl
insb
push
jo
shlb
aas
and
pusha
pop
lret
xchg
xor
ds
dec
pop
or
mov
cmp
ljmp
dec
xor
cwtl
vmovsldup
js
pop
push
out
xor
inc
repnz
stos
fstps
repz
inc
fwait
inc
push
mov
shll
repnz
sub
sbb
mov
pop
outsl
push
cmp
pop
jg,pn
lds
ljmp
adc
ja
sbb
repz
cmp
in
sbb
mov
cmp
cs
out
pop
mov
push
lret
push
test
dec
push
pop
lock
mov
mov
std
les
enter
pushf
xor
movsb
pop
dec
test
rol
shl
cmp
leave
jno
adc
xor
pop
test
inc
dec
notb
mov
insb
sbb
mov
idivb
repz
test
js
insl
cmc
ficoml
out
lahf
jle
cmp
subb
fistl
inc
sbb
lahf
mov
mov
or
mov
jne
or
adc
imul
into
cld
pop
and
add
xchg
xchg
mov
cmp
lods
xchg
cmpsb
adc
ret
test
lods
inc
cmp
stc
and
rsqrtps
jle
push
outsl
add
mov
test
jmp
fwait
fwait
xchg
stc
dec
jl
inc
imul
shll
jg
imul
into
mov
insl
movsb
shlb
mov
or
out
cs
mov
pusha
icebp
addb
int3
fists
int3
and
jle
aam
or
mov
ror
cld
xor
pusha
jne
cmp
outsl
je
or
int
ds
lret
and
push
test
mov
inc
movsl
pop
lahf
rcll
test
jle
or
cmp
jecxz
mov
inc
mov
ret
imul
not
aaa
mov
pop
pop
xor
imul
cmp
repnz
mov
sbb
repnz
mov
inc
cli
enter
lods
push
xchg
aad
mov
ret
mov
insb
loopne
jns
stc
push
dec
cwtl
pop
rol
push
pop
or
pop
mov
mov
jecxz
shl
push
mov
or
lcall
sbb
mov
mov
cmc
jns
mov
jb
inc
aaa
int3
popa
insb
dec
loope
add
out
cmp
movsb
test
xlat
js
sub
andl
push
stos
fisttpl
or
int
ret
fwait
push
inc
pop
xchg
aad
popa
inc
lret
jp
stos
daa
sub
sarl
pop
and
mov
fs
dec
xorb
and
mov
cmpsl
pusha
add
lds
mov
adc
ret
xchg
insl
sub
mov
jg
sbb
les
into
pop
add
inc
ret
jne
stc
mov
daa
mov
out
push
ds
sahf
mov
push
jnp
lea
rolb
lods
push
push
xchg
sbb
mov
adcl
xor
pushf
push
pop
imul
xor
push
test
jnp
jae
stc
repnz
call
movsb
adc
cld
inc
add
inc
aaa
pop
out
or
loopne
jbe
push
out
pop
jns
or
call
scas
or
and
and
dec
cmp
sarb
movsb
inc
add
int3
ret
div
bound
cmc
pop
out
stc
and
push
add
push
mov
push
mov
das
fistpll
pusha
out
mov
imul
insb
lds
scas
xchg
out
in
jp
int3
mov
inc
xor
fcmovnu
hlt
aad
add
lods
jae
mov
pop
je
test
pop
nop
cmp
lea
cld
xchg
cmp
lahf
and
rorl
mov
mov
and
test
mov
adc
xchg
lret
pop
xchg
das
mov
in
xchg
xchg
inc
ret
shlb
jno
mov
adc
inc
imul
jb
aaa
in
pop
xchg
popa
cmp
mov
pop
and
adcl
mov
cwtl
push
cmp
fstp
jne
pop
pop
cs
jb
call
xchg
or
push
movsb
pop
jnp
test
inc
add
fisubl
das
mov
push
mov
inc
in
lea
inc
imul
xlat
jne
push
or
or
in
cmc
push
outsl
jns
jecxz
movsb
and
pop
outsl
jae
nop
cwtl
fstpl
ja
hlt
xchg
xor
out
mov
xor
jmp
jne
insl
loop
in
inc
inc
sbb
jo
nop
faddl
out
int3
repz
jg
gs
add
bswap
add
movsl
movsl
mov
daa
decb
loope
aad
jmp
xor
roll
int3
adc
mov
arpl
push
into
adc
mov
cmc
push
mov
jne
jnp
push
les
mov
dec
cmp
popf
insl
loopne
cs
outsb
nop
out
xchg
mov
pop
xchg
int3
sbbb
sbb
mov
pop
sbb
mov
lahf
rolb
mov
mov
xor
rolb
daa
xchg
xlat
add
fdiv
sub
jbe
mov
pop
lock
jb
cmpsb
call
in
repz
xchg
sti
test
push
inc
sub
imul
ds
je
test
popa
shrl
mov
adc
mov
pop
out
mov
sahf
popf
test
push
cmp
dec
cmpsb
cltd
lods
outsb
sub
xchg
test
ret
jp
pusha
mov
out
in
aaa
mov
jg
test
rcrb
fdivrs
pop
aam
or
mov
xchg
leave
mov
jmp
push
or
inc
or
out
add
jnp
sub
mov
cltd
movsl
xor
ljmp
xchg
dec
ret
mov
pusha
pop
jp
scas
dec
push
mov
dec
and
shll
cmp
sbb
mov
mov
mov
aas
push
les
pop
mov
add
cmp
or
inc
xor
repz
jge
add
dec
sbb
arpl
int3
push
mov
mov
pop
xor
insl
jmp
call
cmpsl
bound
lods
ret
adc
jno
xorl
in
dec
std
push
inc
pop
icebp
mov
xor
rep
fnsave
inc
repz
test
out
dec
cmpsb
popf
ficoml
push
popl
xor
pop
mov
cmpsl
rep
mov
xor
jbe
imul
arpl
add
add
insl
adc
cmp
addr16
jns
sub
insl
je
xchg
cld
cmp
push
cs
mov
stc
hlt
sbb
jns
and
add
popf
jae
shrb
std
in
nop
ja
mov
out
dec
jecxz
insl
dec
insb
addr16
push
outsl
lods
sbb
popf
pop
mov
xchg
push
aam
or
jl
icebp
std
clc
mov
lea
ja
cs
xor
gs
dec
lret
fildll
arpl
dec
in
jg
and
lcall
jg
int
hlt
mov
data16
ja
sub
stc
ljmp
inc
fwait
jl
inc
xor
and
mov
int
or
dec
xor
xor
imul
orb
data16
adc
pop
jmp
dec
stos
aam
xchg
jbe
sub
jp
sarb
mov
aaa
popa
mov
add
jp
aam
pushf
mov
test
lds
lods
fcmovu
movl
int
mov
int3
testl
mov
mov
mov
sarb
fmul
subb
push
sub
push
adc
sbb
fisubl
jnp
or
mov
push
or
sahf
sahf
dec
mov
adc
jl
sarl
lock
leave
lret
clc
pop
out
or
cmp
dec
or
mov
out
sub
pop
cwtl
mov
test
push
mov
push
jbe
aam
pop
cmp
mov
out
mov
sahf
bound
cmc
adc
add
inc
adc
pop
cmp
mov
loop,pt
mov
add
sbb
jecxz,pn
loopne
shrb
add
pop
jbe
bound
icebp
jbe
push
sub
cmp
rolb
dec
push
mov
sbb
adc
ffreep
mov
and
sbb
aas
or
in
pop
xor
rcrb
mov
pop
fstpl
xchg
es
cmp
sub
je
pushf
stos
adc
push
xchg
mov
jg
and
fwait
pop
mov
push
or
and
cmp
cmp
dec
movsb
pop
fwait
imul
in
sbbb
mov
into
jecxz
mov
jnp
mov
or
outsb
mov
les
pop
jns
inc
push
or
push
out
shll
mov
popf
push
pop
and
sbb
mov
bound
movntps
push
ja
push
cvtpi2ps
inc
xlat
mov
and
enter
mov
mov
pop
mov
sahf
mov
inc
and
push
mov
mov
dec
int3
out
push
sbb
cld
add
dec
dec
ss
add
push
add
mov
mov
aaa
pop
dec
cmp
pop
ret
push
adc
mov
mov
ret
adc
pusha
jae
xchg
add
dec
cmp
sbb
lods
pop
xlat
pushf
imull
jp
leave
xchg
dec
in
stos
rorl
imulb
lods
cmp
shlb
pop
call
outsl
mov
test
repnz
and
mov
int3
mov
mov
dec
repz
iret
xchg
jnp
aam
int
shl
sub
in
mov
sahf
jp
jo
notl
add
insl
push
daa
adc
cmp
jmp
cmp
stos
sbb
mov
imul
pop
fildl
jne
addr16
test
arpl
adc
inc
mov
cmpsb
jg
lock
notb
out
pop
into
cmpsl
dec
add
aam
aaa
pusha
mov
xchg
xor
das
sub
push
clc
or
out
sti
dec
mov
push
cld
test
mov
mov
ds
pop
inc
pop
lods
xorl
or
xor
out
fsub
add
lcall
xchg
lret
fldl2e
movsb
mov
clc
pop
xchg
sub
test
mov
ret
outsb
ror
fsubrs
data16
shll
dec
or
xchg
dec
xchg
or
and
add
pop
or
out
or
leave
mov
inc
out
outsl
add
sub
out
bound
mov
cmpb
xor
icebp
andl
inc
mov
iret
add
cmp
add
out
inc
fisubl
daa
jnp
dec
adc
xchg
inc
fs
inc
gs
add
inc
mov
xor
bnd
and
sbb
mov
jo
popa
dec
push
jmp
outsb
faddl
test
in
or
outsb
je
xor
cs
mov
rcr
hlt
les
leave
aaa
stos
je
fimuls
lcall
fidivl
rcl
inc
sti
mov
pop
insb
or
mov
fldl
pop
push
in
ds
jo
in
ret
pop
std
sub
out
ljmp
sub
arpl
sub
xchg
lea
xlat
cwtl
xor
pop
xor
daa
mov
popf
jg
adc
add
imul
and
or
test
rcl
int3
and
pop
int3
add
out
mov
mov
and
sbb
jno
sub
test
pop
cli
xor
lcall
stos
push
add
imul
add
mov
in
popf
jmp
jge
pop
das
sub
leave
jge
mov
outsb
mov
jbe
xchg
push
jg
pop
popf
stos
leave
cs
jecxz
mov
stos
lds
fs
movsb
pop
shrl
mov
stc
ret
push
ret
sbb
std
rcrb
adcl
jns
mov
and
popa
mov
insb
test
enter
fst
dec
push
jmp
repz
aas
push
dec
popf
push
jl
aas
cmp
gs
jmp
cmovbe
lods
pop
mov
les
mov
lods
mov
push
movsl
push
fs
adc
add
stos
dec
and
adc
scas
xlat
call
jg
rorl
pop
addl
hlt
mov
add
stos
adc
nop
dec
cmp
in
adc
into
xchg
mov
insb
scas
mov
out
jbe
cmp
imul
cmp
pop
and
fsts
inc
pop
movsl
repnz
lret
push
xchg
cmpsl
xchg
push
xchg
cmpsb
inc
cltd
roll
pop
cmpsb
mov
into
mov
fs
jnp
add
cmc
cmp
lods
jns
pop
adc
mov
mov
ret
stos
frstor
dec
sbb
shrb
xchg
fmull
lods
mov
lcall
pop
scas
inc
pushf
in
and
inc
int
sti
repz
repnz
jle
shlb
and
cmpsl
mov
cmpl
mov
and
pop
movsl
adcw
sti
or
add
das
xor
adc
cmpsl
cmp
push
addr16
and
ja
jne
xor
add
aas
int
mov
int
push
dec
sbb
mov
clc
mov
mov
and
or
pop
outsl
ss
lcall
push
aaa
dec
xor
icebp
lret
std
pop
sbb
push
push
test
dec
dec
mov
or
xor
scas
jmp
push
and
adc
std
pusha
ja
aaa
out
mov
push
pop
addl
add
jmp
or
and
mov
in
out
shll
hlt
push
dec
jmp
and
fidivl
xchg
fnstsw
aad
mov
cmp
arpl
push
mov
movsb
popf
stc
jmp
mov
dec
cmp
cmpsb
dec
add
and
xchg
es
lcall
shlb
inc
imul
add
mov
adc
xor
test
je
cmp
mov
insb
and
push
pop
scas
call
add
or
mov
mov
scas
cltd
js
imul
mov
xchg
fstl
gs
out
push
and
add
mov
in
mov
call
test
rorl
xchg
rcl
cwtl
push
jge
testb
fsubrs
call
leave
xchg
push
fs
cltd
test
cmp
sub
insl
test
sub
mov
in
pop
push
dec
jecxz
lcall
sbb
mov
leave
popf
pop
lods
rclb
rcrl
vmaxps
dec
lods
xlat
orb
adc
mov
inc
outsl
dec
push
aad
adc
mov
fidivs
mov
push
dec
fnstenv
ret
mov
popf
dec
mov
push
jle
jmp
popa
in
ja
dec
add
or
cmp
mov
xchg
jae
fnsave
enter
or
push
popa
cmpsb
sub
mov
shlb
mov
popl
fcoml
aaa
or
sbb
cmp
xor
sarb
popf
cmpsb
mov
xchg
jge
in
rol
in
xlat
or
pop
sets
clc
subl
mov
mov
add
in
lods
pop
xchg
mov
in
inc
mov
sbb
push
sbb
icebp
lcall
adc
mov
mov
je
push
nop
or
xor
out
mov
cmpb
nop
outsl
psllq
mov
out
xchg
das
mov
in
fldenv
test
enter
xchg
inc
mov
adc
ficompl
dec
or
xor
and
mov
dec
push
or
fbstp
shld
popf
push
or
lds
xchg
fnstcw
cmp
gs
inc
mov
jae
movsl
stc
ret
jg,pt
xchg
xchg
push
test
lret
icebp
mov
cmp
andl
repz
mov
leave
addr16
inc
or
dec
mov
push
jne
pop
push
nop
cmp
push
ds
inc
inc
jl
inc
insb
add
mov
inc
add
mov
shl
vmovddup
xchg
mov
mov
sub
movsl
jb
dec
dec
xchg
ss
gs
shll
aam
inc
or
lods
and
mov
lcall
mov
push
cmp
sub
jno
xor
mov
pop
aaa
mov
hlt
pop
int3
xor
insl
or
or
ret
out
cmp
cmp
sarl
sub
pop
lret
ficompl
push
call
push
push
mov
cli
xchg
iret
xchg
mov
and
xchg
shll
mov
lods
pop
pop
jmp
xchg
cs
push
test
mov
jns
mov
scas
inc
push
add
js
mov
loope
cmp
pop
adc
xchg
cmpsb
mov
mov
dec
and
lret
push
mov
and
mov
inc
adcb
hlt
add
int3
jb
call
fsubl
mov
jl
cmp
dec
jbe
xchg
push
push
mov
xchg
arpl
xorl
out
int3
dec
rcrl
xchg
not
repz
cltd
imul
jo
inc
sub
jge
pushf
cld
cmp
xor
xor
sbbb
mov
push
imul
cmp
stc
sbb
sbb
xor
nop
mov
stc
stos
mov
xor
rclb
clc
ljmp
pop
mov
gs
push
data16
das
ret
cmp
mov
sub
out
stc
mov
fdivrl
outsb
sbb
xrelease
sarb
jnp
iret
mov
shrb
jg
rcll
pop
jg
stos
pop
nop
icebp
cmp
stos
or
push
pop
fbld
arpl
dec
jns
cmp
icebp
mov
cs
es
and
jne
mov
mov
sahf
push
clc
aas
scas
lock
dec
xlat
push
in
repnz
iret
or
push
test
push
popa
ss
sti
loope
dec
dec
dec
insb
inc
dec
sub
lcall
sub
mov
insl
repnz
mov
stos
lret
add
jl
es
ret
stc
pusha
sub
mov
lock
daa
mov
adc
sbb
inc
push
icebp
fldt
repz
test
andb
jle
push
leave
xor
dec
fbld
mov
xchg
xor
sub
gs
outsl
insb
enter
cwtl
cmp
or
sub
pop
push
lret
mull
stos
lret
mov
test
popa
add
test
fdivr
repz
mov
xchg
cmp
lret
mov
idivl
test
in
and
rorl
mov
insb
adc
call
pop
push
imul
push
pushf
mov
dec
mov
xor
sbb
sti
aam
lea
xchg
sbb
aam
lret
cs
cmp
bound
xchg
jne
cli
dec
ja
out
or
dec
adc
jp
and
enter
xchg
sub
push
cmp
test
call
push
adc
cmp
mov
dec
xchg
ds
es
out
sub
sbb
pop
and
imul
daa
push
add
loop
aad
cmpsb
or
shrb
std
mov
mov
dec
pop
std
movsb
dec
dec
jmp
fsubrs
xor
inc
cmp
mov
clc
push
mov
sbb
in
sarl
sub
js
popa
jg
enter
je
adc
xor
mov
mov
xor
ret
jle
push
lock
mov
filds
testl
rolb
in
mov
jo
or
int
divb
mov
sub
push
inc
xchg
mov
imul
xor
mov
push
aad
and
hlt
lea
dec
lret
int3
xor
cmp
orl
mov
adc
cmc
popf
mov
ds
fiadds
adcl
ss
das
dec
daa
popf
mov
xlat
aam
mov
pop
mov
inc
mov
hlt
pop
jb
scas
or
jp
pop
jno
dec
inc
ds
icebp
arpl
mov
cmp
outsb
sub
ljmp
xchg
bound
adc
cmp
jl
ffree
push
push
fistps
sbb
fists
loope
mov
dec
pop
mov
mov
lock
popa
mov
pushf
and
pop
hlt
mov
xor
outsl
dec
bound
mov
xchg
pop
out
lock
lock
cmpsb
fcmovu
dec
cwtl
loope
jge
add
lret
push
addl
or
push
xchg
xor
lahf
outsb
cmpsl
and
rclb
jg
xchg
mov
movsl
push
bound
add
stc
xchg
stc
mov
sbb
neg
or
sub
push
enter
je
fsts
jae
xorb
pop
add
and
and
insl
jge
insb
in
mov
sub
add
movsl
cmc
inc
fcomps
fsubl
in
pushf
in
je
fisubs
jmp
icebp
icebp
es
mov
xchg
push
dec
test
mov
cmpsl
pop
ret
adc
lahf
pop
sub
aam
cmp
shrb
scas
inc
cmp
fadds
xlat
jns
inc
sub
mov
test
sbb
or
sarl
jb
lret
push
jnp
lock
push
enter
cli
sbb
test
xchg
clc
ds
or
cmpsl
in
push
int3
add
xchg
dec
lds
pop
ljmp
push
mov
mov
dec
mov
mov
mov
lods
in
scas
dec
stos
pop
or
cmpsl
xor
insb
movsl
leave
xor
sti
inc
jl
pop
add
add
dec
pop
addb
loope
add
mov
outsb
negl
das
daa
scas
stc
mov
insb
lods
jge
jmp
lods
ljmp
int
push
mov
cmp
mov
adc
push
mov
sub
nop
push
adc
sbb
sbb
inc
rcrl
stos
xlat
mov
adc
jmp
and
imul
sbb
fadd
ljmp
int3
ret
jbe
add
cmpsb
repnz
gs
xchg
ret
xchg
mov
jo
imul
loope
das
push
add
shll
xchg
add
cmp
fsubl
inc
pop
or
out
cmp
inc
dec
repnz
mov
dec
negl
mov
cs
in
and
pop
mov
sub
popl
lods
repnz
xlat
iret
add
popf
push
lret
cltd
test
les
or
jg
notl
subl
cmpsl
mov
jge
icebp
mov
dec
into
addl
jecxz
mov
mov
and
add
or
notb
mov
push
jns
clc
sbb
inc
jl
sbb
cli
addr16
adc
lods
mov
js
mov
sub
pop
adc
clc
cld
mov
lds
in
out
or
cs
stos
mov
jecxz
scas
adc
mov
push
push
or
mov
lods
pusha
sbb
jns
xchg
fldt
aam
adc
daa
xchg
loopne
xchg
push
jp
imul
xchg
add
pop
fsub
inc
and
pop
ret
repnz
lea
shrl
inc
dec
push
jno
mov
dec
aas
aas
mov
les
add
jns
mov
mov
ja
xorb
mov
sarb
je
sbb
lahf
dec
subb
jne
subl
movsl
xchg
repnz
pop
inc
jb
and
scas
dec
mov
sbb
stos
mov
mov
sti
stc
sbb
cld
rclb
mov
sub
push
sti
jb
popa
divb
cvtpi2ps
aaa
inc
gs
inc
dec
je
in
lea
jne
repz
mov
das
rcrb
sub
fnsave
cmp
dec
inc
push
pop
mov
pop
and
insb
loop
push
pop
sahf
repnz
jmp
jo
imul
push
mov
xchg
inc
leave
sub
aaa
sti
leave
js
lock
mov
add
xlat
imul
inc
imul
cltd
js
arpl
pop
sbb
pop
fs
pop
pop
or
sbb
sub
mov
insb
insb
iret
xchg
es
movsl
sub
fdivrs
mov
ret
inc
add
es
insl
push
cmp
push
insb
dec
add
and
popa
out
or
ret
xor
out
into
insl
adc
jbe
mov
jle
sub
fs
inc
sub
xchg
insb
cli
adc
mov
xchg
iret
in
push
fwait
push
sbb
jmp
mov
sahf
adc
dec
fmull
ja
cmp
sub
adc
mov
mov
aad
mov
imull
mov
jl
movsb
js
and
subb
dec
xchg
jne
pushf
or
dec
in
cmc
lea
push
or
dec
xchg
sbb
flds
out
jl
jb
out
icebp
pop
xchg
jecxz
cmp
xor
into
xchg
mov
lods
loopne
in
divb
push
or
or
pop
pop
sbb
inc
inc
mov
and
outsl
scas
in
inc
pop
daa
jg
in
jle
mov
rcrl
dec
stos
mov
mov
fst
mov
hlt
movsb
enter
xchg
mov
jmp
dec
sarb
xor
jae
mov
mov
sbb
ds
lea
loopne
pop
pop
fistpll
data16
sahf
xor
xor
leave
add
cli
hlt
adc
sti
mov
nop
out
jne
out
sbb
in
leave
cmp
insb
jno
out
adc
jg
inc
sbbl
stc
pop
nop
aam
xchg
jg
loope
fimuls
sub
mov
ljmp
sub
cmp
adcb
mov
push
xor
sub
ficompl
in
int3
pop
jae
sbb
push
ja
into
aaa
shlb
mov
xchg
mov
orb
sub
sbb
outsb
jns
in
mov
inc
fmull
hlt
or
or
rolb
aam
aas
adc
int
scas
dec
dec
inc
push
cltd
ret
in
jbe
fwait
dec
adc
push
cltd
movsl
dec
outsl
pop
push
jne
push
out
loopne
lds
dec
jmp
adc
push
cmp
movsl
mov
in
das
int3
aaa
jnp
stos
stos
popf
inc
pop
rcr
daa
insb
fs
and
inc
je
xchg
inc
clc
fcoml
stos
enter
rorl
jb
pop
or
mov
mov
jnp
dec
fcom
clc
and
pushf
push
lods
push
enter
dec
movsl
mov
cmp
shll
out
mov
into
jmp
adc
cmp
add
fcmovne
movsl
int3
in
call
es
leave
pop
mov
add
inc
int
lcall
ss
test
pusha
rolb
sahf
popa
jb
xchg
sub
ret
addr16
fcmovu
adc
cmp
imul
pop
aaa
inc
xchg
sbb
push
xor
jp
mov
lea
mov
add
mov
nop
jbe
sub
fcmovnb
mov
add
imul
shl
cmc
out
cld
pop
pop
or
test
xchg
hlt
lods
bound
aam
ret
sti
sbb
fs
ret
ja
icebp
cwtl
mov
jg
outsb
mov
or
orl
cmp
lods
jae
mov
stos
jbe
jp
push
xor
xchg
dec
test
dec
pusha
add
ss
sbb
pushf
jb
jbe
jp
out
stos
fistps
outsl
repnz
pop
dec
lahf
addl
dec
jecxz
mov
pusha
xchg
jecxz
cmp
rolb
lds
adc
fwait
adc
jge
dec
push
pop
stos
mov
mov
stos
in
lret
xchg
xchg
inc
xor
mov
lods
pop
sub
add
add
jae
add
ret
inc
mov
xor
in
adc
cmpsb
div
ja
icebp
pop
pmaxsw
pop
mov
aam
rcl
jae
fidivrs
nop
push
xor
sbb
and
jecxz,pn
push
pop
xor
ds
mov
scas
xchg
pop
aam
adc
popa
sbbb
outsl
jecxz
dec
cmp
sbb
clc
aaa
sbb
aad
sub
arpl
aam
scas
sahf
imul
fsubrl
mov
or
aam
pop
jnp
insl
fsubrl
dec
insl
add
test
sbb
out
pop
push
sti
sbb
push
je
lret
rcll
xchg
mov
jb
adc
or
insb
addl
mov
cs
scas
das
incb
xchg
xor
add
imul
and
out
mov
cli
test
mov
sbb
mov
mov
cltd
sbb
daa
push
add
jl
xchg
mov
nop
and
inc
fwait
mov
cltd
or
aaa
sub
sub
dec
adc
movsl
or
jmp
stc
sbb
loop
sbb
in
fdivp
xlat
inc
cld
andb
inc
jo
lock
or
adc
cwtl
dec
xor
mov
dec
and
inc
jb
jge
divl
dec
aad
mov
add
push
xorl
xlat
cmpsb
or
lea
cld
pop
cmp
ret
mov
jle
loop
jbe
or
repz
jo
lods
pop
sbb
lret
aam
cmc
push
cli
call
stos
mov
xchg
stos
push
stos
int
movsl
and
sbb
xchg
sbb
and
add
adc
add
add
adc
xchg
punpcklbw
sub
vmovupd
hlt
in
das
dec
inc
jns
in
cmpsl
sqrtps
das
mov
cmpsl
std
xchg
fsubs
mov
xchg
in
int
pop
or
xor
push
ss
jp
or
les
jns
loop
imul
sub
pop
jne
mov
mov
loop
mov
xlat
in
lret
imul
hlt
ljmp
out
sub
mov
or
dec
adc
inc
cmpsl
sti
out
fs
ljmp
mov
daa
movsl
cmp
push
mov
lods
cmc
ss
mov
scas
jae
aas
leave
int
or
in
xchg
push
shl
dec
xlat
pop
fstl
sub
pusha
cmpsb
insb
lods
scas
cmp
mov
data16
ss
bound
dec
sbb
clc
mov
xlat
out
mov
jl
addr16
pop
xor
adc
arpl
imul
sub
inc
cmp
sbb
mov
out
std
mov
fisttpl
lahf
pop
cmp
add
jl
add
pop
sbb
xor
jb
or
fstpt
ret
or
mov
inc
in
mov
push
mov
out
mov
xchg
add
inc
fcoms
leave
out
xchg
inc
cmp
jnp
clc
addr16
movsl
sub
inc
ja
arpl
ds
jbe
in
sub
or
push
mov
pop
ret
xor
enter
push
pop
aad
jmp
and
mov
jnp
pop
lods
pusha
orb
imul
and
ljmp
mov
stc
mov
aaa
jno
jge
repz
mov
xchg
lock
dec
push
jmp
pop
scas
push
xchg
movsb
mov
andl
sbb
push
push
inc
loop
in
popf
fcoml
dec
jb
lock
repnz
xchg
adc
pop
xor
out
or
mov
push
pusha
pop
repz
lock
dec
test
mov
test
aas
les
test
stc
fmulp
pop
rolb
pop
sbb
pop
mov
mov
jecxz
jbe
mov
int3
in
inc
aaa
mov
inc
idivl
addr16
or
pop
jp
cmp
dec
push
andb
mov
stos
es
je
mov
ss
pop
pop
add
in
jno
out
stc
push
xchg
gs
nop
mov
ds
mov
push
mov
push
mov
push
mov
loop
rorl
or
xchg
push
push
xchg
dec
scas
inc
call
dec
out
jge
lods
xchg
fsubs
in
lcall
mov
test
gs
orb
jb
hlt
mov
cmp
gs
daa
mov
adc
push
call
out
add
lahf
push
mov
xchg
xchg
or
test
clc
push
sbb
xor
insb
xor
adcl
add
push
push
adc
jb
xchg
jbe
icebp
insb
sub
std
jmp
outsl
lcall
pop
jg
adc
test
adc
cld
insl
sbb
dec
call
imul
out
mov
scas
lahf
jno
in
pop
xchg
mov
and
add
jl
xchg
lcall
sbb
pop
push
imul
ja
popf
xchg
jne
shll
cltd
jp
outsb
repz
mov
pop
add
pop
cmp
mov
push
push
imul
jl
pop
push
adc
mov
xor
mov
ljmp
jnp,pt
arpl
pop
lahf
divb
add
mov
out
pop
aad
loope
adc
pop
jnp
inc
test
xchg
lret
mov
arpl
icebp
sub
call
dec
mov
jne
cmpsl
xchg
ret
les
push
fistpl
xchg
cld
insb
sub
movsl
mov
mov
inc
lock
dec
and
lret
inc
repnz
jbe
cmp
aas
jle
or
push
dec
aas
dec
sti
push
movsb
scas
lods
adc
pop
mov
mov
jle
enter
and
mov
xchg
mov
mov
xor
add
insl
jge
push
subb
xor
lcall
dec
les
sub
outsb
cmpsl
ss
mov
out
pop
movsb
sbb
ss
mov
mov
int
imul
iret
pop
jmp
sti
and
mov
cmpsl
sub
xor
cs
mov
xchg
push
mov
lds
lret
cmpsl
or
jecxz
pop
outsb
sbb
je
adc
push
icebp
cmp
dec
mov
and
push
inc
dec
dec
jmp
leave
mov
jae
cmp
ljmp
mov
xor
aad
push
pop
cmp
jle
ja
lock
test
mull
mov
add
pop
jne
movsb
mov
mov
movsl
cwtl
push
ret
inc
jp
add
mov
sbb
dec
jp
fldt
repnz
mov
outsb
jns
pushf
mov
xchg
rcrl
fstps
xchg
loopne
xchg
inc
push
loopne
pop
aad
orb
jmp
imul
mov
pop
bound
mov
mov
cmpsl
inc
cmp
mov
les
sbb
and
or
aad
movsl
push
fiadds
imul
inc
jae
aam
push
add
imul
and
mov
sub
push
cmp
pushf
incl
fwait
sbb
mov
test
push
adc
sub
xchg
pop
scas
fs
sub
lret
push
std
lea
push
shlb
sbb
mov
pushf
cmp
mov
lret
std
fwait
in
stos
neg
stos
rol
mov
mov
sub
sarl
jae
adc
das
ds
shlb
cmp
pop
or
fsts
fsincos
pushf
cmp
adc
mov
out
pop
gs
sub
mov
mov
mov
jecxz
rcll
bound
outsb
jecxz
jmp
xchg
insl
and
or
out
dec
and
sbb
mov
lahf
cs
orb
mov
in
outsl
sbb
jl
push
test
std
pop
dec
div
sub
cmp
push
cltd
sub
or
fmuls
and
in
or
xlat
jge
pop
jo
add
mov
push
fdivrs
in
mov
mov
movb
mov
cmc
cmp
jns
jne
xchg
in
es
jns
sets
imul
stc
pop
push
pusha
repz
movsl
out
aam
ficoms
push
and
clc
cld
negl
andl
add
loopne
out
cmpsb
movsb
push
stos
and
mov
je
movsb
push
adc
xor
test
pop
dec
out
mov
mov
mov
pop
lahf
rorb
insb
js
in
pop
mov
dec
stc
mov
fs
cld
in
icebp
fiadds
int
inc
stc
loope
sub
addr16
xor
enter
pop
mov
mov
mov
xchg
popa
jecxz
add
mov
jle
lea
mov
mov
push
pushf
jge
and
dec
push
sub
add
jno
cmp
out
dec
mov
fnsave
insl
inc
sbb
pop
shlb
or
adc
adc
sub
push
mov
cmpsl
inc
enter
decb
push
idivl
mov
add
inc
insl
push
ss
das
inc
icebp
jbe
mov
and
mull
mov
cmp
not
pop
out
xor
add
cwtl
int3
hlt
lds
add
out
inc
mull
rorl
imul
and
push
xor
dec
rcl
fld
pop
add
shlb
adc
cltd
in
mov
pop
iret
push
push
in
iret
fidivl
aaa
push
push
cwtl
sbbl
push
cs
enter
push
aad
daa
ret
inc
xchg
push
bound
imull
jle
test
imul
cmp
push
sbb
xchg
aaa
js
mov
mov
jbe
sub
les
add
pop
jb
rcrl
mov
mov
push
pop
push
xchg
fbld
mov
in
out
and
jne
imul
xor
hlt
or
push
mov
jns
out
shlb
pop
xchg
cmpsl
lret
shll
push
cltd
in
pop
adc
cwtl
push
daa
cmp
xlat
ss
js
vpsubq
or
mov
mov
cld
and
in
add
xchg
fwait
cmp
jecxz
dec
add
jg
movsl
out
xchg
adc
inc
adc
mov
add
push
mov
cmp
add
cmp
xor
dec
in
ret
jne
sbb
jnp
sahf
mov
test
xchg
inc
and
xor
addr16
fwait
nop
cmovnp
adc
sub
cmp
outsb
jo
daa
push
inc
outsl
or
xlat
ret
or
lods
push
std
mov
out
fwait
test
adc
xor
push
in
mov
ret
push
out
adc
mov
mov
jnp
jb
sub
movb
xchg
jnp
lret
push
jns
dec
mov
push
mov
insb
push
ja
les
lahf
or
cmpl
in
and
call
loopne
rcll
pop
pop
sbb
sbb
sbbb
sub
les
mov
add
stc
movsl
jne
lret
push
popf
or
repz
out
ljmp
push
mov
lds
mov
and
pop
inc
add
insb
jb
imul
data16
loope
xchg
pop
data16
push
mov
scas
pop
loopne
setno
mov
ss
adc
test
aad
adc
mov
pushf
std
mov
loope
pop
adc
cmp
dec
inc
add
jnp
adc
inc
sub
xchg
ds
and
mov
and
push
push
jns
jne
punpckhbw
mov
xchg
scas
mov
in
dec
adc
inc
fisubs
cs
sub
rcll
fwait
inc
pop
cltd
and
out
mov
sbb
cwtl
sbb
or
cltd
dec
inc
xor
popa
test
jp
lret
pop
cmp
andb
and
test
pusha
fiaddl
jns
cli
scas
std
sarb
jne
inc
loop
pushl
repz
insb
push
jae
ret
test
mov
push
push
add
shrb
cmc
xor
outsb
cmpsl
jp
pop
adc
pop
adc
sub
lods
popf
ret
xchg
add
stos
sbb
xor
into
xorl
dec
mov
sbb
call
xor
sbb
inc
xor
mov
loop
inc
mov
push
in
setbe
adc
sub
stos
push
adc
jno
jmp
cli
jno
sub
in
subl
inc
dec
mov
inc
cmp
mov
push
cmpsl
mov
ja
jb
test
out
js
lods
movsl
pop
test
insl
add
xor
cmpl
mov
stos
add
sub
adc
es
xchg
xor
mov
add
inc
rorb
int3
push
or
cmpsb
leave
repnz
inc
test
or
out
std
or
jg
mov
icebp
call
jmp
dec
inc
pushf
cmp
add
loope
xchg
and
cld
test
jno
mov
icebp
mov
lcall
mov
pop
mov
add
push
and
cmp
popf
pop
jnp
dec
addr16
mov
aaa
cmp
sbb
dec
add
dec
repnz
jecxz
out
rcrb
jns
loope
ljmp
js
push
sbb
jne
out
test
inc
or
xchg
fs
jg
pxor
nop
inc
lret
jecxz
sahf
sub
lret
xchg
pushf
incl
addr16
insl
lcall
clc
lds
lds
push
xchg
loop
mov
clc
pop
stc
iret
cmp
xchg
mov
jge
add
std
mov
ss
js
test
fimull
decl
xchg
cs
jecxz
mov
pop
fiadds
dec
addr16
xchg
cwtl
outsb
sbb
jns
repz
inc
mov
aam
inc
jo
shl
or
movsl
xchg
out
pop
fsubl
shll
fcompl
mov
mov
xlat
fwait
pop
sbb
mov
repnz
test
movsl
and
mov
mov
pop
scas
or
stos
and
pushl
aam
add
jns
mov
cmc
add
inc
xor
push
pop
and
xchg
lods
pop
jnp
shr
adc
popa
gs
repz
and
test
call
or
inc
jge
or
mov
mov
and
push
or
ljmp
push
stos
xchg
loopne
not
lods
inc
push
movsl
sub
iret
inc
adcb
mov
push
pop
sbb
lock
and
cmp
jmp
lea
daa
call
fcoml
sbb
xor
mov
mov
scas
pop
daa
mov
mov
dec
inc
dec
daa
lcall
sub
cli
pop
pusha
divb
int3
sbbl
mov
int
cmp
xchg
xor
nop
aam
or
in
mov
add
push
push
mov
xor
sarl
pop
cmp
pop
jnp
lock
add
addl
mov
xor
lahf
mov
iret
iret
jl
clc
fldcw
aaa
adc
xchg
adcb
insb
xchg
icebp
and
mov
jne
push
adc
addr16
xchg
int3
or
push
and
xor
sbb
xchg
daa
push
vmulps
aam
mov
test
out
mov
ret
or
popa
into
out
inc
sbb
pop
leave
xchg
popf
sub
adc
enter
push
jecxz
add
mov
sub
add
sub
fs
push
and
dec
push
mov
jno
push
push
test
int3
mov
push
outsl
sti
jle
fs
sbb
fwait
jle
mov
mov
push
pop
pop
sbb
pop
xchg
fcmovnb
adc
and
fwait
xor
xchg
jmp
mov
adc
xchg
jg
test
pop
dec
idiv
insb
outsl
mov
inc
push
bound
sbb
in
out
ljmp
das
or
cmp
add
lret
inc
mov
dec
rolb
inc
xchg
ja
es
push
sub
dec
mov
mov
or
js
add
pop
call
test
and
jns
imul
mov
add
add
inc
call
in
loopne
shlb
pushl
cmpsl
les
inc
dec
jmp
sub
mov
dec
inc
jne
dec
dec
loopne
std
add
call
clc
xchg
jae
out
mov
adc
mov
out
rcll
arpl
stc
in
xor
dec
push
jno
dec
shrb
pop
push
cmp
sub
mov
lock
movsl
lahf
orl
mov
fwait
addr16
xchg
jge
xor
fstl
mov
rcr
ljmp
aad
dec
in
xchg
xchg
aaa
cs
jns
xchg
jb
or
xor
push
sbb
dec
jne
ret
push
ret
jecxz
cs
or
mov
mov
es
jbe
popf
arpl
and
cmp
outsl
jp
data16
fdiv
xchg
add
fimuls
es
jo
push
test
dec
std
inc
push
add
pop
sbb
in
loope
mov
aam
arpl
test
inc
push
daa
adc
lods
movb
ss
dec
cmp
push
xchg
ret
scas
movsb
mov
int
cmpsl
test
stos
pop
and
xchg
xorb
out
es
repnz
pop
xor
dec
or
or
jl
adc
sbb
out
fsubp
add
sub
inc
jno
mov
add
add
aas
aam
sbb
push
adc
mov
and
xor
xor
pop
cmp
ret
test
ja
push
addl
dec
push
imul
ss
int3
in
xchg
outsb
xchg
sbb
in
pop
fwait
lods
or
dec
std
loopne
out
dec
in
jnp
mov
pop
pop
repz
push
popa
jns
pop
movb
addr16
data16
and
push
dec
xor
pusha
mov
loope
rol
push
ficoms
mov
and
in
pop
dec
sub
or
sbb
in
sbb
adc
adc
pusha
push
ret
cmc
fs
icebp
pop
das
push
ds
xchg
pusha
sahf
and
mov
lcall
fstp
out
and
xor
addr16
movsb
int
jnp
and
fsubrp
out
pop
sarl
mov
gs
rorl
pusha
add
push
inc
mov
int
jne
mov
inc
sbb
insb
iret
test
sub
dec
pop
clc
add
cmp
cltd
adc
pop
andb
jne
jo
jne
scas
sbb
loopne
pop
sti
ret
pop
fstl
or
push
xchg
xchg
push
mov
out
adc
push
jg
dec
imul
mov
cmc
dec
fwait
scas
sbb
or
xor
cli
sbb
inc
in
ficoml
flds
cli
popa
imul
stc
ret
adc
or
mov
fisubl
inc
addr16
sbb
jno
fistl
xchg
jmp
sbb
adc
fnstsw
mov
fidivs
inc
adc
test
out
movsl
leave
outsb
pop
xor
push
jno
stos
xor
xor
iret
jmp
mov
or
stos
jge
jp
or
mov
jmp
pop
les
icebp
and
or
sarb
in
or
popf
lock
mov
mov
inc
add
push
stos
movsb
mov
add
mov
arpl
pop
ret
fwait
mov
jmp
mov
popa
lock
fwait
call
mov
push
inc
pop
repz
outsb
adc
in
xchg
pop
mov
mov
and
lods
mov
sti
jb
xor
cmp
hlt
sarb
jns
adc
push
int
mov
shrl
movsb
test
int3
insb
mov
lock
xor
add
add
movsb
jae
jae
push
sub
in
cmc
test
mov
xor
sbb
scas
or
lret
sahf
jns
xchg
inc
xchg
inc
jp
jae
outsb
sbb
mov
cmp
cmp
xor
adc
mov
jns
aaa
jl
push
out
arpl
push
popf
icebp
imul
mov
xchg
push
or
xchg
enter
test
jb
xor
dec
push
mov
ret
sbb
sbb
mov
mov
mov
int3
mov
fldl
shll
inc
xchg
lea
adc
nop
xor
loop
hlt
je
add
xor
dec
push
add
icebp
hlt
popa
dec
in
pop
mov
or
mov
das
push
and
lret
mov
pushf
pop
jle
xchg
xor
es
std
hlt
in
xor
movsl
cmpsl
lods
mov
mov
je
int3
dec
gs
bound
xchg
push
arpl
stc
xor
push
jle
sbb
push
cwtl
mov
stc
sbb
cmp
inc
shl
add
xor
jmp
cmp
mov
test
xchg
ret
icebp
data16
pop
scas
cmpsl
adc
mov
cmpsl
cmp
cli
push
in
and
arpl
pop
inc
aas
xchg
xchg
mov
scas
push
jmp
lret
orb
sub
mov
loope,pt
std
xlat
mov
sbbl
sub
mov
xchg
push
cld
jl
push
dec
into
or
lea
out
loopne
adc
pop
push
in
pop
and
cwtl
aad
daa
xchg
movsb
stos
mov
inc
add
mov
jns,pn
sbbl
sbb
bound
jl
mov
fwait
xchg
cmp
push
add
cmp
rorl
mov
xor
in
and
in
hlt
push
mov
idivb
dec
insl
fidivrs
ja
inc
gs
mov
xor
clc
mov
push
push
leave
imul
fldl
lds
faddl
popl
addr16
ljmp
fmull
icebp
sub
dec
repz
jecxz
push
std
nop
daa
sar
int3
mov
fnstsw
cmp
or
lods
mov
out
cld
mov
lahf
int
rclb
mov
pop
cmpsb
in
pop
adc
clc
ficoms
cmpsl
adc
jbe
imul
pop
in
leave
cli
in
cltd
repz
pop
inc
jle
leave
jg
pop
leave
addl
shll
jmp
cmpl
sar
jp
call
out
mov
dec
mov
sub
dec
fadd
mov
sbb
aaa
mov
add
aaa
ficompl
dec
ds
sbb
insb
fucom
repz
repz
pop
mov
fs
dec
or
lds
jge
lret
lods
es
out
mov
pop
add
adc
dec
mov
cmpsb
pop
jecxz
rorb
pop
lock
scas
and
push
jo
jecxz
int
add
incl
jge
fdivs
jne
and
inc
test
mov
jg
js
jle
cmpsb
orl
das
adc
dec
jl
aaa
xor
push
sub
xchg
in
add
mov
gs
gs
in
pushf
into
adc
mov
dec
imul
jecxz
sahf
out
aad
lock
jg
lahf
fdivl
sub
xor
movsb
int
pop
jmp
inc
mov
lock
push
add
ljmp
and
popa
mov
aad
xchg
xchg
push
hlt
insl
subl
fistpl
push
std
cmp
insl
into
cmc
ds
adc
mov
inc
mov
add
inc
enter
cmp
out
jae
push
xor
adc
test
mov
dec
hlt
inc
mov
push
mov
pop
fildll
jb
sbbb
fmull
int
shlb
mov
fnstsw
sub
push
outsl
sub
mov
or
ss
mov
fdiv
sbb
mov
inc
sbb
push
addl
mov
loope
mov
mov
xchg
adc
stos
addr16
sub
movsl
mov
and
xchg
jnp
sarl
inc
stos
push
cmp
xchg
fbstp
jno
sub
test
ja
dec
sahf
or
mov
stos
cld
iretw
lret
in
mov
stos
mov
mov
pop
or
stos
outsl
test
inc
movsl
mov
lret
pop
stc
gs
mov
icebp
jno
sti
push
push
jno
mov
push
pop
mov
pop
add
addr16
ja
loopne
std
or
jne
out
insb
push
inc
scas
or
repz
mov
sti
cmp
in
sub
out
mov
sbb
dec
int3
out
mov
mov
popa
insb
shrb
repnz
fbld
gs
repz
aad
neg
leave
push
repnz
jbe
inc
stos
or
addb
mov
sbb
outsb
lret
inc
or
adc
call
lock
sub
stos
or
xchg
icebp
mov
xchg
jle
push
mov
push
xchg
add
insl
jecxz
jg
fsubrs
loopne
inc
shll
cmc
loop
negb
fldl
cld
xorl
xor
push
fstpt
add
sub
sbb
pop
sub
pop
xlat
adc
xor
fistps
dec
negb
jge
xchg
mov
add
js
sbb
mov
cmp
mov
adc
enter
loopne
and
insl
pop
int3
push
clc
push
sub
pop
jne
pop
in
lret
mov
adc
add
adc
inc
lahf
sub
lods
jmp
loopne
pusha
imul
test
stc
ret
inc
xchg
je
hlt
mov
lret
xchg
jns
es
enter
arpl
orl
adc
out
pushl
stos
mov
scas
into
and
aam
dec
jecxz
mov
adc
leave
insb
inc
shll
adc
mov
xchg
cmp
xchg
clc
icebp
sbb
xor
in
pop
sahf
adc
fwait
repnz
push
jno
jae
arpl
pop
mov
push
inc
lret
fdivrs
xor
decb
std
out
lods
push
fstpt
lea
not
sub
and
xlat
jp
sbb
add
dec
jg
std
loop
mov
ret
iret
xchg
sar
sub
cmpsl
mov
pusha
inc
aaa
daa
push
sti
cmp
popa
loop
add
roll
add
test
jp
xchg
and
lea
mov
mov
add
mov
mov
and
pop
xor
scas
push
popa
push
xchg
pop
mov
jg
int3
xor
stos
dec
xchg
dec
cmpsb
adc
pop
mov
lcall
sub
lds
dec
sahf
mov
add
sbb
pop
dec
or
enter
fmuls
add
test
inc
sub
xor
pop
ss
divl
int
mov
jge
scas
imul
in
xchg
sbb
lock
mov
mov
call
aaa
in
lds
mov
mov
jb
jecxz
pop
mov
jle
pop
mov
out
sahf
xor
sub
adc
fisttpl
ret
mov
push
sbb
add
imul
push
sub
loopne
jnp
adcb
mov
pusha
outsl
int
mov
or
push
jbe
bound
cmp
sbb
add
mov
xchg
mov
mov
mov
xchg
je
loop
rclb
lods
mov
iret
arpl
xor
push
ret
push
fists
shlb
push
insl
pushl
xchg
or
loope
push
popf
xchg
shl
sub
arpl
inc
xchg
sub
jmp
adc
adcb
jb
dec
cmpsb
xchg
mov
mov
mov
adc
pop
xchg
imul
push
dec
add
into
mov
adc
push
clc
and
cmp
sub
aas
cmp
dec
cmpb
mov
xlat
shl
fisubrs
lcall
jg
cli
mov
sbb
inc
xchg
adc
bound
mov
sub
push
pop
or
add
mov
out
mov
nop
nop
repnz
lods
shl
sub
mov
cmpb
push
inc
cmp
cmp
pop
pop
jmp
mov
cmpsb
mov
out
and
pop
sub
mov
mov
divl
sbb
call
loope
cmp
ds
sbb
add
mov
fiadds
and
mov
or
push
sub
and
loop
in
ja
adc
add
movsb
dec
mov
test
hlt
insb
ret
repnz
sti
pop
pop
call
push
pop
mov
inc
int
dec
xchg
fwait
push
hlt
jl
addr16
jae
cmc
repnz
aas
pop
nop
ficoms
mov
jmp
lret
push
mov
pop
xchg
or
mov
ret
clc
adc
mov
cld
pop
push
xlat
in
add
or
sub
mov
inc
sti
xor
mov
mov
test
repnz
ret
repz
shrb
cmpsl
xchg
fcmovnbe
loop
sbb
sbb
jl
mov
mov
into
out
adc
lds
sub
iret
push
jp
daa
int3
cmpsl
jb
inc
aas
fnstsw
dec
dec
sub
ss
cmc
jle
out
iret
mov
insl
lahf
popa
loopne
shll
out
push
imul
cwtl
and
lods
adc
ss
push
out
lds
pop
mov
pop
rep
fisubrl
test
movsl
out
js
fcomi
mov
pushaw
pop
jl
pop
sbb
aam
adc
shl
lcall
daa
imul
jp
xchg
dec
dec
jmp
addl
repz
andb
pop
pop
out
jmp
jmp
popf
add
fwait
or
push
cli
scas
push
testl
pop
dec
cmp
shll
add
mov
mov
dec
frstor
and
push
fmull
sahf
movsb
add
jge,pt
dec
jp
setbe
fadds
sbb
lods
jle
insl
mov
dec
iret
inc
movsb
adc
addb
mov
mov
sarb
mov
xchg
push
and
jns
dec
dec
mov
fnsave
jge
data16
ret
bound
jo
push
imul
ljmp
cltd
gs
clc
jle
icebp
cmp
push
mov
xor
mov
push
rcll
xor
dec
mov
das
xor
lret
inc
and
insb
inc
jae
or
push
lea
test
mov
push
sub
dec
sbb
dec
sbb
xchg
test
imul
pop
add
cld
mov
clc
sti
pusha
mov
sub
pop
insl
xchg
cmp
and
sub
mov
or
xlat
lods
imul
push
fimull
mov
insb
pop
mov
jp
or
sbb
or
sbb
ss
cmpl
xchg
les
clc
push
loopne
pop
daa
loopne
jnp
mov
dec
sbb
sub
mov
out
pop
fxch
xor
cmp
sbb
jmp
or
push
icebp
cmpsl
cmpsl
inc
sbb
test
daa
cmc
or
or
jo
mov
lods
js
adc
outsb
mov
sbb
fcom
fcomps
ss
fistpll
nop
pop
fbstp
lahf
in
in
pushf
incb
adc
fisubs
fsubs
scas
mov
pusha
fisttpll
sbb
roll
ljmp
jae
icebp
mov
xlat
es
adc
adc
ret
sbb
leave
and
js
pusha
pop
lds
dec
aad
cmpb
fstps
and
jl
sub
fcoml
mov
push
sarl
fdivrl
rcrb
mov
sti
cmp
pop
lea
dec
sarb
mov
add
mov
sub
divb
mov
mov
jmp
loopne
scas
pop
fnstsw
jns
stos
test
pop
xor
imul
data16
aam
xchg
xchg
test
insl
or
or
hlt
andl
xchg
lods
jg
ja
pop
cmp
sub
jl
mov
jmp
pop
or
add
fs
mov
inc
inc
fsubr
cmp
in
pop
inc
push
cmp
ret
mov
jae
inc
leave
xchg
xor
or
andl
and
push
jo
push
add
pusha
dec
pop
mov
mov
push
jge
dec
gs
inc
andl
dec
fisubl
xchg
sub
lahf
out
inc
fwait
push
or
dec
bound
icebp
xor
lret
daa
les
mov
cli
fucomip
inc
add
in
mov
jmp
iret
sti
pop
flds
mov
inc
and
xchg
push
cs
sbb
loope
xchg
shll
dec
data16
insl
mov
and
inc
adc
mov
inc
scas
mov
mov
mov
or
cltd
mov
push
outsl
push
jle
inc
xor
jecxz
stc
or
pop
add
and
push
mov
insl
dec
ror
repz
dec
or
movsb
pop
mov
rclb
mov
cmp
and
xchg
movsb
jb
and
jae
xor
cmp
fstp
push
jecxz
je
cmp
orb
ret
andb
sbb
add
stos
pop
adc
push
xchg
xchg
add
fucomip
in
fdivrs
xchg
das
add
mov
mov
lods
mov
or
mov
dec
jg
das
int
xor
dec
cmpsb
sarl
aas
and
mov
fnstcw
add
dec
fidivs
mov
mov
jae
loope
cli
pop
inc
cmp
insl
sub
cltd
mov
dec
push
lods
int3
iret
add
out
mov
outsb
cwtl
and
sbb
pop
cli
add
jle
ret
ret
call
test
inc
mov
sub
inc
decl
dec
sbb
xchg
dec
idivb
jne
lcall
aam
jmp
cmp
mov
dec
or
push
loope
icebp
xchg
insl
outsb
or
mov
mov
and
mov
fnstsw
add
pop
int3
daa
xor
subb
ljmp
icebp
jne
sbb
ret
or
dec
sti
and
out
fsubp
int
jecxz
in
xchg
aaa
insb
fld
jmp
cld
clc
test
das
inc
dec
or
lds
pop
inc
into
xchg
fstpl
cwtl
scas
test
lock
push
jg
push
dec
mov
sti
rorb
rclb
xchg
jno
lret
sbb
xchg
scas
or
push
cmp
pop
mov
push
data16
xchg
mov
push
inc
movb
test
push
in
cmp
test
cmc
cmpsb
xor
int
in
and
rorb
sub
je
cmp
lock
loop
rcr
adc
dec
ja
jp
xchg
inc
pop
stc
lock
pop
js
inc
inc
inc
shrl
pop
outsb
push
sbb
add
enter
sbb
adc
stos
ds
inc
mov
sub
cld
arpl
clc
aaa
maskmovq
idivl
adc
pop
xlat
adc
jle
xor
in
jmp
dec
xchg
test
lahf
and
xor
pushf
ja
shrb
xchg
lods
cli
dec
pop
and
mov
mov
adc
pop
mov
dec
test
sub
cmpsb
sbb
mov
test
insl
push
test
mov
inc
shl
fidivl
repnz
rcrb
sarl
add
ds
sbb
push
xor
lock
mov
pop
repnz
sahf
das
sub
mov
mov
dec
lods
in
mov
jns
sbb
lock
imul
sub
ss
mov
mov
or
cmp
pop
add
ret
jmp
icebp
mov
sub
sub
inc
lods
dec
cmp
jnp
inc
cmp
scas
jge
movsl
mov
adc
xor
scas
loop
jp
adc
xchg
or
xor
loop
jnp
jg
in
repz
lock
add
je
mov
xchg
outsb
test
ljmp
xor
push
out
test
out
xor
aad
add
ret
pop
outsl
add
push
sub
mov
and
sbb
sub
or
mov
fiaddl
and
cwtl
and
pop
sti
inc
pop
fcomip
sub
rol
xor
or
mov
out
or
xchg
push
dec
fs
push
aad
out
cmp
pop
lods
enter
xchg
lret
pop
cs
testl
bound
pop
clc
adc
cmp
fsubp
sbb
and
cmp
testb
dec
xchg
enter
sbb
sub
outsl
adc
add
sbb
imul
lods
ss
adc
divl
mov
cwtl
mov
xchg
lret
cmc
ds
dec
test
mov
ss
cmpsl
popa
rolb
push
aad
lahf
and
xchg
cmp
cmp
push
push
aam
ficoms
stos
stos
sbb
xor
pop
mov
adc
cmp
movsl
shlb
inc
lea
jne
loop
mov
inc
hlt
mov
stos
stc
out
push
out
mov
pop
jmp
in
sbb
xlat
add
enter
xrelease
jg
cli
shrb
daa
mov
in
jae
sbb
cmp
mov
xor
call
pop
add
cmp
jmp
loopne
arpl
sub
dec
jne
inc
outsb
addl
cmc
stos
and
or
or
xchg
and
sbbl
or
jmp
imul
or
pop
xchg
dec
jg
sbb
sbb
jae
enter
add
fwait
imul
cld
sbb
ljmp
mov
in
nop
aaa
rcrb
test
xchg
subb
bound
sahf
xchg
int3
sahf
jno
xor
adc
xor
jae
imul
loopne
rcrl
cmc
cwtl
fldenv
in
pop
mov
xchg
jb
mov
inc
mov
xchg
dec
dec
xchg
adc
inc
fnclex
lock
scas
and
jb
aas
iret
inc
es
lret
test
fisttps
pop
loop
cli
xchg
and
or
cmp
popa
repz
cwtl
fcmovnu
mov
mov
jmp
inc
jae
sti
push
sub
fdivrs
xchg
jle
add
and
add
data16
bound
pop
inc
repnz
push
sub
add
adc
aad
sub
rcl
xchg
push
lcall
fisttpll
or
mov
cmp
lds
adc
lds
push
dec
mov
ss
sub
aam
mov
xchg
and
xor
gs
push
dec
add
jle
lahf
mov
add
jge
adc
mov
or
xlat
gs
idivb
mov
cmp
mov
dec
sbb
add
fstl
shrd
fistl
insb
xchg
xor
out
jl
pop
aas
inc
fs
out
icebp
enter
mov
iret
pop
sub
lods
sub
sbbl
sbb
xchg
movsb
out
mov
sub
push
and
cmp
bswap
add
mov
sti
sub
jl
pusha
sbb
outsl
and
sub
stc
mov
jo
cmp
aas
repz
shl
test
or
mov
je
insl
mov
pop
add
js
and
in
and
loop
stos
push
notb
lret
rcl
jmp
sub
jmp
xchg
inc
sbb
push
jns
cmpsb
stos
cmpsb
jns
and
int
lahf
push
sub
cmp
mov
inc
aad
jge
xchg
sahf
fcmovne
pop
jo
xchg
aas
xlat
enter
js
fdivl
fs
and
jle
in
sarb
call
rorb
sbb
pop
jne
xor
shr
inc
cmp
ret
xchg
shrl
popa
push
lods
mov
pop
js
mov
mov
aam
pushf
rcr
sahf
inc
jne
sahf
lret
adc
aam
push
cmc
xchg
and
push
pop
mov
faddp
bound
sti
adc
pop
add
push
stc
push
xchg
mov
sbb
ds
pusha
add
dec
dec
push
aaa
rcll
push
ljmp
pushf
inc
xor
call
jns
scas
add
cli
dec
mov
and
adc
mov
out
test
clc
dec
sub
or
cld
popf
jo
push
cld
xchg
inc
and
imul
inc
ds
push
fmulp
xor
pop
mov
and
xor
jmp
sub
jmp
lret
je
xor
loope
popf
sub
cwtl
jns
push
aam
adc
jnp,pn
cmp
pushf
adc
add
hlt
and
push
jns
jmp
jae
xchg
jg
fwait
sub
push
mov
mov
shll
inc
sub
cmp
pop
adc
cmp
pop
add
inc
jns
jae
add
push
pop
xchg
mov
clc
xchg
cmc
aad
xlat
jge
stc
imul
add
mov
repnz
jmp
ss
mov
rolb
dec
push
jp
and
imul
in
lcall
icebp
aam
shl
inc
xchg
pushf
dec
lret
test
or
push
xchg
jle
pop
push
out
cmpsl
insb
ja
adc
or
cs
push
lds
mov
lcall
fnstenv
mov
in
aas
in
stos
push
repz
pop
bnd
mov
sbb
iret
int
adc
mov
sub
mov
inc
dec
adc
arpl
pop
xchg
push
arpl
lea
out
mov
mov
mov
sub
repz
incb
loopne
inc
push
in
test
jle
xchg
in
popf
rolb
push
cmp
inc
sbb
cli
repnz
lahf
rcl
mov
sahf
je
enter
popa
jne
push
push
decb
pop
mov
loope
jno
xor
add
call
cld
push
pop
dec
fwait
cld
push
aas
push
push
adc
push
cmpsb
test
lret
jl
cld
mov
mov
xor
cs
pop
lods
lret
outsl
rolb
leave
stos
mov
inc
xlat
daa
pop
shll
adc
out
sub
dec
idiv
ret
clc
mov
sar
insl
dec
xor
enter
mov
lods
lahf
sub
inc
mov
loopne
push
push
aas
outsl
shl
cmpb
sarl
idivl
sub
int
loopne
sbb
lcall
and
mov
mov
push
lret
xor
pop
xchg
aam
insl
inc
push
cs
cmpsl
mov
or
int3
or
imul
sub
ja
lock
out
or
xor
jg
and
mov
dec
xlat
sahf
add
jns
aas
mov
in
div
loopne
sub
aaa
mov
sbb
insb
sub
ficoms
repz
inc
xchg
xchg
add
ror
dec
repnz
lret
mov
xor
cli
out
xchg
aaa
cmpl
cmp
outsb
sub
sahf
fidivs
adc
xor
or
adc
loopne
roll
add
push
jmp
out
or
xor
jge
fimuls
lods
mov
adc
aam
dec
arpl
ret
subb
icebp
int3
sarb
jmp
int
or
cltd
stos
cmpsl
push
mov
lock
mov
cltd
stos
fnstenv
mov
repnz
enter
in
sbb
ret
sbb
in
pop
pop
fiaddl
jge
push
mov
xor
dec
movsb
mov
push
mov
pop
dec
mov
adc
cld
fdivrl
and
stc
xlat
ror
cmp
cmp
jo
outsb
pop
call
cmp
rol
or
insb
sub
lret
fs
push
xchg
sbb
icebp
jge
inc
scas
jl
adc
lds
sbb
fldl2e
popa
mov
mov
add
jmp
popf
jl
xchg
dec
or
jmp
ljmp
or
icebp
inc
adcl
inc
add
fs
out
xor
and
mov
cwtl
popf
or
dec
or
call
fnstcw
bound
cmpsl
pop
test
push
push
fisttpl
and
push
stos
test
mov
dec
in
mov
jbe
les
and
inc
cmp
and
outsl
ljmp
xchg
inc
xor
pop
jge
pop
xchg
xchg
lods
sub
pop
lahf
push
nop
ss
sub
pop
addb
ljmp
orl
mov
into
mov
fs
and
int
cmp
jecxz
mov
mov
xchg
jno
lock
js
pop
into
sbb
push
jecxz
jns
fwait
dec
stos
jno
lock
xchg
call
mov
loope
mov
or
pop
aam
push
in
cs
fisubrs
push
popf
push
shlb
rolb
xor
call
cmpsb
xchg
cmp
mov
bound
lods
cmp
xor
xchg
cmp
and
ret
add
sub
add
adc
sti
adc
rep
test
jns
inc
cmc
inc
xchg
add
mov
mov
mov
inc
imul
pop
test
mov
push
enter
cltd
mov
sub
lret
and
mov
test
push
out
add
mov
ss
in
jp
cmp
hlt
lcall
dec
sub
push
or
orb
fdivl
jns
mov
xchg
adcb
xchg
push
cltd
cltd
xor
jg
xor
adc
test
mov
insb
scas
sahf
lahf
mov
cmp
jbe
fucom
mov
add
xchg
jbe
fimull
lods
jno
sahf
pop
inc
pop
test
push
xorl
or
jmp
jp
sub
outsb
fwait
cmp
sbb
mov
sub
inc
fadd
mov
sbb
into
adc
lock
adc
sub
adc
push
scas
mov
adc
cmp
gs
or
fadds
insb
sub
sbb
movsb
mov
lcall
lahf
cli
int3
lcall
mov
lcall
int
lods
mov
leave
push
pop
and
test
fcom
cs
fcomps
xchg
pop
xchg
popf
aam
xchg
fsubs
fdivs
dec
leave
cld
dec
push
div
jl
jne
sub
es
imul
and
jns
mov
scas
nop
adc
adc
inc
xor
mov
fidivs
sbb
push
cmp
aad
insl
sbb
pop
test
inc
pop
inc
icebp
push
mov
je
mov
push
je
dec
hlt
jbe
lret
add
adc
lock
inc
adc
pop
mov
neg
test
loope
lds
daa
and
add
popf
mov
mov
mov
cli
sub
enter
pusha
mov
ficompl
scas
mov
or
loop
lds
mov
xchg
sbb
mov
xchg
sti
shlb
cli
and
fcoml
arpl
push
xor
mov
push
inc
mov
cmp
mov
imul
ljmp
pusha
or
mov
and
push
mov
in
repz
data16
popf
jne
lea
dec
outsb
or
jmp
xor
mov
repz
cwtl
arpl
les
sahf
mov
or
pushf
xchg
out
cld
xor
xchg
cmp
test
cmp
jecxz
jns
cmpsb
decb
in
mov
jb
repz
jg
add
cmp
test
mov
scas
les
int
insl
std
je
mov
sbb
dec
loopne
push
ljmp
cmc
addr16
pop
data16
and
dec
jp
fwait
nop
push
scas
popf
fisttps
push
out
cmp
xor
adc
or
scas
xchg
cwtl
sti
xor
xchg
loop
dec
mov
cmp
fcoms
stc
pop
or
mov
sbb
adc
add
sbb
xor
je
repz
or
mov
cmp
mov
pop
jl
leave
or
aad
mov
cmc
pusha
mov
jl
cmp
filds
sbb
pop
adc
xchg
inc
pop
orl
std
mov
cli
les
dec
push
pop
mov
jecxz
pop
adc
cltd
pop
dec
sub
jle
inc
dec
clc
add
fidivrs
or
lods
mov
sub
fbld
mov
inc
xor
inc
scas
mov
cmp
cltd
sbb
daa
mov
je
sarb
loope
pop
add
jnp
jne
shrb
call
dec
sbb
imul
dec
std
adc
push
adc
jb
lea
pop
repz
mov
lcall
mov
sbb
ret
and
cmp
fcomps
xchg
jle
sar
faddl
in
scas
pop
mov
jmp
cmp
sahf
fucomi
std
testb
sbb
jp
fwait
jmp
xchg
add
test
add
sub
das
dec
inc
or
mov
xchg
inc
imul
fwait
es
add
rorb
add
movsl
mov
or
movsb
bound
mov
sub
sbb
gs
imull
or
aas
mov
pminub
fdivs
jl
repz
data16
pop
mov
pop
test
add
dec
mov
incl
mov
popf
xchg
jl
sbb
pop
mov
popf
dec
adc
dec
xchg
fcompl
mov
xchg
ljmp
or
mov
mov
jp
popf
sbb
movsb
mov
nop
sub
shlb
sbb
aas
cmp
cs
sub
repz
je
lods
inc
scas
adc
adc
pop
movsb
sub
mov
ds
xchg
fs
aad
and
repz
stc
leave
dec
sub
cmpsb
push
stos
popf
lcall
icebp
aas
test
sbb
cmp
fwait
inc
fbstp
cmc
mov
mov
out
movsb
loope
pushf
cmp
sbb
sbb
dec
xchg
push
cmpsl
lock
sarb
mov
addr16
and
mov
cmpsb
dec
or
outsl
int
jmp
or
mov
imul
test
out
adc
push
mov
insl
std
mov
mov
dec
insl
loope
mov
push
cmpsb
das
fucompp
or
insb
xor
jne
xchg
xchg
mov
xchg
aad
inc
push
mov
sbb
sub
cmc
inc
bnd
push
les
mov
movsb
out
int3
and
mov
inc
mov
fnstcw
and
lcall
cmpsb
adc
sub
add
xchg
pop
jmp
sub
and
into
mov
jmp
les
loope
pop
jmp
lahf
movsb
in
call
das
xor
sbb
loop
push
xor
jbe
sahf
mov
loop
fidivrs
jmp
int3
lock
into
and
fidivl
bound
adc
loope
nop
mov
xchg
sbb
cmp
pop
mov
sbbl
push
imul
adc
xchg
insl
cmp
or
inc
inc
inc
ja
andl
and
pushf
mov
push
xorb
and
mov
cmp
movsb
fdivl
fsubl
je
sahf
test
xchg
outsb
add
inc
pop
in
leave
mov
sbb
dec
inc
pop
xchg
dec
adc
test
aas
popf
enter
popa
pop
cmp
sub
aas
mov
int
add
xchg
add
pop
dec
inc
cld
ljmp
mov
lret
jbe
lcall
add
fwait
mov
aad
out
or
ds
int
sbb
lock
js
add
lret
push
ja
push
mov
fnstenv
mov
shl
fsubrl
jne
sbb
sub
dec
pop
ja
loopne
out
jg
xchg
and
inc
lock
xchg
fisttpll
or
imull
test
adc
stos
sbb
pop
jae
out
sub
cwtl
xlat
jbe
push
mov
inc
nop
xchg
or
sub
in
cmpsb
push
test
repz
lods
mov
and
add
fwait
push
bnd
hlt
push
addr16
fiaddl
mov
in
add
add
sub
fsubs
fcoms
aam
into
xor
sbb
mov
imul
inc
imul
push
jne
lahf
mov
pop
incl
push
in
andl
jne
test
mov
dec
lods
and
mov
and
jecxz
fstps
xchg
xlat
fwait
aam
push
stos
popa
rorb
push
mov
and
inc
pop
sbb
leave
cmc
dec
subl
jno
daa
js
sti
jnp
fcomp
inc
test
xor
mov
insb
xor
mov
fistl
popf
inc
add
sbb
jg
aaa
loope
rolb
mov
xor
push
inc
inc
rorb
popf
jo
mov
fdivrs
inc
or
stos
setns
ret
jnp
fcoml
mov
mov
clc
and
lahf
mov
gs
jne
push
jle
in
xor
xor
arpl
mov
sub
jne
fnop
jp
sarl
adc
mov
test
push
test
mov
clc
inc
aad
ss
mov
leave
adc
leave
fwait
cmp
jno
shll
cs
xchg
push
cld
and
xorl
mov
sbb
jmp
xchg
idivl
call
ret
std
add
sbb
stos
adc
dec
dec
mov
lock
pop
aad
inc
jb
lahf
pop
xor
xor
outsb
arpl
ret
rclb
rolb
int3
mov
js
jl
add
cmc
inc
scas
frstor
mov
jl
mov
lret
lcall
mov
xchg
out
imul
ret
insb
outsb
mov
incl
imul
adc
fsub
imul
cld
xor
add
xor
mov
idiv
jno
stos
dec
jo
lock
je
adc
arpl
cltd
lret
xlat
rcr
xchg
mov
fs
fistl
les
xchg
push
jb
loop
dec
pop
hlt
cmp
push
arpl
adc
xor
roll
adc
dec
jne
push
add
mov
ss
mov
loopne
mov
iret
sub
outsb
and
pop
or
faddl
or
add
xchg
mov
adc
not
das
inc
shrl
dec
cmp
xor
pushf
or
pop
push
daa
pop
pop
jmp
jl
fildl
js
out
mov
adcl
call
xor
ja
or
andb
mov
adc
cltd
add
ss
mov
testb
dec
arpl
daa
int
xchg
mov
out
insl
or
lods
loopne
repz
jb
out
dec
adc
mov
mov
pop
test
loope
and
out
popa
movsb
repnz
pusha
adc
cmp
push
aaa
dec
inc
dec
notl
push
loop
ja
in
push
push
ret
mov
fisttpll
aas
fsubl
mov
pop
cltd
clc
dec
shll
imul
mov
sbb
sub
pop
mov
aam
add
mov
inc
loop
orl
mov
cwtl
dec
xchg
push
sub
sahf
mov
xor
nop
inc
jmp
aam
mov
aas
sub
adc
mov
in
into
mov
and
lret
aad
dec
arpl
jg
lret
sub
xchg
es
jb
insb
cmp
fs
and
dec
xchg
inc
dec
xor
dec
add
and
inc
mov
jge,pn
lcall
sub
sbb
popl
push
mov
mov
in
mov
jecxz
imulb
jl
pop
imul
xor
mov
add
dec
xchg
mov
cmp
scas
shll
mov
xchg
pop
xchg
test
dec
call
repz
movsb
mov
outsb
push
add
mov
push
mov
jg
pop
mov
enter
inc
shrw
pop
inc
xchg
popa
out
sbb
cltd
xchg
pop
cltd
imul
repz
xchg
repz
sbb
push
sub
push
aaa
mov
sub
dec
xchg
pusha
xor
inc
scas
sahf
push
ret
sub
sbb
in
outsb
mov
adc
cmpsb
aad
mov
add
cmp
into
push
xlat
mov
jae
sub
adc
lock
out
sub
sub
pop
insl
shlb
dec
dec
pop
orb
cmpl
icebp
stos
lds
loopne
xor
mov
xchg
ret
pop
lcall
dec
sbb
mov
aad
testb
cmp
cli
jg
pop
movsl
mov
xor
js
cmp
sub
mov
mov
jnp
adc
and
dec
cmp
pop
add
mov
shrl
sub
pop
lods
lret
ja
fwait
loopne
inc
push
dec
jecxz
fimuls
jne
mov
sarb
push
pushf
or
sub
lea
push
orl
xchg
inc
outsb
test
imul
mov
pop
add
jecxz
mov
inc
shl
pushf
mov
cld
mov
xchg
inc
mov
cwtl
movsl
pop
or
and
subl
nop
lcall
mov
addr16
fidivrs
xchg
and
nop
out
int3
imul
lods
lds
cmp
jecxz
popa
fisttpll
aam
inc
test
out
and
xor
addr16
xchg
sub
js
test
cli
sub
sbb
and
mov
dec
test
test
xor
jns
inc
scas
jmp
mov
je
mov
xor
lcall
aaa
les
sahf
call
dec
pop
jp
pop
out
and
mov
pop
sahf
or
std
in
pop
jmp
mov
cld
and
push
xchg
or
pop
scas
aad
dec
mov
test
fildl
or
adc
mov
inc
fistl
and
mov
jb
cmp
nop
xchg
push
pusha
test
sub
jg
push
sub
cwtl
sbb
sbb
aaa
jle
outsb
fsub
lock
xchg
nop
xor
int3
pop
or
pop
cmc
ss
cmpsl
scas
lods
in
dec
sub
addr16
or
jno
mov
inc
ret
jns
xor
aad
scas
nop
lahf
xchg
xlat
fdivrs
icebp
sub
dec
lcall
cmp
std
sahf
xchg
add
out
icebp
jge
fstl
jge
push
cmp
movsb
stos
outsb
and
out
pop
fwait
cmpsl
push
cmp
sbb
or
adc
pop
sbb
sar
test
jo
lock
mov
stos
dec
xchg
add
andl
insl
xchg
or
pop
je
inc
sahf
mov
or
mov
sub
fdivl
jbe
cmp
push
mov
fnsave
int3
push
mov
repnz
cld
addl
inc
aad
das
cmp
pop
outsl
fmulp
iret
movsb
pop
sub
mov
xchg
sbbb
inc
mov
pop
roll
call
lea
in
sbbl
mov
push
adc
xchg
mov
negl
scas
pop
adc
hlt
fmulp
sbb
arpl
int
and
jg
js
mov
inc
cmp
lock
add
mov
and
imul
jnp
mov
pop
mov
jne
in
scas
push
dec
lahf
or
adc
dec
popa
out
add
push
mov
in
out
test
jl
mov
mov
cmpl
outsl
repz
loope
pop
cli
in
or
mov
lods
insb
pushf
or
xchg
mov
adc
int3
cmp
icebp
mov
negl
adc
jp
pop
lea
fadd
fildl
push
sahf
mov
cli
and
insb
shll
push
pop
mov
pusha
pop
loope
xor
sub
sar
js
push
cmp
gs
mov
jle
mov
pushf
andb
push
mov
xor
imul
lcall
fsubrl
icebp
pop
imul
jmp
lods
sbb
notb
mov
scas
ficompl
sbb
pushf
mov
pop
lahf
movsl
out
pop
ret
and
ljmp
dec
add
mov
shlb
mov
and
xlat
jmp
fildll
out
add
orl
mov
inc
pop
shl
sub
mov
mov
lods
sub
mov
add
push
cmc
pusha
test
aad
sbb
out
push
xor
shll
aaa
push
mov
lret
adc
or
fwait
loop
adc
fs
cs
sub
mov
xchg
jne
call
or
or
sub
into
into
rolb
pop
mov
mov
mov
loop
nop
stos
lcall
pop
ljmp
mov
je
adc
mov
pop
or
xor
jecxz
mov
sub
pop
add
cmovnp
out
or
mov
insl
mov
filds
fwait
addr16
sbb
rclb
mov
std
push
push
pop
mov
repz
lock
outsl
lahf
push
xor
xor
cld
jmp
cwtl
dec
mov
cli
jne
adc
dec
or
idivl
lods
ret
lret
into
mov
and
mov
jbe
dec
ret
xchg
jno
add
pop
cmp
cli
add
scas
das
push
std
inc
test
pushw
cmp
mov
xchg
jmp
xor
xlat
cli
iret
or
decl
neg
in
mov
lret
jl
mov
pop
ss
push
xlat
out
je
lret
inc
into
xor
mov
outsb
call
arpl
and
les
lret
lret
adc
xchg
push
mov
cmpsb
and
inc
sbb
divb
adc
adc
dec
cmc
inc
push
and
std
mov
sbb
mov
mov
jo
daa
xchg
push
xor
cmp
cmpb
ret
sub
ds
testb
sub
mov
pop
sbb
testl
pop
xchg
test
negl
rcll
pop
aad
or
loopne
stos
test
mov
sarb
rorb
xchg
sbbb
ds
add
pop
mov
xlat
xchg
inc
les
subb
ljmp
pusha
pop
into
test
popa
and
out
aam
and
inc
jl
fdiv
or
in
and
aas
pop
xor
inc
xchg
addl
xchg
push
add
inc
out
mov
aaa
loopne
pushf
fdivrp
push
add
sub
orb
out
bound
lahf
jmp
xchg
push
fistl
xchg
mov
mov
mov
mov
aaa
cmp
or
mov
das
adc
xchg
mov
in
and
stos
lcall
into
dec
jl
scas
aam
sub
inc
add
dec
out
xor
in
iret
lea
xchg
sbbl
in
in
push
jp
das
mov
jae
rorb
sbb
in
mov
fnstsw
dec
ret
mov
ror
jmp
loopne
fistpl
call
xchg
mov
push
mov
lea
test
cli
jnp
add
pop
mov
jge
push
lret
sarb
jge
mov
xchg
xchg
cmp
push
cltd
push
sbb
mov
fistps
dec
sahf
orl
adc
out
mov
lret
xchg
adc
push
inc
xor
fldcw
inc
lods
mov
inc
pop
mov
jae
mov
cmp
sub
push
lods
fldenv
ret
hlt
add
xor
push
lds
fcoml
xchg
scas
push
and
testb
jmp
in
cmp
test
inc
fidivrl
rsm
xchg
pop
and
mov
and
inc
mov
mov
shrb
xlat
jmp
lret
std
int
and
cli
mov
push
jg
dec
cwtl
in
xchg
mov
js
mov
push
dec
xchg
pusha
testb
and
fwait
and
dec
in
mov
dec
gs
xor
mov
add
cwtl
or
sahf
hlt
jmp
shlb
sbb
cmp
test
in
pop
xchg
cs
repnz
or
xor
lods
scas
dec
aad
out
dec
cmp
push
sub
fsub
and
xchg
cmp
jns
stos
int
jmp
sar
xor
or
push
cmp
xor
pop
jp
fstp
adc
ja
popa
outsb
daa
sar
sahf
loopne
int3
mov
mov
and
jb
test
mov
aas
jae
pop
data16
xor
mov
ds
sbb
sub
adc
mov
je
aam
xchg
icebp
mov
lahf
out
or
sar
fwait
pop
enter
aaa
and
mov
cmp
fildl
fidivl
mov
xchg
icebp
dec
xchg
mov
popf
xor
push
adc
and
jb
cmp
stc
icebp
or
sbb
adc
pop
mov
sahf
xor
js
insl
xchg
push
inc
mov
mov
mov
push
adc
pop
mov
fnstcw
jg
mov
shrd
cmpsl
push
dec
pop
mul
or
xor
dec
lods
cwtl
nop
out
sbb
push
jns
xchg
fnstcw
pop
adc
or
dec
mov
xor
in
cmpsb
sbb
cmp
and
cltd
in
sbb
xchg
lcall
andb
lods
into
mov
out
insb
sahf
sbb
lahf
int
aas
imul
mov
jecxz
inc
test
push
dec
cwtl
and
xchg
sbb
pop
add
mov
pop
mov
in
iret
icebp
inc
cmp
dec
cs
imul
imul
or
dec
cld
mov
or
mov
and
cmp
inc
adcb
cld
jno
lock
inc
sbb
jge
in
push
stc
cmc
into
or
dec
pop
clc
xchg
lcall
dec
imul
test
out
movsl
mov
lahf
cmp
push
or
mov
xlat
mov
shl
xchg
jge
outsb
pop
fcoms
gs
lods
addb
mov
pop
sahf
hlt
xchg
inc
cmpsl
mov
test
pop
pop
test
in
sti
aaa
and
lea
icebp
mov
push
mov
and
out
jg
mov
rorl
cmpxchg
push
mov
aam
sub
xor
ljmp
ds
push
outsl
mov
icebp
jl
adc
movsl
pop
test
mov
xchg
nop
out
in
stos
inc
jns
lock
in
cld
in
pop
test
push
xchg
rolb
mov
mov
aad
xor
scas
repnz
out
cmp
lret
cmp
sbb
iret
mov
dec
sbb
les
mov
pop
cltd
jnp
push
and
ds
sbb
iret
cmc
add
mov
dec
pop
xor
pushw
pop
cli
dec
hlt
loope
insl
out
std
mov
loopne
xor
jb
inc
pop
sbb
mov
lods
push
push
sbb
push
std
stos
mov
jnp
pop
mov
fisttpll
outsl
jle
xchg
jne
dec
leave
sar
scas
cmp
pop
add
out
sub
adcw
jae
push
jno
cmc
lcall
ret
sub
cwtl
rorb
pop
ret
fcompl
fwait
mov
and
mov
insb
and
jl
imul
push
cmpb
dec
loop
shll
cmp
xchg
cld
cld
into
push
fisttpll
imul
lock
cmp
xorl
pop
int
enter
mov
xchg
movsb
adc
mov
addr16
into
iret
mov
rol
aad
das
cmp
les
jl
rorl
xor
test
fimuls
dec
js
mov
imul
cmc
or
push
xchg
ds
pop
aas
sub
dec
out
test
jge
dec
rcll
sbb
jecxz
pop
mov
les
repz
mov
pop
sahf
testb
sbb
cs
mov
sbb
push
fcmovu
imul
jg
repz
cwtl
inc
mov
mov
mov
jb
or
jge
movsb
es
mov
pop
mov
jnp
sub
ja
jp
or
dec
mov
std
mov
andb
push
fcmovb
jne
fnsaves
adc
pop
aam
cld
imul
xchg
dec
pushf
ja
sub
repz
xchg
mov
jnp
shrl
cmp
inc
rcrl
out
je
and
fnstcw
repnz
sub
xchg
dec
sub
jp
mov
push
and
pop
pop
bound
xchg
rcrl
leave
in
out
fstps
xchg
mov
sahf
mov
mov
ret
nop
sub
leave
or
int3
cmp
fs
nop
outsb
mov
mov
jecxz
cmpsb
mov
f2xm1
xor
cmc
inc
push
out
add
sbb
xchg
jne
or
or
cltd
in
fdivrs
divb
pop
mov
addr16
fsubr
add
adc
adc
mov
popa
mov
es
cmpb
adc
imul
sub
mov
adc
scas
cmpsb
pop
enter
pop
loop
jb
neg
pop
or
xchg
lock
xchg
sbb
js
inc
out
add
inc
xlat
les
lds
ficoml
pop
sub
int
clc
fisttpl
dec
sbbb
movmskps
fwait
mov
pushf
jbe
in
hlt
iret
enter
inc
imul
mov
hlt
fcom
loopne
leave
cmp
sarl
sub
out
stos
pop
cmp
outsb
in
mov
push
jmp
inc
lock
mov
scas
stos
fistl
cs
outsl
mov
push
imul
repz
jg
pop
sbb
pop
xor
lret
add
sbb
hlt
inc
mov
std
mov
xchg
pop
mov
lods
out
mov
outsb
ret
lahf
cmpsb
sbb
mov
mov
test
sub
mov
scas
inc
negw
scas
cltd
jmp
cmpsb
in
mov
push
lds
mov
xchg
and
push
aam
shld
push
test
jne
rcll
iret
mov
loope
push
bound
cmc
xor
push
xchg
js
mov
jmp
ret
aam
xchg
add
andb
xchg
fldcw
sbb
into
cmp
mov
dec
mov
dec
rcll
sahf
inc
pushf
xchg
pop
and
mov
cmpsl
addr16
jne
cmp
out
mov
call
cmpsl
dec
push
cmc
jmp
sbb
pop
loopne
stos
xor
adc
testb
push
pop
mov
cmpsl
xchg
jmp
xchg
in
daa
sbb
dec
mov
pop
mov
jg
jnp
jno
das
push
xor
negl
pop
add
sti
rolb
push
or
pop
ljmp
dec
shll
jl
inc
hlt
add
nop
aas
lret
push
inc
mov
push
pop
stos
rorb
add
jle
jns
flds
lods
xor
addr16
cs
lea
jb
movsl
pushf
push
jle
in
cld
fld
xor
rcrb
and
inc
loopne
cwtl
dec
sbb
jbe
clc
cwtl
jne
repnz
inc
push
aam
lods
mov
shlb
add
fs
push
clc
xlat
xorb
aam
cmp
adc
jge
popf
push
dec
loope
push
push
and
dec
xchg
and
cmp
xchg
aad
out
lds
jnp
in
enter
pop
jns
jae
mov
mov
iret
mov
adc
and
pop
sti
push
mov
shrb
or
daa
cmpb
xor
adc
icebp
outsl
or
xchg
loope
adcb
and
jo
jecxz
jb
call
cmp
adc
lcall
push
std
adcl
std
fnstcw
sti
mov
push
dec
shl
icebp
mov
aas
mov
pop
push
fisubrs
mov
mov
fadd
mov
cmpl
cltd
movsl
xchg
out
inc
mov
lret
adc
lea
subl
push
mov
add
push
xchg
cmpsb
or
mov
test
xor
dec
lret
test
lea
pop
xor
cltd
sahf
mov
mov
jmp
xor
imul
ret
out
mov
pop
jne
sub
test
mov
shrb
iret
sbb
xor
mov
xchg
push
iret
subl
bound
rcrb
lds
sti
push
dec
in
cmp
xor
jno
mov
pop
sahf
iret
xchg
jle
push
xor
cmpsb
cmp
out
loope
cltd
mov
aaa
and
push
fcmovne
int3
and
sbb
loopne
xor
imulb
sarb
xchg
jle
lods
gs
pop
lret
xchg
jnp
mov
xchg
negl
mov
loop
inc
fadd
loope
mov
lods
jp
popa
push
dec
cmp
sbb
das
jl
nop
ljmp
mov
jp
lods
imul
enter
inc
mov
dec
aas
and
and
xor
mov
jmp
scas
sti
dec
cmpsl
cs
loope
mov
sub
jo
in
mov
push
stos
in
cmp
push
arpl
sub
push
sbb
stos
lea
int3
jg
adc
mov
ficompl
insb
mov
ljmp
pop
push
test
push
enter
out
dec
fcom
lods
cwtl
sahf
out
fidivs
pop
mov
and
xchg
imul
or
fimull
adc
in
icebp
add
inc
cltd
adc
adcl
test
or
sbbl
into
lea
ret
out
ja
adc
insl
outsb
mov
out
repz
test
int
pop
lret
movsl
sub
jbe
mov
test
dec
ret
pusha
in
jp
dec
pop
ja
and
adc
andb
fiadds
sub
dec
aaa
out
mov
pop
in
ficompl
inc
pop
imul
inc
out
sti
fsub
and
dec
mov
aas
xchg
mov
test
add
outsl
jecxz
pop
push
je
fbld
in
call
das
sub
or
sbb
aaa
dec
push
sarb
jnp
aad
mov
sub
adc
ds
nop
jno
icebp
shrl
add
jle
arpl
add
into
mov
mov
sbb
insl
jmp
test
lock
adc
xor
inc
or
inc
sahf
push
mov
jne
notb
push
xchg
scas
inc
xchg
mov
imul
je
clc
or
xchg
movsl
movsb
jns
loope
xor
testb
js
out
and
lock
out
sub
xor
mov
xor
push
pop
rcrl
add
cmp
add
pop
jmp
cmp
or
addr16
dec
inc
jmp
adc
fwait
mov
fs
pop
icebp
loop
filds
cmp
rcl
push
dec
lret
and
mov
lret
shlb
loopne
pushw
mov
pop
jbe
jge
cmc
lret
jbe
adc
fadd
popa
lea
sti
shld
fstpt
in
cld
pop
mov
cmp
out
mov
mov
mov
mov
out
shrb
sub
in
push
stc
xchg
fcoml
std
sbb
and
aaa
jns,pt
mov
adc
and
jo
sti
test
xlat
xor
push
outsl
fstl
mov
and
cmp
jnp
nop
test
cmp
adc
dec
cmp
adc
int
lcall
add
and
inc
fildll
loop
or
jp
loop
cmp
cmpl
aam
in
and
dec
sbbl
mov
sti
xor
cltd
xor
and
jge
dec
cmp
outsb
add
adc
jne
pop
test
dec
ss
sar
jmp
jno
stc
xchg
mov
std
mov
mov
fwait
or
cltd
int3
ja
mov
stos
dec
pop
ss
add
fmul
sbb
jge
adc
sub
mov
ret
rcr
stc
idivl
push
sub
iret
mov
mov
mov
xor
fcoml
ret
adc
xchg
lods
clc
lods
mov
adc
push
jmp
jp
dec
pop
bts
mov
or
mov
test
jae
mov
mov
rcrb
xchg
mov
pop
bound
fcmovnb
rorb
je
push
lods
sub
outsb
sbb
cmpsl
xchg
mov
mov
pop
shlb
mov
and
xor
out
dec
std
mov
js
stos
jg
and
xor
and
js
or
aad
movsl
adc
leave
std
fistpll
adc
nop
adc
addr16
loopne
cli
pop
test
cld
lret
add
pop
pop
dec
shlb
stos
mov
push
imul
push
sarb
push
xor
sbb
mov
mov
sbb
xchg
pop
test
xchg
or
xchg
xor
fiaddl
sti
rorl
jnp
mov
and
xor
and
mov
cltd
inc
inc
mov
pop
push
add
fldl
mov
out
push
out
cmpsl
sub
sarb
mov
fldl
add
adc
hlt
jmp
rcr
cltd
arpl
jnp
clc
pop
fnstsw
bound
adc
sbbl
fisttps
aas
nop
xchg
incl
leave
dec
cld
lea
inc
adc
dec
adc
pop
xchg
jl
rolb
push
orb
xchg
mov
sahf
push
cmp
dec
sub
repnz
xchg
push
imul
add
in
lods
sub
jmp
jno
mov
rolb
add
call
sbb
inc
add
loop
lahf
pop
mov
dec
pop
out
pop
inc
loopne
push
cmp
test
xor
xchg
jbe
imul
xlat
jle
out
movsb
fstpt
sbb
pop
inc
push
sbb
mov
push
mov
pop
iret
inc
sbb
mov
lret
adc
jns
repnz
bound
mov
aaa
jo
testb
imul
xchg
into
cmp
push
cmp
pop
mov
cmpsl
jbe
in
sub
lds
das
in
add
in
and
adc
mov
ljmp
and
inc
out
fsub
stc
dec
fs
lods
ja
pusha
dec
xor
sub
adc
mov
insb
call
dec
sub
lcall
add
sar
jge
mov
pusha
and
mov
xchg
stc
dec
adcl
push
jg
sub
es
lret
dec
dec
mov
xchg
jecxz
les
push
iret
sub
jp
daa
int
add
lret
and
daa
adc
xchg
dec
enter
das
xorb
cltd
scas
push
hlt
and
push
mov
mov
jp
sbb
jnp
mov
jno
xor
iret
pop
jno
inc
pop
lahf
enter
xor
mov
xchg
mov
lret
mov
pop
addr16
cli
push
insl
dec
and
mov
sbb
nop
cmc
scas
pusha
sbb
and
stos
loopw
sub
incb
mov
jp
ret
rcr
mov
and
rcll
mov
into
and
jmp
sarb
pop
mov
mov
sub
addl
insb
inc
mov
mov
pop
fcoms
daa
cmp
rcll
adc
adc
jns
jg
xchg
jecxz
adc
adc
fadds
into
lret
repz
sub
fimuls
xchg
and
loop
out
push
out
sahf
inc
push
notl
inc
and
outsb
cmp
mov
icebp
adc
push
stos
test
lret
mov
sbb
mov
mov
shl
in
mov
int
or
jno
js
int3
in
mov
addr16
add
adc
push
jg
lcall
mov
inc
or
push
push
popf
push
pop
leave
xchg
stos
dec
fcoms
xchg
and
adc
out
je
or
inc
in
cmp
mov
cmp
cmp
js
sub
push
dec
dec
mov
push
cmp
pop
mov
cmpsl
pop
xor
dec
push
cmp
dec
outsb
popa
or
insl
inc
sti
sub
pusha
dec
xor
mov
vmptrld
enter
or
das
xchg
popf
aaa
xchg
iret
pop
mov
in
in
jp
orb
hlt
pop
lahf
xor
push
mov
test
xchg
xchg
push
mov
xchg
or
nop
fcompl
inc
jmp
pop
mov
pushf
mov
jp
add
scas
jne
pop
mov
sti
inc
and
inc
not
inc
lods
jno
dec
jae
mov
adc
fistl
sbb
mov
icebp
ljmp
pop
and
jle
aas
inc
xchg
lock
int3
lds
push
sbb
shll
jo
repz
pop
inc
add
call
jne
pop
xor
cmc
xlat
outsb
pushf
adc
addr16
loopne
dec
andl
in
fsubl
xor
stc
adc
loopne
mov
popa
cmpsb
mull
pop
push
jmp
stc
mov
inc
int
inc
in
mov
enter
jns
dec
pop
cmp
stos
sarl
outsl
xchg
jo
mov
in
in
xor
aam
sti
xchg
push
fcom
in
xlat
xchg
imul
dec
test
stos
pop
pop
jl
and
std
mov
loope
aaa
or
out
inc
push
and
cmp
cmc
jne
push
das
sbb
jmp
pop
imul
and
dec
add
ficomps
cltd
fisttpl
divb
xor
loop
ror
imul
call
fdivrl
lret
repz
sbb
stc
data16
pusha
fsubs
sarl
fsubrs
fildl
cmp
mov
adc
ds
js,pn
lods
push
add
ljmp
sti
mov
xor
or
popa
mov
or
mov
cltd
mov
push
lods
pop
push
data16
jge
push
in
fcmovbe
sbb
nop
sti
popf
jae
repnz
mov
orb
pushf
push
and
cwtl
mov
adc
or
jecxz
enter
add
inc
inc
pusha
dec
dec
roll
popf
add
pop
adc
add
aad
pop
inc
mov
bound
jp
ss
mov
subl
inc
fwait
xchg
ljmp
insb
ljmp
sub
push
aaa
pop
or
xorb
out
push
ss
mov
and
test
push
mov
int3
jecxz
jg
mov
inc
fwait
mov
xor
sbb
add
mov
push
and
dec
and
add
or
inc
sbb
or
les
cwtl
jbe
cmpsl
test
rcrl
sub
mov
add
stos
inc
out
pop
mov
and
add
jbe
pop
mov
stos
iret
sub
pop
xchg
sarl
cmpsl
ds
xchg
out
cmpl
pop
cs
pop
adc
and
stos
test
xchg
in
sbb
push
sahf
clc
out
mov
push
adc
sahf
int
lret
sub
lock
fstpl
in
sbb
jp
jp
sahf
ss
outsl
mov
add
shlb
sbb
cmp
sub
cmp
daa
xchg
aaa
mov
xchg
push
stos
dec
add
inc
sbb
xor
jp
out
dec
out
sub
mov
shll
add
fdivrl
mov
pop
outsl
pop
push
xlat
mov
lds
sbb
test
inc
pop
push
pop
in
mov
cwtl
sbb
dec
in
lea
jbe
add
loope
sub
out
lret
mov
jns
sub
fwait
es
pop
pop
xchg
pop
loopne
pop
adcl
pop
xor
daa
in
pop
testl
orb
mov
repz
hlt
adc
divl
jae
mov
pop
mov
imul
popa
lock
xchg
inc
out
pop
sahf
xchg
pushf
out
sub
mov
push
insb
lds
dec
jns
dec
jne
pop
xchg
push
data16
mov
insl
mov
dec
ljmp
pop
outsb
xchg
push
inc
or
mov
stos
adc
fstp
int
mov
mov
push
push
std
cs
inc
imul
xor
jne
jecxz,pt
mov
fiadds
xor
xor
jne
adc
dec
pop
ret
mov
xor
pop
std
pop
sbb
xchg
jge
and
cmp
data16
jge
iret
rclb
adc
mov
or
inc
jle
adc
pop
mov
popf
out
lock
negb
cltd
sub
mov
xchg
sub
ficomps
sub
xchg
xchg
data16
sti
jecxz
adc
jb
in
inc
jne
cmp
fcomps
loope
fst
pushf
inc
es
mov
lcall
adc
lods
ret
dec
pop
shll
test
push
outsb
add
lret
clc
movsl
insb
repz
or
cmp
inc
cs
sbb
sbb
push
and
pop
pop
icebp
lds
xlat
cmp
push
imul
push
mov
or
scas
sti
mov
scas
xchg
mov
popf
pop
and
cmp
jo
test
mov
pop
sbb
ret
pop
ret
andl
jp
hlt
loope
lods
cmc
adc
popa
add
out
mov
xor
pop
pop
pop
cld
and
out
xchg
mov
add
dec
or
sbb
ret
sub
push
rcll
add
cld
stc
das
repnz
jge
mov
sub
dec
pop
aaa
pushf
push
sbb
jg
pop
stos
pop
xchg
cmp
fistps
aaa
push
mov
repnz
push
xor
sbb
repz
and
cmp
pop
aas
out
push
sbb
inc
or
jp
andw
popf
lcall
dec
xor
and
or
dec
xor
ficompl
loop
cli
xor
jmp
test
pushf
or
dec
pop
and
or
and
mov
aaa
mov
les
cmp
jecxz
or
xchg
rcll
out
jnp
stos
mov
mov
out
movsb
xor
pop
sti
push
jg
outsb
or
push
xor
into
cmpsl
negb
push
mov
ss
mov
sub
lcall
mov
lds
gs
in
fsub
jmp
pop
cmp
fisubs
pop
movsl
ss
mov
push
repnz
shll
mov
jb
xlat
add
push
adc
testl
shr
add
stos
xchg
test
test
push
sub
sbb
divb
or
fistl
cmp
or
xchg
aaa
and
addr16
sbb
dec
add
mov
inc
fs
insb
and
mov
jno
push
jbe
mov
push
cmp
sub
ds
les
dec
ja
pop
out
xor
mov
inc
cmpsl
imul
aas
push
js
jg
fsubrl
ret
addl
sub
stc
test
or
adc
ret
adc
test
or
sarb
rorl
jae
jg
repz
sbb
push
lds
cwtl
jb
adc
mov
lods
and
not
mov
add
sbb
ss
fwait
jp
jb
stos
inc
jae
repz
add
sahf
lret
insl
leave
pusha
push
dec
clc
jns
ja
mov
icebp
movsl
xchg
nop
hlt
push
inc
in
xchg
pop
pop
gs
xor
sbb
adc
cmpsb
mov
das
std
clc
lock
jmp
fwait
add
pop
mov
jnp
xor
inc
addr16
ljmp
dec
repz
xchg
add
xor
and
push
imul
jo
test
push
das
sub
shlb
inc
jg
xor
pop
mov
int
xchg
or
pop
mov
out
lcall
shll
sub
test
add
ret
addb
cmp
pop
out
std
lahf
mov
push
popf
cltd
dec
push
xchg
shl
mov
shll
xchg
rcr
fistps
das
imul
ss
lcall
mov
inc
xchg
je
stc
pop
cli
dec
in
mulb
jnp
sbbl
jge
dec
sub
out
push
mov
ret
jmp
in
ljmp
xor
or
mov
fsubrl
pop
lods
mov
stos
movaps
int
push
insb
or
cmp
cmp
sbb
pop
psraw
mov
insb
or
testb
jns
mov
repz
clc
sbb
xchg
ret
jge
cld
stos
xlat
add
cli
stos
cmpps
sub
ret
cmc
jecxz
sbb
dec
push
repz
push
sub
mov
insl
shl
and
lods
mov
jbe
cmp
mov
cwtl
fistpl
sub
sub
aad
sbb
lods
push
addb
data16
jae
into
fistpll
ss
aad
cs
xchg
and
or
out
jmp
sti
cmp
push
mov
mov
inc
adc
repnz
cli
pop
and
out
pop
fidivl
jmp
mov
inc
mov
fsubr
test
dec
aad
out
and
scas
jl
cld
add
push
and
sbb
push
test
mov
mov
add
cs
out
leave
mov
xor
lods
lods
mov
fbld
iret
test
insb
out
mov
outsl
jns
jp
cmp
pop
mov
popa
mov
jmp
lahf
pminsw
mov
test
sub
nop
add
adc
or
xchg
sbb
pop
xor
xchg
jp
xchg
inc
pop
mov
or
cmc
xchg
not
lea
xor
pop
mov
or
push
xchg
arpl
mov
iret
ror
xchg
cli
stos
fsts
add
movsl
adc
das
rorl
pop
sarl
and
mov
xor
or
push
lock
jle
mov
adc
or
cmp
or
cltd
push
add
cli
rorb
add
mov
icebp
sub
cmp
xlat
inc
movsl
rcll
gs
dec
jg
shl
jbe
in
stos
and
ret
push
and
addl
pop
mov
fwait
xchg
inc
repnz
push
cmpsb
and
gs
mov
loop
daa
pop
cmp
gs
xor
or
or
mov
push
push
cmp
pop
ja
push
mov
stos
sbb
xchg
stc
in
movsb
cmp
add
movsl
lods
fmul
cli
and
mov
punpckldq
daa
std
aaa
imul
into
mov
jmp
inc
mov
xchg
or
fimull
jg
sub
fwait
jbe
daa
fsubrl
adc
lret
mov
loop
cmppd
lahf
mov
jg
ret
push
inc
icebp
dec
inc
cmc
push
enter
add
test
rorl
push
xor
cld
inc
imul
cwtl
ds
add
popa
pop
fisubs
repnz
out
sti
sub
arpl
repz
dec
rorb
lret
xor
lock
jecxz
jmp
test
ret
inc
sarb
loop
es
scas
push
mov
mov
jmp
mov
or
mov
and
sbb
jp
jne
lods
jno
or
decl
stos
mov
mov
imul
jp
mov
mov
add
and
enter
cwtl
xchg
ljmp
dec
inc
xor
cmp
and
rcll
pop
push
leave
ret
andl
push
or
test
cmp
out
or
ja
aam
xor
pop
pop
and
in
or
jnp
repnz
or
mov
and
jl
add
and
in
jne
push
in
pushf
dec
xor
xchg
xor
mov
push
cwtl
flds
cs
mov
jno
mov
sbb
inc
cli
iret
cmc
or
inc
mov
mov
gs
xor
lds
aad
stos
mov
outsl
inc
dec
sub
test
adc
mov
fstpt
insb
jnp
dec
push
jge
call
push
pop
pop
push
pushf
cmp
inc
or
shrb
fs
test
jp
in
mov
xlat
test
lds
inc
es
push
out
mov
insb
shlb
pushf
adc
mov
cmp
dec
adc
lds
call
psubusw
xchg
xor
dec
in
es
rolb
ja
sub
push
or
test
sahf
pop
sub
jle
or
jne
mov
push
and
sub
mov
push
jae
mov
arpl
adc
and
jno
in
sbb
cld
and
out
fwait
push
cmpsl
cs
fwait
jnp
daa
xor
sbb
loop
dec
out
clc
or
imul
test
inc
lret
xor
push
repz
and
push
mov
mov
cmpsb
je
push
ja
pop
dec
pop
cmpsl
das
loop
clc
dec
cli
xchg
enter
mov
sub
lret
call
xchg
loopne
daa
dec
mov
cmp
mov
push
lret
ss
cli
stos
addb
sti
xchg
pop
mov
repnz
xor
mov
pop
int
xchg
adc
sub
mov
mov
push
test
cmp
mov
dec
into
jno
mov
ret
cwtl
mov
mov
jl
aaa
shl
lea
inc
and
roll
xchg
or
mov
sahf
sub
jne
pop
mul
jb
pop
mov
leave
rclb
and
dec
pop
scas
loop
subb
es
inc
faddl
insb
dec
xchg
js
mov
sbb
incb
and
hlt
insl
fimull
and
dec
jmp
ljmp
xchg
lret
inc
cmp
loop
ss
shrl
daa
movsl
arpl
rcll
xchg
add
cwtl
ss
xchg
xor
pop
pop
adc
pop
adc
aaa
adc
adc
insl
hlt
pop
mov
xor
cld
push
jge
loope
sbb
xor
enter
in
dec
pop
mov
jb
jl
mov
imulb
ficomps
aas
cmp
out
iret
fstl
or
lret
cmp
in
fidivl
jmp
and
push
push
outsl
cmpsb
ljmp
pop
jne
xchg
mov
cmpsb
inc
mov
jg
ss
mov
pop
or
mov
pop
mov
rcrb
ss
push
cmp
sbb
hlt
jo
xor
dec
aam
pop
scas
and
xchg
popf
mov
aad
sub
shr
in
and
jp
ds
xchg
adc
call
xor
lret
push
and
jg
lods
xor
pop
insb
popa
jmp
or
std
mov
push
mov
xor
out
mov
and
addb
mov
dec
sub
sub
xchg
push
pop
dec
sti
xlat
mov
arpl
sbb
sub
fidivs
xorl
clc
rorb
sbbb
dec
inc
mov
mov
std
cmpsl
jmp
lods
pushf
push
lahf
shl
sbb
mov
js
mov
adc
arpl
sub
mov
ss
ljmp
lock
adcl
clc
xchg
sbb
cmpl
xchg
lea
sbb
adc
popf
imul
jecxz
into
out
ret
fwait
mov
and
cli
dec
inc
nop
in
mov
mov
adc
adc
adc
mov
ret
fimuls
bound
and
mov
loopne
sbb
cmc
and
cltd
and
lock
pop
mov
aas
mov
or
lret
aam
stc
nop
adc
and
test
or
xorb
xor
add
pop
mov
div
jge
aas
mov
clc
xor
add
push
adc
ror
sarb
mov
leave
mov
ss
movsl
pop
sahf
mov
xlat
ljmp
cmpsl
dec
ret
std
call
test
cli
dec
faddl
mov
cmp
or
mov
mov
adc
adc
cmpsl
call
or
hlt
jmp
aad
push
stos
out
cli
xchg
inc
sti
jae
test
pop
rcrl
clc
push
test
xchg
fdivs
xor
movsl
div
sbb
lahf
jno
outsb
dec
fdivs
sahf
push
fsubrl
add
fisubs
fcomp
sbb
mov
dec
pop
sahf
sarl
rolb
adc
mov
mov
daa
mov
cwtl
les
mov
xor
push
test
pop
and
roll
popa
pop
popa
divb
daa
int
in
mov
sbb
aad
mov
leave
jl
and
or
inc
push
jmp
shll
adc
sarl
adc
outsl
jmp
in
xor
loope
pop
lcall
aaa
arpl
popf
mov
ljmp
rcll
enter
inc
pop
aaa
popa
ljmp
add
xor
push
int3
sub
ljmp
add
or
lock
jo
sti
xor
jg
inc
sub
fucomi
adc
xchg
jnp
or
push
es
lret
mov
les
push
jmp
jnp
fcoml
ss
pop
adc
int
add
adc
inc
dec
clc
cmpsl
and
jo
mov
xor
push
push
push
int
push
imul
sti
sub
and
mov
push
popl
loop
aam
dec
push
stos
xchg
jns
rorl
mov
pop
add
sbb
push
sub
xchg
pusha
mov
mov
inc
add
aas
fisubrs
das
and
ss
mov
addr16
xchg
out
sub
jbe
test
stos
lcall
pushl
push
adc
enter
adc
lds
mov
add
sbb
pop
mov
jbe
cli
jl
fiadds
shrb
sbb
cmp
lret
gs
xchg
nop
ret
rol
sub
adc
addl
push
add
ret
or
cmp
loope
notl
inc
and
int3
or
test
leave
rclb
fcomip
out
pushf
inc
and
aam
int3
es
test
out
jns
outsb
hlt
je
loop
rcll
jns
adc
sbb
addl
mov
fnstsw
xor
pop
ss
ret
call
daa
add
jno
ds
call
inc
and
jbe
nop
mov
rcr
js
ss
ss
push
inc
dec
lret
adc
dec
sbb
ret
leave
sarl
inc
dec
test
and
xor
xchg
lock
scas
test
xchg
out
aam
and
cld
inc
and
int3
shrl
mov
jecxz
shrl
push
inc
sub
cmp
andl
ret
xchg
xchg
int
push
pop
pop
xor
jno
pop
xchg
jo
push
add
adc
pop
adc
adc
and
in
fldpi
sbb
stos
push
std
add
mov
adc
push
mov
adc
pop
mov
loope
pop
inc
aam
and
sub
dec
jp
insb
iret
das
jg
in
push
lds
aaa
jbe
or
test
pop
shll
inc
aaa
inc
mov
inc
sbb
loop
xor
sbb
cmp
xchg
das
aaa
push
ror
inc
jae
rorl
test
mov
fcomps
dec
call
cli
sub
imul
ljmp
xchg
cmc
adc
fsubrl
xor
adc
push
pushf
clc
cwtl
aad
lods
lods
jae
repnz
call
ja
xlat
lods
push
faddp
or
cmc
test
outsl
aad
inc
orb
and
imul
mov
outsl
add
adc
pop
loopne
pop
push
cs
mov
sub
mov
addr16
dec
push
frstor
int3
aad
les
jp
lret
out
mov
test
jmp
jl
xchg
mov
cmp
notl
loopne
inc
pop
iret
fisubrs
add
cltd
sub
xlat
into
js
push
pop
sarb
jnp
sub
je
cwtl
dec
jg
cmp
cmp
fimuls
fistpl
xor
insl
std
mov
test
movsb
jno
cmp
push
popa
push
stos
cli
ret
leave
pop
and
out
sub
das
sti
int3
je
inc
loop
lahf
cmp
sub
out
adc
and
lods
jecxz
mov
dec
dec
enter
mov
push
aad
pop
jo
or
scas
and
and
aaa
stos
test
dec
icebp
int3
cmp
inc
pusha
clc
sub
cmp
jbe
test
out
inc
inc
insb
mov
sub
jne
mov
outsb
icebp
int3
pop
mov
loop
mov
push
mov
adc
mov
nop
jne
pop
aaa
dec
js
lcall
inc
pop
xchg
dec
mov
push
sahf
or
stos
je
movsb
jae
jle
ja
fs
in
outsl
push
icebp
push
lods
mov
loop
mov
mov
jmp
mov
fdivrl
inc
out
jp
and
mov
and
adc
lods
or
loope
pop
pop
je,pn
movsl
dec
int3
test
daa
popl
push
rcl
or
adc
jmp
imul
dec
cltd
shll
and
push
int3
outsb
ss
pop
int
or
orb
movsl
or
sti
cmc
mov
mov
mov
adc
loope
mov
cmc
pop
add
test
cli
mov
cmpl
roll
jg
shll
sub
in
xor
mov
gs
mov
loop
pusha
adc
loopne
adc
push
mov
imul
adc
mov
jbe
cpuid
pop
rcl
push
aad
ficomps
cmpsl
cmpl
test
push
lods
call
cmpsl
mov
mov
je
inc
inc
insb
popa
mov
sbb
sub
mov
xor
xchg
test
or
or
push
aad
sbb
add
xlat
or
xor
mov
lret
adc
bound
xor
push
and
jg
into
xor
lahf
out
inc
dec
dec
push
movsl
les
push
lret
mov
into
push
pop
ja
or
cmp
in
stos
xor
mov
ss
adc
inc
and
jo
xchg
stos
dec
or
mov
insb
loop
add
push
icebp
cmc
das
mov
jne
or
mov
mov
sub
fdivs
push
in
hlt
cmp
faddl
jne
pop
idiv
jmp
movsl
int3
cmp
bnd
xchg
fistl
icebp
dec
adc
or
or
pop
dec
in
xchg
fwait
lcall
push
fnsave
out
lods
adc
insb
adc
sub
pop
sbb
add
adc
dec
in
fs
mov
fldcw
test
loop
dec
std
rclb
mov
push
dec
loope
push
std
sub
mov
imul
movsb
dec
sub
stos
xchg
dec
push
mov
lahf
testl
cld
jno
jnp
mov
pop
popa
xchg
sahf
sbb
push
mov
pop
fildl
sub
pusha
add
bound
test
push
popf
push
adcb
scas
xor
icebp
pusha
add
xchg
and
clc
insb
lcall
lods
cld
les
das
mov
cmp
aad
sbb
test
stos
mov
cltd
neg
in
mov
mov
mov
pop
es
std
adc
js
pop
jns
push
sbb
pop
dec
ljmp
pop
ficoms
xor
in
push
sub
cmp
lds
adc
pop
scas
dec
mov
stos
into
and
rorl
ret
push
enter
test
cmp
mov
repz
adc
push
dec
sar
push
shrb
js
add
push
adc
dec
pop
repz
pop
shl
andl
or
jecxz
sbb
or
pop
dec
stos
jg
nop
xorl
inc
movsb
rolb
test
mov
test
adc
mov
add
int
cmc
dec
pop
pop
fisttps
in
mov
psubb
iret
sbb
int
lea
cmp
ja
xor
arpl
clc
push
cli
lock
ss
push
jo
mov
aam
out
cwtl
mov
ret
ss
push
jg
xchg
imul
aad
sar
mull
shlb
stos
push
xchg
mov
sub
outsb
test
sbb
lret
xchg
jb
sbb
icebp
lret
outsb
cmp
pop
push
xchg
mov
inc
jecxz
inc
lret
arpl
out
pop
push
test
xchg
dec
rorb
aaa
jl
inc
jp
or
popa
ja
jg
stos
out
repz
out
xor
lahf
int3
xchg
clc
sarl
in
xchg
cmp
sar
pop
cmp
in
cli
jmp
mov
jg
xor
xchg
adcb
in
pop
jp
cmp
rolb
xor
xchg
inc
or
ret
jnp
cmpl
jmp
shll
xchg
insl
mov
addl
jno
fadd
das
mov
ljmp
xchg
add
subl
sbb
jns
je
xor
addb
mov
xlat
pusha
jns
fisttpll
inc
push
push
stos
mov
call
lret
daa
aad
stc
psrlw
ja
bswap
test
xor
xor
jg
jmp
dec
mov
xorl
movaps
fdiv
dec
mov
sub
jno
andl
in
adc
iret
call
mov
sub
leave
xor
mov
addr16
pop
jmp
push
push
bound
js
mov
es
clc
psubusw
xchg
movsb
imul
inc
sbb
push
mov
jecxz
dec
cmp
and
inc
and
xchg
into
jp
adc
mov
dec
outsb
inc
push
jae
adc
stos
data16
addl
sub
jecxz
xchg
insb
sub
dec
xchg
and
outsl
gs
stos
push
dec
mov
jmp
std
loopne
das
loop
mov
mov
push
xor
leave
in
add
and
ds
cwtl
dec
fstpl
fcmovbe
and
mov
xor
shlb
imul
mov
dec
pop
fisubs
sub
lods
jnp
data16
push
movsb
dec
push
mov
adc
xchg
adc
jmp
adc
add
leave
inc
test
leave
int
xchg
pusha
ljmp
dec
daa
jae
cmpsb
push
les
stos
movsl
mov
repnz
push
lods
orb
cmpsl
jge
and
push
push
mov
andb
and
ret
dec
movsb
gs
inc
sbb
pop
inc
cmpsb
xchg
sub
dec
out
sbb
or
sub
scas
je
movsl
leave
fadds
lods
jmp
adc
repnz
roll
lock
addr16
and
xchg
jg
mov
or
or
fldl
push
push
pop
adc
mov
mov
pop
cmp
inc
xchg
xor
xlat
push
cmpsb
inc
sbb
cltd
dec
dec
cmc
add
add
shl
add
out
inc
call
pop
mov
sbb
sbb
mov
stos
jno
mov
and
testl
xchg
lods
mov
pop
pop
in
rcrl
mov
subb
loopne
push
and
fs
pop
gs
adc
inc
fstpt
ficompl
fildl
jp
mov
ljmp
xchg
sahf
add
pop
push
stos
push
test
aad
dec
fcmovnb
jmp
or
cmpsb
in
mov
gs
jbe
xchg
and
jbe
pop
push
nop
repnz
gs
loopne
push
imul
pop
push
push
jg
jmp
cltd
test
dec
lcall
insb
pop
push
stc
xchg
inc
cwtl
inc
clc
cmpsb
add
inc
xchg
iret
mov
mov
lock
ljmp
jbe
int3
frstor
out
addr16
mov
addr16
cltd
dec
ret
gs
leave
add
insl
xor
sbb
ljmp
mov
andl
fmulp
push
mov
sub
lds
std
pop
pop
imul
jne
lahf
outsl
or
gs
ds
imul
sub
data16
xor
leave
call
dec
data16
cmp
cmp
pop
cld
push
addr16
or
xor
mov
lods
xor
fs
mov
jmp
iret
cmp
cld
jmp
sbbl
movsb
mov
xor
cmpsb
scas
xchg
insl
push
imul
daa
out
or
dec
push
pop
repz
and
ds
mov
sub
jo
nop
add
shlb
cmp
add
lds
enter
mov
add
pop
fcoms
sbb
push
test
inc
mov
fs
in
sahf
xor
rcl
hlt
repz
arpl
xchg
mov
xor
lods
jp
pop
push
in
cli
daa
in
xlat
dec
or
mov
popf
jle
imul
sbb
pop
mov
ret
rclb
out
mov
xchg
add
pop
cltd
sarb
and
imul
push
or
adc
cmp
lds
push
testb
fldt
outsl
sbb
mulb
inc
subl
int3
mov
xor
sbb
sub
repnz
std
pop
sub
sub
jbe
loope
or
and
gs
sbb
cmp
cli
inc
stos
loopne
push
loopne
dec
loope
daa
arpl
mov
test
cmp
inc
jo
cmp
adc
dec
jl
inc
pop
pop
daa
mov
and
cmp
icebp
cmp
adc
outsl
cmpsb
sub
repz
adc
sbb
inc
insl
ret
xlat
or
lea
mov
fs
inc
push
pop
sbb
mov
test
cwtl
inc
mov
pop
int
adc
pop
cmpsb
dec
mov
out
lods
les
into
inc
dec
push
pop
or
fsubrl
movsb
jge
mov
outsl
mov
xor
sub
in
push
vshufps
mov
mov
shrb
mov
sub
ja
bound
push
add
pushl
imul
push
mov
add
cmp
call
lock
and
cmpsl
sti
jno
hlt
and
pop
fstl
out
xlat
lret
divl
push
rol
stc
cld
in
stc
pop
bound
cmp
pop
pop
test
jb
push
jmp
jae
rcrl
fbstp
pop
dec
dec
cmpsb
ds
int
jl
in
adc
or
pop
dec
ss
mov
add
fnstenv
sbb
movsl
lcall
dec
adc
adc
aam
cmp
cmpsl
aam
cmp
push
or
adc
jae
sub
lds
ret
frstor
adc
test
cmc
cltd
add
notb
cmp
mov
popa
movsb
pop
popa
fisttpl
adc
jp
fcompl
xchg
fwait
push
cli
fistpll
mov
shlb
xor
je
mov
lret
pop
adcl
out
scas
cmp
push
lods
aam
test
les
jnp
aaa
mov
ss
cwtl
cwtl
mov
jmp
nop
stos
jae
pop
ret
cltd
jle
cmpsb
pop
call
inc
ja
xchg
mov
aas
or
notb
mov
ret
hlt
xor
outsb
aam
hlt
into
into
add
ficoms
adc
inc
adc
dec
push
movsb
jge
das
and
push
pop
add
jno
fcompl
cmovb
mov
imul
push
mov
enter
test
push
sub
stos
pop
mov
ret
dec
sbb
push
dec
xchg
inc
adc
hlt
pop
xchg
loopne
lods
cwtl
inc
inc
push
xchg
test
mov
xor
cld
or
jp
pop
push
mov
adc
mov
mov
icebp
movsb
dec
and
cmp
aam
in
push
popf
sub
and
pop
add
push
cwtl
and
xor
das
dec
xchg
xchg
lret
add
push
xor
ss
xchg
ja
std
dec
lcall
add
test
adc
jae
mov
adc
int
cmp
testb
or
add
sub
xor
lods
pop
lcall
pushf
faddl
add
or
out
loope
ret
ss
push
jl
mov
inc
jb
dec
push
lds
xchg
lds
ret
xchg
test
fcoml
notb
mov
sbb
out
lock
in
test
rcrb
mov
mov
outsl
pusha
mov
xchg
cmpsb
nop
inc
outsb
lock
cwtl
or
test
mov
lcall
lds
rcrl
sti
notl
cmp
mov
stos
dec
mov
divl
shlb
pop
movsl
test
cmp
push
cmp
cmp
xchg
xor
repnz
scas
loopne
xor
jne
jle
pop
inc
arpl
add
cwtl
mov
adc
dec
imul
dec
pop
fwait
or
add
push
cmp
sbb
push
hlt
sbb
mov
or
pop
xor
cli
cmpsl
addr16
xchg
dec
int
mov
je
mov
mov
aas
pop
cmp
add
or
jecxz
pop
push
or
popa
ljmp
aam
les
cmp
mov
cld
int3
dec
cld
pop
cmc
inc
xor
cmpsl
test
jg
negl
jo
push
push
fbstp
and
scas
push
push
bnd
lea
sti
std
lds
jo
rorl
cmp
add
call
jb
cmpsb
mov
or
sub
adc
in
dec
sbb
dec
xor
scas
bound
test
push
out
inc
in
cmp
fadds
jne
jb
cmp
mov
lcall
paddsb
mov
pop
jle
or
or
cmp
mov
stos
push
jo
push
push
pop
push
xchg
add
add
sub
add
fdivrs
pop
loopne
or
sbb
clc
mov
ret
mov
mov
add
popf
and
je
add
push
das
xchg
add
mov
and
pusha
adc
mov
push
jo
jmp
cmp
fwait
je
mov
fisubl
add
outsb
inc
pop
mov
jae
flds
icebp
add
sbb
aas
call
xor
cwtl
outsb
pop
adc
loope
int3
adc
inc
and
pop
pmullw
mov
daa
push
imul
cmpsl
clc
adc
mov
adc
and
imul
movsl
or
add
addl
cmp
stos
es
push
in
and
mov
enter
mov
jp
lret
repnz
mov
dec
add
or
loopne
rolb
add
test
call
and
adc
or
pop
and
shlb
dec
push
in
mov
inc
sub
mov
dec
mov
js
xor
clc
scas
mov
mov
sub
ret
sbbl
dec
pop
in
fisttpll
mov
xlat
add
sbb
or
sbb
and
outsl
xchg
jo
and
sti
arpl
inc
inc
and
add
loope
jbe
enter
ljmp
dec
lods
loope
jns
mov
inc
aad
xchg
fmull
jb
xchg
aad
outsl
mov
aad
or
jmp
aam
fildll
dec
xchg
jle
jmp
sti
push
mov
dec
push
fiadds
inc
rclb
movsl
sti
add
cmp
lods
sbb
mov
pop
test
xchg
pop
dec
push
pop
leave
sahf
xor
cld
insl
ja
jge
jns
out
orb
out
pop
lock
jg
outsl
mov
lret
pop
and
pop
jl
mov
cmpsb
xor
es
loopne
ljmp
cli
jmp
mov
push
dec
bound
outsb
xchg
outsl
mov
ss
aad
mull
xchg
cmp
pop
imull
movsb
adc
ljmp
mov
fwait
dec
jns
dec
xor
jl
and
and
push
int
pop
mull
int3
insb
jnp
iret
inc
pop
mov
dec
cmp
xchg
movsl
push
testl
or
aad
cmp
dec
rorb
aaa
pop
push
in
fldl
test
push
push
ja
fcomip
xor
sub
sbb
dec
mov
jl
fbld
sahf
cld
mov
ss
sbb
pusha
cmp
pop
enter
cs
mov
cmp
outsb
call
dec
cs
jl
das
cmp
fsubrl
sbb
fdivs
in
or
push
mov
xor
stc
scas
lret
or
mov
fnstsw
arpl
jge
orl
scas
lahf
ret
addl
jg
add
scas
aas
std
xchg
or
push
push
scas
pop
mov
outsb
rep
push
sbb
ljmp
xchg
aas
pop
hlt
add
inc
fadd
add
jnp
pop
sub
loopne
insl
into
fxch
inc
and
mov
arpl
mov
mov
xchg
jb
mov
xor
mov
addr16
daa
mov
mov
pop
pop
cmp
mov
xchg
and
mov
push
fisubl
pushf
in
xor
mov
sbb
mov
mov
and
out
add
pop
xchg
ret
es
and
jg
inc
in
pop
jg
mov
mov
imul
push
push
fwait
movsb
adc
sub
mov
adc
dec
scas
mov
cmpsl
repz
jns
inc
mov
xor
or
pop
hlt
pop
imul
cs
dec
mov
lds
sti
sahf
xor
scas
sbb
cs
clc
aad
int3
add
aaa
jo
mov
test
push
pop
pop
pop
out
scas
mov
loopne
negl
cli
sub
ret
jne
jo
fimuls
in
mov
sbb
outsb
stos
pop
ljmp
out
add
fmull
xchg
sahf
dec
sub
push
stos
pop
aam
jnp
xchg
adcb
jmp
into
and
loop
popa
icebp
es
xchg
pop
fs
jnp
sub
arpl
fwait
sub
fcmovb
xchg
ja
sbb
in
add
mov
rcll
lods
hlt
fadds
add
xchg
push
sub
mov
in
ja
scas
and
test
pop
pop
das
dec
int
mov
pop
xlat
sbb
push
out
jns
jo
sti
mov
cmp
je
out
mov
jno
cs
popf
aam
adc
adcl
repz
sti
outsl
sub
pop
loopne
lods
imul
int
add
push
pushw
jae
icebp
push
ss
cmc
add
mov
mov
xor
push
aad
outsl
cmp
lods
sarb
rorb
jno
pop
inc
imulb
pushf
jle
cmc
fwait
mov
adc
repz
dec
mov
jmp
sbb
ffreep
mov
pop
iret
gs
push
add
mov
sub
lahf
mov
sub
in
add
mov
loop
inc
sub
shl
lret
aam
out
jb
pop
mul
jns
mov
mov
pop
mov
nop
negb
repnz
repz
mov
test
jb
push
stos
test
inc
mov
xor
inc
test
sahf
jb
popf
popl
add
pop
mov
and
out
push
inc
outsl
xor
int3
mov
cmp
push
sub
inc
adc
ficoml
addr16
or
adc
sub
push
outsb
pop
xchg
ret
add
inc
cs
ret
and
sbb
fildll
insb
imulb
rep
xchg
and
insl
push
xor
lods
fistpll
rcrl
orl
scas
mov
lret
test
pushf
mov
icebp
mov
fisttpl
jl
mov
iret
push
push
into
int3
mov
scas
fs
inc
incb
mov
adc
xor
xlat
sbb
xor
push
stc
dec
data16
pop
insl
and
mov
rol
cltd
cwtl
popf
call
outsb
jle
mov
ror
inc
mov
call
inc
fadds
inc
out
mov
aad
pop
cmp
sbb
inc
pop
testl
fucomi
inc
jl
fwait
xor
gs
mov
xor
jnp
out
add
cmp
lock
lea
cmp
mov
or
mov
xchg
jo
and
out
xlat
lcall
add
imul
jnp
xchg
sbb
es
inc
cs
jecxz
adc
cmp
add
std
cmpsb
jle
push
mov
fsubrp
or
mov
test
std
fs
xor
dec
push
fidivrl
clc
rorb
and
cmp
mov
pop
das
sub
xchg
aas
mov
test
sti
xchg
lea
rorb
or
loop
mov
add
dec
mov
enter
pop
xchg
in
fdivrs
pop
inc
enter
lods
mov
sub
pop
xor
ss
or
bound
frstor
pop
push
cmp
hlt
lock
out
loopne
jp
xchg
out
aas
add
mov
lods
ss
xchg
aam
fs
and
test
dec
fs
cltd
add
push
or
jg
sub
pop
push
fmulp
mov
inc
shll
loop
add
ljmp
and
mov
sub
sbb
xchg
gs
adc
sbb
push
cmp
pop
pop
or
add
sbb
fmull
mov
dec
test
vmwrite
pushf
outsb
lds
xor
xchg
stos
inc
jg
push
dec
add
pop
xor
fnsave
mov
popf
adc
pop
sarb
fwait
out
call
inc
sarl
cwtl
ljmp
jmp
pushf
mov
sbb
int
out
rcl
mov
or
sbb
pop
inc
lahf
mov
mov
ljmp
push
test
dec
test
adc
stc
push
sarl
xchg
add
cmp
dec
xor
dec
add
sbb
or
mov
mov
aaa
mov
jb
aad
mov
cmp
mov
rcl
ret
outsl
jge
fwait
mov
ficomps
mov
les
aam
mov
jnp
in
push
ss
xchg
inc
lods
xchg
cmp
or
lret
ja
lds
sub
mov
inc
jnp,pn
das
scas
cmp
ds
movl
xor
adc
mov
mov
adc
roll
jl
int3
mov
pop
cmp
test
adc
pop
daa
popa
jb
test
add
sarl
dec
dec
inc
ds
dec
mov
pop
outsl
mov
pop
out
lret
adc
vpaddb
sti
std
repz
push
pop
ds
roll
jl
stc
sbb
push
aas
enter
cwtl
jge
xor
cmp
aaa
and
add
mov
rorl
xchg
lcall
mov
iret
lret
sti
lods
ss
ret
lahf
imul
sbb
inc
lcall
incl
je
dec
sbb
fldt
cmpsl
xor
loopne
push
in
jp
ret
out
inc
mov
cmp
int
and
jno
outsb
out
pop
and
dec
dec
mov
xor
not
lret
adc
inc
int
inc
nop
cmp
pop
mov
loope
out
lods
mov
testb
sbb
mov
ret
xorb
das
adc
das
rolb
icebp
jne
mov
cmpl
outsb
notb
xchg
xor
adc
sub
mov
lds
mov
std
xlat
cltd
outsl
leave
loope
cmpsb
fildl
mov
mull
mov
jo
cmpb
test
lock
imulb
jbe
push
pop
sub
dec
mov
stos
cmc
hlt
mov
adcl
mov
les
clc
in
mov
test
push
cmp
xchg
xchg
jns
jl
dec
cmp
inc
ss
insl
leave
mov
mov
sub
pusha
pop
push
sub
jae
jne
mov
inc
fcmove
dec
push
xor
dec
mov
pop
xor
mov
jnp
jne
pop
xor
mov
js
xor
add
xor
cltd
pop
pop
jne
xchg
pop
aaa
lock
loope
adc
xlat
popa
push
or
mov
mov
inc
adc
cmp
jbe
sti
aas
mov
and
add
dec
adc
push
pop
subl
divl
sub
cltd
jge
xchg
dec
dec
dec
sub
adc
and
stos
fldlg2
xchg
mov
loopne
cmpsl
or
aaa
fwait
and
add
scas
mov
jnp
clc
pop
xchg
sbb
int3
mov
rcll
aam
cs
dec
shrl
add
es
dec
data16
xchg
into
repnz
mov
mov
das
pop
js
incb
xchg
movsl
inc
or
sbbl
addr16
mov
jns
jae
adc
adc
mov
dec
fcoms
clc
xchg
ret
mov
xor
shrb
mov
in
lret
mov
inc
ret
cli
cli
or
xchg
push
call
add
loopne
dec
lock
call
cmp
scas
ljmp
test
add
enter
inc
push
sub
popa
in
into
add
xlat
pop
lods
pop
inc
stos
push
dec
push
add
dec
jmp
mov
sbb
mov
dec
lahf
lret
sub
mov
mov
mov
xchg
pop
dec
pop
and
fcompl
sub
push
aam
inc
divl
add
mov
mov
pop
jg
mov
lret
imul
inc
dec
mov
out
sub
repz
psllw
ljmp
dec
shr
sub
rcrl
adc
test
stc
fbld
pop
add
mov
pushf
in
mov
adc
dec
loop
in
jmp
sub
adc
fwait
mov
scas
stc
repz
ss
call
in
or
pop
pop
or
xor
or
sbb
dec
popf
out
dec
out
jno
fbld
mov
mulb
lret
inc
jne
icebp
mov
pop
jns
lods
es
or
pop
movsl
mov
cmp
lds
shrb
loope
aas
dec
jmp
fisubs
fildll
or
rorb
ret
push
mov
ja
aad
out
dec
out
mov
dec
mov
adc
mov
pop
dec
pop
pop
inc
mov
in
adc
mov
insb
dec
sbb
xor
fisubrl
movsl
jp
out
fimuls
ret
mov
add
add
nop
sub
addr16
adc
test
in
adcb
enter
or
mov
fsubs
dec
movsb
cmp
outsb
pop
sti
adc
mov
push
jne
push
xchg
scas
fdivrl
mov
jns
and
out
mov
pushf
cli
mov
mov
arpl
push
xor
and
rcrb
in
out
push
std
mov
lret
adc
sbb
fwait
dec
and
outsb
or
pop
fwait
add
push
adc
push
push
test
jo
push
add
mov
xchg
mov
sahf
icebp
movsb
mov
mov
cmp
sub
aad
xchg
lock
and
pop
xchg
popa
aam
add
cs
shll
sbb
loope
xorl
xchg
xchg
test
test
mov
cmp
inc
bound
dec
mov
sbb
and
add
lock
mov
sbb
sub
fistl
pop
repz
adc
cltd
daa
iret
add
sbb
jmp
clc
pop
dec
push
xor
out
fcmove
push
movsb
fldenv
std
adc
test
jb
dec
dec
mov
sub
lret
nop
cwtl
inc
xor
and
pop
nop
xchg
mov
out
out
xchg
xchg
into
in
arpl
nop
cltd
jmp
cmpsb
inc
repnz
dec
inc
les
test
test
jecxz
and
insb
sub
aam
subl
insl
ds
mov
jl
iret
mov
pop
mov
inc
fcoml
jno
fildll
stos
dec
or
int
sbb
cmpl
popf
cwtl
mov
loope
cmp
mov
mov
dec
hlt
fcmove
int3
mov
push
ret
lds
in
stos
lock
sbb
test
mov
xchg
add
stc
adc
dec
stos
inc
push
stos
aaa
ja
mov
int3
inc
ret
sub
lods
adc
jmp
aas
mov
push
or
adc
xchg
pop
sbb
jnp
and
sub
notl
movsb
mov
xchg
and
xchg
fs
jecxz
cmp
adc
std
arpl
lret
scas
popa
jl
and
movsbl
outsb
lods
or
dec
loopne
xchg
xchg
sbb
pushf
jbe
adc
sbb
insl
or
adc
int3
into
mov
pop
mov
test
arpl
sbb
push
sbb
inc
adc
or
xchg
mov
add
dec
xor
sub
mov
aaa
out
add
cmpsl
outsb
icebp
pusha
mov
stc
subb
into
pop
xor
inc
lds
sarb
dec
sbb
xchg
and
dec
pusha
sub
pavgb
cmc
lods
nop
ret
pop
or
insl
xchg
add
add
mov
mov
loop
jg
insl
aas
cs
cmc
or
pop
imul
push
imul
xor
cmp
cs
dec
out
mov
pop
push
lods
cli
call
outsb
fadds
mov
out
or
xchg
les
mov
out
pop
ds
daa
mov
push
out
ljmp
frstor
fsubl
push
pushf
ds
scas
xchg
pop
sub
xor
mov
or
jns
xchg
mov
movsl
pop
xchg
scas
lret
cmpsb
sub
call
or
push
add
sub
or
cmp
rcrb
or
lret
adc
cltd
repz
loopne
or
mov
lahf
sarl
lods
rcrw
and
sbb
icebp
and
out
rclb
push
push
adc
cmp
push
das
data16
xchg
push
jne
repnz
mov
fwait
mov
push
fidivrl
or
cld
fs
les
xor
adc
sub
out
fisubl
push
push
testb
loope
sbb
std
mov
mov
xchg
pop
fadds
stos
inc
mov
lahf
xor
in
xor
int3
xor
mov
mov
cmp
sarb
gs
pop
mov
enter
dec
or
sbb
stos
loopne
jmp
fimull
mov
add
mov
push
repz
leave
jo
sub
jmp
sbb
daa
mov
addl
dec
daa
cs
mov
sbb
and
hlt
sarb
in
add
insb
mov
sti
das
ret
bswap
pop
movsl
sahf
xor
pop
jno
das
inc
add
rorl
js
sub
and
xor
je
xor
or
fwait
add
xor
adc
mov
in
cmp
jb
shlb
push
dec
mov
pop
int
jno
dec
aas
scas
cld
sti
addr16
push
ret
cmp
popf
ljmp
xchg
xchg
add
ljmp
sahf
neg
inc
cs
out
clc
add
in
scas
aam
fldl2t
lock
fcompl
add
xchg
test
and
fisubrs
pop
aas
push
jmp
inc
sub
sbbb
push
ja
aas
jae
or
push
and
mov
les
mov
dec
enter
add
push
push
mov
insb
dec
in
loopne
mov
or
push
sub
jmp
notl
pusha
xchg
repnz
lahf
pop
enter
jecxz
ss
mov
test
xor
cmp
test
sbb
leave
jg
xchg
mov
lahf
push
jns
mov
mov
in
cli
cs
or
pop
pop
lods
pop
pop
mov
imul
inc
and
lahf
hlt
sub
sbb
out
test
js
pop
dec
sub
je
xchg
aaa
mov
popf
xor
mov
sub
pop
inc
mov
sti
or
jecxz
and
movsb
or
sbb
mov
int
scas
add
mov
or
sbb
push
loopne
push
inc
cli
daa
out
mov
pop
xchg
or
loopne
icebp
sahf
dec
cmp
movsb
inc
leave
movl
or
mov
xchg
iret
or
pop
call
fldt
jmp
rcl
std
xchg
movsl
push
pushf
push
jmp
ljmp
and
cmpsb
adc
ficoml
fisttpll
mov
les
adc
aad
push
shll
pop
dec
pop
or
sub
ja
dec
outsb
pop
loope
aad
mov
mov
sub
sub
jne
cmc
movsb
jl
shrb
dec
jmp
shrb
outsb
out
out
mov
push
mov
jl
push
loopne
adc
mov
inc
push
sbb
push
and
fwait
or
leave
xchg
and
push
mov
adc
arpl
addl
dec
sub
and
jne
js
movsl
out
pop
in
imul
outsb
push
and
jae
clc
adc
fimuls
jmp
test
mov
ja
jb
mov
or
sbb
push
rcrb
xchg
shlb
aas
in
push
xchg
xchg
shll
or
xchg
addr16
mov
movsl
cmpsb
cmp
xchg
add
sbb
addps
pushf
mov
popa
scas
add
fwait
mov
push
orps
push
lahf
adc
movsb
sbb
inc
scas
pop
lahf
int
push
pop
popf
das
xor
lret
cltd
push
lds
dec
fwait
mov
sbb
xlat
inc
in
clc
and
and
aad
jb
jg
mov
fmull
dec
cs
frndint
xchg
pop
sbb
jne
rorb
mov
mov
lahf
enter
cmpsl
jg
push
mov
pop
sti
hlt
pop
sbb
sub
mov
xlat
jl
pop
pop
stos
mov
scas
cmpsb
std
dec
lods
mov
xor
lock
adc
cwtl
fsubs
imul
or
mov
inc
inc
pop
add
cld
inc
dec
std
es
jge
fmulp
push
je
int
jp
mov
adc
icebp
aam
sbb
add
in
int
fidivrs
xor
or
es
lret
and
cmpsb
out
xchg
aad
add
test
xchg
push
mov
int
popa
mov
pusha
xchg
cmp
xor
out
rcll
loope
inc
mov
mov
cmp
into
lods
cmp
mov
pushf
fldt
shrb
mov
ret
in
xchg
inc
inc
mov
push
ret
pop
xchg
out
lret
movsl
fucomip
xchg
and
inc
mov
and
mov
rol
loopne
cmp
inc
hlt
push
movsl
stos
hlt
popf
cmp
pop
shlb
dec
xor
fbld
icebp
sbb
stos
jns
daa
dec
cmp
shr
ljmp
mov
insb
lds
push
je
test
shlb
lock
lea
test
subl
mov
stc
pop
ret
adc
and
adc
repz
repnz
inc
ljmp
and
jb
ficoms
xlat
scas
mov
mov
imul
mov
rolb
rcrw
adc
imul
mov
loope
push
xor
lret
mov
fst
icebp
test
mov
pop
data16
jns
pop
mov
jl
pop
push
xor
dec
fwait
stos
adc
mov
arpl
in
fdiv
push
push
and
stc
add
cwtl
pop
outsl
fildll
or
add
cltd
cmpsl
jg
sbb
xchg
in
pop
xchg
cli
popf
pop
sbb
sarb
dec
das
stc
arpl
mov
adc
out
ret
je
fstpl
ja
sbb
push
sahf
jo
mov
dec
inc
movsb
inc
or
sti
arpl
and
ret
sbb
data16
mov
jne
subl
inc
adc
in
xchg
sub
push
add
lds
push
adc
xchg
add
cwtl
hlt
pop
jnp
dec
cmp
or
mov
js
mov
stos
aas
xchg
mov
test
sub
lahf
push
test
lds
xor
lret
pop
out
or
test
cpuid
mov
hlt
lahf
mov
add
pop
add
test
mov
or
mov
subb
push
negl
mov
imul
and
or
aad
xor
push
dec
jp
fisttps
addb
test
lock
stc
fidivrs
cld
and
sbb
notb
add
sarb
sub
lock
cmp
push
cwtl
push
adc
jmp
mov
leave
push
leave
outsl
outsl
or
out
or
shrl
repz
repnz
imul
pop
imulb
sub
or
cli
aaa
inc
sbb
insl
push
and
add
fmull
adc
sti
mov
test
push
sahf
push
fldcw
sbb
movsl
cmpsl
stc
data16
int3
pop
mov
mov
pop
int
mov
push
adc
lret
aas
xor
inc
test
cmp
lret
nop
out
loope
cmp
testl
loope
pop
mov
pop
dec
adc
aas
call
dec
leave
xor
or
outsl
xor
imul
stos
push
andb
stos
std
mov
mov
add
out
and
push
jle
jno
add
cmp
clc
dec
add
or
cwtl
mov
lods
ja
cs
loopne
jae
cmpsb
test
sub
mov
dec
cmp
pop
push
adc
popf
sub
push
daa
mov
cmp
mov
mov
imulb
mov
jnp
rcrl
or
jmp
lret
add
aaa
insb
gs
fs
es
lret
inc
das
mov
popf
mov
mul
lods
adc
fs
add
xchg
add
cld
es
xchg
mov
sub
mov
add
lds
pop
popf
xchg
add
pop
fistl
mov
nop
sbb
cld
adc
jnp
js
mov
inc
loop
adc
dec
test
popa
cmp
sbb
push
aam
icebp
lock
insb
or
add
out
jnp
jg
xlat
cmp
repnz
fimull
insl
cs
je
sbb
ficoml
mov
sbb
adc
enter
fwait
mov
push
aad
ficoms
jecxz
push
jno
push
xor
push
pop
ret
xor
fldl
or
dec
test
xchg
pop
inc
cmp
push
lea
icebp
inc
xchg
or
js
sbb
ret
lcall
cmp
sbb
mov
pop
ljmp
filds
out
jle
repz
scas
outsb
sti
outsl
lret
pop
add
inc
adc
sti
mov
lds
imul
jb
cltd
enter
dec
mov
das
pop
sbb
dec
lea
test
sbb
ret
jae
jo
fnsave
jo
jae
dec
and
stc
ffreep
inc
cmp
subb
xorl
clc
gs
fdivl
fists
rcrl
mov
adc
xorb
mov
pop
clc
jb
dec
push
xchg
outsl
stos
xor
and
repnz
inc
mov
mov
cltd
pusha
push
jno
mov
inc
inc
add
sbb
fisubs
mov
and
sbb
adc
inc
sbb
fidivrl
pop
andl
stos
cwtl
xchg
ljmp
fbld
dec
ljmp
xor
shr
gs
cmc
pop
sub
idivb
repnz
or
mov
and
sub
leave
fldl
jne
xchg
int
pop
sbb
and
aad
cmp
pop
dec
mov
sbb
loopne
push
mov
mov
add
lods
ljmp
inc
fdivl
out
std
add
stc
mov
push
scas
or
out
xchg
les
inc
cwtl
stos
sarl
dec
jno
and
jmp
daa
loope
aam
sbb
andl
adc
leave
inc
scas
and
cmpsl
popa
add
mov
push
pop
adcb
dec
or
xor
stc
inc
pop
pop
aas
mov
inc
and
movsb
xor
push
iret
fdivl
outsl
bound
es
dec
repz
fidivrs
or
es
push
add
out
cmpl
inc
arpl
cmp
sub
out
mov
stos
mov
add
push
mov
sbb
pop
lahf
sub
lret
clc
push
cmp
cmp
or
leave
cmp
movsb
enter
dec
fucomp
push
push
test
or
movsl
mov
ds
jg
and
jne,pn
repz
inc
mov
mov
iret
mov
xchg
ret
stos
push
lock
aad
ja
push
bnd
or
or
out
inc
inc
rcll
sub
lcall
mov
push
push
aaa
pushf
das
cmpsl
mov
arpl
cmp
inc
setns
mov
test
mov
jecxz
iret
sti
pusha
lock
add
mov
imul
dec
cmpsl
sub
rcrl
adc
mov
repz
jmp
lea
imul
and
xlat
add
mov
dec
push
mov
jg
pop
ljmp
stos
pop
leave
xchg
fcompl
repz
mov
add
xchg
sarb
mov
mov
fcmovnb
aad
adc
sbbl
xor
and
jne
mov
sub
pop
add
adc
sbb
inc
and
sub
mov
lods
pop
jns
mov
test
add
jecxz
jl
mov
in
jne
mov
and
mov
test
jnp
in
or
push
lahf
add
call
leave
inc
sbb
jle
add
mov
popf
adc
adcb
das
hlt
movsb
jecxz
jns
aad
pop
and
rorb
stc
das
cltd
das
dec
jbe
shrb
mov
dec
dec
push
dec
in
sbb
xchg
rol
xchg
movsl
mov
pop
xor
in
sarb
pusha
ds
add
xor
mov
push
jge
std
sahf
push
ja
aaa
dec
cmpl
stos
ljmp
addr16
notl
dec
xchg
push
dec
jl
sahf
lea
push
gs
xchg
test
rclb
or
xlat
pop
divb
and
lea
mov
push
and
jne
outsb
inc
dec
sub
das
nop
clc
push
lods
dec
gs
fcompl
xor
dec
ja
inc
lods
push
xor
push
inc
mov
lahf
jne
lcall
pusha
push
xor
mov
scas
cld
add
mov
lret
mov
test
popf
fdiv
out
out
test
adc
out
cld
lret
ljmp
xchg
and
xchg
out
sti
shll
leave
dec
mov
inc
sub
mov
sar
movsb
mov
mov
lods
std
sbbl
xchg
orb
in
xchg
xchg
jne
dec
and
shl
add
jp
add
xor
loop
sar
inc
cmpsb
sbb
pop
dec
je
add
inc
pop
jge
mov
jno
mov
mov
and
push
xchg
dec
adc
lock
out
mov
cwtl
loop
mov
jg
and
std
and
cwtl
addr16
inc
f2xm1
cmc
mov
xchg
dec
movsl
and
sbb
aas
xchg
inc
mov
add
iret
leave
dec
movsb
push
xchg
push
or
jno
push
inc
pop
cmpsb
ja
xchg
andl
aaa
cmp
pop
mov
psubusb
jne
rorl
cmp
lcall
mov
pop
lcall
adc
lcall
sbb
test
push
inc
jl
mov
fidivs
mov
popf
cmp
cld
xchg
mov
jnp
sbb
mov
movsl
cmp
xor
add
inc
pop
push
dec
loope
cmp
es
cs
push
cmp
inc
pop
das
into
adc
push
mov
dec
sar
int
adc
and
lea
adc
outsl
mov
lret
ret
shlb
and
jb
dec
jbe
ss
push
sbb
mov
adc
cmpl
adc
cmp
and
mov
sarl
fs
arpl
push
rolb
sahf
out
movsl
test
js
mov
xchg
ljmp
in
addr16
lods
mov
mov
xchg
lods
pop
mov
mov
mov
sub
xor
es
cmp
jl
push
and
mov
in
push
mov
pop
jge
fsubr
fsubrs
add
sbb
lods
repz
mov
pop
xchg
mov
add
adc
ret
jo
dec
mov
mov
cs
fwait
xchg
aaa
jb
inc
mov
das
aas
mov
push
fwait
push
add
cmp
out
dec
cmc
iret
scas
test
sub
incl
mov
or
into
popl
cltd
mov
outsb
dec
xchg
or
test
fs
add
sahf
mov
or
clc
cmc
pop
sub
fistpll
popf
aaa
sahf
int3
insb
in
call
xchg
adc
mov
mov
or
insb
ss
push
out
inc
int3
push
sbb
out
push
loopne
push
sbb
mov
xchg
push
sub
sti
fsubl
and
push
mov
rorb
pushf
into
inc
aam
dec
adc
or
push
mov
xchg
add
ds
jmp
lds
sbb
add
xchg
cli
add
pmullw
push
xchg
in
pushl
add
imulb
sub
mov
push
lcall
pop
iret
cmp
int
shlb
and
jmp
pop
pop
sbb
jecxz
jne
in
mov
add
adc
or
repnz
jge
pop
int
dec
and
push
stos
mov
cld
pop
es
cld
push
mov
imul
jbe
pusha
int3
insl
test
hlt
lock
stos
pusha
ret
incb
push
orb
and
lret
std
adc
lock
cmp
lcall
popf
sti
push
arpl
repnz
fstps
xchg
jle
pop
loop
in
dec
scas
mov
inc
pminub
mov
mov
xor
mov
push
test
sti
mov
xchg
shrl
and
jns
addr16
jecxz
lea
in
jb
cli
pusha
xlat
sbb
cmp
cmpsb
push
mov
scas
dec
or
jmp
neg
rcrl
and
jle
mov
mov
mov
jecxz
adc
xchg
aas
int
cmp
pop
lock
jno
cwtl
sub
jge
inc
jl
push
repnz
movsl
xchg
shlb
lock
cmc
sti
dec
adc
mov
js
cwtl
cwtl
mov
jns
and
loop
xlat
pop
xor
adc
add
movsb
ficoml
jge
lock
or
mov
or
cmp
jge
mov
pop
push
and
xchg
mov
sbb
test
xchg
dec
add
rorb
insl
loope
sub
dec
imul
push
or
or
jo
es
mov
out
xlat
sub
xchg
aad
subb
cmp
add
jbe
iret
fnsave
icebp
xor
pop
inc
scas
mov
in
dec
int
mull
enter
mov
add
dec
xchg
insl
dec
ret
pop
cli
mov
lret
cmp
mov
cmp
lahf
mov
or
in
jno
mov
jmp
dec
push
inc
rcll
add
lods
jmp
lods
sub
sub
ja
fiadds
jae
sti
inc
push
xchg
push
in
dec
xor
mov
pop
lods
pcmpeqw
add
vpaddq
xchg
je
xchg
adc
add
mov
lahf
sbb
jmp
in
jo
add
in
mov
aam
jg
aad
jl
das
je
lahf
jp
sbb
outsl
add
adc
imul
orl
mov
pop
jl
int3
lea
jns
dec
xor
inc
in
and
std
push
dec
pop
push
sahf
cld
ret
sbb
mov
push
in
ret
cmp
jb
or
dec
ror
lock
shlb
stc
pusha
mov
enter
iret
loope
push
sbb
inc
jmp
push
stos
mov
repz
dec
mov
adc
and
pop
out
mov
pusha
fwait
xor
addr16
movb
jle
xor
das
ffreep
jl
test
jmp
fwait
sarb
add
fs
daa
and
add
lock
jmp
sti
push
lds
adc
std
out
addr16
or
fstps
je
cmp
fdivr
xor
sbb
dec
mov
jne
loop
lods
incl
outsl
enter
pushf
ljmp
insl
cli
sti
je
jo
mov
jbe
jno
cmc
subb
xor
clc
jge
movsl
orb
sbbl
xchg
rorb
lds
dec
cmova
pusha
sub
data16
and
out
scas
jecxz
fisttpll
ret
xchg
out
cld
int3
xchg
inc
incl
inc
lea
dec
xchg
xchg
int3
cmp
pushw
sub
sub
mov
outsb
pusha
ljmp
push
or
jecxz
mov
jne
mov
mov
cli
imul
cmpb
cltd
vmread
or
jbe
cltd
sub
shlb
cmp
cmpsl
jne
sub
test
xor
xchg
call
std
cmp
daa
pop
fldl
add
sbb
insl
pop
mov
and
rclb
dec
repz
cli
filds
xchg
sti
mov
cmp
jae
repz
pop
mov
dec
dec
jl
imul
cmp
inc
ja
sbbl
test
xchg
dec
jae
xor
dec
adc
sub
xor
jecxz
shl
pop
lcall
pmaddwd
orb
hlt
sbb
pinsrw
daa
push
jnp
xor
insl
das
ficoml
cmp
ficoms
xchg
mov
stos
pop
lea
hlt
divl
jl
cmp
dec
mov
test
xchg
xchg
fnstcw
push
lock
mov
movl
sub
test
outsb
shr
icebp
sub
push
mov
jno
scas
or
cmp
pop
lret
pushf
inc
jbe
test
fidivrl
je
add
jns
push
test
mov
sbb
out
cmpsl
pop
lret
sbbl
push
mov
loope
fldt
orl
addr16
sbb
movsb
popf
xchg
sbb
icebp
dec
pushf
je
cs
adc
sbb
mov
shlb
pop
in
adc
pop
out
andl
imul
rcll
mov
jne
inc
pop
adc
arpl
dec
sbb
jecxz
push
xor
lods
jne
xchg
xor
sbb
pop
mov
xlat
mov
mov
push
sub
sbb
sbb
cltd
or
cmpsb
mov
jne
jnp
xchg
pop
dec
fimuls
ljmp
inc
lock
add
mov
adc
jmp
push
pop
cmp
jb
lods
push
roll
xchg
dec
pop
rol
repnz
push
inc
xchg
movsb
pop
lret
jbe
jp
cltd
enter
jge
mov
jl
sub
loopne
mov
mov
scas
icebp
leave
test
adc
icebp
push
mov
inc
xor
or
inc
ret
dec
test
and
push
vpslld
push
ror
cmc
xchg
ret
inc
jo
push
cmpsb
pop
pop
mov
imul
push
push
cmpsb
mov
fstl
ljmp
ljmp
loopne
sub
test
lret
push
cmp
jmp
clc
popa
mov
and
clc
outsb
nop
push
lods
shrl
scas
adc
je
scas
dec
adc
bound
lret
test
sub
ds
dec
scas
scas
mov
mov
mov
sti
int
sub
in
outsb
pop
movsb
xchg
test
add
cltd
sub
mov
jecxz
adc
add
push
cltd
rorl
scas
jg
mov
inc
sub
enter
xor
roll
push
add
push
adc
mov
jae
fwait
xchg
scas
dec
fidivrs
jbe
lods
out
lock
xor
ret
mov
sub
push
jae
icebp
jl
fcompl
insb
sub
mov
cmc
pop
cmp
push
leave
iret
scas
cmpsl
enter
cmp
xor
cmpsb
push
and
jne
pop
pop
pop
and
push
out
fidivs
mov
xor
pop
stos
mov
mov
loope
fs
xchg
xlat
notb
int3
mov
fdivr
aad
pop
dec
jmp
out
cli
sti
std
imul
data16
imul
or
adc
cmc
pushf
mov
mov
pusha
push
jl
push
mov
pop
mov
push
sbb
fists
nop
cmpsb
push
xchg
nop
dec
ret
and
addl
dec
addr16
aas
dec
lcall
jo
jl
push
in
mov
test
add
push
jns
pop
call
movsl
out
xor
clc
stos
sub
pop
mov
daa
and
leave
out
std
mov
fnstenv
pusha
in
repnz
repnz
cmpsl
in
inc
dec
add
jmp
aaa
orb
mov
je
shlb
popw
cmp
cld
mov
inc
aam
adc
out
dec
xor
es
mov
popa
pop
outsl
jo
add
hlt
addl
add
pop
dec
push
imul
add
loop
or
xor
fsubrs
call
ss
rcrb
test
pop
je
hlt
repz
dec
mov
dec
daa
lock
inc
jb
fdivl
inc
daa
aaa
ds
ret
popa
sar
xchg
test
addr16
add
xor
test
gs
lea
sarb
pop
movsb
pop
jle
gs
cmp
pmovmskb
xor
loopne
fsubl
nop
sahf
jmp
xchg
data16
jmp
out
sar
outsb
inc
jl
aas
cmc
repz
cmp
scas
sbb
ret
std
aas
ljmp
rcrl
outsl
inc
out
outsl
fadd
rcr
jbe
mov
je
out
ret
in
or
std
or
add
je
in
sub
xor
push
inc
bound
jno
and
xchg
rolb
mov
and
fsubr
je
mov
repz
int
lods
pop
test
sbb
add
push
shll
js
scas
dec
xchg
inc
push
sti
fdivs
pushf
mov
mov
subb
movsb
rorl
iret
ficomps
xchg
gs
fidivrs
sbb
or
cmpsb
jnp
insl
subb
in
fs
sub
lret
ss
cmpsb
and
pop
cmpsl
push
mov
movsb
xchg
cld
mov
mov
imul
ret
sub
jne
clc
jmp
cld
add
inc
gs
fistps
jmp
adc
mov
gs
dec
fstl
sbb
es
cltd
jle
adc
repnz
cmp
push
xchg
inc
loop
lahf
push
jl
sbb
in
pop
stos
mov
jg
and
jmp
into
mov
sub
imul
ja
mov
cmpsl
fwait
into
mov
or
inc
call
dec
ret
pushf
pushl
mov
sahf
repz
dec
dec
dec
mov
arpl
jne
mov
push
dec
sub
push
hlt
shr
es
pop
jle
jb
into
stos
out
mov
stos
add
pop
mov
test
ljmp
js
jo
dec
inc
pop
fidivrl
add
push
insb
sahf
cmc
push
mov
mov
hlt
cmp
mov
xchg
idivl
std
jge
mov
xchg
xor
sub
sti
push
lea
xor
in
clc
fisubrs
mov
testb
shl
sbb
jnp
cmp
jg
in
scas
imul
sbb
xchg
fnsave
jno
popa
mov
cmp
outsb
les
outsb
subl
xor
lods
jge
push
out
leave
lahf
mov
sbb
jnp
xor
mov
out
sub
xchg
inc
outsb
pop
and
cmp
jl
adc
adc
pop
push
jnp
mov
mov
lock
arpl
mov
pop
movsl
cli
adc
jp
vcvttpd2dq
les
dec
jle
jmp
hlt
and
mov
xorb
fwait
out
imul
mov
stos
xor
mov
dec
cmp
lods
cmc
or
mov
adc
inc
dec
mov
enter
fimuls
sbb
call
adc
inc
jnp
lahf
xchg
call
gs
jle
lahf
ljmp
xlat
stos
cmp
lahf
sbb
mov
daa
cmc
xchg
or
idivb
push
mov
sub
inc
cwtl
adc
push
pop
adc
sbb
dec
leave
push
xchg
inc
in
cmc
ja
pop
cmpsl
cmp
rorl
cmp
imul
mov
mov
daa
aas
mov
out
mov
fwait
xor
or
enter
or
dec
cs
outsb
mov
sub
lret
out
mov
imul
xor
add
ds
fstpt
inc
gs
cmpsl
sarl
dec
fistl
mov
pusha
jae
xchg
lcall
gs
cmp
adc
and
dec
mov
cld
fs
sub
push
lods
push
in
xchg
push
popf
movsl
mov
lcall
lods
xchg
mov
mov
movsl
mov
popa
sbb
mov
cmpsl
cltd
push
shrl
mov
xor
dec
outsl
sahf
adc
mov
jecxz
mov
mov
ds
shlb
vmread
hlt
sbb
test
dec
push
scas
inc
push
int3
sti
push
adc
fisubrs
cwtl
mov
mov
mov
aas
add
addl
rcrl
mov
push
rolb
cmc
cmpsb
dec
insl
xchg
mov
les
and
xchg
push
pop
jo
xchg
das
out
aam
push
cld
adc
adc
lahf
mov
bound
out
pop
and
push
add
inc
xor
test
inc
rcrb
cmpsl
leave
test
add
push
and
ficoml
inc
test
jb
rcrb
scas
aas
push
jmp
xchg
lahf
lret
js
ds
mov
dec
pop
mov
loopne
mov
out
xor
in
je
ss
adcb
inc
ficomps
and
mov
lcall
fwait
cmpb
mov
jecxz
dec
rcl
gs
mov
inc
push
fst
push
or
mov
out
xchg
push
push
sti
popa
add
lea
daa
dec
add
stc
or
leave
fcmovne
inc
daa
push
pop
fiadds
idivl
cmpsl
xor
push
dec
popf
int3
inc
jecxz
inc
out
ss
das
aam
lods
adc
ljmp
xchg
icebp
clc
test
add
pop
movsl
jo
pop
mov
or
push
xor
pusha
mov
das
arpl
mov
xchg
xchg
pop
mov
shll
test
fdivrl
mov
test
or
sub
notl
rclb
stos
cmp
lock
dec
nop
mov
dec
dec
scas
cmp
sbb
mov
int
add
sbb
bound
mov
xlat
adc
jo
mov
lret
ret
pop
imul
mov
sbb
jae
bound
add
incl
lret
mov
jmp
push
dec
test
mov
ds
sahf
leave
dec
cmp
xlat
adc
dec
and
addb
mov
sbb
adc
fdivrl
movsl
mov
dec
push
imul
les
out
jns
mov
push
add
push
lods
sbb
or
stos
cmp
clc
sbb
jbe
pop
and
mov
dec
xchg
shll
jo
pop
test
add
sub
or
mov
adc
cmp
lds
popf
in
jb
add
push
xchg
vmovups
push
pop
mov
int
sub
jge
adc
mov
pop
sub
js
xchg
call
movsb
inc
dec
jge
dec
clc
enter
je
sbb
stos
iret
push
cwtl
test
ss
or
pop
call
cmp
lods
mov
push
loope
imul
aam
lcall
pop
rclb
aas
iret
sbb
adc
andl
in
stc
xor
fs
xchg
adc
add
push
sub
inc
dec
std
ss
xchg
addb
das
mov
dec
and
fs
push
repz
pop
cmpsl
fs
cmp
popa
stos
shlb
or
add
out
adc
jo
aad
jne
shl
out
fs
push
ror
mov
fldenv
adc
sub
pop
out
and
lret
cmp
and
rolb
fst
mov
shr
aaa
add
hlt
pop
inc
dec
in
loopne
inc
das
fucomip
iret
and
push
movsb
or
push
stc
add
dec
jle
stos
mov
pusha
dec
jl
jnp
inc
sub
push
pop
dec
dec
ret
push
jl
mov
jns
in
ret
aad
push
out
inc
push
add
aad
xchg
xchg
jle
cmpsl
or
pop
js
clc
inc
lods
xchg
add
push
outsb
stc
or
outsb
jne
dec
outsl
mov
pop
in
inc
rorl
and
sbb
scas
rcrl
bound
bound
mov
leave
fildll
adc
inc
lahf
pop
movl
andl
push
jg
movb
jae
mov
mov
fdivrp
movsb
in
push
movsl
mov
sbb
cld
sub
nop
or
aaa
and
push
jae
cs
cwtl
pop
mov
sahf
jae
push
pop
das
mov
data16
stc
xor
ja
dec
pop
inc
xchg
pop
out
cld
and
cld
inc
add
addr16
and
inc
out
mov
add
jmp
loopne
repnz
clc
mov
jmp
add
xor
outsb
test
mov
gs
dec
jne
and
ss
fsubp
lret
fsubl
in
rcrb
sbbl
mov
push
inc
mov
aad
stos
inc
notb
cmpl
lret
test
mov
xor
out
mov
shrl
dec
js
aam
cltd
enter
xchg
ljmp
push
xlat
or
push
mov
cmc
xlat
scas
loop
cmp
cmpsb
nop
jo
push
pop
cmp
js
push
fucomi
sbb
xchg
jns
lahf
imul
sbb
call
and
std
rolb
mov
fsubs
scas
fcompl
cmp
lcall
add
cmp
inc
scas
ficomps
fucomp
jmp
mov
adc
scas
sbb
push
sbb
push
jecxz
rcrl
mov
xchg
jmp
shll
js
cmpsl
or
jb
pop
mov
sub
imul
cltd
add
jmp
jl
dec
rol
inc
in
jl
ljmp
sbb
xor
cltd
sub
mov
cltd
adc
test
xor
sbb
js
jecxz
lret
mov
int
stc
bound
xchg
pop
test
lret
cmc
mov
and
push
lds
movsb
push
in
ljmp
mov
std
sbb
add
rolb
mov
push
add
in
jp
aad
stc
ljmp
nop
popw
jl
ds
cmp
das
add
dec
mov
push
jle
jle
pop
mov
mov
mov
insb
push
inc
pushf
jns
xchg
adc
cmp
push
mov
ret
cmp
cs
jmp
insb
stos
xchg
rcr
cmpl
xchg
dec
in
in
inc
aam
cld
lock
ja
sub
lods
addb
jbe
cwtl
je
xchg
dec
pop
mov
stos
mov
mov
ret
and
pusha
out
mov
test
xchg
fisubrs
sub
or
xorb
aas
cwtl
fwait
call
add
enter
cmp
test
xchg
pop
adc
jmp
lods
lret
push
test
in
cmc
push
push
mov
cmp
mov
mov
push
arpl
fucomi
hlt
ret
inc
jmp
push
cmp
in
in
hlt
xchg
inc
add
cmp
es
push
add
outsl
pop
push
addr16
aas
rcrb
mov
test
aaa
ss
test
jge
lds
pop
or
lahf
pop
cmpsl
leave
sbb
mov
jae
xlat
push
jg
xchg
add
pop
das
mov
out
mov
jg
adc
leave
jge
ja
pop
sub
inc
lods
sbb
in
inc
dec
jp
scas
or
adc
xlat
xchg
sbb
adcl
clc
sub
mov
adc
xchg
aam
in
push
lahf
call
pop
fnstcw
loopne
xor
or
outsl
in
mov
loop
test
xor
sarb
dec
jno
idivb
jnp
jo
mov
push
cmp
inc
fnclex
xor
pop
outsl
adc
and
fildl
jge
push
rorb
cmp
scas
pop
push
out
lret
pop
ror
pop
push
push
sti
xchg
fcmovnbe
aaa
gs
xlat
inc
adc
lret
bound
inc
shlb
sbb
sahf
push
mov
filds
jp
adc
shrl
sbb
in
mov
imul
lods
mov
pop
popa
iret
cld
jbe
cmp
mul
ret
gs
inc
aam
add
repnz
cmpb
in
or
lods
or
ds
test
mov
popa
aam
or
cwtl
adc
jmp
loopne
cwtl
fld
dec
jb
iret
outsb
xchg
and
lods
ds
scas
mov
sub
inc
jbe,pt
mov
mov
inc
lods
xorl
xor
add
fdivrl
jae
xchg
mov
cmp
insl
ds
mov
cwtl
xchg
sbb
shlb
ret
sbb
lds
jno
in
jmp
aad
and
dec
inc
mov
xor
mov
adc
sub
mov
pop
sub
push
arpl
inc
push
mov
xor
fs
inc
inc
cmp
sbb
movsb
adcl
pop
test
ret
hlt
pop
ret
xchg
xchg
shrl
jle
or
push
xorb
test
fdivl
push
stos
insb
add
fs
mov
popl
pop
test
xor
loopne
mov
out
into
fildll
test
sub
dec
inc
inc
inc
xchg
lahf
rol
cmpsl
shrl
ret
pop
das
inc
clc
lods
push
sub
lock
dec
rorl
nop
mov
cmpsl
lods
mov
mov
sub
jbe
hlt
push
shl
ds
and
movsb
cmp
mov
roll
mov
mov
iret
mov
in
lea
mov
outsl
jle
pop
lret
add
pop
adc
mov
mov
enter
adc
stos
jle
aad
imul
inc
sbb
imulb
lea
and
test
or
ljmp
sarl
lds
sbb
push
pop
mov
cmp
sbb
fwait
mov
xor
int3
xchg
jnp
jae
test
je
sbb
lret
or
push
xchg
cmp
ljmp
sti
lahf
or
pop
es
daa
imul
mov
cmpl
jb
and
repnz
or
movsl
adc
adc
cmp
sbb
mov
lcall
test
mov
lea
xor
sbb
push
outsb
jnp
xchg
movl
mov
leave
jbe
lret
sub
jns
jae
dec
dec
pop
xchg
mov
cmp
sbb
xchg
mov
shll
sbb
pop
aas
push
mov
fistl
or
jo
adc
icebp
sbb
mov
pop
movsb
sub
divl
or
iret
das
xchg
adcb
sarl
jmp
je
push
add
add
and
stc
int
push
andb
cmp
ja
cmp
aam
push
push
xorl
dec
outsb
sbb
add
xor
mov
jb
ss
in
outsl
imul
sbb
push
and
loopne
xlat
pusha
xor
sbb
loope
ljmp
jmp
aaa
in
mov
fistpll
jg
fnsave
sub
fwait
mov
out
xlat
pusha
add
mov
adc
jmp
dec
dec
xorb
test
out
into
cmp
push
push
ss
addr16
mov
mov
sub
cli
aad
dec
fsubrs
jo
das
xchg
lods
xor
mov
bound
adc
ss
cli
add
mov
cwtl
cmp
addl
mov
fwait
or
inc
sbbl
pop
jnp
enter
dec
sbb
inc
repz
inc
cli
insl
ljmp
pop
push
pop
lahf
adc
enter
jno
lods
jp
mov
lret
jle
add
dec
sub
pop
xchg
das
or
stos
ja
and
scas
in
imul
mov
mov
or
repnz
push
and
out
repnz
ljmp
dec
xor
stc
pop
lahf
sbb
cwtl
push
daa
inc
cmp
sbb
idivl
pop
xchg
mov
pop
or
sub
sub
imulb
sub
in
movsb
xchg
add
xchg
lods
pop
cwtl
adc
push
jge
fidivrl
mov
push
pusha
cli
pop
jno,pt
push
mov
idivb
dec
push
or
lds
addl
adc
and
je
test
or
insb
push
jp
pop
add
rcll
push
sbb
pop
paddw
xchg
or
add
add
xchg
push
loop
sahf
inc
dec
das
mov
mov
adc
and
enter
add
sti
cmp
push
xor
popf
aam
xor
lods
cltd
dec
or
and
jno
mov
dec
add
xchg
cwtl
xchg
jmp
clc
mov
int
xchg
mov
cmpsb
xchg
lret
mov
inc
xchg
push
daa
push
sub
aam
jge
cmp
mov
ja
sub
dec
jecxz
mov
loop
dec
xchg
lret
add
ret
pop
fcompl
sbb
cmp
fwait
aaa
pop
xlat
rorl
mov
dec
inc
lret
and
sub
lret
lea
loope
cmpsb
call
test
mov
loope
into
mov
scas
mov
sahf
out
adc
iret
roll
adc
push
roll
mov
mov
cmp
daa
or
inc
movsb
lods
mov
sub
inc
sbb
dec
adc
mov
inc
and
insl
adcb
js
xor
mov
dec
pop
out
push
rcll
cmp
testl
push
rorl
movsl
cmpsb
jge
divb
stc
fs
dec
loope
test
mov
pop
sub
and
daa
xor
xchg
inc
cmp
repz
mov
sbb
push
lret
xlat
jne
js
cli
lds
fbstp
or
fsub
jmp
adc
mov
gs
das
xor
pop
push
call
mov
data16
ja
sub
stc
inc
mov
lods
cmp
push
xorl
push
popf
dec
sbb
xor
addr16
mov
js
jle
fcmovne
adc
imul
xor
nop
je
inc
xchg
or
xor
xchg
stc
jbe
cmp
mov
xchg
mov
int3
cmp
cmp
insb
mov
adc
lds
popf
adc
test
fisubrs
push
inc
dec
bnd
hlt
mov
cmp
clc
adc
sbb
jge
in
and
mov
xor
xchg
je
cmpl
mov
sub
ret
stos
sub
push
sarl
testl
dec
mov
arpl
xchg
sub
jmp
call
clc
cmp
or
scas
out
jbe
jae
addr16
dec
imul
jo
ljmp
icebp
sub
pop
inc
enter
repnz
sti
lret
inc
outsb
push
cmpsl
sbb
outsl
adc
sub
jbe
mov
stc
clc
scas
sbb
cs
movsb
push
inc
xor
rcll
mov
xchg
fldt
or
push
clc
mov
frstor
sub
outsb
mov
dec
ret
mov
pop
int3
dec
lcall
les
out
out
xchg
lret
sbb
das
mov
jmp
xor
mov
pop
je
cmp
xorps
mov
or
int3
movsl
pop
push
cmp
mov
push
or
cltd
ss
jbe
cmp
mov
and
xor
fstpl
mov
inc
xor
mov
push
mov
push
and
lret
mov
cmp
mov
xor
arpl
inc
push
testl
shl
cmp
insl
mov
popa
xchg
push
cmpsl
bound
and
test
jp
and
xor
mov
hlt
xchg
mov
jp
and
xchg
jne
mov
adc
cwtl
add
shrb
andl
jne
xor
call
out
scas
test
lods
scas
mov
push
add
mov
cmpsl
jg
nop
add
jp
lods
out
cwtl
mov
aad
mov
insb
fs
jp
mov
mov
out
popa
jae
xlat
loop
add
or
xchg
cmpsb
mov
mov
push
popa
xchg
cmp
push
ljmp
cmpsl
mov
adc
or
cmc
insb
movsl
and
xor
ja
test
popa
loope
adc
and
pop
ret
bound
add
shll
push
loop
and
test
or
sub
ds
cli
xchg
xchg
ret
sub
test
incb
fiaddl
adc
int3
mov
sub
lods
notb
fadd
mov
push
mov
pop
addr16
insb
xor
adc
push
ljmp
lds
out
xchg
jle
jbe
sbb
jp
sti
ss
data16
movsl
inc
inc
jle
dec
fmul
movsb
out
fsubs
or
push
arpl
mov
and
mov
scas
arpl
xchg
mov
orb
mov
addr16
es
daa
je
add
pop
jno
lea
push
es
cmp
mov
mov
ss
psadbw
mov
jge
cmp
push
push
sti
push
shll
es
out
imul
and
xor
and
xor
pop
nop
mov
inc
push
xchg
inc
mov
pop
fimull
mov
push
adc
pop
adc
jo
adc
mov
cmp
xor
hlt
dec
inc
pop
mov
outsl
stos
das
and
mov
testb
xchg
xchg
sti
inc
inc
inc
hlt
sbb
cmpsl
or
cli
xchg
out
inc
iret
mov
popf
je
xor
xchg
fcmovnbe
adcl
or
or
mov
cmp
mov
mov
call
push
sub
sub
push
sub
mov
dec
insb
mov
jne
loope
cld
ljmp
jo
and
push
xor
xchg
sub
sbb
xor
push
cmpsb
ret
sbb
jnp
mov
cmpsb
push
and
ror
lods
test
movsb
test
jg
lcall
test
mov
mov
or
mov
mov
xchg
pop
jnp
fnstcw
vcmpss
dec
aas
mov
xor
ja
cmpb
ss
and
dec
orl
jmp
test
xchg
mov
sbb
cwtl
sbb
add
hlt
sbbb
pop
mov
cmp
js
int
mov
popa
cmp
fdivrs
or
sbb
dec
outsl
xchg
fldl
mov
mov
xorl
mov
xor
inc
sub
push
nop
sub
sti
adc
mov
lods
cwtl
xchg
dec
mov
outsb
push
loope
or
sbb
nop
pop
addr16
cld
xor
mov
pop
je
lock
outsl
dec
movsb
jnp
cmpl
cli
or
mov
ja
std
xchg
dec
or
in
cmpsb
es
fcmovnbe
clc
mov
xor
orl
addr16
aam
sub
sar
dec
sbb
ficoml
push
mov
push
stos
rcll
movsb
leave
adc
mov
cmp
xchg
cmp
aad
jbe
mov
or
xorl
repnz
adc
lods
cmp
aam
clc
push
jl
ljmp
cmp
cs
xchg
ljmp
arpl
add
mov
mov
in
xchg
or
push
adc
fsubs
iret
frstor
mov
jns
aas
faddl
aad
dec
inc
fwait
popa
xchg
push
icebp
or
push
dec
jle
stos
mov
icebp
scas
adc
mov
mov
dec
adc
mov
xor
iret
mov
aas
xchg
loop
cmp
cmp
pop
add
out
xchg
pushf
dec
pinsrw
jne
xchg
stc
std
xchg
mov
data16
mov
sbb
add
pop
outsl
adc
movl
xchg
popa
sub
shlb
fs
jecxz
repz
cmp
stos
push
xor
sub
xchg
inc
popf
push
jnp
gs
xchg
pop
add
inc
adc
pop
loopne
xchg
add
aas
jg
fistps
in
mov
inc
fisubs
sbb
cmp
fwait
ret
fcoml
fs
loopne
ss
xor
pusha
jbe
out
lret
enter
or
in
inc
lret
into
sbb
push
sbb
sub
sub
mov
insl
mov
xchg
sbb
fadds
mov
sbb
pop
xorl
sub
inc
mov
insl
pop
icebp
sbb
movsl
sub
leave
test
mov
pop
sbb
mov
mov
ljmp
mov
jl
arpl
aaa
rclb
add
shll
in
stc
mov
adc
shlb
loop
stos
mov
popf
fsubl
inc
arpl
rcl
insl
pushf
js
lds
mov
lret
cmpsl
add
mov
push
jecxz
xchg
popf
pop
mov
sbb
xor
sub
pop
jmp
dec
scas
jecxz
inc
hlt
add
in
shll
push
cld
add
fldt
nop
add
push
dec
pusha
xor
xchg
loopne
scas
jle
mov
aam
xor
roll
call
jno
jmp
clc
dec
data16
mov
add
pop
add
inc
jecxz
mov
loope
xchg
scas
leave
fcmovnu
push
and
test
stc
ficoml
pop
bound
das
mov
mov
cmp
ja
sarl
fs
fisubl
mov
in
push
and
add
cltd
hlt
std
sub
adc
fisttps
pop
out
js
ficoms
jo
js
push
out
dec
bound
stos
outsl
jp
cmp
mov
hlt
and
cmp
dec
test
lcall
add
push
lea
orl
dec
sub
cwtl
test
and
fbstp
jne
pop
mov
push
add
fs
push
sbb
pop
or
xchg
cs
jecxz
cmp
je
jno
fists
pop
gs
lret
fwait
into
push
jae
loope
fisubrl
adc
cmpsl
aaa
xor
inc
mov
xchg
int3
adc
push
ljmp
fdivrl
sbb
lea
pushf
and
sti
dec
std
ja
sbb
mov
int3
out
pop
shll
jno
push
bnd
insb
cmpl
add
iret
jae
and
icebp
fwait
dec
pop
pop
sahf
xor
cwtl
cmp
add
mov
sbb
cld
jno
lcall
jl
jne
adc
mov
xchg
push
dec
mov
mov
fidivl
rcl
fstps
xchg
inc
add
shrb
sbb
inc
mov
or
mov
mov
cltd
ret
cli
ss
lods
sahf
fiaddl
dec
loopne
and
fdivs
cmpsb
data16
dec
mov
sahf
xchg
push
shlb
mov
fildll
cmp
out
dec
adc
clc
and
mov
cli
cmpsw
mov
aaa
xchg
jl,pt
add
adc
dec
fmulp
pop
xchg
aam
mov
push
stos
and
add
inc
outsl
shrb
and
jg
hlt
mov
data16
fldt
lds
inc
out
inc
add
inc
addb
mov
test
cli
outsl
outsb
in
mov
jl
or
ss
leave
shll
mov
insl
stos
jno
shl
push
pop
mov
loope
sub
cli
inc
js
xor
mov
into
cmpb
sbb
sti
pop
ds
push
sub
scas
adc
and
adc
mov
bound
fidivl
add
scas
pop
or
lds
imul
sbb
add
test
push
cmp
or
je
add
test
push
test
jne
mov
cmpsb
movsb
cltd
xor
cwtl
ss
mov
sub
adc
inc
cmp
jne
mov
mov
pop
pop
push
xor
inc
cmc
inc
mov
es
xchg
push
outsb
pop
mov
dec
jno
inc
iret
sahf
dec
shrb
or
sub
das
leave
mov
ljmp
push
or
push
cwtl
and
repnz
push
std
in
mov
pusha
aad
sbb
push
push
jno
xor
or
jae
lds
adcb
dec
xchg
pop
fldt
push
lret
fnstenv
lea
rclb
push
lods
mov
dec
push
nop
xor
addr16
stc
jp
insl
mov
jb
mov
inc
sarl
xchg
mov
ss
jp
les
ss
mov
xchg
dec
adc
pop
dec
int3
xchg
ret
in
sub
je
push
fsts
xlat
mov
sbb
adc
loop
inc
nop
mov
inc
push
push
sub
lock
filds
adc
pusha
addl
imul
push
jmp
and
ret
sub
push
dec
or
hlt
and
xor
adc
mov
fwait
fwait
aad
call
icebp
push
pusha
lods
pop
mov
cmp
mov
dec
fiadds
test
xchg
jg
call
jg
fsubr
xchg
icebp
xchg
mov
scas
int3
ljmp
negb
mov
testl
cltd
pop
lret
jae
movsl
push
sbb
nop
add
xchg
loopne
scas
sbb
movsb
sub
fneni(8087
ret
ss
mov
pop
jle
fwait
xlat
cmp
adc
call
xchg
pop
mov
stos
ds
int
add
mov
hlt
add
adc
insb
xchg
stos
mov
mov
adc
or
imul
jl
clc
sub
mov
cmp
mov
and
push
mov
jge
mov
mov
pop
int3
not
sti
sub
adc
xchg
fwait
ret
or
add
imul
push
sbbl
and
or
scas
push
jg
arpl
push
pop
pop
insb
mov
in
in
rcrl
inc
xor
xor
incl
xchg
cmpsb
iret
sub
push
sub
mov
int3
adc
xor
sbb
test
insb
adc
xchg
mov
sbb
mov
loopne
fs
jno
sub
cltd
inc
inc
arpl
sbb
push
add
mov
lock
add
js,pn
adcl
mov
ja
call
fdivrs
repnz
inc
cmc
xor
jno
jno
ds
ja
cwtl
subb
mov
into
sbb
add
in
mov
je
add
mov
fnstenv
pop
leave
inc
cmpsl
cld
idiv
shlb
lea
pop
push
fcmovnb
test
jp
cwtl
int3
repz
or
jb
jnp
out
cmc
mov
andl
fildl
ds
adc
mov
jmp
fiadds
fwait
mov
daa
mov
gs
cmc
cmp
ret
push
adc
shlb
dec
mov
xor
cwtl
imul
inc
xor
ret
jl
fidivrl
adc
cmpl
mov
mov
sub
inc
pop
or
cmpb
jge
outsb
xchg
inc
mov
pop
xchg
sarb
test
rorl
dec
and
sub
cli
pusha
xchg
rcr
adc
and
inc
cld
jle
sub
mov
enter
xchg
inc
ret
imul
lret
and
xchg
movntps
mov
cmp
ja,pn
cmpb
stos
outsb
frstor
pop
aas
xchg
mov
stos
call
in
call
out
pop
mov
mov
xorl
jo
jge
xor
mov
cltd
or
or
cmpsb
sarb
sub
inc
sti
shll
stos
cmpsb
mov
jb
fwait
mov
push
call
jge
aad
add
xorl
dec
push
add
stc
in
add
xchg
cs
add
pop
imul
mov
flds
xor
inc
mov
ds
cmp
cmp
out
inc
mov
cvtdq2ps
insb
mov
idivb
mov
ja
or
jg
mov
popf
mov
cmp
jo
lret
pushf
or
jge
pop
into
cmp
int3
data16
pop
mov
pop
lahf
cmp
cmc
repnz
call
cmp
in
jge
mov
mov
fisubrl
in
std
xor
xor
sbb
ja
lahf
or
mov
or
lods
out
jecxz
jbe
fisubs
test
stos
mov
out
ljmp
jae
int
testl
addr16
cs
jno
enter
enter
das
push
add
xor
mov
push
mov
xchg
int3
xchg
mov
outsl
jge
ds
xchg
das
push
mov
sub
xor
insl
sub
pop
into
jae
rolb
push
pop
xor
stos
imull
stos
add
cmp
test
pushf
loop,pn
cs
test
and
ret
cmp
stos
jecxz
sbb
sbb
enter
inc
push
pushf
in
push
xor
lods
mov
sbb
add
adcl
or
add
push
dec
rcrl
loop
pop
cmp
sbb
cli
push
mov
pop
and
xlat
push
cmp
cmp
inc
in
lcall
push
mov
jg
dec
pop
mov
jno
dec
cmp
adc
xchg
sub
movsb
mov
mov
lds
sar
lea
fxch
js
movsl
jmp
pusha
push
sti
mov
aad
repnz
leave
loope
stc
sbb
lock
inc
iret
je
mov
repnz
xor
or
mov
lods
jb
test
outsb
adc
popf
dec
mov
xor
or
fwait
xchg
mov
dec
jg
cmc
test
jge
sti
mov
movb
pushf
sarb
cmpsb
push
ret
sub
insb
sub
inc
aas
jae
in
insl
add
iret
fwait
test
sbb
dec
shl
inc
push
push
icebp
in
je
add
sti
mov
xor
fistpll
movsl
and
mov
inc
mov
clc
stc
sbb
xchg
and
xorl
fs
daa
pushf
mov
pop
mov
sti
out
cmpsb
push
pop
xor
push
jl
sar
mov
fadds
xorb
inc
sbb
sti
lock
pop
into
sbb
xor
fwait
adcb
jge
xchg
xor
xchg
jno
pop
sbb
sti
test
pop
xor
xchg
jge
repz
sbb
mov
popa
jp
lcall
jl
lods
xlat
jb
push
and
int
rorl
sbb
sbb
lock
gs
aaa
dec
sahf
xor
fldt
icebp
push
pop
not
ret
push
fadds
inc
fmul
jae
mov
arpl
pop
gs
cs
ret
fucomip
lea
in
mov
adc
movsl
clc
cld
mov
inc
and
nopl
pop
mov
arpl
inc
fwait
mov
ljmp
mov
popf
icebp
cmpsl
lahf
adc
and
arpl
outsb
mov
mov
pop
fxtract
daa
adc
mov
lcall
ds
aam
inc
aad
sbb
mov
daa
test
js
scas
jge
dec
rcr
cli
stos
dec
dec
call
jne
mov
pop
negb
xchg
ror
adc
insb
mov
xor
adc
mov
sbb
call
std
dec
push
jo
sti
push
push
shrl
xorb
push
add
and
jp
je
addr16
aad
cmp
adc
lods
cmp
adc
pop
and
loop
cmp
rcrl
dec
arpl
fistps
adc
xor
popf
mov
in
pusha
xlat
or
xchg
cmp
iret
lea
fcomps
leave
das
je
aam
mov
ja
mov
push
inc
in
or
outsb
adc
mov
cmp
fstpl
rorb
or
sarl
fistps
or
dec
xchg
xchg
mov
pop
mov
loopne
lahf
aas
divl
mov
inc
mov
testl
fmulp
push
negl
popa
push
xchg
stc
cmp
push
xchg
jmp
mov
cs
xchg
ficoms
lds
movsl
mov
incb
lahf
and
cltd
xchg
fstps
insl
fwait
xor
pop
pusha
fistpll
pop
aad
push
push
cmpsb
out
out
scas
adc
and
jecxz
mov
sub
int3
addr16
addl
lret
lahf
pushf
add
not
push
pop
ja
fdivl
icebp
aad
imul
push
inc
cli
sahf
pop
sub
mov
mov
and
popf
and
in
xor
mov
sub
shr
jbe
cwtl
testb
push
mov
xchg
std
outsb
js
jbe
add
das
sub
dec
push
sbb
fcoms
cltd
adc
out
mov
call
pushf
stos
das
test
addb
leave
shrb
stos
inc
xchg
rcrb
loop
jae
and
lsl
cmp
sbb
or
jmp
and
les
xchg
cmp
xlat
rep
divb
int
or
push
repnz
xorb
es
cld
jl
xor
add
push
or
sbb
mov
popf
push
iret
sar
fwait
in
adc
inc
or
mov
gs
mov
int3
incb
das
ja
ret
lcall
cmp
cmp
jo
push
pop
mov
mov
out
or
fmull
pushf
pop
jne
mov
mov
mov
add
out
das
push
lea
out
sbb
ret
pusha
inc
xchg
lahf
xchg
in
sbb
mov
jl
shlb
mov
jmp
fs
pop
fs
pop
cltd
sbb
addr16
mov
cwtl
sbb
aad
jne
cmp
jmp
mov
sbb
rcl
xchg
mov
push
je
movsl
out
out
in
pop
loopne
lds
adc
sar
fnstenv
sbb
repz
sbb
add
adc
xchg
sbbb
dec
inc
mov
or
jb
movsb
ljmp
repnz
lret
call
popa
jnp
xor
stc
pop
cmp
cmp
add
std
mov
push
rorb
and
scas
or
pusha
mov
push
sub
loop
push
js
scas
dec
or
into
shr
int
add
out
xchg
sub
inc
sbbl
mov
jns
int3
insl
dec
sbb
pop
repnz
sbb
int
pop
rdpmc
loopne
pusha
in
cltd
sarl
inc
cmp
jl
jg
test
xchg
nop
inc
jns
jne
call
dec
inc
imul
or
nop
aas
mov
mov
frstor
add
outsb
sbb
jns
dec
jp
test
shrl
insl
cmp
fstpl
mov
scas
loop
dec
adc
dec
or
ret
and
and
daa
jnp
insb
movl
mov
sarb
subb
jp
inc
inc
lret
into
pop
sbb
sbb
outsb
call
stos
xor
into
sbb
jae
lea
cmp
fnstenv
xchg
mov
pop
movsl
jp
pop
pusha
pop
mov
pop
fs
loope
sub
lcall
lock
adc
sbb
mov
push
inc
mov
adc
xchg
xchg
or
pop
aas
adc
push
lea
loop
or
adc
mov
xchg
int3
test
notl
loop
add
sub
es
enter
add
sub
repz
sahf
out
xchg
outsl
or
cmc
inc
xchg
xor
lret
pop
dec
cmp
mov
xlat
lds
mov
lds
push
fwait
xchg
insb
cld
xchg
xchg
cmpb
pop
sbb
sbb
jb
sbb
push
cmpb
dec
shrl
adc
cmpb
pop
and
or
out
and
or
push
loop
mov
push
mov
sbb
inc
mov
enter
pop
fcomp
mov
dec
imul
jge
jbe
outsb
mulb
adc
imull
and
lret
cmpsb
cmp
test
cmp
aas
stos
push
and
bound
pop
sbb
leave
mov
mov
sbb
mov
fwait
xorl
aaa
mov
pop
sbb
mov
mov
loope
mov
and
add
fwait
movsl
fldcw
push
mov
pop
jno
mov
aas
cwtl
fimuls
xchg
jmp
mov
mov
xor
imul
jl
and
repnz
jle
xchg
pop
xor
scas
aaa
xchg
jbe
bnd
in
lcall
into
xchg
sbb
mov
cmpsb
arpl
inc
mov
cmpsb
sbb
aaa
jl
cmp
push
xchg
and
cmpsl
or
xor
add
or
jb
std
adcl
sub
cmpsl
loope
jg
idivb
sbb
mov
jmp
loopne
push
shrb
inc
xor
dec
pop
in
jmp
leave
mov
fcomi
rcl
add
ljmp
lret
jp
lods
loope
or
and
push
and
les
jnp
adc
sahf
sub
cmp
pop
andl
das
pop
adc
ds
js
mov
push
scas
dec
mov
or
and
int
data16
cmp
xchg
rdpmc
fistpl
mov
arpl
adc
or
popf
xor
sub
add
pop
js
xorb
subb
sahf
nop
xor
adc
mov
xchg
dec
add
test
out
cs
adc
aam
loop
int
ret
or
sub
jbe
stos
inc
ficomps
mull
mov
jg
xchg
cmp
mov
cwtl
add
xchg
jnp
lods
loope
push
call
ds
rorb
add
sbb
mov
push
xchg
rorb
stc
mov
repnz
jl
popf
cmp
adc
pusha
ficoms
mull
popa
xlat
inc
sbb
add
adc
cmp
ret
add
arpl
pop
mul
inc
inc
cmpsb
mov
and
mov
ffree
and
sub
xchg
lods
cmp
dec
xchg
push
and
sarb
inc
mov
roll
dec
push
mov
lods
add
xor
lods
insb
xlat
popf
sub
push
pop
movsl
insl
add
movsb
cmp
jb
ret
dec
xor
into
adc
insb
jo
mov
adc
push
jnp
sbb
adc
sbb
xorl
inc
inc
sbb
and
xor
xor
and
negb
jns
and
cmp
mov
adc
adc
jp
adc
shrl
lods
jmp
jle
test
xor
push
stc
mov
sbb
pop
and
test
test
sub
cmp
test
fld
aaa
out
vshufps
loopne
dec
lea
mov
jge
add
pusha
lods
data16
mov
mov
les
sub
roll
sbb
loope
ja
mull
cmp
das
push
shll
adc
je
outsb
adc
jno
add
mov
and
shlb
inc
push
xchg
dec
fsubl
mov
pop
rclb
test
jecxz
xor
stos
pop
dec
mov
or
push
je
push
imul
aaa
jnp
or
xor
push
sbb
cmp
lahf
jp
std
inc
dec
push
lret
sub
ljmp
iret
lcall
add
filds
fneni(8087
push
hlt
pop
je
dec
test
test
pop
mov
add
xchg
mov
in
stc
pop
push
test
fisubrl
cmpsb
movsb
mov
pop
mov
scas
xor
call
cld
in
jae
mov
and
xchg
pop
loopne
jp
repz
cltd
shr
xchg
fcom
popa
outsl
pop
in
or
fimull
jo
movsb
push
ror
test
sub
gs
sub
jmp
cmpsb
mov
push
inc
inc
jle
popa
mov
loopne
xor
fbld
pop
jge
xor
pop
sarl
jbe
scas
dec
nop
rolb
pushl
addl
adc
cmp
jp
sbb
inc
sub
push
int3
mov
std
mov
je
and
mov
rcl
repz
push
jae
sbb
js
and
xchg
int
lret
mov
fwait
rcr
ret
stc
nop
nop
mov
mov
mov
lea
push
movsw
fcoms
in
push
es
sbb
mov
jbe
pop
movsb
mov
addr16
mov
adc
call
scas
xchg
jg
push
gs
push
fildl
xchg
jle
aaa
loop
dec
pop
or
xor
xchg
lret
and
push
xchg
fldt
adc
test
jmp
out
ret
cmp
xor
xchg
pushl
cmp
mov
ds
and
inc
jbe
and
dec
int3
sub
dec
lods
inc
sub
dec
xor
jg
inc
repz
pop
lods
lock
popf
inc
sub
js
pushf
out
movsl
std
or
into
das
orl
push
sti
aas
shrl
aaa
fwait
and
jne
inc
mov
pop
arpl
test
cmp
aaa
out
out
aaa
pusha
and
addl
popa
cmp
pop
dec
loopne
popf
push
ret
call
xchg
imul
jecxz
xor
lea
add
loopne
mov
cltd
mov
xor
out
data16
lret
lcall
mov
test
jbe
outsb
jg
aam
xchg
cli
cmpsl
mov
xchg
push
mov
push
divb
mov
mov
cmp
je
add
lock
add
fucomp
sub
jge
mov
aaa
dec
iret
xor
mov
mov
cltd
clc
sbb
xchg
xchg
into
cltd
ss
std
rol
xor
es
jb
sbb
or
pop
xor
push
enter
leave
xchg
fisttps
jecxz
out
enter
fildll
add
fdivp
mov
jecxz
shlb
sbb
mov
dec
and
lods
push
jecxz
and
adc
fwait
cmp
lds
test
out
mov
cli
enter
ret
push
jns
mov
cmp
pop
push
cmp
divb
fnstcw
lahf
movsl
pop
ss
fs
scas
arpl
dec
pop
paddusw
dec
or
pop
int
push
movb
push
leave
dec
add
push
xchg
gs
jo
outsb
loope
mov
repz
fcmovne
mov
jmp
jle
inc
push
push
mov
mov
vphaddwq
push
or
pop
sub
mov
dec
daa
jae
push
push
sub
shll
out
or
mov
pop
nop
repnz
xor
push
lret
aam
sbb
add
jmp
sub
adc
scas
lods
xor
push
sbbb
cli
int
adc
fdivrs
inc
pop
das
dec
stos
lods
lock
orl
lds
in
pushf
jo
aad
pop
repnz
fstps
inc
or
je
test
sti
data16
insb
test
push
std
sub
sti
inc
outsb
int
sub
xchg
push
cltd
fiadds
data16
repz
fwait
mov
imul
inc
dec
push
xor
mov
jne
shll
pop
out
pop
data16
mov
mov
xchg
movsl
ds
icebp
dec
cmpsl
adcl
pop
sbb
pop
lret
cli
and
sbb
rcr
loope
xchg
cwtl
xchg
mov
outsb
xlat
inc
push
mov
inc
sarl
fiadds
cmp
inc
and
scas
cli
stc
lock
mov
inc
mov
loop
adc
nop
cld
lods
push
cs
dec
jl
pop
dec
mov
xchg
clc
orl
js
sbb
stos
pusha
xor
jae
icebp
ror
not
mov
push
or
ljmp
arpl
mov
sbb
out
sub
fcomip
inc
lods
xor
mov
aam
add
pop
xor
add
popa
pop
or
sub
jb
outsb
or
mov
adc
jbe
sbb
push
nop
dec
shll
mov
ret
sub
shll
setae
sub
mov
out
cmpsl
xchg
in
shlb
cmc
mov
pop
sbb
pop
xlat
ret
clc
and
lock
stos
stos
out
minps
push
popa
in
addr16
pop
xrelease
xchg
jne
lret
mov
push
xor
cmp
cli
int3
add
cltd
xchg
or
adc
mov
sub
mov
lods
jecxz
movsb
mov
mov
test
xchg
dec
test
inc
movsb
or
push
xor
pusha
inc
dec
sub
test
xchg
sbb
push
cli
push
outsb
lret
mov
pop
mov
cmpsl
mov
cmp
daa
xchg
xchg
mov
pop
insb
ret
movsb
inc
jmp
xchg
in
jbe
insl
fwait
and
xchg
add
repz
das
mov
rcrl
and
xchg
outsl
lods
pop
popa
or
jecxz
mov
or
loopne
mov
mov
pusha
int
out
ss
xchg
lahf
or
outsb
mov
fnsave
lock
fwait
cmp
pop
lea
subb
lods
push
cltd
xorb
and
dec
push
cs
lods
fsubr
xor
mov
lcall
inc
mov
cmp
clc
add
xchg
cmp
test
aad
inc
jmp
mov
push
xor
cmp
and
cmp
mov
decl
pop
jb
loop
in
inc
or
lods
out
lahf
insl
push
inc
pop
xor
loop
stc
ret
push
repz
lret
pop
pushl
repz
fwait
jae
lds
cmpsb
push
pushf
sbb
ret
jmp
inc
push
clc
ja
mov
jmp
xchg
popw
iret
lcall
insl
push
jb
insb
cmp
clc
adc
xorl
fstpt
xor
mov
jmp
fs
cmp
loopne
dec
cltd
adc
ret
clc
sub
lahf
mov
jb
insl
loop
and
jae
ja
mov
add
fwait
push
std
in
sub
xor
pop
xchg
push
stc
shll
test
push
mov
sbb
pusha
lea
cmp
pop
out
adc
sbb
cmp
fcmovnu
jmp
iret
add
push
pop
push
and
mov
xor
sahf
add
add
loopne
lahf
pop
mov
in
cld
ja
push
inc
mov
or
sbb
ljmp
bound
shrb
pop
mov
cltd
js
hlt
cmp
daa
sarl
mov
fstpl
adc
dec
mov
fsubrp
lret
popa
mov
outsl
popf
add
add
sti
or
push
aas
in
push
mov
es
repnz
sub
sub
pop
loop
pop
sbb
dec
dec
ljmp
dec
cltd
pop
inc
xchg
sbb
or
mov
pop
inc
arpl
push
movsb
mov
mov
push
jmp
imul
movsl
push
push
xchg
add
sbb
inc
sub
pusha
jnp
mov
sub
enter
cmpl
std
aam
mov
dec
inc
movsl
stos
cmp
dec
mov
push
add
cmp
rorl
dec
adc
leave
xchg
mov
mov
push
and
xchg
xchg
loop
jo
arpl
xchg
sbb
lods
lret
dec
pop
cmp
push
push
icebp
sbb
mov
lea
mov
sub
out
js
loopne
pop
xor
in
pop
inc
xchg
and
shlb
jmp
push
call
xor
adc
xor
sbbb
jl
mov
jg
adc
fwait
mov
mov
pop
stos
mov
negl
pop
xchg
sti
mov
dec
dec
leave
add
sbb
pop
mov
push
push
inc
cmpsl
push
stos
pushf
jo
sbb
mov
push
das
in
fidivl
inc
out
cmp
add
pop
fidivs
gs
jmp
adc
mov
push
mov
mov
xor
fbstp
das
popa
and
jb
pop
insl
dec
mov
hlt
jns
xchg
push
mov
pushf
inc
arpl
cli
test
sahf
jp
icebp
je
leave
out
push
mov
jle
call
xchg
aas
add
adc
jg
pop
fld
lods
mov
inc
mov
sbb
or
cwtl
into
sub
fcompl
push
and
push
jne
fisubrl
loop
add
in
js
inc
jae
fstpl
scas
sbb
es
sub
les
xchg
adc
int
pop
xchg
inc
andb
mov
cli
jl
fdivrl
stc
xchg
in
push
sub
dec
push
inc
cs
test
push
adc
dec
push
cs
ret
lahf
dec
fsubs
inc
cmp
enter
dec
imul
jmp
scas
jne
cmp
out
xchg
repz
push
stos
mov
dec
cltd
jg
cli
cmp
cltd
aad
out
sub
sub
dec
leave
cmpl
ficompl
sub
mov
outsl
leave
nop
sub
xchg
cmp
push
jmp
adc
cmp
pop
out
lret
call
xchg
cmc
xlat
or
cmpsl
mov
sahf
cmc
mov
or
repnz
aaa
sub
movsl
pop
or
xlat
sbbl
mov
cltd
fdivrp
pop
dec
sub
in
xor
inc
stc
mov
cmc
cmpb
sbb
cmp
jne
jo
ret
addr16
call
std
cmp
iret
pop
and
mov
fsubr
sbb
rorb
xor
cmp
push
movsb
sbb
pushf
mov
adc
lods
push
ret
sti
jnp
dec
adc
xchg
mov
dec
dec
sub
mov
cmpsb
psrad
push
inc
outsb
pop
orb
jle
jno
and
cmp
cmp
lret
roll
rcrl
add
mov
pop
fstl
aad
es
test
pop
dec
or
sahf
adc
push
es
fucomip
mov
aaa
jbe
pop
jp
outsb
imul
push
sub
mov
cwtl
mov
push
xor
cmpsb
fsubrl
out
adc
adc
inc
adc
sub
sbb
push
enter
test
movsb
xlat
mov
pop
push
cmpsb
ljmp
xor
add
push
test
jns
aam
dec
scas
mov
jge
cmpl
mov
cwtl
sub
rcll
jg
jae
stos
pop
push
fcompl
add
sbb
mov
push
sub
mov
add
push
shll
roll
xorb
xchg
addb
scas
jmp
movsb
pop
das
add
movsb
addr16
sub
cmp
push
dec
pop
or
xchg
jmp
fwait
xchg
cmp
xchg
js
dec
mov
shl
das
or
dec
lret
cs
xor
mov
mov
popa
nop
je
rorb
mov
sbb
xor
idivl
jns
hlt
jne
sarl
add
mov
or
jbe
mov
or
push
jle
inc
add
xchg
outsb
and
lret
pop
ret
fsubl
jl
les
xor
in
cmp
mov
and
fdivr
fcomp
std
push
fidivrs
cltd
loope
xchg
loope
orb
dec
in
pushf
xchg
shll
dec
jo
in
jmp
lods
lahf
test
sbb
adcb
sbb
sbb
iret
push
lcall
jl
dec
hlt
push
cmp
xchg
pop
out
lret
jl
repz
cld
mov
test
jne
outsl
std
shll
nop
cmp
push
and
hlt
dec
subl
push
leave
and
xchg
sbb
cmp
cmpsb
ds
jne
incb
add
aaa
pop
addr16
sub
cmpsw
push
pop
cld
cmc
cmp
insl
repz
aam
pop
push
mov
mov
or
xor
scas
ss
sbb
std
push
aas
jb
and
out
add
add
push
lods
dec
and
js
cld
inc
shr
pop
pop
mov
cmp
jecxz
icebp
loop
mov
outsb
ljmp
cmp
test
pop
adc
jno
leave
jbe
popa
mov
jno
inc
jb
gs
dec
fsubp
xor
mov
popa
xor
fs
mov
mov
je
xor
jbe
out
cwtl
sbb
mov
movsl
and
fstp
inc
ret
add
mov
push
sbb
dec
out
fwait
insb
jb
nop
mov
cltd
or
mov
icebp
mov
pop
mov
test
and
push
into
scas
mov
insb
push
mov
or
in
jno
movsb
ja
jp
jg
adc
out
sbb
adc
xchg
rep
rorb
iret
packssdw
in
and
xchg
into
adc
dec
push
icebp
and
jp
jnp
pop
ror
int
mov
cmp
push
xchg
dec
xchg
das
jae
sbb
in
push
and
imulb
sub
jne
cmc
je
daa
test
push
and
xchg
cmp
or
mov
int3
adc
xor
jg,pt
rcll
test
cmp
stos
mov
inc
xrelease
and
dec
mov
loop
mov
stos
or
sub
mov
ss
mov
push
dec
data16
in
ljmp
data16
sub
mov
adc
mov
hlt
ret
xchg
pop
mov
push
les
xor
dec
loope
dec
mov
push
fcompl
and
out
pop
nop
inc
jnp
and
push
push
dec
aad
adc
pushf
in
xor
push
sarb
add
cwtl
inc
push
imul
sbb
jns
cli
cld
lret
add
xchg
test
test
lcall
and
mov
sub
cli
pop
js
inc
gs
faddp
and
jo
leave
scas
sbb
or
adc
sub
ss
xor
rclb
popa
loope
ja
and
jno
inc
cmp
add
sbb
mov
shrl
es
push
outsl
push
lahf
stos
shrl
mov
ret
stos
mov
pop
cmp
jl
or
adc
xor
dec
enter
push
stos
ds
aad
jl
push
sbb
xchg
ljmp
subb
lcall
std
inc
and
xchg
push
lret
jo
ds
jnp
sbb
sbb
cmpsb
cltd
add
mov
sahf
xchg
fildl
xchg
xchg
dec
and
jp
or
call
mov
lds
pop
mov
mov
sub
add
test
js
xchg
fmuls
and
shrl
dec
std
mov
cmp
fucomip
test
insb
sahf
pop
xor
int3
jne
arpl
pop
cmc
fldcw
dec
xor
mov
and
scas
mov
je
push
sbb
mov
mov
fldcw
push
stc
sbb
repnz
pop
xor
fcmovb
jnp
jne
dec
iret
test
sub
scas
cmp
mov
mov
cld
dec
xchg
lods
imul
mov
mov
stos
inc
icebp
std
popa
std
ret
jnp
shll
dec
pusha
aam
adc
pop
jge
pop
mov
mov
mov
ljmp
mov
lcall
cmp
lea
dec
aam
pop
cmp
mov
les
int
gs
lods
xchg
push
pop
loopne
mov
int
dec
mov
push
jle
notb
add
sub
imul
pop
push
shl
cld
or
cmp
call
add
jne
cmc
outsl
lods
repz
fcoml
xor
into
sub
jnp
sbb
cmp
and
pop
push
leave
or
xchg
test
js
pop
sbb
sti
loopne
inc
nop
arpl
icebp
or
and
sub
shll
xchg
dec
xor
cs
cmpsb
dec
por
pop
xor
jle
rolb
or
adc
fwait
and
xchg
mov
repnz
insl
push
fimuls
sbb
mov
test
lcall
dec
cmp
rcll
shll
or
mov
sbb
mov
pop
popf
pop
in
inc
mov
dec
lea
adc
xchg
pop
cs
lret
cld
mov
leave
int3
idivl
and
es
xchg
lds
jo
addr16
stc
xchg
jl
inc
test
mov
scas
movsl
mov
insb
cmp
dec
inc
cmp
jns
in
cmp
cmpsl
scas
es
or
inc
ret
int
repz
pop
or
mov
mov
pop
pop
cmc
hlt
out
mov
frstor
jae
and
cmp
and
jg
repnz
add
fimull
push
imul
adc
adc
rorl
push
outsb
add
lock
lret
cmc
cmp
mov
repnz
sbb
xchg
xchg
sbb
pop
or
ljmpw
jmp
sbb
fsincos
les
adc
sarl
outsl
shrb
mov
or
in
cmp
jns
fcoms
add
aam
ficomps
inc
and
mov
cli
int3
and
cltd
add
cs
jecxz
std
add
stos
jnp
ret
in
lcall
rorb
sub
pop
fsts
xchg
or
inc
enter
mov
sub
dec
cmc
movsl
test
cli
jl
xchg
jge
cmc
jecxz
stc
cmp
xor
insb
sbb
mov
sbb
iret
mov
adc
in
cltd
or
dec
jmp
sarl
arpl
inc
sbb
sbb
lds
cltd
out
and
cli
push
jg
jns
rcll
push
cmpsl
push
dec
icebp
loopne
mov
add
xlat
xor
fnsave
xor
lahf
bound
xor
xchg
jmp
daa
cmp
adc
mov
mov
dec
mov
pop
shrb
std
dec
int3
int
lcall
scas
test
int3
pop
cli
pop
sbb
mov
xor
add
aam
cwtl
negl
pusha
in
jmp
add
lcall
in
pop
inc
into
aad
push
fstpl
push
hlt
call
mov
jmp
dec
sti
fwait
jg
xorb
hlt
pop
mov
inc
mov
inc
andl
rcl
icebp
lock
shlb
mov
rol
mov
pop
fdivrl
mov
adc
add
mov
test
sarb
fwait
mov
mov
adc
lea
stos
rclb
mov
sti
fnstsw
xor
movsb
gs
je
loope
into
int3
mov
mov
imul
adc
inc
cltd
adc
shlb
rcrb
sub
push
xchg
mov
ljmp
and
xchg
ds
and
scas
pusha
push
push
stos
or
pop
enter
jbe
sbbb
inc
xchg
inc
dec
push
or
mov
push
cltd
xor
cmp
or
jmp
in
js
cs
loope
es
pop
push
cltd
fincstp
adc
add
lcall
aam
das
pop
jae
movsl
js
or
mov
mov
cmp
scas
jne
and
cld
loop
mov
mov
icebp
or
add
pusha
aad
pop
mov
sti
loop
sub
adc
daa
aas
cs
adc
scas
fildll
cvtps2pi
das
insl
out
js
and
mov
loope
insl
jnp
call
aam
pusha
addr16
inc
out
xor
dec
mov
adc
ret
xchg
pop
sub
sbb
push
cld
jl
int3
loop
ret
cs
leave
dec
adc
cmpsl
mov
and
int3
shrb
and
xchg
jmp
inc
adc
sub
test
insl
push
adc
repz
jns
lret
mov
fldcw
adc
cmp
xor
pop
movsl
xor
adc
arpl
mov
aam
mulb
fisttpl
movsl
and
pop
out
dec
jbe
repz
push
hlt
mov
jns
inc
mov
dec
rcrl
ret
xchg
scas
repz
inc
dec
pushf
mov
lret
insl
stc
push
cmpsb
fdivs
aam
pop
int3
loope
mov
cmp
sub
xchg
pop
stc
and
bts
mov
cmc
in
nop
jae
xchg
insl
inc
cwtl
out
mov
cmc
mov
pusha
mov
stos
adc
jnp
dec
cmp
out
fucom
test
mov
mov
xorl
lds
push
jb
sbb
pop
scas
test
lahf
cli
push
and
jo
fs
xchg
pop
add
xor
pop
mov
test
sub
mov
or
ret
mov
push
xchg
test
shrb
sahf
xchg
or
fistps
fldl
testl
push
enter
lock
mov
push
lods
jno
mov
movsl
daa
push
jge
jno
add
test
sbb
lea
sbbl
or
xchg
test
pop
fistps
adc
push
loopne
mov
sbb
cmpsb
cwtl
xchg
xchg
pusha
lea
xor
push
jmp
or
outsb
bound
out
nop
sbb
rclb
call
sahf
lods
arpl
xchg
cli
mov
fdivrl
lret
cmp
xor
inc
ret
jg
or
mov
divb
xchg
jne
push
stos
and
fwait
das
mov
add
adc
call
inc
jp
pop
or
adc
dec
rcll
arpl
jb
lret
lcall
es
mov
les
mov
hlt
mov
cmp
mov
jne
scas
fidivrs
sbbb
test
mov
add
jns
notl
mov
lcall
arpl
sbb
sub
mov
int3
jge
mov
dec
dec
mov
inc
fisubl
pop
mov
fcoms
aaa
inc
fsubrl
leave
sub
mov
xchg
sbb
popa
sub
test
jo
stos
pop
cli
cmp
rorl
roll
jbe
xchg
outsb
add
xchg
cmpsb
call
daa
inc
test
jno
sbb
mov
sub
pop
xchg
outsl
sub
sub
push
push
out
sarb
imulb
roll
lds
push
cmp
sar
mov
fstpt
inc
icebp
push
xchg
mov
dec
aaa
mull
add
pop
mov
xchg
push
dec
xchg
inc
ret
out
ds
pop
sbb
cld
icebp
mov
mov
fisubs
call
test
inc
inc
mov
pop
xchg
inc
mov
mov
fisubl
jbe
sahf
push
add
pop
or
sub
xchg
and
sub
dec
and
sbb
jne
movsb
lret
pop
or
push
inc
xlat
lahf
and
mov
ljmp
add
add
sub
adc
sahf
jne
or
jge
imul
out
test
outsb
ss
inc
ret
or
scas
scas
xchg
cld
xor
sbbb
adc
mov
out
out
aad
sub
in
jns
jne
pop
cmp
inc
or
adc
xchg
pushf
or
out
jle
shlb
xchg
ret
xchg
jp
cs
rcll
dec
scas
repnz
xchg
dec
sub
movl
mov
out
in
inc
iret
fs
fwait
sbb
add
dec
movsb
push
or
enter
sbb
jb
cmpsl
mov
fldenv
push
mov
cli
movsb
cmpsl
or
inc
jo
adc
shr
xchg
adc
repz
mov
mov
push
mov
stc
pop
cmp
test
mov
aam
sub
shrb
sub
jns
mov
in
data16
lea
mov
mov
mov
insl
add
cwtl
jne
mov
stc
mov
inc
fwait
pop
push
inc
rorb
jl
fdiv
pop
and
dec
mov
and
pop
gs
punpcklbw
mov
xorl
cmp
xor
pop
add
fs
stos
inc
sub
inc
mov
cmp
push
bound
and
sub
sbb
into
sub
fnstcw
cld
sub
mov
mov
arpl
imul
mov
stos
sub
aam
lcall
pop
adc
out
ret
pushf
add
jge
data16
inc
imul
add
lock
lret
or
xchg
jmp
insb
loope
mov
out
sub
jns
jnp
xchg
jle
fisttpll
mov
fcoml
in
cli
addl
mov
in
adc
lret
xchg
or
jnp
lret
dec
aas
roll
mov
icebp
inc
movsl
data16
fildl
sbb
ret
mov
in
or
lahf
xor
repnz
test
in
or
sbb
xchg
repz
es
inc
push
push
sbb
ficomps
sub
scas
mov
jmp
fistpll
testb
ret
jp
fs
push
mov
cmpsb
xor
pop
cmp
sub
lcall
xor
adc
cli
and
in
and
loope
xchg
and
xchg
jp
stos
cmp
or
clc
add
mov
mov
enter
das
jns
scas
jne
in
ss
or
mov
jbe
or
mov
pop
loop
fisubl
dec
cmpsb
mov
and
pop
xor
call
mov
jbe
xchg
andl
inc
fists
nop
sbb
inc
sbb
pop
xchg
dec
push
je
jno
sbbl
add
jbe
into
fstp
fbstp
and
stc
mov
inc
pop
bound
jge
insl
fisttps
sbb
push
push
sub
mov
xlat
gs
add
mov
test
jb
leave
test
clc
cmpsl
cltd
imul
and
mov
repz
sbbb
cmp
aam
rclb
adc
push
and
lods
ds
jno
dec
and
mov
mov
stc
repz
movsl
mov
bound
lock
push
dec
mov
add
adc
mov
mov
jp
out
inc
pop
mov
jge
xor
pop
sbbl
sarl
xchg
mov
sbbb
lea
push
fistpl
jl
lret
adc
rorb
mov
lods
xchg
and
sub
aaa
jl
aas
daa
insb
lcall
jbe
sub
addb
xchg
cltd
daa
int3
popf
bound
addb
mov
ja
call
mov
sahf
and
add
sbb
lds
sti
sbb
bts
aad
ret
dec
mov
cmp
andl
rolb
push
inc
icebp
dec
das
mov
xor
adc
cmp
int
sbb
lods
mov
dec
arpl
mov
mov
hlt
push
cli
decb
andl
sti
inc
xor
dec
jge
mov
stos
cmp
hlt
aas
lcall
mov
push
pop
popf
insb
ret
xchg
push
fwait
jno
shll
lcall
and
iret
std
stos
lods
mull
pop
in
out
out
icebp
test
jnp
fildl
push
stos
mov
mov
ss
cmc
movsb
rol
aaa
std
jg
iret
inc
gs
mov
xor
xlat
pop
fsubrl
hlt
sbb
fcoms
jbe
int
outsb
popa
test
cmp
roll
mov
xor
adc
adc
push
insb
mov
jl
mov
iret
pushl
out
add
fcomps
sbb
or
add
pop
pop
pushf
inc
mov
lea
shlb
mov
inc
in
pop
int
inc
cmp
imul
adcb
xchg
mov
push
ljmp
dec
out
repz
pop
pop
and
mov
mov
scas
mov
scas
movsl
mov
xchg
mov
loopne
dec
xchg
fnstenv
dec
push
ja
push
jno
stos
pop
mov
scas
jne
movsb
in
cli
push
mov
jne
xor
inc
fimuls
out
or
adc
lcall
adc
stc
push
xchg
mov
hlt
call
iret
jae
lcall
push
xor
mov
loope
dec
push
sub
sbb
cmp
add
jmp
jbe,pn
jb
cmp
rcll
pushw
xor
jb
mov
sub
cwtl
ror
sub
or
das
xor
movsl
dec
jecxz
test
dec
cmpsl
outsb
mov
inc
icebp
mov
icebp
or
push
ss
arpl
push
lea
and
aad
mov
cmp
loope
push
cmp
xchg
jae,pt
mov
das
sub
add
test
nop
int3
jno
mov
rcll
mov
lcall
mov
jg
adc
sbb
sbb
scas
xlat
cs
mov
push
mov
xchg
adc
xor
es
push
mov
sbb
les
inc
xlat
sub
arpl
out
test
test
sahf
adc
inc
pop
into
mov
xor
out
in
ds
xchg
daa
xlat
push
jnp
add
add
bound
aam
mov
stc
iret
rorb
test
sahf
mov
jo
cli
mov
adc
lock
adc
sbb
loop
or
and
mov
xchg
xor
iret
ret
push
push
sbbb
xchg
cmpsb
jle
loope
in
outsb
mov
fmuls
movsb
inc
dec
addb
das
loope
sub
dec
pusha
aaa
je
mov
adcb
xchg
sub
das
gs
mov
jle
stos
mov
movsb
inc
popa
out
hlt
sbb
xorl
shl
inc
or
pop
mov
or
xchg
push
xchg
push
in
adc
imul
push
mov
loope
adc
notb
push
imul
or
jnp
jne
faddl
nop
sbb
cli
and
mov
js
sbb
xor
pop
and
pop
jae
adc
inc
push
leave
out
movsl
ja
lret
les
pop
lods
cmpsl
push
mov
out
sub
std
subl
aas
jp
fs
out
in
jae
dec
rcrl
xlat
mov
mov
dec
sbb
xor
pop
push
pop
mull
jle
lahf
fdivrs
cld
fisttps
xchg
pop
rcll
lcall
xlat
jge
push
aam
adc
xor
out
aas
cmp
mov
pop
lret
pop
int3
cmpsb
push
fwait
sub
insl
jae
xchg
xchg
sbb
cmp
std
insb
loopne
or
sub
jno
cmp
pop
pop
add
lcall
rcrb
or
pop
jno
rcr
int3
cli
push
add
pop
shrl
lret
jge
pop
inc
out
inc
adc
ja
xchg
mov
mov
hlt
jge
push
add
xchg
add
mov
repnz
bound
out
inc
mov
lret
jmp
xchg
jecxz
loope
and
mov
pop
or
xor
negl
adc
std
sbb
das
inc
repnz
scas
movsb
popa
inc
inc
add
mov
sbb
sub
pop
ds
xor
fistpl
mov
adc
fcomp
inc
ljmp
mov
xor
xchg
outsb
ret
sbb
push
test
mov
test
or
push
idiv
jp
repz
outsb
sub
out
and
jb
inc
mov
stos
push
shrb
sub
std
or
xchg
adc
push
ljmp
mov
or
mov
shrb
bound
fwait
loope
add
mov
cmp
mov
repz
popf
les
mov
cwtl
add
mov
das
sub
pop
mov
ss
into
mov
or
jbe
icebp
jnp
aad
popa
jno
sahf
orl
xchg
lret
or
mov
das
stos
mov
xchg
pop
xor
test
xor
add
in
into
rcr
insl
gs
lea
inc
dec
push
and
adc
pusha
sub
sbb
mov
int3
sahf
xchg
adc
mov
and
fwait
mov
add
mov
xchg
dec
mov
adc
adc
nop
pop
lock
cwtl
daa
movb
clc
xchg
pop
push
xor
and
adc
sub
jmp
ja
adc
jns
rclb
pop
push
mov
cmp
in
cmp
push
sub
insb
lods
pop
sub
add
dec
jmp
enter
pop
xor
mov
mov
jg
sub
loope
into
movsb
popaw
les
sub
add
jnp
mov
xchg
pop
hlt
in
popl
repz
jmp
popf
or
sbb
in
mov
out
int
movsl
cltd
in
and
and
addr16
sub
in
mov
scas
cmpsl
imul
pop
adc
fldl
jp
out
stos
lahf
cwtl
pop
cli
dec
adc
push
mov
fdivrl
jge
or
jns
shll
cmc
cmp
sub
mov
add
mov
rolb
dec
popl
mov
sbb
push
std
jnp
pop
int3
xchg
mov
loope
mov
mov
xor
or
shll
sti
cmc
nop
dec
mov
test
mov
sbb
pop
enter
xor
jmp
pop
mov
jno
jle
mov
sub
mov
lret
repz
imul
lahf
in
inc
cmpsb
scas
js
shrl
fcom
or
lahf
mov
stos
outsb
popf
inc
outsl
cld
sahf
pop
push
popf
pushl
pop
or
adc
cld
repnz
cwtl
mov
sub
mov
mov
jns
dec
jne
fisttps
repz
insb
sub
pop
iret
push
sbb
mov
mov
loopne
sbb
in
out
std
adc
adc
out
jns
pop
pop
jne
push
adcl
push
fdivr
cmpb
cld
add
mov
push
int
or
sbb
popa
daa
fsubrl
pop
xchg
pushf
imul
xor
push
push
shrl
aas
xchg
mov
inc
mov
add
fadd
mov
scas
out
pop
int
xchg
stos
xlat
jl
add
add
pop
popf
and
jg
repnz
cmpsl
cltd
pop
jae
jnp
movsl
mov
aaa
mov
cmp
jmp
cwtl
sahf
jl
lcall
popf
push
aas
out
and
sti
sbb
js
xlat
shlb
mov
je
adc
aad
test
addb
or
aaa
and
fisttpl
stc
fs
and
xlat
enter
stos
daa
jnp
fnsave
jg
ret
push
cltd
jge
adc
nop
jbe
sub
add
mov
jp
jmp
mov
mov
in
insb
out
cmp
sub
jl
leave
clc
int3
xor
jb
je
dec
jge
out
rcl
mov
addl
stos
inc
fnstcw
mov
inc
ffreep
sbb
push
pop
dec
xchg
sahf
cmp
rorl
push
jge
pop
add
js
push
pop
lcall
lahf
ret
jmp
dec
roll
idiv
stos
mov
pop
mov
sbb
pushf
sbb
cmpsl
aad
mov
ds
and
mov
xor
mov
jmp
push
dec
mov
leave
lcall
adc
pop
inc
in
mov
std
dec
lret
jae
pop
sub
frstor
in
cmp
int3
fwait
cwtl
mov
and
push
shlb
cmp
mov
mov
in
filds
mov
repnz
lock
xor
add
mov
mov
fmull
mov
jg
negb
fwait
aas
xorb
cmp
sub
xlat
insb
fneni(8087
xlat
iret
inc
jo
adc
movsl
mov
mov
loop
sub
push
adc
pop
std
clc
icebp
pop
push
push
popf
aas
subl
cs
dec
jnp
fiaddl
fs
sbb
jae
mov
loopne
repz
jnp
insb
into
ret
jmp
push
lods
jge
pop
cmp
clc
fldenv
xchg
xorl
mov
shr
mov
test
shll
imul
adc
sbb
xchg
pcmpeqw
in
leave
mov
fwait
add
add
shrb
test
mov
jo
nop
push
mov
pop
lret
mov
mov
int
pusha
sbb
push
pop
xor
cmp
pop
jmp
outsb
xor
jge
pop
mov
add
in
int
push
sbbb
div
jecxz
cmp
add
shlb
outsl
iret
push
bound
add
add
mov
xor
in
imul
loop
test
leave
cmp
loope
mov
lods
xor
je
lea
sub
jno
outsb
dec
xchg
icebp
sahf
cwtl
mov
add
mov
arpl
mov
jns
rolb
push
shrb
pop
cmp
xor
movsl
jecxz
fstl
insl
mov
sub
jne
push
xchg
clc
jne
sub
xchg
cmc
cmpsb
loop
data16
push
dec
lret
popa
in
mov
sti
sbb
fwait
jbe
aam
lock
and
arpl
cmpsb
cmpsb
jbe
mov
push
push
push
shll
adc
mov
mov
fsubs
lahf
mov
into
lock
sarl
adc
jno
mov
popf
jo
adc
lods
lea
and
popf
bound
mov
mov
bound
mov
pop
dec
jmp
push
lcall
int
lock
loopne
repz
and
xchg
ja
push
pop
int3
lret
mov
js
cmp
sub
stos
push
adc
ficompl
mov
popa
pop
cmp
int3
in
sub
push
dec
mov
faddl
xchg
mov
int3
arpl
aaa
stc
in
xchg
fsubrs
cli
lret
das
pop
repnz
arpl
sub
imul
dec
add
outsl
mov
or
or
or
out
loope
pushf
cmp
sbb
cmp
and
lea
dec
pop
push
ds
fnstenv
fs
test
out
ljmp
adc
cmp
adcl
add
outsb
jae
and
arpl
insb
sub
iret
lret
sub
jnp
sbb
and
push
ljmp
scas
dec
pop
adc
lcall
imull
xchg
inc
lret
loopne
negb
xor
ja
ja
ret
or
shrl
inc
pushw
pop
hlt
pushf
data16
popf
xlat
into
xor
mov
out
popa
xchg
lods
mov
jbe
outsl
ret
cld
das
jb
pushf
sbb
or
adcb
aas
and
inc
or
mov
adc
enter
push
subb
push
or
lret
push
inc
pop
add
lock
xor
movsb
cwtl
les
aas
loop
fs
pusha
xchg
or
xor
insb
repnz
xorl
inc
not
fcoms
cmp
xor
or
add
push
rorb
icebp
add
mov
sub
inc
jmp
and
jbe
mov
rorl
insl
dec
push
jl
fcoml
sarl
xlat
test
push
lock
mov
sub
pop
and
lods
or
mov
xchg
add
test
pop
pop
popa
pop
cmp
pop
repz
xor
das
insl
loope
mov
aas
pop
test
lds
ds
push
mov
dec
test
int
sahf
out
mov
xor
mov
pop
mov
xor
shl
icebp
es
enter
mov
out
popf
in
mov
mov
sbb
xor
mov
pushf
mov
jmp
push
jp
insl
mov
faddl
std
loope
ss
xor
fimuls
fwait
xchg
inc
pop
test
inc
shll
sub
popa
add
pop
jmp
bound
lret
shufps
lods
shlb
mov
cmp
nop
sbb
les
in
dec
pusha
mov
arpl
sub
mov
sbb
leave
icebp
adc
cli
hlt
int
out
mov
mov
imulb
sub
push
lock
int3
test
cmp
lods
or
ljmp
pop
pop
add
sbb
add
into
mov
scas
jns
aad
loop
arpl
sbb
loopne
out
ljmp
or
sbb
adc
push
push
mov
xchg
out
bnd
adc
jle
push
and
and
ficoml
sar
jno
adc
sub
cmpsl
js
ss
adc
fs
xchg
ja
mov
int3
js
ror
dec
loopne
fsts
movsb
push
mov
insb
sub
mov
sbb
aad
aaa
in
dec
in
inc
loopne
xor
imul
daa
cwtl
loop
ficoml
cmpsb
push
cmpsl
loope
out
pushf
pop
jecxz
pop
lcall
lret
rcr
push
lods
pushl
fs
add
out
inc
dec
jb
sbb
mov
and
fs
mov
shr
pop
aas
mov
and
inc
daa
mov
cmp
in
inc
iret
add
daa
lret
int3
pop
iret
push
nop
pop
cmp
cmpb
test
out
mov
jae
into
sti
xchg
cmp
mov
xchg
cwtl
push
mov
repnz
sti
icebp
push
cmp
dec
jl
xchg
dec
mov
xor
cmp
ss
sub
movb
test
push
inc
repz
xchg
push
ret
jno
xlat
out
mov
xor
push
xor
jmp
popa
adc
inc
fldl2t
add
and
mov
test
pop
mov
xchg
and
sbb
mov
inc
push
int3
hlt
outsl
lods
xlat
jl
sbb
in
inc
pusha
ret
popa
pop
pushl
mov
dec
xchg
ret
in
pop
mov
test
ds
xor
stc
xchg
xlat
xorl
fsubrl
mov
jle
lahf
mov
push
rcrb
popw
stos
repz
enter
and
pop
xchg
mov
inc
jge
pop
push
mov
inc
jae
fstl
cltd
jmp
std
push
push
or
loopne
dec
lret
push
lods
sbbl
lock
or
mov
cmp
nop
int
xor
stos
rorb
clc
jle
cmp
cmpsl
jp
push
pop
popf
mov
inc
dec
add
gs
orb
add
pop
clc
fldcw
bound
enter
into
roll
stc
cmp
stos
mov
and
imul
sbb
push
mov
mov
leave
inc
pop
jmp
mov
add
test
jmp
stc
mov
dec
nop
xor
bound
aas
aam
pushl
inc
xchg
add
xlat
or
jns
pop
jns
and
push
shrd
clc
or
dec
sbb
ret
les
xchg
lahf
popa
movsl
adc
jecxz
fildl
and
mov
jge
insl
push
frstor
imul
dec
ljmp
mov
dec
mov
mov
pop
mov
inc
mov
insb
insl
andb
mov
je
xor
popa
fidivl
loope
mov
cmc
repnz
mov
shlb
mov
jg
fmull
in
xchg
push
jle
inc
mov
mov
inc
xchg
jg
jnp
jg
repnz
jb
jns
mov
imul
sbb
lea
test
out
inc
cmpsb
lahf
lret
test
xor
add
adc
or
ror
arpl
xchg
das
scas
mov
push
add
aas
adc
decl
in
dec
adc
mov
pusha
push
dec
call
mov
imul
out
inc
cli
push
cmc
jbe
add
dec
outsb
and
push
into
cld
fisttpll
pop
pop
pushf
and
and
inc
das
mov
in
js
jnp
scas
out
xchg
dec
inc
xor
push
daa
xor
imul
cld
fisubrl
pop
popf
out
adc
es
cmp
mov
sti
pop
dec
jecxz
in
cmpsl
adc
xchg
fnstsw
and
push
mov
jnp
jg
test
roll
cld
mov
cmpsb
addr16
mov
inc
jns
adc
insb
sbb
stos
dec
test
cltd
lret
push
mov
xor
mov
stos
cld
pop
daa
rcrl
loop
inc
imul
jnp
xor
xchg
lahf
jp
mov
cmp
push
mov
js
mov
jle
mov
cmp
insl
in
xchg
clc
add
scas
adc
push
js
cmp
cmp
jp
sbb
scas
mov
mov
mov
xor
mov
sahf
addb
movsl
inc
add
pop
xchg
stos
push
and
mov
gs
mov
sbb
pop
int
lock
mov
cwtl
test
ficoms
jbe
mov
dec
aam
cmc
lea
arpl
das
fisubl
loop
inc
scas
mov
mov
lahf
leave
shl
or
mov
fdivl
pop
pop
dec
xor
xorb
mov
ret
mulb
or
jb
add
push
lds
leave
pushf
jb
ret
mov
loop
lock
sbb
les
negb
dec
les
xor
mov
hlt
out
pop
outsl
add
and
xorb
xchg
sub
sbb
je
fists
lret
ss
and
xor
xchg
into
dec
leave
and
or
movsl
push
or
dec
int
mov
cmp
dec
xor
stos
stos
sbb
xchg
jne
sub
ret
in
fisubs
scas
repz
shlb
mov
das
jmp
jb
adc
mov
xchg
clc
mov
repz
dec
mov
pop
pop
push
sbb
inc
mov
mov
jmp
and
and
mov
mov
in
inc
mov
dec
xchg
out
nop
mov
adcb
subl
xchg
enter
sub
mov
sahf
or
cmp
leave
or
xor
inc
sbb
cmp
jne
jmp
jo
dec
inc
cmp
and
lret
mov
ja
mov
push
sahf
gs
lret
fadds
and
test
add
sarb
inc
shll
ret
sbb
xchg
mov
xor
loope
xchg
or
xchg
push
data16
js
fstps
fsubl
jns
ss
ror
mov
or
shlb
or
aas
cmp
jle
pop
roll
mov
mov
loopne
inc
dec
shl
inc
push
adc
movsl
mov
xor
dec
lret
lock
sub
lahf
testb
cwtl
add
loope
inc
and
push
sub
fcoms
push
jge
stc
out
push
test
and
cmpsl
repnz
xchg
fwait
push
jmp
push
pmulhw
cmpsb
ret
fs
out
sbb
mov
xlat
add
repz
dec
or
ja
lods
pop
dec
adc
add
ds
lods
adc
sti
or
cmp
jne
jnp
jle
imul
stos
pushf
jbe
mov
les
dec
es
cld
mov
sub
testl
in
aad
lcall
dec
adc
pop
mov
hlt
push
out
scas
add
das
ljmpw
xchg
aas
out
iret
in
and
mov
setb
or
xor
xor
jb
mov
sub
push
mov
mov
push
add
mov
ds
jmp
mov
add
xor
data16
lcall
sub
mov
xor
adc
push
xlat
add
dec
cli
sub
mov
xlat
or
insl
or
icebp
bound
outsb
mov
aaa
jecxz
inc
xor
ds
jl
bound
push
or
adc
push
inc
fisubs
in
push
ljmp
xchg
mov
mov
mov
push
sahf
dec
sbb
aam
fs
fcmovu
push
xchg
xchg
test
in
xor
sub
out
repz
outsl
jg
lea
sbb
sbb
sar
bound
jbe
or
inc
dec
roll
insl
mov
rcll
mov
jl
jne
mov
pop
push
sbbl
sbb
daa
push
mov
inc
arpl
jecxz
fcomps
jnp
jecxz
adc
jecxz
mov
inc
add
sub
jmp
sbb
pop
pop
jg
divb
xor
jge
fldenv
pop
fs
icebp
add
or
outsb
outsb
mov
lock
out
pushw
mov
mov
lcall
jp
mov
mov
sub
add
and
bound
and
or
jmp
test
mov
jns
sahf
pusha
or
std
aad
add
insl
pop
loope
call
mov
movsl
fildll
sbb
mov
movsl
insl
loope
std
nop
push
fwait
aas
aas
jne
out
push
cmc
and
sar
and
mov
nop
addr16
or
mov
inc
mov
aam
mov
inc
jle
aad
add
and
or
add
dec
cs
mov
fwait
jno
xchg
push
cmp
lods
das
push
fwait
cltd
xor
gs
test
test
daa
jae
daa
or
adc
test
xchg
faddl
sbb
adc
mov
mov
int3
mov
push
mov
mov
inc
xlat
inc
clc
xchg
jnp
jae
inc
sub
aad
inc
xchg
lods
js
jae
mov
cmpb
mov
mov
mov
lds
cmpsb
xchg
lds
cltd
sar
sbb
dec
mov
fcomps
add
mov
jne
jns
out
into
adc
mov
mov
test
pop
sarb
clc
lret
shrl
test
mov
push
cmp
jnp
loop
fdivp
stc
jb
xchg
adc
and
push
inc
jae
lret
dec
push
pop
push
cmc
out
movsb
es
outsb
sbb
movsb
aas
pop
mov
scas
inc
xchg
push
push
pop
rcll
lcall
add
dec
nop
shlb
mov
xchg
sti
lock
push
mov
rcll
je
mov
test
cmc
mov
repz
movsb
pop
js
push
mov
sub
mov
pop
dec
jge
mov
push
aam
iret
leave
xchg
ljmp
cs
dec
jns
xchg
lahf
in
sub
cmp
pop
adc
or
imul
vpmulhw
sbb
push
in
sti
cli
and
jne
hlt
xchg
cmpsl
xorl
xchg
push
xor
add
xchg
sahf
mov
cmp
mov
pop
pop
pop
movups
mov
push
jns
push
addr16
std
push
xlat
jno
mov
jp
jg
mov
jae
pop
shrb
adc
add
xchg
mov
out
xor
push
cmc
stc
pushf
loop
enter
mov
pusha
scas
sub
in
pop
mov
and
inc
mov
sub
mov
ds
das
xor
sbb
loop
ja
fiadds
flds
popf
rcrl
mov
dec
out
cmpsl
popa
push
std
and
xor
xor
pop
das
scas
xor
std
aaa
imul
movsb
dec
sbb
push
stos
sub
repz
popa
dec
mov
xchg
mov
lret
shll
push
mov
push
and
xlat
add
js
or
and
mov
int3
dec
or
ljmp
dec
bound
inc
mov
push
in
repnz
jle
int
pop
lcall
mov
or
jecxz
adc
xchg
loopne
movb
jmp
cltd
jnp
arpl
aam
mov
hlt
hlt
and
cli
ret
xchg
subl
ret
mov
jge
mov
call
cmpsb
push
mov
sbb
data16
aam
dec
repz
dec
rorl
cltd
jne
repnz
sub
cld
loop
adc
dec
xchg
in
mov
or
fisubl
inc
gs
dec
repnz
fisubrl
mov
jnp
xchg
jecxz
xchg
arpl
cmp
call
in
shll
int3
sub
add
and
sub
cmpsb
or
add
cmpsb
and
ret
lock
fcmove
punpckhdq
mov
cld
dec
pop
sub
loope
cmp
jmp
fdivrs
mov
jmp
xchg
repnz
insl
mov
xor
adc
in
add
outsl
push
jb
mov
pop
addb
outsl
insb
cmp
lret
in
aaa
pop
jecxz
xor
fbld
out
lods
jmp
push
adc
mov
lock
not
xchg
sub
sub
mov
xor
xor
dec
repnz
mov
adc
lea
jne
and
mov
sarl
pop
es
addl
sub
jp
push
mov
push
dec
cmp
lahf
dec
aas
mov
rclb
pop
call
ds
jl
roll
sub
and
aaa
lret
jns,pn
cli
inc
mov
jecxz
sub
push
fildl
repz
cmp
movsl
xchg
sub
sbb
into
cli
or
dec
jb
popl
or
in
pop
mov
dec
pop
sub
scas
jno
leave
xlat
mov
cmc
leave
aas
shrb
pop
imul
mov
and
outsl
hlt
jmp
inc
out
aam
fimull
int3
adc
mov
xor
mov
gs
sbb
ljmp
and
lret
push
jae
jmp
pusha
cmpsl
sub
dec
ss
fisubrs
outsl
and
test
nop
cwtl
in
je
add
popf
xchg
movsb
xchg
xor
lock
testl
jge
mov
sbb
pop
std
mov
mov
and
call
cmp
loope
adc
aad
or
add
testb
jmp
jno
out
xor
ret
push
icebp
es
test
push
jg
test
mov
and
or
add
mov
mov
push
data16
lahf
cwtl
rcrl
aam
mov
cmpsl
pop
fistps
and
cmp
add
cmp
cmpsb
mov
xchg
inc
mov
lea
dec
pushl
jle
or
out
dec
dec
mov
mov
pop
lds
or
xor
js
test
jp
jno
cmp
mov
add
mull
aas
fistpll
push
lret
aas
pop
loop
cmpsb
daa
aaa
cmc
sub
jnp
and
shll
pop
js
lea
imul
ret
in
movsl
jge
call
pop
insb
sub
rcrb
jnp
cmp
notl
jle
jge
and
cld
mov
dec
mov
je
inc
shll
insb
or
xchg
movsb
xchg
dec
cltd
inc
xor
mov
jmp
imul
dec
push
jb
pushf
movsb
test
xor
aam
jge
pop
enter
es
jo
xchg
and
mov
and
pop
pop
js
stos
adc
cmpsl
jae
xchg
xor
dec
notl
pop
lods
dec
repnz
nop
dec
sti
addb
ret
pop
repz
jno
sub
xor
xchg
mov
in
and
je
test
outsl
in
insl
aam
xlat
mov
repz
rcrb
mov
imul
and
push
shrl
daa
pop
mov
imull
mov
jb
int
into
push
pop
sub
imull
pop
add
dec
out
or
xchg
sub
mov
stos
xor
les
xor
adc
sub
stos
in
adc
mov
add
add
or
clc
mov
flds
imul
ret
nop
and
dec
enter
lods
iret
sub
push
icebp
jg
pop
jp
jo
movsb
adc
popa
sbb
clc
jno
adc
insb
mov
outsl
mov
dec
lret
test
mov
leave
adc
inc
es
stos
mov
and
dec
jp
imul
mov
mov
jnp
xchg
lds
shl
and
mov
rcll
dec
pop
cmp
cmp
repz
out
cli
mov
xorl
jae
dec
notb
cltd
int3
cld
jb
xor
mov
repnz
fsubr
cmpl
cmp
sbb
fs
cmpl
scas
mov
lret
stos
adc
adc
test
jg
test
push
xchg
das
int3
xchg
push
pop
daa
punpckhdq
mov
sbb
sub
add
mov
jl
pop
insb
mov
imul
loop
sub
adc
fiaddl
or
jle
call
andb
push
jp
add
adc
inc
push
imul
push
pop
mov
mov
push
push
fcmovu
cmc
sub
bound
push
pop
mov
pusha
xor
ror
add
mov
outsb
js
pushf
mov
xchg
push
cmp
adc
or
aas
in
xchg
cmpsb
mov
repz
pushf
jle
stc
push
mov
sbb
xor
cmp
cmp
add
push
xor
push
cmc
push
inc
push
insl
jno
add
or
fldl
lcall
arpl
or
sub
arpl
repnz
mov
sub
pop
inc
aas
pop
int3
add
ss
push
jae
aas
fcomps
stos
arpl
incl
bound
negl
repnz
movsb
dec
mov
cmpb
int
gs
cmp
jbe
jo
subb
arpl
outsb
fdivr
mov
mov
out
cmc
movsl
sahf
add
nop
add
or
mov
cmp
and
mov
mov
clc
out
loop
syscall
and
inc
nop
stc
jnp
jne
mov
movsl
xor
inc
into
je
hlt
cld
mov
imul
cmpsl
dec
cmpsb
scas
xchg
cmp
insl
mov
dec
push
scas
dec
shll
pop
and
test
lcall
sub
lret
test
jle
movsb
push
push
fisttpl
cmp
jb
shrb
test
sub
in
sarb
push
cmp
jo
es
inc
cmp
add
xchg
outsb
in
enter
fildl
insl
cmp
or
stos
scas
call
mov
sbb
mov
scas
mov
mov
fcmovu
cwtl
into
movsb
mov
arpl
or
jl
xchg
icebp
add
movsl
jb
loope
inc
ret
movsl
out
xor
mov
hlt
test
dec
insl
js
xor
mov
and
rorl
ss
mov
push
fidivrl
inc
sub
es
mov
prefetch
dec
stc
xchg
repz
xor
daa
popf
add
popa
jmp
pop
cmpsb
cmpsb
inc
les
push
int
xor
jp
mov
out
dec
cli
xchg
outsb
mov
pushf
xor
jae
xsave
mov
in
popa
cli
lret
in
push
mov
loope
fwait
inc
sub
scas
shll
subb
jge
das
sbb
or
mov
imul
sub
movsl
lahf
mov
push
mov
cmp
testb
jns
xor
mov
add
cmpsl
in
in
out
dec
sbb
sbb
sti
test
test
push
push
out
rcrb
in
xlat
outsb
ret
data16
add
andb
lahf
inc
or
and
jno
inc
bound
int
xor
jno
add
mov
dec
lcall
cwtl
mov
jae
leave
outsb
lods
xlat
rcll
ljmp
jp
lahf
xchg
adc
mov
sbb
jp
adc
dec
xor
xchg
out
jmp
adc
push
jp
cmpsl
adc
jecxz
lahf
pop
enter
mov
lcall
mov
inc
or
inc
xor
cmp
jns
sub
cmp
je
xchg
fcompl
dec
dec
rolb
cmp
pop
icebp
push
jmp
add
mov
jecxz
mov
dec
dec
jle
rolb
inc
sbb
mov
das
pop
aad
mov
jo
fisubs
aam
scas
pop
fsub
mov
in
in
negl
sti
dec
pop
xor
outsl
lret
cmp
xchg
mov
mov
xor
cmp
stos
in
add
pop
cmp
cmc
std
jmp
int3
xchg
rorb
data16
je
cs
xchg
pop
pop
shrl
add
push
xor
bound
mov
push
outsl
sub
xor
sti
scas
stos
sti
dec
pop
mov
pop
ljmp
sub
sub
mov
outsb
fldl
icebp
jne
inc
shll
in
adc
insb
and
pop
sti
daa
sbb
subl
adc
xor
in
adc
sbbb
cmc
sahf
out
repnz
cmp
xlat
aad
cmpsb
sbb
jmp
cltd
xchg
jbe
pushf
cmpsb
ss
pop
sub
roll
aas
sub
xchg
cmp
dec
add
and
aaa
lods
fcomip
enter
je
pop
add
ja
and
aas
pop
clc
jp
adc
xchg
inc
add
iret
adc
dec
fcmovb
pop
rcl
push
pop
add
int3
pop
pop
ja
lret
hlt
inc
outsb
in
roll
and
in
aaa
push
subb
imul
mov
xchg
pop
xor
mov
mov
xor
cmp
adc
jmp
loop
inc
dec
filds
dec
in
fisttpl
aam
enter
dec
mov
rcrl
mov
sbb
in
aad
inc
pusha
das
test
and
jge
leave
test
pushl
jp
add
sbb
jbe
ss
dec
rorl
dec
sub
out
mov
mov
stos
scas
pop
pop
sub
xor
ret
xchg
jg
sahf
es
push
jg
outsl
lcall
daa
ret
lret
jp
insb
imul
mov
enter
mov
xchg
mov
out
push
stos
adc
or
adcl
iret
rorb
xchg
clc
aad
fidivl
pop
sub
or
scas
mov
fidivs
and
cmp
push
lret
sti
mov
stc
loopne
push
mov
add
cmc
push
subl
xor
cmp
loopne
mov
out
sub
fadd
divl
push
shrb
pop
push
leave
repz
pop
xchg
jg
movsl
and
mov
popa
cmc
mov
insb
mov
mov
adc
aad
or
xchg
mov
jns
mov
stos
pop
pop
pop
jmp
mov
xchg
clc
arpl
insl
push
sbb
push
mov
dec
or
shlb
mov
fxch
out
sub
cwtl
sbb
and
pop
push
jg
mov
arpl
andl
das
xor
mov
jge
push
push
mov
and
stos
mov
or
in
mov
les
addr16
idivb
pusha
pop
sbb
ret
into
mov
xchg
in
popa
sbb
stos
fisttps
jle
mov
lods
je
mov
subb
adc
push
pop
int
lock
mov
push
les
sbb
aad
xor
dec
cwtl
daa
repnz
call
sbb
addr16
push
stos
inc
or
insb
mov
or
scas
cmp
mov
add
jne
in
fsubrs
or
mov
pop
repnz
cmp
out
mov
sbb
add
punpcklbw
fcmove
pop
inc
push
xchg
mov
xchg
pop
dec
arpl
cmp
and
leave
pop
popf
jne
xor
les
imul
jne
mov
add
mov
orl
push
push
in
enter
lock
xchg
out
mov
or
pop
add
lahf
sub
ljmp
aam
mov
fidivrl
lds
rorl
mul
xchg
ja
jge
dec
stos
adc
aad
cmp
inc
push
adc
cmpsl
cmp
out
nop
sbb
mov
out
fisttps
cmp
cmp
fcoms
pop
ja
adc
dec
faddp
enter
enter
pop
test
std
lds
pusha
sub
push
mov
xchg
in
inc
jl
sbb
xchg
or
divl
out
inc
leave
aaa
add
repz
or
outsl
dec
stc
inc
push
and
test
push
imul
jl
and
mov
dec
xchg
jp
and
clc
sti
fdiv
int3
insl
adc
and
mov
in
jmp
pushf
gs
fstl
mov
sbb
mov
test
outsl
sbb
mov
fs
int
mov
or
pop
push
ss
mov
xchg
out
mov
js
mov
jnp
jecxz
sahf
es
pop
inc
in
xchg
arpl
sub
or
push
js
pop
aam
mov
cmpsb
ret
jg
pop
push
sbb
mov
repnz
add
jbe
add
ret
andl
push
daa
jbe
mov
push
iret
imul
mov
mov
insb
sbb
sbb
jle
push
inc
mov
push
cmp
sbb
repz
aam
xchg
icebp
pop
mov
mov
pop
inc
xor
je
sub
js
ret
adc
aad
lock
enter
mov
jmp
outsl
pop
hlt
stos
lahf
lods
push
cmp
mov
ljmp
jle
jmp
and
jecxz
push
cmp
dec
dec
adc
lcall
gs
jo
xchg
pop
adc
clc
dec
mov
lods
lods
mov
sbb
add
adc
mov
mov
ret
lods
dec
outsl
js
inc
adc
xor
mov
cmpsb
incb
into
sub
clc
xor
inc
incb
or
mov
fidivrl
pop
ficompl
in
sbb
popa
sub
sub
mov
and
xchg
mov
fstpl
aad
add
ret
cmp
push
fadds
call
fstpt
mov
jns
cmp
or
out
movl
push
out
dec
int
xor
fdiv
push
outsl
das
scas
mov
addb
dec
inc
xchg
cmc
xor
gs
sahf
pop
dec
push
fwait
mov
movsl
out
add
lods
clc
add
out
cmp
stos
push
push
xor
pushf
fmuls
mov
mov
sub
jge
je
and
add
mov
ljmp
jge
stc
bound
mov
xchg
je
or
jns
jo
fistps
imul
push
std
push
adc
repnz
in
xchg
jle
cmc
loopne
cmp
jae
dec
mov
das
lock
pop
ret
sbbb
pop
dec
pop
jp
xlat
xchg
stos
jecxz
mov
and
test
in
rcll
and
aas
fidivl
push
rcr
popa
xor
fmull
dec
pop
xor
pop
jge
pop
pop
popf
ljmp
jg
rorb
inc
mov
push
xchg
sub
data16
adc
pop
mov
insb
mov
inc
mov
lods
xor
xor
test
imul
or
ds
pusha
xor
jp
les
aas
push
cmpsl
cmp
imull
mov
jb
fldl
jns
lahf
mov
cmc
pop
jmp
pop
dec
mov
jne
pusha
stos
xor
jl
cld
push
sbb
xchg
cmp
cmpsl
shlb
idivl
or
dec
or
fcmovbe
dec
bound
pop
cli
jne
and
xor
mov
aas
push
je
notb
jmp
pop
jecxz
jmp
out
or
xchg
add
pop
rorl
lret
jo
and
add
pushf
pop
sub
mov
out
pop
insb
xor
loopne
adc
adc
mov
dec
dec
movsb
popa
jb
ds
fisubl
repnz
push
add
jg
loope
push
or
out
pop
inc
clc
sub
pop
nop
mov
jmp
cltd
call
sub
insl
pop
mov
aaa
inc
test
into
aad
jmp
out
adc
mov
data16
push
aas
or
xor
jb
fisubrl
adc
popf
fnstcw
dec
pop
popa
cmova
add
jo
pop
bound
in
or
mov
pop
mov
js
push
add
sub
nop
mov
adc
sahf
sub
inc
xchg
out
mov
shlb
push
jnp
push
cmp
out
dec
adc
insl
dec
in
jge
jb
push
cltd
adcl
mov
inc
pop
mov
mov
add
movsl
insl
pushf
icebp
adc
jmp
mov
inc
sbb
pop
add
lds
add
pop
inc
stos
jg
outsl
call
add
gs
push
cmp
into
push
hlt
aas
inc
push
push
das
fistl
pop
ret
xchg
and
test
inc
and
pop
rolb
loope
jbe
xchg
cmp
push
testb
mov
or
jge
pop
mov
scas
fisubrl
in
cwtl
jbe
out
or
les
mov
jno
stos
addb
mov
sbb
shrb
push
lods
pop
movq
jmp
sahf
mov
pop
add
xchg
inc
sub
fisttpl
push
push
mov
cwtl
inc
decl
pop
xchg
sbb
sub
repz
daa
adc
mov
pushf
mov
mov
test
hlt
xor
sahf
das
popa
mov
frstor
pop
dec
mov
add
mov
outsl
lahf
cmp
shlb
xor
movsb
push
not
stos
dec
inc
call
js
leave
inc
or
push
aad
inc
mov
add
fstl
push
cs
lods
insl
mov
aam
lods
sahf
jg
xchg
cmc
adc
adc
push
pop
arpl
push
les
push
pop
mov
push
sahf
lock
dec
popf
subl
fmuls
ret
add
stc
dec
faddl
cmpl
push
bound
in
mov
fdivl
jp
lock
stc
push
cs
xchg
xchg
into
inc
sub
lret
ret
test
and
sarl
or
adc
push
and
ret
mov
or
xor
std
orb
sti
mov
sub
adc
push
addr16
jg
inc
xorl
mov
ret
nop
sbb
mov
cwtl
mov
add
loope
ds
pop
movsl
mov
lods
movb
dec
add
pop
adc
lahf
test
movsl
sbb
mov
xchg
test
add
mov
push
and
stos
push
shrl
push
es
enter
mov
pop
or
mov
xchg
push
int3
pop
mov
bound
pop
or
aam
mov
pop
push
imul
jecxz
aas
or
pop
inc
pop
cltd
lods
sub
in
mov
fstl
orl
pushf
xchg
ret
fidivs
insl
ss
inc
hlt
imulb
adc
xorb
xchg
xchg
mov
jns
push
movsl
push
xchg
push
shrl
xor
cvttps2pi
adc
jmp
scas
xor
adc
jecxz
stos
mov
cmpsb
ja
jbe
lock
inc
cld
jle
pushf
shl
inc
loop
or
adc
mov
mov
aam
insl
xchg
test
xchg
jne
lock
pop
xor
ret
fs
or
mov
xchg
popf
les
xchg
pop
or
push
leave
rorb
mov
cmc
imul
mov
xchg
or
sbb
inc
mov
addr16
pop
loopne
imul
sub
aam
fcompl
or
jl
xor
mov
in
das
cmp
adc
mov
mov
pop
mov
xor
mov
jl
cld
in
add
xor
lret
jns
shll
stos
xor
ds
or
add
cltd
jnp
cmp
lock
xchg
sbb
cmp
iret
notb
dec
pop
add
lahf
cmpsl
fstpt
repz
jmp
fistps
mov
neg
lods
ds
add
pop
in
sbb
lods
lcall
push
dec
lret
mov
mov
mov
xor
inc
gs
fisttpll
dec
inc
xlat
faddp
push
test
icebp
sbb
cmpsb
mov
out
sbb
ss
enter
xchg
push
stos
dec
xor
inc
jne
push
fcmovb
sbb
mov
pop
mov
xchg
addr16
pop
sahf
dec
and
pop
iret
ja
add
mov
mov
orl
mov
enter
push
add
pushf
lret
dec
jle
seta
mov
xchg
lea
std
into
or
mov
adc
jg
or
xchg
dec
in
jl
add
loop
fcoml
hlt
xor
push
sbb
xor
movsl
mov
std
das
int3
mov
leave
pop
jl
ljmp
movsl
sub
pop
push
outsb
mov
cltd
xor
cs
pop
add
sub
ret
shrl
pop
xor
scas
js
rcll
out
pop
push
lds
repz
inc
int
pushf
test
cmpsl
call
pushf
sbb
dec
sub
dec
adc
jnp
fs
pushf
adc
push
adc
and
inc
or
dec
rorb
mov
pop
mov
jmp
in
mov
aaa
loopne
mov
out
mov
rcl
rclb
pop
adc
push
or
addb
shlb
push
push
xor
sub
repz
out
mov
or
mov
movsb
fistl
push
sub
je
stos
adc
adc
mov
rclb
pop
mov
adc
xor
icebp
jns
add
pop
adc
fyl2xp1
cltd
mov
ss
lret
sbb
js
and
sarl
mov
fsts
cmpsb
mov
sbb
sub
jnp
mov
mov
inc
lcall
call
scas
gs
jns
out
push
inc
fdivs
cmp
push
stos
cmp
mov
in
cltd
in
adc
or
xor
imulb
lret
sub
mov
jae
or
ret
mov
sti
test
pushf
cmpsb
test
outsl
inc
pop
ret
insl
dec
lods
leave
cmc
pop
rorb
xlat
mov
jne
mov
in
dec
xor
loope
xor
dec
xchg
or
cmp
add
repz
push
sub
push
pushf
xchg
sbb
sbb
shrb
pop
lahf
mov
outsb
fcmovu
mov
ljmp
sub
psraw
sti
mov
daa
or
pop
xchg
adc
flds
push
dec
mov
inc
int
push
mov
imul
jge
mov
pushf
popf
xchg
dec
insb
push
fwait
aam
roll
pop
pop
ss
adc
and
les
mov
stc
xor
lret
cltd
imul
xchg
xchg
fs
popa
std
test
cmpsl
dec
shll
pop
pop
mov
imul
jecxz
and
pop
leave
cmp
in
nop
xor
orb
jo
outsb
fadds
fmuls
data16
lods
adc
cmp
fs
movsl
iret
adc
out
aam
fcomps
mov
sti
repnz
out
pop
icebp
push
and
xor
push
out
xor
stc
and
outsb
cmp
mov
lea
ja
stos
fisttpl
mov
ljmp
jp
xchg
cmp
and
orl
mov
sbb
and
sbb
je
sub
test
cmp
and
pop
daa
adc
popl
lret
mov
adc
and
xor
inc
or
mov
push
pushf
jne
adc
push
stos
dec
pushf
jb
inc
dec
imul
inc
or
fwait
or
sbb
jge
in
fsubs
bound
xor
cmp
or
mov
roll
mov
aad
or
pop
xor
in
in
cli
jmp
mov
cmp
sub
fxch
xor
pop
dec
xor
pop
lret
pop
xor
in
dec
mov
mov
rcll
hlt
jo
out
push
pop
fdivr
test
mov
xor
jge
inc
das
outsb
push
cmp
pop
adc
mov
out
cld
push
jmp
add
pop
bnd
mov
out
icebp
movsb
cmp
mov
aad
sub
js
mov
cmpsb
pop
int3
add
and
xor
sub
cmpsl
flds
dec
or
dec
sahf
pop
mov
cld
inc
jbe
dec
jns
lret
test
pop
push
ja
outsl
aas
xor
mov
mov
mov
jne
push
out
ds
in
jbe
mov
mov
add
ja
mov
xor
insb
pop
cmc
in
mov
imul
hlt
ds
adc
lock
jmp
das
dec
jbe
arpl
mov
lock
sub
aam
fistpll
mov
pop
jmp
inc
cmpsl
cmp
lret
xchg
adc
scas
xchg
loopne
outsl
add
mov
xor
bound
inc
out
pop
int
ljmp
sbb
lds
inc
add
lods
sub
sbb
mov
js
rcl
sub
jle
sbb
pop
push
insl
testb
jno
and
test
notb
mov
sbb
jge
out
cmp
pop
pop
daa
pop
xor
arpl
nop
cmp
mov
icebp
scas
lock
sahf
sub
in
fwait
jo
dec
adc
daa
js
sub
lock
push
inc
fbld
loopne
ss
sub
xor
and
je
jnp
or
arpl
loopne
jno
mov
push
cmp
jae
loopne
or
push
jae
or
iret
adc
xor
ljmp
mov
dec
hlt
js
mov
mov
xchg
movsl
popf
sbb
dec
int
mov
dec
mov
mov
rcr
dec
inc
sbb
jns
imul
fsubl
jmp
lods
leave
or
je
test
jge
das
into
xor
fiadds
xor
bound
mov
push
cmp
test
stos
jecxz
jg
push
ja
sarb
das
and
or
scas
push
cmp
imul
lock
mov
cmp
sbbl
cmovp
test
pop
cwtl
and
add
xchg
xor
les
add
push
xor
arpl
out
jecxz
sbb
inc
icebp
sbb
xchg
or
dec
int
fildll
or
int3
add
mov
inc
or
push
xchg
mov
cmp
jmp
pop
jg
in
lds
xor
push
push
insb
repnz
dec
sub
jge
xor
jge
dec
dec
push
adc
into
xchg
fdivs
iret
jp
test
ja
push
push
add
cs
mov
jecxz
pop
dec
aas
ret
or
jbe
es
sub
or
aas
cmpsl
leave
sti
xchg
mov
mov
inc
inc
cmp
mov
aaa
pop
cltd
mov
cmp
cs
fsubl
and
mov
pushf
fs
mov
sub
stos
cmpsb
mov
jns
mov
add
mov
pop
daa
mov
adc
std
shrb
sbb
inc
jno
xlat
rcr
incl
and
sbb
push
jae
and
mov
iret
or
mov
and
clc
cmpl
xor
gs
mov
sub
cmpb
lods
xor
mov
addr16
jnp
push
jp
fsubrs
aam
cltd
xchg
jle
std
pop
in
mov
popf
pusha
test
loope
mov
xlat
mov
jg
jmp
xchg
clc
fsubl
seto
inc
and
and
lahf
xor
and
bound
fdivrs
xchg
push
popf
and
nop
lcall
das
mov
das
sti
in
and
aam
in
clc
movl
fstpl
fwait
in
xchg
xor
pop
aad
adc
mov
mov
lret
xchg
inc
aad
xor
jae
lods
mov
mov
lahf
lods
nop
mov
pop
rcrl
and
loopne
test
test
or
dec
jb
hlt
or
iret
adc
and
hlt
adc
jg
inc
jno
pop
mov
mov
push
cmpl
roll
sarl
into
xlat
xor
mov
in
jecxz
daa
jle
scas
jg
mov
aas
scas
or
or
in
outsl
mov
xchg
mov
push
adc
and
sub
lret
mov
inc
jno
sub
and
ds
mov
repz
mov
mov
sbb
mov
addr16
cmp
xchg
loope
add
push
add
push
enter
inc
cltd
clc
jb
add
ja
push
rorl
xor
iret
js
push
cmp
sarl
push
mov
mov
rolb
pop
or
or
imul
dec
push
jns
mov
xchg
cmp
mov
je
jge
push
push
andl
jg
jmp
lcall
repz
adcl
aad
pop
xchg
mov
fwait
push
mov
push
gs
lods
mov
mov
lcall
repz
push
insb
stc
scas
test
pop
arpl
sbb
pusha
jl
leave
lock
cmp
xlat
sbbb
icebp
outsb
jle
mov
fs
sbb
pop
pop
test
aaa
rcrl
pop
popl
adc
cmp
push
enter
sti
xor
xor
out
lahf
xchg
sub
cmp
lods
dec
xlat
or
shrl
and
test
lods
push
jp
ss
sbb
mov
ss
sub
faddp
ja
adc
sub
lock
pop
or
sub
mov
addr16
fs
cmpl
ds
cmp
pusha
add
push
arpl
push
scas
gs
pusha
test
sbb
sahf
adc
jmp
mov
push
int3
xor
sub
lock
xchg
sub
insl
fmul
push
mov
inc
loopne
dec
inc
xchg
call
scas
mov
testb
inc
fisttpll
xlat
loop
inc
sub
and
cld
jne
stos
ja
int
mov
in
mov
cltd
adc
movsb
fbld
cs
dec
dec
sti
vpaddd
xor
bound
push
pop
lahf
adc
jns,pn
inc
or
cwtl
inc
ljmp
add
jmp
and
in
out
fcompl
mov
pop
cmpb
push
dec
dec
jge
data16
test
cmp
jg
loop
cld
cs
xchg
enter
int3
xchg
or
fwait
es
sbb
inc
xchg
cld
imul
movl
inc
imul
popf
cli
mov
pop
mov
push
lcall
xchg
add
lret
mov
loop
cmp
xor
and
adc
jne
lods
repnz
pop
cli
loope
lock
shl
xor
call
loop
push
mov
mov
or
pop
addr16
mov
decb
mov
repz
gs
sbb
add
xchg
daa
ja
push
cmp
adc
pop
testl
call
xchg
jnp
cld
sub
loop
sbb
mov
jge
push
push
adc
pop
insb
and
mov
jnp
mov
je
loop
cld
mov
cwtl
dec
mov
dec
outsb
pop
jle
mov
dec
sbb
adc
pop
leave
mov
jg
mov
pop
rcll
popf
mov
adc
das
mov
stos
mov
jno
cwtl
sbb
dec
icebp
inc
mov
outsl
loopne
inc
popf
out
rcll
add
in
minps
outsl
gs
and
fcmovbe
das
ret
mov
insb
inc
stos
call
dec
xchg
movl
sbb
fldl
sahf
iret
inc
mov
orl
dec
cmp
jp
xor
sbb
lea
mov
mov
jnp
cltd
sub
cmp
mov
push
xor
xorb
fnstsw
loop
out
jae
jne
movsl
mov
jp
cmc
mov
sbb
inc
fmuls
sahf
lock
popa
add
out
inc
mov
cmp
sub
cwtl
ficompl
mov
shrb
imul
test
mov
pushf
jmp
loopne
jbe
cltd
jne
push
cmp
aas
inc
andb
cmp
cmp
push
mov
xchg
pop
dec
mov
dec
lcall
pusha
inc
or
dec
dec
pop
xor
inc
jbe
jle
sub
in
xchg
in
sbb
adc
mov
pop
inc
leave
xchg
or
lea
or
lods
jp
adc
push
xchg
xchg
rolb
lock
xor
fnsave
pop
fsubl
jo
mov
or
lahf
adc
loope
pushf
in
insb
lods
jo
dec
sbb
leave
aam
nop
leave
and
mov
jae
add
fdivrs
in
pop
gs
or
cmp
dec
mov
scas
mov
mov
les
sbbl
test
imul
jb
adc
and
lret
dec
push
jge
adc
jns
lret
mov
loop
das
jae
push
ljmp
scas
clc
jno
push
test
stos
jo
loop
mov
loope
insl
xchg
rorb
cmp
rolb
jnp
dec
rolb
cmp
test
int
mov
outsl
rorl
sahf
leave
int
jo
pop
leave
jl
add
scas
push
inc
mov
ss
push
out
jp
sub
and
loope
jnp
xchg
lea
lahf
fidivrl
and
out
dec
movl
xchg
decl
inc
cmp
mov
inc
xchg
sbb
ja
int
jo
in
imul
dec
mov
in
pop
insl
mov
pop
dec
sub
aam
cltd
jecxz
cmp
mov
push
js
pop
xorb
sub
addr16
inc
les
cmp
das
or
mov
adc
js
mov
jle
inc
in
sbb
sub
aaa
sbb
jecxz
icebp
inc
fucom
pop
pop
rcl
aas
sti
bound
push
fcomps
arpl
imul
push
sub
inc
es
outsb
lret
cli
pop
inc
push
lds
clc
cli
stos
in
mov
call
and
xor
ret
test
int
xchg
fwait
xchg
cwtl
ljmp
dec
sub
add
add
dec
xor
pop
in
rcrb
popf
mov
lret
das
and
shll
cmp
sbb
push
daa
popa
andb
sub
jb
cmp
or
push
and
fstl
mov
mov
xchg
cld
icebp
pop
cwtl
and
xlat
movsb
mov
ret
push
xchg
neg
pop
mov
jb
push
icebp
leave
js
push
mov
pop
imul
lea
inc
mov
sbb
loop
or
inc
negb
xchg
jne,pn
mov
dec
into
jp
rcrl
add
clc
mov
mov
adc
scas
ficoms
xchg
inc
push
bound
mov
ficoml
push
push
dec
adcl
sbb
sub
out
push
pop
adc
insl
sbb
dec
pop
mov
push
in
cli
loope
leave
lret
dec
pop
inc
repz
fmuls
push
mov
mov
ss
xchg
cmp
arpl
adc
lret
xchg
out
xor
or
add
dec
aam
xchg
jl
add
jp
jmp
push
repz
dec
or
iret
in
xor
jmp
mov
push
loope
or
xor
nop
adc
ret
int
adc
repz
mov
lds
mov
mov
or
mov
and
sub
add
jbe
sbb
mov
mov
xor
xchg
adc
inc
pop
sarl
lds
push
outsb
mov
sbb
mov
cmc
xchg
mov
push
adc
jle
faddl
insl
ljmp
and
test
cmp
add
in
jle
xor
cmp
jns
mov
adc
mov
rcr
icebp
callw
adc
lds
jo
ror
sbb
jmp
int
dec
cmc
lock
push
pusha
mov
jmp
pop
dec
or
jle
les
push
mov
mov
sub
cmc
jge
test
fwait
stos
push
jecxz
repnz
mov
jmp
mov
mov
pop
fs
push
add
ret
or
fwait
jle
pop
mov
jecxz
mov
jno
cmpsl
push
bound
inc
jg
pop
jb
es
cld
jmp
jmp
dec
mov
push
in
sbb
mov
push
scas
dec
dec
lahf
sti
or
add
dec
jo
insl
mov
mov
xchg
or
xchg
cli
ja
popf
cli
push
cwtl
jns
popf
and
jb
enter
sbb
fmuls
imul
lea
fiadds
sti
cwtl
fmull
je
out
fsts
push
cmp
nopl
scas
out
pop
mov
clc
hlt
fadds
mov
add
push
dec
addb
push
cld
and
push
cmc
pop
std
test
fwait
popa
sub
cs
es
and
push
iret
int
sbb
adc
divl
cmc
xchg
mov
and
stos
mov
cwtl
repnz
mov
movsl
rolb
es
jns
mov
je
js
jge
cltd
add
lret
xlat
jmp
sub
jno
popf
out
pop
les
mov
das
push
and
dec
sbb
rolb
mov
mov
in
mov
mov
jnp
push
addr16
mov
repz
push
mov
mov
dec
aaa
sbb
fs
jge
xlat
rcr
movsb
mov
jb
push
add
cmp
pop
dec
cmp
dec
rolb
sbb
outsb
shrb
mov
outsb
sbb
leave
add
dec
popa
imul
rcl
icebp
pop
sub
inc
pop
fisttps
xor
cwtl
add
adc
lret
dec
pop
popf
cmpsb
mov
xchg
add
sub
fucomi
push
mov
inc
sbb
jmp
adc
sbb
cli
xlat
imul
cmpsb
mov
jl
mov
insb
mov
xchg
out
aas
xorl
fidivl
xchg
dec
dec
add
xchg
rcl
adc
ficoms
stos
inc
xor
and
lcall
in
scas
scas
and
ljmp
adc
cmc
fadds
aam
imul
add
sub
int3
inc
scas
clc
loop
ljmp
in
loope
mov
arpl
sbb
mov
mov
pusha
fadd
pop
ds
lea
pop
and
jo
aam
les
cltd
add
push
lcall
scas
xor
stc
add
inc
add
addr16
int3
bound
lds
push
std
mov
lret
mov
inc
inc
push
call
pop
or
push
fs
pushl
xchg
mov
add
xchg
lods
daa
or
das
push
xchg
adc
gs
mov
dec
cmp
lret
xchg
sbb
fwait
xor
loopne
pushf
sarl
dec
mov
adc
aad
push
xor
inc
jno
pop
push
fwait
push
mov
in
lret
inc
jnp
loope
dec
mov
add
add
movsl
lahf
jmp
jbe
mov
js
mov
inc
jns
adc
addl
pop
and
and
pop
push
push
popa
mov
xlat
and
mov
lret
es
mov
jo
test
test
mov
loop
ret
mov
cmpsb
dec
mov
ljmp
lea
adc
lret
aam
pop
cmpsl
pop
jno
daa
daa
inc
cs
push
adc
lcall
sbb
dec
mov
lcall
in
test
outsb
mov
out
popa
repz
inc
jae
dec
push
insb
in
inc
mov
xor
aas
or
mov
pusha
push
xor
ds
aas
repz
mov
and
loope
jbe
adc
push
lcall
cmp
and
repnz
jae
out
ds
sbb
sub
cmpsb
ja
mov
and
icebp
je
idivl
loope
jns
cld
push
jge
xchg
xchg
jb
dec
adc
out
or
icebp
flds
iret
dec
push
push
and
std
pop
or
data16
mov
xchg
pop
pop
mov
clc
pop
push
aad
xor
push
dec
dec
or
jns
idiv
cmpsb
std
sub
jl
addr16
push
or
lret
arpl
add
stos
sub
lods
mov
sub
sub
and
mov
push
test
adc
add
pushf
ja
aas
faddl
jle
and
mov
mov
jo
popa
icebp
lods
aaa
loopne
mov
mov
lea
lods
mov
ljmp
aas
in
inc
js
test
pop
jns
addr16
mov
inc
jmp
or
xor
lods
jle
mov
out
push
push
mov
pop
imull
or
pop
or
call
xlat
jo
rcrl
lret
hlt
imul
out
es
and
mov
xor
mov
push
mov
cwtl
xchg
dec
fwait
sub
cmp
jae
lods
and
pushf
ret
addr16
inc
cmpsb
sub
add
ds
sti
xchg
cld
mov
fsubl
inc
fwait
insb
movsb
or
outsb
inc
and
pop
rolb
mov
xchg
call
nop
out
add
orl
cs
jmp
xor
out
in
fbld
scas
icebp
mov
outsb
xchg
mov
sbb
and
pop
cmp
add
dec
jns
pusha
jecxz
ret
push
negl
inc
stos
in
mov
mov
jb
or
lcall
pop
mov
mov
sbb
mov
jle
jp
or
adc
push
mov
xor
xchg
pop
sbb
icebp
push
cld
sbb
jmp
mov
cs
icebp
stos
aam
ret
inc
lret
dec
sahf
dec
cmpb
cld
loope
or
test
je
inc
add
js
mov
rcll
add
mov
xchg
sub
std
imul
je
jl
and
inc
pop
aas
test
sbb
fs
out
loop
rol
xchg
and
jecxz
sbb
mov
stos
push
mov
lahf
xchg
mov
and
sub
lret
mov
nop
adc
fdivrp
call
mov
dec
add
mov
mov
movsb
sbb
sahf
jne
pop
cmpsl
rcrb
daa
adc
aam
mov
inc
dec
out
xchg
dec
mov
sub
xchg
adc
or
rcr
push
rcrl
inc
inc
pop
sub
pop
push
xchg
out
add
push
cmp
shr
ret
loop
cmp
std
dec
push
loop
mov
push
rcr
add
mov
sahf
push
mov
cmp
arpl
cmp
or
mov
cmp
jle
sub
xor
das
xchg
icebp
sti
push
sub
js
sbb
bound
sbb
int
cmp
push
int
mov
mov
pop
sbb
inc
adc
lcall
jno
pop
clc
cmp
mull
lea
add
out
mov
ljmp
pmullw
and
ss
pop
add
dec
jmp
and
dec
fst
in
ret
xorl
pop
hlt
cmp
push
or
mov
cs
mov
inc
and
repnz
pushf
xchg
sarb
bound
mov
gs
and
cmp
add
push
iret
ficoms
bound
and
mov
and
ret
inc
push
jbe
loope
into
adc
push
notb
adc
stos
stos
or
pop
jo
sbb
movsl
mov
sub
call
push
and
imul
xchg
mov
in
jno
cmp
xchg
push
outsl
pushf
xchg
mov
xchg
mov
out
insl
arpl
cmp
ds
ljmp
popa
cmp
dec
in
repz
les
pop
idivl
gs
in
in
dec
and
clc
loopne
dec
mov
push
sbbb
test
jecxz
test
mov
test
fsts
cld
lods
outsb
xor
lahf
mov
mov
xchg
cld
cltd
xor
push
pop
repz
andb
addr16
mulb
mov
movsl
cld
sub
xchg
pop
and
mov
shl
jns
testl
out
mov
add
sbb
or
cmp
xor
xor
cwtl
mov
fwait
in
int
jbe
ret
xchg
sub
cmp
pop
cmp
dec
pop
xor
adc
outsb
push
ror
aad
mov
movsl
mov
cmpl
mov
iret
xchg
or
clc
xorl
cmp
or
repnz
xor
add
inc
shrl
syscall
jb
jg
scas
lods
mov
add
gs
cwtl
xchg
push
rcrl
clc
pusha
xchg
stos
test
xchg
mov
cli
inc
mov
fists
iret
push
icebp
pop
in
mov
push
rcrb
mov
mov
sub
std
dec
lds
xchg
ret
cmc
int3
lock
inc
addl
cmpsb
lret
jg
out
push
mov
jecxz
pop
xchg
into
addr16
aam
into
push
push
ja
cmp
and
sbb
mov
in
stos
xchg
sbb
inc
mov
xchg
add
popa
pop
cwtl
lock
push
cwtl
cmp
mov
or
push
dec
push
cmp
test
jg
js
repz
jg
ret
repz
sbb
in
pop
sarl
push
std
sti
mov
sub
aas
shll
mov
cltd
pop
outsb
enter
cmp
dec
sbb
xor
xchg
jnp
testl
add
sub
jb
fistpl
fidivrs
dec
mov
test
mov
push
packuswb
push
and
imul
out
mov
push
and
ja
push
fwait
dec
add
dec
out
in
adc
mov
xor
out
aas
ret
mov
push
ret
dec
sti
fdivrl
aad
mov
push
mov
mov
sahf
mov
jl
lods
clc
jbe
inc
pop
testl
jmp
loope
cmpsb
movsl
mov
mov
addr16
push
mov
jl
movsl
iret
lahf
jmp
push
add
movsb
push
xchg
fs
xchg
cmpsl
ret
int3
and
ret
mov
in
add
push
inc
mov
call
mov
xlat
inc
inc
cmc
loope
sbb
inc
out
dec
and
jns
push
hlt
test
mov
and
inc
adc
pop
out
xchg
jmp
lods
sbb
push
loopne
es
lcall
data16
arpl
std
cmp
aaa
mov
sub
fisubrs
punpcklwd
pushf
xor
shr
dec
add
jb
out
ja
pusha
cmp
pop
std
ds
pop
pop
ljmp
stc
push
mov
loop
js
push
pop
pop
out
mov
jns
cmp
add
int3
cmpsl
test
into
les
jae
adc
inc
mov
ja
xor
in
test
stc
imul
add
sub
fldenv
cmpsl
fistps
jo
lret
push
inc
imul
lea
loopne
dec
adc
cmpb
add
jg
mov
mov
incl
xor
movsl
stos
xchg
js
pop
mov
sub
je
and
fsubr
outsb
jg
dec
mov
int
ljmp
sbb
lret
inc
sub
scas
jg
fnstenv
inc
dec
mulb
aam
ja
and
cltd
popf
loope
sti
les
sub
xor
push
mov
mov
xor
mov
loop
gs
jge
pop
fldt
out
inc
sub
stc
mov
push
movsb
sbb
fisttpll
dec
mov
daa
push
mov
dec
das
or
mov
cmc
mov
ds
mov
icebp
imul
cld
out
dec
shrl
xchg
lcall
shrl
and
mov
scas
ret
dec
mov
push
xchg
xchg
in
jno
ljmp
js
push
rcl
sub
aad
sbb
mov
mov
pop
rcrb
adc
xchg
push
shl
jge
int3
sti
or
and
out
inc
mov
or
mov
mov
sbb
bound
movsl
pushf
sarl
cwtl
outsl
sbb
fsubl
adc
aad
mov
pop
fildll
fldcw
add
cltd
in
mov
fxch
inc
dec
lahf
sub
pop
or
movsb
pop
js
cltd
mov
insb
mov
lods
mov
and
sti
or
fiaddl
jb
pop
test
adc
dec
sbb
jecxz
ror
inc
xchg
inc
mov
dec
xlat
bound
pop
mov
push
adcb
arpl
out
or
bound
lret
loopne
xchg
jne
out
mov
outsb
jno
addr16
repnz
or
imul
push
popa
or
xchg
xchg
push
setge
inc
stos
mov
sbb
js
sahf
add
and
adc
test
push
in
in
dec
sbb
pop
mov
pushf
cmpsb
pusha
adc
inc
inc
insl
les
clc
leave
mov
or
mov
xor
sub
mov
out
into
mov
xor
ja
mov
adcl
pop
or
clc
cmp
aam
sbb
ljmp
loope
push
enter
test
icebp
lgs
or
out
dec
mov
push
inc
sbb
adc
pop
xchg
imul
pusha
test
fsubl
mull
pusha
inc
iret
loopne
bound
mov
idivb
pop
lods
mov
loop,pt
push
ret
xor
or
test
je
xchg
imul
dec
inc
roll
test
aam
hlt
push
mov
dec
mov
rep
fst
xchg
and
cmp
mov
stc
xchg
cmp
mov
pop
fstps
test
cwtl
mov
jns
ret
fmull
pop
je
addb
imul
add
jl
push
test
or
xchg
inc
jp
sbb
adc
lcall
lret
in
mov
fwait
dec
out
lods
divl
mov
test
in
pop
sub
sub
adc
cmp
loop
mov
push
add
xchg
mov
mov
or
xor
sub
mov
mov
ficompl
push
testl
les
inc
xchg
inc
insb
int3
repz
inc
pop
ljmp
push
int
cwtl
aam
pop
push
enter
cmpb
loope
mov
movsb
enter
mov
es
scas
cmpsl
negb
xchg
sbb
data16
mov
rorl
mov
push
xchg
xchg
cmp
dec
and
outsb
ljmp
push
divl
jp
out
inc
repnz
push
adc
scas
cmp
pop
add
sub
push
sbb
cmp
jge
insl
arpl
or
or
cmp
clc
jle
and
dec
movsl
pop
aas
lahf
cmp
gs
and
mov
movsb
stos
imul
jo
xchg
jns
out
pusha
push
in
sub
mov
jge
add
sbb
cmp
andb
mov
outsl
push
mov
push
icebp
dec
dec
std
sbb
popf
lds
je
pop
mov
xor
je
frndint
push
loop
cmpsb
sub
stos
repz
and
mov
or
xor
push
cld
iret
hlt
mov
mov
inc
sub
aaa
dec
xchg
aam
pushf
mov
fwait
or
stos
scas
pop
pop
jno
imul
push
cli
pop
movsl
arpl
xor
and
nop
pop
call
dec
out
sarl
mov
add
into
add
leave
lods
add
lea
xchg
movsb
in
loop
sbb
inc
mov
les
mov
cld
lods
or
mov
movsl
push
mov
pop
jb
add
mov
jb
dec
mov
test
sub
aam
push
ljmp
rclb
jo
movb
movsb
pop
mov
xchg
lret
fdivs
cmp
es
iret
cld
xchg
int
push
dec
loopne
fwait
js
mov
xorl
sti
jl
inc
clc
sbb
mulb
mov
pushf
out
movsl
in
es
push
rcl
iret
insl
test
fwait
xor
call
or
jmp
or
sbb
lock
mov
xchg
cltd
add
jmp
jecxz
mov
ret
inc
loop
fwait
cli
lds
enter
jb
pop
xor
cmp
pop
push
mov
and
sbb
push
cmp
movb
xor
sbb
loop
daa
and
jbe
loopne
mov
loop
subl
insl
cmp
loop
inc
lahf
pop
cmp
or
outsb
or
adc
or
insl
movsb
negb
push
scas
lcall
clc
pop
jle
jne
mov
push
loop
movsb
adcl
gs
mov
aad
cmc
mov
popf
mov
in
push
lock
rorl
jle
les
fs
add
fdivs
xor
enter
repnz
jno
dec
inc
dec
cmpsb
add
test
cmp
xor
scas
fidivl
in
leave
inc
daa
xchg
xor
xor
xchg
pop
cmp
jge
mov
adc
imul
jae
sub
sbbb
dec
dec
lret
push
fcomp
mov
pop
jmp
xor
pop
pop
fisubs
loop
xchg
out
into
inc
inc
bound
add
sbb
cmc
ds
sbbb
rolb
add
movsb
adc
mov
xor
mov
sbb
ficoml
fidivrs
ficoms
inc
dec
xchg
imul
scas
das
and
mov
adc
mov
ficoms
xchg
ret
int3
push
mov
fs
icebp
xor
mov
mov
cmp
mov
fmul
popa
out
xchg
arpl
jecxz
scas
lds
cmp
add
cld
or
mull
aas
addl
dec
adc
xor
lock
or
leave
sub
jne
icebp
mov
mov
push
xchg
movsb
stos
das
sub
jns
rorb
jecxz
cmpsb
cwtl
sbb
fmul
jo
loopne
cmp
aam
mov
imul
pushf
dec
or
mov
inc
push
jl
add
sub
pop
cmp
cmp
sub
lret
push
or
fistpl
lds
push
xor
dec
mov
pop
lds
lcall
jo
cld
and
test
dec
cmc
aas
dec
icebp
ret
je
jg
mov
push
adc
dec
mov
loopne
sbb
inc
ljmp
pop
sti
ficompl
fildll
popf
push
shll
icebp
and
inc
add
hlt
pusha
cmp
sbb
sub
dec
aam
stc
cmp
jg
sti
rcl
call
and
into
sbb
rcll
in
mov
popa
into
xor
outsl
adc
jecxz
imul
push
loop
push
jl
xor
mov
mov
mov
mov
divb
xor
and
sarl
out
push
xchg
imul
jg
xchg
mov
cmpsb
hlt
aam
inc
gs
cmp
mov
out
xchg
movsb
leave
rolb
inc
rolb
and
dec
movsl
leave
sar
in
push
pusha
push
sub
and
orl
or
mov
push
xchg
add
add
sbb
insb
fmuls
andl
cmp
es
addr16
sub
push
icebp
jecxz
mov
lea
xor
mov
push
adc
sub
mov
mov
sub
inc
jbe
daa
pushf
dec
inc
push
pop
inc
cmpsl
sar
sub
clc
not
push
jecxz
jecxz
iret
add
sub
and
lock
push
xor
adc
stos
lods
pop
outsb
pop
inc
sbbb
xor
out
test
lods
jb
jae
and
xchg
or
add
adcl
movsb
stc
sbb
bnd
xchg
out
repnz
mov
and
lods
mov
jns
inc
lahf
jne
sub
mov
mov
test
jbe
rcr
jne
adc
cmp
cmp
lds
jge
inc
pop
aad
jb
loope
or
in
je
mov
sahf
aaa
mov
cmp
jg
daa
shrl
mov
xchg
out
xor
mov
test
sahf
stc
gs
adc
jne
xor
adc
stos
cmp
push
jb
sub
ret
pop
mov
arpl
inc
movb
sbb
cwtl
ret
inc
jo
inc
ret
or
and
and
loopne
stc
add
pop
xchg
fstps
xor
popa
in
adc
add
ret
xchg
das
cwtl
inc
xchg
adc
bound
adc
fs
xchg
test
jae
repnz
xchg
push
lods
push
adc
loopne
pop
sarb
adc
or
shll
scas
mov
shrl
sbb
cmp
out
dec
sbb
mov
sub
push
adc
mov
add
inc
loop
pop
and
sub
adc
jge
aad
and
cmp
mov
fucom
lods
sub
sub
sbb
fildl
mov
jecxz
stc
jb
movsl
xor
das
lahf
shll
addr16
mov
ja
shll
inc
dec
in
mov
dec
jae
cltd
pop
dec
leave
sbb
or
add
dec
cs
out
mov
insl
repz
gs
cmpsb
ds
jmp
xor
inc
mov
adc
gs
adc
inc
rol
sub
testl
stos
or
sub
and
mov
jne
mov
pop
fdivl
adc
mov
out
jle
test
sbb
sub
inc
sub
test
cmpsl
leave
cmp
jl
jb
popa
push
pop
into
fucomp
out
xchg
jno
mov
mov
ds
movsl
and
or
ljmp
clc
movsb
popa
push
adc
jne
mov
push
or
adc
gs
lds
popa
dec
pop
push
pop
xor
cwtl
cltd
pop
fisubs
and
lock
cmp
rclb
push
adc
adc
add
leave
ja
aam
shrl
mov
jl
rcl
mov
push
xchg
daa
jae
popf
cld
or
push
mov
and
jl
dec
sbbl
ss
loop
mov
adc
push
pop
out
push
cmpsb
test
adc
inc
in
out
ret
test
nop
jecxz
popf
jl
adc
mov
pop
jp,pt
cmpsl
icebp
outsb
xor
push
jae
pop
sub
js
fsubrl
jne
nop
mov
and
sbb
and
jb
rcrl
cmp
sub
fsubrs
aas
mov
inc
lock
jmp
data16
int3
ss
pop
test
dec
pushf
in
roll
and
xor
and
cs
fdivs
add
or
test
pop
ljmp
cmc
std
mov
xchg
sub
jl
ds
mov
cmpl
mov
into
test
loope
cmp
xor
js
out
aaa
repz
mov
dec
nop
lds
cmpsb
pop
iret
in
clc
adc
daa
popf
push
cmp
outsb
pushf
push
jae
jmp
testl
shl
ficoml
push
jmp
call
add
and
xor
rcrl
xchg
cmp
ret
sti
mov
lods
rcl
add
lcall
pop
nop
jo
in
mov
jl
or
mov
in
ss
fsubr
push
test
out
jae
push
fsubrs
int
scas
loopne
in
push
pop
push
pop
mov
push
jb
int3
incl
sub
mov
mov
jno
lods
fistps
out
cmp
jae
xchg
sbb
insl
stos
addl
inc
inc
in
popf
mov
or
in
leave
dec
push
jecxz
mov
imulb
xor
cld
rorb
pop
test
mov
pop
sbb
lcall
fdiv
lcall
in
jb
mov
inc
pop
sahf
sbb
mov
mov
fdivrp
sub
gs
inc
mov
lcall
cld
lret
or
fmuls
ficomps
push
inc
aam
pop
xchg
loopne
push
dec
cltd
out
inc
adc
lahf
aas
sub
jb
sbb
lret
cmc
inc
mov
loope
jns
lds
cltd
mov
ds
push
push
mov
mov
sub
subb
dec
call
adc
or
lods
xchg
jo
pop
leave
sbb
fcmovb
xchg
fwait
mov
xor
mov
inc
jle
shl
mov
sbb
jnp
mov
fnstcw
or
or
cmp
jns
mov
and
mov
lds
shrb
jge
fsubrl
loope
ret
mov
movsl
adc
mov
test
sbbl
out
ljmp
lcall
dec
clc
sub
shr
in
mov
scas
sub
or
mov
jle
add
mov
cs
sbb
mov
scas
sbb
and
fcoms
dec
into
mov
xchg
inc
aas
shl
in
cmp
les
inc
repz
mov
fistl
aad
lret
pusha
adcl
lods
jle
mov
movsb
inc
jbe
mov
insl
pop
push
pop
push
lods
aad
in
xor
jl
stos
lret
mov
xchg
fidivrl
lea
jne
cltd
test
mov
filds
outsl
insl
rol
aas
sbb
aam
outsl
fs
add
xchg
mov
das
jns
inc
xchg
dec
xchg
add
jge
sarb
push
cmp
pop
cltd
push
xor
insb
mov
aaa
mov
test
es
push
and
fs
cmp
jl
mov
cltd
ficoml
lods
adc
fldcw
sahf
mov
mov
jno
lds
ljmp
mov
in
in
js
pop
in
popa
gs
lret
inc
xchg
jmp
test
mov
jcxz
mov
jae
xchg
aas
sbb
mov
cltd
enter
xor
sarb
xchg
dec
icebp
xchg
sub
loopne,pn
xor
aam
mov
subl
sbb
out
sahf
or
sub
mov
adc
push
jg
dec
mov
movsb
cmp
mov
jbe
dec
lret
pop
pop
jns
cmpl
mov
sti
and
lcall
jo
xchg
jg
into
jmp
mov
xor
push
call
scas
sbb
fmulp
inc
jecxz
popa
in
jecxz
test
scas
xchg
cmp
ror
add
aas
lahf
lahf
lahf
clc
fstl
cmp
dec
out
jae
cmp
pusha
xlat
lahf
mov
mov
mov
dec
insl
pushf
pusha
xchg
in
mov
outsl
push
or
mov
ljmp
mov
lea
fnsave
incb
xchg
stos
push
das
mov
in
insb
xchg
das
xchg
cmc
and
pusha
lea
pop
pop
je
jo
and
or
imul
fidivrs
movb
outsl
in
mov
stc
sub
adc
inc
and
sub
cmp
jnp
loopne
loop
loop
sub
jge
popf
mov
gs
adc
jnp
pop
fucomip
leave
ffreep
iret
mov
shr
leave
mov
mov
sub
sbb
ret
mov
push
and
mov
adc
push
pop
mov
mov
sbbl
push
arpl
xchg
cmp
outsl
fistl
adc
dec
cmp
pop
test
jmp
pop
adc
mov
test
insb
jb
sub
mov
adc
mov
and
shlb
pop
mov
loopne
sbbb
xchg
nop
mov
push
pop
dec
cld
sub
mov
sub
les
push
dec
stos
mov
fdivl
push
cs
sti
call
ds
xchg
in
lds
lock
jns
inc
dec
adc
mov
jmp
jb
in
fcoml
push
cltd
jne
push
jns
dec
lret
and
stos
sub
xchg
roll
pop
test
testl
inc
cli
in
inc
stos
adc
push
push
push
mov
scas
sbb
unpcklps
mov
pop
scas
xchg
jnp
ljmp
inc
sub
inc
lea
fadds
jnp
xchg
pop
je
icebp
insb
leave
sub
cltd
push
shlb
dec
push
cmpsb
loop
ficoms
test
lock
std
faddl
mov
push
jp
rorb
shl
int
inc
je
call
sbb
inc
or
lods
sbb
mov
gs
cld
imul
insl
mov
pushf
std
popa
mov
insl
xor
cwtl
cmc
mov
fstps
lahf
dec
xor
mov
inc
sub
dec
jp
out
outsb
xchg
sbb
movsl
mov
xor
xchg
stc
sbb
mov
xchg
sbb
cmp
xor
hlt
mov
dec
enter
rcrb
fisubs
mov
ret
into
stos
mov
in
mov
test
pop
stc
aas
negl
andb
fcoml
dec
and
jge
add
in
or
cmpsb
jle
mov
pop
pop
jbe
roll
jle
stc
inc
icebp
lock
sub
mov
roll
cli
dec
filds
lds
mov
ret
lods
inc
jp
arpl
jge
cs
adc
pop
aas
or
cmpl
aas
les
inc
and
out
stos
sub
sbb
scas
mov
loop
insb
xchg
je
push
jle
dec
mov
xchg
sub
lea
sbb
sbbb
and
outsl
pop
mov
loopne
repnz
clc
add
push
mov
pop
jge
pop
mov
inc
rclb
xor
adc
lret
mov
iret
fwait
mov
pop
movsl
xor
xchg
clc
movsl
fnstsw
push
in
xchg
or
pop
push
jne
push
fwait
add
jnp
repnz
insb
roll
jns
jo
jmp
leave
and
stos
xor
movsb
ja
cli
push
jbe
and
xchg
xor
jo
add
aaa
dec
mov
sub
pop
fadds
outsb
jg
ret
inc
sbb
bnd
push
imul
push
mov
fistpll
fistpl
insl
xor
mov
pop
cs
add
jmp
shrl
mov
mov
mov
or
aam
xchg
cmc
sbb
add
leave
pusha
cmp
or
out
push
arpl
nop
xchg
add
or
jle
in
pop
push
mov
les
mov
stos
daa
jmp
out
lret
inc
in
hlt
popf
cli
mov
sub
adc
mov
jge
pop
int
cmp
dec
lock
push
lods
inc
in
dec
cmp
jns
jb
test
mov
pushf
les
cmp
adc
adc
lcall
lea
mov
mov
xchg
mov
jl
movsb
push
mov
mov
mov
mov
fnstenv
fisttpl
movsl
loopne
popa
shlb
cli
dec
dec
out
and
mov
hlt
or
vorpd
movsl
es
mov
push
jp
sbb
sub
mov
xchg
xchg
jne
cmpsl
adc
lcall
push
dec
fistps
push
push
and
repnz
mov
lret
fsts
call
les
pusha
gs
xchg
jnp
pop
mov
test
push
add
cmpsb
jno
push
add
mov
xor
lods
mov
dec
pop
pop
or
jle
pop
dec
out
ret
out
mov
jno
mov
push
push
lcall
pop
jg
pop
outsl
popf
leave
daa
lock
cld
xor
fisttps
test
int
adcb
es
and
mov
mov
aaa
mov
aam
cmpb
out
push
je
bound
mov
jmp
mov
stos
leave
idivb
andb
aad
lock
xchg
test
and
sub
loope
sbb
into
mull
rclb
cmpsl
push
xor
adc
divb
outsl
mov
mov
push
mov
adc
push
daa
mov
je
lret
test
stc
inc
sbb
outsb
icebp
lcall
test
or
mov
mov
or
pop
push
dec
gs
jmp
xor
stos
clc
in
lods
jnp
xchg
ret
xchg
arpl
add
cmp
xchg
sbb
adc
jecxz
call
stc
in
jle
in
cmc
pop
jne
stos
add
mov
stos
in
and
mov
xlat
add
dec
and
jbe
sbb
push
dec
add
lcall
test
in
nop
jb
fdivs
inc
mov
insb
call
fiadds
enter
cld
push
adc
and
mov
or
in
cmp
repnz
neg
pop
jns
mov
xor
sbb
mov
dec
adc
lods
dec
out
push
stc
int3
mov
pop
cmc
xorb
mov
push
mov
xchg
std
mov
loopne
add
adcb
jo
das
sbb
fsub
call
sarl
jbe
mov
ret
ss
dec
hlt
sbb
push
cld
xchg
xchg
popf
out
mov
or
xor
pop
xor
jge
das
dec
jb
pop
cmp
mov
repz
sub
popa
sbb
testb
pop
rcrb
loopne
jo
ljmp
hlt
and
in
push
xor
ja
out
adc
cmp
sub
movl
mov
adc
das
js
fnstenv
pop
xchg
fcomps
lret
dec
jge
cs
imul
xor
daa
jl
dec
mov
jae
jg
mov
xchg
sbb
into
xchg
aam
and
les
sub
sbb
push
ljmp
mov
mov
in
shlb
mov
jp
inc
lock
ljmp
or
aam
push
jg
negl
mov
fidivl
mov
jb
jmp
stos
fs
cltd
outsb
adc
rorl
mov
or
fmuls
test
aam
daa
int
push
outsl
repz
sub
push
xchg
mov
pop
jo
shl
cmp
jge
xlat
jle
sbb
sub
jp
mov
ret
pusha
mov
bound
arpl
rclb
jne
jno
mov
fistpl
jmp
xlat
insl
insl
repnz
sbb
jae
insl
in
mov
ds
js
daa
hlt
int3
lcall
out
addl
test
adc
cmp
mov
add
or
cld
push
ljmp
inc
lea
jge
push
pop
mov
sub
mov
cmp
mov
jo
cmp
cmc
mov
xchg
arpl
int3
movsb
sbb
ss
dec
mov
imul
push
shrb
xor
arpl
mov
aad
lahf
mov
fs
xor
add
and
mov
xchg
and
and
dec
stos
sub
xchg
inc
xor
imul
mov
add
pop
jecxz
notb
and
nop
outsl
inc
xor
cmp
repnz
fwait
les
inc
into
repnz
idivb
pusha
aas
pop
xchg
gs
add
insb
insl
stos
addr16
push
ds
imul
pop
mov
out
xchg
inc
stos
adc
arpl
mov
inc
mov
divl
inc
push
mov
add
or
in
jg
insb
cmpb
xor
es
xor
xlat
out
stc
stos
nop
mov
mov
imul
mov
pop
sub
add
push
lods
cmp
fwait
push
jl
jbe
fisttps
shrl
cmp
mov
aam
sbb
repnz
xlat
mov
adc
adc
popl
sbb
push
ret
sbb
xor
ss
pop
sbb
lods
adc
xchg
mov
dec
jecxz
insl
outsl
ss
shr
call
out
test
repz
sbb
pusha
mov
repz
sub
or
scas
xchg
mov
out
mov
loopne
ljmp
or
cmp
xchg
mov
test
aas
nop
cmp
mov
mov
test
mov
xor
loopne
sub
sub
inc
test
push
pop
cmc
test
cmc
loopne
call
pop
cmpsl
xor
aam
nop
cld
loope
sub
sbb
test
aam
in
mov
fwait
adc
cmc
pop
daa
testb
stos
push
jmp
inc
sahf
xchg
jo
insb
dec
sub
cmc
movsl
loopne
mov
les
decl
xor
jnp
nop
cld
push
push
and
sbb
popa
or
test
adc
ljmp
xorb
mov
mov
roll
fisttpl
fiaddl
or
pusha
xchg
lds
xor
adc
push
testb
inc
sbb
int3
add
es
lods
stos
loope
les
stos
rcl
test
orb
mov
inc
jb
ds
mov
pushf
fidivs
in
sub
push
sub
cmp
jns
stos
push
xchg
mov
or
mov
pop
lods
xlat
sbb
mov
push
jp
das
cmpsb
scas
jl
movsb
dec
movsb
daa
mov
pusha
mov
rolb
jmp
dec
pop
gs
jmp
call
adc
ret
in
stc
sub
test
pop
cmpsl
lcall
fwait
jmp
inc
jle
xchg
pop
add
imul
inc
in
dec
mov
push
rcll
mov
push
fisubrl
dec
push
jmp
add
mov
cmp
mov
xor
rclb
push
xchg
mov
sub
add
xlat
outsl
xchg
pop
movsl
lock
mov
adc
shl
sbb
mov
xchg
add
sahf
jg,pt
sbb
leave
out
mov
addb
popa
ljmp
repz
ja
mov
pop
lods
imul
test
sbbb
pusha
fbstp
mov
mov
lret
push
or
jecxz
aaa
pop
push
sti
sbb
dec
aaa
ret
notb
push
jns
sub
adcl
aam
and
pusha
xchg
and
in
andl
sub
mov
fsubr
testb
fsubl
mov
ja
inc
jb
andb
adc
jae
stos
mov
cmp
xchg
arpl
xor
daa
lahf
rcrb
sbb
and
fildl
lods
cwtl
sub
leave
out
rclb
dec
push
adcl
push
lds
mov
mov
iret
flds
mov
int3
mov
mov
sub
pop
jns
push
sbb
lods
inc
mov
out
pop
inc
fstpt
inc
arpl
or
orb
test
dec
lcall
lea
lahf
push
mov
dec
xor
aaa
je
loop
leave
popf
jmp
dec
loopne
sub
loop
or
daa
test
mov
mov
sahf
xlat
cli
fsubl
fldcw
ret
sbb
shl
ss
sub
mov
mov
enter
imul
je
or
lods
or
push
dec
jmp
inc
cmc
mov
xchg
in
mov
sar
andl
test
gs
in
test
mov
jge
mov
jg
sti
jl
jmp
hlt
xor
push
stos
mov
pop
xchg
inc
leave
add
xor
or
pop
nop
int3
push
fcomps
rcrb
add
jo
dec
scas
sbb
add
imul
xchg
jno
or
mov
xchg
je
xchg
fwait
cmp
sbb
cmc
hlt
out
jae
mov
sub
add
rol
dec
inc
mov
jns
cmc
movsl
and
sbb
xor
mov
cmp
ret
and
xor
or
pop
adc
fcoms
mov
mov
lods
pop
loopne
lret
mov
fcomi
fwait
sub
out
js,pn
int3
jns
add
mov
xchg
sub
pop
mov
xor
jge
mov
mov
inc
aad
mov
leave
push
cltd
add
ret
push
fildll
adc
xor
or
push
mov
mov
pop
pop
repnz
aam
pop
orb
mov
jmp
mov
dec
je
stos
arpl
mov
roll
and
push
shlb
push
fs
or
es
fsubl
dec
loop
adcb
mov
ja
cli
jp
and
pop
enter
cmp
test
stc
mov
popf
inc
pusha
mov
adc
jge
ret
ror
mov
into
xlat
pop
ret
push
push
fs
inc
adc
jl
mov
repnz
out
jnp
in
shr
xor
sbb
fnstsw
jmp
daa
pop
sub
stos
das
icebp
fadds
add
adc
ret
cmp
dec
push
jge
mov
xor
bsf
or
rorb
adc
loopne
call
loopne
mov
arpl
movsb
enter
lea
fstpl
imul
dec
fistpll
mov
movsl
imul
dec
or
outsb
cmp
and
mov
cmp
mov
ret
cltd
pushf
out
enter
cmp
movsl
push
sub
push
xchg
adc
dec
pop
push
jge
pop
std
adc
ja
sahf
cltd
dec
xorb
cltd
loopne
es
mov
or
sbb
xchg
gs
mov
pop
add
pop
in
jp
movsl
add
sbb
fcmovu
sub
pop
fldcw
addl
insb
into
push
aas
movlps
daa
or
call
push
jae
mov
adc
inc
ret
mov
enter
push
lcall
int3
fidivrl
mov
lahf
ljmp
das
add
xchg
add
rcrl
aad
mov
mov
test
push
push
xchg
adc
xchg
or
neg
call
sbb
stos
idiv
in
cld
in
mov
inc
mov
xchg
les
jg
jmp
mov
fisubrl
in
fcoms
dec
ds
inc
aaa
mov
call
pop
test
sub
cmpsl
dec
icebp
xor
jnp
psubsb
cmp
dec
push
xchg
or
push
push
mov
xor
jb
push
sbb
mov
out
shl
mov
jnp
mov
iret
or
mov
jbe
inc
int3
jae
xor
push
xor
sbb
hlt
sub
test
lret
ljmp
jge
lcall
pop
sub
inc
push
lods
cli
mov
add
xchg
pop
mov
cmp
mov
hlt
jg
sub
jp
rcl
fdivl
in
cmp
les
std
in
outsl
inc
mov
cwtl
xor
out
lods
fsub
sbb
jns
int3
movsb
fdivl
or
popl
hlt
jno
daa
rorl
sahf
jp
dec
dec
push
lcall
mov
out
dec
adc
rcrl
push
inc
push
out
bound
fldl
mov
push
lea
mov
or
adc
jmp
push
add
inc
mov
mov
popf
xchg
pusha
sub
ja
rcr
insb
fisubs
mov
xchg
andb
cmpb
fiadds
mov
outsl
xchg
push
jae
xchg
adc
xor
lcall
mov
call
or
mov
sub
mov
push
idivb
repnz
enter
pop
imul
mov
xor
mov
inc
loope
or
outsb
fdivs
lret
xor
fnop
jne
std
dec
daa
lock
sbb
pop
adcb
in
sbb
test
dec
nop
int
fists
ret
mov
xchg
dec
movsl
pop
fwait
sbb
loope
adc
inc
cmpsb
jp
or
outsb
lea
xchg
mov
jp
push
dec
sbb
push
cld
mov
push
scas
sbb
and
sbb
jne
or
subb
rol
lods
call
fldt
mov
ds
push
push
test
ja
imul
into
push
xchg
sti
scas
jae
sub
fldl
in
sub
xchg
enter
pushf
mov
add
sbb
or
dec
or
mov
popa
xor
mov
lock
fcmovnbe
adc
jns
pushf
in
push
sub
xchg
das
aad
clc
sbbb
loopne
mov
push
jne
sub
add
dec
jns
sbb
or
jns
mov
negb
lods
lcall
sbb
sbb
cmpsl
outsb
push
cmc
movb
dec
push
das
andb
repz
mov
mov
movsl
shlb
repz
cli
ret
popa
cmp
sbb
jp
js
and
pop
cmp
push
mov
inc
test
shlb
mov
fdivrs
pop
fistl
add
jmp
cld
xor
out
add
jge
mov
out
adc
sub
dec
xor
mov
mov
add
movsb
sub
movsl
pop
insl
jb
add
xchg
add
mov
lds
jb
pusha
mov
repnz
icebp
call
adc
sbb
adc
sub
cwtl
add
jmp
mov
cwtl
scas
mov
cld
lock
or
cmpsb
add
data16
pusha
xchg
pop
roll
ljmp
adc
cs
mov
and
loop
xor
jo
lret
bndcn
sbbb
scas
outsl
push
cmpsb
push
adcl
fs
xor
out
mov
lea
mov
sbb
pop
in
addr16
adc
and
int
xchg
add
push
pop
popf
pop
xlat
shll
lds
xchg
push
mov
aad
mov
inc
pop
dec
mov
push
sub
loop
push
push
out
push
push
icebp
inc
shlb
dec
inc
insl
inc
cli
jecxz
fs
xorb
jns
xchg
aas
clc
mov
cli
sub
in
enter
pop
mov
mov
test
cmp
cmp
js
jl
mov
orl
divb
adc
inc
push
xor
lea
cmpsb
jno
aas
sbb
jnp
xchg
dec
in
mov
mov
dec
sbb
pop
adc
jp
int3
jne
fisttps
mov
imul
lods
sub
clc
push
lret
or
mov
sbb
lea
data16
sub
lods
pop
les
mov
sbbl
std
aaa
lret
movsb
cs
pop
xchg
into
inc
push
mov
or
sub
hlt
popa
loopne
jl
cmc
xor
add
mov
mov
dec
jno
and
insb
xor
mov
jp
mov
push
dec
pop
lock
aad
sbb
outsl
das
mov
xor
movsb
xlat
ret
in
jg
jae
xor
arpl
mov
mov
fsubrp
sbb
push
sbb
mov
lock
call
loopne
pop
mov
mov
xchg
iret
jo
push
addb
test
or
mov
pushl
pushf
cwtl
jl
in
inc
cwtl
dec
jnp
adc
jecxz
rcl
pusha
cmp
push
jg
rclb
pusha
insl
movsb
cvttps2pi
inc
xchg
cmp
das
pop
jle
jno
cmp
and
bound
jge
cmp
add
fwait
das
ja
shll
bound
lret
jecxz
scas
add
test
adc
test
or
stc
push
stos
icebp
mov
jbe
push
cmp
push
not
mov
les
push
xorl
sbb
dec
mov
mov
mov
in
add
mov
cmpsl
in
mov
inc
and
pop
mov
sub
imul
scas
dec
pop
adc
pop
and
adc
lahf
jg
stos
loop
sub
ds
inc
jns
in
fstpt
dec
cmp
sbb
mov
int3
pop
or
int3
add
lods
and
imul
call
mulb
pusha
in
je
push
sbb
inc
and
jb
sub
cmp
loop
pop
mov
mov
inc
les
pushf
int3
lea
mov
lcall
dec
xchg
addr16
icebp
push
mov
mov
ds
push
jnp
enter
ret
adc
test
add
aas
sbb
jno
icebp
addr16
lea
icebp
scas
pop
add
pop
repnz
les
jp
test
xchg
sbb
aas
dec
push
shll
cmp
xor
inc
mov
addr16
jnp
xor
push
mov
xor
pop
cwtl
jb
pop
sbb
sahf
mov
jbe
fldenv
jbe
sbb
mov
lahf
in
test
cltd
adc
rorb
mov
jb
and
fildl
movsl
icebp
add
shl
push
xchg
lahf
sub
inc
pop
jl
in
dec
popf
or
mov
movsb
and
dec
mov
int3
sub
dec
stos
fstp
fs
pop
pusha
mov
cmp
cmpsb
push
ret
sti
cmpsl
pusha
mov
cld
hlt
jno
jl
jbe
jmp
daa
dec
popf
pop
mov
lahf
pop
insb
popa
dec
mov
pop
jns
cmp
sub
aas
adc
cli
enter
inc
sub
call
fiaddl
jno
outsl
push
je
ds
mov
movsb
or
hlt
stos
test
mov
adc
popf
adc
dec
cli
daa
ret
mov
mov
ss
lret
mov
mov
call
decl
jge
sub
mov
add
cs
or
push
add
mov
jae
xor
loopne
xchg
rcll
idivb
push
pop
dec
cmp
dec
stc
inc
loop
mov
das
cvtdq2ps
out
mov
add
in
fdivrl
out
xchg
insw
xchg
mov
sbb
mov
dec
fmuls
fidivs
pop
cmp
imul
cmp
push
adcl
insb
outsl
or
cmpsl
push
xor
outsl
pop
mov
movsb
dec
cwtl
add
xchg
mov
inc
aad
test
nop
aaa
dec
or
jmp
inc
cmp
jle
jecxz
insb
out
notb
xlat
pop
xorl
xchg
inc
rcrl
orl
cmpsl
xor
and
in
fwait
xor
pop
xchg
mov
sbb
sti
inc
data16
je
fs
xchg
lret
xor
mov
insb
imul
xchg
cmpsl
jnp
adc
xchg
in
pop
xor
fsub
sub
addr16
call
dec
inc
leave
addr16
mov
mov
jge
jmp
mov
xchg
or
lahf
jae
push
pop
xchg
xlat
repz
lcall
das
mov
sbb
mov
ja
mov
les
bound
adc
xorb
inc
and
sub
jl
fwait
imul
cmp
clc
sub
orl
pop
xchg
dec
or
sub
test
call
stos
xchg
cli
mov
pushf
dec
dec
lcall
clc
pop
ss
idiv
mov
loope
add
cli
add
and
stc
fnstsw
loopne
sbb
add
pop
dec
in
sbb
cmp
sbb
iret
aam
xorb
fcompl
lahf
mov
jo
cmp
lret
mov
push
jp
into
pop
mov
scas
lods
loope
adc
adc
cmp
es
jae
mov
cmpsl
mov
mov
rcl
push
push
mov
lea
push
ja
lea
push
cli
inc
outsl
ljmp
movsb
sbb
xor
mov
and
inc
dec
pop
sbb
or
push
and
mov
fdivrs
in
rorb
dec
outsl
enter
xchg
fiaddl
jnp
out
stos
jl
incb
xor
lahf
xchg
test
jle
pop
mov
lahf
xor
flds
lret
mov
xor
fstpl
ret
in
mov
jb
fdivrl
xchg
iret
popa
sub
leave
sbb
push
pop
lods
mov
push
subl
sub
sbb
push
testb
fiadds
dec
or
testl
mov
jbe
mov
jecxz
and
xor
sbb
push
ret
test
sbb
in
jae
inc
loopne
xor
push
mov
mov
insl
ljmp
js
or
in
xor
sbbb
dec
mov
lds
add
fisubs
mov
int
or
push
cmp
cmp
push
xchg
mov
in
push
inc
push
sahf
lods
ret
cmpsl
les
lods
inc
inc
sub
xor
ret
mov
sarb
mov
pop
enter
cmp
nop
pop
and
inc
xchg
sub
and
addr16
aas
bndldx
jmp
sti
jmp
mov
dec
inc
push
paddsb
movsl
mov
xchg
pop
cmp
sbb
jp
mov
jge
outsb
out
xchg
adc
aaa
adc
xor
jmp
movsb
orb
xor
adcb
sbb
jge
and
fistps
fiadds
sti
or
insb
lods
jbe
mov
sahf
sbb
and
ss
cmc
or
in
xchg
xchg
int
adc
enter
dec
bound
ret
mov
xchg
xchg
xchg
mov
and
out
mov
ljmp
adc
mov
scas
aam
xchg
insb
xchg
push
push
pop
xor
push
nop
shll
xchg
adc
shrb
jae
out
push
imul
push
jb
ret
shll
mov
xor
outsb
loope
add
push
into
and
pop
es
shll
adc
push
clc
cs
cmp
std
push
jnp
les
pusha
shll
pop
mov
ficoml
out
dec
cmpl
insb
sub
push
adcb
adc
int
and
mov
bound
push
dec
push
iret
lock
aas
xor
sbb
xchg
cmpsl
insl
data16
pop
xchg
addr16
cmpsb
inc
xchg
mov
cmp
xor
inc
lds
clc
mov
cld
scas
stc
pushf
es
mov
and
fiadds
pop
addb
out
cmp
cmp
pop
jle
sub
loop
jp
mov
icebp
mov
popf
sub
jb
lock
or
jmp
mov
daa
pop
mov
mov
cmp
fisttpl
sbbl
mov
test
cmp
inc
and
inc
lahf
mov
test
xlat
in
push
or
imul
cmp
out
sbb
insb
jno
sti
lret
fs
jne
rclb
ja
cs
fsubs
fidivrs
mov
ljmp
in
push
aad
add
jle
push
movsb
or
fidivrl
stos
pop
pop
and
dec
int3
mov
xchg
xor
inc
aas
mov
mov
push
xchg
push
push
rcrl
inc
rcl
pop
sbb
xor
ja
dec
mov
rcll
sarl
sbb
push
xor
jle
pop
cmp
movsb
sbb
mov
push
mov
push
pop
into
inc
mov
or
and
jmp
xchg
cwtl
dec
push
pop
hlt
mov
cmp
test
dec
bound
shll
mov
dec
out
lcall
or
dec
rolb
or
sbb
subl
shlb
ljmp
test
fldt
sub
jbe
nop
mov
inc
out
xchg
pop
adc
mov
pop
lea
pop
jbe
scas
mov
mov
stos
xchg
je
or
ret
cmp
bound
xor
ds
fidivrs
outsl
jecxz
fnsave
sbb
jo
sub
push
mov
sbb
out
push
mov
mov
and
xor
mov
push
mov
mov
sti
ss
mov
pop
jg
xor
mov
sbb
add
fbld
mov
inc
and
jmp
xchg
jae
aas
dec
dec
jecxz
addr16
jnp
adc
sets
dec
inc
adc
lea
test
mov
int3
or
out
and
neg
mov
test
xlat
xor
mov
test
movsl
dec
std
gs
pop
and
adc
push
push
mov
pop
fcoml
std
xor
aad
shll
icebp
test
jp
xchg
ret
fnsave
leave
and
xor
jg
push
cmpsb
lds
jg
pop
jmp
dec
fmul
nop
adc
movsl
out
pop
int
dec
push
and
xchg
cmp
push
adc
rcr
pop
scas
add
push
sti
push
or
fbstp
push
or
add
adc
sbb
inc
push
out
sub
jb
pop
xor
add
mov
mov
jo
in
xchg
aad
ds
ret
scas
or
ljmp
push
es
mov
popl
push
ljmp
inc
pushf
cs
mov
insl
mov
mov
mov
ljmp
add
cwtl
into
jns
mov
cmp
insl
xor
gs
or
into
inc
pop
inc
mov
dec
aaa
xchg
sbb
loope
add
rclb
and
and
mov
jmp
cltd
movl
push
div
sbb
insl
icebp
insl
jns
gs
fs
in
andl
mov
in
hlt
pop
dec
ds
push
test
or
inc
and
add
popa
lods
push
mov
inc
sub
sub
seta
xchg
loop
loop
pop
push
inc
out
adc
js
test
aad
mov
test
push
push
out
push
sbb
in
xor
jb
and
pop
adc
lret
lods
cltd
push
dec
add
inc
outsl
mov
jl
faddl
mov
push
sub
movsl
fwait
mov
xchg
test
jb
cmp
insl
aam
std
mov
mov
mov
add
xchg
dec
int
cmp
mov
mov
sub
mov
imul
pop
lea
lret
pop
lods
sbb
std
loop
sbb
mov
cmp
jne
ficoms
jae
adc
inc
fimull
clc
dec
dec
mov
daa
movd
imul
pop
insl
xchg
rcr
inc
or
mov
and
movsb
idiv
loop
inc
ret
or
test
fstps
jne
sbb
sti
mov
and
adc
arpl
js
jmp
jle
in
adc
shl
icebp
vpsrlq
add
mov
mov
inc
inc
outsl
xchg
inc
jns
icebp
jbe
push
xchg
js
clc
int3
or
xlat
jo
ds
xor
push
test
cmp
xchg
lahf
dec
sub
fldt
popa
and
ficoms
adc
loope
jae
jmp
into
repz
add
xchg
cmp
lods
sbb
inc
jb
pop
sbb
dec
mov
filds
push
mov
push
xor
sub
xchg
into
sub
mov
cmp
pop
mov
xor
sbb
repnz
push
andl
mov
jno
xor
xchg
popa
out
adc
mov
mov
xchg
mov
lcall
repnz
cmc
out
loop
in
rolb
ljmp
cs
xor
lret
das
mov
push
insb
or
daa
rorl
push
jp
cmp
push
test
jp
js
inc
cmp
loope
adc
rorb
rorb
and
or
inc
pop
jne
mov
into
add
cs
aad
movsl
jae
mov
mov
call
jge
jae
std
aam
aad
cs
cmpsb
push
jp
fists
fnsave
dec
pop
fsub
outsb
add
lahf
in
test
and
icebp
aaa
inc
jmp
mov
out
mov
imul
test
sti
sbb
imul
adc
cmp
mov
popf
cltd
fnstcw
add
sub
fwait
and
inc
ret
addr16
inc
movsb
enter
dec
xor
mov
mov
mov
mov
sbb
jge
dec
orb
add
cs
out
jge
sub
inc
cmpsb
and
xchg
sub
ss
mov
dec
fwait
lock
and
movsb
push
xor
jb
jnp
lods
push
jne
pop
orl
movsb
fildll
movsb
out
jl
out
aas
pop
push
sbb
clc
pop
mov
int
rolb
xor
inc
push
sub
xchg
mov
and
mov
add
out
mov
test
cmpsb
push
push
data16
cmp
inc
adc
enter
mov
adc
jmp
int
aaa
xor
sbb
mov
mov
cmp
cs
ljmp
inc
fisubrl
aad
mov
mov
add
xor
leave
addr16
inc
es
inc
loop
lcall
mov
adc
loope
mov
jp
ss
sbb
lods
and
ja
scas
mov
cmp
mov
rorl
ret
repz
repnz
popa
call
shll
aam
push
fsub
add
sbb
add
jmp
rcll
loop
cld
push
loopne
dec
add
leave
cmp
lods
cmp
add
sub
mov
jbe
push
cmpsl
inc
mov
fcoms
add
call
daa
loop
sarb
push
jl
xchg
adc
mov
push
andl
adc
into
mov
push
push
dec
sub
ret
inc
mov
inc
gs
push
fwait
mov
hlt
xchg
in
cwtl
mov
subl
je
xchg
cmc
or
aad
into
push
or
imul
aas
clc
or
adcl
jnp
xor
lret
inc
aad
repnz
test
call
inc
loopne
jge
leave
icebp
lods
mov
xor
mov
push
mov
mov
repz
sbb
cmp
xchg
xchg
inc
adc
lcall
push
stos
mov
inc
test
jmp
pushw
outsl
incl
pop
dec
pusha
in
nop
sub
popf
outsb
in
jp
or
scas
data16
lods
sbb
sbb
add
add
mov
dec
jo
xor
dec
jbe
ret
enter
mov
xor
push
mov
mov
dec
out
push
or
leave
aad
stos
ret
arpl
lret
out
cmp
cli
and
mov
adc
stos
mov
mov
sbb
scas
sarl
mov
jns
fs
sahf
inc
jmp
pop
mov
push
sti
repnz
loopne
mov
mov
add
mov
fdivrs
cmp
push
or
loope
call
rcr
adc
and
adc
pop
aaa
imul
dec
mov
pop
xor
or
outsb
cli
or
sbb
sbbb
xor
and
mov
mov
fs
mov
in
inc
push
xchg
pop
jbe
stc
adc
add
xchg
push
push
jne
cmp
add
out
adc
fiaddl
mov
push
mov
push
mov
or
aaa
aaa
cmpl
inc
imul
icebp
movsl
pop
pop
cmpsb
push
cwtl
xchg
notb
js
ljmp
in
sti
loop
stos
push
pop
jbe
jmp
arpl
andl
movsb
cmp
sbb
jge
rcrb
mov
jbe
bound
add
iret
mov
add
jl
lea
in
enter
cmp
sub
add
mov
pop
cmpsl
push
pop
xchg
mov
push
je
adc
push
mov
outsb
add
lds
inc
mov
pop
dec
bound
pop
xchg
xchg
int3
cli
add
pop
icebp
jno
sbb
imul
sbb
shl
popa
cmpsl
sub
cmp
fwait
jb
inc
in
xlat
mov
popf
divb
ljmp
paddsw
outsb
loop
jns
out
popa
insb
jbe
icebp
int3
icebp
ret
loope
add
fnstcw
and
popa
xchg
cwtl
push
jo
ja
sbb
out
cltd
xor
cmp
pop
xor
and
inc
cmp
lods
xchg
xchg
xor
leave
or
iret
xchg
repz
sbb
xchg
xor
jmp
es
fstps
sbb
lret
mov
and
and
enter
mov
sbb
aas
aaa
xchg
xchg
movsl
jle
fistpl
dec
fwait
adc
and
push
es
jne
cmpsb
test
inc
sahf
les
imul
jo
push
sarl
and
decb
xchg
sbb
loop
or
mov
mov
sub
jmp
ja
ja
lret
neg
outsb
movsl
adc
jbe
cmc
pop
movsl
or
and
popa
pop
dec
fldcw
and
iret
mov
xchg
mov
daa
push
cli
push
ret
add
jg
mov
mov
into
sbb
popf
ja
leave
mov
outsb
rclb
add
insb
and
lret
cltd
inc
lods
loopne
sbb
and
addb
and
fldl
xor
xchg
adc
and
sub
adcb
cmp
or
cs
mov
add
mov
cmp
or
jg
fwait
adc
pop
adc
mov
jle
mov
xchg
pusha
les
gs
int3
and
push
lock
outsl
rcrb
mov
popl
push
shl
inc
pop
rcr
adc
mov
mov
mov
sub
mov
jg
loopne
int3
push
sbb
xor
in
out
imul
cmp
paddsb
add
pop
and
and
dec
mov
call
sub
sub
add
cmpsb
lods
dec
insl
xchg
dec
jae
sahf
and
sbbb
dec
jg
mov
in
nop
incl
xor
push
in
nop
clc
sbbb
jecxz
push
clc
jmp
mov
or
aas
inc
push
lds
mov
dec
lds
or
xchg
cmp
rcrl
aam
inc
aam
test
rorl
mov
sbb
xchg
push
loopne
and
into
out
push
mov
jle
and
push
jbe
cmpsl
inc
stc
pusha
mov
pop
into
adc
mov
mov
jl
and
mov
frstor
shr
xchg
mov
jmp
pop
dec
push
xchg
stos
mov
mov
and
fidivrl
jp
in
add
or
rolb
mov
mov
out
out
testb
add
xlat
xchg
and
stos
dec
fs
sbb
fwait
repz
pop
mov
repnz
ficoml
aas
jns
inc
pop
pusha
call
out
aam
cmpsb
mov
pop
sub
pop
js
mov
jl
mov
adc
jo
inc
cmpsl
push
add
arpl
push
and
loop
fcmovnb
lret
loope
cmpsl
jns
ss
out
test
fs
mov
mov
xchg
push
dec
sbb
shll
jl
xchg
inc
int
lock
lret
mov
sbb
add
sbb
inc
jg
lods
sub
add
ficoms
mov
jge
test
push
movsl
jmp
ret
sbb
pop
pusha
sbb
mov
data16
mov
cltd
loop
and
xor
aaa
lret
insb
inc
and
nop
scas
sbb
jle
pushf
xchg
inc
xchg
pop
mov
cmp
jl
outsb
fwait
cwtl
movsl
dec
xchg
enter
data16
mov
out
jb
dec
lods
sbb
xchg
dec
inc
cmpsb
xor
ljmp
add
mov
and
mov
std
mov
jo
jmp
stos
data16
cmp
decb
dec
arpl
out
xchg
or
nop
add
jmp
xchg
push
jmp
sbb
sub
xchg
aas
xchg
in
sahf
xor
je
outsb
adcl
add
mov
jbe
xor
andps
add
lret
push
inc
pop
pushf
lea
or
test
push
xor
rcrl
daa
loope
adc
jg
aaa
mov
xchg
andl
jge
sti
xchg
adcl
and
dec
push
int
scas
pop
jl
pop
filds
pop
jge
repnz
imul
in
test
test
and
lcall
push
addb
call
movsb
imul
int
in
lds
sti
and
dec
mov
inc
push
testb
mov
out
push
mov
in
into
mov
sbb
mov
mov
lock
in
mov
sti
add
lahf
adc
jge
imul
test
ficoms
arpl
ffree
sub
add
sbb
push
mov
loope
mov
rolb
mov
push
jno
adc
mov
mov
xor
pop
in
testl
mov
js
lds
icebp
mov
cmp
rcr
mov
shlb
add
fwait
sbb
cld
je
roll
push
in
aad
cmp
and
loop
mov
loopne
push
dec
sub
and
mov
xchg
shrl
repnz
xor
in
cmpsb
inc
cltd
add
sub
loope
aas
andl
jno
std
fbld
mov
ret
inc
sbb
out
adc
adc
and
cmpsb
jae
bound
outsl
stos
and
push
mov
in
pop
bnd
cld
inc
mov
fimull
mov
ljmp
fst
dec
mov
sbb
add
push
mov
cld
andb
jge
popf
add
scas
sahf
xlat
imul
xchg
or
or
and
or
pop
jecxz
pop
mov
jae
push
xchg
jge
je
or
and
pusha
push
std
or
and
dec
test
mov
sbb
testl
xchg
loope
mov
filds
ret
scas
mov
add
mov
cmpsl
enter
pushf
jecxz
stos
mov
imul
leave
mov
gs
fadd
or
ret
jge
stc
push
mov
cmp
out
pop
push
fidivl
jp
fcoml
xlat
inc
xchg
fdivs
mov
lock
je
in
mov
scas
pop
pushf
jae
mov
jmp
xor
jno
or
int
repnz
iret
aad
dec
sub
sarb
fistl
aas
fildl
mov
jae
xchg
xor
inc
enter
mov
mov
mov
in
test
xchg
push
dec
adc
cmp
push
sub
les
bnd
xchg
mov
pop
clc
pushf
sbb
lea
sub
mov
frstor
mov
iret
hlt
sbb
xlat
int
push
jb
xchg
cmpsl
jo
scas
inc
cmp
subb
lock
adc
out
sahf
pop
sbb
jl
pusha
dec
sub
imul
clc
mov
dec
loope
and
and
adc
loope
mov
outsl
das
leave
test
in
inc
iret
adc
push
imul
into
test
cmp
popf
inc
insb
test
xchg
fldl
jg
hlt
sub
dec
mov
imul
cmc
outsl
icebp
repnz
mov
icebp
push
cmc
andl
sub
cld
adc
lods
shll
xor
xor
jbe
xchg
cmp
jae
sub
pop
add
aas
sub
fsubs
jns
rcr
mov
or
or
pop
adc
test
dec
push
hlt
push
fsts
adc
sbb
stc
pop
xchg
ljmp
inc
mov
and
jno
add
in
punpcklbw
cmp
sbb
loopne
imul
mov
popa
xchg
roll
xchg
ret
ret
addr16
xor
cmpsl
lahf
pop
shrb
sub
sbb
fdivs
pop
xchg
test
mov
ror
icebp
testl
leave
push
sbb
imul
iret
push
pop
cmp
push
xor
movsl
fdiv
sbb
cli
sti
fwait
sbb
or
cmpsb
push
lret
adc
pop
mov
mov
mov
pop
mov
or
mov
test
rorl
push
movsl
xor
shl
and
adc
lret
mov
dec
and
xor
test
add
aad
jmp
mov
push
push
test
dec
mov
adc
xchg
out
enter
mov
aas
jno
and
adc
mov
aam
xor
mov
mov
outsb
mov
adc
xor
scas
add
jnp
mov
shl
push
xchg
mov
mov
lahf
mov
aas
or
movsl
rcrl
pop
mov
mov
icebp
in
repnz
outsl
pop
inc
jns
lcall
cs
mov
loop
mov
repz
rclb
mov
jge
jne
mov
jg
scas
xchg
lahf
cmp
mov
mov
dec
xchg
pop
or
mov
sahf
out
in
outsl
adc
pop
clc
je
xchg
sub
dec
and
xchg
jle
mov
out
sbb
jge
jecxz
nop
xor
loopne
fbld
xor
xchg
push
lret
test
add
sub
mov
jl
push
xchg
mov
js
das
cmc
pop
push
push
or
fimull
push
jo
mov
adc
dec
push
cmp
cmpb
ret
aaa
imul
mov
lret
in
jno
test
imul
inc
pop
cmpsb
sub
popf
les
sub
mov
xor
mov
ss
mov
cmp
lods
idivl
incl
dec
and
aas
inc
lret
dec
jl
mov
popa
cmp
int3
fmuls
outsb
lea
xchg
sbb
pop
lds
aas
xchg
outsb
dec
sub
std
mov
cld
inc
xchg
in
xchg
adc
xchg
mov
jo
roll
andb
mov
repnz
push
ficompl
shrl
dec
add
mov
pushf
xchg
rcll
mov
movsl
add
sub
and
movsl
mov
jnp
xchg
mov
andb
cmp
cmp
fdivl
inc
mov
xchg
int3
or
es
inc
pushf
outsl
and
loope
sub
cmp
push
pop
dec
movsl
xchg
mov
dec
enter
add
push
andb
pop
fisubs
push
vpaddb
xor
aad
sub
mov
jbe
stos
mov
and
es
popl
sti
scas
push
xor
mov
adc
add
in
sbb
inc
xchg
in
test
add
adc
or
aas
mov
scas
jg
jg
clc
test
pop
xchg
xchg
cwtl
pushf
cmp
ljmp
nop
popa
mov
xlat
clc
adc
rclb
ja
fdivrs
cmp
jmp
fcmovnu
mov
pushf
fsubr
leave
aas
stos
insb
mov
mov
stc
loopne
fsubrl
or
dec
aas
test
cmc
jns
in
inc
jnp
mov
jno
loope
jecxz
cltd
sbb
aas
aad
or
mov
sarb
aas
ja
cwtl
jns
iret
out
gs
mov
jnp
out
and
scas
popf
and
iret
jo
daa
and
rorl
mov
jecxz
xor
das
or
add
sub
out
int3
bnd
xchg
out
icebp
popf
jo
jge
stos
cmp
imul
inc
pop
pop
cmp
rep
lea
dec
jl
and
lds
mov
pop
cmpl
lock
vcvtpd2dq
xlat
sarl
sahf
sub
jbe
clc
daa
cmp
ret
lea
mov
add
mov
std
jo
adc
mov
and
call
les
iret
cmc
jle
bound
test
cwtl
repz
test
adc
stc
stos
imul
int3
mov
pop
dec
xchg
push
mov
or
sti
fsubrl
cmp
push
push
outsb
xchg
in
cmp
jl
outsl
enter
add
mov
or
pop
push
stc
pop
loop
inc
sahf
jno
mov
sbb
fsubr
aad
out
xor
mov
out
rclb
in
mov
loopne
push
shrb
sarb
in
pushf
xor
push
jecxz
sub
xchg
mov
shll
icebp
xor
cmpl
adc
int
mov
adc
xor
push
lret
xchg
shl
or
cmp
fwait
lret
push
mov
loopne
xor
or
repz
jae
pop
aad
xchg
inc
xor
cli
push
call
test
lds
imul
mov
rol
and
sub
pop
jns
rorb
xlat
sub
add
and
mov
cli
dec
jb
std
ja
lret
sbb
or
pop
mov
testb
cmp
call
or
jno
shll
pop
mov
leave
dec
dec
popa
or
mov
arpl
mov
fiadds
sbb
aam
fnstcw
xchg
mov
test
fisubrl
jle
jns
cmp
stc
loope
xor
scas
push
xchg
hlt
jmp
les
out
imul
call
mov
mov
push
mov
mov
or
push
jb
sub
xchg
push
push
pushf
xchg
movsb
movsb
fdivrl
nop
loop
popf
aad
fmull
out
fistps
inc
icebp
into
push
lea
lcall
call
int3
inc
and
or
mov
repz
pop
enter
test
ss
push
not
aad
inc
les
pop
int3
mov
iret
inc
popa
orb
stos
or
dec
sar
fsubrp
adcl
in
sbbl
inc
test
popf
jge
mov
push
push
or
decb
cmp
push
pop
out
outsb
iret
xchg
mov
leave
aam
adc
jb
mov
xchg
xor
pop
les
aad
mov
stos
pop
mov
jb
fisttpll
mov
push
sub
test
sarl
add
in
popa
inc
jp
lock
inc
mov
les
ljmp
ljmp
pop
sbb
pop
pop
std
jmp
fnstsw
jno
leave
mov
pushl
aaa
fistpl
add
outsl
lock
jne
sbb
xor
jmp
adc
rcll
mov
pop
jo
cmp
fisubs
xchg
push
mov
lock
test
addr16
add
mov
inc
sub
mov
insb
outsb
movsb
xchg
mov
mov
xchg
xor
fldcw
lahf
andl
xor
rorl
push
xchg
mov
jl
std
and
jns
jnp
mov
pop
sbb
pop
xlat
mov
imul
push
mov
jb
jg
hlt
cmpsb
inc
pop
mov
mov
fwait
scas
aas
mov
popw
or
or
push
pusha
mov
push
enter
jnp
jmp
pusha
fldcw
or
pushf
xchg
xchg
mov
in
pop
jae
das
fwait
enter
adc
repnz
or
xor
mov
push
adc
lods
and
mov
push
les
mov
outsl
dec
xlat
and
xor
mov
iret
mov
loop
sbb
inc
lods
lods
sbb
arpl
mov
insl
sub
movsb
scas
cmp
addr16
data16
and
and
adc
outsl
adc
test
push
aad
std
cmpps
and
adc
cmc
nop
movsl
sub
jb
ljmp
or
fidivrs
roll
test
push
loop
push
and
and
jae
sub
cmpsl
cld
je
inc
jmp
mov
mov
jp
push
icebp
dec
dec
push
daa
insl
xchg
lcall
adc
xchg
cld
jp
mov
add
mov
fstpl
gs
aas
sub
xorb
fldcw
mov
repz
mov
mov
pusha
xor
imul
mov
fdivl
add
in
movsb
jp
js
stos
ss
and
bound
scas
sar
pop
je
adc
insb
xchg
out
xor
jle
je
std
and
iret
int3
lea
popf
push
fucomp
xchg
fs
xchg
sub
dec
scas
shlb
mov
scas
cmp
xor
int3
push
fldt
push
push
pop
jnp
sbb
pushf
dec
test
fadd
dec
popf
pop
lcall
outsb
pop
popf
out
pop
mov
sbb
push
xlat
lahf
arpl
cmp
lea
mov
cmpsb
inc
xchg
ds
dec
or
cmpb
or
in
gs
leave
mov
sti
adc
mov
iret
mov
xchg
jle
ret
or
pop
cmp
pushf
pop
cmp
and
xor
aad
rcrl
xchg
or
adc
or
test
inc
loop
inc
push
adc
xor
jl
jo
jae
insl
rol
cmp
loope
xchg
sbb
or
dec
jno
inc
pop
jmp
mov
mov
sub
insl
xchg
cmp
mov
push
mov
push
fistps
sti
test
inc
cmp
imul
xor
mov
dec
or
icebp
mov
out
push
inc
cltd
sbbb
mov
and
leave
loopne
fiadds
hlt
scas
jb
push
loop
add
jle
jp
movsb
out
std
es
ret
push
fsubrp
insb
lock
jp
dec
scas
mov
repnz
add
mov
lock
pop
xchg
jno
or
int
cmpsl
pop
push
sub
jb
ret
mov
or
add
jmp
and
or
bound
shr
fs
xchg
jmp
push
scas
or
test
jg
psubusb
mov
test
push
lcall
inc
add
sbb
popa
jae
aad
and
popf
shr
hlt
stc
and
push
mov
cmpsb
lock
nop
mov
pop
mov
jle
das
and
test
test
and
xchg
ficoml
lods
fisttpl
stos
sahf
mov
and
sbb
jmp
gs
and
sbb
pop
and
xchg
add
dec
and
inc
jp
shll
pop
enter
jecxz
aad
daa
adc
dec
into
test
xor
mov
xchg
xor
push
repz
and
out
repnz
bound
fidivrl
pop
pop
jle
or
mov
push
xor
sub
test
and
out
mov
ljmp
icebp
inc
jle
pop
popl
push
fs
aad
mov
jecxz
lcall
data16
pop
pusha
loope
jnp
xor
lret
mov
lret
shr
dec
jbe
mov
icebp
sbb
dec
decb
aas
xchg
mov
loopne
outsb
xchg
inc
mov
mov
les
cmp
mov
cs
out
mov
fnstsw
push
sub
psllw
jp
lock
jae
mov
or
leave
xlat
inc
pusha
pop
lret
inc
hlt
mov
inc
test
add
loope
push
aaa
jge
inc
inc
sub
mov
test
inc
popa
out
mov
adc
shl
insl
scas
and
push
sahf
sub
test
rorb
shll
sbb
inc
adc
shrb
insb
pop
mov
mov
push
mov
imul
sub
in
lds
push
out
dec
nop
or
gs
pop
xor
push
pop
push
jae
popa
pop
inc
push
test
in
pop
and
addr16
add
call
mov
imul
mov
repz
shll
xchg
bound
out
sarl
in
xor
test
push
inc
dec
push
and
add
xor
pop
xor
out
jle
in
dec
pop
or
sub
mov
xor
jnp
inc
xchg
add
add
xchg
cwtl
pop
daa
mov
push
or
das
jno
mov
sahf
dec
and
hlt
lods
xor
int
cld
jne
mov
adc
dec
xchg
scas
call
leave
xchg
cmp
data16
ds
js
or
pop
pop
aas
and
add
outsl
or
test
imul
sti
add
xor
inc
daa
mov
push
or
mov
xchg
xchg
outsl
sbb
push
outsb
jns
and
nop
lcall
jp
jmp
xchg
mov
and
into
insb
or
pusha
adc
push
xchg
or
or
sbb
mov
scas
jne
aaa
cli
push
xlat
je
clc
jmp
mov
fisttpll
iret
adc
mov
fs
xor
sbb
imul
int3
jnp
dec
pushf
xor
popa
mov
insb
popa
sub
add
add
dec
fcmovne
xor
push
xchg
xor
outsl
pop
nop
sbb
ds
jbe
mov
orb
pop
std
mov
inc
xchg
fucom
dec
inc
mov
adc
mov
out
add
rcrl
stc
inc
pop
pop
mov
jecxz
inc
cmpsb
push
adc
mov
test
jp
lods
push
xor
sub
sub
add
sub
hlt
shlb
scas
xor
fnstcw
mov
shlb
aam
repz
shlb
pop
push
je
pop
sti
fidivl
in
in
and
clc
cmp
inc
or
aas
mov
imull
xor
mov
aaa
ss
pop
and
push
pop
outsb
fldcw
out
outsb
inc
loope
addr16
mov
hlt
or
cmpsl
or
sub
mov
ret
xor
adcl
aas
mov
in
push
sub
movsb
and
leave
icebp
dec
ljmp
push
dec
or
sbb
call
sti
aas
xor
testb
mov
adc
cltd
mov
and
ja
imul
lock
mov
pop
xor
mov
cmpsb
int
lahf
push
cld
and
or
cli
pop
sbb
xchg
movsb
les
out
rcr
hlt
das
add
fimull
lret
mov
pop
js
inc
arpl
test
or
sarl
pop
mov
mov
psllq
shl
imul
add
cld
lds
cmpsb
push
div
xor
dec
pop
loope
push
mov
cmp
sub
jno
insl
mov
or
jecxz,pn
fldenv
or
mov
add
das
in
shl
push
add
js
sbb
mov
xor
xchg
jne
insl
inc
aas
inc
push
cli
insl
stc
arpl
xor
cwtl
cmc
es
in
std
ljmp
push
jmp
add
and
scas
scas
cmp
lods
jl
lret
clc
mov
mov
out
mov
shl
or
es
pop
jmp
mov
add
cld
add
push
call
adcb
mov
xchg
rorl
out
xor
and
jae
pop
fs
test
sbb
and
push
cmpsl
les
push
repnz
mov
flds
mov
or
xor
dec
pop
sarb
fnstsw
test
inc
adc
andb
dec
mov
adc
imul
scas
dec
cwtl
pop
lret
add
push
pushf
jmp
insl
popf
pop
rorl
jb
icebp
je
jno
xor
pop
ds
cmp
mov
insb
decb
cmpsb
pop
or
push
xchg
xor
sbb
pop
mov
popf
das
adcb
ja
imul
mov
sub
lret
and
call
push
inc
adc
push
int
imul
ja
push
insb
jbe
testl
dec
mov
pop
dec
inc
inc
jb
and
pop
sbbb
sbb
xchg
cmpsb
out
push
repz
adc
sub
xchg
aad
and
xchg
ss
mov
stc
push
cmp
mov
jo
es
add
xchg
daa
sub
cmp
jl
mov
leave
jecxz
loope
loopne
das
vpsrlw
inc
mov
adc
pop
add
xor
xchg
inc
pop
imul
mov
push
lea
movsb
lods
ja
cmp
jp
inc
fnstcw
lods
int3
mov
cmc
mov
ret
mov
xor
enter
out
pop
lret
cmp
jb
test
jae
lret
addb
int3
repz
aam
sbb
test
jge
xor
insb
mov
add
out
cmpl
push
push
sahf
testb
lods
test
out
or
inc
jg
sub
testb
lock
mov
imul
or
ds
adc
lods
jge
add
fistpll
hlt
xor
ret
push
out
outsl
jae
repnz
dec
and
jmp
jne
and
mov
add
mov
or
mov
push
add
add
xchg
push
cmp
and
fldenv
mov
loop
outsb
mov
cmpsl
mov
mov
dec
jb
mov
out
outsb
adc
pop
mov
js
roll
or
sub
dec
insb
test
mov
arpl
cmp
sbb
addl
mov
dec
je
push
outsl
in
push
push
fdivrl
sub
mov
gs
mov
push
movsl
mov
jne
sbb
sbb
cmp
inc
daa
popa
mov
ret
add
ss
pop
pop
mov
movsb
mov
imul
add
push
jmp
fcoms
out
pop
dec
mov
and
dec
jmp
in
xor
inc
rcr
lods
push
inc
notl
rcrl
cmp
push
xchg
pop
out
out
ficoms
repnz
lret
dec
fsubs
and
add
xchg
and
push
or
pop
insb
and
jnp
clc
inc
pop
lahf
mov
leave
std
cmp
mov
das
mov
sub
fmuls
mov
outsb
test
pop
xchg
ret
add
nop
jb
mov
push
sti
add
and
push
cmpsb
ljmp
pusha
rcll
js
adc
stos
xchg
jg
pop
jp
jb
cmpxchg
rolb
addr16
dec
aas
jecxz
cmpsl
or
pop
fisubl
rol
mov
ja
inc
xor
pop
xchg
mov
cld
pop
sbbl
call
addb
cmp
jp
aam
mov
mov
push
subb
rcll
outsl
cltd
mov
out
sbb
cli
testb
inc
notb
js
mov
movsl
mov
stos
mov
lds
insl
popa
je
cmp
test
inc
mov
jb
add
jge
cmp
test
push
flds
fldcw
sbb
sub
dec
or
popf
gs
fcompl
or
lods
jo
repz
in
bound
popf
mov
orb
mov
push
mov
cld
and
mov
sbb
dec
pop
push
sub
mov
movsl
mov
cmp
das
lret
lea
cmc
jb
jbe
aaa
or
bound
lods
or
lock
xchg
iret
cmpsb
pusha
gs
repnz
scas
fistps
mov
sub
rorl
outsl
mov
pusha
add
or
dec
js
incl
mov
inc
sub
rorl
stc
iret
fwait
int3
dec
test
stos
add
jo
out
ds
sub
repz
jg
or
pop
push
movsl
sub
jp
mov
xchg
sub
cmp
mov
cmp
cmp
lock
je
shrb
hlt
dec
push
outsl
repnz
mov
push
or
dec
xor
cmp
bound
loop
add
lods
pop
push
push
mov
fisubs
ljmp
jae
and
call
fldcw
rcl
repz
daa
add
xchg
aaa
aas
daa
xor
jne
mov
into
sar
push
adc
bswap
dec
pop
sbb
sbb
mov
sub
lods
mov
xchg
fldl
pushf
bswap
int
shlb
cwtl
in
addr16
mov
int3
inc
inc
jecxz
sbb
scas
adc
sub
sahf
sbb
push
insl
sbb
into
xlat
and
push
roll
fnstcw
les
sub
and
cltd
or
lds
loop
and
xor
sub
hlt
and
inc
inc
sbb
mov
xor
outsl
test
pop
jle
pop
cmp
cmp
add
outsl
aam
in
mov
mov
mov
adc
int
test
add
sbb
outsw
push
xchg
mov
out
jmp
inc
and
jns
push
es
xor
or
push
xchg
lods
and
cmp
mov
xchg
xchg
adc
pop
adc
dec
push
xlat
cwtl
mov
dec
ret
mov
hlt
jno
popa
push
shl
sub
mov
dec
rorl
add
and
dec
jae
cmpb
xchg
jbe
mov
push
inc
xchg
pop
imul
xor
mov
cmp
rclb
data16
xchg
dec
lea
mov
xor
jmp
cmpl
push
inc
fcmovbe
lods
repz
nop
mov
mov
ror
mov
data16
dec
sti
mov
adc
mov
adc
cli
out
ret
arpl
mov
jo
adc
push
sbb
add
mov
stos
add
es
outsb
adc
cltd
loopne
mov
jo
lret
cmp
fistps
cmpsl
movsl
cmpsl
push
test
cs
les
xchg
xchg
inc
or
fucomp
sub
addl
es
jo
adc
push
sub
fisttpl
dec
push
mov
test
test
add
cld
push
xchg
or
addr16
mov
mov
jge
lahf
int
sbb
mov
dec
out
mov
inc
ficompl
inc
imul
je
xchg
mov
stos
jns
mov
je
pop
mov
jbe
sub
scas
or
or
and
sbb
xchg
mov
test
add
gs
and
lods
pop
into
inc
fdivs
sub
mov
adc
dec
lret
xor
push
out
inc
aam
mov
mov
xchg
into
push
pop
push
int
sub
xchg
xlat
outsb
mov
mov
ja
scas
fsubs
imul
cld
in
out
rorb
cmpsl
test
mov
pop
leave
push
inc
lcall
xchg
add
mov
pusha
add
cmp
mov
mov
cmp
pop
dec
jg
jmp
push
jl
mov
push
dec
scas
jg
cwtl
sti
xchg
cmp
test
add
nop
insl
mov
sbb
cmc
testb
mov
xchg
repz
jae
testb
mov
jb
push
mov
cmp
les
jg
cmp
xchg
sub
push
ljmp
jnp
loope
jo
xchg
sub
mov
fmulp
enter
ja
sub
aas
mov
and
inc
or
jb
inc
inc
sbb
mov
mov
xor
mov
jg
pop
push
pop
dec
je
insl
es
xor
sahf
jmp
movsb
iret
mov
xlat
xor
and
je
push
into
push
addb
pusha
push
jl
in
push
sbb
cltd
add
or
jbe
mov
pop
dec
cmp
ret
ret
xor
and
cld
mov
add
sub
mov
iret
push
loope
cmp
aas
lret
mov
jl
push
push
dec
sarb
out
shlb
jg
mov
sti
add
jae
les
stos
cltd
ret
cmp
inc
mov
jae
je
inc
iret
mov
inc
pop
repz
push
enter
or
cmp
insb
cmpl
cmpsb
pop
lods
sti
insl
shrl
jne
push
insl
js
ja
clc
stos
add
xchg
out
fwait
in
sbb
js
stos
inc
dec
jbe
xchg
je
popa
ja
fwait
movsb
negl
mov
push
adc
inc
sub
push
pop
leave
clc
je
or
push
sbb
xorb
inc
int3
xchg
sbb
and
rclb
in
xchg
repz
call
sti
cmc
adc
rcrl
cltd
decb
cltd
sub
ljmp
imul
add
fildll
inc
leave
fsts
or
dec
cmp
pusha
mov
add
lock
add
test
jmp
pop
outsl
lds
xchg
dec
popa
mov
popa
jmp
mov
test
mov
adc
push
cmp
ja
lock
js
out
insb
xlat
or
test
scas
pop
pushf
das
add
jmp
mov
dec
jb
jecxz
out
dec
jmp
daa
mov
push
mov
adc
aas
popf
lock
daa
jno
sbb
scas
sbb
push
cltd
cwtl
into
bound
data16
xlat
scas
cli
pop
mov
stos
mov
idivb
xchg
jnp
mov
lods
xchg
jl
int3
lds
enter
rcrl
rcll
add
mov
enter
xor
aad
dec
mov
stc
in
sti
mov
bound
cwtl
and
mov
adc
push
cmpsl
addr16
or
rclb
xchg
sbbl
aaa
stos
cmp
add
sbb
mov
bound
sarl
pop
fidivrl
add
sub
inc
sub
mov
shrl
test
and
cmp
addr16
dec
popf
or
neg
push
mov
and
push
hlt
inc
dec
adc
daa
mov
xor
dec
push
xchg
out
xorb
mov
je
movsb
xor
cld
aaa
jmp
enter
cmp
lock
xchg
mov
and
and
icebp
xorl
jmp
rolb
or
mov
mov
out
push
inc
fwait
ret
mov
das
mov
sub
repnz
outsb
lret
add
push
cmc
sbb
dec
stos
mov
inc
imul
daa
sahf
cmc
lea
loopne
jb
das
test
in
push
mov
mov
dec
add
cmp
call
shlb
jae
out
jl
testl
lea
test
hlt
rorl
loopne
insb
push
pop
in
xchg
mov
xchg
jns
lods
outsb
out
aas
lahf
pushl
add
xchg
rclb
pop
sbbb
arpl
inc
xchg
sbb
and
xlat
movsl
or
out
movsb
push
es
fistl
sbb
jmp
sub
push
xchg
aad
mov
lret
jae
push
jp
loopne
arpl
stos
sbbl
insb
mov
mov
icebp
imul
mov
cmpsl
pop
ds
ja
aad
sub
and
dec
cmp
js
xlat
sub
aam
loop
pop
and
and
popf
or
cmpsb
stos
mov
mov
xchg
xor
pop
sub
cmp
dec
pop
shl
push
shlb
add
repz
xchg
in
cmp
and
dec
push
in
cmp
pop
mov
pop
xor
test
mov
scas
pushf
sub
sbb
inc
mov
cli
fisttpll
mov
mov
cmpsb
mov
push
inc
test
or
sahf
xchg
mov
filds
and
mov
into
fsubl
cmp
mov
stc
push
popl
xchg
and
outsl
out
jnp
ficoms
jo
pushf
ss
imul
push
mov
push
leave
loope
insb
out
mov
ds
or
or
test
test
imul
movsb
popa
in
pop
mov
popf
lock
adc
mov
btsl
ficomps
in
inc
rcl
push
push
mov
mov
mov
popf
sbb
xchg
imul
sbb
add
lods
fldenv
pop
and
dec
mov
mov
pop
pushf
push
dec
push
mov
hlt
push
ss
shll
mov
pop
pop
loop
cli
ficompl
movsb
inc
xlat
out
mov
xor
cmc
movsl
push
and
inc
dec
xlat
div
cmpb
outsl
mov
cmpsb
dec
je
xor
xor
sub
outsb
cmp
lret
jmp
mov
testl
xor
push
test
test
xchg
mov
adc
ds
add
adc
cmp
sarl
sub
in
insl
push
push
push
dec
mov
aas
xchg
ficomps
push
mov
mov
cltd
arpl
pop
lcall
jle
xor
sub
sbb
pop
loope
and
fildl
movsl
std
scas
dec
scas
add
aas
and
pop
xor
test
adc
push
jne
cmpsl
pop
pop
sub
cs
js
and
sbb
sbb
ss
jl
negb
cmpb
push
loop
add
call
ror
pop
dec
test
fsubs
xor
add
lret
jae
test
outsl
jg
jg
cmpsl
clc
negl
xor
and
idivb
daa
insb
fcoms
inc
mov
sub
cmp
cld
mov
scas
sub
cmpsl
out
push
negb
fwait
test
push
es
popa
mul
jl
cwtl
xchg
adc
aas
in
shll
push
imul
ret
addl
adc
lahf
imul
sbb
dec
jbe
bound
les
ds
into
fdivr
push
lods
jge
lahf
fsts
mov
pop
js
shrb
xor
push
push
pop
xor
pop
int
push
cmp
sub
test
inc
inc
xor
inc
add
xchg
or
sub
mov
mov
in
fstps
or
repnz
cmp
adc
std
mov
dec
xchg
sub
mov
cli
out
pop
xor
insl
push
xor
add
cmp
jmp
jbe
mov
andb
cmc
mov
mov
push
cli
in
cld
lds
xor
adcl
out
divl
pop
addr16
lock
sbb
jnp
jle
pop
pop
adc
mov
xchg
inc
inc
cmp
xchg
fnstcw
mov
or
sbb
and
out
fcomps
push
pop
sahf
xor
andb
mov
loop
pop
jmp
loope
test
and
cmp
insl
ja
aad
lret
fmuls
inc
jnp
mov
jnp
xchg
or
addr16
std
xor
mov
sahf
mov
xchg
mov
mov
call
dec
jle
mov
hlt
test
test
lock
mov
lret
test
jnp
cli
inc
roll
pop
mov
jle
and
xchg
mov
les
mov
cmp
mov
imul
leave
push
jne
lods
das
std
dec
addb
sti
cmp
sbb
sbb
mov
xchg
mov
pop
xor
cli
int
mov
add
cltd
in
std
mov
cmp
aas
jbe
cmpsb
mov
jne
popf
push
sub
stc
jno
xlat
cmp
imull
dec
leave
xor
test
mov
xlat
xchg
cli
sbb
lea
aad
jl
and
jae
mov
les
imul
inc
out
cmp
mov
xor
enter
mov
xchg
xor
cs
jne
mov
pop
ljmp
push
jae
shrl
aaa
pop
mul
repnz
pop
hlt
xchg
in
xchg
lahf
jb
xchg
pop
in
ja
or
mov
fbld
cs
jne
xchg
dec
pop
or
add
lahf
cld
jo
cmpsb
or
mov
dec
and
xchg
jns
aaa
mov
mov
jle
lahf
imul
insl
loop
push
cmp
jnp
call
jb
fsubrl
cli
mov
add
xor
xchg
and
mov
cwtl
pop
inc
jle
lock
mov
mov
pop
xor
cmpsb
aas
hlt
mov
push
test
mov
pop
add
ja
in
pop
add
fnstsw
push
into
xchg
es
das
add
imul
mov
imul
mov
mov
ja
cmpsb
in
jb
and
loope
fcomps
sbb
adc
sub
dec
push
or
fwait
stos
cmpsb
in
in
stc
das
xchg
fwait
mov
lods
cmp
lret
mov
mov
das
pop
sti
xor
and
inc
fsts
leave
out
or
inc
lahf
test
mov
cmc
das
and
sub
push
aam
outsb
dec
mov
test
orb
and
mov
lret
hlt
dec
or
push
or
icebp
mov
sub
mov
sbb
js
adc
movsl
mov
lret
rolb
adc
int3
cltd
adc
sbb
in
sub
addb
iret
aaa
adc
gs
loop
mov
pop
xchg
in
std
xlat
jge
mov
jno
cmp
pop
clc
in
inc
or
addr16
inc
jno
and
sbb
call
jmp
insb
inc
sbb
adcb
mov
pushf
call
push
xor
and
fsubrs
movsb
mov
iret
mov
test
lcall
jg
pop
mov
mov
mov
in
sbb
jns
clc
mov
sub
xor
iret
xor
not
fwait
add
lock
out
cmp
insl
lock
mov
out
lock
and
xlat
jo
ljmp
mov
es
enter
sbb
jl
mov
push
and
or
and
rorb
sbb
mov
dec
test
fcomps
lea
aad
loop
dec
dec
fisubrs
jge
inc
repz
lret
pop
pop
pop
lahf
inc
ficoms
repnz
push
mov
pop
mov
imul
fcomps
cmp
movsl
jp
dec
and
loopne
inc
imul
mov
movsl
push
shlb
imul
xlat
and
mov
das
leave
pop
jae
mov
sub
adc
xchg
je
and
shll
pop
sbb
cld
movsl
xchg
push
inc
adc
mov
sub
mov
mov
clc
lret
leave
sbb
xor
sub
shlb
push
daa
popa
aaa
fnclex
mov
adc
stc
test
inc
and
xchg
movsb
cld
mov
push
cmpsl
cltd
or
jp
mov
out
iret
sub
rcll
xor
jno
xchg
addr16
adc
mov
dec
test
mov
sub
lds
and
mov
pop
or
ret
fstl
hlt
or
shlb
push
in
imul
clc
idivl
sub
mov
gs
mov
push
jle
lods
mov
cmpsl
mov
push
jns
xchg
sbb
mov
add
jg
ret
pushf
adc
pop
sub
stos
adc
xor
mov
popa
ljmp
sar
popf
inc
xchg
mov
jnp
xchg
rolb
inc
fld
stos
adc
xorl
sub
xor
and
ss
test
je
push
xor
outsl
dec
push
inc
or
xlat
pop
xor
jb
sub
mov
and
test
xor
push
jmp
mov
ror
xor
and
push
outsl
push
sbb
or
std
cmp
dec
push
es
or
cwtl
ficomps
sbb
push
test
adc
mov
mov
nop
mov
xor
in
ja
fisubl
pop
push
outsb
xlat
insb
sbb
ss
jg
shll
rclb
push
mov
repnz
cld
daa
roll
sub
push
mov
cmpsl
lcall
sbb
cmp
adcb
sbb
jne
cltd
out
jbe
sub
cmp
sahf
data16
ljmp
jno
fldenv
push
mov
addb
xchg
adc
sarb
pop
add
cld
cmpsl
sbb
mov
mov
lea
xor
loopne
mov
aas
nop
cwtl
pop
test
sti
faddl
ret
cltd
inc
int3
jp
fs
jp
xchg
jns
mov
mov
add
lds
push
cmp
mov
xchg
cwtl
sbb
pop
mov
dec
mov
loopne
pop
mov
out
inc
arpl
or
clc
addr16
daa
pop
or
test
sub
push
cwtl
sbb
fbstp
sahf
lret
dec
push
lret
push
lds
sub
jecxz
in
and
rcrb
dec
cld
sahf
lahf
push
sub
pop
out
inc
jmp
adc
jge
ret
iret
fmul
hlt
push
mov
sbb
sarb
imul
sbb
mov
dec
and
add
pop
movsb
push
inc
sbb
dec
test
xor
xchg
subl
fnsave
mov
xor
in
fidivl
jno
and
scas
and
pusha
cwtl
fcmovnu
push
add
loope
and
subb
and
lock
sub
adc
aad
gs
arpl
lock
lea
cmp
or
popf
dec
lods
js
sbb
or
in
aad
dec
and
out
xor
lea
jne
push
dec
stos
sub
hlt
dec
push
mov
and
call
pop
stos
jno
push
dec
and
xor
mov
jge
mov
pop
push
jle
pusha
fiadds
lahf
jbe
adc
mov
pushf
pop
add
pop
imul
loopne
das
je
int3
push
dec
and
mov
pop
lock
stc
cmp
add
sbb
pop
and
mov
jne
push
imul
mov
dec
call
jno
xchg
fildll
mov
inc
fcompp
mov
dec
jnp
add
fnstcw
xor
insl
cltd
xor
dec
pop
inc
mov
sub
imull
jbe
call
mov
dec
popf
scas
sbb
adc
mov
repnz
ljmp
sbb
mov
jl
jmp
adc
fwait
fs
jle
add
js
lret
pop
outsl
sbb
fsubl
xchg
add
in
or
imul
insl
imul
movsl
xor
lea
lcall
mov
fs
or
mov
add
int3
sub
cwtl
shll
adc
cmpsb
test
xchg
sub
and
cmp
mov
mov
call
sbb
or
or
jmp
push
jecxz
icebp
pop
jl
out
mov
lods
push
es
inc
and
lret
sub
jmp
fcmovne
std
jo
pop
adc
xchg
or
cmp
lret
dec
repz
lcall
push
add
xchg
dec
pop
mov
sub
pusha
or
adc
xchg
scas
stos
bnd
or
mov
xor
dec
lahf
lcall
sbbb
outsb
dec
mov
sahf
sub
mov
lods
popf
fucomp
iret
dec
cmp
xchg
jo
mov
dec
add
gs
std
xchg
mov
pop
sub
gs
call
mov
pop
out
push
sbb
lret
out
call
or
pop
shld
mov
cmp
push
xlat
data16
and
mov
mov
sub
in
enter
mul
push
lcall
xchg
ljmp
pop
push
jne
adc
jecxz
mov
xchg
in
test
arpl
mov
out
jno
mov
push
call
movsl
mov
mov
add
es
cmp
mov
shrl
lods
aad
lea
int
inc
mov
call
lea
bound
sbb
xor
cwtl
jo
dec
loop
rcll
sbb
adc
hlt
dec
hlt
out
add
lahf
mov
add
mov
sbb
stc
add
inc
push
enter
out
adc
test
in
repz
repnz
shlb
mov
pop
iret
inc
mov
add
cmc
cwtl
jmp
loopne
repz
push
loopne
cmp
push
push
adc
fwait
enter
pop
mov
lods
adc
lods
adcb
stc
inc
add
ds
jbe
mov
jp
inc
mov
mov
sub
out
adc
push
imul
imul
mov
stc
outsb
adc
xchg
add
sub
cli
push
movsb
add
adc
dec
mov
shr
cmp
or
scas
outsb
fadds
int3
je
lock
sub
sub
icebp
orl
push
jmp
dec
sbb
add
ret
adc
ss
mov
in
pushf
in
cmpl
cmpb
sarl
fwait
and
mov
mov
in
or
hlt
adc
in
jns
aaa
pop
sti
ffreep
mov
or
add
pop
adc
mov
je
cwtl
mov
inc
lret
adc
dec
jle
arpl
in
or
push
sbb
cmp
loopne
push
mov
test
stos
pop
push
add
sbbb
inc
out
test
stos
sub
inc
dec
dec
aaa
jle
or
ds
adc
adc
test
jae
push
clc
sbb
mov
out
ss
scas
jmp
xchg
lret
sahf
dec
mov
mov
aam
sub
push
js
fwait
jl
lods
insb
pushf
mov
hlt
jg
cmpsb
jl
out
jmp
fidivrs
in
sbb
lods
inc
iret
test
divb
cmp
js
in
mov
es
mov
sub
repz
push
pusha
pop
push
pop
lea
pushf
gs
push
inc
xchg
outsl
sbb
mov
jno
mov
mov
jp
lods
out
imul
pop
addr16
jo
adc
mov
xchg
pop
sti
gs
pusha
test
or
mov
and
aaa
repz
mov
repz
xor
fmuls
xchg
repz
xchg
in
add
scas
sbb
xor
mov
ret
jbe
inc
push
into
and
pop
xchg
test
jmp
pop
dec
sbb
add
pusha
dec
add
mov
test
out
sbb
call
bound
jecxz
xchg
cwtl
pop
test
ds
push
jbe
xchg
mov
xchg
mov
out
mov
jg
movsb
rcrb
pop
pop
pop
insl
stc
aam
xorb
std
movsb
rorl
jmp
in
xchg
sub
in
xchg
xchg
shll
rcll
push
sub
leave
xor
cld
loop
sbb
cltd
sbb
push
repz
pushf
xor
lods
sub
imul
mov
hlt
es
push
pop
add
movsb
push
push
cli
icebp
sbb
adc
ja
repnz
mov
test
ret
cwtl
or
pop
leave
shl
jne
sbb
cld
and
sbb
lock
jmp
pop
icebp
push
enter
cmpl
add
mov
lds
pop
xor
test
js
ficompl
mov
inc
int3
fwait
xor
in
inc
or
andl
in
mov
pop
and
faddl
jne
out
mov
sti
push
or
icebp
cli
sub
jmp
shll
cmp
les
push
loop
ret
cwtl
dec
mov
or
into
lret
adc
and
test
fsub
lret
in
das
arpl
out
movsl
mov
lahf
ja
sub
icebp
ss
push
pop
xlat
jl
push
adc
xchg
rorb
loop
cli
xchg
mov
add
xchg
stos
mov
out
jg
sbb
pop
clc
dec
jnp
lds
lock
add
mov
push
sub
outsb
leave
rcrl
bound
int3
scas
cmp
cmc
hlt
mov
pusha
stc
lods
mov
mov
xchg
nop
bound
hlt
test
notb
fiaddl
xorb
repnz
stc
and
pop
jle
test
cwtl
lods
adc
mov
in
leave
lcall
and
ret
outsl
or
fnstenv
pop
inc
dec
sahf
cmp
add
fimull
lock
adc
xchg
sub
mov
jle
and
cmp
and
inc
mov
xlat
mov
ja
sbb
and
popf
cwtl
jo
cmp
addr16
mov
lock
imul
adc
das
add
or
int3
rcll
fcoms
aad
sahf
call
push
bound
xchg
das
jne
adc
scas
mov
push
subb
lsl
sbb
or
xor
fdivrl
lods
dec
and
sub
cmp
std
xchg
ss
mov
xor
jge
cli
in
scas
inc
push
pop
xchg
nop
mov
or
push
add
repz
xor
int
and
xchg
nop
pop
push
mov
push
and
rcll
mov
sbb
cmp
out
fisubrl
fcmovbe
mov
push
and
clc
add
jae
sub
xchg
outsl
jbe
inc
shlb
pop
enter
addr16
push
popf
cmc
loop
mov
dec
pop
inc
fwait
stos
inc
aaa
mov
iret
sbb
mov
outsl
mov
jns
pop
and
in
repnz
stos
and
cltd
scas
inc
inc
xchg
mov
fsubrs
jno
shrl
xchg
daa
cmc
push
push
sbb
pop
nop
insl
inc
push
xlat
dec
xchg
loop
fwait
leave
jmp
ds
mov
inc
out
pop
sub
lock
mov
mov
fimuls
gs
push
hlt
add
imul
ja
add
mov
lcall
sub
sub
push
inc
outsb
pop
and
inc
movsb
mov
mov
fisttps
in
insl
and
add
lahf
imul
sbb
sub
cmp
dec
int
pop
aaa
mov
mov
std
jmp
lret
mov
gs
add
data16
jecxz
jl
enter
cmpsb
inc
stc
adc
cmp
pop
arpl
push
sbb
pusha
jl
sbb
sub
cmp
movsl
xor
pop
test
add
add
fsubrl
addr16
push
adcb
add
xchg
cmp
dec
or
insl
cwtl
mov
jmp
das
xchg
repnz
mov
stos
shrl
add
xor
les
jno
adc
fdiv
and
scas
loopne
pop
cmp
mov
xchg
xor
mov
xor
test
mov
add
mov
push
into
aas
call
jb
out
js
shrb
lock
ja
ret
into
add
out
mov
mov
sti
mov
mov
jecxz
mov
mov
push
out
dec
pop
daa
ss
mov
xchg
loopne
mov
push
jecxz
pop
fistl
mov
inc
rolb
sub
mov
scas
js
cmc
and
sbb
inc
dec
mov
stos
test
es
sbb
jae
sbb
fnstenv
jbe
std
jno
int
adc
iret
lahf
and
push
stc
mov
adc
shrb
or
ja
mov
ret
in
xor
iret
fnstsw
sbb
mov
adc
cmp
xor
rol
dec
or
shrb
sub
pop
dec
jo
and
jb
push
popf
add
leave
xchg
not
das
push
dec
dec
jmp
repz
les
and
dec
gs
pop
and
push
xchg
icebp
daa
pop
adc
rolb
mov
or
in
mov
sbbb
pushf
fisubs
pop
test
stos
iret
mov
jne
fildll
test
stos
pop
sbb
xor
xchg
jp
movsl
fwait
cmp
out
sahf
bnd
repz
jp
rorl
loopne
int3
adc
push
in
pushf
inc
fs
bound
sbb
sbb
add
fiaddl
and
jle
sarb
cmpsb
cmp
test
pop
cmp
push
data16
mov
enter
fidivrl
xchg
mov
movsl
push
jge
push
mov
dec
dec
push
mov
std
push
in
push
js
add
jecxz
inc
push
sti
mov
pop
cmp
xor
ret
mov
into
add
mov
inc
xor
jne
loopne
xchg
lds
je
lods
imul
int3
lods
aam
xchg
hlt
cmp
dec
outsb
xor
mov
jbe
mov
jno
stc
adcl
nop
xor
sbb
mov
jecxz
pop
lds
repz
and
fisubrs
dec
daa
into
aad
adc
push
fistps
inc
mov
lahf
movsb
push
push
adc
inc
popa
fcomps
stos
lret
iret
push
clc
jl
and
xchg
sub
push
mov
sub
push
push
inc
adc
xor
pop
sti
mov
decb
dec
mov
insb
maxps
cmpsb
test
xor
sub
sbb
add
sbb
adc
lock
out
addl
cld
mov
pop
mov
ds
xor
or
shrb
sub
orb
out
insb
dec
inc
lahf
cld
xchg
push
test
repz
sti
mov
hlt
cld
icebp
pop
es
int
push
jno
add
divb
shrb
jb
outsb
test
xchg
add
shl
sub
sub
out
xlat
outsl
xchg
jmp
mov
out
jge
cs
jle
dec
int
in
sbb
mov
into
push
inc
sbbl
hlt
push
das
dec
push
add
mov
mov
pop
sbb
push
adc
js
mov
addl
in
clc
xchg
mov
jmp
test
mov
jb
dec
lock
outsb
mov
shrl
das
sbb
sub
cmc
xchg
jns
fs
xorl
cld
pop
cmpsl
jbe
jo
sub
cli
mov
in
lock
inc
sub
mov
addl
cmp
shrb
mov
hlt
fwait
add
sbb
mov
jmp
mov
adc
add
mov
jo
sub
fsubl
mov
mov
imulb
adc
inc
dec
int
and
in
add
cld
popa
out
sti
add
pop
sub
cmp
je
cmp
ficompl
mov
sub
dec
enter
sub
movsl
push
mov
mov
pushf
call
xor
sbb
jle
mov
pushf
lahf
jnp
adc
xor
mov
lock
xchg
repz
sub
lods
jo
lea
fnstenv
pop
jg
or
int3
pusha
test
ret
fistl
into
in
or
mov
jmp
lds
mov
adc
jno
dec
jnp
pop
jnp
mov
imul
add
lcall
mov
mull
mov
jle
fs
clc
faddl
fwait
cmpsb
fidivrs
jge
in
data16
stos
inc
push
shrb
cmp
inc
call
jmp
fwait
inc
cmp
or
pop
sbb
push
jmp
es
add
mov
adc
mov
insl
jl
fdivs
push
call
pop
jl
jnp
fyl2x
xor
xchg
dec
cmp
cmp
fcomps
orb
cmpsl
movsb
sub
add
pop
push
jns
mov
in
mov
leave
icebp
arpl
enter
jmp
movsl
dec
xchg
ljmp
inc
or
sub
repz
mov
mov
cltd
in
in
push
sub
cwtl
incl
pop
jmp
xchg
or
mov
mov
jmp
mov
dec
mov
fcompl
movsb
shll
test
mov
xor
imul
cli
push
and
pop
mov
gs
push
add
cmc
adc
jbe
xor
add
idivb
inc
pop
shll
push
out
enter
lahf
and
repz
cmp
xchg
mov
cltd
inc
and
lret
jno
dec
mov
xchg
or
jns
lahf
loope
inc
pop
pop
xchg
addr16
imul
loop
and
and
icebp
jae
inc
dec
add
ret
pop
adc
test
inc
andb
mov
xor
popa
lock
pop
frstor
mov
loopne
fidivl
cmp
decb
int
mov
ds
jg
sahf
push
sub
push
cltd
jle
lret
sbb
mov
vmovhps
adc
clc
lods
aad
lcall
in
cwtl
test
data16
repnz
stos
cs
bound
mov
icebp
jmp
orb
mov
ss
mov
xor
jl
inc
pop
fldcw
gs
leave
cs
jno
test
addr16
inc
arpl
fprem1
mov
movb
pop
jne
decb
ss
xor
std
mov
xchg
mov
adc
mov
daa
mov
xor
jns
stos
dec
fldl
pushf
jae
jnp
fidivs
push
jnp
ss
push
test
pop
pusha
repnz
divl
in
adc
jns
xor
sub
test
xor
sub
sbb
fistpl
lcall
mov
mov
mov
or
fidivrl
add
stc
mov
sbb
pop
xlat
cmp
fistpl
sbb
in
cmp
pop
add
or
ss
xchg
sub
mov
mov
ret
jb
mov
ds
rcrl
adc
fwait
filds
xor
paddd
cmp
or
sub
lods
js
pushw
push
scas
frstor
icebp
jbe
mov
inc
rorb
push
shlb
jge
mov
pop
lods
test
mov
xchg
xchg
pop
mov
addr16
pop
out
adc
fimuls
cwtl
jecxz
pop
fadds
xchg
stos
pop
mov
hlt
lock
je
or
and
rorl
cmc
dec
adc
shll
testb
call
insb
mov
jns
std
lret
mov
pop
hlt
and
cmp
lret
fwait
xchg
pop
dec
out
int3
das
test
in
cmp
xchg
rcl
insb
and
in
jp
mov
clc
or
jl
movsl
ljmp
xchg
fmuls
in
cld
lahf
xchg
pop
mov
xlat
cwtl
xchg
mov
inc
mov
in
repnz
mov
sbb
in
lods
and
push
xor
jbe
cmpl
or
jl
jge
pop
rorl
adc
stc
dec
sbb
leave
in
push
rclb
sbb
iret
inc
pushf
mov
xor
shr
sub
push
leave
cmpsb
iret
mov
or
enter
xor
lea
dec
cmp
sub
in
sbb
fxch
xor
fstpl
scas
test
fs
icebp
gs
mov
push
dec
lods
sub
icebp
cs
pop
orb
loopne
mov
xchg
mov
popa
hlt
mov
mov
dec
jmp
repnz
adc
mov
cmp
int3
or
icebp
jno
in
jns
mov
bound
jmp
push
cs
dec
movsb
jb
popl
mov
push
sti
daa
push
xchg
pop
dec
dec
add
clc
addr16
mov
mov
sub
inc
daa
mov
sbb
cmp
imul
jae
mov
scas
in
andb
sbb
dec
sbb
loop
jne
stos
mull
outsb
dec
sahf
repz
lds
ja
cmc
in
les
inc
pushf
push
xlat
orb
and
and
cmpsb
je
xchg
cli
lret
fdivl
push
repnz
rcr
cmp
pop
jle
ljmp
push
inc
mov
fcmovb
cmpb
int3
xor
mov
das
mov
mov
arpl
out
or
push
cmpsb
sub
xlat
inc
mov
adc
mov
adc
call
push
jbe
jl
cmp
pop
daa
stos
imul
insb
xchg
xor
pop
std
xchg
add
mov
xchg
in
pause
jns
or
clc
push
negb
pop
sub
jmp
sbb
adc
rorb
dec
lods
es
jns
xor
test
mov
insb
pop
rcrb
adc
dec
cmp
inc
imul
jo
xchg
int3
sub
and
testl
dec
lea
mov
arpl
icebp
shlb
aad
repz
insb
imul
fistl
push
add
push
das
inc
test
and
outsb
mov
jg
lret
jg
es
mov
mov
inc
ljmp
cmp
jbe
xchg
dec
inc
dec
push
insb
mov
push
mov
pop
jb
adc
xchg
es
inc
inc
sbb
inc
shlb
inc
es
cmp
jl
and
xor
mov
nop
je
mov
orl
ds
pop
jb
pop
jmp
ljmp
aam
push
cli
jne
adc
dec
inc
in
add
int
ror
adc
cmp
sbb
test
fs
sbb
out
jg
insl
jl
add
cmp
lods
inc
xor
push
sbb
add
or
pusha
lea
in
add
adc
mov
pop
std
adc
icebp
out
std
shll
imul
lret
aad
ret
mov
dec
xor
sarl
and
xor
mov
jns
dec
inc
and
out
inc
int3
add
adc
roll
xorl
pop
fildll
dec
cmp
imul
ret
inc
ss
mov
adcl
adc
or
push
inc
jb
pop
mov
lock
and
push
add
xlat
orl
inc
movmskps
dec
dec
xor
mov
repz
rol
dec
and
dec
add
aam
movsl
mov
mov
imul
pop
cmpsl
lds
adc
stos
push
dec
xchg
pop
shll
mov
fistpll
pop
and
filds
xchg
insb
iret
lock
int3
cld
push
call
sahf
pop
xor
insb
movsb
je
pop
sub
dec
or
adc
call
and
jns
push
jmp
xor
xor
das
mov
xorl
pusha
out
les
loopne
sub
out
fs
adc
add
bound
pop
popf
pop
scas
or
andb
insb
movsb
and
popa
mov
inc
pusha
and
in
mov
sub
mov
ds
idivl
inc
push
enter
cmp
addl
es
cmp
loopne
popa
push
pop
mov
mov
int
fstps
jl
fstpl
pop
fcom
xor
or
movsl
dec
outsl
ret
es
cltd
and
mov
sub
lcall
repnz
stos
insl
xchg
and
loopne
and
mov
xchg
das
jp
xor
fcmovnu
mov
mov
notl
scas
xor
in
xor
mov
pop
mov
and
jnp
sub
mov
mov
or
jl
inc
aad
sbb
xor
int
push
mov
mov
cld
jb
insb
mov
jp
dec
lea
js
push
jp
add
jno
cmp
ljmp
adc
loopne
or
es
out
push
stc
pop
push
popa
fistpll
in
hlt
push
lea
arpl
pop
out
scas
pop
icebp
add
sub
dec
sbb
xor
lods
mov
sbb
adc
out
bound
mov
push
mov
mov
push
jns
adc
testb
mov
pop
jno
divb
icebp
out
das
out
or
mov
ds
sub
scas
push
add
jmp
frstor
hlt
pop
sbb
and
xchg
adc
flds
mov
pop
iret
xchg
mov
test
pushf
pop
jbe
pop
cltd
sbb
aaa
jmp
sub
pop
pop
pop
cmpsl
mov
lret
push
fidivrs
insb
xor
icebp
pop
ficoms
fcomp
pop
aas
cs
or
movsl
addb
push
in
sbb
lea
xlat
mov
push
int
and
xchg
inc
sub
je
insl
outsl
xchg
pop
test
xchg
xor
aas
jb
xchg
push
lret
inc
mov
cwtl
sahf
push
je
fwait
inc
nop
cmpsl
icebp
pop
push
push
fmuls
mov
and
pop
xchg
sbbb
cmp
sar
sahf
sbb
xor
add
mov
loopne
out
gs
lcall
add
inc
xchg
pop
jmp
push
aad
sbb
cmpsl
sub
flds
cmp
outsb
jl
lods
ret
testb
cmp
lods
incb
mov
orl
inc
inc
fistl
cli
lret
movsl
stos
fs
jb
jbe
xchg
roll
leave
lods
and
mov
push
add
mov
push
jl
lahf
jecxz
pop
push
push
lds
ss
ja
adc
arpl
sbb
push
jg
iret
cmpsb
pop
aad
shr
inc
stos
and
out
sub
mov
push
mov
loope
adc
mov
xor
mov
inc
jl
and
sbb
add
pop
xchg
lods
dec
push
andb
or
cmp
pushl
out
popf
push
xchg
jbe
int3
sti
xor
shll
js
sbb
and
mov
jo
mov
lahf
test
out
mov
jne
rcll
mov
in
adc
push
imull
add
xchg
sub
cmpps
jle
add
xor
push
dec
mov
cmp
hlt
iret
test
movsl
jle
and
test
jne
xor
outsl
pop
push
xor
mov
xchg
and
xchg
je
mov
enter
movsl
ljmp
mov
sbb
sbb
ja
mov
push
out
out
mov
xchg
aam
dec
movsb
sbb
or
inc
movsb
movl
fsubrs
mov
mov
aaa
dec
jmp
call
stos
rcr
xchg
jbe
mov
repnz
xlat
loopne
out
mov
pop
mov
mov
int
mov
push
add
jbe
mov
stos
sub
shll
cli
mov
push
or
jns
push
add
or
es
cmpsb
add
sarl
mov
jg
lock
ja
pop
movb
stc
mov
pop
call
xor
xchg
mov
in
das
outsl
or
and
mov
aaa
inc
mov
dec
cmp
in
dec
xor
sub
push
and
and
jle
inc
loope
pushf
inc
repz
lcall
cmp
add
or
jl
iret
lret
popf
cmpsb
mov
pusha
adc
mov
test
jbe
js
cmpsl
mov
mov
add
inc
stc
dec
mov
popa
push
and
mov
outsl
mov
js
cmpb
fsubrl
sti
jnp
lock
fadds
push
and
mov
push
or
cmp
xorl
inc
xchg
dec
xlat
mov
jns
repz
xor
mov
adc
jae
fmul
mov
sbbl
icebp
cmp
pop
out
jl
cmp
rcl
inc
addr16
lods
int3
push
sbb
fcom
xchg
cwtl
sahf
sbb
stos
fisttps
lahf
fucomp
in
push
dec
adc
mov
inc
pop
mul
sbb
pop
adc
sti
repz
orb
jns
push
sub
rcrb
lret
mov
test
rcrl
enter
inc
addb
pop
call
mov
test
dec
lea
sbb
cs
testl
imul
pop
ret
jge
or
ja
rcrl
daa
mov
jo
or
jge
je
outsb
pop
jge
add
push
and
mov
int
test
in
cmp
into
inc
insb
clc
pop
es
xor
jl
icebp
mov
lock
inc
jmp
rcr
push
sbb
cmp
push
in
xor
jns
xor
sub
adc
pushf
push
daa
scas
mov
cmp
adc
aam
jecxz
lcall
pop
insl
jo
push
xchg
nop
mov
or
out
mov
xor
loope
addl
out
xchg
insl
push
rcrl
movsl
jge
icebp
cmp
jp
fstpl
or
enter
gs
or
jle
filds
fdivrs
incl
jne
adc
xor
dec
sbb
dec
pop
js
gs
ja
rcr
push
and
orl
mov
call
lods
pop
in
cs
fldt
in
inc
iret
push
dec
cmp
sub
push
cli
icebp
inc
xor
pop
dec
jb
fwait
mov
addb
jg
xor
call
mov
or
sbbb
shr
loopne
sahf
add
add
add
fcmovne
cltd
pop
push
adc
js
test
dec
push
shrb
stos
pusha
push
repz
and
sub
jbe
call
leave
pop
js
mov
or
xchg
fstpt
hlt
adc
cmp
ret
xlat
fwait
sub
pop
mov
data16
add
and
sar
push
xchg
sub
popa
cmpsb
test
pop
cmp
sub
jo
inc
scas
aam
jns
pushf
loopne
jb
xchg
xchg
ret
pop
mov
mov
sbb
shl
pop
loope
fildll
loop,pt
mov
je
inc
add
test
sahf
adc
xchg
lods
dec
lcall
push
test
jl
jne
xlat
aas
push
push
movsb
and
or
int
mov
mov
mov
outsl
sub
shlb
or
and
push
repnz
cmpl
adc
lea
add
xchg
cmp
scas
xchg
mov
icebp
pop
jge
jle
cmpsl
pop
adc
adc
adc
mov
push
push
sbb
ror
lods
lea
repz
movsl
nop
scas
fstps
pop
push
sbb
push
test
fildl
icebp
fcmovne
mov
in
push
xor
add
adc
rcl
xor
jp
stc
push
xlat
mov
repz
sahf
sbb
sub
rcll
mov
cmp
pop
mov
ja
lods
loope
mov
mov
dec
and
fsubrl
xor
into
fimuls
push
push
cmc
aam
imul
outsl
sub
das
sti
mov
or
push
push
stos
push
aaa
shrb
xchg
or
and
in
cmp
nop
push
mov
adc
inc
mov
in
mov
repz
cmp
sbb
lea
loope
push
jp
cmp
dec
loope
mov
ja
ret
pop
mov
scas
mov
lahf
and
adc
cld
scas
popf
mov
fidivl
dec
jb
outsb
scas
es
addl
sub
or
shll
dec
add
sti
lea
ljmp
xorl
clc
mov
pop
sbb
pushw
mov
xchg
xchg
call
mov
pop
mov
out
fimuls
jl
mov
add
shrb
scas
jle
stos
jae
aad
jno
xchg
cwtl
icebp
mov
js
pop
dec
iret
cmp
xor
fldt
int
and
cmpl
add
push
scas
add
mov
fisubrs
outsb
and
aad
into
jae
inc
cmpsb
jecxz
iret
cmpsl
push
jle
jge
int
mov
xchg
ret
xchg
push
into
jl
push
scas
and
pop
insb
add
pop
scas
mov
ret
negb
mov
xor
les
fdivs
pop
fistps
mov
or
shr
and
pop
leave
xchg
xor
cmpsl
leave
pop
push
adc
jecxz
lahf
xlat
inc
jae
add
arpl
fimuls
mov
sbb
outsl
hlt
sbb
testb
jo
pusha
aam
sub
rcrl
jle
scas
cmpsl
mov
mov
test
jno
dec
das
push
enter
push
pop
lea
inc
cmp
cmpsl
mov
cmp
test
xor
mov
mov
ss
lcall
dec
insl
mov
push
pop
popf
adc
out
xchg
dec
adc
jecxz
jp
adc
out
xchg
add
repnz
leave
negl
inc
adc
xlat
mov
cmc
fists
fstps
sbb
and
jle
pop
dec
ss
and
xor
cmp
jb
mov
int3
add
daa
xor
xchg
pusha
adc
mov
inc
and
sub
sahf
fcomp
push
pushf
out
addr16
es
cmpsb
mov
pop
out
or
sti
xor
or
inc
mov
pop
cmc
rcrb
lods
pop
and
xor
cmpsl
std
xchg
sbb
insl
jmp
stos
adc
icebp
push
mov
dec
fwait
incl
mov
and
sub
ror
cmpsl
sub
dec
popa
in
mov
cmp
test
shll
lea
pop
pop
mov
jl
test
mov
dec
mov
add
mov
test
aad
xor
fists
jmp
sti
or
addr16
or
lock
arpl
push
dec
cmp
loope
ss
mov
push
xorb
in
in
jmp
xchg
shl
dec
mov
push
adc
aas
xor
xchg
enter
lds
mov
jo
test
or
dec
push
into
lcall
add
das
dec
jnp
lret
push
movsb
inc
dec
cwtl
dec
fisubs
fdivs
jne
std
into
test
sti
xchg
sbb
sub
xchg
jp
add
sub
push
add
nop
aaa
into
hlt
cmp
adc
dec
sub
jmp
outsl
aam
and
sbb
xor
push
in
jge
cmp
addb
lret
cmp
sbb
mov
and
stos
inc
mov
out
pop
push
popf
jl
rorb
daa
icebp
cmc
add
adc
mov
pop
xchg
imul
xor
xorl
leave
push
nop
cmpsb
sbb
or
mov
mov
xor
mov
addr16
xor
or
fisubrl
sti
add
jmp
cld
mov
dec
and
iret
fs
call
adc
das
test
adc
mov
cs
call
test
xchg
imull
inc
jmp
fidivrs
xor
inc
cmc
and
xor
mov
pusha
mov
jnp
xchg
jg
fs
xor
mov
xchg
ljmp
pop
outsl
inc
test
int3
imul
adc
clc
cmp
jg
loopne
hlt
or
mull
add
and
dec
popa
loope
lock
add
xchg
xchg
test
push
add
inc
hlt
js
outsb
jb
das
shll
and
ja
mov
rcrl
aad
cmp
cmc
push
mov
es
stos
push
icebp
mov
sub
sub
cmp
pop
inc
or
xchg
imul
repz
out
mull
in
mov
aas
int3
push
cli
movsl
push
insb
jl
and
sub
js
cmp
and
call
testl
sub
scas
sbb
fimuls
add
nop
jge
test
xor
lret
imul
cmpsl
nop
lea
movsl
xor
sub
mov
call
loope
mov
sub
jb
inc
mov
sbb
out
imul
jbe
mov
popa
mov
inc
daa
jbe
repnz
mull
dec
mov
lcall
loope
lods
dec
lcall
jl
mov
shl
dec
iret
push
cmp
mov
es
xchg
loop
gs
mov
dec
pop
sbb
fistpl
sbb
adc
ret
ficoml
bnd
fwait
iret
into
ds
and
rcrl
and
pop
mov
jno
rcr
xchg
into
xor
cwtl
daa
sub
hlt
jmp
out
jns
stc
pop
imul
movsl
dec
js
js
fcmove
lods
in
ds
or
bound
mov
dec
pushf
and
mov
cmp
enter
xor
push
outsb
std
dec
popf
xor
cmpsl
pop
sbb
call
mov
in
addr16
mov
insl
jbe
bound
add
mov
int
out
aad
inc
mov
jns
mov
and
sti
push
aad
adc
mov
call
lret
jo
lret
jns
movsb
or
mov
mov
push
jo
mov
ja
sbb
inc
jb
pop
out
es
mov
test
mov
dec
dec
ljmp
testb
pop
fildl
aad
insl
jl
xchg
rclb
clc
pusha
dec
mov
bound
lea
xor
add
ret
mov
cmpsl
sti
adc
clc
shll
cmp
sub
andl
sub
dec
push
jb
shlb
arpl
xchg
and
lods
push
mov
jno
aaa
lret
adc
ret
dec
xchg
mov
jbe
or
and
cli
es
add
clc
inc
or
mov
jmp
mov
mov
stos
outsl
imul
popa
mov
mov
xorl
pop
cmpsb
adc
hlt
mov
adc
inc
xchg
cli
insl
in
icebp
rclb
mov
ss
mov
and
jl
ret
sub
adc
mov
mov
mov
jae
call
lods
xchg
hlt
sub
xchg
aaa
cwtl
lods
cltd
xor
lret
xchg
jae
cmp
test
jo
xor
and
jmp
ret
lahf
out
sahf
jbe
ja
mov
xchg
test
mov
aad
ret
mov
divb
sub
lret
sahf
jo
jno
push
sbb
mov
xor
mov
test
add
jne
add
fsubp
mull
ret
lea
dec
adcb
mov
pop
ljmp
xlat
push
movsb
or
call
xchg
stos
and
ljmp
fbstp
jmp
adc
add
jmp
rclb
movsl
xchg
xchg
mov
daa
rol
daa
xor
enter
std
es
xchg
aas
push
arpl
cld
or
xor
fbld
mov
add
mov
sub
jnp
mov
fdivrs
cmpsl
xor
inc
dec
aas
insl
hlt
stos
test
mov
inc
dec
jns
imulb
mov
fistps
test
loope
mov
pusha
pop
jle
mov
call
or
xor
outsb
xchg
fidivs
inc
jmp
adc
add
daa
xlat
mov
and
or
push
dec
rorb
dec
in
mov
into
mov
adc
jne
std
insl
int
pop
flds
lret
or
inc
test
mov
mov
popa
repnz
dec
pop
out
inc
dec
out
pop
sbb
loop
cltd
out
inc
sahf
mov
int
lret
sub
mov
fistpll
sahf
jb
pop
mov
mov
test
mov
es
addr16
mulps
fadds
push
add
inc
pusha
int3
gs
dec
arpl
pop
cwtl
popf
jbe
and
push
push
sub
lods
mov
cmpl
cmp
dec
popa
fmull
cmpsl
add
enter
stc
clc
leave
mov
ret
dec
push
mov
aas
dec
pop
jb
jl
sbb
add
inc
das
and
or
out
jmp
ss
mov
pop
adc
cmp
inc
push
insl
or
cs
dec
push
call
lret
and
push
and
ret
jno
xchg
pushf
cli
nop
sbb
inc
test
ret
insl
bound
mov
jns
xchg
inc
push
sub
adc
push
aam
lods
mov
pop
ss
rcll
cmc
sub
cld
js
jbe
cs
icebp
push
loope
jg
add
lea
ret
leave
adc
testl
push
ja
out
sbb
fsts
xor
fistpll
cmp
add
loope
movsb
shll
jbe
fstpt
in
lea
cli
je
fs
rep
in
js
xchg
xchg
mov
add
xchg
sub
jne
lock
out
pop
shl
and
xor
in
lea
into
in
aad
xchg
iret
adc
insb
in
jns
pop
dec
jle
mov
cmp
xor
fcom
gs
jp
stos
lret
mov
mov
sub
iret
or
std
xor
les
mov
jns
and
mov
fimull
popf
lcall
inc
dec
unpckhps
xchg
fmuls
xor
add
xorb
jg
mov
test
jnp
insb
iret
or
lods
hlt
adc
lods
mov
clc
enter
fbld
jmp
jmp
cmp
xchg
in
jp
aas
mov
lods
jb,pn
out
dec
adc
pop
int
cmpsb
stos
cmp
ljmp
imul
imul
cs
adc
jb
sub
xor
sub
sub
fstpt
add
sub
jecxz
mov
sbb
xchg
fsubr
cmp
add
jg
adc
ficompl
jle
cmpsl
mov
xchg
repnz
push
jle
sub
add
mov
inc
repz
adc
lahf
shrb
mov
repnz
dec
and
popf
mov
xchg
push
mov
scas
mov
mov
clc
add
mov
pop
jo
add
or
xor
int
lods
das
inc
scas
mov
testl
jo
icebp
mov
xchg
pop
inc
adc
push
mov
test
ror
out
sbb
dec
pop
push
dec
lahf
xchg
mov
adc
out
mov
xchg
dec
xor
push
jns
push
or
push
fs
test
shrl
cmpsb
nop
inc
out
jecxz
and
cmp
in
jg
rorl
add
xchg
ret
pop
mov
adc
pop
fstl
pop
and
adc
ljmp
jne
pop
jo
pushf
inc
sub
push
aad
sbb
sbb
xchg
cwtl
lret
mov
jae
into
jns
and
loop
push
in
into
outsl
jo
jnp
pop
sahf
add
test
xchg
je
mov
mov
jg
lock
ja
test
aad
sbbb
cmp
jo
push
xlat
cltd
mov
iret
in
andl
dec
mov
cmpsb
mov
cwtl
dec
jns
and
test
dec
inc
dec
cmp
sbb
jp
pop
out
mov
ljmp
jg
sbb
loope
gs
dec
mov
and
push
cmpsl
mov
icebp
push
fbstp
cmpb
cmc
rorb
insl
mov
mov
loopne
scas
cmpsb
loopne
mov
mov
or
sbb
imulb
les
sbb
add
and
popa
xchg
cmp
mov
cs
jle
gs
repz
and
pop
push
dec
mov
push
jecxz
cltd
jl
scas
in
orl
jo
push
push
lahf
jge
add
fcomi
dec
mov
pop
mov
xor
ss
aaa
outsb
xchg
sbb
or
cmc
cmp
sub
mov
decl
push
sbb
jnp
push
leave
addr16
mov
stc
cmp
xchg
inc
push
ljmp
mov
dec
testb
mov
dec
add
mov
push
cwtl
insb
adc
ret
fs
fcoms
insl
jnp
loope
sbb
clc
sti
push
cmp
dec
sbb
mov
test
dec
ret
cmp
sahf
call
ret
lds
mov
lcall
pop
test
insl
lret
dec
pop
pop
sub
scas
popl
imul
adc
jl
mov
aam
xchg
xor
xlat
fucomi
push
pop
sbb
gs
push
cmp
mov
imul
lahf
out
sub
dec
test
mov
es
aam
aam
inc
std
cld
frstor
pop
xlat
in
xchg
movsl
mov
stos
enter
aam
dec
mov
fsubrs
iret
andl
std
jge
xor
es
out
jp
nop
movb
popa
stos
pushf
enter
xchg
jmp
dec
int3
hlt
pop
sbb
dec
ds
fcoms
mov
bound
imul
add
xchg
cmpb
jmp
dec
sahf
out
cmp
loope
or
pusha
cmp
test
movl
fisubrs
adc
repnz
movsb
dec
mov
sahf
xchg
xor
xlat
dec
xchg
xchg
data16
add
fwait
xor
fmull
or
and
dec
arpl
jle
xchg
popf
movl
sub
out
jl
or
bound
mov
or
imul
and
mov
push
scas
movsb
xor
cmp
int
cmc
cbtw
inc
ret
cmp
inc
lds
arpl
es
les
fidivs
sti
mov
jnp
call
xchg
xchg
imul
xchg
sbbl
dec
mov
js
in
cltd
repnz
xchg
in
jmp
hlt
pop
into
jne
lcall
fldl
mov
lock
sub
dec
cmp
daa
and
adc
or
dec
sbbl
xor
xchg
mov
fwait
xchg
and
aas
sub
sahf
outsl
push
aaa
pushf
xchg
sarb
xchg
leave
push
adc
pushf
or
jge
or
mov
ds
imul
inc
xor
sbb
mov
inc
nop
mov
sub
adc
pop
inc
mov
das
add
mov
ss
fwait
xchg
ret
cmp
cmp
xchg
xor
stos
insl
out
adc
cmc
xor
ret
enter
push
int
insl
mov
aad
cmp
cmp
xchg
ljmp
and
mov
cmp
mov
scas
lret
std
push
into
sbb
movsl
fcmovnb
mov
cmp
cltd
xchg
mov
int
sahf
lods
outsb
adc
and
adc
hlt
jnp
xchg
out
cli
sti
pusha
add
je
push
jecxz
repnz
fcom
iret
ret
mov
inc
xchg
and
outsl
jae
stos
cmc
stos
or
imul
cmp
add
inc
xchg
lods
in
add
test
jbe
fiadds
outsl
divl
xchg
ljmp
push
mov
sbb
repnz
nop
clc
pushf
pop
iret
inc
imul
mov
mov
fwait
jge
cmp
fnstenv
out
xchg
js
mov
ja
jg
adc
shl
popf
test
jnp
pop
cmp
shll
jle
fwait
jo
dec
mov
in
mov
loopne
test
outsl
dec
pop
sub
es
insl
rorl
cld
movsl
outsl
or
add
mov
pop
pop
lcall
adc
js
lahf
jmp
jle
mov
mov
outsb
fdivl
es
adc
stos
imul
leave
sub
or
lods
cmp
sub
fdiv
xchg
bound
and
or
push
movsb
mov
push
clc
or
dec
btc
jnp
inc
pushf
adc
rclb
adc
cmp
repz
lahf
sarl
pop
mov
sbb
imul
mov
add
push
jae
xchg
xor
adc
pop
sti
ljmp
pushf
pop
lret
ss
pop
clc
xchg
pop
mov
out
jae
stc
pop
movsl
inc
imull
sub
mov
cmpl
movsb
adc
jno
xchg
or
mov
xchg
leave
push
movsb
icebp
data16
pop
mov
roll
mov
mov
push
inc
shrl
cmpsl
push
rorb
outsb
dec
mov
push
jns
add
adc
push
test
xorl
gs
cmp
inc
pop
sub
sti
or
push
sub
jle
loopne,pn
outsb
mov
cmp
push
lcall
mov
sahf
xchg
push
and
mov
daa
cwtl
add
imul
push
adc
repnz
insl
sub
push
xchg
and
lods
jne
adc
test
arpl
sbb
std
push
mov
sub
hlt
inc
dec
aaa
call
lcall
das
cmpsb
stc
ss
or
mov
cmpsl
add
dec
and
sbb
mov
mov
sub
popf
xchg
jmp
sub
add
pushf
jmp
cli
inc
bound
cmpl
mov
in
out
dec
clc
or
repnz
mov
lcall
dec
cmp
in
int
rcrb
pop
and
or
gs
mov
rcrb
lahf
inc
test
jg
insl
inc
pop
fs
jg
cmp
sub
out
loope
fwait
inc
sub
loopne
lods
call
mov
aam
add
outsl
mov
into
scas
jns
cmp
cltd
mov
mov
push
inc
adc
int
jg
mov
push
xchg
fwait
shlb
cwtl
lret
stos
push
test
mov
movsb
and
sbb
xor
jnp
jns,pt
iret
fdiv
cmpsb
pop
scas
xor
roll
or
inc
jae
push
adc
mov
lods
outsb
xchg
pop
push
arpl
insb
inc
ret
fwait
addr16
cmp
int3
xchg
je
push
loope
xchg
data16
mov
in
mov
stos
mov
mov
sub
add
xchg
cmp
neg
into
dec
push
mov
shll
dec
outsb
hlt
push
pop
inc
inc
sbb
push
in
adc
shrl
ds
xor
add
mov
sub
test
mov
xchg
fcompl
jmp
aaa
inc
add
mov
loopne
mov
mov
add
out
packuswb
inc
imul
enter
lds
dec
sahf
test
cmp
test
mov
dec
adc
out
fdivrs
add
or
cli
pushf
popf
push
fstl
mov
or
fldt
clc
fmuls
lcall
jmp
movsl
cmp
imul
jle
in
add
jno
gs
xchg
xor
dec
jb
jno
cmp
in
cmpb
mov
popf
cld
xor
add
lea
lock
adc
cmp
dec
icebp
fidivrs
incb
cli
jb
outsl
lcall
hlt
pusha
scas
push
sub
xor
mov
enterw
mov
cmpsl
jle
bound
pop
sbb
push
popf
or
scas
jg
arpl
mov
fsub
or
mov
stos
mov
scas
movsb
pop
jmp
cld
imul
pop
and
out
xor
shl
or
jae
and
mov
push
dec
add
xorl
cmp
mov
mov
bound
loopne
rcll
movsb
shlb
rcrl
jno
jb
xchg
loop
lahf
mov
sbb
xchg
or
call
mov
inc
cmp
gs
int3
fcmove
mov
in
lahf
xchg
js,pt
dec
sbb
pop
push
ret
lods
jle
ss
in
pop
mov
into
add
roll
cltd
inc
repnz
mov
movsl
push
pop
sub
test
pop
xor
jle
and
cmp
xlat
lock
add
popf
fwait
and
sti
lea
pop
pop
icebp
imul
bnd
lret
push
xor
inc
cmp
test
sub
ficomps
push
mov
xor
cwtl
pop
lock
sub
pop
pop
mov
stos
ljmp
jns
jle
fidivrs
fldl
lds
pop
negb
xor
in
mov
xchg
xchg
fwait
add
int
out
aas
xor
and
call
incl
jge
bound
cmp
hlt
or
cltd
add
xchg
pop
jne,pn
dec
pop
outsw
jbe
or
std
and
aam
shlb
mov
fwait
adc
cs
movsb
sub
mov
sahf
out
aas
jnp
dec
xchg
and
jle
mov
jmp
cwtl
jge
push
sahf
inc
cmp
xor
aaa
cli
mov
lcall
push
jne
out
ja
pop
gs
sti
xchg
jnp
push
xchg
mov
sub
rclb
imul
jnp
mov
add
dec
decl
lcall
mov
insl
idivb
jle
rolb
adc
inc
sahf
fldenv
pop
fstps
inc
lret
inc
movsb
dec
mov
into
aad
shll
cmp
xchg
scas
inc
mov
or
int
cwtl
icebp
push
popa
jo
or
dec
jne
int
jne
and
adc
aad
out
mov
iret
and
sub
mov
fwait
sbb
and
pop
xlat
adc
cld
sar
xchg
nop
or
add
push
ja
cwtl
cmc
imul
push
call
add
in
fdivl
imul
cmp
sub
loopne
int3
mov
cmp
lahf
sub
lock
cmc
cmp
iret
pop
inc
xchg
add
xorl
and
mov
pop
cmpsb
mov
lcall
loop
ljmp
dec
dec
mov
out
inc
std
test
dec
xorb
add
loop
jne
dec
aas
sbb
add
xor
nop
mov
and
xchg
add
sbb
aaa
sub
mov
add
mov
mov
jmp
mov
sbb
repz
and
xor
xchg
inc
call
sub
js
rcr
bound
inc
mov
std
movsb
sarb
jne
sarl
cmc
mov
iret
sub
add
loopne
sbb
xchg
mov
push
sbb
call
lret
sbb
sbb
fsubrl
loop
mov
mov
out
imul
xor
sbb
push
dec
shrl
push
test
popf
mov
ljmp
popf
test
movb
jns
fucomip
or
out
inc
out
mov
mov
dec
sub
xchg
sbb
xchg
pop
dec
adc
outsb
cmpsl
xchg
lcall
cmpsb
mov
adc
jb
ficomps
rol
jge
xor
rcr
mov
aam
ljmp
inc
and
rcr
xchg
push
aas
xchg
ljmp
popa
fs
push
loope
shr
cmp
inc
cmp
inc
push
jne
push
in
ret
loope
adc
dec
mov
jmp
sbb
mov
andb
shll
rol
movsb
fs
and
push
xor
lea
mov
ja
mov
push
arpl
push
or
add
cmp
xor
adc
fwait
push
xchg
xor
roll
filds
leave
push
dec
push
lock
lahf
in
faddl
jmp
shll
jle
in
adc
xlat
adc
pop
mov
or
fmuls
inc
or
into
push
inc
mov
jb
jge
add
stos
xor
sub
push
ds
cmc
mov
orb
movsl
mov
mov
popf
xor
fistl
dec
and
scas
push
cmp
push
mov
into
ret
dec
shll
es
fdivs
inc
int
mov
test
sub
or
aas
outsl
insl
fisubl
xor
mov
mov
pop
mov
jbe
push
and
lods
push
test
aas
jae
xor
cmpsb
or
push
sbb
test
sbb
add
jo
xor
ja
pop
stc
mov
xchg
add
out
in
and
loopne
mov
sbb
js
fld
adc
push
adc
push
jg
repnz
dec
or
das
bound
test
jb
cmpsb
cmpsb
outsl
push
xchg
jno
pop
dec
xchg
jg
popa
jbe
loope
xor
mov
adc
cltd
fnstsw
hlt
gs
push
cld
mov
lret
clc
shrb
repz
push
lods
lret
mov
mov
clc
inc
push
jecxz
dec
xchg
adc
ss
dec
iret
or
fs
mov
push
adc
push
xchg
adc
out
fwait
push
xchg
push
int
xchg
add
or
xor
push
mov
mov
push
jns
or
and
scas
add
pop
cmp
jecxz
dec
in
push
test
rcll
daa
shlb
addr16
mov
popf
add
out
mov
mov
scas
xchg
enter
xchg
call
mov
icebp
loope
ds
jb
push
sub
scas
dec
in
sbb
iret
scas
dec
fdivp
sub
mov
stc
fs
ljmp
push
into
xchg
adc
pusha
imul
pop
imul
aad
arpl
sub
fistps
int3
pop
mov
inc
sbb
push
jbe
enter
cmp
lret
ljmp
out
cmp
dec
cmp
mov
mov
ror
aam
sbb
lea
testb
movsl
rcl
jo
jg
sub
mov
popa
cltd
xchg
aam
sub
push
mov
and
pushf
xchg
lods
jecxz
sub
imul
gs
pop
mov
mov
stos
in
and
mov
pop
add
ljmp
jp
stc
adcb
sti
mov
mov
es
mov
and
jle
cmp
adc
or
cwtl
movsl
sti
pop
and
sub
imul
incl
loop
sbb
push
sub
int3
push
pop
mov
or
stc
mov
pop
pop
stc
test
mov
iret
fs
pop
insb
ljmp
cmp
inc
lret
movsb
sahf
inc
and
faddl
pop
mov
xor
push
rorl
lret
pop
and
push
mov
dec
push
xchg
pop
jns
dec
lods
add
insl
lret
jge
lods
mov
jle
in
stos
jnp
ret
add
sub
xor
ljmp
fcoml
jmp
mov
es
xor
inc
out
bound
into
xchg
mov
or
ljmp
gs
call
sub
push
iret
or
out
stos
mov
mov
loop
jb
sub
inc
ret
ss
fists
mov
sahf
xor
shrl
mov
fmuls
aad
and
addr16
inc
push
das
adc
test
pusha
push
sbb
popf
cmp
iret
adcl
ret
sbbb
xorb
pushf
stos
inc
cwtl
repnz
arpl
cli
inc
cmpsl
mov
adc
rcll
push
mov
ja
test
adc
and
xchg
sbb
setl
xchg
add
sbb
inc
js
push
push
or
mov
jnp
or
dec
xor
push
in
inc
pop
imul
push
in
hlt
xorl
sbb
arpl
les
pop
cmp
fwait
imul
inc
sub
cmp
mov
jns
xchg
inc
ds
inc
push
faddp
push
ja
add
mov
das
test
movsl
mov
mov
cld
mov
ss
mov
cld
outsb
inc
dec
test
mov
inc
adc
cli
ss
lret
mov
dec
outsl
push
add
out
insb
test
push
je
mov
aam
lret
iret
ret
mov
stc
fmulp
xchg
mov
out
pusha
sarl
andb
aas
mov
and
pop
rcr
mov
pop
mov
in
clc
out
mov
adc
sti
pop
out
dec
jge
xor
popf
aad
movsl
cmp
in
cmc
call
mov
push
push
sbbl
ret
mov
and
aam
mov
pusha
push
shlb
pushf
dec
and
rsqrtps
xchg
fimull
sbb
les
cmpsl
jno
xchg
xor
leave
add
sub
popf
dec
out
push
into
and
stos
fcmovnbe
mov
andl
inc
ret
adc
fiaddl
cwtl
adcl
outsb
push
lret
cltd
scas
xchg
jbe
jno
push
pop
test
hlt
mov
dec
int3
mov
test
cmpsb
mov
outsl
jmp
in
scas
jnp
and
js
in
and
sbb
leave
push
subb
cmp
aad
orb
mov
or
push
mov
jle
scas
add
into
xchg
in
xchg
ds
dec
jecxz
xchg
sbb
repz
mov
inc
into
je
ss
out
mov
xchg
sbb
sti
repz
pop
int3
sub
jl
inc
shll
into
pusha
andb
imul
push
test
cltd
test
or
lods
jg
xchg
ret
jp
sahf
std
popa
add
adc
cmpsb
inc
addr16
sbb
fidivrs
cltd
mov
or
rcrb
test
pushfw
pop
imul
cwtl
pop
std
sti
sub
xor
dec
gs
gs
std
dec
sahf
jle
out
push
inc
imul
cmp
in
xchg
add
xor
loope
mov
lods
adc
movsl
mov
xchg
xlat
sub
pushf
loope
fistl
dec
dec
std
xchg
and
mov
jge
pusha
inc
movsl
clc
push
cmc
mov
cmp
das
jl
pop
fadds
sub
mov
gs
insl
jns
inc
sbbl
jp
rcl
push
mov
sub
cmp
jecxz
cmp
sub
mov
into
cmp
fnsave
pop
aam
pop
pop
icebp
adcb
lock
add
xchg
and
jns
call
les
lds
ret
sbb
loop
lret
out
daa
rcl
push
lods
dec
sub
das
and
sbb
dec
and
mov
xchg
pushf
lods
int3
into
jmp
cmpsb
fyl2xp1
ss
sub
mov
rorb
and
loope
in
xor
pop
jno
adc
add
arpl
pop
sub
cmp
xor
cs
pop
sub
xchg
pop
addr16
adc
jmp
jp
sbb
cmp
sbb
cmp
adc
add
lcall
dec
fsub
int
fldt
imul
push
jbe
fistpll
pop
stos
inc
pop
jecxz
pop
or
jb
push
jle
mov
rol
adc
mov
push
rorb
sub
out
fbld
mov
bound
sub
pop
jbe
push
shrb
ljmp
xchg
jne
pop
mov
dec
loopne
adc
inc
inc
fsubl
jnp
stc
mov
dec
mov
mov
aas
cli
cs
cmp
lcall
and
rolb
shl
cmpsb
aaa
cld
ret
sub
mov
inc
adc
insb
jnp
cmpb
in
jno
inc
mov
mov
fadd
push
idiv
lcall
cmpb
sub
jecxz
subb
popa
lret
call
loope
inc
mov
loope
lret
pop
fbld
dec
push
and
sahf
inc
cwtl
jbe
outsb
aaa
push
out
xlat
jno
dec
aad
lea
fcompl
imul
fsts
xchg
cmpsl
lret
stos
adc
adc
cmpsl
data16
out
xchg
mov
popa
ja
mov
adc
cmp
int
mov
sbb
cmp
clc
push
shll
insb
das
sbb
in
daa
xchg
lea
test
xchg
icebp
dec
mov
inc
jnp
insl
aad
add
rolb
push
xor
push
loopne
mov
xchg
popf
push
hlt
sbb
out
mov
dec
out
pop
pop
xor
mov
dec
xor
xchg
andb
repz
out
jns
adc
sbb
repnz
nop
push
aaa
arpl
jle
fsubl
icebp
movsb
xor
es
mov
movsl
out
mov
jp
bnd
add
ret
rclb
jecxz
push
pushaw
dec
sub
mov
mov
imul
mov
incb
mov
ret
inc
imul
mov
xor
pushf
xor
xchg
cmpsl
ror
inc
or
mov
test
jmp
popa
rorb
insl
xchg
xor
pop
mov
sub
cmp
mov
or
mov
dec
test
imul
bound
xchg
cli
cs
xor
mov
xlat
mov
out
add
sti
sti
mov
aad
add
clc
sti
push
mov
add
fsubl
xchg
cltd
movsl
pop
push
pusha
add
push
out
out
jae
inc
push
pop
popa
sbb
lahf
insb
lret
sbb
fisttpl
ljmpw
repnz
mov
cmp
sbb
imul
jmp
and
ss
out
cmp
fwait
pop
inc
cltd
or
fidivrs
pop
repnz
sub
stos
mov
lret
xchg
jmp
test
js
out
scas
jb
fistpll
jb
inc
mov
mov
shlb
mov
arpl
sbb
jle
pusha
push
pop
pop
addr16
add
pop
mov
xchg
push
jnp
mov
mov
inc
mov
mov
sub
daa
mov
inc
xchg
mov
ficoms
adc
xchg
mov
jl
lods
mov
mov
cmp
daa
in
mov
push
loope
icebp
ret
sahf
or
pop
int
jno
aas
cld
inc
subl
inc
mov
cmpb
adc
ret
mov
lds
ret
adc
aaa
push
outsb
fldcw
lcall
xor
aam
aad
or
outsb
mov
mov
addb
fsubrs
push
out
pop
cmp
roll
bound
cltd
pop
in
inc
fwait
lahf
xchg
sub
pop
stc
pusha
fdivs
mov
stos
pop
or
xchg
nop
rol
pop
mov
test
push
and
dec
pop
push
push
inc
sub
push
divb
pop
dec
inc
mov
adc
sub
cmp
sbb
dec
cmpsb
hlt
cmp
stos
and
stos
out
jne
mov
fbstp
dec
cmp
vmwrite
decl
les
push
mov
pop
mov
jo
or
jp
adc
mov
fsub
cmp
mov
lret
sub
mov
xor
call
shll
shrl
arpl
push
movsb
mov
shll
leave
adc
rclb
shl
lds
dec
jae
pusha
aad
adc
and
fsubl
mov
stos
xorl
jecxz
jmp
nop
gs
cltd
std
in
inc
mov
out
xchg
dec
sub
loope
test
lahf
repz
adc
rorl
push
jns
sub
mov
ss
stos
rcl
sar
test
fnstsw
repnz
loope
or
fisubl
mov
in
dec
test
rolb
std
popf
cmpsl
dec
lcall
mov
repz
lcall
fwait
sub
mull
dec
add
mov
or
mov
sti
lcall
stos
test
movsl
les
pop
pop
aad
ror
mov
pop
jo
inc
mov
test
jne
pop
dec
daa
jo
lahf
adc
pop
lea
adc
lret
dec
or
jno
stos
pop
repz
mov
lods
push
int
inc
nop
or
imul
and
push
rolb
cmp
sbb
fs
mull
sub
test
cmp
roll
fisubl
mov
inc
idivb
stc
pop
and
pop
add
in
out
jg
cmp
add
dec
gs
rorl
adc
push
push
cmp
or
stos
call
repz
cs
or
cmp
divb
lds
sub
push
push
call
cmp
mov
push
fisttps
jmp
mov
sahf
xchg
push
ljmp
lret
aas
xchg
inc
jmp
mov
fstpl
sbb
orl
sub
jmp
cmp
iret
mov
shr
add
enter
clc
repz
shlb
xlat
mov
jg
push
ror
push
push
sub
aaa
push
pop
in
inc
in
fsubrs
add
dec
jle
cwtl
or
mov
popf
aad
pop
sbbb
mov
aas
add
pusha
lock
popf
test
jbe
pop
cs
push
cmc
aad
mov
xor
push
leave
mov
push
lret
sbb
cs
and
test
in
add
gs
ljmp
push
fucom
lret
lods
mov
fld
sbb
sub
push
mov
lret
hlt
dec
imul
fcmovnb
push
pop
test
add
lahf
stos
push
push
notl
mov
into
insb
subl
ror
jo
lret
push
popl
in
rclb
roll
mov
inc
adc
xchg
mov
mov
pop
mov
subl
mov
movsl
iret
lods
aad
add
mov
int3
push
xchg
mov
fnstcw
popf
arpl
push
lret
sahf
lods
mov
loop
jno
sbbb
push
pop
or
fcompl
xor
js
add
fwait
shlb
fnstcw
js
xor
dec
pusha
push
cmp
in
daa
iret
insl
scas
inc
lds
dec
add
mov
aam
mov
sub
dec
adc
sbb
testb
pop
mov
movsl
sahf
scas
cmp
mov
pop
orb
jnp
and
add
inc
push
mov
mov
adc
cmp
inc
cmc
xchg
pop
in
cmp
inc
cmc
inc
rorb
sbb
pop
jb
and
mov
inc
or
mov
out
imul
add
mov
pop
mov
push
xchg
mov
fwait
enter
mov
sbb
dec
das
ja
cmp
scas
push
mov
dec
repz
lret
jle
in
xchg
bound
sbb
dec
or
cmp
xor
inc
ljmp
cmp
pop
imul
idivb
inc
adcb
mov
or
or
push
imul
dec
pop
sahf
mov
xorb
test
push
jge
std
mov
clc
outsb
das
les
enter
pop
out
aam
fwait
leave
in
ds
add
pop
inc
adc
push
and
dec
jl
add
cmp
dec
add
push
dec
mov
data16
or
add
mov
popf
xlat
pop
orl
jl
nop
loope
testb
idivb
xchg
cltd
setae
mov
subb
sub
jne
adc
push
int3
mov
fidivl
add
adc
cmp
aam
lock
aaa
cmp
imul
xor
adc
test
iret
mov
mov
mov
xchg
sbb
aaa
or
xchg
pop
xchg
insl
fld
sbb
xor
and
mov
cwtl
mov
inc
fdivs
fwait
scas
and
mov
and
sbb
ficompl
mov
sarb
inc
mov
jge
sbb
orl
dec
mov
ds
lea
jae
push
shrb
ret
adc
divl
xchg
aas
ljmp
push
push
mov
mov
test
int
lcall
inc
jmp
push
ja
jp
rorb
cwtl
dec
xor
das
xchg
lock
pop
mov
pcmpeqb
dec
add
dec
scas
std
out
fwait
imul
int
lds
and
stos
mov
loop
cmp
cmp
and
mov
nop
or
jo
int3
jno
les
jbe
in
mov
in
test
pop
jg
cmpsl
icebp
add
or
test
mov
loope
cmp
test
sub
xor
pop
orl
xor
outsb
in
mov
fst
or
push
sbb
test
out
popa
lds
cmp
cwtl
repnz
pop
ficomps
pusha
add
in
sub
popa
xchg
xor
xor
cmp
pop
sbb
dec
sub
test
jle
jne
sbb
outsb
insl
push
xor
mov
incl
jl
jge
xchg
inc
dec
mov
insb
test
push
lret
xor
mov
cwtl
mov
xchg
xchg
xchg
lret
mov
fcmovnb
mov
in
jnp
shrb
lahf
and
or
outsb
mov
scas
sub
sub
pop
in
call
in
sbb
sbb
hlt
adc
or
faddl
cmp
repz
jae
pop
sub
jbe
xor
mov
movsl
sbb
test
lods
xor
mov
aas
adc
jge
cmc
jns
mov
or
aad
fldl
inc
fwait
shrl
divl
adc
and
mov
or
pop
xchg
sbb
vcvtsi2ssl
push
mov
and
call
imul
dec
push
xor
sbb
mov
ret
xchg
add
add
sar
jle
mov
daa
ss
cmp
nop
inc
jle
fistps
mov
xor
adc
mov
push
jmp
ss
push
sbb
dec
xchg
iret
scas
and
mov
sub
jmp
js
arpl
add
mov
adc
stos
mov
jb
jnp
sbb
xor
push
in
dec
and
jge
push
loop
lock
movsb
sbb
sub
cli
lds
dec
mov
inc
fstp
inc
lock
ljmp
movsl
jo
cltd
inc
sahf
mov
jge
jno
mov
inc
or
icebp
cli
xor
xchg
std
adc
popa
cli
inc
daa
jge
sbb
int3
data16
stos
fsubrs
insl
adc
mov
or
dec
sbb
mov
xchg
and
xchg
push
and
sarb
sub
dec
test
mov
movsl
mov
test
mov
pop
bound
rcrb
jmp
or
push
jo
test
xor
sbb
loop
into
imul
sbb
add
push
stos
aam
push
inc
rol
fcmovnu
movsb
mov
dec
aad
xchg
dec
rcrl
xor
sbb
in
sub
clc
add
popl
jns
xchg
adc
or
notl
sub
test
inc
addl
pusha
test
clc
and
xor
xor
out
in
dec
mov
jno
flds
fcom
and
push
add
clc
sbb
xor
addr16
jp
movsb
sbb
negb
shlb
pop
js
mov
push
popa
push
scas
scas
sbb
xchg
icebp
adc
mov
inc
push
or
sub
or
cmp
imul
les
test
mov
fcmovbe
clc
xchg
jbe
jg
jb
lods
add
add
in
jnp
fmul
out
sub
pop
adc
xchg
ret
pop
mov
sbb
jmp
call
sbb
das
movb
and
out
xor
sbb
jg
notl
xchg
lcall
leave
test
in
das
lahf
cs
cli
lahf
sbb
addl
into
out
pop
add
cmp
and
lock
enter
push
push
rol
cs
dec
dec
dec
mov
js
dec
fsubrs
pusha
ret
jno
frstpm(287
addr16
bound
mov
fcomi
dec
dec
aad
mull
addr16
repnz
shlb
jo,pn
inc
js
pop
repnz
xorl
mov
pop
dec
push
in
mov
lahf
pop
mov
sbb
loopne
into
daa
jle
cmp
xor
aaa
aas
cmp
inc
mov
es
xchg
mov
xchg
fisubs
push
pop
push
dec
or
das
aas
push
and
addl
inc
mov
bound
cmp
dec
xchg
sbb
ret
push
shlb
shl
into
pop
sbb
repz
xor
stos
aas
negl
stos
pop
test
add
xchg
out
stc
jg
add
add
inc
iret
pop
lahf
pop
mov
or
and
mov
and
mov
pushf
lods
jl
data16
jp
sbb
mov
pop
dec
sbb
repz
jb
dec
xchg
dec
pop
sbb
call
arpl
es
lret
mov
fcoml
mov
mov
or
jnp
fildll
addr16
xor
push
adc
scas
push
stos
lods
dec
mov
fistpll
and
daa
or
leave
push
sbb
push
sbb
push
out
mov
movsb
cmpsl
xor
jge
push
sub
mov
int
xchg
and
push
mov
pop
fisttpl
cmp
pop
mov
jle
in
call
cltd
dec
lock
mov
lds
out
or
je
ds
jge
aam
dec
jo
inc
add
leave
out
pop
pop
xor
cmp
call
mov
sbb
movsl
mov
fwait
mov
add
in
cmp
inc
dec
les
cmp
mov
push
pop
mov
mov
fdivl
add
xor
clc
mov
sbb
mov
dec
call
cld
addr16
pushf
jnp
xlat
test
or
adc
xlat
push
mov
lds
mov
call
mov
lcall
outsl
in
flds
insb
cmp
pop
sub
pop
nop
aam
cltd
mov
cwtl
push
xchg
repz
inc
adc
cwtl
stc
outsl
cltd
gs
or
or
lods
jb
lods
movl
std
push
dec
and
movsl
push
push
adc
xor
scas
repnz
jl
push
xor
dec
incb
inc
mov
jmp
or
lret
cs
sbb
icebp
aas
sub
ljmp
mov
xchg
mov
out
xchg
cmc
push
jnp
mov
push
inc
jne
jo
or
aaa
xor
in
jmp
lret
cs
push
adc
mov
cmp
dec
xchg
mov
or
dec
scas
mov
sub
adc
into
sbb
aam
push
je
adc
add
cld
mov
in
loopne
addb
inc
out
sub
insb
stos
mov
and
xor
mov
and
je
and
xchg
mov
pusha
mov
jecxz
xlat
aaa
cmp
pop
cmp
and
divb
and
stc
or
pop
xchg
out
pop
and
inc
xor
or
xchg
in
fiadds
inc
jns
adc
cmpsl
or
sub
inc
xchg
data16
mov
pop
xchg
xor
enter
dec
test
adc
ljmp
inc
mov
xchg
hlt
inc
shr
fcom
enter
outsb
dec
sub
mov
fdivl
and
pop
add
lcall
cmp
loope
xor
xchg
pop
mov
lret
xchg
int3
cwtl
stos
arpl
leavew
mov
insl
pop
movsb
or
into
xor
xchg
cltd
bound
push
fildl
pusha
test
pusha
call
mov
test
divl
cmp
sbb
das
xor
lock
push
add
out
outsl
lods
mov
pop
jmp
mov
jmp
jl
pop
cmp
mov
lahf
fbstp
iret
fisubrl
adc
pop
add
or
sbb
inc
inc
sahf
and
out
sub
and
push
mov
rcrb
adc
pcmpgtd
sub
or
adc
movsl
dec
cmp
sbb
mov
push
iret
push
ss
cmp
insl
inc
ret
jmp
xchg
popa
jo
std
addr16
filds
mov
xor
lcall
mov
aas
xlat
sahf
xor
addb
cli
arpl
sub
std
push
popf
fstl
pop
jl
jo
fimull
stos
pop
cmp
xor
xchg
jecxz
inc
adc
mov
cmpsl
leave
imul
bound
jno
add
pop
inc
repnz
jp
stc
cmp
rcl
mov
mov
pop
adc
fwait
scas
sar
into
jno
mov
stos
jle
cmc
cmpsb
pcmpgtb
test
insl
imul
pop
jno
pop
push
or
scas
push
xor
test
xor
push
stos
or
negl
in
in
cmp
ja
mov
dec
or
mov
mov
imul
ljmp
pop
add
paddb
or
push
jno
ret
imul
dec
aaa
leave
xchg
jno
cmp
insl
inc
jb
adc
in
pop
adc
or
in
sbb
shrb
add
add
out
mov
aaa
mov
dec
sarl
jl
repnz
sub
inc
repz
mov
inc
pushf
fisubl
pop
sub
testl
mov
dec
lcall
lcall
aaa
mov
sub
insb
out
loope
mov
pop
ja
push
add
or
add
fiaddl
fistps
lods
mulb
pop
xchg
pop
fdivl
jmp
daa
mov
or
imull
test
stos
sub
das
add
js
or
pushf
xchg
stos
imul
pop
push
sub
fsubrs
pop
out
add
push
add
iret
mov
pushf
cmp
push
adc
mov
ret
cld
adc
vcomisd
sub
add
cli
dec
test
and
mov
je
sbb
add
js
les
sti
mov
push
inc
xchg
pop
popa
jl
or
mov
cmp
push
test
adcl
xor
dec
xor
aam
inc
aas
es
cmpb
outsl
sarl
xchg
test
inc
jecxz
ss
dec
inc
ret
gs
cli
pushl
and
jge
adc
mov
hlt
xor
inc
dec
add
push
rorb
and
stc
xchg
mov
xchg
dec
mov
xor
call
fs
push
push
jecxz
pusha
adc
push
jae
mov
dec
lods
gs
cmp
rorl
mov
xchg
notl
iret
test
fcoms
mov
stc
pusha
xor
shll
sub
lahf
addr16
xchg
xchg
jnp
in
outsl
and
sub
sub
mov
aaa
jae
sub
jo
imul
outsb
xor
aaa
mov
jl
stos
push
pop
sbb
inc
adc
fadd
push
cmp
call
inc
cmpsb
ja
mov
cmpsb
leave
add
cmp
mov
outsl
push
xor
rcrb
aam
inc
mov
test
ja
xchg
or
mov
add
test
add
into
mov
fisttpl
divb
xor
pop
push
cld
cmpsl
add
push
ret
jp
stos
cmpsl
loop
pop
leave
fwait
lods
cmp
mov
xor
nop
mov
jmp
in
push
jg,pn
mov
mov
lret
cmpsl
jmp
add
repnz
push
jecxz
arpl
in
dec
mov
int3
adc
xchg
std
fsts
jns
fsub
or
out
mov
ret
add
sbb
xchg
pop
lds
ret
insb
fidivs
mov
jne
push
sub
and
mov
xchg
push
mov
pop
lock
sub
ss
pop
add
or
mov
stos
popf
jne
push
pop
xchg
xchg
out
and
call
test
mov
iret
gs
or
in
orl
add
push
fs
cmp
adc
repz
cmp
inc
cltd
cmpl
les
fdivrl
lret
rcrl
adc
les
push
adc
stc
iret
call
imul
and
nop
or
xchg
and
sub
cmp
xor
je
push
lock
adc
enter
jg
xchg
or
sti
xchg
add
push
sbb
xchg
xchg
mov
out
addr16
outsb
cmp
adc
mov
jmp
dec
adc
and
icebp
cmp
sti
bound
les
push
mov
cwtl
aam
mov
aam
push
adc
inc
jp
fmuls
and
sbb
fdivrl
je
xchg
pop
cltd
add
xchg
dec
push
lret
loop
mov
push
adc
fucomp
sub
push
mov
sub
xorb
mov
pop
sbb
insl
movsl
inc
out
aas
es
or
aaa
testl
cmpsb
sub
add
into
lret
shll
mov
imul
int
lea
imul
daa
clc
iret
lods
sub
cwtl
movsb
push
pusha
into
push
popf
int3
testb
and
push
pop
mov
jl
mov
fsubs
sub
es
adc
cmp
repnz
out
enter
aas
or
jle
fdivl
sub
js
in
aas
sub
or
cmpsl
xchg
roll
into
iret
inc
pop
jbe
dec
loopne
mov
lret
adc
mov
enter
xchg
sub
mov
call
adc
aas
inc
repnz
das
add
loope
xchg
or
int
js
push
lret
movb
mov
in
pop
dec
aas
add
mov
pop
inc
pushf
shlb
push
mov
or
mov
lret
movsl
in
jae
addr16
ds
and
aaa
test
nop
movsb
add
mov
pop
in
testl
das
das
xor
push
icebp
ret
test
add
push
add
fdivrp
and
call
cmp
cmp
pop
in
adc
mov
cli
jle
rorb
mov
pop
mov
or
bound
cltd
aad
les
pop
mov
sub
mov
push
inc
mov
jns
repnz
mov
test
movsl
jp
jno
jp
jo
scas
enter
dec
fidivrs
in
sub
inc
mov
loopne
rorb
or
imul
xor
or
sti
dec
and
or
push
imul
insl
mov
xchg
or
int
int3
push
lcall
icebp
sahf
cli
xchg
aaa
out
lods
dec
push
push
inc
movsl
pushl
inc
mov
cmpsb
dec
aam
in
adc
test
sub
pusha
stos
lret
push
lock
lret
cmc
out
inc
xor
sti
adc
insl
mov
xchg
bound
inc
fldcw
stos
in
xchg
adc
fldenv
cmp
xchg
xor
sub
test
pop
sarb
int
dec
push
in
and
xchg
xor
mov
mov
push
adc
clc
push
add
out
out
popa
rcrb
adc
or
mov
pop
rorb
test
adc
loopne
mov
cmp
rol
jl
adc
jmp
or
cld
dec
adc
inc
mov
adc
notl
andl
push
imul
ffreep
inc
pop
fwait
inc
push
cmp
dec
cmp
cltd
lds
mov
jl
sub
mov
inc
iret
push
xor
xchg
aas
xchg
sbb
call
aad
pop
sbb
daa
sti
sub
cltd
mov
pop
jecxz
jnp
sbb
jo
push
sbb
add
stc
rcl
pop
sub
jbe
inc
in
loope
popf
imul
mov
int3
insb
pop
push
dec
loop
cmpsb
cmpsb
jge
je
sub
cld
sub
push
fxch
dec
pop
push
mov
push
xchg
fnstcw
xchg
mov
add
mov
mov
mov
or
inc
mov
cmp
adc
push
jp
ror
mov
fstps
repnz
mov
jmp
push
loope
push
pop
shlb
aas
push
dec
sbb
and
loope
lea
outsl
mov
sub
fldt
dec
xchg
inc
adc
push
cld
pop
roll
xchg
fimuls
mov
xlat
cmp
cwtl
and
subb
jecxz
push
sti
test
sub
mov
push
mov
stos
mov
mov
dec
mov
dec
dec
dec
idiv
daa
fnstcw
xchg
and
lods
addr16
test
push
mov
les
push
cmpsl
cmpsl
das
mov
xchg
xor
fsubs
and
and
stos
or
cmpl
mov
add
imul
shl
and
push
cltd
int
push
inc
mov
inc
and
mov
or
sti
mov
push
and
test
filds
lcall
sbb
lods
stos
jns
fcoml
pop
int3
int3
or
add
pop
in
mov
pop
stc
jo
movsb
mov
and
xchg
aaa
ss
cmp
js
in
jl
in
sbb
mov
icebp
xchg
and
loopne
pop
jnp
pop
pusha
imul
cmp
mov
xor
fimull
cs
sub
enter
testb
pop
in
xchg
in
adc
outsl
ds
xchg
jle
in
fldl
xchg
fiadds
lods
pop
jo
mov
add
cld
pop
xchg
call
ret
imul
ljmp
gs
repnz
dec
cmp
dec
push
movsl
sbb
lea
sahf
xchg
int
xchg
jnp
iret
pop
jbe
fwait
movsb
test
pop
mov
mov
jge
inc
hlt
cli
imul
jae
lahf
cwtl
sbb
sub
mov
mov
push
insl
push
jnp
mov
stos
xchg
mov
inc
fsubs
mov
inc
or
and
ds
fwait
lods
adc
adc
clc
lret
sarl
rclb
test
adc
xor
mov
out
dec
add
and
scas
push
mov
das
jne
sub
mov
xor
inc
js
jl
sub
stos
sahf
ljmp
test
mov
lock
mov
add
adc
neg
ss
leave
arpl
xchg
mov
inc
xor
push
stc
sbb
mov
ret
mov
int
sahf
pop
aam
sbb
sbb
addb
outsl
mov
sahf
orl
insl
sub
push
jo
out
hlt
insb
ror
add
or
sbb
sub
cmp
adc
or
sbb
adc
xor
data16
xor
cmpsl
cmovne
out
and
or
addr16
in
enter
sub
xchg
in
xor
xor
jge
inc
xchg
pop
pop
data16
scas
out
mov
jg
and
cltd
sbb
pop
push
mov
daa
jle
sub
sbbb
popa
mov
das
cmc
into
mov
lods
adc
iret
punpckldq
lcall
decb
xor
insb
xor
lcall
ficompl
lea
fadds
and
and
test
xchg
xor
pop
add
fwait
mov
sub
xchg
mov
cmp
cmp
push
push
out
je
out
fnstcw
out
sahf
jno
mov
aam
add
shlb
sbb
mov
or
inc
add
jp
daa
cld
sub
fcmovnu
outsb
iret
sub
mov
mov
dec
out
sub
inc
aaa
mov
lea
int
mov
rorl
test
test
ljmp
fistl
mov
and
cmp
mov
sub
mov
lock
mov
jb
mov
movsb
lahf
xchg
aad
negl
in
pop
in
fidivl
or
cmp
sbb
inc
in
fiaddl
and
cmpsl
sarb
mov
cmpb
test
fdivrl
ror
fdivrl
add
pop
outsl
ss
gs
mov
fcmovnu
mov
inc
stos
jb
mov
hlt
insl
jbe
fldl
or
scas
in
push
add
repnz
out
sarl
sbb
xchg
inc
decb
jge
test
imul
mov
fiaddl
pmulhw
int
inc
inc
ss
xor
mov
ficompl
xor
ljmp
push
mov
es
lods
and
pop
sub
mov
sbb
xchg
inc
sub
sub
inc
test
sarb
add
mov
popa
push
subl
sbb
jle
pusha
nop
adc
arpl
aam
fldenv
xchg
push
mov
mov
adc
mov
pusha
push
push
mov
sub
js
fwait
mov
fdivrl
pop
cmp
pusha
scas
jg
inc
mov
dec
call
icebp
jp
testl
aaa
fstpl
xlat
ds
lcall
jns
push
int3
into
rcpps
rcll
mov
pop
ljmp
jnp
sbb
or
rcll
inc
test
push
ds
out
xor
dec
jns
xor
jg
mov
cs
in
mov
jl
jae
or
shlb
adc
pop
add
vmovss
inc
mov
lcallw
das
into
mov
and
xchg
iret
jb
adc
fs
arpl
xchg
adc
add
pusha
dec
insb
pmaddwd
push
ljmp
std
mov
imul
mov
cmp
jg
mov
push
mov
push
inc
cmpsb
cmp
xor
imull
into
cmc
daa
imul
enter
xor
jo
xorl
cs
into
out
jne
sbb
mov
and
and
sub
insb
adc
xor
pop
dec
xchg
nop
jp
je
xchg
lock
popa
movsb
dec
cmp
mov
loopne
add
mov
enter
fucomi
mov
hlt
cmp
xor
mov
jp
xchg
subl
es
sbb
mov
mov
sbb
dec
stos
je
mov
shrb
xchg
push
fs
mov
jno
or
push
in
test
mov
in
pop
pusha
movl
inc
int
and
cmpsl
adcb
mov
adc
pop
push
test
cmp
iret
imul
jo
or
lods
inc
fnstcw
je
aad
insl
and
pop
outsb
mov
imul
je
or
adc
leave
in
rorb
push
scas
push
je
out
imul
xlat
cmc
lea
push
aaa
xchg
push
loope
xor
pushf
insl
jle
int
pop
imul
sub
jg
and
pop
mov
pop
and
jecxz
push
xchg
pop
dec
sbb
mov
xchg
cs
rorb
lcall
js
add
pop
sbb
insb
jne
xchg
push
ret
add
int3
cli
lea
pop
into
add
pop
popf
jp
xchg
or
xchg
lcall
stos
xor
or
inc
js
cmp
fs
xlat
cmp
mov
lret
shrl
arpl
mov
addr16
pop
sbb
inc
push
jecxz
cmp
jbe
sbb
or
imul
decb
and
dec
cmp
hlt
dec
pop
mov
mov
es
roll
jo
dec
mov
jne
es
sub
xchg
inc
jno
cmp
adc
push
adc
idivl
pop
icebp
test
jl
add
cld
ja
imul
add
rorl
out
or
mov
les
outsb
mov
lods
xor
xchg
mov
ja
in
test
adc
imul
dec
xor
mov
mov
mov
or
imul
movsb
cmp
cmp
push
lds
pop
add
xor
fiadds
ds
xor
ficoml
push
pop
test
stc
jmp
push
jp
shrl
aaa
mov
or
push
pop
mov
movsl
int3
xchg
push
and
xor
aas
daa
mov
ret
shr
jns
bound
pop
cmp
dec
bnd
inc
sbb
popa
out
cmp
add
sti
clc
adc
dec
scas
xor
xchg
movsb
and
out
xor
je
xrelease
mov
or
cmp
push
fildll
adc
jmp
movsl
jmp
jno
xchg
int3
js
jecxz
ret
imul
xor
clc
popa
scas
mov
cmp
cmp
xchg
inc
xchg
and
cmpxchg
stos
outsb
lret
lea
mov
js
pop
out
add
lret
jns
test
out
mov
pop
shr
jnp
ret
shr
sbb
add
jns
adc
mov
cmp
ret
inc
sbb
popf
stos
popf
xor
sbb
incl
xor
mov
mov
fldenv
repnz
cmp
jns
dec
or
push
daa
lods
adc
mov
rcl
outsb
push
loop
cmpsb
jmp
ja
mov
loope
mov
jmp
xor
mov
test
jmp
sbb
push
out
jge
dec
loope
jnp
aaa
sub
mov
or
outsl
cmc
mov
test
cmpsb
cmp
test
jle
imul
cmp
jl
sarl
xlat
mov
cmp
xchg
int
mov
lahf
inc
fs
mov
inc
and
add
scas
xor
sbb
mov
push
mov
dec
adc
mov
mov
scas
lock
push
lret
stos
mov
icebp
gs
cmp
sbb
jnp
test
test
or
sbb
enter
cmp
push
sti
xchg
sub
adc
ss
loopne
push
mov
out
push
mov
add
push
enter
mov
aad
inc
je
out
sahf
ja
add
addl
and
filds
and
pop
nop
call
pop
les
inc
das
and
int3
adc
pop
cmp
ss
ret
pop
sahf
adc
mov
fmuls
das
and
push
popf
cld
sti
rcll
pop
loopne
pop
movsb
int
xchg
and
mov
arpl
cmp
rorb
lods
mov
pop
xlat
pop
out
pop
stos
ds
insl
mov
data16
sbb
movsl
mov
push
lea
mov
inc
lock
outsl
inc
inc
sub
inc
xchg
mov
add
jno
in
vxorps
in
xchg
xlat
adc
pop
mov
xchg
adc
das
sbb
sub
outsb
mov
pop
and
outsb
jmp
dec
test
in
push
push
sub
push
loopne
loop
js
insb
mov
jp
test
xor
mov
pop
xchg
js
fs
lea
cmpl
adc
fisubrs
lret
xchg
or
dec
xor
push
sub
addl
mov
in
mov
sbb
stos
jge
mov
or
jno
mov
test
sbb
rorl
das
mov
movsb
mov
test
add
pop
mov
mov
sbb
out
fcmovne
popf
fxch
inc
or
stos
pop
sbb
int3
push
or
mov
cs
xchg
xchg
addb
popa
pop
add
jle
add
stc
fnstsw
insl
das
pusha
ret
mov
fiaddl
jle
mov
shl
adcl
mov
cli
outsl
rcrl
cmpsl
cmp
or
fs
aaa
je
js
sub
fldcw
add
xor
daa
or
jno
mov
sbb
iret
gs
mov
sbb
mov
je
sbb
xchg
pop
add
lahf
adc
sub
pop
inc
dec
cmpsb
fildll
inc
sbb
push
adc
lret
in
pushf
or
sbb
popa
ja
popl
test
adc
fimuls
fsubrs
dec
mov
push
cmc
mov
push
inc
mov
inc
push
jns
mov
fdiv
pusha
lods
test
mov
dec
push
inc
out
mov
mov
push
push
add
xchg
xorb
inc
jecxz
adc
cs
into
xchg
jbe
lcall
xor
mov
jb
mov
add
xchg
add
scas
adc
fistpl
es
mov
rorl
lock
pop
mov
pop
repz
lahf
and
push
aam
nop
pop
fisubs
movsl
bsf
pushf
rolb
lock
mov
xchg
jae
pushf
dec
iret
xor
pusha
loop
test
xchg
mov
xchg
and
jnp
pop
and
sub
ljmp
ds
out
jl
ljmp
dec
xchg
ss
mov
in
push
lahf
pop
pop
mov
das
add
and
fstps
inc
mov
inc
dec
outsl
dec
daa
mov
cltd
push
rcll
aaa
push
test
pop
jne
test
inc
xor
push
sbbb
push
or
out
cmpb
jp
jmp
fisubl
cmp
dec
pop
ret
push
push
int3
sahf
jecxz
ficoms
scas
adc
dec
mov
lahf
lods
repz
xlat
push
jno
add
subl
sub
add
pop
fdivrp
je
lahf
fidivrs
xchg
hlt
pop
in
pusha
pop
jno
or
mov
out
mov
test
pop
and
push
pushf
pop
xor
add
stos
cmpsl
test
pop
mov
fs
scas
push
cwtl
insb
push
stc
mov
cmpsb
icebp
sahf
iret
stos
mov
jp
sbb
sub
call
js
jne
fimull
xor
cmp
out
jb
push
jmp
add
lods
pop
jbe
inc
cmc
mov
mov
push
mov
in
int
jp
inc
mov
xchg
cli
sub
cmpl
jae
inc
outsb
mov
mov
mov
mov
mov
movsb
or
pop
cwtl
fstpl
bound
lods
je
pop
or
xchg
insb
lea
push
jns
cmp
or
cmp
push
cmc
lods
xchg
je
fs
repz
pop
icebp
push
gs
aaa
cmp
addb
lds
loop
insl
jle
adc
xchg
mov
jo
sub
dec
loope
fidivs
data16
sti
in
jbe
sbb
loop
out
xor
fs
mov
push
cmp
jns
rcr
iret
xor
ja
lods
sub
inc
xchg
sti
or
xor
out
inc
out
es
sub
xor
jns
dec
scas
jne
in
adc
movb
adc
jmp
xchg
test
or
jl
dec
cmp
adcl
dec
dec
std
ljmp
ljmp
int3
fcoms
jb
scas
jmp
icebp
lret
xchg
lret
lcall
mov
stos
mov
mov
ja
cmpsb
cmp
call
test
sahf
jnp
scas
out
das
jle
xchg
les
aam
adc
sbb
movsb
in
add
es
cmp
dec
filds
pop
cmpsl
movsb
shll
fdivl
insl
jbe
daa
push
repnz
aas
xchg
in
not
es
adc
mov
int3
cli
xchg
sbb
inc
dec
lea
icebp
and
inc
movups
mov
imul
dec
push
cmp
in
inc
push
cs
add
inc
pop
ds
aad
lret
imul
out
push
fists
push
sub
cmpl
clc
xchg
dec
push
jns
add
je
or
or
jno
inc
adc
pop
xor
pop
sbb
sub
ja
aas
dec
sarl
jmp
fwait
and
xchg
xor
loop
lahf
cmc
fidivs
pop
pop
mov
inc
sbb
mov
mov
pop
cmp
cld
adc
sbb
cmpsl
popa
insb
lods
lods
sbb
loop
sbb
call
mov
xor
loopne
outsl
scas
pusha
repz
sti
cmpsl
or
clc
hlt
cmpsb
inc
rcrl
mov
and
rorl
lock
repz
negl
jg
xchg
repz
shlb
adc
mov
dec
mov
dec
lret
mov
lods
pop
push
ret
in
push
rorb
dec
xor
cli
jb
imul
cld
enter
orl
sub
les
xchg
dec
sbb
mov
cmp
mov
jmp
mov
vorps
fwait
adc
jl
sahf
arpl
and
push
push
sbb
data16
jbe
sub
das
ret
pop
xorb
repz
mov
arpl
repz
hlt
stc
pusha
sub
dec
leave
pop
adc
scas
into
fcomps
xor
mov
fildl
jbe
or
mov
mov
int
lcall
icebp
add
pushf
aam
mov
inc
es
movsb
mov
mov
mov
push
mov
xor
loop
ret
push
xor
xor
push
sub
mov
ror
xchg
dec
ror
cmp
sbb
xchg
mov
add
push
in
sub
sbb
lret
or
xorb
faddl
cld
mov
jne
lret
jae
xor
mov
test
xor
call
fcom
mov
in
mov
sub
xor
ja
xchg
lea
movsb
add
subl
fisubl
test
push
pop
add
push
xchg
stos
adc
jo
pop
jle
dec
lea
and
shlb
lds
imul
push
sbb
jecxz
xor
cmpb
bound
fwait
mov
mov
gs
inc
inc
insl
xchg
sub
test
mov
subb
out
cld
fnstsw
hlt
mov
xchg
loope
mov
popa
cmp
sbb
aas
int3
int
pushf
iret
ficompl
push
fwait
mov
adc
adc
mov
add
es
xchg
inc
out
out
in
mov
jmp
sti
fcmovb
in
outsl
jg
data16
xchg
js
pop
jg
xchg
movsl
sub
pop
into
insl
outsb
or
sbb
jae
inc
fcmovnbe
pushf
mov
mov
add
fadds
lret
rcl
sbb
loopne
and
add
ror
in
loopne
mulb
data16
adc
or
out
ret
in
cmp
popa
pop
jp
and
rorb
cmp
cmp
cmp
inc
jbe
out
daa
sarb
push
and
mov
cmp
push
int3
es
sbb
subb
mov
xchg
test
jb
test
xchg
push
add
sbb
outsb
in
mov
icebp
inc
int
xchg
add
add
mov
and
js
int3
in
loopne
lcall
out
push
ss
jmp
adc
mov
enter
pop
test
sbb
aas
mov
xchg
cltd
arpl
shrl
dec
or
add
test
or
dec
push
inc
out
mov
push
adc
test
pop
push
ds
adc
mov
and
sub
insl
xchg
jo
loop
mov
cmp
and
push
sub
outsl
or
mov
inc
mov
and
hlt
mov
dec
add
rcr
js
mov
sbb
dec
out
push
or
and
inc
aad
or
ret
and
mov
push
or
in
shl
hlt
adcb
std
xchg
mov
sbb
les
mov
js
es
sbb
xchg
daa
rclb
insl
push
icebp
cwtl
aam
fcoml
mov
aas
xchg
pop
aad
inc
xchg
xor
mov
bound
out
xorl
das
in
leave
lret
xlat
jmp
pushf
test
or
xchg
xchg
dec
fisttpll
int
daa
adc
cmc
sub
jl
dec
dec
ret
shrb
xor
lret
arpl
cmp
xchg
mov
pushf
inc
pop
insl
push
cmpsb
fxch
sub
jnp
dec
inc
enter
dec
jle
pop
or
adc
mov
adc
push
fistpll
xchg
sarl
push
xor
xorl
gs
sub
inc
int
enter
push
subb
pop
jg
and
fwait
ds
mov
lock
leave
add
mov
and
jno
xchg
sbb
and
test
lahf
mov
out
dec
push
xor
xchg
test
xchg
gs
imul
shrb
jns
mov
ret
je
mov
aas
jecxz
sbb
ss
stos
nop
add
push
xor
push
jl
mov
jl
xchg
pop
xchg
ja
push
mov
jo
cs
inc
dec
pop
dec
xor
sahf
shrl
loopne
test
cmpsl
xchg
inc
xorb
inc
je
mov
scas
adc
mov
dec
je
dec
push
cmc
scas
push
les
push
loop
sbb
inc
jb
ret
in
std
inc
cmp
dec
or
cltd
ja
dec
loop
aas
jne
or
lret
or
lds
pop
aad
idivb
sti
notb
enter
xchg
sub
xor
and
in
jecxz,pt
cmp
xlat
mov
les
pop
xchg
aad
into
loope
out
push
fdivs
out
sbb
lcall
adc
jb
cwtl
pop
and
sub
xchg
adc
dec
nop
push
outsl
xchg
das
clc
mov
ss
add
xor
shr
pop
jno
mov
inc
daa
jge
ret
in
sbb
mov
lock
out
jb
call
push
add
das
lret
adc
aad
cmpsl
or
cmpsl
ss
mov
jbe
fimull
pop
adc
fdivs
pop
cld
jns
inc
add
adc
mov
in
in
inc
dec
pop
push
jne
cld
imul
pop
out
imul
mov
fiadds
push
xchg
cltd
add
xchg
imul
cmc
and
aaa
jne
mov
shrl
inc
sbb
adc
push
fs
jae
or
cmc
adc
fldenv
xor
pop
fdivrs
and
and
sbb
icebp
inc
pop
sub
mov
adc
add
rorl
sub
ja
subb
sub
mov
dec
in
mov
cli
sbb
ss
fidivrs
out
movsl
mov
jno
sar
test
loop
aam
and
mov
inc
ja
jo
rcl
or
sub
add
xchg
jmp
je
push
mov
std
cmpsl
mov
push
pushf
std
clc
fsubrp
mov
and
jp
or
fwait
mov
sbb
dec
xchg
iret
push
sbb
lcall
mov
push
pop
fcomps
dec
sbb
and
hlt
jb
jg
pop
ret
in
push
shl
xchg
cltd
jmp
xor
mov
xor
sti
int3
les
pop
sbb
out
rolb
or
repnz
push
jb
sub
mov
lods
ljmp
dec
or
xor
xchg
popa
pop
xor
xchg
add
ret
inc
lods
pop
push
cmp
cli
jp
scas
cmp
sbbl
cli
jge
arpl
jmp
mov
dec
int
jmp
dec
sbb
mov
dec
add
lock
xor
cmpsl
mov
lea
fnsave
aam
scas
arpl
xchg
xchg
mov
inc
stos
negb
xchg
in
xchg
add
mov
out
mov
sub
fsubrp
cwtl
test
xchg
movsl
push
stos
mov
mov
push
subl
loope
popf
jge
mov
popf
sahf
dec
insl
sar
popf
stc
fistpl
pop
jae
mov
fsubrl
in
xor
mov
int
pop
fsubrl
mov
push
inc
xor
sbb
andl
adc
call
stc
sbb
data16
call
shlb
pop
or
cmc
or
jg
cmp
cmpl
xchg
cmp
bound
push
xor
gs
test
in
mov
inc
sbbl
jns
sar
faddl
or
push
and
mov
dec
add
pop
repnz
pop
mov
daa
fbstp
dec
jp
es
outsb
xchg
shl
xlat
insb
jno
pop
rcrl
mov
stos
stos
push
and
mov
sbb
and
int
fdivrl
icebp
adcb
add
push
scas
pop
mov
fwait
mov
or
xchg
repnz
and
push
mov
lret
cmpsl
push
push
mov
popf
push
mov
or
addb
inc
sbb
ss
xor
subb
push
sub
jns
mov
cmp
xchg
outsl
insb
scas
mov
or
mov
inc
and
ds
and
xchg
test
movsl
cmpsl
sbb
sbb
iret
lea
add
xchg
addb
lret
stos
jge
jne
inc
xchg
inc
addl
inc
inc
ja
insl
push
iret
lahf
lock
fwait
sti
aam
mov
in
pop
jmp
js
xor
jbe
fistpll
stos
push
adc
jae
popa
cmc
fs
or
cli
dec
aam
cmp
ss
pop
push
xchg
mov
mov
fcmovnu
xlat
or
push
into
mov
mov
lea
rol
xor
pop
xchg
mov
inc
add
rcll
stos
add
xor
jb
ret
js
jnp
jp
fistps
in
cltd
mov
mov
notb
ja
and
iret
mov
jae
and
mov
loope
pop
mov
pushaw
lock
popa
push
cld
arpl
and
and
mov
scas
test
daa
cltd
sbb
out
mov
pop
popf
jae
cli
jns
sbb
adc
addl
outsb
das
push
fcmovu
lcall
sarl
shlb
dec
jl
xchg
arpl
cmpsl
add
sub
push
sub
sbb
lret
adc
daa
inc
in
std
jg
aam
sbb
mov
aad
into
add
je
pop
int
lret
mov
dec
movl
sub
andb
mov
and
jle
mov
add
push
sub
cwtl
push
jns
jnp
loopne
sarl
sbbl
xor
mov
lcall
jecxz
push
addl
push
jmp
stos
pop
enter
out
or
push
fldt
inc
sub
and
add
cmp
push
mov
in
jb
sub
es
in
pusha
pop
mov
dec
mov
sahf
into
jo
sahf
lcall
push
mov
je
subb
test
ja
ficomps
dec
insl
xchg
arpl
hlt
out
xor
pop
push
dec
lock
xchg
or
fmul
xor
xorb
nop
add
mov
ret
xor
inc
sbb
sarb
jge
jno
pop
cwtl
aam
clc
or
mov
lahf
cmpsl
mov
fstp
arpl
outsb
lock
lret
push
cwtl
bound
jae
sub
test
mov
ret
je
enter
lahf
ljmp
cmc
mov
push
pop
ja
pop
mov
xor
add
movsl
add
dec
xor
test
aad
lods
and
lock
loopne
adc
repnz
sarl
inc
or
clc
loop
inc
inc
or
in
fidivrs
fs
leave
jb
xchg
and
in
add
mov
aaa
sub
scas
pop
mov
fdivrl
stos
jge
add
jl
mov
add
or
fmull
outsb
inc
add
adc
sbb
push
mov
and
fwait
and
mov
cmpsl
sbb
cmp
sbb
js
outsb
mov
gs
ret
aaa
test
mov
mov
popa
dec
fstpl
xchg
inc
stos
pop
inc
mov
fwait
xchg
cmpsl
push
pop
or
out
dec
scas
nop
aas
rcll
push
sbb
jbe
mov
cwtl
adc
push
jo
sbb
arpl
sbb
sub
and
out
cmp
ss
cltd
or
or
fs
xlat
jno
cmp
lret
int3
jno
pop
xor
in
or
or
or
out
arpl
pop
lret
inc
adc
icebp
and
cmpsl
or
lret
outsl
push
loopne
insl
outsb
mov
scas
rol
call
ret
mov
cmp
push
pop
push
mov
scas
jno
iret
pop
cmp
repnz
mul
stc
sbb
sub
icebp
add
and
mov
fcmovbe
hlt
push
add
loop
mov
add
pop
pop
repz
aam
cmp
sbb
and
cld
test
imul
stos
fucomp
and
mov
addl
cmp
stc
push
lods
test
cmpsb
inc
subb
test
sub
adc
dec
mov
cmp
pop
jl
jae
data16
adc
mov
jae
and
stc
xorb
add
test
dec
mov
cwtl
inc
add
jmp
adc
sti
lcall
jle
lret
sub
clc
aaa
inc
add
int
out
cmpsl
ret
sbb
idivl
push
std
ja
nop
popf
jp
jae
or
push
and
outsl
xor
std
std
movsb
out
adc
cmp
and
pop
xor
push
cmpsb
dec
lahf
movsb
add
dec
push
cmp
xchg
xlat
repnz
jge
lods
xlat
popf
xchg
and
xor
push
insl
xchg
int
rorb
push
xchg
or
pop
mov
sarb
mov
cli
xchg
rolb
jb
loopne
adc
or
lods
cld
xor
xchg
jne
aas
pop
and
pop
dec
inc
or
cmp
mov
mov
xor
push
lock
outsl
mov
std
in
inc
or
cmp
xchg
or
mov
mov
ror
inc
and
jle
cmp
dec
fiadds
stc
cmp
rcll
in
cmp
aaa
aas
mov
push
les
repnz
cld
xor
push
and
out
aaa
push
into
icebp
push
xchg
out
adc
push
xor
ja
push
xchg
repnz
mov
lods
outsl
add
shr
xor
pop
pop
inc
pop
jmp
cmp
cmc
adc
int3
inc
outsl
jo
imull
out
cmpsb
push
mov
jmp
mov
loopne
sahf
cmp
lret
and
cmc
jmp
movb
xor
out
xchg
sub
and
imul
add
mov
les
adc
insl
mov
dec
mov
ss
cmp
xchg
mov
inc
stc
xlat
mov
jns
insl
dec
cli
fbld
aas
jle
ficoms
popa
sub
cmp
sbbl
fnstsw
xchg
push
les
rclb
dec
lret
iret
add
push
pop
push
out
and
lds
jl
lods
divl
sbb
pop
push
or
cli
neg
jmp
mov
cs
mov
push
push
add
lcall
sub
movsl
inc
dec
adc
cmp
cmc
jmp
pop
jmp
add
sahf
sbb
pushf
js
sbb
mov
adc
ljmp
mov
sub
daa
lods
das
mov
jb
push
out
les
shrb
cmp
add
loop
test
lcall
push
call
pop
into
dec
push
push
xor
or
mov
adc
mov
sbb
xorb
inc
js
sbb
jl
mov
jle
and
mov
jg
xchg
mov
adc
sbb
and
loop
imul
inc
les
mov
es
sbb
mov
or
pop
push
std
xchg
inc
loopne
lods
adc
icebp
stos
in
movsl
jnp
push
add
push
fsts
or
pop
inc
pop
dec
imul
mov
rcrb
inc
out
pop
xchg
and
je
sub
in
push
std
mov
std
hlt
hlt
push
sahf
dec
sbb
push
test
aam
fsubl
sub
mov
dec
jmp
xor
jae
pop
cltd
rcll
dec
into
sbb
push
and
sbb
out
cmpsl
push
push
xorps
aaa
aam
fsubrs
sub
lret
adc
cmp
enter
xor
jns
dec
jne
or
fmull
push
mov
jge
popa
xor
add
dec
outsb
mov
xchg
push
rcll
outsl
and
fs
jnp
clc
ljmp
xchg
test
stc
dec
pop
jecxz
bound
shl
loopne
out
mov
pushf
lret
inc
add
dec
bound
leave
sbb
insb
test
pop
dec
or
shll
push
push
mov
in
or
std
dec
mov
lea
mov
sarb
in
mov
mov
mov
lcall
movlps
dec
inc
mov
xor
bound
cmp
push
mov
mov
xor
lar
mov
inc
aas
xchg
popf
lcall
pop
mov
cmpsb
jae
test
mov
jb,pn
jb
sbb
mov
xchg
pusha
jmp
inc
imul
std
nop
lahf
jg
inc
lea
push
je
ja
rclb
xchg
sti
jg
popf
repz
dec
xor
push
mov
pop
cmp
cltd
add
scas
and
test
ret
test
lds
aad
mov
pop
and
jmp
mov
pop
or
sub
xchg
cmp
ljmp
arpl
dec
shll
xchg
jmp
loope
shlb
push
pop
movsl
loopne
push
sub
addr16
test
cmp
and
mov
fldcw
lahf
vphaddwq
jecxz
sub
je
dec
repz
shrb
sarl
leave
mov
mov
mov
xchg
iret
push
insb
xor
dec
mov
enter
out
add
dec
insb
mov
fs
mov
pop
test
fildl
mov
mov
sbb
clc
std
js
xchg
aas
scas
ret
pop
pushl
inc
lahf
sbb
jnp
inc
jne
mov
mov
jb
ffree
fs
adc
out
repnz
idivb
outsb
xlat
push
mov
sbb
aam
lahf
adc
mov
jge
je
stos
push
addr16
das
repnz
ljmp
stc
lods
jle
inc
pop
push
imul
cmp
aam
add
adcl
stos
adc
repz
ret
cmpl
xchg
adc
push
sub
cmp
cltd
pop
notl
and
out
pop
leave
imul
jne
aas
cli
push
arpl
in
xor
cltd
enter
xor
mov
mov
jns
sahf
mov
mov
cmpsl
push
fs
mov
sub
push
lret
leave
inc
icebp
loop
in
fsub
es
cltd
add
push
jne
and
scas
xchg
movsb
or
mov
xchg
dec
test
mov
inc
inc
adc
test
stc
sub
hlt
push
cmp
sub
iret
xor
mov
cmp
push
or
movsb
popa
mov
ds
pop
add
repnz
or
pop
outsb
mov
jmp
fadd
add
dec
dec
addr16
les
push
ja
mov
fldt
and
jb
aaa
jle
fidivl
xchg
add
mov
lahf
mov
mov
dec
insb
pop
iret
aam
xor
sbb
xor
arpl
push
dec
mulb
and
dec
pop
aaa
les
cmpsb
jmp
outsb
mov
cmpsl
jo
lret
pop
mov
lcall
push
into
jle
stos
cmp
push
mov
pop
cwtl
das
inc
shll
jnp
mov
out
int3
lods
sbb
jb
daa
push
xor
vmaskmovdqu
fincstp
push
fcoms
add
dec
mov
mov
into
xchg
sarb
ds
stos
fadd
sbb
lea
xchg
in
daa
dec
out
inc
lods
mov
stos
and
es
mov
mov
dec
popa
out
loope
test
sub
ret
imul
rorb
ror
dec
push
test
sub
jl
sub
ds
mov
iret
and
adc
negb
mov
pusha
test
insl
or
cmp
add
dec
loope
cmpsl
push
dec
jne
cltd
cld
push
aas
pop
pop
insl
sti
out
pop
testb
sbb
out
cvttps2pi
inc
mov
jg
test
sub
push
dec
mov
cmp
stos
fnstenv
xor
jae
gs
imul
xchg
sub
movsl
or
ljmp
cmp
int
sbb
mov
jb
loopne
push
pop
mov
andl
ds
je
mov
adc
mov
and
jmp
fs
dec
sub
or
pushl
outsl
pop
roll
jo
pop
pop
cmp
mov
mov
dec
sbbl
or
or
pop
inc
popf
push
or
mov
gs
sbb
aaa
mov
sbb
mov
push
dec
inc
out
out
push
pop
sbb
inc
jecxz
testl
movl
cmp
incl
pop
lods
sub
fmull
mov
jne
lods
xor
lret
cmp
add
imul
push
ss
and
fnstcw
stos
adc
mov
and
out
shll
faddl
lods
or
push
adc
adc
sub
negl
jae
out
in
scas
pop
bound
push
and
add
aaa
repz
jnp
je
subl
inc
stc
in
fbstp
mov
jecxz
test
push
jo
sub
cmpsb
or
mov
mov
xor
sbb
loop
or
pop
sub
adcb
and
sarb
out
inc
xchg
cld
mov
jge
or
sub
stos
add
outsb
gs
or
mov
into
xor
hlt
int
push
fidivrl
xchg
add
outsb
and
dec
imul
divb
loopne
jecxz
or
mov
movsl
sub
icebp
pop
stc
push
push
jns
sub
and
add
inc
inc
xor
hlt
idiv
or
retw
jg
in
sti
and
mov
cmp
loopne
nop
fadds
imul
in
fimuls
cmpsb
jle,pt
cld
add
cmp
and
push
out
outsl
out
mov
dec
mov
mov
push
mov
fcomps
les
cmpl
cs
call
mov
movsb
adc
mov
mov
mov
stos
and
stos
test
loop
out
add
dec
or
inc
and
mov
and
int
scas
fistpll
dec
incl
push
stc
jp
and
pop
inc
or
and
dec
dec
cmp
popf
push
aaa
cwtl
sub
ja
test
mov
inc
in
mov
stos
xchg
rcll
jae
pop
cmp
in
mov
aaa
clc
in
insl
fnstcw
dec
inc
mov
dec
mov
jb
mov
cs
and
and
and
mov
dec
mov
jae
ret
dec
dec
mov
and
jmp
adc
lret
add
push
arpl
add
sub
adc
ds
sarb
bound
pusha
ja
xor
mov
fistpll
dec
mov
sub
lds
dec
inc
push
add
mov
adc
push
cmpsb
je
rcl
loopne
jno
pop
cmp
jp
aad
jmp
mov
out
jb
jmp
add
rclb
inc
fisubl
mov
in
pop
fxam
pop
cmpsb
push
xchg
stc
cmpsb
loop
arpl
push
sar
fs
fistpll
sar
mov
mov
sbb
out
push
cwtl
xchg
sbb
imul
lods
outsl
inc
xchg
or
scas
test
xchg
addl
popa
outsb
andl
daa
xchg
fcmovu
xor
ds
inc
xor
xor
lods
into
insl
ret
pop
and
push
pop
clc
ss
mov
rol
mov
out
into
cmp
add
lock
enter
dec
shlb
mov
sti
xchg
mov
push
add
pop
inc
mov
xlat
test
add
cmc
pushf
sarl
stos
xchg
cltd
dec
in
push
jge
xchg
fistpll
and
test
xor
adc
lcall
push
call
cmp
xchg
insl
insl
push
das
das
push
cmpsb
lcall
aad
pop
test
jae
and
xor
xchg
pop
or
in
mov
inc
push
ret
xchg
jno
arpl
fcmovb
jbe
addr16
incb
lods
cli
xchg
loopne
cmp
leave
in
push
dec
or
cmp
icebp
jge
or
imul
lods
pop
ficoms
sub
xchg
bound
call
dec
mov
adc
adc
sbb
dec
sbb
adc
jno
imul
cs
bnd
loopne
xorl
jo
dec
jge
and
pop
imul
popl
xchg
ds
les
or
sub
nop
adc
inc
ror
cmp
into
pop
outsb
xor
adc
mov
mov
int3
or
xor
xor
fsub
jo
je
fisubs
cmp
inc
push
mov
mov
cltd
fcmovu
cmp
push
movsb
inc
push
in
ret
loop
loopne
or
fldenv
and
das
insl
fwait
add
sahf
and
sbb
daa
mov
adc
and
inc
push
jo
out
icebp
dec
int3
xchg
shl
xchg
add
mov
cmp
xor
mov
inc
mov
imul
je
sbb
pop
addr16
cmpb
and
sbb
out
push
cld
test
pusha
cmpsl
pusha
rep
xchg
fcoml
in
inc
fdivl
pop
jge
insb
xor
test
mov
mov
and
add
subb
cmp
xchg
repnz
fidivs
mov
xchg
jne
leave
xor
faddl
sub
mov
iret
add
movl
daa
adc
stos
gs
stos
loope
mov
jae
cmp
addr16
movsl
scas
lea
adc
mov
sbb
push
movb
add
jo
push
cmpl
sbb
call
mov
js
add
pop
mov
int3
scas
fwait
add
jge
iret
sbb
mov
push
pop
cli
push
shl
jmp
or
dec
cmp
xor
clc
xchg
out
mov
cli
aas
pop
adc
mov
or
push
jo
lahf
mov
ss
aas
jnp
repz
lea
fcmovne
adc
cmp
xor
sbbl
lret
rorb
lods
sub
icebp
push
movsb
ss
mov
aas
inc
dec
fiaddl
loopne
or
in
or
jo
std
jle
and
aas
test
mulb
fs
jo
mov
mov
mov
xchg
fdivs
clc
pop
ss
notb
ss
lea
inc
cltd
mov
test
mov
adc
inc
mov
push
xchg
push
outsb
lret
loop
fistpl
add
mov
sbb
ret
inc
jae
int
sub
imul
sub
mov
xchg
in
push
or
enter
or
cmp
insb
pop
fs
mov
aaa
inc
bound
ljmp
mov
mov
je
push
adc
scas
and
push
jb
popa
adc
adc
mov
aad
mov
xorb
outsl
pop
push
sbbb
gs
roll
loopne
and
adc
push
push
xor
mull
pop
jbe
incb
jg
call
mov
pop
mov
or
or
lods
adc
sti
xchg
dec
cmpsb
daa
pushf
xor
inc
push
loope
sbb
sub
outsl
add
jl
sub
push
mov
push
daa
fdivp
add
insb
xchg
mulb
mov
je
sar
xlat
dec
mov
pop
or
mov
mov
xchg
scas
xlat
int
pop
jno
out
outsl
sbb
and
in
stos
cmp
hlt
aam
mov
and
cmp
cmpsb
jmp
add
inc
loope
sti
scas
mov
mov
cmp
sbb
ficomps
enter
stc
and
xchg
push
cbtw
insb
dec
pushf
pop
inc
pushf
cmp
dec
inc
idivl
sub
dec
pop
sbb
imul
xchg
stc
mov
mov
mov
mov
mov
jge
outsb
in
inc
xor
pop
fldcw
sbb
in
adc
rorl
mov
mov
aam
lds
jg
adc
pop
inc
cltd
stos
out
mov
loope
mov
xor
sahf
push
or
jo
mov
and
push
sahf
shl
loop
xchg
cmp
sub
std
sub
jmp
ret
cmp
dec
lar
scas
stc
cmp
xchg
xchg
mov
js
jl
jl
jo
lret
dec
jae
bnd
mov
hlt
adc
push
rcrl
cmp
outsl
jmp
xchg
addb
enter
movsl
push
addr16
popf
scas
mov
nop
sub
sub
push
lods
ss
popa
sbb
or
pop
mov
dec
out
popf
aad
repz
push
mov
pop
pop
cld
in
outsb
out
mov
xchg
icebp
insb
fstpt
cld
or
mov
jo
jne
xor
lods
jbe
cmp
insb
pop
fisubl
out
pop
ds
lret
adc
adc
mov
rorb
dec
je
fidivs
fld
cmp
hlt
aam
dec
xchg
jns
lret
and
mov
out
fdivs
clc
pop
loop
ljmp
repnz
mov
add
aam
mov
add
mov
sbb
mov
push
push
incb
es
inc
in
aas
sbb
mov
jge
mov
lods
push
push
push
inc
dec
fs
das
cmpsb
test
sub
lret
xor
add
adc
xchg
lock
sub
mov
xchg
test
out
or
add
daa
js
dec
stos
pop
xlat
mov
inc
mov
mov
lods
and
or
std
sbb
jp
xchg
or
rolb
mov
add
js
xchg
pop
pusha
push
and
pop
xor
fs
iret
and
adc
aaa
dec
push
stos
lds
dec
sbb
or
aaa
mov
sub
adcb
add
mov
lods
xchg
outsb
outsb
imul
stc
in
loope
insl
and
pop
inc
push
cmpsl
mov
outsb
ret
fidivrs
and
mov
aad
cmp
jae
jbe
dec
outsl
or
jne
push
jb
insl
scas
lret
je
pop
jmp
or
ficoms
xor
shlb
idivl
inc
in
mov
dec
mov
mov
add
cmp
mov
loop
inc
sbb
jmp
inc
dec
sti
push
push
mov
push
sbb
leave
mov
inc
lcall
xchg
inc
insb
repnz
mov
sbb
test
xor
lret
stos
and
push
mov
lock
ss
movsl
mov
push
or
jae
push
into
rclb
ret
insl
push
pop
dec
or
xchg
jle
xor
mov
imul
push
aam
rdmsr
dec
cmp
push
loopnew
lahf
or
idivl
out
xchg
andl
jb
ss
movsl
ds
jl
mov
jnp
xor
pop
jae
mov
mov
jg
lretw
in
push
rorb
mov
jmp
in
test
hlt
fcomps
push
inc
sbb
xchg
ja
xchg
push
mov
sti
jne
adc
dec
or
cwtl
cmp
les
xchg
insl
fucom
mov
aaa
addb
call
aam
mov
icebp
sbb
sub
inc
add
and
mov
lret
or
insl
rolb
lcall
fisubrs
icebp
push
push
scas
aam
mov
hlt
call
hlt
xchg
stos
int3
xchg
pop
push
insb
or
test
xchg
or
adc
push
pop
xchg
stos
mov
inc
lahf
inc
aas
jg
loopne
stc
lods
xor
sub
sub
scas
sbb
testl
pop
js
ret
cmpsl
fadds
add
iret
cltd
pop
lds
jle
xchg
cmp
sub
sub
nop
lods
pushf
stos
ds
in
sbb
lea
popa
insb
in
cmpsb
out
jmp
adcb
jb
addb
cld
dec
stos
sbb
xor
and
push
sub
mov
push
add
pop
and
je
sbb
adc
inc
adc
jno
fidivl
test
sub
pop
loopne
cld
pop
int3
jnp
cmp
clc
xor
out
pop
dec
xor
sbb
lea
stos
jae
sub
test
ud2
or
add
pop
adc
pop
loop
int
adc
and
jae
in
add
mov
sub
jecxz
dec
fs
repz
jge
imul
jp
dec
notl
ds
add
out
cltd
lds
adc
daa
sub
ret
leave
jo
cmpsb
mov
mov
aam
test
repz
push
inc
sbb
mov
enter
push
push
cwtl
ud1
movl
adc
mov
je
pop
push
cs
mov
out
mov
inc
das
jge
jg
inc
mov
inc
mov
mov
pop
lds
xchg
mov
loope
push
pop
jno
jecxz
in
sbb
and
fidivrs
sti
int
lods
push
mov
sti
xchg
adc
lahf
std
jp
push
mov
xchg
xor
ljmp
nop
mov
xchg
loop
sub
add
pop
push
es
sbb
ljmp
stos
mov
inc
cmpsb
imul
push
cmpsb
lcall
pop
loop
lret
pop
pop
in
cmp
inc
shl
rol
inc
addr16
add
fsts
je
jl
mov
mov
iret
fildll
mov
aam
shll
sub
ss
insb
in
hlt
dec
sub
test
rclb
add
test
jb
fs
daa
dec
pusha
inc
inc
fisubrl
inc
mov
sbb
int3
mov
xchg
arpl
jp
popf
loop
push
clts
fsubr
daa
or
nop
push
dec
testl
icebp
or
js
push
lret
faddl
jo
push
inc
in
adc
in
pop
bswap
mov
xor
mov
jb
pop
in
pop
imul
aam
sbbb
out
mov
loope
adc
push
and
dec
jge
jmp
out
dec
jle
and
in
jecxz
aas
int
xchg
mov
nop
cmp
sub
cmpsl
lds
mov
ss
jl
pop
cmp
fistl
adc
test
push
push
fisttpll
sbb
xchg
dec
shrb
push
and
repnz
jecxz
add
mov
xchg
jne
and
loopne
xor
into
or
int3
aad
jmp
sti
inc
inc
jg
js
inc
ds
push
cmp
into
pop
int3
cmpb
mov
and
imul
mov
dec
js
lret
enter
pop
aaa
mov
mov
es
hlt
push
and
push
sbb
pop
adc
je
sahf
cltd
lahf
lsl
dec
mov
jmp
sarl
jg
xchg
lds
sarl
mov
in
lock
lret
js
stos
mov
jmp
cmc
lea
pop
inc
lcall
les
dec
mov
pop
add
xor
mov
xorb
sub
pop
data16
jne
test
mov
cmpsl
mov
add
add
lret
jns
xor
xchg
popf
rol
push
mov
and
fnstsw
fs
int3
xor
sub
jno
push
fmuls
cmp
or
fisttpl
inc
mov
std
fistps
xor
repnz
adc
std
adc
loopne
outsl
mov
outsb
mov
jno
mov
arpl
inc
shrb
or
fdivr
loopne
gs
jmp
jl
mov
inc
push
inc
push
pushf
sahf
in
xor
jl
stc
cld
push
shrb
ret
cmp
jns
jns
pop
mov
in
xchg
xchg
sub
in
cmp
orl
lods
stc
xor
mov
xor
sahf
xor
int3
aaa
or
pop
fbld
arpl
cmp
rcll
pop
into
ljmp
cmp
and
movsl
fiaddl
fwait
add
loopne
repz
add
bound
loop
insl
leave
in
cmp
fiadds
jne
test
inc
or
lods
inc
mov
xchg
xor
sbb
pop
cmp
ficoms
dec
add
jl
inc
jae
pop
jnp
cmp
call
add
aas
xchg
fwait
xor
xlat
int3
scas
inc
pusha
and
mov
jno
dec
hlt
shr
adc
mov
fisubrl
test
negb
xchg
idiv
aam
or
mov
loope
mov
jle
mov
outsb
mov
nop
rcl
ror
fsubrs
negb
cmp
cmpsl
and
xor
rcrb
jp
lds
scas
clc
jg
lds
pop
push
cld
pop
cli
cmpsl
pop
test
xchg
movsl
cmp
enter
push
lods
cmp
iret
jne
push
hlt
lret
das
test
in
jmp
std
aaa
xchg
sub
jge
call
dec
mov
fsubl
and
sbb
data16
xchg
popl
into
sbb
add
inc
xor
jo
xchg
dec
cli
and
imul
jg
xchg
mov
pop
adc
cmp
xor
xchg
fs
push
aas
addr16
ret
cltd
push
in
insb
in
or
out
and
ja
sub
arpl
mov
sbb
loope
out
or
cltd
push
mov
mov
xchg
out
push
stos
mov
sub
pusha
cmpsb
imul
jae
push
xchg
cmp
mov
cwtl
es
rcr
dec
lds
mov
xchg
push
mov
outsb
shl
lahf
out
pop
fdiv
adc
jb
jecxz
jb
xor
stc
jae
mov
dec
sbb
or
mov
sbb
stc
js
lock
stos
fildl
xchg
sub
mov
ljmp
push
mov
jns
ffreep
lea
daa
sbb
cmc
pop
iret
cmpl
lret
nop
adc
xor
pop
std
mov
aad
dec
test
hlt
ret
xchg
fs
cmp
sbb
xor
outsb
push
sub
dec
aaa
or
mov
iret
js
or
icebp
pop
ja
mov
ja
mov
repz
ja
fldenv
mov
movsb
sub
sub
stos
adc
and
mov
push
pop
daa
in
jl
mov
mov
add
jmp
imul
or
test
xor
jl
outsb
enter
push
push
mov
add
sub
popa
push
jns
aam
aaa
movsb
shl
push
or
xor
xchg
dec
mov
inc
xchg
inc
cmp
rcrb
aad
fs
lcall
out
mov
push
in
nop
jge
cltd
or
imul
jb
out
imul
sbb
test
mov
cli
sub
xchg
inc
imul
iret
pop
rcrb
es
mov
fidivrs
cltd
loop
or
cwtl
lcall
pop
mov
in
lods
mov
hlt
mov
gs
xchg
scas
sbb
or
and
fcom
fs
xor
leave
add
fcmovnb
in
jmp
scas
push
into
sbb
insl
addr16
mov
mov
insl
xchg
inc
stos
test
bound
inc
popa
xor
loopne
dec
jg
enter
mov
daa
popa
scas
scas
sbb
sub
cli
mov
and
lods
imul
aad
imul
cli
aam
jmp
cmpsl
lods
lods
sub
popa
fwait
out
sahf
and
mov
scas
fs
cmp
mov
bound
subb
jmp
mov
mov
jb
and
cli
xchg
inc
mulps
fdivs
loop
sub
popf
jne
aam
out
push
pop
cmp
xchg
hlt
xchg
xchg
mov
xchg
add
cmp
lret
les
rorb
push
push
inc
jge
std
or
movsb
ja
hlt
mov
ja
dec
int
xor
fisubrs
add
lret
inc
mov
loope
repz
aas
imul
aam
popa
movsl
jle
inc
xchg
neg
mov
data16
aas
movsl
jmp
icebp
cmpsb
pop
push
out
mov
in
xchg
js
jne
add
jbe
or
rcrl
and
lods
out
icebp
lock
js
sbb
leave
out
pop
pusha
repnz
test
jnp
mov
cwtl
insl
xchg
mov
lcall
xor
jp
fdivl
pusha
arpl
hlt
fwait
fs
inc
shlb
mov
es
mov
add
pop
inc
push
mul
fstpl
mov
stc
dec
or
and
jo
inc
pop
mov
in
loop
ror
call
les
or
dec
push
lods
mov
lret
add
xlat
dec
aaa
sbb
dec
and
mov
es
add
pop
movb
add
test
jecxz
fwait
pop
addl
shrl
pop
clc
mov
fucomip
mov
jne
add
xchg
lcall
and
mov
mov
or
inc
push
pop
jl
inc
mov
mov
push
ja
xchg
pop
dec
lret
aam
mov
hlt
sbb
ss
aam
or
sub
lret
call
adc
loope
mov
subl
push
icebp
out
mov
clc
pop
push
xor
dec
insb
jno
push
sub
xor
movsb
xchg
pop
idivb
or
mov
stos
adc
dec
mov
insl
adc
xor
adc
repnz
aas
mov
jmp
adc
push
mov
in
inc
jge
mov
push
sahf
mov
jl
and
in
or
mov
cmp
movb
mov
aaa
out
cmpsl
in
sub
dec
add
test
lcall
ss
mov
imul
xorb
aad
popa
repz
and
dec
xor
push
enter
jg
jne
mov
cli
jge
cwtl
jno
dec
push
pop
popf
scas
inc
inc
lods
push
out
pop
mov
out
loopne
inc
pop
or
dec
adc
adc
and
and
or
fwait
push
xchg
push
aaa
and
adc
sub
add
ficoml
mov
rolb
loop
arpl
cmp
cwtl
cltd
orl
imul
filds
and
lods
dec
sti
test
insb
jp
in
je
push
pop
das
push
and
rorb
pop
fsubrs
rcll
lahf
enter
int3
or
cmp
sub
adc
jno
mull
icebp
fcmovnbe
adc
call
aaa
rclb
xor
jne
fsubl
pop
test
fidivl
aaa
sub
testb
pop
push
sbbb
mov
cltd
je
int3
rorl
cmp
cmp
in
xchg
pushf
mov
icebp
rcrl
clc
cmp
and
dec
mov
popf
cmpsl
fstpl
mov
inc
int3
bound
pop
push
xchg
pop
inc
xchg
rorl
cmp
fmull
lret
sub
gs
xchg
or
mov
loope
loop
fidivs
ljmp
repnz
jp
jl
push
mov
mov
adc
gs
aad
insb
mov
add
mov
mov
cmpsb
pop
add
cmpl
movsl
pop
dec
xchg
or
enter
adc
add
mov
insl
xchg
lcall
cmpsb
xchg
les
and
cmpsl
dec
std
dec
roll
adc
imulb
shll
jecxz
or
push
pop
inc
cmp
jnp
hlt
inc
dec
xor
push
push
outsl
jbe
aas
je
push
ss
add
sbb
pop
jl
jge
push
push
sbbb
ja
sub
shll
cmp
in
cltd
sub
lahf
subb
sub
sub
sti
cmc
xor
sub
out
sbb
cwtl
mov
addl
mov
insl
rolb
xchg
inc
popf
scas
ja
fisubrs
xchg
andl
jmp
cmp
and
inc
jae
jmp
je
stos
fdiv
pop
adc
or
push
clc
jl
rorl
out
push
std
scas
ret
mov
aad
mov
js
arpl
xchg
in
test
stos
xchg
and
test
cmp
fisttps
lcall
pop
jmp
fcomip
xor
sub
adc
mov
jmp
sbb
xor
lods
lcall
inc
mov
pop
push
in
leave
daa
mov
imul
and
jae
or
push
xor
test
mov
hlt
gs
mov
inc
cmp
mov
mov
adc
cmpsl
jbe
icebp
adc
xor
into
lea
inc
sbb
incl
sbb
pop
scas
xchg
jl
cmp
lods
call
call
or
inc
mov
sub
xlat
hlt
ljmp
xchg
loop
icebp
ret
outsb
loop
jl
add
stc
fwait
pusha
stos
push
rcll
cmp
dec
dec
repz
xchg
and
cmpsl
inc
cmc
orb
insb
imulb
dec
shlb
in
popa
inc
xchg
push
iret
ljmp
fsubrl
fidivl
rorb
nop
stos
mov
mov
out
and
inc
lcall
imul
cld
stos
lods
cmp
jnp
jno
lods
lcall
mov
imul
or
lds
cmpb
aam
ss
jae
push
push
pop
test
pop
or
push
inc
sub
mov
adc
mov
sahf
call
push
xor
rorb
test
adc
xchg
jmp
push
pushf
sti
mov
push
push
dec
sti
and
dec
jb
mov
mov
aad
lahf
lods
rolb
pop
mov
inc
lcall
popf
adc
ret
stos
js
and
lcall
lds
jno
in
mov
lods
mov
xchg
mov
insl
les
lret
jmp
adc
mov
lahf
mov
adc
inc
test
dec
sbb
cmpsl
dec
pop
sbb
aad
jg
je
scas
es
pushf
cli
jbe
lea
sbb
jg
pusha
mov
mov
mov
pop
push
fs
mov
pop
adc
lahf
in
jg
es
je
push
add
insl
mov
mov
xor
sub
inc
push
cmc
xorb
js
jecxz
inc
add
push
jg
push
pushf
es
or
rcrb
popa
mov
inc
lods
xor
cmp
sub
cmp
fucomip
jns
int
inc
xchg
daa
push
mov
int
bound
xchg
and
xor
cmp
add
mov
dec
sbb
jge
aad
or
ljmp
cmp
call
sbb
mov
aaa
dec
inc
test
sbb
ljmp
scas
inc
fwait
xlat
dec
in
mov
aaa
inc
mov
jge
adc
inc
in
and
popa
ja
shll
xchg
jg
cmp
pop
into
div
imul
repz
imul
jecxz
mov
mov
dec
stos
ja
test
cwtl
out
scas
jno
push
testl
xlat
mov
out
sub
and
movsb
aad
mov
sarl
ds
xchg
jbe
jb
adc
xor
pop
mov
scas
pop
jnp
add
stc
mov
inc
add
add
ljmp
ret
insb
sti
or
mov
sbb
jo
add
imul
jp
mov
fwait
pop
push
adc
sub
fbld
mov
jbe
int3
inc
movsl
stos
lods
mov
cmp
imul
pusha
sbb
into
nop
mov
stc
mov
mov
sub
lock
scas
mov
push
lahf
sbb
adc
enter
hlt
jmp
dec
mov
mov
stos
scas
ss
test
fs
pusha
adc
xor
jp
sub
inc
xchg
repz
mov
xchg
outsl
xor
mov
inc
dec
pop
addb
repnz
fwait
xor
insl
mov
xor
inc
xlat
sub
xchg
cmpsb
sar
cld
and
mov
sarl
pop
dec
xchg
jb
or
shl
mov
repnz
out
xchg
pop
jmp
out
mov
lret
mov
inc
mov
xchg
pop
dec
gs
pop
arpl
subl
test
jne
mov
imul
popa
and
addr16
dec
xlat
into
xchg
push
xchg
sbb
pop
mov
sub
pop
xchg
test
out
test
out
test
mov
stos
repnz
je
arpl
int
negb
out
jb
pop
gs
sbb
test
jne
sub
or
xor
xchg
stos
aas
push
mov
xchg
out
pop
push
test
leave
mov
push
test
hlt
fnstcw
push
add
movsb
lds
pop
mov
loop
bound
jne
imul
mov
xchg
push
mov
stos
and
sub
enter
les
fldt
lds
inc
mov
lahf
jns
fcmovne
mov
xchg
test
hlt
jge
scas
adc
push
sahf
mov
in
and
and
loope
add
dec
rclb
xchg
xchg
pop
lcall
xor
xor
gs
inc
out
or
dec
mov
cmp
cli
xchg
jge
cmp
adc
sbb
mov
pop
dec
stos
add
test
fnop
mov
pop
cld
ss
cmp
and
fcomps
push
sahf
mov
adc
insl
mov
xchg
mov
cmc
pushf
xchg
inc
test
into
mov
or
out
iret
pop
popf
pop
clc
sbb
cs
mov
js
inc
xchg
cmp
mov
mov
fistpl
pop
mov
fmuls
rclb
aam
inc
pop
dec
je
cmpsl
push
orl
int
les
loopne
mov
xor
repz
add
add
pushf
popf
test
inc
pop
mov
push
fldl
mov
iret
add
loope
cltd
call
sub
dec
add
cmp
cmp
hlt
sub
int
les
mov
cmc
adc
jmp
xchg
aaa
lock
xchg
ja
xchg
jo
sbb
fmull
adcb
dec
out
jl
out
das
xchg
xchg
inc
outsl
mov
inc
gs
cmp
fisubl
xchg
jmp
dec
pop
push
cmp
out
sbb
pushf
movl
daa
cmp
mov
sub
xchg
push
cmp
clc
xchg
xor
cmc
enter
inc
pushl
pop
lds
rcrb
lods
movsb
xor
mov
push
push
and
adc
data16
mov
sbb
mov
xchg
lock
or
cmp
pushf
imul
pop
pop
addr16
ret
bnd
and
mov
and
repnz
pop
lret
incb
movsb
xchg
cli
xor
pop
aaa
mov
pusha
inc
or
cmp
into
jae
movsb
adc
jns
nop
inc
xor
or
lea
jmp
loope
pop
call
clc
adc
xor
mov
xchg
pushf
xchg
push
xor
jno
cmpsb
mov
cmpb
mov
nop
sbb
cltd
hlt
mov
lds
aaa
push
std
repz
aam
mov
cmp
cmp
jecxz
mov
clc
push
jns
int
pusha
inc
testb
xor
mov
sti
enter
addr16
in
loopne
js
mov
out
push
and
push
pop
and
mov
aad
sub
jno
push
mov
std
or
ret
xor
cmp
fldl
cmpsl
shlb
arpl
pushl
xchg
subb
jmp
sbb
inc
xchg
sub
mov
xchg
mulb
mov
inc
rol
sub
mov
cmp
jns
sub
les
dec
sbb
fimuls
jge
jae
ror
mov
and
mov
mov
or
dec
in
xlat
arpl
sub
push
dec
addr16
mov
sbb
ja
add
pop
int3
cmp
ljmp
jge
les
test
mov
xor
adc
push
outsb
xchg
out
daa
ret
ret
mov
add
xchg
mov
push
test
push
xor
push
int
aad
and
ret
hlt
add
insl
into
dec
cmp
push
push
adc
hlt
mov
sbb
inc
fs
mov
test
cwtl
jne
push
into
aas
aaa
xlat
int3
insb
gs
popa
cli
xlat
inc
dec
ret
jno
adc
pushf
cmp
stc
dec
sub
int3
jge
test
iret
gs
add
js
je
imul
scas
sarb
jmp
mov
jmp
xchg
icebp
pusha
xchg
in
inc
loopne
ret
fimuls
add
iret
aaa
push
pop
mov
jnp
or
nop
ss
xor
shll
inc
or
fsubp
das
iret
aad
pop
mov
lods
out
xchg
imul
mov
inc
sbb
lock
jmp
add
leave
jg
int3
int3
in
fiaddl
or
adc
and
mov
movsl
imull
jbe
or
xchg
jnp,pn
aad
loope
adc
jae
mov
insb
xchg
xchg
cli
add
dec
imul
fucomip
jmp
add
jmp
insb
inc
sbb
outsb
stos
mulb
mov
mov
inc
adc
and
push
test
mov
push
or
mov
fisttpll
jmp
ljmp
mov
pop
jp
cmp
stos
jae
sub
lahf
fisttpl
dec
fnstenv
fnstsw
adc
outsl
mov
imul
fisubl
test
jns
jecxz
push
stos
cmpsb
mov
mov
out
adc
mov
mov
jge
cwtl
jno
sarl
cmp
pop
fs
iret
test
sbb
rolb
fwait
scas
dec
sub
jmp
add
jmp
push
inc
jno
lcall
pop
arpl
sar
inc
xlat
insb
les
xor
pushf
pop
mov
or
mov
loope
jo
and
pushf
xchg
mov
dec
pop
cmp
call
gs
movsl
orb
testb
pop
mov
push
cld
jp
shlb
jb
jne
ret
movsb
jl
out
xor
aas
mov
rcrl
stos
sbb
mov
mov
pop
jno
lock
shrb
jle
sub
inc
inc
pop
mov
and
cmp
push
out
scas
mov
xchg
push
jbe
xchg
sbb
fnstcw
sbb
sub
push
fnstcw
and
jmp
movsb
sbb
ja
xchg
sbb
or
fwait
ret
iret
mov
test
iret
insl
pushf
jmp
mov
add
jecxz
imul
mov
divl
jo
sarl
inc
outsl
adcl
dec
sahf
rcrb
arpl
add
aad
dec
xchg
shll
adcl
shll
inc
stos
push
xor
xchg
popa
rclb
orl
jno
fsubl
sbb
imul
mov
div
int3
mov
or
lret
cmc
mov
clc
shlb
loopne
inc
aam
subb
imul
test
jb
cmp
dec
pusha
out
push
push
lds
ds
add
mov
dec
add
lods
and
test
jmp
daa
mov
adc
jnp
ds
add
ss
sbb
in
xchg
imul
cmpl
int3
push
pop
pop
addl
test
cmp
lret
popf
ret
mov
loope
int
mov
ret
gs
mov
test
repnz
addr16
arpl
sbb
jl
mov
mov
loope
xor
xor
sub
push
imul
mov
stos
shrl
repz
fnsave
lds
push
xor
sbb
in
lret
lret
fwait
icebp
inc
mov
jmp
dec
mov
daa
fisubrl
and
frstor
rcll
mov
push
pop
fsubl
cmp
adc
ss
das
popa
jmp
mov
mov
sbb
lock
ja
sarl
les
movsl
xor
sub
and
in
in
adc
mov
lods
sub
inc
pushf
mov
callw
and
push
and
xchg
dec
mov
in
js
mov
lahf
fsts
mov
inc
add
insb
or
jo
xlat
adc
sbb
out
fs
subl
lret
and
or
dec
outsl
shlb
imul
sbb
pop
pop
mov
and
push
rol
ja
mov
push
test
orb
scas
push
add
call
cli
jns
rorl
push
sbb
imul
cmp
mov
dec
inc
js
jb
jg
pushf
scas
xor
and
and
daa
cmpsb
imul
and
ret
dec
jge
cmp
cmc
loop
scas
cmp
mov
add
rcll
cmp
lahf
push
sbb
push
jl
xlat
hlt
ja
mov
dec
les
xor
cmpsb
cmc
lcall
sub
jge
ret
mov
test
rcll
pop
or
insl
mov
mov
inc
mov
in
mov
lods
popf
les
std
mov
cmc
les
mov
dec
or
jecxz
mov
daa
andl
insl
into
lcall
in
ss
mov
cmp
pop
sub
mov
dec
aam
lods
cmp
out
sub
hlt
js
sub
aas
mov
jp
outsl
mov
push
mov
into
xor
xchg
lret
inc
or
or
lods
push
cmp
mov
jg
testb
test
mov
jl
and
insl
cmpsb
add
lret
and
cld
dec
sub
std
jb
js
outsl
aad
jle
scas
fs
cmp
test
push
jg
mov
jne
hlt
push
pop
jno
clc
inc
pop
fmul
cld
and
adc
mov
push
mov
int3
iret
pop
jge
sbb
aas
xchg
inc
mov
pop
cmp
loopne
dec
jp
mov
popa
std
arpl
insb
mov
daa
fbld
or
ficoml
repnz
aad
hlt
sbbb
movsb
std
cmpb
xadd
jne
in
repnz
xchg
imul
and
jecxz
out
mov
repnz
mov
aaa
jae
lods
lret
jbe
stc
out
adc
imul
mov
mov
mov
stos
mov
mov
ss
xchg
out
repz
fdivs
movsb
jne
lret
mov
jne
and
cli
or
leave
or
jnp
dec
push
lock
mov
cmp
aad
sbbl
dec
int
ja
mov
int3
popf
andb
xchg
cli
dec
or
pop
add
mov
dec
xchg
imul
mov
xchg
popa
notl
lock
push
mov
out
sbb
or
mov
push
inc
or
rolb
mov
xchg
sti
mov
mov
xor
mov
insl
push
inc
iret
jg
xchg
dec
xor
mov
dec
insl
arpl
sahf
lcall
fstpt
ret
daa
and
adc
mov
mov
push
sub
adc
imul
pop
fstpl
aaa
inc
popa
adc
jno
dec
xor
lret
xorb
mov
je
xor
aaa
xchg
push
fiadds
call
aas
add
fisubs
fdivp
data16
dec
sub
sbb
repz
out
jle
jle
arpl
imul
jle
int
les
pop
shr
sahf
pop
mov
cmp
inc
push
aas
cmpsb
ja
lea
popf
fsub
adc
ret
xor
adc
clc
in
push
fbstp
jae
dec
jmp
adc
stc
lods
jbe
sbb
outsb
lahf
rsm
sub
dec
jl
paddsb
das
mov
xchg
mov
test
lock
mov
sti
ljmp
stos
mov
je
cmp
addr16
cli
dec
mov
fcoml
push
pop
jge
outsb
dec
psrld
xor
int
mov
and
cmp
cltd
dec
pop
shl
dec
mov
loop
int
cltd
ja
mov
bound
repz
xchg
inc
cmpsb
outsl
cmp
aam
repnz
adc
mov
jns
in
dec
ja
movswl
mov
cltd
pop
push
sub
aas
aaa
ds
scas
cmpb
ss
daa
push
popa
addr16
or
jb
stc
call
call
in
and
sub
cli
dec
lock
ljmp
sbb
fadd
sub
add
rclb
sub
stos
aam
mov
push
push
fwait
loop
imul
jecxz
lahf
xor
and
jg
ds
xor
ja
push
adc
lock
and
scas
push
inc
sub
fisubl
xor
push
push
stc
call
out
icebp
lds
xchg
dec
into
popa
mov
or
mov
adc
inc
les
repnz
and
sarl
mov
mov
dec
xlat
scas
ds
nop
notb
daa
dec
cmp
dec
daa
mov
xchg
push
sub
test
insb
pop
pop
outsl
jbe
ja
mov
cmp
and
aas
push
mov
cwtl
add
stos
popa
sub
fwait
or
lds
jne
mov
pop
jns
jle
mov
mov
xchg
call
imul
mov
cld
test
xchg
cmp
imul
dec
add
incl
popa
mov
inc
cltd
pop
xchg
sub
shlb
mov
jecxz
and
push
pop
push
adc
mov
scas
stc
les
lods
mov
mov
cmpsl
rclb
mov
sub
mov
pop
pop
inc
pop
jne
dec
add
dec
sbb
jo
cltd
pusha
mov
xchg
in
pop
call
outsl
fmuls
inc
addb
in
cmp
pop
lret
sti
sub
sahf
pop
push
movd
xlat
adc
scas
outsl
in
loop
jg
leave
xchg
cltd
insb
ret
enter
aad
mov
loope
addb
lds
sbb
inc
cmp
pop
push
bound
out
pop
out
xor
stc
clc
filds
adc
xchg
stos
dec
loop
aas
aad
mov
sbb
repnz
xchg
cmp
dec
xchg
fsubl
fwait
cmp
cli
out
cld
stos
das
lods
dec
push
lea
test
xchg
fimuls
inc
xor
das
mov
cmc
mov
mov
cmp
xchg
and
dec
adc
loop
sub
test
dec
pop
mov
int3
pop
in
mov
add
mov
sub
jnp
cmpsl
cmp
pop
sti
push
add
adc
cmpsl
pop
cmp
dec
push
add
mov
pop
pop
out
push
mov
push
outsb
arpl
rorl
out
adc
jmp
jecxz
nop
ficoml
mov
dec
sbbb
mov
aas
mov
ljmp
adcl
and
jb
cmp
push
dec
or
iret
inc
das
insl
xchg
cmp
fsubrs
sbb
pop
js
into
pop
pop
pop
and
sub
adc
popa
mov
push
psubb
test
out
testb
pop
bound
notl
xchg
mov
clc
sti
loope
dec
jo
addr16
pop
fstp
push
data16
stos
loope
rcrl
mov
cmp
cmp
iret
insb
das
xlat
insb
mov
adc
inc
jg
jge
cltd
arpl
in
inc
ret
call
test
add
mov
scas
sti
nop
mov
push
xor
fwait
ds
inc
std
pop
out
jmp
stos
popa
les
sub
stos
test
inc
data16
lea
fstpt
pushf
pop
mov
out
rcrb
jno
sub
inc
xor
mov
in
cmpsb
outsb
mull
sahf
and
subb
scas
adc
pop
inc
xor
push
mov
jb
lret
scas
fcomps
sub
xchg
jns
cltd
sarl
test
add
outsb
mov
fstl
aas
mov
fldenv
or
jb
sub
sub
sbb
aas
xor
fs
jle
cmp
mov
pop
decl
push
aad
xchg
leave
push
fsts
push
mov
mov
nop
jbe
das
push
ss
mov
cwtl
lret
mov
dec
dec
shrl
xchg
stos
sbb
loopne
mov
enter
je
je
jmp
nop
loopne
jl
xor
jge
or
sub
jecxz
inc
jmp
in
push
push
jge
xlat
xchg
push
lahf
rorl
jle
add
iret
in
adc
stos
mov
adc
and
mov
dec
sub
lea
sbb
push
or
push
test
mov
fucom
jp
lcall
lds
test
sbb
inc
push
and
es
iret
mov
dec
insb
sub
mov
mov
insl
aam
sbb
xchg
or
cmp
push
jecxz
sub
out
mov
mov
xor
bound
enter
int
push
data16
sti
inc
and
lret
ja
cmc
add
test
or
mov
mov
in
outsb
ret
fisttpl
enter
mov
imul
mov
jle
mov
in
movl
mov
push
adc
or
pop
aaa
es
sbb
mov
or
addl
rcll
jg
xor
in
enter
out
cmp
add
jecxz
xor
lods
xor
mov
scas
test
xor
xor
inc
sub
nopl
aad
stc
addb
sub
sahf
cwtl
pop
mov
mov
sbb
add
test
sti
xchg
sbb
pop
xchg
pop
sbb
push
enter
dec
addb
test
jbe
nop
scas
jl
je
push
cli
dec
pop
adc
xor
push
jp
sbb
xchg
sbb
nop
mov
sub
pop
fdivrp
sar
pop
shrl
repz
lods
pop
push
ljmp
ror
lods
add
adc
test
loop
mov
mov
aaa
fldl
in
pushf
out
xor
test
mov
inc
and
rol
mov
mov
adc
data16
push
inc
imul
es
xor
sahf
pusha
jp
iret
mov
ret
inc
leave
mov
mov
dec
jnp
js
clc
leave
adc
jecxz
push
shrb
cmpl
pop
dec
int
cmp
rcl
pop
xchg
add
sbbl
push
orb
xorl
mov
sbb
jge
cld
push
jmp
mov
sub
cmp
int
cmp
jecxz
jb
inc
or
adc
and
daa
jg
addb
push
jns
dec
jb
jg
push
shl
jmp
test
xchg
mov
push
dec
cmpsl
jae
cmp
test
lcall
xor
out
adc
xchg
in
push
cmpsb
mov
jg
jmp
sbb
or
in
xor
test
xor
xchg
adc
jl
adc
jl
dec
mov
add
mov
cmc
push
in
fsts
cwtl
push
fstpl
mov
add
stos
jo
cmpsl
leave
jle
jp
fnstcw
test
pushf
push
xchg
or
fistps
add
ja
je
out
in
fcmovu
mov
popl
aaa
icebp
shll
loop
push
cld
mov
fwait
imul
test
test
clc
das
jb
insl
adc
dec
fldl
call
jns
dec
sub
mov
bnd
push
mov
addb
stc
rclb
repnz
push
shlb
xor
xor
dec
jl
pop
sbb
into
int
shr
cmpsb
xlat
pop
xchg
cmp
arpl
dec
xor
mov
leave
or
das
jp
hlt
in
movsb
ret
data16
hlt
and
xor
das
xchg
ja
add
push
push
clc
hlt
sti
in
pop
outsb
jle
scas
std
cs
mov
lods
lahf
out
xchg
mov
or
icebp
xchg
pop
jo
lods
stos
stc
xor
mov
dec
inc
stos
mov
and
fcmovnb
aaa
sub
mov
jne
popf
xchg
out
shlb
jne
add
mov
in
ret
ds
lods
push
lds
xchg
cmp
and
jns
dec
insb
or
sub
fs
rcll
outsb
inc
and
mov
lock
adc
iret
mov
jg
push
pop
push
shl
into
jp
mov
xor
in
jo
shl
mov
scas
pop
mov
sbb
mov
int
cmp
popa
jbe
mov
int3
mov
mov
pop
dec
mov
mov
jmp
mov
and
in
mov
or
adc
pushl
test
push
pop
sbb
push
jns
jecxz
sub
scas
xor
xor
adc
inc
ret
adcl
mov
jnp
lods
cmc
outsb
bound
and
sbb
jle
push
js
sub
push
mov
or
xor
adc
mulb
in
sbb
mov
cmpsb
dec
ret
xchg
sahf
and
push
jmp
mov
insl
mov
mov
stos
sbb
roll
fisubrl
add
pop
dec
or
fists
ss
mov
sbb
mov
or
pop
ds
mov
pop
rclb
adc
mov
sti
cmp
inc
pop
jae
cmp
lock
jns
inc
stos
fs
fmull
xlat
shrl
arpl
inc
add
daa
inc
jmp
push
gs
sub
pop
inc
jae
xor
imul
mov
rorl
add
add
jo
mov
push
xor
mov
xor
mov
adc
cld
mov
push
imul
loope
into
xchg
mov
and
mov
mov
adc
adc
cmp
mov
cmp
and
sub
testb
xchg
ficoms
lahf
add
and
mov
push
adc
xor
xor
popa
jae
mov
scas
fucom
movsl
xchg
sub
cmp
sbb
pop
ficoms
pop
stos
stos
xchg
mov
ljmp
push
mov
idivl
js
cld
test
sub
in
dec
pop
insl
mov
mov
int
les
xor
test
loopne
fdivp
les
sub
cmpsl
mov
dec
push
outsl
popa
mov
push
fdivrp
int3
pushf
sub
add
pushl
stc
mulb
mov
adc
dec
pop
fwait
out
inc
jmp
jno
dec
inc
aaa
mov
mov
inc
push
jmp
push
jo
mov
mov
ret
mov
mov
div
xchg
dec
aaa
es
jp
push
inc
mul
jbe
ja
movzbl
cld
out
loopne
inc
aas
pop
add
das
mov
aaa
mov
cmp
les
add
insl
cmp
dec
push
xor
and
push
push
arpl
xor
movsl
negb
out
xor
repz
cmp
fisubrl
jae
mov
pop
mov
mov
adc
xchg
mov
in
ljmp
add
pop
or
mov
repnz
jmp
inc
pop
inc
hlt
add
cld
sub
mov
push
adc
into
repnz
inc
in
sbb
sbb
leave
and
shrl
orl
mov
shll
lods
mov
hlt
mov
xchg
jne,pn
pop
clc
outsb
sbb
insb
std
lcall
icebp
fdivl
cmpsb
sub
push
sub
insl
mov
mov
cwtl
test
loope
xor
push
cmpsb
xorl
out
pop
mov
js
sbb
mov
icebp
inc
std
inc
test
fimull
ss
push
push
into
lret
leave
out
mov
movsb
push
mov
push
in
add
inc
add
mov
adc
mov
cmp
mov
xor
or
sub
fnstenv
add
cld
adc
aaa
rorl
rorl
sahf
ss
loope
sub
pusha
es
mov
jb
add
dec
adc
pop
cmc
fisttpll
cltd
mov
cwtl
dec
inc
insb
lret
or
loopne
sub
gs
in
lret
inc
sbb
cld
ret
mov
inc
loop
ja
pop
or
push
shlb
pop
and
es
cmp
cli
cmp
add
push
xchg
or
push
out
test
jp
in
cmpsl
movsb
jg
jbe
mov
outsl
and
mov
bnd
mov
push
inc
scas
mov
in
scas
rolb
lods
mov
jecxz
mov
shrl
pop
dec
in
fsub
sbb
inc
pop
pusha
loop
fisubrs
adc
pop
mov
adc
xor
out
ret
xor
fisttpll
outsl
sti
sub
outsb
mov
scas
push
dec
push
sub
cli
pop
push
imul
mov
add
adc
push
inc
int3
mov
out
dec
dec
push
dec
call
pusha
and
mov
insl
mov
out
shlb
push
ja
sbb
and
out
adc
mov
sarb
daa
out
sub
outsb
push
xchg
and
loope
sbb
inc
push
inc
daa
rorl
jg
dec
xlat
idivl
loope
push
repz
mov
mov
sbb
mov
mov
in
ss
gs
sub
sub
and
es
into
sub
and
daa
sti
mov
fdivr
push
cmp
mov
cmp
inc
repz
or
fcomps
ret
fsubl
fcoms
and
mov
add
inc
rcll
sbb
imul
and
pusha
lods
jns
xchg
push
pop
or
sub
test
in
clc
mov
sbb
mov
xchg
sub
call
or
mov
data16
jl
cmp
xchg
push
cs
cmp
rcll
testb
out
stos
loope
popf
arpl
sub
sbb
add
out
add
sbb
mov
sub
bound
or
xchg
push
rcll
push
push
mov
test
dec
fcompl
mov
cmpsb
mov
jne
cmp
pop
roll
repz
divl
arpl
aas
xchg
dec
pop
add
fwait
es
dec
addl
xlat
sbb
add
xchg
and
js
in
shlb
jb
fldenv
cltd
int3
in
jo
clc
jb
pop
std
fdiv
icebp
and
ja
mov
mov
popa
sbb
xchg
and
test
popa
in
mov
sahf
mov
f2xm1
dec
js
inc
inc
insl
fmuls
sbb
cli
dec
sub
cs
pop
in
gs
or
cmp
mov
out
lret
movsb
mov
imul
lret
aam
fs
lea
clc
cld
mov
std
xor
insb
ret
jae
cmp
xor
pop
inc
shll
sbb
ja
clc
pop
lock
sbb
mov
scas
fwait
sbb
cmp
push
mov
das
les
dec
add
jl
mov
pop
cmpsl
aad
inc
je
pusha
dec
adc
mov
repnz
and
je
int
imul
fs
jne
pop
mov
sbb
and
mov
fs
mov
dec
or
dec
add
aaa
into
lea
fsubl
stos
popf
sub
pop
es
cmc
scas
or
lret
mov
enter
push
mov
shll
xor
mov
cmp
inc
leave
aaa
mov
nop
cmpsl
mov
mov
xchg
jbe
mov
lods
xchg
mov
test
stos
and
sub
jo
test
lods
jo
push
push
ror
pop
push
xchg
or
mov
mov
sub
jl
adc
push
push
and
data16
cs
xchg
repnz
cmp
push
xor
dec
and
jecxz
add
jl
shll
test
sbb
xchg
sub
pusha
mov
sarl
stc
jne
outsb
stos
sbb
mov
push
call
or
cmpsb
sti
cmp
shll
mov
adc
lds
push
fiaddl
cmp
mov
jbe
js
js
es
mov
cmp
sbb
clc
ss
loope
test
aas
outsl
movsb
xor
adc
enter
test
pop
lret
cmpl
jnp
je
xchg
or
lret
xchg
dec
lods
cmp
and
shll
roll
das
push
in
push
pop
cmc
ror
iret
loop
push
clc
addr16
nop
mov
scas
inc
push
mov
pop
decl
xchg
in
push
mov
mov
shll
out
adc
or
or
inc
jno
push
test
push
push
xchg
aaa
or
neg
fcomps
mulb
cmp
jle
fistpl
fistpll
out
mov
mov
sub
ss
arpl
push
fisttps
out
or
sahf
and
and
je
cwtl
mov
fldt
push
ret
mov
test
mov
add
test
pusha
out
sar
test
sub
rolb
jmp
mov
or
mulb
mov
xor
jg
insl
jle
mov
dec
pop
mov
pop
jmp
int
inc
in
adc
or
addr16
inc
push
int
xchg
mov
fucom
or
daa
mov
rorl
lret
sahf
adc
lahf
outsb
leave
daa
inc
int3
das
arpl
roll
xlat
adc
mov
jae
fisubs
cmp
dec
outsl
xchg
cmp
cmp
cmp
call
xchg
jge
cmp
repz
and
mov
dec
ja
pop
mov
pop
jl
sub
fwait
addl
in
sarb
adc
je
inc
xor
mov
jecxz
inc
adc
daa
pop
jae
sahf
sub
or
aaa
pop
lods
popf
mov
insl
cmc
lods
arpl
jns
cmc
xchg
shl
and
shlb
pop
sbb
rorl
mov
xor
pop
lahf
lcall
andl
es
and
out
aam
mov
add
xchg
mov
lret
imul
cmp
and
ret
sub
mov
insb
js
adcl
lahf
sbb
out
fldt
jge
xchg
aam
pushf
mov
clc
mov
fldt
xchg
in
pushf
push
cmp
imul
pop
mull
int
mov
call
mov
push
xchg
fadd
pop
fucomip
subb
and
adc
adc
jns
mov
xor
jbe
sti
cld
popf
xchg
in
insl
xchg
add
jecxz
pop
lahf
jns
lds
std
fs
xchg
fsts
mov
xchg
sbb
imul
imul
int3
push
or
xchg
scas
jo
data16
cmp
or
xchg
hlt
xchg
ror
std
sbbb
inc
sbb
jnp
cmp
or
inc
cmp
push
aad
scas
daa
pop
mov
aam
mov
js
bound
mov
mov
hlt
ss
dec
and
xor
into
shlb
jmp
mov
ja
jae
pop
imul
mov
popf
add
das
mov
mov
cltd
lret
inc
test
xchg
mov
jecxz
jnp
in
out
stos
mov
and
stos
dec
scas
dec
mov
push
sub
imul
pusha
das
outsb
stc
mov
xlat
add
daa
leave
pop
orl
and
cmc
jl
lock
cmp
pop
push
mov
call
push
push
divl
nop
jl
mov
pop
rol
pop
adc
lcall
xchg
sbb
mov
pop
and
test
jno
jb
cmp
mov
sar
push
aam
repnz
daa
push
je
mov
scas
inc
ljmp
shrl
xchg
inc
push
xor
out
mov
mov
pusha
in
outsl
jne
out
xor
sbb
dec
enter
cltd
into
mov
into
fld
sbb
pop
sbb
insl
aad
push
into
mov
out
sub
jnp
inc
test
movsl
xchg
dec
aam
mov
push
adc
sub
outsb
mov
dec
int
xchg
mov
mov
xchg
mov
loopne
push
shr
int
vmread
cltd
loop
jnp
in
lods
sub
adc
es
aas
shrb
xchg
inc
lea
scas
fs
xchg
iret
mov
ja
pop
xor
scas
cmpsb
push
pop
push
repz
dec
repnz
xchg
inc
ret
mov
or
pop
pop
cmp
into
mov
addr16
inc
sub
data16
dec
mov
enter
jnp
rcrl
push
in
rcll
loop
pop
cmp
repz
or
or
enter
dec
inc
sub
push
mov
mov
sub
push
test
and
loop
ret
dec
shrb
loope
int
dec
jecxz
outsb
jae
daa
mov
dec
mov
lods
ret
mov
inc
cs
cmp
das
out
das
in
xchg
jns
enter
jno
sti
xchg
jl
jp
outsb
cltd
insb
mov
push
adc
push
dec
push
xchg
imul
int3
jno
add
jmp
ficomps
int
into
xchg
adc
popf
add
xchg
sub
or
cmp
jge
insl
sub
jb
xor
mov
xchg
push
jg
sbb
in
pop
sbb
leave
jnp
xchg
call
bound
cmp
in
or
es
dec
fcomps
bound
dec
dec
ror
xchg
jnp
inc
mov
out
mov
mov
sbb
push
sub
fnsave
adc
xor
mov
ret
mov
push
testl
sub
xchg
adc
cmpsl
xor
std
lcall
mov
pop
lea
mov
cli
mov
mov
sbb
push
dec
mov
test
in
sbb
mov
daa
adc
jno
insl
push
jbe
cmp
or
sbb
inc
nop
sub
mov
add
lcall
adc
test
dec
int
sbb
scas
push
enter
jle
push
adc
jl
add
inc
mov
call
and
jb
jg
mov
mov
cmc
mov
pop
push
sub
adc
xchg
and
shlb
or
xchg
sbb
aad
aam
out
jnp
dec
pop
std
adc
test
mov
jmp
jge
aaa
nop
add
sbb
mov
mov
icebp
xor
pop
add
leave
or
sbb
sub
push
or
cmp
jp
xor
sbb
cmp
pop
fwait
jnp
fldt
adc
pushf
and
jno
pushf
test
ret
loop
inc
xor
addr16
call
xor
sub
pop
and
cs
xor
xor
rorl
or
jle
cmp
fcoms
or
jno
addr16
mov
and
aam
leave
push
sbb
jmp
test
sti
dec
and
sbb
xchg
pop
xchg
push
cs
shll
xchg
cmpsl
lcall
mov
lahf
push
data16
int
je
out
mov
adc
push
xchg
pop
in
push
sbb
adc
call
scas
xlat
inc
jne
inc
das
add
stos
sbb
sub
das
adc
mov
sbb
jo
dec
push
imul
cmp
inc
stc
fnstsw
in
xor
js
mov
mov
add
xchg
mov
rcl
test
jge
cmp
lds
push
adc
mov
leave
cltd
jge
mov
cmp
push
je
lea
enter
das
lahf
jb
mov
dec
xchg
pop
xchg
mov
js
fldt
out
fistps
pop
out
cmpsb
push
mov
popf
bound
mov
es
jo
pop
out
push
cmpsb
or
arpl
cmp
push
rcll
sbb
std
pop
mov
mov
out
add
or
jne
aam
mov
xchg
loope
call
jle
and
lfs
mov
imul
sahf
add
rol
inc
rcr
mov
pop
xor
adc
sbb
mov
xchg
xor
adc
cmp
pop
sahf
jbe
movsl
mov
inc
sarl
mov
int3
xlat
repz
stos
xchg
sbbl
mov
popf
dec
pop
mov
shll
mov
sub
cmp
int3
or
es
mov
in
pop
cmp
adc
push
and
jns
mov
pop
rol
imul
mov
push
fwait
and
cwtl
jb
mov
mov
jnp
mov
or
dec
nop
sbb
in
mov
xlat
orb
je
loopne
push
test
adc
imul
mov
or
push
into
pop
dec
shll
push
xor
cmp
out
les
or
scas
pop
cmp
push
jmp
mov
test
rorb
out
popl
and
and
jp
add
test
lea
ds
mov
sub
push
adc
test
xor
jne
hlt
iret
or
jmp
sbb
scas
mov
test
insl
inc
inc
outsl
ss
icebp
and
xchg
xlat
push
fs
mov
mov
xchg
dec
rclb
mov
pop
or
or
push
add
pop
test
fidivs
daa
les
insl
push
jl
xlat
lahf
xor
outsl
aaa
js
and
out
or
imul
adc
fcmovnu
inc
lea
jecxz
daa
test
inc
push
iret
xor
mul
lret
pop
call
hlt
rolb
cmpsb
mov
test
and
fsubrp
rclb
cmp
outsl
or
out
jmp
faddl
in
inc
repz
mov
sbb
mov
dec
mov
inc
mov
mov
mov
xchg
jae
pop
imul
push
aas
dec
dec
repz
cltd
pop
pop
andb
cltd
push
shlb
push
sub
pop
pop
dec
ret
out
neg
xchg
pop
jno
mov
cmpsb
mov
insb
jo
inc
xor
lahf
sbb
xchg
inc
and
hlt
je
sbbl
lret
push
mov
xchg
push
pop
aas
pop
push
ss
aam
lods
enter
jno
data16
lds
sbb
push
in
ss
pop
mov
xchg
pop
inc
xor
repnz
cs
lret
or
and
int
xorl
xchg
ret
mov
mov
out
xchg
data16
jae
inc
test
inc
jge
add
and
std
imull
xchg
test
lods
fstpl
jne
cli
xor
jbe
mov
jbe
ret
cmp
les
outsb
rorl
mov
popf
hlt
push
jb
ss
push
push
dec
xlat
mov
xchg
in
mov
imul
mov
xchg
jp
sbb
cmp
cmpsl
adc
imul
push
imul
sub
mov
out
mov
pop
adc
lcall
aam
fidivrs
jmp
jae
daa
push
and
js
jno
or
pop
lods
xor
not
mov
mov
repz
adc
fs
out
mov
xor
es
mov
fstl
leave
pop
xchg
scas
pop
rclb
test
xchg
fiadds
mov
xchg
std
mov
sbb
mov
or
mov
pop
xchg
lcall
cwtl
fisubrs
push
mov
cmpsl
cwtl
ljmp
negl
in
pop
adc
out
fnstcw
in
push
roll
stos
rcll
repnz
adcb
pop
ret
inc
sbb
movsl
inc
and
out
fsubs
ja
cwtl
mov
int3
mov
cli
mov
inc
jge
arpl
jo
enter
and
test
mov
outsb
cmp
push
arpl
js
stc
ja
loop
pop
rcl
push
inc
xchg
mov
mov
sbb
insb
dec
jmp
xchg
loopne
cmp
push
nop
lods
sub
dec
mov
mov
xchg
cmp
stc
ss
push
xchg
jp
mov
dec
pop
add
scas
sub
dec
sti
mov
push
cmp
lcall
movsb
or
jno
fcompl
icebp
and
mov
mov
xchg
dec
add
sbbb
ficoml
sti
nop
jno
shrl
lods
xor
out
filds
arpl
pop
icebp
iret
sub
pop
fbld
jge
xor
jge
jle
cwtl
testl
enter
rcr
and
call
enter
lret
lret
sbb
dec
mov
jns
jmp
jns
out
popa
xchg
out
std
in
into
rorl
cli
cmp
cmpsl
dec
flds
jno
and
add
push
pop
jge,pt
lcall
cmp
fcomi
or
lret
add
test
inc
aam
dec
fstpt
xchg
in
mov
mov
lock
nop
rcl
and
push
mov
jbe
push
aam
push
mov
cmp
push
je
and
into
into
push
jae
les
sub
inc
mov
dec
stos
adcl
and
pop
nop
rcrl
stos
jecxz
ds
cli
lods
pop
xor
xchg
cli
xchg
pop
xchg
inc
loopne
jg
shrb
and
lods
add
leave
imull
mov
test
hlt
lds
les
pop
mov
mov
insb
cmpsb
adc
imul
sti
cwtl
pop
movsb
pop
fadds
jecxz
cmp
mov
nop
xchg
movsl
mov
stos
test
pop
insl
aas
mov
inc
outsb
xor
jl
bound
movsb
push
call
negl
enter
dec
int3
mov
ds
call
hlt
xchg
jecxz
repz
pop
rcll
aad
pop
jne
mov
mov
ffree
pop
xchg
fucom
sti
imul
jnp
adcl
in
loopne
and
push
test
std
into
inc
sbb
imul
xor
adc
les
mov
aas
jb
xor
and
or
int3
popa
cmpsl
pop
xlat
adc
and
or
cmp
repnz
lods
sub
movsb
loopne
mov
stos
dec
or
push
or
cmp
mov
pop
adcb
int
sbb
and
je
cmpsl
enter
adc
mov
sahf
andb
mov
jno
fldenv
leave
mov
push
or
mov
jns
sbb
fisubs
ja
mov
push
ror
and
xchg
sbb
inc
add
mov
loop
mov
sbb
lcall
fdivl
push
cmp
and
push
into
ret
roll
movsl
ficomps
int3
dec
imul
dec
push
sbb
dec
iret
arpl
lods
mov
lods
jecxz
or
xorl
xchg
test
mov
stc
inc
cmc
iret
sbb
or
mov
cmpsl
fwait
pop
cmp
cmp
xchg
mov
mov
imul
and
in
pop
pop
push
daa
std
xchg
cli
lcall
mov
xorps
scas
sbb
sub
xchg
in
shrb
add
mov
decl
pop
nop
mov
xchg
cltd
add
stos
or
xlat
into
pushf
outsb
adcl
in
daa
pop
outsl
jbe
aaa
dec
xlat
adc
out
sbb
mov
lds
dec
pop
lods
jecxz
scas
mov
jecxz
dec
sar
scas
add
mov
enter
mov
jge
aam
push
mov
push
loope
outsl
fildl
inc
cmp
mov
pop
shl
test
stos
fistl
gs
pop
sahf
int3
push
loopne
sbb
xchg
loope
add
or
or
xchg
dec
or
add
cmp
jno
sbb
leave
outsl
shrl
jae
adc
add
in
dec
jne
jle
imul
mov
jnp
ret
sarb
cmpsb
ljmp
addb
cmp
push
pop
in
pop
cli
sbb
popa
js
lret
mov
fimull
outsb
popl
jne
sub
sbb
mov
mov
jge
loopne
push
push
adcl
push
lcall
lcall
addb
dec
adc
inc
ds
add
jno
aas
mov
fdiv
stos
xchg
add
push
sbb
sbb
movsb
add
and
dec
test
add
xlat
and
fwait
ja
jns
pop
jns
pop
mov
xor
in
xchg
out
jbe
ja
flds
or
adc
jl
mov
repz
sub
les
xchg
sbb
test
pop
xchg
fdivs
mov
pop
cs
or
int3
pushf
in
outsb
xchg
jb
mov
cmpb
cmp
hlt
lret
fs
dec
ss
in
popa
adc
and
xchg
and
inc
adc
adc
add
dec
add
fsubp
aam
and
push
stc
mov
jmp
out
and
fstp
pop
cld
xor
xchg
jp,pn
inc
jbe
das
sbb
xor
f2xm1
jmp
mov
ds
mov
sbb
cmp
js
sub
xor
jns
inc
out
loope
or
mov
mov
dec
lret
lock
cmp
vfmsub213sd
into
dec
sbb
out
and
or
mov
call
push
cmp
out
and
sub
xchg
xor
inc
dec
xor
repnz
inc
jmp
jge
popa
cmp
lods
loop
idiv
popf
bound
cld
loop
sub
mov
sahf
sbb
dec
das
outsl
mov
ja
xchg
pop
jmp
fldt
dec
nop
mov
scas
xchg
fisubl
mov
xor
pop
fsubl
xchg
pop
and
and
or
mov
and
lret
aaa
lods
in
mov
hlt
das
in
aad
pop
stos
ret
fldenv
orl
adc
fisttpl
add
mov
out
imul
lret
les
popf
lds
outsl
sub
cmc
jmp
inc
test
adc
or
cmp
test
mov
out
pop
jg
dec
repz
lods
vmovntdq
movsb
cmp
outsb
xchg
out
sbb
sbb
into
adc
out
fisttpl
push
xchg
les
das
nop
gs
stc
mov
shll
ficoms
push
sti
cmp
adc
lds
stc
pop
ret
xchg
lods
je
call
std
gs
inc
fldt
rorl
inc
dec
js
adc
mov
jne
sub
lret
xor
mov
sbb
dec
out
pop
arpl
lds
inc
bound
mov
push
int
bound
aas
arpl
movsb
inc
sbb
shlb
dec
mov
jp
and
out
sbb
mov
sub
push
pop
flds
mov
lret
jecxz
pop
pop
add
mov
cmpsb
int3
fistps
fldt
mov
pop
or
int
push
jo
add
cltd
and
scas
aas
or
in
iret
push
movsl
jns
adc
fimuls
shr
fdivs
push
fnstenv
jecxz
call
mov
jne
jbe
inc
cmp
push
xor
mov
add
inc
mov
jnp
and
or
addr16
sbb
xor
mov
mov
adc
std
lret
cli
push
aas
aad
or
dec
cmp
xchg
cmp
dec
sarb
and
enter
lock
and
cmp
xor
movsb
xor
popa
orl
insb
fadds
sbb
xchg
jg
int
js
jo
inc
xchg
mov
and
sub
adc
imul
aaa
mov
dec
sbb
adc
fcompl
popa
mov
push
loop
xchg
js
cmpsl
dec
and
jns
sarb
es
into
iret
sarl
sbb
push
lods
stos
cmpsb
cltd
xchg
out
or
push
inc
aas
dec
xor
and
pop
push
inc
test
roll
sbb
and
sbb
dec
icebp
xchg
and
add
xchg
negl
xchg
lret
cmp
pop
outsb
pop
mov
jbe
mov
cmc
jmp
jg
cwtl
daa
dec
push
sbb
ficompl
movsl
fldln2
add
sbb
cli
leave
clc
mov
fistl
std
inc
jne
or
cli
and
je
pusha
pminub
xor
test
or
mov
pop
xorl
cs
cmp
mov
mov
jmp
jb
cs
mov
filds
or
insl
jmp
pop
adc
cmp
lock
push
das
andl
and
jl
inc
and
cwtl
out
xchg
xchg
mov
mov
jp
shlb
jo
mov
mov
or
ljmp
int3
sub
cmc
fwait
pop
dec
add
repnz
nop
outsb
js
outsb
pop
cmp
jae
sbb
pop
insb
lret
xchg
and
and
xchg
mov
pop
clc
lcall
int3
ret
lods
xchg
xchg
pop
dec
dec
mov
jp
gs
repz
jg
insb
fadds
iret
jnp
xchg
adc
cmpsl
jp
int
xchg
fprem
cmpl
jle
adc
and
pop
fsubrs
jmp
ja
mov
data16
std
inc
pop
pop
xchg
cmp
xor
outsb
sub
in
push
repz
pop
dec
popf
fidivrl
xchg
and
mov
cmc
mov
mov
or
push
dec
push
popf
pop
xchg
mov
cmp
aad
mov
test
dec
xchg
and
mov
fbstp
sbb
add
push
mov
repnz
sbb
nop
outsl
adc
lahf
push
gs
add
xchg
outsl
mov
imul
lods
pop
movsb
add
adc
sbb
xlat
pop
leave
jo
mov
adc
testl
mov
lret
and
cwtl
imul
aaa
int
jg
cmc
ficompl
and
decb
cmp
test
pop
xor
push
loopne
mov
lds
lahf
cwtl
insl
roll
negb
sar
ret
and
mov
lahf
adc
lea
push
cmpsb
cmp
and
aaa
and
call
xchg
sti
pop
jp
scas
adc
add
fisubs
fcomi
pop
in
movsb
inc
cwtl
out
lds
das
sarb
mov
xchg
mov
je
xchg
jo
shrl
jmp
inc
xlat
movsl
ret
cmp
inc
out
dec
xchg
and
mov
andb
jle
cmpsl
adc
fmull
push
movsl
or
adc
fnstsw
xchg
and
inc
lds
sbbb
lret
lea
mov
repnz
xor
xchg
fsubl
adcl
sti
mov
insl
ja
mov
les
scas
fincstp
inc
rcrl
push
hlt
repz
test
gs
pop
mov
sbb
pop
hlt
add
sub
mov
fcmovnb
leave
orb
lret
lods
xor
pop
sbb
cmpsb
mov
jno
sbb
pop
mov
or
mov
mov
mov
pop
cmp
xchg
jnp
fistpll
add
out
sbb
stos
mov
mov
sub
rorb
xor
xor
xchg
loope
mov
push
lret
nop
hlt
sub
inc
ljmp
xchg
out
lods
mov
dec
dec
nop
jne
cmp
jbe
daa
les
sub
rol
sub
sbb
cmpsl
adc
sbbl
stos
mov
adc
mov
cmpsb
add
inc
imul
nop
fld
mov
jo
aad
mov
shr
mov
mov
mov
dec
aaa
in
pop
mov
dec
popa
push
jp
fdivrp
mov
mov
hlt
pop
adc
stc
xor
shr
mov
add
dec
dec
sbb
pop
iret
loopne
mov
xor
mov
fwait
lret
xor
xchg
ja
inc
loopne
hlt
cmpsl
lret
sub
xchg
jp
jne
inc
out
jns
jae
fisttps
mov
fsub
cmp
inc
fisttpl
jb
cltd
adc
gs
sarl
xor
rorb
sahf
sahf
pop
adc
xchg
push
popa
adc
xchg
test
arpl
arpl
repz
lea
pop
cmp
fimuls
lock
cmpsb
test
sub
xchg
lea
push
enter
dec
push
xchg
sub
rcll
adc
push
scas
push
frstor
cmp
frstor
push
push
inc
out
imulb
lcall
push
movsb
push
cmp
pop
push
dec
lods
aas
push
adc
push
sub
outsb
xchg
xchg
imul
iret
sbb
shlb
mov
lods
pop
cmc
lock
cmp
lcall
into
sar
insl
aad
xchg
fsubr
stos
xor
ja
outsl
cmp
cmp
mov
aad
adc
jmp
xchg
decl
loope
cmp
test
ret
mov
rcll
mov
mov
jno
cli
call
arpl
and
mov
inc
test
popl
lods
push
out
mov
lds
adc
iret
out
jns
addr16
out
cmc
mov
sbb
pop
fwait
sahf
add
inc
movsb
or
add
js
lods
jecxz
mov
xor
das
frstor
icebp
mov
sub
inc
push
es
arpl
inc
sbb
pop
hlt
js
shll
mov
fistpl
mov
jecxz
addr16
sbb
sbb
cmpsl
dec
in
fadd
jo
loop
int3
dec
loop
sub
test
cmpsl
sti
dec
mov
sti
jl
popa
cmp
add
icebp
sbb
pushw
adc
inc
lods
jg
push
fsubl
hlt
dec
dec
sbb
repnz
xchg
mov
xchg
stos
mov
add
loop
xchg
adc
stos
stos
ljmp
int
jmp
pop
pop
xchg
icebp
dec
push
mov
add
icebp
test
and
and
jne
or
mov
xorb
in
adc
xor
lret
fimull
aam
cmpsb
cli
add
adc
and
out
xchg
sti
inc
mov
test
test
aas
movsl
push
mov
pushf
aad
je
icebp
adc
jno
test
cli
lock
out
scas
sbb
fimull
int
cmpl
orl
jmp
pop
fwait
bnd
test
fst
sub
stc
mov
bound
sub
cltd
mov
ss
pop
pushf
js
movsl
pop
roll
push
clc
loope
fbld
in
or
fidivrl
inc
or
mov
mov
jl
ret
loop
pop
insl
mov
mov
jg
inc
and
mov
out
xchg
xchg
sahf
fldt
xor
and
mov
xor
adc
sub
in
scas
loope
jp
leave
pushf
jb
jnp
push
lods
add
sbb
movsb
adc
and
pop
ja
fbld
popf
sbb
test
sub
hlt
sbb
pop
mov
push
jl
hlt
dec
push
xchg
out
and
sbb
jns
mov
xlat
insl
adc
loop
mov
xchg
cmp
adc
push
lods
inc
lret
mov
sub
popf
sbb
aaa
sti
and
fists
outsl
les
push
mov
sub
insb
sbb
mov
jmp
sub
sub
sub
xor
popa
push
sub
hlt
mov
jbe
mov
dec
fldenv
jle
mov
test
sarl
inc
pop
xor
loop,pt
das
sbb
and
cmp
mov
mov
mov
cmp
pushf
fistpll
ja
push
sahf
add
cmp
or
jbe
add
jns
adc
fdivs
lcall
sbb
loope
shlb
and
out
jns
xor
jp
adc
pop
jno
idivl
out
pop
sbb
jo
out
call
pop
decb
jecxz
xor
sub
ss
fstpt
adc
sbb
in
xchg
aas
xchg
mov
inc
pop
lahf
push
out
lahf
mov
and
rcll
pusha
and
je
jns
and
or
ja
ficoms
pushf
into
push
inc
mov
dec
jp
xchg
jb
lods
ja
dec
stc
clc
xchg
xor
lret
mov
mov
ds
lds
stos
test
mov
les
xor
mov
cwtl
and
add
movsb
fcom
repz
dec
add
mov
xor
repnz
cmc
and
pop
inc
push
or
imull
int3
faddp
xchg
adc
daa
mov
pop
ret
cmp
outsl
jae
daa
cmp
mov
cmp
mov
push
les
repz
inc
inc
mov
or
in
in
mov
push
sub
sub
lcall
js
or
xorb
rclb
push
stos
adc
push
jno
mov
insl
jo
jbe
test
loop
inc
lret
jne
sbbl
idiv
out
test
movsl
nop
jb
or
aam
dec
xchg
cli
cwtl
bound
test
imul
xchg
xchg
fimuls
pop
or
dec
sub
cld
push
mov
test
scas
adc
inc
cwtl
mov
lret
dec
mov
gs
loopne
sub
daa
nop
jb
push
fcmovnu
cmp
cwtl
pop
cmp
shrb
rcl
sub
cmp
inc
add
and
in
arpl
xchg
pusha
sub
push
lret
mov
mov
into
push
cmp
pop
xor
loope
jnp
int
jp
pop
sbb
lcall
and
idivb
push
push
cmp
in
fdivrs
push
push
jle
add
push
push
jb
dec
dec
push
into
in
mov
adc
int3
jnp
and
cmp
mov
rorl
cmp
mul
jmp
push
andb
mov
xchg
jmp
in
or
test
into
mov
pop
dec
xlat
sbb
cmp
out
mov
jg
gs
and
dec
jge
dec
adc
fdivr
dec
xchg
cmp
mov
test
sbb
insb
fcomi
call
dec
adc
dec
sbb
add
lret
sub
sbb
decb
popf
xchg
cmp
sub
stos
pop
inc
push
pop
mov
mov
aaa
scas
repz
xor
push
aam
cld
push
adc
jnp
jbe
cltd
lock
into
jbe
jnp
or
lcall
imul
xorb
movsb
mov
lahf
outsl
or
xor
sbb
adcl
and
lock
push
fwait
mov
jae
dec
sub
or
mov
loop
sub
jnp
pop
push
pushf
dec
fisubs
test
push
jmp
pop
movsl
shll
adc
lret
or
fcoms
mov
cmp
divl
lcall
cmp
das
cwtl
jno
jno
lea
repnz
dec
inc
sub
or
jl
and
sbb
jo
dec
jle
loope
sbb
shrl
insb
push
cmp
stc
shlb
xor
in
pop
mov
stos
popa
outsl
mov
sbb
xor
adc
pop
push
push
dec
shll
and
mov
jg
icebp
push
out
aam
xor
data16
xchg
pop
ret
cli
iret
gs
in
inc
push
lods
fldt
sarb
scas
jl
xor
mov
push
ret
leave
sub
dec
push
aas
int3
dec
and
sub
addr16
xor
lret
cmp
sbb
jns
cli
dec
ret
or
adc
pop
xor
ret
cmc
ss
dec
sbb
xor
push
sarl
push
pop
pop
adc
push
mov
cmp
scas
lret
repnz
dec
icebp
rol
sbb
mov
ret
fwait
movsb
jne
imul
or
push
dec
push
pop
lock
mov
cmp
or
lret
repnz
sub
insl
cmp
xchg
out
jne
push
dec
outsl
add
andl
xchg
addb
sub
in
sbb
repz
sub
fs
loop
add
mov
jns
dec
sbb
mov
push
stos
leave
push
movsl
sbb
repnz
sbbl
aaa
mov
xor
leave
loopne
jg
icebp
push
jbe
sub
sub
orl
cmp
cli
fcomps
adc
jl
shll
daa
cmovle
in
pop
fsubrl
rolb
mov
fdivrs
imul
xor
sub
jge
xchg
mov
insl
into
xchg
add
out
js
into
push
loop
int
sub
aad
adc
data16
xchg
mov
xor
mov
gs
mov
aad
je
cmp
in
push
xchg
loope
repnz
mov
mov
sti
lret
stc
mov
jns
jo
xchg
adc
dec
add
dec
push
mov
dec
int
std
xor
xchg
and
ss
push
add
push
jbe
idivl
stos
xorl
or
xchg
scas
or
jmp
xor
push
push
mov
sahf
sub
pop
ret
rorb
stos
xor
je
mov
add
enter
dec
mov
sbb
mov
cmp
pop
mov
mov
cmpsb
cmpsb
cmp
sub
std
in
inc
add
stos
repnz
clc
jge
mov
out
jne
sbb
xchg
js
jb
jae
push
add
xchg
mov
and
xchg
push
mov
jmp
addl
mov
cmp
loopne
insl
mov
lcall
insb
jge
imul
fstpl
jbe
sahf
fsubp
mov
ljmp
cltd
cmp
and
shl
addl
mov
jb
pop
lcall
inc
test
adc
repz
jecxz
test
sub
sub
out
lea
inc
jne
and
cs
sub
sub
loopne
int3
mov
push
xor
inc
jb
inc
rcl
add
mov
daa
push
rorl
les
int
xor
push
add
shlb
mov
push
and
bound
push
jge
imul
push
sub
outsb
mov
push
sbb
inc
shll
notb
popa
bound
cmp
in
fadd
stc
dec
js
xor
and
inc
dec
ljmp
dec
cmp
jp
test
mov
dec
xor
xor
incl
mov
xchg
add
or
iret
insb
xor
mov
movsl
mov
loopne
jp
shlb
adc
mov
arpl
div
jb
or
jmp
sbb
jns
mov
pop
daa
inc
add
cwtl
sbb
mov
inc
int
and
sub
push
int3
imul
js
mov
sbbl
ret
into
xchg
repnz
or
sub
popf
sahf
push
sbb
mov
ss
orb
push
rolb
or
lretw
add
add
adc
push
jmp
mov
aad
add
sub
into
jg
pop
addr16
outsb
push
in
out
xchg
add
ret
cwtl
leave
cmpsl
lret
ja
mov
repz
pusha
pop
cmp
mov
stos
mov
xchg
add
dec
push
sub
lret
cmc
aam
mov
ja
into
sub
push
dec
push
aas
cmp
mov
xchg
and
or
dec
lret
adc
cmp
xor
and
sbb
xchg
aaa
pop
sub
out
mov
mov
insl
mov
sub
aas
pop
ret
ljmp
mov
cmpsb
add
xchg
sti
hlt
adc
int3
fcmovu
aas
push
cmpsb
inc
xlat
xlat
adcl
push
adcl
inc
dec
and
adc
adc
and
in
or
ret
aad
jmp
sub
push
mov
pop
mov
dec
call
hlt
adc
and
jnp
fsubrl
mov
xor
dec
sbb
push
insl
sub
addr16
push
ss
movsb
push
movsww
mov
scas
dec
add
aaa
out
sub
adcb
lds
repnz
mov
je
lea
dec
and
daa
sbb
aam
sbb
mov
imul
xchg
cmpsl
aad
popa
sub
aaa
jg
out
daa
into
movsb
jg,pt
stc
push
adc
push
sub
lret
and
loope
xor
or
mov
js
xor
es
roll
mov
xor
ss
rorl
jae
mov
dec
jmp
into
push
sarb
pop
push
jge
test
adc
fildll
mov
or
inc
es
popf
xchg
sbb
iret
test
mov
rcll
test
xlat
push
mov
ret
mov
enter
jo
xor
sub
idivl
in
sbb
das
and
vphaddbq
repnz
push
addr16
adc
insb
sub
and
pop
xchg
imul
jmp
cmp
ret
test
cli
push
icebp
sub
jmp
push
dec
leave
fisubl
insl
push
leave
push
and
clc
jnp
inc
and
jle
inc
ja
pop
mov
push
xlat
in
xor
bound
js
dec
hlt
cmp
cmp
and
enter
jne
lea
jbe
out
mov
xchg
jb
push
rolb
dec
jnp
and
cld
xchg
cmp
dec
test
orb
ljmp
inc
cwtl
sub
push
or
hlt
cmp
mov
mov
xor
inc
cmpsl
aam
mov
and
outsl
push
jno
push
test
roll
mov
add
js
xchg
xor
and
lcall
mov
ljmp
sti
sub
adc
xor
or
rcl
dec
negb
enter
jno
jl
xchg
in
mov
imul
call
gs
in
sbb
inc
shll
jo
mov
fwait
pop
push
pop
cmp
aaa
dec
adc
adc
mov
sti
cs
xorl
mov
idivb
lds
mov
jns
xchg
addr16
xor
adc
pop
insl
lods
in
and
popa
loope
push
xchg
inc
mov
push
loopne
push
xchg
fstps
loop
sahf
sbb
ds
mov
add
sbb
mov
in
je
xchg
pusha
xchg
push
imul
addr16
push
pushf
aad
jl
lret
cmp
mov
or
cwtl
push
jecxz
mov
outsb
and
and
sub
jnp
cmp
xlat
shlb
data16
pop
sbb
repnz
daa
ljmp
add
sti
gs
push
out
inc
jp
jns
sub
or
jmp
clc
mov
lods
divl
pusha
shll
push
ds
lcall
cmpl
in
out
lods
mov
cmp
push
call
cmp
ret
in
mov
push
push
or
je
add
sub
xor
mov
xchg
sbb
inc
loop
sub
mov
push
cli
inc
push
and
sub
and
pop
mov
loopne
xor
aad
fs
add
mov
cmp
adc
pushf
fwait
cmpsb
std
int3
push
jl
add
inc
aas
shl
mov
js
out
cmp
aam
pushf
jne
test
bound
in
daa
js
cli
in
cmp
mov
adc
inc
dec
sub
mov
and
xchg
loop
push
cmc
jecxz
dec
cli
movsb
adc
aaa
test
clc
sahf
daa
sub
or
cmpsl
sbb
push
jp
jecxz
sbb
push
js
int3
ljmp
paddd
push
popf
inc
mov
aas
sbb
jmp
cmpsl
sbb
inc
outsl
inc
fcmovu
ret
xchg
and
test
sbb
inc
add
sub
iret
sbb
adc
sub
mov
into
outsb
pop
dec
mov
loopne
test
jl
jp
inc
xchg
cwtl
mov
mov
xchg
xchg
out
js
dec
mov
mov
mov
xorb
cmp
xchg
pop
xor
ret
out
mov
sub
sti
mov
fsubrs
mov
adc
pop
loope
jmp
aam
imul
adc
jb
std
and
stos
aaa
xchg
das
adc
sbb
loop
xor
mov
aam
pop
cmpb
daa
loope
xchg
shrb
push
mov
aaa
pop
subl
imul
mov
mov
int3
int
pop
push
insb
mov
or
fs
pusha
lret
movsl
pop
pop
adc
sub
xchg
jle
lret
out
add
push
xchg
bound
xor
sbb
jno
push
mov
pusha
pop
into
or
mov
mov
sahf
mov
test
repnz
bound
jno
mov
ja
sub
xchg
push
xlat
and
adc
mov
mov
mov
xchg
cmp
push
lods
dec
outsl
out
xlat
int
iret
mov
pop
popa
or
inc
sbb
pop
cmp
xchg
xchg
sti
jns
jns
jo
sbb
dec
sub
jl
sub
pop
add
xchg
and
scas
pushaw
dec
lock
fmuls
nop
push
jp
nopl
jnp
out
test
jmp
pop
into
adc
pop
dec
ret
mov
adc
mov
mov
xor
cltd
es
pop
mov
add
push
ret
test
fidivl
push
daa
pop
or
xchg
mov
dec
mov
int3
jge
cli
mov
add
rcrl
jo
inc
add
sar
in
mov
push
cmp
popa
dec
push
jl
or
sub
or
jae
sub
pusha
cmp
cli
shlb
bound
ret
sbb
es
mov
and
cmp
dec
loope
clc
nop
stos
xchg
pop
cmp
mov
dec
ret
shrb
mov
sarb
stos
and
push
decb
or
jecxz,pt
idiv
push
scas
out
mov
jl
add
outsl
cltd
pop
int
cmpsl
jg
out
stc
or
in
push
inc
sahf
test
aaa
mov
mov
pop
ror
lret
data16
in
pushf
xor
and
inc
mov
out
fdivl
xchg
ds
jne
dec
loope
cmp
lea
sahf
cltd
or
enter
sub
mov
data16
xchg
push
mov
ja
fsubl
in
pop
mov
test
call
lea
ret
adc
out
xor
push
pop
loopne
in
mov
adc
xchg
fcmovb
mov
jbe
das
dec
or
insb
fwait
fwait
mov
sbb
repnz
mov
xor
push
test
xchg
insb
vpacksswb
mov
pop
popf
sbb
cmp
rclb
imul
sub
mov
xchg
cwtl
xchg
cmc
daa
jge
pop
pop
mov
or
pop
add
aaa
xchg
push
sub
or
loopne
loope
nop
inc
stc
movsb
ljmp
int
cs
add
jb
mov
sub
fildl
add
repnz
ja
xorl
or
out
rcl
adc
xchg
mov
push
sbbl
rep
xor
sbb
ror
dec
pop
mov
hlt
mov
pusha
jmp
push
icebp
push
stc
mov
adc
sbb
mov
or
xor
mov
ljmp
and
mov
sub
repz
je
clc
lds
imul
adc
test
xchg
and
stos
xlat
sbb
loop
jmp
andl
sub
out
test
jnp
mov
fsubrl
push
xchg
mov
pavgb
test
in
add
sbb
lret
mov
daa
or
mov
mov
shl
jg
bound
pop
push
mov
out
jle
jmp
cmp
adc
and
adc
jnp
push
sub
mov
cmp
mov
insl
out
cmpsb
mov
xor
rorl
dec
nop
push
lcall
add
pop
cmp
sbb
aam
xor
out
fwait
inc
fidivrs
addb
mov
or
jnp
inc
clc
push
xor
pop
in
inc
nop
ds
out
dec
inc
sbb
xor
pop
adc
into
imulb
xor
dec
movsb
std
icebp
aas
push
je
or
rcrl
and
jge
jmp
sub
sti
test
nop
dec
lea
hlt
sbb
push
sbb
cmp
mov
xor
fisubrs
xor
jo
sub
sbb
in
jns
and
and
mulb
push
bound
dec
lret
shrb
xchg
jp
mov
aaa
pop
sub
ja
inc
mov
cltd
fisubrl
or
dec
inc
inc
jb
push
dec
je
enter
push
mov
aas
testb
add
adc
mov
xor
cmp
fsubp
push
and
imul
divb
imulb
sbb
outsl
popa
scas
xchg
das
or
ror
sbbl
pop
out
jecxz
fwait
bound
sbb
inc
ret
push
or
sub
and
ds
sub
in
lods
adc
and
push
xor
pop
out
adc
iret
xorl
scas
lcall
jbe
jmp
scas
bound
or
jecxz
movsl
adc
or
mov
add
and
push
xchg
xor
cmp
js
cmp
lret
push
sub
inc
push
inc
sti
add
and
aam
je
or
push
mov
sub
inc
out
and
pop
lods
inc
out
jecxz
loope
or
xor
xlat
jbe
das
daa
mov
push
pusha
scas
test
mov
inc
outsb
xchg
push
pop
lock
cmpsb
in
xchg
insl
inc
icebp
adc
push
aad
cmp
mov
shl
adcb
daa
bound
in
daa
addb
mov
xor
jecxz
test
pop
and
test
mov
icebp
mov
sarb
les
jmp
pop
insl
inc
mov
fmull
add
xor
sbb
or
mov
fsubs
out
out
push
dec
xchg
pop
lods
sbb
ja
jb
push
lahf
pop
xor
imul
scas
addr16
loopne
out
incl
xor
fldz
dec
and
and
pop
subb
iret
inc
outsl
lock
lret
shrl
jo
arpl
int
out
arpl
xor
xor
jbe
lea
mov
and
xchg
es
insl
sub
or
sti
cmpsl
inc
mov
lahf
mov
fsubr
adc
lock
push
dec
sub
sub
jmp
xor
rcl
cmp
in
cmp
adc
sbb
mov
ret
adc
aad
or
sub
ja
or
mov
pop
push
insl
sti
das
jp
push
pop
aaa
add
out
sbb
popf
push
and
shl
divl
imul
fstpl
cli
mov
addl
push
mov
inc
std
jbe
lahf
jns
lea
loope
jge
negl
cltd
and
and
mov
js
mov
add
add
rcr
mov
cmpsb
pop
xor
roll
adc
xchg
out
sbb
test
xchg
xchg
and
xchg
or
aad
and
pop
shlb
lcall
xlat
sub
test
sub
sub
push
push
fwait
inc
adc
xchg
adc
rcrl
bound
arpl
mov
imul
or
lea
xchg
mov
mov
xchg
xlat
fistps
or
inc
hlt
test
scas
push
stos
jecxz
jl
mov
mov
scas
push
cmp
pop
cmpsb
mov
inc
stos
mov
push
mov
xchg
cs
mov
test
stc
aaa
loope
dec
stc
hlt
lds
frstor
mov
dec
sub
cmp
jns
adc
or
pop
pop
or
mov
adc
push
add
sbb
aad
pusha
rcr
sub
xchg
cmp
es
pusha
xor
stos
push
pop
movsb
push
movsb
and
sub
fmulp
imul
push
mov
shll
mov
mov
mov
mov
std
decb
test
icebp
add
add
push
push
test
xchg
int
xchg
fnstcw
add
insl
xor
xlat
jmp
std
and
pop
call
sbb
jle
mov
dec
in
mov
lcall
sahf
ja
or
mov
pop
add
cli
insb
push
repnz
inc
loop
ss
popf
rcrb
xor
add
leave
ss
push
fs
xchg
stos
xorl
ret
popa
xchg
add
call
mov
es
imul
lock
aam
fidivrl
repnz
or
mov
lea
shl
shll
jmp
xchg
cwtl
aas
or
clc
stos
lahf
cmp
dec
pop
mov
in
decb
lret
and
pushf
dec
test
jns
lahf
lods
or
jle
sbb
out
shlb
loop
icebp
xchg
movsb
loop
inc
jne
sub
or
and
aaa
push
sahf
jno
lea
mov
sub
push
popf
gs
xchg
xor
or
fnsave
flds
inc
scas
jnp
roll
scas
add
jb
je
xor
jle
loope
shll
pop
jns
mov
mov
int
das
mov
and
out
xchg
sbb
mov
daa
and
cltd
imul
and
jle
lcall
jl
loopne
pusha
test
jo
xchg
sahf
push
das
jg
xor
cmpsb
aas
mov
fsubl
xor
and
xchg
ss
lahf
xor
adc
scas
xchg
scas
sbb
push
push
mov
cmc
add
push
out
fcmovnu
pop
inc
gs
incb
lret
dec
mov
test
adc
or
adc
out
test
sbb
xchg
adc
stos
out
jns
mov
das
bound
ficompl
and
cmp
push
jg
out
es
jns
cwtl
testb
sub
push
lds
xor
adc
movsb
dec
icebp
fisubl
xor
sub
mov
push
xor
aas
int
pop
pop
push
int
add
add
dec
sbb
cmp
inc
xchg
dec
push
add
push
pop
xchg
inc
mov
data16
xchg
test
mov
les
decl
pop
mov
repnz
mov
aaa
sub
call
lcall
push
fs
jmp
xchg
mov
jg,pn
or
push
mov
add
and
dec
lds
int
cmp
je
lods
test
sub
cmpsl
imul
addb
repz
dec
aas
outsl
inc
negl
and
arpl
mov
std
mov
and
out
lea
nop
rcll
out
jmp
ljmp
jle
fldcw
jg
fwait
scas
ds
inc
jnp
cmp
jl
lea
jnp
fldt
mov
leave
xor
gs
aaa
jnp
adc
add
cmp
mov
test
fcmovu
daa
test
sahf
xor
jle
outsl
or
mov
sahf
sarl
sbb
push
sbb
stos
mov
pop
cmc
lea
jecxz
dec
xchg
sbb
xor
repnz
mov
xor
icebp
in
cs
js
ss
dec
pop
push
lahf
das
adc
std
xor
inc
inc
mov
std
push
int3
cli
jecxz
sar
nop
jno
test
out
add
loope
pop
addr16
xor
fstl
cld
ret
jg
enter
sub
xor
cmp
sub
daa
xor
lcall
add
mov
dec
jmp
scas
and
pop
in
call
sbb
shlb
xor
lock
pushf
sbb
push
inc
and
shl
inc
or
xchg
or
dec
push
cld
test
sahf
xor
fsubs
sub
adc
mov
push
lcall
leave
in
jecxz
iret
lcall
pop
mov
mov
jnp
sub
pop
enter
xor
adc
cmp
dec
xchg
movsl
pop
and
or
iret
xor
jl
ret
jns
mov
mov
sbb
sub
rorl
in
mov
dec
pushf
in
mov
stos
push
push
dec
ret
inc
mov
out
or
lcall
mov
lahf
cmp
jp
in
insb
std
dec
pusha
call
lods
inc
push
stos
xlat
aas
ror
mov
out
adc
mov
inc
leave
dec
jb
mov
add
ret
jmp
hlt
jns
mov
sub
adc
adc
sbb
insb
dec
arpl
xor
rorl
adcl
dec
aad
es
jae
div
cmp
and
enter
lret
dec
std
fadds
push
sbb
or
pop
inc
mov
dec
divb
into
push
mov
mov
mov
jno
decl
enter
push
lds
clc
inc
ss
ret
jg
loope
subb
pop
in
out
jbe
aas
test
outsl
movsl
push
lds
adc
leave
cmp
jecxz
add
mov
or
mov
cltd
push
push
mov
imul
mov
jmp
test
jbe
or
xor
insb
aas
nop
and
int
fdivr
stos
and
sti
stc
bound
stos
jb
sub
aam
les
adc
inc
lds
lods
or
and
insb
fnstcw
cmp
cmp
or
sbb
int
ljmp
cmp
test
loopne
jp
aaa
mov
pop
mov
lods
mov
or
adc
pop
mov
inc
sahf
push
pop
push
data16
mov
or
fwait
addr16
or
jno
clc
shll
fnsave
iret
in
sbb
test
in
sub
sti
cmp
adc
jge
xlat
call
cmp
pop
jae
sbb
sti
lea
pop
push
lret
mov
mov
std
out
outsl
sbb
movsb
negb
xlat
inc
sub
les
inc
scas
test
fldcw
insl
cmc
rcr
ret
rcrl
mov
pop
testl
lods
into
loope
mov
clc
popf
ret
mov
ss
xor
xor
xchg
mov
add
jecxz
or
scas
or
inc
mov
jle
add
xor
mov
or
xchg
call
lahf
insb
mov
push
push
fcoms
fs
xchg
sbb
mov
icebp
lock
jmp
mov
test
arpl
pop
stc
pop
loope
test
lock
scas
lods
das
sbbb
dec
test
add
loopne
add
scas
add
xchg
fwait
cmp
popf
pop
cmp
mov
mov
dec
and
sub
mov
mov
dec
adc
int3
lods
test
repnz
lock
scas
stc
nop
cmpsb
adc
std
dec
arpl
pop
dec
cmp
call
push
testb
pop
xchg
in
sub
addl
adc
jns
pop
movsl
cmp
add
xor
mov
test
dec
imul
divb
aas
fcomps
push
stos
cmp
cmpsl
sbb
inc
push
mov
in
pusha
adc
test
mov
sub
call
cmp
stc
mov
leave
sbb
xchg
mov
pop
xchg
jge
jnp
sub
pushf
pop
xchg
jne
or
sahf
push
dec
inc
mov
add
cmc
add
pop
lcall
inc
add
jns
and
sbb
lods
jl
lahf
cmp
lret
cli
mov
mov
orb
mov
dec
dec
pusha
and
jne
pop
rorb
xchg
pop
add
fcmovne
rcr
sahf
sbb
and
std
jo
add
sbb
dec
adc
inc
outsl
repnz
mov
xor
xor
mov
stos
lock
decb
mov
adc
bound
inc
daa
in
lret
xchg
test
push
pop
shll
jae
or
shlb
lock
jae
push
jmp
xor
data16
cli
in
lods
pop
pop
xor
imul
das
in
jp
lret
adc
push
insb
mov
sub
push
in
pop
cmpsb
mov
shll
mov
xchg
jp
int3
adc
adc
ja
mov
cmpl
lea
cmpsb
dec
mov
mov
loop
repz
iret
insb
lock
mov
arpl
push
xchg
jge
xor
out
popa
iret
adc
test
lret
xchg
mov
cmpsb
iret
ror
jp
insl
add
ja
cmp
or
insl
mov
lock
or
push
cmp
inc
mov
arpl
jo
sub
push
sbb
xor
mov
test
inc
adc
int
xchg
and
jnp
fadds
xchg
stc
fldt
loop
dec
daa
sbb
mov
mov
lock
mov
std
mov
push
inc
mov
movsl
das
fildl
jne
mov
fs
lret
push
dec
int
push
lret
xor
cli
cmpsl
call
sub
fprem1
dec
lahf
jno
loope
jnp
push
rcr
rcrb
outsl
rcr
pop
cmp
ljmp
ret
fwait
out
jle
rcl
int
daa
mov
mov
and
sbbb
pop
or
sti
scas
fmull
xor
mov
mov
fildll
test
push
jae
dec
inc
je
xor
ss
fmul
outsb
mov
cmp
and
sub
addl
dec
sub
jns
sbb
mov
test
roll
sbb
clc
inc
mov
loopne
subb
sbb
imul
cld
and
shll
cli
sub
into
movl
mov
adc
shll
jecxz
pop
xchg
mov
adc
inc
pop
cmp
inc
jo
nop
push
pop
sbb
scas
xchg
add
les
cmpsl
in
mov
shlb
push
sub
fdivrl
movsl
jle
lcall
mov
insb
fadds
pop
int
rorl
jmp
movsb
mov
hlt
sbb
push
sub
cmpsb
add
push
xchg
jecxz
scas
push
lcall
xchg
in
shrl
enter
lahf
cmp
push
inc
xchg
dec
mov
jmp
and
inc
jmp
mov
inc
jmp
lret
inc
or
hlt
or
xchg
ficoml
shl
scas
xchg
das
mov
mov
imulb
push
push
jno
jbe
lds
scas
mov
in
nop
scas
dec
loop
jg
xor
cli
dec
addl
ds
add
sbb
lods
add
je
nopl
decl
mov
dec
scas
lret
and
xor
xor
dec
sbb
mov
push
ficomps
jmp
test
es
in
mov
push
fs
scas
mov
je
add
or
loopne
mov
mov
xchg
scas
stc
jb
jmp
cltd
fwait
psllq
lcall
xchg
mov
pop
xchg
jp
push
sbb
sti
loop
shlb
das
sbb
mov
xor
dec
jne
out
xchg
or
mov
push
aad
loop
xor
popf
das
sub
push
dec
es
inc
lret
mulb
mov
js
pop
or
rcrb
sbb
ret
xor
pop
or
aad
rolb
push
and
cmp
sub
xchg
fwait
iret
fs
mov
mov
adc
mov
inc
push
xchg
fadds
jae,pt
std
and
sub
xor
mov
or
mov
ja
fstl
inc
cwtl
add
outsl
test
sbb
or
aaa
push
mov
subl
in
mov
and
cmp
jge
pop
cld
and
imul
sub
jmp
or
push
jge
imulb
pop
sub
fldl
es
mov
jnp
sub
xchg
push
shlb
adc
inc
xchg
mov
inc
xlat
cmc
add
pop
ret
inc
sub
scas
xchg
clc
stc
push
pusha
xchg
nop
jecxz
inc
xor
push
push
and
repnz
push
clc
mov
mov
mov
lods
fwait
icebp
inc
cmp
push
int
mov
in
mov
int3
sub
mov
jmp
gs
je
sbb
xchg
xchg
mov
hlt
adc
addr16
pop
cmp
sbb
scas
mov
lret
dec
lock
repz
movsl
adc
sub
xor
lea
bound
mov
shll
loope
dec
sbb
mov
jecxz
and
fmull
dec
lret
nop
loop
lret
adc
iret
push
aam
lret
fistpl
stos
shr
insb
fs
mov
jo
into
xchg
das
cmp
js
cmpsl
xlat
sahf
paddd
add
data16
or
sbb
fistpl
inc
andl
push
inc
sbbb
inc
inc
mov
es
cmpsl
imul
aas
sub
mov
je
fsts
mov
sub
lods
mov
adc
clc
popf
jl
mov
icebp
lea
lret
mov
add
sbb
xchg
sbb
mov
xorl
pop
xor
or
jge
and
lahf
mov
mov
out
negb
ljmp
stos
adc
lds
sub
nop
push
imul
cltd
push
push
fwait
in
in
in
xorl
mov
roll
arpl
shll
nop
xor
cmpsl
or
dec
int
incb
rcrb
mov
or
std
dec
les
jns
or
clc
or
int
xor
lock
notl
xchg
icebp
call
dec
jnp
hlt
dec
outsb
pop
adc
sub
fidivrs
sub
add
jge
push
pop
push
testl
xchg
in
mov
pop
stos
lret
push
mov
movsl
pop
outsl
xor
mov
clc
jb
or
cmp
mov
xor
mov
movsl
repnz
in
push
add
jp
mov
test
cmc
xor
test
jno
loopne
test
rcr
orl
cmp
and
dec
shlb
ret
repz
stc
mov
aam
jl
inc
adc
sub
cltd
hlt
pop
sub
jne
adc
sub
mov
add
in
xor
daa
push
fldln2
cmp
mov
push
sbb
adc
fisttpll
data16
dec
mov
or
or
gs
sub
dec
icebp
cs
xor
stos
aam
gs
dec
adc
add
jo
inc
fwait
xor
push
push
aas
nop
jae
lcall
add
and
in
inc
mov
mov
aam
dec
adcb
add
or
cli
bound
xor
rorl
lea
push
sub
cli
aad
inc
xor
fbld
mov
cwtl
aas
icebp
repnz
adc
push
push
push
pushf
sbb
and
int
xlat
push
icebp
mov
or
pusha
mov
lcall
sbb
inc
inc
xchg
mov
lcall
xchg
lock
mov
aam
xor
mov
and
mov
inc
mov
outsl
out
jecxz
sbb
pop
aam
xor
sbb
in
fcmovbe
xchg
sub
jb
mov
outsl
xor
les
pop
cmp
pop
mov
xor
jmp
loope
jnp
mov
inc
mov
nop
push
movsb
pop
jns
and
bound
mov
fucomp
or
mov
xchg
xor
rclb
outsl
inc
mov
lret
and
aaa
pop
adc
sub
orb
test
aad
sbb
jecxz
mov
movsb
xor
adc
out
out
hlt
cmpsb
out
cmp
roll
vmovaps
mov
mov
dec
adc
stc
xor
inc
sahf
rclb
rorl
sbb
testb
lcall
dec
inc
addr16
adc
hlt
adc
jmp
cmp
mov
and
icebp
test
pop
call
scas
lcall
jg
adc
mov
jmp
xchg
bound
clc
adc
and
adc
rcll
pop
dec
testb
or
into
add
pop
pushf
push
fwait
sbb
cmp
push
xorl
andb
jl
js
outsb
jmp
fdivl
xlat
test
dec
call
dec
lock
xchg
xor
dec
out
call
lret
mov
cltd
icebp
aas
syscall
repnz
fistpll
sarb
sbb
rolb
test
icebp
lret
pop
cmp
stos
pop
sbb
and
rorl
push
lahf
cmc
insl
es
outsl
dec
cmp
call
insl
test
fwait
mov
ljmp
cmpsb
test
sub
fwait
and
pop
in
adc
adc
clc
sub
imul
push
das
lods
xchg
aam
pop
dec
popa
fbstp
iret
aad
jnp
cmpsl
leave
outsb
std
sub
cmp
leave
mov
cmpb
or
push
and
xchg
fdivrl
lock
cmpsl
cltd
lahf
cmp
dec
adcl
and
xchg
enter
jecxz
sbb
gs
stc
pop
cmpsb
imulb
adcl
pop
adc
add
or
cli
outsb
orb
mov
inc
jp
cmp
cwtl
scas
mov
stc
add
lret
mov
mov
into
testb
push
ret
mov
add
xor
cs
stos
sub
aad
mov
pop
sahf
aaa
jmp
std
out
dec
sbb
jae
jno
std
fstpl
mov
ss
sbb
inc
clc
pushf
sar
add
push
mov
insl
mov
inc
push
and
sti
fisttpll
mov
jno
sub
mov
pop
add
out
lcall
pushf
gs
aas
loop
popf
stos
pop
mov
rcrl
sbb
push
pop
idivb
ja
mov
jae
out
int
push
mov
adc
loop
sub
stc
dec
push
cmp
mov
cmp
lret
aas
mov
je
xorl
ja
mov
push
shll
dec
xchg
mov
test
popf
push
xchg
jbe
pop
jae
jge
mov
pop
mov
mov
pop
pop
adc
mov
mov
pop
popa
stos
addb
xor
ljmp
lock
repnz
inc
mov
pop
jl
ficompl
adc
jno
repnz
add
out
gs
mov
daa
mov
pop
mov
repz
xor
pop
cmpb
mov
test
stos
divl
xor
dec
movsl
popf
fildll
rcll
push
addr16
jnp
jns
int
mov
fbstp
mov
lret
push
cmp
daa
dec
sub
lret
cmp
cld
outsb
jne
cmp
loop
cltd
mov
jmp
cmp
and
sub
push
icebp
xor
mov
push
cltd
dec
ja
mov
out
dec
cmpsl
cmp
mov
out
iret
xchg
loop
sub
les
jge
leave
sub
cmpsb
test
out
lret
xor
fsub
dec
sbb
inc
dec
sub
and
jno
cmp
jg
insb
and
sarl
mov
cmp
jbe
popf
mov
push
mov
outsl
cmp
ljmp
push
ret
iret
jmp
xchg
imul
dec
inc
pop
leave
jg
stc
testl
lds
pushf
hlt
leave
xchg
pusha
lock
or
std
push
cltd
jno
mov
xor
push
jne
push
rcrl
mov
pop
test
sub
imul
jno
and
xchg
ret
mov
adc
data16
repz
lods
mov
stos
nop
rorb
inc
cmp
cmp
mov
jecxz
jle
lock
or
xor
bound
cmc
std
rolb
icebp
cli
push
cmp
inc
daa
ds
pop
inc
hlt
subl
das
jae
adc
mov
mov
mov
cmpb
ret
jecxz
cmp
cmpsl
lods
rcrl
dec
mov
or
push
sahf
push
xchg
cmp
cli
outsl
or
mov
es
inc
sub
inc
sbb
aam
and
push
hlt
dec
cwtl
iret
sub
or
xor
cmc
into
xchg
or
in
dec
repz
mov
stos
sarl
mov
dec
pushf
dec
cmp
leave
mov
jecxz
xor
xor
enter
pushf
mov
push
dec
inc
jae
leave
cmp
xor
bound
mov
lods
sub
je
les
mov
dec
das
push
lahf
add
sbb
shlb
push
in
sub
dec
add
sbb
cmp
outsb
pop
xchg
sbb
mov
or
outsl
mov
leave
mov
mov
psrld
cwtl
inc
lods
enter
mov
sbb
sbb
or
les
mov
xor
push
mov
add
mov
pushf
dec
xor
xchg
xor
shlb
xlat
das
mov
mov
ljmp
aaa
ja
les
xchg
xchg
int3
stos
jle
cmp
xor
iret
in
mov
mov
inc
jne
lods
mov
notl
xor
or
jbe
fcomi
cwtl
fimuls
cmp
inc
sbb
pop
std
pop
push
xlat
push
into
ret
cmp
ss
leave
mov
dec
and
sub
addr16
mov
cld
cmc
repnz
into
jecxz
or
xchg
xchg
leave
cltd
add
pop
sub
cli
push
inc
fisubrl
es
rorl
jnp
mov
add
inc
mov
mov
or
insl
dec
cmp
fs
jnp
sub
sbbb
es
pop
jbe
lock
adc
add
jae
into
imul
mov
jae
imul
es
sahf
mov
mov
sbb
ror
jo
fisttps
cltd
mov
and
loopne
push
and
scas
mov
frstor
mov
test
pop
wrmsr
mov
je
test
jne
rorl
sub
sahf
das
push
shl
call
imul
lret
es
fidivrl
or
cmpsb
in
cmp
jge
jne
notb
mov
push
sbb
mov
shl
sbb
pushf
popa
xor
mov
inc
into
jnp
sbb
cmp
popa
push
xchg
call
add
or
push
pop
push
lds
push
add
gs
mov
cwtl
and
cmp
mov
sub
outsl
pop
icebp
cli
sub
push
sbb
cltd
sub
sub
xchg
pop
cmp
push
lock
mov
xor
pop
out
in
idivb
mov
stc
daa
push
mov
push
push
dec
roll
fstl
jl
cmpsb
xor
mov
xlat
fwait
push
push
push
ret
sub
pop
add
imul
pusha
stos
add
pushl
lea
in
shrb
lods
xor
out
stos
fs
add
shrb
sarl
dec
fs
mov
stc
cmp
push
push
mov
test
pusha
or
adc
stos
cs
sub
das
pop
jp
test
cs
and
mov
addr16
and
mov
mov
cmp
sbb
int3
in
les
xchg
pop
inc
mov
roll
adc
or
cmpsb
xlat
iret
es
out
adc
rdpmc
push
sbb
pop
or
lcall
lods
mov
dec
xorb
leave
xor
stos
cwtl
out
call
cs
negl
insl
add
stos
inc
sbb
add
mov
xor
mov
xchg
cli
add
imul
stc
gs
push
in
xchg
add
pop
adc
add
cmp
add
lret
pop
jne
push
jg
dec
jge
aaa
inc
scas
aas
pop
ds
mov
psrld
pop
aad
inc
add
xor
xchg
xor
push
or
in
mov
adc
sub
adc
hlt
insl
mov
adc
adc
pop
test
inc
mov
sbbl
add
mov
popf
jno
jmp
out
cmp
cmpl
gs
sub
dec
roll
xchg
jg
inc
testb
scas
js
add
mov
mov
loope
sarl
lods
iret
fisubrl
pop
cmp
inc
sub
enter
imul
mov
in
add
rcrb
push
mov
sbb
test
filds
adc
into
xchg
dec
ret
sbb
push
fcoms
sub
sub
sub
dec
lods
pushf
test
sbb
fldenv
ljmp
add
jno
notl
lcall
jbe
push
scas
rolb
in
sbb
mov
pop
sub
jb
or
mov
aam
movsb
dec
pop
mov
jle
lds
aad
pop
shr
test
ss
iret
push
mov
mov
pop
jo
lret
pop
fidivrs
int
mov
cmpsb
outsl
push
aas
push
jp
mov
ds
push
scas
aaa
sub
adc
nop
mov
xchg
mov
lock
mov
jno
dec
test
sbb
loop
cmp
mov
mov
stos
and
aas
inc
mov
mov
mov
insl
aas
sarl
out
sub
pop
movsb
xchg
in
jnp
or
ret
xchg
sub
jl
inc
stos
inc
scas
mov
icebp
and
es
mov
or
and
cmp
adc
or
scas
pop
inc
fbstp
mov
in
scas
jg
call
push
das
cmpsl
inc
lahf
adc
lock
scas
fiaddl
xor
add
jp
popf
fdivrl
fwait
daa
outsl
mov
int3
cmp
in
stos
adc
mov
outsl
and
imul
sbb
jle
mov
sbb
sar
arpl
inc
mov
sbb
cmpsl
fisubrs
ret
into
fstpt
in
repnz
or
inc
fidivl
popa
mov
jmp
pop
sub
sub
xor
push
or
in
movsb
stos
popa
mov
mov
cmp
xchg
mov
cli
lods
std
xor
aaa
movl
sahf
or
and
popf
inc
sbb
sub
sbb
rol
pop
iret
adc
and
aam
lret
mov
pop
pop
sbb
btsl
lret
fsubr
cltd
popa
and
stos
imul
rol
xchg
and
rorl
lret
idiv
xchg
mov
pop
xchg
jg
test
lcall
imul
shll
inc
cld
add
shrb
sahf
push
sub
dec
push
inc
jb
insl
jne
cmp
and
rcrb
pop
and
jb
call
sbb
push
mov
cmp
mov
xor
loope
xor
pop
sarb
and
mov
pop
stc
add
cli
jne
pop
jle
sbb
scas
int
sub
pop
xor
adc
lcall
in
cs
mov
cmp
and
loop
testb
cmp
push
aas
clc
lock
into
push
pop
shrl
daa
mov
inc
mov
iretw
jae
repz
inc
sub
or
lods
xor
push
lock
jle
fsubrl
push
mov
cmpl
mov
das
mov
outsb
hlt
cmp
lret
xchg
pop
pop
mov
lds
xchg
outsb
aas
fwait
loop
xchg
xlat
imul
or
addr16
mov
or
ror
jg
sub
lock
div
lahf
daa
or
loope
adcl
or
popa
sbb
push
xor
das
mov
jl
sbb
stc
push
sbb
inc
leave
scas
popa
cs
push
pop
push
xchg
or
test
mov
out
out
pushf
imul
sub
fisttpl
and
mov
insl
cld
mov
arpl
scas
cmp
aaa
xchg
ds
hlt
add
push
mov
rorb
jae
mov
sub
stos
mov
fs
add
mov
pop
xor
cmp
xor
into
jbe
insl
add
xor
sahf
or
or
add
cld
mov
leave
out
dec
xlat
jno
out
lcall
int3
and
sub
hlt
bound
icebp
mov
pop
sbb
movsl
out
or
xchg
mov
sbb
fnstcw
inc
insb
cli
xor
xorl
arpl
faddl
loopne
das
mov
sbb
adc
cmp
fcomps
stos
out
psraw
dec
and
in
std
popa
push
sub
dec
hlt
add
std
nop
and
sbb
push
call
mov
outsb
mov
loope
mov
dec
xchg
or
add
test
loop
adc
test
shll
add
and
popa
mov
sub
lea
rolb
mov
dec
push
imul
and
in
xchg
in
pushl
dec
push
mov
in
cmpsb
mov
inc
pop
jl
rol
sbb
sub
mov
jnp
xchg
in
pop
ror
or
inc
jmp
jns
jbe
pop
add
adc
scas
shll
imull
stos
shlb
cltd
inc
ljmp
cmc
rcrb
push
jo
mov
cmc
movsl
push
xor
sti
push
in
call
mov
adc
adc
cmpsb
xlat
rorb
push
pop
mov
xchg
shll
mov
mov
orb
cltd
fs
cmp
fidivrl
imul
mov
mov
xchg
lods
push
inc
scas
fiaddl
jge
pop
sahf
jmp
test
leave
shll
jbe
jp
lods
mov
mov
mov
mov
popf
rcll
xchg
jno
xchg
or
cld
add
fstl
insb
inc
xchg
lea
jg
pop
inc
mov
popa
jno
dec
out
cmp
sbb
sti
xchg
nop
mov
les
stc
sub
xor
leave
or
pushf
mov
and
lret
xchg
gs
push
lock
add
and
je
xchg
jp
repz
xor
in
jp
mov
pop
pop
dec
sahf
orb
ret
adc
mov
sti
cmpl
ret
add
push
cmp
mov
sbb
cmp
pand
mov
mov
mov
mov
sbb
or
bnd
fmulp
cmpsl
lods
mov
aam
mov
in
add
cmp
inc
ljmp
and
jae
or
cli
frstor
mov
fisttps
aaa
popf
clc
push
clc
sbb
out
les
adcl
lret
pop
rolb
and
int
ficomps
daa
outsb
ds
nop
sub
cmpb
dec
jge
fiaddl
mov
popf
aam
sub
cld
xchg
stos
ljmp
pop
dec
cli
popf
and
push
lret
out
in
mov
push
xchg
icebp
jne
in
push
hlt
add
repnz
jns
orb
xor
mov
xor
bound
les
push
lret
imul
std
sbb
xlat
and
and
out
lods
dec
bound
aaa
and
in
repz
into
sub
dec
add
sub
xchg
mulb
sbb
scas
jmp
popa
and
dec
es
inc
sahf
add
je
shl
icebp
aas
and
dec
push
mov
jg
mov
sbb
in
dec
adc
int3
imul
je
adc
xor
lret
imul
sbb
fcoml
mov
lods
jg
fcomi
jno
dec
and
cli
mov
in
scas
mov
das
aad
out
in
aaa
idiv
sbb
pushf
and
inc
pop
cmp
sbb
sti
xchg
orl
pop
inc
lret
mov
xchg
sub
in
xor
out
les
inc
pop
lods
xorl
loope
fwait
out
cmp
xor
stos
mov
ja
inc
pop
pop
inc
sahf
test
xor
fcmove
jb
arpl
xchg
stc
ljmp
xchg
sub
mov
adc
in
inc
push
cmp
add
sub
ffree
and
dec
fsubs
lret
xchg
fprem
and
inc
das
loope
sub
hlt
iret
push
or
mov
popfw
mov
and
inc
fcoms
and
dec
call
fcomps
lea
add
in
adc
push
mov
dec
pop
test
xor
insb
push
ja
out
loop
pop
fcoml
xchg
xor
jo
push
lret
cmp
adc
std
and
in
ror
mov
inc
mov
stos
call
xchg
test
cmc
jl
lahf
mov
and
lahf
in
mov
cli
fimull
insl
mov
xchg
cmpsb
cmp
pop
cld
push
inc
xchg
iret
jge
sub
gs
fdivr
movsl
pop
sub
les
ret
sbb
ror
ret
lahf
jg
jle
xchg
lods
xor
lods
or
sti
mov
in
add
shlb
mov
xchg
ss
in
lcall
cmp
adc
jnp
and
xchg
push
jp
movsl
dec
inc
pop
loop
lods
push
xchg
jnp
cwtl
inc
xor
jbe
nop
insl
ljmp
rol
mov
fmull
sbb
push
loopne
adcl
xor
out
and
lds
inc
mov
sbb
jmp
add
add
xor
in
mov
inc
sbb
jb
cmp
push
out
mov
pop
loop
xchg
icebp
inc
fs
mov
mov
loope
mov
jecxz
or
push
or
add
xor
push
out
rcll
jmp
cmpsb
xchg
stc
test
arpl
sub
mov
xchg
lds
cld
dec
das
imul
dec
or
ret
rorb
fistl
inc
scas
xor
lcall
push
stc
push
mov
mov
outsb
and
inc
xchg
sbb
jge
sbb
and
mov
jo
pop
das
inc
lcall
sbb
int
btc
cwtl
mov
enter
jge
or
lds
jle
dec
or
add
sti
jno
add
xor
xlat
jnp
cmpsb
pop
in
pushf
jecxz
mov
aas
xor
cli
orb
test
call
mov
mov
hlt
cmp
cmp
sub
push
mov
push
lds
adc
xchg
mov
lods
cld
push
cld
xor
out
inc
lea
test
add
inc
or
or
insb
pop
dec
adc
imul
sbb
jb
add
enter
stc
push
pop
inc
subb
std
mov
and
nop
push
shlb
push
sub
int3
and
mov
andl
dec
sub
or
sub
mov
mov
fs
cmp
jmp
cmpsb
adc
ss
adc
cld
leave
das
mov
mov
outsb
mov
jne
sahf
mov
std
mov
adc
popa
outsb
pop
pop
stos
fsubrp
jbe
jb
lret
call
les
cmp
xlat
loope
shl
lea
stos
into
outsl
mov
pushf
mov
pop
pusha
fistpll
and
sub
jmp
xor
mov
test
push
jge
and
mov
sarb
outsl
cmp
insl
ds
in
sbb
pop
popf
or
dec
fcomps
or
and
jle
fidivrs
les
jb
stos
rorb
insb
cltd
and
pop
aas
fnstsw
inc
mov
mov
and
add
jns
ds
xlat
in
mov
pop
inc
out
loop
jge
mov
xchg
jne
xlat
repnz
fsubl
ret
cmc
pusha
dec
xor
ror
fbld
daa
jns
fs
jne
cmc
rcr
push
adc
adc
mov
lods
jecxz
sub
sbb
inc
cmp
mov
pop
gs
mov
pop
popf
inc
movsb
pmaddwd
mov
addl
pop
enter
mov
pop
ljmp
push
sbb
jmp
pop
jle
dec
pushf
xchg
xchg
mov
pop
pop
fidivrl
push
mov
fcoml
shlb
lcall
mov
pop
adc
xchg
pop
pop
mov
in
mov
sbb
mov
repz
adc
adc
sub
frstor
sbb
rcll
lret
lds
cmc
xchg
das
xchg
cmp
int3
cmp
or
lcall
enter
mov
sbb
jb
dec
stos
je
arpl
push
ljmp
cmp
xchg
out
or
clc
push
sub
sbb
into
js
jg
ds
jb
mov
sbb
mov
fidivrl
out
jae
inc
xchg
js
sahf
insb
jge
xchg
lods
mov
or
call
xchg
add
pusha
cmp
decb
pop
sbb
out
imulb
jbe
pop
push
inc
jb
sub
cmp
pop
dec
cmpsb
pop
test
mov
shl
iret
int
jb
leave
rolb
inc
cvtpi2pd
push
daa
xor
pop
insl
dec
shll
in
add
inc
ficomps
adc
aam
arpl
ss
inc
cmp
adc
subb
inc
pop
popf
xchg
repnz
push
fldl
das
mov
mull
out
lahf
ljmp
dec
sbb
cmp
jp
dec
sub
cmpsl
mov
popf
pop
pop
inc
push
add
arpl
mov
enter
mov
xchg
addr16
add
inc
mov
in
int
push
xor
outsb
inc
dec
movsl
movsl
cmp
or
or
or
cmp
push
and
out
stos
xchg
pop
icebp
iret
mov
out
mov
outsb
aad
adc
adc
mov
inc
iret
xor
outsb
nop
xchg
pop
xchg
mov
or
inc
popf
inc
pop
mov
test
popa
push
shl
scas
pop
out
jo
sub
and
out
push
and
adc
dec
mov
lret
sub
mov
cmp
pop
pop
mov
push
xchg
xchg
push
sbb
cmp
mov
jp
mov
pop
cmp
popf
test
loope
push
scas
pushf
inc
jmp
mov
dec
std
inc
add
pop
inc
lds
sbb
sub
outsl
sub
sahf
scas
or
xchg
add
ds
sbb
lods
inc
call
cmpsl
sbb
jl
fst
inc
lret
lea
dec
adc
xchg
mov
iret
push
subb
out
gs
xor
ljmp
fwait
adc
stos
out
inc
dec
flds
inc
ficoml
push
push
sub
xor
ret
mov
xor
mov
adc
xlat
mov
rol
mov
test
xchg
andb
loop
cwtl
div
dec
aas
shll
or
adc
jno
fcoms
push
je
pop
addr16
cmp
imul
sbb
shl
pop
fdivl
out
xchg
lahf
in
mov
mov
pop
cs
jge
insl
mov
loopne
jbe
bound
mov
mov
dec
dec
jno
ret
arpl
jp
mov
insl
negb
and
cmpsb
stos
cmp
pop
and
fsubrl
mov
inc
dec
dec
inc
sbb
xor
fnstenv
dec
imul
cmp
outsl
push
frstor
movl
or
fsts
sub
les
filds
movsl
out
xchg
jle
aad
inc
xor
les
and
loop
lock
jnp
mov
cmp
sub
mov
push
test
add
pushf
pop
dec
or
js
enter
cmp
imulb
repnz
add
xchg
mov
ljmp
add
push
dec
pop
inc
xchg
ss
arpl
fisttpll
mov
dec
mov
lret
and
iret
mov
mov
mov
imull
out
add
fimuls
sbb
jle
dec
fadd
std
pop
lret
test
push
inc
shll
cmp
mov
aaa
jo
sbb
and
and
xorb
sbb
imul
dec
mov
sbb
add
pop
mov
por
push
fs
sub
lods
jmp
pop
and
push
aaa
iret
movsb
push
and
sarb
mov
mov
sbb
dec
inc
push
mov
or
push
adc
dec
cld
jg
inc
test
push
jo
pop
dec
ret
decb
scas
cmp
jns
aam
adc
arpl
cs
cmp
jmp
lea
mov
or
add
sti
aaa
xchg
dec
jo
mov
cmpb
mulb
int3
cld
add
sub
mov
call
push
mov
pop
fwait
stos
dec
repnz
fcompl
cmp
test
sub
pop
add
popf
add
push
lret
stos
or
popa
ret
mov
rorb
test
cmpl
addr16
jae
jns
pop
ja
pushf
or
cs
sbb
mov
xor
push
add
cs
push
jae
mov
stc
stos
std
mov
inc
push
jle
push
dec
dec
dec
pop
pop
std
mov
push
fs
xor
push
mov
mov
xchg
sbb
xor
scas
orl
dec
mov
sbb
or
cmpsb
pop
jg
xor
mov
mov
shrb
fsin
inc
fdivl
or
mov
xchg
adc
and
adc
ja
jecxz
lahf
das
mov
pop
inc
loopne
arpl
mov
fisubs
sbbb
addl
jg
add
fwait
xor
in
das
mov
ret
xchg
push
xchg
mov
sbb
imul
stos
mov
outsl
push
testb
sbb
inc
addr16
call
mov
or
jecxz
pop
push
mov
xchg
fwait
sub
stos
shlb
dec
cmp
and
scas
out
jae
gs
imulb
jl
dec
push
cmpsb
jb
jl
inc
outsl
pop
lahf
lahf
pop
sbb
lock
sbb
ja
int3
cmp
test
inc
clc
mov
lock
pop
sub
scas
sub
rorl
xlat
sbb
test
sti
pop
xor
leave
pusha
adc
les
add
mov
push
js
cs
sahf
mov
pop
loopne
xchg
pop
fstl
and
cmp
imul
or
out
outsb
mov
adc
mov
int3
push
testl
mov
test
and
add
jmp
flds
leave
push
mov
jb
push
int3
inc
mov
les
xchg
inc
lahf
outsl
iret
test
sahf
out
push
or
pop
sahf
jge
sbb
cmp
popf
or
stc
out
into
test
inc
push
or
xlat
xor
mov
test
pop
xor
jle
gs
out
inc
pushw
arpl
mov
xlat
imulb
pop
aad
lock
jmp
cmpsb
mov
and
enter
jecxz
xchg
mov
mov
movsl
hlt
mov
bound
sub
in
jb
or
push
pushf
repnz
orl
dec
pop
pop
stos
fdivp
pop
inc
sub
es
daa
out
pop
push
sub
movsl
xchg
and
xor
adc
or
cmp
and
xor
xor
push
movsl
out
xor
adc
shrl
jne
mov
push
jo
sub
inc
ror
lock
movsl
push
dec
add
stos
push
stos
into
push
fldenv
dec
mov
ret
push
out
ljmp
cmpsl
aas
clc
in
mov
cmpsb
push
lahf
data16
cmp
xor
je
or
leave
lea
dec
into
fs
addr16
aad
cmpl
fldl
pushf
and
adc
xchg
lods
stos
add
sub
inc
int
ja
sub
pop
jmp
mov
das
or
pop
pushw
or
dec
jg
sub
dec
test
inc
jge
push
repz
shll
inc
cmpsb
dec
cwtl
rorb
cltd
iret
test
loopne
jb
xchg
arpl
popa
fsub
sarl
xchg
push
dec
add
ficoml
push
inc
orl
out
nop
out
jno
and
aam
clc
clc
lea
push
jo
loopne
xor
dec
je
push
dec
xchg
ret
lahf
add
clc
dec
divb
out
mov
rcll
mov
leave
push
ret
cmp
call
ret
xor
and
jb
es
mov
sbb
or
fistl
sub
psrlq
cmp
mov
xchg
imul
pop
imul
arpl
flds
xor
push
test
popf
movsb
pop
imul
fsub
or
mov
pushf
jmp
push
pop
pop
pop
lea
jnp
or
out
sar
aam
push
dec
mov
leave
jg
xor
mov
sbb
ljmp
inc
enter
push
js
and
aam
cmp
repnz
cld
jo
xadd
mov
xchg
sti
call
jns
jne
imul
daa
arpl
inc
pop
incl
push
mov
std
jecxz
and
cmp
les
ss
rol
fs
pop
pop
sbb
lcall
or
aad
mov
test
jb
inc
adc
sub
cmp
pop
add
fcoms
mov
inc
lods
ljmp
sbb
cld
mov
out
cmp
daa
aas
sti
fcoms
dec
sarl
lock
imulb
inc
rcll
mov
inc
repnz
xchg
dec
jp
sub
mov
cmp
lret
sbb
or
add
mov
jnp
lret
and
je
pop
adcb
push
dec
push
pop
loopne
dec
cld
sub
insb
add
cli
mov
arpl
aad
dec
les
iret
lret
mov
stc
mov
mov
loope
xchg
push
xor
sub
cmpsb
lods
jmp
sub
out
nop
jg
mov
sbb
sbb
jnp
cmp
pusha
sbb
sub
sbb
in
fstl
sub
idivl
ret
push
mov
jmp
out
hlt
jnp
imulb
clc
push
sbbl
ret
inc
stc
inc
sbb
dec
sbb
stos
fistps
push
mov
mov
xchg
jnp
je
ret
xorb
adcb
ljmp
push
dec
enter
pop
inc
pop
decb
push
and
adc
popf
xchg
movsb
mov
xor
test
cmp
add
loope
aaa
fcompp
clc
aas
mov
add
ret
mov
push
or
pop
sbb
adc
fisttps
cmpl
adc
jns
cmp
push
sti
orb
das
pop
adc
jg
popa
sbb
fxch
xor
js
int3
leave
aam
cmp
push
jae
int
sbb
sbb
add
jo
and
jbe
stos
outsb
dec
pop
mov
push
js
icebp
fs
dec
mull
mov
adc
fisttpll
decl
hlt
mov
js
in
js
adc
mov
lret
mov
fistpl
lcall
or
xchg
fcomi
std
xor
jge
jle
xor
je
mov
pop
and
dec
in
fwait
push
sti
xor
and
xchg
das
dec
shlb
cwtl
adc
pop
ja
test
inc
inc
push
mov
mov
lods
cld
jecxz
incw
sub
stos
jb
in
mov
arpl
dec
jp
out
test
xor
push
call
arpl
sti
divl
mov
out
mov
mov
stos
cmpsl
jmp
bound
push
inc
dec
addl
jecxz
push
adc
fstl
imul
mov
cmp
dec
mov
fmull
inc
dec
or
pop
aas
mov
jle
mov
addr16
lret
push
and
scas
sub
xor
data16
and
xor
sahf
xor
ds
and
in
jle
mov
mov
sbb
xchg
gs
repnz
pop
clc
arpl
out
pop
int3
outsb
insl
sub
insb
dec
inc
push
mov
cltd
fnsave
push
sub
add
in
decl
mov
shll
add
lods
cmpsb
out
jo
andps
lock
cmp
and
cmpsb
cmc
mov
xchg
jb
add
gs
fdivl
shrl
idiv
xor
xchg
scas
loopne
subl
cltd
inc
jns
push
repz
xor
icebp
inc
xor
xchg
mov
inc
jb
and
out
cmp
pop
out
xor
mov
sbb
pop
cld
out
inc
cmp
xchg
pop
test
pop
and
adc
inc
sub
cltd
add
iret
dec
mov
dec
cmp
js
movsb
addr16
out
rcrb
out
mov
push
call
push
dec
lds
arpl
sbb
std
ja
fs
scas
pop
xor
jo
test
cmp
and
pop
cmp
mov
mov
sub
int3
inc
int3
or
jbe
cmpsl
adc
mov
cmp
nop
xor
test
dec
fisubrs
cs
lcall
xor
mov
popa
pop
and
xor
test
mov
inc
fcoms
repnz
or
push
divl
in
js
daa
in
push
sub
pop
adc
stos
mov
cmpsl
lret
loope
sub
test
dec
dec
int3
cs
cmp
mov
jns
mov
lods
add
sbb
sub
add
sub
call
sub
mov
cmpsb
es
mov
jnp
xor
jp
mov
jae
mov
iret
movsb
out
inc
fnsave
popa
mov
and
push
daa
jl
jne
or
inc
jbe
not
pop
dec
cmpsb
icebp
add
test
dec
jb
aam
stos
lret
cmpsl
aad
adc
bound
cmp
adc
sub
fildl
mov
mov
aam
imul
xlat
xor
mov
xchg
inc
pop
je
loope
ljmp
fwait
pop
mov
fs
popa
pop
mov
sub
sub
mov
lahf
loope
or
mov
out
in
rorl
scas
movsl
mov
iret
jno
sub
and
jge
dec
sub
sbb
lds
aaa
dec
dec
daa
int3
adc
pop
lcall
fmul
and
mov
inc
mov
or
test
push
lods
fstpl
push
test
dec
orl
loop
sti
mov
int3
testb
loopne
xchg
push
mov
sbb
mov
dec
psrlq
cli
lret
or
mov
cs
cld
and
dec
jae
imul
mov
pop
xor
sbb
imul
sbb
sbb
pop
popa
add
imul
jge
mov
mov
push
or
add
push
pop
push
hlt
jmp
mov
jns
cltd
pushf
adc
es
fwait
inc
lahf
sub
inc
jo
fbld
mov
es
push
inc
stos
pushl
addb
or
aad
incb
and
mov
inc
pop
fnstenv
int
iret
pusha
mulb
cmpsl
cwtl
xchg
cmpsl
ror
mov
xor
sbb
push
ret
add
adc
inc
inc
cmp
arpl
data16
mov
inc
jo
push
push
sahf
clc
imul
jmp
out
jp
and
dec
add
cmc
sub
and
hlt
aaa
movsl
aaa
sbb
push
cmp
cmp
sbb
sbb
divb
shrb
sarb
add
jno
mov
subl
inc
push
xchg
cwtl
jg
rcrl
loop
ret
shrl
mull
pop
sub
mov
mov
push
push
pop
sub
shl
cmp
sub
std
push
jnp
or
out
jb
repnz
jo
data16
inc
xchg
sub
jp
iret
sbb
sahf
stos
or
jae
scas
cli
mov
mov
and
popa
mov
xchg
sbb
jnp
bndldx
imul
lds
addr16
xchg
or
adc
outsl
movl
stos
addr16
icebp
jns
sub
sti
sahf
or
adc
inc
adc
in
mov
push
stos
jae
nop
xor
out
dec
es
sti
leave
fstl
in
or
jg
ds
pop
stos
add
les
mov
fucom
bound
jns
fistps
jnp
std
cs
fcmovnb
pop
loope
xchg
fs
pop
icebp
push
pop
lock
insl
outsb
gs
mov
inc
and
data16
jp
adc
lahf
push
int3
imul
test
pop
outsb
fwait
sub
mov
ret
dec
popl
stos
xlat
fisttpll
sarl
and
das
fwait
cltd
jo
jo
imul
pop
pop
adc
je
fwait
jnp
and
pop
pop
jne
shlb
mov
mov
jnp
call
adc
movsl
nop
push
shl
stos
enter
cmp
xlat
xorl
cmp
pop
sarl
xchg
ret
pushf
jl
addb
leave
xor
cmp
and
xchg
xor
mov
xor
adc
sub
ficoms
push
lock
int
cmpsb
pop
ret
test
adc
js
mov
sbb
jnp
ljmp
in
mov
sbb
mov
lods
or
inc
pop
mov
sub
int
stos
pushf
xchg
mov
xchg
sbb
pushf
outsb
inc
push
cld
jb
scas
cmp
and
add
dec
or
insb
sbb
pop
int
pop
sbb
add
out
cwtl
clc
adc
sbb
fldl
cltd
push
out
lods
jo
push
popf
inc
xchg
sub
mov
shll
pmullw
sbb
push
pusha
xor
adc
in
in
mov
sub
adc
jne
push
push
adc
mov
fdivp
cwtl
mov
push
test
fwait
lea
mov
and
xchg
or
pop
setg
cmpsl
shrl
sar
xchg
test
xor
jecxz
pop
nop
adc
es
mov
xchg
pop
mov
mov
jge
adc
or
xor
push
inc
xor
jo
imul
adc
pusha
dec
sub
and
movsl
dec
les
in
das
dec
pop
ficoms
or
pop
cs
fmull
ds
jo
rorl
es
jno
rcrl
push
sbb
cmp
push
push
loop
sub
cli
jae
inc
add
fnstenv
sbbl
insb
lret
cld
idiv
and
mov
cmp
movsb
cmp
add
movsb
enter
mov
dec
fistpl
int
push
fsubrs
rorb
in
outsl
adc
insb
imul
mov
out
test
xchg
sti
popa
cwtl
add
jg
pop
daa
sub
into
fldcw
jns
les
imul
mov
sub
push
add
rorl
cmp
add
sub
test
adc
fisubs
dec
mov
std
lock
fimuls
jmp
stos
clc
arpl
push
pop
ss
mov
movsl
aad
clc
test
inc
and
sub
push
in
and
div
bound
fldl
aaa
add
xchg
js
lods
inc
adc
mov
ss
add
out
mov
idiv
jmp
cmp
and
mov
addr16
pop
or
xor
cmp
dec
xchg
push
jmp
adc
adc
adc
cmc
push
iret
lods
mov
mov
add
test
xor
leave
stc
addr16
and
scas
in
or
mov
int3
cld
xor
outsb
gs
xor
fsubrp
jae
mov
insl
and
ret
inc
sub
sbb
loopne
or
pop
cmpsb
les
pushf
movsl
lock
movsb
movsb
daa
cmp
pop
push
jmp
mov
dec
xchg
aad
inc
xchg
xlat
xchg
or
inc
inc
out
xchg
xor
outsl
aaa
aad
out
cmp
jl
and
mov
mov
mov
imulb
cmpsl
xor
pop
or
pusha
decl
ja
push
test
push
mov
xor
adc
xchg
ret
cmp
mov
jle
dec
hlt
push
jmp
mov
fwait
pop
sub
cltd
xchg
repz
or
push
stos
jne
sbb
mov
repz
and
mov
rolb
lods
test
or
aad
enter
jno
ljmp
fistpll
cmc
scas
mov
mov
stos
mov
jl
xor
mov
pop
int
xor
loope
lods
out
pop
mov
mov
incb
subb
cmpsb
jle
pop
cmpsl
lea
mov
lods
sbb
jp
imull
in
xor
push
mov
lahf
rcl
rclb
and
filds
mov
jns
mov
aad
pushl
jg
sbb
adc
inc
dec
mov
cmp
sub
mov
dec
repnz
test
sbb
lret
sub
push
dec
ja
sub
xchg
insl
lock
idivb
mov
mov
cmp
jmp
push
push
es
inc
enter
adc
scas
ja
mov
xchg
mov
adc
mov
inc
and
cmp
test
inc
insb
addb
push
adc
lds
jle
outsb
cmc
xchg
cmpsb
lock
xchg
sbb
repz
mov
push
mov
adc
push
ds
and
add
xchg
mov
jmp
cmp
jae
lods
inc
mov
sub
repnz
scas
pop
cwtl
jecxz
daa
aad
xor
fucomp
imul
mov
in
sarl
cmp
cmp
nop
rolb
das
lea
addr16
aad
movsb
mov
cmp
dec
add
push
cmp
xchg
and
push
jl
mov
jns
pop
mov
ret
aam
dec
and
xlat
rclb
jl
pop
inc
stc
cmp
dec
cmpsb
jle
add
aaa
dec
xchg
leave
xor
xchg
test
cmpsl
sbb
into
add
mov
xchg
xor
cmp
imul
lds
add
dec
mov
pause
js
and
shll
das
popl
pusha
cld
mov
lahf
lods
icebp
testl
mov
xchg
out
or
lahf
pop
test
adc
mov
xor
cli
pop
mov
icebp
sar
das
push
mov
xlat
cmp
and
movsl
fcomp
pop
int3
int
mov
and
sahf
xor
lcall
pop
xor
outsb
pop
jmp
push
rorl
in
mov
or
jb
fucom
mov
orb
pop
fwait
jmp
or
mov
in
in
mov
mov
xchg
jae
mov
add
sbb
idivb
movsb
loopne
inc
fwait
adc
mov
lret
mov
out
js
jb
cmp
out
jns
xchg
mov
lods
test
xchg
push
dec
sbb
inc
pop
sbb
pop
jmp
xchg
je
in
sub
out
lahf
lcall
test
cld
sub
mov
test
sbb
mov
mov
cmp
aam
cltd
outsb
je
not
inc
mov
and
stos
or
fldl
loope
stos
ror
add
ja
fldcw
sbb
jne
loope
mov
fs
leave
imul
pop
push
jae
cltd
adc
insl
xor
dec
pop
xor
xchg
add
dec
shlb
movsl
mov
addb
out
sbb
push
xchg
testl
lret
sahf
inc
inc
mov
aas
pop
add
inc
addr16
and
test
xchg
jge
and
cmp
pop
dec
test
mov
cli
sbb
sti
aaa
into
push
cmpsb
movl
movsl
push
loop
adc
psllq
decb
lcall
ficoms
aad
jp
dec
aaa
or
movsb
aam
and
cmp
adc
mov
lret
jge
xchg
mov
sub
out
push
sbb
sub
into
out
lahf
insl
and
mov
mov
xor
ljmp
iret
out
cmp
test
mov
dec
cmpsl
push
data16
cmp
hlt
daa
outsl
inc
loop
ja
cmpsl
in
xor
lods
js
enter
fmuls
push
dec
outsl
js
cmc
sub
push
mov
mov
jbe
mov
add
dec
jp
out
and
les
jo
xor
cmpsb
jmp
jmp
and
xor
jge
mov
sub
mov
out
addr16
pushf
and
in
jbe
jmp
bound
lret
fcomps
dec
rclb
clc
mov
loopne
jns
inc
pushf
cmp
mov
in
push
icebp
mov
cli
add
push
xchg
in
jp
xchg
icebp
xchg
fxch
jbe
push
imulb
lods
imul
cld
enter
out
add
push
adc
fists
mov
ret
inc
xchg
ljmp
push
iret
xor
cmp
fs
aaa
xorb
nop
mov
aad
out
lods
stc
pushl
frstor
test
sub
inc
add
sbb
xchg
fcomps
ficoml
sahf
push
ficoml
pop
xor
leave
adc
iret
jmp
outsb
xchg
fisttps
dec
mov
shll
loop
dec
ds
std
fldl
mov
jle
addb
xchg
inc
outsb
movsb
jbe
cmp
stos
dec
xchg
lret
adc
sub
and
cltd
pop
pop
push
leave
fiaddl
adc
fisttpll
or
jbe
xorl
add
mov
xlat
pop
iret
jp
mov
mov
sahf
pop
jmp
inc
mov
popa
ljmp
aam
sbb
aam
fiaddl
rolb
xor
test
arpl
fimuls
sub
sbb
shll
mov
xor
imul
push
inc
popa
jns
or
sbb
xchg
imul
and
stos
int3
aam
cmp
mov
jnp
mov
scas
xchg
mov
cmp
mov
pop
ds
fisttpl
sahf
ret
ds
adc
repnz
pop
or
pop
jg
xor
aas
push
jb
clc
mov
idivb
popl
sbb
mov
fmull
xchg
push
xor
lods
in
cmpsb
cwtl
sub
add
outsl
xchg
sub
inc
cmpsl
xor
add
cs
jno
cmc
add
cmpsb
and
push
xchg
sahf
add
nop
add
aam
iret
mov
adc
dec
push
dec
push
jg
jl
push
push
ja
fistpl
out
cmpsl
scas
jmp
xchg
mov
loop
and
xor
mov
sbb
add
push
loope
push
aaa
mov
inc
into
les
ret
jle
mov
inc
sbb
gs
dec
ror
inc
xchg
cmp
fdivs
jb
lahf
cmp
loop
std
into
sahf
imul
jno
in
xchg
pop
push
pop
sahf
lock
lahf
lds
sub
lahf
adc
jmp
add
sbbb
mov
push
lock
lret
stos
cs
or
jge
mov
jae
sahf
dec
and
aad
popf
shlb
mov
or
xor
movsl
inc
ja
daa
and
xor
dec
movsl
jmp
insb
lds
xchg
dec
xchg
jo
icebp
mov
sarb
xor
pusha
cmp
fidivrs
lret
sti
dec
pop
mov
mov
push
cmpsl
adc
mov
or
jp
lahf
fucomp
idivb
cmc
cmp
ret
push
in
mov
lods
xor
nop
cwtl
adc
add
adc
lret
scas
inc
out
cmp
cmp
adc
or
imul
mov
enter
mov
or
mov
test
cmc
pop
dec
sbb
push
daa
dec
scas
dec
mov
cmpsb
bound
adc
lret
lahf
push
mov
sub
xchg
shrl
mov
dec
or
pusha
iret
or
jne
loopne,pn
sbb
xor
mov
ds
cltd
jnp
fwait
mov
dec
test
jecxz
sbb
pop
xchg
test
inc
cs
lret
int3
cmp
loop,pt
mov
aaa
dec
bnd
ret
fimuls
xor
out
out
test
and
lock
cmpb
idivl
lahf
cmp
rorl
adc
ja
ja
jb
aad
mov
pop
mull
mov
fs
push
dec
mov
daa
mov
xor
movsl
dec
cmpsb
mov
inc
loop
mov
xor
inc
dec
add
fnsave
imul
lahf
jne
xor
dec
int
or
repnz
xchg
adc
cmpsl
test
xchg
mull
adc
cwtl
arpl
mov
jg
and
imul
push
add
std
or
pop
addr16
sbb
sti
jo
push
sbb
and
movsb
push
es
mov
dec
inc
mov
inc
dec
lods
jl
jecxz
lahf
jecxz
pusha
pop
dec
sahf
hlt
sbb
pop
lods
outsb
adc
adc
xlat
loope
fwait
adc
cmp
push
sub
mov
xor
scas
mov
je
mov
clc
idivb
add
inc
sub
in
mov
nop
xor
idivb
jmp
inc
in
test
adc
jecxz
mov
sbb
dec
dec
xlat
mov
mov
cltd
dec
adc
mov
enter
adc
push
sub
sti
popa
add
outsl
pop
mov
scas
fadds
and
add
loope
mov
std
mov
pop
cmp
cmp
add
scas
mov
mov
cmp
hlt
dec
fdivl
jae
cmp
or
xchg
pushf
scas
cmp
mul
adc
push
lods
push
xor
sub
xor
scas
pop
cmpl
gs
lcall
add
dec
hlt
sbb
pop
mov
cli
jbe
popf
xor
in
xlat
pushf
dec
or
jmp
movsl
push
mov
add
hlt
xor
sub
seta
fs
mov
sbb
sub
pop
adc
sbb
mov
cmc
pop
and
testl
add
cmpsb
stos
pop
dec
xchg
pushf
push
negl
add
rcll
inc
pop
inc
pop
test
cmp
xchg
push
dec
xor
mov
lds
xor
cmc
and
jae
and
cmp
inc
mov
sub
test
adc
dec
or
bound
repz
xor
mov
push
cld
and
cltd
repz
inc
jmp
lock
and
push
or
lock
lahf
and
pop
bound
leave
mov
sub
jo
dec
pop
popa
outsb
outsb
imul
xor
inc
enter
fwait
pop
pusha
ret
pop
xor
loope
mov
pushf
mov
sub
sbb
mov
pushf
mov
sbb
lds
mov
addl
les
and
sarl
mov
xor
push
es
test
call
xor
in
lods
push
aam
cltd
jge,pn
inc
jp
out
jae
out
sbb
sub
push
cmp
test
jmp
lret
sub
adc
scas
pushf
test
fiaddl
call
inc
outsl
jo
sbb
lret
add
movsb
divb
inc
push
push
adc
lahf
bound
stc
sub
repnz
aas
out
lods
xchg
or
cmpl
xorl
pop
add
mov
xor
add
dec
mov
cmp
xlat
lock
jle
in
cli
sub
xor
clc
xchg
loop
jecxz
sub
pop
in
clc
mov
push
pop
mov
sar
push
or
ret
mov
iret
enter
inc
mov
repz
lret
mov
outsl
xor
clc
stos
fsubl
gs
mov
movsl
adc
scas
mov
lahf
jne
xchg
adc
test
imul
ror
frstpm(287
inc
dec
mov
sub
imul
push
sub
stos
and
jns
hlt
mov
cmp
mov
mov
fnstenv
scas
mov
rclb
mov
sbb
cmp
sbb
ret
xor
mov
cmp
pop
push
ficompl
xor
and
mov
loope
jp
xor
std
and
mov
pop
cmp
or
icebp
push
push
adcl
mov
adc
jle
sub
mov
or
adc
and
cs
and
dec
mov
repnz
inc
daa
sub
ret
add
cltd
push
push
sbb
aam
aaa
lea
push
xchg
fs
lret
imul
cwtl
dec
sub
test
mov
mov
ljmp
xchg
je
xor
dec
inc
ja
xchg
mov
imul
mov
adc
lahf
adc
xor
sbb
pop
addr16
jl
cmc
mov
or
int3
dec
je
imull
stos
in
add
cs
mov
into
into
scas
dec
fwait
push
inc
or
pop
pop
or
push
outsl
ss
ja
and
mov
fisttps
mov
mov
aam
dec
jno
adc
call
xor
xor
imul
std
stc
mov
fdivrl
test
enter
mov
das
xor
hlt
enter
clc
xchg
push
mov
inc
or
jmp
inc
xor
in
cmp
xor
add
pop
xlat
and
pop
dec
ss
dec
adc
test
add
iret
aaa
sti
loopne
out
insl
cmp
mov
arpl
mov
dec
out
ja
mov
lretw
sbb
inc
flds
jmp
pop
jl
outsl
pop
push
push
mov
xchg
scas
inc
in
and
nop
pop
out
mov
push
xlat
cmp
or
cmp
adcb
loopne
cli
pop
std
cmp
stos
xchg
in
add
jb
into
test
std
push
xchg
test
out
notb
test
dec
xor
xor
jmp
call
mov
in
insl
or
jns
cmpsb
stos
and
shl
std
push
sbb
inc
mov
push
mov
jae
enter
add
and
adc
jae
lret
xchg
pop
or
jp
jge
and
not
sbb
clc
ret
rolb
or
js
jmp
out
mov
outsl
sub
mov
test
pop
aaa
scas
xorb
cmpsl
outsb
gs
sub
mov
fadds
shrl
cmp
jge
jno
lea
pop
call
clc
jo
mov
pop
fidivrl
mov
mov
in
daa
mov
divb
lods
inc
sub
or
hlt
fbld
sub
or
aaa
jae
xor
loopne
cmp
sub
mov
pop
pushf
mov
scas
outsl
pop
jns
inc
lea
js
xor
icebp
add
leave
mov
int
shll
mov
lret
pop
shr
cltd
cmp
out
mov
fisttpl
fcmovb
repnz
test
lahf
xorb
fildll
dec
nop
lock
cmp
call
test
mov
repnz
insb
addr16
sahf
lods
negb
lret
mov
jnp
mov
adc
lcall
or
jnp
dec
xchg
pusha
xchg
scas
add
and
xor
movsl
fcomps
inc
or
or
pop
mov
mov
xchg
lods
jns
and
mov
ja
sub
xlat
ror
xchg
cld
jg
pop
rcrl
mov
idivl
pushf
pop
mov
adc
sbb
xlat
fadds
sub
lret
lods
loopne
insl
xchg
mov
cmp
jp
xor
in
test
je
insl
jmp
cmp
xchg
pop
jo
cmp
and
aam
shl
int3
lods
and
call
mov
imul
push
add
stos
sbb
bound
cld
jmp
jo
aad
out
imul
cmp
rorl
jl
ret
mov
lahf
sahf
mov
dec
xor
or
negb
gs
das
out
test
inc
or
push
push
fsubrs
and
fcoms
and
cmp
pushf
cld
cld
sti
ss
push
hlt
bound
cmp
or
inc
jno
data16
out
pop
cmp
jnp
pop
fwait
cmp
loope
fbstp
or
jecxz
fildl
jae
mov
inc
mov
mov
loope
mov
mov
mov
insb
ret
lret
adc
popf
inc
fcom
roll
mov
fadds
mov
and
sub
xchg
jecxz
push
ficomps
inc
or
mov
movsb
or
out
in
arpl
repnz
test
xor
lahf
mov
or
add
push
pop
mov
adcl
cmp
mov
cmp
xor
lret
push
adc
add
ficompl
imul
adc
adc
jmp
nop
jno
mov
test
jns
mov
or
xchg
out
add
divb
push
or
daa
push
test
test
iret
push
arpl
les
jae
nop
push
into
sub
and
push
pop
mov
adcl
xchg
jmp
ret
cli
mov
int
lods
test
push
dec
xorb
cmp
imul
add
lea
pop
jmp
xchg
dec
outsb
xchg
test
inc
cmp
scas
stc
cmp
push
jmp
inc
jge
jne
xchg
cmp
cltd
pop
mov
adcl
sbbl
mov
xacquire
mov
add
and
ss
cmp
jmp
cltd
dec
not
cli
add
subl
add
aaa
nop
stos
push
inc
jecxz
hlt
adc
aaa
pop
enter
fstpt
outsl
xor
xchg
mov
sub
pusha
les
mov
es
push
mov
mov
mov
dec
ret
pop
outsl
pop
repnz
mov
dec
mov
aad
out
outsl
pop
jp
leave
adc
jle
mov
iret
sbb
or
addr16
es
xor
sub
mov
les
adc
stos
mov
pop
dec
jg
outsl
sbb
repz
jge
test
outsl
repz
mov
gs
stos
fldl
in
mov
movsb
push
jl
nop
rcrl
pop
pop
scas
push
rolb
jl
sahf
sub
jae
adc
push
test
xchg
inc
in
pop
lock
lcall
add
adc
les
fsubrs
xchg
je
enter
icebp
push
or
lcall
cmp
aam
stos
cs
sbb
std
xchg
or
rorb
jns
iret
xchg
cmp
shlb
cmc
iret
jne
cli
cmpsl
popf
jle
idivb
mov
adc
jnp
shl
mov
lret
popf
das
clc
jge
add
sbb
test
xlat
mov
rcll
pusha
sbb
in
cmp
pop
stc
jae
mov
out
pop
sbb
aaa
scas
test
mov
xchg
xlat
jp
outsl
or
jns
sub
sti
xchg
pop
xchg
call
push
sti
jne
mov
pop
and
add
fcomps
or
loopne
xlat
lret
faddl
jl
push
jge
add
fidivl
mov
add
pop
jmp
dec
lret
cmp
xlat
adc
incl
xor
rcl
and
iret
cmp
or
insl
mov
hlt
push
faddp
mov
sub
cwtl
xorb
dec
adc
sbb
push
hlt
in
sbb
xchg
mov
xchg
dec
and
cld
shll
repnz
push
pop
movsb
pop
mov
testb
fwait
sbb
rcl
into
repnz
outsb
cmp
add
cmc
repz
jp
xor
lahf
pop
or
and
fisttpl
adc
lock
push
hlt
mov
jb
imul
iret
outsb
jge
pop
add
pop
and
mov
fiadds
cld
xchg
lea
ret
push
xor
jnp
dec
hlt
jno
xchg
les
xlat
lods
push
jo
or
addr16
push
mov
push
stos
or
cwtl
fiaddl
frstor
pop
shrb
add
sbb
subb
jge
les
aad
dec
xor
je
lret
aad
lods
lods
add
gs
outsb
and
push
adcb
out
dec
xchg
daa
movsb
sbb
dec
pop
or
cld
cmp
adcl
push
cmpl
inc
mov
lahf
data16
pop
lahf
loop
es
xor
inc
cmp
sub
into
sbb
lods
xor
repz
test
fsubs
call
pop
es
cs
out
jg
or
aad
ja
dec
and
lea
xchg
add
movsl
lcall
jge
fmuls
add
push
aad
mov
sarb
rcrb
xchg
shlb
addr16
scas
jb
imul
jle
cmp
dec
push
pop
test
fcom
imul
imul
fmull
std
mov
mov
jne
jl
adc
loop
roll
pcmpgtd
push
inc
xchg
cmp
sbb
stc
rorb
bound
vmovsd
shll
negb
movsl
inc
push
dec
pop
cli
aad
insb
or
decb
or
loopne
sub
jmp
fcmovu
lret
es
push
mov
add
popa
shlb
arpl
fisubrl
cmp
in
test
cwtl
sub
xor
mov
cmpl
cwtl
scas
cmpsl
rcll
jmp
jae
pop
cmp
mov
hlt
outsl
stc
orb
dec
dec
mov
cmp
sbb
xor
in
cmove
and
lds
lea
enter
std
int
xchg
jb
adc
xchg
lock
gs
pop
sub
adcb
arpl
arpl
add
dec
xchg
sti
leave
lret
adc
bnd
divl
jp
imul
movsl
fadds
aam
jmp
frstor
imul
dec
jnp
in
xchg
xchg
pop
pmaddwd
test
xchg
xchg
cmp
clc
jp
fs
ljmp
inc
mov
in
shl
ret
repz
push
leave
mov
sbb
and
jbe
add
lea
xchg
sub
dec
loope
lock
loope
mov
push
mov
mov
test
xchg
or
mov
out
jnp
lods
or
ficompl
sub
out
test
fsts
mov
stos
data16
test
jge
call
das
cmp
aad
cmp
and
adcl
mov
into
inc
gs
insl
cmp
lcall
sbb
jo
cld
mov
xchg
leave
mov
js
int
stos
cmp
and
loope
mov
outsb
sub
jne
test
pushf
dec
or
mov
lcall
pop
in
push
cmp
popf
enter
fs
sub
xor
jecxz
dec
jb
xor
inc
lea
push
jne
inc
call
sbb
fcoms
mov
addr16
lods
int
ja
pusha
cs
sbb
in
aas
addr16
repz
fwait
push
push
into
mov
and
clc
sbb
and
push
repnz
cmc
xor
jb
ss
jecxz
dec
jae
adcl
ss
call
pop
and
sub
test
js
in
cmp
pop
push
bnd
push
mov
dec
neg
pop
mov
dec
adc
add
inc
xlat
or
mov
dec
push
jge
lcall
sbb
clc
js
aaa
into
mov
mov
xor
jl
push
popa
testl
adc
pop
loop
dec
je
xchg
push
pop
repz
cmp
jnp
adc
adc
aaa
fwait
or
cmp
or
jecxz
mov
pop
fs
mov
jne
xchg
popa
xchg
push
lods
jno
stos
mov
stos
jae
inc
lods
xlat
cmp
shll
pop
idivl
inc
jbe,pn
mov
jge
adc
out
jg
in
xchg
cmp
cltd
cmpsb
mov
inc
add
das
mov
test
dec
jno
dec
mov
int3
inc
jecxz
test
or
and
inc
insl
ja
les
xchg
push
mov
shll
push
ds
push
pop
cmpsb
pop
push
xor
fistpl
out
mov
fsubrp
or
cmp
cs
sbb
mul
adc
jmp
dec
imul
adc
je
add
bound
pop
jne
leave
pop
adc
push
or
adc
je
lcall
xor
jbe
mov
and
xchg
xor
xlat
push
adc
push
jge
pop
ss
jo
adc
stos
loope
pop
pusha
ret
ret
push
jmp
shl
test
dec
test
stc
adc
stos
add
xchg
pop
mov
rorb
les
fistpl
inc
push
push
mov
rcrl
xor
mov
cmp
pop
xchg
repnz
mov
rcrl
fincstp
int3
mov
std
dec
sahf
jmp
lds
popa
and
and
sahf
es
ret
push
xchg
sbb
shrl
mov
and
enter
leave
mov
ret
mov
or
int3
lcall
pop
arpl
add
adcb
push
sub
add
xchg
int
pop
mov
add
int3
dec
or
loop
ds
inc
cmp
aam
sub
fwait
mov
daa
lea
inc
lahf
push
aaa
jp
aad
push
or
sub
cmp
mov
jae
cmc
push
pop
in
xor
jns
fwait
inc
mov
sbb
sub
jns
add
push
sub
push
out
inc
pop
aad
jo
xchg
clc
imul
ljmp
jbe
xchg
pop
mov
pop
push
push
mov
xor
sub
dec
aaa
push
sbb
push
mov
mov
cli
leave
je
bound
push
mov
fimull
xchg
mov
jbe
int3
jno
pop
flds
icebp
call
repz
andl
insl
cmc
xlat
aas
insb
fnstsw
mov
inc
pop
mov
add
sub
dec
pop
mov
subl
repz
mov
inc
clc
jbe
stc
xchg
mov
xchg
add
mov
mov
rol
pop
adc
test
jmp
movsl
dec
jecxz
mov
lret
ror
xlat
jnp
dec
std
jns
mov
lds
pop
rcrl
xchg
insb
mov
out
xchg
push
push
repz
push
out
inc
mov
mov
lock
enter
inc
inc
and
sub
mov
push
mov
lods
dec
lea
cmpsb
cmp
and
ss
jno
pop
fucom
pop
std
dec
xabort
pop
out
pop
fwait
jg
scas
or
mul
lea
cli
stc
test
mov
out
add
jmp
stc
push
push
adc
inc
sbbl
or
inc
pop
or
imul
xor
in
mov
decb
es
rolb
xchg
push
and
leave
arpl
leave
mov
sbb
xchg
rclb
cmpsb
loopne
mov
sbb
cld
insb
jle
jmp
js
lods
gs
cmp
add
push
out
fsubrl
or
scas
lds
dec
cmp
in
sbb
cli
push
fs
mov
lret
scas
pop
pop
loopne
or
sbb
icebp
loop
jbe
movsb
test
lcall
or
mov
dec
dec
repnz
pop
jnp
lock
shrb
mov
into
sub
xor
pusha
jb
dec
xor
adc
ds
sbb
fisttpl
inc
mov
sub
iret
movl
std
aaa
repz
loope
js
push
add
xchg
daa
test
lcall
les
inc
sub
inc
jne
in
mov
lret
cld
mov
mov
ror
jmp
scas
cmc
movsb
push
loopne
mov
les
sub
inc
jp
das
cmc
adc
lock
call
stc
or
mov
out
fsubr
in
jmp
sub
pusha
and
cmpsl
mov
pop
or
psllw
filds
imul
pop
ret
dec
add
cli
push
aam
inc
stc
add
divl
fistpll
rorb
clc
add
repz
insl
ss
popf
mov
xor
lcall
scas
or
in
xor
push
movsl
call
ret
mulb
jns
ret
mov
inc
push
hlt
adc
lock
call
xchg
cmp
sub
in
inc
lahf
sbb
lcall
out
pop
mov
push
mov
stos
pop
cmovp
dec
xor
xchg
hlt
xchg
movsb
sahf
cmp
jo
xor
push
cld
sbb
aam
shrb
ds
test
int
dec
into
insl
shl
sbb
jo
push
mov
xchg
push
dec
sbb
adcl
addr16
sub
xchg
sbb
subb
ss
mov
out
mov
jg
rcrl
sub
fadds
add
fcompl
aaa
fldcw
cmp
jne
mov
icebp
mov
and
mov
loop
sbb
lahf
push
enter
push
push
int3
dec
lea
add
push
xchg
cmp
mov
jl
push
add
sub
sbb
mov
loop
sub
cmp
call
xor
aam
hlt
mov
cmp
mov
jmp
addr16
movl
ret
sbb
lahf
and
inc
sbb
jl
mov
lret
cmpsl
cltd
xor
xor
leave
cli
test
loopne
dec
inc
mov
inc
pop
repnz
cmpsl
popf
hlt
pop
jb
sbb
add
xor
call
aam
js
cltd
insl
lock
jne
push
xchg
lcall
push
test
pushl
push
cmpsl
out
gs
xchg
adc
and
aad
cmpsl
repz
sbb
in
aaa
or
xor
popa
dec
xchg
adc
andb
repnz
les
icebp
lods
pop
mov
test
rcrb
xor
stos
inc
out
adc
pop
icebp
inc
inc
or
adcb
dec
es
mov
sbb
ret
jns
add
ret
pop
out
xor
and
test
dec
lods
outsl
xor
push
gs
aad
jle
jb
cmp
out
outsl
cmp
out
in
pushf
sbb
testb
sbb
inc
cmpsl
mov
sub
fisttpl
push
mov
or
and
add
sti
xchg
ret
cmp
fimuls
jecxz
pop
sub
ret
jne
fcmovnu
pop
cmp
dec
inc
dec
mov
repz
rcrl
repz
and
xchg
mov
push
outsl
rorl
cld
and
adc
push
lret
push
inc
in
cltd
adc
xor
clc
and
jne
pop
dec
add
sub
and
loop
sbb
pop
jg
adc
lds
imul
xchg
in
lea
adc
sub
ficomps
jmp
test
and
add
int3
adc
outsb
and
inc
les
xchg
jo
jp
inc
cltd
jb
mov
lret
cmc
leave
cmc
mov
xor
popa
xchg
sub
inc
pop
mov
jg
pop
add
pop
pop
mov
enter
mov
lahf
in
mov
and
mov
fwait
out
and
mov
and
sbb
insl
push
notb
and
mov
xchg
inc
jns
sbb
push
repz
cmp
inc
mov
fdivp
adc
or
iret
inc
dec
out
stos
cmp
shlb
xor
mov
pop
push
into
pop
lock
xor
sbb
xor
lcall
rol
adc
std
inc
bound
scas
sahf
clc
test
icebp
loop
mov
dec
repnz
je
or
jbe
jae
clc
adc
mov
inc
and
and
pushf
shrl
xor
scas
enter
jno
fnstsw
mov
mov
mov
lret
mov
or
or
mov
dec
cmpsl
or
inc
and
push
add
das
loop
pop
jp
dec
pop
aad
mov
sbb
inc
ret
xor
mov
add
fprem1
dec
bound
jns
xchg
pusha
orb
lods
jmp
outsb
pop
mov
jb
cmpsb
adc
sub
push
xchg
test
dec
imul
ret
imul
insb
stc
js
fs
xchg
into
jmp
mov
jae
stos
test
jmp
je
dec
xchg
cmc
sti
ds
test
or
push
mov
aad
popl
movl
adc
cmpsb
mulb
adcl
lods
imul
popf
push
fsubs
mov
jecxz
lods
incb
pop
imul
inc
mov
lock
pop
or
push
jo
xchg
adc
out
jmp
into
js
nop
fcmovnb
xor
int
orb
pop
cmp
pop
arpl
jb
jns
aam
pop
insl
cltd
push
das
mov
jmp
or
addr16
mov
ret
adcl
dec
cmp
lea
mov
in
les
xor
add
gs
add
test
pop
sbb
jp
pop
imul
popf
jo
lahf
jmp
push
pop
sub
inc
jbe
cmp
push
cmpsl
jp
cmpsb
push
pop
dec
scas
cs
out
imul
or
push
mov
mov
add
or
push
pop
mov
jbe
test
or
popl
adc
jno
stos
and
and
gs
rorl
mov
or
sub
mov
test
mov
cmp
stos
pusha
xchg
push
mov
cmp
and
cmp
out
jne
mov
not
xor
sbb
ljmp
jmp
jp
fcoml
int
hlt
adcb
jae
or
in
scas
das
mov
call
aas
or
dec
push
out
out
xchg
pop
pusha
in
jge
pop
shlb
and
xchg
jle
adc
in
inc
test
jp
push
leave
mov
xor
ret
mov
inc
sbb
add
out
loop
push
lahf
imul
ds
lret
fistl
inc
cmp
and
inc
popa
and
sub
dec
je
xor
sbb
ja
fiadds
lea
fs
mov
cmp
loop
addb
inc
cmp
dec
cmp
pusha
mov
xor
adc
dec
sbb
jl
push
sti
dec
sub
inc
icebp
push
shrb
mov
int3
repz
and
dec
push
in
pop
les
inc
sub
nop
push
dec
adc
js
mov
cmpb
adc
call
sbb
push
inc
xor
lds
cmp
lcall
mov
sub
out
mov
das
jns
sbb
mov
cmp
addb
mov
imul
jecxz
mov
cmpsl
cmp
lock
pop
loopne
xchg
icebp
in
mov
pop
lcall
add
sub
cmp
dec
test
pop
cld
add
rolb
ret
loope
shll
sub
dec
jno
lret
mov
or
sbb
fldl
push
mov
ja
dec
cmp
pop
out
addr16
or
shlb
mov
or
ss
sbb
and
mov
xor
loope
das
mov
inc
daa
stc
loope,pn
cmp
dec
mov
stc
push
sub
xchg
divb
push
lret
add
mov
inc
adc
mov
jg
mov
mov
sub
fbld
inc
or
popa
pop
call
pop
inc
out
cmp
inc
int3
test
dec
dec
imul
or
xchg
mov
inc
sarb
dec
push
cmp
and
cli
sbb
cmp
iret
adc
addr16
icebp
loope
imull
jecxz
or
jb
cmc
and
or
mov
daa
cmpsb
scas
rcl
loop
jae
pop
subl
inc
int3
push
ds
lcall
in
and
ja
and
pop
jns
loop
add
or
xlat
sti
cli
cs
in
sub
outsb
xor
add
inc
sub
fcomps
das
xlat
adc
lods
mov
movaps
mov
frstor
aaa
ret
push
mov
popf
shlb
test
call
push
ret
jb
pop
pop
sub
lret
xor
outsb
xor
testl
mov
int
lea
push
mov
pop
push
cltd
mov
xchg
lret
mov
sub
repnz
stos
int
mov
pushf
jne
call
inc
lea
jmp
fcompl
push
fcmovnbe
shl
pop
fsubrs
out
filds
mov
pop
stos
push
int
dec
pop
fwait
xor
ljmp
cmp
test
sahf
and
insl
mov
mov
lea
add
jp
in
xchg
popa
and
xor
pushf
cmp
mov
fldz
mov
or
notb
pop
pop
dec
xlat
and
sbb
loope
das
stos
outsl
jmp
pop
fildl
jle
loope
jb
dec
cmp
pop
inc
push
out
lret
sarb
cmc
and
xchg
outsl
pop
mov
dec
push
stc
arpl
xchg
clc
lahf
jno
xchg
imul
jb
pop
bswap
cmp
or
mov
outsb
jecxz
stos
mov
aam
rcrb
inc
dec
push
fwait
adc
fmuls
dec
push
test
shrb
sub
mov
jb
aad
arpl
mov
stc
mov
fcomps
mov
inc
xchg
cltd
sub
pop
cmp
cs
jbe
mul
mov
fs
ds
testl
aaa
xor
dec
mov
sub
fsubr
pop
add
std
je
push
sahf
lahf
repz
xor
iret
and
sub
mov
aaa
hlt
dec
in
sbb
dec
or
bound
hlt
adc
push
or
mov
sbb
sarb
adc
xchg
or
aam
imul
or
and
sub
dec
push
je
push
out
lret
and
in
sub
pop
scas
sbb
scas
mull
jg
iret
sbb
ficomps
outsl
test
xchg
mov
pop
mov
scas
or
imulb
push
fstpt
mov
xor
mov
sbb
xor
inc
xchg
and
mulb
adc
sub
hlt
pop
lds
shlw
sbb
ljmp
ljmp
and
mov
arpl
test
push
mov
xor
mov
sahf
inc
push
mov
test
dec
xlat
bound
aas
or
loope
dec
test
movsl
enter
call
icebp
lds
fs
les
ret
push
pusha
cmp
mov
js
fcmovne
popf
aaa
aad
and
popa
dec
cltd
jo
icebp
sbbb
leave
or
jnp
js
sbb
push
push
xbegin
xorb
stos
mov
inc
mov
or
sbb
mov
dec
sbbb
je
insl
fdivrl
pop
lret
es
outsl
hlt
dec
inc
mov
insb
cld
jp
dec
decb
xchg
mov
push
jb
out
mov
scas
dec
or
jmp
dec
adc
adcb
fcmovnbe
mov
je
or
sbb
ficoms
mov
pop
es
or
jle
stos
arpl
addl
dec
cmc
addr16
daa
stos
cmp
adc
sbb
jo
pusha
sub
je
jnp
mov
mov
xchg
mov
cmp
dec
xor
adc
je
fisttps
xlat
or
fildll
push
xor
or
xchg
sbb
adc
shll
and
rclb
adc
pop
cld
push
in
mov
adc
mov
int
inc
push
dec
and
sti
cmp
push
mov
es
mov
pop
jl
aam
cmpl
xchg
add
cmp
imulb
jno
in
mov
test
push
and
jecxz
call
out
aam
andl
jmp
xor
sbb
pop
mov
sbb
fcmovne
stos
jle
sub
mov
xor
loope
hlt
ja
mov
addr16
xor
int
pshufw
clc
shl
dec
mov
push
xchg
shll
push
mov
sbb
mov
sub
sbb
lods
jle
mov
adc
dec
sbb
decb
imul
pop
pop
push
scas
xor
pop
sub
fwait
test
add
add
dec
and
sbb
jecxz
push
subl
movb
loop
lcall
push
jno
daa
xchg
jo
jge
jp
fstps
pushf
adc
dec
addl
adc
mov
fwait
mov
cmp
pusha
leave
xor
xchg
punpckhwd
dec
inc
mulb
dec
cltd
or
jecxz
mov
dec
std
push
ljmp
sub
add
jo
dec
add
mov
pop
pop
push
mov
mov
out
lret
test
xchg
icebp
sub
pop
ret
xor
jl
push
cmp
jne
pop
stc
test
mov
ljmp
push
xchg
pop
pop
dec
mov
sbb
cmpsl
cmpsb
fs
xlat
fsubl
scas
daa
sbb
dec
out
jp
nop
dec
rcl
sub
out
fimuls
dec
repz
cmp
mov
xchg
inc
out
icebp
cmpsb
aaa
sub
mov
fistps
adc
mov
jmp
dec
fisubrs
mov
cwtl
fidivs
ffree
sbb
addb
xchg
in
ss
movsb
sub
inc
xchg
xlat
pop
clc
cmpsl
loope
xchg
push
and
mov
and
jge
lcall
js
rcll
mov
in
cld
lds
dec
pusha
sbb
push
push
fcomps
cli
pop
data16
jg
aam
js
adc
cltd
cmpsl
jne
fidivrl
and
dec
notl
xor
jno
mov
push
loop
xlat
adc
push
xchg
lds
andl
fmuls
mov
xchg
in
inc
cltd
mov
adc
lods
jo
sbb
push
stos
pop
xor
xchg
lock
jge
inc
lcall
test
cmpsb
xchg
xor
fisubrs
mov
push
popf
stos
sti
jl
int3
fsubrp
jl
mov
mov
test
cmp
call
sti
in
bound
or
pop
imul
data16
sbb
ss
jecxz
dec
outsb
sub
jecxz
in
outsb
xchg
jl
repnz
fs
test
push
es
repz
in
andl
mov
and
or
cmpsl
stos
mov
ficoms
xorl
jmp
dec
sbb
and
orb
inc
jnp
cmc
or
cs
pop
xchg
xor
test
and
stos
mov
stos
lds
into
and
dec
mov
dec
cmp
jo
cmc
jns
push
pop
push
jne
sbb
inc
pusha
sarb
lahf
jmp
add
dec
fldenv
insl
adc
out
lds
aaa
add
daa
jns
in
xchg
insb
jb
and
lds
sahf
rorl
cmpsb
jne
jecxz
es
scas
mov
sarb
imul
jmp
bound
out
cmpsb
test
jmp
psubb
test
mov
sub
clc
mov
cmp
mov
jecxz,pt
mov
mov
loope
idiv
aaa
loop
loope
stos
or
ret
inc
push
leave
imul
pop
lcall
std
call
adc
sub
mov
add
mov
and
dec
cmp
adc
fcmovnu
test
dec
mov
lahf
cs
popf
xchg
push
mov
xlat
pop
fwait
aam
fcoms
sahf
push
mov
fnstcw
mov
fldcw
stc
fildll
arpl
ret
inc
test
in
mov
push
shr
adc
push
ficoml
jmp
pop
jb
andl
xchg
xor
inc
orl
out
imul
mov
loopne
enter
pop
data16
je
or
and
sbb
mov
inc
push
aad
data16
push
push
and
adc
rolb
lret
pop
push
adc
sub
xor
fiadds
js
and
shll
testb
std
adc
sbb
mov
outsb
mov
or
jnp
fcmovu
inc
loopne
push
xchg
rorb
lock
clc
add
xchg
and
dec
inc
xchg
lret
int
mov
xlat
jnp
imull
jae
je
jmp
or
adc
sahf
mov
or
or
stc
sahf
sub
xchg
cld
cmp
test
fiadds
sbb
imul
cs
or
xchg
and
ja
dec
sahf
mov
jns
mov
es
xor
mov
outsb
and
loop
lods
mov
into
xchg
mov
adc
push
frstor
fcomp
mov
into
iret
cmp
jmp
adc
loope
les
mov
add
jp
lcall
sbb
arpl
in
push
std
sbb
pop
lret
pusha
shrl
mov
sti
pop
adc
mov
fsubs
inc
mov
addr16
xor
mov
sbb
push
scas
xor
cwtl
pop
and
push
push
jg
stos
sbb
movsb
mov
lahf
inc
jne
repnz
movsl
or
mov
clc
mov
jmp
fildl
push
pop
stc
inc
les
scas
test
cwtl
cwtl
jbe
pop
mov
xchg
mov
mov
pmuludq
je
mov
faddl
shll
mov
call
and
dec
cli
int3
movsl
cwtl
mov
fldl
add
jbe
repnz
mov
scas
outsb
ljmp
add
mov
aas
sub
pop
mov
push
inc
into
jg
cmpl
mov
sbb
adc
xor
mov
dec
inc
mov
xor
jg
and
aam
cs
mov
dec
sbb
ss
ret
je
and
loopne
push
loopne
icebp
jne
inc
add
stc
xor
push
hlt
scas
mov
inc
bound
mov
ss
test
inc
adc
and
fdivl
inc
scas
mov
clc
loop
lods
int3
into
pop
jns
stos
inc
mov
mov
repnz
cmp
mov
outsb
inc
mov
dec
mov
jge
lock
dec
add
mov
add
xor
jbe
pop
rcrl
or
fimuls
sbb
or
outsl
sbb
add
ljmp
mov
sbb
pusha
jp
pushf
jb
fcompl
insl
pop
pop
push
jp
push
pop
testl
sub
xor
cld
pop
das
pop
inc
push
hlt
sub
jne
pushf
or
cmp
pop
jnp
andl
xor
xlat
pop
movl
xor
add
adc
push
mov
shrl
cmp
lcall
sub
xor
cmp
mov
mov
js
xor
fnstsw
adc
cltd
bound
lods
fcomi
jae
stos
insb
push
lret
dec
ss
cmp
aaa
outsl
in
lock
and
ret
push
movsb
jle
sbb
dec
dec
mov
imul
loopne
jns
rcll
mov
mov
add
and
dec
xchg
jbe
xorl
dec
ss
push
jl
and
mov
roll
fbld
adc
out
mov
push
sahf
addr16
pusha
insl
shlb
fists
lods
pop
mov
jle
rcl
xor
mov
add
sub
loop
insb
call
pushf
xor
stos
popf
sbbb
inc
add
push
dec
scas
adc
fcompl
inc
int3
mov
jb
sbb
adc
pop
leave
pop
ficoms
push
jno
sbb
mov
out
cmpsl
pushf
pop
testb
or
shll
jmp
sbb
fiadds
jne
adc
cld
insl
jno
sub
add
rclb
mov
test
adc
fiadds
inc
in
pusha
pop
mov
pop
fucomip
pop
or
repnz
mov
mov
or
mov
push
sbb
or
dec
inc
out
sti
jns
adc
in
aaa
push
rcrb
sarl
les
xchg
push
aad
push
out
adc
test
popa
repz
outsl
loope
ret
test
sti
lahf
dec
pop
xor
sbb
sbbb
push
jo
add
mov
ljmp
shlb
in
int3
push
push
add
out
nop
inc
ss
ret
in
ljmp
xchg
adc
scas
dec
enter
aaa
in
mov
xorb
and
add
pop
mov
xor
cmpsl
sti
xor
mov
sahf
xor
in
mov
xor
popl
jo
add
aaa
ret
in
sub
scas
mov
aas
push
mov
push
inc
popf
inc
mov
cld
in
out
je
mov
cmp
cmp
adc
mov
inc
lods
adc
xchg
mov
sub
lret
idivl
xor
mov
mov
in
repnz
add
loop
sub
dec
mov
xchg
add
push
cmp
ja
cmp
mov
jecxz
push
pushl
cwtl
sbb
cs
pushaw
push
aas
ss
clc
add
push
cmpsb
xlat
je
int3
jns
movsl
or
inc
cmp
mov
dec
or
divl
out
fsubrs
roll
sahf
pushf
adc
mov
rol
fnstcw
loopne
or
pushw
mov
out
adcl
sbb
aad
test
push
xor
out
push
in
das
or
jmp
cs
outsl
dec
movsl
pop
adc
pop
jo
int
aad
mov
xchg
jmp
inc
outsl
lcall
pop
xlat
sbb
inc
jb
sarb
cmpsl
repz
push
js
pop
rorl
imul
add
cli
imul
fs
inc
xchg
iret
mov
or
cmpsb
or
add
dec
cmp
ljmp
add
sub
push
jnp
lcall
xchg
into
lret
mov
enter
or
pop
jmp
xor
pop
mulb
pop
movb
mov
stc
testl
mov
icebp
cmp
inc
dec
or
aad
adc
rorl
das
mov
mov
sbb
dec
cmp
mov
sub
mov
leave
pop
data16
sbb
jg
mov
jae
inc
insl
into
cmp
cmovp
jno
iret
jnp
inc
int3
xchg
cmp
fbstp
sbb
dec
adc
lds
stc
mov
adc
icebp
shll
push
mov
aas
scas
push
outsl
jmp
sbb
ss
xchg
hlt
inc
dec
fsubr
sub
std
or
test
mov
mov
insb
icebp
fdiv
dec
inc
fnstenv
adc
call
aam
push
or
adc
xor
sar
imul
ret
mov
and
rolb
scas
dec
shrb
mov
xchg
jmp
xor
mov
sti
out
sbb
mov
or
push
daa
xor
mov
iret
push
or
ljmp
sti
call
or
push
subb
arpl
scas
inc
mov
jmp
sub
int3
inc
fidivrs
fildl
div
or
sub
lds
test
test
int
adc
fdivrs
sbbl
mov
push
popl
push
fst
dec
xchg
addb
and
cmp
mov
xchg
ss
and
test
dec
arpl
lahf
push
mov
mov
cld
and
sbb
jb
jecxz
dec
fs
mov
cmpl
mov
hlt
xorl
jle
fbstp
fsubl
popf
or
lcall
mov
movsl
notb
repnz
add
mov
cmp
rol
outsb
mov
lea
je
nop
arpl
sbbl
stos
leave
aad
insl
jmp
std
out
cmpsl
xor
fsubrp
cmp
cmp
mov
jg
repz
xor
inc
push
lahf
sub
es
in
aam
pop
pusha
xlat
and
mov
fldcw
in
jmp
out
lcall
push
pop
cmp
mov
cltd
xchg
sbb
movsl
xor
scas
pusha
fwait
pop
sub
xchg
das
mov
nop
out
adc
mov
lahf
adcb
aas
inc
xor
sbb
lcall
dec
jae
sub
loopne
sbb
pop
repz
aas
xor
dec
fucomip
xor
clc
mov
ds
mov
mov
outsl
mov
push
pop
in
xchg
jno
mov
pusha
push
mov
test
cmp
int3
mov
inc
inc
mov
aam
xor
cltd
fs
inc
shrb
push
adc
movsl
mov
jbe
jbe
push
pop
enter
loopne
sub
mov
or
rcl
hlt
inc
pop
pushf
mov
sub
and
push
lcall
or
xor
les
cmp
out
fs
push
into
loopne
mov
xor
inc
pop
testb
sti
test
cli
push
pop
ja
cmp
in
lcall
adc
shrl
or
mov
test
xchg
and
mov
cmp
scas
or
and
enter
adc
mov
aam
out
dec
mov
mov
fidivrs
in
mov
and
xchg
pop
jo
lcall
ficoml
cmp
insb
dec
pop
enter
pop
hlt
mov
sbb
jnp
sbb
movsl
mov
test
andl
inc
xor
and
jae
adc
inc
lcall
sti
and
mov
mov
mov
cmc
out
stos
jae
mov
or
mov
clc
sbb
push
lea
roll
jge
mov
xor
xchg
data16
adcb
lds
in
dec
ds
mov
pop
fwait
adc
pushf
outsb
sahf
add
test
mov
push
int
jecxz
dec
enter
xchg
call
out
push
inc
add
push
push
cmpsb
scas
mov
ja
mov
leave
xor
mov
shlb
andl
dec
adc
or
cwtl
sti
das
push
and
or
lret
scas
xchg
dec
out
mov
fwait
inc
add
fldt
loop
lods
ret
xchg
sti
or
fnsave
out
leave
inc
push
sahf
inc
pop
ja
pop
mov
sbb
fcmove
mov
xlat
xlat
dec
sub
sbb
lcall
imul
and
icebp
loop
xchg
aad
scas
mov
bound
sub
cmp
ret
xchg
stos
jl
lea
adc
adc
mov
cli
popf
add
inc
lea
mov
js
xor
pusha
sbb
je
fdiv
mov
xor
mov
out
fnstenv
adc
jg
movsl
in
es
mov
fldl
in
mov
dec
sbb
jecxz
add
lahf
aaa
into
pop
cmp
mov
jg
call
dec
loopne
hlt
mov
inc
xchg
leave
cmp
add
fwait
sub
into
popa
adc
sub
test
repnz
inc
ret
leave
sbb
mov
in
movsl
add
std
push
dec
cmp
jge
repnz
fwait
xor
imul
lods
int
int
cli
jnp
jecxz
xchg
repnz
adc
xor
mov
dec
aaa
jp
test
insb
sub
mov
mov
jp
rorl
pop
rorl
out
jne
jne
outsb
cmp
outsl
popf
xchg
rorl
in
mov
rorb
push
movsl
fs
mov
fucomp
mov
out
mov
stc
gs
pusha
insb
pusha
mov
xchg
mov
pop
push
xor
adc
clc
jl
push
lds
arpl
rorb
or
push
fbld
or
mov
mov
or
xor
push
and
jne
cltd
lcall
out
test
cmp
dec
pop
sahf
xchg
xchg
scas
int3
adc
pop
mov
and
add
fbstp
mov
xchg
add
pop
imul
mov
ja
jmp
inc
mov
mov
or
in
imul
xchg
ljmp
addb
idiv
jae
push
ljmp
in
das
fbstp
sub
xor
aaa
mov
inc
xchg
push
xchg
mov
inc
cmp
and
dec
mov
mov
and
cmp
mov
add
ss
jg
xchg
pop
push
add
push
fs
mov
and
sbb
enter
mov
mov
xor
pop
nop
gs
rcll
push
cltd
mov
dec
movsb
lock
bound
out
cli
stos
mov
lret
mov
cld
xchg
test
inc
stos
mov
pop
or
aaa
xor
sbb
inc
mov
clflush
sahf
imul
shll
dec
repnz
jp
arpl
mov
xor
pop
js
les
mov
jp
jmp
scas
xchg
ja
in
adc
mov
sbb
mov
nop
sub
add
adc
out
lds
xchg
mov
dec
je
inc
fwait
and
push
push
cmp
cmp
in
cmp
xchg
push
fcoms
xchg
and
jl
ja
out
pop
sbbb
sub
sahf
add
inc
fldt
movsl
hlt
mov
mov
or
ljmp
clc
clc
add
xchg
ljmp
ja
lret
mov
push
sbb
repnz
bound
add
sbb
lcall
jmp
stc
out
push
jl
pop
xor
jmp
int3
cmpb
stos
sub
mov
sub
in
stos
insb
pop
xchg
xor
stc
push
faddl
push
mov
sub
cwtl
lock
sub
mov
push
cmp
and
js
test
imul
fwait
and
mov
jo
and
aam
shrl
inc
sub
xor
rol
addl
mov
ret
lcall
mov
push
jbe
lea
lea
popl
xor
push
std
lods
test
lahf
out
jno
push
aam
inc
nop
pop
dec
sub
xchg
adc
loop
lcall
imul
enter
loop
js
and
push
lea
iret
rcrb
add
lea
inc
push
cmpsb
cmp
adc
or
stos
mov
adc
jle
enter
mov
bound
sub
sub
cmp
rorl
cwtl
or
add
sti
xchg
fwait
lret
sub
scas
pop
and
and
xlat
mov
mov
pop
sti
and
push
ds
femms
repz
mov
mov
fidivrs
out
push
loope
sub
out
mov
fimuls
in
out
mov
test
lods
and
pop
dec
xchg
ds
adc
test
mov
ss
je
hlt
inc
mov
jno
adc
mov
or
cltd
sbb
fbld
mov
sub
inc
pop
push
jg
stos
xchg
inc
cmp
dec
xor
xor
or
nop
pop
icebp
xor
fcomip
lods
dec
pushl
popf
sub
inc
xor
pusha
dec
mov
aam
add
push
inc
repnz
popf
je
jp
cmp
orb
or
sbb
inc
or
mov
rorl
dec
push
cmp
push
mov
mov
dec
or
adc
into
loope
add
cli
sbb
imul
adc
xor
out
jmp
and
push
sub
mov
out
lods
sub
jg
arpl
mov
movl
mov
jecxz
mov
jp
int
pop
movsl
ficomps
test
push
or
stos
add
aas
sbb
and
fisubrl
jp
and
cs
subb
popa
lret
xchg
aas
sub
scas
ret
or
imul
adc
insb
in
lods
jmp
jnp
scas
and
cmp
jge
xlat
je
pop
mov
dec
xchg
popa
fcmovbe
and
jle
in
xchg
addb
mov
insl
and
push
and
dec
cmp
jno
pop
and
lods
jmp
mov
arpl
jg
sub
adc
js
mov
rcl
repnz
and
ds
pop
and
lretw
movsb
sahf
xor
jno
mov
xchg
add
lahf
pop
popf
aaa
mov
inc
push
add
xor
repz
test
shr
adc
mov
out
jne
sbb
and
sub
add
jb
rorl
leave
in
outsl
fsubs
notrack
jge
sahf
rorb
addl
add
xchg
insb
adc
cmp
movsl
hlt
cs
ret
mov
mov
xor
fs
pop
dec
mov
sbb
lods
out
shlb
data16
loopne
mov
popa
int
dec
fs
lret
clc
icebp
xchg
aaa
int3
loope
jecxz
pop
sbb
jb
fmuls
jne
rclb
std
dec
nop
test
mov
xor
scas
fsub
lret
mov
mov
insb
fbstp
inc
push
loope
sahf
mov
xor
call
xlat
cmp
sub
sub
xor
sbb
adc
sahf
dec
lret
adc
cmp
lret
or
fcmovbe
leave
and
push
arpl
ficomps
lods
fwait
add
mov
and
popl
data16
stos
dec
js
imul
fisttpll
pop
cltd
sarl
xor
aaa
call
xchg
cmp
cmp
xor
add
imul
or
arpl
sahf
lods
enter
inc
xchg
ret
pushl
data16
add
mov
mov
inc
aas
movntps
dec
cmp
sub
icebp
imul
pop
aaa
push
mov
insb
mov
rclb
add
xchg
hlt
sbb
inc
inc
pop
rorb
int
int
cmpsl
jb
or
mov
imul
mov
addr16
jbe
pop
ffreep
sub
push
pop
inc
push
mov
ret
outsb
mov
add
xor
sbb
cld
sub
int3
out
lcall
mov
pop
daa
pop
sbb
or
sbbl
dec
int
divb
dec
cmp
arpl
jecxz
xor
lret
mov
fistl
jmp
mov
filds
sub
push
xorl
int3
call
sbb
shll
sub
enter
lret
ficoml
out
mov
stc
lret
into
sti
mov
scas
lcall
or
push
notl
cltd
cltd
out
mov
int
cmp
adc
arpl
pop
mov
push
dec
pop
lods
dec
dec
jmp
stos
out
inc
mov
mov
ret
mov
cmpsb
sti
mov
inc
test
or
pop
pop
dec
cmp
sti
pop
lcall
dec
dec
pop
int
cwtl
jb
cmp
imul
outsl
outsb
sub
and
fcoml
shrl
mov
leave
fcomps
mov
std
sub
or
cmp
test
push
push
cli
lods
fsts
or
sti
xchg
int
pop
sbb
push
scas
fmuls
lock
aam
stc
mov
divb
cmpsb
dec
stos
inc
push
mov
out
mov
push
pop
mov
mov
ret
pop
fidivs
sbb
xlat
sbb
lahf
xlat
out
icebp
pop
stos
xor
inc
outsl
adcl
stc
cmpsb
and
in
lret
pop
mov
dec
sub
mov
push
mov
mov
movsb
aaa
mov
test
sub
dec
sbb
and
std
fwait
jne
adc
nop
fimuls
push
ljmp
sti
lods
cmp
cwtl
mov
cmp
mov
xor
add
push
addr16
jns
pop
aad
jle
lods
cmpsl
ljmp
out
mov
and
push
int3
dec
mov
lret
cmp
leave
mov
adc
call
mov
and
popf
mov
or
add
int3
mov
sub
movsl
shlb
xor
pop
dec
ja
dec
xlat
aam
imul
jbe
lcall
out
sub
ljmp
cs
mov
cmp
int3
mov
sub
movsl
scas
test
add
les
jns
mov
xor
es
nop
lock
addr16
loopne
movl
lods
inc
gs
in
mov
into
xchg
inc
test
out
stos
or
xchg
jae
pop
cld
fisubs
pop
mov
sahf
fs
outsb
inc
add
in
dec
out
mov
sahf
scas
popf
mov
icebp
out
inc
mov
loopne
xor
or
push
in
pop
mov
test
push
cmp
popa
rcr
adc
adc
lret
into
pop
and
adc
stos
imul
fsubl
mov
or
dec
lock
imul
sbb
xchg
cs
xchg
insl
in
loop
in
sub
cltd
fstpt
imul
cmp
jecxz
lahf
push
enter
or
hlt
pop
mov
and
lds
push
adc
es
jle
les
fidivl
lods
std
and
out
inc
pop
mov
ficoms
mov
scas
shll
fdivrs
fisttpl
adcl
das
outsb
ljmp
add
rol
outsb
mov
sub
add
shr
sbbl
push
dec
mov
mov
or
sahf
clc
dec
repnz
dec
jbe
int
out
stc
fsts
scas
js
aas
xor
or
repz
add
mov
repnz
xlat
adc
and
sub
xor
ret
inc
imulb
sbb
clts
xlat
int3
or
cli
fadds
arpl
xchg
push
cld
xchg
and
sbb
xchg
jnp
or
dec
pop
inc
adc
ret
cmc
pop
mov
fbld
jmp
xor
rcll
jno
mov
mov
daa
out
popf
xchg
push
jge
mov
mov
mov
mov
ja
loope
and
andl
sbb
in
imul
rcrl
pop
dec
int
out
aas
ja
or
mov
idivl
lock
mov
xchg
inc
pop
dec
cld
rolb
add
fcompl
pop
mov
cmp
orl
xor
imul
je
dec
adc
mov
mov
in
and
xor
push
jmp
icebp
rcrl
aaa
outsb
repz
sub
call
inc
mov
inc
cli
mov
jl
adc
out
sub
and
pop
lcall
mov
jns
repz
pop
xor
movsl
mov
rorb
xchg
fsubs
ss
aaa
mov
jmp
xor
xor
daa
cmp
xchg
loopne
or
sub
jp
ja
pop
push
jae
lahf
aaa
js
or
aaa
ljmp
jge
and
jecxz
pop
pop
mov
inc
cld
mov
push
pushf
or
daa
scas
mov
js
push
xor
les
shrl
mov
popf
xlat
dec
push
or
enter
dec
mov
xlat
inc
and
jecxz
aaa
and
push
jg
jbe
fld
adc
jo
and
incl
adc
sub
dec
and
cs
dec
xor
lds
pop
and
mov
sub
subb
xchg
jp
mov
jmp
pop
test
popa
or
xor
gs
ret
lea
cld
jmp
aas
call
mov
in
loop
loope
adc
repz
loopne
popa
repz
repnz
xchg
enter
test
ret
pop
mov
jnp
push
outsl
cmp
mov
aas
dec
popf
scas
mov
rclb
jp
lahf
push
mov
shl
cmp
xor
imulb
jp
fistpl
cs
aaa
or
jae
repnz
push
ss
ja
xlat
dec
cmp
outsl
inc
bound
test
xor
orb
pop
ret
cli
and
repnz
iret
sarl
pop
or
or
mov
sub
mov
sub
dec
and
mov
das
call
jge
xchg
dec
inc
cmp
push
fwait
push
out
aaa
cmpsb
adc
enter
xchg
in
xor
dec
nop
jbe
leave
lret
mov
cmp
loope
jge
fnsave
sarb
sub
lahf
aaa
pop
dec
out
pop
pushf
out
idiv
dec
insl
shrb
fnstsw
mov
add
call
sbb
sbb
int
xchg
sub
push
jl
mov
sub
xchg
imul
dec
loop
push
adc
dec
mov
xchg
fiaddl
pop
xor
stc
cmp
mov
int
rcrb
ja
lods
adcb
adc
cs
out
adc
loope
and
lea
lret
pop
and
vpaddb
add
xor
sub
pop
adc
lahf
xchg
pop
rcrl
repnz
xor
pop
rclb
nop
mov
inc
mov
dec
scas
out
xor
popl
lret
pop
push
loopne
adc
mov
xchg
in
xlat
out
es
dec
sub
pop
jne
jae
pop
scas
adc
enter
xchg
testb
nop
or
das
mov
loop
sbb
das
add
shll
or
sbb
ret
stos
cmpl
in
push
les
mov
aam
mov
sub
andl
ljmp
cmp
mov
loopw
aam
les
adc
cmp
and
mov
xor
andb
in
mov
nop
iret
insl
jmp
xchg
leave
xchg
jge
insl
dec
xor
push
push
test
dec
mov
pushf
outsb
ret
aam
inc
xor
fmuls
pop
add
add
aas
xchg
dec
xchg
leave
pop
mov
mov
xchg
fimuls
xchg
jg
sti
call
cmp
pop
dec
test
clc
push
cli
ljmp
stos
sbb
adc
imul
shlb
cwtl
std
pop
vmovhpd
mov
es
dec
lods
add
rcrl
and
or
jno
psllq
pop
sbb
push
ja
movsl
adc
jo
adc
mov
sub
dec
insl
add
leave
sbb
ficompl
aam
xchg
cmp
mov
dec
mov
pop
push
mov
aas
xchg
int3
cmp
jg
xor
mov
mov
dec
ja
cmpsb
repz
pop
repz
hlt
add
pop
xlat
mov
movsl
dec
adc
add
adc
shl
sbb
daa
int3
adc
push
and
fidivrs
out
jg
inc
das
jnp
ja
jbe
dec
dec
push
cmp
add
cs
pop
sti
das
lods
lcall
ja
jo
push
adc
mov
jp
inc
or
and
pushl
cmpsl
mov
xchg
leave
mov
sarl
lock
adc
cmc
mov
out
xchg
fists
adc
xorb
pop
xchg
xchg
jle
push
and
cmp
cmc
mov
popf
stos
daa
sbb
jb
cmp
mov
loope
mov
push
rorb
aaa
jecxz
sahf
xchg
or
inc
icebp
sbb
stos
ljmp
xor
push
mov
mov
mov
mov
jnp
aam
dec
lods
in
mov
cmpsl
and
sub
lret
and
mov
inc
inc
xor
xor
out
mov
inc
fs
ds
hlt
push
loopne
rcrb
jo
test
insl
inc
add
into
ficompl
mov
mov
add
lea
in
xchg
clc
mov
and
inc
sub
shl
jp
fadds
lea
int
fs
rorl
and
xor
xlat
inc
fs
rol
mov
adc
push
pop
sub
push
stc
aam
inc
or
xor
pop
xor
sbb
sbb
pop
js
in
lock
aaa
clc
xchg
and
mov
xchg
mov
cwtl
scas
jmp
fs
jo
inc
inc
or
pop
mov
mul
ds
pop
push
sbb
xchg
mov
enter
in
jmp
sbbb
lock
movsl
movsb
daa
loop
sub
test
icebp
dec
jp
fstpl
and
mov
xor
or
xchg
cmp
imul
cmp
in
jnp
lar
dec
fistl
and
in
lret
or
jnp
adc
imul
ss
nop
pop
lret
add
js
push
cmpb
scas
inc
dec
xchg
xor
push
mov
jnp
xor
push
mov
mov
stos
mov
jne
and
je
ja
adc
hlt
mov
daa
test
pop
xlat
xor
push
orb
xchg
xor
cmc
out
push
and
pop
xchg
jbe
push
push
sub
lods
fisttpl
push
lcall
inc
lock
add
inc
push
adc
fsubl
inc
jmp
cmp
xor
jecxz
daa
xchg
loop
std
mov
push
mov
out
jmp
enter
dec
imul
or
xor
push
xorl
sbb
cmpsl
imul
out
jle
cmpsb
mov
xchg
push
scas
imul
cmc
fldcw
aam
cmp
xchg
sbb
cmpsb
dec
push
and
push
arpl
aas
daa
push
lds
sbb
fisubrl
mov
jb
leave
lret
and
dec
popa
xchg
and
or
sbb
and
notl
orb
aas
push
add
cmpsl
loop
loope
sub
adc
pop
aad
inc
mov
cld
je
inc
repnz
mov
dec
rorb
rcr
jb
mov
jb
mov
adc
dec
fnstcw
jae
rcrb
sub
push
mov
jl
aas
push
jmp
addl
mov
cld
jb
ja
fcmovbe
mov
andl
in
add
scas
ret
subl
sub
enter
insb
sarl
mov
jns
inc
jg
fisttps
loop
cmp
push
pop
pushf
mov
insl
jae
sbb
mov
inc
daa
aas
out
inc
out
test
dec
xlat
outsl
cmp
shrb
pop
xchg
push
add
rorb
iret
dec
js
test
int3
dec
mov
sub
dec
inc
xchg
cld
es
out
testl
push
sub
push
mov
jbe
fidivrl
or
adc
mov
push
and
gs
jne
mov
shll
xor
jp,pn
add
fcomp
cli
testl
or
cwtl
sti
mov
cmp
cltd
shlb
push
pop
insb
xchg
int
inc
jmp
ja
jno
rcll
xchg
dec
push
movl
adc
jnp
pushf
jle
sub
mov
or
out
loop
xchg
sub
fcomps
adc
shrb
inc
dec
mov
sub
adc
incl
inc
push
pop
jbe
icebp
inc
sub
cmp
jnp
add
loop
dec
rcrb
fwait
jge
push
mov
sbb
mov
inc
scas
lret
sbb
imul
inc
lret
js
in
aas
sub
mov
mov
lret
popf
sarb
mov
or
pop
dec
mov
xchg
sbb
mov
mov
roll
and
mov
fimuls
aam
add
or
mov
sbb
jb
and
mov
inc
repnz
leave
and
add
sub
in
mov
jge
fidivrs
push
xchg
bound
scas
xor
shlb
xor
xor
jns
fldenv
or
test
loopne
arpl
jecxz
mov
push
outsl
enter
xchg
push
pusha
mov
jb
daa
movsb
lock
pop
cmp
iret
fidivs
iret
adc
cmc
xor
sbb
mov
sub
adc
insl
and
add
lods
setle
into
icebp
leave
icebp
dec
xor
and
in
ret
sbb
jle
in
pop
inc
mov
sbb
loopne
mov
iret
outsb
mov
inc
lods
or
addl
sbbl
mov
sarb
cmc
dec
popf
jbe
insl
sbb
push
push
data16
leave
data16
cmc
bound
mov
add
popa
outsb
jecxz
sbb
dec
cmp
adc
pushf
dec
jge
cmp
sub
xchg
sbb
jmp
mov
lock
mov
mov
jno
xor
loopne
sub
pushf
das
pop
ret
les
dec
mov
or
stos
pop
loope
insl
sbb
cltd
lea
rcrb
cli
add
or
mov
notb
ss
jecxz
in
pop
out
dec
repnz
mov
inc
adc
inc
icebp
cmpsb
inc
jp
div
add
add
inc
icebp
cmp
or
mov
loope
sub
cltd
and
leave
cmp
loopne
cmp
dec
add
push
xchg
nop
dec
jle
and
cmp
xchg
bswap
xor
sbb
mov
fsubrl
mov
in
xchg
sbb
inc
adc
sbbl
cmp
aad
test
fxch
mov
inc
mov
mov
gs
add
jnp
flds
and
in
xchg
and
fmuls
lock
addr16
cmc
aaa
testb
sub
pop
cmp
scas
xor
xor
testl
add
dec
shrl
inc
movsb
cmp
test
and
out
adcl
lods
cltd
mov
push
cmp
ss
xchg
movsb
xchg
mov
mov
inc
out
ret
jae
in
addr16
js
repz
or
cmpsl
jecxz
and
std
into
lock
cmc
push
rolb
cmc
dec
adc
or
in
xor
fnstcw
sub
gs
mov
cmp
das
pop
mov
mov
imul
dec
jbe
test
bound
fwait
mov
std
inc
pop
jne
and
fwait
adc
xchg
rclb
inc
rcrb
and
mov
add
ljmp
cmp
rclb
pop
adc
test
sahf
sub
adc
loopne
test
orb
xor
dec
xchg
aad
std
enter
daa
jmp
addb
pop
sub
gs
loope
push
inc
sub
pop
mov
icebp
dec
js
orb
sbb
pop
sbb
aad
xor
xor
dec
sti
add
push
insl
jae
or
xchg
or
rcrb
sub
jbe
popf
in
mov
test
mov
das
fs
sub
loopne
cmpsb
test
inc
pop
sbb
sub
adc
std
xchg
xchg
xchg
adc
ret
out
pop
rcr
pop
movsl
jp
sub
cmp
xor
push
add
ret
bound
push
outsl
mov
adc
mov
or
aam
inc
dec
add
enter
mov
or
adc
dec
pop
imul
ss
test
sbb
ds
pop
push
mov
mov
rcll
in
enter
fisubl
clc
dec
shrl
or
lahf
frstor
sub
xchg
dec
test
jb
lods
adc
ja
xor
cmpsl
in
out
and
inc
xchg
movsb
mov
inc
js
push
dec
jo
fs
or
dec
cmp
popf
dec
into
mov
outsb
testb
mov
adc
es
xor
lahf
adc
adc
mov
lods
sbb
xchg
adc
cmp
stos
pop
add
les
xor
mov
fists
das
cmp
mov
sbb
push
repz
cli
sahf
das
push
mov
push
adcl
sub
or
addb
aad
and
xchg
pop
lods
push
aaa
jne
push
sub
mov
inc
lahf
movsb
mov
popf
xchg
int
xchg
out
and
mov
into
mov
ds
popa
notl
call
mov
mov
aas
inc
mov
pop
cltd
mov
aas
dec
push
test
outsl
push
es
cs
mov
fs
rcrl
outsb
xchg
icebp
into
adc
mov
pushf
imul
and
mov
sbb
loope
hlt
cli
xor
orb
push
mov
dec
insl
adc
cs
lea
pop
adc
scas
bound
pop
jns
inc
inc
and
mov
jmp
in
in
testl
inc
inc
and
std
and
test
vsubpd
jle
jp
int
das
mov
lret
sbb
jo
xor
push
xchg
ror
fs
or
mov
call
js
shrl
je
nop
outsb
sbb
test
lock
mov
mov
push
pop
jmp
jmp
sub
or
rorl
repnz
scas
ss
xor
aam
repnz
jl
jbe
push
inc
cmp
add
dec
mov
mov
fs
inc
gs
mov
aam
out
stos
jnp
and
popa
aam
and
dec
mov
and
jns
outsb
and
insb
ffree
bound
mov
clc
or
pop
jg
leave
int
jbe
inc
fisubs
mov
sbb
rep
test
cli
clc
stos
push
clc
lods
test
cmp
and
sarl
loop
pop
cmp
pop
push
xchg
adc
mov
hlt
data16
mov
outsl
jecxz
jl
xchg
xor
jp
test
mov
loope
inc
fsub
mov
push
jge
xlat
mov
idiv
and
js
push
int3
nop
jnp
jg
xchg
push
je
leave
xchg
mov
cmc
mov
or
stc
leave
enter
dec
nop
jmp
jbe
mov
and
inc
or
test
rcrl
ror
adc
outsb
cs
jnp
insl
mov
jl
ljmp
push
fisubl
pop
arpl
stc
inc
push
dec
je
mov
popa
mov
mov
lods
adc
clc
cmc
inc
add
fimuls
ret
pop
xchg
nop
outsl
mov
mov
popa
dec
or
jecxz
icebp
push
jecxz
in
psrlw
cmp
push
ret
mov
jne
sbb
mov
movsl
jge
movsl
sbb
hlt
les
cltd
bound
dec
gs
mov
add
pop
leave
push
sahf
dec
divl
dec
and
imul
jp
int
in
outsb
mov
mov
lods
popf
shr
push
sbb
mov
enter
fnsave
jne
in
addl
fs
nop
call
dec
popf
hlt
xchg
push
push
nop
js
jns
sub
mov
gs
mov
out
cmp
sub
and
and
nop
xchg
push
push
aaa
sbb
shl
push
sbb
sbb
add
aad
mov
xchg
xchg
jno
mov
push
jo
in
dec
mov
mov
xor
xchg
mov
add
mov
cmp
push
xor
add
add
xchg
adcb
popf
lahf
int
pop
jle
fwait
in
xorl
add
mov
or
daa
adc
dec
and
cli
jmp
stos
dec
or
stc
rcl
neg
insl
push
enter
jl
sbb
push
sar
cmp
hlt
lds
inc
or
jge
lods
push
mov
fdivl
pop
cmpsl
loopne
mov
outsb
lods
addr16
jmp
mov
jecxz
xchg
mov
ficoms
sti
sbb
sar
or
inc
cmp
push
decl
and
jmp
add
pop
push
outsl
aaa
sbb
push
arpl
daa
lea
mov
js
lcall
je
add
shrb
cmp
fidivl
jge
sbb
shlb
pop
cmp
sub
and
test
mov
or
outsb
xchg
add
rorl
lock
mov
test
dec
inc
lret
insb
cli
xor
repnz
cmp
lahf
add
fs
xor
jb
and
popa
loop
cs
js
das
dec
inc
xchg
insl
test
popa
xor
and
cli
cltd
mov
fldenv
xchg
lea
cli
loope
addl
clc
xor
sbb
fwait
and
mov
xor
pop
sub
fwait
addr16
fidivl
pop
inc
dec
imulb
stc
icebp
imul
xchg
outsl
shl
mov
fmuls
repnz
or
pop
fiaddl
dec
sti
mov
or
sub
or
mov
and
xchg
dec
in
sub
incb
xchg
aad
cmpsl
mov
movsl
aad
lock
scas
mov
push
push
xor
cmp
cmp
dec
lock
and
adc
pop
sbb
lcall
adc
mov
sahf
adc
pop
xchg
push
jo
scas
std
mov
mov
scas
xchg
jae
xlat
xchg
ret
push
das
shll
int3
xor
in
mov
lret
lahf
mov
loope
jg
in
pushf
jnp
inc
ja
xchg
mov
hlt
fs
or
jp
addr16
pop
push
imul
sub
mov
cmpsb
dec
push
test
out
in
test
out
call
ficompl
aaa
fisubrl
xchg
xchg
dec
add
mov
orb
pop
mov
aad
sbb
fisubs
pop
xchg
cmp
dec
mov
pop
aas
stos
lods
int
xor
fdivs
js
fstl
movsl
sub
cltd
ljmp
lods
xorb
lock
cmovg
cltd
pop
clts
into
add
test
mov
ds
data16
lods
jne
popf
sahf
stos
add
pop
xchg
dec
imul
push
push
js
in
xchg
mov
jecxz
sbb
aas
roll
pop
in
inc
xor
andb
sub
scas
xchg
xchg
mov
frstor
sub
or
std
inc
stos
add
lret
mov
insb
sub
sub
inc
fadds
pop
mov
es
or
cmpsb
sub
outsl
cmp
std
jb
lahf
push
push
adc
push
jb
push
subb
cmpsb
mov
jp
sbb
ret
mov
loopne
sahf
iret
inc
pushfw
fildl
adc
adc
rolb
xor
mov
int3
jo
pop
shlb
pop
mov
dec
lods
jae
out
lods
das
sub
push
cltd
xchg
stc
jle
adc
push
mov
fisttps
arpl
scas
inc
loope
jmp
arpl
outsl
cwtl
cmc
inc
les
pop
pop
push
sub
xor
mov
add
lret
rcll
and
sbb
shrb
imul
pop
inc
jb
push
pop
sbb
fcmovnbe
add
or
jno
add
daa
or
cmpsb
inc
ljmp
fiadds
ret
lea
jmp
jge
fidivs
push
repz
mov
dec
arpl
mov
stos
add
sub
loope
mov
stos
call
jb
outsb
fmull
mov
loopne
andl
and
cs
pusha
dec
cmp
inc
addr16
xor
jge
pushf
popa
sti
jne
frstor
pushf
ja
dec
in
fsubrs
int
loop
jno
push
std
stos
xor
sbb
xor
lret
lods
add
addr16
cmp
or
insl
les
cli
mov
iret
and
jmp
rclb
sbb
add
cmp
fdiv
in
jge
cmpsb
andnps
out
pop
int
push
repnz
sub
js
dec
ljmp
mov
dec
aam
lock
sub
mov
fcmovb
sub
and
lcall
mov
or
das
loop
stc
sub
pusha
scas
in
enter
push
ret
fsubr
dec
inc
jns
je
cltd
lds
mov
xchg
jmp
push
aas
ljmp
mov
shr
stos
pop
and
mov
arpl
and
sub
jno
or
sbb
test
sub
arpl
out
push
shlb
cs
stos
jne
sub
int
xchg
ret
in
movb
insl
lea
aam
adcl
out
xchg
push
adc
add
xlat
loop
imul
lret
jo
loopne
aaa
inc
scas
lea
inc
jge
mov
jp
call
sbb
stos
aaa
or
test
add
stos
rclb
cli
mov
repnz
jp
push
push
dec
sub
sbb
sub
pop
pop
std
push
push
adcl
jmp
cmp
sbb
mov
adc
leave
inc
ret
lea
ja
shll
imull
insl
mov
jg
lret
xchg
notl
stos
inc
test
jb
add
repz
sti
dec
addr16
push
in
add
push
int3
stos
lods
pop
mov
pop
out
inc
push
pushf
add
jbe
mov
inc
jo
movsb
sbb
add
rcrb
neg
sbb
arpl
ret
andl
adc
adc
testb
insl
into
aad
mov
mov
sbb
shlb
add
orb
mov
mov
mov
push
shrl
lods
data16
jae
xchg
jl
test
mov
dec
mov
or
adc
lea
lcall
into
cmc
or
jb
sbb
sbb
sub
push
or
inc
push
outsb
push
adc
sbb
lahf
jns
add
mov
push
inc
cli
cwtl
gs
jp
int
pusha
lods
arpl
sbb
mov
mov
jl
and
and
in
cmp
mov
xchg
lock
push
xor
cmp
push
mov
sarl
lret
pushf
iret
shr
sub
jnp
cmp
test
and
sub
decl
mov
pop
repnz
mov
ds
xor
fdiv
xor
push
bound
pop
js
sbb
inc
clc
fldcw
mov
lret
rorl
mov
es
lods
pop
mov
pop
xor
mov
and
jb
pop
xchg
xor
dec
in
pop
in
sbb
mov
nop
lcall
dec
cmp
xchg
push
test
or
cld
js
sub
sbb
lds
mov
in
sub
xor
vmread
mov
jmp
ja
fs
and
sti
jo
and
outsl
or
je
scas
mov
mov
mov
in
out
and
sub
and
fs
or
push
push
aad
sbb
enter
jmp
test
cwtl
xor
xor
cmp
mov
mov
xor
cmp
int3
push
inc
xor
and
xor
sub
aas
mov
incl
jb
test
push
xchg
fcoml
xlat
lea
jge
push
push
aaa
or
mov
adc
lock
fdivl
xchg
jg
inc
adc
or
imul
aaa
push
add
jbe
fidivrs
xchg
sub
dec
leave
push
bound
mov
sub
pop
dec
leave
jmp
and
xor
ljmp
cmpsb
popf
pushf
cwtl
int
rcrl
pop
or
jmp
lcall
adc
ret
addb
add
in
xchg
mov
fcmovb
pop
mov
mov
inc
and
jecxz
mov
fdivrs
xor
ret
mov
mov
cmp
int3
call
pop
mov
gs
cmp
out
addr16
out
out
outsl
push
mov
aas
fldcw
add
or
addr16
pop
mov
pop
loopne
push
adc
sbb
mov
mov
cli
andl
out
lea
xlat
add
dec
js
out
mov
cld
xchg
mov
push
enter
pop
add
push
loope
ficompl
jno
pusha
fstl
inc
cld
shlb
ficoml
mov
mov
or
push
fiaddl
sbb
jge
jb
sbb
or
mov
shlb
lret
xor
fidivs
xchg
out
add
sub
mov
jecxz
lret
mov
or
mov
insl
push
or
push
mov
mov
insb
outsl
xchg
sub
lods
xchg
cltd
call
leave
xchg
pop
stc
mov
xor
bnd
xor
int
xchg
js
repnz
mov
scas
out
dec
add
test
xchg
out
ss
pushf
in
rcll
xchg
adc
push
cmpb
xchg
and
divb
daa
xchg
push
loop
insl
shrb
sbb
loope
sbb
cmp
and
mov
scas
push
shr
in
outsb
js
inc
je
cli
inc
testb
jo
dec
cmp
mov
sbb
enter
out
inc
sbb
test
jmp
adc
jg
movsb
nop
add
loope
mov
aaa
xor
stc
mov
and
enter
xchg
insb
xchg
daa
push
xor
sbb
jb
xchg
subl
in
std
ret
in
dec
out
pop
mov
shrb
ficoms
sub
mov
xchg
popa
stc
and
xor
rorb
arpl
cmp
adc
push
das
push
out
inc
lods
in
cli
add
lods
popf
outsl
std
cwtl
push
sbb
lds
or
int
and
push
andl
mov
jae
sbb
cmp
sahf
sbb
or
movsl
or
lret
loopne
in
or
mov
movsb
ja
dec
and
repz
xchg
xor
lret
inc
or
inc
inc
mov
mov
fsts
or
in
or
push
and
aad
pop
sbb
fiaddl
call
or
mov
xor
xchg
jnp
outsl
xor
pop
adc
test
xlat
jno
xor
inc
xchg
mov
xchg
xchg
lods
push
fisubl
pop
dec
lahf
xor
add
or
and
adc
dec
xchg
or
pop
out
scas
ret
bnd
cld
daa
sbb
mov
movsb
and
shlb
icebp
add
negb
inc
sahf
push
xor
xor
into
popa
add
mov
or
outsb
bound
pop
xchg
push
pop
jo
push
cmp
xor
push
shlb
pop
mov
push
in
adc
xchg
ss
aam
shll
and
hlt
sub
xchg
and
mov
inc
dec
lods
sub
aam
aad
roll
ss
fwait
push
sti
pushw
cltd
into
mov
cmpsl
repz
int3
inc
dec
xor
sub
mov
mov
xchg
mov
mov
dec
movsl
inc
lret
inc
jae
sarb
fbstp
insb
sub
cld
arpl
cltd
or
ret
inc
jae
test
int3
push
sbb
adc
push
mov
adc
mov
jae
jns
sub
sti
and
mov
je
and
bound
notl
push
push
pop
subl
lds
aas
push
mov
dec
jbe
push
xchg
and
jle
sbb
inc
repz
fiaddl
xor
add
lds
pop
inc
aas
mov
inc
and
mov
iret
loope
insb
and
inc
add
jle
mov
imul
idivb
inc
pushf
and
sbb
inc
inc
test
dec
pusha
mov
mov
adc
cmc
inc
and
sbb
fiaddl
nop
xor
out
dec
stos
push
aad
sub
incl
pop
mov
and
fwait
mov
cmp
pop
add
xchg
mov
out
ret
movhps
je
ja
scas
inc
stos
jo
gs
add
adc
cmp
ret
mov
jns
cmpsl
xchg
shrl
add
xor
fbld
sub
rcll
lcall
add
into
mov
pop
dec
jl
leave
out
or
loope
adc
pop
mov
push
or
lcall
push
stc
mov
and
cltd
nop
mov
insl
add
jb
xchg
push
out
jne
bound
das
pop
loopne
mov
out
test
loope
lds
andl
adc
mov
add
das
aam
shlb
mov
jg
insl
cmpsl
and
ja
sbb
daa
pop
jb
fsubrl
sarb
and
aas
fdivrl
push
or
mov
adc
leave
dec
cmp
adc
and
cmp
cwtl
sbb
xchg
imul
in
roll
setnp
loopne
and
sbb
aam
aas
mov
xchg
jno
mov
mov
je
in
jne
sbb
pop
push
lds
bound
fidivl
in
jb
sub
inc
idiv
mov
cmc
sbb
insl
out
outsb
call
jle
ljmp
loopne
loopne
add
inc
add
shlb
push
mov
or
jne
push
add
mov
iret
lds
outsl
sti
imul
mov
pusha
mov
mov
or
adc
dec
cs
sahf
daa
loop
call
in
scas
or
imulb
jne
adc
jbe
js
push
mov
inc
push
cwtl
ds
ret
xchg
clc
enter
sub
add
jg
lret
mov
pop
dec
sbb
sub
dec
aad
fldenv
out
mov
call
sub
cs
mov
cwtl
loop
filds
pop
xor
mov
sub
dec
scas
lret
fwait
cmp
or
jmp
add
push
mov
and
jnp
arpl
dec
push
imul
adc
adc
divb
cmpsb
in
mov
hlt
in
inc
cld
iret
out
mov
mov
push
mov
jo
aas
test
out
lahf
inc
in
inc
fmull
jbe
stos
jne
das
test
imul
lea
mov
adc
loopne
fisttpl
xchg
fbld
dec
inc
or
mov
popf
xor
repnz
stos
fs
and
jecxz
push
sub
cli
push
pusha
leave
fidivs
stos
pop
cmpsl
mov
xor
out
mov
jnp
and
cld
std
pop
das
mov
xchg
push
popf
dec
or
rsm
xor
push
arpl
sti
mov
pop
xchg
mov
fcomip
sti
dec
xchg
sbb
pop
mov
mov
loop
pop
int
in
xchg
pop
leave
js
bound
xchg
rcrb
je
xchg
lret
cs
pop
out
sarb
mov
push
movsl
push
aaa
call
or
fistpll
daa
inc
cli
fs
arpl
shll
iret
repz
and
nop
pop
pop
or
shrb
pop
insl
lahf
xchg
mov
xor
ss
loop
pusha
mov
inc
jb
andb
jp
mov
cltd
fldenv
inc
sbb
push
addb
fwait
sub
lods
int3
push
arpl
stc
xor
pushf
imul
leave
jo
mov
divb
add
in
jg
jnp
xchg
or
test
mov
push
adc
mov
inc
jo
and
repz
out
pop
fcmove
outsb
dec
iret
adc
push
cli
sub
jnp
push
ret
pop
rorl
adc
lret
sbb
jge
repnz
ret
or
aad
loope
rorb
stos
call
das
xorb
push
mov
pop
or
jb
shr
add
sar
movsl
jno
or
xchg
lcall
push
pop
xchg
stos
inc
or
or
call
xlat
nop
xor
mov
ja
jo
inc
dec
mov
out
sub
test
push
mov
add
pushf
shrl
push
jle
cmp
sub
pop
sbb
fiadds
jns
dec
sub
cmp
divl
jne
repz
std
in
test
fs
and
cli
push
movsl
add
in
scas
or
loope
icebp
lds
push
scas
loopne
cwtl
sbb
lods
out
cmp
or
daa
cmp
insl
inc
cmp
mov
outsl
shl
sub
and
adc
sbb
and
cs
pop
pop
loopne
mov
divb
sti
cmp
cmp
inc
and
fistl
cmpsb
jp
lods
sub
addr16
and
or
push
cltd
test
push
cmp
mov
rcl
mov
ror
into
sub
jns
das
ficoml
outsb
cmp
sub
push
sub
insl
notb
or
rclb
cltd
pop
jl
imul
jns
and
or
ss
push
js
pop
loopne
mov
sub
fs
cmp
in
out
jmp
lea
movsb
jae
lea
ja
and
sub
pop
add
adcb
dec
jbe
mov
jae
idivb
icebp
adc
cli
lods
out
test
mov
mov
and
lcall
mov
mov
gs
rolb
cltd
sarl
jb
xor
out
mov
jg
imul
ja
sub
add
mov
jle
xchg
dec
adc
fidivl
and
jne
inc
mov
lock
shl
cmp
ja
data16
test
push
mov
mov
xchg
pusha
ret
stos
add
jae
or
enter
dec
fcomp
inc
pop
addl
jmp
lds
push
add
or
stc
xchg
repz
loop
jne
es
fsubrl
dec
andb
jge
dec
outsl
out
scas
out
fnsave
or
xor
xlat
dec
pop
cmp
mov
in
fmulp
or
pop
or
mov
loop
ret
test
repnz
outsb
int3
int3
fiaddl
imul
push
inc
jno
call
into
fucomp
add
rol
inc
jae
cmp
jae
shll
sti
xchg
jbe
or
xor
push
cltd
xchg
popf
mov
mov
add
xchg
jno
popf
xlat
imul
cld
shll
int3
sub
fsubl
fistps
mov
jae
jne
xchg
jle
in
fucom
enter
pop
daa
mov
jge
push
cmp
sti
dec
neg
lret
mov
imul
repnz
xchg
jb
pop
fwait
mov
int3
test
adc
test
insl
pop
push
dec
insl
push
js
dec
sbb
cmpsb
and
push
lea
xchg
xor
jae
je
out
cmp
jge
or
xor
cmpl
pop
lock
xor
dec
cli
inc
sub
mov
cmc
inc
out
lcall
adc
xor
pushf
jae
add
jmp
push
mov
mov
push
jmp
sbb
ds
pop
mov
inc
cmp
stos
pop
sahf
inc
mov
or
outsb
adc
xchg
add
fstp
sub
call
inc
add
jp
dec
cmp
js
nop
scas
lods
mov
lock
shl
and
mov
and
xor
sub
cmp
mov
sub
cmpsb
movsl
mov
xor
daa
int3
push
out
mov
loopne
push
inc
mov
bound
popa
or
shrl
add
mov
push
aaa
mov
cmp
insb
mov
mov
lcall
repnz
cmp
js
mov
cmp
and
jmp
xchg
mov
sub
sahf
addb
sahf
jbe
jno
xorl
mov
inc
mov
hlt
rclb
push
cmp
push
out
jae
dec
push
jmp
pop
into
push
pop
int
or
pop
arpl
imul
insb
mov
mov
dec
test
loop
rcl
popf
xchg
and
cmc
dec
mov
cmp
and
fsubr
inc
mov
push
mov
add
fcmove
ds
xchg
push
arpl
sub
sub
dec
test
shlb
pop
test
cwtl
mov
shll
mov
jb
sbb
aad
jl
push
enter
out
xchg
arpl
mov
adc
sbb
pop
pop
jae
xchg
mov
jns
mov
inc
imul
pop
pusha
xor
orb
test
subl
pop
xlat
cwtl
cld
fsubrl
dec
adc
dec
xchg
notb
shll
clc
sbb
rorl
dec
push
pop
jmp
adc
sub
fs
or
jl
cmpsb
add
repnz
cmpb
inc
mov
call
inc
pop
or
xchg
roll
pop
push
mov
jbe
testl
sbb
sub
ret
push
pop
sbb
add
insb
push
das
repnz
mov
lock
mov
das
sbb
addb
or
dec
shlb
rclb
mov
imul
xor
cld
xchg
je
fwait
dec
out
pusha
sbb
mov
sbb
jo
test
pop
pop
imul
xchg
sbb
dec
push
iret
sbb
add
cmpsl
mov
cmp
pop
lods
xor
rclb
fwait
mov
leave
movsb
fwait
js,pn
adc
in
aad
inc
and
int3
mov
pop
rorl
outsb
pop
cmpl
add
fnsave
inc
fdivrl
in
dec
mov
push
adcb
sahf
pop
jo
neg
std
inc
or
loop
clc
in
jno
or
flds
cmpsl
adc
sub
xchg
je
push
js
aaa
notl
dec
mov
xchg
add
push
mov
adc
scas
mov
test
fnsave
std
and
mov
orl
or
aas
mov
or
arpl
in
pop
in
stos
mov
rolb
int3
adc
cmp
dec
push
movsl
cltd
shrl
and
push
push
insl
out
repz
enter
jno
push
in
mov
je
fucomp
mov
mov
lea
cld
mov
jbe
repz
test
and
data16
cmpl
pusha
shrl
gs
jno
loope
ret
xchg
sub
xchg
sub
test
aaa
stos
ret
or
fimuls
mov
aad
cmp
xor
jg
addr16
cmc
imul
mov
shl
cmp
test
icebp
xor
sbb
cmp
cmpsb
add
mov
cli
mov
test
ds
mov
lods
andb
ljmp
cmpsl
adcl
mov
ja
mov
fildl
push
sub
mov
das
xchg
adc
jp
xchg
mov
je
xor
lahf
or
pusha
jb
divl
jle
xchg
popf
add
stos
xlat
cwtl
scas
cltd
xchg
xchg
std
mov
xchg
lcall
push
subb
pop
aas
idivb
sbb
xchg
orb
push
inc
cmp
dec
pop
add
adc
pop
aam
push
xchg
mov
xchg
mov
and
mov
mov
push
std
es
dec
lds
leave
sbb
aam
push
fimull
call
inc
mov
sub
jg
push
jl
das
and
jb
movsb
inc
sahf
mov
icebp
mov
movsl
sbb
mov
fcmovne
je
addb
or
fnstsw
lret
in
lods
je
mov
push
push
sub
dec
int
sbb
adc
adc
mov
jo
lahf
xor
xlat
ss
or
xlat
in
std
sub
loop
xchg
cvtpi2ps
dec
mov
lret
push
add
mov
leave
lea
push
jae
xorb
das
xchg
mov
sbb
mov
lods
das
hlt
push
jecxz
rclb
hlt
nop
mov
inc
repnz
ret
dec
in
xor
ja
aam
into
outsl
add
aaa
cmp
cmpsl
and
mov
data16
fld
sbb
dec
sbb
lock
cld
xor
ds
mov
xchg
popf
scas
push
inc
repz
add
ljmp
cmc
push
ss
fwait
cli
jecxz
add
xlat
xor
and
fst
sti
cmp
mov
add
push
jbe
inc
fwait
adc
lea
or
call
pop
inc
dec
scas
insl
pop
add
xor
lods
rcll
inc
imulb
inc
cltd
sarl
out
sbb
scas
pop
sub
and
mov
test
pop
outsb
mov
ljmp
imul
adc
negb
es
or
mov
stos
add
fistl
jbe
dec
imull
add
test
mov
insl
test
aad
out
cmpb
lahf
mov
fwait
or
cmc
mov
test
cmpsl
frstor
push
pop
mov
xchg
pop
and
mov
xor
jo
and
and
mov
or
inc
daa
pop
adc
mov
ficoms
xchg
sbb
xchg
outsb
notl
and
cmp
jns
add
nop
adc
popa
rcr
mov
ret
sbb
sbb
out
sub
popa
shrd
movsl
xchg
xor
sbb
push
adc
jnp
lock
and
pop
or
std
inc
xor
stos
cli
sub
push
mov
xchg
scas
lea
cmp
sahf
imul
pusha
mov
xor
dec
mov
dec
cmpsb
cmp
push
mov
dec
leave
out
sbb
mov
adc
xchg
nop
inc
bound
negb
int3
stos
mov
orl
jb
enter
cmp
mov
inc
fwait
mov
in
jno
xchg
jmp
sub
notb
jne
sbb
cld
std
cmp
jns
or
popa
jb
xorb
or
enter
inc
jae
loope
mov
inc
jmp
push
ret
fistpl
push
xchg
out
jb
adc
inc
xchg
xor
bnd
push
fcomps
pop
jno
int3
lahf
inc
imul
cld
aam
lods
xchg
mov
ficoml
test
movsl
mov
int3
jae
jno
clc
test
test
orps
fidivl
push
fwait
sub
pop
mov
dec
push
mov
inc
sbb
xchg
popf
mov
das
cmp
mov
adc
dec
mov
scas
popa
js
mov
clc
mov
mov
fistps
cwtl
adc
icebp
gs
dec
inc
aas
hlt
je
push
pop
adc
cs
jecxz
push
pop
loopne
mov
xor
jnp
mov
or
jecxz
lods
dec
sub
push
push
mov
lods
cld
xchg
xchg
fsubrl
fimuls
pop
mov
mov
xchg
mov
test
arpl
fisubs
das
and
mov
adc
cmp
cmpsl
ret
call
cli
stc
pop
cli
scas
inc
lods
int3
loopne
cmpsl
or
ljmp
mov
jnp
sbbb
mov
mov
hlt
ret
in
mov
sbb
pop
inc
fcompl
rcll
jecxz
bound
flds
sbb
outsl
dec
ja
adc
sti
popa
inc
jmp
add
mov
add
les
add
and
loop
push
repnz
fwait
cmp
mov
pop
mov
dec
fstps
aas
cmp
outsl
cmp
push
pop
or
out
call
lcall
mov
outsb
cmc
and
or
and
sub
dec
add
test
lcall
push
and
scas
sbb
ja
jl
aam
fiaddl
xor
inc
pop
xchg
dec
mov
ss
dec
mov
sbb
mov
fdivrl
mov
lahf
pushf
xchg
outsl
jecxz
pop
add
mov
adc
bnd
cld
jge
sahf
fucomi
push
mov
int3
sub
xchg
push
stos
lret
cli
cmc
inc
mov
jp
mov
jp
sar
add
lea
xor
ja
push
imul
and
jmp
adc
cmp
push
or
das
lods
push
out
push
scas
xor
shrl
sbb
pop
dec
xchg
icebp
mov
in
inc
inc
nop
clc
pushf
xchg
lret
stos
dec
divl
pushf
mov
adc
inc
pop
xchg
loopne
dec
mov
das
aad
pop
push
aas
mov
sbb
mov
mov
sub
jl
lea
pop
leave
lock
repnz
and
dec
cs
idiv
mov
rorl
lret
lock
cmp
jle
out
xchg
psllw
add
nop
jl
push
shlb
fsubl
mov
out
xor
and
movsb
dec
in
sahf
movsl
mov
pop
jmp
cwtl
incb
xor
and
int
cmp
sub
pushf
les
xor
int3
mov
jecxz
testl
mov
xlat
mov
xchg
in
adc
shll
das
sahf
daa
adc
and
sahf
adc
outsl
shl
or
in
ja
leave
mov
sbb
movsb
pushf
dec
ror
loope
add
decl
pop
stos
jle
stos
pop
inc
lret
shlb
shl
dec
rcl
pop
fucom
and
in
pop
jp
mov
adc
cmpsb
jns
subl
push
xchg
jb
ret
fbstp
sbb
jl
imul
out
xchg
sbb
fidivs
clc
push
ss
out
push
scas
insl
jmp
fisubs
je
sub
cmp
addb
inc
add
pushl
or
mov
loope
test
jmp
jbe
mov
cltd
outsl
sub
insl
push
push
pop
jno
stos
inc
or
mov
sub
frstor
out
loope
mov
andl
pop
lahf
inc
and
jle
pop
fcomp
negl
ret
add
cmp
adc
clc
ss
and
mov
test
push
mov
insl
xor
out
push
or
or
jne
sub
dec
cmp
add
sub
dec
mov
ss
fwait
ja
mov
dec
lea
bound
push
mov
jbe
mov
ss
mov
nop
mov
add
stc
das
loope
mov
cmp
push
lds
push
adc
push
jno
jmp
fwait
es
push
ret
cmpsl
in
in
mov
sub
roll
ret
addr16
call
mov
pop
dec
movsb
jp
xor
pop
shr
xchg
aam
jno
out
mov
inc
mov
pop
xchg
js
or
adc
adc
aam
mov
daa
gs
xor
mov
ds
mov
push
cwtl
xchg
pushf
shrb
push
inc
adc
inc
lds
bound
sti
push
and
and
sbb
fstpt
hlt
dec
inc
cmp
push
push
and
icebp
jg
dec
push
ror
sub
add
push
pop
shrl
lret
in
daa
mov
cmc
lret
sub
jae
bound
jecxz
inc
lcall
xchg
stos
aam
out
mov
ljmp
xchg
stos
ret
ret
subb
xor
lds
add
inc
dec
cmp
iret
ret
inc
mov
sbb
cmc
cmp
add
adc
and
imul
push
dec
push
pop
jecxz
jg
icebp
lret
push
xchg
push
call
and
push
popa
and
or
push
shll
pop
sub
fldenv
cmp
fsubrl
xor
push
loope
mov
jno
out
mov
xchg
xor
mov
cld
adc
lds
fldl
aas
pop
js,pt
fstpl
mov
mov
in
push
fidivs
xchg
xchg
jmp
pop
sub
lds
lahf
das
and
sbb
mov
mov
sub
xor
nop
add
inc
rcrb
or
loope
pop
pusha
sti
inc
ds
pop
jae
stos
mov
sub
rcrl
pop
hlt
int
cmpsb
int3
sti
pop
daa
or
add
inc
pushf
cltd
fistpll
lcall
xchg
xor
cmp
jge
test
pop
lds
pusha
addr16
aas
mov
idiv
mov
test
push
test
movsb
jmp
mov
xchg
push
loopne
movsl
push
jmp
dec
imul
sbb
mov
sub
xchg
pop
jbe
hlt
lea
lret
inc
sub
std
mov
cmpb
push
in
xor
sbb
gs
hlt
data16
dec
push
inc
dec
and
iret
bound
pusha
addb
je
adc
cmc
outsb
inc
in
adc
mov
call
mov
adc
bound
fistpl
ljmp
es
lods
mov
repnz
mov
sbb
test
pop
cmpsl
ftst
int3
fcom
jns
push
scas
xchg
jmp
lcall
cmc
sahf
mov
js
out
iret
xchg
shrb
sbb
and
pop
popf
mov
icebp
loop
inc
xor
xor
jne
mov
and
xor
push
std
fimull
stc
dec
and
jle
pusha
add
jmp
addl
xchg
lret
cwtl
in
ds
imul
mov
mov
xchg
add
pop
lcall
arpl
hlt
stc
mov
not
cwtl
mov
call
das
repz
in
jnp
data16
mov
cmp
mov
fadds
rolb
enter
add
les
cmp
fnsave
sbb
inc
xor
xor
lea
stos
dec
insb
loop
std
cwtl
mov
jp
push
dec
scas
xchg
popa
cld
jmp
repnz
pushf
xor
out
int3
add
dec
out
loope
lea
fdivr
mov
fs
cltd
mov
scas
sbb
data16
pop
out
push
adc
cs
repz
jno
imul
jmp
push
neg
mov
push
or
or
out
cwtl
pop
mov
sbb
push
cmp
sub
sbb
sbb
jo
pop
mov
xchg
push
movsb
jecxz
out
out
popf
movsb
shlb
push
fcoml
inc
and
dec
and
adc
aas
les
repnz
xchg
adc
mov
fisubl
insl
and
and
mov
mov
xor
out
fcompl
mov
xchg
cmpsb
push
aam
push
bound
dec
ds
loop
adc
adc
ss
sbb
push
clc
jo
popa
xor
jno
jmp
aas
jp
cmp
test
fcomi
int
andb
mov
shlb
mov
mov
push
fistl
jge
mov
mov
lods
in
pop
repz
aam
std
and
in
movsb
pop
sub
fmull
mov
andb
push
fisttpl
aad
cmp
adc
pop
xor
aas
add
aaa
jge
test
xchg
mov
in
mov
shll
mov
enter
or
mov
ret
add
popa
popw
fistps
pop
popf
mov
arpl
dec
out
psrld
cli
stos
shlb
mov
inc
push
mov
or
mov
xor
and
aam
fwait
inc
or
and
movsl
jb,pn
test
add
arpl
mov
int
loop
test
push
in
inc
sbb
adc
pushf
add
fildl
adc
cwtl
sbb
mov
xchg
idivb
ljmp
fs
pop
repz
jbe
js
xrelease
aam
push
mov
add
lods
or
imul
into
sub
movsl
jae
xchg
scas
idiv
mov
data16
cmpsl
sub
mov
mov
inc
xor
or
push
and
mov
cmp
cmp
mov
cmp
mov
cmp
sbb
aam
mov
jl
cmc
test
xor
xchg
pop
push
mov
push
dec
repz
cmc
mov
in
into
sub
das
or
jae
pop
inc
outsb
mov
add
mov
movsb
xchg
add
mov
xor
daa
inc
cli
lahf
push
cmp
cmpsb
adc
jo
sub
aad
cwtl
mulb
add
sub
in
xchg
incb
push
in
loop
jno
iret
adc
std
sub
jle
xchg
test
or
dec
push
mov
je
fnsave
xor
mov
lret
cli
lahf
and
cs
dec
xchg
in
mov
jno
das
mov
stos
insb
push
sub
jle
and
outsl
pop
adc
jge
lds
xchg
outsb
mov
inc
dec
pop
push
mov
pop
imul
mov
jne
jns
xor
fdivrs
xor
out
test
push
mov
js
dec
notb
mov
jb
jecxz
push
aas
mov
xlat
popa
mov
mov
or
pushf
ljmp
inc
xor
or
push
aad
xor
mov
aas
sbb
adc
outsl
or
das
es
cltd
fwait
sar
mov
dec
in
mov
rol
fsubrl
ret
pop
sti
out
mov
add
ds
mov
xor
sbb
daa
push
xlat
xchg
cmp
cs
movsb
xchg
dec
pop
xor
and
lods
inc
dec
test
and
jecxz
or
enter
add
shll
fsubl
sbb
fildl
sti
cmpsl
dec
cmc
dec
out
jo
xchg
hlt
out
incl
fwait
add
ror
inc
in
push
stos
sbb
jge
fld
ss
inc
cmp
loope
dec
adc
test
mov
loopne
cs
xchg
mov
mov
sti
loop
aam
dec
jecxz
in
movsb
ljmp
push
mov
push
jbe
ret
xchg
stc
cmpsb
clc
mov
add
in
push
push
int3
cmpsb
sbb
cmp
jge
fisubrs
repnz
cmp
mov
test
outsb
mov
mov
cld
sub
ds
dec
push
ljmp
dec
xor
mov
push
addr16
dec
pusha
bound
push
outsb
divb
push
test
xchg
pushf
lret
cmp
popa
pop
shr
inc
add
xchg
lret
mov
jnp
fcoml
push
out
lea
aam
test
mov
in
sbb
scas
in
push
jge
adc
sub
inc
jmp
pop
sub
enter
cwtl
xor
pop
inc
pop
das
stos
mov
enter
aaa
cmp
loop
in
lods
xor
push
jbe
jo
addl
movsb
popa
rorb
pop
ror
jo
shrb
fcmove
mov
das
jo
ret
xchg
in
push
movl
popf
test
and
push
das
mov
sub
fdivrl
fnstcw
jge
rorl
xchg
jmp
notl
and
mov
dec
mov
mov
xor
push
jecxz
das
stc
mov
pop
dec
push
mov
sub
test
cmpsl
push
adc
cmp
out
fsubp
aad
fnstenv
out
sarb
out
xlat
ficoml
mov
add
push
mov
xorb
scas
xor
imul
mov
jb
enter
nop
cwtl
adc
test
xor
xchg
ret
sbb
dec
cmp
jecxz
or
sub
sub
or
dec
jecxz
fwait
rcll
insb
test
push
mov
ds
test
sbb
mov
mov
loopne
inc
push
jne
sbb
in
cli
push
in
roll
push
pop
dec
or
pop
test
and
adc
test
cpuid
pop
mov
jo
bnd
fldcw
pop
jmp
jge
push
call
xchg
mov
push
adc
iret
mov
imul
fwait
cmpsl
xor
jne
mov
sbb
and
fadd
rol
shr
cmp
dec
and
push
jle
and
and
in
divb
add
and
ja
outsl
xor
loopne
add
out
xchg
ret
adcb
mov
test
out
fsubs
stos
mov
mov
jl
in
xchg
fildll
jecxz
hlt
sbb
pop
mov
xor
mov
cs
sub
inc
out
gs
in
jecxz
out
xor
in
adc
jg
jle
or
jl
xchg
sbb
cwtl
fdivr
sti
mov
popa
fistpll
cmp
adc
ja
mov
frstor
or
out
adc
push
aas
pop
je
or
push
out
inc
jns
call
mov
faddp
or
into
mov
ljmp
sub
ss
dec
stc
sub
cmpsb
fists
adc
xorb
data16
stc
adc
js
or
pop
cmp
insl
sbb
adc
mov
popa
stos
aaa
sub
shrb
popa
sbb
loopne
xchg
jg
fwait
loop
pop
add
add
mov
jb
push
pop
movsb
aaa
pop
popf
jg
ja
imul
imul
add
pop
std
ja
pop
mov
jg
in
call
cltd
dec
dec
mov
ficompl
cmp
add
andb
mov
push
jnp
mov
inc
mov
in
adc
dec
mov
out
sub
adc
stos
out
adc
sbb
repnz
push
fnstsw
mov
cld
mov
pop
inc
xchg
mov
in
testl
add
imul
mov
sub
in
pop
in
mov
aas
cmc
aaa
mov
clc
jnp
arpl
ljmp
incb
sbb
mov
mov
out
xchg
divl
out
jno
lods
adc
xorps
shlb
ss
js
shl
sbb
test
and
push
dec
jno
lea
cmpl
or
pushf
movsb
leave
xor
cmc
jns
test
ffreep
mov
xor
test
iret
and
push
scas
xlat
out
pop
test
mov
bound
ficoml
jl,pn
sub
pop
fistpll
mov
movsb
pop
cltd
sbb
es
pop
jmp
mov
pop
inc
dec
cmp
jo
mov
sub
gs
sub
ror
inc
out
ret
mov
mov
jl
pop
jecxz
nop
je
fs
les
cltd
sbb
mov
stos
push
inc
mov
aad
dec
add
arpl
xchg
sbb
mov
mov
pop
mov
and
mov
jae
fs
imul
insb
js
daa
mov
xor
enter
lods
fmuls
push
mov
jle
pusha
jo
inc
bound
sbb
jno
lcall
cs
cmpsl
cmp
xchg
jae
cs
fstpl
fs
xchg
lret
dec
pop
jo
jl
popa
xor
pop
fxam
test
sbb
into
pop
les
dec
mov
or
jge
inc
hlt
jp
fwait
xchg
push
out
xchg
mov
lods
mul
adc
fimull
lods
ss
ror
test
cwtl
cmpsl
out
das
add
inc
pop
adc
outsl
cmp
mov
inc
in
cmc
jge
adcb
jge
cmp
sub
jbe
adc
loope
pop
imull
sbbb
imul
call
mov
adc
cmc
ret
jg
jns
lea
mov
fildll
lcall
xor
mov
sbb
mov
lahf
insl
mov
jecxz
push
mov
or
jns
mov
jbe
lock
mov
mov
xchg
inc
les
scas
movsb
jns
jmp
xchg
cs
popl
rorb
bound
and
sbb
fmuls
jb
cmp
dec
inc
sub
sar
xchg
sub
add
arpl
mov
clc
mov
repnz
mov
pop
mov
adc
sbb
into
lret
bound
rcrb
fmull
mov
shr
lret
mov
stos
clc
dec
jle
pop
je
and
ss
out
jne
ljmp
aad
lret
repnz
jnp
shll
dec
push
fldenv
mov
scas
test
insb
stos
out
stos
xlat
lret
mov
pop
gs
and
ds
mov
pop
clc
xor
jnp
mov
push
pop
adc
aad
popa
inc
call
push
test
repnz
cmpxchg
mov
pop
sbb
mov
jl
inc
sub
rep
pusha
shll
sti
xchg
cmp
iret
in
sahf
sbb
pop
jns
pop
imul
test
mov
cltd
inc
icebp
fnstenv
mov
add
push
xor
sti
adc
mov
mov
stos
aam
xchg
cmpsl
mov
push
push
add
leave
mov
mov
jge
or
addb
inc
into
rcll
adc
or
push
out
xlat
out
or
mov
gs
aam
mov
bnd
push
inc
repnz
ret
xor
ret
js
jmp
mov
add
pushf
pushf
pop
adc
sbb
in
xchg
inc
pop
or
lock
xor
stc
xor
pusha
sub
sbb
fadd
stos
insb
movsb
pop
shr
and
aam
adc
jecxz
jg
cmp
and
cs
xor
mov
xchg
sub
inc
dec
loopne
mov
arpl
push
fdivs
adc
mov
push
lcall
je
sub
inc
arpl
jmp
cmp
sub
push
scas
arpl
jge
mov
dec
in
inc
jge
push
andl
cmpb
sbb
fs
cmp
shrb
fs
xchg
dec
sbb
aad
adc
aas
mov
adc
imul
scas
stos
ljmp
test
jg
push
or
fists
in
xor
push
xlat
rolb
ss
lret
xor
or
popa
mov
je
sbbb
out
ficompl
xchg
and
out
js
test
mov
imul
sti
insl
lods
sub
mov
mov
ljmp
dec
insl
mov
mov
pop
push
dec
cs
jno
loopne
pop
filds
loope
dec
mulb
pop
dec
aas
shl
or
sbb
dec
or
xor
test
jno
dec
xchg
loopne
lods
or
clc
inc
push
incl
sub
outsb
cmp
sbb
sbb
outsb
pushf
dec
gs
rcrb
xor
or
outsb
cmpsl
inc
mov
outsl
pop
ja
or
je
lcall
xorb
sub
sahf
lds
add
cmp
sahf
insl
mov
nop
cmpsl
jmp
icebp
cli
mov
icebp
ja
lock
mov
jge
ss
fldl
out
fiadds
and
inc
mov
mov
das
stc
xchg
lcall
dec
jae
scas
push
pop
pop
in
insb
fdivs
xchg
mov
mov
mov
mov
fists
mov
icebp
xchg
int
inc
xor
mov
scas
lock
mov
data16
fs
decl
fldenv
adc
ss
sarb
xchg
mov
push
gs
mov
jo
pop
enter
dec
jnp
sub
pusha
bnd
scas
pop
fisubrl
lock
xchg
and
add
aaa
cmpsb
xchg
outsl
pop
xor
loopew
je
jnp
mov
sahf
cli
int3
pop
in
sub
aas
movb
cmp
push
mov
add
inc
daa
test
xchg
xchg
xor
sub
push
fcmovu
stos
inc
jecxz
lcall
push
negl
dec
mov
lods
fcompl
mov
push
rol
inc
sbb
andb
jb
dec
mov
or
or
cmp
add
cmp
and
je
cmp
xlat
xor
inc
sbb
shlb
xor
outsb
aam
pop
popa
adc
into
mov
mov
das
inc
inc
cltd
imul
fstl
sti
push
sub
sub
jbe
aam
adc
xor
xor
jmp
inc
lret
xchg
dec
adc
and
add
mov
xchg
xor
pop
jo
stos
or
or
dec
mov
jecxz
add
rclb
xchg
rcll
mov
test
xchg
lods
out
leave
inc
sbb
sti
adc
dec
adc
ret
inc
cwtl
cmp
or
imul
inc
fcmovnbe
or
rcrb
and
pop
out
xor
rcl
sbb
rcr
rcr
add
push
mov
das
mov
rcll
cld
sub
push
mul
xlat
push
push
sbb
xor
fsubl
movsl
or
mov
and
fsts
or
mov
in
xor
sbb
sbb
negl
lds
push
or
stos
repnz
idivl
inc
ja
mov
clc
jl
aam
jge
mov
jle
mov
xor
xor
fs
inc
mov
cs
cs
pop
shl
movsl
or
out
ljmp
pop
mov
jnp
pop
pop
lods
adc
loopne
ljmp
subb
out
mov
push
stos
aad
punpckhdq
mov
repnz
lret
ret
test
loopne
dec
mov
sbb
sub
and
dec
mov
xchg
push
mov
pusha
add
imul
sub
lds
lret
cwtl
lods
mov
daa
shrb
jbe
mov
mov
and
xchg
inc
xchg
lods
push
data16
popf
lea
pusha
iret
dec
in
mov
add
push
stos
int
jl
lods
pusha
cmp
movsl
pop
pop
ret
insl
lock
mov
pop
outsl
inc
arpl
sahf
and
cwtl
shll
popa
push
iret
test
xor
icebp
cmp
jge
mov
psraw
leave
test
iret
or
or
lods
lea
adc
mov
pushl
xor
lret
dec
popa
fcoms
xor
inc
cmp
fildl
cwtl
inc
sbb
out
jg
rol
lret
add
sbb
mov
fidivrl
cmp
mov
mov
aaa
push
dec
mov
pop
dec
xchg
xor
outsb
lcall
or
mov
jae
les
push
popa
loope
cmp
sub
ret
mov
pop
push
push
std
scas
cli
ficomps
dec
cs
call
cmp
and
fdiv
xchg
or
push
jne
div
xchg
les
xchg
dec
mov
xor
test
mov
sub
mov
test
jg
jle
ds
jae
stos
and
loope
adc
xor
lods
data16
in
nop
nop
pop
sbb
sbb
cmp
cmpsl
sbb
shlb
xchg
jmp
jae
icebp
add
or
testb
mov
ret
imul
jecxz,pn
and
sub
fisubs
ds
dec
pop
mov
adc
int3
je
movsb
inc
push
dec
mov
jns
and
add
call
aas
sarb
aas
pop
aam
pushl
adc
and
pop
fwait
dec
popf
sbb
ja
push
xchg
test
or
rorl
sub
bound
fsubl
inc
in
repz
pop
sub
inc
add
popl
nop
mov
cmp
lods
into
adc
and
sub
movsl
shl
cmp
push
jmp
bound
xchg
fwait
xchg
mov
aad
xor
repnz
mov
jbe
ljmp
mov
mov
scas
pushf
arpl
mov
and
cmpsl
add
pop
inc
sahf
test
mov
or
mov
sbb
jbe
cmpl
cmp
mov
fs
sub
imul
in
pop
fnstcw
xchg
sbb
negl
add
je
cmp
popa
pop
cld
hlt
insl
sarl
lahf
jnp
dec
cli
shll
mov
fs
lea
in
outsl
and
pop
pop
push
movsb
jmp
adc
or
loope
ret
test
sbb
int3
pop
pop
mov
add
push
lret
or
dec
inc
cs
rclb
push
and
cmp
pop
outsb
dec
call
mov
cwtl
or
jge
out
int3
inc
fisttps
insl
pop
faddl
loope
sub
sub
fdivp
sahf
int
mov
rorb
je
test
ss
mov
add
mov
xor
imul
ja
xor
xor
jmp
push
adc
rcrl
xchg
xor
xlat
scas
or
out
pop
cmp
fstpt
cmp
clc
in
adcb
insl
aam
xchg
test
aad
push
add
cmp
testl
mov
loop
in
test
je
stos
roll
add
jne
test
adc
xor
lret
test
mov
repz
push
mov
daa
inc
xchg
xchg
sub
repz
xor
sbb
in
xchg
sub
idivl
fwait
and
jne
pop
adc
xchg
movsb
pop
shll
shlb
cmp
sbb
xor
stc
les
sub
fwait
bsf
mov
cs
xchg
add
inc
dec
out
mov
or
xor
xchg
lcall
ds
dec
mov
adc
or
insb
sub
rcl
out
fsubp
adc
aas
pop
imul
pop
or
and
add
sub
and
in
cmp
in
sahf
or
hlt
jl
shll
cmp
xchg
xchg
lds
pop
sub
fstpl
sbb
clc
mov
mov
xor
push
aaa
insb
pop
daa
movsb
add
test
mov
jmp
subb
popf
rorb
xor
loop
cmpsl
inc
fstps
arpl
gs
in
xor
pop
dec
fsub
pop
sahf
dec
adc
icebp
mov
loop
lds
jp
push
push
fs
push
leave
inc
and
scas
out
push
aaa
dec
outsl
jp
fwait
pop
in
fisttps
je
mov
iret
lret
dec
daa
cmp
adc
lods
pop
cltd
xor
sub
sbb
cmpsl
stos
sub
jno
mov
out
xchg
jno
xor
cwtl
adc
mov
mov
rcrb
orb
scas
mov
popa
xchg
out
inc
inc
or
ljmp
sub
mov
sub
mov
scas
xor
mov
aas
cmp
cmp
loopne
popa
and
stos
in
jo
leave
mov
push
and
sub
dec
cmp
test
ret
mov
out
fisttps
roll
sub
pop
pop
in
idivl
pop
sub
imul
inc
or
xor
out
push
ja
shl
lcall
pop
jne
pushf
imulb
fdivl
movsl
movsb
out
pop
jge
fnstcw
fs
in
jbe
pop
js
dec
jecxz
mov
outsb
shlb
push
push
cli
mov
stc
stos
cmp
push
or
es
outsl
xlat
out
xor
sbb
out
and
add
ret
sub
lods
leave
pop
shl
mov
js
test
sbbb
test
shlb
out
lods
mov
fstl
mov
sub
cmp
int
mov
sbb
dec
sub
popa
fs
loop
aam
cmp
jns
mov
push
sahf
outsb
jmp
pop
fnstcw
jmp
xchg
pusha
nop
cmp
stc
cmp
mov
in
pop
mov
sbb
arpl
mov
rol
addr16
cmp
cmp
xor
cmp
sbb
lods
dec
xor
or
inc
rcrw
loop
outsb
hlt
scas
pop
in
and
pop
daa
lds
add
xor
ret
mov
mov
mov
cmp
lahf
xor
loope
test
inc
push
adc
jae
push
dec
push
xchg
push
sbb
inc
test
aam
dec
mov
push
cmpsl
inc
shrl
in
xchg
dec
cmc
push
cmp
xlat
sbb
adc
nop
fcoml
in
in
movb
ss
push
imul
inc
cmp
mov
mov
andl
orl
es
arpl
xchg
into
or
or
rorb
repz
das
nop
cmpsb
xor
and
jge
dec
mov
adc
lea
scas
or
int3
jg
js
cmp
and
jnp
ret
pop
jecxz
mov
cli
add
or
and
imul
xchg
idivl
pop
sub
gs
xchg
jo
or
lret
movsb
mov
dec
mov
mov
into
adc
mov
fstl
mov
jle
stos
fidivrs
cs
fwait
pushf
insb
pop
mov
out
fstl
jecxz
jecxz
jbe
xchg
sub
jae
cmpsb
loop
shl
stos
pushl
arpl
fldt
jl
or
xlat
push
cmc
cmp
mov
jno
mov
mov
pop
daa
pushf
mov
decb
cltd
push
movsb
sub
xor
inc
cmp
sbb
push
aas
jge
push
cltd
dec
xor
jnp
or
lahf
ret
inc
sub
arpl
and
push
arpl
pusha
xchg
jo
jb
lds
mov
inc
and
out
fiadds
outsl
or
mov
push
add
lea
loope
sbb
das
adc
jmp
jmp
sub
pop
xchg
insb
movsl
iret
or
rcrb
jns
adc
add
nop
cmp
dec
aad
xlat
sbb
imul
ficompl
stos
ljmp
and
mov
daa
arpl
or
hlt
test
mov
stos
xor
mov
pushf
mov
sarl
insb
mov
jae
outsl
fwait
mov
ljmp
mov
add
aas
inc
aaa
mov
cmp
fisubrl
stos
dec
jne
xor
incb
sti
mov
lcall
nop
cmp
ds
cli
sbb
adc
fildll
les
jb
jbe
in
dec
xor
adc
sbb
push
push
adc
je
sub
int3
fwait
addr16
adc
popf
popa
sub
adc
dec
mov
mov
loop
out
mov
cs
xor
cmpsb
and
leave
and
xchg
shr
jae
cmp
out
outsl
in
incb
rorb
inc
jnp
cwtl
and
inc
ds
imul
and
sub
mov
cld
xlat
loop
mov
mov
adc
push
sub
in
cli
add
adc
addl
test
ljmp
clc
das
in
jecxz
adc
and
cmp
and
test
sub
xor
mov
mov
rol
test
or
std
dec
inc
cmp
cwtl
lcall
es
push
and
inc
adcl
out
mov
dec
lock
push
add
xor
insl
or
sub
mov
hlt
dec
inc
lahf
mov
or
xor
ficoml
pop
or
pop
ss
push
std
push
mov
inc
pop
push
sub
popf
das
dec
xchg
out
cmp
jo
xor
nop
mov
mov
mov
arpl
repnz
sbb
inc
jns
data16
inc
mov
aam
lret
mov
es
fimuls
fwait
std
mov
ret
push
mov
test
insl
in
leave
add
addr16
jecxz
cmp
xchg
test
jne
test
push
fnsave
in
add
push
or
stos
aam
negl
int
cli
jge
cld
insl
mov
lds
add
in
enter
in
add
pop
and
test
xchg
mov
test
push
add
pusha
xchg
sub
inc
ja
lods
xlat
jo
mov
jne
push
cmpl
stos
lods
fmull
adc
add
and
push
sub
pop
outsb
jle
je
lods
or
cmp
push
dec
imul
cmp
jns
jl
sub
cltd
jl
adc
js
and
xchg
add
enter
vunpckhpd
in
or
adc
pop
sub
xchg
fcmovnb
dec
sub
dec
adc
add
pop
inc
add
pop
inc
fsubr
cld
dec
add
loop
lods
test
test
rclb
dec
dec
jo
test
xchg
lods
enter
orb
popa
and
aam
add
push
cs
in
jae
sti
fsub
fsubrs
lods
and
ror
arpl
dec
jl
add
hlt
into
ljmp
sub
in
or
pop
negb
lret
leave
negl
adc
mov
add
mov
cmp
int
aas
fldenv
ret
jl
push
mov
ret
xchg
leave
in
les
push
xlat
leave
sarb
push
pop
xchg
adc
in
mov
inc
push
jo
out
js
xchg
pop
pop
repz
mov
popf
mov
int3
in
push
lods
push
pop
roll
mov
push
stos
mov
mov
mov
cmp
stos
mov
cwtl
mov
mov
push
shufps
pop
popa
xchg
fistpll
int
dec
cmp
outsl
aas
mov
xlat
add
xchg
repz
and
mov
and
sub
and
sub
sub
lea
icebp
pop
mov
adc
inc
jge
jae
jno
cli
mov
inc
jl
insb
push
inc
std
jecxz
andl
roll
push
sub
addb
les
xchg
std
dec
pusha
or
pop
mov
enter
gs
or
push
movl
mov
fs
xor
cmp
in
ret
fldenv
outsl
and
mov
enter
aad
ror
mov
jmp
push
gs
push
out
out
mov
fdivr
js
fdivl
hlt
adc
xchg
shlb
xor
xchg
xor
jo
mov
popa
fcmovb
mov
pop
push
cmpsb
xchg
xchg
jmp
repz
mov
stos
repnz
add
ret
insl
mov
lods
push
insb
jecxz
lcall
lods
inc
xlat
xor
or
add
sbb
and
xchg
pop
push
inc
sahf
notl
mov
lret
repnz
inc
sbb
jne
mov
ret
imull
dec
push
push
fistpl
xchg
sbb
mov
rolb
outsb
push
int3
adc
dec
insl
std
pop
aaa
neg
mov
icebp
or
or
dec
decl
shrb
add
pop
sbb
or
ds
mov
add
xchg
pop
imul
repz
stos
add
mov
push
lret
add
inc
arpl
adc
or
inc
idiv
cli
push
adc
jbe
ret
adcb
imul
cli
xchg
mov
mov
imul
fpatan
dec
stos
xchg
and
add
cmp
sahf
fdivrl
and
xor
xchg
repnz
cmp
push
aas
jecxz
lahf
pop
and
data16
cli
or
mov
into
dec
in
inc
or
fwait
mov
xor
mov
push
adc
mov
mov
std
xchg
mov
leave
inc
jecxz
pop
insl
cmc
inc
sub
mov
int3
in
call
sbb
movsb
mov
push
dec
mov
dec
or
jbe
cmc
daa
sub
shlb
add
pop
in
cmpsl
cmp
testl
xor
sbb
in
test
mov
mov
dec
inc
gs
or
cwtl
pop
aas
mov
fidivrl
cmp
mov
push
out
mov
mov
inc
aaa
out
push
insl
adc
stos
loopne
cmp
sqrtps
test
xchg
add
push
in
add
in
outsl
mov
jne
cmc
push
adc
pop
ret
test
dec
loope
sbb
add
sbbb
or
mov
cmpsl
and
jb
push
xor
dec
pop
inc
enter
mov
or
or
fcoms
jg
inc
popa
jns
jp
sub
inc
test
lret
xchg
cmp
sarl
shll
inc
cltd
pushf
jne
int
inc
lahf
fsub
daa
mov
add
push
testb
jno
test
fcomi
jnp
scas
jge
in
xor
jg
lcall
inc
xorb
arpl
and
mov
scas
mov
mov
jb
fs
mov
or
enter
int
dec
push
xorb
in
mov
and
js
cmpsb
sbb
adc
stos
sbbb
ja
add
bound
jae
in
call
aaa
inc
mov
sti
stc
add
cmpsb
cmp
mov
loopne
xor
cwtl
dec
cmp
test
mov
jne
kmovw
imul
iret
sahf
mov
adc
mov
negb
push
sbb
andb
aam
iret
lods
enter
or
jbe
or
in
rcll
cmp
imul
sbb
fisttpll
lahf
cmp
and
or
out
push
cmp
mov
pop
and
mov
mov
pop
pop
jnp
jns
mov
push
jle
mov
fwait
mov
imul
mov
or
sahf
or
in
push
dec
subl
test
mov
outsl
add
cwtl
aam
scas
jnp
pop
jmp
cs
lret
addr16
mov
iret
int
mov
js
aaa
jns
mov
sarl
and
lods
mov
arpl
int
adc
add
loop
ret
mov
hlt
imul
shll
pop
into
inc
xchg
data16
aam
cmp
clc
imul
and
pop
loopne
xlat
fnsave
inc
and
jmp
pop
pop
movl
loop
daa
sti
fs
or
je
add
and
xorl
cmp
gs
movsl
xor
in
sahf
mov
mov
dec
inc
pusha
movb
adcb
and
jg
out
inc
xor
ljmp
int3
and
shll
out
pusha
lret
jbe
scas
aam
iret
pop
inc
test
or
loop
xchg
mov
lods
imul
jecxz
in
mov
dec
outsl
inc
mov
cltd
push
int3
sub
mov
xchg
pop
cs
jg
in
leave
push
in
sub
jecxz
sbb
addr16
jmp
test
mov
std
into
cmpsl
push
repz
shll
pop
and
inc
xchg
int
out
xor
call
clc
fdivrs
out
mov
pop
adc
and
mov
jae
shl
cs
movsb
lahf
sub
dec
mov
pop
mov
mov
mov
sbb
xchg
inc
and
push
inc
je
inc
mov
out
xor
psraw
lret
xchg
repz
jge
call
pop
mov
lret
divl
and
test
ret
or
or
cld
mov
sti
aam
loope
sbb
inc
dec
cmp
lods
push
imul
outsl
pop
jno
fs
dec
mov
hlt
jbe
imul
mov
mov
fwait
movsb
push
push
cmp
rcrb
fildl
jg
ds
dec
das
mov
pop
call
and
mov
fwait
inc
xor
shrl
inc
popf
loope
sub
or
notb
mov
mov
cwtl
xchg
jo
js
mov
jecxz
pushf
std
cmpsb
pop
push
sbb
pop
dec
xchg
mov
xchg
js
and
mov
push
dec
std
popaw
pop
sbb
xchg
push
imulb
dec
inc
icebp
push
les
xchg
or
mov
test
test
stos
addr16
inc
popa
xor
cmp
push
in
xchg
mov
sub
cmp
cwtl
imul
push
and
push
aas
xchg
icebp
adc
cmp
lods
arpl
xchg
enter
push
mov
fwait
pslld
test
mov
ss
rcrb
pop
sbb
mov
cwtl
and
leave
xchg
dec
pop
fwait
and
frstor
out
dec
inc
mov
dec
jl
sbb
sbb
and
jl
aaa
clc
cmc
sub
fldcw
das
scas
rolb
mov
fisubrl
es
cmp
rcrl
repnz
lock
xchg
shrb
xor
loop
xchg
fadd
rcll
mov
mov
test
sbb
ja
dec
pop
mov
dec
lret
fidivl
xor
negb
mov
push
add
fwait
iret
ds
out
inc
je
and
jne
rcll
scas
inc
mov
loope
cltd
shll
pop
xlat
scas
sarb
pop
mov
jp
adc
mov
sbb
pop
sub
out
les
fs
or
aaa
fiadds
mov
push
sub
adc
movsb
adc
xchg
mov
push
rcll
sub
mov
adc
call
aam
imul
icebp
out
sarl
jg
outsb
shl
adc
inc
jge
mov
jo
mov
xchg
fistl
inc
add
insl
xchg
stos
push
jnp
mov
inc
mov
sub
lret
jne
push
imul
and
pop
bound
push
arpl
dec
and
ljmp
xlat
fdivs
loop
xor
test
adc
jae
cmp
push
or
sbb
pop
jmp
mov
arpl
xlat
outsl
mulb
aas
sub
xchg
jle
dec
nop
cmpsb
clc
sbb
cmp
sbb
mov
mov
dec
lods
dec
push
lahf
aas
imul
cli
nop
mov
subl
dec
adc
mov
roll
testl
and
aas
hlt
fs
add
inc
push
add
dec
repz
cmp
ret
stc
jmp
and
out
icebp
pop
test
or
arpl
jne
sbb
dec
out
add
es
lret
lea
mulb
sub
je
push
sub
das
xchg
or
cld
std
stos
in
cmp
mov
insl
sbb
outsl
pop
mov
hlt
test
call
insb
jno
mov
aas
gs
mov
stos
out
xchg
adc
xor
xchg
sbb
pop
orb
sbb
sub
sub
rcr
stos
popf
cwtl
dec
aam
sbb
push
notb
out
pop
mov
cmpsl
or
pop
les
add
lahf
dec
gs
pop
sbbl
pushf
int3
jp
jbe
andl
lret
notl
cwtl
mov
mov
xchg
hlt
sbb
inc
fwait
mov
fdivl
dec
push
lds
repnz
lahf
and
push
and
dec
les
stos
int3
pop
push
mov
add
in
bound
addr16
cmp
dec
fbld
jns
fs
lea
mov
dec
loope
inc
movsl
int
xchg
hlt
dec
lret
bnd
mov
add
shrb
rorl
cmp
mov
fiadds
cmp
repz
lods
sub
addb
push
ret
push
mov
xor
sub
adc
mov
jecxz
push
mov
popa
cld
jb
test
dec
jl
inc
mov
cmpsb
dec
mov
mov
rcr
push
pop
inc
push
xlat
mov
inc
loopne
popf
out
into
lret
mov
jmp
sahf
inc
inc
ss
movb
pop
lds
mov
xchg
jmp
lock
filds
add
adc
push
stos
xor
or
xchg
pop
out
lret
test
xchg
inc
loop
aaa
outsb
cltd
mov
ss
fnsave
jae
and
and
dec
mov
add
scas
rclb
mov
enter
cld
out
mov
pop
fucom
syscall
and
add
sar
sbb
les
push
insb
nop
sub
lds
mov
adc
popa
pop
sub
inc
es
daa
adc
sub
add
pop
pop
sub
scas
and
xchg
xor
and
jae
jl
idivb
mov
stos
mov
mov
popa
out
mov
int
sub
outsl
movsb
ss
ljmp
cmc
jmp
push
push
sbb
loopne
loope
arpl
xor
fidivl
nop
sub
mov
lea
shlb
and
icebp
int3
pop
dec
into
out
nop
enter
fucomip
cwtl
and
mov
xchg
xchg
inc
and
insl
or
lret
cmpsb
aad
xor
ror
lcall
out
sti
in
aas
adc
test
pop
loop
push
sub
jmp
jmp
xchg
cmp
sbb
test
sbb
data16
lret
push
iret
insb
jp
push
mov
shlb
push
or
sahf
mov
mov
testb
ljmp
mov
sahf
and
mov
dec
mov
fadd
movsb
inc
fldl
adc
cmp
loop
xchg
rcll
imul
mov
jp
pop
movsb
out
jl
fstps
or
sub
cmpsb
pushl
mov
push
icebp
call
mov
add
sub
test
into
pop
mov
mov
push
scas
test
test
gs
mov
jp
clc
mov
test
pushf
fsubl
lds
cmp
testb
xlat
inc
xor
invd
in
addr16
pop
ret
fisttpl
aaa
pop
sbb
mov
test
pop
inc
inc
fldl
or
pop
data16
inc
jns
mov
scas
dec
xchg
ja
sub
call
xlat
sbb
mov
scas
adc
outsb
stos
data16
sub
rcll
roll
mov
ror
xor
daa
mov
addr16
inc
rclb
pusha
fcompl
fstp
adc
inc
cmc
aas
gs
aas
sub
rcrb
movsl
lds
and
add
out
ljmp
mov
stos
xor
add
int3
fildl
push
hlt
pop
xchg
das
jne
out
repz
adc
or
or
das
call
js
or
mov
xchg
pushf
in
loopne
xchg
pop
push
push
les
int
sbb
adc
jne
inc
les
xchg
stos
nop
dec
fs
mov
mov
xchg
jge
and
inc
cmc
imul
dec
or
addr16
outsl
mov
rorl
int
sub
jnp
push
add
imul
xor
jg
stos
out
jae
loope
lcall
cmp
xchg
cmp
mov
fsubr
imul
xor
mov
cmpsb
je
pop
mov
outsl
xor
add
sub
pop
and
rorb
inc
dec
hlt
sub
sub
stos
dec
mov
sar
jmp
add
adc
xor
add
xorb
cltd
or
insl
divl
mov
rorl
popa
imul
cmp
and
cmp
push
and
ret
inc
jg
inc
mov
js
mov
jnp
adc
scas
mov
call
aas
pop
mov
test
roll
sti
das
out
les
dec
jge
fistpl
sub
aas
mov
shl
leave
cli
cmp
mov
inc
cmp
xor
mov
pop
ds
sbb
mov
pop
imul
mov
jg
and
sbb
sbb
loope
push
ja
addr16
sub
ret
inc
jo
in
hlt
mov
push
push
test
dec
or
and
scas
dec
insl
pop
mov
xor
clc
or
dec
adc
lods
pop
cwtl
xchg
jno
mov
xor
hlt
sbb
lcall
jmp
jno
fcomip
xchg
or
lcall
xchg
loopne
leave
sbb
repz
ficompl
cmpsb
mov
inc
adc
outsl
gs
fildl
test
xchg
push
fsubrl
xlat
pushf
and
in
inc
out
out
adc
clc
dec
cmp
xchg
div
icebp
out
scas
jae
push
nop
pop
mov
cli
pop
xchg
bound
sbb
in
insb
aam
xchg
xlat
enter
gs
ss
jmp
and
jno
nop
scas
pop
mov
adcl
loope
inc
xor
mov
rcrb
loope
pop
mov
pop
andl
ds
mov
xchg
shl
lahf
ds
lea
je
lret
cld
pop
shl
inc
or
mov
lret
lret
sbb
cwtl
adc
ja
mov
ret
call
rcr
imul
scas
inc
adc
mov
xor
lds
jbe
xor
xor
or
inc
push
pop
push
in
mov
mov
adc
cli
jg
pop
shlb
add
lret
and
dec
mov
push
dec
jmp
nop
shrl
jo
cmp
lret
push
jnp
mov
xor
ret
daa
jle
or
call
fsubrs
mov
add
xor
push
jecxz
adc
fidivs
fsts
mov
sahf
adc
push
ja
xchg
add
sbbl
cmp
imul
out
fidivl
cmpsl
dec
push
gs
pop
cmp
sbb
dec
add
mov
cwtl
sbb
sub
out
mov
pop
shrl
push
xor
mov
fs
or
orl
bswap
pop
stos
in
shl
leave
pop
mov
dec
cmp
notl
mov
cmpsb
fwait
adc
sbb
mov
mov
xor
and
test
add
lahf
push
push
aad
dec
call
xchg
xchg
and
loope
sar
cs
jecxz
das
jne
bound
add
ja
mov
add
sub
xchg
push
mov
imul
mov
mov
xchg
dec
pop
mov
pushf
jp
cmpsb
aaa
cmp
jb
inc
imul
add
adcl
addr16
xchg
aad
cmpsl
mov
es
pusha
bound
negl
pop
stos
push
cmp
mov
fimuls
loope
cltd
adcl
pop
stos
sbb
out
xlat
mov
lds
push
gs
popa
jb
mov
pop
or
mov
ja
or
rcl
pop
loop
fiadds
cwtl
dec
add
in
push
iret
adc
xchg
mov
outsb
jbe
push
aaa
jmp
cld
adc
jo
sbb
test
xor
mov
ljmp
outsb
popa
adc
leave
fcmovnb
push
movsb
add
inc
lret
inc
fdivs
fbstp
sub
or
in
pop
xor
or
in
cwtl
or
xchg
pushf
repz
ret
and
and
jbe
in
in
mov
mov
out
sub
repnz
cmp
imul
popf
or
pop
cs
movsb
mov
daa
dec
mov
mov
xor
fists
movsl
fwait
loop,pt
enter
cli
dec
cmpsb
pop
mov
addr16
dec
jg
pusha
inc
fs
stc
mov
inc
jg
mov
jo
add
push
mov
ss
and
mov
cmc
xor
add
sub
inc
jne
lret
imul
cmpsb
movsb
rcr
fcomp
icebp
and
dec
sahf
push
scas
push
outsb
and
mov
jb
mov
inc
push
xor
or
pop
subb
repz
jge
jno
das
pop
scas
sub
jnp
adc
aad
scas
pusha
hlt
sub
popf
in
mov
pop
mov
mov
out
jl
sub
mov
fs
xchg
sub
fisttpl
js
or
dec
xchg
ljmp
out
fildll
ja
dec
mov
int3
je
cmpsl
mov
clc
fldcw
sti
adc
js
or
test
sbb
mov
or
ret
nop
pop
dec
sti
es
pop
in
inc
xchg
push
cmpsb
mov
test
lods
es
aas
sbb
push
xchg
xlat
gs
in
cmp
dec
outsl
std
mov
fdivrs
ss
xor
add
xlat
pop
outsl
mov
out
sbb
mov
mov
insb
push
arpl
pop
into
and
in
adcb
mov
ss
in
rcrb
dec
stos
mov
bswap
xchg
sub
mov
dec
es
lds
mov
and
loope
mov
xchg
cmp
xchg
and
inc
test
movb
adc
sti
cmp
ljmp
sub
fs
popa
push
imul
loop
push
out
dec
push
mov
sti
push
cld
lea
std
cmc
inc
cli
aaa
outsb
pop
in
jecxz
fcmovnu
cmc
dec
aaa
xchg
mov
in
pop
shlb
mov
cmpsl
cld
aad
push
xchg
repnz
lea
inc
and
sahf
rclb
xchg
add
lret
hlt
repnz
mov
shl
ss
pop
outsl
pusha
inc
repz
and
pushf
out
enter
stos
pushf
mov
fcmovb
jo
sub
sub
jns
int
push
mov
mov
out
or
mov
add
or
inc
aas
popa
mov
icebp
sub
into
je,pt
aam
xchg
mov
shlb
mov
or
fs
sbb
cld
scas
push
jnp
out
lea
mov
out
aas
sbb
xchg
sbb
inc
aaa
jle
mov
and
dec
jp
std
add
pop
imul
addb
push
fucom
or
adc
xchg
pop
loopne
add
sbb
fwait
jmp
push
push
in
test
cli
arpl
xor
add
or
jg
cmp
mov
hlt
push
cld
dec
xchg
inc
lods
scas
push
push
sbb
cmpsb
inc
sub
lock
adcl
cmp
stc
arpl
or
push
and
jle
or
sbb
dec
mov
fmuls
fdivl
adc
push
popf
lahf
cmp
cltd
mov
jns
sub
ret
clc
adc
int
xchg
mov
leave
xchg
sti
inc
or
ja
pop
loop
xor
mov
andl
inc
push
jge
or
pop
stos
ljmp
movsl
sub
ljmp
inc
enter
stos
xchg
lods
and
ror
inc
xchg
inc
adc
loope
xor
mov
mov
inc
or
sub
cltd
sub
sbb
aad
mov
sub
lods
aas
pushw
mov
or
outsb
mov
mov
jecxz
lds
xor
scas
or
out
les
fsubl
lahf
popa
adc
mov
dec
xchg
mov
gs
inc
xchg
mov
popa
or
cmpsl
sbb
mov
fldt
and
popf
test
mov
sub
loopne
test
les
cwtl
push
xchg
test
out
jno
loop
adc
aaa
mov
add
adc
mov
inc
pop
shrd
xchg
xor
xor
jbe
loop
outsl
stc
repnz
xchg
and
int
call
loopne
ror
xchg
lds
pop
cmp
mov
bound
pushf
mov
push
adc
rcrb
movl
rorl
sub
sub
outsl
mov
mov
lods
shl
inc
popf
adc
hlt
enter
sub
xor
notb
xor
xor
adc
push
mov
mov
xor
xor
dec
xchg
push
imul
in
xchg
ret
int
std
jo
push
cmp
mov
loopne
stos
mov
jle
push
mov
testl
sbb
mov
and
push
incb
cmp
repz
jp
fs
ja
stc
out
mov
pop
in
cmp
repnz
jbe
push
cmp
and
sbb
mov
dec
lods
jnp
cmp
mov
dec
ss
cltd
test
dec
test
dec
aaa
inc
jp
pusha
lods
hlt
in
shrl
push
xchg
and
imul
ret
test
add
mov
pop
pushf
lea
dec
loop
mov
sub
push
add
sbbb
sysret
cmpsb
push
jecxz
sbb
daa
push
add
cli
dec
loopne
jle
gs
gs
lds
loope
pop
mov
ja
cmp
das
adc
mul
push
test
ss
mov
xor
xor
cmp
inc
in
je
jne
div
inc
mov
mov
cwtl
adc
sub
out
icebp
test
andb
int
shrb
dec
jle
add
jmp
fucomi
adc
fstpl
rcll
in
iret
lods
enter
aaa
jbe
pop
mov
ljmp
in
loopne
bound
xor
xor
push
es
dec
lret
mov
and
xor
push
jmp
sub
cmp
pusha
jg
xor
push
mov
jo
inc
mov
push
push
test
or
stc
in
out
fnstcw
or
xchg
jae
int
dec
mov
aas
stos
fstps
xchg
int
cmp
aad
mov
outsl
mov
pop
push
dec
push
xchg
sbb
add
fiaddl
aad
push
add
mov
sub
and
ror
sub
adc
xlat
add
insb
dec
out
movsb
push
bound
in
outsl
or
or
lods
into
mov
dec
imul
pop
lods
pop
dec
out
dec
inc
cmp
aas
jne
pop
stos
jge
test
push
outsb
fbld
jne
jns
movsl
or
sti
mov
outsl
xchg
mov
adc
divl
sbb
push
mov
add
sbb
xor
test
repz
pusha
lock
xor
leave
aam
call
sbb
or
cmp
sahf
sbb
push
imul
xor
xor
test
xor
inc
xor
xor
scas
add
arpl
xor
fimuls
and
popl
or
xchg
jg
loop
test
mov
shlb
test
daa
stc
std
das
cmp
pushf
std
dec
dec
lret
xchg
add
fidivrl
in
in
or
or
ss
movsl
sbb
popf
cmp
lods
inc
test
movsb
inc
inc
jno
data16
xchg
sub
push
dec
inc
cli
in
bound
pop
mov
or
lcall
fldcw
add
lret
push
mov
inc
arpl
cmpsb
mov
jae
jg
rorl
push
mov
jmp
jle
iret
xor
movsb
mov
dec
fwait
into
lcall
mov
xchg
cvtps2pi
mov
mov
jo
mov
popl
pop
loop
mov
mov
inc
addr16
sub
leave
cmp
mov
pop
sub
push
test
pop
push
jp
lods
mov
push
test
lgs
push
pop
jle
cmp
daa
nop
lods
or
mov
inc
inc
push
dec
setp
or
xor
or
push
or
xchg
xchg
adc
xchg
mov
mov
cmp
in
ja
lea
mov
jmp
icebp
gs
xchg
les
sahf
mov
push
add
push
lret
and
inc
shrb
push
jmp
arpl
pushf
outsl
int3
lcall
rolb
cs
cmp
xchg
aam
or
jnp
dec
sbb
cs
mov
packsswb
mov
fidivs
imul
cs
cmp
stos
in
rolb
dec
fstsw
pop
rorb
movsb
jnp
insl
mov
negb
orb
xchg
dec
cld
movsb
inc
and
push
jae
jnp
ret
popa
inc
inc
divb
js
mov
in
aam
mov
cwtl
out
pop
aad
cwtl
pop
dec
inc
cltd
addr16
outsb
mov
movsl
pusha
ret
sbb
and
sbb
mov
jo
sub
adc
popa
adc
jge
cld
xchg
aam
dec
std
jne
into
hlt
cltd
jle
inc
or
push
push
cmp
mov
stos
xor
cmp
decl
cli
mov
mov
scas
shlb
mov
div
aam
std
push
add
pusha
mov
je
add
push
lret
xchg
lea
jns
outsb
pop
cwtl
mov
push
in
mov
imul
xor
test
in
push
sbb
lea
cmp
loopne
ds
xchg
inc
test
pop
adc
subl
call
loopne
push
cld
inc
mov
mov
jge
out
sbb
dec
pop
test
cltd
gs
jp
inc
roll
adc
popa
adc
mov
mov
add
jg
jl
add
out
insb
leave
cltd
icebp
push
inc
les
repnz
xor
push
pop
add
imulb
sub
out
pusha
push
dec
add
aad
bound
ja
fs
cmp
xor
jmp
loopne
in
jnp
adc
fmuls
adc
push
lea
sbb
into
xchg
cmc
mov
mov
pop
inc
or
dec
shrl
push
stos
ljmp
sbb
fsts
fucomi
lret
sbb
and
mov
mov
orb
lods
mov
or
aam
pop
fcmovb
mov
andl
push
cmp
cmpsb
or
jle
pop
test
idivl
dec
pminsw
mov
push
fwait
jl
jle
sub
aaa
dec
int3
mov
mov
ret
xlat
add
movsl
gs
mov
insb
mov
and
xor
les
mov
adc
clc
test
notl
jecxz
or
pop
push
popf
out
xor
outsb
xor
push
sbb
clts
mov
std
dec
sahf
pop
push
pop
pop
ficomps
fildll
jecxz
ljmp
mov
xchg
jb
fidivrs
mov
add
inc
fbstp
adcl
mov
xchg
popa
std
mov
aad
push
das
jmp
push
cli
mov
cmp
add
lea
shlb
mov
cwtl
add
lods
sub
adcb
or
loop
mov
mov
adc
inc
arpl
mov
icebp
dec
faddl
daa
mov
mov
gs
adc
pop
or
jae
xchg
pop
out
mov
int3
or
data16
xor
mov
fiadds
fstpl
rcrb
in
les
mov
jp
icebp
lods
mov
mov
rcrl
out
xor
fsubrs
push
add
push
sti
jmp
xchg
ret
jmp
cmpl
jp
andb
pop
mov
les
outsl
int
pop
dec
cs
sbb
or
mov
and
js
pop
and
fsubs
jecxz
or
arpl
gs
inc
mov
inc
subb
cmp
dec
int3
mov
push
loop
mov
push
jp
cmpsl
fistpll
out
adc
lret
or
enter
sahf
pusha
or
cwtl
xor
ret
mov
and
push
push
daa
mov
mov
pop
aad
ja
lahf
addl
pop
jno
adc
into
scas
inc
inc
lds
xchg
nop
pop
cli
sarb
aad
sar
outsl
xchg
jns
push
and
stos
hlt
in
ud0
push
int3
gs
fsubr
cmpsb
es
int3
push
leave
jecxz
inc
bound
loopne
repz
add
lods
sahf
sbb
mov
orl
ljmp
or
iret
xchg
jnp
icebp
call
andb
rolb
dec
stos
mov
aam
xor
loop
sbb
adc
pop
jl
mov
mov
dec
pop
adc
das
xor
std
mov
or
out
sub
cmpsb
mov
pusha
jb
add
jmp
outsl
adc
push
and
pop
and
mov
dec
bound
jp
jp
stc
push
mov
sti
shrl
js
daa
repz
mov
fcmovne
scas
and
sub
ljmp
mov
jnp
test
pop
stos
xchg
mov
frstor
sub
adc
jl
aas
xlat
lds
js
pusha
es
loopne
scas
push
or
jns
jl
in
pop
loop
shrb
push
xlat
aad
push
pop
sahf
or
sbb
inc
mov
mov
nop
jle
into
imul
loopne
and
inc
pop
cmp
push
dec
or
push
pop
add
ljmp
dec
fimuls
ja
mov
mov
sub
lcall
fidivrs
or
fstl
add
xchg
ds
mov
imull
xchg
mov
inc
jmp
xchg
aas
clc
loopne
das
rol
cmp
fildl
mov
mov
aaa
jnp
orl
je
sarl
push
into
rcrb
jno
push
sub
pop
pop
lret
test
mov
push
xchg
sti
stos
add
inc
stos
jl
push
lock
xor
pusha
mov
xchg
or
shlb
inc
negl
pop
shrb
xchg
subb
cmp
sbb
ret
cmp
or
daa
or
test
xor
leave
addr16
out
or
mov
push
fwait
add
sub
test
scas
pop
or
scas
fstpl
cwtl
sub
sub
push
push
mov
out
inc
push
add
stos
test
movsl
mov
inc
inc
pushf
lahf
icebp
adcl
add
daa
jo
push
mov
jge
pop
aas
cmp
pushf
out
or
enter
cld
int3
das
fnstcw
into
or
mov
outsl
jb
inc
in
dec
adc
or
ja
xor
lods
ret
cmp
mov
lcall
or
nop
mov
std
or
push
mov
push
add
frstor
and
movsl
mov
add
push
test
sahf
fbld
fsts
fidivrl
inc
or
push
jno
sbb
push
mov
mov
xor
fwait
dec
dec
aas
push
insb
sbb
xchg
mov
test
xchg
cmp
fsubrs
sarb
jg
sub
in
pop
icebp
sub
xor
and
pop
jl
clc
fwait
test
je
sbb
xor
in
mov
push
and
jne
mov
mov
cmc
jo
jns
jns
xchg
lock
sub
dec
lock
cmp
inc
sbb
scas
pop
mov
outsl
lret
jl
aad
loopne
jp
inc
pop
cwtl
lea
repnz
xor
dec
lods
mov
add
and
xchg
mov
in
cmpb
fldt
push
sbb
push
sbb
jmp
test
inc
stos
pop
cmp
mov
dec
pop
popa
xor
insl
scas
dec
mov
dec
dec
dec
mov
cwtl
lea
mov
mov
and
xchg
pop
sbb
cli
leave
loopne
out
push
or
push
mov
mov
inc
or
out
sbb
mov
jg
rol
in
cmc
dec
stos
pop
pop
and
shl
xchg
stos
mov
jbe
cmp
aas
xor
scas
adc
add
xchg
incb
push
cmp
addr16
xlat
add
inc
push
fistpl
es
outsb
push
sbb
sbb
mov
xchg
xchg
insb
in
ss
xchg
mov
xor
andb
push
and
lcall
repz
in
sub
repnz
push
andb
movsb
push
mov
sbb
sub
cmpsb
repnz
lahf
pusha
cli
sar
adc
aam
lods
sub
inc
lock
adc
mov
loope
lods
repnz
inc
insl
repnz
lock
int
push
outsl
inc
cmpsb
repnz
rclb
push
pushf
dec
xor
cld
pop
mov
pop
sbb
cwtl
inc
mov
call
sti
out
gs
xchg
lahf
lcall
push
xor
pop
push
test
adc
sbbl
in
cltd
out
arpl
pop
in
or
xchg
adc
jns
mov
lcall
mov
add
fbld
scas
mov
inc
sti
lret
out
pop
and
sahf
negl
out
insl
shrd
iret
push
jb
jns
cmpsb
test
mov
lods
into
scas
add
lcall
sbb
test
pop
mov
inc
and
sarb
jo
rolb
icebp
mov
cmp
add
icebp
std
aas
cmpsl
in
outsb
jl
in
lock
push
xor
mov
outsb
push
xchg
lds
inc
mov
push
push
pop
sub
mov
xor
insb
fists
push
pop
sarl
and
jmp
jp
jne
sbb
leave
push
cmp
js
push
adc
clc
dec
push
sub
lock
in
jecxz
push
jmp
pop
loopne
cmc
in
imul
stc
push
inc
icebp
scas
inc
pop
hlt
aas
sub
push
outsl
es
clc
lods
adc
mov
and
ret
out
popf
jbe
jl
cmp
in
or
mov
cli
xchg
mov
mov
push
lahf
fucom
push
into
xor
xor
inc
xchg
xor
outsb
scas
dec
mov
das
add
nop
inc
pop
lcall
mov
or
mov
and
xorl
bound
dec
and
mov
sub
inc
mov
imul
fnstsw
mov
jns
cmpsb
lea
jns
sbb
or
mov
sahf
mov
insl
addr16
add
mov
shl
imulb
sbb
pop
frstor
mov
sbb
int
pop
cmpsl
ljmp
mov
mov
and
pop
jno
cmp
fsubrs
subb
pop
jge
mov
jl
call
push
inc
ret
iret
pusha
imul
mov
test
rolb
shll
shll
sub
lods
shlb
lock
or
cmp
out
orb
inc
push
add
sarb
mov
test
adc
test
stos
pushf
or
cwtl
icebp
adc
xchg
jb
pop
test
sbb
or
scas
sbb
pop
shlb
imul
mov
pop
out
and
sub
adc
les
incl
add
xchg
lods
repnz
je
mov
xor
mov
lret
and
inc
roll
cwtl
cli
ds
bound
push
lods
adc
sub
and
cmp
and
xor
xor
data16
xchg
shr
leave
mov
lea
mov
fmul
les
xlat
and
xorb
xor
xchg
movsl
pop
lahf
orb
dec
and
jge
xchg
repz
and
faddl
sub
fwait
aad
imul
add
add
aaa
lods
cmpsl
add
mov
insl
mov
push
test
mov
xchg
fcomps
mov
sbb
cmp
adc
add
pop
inc
insb
xchg
arpl
mov
or
push
addr16
fmuls
scas
mov
jbe
sar
pop
push
popf
xor
das
fstpt
fsub
insl
lods
aad
dec
ds
jb
inc
pop
sti
mov
and
mov
and
mov
jg
cmp
xchg
mov
xchg
testb
xor
jge
jge
xchg
push
add
inc
outsb
cmpsb
out
popf
outsl
cmpsb
sbb
lret
mov
in
orb
stos
or
mov
fcmovb
sbb
lcall
arpl
add
push
add
sub
adc
orl
and
orb
or
daa
inc
int
cmp
inc
arpl
xor
jae
pop
mov
pop
cmp
int
sbb
xchg
dec
jbe
frstpm(287
cmp
cld
ret
rcrb
mov
pop
pushf
cld
clc
ss
test
sub
sbb
mov
es
enter
sub
dec
shll
push
aad
push
xor
test
pop
ljmp
push
orl
adc
mov
aas
aas
in
insl
and
loopne
rol
mov
enter
and
cmp
popf
lret
push
insl
daa
mov
bsr
hlt
mov
xchg
cmp
fnstenv
mov
mov
rcll
aam
xor
mov
jnp
dec
and
pop
pop
adc
lcall
pushf
gs
pop
out
xchg
xchg
add
ja
rcrb
cmp
pushf
push
jmp
inc
sbb
push
jecxz
iret
iret
insl
fwait
adc
in
xchg
add
ja
mov
cwtl
pop
xchg
mov
add
incb
loop
rcrb
cmp
mov
out
sub
push
subl
xchg
jg
shl
cmp
or
xchg
sub
icebp
jnp
jmp
aaa
dec
pop
arpl
in
dec
xor
mov
sub
movsb
outsb
stc
jne
sbb
test
xor
insb
lahf
imul
mov
jmp
fstps
and
jecxz
jb
aad
mov
mov
inc
dec
sbb
movsl
xchg
jg
sub
movsl
and
loop
dec
add
arpl
mov
jbe
mov
add
ss
int
mov
mov
nop
ljmp
ror
jns
adc
pop
fs
push
lret
jo
test
or
dec
jnp
inc
and
push
xchg
mov
subl
out
aaa
jbe
addl
inc
cmpsl
mov
inc
xchg
ret
sahf
adc
int3
and
push
fisttpll
jle
jmp
ljmp
lret
sbbb
sahf
push
loop
clc
scas
sub
popf
outsl
loopne
shl
add
mov
sub
out
inc
push
xor
push
mov
jg
dec
cmp
pusha
aam
mov
cmp
in
in
loop
sbb
pusha
jbe
xchg
inc
push
add
fs
xor
xchg
lods
and
or
push
stos
jne
jns
in
jecxz
adc
and
xchg
les
cmp
xor
into
std
add
or
push
pop
fisubl
mov
insl
gs
fistps
cli
mov
mov
mov
add
je
aas
and
adc
inc
add
insb
push
nop
add
arpl
jnp
jmp
mov
data16
jo
dec
int
jg
dec
mov
mov
das
shll
mov
js
jle
push
test
int
cmp
bound
mov
add
mov
mov
pop
fidivrs
mov
out
adc
pop
pop
cmp
lcall
in
call
mov
test
nop
add
stos
cmp
ret
inc
imul
fs
test
arpl
xor
or
nop
adc
lods
mov
xchg
adc
mov
inc
andb
mov
mov
lret
sahf
inc
fsubl
jg
das
mov
popa
dec
pop
xor
sbb
push
xorb
enter
std
fs
loop
fucomi
mov
es
sub
cld
push
lahf
mov
sbb
push
mov
sub
stos
in
xchg
jecxz
testl
out
xchg
call
pop
sbb
sub
cmp
movsl
xchg
inc
test
sbb
pop
pop
leave
sbb
mov
cmpl
or
fnclex
fcompl
mov
enter
jnp
xchg
rorl
lcall
adc
jne
or
xchg
jo
mov
mov
jb
ret
jecxz
jecxz
fcomps
adc
cmp
int
pop
xchg
cwtl
adc
lods
rcrb
es
ds
push
xor
pop
push
lret
repz
mov
mov
enter
fwait
stos
test
pop
mov
cmp
push
shll
sub
adc
jb
cld
in
mov
aad
xor
popa
pop
out
rorb
xor
popa
adc
push
les
mov
ret
frstor
les
jge
mov
xlat
data16
movsb
hlt
cmp
mov
add
pop
cmc
test
sti
xchg
mov
jp
outsl
mov
mov
adc
xor
inc
test
jg
in
add
cmp
pop
pop
fisubrl
inc
addr16
xchg
push
xor
push
xchg
seto
test
push
add
ja
xor
movsb
rcl
sub
out
out
cmp
in
jp
cmp
andl
jns
inc
dec
push
xchg
jns
loopne
pop
jecxz
jmp
ret
xchg
mov
pop
lods
add
repz
gs
xor
cld
ret
arpl
ss
sbb
jp
dec
xchg
aad
pop
sbb
xchg
pop
sub
pop
icebp
dec
arpl
mov
mov
sti
daa
in
inc
cltd
push
imul
inc
inc
notb
pop
jp
in
ljmp
pop
xchg
cmp
dec
lock
pop
adc
cmp
or
mov
add
push
js
or
cli
popa
and
shrb
dec
stc
movsl
rcrl
and
pop
scas
sbb
push
in
jb
adc
xorb
sbb
iret
sarb
push
xchg
push
cmc
nop
dec
and
sub
mov
arpl
ljmp
push
jmp
fxam
stos
inc
and
mov
mov
xchg
jnp
leave
mov
icebp
cmp
inc
and
pusha
mov
mov
or
shlb
sahf
cwtl
jne
rcl
xor
mov
push
add
push
push
movb
mov
pop
cmp
xor
loopne
hlt
cmpsb
fwait
sahf
cmp
lods
jbe
mov
jge
inc
xor
test
lock
adc
pop
pop
push
loop
test
xor
mov
add
flds
sbbb
fucom
sub
test
cwtl
sahf
mov
cs
xchg
test
out
push
add
xlat
roll
pop
fmulp
jbe
inc
jbe
repz
mov
in
lods
jmp
mov
adc
lods
jmp
or
cwtl
jecxz
jge
mov
fwait
pop
mov
pusha
or
stc
and
push
xchg
jle
mov
test
aaa
imul
mov
dec
outsl
cmp
gs
test
inc
mov
shl
mov
loop
out
pop
cld
sar
rcll
stos
push
xchg
repnz
push
jg
outsb
jnp
inc
stos
push
push
in
clc
pop
hlt
stos
das
mov
push
lods
test
aam
insb
or
xlat
pop
xchg
ret
cwtl
add
das
out
je
addr16
push
js
shl
js
lods
ret
jns
xchg
inc
xor
jne
call
jne
and
pushf
sbb
mov
loopne
sarb
stc
inc
jns
pushf
lock
pop
enter
sub
dec
jle
push
mov
insb
add
sarb
in
adc
inc
enter
mov
adcl
or
aam
faddl
mov
cmp
ret
xchg
or
shrb
xchg
into
hlt
and
into
or
xchg
out
add
in
mov
and
xor
sbbb
sub
cmp
in
nop
cli
mov
or
mov
repz
mov
ja
lret
push
frndint
cs
aaa
sbb
out
jl
stos
aad
lret
mov
mov
sub
dec
xor
repz
mov
das
loope
mov
shl
and
jns
in
daa
mov
cli
int3
xchg
out
jg
add
out
jno
les
enter
add
stc
push
daa
ljmp
cmp
xchg
dec
call
xor
dec
in
pusha
les
imulb
xchg
mov
test
inc
arpl
xor
movsb
sbb
sbb
out
aad
push
and
lret
xchg
repnz
and
and
mov
jg
push
testl
adcl
mov
out
xchg
imul
fcompl
rorb
data16
inc
push
push
push
gs
leave
call
xchg
mov
xabort
dec
sarb
arpl
test
enter
mov
rol
repnz
add
fidivrl
das
ljmp
sub
shl
mov
inc
push
pop
mov
or
mov
rcr
out
sub
inc
xor
dec
and
inc
or
fdivl
test
inc
cltd
icebp
in
rcrb
push
xchg
or
add
add
and
js
inc
fistl
mov
ror
js
add
xorb
push
lret
jp
aaa
sahf
popf
hlt
pop
in
jne
sbb
sub
adc
das
cmp
mov
add
call
adc
or
cmp
outsl
fsubrl
jae
arpl
xchg
push
cmc
in
clc
mov
fwait
lock
cmp
js
adc
mov
mov
mov
scas
sahf
xchg
push
and
sbb
sub
cld
and
adc
les
lret
sbb
or
mov
mov
sbb
nop
fistps
cmp
mov
or
out
jns
pop
divb
mov
cmp
ja
popf
cs
xchg
and
roll
negl
sub
pop
lock
arpl
mov
sub
pop
xor
dec
xchg
xor
push
xchg
sarb
jns
pop
pop
lret
jecxz
int
and
and
mov
fsubs
je
xor
inc
ss
lds
cmp
jg
ss
dec
sbb
lods
jo
repz
mov
mov
hlt
lds
jo
adc
loopne
mov
cltd
push
cmp
mov
dec
mov
ret
arpl
jne
dec
mov
pop
stos
pop
mov
mov
jnp
or
xchg
dec
jge
lods
push
ficomps
push
imul
fwait
add
jecxz
sbbl
sub
movsl
testl
stos
jne
inc
adcl
out
dec
call
pop
int
inc
push
ljmp
sub
xor
stos
jae
test
sub
sub
jge
mov
adc
mov
aam
ret
cltd
inc
cmpsl
mov
jg
test
mov
call
push
xchg
cmp
repnz
cmp
call
cmp
jp
ds
push
pop
test
push
jecxz
lret
sbb
pushl
jecxz
jnp
pop
roll
xchg
push
in
popa
pop
mov
xor
jnp
leave
shufps
xchg
inc
imul
fnstenv
adc
xor
jle
mov
pop
fwait
lret
cmp
xchg
mov
mov
int3
fdivrl
push
and
je
pop
sbb
mov
push
test
fs
punpcklbw
aaa
mov
jns
lret
arpl
or
sbb
add
dec
pavgw
jae
xlat
adc
rcll
bsr
inc
ds
lds
stos
and
pop
js
sub
jno
xchg
jg
jl
xorb
in
inc
movsl
js
mov
imul
cmp
in
jno
loope
insl
lahf
mov
xorb
rcl
dec
lods
sarl
cmp
test
lds
fisttps
xor
mov
repnz
cmp
sbb
adc
out
shr
daa
or
sub
inc
fstpl
mov
xchg
stos
sti
and
cmp
ucomiss
jne
dec
lahf
ds
sub
xchg
xor
add
ret
insb
push
mov
sbb
xor
push
push
dec
push
xor
add
loope
rorb
xchg
scas
ds
sbb
fwait
mov
lcall
inc
fs
dec
insl
jp
mov
int3
mov
add
repz
scas
and
lret
jmp
shlb
jmp
dec
ss
mov
movsb
dec
jb
mov
sbb
dec
into
mov
pop
xchg
fisttpl
dec
cli
clc
dec
movsl
sbb
or
cmp
or
push
push
roll
sbb
mov
ds
cmc
cmpsl
pop
push
enter
rcl
dec
mov
mulb
sub
fstpt
mov
ss
mov
outsl
dec
jno
lea
pusha
add
movsl
fidivrl
in
cmp
jmp
stc
lahf
sbb
and
sub
xor
ror
leave
mov
call
scas
imul
pushf
jl
pop
in
lock
adc
mov
lcall
jecxz
lods
outsb
pop
pop
lret
xor
jbe
test
movsl
mov
mov
cmp
pop
leavew
and
xor
push
add
sub
lods
sahf
rcll
dec
and
out
cmp
fnstcw
test
pop
pause
fstl
in
sub
adc
add
mov
push
ret
data16
shlb
push
jp
jecxz
inc
stos
mov
bound
mov
push
sub
or
out
mulb
popa
outsl
jno
fwait
enter
mov
ljmp
aad
jg
loope
pop
adc
inc
pop
dec
enter
push
or
adc
pop
mov
pop
push
nop
call
movsb
hlt
push
hlt
jbe
add
aaa
inc
and
cwtl
mov
stc
push
mov
xchg
jecxz
mov
mov
pop
and
lock
jmp
mov
ror
mov
pop
inc
test
pop
outsb
xor
jmp
nop
cmc
shrb
add
test
fwait
cltd
fcomps
jl
out
mov
jge
es
and
dec
popa
cmp
mov
inc
rcr
pop
inc
cmpsl
pop
fisttps
jno
inc
push
addr16
js
adc
xor
push
xchg
sbb
sbb
mov
jecxz
jb
and
adc
cs
data16
imul
pop
jbe
aam
mov
mov
cli
jecxz
cli
sub
mov
cld
rcl
ss
mov
sti
adc
sub
rcll
mov
lock
sub
ret
js
loop
int3
dec
les
add
pop
xor
fwait
stc
addr16
cmp
or
adc
pop
sub
lods
pop
pusha
push
cli
in
adc
je
mov
movsl
sbb
lods
sahf
leave
out
jge
rol
sub
pop
dec
cli
rcrb
cmc
sbb
outsl
sbb
inc
add
arpl
dec
mov
addl
sbb
fildl
divb
cmp
sub
add
jnp
out
or
push
mov
rcll
mov
mov
imul
mov
pop
xor
in
test
jge
into
jbe
mov
sub
out
cmp
fsubrs
xchg
inc
sub
and
div
mov
xchg
lret
add
ljmp
pop
mov
pop
push
mov
ret
adc
pop
jb
loopne
int3
movsb
or
loopne
sub
or
xchg
mov
aam
jge
clc
pop
mov
aad
insl
push
or
hlt
mov
scas
push
push
fdivrs
jge
mov
inc
dec
shrb
jecxz
jbe
push
out
test
pop
adc
sarb
and
xchg
jecxz
or
pop
hlt
rcl
out
jns
dec
lret
aaa
sbb
add
das
icebp
xchg
dec
push
loope
mov
shl
pop
cmpl
sub
mov
add
and
push
cmpsl
lret
cltd
cmp
add
outsb
mov
in
fnstcw
scas
test
cmp
xor
inc
leave
ds
adc
mov
and
jb
jle
cmp
insb
ss
sub
xchg
mov
dec
mov
shl
sbb
sub
push
test
out
jge
xchg
enter
out
enter
xchg
dec
push
test
mov
add
fwait
pop
mov
mov
dec
jae
int3
mov
mov
call
mov
jo
push
push
loope
mov
jbe
jne
mov
adc
rol
fcompl
dec
jo
ret
ljmp
mov
mov
mov
jae
pop
mov
pop
sub
out
xor
out
repz
stc
adc
add
cmpsl
jl
mov
ret
xchg
fcmovnb
fnstcw
fistl
les
push
push
loopne
inc
aas
test
enter
add
loop
js
sub
mov
pop
xchg
aaa
mov
leave
test
mov
data16
cld
jecxz
cld
push
imul
lcall
jge
movsb
and
hlt
mov
orl
lods
cmpl
sub
mov
out
enter
jg
jmp
adc
ret
cmc
or
call
inc
insl
adc
and
sub
xchg
dec
xlat
push
aam
stc
pop
mov
cs
jge
enter
into
cmp
leave
push
int
das
cli
nop
f2xm1
je,pn
scas
pusha
xchg
call
push
jb
cmc
cmp
add
js
sub
incb
dec
jl
mov
jge
push
adc
push
jnp
jbe
push
js
or
ljmp
xor
xchg
inc
pop
pop
test
push
aas
imul
rcrb
sub
cmpsb
pop
mov
hlt
es
out
pushf
mov
xor
or
push
loopne
imulb
xor
cltd
cmp
jg
in
jns
loopne
std
or
pop
fiadds
and
popa
push
add
jp
jecxz
insb
lods
imul
pop
xor
pusha
das
and
imul
int3
xlat
mov
push
inc
inc
jbe
sbb
les
xchg
push
mov
cld
fldt
jb
mov
sub
ret
call
sbbb
jl
das
and
test
rcrl
lcall
popf
imul
jle
push
mov
jle
sub
adc
inc
pop
sub
mov
das
jb
adc
mov
or
xchg
cmpsb
mov
mov
xchg
sub
in
pop
mov
das
shlb
mov
jecxz
pop
jge
cmpsl
or
fdivrs
dec
lods
xchg
in
test
pusha
pushf
push
fiaddl
pop
fsubr
popf
mov
xor
adc
adc
in
inc
cltd
add
ss
push
sbb
aas
push
ret
ds
lods
sbbb
and
sahf
xor
repz
dec
cmp
arpl
cmc
test
rcll
pop
loope
out
roll
cvtpi2ps
stos
and
xor
jns
cmpsl
shlb
cmp
cs
fs
call
clc
decl
stos
shrl
push
xor
pop
cmp
loopne
int3
cltd
jae
jnp
repz
roll
mov
push
in
push
jle
jl
std
add
xchg
mov
sbb
repnz
aad
xlat
repz
adc
fistpll
insl
ret
mov
sub
cwtl
lcall
dec
cmpsl
sub
clc
push
adc
dec
adc
push
fidivrs
jl
out
int
stos
xchg
mov
xchg
inc
pop
aam
pop
fs
mov
aad
xchg
fdivrs
mov
int
push
cmp
xchg
test
push
mov
aas
jno
sbb
mov
repnz
jno
or
imul
aam
icebp
add
or
push
mov
sti
cmp
jp
fisubl
and
iret
sbb
into
insb
arpl
ret
int3
mov
mov
jle
outsl
lret
sahf
ret
sub
fwait
stc
adcb
mov
orl
or
mov
ret
jecxz
xlat
pop
leave
mov
pop
jno
mov
cwtl
push
inc
add
int
sub
jb
sbb
cmp
scas
loopne
xchg
fisttpl
insl
lret
sbb
enter
dec
lahf
or
insl
sub
jge
cs
add
mov
and
repz
icebp
dec
or
in
test
sbb
jl
clc
shrl
sarl
push
mov
sub
pop
cmpb
sub
add
mov
or
pop
dec
mov
filds
xorl
pop
sub
cld
cli
fs
sbb
sbb
push
inc
lcall
loop,pn
jnp
cmpsb
out
or
es
dec
mov
mov
jg
sbb
pop
jnp
add
nop
sub
pop
ds
mov
fisttpll
and
push
aas
idivl
xchg
out
push
orl
arpl
ljmp
mov
xor
fstpt
arpl
push
movsl
jno
adc
arpl
and
pop
mov
addr16
jo
fucom
mov
and
int3
mov
shlb
sti
dec
mov
movsb
mov
outsb
dec
out
es
push
ljmp
xor
iret
shlb
jbe
push
xchg
pop
jge
ret
inc
xchg
xorl
in
xor
adc
pop
jbe
push
cmp
cmp
cmp
xor
fstl
imulb
mov
mov
dec
push
mov
pop
mov
into
mov
rolb
xor
call
and
fidivrs
pop
lock
xchg
sbb
jge,pn
fwait
enter
pop
into
push
cmp
jae
add
filds
loop
inc
push
dec
movb
aaa
sbb
mov
pop
aad
inc
dec
or
and
cld
push
xor
sti
add
xlat
es
outsl
arpl
cmp
jg
sbb
cltd
lret
xchg
mov
xchg
imul
mov
ret
xor
dec
jb
pop
aaa
adc
ja
pop
lahf
lahf
ror
cld
push
pushf
xchg
xchg
xchg
int
ljmp
sub
hlt
inc
cmp
iret
sbb
inc
xor
in
fistps
scas
mov
pop
xchg
mov
popa
clc
decb
add
and
pop
xor
aam
push
push
int3
mov
lods
cmp
mov
das
notl
pop
jg
stos
insb
cmovg
push
and
adc
inc
or
int3
aas
jecxz
push
mov
faddp
les
aas
testb
or
dec
shll
mov
adc
loopne
push
or
adc
movzwl
jo
rclb
andb
decb
repnz
bound
adc
mov
mov
pop
or
mov
rcrl
aam
jo
pop
imul
arpl
aam
and
jmp
and
mov
push
sbb
mov
cmpsb
ss
sub
int
jno
imul
mov
jbe
mov
mov
push
scas
push
rcll
xor
fstl
fwait
mov
jecxz
ss
sbb
sub
lahf
popf
decb
cmp
cmp
jo
inc
out
mov
or
ss
aad
push
pusha
mov
mov
pop
sbb
lock
dec
push
dec
jno
and
sarl
lahf
add
pop
xor
cmpsb
push
inc
cld
add
cltd
sar
xchg
loopne
jmp
lret
in
push
aas
jmp
xchg
push
mov
in
leave
ja
stc
scas
add
mov
jo
sub
push
js
push
pushf
jae
dec
sbb
lock
outsb
push
pop
sbb
mov
push
dec
decb
int
mov
push
nop
push
push
pop
mov
and
xorl
jge
dec
stos
mov
mov
pop
pusha
scas
jle
out
out
xchg
inc
sub
daa
out
push
cmp
cmpsb
or
nop
call
mov
mov
shl
lds
xor
cltd
mov
jle
aas
mov
mov
shlb
mov
jecxz
inc
mov
and
push
and
rcll
mov
movsb
in
dec
mov
in
mov
pop
sar
jno
movsl
jle
xor
sahf
sbb
out
in
push
adc
and
push
lods
icebp
sti
sub
adc
out
std
or
cmpsb
sbb
push
jmp
jg
or
jbe
cs
inc
lods
mov
and
pop
mov
fimuls
jae
pop
add
and
movb
push
jle
loopne
push
pop
pusha
std
icebp
dec
xor
pop
rolb
cmc
jge
inc
cmp
aad
jbe
ss
in
inc
mov
sub
push
xor
cld
mov
popf
cmp
jbe
out
and
mov
pop
cwtl
sbb
rcrb
fwait
sahf
out
popa
bound
xlat
xchg
aad
jge
stc
dec
or
leave
sub
mov
aad
or
mov
pop
sbbb
test
push
pop
ret
jb
pushf
fnstenv
leave
pop
xchg
mov
pop
mov
fidivrl
jmp
divl
mov
push
dec
loop
scas
jl
xchg
and
add
jmp
fstl
mov
sub
xor
and
xor
and
push
sbb
bound
pop
inc
loope
pop
pusha
mov
inc
mov
scas
scas
sahf
jmp
enter
jo
xor
enter
add
xchg
mov
pusha
mov
movsl
push
iret
test
rcrl
ds
xchg
mov
xor
lahf
mov
and
fimull
dec
add
out
pushl
sub
jle
sub
int
fisttpll
sbbb
enter
lock
pop
cmpsl
in
leave
popa
sub
sti
mov
inc
add
pop
jno
xchg
repnz
scas
add
cmp
out
cmpsl
les
inc
fistpl
and
and
xchg
data16
dec
sbb
xchg
insb
aam
lahf
inc
dec
cmp
outsl
mulb
cmp
insl
jmp
xchg
and
sbb
push
cwtl
aas
push
pop
movsb
pop
pop
shlb
movsb
cwtl
xchg
xor
and
xor
inc
faddl
hlt
xor
shll
sub
in
ds
mov
inc
or
sub
xor
sub
mov
pop
xchg
ja
add
lock
pop
testb
es
roll
dec
add
sbb
mov
in
add
cmp
and
xor
dec
push
ret
add
inc
or
pop
cmp
fisubrs
mov
mov
add
mov
les
lret
push
hlt
mov
cs
insb
adc
adc
mov
sbb
pop
xchg
data16
inc
cwtl
lcall
xlat
and
pop
addr16
popa
cld
add
mov
jno
in
or
jmp
xor
iret
jbe
push
mov
je
xchg
lock
sbb
pop
das
mov
fildll
cmp
sub
push
dec
je
shl
dec
mov
adc
mov
test
sbb
jg
dec
jmp
divb
outsb
dec
fstpl
movsl
dec
and
push
js
lods
aaa
xlat
ds
and
mov
stos
mov
inc
into
xor
sub
mov
mov
and
mov
adc
and
adcl
daa
mov
pop
in
sbb
popf
into
fmuls
add
mov
int3
mov
sub
pop
aad
outsb
jl
mov
stos
jnp
mov
in
fwait
lcall
push
lock
cmc
or
add
cwtl
fisubrl
sbb
movsb
push
dec
rol
std
mov
shll
push
lods
mov
xchg
cmpsb
push
cmp
in
push
or
cmp
jnp
mov
ret
ja
fwait
cmc
pushf
es
arpl
pop
push
cmp
shl
jnp
lods
mov
jbe
fmulp
xor
xchg
jg
jl
outsl
loop
and
sbb
jne
loop
iret
in
pop
jb
mov
shlb
xchg
cld
inc
sbb
xchg
xchg
mov
xor
or
vpxor
std
xor
inc
in
pop
pop
inc
pop
jno
lahf
or
gs
aaa
and
jbe
add
incb
pop
icebp
sbb
jp
lock
and
in
push
inc
icebp
in
inc
xchg
adc
ljmp
add
jne
adcb
cmp
mov
cmp
cmp
cmp
cmpl
sahf
mov
test
stos
pop
shl
mov
je
add
in
cmp
js
xor
mov
adc
test
fldl
hlt
and
movsb
test
push
sub
fisubl
xchg
je
and
mov
popa
push
xchg
loope
rorl
fs
add
dec
cld
fs
call
icebp
cmp
xchg
and
sbb
sub
mov
sbb
es
dec
pop
in
and
jecxz
je
insl
lahf
mov
sbb
lahf
pop
outsl
sbb
addb
aas
jmp
mov
das
mov
cltd
faddl
mov
rorb
shl
idivb
mov
push
test
test
fscale
push
pop
jo
xor
lods
push
and
pop
or
push
xchg
dec
cld
add
popf
je
insl
sti
in
clc
add
dec
imul
and
add
dec
pop
adc
dec
add
add
orps
xchg
pop
lds
popa
or
pusha
mov
fidivrl
mov
loop
or
sbb
mov
das
mov
je
inc
testl
adc
mov
dec
lret
cmp
fldenv
push
add
cs
adc
fcomps
cmp
les
pushf
push
lcall
out
shlb
test
adc
pcmpgtw
pop
test
idiv
out
dec
adc
push
aas
mov
into
out
out
sub
jmp
aas
push
push
repz
test
adc
push
push
xor
stos
mov
bound
cmp
sub
mov
sub
jmp
movsl
mov
outsl
or
jge
or
or
or
lods
call
iret
add
xchg
jb
mov
mov
scas
int
and
add
xchg
inc
loopne
jl
cld
mov
xchg
jnp
pop
xor
fbld
fisubrs
ret
lcall
push
into
out
xchg
stc
stc
xchg
shlb
sbb
and
jb
add
mov
jbe
fs
xor
into
xchg
movsl
stos
into
cmp
in
push
mov
lock
test
popa
or
inc
xchg
xor
leave
shll
push
push
sbb
daa
rcl
jp
push
fldz
sub
int3
in
sbb
inc
jl
push
xorb
les
popf
add
jns
div
and
jo
shr
test
out
cmpsl
frstor
sub
lds
in
stos
dec
hlt
sbb
xorl
gs
inc
mov
mov
hlt
jns
mov
pop
in
out
xor
cmpb
repz
push
clc
pop
pop
mov
dec
fistpll
loopne
out
jnp
jecxz
in
jne
xchg
xor
add
add
dec
orl
cmc
pop
mov
mov
pop
shl
inc
xchg
out
adcb
mov
jecxz
push
iret
xchg
or
cmp
sbb
jb
adc
mov
hlt
clc
scas
inc
xor
cmovns
mov
sti
and
cmp
faddp
fcoml
test
std
hlt
popf
movsl
dec
add
int
pusha
cs
call
lret
loope
push
int
mov
jnp
loopne
xchg
orps
aam
cmpsb
cmp
mov
bound
mov
stc
sub
ffree
andb
test
xlat
icebp
lret
or
ss
data16
dec
lods
ret
movsb
std
inc
jl
xchg
pop
addb
out
pop
mov
inc
scas
and
scas
inc
cmp
lret
roll
ret
fsubrs
ficomps
popf
and
in
out
mov
mov
shll
push
push
stos
into
xchg
push
mov
in
or
mov
add
out
in
ss
sbb
xchg
movsl
push
out
add
mov
push
in
imul
push
mov
push
outsl
repz
repz
xchg
add
and
mov
sub
loop
out
push
mov
ljmp
test
stos
xor
ret
xor
add
push
adc
lea
fsubrl
mov
shll
xchg
jne
mov
shll
pushf
aaa
pop
jg
ss
cmp
sub
mov
push
test
pop
movsb
je
push
jno
imul
pusha
pop
or
sti
test
and
mov
ss
dec
mov
cld
push
ds
enter
dec
out
ret
es
inc
arpl
xchg
cwtl
cmp
imul
jbe
repnz
subb
push
cmp
lcall
cmp
inc
adc
movsl
cmp
pop
dec
lods
xor
popf
cmp
mov
mov
fldt
sub
sbb
cmp
shll
mov
mov
xor
fsubp
jge
adc
inc
push
pop
aaa
jle
ljmp
ja
pop
sbb
ds
repnz
push
data16
sbb
fbstp
cs
jl
stos
jg
aas
repnz
das
sbb
cs
mov
mul
sub
pushw
or
sbb
lret
rorb
test
es
fdivs
pop
push
adc
stos
and
cmp
enter
popf
xorb
push
lret
fs
test
in
adc
mov
in
sbb
nop
sub
lock
lcall
jl
stos
and
je
mov
mov
stc
jecxz
mov
push
sarl
insb
xor
call
dec
jne
fstl
pop
popf
mov
push
push
xor
push
xor
popa
sbb
push
or
inc
es
cmp
mov
lcall
in
push
outsl
es
ds
mov
or
jo
xor
mov
xor
aam
imul
pop
push
add
ss
lret
loopne
sbb
iret
jno
push
test
ficoms
and
movsl
xchg
mov
push
aad
pop
int3
sti
lahf
push
push
cs
sahf
inc
sbb
add
inc
sbb
mov
jp
push
out
je
mov
les
pop
inc
rorl
imulb
fwait
idivl
mov
icebp
jge
ret
inc
fs
xchg
in
and
dec
or
jl
xor
xlat
cmp
stos
fimuls
pop
ficoml
es
adc
movl
push
sub
pop
jns
mov
and
jle
imul
jbe
aaa
outsl
std
or
push
rorb
jns
push
adc
daa
xor
sti
xor
fwait
movsl
xchg
xor
movsl
xchg
lret
ss
inc
or
mov
mov
dec
pop
jle
int
dec
mov
cwtl
sub
daa
add
test
gs
add
stc
addr16
sub
pop
popa
and
mov
dec
adc
cmp
repz
mov
shll
loop
and
push
clc
int
jne
push
xchg
jg
and
cmp
xorl
mov
js
xchg
sbb
hlt
mov
out
cmpb
or
cmp
into
inc
addl
arpl
cmp
push
ja
or
pop
out
sub
sub
enter
adc
mov
sahf
cmp
push
inc
lods
pop
cmpsl
push
or
or
push
mov
mov
ja
sbb
fdivrs
in
aas
fadd
inc
test
and
inc
sub
jle
cmc
mov
jmp
pop
dec
xchg
cmpsb
jl,pt
gs
jnp
jmp
mov
fidivrl
mov
sub
pop
jns
xor
lahf
out
jbe
test
lret
lcall
imul
inc
xchg
repz
gs
jnp
xchg
loop
inc
repz
ds
sub
rorb
xchg
jb
dec
stos
and
iret
xchg
push
int
sub
sti
int3
mov
shrl
sub
gs
cmp
aam
lea
jecxz
scas
add
addr16
lods
mov
jp
sub
mov
in
xor
or
cmp
sbb
sbb
ljmp
add
and
loop
outsl
popa
insl
iret
push
lods
mov
or
lahf
sbb
add
ret
sub
enter
mov
cltd
add
cltd
orb
or
mov
enter
int3
sbb
negb
or
aas
sub
cmpsl
and
test
push
dec
sti
fadds
adc
mov
std
lahf
adc
fsubrl
cmp
xchg
lods
mov
test
insl
cmp
aad
stos
inc
test
sub
add
dec
imul
test
cltd
sbb
les
add
xlat
fcoms
bound
mov
mov
dec
out
ja
xchg
mov
movsl
mov
or
cmpsb
xchg
sub
cltd
sub
add
arpl
inc
cwtl
push
push
mov
in
dec
mov
xorb
test
loop
mov
inc
clc
xor
lahf
test
mov
cld
mov
pop
test
data16
test
pop
xor
pop
inc
aam
adc
dec
jp
dec
adc
jno
pop
push
gs
jg
add
xchg
add
and
cmp
and
cmp
das
push
lahf
sub
subl
sub
shl
pop
dec
in
adc
cmpsl
mov
pop
arpl
and
fucomi
dec
imulb
jns
rep
out
fcmovnbe
mov
pop
and
lds
sbb
xor
adc
jnp
inc
data16
pushf
pop
daa
insb
lret
in
ja
mov
or
dec
scas
xchg
shll
stos
mov
jnp
push
test
xchg
in
mov
and
loopne
jl
sub
insb
test
pop
cltd
cmp
sbb
test
jno
xchg
setl
cmpsl
in
xchg
imul
std
lds
xor
insb
lods
xchg
add
xor
imulb
adc
jmp
sbb
pop
mov
inc
ret
jne,pn
lds
fwait
addr16
cmp
cmc
add
inc
loope
lods
mov
loopne
mov
leave
mov
pcmpeqb
cmp
dec
addr16
jno
and
adc
inc
cmp
mov
pop
mov
xchg
xlat
addr16
cli
shrl
dec
jg
sarl
jge
orb
mov
mov
icebp
out
not
or
ljmp
xchg
in
push
test
xchg
insl
mov
lods
and
dec
mov
push
and
ja
pop
fidivs
sub
and
sbb
iret
pop
sti
std
mov
loope
jbe
mov
test
lds
aad
xchg
or
out
rclb
ss
sbb
adc
or
cmp
adcb
jbe
outsl
inc
bound
inc
jo
inc
mov
mov
lods
push
fdivs
dec
sbb
xchg
movsb
lahf
aas
fcomps
jg
ljmp
aad
inc
incl
inc
or
jns
sbb
fsub
pop
arpl
add
xchg
mov
call
repnz
xlat
sahf
mov
mov
and
js
dec
or
sub
test
enter
loopne
fisubrl
imul
dec
pop
fdivrs
jnp
inc
sti
add
paddsb
cltd
mov
mov
xorb
mov
shrl
push
das
jns
stc
inc
std
pop
scas
pop
xlat
xchg
leave
sbb
out
jne
shll
push
push
inc
xor
xor
lock
xchg
jae
outsl
enter
cli
jae
pop
mov
mov
cmp
inc
xor
push
repnz
push
test
dec
pop
je
inc
cwtl
sub
add
pop
ljmp
ja
adc
mov
daa
cmpsl
mov
ljmp
xor
and
fimuls
push
fcomp
push
xchg
lahf
xchg
mov
sub
jle
jb
bound
hlt
cmpsl
lahf
or
outsb
sti
fmuls
arpl
mov
dec
jmp
jle
insb
mov
out
sbbb
xor
sub
outsl
cmp
inc
dec
jb
jo
jns
inc
jb
add
addr16
sahf
xchg
xchg
jnp
call
cld
loop
mov
ret
fst
mov
xchg
lret
dec
inc
or
cmp
mov
dec
mov
ret
mov
das
enter
push
out
jmp
jecxz
hlt
ds
xchg
jecxz
jnp
adc
lret
mov
xchg
hlt
mov
icebp
testl
movsl
sbb
repz
xchg
pop
sbb
sbb
inc
test
stc
sti
rcrb
cmp
lods
shrl
sbb
mov
imul
or
jmp
xor
sahf
clc
mov
dec
push
filds
orb
cmp
movsl
leave
push
sti
inc
and
mov
adc
jmp
inc
rorb
push
mov
mov
pushf
jg
xchg
cmpsb
adc
in
test
push
xor
add
dec
mov
xchg
adc
addb
cmp
nop
cmpsl
xchg
lock
push
repz
mov
xchg
imul
hlt
lret
lret
xor
cmc
adc
xchg
in
test
jecxz
in
inc
jecxz
cli
pushf
ds
popf
mov
sti
sub
mov
add
xor
pop
fdiv
add
cmpsb
add
cmpl
popf
sub
arpl
aam
hlt
inc
sub
mov
push
xchg
sub
pop
arpl
aas
pop
aaa
mov
sbb
push
adc
leave
in
cmpsb
or
shl
cld
pushf
dec
push
fs
or
pop
mov
push
add
pop
imul
insl
lds
sbb
es
mov
push
popf
rorb
loopne
sbb
ja
insl
ds
lds
push
mov
insb
add
add
pop
pop
stos
inc
in
lods
scas
je
fiadds
xchg
push
les
fdiv
inc
push
das
dec
inc
sti
adc
gs
pushf
lock
daa
ja
push
inc
cld
test
xchg
bound
push
aas
outsl
shlb
repnz
ror
push
int
mov
adc
out
xchg
mov
and
jle
sbb
pop
xlat
fmuls
ror
or
dec
inc
dec
mov
imul
int
pop
mov
xchg
es
push
push
enter
leave
popf
int3
adc
sbb
mov
int3
call
dec
test
xchg
int3
aas
fcmovne
mov
or
inc
xor
push
adc
loopne
jg
push
repnz
xor
push
or
movsl
fnstsw
mov
fstl
xlat
stos
pusha
scas
xchg
daa
or
pop
test
shr
aam
lods
pop
dec
or
imulb
je
adc
cltd
adc
shll
xorl
dec
mov
scas
sub
inc
push
les
dec
cs
sbb
push
sub
mov
cmp
jne
lret
js
push
ja
sbbl
adc
lea
jmp
mov
add
pop
pop
aam
dec
lea
jp
sti
and
pop
cwtl
rol
adc
cli
jbe
xlat
mov
in
sbb
bound
je
sbb
inc
sti
xchg
adc
mov
pavgw
stos
adc
cmp
leave
mov
inc
daa
sub
sub
add
dec
pop
xlat
addr16
pop
add
test
mov
mov
push
and
lcall
ja
sbb
aaa
stos
subl
or
in
movsl
mov
dec
cmp
data16
cmp
cmp
js
jo
pop
mov
repz
mov
push
inc
ret
mov
add
loope
inc
cli
pop
pusha
add
ss
loope
dec
mov
push
lods
pop
dec
jnp
pop
orl
adc
xor
ds
loopne
sub
aaa
cmpsb
stos
das
cmp
push
iret
dec
pop
ficompl
jmp
mov
scas
or
sub
inc
dec
sub
mov
inc
jge
scas
adc
jge
dec
ficompl
shlb
mov
mov
ret
and
sub
mov
mov
jle
add
push
adc
mov
xchg
push
adc
mov
push
add
adc
fistl
lret
shl
hlt
insl
and
mov
mov
lcall
jmp
push
add
nop
mov
in
dec
scas
rorb
inc
mov
int
cmpsl
cmpl
push
pop
or
sbb
movlhps
or
pop
shll
jnp
jo
aad
mov
jne
push
movsl
sbb
fimuls
pushf
fsubl
movsl
mov
push
rcrb
mov
movsb
push
sub
sti
and
or
adc
sub
inc
mov
in
add
js
insl
mov
pop
insb
add
lahf
cli
lea
inc
dec
xchg
xchg
das
mov
cli
mov
pop
inc
rcl
inc
add
jo
sbb
cmp
ret
push
fisttps
pop
cmc
jp
push
push
mov
mov
cmp
or
out
in
cmp
lahf
popf
cmp
pop
jecxz
or
hlt
pop
pop
inc
stos
add
mov
push
ret
push
and
and
inc
fildll
sub
outsl
scas
pop
jbe
adc
out
dec
in
insb
test
mov
loopne
xor
mov
iret
xor
fmull
gs
sti
fstpt
xchg
jnp
or
mov
adc
decl
clc
push
mov
xchg
jb
cli
inc
sub
enter
mov
les
xor
loop
jecxz
std
jecxz
push
add
jb
sbbb
cltd
stc
leave
jl
in
mov
jo
sbb
outsb
xlat
or
mov
inc
rolb
push
jb
push
inc
jecxz
es
loope
xchg
lock
scas
out
mov
loop
add
sbb
das
cmp
das
jg
imul
xchg
or
pop
lret
adc
sbb
pop
in
out
inc
int3
xor
adc
xchg
push
sbb
mov
dec
addr16
je
adc
xor
pop
in
es
sti
or
jg
fstps
mov
cmc
fstpt
lahf
leave
mov
lods
movsb
pop
daa
out
arpl
loopne
fsts
sbb
pop
push
std
mov
xchg
jp
mov
push
sbb
cmp
jecxz
xchg
xchg
mov
shlb
pop
jnp
repz
xchg
call
mov
in
mov
push
fucomp
lds
push
enter
insl
add
cltd
push
sahf
insb
and
rcrb
push
pop
insl
loop
inc
mov
add
push
pop
xor
add
es
leave
push
lret
out
pop
cmpsb
sub
adc
lahf
mov
fsubl
fbstp
out
mov
shll
inc
lcall
sub
notl
or
lods
outsl
mov
fdivrs
mov
mov
sub
inc
cmp
and
mov
scas
mov
shlb
loopne
repz
cmp
mov
pop
int
jae
lret
cmpsb
sbb
shlb
fldenv
std
rorb
push
mov
dec
mov
out
xchg
add
mov
gs
in
cmc
and
ljmp
loopne
jbe
test
outsl
push
mov
pop
out
sub
repnz
xchg
cwtl
jg
xor
aaa
int3
xchg
pop
je
cmpsb
out
cmp
jae
mov
push
mov
adc
cld
outsb
xlat
fadd
add
adc
mov
and
rorl
jnp
ret
pushf
ljmp
xor
adc
and
dec
lods
lods
repz
inc
pop
shrl
aas
fs
fbld
xor
xchg
add
out
mov
jno
or
pop
mov
rclb
adc
popa
cmp
pop
xchg
xchg
fxch
out
mov
xor
mov
sub
out
jmp
lcall
pop
dec
xchg
mov
or
ret
movsb
cmp
stos
jo
dec
aad
inc
and
adc
sub
add
mov
push
sbb
fstl
push
cmpsb
dec
cmp
push
add
sub
cmp
ficoml
jno
fsubs
call
add
test
sbb
jbe
inc
pop
xor
arpl
mulps
cwtl
sub
aas
es
fsubr
xor
je
ljmp
dec
ret
sub
mov
cmc
pop
aam
mov
sbbb
and
into
sub
je
aam
sbb
mov
xchg
divb
ja
mov
push
popf
popa
mov
xchg
xchg
cmp
in
dec
fldl
mov
ja
out
jl
mov
in
std
push
iret
or
xchg
add
xchg
mov
cli
mov
stos
pop
mov
push
lods
add
mov
sbbb
popf
and
insb
test
sbb
arpl
push
lcall
jg
push
insb
mov
inc
mov
xchg
push
nop
sbb
xor
sub
roll
sarb
jns
in
xlat
xlat
add
dec
mov
jnp
mov
les
std
xchg
mov
je
scas
or
lret
mov
in
adc
inc
pop
or
pop
inc
push
or
or
cmp
lret
pop
xor
daa
lods
jg
lahf
inc
jae
vmovmskps
dec
dec
and
mov
filds
je
and
les
ljmp
pop
int3
daa
lret
mov
pop
push
hlt
ret
test
cmp
std
rorb
xchg
push
xor
inc
lock
mov
xchg
fs
frstor
aas
ss
lahf
xchg
xor
pop
lahf
lret
testb
lock
lds
js
push
mov
xchg
mov
idivb
lea
fisubs
push
idivb
imul
mov
arpl
leave
sbb
aas
xlat
sti
insb
inc
push
cld
dec
jb
dec
sbb
pop
sbb
and
fwait
inc
repnz
xchg
aaa
fistl
and
les
nop
jo
jecxz
testl
jmp
dec
outsl
fistps
cmc
ja
addr16
in
imul
adc
std
and
xor
mov
jle
xchg
out
mov
add
cltd
repz
fdiv
int
or
lret
scas
mov
loop
stos
sarb
cli
jno
dec
cmp
push
mov
mov
add
test
mov
jo
jae
inc
fdivs
pop
mov
cmc
les
popf
mov
lret
dec
fs
jle
shrb
ret
scas
gs
dec
fdivrs
xchg
leave
dec
inc
movsl
mov
cmpsl
imul
fidivl
jae
mov
lcall
outsl
xor
lcall
add
sub
loope
lret
cmp
mov
loop
add
xor
sub
cmp
adcb
jo
test
mov
and
arpl
adc
int
decl
sbb
mov
xor
ss
jg
out
out
add
sub
jno
sbb
cmc
stos
outsl
adc
add
jle
xchg
dec
je
test
add
add
and
pop
jae
mov
fs
pop
test
scas
pop
popa
scas
mov
add
lods
cmp
adc
sub
add
lock
roll
jno
dec
push
xor
enter
and
das
xchg
in
inc
out
xor
hlt
push
push
dec
cli
inc
push
lods
out
ret
repz
add
fdiv
sub
decl
mov
mov
pusha
pop
add
fldcw
sbb
push
adc
cwtl
in
mov
pop
mov
rcrb
xor
shll
mov
xchg
iret
cmp
repz
push
ljmp
and
and
push
xchg
popf
ljmp
pop
rcrl
ja
cmp
xchg
adc
push
mov
sbb
int
mov
cmp
pop
dec
pop
add
jbe
nop
or
repz
outsb
stc
mov
shrl
cli
bnd
fmuls
mov
fcomip
push
movsl
xorl
clc
jb
sbb
nop
jno
push
mov
push
in
dec
cld
dec
packuswb
shll
xchg
jno
pushaw
cmp
rorb
inc
or
mov
adc
ljmp
and
jmp
inc
xor
mov
xchg
popf
mov
pmulhuw
inc
stos
popf
sub
dec
aad
fwait
mov
aam
sarl
arpl
jns
insb
insb
sbb
fisubrl
pop
xchg
rorl
inc
fistpl
and
mov
pop
xor
or
stos
lods
push
sub
jl
out
xor
jl
lcall
jl
mov
or
xchg
sub
inc
lret
jae
pop
out
push
addb
enter
call
jnp
mov
jp
ds
or
mov
add
mov
xchg
inc
jnp
loop
jg
hlt
or
sub
out
jge
push
lds
push
sbb
mov
cld
mov
mov
xchg
adc
mov
pop
bound
les
mov
mov
cli
daa
pop
xor
das
jl
lds
mov
push
xchg
jl
loop
fidivrs
or
jge
loope
insb
add
mov
push
cmpsl
jecxz
mov
mov
cmc
pop
jb
dec
mov
aas
sub
jne
dec
mov
mov
xlat
shrl
inc
jle
push
popa
jg
or
sub
mov
dec
lods
das
lret
aad
ss
hlt
arpl
cs
fisttpl
lods
ret
test
iret
aad
push
mov
subb
jb
scas
test
pop
and
dec
adc
faddl
je
in
decb
call
dec
out
iret
push
mov
cmp
test
push
mov
cld
into
test
out
fistpl
mov
ret
cmp
sbb
sti
shrl
cmpsb
xchg
data16
lods
fs
ret
rcll
adc
ljmp
in
stos
fwait
or
and
cli
adc
shlb
aam
in
lcall
pop
into
mov
in
sbb
or
xchg
cmp
pop
std
dec
cmp
jge
add
or
cld
adc
or
cli
into
mov
cmp
xor
js
inc
js
mov
adc
xor
jmp
sub
mov
inc
add
pop
loop
std
push
jle
xchg
add
jl
push
dec
dec
xor
fistpll
mov
inc
or
jle
and
fcomps
add
adc
cmpl
adc
lahf
rcll
enter
in
orl
cwtl
fistpl
popa
or
push
mov
imul
jp
in
js
xchg
int
inc
lcall
add
rcrl
xor
bnd
shll
addb
enter
call
into
lods
dec
or
xchg
sti
jle
sbb
xchg
push
popf
dec
xchg
mov
push
mov
shlb
add
dec
cmp
test
in
and
out
jle
cmp
repz
inc
jecxz
es
mov
xor
inc
sbb
jbe
loope
out
push
dec
mov
mov
sbb
xor
jle
test
add
sub
pop
inc
cmp
aaa
xchg
pop
adc
dec
mov
ret
mov
mov
imul
test
add
movsl
push
fnstcw
sbb
repz
enter
lret
daa
xchg
xor
aaa
in
data16
pop
inc
jne
push
imulb
mov
pop
mov
in
pushf
inc
das
iret
pop
dec
adc
push
stos
sbb
arpl
fucomip
cmp
enter
inc
out
testb
jae
das
repnz
inc
pop
mov
add
pop
push
into
or
mov
ljmp
fiadds
out
jnp
or
sub
pop
sahf
push
cld
mov
popa
std
cmp
mov
xor
mov
cmovp
jne
or
dec
mov
cmpsb
pop
or
push
sbb
sbb
inc
fcomip
xchg
stc
test
jp
rorb
xchg
scas
mov
push
ljmp
add
or
pop
ror
inc
lods
sahf
pop
lret
loopne
pop
fs
jmp
fs
stc
fisttpl
popf
mov
shlb
pop
adc
fsubl
jbe
icebp
addr16
push
imul
popl
xchg
mov
xor
and
inc
xchg
hlt
les
leave
sub
cmp
lods
mov
or
sbb
xor
and
dec
jne
cmpsb
and
stos
scas
mov
stos
mov
mov
mov
ljmp
stos
xchg
idiv
into
lods
cli
adc
xor
jmp
pop
cmc
mov
xchg
lcall
or
xchg
xchg
jecxz
int
push
pushf
mov
mov
inc
cmpb
stos
scas
inc
in
out
dec
lods
sbb
ja
inc
xchg
decb
pop
add
jo
sub
rol
add
sti
loop
jno
jmp
icebp
inc
imul
lds
sbbl
sub
icebp
ds
cmpsb
mov
push
aaa
out
mov
cli
xchg
jno
dec
rorl
push
sub
dec
in
xor
xor
adc
or
ss
stos
pop
inc
cmp
mov
jl
mul
cmpsb
mov
fisubs
insb
fisttpll
sarl
push
hlt
pop
xchg
aad
and
inc
fwait
out
jnp
ret
decl
adc
push
cld
or
rclb
sti
rcrl
mov
jne
mov
scas
repz
inc
leave
jl
xchg
mov
push
outsb
lea
mov
out
adc
and
push
push
xchg
cmp
push
repnz
sub
inc
inc
mov
cli
fstpl
test
ljmp
jb
scas
mov
xchg
ds
pop
mov
jo
adc
bound
lock
pop
mov
add
cmpsl
in
xor
pop
out
loopne
mov
pop
mov
jp
test
rclb
sub
dec
mov
sahf
push
add
pop
pushf
aam
mov
shrl
movsl
push
inc
cmp
adc
sbb
out
jns
cmp
mov
pop
push
ss
out
push
jb
int
xor
add
test
sub
mov
or
dec
sbb
out
shlb
ja
cmpsb
xchg
xchg
jno
imul
mov
xchg
les
sub
push
xor
iret
lcall
scas
push
sub
dec
bound
loope
shll
push
pushf
das
cmc
cmp
fwait
add
mov
cltd
sbb
mov
cmpsb
movsl
and
out
sbb
test
lock
hlt
shll
rcrl
icebp
mov
sbb
test
flds
xor
sub
push
stos
ret
and
and
jle
sbb
ss
cmp
and
jmp
pushf
fadds
pushf
mov
jae
addr16
sbb
mov
sub
inc
mov
jae
repnz
inc
js
mov
xor
sub
push
mov
in
mov
std
cltd
movb
ljmp
movsb
sbb
call
push
ficompl
xchg
rorb
aaa
cmpsl
pop
xor
ret
mov
mov
out
add
push
movsb
cwtl
stos
push
js
pop
sahf
fnsetpm(287
or
inc
cwtl
mov
jecxz
mov
mov
je
popf
std
mov
lods
jp
adc
adc
adc
leave
int3
xor
sbb
lds
adc
hlt
or
add
out
sbb
mov
ss
sub
scas
nop
cld
xchg
mov
jnp
cmpsb
inc
jne
xlat
cmpsb
loope
sub
cmpsb
in
and
gs
xchg
sbb
lret
popa
mov
cmp
dec
xchg
idivb
pop
out
pop
sbb
repz
popf
jne
push
aaa
dec
jl
int
sub
cmp
push
mov
cmp
mov
gs
ffreep
inc
shlb
mulb
shll
ds
xchg
mov
iret
aas
lods
insl
cmpl
out
movsb
es
ss
imul
in
dec
ret
lret
cmc
int
or
inc
mov
scas
in
incb
roll
sub
pop
mov
and
pop
loopne
clc
xchg
mov
dec
or
loopne
mov
adc
mov
add
dec
insb
into
inc
mov
movsl
adc
push
lret
prefetchw
or
push
andb
jb
popf
or
add
fmul
shll
mov
mull
xchg
in
dec
in
cmp
mov
out
enter
out
shll
xchg
dec
sub
push
dec
cmp
push
mov
das
dec
sub
pop
jo
dec
add
push
les
movsb
cwtl
rorl
test
mov
jge
ror
xlat
aam
push
imul
mov
cs
ja
aas
cltd
mov
cmp
cmp
jns
adcl
sub
pop
das
mov
xchg
xchg
loopne
push
add
and
das
popf
xor
lea
dec
lock
ja
hlt
insb
adc
popa
mov
push
jns
xchg
cmp
sbb
addr16
xchg
outsb
movsl
inc
pop
mov
mov
xor
enter
jl
jb
lret
mov
je,pn
adc
sub
cmc
sbb
and
dec
mov
int
pop
pop
jae
lods
push
movsl
add
mov
add
cmpsl
frstor
dec
jmp
aam
enter
mov
mov
aad
mov
in
cmp
in
mov
push
outsl
mov
push
in
xchg
insb
mov
jmp
stc
inc
sub
shl
add
pop
cmpb
loopne
fnstsw
aad
add
push
sub
lcall
daa
leave
ljmp
xchg
movsb
mov
add
sub
mov
jo
out
scas
mov
pushf
cmp
sub
inc
mov
push
scas
scas
jne
out
in
mov
jg
mov
nop
mov
in
movsb
sbb
movsl
push
cs
adcl
faddl
fxch
imul
jle
xchg
lods
inc
or
dec
sbb
mov
ret
test
push
jo
push
or
fimuls
mov
pop
cmc
sbb
in
or
dec
xor
cs
xchg
mov
pop
insl
leave
ja
xor
adc
lcall
into
mov
cs
jb
add
pushf
dec
adc
cmp
cmpl
scas
inc
dec
test
push
out
mov
lcall
andb
gs
lea
rorb
call
aaa
lret
jne
inc
mov
push
dec
movsb
lcall
lret
mov
mov
test
ds
movsb
pop
enter
ret
mov
sbb
jp
data16
popf
out
xchg
nop
loop
lahf
jl
sub
xchg
mov
fisttps
call
inc
repz
or
xlat
add
shrb
adc
mov
push
pop
mov
in
xchg
pop
aad
es
sarb
sbb
sub
hlt
xchg
mov
mov
push
cmp
dec
shl
aad
mov
out
jecxz
jbe
mov
out
jecxz
enter
in
jmp
les
into
stos
or
or
cmp
push
sarl
xor
je
pop
lahf
int
mov
rclb
jle
xchg
das
mov
mov
stos
mov
loopne
push
js
fsts
lods
mov
inc
addr16
packuswb
mov
aad
test
sbb
xlat
leave
push
mov
loope
testl
je
aas
jb
jns
dec
mov
sub
sub
scas
arpl
nop
push
mov
jl
xchg
aas
repz
mov
lret
outsl
push
mov
inc
jmp
jb
hlt
mov
cmc
shrl
ja
cmpl
iret
or
inc
jl
jp
inc
scas
dec
push
push
push
inc
leave
pop
std
or
int3
andl
mov
and
xor
xor
stc
imul
or
cmp
adc
cld
jg
cld
int
orb
fistps
orb
inc
sbb
out
lcall
sbb
ficoms
or
pop
roll
adc
scas
mov
mov
dec
ret
js
imul
lods
cmpsl
call
and
sti
inc
xchg
ss
gs
push
adc
and
inc
dec
jo
out
outsb
add
xor
in
mov
in
jne
mov
push
push
aad
adc
cltd
jge
lods
insl
push
lock
mov
lcall
sbb
enter
push
jg
xor
push
pop
and
orl
lret
xchg
sti
les
jbe
mov
mov
test
ja
push
sbb
jne
pop
andl
lret
mov
cmp
or
bound
es
xor
mov
mov
jge
adc
pop
in
or
lret
bnd
stos
loopne
push
mov
fildll
or
shl
in
adc
xchg
push
outsb
sbb
test
pop
push
push
mov
jnp
fimuls
and
jg
inc
int3
dec
xchg
dec
imul
cmpsl
jb
jg
in
test
and
addr16
aas
dec
lret
ds
cmp
pop
jb
xor
and
sbb
dec
mov
fimull
subb
ljmp
jo
pop
mov
mov
jbe
repnz
cmc
call
jge
xor
out
dec
mov
pop
jg
les
ret
sbb
nop
mov
pop
negb
push
mov
scas
jo
test
mov
or
cmp
mov
nop
shl
ret
lds
int
mov
cmc
pop
cmp
push
sub
test
mov
rcll
rol
xchg
mov
sbb
in
inc
lock
js,pt
movsl
cmpb
mov
pop
pusha
mov
sbbb
mov
dec
push
add
iret
std
jp
cltd
mov
movsl
decl
shrl
push
lea
fdivrp
push
in
les
imul
jg
mov
popa
divb
sub
test
lea
dec
jecxz
push
xchg
inc
push
push
push
std
loopne
xor
sbb
hlt
ss
pop
negb
loopne
pop
aam
push
jp
daa
fnstcw
mov
out
sahf
test
js
mov
cmp
dec
push
iret
push
outsl
sahf
mov
xor
cs
pop
lock
push
vpsllw
or
push
int
movsl
jg
mov
call
cmc
mov
mov
sbb
add
imul
push
out
jmp
mov
movsl
sti
and
sbb
xchg
mov
xchg
sub
xchg
bound
into
mov
xor
cltd
pop
jp
sub
adc
mov
add
leave
xor
mov
push
iret
test
les
cwtl
cmp
mov
jge
mov
js,pt
or
mov
jle
cmc
ficompl
int3
jl
stos
fnstsw
cmpsb
adc
push
add
lds
mov
add
aam
jne
popf
cmp
imul
mov
xchg
bound
mov
scas
mov
xchg
jmp
out
mov
ds
pop
sbb
insl
pop
rclb
fs
and
xor
mov
mov
pop
sbb
out
mov
test
dec
push
xor
pop
repnz
dec
pusha
cli
lea
lock
mov
lret
xchg
fiaddl
nop
aam
push
loopne
ud1
mov
or
cmp
sbb
mov
and
cmp
push
push
sub
mov
push
inc
daa
shll
nop
mov
imul
cld
add
movsb
test
rcr
dec
xchg
cmpsb
out
adc
lock
cmpsb
xchg
cmp
sbb
in
cmp
sub
je
mov
mov
sub
or
repz
pop
jno
jle
lea
dec
dec
xchg
cmc
mov
dec
xor
ds
push
js
ja
stos
push
mov
mov
cmpsl
insl
pusha
mov
inc
xchg
lahf
leave
iret
lods
push
inc
popa
mov
mov
aad
sbb
sub
pop
fists
mov
mov
mov
leave
cmp
xor
dec
jge
push
fstpt
sub
in
in
mov
jae
pop
ja
inc
insl
lods
fstpl
ret
cwtl
push
fists
mov
pop
mov
in
in
iret
xlat
bound
and
mov
dec
xchg
dec
int
push
and
rolb
rcl
cmc
call
cmpb
xchg
push
scas
sti
inc
lret
fdivrp
bound
adc
clc
mov
sbb
jne
gs
adcl
mov
test
pop
mov
cmp
sbb
fwait
aas
add
icebp
stos
pop
jl
push
cmp
pop
aas
movsb
nop
bound
aam
in
gs
pop
mov
lods
cli
jle
xchg
cmpsb
pop
push
mov
xchg
pop
pop
and
jno
lret
mov
jb
shr
xor
adc
and
jbe
dec
dec
xorl
in
neg
jo
or
pop
inc
sahf
push
xchg
lods
mov
stc
enter
gs
std
out
insl
xchg
scas
cwtd
stos
loope
repnz
test
adc
push
scas
leave
imul
push
add
xor
int
sbb
pop
movsb
push
sub
daa
push
les
xchg
and
pop
push
inc
aaa
sbb
or
add
lret
divb
adc
adc
ss
or
ds
cmp
icebp
mov
addr16
leave
out
mov
jl
jmp
mov
bnd
fwait
mov
lret
cmpsb
and
leave
add
jge
and
and
daa
neg
xchg
insl
ret
lcall
mov
jp
cmpsb
inc
push
aaa
lret
ss
popa
xor
jl
and
inc
insl
cld
mov
push
jne
dec
movsl
rcr
rcrl
cmc
jns
fsubs
adc
jle
inc
hlt
xor
pop
test
add
int3
xor
bound
fbld
inc
out
jecxz
jle
movsb
fisubl
in
push
sbb
sub
mov
movsb
cmp
pop
pushf
scas
sbb
sbb
orb
push
lock
cmp
mov
push
jmp
inc
sbb
mov
pop
push
les
std
aas
out
arpl
popf
push
push
inc
or
add
lods
lods
les
fcmovnb
or
jle
sub
inc
jp
cld
push
mov
sbbl
stos
daa
fcomp
and
jbe
arpl
mov
or
push
loopne
and
imul
or
sbb
mov
inc
mov
mov
mov
add
inc
addr16
ljmp
push
test
add
repnz
mov
pusha
ds
xchg
xchg
cwtl
lret
adc
scas
xor
mov
incb
loope
xchg
loopne
test
push
hlt
es
sub
or
loopne
outsl
xor
clc
inc
dec
mov
mov
lods
mov
daa
rol
mov
test
sub
pop
pop
mov
or
mov
mov
hlt
mov
and
ror
lahf
js
mov
lea
xor
adc
mov
or
cs
jg
enter
pop
pop
add
jnp
push
xchg
div
mov
sbb
add
xchg
xchg
fwait
in
inc
dec
leave
dec
lods
fstpl
lods
rorl
mov
aam
ja
push
je
rcll
add
cmp
xchg
xor
insl
into
sub
notl
enter
jmp
sbb
cmpsb
sbb
dec
lock
and
mov
mov
push
xorl
jb
and
add
lcall
hlt
mov
mov
mov
out
and
lret
jo
sarl
stos
sub
loop
ret
adc
xchg
xchg
pop
cltd
xor
dec
inc
outsl
sbb
pop
les
sarb
push
mov
dec
dec
cmp
mov
pushf
es
mull
mov
lods
out
aaa
shrb
iret
pop
mov
es
adcb
mov
pop
das
sub
popa
and
lea
xorl
pushf
lcall
xor
xchg
mov
rorb
cmp
adc
out
xor
stos
xor
rcrl
iret
cltd
jl
or
xchg
ds
inc
lea
xchg
mov
push
cmp
negb
stos
and
jge
mov
mov
lods
xor
fidivrl
outsl
data16
das
push
xchg
loope
js
ljmp
adc
aaa
inc
fstpl
or
push
mov
jae
xchg
xor
testb
push
int
hlt
into
ljmp
adcl
mov
sahf
cmp
push
push
jge
jecxz
or
add
mov
shll
fstps
jg
inc
xor
xor
sbb
scas
aad
inc
xchg
cltd
dec
negl
xchg
mov
gs
push
cmpsb
add
cmp
adc
inc
adc
in
pop
pushf
fnstenv
dec
mov
dec
mov
in
pushf
fdivr
incl
repnz
pop
movsl
mov
and
outsb
lea
pop
and
cld
cli
push
pushf
adc
popa
fisubrl
test
mov
pop
pop
mov
adc
outsl
lret
incb
jb
scas
dec
xchg
sbb
push
lods
dec
sbb
gs
call
cmp
in
cmp
add
inc
into
movl
pop
add
neg
pop
inc
and
in
cmp
jmp
fwait
nop
in
mov
sbb
in
scas
jge
roll
jno
scas
test
dec
icebp
mov
jecxz
or
js
dec
push
icebp
test
scas
and
sbb
push
les
inc
shll
sahf
push
sbb
popa
or
dec
scas
mov
jae
int
ss
mov
jbe
push
mov
jo
lret
call
stos
insb
push
fdivrl
cmpsb
les
push
mov
xlat
hlt
pop
bnd
out
mov
push
insb
fistps
jge
inc
sti
lock
frstor
movsl
inc
ljmp
daa
push
add
out
add
xchg
dec
in
sti
test
outsl
stc
pusha
add
fcompl
xchg
sub
push
sbb
xchg
shll
ret
movsb
pop
adcl
push
jb
mov
dec
rcl
jl
fsts
sub
add
inc
fcomi
pop
xchg
leave
or
pop
das
push
cwtl
je
sar
adc
les
pop
mov
pop
xor
xlat
stos
push
fisubrl
outsl
xor
mov
insl
cmp
cmp
cwtl
or
push
out
push
push
add
push
mov
std
scas
je
movsl
xchg
les
lret
and
jmp
repnz
ljmp
push
xlat
mov
adc
jl
inc
mov
sahf
in
dec
dec
fchs
push
lret
dec
lds
dec
sub
sbb
sub
xchg
daa
lock
dec
sub
pop
inc
cmp
movsb
in
jns
pop
arpl
inc
aas
cmp
jb
aam
pop
mov
sub
sub
pushf
inc
icebp
jns
out
xchg
ret
or
addr16
mov
adc
daa
push
mov
adc
scas
imul
imul
scas
inc
sbb
leave
xchg
pop
inc
call
ja
or
int3
jbe
stos
shrl
add
mov
sub
adc
cmp
popf
aam
shlb
mov
push
lcall
arpl
pop
cmp
sbb
out
mov
mov
scas
cs
decl
add
lock
in
ret
push
ret
xor
imul
je
pushf
xchg
mov
pop
pop
add
mov
or
add
mov
xorb
andl
andps
xor
inc
cmp
lahf
shrb
jmp
mov
xor
push
inc
and
adc
cmp
adc
jecxz
into
xor
dec
pop
cmp
shlb
inc
insl
xor
jle
es
outsl
jno
notl
or
xor
enter
dec
sub
sbb
add
jp
cmp
jecxz
mov
pop
das
mov
inc
bound
sbb
pop
mov
add
mov
inc
push
or
xchg
xchg
jle
mov
loop
rorl
mov
add
push
orl
or
mov
push
cltd
cmp
jb
jb
les
mov
cli
aam
push
mov
ljmp
cld
xchg
add
pop
push
inc
inc
adc
sbb
and
jecxz
pop
mov
xchg
mov
cli
or
add
mov
stos
pop
xlat
pop
ret
inc
xlat
divb
lock
pop
mov
xchg
gs
inc
xor
shll
scas
dec
mov
mov
loop
add
fdivl
clc
leave
stos
mov
sbb
in
adc
jle
sbbb
push
mov
jmp
lahf
push
mov
mov
sbb
pop
pop
popa
adc
mov
pushf
div
test
mov
ret
scas
xor
loop
cmp
dec
jmp
scas
pop
lock
mov
in
flds
xchg
dec
lods
mov
xor
dec
test
std
shrb
lock
jae
cmp
mov
push
lret
icebp
or
call
pop
push
push
clc
inc
popa
outsb
push
pusha
icebp
test
or
aam
inc
test
lret
or
popf
and
clc
aas
test
movsb
jp
and
test
mov
mov
in
int3
divl
stc
mov
jmp
xchg
fwait
jno
lret
sbb
push
jns
and
dec
lds
adcl
mov
in
push
mov
pop
in
dec
es
dec
add
dec
push
mov
into
lahf
test
xor
data16
test
ds
ficoml
cmp
int3
push
pop
mov
outsl
fstpt
mov
rcll
inc
sub
fimull
mov
out
fwait
pusha
jp
jo
shld
shll
mov
cmp
pop
push
icebp
sbb
push
push
in
cld
ret
inc
fistl
loope
mov
mov
mov
add
sbb
sbb
dec
pop
and
mov
xlat
iret
add
ds
or
pop
jae
push
adc
adc
repnz
sbb
xchg
xchg
hlt
cld
aaa
mov
mov
sbb
sbb
sub
cmp
imul
xchg
pushf
push
dec
jl
dec
sbb
pop
inc
sbb
les
pop
out
cmp
stc
adc
movsl
push
repz
into
mov
loop
arpl
sub
lcall
icebp
add
jle
inc
pop
arpl
shrl
cltd
push
ret
sbb
mul
push
ja
dec
orl
cmp
or
cld
repz
adc
cmp
std
cmp
cmp
into
sub
mov
daa
jp
xchg
stc
inc
xchg
mov
jle
stos
cmp
jno
mov
flds
xor
aas
dec
int
push
addr16
movsl
shl
xchg
cld
movsl
orb
shl
xchg
pusha
jo
aas
std
sti
in
xchg
cmp
rcrl
arpl
movsb
adc
mov
in
stos
add
pop
fisubrl
dec
insl
popf
out
int3
add
in
mov
jl
in
aam
std
sub
fmulp
xchg
popf
adc
inc
in
rclb
push
clc
and
pop
ret
sbb
mov
daa
lcall
shlb
jbe
rcrb
jbe
fld
andb
ss
lret
es
cmp
pop
in
and
aad
test
outsl
repz
push
ret
call
inc
cwtl
in
dec
outsb
adc
mov
ret
sbb
cmpsl
sbb
lds
mov
add
xor
aam
mov
stos
pop
jge
mov
mov
push
pop
int3
aas
mov
ds
pop
clc
es
push
fcomip
dec
lret
aaa
mov
sbbl
inc
lret
cmc
xor
mov
fsubrs
xchg
push
popf
cld
pop
bound
cmpb
push
out
mov
andl
xor
js
inc
mov
inc
sbb
xchg
ret
sti
out
shlb
test
mov
into
imul
sti
mov
push
inc
mov
call
call
add
outsb
push
sub
jb
and
stc
sub
fwait
je
add
push
add
dec
mov
pushf
insl
std
push
sub
in
pop
xor
adc
jle
out
push
mov
jecxz
ja
add
mov
push
xor
sub
mov
xchg
jge
call
dec
ret
in
inc
xchg
incl
mov
mov
pop
cld
xor
shr
outsb
sub
cli
cltd
je
cmc
scas
rorb
and
outsb
jbe
or
dec
ja
add
notl
fnstsw
aaa
push
pop
sub
notb
jb
inc
jge
pusha
popf
mulb
mov
and
mov
fwait
into
iret
jg
int3
jae
mov
push
int3
pop
inc
lods
adc
in
cmp
inc
int3
inc
ljmp
lds
sbb
sbbb
jmp
or
fisubs
aam
push
pop
mov
je
sub
roll
mov
sub
ss
xor
mov
enter
push
pop
mov
std
mov
scas
outsl
in
sti
cmp
mov
lcall
xchg
roll
cmc
sub
cmp
jl
add
pop
cmp
mov
popf
scas
ret
dec
int3
adc
inc
cmp
mov
xchg
add
popl
add
loope
insl
rolb
mov
out
mov
aad
adcl
inc
das
adc
aam
mov
rorl
or
and
xchg
fisttps
pushf
jl
xor
xchg
test
je
pop
add
jl
icebp
xchg
lret
test
jge
gs
stos
jns
aaa
fwait
loopne
arpl
adc
xchg
aas
xor
adc
push
dec
xorb
fdivl
xchg
pushf
or
testl
imul
xchg
jp
rcrl
or
push
or
xchg
mov
out
outsl
xor
cmp
add
sbb
sbb
out
sti
ret
xor
push
xor
push
pop
mov
or
roll
loope
sub
les
lahf
fcmovne
cli
jl
lods
inc
cmc
or
pop
sbb
pop
push
fcmovb
adc
negl
cld
std
jnp
mov
xchg
jbe
mov
pop
dec
push
mov
fbld
das
sahf
dec
push
add
gs
dec
movsl
rcrl
dec
out
sbb
jb
outsl
inc
fnstenv
adc
arpl
adc
fcmovbe
mov
sti
in
xchg
adc
mov
or
jl
xchg
bnd
cmpsl
bound
push
rol
pop
icebp
out
push
mov
jecxz
adc
pop
sbb
lds
jmp
fistpl
mov
dec
add
lds
scas
scas
sarb
xor
popa
mov
inc
sub
repz
add
fldcw
dec
sti
cmp
jnp
push
inc
mov
pop
jo
adc
std
pop
inc
sbb
lds
aad
dec
shr
inc
and
mov
cmp
arpl
jmp
add
jp
jp
insl
push
sub
jb
imul
mov
cmp
pushl
loop
fs
addl
stc
dec
sbb
inc
sarb
inc
aad
popa
divb
inc
xorl
in
xchg
out
insb
and
out
lods
repz
pop
push
fs
cmovg
les
add
lds
jg
xchg
or
push
or
mov
outsb
mov
xchg
xchg
fisttpll
dec
psubb
cmpsl
xchg
arpl
fidivs
pop
jno
ljmp
fs
mov
pop
xchg
nop
flds
dec
notl
fsubl
test
sub
jne
xor
je
fcmovnb
pop
in
in
push
inc
adc
jecxz
xor
nop
cmp
xchg
mov
leave
cmpsb
mov
mov
adc
scas
inc
outsb
les
sub
xchg
dec
adc
outsb
stos
aas
mov
es
fldcw
and
mulb
addr16
divl
xchg
inc
mov
xor
aaa
in
into
mov
pop
lahf
aaa
mov
inc
lahf
pushw
push
jl
cmp
inc
jg
lret
push
sub
add
cmp
ror
sub
xlat
call
sub
push
cmp
cld
repnz
je
sbb
test
fdivr
push
push
lret
mov
in
adc
xchg
inc
sti
and
jmp
xor
xor
push
sub
jle
xchg
xor
lods
stc
xchg
xchg
jecxz
xchg
test
int3
sbb
mov
push
out
mov
repnz
ds
xchg
lds
mov
out
or
popa
push
push
daa
mov
xchg
pop
adc
pop
out
loopne
rcll
addb
outsl
repz
push
int3
test
adc
fwait
or
and
cmc
dec
dec
sub
lock
sbb
cmpsl
fidivs
inc
inc
loopne
popa
cmp
jae
jbe
jo
inc
in
loop
jle
out
pop
mov
outsb
jmp
scas
mov
cmpsb
pop
xor
ds
insl
jbe
inc
pop
ljmp
adc
pop
or
pop
fcomps
movsb
rorb
out
mov
xor
sub
loope
add
adc
int3
xor
sub
cltd
jae
ret
push
aas
inc
stos
mov
idivl
mov
in
outsb
and
adc
lods
mov
pusha
out
xor
fucompp
idivl
lock
jg
xchg
cmp
pop
cli
aad
lock
fwait
jns
push
pop
sbb
push
pop
mov
in
mov
into
movsl
movsb
shll
addr16
outsb
jg
fidivrs
and
and
iret
daa
mov
stos
pop
popa
add
call
and
call
sub
jge
xchg
jg
das
fnsave
xchg
sub
mov
sbb
mov
jmp
cmp
ret
and
jl
sahf
or
and
xchg
xchg
push
jmp
and
movsb
sub
jae
insl
cmc
insb
sbb
ret
sarb
std
jmp
scas
enter
jnp,pn
dec
push
aad
add
out
out
movsb
sub
jno
dec
in
lahf
pop
mov
pop
int
pop
test
in
sub
lret
shrb
push
cwtl
notb
mov
aad
xchg
rcrb
push
adc
stc
adc
in
je
push
mov
pushf
sub
sbbb
seta
jmp
pop
cmpsb
mov
pusha
push
ret
in
push
mov
pop
test
sub
loop
mov
nop
lcall
out
mov
arpl
sbb
insb
in
daa
sub
pop
push
loope
xchg
pop
lcall
shll
or
ljmp
sub
add
jmp
loopne
mov
movsl
aas
not
andl
cmp
pop
ds
mov
loope
adc
lahf
add
or
lods
sahf
ret
rcrb
call
mov
add
in
fsubr
leave
xchg
push
dec
or
push
stos
jle
inc
inc
adc
daa
fwait
mov
sti
sub
hlt
push
aad
fwait
push
js
and
cli
and
rclb
mov
movsb
mov
jmp
in
in
mov
sub
in
mov
and
mov
fcoms
imul
das
push
dec
insl
cltd
and
cmpsl
jo
scas
loopne
mov
inc
gs
inc
loop
push
cltd
scas
mov
loopne
hlt
ret
in
push
push
mov
ret
iret
sbb
cmpb
into
test
mov
shll
inc
iret
neg
adc
xorl
mov
ds
ret
lret
das
xchg
and
not
dec
mov
scas
cmp
shll
testb
and
testl
push
add
cmp
cltd
mov
mov
mov
es
push
xchg
jmp
xrelease
int3
stos
push
ljmp
ljmp
out
pop
inc
movsb
jbe
jp
cwtl
pusha
mov
sbb
xchg
out
jecxz
xchg
stos
or
jnp
incb
pop
dec
adc
out
aas
loope
sub
pop
je
jmp
cmp
and
mov
lods
sbb
arpl
and
into
push
xor
cmc
stc
std
xchg
cs
ret
inc
pusha
test
jle
ss
push
mov
inc
je
or
faddp
ret
clc
xchg
dec
shl
icebp
adc
push
stos
push
test
imul
scas
add
lods
stos
in
sbb
inc
fwait
inc
sub
add
fstl
dec
sub
xor
mov
div
es
ja
dec
test
cmpsb
js
sub
push
mov
out
shr
mov
mov
inc
lret
cmpsb
pop
popa
insb
sbb
and
cmp
roll
xorl
adc
jne
stos
scas
bnd
iret
lods
divb
inc
sbb
push
cmp
xor
shrl
test
xchg
ljmp
lret
jp
hlt
adc
fimuls
xor
xchg
sahf
jnp
ss
mov
jmp
andb
or
gs
mov
add
imul
fwait
jb
mov
mov
rorl
rcrb
sub
inc
out
lret
mov
adc
addr16
fsubrs
ret
sti
and
xor
pop
and
fisubl
stc
rcrb
pop
lret
lods
pop
pop
hlt
pop
jge
cli
arpl
and
lahf
cmc
insb
rcll
mov
ficompl
dec
mov
lds
xchg
sbb
pop
pop
xchg
iret
aas
sbb
jle
xchg
hlt
add
mov
insb
mov
inc
mov
add
jp
not
add
enter
or
das
xchg
mov
sub
das
or
xchg
sub
inc
pop
cmp
enter
or
sbb
fcompl
pop
push
shl
lcall
dec
sbb
xor
pop
ja
jmp
stos
jo
sbb
sub
movsb
cli
scas
jne
lds
xchg
fiadds
pusha
mov
dec
pop
jbe
push
cld
loop
push
add
jb
sbb
lahf
push
jge
jle
subl
jb
push
loope
call
in
add
dec
or
sub
call
push
dec
jbe
xor
cmp
jle
mov
data16
andb
or
arpl
lret
xor
pop
fmull
mov
mov
mov
rolb
cmc
insb
xchg
movsl
dec
and
pop
push
xchg
dec
test
test
mov
add
pop
daa
xchg
mov
push
dec
add
insb
and
mov
xor
lret
orl
test
push
jne
jl
add
xor
scas
iret
outsl
and
jns
stos
mov
push
jo
pop
mov
movsb
mov
shrl
aad
mov
call
scas
outsl
or
test
cmp
xchg
pop
daa
imul
arpl
in
and
xchg
test
inc
subl
pop
mov
mov
push
pop
sbb
mov
loopne
push
loop
sub
fcmovbe
imul
loope
bound
pushf
inc
mov
lods
pop
jecxz
in
ficompl
adc
mov
dec
incl
nop
pop
loopne
mov
xor
loop
sahf
adc
push
gs
in
push
cmp
or
mov
mov
fildll
andb
add
lds
and
pop
enter
ds
cld
insb
std
sub
js
lret
insb
out
sub
add
add
das
jp
push
and
jecxz
inc
call
pop
push
cld
scas
dec
enter
cmp
fidivrs
inc
stos
sub
or
cwtl
add
sbb
lds
push
add
int
jbe
ss
jb
dec
mov
fwait
xor
mov
test
inc
cwtl
lcall
or
cs
adc
inc
stos
or
xchg
add
or
inc
mov
xchg
shll
shll
mov
rolb
int3
mov
mov
popa
fcompl
dec
xchg
cld
inc
and
lea
cmp
mov
movsl
jo
mov
jecxz
jne
aam
aaa
clc
test
pushf
push
ret
dec
mov
mov
mov
cld
mov
andl
lds
cltd
cmp
or
cs
fcmovb
inc
mov
push
imul
or
and
sub
rcll
cmc
xchg
add
inc
cltd
cmc
cs
dec
imul
sbb
xchg
inc
push
aaa
mov
sub
sbb
xchg
lods
in
mov
jb
pushf
loope
je
int3
cmp
push
fs
or
jmp
ds
mov
fs
leave
sub
and
xor
and
dec
addr16
loopne
mov
test
add
xor
mov
lods
repz
enter
ret
int3
iret
mov
jl
lock
jne
cmp
stos
sbbb
lcall
fwait
jbe
push
lock
dec
ret
lods
sub
clc
cmp
xchg
sbb
mov
jno
xchg
dec
or
jmp
or
cmc
lods
ret
push
je
mov
es
adc
pusha
mov
jnp
xchg
cmp
jmp
stc
xor
xor
and
stos
push
test
jbe
cwtl
and
in
jl
scas
or
adc
loop
out
mov
lahf
stos
icebp
jp,pt
fiaddl
lahf
pop
and
arpl
vmovntps
je
push
fimuls
fwait
repz
test
pop
xchg
popa
sub
xor
xchg
fbld
mov
in
sbb
fwait
cwtl
daa
jae
sub
shlb
adc
lods
cmp
jns
dec
rcrb
rcrb
pop
es
imul
fistpll
rorb
inc
mov
xchg
add
push
jbe
add
sbb
and
out
lock
scas
imull
adc
pop
or
loopne
xor
fcompl
sub
pop
xchg
pop
popf
push
lret
mov
cmpsb
mov
in
inc
xchg
and
loop
stos
or
push
xor
dec
add
and
es
addr16
jbe
push
dec
fstl
mov
mov
mov
stc
ds
push
xchg
lock
pop
cld
and
pop
mov
fs
add
iret
loopne
arpl
outsb
ret
fwait
and
leave
jmp
mov
jne
stc
push
scas
xchg
outsb
ds
popf
push
lods
xchg
out
mov
ds
test
bound
xchg
sbb
pop
loopne
push
mov
mov
dec
dec
push
add
cld
leave
cs
repz
inc
sbb
jnp
ss
xchg
test
in
push
scas
jbe
xor
cmp
add
stc
and
adc
or
fidivs
and
push
pusha
mov
gs
imul
jne
outsl
call
das
jbe
mov
xchg
pop
push
xchg
cld
lock
pop
mov
jbe
pop
das
mov
in
out
mov
ss
test
fimull
out
ljmp
ja
cmp
mov
test
xchg
orl
lret
into
or
loop
mov
test
mov
adc
or
pop
fistpll
rcrl
addr16
mov
push
test
scas
lods
jo
add
nop
xchg
cmp
cmpsl
shlb
enter
xor
inc
scas
xchg
test
or
ss
mov
sbb
inc
sbb
fcompl
xor
cli
mov
xor
sbbl
and
mov
push
das
sbb
mov
int3
push
push
adc
and
mov
mov
fs
inc
xchg
jbe
stos
cltd
mov
add
aam
fsub
add
mov
lods
loope
lcall
ficoml
mov
in
lods
add
cmp
jecxz
cmp
les
ljmp
adc
dec
cmp
outsb
sub
aam
sub
dec
mov
push
hlt
lds
pusha
dec
jecxz
ficoml
xchg
mov
or
sbb
clc
push
js
leave
iret
mov
ljmp
shll
add
in
sub
mov
xor
jmp
push
mov
out
push
pop
mov
mov
inc
mov
adc
mov
insl
out
mov
sahf
jb
jne
data16
add
and
in
into
mov
cli
mov
push
dec
jecxz
out
in
sti
pushf
jb
shl
rolb
jmp
xor
icebp
xchg
adc
pop
mov
pusha
pushf
daa
je
call
hlt
data16
and
xchg
aaa
xchg
fwait
outsb
push
mov
add
mov
test
mov
push
and
sbb
sub
cmpsb
jns
cmpsb
in
or
ffree
pop
mov
shlb
dec
lea
sbb
and
dec
mov
add
adc
loop
mov
shlb
cmpsl
sahf
mov
in
inc
push
gs
loopne
rcrl
xorl
xor
mov
inc
cmp
sarl
or
sbb
jno
hlt
xchg
sub
fsts
sbb
les
jmp
stos
cmp
out
xor
stc
jb
das
xor
inc
test
fidivl
sub
xchg
push
push
push
mov
push
jb
mov
or
scas
out
iret
fdivrs
jp
mov
xchg
mov
mov
dec
aaa
mov
jmp
cmp
lahf
test
push
popa
repnz
add
sub
lock
xor
data16
dec
fistps
adc
sub
jle
int
cwtl
jnp
xchg
push
sub
stos
dec
and
fidivrl
sbb
and
jle
mov
jecxz
sarl
imul
aad
or
jecxz
add
fnstcw
mov
cmp
adc
mov
stc
stos
sub
adc
nop
scas
xor
test
stc
push
ret
popa
sbb
cld
cwtl
mov
jo
xchg
mov
and
lods
xor
flds
adc
sti
xor
cmpsl
ret
push
mov
sub
or
mov
aam
sbb
mov
jmp
arpl
push
je
out
xchg
ret
lcall
into
neg
call
mov
push
das
aaa
enter
daa
stc
stos
push
rol
fildl
mov
dec
mov
xchg
mov
call
push
xor
xchg
std
xchg
cli
push
jecxz
imul
inc
iret
popf
hlt
sahf
insb
mov
arpl
add
sahf
rcr
mov
fcomip
mov
iret
sbb
dec
daa
push
jb
pop
cld
xor
cmpsb
sbb
iret
mov
faddl
sub
cmp
and
pop
cmp
or
popa
sub
pop
xorb
in
stc
and
popa
mov
sahf
out
loope
sub
ret
push
or
test
mov
xor
aas
pop
insl
mov
jne
jp
pop
es
lea
aad
mov
pop
rclb
xor
cmpsb
sbb
jbe
dec
pusha
xor
mov
sbb
movsb
sbb
jecxz
lcall
and
xor
xchg
push
out
mov
jne
test
pop
xor
adc
loopne
lahf
add
jo
cmp
scas
shll
cmpsl
add
sub
xorl
ret
pop
test
sbb
dec
mov
jo
rcr
cmp
adc
mov
test
fnsave
mov
jg
into
sbb
mov
std
jp
mov
xchg
lds
xor
and
fs
in
outsb
sub
jmp
rorl
rcr
iret
jo
insb
mov
bound
out
cmp
mov
mov
mov
jns
scas
leave
or
cmpsl
jecxz
adc
pop
jl
push
add
mov
fwait
xchg
jnp
mov
outsb
test
loop
push
add
push
inc
or
mov
xchg
jle
xlat
movsb
gs
or
outsl
push
xchg
push
aad
loope
in
daa
mov
call
insb
bound
adc
pop
mov
jne
test
mov
mov
mov
pop
mov
mov
gs
sbb
repz
mov
jns
sarb
mov
inc
pop
cli
in
mov
and
and
jae
push
fs
lret
jmp
scas
in
cmpsb
sbb
mov
cltd
xchg
xchg
out
mov
cmc
loopne
mov
das
xor
pop
iret
add
dec
or
mov
fdivl
sub
cmp
xor
push
cmp
jne
dec
dec
cltd
inc
lds
adc
iret
inc
or
inc
jmp
in
push
fbstp
mov
sarb
jae
sbb
push
idiv
pop
jno
es
pop
mov
cld
in
add
scas
movsb
cli
in
bound
inc
mov
mov
jns
jl
lods
push
faddp
cli
push
imul
clc
xor
push
jg
lods
dec
mov
ret
xchg
popa
jne
jno
and
inc
out
adc
adcl
fs
out
sbb
imul
cwtl
inc
xor
sub
inc
ret
and
insl
daa
and
stos
xor
faddl
adc
xlat
stos
push
mov
xchg
sti
mov
dec
lahf
dec
sub
sub
push
mov
mov
dec
nop
or
stc
enter
fs
push
xor
mov
inc
add
push
cmpsl
mov
jo
or
cmp
dec
jecxz
lahf
sub
outsl
ss
div
sbb
shlb
iret
adc
pop
imul
push
sbb
or
add
push
push
push
lods
roll
subl
jnp
lcall
hlt
int
xchg
repnz
inc
loopne,pt
enter
jo
dec
in
les
ljmp
push
dec
fldt
inc
clc
push
add
jg
insl
je
sarb
ljmp
imul
mov
testb
outsb
scas
add
sbb
and
sbb
aad
je
mov
aas
and
xor
scas
inc
push
lcall
ret
popl
xorl
mov
or
insl
mov
sub
not
into
loope
in
andl
leave
test
fmul
lods
pop
xor
call
xchg
xchg
sbb
mov
sub
movsb
ret
test
xchg
cld
jg
cmp
adc
mov
dec
mov
iret
push
xchg
xor
hlt
lret
enter
add
mov
push
mov
mov
sbb
jl
lods
jne
jge
arpl
fdivrl
dec
push
in
lods
pop
loopne
cli
sbb
mov
sbb
popf
sbb
dec
xchg
adc
bound
sub
jns
xor
inc
rorl
adc
cmc
pop
jecxz
push
sbb
cmp
mov
cwtl
gs
mov
mov
push
xchg
jae
pop
jns
inc
or
xor
fdivl
mov
inc
jae
or
inc
jecxz
aam
inc
clc
adc
mov
or
inc
cmp
adc
sar
xor
jns
sub
and
pusha
xchg
xchg
mov
cli
rcrl
leave
mov
addr16
and
je
cld
popa
mov
outsl
in
mov
sbb
sahf
mov
and
outsl
or
mov
rcrb
sbb
addr16
add
sbb
mov
dec
dec
jo
cmp
push
add
aas
cli
mov
sbb
mov
xchg
push
insl
and
xchg
sub
xor
dec
mov
inc
out
pop
fnstenv
sti
xchg
scas
push
mov
mov
and
lcall
push
dec
repnz
sti
call
mov
leave
push
add
inc
popa
iret
and
cmp
add
jmp
outsb
dec
aas
mov
sbb
mov
mov
sub
sti
adc
or
mov
cmpsb
leave
mov
pop
xor
sub
dec
or
pop
cmp
push
popa
pop
pop
cmpsb
cmp
sub
mov
jae
test
add
inc
jp
rclb
push
sti
out
ds
scas
notl
fcoms
or
mov
adc
push
xchg
jmp
fistpl
aad
inc
sbb
lret
and
mov
inc
fwait
cmpsb
dec
or
sbb
icebp
mov
int
mov
leave
mov
jo
push
cmp
sti
arpl
inc
stos
rol
cmp
insb
arpl
push
out
sbb
push
es
js
imul
rol
cmp
pop
loop
pop
rorl
aas
pusha
push
lods
dec
shll
gs
rcrb
xchg
jne
insl
pop
mov
shrb
mov
bnd
das
mov
and
push
and
add
iret
xchg
ja
clc
out
mov
sub
add
loop
fistpl
dec
insb
insl
jno
add
into
fwait
scas
adc
lods
mov
or
sub
sbb
test
push
insl
inc
lea
in
pushf
cltd
jns
cmpsb
xchg
fildll
adc
inc
push
nop
mov
cmc
adc
outsl
addr16
cmp
popf
gs
xchg
jae,pn
push
dec
push
fcom
mov
pop
ljmp
sbb
movsb
dec
loopne
jne
pop
jl
lret
hlt
xor
enter
loope
sub
aaa
xor
ljmp
cmpsb
jmp
call
cld
call
in
mov
cmpsb
add
sti
sub
loopne
out
notb
aaa
cmp
pop
jne
mov
xor
inc
fsts
stos
pop
push
mov
push
xor
scas
stos
mov
notb
jp
push
and
adc
add
jno
push
cmpb
aaa
stc
pusha
jl
bnd
mov
inc
ljmp
dec
lods
inc
adc
mov
addl
divb
inc
xor
neg
cmp
mov
jne
rorl
outsl
imul
fmulp
lret
inc
and
jp
imul
sub
and
into
sub
mov
ss
jp
sub
xor
push
xor
xchg
lea
pusha
nop
rcr
loopne
pop
adc
sub
mov
test
dec
popa
psllq
add
xchg
mov
sub
sub
popa
popf
rorl
fnstcw
out
jno
push
sub
xchg
fisttpll
xor
xor
sub
dec
dec
arpl
cmp
int3
sub
test
rol
les
or
test
imul
inc
fs
scas
fs
fs
inc
stos
dec
or
cmpsl
mov
andb
into
pop
iret
push
dec
cmpsl
jecxz
hlt
inc
fbstp
out
xchg
iret
lds
mov
xchg
jp
repnz
add
adc
mov
lcall
jecxz
push
ficomps
icebp
sub
mov
dec
imul
sbb
rorl
fs
and
mov
inc
xor
mov
psubusw
mov
stc
fistl
mov
add
dec
and
mov
mov
pop
outsl
out
dec
or
lret
sub
mov
jmp
shlb
scas
psubusw
cmc
ret
jne
pop
rep
lods
push
or
xlat
sub
ret
cmp
and
sahf
outsl
daa
jge
and
out
push
inc
inc
bound
ret
jl
movsl
in
into
push
dec
outsl
loopne
fldcw
xchg
push
sub
stc
sub
jmp
outsl
mov
sbb
in
push
out
pop
arpl
jmp
dec
aad
jae
or
lock
xchg
jl
call
movsl
and
adc
push
sub
mov
adc
inc
adc
dec
outsl
ss
dec
inc
mov
lock
lods
jo
es
jl
adcl
mov
shrb
iret
mov
sub
jge
inc
sbb
pop
sub
xorl
pushf
add
mov
mov
push
movsb
xor
bound
mov
sub
icebp
imul
icebp
clc
and
in
jge
sbb
lahf
pop
push
in
andl
sbb
sub
lcall
and
jle
fsubs
push
mov
lods
ljmp
jns
sub
gs
fidivrs
fisubrs
jae
mov
xchg
mov
mov
and
mov
or
rcr
js
aam
in
sbb
pop
or
hlt
or
fisttps
inc
leave
incb
sbb
cmpl
push
jae
shl
mov
mov
sub
cmc
call
or
sbb
add
mov
push
lret
movq
sub
dec
dec
push
in
xor
outsb
sti
ja
in
fimull
push
decl
sub
mov
loop
jp
sub
outsl
push
jno
and
and
pusha
jo
inc
push
repnz
or
js
ljmp
xor
data16
cmp
sbb
mov
test
pop
jge
sub
pop
and
mov
je
mov
jmp
mov
repz
mov
lret
cwtl
scas
jl
xchg
mov
pop
xchg
rcll
xchg
or
sub
loope
xor
loope
outsb
popf
jbe
inc
insl
jnp
and
or
push
cmp
bound
or
popa
mov
adc
jo
adc
sti
adc
jg
rcrl
movsb
jmp
adc
test
ret
sub
add
mov
push
and
ret
fistpll
push
sbb
int
xchg
cmpsl
cmpsl
cmp
fs
push
outsb
add
sahf
add
or
rorl
sbb
shll
loope
xchg
or
sarl
out
xorl
push
das
pop
lret
xor
push
mov
pop
es
xchg
mov
loop
inc
and
imul
cmc
add
pop
pop
nop
leave
push
sbb
push
std
cs
sbb
add
stos
imul
js
iret
fstl
xlat
push
mov
fucom
ss
mov
ljmp
jns
mov
loopne
inc
addl
sbb
push
inc
into
add
lretw
sbb
push
push
xor
scas
mov
push
mov
fsubp
mov
neg
out
cmpsl
roll
ret
aad
inc
mov
dec
dec
adc
mov
cmc
int3
push
push
add
and
lcall
aam
adc
pushf
test
cmp
xchg
adcl
outsl
cs
jo
cmpsl
mov
inc
jmp
loop
mov
mov
cli
ret
mov
cmp
cld
xlat
ljmp
mov
loop
in
pop
scas
in
aad
jmp
test
fcomip
sbb
push
add
xchg
inc
bound
insb
inc
mov
or
call
sbb
mov
lods
mov
out
xor
pop
sbb
xor
lds
push
fidivs
inc
int
mov
roll
mov
sti
jno
push
loopne
sub
inc
adcb
pop
fcmovu
leave
leave
std
inc
push
mov
leave
insb
mov
or
jge
hlt
fwait
jne
push
mov
adc
stos
lret
jecxz
sahf
lcall
outsb
sti
pop
out
jp
rorl
sbb
inc
pop
fsqrt
push
mov
fidivrl
outsb
mov
pop
shrb
repz
push
xchg
cmp
push
adc
sbb
lods
add
mov
push
sbb
pop
popf
enter
pop
and
jle
bound
push
int
sbb
mov
test
sub
sbb
and
pop
not
mov
mov
aas
sub
push
mov
loopne
push
subl
mov
stc
jo
xor
sahf
mov
cltd
pop
loop
aad
cmp
push
cwtl
push
shlb
stc
mov
jl
dec
dec
jg
pop
pushf
sbb
test
pop
scas
loopne
jge
add
shl
in
call
js
sbbl
roll
mov
sbb
sbb
pusha
adc
addr16
inc
into
mov
mov
repz
push
hlt
stc
jnp
sar
adc
movsb
xchg
mov
pop
call
inc
lods
mov
mov
xor
lods
xor
push
fsubrs
jmp
jns
jns
push
pop
mov
dec
sub
lret
inc
mov
jg
shll
outsl
xchg
xchg
mov
mov
out
cmp
dec
and
adc
in
sub
rclb
adc
xor
negl
sub
sub
imul
inc
test
incb
push
enter
cmp
das
in
int
test
scas
push
shlb
fildll
inc
and
xor
push
jnp
mov
add
fisubs
rorl
mov
test
dec
sahf
aaa
psubsb
inc
bound
mov
stc
inc
fdivs
jnp
fsubr
and
hlt
pusha
and
mov
mov
loopnew
cli
mov
pop
repz
rorl
scas
sbb
inc
xrelease
adc
aas
adc
push
shll
mov
and
xor
xorb
addr16
jb
mov
pop
std
push
xchg
jle
adc
stc
sub
mov
jl
mov
hlt
cltd
mov
das
xchg
repz
cld
aas
fidivs
cmc
add
call
gs
fisttpl
insl
mov
test
or
inc
stc
addr16
cld
aas
inc
xor
mov
ror
add
inc
lds
cli
pop
rcl
add
push
int
loop
ljmp
pusha
sbb
scas
ret
addr16
mov
cmp
jno
mov
push
lahf
sub
repnz
sbb
push
add
xchg
jle
pop
jmp
xchg
sub
cmc
pop
mov
ret
fiaddl
mov
enter
das
nop
repnz
sbb
pop
testb
mov
xor
into
in
mov
xor
mov
test
jge
jl
mov
add
repnz
and
add
xchg
sub
scas
inc
data16
shll
andb
mov
xor
jmp
fistl
fsubrl
push
xchg
popf
mov
xchg
push
jle
push
fwait
pop
add
movsb
stc
es
aas
insl
test
imul
into
xchg
add
mov
stos
into
xchg
mov
jo
jne
fidivs
and
rorl
data16
push
daa
pop
nop
jns
int3
pop
fwait
ja
ret
xchg
fstps
cmp
roll
outsb
xlat
adc
mov
flds
sub
add
xchg
cmpsl
mov
out
fdivl
jl
push
insl
jge
cltd
stos
xchg
enter
push
fs
xchg
outsl
dec
jno
add
or
add
and
loop
loop
bound
pop
jo
inc
movsl
inc
fbld
outsb
pop
int
dec
pop
mov
lods
cmp
inc
cmc
dec
adc
addr16
pop
inc
sub
divl
adc
xchg
stos
and
jge
nop
loope
scas
outsl
leave
push
pop
mov
push
jge
add
xor
in
ss
pop
cs
sbb
dec
testl
jb
in
in
jno
cmp
rcrb
ja
loopne
dec
and
jnp
fstenv
mov
sbb
stos
xchg
xchg
je
mov
sbb
mov
lahf
push
enter
dec
aad
and
iret
inc
cmp
adc
sub
cmp
xor
jp
notb
int
daa
lock
imul
adc
jno
popa
adc
popf
xchg
in
stc
fwait
push
adc
out
mov
pop
mov
gs
mov
daa
dec
xlat
xchg
mov
fldl
out
mov
and
movsb
std
cmpsb
cltd
push
mov
pop
repnz
fsubs
dec
adc
and
adc
in
lods
mov
mov
ds
mov
or
out
push
loop
int3
stos
pop
mov
sub
sub
mov
scas
testl
stos
sub
dec
push
push
dec
call
cmp
fildl
xchg
cmpsl
jecxz
push
outsl
adc
xchg
jecxz
out
cmpsb
pop
or
pushf
shl
mov
cmp
in
scas
iret
xor
repnz
adc
scas
adc
jmp
inc
jns
adc
mov
and
arpl
xor
or
sar
das
xchg
enter
lahf
mov
adc
xlat
jbe
subb
les
sub
cltd
cmp
pop
addb
das
dec
jno
or
sub
rol
fnstenv
in
sti
mov
push
push
lds
cltd
jg
aaa
add
push
mov
adc
test
ficomps
outsl
push
jno
in
pop
adc
popa
shll
jle
xchg
in
jnp
movsl
cmp
and
pop
les
shl
adc
and
lcall
inc
test
xchg
jne
js
lcall
fs
mov
xchg
in
mov
sub
sbb
xor
orb
mov
push
test
jo
sub
mov
icebp
mov
cli
jae
arpl
mov
jnp
add
les
stos
scas
jmp
je
leave
add
outsb
adcb
faddl
imul
dec
inc
lds
ret
lods
ss
daa
or
popa
scas
pop
sbb
cmp
pop
lods
push
hlt
and
jae
mov
loope
dec
mov
sub
sub
iret
xchg
sbb
pop
xchg
push
add
and
lds
mov
jp
inc
lcall
mov
dec
cmp
or
cmp
fldt
lcall
pop
inc
jl
movsb
inc
push
lcall
mov
outsb
mov
bound
mov
and
mov
add
loopne
cmp
push
cltd
cmpsl
fstpl
sbb
push
jnp
mov
and
add
in
xor
hlt
dec
stc
lahf
cmp
xchg
pop
jnp
inc
pop
jmp
pusha
or
jnp
mov
stc
fnstcw
xor
xlat
dec
and
xorb
push
bound
jg
in
xchg
jbe
inc
aam
ret
push
lock
dec
insl
addr16
or
jle
sti
stos
lock
in
lcall
adcl
repnz
adc
subb
pop
sub
or
sub
pop
xchg
mov
mov
sub
push
std
std
test
insb
in
inc
insl
jl
js
or
dec
jb
adc
cmp
lcall
mov
inc
jp
leave
gs
xor
cltd
loop
insl
and
xlat
mov
arpl
mov
shll
adc
add
push
pop
xchg
lea
mov
push
push
mov
xchg
mov
lods
dec
inc
dec
movsl
inc
ret
adc
mov
iret
sbb
les
or
es
mov
jae
into
cmp
sub
cltd
sub
das
and
and
and
lret
fidivl
int3
jnp
xchg
adc
insl
movsl
shrl
xor
push
fdivrs
scas
mov
pop
xor
jl
lret
xchg
jnp
aad
dec
enter
push
fisubrl
xchg
les
stos
xor
outsl
push
xor
push
sub
mov
cmc
rorb
in
fnstsw
cld
xchg
inc
mov
jecxz
mov
mov
pop
in
jg
pusha
sbb
fsubrp
outsb
lea
dec
sbb
std
std
add
int
test
fbld
scas
jb
add
adc
jecxz
sbb
and
jl
xchg
push
mov
xor
xchg
daa
shlb
mov
mov
pop
push
lahf
test
dec
adc
inc
insl
mov
leave
add
jp,pn
mov
stos
pusha
fwait
push
inc
jbe
and
or
push
repnz
jmp
pop
adc
push
imul
jae
dec
pop
dec
jmp
fs
add
dec
mov
cmp
mov
xchg
xor
jmp
test
mov
jbe
test
lret
inc
inc
div
jns
sub
jge
push
adc
lea
xchg
aaa
mov
adc
rorb
mov
mov
punpckhbw
stc
jmp
mov
orb
les
aam
sti
sub
lods
sbb
divb
subb
int
xchg
mov
clc
inc
aas
jnp
test
jb
clc
jnp
pop
out
mov
inc
mov
mov
cmp
int
mov
fidivs
je
out
bound
sbb
out
sbb
sahf
xchg
ds
test
fdivrl
shl
in
movsl
add
xor
fcmovnb
inc
aad
jne
or
push
add
testb
push
ret
stos
pop
jl
cmp
stc
sbb
dec
mov
imul
and
inc
pop
repnz
lahf
lods
std
imul
rorl
shr
inc
jmp
or
pop
mov
inc
and
test
inc
sub
out
je
shlb
aaa
loope
scas
pop
loop
cwtl
fisttpll
mov
and
sub
pushf
aad
imul
jp
stc
push
and
cmp
jmp
or
imul
jo
adc
mov
das
mov
push
cwtl
mov
popa
mov
imul
mov
std
in
fstps
sub
ret
inc
xorb
push
cmp
rclb
and
fcmove
ds
in
stos
xor
inc
int
mov
fsubr
pop
pop
fdivrs
jo
jl
push
pusha
lahf
ds
in
jbe
mov
pop
mov
dec
cld
sub
add
mov
dec
push
shll
dec
or
or
add
out
daa
call
jnp
mov
sub
xchg
repnz
cwtl
lcall
add
jl
cmpsl
fldenv
mov
add
cmp
pop
mov
mov
mov
outsb
dec
nop
rorb
pop
aaa
jo
rclb
mov
stos
inc
pop
cmpsb
lahf
dec
sarb
testl
into
and
sub
xlat
pusha
lcall
mov
add
insb
and
push
mov
push
arpl
xor
xchg
fmuls
stos
je
adc
stc
ret
fisubrl
dec
fisttpll
imul
stos
jno
inc
add
test
cmc
jnp
rorb
loop
outsl
pop
icebp
stos
mov
les
lds
pop
inc
outsl
mov
mov
cmp
cmp
xchg
sbb
and
je
inc
add
jg
pushf
xchg
pusha
inc
les
negb
push
inc
and
pop
add
out
mov
clc
dec
lock
stos
xchg
sti
pop
xchg
adc
push
adc
cmp
sbb
testl
stc
pop
sbb
orb
lahf
imul
xchg
xor
pop
test
mov
mov
cwtl
jbe
jne
jne
mov
movsb
subl
jb
sbb
sbb
outsb
arpl
jg
stc
pop
xor
orl
inc
jmp
jmp
mov
fwait
imul
loopne
imul
push
mov
sbb
dec
inc
sub
test
fdivr
repz
push
roll
inc
mov
not
mov
dec
imul
mov
cs
mov
outsb
ficoms
mov
rcrl
aam
inc
movsb
mov
push
sbb
faddl
add
push
sbb
mov
xchg
andb
sbbb
dec
xor
mov
out
mov
cld
inc
sbb
stos
test
and
adc
cmpsl
nop
xchg
scas
stos
xchg
mov
outsb
insb
cmp
pop
or
mov
inc
xor
mov
lock
ret
xchg
shrb
pop
sbb
add
mov
into
les
push
inc
shr
mov
push
dec
sub
and
popa
pusha
and
add
jb
or
stc
sti
mov
dec
or
lret
fs
xlat
sarl
or
icebp
dec
cmpsl
push
iret
movsl
jecxz
jge
movsl
mov
je
xchg
loopne
mov
jno
sarl
cs
rclb
pop
pop
mov
ret
pop
sub
ret
lods
xor
ss
cwtl
loopne
dec
xchg
sub
jmp
mov
leave
sub
mov
add
jp
dec
or
xchg
dec
gs
lods
sub
sub
inc
and
movsl
idiv
dec
pop
mov
xchg
arpl
es
mov
in
mov
mov
jmp
mov
pop
push
inc
inc
and
setge
push
sbb
ds
mov
jnp
xchg
repz
cmpsl
js
xchg
sti
into
clc
cmp
fdivrs
push
out
sub
xor
adc
adc
iret
xchg
in
testl
sbb
popf
jno
push
loop
loope
daa
lret
movsb
mov
cmp
pop
stos
loop
push
jbe
imul
dec
ret
or
mov
fldt
and
push
fsubl
dec
hlt
pusha
ret
xchg
or
pusha
call
iret
push
das
add
mov
cmp
push
stos
cmp
jnp
aaa
mov
jnp
mov
enter
into
arpl
inc
inc
ret
inc
lea
fldt
pop
sub
or
and
jb
test
aam
fdivs
fpatan
scas
int
pop
push
mov
dec
xchg
test
ja
mov
scas
sub
fisubl
dec
inc
mov
add
xchg
ret
xchg
into
xchg
or
aam
add
cmpsb
nop
loopne
mov
sbb
test
pushl
movl
push
faddl
cmp
fistps
pop
adc
or
or
adc
xchg
inc
adc
rcrl
mov
cltd
cmpl
lock
loop
addr16
push
icebp
loop
pusha
sub
xchg
lcall
lods
clc
and
push
jecxz
jb
scas
lods
jge
and
jno
sub
bound
add
pop
jl
xorl
cli
pop
jne
cli
sbb
cli
cld
sub
push
fisubs
cmp
jmp
lods
mov
loopne
into
lea
jo
loopne
jle
sub
fldl
pop
test
inc
dec
xchg
push
xchg
jg
cmp
inc
out
cmc
pop
sub
test
enter
je
or
mov
xchg
pop
sub
add
pop
aam
outsl
sub
imul
mov
adc
ljmp
cmc
in
xor
cmpsl
mov
je
xchg
cmpsb
mov
xor
fnstsw
lret
sbb
xchg
call
dec
pop
fwait
lods
mov
xchg
ljmp
scas
or
xchg
mov
lock
adc
and
int
inc
outsl
js
add
jno
xchg
std
gs
cmpsb
cmp
out
cmp
je
sbb
das
mov
mov
push
mov
out
jp
pop
sbb
or
sbb
movl
iret
daa
jo
mov
cltd
mov
roll
shl
cmp
mov
mov
in
sbb
inc
lods
iret
aas
jl
sbb
fsubrs
jo
out
dec
ret
gs
sub
ss
sub
ja
add
scas
pop
decl
hlt
jp
inc
call
mov
test
dec
out
sbb
aas
in
cs
movsl
sbb
lods
mov
xchg
stc
icebp
sub
xor
scas
dec
jne
sub
dec
clc
or
mov
xchg
mov
movsb
enter
adc
push
and
mov
add
dec
sbb
mov
pop
pop
xchg
dec
mov
in
mov
shrb
xor
scas
and
lods
inc
inc
mov
cmp
push
pop
sti
inc
mov
or
xchg
rorb
xor
add
nop
lahf
dec
mov
xor
aas
lahf
cmp
push
mov
jo
mov
mov
or
mov
sub
outsl
in
in
movsb
es
add
das
push
xor
inc
hlt
shll
sbb
adc
cld
push
and
mov
cmp
rcrb
testl
mov
lret
loope
sbb
sub
cs
xchg
iret
in
or
repnz
adc
or
pushf
pop
les
xor
jnp
aam
and
call
mov
cmp
push
mov
mov
int3
cs
cwtl
lcall
adc
sub
push
add
daa
xor
dec
das
push
jecxz
push
test
pop
add
jne
adc
sub
jne
push
xchg
pop
out
pushf
frstor
fbld
cld
mov
cmp
pop
fnstenv
xchg
pop
inc
pop
loopne
sub
ss
xchg
cmpsb
scas
pop
xor
shrl
dec
aaa
out
mov
je
rcrl
out
xchg
jmp
mov
and
xlat
mov
lods
xchg
out
fs
jl
xlat
push
adc
or
js
scas
repz
fs
mov
arpl
cmp
dec
test
mov
mov
adc
xchg
and
mov
leave
adc
sahf
mov
repz
mov
adcl
sub
jbe
sbb
je
cmp
xchg
or
mov
pop
pop
jns
mov
jae
in
push
dec
insb
push
mov
push
das
ret
loope
push
fwait
imul
js
out
push
mov
or
stos
pop
into
addr16
cltd
mov
cltd
jno
loop
out
stc
stos
inc
std
cmpsl
push
mov
push
dec
int
fs
xchg
mov
mov
and
test
mov
stc
lock
add
iret
sti
shlb
dec
fstps
scas
inc
cmp
mov
fs
inc
std
out
lea
or
or
ja
arpl
ja
mov
aas
es
aas
push
bound
xchg
sbb
adc
sbb
icebp
aam
int3
mov
cvtpi2ps
pop
add
test
inc
inc
mov
inc
hlt
fstl
mov
rcrl
gs
pop
mov
push
jnp
xchg
adc
push
incb
sar
movsl
sbb
pop
push
popf
xchg
and
and
sti
jle
enter
cmp
push
mov
add
jp
sahf
shl
movsb
push
jno
sbbl
dec
fnsave
jne
es
cmp
jb
xor
or
cld
jmp
cmp
sbb
cmp
jo
les
shr
out
mov
out
sbb
out
enter
out
pop
sbb
fbstp
push
push
addr16
or
push
pop
rcrb
inc
lea
or
test
jecxz
mov
dec
addr16
jl
scas
insl
add
push
xchg
adc
subl
sub
es
dec
aam
mov
cli
mov
push
sti
dec
mov
inc
lahf
sbb
dec
test
cmp
xor
test
lds
test
lret
inc
sbb
or
lcall
fs
mov
mov
push
sub
arpl
cmp
popa
in
int3
std
mov
adc
hlt
sub
addl
push
sub
pop
add
lcall
imul
jbe
mov
adc
or
fistl
add
cltd
adc
dec
or
pop
fwait
not
insl
mov
or
movsl
cmpsl
cmp
mov
dec
push
sbb
pop
cmp
pop
dec
imul
jp
cmp
nop
xchg
mov
pop
dec
and
xor
push
add
loope
mov
or
jmp
inc
outsb
or
les
cmp
bound
sbb
incb
negl
dec
xchg
xor
jl
ret
or
call
add
inc
out
pop
mov
sub
or
sbb
in
sbb
out
cmpsb
lcall
xchg
mov
aaa
in
add
loope
or
or
push
movsb
push
popf
xchg
pusha
jmp
xchg
shrb
add
fdivrs
adc
sbb
and
mov
add
adc
addr16
sub
daa
les
ss
lahf
ja
mov
ret
mov
int
fld
mov
sub
les
fwait
dec
jmp
sar
loop
add
pop
insb
pop
daa
push
inc
mov
into
ret
mov
ss
lods
out
aam
mul
push
add
inc
xor
call
fdivs
sub
xor
nop
cmp
dec
faddp
mov
xor
fisttps
or
insb
cmovo
gs
ret
jne
fidivrs
pop
cli
sub
mov
int
add
push
xchg
push
mov
jo
imul
sub
stc
mov
cmp
cltd
dec
mov
sbb
inc
rep
sbb
adc
fucomp
jno
xchg
repz
in
popa
push
pop
inc
push
test
mov
mov
das
cmp
out
jne
mov
add
mov
fldz
movb
shll
adc
movsl
outsb
aad
push
test
cmp
mov
pusha
subl
pop
xchg
test
je
xor
addr16
add
shl
pop
pop
push
loope
sub
sub
pop
inc
jle
pop
dec
xchg
scas
pop
pushf
mov
insl
sti
mov
clc
xchg
fimuls
sub
sti
lahf
sub
pop
push
cmp
mov
aaa
hlt
push
xchg
popa
or
in
mov
scas
jmp
jl
mov
das
inc
repz
sar
loopne
fnstenv
aad
fwait
sub
mov
loope
fwait
mov
push
out
ja
fwait
iret
fisttpll
imul
lahf
ret
fisttps
mov
xlat
cmp
dec
cli
jnp
mov
add
cmc
sbb
mov
in
movsl
insl
dec
fwait
dec
lcall
test
mov
popf
lock
ss
call
dec
or
stos
repz
pop
xchg
mov
jge
in
add
jne,pn
ja
adc
les
mov
jmp
test
xchg
lds
jecxz
xor
in
mov
or
push
in
out
imulb
mov
cmpb
adc
inc
test
fwait
sub
dec
mov
xchg
dec
add
test
ss
lcall
divl
filds
cmp
xor
test
pop
sub
xor
add
push
sbb
jp
mov
pusha
cmp
inc
rcl
mov
mov
lret
test
mov
push
adc
lahf
outsl
or
dec
leave
pop
xor
adc
dec
incl
dec
sub
arpl
ret
dec
aad
jae
movsl
mov
jg
add
sbb
cmp
insb
stos
sub
cmc
jb
xor
dec
icebp
jecxz
and
cmp
sub
popf
cmp
jnp
jle
dec
jmp
imul
test
aas
cmc
or
inc
cvtdq2ps
pop
or
inc
popa
jo
fnsave
sbb
sub
insb
mov
xchg
and
mov
imul
pop
sub
sti
dec
lcall
out
shrb
in
out
jbe
add
sub
loop
adcb
lds
xor
jecxz
add
mov
lock
or
scas
jge
adc
sbb
repz
hlt
sbb
insb
fcmovnb
lahf
mov
sub
cmpsl
lcall
divl
in
pop
je
out
mov
pushl
inc
and
jno
mov
mov
repnz
push
fcmovb
inc
sbbl
leave
scas
mov
adc
andl
daa
ror
push
xchg
popf
xorl
xorl
imul
xchg
ljmp
dec
ficomps
xchg
pop
jns
mov
test
xchg
and
and
pop
push
ds
inc
and
mov
sub
imul
test
mov
mov
mov
mov
push
dec
fidivl
sahf
nop
sub
fimuls
xchg
push
dec
fwait
sbb
xchg
movsb
js
dec
je
push
add
pop
imul
hlt
fucomp
inc
xor
aad
fwait
loop
std
imul
xor
dec
inc
mov
sub
mov
adc
xlat
push
mov
ljmp
mov
clc
pop
or
add
mov
xchg
push
loopne
ljmp
or
andb
mov
aas
xchg
in
outsb
push
mov
repz
sbb
ret
xchg
test
xor
ss
insl
fdivl
dec
xor
fimuls
movsb
rorl
ret
roll
jp
add
xor
cmp
jge
negl
repz
or
or
divl
sub
fstpl
outsl
and
test
lcall
xchg
ret
sub
xchg
push
ja
decb
test
mov
fcompl
adc
xchg
dec
and
jle
mov
test
imul
test
cmp
lea
out
ficoml
pop
sar
into
mov
or
shlb
dec
inc
outsl
adc
add
xchg
outsb
add
pop
add
mov
fwait
sbb
dec
mov
ljmp
test
jo
or
push
mov
dec
int3
movsb
lods
push
and
fxch
dec
pop
iret
add
mov
popa
repnz
fwait
lods
lock
loope
xor
icebp
adc
xchg
mov
daa
mov
mov
mov
movsl
inc
add
lea
cmpsl
xorb
mov
mov
shll
lahf
dec
cmpsb
cmpsb
enter
jae
leave
sub
sub
lods
aam
std
jp
test
fucom
jl
leave
lods
xchg
lret
jb
mov
sbb
lock
cli
gs
or
rorl
subl
mov
outsl
or
mov
leave
out
mov
out
lods
mov
faddl
sub
fcmovu
sahf
add
dec
jge
push
outsb
int
repz
pop
fisttpll
mov
fmull
add
mov
fbstp
test
test
fildl
xchg
cli
ss
jmp
push
mov
mov
lcall
inc
sar
and
popa
in
out
inc
incl
negl
hlt
inc
pop
adc
out
fstl
dec
mov
fwait
std
add
mov
aaa
arpl
xchg
adc
idivl
stos
jecxz
sub
lods
out
out
and
mov
cmp
push
xchg
fidivs
in
mov
xor
cmp
in
push
pop
and
mov
std
mov
scas
or
das
and
pushf
mov
outsl
sbb
ljmp
pop
xor
or
add
mov
popa
inc
or
dec
mov
or
xchg
decb
mov
mov
movsb
cmp
mov
pop
in
xor
jp
call
mov
cmp
scas
rorl
es
mov
sub
mov
xor
hlt
jmp
rcrl
cmp
push
enter
cli
stos
sbb
mov
push
int
sbb
or
mov
movb
daa
mov
push
xchg
cmp
adc
fs
push
ss
jno
fs
mov
decl
or
fistl
scas
clc
cmp
or
inc
js
int3
out
dec
std
push
sbb
mov
jo
xor
and
jns
mov
mov
mov
cli
shrl
fcoms
loop
cld
lock
adc
mov
pop
test
loopne
and
jb
xchg
arpl
or
repz
lea
aas
mov
out
in
cld
pop
ljmp
bound
outsl
mov
negl
sub
pop
aas
xor
fwait
push
or
xlat
daa
jecxz
ds
inc
adc
sub
push
fsub
cmp
inc
jo
cmc
hlt
dec
repnz
pop
loop
xlat
ss
xchg
aaa
xchg
aaa
movsl
cmp
cld
dec
adc
fisubs
stos
movntps
mov
pop
inc
not
xor
cmp
or
cmc
and
cmpsb
mov
pop
js
mov
push
add
cmp
mov
sbb
out
cmp
dec
ja
sub
out
int3
jbe
pop
jmp
add
mov
jae
xchg
scas
mov
adc
sbb
inc
mov
shll
adc
dec
xor
pop
lret
notb
sbb
mov
add
mov
jp
jg
jp
scas
aaa
mov
insl
scas
aas
sbb
in
push
rorl
xchg
mov
push
push
mov
cmpl
cltd
repnz
pop
leave
mov
jo
out
push
out
test
cmc
or
inc
push
lea
repz
mov
je
mov
lds
xchg
pop
sub
imul
insb
loop
xchg
cmp
frstor
mov
push
ds
push
xchg
out
pop
and
push
lds
pop
add
mov
fnstsw
lahf
jne
inc
stc
push
push
outsl
cmp
or
pushf
subb
mov
adc
repnz
cld
sbb
iret
sti
ret
xor
push
data16
loope
pop
jns
mov
rcrl
mov
jmp
jp
xchg
ds
sahf
mov
or
or
inc
rcrl
cmpsb
xchg
cli
insb
cmp
int3
lea
popf
mov
or
test
xchg
clc
add
pop
call
jne
add
push
mov
test
mov
cmp
mov
adc
sbb
cmp
aad
mov
inc
jbe
lcall
jl
sbb
and
xor
mov
jne
add
sarb
pop
sub
pushf
sbb
cwtl
jmp
test
sbb
sub
ficomps
int3
ret
mov
add
daa
sarl
mov
jbe
dec
cmp
dec
pop
in
fnsave
pop
shlb
xor
addr16
mov
add
adc
xor
out
lret
push
add
push
and
cwtl
sub
cmp
mov
fcoms
mov
push
xor
jnp
sub
mov
xor
popa
cmp
mov
xchg
fnstsw
cmc
xchg
ja
add
jmp
out
lret
daa
mov
inc
andl
sub
jp
jne
push
mov
pushl
adc
xchg
ds
adc
movsl
dec
or
bound
add
in
cmc
pop
add
xchg
jle,pt
xor
les
dec
cmc
div
sub
insl
adc
mov
jmp
and
inc
ja
dec
das
xchg
xor
dec
inc
filds
sub
dec
mov
stc
dec
mov
or
enter
dec
push
mov
xor
js
xorb
xchg
rep
fwait
push
cmpsl
ret
mov
enter
jns
pop
in
std
mov
cs
or
sahf
adc
and
mov
lahf
fucomp
movsl
cwtl
mov
sbb
xchg
loop
push
in
popl
dec
xchg
icebp
stos
pop
push
popf
enter
jmp
xor
pop
adc
fimuls
out
imul
call
cmp
dec
sbbl
sahf
mov
repz
mov
stos
and
mov
shrb
dec
inc
push
xor
jle
hlt
out
mov
js
jnp
sbb
stos
sbb
test
fs
cli
mov
test
mull
or
cmc
adc
repz
sbbl
stc
pushf
pop
stos
cwtl
mov
fcoml
into
bound
lret
nop
imul
dec
aad
loopne
fimuls
stos
mov
imul
outsl
fs
pop
mov
cmc
mov
shlb
callw
das
add
je
in
mov
mov
jno
jmp
adc
rcr
jmp
fbld
out
scas
test
inc
mov
dec
inc
mov
insb
es
inc
mov
lock
gs
inc
sti
xor
mov
es
out
mov
scas
mov
lock
cmc
add
and
add
leave
cwtl
sbb
push
jne
lcall
xchg
inc
adc
adc
xchg
or
sub
inc
or
adc
loop
pop
push
sbb
add
dec
mov
xorl
add
or
test
sbb
leave
mov
mov
fmuls
mov
sahf
dec
pop
gs
aas
ds
mov
mov
adc
or
gs
sbb
gs
pop
xchg
into
jg
into
test
stos
filds
pop
enter
les
fisubs
and
sub
stc
xor
fldt
aam
xchg
jns
dec
and
inc
mov
push
rorl
pop
pop
sub
mov
sbb
xchg
xchg
mov
cmp
test
mov
and
les
and
test
sbb
push
ljmp
sub
dec
ret
inc
stos
cltd
cmp
cld
jmp
bound
cmc
jnp
cwtl
mov
gs
filds
mov
mov
aas
inc
lcall
aaa
push
jecxz
jmp
mov
mov
clc
loope
mov
jne
vpavgw
xlat
xchg
call
pop
pop
jle
repz
pushl
mov
push
push
shll
xchg
xchg
cli
add
jmp
out
jmp
sub
cld
xchg
sbb
push
xchg
call
dec
popf
bound
std
es
imul
xchg
push
cmp
lods
cmp
fstl
mov
xor
sbb
cltd
inc
lods
sbb
in
and
mov
test
inc
push
js
leave
test
sbb
jno
rcrb
xchg
movsb
mov
cmpsb
int3
inc
je
xlat
adc
mov
inc
scas
lods
mov
in
out
adcb
or
addl
adc
in
lea
arpl
es
mov
and
sub
arpl
pop
fdivl
inc
dec
bound
das
inc
notl
mov
rep
push
sub
addl
pop
xchg
call
dec
scas
dec
mov
orl
insl
cli
fnsave
jnp
in
outsb
jge
ss
aaa
cmpsb
inc
mov
sbb
inc
ror
mov
and
js
imul
in
mov
and
add
push
mov
aad
xor
dec
xor
arpl
mov
aad
sub
rorb
ss
or
xor
mov
lock
faddl
or
jmp
mov
add
imul
sub
loop
in
sub
aam
adc
rcl
gs
iret
das
out
mov
in
ss
outsb
cli
jge
cmp
lret
jae
cmp
pop
int3
sub
inc
adc
mov
xor
xlat
rclb
outsb
ret
int3
cmpsl
pop
insl
sbb
cwtl
push
test
outsl
pop
ret
sbb
push
loope
cli
rorb
adc
push
inc
hlt
lea
gs
jmp
cmp
pop
add
mov
js
leave
lock
xor
call
push
test
clc
dec
inc
movsl
loop
or
int
jno
push
dec
movsb
stos
sbb
pop
lods
inc
cmp
inc
jnp
testl
in
in
mov
xchg
and
aaa
popf
mov
sbb
repz
addl
xchg
adc
sbb
pop
insl
mov
mov
mov
stos
inc
test
adc
push
xor
rcll
repnz
dec
jg
outsl
out
pop
sbb
ds
push
and
mov
jns
orb
jbe
outsl
mov
pop
mov
std
fidivl
icebp
add
rol
mov
sbb
and
adcl
out
xor
ljmp
lock
push
icebp
rol
filds
push
cmpsl
dec
adc
cs
int3
pop
mov
hlt
push
inc
sbb
negb
fcmovbe
pop
inc
test
pop
out
lcall
out
jecxz
mov
mov
jnp
cmpl
lret
push
test
inc
divb
movsb
fisubl
mov
jb
mov
dec
leavew
cmp
fists
fistpl
xor
mov
call
imul
and
jns
rorb
arpl
adc
fwait
arpl
out
rcr
fbstp
dec
jns
aam
xor
and
ds
repnz
mov
aad
sub
mov
mov
in
out
aam
into
dec
test
lock
jg
ret
in
fimull
cltd
mov
loopne
lret
in
push
movsb
xchg
mov
stos
dec
pushf
xchg
xchg
cmp
loopne
lret
push
inc
mov
cmpsb
sub
mov
ficomps
adc
pop
push
sahf
mov
pusha
mov
testb
cmpsl
or
adcb
ret
xor
into
adc
xor
sub
in
jmp
addr16
pusha
or
aad
push
push
fcmovnb
xchg
xor
adc
sahf
lahf
mov
imul
daa
fwait
lcall
mov
push
pop
loopne
cmpsw
mov
cs
mov
shll
sbb
push
xor
sarb
fisubrl
cld
pop
push
push
dec
fs
mov
test
sbb
cmp
xchg
gs
sub
push
adcl
xorl
rcll
or
setg
out
stos
jne
or
mov
decb
inc
add
mov
cmc
fmull
clc
dec
lods
pop
xchg
mov
pusha
fdivrs
imul
hlt
jl
adc
cli
mov
icebp
push
lea
xor
mov
repz
loope
mov
sub
pop
sbbb
shrl
dec
push
mov
jp
jmp
in
pop
arpl
orb
lock
daa
ss
icebp
xchg
fidivs
xlat
imul
jo
in
mov
fcmovnu
mov
or
xorl
bound
mov
in
leave
push
insb
pop
pop
xchg
mov
ret
jg
fstpt
into
ss
sbb
or
cltd
jmp
data16
sbb
dec
cli
imul
dec
adc
cltd
xor
mov
scas
push
movsb
cmc
xchg
adc
hlt
xchg
adc
xchg
mov
xchg
lds
push
adc
lcall
add
ds
xchg
xchg
xlat
push
add
sarl
pop
jp
clc
add
fldcw
flds
fisubl
mov
cwtl
in
ljmp
subb
xor
aaa
mov
mov
jno
mov
xchg
testl
sbb
jno
cmp
aaa
fsubl
fsubl
mov
ret
dec
sub
jg
mov
aas
mov
lret
sub
xchg
lea
test
addl
sub
sub
mov
fwait
insl
cmpsl
mov
jne
push
sbb
xor
push
daa
js
xor
jl
sub
cwtl
roll
mov
push
sar
lret
call
push
cmp
cwtl
aaa
mov
rcrl
dec
imul
outsl
popa
test
xchg
aad
fimull
out
sahf
inc
rol
pop
or
fiaddl
inc
pop
rorl
xchg
cmp
dec
or
cltd
dec
daa
aam
scas
or
jge
add
cmp
fdivr
pop
lret
mov
test
xchg
repnz
lret
shlb
in
popf
mov
bound
push
aas
lret
subb
cmp
and
fs
mov
hlt
xchg
les
sti
cli
or
xor
xchg
mov
adc
cld
push
popf
aas
sbb
cmp
pop
cmp
sbb
fwait
fwait
fs
jecxz
std
stc
dec
shl
fdivp
sbb
cmpsb
xchg
mov
aam
pop
sub
daa
clc
jle
popa
dec
pop
adc
cmpsb
sub
addr16
mov
adc
shrl
cmp
jns
lahf
mov
cmp
and
xor
enter
loope
xor
scas
jg
mov
pop
icebp
or
cmp
push
fdivl
lods
pop
mov
inc
push
int3
es
popf
cltd
cmc
xor
lret
cmp
mov
loopne
push
pop
cs
shll
shll
dec
or
adc
test
imul
jle
insb
movsl
dec
mov
xor
push
dec
jne
es
mov
repz
scas
xchg
into
ja
mov
xchg
dec
inc
loope
lahf
push
pop
mov
iret
repnz
push
push
sub
xchg
xchg
add
or
fdivl
idivl
enter
and
pushf
inc
xchg
inc
adc
sbbl
xor
sub
and
out
mov
cmp
xlat
mov
sub
mov
mov
and
test
int
xchg
div
fsubrl
pop
sbb
enter
jnp
adc
sti
pop
fcomps
and
inc
pop
nop
call
inc
lcall
shlb
adc
pushf
jns
dec
fnstenv
xor
mov
pop
xor
neg
aaa
inc
mov
lods
mov
sbb
mov
push
aad
sti
sub
inc
mov
sub
mov
dec
mov
jbe
sbb
mov
mov
es
mov
push
xchg
fistl
xor
cmp
add
insb
in
ss
push
add
mov
adc
xchg
shlb
mov
add
mov
cs
idiv
imul
fldt
xchg
outsl
in
shrb
inc
repz
mov
int
mov
fisttpll
jns
clc
ret
enter
mov
addr16
inc
jnp
je
pop
xchg
hlt
and
fisubrs
inc
inc
imul
pop
mov
xchg
fstps
sti
and
add
ror
lock
cs
jno
xor
push
xchg
sarb
arpl
cmpsl
leave
sbb
in
sbb
ljmp
cli
push
sbb
mov
mov
jbe
fstpl
inc
pushf
xor
test
repnz
mov
imul
imul
nop
jae
lock
mov
xor
int
xor
sarb
cli
dec
ds
jl
iret
mov
cmp
and
or
mov
sbb
and
stos
test
aam
testb
testb
and
add
js
fildl
or
ret
popa
in
dec
cmp
repz
test
loopne
mov
pop
ljmp
lret
sub
mov
push
jnp
mov
pop
inc
stos
lcall
cmp
rorb
arpl
in
scas
mov
divl
lods
mov
movl
loop
movsl
in
sbb
xchg
dec
xchg
mov
push
sub
cmp
pop
scas
jle
push
mov
rcl
or
outsb
imul
push
sub
inc
xchg
adc
fcoms
movsl
bound
mov
and
inc
stc
rorl
add
lods
in
shr
adc
xor
insl
xor
jecxz
ret
xor
jp
pop
xor
adc
loope
movsl
arpl
sub
dec
in
push
xchg
movsl
lods
or
cs
xchg
jp
js
and
negb
fsubs
nop
into
lcall
lcall
xchg
or
mov
roll
inc
idiv
or
push
jmp
mov
test
daa
inc
and
jp
daa
sbbl
mov
int
sub
out
or
filds
stos
mov
fnstenv
movsb
cmp
xchg
jno
sub
push
pop
inc
pop
dec
inc
inc
test
test
shrb
adc
mov
adc
dec
mov
out
fsubrl
mov
mov
cmc
shrb
nop
jle
les
mov
test
iret
icebp
lds
push
sub
fwait
mov
pop
out
jno
cwtl
les
filds
cmpsl
cmpsl
scas
nop
dec
sti
adc
ss
pop
jmp
clc
popl
cmp
pop
jns
add
jae
inc
ret
in
cmpb
aam
jb
pop
xor
sub
push
js
mov
movsl
push
dec
and
out
loopne
xor
or
dec
xor
cmp
pop
adc
add
imul
sub
push
and
and
jp
fsts
mov
push
fcmovb
adc
aad
add
ret
mov
lcall
jg
lahf
int
fwait
xlat
dec
dec
scas
or
rcl
and
sub
mov
icebp
jb
sbb
jnp
pop
xchg
repz
sub
int3
xchg
pop
sbb
test
xor
or
lock
adc
pusha
push
mov
test
fbstp
sub
mov
dec
push
fisttpl
pusha
dec
inc
push
add
mov
fcomi
push
pop
outsl
clc
mov
or
mov
xor
cmp
or
mov
xchg
loop
nop
mov
mov
inc
mov
aad
and
loopne
fimull
push
mov
clc
leave
mov
mov
stc
jne
mov
add
sbb
push
mov
aaa
out
mov
mov
std
imul
mov
xor
cmp
clc
dec
pop
sbb
add
and
mov
cli
jecxz
lods
fldt
xchg
ss
fcmove
mov
mov
sub
imul
pop
push
clc
xorl
lcall
sarl
cmp
and
mov
pop
fstpt
adc
pop
xlat
ret
aaa
sub
loopne
jbe
divb
mov
lods
pop
lcall
pop
shll
xorb
or
jo
push
jno
jno
fildll
cmpsl
inc
rorl
iret
xchg
gs
add
sbb
shll
or
in
add
mov
andb
out
mov
fcomps
dec
add
fisubrs
dec
dec
fbstp
aad
fwait
inc
inc
jnp
lods
sbb
dec
mov
testb
xor
ds
ljmp
cs
lods
push
repnz
mull
sahf
insl
cmpsb
mov
mov
inc
fdivs
int3
mov
call
das
mov
loop
adc
jecxz
rcl
stc
mov
insl
add
add
push
stos
test
shl
add
sub
andl
add
inc
scas
js
ja
add
xchg
loope
xchg
repz
popf
mov
sub
dec
lds
lahf
pop
mov
mov
mov
loope
das
inc
pop
lret
pop
push
and
add
hlt
pop
sub
test
xlat
add
bound
or
test
cld
mov
scas
cmp
mov
enter
rcrb
sahf
shl
out
test
push
jle
add
inc
scas
mov
lcall
xor
aad
and
cwtl
sbb
loopne
fnstcw
adc
adc
cli
dec
fs
sbb
push
mov
cmp
enter
dec
testl
mov
push
lret
addr16
fadds
gs
imul
stc
and
add
add
sbb
int3
inc
sub
and
or
aaa
aad
fwait
cld
or
addb
or
in
sub
jge
in
push
xchg
sbb
daa
push
xchg
jb
movsb
pop
adc
in
push
push
xor
add
push
sbb
in
pop
shll
xor
ss
push
enter
fcomps
push
sbb
pushl
lret
pop
xchg
add
int3
sub
mov
repz
sbb
xchg
out
ret
cmpsl
mov
mov
js
rolb
push
test
pushl
js
pop
xchg
out
xchg
adc
and
iret
jae
xor
and
mulb
fldcw
subb
test
test
pushf
mov
sbb
push
xor
adc
insb
add
cmp
jl
sub
pop
movsb
fsubrl
mov
xlat
pusha
repz
scas
scas
cmp
movsl
test
mov
jle
mov
sahf
sub
xchg
or
lods
jecxz
add
shl
into
push
cmpsb
sbb
icebp
xchg
jno
sub
push
lcall
cmp
xchg
outsb
loope
out
fucomp
aad
sub
loopne
pop
aam
lahf
mov
dec
addl
adc
inc
push
enter
pand
pop
enter
mov
cmp
adc
and
rol
mov
dec
sbb
push
or
lret
mov
mov
pop
loope
sbb
cmp
push
imul
outsl
mov
cmc
leave
dec
add
lods
fisubl
out
mov
and
in
stos
lods
repz
inc
xlat
jg
ja
or
insb
mov
popf
sub
fidivrl
pop
scas
pop
and
xor
iret
scas
jmp
xchg
and
js
dec
dec
mov
jns
push
xchg
mov
repz
cmp
push
sub
inc
dec
scas
xchg
pop
fstpl
mov
xor
gs
std
push
fdivrl
mov
sti
inc
push
push
outsl
xchg
pop
add
sbb
mov
mov
and
and
push
pop
xor
jb
cmp
pushf
lret
or
mov
dec
cwtl
in
inc
mov
sarl
ds
inc
cmp
mov
cmp
jp
push
jmp
adc
pop
pop
gs
cltd
and
out
add
fimuls
shll
push
les
pusha
add
jb
in
insl
subl
int
mov
jl
stos
div
cli
test
imul
ljmp
test
cmp
mov
mov
pop
outsl
xchg
popf
xlat
sub
and
in
fmull
mov
lds
jb
popf
sub
xchg
mov
cmp
cmpsl
sub
xchg
xchg
jae
cmp
subb
xor
aad
insl
mov
test
ficompl
loop
fisttps
fwait
repnz
dec
xchg
dec
addl
xor
inc
jge
dec
cli
jecxz
notb
mov
insb
xor
addr16
push
in
sub
xor
and
push
jb
dec
inc
leave
rcrl
popa
loop
nop
pushf
cmpsb
les
add
scas
shll
jno
fbstp
or
test
jne
and
push
sar
mov
mov
mov
jb
out
push
adc
repnz
pop
int
dec
arpl
fs
aad
sbb
and
sub
aad
sub
ss
push
mov
or
mov
jno
scas
xchg
mov
mov
mov
lock
add
dec
adcl
ret
popa
and
call
sbb
xchg
dec
loop
mov
push
or
sbb
mov
mov
jecxz
ret
push
jnp
sub
adc
jp
pop
fsub
add
mov
ljmp
test
dec
js
rorl
insl
xchg
fiadds
pop
add
push
mov
cmpb
push
or
pop
xchg
mov
lahf
mov
scas
test
ret
push
add
mov
loopne
cltd
cmpsb
nop
cltd
push
mov
lahf
addl
pop
in
mov
sub
mov
fdivrl
out
cltd
std
cwtl
mov
ret
es
cwtl
enter
mov
fisubl
in
jge
inc
leave
sti
pop
andb
cmp
test
es
pusha
into
push
aas
test
mov
add
hlt
inc
jo
or
aaa
and
cmc
lret
dec
das
nop
lret
jecxz
aaa
sarl
cmp
jne
in
cmp
movsb
movsl
mov
cmpsl
fwait
jle
dec
jne
dec
xor
sbb
mov
dec
dec
and
add
xchg
dec
sub
sbb
out
sarb
jp
mov
pop
in
and
mov
mov
jg
mov
loop
mov
cmc
mov
ficoms
sub
cmc
and
cltd
js
add
in
xor
mov
fwait
jb
jl
je
sub
or
sub
daa
ss
xor
hlt
fistl
cmp
mov
fildll
aad
push
sub
inc
repnz
jp
ja
pusha
dec
ret
sub
mov
mov
icebp
mov
cwtl
leave
jb
loopne
jbe
lret
mov
cltd
cmp
push
orb
lcall
xor
in
add
dec
add
adc
into
sar
push
gs
lret
and
mov
shrb
push
clc
repz
xchg
and
dec
inc
sub
int
dec
adc
ds
add
xor
insb
mov
adc
mov
xchg
inc
mov
jle
cltd
cmp
mov
int3
jg
jg
push
inc
fwait
es
loope
lds
xor
mov
xor
cmc
mov
pop
mov
mov
lahf
inc
outsb
lea
popf
xchg
negb
jb
lret
notl
negl
mov
flds
sub
popf
mov
sub
mov
cwtl
testl
add
inc
cs
fisttpl
scas
loope
pop
pop
mov
scas
outsb
adc
mov
add
aam
js
fbstp
jl
adc
or
mov
repz
hlt
jo
mov
gs
neg
add
and
push
insb
push
cmc
pop
and
jno
movsb
aam
fwait
adc
ret
xchg
push
mov
lcall
jge
daa
pop
dec
push
jae
out
fdivrs
cmp
ret
clc
jnp
andb
fistpl
icebp
stos
push
pop
xor
jo
push
sub
mov
jl
adc
adc
mov
and
sub
pop
adc
xchg
js
fs
fld
out
loop
dec
mov
scas
out
sub
les
movsl
push
xlat
or
jo
movsb
mov
mov
inc
jno
pushl
mov
rclb
in
loopne
sbb
iret
inc
aam
ljmp
sub
stos
xor
dec
insl
pop
xchg
shlb
lcall
mov
add
fs
jmp
int3
inc
dec
xchg
in
push
or
sarb
daa
cmc
incl
cli
aas
xchg
fmul
mov
mul
cmp
je
loop
sub
mov
push
insb
nop
cltd
outsl
xor
pop
lret
insb
scas
jmp
dec
gs
sahf
mov
adc
or
out
cmp
out
shl
lahf
sbb
sub
pop
push
ret
mov
jle
mov
loope
pop
lock
sbb
sbb
pop
mov
push
insb
mov
add
scas
pop
push
push
addr16
lret
pop
les
imul
ret
push
jne
in
xor
iret
jg
in
jb
psrld
pop
and
icebp
mov
lods
sub
cmp
xor
or
pop
xchg
xchg
in
push
jbe
subb
dec
adc
push
cmp
xchg
jmp
or
or
lds
mov
adc
loopne
and
cmp
xchg
xor
push
and
hlt
cmp
shll
cld
mov
mov
data16
inc
lcall
leave
lahf
aam
jns
cwtl
push
aam
stos
or
or
lret
pop
jge
cli
inc
ja
sbb
pop
aaa
nop
adc
ds
sub
xchg
cltd
lret
add
scas
add
imul
adc
lret
dec
lcall
aad
hlt
fistps
push
adc
mov
mov
jmp
sub
cmp
fnstenv
lods
sub
pop
dec
add
cld
cmpsb
add
dec
dec
jo
out
adc
mov
xchg
or
cwtl
scas
dec
and
jmp
stos
imul
xor
pop
add
push
std
sub
ret
push
pop
inc
sub
push
inc
mov
orb
js
repnz
loop
dec
and
sub
inc
jl
dec
mov
add
cmc
lcall
lret
adc
push
stos
mov
insl
cmp
adc
add
adc
gs
sub
mov
enter
mov
imul
jg
out
push
xor
sbb
ret
and
ret
mov
gs
and
das
dec
imul
mov
negb
cmp
mov
mov
and
int3
test
add
mov
pushf
movsb
jae
jo
es
les
cli
push
dec
lret
cmp
ss
sbb
cs
pop
adc
call
inc
movsl
roll
add
outsb
sub
xor
push
lcall
cmp
stc
call
xor
mov
rcrb
frstor
out
adc
aad
sub
aas
aam
mov
ljmp
jb
daa
lcall
xchg
dec
lahf
mov
mov
int
popa
inc
int3
add
imul
mov
mov
ljmp
in
imul
xchg
mov
js
ss
fcoms
std
mov
xor
mov
shrb
xor
or
add
jle
dec
in
mov
add
dec
in
jge
xor
out
ljmp
xchg
xchg
shl
out
test
and
call
inc
rcll
scas
orl
sbb
mov
shrb
mov
mov
dec
jns
lea
aas
fwait
xchg
nop
cmpsl
mov
fcomip
pop
movsl
lcall
lcall
mov
test
push
adc
and
xchg
cwtl
xor
add
sub
jmp
cmpsb
jl
mov
xor
inc
and
add
cs
add
jns
repnz
test
sbbl
loop
loopne
nop
pop
divl
int
sti
fmull
mov
xchg
mov
pop
pushf
mov
sarl
dec
push
pusha
popa
divl
rclb
push
xchg
xor
int3
fstl
xorl
mov
jbe
xchg
mov
dec
cltd
outsb
les
sub
add
adc
test
cmp
je
in
push
pop
xchg
loop
or
int3
aaa
and
test
mov
inc
jg
mov
into
inc
lock
cmpsb
ss
xlat
stos
and
add
jl
jno
jbe
xlat
stc
daa
xchg
icebp
mov
icebp
inc
or
pop
sahf
add
xchg
out
push
data16
or
aaa
out
mov
add
cmovno
add
addl
ss
les
leave
sub
sbb
and
data16
movsl
mov
mov
scas
in
in
pusha
sub
mov
fwait
adc
jle
or
sub
and
lahf
ds
loop
pop
std
sahf
lods
or
push
test
dec
in
push
sub
pop
sub
jle
int
lahf
clc
add
inc
les
pop
shrb
outsl
cmp
std
stc
stos
xor
mov
or
imul
and
enter
lahf
xchg
mov
stc
xor
insb
pop
test
dec
js
popf
inc
mov
dec
lahf
mov
pcmpgtd
cmp
mov
inc
adc
dec
in
pop
cs
std
std
xlat
pop
inc
dec
xadd
fnsave
or
out
mov
pusha
inc
icebp
xchg
or
inc
subb
jp
inc
sbb
in
fdivrl
scas
adc
and
insl
mov
lock
cmp
test
and
jo
pop
lds
add
idivl
xchg
jne
cmp
fstp
pop
or
add
stos
add
pop
ja
es
cmc
mov
in
movsb
sbb
movsb
mov
mov
std
adc
mov
mov
adcl
cmpsb
push
addr16
rcll
test
js
jbe
rcrl
out
or
ljmp
fsubl
adc
inc
jl
scas
xchg
mov
cmp
test
out
dec
cmc
xor
lods
cwtl
pusha
outsb
and
ret
sbb
mov
enter
and
push
jmp
mov
sbb
scas
nop
dec
pop
mov
adc
fldenv
fwait
or
loop
xor
pop
cmpsb
pushf
je
aaa
cmp
loope
enter
fprem
push
jns
xchg
mov
sar
fstpt
inc
icebp
jp
std
or
xor
pop
ret
cmp
inc
add
add
xlat
xchg
cmp
daa
cmc
dec
add
mov
adc
bound
add
jecxz
sahf
test
lds
out
ret
dec
pop
lock
sahf
mull
adc
adc
gs
cltd
push
outsb
loop
sub
xchg
pop
pop
adc
add
pop
in
sub
xor
and
xchg
int
scas
mov
bound
and
cmpsb
lock
cmpsb
int3
int
mov
sub
or
std
int3
mov
fs
or
ja
sbb
andl
into
cmp
mov
mov
xor
movsb
xor
pop
mov
dec
test
xlat
push
add
sbb
shlb
enter
sub
mov
adc
out
sti
loopne
pop
rcr
in
test
iret
js
sbb
out
jnp
das
pop
mov
daa
fucom
mov
out
or
xchg
pop
cmp
xchg
addr16
push
out
jl
xchg
adc
mov
cmp
jno
and
cmp
inc
lea
xchg
jle
sub
pop
out
out
jo
sub
or
xchg
subl
in
dec
xor
jl
test
add
mov
push
loope
lea
cmp
insb
inc
shll
dec
push
stc
xor
out
dec
sarb
daa
dec
mov
add
cmpsl
xor
sbb
js
and
hlt
lret
clc
mov
inc
xor
lret
mov
xor
jo
add
cmp
out
sbb
push
loope
adc
hlt
push
xor
sbb
aam
cld
mov
xchg
pop
shll
and
loop
inc
mov
pop
or
push
pop
mov
ljmp
jle
mov
cmp
jge
out
repz
fistpl
in
in
fstpl
dec
or
fmuls
mov
mov
ljmp
cli
arpl
mov
xor
mov
mov
ds
mov
aas
jb
int3
sbb
adc
jmp
movsb
mov
in
jno
je
mov
push
mov
xchg
cmp
stos
jmp
dec
cmp
xchg
push
push
mov
movsb
cmp
inc
push
pop
adc
mov
sti
push
jno
inc
push
cmp
popa
fcoms
cmp
push
jecxz
dec
sub
adc
int3
mov
cmpb
dec
push
fs
clc
cmc
pop
push
adc
lret
out
int3
adc
pop
or
dec
sarl
sub
outsl
sub
std
adc
aad
and
scas
mov
xor
pop
sub
cmpl
lods
sub
stos
xor
xchg
xlat
xchg
inc
out
mov
inc
test
cmp
daa
cld
jg
jne
dec
and
sbb
fwait
enter
xchg
movsb
lock
cvtps2pd
mov
sbb
or
and
scas
or
push
dec
scas
mov
xchg
sbb
jecxz
xchg
mov
test
jae
sub
shrl
scas
cs
pop
sub
jge
dec
xchg
lret
sub
fnstcw
jne
clc
add
loopne
fs
daa
jmp
std
pop
or
or
mov
sbb
lods
jecxz
cmp
add
or
sbb
and
leave
pop
nop
sbb
cmp
mov
xor
pop
dec
jno
aam
lret
dec
mov
mov
mov
stc
lret
in
dec
addb
test
mov
pop
and
orl
lods
mov
into
adc
cmp
in
loopne
xlat
add
mov
xchg
xor
xchg
push
arpl
jp
shl
or
bound
jb
pop
mov
and
inc
push
and
xchg
aad
popa
or
scas
jne
nop
cmp
sub
dec
add
jmp
xor
xor
inc
ss
daa
test
mov
ds
fdivrl
icebp
fdivr
fbld
push
adc
xlat
xlat
nop
mov
cld
subb
dec
movsl
mov
cmpsb
pop
jecxz
shll
sahf
or
js
in
pop
stos
cs
cmp
xchg
lea
imul
stos
out
mov
imul
in
cmp
adc
push
jne
notl
rorb
mov
lret
rcl
imul
psrlw
adc
dec
sub
ljmp
sti
mov
leave
cs
pop
stc
cmpsb
mov
movsl
fldenv
mov
jmp
cmp
and
ret
cmp
sub
hlt
or
pop
test
push
lret
dec
int3
mov
sbb
outsb
push
cmp
data16
leave
lds
fcomps
aaa
jge
in
mov
sbb
loopne
pop
jne
cmc
sub
in
lret
and
pop
add
scas
adc
inc
xchg
cmpsb
pushf
pminub
fnstcw
push
adc
insb
pushf
out
pop
mov
dec
mov
sbb
fisubl
jle
push
cmp
xchg
add
test
xor
cmp
repnz
mov
clc
in
imul
imull
push
add
inc
out
loope
lods
mov
cli
data16
xchg
push
push
jg
dec
mov
and
jnp
scas
sbb
dec
scas
xlat
pop
fimuls
sbb
les
pop
fisubrl
aam
pop
dec
loope
dec
jno
and
ret
jle
outsl
pop
scas
xor
sub
cmp
or
scas
lds
scas
dec
fldl2t
jo
inc
mov
xor
mov
sbb
push
adc
pop
dec
fs
outsl
dec
repz
cmpsl
aas
mov
inc
cmp
jae
or
jl
mov
test
inc
test
repz
hlt
adc
test
mov
cmp
sub
mov
mov
popa
test
rolb
xor
jne
jge
and
cmc
inc
cmp
cli
in
and
jns
adc
add
or
lret
inc
out
ljmp
jl
popa
outsb
xor
cmpl
dec
shrl
xor
int3
lcall
sahf
jl
ljmp
cmpsb
xor
jge
inc
ret
push
scas
es
mov
mov
dec
fimuls
dec
or
fidivs
bound
dec
dec
sbb
jno
aad
arpl
imul
inc
push
mov
cmc
push
mov
imul
enter
lds
les
cwtl
movsl
inc
ljmp
outsb
aaa
xor
pop
or
mov
cmp
mov
popa
icebp
in
mov
xor
lock
sar
sbb
sbb
popf
into
prefetchw
mov
mov
arpl
les
aas
scas
push
jg
fisubrl
jl
fdiv
es
jl
add
pop
push
insl
mov
lods
shrb
enter
int3
push
xor
repnz
aaa
cld
loopne
rep
ret
xchg
push
dec
cmp
call
xor
sahf
push
push
cmp
mov
dec
fcoms
mov
into
movsb
sub
jge
fiaddl
mov
cmp
std
xchg
push
mov
or
mov
xchg
xor
lods
sub
jne
enter
or
adc
loope
aam
fwait
leave
inc
imul
das
sahf
lea
sbb
in
xchg
mov
push
cs
imul
cmovo
cmp
mov
push
jecxz
scas
jp
xchg
fsubrs
pop
outsb
pushl
jl
aas
jecxz
cwtl
popa
cmpsb
jne
es
nop
jecxz
loope
xchg
hlt
fstpt
into
loop
stos
std
sub
push
int
test
push
adc
fdivs
in
mov
jl
add
pop
mov
das
push
std
test
pusha
repnz
jo
ror
in
push
xchg
and
sahf
inc
adc
jbe
insb
lret
jge
fisubs
jp
push
stos
xchg
pop
ds
pushl
xchg
movsl
cli
push
xor
and
mov
into
daa
fcomps
loop
daa
jns
adc
rclb
mov
sbb
scas
ret
and
lods
es
mov
mov
mov
lret
or
cltd
pop
sub
push
xor
xor
fistpl
and
dec
call
cli
push
mov
xchg
dec
add
mov
repz
jmp
dec
mov
ljmp
sub
cmpsb
inc
shr
jmp
enter
pusha
movsb
mov
das
scas
xor
addr16
js
adc
jmp
rcl
jo
inc
loope
popa
lods
ds
sbb
xor
iret
add
jge
adc
cltd
xor
les
mov
lahf
dec
push
mov
aad
dec
fsubrs
mov
arpl
or
movb
mov
xor
fdivs
lds
adc
aas
mov
xchg
loopne
loop
pop
xchg
insb
leave
push
add
loope
cmp
outsb
in
out
mov
jno
scas
pop
test
push
movsl
jge
xor
xorl
cs
sbb
mov
leave
push
mov
aas
les
in
arpl
stos
xchg
add
mov
stos
idiv
adc
in
and
push
test
mov
popf
and
or
jp
test
cmp
pop
xrelease
cmpsb
jns
leave
and
sti
dec
cmp
lds
mov
dec
mov
call
test
ja
jmp
mov
rcrb
and
and
les
dec
cmpsb
lock
jmp
push
insl
xor
outsb
xor
xchg
sbb
nop
shll
outsb
dec
mov
imul
jne
jno
xlat
and
push
and
xor
add
mov
mov
pop
pop
or
into
data16
repz
dec
adc
int3
leave
das
call
testb
sub
xor
sub
push
lahf
addb
sub
popf
inc
pop
mov
sti
flds
shl
fbld
xchg
inc
ss
mov
mov
and
loop
loope
dec
jecxz
and
loope
or
jb
ret
scas
sbb
fbld
ret
adc
sbb
shrb
loope
xchg
sub
imull
popa
push
cmp
add
out
mov
leave
pop
inc
sub
in
shlb
xchg
inc
pop
ss
out
xor
mov
shll
jg
sub
mov
scas
and
pop
insl
setle
clc
add
push
rcr
and
adc
sub
xor
add
ljmp
cmp
mov
inc
adc
cli
dec
stos
popf
push
xor
lock
je
jno
subw
aaa
sahf
cmpsl
daa
mov
sarb
push
loopne
test
fldt
xchg
inc
into
ss
push
sub
fstps
enter
add
push
aam
pop
dec
sub
jl
push
adc
jno
mov
dec
andb
and
sub
sub
jge
or
lahf
pop
es
out
imul
fmull
shrl
sahf
sbb
inc
xor
sbb
sub
pop
aaa
mov
xchg
or
cmp
add
jl
repnz
movsb
in
sbb
lods
lahf
scas
popa
scas
add
insb
jo
mov
adc
push
jo
mov
fisubl
scas
jbe
cmc
and
xor
mov
scas
imul
ret
pop
jp
jb
stos
leave
xchg
xchg
imul
aad
mov
in
lea
inc
inc
push
data16
dec
and
ss
mov
aaa
movsl
and
gs
je
push
sbb
xchg
mov
cltd
inc
mov
sub
jo
jle
scas
jns
loope
ficompl
xor
push
popf
push
test
mov
arpl
mov
icebp
lret
sub
mov
imul
inc
out
push
outsb
aam
popa
enter
enter
xchg
fwait
and
les
bound
and
push
aad
fstl
mov
je
inc
cli
shr
adc
mov
outsl
in
gs
mov
inc
pop
orl
ret
sbb
icebp
fdivrl
mov
jno
outsl
fwait
mov
mov
cmpsl
hlt
adc
aas
enter
sub
xlat
xor
sti
cmp
and
popl
mov
ds
xor
jbe
mov
insl
fcompl
lods
cs
shrl
test
mov
rolb
adc
stos
dec
ficomps
sar
push
push
mov
sub
mov
xchg
movsl
pop
cli
adc
pop
lds
iret
mov
cmp
xchg
ds
push
inc
scas
arpl
dec
push
pop
adc
adc
pop
dec
xchg
lcall
push
cmc
cmpsl
sbb
into
stc
mulb
xor
mov
ret
outsb
lods
shlb
fldl
sti
push
xchg
sub
and
data16
pop
xor
dec
fdivrs
fbld
mov
lea
mov
mov
mov
jo
cmc
mov
aas
jo
into
test
xchg
sarl
xchg
or
pusha
mov
movsl
stos
and
fwait
cwtl
push
adc
cmp
mov
push
and
mov
add
adc
sub
shrl
jno
sbb
lahf
ljmp
mov
loope
inc
cmp
pop
lods
popf
mov
xchg
pop
dec
scas
dec
bound
and
pop
inc
int
orl
inc
ljmp
imul
inc
inc
pop
xchg
es
scas
sub
mov
mov
std
mov
fdivrs
cmp
lods
cmpxchg
icebp
xlat
std
sbb
test
into
push
xchg
xor
loopne
lods
outsl
pop
ds
test
and
pusha
in
xor
dec
fnsave
jmp
mov
mov
cwtl
outsb
jae
jns
xchg
adc
cmp
xchg
lcall
shl
mov
repz
cs
mov
jne
imul
or
sbb
fstpl
cli
and
insb
mov
and
mov
push
hlt
repnz
scas
scas
xchg
adc
cld
call
push
ret
jne
pop
xor
cmp
jg
jb
loope
ds
push
inc
out
roll
mov
lods
or
repz
or
adc
lods
cmp
push
inc
les
loop
adc
outsl
fstps
xor
jae
das
inc
lcall
push
sbb
add
mov
xchg
jnp
xor
jg
dec
imul
loopne
push
pusha
push
stc
jo
pop
and
test
mov
xor
inc
cltd
xchg
pop
test
sub
das
and
xchg
aaa
jae
cltd
mov
cmp
inc
cmp
adc
inc
xlat
addr16
mov
jne
jne
scas
loope
mov
loope
mov
fstps
lods
jno
stc
mov
scas
in
fstps
sbb
hlt
jp
lahf
xchg
inc
adc
dec
icebp
cli
and
dec
jp
shlb
sub
push
jecxz
in
pop
cmp
cmp
outsl
imul
dec
xchg
push
testb
test
mov
xchg
and
mov
mov
adc
dec
push
addb
jo
mov
pop
and
sub
leave
mov
push
pushf
cmp
xchg
sbbl
sti
inc
push
or
nop
shlb
mov
je
clc
mov
loope
pop
cmp
jle
stos
mov
fadds
push
in
xchg
mov
mov
jmp
push
push
test
mov
jns
nop
pusha
mov
mov
pop
orl
repnz
sub
outsl
adc
dec
rolb
mov
clc
lret
xchg
cmpb
lods
lods
mov
push
lods
mov
and
mov
fidivrl
fwait
inc
mov
fwait
aas
pop
icebp
jbe
cmpsb
movsl
repnz
inc
call
lods
xor
mov
ljmp
in
int3
mov
dec
mov
xchg
test
mov
hlt
dec
push
adc
push
mov
push
push
push
outsl
sbb
add
aas
pop
cmpb
pop
aaa
lods
fwait
mov
jb
ljmp
das
jmp
push
loope
outsl
sub
pop
gs
xor
pop
cmp
loop
pop
scas
xor
test
mov
mov
xchg
data16
or
pop
mov
mov
mov
repnz
rcrb
or
les
xchg
popa
add
call
cmpsb
cmp
pop
pop
iret
adc
and
test
pusha
add
cmp
fdivl
cmc
clc
cmp
gs
ret
inc
and
or
add
sbb
shl
sbb
ret
mov
sbb
pop
xor
pop
jmp
repnz
cmpsl
insb
jae
jg
aas
lahf
hlt
xchg
mov
mov
fidivl
outsb
rdrand
insb
addr16
iret
loope
stos
jmpw
inc
je
je
sbb
lds
icebp
push
inc
mov
outsb
fstps
push
cmc
les
mov
loop
inc
cmp
and
add
mov
imul
sbb
fiaddl
in
xchg
scas
xor
pop
int
int
lret
pop
push
roll
pop
movsl
mov
sub
movsb
pand
data16
xor
in
push
cmp
imul
mov
add
jno
movsb
add
cmp
inc
mov
lods
push
lret
jns
push
out
pop
push
jp
fsubr
inc
mov
lock
inc
aas
jno
stos
lcall
std
sub
clc
inc
in
ret
jmp
rcll
out
fld
test
add
pop
repnz
lds
fsubrs
in
cmpsl
sub
test
mov
repz
or
cmp
test
lret
or
je
push
cmp
mov
sbb
stos
std
bound
sub
insb
sbb
mov
and
add
stos
outsb
jecxz
pop
testb
outsl
stos
xor
push
mov
xlat
leave
fwait
test
in
jle
xor
add
push
clc
add
mov
mov
pop
add
je
lret
rolb
pop
adc
mov
clc
pop
nop
int3
cmc
movsb
pushf
mov
mov
stos
mov
xchg
scas
outsl
xchg
mov
jle
inc
mov
add
adc
pusha
push
jne
or
test
xor
push
pushf
xchg
fwait
inc
imul
sbb
into
push
stc
xor
ret
pop
testl
int
ljmp
inc
mov
into
repnz
add
out
jb
xchg
scas
shrl
add
mov
adc
insb
jae
cli
imul
push
clc
mov
sbb
shl
sahf
pop
dec
scas
pop
push
inc
add
mov
xchg
imul
iret
jns
xchg
rcll
jl
mov
or
xchg
rolb
cmp
std
mov
addl
in
in
mov
mov
xor
add
repz
out
add
outsl
xor
pop
js
ss
cmp
dec
mov
pushf
jo
mov
fs
call
push
in
mov
push
add
xchg
sub
arpl
add
lret
xchg
pushf
cmpl
cmp
dec
sub
addl
dec
pop
lock
adc
loope
sbb
data16
bound
and
dec
sub
data16
sbb
xchg
stos
push
test
rorl
or
out
aad
in
aam
and
sbb
pop
and
leave
inc
aam
insb
ret
add
xchg
lods
clc
fsubrl
mov
out
out
sub
lahf
arpl
push
dec
or
jae
scas
into
pusha
aad
cld
pushf
cmpsb
adc
xor
mov
call
dec
in
movsb
mov
push
adc
push
lahf
xchg
mov
repz
jecxz
push
pusha
xchg
movsl
dec
sub
pop
aad
push
mov
enter
push
lret
xchg
repz
roll
out
aam
push
out
mov
orl
hlt
inc
xchg
lcall
sub
movsb
popf
in
rcl
jg
adc
loop
jae
pop
add
outsb
jg
sub
ja
icebp
loop
cmp
pop
mov
dec
enter
movsl
mov
jp
outsb
insb
mov
clc
sbb
xor
sub
hlt
into
mov
jae
fisttpl
mov
sbbl
mov
outsb
sarl
jns
xchg
jnp
and
jae
int3
add
cli
cmpsl
fisttpl
push
mov
adc
xchg
mov
cmp
xchg
ret
xchg
sbb
test
push
mov
mov
cmovle
or
setb
pop
mov
ret
mov
push
push
cmpsl
imul
mov
and
jp
jne
cmpsl
xchg
sahf
and
adc
in
lret
scas
or
dec
lret
notb
mov
jge
popa
sub
mov
mov
fucomi
rolb
leave
jns
inc
sar
ljmp
jae,pn
fmull
loope
hlt
es
xchg
fwait
mov
lods
test
dec
mov
push
aas
cwtl
xchg
sbb
mov
out
and
test
jno
mov
or
push
push
flds
inc
dec
cltd
clc
xor
lret
insl
pushf
sbb
xor
das
shll
add
lret
xor
ret
je
push
outsb
push
negl
fs
xor
rcrb
in
sbb
sarb
pop
sub
add
test
xchg
shll
adc
out
daa
enter
inc
and
sub
pop
jmp
inc
fsubl
pop
xor
iret
fidivrl
nop
jns
push
fwait
loope
cli
sbb
push
adc
mov
xchg
dec
cmpsb
and
push
xlat
out
movsb
inc
and
popf
push
scas
xlat
inc
mov
push
cld
jmp
int
enter
js
add
xor
cmp
cmp
stc
sub
adc
mov
je
repz
sub
push
dec
dec
or
jle
je
add
push
dec
in
add
das
mov
shr
pop
and
fildll
or
pop
in
stos
pop
jmp
cmpsb
in
and
or
mov
jns
mov
jbe
fsubr
fdiv
imul
jnp
fnstsw
sub
ret
mov
jbe
mov
nop
cmp
jo
xchg
pop
mov
mov
jmp
rorb
ret
shrb
inc
sub
add
jae
dec
ret
sbb
push
dec
pop
inc
repnz
push
and
adc
iret
pop
mov
adc
dec
mov
add
xchg
into
xorl
andl
sub
cli
outsl
cmp
sub
or
xchg
jmp
addl
ja
test
andb
xchg
cld
push
ficomps
xorl
add
lret
scas
push
mov
cli
dec
insb
rcrl
jecxz
jge
lea
into
ret
sbb
cmp
pop
inc
shrb
scas
push
cs
outsb
pop
pop
call
jnp
les
iret
dec
int
js
fdivrl
movsb
push
cltd
cmp
pop
sub
mov
mov
jo
out
and
push
and
jmp
out
and
fiaddl
xchg
lds
sub
ret
lea
sbb
add
xchg
cmpsb
stos
add
pusha
push
andb
or
enter
jbe
daa
mov
inc
mov
lret
sub
inc
in
push
push
xlat
mov
popf
in
push
pop
xchg
cmpsl
test
arpl
fidivrl
add
or
ret
test
aas
movsl
cld
int3
aam
cmp
xchg
ficoms
fldlg2
or
inc
filds
mov
enter
mov
and
cld
popf
push
jecxz
push
sbb
enter
sbb
fstpl
pop
testl
aaa
aad
pop
es
jns
add
stos
cs
das
cmp
je
sub
ja
jl
imull
inc
push
nop
adc
xlat
aad
mov
mov
popa
stos
sarb
xchg
frstor
mov
js
repz
and
in
sbb
push
stos
mov
inc
mov
scas
test
mov
cmp
adc
fmul
mov
jg
dec
jne
jl
stos
data16
sarl
xchg
jp
mov
sarb
mov
sub
in
xor
mov
dec
fsubs
jne
mov
inc
and
fnstcw
pop
push
icebp
shlb
fadd
fcoml
add
add
imul
mov
jmp
les
iret
ljmp
scas
xor
mov
es
out
aas
mov
test
out
or
das
test
in
sub
pop
add
fisttpl
stos
mov
pop
mov
rclb
popf
leave
les
jns
mov
test
mov
cmp
lret
inc
cmpsb
outsl
subl
fstl
dec
cs
stos
jmp
int3
cltd
adc
dec
fldl
cmc
in
shlb
ficomps
push
or
jo
out
mov
mov
rcrb
je
add
outsb
jl
or
rclb
fiadds
fsubl
out
pause
stos
js
outsb
or
repnz
xchg
jecxz
daa
mov
push
rcrb
push
inc
adc
pop
not
fsqrt
adc
repz
xchg
dec
push
popa
mov
aaa
test
loop
fildl
xchg
mov
iret
aam
popf
jns
push
scas
pop
inc
pop
inc
mov
out
jmp
addl
adc
aam
xchg
and
mov
pop
js
pusha
adc
movsb
lret
fstps
pop
int
cmp
inc
mov
push
xchg
and
fwait
push
push
out
pop
push
rorl
sub
iret
daa
cmp
fcoms
mov
xor
mov
gs
xchg
dec
mov
add
jle
add
loop
std
mov
xchg
iret
ret
pop
and
push
icebp
leave
mov
lock
aam
xlat
add
ret
movb
jne
fldt
adc
mov
mov
test
mov
fidivrl
xchg
lods
or
divb
fidivrl
dec
mov
daa
mov
ret
mov
test
mov
sar
sbb
pop
call
mov
into
js
xchg
in
arpl
outsb
into
ret
lods
out
push
dec
in
xlat
ffreep
xchg
pop
jmp
adc
mov
mov
lret
test
leave
js
dec
sbb
inc
in
jns
imul
jmp
ljmp
fadd
ficomps
jnp
pop
or
leave
scas
int3
das
adc
jecxz
sub
aaa
jge
ds
sbb
adc
pop
adc
fisubl
pop
pusha
ja
jl
lahf
jmp
adc
push
jl
mov
lret
stos
xchg
pop
pop
dec
jmp
xor
mov
xor
data16
cs
arpl
int3
aas
pop
push
push
in
xchg
xor
repnz
fildll
mov
ljmp
aad
xor
lea
in
hlt
pop
sbb
and
int
loopne
in
mov
lds
pop
jne
mov
inc
dec
js
dec
jne
dec
jle
cld
pop
mov
cli
jne
adc
scas
scas
adc
jb
pop
stos
scas
jo
stos
fsubr
mov
xor
mov
mov
pop
dec
fs
jne
push
inc
fdiv
jb
sub
mov
mov
xor
lret
push
pop
inc
sarb
stc
mov
pop
add
dec
or
add
cmpsl
icebp
popw
div
dec
repz
sbb
xor
aas
or
mov
ljmp
mov
lret
roll
test
push
ljmp
aaa
jo
xchg
nop
mov
mov
sub
dec
clc
ret
jae
mov
iret
jg
cld
add
sbbl
xchg
sub
cmp
or
lock
lock
aas
push
sahf
mov
aam
mov
jne
mov
ret
cmp
cmp
cltd
xor
mov
mov
stos
shl
jecxz
cmp
jle
sub
je
jle
lahf
add
or
rep
mov
movsl
pop
inc
ret
fildl
jae
inc
test
mov
insb
jno
insl
jnp
mov
addr16
ss
dec
xor
sbb
sub
add
mov
cmpsl
cmp
stos
xchg
lsl
ret
lock
stc
mov
roll
mov
dec
push
or
and
inc
cld
mov
push
push
insl
mov
int
cmc
cmp
jnp
xchg
jmp
stc
jns
roll
push
je
in
flds
cwtl
aad
push
or
ret
fs
xchg
test
test
push
push
pop
fdivs
xchg
mov
pusha
stc
into
add
dec
jo
idiv
mov
lahf
fucom
and
pop
xor
dec
sbbb
mov
cmpsl
dec
jecxz
rcrl
inc
and
mov
cwtl
cmp
insl
leave
shll
js
mov
dec
leave
andb
mov
test
xor
add
orb
fldl
pop
sahf
sbb
mov
pop
js
mov
and
xchg
pop
push
scas
les
push
repz
sbb
in
fsubrs
scas
and
lods
pop
inc
push
dec
fwait
jne
divb
add
mov
inc
dec
mov
pop
js
mov
and
iret
repz
fstpl
popf
icebp
outsl
js
mov
int3
notl
clc
adc
dec
sbb
test
push
mov
push
addr16
imul
and
into
push
add
sbb
daa
iret
test
test
stc
and
pop
insb
lcall
adc
adcl
or
std
cwtl
pop
in
pop
mov
sbb
sbb
ficoml
dec
mov
int
sbb
mov
cmpl
dec
out
les
push
inc
loopne
push
add
xchg
fiaddl
aad
add
mov
sub
fcoml
pop
xchg
ret
pop
cmc
xlat
clc
cmpsl
inc
outsl
cmpsl
ret
dec
sbb
inc
inc
lahf
xchg
cmp
gs
push
insl
sbbl
sbb
test
mov
xchg
insl
mov
jle
dec
xchg
pop
shlb
jmp
dec
fwait
dec
xchg
adc
je
pop
addb
mov
data16
xchg
add
fwait
dec
push
lock
movsb
mov
cmp
pop
repz
jecxz
mov
pop
mov
mov
pop
loope
mov
and
or
add
sbb
rep
jno
push
mov
push
xor
into
pop
inc
test
test
out
nop
or
pop
popf
fs
dec
popa
aas
mov
dec
cmp
rcrb
cmp
push
push
js
jl
mov
ja
add
adc
mov
pop
and
repz
add
test
jmp
aas
add
mov
outsb
mov
popa
jl
out
mov
or
cli
adc
aam
mov
stc
scas
jge
mov
jne
mov
push
cmp
pop
adc
stos
ds
push
das
push
div
jp
shrb
lcall
adcb
enter
fsubr
fnstenv
in
mov
dec
incl
das
clc
lcall
xor
jno
cmp
cli
sbb
jg
push
bound
divb
clc
and
push
sbb
cmc
and
mov
add
xor
fwait
push
push
ds
xchg
sub
or
dec
ret
xchg
mov
push
dec
fstl
or
add
ds
cmp
cmp
pop
mov
xchg
add
pop
clc
fwait
in
jne
jne
cmp
mov
rolb
fisubrs
in
sarb
jp
xchg
fcomps
add
xchg
jae
rclb
je
int3
adc
cmp
fwait
xlat
or
mov
jmp
sbb
push
jle
iret
pop
mov
dec
int
jo
xchg
cwtl
les
pop
cmp
rolb
cltd
push
pop
push
rcll
mov
sub
pop
enter
shrb
adc
ljmp
decb
nop
pop
popa
fdivs
jnp
fs
dec
lods
mov
loope
dec
xor
xor
cmpsb
icebp
in
rcrl
dec
jp
inc
stos
std
push
ljmp
sub
shll
sbb
inc
bound
pop
mov
xor
jns
scas
pop
jp
inc
std
adc
xchg
aad
movsb
repz
xchg
or
pushf
nop
aaa
adc
lock
lds
popa
push
mov
xor
ret
aam
enter
in
xchg
sub
leave
es
es
jno
cmp
in
xchg
popf
sbb
fists
nop
xchg
xor
jo
add
jecxz
out
and
test
xchg
subb
in
fidivrl
sub
mov
add
dec
int3
clc
gs
es
mov
xchg
jo
out
xor
add
aam
dec
cmp
sub
add
mov
adc
mov
repnz
lret
repz
out
andb
sbb
mov
and
sar
mov
add
sbb
rolb
fmuls
cmp
jno
pop
sahf
mov
pop
pusha
mov
in
outsl
push
leave
popa
xor
adc
cltd
jo
rcrl
cmpxchg
jb
lods
cmp
fdivrl
subl
cmp
mov
addps
fwait
xor
rcrl
cltd
pop
cmp
jg
lcall
sbb
loope
imul
lock
xor
sub
push
adc
insl
pushf
and
cmp
repnz
popa
push
jns
push
mov
or
inc
pusha
pop
das
adc
pop
adc
pop
out
mov
cld
jl
gs
insl
fistpll
mov
xchg
sbb
fstl
arpl
lahf
scas
lahf
inc
rorb
or
add
mov
movsb
cmp
testb
je
in
lods
cmp
xchg
cmpsl
fimull
test
nop
mov
push
cmp
adc
push
scas
or
inc
sbb
out
ds
jnp
jns
fldl
add
add
sbb
push
add
xor
jbe
sbb
xor
out
jp
pop
lods
icebp
aaa
adc
inc
mov
je
cs
or
xorl
jo
adc
push
jne
add
adc
lods
ret
dec
push
in
gs
in
sti
add
dec
call
je
mov
cli
xchg
outsl
sub
push
pop
idivb
and
sub
and
pop
mov
mov
jp
mov
push
js
leave
push
adc
sbb
decl
push
jo
out
popa
fwait
xor
mov
inc
jecxz
loopne
out
push
jmp
sahf
ss
xchg
out
shlb
adc
jbe
icebp
push
imul
ret
outsb
xlat
test
cmpsl
ror
push
jle
cmp
adcl
dec
mov
lods
out
inc
or
lock
aad
pop
jne
push
push
movsl
movsl
sbbl
cmp
push
add
test
lds
push
push
je
or
roll
je
test
pop
or
repz
mov
insl
mov
cli
lret
shr
sub
sub
adc
or
or
movsl
repz
fcomps
idiv
mov
and
es
jmp
jno
ret
das
call
jns
cmp
xchg
lret
test
mov
and
test
cld
adc
inc
inc
sarl
sbb
pop
or
cmpsb
sarb
push
into
dec
and
mov
leave
lahf
je
and
movsl
xchg
cld
sub
cli
cmpsb
and
pop
sub
lcall
js
and
arpl
scas
fnstsw
fnsave
ja
or
add
fisubs
stos
int
insb
inc
insb
adcl
les
jno
fs
cli
cmpl
out
cli
adc
jbe
or
fcoml
inc
cmp
pushf
dec
test
sti
movsl
and
rclb
jne
sbb
icebp
dec
sbb
stos
out
sbb
clc
sahf
dec
pop
or
xchg
mov
inc
cmp
lock
xchg
movsb
ret
and
pop
int3
enter
test
sbb
addl
or
out
loope
call
push
push
frstor
in
xchg
mov
jnp
flds
scas
outsl
jmp
add
xor
das
aaa
aam
mov
fimull
xor
cmp
js
xor
xchg
mov
call
outsb
lahf
f2xm1
std
sub
jae
jne
incb
lret
aad
dec
fstpt
and
mov
fdivl
pop
stos
cvtps2pi
mov
shlb
push
in
mov
addr16
hlt
mov
xchg
inc
js
gs
xor
add
push
jmp
push
dec
jo
imul
xchg
loope
and
inc
iret
jle
enter
enter
push
aad
pop
and
popa
les
je
das
fsts
sbb
xor
orb
jecxz
icebp
imul
fisttpl
xor
push
inc
dec
sub
shr
cmp
iret
lahf
pop
xchg
pop
cmc
outsl
xlat
xor
bound
lret
stos
dec
sbb
loop
cld
in
adcl
push
dec
jp
xor
inc
xor
mov
jmp
xchg
push
pop
insb
mov
fcmovne
ja
xchg
sahf
je
add
xchg
pusha
adc
mov
dec
or
imul
shrb
movsl
lret
sbb
push
jno
lods
divb
push
dec
cmp
push
in
shlb
loopne
lahf
gs
add
jecxz
push
sub
pop
lret
inc
jno
mov
mov
out
adc
push
xor
push
lahf
push
call
ficoms
iret
addr16
bound
or
fdivs
dec
dec
jno
push
jl
sub
xlat
add
or
push
and
fisubl
xchg
mull
shl
in
hlt
test
dec
pop
loopne
insl
push
adc
jmp
inc
pop
ja
pop
jb
hlt
repnz
stos
in
cmc
test
outsb
xchg
mov
aas
jns
test
xchg
xchg
adc
movsb
add
or
loopne
xchg
xchg
subb
mov
push
cmp
cli
or
imul
insb
lcall
fs
mov
test
cs
int
sub
aas
nop
frstor
aam
out
mov
aas
sarl
pop
cmp
jbe
lahf
xor
mov
mov
daa
jmp
inc
pmaddwd
leave
pop
cmp
push
nop
je
pusha
inc
pop
idivb
mov
jle
repz
push
mov
xchg
and
pop
dec
inc
mov
xchg
outsl
ror
sbb
push
mov
pop
push
int
js
jmp
je
icebp
xchg
leave
xchg
cltd
adc
xchg
iret
shrl
dec
sub
dec
arpl
sbb
pop
pop
pusha
lahf
xor
add
inc
inc
int
push
push
mov
pop
dec
loop
sti
add
sbb
sbb
push
and
pop
test
jb
in
insb
inc
sbb
xor
lret
jae
add
jle
jg
xchg
mov
call
shll
pop
arpl
sub
hlt
pop
xchg
cld
inc
pop
into
inc
add
inc
in
icebp
xchg
mov
adc
stos
jmp
cmp
lahf
cmp
sub
lods
sahf
ds
pop
and
mov
push
push
push
jp
icebp
xor
cmp
xchg
in
add
inc
insb
xor
test
insb
dec
cmp
arpl
cmpsl
sbb
insl
out
mov
xchg
push
outsb
xchg
sbbb
mov
ret
and
bound
adcl
scas
mov
ljmp
sbb
aam
fisttps
xchg
repz
int
xor
arpl
stos
adc
dec
mov
ja
xchg
ss
pop
ja
mov
xor
faddl
lods
sahf
push
xchg
mov
add
sarl
lods
jge
jns
push
lock
mov
sub
or
cmp
sahf
stos
aaa
push
pop
outsl
fwait
cmpsl
mov
adc
les
gs
icebp
jbe
lock
sbb
clc
mov
movsl
sub
insl
sti
fsts
int3
push
cmp
cmpsb
jo
mov
shrb
and
jle
in
sti
in
dec
ds
xchg
fistl
inc
pop
popf
faddp
scas
sub
jge
inc
fistl
out
xor
cmpsl
adc
orl
xor
nop
je
inc
sub
das
faddl
pminsw
or
popa
sub
fs
jecxz
or
add
adc
xor
dec
adc
int
sti
xchg
add
stos
stos
mov
jl
int
insl
push
addl
insb
lods
out
and
sub
lods
call
push
sbb
je
cmp
sti
cmp
gs
sbb
pop
mov
push
push
fidivrl
adc
mov
mov
sahf
or
xchg
in
test
pushf
call
pop
xor
lods
andl
push
bound
fwait
lock
loope
jl
sti
je
fs
js
out
dec
addr16
test
mov
testl
nop
cmpl
lcall
sbb
cmovo
xchg
repnz
jb
xor
xchg
and
in
push
rcrb
iret
mov
mov
stos
xchg
mov
dec
xchg
test
or
mov
adc
sub
or
stos
out
xchg
xchg
mov
mov
cmp
mov
mov
lea
or
xchg
scas
dec
outsb
jp
das
loope
or
jp
xchg
outsl
subb
xor
repnz
adc
push
loope
or
loopne
add
jl
dec
popw
mov
inc
pop
and
cld
cmpl
ss
pop
jbe
push
movsl
mov
xor
inc
jl
popf
jne
jmp
popa
lret
adc
das
lock
mov
push
jne
into
pusha
call
or
mov
insl
lret
cwtl
cmp
xchg
daa
ljmp
dec
insb
xor
repnz
mov
shl
lock
stos
and
cmpsl
pop
push
and
outsl
popa
sbb
incl
push
hlt
xchg
jge
rorb
loopne
addl
cmc
jae
adc
pop
adc
out
pop
and
pop
xchg
push
xchg
mov
imul
clc
push
push
jb
mov
adc
xchg
es
xor
gs
or
add
rcrb
mov
pop
and
test
adc
mov
or
shll
stos
cmpsb
pop
adc
xor
out
jecxz
faddl
xlat
lahf
int3
add
cmpsb
aad
fsubrs
in
stos
negl
ds
or
pop
out
xor
xor
sahf
popf
dec
lahf
push
inc
inc
imul
jnp
aas
push
ljmp
xchg
push
fs
int
mov
or
into
add
fidivl
inc
or
xorl
jle
mov
xchg
pop
xchg
insb
popa
pop
inc
repnz
mov
iret
pop
imul
cmp
lock
cwtl
add
xor
xchg
mov
ret
cmp
repnz
sub
aam
jb
or
leave
pusha
pop
push
sbb
popa
test
or
cmp
mov
cmp
rcl
inc
adcl
inc
pop
es
ja
sbb
jns
jo
jecxz
or
rolb
ja
inc
lods
ss
mov
popf
aas
add
adc
loopne
stos
dec
rcl
clc
sbb
test
cmc
ret
insl
sbb
arpl
fstpt
xchg
jae
pop
cltd
loope
clc
xor
mov
test
bnd
out
shrl
xor
pop
push
movsb
pop
fdivr
inc
int3
ss
out
mov
add
nop
sub
xchg
out
jecxz
rol
sub
sbb
push
imul
icebp
sub
fxch
mov
arpl
fdivs
fcoml
push
cwtl
push
mov
mov
cmc
mov
in
lds
cwtl
mov
xlat
pop
fldcw
jl
xchg
in
jbe
xchg
cli
cltd
hlt
loop
shrb
lret
pop
aad
pop
mov
pushf
add
ljmp
loop
sub
subl
jno
dec
sbb
js
fmuls
andb
mov
js
pushf
iret
mov
and
ret
imul
nop
in
mov
or
repz
lock
push
clc
push
out
shlb
into
jo,pt
jnp
and
fimull
rep
es
mov
sbb
test
xchg
inc
sbb
sub
add
push
pop
pusha
outsb
dec
ljmp
mov
jno
adc
pop
sub
mov
fwait
mov
shrb
sbb
fs
xlat
cmc
mov
mov
dec
incl
loopne
cwtl
cmp
inc
mov
xor
fs
inc
xor
and
stos
add
test
addr16
cmp
out
push
fdivrp
fildll
pop
inc
inc
adc
enter
mov
loop
jno
lea
sub
inc
test
lret
pushf
lea
dec
bound
lahf
dec
out
scas
push
cmp
xchg
sbb
sbb
jp
mov
jge
add
mov
jmp
lcall
shrb
mov
xchg
test
movsl
shrb
jl
jno
divb
pop
pop
xor
rorl
out
lea
mov
adc
and
pop
and
or
lret
leave
mov
or
adc
push
ret
sarl
test
mov
mov
adcb
dec
addr16
adc
fldt
test
daa
xlat
aam
lret
cmp
ljmp
rcrl
cmp
add
adc
add
nop
aas
lahf
sub
xchg
push
arpl
xchg
pop
jecxz
in
add
fmuls
xchg
xor
jle
cmp
aaa
in
inc
cmp
sbb
push
adc
popa
lret
cld
cmp
sti
mov
push
sbb
lds
sbbb
aas
daa
lea
lcall
dec
inc
sarb
fistpl
cmp
lret
xor
or
push
adc
mov
jno
sti
test
or
dec
xchg
ja
sbb
iret
cli
push
add
xorl
xor
repnz
sbb
or
fldenv
mov
xchg
mov
push
inc
sbb
xorl
or
pop
nop
sbb
loope
lods
mov
sub
and
adcl
cmp
loop
xlat
mov
lods
jne
sbb
xor
dec
dec
cmp
inc
stos
sbb
mov
sub
adc
addl
and
xor
pop
not
pop
jle
stos
lea
adc
insl
dec
jle
push
or
mov
sub
inc
dec
enter
xchg
or
fisubrl
jg
hlt
sub
mov
dec
stos
add
mov
cmpsb
pop
fdivrp
incl
mov
arpl
or
push
sub
jae
jmp
and
mov
inc
in
shlb
mov
pop
je
and
inc
out
jecxz
push
in
pop
mov
inc
pop
fsubl
in
adc
notl
push
jns
cmp
aam
pushl
ret
mov
pop
scas
cs
sub
das
cmpsb
xchg
pop
dec
fcoms
mov
inc
aam
icebp
insb
or
in
fstps
inc
jnp
pushf
jo
sbb
pop
push
mov
cwtl
add
and
rol
insl
clc
xchg
xorb
inc
mov
xlat
pop
lods
cmp
lahf
push
outsb
mov
cmp
mov
lods
dec
push
pop
popa
and
pop
iret
sub
in
inc
xor
push
add
mov
xor
pop
es
mov
dec
addr16
jae
nop
cli
jo
ja
in
xchg
aad
push
pop
add
sbb
push
jg
out
dec
sbb
adc
mov
pop
xchg
frstor
fucomp
shrl
fisubrl
or
xorps
and
addr16
dec
ja
mov
and
das
and
sub
sub
mov
mov
dec
push
test
out
movlps
ds
mov
std
mov
adc
mov
mov
rcll
ja
outsb
clc
ljmp
popa
jg
mov
lock
in
addl
mov
mov
fwait
xlat
jp
or
shll
imul
cli
pop
inc
mov
mov
enter
or
adc
repnz
mov
sarl
cltd
ds
leave
mov
mov
ljmp
lret
inc
inc
sbb
adcb
sub
enter
mov
ds
bound
mov
dec
lods
movsb
cmp
imul
mov
or
jno
imul
out
mov
pop
mov
adc
dec
pop
inc
scas
jns
mov
lcall
adc
mov
mov
xchg
pushw
les
and
xchg
pop
mov
mov
xor
xchg
dec
jmp
mov
jns
movl
movsb
pop
scas
mov
outsl
notb
mov
mov
mov
push
jecxz
sub
cmc
fs
ret
pop
daa
out
aam
xor
mov
ljmp
push
ret
lock
daa
mov
jmp
jbe
xchg
inc
icebp
add
leave
push
aam
sbb
loope
out
cmp
imul
stos
push
pop
inc
testl
inc
insb
sbb
xchg
call
jno
sbb
mov
or
xor
cmp
sub
ja
mov
jno
or
mov
lods
lods
decl
js
sub
std
sub
mov
out
jns
or
or
popa
in
mov
lcall
mov
test
fwait
xchg
push
sub
enter
loope
jae
fs
mov
je
movsl
into
dec
mov
cltd
sub
jne
lock
lahf
adc
or
js
repz
int3
pop
cld
and
xchg
adc
sti
js
stos
mov
sub
clc
daa
push
test
roll
pop
call
enter
iret
xchg
xchg
ss
inc
cs
add
mov
mov
ret
scas
lods
arpl
test
xchg
dec
xlat
mov
sahf
pushf
push
or
adc
adc
lods
pop
test
or
xor
inc
adc
addb
sub
jne
jns
cmp
mov
dec
and
push
ss
shll
adc
xchg
jo
mov
mov
jae
stos
rcr
jns
mov
addr16
xchg
pusha
cmp
loop
xor
rcr
es
cwtl
mov
es
pushl
xor
in
xchg
xor
mov
pop
je
push
je
or
shll
faddl
inc
std
imul
cltd
sub
pop
adc
adc
cmp
mov
jo
jno
mov
jnp
or
in
mov
inc
cmp
rorl
jp
or
fiaddl
test
nop
in
jmp
mov
dec
push
inc
daa
dec
or
jg
std
adc
xor
or
or
shrb
mov
xlat
jg
mov
and
in
loop
hlt
out
pop
insb
mov
dec
push
push
add
inc
shll
fcmovne
fmuls
xchg
dec
ret
mov
lock
mov
cs
hlt
xchg
fldl
aaa
je
enter
sub
dec
flds
mov
dec
loope
push
sbb
pusha
inc
subl
xlat
out
jmp
ffreep
xor
sbb
mov
lcall
or
fs
mov
cmp
fnstsw
pop
jg
gs
in
inc
sub
pop
gs
xchg
mov
and
cli
loope
std
testl
iret
inc
inc
jecxz
cli
lds
jmp
adc
hlt
push
jmp
movq
repnz
fimuls
lods
or
mov
cli
test
push
ds
or
daa
aam
adc
and
xor
mov
inc
sbb
mov
movsl
popf
dec
push
mov
mov
jne
sbb
inc
jp
xchg
dec
cmp
add
xchg
shll
daa
aas
mov
cmc
sub
cmpl
or
jo
pop
sbb
shll
mov
inc
arpl
in
dec
lea
test
xorb
outsb
in
xorl
sbb
out
inc
movb
pop
js
iret
push
cs
out
jbe
add
cmp
cmpsb
push
mov
js
stos
iret
mov
add
add
adc
fidivrs
xchg
mov
aas
add
mov
mov
cmp
xchg
jmp
sub
test
sub
lcall
outsl
shl
push
adc
repz
js
cmpl
divb
mov
mov
fdivl
jle
sbb
cmpb
jecxz
mov
mov
jb
or
pusha
rclb
mov
clc
lahf
xlat
sbbb
clc
jb
ror
pop
idiv
sbb
dec
mov
lret
pop
or
jns
fnstsw
mov
lds
xchg
mov
orb
xor
fdivrp
inc
ret
aam
test
lods
in
and
jecxz
cmp
add
cli
jg
mov
aas
jo
sti
clc
data16
lahf
add
dec
xchg
fdivs
xor
inc
call
mov
add
or
pushf
aad
sub
xor
xchg
pop
cmp
mul
bound
rclb
add
push
mov
mov
imul
into
pop
xchg
mov
sbb
rorl
dec
add
stos
push
stos
lcall
xchg
inc
cmovbe
sbb
cli
dec
add
std
dec
push
lods
xor
add
push
dec
jmp
into
xchg
adc
outsl
les
rcr
aaa
and
in
mov
push
stc
sub
mov
mov
cmp
mov
mov
cmp
push
push
add
xlat
jbe
sbb
inc
test
push
dec
fcoms
lret
xchg
pop
inc
dec
ja
mov
add
pop
xchg
shll
jo
add
nop
xchg
call
dec
cmp
cld
jmp
cmp
add
enter
pushl
add
or
xlat
jmp
lds
mov
data16
ja
cmp
pop
sub
out
lods
mov
mov
add
mov
sbb
hlt
jecxz
ss
pusha
inc
push
lcall
dec
lock
pop
ret
jne
and
adc
add
mov
sbbb
or
cmp
sbb
xchg
fidivl
std
xor
lcall
mov
orl
cld
pop
push
rorl
das
fisttpll
mov
enter
add
jo
int3
lret
pop
fcoml
and
mov
int3
push
sub
dec
xchg
insb
push
lret
icebp
cmp
loope
xchg
int
ror
xor
lods
add
mov
or
js
lods
fldcw
popf
pop
and
cmp
push
or
add
icebp
or
test
mov
loopne
mov
je
dec
and
test
js
imulb
mov
pusha
sahf
or
out
ficoml
stc
pop
nop
repnz
stos
les
inc
std
and
mov
xlat
pop
lea
gs
outsl
or
rcl
xor
xor
ja
push
adc
inc
fdivl
scas
pushf
pop
xor
jmp
ret
lock
dec
lods
ret
lods
or
int3
or
stc
sbb
pop
iret
mov
inc
bound
mov
clc
xlat
inc
xchg
mov
xor
pop
dec
add
sub
fists
dec
cmpsl
and
or
idivl
orb
mov
mov
fiaddl
jnp
mov
fimuls
out
or
aaa
cmp
mov
or
inc
fisubrs
sbb
or
jmp
outsl
xchg
mov
cmp
leave
imul
sub
or
dec
mov
pop
inc
mov
jl
push
sti
sbb
test
lret
aad
dec
cli
out
loop
rclb
mov
fwait
push
push
les
popa
pop
mov
aaa
xchg
sahf
sub
shlb
mov
and
dec
adc
sub
mov
push
sub
movsb
pop
int3
sub
sbb
xchg
mov
pop
aad
cmpsl
enter
adc
push
lea
addr16
mov
inc
push
adcl
fsubl
out
inc
cmc
fisubl
outsb
xchg
icebp
xchg
gs
idiv
mov
rolb
adc
sub
xchg
and
dec
or
mov
push
adc
add
rcrb
das
sub
hlt
imul
scas
dec
add
mov
loopne
jne
cmpsl
push
mov
fldenv
push
aaa
outsb
nop
or
push
loopne
or
aas
in
outsl
jg
lods
add
sbb
in
push
mov
cmp
pop
je
xor
enter
xchg
push
fildll
jp
inc
push
lret
sahf
xor
xchg
ror
outsb
push
fnstcw
sub
frstor
ret
inc
fucomip
mov
or
dec
jecxz
jecxz
or
jle
cmp
xor
push
push
aaa
add
xchg
inc
enter
push
lods
data16
sbb
mov
je
dec
push
iret
idivb
rcll
iret
add
fs
insl
test
xor
xchg
std
ret
and
cmpsb
push
push
ror
out
loope
mov
lods
stc
mov
ss
push
in
push
das
push
mov
daa
leave
jp
cmpl
addb
xor
repz
pop
test
mov
mov
jg
scas
dec
pop
dec
sbb
or
push
ffree
ds
test
mov
add
pop
fsts
enter
sbb
cld
stc
movnti
mov
mov
pusha
sbb
cmc
and
repnz
lods
pop
adc
gs
daa
or
std
stos
push
adc
adc
mov
std
cmp
out
jp
and
cmpb
out
or
push
mov
pop
out
fiadds
repz
in
xchg
es
icebp
rorl
mov
jo
aad
ret
fxch
mov
mov
sub
ja
and
repz
jle
div
daa
sarl
push
cltd
cmp
test
fucomip
in
les
jp
sarb
adc
xor
cwtl
push
push
xchg
repnz
push
insl
iret
jo
pop
push
loop
pop
and
or
mov
jne
nop
out
ja
mov
pop
xchg
hlt
and
lea
cli
fsubr
and
les
pop
call
stc
xchg
jo
ret
adc
sbb
cmp
int3
jecxz
lahf
dec
mov
inc
movsl
jle
lods
and
and
pop
mov
sbb
xor
mov
add
adcb
ds
gs
dec
stc
nop
ds
push
cmp
sub
add
sarl
jae
xor
jle
cmp
inc
sub
das
mov
cmp
add
inc
xchg
mov
or
popf
or
xchg
shll
cld
mov
push
pusha
pop
dec
pop
dec
xor
add
mov
push
fs
fs
fidivl
inc
popf
add
movsb
dec
jmp
fcoms
sbb
dec
inc
sbb
adcl
sub
mov
mov
out
scas
pop
add
jne
ljmp
test
fs
push
jl
dec
ljmp
cmp
lcall
ret
stos
mov
hlt
mov
sub
pop
aaa
int3
adc
cmp
mov
addr16
push
jge
mov
adc
daa
test
je
inc
mov
test
rorb
jecxz
adc
pop
sub
fldt
push
sbb
loop
mov
or
or
cwtl
pop
push
pop
jb
stos
jle
cmpsl
mov
aaa
dec
cmp
jg
xchg
cmpsl
adc
sbb
decl
jg
insl
sub
call
mov
repz
filds
push
add
addr16
cmp
xchg
inc
data16
adc
fsubr
mov
loope
push
mov
sub
cmp
es
jnp
xor
popf
push
inc
aad
rorl
pop
mov
push
pop
pop
int3
pusha
out
loop
test
inc
jno
loopne
sbb
xor
in
adc
jge
push
add
hlt
in
sub
add
inc
sar
outsb
icebp
jle
mov
xchg
jle
inc
xor
or
mov
jmp
in
lea
stos
int
data16
mov
push
insl
adc
mov
xchg
sbb
lods
insb
rolb
pop
out
jo
jl
push
push
insl
aad
imul
mov
je
lods
fistpll
fs
stos
sti
xchg
dec
loope
sbb
dec
xchg
cmp
sahf
or
fwait
into
jno
sti
add
test
insl
loopne
clc
stc
outsl
jmp
ljmp
ds
out
inc
jmp
mov
inc
dec
shll
ret
fbstp
and
sbb
inc
dec
xor
loop
or
sbb
cmp
mov
mov
sub
es
fidivrs
out
mov
push
or
frstor
jo
loope
ss
mov
cmc
push
pushf
loope
outsb
fdivs
popf
icebp
aam
outsb
lods
pop
add
push
sub
mov
add
pop
les
stos
or
cmpsb
aas
imul
std
testb
nop
sub
adcb
push
add
test
out
or
jge
cmp
lods
cmp
cld
jp
nop
jo
dec
or
xor
sbb
cli
cmpsb
push
pop
mov
movsb
jmp
jae
add
mov
ja
xchg
xchg
in
jle
push
rcl
insl
mov
clc
stos
js
and
jle
push
push
mov
xor
les
xorl
dec
or
push
lock
fstps
fwait
test
cli
sbb
lods
enter
shll
mov
into
or
in
repnz
imul
ds
and
sbb
ljmp
out
xorl
add
jge
fwait
dec
filds
orb
mov
jp
pop
loope
int3
cs
mov
lds
cmp
addl
push
push
in
xorl
mov
ss
adc
pop
repz
int
popa
loope
pop
push
mov
arpl
or
jp
adc
enter
lret
lods
add
imul
daa
lds
shl
xchg
cmova
iret
syscall
xchg
adc
jo
int
aas
imul
adc
pop
je
push
inc
sbb
stc
data16
fs
mov
xor
loope
add
or
pop
mov
add
add
jne
pushf
lret
and
repz
ja
lods
xchg
or
leave
or
ljmp
test
roll
out
pusha
pop
inc
bound
and
xchg
loop
jbe
xchg
sbbb
push
push
and
shll
push
in
movsb
sub
int
out
aam
or
inc
in
mov
pop
xchg
lret
stc
loope
cmc
mov
in
xlat
or
and
mov
mov
push
in
test
movsb
mov
mov
push
jecxz
sbb
and
daa
nop
adcb
and
fisttps
sbb
les
mov
and
imul
gs
hlt
fcmovbe
lgs
xchg
or
test
pusha
push
pop
lahf
mov
pop
out
sbb
push
mov
pop
pop
push
push
and
dec
andl
popf
icebp
jge
adc
insb
imul
mov
cmp
jp
ret
adc
push
aad
or
push
daa
mov
push
negl
out
daa
xchg
or
push
xor
in
fldt
add
lahf
xchg
cwtl
mov
mov
data16
pop
int3
mov
incb
pop
mov
shll
ja
mov
fcmovnu
mov
bound
cmp
push
fsubrs
adc
inc
mov
test
cmp
int3
in
mov
pop
loop
enter
ss
or
jno
inc
cmp
mov
jge
loop
cmp
xchg
dec
add
icebp
pushf
add
fs
mulb
mov
xor
ja
hlt
mov
imul
in
jb
inc
dec
mov
imul
cld
mov
and
jns
add
bound
mov
cltd
adc
mov
mov
jmp
sub
jg
into
cltd
lret
xor
and
adc
into
andl
clc
xor
sbb
stc
test
and
mov
adc
or
inc
js
and
loope
dec
test
pop
lock
mov
out
outsb
mov
adc
xchg
ljmp
push
xchg
jp
fldcw
insl
mov
cwtl
xchg
or
cmpsl
pop
pop
lahf
clc
and
pop
jl
test
sbb
or
adc
mov
or
mov
jge
cmp
insb
cmp
add
or
mov
shl
or
mov
das
and
push
mov
push
not
mov
inc
ret
and
and
stc
xor
mov
and
std
mov
sbb
add
pop
mov
jb
lcall
or
add
push
dec
jnp
push
out
add
add
test
mov
pop
fs
sub
adc
xor
je
sbb
testb
and
xchg
xor
cltd
push
mov
xchg
sub
cmc
in
push
stos
cmp
jns
daa
out
daa
int3
cmp
rclb
dec
dec
mov
aaa
popa
jecxz
out
std
scas
mov
xor
hlt
xchg
dec
lea
cmp
pop
and
xchg
pop
mov
vmulsd
loopne
add
mov
popa
call
cmp
gs
inc
scas
cli
fcmovbe
fisubrl
sahf
scas
negl
jo
add
push
idivl
mov
xchg
insl
in
jp
loope
movsb
adc
adc
cmpsl
data16
popa
mov
lret
iret
jmp
lock
or
aad
add
cwtl
loopne
rolb
fdivs
xchg
mov
pop
jmp
ljmp
adc
mov
enter
xor
dec
adc
fcomps
mov
arpl
mov
jmp
addr16
test
rolb
add
in
ficompl
cmp
add
arpl
pop
sbb
movsb
mov
add
pop
in
mov
pusha
pushf
pop
dec
or
lcall
movsb
fsubs
shrl
inc
mov
cmpsb
lock
movsl
dec
xchg
lret
push
in
popa
mov
jns
push
xor
outsb
xor
fistl
xor
pop
fwait
push
pop
stos
outsl
sub
xor
insb
or
dec
imul
sahf
pop
push
pop
xorb
test
mov
xorl
rclb
mov
dec
add
pop
loopne
mov
test
dec
es
cli
andb
cmpsb
fwait
jne
cmp
sub
mov
mov
sbb
inc
xchg
xor
outsl
mov
outsb
insl
or
mov
pop
movsl
scas
mov
ja
mov
out
jne
cmpsb
xchg
mov
push
mov
ret
push
stos
ja
lea
scas
imul
ror
cmp
ja
push
xor
xor
aad
cmpsb
test
notl
inc
dec
add
dec
jmp
cli
pop
cmp
insl
mov
ret
stc
out
in
iret
call
jp
in
pop
in
daa
cwtl
loopne
and
sbb
inc
add
jae
in
inc
lret
xor
adcb
movl
outsl
mov
push
xchg
mov
dec
cmp
inc
inc
cmp
jmp
xchg
and
cltd
xchg
cld
sub
lock
dec
xchg
aaa
xchg
lods
imulb
sbb
cwtl
js
test
notl
cs
inc
ret
adc
testl
xchg
movsl
sub
fstl
ficoml
jbe
pop
ret
pop
lcall
mov
sahf
mov
int3
xchg
inc
fs
mov
jge
sub
pop
loopne
les
test
int
add
jno
aad
push
cmp
insl
xor
test
movl
scas
icebp
adc
or
push
stc
pop
mov
inc
int
xchg
jno
iret
cwtl
sbb
bound
cwtl
mov
into
leave
sub
loopne
cmpsb
icebp
mov
mov
dec
or
cmp
add
je
ficoms
lahf
mov
xor
jge
push
sbb
mov
pop
loope
aad
adc
inc
repnz
loopne
iret
adc
pushl
dec
inc
cmpsl
test
lods
jg
mov
and
jbe
decl
or
adc
xchg
push
mov
rcl
xchg
outsb
repnz
or
test
pusha
mov
ror
or
test
cld
enter
int3
xchg
xchg
sarb
sub
xrelease
mov
lds
lea
ja
test
shlb
sbb
xchg
mov
cld
mov
pop
cltd
jmp
mov
stc
and
mov
nop
js
enter
popf
mov
pop
jmp
fidivl
sbb
test
sub
sub
lock
stos
clc
lea
out
jbe
push
cli
add
in
movsb
sbb
fcomps
xchg
push
into
nop
lds
or
out
addr16
mov
stos
dec
and
fildll
loope
xor
add
inc
int
in
aas
mov
or
xor
call
mov
loop
sti
movsl
lret
push
test
push
ficompl
das
pusha
in
mov
adc
shrb
fistpll
xchg
rolb
cmp
popf
mov
mov
in
or
enter
mov
negl
xor
lret
xchg
aam
mov
mov
orb
pop
shrl
mov
xchg
nop
mov
mov
in
lds
xlat
adc
mov
pusha
movsl
jne
cli
xchg
or
test
shll
loope
xchg
shll
inc
push
inc
lret
pop
or
hlt
xor
popf
lret
int
stos
rcll
mov
lcall
mov
stc
mov
sbb
add
push
inc
shlb
pop
enter
ds
lret
mov
js
mov
inc
or
outsl
lahf
pop
dec
add
rolb
cmp
leave
xor
outsb
jge
fs
dec
jae
push
mov
lcall
adcb
add
push
pop
outsb
rcrb
sub
outsb
sub
inc
and
push
cld
push
jg
pusha
xchg
mov
fprem
fwait
dec
mov
push
xchg
sbb
dec
cwtl
adc
iret
in
xchg
leave
out
clc
inc
out
ret
pusha
pop
nop
sbb
xor
mov
jp
push
inc
sbb
push
leave
test
cmp
sub
repnz
stos
loope
xchg
ljmp
and
subl
jg
or
pop
repz
arpl
or
bound
popf
mov
ja
and
adc
mov
test
inc
xchg
or
jl
or
hlt
dec
stos
fs
ljmp
sub
dec
mov
pusha
cmp
dec
mov
lock
js
jbe
bound
aam
pushl
fdivrs
cs
daa
decl
into
fs
lods
mov
sub
lcall
adc
jo,pt
inc
dec
cmp
sahf
inc
jb
test
jp
xchg
adc
test
aaa
ret
jnp
mov
fnsave
xor
sbb
jg
shl
call
aam
adc
jle
mov
fnsave
scas
mov
sarb
sub
xchg
test
xchg
ret
andl
mov
cli
mov
in
aad
popa
imul
test
outsl
sahf
clc
stc
movsb
testl
or
adc
jbe
adcl
notl
mov
test
xor
scas
lahf
out
xor
data16
lcall
bound
add
iret
cli
lods
popa
cltd
dec
inc
fsubp
mov
scas
into
xor
pop
jecxz
fnstsw
into
add
lcall
mov
fidivrs
lret
rorl
jg
xor
jnp
pop
xchg
stos
cli
xchg
sbb
test
sub
push
mov
mov
inc
mov
mov
in
jmp
pop
and
in
xchg
dec
cmp
or
loop
xchg
leave
inc
bound
popf
bound
xchg
push
inc
fwait
jmp
sbb
lods
cld
and
pop
inc
pop
sub
test
sub
stc
xchg
ljmp
mov
adc
dec
inc
sbbl
mov
sbb
out
es
gs
mov
fstps
xorb
cmc
outsb
xlat
push
add
movsb
inc
mov
add
imul
pusha
sub
sbb
push
inc
mov
fimull
xor
mov
or
and
cmp
jns
mov
adc
ficoml
arpl
adc
xchg
testl
mov
sub
lret
cltd
push
imulb
mov
jmp
pop
mov
jp
jbe
inc
and
ret
jno
adcb
adc
mov
or
jecxz
shr
jl
aaa
cli
mov
mov
jecxz
test
ljmp
inc
xor
in
jecxz
insb
lock
bound
dec
repz
pusha
mulb
aaa
aaa
or
std
clc
jo
or
lea
add
pushf
mov
cmp
and
mov
int3
mov
lock
push
cmp
xchg
sarl
jae
jle
jne
and
mov
into
pop
cmpsb
push
repnz
shlb
xchg
inc
push
scas
lock
insb
je
add
test
cmp
push
gs
push
sub
clc
or
loope
mov
scas
xchg
and
test
xor
inc
pop
mov
dec
xor
into
lods
testb
jg
shrb
mov
gs
sbb
jbe
ljmp
pop
adc
cmp
outsl
daa
bnd
dec
out
in
mov
mov
ss
xchg
mov
lcall
pop
push
mov
push
inc
shlb
leave
add
jae
stos
and
pop
jb
push
push
ret
stc
xchg
lahf
das
into
sbb
push
add
insl
lcall
xchg
shl
inc
rolb
nop
js
mov
hlt
out
add
and
sbbl
rcll
divl
adcb
and
fmuls
mov
leave
mov
dec
pop
or
add
dec
xor
or
shlb
mov
leave
gs
jge
sbb
mov
jmp
cmp
pop
xor
adc
call
mov
test
sbb
fxch
imul
pop
pop
lcall
enter
repz
sahf
pop
mov
mov
or
mov
popl
lea
int3
sbb
mov
cmp
push
jl
loope
or
and
mov
adc
cmpsl
stos
fsts
and
cmp
ja
push
rcll
movsb
inc
insb
imul
repnz
incl
fadds
mov
inc
popf
pop
sub
orb
lods
lods
jns
jl
ss
hlt
fdivl
mov
jg
inc
into
jecxz
xchg
ds
fwait
dec
jns
test
lea
inc
xchg
andl
and
adc
out
in
fbstp
je
sub
xchg
rorl
int3
les
mov
fwait
and
arpl
jl
sbb
xchg
out
sarb
push
out
adc
ret
imul
adc
loopne
sub
scas
pop
xchg
xchg
icebp
sbb
push
mov
int
lcall
mov
xor
sbbl
lods
inc
out
leave
out
scas
lahf
fstps
dec
jae
roll
sti
fimull
ss
daa
mov
cld
div
xchg
xor
mov
or
adc
adc
sbb
cmp
addr16
add
cmp
fnstenv
decb
cltd
aaa
sub
add
iret
mov
push
pushw
add
ret
or
into
mov
mov
nop
pop
adc
lods
lods
sbb
jae
stos
cmp
out
mov
mov
repz
or
xchg
das
jmp
fbld
out
xor
push
jl
mov
and
int3
sub
outsl
loop
in
xchg
mov
pop
out
xchg
jp
popa
aas
movb
enter
add
pop
push
inc
inc
ret
fincstp
push
push
pop
lret
mov
xchg
xchg
pushf
stos
mov
inc
int
nop
mov
push
xchg
push
outsl
loop
jl
out
cmpsb
ljmp
icebp
and
lods
ja
xchg
ja
inc
pop
adc
fcomp
aad
jmp
jae
nop
xchg
or
je
sbb
test
dec
dec
in
ja
cld
andl
cltd
cmp
je
dec
ficoms
test
xchg
out
inc
sar
add
leave
inc
mov
pop
lcall
mov
mov
fisttps
sbb
push
aam
out
dec
push
aam
imul
je
cltd
cmpsb
nop
test
aas
mov
ds
pop
fildl
and
and
xchg
cmpsl
cbtw
aas
scas
test
adc
les
lret
dec
imul
lret
sub
mov
jmp
xor
and
subb
test
andb
mov
add
adc
fisttps
and
mov
jnp
pop
inc
cmp
mov
cld
pop
mov
push
test
cmp
pop
lahf
fisttpl
fcomip
nop
xor
xchg
mov
mov
adc
jp
mov
jo
out
xchg
add
xor
sub
and
fidivrs
or
xchg
mov
lods
xchg
sub
aam
adc
mov
dec
mov
inc
mov
outsb
mov
lahf
and
loopne
cwtl
jg
call
in
or
xchg
shll
es
cmc
jp
push
jmp
xlat
jle
out
daa
loopne
mov
add
dec
cwtl
jbe
or
flds
sbb
ret
jnp
sbb
jae
cltd
pop
pop
insl
pushl
pop
lods
jns
or
jmp
push
repnz
sbb
inc
pop
xor
imul
push
sbb
fcomps
add
loope
sbb
dec
out
test
pop
movsl
lock
and
push
shr
lods
pop
push
scas
movsb
inc
jmp
sbb
xor
dec
loope
bound
pop
adc
fstpl
dec
push
or
ret
xor
fdivs
adcb
shlb
mov
aad
popf
fisubrs
stos
rcll
lcall
and
mov
imul
mov
lea
sub
sbb
dec
call
inc
mov
rolb
nop
cmp
cmp
ret
cmpsb
xchg
loop
sbb
test
jns
jmp
push
out
std
and
or
out
mov
shll
pop
inc
add
icebp
ffreep
lahf
xor
ret
xchg
jno
adc
mov
pop
out
inc
shrd
jge
sub
cmp
inc
fldcw
mov
popa
and
test
cmp
insb
hlt
adc
aad
test
rorb
mov
inc
cmc
cwtl
add
icebp
mov
mov
fs
outsl
xchg
pop
je
and
mov
inc
outsb
xchg
lea
pop
mov
mov
pop
in
xor
lcall
in
mov
flds
push
mov
mov
ds
sahf
jb
jnp
sub
in
out
sarb
dec
xchg
mov
add
pusha
out
adc
insl
mov
jae
and
push
push
adc
int
out
je
cld
xchg
cltd
rcl
shlb
or
rcr
shlb
inc
mov
push
inc
call
sbb
fs
int
pop
mov
loopne
addr16
insb
ljmp
or
mov
and
and
mov
push
add
arpl
call
adc
cld
cmp
test
and
lcall
dec
inc
in
pop
cmpsb
rcrl
and
insb
push
fcomps
jmp
adc
roll
aaa
stos
or
jge
push
loop
hlt
push
xchg
add
add
pop
ljmp
pop
rcrl
mov
mov
push
adc
in
jecxz
adc
popw
enter
aaa
insl
jecxz
pop
mov
in
stos
xchg
cmp
push
call
lcall
mov
jl
cmpsb
jb
push
shl
movsb
rorb
fs
pushf
clc
imul
adc
or
or
xlat
mov
add
sarl
add
imul
pop
dec
fildl
cmp
xchg
ret
out
mov
data16
or
mul
xor
lock
pop
scas
inc
sbb
test
add
and
aaa
adc
int
ret
adc
push
push
sarl
cmp
mov
mov
xchg
and
adc
push
popa
addb
mov
imull
push
inc
mov
inc
lret
add
xchg
dec
inc
mov
and
inc
adc
xor
arpl
lods
jno
fs
lret
pop
sbb
add
add
stc
movsb
mov
lods
arpl
add
pop
pop
xchg
cmp
sti
mov
aaa
bound
dec
cmc
jle
jno
stos
or
xchg
add
mov
or
jle
sbb
fcomps
and
repz
in
pop
adc
mov
or
pop
aad
lahf
xchg
add
sbb
jno
nop
mov
jae
mov
push
test
lds
or
pusha
fdivp
das
test
shlb
outsb
stos
movsb
cmpsl
sub
ret
or
sbb
push
lds
jns
mov
adc
cmpsb
mov
scas
xchg
clc
push
push
adc
pop
aaa
adc
jb
popa
push
in
push
pop
inc
or
and
jmp
cmp
outsb
dec
call
inc
mov
scas
xor
data16
xor
mov
mov
mov
sbb
enter
jmp
mov
pop
sub
push
mov
mov
sbb
sub
sbb
les
adc
ret
xor
push
add
push
push
inc
adc
pop
mov
add
test
or
xlat
imul
pusha
pop
push
dec
and
push
icebp
push
cltd
or
out
dec
dec
loop
sbb
or
pop
mov
jmp
or
imul
mov
mov
fadds
in
bound
fnstcw
iret
adc
jp
add
mov
cmpb
xchg
shl
xchg
mov
sbb
inc
ds
mov
push
xchg
cli
jge
cs
je
addl
scas
iret
insl
mov
fs
pop
dec
fnstenv
mov
mov
lret
cli
and
mov
dec
xchg
and
cld
lret
fstpt
cs
std
jge
mov
mov
mov
and
xor
sbb
outsb
mov
out
mov
pop
mov
jecxz
cld
xchg
ret
lret
jnp
add
xchg
and
mov
pushf
xchg
iret
cmp
jns
pop
stos
imul
bound
movsb
stos
pop
imul
pop
cmp
mov
xlat
icebp
or
lret
xchg
fstps
fcompl
xchg
pop
outsb
ss
add
jmp
sahf
jae
xor
fdivrs
xor
xor
ds
cmpsl
pop
cmp
inc
fmul
out
aaa
xchg
leave
push
inc
jae
lea
outsb
sbbl
into
stos
jne
push
cmp
negl
dec
scas
pop
cmp
sub
xchg
insb
sahf
push
adc
pop
pop
xor
aas
dec
or
cmp
cmp
mov
mov
xor
fsubl
insl
out
cmp
jecxz
imul
or
cmc
add
sbb
jmp
icebp
mov
je
dec
adc
call
jae
pop
jbe
stos
jge
lods
pop
jbe
xchg
popa
jg
xchg
js
cmc
lods
pop
scas
jae
sbb
mov
incb
aad
push
cmc
xchg
movsl
or
scas
xchg
add
pop
add
cs
cli
mov
das
jge
out
pop
loop
movsb
movb
pusha
jb
jmp
arpl
es
movsl
pop
pop
sub
add
vmovaps
mov
jmp
xor
in
sub
call
dec
cli
mov
inc
lea
mov
xorb
test
mov
test
mov
in
outsb
mov
dec
inc
jle
jnp
loope
and
outsl
cmp
cmpsb
loop
cmpsb
loope
add
adc
in
jnp
dec
pop
or
dec
popf
cvtps2pi
into
xchg
sbb
stos
add
or
add
call
data16
sub
negl
lock
enter
sub
lret
pushf
push
out
dec
mov
data16
test
xchg
enter
dec
neg
add
loop
push
jne
sahf
cmpsb
sbb
shlb
and
mov
stc
pop
pop
pop
fcmove
dec
aad
out
inc
mov
jg
fiadds
xchg
mov
jle
outsb
mov
std
mov
add
iret
mov
push
mov
lahf
and
sub
dec
dec
fists
pop
clc
subb
mov
test
jp
ljmp
test
mov
sub
add
pushf
and
push
andb
adc
js
push
jns
jno
and
push
cmp
in
adc
jnp
cwtl
iret
add
ret
mov
xor
addr16
out
lds
and
aad
or
xor
add
jns
sbb
std
mov
pop
in
cld
mov
stos
add
movsl
shll
inc
out
mov
dec
adc
add
mov
inc
imul
bound
cwtl
test
orl
rorl
jo
dec
mov
pop
lods
cmp
scas
dec
adcl
stos
mov
rdpmc
pop
sbb
dec
jg
push
mov
mov
adc
cmp
lods
ss
pop
push
mov
nop
pop
xor
add
mov
lods
rcll
xor
jne
jecxz
ds
adc
add
push
push
lds
mov
ja
jb
out
fdiv
pop
adc
jb
movsb
pop
push
fidivrs
push
xchg
adc
aam
repnz
shll
pop
cwtl
adc
sub
pushl
mov
adc
adc
cmp
xchg
testl
add
sub
and
push
push
dec
lds
in
cmpsl
dec
mov
mov
ror
or
cmp
push
movsb
daa
sbb
cmp
shlb
ret
push
cmp
lock
out
mov
fwait
mov
jp
sub
pop
lock
jp
push
push
add
sti
xor
dec
and
pop
pop
add
fsts
fimull
movsl
test
adc
adc
repnz
in
and
aad
cld
jecxz
add
repz
fnsave
inc
mov
scas
and
scas
and
shlb
adc
dec
sarl
cmp
mov
xor
add
lods
xchg
push
loope
call
fs
inc
notl
mov
jae
movl
or
out
push
or
int3
out
add
outsb
int
adc
xchg
out
popa
je
adc
mov
mov
pop
sub
sub
mov
les
push
das
or
pop
mov
xchg
xchg
aaa
cltd
mov
xor
popf
hlt
aas
xchg
jnp
in
sbb
and
outsl
mov
movsb
insl
cmc
pop
xor
xor
cmp
sti
gs
push
push
or
inc
push
hlt
push
je
movsb
pop
push
jp
repnz
inc
and
xchg
into
addl
xchg
xor
cltd
pop
sub
sbb
inc
mov
ss
jae
nop
inc
rcl
push
add
cmp
adc
sbb
inc
je
xor
pop
cmp
sbb
xchg
mov
ja
jmp
sbbb
icebp
ret
xchg
stos
popa
pushf
daa
xor
mov
cmp
mov
rcr
mov
cmp
add
js
sti
es
clc
pop
jg
fisubs
or
gs
push
sbb
mov
call
out
dec
subl
test
xor
cwtl
mov
jb
clc
jb
xchg
aas
pop
mov
add
push
dec
sub
fnsave
sub
mov
repz
pop
jbe
mov
lahf
stos
and
mov
pop
jae
mulb
movsb
cs
xor
sbb
xchg
sub
bound
iret
adc
mov
adc
bound
std
hlt
orl
test
and
stc
push
data16
sbb
call
xor
sub
lahf
test
hlt
shll
leave
xor
jo
adc
push
mov
push
xchg
xchg
setge
mov
je
cmp
mov
or
adc
mov
out
roll
mov
lcall
insb
adc
add
scas
lahf
rcll
pop
in
xchg
into
loopne
push
mov
adc
imul
nop
xchg
and
xchg
pop
icebp
test
insb
or
test
jae
add
das
and
add
push
inc
decb
fcmove
add
pop
mov
dec
jmp
lock
inc
insl
push
and
dec
jo
pop
hlt
xor
test
mov
notb
jns
or
inc
mov
xchg
rcrb
pop
test
sarl
shl
mov
nop
mov
leave
mov
push
lods
lods
scas
loope
out
xchg
roll
sub
pop
push
sbb
xor
icebp
in
adc
push
pop
test
inc
vpunpckhdq
insl
lds
nop
repnz
lcall
cld
and
scas
inc
mov
test
cs
xchg
into
cwtl
andb
push
fisubrl
das
icebp
sub
movsl
add
or
lret
cwtl
into
cld
mov
nop
fisubrs
push
cmp
add
jmp
icebp
pop
cmp
sbb
add
or
inc
insl
clc
adc
lock
cli
ljmp
mov
scas
mov
les
aad
pusha
out
mov
in
adc
imul
xorb
adc
je
mov
out
sahf
out
pop
xchg
mov
add
ret
fisttps
add
sub
cmp
push
rclb
stos
fisubrs
pop
lcall
das
adc
iret
jnp
and
add
call
das
clc
pop
in
and
cld
xchg
cmp
ret
clc
xchg
in
lret
fisubrs
sub
xchg
pop
inc
out
jge
dec
add
cmp
test
cmp
into
adc
xchg
mov
pop
cwtl
push
popf
das
inc
adc
test
push
pusha
aas
sbb
or
stos
pop
stos
nop
push
push
fnstenv
jmp
in
fists
in
adc
mov
in
add
scas
aad
cmp
ss
mov
and
cld
loope
dec
jbe
push
dec
mov
dec
mov
iret
movsl
mov
loopne
pop
and
push
out
dec
xor
mov
jg
imul
dec
ret
lods
imul
int
mov
and
popf
xchg
enter
rorl
mov
xlat
movsb
and
push
pop
dec
addr16
xor
mull
popf
mov
pop
cmpsb
popf
cs
adc
and
mov
push
jmp
ss
cmpsb
mov
adc
fisttps
mov
incl
mov
in
jp
icebp
movq
xor
inc
lret
pushf
int
aas
xor
lret
add
adc
fildll
inc
movsl
xor
out
mov
add
mov
lret
icebp
mov
movsl
xor
push
shll
jno
jne
loopne
add
test
mov
orb
pusha
push
sarb
push
mov
dec
pop
fs
pop
mov
sub
stc
jno
cmp
fdecstp
lret
mov
in
pop
cltd
out
or
push
cli
loop
jmp
jns
loop
jo
or
mov
push
or
fisttpl
dec
rclb
push
ret
mov
cmp
mov
fildl
xor
push
pop
fcomip
mov
sbb
xchg
mov
sbb
xchg
add
fidivrl
xor
xchg
fsubr
inc
test
int
cmp
imul
inc
fistps
insl
inc
daa
out
sbb
xchg
lds
mov
jnp
loop
cs
ss
xchg
ret
mov
hlt
or
jno
push
pop
stos
divl
scas
test
push
ja
sbb
outsb
ucomiss
fistpl
aas
testb
mov
mov
adc
mov
out
mov
xchg
lret
add
daa
outsb
mov
xor
mov
push
xor
sbb
ret
pushf
cltd
dec
cmp
int3
fdivrs
test
sub
enter
loope
repnz
xlat
sbb
loope
fcoml
int
dec
stos
mov
xor
iret
outsl
stos
pop
sub
pusha
xor
sub
popa
dec
inc
fdiv
or
fstpt
das
hlt
aad
hlt
test
jbe
adc
rcll
mov
jb
xlat
xor
mov
mov
jnp
iret
mov
dec
fwait
pop
xchg
sbb
add
mov
leave
adc
js
xor
mov
call
bound
xchg
cli
sub
test
xor
mov
ret
sbb
shll
test
aaa
fistpll
shr
inc
outsb
cmc
mov
mov
dec
clc
jge
push
sub
xchg
push
add
into
or
inc
mov
add
lret
je
insl
lcall
sti
mov
sbb
loopne
sbb
scas
les
adc
outsb
int3
pop
or
in
and
fsubl
cltd
ror
add
cmp
scas
lret
jo
rcrb
inc
sub
or
sub
and
fucomip
cs
or
lds
push
outsb
ret
sbbb
pop
outsl
mov
jecxz
xchg
inc
loopne
xchg
jno
push
xchg
fsubrs
aad
xchg
icebp
fwait
push
enter
and
rcrb
inc
xor
negl
lea
add
adc
cmp
or
xor
xor
add
enter
or
xchg
pop
lahf
lds
iret
icebp
jge
jns
adc
inc
mov
push
mov
jge
arpl
cmp
mov
mov
mov
mov
inc
mov
shlb
clc
push
loopne
dec
and
pop
pop
outsb
pop
popa
mov
in
pop
shl
mov
in
add
rcll
mov
scas
rol
pop
mov
test
insb
fwait
rcrb
inc
bnd
mov
daa
xor
or
xor
xchg
lahf
fbstp
enter
das
dec
insl
jns
pminsw
jg
xor
mov
mov
pop
and
jno
sub
mov
mov
in
mov
jne
imul
fwait
sbb
loope
mov
cmp
nop
xor
scas
mov
inc
or
sbb
movsb
pop
and
xor
lods
mov
adc
outsb
dec
test
in
or
push
pop
inc
sbbb
xor
cli
sar
insl
jno
xchg
fcoms
xor
popa
sub
fdivl
sti
push
mov
cmp
cmp
jo
jl
pop
push
mov
notb
jmp
sbb
stos
sub
jno
fistps
mov
cmp
xchg
aam
and
mov
jg
out
bnd
int
fldl
mov
and
ja
lods
mov
pop
in
leave
gs
jo
stos
dec
mov
xor
out
repnz
xchg
fsubrl
mov
jg
cmp
pop
lods
call
mov
pusha
add
mov
ja
and
inc
imul
inc
bound
lock
into
shl
es
and
cmp
aaa
pop
push
cmp
ss
lds
mov
mov
lds
insb
xchg
jg
push
movsl
divb
or
in
dec
dec
fsubrl
adc
xchg
cmpsb
add
test
mov
fcoml
mov
lods
push
xchg
shll
or
hlt
lods
adc
xchg
movsb
cs
mov
cli
iret
xor
loope
shll
js
lret
movsb
mov
and
ljmp
fsubrl
ficoml
in
adc
sar
and
jb
out
daa
jp
and
clc
sub
dec
cltd
mov
mov
in
lahf
das
sub
add
lods
jl
out
insl
lods
test
ret
xchg
fldl
negb
pop
pushf
push
cld
inc
add
sbb
mov
or
cmpsl
outsl
addr16
fldl
popf
cmc
sub
and
jno
add
mov
cmp
pop
inc
pushf
xor
adc
es
jo
scas
jle
ss
sbb
push
imul
cs
or
sbb
add
add
push
mov
mov
push
add
inc
outsb
and
xor
aam
and
dec
sub
push
pusha
add
and
mov
insl
dec
cmpsb
es
push
ret
lahf
cmc
xchg
lcall
pop
fidivs
sub
dec
aaa
ja
pop
adc
out
out
add
mov
push
fisubs
decl
or
out
and
jnp
leave
sub
xor
fmuls
aam
inc
addr16
sbb
mov
mov
icebp
into
mov
repz
mov
rcll
cmp
movsb
jo
and
fucom
adc
daa
lret
xchg
dec
mov
push
jmp
in
and
addr16
pushf
pop
enter
sub
fyl2xp1
and
punpcklwd
add
and
inc
xchg
cmp
aaa
xchg
mov
aam
stos
sub
adc
loop
add
jge
or
mov
mov
push
push
mov
out
or
test
fcomps
or
sbb
xchg
shrl
movsl
mov
sub
adc
cmpsl
inc
ror
inc
push
stos
insb
pushw
cmc
sarb
pop
movsl
cmpsl
ss
les
and
pop
mov
add
or
jle
mov
fsincos
std
jmp
outsl
test
sub
pop
jl
loope
cmpsl
cmp
iret
mov
mov
cmp
and
je
jp
imul
call
and
add
push
jbe
nop
jg
xor
add
mov
mov
inc
push
lock
dec
shrb
in
in
aaa
fisubrs
xchg
sbb
lock
cmp
clc
adc
jecxz
mov
mov
pop
pop
add
pop
mov
push
mov
xchg
cmp
aaa
mov
lds
data16
sbb
fmul
jle
push
nop
inc
and
push
lods
fwait
enter
in
inc
jb
add
inc
lret
test
addl
xor
bound
in
data16
push
or
shlb
bound
add
fsubs
pop
inc
add
or
xchg
mov
test
lret
daa
xchg
stos
cmpsl
xchg
sub
call
mov
das
inc
rclb
cmpsl
sbb
push
push
ret
shll
dec
pop
subb
les
cli
lcall
out
sub
hlt
outsl
inc
loope
out
subb
pop
cmp
movsb
xorb
data16
aam
fwait
test
cmp
sub
es
pop
pop
cmpl
out
incb
xchg
sbb
aas
lea
testb
inc
out
sar
aaa
adc
div
and
dec
nop
rorb
sbb
jo
jg
adc
push
leave
lahf
push
js
mov
fwait
pop
sbb
insl
mov
mov
jle
fs
xor
push
pop
in
inc
data16
mov
fwait
scas
mov
adc
flds
outsb
inc
jp
in
push
adc
jnp
int
ficoms
enter
cmp
mov
adc
fisttpl
inc
sahf
or
test
adcb
popf
fs
out
push
pop
ja
bound
stos
mov
or
cmp
mov
push
mov
cmp
jl
xchg
ss
test
fcoms
jle
and
and
js
or
loope
jnp
outsl
test
loop
sub
jb
adc
dec
lret
test
adc
pop
push
loope
mov
outsb
mov
stos
cmp
jnp
pop
sar
jno
in
mov
adc
es
jo
popf
dec
out
cs
mov
jge
xor
dec
insl
jne
pop
sbbb
jl
or
lcall
xchg
dec
push
mov
test
je
dec
lock
aaa
dec
les
jnp
popa
pop
addr16
inc
xor
cmp
jns
loopne
mov
push
cmpb
out
in
push
shlb
ds
sti
push
sub
sub
jb
mov
fstps
das
xor
fbstp
dec
pop
cs
popf
mov
jo
ja
push
cmpsl
push
cmp
cmpsl
test
incl
sbb
arpl
add
lods
loopne
push
jnp
outsl
and
and
sahf
int3
push
test
rcrl
add
outsl
cmp
icebp
mov
mov
inc
sub
push
sbb
fwait
cmp
sub
lcall
ds
imul
aaa
xchg
cltd
fnstenv
pop
push
test
ljmp
xchg
xor
xchg
xchg
inc
inc
mov
jmp
sbb
pop
lods
loope
stc
fidivrl
into
xchg
outsb
fisttpll
inc
es
das
ljmp
scas
insb
push
cwtl
lahf
std
je
cwtl
push
sbb
xor
in
jge
repnz
scas
mov
into
or
push
loopne
cli
lahf
pop
bound
mov
test
in
popf
mov
and
xchg
lock
mov
jo
jbe
orl
int
test
jp
insl
mov
lods
push
lock
adc
cwtl
aaa
xor
xor
inc
xlat
lds
ds
insl
adc
leave
leave
mov
and
pop
mov
add
push
sbb
xor
in
pop
mov
jl
test
lret
mov
loopne
mov
inc
lods
cli
shll
pop
out
stc
scas
popa
sbb
add
or
cltd
repz
cmpsb
mov
jg
lret
shlb
mov
xchg
pop
sbb
loope
lods
cmp
vmwrite
pop
fs
lret
popf
and
inc
cli
insl
mov
stos
add
jmp
inc
mov
or
cmc
mov
inc
jmp
and
lods
rol
push
jge
dec
push
pop
xchg
lods
sub
ja
mov
pop
jbe
mov
aad
sub
movsb
icebp
nop
mov
in
mov
imull
fstps
xchg
pop
or
cmp
pushf
clc
xchg
mov
testb
ret
popa
gs
xchg
mov
jae
mov
push
adc
insb
dec
mov
xchg
in
jnp
out
ss
and
jecxz
inc
sbb
aas
xlat
dec
ret
push
int3
push
inc
fdivs
add
sub
mov
mov
push
ss
sarl
push
dec
dec
cmpsb
sbb
add
mov
loop
mov
and
push
xchg
push
mov
pusha
mov
mov
mov
aas
stos
mov
pop
in
push
stos
inc
jno
mov
mov
push
xchg
inc
lcall
insl
mov
sub
fisubrs
cmpsb
sub
jmp
mov
sti
pop
cmpsb
clc
sub
lds
out
dec
test
lods
push
fldcw
out
xchg
push
fnstsw
pop
push
or
mull
and
push
hlt
test
std
into
jp
popf
je
test
cmp
add
push
xor
roll
jo
dec
cld
movsb
cli
gs
adc
stc
int
jp
cmc
negl
jmp
mov
mov
ja
lock
or
xchg
or
aam
fstps
xchg
pop
jbe
sub
fs
loop
sti
push
sub
in
mov
loopne
loop
mov
cli
push
jbe
pop
sub
mov
je
inc
mov
rclb
and
ja
adc
mov
int3
daa
in
js
xchg
pop
jnp
or
pop
lret
push
adc
gs
inc
sti
or
push
loopne
lods
push
ret
lea
push
cld
pop
mov
hlt
push
into
ja
mov
shrl
adc
cwtl
repnz
cmp
dec
rolb
jmp
out
cltd
cmp
outsl
jno
cmp
insb
popf
popa
out
push
decl
mov
mov
xchg
adc
test
scas
inc
imul
js
sub
les
inc
movsl
inc
repnz
fnstcw
addr16
adc
inc
outsb
pop
les
xchg
jmp
xchg
or
insl
ret
or
sub
ja
adc
loopne
dec
shlb
jp
leave
push
cmc
or
jge
les
ret
xor
adc
daa
or
push
fstpl
in
xorl
fildll
dec
inc
imul
sti
xor
cmp
pop
inc
in
pop
inc
sub
cld
addr16
mov
imul
cmp
sbb
test
or
xor
sbb
clc
dec
pop
jo,pt
sbb
neg
push
jns
dec
pop
dec
hlt
call
mov
fs
mov
jmp
cmp
out
mov
or
lea
sbb
lcall
xor
jl
xchg
loop
mov
or
push
dec
movsl
add
je
xor
fcoml
and
cmove
xchg
dec
pop
mov
mov
cmpsb
jmp
cli
adc
outsl
rolb
out
insl
sub
imul
cld
or
ss
jbe
inc
xchg
mov
cmp
mov
mov
push
fcompl
add
cmpsl
popa
bound
sub
push
lods
and
shrl
shrl
push
aaa
jne
sub
lods
sbb
out
inc
int
mov
outsb
mov
xchg
roll
xor
inc
cmp
or
out
xchg
les
es
pop
push
sti
or
push
pop
jno
iret
lret
nop
adc
sbb
inc
push
add
test
mov
push
shr
pop
movsl
mov
mov
sub
xchg
stos
adc
cmpsl
mov
cmp
dec
lret
and
je
mov
dec
aad
loop
aam
je
fbstp
outsl
popa
xchg
cltd
movsl
icebp
lods
mov
sub
pop
aam
loopne
bound
xor
add
insl
jbe
push
and
out
test
cmp
lock
add
sbb
aam
jp
mov
ljmp
and
popf
xchg
jl
in
xchg
cmp
xorb
pop
mov
lock
jp
cmp
add
mov
scas
or
scas
jbe
jmp
das
or
xlat
insl
dec
push
rcr
lret
cmp
xchg
fwait
lds
push
and
stos
leave
and
mov
mov
jo
ja
jle
cmpsb
pop
cmp
test
scas
rcrb
fidivl
popf
mov
movsb
pop
push
pushf
push
mov
lock
pop
aad
inc
ror
jge
pop
or
inc
jge
mov
pop
push
cmp
mov
stc
jbe
enter
clc
cmp
sub
add
movl
les
xlat
dec
loopne
sub
xor
inc
lea
pop
and
ret
cmc
xchg
jmp
xor
inc
outsl
lds
pop
rclb
xor
pop
aaa
or
addr16
aaa
xor
sub
in
dec
xor
push
adc
add
mov
xchg
movsl
mov
mov
xchg
popl
push
adc
ja
jns
cmp
xchg
imul
or
sarl
sarl
call
jge
xor
mov
add
sahf
add
popl
mov
cmpsl
fldln2
es
ljmp
mov
out
dec
xchg
fwait
dec
push
add
xchg
lcall
push
cmp
insb
pop
aam
scas
fidivrs
xor
in
loope
push
cmp
outsl
or
enter
lods
aad
sbb
jns
leave
inc
mov
inc
ljmp
inc
jmp
fdivrl
add
xorb
or
dec
iret
xor
clc
dec
cmp
lods
icebp
cmc
addr16
clc
aas
or
cmc
shlb
cmp
aad
mov
fwait
test
inc
xor
mov
popa
dec
enter
fwait
cmc
dec
sarb
hlt
cs
inc
dec
adc
movsb
mov
pop
push
xlat
push
jae
pop
cmp
cmp
rcr
jae
dec
fdivrl
pushf
les
push
lds
scas
add
mov
push
push
push
push
ljmp
iret
xchg
pop
ds
xchg
cmp
stos
leave
popa
pop
push
cmp
cld
dec
insl
inc
mov
xor
xchg
inc
jnp
ljmp
loope
xor
pop
inc
andl
xor
hlt
daa
cmpsl
clc
fidivs
xchg
sbb
out
add
fsubrl
lea
lahf
fs
insb
fwait
xchg
adc
cmp
mov
mov
aaa
cmc
sti
fs
pop
orl
mov
pop
shlb
sub
aaa
ret
test
pop
stos
into
cmp
cmp
fwait
in
loopne
inc
add
push
repnz
addr16
rcl
fstp
sub
fists
cmp
xor
inc
push
add
xchg
xchg
pop
mov
mov
jns
pop
outsb
mov
mov
ljmp
lret
gs
adc
ret
ret
pop
loop
hlt
pop
cld
cs
sbb
jnp
push
or
int3
jecxz
imul
push
adc
mulb
fcmovnb
or
mov
add
fs
pushl
lcall
pop
add
lods
int
adc
leave
dec
insl
sub
pusha
jo
mov
test
jp
loop
xchg
add
int3
in
xor
jb
sub
dec
lcall
leave
push
jecxz
ror
pop
sub
push
mov
stos
push
xchg
push
ret
or
inc
mov
add
cwtl
xchg
push
jnp
lods
mov
sub
sarb
mov
inc
clc
loop
xor
pop
inc
rol
enter
jno
loope
add
jp
das
or
cwtl
pop
push
sbb
and
data16
push
adc
scas
sbb
cmpsb
pop
insl
push
fisubs
cmc
or
or
cmp
arpl
shr
mov
adc
daa
jnp
xchg
mov
xorl
mov
daa
mov
push
popf
dec
scas
aas
jbe
pushf
dec
daa
jp
cmp
les
stos
xchg
dec
and
sub
cltd
stos
aam
mov
inc
dec
dec
push
movsb
sahf
adc
or
out
mov
push
mov
adc
cltd
iret
ljmp
pop
ljmp
scas
and
sti
call
pop
cmp
sbb
or
jb
xchg
cs
sub
inc
jne
dec
daa
iret
orb
mov
and
and
js
push
mov
scas
int
xlat
mov
lock
mov
add
test
inc
mov
adc
iret
filds
call
mov
jp
cmp
aam
test
xchg
add
inc
nop
adc
lcall
outsl
cmp
movsb
loopne
cmp
aas
or
test
dec
std
mov
inc
shrl
mov
and
jns
dec
ja
test
inc
out
cwtl
lds
sbb
roll
push
sbb
fwait
mov
and
sarb
add
xor
pop
lods
mov
xchg
out
hlt
addr16
mov
test
int
pop
pop
int3
rcrb
out
xchg
scas
cwtl
insl
mov
jno
mov
pop
ds
sub
pusha
stos
sbb
dec
jmp
cmp
test
fld
sarl
push
adc
sub
push
cmp
in
inc
loopne
pop
ds
pop
mov
shll
ss
lret
out
add
jl
adc
aam
pop
or
out
and
rcrl
stc
mov
dec
nop
mov
sahf
mov
push
jge
sub
repz
xchg
mov
ret
pop
enter
in
imul
neg
mov
popa
inc
cmpsl
or
pop
add
jnp
jns
je
scas
jnp
mov
int3
and
out
sti
stc
and
ret
lret
addr16
stos
sub
fidivrl
das
test
jl
adc
adcl
xchg
fldt
dec
rorb
pop
dec
jmp
or
inc
fildl
cld
xcrypt-cbc
cmpsl
xchg
fidivs
daa
cmp
cs
adc
repnz
or
dec
sahf
daa
outsb
fistpll
sbb
push
orl
fcomi
add
and
insb
xorb
pop
jns
adc
pop
je
jb
lret
cmp
fidivl
mov
add
xlat
xchg
aaa
das
movsl
loope
pop
cmpsb
and
in
push
lret
js
cmp
loopne
xchg
xchg
xor
divl
pusha
sbb
xchg
lahf
imul
loopne
xchg
test
mov
stos
xchg
repnz
inc
stos
push
pushf
cmp
dec
sbb
adc
jecxz
mov
push
lock
xor
lods
add
outsb
imul
and
xor
in
jle
xchg
leave
push
shrb
jo
data16
cmp
leave
push
mov
cmp
sbb
aaa
test
push
mov
int3
push
dec
lret
stos
subb
cmp
or
xchg
dec
mov
jae
lock
cs
repz
sahf
lret
inc
push
inc
cmpsb
add
push
jne
lret
fwait
jne
scas
inc
sub
ljmp
repnz
add
hlt
insl
lods
call
addb
pop
jns
lock
scas
sbb
cmpl
add
lahf
push
sub
mov
lea
inc
dec
in
pop
cmp
shrb
imul
mov
imul
shrb
mov
rep
add
sub
ss
cmp
ds
jb
xchg
adc
sbb
sbb
and
incl
repz
out
inc
cmp
lret
divl
xchg
in
jge
xchg
adc
push
setge
popl
jns
sub
mov
xchg
and
add
stc
test
inc
cmp
dec
pop
sahf
pop
arpl
cmc
push
loop
shll
push
ret
pop
addb
dec
mov
xor
sub
arpl
dec
lea
bound
push
inc
dec
xchg
sub
mov
popf
push
add
and
dec
mov
cmp
hlt
cmp
sbb
sub
iret
or
dec
jne
in
sahf
insl
inc
test
ret
pop
test
daa
shufps
call
mov
mov
mov
jo
jne
dec
add
inc
aaa
fwait
jmp
movsl
hlt
sbb
xchg
dec
stc
fsubs
loop
jmp
and
stos
cmp
sbb
mov
dec
or
enter
xchg
pop
aad
decb
pop
mov
mov
lret
test
movsl
sub
rcrl
aas
enter
mov
in
cmc
lahf
jmpw
and
mov
or
dec
inc
rorb
daa
repnz
mov
adc
pushf
mov
push
fimuls
mov
push
scas
popf
pop
push
leave
test
jns
mov
adc
in
movsl
or
test
xchg
mov
cli
insl
cmc
cmp
mov
popf
insb
test
cltd
fdivl
pop
sbbl
jnp
xor
mov
je
inc
out
movb
gs
test
ret
dec
fs
lret
stc
nop
inc
daa
imul
push
jae
ret
jb
sbb
pop
out
mov
adc
mov
pusha
shrb
push
pop
ja
loope
inc
sub
inc
movsb
mov
rorl
mov
push
pop
hlt
xchg
les
mov
cmp
cwtl
in
stos
xor
dec
dec
cmpsb
and
and
mov
ficompl
mov
push
pusha
add
mov
and
in
xchg
push
push
testb
mov
dec
outsb
setge
dec
mov
stos
cs
lea
fcoms
add
cmc
jb
out
das
test
push
sub
stos
test
rorb
jno
dec
mov
jb
fs
clc
pop
or
dec
popf
movsb
xchg
xchg
dec
call
rcrl
cmp
out
stc
jmp
es
jnp
imul
or
add
or
inc
adc
lods
aad
add
loope
pop
pop
int
xchg
sbb
in
mov
mov
imul
xor
cmp
push
push
xor
ret
add
out
test
cmpsb
inc
mov
je
cmp
push
jne
pop
std
mov
add
lock
cmp
pop
xchg
add
nop
repnz
cli
les
mov
rcr
add
stc
outsb
stc
pop
ret
icebp
mov
stos
xor
and
xchg
mov
bound
movsl
sbb
or
imul
call
dec
sub
mov
and
stc
lea
mov
clc
outsl
rolb
jge
ss
pop
popf
push
jmp
popa
fsub
xchg
dec
into
pop
xor
loope
jnp
sarl
decl
dec
add
mov
dec
xor
xor
xor
sub
and
std
lods
push
xchg
pop
push
test
sub
inc
mov
jo
insb
cmc
lcall
insl
rorb
mov
or
sub
arpl
cmp
cmp
or
xchg
and
mov
fistps
hlt
inc
dec
xchg
aad
push
cmpsl
cmp
js
popa
pop
lret
pusha
ficomps
push
mov
jbe
inc
inc
add
jg
xor
mov
popa
mul
cmpsl
xchg
outsb
xchg
insb
jb
leave
cmp
add
aaa
cltd
sub
sub
inc
pop
adc
lea
xchg
mov
mov
adc
rcrl
js
jne
imul
push
in
mov
push
stc
push
mov
sub
cmpsl
xchg
sbb
dec
cmp
push
dec
dec
jno
pop
mov
inc
lea
aam
loop
stos
cmpsb
xchg
jp
push
jne
popa
ja
test
inc
pop
aaa
add
cltd
or
imul
push
rcl
out
cs
sub
and
mov
pop
mov
clc
pop
jp
lret
mov
pop
imul
lds
in
lret
xor
cmp
loope
repnz
repz
pop
fwait
sub
mov
push
or
mov
mov
out
cmpsb
stc
mov
shrl
int3
out
pop
sbbb
xor
dec
pop
out
repnz
adc
xchg
or
add
icebp
mov
ja
fwait
cli
mov
jne
daa
enter
ljmp
test
push
sub
enter
jns
stos
cmpsb
mov
je
pop
jmp
cmp
dec
mov
cltd
call
adc
mov
mov
mov
mov
push
mov
adcb
cmpsl
inc
and
out
out
or
test
xchg
loope
or
xchg
cltd
popf
fsubs
cmp
jmp
ljmp
das
sbb
mov
pushf
dec
inc
jae
out
add
cwtl
sbb
fwait
pop
stc
and
ja
xchg
add
sub
popf
pop
and
mov
lea
dec
add
xchg
and
fstpt
xorb
jns
int
lea
cmp
add
les
sbb
inc
jne
mov
out
cmp
cmp
orl
sub
jb
jmp
andl
das
mov
insb
test
int
ja
lds
js
popa
sahf
pop
jg
out
and
cmp
sbb
mov
jns
xchg
xchg
stos
outsl
cmp
ret
and
or
out
adc
xor
fcomip
or
add
cmp
into
jo
ret
pusha
dec
jbe
lsl
lods
ljmp
cwtl
fwait
add
sbb
arpl
jl
mov
sbb
clc
adc
or
ja
cmp
mov
pop
call
repz
pushf
sub
arpl
fwait
rcl
dec
cmc
sub
jbe
pop
int3
ficoms
insb
dec
fists
mov
in
fnstenv
xcrypt-ctr
cmpsl
pushf
mov
cmp
cs
hlt
fwait
xchg
not
test
mov
int
into
sub
mov
movsl
lret
rorl
scas
pop
mov
push
int3
inc
sarl
loop
or
psraw
shll
dec
in
mov
inc
leave
shll
popf
mov
xchg
cmp
stos
outsb
or
push
cmpsl
cld
sub
movsl
add
pop
inc
pop
cmp
pop
daa
cs
cltd
mov
ret
inc
xchg
xor
mov
mov
call
cli
push
ljmp
out
lret
cli
jmp
out
outsb
xor
fcomi
shlb
mov
fcomp
or
push
dec
pop
loop
and
add
leave
push
mov
rcrl
mov
stos
jne
lcall
and
xchg
sbb
loope
adc
stos
popf
cld
xchg
test
imul
rcrb
fisttpl
inc
pop
sbb
gs
xor
pop
and
pop
mov
sti
into
into
addr16
xor
nop
pop
xor
xchg
lret
icebp
adc
sti
xchg
dec
in
inc
jno
sub
jbe
xor
cmp
mov
or
fwait
cmp
out
das
lds
loopne
xor
jmp
rcl
push
sbb
stc
xor
cltd
dec
rep
xchg
fdivr
mov
in
jl
aas
lea
sbb
shrb
les
dec
add
test
cmp
lods
outsl
sub
dec
inc
adc
jno
int
dec
and
pusha
cwtl
daa
mov
mov
dec
mov
mov
andl
cmp
push
nop
cld
sar
outsb
sbb
inc
jo
jle
mov
cltd
cmp
jp
orb
movsl
mov
call
mov
stos
xchg
fldt
aaa
incb
push
insb
test
mov
mov
pop
into
xchg
lds
push
pop
stos
pop
cmpsl
subl
push
cmp
mov
out
fs
or
dec
fistps
inc
xchg
push
movsb
add
jne,pn
fisttpl
push
int
push
iret
aad
mov
sub
in
sub
lcall
jmp
out
mov
popa
or
xor
andb
sbbl
insl
dec
push
xchg
clc
insl
jno
test
daa
and
jne
jmp
push
cmp
ja
xor
aas
std
jae
xchg
sbb
iret
pop
lods
mov
xor
and
jp
add
mov
sbb
mov
cltd
call
outsb
or
jno
into
sbb
cmp
pusha
subl
mov
xor
and
test
bound
cs
test
mov
mov
out
push
mov
jmp
enter
fists
and
and
flds
ja
push
jl
hlt
mov
cmp
cmp
sar
and
das
outsl
insl
icebp
fwait
cld
scas
adcl
sbb
jecxz
mov
dec
outsl
mov
lea
inc
mov
loop
inc
scas
in
addl
cmp
add
lret
leave
mov
jo
push
cmc
les
ret
fsubs
test
mov
test
inc
pusha
std
into
cmp
or
lods
in
sub
cmp
xchg
pop
filds
xchg
xlat
mov
movsb
push
outsb
push
mov
mov
sub
cmpsb
je
add
or
lods
mov
outsl
arpl
fsubrp
push
inc
fs
pop
insb
dec
jmp
and
out
hlt
xchg
or
adc
iret
dec
and
jge
cmc
cli
cmc
out
addr16
lret
push
movsl
xchg
or
movsl
out
push
in
repnz
mov
xor
sub
or
jp
test
sub
xor
pop
cmc
push
repnz
jmp
cmp
add
mov
repz
push
lcall
fsubs
cmp
les
lret
pop
cmp
in
xchg
fcompl
and
loop
add
inc
sbb
xor
or
or
inc
lret
or
mov
in
inc
popa
mov
call
xchg
push
nop
sbb
mov
scas
popa
pop
insb
sbb
fcoms
mov
fsubp
inc
mov
cmp
in
sbb
repz
sbb
xchg
addr16
outsl
jae
jg
mov
pop
push
or
push
std
jno
pop
in
shlb
mull
jne
sub
fwait
sti
inc
fstps
dec
sub
lds
xor
pop
cwtl
cmp
sub
dec
out
push
add
leave
add
or
dec
mov
fistl
sub
in
rorl
insl
xor
je
jnp
int3
je
xlat
and
negb
mov
dec
sbb
push
ss
cmc
test
repz
mov
mov
dec
cmpsb
aaa
jp
loopne
mov
push
jecxz
jmp
cmp
scas
xchg
mov
mov
or
cmpsl
mov
repnz
ljmp
rorb
sti
xchg
mov
movsb
outsb
lock
push
jecxz
xchg
pop
out
lret
jns
xchg
fwait
jns
push
inc
in
cltd
fiaddl
lods
les
fs
jns
adc
push
xor
pop
cmp
aam
push
xchg
adc
or
mov
nop
pop
sub
mov
xor
pusha
movsl
add
popf
mov
jl
and
jg
test
pop
leave
rclb
push
cld
jmp
pop
fdivl
andb
push
pop
test
movsl
cwtl
xlat
std
fisubrl
dec
ljmp
mov
sub
xor
outsb
sbb
cli
pop
fldenv
jb
ret
inc
sti
out
pushf
adc
sub
rcrb
xchg
dec
fstl
into
addb
lcall
cmp
sub
lock
mov
mov
mov
div
mov
xchg
pop
dec
aas
adc
int3
add
aas
inc
or
dec
push
test
enter
sbb
sub
ftst
push
lret
mov
ss
push
lock
rol
jecxz
movsl
insl
mov
dec
daa
and
sbb
shr
push
je
mov
pop
movsl
cli
inc
inc
insl
mov
inc
xchg
bound
stc
mov
insb
adc
rol
push
cmpsl
test
out
popf
and
leave
inc
lock
sbb
dec
mov
xorb
jne
sub
arpl
mov
inc
mov
aas
mov
adc
cmpsb
sbbb
stos
mov
in
sbb
outsb
aas
fsubrl
push
jne
sub
push
mov
pop
movb
and
cli
cld
nop
mov
mov
cmpsl
or
jl
insl
loopne
adc
add
fsubr
mov
rcrl
test
call
cmp
mov
push
popf
dec
push
mov
xchg
fwait
xlat
addb
lret
aad
inc
fcomp
les
xchg
mov
and
adc
and
les
adc
dec
and
out
aam
mov
repnz
mov
jg
jne
mov
and
rorl
and
pop
stos
inc
cmp
sahf
inc
xorb
insb
dec
inc
mov
xor
pop
repz
scas
dec
jne
xchg
ljmp
or
mov
mov
fnsave
inc
inc
pop
add
xchg
push
pop
mov
repnz
mov
sbb
sbb
and
in
dec
add
jb
rorl
pop
pop
add
call
cmpsl
jne
or
mov
dec
arpl
daa
ja
or
mov
mov
xor
test
clc
sarb
imul
push
faddl
dec
mov
test
cmpsl
scas
loop
call
adc
movsb
and
mov
push
jb
lret
push
inc
das
dec
inc
and
aas
adc
aas
sub
int3
add
adc
lods
shlb
dec
lcall
pop
rcrl
ljmp
jecxz
cmp
in
dec
aaa
cmc
mov
in
test
add
jp
pop
mov
pushf
cli
loopne
jmp
inc
fdivl
add
imul
sbb
and
shl
jmp
lods
lahf
and
pop
mov
mov
xor
dec
push
or
outsl
stc
mov
pop
sahf
and
test
scas
mov
xlat
cltd
ds
sub
pop
addr16
sbb
cli
and
je
cmp
xor
vsqrtsd
ss
test
jne
cmc
inc
gs
or
lea
scas
lret
and
adc
mov
aas
pop
sbb
ret
pop
push
jno
into
jge
pop
cmpsb
and
clc
and
and
adc
sarb
ss
cs
mov
inc
mov
pop
int
pushf
movsb
adc
cwtl
adcb
adc
add
sub
aas
mov
jnp
sti
push
xchg
ljmp
notb
and
and
sahf
js
loope
andb
in
mov
in
jnp
aam
nop
clc
xchg
sub
into
sbb
and
and
insl
fbld
insb
inc
mov
jbe
test
jo
sub
andl
out
outsb
mov
lods
aam
stos
in
xchg
repnz
mov
pusha
outsl
fildll
lds
fimuls
ror
jns
scas
aas
out
repz
xor
jb
stos
or
and
bswap
cmp
dec
jo
bndstx
adc
outsb
sbb
push
clc
cwtl
mov
push
cmp
cmpl
mov
divb
adc
sti
jo
push
pop
xor
add
ss
mov
jmp
xor
and
jmp
js
cwtl
out
aaa
rol
test
sub
xchg
mov
cmp
and
pop
or
cmpsb
jg
pushl
mov
cmp
outsb
mov
jno
arpl
mov
daa
xchg
cmp
dec
and
mov
rorl
mov
cmp
dec
sub
enter
je
popa
popa
idivb
push
cmpsb
add
jae
push
inc
xchg
sarl
sub
dec
mov
scas
jb
cld
mov
lahf
pusha
ja
ds
sub
jecxz
orb
je
add
std
shll
jle
mov
jecxz
push
xor
push
ret
push
test
xor
xchg
insb
popf
jge
pop
sub
xlat
sub
fnsave
movb
imul
leave
test
fmull
inc
or
or
je
ljmp
sub
cmp
fwait
sub
icebp
into
mov
shl
xchg
repz
pop
jge
jo
shlb
loopne
mov
push
mov
inc
push
loopne
aaa
jg
je
rorb
mov
shr
lock
lods
adc
mov
cltd
inc
je
add
cmpsb
mov
sbb
imul
repnz
in
pop
in
shrb
push
sbb
pop
in
pop
cwtl
out
ja
stos
sub
inc
rorl
xor
ljmp
jge
add
insl
sahf
outsl
or
push
fsubrl
insb
sahf
je
lock
inc
inc
insl
push
mov
cltd
push
xchg
and
dec
sbb
ds
and
jne
push
push
mov
arpl
in
cmp
sbb
mov
mov
fnstenv
cwtl
andl
pop
xchg
nop
inc
mov
adc
add
inc
add
or
mov
mov
push
test
xchg
mov
xchg
arpl
sbb
pop
sbbb
push
mov
mov
loope
inc
push
jae
test
lahf
sub
adc
ficoml
rclb
and
repz
cltd
mov
int3
or
insb
push
fnsave
jle
push
dec
jns
dec
fistpl
sbb
aad
adc
pop
sbb
mov
xor
in
adc
pop
sbb
sbb
lret
roll
imul
inc
lods
les
loope
xor
xchg
fdivrp
push
pop
stc
mov
and
rorl
cmp
jnp
dec
add
insb
ret
lds
sub
mov
in
sarl
add
jmp
dec
adc
and
xchg
push
jns
xor
cmpb
dec
push
xchg
pop
imul
stos
ja
jl
mov
xor
test
ss
popf
clc
stc
mov
outsl
jb
lods
mov
fnsave
mov
pop
jne
mov
inc
pop
jae
jge
repnz
pop
cmp
clc
or
ds
xor
jmp
clc
xchg
jle
add
jno
adc
add
xchg
jbe
cs
inc
imul
ret
pop
mov
dec
mov
cmp
push
xchg
daa
sar
aaa
push
xchg
ret
fwait
xchg
aaa
add
xor
ljmp
push
dec
outsl
jecxz
dec
cmp
sti
or
lods
push
das
jmp
loop
js
cmp
cli
push
or
sbb
xor
and
fisubl
mov
xor
imul
sbb
cmp
dec
add
pop
inc
inc
dec
xor
mov
sbb
inc
jg
mov
fstpl
jmp
insb
jo
loopne
out
cmpsl
aad
fldcw
cmp
int3
jle
pop
mov
jge
fcmovu
mov
pushf
sbb
dec
adc
mov
mov
addb
out
sub
nop
add
jp
mov
mov
mov
in
lock
sbb
stc
dec
lea
cmp
pushf
inc
cmp
aam
out
lods
iret
mov
jo
push
inc
rcll
test
mov
rcrl
xor
push
leave
pop
lods
loopne
adc
into
xchg
and
cmp
push
fildl
cmc
sub
and
and
stos
adc
add
cld
push
popf
ljmp
pusha
loopne
out
adc
pop
fdivl
jg
out
push
push
jecxz
mov
iret
adc
pushf
fwait
dec
push
aas
sahf
outsl
mulb
mov
pop
enter
add
arpl
mov
or
repz
outsb
cli
iret
jno
fs
insl
aam
jmp
subl
jbe
aam
cmp
and
pop
call
xor
dec
mov
cmp
leave
lcall
aas
repz
cwtl
push
in
fisttps
or
add
ret
adc
cmc
mov
xchg
aaa
and
cltd
popf
dec
test
and
stos
movsb
js
movsb
and
mov
adc
xchg
and
pop
or
subl
sub
sub
sub
mov
test
popa
push
xchg
cmc
push
add
inc
mov
add
es
ljmp
cli
out
xchg
or
xchg
adc
or
pop
cmp
aaa
insb
in
mov
out
clc
jno
or
jb
xor
xor
arpl
mov
xor
push
pop
shl
dec
into
mov
and
mov
sub
test
xlat
mov
fs
sbb
push
addr16
and
nop
xchg
in
mov
enter
pushf
xchg
adc
leave
cmp
jae
nop
sub
fisttpl
jb
loopne
enter
int3
aas
gs
and
addr16
add
mov
loope
mov
mov
or
jne
fisubrs
jecxz
rcrb
inc
jle
adc
pop
loope
and
xor
add
or
or
cmp
mov
mov
or
pop
and
adc
ret
xor
xchg
cmpsl
fs
std
sti
movsl
test
out
int
int3
imul
ds
std
sbb
adc
mov
xchg
jg
mov
or
xor
cs
dec
mov
lret
sub
lods
lea
or
cwtl
pop
mov
imul
jmp
push
les
loopne
mov
cmc
jmp
data16
mov
adc
cmp
sbb
mov
add
xchg
or
or
cmp
call
mov
fcomp
xchg
push
rcrb
sub
jmp
add
mov
jecxz
mov
push
and
push
fwait
cli
mov
mov
mov
xchg
xor
mov
test
negl
mov
std
xchg
pop
mov
shll
sbb
lcall
inc
xor
popf
dec
push
jle
push
aas
xchg
adc
mov
or
push
mov
cltd
dec
push
pop
sbb
mov
mov
das
xlat
cmpsb
test
inc
cs
sbb
daa
cmpl
cmp
push
xchg
sbb
xlat
fildll
mov
cmp
les
jno
mov
repnz
stos
imul
jbe
jbe
loopne
or
stc
mov
fs
loop
and
sub
test
or
dec
push
adcl
add
mov
rcrl
clc
sbb
out
fmull
lods
in
mov
std
mov
inc
lods
sahf
adc
fisttpl
cs
pushf
adc
push
fldenv
repz
dec
test
ds
mov
jne
sbb
out
lret
je
insb
lahf
jno
sbb
push
test
pop
shll
jno
aaa
xor
inc
jo
mov
scas
enter
xor
dec
mov
imul
shl
mov
inc
mov
scas
mov
stos
cwtl
in
imulb
outsb
add
rcr
xchg
push
es
jp
popf
lea
sub
dec
or
mov
and
jno
push
mov
pushf
lahf
jle
lret
fs
lahf
es
pop
xchg
and
xor
mov
sub
ja
addr16
aad
sbb
fisubl
sub
xlat
mov
mov
cmp
mov
push
adc
subb
psubq
pop
fucom
xor
mov
push
xor
jl
adc
or
xchg
ss
daa
nop
cli
ss
mov
repz
movsb
jbe
push
movsl
mov
ror
scas
lea
cmp
fisttpl
sub
jb
or
adc
jp
adcb
add
mov
inc
mov
cmp
or
adc
xor
lahf
xacquire
cmp
xchg
imul
adc
sub
pusha
inc
ljmp
push
ds
push
push
jns
mulb
sbb
test
int
roll
pushl
pop
sbb
scas
jmp
rclb
jecxz
add
push
cmpsl
lods
sbb
jp
lret
scas
xlat
jb
or
and
bound
pop
out
inc
mov
and
add
sbb
fisubl
fisubrl
repz
mov
test
in
loopne
pop
xchg
push
inc
mov
fistl
aad
dec
or
mov
fldl
xchg
pusha
std
xor
xchg
or
mov
sub
push
xchg
mov
dec
push
pop
and
jbe
shll
outsl
testl
pop
jge
fnstsw
rclb
sub
out
dec
out
push
cmc
xor
arpl
push
in
nop
push
and
bound
cmp
inc
test
mov
xchg
bound
js
sub
mov
repnz
xchg
cmp
adc
dec
xor
and
test
in
or
or
pushf
and
pop
loop
mov
jmp
btc
outsb
fstps
jbe
mov
xchg
add
or
cmp
lock
xchg
cmpl
xor
les
pop
mov
inc
jg
out
test
jmp
mov
dec
inc
dec
jle
xchg
xorb
in
sub
and
out
cmp
cwtl
movsl
fcoms
inc
cmp
mov
mov
rorl
dec
xor
hlt
repnz
jle
fdivs
jbe
andl
pop
inc
popf
addb
ss
dec
mov
pop
out
fisubl
xlat
fdiv
lods
or
mov
loopne
fstpl
or
xchg
nop
das
pop
jl
xor
inc
jmp
sub
out
bnd
stos
js
shrb
and
mov
dec
pop
in
inc
adc
adc
dec
fcmovb
mov
mov
imul
pop
rcrl
shrl
add
pop
dec
hlt
pop
in
jbe
in
test
fidivs
sub
fadd
cmp
add
hlt
or
dec
andb
cmp
and
sbb
jle
leave
aad
xor
or
mov
out
adc
movsl
stos
jne
add
in
jb
push
inc
xchg
or
push
inc
and
adc
mov
pop
add
mov
lret
jg
and
fadds
cmp
pop
popa
jbe
stos
sar
out
test
inc
sub
mov
orl
inc
mov
leave
test
dec
cmpsl
push
xor
dec
push
jmp
mov
xchg
dec
out
pop
inc
lock
adc
sbb
gs
cs
andb
adc
enter
js
rcll
mov
push
outsl
sub
mov
jmp
fcompl
jg
mov
jbe
sub
push
mov
pop
and
pushf
ss
outsb
shll
int3
repnz
sbb
lds
ja
cld
push
imul
sti
adc
outsl
fbld
ljmp
cld
addr16
jno
sti
jnp
pop
scas
add
pop
ja
outsb
sti
imul
pushl
enter
bound
cmp
jnp
mov
xor
adc
lcall
test
leave
xchg
cli
lea
arpl
jle
movsl
xor
call
clc
shl
cmpsl
xchg
push
je
and
pop
cmp
jge
lods
jbe
fstl
cmp
sub
popf
or
cmp
je
test
mov
aas
movsl
fldl
imul
insl
ror
xor
imul
pop
or
push
or
aaa
add
hlt
pop
jo
loopne
daa
or
mov
das
lock
mov
push
jmp
mov
inc
mov
jno
pop
stos
out
in
push
adc
int3
aas
mov
cli
mov
mov
xchg
mov
sub
xlat
test
mov
lea
sbbl
insb
repz
std
adc
imul
clc
jp
xor
xor
xor
jle
fbld
les
ret
les
ljmp
shrl
movsb
loopne
outsb
lret
arpl
xor
cmp
xor
int3
xchg
mov
add
xchg
xor
call
mov
mov
adc
jge
push
pop
adc
inc
insb
lock
cmp
jecxz
sub
jno
ds
pop
push
mov
movsl
xchg
test
adc
int
push
lret
les
int3
adc
jnp
inc
mov
orl
dec
addb
dec
int3
and
jne
inc
push
pushw
test
inc
pusha
sti
clc
jle
sbb
dec
js
mov
in
cmp
in
push
sub
or
das
popf
imul
pushf
add
dec
ja
inc
push
int
xchg
aas
pusha
int3
scas
mov
adc
pop
push
mov
out
or
rcr
leave
push
popa
lods
negb
add
jnp
fsts
lea
cmp
fisttpl
add
pop
inc
xchg
pop
pop
adc
sub
pusha
and
add
jb
dec
out
push
add
arpl
rolb
and
sub
cmp
dec
js
xlat
adc
mov
xor
pop
push
sub
sbb
jge
enter
pushf
push
jne
nop
jno
jb
push
sub
xor
xchg
jb
data16
rsm
xor
and
daa
in
andb
stc
xlat
outsb
lret
in
cmpsl
push
pop
leave
xor
scas
fcoms
rolb
add
xchg
lea
stos
push
push
push
mov
push
repnz
mov
adc
cwtl
xchg
xchg
cmp
push
pop
mov
fs
jns
mov
rolb
push
rol
inc
out
xchg
leave
cmp
mov
add
xchg
inc
insl
test
lods
jbe
movsb
adc
fimull
insl
iret
add
nop
imul
sbb
mov
push
dec
inc
mov
loop
dec
cs
int
push
clc
bound
lea
out
sbb
mov
pop
sub
test
hlt
fsts
or
fsqrt
jo
cmpsl
sarb
adc
addr16
aas
inc
sahf
loopne
dec
cli
sar
or
test
js
push
pushf
loopne
push
cmovb
xchg
cmp
pusha
cmp
push
ret
shll
insb
ret
add
popa
dec
sbb
dec
mov
outsl
xor
popa
jmp
ret
push
iret
lods
lock
pop
sbb
cmp
cwtl
and
mov
dec
push
lahf
sub
test
pop
cmp
iret
mov
lret
in
sbbl
mov
inc
xchg
jle
jl
stc
aam
jecxz
add
xchg
jl
add
or
add
out
cmpsb
notb
inc
imul
sbb
cmp
and
loop
hlt
pop
xor
jecxz
test
add
rol
add
or
sub
cmp
repz
incb
jecxz
sub
push
imul
inc
xchg
loopne
adc
mov
loop
push
shrb
sbb
jo
and
into
shrb
icebp
xchg
xchg
leave
int
xlat
cwtl
incb
mov
cmpl
mov
xor
add
ja
mov
insl
mov
or
xchg
bound
dec
dec
ffreep
cs
mov
ret
pop
add
nop
cltd
jno
mov
sbb
imul
push
jno
jo
and
sbb
call
daa
or
mov
imul
les
dec
jmp
adc
mov
add
mov
mov
ret
mov
ficompl
push
cmp
fildl
test
cmp
mov
hlt
push
and
add
inc
and
in
mov
adc
sbb
es
dec
leave
in
pop
loopne
adc
nop
inc
and
into
and
in
mov
or
xor
ret
imul
inc
out
mov
insb
push
dec
adc
rolb
loopne
xlat
ret
and
je
rcrl
mov
mov
daa
adc
mov
jo
mov
mull
inc
std
push
das
dec
sub
mov
out
and
arpl
aad
clc
fimull
sti
cmp
lret
je
mov
inc
push
insb
bound
dec
push
popf
mov
nop
aaa
lcall
xorl
daa
pmaxsw
or
shl
cld
or
stc
and
push
mov
inc
xchg
shlb
adc
out
adc
jmp
fnstcw
cvtps2pi
arpl
push
mov
cmp
hlt
pop
xor
sbb
sbb
mov
mov
out
jl
les
dec
mov
das
xor
aaa
push
roll
js
ja
adc
xchg
push
fsubrl
cmp
adc
cmp
testl
ds
loopne
sbb
and
sti
shl
vorpd
jne
and
rcl
outsl
add
addb
data16
hlt
shr
add
jmp
pop
xchg
pop
mov
mov
leave
fisubrs
loopne
out
aaa
pop
popf
movb
mov
mov
mov
ret
jle
mov
and
xor
lret
sub
int3
loop
xor
xchg
adc
cmpsb
lret
cmp
or
or
inc
aad
push
pop
fcompl
xor
xor
sbbb
cmp
incb
sub
clc
dec
jp
les
leave
fistpl
dec
test
pusha
lret
sub
sub
leave
inc
push
adc
push
add
jbe
dec
dec
testl
xor
and
jnp
lds
mov
or
rcr
push
mov
inc
jmp
cltd
mov
mov
inc
add
add
scas
testb
inc
add
punpcklbw
adc
mov
lock
sub
in
and
cld
stos
ret
stc
data16
push
pusha
pop
xchg
add
sbb
cmpsl
shrb
insb
sbb
dec
cmpsl
sti
scas
out
xchg
and
mov
addr16
stos
testb
xchg
inc
fs
and
xor
fidivl
push
dec
sti
lock
aad
jno
in
inc
push
mov
lods
mov
addr16
sub
nop
xor
pushf
push
adc
fs
mov
xchg
pop
add
cmpsl
xlat
inc
js
push
mov
es
xchg
push
jno
and
jb
add
xchg
inc
sahf
add
pusha
arpl
sbb
xchg
fldt
mulb
push
or
and
mov
mov
stos
into
ror
pop
fists
repnz
lret
ljmp
das
pop
pop
mov
ljmp
shr
dec
push
sub
sbb
lods
mov
icebp
cmpsb
push
mov
mov
cmp
jbe
push
mov
sub
xchg
pop
in
inc
push
dec
pop
int3
mov
sub
push
sbb
dec
jo
add
sahf
fwait
fisubs
das
xchg
mov
test
push
sbb
and
mov
jbe
cmp
inc
testl
ficompl
fistpll
pop
fcoml
mov
push
cwtl
mov
cld
xchg
mov
shr
mov
popf
inc
scas
nop
xchg
mov
xchg
mov
inc
pop
xlat
daa
insl
stos
addl
dec
in
movsl
pop
loop
filds
mov
cmp
add
push
hlt
ds
inc
mov
and
lret
lock
ret
xor
test
jo
pop
aaa
aas
cmp
or
es
fsts
cmc
jae
test
or
dec
mov
in
jecxz
cmpsl
ret
xchg
pop
arpl
push
fst
jnp
cmp
lods
nop
clc
lods
lods
fs
xchg
fisubrs
ds
ja
test
xor
add
add
test
iret
jno
addl
nop
decl
flds
jmp
adc
push
add
ficoms
arpl
push
inc
mov
mov
hlt
adc
jae
sub
inc
insl
and
sahf
xchg
cmp
clc
cld
leave
mov
lahf
and
inc
or
jnp
and
int
mov
mov
test
shll
push
out
jae
pop
in
stc
jmp
mov
mov
mov
mov
xor
outsl
xchg
push
mov
cmp
imul
add
cltd
adc
mov
mov
cmc
add
subl
sbb
dec
mov
jge
test
add
xchg
lret
mov
adc
inc
cmp
mov
loopne
mov
arpl
fsts
mov
std
jl
lret
push
xor
mov
adc
jbe
and
arpl
xchg
int
push
mov
inc
jne
out
fs
pop
adc
repnz
sbb
rcll
and
mov
mov
jb
mov
rorb
in
aad
icebp
enter
in
xor
jnp
ss
scas
adc
es
hlt
mov
dec
mov
xor
fsubl
lods
aas
and
push
dec
divl
lahf
push
out
mov
popf
mov
popa
lods
adc
and
mov
les
or
sub
xchg
outsb
je
pop
add
or
jp
daa
jp
nop
gs
and
jmp
out
and
fiadds
divl
cli
jo
loopne
sti
hlt
pop
imul
pushf
push
mov
dec
out
pop
imul
cs
dec
dec
fsubrl
sti
movsl
push
dec
sbbb
push
cmp
cmpb
add
mov
shrb
mov
cmpsl
jp
pop
movl
and
repz
movsb
push
push
js
scas
pop
add
inc
lods
addr16
sub
daa
jns
movsl
mov
arpl
push
repz
mov
test
enter
cmc
cld
pop
ret
sbb
popa
sbb
ret
daa
xlat
pop
clc
sub
sub
jge
cmc
lods
mov
mov
aam
jo
mov
mov
out
pop
cmpsl
aam
inc
pop
cmpsl
mov
xor
cmp
enter
sbb
std
aas
dec
or
aas
pop
pushf
addl
push
inc
cli
push
pop
and
sbb
pop
push
shlb
jae
sub
jge
fsubrl
xlat
fcmovb
loop
test
push
add
mov
adc
cmp
es
fimull
hlt
pop
das
push
movsb
test
add
adc
jp
add
das
ds
jno
pop
loop
int
pusha
and
jne
xchg
cmpl
xchg
xor
jne
jne
mov
sub
dec
cmpsb
cmp
adc
fistpll
add
or
cmp
dec
mov
push
sbb
push
xorb
mov
ss
inc
out
and
push
lret
jp
stos
xchg
pop
mov
dec
movsl
mov
add
push
lcall
sahf
pop
sbb
pop
call
or
das
sub
outsl
cmp
dec
add
pop
shl
xor
in
popf
inc
mov
push
adc
rolb
into
fiaddl
mov
into
js
mov
fistpl
in
cmp
dec
or
inc
std
or
stos
das
mov
and
mov
adc
das
and
and
out
push
int
notl
imul
mov
stos
std
movsb
jnp
popf
movsl
js
test
fimull
cwtl
pop
popa
dec
push
scas
xchg
jl
imul
push
sahf
sbb
out
and
clc
or
jle
jbe
push
sarb
add
jp
out
lahf
dec
icebp
and
push
fucomi
or
jmp
repz
and
cmp
jno
push
iret
or
shlb
ja
roll
dec
scas
pop
mov
in
decb
jnp
adc
sub
inc
dec
and
aas
test
and
in
in
fs
mov
repnz
add
idivl
jns
xchg
push
and
jno
lret
fsubr
aaa
inc
fnsave
dec
dec
push
and
icebp
xor
arpl
fsts
inc
movsb
jnp
sbb
ret
negl
aam
sahf
sbb
in
jmp
add
xchg
fimull
mov
or
mov
lock
push
mov
flds
dec
push
mov
push
out
mov
popl
int3
push
test
cmp
movsb
jne
fsts
in
xor
repnz
adc
cli
sub
std
test
jle
adc
mov
push
mov
into
pop
insl
jecxz
aas
add
add
lret
cmp
jns
xchg
decb
popa
cmp
jbe
mov
add
jae
fdivs
adc
jmp
enter
aaa
in
xchg
mov
inc
pop
bound
sub
shll
mov
add
push
imul
inc
lea
cmp
push
hlt
sti
push
ss
jl
ja
rcr
cmp
adc
lret
rcrb
sbb
jbe
pusha
and
adc
pop
sub
and
sbb
jl
or
pop
dec
or
jno
sbb
mov
cwtl
adc
add
adc
insl
sbb
mov
pop
imul
pushl
or
inc
cmp
add
mov
in
mov
xlat
stos
test
loop
xor
mov
leave
jae
popf
adc
fldl
pop
imul
sbb
and
sub
popf
jmp
push
add
bound
or
cmp
mov
bnd
mov
push
pop
cltd
in
pusha
lea
imul
mov
mov
ja
testb
rorb
les
mov
imull
or
push
push
stos
jg
pop
push
adc
push
inc
xor
mov
xor
pop
add
add
arpl
ja
stc
stos
xor
pop
aad
mov
nopl
test
lds
mov
iret
xor
movb
andb
jge
mov
ja
adc
adc
xlat
cltd
add
and
mov
and
inc
dec
mov
sbb
pop
outsl
rcll
lcall
lea
ja
xchg
imul
pop
and
cmp
or
mov
pop
cmc
cmc
pop
inc
testb
xchg
rolb
sbb
xor
outsb
adc
aaa
ds
lds
mov
stc
loopne
stc
cmp
mov
cmp
sbb
out
sahf
out
dec
leave
inc
xchg
xchg
out
mov
xchg
lcall
sub
int
jns
das
sahf
mov
dec
push
adcl
dec
cmpsl
pushf
push
pop
aaa
cmpsb
iret
and
sbb
test
pop
push
sub
sub
addr16
mov
xchg
xchg
popf
sbb
lds
jl
cmpsb
xor
lcall
add
xor
mov
rcr
ss
mull
enter
or
xor
xorl
rorl
mov
movsb
push
dec
mov
dec
mov
iret
cmpsb
xor
inc
sub
pop
sbb
int
jg
in
jg
xlat
sbbl
and
and
or
adc
rcr
cmp
xlat
mov
xchg
cs
lods
ret
outsb
adc
lods
mov
inc
mov
lods
xor
xor
dec
sub
mov
jecxz
dec
mov
repz
xlat
lahf
push
mov
les
mov
pop
push
inc
fisttps
fistl
movsb
imul
push
aaa
iret
mov
addr16
mov
add
mov
mov
fdivrp
cmc
xchg
sbb
in
push
xchg
push
cwtl
iret
jecxz
arpl
roll
or
push
fdivrs
pushf
lock
inc
xchg
or
sti
cmp
and
int3
das
pop
push
inc
clc
maxps
cmpsl
jno
sbb
jnp
out
pop
fs
movd
pop
cmp
out
and
out
adc
adc
add
repz
add
ret
mov
add
mov
pop
or
cmc
adc
loope
iret
in
out
lret
ss
cmp
dec
cmp
mov
inc
inc
xchg
mov
mov
mov
call
call
sbb
pop
and
pop
inc
inc
dec
testb
fstl
adc
je
xchg
xchg
cmp
inc
cmp
mov
push
dec
mov
mov
ss
xlat
dec
test
movsl
lea
outsl
test
pop
sub
out
sbb
mov
mov
and
repnz
ret
popa
stos
jle
pop
call
cmpsb
in
xchg
lods
ret
dec
test
dec
cli
and
imul
push
out
stos
adc
jge
cmp
dec
inc
push
xor
mov
adc
xchg
sbb
aad
mulb
ficomps
cmp
add
test
mov
mov
rorb
das
cmp
push
gs
and
jnp
pop
dec
fwait
and
test
jecxz
aad
fsubrs
out
inc
push
nop
mov
jne
test
dec
jns
shlb
xchg
arpl
xchg
arpl
pop
movsl
and
jp
addr16
enter
repz
test
adc
test
dec
mov
inc
mov
bound
movsl
out
mov
and
xchg
leave
inc
fcomps
xor
in
data16
imul
std
lea
cmc
xor
imul
mov
icebp
sbb
sub
adc
rcrl
pusha
mov
sbb
push
repz
int3
clc
sub
pop
xchg
xor
adc
inc
mov
xor
pop
and
dec
inc
inc
fistpll
cli
dec
adc
in
lahf
dec
roll
sub
xchg
aam
xchg
pop
jmp
shr
iret
daa
or
mov
dec
repz
or
inc
out
xor
add
push
pop
cwtl
mov
sub
mov
rorl
stc
and
jno
int
enter
jns
arpl
movsb
mov
popf
mov
xchg
and
and
insb
lcall
int3
lcall
mov
xchg
rclb
in
in
sub
daa
ds
dec
add
pop
out
jb
jb
das
in
cs
jb
inc
adc
mov
xor
mov
push
mov
scas
mov
or
in
push
shl
scas
cmp
push
inc
xchg
scas
or
in
mov
xchg
jno
or
lock
push
scas
out
xchg
pop
jns
je
xor
jge
xchg
fsubl
jo
test
jmp
xor
sub
mov
dec
cmp
push
mov
dec
data16
and
call
or
mov
fwait
das
pop
inc
or
ss
mov
cltd
into
adcb
and
mov
push
movsb
dec
test
push
bound
inc
aas
jno
pop
in
insb
arpl
aas
out
lcall
pop
popa
cs
jge
das
xor
testl
pop
lcall
dec
cmpsl
sbbb
inc
rclb
mov
fdiv
out
sub
sub
pushf
popa
and
enter
bt
xor
add
jno
push
mov
rol
xchg
fiadds
or
mov
ljmp
add
cmpsb
js
or
repnz
mov
pop
sub
adc
mov
push
xor
dec
mov
mov
ret
leave
aaa
jecxz
bound
xorb
aaa
arpl
lods
stc
clc
mov
sub
es
cmp
lock
pushf
int
or
push
out
push
nop
int3
mov
or
subl
add
lret
mov
out
push
notl
sub
mov
adc
jge
std
dec
out
je
adc
jbe
or
xchg
rclb
jp
repnz
ret
stos
push
mov
aaa
je
imul
jg
aad
negl
push
sub
popa
inc
rol
lods
mov
cmc
repnz
nop
cmp
popa
or
and
adc
push
push
out
sahf
xchg
lcall
and
repnz
fs
cmp
inc
and
mov
pop
cmp
js
pop
lahf
add
punpckhwd
fsubrl
adc
loop
pop
pop
jns
jge
rorl
xchg
dec
jecxz
mov
test
cli
in
dec
pop
out
xorb
pop
sbb
sub
jle
mov
inc
sbb
insb
inc
jne
adc
cwtl
jge
decl
cld
dec
pushf
insb
mov
scas
xchg
pop
mov
lea
cmp
popf
insb
rcl
fisttpll
or
ret
movsb
in
mov
mov
push
std
lds
lea
in
ret
inc
in
aas
loop
mov
loop
es
leave
xchg
add
ljmp
jge
insl
push
pop
cltd
mov
xchg
outsl
aad
popa
negb
nop
test
cmp
lcall
adc
stos
push
inc
bound
imul
lea
inc
mov
sub
sbb
sti
repnz
lock
sub
dec
insb
mov
and
int
mov
pop
sub
dec
or
aaa
mov
out
fdivr
mov
lret
lea
mov
sbb
jno
pop
addl
pop
vminps
push
xchg
dec
cmp
mov
cs
sbb
push
xchg
or
hlt
lods
xchg
adc
dec
insl
push
and
xchg
fcoml
pop
jmp
mov
adc
pop
repz
test
push
mov
cmc
loop
movsb
insl
insl
mov
dec
pop
and
sbb
jge
mov
insl
outsb
add
mov
and
adc
dec
xchg
xchg
cmpsb
stos
xchg
push
add
lods
cmp
popf
jmp
test
frstor
mov
icebp
adcb
clc
lods
pop
std
pusha
adc
pop
dec
inc
imul
sub
fisttpl
xor
xor
fs
jae
cmp
std
mov
idivb
loope
test
arpl
cld
sbb
aad
adc
adc
mov
fndisi(8087
dec
push
nop
in
push
fisubrl
xchg
add
cmp
out
adc
inc
bound
sar
lods
sbb
adc
in
mov
or
xchg
xor
imulb
mov
mov
xchg
fistpl
adc
mov
cmp
arpl
pop
jno
jge
or
push
jnp
rolb
fcoml
pop
mov
sub
and
add
pop
jmp
stc
jecxz
mov
add
jno
lret
inc
fdivrl
aaa
in
int3
imul
mov
push
sbb
sbb
sbb
jae
mov
jp
xchg
inc
bound
clc
sub
sub
aam
cli
mov
xor
xchg
xlat
call
fldcw
add
pop
adc
push
addl
outsl
jge
jmp
imul
push
es
stc
xchg
push
sub
or
sbb
mov
dec
fsubrl
insb
data16
shll
insb
and
loopne
mov
or
or
adc
sahf
cmp
test
jae
pop
inc
fsubs
sti
jl
adc
jnp
add
add
lods
bound
out
dec
add
push
scas
mov
or
in
adc
adc
inc
cmp
cli
cmc
imul
xchg
mov
imul
cld
add
push
dec
idiv
dec
in
aas
dec
or
rcrl
maxpd
fdivl
cltd
mov
xchg
repz
pop
inc
ss
sarb
push
int
push
iret
fdivrs
inc
xchg
lods
ds
adc
ret
lea
inc
test
xchg
pop
sahf
or
inc
out
xor
fdivrp
es
nop
inc
cmc
pop
inc
and
adc
ss
movsb
scas
stc
cwtl
adc
loop
out
xor
aas
jle
sbb
sub
stos
jo
jmp
js
int
dec
or
pop
das
clc
mov
dec
test
int
xchg
lret
dec
shll
xor
or
jb
test
mov
jle
add
test
sti
gs
dec
lret
lods
adc
pop
fldt
lock
std
xchg
lret
loopne
outsb
or
cmp
xor
aas
xchg
mov
and
pslld
pop
aad
jp
in
aad
lahf
and
pop
mov
dec
pop
push
xor
lock
ret
hlt
push
sbb
mov
movsl
add
fnsave
pusha
ret
bswap
xchg
adc
or
ds
pushf
pushf
mov
and
popf
repz
pop
pop
mov
push
push
mov
push
dec
testl
or
aas
pop
aas
xchg
hlt
jp
pop
xchg
mov
xor
push
mov
rcll
nop
jmp
push
cmp
dec
imul
cmp
outsl
cmp
rcrb
inc
sbb
ljmp
sbb
xchg
dec
cwtl
loop
sahf
xlat
jecxz
adc
mov
cltd
sub
int
lea
ret
popa
mov
cmc
sub
outsl
jno
dec
jmp
mov
mov
xchg
mov
cltd
jmp
and
inc
jnp
xor
ficoms
aas
sub
in
out
aas
fildll
jae
in
mov
lret
addr16
cmp
push
jb
in
cmpsl
cltd
js
add
dec
push
mov
fwait
or
mov
and
pop
cmp
lcall
popf
call
mov
cmpb
jb
ja
mov
lret
mov
xchg
jae
sbb
js
aam
cmc
add
repnz
cmp
dec
jge
push
pop
aaa
scas
fwait
sbb
enter
clc
mov
cmp
pop
daa
adc
lods
xchg
cld
mov
adc
pusha
ja
dec
mov
enter
stos
test
add
jnp
cmpsb
or
sub
mov
add
pop
push
in
insl
dec
sub
movsl
cmp
mov
vmulsd
sbb
inc
xor
pop
mov
gs
pop
dec
dec
xor
add
loope
aas
cld
xor
sbb
std
push
xor
negb
insb
cmp
xor
sbb
cmp
scas
out
neg
sbb
lahf
mov
hlt
sub
leave
nop
lods
mov
js
mov
pop
mov
mov
leave
push
out
cltd
mov
cmc
push
das
jp
cmp
dec
loopne
sub
cld
adc
sbb
stos
repnz
setge
mov
xor
xor
pop
xchg
icebp
add
sub
inc
mov
arpl
push
addr16
mov
aaa
sub
or
adcl
mov
sub
or
outsl
pop
push
sarb
out
icebp
lahf
xor
js
sub
add
or
mov
stc
jns
imull
ljmp
or
or
or
jnp
cmp
pushf
cli
adc
std
cmc
daa
rep
leave
movsl
sub
frstor
enter
cmpsl
sbb
xchg
out
push
jb
or
jne
add
pop
cmp
inc
call
scas
lahf
pop
loope
outsl
stos
scas
mov
aam
fidivrl
jge
andl
sub
xchg
and
mov
loopne
push
cmpsb
inc
push
jmp
mov
push
repnz
cld
sbb
sub
jecxz
or
lret
arpl
add
daa
sub
sub
rorl
repz
jae
adc
adc
pop
imul
scas
pop
adc
adc
std
movsb
or
mov
mov
mov
jl
cltd
adc
sbb
inc
or
fistps
aad
fisubrs
push
cmp
push
test
aad
addr16
sub
add
das
or
fs
and
ficoml
mov
fcmovbe
jl
popf
imul
popa
push
inc
jo
not
or
add
fst
pop
stos
es
fsub
data16
call
popa
and
jmp
cwtl
fisubrs
mov
mov
dec
loope
mov
aam
aaa
mov
lods
scas
stos
add
mov
pop
cli
sub
xchg
cmpsb
aaa
ja
stos
imul
out
lret
dec
and
fcmovnb
jmp
ret
jnp
in
xor
mov
nop
aaa
mov
sub
enter
pushf
and
imul
dec
and
push
enter
cmp
jnp
les
and
xchg
mov
sub
insl
out
xchg
cli
pusha
mov
or
mov
cvtdq2ps
or
adc
or
inc
push
ja
sbb
and
js
push
cltd
jp
cmpsb
gs
outsl
xchg
fstpl
sub
mov
or
ljmp
icebp
sbb
test
push
inc
shrb
je
or
test
jg
mov
test
fildl
sahf
xchg
jno
sub
mov
outsl
mov
sub
pop
js
imul
mov
mov
jl
sbb
inc
aam
xchg
out
add
push
cmp
push
movsl
es
jno
xor
lret
push
or
imul
inc
mov
in
push
adc
mov
adc
jno
push
mov
push
mov
lcall
lods
ss
out
popa
xchg
loope
in
enter
jns
push
jnp
xchg
add
and
xlat
lds
loopne
mov
lret
gs
jb
fiaddl
loop
push
push
movsl
pop
aas
aam
repnz
xor
ret
pop
xor
push
mov
aad
mov
arpl
sbb
sbb
cmp
mov
cli
push
mov
lahf
ljmp
int3
loop
add
cs
ljmp
les
and
enter
adc
inc
ret
push
pop
movsb
mov
mov
andl
lret
aam
and
imul
test
fdivrl
pushf
mov
test
dec
jo
out
mov
adc
sbb
and
repnz
test
leave
int
pop
push
mov
sbb
add
clc
aam
icebp
mov
mov
and
xchg
xchg
loop
dec
push
bswap
inc
mov
or
or
sarb
inc
push
sub
cwtl
loope
aaa
sbb
iret
xchg
mov
mov
icebp
pop
dec
jae
icebp
sbb
shrl
sbb
loop
or
pop
pop
mul
add
push
in
xor
lds
iret
lahf
test
mov
jnp
dec
lcall
pusha
rcrl
out
mov
mov
lods
out
cmp
idivb
pop
mov
shll
mov
adc
xchg
lcall
add
xchg
mov
loope
sub
sub
sub
xchg
pop
mov
and
notl
arpl
lret
arpl
and
pop
xor
add
mov
mov
add
sub
jb
inc
out
lahf
mov
in
pop
or
and
cmc
ljmp
loopne
scas
push
arpl
shrl
rcll
dec
dec
add
repz
jo
dec
inc
decl
add
movsb
out
je
cwtl
in
lds
xor
mov
cmpsb
data16
and
pop
movsb
sub
addr16
sbb
dec
daa
jo
shll
pushf
ja
mov
mov
xor
cmp
sub
shrb
mov
insl
das
sarb
fcoms
jne
lahf
cmc
xor
pop
outsb
jg
push
push
push
inc
bound
fsts
mov
fs
ja
repz
push
push
mov
xorl
stos
mov
add
and
dec
push
in
add
dec
lcall
fmul
pop
aaa
xor
xchg
dec
scas
jo
sub
scas
push
xchg
inc
adc
push
std
adc
ds
fmul
mov
ss
mov
fwait
inc
outsl
push
popa
sbb
stos
cmp
ja
stos
outsb
out
push
cltd
mov
pop
cmpsb
adc
loope
and
lods
pop
test
push
inc
addr16
xor
test
jne
sbb
faddl
scas
xchg
lods
push
lcall
clc
xchg
fwait
pop
adc
push
add
lret
addr16
xor
mov
xchg
icebp
pop
and
in
pop
imulb
rcrl
pop
lods
xor
push
dec
arpl
xchg
dec
out
aas
pop
adc
addb
fildl
mov
shr
sub
cmc
paddd
dec
pop
ficoml
mov
dec
jmp
dec
icebp
pop
stos
loope
add
mov
outsb
and
cmc
add
add
mov
shlb
je
enter
pxor
shlb
mov
push
enter
sub
mov
inc
insb
or
into
pushf
in
mov
popa
in
sbb
hlt
mov
ror
mov
daa
int
and
pop
mov
sbb
ljmp
add
pop
rol
popf
addr16
xor
inc
mul
imul
mov
cs
xchg
fidivrs
leave
jnp
push
inc
adc
inc
mov
lock
js
mov
les
xchg
clc
int3
das
ss
xchg
mov
inc
mov
and
add
jne
je
jg
stos
sbb
jle
sub
aas
mov
mov
mov
loopne
xchg
ljmp
frstor
scas
xchg
pop
pop
jnp
icebp
sub
push
xchg
push
xchg
outsl
das
outsl
cmp
and
xor
dec
orl
ss
pop
mov
cmp
cmp
js
scas
jns
repz
sub
shll
pop
cmp
cltd
lret
jmp
pop
enter
xchg
stc
cmp
scas
inc
outsl
cli
fwait
addb
jg
fwait
sub
or
jb
neg
dec
add
lret
outsb
daa
pop
fidivrs
mov
inc
xor
in
pop
xchg
cmp
mov
daa
adc
js
or
icebp
ffreep
jp
lds
stc
pop
les
adc
mov
xor
bound
lea
mull
xchg
xadd
stc
sub
inc
xlat
fimuls
mov
jp
loope
and
insb
mov
sub
xor
mov
mov
sub
sbbb
xchg
sbb
insb
insl
mov
jno
fs
pushf
mov
jae
aaa
xor
lret
pop
shlb
jae
mov
mov
out
pop
pop
mov
mov
shr
dec
arpl
lea
jne
cmp
and
adc
movsb
mov
push
jge
cmp
mov
push
dec
push
imul
aad
dec
inc
arpl
jb
adc
in
or
rolb
rcrb
popf
inc
jmp
shll
xor
aad
mov
jg
jns
mov
ret
ret
scas
lret
repz
ljmp
ljmp
inc
or
enter
mov
lock
mov
mov
in
mov
loope
xor
sbb
or
cmp
jp
xlat
mov
and
mov
jbe
bound
aam
fistpll
jp
cmpb
mov
sbb
or
sub
mov
cmp
nop
push
pop
std
insl
popf
dec
lcall
ljmp
fstpl
xchg
xor
jl
rcr
call
or
in
jl
fcom
shll
lret
movsb
or
pop
pop
push
dec
mov
in
movsl
mov
mov
fidivl
mov
into
xchg
add
jae
gs
loopne
mov
adc
jo
pop
inc
adc
add
add
jo
sub
js
test
jbe
flds
out
dec
adc
lods
bnd
cli
push
test
jp
inc
mov
xlat
cmc
sbb
mov
mov
xlat
imul
dec
out
sbb
mov
andb
mov
inc
pop
inc
xchg
fnsave
leave
insb
lods
stos
mov
pop
mov
xor
mov
int3
mov
insb
pop
hlt
popa
dec
push
fisttps
pop
xchg
int3
push
jp
clc
mulps
push
ficoms
adc
movsb
cmpsl
insl
aam
add
jo
loope
jp
and
mov
scas
pusha
dec
cmp
pop
addr16
push
dec
jmp
jg
lock
push
xor
stos
ds
leave
aam
adc
int
adc
jmp
es
lret
adc
mov
pop
ljmp
jle
cwtl
popf
adcb
dec
sbb
fxch
xor
or
add
repz
cmpsb
and
pusha
sbb
mov
dec
adc
popf
pop
sub
adc
push
insl
std
xchg
pop
inc
push
mov
daa
xor
xchg
dec
addr16
inc
popa
cmp
xchg
daa
insb
cmpl
push
mov
js
ljmp
mov
pop
push
inc
sub
mov
ljmp
js
jecxz
pop
loop
inc
and
and
out
pop
iret
push
loop
xchg
mov
inc
test
lock
cld
xchg
add
cmpsl
pop
into
ss
scas
jg
pop
fmuls
iret
fiaddl
cwtl
cmp
add
push
dec
fnsave
dec
add
fsubrl
adc
jns
cmpsb
out
mov
push
fdivl
cli
mov
or
pop
add
xchg
outsb
mov
pop
int3
jb
inc
sub
jmp
inc
or
movsl
sub
ss
push
or
add
inc
and
outsb
scas
pop
inc
notb
clc
jl
rcl
pop
jne
lds
sub
push
push
add
cmp
test
and
subb
hlt
icebp
mov
or
lahf
into
outsl
je
lret
inc
xlat
je
addr16
mov
adc
lret
shrd
ds
daa
int
push
mov
dec
pop
ljmp
sub
sbb
std
cmpsb
xor
mov
test
stc
cmp
fimull
sbb
mov
or
ds
push
arpl
sbb
in
jmp
inc
push
pop
push
outsl
fsubrl
into
dec
stc
cld
inc
cli
ret
imul
sbb
hlt
addb
in
fwait
imul
push
imul
int3
jmp
dec
in
xor
mov
rorl
or
mov
mov
xorl
mov
loopne
jecxz
jmp
jo
jo
or
rcrl
sbb
aad
hlt
nop
test
cmp
dec
jge
pusha
cmove
imul
addr16
and
push
mov
leave
push
pop
rcl
fs
add
add
inc
pop
lahf
jne
mov
dec
daa
enter
add
fisubrs
lret
std
dec
jecxz
idivl
xor
mov
cltd
ret
pop
xchg
roll
insb
xchg
fisubrs
adcb
push
jge
push
orl
iret
jo
pop
cmc
bnd
sbb
aaa
mov
insb
sarl
or
mov
je
repz
and
add
xchg
xchg
xor
inc
cmp
fcomip
mov
into
mov
xchg
mov
imul
andl
call
inc
push
aas
jns
mov
aam
push
adc
xchg
mov
or
sub
sbb
call
addb
and
ret
dec
push
pop
das
xchg
rcll
cwtl
inc
jbe
jecxz
addr16
mov
push
mov
out
sub
lock
cmp
xchg
cmpsb
cmp
ret
jo
mov
dec
ret
pop
jno
ror
xchg
shll
mov
dec
pop
jnp
add
jo
or
cld
xor
aam
cmp
sub
push
inc
lret
add
nopl
in
adc
mov
rcl
insl
incb
sbb
mov
or
stc
lock
stos
scas
cltd
pop
scas
cmp
or
ja
loopne
in
clc
xchg
add
xlat
jl
xchg
lahf
orl
sahf
sub
jmp
aad
enter
lds
int3
hlt
sarl
sbb
fldl
xchg
ss
addr16
and
adc
or
out
jmp
test
xchg
rorb
notb
aam
sub
es
or
dec
inc
pushf
sub
in
mov
pop
leave
add
pop
jb
stc
mov
push
arpl
inc
mov
call
add
test
xor
mull
lea
test
and
fwait
jmp
adc
or
cmpsb
sub
ret
or
push
fwait
cli
jecxz
inc
aad
stos
cmp
nop
sahf
repz
dec
in
mov
xchg
mov
dec
adc
fcmove
mov
leave
cmpsl
sbb
jg
inc
and
inc
aad
imul
sub
mov
xor
sub
sub
div
into
push
and
inc
inc
stc
pop
xchg
mov
cwtl
and
fdiv
inc
sti
adc
mov
jb
mov
std
jp
fcompl
xor
stc
or
test
loopne
sub
jne
dec
into
mov
sub
sbb
mov
repz
stos
jecxz
push
sbb
sbb
xor
roll
mov
dec
adc
subb
nop
adc
adc
arpl
inc
les
sbb
iret
sbb
xor
gs
sbb
ret
filds
dec
pusha
mov
dec
pop
aad
sbb
call
push
mov
ret
enter
pop
mov
xor
das
ficoml
xchg
or
xor
cld
andl
out
jle
or
imul
cmp
xchg
idiv
lods
jb
cli
aas
xchg
scas
mov
jg
mov
pop
fsubl
sub
jns
sti
jmp
ret
mov
mov
and
scas
mov
movsb
cmp
fsubs
stos
push
push
loopne
add
push
cmp
imul
clc
cmp
inc
loop
out
sbb
xlat
mov
es
rclb
jl
mov
stc
push
xchg
test
add
cld
cmp
push
push
and
out
push
stos
fpatan
fldt
mov
mov
aam
inc
out
outsl
xor
sti
mov
mov
inc
mov
mov
repz
leave
sar
dec
aad
mov
je
and
jno
inc
push
sub
and
test
push
in
loop,pn
jno
adc
rorl
iret
int3
push
lods
push
clc
inc
pop
andb
fxch
xchg
sub
out
fwait
mov
pop
aaa
jecxz
inc
xlat
aad
inc
xchg
xlat
and
xchg
and
inc
fmuls
fidivrl
imul
fs
adc
in
sbb
scas
add
aam
sbb
es
mov
in
xchg
xchg
jne
outsl
hlt
std
jecxz
popa
mov
jg
sub
sub
je
jecxz
mov
jl
dec
or
out
sbb
mov
orl
hlt
or
push
mov
outsb
int3
push
out
data16
scas
cld
xor
push
xchg
dec
cmpsb
mov
pop
mov
or
repz
jmp
cld
enter
cmpsl
sub
sbb
sti
inc
fisubl
mov
hlt
and
fistps
outsl
mov
rolb
mov
mov
sbb
fstl
mov
pop
dec
dec
push
lea
hlt
add
lods
insl
mov
scas
mov
xchg
loop
mov
fldl
cmpsb
daa
xchg
jl
into
push
jne
inc
cmp
add
hlt
sub
push
outsl
arpl
and
or
dec
ljmp
clc
divl
lods
rol
scas
jle
push
add
lahf
sahf
fidivs
mov
add
das
xor
push
mov
std
cwtl
jae
fimuls
inc
add
jae
es
leave
lahf
sub
inc
add
rorl
mov
adc
addr16
out
add
rolb
loopne
inc
addr16
ret
shl
or
push
add
fidivl
testb
mov
dec
clc
cs
fmul
and
jbe
aam
scas
lods
adc
mov
mov
mov
repnz
addr16
mov
jl
imul
pop
js
ret
hlt
mov
cmpsl
inc
shrb
dec
cwtl
push
aaa
fcmovnbe
cmp
dec
in
stos
addr16
push
inc
orb
movsb
mov
xor
test
mov
pop
add
cmp
jp
scas
data16
pop
adc
roll
inc
ja
mov
adc
adc
adc
pushw
dec
xchg
ds
lods
scas
dec
dec
jbe
mov
xor
inc
inc
test
int
mov
or
xor
test
mov
pop
pop
mov
pop
xor
es
sub
xchg
cmpsl
in
pop
jbe
mov
sbb
sarb
xor
out
mov
mov
xchg
inc
popl
cmpsl
fimuls
fcoml
test
add
and
sub
lods
fsts
repnz
xchg
ss
mov
mov
xor
sbb
adc
ja
pop
lret
push
loop
or
cmp
into
push
cmp
scas
inc
xchg
cmpb
and
sub
mov
mov
fs
xchg
jge
adc
add
or
icebp
out
dec
fcomip
and
ja
fimull
fiadds
orb
sarb
pop
mov
dec
rol
pop
inc
imul
jmp
sbb
inc
dec
les
lahf
lods
in
cs
push
adc
or
pop
lock
sub
pop
push
outsl
into
jnp
jo
xchg
jmp
lcall
mov
rcrl
mov
jo
xchg
sahf
daa
inc
enter
icebp
add
lahf
cs
rorl
mov
push
sbb
sti
mov
lret
xchg
pop
loop
dec
lods
lcall
cmpsl
daa
lret
or
mov
sarl
jmp
jmp
inc
xchg
inc
es
aas
adc
cmc
pop
adc
mov
mov
cmp
jp
aam
std
and
clc
mov
xorl
dec
aas
mov
out
push
jno
xchg
jge
incb
jb
fwait
pop
push
dec
ret
sbb
mov
and
dec
push
shlb
adcb
imul
test
push
clc
stc
dec
mov
leave
mov
xchg
cmp
dec
out
lahf
mov
orb
xchg
adcb
add
xchg
jo
xchg
lcall
sbb
jnp
insl
leave
xchg
push
xor
sahf
mov
push
dec
adc
fimuls
cmp
pop
pusha
or
mov
and
adc
mov
repnz
pop
out
jle
mov
lcall
jb
mov
js
cmp
cmp
mov
cwtl
jnp
outsb
aas
adc
ret
sub
sub
fidivrl
sub
sbb
adc
or
fwait
inc
cmp
stc
xor
sbb
cltd
inc
push
mov
mov
cmpsl
mov
or
mov
inc
repz
dec
mov
cmp
xor
subl
or
dec
pop
cmp
aaa
notb
mov
test
mov
dec
mov
loopne
in
sbb
or
xchg
sti
repnz
dec
mov
subl
and
test
xor
dec
aad
nop
gs
stos
pop
je
addr16
jnp
sahf
js
rcll
push
stos
add
idivl
inc
xor
cmpsb
in
stos
pop
xor
loop
lods
pop
je
dec
add
icebp
dec
adc
scas
and
cmp
hlt
mov
jae
push
add
lahf
in
add
add
add
jns
jmp
jns
xor
stc
add
addl
or
push
enter
push
jne
cmp
lods
push
jo
jnp
out
clc
cltd
int
das
mov
fwait
pop
sub
pop
cmpsl
leave
xchg
cmpsl
in
dec
mov
dec
sbb
in
scas
fsubp
push
adc
sbb
jg
push
mov
jns
push
jge
add
or
jmp
out
fwait
neg
xchg
push
inc
inc
dec
int3
hlt
outsb
fldt
sbb
fldenv
jo
add
sbb
mov
jb
jl
xchg
fisttpl
push
shll
sbb
mov
in
jae
push
push
xlat
sub
push
cld
in
pop
sbb
sub
and
pop
in
out
insl
mov
inc
dec
nop
pop
xlat
pushf
cmp
pop
cmpsl
je
enter
fstl
dec
mov
inc
xchg
lods
or
pop
sbb
sahf
hlt
push
leave
and
mov
ret
lods
mov
inc
cwtl
xchg
xchg
push
dec
xchg
and
jbe
dec
dec
xor
fdivrs
mov
pop
dec
cld
push
lds
nop
rcrb
push
mov
divb
mov
adc
mov
push
repnz
cmp
stc
cmp
int3
out
mov
cmp
lock
inc
jecxz
aam
flds
dec
adc
push
adc
push
loop
sub
popa
clc
push
cs
mov
adc
enter
xlat
push
cli
arpl
into
jb
push
inc
nop
and
cld
stc
pop
cmp
mov
push
add
xchg
jmp
add
or
jle
jl
repz
aam
push
pop
cmp
mov
shrb
dec
movsb
loope
stc
jmp
addr16
cmp
rolb
daa
mov
push
lock
jae
mov
adc
jmp
sbb
out
cmp
sbb
test
in
pop
into
pushf
jp
test
lahf
and
and
bound
adc
lods
test
mov
lods
jnp
dec
sub
xor
jns
inc
sbb
into
xchg
loopne
lods
jmp
insl
cmp
mov
xor
loopne
mov
ret
and
stc
pushf
das
sbbb
dec
dec
lods
ss
mov
inc
idivl
rol
push
jl
jns
xor
jp
xor
inc
sub
mov
cmp
arpl
xlat
icebp
push
xlat
stos
inc
mov
and
add
xchg
insl
pushf
adc
push
repnz
imul
cltd
xchg
mov
pop
adc
in
or
clc
adc
ja
sarb
shrl
iret
sbb
cmc
inc
mov
and
add
lock
xchg
push
pop
xchg
xchg
sbb
cmc
and
outsl
mov
add
inc
push
push
aas
dec
mov
dec
mov
stos
lcall
cmp
xor
outsb
out
adc
out
cltd
adc
jno
loope
int3
enter
mov
fs
jb
jge
jg
mov
stc
dec
or
imul
pop
fs
pop
lcall
fldl
sti
mov
test
loope
pusha
int3
inc
bound
sub
clc
mov
adc
xchg
pop
pop
or
sub
jae
movsl
jge
jne
add
mov
sub
sbb
lcall
sbb
sbb
shll
mov
in
dec
xlat
fcmovbe
sub
sahf
mov
data16
or
pop
rorl
jmp
and
das
cwtl
fnstcw
movsb
pop
repnz
push
xchg
push
mov
mov
je
or
sbb
hlt
push
pushf
cmp
lcall
pop
inc
inc
sti
inc
or
jo
jp
repnz
cmpl
prefetchwt1
adc
lret
sbb
pop
mov
in
jp
pop
jge
decl
sub
loop
outsl
push
jb
cmp
xor
fsubl
add
push
mov
aaa
pop
pop
aad
xor
jecxz
shrb
push
icebp
cmpsl
jge
imul
fstl
testl
or
lods
mov
shl
inc
mov
shll
pop
hlt
add
or
sub
ja
or
push
mov
push
imul
dec
jmp
scas
inc
push
push
scas
test
or
cmpsl
mov
mov
nop
lds
aaa
repz
and
les
bound
xor
rcrb
xchg
mov
movsl
mov
sbb
clc
ds
sub
sti
aas
mov
jbe
xchg
and
sub
inc
cmp
mov
lods
out
andl
rorl
or
ret
lret
shll
mov
test
out
xor
lret
jne
inc
icebp
and
sbb
sbb
icebp
push
loop
jge
in
mov
lret
int3
pop
adc
divb
or
cmp
pop
mov
cmc
hlt
test
out
pop
addr16
xorb
jp
sahf
or
sbb
incb
incl
aas
mov
mov
movsb
hlt
mov
push
hlt
popl
loope
add
je
mov
xchg
jp
in
mov
mov
sub
and
daa
insl
add
fistpl
push
xchg
and
ss
sbb
mov
mov
sbb
pop
cmpb
popa
pop
rorb
inc
xchg
pop
pop
mov
pushf
xrelease
push
sarl
movsb
pushf
shrl
cmp
mov
mov
stc
jp
adc
sbb
mov
push
jb
mov
pop
das
sahf
dec
mov
loop
add
clc
lret
push
push
mov
nop
std
int
rol
repz
lcall
sti
jne
sbb
sti
jnp
pop
stos
jle
jmp
inc
dec
lea
jnp
mov
push
mov
pop
lret
mov
adc
bound
scas
gs
mov
xor
aas
sbb
dec
out
popa
rcrb
mov
pop
nop
ljmp
dec
fistl
loope
inc
or
int
idivb
mov
jmp
push
adc
decb
jle
iret
jge
pop
mov
mov
push
mov
xchg
mov
pop
mov
xchg
mov
pop
sub
in
shll
push
sbb
and
es
cmp
jo
insb
mov
or
cmpsl
in
ret
push
iret
sub
jge
mov
repz
adc
inc
xor
loop
das
aad
pop
punpckhdq
or
or
pop
hlt
xor
cmp
sub
xchg
lods
decl
inc
dec
mov
xchg
rcll
jle
jg
dec
mov
popf
lds
cmc
add
inc
push
pop
stos
enter
inc
sbb
test
imul
subl
or
std
mov
xor
flds
cmpsb
imul
into
add
icebp
xor
push
bound
mov
insb
or
mov
inc
pop
jo
in
cmpsb
clc
out
mov
mov
push
pop
mov
sub
repz
jecxz
sbb
sti
jge
test
test
and
cmp
cmp
inc
imul
xor
fstpl
add
push
lahf
push
ja
iret
scas
ss
sbb
xor
jns
adc
roll
inc
sahf
scas
aaa
jns
mov
dec
pop
mov
xchg
add
aas
cmpb
mov
sbb
aas
jmp
cwtl
cmp
lods
mov
int3
scas
pop
loope
mov
cmc
jbe
test
outsl
jg
cltd
fnstenv
addr16
cs
sbb
lcall
xor
push
mov
fmul
arpl
adc
or
inc
in
out
repnz
xchg
in
mov
fwait
ret
xchg
in
mov
jb
mov
mov
and
add
les
xchg
add
pop
bound
cli
fldenv
inc
int3
jmp
mov
xor
xor
mov
inc
push
fs
shlb
lds
cmp
adc
pop
mov
inc
leave
sbb
xor
cmp
add
mov
insl
cltd
jmp
adc
pop
inc
js
test
lea
mov
in
inc
leave
test
lods
inc
lcall
sbb
sub
mov
aam
fiadds
out
loopne
imul
inc
ds
stos
push
sbb
sbb
pop
sbb
int
jge
or
add
xor
adc
cmp
cmp
mov
in
sbb
jo
mov
lcall
jl
jno
data16
xor
xchg
lock
stos
jp
divl
imul
and
add
fdivs
mov
xor
stos
sbb
jb
xor
mov
mov
std
adc
test
or
xchg
rorl
outsb
neg
mov
inc
test
inc
pushf
mov
negl
lods
xchg
mov
std
ret
inc
je
enter
in
or
pop
pop
push
and
cltd
sbbl
ret
sbb
cmp
fistl
aam
popf
sub
mov
mov
std
pop
push
or
jp
lcall
dec
lcall
add
data16
outsb
ret
sti
ficompl
push
in
xor
push
mov
or
lret
cmp
cmpsb
and
popa
mov
or
in
jg
xchg
and
pop
pop
lcall
testb
pop
loop
push
orl
idiv
fisttps
insb
loop
fisttpll
loope
fistps
and
sub
mov
pop
bound
les
mov
out
fcmovnbe
and
rorb
jne
cmp
mov
or
sub
mov
fs
pushf
fsub
cmp
pop
cmp
pop
cli
mov
mov
push
adc
xor
pop
xorl
mov
sbb
out
mov
push
add
xor
mov
dec
xchg
lahf
xchg
and
out
lods
int
jl
inc
xchg
cwtl
out
inc
imulb
sub
add
pushf
xchg
add
ficoml
mov
push
scas
sar
cmc
enter
jnp
inc
mov
ds
mov
dec
mov
stc
inc
faddl
adc
scas
gs
iret
in
movsl
or
fwait
inc
mov
jne
sub
divl
out
sub
mov
push
hlt
add
pop
xchg
addl
stc
ss
scas
int
loope
pop
pop
enter
mov
sahf
jle
out
dec
arpl
xchg
pop
mov
cmp
pop
xor
sub
test
push
leave
aaa
leave
aaa
lahf
mov
in
jecxz
clc
cmp
fs
add
sbb
mov
jmp
sti
inc
in
jno
xor
pop
mov
dec
lock
das
lret
and
inc
or
jl
jecxz
inc
stc
cli
stos
dec
push
sbbl
daa
xorb
adc
pop
push
les
adc
xchg
repz
clc
out
inc
or
inc
sbbb
fstpl
or
mov
cmp
push
fstl
clc
scas
and
sub
inc
imul
xor
lea
mov
jge
ljmp
fucomp
in
imul
jl
jl
rcl
or
nop
es
mov
pop
and
adc
add
or
cli
sahf
mov
iret
xchg
iret
leave
mov
ja
pop
mov
jecxz
or
mov
loope
mov
or
sbb
mov
inc
in
repnz
aaa
adc
add
jb
or
jno
gs
ret
scas
jnp
push
in
out
out
sub
jge
push
inc
mov
ljmp
cmpl
pusha
nop
or
mov
aad
notb
xchg
repz
fcmovne
adc
bound
icebp
adc
mov
mov
loop
adc
cmpsl
jae
mov
add
jp
pop
pop
clc
test
xchg
bound
adc
out
jbe
pop
sahf
je
or
dec
ret
andl
jo
aaa
xchg
mov
into
rolb
ljmp
inc
jle
xlat
add
int
mov
sbb
add
scas
or
mov
mov
inc
das
xchg
leave
arpl
adc
movsb
scas
lahf
sub
mov
mov
jl
jno
push
clc
dec
cmp
mov
dec
ret
in
mov
xor
add
xor
test
jns
xor
stc
filds
sub
adc
sub
pop
lock
dec
popf
arpl
cmpsl
fistps
xchg
js
fldl
cmpsl
ss
hlt
or
arpl
push
mov
jno
lret
mov
xor
sahf
cli
ja
xchg
rorl
loopne
and
xchg
or
sbb
adc
lcall
inc
lds
scas
sar
popa
leave
or
dec
push
je
loopne
daa
mov
and
pop
jo
out
sub
fldcw
fmul
sbb
repnz
jle
and
jg
pop
rol
dec
xchg
inc
xor
rcl
stos
pop
bound
sbb
xchg
push
sub
add
pushf
insb
iret
sbb
inc
mov
dec
xchg
push
push
and
pcmpgtd
xchg
sub
out
cwtl
lds
sub
adc
and
ret
aad
push
adc
mov
xor
aaa
cmp
mov
ljmp
je
or
and
jecxz
jl
jmp
or
jbe
xchg
xchg
fldt
sbb
pop
xchg
xor
mov
mov
lahf
push
sti
mov
fcmovu
cmpsl
test
cmp
add
sub
insl
jmp
shl
xchg
aas
jae
push
sbb
mov
add
push
pop
pop
pop
fdivl
or
mov
fisttpll
xchg
xor
dec
pop
std
mov
mov
mov
pop
fimuls
push
mov
inc
je
cmpsl
pop
gs
jbe
xchg
add
adc
dec
dec
xor
ja
jnp
aad
adc
xchg
rsqrtps
mov
sbb
negl
xchg
fadd
sub
cs
outsl
lahf
jecxz
test
push
jl
test
mov
loopne
fcompl
aam
xchg
inc
je
mov
mov
dec
dec
cld
dec
push
push
cmp
dec
popf
sbb
adc
mov
sbb
ret
insb
dec
and
pushf
enter
rcrb
aam
xor
stos
jne
jno
or
mov
xor
outsl
xor
aas
dec
adc
pop
xchg
fistpl
test
pcmpgtd
jmp
fs
movsb
dec
lahf
loopne
jb
out
shlb
repnz
adc
jmp
push
subb
and
nop
stos
inc
push
and
pop
js
push
ret
mov
fmull
and
sbb
jecxz
sbb
andl
sahf
push
xor
mov
test
loopne
fmulp
inc
aas
sub
xor
test
cwtl
xchg
test
stos
lret
sub
mov
xchg
iret
add
int
popf
into
sbb
mov
and
stc
mov
inc
ficoml
xchg
in
sbb
mov
and
xchg
popa
std
xlat
addr16
aas
pop
add
jmp
addr16
xorb
push
js
pop
std
jl
insl
and
fdivl
lahf
cmp
mov
je
jbe
mov
cmp
cmp
loop
cmp
pop
dec
sub
xchg
repz
int3
xchg
ret
pushf
or
lock
incl
lds
add
repz
dec
into
pushf
or
sar
or
popl
jo
out
faddl
outsl
mov
cld
rcll
or
inc
dec
insb
dec
xor
mov
or
dec
movl
jge
orb
es
iret
xchg
pop
enter
jo
ss
xchg
add
adc
dec
add
dec
xor
in
ss
mov
popa
lds
dec
mov
mul
mov
lahf
into
in
mov
movsl
roll
fbld
sbb
stos
pop
lret
lock
lcall
mov
mov
loop
sti
cmp
ljmp
jecxz
cmpsl
mov
or
mov
icebp
add
out
rcr
daa
inc
das
sub
pop
push
daa
daa
push
xor
fwait
push
jae
lods
inc
sbb
jae
xchg
jno
cwtl
sahf
insl
jae
xlat
loope
cmp
xor
add
push
jecxz
fwait
inc
pop
imulb
xorl
out
jg
lahf
pusha
pop
ss
xchg
fcomps
xchg
adc
fists
inc
negl
and
das
push
mov
ja
das
sbb
sub
cwtl
imul
fcompl
icebp
mov
cmpsl
xchg
data16
leave
loopne
cmp
clc
or
xor
xorb
jno
mov
sub
jg
icebp
std
bound
and
out
imul
lock
adc
xor
sete
or
add
adc
arpl
cmp
bound
add
stos
mov
movsb
push
adc
pushf
push
xor
sti
cmp
ret
int
ljmp
loope
dec
cld
mov
jno
dec
test
mov
jg
mov
out
das
cld
push
fdivr
and
outsl
movsb
sub
test
outsl
pop
sbb
cld
cmp
lea
pop
mov
loope
xor
inc
mov
fnsave
scas
rcrb
jns
dec
jbe
adc
sbb
rorl
imul
addl
mov
shll
fnstsw
xchg
loope
xchg
jmp
js
add
inc
mov
rcrb
xor
mov
jle
xchg
mov
insb
addr16
pop
mov
sahf
jbe,pt
inc
enter
sbb
addr16
ds
cmpsb
pop
lcall
andb
aam
cwtl
nop
cli
gs
pop
xchg
jno
push
or
push
mov
rcrl
cli
sbb
mov
dec
sub
sti
jge
jnp
es
jmp
sbb
xor
mull
xchg
add
sahf
aam
or
push
test
or
ds
stos
ljmp
cwtl
shll
mov
fnstcw
jmp
mov
mov
adc
dec
aad
int
cwtl
rcll
insl
out
sbb
sub
vpmacssww
sub
loop
mov
rcrb
pusha
repnz
cmp
sbb
loop
xchg
outsb
sub
jo
pop
pop
dec
fidivrl
fisubl
aas
shlb
jmp
or
clc
mov
xor
xchg
inc
mov
pop
sarb
psrlw
mov
inc
mov
les
mov
push
cwtl
out
iret
push
add
mov
lahf
push
jae
push
xor
and
lahf
jmp
movsb
aas
lea
lcall
pop
fisubrl
dec
push
and
or
and
scas
outsb
push
rorl
movsl
mov
mov
aam
inc
insb
cmp
out
sarb
inc
cmp
fcmovu
iret
aaa
ret
sbb
pop
stos
loopne
hlt
mov
xchg
je
mov
fcomps
and
jno
push
sbb
inc
gs
cmpsl
psrlw
movsb
or
outsl
jmp
test
inc
lea
scas
sbb
cmpsl
mov
lcall
sbb
mov
push
add
jbe
mov
lret
pushf
mov
mov
cmp
into
dec
sbb
jp
popf
jge
leave
bound
xchg
xor
cmp
ret
add
cwtl
paddusb
std
push
iret
das
add
jno
mov
push
xchg
and
sub
bound
jns
mov
jno
jne
cmp
sbb
frstor
sbb
aam
and
cmpsl
fs
fiadds
xor
push
in
xchg
in
adc
insl
out
xchg
adcb
push
push
je
mov
mov
inc
cmp
inc
xchg
xchg
xor
mov
cmpsl
sbb
dec
xchg
cmp
inc
daa
bound
scas
fsts
adc
adc
mov
inc
xor
repz
sar
xchg
dec
outsl
pop
mov
mov
push
roll
adc
sar
jne
adc
pop
xchg
pop
mov
add
adc
clc
stos
push
orl
fdivs
in
xor
scas
jbe
dec
loope
out
stc
les
jo
cmp
add
and
jmp
les
push
dec
sub
or
fistps
stos
lds
test
sbb
loop
repz
lods
push
push
mov
jo
pop
mov
push
lret
jbe
hlt
mov
push
inc
in
mov
and
pop
test
rorl
jmp
jge
dec
sub
sarb
mov
ucomiss
std
insl
pop
xchg
mov
mov
int
in
mov
fnstenv
and
cmp
xor
dec
dec
add
lods
icebp
add
in
lods
pop
mov
sub
xlat
mov
enter
mov
xor
adc
fnsave
sub
loopne
test
call
roll
sub
pop
aaa
inc
into
cmp
and
and
xor
imul
pop
imul
push
adc
shrl
outsl
mov
aad
aad
iret
push
sar
xchg
movsl
popf
or
xchg
cmpsb
and
in
out
jns
and
pop
jo
push
xor
out
incl
jne
push
movsb
ss
mov
mov
test
dec
inc
mov
dec
jnp
ret
push
mov
mov
movsl
inc
lods
push
scas
push
mulb
jl
ljmp
or
call
mov
inc
jne
sbb
mov
fsub
xor
sbb
ja
outsl
scas
mov
out
xor
stc
sub
sub
inc
shrb
mov
jl
push
mov
xor
pop
push
es
jge
lahf
mov
fidivrs
cmp
cmp
sub
xor
call
jmp
pop
les
test
pop
sub
fimull
testb
lock
fcmovnb
call
data16
push
daa
scas
sar
pop
dec
fidivs
stos
adc
lret
jecxz
mov
mov
movsl
jp
leave
std
and
sub
mov
push
inc
mov
movsb
cmp
sbb
loopne
pop
pusha
rol
call
aas
mov
aaa
push
inc
das
js
popa
js
jle
xor
xchg
nop
pop
and
cmpsl
pop
xchg
gs
jne
sub
fbld
xchg
mov
icebp
mov
out
mov
fbld
inc
repz
iret
add
jge
ds
mov
or
cmp
or
mov
push
call
pop
int
or
daa
fiaddl
stos
jb
pop
ror
xchg
ret
fmul
orl
jle
and
adc
pop
pop
mov
popa
fsubrs
xlat
lahf
mov
cmpb
dec
adc
dec
xor
inc
and
cmp
sbb
mov
or
test
cwtl
mov
add
adc
sub
add
test
stos
movb
mov
pop
icebp
cmp
push
sahf
outsl
insl
xchg
add
sbbl
fildll
lret
and
mov
incb
aaa
sub
or
iret
push
sbb
test
hlt
aaa
sbb
push
clc
mov
push
dec
xor
push
dec
mov
mov
pop
sbb
dec
imul
sar
push
cld
cmp
fwait
jmp
pushf
adc
sbb
mov
lock
push
in
add
lret
mov
inc
add
sub
lods
jb
aad
scas
and
pop
adc
jae
push
paddsw
je
cmpsl
sbb
fwait
out
jp
pop
inc
inc
add
jb
popf
dec
mov
in
mov
pushf
imul
add
xor
jns
ds
int3
stos
loopne
push
or
cmp
sub
push
out
jmp
test
mov
xchg
pop
das
push
xchg
stc
dec
and
leave
insl
add
push
mov
push
icebp
jb
mov
imul
int
push
test
rcr
lret
xor
cmp
jns
in
jnp
sub
mov
in
icebp
faddp
xchg
sub
pop
outsl
dec
cld
fidivl
cmpsb
clc
adc
outsl
pop
sub
outsl
jb
data16
stos
xchg
mov
ja
add
xchg
rcpps
stos
std
mov
outsb
fimull
cli
jae
repz
sbb
mov
gs
cmp
sbb
pop
pusha
cwtl
pop
push
andl
icebp
mov
push
inc
xor
fstpt
adc
test
and
mov
test
jbe
mov
pop
and
fsubs
enter
lods
xchg
jno
and
add
out
loopne
test
and
ret
cs
xor
adc
testb
sub
add
ss
mov
repnz
mov
xlat
das
or
pop
add
fcmovnb
jb
movsb
out
mov
test
and
xlat
xchg
popf
add
call
repnz
loop
sub
jns
test
imul
out
add
push
adc
jge
push
fisubs
dec
mov
push
test
mov
ret
or
and
fisttpll
ljmp
les
or
sti
es
in
fimull
scas
fs
mov
ret
jle
ss
inc
sti
int3
stos
jne
adc
repz
pop
sbb
pop
andl
fists
cmpsl
pop
push
in
push
in
mov
adc
xchg
leave
cltd
bound
jns
sbb
mov
jle
stc
cmp
test
jl
out
jge
icebp
inc
nop
sub
sbb
cmp
push
mov
pop
and
mov
xor
js
jne
leave
add
cld
adc
push
sbb
imul
rolb
loopne
adc
mov
push
mov
xorl
mov
sub
outsl
adc
lods
jo
shlb
mov
shl
cld
stc
shl
cmovp
push
shl
mov
xor
test
stc
notb
insl
stos
mov
movsl
xor
lds
or
jbe
data16
xor
cld
sub
push
jl
stc
leave
jl
je
ljmp
jg
or
jp
xor
or
adc
mov
lds
mov
daa
int3
add
jnp
popa
inc
lret
mov
shl
js
pusha
test
mov
inc
cmpsb
pop
mulb
or
mov
js
mov
add
cvtps2pd
pop
sarb
shrb
sbb
pop
out
dec
arpl
sub
mov
cld
sahf
fdivp
push
leave
insl
in
push
movsb
jnp
ja
and
std
cmc
cmc
in
test
addr16
icebp
loop
and
add
int
inc
fistps
jns
mov
cli
stos
pushf
jne
mov
sub
cs
push
and
cmp
inc
xlat
aad
sub
dec
outsb
dec
or
mov
inc
mov
sub
enter
xor
mov
jge
insb
lahf
jne
push
adc
popa
cli
sbb
daa
es
fisubl
push
mov
bound
jmp
pop
in
stos
push
xlat
cmp
mov
pop
subl
sbb
dec
xchg
int3
inc
dec
sub
ror
inc
inc
pusha
mov
cmc
aad
add
jae
xchg
sub
pop
nop
sbb
mov
push
fcmovnb
xchg
jp
xchg
ss
inc
mov
aad
cmpsl
adc
bound
inc
xchg
sub
jg
lahf
icebp
xchg
ljmp
and
aaa
rolb
adc
popf
mov
sbb
dec
mov
inc
jl
fisubs
movsl
test
push
out
addr16
dec
push
cs
xchg
adc
pop
movsb
jl
xor
lods
insl
xor
mov
mov
aas
stos
int
cltd
push
scas
add
gs
or
xor
das
add
fsubrs
imulb
es
and
xchg
pop
pusha
dec
cmovp
insb
mov
xchg
cmpb
pop
cmpsl
inc
decb
les
push
mov
and
mov
iret
psllq
stos
push
jg
or
insb
enter
enter
lds
add
jmp
bound
ret
sti
adc
test
sbb
mov
inc
lods
cmp
popf
mov
and
js
sahf
or
sub
or
sbb
hlt
arpl
mov
rcrl
fisttps
lret
pushf
testl
lods
jmp
lods
loop
scas
xchg
and
es
xchg
add
inc
dec
pop
jne
cmp
add
sbb
mov
fs
mov
xchg
cmpsb
xor
cld
loop
mov
scas
or
or
enter
testb
push
mull
les
stos
adc
stos
xor
jp
and
adc
jno
xor
js
sarb
enter
inc
xor
push
sbb
clc
test
xchg
out
je
mov
adc
in
lods
xor
pop
arpl
clc
cmpsl
ljmp
loopne
pop
hlt
adc
pop
pop
dec
lods
adc
dec
aam
xor
lds
jmp
sbb
ljmp
push
pop
xchg
ja
fwait
mov
xorb
add
leave
lcall
repz
es
xor
xor
mov
stc
cli
mov
mov
mov
fprem
add
fidivl
out
pop
mov
add
mov
add
shrl
adcl
mov
pop
jb
push
xor
fsub
inc
fdivrp
xchg
inc
ds
lret
push
and
xor
adc
adc
les
jge
lret
popa
jg
cmpsb
rorl
or
lahf
jbe
mov
sub
imul
lcall
xor
jb
lea
lock
test
repnz
push
fwait
mov
imul
hlt
scas
or
scas
addr16
mov
mov
jo
les
push
shl
and
sub
pop
jp
loop
and
mov
mov
movl
xchg
add
cmp
and
pop
mov
mov
fdivrl
sub
xor
cmpsb
xchg
push
lods
cs
lret
sbb
dec
int3
aaa
pop
or
shll
in
jl
clc
aaa
cld
sbb
jo
adc
sbb
push
mov
cmp
rcll
and
ss
and
movsl
mov
bnd
shrl
lods
dec
adc
cmp
mov
lods
lret
cmc
sub
mov
lea
fisubrs
cmp
mov
ljmp
imul
cmp
rol
xor
jge
jmp
ficomps
fadd
add
aam
test
fsubrp
sbb
addr16
fwait
rolb
in
jge
fisubs
pop
inc
sbb
push
mov
push
lock
adc
push
test
lds
mov
mov
sbb
loop
and
test
scas
loop
pop
test
out
loope
out
popa
movsl
cmp
inc
iret
insl
inc
push
and
or
xor
push
add
dec
adc
adc
cltd
jo
sbb
mov
sbb
mov
mov
ret
xchg
scas
in
mov
adc
add
adc
xchg
xchg
das
shlb
movsb
and
and
sbb
push
mov
cmp
jecxz
mov
aad
stos
test
adc
lock
push
out
and
jnp
sbb
push
or
fcmovnbe
push
loop
insl
and
cmc
sbb
xor
out
sub
mov
mov
xorl
je
in
hlt
inc
mov
stos
adc
mov
jne
push
cmc
movsb
das
add
int
test
shlb
mov
gs
repnz
int3
push
pop
mov
dec
fnsave
or
rdpmc
mov
js
push
outsb
pop
sub
pop
pop
push
or
rcll
repz
sbb
arpl
or
les
jns
add
fsubrl
out
rcll
inc
mov
outsl
scas
push
mov
inc
test
scas
mov
mov
nop
cmp
push
cmpsl
negl
repz
imul
sarb
sub
cmp
rorl
add
ficompl
stos
std
or
sbb
mov
push
add
pop
jnp
fistpll
sahf
lcall
stc
bound
jo
cltd
popa
cmp
push
xchg
lcall
imul
sub
xor
inc
cli
sbb
jp
fisubrl
pushf
subl
imul
or
leave
push
sti
adc
push
jg
aam
xchg
inc
mov
inc
sbb
pop
test
push
mov
mov
leave
sbb
in
cmpsl
popa
push
lods
push
mov
les
clc
xchg
fsts
mov
lock
sub
scas
dec
xchg
in
push
movsl
fisubrl
jne
rcrl
push
xor
aaa
jmp
mov
fisubrs
dec
pusha
sarl
push
xor
inc
das
scas
mov
push
push
push
lret
pop
fcoml
cmp
jno
sub
adc
push
orb
aaa
push
popl
mov
pop
xchg
jne
lahf
enter
sbb
fimull
adc
mov
cmp
cmpsl
sub
lds
pop
insl
cmc
nop
add
pop
sbb
mov
lock
out
xchg
pop
in
rolb
test
int3
dec
icebp
ljmp
test
dec
movsl
out
and
movsb
adc
mov
stos
lea
inc
dec
sub
movsl
imul
shlb
mov
test
imul
aas
rol
inc
pop
mov
mov
int3
fsub
adc
dec
fadd
pushf
xor
lock
int
mov
dec
fldpi
or
aaa
jns
mov
pop
xchg
cmp
mov
shlb
mov
hlt
cmpsb
cmp
mov
psubsw
and
dec
lret
nop
fcmovnb
in
adc
mov
inc
icebp
push
int3
std
outsl
pop
pushf
mov
stos
nop
push
mov
or
inc
push
push
sbb
jae
pushf
xor
mov
scas
inc
fs
push
sbb
sbb
jno,pn
aad
mov
mov
fists
jo
mov
cmpsb
mov
xchg
fisttpll
and
outsl
mov
test
or
xchg
inc
or
test
sbb
addr16
stc
push
imul
xchg
xor
push
nop
fwait
in
out
xor
pop
dec
icebp
mov
sti
ljmp
dec
and
fwait
push
out
mov
pop
test
xchg
movb
pushl
call
lds
jle
popf
repz
inc
scas
jae
or
dec
arpl
jno
xchg
sub
mov
or
scas
sbb
adc
pop
stc
in
fistpl
cltd
daa
rclb
stos
jno
and
bound
fwait
movsb
jno
or
stc
imul
jbe
push
mov
jae
pop
cmp
add
push
hlt
sub
cli
out
negb
xor
xor
xchg
out
sbb
insl
roll
in
popa
shll
jge
fldt
adc
dec
add
and
in
pop
pop
push
jne
stos
insb
add
sbb
pusha
xor
and
fnsave
aas
cmpsb
jge
push
dec
lahf
adc
jne
fildl
sub
incb
shlb
add
add
dec
and
shll
adc
fdiv
ss
push
lods
adc
lock
xchg
dec
jo
sbb
ljmp
xor
add
in
mov
sub
xchg
and
pslld
outsl
xor
adc
test
adc
ss
inc
stos
incb
push
xor
gs
sub
fidivrs
rclb
repz
fcmovne
fwait
xor
pop
rolb
rcrb
xor
mov
xor
cld
test
xchg
inc
mov
dec
jl
test
mov
cmpl
js
movsl
scas
pop
sbbb
push
xchg
mov
xchg
xchg
cmc
xabort
daa
pop
push
into
and
add
xchg
aas
les
int
lret
cmp
insb
popa
outsl
test
shlb
ja
stos
repz
mov
jl
mov
dec
push
fcom
sub
stc
arpl
ss
mov
jp
xor
mov
outsl
pop
lock
xchg
outsb
daa
jnp
or
mov
ljmp
fmull
loope
adc
movsl
add
repnz
sbb
gs
sbb
stos
ss
pop
dec
fadd
ss
enter
test
dec
xor
lds
outsb
negb
neg
adc
jle
cmp
scas
push
std
mov
pop
push
sbb
lret
cltd
ss
push
pop
adc
push
icebp
mov
int
jnp
pop
fcom
fdivs
stos
mov
aad
xor
add
test
cmp
bnd
shlb
push
ret
jge
leave
and
add
push
mov
mov
bound
lods
xchg
ja
nop
in
dec
in
push
dec
pop
clc
aad
jecxz
fs
jp
push
mov
out
mov
pop
sub
xchg
xchg
mov
test
fdivr
push
push
repz
push
xor
loop
nop
jmp
insl
arpl
les
clc
dec
popa
jl
xchg
mov
decl
or
into
ljmp
mov
bound
sbb
arpl
sub
daa
and
fidivl
pop
or
es
cli
test
sbb
fldln2
fisttps
mov
push
mov
xchg
xchg
repz
cld
in
lret
dec
mov
aas
scas
loop
enter
decb
ffree
and
adc
xchg
add
shrb
sbb
lret
mov
xchg
pop
add
test
add
js
icebp
test
mov
gs
xchg
xchg
fimull
push
shll
sub
push
inc
pop
jge,pt
dec
inc
ss
mov
xchg
hlt
add
add
enter
es
and
xchg
ss
nop
push
add
imul
pop
mov
jns
push
ret
xor
iret
sub
push
inc
jns
loopne
outsb
push
sub
stos
inc
fwait
clc
out
mov
cmc
mov
aas
fsubr
les
fildl
mov
push
mov
push
inc
xchg
push
adc
cmc
push
pop
or
sbb
in
sbb
mov
dec
push
and
jb
add
divb
mov
repz
insb
adc
mov
push
adc
pop
sub
insl
adc
dec
call
cmp
lahf
cmp
movsb
inc
mov
adc
int
inc
popf
or
xor
or
and
mov
shll
clc
and
mov
rol
mov
popf
arpl
xor
adc
out
fwait
js
dec
and
cmp
fsubrp
mov
sub
cmpsb
mov
es
rcll
mov
xor
loop
cmp
cwtl
std
and
adc
scas
sbb
sbb
push
push
pop
fwait
adc
inc
xchg
ja
or
mov
or
pusha
add
dec
out
cmp
aam
add
movsl
jno
lock
rorl
xchg
enter
sti
mov
in
outsb
pushf
dec
jecxz
fcmove
dec
xchg
insb
movsl
shrb
mov
dec
jmp
sbb
ljmp
cli
push
stc
rorb
stos
rcr
push
out
mov
int3
push
cmp
or
lods
push
push
mov
ja
mov
out
rclb
icebp
push
movsb
and
dec
ss
outsl
fistps
dec
xchg
aaa
or
xor
lds
jo
jae
fisubs
cwtl
inc
dec
sub
loop
jg
imull
es
dec
mov
cmp
and
dec
mov
xor
inc
mov
mov
cmp
jmp
das
add
fists
push
jb
sbb
pop
pop
mov
xor
lret
adc
test
xchg
shr
mov
lret
js
sub
push
sti
stos
ds
inc
jecxz
xchg
iret
cmp
decb
jb
insl
loop
cli
add
repz
sbb
mov
xchg
mov
addr16
xor
faddl
push
and
mov
pop
out
adc
and
mov
hlt
mov
and
xor
stos
dec
jo
or
lea
ret
jbe
pop
mov
ljmp
jo
push
or
push
movsb
mov
repnz
ja
adc
cmp
lea
mov
es
insl
hlt
repnz
out
cmp
jmp
xor
lock
scas
mov
pop
inc
mov
xchg
mov
or
xchg
iret
pusha
push
ja
inc
jmp
mov
inc
int
mov
lds
sarb
aad
xor
cli
pop
xchg
repnz
insl
and
xlat
mov
dec
jbe
repz
sti
cmp
in
movsl
xchg
mov
add
sub
jmp
aad
outsb
mov
popa
popa
ficomps
movsl
ss
sub
icebp
mov
mov
lahf
add
push
mov
xor
std
imull
clc
inc
repz
mov
adc
orb
inc
js
jg
cmpsl
pop
lahf
cmp
lahf
out
jbe
xchg
add
imul
aad
leave
arpl
mov
mov
inc
or
mov
xchg
imul
fsubs
xlat
push
aam
lret
cwtl
mov
mov
add
jmp
clc
dec
in
lds
pushf
jb
push
jnp
popf
inc
stos
ficoms
stos
mov
das
int3
lahf
iret
mov
stos
jne
xchg
jno
pop
imul
mov
add
repz
iret
leave
dec
ss
mov
pop
dec
add
shll
addr16
push
xor
data16
xor
xor
cld
lahf
fiaddl
inc
je
dec
lods
push
xchg
out
mov
or
mov
popa
xor
lods
push
je
fs
mov
ja
adc
or
test
popf
lret
sub
xor
xchg
jmp
inc
stos
mov
or
stos
ss
mov
sub
fs
loop
ficomps
mov
adc
push
adc
add
jp
push
stos
xor
xchg
mov
call
xchg
mov
lahf
sbb
dec
hlt
fbstp
cmp
mov
lahf
jle
pop
mov
aaa
push
call
jnp
loope
frstor
inc
jl
test
ja
addr16
jge
call
pop
inc
addr16
pushf
loope
stos
pop
test
pop
add
rclb
cmpsl
ror
in
mov
adc
shrl
cmp
mov
data16
sbb
mov
sbb
and
daa
pop
into
mov
cmc
gs
or
out
and
mov
xchg
cli
or
cmp
mov
xchg
push
and
or
call
pop
mov
adc
mov
add
adc
mov
int3
call
adc
mov
cmpsl
jae
pop
imul
xchg
test
push
cld
out
lods
lcall
out
fistl
sub
scas
fs
inc
sub
popa
sahf
in
fwait
mov
mov
or
scas
inc
stos
push
push
loopne
jae
aaa
enter
shl
aas
loop
fcomps
jns
mov
lds
stos
inc
pop
dec
jge
inc
fbstp
cwtl
notb
stc
iret
cltd
addr16
imul
nop
mov
dec
lods
pop
cli
loopne
pop
pmuludq
sub
movsb
push
sub
adc
icebp
mov
pushf
decb
xlat
inc
fwait
push
popf
out
push
lds
leave
cld
inc
popa
lcall
jecxz
jmp
lods
or
bound
hlt
push
mov
mov
lods
xchg
xor
mov
test
pop
iret
mov
popa
inc
xchg
minps
pop
in
sarl
xor
xor
lods
in
push
scas
ja
mov
test
fldl2t
xchg
xor
int
pop
int
cli
imull
int3
sub
dec
cltd
daa
jg
or
dec
hlt
or
cmc
ds
adc
xor
inc
out
test
sub
out
iret
sbb
add
cmp
mov
loope
adc
inc
and
jne
je
jmp
adc
adc
cmpsl
jl
test
xchg
mov
inc
mov
mov
orl
test
mov
push
imul
and
fisubrs
rcll
call
loop
movsl
pop
insb
jmp
notl
inc
mov
dec
push
jmp
call
fdivl
mov
nop
or
outsb
pop
mov
aam
mov
outsb
inc
fcomip
adc
dec
xchg
push
jmp
repnz
mov
pop
std
push
pusha
pusha
push
jle
rorb
bound
push
scas
lahf
xor
mov
mov
or
clc
rcll
cmpsl
and
pop
cmc
enter
out
push
and
pop
and
mov
jle
mov
mov
xlat
adc
push
jbe
stos
mov
xchg
pop
pop
inc
fcoms
out
cli
pop
lods
dec
mov
xor
pop
lds
in
rcr
imulb
adc
ret
fwait
xor
loop
gs
push
sti
mov
mov
mov
dec
lahf
sbb
and
mov
dec
xor
cmp
sub
xchg
jb
fldenv
dec
cmp
jno
pop
dec
push
lods
imul
mov
lock
cwtl
andl
pop
loopne
in
mov
call
cmp
insl
mov
cmp
movsb
loop
shrb
imul
xchg
fistl
push
xor
out
or
push
out
aas
xchg
push
fildll
nop
jo
clc
sub
sub
rcr
lds
int3
adc
sti
out
pusha
xor
jne
ret
pushf
mov
movsl
lcall
gs
daa
loope
sbb
out
das
lcall
mov
inc
mov
pop
or
inc
testb
dec
incb
jne
pusha
pop
xchg
add
fst
mov
sbb
mov
lock
and
jmp
es
mov
adc
pop
outsb
sbb
cli
ret
mov
pop
outsl
in
daa
cmp
ret
ljmp
addr16
popf
sub
xchg
scas
sbb
adc
bound
mov
hlt
fs
jecxz
jge
lahf
cmp
test
fimull
data16
cs
and
cmpsl
inc
faddp
xchg
cli
int3
inc
or
sbb
jb
adc
inc
ss
xchg
jle
sub
mov
rolb
out
cmpsb
add
cld
adc
and
mov
and
push
fwait
adc
ret
shl
xor
sbb
xchg
or
test
jb
mov
and
andl
push
cltd
fnstcw
inc
sysret
or
js
adcb
fadds
loope
pop
shrb
mov
jno
or
add
mov
inc
or
mov
cmpl
daa
push
iret
iret
push
jns
insl
scas
inc
lock
xor
sub
in
adc
es
adc
aam
repnz
push
or
inc
sbb
repnz
jp
cmpsl
jmp
cmp
lods
sub
sbb
push
adc
mov
pop
jmp
lcall
inc
pop
fsubrp
ljmp
adc
pusha
cmp
insb
stos
add
cmp
cmpsb
mov
dec
js
test
dec
outsl
leave
int
adc
xchg
xchg
xchg
jbe
xchg
lret
aad
jnp
and
test
fildl
cwtl
cmp
sbb
shll
mov
std
mov
das
sbb
mov
fwait
negl
shlb
ret
cmp
mov
pop
add
imul
adc
rorl
mov
sbb
jp
pushf
mov
push
aas
jg
dec
jbe
xor
enter
rcr
xor
sbb
or
xchg
inc
pushf
jmp
or
mov
repz
rcrl
in
and
xchg
fnsave
movsb
out
or
push
mov
cld
add
pop
mov
js
mov
outsb
movsb
fisttpl
jp
mov
dec
push
fimull
mov
add
jl
push
mov
aaa
jb
ret
das
std
sub
clc
add
or
pop
cmpsl
ret
mov
and
dec
inc
mov
mov
xor
mov
inc
pop
xor
and
fstpt
cmp
dec
xor
pop
addb
pop
ja
inc
fisttpl
shl
jnp
adc
dec
in
jle
cmp
outsb
sub
cmp
test
mov
push
cltd
sbb
jmp
inc
insb
push
cmp
xor
outsl
add
adc
pop
rcll
les
fdivrl
lock
dec
cs
and
call
inc
pusha
dec
jne
popa
addr16
mov
dec
mov
jo
or
inc
pop
inc
call
xchg
xchg
sbb
mov
stc
mov
and
jo
iret
xchg
mov
and
xor
mov
and
neg
lsl
push
aam
fsts
sbbb
dec
jb
mov
or
je
push
fiaddl
cmc
push
sbb
and
stc
fdivrl
adc
or
mov
cmpl
fisubl
or
push
push
inc
sbb
in
pop
call
xor
mov
mov
nop
hlt
mov
add
xor
xorl
cmp
push
sub
push
outsl
adc
notl
test
mov
push
fdivs
test
push
mov
jne
fdivrl
fwait
sbb
jbe
and
insb
call
dec
repnz
rcpps
das
add
loop
lcall
ret
imul
in
sbbb
sub
mov
jmp
add
in
push
jmp
out
xor
fstp
mov
rcl
pop
inc
dec
and
stos
dec
add
mov
and
insl
loope
xor
test
test
xchg
mov
test
inc
adc
scas
sbb
jmp
shll
adc
pop
dec
cmp
addr16
stos
nop
jnp
pop
adc
and
add
adcl
cli
loop
ss
sub
fwait
dec
cwtl
mov
sahf
sarb
mov
mov
out
dec
pushf
shlb
cmp
push
aam
pop
mov
sahf
jb
sub
adc
sub
mov
or
icebp
inc
xlat
fnstenv
aas
adc
pop
jge
imul
adc
insl
xchg
loopne
nop
mov
loopne
pop
sbbb
jmp
pop
pop
xor
cmp
sub
xchg
pop
test
sbb
sbb
stc
mov
push
jecxz
je
sarl
jp
push
lcall
push
mov
roll
cmpsb
sbb
cmp
je
inc
push
sbb
dec
jp
push
clc
dec
and
jo
out
and
xchg
imulb
outsb
jae
jge
leave
adc
push
sbb
fistpl
shll
push
sbb
xor
sbb
push
in
jmp
cmp
mov
or
js
pop
insl
or
or
jbe
fmul
xchg
xchg
mov
fcmovnbe
stos
std
dec
das
mov
sahf
std
mov
add
aam
imul
in
or
push
pop
push
push
enter
mov
xchg
adc
or
rcrb
cmpsl
loop
jge
xchg
addr16
ret
jl
call
imul
mov
adcb
mov
inc
std
and
add
mov
mov
mov
mov
rcl
scas
sbb
add
in
test
mov
int3
and
cmc
pop
mov
sbb
mov
int
adc
inc
lret
push
mov
and
repz
pop
popf
fsubs
add
out
sub
call
hlt
mov
push
jmp
xchg
test
dec
adc
push
push
dec
ljmp
jns
push
fucom
es
pusha
add
cmc
cmpsl
pusha
inc
scas
mov
fildl
loop
gs
bound
pop
out
lret
cmpsl
adc
aaa
inc
mov
or
pop
mov
adc
xchg
fwait
mov
fwait
cmpsb
jb
popf
and
arpl
add
and
fs
ret
jp
jae
dec
test
ret
lds
mov
loopne
sahf
add
pop
int3
xchg
jae
jne
inc
fisttpl
pop
test
mov
jno
lds
cmp
dec
sbb
cmp
test
add
push
loop
ss
stos
adc
pop
cmp
sahf
cli
test
xor
jle
fbstp
aaa
mov
mov
repnz
jb
ret
dec
sub
xchg
inc
adc
inc
fadds
aam
rcll
add
fstl
addr16
fcoms
pop
out
pop
or
xchg
das
nop
aaa
test
loop
in
mov
sub
lods
call
fs
xor
mov
mov
xor
and
test
sbb
outsl
imul
cmp
jno
scas
adc
stos
push
mov
xchg
dec
lods
imul
test
push
sahf
sub
xchg
aaa
inc
push
mov
inc
pop
lahf
mov
cmp
and
xchg
loope
test
stc
jne
cmp
int
xchg
push
cmpsl
dec
nop
ror
mov
int3
lahf
sub
je
or
cli
pop
fadds
and
test
outsb
ss
sbb
cmp
cld
dec
cmpsb
sub
sub
insb
lret
or
int3
rorb
xchg
and
das
data16
insb
out
out
in
cmp
add
out
fwait
inc
or
mov
fistps
inc
aam
mov
cmp
adc
sub
inc
bound
repz
inc
pop
sarl
scas
xor
test
adc
nop
mov
imul
xchg
cs
xchg
lahf
sti
mov
les
into
test
add
ret
push
jl
inc
push
sbb
push
call
add
daa
push
xor
ffree
lds
movsb
sbb
mov
jno
sar
popa
ljmp
mov
xchg
stos
sub
ds
adc
arpl
test
rcr
dec
inc
add
and
push
fstl
fldt
test
pop
pop
pop
cmpb
sbb
adc
mov
imul
int3
jmp
cmp
add
cwtl
pop
cmp
stc
fidivrl
cli
in
cmpsb
jnp
mov
jo
push
jb
in
data16
out
xor
fmulp
push
mov
fadd
into
lea
fs
fs
hlt
jmp
push
jle
pop
or
add
lret
cmp
out
sub
or
pop
dec
pop
test
adc
lock
scas
jo
mov
sub
ret
xor
lcall
add
dec
pop
sbb
test
in
fsubrl
outsl
repnz
xchg
pop
adc
repnz
popa
loopne
andb
dec
es
aam
push
outsb
sbb
sbb
pop
clc
sar
inc
cltd
push
adc
out
mov
cmc
lcall
add
test
pop
movsl
or
out
pop
fldl
aam
mov
sub
popa
mov
das
fistpll
sbb
mov
cmp
movsl
popa
loop
addb
push
sbb
xchg
fs
pop
js
sbb
mov
loop
push
xor
pop
sbb
jge
cltd
push
pop
inc
sub
stos
in
aad
mov
cmp
jecxz
jmp
mov
test
jns
push
sbb
inc
scas
pop
cli
push
ss
sub
sti
or
and
xor
popa
mov
push
movsb
in
cmpsb
push
cmp
or
sub
testl
push
addb
mov
dec
xchg
or
pop
lods
sarl
pop
sbb
ss
cmp
dec
data16
stos
pop
stc
shll
sbb
xchg
lock
pop
movsl
cmpsb
push
rcr
outsb
sbb
mov
cwtl
call
xor
sbb
sub
es
das
fadds
and
std
mov
push
movsl
sub
pop
inc
mov
jne
shrb
pop
adc
push
mov
mov
pop
xor
aam
in
push
mov
adc
xor
adc
icebp
data16
dec
mov
push
mov
push
push
xor
sbbb
push
sub
jmp
cmp
cmp
xorl
or
shrb
add
xchg
rorb
lahf
adc
inc
xchg
push
jp
lea
xchg
add
sub
push
and
mov
rcll
push
sbb
adc
mov
lods
hlt
mov
cmpsb
push
jecxz
jo
xchg
lods
sbb
cmc
sbb
push
int3
lds
shrl
cltd
pop
xor
aas
in
lock
xchg
push
mov
inc
addr16
movzwl
ret
push
mov
push
sbb
inc
sbb
inc
test
mov
xor
and
shlb
inc
jb
stc
insl
mov
mov
cwtl
es
fwait
ret
xor
in
xchg
cmp
cmp
std
jp
mov
mov
je
jle
add
clc
sbb
ljmp
rolb
loopne
add
fstps
lock
jae
roll
stos
mov
sahf
ret
adc
in
jl
sbb
in
clc
pop
jp
xchg
mov
xchg
xchg
push
push
clc
xchg
lea
mov
mov
sbb
imul
jle
std
std
mov
mov
push
add
rorl
pop
xlat
lods
out
pop
xchg
dec
dec
push
flds
sub
addr16
fwait
in
xlat
das
int
pop
push
aad
sub
inc
test
mov
lds
into
aam
mov
dec
repnz
int3
pop
movsb
mov
jno
movsb
in
pop
sub
mov
ljmp
out
pop
dec
xor
and
adc
test
sbb
enter
add
in
xor
mov
jl
and
sahf
gs
mov
dec
push
dec
add
stc
pop
xor
jp
testl
xchg
lret
js
bound
xor
sub
adc
sub
push
push
lret
das
jno
pop
ja
rcll
fildl
jb
movsl
xor
cmp
loopne
popf
dec
aaa
dec
jae
cmp
mov
add
and
or
cmp
pushl
xchg
dec
cmp
stos
dec
cmpsl
jp
sub
sub
adc
lds
or
lcall
dec
add
movsb
xchg
inc
xlat
enter
cmp
or
fidivs
insl
int
jb
cmp
ja
jo
add
adc
std
insb
push
xchg
add
jne
ret
xor
dec
test
mov
mov
gs
dec
lcall
jge
in
cmp
ret
adc
scas
sbb
push
inc
adc
push
std
and
fiadds
stc
mov
shll
and
sbb
jecxz
fists
fdivl
pop
dec
mov
and
push
ss
xor
ljmp
lret
mov
out
roll
mull
xchg
scas
cmp
xchg
insb
mov
gs
scas
xchg
scas
pop
aam
orl
fistl
mov
cltd
or
mov
add
jnp
int3
faddl
sub
pop
jl
jb
xor
adc
mov
mov
or
sub
inc
rorl
lods
addb
mov
fcmovne
jbe
outsb
test
adc
mov
jo
pusha
test
xchg
call
dec
ss
mov
out
stos
movsl
dec
outsl
add
jne
das
mov
lcall
out
or
jne
jae
adc
out
daa
jecxz
scas
test
sbb
add
mov
imul
push
jmp
push
out
pop
fcomi
jl
adc
adc
rcrb
cmpsl
pop
pop
jb
jns
inc
sbb
lods
pop
call
inc
cmp
aad
in
cmp
aad
addr16
xchg
jmp
mov
test
test
das
xchg
repnz
adc
xchg
dec
lret
test
mov
mov
add
sub
cmc
lcall
in
repz
xchg
pop
and
jmp
sbb
push
sub
in
outsb
in
stos
rclb
cmpb
stc
dec
imul
mov
aad
lods
and
pop
ror
add
mov
incl
jle
mov
cmp
and
lods
push
mov
jle
push
sub
scas
adc
xlat
or
and
into
enter
jg
push
jecxz
sub
cltd
inc
sbbl
aaa
add
int
out
fstl
sub
lret
fs
or
pop
mov
out
adc
fldt
jmp
push
pop
and
inc
xchg
push
lcall
or
dec
dec
jnp
jle
dec
xor
mov
test
or
mov
pop
dec
dec
and
push
add
das
xchg
xchg
stos
dec
rol
add
or
rclb
scas
inc
arpl
push
cmp
addr16
xchg
lods
add
loop
mov
pop
mov
js
out
out
outsb
imul
hlt
push
stc
cmpsb
lret
sarb
xchg
push
mov
mov
pop
aas
push
pop
pop
pusha
in
sub
cli
js
jbe
add
stc
shlb
popa
xchg
xchg
lods
scas
cmp
pminsw
mov
xlat
jnp
aam
ss
in
ja
fstl
ret
mov
in
daa
adc
pop
jnp
push
jno
pop
dec
inc
mov
ljmp
push
out
xlat
push
jns
or
aaa
loope
push
xor
pop
mov
test
fisubs
fsubr
pop
and
add
rcrl
outsb
out
int3
sti
mov
push
jl
lds
cmc
mov
mov
adc
clc
pop
xchg
clc
cmpsl
dec
xor
lea
neg
int3
in
push
nop
jmp
jbe
pop
scas
sbb
fstpl
cld
ret
outsb
or
sub
push
or
sbb
loopne
xchg
aas
iret
sub
pop
push
or
outsl
nop
mov
and
adc
mov
shrl
or
jg
pop
je
mov
sti
mov
inc
mov
xchg
jmp
xor
and
mov
fisttpll
out
insl
cwtl
ret
gs
hlt
addr16
lret
add
cltd
pop
ljmp
repnz
rcl
jmp
jecxz
mov
das
je
leave
lock
xchg
push
jns
sbb
rcrb
xchg
insl
mov
rclb
add
bound
adc
movsl
xchg
fldcw
cld
je
mov
lret
sub
pop
movsl
jno
inc
pop
inc
nop
out
ljmp
cltd
inc
mov
aas
adc
aam
fidivrs
push
inc
mov
ficompl
pop
aaa
ljmp
outsl
icebp
rolb
mov
pmaddwd
js
jb
sub
jge
test
xor
movsb
sti
jbe
dec
cmp
imul
push
inc
mov
jno
mov
fisttps
lcall
daa
scas
xchg
shl
dec
and
movsb
adcl
lea
outsb
out
fldl
pusha
loop
arpl
popa
push
pop
popw
cmp
mov
or
inc
or
in
aam
pushf
stos
add
mov
pushf
jae
mov
pushf
and
lods
add
jge
jl
call
enter
clc
pop
ret
sub
xor
aaa
cltd
push
inc
subl
push
jg
or
in
push
add
dec
adc
cli
mov
sbb
daa
push
int
dec
fdivrp
cltd
mov
out
aad
cmp
xchg
scas
dec
adc
adcl
je
adc
xchg
scas
xchg
sub
pop
insb
jne
test
int3
jo
inc
xlat
fwait
push
int
icebp
mov
mov
inc
test
sub
jg
add
or
lret
push
or
lret
mov
mov
ja
btr
mov
mov
data16
mov
lods
mov
addr16
icebp
mov
cmp
push
cmp
mov
adc
and
push
sub
stos
cmp
mov
outsb
mov
clc
pop
subl
nop
leave
cltd
jnp
jbe
cmpsl
mov
xlat
outsl
aad
shl
jge
gs
arpl
fisubl
into
outsl
lds
or
xor
mov
push
mov
and
pop
inc
mov
out
mov
stc
mov
and
pop
mov
outsl
jae
inc
adc
cmp
push
loope
inc
push
test
jmp
imul
jb
sbb
jo
repz
add
push
cmp
addl
sahf
inc
push
imul
aam
popf
inc
or
pop
lds
pop
sbb
icebp
inc
xor
pop
push
push
ljmp
pop
mov
in
jnp
sti
bound
test
dec
ds
in
iret
lods
pop
push
mov
mov
shlb
sti
aam
cmpsl
lods
test
in
xor
shll
push
mov
scas
out
in
or
dec
cmc
jbe
sub
repz
mov
inc
cld
mov
test
das
pop
mov
int3
leave
aad
xlat
dec
imul
fcompl
pmaddwd
xlat
popf
add
dec
shrb
jbe
imul
inc
mov
cmp
jne
enter
push
dec
jmp
addr16
shl
jle
pop
js
ss
jno
ficomps
pop
or
sub
adc
scas
cmp
sbb
fsubrs
pop
or
mov
ret
in
dec
jle
or
mov
mov
push
inc
fstps
dec
ret
mov
notb
out
lret
mov
push
movsb
cmp
call
xor
ret
cmpsb
cwtl
jbe
cmpl
pop
sarl
fwait
dec
add
inc
bound
les
pop
inc
xchg
mov
movsb
icebp
cmp
out
not
and
jne
and
or
jge
push
ret
cmp
sbb
push
imul
popf
bound
sarl
cwtl
xchg
jbe
sarl
jbe
repz
outsb
movsl
into
mov
mov
dec
sub
adc
mov
mov
cmpsb
popf
gs
or
jne
bound
ficomps
adc
push
add
sub
or
sbb
jmp
scas
imull
add
pusha
das
test
and
daa
inc
out
adcb
mov
mov
hlt
jg
adc
inc
andb
mov
jbe
inc
cmc
in
mov
sub
test
int3
and
xchg
pop
lods
out
jle
jecxz
mov
adc
lret
pushf
std
icebp
pop
aam
or
stos
cmp
stc
cmc
mov
out
push
mov
pop
int3
std
das
jae
rcrl
dec
fcom
imul
imul
pop
cmp
push
sub
mov
fildl
insb
movsb
and
dec
jne
icebp
adc
adc
fisttps
shlb
jne
mov
call
sbb
adc
mov
aas
xor
mov
add
push
cmp
xor
push
pop
mov
scas
jl
dec
add
fnsave
cmp
out
mov
fcomi
fldl
mov
jb
push
enter
lahf
std
jb
cmp
pop
outsl
ret
push
xchg
dec
mov
mov
popa
cltd
cli
cmpb
mov
push
pop
lods
hlt
repnz
cmp
mov
xlat
lods
inc
stos
jnp
loopne
or
jmp
and
push
sbb
shl
inc
jne
dec
pushf
cmpsb
jge
or
add
inc
jne
cmp
mov
sbb
xlat
out
scas
dec
sbb
mov
into
movl
pop
repnz
xchg
mov
flds
cmpsb
push
out
lcall
mov
insb
mov
and
data16
imul
add
cmp
lods
xor
jmp
sbb
xchg
cwtl
stos
push
add
adcl
or
add
inc
sarl
and
xor
adc
mov
push
lret
daa
movsl
or
mov
repz
shlb
xor
add
addl
adc
adc
jnp
loopne
cmp
jge
sahf
in
cld
mov
insl
fisubl
mov
push
cmpsb
xchg
enter
out
inc
and
mov
sub
shr
sbb
lcall
cwtl
das
inc
xchg
loope
outsb
add
imul
jne
sti
mov
scas
pop
imul
mov
xchg
int
dec
clc
adc
ficoms
ss
fnsave
jmp
nop
aad
jmp
xchg
xorb
mov
mov
pop
stos
sub
dec
push
test
xchg
adc
movsl
imul
aad
outsb
inc
xchg
mov
pop
ja
fmuls
inc
stos
add
mov
outsl
xchg
jnp
or
xor
gs
in
cmc
jl
enter
jb
cltd
adc
lds
or
xchg
iret
into
cmc
addr16
pop
xor
popa
dec
imul
xchg
test
lea
sar
js
hlt
xor
mov
shr
in
and
div
sub
outsb
je
rcrl
push
add
jno
fcomps
mov
or
lret
movsl
xchg
fistps
push
xchg
mov
add
xchg
rcr
dec
xchg
fimuls
lcall
dec
ret
js
call
std
jbe
sbb
cltd
pop
in
xor
out
push
jmp
pop
jae
sti
rcll
test
jg
sbb
push
aaa
roll
add
and
pop
xchg
in
cmp
ret
mov
repnz
mov
or
push
add
jo
into
and
shlb
mov
mov
and
adc
icebp
sub
inc
mov
adc
ret
dec
repz
push
pop
nop
mov
jp
inc
fsubs
mov
ret
xchg
enter
xor
push
sbb
lods
out
orb
ds
enter
cmpsl
outsb
daa
xchg
daa
sbb
out
inc
jl
inc
sbb
mov
inc
arpl
mov
cmp
mov
jnp
ljmp
fucom
sub
inc
sbb
aaa
push
pop
push
mov
pop
ja
ret
pop
in
adc
mov
mov
pusha
sbb
jp
imul
filds
ljmp
out
inc
dec
add
outsl
test
pop
insl
div
pop
lds
stos
xlat
lds
cmpsl
stos
js
mov
mov
mov
insl
mov
clc
jle
push
xor
fwait
cltd
dec
fisttps
xchg
enter
gs
pop
push
push
fnstenv
les
repz
jns
outsl
jnp
clc
imul
mov
and
mov
xor
mov
jae
xchg
nop
push
mov
cmp
and
jo
mov
jno
cmc
mov
out
and
sbb
cmp
mov
mov
addr16
push
test
popf
test
shlb
xchg
mov
repz
sbb
sbb
es
lods
cmpsb
ret
xor
rcrb
hlt
nop
fdivrl
and
jae
cmp
jmp
push
loope
jecxz
bound
sub
sub
loopne
adc
xchg
sbb
cld
xchg
andb
cmp
sbb
push
jecxz
mov
cs
rcrb
xchg
push
sub
out
jmp
and
push
lods
aaa
mov
dec
iret
and
outsb
movsl
fistpl
test
adc
cmpsb
lret
cmpb
xchg
arpl
mov
cmp
daa
fbstp
cmp
xor
lds
sbb
shlb
pushl
out
ljmp
rcll
fildl
cmp
cmp
ds
les
mov
pop
sbb
stos
mov
loopne
pop
loopne
sub
mov
fmuls
push
cwtl
data16
pop
xchg
ret
dec
mov
mov
lods
idivb
dec
clc
in
dec
dec
test
inc
imul
inc
in
in
xchg
push
or
rolb
sahf
in
cmp
jnp
je
mov
movsb
mov
test
gs
out
adc
out
push
add
aad
lods
mov
hlt
sub
subb
xor
xchg
mov
insb
sbb
in
arpl
sub
in
mov
dec
mov
push
sub
cs
sahf
and
mov
call
or
test
hlt
jnp
outsb
xchg
out
push
addr16
aas
clc
fsubp
call
jo
dec
jbe
jnp
xchg
sub
filds
aam
movsl
fdivl
mov
sub
sub
out
or
cmp
pop
stc
in
fs
lods
adc
daa
in
cmpsl
mov
int3
or
test
cmp
clc
push
fsubr
xlat
push
or
inc
rep
aaa
mov
jno
push
inc
dec
push
sbb
inc
in
pop
and
sbb
lods
xor
pushf
out
clc
inc
mov
inc
inc
popa
les
adc
stos
push
aam
ret
ljmp
in
js
mov
call
sub
cmc
mov
iret
cmc
cmpsl
pop
xchg
jmp
jae
fincstp
rorl
cltd
das
jmp
dec
xor
push
daa
cmp
or
shl
sti
mov
pop
xchg
dec
mov
xchg
call
jl
jle
out
stc
pop
scas
adc
pop
shl
push
inc
loope
or
sbb
pusha
adc
subl
andl
xchg
jno
incl
pushf
adc
push
out
pop
les
shrb
jg
sarl
je
push
subb
popa
sbb
cltd
cmp
fwait
sahf
or
ret
fmul
scas
xchg
push
addr16
cltd
bnd
pop
ljmp
addb
ficomps
inc
push
add
mov
imul
in
das
mov
out
jmp
cmp
repz
pop
leave
and
iret
hlt
scas
inc
cmp
inc
pushf
and
xor
push
ret
cmp
cli
jecxz
imull
addl
cmc
add
mov
jae
xor
loopne
dec
and
aam
out
mov
push
push
btcl
stos
scas
enter
hlt
test
subl
stos
jecxz
pop
popa
xor
adc
bound
mov
add
insl
mov
or
ljmp
xorl
push
xor
pop
jo
std
dec
cwtl
imul
pop
das
movsl
mov
pop
dec
mov
pushl
cltd
ret
sub
xchg
lcall
push
and
mov
dec
adc
ss
cmp
rcrb
push
sbb
adc
rcll
je
inc
into
in
fwait
lcall
pusha
adcl
pusha
jmp
fst
jg
fadds
fdivr
adc
pop
xor
mov
pop
pop
inc
test
jg
enter
jmp
push
jne
mov
or
jl
xor
xchg
jg,pn
sub
mov
and
add
cwtl
mov
jmp
inc
sub
test
cld
inc
test
mov
jae
push
dec
fs
and
loopne
rolb
lock
add
daa
inc
stos
adc
lea
pop
cltd
pop
fnstsw
bound
outsl
lcall
push
pop
dec
dec
dec
sub
mov
movsl
inc
xor
xchg
sbb
dec
into
sub
fbld
in
ljmp
xchg
lret
adc
dec
add
push
fcomi
add
clc
js
push
mov
dec
jnp
cmc
ss
push
out
ja
ret
pop
mov
popf
cmp
push
jp
xchg
insb
test
adc
pop
dec
mov
repz
addl
pop
xlat
mov
in
shl
repnz
hlt
lcall
xchg
inc
push
lret
in
pushf
inc
shl
mov
bound
cs
insb
dec
fs
mov
ljmp
dec
xor
imul
mov
fstl
inc
hlt
xor
jecxz
loop
mov
sahf
loop
dec
aaa
loope
lret
mov
mov
push
cmp
and
je
xchg
push
inc
mov
jb
xchg
mov
push
lock
shll
dec
push
cmp
rol
and
mov
push
dec
and
divl
adc
in
popa
filds
je
mov
sbb
aam
mov
sbb
mov
adc
out
add
aas
test
adc
rep
push
inc
repnz
repz
or
push
or
js
lcall
or
push
adc
cmc
in
loop
sbb
pop
sbb
lcall
xlat
jg
inc
mov
into
jmp
fisubrs
or
jb
cmc
pop
scas
out
mov
into
adc
xor
in
je
xor
ficoms
andl
cmp
repnz
ja
aam
mov
jns
jae
sbb
lock
xor
lods
add
fsubl
jb
cmp
mov
cmp
out
add
or
inc
pop
ret
out
inc
in
pop
mov
sbb
jns
add
jmp
vcvtpd2psy
repnz
jnp
mov
and
outsl
ret
lods
lret
adc
cmpsl
sbb
pop
dec
in
mov
pop
lret
mov
call
cmp
fcomps
aam
mov
mov
daa
jl
movsb
jp
sbb
pop
andl
lods
mov
adc
xor
and
add
xchg
jb
sub
out
add
cmp
lds
push
in
pop
push
inc
mov
pop
sub
mov
je
jno
mov
mov
or
in
mov
out
fbstp
dec
sti
xor
stos
and
es
pop
jnp
rol
adc
mov
sar
adc
test
lret
push
pop
jns
shlb
loope
sub
aad
gs
inc
jl
lds
scas
out
cmp
mov
je
xchg
xchg
mov
sahf
sbb
insb
and
ror
jno
mov
cmp
jge
adc
mov
ds
je
lret
inc
cmp
adc
pop
sbb
adcl
push
xchg
mov
lea
dec
in
mov
lea
xor
jl
imul
and
jnp
aad
clc
test
push
and
mov
scas
inc
add
jge
cmpsl
sbb
cvtpi2ps
je
pop
imul
call
sub
sub
fstpt
xor
sub
ss
mov
jae
sub
adc
sti
incb
sbb
sbb
dec
cmp
je
xor
shrb
testb
or
ss
pop
push
adc
lods
hlt
aad
decl
jg
and
jecxz
shufps
mov
sahf
pop
jge
inc
cmp
rolb
movsl
jbe
pop
inc
rcrb
sahf
mov
dec
rcll
xlat
popf
pop
sub
jge
xor
stc
sarb
jl
clc
stos
pop
sbb
jp
xchg
je
adcl
inc
xchg
sub
movsl
mov
jge
xor
dec
adc
push
faddl
aaa
xor
outsb
test
in
jo
pop
ret
shlb
dec
inc
pushf
jnp
inc
stc
andl
stc
sbb
xor
dec
pop
mov
lret
in
pop
inc
add
ss
in
cmpsb
ljmp
or
out
xchg
cli
shlb
idiv
push
xor
pusha
mov
je
inc
cmpl
mov
push
xor
mov
insl
pop
or
nop
jmp
mov
test
lods
pop
and
lock
and
mov
sbb
fwait
push
pop
repz
mov
and
arpl
mov
sar
or
pop
xor
mov
js
test
or
js
enter
sbb
mov
idivb
push
cmp
ljmp
dec
pop
pop
fsub
add
lret
sbb
or
xchg
js
adc
das
and
pushf
fists
daa
pop
dec
dec
mov
xor
mov
gs
adc
fs
cld
bound
lods
data16
jecxz
jle
les
add
sti
push
ja
int3
push
dec
jb
lahf
test
mov
lods
dec
xor
outsb
pop
rcr
hlt
mov
cld
or
sub
cld
sbb
sub
or
mov
inc
test
pop
ds
movsl
in
rcrb
adc
add
ret
pusha
mov
fiadds
dec
test
das
xor
mov
inc
mov
popf
lcall
jg
fcoms
dec
hlt
popa
jns
mov
add
pop
cmpsb
xchg
sub
fdivr
in
xor
inc
inc
xor
int3
xchg
xchg
test
les
sub
insb
stc
push
pusha
cli
sub
sbb
xchg
repnz
stos
pop
adc
pop
rcll
adc
pop
adcl
lcall
int
mov
insl
imul
cld
test
sub
pop
out
push
fnstsw
test
or
jge
add
lods
dec
aas
cmc
push
adc
dec
testb
test
testl
xlat
sub
out
insb
ret
mov
stos
add
xchg
pop
mov
hlt
add
add
ds
inc
xor
outsb
in
lcall
addr16
jns
in
cmpsl
stos
sub
jae
pop
jl
ret
lcall
icebp
lahf
pop
xor
add
out
ret
sub
inc
push
xlat
push
mov
pop
xchg
bound
pop
sub
movsl
test
push
dec
or
and
fwait
inc
push
mov
stos
xchg
cmp
fs
mov
les
inc
shrb
icebp
popf
scas
outsb
aaa
jno
int
push
jo
sub
movsb
inc
sbbl
sbb
mov
xor
stos
xlat
push
fstps
xor
aam
xchg
xchg
cmc
dec
jns
mov
out
addr16
mov
imul
popf
and
mov
push
push
fwait
cltd
fisubs
xor
in
sbb
iret
out
xchg
lods
push
inc
popa
ret
push
pop
jecxz
imul
lds
pop
enter
mov
or
test
lahf
add
pushf
daa
call
aad
and
xchg
loop
gs
lahf
dec
jns
dec
mov
jnp
and
jno
addr16
ljmp
jp
imul
inc
sarl
loop
scas
mov
outsl
cli
sub
int3
xorl
dec
pop
sahf
jecxz
rorl
xor
div
xchg
mov
adc
push
fdivl
insl
out
add
xor
cmp
mov
shr
cmpsl
mov
int
or
aas
and
idivl
xor
xor
rep
sbb
mov
cld
loope
aaa
push
sbb
jle
push
sbb
scas
inc
mov
sahf
mov
adcl
pop
pushf
stos
fstpt
pop
enter
pop
or
je
mov
test
loop
jbe
ficompl
daa
jle
out
aad
sub
fnstcw
enter
fldcw
pop
icebp
mov
mov
adc
push
cld
xchg
daa
jg
adc
lret
cmp
fs
dec
inc
jg
or
dec
and
scas
mov
aas
mov
popf
test
push
and
repnz
in
imul
lret
push
cmp
mov
mov
pop
sbb
sub
adc
cmp
pop
les
sbb
mov
sub
scas
les
cmp
fidivl
out
adc
data16
mov
and
dec
mov
fldl
add
js
outsl
adc
add
bound
adc
psubb
jp
cwtl
out
arpl
or
jg
inc
ret
push
or
test
sub
popf
dec
sar
cltd
pushl
and
jbe
inc
mov
aam
scas
rcll
cs
sub
inc
mov
loope
or
test
xor
cltd
jge
lock
notl
jb
adc
int3
inc
cmpsl
js
or
or
adc
or
or
xchg
pop
jle
and
sub
outsb
push
push
arpl
mov
shl
iret
cmp
rcl
test
loope
ds
cmp
cli
in
aas
inc
add
xchg
aam
sbb
pop
sub
pop
ret
lock
jecxz
aam
std
outsl
test
sbb
adc
jg
or
in
push
jecxz
fadds
js
pushf
mov
clc
ret
xchg
mov
shll
lods
call
jmp
mov
out
fisubrl
push
pop
repnz
add
mov
cmc
jle
add
adc
je
cmp
outsl
mov
add
push
push
into
xchg
ds
dec
mov
out
cmp
sahf
gs
rcrl
push
popa
xor
jb
mov
adc
out
mov
notb
push
cld
js
mov
arpl
cmpsb
xchg
mov
pop
mov
enter
imul
xor
daa
gs
add
add
mov
xchg
and
adc
enter
mov
es
push
imulb
mov
add
shrd
inc
inc
adc
inc
pusha
dec
or
and
jo
add
fsubr
insl
pop
stos
adc
mov
mov
std
pop
lods
mov
xor
orl
and
or
clc
or
loope
enter
jp
add
mov
xor
dec
ds
aad
sub
pop
insb
cmp
fcmovbe
adc
cmc
sbb
lods
leave
sbb
loop
negl
xchg
mov
inc
stos
xor
stos
adc
jno
ss
enter
pop
lods
pop
out
mov
push
sahf
mov
das
add
int3
mov
rcrb
push
push
push
cmpb
pop
cmp
mov
rol
cmp
fwait
push
pop
dec
and
cmp
in
adc
xchg
xchg
push
sub
out
out
or
in
int
push
mov
popa
adc
sbb
mov
int
mov
sub
stos
xor
cmc
mov
hlt
inc
aad
xor
aad
or
ret
mov
or
cli
mov
je
xchg
xchg
pop
scas
clc
sbb
push
inc
aad
dec
aaa
sti
movsl
adc
sub
xchg
adc
testb
adc
add
ret
and
aad
and
out
jbe
repz
inc
mov
loop
pop
mov
scas
test
adc
out
pop
mov
flds
fdivrp
gs
mov
dec
rcrb
fnstenv
data16
ja
loopne
js
fld
jp
jbe
mov
pop
or
mov
ja
and
imul
cmp
loopne
and
sub
sbb
jb
sbbl
fildll
inc
mov
push
cmovne
jo
fadd
cmp
lods
movsl
and
mov
bnd
xorb
mov
xchg
int
cmpsb
xor
std
mov
xchg
xchg
ja
sarl
or
adc
mov
hlt
cmpsb
sbb
inc
push
sbb
xchg
sbb
cmp
jae
sub
mov
nop
or
arpl
leave
jb
xchg
mov
xchg
dec
ret
inc
enter
sbb
cmp
mov
subb
repz
and
push
mov
fisubrl
in
cmp
sbbl
inc
je
rsm
push
in
adc
ffree
mov
mov
inc
je
out
cli
add
sub
push
aad
pop
sti
imull
pop
push
push
add
call
leave
scas
cmp
sbbl
pop
cld
mov
mov
xchg
mov
push
fsubrs
mov
outsl
jmp
mov
cli
test
repz
iret
hlt
inc
cmpsb
outsl
lods
nop
movsb
ja
pop
iret
xor
mov
dec
adc
int
or
jo
arpl
out
lods
out
mov
inc
lret
mov
push
idivl
xchg
mov
adc
int
xchg
insl
push
cli
gs
lds
imul
arpl
andb
mov
ss
pop
jb
sbb
insb
sbb
imul
mov
sti
xor
daa
repz
push
cmp
aaa
iret
aad
pop
add
scas
movsl
testl
add
cwtl
es
gs
mov
and
ret
sbb
jne
mov
lcall
mov
jmp
insb
mov
mov
mov
pop
sub
jb
pop
js
inc
pop
xor
inc
sub
add
or
movb
mov
shr
or
and
cmp
bound
in
cmc
sarl
inc
fs
lds
pop
xor
dec
dec
pop
test
addr16
xor
lea
das
bound
and
xor
sub
adc
push
les
mov
lret
pop
fildl
jge
inc
mov
pusha
out
or
mov
lahf
lahf
iret
ss
mov
loopne
nop
stos
add
inc
sbb
imul
cmp
dec
pop
call
ja
pushf
int3
filds
or
pop
imulb
pop
mov
in
dec
mov
mov
xchg
subb
mov
hlt
mov
pushf
popf
repz
add
ljmp
in
cmp
jmp
rcl
jmp
xchg
pop
fistpll
lahf
pop
jmp
fisttps
sub
pop
push
mov
pushf
and
int
and
into
xor
repnz
lcall
mul
sub
aas
jb
xchg
es
jns
insb
jns
inc
jns
xchg
in
cld
fcmovbe
sub
xchg
dec
data16
jmp
adc
out
and
notl
cmp
lret
or
pop
jne
movb
les
lret
jecxz
add
aam
addr16
imul
cmc
mov
sar
out
in
fildl
xchg
pushf
pusha
lods
js
shll
fs
mov
xor
push
repz
mov
push
sahf
imul
xchg
xchg
add
pop
mov
and
adc
jge
push
insl
dec
xor
lods
mov
hlt
imul
lret
mov
pop
cmp
push
cmp
data16
bound
mov
or
aad
out
mov
mov
out
dec
repz
cmpsb
int3
aad
pop
dec
daa
orb
add
daa
mov
xchg
clc
sub
jbe
mov
jl
or
sub
pop
jo
cmp
xlat
jne
mulb
or
jne
cmp
pusha
ljmp
xor
sahf
mov
mov
jnp
pop
popa
add
sbb
adc
inc
fs
pushf
out
inc
mov
adc
jmp
adc
inc
insb
aas
decl
into
dec
mov
rclb
popa
stc
aad
jo
jle
push
jne
push
fucom
jns
andl
stc
pop
mov
dec
push
mov
jle
cmpsl
dec
cmp
push
scas
out
push
stos
ljmp
je
in
stos
pusha
sti
xor
mov
xor
sub
mov
sub
cltd
mov
bound
mov
push
add
idivb
fcoml
lock
bound
lds
out
and
sbb
imul
int3
mov
fcmovne
mov
pop
mov
ret
fnsave
add
cmp
test
and
lea
sub
scas
mov
cmpsb
or
fnstsw
xor
sub
pop
mov
pop
in
leave
xor
xorl
sub
ss
jb
lock
pop
scas
jae
shl
sub
or
xchg
cwtl
jmp
mov
jle
outsl
xchg
add
push
jp
cmpsb
call
imul
cmpsb
inc
mov
movb
adcb
pusha
sub
lcall
das
add
push
gs
xchg
lcallw
jp
mov
fistl
rolb
push
cmp
mov
ficoml
push
test
cmpsb
movsb
push
sbb
addr16
jae
movsb
cmp
andl
xor
dec
mov
out
dec
dec
cmp
or
pop
mov
dec
fdivs
jmp
mov
in
test
ret
stos
mov
cltd
clc
jmp
insb
pop
mov
xchg
cmpsl
and
fmull
dec
insb
mov
lea
fmuls
cmp
les
iret
push
jo
outsl
xchg
cmpb
cltd
iret
inc
sti
neg
xor
jg
arpl
aam
fs
arpl
mov
adc
xor
adc
sub
adcl
cmpsb
std
fisubl
leave
enter
push
xchg
sbb
jg
testl
mov
gs
jmp
subl
jno
and
or
pushf
hlt
dec
movb
push
sub
outsl
cmp
add
push
mov
sub
push
aad
pop
out
je
xchg
icebp
lods
rol
mov
in
jl
jnp
loope
enter
inc
mov
sub
adc
jg
dec
ja
in
scas
cmp
mov
sub
sbb
sti
shll
std
insb
cmp
imul
sub
ljmp
push
lcall
xor
jmp
inc
add
adc
mov
add
and
cmp
movsb
roll
jle
push
test
in
outsl
pop
xor
loope
pop
or
add
push
jne
pop
xor
jbe
jno
dec
add
or
push
lods
and
or
fsubs
dec
pop
mov
mov
push
jbe
lods
ret
xchg
mov
cmp
ss
loop
xor
sub
rol
xchg
xchg
mov
ds
push
mov
push
or
dec
aaa
fisttpll
adc
mov
push
sub
pop
fs
push
and
fprem1
mov
lock
cmp
lock
outsb
fsubr
jmp
cmpsb
ret
call
in
repz
sbb
sbb
pop
mov
movsl
ds
mov
dec
mov
addr16
mov
sbb
inc
mov
jmp
mov
dec
sub
fs
icebp
test
jno
repnz
repnz
and
test
repnz
add
call
mov
pushf
aas
add
nop
pop
xor
xor
cli
sub
and
setne
dec
icebp
add
je
cld
cmpl
icebp
cmpl
mov
or
pusha
shlb
and
mov
mov
loopne
pushf
mov
and
sub
add
imul
pop
into
outsb
je
sbb
and
enter
nop
pop
mov
pop
lcall
jge
xchg
fsts
mov
lods
dec
cmc
cwtl
insl
out
pop
fisubrs
lods
or
pusha
jno
push
sub
stos
push
mov
stos
xchg
scas
push
jne
orl
out
xchg
lcall
loope
sbb
fwait
cmp
gs
or
jne
hlt
arpl
mov
sub
jb
test
dec
sub
test
push
test
adc
repnz
fnstenv
movsl
dec
or
pop
xor
push
push
or
fnstcw
or
sbb
dec
cmpsl
add
ret
fidivrl
push
mov
out
rorl
jno
out
or
dec
add
aas
ret
and
cwtl
cmp
ljmp
adc
and
dec
popa
cmp
ds
andl
and
sub
push
aas
push
xor
fidivl
adc
inc
cmp
push
jne
xchg
popf
cmc
cmp
fs
push
out
stos
cmc
mov
rolb
mov
inc
mov
cmp
fstps
pop
pusha
arpl
add
and
enter
cli
test
les
push
imul
dec
fmuls
outsb
adc
xchg
addb
inc
pop
and
push
pop
push
mov
cltd
adc
xor
shl
xor
bound
sbb
cmp
cmc
je
dec
sub
push
adc
pop
pop
jecxz
popa
iret
in
icebp
notb
bound
or
xor
mov
mov
mov
into
dec
push
sti
jnp
dec
add
cmp
enter
xlat
lret
ds
stc
dec
push
xchg
dec
push
lods
movsl
test
scas
div
fisubrs
and
cmc
cmp
js
ficompl
adc
mov
mov
negl
and
add
jnp
xchg
iret
mov
push
pusha
cmpsl
xchg
outsl
sub
mov
jge
gs
loope
mov
outsl
fiadds
cmovno
pushf
sti
int3
adc
test
aam
mov
ud1
das
jb
dec
je
leave
aas
mov
jns
pop
jl
pop
adc
hlt
or
gs
cmc
xor
or
stos
popa
sub
jo
adc
mov
cs
pop
xchg
lea
je
push
sbb
cmpsb
push
outsl
call
out
cwtl
out
jmp
dec
xchg
pop
pop
fdivrl
sbb
clc
lahf
xchg
sbb
and
jb
imul
or
adc
imul
cmp
and
xchg
adc
jne
hlt
std
mov
xchg
fsubrs
jb
test
lds
mov
push
push
mov
call
add
pusha
shrb
mov
lods
xor
mov
into
fwait
jbe
dec
pop
sub
int3
dec
mov
add
mov
cwtl
xchg
jb
loop
mov
mov
dec
jmp
xor
sbb
pop
push
or
lret
aaa
adc
sahf
cmove
lods
nop
cwtl
adc
les
xor
inc
mov
or
add
inc
lea
xor
popa
add
in
cmc
imul
aas
inc
cmp
ja,pt
xor
inc
xor
xchg
mov
mov
fidivrl
xchg
sub
mov
mov
adc
mov
sbb
cmpxchg
pop
mov
xchg
jg
jo
in
insb
xor
mov
in
dec
repnz
fwait
mov
cmp
aaa
push
cmp
ret
insl
lret
je
mov
loopne
jecxz
pop
mov
mulb
sbb
into
into
shl
lcall
inc
sub
mov
add
cld
sarb
cld
shld
adc
or
adc
imul
inc
ja
pushl
pop
dec
cmc
daa
cld
mov
stc
and
imul
mov
pop
mov
inc
aam
iret
pcmpgtb
insl
popf
mov
aaa
mov
ljmp
lret
and
lock
mov
mov
fbstp
inc
push
pop
inc
mov
adc
jbe
jb
rorb
mov
jmp
pop
sbb
push
outsb
xor
imul
subb
clc
cwtl
inc
iret
pushf
mov
cmpsl
or
addb
jecxz
orl
cmpl
xor
sbb
ds
hlt
outsb
shr
dec
inc
int3
push
mov
pop
xchg
out
sub
sbb
icebp
jbe
sti
das
push
mov
js
push
push
gs
xor
iret
fcomps
jo
stos
ds
idivb
sub
dec
push
mov
xor
pop
mov
sbb
pop
xchg
jo
aam
jmp
and
mov
leave
pop
arpl
jae
push
and
orl
xadd
stos
dec
xchg
dec
jns
repnz
loopne
aas
adc
add
movsb
inc
push
pop
in
and
xor
std
addr16
out
nop
cltd
in
pusha
dec
mov
stos
sub
pshufw
xor
jmp
shrl
or
mov
cmp
pop
inc
fstpt
mov
push
dec
xchg
ret
inc
pop
out
cmp
mov
hlt
mov
popa
cmp
mov
fnstcw
or
ljmp
cmp
pushf
cs
xor
imul
fcomi
xor
aam
por
jne
loop
ljmp
shrl
fimull
and
or
and
lcall
or
adc
lds
out
bound
lret
sub
and
adc
out
and
push
adc
jl
add
inc
fmull
and
stc
and
pop
cmp
fmull
lcall
cltd
int
or
push
mov
or
add
leave
pop
pop
sbb
add
sub
aas
rcrb
mov
dec
or
adc
push
pop
or
das
and
lcall
ret
push
hlt
int
add
pop
rolb
xchg
sbb
stos
ret
jns
mov
mov
jg
in
in
je
inc
movsl
push
xchg
sbb
add
push
mov
inc
insb
in
out
mov
sbb
ss
add
inc
divb
pop
jl
pop
test
inc
add
jnp
pop
push
dec
jo
repz
fdivl
mov
and
dec
jmp
or
add
iret
scas
mov
pushl
jae
rcr
jg
pop
fs
adc
or
mov
insl
or
dec
scas
adc
rcll
insl
cwtl
cmp
push
cmpsl
pop
jb
mov
mov
mov
stos
pop
jnp
cmpsl
jecxz
push
mov
or
stc
sahf
and
shlw
js
adc
cwtl
ljmp
out
push
cli
inc
or
jl
push
stc
pushl
roll
fcmovnbe
xchg
aam
ret
icebp
js
and
mov
pushf
push
jno
push
into
out
pop
xchg
test
inc
jbe
dec
or
lcallw
or
ja
mov
out
cwtl
js
lret
and
call
daa
int
cmp
add
aam
ja
aam
push
bound
sbb
cli
lahf
mov
bnd
xrelease
jmp
xchg
out
pop
cmpsl
or
or
mov
lcall
shrl
mov
sbb
mov
fprem1
or
loope
imul
test
sbb
xor
add
mov
call
adc
das
jae
lds
jge
repz
clc
in
mov
outsb
aad
mov
and
cltd
es
fldt
scas
adc
xchg
aam
mov
in
and
stc
xchg
sti
sub
xchg
mov
lock
pop
orl
dec
popf
es
sub
jns
xor
xchg
dec
mov
lds
pop
mov
and
movsb
sti
scas
dec
das
cwtl
push
xor
sbb
pusha
push
cmp
lods
in
jmp
and
mov
stos
mov
or
xchg
adc
aas
aad
mov
xchg
mov
add
dec
mov
cs
pop
pop
loopne
pushl
roll
gs
shlb
xchg
mov
push
sti
cmp
popa
jae
mov
insb
fs
jecxz
int
xchg
pop
jb
sbb
repz
dec
or
add
cltd
mov
ret
sub
call
and
xchg
mov
push
add
mov
mov
pop
insb
cmpsb
gs
push
mov
into
sbb
inc
sahf
clc
dec
pop
divb
add
mull
call
add
into
pop
lea
inc
mov
and
ret
aaa
cwtl
loope
sub
scas
inc
xor
dec
dec
push
adc
aas
xor
leave
pop
pop
sbb
movb
and
push
sarb
xorl
das
out
mov
xchg
xchg
rcrb
neg
data16
mov
sub
rorl
pop
mov
dec
or
in
or
mov
movsb
or
loopne
add
or
jbe
dec
xor
movsb
pop
adc
sti
adc
test
popl
lcall
mov
insb
inc
pop
movsl
pop
mov
adc
sub
mov
popf
adc
insl
test
ret
ret
fs
sahf
shrb
daa
push
imul
push
insl
push
les
push
add
adc
mov
inc
shrb
and
cmp
cmpsl
jns
and
xor
jl
add
je
pop
cld
filds
rol
cwtl
lret
call
inc
dec
mov
lock
scas
data16
mov
cmpsb
push
inc
repnz
pop
mov
push
jp
iret
nop
xorb
or
xchg
sti
dec
add
fnstsw
out
dec
cld
mov
sbb
cwtl
cmp
out
inc
sahf
mov
xchg
jp
mov
cli
in
adc
in
and
pop
imul
fidivrs
pop
flds
jge
xor
dec
or
mov
mov
out
daa
pop
push
mov
lods
jle
imull
jge
mov
add
cmpsl
in
and
clc
int
hlt
lret
enter
or
mov
add
inc
loopne
inc
repz
and
ja
mov
sbb
dec
fldt
push
pop
ret
shlb
cmpl
add
jno
dec
and
pop
mov
sbb
push
push
mov
jle
shrl
add
aas
or
scas
mov
fmull
mov
aaa
jmp
stc
lret
leave
adc
pushf
rcrb
jge
xor
ret
mov
cmp
jno
orb
imul
testl
push
imul
mov
inc
gs
cmp
int
mov
adc
jl
out
mov
xchg
pop
in
mov
mov
mov
push
xchg
loop
inc
into
mov
add
mov
clc
pop
pop
sub
jmp
xorb
cmp
jnp
pop
inc
pop
cmp
out
jae
repz
xor
sbb
mov
cmp
pop
cwtl
pusha
movsl
cltd
jle
fs
in
repz
cmp
jl
arpl
sbb
ljmp
mov
scas
jbe
das
mov
sbb
arpl
xchg
pop
sub
inc
cmp
movsb
stc
les
popf
insb
mov
repnz
ret
je
mov
fwait
imul
arpl
push
movsb
cwtl
xchg
inc
jns
stc
ret
pmulhuw
popf
mov
fs
out
clc
jo
repz
or
in
dec
push
adc
pushf
mov
popl
sahf
inc
or
leave
mov
or
pop
jge
loopne
pop
mov
fiaddl
fldt
rolb
ds
xor
movsb
cld
xchg
and
push
and
shrb
inc
loopne
aad
out
mov
mov
sub
mov
ret
xchg
dec
jae
scas
into
fstl
mov
shrb
fnclex
fnstsw
std
jbe
mov
stos
xchg
daa
inc
mov
xor
test
jp
and
js
mov
lods
and
add
push
or
filds
movsl
pop
cmp
out
clc
bound
sbb
or
adc
push
mov
call
fistpl
cmp
hlt
jge
enter
pop
add
mov
and
filds
les
cs
in
es
loop
mov
xor
jp
lock
xchg
push
clc
sbb
adc
imul
dec
pop
xchg
pop
mov
lcall
inc
fistl
ja
mov
jg
jle
je
lds
movsb
lret
negl
push
popa
frstor
push
aam
xchg
pop
sbb
lea
or
jns
xor
fistpll
xor
or
in
je
mov
mov
inc
test
aam
lret
xchg
es
outsb
outsb
out
jp
popf
mov
jae
sahf
sti
and
scas
add
cmpsb
xchg
dec
mov
xor
sbb
mov
int
jecxz
outsb
push
sub
int3
mov
arpl
inc
sbb
sbb
dec
das
and
sub
fildl
lds
mov
cmpsb
ret
jecxz
sbbb
popf
inc
adc
dec
jge
mov
xlat
andl
jns
mov
cmp
push
outsb
sarb
xor
out
ret
jmp
adc
insb
mov
pop
test
cmc
jmp
sub
ret
ja
aad
push
jmp
inc
xchg
push
jb
lcall
inc
ret
fwait
fs
push
or
sbb
add
jg
mov
ds
or
aas
movb
sub
mov
or
adc
shld
fldt
movsb
sbb
dec
mov
cli
dec
in
cmc
cwtl
adc
ds
bound
mov
std
out
pop
cwtl
sub
lds
xlat
das
rclb
roll
pop
pop
adc
dec
lea
mov
in
xchg
and
add
cld
loop
mov
add
imul
sbb
and
xor
ds
int
add
inc
mov
stos
push
fiaddl
mov
iret
fnstsw
loop
mov
repz
cs
mov
mov
ret
pop
in
bound
xlat
pop
mov
pusha
inc
push
and
sarb
push
imul
out
sub
test
popf
jge
cmpsl
insb
or
je
fisttpl
sbb
xchg
std
push
mov
pop
xor
pop
push
icebp
mov
lods
orl
add
adc
pop
mov
ja
push
sbb
lock
adc
mov
cmp
sbb
test
cmp
stc
push
cwtl
and
lock
add
dec
push
add
daa
pop
loop
pop
das
adc
fldl
or
xchg
push
aam
mov
not
sbb
pop
cli
inc
push
arpl
arpl
xchg
lock
test
adc
andb
pop
or
cli
mov
arpl
negl
mov
in
outsl
ret
mov
push
das
and
popf
clc
cmp
in
add
jae
scas
push
jmp
push
lds
cmc
outsl
pushf
fisubl
push
sarl
pop
jae
xor
mov
dec
iret
sbb
test
shlb
fidivl
lock
mov
test
ret
mov
fistpll
stc
out
xor
adc
jne
push
faddl
enter
adc
mov
bound
cli
lret
addr16
jae
dec
sbb
repz
mov
mov
lods
daa
ja
in
cli
mov
test
or
xlat
js
or
push
xchg
and
add
outsl
fs
xlat
int3
orw
sbbb
or
inc
mov
or
cmp
clc
shlb
sbb
and
xor
cwtl
fcoms
repz
shrl
xchg
pop
adc
add
adc
inc
sbb
mov
mov
inc
imul
add
xor
mov
loop
jnp
leave
sub
mov
bound
xor
shll
ret
mov
jnp
pop
imul
add
and
jns
clc
mov
mov
gs
sub
in
jp
leave
inc
fs
popa
dec
mov
jne
push
sub
or
enter
and
inc
lods
jo
cld
int3
pop
out
ror
or
push
mov
inc
mov
into
clc
push
push
inc
rorl
xchg
push
icebp
pop
mov
out
xchg
stos
stos
push
mov
cmp
adc
lods
push
rolb
test
jns
ret
or
push
clc
xchg
sbb
cld
test
push
mov
jl
push
shll
push
cmp
mov
xchg
or
ret
sti
dec
int
mov
lcall
mov
das
cmpsb
sub
call
pop
fdivrl
stc
xchg
pop
cmp
loope
insb
lock
iret
popf
mov
in
test
repnz
inc
cmpl
shrb
int
mov
cmp
mov
jl
mov
imul
sub
cmp
add
out
cmpsb
aad
mov
or
jmp
pop
sti
sub
cwtl
and
mov
xor
add
and
mov
scas
lahf
pop
addb
in
pop
repnz
popf
mov
into
xchg
xchg
cmp
xchg
dec
pop
cmp
rorb
aaa
fwait
and
xor
test
lods
aaa
fdivrl
loope
xchg
in
fdiv
loope
mov
mov
cmp
cmp
sbb
xchg
add
cli
cs
push
lods
dec
pop
xor
sbb
sbb
mov
sub
mov
stos
je
cmpsl
jns
repz
insl
aam
adc
mov
mov
hlt
jns
mov
push
push
adc
cmp
mov
aaa
xor
mov
pop
bound
mov
add
and
pop
cmp
das
dec
inc
push
jle
pop
rclb
jae
fiaddl
or
mov
xchg
bswap
mov
dec
inc
or
mov
sbb
ljmp
sub
add
ret
xchg
jbe
sub
jno
fs
nop
adc
jle
mov
cmc
inc
inc
add
lock
inc
rol
jge
lahf
adc
xlat
scas
inc
shr
sahf
xchg
sbb
mov
inc
ss
ss
ss
in
mov
adcl
adc
ret
shll
mov
stc
jp
mov
int3
jne
mov
leave
adc
das
sub
or
xor
mov
adc
insb
mov
cmp
test
add
movsb
xchg
inc
cwtl
sbb
adc
xchg
push
jp
cmp
pushf
pop
stos
mov
leave
adc
mov
sahf
xchg
arpl
sub
addl
mov
int3
movsl
scas
fstpl
cmp
dec
ret
gs
jnp
test
subl
pop
filds
mov
pop
orb
lret
jp
loope
mov
and
cmp
mov
mov
ja
test
xor
xchg
fucomip
and
fs
cmpl
ljmp
jae
mov
jbe
pop
sub
cmpl
pop
xchg
outsb
jp
cld
lcall
notb
mov
sub
cmpsl
mov
jbe
or
out
xor
mov
or
add
sbb
fildl
xor
jmp
lea
std
icebp
test
pop
or
xor
or
xchg
mov
addb
fcmovnbe
mov
pusha
or
imul
mov
sbb
bound
or
jp
pop
enter
in
xor
inc
inc
inc
mov
xchg
pop
das
sti
cmp
add
lret
dec
cmp
sbb
xchg
xchg
jmp
mov
mov
imul
insl
pop
mov
ja
lds
xchg
mov
xchg
add
in
mov
jns
fldt
add
sbb
je
mov
xor
sbb
dec
pusha
mov
inc
pop
sarb
mov
sbb
inc
push
clc
je
add
out
std
call
push
and
push
dec
adc
sub
or
stc
icebp
sti
mov
decl
cwtl
push
into
xchg
pop
dec
jecxz
dec
push
sub
movsl
repnz
jnp
mov
fistps
sbb
fsubrl
jmp
and
mov
add
mov
mov
dec
mov
mov
push
inc
loope
inc
insl
popa
out
cmp
pop
mov
push
inc
outsl
fmull
dec
xorl
ret
ret
sbb
mov
inc
pop
faddl
mov
fiaddl
cmpl
jns
push
pop
xchg
test
inc
cmp
adc
js
or
outsb
aas
test
cld
xchg
test
cwtl
add
push
shrb
les
ss
jbe
aam
notb
insb
inc
into
into
insl
and
adc
stc
aad
enter
out
outsl
testb
push
push
sub
mov
mov
sub
jecxz
pop
sub
pop
cmp
inc
jae
push
jnp
mov
cmc
int
jge
inc
mov
fwait
mov
sbb
movsb
xor
xor
push
cmp
mov
mov
int
jle
jmp
or
rcrl
inc
mov
imul
imul
dec
clc
repz
andl
imul
xchg
mov
push
int
xchg
cld
push
stc
dec
sti
popf
adc
add
sbb
loop
shlb
dec
dec
mov
aam
mov
test
rcll
dec
inc
outsl
fadds
cmc
or
cmp
cwtl
jmp
sub
dec
ds
or
cmpsl
aaa
cmp
inc
mov
call
push
rolb
adc
outsb
in
pop
pop
hlt
addr16
testb
adcl
push
and
ja
push
add
rcrl
sbb
into
sbb
je
repnz
cmp
and
jmp
inc
insb
mov
aas
out
mov
iret
and
es
and
inc
jecxz
and
mov
in
mov
mov
push
sahf
cld
adc
jae
leave
jecxz
jmp
in
in
and
xchg
ret
fcmovbe
je
xor
xor
popa
ds
xchg
outsl
add
xchg
xor
xchg
loop
out
pop
push
lret
push
or
fdiv
mov
pop
call
in
gs
imul
aas
jp
dec
aad
pushf
xor
sbb
mov
bound
subl
dec
mov
jno
xchg
push
lcall
mov
inc
fbld
or
add
std
jbe
inc
sbb
mov
jmp
cmpsb
pop
roll
xor
add
mov
mov
or
inc
mov
out
in
add
mov
jp
and
pop
mov
ja
push
enter
bound
sub
dec
push
into
call
sub
mov
std
pusha
lret
stc
fsubrp
mov
push
in
cli
cmp
inc
mov
lods
aam
sbb
loopne
popa
xchg
pushf
lds
scas
ja
iret
xchg
dec
in
into
xchg
nop
lods
xchg
mov
pop
std
repz
arpl
mov
inc
mov
clc
inc
int3
sti
mov
imul
mov
rcrl
push
cmp
in
fsubs
rorb
insb
arpl
cmc
fcmovu
pusha
imulb
xchg
out
mov
mov
stc
test
out
bound
negb
fildll
xor
mov
xchg
xor
sub
xor
mov
jne
pusha
adc
stos
jge
or
add
push
push
sbbb
stos
xor
mov
sub
rcrl
mov
or
hlt
sbb
push
cmp
nop
mov
test
orl
mov
in
push
xor
stos
jns
mov
inc
loope
fsubrl
lret
dec
fildl
lahf
das
insl
xor
and
add
ds
sub
xchg
fisttps
inc
ret
fs
lret
mov
mov
clc
jp
adc
mov
sub
cmpsl
aad
clc
fsubrs
repz
scas
jnp
mov
jle
shlb
rcrb
daa
dec
mov
stos
mov
pop
aaa
pop
addr16
sub
je
sbb
std
sbb
call
and
sbb
arpl
sub
mov
ret
js
sbb
push
pop
xchg
cmpsl
data16
std
xlat
inc
push
mov
ljmp
jbe
sub
pushf
push
inc
push
mov
sbb
dec
divl
das
xor
push
ret
mov
into
add
movl
jb
mov
sub
rcrl
push
out
hlt
ja
aam
dec
cli
inc
movb
xchg
lret
cmpsl
in
or
jg
out
mov
xchg
cmc
aas
mov
lret
xchg
add
ret
jnp
sub
outsl
and
testl
xor
mov
ljmp
ds
scas
lahf
sbb
mov
popa
in
gs
xchg
adc
stos
mov
ret
mov
xchg
mov
and
outsb
xchg
adc
mov
out
or
imul
stc
pop
pop
shr
jmp
inc
xchg
clc
addb
fwait
mov
lret
dec
mov
push
in
push
xchg
ja
sbb
mov
cmp
xchg
movsl
lahf
lcall
pop
jl
adc
shrl
fsts
in
dec
subl
arpl
adc
and
mov
sbb
xor
sub
imul
mov
cld
dec
sub
adc
jp
imul
sbb
lock
fstps
pop
jnp
je
dec
mov
rcrb
out
push
add
cmc
and
movsb
jb
sahf
clc
nop
push
stc
rclb
in
ja
pop
xchg
pop
mov
pop
mov
les
jo
add
mov
xlat
dec
mov
add
in
dec
test
xor
xor
mov
clc
enter
sarb
dec
jae
fucomip
fnsave
lahf
mov
das
aam
push
pop
lcall
lds
scas
stc
stos
test
xchg
adc
setns
das
adc
mov
xchg
sub
popa
lock
in
pop
mov
sub
pop
loop
ds
in
cmpsl
push
lahf
sub
mov
inc
jae
sbb
lods
sti
cmp
xchg
pushl
jb
dec
inc
movsb
pop
sub
pop
and
add
dec
or
mov
jbe
or
jle
jb
adc
sti
fdivl
loopne
outsb
or
andl
cmpb
mov
mov
stos
rolb
cmpsb
push
xchg
insb
sbb
dec
out
push
and
out
negl
jge
jns
sub
int3
iret
mov
pop
dec
cmp
mov
fisubs
adc
push
xchg
std
shlb
inc
es
or
pcmpgtw
sbb
decl
or
pop
imull
fcoms
xchg
jmp
arpl
adc
roll
cmpsb
add
dec
or
sti
cmp
scas
mov
shlb
ljmp
inc
dec
sub
ficoms
aas
xor
mov
icebp
ror
fstps
sub
imulb
xlat
push
sub
pop
cmpsb
test
rol
jge
inc
xchg
pop
mov
lcall
fists
xchg
loope
push
loope
mov
or
loope
jmp
in
enter
cmpl
mov
outsl
pop
insl
mov
hlt
mov
int
and
mov
scas
xchg
xchg
sti
pusha
mov
xchg
cmp
insb
out
into
xchg
outsl
or
mov
test
test
and
and
jne
adc
mov
jl
lods
rcr
or
fucompp
repz
push
inc
or
cld
push
add
cwtl
xchg
mov
clc
das
push
data16
repz
xor
xor
jle
jnp
and
inc
iret
scas
jbe
xor
jbe
in
push
std
mov
pcmpgtw
pop
shlb
xor
incb
inc
sahf
jmp
xor
mov
jmp
fisubl
sbb
lahf
pusha
gs
dec
mov
outsl
pop
push
mov
sub
inc
out
cli
icebp
testl
lcall
stos
sti
lods
fimuls
mov
jg
test
movsl
daa
test
ret
lahf
imul
jg
xchg
mov
insb
or
test
mov
push
sbb
mov
adcl
push
push
mov
sbb
add
outsb
inc
fisttpl
cwtl
push
aas
jmp
mov
repnz
mov
cwtl
repz
cmc
adc
push
and
in
pop
orl
data16
or
outsl
inc
inc
jg
or
rorb
out
xchg
std
enter
call
add
xchg
in
push
aad
pop
sbb
aad
or
mov
repz
jmp
xchg
lcall
imul
inc
mov
mov
and
mov
lret
xchg
test
push
mov
lea
xchg
shl
movsb
shlb
push
leave
or
inc
cli
dec
mov
lahf
cmp
sbb
sub
add
dec
mov
lea
les
and
and
mov
jae
xchg
push
inc
movhps
lock
pop
mov
std
aaa
repz
add
push
push
xlat
pop
mov
push
in
mov
inc
xchg
int3
and
pop
xor
sub
adc
retw
xchg
pusha
sti
loop
stos
inc
out
mov
in
dec
push
push
fiaddl
mov
repz
ds
in
jmp
shrl
jle
push
xchg
jecxz
cmp
jle
xor
aad
mov
xlat
xchg
outsl
aam
loopne
js
test
xchg
fwait
repnz
add
cs
nop
imul
lret
mov
dec
jb
cwtl
lahf
xchg
xchg
jmp
test
fistpll
cmp
lods
loopne
and
dec
cmp
sub
push
mov
xor
mov
mov
jno
faddl
aas
daa
cmp
cmp
add
arpl
test
or
mov
or
loope
mov
cltd
mov
mov
fidivl
outsl
jg
jp
lret
dec
mov
ret
in
jae
jb
xchg
jle
inc
jae
fsub
rorl
iret
imul
pop
repz
ficoml
imul
cli
sub
movsl
cmpsb
mov
sbb
jo
orl
mov
ret
push
sbb
sub
mov
inc
pushf
rol
call
fcoms
dec
sbb
push
mov
inc
lea
jno
ja
cs
rol
imul
dec
jns
jno
sbb
and
or
jb
add
xchg
add
insl
sub
mov
fs
mov
mov
adc
addr16
jp
or
out
inc
adc
sbb
fiadds
push
or
sti
cld
xchg
popa
in
xchg
insl
xchg
push
divb
loop
sbb
jb
js
call
pop
das
ret
ds
daa
stos
sbb
xor
scas
aad
cmpsl
out
sub
mov
insl
jg
cmc
pop
push
mov
dec
lahf
in
sub
stos
jae
and
jmp
gs
rolb
mov
mov
jo
and
sub
push
shrl
lock
pop
dec
int
jb
push
fistpl
in
and
scas
out
pop
outsb
ret
sti
in
xchg
aad
lock
mov
ret
loope
mov
xchg
imul
dec
shlb
cmc
adcl
ds
dec
test
ja
into
repnz
xor
bound
imul
and
arpl
aam
adc
and
mov
clc
sti
mov
repnz
and
cmp
push
call
frstor
mov
scas
out
in
inc
push
scas
and
movsb
inc
aam
add
dec
idivb
jae
push
cmp
inc
stos
or
pushf
adc
subl
ja
push
cmp
pop
adc
std
push
xor
scas
insl
adc
cwtl
inc
add
loope
mov
orb
test
mov
popf
into
call
xchg
and
fisttpl
mov
dec
std
jle
std
dec
orl
jnp
mov
push
mov
shrl
xchg
sub
fxch
sub
mov
aam
dec
inc
jge
or
cli
cmp
sub
scas
or
addr16
inc
or
stos
or
jl
xchg
stc
test
mov
das
fcmovnb
pusha
mov
mov
adc
xchg
jae,pt
xchg
jl
es
roll
jecxz
aam
enter
jne
insl
in
pop
addr16
into
in
out
lret
ljmp
cmp
lea
inc
add
ss
cltd
or
sbbb
or
add
insl
int
ja
jnp
xor
add
jae
into
adc
inc
cwtl
pop
out
inc
mov
dec
push
push
andl
adc
sub
add
out
lods
fmul
adc
mov
inc
sbb
and
icebp
in
loopne
outsl
test
xor
les
or
add
xchg
lret
add
jnp
lods
pop
ret
sarb
or
sub
stos
in
push
mov
lods
jne
stos
in
add
cmpsb
in
decb
loopne
xchg
jmp
ret
mov
jnp
sbb
sahf
in
sbb
add
std
and
jmp
lock
jne
call
cld
or
adc
and
mov
add
mov
pop
test
mov
sbb
inc
popf
cmc
cmpsb
xlat
xchg
js
fmull
aad
ds
test
test
aam
cmp
fs
ds
and
push
lcall
je
std
inc
icebp
mov
fwait
dec
mov
dec
xchg
mov
ds
cli
outsb
cltd
fisubrl
sbb
and
daa
sar
xchg
fldl
sarl
jl
fcoms
cs
out
rorb
cmp
pop
jne
pop
adc
mov
push
fwait
sti
mov
pop
dec
mov
idivb
pop
fwait
in
pusha
shl
jns
add
sbb
push
adc
and
iret
insl
xor
inc
jl
pop
jae
xorl
or
cmp
das
shll
sbb
clflush
and
jp
mov
or
mull
mov
add
les
je
aad
divb
adc
sahf
sbb
popf
mov
popl
push
cmpsb
mov
decl
cmp
and
push
and
cld
mov
inc
mov
repnz
pop
das
xor
out
ret
add
movsl
cltd
pop
add
lcall
shr
pop
sarl
pop
and
call
and
lahf
das
ret
data16
fstp
pop
aas
pop
ror
push
jae
or
dec
loope
int3
fwait
std
adc
outsl
xchg
xorl
cld
roll
adc
lock
push
push
jp
or
pop
mov
xor
sti
movl
push
jo
leave
push
jo
cmpsb
ljmp
xchg
loope
ret
adcl
jmp
cmp
add
cmp
addr16
jle
adc
xor
mov
fwait
cltd
xlat
adc
enter
je
add
loopne
popf
dec
int3
adc
ja
scas
imul
mov
iret
dec
pusha
mov
pop
push
test
pop
mov
push
fwait
andb
sbb
mov
pop
les
shl
xor
push
std
xchg
in
push
loop
iret
push
cli
cld
mov
mov
lds
fwait
ret
imul
xchg
dec
ss
or
cmp
dec
pop
and
mov
adc
add
and
popf
mov
mov
int
fidivrs
adc
inc
insl
jae
js
mov
mov
arpl
push
jmp
mov
ret
movsb
mov
inc
les
ljmp
stc
xlat
out
push
jo
in
cmpsl
into
leave
pop
rcr
xor
xchg
add
jae
jg
dec
jnp
testl
adc
pop
mov
scas
cmpsl
arpl
std
jbe
mov
dec
xchg
test
inc
cld
mov
xchg
inc
xchg
cmc
pop
adc
dec
mov
xor
testb
out
hlt
xchg
pop
mov
out
jp
or
jne
leave
insb
loope
int
sub
or
push
rcrb
cld
clc
clc
das
dec
push
inc
and
out
and
arpl
jnp
cmp
fcoms
pop
shl
dec
push
mulb
fldenv
dec
mov
pusha
ja
rorb
pavgb
dec
sub
xchg
sbb
in
sub
xchg
sub
inc
and
ficoms
loop
cmp
testb
dec
sbb
add
jno
sbb
and
jno
fidivrs
inc
repz
pop
jecxz
jp
aas
or
dec
rorb
or
push
sbb
xchg
dec
inc
xor
rcr
das
ret
xor
aam
cwtl
orb
mov
mov
rorl
xchg
ss
sbb
out
sbb
sbb
lds
xchg
mov
mov
lret
test
and
lea
or
js
pop
dec
mov
popf
xor
pop
inc
adc
rcrb
in
mov
lock
jmp
sbb
movsl
jns
jmp
and
add
xchg
add
setbe
adc
or
mov
test
into
mov
cmp
dec
push
mov
cmp
jo
cmp
scas
das
int
cmp
std
jge
jge
dec
stc
gs
bound
jp
push
pop
fwait
add
fs
add
jge
jge
pop
fnsave
push
dec
jge
jne
movsb
sbbb
mov
push
and
mov
stc
imul
lods
push
cmp
jae
mov
xchg
cmp
xchg
cmpsb
and
nop
outsl
enter
lret
popa
adc
aam
push
adcb
adc
mov
int3
jg
es
inc
subl
adc
xorb
fdivl
xor
inc
mov
sbb
mov
inc
lret
pop
les
xchg
cmp
lods
into
xchg
jo
inc
scas
insl
loope
xchg
shlb
mov
cmp
adc
aas
loopne
pop
add
jmp
out
das
mov
add
imul
mov
fstl
cmp
xchg
and
mov
fidivl
arpl
or
scas
push
stc
mov
or
pop
mov
jge
pop
bound
jo
aas
jle
pop
cmp
xchg
inc
int
imul
inc
in
hlt
jb
lret
and
xlat
and
cmp
and
cli
or
sbb
ror
dec
je
es
push
sub
xchg
sub
scas
data16
shl
mov
pop
aas
out
in
lods
sbb
adc
mov
loope
stos
cmp
jp
call
test
mov
add
sub
jle
mov
sbb
data16
xchg
dec
sub
xor
lret
or
int
pop
xor
cmp
inc
mov
or
dec
iret
out
aad
and
xor
jl
cmc
aas
xchg
mov
dec
ja
jne
clc
in
xchg
lods
or
pop
ja
push
cmp
pop
push
cmp
mov
add
mov
jb
jae
xchg
cli
movsl
adc
jl
push
push
fidivrl
mov
pop
cld
test
or
icebp
popf
jl
sarb
and
call
pop
cmp
out
sbb
pop
repz
mov
aas
push
bound
add
xor
dec
imul
jo
mov
adc
rcrb
mov
adc
pop
and
pop
jbe
mov
aaa
cmp
or
push
jns
dec
inc
cs
jecxz
shll
jbe
cltd
push
pop
fisubrs
out
pop
and
add
jl
cltd
add
daa
lock
sbb
int3
dec
popa
dec
adc
add
jmp
outsb
in
sub
sbb
les
mov
popf
test
cld
push
cmp
sub
fldl
pop
rcll
je
pop
push
fcmovu
lock
icebp
mov
mov
mov
adc
dec
fimull
pop
fcompl
sbb
ja
ret
fcmovbe
xor
aas
and
jno
test
sbb
and
jle
aad
add
dec
or
add
cmp
adc
test
xor
imul
lret
and
pop
push
inc
jmp
mov
dec
mov
stos
ss
or
jmp
sub
pop
jns
add
jo
and
and
lea
xlat
xchg
pop
inc
sbb
shl
mov
divb
mov
xchg
in
scas
es
enter
cmpsb
lods
lahf
scas
fsubr
mov
jnp
lret
dec
pop
scas
into
mov
ftst
mov
in
xchg
pop
int
mov
cmp
jl
dec
rol
imul
push
inc
dec
adc
lods
aam
ret
adc
pop
jns
mov
in
imul
test
dec
cld
pop
inc
ret
in
flds
test
or
mov
jle
sub
mov
pop
mov
and
inc
imul
mov
aas
rcl
xlat
or
fcomp
jnp
test
aas
pushf
adc
jns
fs
jae
push
rclb
adc
push
mov
movsl
movsb
inc
xchg
mov
cmp
lahf
sti
mov
add
cmpsb
cmpsl
je
insb
sub
mov
or
sub
pusha
daa
rcr
orl
int
les
mov
adc
sarb
ds
sti
nop
push
rcrl
loopne
mov
pushl
xor
inc
adc
cltd
pusha
js
cld
cmp
dec
mov
ljmp
sub
fbstp
outsl
cli
xor
orb
ss
test
jecxz
dec
ss
jbe
jnp
or
std
push
dec
inc
jb
mov
jae
push
jae
adc
mov
or
movsb
int3
or
stos
dec
sub
jmp
ds
sbb
pop
scas
mov
mov
enter
adc
push
jg
sbb
add
push
adc
lahf
das
shll
mov
pop
push
sbb
loope
push
jecxz
jns
xchg
cmp
ljmp
leave
push
jmp
in
imul
mov
lahf
sbb
mov
push
sub
aam
arpl
aaa
pop
mov
enter
in
out
aaa
adc
adc
fistpl
outsl
cmp
insl
mov
inc
insl
sbb
rcrb
es
movsl
mov
jb
or
xacquire
pop
mov
xchg
mov
movsb
sub
icebp
sarb
ss
adc
fistps
jge
movsl
mov
mov
fs
arpl
pop
ret
popf
clc
jecxz
fld
loope
int
sbb
push
test
cltd
push
mov
pushl
dec
rol
and
imul
mov
imul
pop
xor
jo
push
or
push
jae
in
mov
arpl
push
enter
loope
sbb
lret
mov
mov
imul
push
cmp
je
test
inc
fstpl
dec
adc
fbld
mov
adc
xchg
incb
pop
jl
jbe
popa
cmp
inc
ret
call
sti
fbld
xchg
mulb
xchg
std
imul
shlb
push
lods
add
aaa
daa
in
jb
repz
test
sbb
adc
and
fimuls
mov
mov
ss
mov
sbb
inc
movsl
push
mov
cli
rclb
mov
and
lods
jns
in
dec
ds
inc
aaa
jge
push
rcll
xor
das
cmp
testl
in
inc
aas
inc
das
inc
sub
jg
sahf
lret
mov
and
out
cmp
ret
cmp
push
xchg
hlt
fs
loopne
ljmp
xchg
stos
add
enter
outsb
inc
pop
psrlq
call
mov
xor
sub
add
mov
mov
push
inc
aad
push
pop
icebp
lcall
gs
lret
fwait
fs
insb
push
fistl
fdivp
jae
out
js
and
notb
push
dec
por
out
data16
jg
out
insb
inc
sub
jmp
sub
dec
mov
xor
push
addb
xchg
mov
jle
aam
xlat
icebp
pop
jae
std
xchg
xor
leave
mov
fs
sbb
xor
sbb
movsl
std
jmp
mov
rclb
call
mov
or
push
in
cwtl
xchg
sub
cltd
repnz
jmp
pop
sbb
popa
fdivrl
loopne
cli
sub
mov
nop
pushf
xchg
add
stos
xchg
push
xor
or
xchg
pop
andl
incl
add
jmp
or
loopne
sbb
insb
xchg
add
cs
sbb
jl
cmp
and
cmpsl
sub
adc
xor
test
or
ja
ficomps
cmc
jle
mov
movsl
mov
les
test
mov
lea
push
cltd
jl
ds
pushf
imul
aas
push
leave
mov
mov
mov
rcll
pop
jmp
inc
pop
adc
inc
push
pop
jno
and
and
cwtl
aaa
xchg
into
cmp
out
bound
xchg
leave
popf
xchg
fistpll
xor
jne
flds
cld
xchg
lcall
fwait
jp
push
xor
and
xor
loope
scas
pop
pushf
out
cwtl
scas
sub
inc
loop
stos
push
and
mov
dec
mov
and
pop
pop
jg
cwtl
sbb
jmp
popf
and
inc
inc
div
into
and
iret
call
popf
fdivrs
scas
xor
dec
dec
ds
stos
jp
jle
push
adc
insb
or
pop
xchg
popa
pmulhuw
or
and
cmpsb
mov
pusha
cmpsl
or
mov
ja
xor
mov
pushf
or
or
inc
jmp
cmp
sti
imul
xor
nop
sub
in
mov
jmp
push
iret
sbb
or
pop
inc
inc
rcrb
lods
in
push
cmp
in
test
fdivs
push
and
sub
dec
pusha
and
adc
lock
ret
les
pop
repnz
and
loopne
push
shr
cmp
cmp
push
cmp
popa
jbe
imul
pop
fwait
adc
sub
fildll
shll
xor
test
loope
xchg
int
pop
in
push
lock
mulb
movsl
push
jnp
jae
popa
mov
mov
mov
imul
xor
cmpsb
sub
xorl
push
push
iret
sub
stc
adc
jle
pushf
adcb
or
mov
lods
and
cmp
cs
pop
jmp
xchg
jecxz
test
lock
xchg
call
addr16
sub
ret
shll
sbbb
imul
adc
push
or
loopne
pop
and
aas
enter
fstps
add
xchg
jl
aam
and
sub
add
sbb
and
or
loop
sub
xor
scas
lods
cmp
and
repnz
outsl
cltd
push
pusha
sti
jle
xor
fstps
jle
mov
pop
inc
enter
xchg
sahf
fwait
mov
lahf
push
outsl
std
and
outsl
insb
test
xchg
cmp
or
aad
lods
gs
sbb
test
mov
push
sbb
and
mov
out
mov
int3
and
push
loope
adc
out
outsl
jbe
mov
insb
cmp
xor
leave
or
and
bound
sbb
std
fstl
add
arpl
lods
test
lahf
icebp
arpl
add
dec
mov
jnp
int
inc
or
in
imul
hlt
shlb
jno
lret
orl
jne
imul
mov
sub
into
cmpsb
lret
add
mov
push
lods
mov
sbb
repz
add
leave
mov
push
insl
sbb
rol
add
call
jbe
jo
inc
lods
adc
cltd
insb
jmp
or
or
lret
pushf
xchg
mov
inc
dec
dec
pop
sub
cmp
pop
aam
aad
cli
mov
mov
call
rcl
jae
clc
jbe
dec
call
jb
dec
and
test
sub
adc
inc
loope
and
cwtl
int3
insb
jl
sub
and
sub
cmp
addr16
sub
inc
gs
lret
enter
bound
adcb
mov
movsl
lret
sar
stc
inc
out
mov
jg,pn
sarl
push
aam
into
mov
hlt
push
fldt
xchg
rolb
outsl
and
rorb
in
lods
pop
xor
out
fiadds
lock
pop
out
dec
daa
shrl
pop
stos
mov
pop
lds
sub
movsl
push
sbb
push
xchg
es
fsubrs
call
les
out
xchg
cmp
sbbl
adc
xchg
push
xor
hlt
jmp
dec
xchg
ret
cmp
xchg
jg
mov
out
mov
mov
pop
mov
sbb
mov
ljmp
mov
xorb
out
mov
mov
sbb
jo
add
jle
pop
inc
addr16
pop
bound
or
add
cmpl
stos
jae
fmulp
fwait
mull
xchg
das
cmp
cmp
sub
cmp
xchg
dec
fdivrs
xor
rolb
stc
int3
and
push
jno
lahf
inc
xchg
xchg
xchg
rcr
lcall
dec
fldcw
outsl
adc
pop
xor
push
and
stos
mov
scas
fldt
arpl
inc
xlat
push
inc
mov
iret
imul
int3
mov
stc
sub
cmpsb
in
mov
ss
jecxz
gs
lret
cli
scas
fisubrs
sub
cltd
or
mov
add
jg
push
jecxz
gs
adc
xchg
in
or
leave
xchg
pop
divb
gs
cmpsl
cmc
insb
cltd
xor
dec
insl
out
pop
test
pop
data16
imul
imul
adc
adc
pop
inc
ror
pusha
inc
in
cmp
xor
repnz
dec
mov
into
cmc
sub
mov
jmp
outsb
sbb
sbb
cmp
jns
out
and
std
cmpsb
arpl
push
cli
ljmp
into
les
in
movsl
leave
mov
ss
xor
mov
cmp
mov
leave
repz
aad
ss
insl
ds
mov
xor
sub
lahf
adc
leave
imul
and
jle
imul
pusha
enter
dec
lahf
xchg
pop
and
in
andl
add
adc
pop
push
fcmovbe
mov
rolb
outsl
mov
mov
dec
and
mov
ss
adc
loopne
fiaddl
mov
outsl
jbe
cmp
aaa
push
mov
xor
mov
inc
xorb
scas
jns
sahf
push
int3
mov
mov
aad
sub
into
mov
loopne
sub
jnp
adc
clc
xchg
imul
lret
or
pop
xor
dec
gs
in
pop
loop
push
or
imul
mov
push
clc
jecxz
xchg
cmpsl
mov
cmp
mov
fsub
push
inc
lret
push
sbb
inc
fdivl
adc
jae
adc
sub
push
sti
jb,pt
dec
xor
and
cmc
push
fisttps
sub
pusha
out
lret
pop
sub
call
or
inc
sarl
and
jbe
popf
cmp
sti
lock
mov
aaa
bound
test
sbb
cs
in
pop
imulb
sbbb
ja
das
and
test
dec
les
dec
addr16
movsb
push
add
call
loope
loope
dec
aam
lret
daa
mov
fwait
add
loopne
mov
pusha
jbe
ds
fcompl
fldcw
pop
jmp
cmp
je
fstpl
xlat
sbb
fidivrl
insl
cmp
pop
ret
push
aad
fwait
mov
dec
nop
push
aas
cmpsb
and
sub
jne
dec
or
mov
pop
xor
xchg
leave
mov
roll
xchg
popf
sbb
int
andl
push
cmp
xor
clc
cmp
loope
jg
mov
rcrl
cli
jo
stc
arpl
je
inc
or
stos
push
fsubrl
jmp
sub
cmp
loopne
fstpl
push
cmpsb
roll
push
jle
imull
flds
insb
xor
jmp
test
leave
dec
push
sub
pop
xchg
lods
cmp
add
cmpsb
test
out
adc
fstpt
inc
jmp
dec
sahf
inc
dec
push
loopw
mov
or
and
dec
mov
gs
fdivl
mov
icebp
in
popf
inc
add
hlt
enter
imul
subl
inc
mov
adc
loopne
mov
lods
push
mov
add
mov
or
add
iret
mov
mov
loopne
loope
sub
mov
xor
das
aas
icebp
and
adc
mov
mov
push
add
mov
xlat
dec
in
test
dec
popa
int
das
arpl
pop
push
push
mov
or
sarb
xchg
in
jb
lds
jle
add
sbb
cmp
stos
xor
ret
jge
and
stos
aad
xor
cmpsb
push
jg
inc
cli
pop
clc
out
add
hlt
jne
inc
push
dec
dec
decb
push
rorl
xchg
lea
jbe
xor
xchg
daa
push
jmp
fbstp
xchg
lret
push
mov
pop
or
pop
mov
out
sbb
jne
pusha
out
xor
jae
jbe
cmp
lret
add
push
push
ret
rcl
ret
mov
jp
nop
mov
sub
mov
push
stos
mov
fbld
imul
mov
pop
test
mov
jle
push
pop
mov
xchg
call
insl
adc
push
jle
les
sahf
pop
inc
add
andl
jmp
inc
mov
and
mov
nop
jp
sub
mov
lods
shlb
scas
popa
pop
test
lea
in
jns
mov
mov
xor
xor
jp
inc
test
push
shrb
or
cmc
jle
inc
in
xchg
dec
inc
popa
dec
int3
jns
xchg
cmp
dec
sub
ljmp
cmpsb
shrb
fdivl
mov
ljmp
jno
mov
mov
xchg
xchg
sbb
xlat
cltd
push
aaa
cmp
pushf
ret
stos
test
mov
mov
lods
push
cmp
lret
daa
cmpsb
mov
jno
out
test
jo
stos
js
push
pop
jae
jno
inc
outsb
cmp
les
xchg
jmp
or
mov
and
scas
add
jno
call
dec
or
sbb
inc
pushf
ljmp
mov
and
mov
fisubrs
fisubrl
and
cwtl
pop
iret
sub
mov
add
das
std
popa
lret
jp
jg
bnd
push
xlat
jae
enter
sti
dec
pop
in
vsqrtps
mov
fsubrl
jno
jns
jg
adc
sarb
mov
pop
lods
push
jg
rcl
mov
ja
lea
fcomps
or
push
fs
mov
lret
test
lahf
xor
insb
jae
leave
iret
insl
mov
fdivs
jp
dec
orl
aas
ret
pop
mov
sub
mov
sbb
test
xchg
xlat
adc
in
shr
outsb
test
aaa
xchg
ljmp
mov
sbb
bound
xchg
rcll
pop
mov
stos
inc
rorb
iret
gs
push
lea
lods
mov
cmp
jns
jo
repnz
mov
add
xchg
dec
jno
call
mov
mov
add
push
pop
push
xchg
mov
cltd
sbb
push
vxorpd
xchg
cmpl
aad
and
ja
and
out
sub
outsb
fstpt
cld
mov
mov
cld
cmpsl
ljmp
test
enter
lcall
xor
dec
cmp
bnd
mov
xor
mov
cmpsb
and
in
movsb
inc
and
std
sub
leave
hlt
mov
dec
lock
rorb
popa
pop
in
cmp
faddp
jp
cmp
xchg
stos
inc
xor
pop
divb
jb
pop
call
ljmp
insb
jbe
mov
std
notl
iret
cli
outsb
inc
jo
xchg
xor
fnsetpm(287
ret
or
nop
fdivs
sub
add
fcmove
ret
pop
jge
xlat
cltd
sbb
fisubrs
and
movsb
loope
cmpl
cli
fiaddl
fisubrl
or
mov
xchg
inc
ds
std
daa
push
mov
loope
pop
hlt
xchg
and
lcall
pusha
cmp
sahf
push
sub
xchg
imul
popa
les
mov
sbb
push
ljmp
push
in
dec
sub
jp
cltd
add
cltd
mov
fxtract
jg
mov
xchg
lods
pushf
inc
out
out
push
pop
fldl
nop
cmp
imul
inc
stc
xchg
dec
bound
jecxz
les
jp
aas
jle
mov
daa
daa
pusha
or
jb
hlt
jnp
aas
ret
push
pop
jle
gs
orl
inc
faddl
out
mov
inc
xchg
jp
rcl
push
cmc
xchg
jo
scas
loop
mov
jno
sub
shlb
jle
push
fadd
xor
fs
mov
notl
jp
cmp
or
out
pop
mov
xchg
cmp
dec
dec
vpmulhuw
in
sub
ljmp
jo
cwtl
daa
shrl
mov
mov
gs
or
in
inc
jp
mov
inc
xor
mov
adc
add
std
and
mov
shrl
iret
xor
aam
jp
cmp
adc
push
nop
dec
lods
scas
pop
adc
cmp
test
vphaddw
pushf
fwait
and
sub
bound
pop
rcrl
mov
mov
xor
or
fsubr
jno
mov
dec
mov
test
pusha
sbb
inc
nop
daa
adc
fsubl
add
or
movsb
push
sbb
push
and
jmp
aam
add
imul
jbe
sub
scas
jb
dec
add
imul
addr16
cmpsb
stos
leave
loop
or
sub
lahf
cmc
hlt
jns
xor
pop
mov
xchg
jns
xor
rcll
mov
adcb
std
movsb
je
fildll
adc
xchg
cmp
sub
push
push
mov
cmpsb
push
sub
aaa
mov
pop
dec
es
mov
and
push
mov
xor
jg
cmp
lahf
push
push
mov
mov
sti
popf
movsb
lock
mov
inc
fbstp
xchg
insl
push
sub
or
push
and
scas
pop
arpl
cld
sub
test
scas
imul
pop
fdiv
es
pop
int
shl
push
mov
add
push
in
lret
xchg
imul
lods
mov
lods
xor
push
inc
and
inc
popa
and
adc
xor
mov
adc
out
and
int3
push
ds
shr
insb
mov
repnz
inc
mov
in
push
sbb
lahf
add
in
daa
insl
popf
sahf
ljmp
push
push
sub
pop
je
pop
sub
fistps
es
fistl
mov
cmp
inc
dec
sub
je
mov
mov
cmp
or
sub
mov
lods
subl
xchg
mov
jecxz
cmp
shl
mov
or
sbb
stos
mov
in
cmp
mov
andl
out
add
shll
xor
test
jb
mov
stos
wbinvd
idivl
sbbl
adc
sarb
sbb
push
mov
and
nop
leave
daa
lcall
mov
movsb
and
outsl
int
pop
cltd
icebp
inc
push
in
xor
test
xchg
add
arpl
rcrl
rcrb
adc
push
cwtl
mov
mov
cld
pushf
jle
jecxz
pushf
xchg
mov
lcall
fadds
mov
push
das
mov
mov
sub
decl
push
cmc
arpl
xchg
test
mov
fistl
and
xlat
aad
lods
jmp
pusha
xor
xchg
rcll
inc
pop
pop
sbb
sbb
out
sbb
inc
scas
sbb
cmpsl
lret
push
je
jns
sarb
les
xchg
in
and
ljmp
in
push
pop
lret
cli
push
cmp
inc
rcl
inc
lods
cmp
lods
adc
inc
dec
rol
cmp
scas
pop
push
dec
in
lret
xchg
lahf
mov
stc
inc
push
adc
jecxz
fdivs
movsb
lea
jle
lods
pushl
les
push
dec
sub
mov
and
ljmp
mov
movsl
dec
insl
test
pop
ret
adcl
test
add
sub
mov
scas
jno
imul
repnz
adc
mov
mov
movsb
aas
sbb
je
pop
and
cmp
sbb
jno
mov
js
jge,pt
mov
in
and
ja
std
and
pop
shll
std
shr
incb
pop
cmpsl
in
test
test
out
cmp
pusha
test
dec
es
jp
iret
fcompl
xor
sub
jo
inc
dec
xchg
in
ds
outsl
dec
mov
cmp
jb
icebp
add
jnp
jle
fwait
sbb
into
cltd
dec
je
jbe
lret
pop
inc
xor
nop
push
adc
fbstp
inc
lcall
daa
mov
add
ja
inc
cltd
pop
sub
xchg
and
fwait
inc
push
pushf
test
adc
cmp
add
insl
je
xchg
sub
scas
out
fistpll
sar
aaa
loopne
fisubs
cs
dec
out
fs
roll
test
push
push
push
scas
stc
inc
jl
das
cmp
int3
filds
adc
jno
xor
push
inc
negl
sub
les
xor
sub
mov
cmpsl
cmc
xchg
sub
or
jno
pop
sub
out
sbb
push
out
cmovnp
and
xor
scas
rclb
xor
mov
std
push
outsb
mov
cmp
jmp
xchg
add
popf
xor
adc
call
mov
jno
test
mov
and
cwtl
cwtl
lcall
aas
aas
hlt
lea
das
xor
add
mov
xor
dec
stos
fsubr
adc
insb
mov
lret
cs
xor
cmpsb
jb
xor
or
iret
xor
pop
filds
aas
or
outsb
test
add
add
push
fnsave
sarl
fcmovnb
fbstp
or
or
cmpsl
push
push
test
xor
or
sbb
ret
pop
cmp
mov
xchg
mov
and
mov
push
add
pop
incl
sbb
and
add
or
jmp
sahf
dec
or
push
xchg
lea
pop
jl
mov
pop
add
insl
ds
xchg
ja
mov
jmp
test
int3
pop
rcrl
inc
daa
outsl
sbb
adc
jae
cmp
movsl
sub
sub
sub
es
out
lret
int3
aas
cli
inc
xchg
or
push
sahf
push
subl
add
ret
push
pop
fisubl
xor
shr
aad
aaa
popl
adc
shrl
sahf
sbbl
cmp
inc
sarl
out
adc
or
outsl
mov
rclb
stos
aad
inc
dec
jle
imul
data16
add
push
scas
jae
mov
add
sub
cmpsb
adc
push
js
inc
lret
push
hlt
and
outsb
jecxz
pop
or
jbe
sbb
loopne
pop
outsl
mov
insb
aam
jno
and
mull
imul
hlt
icebp
adc
fstpt
mov
dec
xchg
mov
xor
pop
dec
in
bound
push
daa
test
push
jb
in
cmp
call
cmpsb
in
pop
pop
nop
inc
aad
add
sub
cmp
sar
loop
mov
ret
rcrl
xchg
or
cmp
dec
imul
adcb
adc
gs
push
std
mov
and
das
jae
jo
push
mov
or
push
or
sub
call
std
and
test
adc
adc
inc
imul
and
inc
add
and
xchg
cltd
test
xchg
dec
or
sub
sub
push
movsl
or
pop
inc
push
xor
mov
xchg
imul
into
pop
ror
fimuls
dec
xchg
sti
dec
add
xchg
cmc
lods
adc
jo
jo
enter
bswap
jns
xorl
mov
jp
addr16
pop
jge
scas
test
and
jl
adc
data16
sbb
into
cmpsl
outsl
daa
jae
mov
or
fildll
mov
icebp
push
scas
lcall
in
sub
xchg
pop
sbb
or
cmp
hlt
pop
dec
in
or
fsubp
add
add
add
pop
sub
pushf
mov
mov
cmpsb
insl
adcl
test
lds
cmp
pop
sbb
lods
scas
or
shlb
shll
push
ret
repz
adc
sbb
push
lahf
cmp
jl,pn
dec
sbb
push
imul
std
aad
subb
jnp
mov
mov
mov
ljmp
cmc
sbb
mov
add
ret
mov
mov
test
in
repnz
icebp
mov
test
scas
cmpsl
or
fwait
lcall
mov
les
hlt
jmp
divb
in
or
movsb
dec
and
push
mov
push
negl
jle
stc
jnp
leave
popf
fmuls
cmp
jbe
aas
push
lods
mov
push
dec
jge
je
fiaddl
cli
cmpsb
shr
lret
leave
sub
stos
xor
xor
push
hlt
test
cmpsb
xor
fwait
ret
sub
ljmp
adcb
lds
push
xorb
xor
mov
jno
fmull
cs
add
mov
mov
and
aam
add
lds
xchg
pop
sub
pusha
orl
test
loope
shll
or
cltd
lcall
incb
out
adc
xchg
jo
jecxz
leave
jle
jp
clc
cld
imul
aas
dec
testl
pop
repnz
pop
ss
mov
xchg
popf
loop
pop
xchg
cld
cmc
in
mov
out
adc
and
jns
push
pop
mov
imul
push
repnz
cmp
xor
cmpsb
lcall
mov
pop
xor
adc
sub
jle
in
arpl
push
int3
call
repz
lcall
push
out
sub
xor
xor
mov
dec
ss
std
cmp
out
xor
scas
dec
push
std
stos
outsl
jno
xlat
mov
inc
and
cmpb
pop
sbb
mov
pop
sbb
cmpsb
lock
mov
cmp
fstcw
in
and
pop
push
add
or
xor
xor
aas
rclb
hlt
push
shr
je
mov
pop
push
dec
or
insl
fnstsw
rorl
mov
ret
mov
adc
sbb
loope
test
xor
fadds
pop
cmp
std
jg
or
or
jae
push
xor
mov
int3
mov
add
mov
adc
cmc
push
dec
insb
jnp
xor
out
out
ss
fwait
jbe
pop
mov
sub
aad
or
jg
shl
scas
inc
sahf
mov
mov
iret
push
ret
sbb
lcall
icebp
loopne
cmc
pop
inc
sbb
cmp
xchg
shll
push
clc
in
jl
mov
jl
xchg
out
movsb
cli
dec
sbbl
push
pop
into
xchg
loope
adc
sbb
xor
mov
jge
into
imul
out
xchg
mov
mov
ret
insb
xchg
fdivl
mov
je
outsl
jns
inc
mov
xchg
mov
testb
dec
shlb
scas
fidivs
dec
dec
xchg
roll
fadds
lods
and
scas
mov
xor
leave
cmp
and
popf
into
inc
loopne
pusha
cwtl
pop
push
xor
lods
nop
push
xor
pushf
negl
ret
cld
out
sub
cmp
xchg
add
call
lods
divb
push
scas
cmpsb
xchg
jno
jbe
xor
lds
xchg
push
inc
push
xor
sub
and
in
cmp
lea
insl
repnz
jecxz
and
mov
mov
xchg
jecxz
shll
addr16
jecxz
and
push
dec
leave
sub
pop
inc
push
or
pusha
shlb
adcb
ss
out
xchg
adc
divb
push
inc
cld
ljmp
jecxz
sub
aad
daa
repz
inc
test
mov
xchg
xchg
xor
cmpsl
fcompl
rolb
mov
xchg
std
sbb
xchg
dec
fwait
test
or
xchg
mov
movsl
mov
xlat
mov
les
or
adc
pop
cli
je
jb
xchg
sbb
jae
enter
xchg
adc
jne
stos
mov
stos
pop
imul
push
imul
pop
xlat
jmp
and
into
in
add
adc
leave
mov
mov
adc
mov
and
or
jne
mov
ss
daa
icebp
mov
jl
cltd
addl
int3
cmp
stos
in
fwait
adc
mov
pop
cmp
movsb
mov
and
sbb
das
shll
mov
jno
mov
out
pop
xor
inc
mov
and
or
hlt
adc
push
lea
jbe
nop
movsl
cmp
xchg
stos
out
out
pop
mov
lods
nop
rclb
mov
mov
movsb
stos
stc
cmp
xor
scas
daa
scas
cmp
mov
jp
xchg
aaa
xchg
aad
adc
aas
jle
movsb
int
cmp
rcll
jl
inc
pusha
sub
cs
rolb
cmc
fbld
jbe
push
mov
pushf
scas
movb
loop
je
push
hlt
fldt
fwait
adcb
cmpsb
data16
in
in
daa
cmpsb
push
adc
sbbb
or
mov
xchg
imul
mov
andl
or
sub
bound
dec
xlat
lret
inc
inc
xchg
jp
stc
dec
push
in
ds
xorb
pop
add
loope
fs
pop
int
sbb
out
lret
ret
pop
sub
dec
inc
in
jle
xchg
sbb
push
xlat
imul
xchg
test
jge
pop
ja
cmovle
test
ja
jl
sub
ss
xchg
inc
push
icebp
sti
pop
hlt
loope
cmpsb
add
int3
fcoml
mov
cmp
or
push
adc
cwtl
sub
jg
jo
insb
lret
bound
or
sbb
jno
dec
iret
sub
cmp
repz
clc
mov
out
pusha
shll
cmp
movzbl
and
cmpsb
push
mov
or
xlat
jmp
push
aad
mov
pop
pop
mov
popf
insl
mov
repnz
sahf
ret
lds
adc
test
enter
bound
xor
rcrb
rcrb
mov
inc
imul
fmull
adc
xchg
xchg
ja
lret
push
and
repnz
iret
mov
mov
and
cmp
pop
pop
mov
sbb
movsl
pop
into
mov
push
iret
sahf
outsb
test
push
push
sbb
fwait
cld
mov
xchg
sub
mulb
xchg
aaa
shll
and
inc
idivb
xchg
adc
fisttps
jne
repnz
aad
xor
jne
mov
cmp
mov
fildl
jnp
xchg
inc
popa
std
stos
in
xchg
push
lret
adc
xchg
sub
outsl
andl
js
mov
inc
add
fildl
jmp
pushf
dec
aaa
pusha
shll
in
fdivrs
jmp
test
lret
push
out
xor
out
repnz
pop
dec
dec
stc
idivb
push
push
hlt
jae
nop
int
roll
jbe
lods
cmpsb
leave
xchg
xchg
xlat
into
outsl
jns
jns
ss
lods
sahf
jae
js
cmp
repz
gs
cmpl
push
insb
mov
push
xchg
inc
dec
mov
push
push
enter
mov
push
fistl
inc
loopne
push
lds
mov
jnp
popf
fadds
push
jge
inc
test
jnp
mov
and
lcall
or
daa
ss
jnp
push
push
jns
mov
insb
mov
adc
arpl
jecxz
cwtl
cltd
pop
mov
jne
add
jge
ret
setbe
icebp
ss
push
jns
fstpt
in
cmp
jmp
popa
mov
push
sbb
enter
stos
aam
notb
out
jmp
or
into
inc
sbb
inc
or
pop
div
xchg
repz
popa
push
clc
cmp
mov
fst
mov
xor
popf
pop
mov
and
xor
in
ds
add
pop
dec
shr
in
addr16
out
gs
cltd
add
fdivrl
mov
in
pushf
adc
aas
cmp
iret
bound
scas
push
fistl
adc
xor
sahf
push
insl
insl
push
fucomi
xchg
lea
and
dec
in
test
aad
and
addb
push
mov
lods
fsubs
ror
cltd
sti
mov
and
push
insl
cmp
jge
jl
adc
pop
or
lock
mov
pusha
imul
cld
pop
mov
or
add
xchg
fs
lret
int
sub
loopne
dec
mov
pop
pop
sbb
jge
jo
pop
jp
dec
sbb
mov
andb
inc
mov
sahf
int
nop
je
pop
int3
mov
cli
aas
cmp
xor
sti
sbb
pop
push
cmp
mov
jb
mov
push
sbb
cmp
push
lods
divl
data16
push
test
fwait
push
fistl
mov
int3
lahf
adc
pop
out
mov
outsb
call
xorb
shlb
addr16
xchg
cmp
int3
fisubl
pushf
mov
outsl
notb
daa
or
and
mov
aam
and
mov
loope
pushf
imul
jbe
or
cmp
loope
test
jecxz
neg
mov
cmp
fnstcw
xor
in
sub
mov
fdivr
pop
fdivr
aaa
xchg
pop
stc
mov
mov
sub
clc
je
add
sbb
mov
cmpsb
dec
pop
mov
test
pop
mov
loop
xchg
fistpl
pop
cmp
mov
aaa
pop
imul
jge
mov
cmpl
and
push
lock
mov
ja
repnz
push
sbb
addr16
xchg
out
mov
cmc
loopne
fwait
inc
ljmp
int3
sbb
jne
inc
js
fsubrs
hlt
pop
xchg
and
cli
mov
xor
loopne
repz
clc
mov
cltd
leave
lock
cmpsb
neg
fistpll
testb
cli
xlat
enter
sub
push
dec
je
mov
or
ss
bound
inc
gs
mov
add
xor
cmp
add
push
mov
movsb
adc
push
cs
xor
add
stos
nop
or
mov
fwait
xchg
in
adc
lods
sbb
cmpsb
fsubrs
das
cli
xchg
out
jbe
aaa
fcomps
jp
cmp
and
out
jns
fistl
add
sub
pop
cmp
inc
loope
sub
lds
pop
dec
faddl
ficomps
push
addr16
xchg
adc
test
xchg
jne
push
mov
xor
fcomps
cmc
and
rclb
jmp
or
ljmp
ja
stc
mov
and
xchg
or
jbe
dec
sub
cltd
mov
xchg
lcall
jle
xchg
jne
push
rcrl
js
add
iret
test
pop
pop
les
mov
jo
popa
test
repnz
lock
fwait
pop
sub
jecxz
sbb
pop
inc
mov
idivb
popa
cmp
stc
mov
jecxz
xchg
out
jg
cmpsb
int
sbb
clc
mov
sub
lcall
mov
leave
cs
jmp
push
pop
lods
fsubrs
pop
call
in
loope
jo
outsl
leave
rorl
add
pop
mov
icebp
fadds
xchg
sbb
push
adc
adc
pop
mov
sbb
aam
xlat
les
addl
pop
test
inc
sbbl
ret
or
rorb
and
lods
jle
rorb
arpl
or
iret
lods
sub
pushf
and
xlat
insb
lcall
shlb
xlat
in
xchg
imul
add
fldt
test
lahf
sbb
adc
jle
idivb
sbbb
dec
jno
fwait
jns
or
outsl
and
fs
stos
push
xor
xchg
jge
testb
pop
nop
add
repz
cltd
int3
mov
pop
in
lret
push
dec
push
fsts
jecxz
lahf
enter
pop
jno
ja
inc
mov
sbb
sub
jno
aaa
adc
push
push
lods
ret
or
decl
imul
or
push
int
push
cmpps
jmp
pop
movsl
inc
mov
movsb
repnz
pop
sti
lcall
push
push
ja
repz
push
test
and
sbb
cmp
push
jge
sub
mov
mov
arpl
js
out
icebp
xchg
jb
ss
and
jne
nop
dec
fwait
jecxz
or
je
xchg
out
xor
push
test
dec
movsl
or
push
out
test
pusha
andb
mov
sahf
pop
das
ret
ret
push
fidivrs
jmp
jb
jmp
sbb
jns
push
dec
fsubs
mov
popl
cmp
or
out
add
cmpb
xor
jae
add
dec
adc
movsl
cmc
pushf
arpl
adc
pop
push
inc
sbb
lods
mov
mov
jb
xorl
ror
shrb
xchg
cmp
lods
aad
shlb
xor
inc
imul
pushf
dec
lea
push
in
dec
call
inc
das
sbb
or
imul
cmpb
inc
and
fnstcw
lret
mov
mov
xor
je
sbb
ret
mov
dec
xchg
pop
xchg
out
xor
dec
xchg
jns
jp
push
adc
outsb
dec
pop
popa
xor
pop
or
stos
and
push
adc
push
lahf
cld
sbb
pop
sbb
jb
mov
push
aaa
inc
daa
popa
push
je
mov
jbe
inc
frstor
jmp
inc
insb
ret
out
xlat
lods
adc
pop
nop
test
in
inc
ds
or
sarl
dec
lret
push
movsb
ret
mull
insb
and
sub
and
out
mov
cmp
mov
add
daa
pop
mov
pop
jmp
stos
xor
xchg
hlt
add
pop
jecxz
pop
cwtl
cmc
mov
ja
push
enter
pop
test
in
fwait
sbb
dec
add
outsl
dec
dec
jecxz
mov
aas
int3
mov
outsb
dec
inc
xchg
xchg
pop
sub
or
ret
jp
insl
xor
fiaddl
add
xor
jl
cli
dec
sub
sbb
mov
lock
pop
sarl
addb
xchg
sbb
fsubrl
add
outsb
not
xchg
stos
out
mov
pop
mov
in
movsb
in
ret
sbb
add
mov
lret
movsl
repnz
pusha
scas
mov
sbb
test
stc
jl
shlb
and
cmpsb
push
rolb
push
sbb
leave
xor
cmpsb
fld
inc
mov
int3
xor
adc
data16
notb
sti
and
dec
mov
or
and
jo
inc
aad
inc
push
jbe
rcrl
cs
daa
push
push
push
je
arpl
int
out
fimuls
negb
mov
sub
dec
dec
sub
pop
int3
pushf
shll
movl
popf
leave
ret
dec
mov
pop
es
jp
jmp
push
xchg
jecxz
fiaddl
int
aad
in
mov
xor
xlat
imul
mov
jne
mov
je
or
test
aad
lret
pop
popf
sbb
sbb
sbb
and
adc
sub
push
adc
push
ret
xchg
aam
fsubl
mov
mov
mov
int
mov
sar
pop
xlat
add
ljmp
jmp
dec
out
out
sbbb
add
pop
rolb
sub
cltd
cld
xor
pop
mov
sbb
lcall
pushf
cwtl
mov
jae
aad
mov
shr
mov
ja
lods
pop
cmp
xor
push
roll
cmp
jge
addr16
jp
mov
lret
subb
cmp
pop
add
cli
dec
jns
mov
jo
lock
push
insl
test
mov
jle
push
mov
mov
mov
xor
stos
dec
push
mov
test
fwait
and
push
sbb
std
rorl
lods
pop
mov
inc
push
mov
jns
cmpsl
insl
iret
enter
push
sti
dec
push
or
or
sbb
lds
xor
pop
cmp
stos
inc
int3
imul
xchg
cmp
mov
lock
mov
adc
xchg
pusha
push
lahf
dec
clc
mov
fsubrs
push
inc
add
sub
inc
mov
or
aam
jle
adc
sub
iret
jl
mov
repz
inc
mov
mov
push
scas
inc
push
in
cmp
push
lret
movsb
push
sub
lea
and
loopne
xor
cmpb
pop
mov
and
add
bound
out
xchg
sbb
lods
gs
mov
scas
mov
pop
xor
cltd
fstpl
jnp
mov
sti
in
dec
push
stc
push
mov
and
mov
jecxz
dec
ret
int
adc
int
xor
add
lahf
jno
out
stos
scas
mov
cmpsl
jg
mov
xchg
out
fcom
scas
fisttpl
out
mov
mov
xor
or
repnz
inc
and
das
add
and
enter
outsb
add
jmp
shll
leave
fldt
mov
cmp
les
cmpsl
lahf
xor
and
outsl
sbb
inc
and
sbb
dec
lock
mov
pop
call
cmpsl
in
xchg
cmp
in
fcomps
jmp
mov
mov
push
push
arpl
cmpxchg
jb
stos
popa
lods
jmp
xor
dec
fcomps
ret
push
jle
fsts
fdivs
out
jecxz
fs
loopne
popa
pcmpeqw
jecxz
add
insl
int3
jl
daa
scas
push
repz
je
mov
pop
mov
mov
cwtl
daa
xlat
inc
mov
cmpl
push
sbb
xor
ljmp
cs
lret
add
push
xchg
out
mov
jle
cltd
gs
cmp
cmp
hlt
js
fwait
aad
jl
mov
mov
xor
inc
xchg
mov
cmp
jecxz
pushf
sbb
leave
push
inc
add
inc
xchg
mov
xchg
dec
fildl
in
int
jo
in
cli
fldenv
sar
inc
cltd
sahf
pushf
lcall
rcrl
in
cmp
loopne
sbb
idivb
clc
push
xchg
popf
mov
sbb
sbb
mov
mov
sbb
fwait
lock
clc
test
and
and
add
jle
les
or
fchs
lods
adc
int
mov
lcall
xor
cmp
cmp
sbb
ds
fwait
data16
test
cmp
fnsave
cmp
push
loop
addr16
xchg
mov
mov
sbb
cmpsb
add
fsubl
pop
mov
xchg
mov
iret
dec
lods
mov
and
mov
and
test
sbb
push
ss
div
mov
jno
jle
scas
rorb
test
mov
test
lret
loopne
orl
testl
stos
xor
mov
dec
pop
jecxz
cmpsb
sub
rcrb
sbb
cmp
inc
test
inc
xchg
stos
leave
daa
aas
fstl
push
xchg
gs
rol
mov
or
sub
jecxz
das
cmp
jle
test
sub
pop
adc
bound
fistps
mov
and
rcl
ret
xor
push
out
js
cmpsb
jae
or
mov
pop
into
jle
pusha
test
fcom
pop
xor
xor
and
mov
jge
dec
xchg
leave
jne
outsb
add
imul
fidivs
adc
jae
jp
cltd
xchg
aad
pop
jp
es
push
sbb
inc
or
icebp
das
and
cld
out
aam
aas
pop
pop
in
arpl
jbe
es
and
lds
into
mov
or
jno
lret
icebp
jecxz
xor
jno
mov
in
ficomps
push
push
or
std
and
push
dec
mov
xchg
dec
lahf
ds
xchg
dec
mov
fildl
mov
xchg
cmpsl
pop
mov
das
add
cmp
lea
pop
push
inc
push
loopne
mov
daa
cmpsb
mov
xchg
jbe
adc
push
push
mov
loopne
into
mov
adc
sbb
push
imul
imul
sub
loopne
addl
jo
lods
sub
nop
mov
add
dec
jecxz
xor
scas
mov
mov
jp
sub
xor
adc
mov
and
pop
in
and
aam
scas
js
dec
xor
subb
sarb
ret
dec
mov
mov
popa
cmpsb
shlb
mov
xor
fcomi
popf
push
stc
std
insl
into
xor
fsubr
leave
dec
lea
add
lock
add
pop
data16
mov
pop
fldcw
insl
fsub
repnz
stos
jp
dec
nop
add
pop
jae
xor
in
jl
add
xchg
mov
jne
xor
mov
in
scas
mov
dec
cli
dec
mov
loopne
mov
xchg
jb
int
sbb
inc
xor
iret
mov
in
inc
pop
jae
or
sub
stos
inc
xchg
and
xchg
push
cmp
int3
mov
fsub
das
pop
shll
xchg
shll
mov
sub
nop
js
bound
inc
dec
mov
mov
into
push
das
mov
xchg
inc
in
push
adc
add
sub
mov
jmp
or
cltd
xor
cmp
es
xor
adc
add
pop
loopne
test
xchg
cmp
outsb
es
jl
or
rorb
dec
jle
stos
cmp
out
adc
out
cmpsb
lret
xchg
jbe
jb
hlt
nop
sub
cld
jmp
jbe
lcall
xor
notl
clc
jbe
test
add
sub
mov
dec
shr
xchg
sbb
lods
shr
add
xlat
test
mov
frstor
cmp
stos
lods
bnd
je
fwait
dec
jnp
cmc
test
je
mov
dec
mov
cwtl
ss
sbb
jecxz
dec
adc
repnz
in
xor
test
mov
inc
mov
aas
int
add
or
ljmp
cmp
gs
push
in
xlat
js
cmc
xlat
ror
cwtl
out
cvttps2pi
fcmovnu
out
divl
adc
push
xor
or
popf
inc
xchg
gs
lret
push
mov
loopne
push
lret
outsl
cmpsb
jne
dec
jb
cmp
sti
outsb
out
loope
cwtl
or
lods
mov
aas
cmp
pushf
test
mov
mov
mov
hlt
lods
cwtl
neg
int3
clc
xchg
sahf
adc
out
in
scas
add
dec
inc
mov
pop
nop
clc
inc
inc
push
xor
sbbl
fists
jb
cld
aaa
cmp
out
xorb
add
popf
cmpsl
cld
into
clc
add
pushf
stos
cmpsb
ljmp
mov
dec
ljmp
addr16
jg
mov
xlat
popa
pushf
inc
out
movsl
add
jb
xor
xor
push
repnz
mov
mov
int3
jge
sbb
lds
lds
fldcw
mov
jae
sub
dec
into
xor
fsave
mov
jae
push
sbb
or
imul
loope
ret
ja
stos
push
into
imul
push
push
fistps
mov
xor
insl
xchg
cmp
jae
loope
dec
jb
xor
es
lds
mov
pop
dec
cmp
lret
lret
pop
in
out
or
jecxz
xor
or
mov
add
fwait
imul
sbb
push
sub
addr16
cmp
aad
out
cmp
inc
mov
repnz
test
xchg
das
mov
lods
mov
fwait
pxor
and
decl
mull
mov
gs
push
test
sbb
pop
shl
lds
push
xor
push
enter
aaa
fidivrs
cmp
mov
mov
sub
push
pop
in
mov
mov
mov
jns
xor
mov
sbb
fadd
insl
js
jge
push
or
dec
fcoml
pop
push
fsubs
aas
sub
mov
push
push
xchg
sbb
jge
sbb
xchg
mov
divl
jp
sub
push
dec
fsubrs
clc
out
jl
sar
jp
jge
out
sbb
lds
das
out
sbb
cmp
sbb
sub
sarl
push
popf
js
pop
cmp
pop
call
cmc
icebp
dec
mov
cmpsl
add
push
mov
and
aaa
pop
jne
xor
repnz
ljmp
cmp
or
add
cltd
jl
jae
push
dec
or
aam
stos
jnp
xchg
stos
push
hlt
push
imul
or
push
add
insb
test
ret
pop
shrb
addb
jb
int3
das
scas
bound
out
cli
popf
jo
cmp
xchg
xchg
push
fwait
xchg
xchg
jne
add
push
lds
adc
jns
out
push
push
fcoml
pop
popf
jne
imul
push
sub
xchg
pop
mov
lock
cwtl
mov
stos
lods
out
js
pop
sbb
sub
loopne
int
pop
or
sti
xchg
lret
mov
mov
add
decl
sti
adc
lret
add
or
out
adc
arpl
and
into
outsl
or
push
insb
enter
stos
daa
pop
xchg
scas
sti
add
aad
adc
movsb
icebp
rolb
sets
mov
xor
adc
mov
ss
mov
sub
daa
hlt
sub
mov
jl
insb
mov
leave
sbb
gs
cwtl
stos
rcr
or
movsl
ret
loopne
add
sti
ret
fbstp
adc
mov
imul
xor
pop
or
loopne
jb
jg
xchg
xlat
push
rorl
pop
or
sar
pop
popa
ret
in
mov
repnz
cmp
test
in
push
lret
mov
scas
jae
int
add
and
dec
scas
fmulp
inc
bound
mulb
or
lea
or
fstps
and
loope
out
arpl
push
jno
or
or
inc
inc
pop
cmp
data16
gs
push
mov
inc
stc
pusha
sbb
mov
out
cltd
mov
testb
pop
pop
dec
orb
ret
push
cs
jnp
out
fisttpl
push
mov
js
adc
lods
js
xchg
data16
mov
jle
and
fs
add
dec
or
mov
mov
pop
scas
sub
jecxz
inc
int3
test
xchg
clc
or
test
mull
repnz
fwait
push
adc
inc
and
out
enter
rolb
pushf
xchg
mov
dec
sbbl
sbb
adc
lahf
out
cld
pop
fistl
mov
xchg
jne
sti
nop
ds
adc
lock
lods
push
jne
icebp
xchg
shll
mov
xor
pop
jecxz
xchg
cmp
nop
mov
adc
mov
inc
sbb
adc
stos
mov
pop
cltd
sub
mov
push
divb
and
scas
xchg
lahf
push
je
mov
mov
jge
push
mov
fwait
jb
repz
push
cmc
pop
cmpsl
xchg
flds
pop
cmc
cmp
loop
test
sbbl
in
sub
cmpsl
mov
push
shr
je
in
sbb
inc
pop
mov
mov
sub
aam
in
imul
mov
mov
jne
adc
fildl
jp
xchg
fcompl
push
loopne
movsl
fcoms
fmulp
mov
xchg
push
mov
push
ss
rcrb
xor
in
or
cli
pushf
mov
lock
cmp
pusha
mov
jle
inc
jne
je
cs
std
stos
xchg
aas
xchg
push
scas
arpl
cld
pop
shrl
add
jo
dec
inc
je
sbb
loope
testl
daa
sbb
inc
call
icebp
jmp
xor
dec
fs
jne
cmp
dec
in
mov
sbb
insl
nop
sbb
pop
into
add
aad
andl
lods
addr16
call
jne
test
stc
mov
repnz
mov
sub
aaa
and
dec
lret
mov
xchg
push
ljmp
out
ret
cmc
lods
ret
sahf
push
cltd
cs
or
mov
inc
xor
add
mov
xchg
sarb
xor
xchg
mov
adc
sub
nop
mov
outsb
sub
push
jb
cld
xor
xor
les
shrl
pop
mov
jg
incl
dec
lock
stos
sbb
cld
daa
jb
xchg
adc
push
or
in
jae
sbb
cmp
xchg
jae
and
dec
adc
movsl
adc
push
adc
xchg
out
orb
sbb
into
fbstp
dec
xorl
cli
in
repz
je
scas
and
xchg
je
mov
or
scas
add
xchg
mov
test
mov
flds
inc
or
shl
hlt
jnp
stos
test
sbb
pop
in
dec
sbb
xchg
mov
sbb
loope
lds
out
add
sahf
icebp
and
jp
popa
icebp
pusha
outsb
dec
pop
sbb
movsl
jne
into
std
test
push
sub
cld
cli
shl
xor
pusha
and
mov
add
push
mov
jnp
or
pop
mov
push
mov
mov
inc
mov
cmp
cli
dec
loop
cli
adc
jae
das
scas
cli
fldl
ljmp
inc
lds
mov
mov
scas
or
jge
cwtl
mov
pop
jns
inc
adc
mov
mov
cmpl
hlt
or
mov
fnstenv
ret
fisttpl
gs
popf
mov
rcrb
rcr
cmpsb
mov
adc
mov
les
add
xchg
fsts
loopne
dec
push
cmp
jmp
cmpsw
mov
clc
xchg
cmp
call
sub
outsl
mov
dec
js
jo
mov
push
pop
iret
add
jecxz
pushf
dec
sub
gs
or
jne
fwait
inc
xchg
or
push
cmpsl
lret
je
sub
xor
jae
outsb
movsb
movb
js
daa
sbb
mov
inc
mov
scas
sbb
test
pop
scas
adc
cli
jns
sbb
rol
dec
test
pop
cwtl
in
lods
and
xlat
data16
adc
je
xchg
fildl
mov
mov
push
mov
repnz
cmpsl
shr
iret
xchg
or
lret
popf
nop
dec
out
jg
cmc
outsb
dec
addr16
pop
mov
mov
ss
pop
adc
dec
popa
repz
jo
fistpl
ficompl
fwait
cmpsb
lea
icebp
rcrb
xchg
add
mov
movsb
adc
aas
test
pop
xchg
fistpll
cld
bound
and
incl
aad
and
leave
and
sub
idiv
cmp
ljmp
mov
mov
and
popf
imul
fstl
rcrb
jmp
mov
lods
mov
inc
add
or
adc
ljmp
lods
nop
data16
les
jl
add
jp
push
lcall
jns
inc
mov
ror
shl
inc
popa
leave
faddl
int3
into
sub
xor
dec
lds
les
cmp
mov
add
lods
jle
inc
xor
cmpsl
push
xchg
adc
jo
pushf
inc
push
xor
jne
dec
jle
cmp
scas
sub
or
inc
into
sub
add
cltd
and
test
fsub
push
jno
or
stos
mov
fwait
cltd
pop
ljmp
sub
and
sbb
mov
cs
pop
sbb
loope
inc
sbb
aad
lret
xor
mov
movsl
jae
xchg
pop
push
hlt
lcall
inc
jo
pop
jbe
rolb
loope
mov
or
xchg
scas
xor
out
arpl
cmp
jg
adc
outsl
ss
movsb
fwait
pop
ret
imul
inc
nop
cmp
mov
and
and
lret
sub
mov
aad
mov
mov
iret
xor
xor
leave
in
insb
test
push
sbb
cmp
les
mov
aad
mov
fistps
sbb
push
mov
cmpsb
loop
inc
and
mov
dec
rcrb
xchg
test
test
xchg
mov
pop
mov
outsb
push
xchg
jecxz
adc
jge
subl
push
ds
or
jp
jo
add
test
or
fldcw
int
sbb
mov
loopne
dec
add
mov
rcll
imul
mov
push
addr16
push
push
sbb
lahf
jle
aas
daa
push
lret
pop
push
js
inc
cmp
es
mov
xchg
add
pusha
stos
xlat
notl
sub
arpl
xchg
inc
pushf
stos
inc
test
icebp
aas
sub
inc
lret
inc
pushf
fcmovnu
loop
stos
sbb
cltd
bound
xor
lods
push
int
or
cmpl
mov
ret
mov
mov
mov
push
xor
inc
pop
xor
scas
cmovns
sbb
icebp
outsl
xchg
icebp
mov
sub
hlt
and
ret
scas
pop
nop
imul
test
mov
sbb
mov
sub
es
out
das
mov
out
xor
hlt
jo
mov
dec
fwait
dec
push
jne
fidivrs
fs
xor
out
out
adc
or
dec
sub
push
movsb
cmp
push
pop
aam
mov
inc
movsl
in
adc
sbb
les
jl
dec
ror
sub
dec
pushf
loope
out
fbld
outsl
xchg
lahf
mov
cmpsb
jbe
mov
mov
jecxz
repz
in
mov
mov
jl
mov
jbe
add
movsl
lcall
fwait
cmp
push
sbb
ret
sub
addr16
into
or
or
daa
sub
fisubs
sub
lods
testl
sbb
ljmp
popa
mov
jmp
and
fcomp
sbb
inc
shrl
jecxz
mov
icebp
xor
mov
inc
popa
pop
out
mov
adc
xchg
rorl
mov
ljmp
ja
in
outsb
jge
int3
in
bound
pop
pop
negb
leave
test
mov
setno
add
shrb
pop
in
data16
cmp
jl
incb
loope
outsl
mov
lret
or
push
mov
pop
sub
movsb
fcmovne
pop
adc
or
sarb
push
fldenv
push
cs
lret
xchg
cltd
push
xchg
stc
sbbb
insl
movsl
cmc
imul
test
adc
jge
decb
test
cmp
jae
decb
int3
push
lea
xor
mov
sub
bound
in
xchg
adc
cli
test
nop
pop
mov
loope
nop
fnsetpm(287
lock
mov
cmp
cmp
leave
push
inc
xor
dec
aaa
adc
mov
sub
cmp
pop
out
or
add
dec
mov
mov
mov
fisttpl
repz
xlat
imul
aaa
pop
sbb
mov
out
inc
dec
fucomip
jle
aaa
les
out
das
outsl
jg
psubsb
pop
int
xchg
pop
in
mov
addr16
fwait
jnp
fucomi
fwait
xor
jne
loopne
inc
push
sbb
xor
dec
insb
gs
cmp
jle
addb
imul
call
fdivrs
cltd
call
insl
xchg
aad
pop
mov
ss
mov
faddp
pop
xor
or
loop
push
dec
sbb
xor
xor
ss
push
lret
sbb
mov
sbb
cmpsb
sbb
push
out
out
inc
pop
ss
push
ja
push
sbb
sbb
push
aas
pop
push
cmc
enter
jg
adc
into
and
push
jno
adc
pop
dec
push
xchg
cmp
cmp
dec
lods
nop
jmp
mov
xchg
inc
sbb
mov
lods
enter
addb
in
dec
xor
pop
xchg
push
cmp
ljmp
inc
js
rclb
aad
fldl
inc
inc
mov
adc
or
xchg
mov
fcoml
inc
lcall
dec
adc
repnz
add
xor
outsl
push
call
cld
incb
mov
sub
gs
in
test
xor
push
mov
lcall
cmc
shll
sbb
lret
push
shlb
add
insl
stc
xchg
pop
or
sbb
jp
xchg
aad
add
test
jmp
es
mov
pop
pop
push
cmp
addr16
cli
hlt
or
dec
and
leave
repnz
popa
pop
clc
cmp
add
cmc
enter
ror
sub
sub
xchg
in
pop
jmp
pop
jge
shl
adc
in
ret
ss
lds
test
cld
daa
nop
mov
mov
mov
int
scas
add
pop
lret
xchg
cmp
and
cli
and
add
mov
adc
cmp
lret
and
dec
sbb
and
es
stc
stos
lahf
ja
pop
cmp
cmpsb
dec
pop
sub
into
int
xchg
out
sbb
adc
fwait
push
sub
insl
in
jmp
push
fimull
sbb
out
ret
loope
test
push
sti
call
dec
nop
enter
pusha
mov
fs
jbe
je
lods
test
mov
fimull
pop
push
ret
js
movsb
adc
stos
add
nop
and
gs
sub
mov
fsubrp
inc
cld
je
cli
iret
mov
push
test
addr16
shlb
inc
mov
in
push
outsb
jne
stos
lcall
inc
pop
das
inc
repz
iret
or
pcmpeqd
lahf
repz
arpl
jecxz
shll
ljmp
shrl
lret
and
jbe
test
stc
and
iret
cmp
push
xor
xchg
insl
adc
rclb
sbb
rorb
jmp
fcmovne
cmpsl
adc
xchg
cmp
aam
adc
push
dec
dec
js
mov
pop
pop
lock
dec
and
jle
lea
sbb
add
fimuls
test
lret
xor
pop
popf
xchg
fisttpl
ret
pop
mov
out
jns
push
imul
popf
sbb
inc
stos
and
xchg
loope
xor
cltd
or
int3
out
xchg
test
add
out
imul
dec
and
sbb
clc
lods
outsl
adc
rclb
movsl
sbb
xor
test
int3
fsubrl
pop
mov
mov
int
or
xchg
movsb
sahf
mov
stos
shl
or
mov
mov
mov
cmpsl
adc
mov
mov
or
push
sub
sahf
ja
iret
movl
cmc
xchg
add
daa
fidivs
lahf
fdivrs
xor
out
cmp
jle
aas
hlt
fstps
int3
call
mov
fnstcw
movsb
xchg
and
xchg
cmpsl
mov
sub
cltd
sub
adc
insl
jb
xor
adc
aad
cvtps2pi
add
jmp
aad
popf
scas
cmpsb
jle
sub
test
mov
loop
leave
test
xchg
lds
and
and
insl
nop
pop
jns
sbb
lock
xor
movsb
imul
js
inc
lret
or
neg
xor
lods
fwait
mov
mov
imul
fstpl
enter
sbb
adc
push
mov
mov
jae
adc
outsb
jns
sarb
xchg
add
jmp
pushf
repz
dec
repnz
aam
mov
jae
mov
shlb
jae
jno
xchg
fs
lock
leave
lret
lcall
or
cmpsl
insb
sub
xchg
pcmpgtd
ljmp
into
outsb
xchg
xchg
dec
iret
sbb
or
sahf
pop
out
scas
out
pop
insb
lahf
out
pop
and
and
data16
mov
out
xor
adc
aad
shll
jle
inc
test
out
test
jp
cmp
popf
cwtl
movsl
cmpsb
cwtl
or
mov
and
jmp
sbb
repnz
cmpsl
push
ja
add
xchg
xor
dec
dec
xchg
repz
xlat
sahf
add
inc
lock
sub
icebp
lret
fstl
ja,pn
or
push
js
movsb
mov
add
cmc
mov
shr
loop
push
adc
sub
pop
popf
pop
sbb
mov
adc
stos
sarb
sbb
popf
adc
mov
push
and
dec
add
outsl
xlat
dec
sub
mov
add
ds
inc
inc
ss
lock
jb
clc
outsl
sub
xor
mov
in
jae
mov
call
test
jg
mov
adc
out
xchg
mov
jb
add
jmp
int3
int
enter
leave
insl
js
mov
xchg
sub
ss
or
xchg
xchg
pop
push
sub
pop
mov
aas
dec
adc
out
sub
movsb
mov
sub
and
insb
pusha
fs
sbb
daa
and
adc
sbb
pop
jge
cmp
dec
jo
stc
pop
sarb
es
sub
popa
cmp
loope
push
sub
cwtl
adc
add
inc
or
inc
mov
cmp
pop
not
xchg
shll
in
mov
mov
sub
int
lret
orl
js
lret
popf
adc
xrelease
mov
clc
mov
dec
pop
sbb
add
add
je
data16
push
jmp
fnstenv
es
dec
sti
sbb
sub
fisttpll
and
xor
pop
push
sbb
or
sarl
ret
xchg
repz
inc
mov
xchg
jns
jg
inc
sbb
icebp
scas
dec
jle
int3
or
and
insl
dec
ret
lods
xor
testl
sahf
mov
lods
mov
and
pusha
jbe
addps
jmp
mov
cmp
lods
cmp
dec
in
jge
and
dec
imul
mov
mov
xchg
and
or
fldcw
mov
jl
cmp
hlt
dec
inc
pop
filds
nop
clc
jno
inc
inc
cwtl
jl
inc
lea
sub
fistpll
arpl
sbb
outsb
sub
mov
aam
test
xor
cmc
insl
dec
sbb
mov
jecxz
xor
cmp
daa
sub
inc
outsb
xor
out
mov
daa
add
sahf
imul
push
cmp
mov
xchg
xchg
and
hlt
inc
cmp
pushf
imul
mov
stos
aad
popa
mov
sub
rol
xchg
mov
adc
and
inc
adc
xor
inc
leave
xor
es
xor
les
push
mov
rorb
cmp
fidivs
lret
int3
cld
mov
cs
scas
pop
test
mov
mov
lods
lahf
push
cld
shlb
imul
add
test
jbe
mov
sub
scas
push
jne
sub
imul
ss
xchg
xor
push
loopne
xchg
jge
int3
cmc
mov
hlt
cmc
leave
adcb
ret
ret
dec
xchg
push
ror
push
jle
mov
jne
lods
test
jmp
fmul
or
push
mov
das
adc
add
adc
lcall
jnp
push
sarb
enter
or
insb
pop
lret
dec
sub
or
icebp
aaa
mov
subb
test
pop
push
xchg
push
adc
jmp
pop
dec
pop
leave
lea
mov
mov
push
repnz
or
cmpsb
push
or
jae
mov
jecxz
fidivrs
dec
aaa
imul
mov
lret
jne
cs
or
inc
push
xchg
das
ss
aas
fwait
in
or
arpl
jmp
lds
hlt
stc
push
add
sbb
daa
in
and
mov
pop
mov
push
xor
int
sbb
inc
push
nop
adc
aaa
ror
jnp
sbb
mov
jb
xor
inc
xchg
movsb
jnp
mov
push
xchg
in
imul
pop
mulb
neg
lret
sar
sbb
inc
movsl
xor
sbb
nop
cli
xor
ret
sbb
out
repz
inc
push
repz
mov
fisubrs
fisttps
nop
andb
adc
jmp
dec
xchg
jmp
aas
and
pop
in
push
dec
cmp
out
dec
enter
mov
fildll
xchg
push
int
jp
xchg
dec
jno
imul
icebp
mov
xor
stos
pop
imul
bound
imul
sbbb
fcomps
lcall
loop
dec
stc
pop
mov
pop
and
or
mov
pop
xor
inc
pop
int3
sbb
jge
rcl
rcrl
addb
jbe
mov
inc
pop
xlat
ret
int
xchg
lock
mov
sti
cmp
add
mov
inc
xchg
xchg
das
push
and
or
lret
push
sub
push
out
mov
out
sahf
dec
loop
fcmovb
sbb
cmpsl
push
lock
fisubrl
adc
jmp
leave
sub
add
jns
push
push
popf
hlt
in
out
or
mov
sub
lcall
xchg
sbb
push
dec
gs
into
add
sub
lret
cmp
popf
jge
rcll
cmp
movsl
dec
xchg
daa
cmpsb
out
mov
int3
or
mov
cmp
in
sbb
dec
imul
cmp
aas
out
ss
icebp
xor
push
pop
ds
js
sub
pop
inc
push
js
xlat
push
mov
mov
cs
into
loope
xchg
pushf
pushf
pushf
fldt
int
push
jb
shrb
jo
divb
jns
leave
xchg
dec
mov
jne
fiaddl
lock
imul
add
sbb
and
pop
loopne
in
fs
outsb
mov
in
stos
push
add
stos
jle
popa
repnz
push
mov
pusha
jae
jp
fisubl
and
addr16
sbb
lcall
stc
icebp
xchg
or
cmc
jecxz
ret
dec
jecxz
jecxz
xor
pop
bnd
dec
and
enter
aam
frstor
fucom
pushf
inc
cmp
mov
mov
xchg
rorb
cli
out
daa
aaa
mov
cmp
cmp
jmp
mov
lods
pusha
xchg
adc
sub
lret
shrl
popa
int
sbb
add
cmp
loopne
popf
dec
das
mov
jnp
push
jg
loope
lcall
fcmovb
xor
addr16
pop
out
xor
mov
push
pop
insl
ja
outsl
fcoml
fwait
or
inc
pop
in
jb
xor
or
test
cmp
jl
aam
cmp
test
dec
repnz
adc
mov
mov
jg
push
rcll
dec
lcall
mov
push
xchg
cltd
into
push
sbb
scas
or
outsl
pop
jg
jecxz
movsl
xchg
fmull
xor
leave
jae
inc
push
or
fldt
loopne
dec
adc
cmpsb
and
lahf
sub
jecxz
push
push
cmp
lahf
in
in
push
shlb
pop
pop
leave
js
scas
inc
mov
fisttpl
mov
aaa
es
out
in
repnz
fistpl
jns
lcall
sub
sbb
sbb
cmpsb
out
cmp
mov
mov
jge
dec
pop
cmpsb
out
fsubrs
mov
fsubl
jp
xor
stos
jno
dec
sub
xchg
mov
jge
shrl
or
into
xlat
mov
xlat
xlat
push
pop
push
insb
xchg
and
mov
ds
inc
aaa
xchg
enter
test
sub
dec
les
mov
mov
mov
mov
leave
out
mov
test
mov
mov
mov
jns
inc
jle
xchg
les
add
andb
adc
aam
test
push
add
fnsave
inc
pop
shll
repz
push
testb
sbb
add
insb
adc
inc
aam
imul
or
pop
movsb
cmp
mov
scas
sub
and
dec
ljmp
mov
clc
mov
cmp
out
xchg
pop
inc
dec
inc
dec
add
ds
mov
ret
dec
push
in
pusha
mov
push
cltd
into
xor
stos
mov
pop
jge
mov
loope
pop
pop
in
int
lods
jo
fwait
xor
inc
mov
push
mov
js
mov
subb
mov
sbb
lret
ret
or
jae
add
sbb
mov
out
dec
enter
mov
pop
jl
mov
repz
jne
scas
xor
je
leave
mov
sub
in
cmpsl
negb
jae
andb
mov
mov
fcmovnb
ret
in
fistps
adc
cmp
lret
imul
dec
call
add
fs
xchg
test
dec
scas
mov
xchg
mov
fnsave
out
testb
cmp
pop
push
cmp
mov
sub
movsl
lret
adc
das
pop
lods
xor
int
push
lret
hlt
jp
add
adc
lret
sti
or
pusha
lret
loope
xchg
test
sbb
xor
mov
incb
mov
mov
xchg
mov
mov
sbb
push
pop
scas
jmp
cli
cmpsl
cltd
test
icebp
into
lcall
add
xor
adc
call
and
sub
dec
cmp
mov
xchg
out
jg
mov
lahf
js
mov
lea
cli
icebp
cmpsl
cmp
outsb
js
jp
imul
dec
outsl
dec
mov
push
add
das
cmp
mul
test
lock
popa
xor
mov
inc
cmp
adc
cmp
xor
pop
in
cwtl
sub
rorl
lret
lret
xor
lret
or
loop
aam
jb
cmpsb
test
inc
stc
out
sub
fbstp
xchg
das
pop
xchg
scas
mov
repnz
sub
pop
nop
sub
movsl
adcl
inc
ljmp
fnstsw
repz
addb
pop
adc
push
cmp
mov
cmpsb
aad
stos
repnz
scas
pop
push
xchg
push
cmpsb
nop
dec
aad
ja
xor
scas
sar
sbb
pop
subb
bound
incl
pushf
nop
xchg
push
int3
inc
out
test
out
lret
sbbl
dec
in
push
lret
jno
mov
idivl
les
ds
sti
or
shrb
push
xchg
push
outsb
lds
jns
and
ds
cmpsl
add
outsl
xlat
cmp
fucom
add
negb
and
inc
out
jle
sub
bound
lret
loope
bound
lret
addb
inc
movb
notb
cld
sub
pop
out
xchg
out
push
pop
inc
lea
in
ljmp
insb
xlat
mov
pop
jno
and
jne
sbb
fildll
out
dec
fs
movsb
pusha
adc
push
jns
lea
inc
mov
jg
bound
imul
or
out
dec
in
insb
mul
popa
or
lcall
jmp
fidivs
inc
inc
pop
jecxz
jns
mov
xchg
cmpsb
rclb
leave
int
mov
mov
ret
sbb
inc
jbe
gs
fcomi
jle
inc
add
ffreep
sub
or
push
add
push
cli
fucom
mov
push
pop
scas
or
pop
fsubrs
dec
loop
or
sub
adc
fmuls
push
bound
jmp
lods
iret
out
stos
mov
inc
fs
sbb
int
sbb
imul
push
add
xor
mov
or
jno
stos
iret
add
dec
push
insl
fdivr
rolb
imul
xlat
lahf
add
lods
adc
xor
mov
jne
in
test
pop
sbbl
mov
adc
or
mov
shr
sub
jp
xchg
or
mov
sar
jle
pop
lahf
dec
pop
lods
sbb
pop
or
mov
inc
mov
loop
insl
addr16
bound
test
xchg
mov
sti
shlb
mov
fimuls
push
cltd
xchg
mov
out
xchg
and
sbb
mov
cmp
pop
and
mov
fnsave
jo
jge
mov
dec
sbb
fidivrs
popf
data16
nop
test
push
add
xor
addl
lret
mov
push
xor
hlt
mov
out
fcoms
add
loopne
lods
mov
sub
inc
lret
cmp
cmpsl
xchg
jge
push
imul
mov
and
mov
fisttps
sub
and
lock
mov
mov
dec
je
jl
es
jp
sahf
push
nop
dec
add
outsl
mov
aad
cld
lret
je
and
adc
inc
cltd
cmp
aas
pop
sbb
sahf
jnp
dec
and
in
int
test
imul
add
sbb
in
push
mov
mov
xchg
mov
sti
lahf
in
in
xchg
loopne
jb
push
das
out
repnz
jl
pop
cmp
aas
pop
adc
dec
out
mov
aas
pop
inc
adc
test
pusha
cld
sub
sub
inc
in
movsl
lods
sub
xor
pop
ljmp
out
xor
push
lcall
push
xchg
inc
aad
test
xchg
jp
lods
cmp
stos
pop
mov
outsb
pop
or
in
fcom
xchg
mov
insl
cmp
sub
cli
rorb
lret
cmp
sbbb
pop
repz
jnp
xlat
mov
xor
leave
mov
test
mov
sahf
shr
mov
es
mov
xchg
mov
dec
dec
lret
fldl
push
xor
mov
cmp
mov
pop
mov
adc
jae
loop
je
jmp
xor
pop
inc
mov
pop
cs
xchg
sbb
cmp
xchg
and
adc
push
subl
xor
inc
imul
add
sub
rolb
sub
mov
inc
pop
lcall
mov
mov
out
mov
jo
outsb
cltd
xlat
mov
jo
das
cmp
and
mov
sbb
mov
xor
ret
jp
mov
sub
out
add
cld
xchg
sbbb
lock
mov
add
out
mov
jno
xor
xchg
loope
cli
insb
pop
cmp
pop
dec
pop
sbb
adc
aad
push
mov
adc
add
push
int3
scas
test
rcrb
sahf
cmp
cwtl
pop
cs
mov
mov
jno
ret
shll
sbb
lods
inc
lahf
leave
mov
jns
sti
in
shrb
js
sbb
mov
test
mov
sub
cmpsb
cmp
adc
hlt
xchg
incl
pop
jb
inc
outsb
mov
lods
ljmp
mov
and
mov
lcall
inc
dec
cmp
pushf
in
xchg
mov
mov
pop
cmp
cmp
dec
and
xchg
xchg
sub
loop
jcxz
aas
xor
push
dec
dec
xchg
lds
cltd
test
int3
jecxz
pop
add
add
cltd
mov
inc
sub
mov
jmp
clc
iret
xlat
xor
jo
jo
repnz
mov
ficoms
fisttpl
pop
test
pop
jmp
out
dec
pop
aam
lret
inc
push
icebp
xchg
cmp
ljmp
out
pop
mov
test
mov
rol
fdivl
loope
push
in
fcomip
cmp
mov
shrl
test
and
out
cmp
cmp
push
hlt
jns
loop
cltd
cmp
repnz
dec
cmpsb
lea
push
aas
and
mov
std
mov
xchg
mov
dec
inc
lods
mov
pop
add
jge
ds
jb
xchg
add
jo
xor
pop
sbb
mov
push
sbb
inc
mov
sbb
popa
je
clc
mov
lea
adcl
lds
popf
imul
xor
sbb
mov
imul
int
lret
fstpl
push
lods
pop
pop
jo
xorl
ror
addr16
loope
jns
sub
add
mov
xchg
add
clc
add
pusha
pop
scas
cmp
mov
pop
shlb
pop
cld
inc
sub
cwtl
adc
loop
popa
dec
outsb
mov
cmp
decl
idivl
loope
push
cltd
jle
jl
cmpsb
jno
fldl
loopne
movsl
es
mov
mov
out
popf
pop
out
iret
sbb
push
js
arpl
sub
xlat
xchg
mov
fimull
sbb
mov
jle
test
inc
faddl
stos
xor
ret
mov
fnstsw
adc
jbe
inc
aad
in
into
cmp
popf
in
repnz
jle
subl
jo
lret
jo
loopne
add
xchg
jbe
out
mov
inc
jmp
loop
dec
andl
or
mov
mov
cmp
inc
jge
je
and
insl
ljmp
test
push
xchg
sub
sub
sub
ja
inc
pop
out
adcb
push
les
dec
scas
pusha
mov
jae
mov
inc
xlat
mov
repz
xlat
fnstcw
int3
push
ljmp
jecxz
mov
sbb
mov
push
lock
pop
or
or
in
shlb
adc
lret
sti
add
roll
cmpsl
xor
mov
jg
mov
lcall
jo
es
jno
outsl
ret
aas
cmp
push
pop
insb
push
mov
icebp
jmp
xlat
mov
cwtl
jg
repz
outsl
inc
push
sbb
jg
cmp
stos
pmullw
int
js
jmp
repnz
clc
mov
test
enter
xchg
popa
pop
loopne
push
lods
stos
mov
lea
push
ljmp
jl
lahf
jmp
pop
sti
stc
xor
cltd
int3
pop
add
into
test
negl
or
andb
test
jge
aaa
loope
mov
lds
stos
filds
jno
sbb
test
add
cwtl
xlat
stos
cmpsl
lods
mov
mov
arpl
pop
pop
mov
push
es
arpl
pop
mov
ds
dec
mov
idiv
add
jg
mov
clc
xchg
and
and
mov
imul
push
mov
cmp
xor
mov
jl
pop
mov
repz
sbb
sub
int3
jle
dec
sbb
push
xchg
outsl
cmp
andb
fisubrs
inc
xchg
cwtl
outsl
aas
push
push
xor
jmp
push
xchg
push
jae
movsb
jg
fcomi
cli
mov
insl
dec
sti
xchg
pop
push
dec
inc
incl
xchg
or
stc
push
nop
mov
mov
iret
aam
mov
inc
lds
jmp
pop
or
add
mov
nop
in
inc
ret
inc
cmp
add
outsl
in
mov
dec
lret
into
sbb
and
jl
or
je
mov
jl
scas
repnz
lcall
faddl
je
push
mov
mov
add
pop
add
jo
sub
and
rorl
ljmp
sbb
hlt
daa
cmp
cmc
negl
mov
dec
shl
xor
pop
mov
sub
sbb
fistpll
loopne
xor
add
and
sub
daa
xor
sbb
test
xor
pushf
xor
push
shlb
jle
stos
shlb
push
mov
into
ss
inc
adcl
push
popf
push
decl
mov
xchg
xlat
cmp
leave
push
iret
mov
cmp
fcomp
scas
loope
fadd
mov
sub
into
ja
in
xchg
dec
cmpsl
pop
mov
jge
hlt
mov
mov
cltd
shrl
or
je
adc
mov
mov
mov
pop
std
stc
jno
inc
pop
mov
pusha
xor
mov
fldl
cltd
push
mov
xchg
repnz
sub
outsb
xor
cwtl
pop
jne
lcall
mov
cmpsl
mov
cmp
inc
jecxz
ds
ret
test
xor
aad
dec
das
sarl
popf
pop
ss
pop
cmp
jp
outsl
xchg
popf
xchg
mov
mov
pop
dec
mov
stos
clc
nop
call
jmp
out
jno
jb
in
pop
push
pop
rcr
inc
sbb
negl
test
push
add
enter
jno
and
data16
and
enter
stos
sub
xchg
dec
cwtl
sbbl
cmpsl
mov
jo
jns
js
xchg
fcomi
movsb
popa
imul
sbb
mov
mov
and
adc
adc
andb
push
and
sbb
xchg
fistps
shll
pop
dec
aas
cmp
adc
lock
outsl
or
cli
jle
fisubl
jl
add
rcl
lcall
ljmp
mov
test
test
lods
xorb
sbb
xchg
mov
in
int
push
lds
push
xchg
pop
inc
aam
jecxz
or
jo
and
dec
cmpsb
mov
faddl
xlat
mov
ljmp
sbb
add
in
mov
pop
inc
std
dec
push
stos
incb
xor
add
repnz
jge
jl
daa
mov
mov
loop
xchg
push
and
mov
xchg
pop
aam
movsb
das
jb
sub
jecxz
imul
and
loopne
jo
jge
inc
adc
cmp
fildl
imul
jno
lret
loopne
xchg
gs
ljmp
mov
sub
repz
add
imul
add
push
outsl
popa
xor
leave
scas
icebp
cmp
xchg
stos
mov
and
aas
fnsave
daa
lods
jb
mov
movsl
xchg
pop
mov
sbb
cs
ja
test
add
stos
sbb
cmc
dec
xor
mov
popf
cs
inc
das
dec
or
xchg
pop
into
add
push
inc
mov
mov
or
and
push
lods
dec
xchg
je
mov
mov
mov
ds
clc
push
aad
mov
mov
push
arpl
jbe
ds
pop
xlat
mov
sbb
lock
jge
mov
mov
and
mov
inc
out
xchg
mov
cli
mov
pop
hlt
push
dec
add
dec
fldcw
sbb
and
dec
push
dec
ret
loope
imul
mov
xchg
decb
inc
movsl
ret
add
mov
call
xor
jl
sahf
popa
test
outsb
ljmp
test
cmp
adc
out
out
pop
inc
or
mov
out
adc
sti
test
imul
mov
pop
push
xchg
inc
adc
pop
popa
cmpsl
aas
sbb
or
negl
xor
dec
push
dec
icebp
inc
sub
pop
xchg
push
ficomps
jmp
inc
sub
inc
or
mov
dec
leave
aam
push
xor
cmc
addr16
push
insb
inc
mov
repnz
cmp
into
adc
cmpsb
sbb
xor
cmp
aaa
pop
call
or
cs
clc
ret
test
lock
lods
jle
popf
std
into
pop
inc
jb
fcompl
push
ljmp
in
test
cwtl
cltd
xchg
pop
xor
mov
add
pop
clc
jp
scas
inc
fadd
into
test
push
loopne
mov
adc
mov
xchg
mov
clc
shl
mov
nop
sbb
mov
insl
sub
outsl
xchg
imul
add
dec
adc
sub
push
mov
cmp
imul
mov
mov
pusha
ss
in
lcall
lods
lea
dec
or
pop
xchg
pop
inc
sub
xor
divb
jne
orb
adc
int3
lods
stc
sbb
xchg
ror
repz
in
cmp
fwait
lret
pushf
fs
cmp
mov
mov
inc
inc
adc
sbb
pushf
jp
js
dec
mov
push
sub
les
stc
jle
mov
jo
in
sarl
cwtl
inc
pusha
es
daa
mov
adc
jbe
mov
dec
ja
mov
stos
fisubs
sbb
jno
aam
sub
aas
dec
insl
xchg
icebp
nop
in
cmp
mov
mov
and
jns
call
push
xchg
aaa
bound
cmp
add
jmp
aad
push
out
pop
into
sarl
pop
shlb
push
sbb
dec
mov
sti
push
addb
call
repnz
mov
je
and
pop
lret
mov
les
mov
inc
inc
mov
enter
xchg
imull
cmp
xchg
inc
mov
dec
dec
sbb
test
dec
pop
or
loopne
jb
mov
popa
mov
jl
sbb
into
mov
mov
dec
mov
popa
gs
leave
mov
bound
data16
data16
and
fdiv
cmp
int
push
lahf
sbb
stos
leave
or
bound
push
fwait
mov
mov
lock
loopne
out
repz
outsb
imul
fsubrs
dec
xchg
inc
mov
faddl
dec
or
repnz
push
adc
inc
dec
add
int
and
insb
mov
sbb
imul
sub
push
pop
lcall
mov
jge
das
fisttpll
lds
xchg
and
cmp
les
inc
push
outsl
adc
xchg
jmp
jo
loop
dec
push
js
add
mov
fwait
sub
mov
repz
int3
xor
loop
cmp
imul
incl
adc
and
sub
or
or
and
adc
xchg
jb
cmpsb
xchg
ret
jl
leave
enter
jae
mov
sub
mov
inc
adc
cli
in
jle
sub
fimuls
shll
mov
xlat
inc
repz
push
loope
lcall
ja
and
aad
inc
add
in
mul
aad
lret
xchg
es
popa
mov
or
mov
xchg
xchg
repnz
jae
cmpsl
xor
stos
mov
cmpsb
or
adc
pop
mov
or
pop
dec
jmp
push
fisubl
adc
les
mov
add
pop
or
jp
mov
mov
rorl
mov
lods
adc
pop
jle
mov
adc
out
movsl
sbb
push
popa
dec
jne
jno
stos
cmc
inc
test
lods
xchg
fdivrs
fisttpll
lcall
stos
sub
jo
adc
les
mov
pop
jnp
jb
in
cwtl
popaw
dec
pop
cwtl
jo
inc
and
paddq
mov
out
hlt
scas
fcoml
pop
inc
push
xchg
in
push
lahf
jp
mov
cmp
adc
sbb
or
lahf
sub
add
call
jns
cmpsl
and
xchg
les
xchg
xor
push
inc
fsubl
gs
stos
rcll
xor
cmpxchg
mov
push
xor
andb
add
push
in
pop
addr16
fcompl
xorl
mov
lock
xor
sub
pop
pushf
cmp
xor
push
xor
sub
pushf
or
sub
inc
rcrb
xchg
pop
aaa
testb
push
bound
frstor
shll
cld
sti
loop
add
add
fs
in
add
popf
mov
xchg
fisttps
ljmp
mov
icebp
mov
mov
repz
and
arpl
mov
call
mov
xor
sub
out
add
imul
and
xchg
or
or
pop
fucomp
jne
adc
fucomi
insb
mov
sbb
add
ljmp
cmp
sbb
in
mov
cli
ret
add
arpl
mov
push
mov
rclb
les
movsb
seto
mov
int3
or
mov
pushf
gs
ljmp
jb
jo
xchg
sarb
fdivl
stos
ss
fimuls
pop
sbb
rolb
jle
inc
mov
xchg
sub
pmuludq
imul
and
fs
dec
or
dec
sub
pop
loop
cmp
jge
arpl
aaa
aaa
in
ss
cwtl
stc
inc
lret
ljmp
and
aad
stc
cmp
xor
ljmp
xor
dec
dec
xchg
rorb
lret
inc
mov
in
adc
sub
shlb
imul
inc
cmp
mov
rcll
jmp
les
icebp
imul
adc
or
testl
push
outsl
fwait
push
mov
mov
xchg
dec
jmp
cwtl
sbb
decl
xlat
and
rclb
js
push
rolb
stos
push
cmc
lods
adc
enter
push
out
cmp
push
daa
andb
neg
pop
mov
sub
cmp
xor
jp
dec
icebp
lods
or
out
addl
mov
ja
jne
jnp
xchg
pusha
mov
adc
popa
lret
pop
ret
nop
insb
scas
bound
adc
cwtd
negb
mov
xchg
xchg
pop
or
into
push
dec
jge
daa
adc
sub
fldt
aad
in
sbb
push
test
add
xlat
mov
mov
hlt
les
iret
pop
addr16
jns
int
xor
add
mov
xor
adc
mov
loope
jne
sbb
mov
mov
push
mov
push
pop
ret
sbb
jp
ds
in
cmp
pop
push
jne,pn
int3
pop
push
in
push
mov
mov
pop
test
pop
insl
mov
or
int3
icebp
inc
push
push
icebp
xchg
sbb
idivb
lock
push
cmp
mov
sar
std
xor
cmp
dec
test
sbb
cmp
xor
inc
pop
int3
ja
xchg
inc
mov
push
into
scas
cltd
sti
enter
lret
test
push
pop
imul
out
xor
or
rcrl
xor
sbb
jle
push
push
mov
std
xor
lret
add
add
mov
or
movsb
ljmp
hlt
push
cld
pop
xor
cmpsl
adc
cmovb
imul
adc
add
in
and
push
jne
and
stc
pop
shlb
dec
push
ret
mov
inc
aaa
call
out
dec
inc
nop
push
dec
and
adcb
jecxz
cmp
mov
out
adc
sti
jmp
mov
sbb
push
inc
popa
movsb
xchg
dec
pop
cmpb
out
xchg
leave
repz
hlt
fbstp
fisubl
je
decb
jg
inc
mov
pop
loopne
mov
and
dec
out
mov
jae
mov
scas
into
rorb
les
push
cltd
mov
and
rolb
pop
scas
popf
pop
or
movsb
push
mov
xchg
sub
lods
or
pop
les
addr16
movsl
icebp
les
and
jbe
pop
iret
cmpsl
ss
ja
enter
pop
sub
xchg
ljmp
insb
call
mov
pushf
je
push
sbb
out
push
out
add
fxch
cmp
mov
clc
mov
adc
imul
cmp
lds
stos
inc
mov
jmp
ja
sbb
enter
fisttpll
dec
pop
xor
cltd
lahf
pop
push
pop
js
std
pop
sub
sbb
test
jo
jne
fstp
and
sbb
mov
sti
dec
push
cmp
jo
xchg
shl
repnz
aam
sub
adc
jp
ljmp
dec
inc
int3
mov
cltd
stc
jle
dec
das
addr16
pop
ss
iret
adc
jge
sbb
in
test
bound
xor
dec
sti
cmp
ss
push
ljmp
inc
pop
push
cmp
mov
inc
sbb
das
out
cmpl
mov
xor
cmp
shrl
out
int3
xor
jmp
sbb
jecxz
jp
pop
inc
push
jno
enter
pop
imul
int3
ret
repnz
cmp
mov
roll
xor
xchg
cmpsl
ljmp
sbb
sahf
inc
popa
xchg
jmp
sbb
movsb
std
sbb
lock
add
jl
test
xchg
jno
xchg
pushf
dec
adc
in
or
add
int3
xchg
and
es
dec
addr16
lds
into
jmp
and
test
leave
maskmovq
divl
cltd
xlat
clc
scas
jbe
fldenv
sahf
mov
push
cs
stc
xchg
insb
sbb
inc
mov
push
and
mov
add
rolb
cmp
push
fnstcw
dec
xor
sarl
clc
lea
xor
push
xlat
fisttpl
xchg
lock
push
cltd
mov
shrb
sub
mov
sbb
andb
dec
cmpsb
push
adc
leave
jae
mov
xlat
or
std
shll
sub
adc
aaa
pushf
cs
fisttps
repz
movsb
fldenv
hlt
push
adc
jmp
add
scas
xchg
loopne
xchg
bound
push
fiaddl
push
scas
sahf
jle
xchg
lret
xor
pusha
pushf
jecxz
jg
clc
push
sbb
xchg
cmp
scas
mov
xlat
shrb
cli
repz
mov
pushf
push
leave
jp
dec
xor
mov
or
or
cmp
lods
les
aas
pop
cli
dec
out
pop
mov
mov
movsb
push
sub
push
iret
sub
mov
xchg
test
fwait
push
push
adc
hlt
cmp
aas
push
lods
push
xchg
mov
stc
mov
xchg
jecxz
lods
push
movsl
push
pop
out
mov
dec
xchg
pop
inc
cs
in
loope
data16
sbb
leave
sbb
mov
mov
adc
mov
push
cmp
push
xor
ljmp
push
pop
inc
adcl
or
lret
rorb
or
shl
dec
cwtl
xor
jge
add
notl
shr
xor
clc
scas
insl
mov
mov
pusha
insl
xor
icebp
or
or
sbb
lret
or
cs
loop
mov
cmpsb
jecxz
cmc
test
fucomp
xchg
fimuls
push
cmp
adc
push
hlt
pop
mov
jg
adc
movsb
enter
stos
xchg
and
add
adc
xchg
cmpsl
das
fists
xchg
enter
test
aaa
sub
mov
inc
xchg
test
cmp
loop
xor
out
mov
jns
xchg
scas
mov
cwtl
cmp
mov
or
movsl
fsubl
push
fistps
push
pop
cwtl
jle
sbbl
roll
push
fwait
xchg
fnsave
or
sub
aam
jno
js
sub
cmp
mov
test
add
mov
hlt
pop
ret
movsb
out
fadds
cmp
fcmovbe
mov
sub
mov
sarb
cwtl
ss
aas
pop
push
xchg
fsts
push
hlt
push
out
xor
jo
scas
pop
js
imul
jbe
jmp
movsl
jne
ror
push
inc
add
mov
insl
sub
xor
into
inc
mov
pop
cwtl
jbe
loope
lods
push
adc
mov
xor
sbb
orb
inc
inc
iret
inc
scas
into
call
add
jbe
inc
xchg
and
sub
inc
jns
pop
and
cwtl
xor
pop
pop
jns
punpckhwd
sub
adc
lea
stc
fcmovnbe
cmpsl
pushl
sub
jl
cmp
pop
out
repz
pop
sub
mov
fsubrs
xchg
cld
mov
test
xor
stos
sub
mov
sub
mov
inc
jle
out
push
mov
sbb
movsl
add
cmpsl
std
dec
aad
pop
dec
mov
insb
jae
jmp
iret
mov
or
icebp
pop
mov
cwtl
out
jl
repz
in
fstl
addr16
repz
xor
mov
mov
jge
mov
rcl
xchg
aam
aad
fldlg2
fcomps
xor
rclb
mov
fsts
pop
int
cmp
addr16
jnp
mov
dec
outsl
and
add
hlt
dec
mov
cli
inc
dec
cmp
mov
fs
loope
push
imul
sbb
jns
dec
aad
outsl
adc
test
jg
nop
dec
aas
stos
das
stos
das
pusha
lret
repnz
xor
lods
dec
add
mov
fstpl
inc
add
mov
dec
or
ds
loop
push
and
pop
push
int3
jp
jns
mov
ret
mov
gs
lret
mov
adc
push
cmpsl
outsb
orl
mov
mov
jns
mov
mov
int
lcall
cmp
or
inc
push
outsb
movsl
in
ret
loope
aad
bound
insl
and
add
fidivl
mov
cmpsl
sahf
leave
xor
mov
fwait
push
fwait
or
dec
iret
adc
or
sbb
orb
int3
in
into
sti
xchg
push
aaa
and
xchg
nop
dec
rolb
fdiv
xor
popf
subl
or
stos
push
das
sub
cmpb
bound
sub
push
out
mov
push
in
jbe
loope
cmp
and
adc
js
adc
and
lahf
leave
adc
pop
ret
jne
mov
loope
fstl
test
cmp
dec
call
or
data16
dec
rcrb
loop
and
shl
ljmp
dec
aas
sbb
add
adc
das
and
cmp
cs
movsb
or
jb
mov
test
scas
mov
push
das
dec
mov
repnz
cmpsb
clc
into
fcoml
pop
sub
sti
fsubr
push
outsl
out
add
pop
outsl
xchg
dec
daa
mov
mov
jmp
xchg
rcrl
add
je
pop
or
mov
and
xchg
in
push
icebp
outsb
in
ja
imulb
sbb
pop
dec
push
sub
sub
into
movsb
sub
pusha
inc
mov
sti
pop
inc
inc
cs
or
pusha
in
pop
ret
pusha
inc
jno
mov
subl
adc
push
clc
cli
adc
cmp
sbb
lock
jae
cvttps2pi
inc
adc
sub
lret
pop
out
faddl
je
lret
mov
dec
push
jae
mov
push
push
out
dec
sbb
add
pop
outsl
testl
addr16
and
dec
xor
cmp
mov
outsl
dec
adc
push
jge
rcrl
fcmovnbe
out
xor
jl
mov
pop
sub
mov
movsb
in
add
loop
out
pop
mov
and
xchg
shlb
das
jae
cld
js
jo
or
fwait
loope
mov
add
xchg
jbe
lea
cltd
xchg
loop
pop
mov
sbb
push
ret
int
ror
pop
xor
es
call
enter
stc
test
inc
push
inc
in
pop
mov
pop
and
sbb
hlt
push
cmc
pop
mov
xlat
stos
jecxz
xorb
adcl
lods
inc
inc
aas
sahf
dec
out
xor
loop
sbb
jl
lock
inc
lods
std
pop
lahf
inc
loopne
aaa
push
or
push
pop
cmp
mov
sub
cmp
sub
xchg
iret
push
ss
mov
xor
outsl
lret
std
mov
arpl
sub
cmp
add
bswap
cwtl
loopne
notb
outsl
push
push
dec
inc
inc
scas
mov
aad
lea
enter
jge
popf
push
leave
dec
add
inc
testb
idivb
push
inc
psubsb
push
cld
cmp
insb
mov
inc
xchg
sub
shr
push
adc
xlat
jb
in
cmp
dec
aad
push
jb
inc
cmpsl
popa
mov
insl
cltd
pop
cmc
jnp
ds
outsb
daa
std
sub
mov
outsl
xchg
daa
inc
fs
out
xchg
sbb
add
xor
jl
rolb
dec
cld
dec
pusha
xchg
aaa
cmp
mov
dec
loope
and
mov
xchg
loopne
push
pop
or
xchg
or
jge,pn
shrl
mov
sub
in
je
cltd
cmpsb
dec
push
push
enter
xor
in
jo
cmp
sbb
dec
xor
mov
and
cmc
jne
adc
jecxz
adc
dec
jnp
lahf
pop
iret
cltd
pop
jo
or
loope
negb
ljmp
cmp
fadd
cmp
js
aad
imul
pop
pop
mov
mov
rcl
xor
xor
xor
lret
mov
ja
imul
fadd
out
push
xchg
sbb
sub
dec
jecxz
aas
mov
xchg
testl
fwait
add
out
push
lods
push
push
std
cmpsl
jae
jmp
pop
cmp
sub
jbe
sub
rcll
mov
xchg
hlt
and
jo
outsb
xor
adc
gs
jle
inc
out
ficompl
popf
add
dec
loopne
loop
fsubrs
push
lcall
pop
jbe
adcb
mov
in
push
push
pop
ret
es
jl
in
lahf
lods
orl
stos
jmp
sub
jb
or
lods
dec
shl
and
dec
mov
out
push
dec
cmp
das
mov
iret
push
shlb
ds
pop
shll
popa
mov
int
jp
mov
int
and
test
sub
rorb
push
subb
jbe
and
cmp
cmpsl
sarl
cmpsl
shll
sbb
and
imul
scas
pop
aad
pop
enter
les
jp
arpl
mov
stos
mov
stc
xchg
inc
dec
xchg
inc
push
add
cmp
jbe
jne
push
jo
mov
jne
into
jp
js
addr16
sbb
or
mov
cmpsl
repz
mov
xchg
mov
sub
sub
xcrypt-ecb
cmpsl
dec
xchg
mov
xchg
mov
data16
mov
hlt
sub
gs
lods
std
or
in
es
dec
pushl
inc
dec
pop
testl
daa
mov
pop
cmp
inc
xchg
lds
mov
loope
leave
adc
xchg
stos
bound
adc
xchg
mov
xor
arpl
mov
cld
mov
cwtl
push
stos
pop
fstp
out
xor
mov
sahf
sub
push
cwtl
sbb
ss
in
xchg
addb
jmp
cmp
repz
xchg
sub
bound
add
cmpl
jb
cmp
loopne
pop
pop
sarl
push
pop
mov
aam
dec
movb
push
mov
out
cld
push
and
or
pop
sbb
loop
je
movsl
push
mov
adc
add
add
xchg
mov
mov
std
push
or
cli
mov
add
push
mov
or
xchg
loope
dec
orl
pop
xchg
sahf
xchg
pop
hlt
in
cwtl
js
cmove
les
push
mov
lret
add
mov
xchg
mov
cwtl
xor
or
sub
push
pop
dec
or
aaa
lods
sti
daa
bound
xor
or
dec
mov
dec
mov
jl
movb
in
sbb
jecxz
dec
push
or
shlb
js
xor
leave
xor
jp
imul
outsl
sub
fsubs
in
insb
clc
mov
lds
sbb
cmp
and
test
lods
adc
or
cmp
stos
lret
fchs
int
xchg
sbb
push
dec
pop
jae
test
xor
pop
popl
cmp
dec
lods
jmp
popf
test
rcll
arpl
pop
xor
adc
dec
int
fwait
mov
jnp
mov
dec
push
mov
xchg
mov
lods
pop
rclb
fnstsw
pop
je
es
ds
rcll
gs
scas
inc
insb
ljmp
int
sbb
mov
call
xor
push
les
or
sbb
pop
inc
call
lods
decl
clc
js
std
loop
mov
out
dec
cld
movsl
lahf
sbb
jp,pt
and
imul
inc
mov
jb
loopne
lret
daa
xchg
fsubs
mov
fidivl
jb
and
mov
or
inc
loopne
jno
in
scas
pop
inc
loope
push
filds
fs
in
iret
out
outsb
inc
pop
iret
mov
cmp
mov
pop
add
loop
mov
cmpsl
cmpsb
push
mov
and
mov
push
or
push
cmp
imul
or
push
mov
test
in
push
add
ljmp
inc
xor
inc
add
js
in
lds
das
aaa
pop
fs
clc
stos
in
stc
xor
jnp
inc
scas
js
dec
popf
mov
xchg
jecxz
in
jp
xchg
mov
cmpl
mov
sbb
mov
loopne
std
outsb
roll
outsl
faddl
sbb
fsubrl
movsb
ds
push
popa
hlt
fldt
out
inc
sbb
sbb
ja
mov
or
push
mov
dec
sahf
sbb
dec
xchg
fwait
pop
pusha
int
jle
or
test
fdivrs
mov
push
pop
lahf
in
rclb
lods
push
js
mov
int3
xchg
hlt
aaa
xlat
lods
fmul
adcb
insb
dec
shrb
pop
es
jg
jb
lock
cmp
cld
insl
add
scas
pushf
orl
inc
test
inc
out
imul
dec
addr16
outsb
loop
cltd
subb
sbb
adc
push
push
or
adc
leave
xor
push
fwait
dec
sahf
push
lds
inc
aam
jbe
jl
add
mov
outsb
inc
adc
or
pop
mov
daa
dec
ret
rol
jo
das
push
sbb
dec
cld
and
push
insl
shl
lahf
imul
adc
cmp
or
dec
loop
loope
add
dec
aad
test
pop
mov
adcb
mov
jmp
dec
or
sub
sub
iret
mov
gs
add
test
frstor
loop
movsb
aaa
mov
add
jno
pop
mov
outsl
repz
mov
pop
and
adc
lret
dec
inc
cmpl
imul
or
pop
lods
cld
mov
inc
fst
lcall
rcrl
jecxz
pushf
mull
adc
or
mov
fsubr
call
fsubrs
mov
pop
push
cmp
dec
movsb
and
inc
into
into
push
and
in
mov
sbb
xchg
test
sub
mov
pop
in
out
popf
ja
sub
pop
lods
sbb
add
fbstp
lahf
dec
stos
add
lea
jno
xchg
movsb
and
outsb
es
add
jns
and
xchg
imull
clc
mov
daa
jmp
xchg
test
into
arpl
gs
addr16
xchg
out
add
popa
inc
lds
mov
xchg
scas
xchg
sbb
hlt
test
jae
xor
sub
cmp
es
mov
adc
xor
fsubrl
add
and
addb
sbb
jns
sbb
out
xor
sbbl
repnz
mov
shr
add
sbb
lahf
jo
or
push
pop
pop
test
pop
dec
outsl
outsl
push
pop
shrb
mov
fdivs
dec
xchg
in
outsl
cld
lock
mulb
loop
jae
push
xchg
cmpsb
mov
sbb
push
sbb
int3
fcmovnu
pop
ljmp
idiv
mov
pop
sbb
and
or
das
addr16
fidivl
inc
aas
jmp
jae
cmpsb
cltd
gs
mul
test
or
xor
imul
test
mov
mov
dec
inc
loop
cmp
push
mov
pop
shrb
cmpsb
jno
into
popf
sar
jmp
jp
cmp
or
xchg
in
stos
and
leave
addr16
rcll
enter
mov
popa
daa
fimull
insl
mov
repz
mov
in
xor
pop
xor
jmp
repnz
cmp
inc
lret
pop
xor
push
cmp
std
mov
loopne
addr16
pop
fcoml
push
xchg
mov
fnstsw
je
mov
repnz
and
xchg
xchg
lea
outsb
outsl
in
icebp
xor
in
loopne
mov
cmpsb
daa
into
arpl
sbbl
xchg
xchg
lea
popa
test
xchg
pop
ds
inc
xor
mov
dec
inc
push
push
addb
clc
pop
sub
inc
push
pop
xorb
pop
push
jns
and
filds
jno
pop
cmpsb
xor
addr16
jnp
xor
add
inc
or
loopne
stc
cmpsl
push
and
pop
mov
ljmp
loope
sub
stos
out
in
xchg
icebp
pop
hlt
mov
fstp
or
and
cwtl
int3
inc
cmc
mov
pop
mov
inc
jbe
add
mov
loope
dec
mov
lods
fldenv
js
pop
or
leave
inc
daa
lret
lahf
push
adc
xor
ds
fisubl
insl
orb
fadds
cmp
or
sbb
push
sbb
cmpsb
loop
dec
int
outsl
pop
jl
mov
push
loope
aas
fwait
xchg
push
lret
mov
push
repnz
and
push
jmp
pop
inc
loop
and
frstor
cmp
outsl
lahf
and
push
je
or
mov
sub
cld
out
loopne
test
cmpl
xchg
cld
aam
fisubl
test
fnstenv
ret
call
pusha
dec
mov
test
jb
addr16
loope
cli
in
or
cltd
adc
std
jecxz
scas
loope
enter
nop
xor
shll
gs
popa
dec
add
or
xor
cmp
mov
scas
mov
dec
nop
sub
test
inc
fdivrs
cmp
dec
and
js
icebp
sub
test
push
pop
mov
xchg
lret
fnstcw
add
jbe
out
aaa
outsb
pop
adc
bound
daa
dec
inc
mov
push
clc
xlat
sbb
sahf
dec
or
mov
cmp
jb
sub
mov
inc
imul
jb
sub
mov
xlat
cmpsl
mov
sarb
mov
sub
addl
mov
ss
mov
inc
or
popa
rorl
clc
cmp
lahf
pusha
mov
sub
cmc
out
cmp
outsb
incb
push
stc
in
cmp
and
call
ret
insb
inc
or
and
call
push
xchg
mov
inc
mov
mov
imul
cmp
arpl
sub
cmp
out
inc
dec
push
adc
in
inc
pop
aam
jmp
or
push
jnp
mov
dec
add
add
inc
es
ds
sbb
cmp
in
pusha
mov
aaa
shlb
pusha
stos
xor
lods
sbb
sub
outsl
cmp
mov
and
popa
call
cmp
mov
xchg
sub
push
xor
sub
sub
jmp
in
rcrl
mov
lods
adc
lods
pop
aaa
aaa
lea
pusha
add
dec
cwtl
rclb
dec
shr
xor
hlt
in
cmpsl
push
js
cmp
adc
add
fidivl
mov
in
jne
lret
sub
flds
je
fdivl
enter
outsb
fwait
lods
jge
jne
push
in
fwait
mov
add
mov
jae
adc
and
int
test
lods
bound
add
jmp
xor
out
dec
arpl
inc
mov
pop
lret
sahf
call
rcrl
cwtl
aad
jl
adc
test
push
andl
jns
bndldx
loop
mov
push
jno
cmp
scas
aaa
lock
mov
or
push
fwait
cmpl
ss
xchg
pop
int3
mov
pop
xor
addr16
inc
bound
not
mov
repnz
xor
scas
inc
cld
sub
lea
ficomps
jg
jmp
cmp
addr16
adcb
inc
sub
xchg
stos
loope
jno
divb
scas
aam
lret
fisubrl
xor
insl
test
enter
add
jmp
mov
pop
pushf
lods
inc
push
sbbb
into
outsb
dec
push
imul
cltd
lret
in
rcr
out
scas
sub
fcmovnu
xchg
sbb
mov
sub
or
into
icebp
inc
sti
or
inc
sub
stc
movsb
push
mov
shr
hlt
cmp
mov
mov
leave
arpl
or
repnz
sbb
in
cmp
inc
adc
add
aam
sub
sahf
mov
mov
sbb
inc
mov
xor
xor
repz
pop
inc
in
out
mov
add
fistl
cltd
cli
stos
push
cli
repnz
ja
xchg
or
mov
sbb
cs
int
pusha
lahf
inc
jge
scas
or
in
mov
sub
jbe
aaa
push
addr16
jge
xchg
push
ljmp
into
xchg
jne
sbb
lahf
add
xor
rcrb
notl
push
gs
pushw
imul
jbe
out
divb
xor
jg
pusha
in
adc
add
xchg
pop
mov
xor
or
dec
inc
sarl
add
popf
xchg
je
inc
je
pop
js
xlat
mov
mov
testl
xchg
add
adc
ja
xchg
jecxz
or
arpl
fildll
repnz
lods
neg
pop
dec
rclb
addr16
mov
mov
adc
int
fnstcw
and
sub
lcall
bound
dec
xchg
push
scas
push
inc
dec
call
aad
les
pusha
pop
cs
jg
and
xchg
xor
jl
scas
fdivr
inc
and
xchg
test
and
imul
dec
int
nop
dec
inc
data16
cld
je
daa
call
xor
aaa
fisttpll
sbb
or
xor
fisubl
orl
clc
mov
jmp
cmp
pop
roll
cli
ret
fwait
xchg
mov
lock
pop
roll
out
or
jp
loopne
and
shlb
jbe
int
pop
xlat
or
inc
loop
mov
pop
mov
cmp
mov
or
add
push
pop
add
dec
add
pop
clc
and
ds
outsl
dec
cmp
scas
ret
pop
mov
insb
and
cmpsl
icebp
dec
cmp
sbb
pop
shrl
and
xchg
push
xorl
mov
call
dec
adc
push
mov
int
nop
mov
jbe
jmp
mov
icebp
outsl
cmp
divps
mov
xor
pop
ds
andl
cmp
inc
sub
push
pop
mov
lcall
or
xor
shll
stc
sbb
xor
ja
fs
mov
lods
js
mov
out
imul
shrb
call
mov
adc
sub
sub
imul
or
pop
ss
addr16
jmp
xchg
cmp
sbb
je
lcall
lcall
rclb
bound
out
ljmp
mov
fimull
cmp
imul
xchg
repnz
clc
sbb
cmc
mov
gs
jp
mov
mov
cmp
test
pop
call
loopne
lods
fimull
icebp
push
jmp
cwtl
dec
xchg
outsb
dec
inc
stos
add
inc
popa
pop
pop
sbb
mov
insl
xchg
bound
lahf
rclb
fistl
iret
cmp
leave
lods
ja
pop
push
enter
pop
or
push
and
ja
in
push
mov
movsl
adc
pop
idiv
cmp
hlt
cmpsl
cwtl
pop
movsb
inc
mov
fcomps
sub
push
mov
mov
bound
pop
fisubs
mov
movd
iret
or
mov
inc
xchg
xchg
or
mov
adc
inc
movsl
repz
bound
xchg
test
or
and
adc
cltd
enter
call
xor
decb
repnz
loop
mov
fcmovne
cmp
pop
pushf
sub
xor
rcrb
hlt
inc
jno
popa
insl
adc
push
sub
pop
aaa
inc
fcoms
stos
push
roll
dec
xlat
xchg
aaa
add
loopne
test
lahf
mov
lds
push
cmp
add
push
roll
popf
inc
xorb
fdivrl
test
dec
imull
cmp
dec
jne
scas
fdivs
push
sub
mov
jg
cltd
pop
nop
mov
mov
popf
adc
sbb
sbb
mov
pusha
std
pushf
jge
das
cmp
jne
mov
push
repz
jl
inc
fwait
push
divb
inc
pop
sbb
cmp
insl
lahf
pop
aad
cmp
mov
sub
js
mov
cwtl
das
xor
mov
lcall
sub
icebp
repz
jecxz
in
aaa
sbb
mov
aad
sub
push
lcall
and
jo
aaa
pop
out
movsl
imul
or
cmp
and
mov
mov
xchg
add
sub
ljmp
mov
cli
daa
push
xorl
movsb
stc
push
or
out
dec
sti
mov
dec
mov
xor
pop
stos
cmp
repz
fs
cmpsb
cs
add
stc
xor
lret
idivl
sbb
jg
jecxz
arpl
mov
mov
jnp
mov
or
mov
call
sbb
lds
in
xchg
mov
or
call
add
data16
fdivr
inc
sarl
cwtl
jmp
loopne
add
pop
icebp
mov
xor
sahf
call
fbstp
fisttpl
mov
xor
adc
cmp
cld
ja
ja
lock
lcall
mov
adc
mov
xor
in
cli
mov
pop
inc
clc
clc
in
ja
xor
sbb
fisttps
lds
cmpsb
or
inc
mov
xor
leave
pop
jle
mov
adc
cs
fmull
jg
jae
push
adc
pop
mov
lock
in
std
sbbb
add
push
or
test
or
imul
arpl
jp
mov
in
adc
inc
cli
dec
cmp
push
inc
inc
xchg
push
and
mov
pop
xlat
jmp
fimull
cli
call
pop
test
pushf
hlt
repnz
rclb
cmp
mov
jl
enter
mov
or
rcrb
xchg
jns
addl
idivb
outsb
aam
ss
or
lcall
cmp
mov
and
test
rolb
cmp
add
xchg
orl
ljmp
bound
sbb
mov
stc
xor
push
jne
and
cwtl
pop
rclb
lods
int
dec
lahf
aam
xchg
lods
xchg
push
adc
sub
mov
rcrb
repnz
sbb
stc
aaa
aas
lret
cmp
leave
pop
sub
ds
mov
mov
decb
ljmp
mov
sbb
inc
insb
les
inc
in
or
add
push
je
push
call
inc
cmp
mov
jnp
nop
push
lock
test
sub
fs
mov
push
sbb
fcomp
ret
scas
test
mov
jge
les
mov
lret
sub
test
fidivs
cld
and
dec
push
icebp
lds
hlt
push
loopne
sti
mov
inc
pop
cld
inc
cmp
mov
inc
sbb
test
push
add
inc
cmpsb
push
adc
add
xchg
outsl
mov
cltd
idivb
xchg
push
in
xor
push
je
out
bnd
aaa
pop
outsb
cmp
lret
popa
inc
in
cmp
lret
xchg
les
jnp
scas
push
data16
sti
pop
in
ss
mov
sub
jb
jp
xchg
data16
xchg
out
call
cmpsb
push
call
in
movsl
rcrl
insb
cmp
setne
jecxz
imull
roll
mov
cli
loopne
sbb
lock
jp
lcall
jb
ror
sti
imul
rcl
push
xor
pop
outsb
sub
ds
dec
mov
sbb
jns
xchg
sbb
test
mov
xchg
jecxz
mov
xchg
xchg
insl
bndldx
into
outsl
xchg
lret
xchg
sti
pop
out
jp
push
mov
add
repz
popf
jmp
cmpsl
fucomp
mov
sub
inc
pusha
movsl
out
sub
jb
or
push
movsb
scas
xor
pusha
inc
jbe
mov
adc
xor
icebp
mov
outsb
inc
jne
rorb
stos
mov
daa
in
sub
jle
dec
dec
mov
aam
add
inc
cli
rcll
andb
dec
push
mov
jl
in
mov
enter
inc
je
sarl
push
jbe
mov
test
xor
xchg
rcrl
int
out
mov
packuswb
es
in
stos
lret
xchg
stos
testb
out
test
shlb
enter
lahf
aam
lea
mov
in
mov
add
mov
cmp
pushf
test
insb
jl
xchg
ljmp
adc
jbe
mov
jg
or
andb
dec
xchg
dec
inc
or
xor
mov
xchg
pop
ds
ficompl
sti
pop
lods
jbe
int
enter
cmp
sti
dec
out
jle
adc
repz
fs
outsb
mov
or
cmpsl
adc
out
inc
mov
aaa
lock
sarl
jne
and
cmp
or
cli
xchg
jo
loopne
cwtl
out
and
popf
ret
push
xchg
iret
or
cmp
xor
stc
fbld
dec
icebp
stos
inc
out
push
push
pop
arpl
fidivrs
fcmovbe
pushf
cs
jb
lea
ret
inc
ljmp
fistpll
add
dec
dec
pop
outsl
inc
movsl
addr16
ret
push
insl
fisubrs
stos
dec
push
fstpl
sbb
loopw
inc
in
out
cld
jnp
cwtl
loop
push
ret
inc
stos
lahf
pmaxub
sbb
jbe
call
ret
loopne
loope
shlb
lret
pop
inc
jnp
ss
sub
in
xor
in
lds
lret
loop
std
add
jnp
sbb
jns
and
inc
mov
jecxz
push
mov
jb
add
mov
adc
mov
pop
jnp
inc
add
leave
xor
xor
pop
pop
repnz
aad
fs
xchg
loop
pop
lock
fcoml
out
or
sub
push
jmp
pushl
mov
fs
xor
rol
push
hlt
nop
hlt
dec
xchg
add
pop
mov
push
fisttpl
outsl
movl
xchg
push
cmp
and
mov
fcmovnb
ss
cld
sub
lods
fs
pop
jmp
fwait
int
daa
shll
pop
leave
and
adc
or
push
test
rorb
rcl
aaa
dec
scas
mov
addr16
cmp
xor
sbb
imul
push
fwait
jbe
adc
lea
and
sub
jae
pop
jge
dec
mov
fldl
popf
mov
xchg
enter
in
bound
add
into
sbb
clc
mov
das
and
cli
cs
scas
xchg
xor
pop
adc
psubb
jo
movsl
in
out
sbb
faddl
iret
das
repz
in
pusha
lahf
adc
pop
and
cmpb
pop
pusha
jl
xchg
and
aam
inc
lcall
jbe
inc
repz
gs
lret
js
ret
inc
imul
fsubrs
lret
jnp
inc
jnp
aas
cmp
xor
outsb
xchg
xchg
stos
inc
or
inc
mov
cmp
xchg
jg
sbb
jbe
fadds
inc
pop
mov
cmpsb
sub
xor
call
push
and
xorb
mov
inc
outsl
xchg
mov
inc
out
jge
lods
adc
jne
pop
rcrb
inc
in
iret
cltd
test
out
jl
out
sahf
testl
xor
or
jae
adc
add
or
cltd
inc
in
xor
loopne
ret
add
enter
lahf
mov
cld
lea
int3
sub
dec
out
test
stos
mov
cmp
dec
in
inc
popf
aas
inc
xchg
nop
adcl
mulb
pop
aad
mov
lret
add
rolb
cmp
lea
xchg
out
push
lods
imul
ss
jns
outsl
adc
orb
pop
lcall
sub
mov
test
or
mov
in
lret
xchg
dec
movsb
iret
lods
ret
xor
cmp
jg
cli
shll
outsb
xlat
mov
adc
cmp
xchg
pop
orb
mov
imul
sarb
xchg
lock
or
or
into
add
jne
enter
shlb
out
outsb
inc
arpl
int
cld
pop
jp
jge
cltd
fisubrl
movsb
sub
fnsave
or
jne
cmpb
adc
stos
pop
add
les
andl
adc
and
lods
sti
iret
pusha
dec
jnp
sub
das
bound
push
pop
or
and
xor
rcrl
mov
mov
dec
jae
stos
xchg
andl
or
ljmp
sub
jnp
add
test
xchg
imul
pusha
cvtpi2ps
cld
lea
ds
xor
mov
lcall
jbe
les
leave
and
jl
push
repz
nop
lret
lret
loop
xor
out
cmp
fsubs
cmp
push
dec
pop
dec
mov
fcmovb
and
psubq
fistpl
mov
jb
lret
pop
sub
mov
push
add
ficoms
lcall
xchg
sub
mov
out
or
addr16
imull
cmp
sub
ss
subl
cmp
inc
imul
xor
dec
test
inc
test
mov
jg
xchg
lea
pop
jnp
cmp
push
and
dec
cwtl
jle
out
xor
nop
pop
cmpsb
xchg
repnz
iret
dec
out
mov
cmc
aam
mov
popa
cwtl
xchg
test
stc
mov
imul
in
mov
movsb
xrelease
imul
push
mov
out
es
fnclex
movsb
pop
test
out
push
push
xor
mov
xor
ljmp
push
push
mov
adc
adc
pop
xchg
in
leave
negb
clc
popa
loop
mov
addr16
pop
jle
dec
xchg
stc
clc
leave
mov
push
mov
out
pop
cmc
movsl
xor
ds
inc
mov
cmp
xchg
divb
call
dec
icebp
push
rorl
shrb
add
mov
sbb
and
test
pop
mov
mov
push
adc
jl
adc
push
mov
int
aas
and
cmp
xchg
lret
jb
push
add
xor
push
mov
pop
inc
ljmp
sbb
mov
fs
movsb
lds
xor
inc
sub
sub
orb
out
and
xchg
push
jb
jbe
push
adc
xchg
pop
pop
adc
dec
jnp
out
xchg
inc
outsb
or
lea
andl
int
out
insl
xor
scas
pop
dec
int3
mov
adc
int
push
fcmove
sbb
push
fwait
sub
stos
lahf
movups
sub
data16
fwait
inc
inc
jae
dec
gs
arpl
fnstcw
sahf
insl
outsl
cmp
out
cmp
sarb
shrb
sbb
mov
jns
jecxz
dec
out
pop
movsl
into
push
sub
lret
jg,pn
mov
dec
aam
xchg
cmc
dec
fwait
mov
xchg
xchg
outsb
sub
push
les
push
or
add
dec
push
mov
in
mov
jmp
sub
in
fstpt
into
jno
mov
dec
mov
push
and
xchg
pop
push
in
in
cmpsl
lods
mov
jecxz
loopne
arpl
inc
iret
js
fwait
mov
rcll
sarb
dec
and
mov
les
sahf
mov
or
int
std
xor
loop
out
pop
add
mov
insb
popf
aad
test
pop
pushf
mov
fwait
and
popf
insl
lahf
push
inc
orl
mov
je
xchg
enter
sub
stos
call
mov
mov
sub
push
lahf
arpl
jp
push
push
push
bound
addr16
cmpsb
pop
cmp
es
ret
scas
pop
xchg
and
mov
ret
test
icebp
push
shl
or
imul
ret
adc
add
in
mov
aas
inc
js
push
xchg
jmp
clc
js
adc
jp
push
int3
pop
jp
das
and
lds
outsl
lea
fsubr
mov
roll
aad
stc
lods
int3
cs
clc
jo
les
rcrl
sub
sarb
cmpsb
dec
insl
mov
mov
sbb
and
rorl
cltd
add
mov
push
int
cmpl
fnstcw
inc
mov
mov
insl
add
xor
mov
scas
and
xor
ja
sub
cmc
insb
xchg
movsl
mov
push
or
sbb
cmp
jnp
fmuls
aas
xchg
fmul
mov
cmp
fsubrl
sahf
lds
sub
in
les
jne
repz
xor
inc
sub
xor
and
adc
call
and
lds
sbb
push
popf
xor
lods
loop
out
fbld
or
and
pop
adc
int3
pushf
ret
and
sub
or
sub
dec
jmp
sbb
fsubs
in
loopne
int
mov
iret
sarb
ljmp
popa
pop
test
xchg
pop
jno
out
cmp
fmull
mov
mov
pop
nop
dec
bound
sbbl
push
xchg
mov
lods
fsubp
ret
push
and
adcl
pop
ja
pop
cmp
cmp
cmp
and
pusha
aas
inc
pop
das
sahf
test
cmp
sub
ret
push
scas
call
push
mov
inc
stos
jae
inc
mov
lds
dec
mov
shrb
lods
ss
jg
jge
pop
cmpb
xor
sub
andl
adc
popa
mov
lods
inc
filds
test
sub
stos
fldl2t
std
lods
loop
dec
out
in
mov
mov
mov
and
ror
into
push
aaa
clc
add
xor
or
adc
dec
or
cld
das
int3
push
mul
inc
or
cmp
loopne
sbb
xchg
ret
cs
out
test
mov
ret
pop
shll
sbb
popa
or
push
xor
in
push
fdiv
sub
jnp
in
cmp
push
mov
pop
dec
cmp
imul
cmp
lods
jo
sub
pop
dec
push
rcl
pop
into
fldcw
insl
xor
outsl
mov
push
mov
lods
sub
notl
adc
mov
scas
std
add
mov
cmpsl
sbb
jns
daa
inc
sbb
adc
mov
std
mov
and
mov
push
sub
fsts
mov
pop
cmp
push
sub
push
adc
in
lock
push
add
loopne
call
orb
fdiv
test
insb
jbe
jmp
jle,pn
in
lret
mov
imul
fistps
fwait
fs
outsb
in
fcomps
jecxz
shlb
popa
jo
or
lods
xor
out
inc
add
icebp
pop
sbb
mov
pop
sbb
in
lock
pop
push
jg
jb
xor
cwtl
xor
lds
lret
mov
shlb
add
mov
pop
rep
mov
xor
in
adc
pushf
xor
std
repnz
stc
mov
shrl
call
sub
nop
lds
cvtpi2ps
mov
into
inc
fdivs
xchg
ja
sub
mov
dec
in
adc
cmp
push
stos
mov
hlt
jae
data16
dec
aad
cmp
mov
pushf
std
push
add
pushf
xchg
ret
pop
inc
das
push
scas
popa
sbb
aas
cmc
push
clc
sbb
sub
out
out
cli
mov
inc
rol
mov
xchg
clc
pop
fs
and
mov
push
sbb
mov
sub
mov
dec
sub
jg
mov
and
jb
jge
sahf
adc
dec
xor
stc
cmpsb
cmpsl
push
or
add
mov
inc
jmp
mov
outsb
mov
call
sarl
xchg
push
xchg
inc
inc
mov
inc
stos
loop
mov
mov
out
mov
cmp
adc
sbb
mov
popa
xchg
int3
sub
pushf
iret
pop
sbb
pop
ss
cwtl
cmc
mov
dec
jp
mov
js
push
ficoml
inc
ja
inc
xor
test
rclb
lods
cwtl
dec
shll
adc
imulb
mov
xor
pusha
xor
clc
mov
call
ret
subb
push
push
ret
daa
jge
xchg
lret
in
and
inc
in
dec
mov
sub
cmp
imul
call
ret
inc
jb
sahf
lock
dec
repnz
pop
lcall
xor
in
dec
push
call
test
repz
sti
pop
mov
dec
jl
dec
cli
aam
dec
cwtl
dec
add
shrb
mov
inc
add
pop
jmp
xlat
xchg
shlb
mov
es
mov
fdivs
testb
andb
pop
rol
or
mull
adc
outsl
xchg
imul
pusha
cmpl
push
or
ret
mov
leave
inc
fmul
test
pop
sbb
jno
xchg
add
and
xor
sahf
fnstcw
iret
fs
hlt
test
or
cmpsl
pushf
add
jo
pop
ds
cmpsb
ljmp
jbe
cs
add
xchg
mov
fmull
mov
mov
sub
mov
add
xchg
insb
xorb
pop
arpl
loop
imul
sbb
shlb
imul
xchg
fiadds
neg
movsb
fwait
cli
sub
inc
mov
inc
movsl
mov
pop
fisttps
lds
inc
and
pop
loop
sar
subl
lret
lock
fs
and
or
addr16
push
mov
andb
mov
inc
inc
dec
mov
lahf
pop
jb
jno
test
stc
dec
fadds
mov
lods
ret
movsl
aas
int3
mov
push
sub
sbb
xor
mov
pop
cwtl
or
adc
pop
push
insl
imul
insl
xor
lods
add
mov
popf
addr16
cltd
and
mov
mov
es
push
in
ljmp
add
xor
jo
mov
or
inc
jne
jnp
adc
fwait
out
cmpsb
mov
stc
lea
int3
jnp
mov
fistpl
xchg
imul
cmc
and
sub
pop
mov
xor
xchg
dec
pop
mov
mov
xor
mov
ds
jbe
data16
cmp
and
xorl
mov
cmp
jp
xchg
adc
mov
mov
je
add
adcl
jp
scas
and
and
sub
int3
out
or
xchg
inc
xorl
cmp
xchg
pop
jecxz
push
cli
and
xchg
xchg
sahf
pop
lahf
pushf
push
leave
aad
xchg
cmp
mov
cmp
and
jmp
shlb
out
mov
repnz
pop
jns
dec
popf
xlat
outsl
into
mov
mov
in
adc
cs
push
enter
dec
cmc
lret
aam
cmpsl
pop
rcll
sbb
gs
sub
idivl
lods
and
mov
scas
fcomps
and
push
xchg
lahf
mov
jnp
xchg
pop
sub
push
pop
sbb
sar
in
mov
jmp
testb
mov
mov
test
sbb
repz
pop
daa
fimuls
enter
mov
in
ljmp
jbe
jmp
in
inc
into
jae
cwtl
and
aas
cmp
jno
pop
cltd
pop
jl
repnz
mov
adc
leave
sahf
push
sub
xor
mov
cs
ss
mov
ficoml
cmp
addr16
insb
mov
imul
lret
cld
and
scas
fbstp
jge
jns
inc
xchg
aaa
adc
sub
out
test
push
sahf
out
dec
add
sub
sub
lcall
cmpsb
jbe
imul
imul
popf
add
jle
dec
fldt
inc
inc
push
in
xorb
pop
jmp
scas
test
adc
jp
daa
insb
call
in
pop
mov
sbb
push
and
xchg
fimull
les
inc
cmp
sbb
mov
sbb
insb
sbb
aam
movsb
hlt
mov
movsb
test
mov
icebp
mov
pop
ljmp
mov
cmp
jmp
jno
imul
mov
dec
fcoms
xchg
xor
lret
ss
js
iret
insb
out
sbb
mov
add
ss
push
loope
mov
push
int
test
pop
lea
adc
fdivl
das
and
or
xchg
dec
arpl
clc
int3
mov
adc
out
shrl
fbstp
xor
es
or
and
mov
add
sahf
sub
cmc
outsb
into
mov
decb
pop
cs
call
and
pop
loope
orb
outsb
sbb
xlat
fstpl
icebp
ss
cs
sbb
or
mov
iret
shrb
test
adc
clc
popf
jle
xchg
inc
test
or
add
dec
sbb
jb
sub
shlb
xchg
sbbl
add
xchg
jnp
jl
ljmp
scas
xchg
inc
xchg
push
cmp
pop
jmp
mov
jns
and
cli
jo
inc
dec
xchg
jecxz
jmp
cwtl
call
mov
inc
dec
aad
fistpll
mov
mov
ficoml
stos
inc
addr16
test
mov
jp
mov
add
jae
notl
cmpsl
mov
xchg
fidivrl
dec
cs
repz
clc
cmp
sbb
rol
lcall
insb
test
ret
inc
add
cmp
divb
inc
adc
fucomi
pop
cmp
fcoms
test
cli
outsb
jne
cmp
dec
pop
fsubl
xchg
xor
mov
icebp
imul
inc
mov
jle
sahf
xor
mov
mov
jge
xor
cli
out
inc
mulb
cmp
xchg
dec
pop
movsl
jo
in
push
push
sbb
fmul
out
add
xor
xchg
aas
jbe
gs
sbb
mov
ret
adc
pop
sti
pushf
gs
mov
test
cs
rcrb
std
pop
mov
pushaw
pushf
push
ljmp
xchg
adc
ja
mov
fistpll
cmp
mul
out
xor
or
lods
fwait
fsubl
adc
sbb
pop
andb
xor
inc
mov
dec
lods
paddb
pop
loopne
mov
outsl
or
and
jbe
mov
cld
stc
js
fsts
pop
imul
sbb
les
ret
xor
sbb
hlt
psubw
jae
push
mov
dec
pop
and
sbb
dec
fs
jae
pop
mov
xchg
mov
xor
push
mov
push
stc
mov
dec
sbb
sbbl
cmpsb
stos
and
outsl
mov
int
daa
mov
inc
and
dec
dec
test
inc
addb
or
movsb
daa
cmp
decb
or
int
stos
xor
insb
inc
add
ljmp
xor
pop
lahf
jb
sti
xor
mov
test
test
scas
or
jno
mov
pop
js
sbb
neg
push
adc
xor
fucom
pop
int3
ja
sbbl
movsl
inc
adc
imul
push
fnstenv
incb
cmp
aam
int3
sbb
lea
ficomps
popa
and
pop
sbb
mov
mov
pusha
mov
aaa
je
ljmp
cwtl
and
loop
and
fs
add
mov
adc
cmpsb
pop
enter
ljmp
lods
push
inc
add
xchg
pop
dec
push
dec
jecxz
cmp
rorb
xor
jne
mov
push
rorl
cmp
in
mov
cmpsb
xchg
inc
mov
pop
lret
fcomi
mov
sbb
ss
cmp
adc
and
inc
cwtl
inc
in
loope
mov
aas
rorb
jl
sbb
jb
pop
clc
int3
fsubs
cli
bound
orb
push
add
jecxz
xor
jle
mov
jbe
push
test
xor
or
stc
push
je
jmp
dec
mov
xchg
scas
scas
decb
push
pop
nop
cltd
adc
mov
sti
movsl
dec
aaa
sahf
ljmp
xor
cli
cmpsb
scas
inc
mov
into
xor
jns
in
mov
inc
jle
xchg
pushf
dec
xchg
aaa
cli
mov
jo
in
fwait
fwait
dec
cmc
pop
push
enter
inc
lock
xchg
push
dec
sbb
and
outsl
add
int3
js
loope
inc
lret
and
adc
push
lret
push
sti
mov
popa
insb
push
cwtl
jnp
pop
outsl
insb
cmp
xchg
or
pop
mov
jmp
or
sub
jo
inc
pop
jno
mov
or
imul
stc
jbe
std
outsl
cmpl
ds
and
add
push
push
scas
mulb
dec
sbb
jle
jno
outsl
cmp
test
hlt
scas
jge
mov
outsl
push
xor
jno
pop
ja
inc
mov
pop
jle
jecxz
dec
fisttpl
add
mov
bound
pop
sub
inc
sbb
push
sahf
xchg
add
push
popa
ja
out
sbb
loope
xchg
cltd
pop
icebp
and
xchg
push
add
cmpsl
xor
cmp
insb
adc
repz
and
fmull
cli
xchg
out
and
xor
mov
fistl
adc
out
arpl
shll
insb
jbe
lahf
sub
sub
je
addb
cmp
into
jecxz
inc
loopne
and
das
mov
xchg
in
popf
loope
hlt
cmp
in
insl
push
shll
cmc
rorl
packuswb
cmp
inc
sub
insl
stos
pusha
ds
cmp
aam
dec
fwait
ja
dec
bound
adc
into
mov
lahf
mov
in
aad
in
xchg
aaa
dec
lcall
dec
cld
mov
test
pop
insl
inc
pop
mov
sbb
sbb
push
mov
mov
xchg
add
in
insb
jo
push
adc
div
add
pop
add
call
inc
mov
cmp
push
mov
push
push
out
push
pop
out
jge
lret
sub
dec
xchg
fdivl
ror
mov
add
cli
ret
sub
in
cwtl
loope
jge
mov
jp
cltd
in
lcall
sub
lahf
stos
movsb
leave
dec
repz
mov
imul
negb
jg
es
pop
inc
fs
push
out
add
cmp
xchg
mov
and
fcom
fdecstp
pushf
repz
insb
and
jae
and
aas
nop
pop
outsb
pop
stos
mov
jo
and
and
mov
movsb
mov
ficoms
sahf
lret
out
adc
addr16
into
cmp
mov
mov
imul
roll
leave
xchg
pop
xchg
std
or
push
mov
movsb
cmc
mov
sbb
stos
or
out
or
clc
int
repnz
iret
stc
out
and
and
mov
imul
js
mov
jecxz
lea
dec
jne
mov
lret
jns
mov
jbe
cs
lret
iret
shl
insl
jmp
cmp
mov
lahf
outsb
test
lds
sub
data16
pop
lods
int3
insb
loopne
jecxz
push
xor
cmp
add
pop
push
in
aaa
cwtl
adc
jne
stc
ss
daa
fmuls
jne
jmp
repnz
adc
test
lods
mov
cmp
mov
dec
scas
cltd
notb
std
push
inc
pop
mov
pop
call
js
jle
jp
je
xchg
test
adc
xchg
and
xchg
jmp
leave
lods
sbb
pop
andnps
out
pop
fcompl
rorl
insl
je,pn
iret
stc
testb
testl
popf
data16
sahf
or
mov
notb
fsubrs
push
lock
push
cmpsl
fcmovbe
imul
pop
and
in
xor
or
lods
sti
sbb
mov
gs
add
adc
fwait
ja
and
cmpsl
mov
mov
inc
test
rcrb
mov
gs
inc
sub
es
repnz
add
mov
out
inc
shl
iret
cmp
fs
lock
fistpll
xchg
mov
stc
lds
jnp
in
adcb
or
dec
lods
rol
sar
mov
jb
pop
pop
sub
fstps
and
outsl
pop
js
mov
pop
inc
dec
repnz
cmp
inc
jbe
popf
fistl
xor
mov
push
or
xchg
sbb
lea
xchg
cmp
scas
jle
bnd
push
adc
add
test
push
adc
mov
insl
cmp
xchg
cli
out
mov
daa
sub
mov
add
enter
lock
sbb
std
out
push
jae
nop
inc
and
push
lods
je
push
mov
sub
mov
int3
stc
stos
mov
sub
adcb
mov
adc
lds
filds
and
js
std
das
icebp
arpl
mov
mov
adc
adc
or
add
int3
dec
out
dec
jae
cmp
scas
sub
and
cmp
dec
and
xchg
mov
adc
mov
enter
mov
test
mov
and
push
jno
out
fadds
aam
cmp
fimuls
fldt
inc
leave
inc
shlb
repnz
das
rorl
daa
add
pushf
fcmovnb
popa
cs
xchg
js
stos
aad
aad
and
push
stos
lods
xlat
les
pop
vcmppd
outsb
mov
mov
iret
aas
or
jmp
insb
mov
dec
cmp
add
jle
sub
inc
sbb
aaa
jl
push
xchg
cwtl
and
out
mov
in
cmp
inc
or
test
mov
dec
scas
int3
pop
mov
mov
test
mov
ret
roll
xor
or
sub
gs
sub
bound
mov
inc
dec
ret
pop
inc
fsubrs
mov
push
lods
and
push
push
outsl
iret
sub
es
pop
faddl
repz
adc
in
cmp
test
movsb
mov
test
inc
xor
add
das
adc
out
pop
ljmp
xor
fs
pop
aas
jo
movsb
pop
shl
cmp
pop
pop
dec
pushf
shr
loope
xchg
idiv
add
repz
lcall
icebp
xchg
jecxz
sarb
or
and
or
jb
mov
negb
inc
sbb
xor
push
xor
xchg
dec
pop
bound
popa
inc
pop
cmp
test
adcl
jb
sub
or
inc
fs
cmp
idivb
fcom
xchg
mov
mov
and
xchg
dec
jg
adc
lds
pusha
lahf
aam
mov
lock
sbb
add
leave
sub
jg
out
out
mov
dec
mov
aam
scas
lock
dec
fdiv
cmpsb
cli
inc
xor
mov
cmp
out
mov
xor
test
jae
sub
int
ja
pop
movsl
shl
pop
in
xor
jnp
in
push
xor
mov
add
pushf
push
lock
pextrw
pop
mov
ja
daa
cmpsb
sub
adc
jb
movsb
push
dec
pop
mov
jnp
pop
jne
push
pop
arpl
dec
sbb
pop
in
leave
into
push
xchg
pop
mov
xchg
inc
pop
rorl
pop
andl
sbb
andb
mov
pusha
loop
inc
lds
mov
xchg
inc
lret
sub
jnp
add
cmpsl
dec
mov
jge
sub
push
dec
and
xor
sti
pop
adc
mov
into
inc
xchg
cmpsl
pusha
in
aad
fisttpl
addr16
imul
pop
lahf
loop
aas
cmp
out
leave
lds
pushf
das
test
pop
lods
xchg
in
cmp
dec
push
and
les
imul
dec
sub
movsb
dec
jecxz
outsb
iret
xchg
shll
mov
cltd
popa
ss
pop
adc
push
pusha
sarb
popf
jbe
mov
js
es
and
mov
sub
aad
mov
sbb
mov
jl
mov
enter
sar
imul
push
inc
out
or
xchg
xchg
xor
clc
rcl
iret
out
popf
addr16
sub
xchg
adc
sub
xchg
pop
iret
divl
stc
add
fldenv
mov
out
rol
out
add
outsb
xor
inc
cltd
and
cld
jae
inc
fists
lock
loopne
bound
jg
shll
dec
outsl
mov
sbb
mov
test
cwtl
xor
pop
add
gs
ja
out
ljmp
jle
pop
mov
mov
shll
pop
movsl
xlat
stos
dec
repz
xor
clc
lods
sbb
fcmovnu
int
pop
or
add
dec
lret
mov
lret
adc
je
int3
or
sti
mov
loop
xor
jne
mov
mov
movsl
stc
fwait
sub
mov
jno
out
loope
hlt
push
jp
repz
imul
int
xor
shrl
idivl
pop
sbb
push
sbb
and
in
cld
shrl
mov
jle
dec
pop
mov
pusha
pusha
jo
nop
cmp
push
dec
dec
test
sbb
jb
pop
jmp
sbb
addl
pop
out
lret
mov
aad
insl
lahf
scas
movsb
into
lods
daa
ds
pushf
and
arpl
je
push
inc
xor
insb
fildll
jl
aad
push
mov
sbb
mov
and
add
int3
mov
mov
orb
dec
pop
ja
add
lcall
xor
in
cmp
arpl
shl
cltd
xchg
pop
repz
ja
push
add
ss
sub
xchg
mov
sbb
nop
xchg
outsb
cltd
adc
je
and
dec
push
shrb
pop
dec
and
imul
popa
mov
sbb
xor
mov
test
aam
mov
push
jp
cmp
je
mov
push
daa
push
and
dec
cmpsb
pop
lds
lea
pop
mov
loop
fdivrs
out
xchg
std
imul
push
cmpsb
clc
mov
pusha
xchg
aam
es
daa
call
nop
mov
into
jmp
sub
xor
pop
dec
shlb
scas
aas
push
and
shrl
mov
in
gs
popa
add
xor
data16
adc
imul
aam
mov
cltd
inc
shll
add
cmpb
pop
sti
lds
in
psubq
jmp
xchg
mov
in
jp
and
bound
inc
mov
xlat
daa
add
subl
add
jns
cs
inc
int
std
lahf
out
inc
dec
punpcklwd
push
fcoml
cwtl
aam
into
xor
in
or
ret
mov
jbe
and
insl
sbbb
ficompl
sbb
inc
aaa
or
mov
add
cmpsb
das
jo
xchg
mov
mov
jge
sbbb
cli
cltd
mov
and
pop
push
scas
movb
push
xor
fcompl
cmp
mov
mov
hlt
dec
negb
push
in
push
jecxz
push
lock
dec
sub
push
clc
mov
sti
dec
aas
add
cmp
lea
adc
mov
pop
fs
jp
gs
shll
mov
jnp
xchg
fs
loop
cltd
inc
popf
add
in
or
sub
pop
adc
popa
sbb
gs
xchg
lcall
pop
sub
inc
es
push
xor
bound
aam
pop
stc
stc
mov
mov
test
arpl
push
jg
fbld
mov
mov
sub
dec
in
push
and
mov
stc
outsb
pop
pop
pop
frndint
mov
enter
and
pusha
popa
jg
pop
jb
mov
sbb
mov
sub
testl
pop
pop
addr16
sbb
ja
je
leave
xchg
xchg
jbe
lods
ljmp
push
shrb
out
les
mov
lods
es
insb
and
repnz
mov
dec
aam
test
jge
outsl
adc
cmp
fadds
lock
xor
mov
nop
cmpsb
stc
push
cld
sub
pushf
xchg
out
xchg
jp
inc
and
in
cmp
cmp
fildl
push
orb
xor
xor
scas
sbb
mov
adc
mov
mov
bound
sbb
mov
mov
jg
mov
into
mov
xchg
ret
fwait
xlat
push
sbb
xchg
xchg
add
lds
mov
xchg
sti
sub
not
hlt
or
push
dec
sti
fcoml
imul
addb
fwait
xlat
sbb
sub
clc
dec
xchg
lea
sti
push
xchg
outsb
mov
push
sbb
sbb
nop
cmp
repnz
test
mov
outsl
repz
fcoml
out
push
arpl
xor
mov
or
mov
rcrb
cmp
gs
mov
cmp
imul
push
pop
aas
popf
pop
int
popa
sub
test
bound
test
push
mov
popl
adc
pop
pop
ja
push
cmpsl
jae
sub
or
cltd
adc
filds
sub
pop
iret
and
xchg
mov
icebp
lods
push
stc
mov
test
iret
pop
repnz
mov
leave
xor
icebp
pop
jg
cmc
fwait
testb
dec
andb
xchg
fs
es
sub
mov
fs
out
adc
js
add
ja
hlt
push
pop
ja
cmp
add
or
test
stos
adc
popf
mov
lods
mov
and
sub
pop
mov
jl
cmpsb
out
adc
jle
std
add
dec
incl
or
pop
out
sbb
out
add
xchg
push
pop
neg
fsubl
mov
daa
loope
imul
out
mov
les
mov
inc
fists
sbb
fistpl
pop
jge
insl
jns
dec
inc
push
ja
rorl
cmpsb
sub
fdivrl
xchg
cli
jp
mov
dec
ljmp
cmp
jl
jmp
xchg
xor
hlt
movsb
dec
mov
std
scas
es
lock
add
sbb
insl
pop
out
mov
es
xchg
jae
jle
xor
imul
and
int
popf
mov
add
int3
ss
mov
ljmp
sub
or
add
aad
pop
out
daa
jecxz
insb
addr16
cmp
sub
sbb
outsl
fidivl
adc
rcll
cmp
sub
add
mov
and
mov
jnp
lret
dec
add
popa
in
or
cltd
daa
lcall
mov
orb
cmp
push
xor
mov
inc
outsb
cmp
scas
int
inc
pop
insb
out
push
gs
cmc
mov
lock
sub
jmp
scas
dec
shlb
mov
pop
faddp
inc
clc
xchg
pop
adc
lds
lds
ds
dec
mov
mov
into
inc
cmp
mov
in
or
les
add
inc
aaa
idivb
sbb
add
push
sbb
jae
fsubl
roll
adc
add
push
clc
cmp
rclb
add
into
add
out
insb
loopne
leave
or
sub
xor
sbb
in
loope
xchg
pop
sbb
in
lods
ja
je
pop
gs
mov
mov
rcrl
push
jecxz
stos
dec
movsb
pop
aad
sbb
in
test
inc
sahf
xor
and
push
aaa
cmp
dec
inc
lods
loope
call
ja
pop
mov
inc
mov
sbb
scas
add
call
mov
cmp
lahf
in
into
iret
and
in
daa
sbb
test
and
push
push
in
popa
mov
mov
xchg
hlt
or
daa
fidivs
cwtl
and
push
lret
inc
popa
add
pop
lods
setno
add
inc
add
mov
inc
lcall
aaa
dec
imul
jae
or
push
mov
enter
jg
repnz
lds
xchg
ljmp
dec
lods
cli
sbb
je
jmp
jbe
pop
imul
cmpsb
adc
xchg
or
negb
pushf
xlat
mov
jecxz
dec
aad
ret
shlb
subb
xchg
nop
test
dec
mov
jmp
lret
xor
xlat
and
sbb
xchg
cmp
test
test
add
out
adc
cli
ds
mov
cmp
mov
rorb
pop
cmp
outsb
mov
xchg
cmp
or
push
into
insl
dec
sub
lock
sub
adc
test
mov
mov
sub
push
gs
fnstsw
in
mov
mov
inc
dec
mov
in
insl
test
shlb
push
lea
cwtl
cld
cli
addr16
jnp
loop
aam
shll
push
shr
es
hlt
cmpsb
pop
shrl
cltd
ret
mov
int
movsl
ret
sub
jg
push
jne
xchg
outsb
rcrl
jns
push
fstpl
push
push
cmp
ss
sub
mov
out
enter
std
xadd
or
adc
pop
mov
leave
mov
lcall
dec
shll
lahf
mov
mov
xchg
pop
gs
mov
xor
or
enter
pop
lret
sahf
sbb
scas
sti
cltd
add
shlb
mov
icebp
in
cli
shrb
inc
int
in
pushf
aaa
push
jb
sub
outsb
scas
push
ss
and
pop
xor
mov
inc
add
push
cmp
dec
xchg
mov
leave
daa
out
dec
mov
lods
xlat
dec
pop
mov
mov
xchg
inc
xchg
xchg
nop
outsb
mov
xor
mov
arpl
rcll
jbe
cmp
push
push
cmpl
insl
jno
rol
clc
popf
add
pop
into
xor
fnstenv
aaa
mov
les
push
xchg
xchg
sbb
cs
pop
pop
rcll
fidivs
outsl
imul
pop
subl
fisubrs
imul
jne
movsl
xchg
push
in
adcb
jns
or
xor
test
pop
mov
mov
cmp
dec
in
cmp
rorb
jp
adcl
popl
pop
aam
shl
cmpsl
xor
aas
or
aas
sub
push
lods
out
mov
pusha
lret
sub
mov
mov
pop
pop
into
sbb
cli
dec
xchg
xor
inc
icebp
fs
mov
jb
push
pusha
movsl
cmpsb
addr16
jb
add
pop
fnsave
je
mov
inc
jmp
inc
dec
pop
jp
inc
scas
push
mov
aaa
mov
fs
or
xor
jl
call
int
addr16
cmp
jb
xor
addr16
mov
mov
or
call
sub
xchg
jle
cmp
imul
xor
test
add
fcompl
inc
fisttps
insb
movsb
push
cmpl
mov
push
jb
hlt
dec
inc
fwait
push
sahf
cltd
or
mov
hlt
test
fdivrs
sbb
jne
pop
jbe
mov
sbb
lods
cwtl
pop
sbb
cmpsb
ljmp
xchg
pop
cmp
push
and
insb
push
jg
inc
xchg
and
jnp
in
xchg
fsubl
nop
pushf
movsb
jp
xor
xor
jmp
repz
mov
jg
pop
or
outsl
cmp
lcall
push
lret
pop
xor
mov
gs
cmpb
inc
push
mov
js
stos
cwtl
arpl
mov
cwtl
mov
mov
mov
sbb
jg
sub
cs
ret
adc
add
loope
aaa
movsb
inc
pop
lret
jle
and
sbb
scas
gs
imul
and
popa
or
mov
mov
fiadds
cmpl
sbb
push
pop
pop
cmpsl
stos
cmp
sub
mov
icebp
sub
ja
cmpxchg
or
adc
std
inc
je
and
es
or
shll
pop
pushf
fwait
ljmp
cmp
and
vpsrlq
shl
in
push
inc
sbb
xchg
push
push
push
jp
xor
xchg
sbb
pop
or
cmp
push
mov
into
cmp
scas
popf
testb
and
inc
aaa
jmp
push
xor
int
or
push
dec
nop
push
mov
std
flds
jae
pop
outsl
int3
pop
and
sbb
xchg
out
int
pop
cmp
mov
aam
mov
xchg
add
sub
jns
fidivs
arpl
pop
jae
es
sbb
xchg
push
orl
ffreep
push
loopne
add
sub
mov
test
mov
iret
test
and
inc
adc
sti
push
push
ds
sahf
in
lods
pop
imul
cmc
add
shrb
or
pop
sub
shlb
sarb
dec
sbb
dec
push
mov
cmovo
mov
out
fimull
pushf
cwtl
add
inc
or
or
xor
add
fs
mov
inc
movsl
adc
inc
push
fildll
xchg
test
test
jp
imul
cmp
lea
gs
adc
dec
iret
push
das
xlat
test
xor
outsb
incl
dec
add
movsl
push
call
int
mov
ja
cmp
sbb
dec
xor
or
push
je
push
repnz
xchg
ficoml
movsb
enter
or
dec
or
mov
insl
cmp
jp
cmc
fbstp
inc
js
push
ljmp
cmpsl
out
lcall
aam
pop
repnz
push
pop
lods
xchg
push
push
je
enter
cmp
mov
jge
jl
ljmp
call
mov
cltd
jge
cmpsl
xlat
fldt
add
pop
push
orb
sub
sbb
xor
mov
aad
jp
aas
push
repz
pop
add
push
das
cli
lcall
fstps
sbb
inc
hlt
rclb
dec
mov
sbb
xor
cmpsl
lahf
in
xchg
mov
push
mov
int
and
jno
sub
les
jnp
jno
push
lahf
in
adc
inc
insl
adc
adc
mov
cmp
das
inc
xor
ljmp
popf
xor
cmp
jle
push
fucomip
jne
jnp
or
pop
popl
mov
jns
in
outsb
adc
xchg
aad
cmp
dec
push
add
pop
pop
pop
cli
imul
sub
cld
rcrl
mov
sub
jl
and
xchg
jl
iret
add
or
xor
sahf
popa
rorb
loope
mov
sbb
xchg
outsl
jp
mov
das
mov
repz
loope
fwait
jl
mov
in
push
mov
push
sbb
push
mov
es
and
mov
adc
xlat
pusha
mov
mov
aam
pushf
cld
js
rclb
mov
add
fisubrl
mov
addr16
in
xchg
mov
push
adc
or
mov
loopne
and
push
insb
xchg
sub
out
nop
xchg
in
sti
test
adc
sbb
hlt
push
xor
add
mov
insb
add
mov
inc
stos
adc
lds
lret
shlb
outsb
int3
insl
mov
add
fsub
mov
test
popa
xchg
lea
cmpsl
and
gs
and
push
cmp
mov
jg
dec
and
fisubl
xlat
lcallw
xor
dec
dec
sub
cs
or
fwait
xor
aas
mov
enter
popf
nop
ret
jl
sbb
mov
fiadds
mov
out
mov
xor
clc
push
cmpl
sbb
mov
push
xor
scas
inc
jle
mov
dec
fcmovb
and
adc
dec
mov
mov
push
aaa
cmc
sub
or
cmpsl
lods
rorb
in
xchg
push
pop
or
hlt
inc
pop
mov
repz
pusha
xchg
ds
sbb
movsl
xchg
mov
sbb
dec
cwtl
xchg
jnp
ret
xchg
add
sbb
loope
xorl
ret
pop
push
mull
cmp
pushl
and
mov
sub
clc
clc
cltd
testb
outsl
cmpsl
test
mov
out
push
pusha
or
cwtl
lock
hlt
xlat
mov
call
pop
lret
xchg
lea
shlb
sbbl
dec
cwtl
mov
sahf
stc
pop
sub
xchg
imul
cs
das
clc
pop
pop
nop
ja
ljmp
mov
xchg
push
add
jbe
leave
xchg
jmp
aam
push
sbb
or
int
pushf
aas
mov
xor
lret
lds
lods
lea
enter
mov
sub
stos
popa
mov
dec
nop
push
test
loopne
mov
loopne
mov
fwait
pop
cmp
outsl
jb
dec
pop
lods
sub
adc
mov
mull
repz
roll
or
pop
imul
push
cmpsb
xchg
sub
push
jmp
es
into
xor
and
sti
dec
adc
pop
xor
fs
push
mov
dec
add
lock
imul
insb
pop
lea
sbb
pop
pushf
out
mov
int3
mov
push
stos
je
xor
adc
aas
stos
fnstenv
push
cld
ret
dec
mov
cmc
pop
inc
sbb
sbb
push
jecxz
cmp
loopne
iret
testb
xor
cmc
icebp
lods
or
push
notb
mov
movsb
and
inc
adc
adc
outsb
pop
js
shlb
int3
xchg
push
mov
mov
mov
jg
pop
pop
dec
call
xor
cmp
cmp
pop
jnp
xchg
inc
daa
shrb
mov
imull
mov
rcrl
out
sarb
jnp
adc
ret
inc
push
pushf
xchg
xchg
jecxz
pop
and
int3
int
data16
and
xchg
and
insb
aad
xchg
push
push
test
adc
mov
mov
insb
mov
cltd
popf
push
xor
ds
push
in
sbb
pop
cld
mov
enter
mov
jbe
xor
scas
xor
mov
test
loop
adc
cmp
add
jp
in
mov
mov
loope
and
jecxz
or
jl
xchg
pop
loopne
jg
add
and
insl
fdivrp
xor
shrb
in
mov
lods
rcl
mov
stc
call
mov
add
sarb
aaa
insb
jnp
sub
into
in
sbb
in
fdivs
or
mov
decl
pop
inc
outsb
jmp
mov
scas
dec
push
sbb
xchg
sub
fcoml
mov
jmp
xor
mov
dec
xchg
lds
ja
add
movsb
ret
dec
bound
pop
pop
mov
cmpsb
adc
add
inc
mov
and
or
lret
inc
fnstenv
lret
jns
das
inc
das
push
mov
or
mov
adc
mov
and
ret
cmp
pop
dec
movsl
nop
cmp
lods
test
loope
sub
fstp
insb
in
sbb
push
adc
jp
or
rol
cmp
mov
jmp
jp
scas
mov
int
or
in
cmp
rorl
out
clc
lret
mov
mov
fs
movsl
and
xchg
cs
push
adc
sahf
dec
insl
or
stos
das
cmp
adc
add
jp
dec
sahf
or
sbbl
lods
cmp
push
lock
iret
inc
sub
mov
jecxz
mov
adc
mov
jno
or
cmp
mov
push
movsb
clc
outsl
scas
adc
xchg
inc
xor
xor
inc
shrb
xchg
pop
arpl
or
notb
pop
ja
sub
out
cmp
sub
adc
clc
mov
addr16
dec
pop
xorb
mov
cmp
push
inc
dec
lock
adc
dec
call
jmp
inc
mov
jns
cmovge
fsubrs
cmp
icebp
and
jg
mov
lcall
mov
xor
ljmp
movl
jecxz
pop
dec
jecxz
add
mov
fsubr
add
sub
lret
xor
mov
ja
and
lods
sbb
push
cmp
shr
or
sub
or
addb
out
sbb
out
push
cmpsb
adc
enter
xchg
and
xchg
in
lods
mov
push
pop
push
or
push
lret
inc
arpl
cmp
inc
adc
daa
push
push
sbb
mov
inc
leave
or
mov
push
out
adc
push
mov
lcall
cltd
cmp
cmpsl
nop
dec
cwtl
jns
mov
xlat
xor
popa
sahf
pop
lods
cmp
and
xor
jecxz
cld
jbe
insl
mov
es
orl
jbe
iret
and
pushf
std
inc
mov
sbb
fbstp
movsl
mov
or
in
orb
push
jg
fsts
pop
mov
mov
jl
sbb
test
mov
mov
pop
xchg
cld
rcr
cmpsb
pop
call
cmp
ror
mov
leave
out
fisttps
add
push
adc
arpl
push
inc
push
test
out
aaa
inc
jo
addr16
ret
cmp
and
jp
jmp
adc
mov
lock
fisubs
popa
lahf
test
fnsave
and
mov
cmp
cmp
and
xchg
adc
maskmovq
imull
adc
lods
insl
sbb
pop
inc
clc
adc
sub
lods
xchg
out
jmp
ja
dec
mov
jle
jp
int
outsl
xor
push
dec
adc
xchg
mov
jbe
js
inc
lds
fsubr
sbb
lods
or
cld
fildll
sub
aas
sbb
lcall
filds
mov
xchg
fsubr
inc
iret
movsl
icebp
pop
push
pop
lret
ds
sbb
data16
cmp
loopne,pn
pop
rcll
mov
xchg
fisubl
cmpsl
roll
adc
push
lds
sub
repnz
or
add
scas
and
idivb
dec
push
jg
mov
cwtl
push
fdivs
push
cmpsb
jl
xor
lds
fucomip
inc
les
orb
jmp
pop
bound
push
sub
aam
pop
xchg
fwait
mov
and
sbbb
mov
mov
push
stos
jb
out
adc
rcr
mov
loop
mov
cmp
out
movsb
mov
add
mov
mov
push
pop
sahf
cmp
or
push
gs
push
adc
cli
and
loopne
ret
pop
cs
fcmovnb
fcomp
stos
hlt
lret
sub
push
and
rcrb
jmp
test
jg
mov
inc
hlt
inc
dec
inc
frstor
mov
cmp
mov
mov
push
stos
test
cmp
inc
or
mov
js
inc
add
adc
outsb
shll
arpl
test
push
xchg
fs
cmp
test
ljmp
pop
push
ja
pushl
mov
lea
push
xlat
jnp
mov
cmp
aad
call
mov
sub
xchg
cmpb
add
pop
mov
inc
cltd
adc
jo
dec
mov
jno
mov
add
push
push
mov
jmp
flds
or
mov
mov
mov
test
jmp
movsb
in
jns
or
sbb
into
es
lods
sub
adcb
xchg
adc
in
mov
push
ret
pop
arpl
call
push
sbb
cmpsl
mov
sar
and
and
test
gs
js
addl
movsb
cmp
mov
sbbl
outsl
jp
cmp
push
xor
popa
mov
or
adc
inc
es
jno
inc
mov
mov
lcall
movsb
sub
imul
in
cmp
sbb
mov
fimull
adc
xchg
popf
cwtl
int
jo
push
out
add
into
dec
or
and
lds
adcb
mov
cmpsl
add
xor
outsl
add
mov
push
add
pop
xor
lcall
push
jbe
scas
imul
lea
nop
inc
sub
bnd
xor
xchg
mov
cmc
popa
fs
or
in
or
in
testl
psubq
fisubrl
xor
bound
int3
adc
outsb
frstor
out
mov
ds
jecxz
jae
fisubrl
push
cmc
loope
push
int
add
add
xor
or
cs
pop
sub
stos
or
inc
pop
clc
lock
xlat
in
test
xchg
push
int3
dec
mov
push
imul
and
push
xlat
sub
das
fstpt
mov
rcll
popa
ret
iret
cmpl
fs
out
insl
rclb
push
scas
fisttpl
arpl
mov
cli
xchg
icebp
push
movsb
roll
loopne
jb
jg
imul
fld
out
js
call
mov
gs
imul
aaa
xor
loope
mov
pop
int
sub
mov
jmp
xchg
inc
push
pusha
sbb
xchg
sbb
push
push
cmp
or
rolb
sub
aad
or
movsl
pop
fs
popa
out
test
cmp
loope
cwtl
inc
mov
call
arpl
dec
int
pop
addr16
mov
dec
cmc
mov
es
fbld
fbld
mov
mov
pop
call
xchg
add
loopne
push
or
mov
fs
add
lods
sar
xor
fcom
clc
jb
ret
xor
int3
add
push
adc
cld
fcmovbe
xchg
hlt
cwtl
pop
call
movswl
addb
dec
inc
cmp
scas
sbb
sub
out
sahf
sbbl
or
sub
dec
andb
test
popf
inc
push
push
insl
sub
incb
jmp
sbb
adc
pop
xchg
notl
xchg
in
out
mov
jle
into
andl
fiadds
sub
movsb
xor
lods
negb
popa
jae
mov
sub
movsl
adc
mov
sub
or
outsb
aam
cmp
jbe
add
xorl
icebp
cli
out
imul
sub
mov
dec
or
lods
mov
mov
jns
jg,pt
sub
mov
dec
jne
fs
imul
cmp
adc
repz
sahf
cmpl
pushl
or
sbb
and
lret
jp
adc
pop
and
stos
jne
inc
sahf
mov
jmp
scas
dec
das
out
sbb
enter
xor
inc
ja
sbb
popa
ret
cmc
xor
sbb
sahf
xchg
mov
and
dec
ss
out
xchg
inc
mov
xchg
lods
sahf
pop
sub
push
test
dec
in
mov
dec
clc
fdivrl
add
enter
inc
hlt
dec
jg
loop
imul
loop
inc
sbb
pop
adc
jne
je
push
pushf
pop
or
dec
pop
mov
insb
xor
jne
mov
and
fstpl
enter
cmpsl
mov
lret
mov
call
in
scas
xchg
test
xor
pop
fisttps
mov
daa
and
xchg
test
adc
scas
cltd
jp
sub
jae
leave
cmp
xlat
mov
or
lds
inc
enter
cmc
jb
test
fsubrl
sub
pop
sub
sub
stos
movl
jge
scas
or
pop
cwtl
insb
arpl
push
mov
jb
icebp
enter
dec
in
xor
les
xor
aas
lds
into
jne
jmp
int
rcl
out
mov
pop
and
imul
cmpsb
xor
mov
pop
loop
sbb
cmp
and
mov
insl
sub
push
dec
jle
jne
sub
jbe
data16
pop
idivb
xor
cmp
out
mov
xchg
inc
pop
in
pop
pushf
sbb
mov
sbb
jle
insl
outsl
add
push
lea
addr16
out
aaa
pop
rclb
sub
xlat
cmpsb
xor
xchg
adc
mov
lahf
inc
lret
out
sbb
add
cld
out
inc
gs
mov
mov
mov
fdivrl
dec
cmc
xor
stos
jmp
xchg
das
push
sbb
jb
fldcw
cltd
stos
scas
pop
jae
xor
or
rorl
or
jmp
roll
cmpsb
std
or
imul
imul
ffreep
lahf
mov
rcll
jae
lods
cltd
arpl
cmpsl
test
bound
movsl
push
mov
dec
test
or
mov
mov
lahf
das
icebp
jle
mov
push
mov
mov
out
out
or
nop
outsb
cmpl
loop
adc
xor
mov
inc
rcrb
pushl
pop
das
add
dec
inc
cltd
icebp
pop
inc
cmpsl
jb
iret
jl
or
into
push
dec
call
mov
mov
ret
jp
or
inc
xor
in
cmpsl
lcall
je
mov
cs
scas
and
aaa
in
or
lea
xor
into
sub
int
mov
cmp
jb
aas
jp
jb
and
test
or
ss
scas
jne
push
xchg
stos
mov
or
jb
jno
out
dec
out
mov
push
push
ljmp
outsl
inc
jecxz
insl
sub
and
and
int3
mov
insb
std
cmc
pop
data16
xor
mov
mov
insl
test
imul
pop
mov
and
mov
xchg
fwait
push
xchg
mov
data16
inc
mov
cmc
rclb
pushf
ljmp
push
ja
outsb
out
mov
cld
pop
add
and
sbb
aam
jge
sbb
pop
inc
add
lsl
sub
data16
cs
dec
ds
shr
sub
push
and
or
xlat
gs
push
sub
dec
sub
push
xchg
adc
inc
mov
mov
and
jle
ljmp
jl
pop
cli
mov
fisubs
int
dec
jb
push
sarb
ss
stos
into
sub
daa
lcall
ret
clc
jg
ss
call
and
mov
icebp
mov
fsubp
stos
xchg
mov
adc
sbb
ss
add
sub
jno
mov
imul
mulb
mov
mov
roll
loop
and
push
mov
lods
inc
pop
outsl
not
dec
mov
dec
mov
ret
pop
inc
inc
lahf
sar
rorl
mov
pop
dec
daa
or
jbe
jb
rep
cmpb
jle
cmpsl
and
and
or
daa
lahf
ror
inc
sahf
sub
adc
mov
mov
cld
cmpl
cli
imul
aas
fdivl
xchg
je
aas
jne
in
stc
sub
sbb
xchg
xchg
iret
faddl
pop
push
xchg
dec
ss
dec
mov
out
mov
cltd
xor
add
lcall
jl
or
mov
ret
sub
push
mov
mov
sub
mov
adc
fistpl
stos
aad
xor
rolb
iret
mov
lret
out
sbb
mov
and
jmp
clc
outsl
lods
cmc
out
pop
push
aam
movsl
or
roll
cmpsl
inc
mov
jae
pop
push
mov
stos
rorb
enter
inc
std
dec
aaa
pop
xchg
sarl
roll
jmp
or
push
movsl
inc
mov
or
int
pop
xor
or
addr16
imul
ja
test
adc
out
cmp
dec
or
ljmp
sub
scas
cmpsl
adcb
dec
daa
sbb
xor
dec
push
cmpsl
xchg
testl
imul
sbb
and
jbe
imul
jbe
leave
lcall
imul
adc
push
data16
outsb
aaa
jmp
push
xor
xor
cltd
jns
cmp
dec
aad
pop
mov
inc
imul
sbb
ds
pop
mov
fisubrl
mov
sbb
sti
loop
rcrl
leave
mov
js
mov
adc
aad
jbe
dec
sti
out
jmp
add
addl
fcmovnbe
cmp
push
hlt
push
mov
gs
pmuludq
mov
sub
sbb
sbb
adc
pop
shrl
into
cmc
rcll
call
jp
xchg
mov
fsts
and
dec
loopne
xor
imul
xchg
or
mov
loop
push
out
sub
mov
fsub
cld
mov
aaa
xchg
mov
ret
sbb
mov
mov
insb
jnp
push
aad
std
stc
pop
push
pop
dec
dec
pop
hlt
shlb
inc
rcrl
stc
pop
xchg
xor
stos
lea
xor
data16
movsl
aam
mov
cltd
fstp
mov
push
stc
int
mov
pop
jg
mov
call
jg
and
jg
mov
jg
scas
add
push
ret
pushf
pop
jecxz
ja
pop
testb
push
mov
lods
aas
in
data16
dec
fmul
movsl
daa
dec
inc
ja
xchg
test
or
adc
sti
dec
sahf
dec
clc
icebp
mov
sahf
mov
inc
aas
enter
sbb
push
test
add
or
int
mov
imul
leave
dec
shr
jge
or
add
cmpsb
jge
iret
dec
jg
in
xchg
out
mov
and
mov
insl
and
lods
or
add
mov
hlt
insl
mov
or
mov
push
xchg
and
jb
adc
lcall
outsl
sub
sbb
cmpsl
inc
mov
and
mov
lret
shl
xchg
or
jo
out
scas
jbe
repnz
arpl
pop
sbb
lods
daa
fwait
sarb
cmc
inc
fs
imul
cmp
arpl
loope
ss
loopne
jg
repz
pop
test
repz
cmp
pop
repz
or
in
pushf
cmpsb
iret
sub
shl
loope
cs
popf
orb
mov
out
scas
add
loopne
js
push
sti
jno
cmpsl
pop
or
insl
lods
das
push
loopne
sti
cwtl
mov
rclb
fcomi
inc
xchg
aad
mov
cmpsb
ret
scas
jge
adc
arpl
mov
stos
lcall
ret
mov
xchg
cltd
cltd
jge
sub
pop
sbb
in
inc
dec
ljmp
jbe
pop
sbb
out
cmp
mov
cmpl
sbb
sub
lret
call
mov
enter
ret
jbe
adcl
ret
sbbb
fcmove
add
inc
mov
pop
jne
fwait
push
add
clc
push
aad
adc
adc
pop
jl
stos
dec
pop
sbb
push
sub
adc
add
mov
pop
cmp
addr16
fcom
or
andb
fcmovbe
test
movsl
popl
je
mull
out
movsb
xchg
in
jmp
jp
xchg
rcll
xchg
decb
mov
sarb
push
xor
cmpsl
movsb
subb
dec
cmp
fisttps
jl
ficomps
aad
call
mov
sbb
data16
popf
mov
xor
leave
inc
cmpl
ficoms
mov
test
pop
pop
jbe
or
lds
mov
lods
in
dec
bound
mov
adc
xchg
sbb
sub
xor
sbb
push
push
jg
not
jp
shl
mov
shll
mov
pop
adc
push
jns
les
push
loope
sarl
jge,pt
inc
pop
or
lds
jae
test
jle
push
cltd
fs
and
xchg
add
jmp
cltd
pop
inc
jl
xor
jne
lea
daa
xor
scas
addr16
nop
add
icebp
movaps
jbe
push
das
enter
mov
xchg
scas
test
fincstp
int
sbbl
xorb
in
pop
jae
xlat
sbb
push
dec
sbb
andb
ja
dec
jmp
fidivrs
aaa
inc
adc
sbb
dec
dec
pop
xchg
adc
jb
adc
stos
cld
scas
cmpsl
mov
sub
mov
fisttpll
adc
pop
mov
pop
gs
mov
xchg
cmpsb
jne
xor
cli
ja
mov
mulb
mov
push
inc
push
arpl
mov
cs
in
mov
fdivrl
lock
imul
jmp
fsub
jae
jmp
sbb
mov
cmp
pushf
mov
push
add
loope
lods
call
sbb
aad
add
int
out
adc
and
xchg
dec
dec
gs
inc
dec
fisttpl
mov
add
sbb
nop
mov
jae
in
sub
lret
out
mov
out
xchg
in
sub
mov
cmp
xchg
scas
fldenv
push
xchg
adc
jmp
xchg
shr
pop
sub
or
addb
sbb
xchg
sbb
cwtl
and
aam
cld
adc
pop
mov
xchg
mov
fsubl
inc
pop
and
jbe
or
stc
jmp
loope
mov
test
lea
daa
dec
xchg
gs
std
pop
xor
xor
cltd
es
xor
dec
scas
pop
fistpl
push
add
icebp
inc
xor
push
bound
dec
xchg
xchg
inc
sub
jecxz
xor
sahf
loopne
pop
sub
out
enter
inc
pop
push
xor
xor
js
stos
iret
mov
mov
xchg
arpl
mov
out
add
imul
add
aas
cmpsb
mov
adc
rorb
mov
rcrb
adc
push
jo
xor
pop
ja
cld
lods
insl
mov
popa
dec
sbb
or
sti
lods
pop
cmp
das
or
popa
jg
pop
leave
mov
aas
aas
ds
ljmp
lds
rclb
scas
outsb
cmpb
cmp
add
test
adc
repnz
or
jecxz
adc
aas
ret
xchg
mov
pop
adc
add
rol
jl
mov
inc
ja
pop
mov
mov
les
jbe
addr16
iret
sub
lret
movsb
mov
mov
ficoml
mov
pop
gs
shlb
jne
mov
mov
xchg
adc
mov
icebp
or
push
mov
or
sub
push
jbe
movsl
flds
jl
inc
pop
xor
sbb
and
inc
mov
repz
mov
fmuls
xchg
mov
dec
sub
sub
cli
and
out
leave
push
ja
and
push
popa
leave
and
popa
dec
mov
inc
in
cmpsb
xor
lea
jnp
push
lods
hlt
xor
or
xor
cmpsb
rclb
add
inc
jns
push
fwait
adc
and
decl
push
ret
xchg
shr
imul
cmpsb
cmpsb
mov
mov
push
or
in
xchg
and
push
sub
aam
sbb
mov
data16
inc
inc
pop
bnd
jp
subl
xor
mov
add
pop
push
mov
ret
outsl
add
in
cwtl
push
iret
sub
call
imulb
fldt
push
lahf
mov
jecxz
mov
mov
imulb
cs
cltd
cli
jmp
inc
in
adc
push
xor
cmp
xchg
insb
xor
lock
arpl
outsl
xor
aas
lcall
clc
out
jp
pop
jno
add
fwait
das
sub
aaa
xchg
fcomps
sti
lods
sub
int3
mov
mov
jle
jmp
mov
pop
and
sbb
call
pop
pop
cld
outsl
and
clc
and
loopne
adc
adc
push
jecxz
insb
loop
jmp
lahf
sub
pop
inc
shlb
push
sbb
xor
inc
movsl
clc
movsl
sti
data16
ret
test
mov
push
mov
dec
iret
sub
jge
sub
les
int
fs
adcb
out
jg
or
stos
rcrl
imul
dec
ja
add
adc
push
xchg
loope
dec
xchg
shl
sbb
mov
out
jb
sbb
jecxz
scas
xchg
loope
xchg
sub
and
pop
bound
fldcw
pop
cmp
rol
lock
js
mov
mov
xchg
imul
push
adc
mov
cmp
cmp
push
and
mov
outsl
cmpb
sbb
mov
push
out
pop
lea
or
sti
sbb
and
loope
aas
adc
mov
jae
scas
mov
ret
cmp
add
inc
and
or
jecxz
jmp
ljmp
xor
or
lea
mov
ds
lret
adc
loop
xor
jae
loop
jnp
lret
cmp
jns
adc
test
rcll
lock
lock
mov
int
mov
repnz
mov
les
jecxz
cltd
push
inc
xchg
mov
and
out
push
jecxz
and
and
test
xor
inc
loopne
mov
repnz
clc
mov
inc
jae
inc
mov
mov
jl
rol
addr16
repz
cwtl
sub
push
sbb
fistps
test
scas
push
inc
ret
push
push
mov
cmp
stos
inc
xchg
insb
cmp
into
adc
inc
stc
out
popf
mov
or
cwtl
dec
cmp
bound
sub
out
in
pop
sbb
lds
push
cltd
sub
int
add
aad
and
into
mov
mov
mov
push
in
add
mov
add
scas
sub
xlat
and
icebp
xchg
sarb
enter
arpl
mov
sahf
fs
adc
jge
aaa
mov
sub
mov
push
xchg
jo
mov
and
mov
adc
sub
dec
lea
in
stos
and
enter
ret
mull
cld
pop
testl
mov
outsb
lods
shrb
add
rcll
lcall
test
in
cmp
loop
push
jns
cmp
adc
inc
sbb
mull
pop
ret
inc
pop
ss
push
in
jge
out
shrb
or
into
xchg
inc
pushf
aas
inc
aaa
nop
push
add
test
test
lcall
push
fnstenv
ljmp
insl
aaa
dec
lods
fcmovnu
jl
ja
and
pop
bound
jmp
mov
mov
mov
dec
insl
add
mov
xchg
sbb
lret
ljmp
inc
hlt
add
mov
les
sbb
mov
fisubrl
sbb
jb
add
ljmp
dec
pop
sbb
inc
jae
xchg
cmp
xor
adc
loope
mov
pop
push
loopne
scas
push
add
loope
leave
sub
pop
movsl
in
iret
shr
mov
lahf
push
movsb
fstl
mov
rcrb
test
aad
adc
jmp
pop
xchg
mov
push
jae
je
popf
mov
mov
cld
arpl
add
pop
mov
push
pusha
cltd
mov
roll
shl
or
and
pop
adc
xchg
jns
pop
pushf
or
add
push
fwait
xchg
jbe
scas
das
mov
jo
jmp
sti
pop
dec
cmpb
aam
pop
push
xchg
in
xor
es
fstpt
add
pushf
xor
lock
shlb
sub
outsb
push
mov
xchg
mov
push
adc
and
mov
into
xchg
xchg
test
in
shll
movsb
rcr
push
sbb
jecxz
ja
sbb
lcall
dec
ds
inc
sbb
cld
aas
sub
jmp
xchg
or
out
add
xor
cmp
xchg
sub
mov
in
std
jb
jle
jp
xchg
sbb
mov
jle
lods
lods
sbb
lret
cmc
cmpsb
inc
jecxz
popa
fdiv
mov
mov
push
jnp
arpl
cli
xchg
fimull
fldenv
adc
ja
xor
add
inc
jbe
cld
pop
push
mov
dec
rcrl
cld
stos
mov
sub
in
lods
rol
xor
mov
mov
fmul
jmp
lds
jg
lock
test
mov
add
mov
push
push
int
adc
ja
sub
ss
es
jmp
xor
pop
nop
xor
insb
xchg
std
dec
mov
movl
sub
dec
imul
sub
sahf
lahf
jo
mov
faddl
into
mov
ds
rcrl
out
mov
mov
push
loope
xlat
adc
push
shlb
inc
fucomp
ret
jmp
daa
lret
push
stos
hlt
arpl
mov
int
xchg
cmpsb
xchg
in
add
jo
adc
cmp
out
negb
and
dec
pusha
and
pop
lcall
lock
mov
and
jp
leave
imull
movsb
dec
sub
add
inc
jl
cmc
dec
and
cs
insb
cli
sbb
mov
fnstsw
and
aaa
in
push
sahf
rol
lds
push
pop
xor
ret
cmpsb
cltd
xchg
lods
add
sbb
jo
mov
mov
mov
rclb
sbb
cs
dec
mov
lahf
mov
sub
dec
pop
imul
lods
jae
push
mov
sub
pop
pop
loop
mov
aaa
xchg
fwait
out
add
popa
insl
sub
int
mov
dec
pop
push
mov
subl
pop
mov
in
ds
dec
lret
pusha
adc
aad
jns
sti
add
sti
adc
mov
jecxz
jp
je
test
lcall
cmpl
shll
je
cld
mov
jns
jmp
pop
mov
pushf
call
les
movsb
and
mov
lods
roll
mov
push
push
push
int3
jo
pop
movsb
mov
mov
jbe
or
aam
push
xor
push
ja
jns
pop
mov
fisubl
out
dec
pop
mov
notl
xchg
mov
pop
push
mov
mov
inc
mov
into
xchg
mov
lock
cmpsl
repnz
stc
les
out
ficoml
adc
adc
lret
xchg
push
adc
imul
call
and
or
das
xor
pop
pushf
xchg
loopne
sbb
xchg
aam
xor
mov
ljmp
cltd
aaa
iret
push
cmp
notb
jo
test
xchg
mov
pop
cwtl
jl
sbb
mov
xlat
dec
imul
cld
xchg
sbb
push
add
iret
mov
cmpsl
sbb
out
inc
mul
sbb
xor
test
insb
lds
add
sti
scas
sbb
out
pop
mov
popa
adc
arpl
lods
mov
call
incl
sbb
inc
call
inc
loopne
pop
movsl
mov
adcl
xor
lock
jne
cmc
or
xchg
jno
push
inc
xorl
pop
jae
loope
dec
push
ds
hlt
scas
sub
lcall
imul
xchg
mov
xchg
mov
and
or
lcall
mov
xchg
and
cmpsb
lock
outsl
stos
cmpsl
fnsave
cmp
popa
outsl
xlat
lcall
push
inc
adc
ss
sbbl
sbb
movsb
and
sarl
subb
or
sbb
pop
inc
orb
mov
push
adcb
out
sub
adc
rorb
movsl
scas
and
pop
and
fidivl
sti
dec
ss
mov
inc
rol
jecxz
sbb
jg
adc
daa
dec
cltd
mov
nop
ror
ret
jb
in
loope
mov
loop
adc
push
dec
xchg
hlt
jns
mov
mov
lahf
add
jp
mov
push
sub
pop
ret
test
fimull
cltd
cli
add
and
mov
jnp
push
enter
cltd
pop
fildl
jecxz
jge
out
gs
call
mov
jle
jbe
mov
push
pop
dec
into
popa
mov
sub
push
dec
rcr
or
mov
out
mov
jle
push
aas
ljmp
mov
imul
mov
stos
sbb
fiaddl
xor
cmp
push
testl
popf
or
inc
sub
pop
sub
mov
ret
xlat
and
mov
jl
rcrb
iret
mov
xchg
daa
cmp
insl
and
in
push
js
lcall
stos
inc
out
and
xchg
stos
inc
mov
loopne
pusha
cmc
lcall
fcompl
scas
mov
adc
in
rorl
sahf
jle
push
mov
aaa
les
sti
fs
rclb
or
add
or
test
andl
push
sub
cmp
ds
lret
call
es
insl
cmpsb
push
jg
fcomp
dec
xchg
cmpb
xchg
ret
fnstsw
mov
mov
lea
mov
jle
sbb
inc
int3
aas
dec
out
ja
inc
mov
xchg
scas
pop
sbb
add
lods
mov
lods
push
dec
pop
add
cmp
loope
std
dec
mov
jle
adc
xchg
test
aad
insb
push
lods
lret
xchg
xor
push
pop
sbb
push
pop
aas
test
mov
popl
jnp
xchg
jg
or
push
test
cmc
int3
mov
pop
je
std
fstps
sti
pop
push
sub
xchg
aam
jnp
js
pop
nop
sub
fdivrl
rclb
testb
cmpsl
dec
stos
mov
dec
mov
fs
mov
test
sub
jae
insl
inc
out
xor
sbb
push
inc
and
test
sbb
sub
int
inc
mov
push
sub
pop
fwait
inc
int3
mov
jnp
xor
cmp
fsubl
mov
pop
mov
cmp
add
daa
mov
stc
rorb
jle
cltd
loopne
lahf
cmp
stos
out
dec
pop
push
jl
arpl
pop
xor
pushl
jge
imul
push
xchg
pop
add
scas
push
add
imul
jp
enter
stos
xchg
adc
adc
inc
lock
mov
insl
pop
jg
cmp
pop
and
inc
test
jno
push
leave
mov
or
lcall
sti
shrl
push
xor
xchg
pusha
fstps
jmp
sub
decl
mov
sub
outsb
lods
adc
rcrl
jge
jb
mov
mov
push
push
lock
or
xchg
add
outsl
inc
loopne
mov
or
jg
xchg
std
push
mov
cmp
sub
dec
sub
fdivrl
and
bound
add
or
cmp
push
xor
andl
lea
lret
add
cmp
or
mov
fldenv
enter
sub
data16
adc
es
pop
lds
into
test
jnp
das
sar
sete
mov
add
or
inc
fidivl
loopne
and
sbb
add
and
stos
pop
pop
cmp
sbb
cmpl
lds
das
pop
mov
mov
push
adc
inc
sbb
push
pop
and
movb
out
cmp
cltd
sbb
and
out
into
push
jg
int3
cmpb
jge
lods
in
mov
pop
push
dec
jbe
xchg
push
out
sahf
orl
mov
jb
adc
and
test
cld
popw
cmp
pop
mov
popa
pop
dec
pop
std
outsl
addr16
or
inc
aam
nop
pop
shl
mov
or
addr16
inc
jns
xor
lcall
ret
pop
aam
pop
int
cmp
lods
int3
xchg
addl
jg
mov
das
in
addb
mov
and
xchg
mov
pop
pop
stc
iret
aas
jne
pop
outsl
push
mov
sub
fcmovnbe
dec
and
jp
push
js
leave
mov
or
sar
push
es
xchg
pop
mov
getsec
lea
fnsave
cmp
xor
jp
pop
repz
sbb
sti
xchg
imul
sbb
push
push
mov
fidivrs
stos
cmp
pop
loope
sub
das
sub
mov
jbe
or
push
jg
mov
inc
outsb
jecxz
cmpsl
shl
ds
out
add
xlat
shll
popa
push
jecxz
add
jns
lods
mov
push
cmc
pop
unpckhps
fcomi
pushf
mov
cld
cmpsl
pop
pop
jae
adc
push
dec
xchg
mov
stos
xor
push
dec
popa
push
lcall
lcall
fcoms
mov
clc
mov
xchg
xor
dec
ljmp
adc
dec
ja
ja
xor
dec
insb
test
scas
mov
dec
cmc
push
inc
jmp
les
arpl
mov
cmp
jmp
mov
push
xor
adc
mov
popa
clc
lds
xchg
fmuls
rol
mov
shlb
mov
in
xor
stos
sub
sub
fwait
add
aaa
ljmp
and
xchg
jns
arpl
cmp
dec
mov
imul
and
inc
cld
popl
mov
ja
sbb
fimull
adc
cmpsl
mov
aam
loop
inc
sbb
push
pop
out
sbb
or
xlat
jle
xor
xchg
and
repnz
push
popa
and
loopne
mov
xor
jmp
imul
xchg
or
add
inc
aam
jbe
loop
in
loopne
push
add
subl
mov
cltd
xchg
enter
iret
js
gs
arpl
rcrb
lahf
int3
jecxz
in
pop
push
dec
enter
xchg
mov
xchg
lret
or
ret
push
mov
pop
dec
or
test
mov
jecxz
add
loopne
mov
jge
rcr
insb
push
xchg
mov
jne
nop
in
mov
ret
mov
cmp
arpl
aam
insl
or
call
ficoms
lods
mov
or
sub
shr
mov
inc
sbb
cmp
mov
cmp
push
pop
mov
mov
rcl
mov
or
int
xchg
imul
sbb
pop
xor
lods
mov
push
psubq
cli
sbb
adc
test
aad
ljmp
sahf
dec
jg
add
nop
iret
cmpb
inc
pop
adc
leave
shl
mov
popa
ret
iret
loope
lahf
pushf
test
add
les
push
gs
lea
mov
pop
dec
or
and
sub
sbb
btr
mov
pop
stc
mov
push
in
mov
push
test
mov
bound
xchg
sbb
jo
loop
sahf
test
adc
mov
mov
fisubrs
pop
or
dec
addl
pop
rcr
sbb
addr16
adc
push
lods
dec
mov
xor
dec
lods
inc
mov
rorl
push
jb
fdivrs
pop
pop
aam
jns
sbb
jae
sub
rcrb
or
or
adc
and
xchg
repnz
xchg
push
pop
es
mov
enter
xchg
call
xor
loopne
mov
mov
or
mov
repz
inc
mov
mov
sbb
sbb
mov
loopne
movsl
adc
inc
bound
sub
cmp
cmc
inc
push
and
and
push
sub
nop
push
fwait
adc
and
xor
out
add
xchg
adc
push
imul
push
int3
in
cld
lods
xchg
test
sti
xchg
sub
adc
js
dec
push
mov
dec
and
movsb
xchg
fs
roll
sub
xchg
fs
adc
lcall
jecxz
in
test
clc
add
mov
mov
mov
sub
xchg
sub
xlat
iret
std
xorl
out
ficomps
scas
adcb
sbbl
add
lods
imul
mov
lret
inc
add
dec
in
sarb
pop
inc
les
pop
fcomi
adc
addr16
mov
and
mov
mov
pop
xor
fisubl
testb
divb
jmp
cmc
out
lods
sbb
fstpt
nop
cmpsl
orb
sbb
xlat
mov
or
outsl
imul
xor
dec
jmp
lock
adc
xlat
mov
imul
add
aam
rclb
mov
aas
pop
rcll
sub
inc
lods
std
xchg
and
or
lret
push
sbb
ficoml
outsl
mov
lea
adc
xchg
insb
push
mov
inc
inc
daa
call
dec
cmp
sbb
nop
in
sbb
fisttpl
cld
fdivr
addr16
inc
loope
adc
rcrl
sub
xchg
mov
or
int
test
inc
inc
sbb
pop
xor
xchg
repnz
mov
push
jno
faddl
xor
cwtl
cmp
pop
into
shll
fdivrs
cmp
mov
xchg
lods
inc
mov
sbb
sbb
dec
testb
sti
js
aad
xchg
add
lahf
loopne
cmp
int
jnp
aaa
cltd
popa
lret
sub
sbb
ljmp
lds
inc
scas
cld
arpl
dec
jbe
loopne
test
jge
loopne
adc
loopne
dec
adc
adc
test
add
push
hlt
xor
jge
push
bound
dec
insl
xchg
movsb
cmp
imul
daa
daa
jno
or
dec
push
in
sub
adc
fucomip
fwait
push
jb
aad
jae
dec
test
in
ljmp
ljmp
push
repz
dec
mov
pushl
popa
xchg
jb
jbe
push
out
sahf
out
out
mov
addr16
jge
jbe
xchg
int
add
adc
mov
fidivs
lcall
sbb
add
jb
std
xor
stos
jns
adc
outsl
int
inc
pop
add
out
ja
sub
ficomps
pop
mov
mov
aad
lods
outsl
push
aad
cmpl
adc
in
mov
bound
lcall
popf
sub
sbb
xchg
pop
sbb
cli
mov
and
rcrb
dec
test
jge
mov
and
add
pop
das
mov
test
cmpb
and
dec
and
push
das
sub
push
loop
fildl
pushf
adc
pusha
sub
xchg
lcall
jle
inc
mov
pop
dec
lea
or
mov
aam
cmp
dec
push
xor
push
daa
adc
or
or
jb
xchg
pop
jno
fists
stos
cmpsl
outsl
xchg
dec
add
pop
repz
push
out
xchg
cld
rcrl
imulb
mov
mov
pushf
cmp
pop
sbb
popf
mov
jne
cmp
mov
inc
pop
sbb
imul
lcall
mov
loope
or
sub
lds
xchg
and
fndisi(8087
int
shrb
ljmp
sarb
push
int
add
imul
and
jg
ss
sub
or
data16
sbb
sub
jbe
insl
sbb
mov
lea
jbe
shrl
je
in
inc
dec
clc
in
adc
dec
cmc
cmp
pop
stos
stc
add
push
inc
sbbl
sbb
cs
lret
sbb
in
cmp
xor
daa
adc
dec
ss
push
sub
jbe
jbe
aas
xor
pop
insl
sub
repnz
popa
stos
mov
pop
in
iret
pop
xor
xlat
or
std
pop
push
shrb
movsb
mov
in
icebp
mov
mov
dec
dec
fcompl
call
xchg
mov
and
lods
fstps
dec
sub
lods
sub
jns
adc
cli
mov
sti
mov
mov
mov
out
jb
or
or
and
mov
or
fisubl
es
stos
outsb
inc
dec
test
fsts
pusha
call
ficomps
xor
out
jle
jb
push
scas
sub
in
mov
and
in
push
or
pop
jp
mov
jns
mov
and
imul
ja
cmp
loop
xchg
lds
bound
mov
divb
mov
pop
data16
test
lds
xor
pushf
mov
outsl
add
pop
pop
testl
pop
cltd
je
in
mov
sbb
jno
je
inc
je
adc
and
jb
inc
in
out
add
repnz
sub
mov
lahf
dec
or
xor
and
popa
divb
jecxz
push
xchg
add
imul
imul
jge
jns
xchg
cltd
sbb
xchg
ret
ds
and
mov
xchg
clc
xchg
cmp
inc
mov
pop
pop
shll
ss
aam
xchg
pop
dec
xor
or
mov
out
aaa
movsl
and
rorb
or
out
inc
enter
push
sbb
push
mov
or
push
adc
cs
sbb
sbb
sbb
cwtl
enter
xor
push
lea
mov
lods
daa
cmpsb
aam
shl
xchg
jmp
inc
das
mov
repnz
dec
xchg
iret
sar
call
adc
in
imul
aam
scas
aad
enter
popl
add
pop
addr16
and
pop
pop
adc
pop
xor
lcall
roll
movsb
sahf
pop
add
cwtl
inc
loopne
ret
or
ds
jb
mov
sbb
test
enter
add
in
sub
push
push
dec
pusha
xchg
mov
mov
popf
lds
stos
nop
adc
cmpsb
fistps
mov
pop
sbb
movsl
into
push
fiaddl
orl
push
xchg
ja
verw
test
mov
fisubl
xchg
lret
test
stos
pop
outsl
repnz
mov
stos
pop
mov
rorl
shl
repz
insl
pop
orb
adc
push
jg
insl
arpl
idivb
fdiv
data16
out
movsl
jns
xchg
mov
fstl
dec
add
sub
aas
int
pop
xor
ror
sub
lret
or
jno
cmp
xor
stos
imul
lret
mov
inc
and
inc
mov
shlb
mov
dec
push
push
sub
jp
ret
pop
adc
scas
and
jae
enter
dec
test
fs
lods
aam
addl
fbstp
daa
push
in
jno
stos
push
int3
jle
addr16
sub
push
fsubr
sub
lret
xchg
jns
mov
add
adc
xor
lcall
fnstsw
pop
adc
add
pop
aam
int3
insl
or
ss
push
jge
xlat
pusha
jae
cld
push
adc
cmp
adc
sti
mov
push
ret
aas
mov
cli
pop
mov
push
sbb
add
andl
mov
adc
mov
enter
push
push
mov
adc
inc
cld
dec
fstpl
call
movsb
xchg
addb
fiadds
mov
fdiv
sbb
les
imul
inc
addr16
adc
inc
fbld
and
cwtl
popl
into
mov
lret
int3
fwait
fwait
push
cli
xor
lahf
pop
repnz
repnz
clc
push
xor
add
xlat
xchg
jo
outsl
add
jnp
mov
push
xchg
push
inc
cli
fbstp
pop
jmp
and
mull
aad
push
jge
rolb
xor
outsl
pop
push
enter
xchg
into
dec
in
jg
rorb
mov
idivb
stos
out
mov
push
mov
fwait
mov
mov
ljmp
cmp
stos
das
daa
sahf
gs
inc
mov
sub
sbb
clc
mov
lret
mov
add
and
cs
mov
aad
in
aad
shll
pop
scas
loopne
cltd
jg
lahf
lods
in
lds
mov
mov
sti
stos
pop
xchg
xor
sbb
adc
rcll
pop
jl
cmpsl
mov
add
add
pop
and
xchg
add
sahf
mov
mov
int
les
sub
je
or
push
add
inc
cwtl
dec
push
sub
nop
jno
jo
add
incl
fucomp
xor
ds
xchg
loopne
outsb
inc
mov
jge
adc
clc
inc
insb
mov
in
orl
rolb
clc
xor
or
adc
or
jb
dec
mov
cld
lahf
mov
in
ss
idiv
mov
test
pop
lock
ljmp
dec
jnp
lods
jge
loope
mov
scas
inc
xor
insb
sub
rol
stos
cmpsb
or
add
in
fsubl
negl
mov
cmp
imul
xor
xor
mov
add
ja
push
and
mov
fidivrl
dec
movsl
cmp
jp
cltd
mov
jae
movsb
ret
es
cmp
notb
out
inc
jnp
clc
pusha
cltd
add
cmp
mov
int3
in
mov
mov
lods
movsl
mov
fstp
push
js
xchg
sbb
xor
sahf
dec
lea
lock
in
call
mov
scas
sub
sbb
xchg
call
and
mov
ja
sbb
xchg
dec
pop
pop
dec
mov
mov
pop
fnstsw
push
leave
xor
cmc
subb
hlt
jle
dec
movswl
pop
ds
mov
and
lret
sahf
pop
mov
lret
popa
mov
pop
cld
cmp
sahf
mov
clc
in
cmp
push
lods
mov
sbb
xlat
fnstenv
sub
jg
adc
cmp
mov
out
pop
pop
mov
mov
mov
xor
xchg
adc
je
pop
or
aam
stos
insb
and
dec
pop
stos
sbb
xor
scas
enter
insl
pop
fmuls
and
jp
out
inc
pop
icebp
lret
add
pop
test
xor
xchg
and
pop
or
dec
das
pop
imul
cmp
shrl
lcall
jg
sub
xchg
outsl
scas
sarl
cwtl
cmp
push
data16
jmp
mov
mov
mov
clc
aad
jne
inc
xchg
jl
shrl
sbb
subl
sub
bound
mov
pop
dec
dec
sbb
popa
inc
pop
mov
pop
mov
out
xchg
dec
les
daa
xchg
lods
pushf
or
dec
fs
push
adc
loope
add
pop
test
xor
in
adc
add
dec
std
jno
into
outsb
jecxz
or
or
push
das
outsb
adc
mov
mov
rorb
jno
leave
inc
inc
lcall
pop
cmp
mov
pusha
sbb
bound
scas
xchg
movsl
xchg
mov
jg
popf
xchg
popf
jecxz
sub
es
xor
mov
mov
mov
in
outsl
jo
sub
mov
addr16
in
mov
add
ds
mov
jle
imul
xor
sbb
xor
or
sbbl
mull
jne
pushf
fimull
ret
xchg
stos
lcall
lods
int
mov
int
push
fmul
cmp
lret
dec
pop
jnp
jbe
imul
and
mov
mov
lock
adc
call
movsb
aam
bound
adc
adc
fsubl
cmp
cmpsl
cwtl
addr16
inc
or
rclb
jp
out
jmp
add
xchg
nop
inc
cmpsl
cmp
in
mov
xor
sub
push
lods
adc
negb
mov
stos
pop
and
ss
push
push
push
jne
adc
add
jae
xor
and
dec
sub
cwtl
cld
cmp
daa
loop
in
push
sarb
or
scas
lods
fsubs
pop
or
int
ficomps
repz
add
jle
loope
xor
push
jae
ja
xor
lahf
pop
loop
outsl
in
lret
push
pushf
test
mov
mov
or
push
hlt
mov
add
out
xchg
sbb
xchg
in
sbb
or
fimull
xor
sbb
cmpsl
dec
push
jecxz
icebp
hlt
test
test
xchg
dec
lret
sahf
push
cmpl
arpl
sarl
mov
xchg
mov
and
repnz
clc
fsubrs
jl
pop
pop
stos
fiadds
cmp
repnz
es
out
ficomps
movsl
push
js
in
test
adc
jno
mulb
add
mov
leave
fnsetpm(287
popa
xor
ret
cli
mov
movsl
test
pmuludq
cwtl
or
js
cmc
sbb
lcall
cmp
xchg
push
stos
xor
and
and
jne
jbe,pn
inc
jge
ds
xorb
jp
inc
lret
test
repnz
mov
cwtl
sahf
les
mov
add
in
or
outsl
test
mov
inc
sub
arpl
das
frstor
and
mov
and
call
cmovg
lds
xchg
xchg
sbb
sti
dec
and
sbb
rcrb
adc
scas
test
enter
ja
sbb
bound
ljmp
and
es
mov
cmp
into
sub
mov
lcall
add
mov
test
or
mov
jbe
mov
imul
jb
jne
loopne
sub
xor
sbb
xlat
push
mov
pop
mov
mov
iret
loopne
pop
je
pop
inc
ljmp
aas
inc
inc
fstl
stos
ljmp
xor
repz
pop
and
push
inc
das
loopne
add
inc
movsl
jb
cwtl
add
arpl
lcall
push
cwtl
push
xor
jge
sub
cmp
cli
push
fwait
jno
pop
fisubs
fs
jb
inc
iret
sbb
mov
jbe
jae
lods
xlat
pop
lock
lds
or
cmp
add
sbb
ja
mov
jno
out
leave
jnp
push
push
lcall
test
cmpsl
xchg
inc
movsb
mov
mov
arpl
add
cwtl
pop
out
fmuls
jg
add
nop
jo
std
pop
adc
xor
flds
xchg
scas
dec
sub
push
xchg
test
ja
sub
fnstenv
mov
jbe
data16
lret
cmp
ficomps
sub
jmp
sahf
rcrl
test
mov
sarb
adc
xor
or
aas
mov
scas
fdivrl
cs
cmp
sub
ja
add
cmovle
and
pop
aaa
mov
cmp
imul
setp
in
daa
jbe
sbb
stc
or
xchg
add
push
add
iret
add
xchg
call
add
dec
or
cmc
ret
inc
xor
cli
fisubrl
xorb
dec
jp
jl
orl
adc
inc
shll
sbb
test
and
push
adc
mov
aam
and
cmp
fldcw
pop
stc
data16
jne
xor
in
or
dec
cmp
shrb
push
xor
pop
loope
mov
out
jno
inc
push
mov
icebp
adc
int
cmc
out
aas
insl
lds
xor
cmc
cmp
pushf
es
pop
aaa
iret
icebp
and
addr16
inc
jecxz
sub
data16
repz
fadds
mov
jb
dec
mov
dec
xchg
sbbl
aam
ljmp
jne
cmp
gs
rclb
jecxz
sub
mov
and
cld
ds
jmp
scas
fistpll
mov
iret
mov
outsb
mov
mov
dec
iret
mov
fmull
mov
popa
jbe
xchg
xchg
dec
lcall
mov
xchg
push
fcomi
and
mov
push
inc
or
ja
mov
xor
ret
mov
pop
push
mov
cmp
xor
mov
int
and
fbstp
inc
fildl
jns
bound
int
sub
push
mov
sti
push
add
insb
in
push
inc
sbbb
lahf
jnp
pusha
push
push
or
pop
loope
rol
inc
fimull
loopne
test
xlat
adc
les
xchg
mov
inc
mov
hlt
jb
sahf
or
mov
mov
addr16
test
jmp
iret
loope
pop
jb
sbb
push
xlat
xchg
and
andl
jle
shrb
fisttpl
subb
movsl
mov
lret
or
xchg
mov
and
dec
int3
mov
jle
mov
mov
xchg
mov
pop
or
cmp
stc
inc
cmc
pop
f2xm1
enter
ss
mov
pop
sub
out
insl
xchg
out
push
gs
mov
shrl
or
insb
ficoms
mov
in
lock
sbb
inc
mov
mov
xor
jmp
add
test
mov
aad
xor
jo
mov
add
cmp
inc
inc
mov
les
inc
add
in
dec
xor
mov
clc
daa
test
rcll
pop
pusha
cltd
xor
jnp
xchg
xor
pop
cltd
dec
insb
inc
and
imul
jl
or
repnz
jmp
sub
adc
adc
lods
idivl
lods
popa
dec
ror
push
inc
inc
sbb
imul
push
std
mov
xchg
dec
int3
fcmovnu
dec
imul
push
iret
and
sarl
push
mov
insl
cmp
add
lods
fsubr
pusha
pop
lods
arpl
push
push
sti
sbb
out
jne
in
cmp
lahf
push
push
mov
aam
aam
jo
lods
or
cmp
mov
push
loopne
les
mov
rep
fyl2xp1
out
jb
ret
aaa
enter
cmpsb
out
and
mov
inc
pop
fnstcw
add
call
and
push
mov
popf
xor
push
cmp
lea
mov
jle
test
mov
or
mov
outsb
and
rcrl
jns
arpl
test
xchg
seta
xor
pop
inc
pop
mov
jge
fldl
jne
cmp
xchg
xchg
fisubrs
insl
jp
out
js
xor
imul
fwait
dec
scas
and
sub
add
dec
repz
test
scas
pop
mov
inc
jnp
dec
mov
adc
lea
cmpsl
das
jmp
lret
mov
adc
je,pt
lret
fldl
dec
int3
imul
dec
or
je
add
aaa
inc
loopne
loopne
adc
loopne
push
push
insl
and
ljmp
rorb
add
and
jae
push
iret
pusha
sahf
jl
pushf
mov
lcall
iret
out
cmp
loope
sub
cmp
mov
cmp
mov
subb
ds
push
test
out
stos
leave
mov
mov
ret
push
sub
sub
adcb
jno
and
or
icebp
dec
inc
xlat
dec
lds
sarb
stc
cmp
addr16
push
cltd
mov
adc
pop
push
loopne
sbb
xor
mov
fwait
mov
loope
je
dec
adc
sub
xor
les
sbbl
and
push
mov
and
inc
xchg
shll
mov
jmp
add
adcb
jb
mov
push
mov
cmp
add
sarb
inc
push
fisttps
stc
stc
pop
movsl
dec
hlt
add
insb
push
ja
sub
pop
bound
data16
jno
dec
cmp
mov
ja
out
jno
mov
pop
repnz
push
add
jns
clc
rorl
mov
mov
mov
iret
xor
aad
shrb
es
push
lea
push
nop
fistl
roll
bound
lock
mov
dec
stos
bound
mov
ss
lock
xor
in
inc
adc
xchg
mov
mov
incb
xchg
ds
lods
fadd
jge
lock
fistps
out
mov
stos
push
mov
clc
mov
test
hlt
daa
sub
in
push
xlat
ss
cmp
repz
xchg
pop
add
or
or
add
sbb
mov
mulb
stc
ljmp
jbe
mov
aaa
stos
lods
dec
xor
test
hlt
sub
lods
cmp
mov
fsubs
int3
push
add
or
lahf
adc
mov
lods
jns
mov
and
jg
dec
call
cmp
pop
arpl
cmp
into
adc
mov
jno
arpl
shlb
inc
ret
lods
sbb
mov
add
outsl
fcompl
addl
outsl
cltd
test
fcomps
cmp
sbb
stos
push
cmp
push
scas
movsb
jne
mov
push
out
movsl
je
inc
dec
cmpsb
lcall
mov
add
jecxz
adc
sub
test
sarl
xor
lods
aas
push
loopne
jo
or
rcrb
cwtl
mov
mov
lahf
push
sub
repz
iret
int3
sub
sub
addr16
jb,pn
call
cwtl
test
push
add
ret
out
int
leave
ljmp
and
inc
aad
fstps
cmp
mov
inc
xchg
mov
ljmp
fistpll
scas
iret
lods
stos
test
dec
cmc
dec
xchg
xor
pop
out
push
stc
test
and
lds
and
fisubrs
fdivrl
push
leave
scas
inc
or
inc
mov
xchg
cmc
xchg
stos
ret
addr16
or
cwtl
jno
and
out
push
xor
in
ja
sub
pop
and
sbb
add
mov
ret
fildll
pop
mov
dec
sbb
adc
sub
mov
jns
jnp
aad
pop
inc
arpl
jl
pop
and
mov
jmp
push
inc
pop
pushf
fildl
pushf
mov
fnstcw
inc
addb
adc
xchg
sbb
scas
enter
addr16
cltd
mov
dec
push
inc
push
xchg
in
lods
mov
ss
mov
mov
xchg
jmp
divb
stos
popf
iret
fsubrs
mov
dec
lock
adc
mov
idivl
pop
xchg
ret
pop
mul
push
dec
pop
lea
dec
push
sarb
cwtl
test
cmp
rorb
dec
cmp
sub
ret
je
cmpsl
and
push
scas
aam
das
int3
repnz
mov
inc
mov
jp
es
not
sbb
jp
stos
out
iret
sahf
lret
sbb
lahf
ds
xchg
sti
les
in
fdiv
pop
inc
adc
rcrb
pusha
pop
vpminub
adc
in
mov
push
test
xlat
test
and
fwait
xor
jnp
sahf
dec
sub
lds
popf
cmp
dec
sbb
dec
or
or
cld
xchg
leave
pop
xor
pop
pop
imul
test
movsb
jnp
mov
loope
testb
jb
jle
sbb
mov
sub
gs
jno
jae
seta
movsb
sub
mov
in
xchg
es
adc
andb
xchg
dec
popf
pop
mov
imul
imul
pop
repnz
mov
mov
cmp
shrb
cld
dec
inc
fstpl
adc
inc
add
push
jg
cs
popf
into
xchg
mov
insl
mov
nop
shlb
rcll
rcrl
daa
cmp
aad
cmp
xor
fdiv
iret
in
and
xchg
push
xor
adc
nop
and
ja
test
insl
jns
lret
cmpsb
mov
test
sub
and
adc
insl
out
enter
rolb
test
push
testb
shlb
dec
or
inc
icebp
mov
xchg
fs
loopne
int
dec
cs
mov
cmp
mov
mov
cwtl
rorb
adc
jns
push
jge
jnp
xchg
xchg
push
mov
in
lds
xchg
out
pop
cmp
mov
idivl
in
paddb
leave
das
pop
mov
mov
popf
stc
and
test
mov
or
add
or
rorl
and
inc
mov
push
push
jge
sbb
pop
jecxz
scas
push
ljmp
cmp
bound
std
jns
in
or
cld
lods
hlt
lea
jge
aad
pop
push
mov
addr16
dec
loopne
bound
lret
jecxz
cmp
jns
sub
sub
mov
mov
jne
xchg
repz
subb
stc
outsb
dec
shr
sbbb
add
pop
adc
xchg
popf
pusha
add
hlt
stos
fwait
sbb
dec
jle
jno
lods
xchg
sbb
out
gs
mov
sahf
xchg
insb
jb
pop
jne
sbb
jl
xchg
add
jne
gs
testb
and
mov
fdivl
subl
jp
pop
adc
push
ja
mov
push
out
test
cs
xchg
sub
loop
cmp
push
int3
mov
dec
jl
mov
bound
lret
dec
lret
xor
jne
out
lods
jg
lock
repz
jle
aaa
sbb
call
daa
loopne
jns
or
arpl
mov
xlat
mov
outsb
cmpsl
hlt
lret
cld
icebp
in
scas
insb
push
cmp
xchg
out
lock
lret
sub
mov
mov
ljmp
inc
data16
test
das
push
call
xor
out
sbb
or
or
and
inc
icebp
rorl
push
jg
add
std
push
sbb
jmp
hlt
bound
cld
mov
ja
mov
ret
pop
cld
mov
mov
inc
push
rcl
sub
push
test
rolb
push
sbb
xor
ds
cwtl
inc
fimuls
pop
sbb
repz
or
nop
int3
inc
enter
stc
or
push
out
lahf
rclb
sub
mov
das
mov
loope
jo
jp
bound
outsb
les
jp
aaa
mov
cli
sub
jb
jp
mov
inc
pop
mov
push
clc
pop
jnp
lret
sbb
jno
sub
test
add
mov
jne
and
scas
test
sub
shrl
push
and
pop
outsb
sbb
xchg
scas
ret
cli
subl
fnstsw
jp
fwait
adc
test
out
leave
xor
pop
sbb
pop
pop
dec
sbb
movsb
aaa
mov
test
fimuls
cli
dec
jmp
andb
shrl
nop
mov
xchg
add
jbe
or
or
and
es
cmp
iret
fcmovb
or
jae
xchg
lea
sbb
jns
into
sahf
bound
je
mov
dec
fldt
sub
aas
inc
xor
push
cltd
daa
inc
cmp
sbb
aam
shrl
cltd
inc
dec
in
xor
push
inc
loopne
ljmp
imul
pop
shl
icebp
fcmovbe
xchg
xchg
sub
lods
add
lods
mov
push
test
inc
xor
ljmp
addl
xchg
fsub
push
dec
shr
add
inc
subb
fs
movsl
dec
sahf
cmp
jg
lret
sub
mov
popf
pop
cmp
fldl
xor
xchg
filds
jbe
xor
clc
pop
adc
sarb
cmp
test
jnp
out
add
mov
loope
fistpl
mov
xchg
inc
xor
push
jmp
negl
push
xor
roll
jle
mov
mov
addb
lea
rcr
out
pop
icebp
dec
scas
fdivs
sub
mov
mov
cli
mov
sbb
fstp
add
jbe
vucomiss
dec
test
push
adc
or
xchg
xchg
fistpl
subb
inc
fsubrl
or
cmp
aas
jnp
sub
inc
add
push
in
or
mov
jns
jae
stc
icebp
xchg
adc
lods
and
popf
pop
adc
sarb
cmpsb
decb
jne
stos
mov
movsb
jnp
inc
jle
scas
call
sbb
bnd
rorl
push
add
mov
cmc
lods
inc
mov
dec
scas
enter
popa
adc
fcompl
xlat
sub
addr16
jb
movsl
fwait
cmp
or
cmpsb
rcl
mov
ret
or
test
data16
dec
or
sar
pop
jge
mov
dec
jo
mov
adc
xchg
push
push
inc
ret
pop
push
adc
sti
xor
ja
cmp
mov
ljmp
repz
mov
jg
push
adc
xchg
pop
aam
push
mov
cmpsl
rcr
mov
loop
jne
call
cmp
dec
adc
dec
pop
stos
negb
sahf
sbb
push
inc
inc
out
push
leave
cs
sbb
and
lret
imul
aad
fwait
mov
pop
mov
pop
fs
and
push
xchg
fsubr
inc
jnp
mov
mov
imul
dec
pusha
adcb
jle
inc
jb
jno
inc
pop
fldenv
insb
idiv
xchg
jo
adc
adc
mov
mov
testl
sub
test
add
jne
into
shl
xor
cs
sbb
push
jl
adc
inc
inc
aaa
fucomip
or
and
jb
rclb
adc
xchg
add
mov
rcrb
fdiv
and
leave
loopne
push
lods
and
out
mov
xchg
mov
cld
aas
jecxz
cmp
ja
inc
mov
fildll
sub
adcb
sub
insb
mov
push
mov
dec
push
inc
shlb
lods
push
int
or
shll
pop
mov
pusha
ficomps
lcall
jns
cmp
stc
cwtl
js
xchg
jns
in
cs
mov
inc
push
push
dec
xchg
fnstcw
xchg
xorb
test
pop
cmp
lret
icebp
repnz
pop
sub
pinsrw
pop
mov
adc
or
push
add
or
ljmp
in
xor
popa
xor
pushf
fistps
mov
push
adc
aam
cmp
push
test
xchg
mov
scas
pop
in
shl
imul
fwait
ror
std
dec
push
out
xor
inc
mov
mov
les
mov
cmpsb
cmp
clc
sub
pusha
xchg
test
dec
mov
adc
mov
pop
sbb
add
cwtl
jecxz
or
sarb
mov
fadds
mov
jno
jne
dec
jo
dec
inc
outsb
jg
mov
jno
pop
sub
sub
rcr
dec
imul
xchg
imul
cs
insb
mov
shll
js
rcrb
cwtl
jns
jp
insb
addb
pop
aam
or
pop
movsb
in
cmp
cmpsl
shlb
push
sub
imul
push
push
pop
sbb
lret
inc
loopne
out
adc
dec
jno
xor
and
cmp
int
push
jg
mov
mov
sub
ja
push
in
sbb
popf
adc
jno
or
loopne
ss
ljmp
sbb
sarb
lcall
dec
cmc
mov
cltd
adc
mov
ret
pop
sarb
mov
sub
xor
dec
mov
in
int
inc
lods
dec
cmpsl
add
ds
aas
test
cmp
sbb
scas
pop
enter
add
xor
mov
jb
pop
inc
push
jo
inc
mov
or
jnp
cmpsb
ret
insb
add
insb
lods
lods
out
sub
mov
fucom
jbe
dec
push
lcall
dec
mov
sub
adc
push
mov
mov
mov
jecxz
outsb
jg
daa
and
aam
loope
stc
sbb
sub
xchg
mov
aaa
xor
add
dec
inc
sbb
and
iret
adc
inc
int
insb
aas
xchg
outsb
fsubrs
and
fidivrl
push
push
iret
cld
pop
imul
cmp
sub
jg
iret
jmp
jns
fistpl
mov
xor
out
push
sbb
ret
hlt
pop
dec
ja
add
pushf
mov
arpl
stos
int3
and
aad
imul
mov
out
push
fidivrl
mov
out
daa
add
inc
stos
fisubrs
add
push
cmpsl
cld
jp
mov
push
mov
pusha
enter
sbb
shrl
sbb
arpl
js
pop
adc
lods
cmpsl
sub
negl
jg
and
js
or
mov
mov
rol
repz
jbe
or
scas
pop
sub
ficoml
xlat
adc
inc
push
mov
repz
cmpsl
outsl
ret
leave
imul
xchg
jno
xchg
add
xchg
loopne
sub
int3
inc
imul
popa
stos
xchg
cmpsb
jge
push
push
lock
sbb
cmpsb
mov
sti
pop
ret
repz
test
leave
jmp
shlb
mov
mov
nop
enter
jmp
cmc
mov
sti
repz
fbstp
das
dec
sti
add
cs
loop
mov
fnstcw
clc
pop
std
cmp
cmp
data16
jns
lahf
decb
pusha
sub
sahf
test
mov
pop
mov
sbb
xchg
mov
jno
data16
sub
pushl
addr16
movsb
add
arpl
jo
sub
out
lea
sbb
test
inc
mov
xchg
test
xor
inc
aaa
pop
lods
sub
insl
lahf
jb
sub
call
cmp
lods
adc
add
cwtl
sub
inc
jl
sub
dec
mov
cmp
and
clc
mov
cmp
cmp
add
stos
mov
mov
inc
dec
jge
int
into
addr16
xlat
or
and
mov
pop
stos
in
in
decb
movl
enter
dec
mov
sbb
adc
loope
idivl
and
jp
or
ds
movsl
or
roll
sub
insl
dec
movl
cmp
out
stc
gs
push
shrl
cmp
mov
loopne
leave
xchg
xchg
out
add
leave
pop
xor
imul
sbb
jmp
into
push
jl
xchg
mov
icebp
mov
pop
cltd
xchg
and
fsqrt
sub
imul
pop
mov
or
push
sti
xor
ss
inc
pop
inc
mov
in
push
xchg
ljmp
lcall
mov
rcll
pop
adc
and
pusha
jnp
jne
xchg
sub
xchg
mov
sbbb
inc
adc
in
test
gs
aas
or
jg
adc
jmp
dec
insb
popf
movsb
xor
leave
test
mov
jmp
insl
stc
jmp
loop
ljmp
mov
mov
test
fdivl
adc
cmp
movsl
out
cmp
scas
sub
cmp
inc
ljmp
or
mov
into
xor
adc
mov
outsl
push
xchg
inc
fnstenv
dec
mov
sar
scas
daa
jge
ret
xchg
stos
push
mov
ljmp
loop
jns
lods
sbb
xor
pop
adc
add
inc
sbb
mov
sub
sub
push
inc
add
pop
or
xor
pop
rep
lods
push
dec
xor
sbb
je
jae
or
adc
bound
or
test
jl
movsl
xor
inc
test
add
rcr
jge
cmp
xchg
add
test
sbb
lods
pop
jge
mov
sub
call
cmp
stc
dec
imul
in
imul
mov
xor
or
adc
loop
add
and
out
and
jge
pop
push
push
mov
mov
aad
shll
and
scas
xchg
lea
cli
mov
mov
int
lods
cmc
aad
in
add
cmpsb
xor
dec
fwait
jb
dec
fdivrs
mov
adc
adc
cli
divb
xchg
mov
inc
in
mov
cmp
xor
mov
insb
jecxz
add
jae
or
sti
push
jl
cli
outsl
mov
lds
rcrb
xchg
or
xchg
std
and
addl
cmpsl
mov
test
in
push
pop
es
mov
repz
std
jmp
cmp
and
out
jae
loop
stos
xchg
xchg
xlat
bnd
std
ljmp
or
notb
jge
rcll
sub
mov
repnz
push
ja
push
rclb
aad
mov
mov
adc
and
faddl
je
mov
sbb
pop
aam
lret
xlat
mov
inc
xchg
pop
cs
adc
push
and
dec
xchg
sti
jb
repnz
cs
mov
push
mov
in
pusha
jp
or
cmp
xchg
idivb
xchg
jbe
jns
mov
inc
add
push
dec
adc
enter
sbb
xchg
mov
add
dec
das
sbb
lahf
testl
jo
in
xchg
repnz
sbbl
dec
lods
push
jmp
loope
pop
cmp
or
popf
xor
scas
mov
ret
xchg
push
mov
jns
cwtl
push
sbb
shrl
sub
lret
das
movsl
arpl
addr16
in
xchg
jae
mov
sbb
arpl
cmpl
mov
mov
cltd
das
ret
push
inc
add
sbb
fisubl
push
or
mov
mov
pop
test
stc
inc
sbb
xor
cmc
dec
add
xchg
xor
push
inc
mov
xor
ret
ret
mov
jecxz
inc
sbb
pop
and
daa
cmp
rolb
addr16
mov
pop
pop
push
popa
sbb
in
inc
push
sbb
out
dec
mov
pop
sub
mov
push
and
dec
jb
jmp
stos
orb
lds
pop
push
push
insl
fcompl
mov
mull
cmp
icebp
dec
xchg
xor
out
cwtl
fmuls
in
test
fsubrs
scas
dec
sub
and
inc
loop
test
pop
sbb
cmp
je
cltd
out
aam
les
pop
jns
pop
cmp
mov
popf
fsubrl
sbb
cmpsl
dec
or
push
fwait
push
add
dec
in
dec
and
mov
push
jl
mov
fwait
aad
test
insl
fmuls
mov
mov
aad
dec
cwtl
push
xor
cmpsb
dec
scas
sub
push
or
mov
dec
imul
pop
ss
lret
dec
xor
shl
push
aad
loope
pushf
loop
mov
mov
push
or
dec
ss
jmp
fcompl
jg
lret
xor
ret
popa
cmp
xchg
jl
mov
out
in
dec
stos
data16
mov
xchg
xor
sbb
popf
jne
xor
mov
fs
ds
dec
xchg
cmp
mov
bound
push
add
cltd
daa
cmp
pop
xchg
add
call
mov
xchg
mov
aaa
xor
gs
or
hlt
xchg
out
ds
popa
and
add
dec
cmp
inc
sbb
mov
adc
xchg
inc
loopne
shll
push
xchg
sti
cmp
lret
inc
mov
test
lret
or
aaa
lds
mov
pop
cltd
sbb
jb
repz
out
lret
ja
add
dec
jae
lret
jl
adc
mov
sub
add
cmc
sbb
dec
xlat
pop
test
pop
cs
pushl
repz
lahf
ja
xor
adc
push
mov
adc
es
pop
push
mov
jg
out
jb
xchg
push
mov
inc
mov
add
xchg
loop
loop
stos
xchg
push
sbb
xchg
mov
or
jno
mov
cli
imul
push
stc
mov
xchg
mov
sub
nop
push
nop
fnstcw
ds
mov
ds
cmp
popa
sub
mov
xor
das
pop
jecxz
inc
mov
imul
sbb
xchg
mov
dec
loopne
inc
dec
adc
mov
jl
call
mov
int
adc
mov
inc
cmp
cmp
and
fcomip
test
xor
rcll
and
jge
mov
ds
jns
mov
icebp
loopne
mov
push
inc
arpl
inc
in
push
jg
mov
in
fcompl
mov
rol
jb,pt
aas
mov
inc
sbb
test
mov
pop
adc
push
jle
test
je
cmpsb
mov
outsl
xlat
lahf
dec
pusha
jns
mov
jl
fisttps
xor
aas
pop
fs
adc
mov
arpl
out
lahf
push
sbb
inc
outsb
xlat
mov
jmp
add
mov
push
repnz
stos
loop
ret
pop
subb
adc
mov
or
mov
sbb
fwait
or
in
and
or
add
sbb
jno
imulb
fwait
sub
adc
loope
adc
or
sub
lods
popa
fisttpl
je
add
in
ss
jae
jmp
xor
rclb
sub
clc
adc
jp
cmp
mov
sahf
out
mov
push
in
xor
push
pop
adc
mov
xchg
cmp
push
cmp
mov
cmp
inc
xchg
out
jmp
mov
and
js
mov
or
call
jg
inc
or
inc
mov
cmp
fdivr
cwtl
ja
inc
mov
ds
jmp
cli
iret
pop
push
adcl
sub
jecxz
lds
in
and
test
sbb
ret
pop
mov
mov
or
mov
and
sub
and
mov
adc
lods
sub
mov
enter
push
imul
les
mov
xchg
test
jnp
pop
cmpsl
jecxz
inc
ret
adc
cmp
xor
xchg
outsb
dec
out
in
or
mov
jecxz
xor
imul
lret
call
loop
and
xor
push
loopne
jno
mov
jge,pt
mov
call
mov
xchg
pop
inc
push
sbb
je
sahf
pop
adc
push
sarl
add
movsl
mov
add
int
scas
jg
adcb
jnp
cmpl
sub
mov
ljmp
mov
fstl
cmpsb
or
push
std
sub
cmc
cmpsl
lds
test
jl
out
pop
out
jne
adc
mov
dec
cmp
cwtl
adc
push
fs
rcrb
add
testb
subl
jbe
std
stos
cmp
je
inc
push
adc
data16
sbb
mov
scas
mov
xchg
test
mov
add
mov
cmp
popa
pop
pusha
rcll
jb
push
or
fstpt
jp
lock
aaa
jbe
mov
fwait
imul
mov
mov
mov
or
inc
push
adc
aam
adc
pop
repnz
ret
lods
cmp
das
mov
imul
out
lret
mov
push
mov
inc
fwait
shrl
mov
cmp
arpl
mov
rorb
dec
xor
inc
fmul
mov
orl
xor
sub
out
dec
icebp
sbb
scas
shll
mov
and
mov
jo
inc
pop
test
sub
pop
lret
mov
movsb
add
imul
jno
call
ljmp
xchg
jns
stos
pop
add
out
scas
mov
cld
push
xchg
mov
adc
repnz
xor
xchg
mov
sahf
cs
out
sti
push
jb
repnz
idiv
adc
dec
addr16
ja
repz
xchg
add
in
inc
pop
cmc
andl
lret
jnp
jle
xchg
lcall
cmpl
mov
addr16
sbbl
popa
jge
mov
lods
imul
dec
jo
xchg
loopne
mov
in
stos
cli
sbb
pop
insb
repz
add
repz
cld
inc
shlb
pop
rcll
movsb
push
aad
adc
jecxz
inc
xor
shll
lcall
inc
push
fmul
pop
rolb
or
call
mov
sar
and
divb
or
push
jle
dec
out
sti
jnp
mov
pusha
mov
rcll
inc
popf
or
je
lock
adc
or
ret
and
mov
mov
sahf
dec
dec
gs
dec
xchg
add
adc
cmp
dec
sbbb
dec
insl
movsb
add
pushf
pushl
adc
inc
lret
add
enter
repz
jp
int
idivb
hlt
shr
icebp
cmp
and
loope
mov
or
ret
push
push
push
out
xchg
mov
mov
add
sbb
cmc
ror
bnd
cmpsb
ficompl
xor
jge
adc
sub
aaa
sub
fwait
rclb
mov
dec
loope
push
push
pop
ja
in
inc
insb
cmp
std
push
sub
jmp
sbb
mov
mov
pop
das
test
sti
dec
mov
cmp
pop
imul
in
mov
scas
fwait
mov
or
mov
orb
inc
sbb
add
pop
idivl
test
xchg
mov
lods
sbb
xor
stc
dec
sbb
dec
lods
cmc
mov
fsubl
js
inc
fistpl
sbb
sub
sub
jecxz
hlt
xchg
mov
and
or
push
rolb
mov
pop
pop
lret
jmp
stc
aam
xchg
mov
cld
rcrb
std
xor
imul
testb
and
sub
movsb
pop
clc
mov
out
out
inc
test
push
jbe
xlat
fwait
add
lods
sbb
enter
and
sbb
jnp
sub
push
dec
xchg
out
addl
icebp
xchg
push
jl
test
push
lods
adc
cmp
cmp
fstpt
nop
dec
subl
das
sarl
xchg
faddl
js
jo
bound
cmc
sub
mov
bound
pushf
pop
mov
or
mov
sbb
inc
jg
aad
jno
fisttps
and
pop
add
jle
addb
mov
repnz
fwait
xchg
xor
arpl
pop
or
mov
scas
popl
xor
clc
sarb
pop
xor
imul
pop
and
mov
test
in
and
rol
mov
or
mov
sub
fildl
in
subb
xlat
imul
sbb
js
ss
jnp
out
mov
ljmp
cmp
iret
xor
rcll
xor
push
sbb
mov
rolb
mov
jecxz
xlat
fs
cmp
aam
mov
fstpt
outsl
stos
jmp
jecxz
mull
dec
jb
fs
cltd
stos
imull
int
lret
ret
sbb
mov
lret
in
outsb
cmc
je
lds
jg
and
jecxz
in
aam
sahf
cwtl
sarl
add
loope
hlt
push
pop
sub
rclb
pushf
cmpsl
insl
sahf
aas
inc
jne
mov
fbld
loopne
jl
mov
sub
mov
pop
jbe
cmp
ficoms
aaa
sbb
push
stos
shrb
adc
repz
loop
mov
xchg
sub
push
pop
sbb
rorl
xchg
ret
jb
jle
jg
lret
mov
inc
je
mov
mov
inc
mov
xchg
into
cmp
mov
sub
cmp
push
pop
fmul
pop
data16
ret
mov
xchg
inc
xchg
sub
std
mov
fisubrl
call
cmc
push
mov
xchg
ja
rol
pop
inc
push
adc
loope
and
jo
push
mov
dec
lcall
into
lret
subl
fcomps
pop
pop
push
hlt
pop
dec
aam
sahf
scas
inc
mov
adc
fisttpl
dec
loopne
popa
cwtl
add
sub
cmp
pop
imul
mov
mov
add
idivl
pop
mov
xor
cld
leave
jbe
cmp
in
mov
push
cmp
enter
movsl
sub
lahf
jns
insb
clc
sbb
sbb
sub
scas
sub
inc
mov
xchg
fwait
scas
aam
xlat
call
mov
aaa
adc
push
adc
data16
out
inc
xor
push
cwtl
stos
subb
xor
cltd
and
dec
das
pop
cmpsb
cld
stos
in
xor
pop
lret
xor
pushf
add
sub
mov
enter
dec
pop
or
sbb
cmp
mov
xor
push
outsl
loop
inc
clc
fiaddl
imul
xor
mov
ss
sub
addr16
ds
add
mov
enter
xchg
or
add
int3
jmp
aas
xchg
pop
andl
mov
bnd
xor
in
fucomp
shlb
pop
jbe
mov
dec
test
lret
inc
sub
xchg
mov
pop
add
adc
test
stos
mov
imul
negb
mov
pop
imul
sbbb
inc
addr16
mov
ljmp
lds
jnp
test
in
sub
dec
dec
mov
insl
fsubrs
aaa
pop
fnstenv
dec
mov
fidivrl
jg
inc
lds
push
idivl
xor
popa
jg
add
dec
shrb
testl
inc
inc
in
or
sub
mov
push
add
outsb
test
xlat
outsl
out
fstl
or
push
daa
xlat
pop
fldcw
daa
push
pop
sub
adc
mov
mov
xor
add
lods
nop
stos
fstl
adc
inc
adc
cmpsl
add
jnp
out
repz
push
cmp
push
and
mov
dec
sarb
fnsave
xchg
decl
inc
shrl
mov
push
test
lods
rorb
push
sahf
pop
mov
pushf
out
mov
inc
js
lods
or
arpl
jne
mov
imul
lahf
push
sbb
mov
pop
pushf
pop
dec
das
and
pop
ret
jge
xchg
dec
nop
lods
rorb
test
pop
inc
mov
cld
rorb
clc
movsb
cmp
or
dec
stos
das
shll
jecxz
mov
aas
ljmp
leave
hlt
jae
pop
push
vmulps
dec
pop
sbb
sti
icebp
in
kandnw
cs
xchg
push
movsb
pusha
xchg
or
inc
pop
adcb
insl
sub
into
push
imul
dec
sub
cmp
jmp
jbe
jg
inc
jo
adc
jg
fimuls
or
enter
jne
mov
out
pusha
mov
pop
dec
into
std
inc
arpl
xchg
mov
jns
fidivrl
xchg
add
push
cmpsb
sbb
fcomi
jae
mov
jp
rcr
push
cmpsl
mov
out
fadd
dec
mov
mov
mov
mov
sub
outsl
orb
add
addr16
sbb
lcall
add
popa
ds
mov
rcrb
add
jecxz
mov
push
cltd
dec
jmp
rcll
aad
xchg
fldcw
mov
aaa
leave
lods
mov
jb
mov
sub
xchg
sub
cld
f2xm1
repz
ja
mov
subb
push
push
xchg
jns
xchg
imul
push
sbb
imul
mov
push
in
mov
pop
lcall
xchg
into
mov
xchg
dec
jbe
cmc
jbe
in
cs
mov
and
jno
xchg
sbb
add
test
popa
push
xchg
sub
sbb
mov
pop
mov
ljmp
in
lea
mov
data16
cmpl
ror
jo
ret
and
rorb
cli
pop
xchg
aad
cli
mov
lea
xchg
cwtl
cmp
aaa
cmpsb
mov
daa
adc
mov
mov
adc
imulb
mov
sub
imul
mov
adc
ret
and
and
sbb
xchg
cmp
fdivrl
movsb
pop
sbb
jmp
sbb
inc
test
repnz
insb
mov
sub
ja
ficompl
repz
pop
jae
ja
cmp
inc
flds
call
js
or
or
cmp
movsl
or
iret
and
rcrl
inc
test
sub
sbb
inc
adc
mov
ds
xor
lahf
test
mov
outsb
lcall
dec
add
mov
add
sahf
sbb
pusha
into
mov
xchg
imul
or
push
loopne
jae
push
push
in
mov
out
sbb
sahf
outsl
shlb
push
daa
push
and
mov
movsl
cmc
lahf
stos
cmp
loopne
jmp
sbb
sbbb
sub
cmp
mov
push
cs
mov
lret
movsl
mov
pop
aas
cmc
inc
add
enter
ja
cmp
inc
or
jg
adc
jne
mov
movsb
xchg
add
test
repz
pop
cmpsl
mov
test
or
cmp
ret
in
push
sub
das
xor
dec
dec
fcmovb
sub
cld
pop
sub
xor
in
lods
mov
inc
add
mov
push
repnz
adc
loope
jno
shl
imul
vmwrite
incb
dec
mov
into
pop
and
mov
push
repz
cli
js
push
in
adc
pop
sti
cmpl
jbe
xchg
lret
dec
xor
and
adc
sub
mov
test
sub
movsl
mov
inc
push
stc
cli
dec
mov
fstl
cmp
mov
mov
loop
ret
or
dec
mov
inc
mov
cli
je
sbb
adc
pop
mov
das
xchg
movsl
sub
xor
xor
add
jae
mov
and
inc
loope
lds
mov
pop
lcall
rol
outsl
pop
xlat
and
dec
jge
imul
bound
outsb
jb
ss
and
pushf
cmp
ss
cmp
dec
test
push
xlat
int
test
ret
adc
and
xchg
mov
sbb
aam
mov
dec
inc
sar
cmc
inc
pop
mov
and
inc
pop
push
jge
mov
cmpsb
jne
roll
loope
rorb
mov
inc
jge
dec
out
mov
repnz
ss
fists
stos
dec
aaa
in
pusha
int
adc
mov
xor
adc
xor
xchg
or
xchg
roll
jnp
imul
jo,pn
cmp
aad
xchg
push
loopne
mov
mov
cmpsl
push
dec
lods
aam
mov
sbb
test
les
pop
mov
fdivrs
jnp
mov
jbe
and
in
scas
ljmp
inc
add
sbb
sub
push
enter
outsl
es
cltd
icebp
cmp
fidivrl
push
push
int3
mov
and
ljmp
jne
adc
adc
aas
out
cld
add
sbb
adc
dec
fmull
std
cs
fmuls
hlt
je
sbb
incb
mov
inc
mov
push
into
hlt
jo
jno
fcoms
pop
dec
out
xchg
jo
scas
xchg
mov
pushf
mov
cmpsb
pop
pop
ret
inc
in
dec
adc
test
dec
mov
std
sarl
push
mov
push
ret
inc
pop
pusha
test
sub
repnz
cmp
mov
adcl
mov
movsl
dec
ret
loope
xchg
xor
xor
cltd
mov
mull
rolb
jle
into
mov
in
add
add
lret
stc
xorl
outsb
enter
dec
xor
jns
andl
jl
sbb
pop
nop
movsl
movsb
int3
sbb
out
dec
pop
repnz
mov
fcomi
pushf
push
stos
stos
xor
call
insb
fwait
scas
cld
mov
jne
aam
push
or
mov
sub
mov
int3
fmulp
xchg
jge
jae
aam
jecxz
int
popa
lret
jns
push
lods
jle
in
pushf
mov
in
inc
mov
pop
xchg
fs
jne
cli
lcall
lret
dec
inc
std
add
push
xchg
sub
sbb
ficompl
in
push
sub
clc
mov
inc
je
insb
xchg
sub
adc
push
dec
lea
sahf
pop
pop
pusha
scas
xchg
lret
cmpsl
and
imul
dec
addr16
push
ljmp
adc
or
in
jae
ljmp
imul
jo
pop
les
pop
movsl
push
dec
movsb
push
cld
dec
imul
push
jne
movsl
iret
out
aam
add
sbb
adc
add
fisttpll
jp
push
daa
adc
aam
imul
loopne
leave
mov
shrl
sbb
jbe
in
arpl
sub
pop
mov
dec
mov
sbb
adc
and
insb
dec
nopl
mov
aam
pop
lds
adc
jne
jo
shrb
mov
shlb
dec
repz
aam
jb
pop
pop
daa
adc
jg
popf
lock
mov
shlb
es
gs
dec
adc
or
cmp
push
aad
ljmp
xchg
mov
aas
fiaddl
gs
mov
sbb
or
ss
pop
jge
jle
dec
jae
add
into
incl
int
jno
inc
cli
pop
and
lcall
jae
js
in
repz
xchg
cmpsb
stos
jbe
call
fcompl
stc
xor
cmpsl
xlat
jp
mov
xchg
pop
int
xchg
jl
and
addr16
jo
das
pop
push
mov
sub
dec
hlt
mov
add
pusha
in
inc
bound
hlt
cmp
sub
mov
jae
xor
jb
fimuls
repnz
das
cltd
in
lahf
inc
je
clc
inc
push
adc
and
test
aas
pop
add
clc
data16
inc
mov
fbstp
inc
mov
xchg
jecxz
xchg
pop
aas
and
jbe
insb
mov
cli
nop
or
xchg
jp
add
movsb
in
shlb
out
nop
and
or
jge
loop
inc
or
xchg
xchg
sub
mov
pushf
mov
lret
sbb
js
lods
int
outsb
lahf
mov
orb
mov
ficompl
jmp
popf
cmp
insl
int3
cmp
pop
sti
cs
ljmp
movups
sarb
inc
push
cmp
sets
rorb
mov
mov
cmp
cmp
sbb
adc
inc
sub
insb
daa
xlat
subl
dec
rcll
push
mov
and
or
insl
gs
std
ds
jmp
pop
dec
and
pop
jg
and
lcall
sti
inc
pop
lcall
maskmovq
idivl
pop
mov
call
aas
in
cmpsb
jp
mov
mov
decb
sbb
ret
lods
jl
sub
and
stc
ficompl
jg
mov
cld
sbb
pusha
hlt
mov
lret
jp
sub
cs
fchs
in
xchg
jne
popa
adc
mov
inc
mov
shlb
cltd
ss
repz
or
lret
in
pop
iret
inc
or
andl
in
ret
push
cld
in
push
cmp
pop
mov
addr16
xchg
fs
mov
mov
mov
dec
and
inc
sub
cmp
out
movb
or
orl
jbe
pusha
vrcpps
xor
call
lock
ja
ds
outsb
orl
call
jl
movsb
add
xor
jle
xchg
mov
iret
xor
stc
aad
xor
mov
mov
jns
sbb
inc
ret
fdivs
mov
test
pop
cmp
and
and
xor
adc
sbb
repz
or
xchg
sub
cmpl
ret
push
pop
das
mov
sub
inc
cmp
das
jo
and
jp
mov
incb
add
dec
mov
pushf
and
test
and
jbe
mov
mov
sbb
stc
push
push
shrb
shrl
jg
xor
mov
adc
das
jl
inc
test
aad
rol
stc
xlat
and
mov
push
pop
gs
push
cmp
dec
in
or
dec
or
xor
jp
push
mov
pop
in
sub
in
xlat
fwait
push
lea
mov
test
cmp
jbe
test
sbb
jo
jb
inc
stos
jno
inc
imul
cwtl
iret
push
rclb
dec
pop
test
jne
xor
push
test
out
pop
scas
dec
js
xor
pop
add
scas
into
inc
jg
mov
rorl
lret
js
pop
mov
lea
gs
add
mov
ret
jb
jge
and
and
mov
sub
adc
adcb
mov
and
in
add
adc
mov
mov
aad
cs
mov
lods
push
mov
test
pop
in
push
leave
shl
dec
mov
cmp
pop
pusha
out
push
adc
js
arpl
lret
mov
clc
mov
jnp
xor
les
add
jp
jae
inc
aaa
bound
sbb
movsl
xchg
aas
loop
js
sbb
call
pop
jne
pop
les
arpl
loope
add
pop
outsl
fiaddl
shll
and
cli
pop
add
jae
movsl
sbb
cwtl
in
mov
negl
inc
std
inc
push
sbb
enter
add
fs
mov
bound
pusha
outsl
fsubrs
data16
or
inc
inc
filds
mov
push
test
cmp
jbe
ret
adc
jecxz,pn
and
shrb
xor
jno
mov
xchg
lret
jle
mov
cmp
mov
sbb
sub
js
pop
das
movsb
je
sahf
adcb
xlat
fiaddl
js
ljmp
pop
push
lcall
xchg
jo
add
mov
int3
repnz
rcrb
jp
insb
int
iret
in
and
cld
sub
cld
mov
hlt
jg
in
pop
js
sahf
push
xchg
daa
imul
stc
out
dec
jne
movsl
fsubrs
jmp
arpl
dec
jb
loopne
aam
fs
push
sub
jns
ret
mov
xlat
mov
adc
push
daa
sub
adc
stos
sub
fisttpl
inc
mov
rolb
scas
out
dec
in
adc
pop
pop
ret
push
push
mov
pushf
and
in
xchg
cmp
mov
les
sub
sbb
mov
jnp
xchg
andl
lahf
mov
add
adcb
dec
add
rcrb
add
add
jbe
jns
or
aas
movsb
jge
sub
dec
add
fs
stos
vmwrite
fs
clc
pop
out
mov
insb
dec
cltd
adc
jnp
push
subb
mov
push
xor
loop
mov
shll
add
insl
mull
or
xor
scas
out
inc
stos
cld
mov
pop
addr16
jge
sub
cmp
pop
out
mov
mov
mov
popf
into
insb
lret
scas
mov
mov
push
repnz
xchg
jb
jae
adc
in
add
loope
in
lea
ljmp
push
imul
subb
outsb
das
sub
pushf
ja
push
mov
and
sar
inc
fwait
xor
pop
aas
popa
and
fimuls
cmpsb
out
sbb
and
or
sbb
pop
xlat
xchg
mov
out
xchg
jl
cli
xchg
stc
mov
xchg
das
mov
dec
lods
test
pop
scas
inc
jo
fisttpll
fwait
xlat
sahf
add
push
divb
ret
and
pop
cltd
std
insl
sahf
out
pop
or
xchg
add
sub
push
jae
mov
xchg
in
xor
loope
add
jae
pop
mov
or
in
add
or
leave
sub
sub
sub
aad
in
shrb
add
mov
bound
pop
cmp
ja
sahf
pusha
or
sub
inc
jb
fisubrl
cmp
xchg
mov
sahf
sub
sub
push
lret
addr16
mov
or
lret
cld
sbb
fsubp
clc
mov
sub
mov
dec
outsb
jg
xchg
fidivl
dec
mov
mov
out
mov
and
idivb
mov
dec
leave
stos
sbb
lahf
dec
adc
mov
stc
mov
rclb
leave
mov
pushf
cmc
rcr
enter
sub
inc
fldl
orl
ficomps
cmp
xor
repz
ds
decl
std
push
dec
call
xchg
adc
and
cmpsl
xor
dec
bound
rclb
nop
jmp
push
icebp
je
jb
mov
cmp
sar
pop
cmp
sysret
std
xchg
sbb
jno
jle
jnp
xchg
movsl
sub
stc
add
add
ret
aam
arpl
push
xchg
sbb
shll
cmpsl
sbb
cmc
aam
inc
dec
loope
pushf
fwait
xor
insb
ss
sbb
sbb
lret
sar
arpl
push
je
adc
out
xchg
inc
push
cs
push
je
push
es
jb
sahf
mov
pop
inc
loope
push
pop
imul
xor
add
test
negl
outsl
lds
aaa
hlt
push
pop
mov
pop
mov
jns
les
shrb
jnp
lret
int3
rclb
sub
stc
scas
adc
dec
lods
push
enter
pop
nop
bound
pop
outsl
pop
and
push
jp
scas
jg
scas
dec
xchg
xlat
ret
mov
xchg
xor
mov
mov
mov
cmpsb
fxch
and
stos
push
mov
fucom
cmp
int
inc
mov
fs
xlat
imull
jne
je
or
add
pop
insl
aaa
mov
leave
mov
ret
clc
loop
outsl
xchg
jne
pop
das
dec
mov
sub
fidivl
sti
enter
mov
inc
vpsubq
int3
dec
out
ds
out
sbb
mov
incb
sahf
sbb
clc
xchg
fsubs
mov
xchg
pop
in
push
jmp
jmp
pop
inc
sub
mov
cmp
outsb
mov
out
sbb
mov
sbb
push
sub
idiv
cmc
inc
out
test
sub
xor
not
rcrl
stos
pop
adc
push
inc
inc
dec
out
sahf
andl
add
cwtl
cld
in
sbb
cmp
sbb
movsb
cmp
fsubrs
aad
insl
cltd
bound
push
push
repnz
mov
inc
in
push
and
stc
cwtl
outsb
in
or
lea
in
fmulp
xor
pop
pushf
stos
jmp
inc
in
jmp
jg
xor
jnp
jmp
dec
mov
xchg
pop
sahf
cmpsb
mov
popf
imul
xchg
insl
ja
mov
mov
xor
dec
push
leave
adc
rorb
gs
mov
cmp
testb
sub
cwtl
stc
mov
mov
sbb
loop
int
mov
fmull
pop
jae
jnp
jmp
or
mov
outsb
pop
sbb
mov
loop
cmp
lret
xchg
data16
incl
test
xchg
in
mov
sbb
sub
fcom
pop
stos
push
cmp
sub
add
cmpsl
jnp
mov
cmp
mov
loop
pop
dec
scas
xor
xor
loopne
mov
push
lock
scas
jecxz
jg
add
adcb
repnz
repz
test
mov
push
jp
xchg
and
push
popf
leave
leave
add
fimuls
filds
sub
gs
int3
rcrb
push
dec
xchg
gs
sub
imul
into
mov
dec
stos
push
mov
xor
or
out
inc
movsb
js
icebp
mov
adc
sbb
movsb
test
nop
sub
cmp
inc
fstps
xor
cmp
movsl
adcl
or
out
nop
fildl
fcompp
jo
lods
lcall
xor
or
pusha
push
mov
out
xor
data16
mov
cld
call
dec
fsubrl
cmpsb
fst
pop
lret
ja
aas
fbld
in
mov
add
fdivp
out
cltd
pop
push
sub
outsl
sub
ret
fsubs
popf
push
sub
inc
xchg
push
mov
out
mov
fcmovu
xor
push
das
adc
cmp
sub
sub
cmp
xor
xchg
jg
enter
stos
xchg
stos
or
or
mov
psrad
xchg
xchg
push
push
adc
jg
and
pop
popa
sub
cmp
adc
imul
mov
push
or
aad
cmp
call
popf
movsl
pushf
push
and
sub
jmp
mov
sub
mov
push
push
dec
ljmp
dec
rorb
mov
aam
mov
inc
push
push
ljmp
xchg
loope
ljmp
or
xchg
lret
int3
adc
fadd
pop
adc
aaa
push
xchg
add
scas
add
push
push
xchg
dec
je
insl
cmp
stos
or
mov
adc
mov
in
pop
mov
lret
fcomip
out
jo
cld
rolb
or
aad
jb
in
pushf
dec
fisttpl
ret
jns
dec
cli
shlb
ss
add
xchg
pop
and
pop
cwtl
jmp
leave
cmp
cmp
popf
rol
add
loopne
jno
ss
sbb
sbb
pop
loopne
out
mov
pop
push
xor
pop
mov
push
add
test
jb
xchg
bound
sarl
jge
xchg
push
leave
push
push
xchg
mov
pop
jl
xor
iret
jns
push
loopne
xor
lret
fdivrl
cmp
jno
enter
stos
add
adc
cmpsl
or
call
push
lods
lock
incb
dec
js,pn
xor
pop
stos
icebp
rorb
pop
bnd
es
in
movsb
dec
leave
int
je
es
push
pop
cli
jg
test
ss
dec
mov
jp
cs
test
sahf
es
loopne
push
icebp
lret
popf
inc
aas
cmp
jl
jae
and
dec
inc
hlt
push
fwait
and
xor
fsubp
push
icebp
leave
xchg
xor
lods
icebp
adc
clc
and
dec
orl
and
insl
jnp
hlt
and
dec
cmp
je
pop
sub
cmpl
lret
nop
in
std
cld
imulb
pop
test
mov
daa
mov
testb
push
dec
inc
mov
mulb
push
rorb
mov
rolb
jle
cmp
adc
shll
cmp
ss
lret
sarl
leave
dec
cli
inc
sbb
lods
jo
shll
pusha
push
or
psraw
and
fmuls
mov
fnsave
or
lds
xchg
lret
in
inc
imul
inc
mov
jge
out
jge
xchg
js
lcall
shr
cmp
ljmp
lret
fsts
mov
push
push
rorl
pushf
push
and
xor
sbb
inc
stos
inc
mov
les
cmp
pusha
in
dec
loopne
jo
pop
and
or
jae
ljmp
icebp
cld
dec
sub
cld
clc
icebp
sub
xor
fs
hlt
jp
mov
jne
repz
xchg
pop
scas
mov
mov
push
test
dec
aaa
dec
mov
lods
rep
in
pop
sbb
push
pop
mov
dec
and
cmp
sbb
and
fisubrs
xacquire
cmp
jnp
int
mov
sub
daa
push
add
out
jp
lret
je
outsb
pop
add
mov
mov
xor
mov
dec
es
push
stos
sbb
popf
adc
data16
lret
ljmp
scas
mov
mov
jmp
mov
mov
sahf
cmpsl
xor
mov
and
adc
sub
pop
inc
sti
xlat
sbb
mov
lret
mov
inc
pop
xor
aaa
cmpsl
jle
test
lods
push
aaa
or
fsts
lock
add
cmpb
push
leave
mulb
filds
mov
sahf
call
loop
nop
hlt
lock
fiadds
sti
mov
jge
xor
mov
fs
jecxz
clc
cwtl
imul
adc
xchg
dec
cmpsl
pop
mov
cmpsb
mov
xchg
loopne
psubusb
or
ret
cmp
in
arpl
fistpl
dec
imul
ss
push
inc
out
mov
lret
aad
lods
sbb
js
xor
fwait
incl
or
insb
xor
in
hlt
push
cmp
and
xor
test
or
sti
out
xor
xchg
nop
aam
xor
outsl
push
lcall
aaa
lock
jbe
add
loop
mov
sub
inc
mov
mov
insl
aad
pop
mov
scas
mov
jo
stos
shll
mov
xchg
adc
pushf
xor
mov
mov
xor
daa
test
orl
orb
xor
call
movsb
fsts
movsb
cmp
aam
shr
orl
pop
test
xlat
sbb
push
js
pop
push
pop
xchg
lret
call
mov
test
insb
mov
test
scas
inc
or
push
lret
insl
and
data16
sub
sbb
jo
jno
add
sub
ret
popa
sbb
inc
dec
dec
mov
pop
mov
push
mov
repnz
inc
inc
shrl
jp
mov
mov
jp
or
rolb
hlt
arpl
xchg
sarb
movsb
inc
push
sbb
daa
dec
inc
sahf
mov
add
lods
xchg
xor
popf
or
jo
dec
jno
repz
into
cmp
cltd
xchg
ret
mov
sub
xchg
popa
clc
insl
in
mov
adc
dec
jl
out
sbbl
xor
adc
ljmp
outsb
hlt
jno
push
aaa
into
dec
mov
clc
inc
ret
ficompl
adc
inc
mov
aaa
jg
or
jb
out
jns
pop
inc
sub
dec
xchg
pop
dec
pop
pop
cli
add
and
pop
test
xchg
pusha
jmp
cli
xchg
cmp
stos
je
mov
push
adc
movsl
mov
cmpsl
xchg
das
enter
sbb
scas
nop
cs
cmpsl
mov
sub
in
jnp
cmpsl
out
push
shl
pop
xor
in
push
mov
cltd
les
sbb
inc
cmpsl
lcall
push
mov
inc
lret
mov
aas
shl
add
push
jnp
je
movsb
call
jbe
stos
dec
dec
mov
les
pop
xchg
in
out
inc
ret
sbb
call
jle
push
icebp
das
dec
roll
bound
outsl
ds
cmp
sub
pop
push
out
mov
or
jns,pt
jno
lods
mov
mov
fistps
sbb
and
aaa
stos
sub
shrl
xchg
iret
cmp
cmpsb
jnp
pop
lret
mov
out
mov
lock
xor
or
fs
mov
into
mov
push
sbb
cmpsb
fistl
sbb
ret
dec
adc
dec
xor
xor
cmp
push
add
mov
adc
push
stc
push
jae
sbb
int3
cmp
jne
push
adc
ds
inc
mov
pmaxsw
pushf
bound
xchg
mov
jmp
pop
les
push
inc
sbb
push
xchg
nop
fsubrs
ja
mov
mov
add
jnp
scas
sbb
sub
adc
cmp
gs
adc
int3
add
inc
icebp
or
mov
xchg
adc
add
mov
pop
xor
xchg
out
jbe
das
shll
jb
push
mov
xchg
inc
stos
imul
cli
xlat
xchg
sub
popf
les
fcmovnb
cmp
imul
mov
stc
push
sub
mov
add
adc
cmp
pop
adc
jecxz
pop
mov
test
es
add
or
mov
lock
sbb
cmp
cmc
test
jo
mov
inc
inc
fisttpl
call
rorb
jmp
push
mov
movb
sbb
adc
mov
popa
sbb
data16
inc
cld
rorb
push
stos
in
push
pop
incl
fdivl
pop
cmpsl
mov
clc
inc
mov
popf
mov
repnz
popf
xchg
aad
fsts
int
cmpsl
add
pop
mov
jns
dec
sub
clc
outsb
test
leave
loopne
mov
push
sahf
test
loopne
rcpps
push
mov
or
inc
mov
and
fwait
pop
stos
pop
ret
sbb
rcrb
adc
mov
xorb
je
mov
xchg
mov
out
les
fnsave
repnz
sbb
mov
in
adc
in
cld
sarl
pop
jae
push
cld
xchg
test
popa
mov
push
xor
repnz
je
cltd
stos
pop
loope
xor
mov
cmp
callw
add
jbe
add
aam
and
dec
pop
adc
inc
das
pop
or
fnstsw
sbb
mov
push
xchg
out
jmp
jmp
sub
divl
push
cmpsb
lock
insl
xor
sahf
push
push
mov
aaa
call
push
ds
fwait
icebp
mov
jg
in
pop
cmp
or
inc
rclb
lret
ret
lods
lret
gs
jb
lods
pop
lods
jbe
aas
cmp
adc
in
mov
mov
push
testl
stos
push
loope
jne
movb
loopne
outsl
aad
xchg
mov
fcmovbe
pusha
jns
pop
aas
inc
pop
test
imul
fcomi
test
sub
call
sub
es
xchg
xchg
shl
subl
repnz
inc
cld
fld
ds
imul
dec
fsubrl
pusha
out
in
mov
and
push
sub
gs
pusha
xchg
popa
inc
fwait
out
adc
and
add
cli
dec
mov
dec
aam
call
outsb
shl
cmp
fstpl
mov
out
movl
inc
jg
out
jns
movsl
xor
pusha
jbe
and
insb
scas
xor
sub
pop
mul
fs
scas
lret
je
cltd
sbbl
out
inc
lcall
xor
sub
mov
pop
dec
pop
jp,pt
pop
jb
lods
dec
enter
fbld
lock
nop
ja
jge
push
add
jle
sub
push
repnz
popa
dec
jecxz
pushf
fwait
insb
idivl
jae
mov
xor
in
mov
bound
adc
xchg
loopne
mov
lea
movsl
push
add
loopne
pop
in
push
mov
ljmp
push
pop
pop
into
adc
test
mov
or
fisttpl
cmp
push
sbbb
mov
push
pushf
int
mov
adc
bound
adc
dec
in
adc
dec
and
xor
xchg
shrb
js
sub
xchg
jne
jb
lsl
push
scas
push
out
pushf
cltd
mov
imul
into
andnps
add
gs
loopne
gs
ljmp
cld
inc
ret
sti
sub
enter
call
rcl
hlt
xchg
leave
scas
nop
jge
push
icebp
sbb
andl
xchg
pop
insl
adcl
inc
jg
test
pop
lock
jg
clc
mov
adc
push
mov
sbb
push
add
jno
or
mov
mov
or
push
movsb
sbb
adcw
fcoml
test
mov
in
inc
push
inc
push
inc
lret
jae
mov
subb
stc
inc
or
push
ss
adc
fiadds
lds
fldcw
pop
movsb
dec
lods
mov
scas
pop
and
int
xchg
mov
mov
jne
sbb
stc
shrb
dec
mov
mov
dec
mov
cmp
dec
lods
int
int
aaa
mov
inc
cmp
xor
cmp
leave
inc
int
push
xlat
cltd
push
sbb
lods
andb
pop
sub
mov
mov
push
jmp
or
andl
mov
xchg
pop
test
adc
mov
inc
xlat
mov
cltd
pop
xlat
data16
add
cmpsl
inc
addr16
fwait
pop
sbb
mov
mov
loopne
lea
repnz
insl
xor
fnsave
cmp
or
fcmovb
cmp
cmpb
push
aaa
push
jnp
mov
shll
fcoms
jle
mov
imul
cmp
xor
sub
mov
jp
push
mov
cmp
stos
fs
inc
xor
cmpsb
xlat
stos
popf
aad
sti
lcall
scas
sbb
ss
ret
lock
gs
into
jecxz
dec
or
sbb
cltd
bound
or
mov
or
ret
pop
push
inc
xchg
push
aas
into
andb
xchg
in
outsb
adc
push
repnz
gs
divb
rorb
add
pop
pop
push
adc
icebp
and
dec
test
jae
push
lods
cld
mov
fwait
xlat
push
test
ja
aaa
movsb
xchg
ret
iret
sbbl
inc
push
sbb
pusha
and
ds
mov
stos
cwtl
stos
mov
scas
push
cmc
fwait
sbb
jnp
jmp
popl
mov
scas
or
in
js
fwait
cmpsb
push
inc
add
pop
and
jecxz
pusha
pop
xor
push
mov
cmp
push
inc
cmpsl
dec
movl
and
jecxz
cmp
lea
call
jae
push
jge
sbb
cs
mov
dec
dec
mov
loop
jo
bound
inc
sbb
fsubr
push
dec
dec
sahf
cld
mov
mov
xchg
push
mov
jne
aam
sti
pop
mov
or
or
imul
jp
mov
movsl
popa
cmp
lods
rclb
dec
mov
lcall
scas
xchg
nop
loope
in
and
sub
sahf
pop
mov
jp
jge
jb
cmp
push
ficompl
dec
adc
jge
out
aad
mov
shlb
add
insl
ds
jmp
pop
dec
mov
lds
jge
xchg
mov
and
sahf
push
push
mov
pop
xrelease
or
mov
xor
pop
xchg
xchg
test
pop
mov
sbb
out
and
addr16
jo
mov
sbb
imul
repnz
test
sub
xchg
mov
cltd
loopne
stc
popf
sarl
arpl
or
xor
call
xor
lods
jle
inc
mov
add
jp
jne
les
xor
mov
les
sbb
int3
movsb
xor
adc
mov
push
cmpsl
xchg
or
mov
rcl
iret
mov
adc
cmpsl
inc
fiaddl
pop
push
sbb
in
mov
stos
dec
cmp
int
fadds
std
movsl
sbb
or
jo
and
inc
out
cmc
sti
mov
mov
or
mov
fwait
scas
mov
jne
or
cmc
pushf
hlt
inc
int3
test
mov
mov
adc
test
sub
xchg
in
mov
push
jp
mov
xchg
mov
loopne
adc
xor
push
xor
pop
int
flds
jle
jns
or
push
outsb
fs
js
pushf
mov
mov
add
aad
mov
adc
pop
pop
cli
adc
adc
sbb
mov
dec
jmp
add
pop
add
int
loopne
pop
and
xchg
fildll
testl
ja
lds
ds
mov
xchg
pop
xor
sub
iret
cltd
dec
stos
rol
pushf
sub
mov
outsl
dec
jne
jbe
pop
add
xor
jo
jb
cmp
aas
jae
push
lahf
dec
movsb
aas
dec
daa
jg
in
mov
adc
pop
inc
jg
lret
stos
mov
push
rcrb
ret
mov
xor
sbb
push
dec
mov
mov
fidivrs
int3
ljmp
push
ret
outsl
adc
xor
pushf
inc
or
gs
cs
add
and
in
push
insl
fstl
push
iret
sbb
pop
and
cmc
jg
xor
imul
push
mov
enter
pop
frstor
test
xchg
sub
mov
insb
aaa
repz
mov
sub
enter
mov
outsl
roll
bound
lods
scas
inc
mov
jle
mov
testb
lret
in
push
in
ds
mov
jne
outsl
shrl
out
sahf
ljmp
mov
push
inc
test
mov
bound
inc
repz
ss
lods
int3
insl
sbb
xchg
inc
cltd
adc
mov
and
lock
add
mov
jmp
lret
jbe
outsl
mov
cwtl
inc
scas
inc
xchg
push
adc
and
fwait
notb
xchg
and
mov
push
int3
imul
sbb
sahf
ret
lahf
dec
out
mov
and
sub
aas
dec
xchg
cmpsl
push
push
test
std
add
pop
leave
movsb
and
incl
mov
add
cmpsb
jecxz
jnp
xchg
test
imul
mov
stc
cs
and
sbb
pop
pop
std
fisubl
out
pop
mov
xchg
js
inc
mov
push
fwait
or
dec
push
jg
sbb
lods
push
jne
lret
dec
shl
aas
sub
rclb
lods
pop
les
jns
adc
addl
push
jo
add
sahf
xor
or
movsb
fistpl
push
mov
mov
and
lcall
and
movsb
hlt
jb
jo
loopne
and
repz
mov
push
sub
sbb
test
iret
push
loope
xor
aaa
leave
popa
test
test
adc
rcrl
cmpsb
and
icebp
xchg
xor
and
ret
out
test
sbb
das
scas
in
add
mov
in
repnz
xchg
fs
out
push
mov
jp
fsubs
fwait
or
push
or
xor
sub
mov
xor
sub
pop
dec
sub
cld
aad
in
sub
rcrb
sub
scas
inc
xchg
mov
jle
sub
mov
hlt
out
lret
addr16
cli
mov
inc
ds
dec
or
jecxz
rol
mov
test
loope
jecxz
sbb
loopne
dec
fwait
and
xchg
mov
inc
cmp
movsl
ds
mov
sub
mov
adc
xchg
xchg
popf
shlb
ds
and
int3
pusha
mov
jb
sbbb
jns
pop
or
inc
mov
mov
out
inc
or
inc
xor
mov
insl
sahf
nop
jb
and
cmpsl
addr16
jbe
test
in
xchg
fcomps
repnz
fs
gs
imul
sbb
sbb
movsb
inc
sarb
mov
mov
sub
sub
scas
lods
imul
cmp
int
and
jno
xchg
dec
pop
dec
daa
or
lret
outsb
mov
call
in
sub
std
in
adc
cli
sbb
mov
pusha
orl
decl
jle
ret
jg
dec
inc
setae
in
pusha
arpl
cmp
mov
lock
iret
test
inc
adc
arpl
sbb
jge
add
loope
mov
int
jns
push
inc
cwtl
mov
and
loop
lcall
or
mov
jmp
daa
cmp
cmp
inc
add
dec
lds
mov
jae
push
adc
adc
push
outsb
pop
pop
xor
xchg
loop
pop
scas
movsb
pop
cmp
les
jb
push
sbb
das
daa
aam
ret
js
mov
xor
pop
mov
mov
mov
and
push
cmpsb
sbb
cwtl
xor
pop
cmp
pop
out
mov
pop
in
in
testb
inc
scas
adc
or
xchg
scas
in
and
jge
or
pop
jne
push
pop
pop
adc
pop
jp
sbb
inc
subb
jge
push
mov
loop
jno
aam
jo
cmp
xchg
push
in
xchg
jne
add
adc
and
pop
sbb
bound
sub
mov
in
fsubl
lcall
lea
test
subb
mov
jp
mov
andl
push
jp
fisubs
lcall
fdivs
mov
or
inc
add
mov
push
lds
sbb
push
and
jnp
cmp
dec
cmp
xchg
loopne
adc
jle
or
int3
por
mov
sbb
test
inc
pop
out
test
pop
jg
cmp
iret
jmp
mov
mov
xor
xchg
popa
std
mov
mov
mov
inc
test
ja
mov
dec
xchg
vpxor
cmp
pop
lock
mov
sbb
negl
in
lods
out
cmp
push
std
shlb
js
cmp
ret
scas
add
mov
adc
shr
mov
pop
xchg
adc
cs
xor
je
pusha
shrl
or
mov
push
cmpsl
jbe
movsb
aas
and
dec
or
pop
aas
jg
pop
jle
mov
jge
and
test
stos
mov
push
cmp
lods
jns
in
fnsave
andl
sbbl
xchg
mov
cmp
scas
or
nop
push
out
dec
and
adc
dec
fcoml
pop
packssdw
out
into
hlt
cmp
add
sbb
loope
pop
imul
adc
mov
inc
jns
adcl
bound
mov
cltd
mov
mov
popf
push
pop
rolb
push
cmpl
sbb
cmp
repnz
cmp
sbb
mov
idivb
ds
je
adc
ret
shrb
jp
push
mov
lret
add
xor
push
xchg
jg
inc
cs
add
pushl
jecxz
push
dec
aam
test
sbb
xchg
dec
aas
cmp
cmc
test
pop
mov
psllq
mov
ret
jne
push
mov
and
xor
shrl
movsl
add
in
mov
fwait
cmpsl
les
loop
and
or
inc
loopne
cltd
push
mull
jg
and
sbb
mov
loope
or
into
or
xchg
repnz
pop
inc
stos
push
or
mov
push
jl
cmpsl
sbb
push
fildl
jns
pop
mov
cmp
jge
xorb
or
push
loop
xlat
add
cmc
mov
add
repnz
or
into
icebp
xchg
fimull
push
jae
mov
aaa
push
dec
ds
inc
ret
outsb
mov
mov
movsb
shr
mov
add
ja
pop
out
mov
data16
mov
push
out
test
call
out
adc
push
push
xchg
sbb
pop
xor
mov
push
push
stc
xchg
rcrl
push
add
mov
push
adc
and
ror
aaa
test
or
adc
lods
add
xlat
sbb
dec
add
or
sarl
push
jge
je
dec
pop
lahf
cmp
mov
fidivs
in
mov
dec
xchg
fmulp
jle
mov
fxch
cmp
xlat
sub
scas
shrb
lea
adc
push
inc
repnz
mov
jbe
cmp
sbbb
jnp
iret
mov
out
jg
lea
and
shll
aam
inc
in
fs
push
mov
mov
pop
lock
jge
mov
outsl
adc
rcll
dec
lock
inc
sub
mov
sub
dec
inc
fisubl
mov
push
pop
lock
or
mov
push
lock
cmp
imulb
enter
dec
jns
ficoml
jg
sbb
inc
cwtl
xlat
scas
mov
push
dec
adc
jle
enter
cmp
lock
mov
push
adc
dec
add
push
sbb
mov
mov
mov
mov
iret
mov
mov
mov
adc
mov
gs
sti
cwtl
shlb
dec
cmp
popa
cltd
or
jb
test
popa
jmp
pop
adc
dec
dec
and
fadds
out
js
clc
sarb
or
cmpb
or
lea
sti
daa
or
jbe
jnp
mov
cltd
pop
push
mov
jecxz
jo
add
mov
mov
pop
hlt
jp
cmpsb
sbb
and
std
inc
adc
aam
or
aad
xchg
insb
jbe
lds
mov
out
mov
jge
jg
popf
enter
leave
loope
jp
push
lods
xchg
js
test
push
insb
aas
xchg
mov
sub
inc
jecxz
or
push
xchg
dec
cmp
sbb
cltd
xchg
in
mov
xchg
push
and
das
pop
push
popa
add
lods
pop
and
jg
inc
je
arpl
sub
push
test
dec
fwait
dec
or
push
fadds
dec
lock
pop
or
adc
xor
lret
mov
iret
dec
imul
insl
in
jle
repz
divb
out
aam
daa
in
add
xor
dec
repnz
insb
and
bound
jne
or
xchg
pushf
inc
testl
outsl
or
cmp
push
xor
das
add
sarl
into
into
lock
icebp
push
je
test
insl
jae
dec
imulb
out
or
ja
lahf
pusha
sub
xor
nop
jg
aaa
pop
sbbl
test
lock
lods
pop
jnp
push
out
inc
test
pusha
mov
jno
out
mov
shlb
mov
inc
dec
shlb
lret
jns
out
aaa
mov
cmp
xchg
fwait
cmp
sub
mov
pop
jb
adc
ds
mov
rorb
push
aam
jo
jns
inc
and
adc
ja
rcl
bound
pushf
pop
roll
int3
loope
or
or
cmp
or
outsl
mov
inc
hlt
aas
pusha
adc
mov
push
movsl
xor
mov
xor
cmovl
rcrl
jae
std
sub
mov
fwait
cmpsb
xchg
xchg
mov
test
pop
call
add
jge
inc
subb
push
add
mov
out
dec
cmp
popa
add
mov
shlb
lret
cmpsb
pop
inc
test
push
mov
pop
mov
jns
and
mov
add
in
data16
fwait
pushl
shrb
cmp
mov
jecxz
and
mov
adc
add
test
mov
pop
ljmp
sub
xchg
add
add
mov
cli
stos
out
fnstcw
add
cs
mov
jns
xchg
pop
xchg
xchg
imul
scas
sahf
jmp
pushf
stos
and
lock
sahf
or
mov
mov
popa
hlt
iret
mov
or
cld
divb
xor
add
loope
dec
push
loopne
dec
sbb
daa
push
cmp
cmc
push
cmp
sub
movsl
add
add
sub
push
xor
xlat
aad
fwait
ret
mov
mov
icebp
bound
push
sbb
cwtl
mov
lret
popa
lods
jb
insb
push
inc
mov
fdiv
mov
mov
fidivl
xor
les
and
xor
fisubl
insb
cmp
xchg
xor
ret
sbb
cld
and
insb
test
stc
outsb
xor
sbb
mov
inc
popa
subb
jl
lock
or
nop
xchg
pop
mov
push
xor
icebp
xchg
or
push
push
add
neg
shlb
test
stos
push
test
xor
mov
ret
adc
sbb
lret
fisttpl
fidivl
pop
mov
xor
mov
and
cli
xor
imul
fs
jl
cmpb
mov
popa
xorl
pushf
out
sbb
mov
xlat
mov
cltd
testb
inc
or
add
or
inc
mov
insb
out
test
aaa
daa
push
push
dec
jno
jno
loope
mov
ret
aas
lock
mov
sbb
push
mov
in
cmpl
dec
fs
xchg
dec
call
pop
test
push
es
aam
and
mov
mov
lds
jnp
pop
test
movsb
enter
mov
lods
sbb
stos
jp
adc
inc
dec
addr16
mov
or
and
cs
dec
mov
out
dec
pop
push
out
dec
jle
ljmp
sbb
add
mov
sbb
rcr
divl
bound
push
imul
loop
iret
dec
sub
mov
push
inc
cmp
mov
xor
add
xorb
push
mov
adc
sbb
outsb
xchg
mov
jmp
dec
sbb
pushf
add
jle
std
mov
add
mov
and
cmc
jno
cmpsb
fs
dec
int
sti
insl
adc
push
pop
icebp
ficompl
xlat
int3
push
or
xchg
lcall
pop
aam
fcoms
pusha
and
and
shrl
fdivrl
fistpl
inc
ret
xchg
add
cmp
cmp
add
mov
jmp
sbb
mov
lahf
mov
mov
pop
lods
test
xchg
outsl
fiaddl
xor
push
lret
int3
sub
setne
or
rolb
xor
cltd
pop
icebp
pop
sbb
dec
xchg
mov
and
lret
inc
out
dec
mov
ss
jl
adc
jb
outsb
imul
repnz
xor
bnd
inc
and
call
aas
cld
imul
jmp
mov
cmpsl
and
xchg
jp
sub
push
jl
pop
pop
repz
push
cld
sbb
addr16
sbb
cwtl
out
dec
pusha
xchg
inc
inc
scas
pop
sbb
lds
pop
inc
add
fdivl
test
out
xchg
mov
and
mov
push
outsl
mov
faddp
jbe
add
sub
ss
or
shlb
push
sub
dec
in
mov
dec
mov
push
cs
sti
shll
ror
xor
sbb
stos
add
daa
das
imul
test
mov
fs
lret
jnp
sbb
repz
pop
mov
mov
lret
lds
or
popf
data16
lret
sbb
jl
xchg
stos
sahf
cmpsl
shll
dec
fistps
sbb
jns
cmpsb
fcoms
lds
insb
mov
ljmp
arpl
out
add
and
add
popf
cmpsl
movsb
mov
jb
shr
xor
lahf
in
xchg
stc
outsl
ja
ja
leave
push
jge
jno
jo
aad
fwait
mov
lea
rcll
xchg
test
mov
ja
xor
mov
sbb
mov
mov
cmp
subb
or
addr16
pop
ret
and
cmpsl
insb
andl
test
in
xchg
popf
clc
andb
jo
jl
mov
dec
push
mov
ja
mov
imul
cld
sub
jg
prefetchnta
inc
stc
mov
out
mov
aas
pop
xchg
cmp
xchg
mov
pop
mov
stos
lods
cmc
scas
jl
and
xor
mov
jno
pushf
cmp
mov
pop
out
push
jmp
mov
jmp
xor
clc
mov
aas
nop
cmpsl
lods
inc
aas
sbb
hlt
add
inc
push
or
lods
cmp
push
test
mov
icebp
cmp
add
in
pop
push
ret
xor
mov
mov
pop
pop
daa
dec
jecxz
sbb
cmp
lahf
icebp
xlat
push
fwait
xor
mov
fists
out
mov
jno
jecxz
xchg
cwtl
push
push
rolb
sti
andl
push
adc
xor
mov
dec
xchg
sti
loope
lcall
adc
and
and
push
les
add
sbb
add
sti
sub
jne
repz
subl
pop
mov
xchg
shl
addb
jb
imul
xor
mov
add
lret
or
pop
pop
xchg
mov
mov
pop
jo
sub
test
cld
mull
in
and
repnz
inc
and
pop
mov
and
sbb
jle
and
in
adc
add
adc
in
fildl
sti
jnp
push
push
cs
jl
stc
xchg
jns
or
hlt
mov
and
das
inc
lret
jmp
jns
lret
add
xchg
sub
rcrb
pop
sbbl
out
jecxz
push
outsb
inc
test
add
enter
js
inc
jnp
aas
inc
inc
pop
pop
jmp
in
cmp
jmp
or
and
sbb
insl
sbb
shlb
dec
fwait
and
dec
popa
sbb
inc
pop
fstpt
gs
push
inc
lret
inc
adc
int3
push
mov
fiaddl
aas
ret
jp
pop
cmpl
data16
add
shrb
lods
or
aaa
sub
stos
insb
mov
out
es
mov
ja
sbb
outsb
outsb
dec
scas
adc
xor
out
add
mov
pop
mov
sbb
xchg
xchg
gs
push
pop
cmp
mov
lcall
in
mov
and
xchg
in
pop
je
mov
push
jno
push
jle
pop
setns
sbb
int3
push
out
sub
mov
adc
enter
lret
or
loope
aam
sbb
shlb
movsb
icebp
outsb
fcoms
fs
cmp
daa
lahf
cmovbe
insl
sarl
add
sbb
mov
out
jbe
es
cld
add
test
sub
addl
dec
das
mov
insl
xchg
inc
int3
pop
mov
mov
xor
inc
js
into
xchg
mov
popf
jl
xchg
dec
or
shlb
popf
jo
mov
ljmp
jmp
repnz
inc
or
add
idivb
and
mov
in
pop
sub
push
hlt
cld
sbb
sti
jmp
xchg
push
and
sub
leave
pop
push
pop
dec
adc
in
lret
mov
sub
test
mov
ret
lahf
enter
pop
jno
xchg
mov
add
jp
pop
xchg
xchg
dec
loopne
mov
movsb
shlb
or
aaa
cmpsb
xchg
clc
sub
outsb
stos
sub
sub
testb
xchg
mov
mov
mov
ss
mov
daa
bswap
push
jmp
lcall
loope
je
popl
xchg
imul
pop
notl
add
out
xor
sub
push
dec
push
je
mov
push
xchg
add
jge
or
shl
pop
mov
xor
pop
push
cmp
or
add
test
insl
or
fisubrl
dec
push
jnp
and
test
lahf
push
jl
jno
mov
push
inc
pop
mov
or
xor
mov
add
adc
xchg
je
pop
hlt
and
sbb
jne
cmp
pop
mov
mov
fdivrs
cmpsl
hlt
inc
cld
outsb
cmp
test
jge
jmp
lds
orl
aaa
stc
lods
das
mov
dec
out
xchg
pushf
or
cmpsl
inc
or
enter
mov
adc
dec
sbb
xchg
lock
gs
sti
push
sbb
xchg
and
ret
mov
rclb
cmp
out
cs
adc
cmp
stos
lretw
sub
adc
sbb
ja
cmpsl
pushf
mov
mov
clc
inc
or
shl
out
jbe
cmp
and
movsb
loope
adc
call
adc
xchg
cwtl
rorb
push
add
inc
mov
mov
and
xlat
jmp
scas
add
leave
in
or
movsl
cmpsb
jl
dec
push
ljmp
cmp
mov
push
inc
inc
insb
mov
pusha
movsl
or
popf
inc
xchg
add
mov
xchg
jl
and
std
pop
mov
psrad
cli
inc
hlt
pusha
ljmp
add
add
cltd
push
jae
test
push
das
mov
cmp
dec
mov
cwtl
pop
out
int
mov
xor
xor
mov
xchg
scas
into
incb
dec
arpl
lcall
adc
mov
jmp
cld
add
mov
rolb
mov
fisubrl
cld
xchg
fisubrl
jle
xchg
divb
fistpl
add
xor
iret
cmp
icebp
mov
cmp
dec
mov
movsl
push
mov
hlt
nop
movsl
leave
mov
cltd
jo
mov
icebp
xchg
lret
jge
out
pusha
adc
mov
lret
repz
cs
add
dec
or
fs
xor
stos
sahf
shll
xchg
jl
test
imul
cmpsl
mov
and
jg
mov
jne
push
add
cmp
xor
and
mov
outsb
in
lea
xor
call
in
mov
sub
sbb
movsl
and
rcrb
xor
cmp
add
jne
and
and
cltd
mov
sub
sub
hlt
shl
pop
ret
sbb
push
lcall
lods
mov
cld
popf
cvtps2pd
fs
cld
add
mov
adc
arpl
outsl
jno
xorb
or
inc
mov
iret
mov
dec
es
fisubs
mov
mov
test
popa
out
shrl
lds
add
mov
sbbl
insb
inc
jo
aaa
cmp
inc
add
jp
mov
lods
imul
add
xor
adc
or
adc
xor
jnp
loopne
push
shll
mov
repz
stc
add
mov
jp
mov
insb
mov
icebp
stc
testl
ret
out
xor
sub
pop
and
mov
cmp
ret
rcrb
jle,pn
shl
notb
xor
fstl
mov
pop
or
shrb
or
xor
and
mov
jnp
sarl
and
les
sbb
mov
inc
mov
fwait
inc
push
imul
fstl
jnp
in
push
mov
fcompl
subl
push
ljmp
rolb
stos
imul
sti
sub
add
stos
inc
movsl
insb
and
addl
pop
movsb
ja
mov
push
dec
pop
cli
jecxz
imul
add
into
xor
int3
jno
aam
xchg
push
or
dec
or
jl
pop
dec
xchg
mov
jb
mov
pop
dec
or
cmp
jmp
fisubs
push
cmc
frstor
adc
ja
add
mov
arpl
and
fildll
dec
mov
ljmp
jmp
je
jns
inc
or
scas
into
mov
ret
repnz
cmp
inc
push
loopne
or
add
jb
pop
pop
xor
sub
roll
add
in
call
mov
xchg
cmpsb
enter
jl
dec
push
adc
mov
leave
sbb
and
dec
rcl
cmc
lods
fcoml
cltd
sbb
sbb
add
adc
pop
js
cmpsl
rorl
dec
inc
enter
int3
xchg
nop
push
in
les
mov
int3
je
dec
mov
bnd
dec
aas
shrl
addr16
sbb
cmp
iret
faddl
fdivrl
jns
cmp
dec
fisubl
jmp
outsl
jge
mov
stos
sbb
lahf
adc
xor
jl
sbb
or
and
aas
and
loopw
sub
pop
in
aam
das
cli
fcmovnu
fwait
xchg
int3
mov
inc
mov
dec
xchg
rorl
std
mov
seto
scas
jp
jno
out
mov
das
mov
icebp
jb
mov
lcall
mov
inc
add
int3
jnp
cmpsb
cmp
cmp
scas
pop
push
std
jbe
jle
test
mov
fisubrs
sub
enter
inc
aam
arpl
lock
adc
scas
repz
stos
sub
cmc
ja
cmpb
lret
mov
xchg
mov
adc
cmp
cmp
mov
imul
dec
dec
mov
icebp
fwait
xor
in
pop
sub
cmc
aaa
sbb
mov
gs
lds
push
pop
stos
jne
rcrl
iret
iret
cmp
adc
call
dec
icebp
aaa
mov
in
mov
mov
sar
addr16
add
into
or
adc
pop
xchg
inc
xchg
inc
push
mov
cmp
jae
imul
adc
rolb
and
pop
hlt
fwait
mov
push
das
cmpsl
lea
shl
outsl
ljmp
call
or
rol
push
aaa
xchg
sub
and
mov
mov
dec
and
jo
push
mov
loope
das
mov
pop
rorb
outsb
sub
jae
sub
mov
cwtl
mov
cmp
in
fucomp
movsb
out
mov
sti
cmpsb
push
aaa
stos
fucom
jne
into
stc
pop
adc
fiaddl
add
fprem
test
xchg
push
xchg
mov
mov
repnz
lock
mov
decb
es
adc
and
lods
cli
fwait
add
loopne
lods
rclb
push
and
je
lods
pop
mov
ret
int
icebp
fcmovb
adc
dec
outsl
push
roll
lcall
call
jne
das
int
pusha
cmp
jp
test
and
out
jne
add
mov
lahf
fcoml
fstl
fidivl
shlb
sub
mov
dec
ds
cmpsb
add
sbb
cmp
rcll
aaa
inc
jb
adc
mov
jge
adc
adc
push
insb
aaa
mov
loop
ljmp
inc
mov
cmpb
jp
adc
fistpll
mov
dec
movsl
fwait
ret
outsb
repnz
pop
into
daa
test
xor
pop
xlat
daa
test
cwtl
push
jmp
ja
aad
and
daa
mov
aam
ljmp
dec
mov
lds
dec
out
repz
push
push
aam
in
lcall
rcrl
push
or
ljmp
rorl
in
xor
inc
jg
aas
or
sbb
and
pop
sbb
xorb
push
mov
sub
dec
lcall
mov
movsb
imul
pushf
fcoml
imul
pop
out
ficomps
xchg
call
repz
sarb
and
incl
loopne
rorb
sbb
fcoms
inc
dec
in
lods
add
push
dec
cwtl
jb
sbbl
fnsave
cltd
lcall
lock
fcomps
mov
sbb
fs
in
ss
addr16
mov
shll
jge
aam
add
mov
popa
mov
xor
sbb
mov
jbe
rolb
mov
mov
popa
lret
movsb
sub
lock
in
push
inc
mov
sub
or
push
insb
push
xor
mov
fcoms
rcll
mov
subb
cltd
ja
scas
jl
repnz
fwait
ss
push
fwait
scas
hlt
mov
sub
gs
pushf
jp
jl
gs
or
sbb
jns
popa
lods
popf
dec
popa
mov
mov
jnp
pop
in
in
pushf
or
fstpt
jp
mov
sub
xor
pop
sbb
mov
or
jo
pop
das
call
inc
and
xchg
fbld
cld
cmp
sahf
dec
sub
enter
aaa
jp
push
push
fisubs
mull
aas
in
sbb
xchg
adc
add
jo
push
sbb
testb
inc
xchg
cmc
adc
sti
sub
push
dec
int
jbe
mov
jl
out
push
xchg
lcall
adc
push
adc
sbb
scas
movsb
jae
loop
xor
ljmp
push
add
sbb
cwtl
arpl
add
ret
mov
aad
mov
dec
add
adc
scas
jb
fisubs
sahf
inc
mov
loop
in
mov
and
push
mov
mov
enter
ret
mov
pop
daa
aas
sti
push
out
aas
js
test
ja
mov
mov
cmp
insl
sub
mov
icebp
bound
rorl
sub
jmp
mov
fildl
and
mov
xchg
and
adcb
cld
dec
das
dec
out
xchg
rclb
add
repnz
aaa
loope
hlt
jnp
outsl
ss
cmp
jns
in
sti
daa
hlt
pop
aaa
mov
sahf
push
ss
xor
mov
pop
sub
in
je
int
add
fsts
sbb
xor
popa
xchg
in
xor
xor
lds
daa
aaa
movsl
cmp
cmp
ret
push
inc
mov
inc
call
mov
sub
pop
push
mov
out
andl
jl
jb
cmp
push
xor
xor
popf
xlat
leave
cwtl
in
xchg
mov
sbb
les
jno
mov
xchg
jg
xor
sti
into
adc
test
test
mov
adc
jmp
fcomps
ret
je
popf
add
or
and
int3
xor
and
jae
enter
lcall
xlat
aad
orb
hlt
fstps
out
repz
int3
adc
fisttps
lahf
shrl
mov
sarl
aam
aas
pop
xor
fdivp
lods
add
mov
jg
or
imul
mov
mov
hlt
and
clc
pop
clc
fwait
gs
or
inc
inc
mov
iret
push
mov
inc
ret
out
in
loope
xchg
dec
pop
stos
test
mov
sub
imul
mov
outsb
mov
or
add
mov
xchg
lock
sub
sahf
mov
jl
push
cmpsl
push
setb
nop
cmc
das
adc
cmp
xor
int3
xchg
mov
cli
cmpsb
std
push
pop
jns
loop
mov
in
cli
jge
repnz
or
dec
lods
rolb
mov
sub
push
inc
and
pop
in
sbb
dec
shll
lss
or
test
es
jg
mov
mov
aad
roll
mov
dec
daa
addb
dec
sbb
call
inc
pop
sub
sbb
movsb
ds
jne
add
icebp
in
dec
adc
ljmp
shl
xchg
jnp
lds
cmc
dec
cmpsb
xor
loopne
lock
dec
rclb
arpl
std
sub
or
loopne
add
pop
outsl
push
popf
or
or
je
xchg
or
jb
ret
outsb
inc
fwait
jnp
stos
push
or
inc
xor
xchg
insb
arpl
fcmovb
es
je
sbb
inc
jg
xchg
std
idivl
pop
negl
xchg
mov
xchg
aad
mov
out
mov
notl
adc
ret
aad
xor
cld
dec
adc
mov
cld
sbb
adc
insl
movsl
loope
gs
arpl
das
hlt
ffree
cmpsl
lret
test
and
imul
repz
lret
stc
mov
push
sahf
jg
popf
or
xchg
push
stos
push
lock
sub
pushf
push
xor
test
leave
lret
jl
cmpsb
adcl
push
int3
xor
leave
cmp
repz
cmpsb
xchg
out
jb
mov
mov
xor
cmpxchg
pop
imul
jns
dec
or
out
fwait
jle
pop
sbb
sub
movsb
cli
add
or
add
or
sub
ds
cmpsb
scas
bound
movsb
pop
pop
ja
add
and
dec
lahf
adc
xor
cmp
aam
cmp
js
mov
adc
cld
in
sbb
pop
rolb
xchg
icebp
int3
pop
dec
mov
push
xchg
jmp
ljmp
sbbl
andb
or
movsb
mov
scas
movsb
rolb
push
jp
cli
jmp
mov
data16
lds
cmp
push
push
shrl
jle
insl
push
fmuls
sub
inc
sbb
push
repz
pusha
and
adc
xor
mov
addr16
add
cmpsb
loop
mov
inc
in
iret
mov
out
push
jecxz
rclb
popa
test
fs
dec
lcall
sbb
rclb
cmc
pop
enter
popa
in
stos
cmp
push
sub
sarb
mov
sti
jae
js
stc
imul
inc
pop
xchg
add
cmpsb
jmp
inc
repnz
lret
and
stos
daa
jb
loopne
cwtl
xorb
mov
mov
fs
xchg
scas
xchg
sbb
test
mov
cwtl
mov
test
add
outsl
pop
cmpb
js
in
xchg
jne,pt
jle
dec
pop
inc
cs
pusha
adc
inc
or
dec
and
pop
lcall
sti
jge
mov
xlat
pop
loop
mov
cld
and
leave
cmp
out
lds
push
mov
lods
lods
out
or
js
add
std
lods
mov
test
sub
lods
jo
loope
mov
mov
mov
or
insb
xchg
sahf
jns
cwtl
pushf
es
pop
sbb
sbb
mov
int
loope
daa
jp
stos
repz
cmp
movsb
dec
aaa
cli
mov
popf
mov
jnp
push
cmpsl
and
jl
daa
mov
repnz
cmp
and
nop
or
sbb
cmp
call
jne
pop
dec
and
es
sbb
adc
adcb
sbb
mov
push
xchg
xor
loope
mov
lods
or
ljmp
mov
mov
fldenv
mov
mov
rorb
aas
sub
into
adc
mov
jle
xor
and
sbb
int
cwtl
insb
sub
fnstcw
out
push
jp
in
jb
popf
pop
mov
xchg
xor
rclb
inc
xor
dec
inc
aas
xorb
nop
test
cs
filds
cmp
pop
and
pop
mov
daa
lret
add
aaa
ss
mov
xor
jle
and
xor
sub
test
imul
mov
daa
rolb
ror
mov
ds
or
adc
stc
adc
dec
cmp
imul
push
push
lea
add
incl
and
cmp
sub
roll
dec
add
lods
adc
or
push
les
inc
mov
scas
movsl
xor
fldenv
pop
sahf
pushf
and
adc
xor
aad
or
dec
push
fsubs
mov
aam
cmp
test
pop
scas
sti
cmp
xor
mov
into
add
mov
or
je
xor
inc
pop
add
rcrb
popf
stos
inc
mov
pop
mov
loop
and
fwait
rep
add
xchg
xchg
jno
jl
and
inc
dec
xchg
xor
or
fimuls
lret
mov
mov
mov
and
imul
outsl
sub
xchg
cmp
ret
lcall
pop
push
sbb
mov
mov
shll
mov
mov
ja
lcall
mov
mov
jo
ret
xchg
mov
shrb
sub
lods
pop
lods
icebp
insb
pop
lds
es
mov
js
aam
push
loopne
pop
cmp
cmp
repz
fdivrl
cmpsb
lds
pop
cmp
jmp
fcmovnb
pop
ficomps
xchg
iret
mov
cmp
test
pop
jno
lods
mov
movsb
movsl
push
push
mov
add
cmc
xor
pop
dec
mov
popa
mov
dec
pop
loope
orb
aas
xor
stos
jo
jbe
mov
xor
hlt
imul
cmpsb
mov
outsl
dec
stos
inc
pop
rorl
sub
sub
mov
movsb
cmp
decl
popa
test
mov
fs
push
clc
adc
push
mov
aaa
je
mov
inc
out
repz
sarl
int
into
insl
in
int
test
imul
imul
or
pushf
xchg
or
sub
sbb
cmp
inc
shl
jecxz
and
sub
sbb
cmpl
inc
or
sahf
aaa
ds
and
fidivs
mov
inc
mov
dec
lret
mov
jg
mov
or
ja
adc
pop
aad
das
mov
sarb
ss
clc
sti
adc
jnp
cld
mov
aam
push
es
out
push
dec
mov
cltd
scas
fiadds
add
pop
push
es
sbb
lret
xchg
mov
mov
ret
popf
lods
into
mov
jne
push
mov
lahf
fstpt
inc
test
mov
nop
or
sub
push
out
mov
and
sub
push
dec
pop
sti
jmp
sarl
fsub
add
stos
shl
gs
aaa
icebp
testl
arpl
jmp
into
mov
add
xchg
xchg
int3
dec
frstor
push
hlt
lea
mov
orb
push
les
and
rep
inc
data16
repnz
lahf
mov
es
leave
mov
mov
call
pop
mov
cmp
cs
push
inc
clc
push
inc
dec
dec
xchg
dec
out
lods
in
mov
fnstenv
notb
xor
push
mov
cltd
jae
cli
pop
stos
out
psubusb
les
pushf
fisubrs
pop
jmp
mov
les
xchg
jmp
push
or
daa
mov
sbb
fsubrl
jne
push
clc
or
scas
stos
inc
jne
stos
test
pop
lds
mov
imul
add
das
mov
push
xor
ret
xor
data16
mov
adc
mov
das
call
push
aaa
jae
jg
lret
or
add
jbe
mov
out
fmuls
mov
cmp
out
fisttpll
sbb
imul
and
inc
mov
cld
inc
cwtl
aam
pop
shll
pusha
pop
xchg
inc
scas
les
cli
aad
cmp
stos
push
xchg
jb
insb
xor
push
loopne
aaa
cmpsl
inc
loopne
xorl
jmp
outsl
push
xor
jb
cmp
sub
nop
push
aaa
sub
cs
ficoml
into
pop
xor
lret
inc
imull
pop
adc
push
push
cwtl
cmp
repz
dec
xchg
cmp
scas
inc
and
xchg
xor
dec
andl
sub
mov
sbb
bound
mov
ret
lods
inc
inc
insb
mov
sbb
pop
inc
xor
dec
mov
cmpsl
pop
shrl
not
pop
cltd
mov
insl
or
lcall
or
jmp
cmp
cli
cli
jp
mov
add
nop
jae
push
mov
lea
mov
mov
outsl
lods
movsb
pusha
in
cmp
cmp
xor
imul
out
jle
push
mov
setne
mov
xor
outsb
cltd
mov
xchg
rorb
outsb
fldt
pushf
bound
subl
inc
ficoml
cmp
shlb
stos
aam
lret
mov
enter
test
lods
pop
loopne
dec
dec
insb
cmp
jecxz
sub
cmp
popf
dec
xor
push
imul
div
and
push
stc
fisubrs
inc
mov
cmpl
lret
hlt
lret
icebp
mov
test
in
push
mov
inc
push
jbe
pop
push
and
push
pop
loope
subb
ret
jns
push
ljmp
sti
xchg
mov
stc
lods
insb
aad
insl
fndisi(8087
and
roll
sub
mov
mov
lcall
leave
addr16
jmp
rorl
xchg
cli
or
jmp
sbb
jmp
xor
call
add
push
jb
dec
xor
cmpsl
cmp
pop
shll
cwtl
mov
popa
inc
sub
cmp
mov
jbe
jmp
push
push
jb
jl
fisubrs
stos
int3
adc
je
jl
bound
jbe
dec
insl
sarl
popa
push
stc
and
sub
jge
in
mull
sbbl
jmp
xchg
and
insl
mov
jo
ret
mov
xchg
int
jl
hlt
inc
pop
cltd
out
bound
xlat
notl
mov
andb
xchg
and
pop
test
imul
push
lret
into
cmp
push
sti
cltd
and
jnp,pn
lret
insl
or
icebp
test
pusha
sbb
cli
mov
cmp
pop
mov
and
add
dec
jbe
pop
cmc
pushf
das
movsl
ds
es
lock
gs
rcrl
fsubl
add
into
test
xchg
push
xchg
mov
sbb
decb
movsb
outsl
inc
or
xchg
les
adc
inc
mov
test
dec
mov
lds
ja
xor
ljmp
lret
cmp
test
cmpsl
mov
jo
mov
xchg
test
lds
ret
xor
roll
sbb
repnz
pop
cltd
mov
cmp
xchg
rorl
insl
mov
mov
mov
cmp
and
adc
mov
add
fistpll
jg
pop
adc
addl
mov
lahf
cmp
pusha
scas
rcll
xor
mov
cmp
les
and
or
xor
out
imul
mov
pop
sahf
insb
dec
pop
addr16
mov
rcrl
dec
pop
mov
mov
pop
pop
lds
adc
push
es
subps
sbb
fists
inc
mov
mov
cs
out
xlat
xchg
mov
jle
insb
outsb
fwait
inc
adc
mov
cltd
jno
xor
sub
outsb
scas
shlb
add
mov
jecxz
scas
xchg
pop
rcl
call
ja
stos
out
out
imull
sbb
fbld
leave
jmp
push
mov
xchg
sbb
lods
enter
pop
or
inc
jmp
jno
xchg
cmp
dec
fwait
movsb
jmp
arpl
cmp
inc
ret
xchg
cld
push
sbb
xor
fwait
and
pop
fistpl
adc
rol
clc
in
jg
dec
out
mov
rolb
jno
aas
pop
adc
popf
scas
ficomps
in
push
jae
js
jnp
push
out
lods
mov
rcll
inc
fdivrs
pushl
aad
packssdw
mov
scas
pusha
and
adc
and
inc
inc
push
dec
outsb
je
div
add
insb
push
push
push
call
pop
push
push
sub
dec
lods
jecxz
es
cmp
insl
adc
lea
stc
data16
aaa
ss
popa
lods
js
xor
outsl
dec
sub
daa
inc
jp
mov
mov
jg
or
jnp
jecxz
imul
push
mov
xor
dec
lret
incl
push
pop
or
lahf
pop
stos
mov
inc
cmp
jae
cli
dec
fstl
lret
mov
xlat
xorb
daa
dec
mov
sub
sbb
lea
mov
ret
insl
adc
dec
and
mov
sbb
aas
push
sub
mov
nop
shlb
movsb
shll
inc
push
add
cmp
adc
fwait
sti
jne
rolb
xorb
push
mov
dec
mov
adc
sub
push
cmp
push
jmp
out
std
int
push
push
pop
mov
inc
push
xor
int3
xchg
mov
pop
xor
sbb
mov
mov
xlat
adc
mov
jp
pop
fmul
xor
xchg
add
add
jle
popf
push
stos
mov
rcll
xchg
clc
clc
popf
lea
fs
fidivs
cmp
or
cltd
adc
sub
dec
ret
popf
pop
popf
xor
xor
lret
mov
inc
gs
and
mov
or
cmp
xlat
iret
out
clc
arpl
mov
add
mulb
mov
sub
pop
push
add
pop
jp
mov
test
push
sbb
in
inc
push
cs
add
mov
jbe
dec
insl
inc
insb
mov
rcll
pushf
mov
jne
mov
dec
xor
jl
in
test
dec
popf
jns
aam
and
lahf
scas
pop
shl
ja
inc
mov
fwait
sahf
mov
xlat
jmp
push
out
popa
inc
xchg
cld
adc
dec
lods
js
mov
movl
addr16
mov
cmp
dec
repnz
outsb
jne
dec
inc
outsb
xor
cltd
sbb
lret
daa
mov
and
jmp
daa
loopne
mov
jb
out
push
pushl
ljmp
int3
mov
decb
adc
jo
cmc
movsl
jl
xor
pop
sub
leave
fsubrp
mov
lods
pop
cmpsb
xchg
or
aaa
and
add
mov
cmpsb
out
xchg
adc
arpl
sbb
decl
out
dec
mov
pop
mov
ja
fcomip
aam
sbb
pushf
adc
jne
mov
test
xor
test
movsl
push
adcl
jno
les
lock
andb
test
mov
into
xchg
scas
outsb
movsb
mov
arpl
dec
mov
mov
pop
ds
add
mov
xchg
xor
shlb
mov
xchg
in
ja
rorb
enter
ss
out
cmp
push
push
inc
enter
lahf
addr16
and
orb
inc
lods
loopne
and
insb
mov
stos
in
lret
mov
aas
scas
shlb
leave
dec
cmp
dec
fistpl
push
jmp
arpl
pop
cmp
push
cld
cwtl
fldt
sbb
outsl
and
cmc
sbb
mov
pop
mov
add
cs
lea
push
test
out
ljmp
das
loop
imul
sbb
and
dec
stos
fs
mov
dec
repz
mov
mov
rorl
cli
cld
jns
test
lock
pop
cmp
xchg
addr16
dec
pop
iret
xchg
test
movsl
lret
jae
cmc
mov
sub
repz
adc
cs
and
fsubl
jmp
inc
mov
in
dec
cmp
arpl
mov
xorb
adc
icebp
pop
mov
lret
pop
popf
lds
or
les
addb
sarl
aam
rcrb
fsubl
and
call
sub
addr16
adc
push
call
inc
push
push
dec
jbe
lods
xchg
cwtl
js
inc
inc
rorl
add
in
push
sub
jae
fists
fucomip
mov
loop
mov
mov
dec
ficomps
aam
mov
mov
ljmp
dec
sbb
rorb
dec
fcomp
add
mov
mov
push
adc
mov
and
aas
lret
daa
imulb
fisttpll
inc
inc
das
push
rolb
jb
jp
push
sbb
adc
mov
push
adc
sbb
dec
dec
push
mov
outsb
add
out
test
pop
lret
lock
mov
sbb
shrb
sub
cmpsl
mov
fnsave
cwtl
mov
mov
pop
xchg
popa
mov
enter
jl
and
dec
aaa
pop
bound
into
roll
negb
movsb
adc
lahf
push
mov
sbb
xlat
add
xchg
test
mov
push
imul
add
test
jae
push
push
ret
mov
out
push
jb
mov
and
fcomip
incb
inc
and
aas
xor
push
jno
push
inc
push
das
jbe
call
mov
fidivl
push
test
inc
cmpsb
adc
sub
adc
and
pop
push
and
dec
mov
rolb
mov
les
mov
ds
push
loop
test
push
or
cli
test
leave
sbb
stos
outsb
cs
rorb
adc
pop
add
jg
jp
cmp
loope
sub
icebp
pop
and
lret
cltd
pusha
add
pop
mov
lods
dec
jecxz
cmp
inc
sub
ljmp
sub
adc
and
cmp
add
mov
std
pop
add
xor
into
push
mov
and
addr16
test
push
lret
je
lods
insb
jecxz
int
push
aam
xor
jo
pop
movsb
inc
cld
and
gs
hlt
movsb
into
aas
add
xor
popf
lods
cmp
les
mov
mov
inc
stos
loop
in
push
imul
add
cs
movsl
xor
xchg
aam
add
mov
and
imulb
in
lock
shlb
mov
push
sbb
push
or
in
and
fisttpll
mov
xor
inc
mov
jmp
test
add
inc
push
popa
inc
xchg
lret
fwait
and
mov
sarl
pop
add
xchg
sbb
inc
xchg
push
iret
xchg
xor
in
cs
loopne
inc
add
xor
aad
mov
xchg
arpl
ficoml
arpl
fldenv
jge
and
gs
dec
aaa
fistpll
and
add
cmp
ss
inc
push
ret
aas
sbbb
mov
cs
fiaddl
xchg
jae
in
push
pop
jb
bound
push
sbb
mov
dec
add
cli
add
lods
xor
pop
push
adc
push
inc
loop
negb
mov
adc
fdivl
add
rcl
jo
insl
test
adc
pop
xchg
js
fs
xor
mov
add
rorb
mov
mov
stc
adc
pop
clc
jnp
sub
mov
mov
mov
xor
mov
pop
mov
inc
or
xlat
imul
inc
cmpsl
add
inc
les
jge
mov
lea
je
icebp
clc
mov
outsb
xorl
ljmp
es
inc
ss
cmc
add
popa
and
clc
iret
cmp
mov
pop
sbb
add
push
jo
out
lds
inc
adc
in
out
insl
rol
test
sub
pop
sbb
lcall
shrl
cmp
aaa
jae
dec
jmp
jle
cmp
aas
adc
cmp
pop
out
cld
mov
inc
or
cmpsl
in
fdiv
jg
mov
mov
dec
fsubr
mov
lcall
rcrb
jbe
mov
mov
sbb
cltd
pop
pop
add
or
pushf
mov
lods
lods
pop
jge
xorl
mov
mov
dec
inc
jp
adc
inc
sub
push
xorb
and
push
test
jl
sbb
jecxz
iret
add
out
test
test
mov
lahf
popf
inc
cmp
or
xor
sub
adc
insl
and
incl
lods
bound
add
std
stc
mov
add
cmp
inc
sub
inc
jge
ds
xchg
int
mov
pop
jne
dec
or
and
xor
cmp
ss
lahf
shlb
push
xchg
pop
ja
out
ret
xchg
push
inc
arpl
sub
in
outsl
add
fisttpll
add
mov
sub
movsl
jp
jle
inc
stc
int
cmp
sbb
cwtl
mov
movsl
int3
enter
push
in
outsb
pusha
mov
inc
mov
imul
shrb
iret
es
add
jmp
cltd
xchg
cmp
and
jecxz
int
xor
outsl
xor
push
mov
xor
push
mov
stos
sbb
in
insl
mov
sub
cmp
mov
adc
popf
rcrb
shl
in
imulb
dec
adc
into
clc
dec
mov
rclb
inc
rorb
jg
out
cmp
in
push
addr16
push
lea
sbb
imul
adc
clc
mov
mov
push
sbb
lahf
cli
in
out
jp
push
out
mov
andl
call
xor
scas
mov
pop
ss
cmp
int
in
notb
xor
nop
mov
adc
ffree
cmpsl
imul
xchg
push
jecxz
sbb
sbb
stos
cltd
enter
jbe
cld
cmpsb
sbb
test
int
pop
ret
sub
jmp
dec
mov
xchg
sar
jbe
push
mov
or
mov
rcl
pop
push
stos
pop
rorl
jl
cltd
into
rorl
movsb
dec
pop
dec
int
ljmp
fsts
dec
xlat
lods
sub
shll
jg
ljmp
mov
addr16
jecxz
std
stc
jmp
sti
jae
aad
and
mov
push
loope
pop
stos
jle
cmpsb
push
fld
loop
xor
in
mov
les
add
inc
call
cmp
pop
into
cmpl
sbb
jle
or
mov
pop
outsb
insb
sbb
mov
push
mov
pushf
rol
push
dec
je
mov
adc
outsl
popa
mov
jle
addr16
add
jb
or
stos
aam
icebp
mov
bound
mov
mov
pop
fisttpll
xlat
inc
clc
mov
subl
fsubl
pop
cmp
jle
pop
pop
int3
fimuls
in
fistpll
movsl
mov
mov
mov
inc
xchg
ljmp
or
cmp
dec
les
sbb
movsb
es
out
mov
in
movsl
jne
sub
movsl
xor
sub
clc
and
sbb
movsl
sbb
lock
push
jnp
jmp
shl
scas
mov
sub
scas
mov
test
in
push
scas
adc
jecxz
or
pop
int
add
aaa
push
sub
pop
dec
sub
rcl
mov
mov
and
stos
xlat
cltd
cmp
lds
sti
cmp
enter
iret
mov
pop
jo
enter
add
popf
xlat
mov
push
popf
fxch
cmp
dec
xchg
test
sub
js
cmpsl
data16
rcrb
outsl
mov
cmp
mov
orl
cmp
push
mov
dec
lret
pushf
jb
xor
xchg
mov
push
pop
dec
testb
int3
push
dec
adc
rcrb
outsl
xchg
cli
outsl
jns
arpl
inc
rcll
fcoml
push
fisttpl
icebp
mov
jmp
jbe
ljmp
outsl
mov
aam
ret
std
xchg
adc
lahf
cmpsl
fsubs
jbe
call
xor
loope
inc
js
js
xchg
test
push
test
fisttps
mov
test
dec
jo
test
out
xchg
xchg
xor
ja
jmp
sub
cwtl
pop
fdivrl
std
shr
mulps
mov
mov
fst
cmp
test
dec
mov
jp
push
lcall
scas
add
mov
or
dec
outsb
lock
sbb
mov
fildl
ja
outsl
ficoms
xor
adc
add
pop
xor
xchg
sbb
inc
enter
sbb
push
mov
stos
mov
lret
xchg
icebp
jle
dec
or
xor
cltd
setnp
imul
adc
or
mov
stos
mov
sbb
stos
sarb
add
xchg
xchg
adc
push
sbb
fnstsw
sub
sbbl
ljmp
cmp
pop
pop
sub
lods
mov
arpl
push
icebp
cmp
or
xchg
or
pusha
sub
cmp
fwait
cmp
mov
rcl
nop
sbb
in
scas
ds
icebp
stos
cmp
push
lods
movlhps
addr16
jle
cmp
inc
cmp
or
dec
dec
push
sub
ja
inc
xor
iret
jp
mul
mov
cltd
mov
adc
inc
cmp
leave
push
pusha
sbb
sbb
iret
inc
xor
fs
push
imul
sub
mov
fldcw
push
dec
cmp
pushl
lds
hlt
pop
cld
dec
xor
or
add
jmp
test
dec
and
inc
push
mov
add
leave
cmpb
cld
loop
test
fadds
je
add
pop
inc
lea
lret
cmpsl
dec
pop
aas
dec
out
int3
and
rcll
lods
outsb
cld
push
es
pop
xlat
jg
mov
mov
divb
cmp
fildl
mov
jl
popl
cmp
mov
xchg
lahf
or
in
subl
ret
or
add
mov
or
xchg
cs
pop
push
xor
icebp
dec
pusha
dec
sub
cld
adc
stos
pop
scas
push
xchg
inc
xor
stc
nop
nop
fs
pushf
sbb
int
aaa
jne
pop
inc
fwait
add
mov
push
test
addl
cmpsl
sbb
popf
pop
push
and
lret
test
cmpb
or
or
mov
jns
js
sbb
inc
in
adc
adc
dec
fildll
ds
sub
sub
outsb
push
or
push
mov
push
mov
inc
int
sub
test
and
fistpl
xchg
cmp
mov
xchg
push
mov
es
xchg
shl
cmpsl
lea
xor
test
fistpl
scas
sub
or
mov
mov
mov
mov
inc
xchg
jg
lods
aas
jns
sbb
cltd
pop
loope
lods
aam
call
test
push
movsl
or
subl
xor
movsl
arpl
or
je
idivb
fs
mov
data16
dec
fsubr
jle
pop
pop
xchg
cmp
insl
cmp
push
sbb
ret
fnstsw
in
inc
sti
mov
imul
inc
mov
dec
or
and
outsl
adc
jl
lcall
inc
outsl
push
or
mov
inc
or
pop
dec
sub
adc
mov
jo
cli
xor
xlat
adc
mov
push
pop
ss
pop
cmc
pop
push
out
in
dec
int
daa
loop
movb
shll
fildll
and
loope
sub
cmpsl
out
int3
and
jo
mov
jl
pop
loop
sub
or
jbe
stos
jbe
mov
dec
dec
int
xchg
loopne
lret
xor
bnd
and
mov
pusha
pop
shlb
stos
cmp
adc
dec
jge
js
sbbl
xchg
adc
dec
aam
lea
mov
outsl
les
push
jne
dec
and
data16
outsb
mov
imulb
dec
add
jp
add
sbb
hlt
cmp
aad
je
cld
push
mov
pushf
pop
lock
mov
dec
mov
or
push
je
sarb
ret
xchg
pop
aas
pop
pop
fidivrl
gs
bound
inc
jo
mov
sbb
mov
sbb
jbe
icebp
jne
jmp
sbb
fcoms
pop
das
xchg
pop
ja
xor
pop
pop
jg
and
push
add
pop
lea
add
cmp
jmp
push
popa
ret
jg
xchg
cmp
fsubl
divl
out
mov
test
and
shr
xor
pop
fadds
test
enter
jbe
mov
arpl
sbbb
mov
inc
jae
cmp
add
xchg
fcmovnb
adc
or
mov
cmp
pop
pop
dec
jo
das
cltd
push
xor
sub
cmp
mov
jne
iret
mov
js
jge
add
sbb
test
ljmp
mov
test
mov
dec
std
inc
mov
push
mov
sarb
or
lret
pusha
lds
sub
popf
cld
cmp
pop
sub
lds
into
js
push
push
xchg
dec
pop
mov
jge
xchg
mov
xor
movsb
enter
dec
fs
jle
fdivr
loop
dec
xor
xchg
dec
mov
scas
pop
popa
or
out
sub
and
dec
test
mov
cmp
inc
dec
inc
sub
stos
test
aaa
lcall
dec
adc
int3
xlat
inc
cmpsl
sbbb
jae
ljmp
dec
mov
pop
call
push
in
xchg
jbe
cwtl
aam
sbb
aaa
ffreep
jmp
xchg
notl
cmp
inc
scas
into
mov
mov
jmp
in
out
in
insl
add
mov
inc
lock
xlat
mov
or
shlb
jo
and
ret
add
mov
add
jge
jb
sbb
dec
pop
mov
insb
incl
mov
push
pop
xchg
mov
lret
fxtract
cltd
cmp
adc
mov
test
mov
fcoms
push
cwtl
aaa
xor
lret
nop
lret
inc
icebp
out
rcll
aaa
xlat
jmp
ret
dec
jl
testb
pop
mov
addr16
hlt
mov
repz
aad
fidivrs
jno
cltd
ss
es
call
bound
sbb
scas
out
faddl
xorl
insl
jbe
cli
sbb
pop
test
shlb
dec
add
test
jbe
ljmp
pop
cld
int
jmp
cmp
jmp
movsl
push
nop
push
in
sub
xor
sub
dec
push
test
daa
lahf
repz
mov
in
cltd
fisubs
les
mov
scas
add
xchg
stc
cwtl
out
addr16
rcll
jbe
das
xchg
in
mov
imul
imul
stos
es
sti
mov
lcall
fisubrs
jmpw
adc
mov
adc
xor
rcr
ds
cmp
inc
fs
stc
rcr
jo
push
and
int3
popl
fcomp
push
adc
movsb
test
push
rcrl
jo
mov
loop
jecxz
rcrl
sarb
lea
fisttpll
push
vphsubwd
xchg
adc
pop
sahf
mov
in
lds
dec
test
rcll
inc
mov
mov
dec
std
daa
dec
pushf
jmp
mov
std
xchg
xor
fs
xlat
std
xchg
fdivrl
xor
adc
mov
lea
dec
test
mov
mov
and
mov
les
fcoms
movsb
cmpsl
push
sti
mov
icebp
ret
pop
outsl
ds
out
adc
test
pushf
xchg
js
xor
out
push
sbb
jae
jg
jnp
aad
xchg
mov
jae
sub
and
sbb
addr16
popa
xchg
dec
or
push
xchg
sar
push
cmp
dec
dec
iret
mov
adc
inc
mov
fstps
or
fwait
inc
xchg
sub
in
pushf
push
push
out
xor
iret
pop
xor
lahf
out
dec
ss
testb
xchg
mov
mov
mov
outsl
mov
sti
cmp
rolb
rcrb
ret
jge
cld
data16
mov
xchg
cmp
mov
dec
push
lret
daa
xchg
fmul
loope
leave
mov
nop
jb
or
std
and
negb
pop
sbb
inc
add
dec
cmp
cmp
repnz
mov
push
jl
jbe
cwtl
scas
push
lods
and
push
hlt
pusha
cmp
push
add
mov
data16
push
hlt
jbe
mov
or
push
jnp
aam
cmpsl
in
sarl
lods
ljmp
cmc
dec
sbb
scas
insb
jmp
adc
dec
ret
cmpsb
out
rcrb
cmc
dec
inc
leave
inc
dec
fwait
cmpl
out
xchg
out
mov
pop
imulb
mov
pushf
lock
sbb
dec
inc
aas
aad
jns
mov
adc
insl
jo
and
aaa
cmc
sbb
inc
mov
jge
cmpsb
xchg
rorl
mov
push
mov
loopne
fs
sub
les
push
lret
out
stos
inc
and
lds
fcoms
hlt
add
rcrl
xchg
mov
lock
mov
iret
aas
mov
nop
repnz
adc
or
bound
add
mov
mov
leave
insb
add
cmpsb
lock
dec
or
loope
das
ret
sbb
sub
sub
xchg
sub
stos
cmpsl
and
sbb
mov
fimull
and
popa
cmc
popa
xchg
xchg
xor
iret
shlb
mov
inc
jecxz
lea
into
and
pop
nop
test
push
fsubr
mov
add
and
ds
adc
outsb
jo
fdivrp
mov
jne
cltd
push
sbb
ror
adc
popa
and
nop
inc
and
mov
jns
cmp
imul
sub
add
fldcw
aad
std
and
and
dec
xchg
lods
cltd
loope
in
lods
xchg
xor
ficoms
shrl
fnstcw
iret
xor
add
and
dec
cmpsl
sub
int
add
sahf
iret
sbb
cmp
loopne
pop
movsl
sub
scas
daa
rclb
lods
push
daa
pop
data16
and
stc
stc
and
and
cltd
pushf
push
call
int3
pop
mov
jecxz
scas
adcb
das
outsb
ljmp
or
jg
test
sub
orl
nop
loop
jmp
dec
xlat
add
not
imul
sbb
adc
cmp
outsb
fmull
adc
adc
pop
mov
insl
je
xchg
lret
cmp
outsl
mov
jbe
and
push
decl
lahf
sbb
jo
add
jo
aad
mov
xor
lods
push
mov
test
push
adcl
adc
ss
aad
mov
pop
cltd
shll
sub
inc
cmp
jl
cs
xor
mov
sub
sbb
add
cmpsl
ja
fsubrl
std
add
shlb
or
inc
jge
fs
dec
mov
pop
in
sahf
dec
addb
mov
lret
into
xor
push
out
fildl
xchg
test
not
iret
push
ret
mov
loope
in
cs
xchg
add
jecxz
xchg
lea
sub
sub
leave
mov
iret
push
push
sub
arpl
xchg
sub
fwait
push
mov
fldcw
sub
mov
test
mov
mov
push
mov
popa
push
or
pop
fstpl
out
out
scas
ret
out
popf
lret
in
leave
stos
adc
pusha
sub
add
xchg
insl
nop
push
xchg
nop
cmpsl
int3
bound
lret
mov
dec
mov
and
out
clc
scas
ret
adc
fiadds
sbb
daa
arpl
cmp
inc
cli
inc
repz
xchg
lahf
jnp
movsl
pop
in
and
sahf
dec
lods
or
shr
aad
or
sub
mov
nop
scas
movsl
push
lock
dec
push
into
xchg
aaa
repz
mov
mov
push
rcrl
add
fidivrl
stos
sub
movsl
fcom
inc
jle
push
sub
cwtl
das
enter
or
in
and
lcall
ds
mov
sbb
icebp
shll
cltd
lret
dec
sbb
inc
cmp
stos
sub
shll
fisttpl
das
inc
int
adc
mov
daa
stc
and
mov
sbb
lret
or
dec
xlat
inc
shll
fs
mov
or
insb
add
xchg
scas
aas
orb
push
cwtl
adc
fstps
loopne
les
pop
cmpsl
jo
or
jg
ret
sbb
aaa
xor
xor
aaa
add
test
push
push
jae
pusha
movsl
sarb
xchg
rorb
fnstcw
fstps
pop
rcll
push
inc
cmp
sti
jl
out
or
std
imul
pop
cmp
les
pop
adc
out
push
push
lret
loop
and
dec
es
or
sub
lret
xor
dec
xchg
inc
sbb
add
stos
adc
les
add
push
mov
mov
rcrb
jmp
fdivrl
add
arpl
sti
mov
lret
fucom
into
sub
xchg
das
jle
dec
cmp
test
clc
les
push
lcall
sub
mov
in
lds
mov
stc
push
fisubrl
push
jmp
lods
les
dec
inc
push
into
cltd
out
or
xchg
mov
lds
cld
inc
xchg
cmp
mov
mov
das
sbb
lea
xor
ror
and
stos
outsb
sbb
dec
sar
mov
cmp
in
int
test
mov
jo
jns
xlat
or
jmp
orb
movsb
out
adc
inc
mov
mov
jmp
cli
fcmovnbe
dec
push
es
inc
lcall
in
inc
cli
ja
cmp
xor
adc
jl
adc
icebp
movsl
outsb
sbb
daa
xchg
cmovae
mov
jmp
sbb
aam
movsb
mov
ss
inc
xchg
xchg
or
and
pop
ficoml
add
orl
and
test
xor
ds
loop
mov
cs
bound
fldl
inc
repnz
dec
inc
mov
in
iret
jg
or
push
pop
imul
imul
push
int3
adc
inc
dec
ret
ret
lea
repz
outsl
jle
pop
sub
roll
sub
sub
and
fadd
outsb
mov
and
adc
mov
loop
mov
idivb
mov
mov
insb
aas
jmp
cltd
mov
imul
movsl
icebp
sub
sbb
cmp
iret
cmp
mov
cmp
xchg
into
popf
xchg
sub
xlat
popa
mov
lret
inc
xchg
inc
je
mov
xchg
xlat
mov
fldcw
cmp
cmc
fadds
mov
xor
fcoms
or
testb
psubusb
push
cmp
ja
test
adc
add
sbb
push
or
int3
jae
push
xchg
out
sub
xor
les
push
and
inc
jae
mov
inc
sub
or
xchg
pop
dec
sub
cmpb
lret
or
jno
test
sub
xchg
xlat
cmpsb
sub
dec
int3
scas
or
call
nop
enter
jle
lcall
pop
sub
pop
push
inc
push
add
jmp
insl
mov
in
adc
xor
out
mov
cmp
arpl
jns
aas
add
hlt
loopne
inc
and
mov
jp
jnp
ret
dec
fidivrs
sub
add
cwtl
shrb
pop
out
adc
sahf
mov
mov
mov
std
int3
lea
repnz
mov
jle
movsb
inc
popf
bound
cmpsl
mov
jmp
ss
pop
mov
outsb
movsb
mov
cli
or
add
daa
xchg
out
test
sbb
movsl
jb
push
clc
ret
in
jbe
xchg
test
int
sarb
test
notl
dec
and
leave
and
jno
mov
mov
data16
mov
xchg
icebp
push
pop
int
push
rolb
repnz
dec
fisttps
add
lock
je
or
fisttps
cmc
adcl
mov
iret
cmpb
imul
sahf
outsb
sti
mov
add
mov
stos
insl
sbb
sub
cmp
xchg
fldenv
mov
cltd
mov
adc
xor
lahf
data16
push
mov
lods
cmpsl
les
jp
sbb
stc
cmc
int
inc
push
fists
int3
dec
jns
lret
add
out
and
mov
imul
mov
insb
sbb
imul
out
inc
mov
repz
jno
pop
sub
das
lret
push
dec
dec
mov
notb
dec
add
adc
pop
add
iret
inc
arpl
xor
push
fwait
mov
mov
jp
or
xor
repnz
popl
adc
mov
cmp
sti
jno
sub
rorl
mov
jmp
jg
loope
mov
dec
test
jo
xor
pop
addr16
push
aas
sbb
add
jg
xor
cmp
add
jbe
mov
shl
jns
mov
rcrb
xor
outsl
loope
pusha
cmp
icebp
rorl
mov
loop
shrl
or
int
into
fdivrs
sub
ret
xchg
out
out
ret
mov
xchg
loop
push
sub
ret
subl
dec
lods
outsl
cwtl
imul
cmc
adcb
xorb
dec
stos
or
shll
cs
pop
popa
fs
lcall
test
mov
aam
mov
adc
mov
aas
inc
xor
loope
cmp
add
mov
sahf
jl
jnp
inc
mov
mov
or
rorl
xchg
mov
mov
sahf
enter
mov
cltd
inc
sub
aad
jle
xor
ret
test
mov
stos
pop
cmpsb
jo
ffreep
scas
xchg
mov
adc
scas
sbb
repz
dec
inc
dec
daa
stos
in
jecxz
sub
shll
rcrl
dec
cmp
in
aad
push
out
lret
aam
add
ficoml
mov
popa
loope
xor
out
shl
enter
fimuls
arpl
jno
mov
push
mov
or
mov
mov
push
add
adc
mov
add
pop
mov
ret
push
insb
rclb
add
xchg
and
xor
std
push
and
sub
jae
popf
pop
sub
or
cmp
push
pusha
lods
adc
lock
icebp
pop
jl
loop
jge
cmpsl
mov
xchg
inc
rcrl
adc
shrl
xorb
jp
in
aas
and
mov
nop
dec
mov
das
sbb
cmc
mov
push
sbb
stos
push
xchg
mov
js
pushf
inc
push
cs
ret
das
add
mov
mov
cli
inc
ljmp
pushf
in
xor
inc
xor
and
daa
jns
pop
ret
lret
cmp
sub
ret
cwtl
leave
sub
fs
inc
xchg
fadds
lods
xor
aas
cmp
test
push
sub
std
pushf
into
jo
cmp
cld
mov
sub
push
js
sbb
test
jmp
xor
cmp
mov
iret
ds
adcw
inc
std
aas
loop
push
or
jl
push
popa
rorb
pop
push
leave
cmp
xchg
addr16
ja
fdiv
xor
mov
push
lahf
inc
push
shr
out
xchg
fwait
mov
pop
xorb
outsl
adc
rcrb
shl
lahf
out
cmpsb
pop
aad
stc
mov
or
shrl
sub
cmp
cmc
cs
pop
jecxz
mov
or
test
jae
mov
and
push
mov
rorb
aas
jns
jb
cmc
roll
jb
negl
jnp
packssdw
in
out
cli
sub
dec
mov
mov
jb
xor
call
aam
inc
mov
or
xor
data16
je
and
mul
cmp
scas
pushf
lds
cwtl
mull
negb
jl
xchg
movsl
orb
xchg
pop
mov
loop
ss
int
nop
sbb
fdiv
sub
pop
sub
xor
scas
test
testb
or
sub
je
pop
mov
xor
dec
enter
into
loopne
leave
mov
adc
outsb
jle
stos
and
jle
ljmp
xchg
fdivrs
pop
pusha
add
test
in
fldt
pushl
mov
pop
sarl
arpl
data16
rorl
fmuls
add
adc
jp
cli
sub
xor
iret
and
in
in
repnz
leave
jmp
sbb
add
movsb
data16
test
jl
mov
rcl
fistps
repnz
stos
into
sub
js
and
xchg
mov
push
lret
mov
loopne
mov
xchg
in
xchg
out
add
inc
or
stos
int3
and
and
pushf
push
in
mov
gs
cmpsb
out
dec
mov
jge
push
pushf
loop
lock
xchg
les
aaa
pop
aad
test
xor
mov
xchg
mov
pop
jecxz
jp
xchg
adc
add
jge
push
iret
cmpsb
cmp
mov
mov
pop
int3
sbb
pushl
sbb
mov
rcrl
pop
test
push
mov
inc
not
push
xchg
or
inc
fucompp
xlat
scas
popf
bound
movsl
movsb
xorb
test
jge
pusha
adc
fldt
aad
adc
xchg
and
je
add
icebp
aas
jecxz
in
fdivr
add
call
aas
mov
mov
mov
mov
pop
mov
imul
imul
jns
sub
add
arpl
mov
and
test
cmp
je
cmpsb
fcompl
fwait
xor
subb
push
daa
lods
imul
lahf
call
push
cmp
inc
outsb
mov
mov
adcl
xchg
scas
js
cmp
hlt
into
xchg
repnz
sub
mov
shll
pop
fmull
pop
xchg
cmp
inc
std
cmp
mov
inc
mov
push
inc
stos
daa
or
xchg
ret
and
subl
lods
cmp
scas
pop
xchg
aas
jbe
mov
call
ja
jl
mov
lods
inc
out
jecxz
push
inc
xor
outsl
pop
sarl
jbe
push
jbe
js
js
xor
roll
clc
push
cmp
icebp
or
pusha
ss
push
or
cltd
aam
repnz
sbb
ds
and
pushf
sbb
clc
jnp
daa
imul
cmpsb
jp
sub
int3
das
xchg
mov
imul
fsubrl
pop
lods
aad
aam
pusha
lret
mov
jne
jp
and
dec
enter
xchg
call
int3
inc
call
cmp
test
scas
and
sbb
cmp
push
push
neg
lods
push
nop
and
aad
sub
ficoml
lahf
mov
xchg
inc
push
fldl
addr16
mov
sbb
andb
push
dec
mov
push
addr16
push
mov
push
icebp
data16
xchg
sbbl
push
push
sbb
or
fsubl
rcrl
xchg
movsl
pop
cld
mov
test
lock
out
mov
ret
push
nop
cld
ror
jp
sub
into
inc
xchg
pop
imul
dec
je
das
or
fdivp
leave
xchg
push
mov
inc
xchg
rorb
xchg
cmp
adc
ret
inc
sbb
sub
sub
mov
cmp
loopne
inc
dec
les
xlat
jo
ljmp
add
fs
adc
xor
inc
nop
inc
test
adc
daa
test
push
dec
sahf
rolb
push
enter
adc
jnp
inc
sbb
imul
fcoml
loope
push
out
outsb
lahf
push
jnp
pop
xor
insl
dec
outsl
stos
add
out
insl
mov
push
clc
add
sbb
or
jnp
dec
popa
cld
out
cld
cmp
in
sahf
xor
aaa
mov
dec
push
xor
je
js
rcll
inc
fcomi
leave
imul
ds
xorb
sub
sub
mov
jne
add
lahf
clc
loopne
loopne
jno
scas
out
lock
and
pop
in
cmpsl
hlt
pop
xchg
cmp
sub
and
sub
outsl
repnz
in
sbb
mov
push
iret
neg
jne
mov
cmp
mov
enter
mov
pop
fsubr
mov
push
je
lahf
nop
push
aaa
fdivl
adc
jge
ljmp
push
jns
aaa
jmp
or
add
push
ja
test
mov
in
mov
repz
loopne
aas
movb
das
sub
jg
adc
loop
icebp
testl
mov
fisubl
mov
scas
nop
aaa
adc
bound
divl
and
mov
sub
pop
push
xlat
push
mov
adc
add
popa
stos
mov
lahf
mov
loopne
jno
imul
out
jle
int3
push
pop
and
lods
mov
push
ja
sahf
mov
in
test
dec
mov
pop
push
xchg
sub
xlat
mov
outsl
xor
sub
nop
sub
xor
push
ja
in
pop
enter
int3
test
pop
gs
push
stos
adc
pusha
js
popf
pop
sbb
mov
or
dec
test
mov
mov
scas
std
adc
rcrl
xchg
pop
and
out
mov
add
add
xchg
std
scas
dec
sub
rorb
das
daa
mov
dec
sarb
ja
outsb
icebp
cs
or
rorl
nop
inc
dec
jmp
and
pop
xchg
pop
fimull
and
loope
xchg
or
xor
cmp
mov
repnz
clc
cli
pop
mov
push
mov
inc
mov
xlat
loop
xor
xchg
push
out
fidivs
bswap
adc
fdiv
dec
roll
cwtl
or
push
adc
mov
mov
xchg
push
sub
lock
test
cmp
jbe
and
fbld
fisubs
jge
fmul
sbb
mov
push
pop
push
dec
jno
jecxz
loope
lea
xchg
or
inc
in
mov
fs
pop
xor
mov
jmp
insl
pop
inc
push
scas
sbb
insl
or
push
and
xorl
pop
mov
jo
imul
andb
dec
ret
or
inc
or
lcall
add
and
fidivs
jle
repnz
orl
inc
xchg
subb
inc
jle
fistl
sub
adc
mov
jg
mov
ljmp
mov
jbe
daa
sti
mov
lods
pop
push
xchg
cmp
jbe
and
push
mov
pop
mov
cmp
sbb
les
jae
in
pop
iret
sbb
pop
mov
test
repz
sub
in
xor
scas
lds
and
test
out
mov
push
ds
inc
jmp
xor
inc
ds
dec
inc
out
pop
push
ljmp
push
and
mov
rcr
out
jle
mov
adc
ljmp
mov
lds
into
out
push
mov
xor
jg
fldcw
subl
stos
jl
idivl
and
cmpsl
inc
out
and
inc
cmpsl
stc
ja
jno
pop
stos
jne
and
enter
out
loopne
cwtl
or
jae
mov
loope
mov
sub
push
pop
mov
dec
dec
mov
mov
out
pop
popf
jge
pop
add
outsl
jge
mov
mov
daa
daa
orl
jecxz
stos
mov
pop
or
arpl
jle
sarl
mov
cli
mov
sub
test
xchg
sar
push
lods
push
mov
jp
sbb
add
pop
movsl
sub
mov
push
add
ret
sub
in
mov
jge
cli
sbb
push
jmp
or
jb
mov
cmp
inc
rorl
adc
add
jp
ds
popa
mov
dec
mov
mov
add
mov
add
push
lret
lahf
sbb
pop
jg
adcl
lahf
sti
scas
pop
and
lret
aam
sub
xor
xlat
sub
jmp
ja
rcrl
loopne
cmp
mov
jle
std
pop
das
shrl
inc
adc
popf
sub
fnsave
addl
and
scas
xchg
push
ret
out
sub
sbb
and
xor
push
stos
xchg
inc
pop
fld1
mov
or
jo
mov
mov
mov
mov
and
jb
icebp
xlat
ret
cli
or
or
push
lods
stos
mov
test
mov
imull
jo
push
icebp
mov
fwait
add
pop
out
jae
xlat
subb
xchg
mov
sub
lcall
lahf
mov
mov
mov
sbb
divl
sub
adc
or
in
mov
cltd
xchg
dec
dec
into
mov
mov
jle
addl
and
mov
insl
jno
push
adc
jno
cli
dec
pusha
enter
mov
aaa
hlt
xor
cmp
pop
mov
inc
cmpsb
inc
insb
das
or
sarb
mov
cmp
xlat
setns
in
inc
sbb
xchg
rcrb
rorl
pop
data16
iret
in
fistl
xlat
adc
and
or
sub
and
cmpsl
insl
inc
scas
ret
add
fs
shll
push
fsubs
rcl
jmp
dec
mov
dec
mov
and
add
xchg
out
cld
adc
addb
mov
lock
cmp
dec
popf
cmp
xchg
fcoml
lods
ret
pop
scas
gs
sbb
adc
mov
mov
hlt
mov
sahf
add
push
or
popa
cwtl
fcmovu
iret
hlt
sub
hlt
mov
pop
scas
jne
inc
adc
shrb
jns
or
or
jo
fisttps
rol
cmp
mov
xchg
add
xor
cmpsl
push
lods
jmp
sbb
jnp
outsb
xor
mov
pusha
loop
mov
inc
enter
paddq
push
cmp
loopne
mov
pushf
jge
outsl
fwait
ud2
inc
sbb
gs
cmp
mov
pop
loopne
shll
cmc
adc
xlat
fst
push
dec
mov
ja
nop
pop
je
fs
xchg
dec
and
fidivl
adc
inc
lods
js
nop
pushf
std
dec
mov
das
leave
lods
pop
shll
pop
cmp
add
add
sbbb
cmpl
lds
mov
adc
in
shlb
stc
mov
hlt
in
push
push
xchg
jge
and
jb
icebp
mov
dec
push
stos
int
sar
cmp
popf
loopne
push
int
push
sar
test
lret
jl
in
rcrb
cs
mov
push
sti
lret
mov
fiadds
adc
repz
jae
lds
jge
jo
fisubs
mov
adc
dec
sbb
rcrb
cmp
popa
mov
mov
ds
sub
sub
dec
mov
test
or
in
pusha
xchg
ficoms
cmp
xchg
sbb
lret
addr16
mov
jno
push
xor
imul
loopne
pop
icebp
stos
xchg
inc
cmp
add
add
sbb
popf
movsl
daa
xor
arpl
push
mov
arpl
imul
mov
inc
cmpsb
sbb
jnp,pt
or
and
sbb
push
lock
jp
shr
sbb
sti
push
cmp
sub
mov
fisubl
fisubs
xchg
je
push
xor
lcall
inc
mov
mov
sbb
inc
iret
pop
rorb
cmp
clc
testl
sbb
imul
jl
mov
mov
scas
xor
adc
aaa
fiadds
mov
dec
inc
cs
mov
mov
xor
jp
mov
insb
add
mov
ljmp
imul
or
adc
pop
popf
and
or
xor
add
int3
push
mov
fs
fldcw
sbb
add
pop
mov
int
shrb
dec
xchg
pop
sbb
xchg
cmp
fidivs
js
out
mov
inc
sub
mov
fldcw
mov
cmpb
jb
pop
out
fwait
mov
jge
jne
notb
mov
outsb
inc
push
dec
jo
push
pop
shlb
adc
into
out
popa
pop
insl
adc
and
cmp
mov
mov
adc
pop
movsl
idivl
lret
ja
or
add
sti
cld
inc
divl
test
daa
jl
inc
lret
xchg
cmp
and
enter
jne
add
scas
ficoml
jbe
mov
mov
mov
add
out
jo
insl
sti
jecxz
lret
iret
pop
dec
mov
in
movsl
jne
or
lret
xchg
inc
cs
cmc
loop
add
sahf
es
adc
push
in
repnz
or
stos
xor
jb
inc
in
rorb
mov
mov
cwtl
mov
lea
arpl
cmp
mov
outsb
inc
and
aaa
push
inc
iret
subb
cmpsb
bound
xor
cmpsl
insl
movsl
xchg
dec
lods
sahf
mov
sbb
dec
cmp
fst
loope
mov
movsb
sbb
pop
stos
sub
sub
lret
pop
pop
add
mov
push
in
pop
pop
sbb
fisubl
jp
fisubl
push
lret
jg
jbe
rorb
mov
lds
jmp
pop
imul
sub
sar
adc
mov
stos
sub
arpl
pushf
jle
and
push
mov
fsubl
sahf
jbe
sahf
adc
dec
adc
dec
or
stc
mov
add
xchg
add
fwait
or
insl
cmp
xor
and
aad
std
add
add
rcll
xchg
ret
push
pop
ret
loop
mov
frstor
mov
jle
xchg
mull
push
sub
cld
aam
push
ss
fiadds
cmpsl
popf
loop
icebp
dec
data16
and
and
pop
jle
jmp
insb
mov
out
in
xlat
xchg
cmp
dec
je
cwtl
dec
lods
and
mov
daa
cwtl
fisubrl
sub
mov
push
sbbl
jl
sub
xor
inc
nop
pop
ds
mov
push
jno
add
xchg
cltd
jge
push
push
mov
push
or
inc
gs
aad
adc
pop
daa
mov
bound
adc
mov
push
incl
lcall
pop
stos
out
jo
test
ret
insb
pop
jnp
sbb
popa
lock
repnz
sahf
arpl
dec
mov
insl
xchg
in
push
ret
sahf
pop
cmp
xchg
out
jne
mov
and
or
and
pop
rclb
stc
lret
insl
jp
aaa
lods
das
mov
mov
testb
xchg
dec
lods
sub
mov
ret
lock
pop
xor
ds
dec
xchg
mov
shl
test
adc
aad
ss
hlt
and
dec
std
nop
add
out
mov
hlt
out
add
test
test
gs
int
inc
mov
jnp
pop
in
aad
mov
pop
jns
sub
push
xchg
int3
jmp
lahf
inc
aaa
jl
mov
hlt
scas
pop
xor
pop
dec
pop
add
jle
inc
dec
dec
mov
adc
add
xor
jle
addb
imul
sbb
inc
scas
mov
mov
mov
mov
cli
inc
sub
mov
xchg
pop
test
cmpsb
pop
fbstp
dec
ds
adc
movsb
outsb
or
cmp
outsl
rorb
jno
mov
jnp
jno
pusha
cmp
inc
jle
rcrl
test
mov
mov
mov
dec
lret
hlt
pop
sub
pop
shll
fs
pop
in
fsub
adc
inc
mov
cmp
cli
sbb
lds
sub
pop
mov
inc
inc
dec
cmp
pop
dec
mov
pop
lea
scas
loope
out
sub
sti
dec
pop
sub
cwtl
lahf
push
loopne
inc
push
rcl
mov
jb
lea
insb
dec
lock
in
loope
les
loopne
in
mov
mov
xchg
cmpsl
dec
cmp
outsl
push
and
stos
mov
adc
dec
repz
adc
movsl
or
push
ret
cld
jl
ret
faddp
or
xchg
mov
test
jge
jmp
xor
jno
stos
call
fisubrs
xor
out
mov
jae,pt
sub
pop
test
mov
fdivrl
fistpl
mov
xor
push
stc
repz
cmp
sti
adc
xchg
imul
sub
cmp
lcall
xor
and
mov
cmpl
gs
int3
pop
hlt
shlb
jbe
adc
dec
adc
or
rorb
mov
xchg
mov
fbld
and
aad
stc
or
xchg
add
ja
fsubrs
out
bound
imul
cmp
xchg
out
and
add
fwait
ror
sti
pop
scas
rcrl
add
xor
test
jno
jp
xchg
push
loopne
dec
mov
and
fidivl
ss
outsb
inc
xchg
repnz
xchg
scas
addb
les
imul
in
aaa
sbb
jl
or
insb
in
and
ljmp
popf
addr16
dec
test
sti
push
ljmp
sub
cmpsl
pop
es
je
cmpl
dec
xlat
cmp
push
add
or
shrb
add
wbinvd
mov
cmp
hlt
clc
inc
es
lret
adc
shlb
adc
and
inc
enter
enter
pop
sub
inc
mov
xor
cmp
out
fiadds
inc
push
cltd
imull
lea
insl
mov
cmpsb
imul
sbb
push
cli
repz
es
push
ljmp
or
cmp
jp
aaa
out
jae
push
or
ljmp
mov
pop
sbb
jg
testb
jl
sub
mov
mov
add
fwait
mov
movsb
jg
jns
adcl
lods
pushf
pop
fwait
andb
js
arpl
mov
adc
fsubrp
outsb
jg
adc
fistpl
fsubrs
out
pushf
mov
mov
mov
popf
into
into
sbb
xchg
or
push
mov
mov
lods
pop
pop
mov
push
clc
jne
jmp
icebp
mov
inc
xor
pushf
inc
jp
sbb
in
nop
ss
adc
outsb
sbb
or
and
cli
cmpb
sbb
sub
jecxz
xlat
cs
cmc
mov
cltd
roll
cmp
or
stos
cmp
cmp
or
pop
inc
pop
mov
jp
aad
fcomi
mov
cmp
mov
and
mov
std
call
xor
hlt
cmp
dec
mov
movl
mov
xchg
sbb
mov
movl
fcompl
xchg
das
pop
inc
sarl
and
xlat
mov
pop
sub
jno
test
mov
ds
iret
out
ret
loopne
push
cmp
push
rorl
stos
add
mov
push
in
mov
cmp
scas
and
iret
mov
push
adc
std
pop
les
call
jo
xor
pop
pushl
ljmp
out
lcall
jno
add
ficoml
loopne
mov
aas
rolb
jbe
test
nop
fcomp
jbe
mov
xchg
std
mov
add
cmp
sub
sahf
in
dec
pop
mov
insl
outsb
xor
idiv
cmp
popf
les
pop
stos
int3
pop
xor
mov
in
js
lahf
xor
subl
add
lods
dec
cmp
jne
xchg
sbb
stos
push
mov
xchg
mov
jo
imul
in
mov
jp
pop
aad
js
rorl
push
lods
jnp
mov
rclb
mov
rol
push
leave
inc
jnp
cmp
xchg
insb
lret
jne
push
inc
int
pop
push
stos
mov
mov
xchg
push
dec
lds
xor
rcrl
inc
repnz
add
dec
and
dec
or
mov
and
pop
stos
test
lcall
das
daa
xor
sbb
bound
pushl
cld
int3
mov
or
insb
notl
std
addr16
xchg
pop
pop
adc
loope
test
adc
inc
sbb
lods
add
push
mov
and
mov
cmpb
je
jl
mov
mov
movsb
cmp
pop
pushf
inc
inc
cs
jb
in
pop
jne
aam
xchg
xchg
push
add
inc
xlat
decb
sub
clc
pusha
mov
sub
push
xchg
push
std
inc
std
enter
cwtl
fisubrl
push
push
test
in
mov
dec
in
xchg
int3
mov
inc
inc
mov
mov
inc
push
aaa
cwtl
arpl
xchg
sbbl
enter
loopne
inc
adcl
inc
test
movsl
pop
adc
sti
outsl
sbb
js
inc
mov
adc
aam
jb
stc
outsb
stos
shrb
aad
mov
in
aam
xor
int
cwtl
inc
mov
mov
push
cmp
or
add
fiaddl
sub
clc
cs
jecxz
or
aaa
and
arpl
pop
arpl
xor
push
cmp
mov
shrl
or
popf
adc
inc
cmc
jge
mov
outsb
mov
xchg
sahf
enter
sbb
aad
inc
scas
aad
jo
pop
sbb
adc
loope
adc
pop
js
in
rorl
mov
js
pop
fidivrs
outsl
inc
or
adc
dec
pop
dec
outsl
test
push
jnp
bound
aad
sahf
or
and
hlt
rcrl
insl
mov
cmp
jecxz
in
or
push
pushf
ja
imul
adc
addb
aad
inc
rorl
sbb
push
nop
cmp
outsb
ret
mov
sub
sbb
pop
pop
aaa
dec
jo
xchg
sub
jecxz
push
jmp
and
and
mov
dec
movsl
movsb
cs
das
leave
nop
cwtl
sbb
fisubrs
push
xchg
mov
fwait
mov
xchg
mov
mov
dec
jle
mov
inc
xor
mov
imul
sti
icebp
and
jmp
test
les
fwait
ja
adc
and
push
shl
push
and
push
dec
stc
jg
pop
cmpsl
daa
popa
cmp
cmp
sub
sbb
xchg
mov
mov
sbb
sahf
subl
add
inc
pushf
jo
push
loope
pop
mov
cltd
mulb
lea
mov
gs
xchg
enter
pop
mov
divb
mov
cmpsb
or
add
mov
jge
cwtl
mov
mov
insl
cmp
addl
in
daa
add
je
dec
push
testb
add
add
arpl
hlt
cmp
sti
sub
lds
inc
movsb
icebp
sub
loopne
aaa
iret
movsb
je
outsb
adc
and
into
ljmp
xor
mov
hlt
mov
ja
fadd
ficompl
xlat
idiv
push
sbb
mov
dec
pop
insl
test
call
pop
insl
imulb
xor
in
lcall
cmp
inc
cs
adc
stc
into
les
push
int3
xor
sub
sbb
push
out
ds
cmp
mov
mov
sbb
popf
scas
sub
sahf
stc
add
add
jle
imulb
fwait
cltd
add
xor
jo
div
js
addr16
scas
adc
ret
enter
enter
ds
mov
idivl
cmp
out
cld
pop
mov
inc
test
mov
or
adc
push
and
cli
fs
out
adc
xchg
jae
repnz
decl
jne
test
sub
and
push
cs
addr16
adcb
sub
loopne
sti
inc
inc
nop
ss
inc
jnp
or
cli
pop
ret
mov
call
mov
test
jl
dec
inc
cmp
mov
into
mov
jp
or
push
adcb
repnz
inc
loope
xor
mov
lcall
jl
out
icebp
push
xor
aam
outsb
pusha
scas
sub
sbbb
jecxz
popa
or
or
lods
call
cmpsl
test
push
jo
sbb
push
jbe
or
repz
dec
or
imul
dec
orb
insl
mov
ja
pop
add
jne
xchg
jl
xor
loope
imul
sbb
movb
xor
cltd
ficompl
out
das
mov
sub
scas
lods
test
xor
lock
leave
fbstp
inc
or
jno
dec
call
sub
adc
xor
cmp
fcomi
cmpsb
inc
sahf
xor
sub
jno
mov
sub
push
in
bound
stos
out
aad
inc
mov
std
jecxz
pop
add
popa
mov
aas
out
lds
jo
xchg
shll
fcmovnbe
int3
jge
mov
or
sbb
test
sbb
add
fcmovbe
aas
push
loopne
xor
inc
les
test
iret
into
sub
push
or
test
mov
jno
mov
insb
xlat
push
or
fdiv
mov
nop
in
notl
popa
icebp
cltd
mov
in
in
cmpsl
shlb
xor
add
imul
lods
jno
jmp
mov
or
or
test
aaa
imul
js
ljmp
jmp
scas
add
insl
jnp
xchg
stos
addr16
mov
jo
push
enter
cmp
ja
adc
add
shlb
cs
repz
int
je
add
sbb
xchg
mov
push
xor
sar
jbe
test
push
pushf
aas
or
xor
cld
sub
xchg
mov
xor
loop
test
int3
ds
test
out
mov
shlb
xor
dec
push
inc
int3
inc
pop
jo
sub
sbbb
pushf
mov
dec
lcall
popf
sbb
stos
mov
in
loope
ret
loop
test
fyl2xp1
rcrb
and
sub
mov
sbb
shll
cmp
ja
fwait
loopne
inc
rcrl
xchg
or
cmp
mov
mov
insl
popf
mov
test
mov
adc
dec
sahf
jae
idivl
scas
enter
lods
xchg
ret
ds
and
repnz
out
pop
push
pushf
add
cs
push
scas
cmp
sub
dec
fcomps
sahf
jns
mov
ret
sti
scas
out
into
in
mov
cmp
or
sbb
scas
rep
mov
mov
push
fcoms
and
mov
pusha
pop
outsb
adc
pop
das
hlt
pop
inc
mov
insl
jmp
cmp
jle
sbb
stc
nop
rcrb
dec
xor
xchg
jbe
sub
cltd
add
arpl
mov
mov
adc
fisubrs
sbb
cmp
addl
sbb
adc
and
fcompl
dec
shrb
ss
push
cli
and
jne
cmp
push
int
xchg
out
mov
pusha
push
mov
pushf
push
add
nop
lcall
dec
dec
adc
mov
enter
mov
adc
push
pushf
pop
pop
inc
repz
mov
cli
mov
pop
repnz
add
imul
inc
inc
push
cwtl
fcomi
lea
aad
ds
xchg
mov
cld
xor
add
psraw
mov
jbe
add
mov
stos
arpl
lea
inc
inc
mov
mov
dec
in
push
xlat
popa
aaa
sub
scas
cltd
addr16
xchg
add
hlt
push
dec
adc
cmp
out
in
inc
fdivrs
flds
xchg
fs
inc
aas
sub
je
sbb
xor
mov
incb
arpl
lret
insl
repnz
jg
lea
les
dec
push
movsb
xchg
adc
sbb
in
mov
pop
adc
xor
aad
sbb
je
adc
sub
into
and
aad
sub
xchg
scas
aam
xor
inc
lahf
imul
cmpsb
dec
lods
or
jg
flds
sbb
jl
sbb
test
cmp
mov
cmc
inc
jl
sti
mov
fcmovb
xor
mov
jbe
shrb
mov
bound
jmp
aaa
sub
iret
and
or
test
push
scas
dec
lea
sbb
xchg
cmpl
fldt
jns
xor
xchg
add
sbb
jno
xor
sahf
pusha
pop
mov
icebp
pop
movsl
test
push
test
jnp
mov
pop
pop
popf
cltd
cmc
pop
jb
idivl
pushf
push
ret
aas
xlat
sbb
adc
mov
push
test
das
dec
icebp
jnp
out
push
addl
pushf
ret
sub
mov
adc
dec
sbb
in
imul
scas
mov
xor
loop
add
std
mov
add
scas
xlat
pusha
outsl
cmp
fsub
adc
jecxz
cmp
mov
out
mov
xchg
es
cmpl
and
ja
inc
lods
dec
imul
add
ja
mov
mov
les
lret
filds
nop
or
or
rolb
repnz
cmp
xor
sbb
pop
push
ret
pop
jbe,pt
in
push
push
xor
pop
stc
nop
cmp
adc
in
gs
xchg
dec
xor
inc
dec
xor
mov
cltd
xchg
int3
imul
loope
sub
fstpt
lock
rorl
or
out
or
cmpl
dec
xchg
cmpb
jo
push
or
pop
sahf
and
adc
ds
dec
sub
shlb
and
test
fistps
imul
jbe
mov
sub
movsl
sbb
idivl
cmp
jnp
inc
cmp
sub
add
call
aam
pop
jns
and
sbb
mov
inc
push
shlb
mov
in
xchg
inc
pop
pop
out
xor
cmp
xchg
rorl
xchg
push
inc
leave
mov
mov
fdivl
cs
pop
mov
dec
outsb
jp
inc
add
xorb
pop
daa
hlt
inc
mov
xor
add
subl
enter
mov
js
mov
cmp
jmp
into
mov
fidivrs
mov
and
push
dec
in
stc
sub
into
leave
jmp
cli
out
nop
in
hlt
adc
xchg
add
xchg
lcall
xor
ja
std
mov
mov
jle
xchg
mov
lea
add
mov
inc
mulb
dec
mov
mov
js
sbb
call
ret
out
inc
push
push
sub
jp
jno
or
pop
or
push
add
daa
sbb
fucomi
pushf
inc
cmp
imul
insb
xor
in
movsl
cs
addl
mov
outsb
pushf
mov
jb
mov
cmp
add
pop
mov
cmpsl
add
mov
mov
add
icebp
data16
jecxz
xchg
icebp
lahf
or
pop
cltd
adc
pop
pop
inc
and
fincstp
push
loopne
push
or
cwtl
lods
lods
fprem1
adc
in
rorb
call
ljmp
rcl
xchg
call
addr16
jle
sub
xor
cmp
lds
test
nop
pop
out
aas
stc
mov
jae
je
fcmovne
movsl
xor
loopne
or
aas
adcb
dec
dec
adc
cmc
cwtl
push
mov
icebp
cmp
adc
mov
sbb
out
inc
and
mov
repz
xchg
orl
adc
or
cmpsl
dec
jno
jne
jmp
push
cmpsb
dec
lret
push
lea
pushf
leave
int
jle
rol
lds
outsb
xor
pop
fcmove
int3
loopne
rolb
jns
xor
js
std
push
int
pand
mov
add
jg
mov
cmp
dec
arpl
mov
mov
inc
repz
fdivr
jo
test
xchg
mov
push
inc
lods
into
imul
xchg
int
cmp
jle
mov
test
shl
inc
and
xor
mov
jle
sub
xlat
bound
call
aas
jg
ljmp
pop
sub
fld
popf
or
lret
mov
xchg
xor
scas
loop
in
fsubs
pop
dec
dec
movsb
jnp
add
mov
movsb
jno
rol
lods
daa
addb
lahf
xor
pop
lret
sbb
cmp
imul
or
mov
jg,pn
add
pop
cmp
sti
jnp
jne
xor
jbe
or
pop
pop
push
mov
and
sti
push
xorb
and
dec
ja
cwtl
xchg
pop
xlat
mov
xchg
inc
push
sub
aad
mov
pop
add
xor
pop
test
push
xchg
nop
movsl
bnd
cs
out
stos
jbe
xor
xor
out
push
and
add
xchg
addr16
iret
loopne
je
fcom
popl
jl
and
push
popa
mov
aad
mov
outsl
imul
sbb
ficoms
popa
js
and
je
cmp
sbb
int
repnz
outsb
xor
cmp
subb
lret
loop
sbb
call
bound
or
or
mov
xchg
mov
cmpsl
subl
insl
adc
mov
xor
xchg
js
pop
push
out
fidivl
test
into
inc
sbb
cmpsb
mov
xchg
leave
pop
mov
fnstenv
sti
aad
mov
jae
mov
jle
push
ss
icebp
into
jecxz
lods
cmpl
jge
jno
inc
sub
pop
fildll
push
jl
xor
lahf
fld
push
sub
pop
xlat
addb
movsl
clc
in
adc
jp
mov
scas
or
jnp
andb
add
jbe
daa
bound
add
test
std
imull
lret
sbb
jae
xchg
stc
push
imul
fnstcw
aam
gs
jae
loopne
push
cmpsl
mov
pop
outsb
mov
sbb
add
jmp
push
inc
cli
or
pop
outsl
jge
dec
lock
mov
adc
minps
jno
loop
dec
inc
std
push
into
cli
outsl
scas
inc
je
test
cli
cltd
mov
repz
cmpsb
xchg
and
xorl
cmpsb
outsl
jle
pop
mov
cmc
add
out
push
adc
or
mov
test
add
cmp
adc
or
pop
js
hlt
sbb
xchg
add
mov
mov
stc
js
push
movzwl
aad
dec
sub
gs
in
js
push
sbb
inc
lret
into
repnz
or
mov
mov
lock
mov
imul
mov
popa
jb
shrl
addb
mov
jle
scas
sub
rorb
push
ss
mov
jnp
inc
mov
int
ja
cmpsb
rol
movsb
outsb
cmp
pop
adc
inc
push
bnd
or
xorb
xor
out
lret
xchg
or
sub
jmp
push
cmp
pusha
mov
add
popa
lahf
rcrl
cmpl
loopne
popa
mov
push
pushf
lea
xchg
fwait
add
test
aam
stos
jno
cmp
push
fistpll
lods
fisubl
and
lahf
movsb
test
sbb
adc
mov
inc
push
in
pop
push
mov
iret
cmp
jmp
inc
popa
mov
mov
xor
fidivs
ret
mov
fadds
jmp
or
insl
sbb
leave
in
ljmp
or
add
aaa
pop
lcall
jmp
leave
push
enter
repz
add
add
lds
scas
sahf
daa
orl
lahf
pop
in
push
pop
cmpsb
enter
lret
ret
mov
shrl
inc
and
cmpsl
sub
fsubrl
jne
mov
ret
movsl
out
mov
sbb
int
pop
mov
sub
mov
ja
jns
sub
or
stc
dec
std
cmp
add
xor
faddl
xchg
push
ret
pop
js
rol
rorl
rcr
push
in
bound
shl
add
fists
clc
jnp
push
scas
fsubrl
dec
notb
ret
jae
dec
ljmp
sbb
or
mov
pop
aam
jnp
mov
sbb
or
shll
sub
movsb
mov
dec
scas
inc
fdivs
test
mov
and
jnp
lret
adc
loop
mov
xchg
xor
pop
fldenv
sub
cwtl
add
ss
xor
loop
ja
psraw
inc
xchg
daa
pop
sub
cwtl
fwait
rcl
jle
mov
inc
cmp
test
xor
sub
aas
dec
or
xor
dec
test
pop
fs
cmpsb
mov
jle
push
fcomps
in
xchg
incb
fdivr
lea
lds
push
cmp
in
jecxz
xlat
fldt
sbb
or
push
ret
pop
ror
sbb
es
push
jecxz
sbb
repz
test
add
sub
leave
roll
push
scas
adc
outsb
test
xorb
and
jmp
sub
inc
mov
sub
aam
jae
cmp
or
mov
xchg
xor
ds
sub
movsl
pop
ss
call
hlt
sbb
and
loopne
dec
mov
xorl
stos
loop
stc
lods
mov
imul
mov
lock
jno
rcrb
adc
ds
cli
into
bound
ljmp
icebp
cmpsl
xor
and
fistl
jbe
mov
hlt
dec
dec
bound
sub
data16
ja
mov
testb
rol
and
daa
mov
loope
cld
je
inc
push
xor
pusha
or
nop
das
out
add
jns
cltd
jle
outsb
pop
mov
fnstcw
sub
jae
push
push
lods
out
fs
aad
sbb
aas
xchg
sti
sbb
lods
push
loop
jo
out
lcall
les
fidivl
rep
inc
dec
clc
into
and
sbb
jge
xor
insb
mov
ror
pop
dec
xchg
out
cmp
test
jle
in
test
xchg
jae
out
mov
jo
cmp
pop
push
cmpsl
xchg
mov
or
jae
mov
jae
out
and
mov
loop
jp
orb
cmp
insb
xchg
sub
daa
jne
rcrl
jg
addr16
std
pushf
arpl
xor
push
push
xchg
rcrb
mov
in
mov
pop
loop
mov
mov
aad
push
data16
ja
xchg
or
lret
pop
stos
and
cmpsb
jl
das
inc
jl
lret
dec
mov
imul
enter
out
xor
push
mov
aad
ret
into
and
in
mov
idiv
or
fmull
push
lock
lcall
imul
fisttpl
pop
inc
ds
cs
bound
or
shl
pop
jmp
mov
loop
aas
push
nop
pop
add
ficoms
pop
sahf
pusha
pop
adc
aam
outsb
jge
mov
dec
xchg
push
pop
xor
push
sarb
decb
outsb
mov
adc
in
dec
aam
cmp
dec
enter
mov
les
fisubrs
xor
mov
fs
push
push
pop
push
dec
mov
dec
or
mov
xchg
and
sbb
ret
mov
test
inc
imull
icebp
pop
lods
xchg
js
pusha
out
mov
pusha
ret
sti
data16
jnp
cmpsb
out
popa
push
cmp
ljmp
pop
fsubs
test
lahf
jb
sub
rcrl
or
pop
xlat
adc
jo
xchg
xchg
pop
xchg
fldt
clc
fcoml
sub
sub
mov
fildl
in
xor
mov
mov
fcoms
inc
pop
inc
movsb
push
xor
xor
ret
sbb
xchg
das
inc
xchg
adc
and
inc
scas
outsl
test
and
shr
sbb
out
mov
push
lcall
cmp
mov
insl
jb
xchg
mov
inc
and
sti
add
imul
add
or
out
shrl
inc
movsl
adc
adc
lds
xchg
outsb
pop
fsubr
test
sub
jp
mov
pop
mov
in
inc
lods
pop
stc
cmpsb
je
xchg
push
cmc
jnp
sbb
mov
and
lods
jmp
pop
cmp
in
adc
xchg
sub
ja
push
mov
sub
mov
mov
arpl
mov
inc
shr
push
jle
imul
ds
dec
ret
fwait
inc
addl
inc
push
xchg
cmpsl
xor
rolb
fbld
push
pop
sbb
bound
sti
jg
jbe
xchg
fwait
adc
lcall
jp
xchg
popa
fcomi
jns
stos
ficoms
jg
sbb
sahf
or
mov
mov
jne
or
cmp
jno
popa
rolb
cmc
push
push
out
je
push
and
push
sub
addb
cmp
sbb
dec
cmp
xchg
jns
scas
or
dec
fldcw
xchg
mov
dec
das
lock
inc
pop
aad
aas
js
dec
xor
test
jno
add
shlb
jmp
in
xchg
enter
shlb
test
cltd
roll
xchg
lret
sub
sub
mov
inc
cmp
in
gs
and
lret
repnz
cmpsb
and
or
popf
ret
test
mov
inc
std
filds
push
out
jb,pt
in
adc
call
add
ds
cmpsb
mov
jb
out
adcb
pop
sub
dec
insl
inc
jnp
jmp
mov
stos
pusha
popa
mov
test
subb
push
sub
inc
xor
pop
sub
test
idiv
inc
adc
dec
inc
aad
mov
xchg
pop
int
dec
xchg
add
hlt
loope
push
push
inc
pop
xchg
in
addr16
enter
mov
in
jg
js
or
sub
jmp
std
mov
mov
in
adc
pop
je
xchg
push
jo
lcall
mov
adc
jmp
mov
mov
dec
cmpb
push
call
lcall
mov
pop
add
outsl
pop
outsb
jge
sbb
lock
xchg
mov
mov
cmp
mov
in
and
sbb
rclb
outsl
add
sahf
adc
clc
mov
sbb
add
andb
jae
testb
push
inc
std
push
inc
xchg
nop
and
push
and
mov
shll
pop
mov
jae
call
xchg
xchg
call
dec
pop
lahf
dec
fildl
dec
inc
bound
mulb
dec
and
lea
jnp
mov
imul
sbbl
popf
es
or
ds
cmpsl
sbb
inc
jmp
mov
adc
pop
pop
push
pop
mov
jb
inc
xor
jmp
push
xchg
mov
cmpsl
outsl
xchg
dec
pop
add
sbb
stos
fstps
add
scas
loop
adcl
popf
jnp
push
ss
mov
sub
pusha
mov
aad
mov
fldl
test
xor
push
jne
lea
sbb
jno
cmp
sahf
cmpsl
leave
lret
push
pushf
cmp
loop
pop
imull
mov
pushl
lret
mov
push
adc
icebp
and
push
add
imul
fdivr
mov
int3
push
mov
mov
js
sbb
pop
pop
fmuls
sbb
daa
xor
pop
loopne
or
sbb
dec
testb
out
imul
das
jbe
dec
ja
pop
fldt
ret
jb
xchg
dec
pop
jg
outsl
cs
fwait
or
jb
cmpl
insl
aaa
push
ret
push
imul
sarl
mov
mov
in
mov
xchg
repz
xor
add
sbb
jge
jo
call
jb
mov
pop
inc
decl
and
dec
scas
add
pushf
jae
aas
lods
pop
mov
addr16
iret
mov
repnz
and
fs
movsl
insl
sub
call
add
sbbb
jns
lcall
clc
cs
or
dec
sti
inc
sub
mov
mov
out
mov
xchg
jbe
cmpb
sub
mov
jb
gs
hlt
pop
add
mov
push
add
xor
fidivs
nop
je
mov
test
inc
and
xchg
jne
mov
push
scas
scas
xchg
nop
mov
fildll
inc
loopne
mov
push
lock
stc
out
mov
sbb
jmp
cmpsb
jmp
insl
pop
xchg
sub
les
scas
xor
inc
mov
mov
sbb
jge
imul
fisttps
pop
or
add
add
enter
addr16
mov
cld
out
icebp
sub
xchg
mov
sbb
inc
and
std
push
jbe
or
jmp
ret
mov
mov
mov
lcall
push
insl
dec
aaa
or
out
and
mov
leave
fstpt
mov
sbb
adc
add
sbb
stc
inc
sub
sbb
xor
test
sarb
enter
push
pushf
int3
subl
or
xchg
lock
xlat
lods
or
or
mov
xor
mov
add
dec
pop
ljmp
imul
mov
popa
mov
out
fnstsw
insb
enter
or
mov
jmp
sub
lahf
xchg
mov
loop
xor
cld
fcmovnb
nop
int
xor
jne
fistpl
adc
lret
push
adc
fs
movsl
xor
inc
mov
lahf
ds
mov
out
and
mulb
mov
xchg
mov
add
lcall
mov
add
adc
mov
cmp
sub
or
ss
mov
and
jns
push
xchg
dec
jno
xchg
mov
ret
and
out
scas
cmc
lds
fsub
xlat
imul
push
sbbl
int3
cli
ss
xchg
mov
insb
test
out
inc
cmp
bound
jbe
jnp
sbb
enter
and
or
lods
dec
scas
adc
aad
ret
movsl
pop
xor
xchg
in
pop
pop
fcmovnb
push
inc
in
mov
xor
stos
dec
mov
outsl
insl
fstl
add
jle
aam
mov
aad
stos
inc
std
add
xchg
leave
push
iret
imul
xor
mov
sbb
xchg
fs
cwtl
movsl
test
leave
mov
push
and
popa
sarl
sbb
fcmovnbe
js
addb
aas
test
adc
stc
mov
cltd
out
inc
lcall
outsb
push
inc
xor
in
outsl
test
cmpsb
add
subb
mov
scas
and
fldl
pop
pop
push
mov
inc
pop
std
jbe
inc
pop
pusha
mov
adcl
adc
mov
ds
cltd
pop
std
adc
pop
js
pop
inc
push
mov
test
cmpsl
mov
or
push
neg
hlt
js
pusha
cs
fimull
cli
cld
mov
jnp
xchg
les
loopne
scas
adc
je
pusha
pop
ror
push
jle
sub
xchg
xor
repz
xor
stc
lock
pop
mov
inc
adc
pop
dec
sub
outsl
add
fisubrs
rolb
inc
mov
push
lds
fs
aam
push
dec
mov
xor
add
jbe
test
cli
jb
mov
nop
cmp
aam
xor
xor
mov
inc
lret
inc
aaa
sbb
jae
xchg
adc
stos
dec
sbb
leave
push
inc
sti
push
int3
ds
data16
cmpsb
into
insb
xorb
scas
lds
lahf
or
cmp
push
push
ret
xchg
imul
inc
mov
inc
add
mov
cmp
dec
xchg
push
inc
movsb
loopne
aaa
jmp
leave
sar
push
mov
stos
dec
lret
sti
push
test
mov
or
pop
xor
iret
aaa
pop
pop
aas
pop
jecxz
push
cmp
sbb
fwait
mov
xchg
mov
or
jecxz
fildll
cmp
push
cmp
into
test
shlb
add
sbb
out
das
jae
inc
jecxz
jns
and
add
lret
std
mov
loopne
lock
addr16
out
xor
rorb
rsm
inc
pop
sbb
ret
xchg
mov
fwait
jno
dec
stc
cwtl
mov
lcall
ja
dec
jo
push
or
mov
icebp
adc
ret
xlat
data16
pop
mov
push
or
loopne
xor
insb
xchg
notb
mov
test
sbb
imul
int3
push
iret
xchg
fnsave
shrl
sub
std
pop
mov
dec
out
lock
push
or
mov
sahf
cli
or
cld
or
mov
xchg
sahf
stc
mov
std
insb
xchg
jg
and
incl
in
ljmp
pop
xchg
test
icebp
pop
push
js
movsl
dec
test
jecxz
pop
in
pusha
dec
inc
cld
mov
add
bound
sbb
and
shr
or
dec
cmpsb
mov
fdivrs
nop
mov
xlat
jge
mov
inc
xchg
repz
inc
lods
scas
imul
insl
mov
push
add
push
pop
test
dec
jnp
enter
sbb
dec
arpl
in
xor
cmpsl
push
std
cmp
movsl
jno
push
cli
jns
gs
test
mov
jnp
test
negl
dec
mov
ljmp
sarl
push
lcall
push
pop
cmp
and
lahf
mov
xchg
ss
jmp
jecxz
cmc
js
and
push
xlat
ror
or
enter
add
sahf
sbb
cmp
push
fsubrp
sbb
fisttpll
xlat
shl
in
out
cmp
ret
jl
xchg
les
into
push
add
or
pop
cld
dec
lret
mov
jmp
fldenv
adc
mov
loopne
jp
jecxz
jl
in
js
push
xor
out
stos
loope
dec
inc
cltd
dec
inc
es
pminsw
sub
cs
shl
rcrl
in
sbb
mov
outsb
aam
sbb
lea
add
addr16
into
fs
fisttpll
jg
cld
jmp
cmp
push
jno
ja
insb
pop
por
xor
cmpsb
sbb
sub
ret
or
cmpsl
and
stos
aaa
and
lret
fidivrs
push
aaa
push
movsl
pop
pop
in
xchg
add
add
inc
mov
int3
jo
adc
adc
pushf
orl
push
pop
or
xor
ljmp
mov
cld
jbe
dec
ret
sbb
lret
xor
add
jo
mov
dec
jmp
cwtl
insb
sub
mov
mov
xchg
mov
jno
xchg
add
test
test
mov
outsl
cwtl
pop
rorb
bound
mov
dec
rcr
jg
xor
in
or
outsl
aam
call
xchg
shl
arpl
adc
mov
inc
leave
imul
insb
sub
in
je
popf
sahf
sbb
xor
xchg
ja
out
cmp
lret
cmp
nop
addr16
das
test
xchg
xor
xor
or
mov
inc
adc
sti
in
fcomps
ret
add
popf
ljmp
pop
or
jo
push
pop
cli
rcrb
std
in
adcl
out
xor
push
fmull
sub
testb
cmpsl
sbb
dec
push
mov
iret
sub
pop
jnp
jge
xor
and
jo
jbe
ljmp
repnz
test
lock
aaa
lret
mov
jecxz
xchg
movsl
call
lock
popa
mov
mov
or
subl
push
in
fistps
cmc
jbe
adc
mov
and
cwtl
mov
repnz
jo
and
popa
xlat
add
mov
pop
or
test
jp
push
repz
jmp
movsb
enter
hlt
cmp
inc
outsl
sub
ret
push
fisttpll
dec
mov
jmp
jo
outsl
call
es
sbb
sbb
popa
fimull
cmpsl
sub
add
sub
xchg
test
or
stos
sub
sahf
hlt
inc
add
jg
add
lea
imul
push
lea
push
jecxz
cli
faddl
inc
stos
lea
imul
add
pop
aam
aas
mov
loope
xor
stc
ja
jp
ljmp
clc
inc
sbb
mov
push
jno
mov
imul
popl
or
lods
sbb
pop
mov
xchg
and
xchg
push
addb
inc
and
int3
movsb
call
out
ret
push
mov
popf
out
dec
pop
pop
dec
mov
xchg
mov
mov
dec
add
adc
and
pop
mov
cli
inc
imul
mov
das
mov
mov
scas
pop
sub
xor
or
fdivs
push
daa
pusha
cmp
xor
fiadds
xchg
fmul
arpl
dec
mov
add
adc
fs
jno
xlat
inc
movsl
sbb
js
cmp
stc
pop
jns,pt
aad
fcoml
adc
xchg
xor
das
cmp
mov
jo
push
int
or
pop
mov
adc
flds
pop
mov
xchg
ja
or
mov
out
xor
je
push
loop
mov
inc
add
fldt
sbb
jns
or
dec
sub
es
push
xor
adc
mov
push
sbb
cmp
or
into
test
add
leave
mov
inc
pop
call
or
pop
sub
negl
fisubs
push
or
je
scas
or
sahf
push
push
xor
fcoms
pop
fwait
lods
movsb
jo
lahf
out
fwait
mov
cmp
push
fs
shll
push
xchg
dec
xor
pusha
mov
dec
aad
mov
adc
loopne
mov
pop
inc
jns
dec
xchg
and
xor
mov
push
mov
retw
mov
daa
outsl
outsl
rclb
pop
xor
loopne
fs
mov
test
xchg
xchg
lock
shr
add
lods
test
psrld
or
or
mov
dec
or
repz
sbb
push
imul
lret
shrb
push
je
nop
jae
push
pop
cltd
xchg
cmp
enter
and
mov
mov
xchg
pop
data16
movsl
mov
call
inc
inc
popf
aad
mov
pop
ljmp
or
jp
enter
pop
ss
out
push
lcall
or
dec
pushw
jl
ret
cmc
lahf
aas
and
push
fisttpl
sbb
ja
pusha
sub
xor
sub
in
jg
and
add
data16
shlb
add
sarb
dec
in
mov
int
xchg
xchg
mov
pop
jne
outsb
andb
cwtl
jge
xor
mov
sarl
jns
add
push
dec
lcall
xor
scas
or
popf
sub
bound
fwait
mov
xor
fcoms
xchg
scas
dec
jle
and
mov
push
rorb
fcompl
pop
pop
jle
adc
pop
ja
xchg
sbb
or
icebp
mov
out
or
inc
in
insb
add
cmpsb
in
mov
xor
mov
add
mov
gs
mov
xor
int3
lret
sbb
xchg
jl
adc
in
ret
fwait
inc
xchg
dec
inc
mov
repz
ret
out
pop
rcrb
dec
dec
fmull
jnp
shrb
sub
shrb
mov
pop
adc
das
enter
xchg
inc
into
push
inc
cmp
loop
sahf
faddp
jns
cmpsb
xchg
mov
inc
jg
jns
shlb
lret
xchg
push
ret
push
sbb
xchg
call
fstp
dec
mov
pop
mov
and
mov
xor
daa
ja
fucomip
mov
and
push
in
jg
mov
and
ret
cwtl
ljmp
shrl
testl
icebp
cli
fwait
movsl
pop
imul
dec
ljmp
js
dec
adc
test
mov
pop
mulb
mov
std
dec
and
out
adc
mov
and
push
mov
xchg
add
add
adc
sbb
fstps
mov
rcrl
scas
scas
inc
dec
and
lds
push
xchg
aad
and
mov
mov
es
outsl
mov
lock
and
in
sub
fists
mov
aaa
add
fsubrs
mov
rorl
mov
aam
xchg
out
cmpsl
data16
jl
pop
mov
rorl
in
pop
leave
inc
cld
push
inc
pop
xchg
clc
pop
in
jp
pop
clc
fisubrs
stos
je
mov
push
or
mov
xchg
arpl
sub
sarb
lods
in
jmp
imul
push
inc
jge
sub
add
and
mov
sti
mov
sahf
pop
xchg
lods
jg
scas
and
mov
push
jns
push
cmp
xor
in
cmp
push
add
stos
cmp
dec
mov
stos
inc
es
rcr
adc
push
xchg
pop
xchg
out
pop
repnz
loope
mov
mov
add
fninit
mov
daa
cmp
cltd
bound
pop
out
std
xchg
aaa
sub
gs
mov
popf
add
push
xchg
jno
xorb
mov
aas
icebp
mov
pop
ret
repz
mov
stos
in
aad
xchg
xchg
adc
call
xchg
push
je
je
push
sbb
enter
es
test
jo
fimuls
mov
pop
jg
gs
insl
movsl
push
testb
jnp,pt
mov
repz
xchg
fdivr
xor
jge
pop
andl
insb
push
mov
and
sub
addb
ja
cli
iret
push
dec
daa
inc
cmpsb
iret
push
pop
xlat
test
inc
xchg
ret
stos
and
call
mov
cmp
xlat
pop
xchg
jbe
push
mov
mov
sbb
lahf
jl
inc
push
psrld
jnp
movsl
sub
push
pushf
test
insb
dec
rcrl
in
and
pop
cs
mov
fsubrs
mov
pusha
dec
mov
dec
sub
mov
cmp
pushf
pop
stos
add
mov
inc
je
inc
add
cmp
mov
push
xchg
pop
and
jns
jl
jg
jmp
mov
movsl
out
inc
insb
jns
inc
or
mov
lods
add
cmc
sti
orb
nop
out
dec
xor
inc
push
add
movsl
rol
push
or
adc
ds
inc
enter
or
xchg
mov
and
fs
push
gs
dec
xchg
ret
push
and
inc
imul
push
lds
std
pop
jge
cmp
icebp
movsl
sbb
cmpl
cld
jae
mov
shl
loop
mov
test
pop
pop
xor
inc
sbb
cmp
jl
rorl
pop
jb
enter
jp
into
stc
fwait
repnz
push
test
dec
dec
das
movzwl
clc
imul
test
mov
cli
push
cmp
lcall
into
xor
mov
in
pop
call
ret
shrb
out
sub
cld
pop
out
mov
lods
push
push
scas
xor
and
mov
lock
push
mov
jmp
bound
xor
pusha
je
adc
and
mov
or
popf
pop
enter
dec
xor
sub
iret
and
pop
mov
mov
imul
lahf
stos
aad
mov
insb
loope
adc
mov
push
jnp
lahf
jbe
das
pop
or
les
ret
push
stos
or
scas
sbb
lds
daa
icebp
sub
mov
cmpsb
iret
add
or
xchg
test
jno
stos
jnp
push
push
or
sarl
daa
shrl
adc
scas
scas
push
enter
hlt
dec
lock
jbe
popa
mov
cmc
sbbb
or
push
mov
inc
rep
jb
xorb
imul
out
cmp
pop
popa
pop
push
les
adc
popa
push
loop,pt
sbb
ret
test
push
fidivs
ret
push
mov
add
xor
notl
out
mov
lods
cmp
lret
add
push
xchg
rclb
sub
jae
dec
add
icebp
cmpsl
aas
lret
test
mov
rorl
push
cmp
push
pop
push
test
inc
mov
into
js
cwtl
or
cmp
push
jbe
imul
adc
out
clc
lret
xor
pop
ljmp
mov
xlat
jmp
cmp
into
stos
ret
xchg
in
cmp
push
faddl
add
fcoms
pop
cmpsl
jbe
or
mov
jge
popa
jno
ljmp
imul
jp
push
sub
push
mov
push
jecxz
insb
jecxz
pop
stc
xchg
pop
pop
mov
iret
pop
pop
jmp
xor
add
sbb
loope
test
fucomip
push
mov
cwtl
xchg
daa
xchg
jecxz
scas
jp
faddp
shr
loopne
incl
jl
in
dec
outsb
bound
cltd
add
push
rorb
std
jne
hlt
bound
outsl
repz
leave
aad
mov
fmul
jl
call
mov
ret
pop
pop
push
aam
nop
mov
gs
sub
fidivrs
rclb
jnp
scas
movsb
mov
aaa
jmp
jno
ret
test
push
push
mov
iret
add
shl
adc
insl
jp
mov
pop
adc
xchg
loope
bound
pop
mov
cs
in
inc
and
ss
and
add
pop
sub
mov
and
cld
pushf
iret
cwtl
subl
or
jnp
adc
or
xor
xor
pop
pop
mov
xchg
lret
imul
loope
aas
loop
loopne
sub
dec
mov
fidivs
xchg
pop
sub
out
adc
pop
mov
dec
mov
call
push
sbb
xchg
lds
test
xchg
neg
jnp
adc
add
lahf
inc
mov
bound
sbb
pop
sub
and
js
or
mov
lods
mov
ss
inc
mov
mov
outsb
in
sub
mov
out
mov
in
mov
cmpsb
sbb
and
adc
pop
mull
jl
add
jbe
sbb
adc
mov
lods
fcomps
cmpsb
or
jecxz
adc
movsb
jge
push
adc
and
fdivrs
add
adcb
fstp
in
std
daa
dec
imul
out
add
mov
xor
push
mov
mov
push
lahf
fnstcw
or
int
push
aad
out
outsb
dec
aaa
int3
sbb
repz
in
dec
imull
pop
cwtl
jbe,pt
mov
pop
mov
pop
push
lahf
adc
xchg
aas
sbb
mov
fnstsw
loopne
mov
cmp
mov
je
cmp
testl
sbb
das
pop
adc
daa
ffreep
ljmp
ljmp
mov
test
movsl
and
push
aas
mov
mov
jecxz
popf
xor
fs
push
fwait
bound
push
out
jmp
popf
fsubl
or
pop
jge
or
push
mov
pushf
clc
sub
sbb
cmp
add
jb
add
je
xor
insl
insb
sub
fcmove
sti
add
jge
xchg
imul
inc
orl
adc
mov
out
lea
int
scas
adc
sahf
bound
mov
sbb
loopne
add
push
sbb
pop
iret
mov
jp
dec
or
stc
sub
ret
out
outsl
jge
mov
cmc
cmp
mov
cmp
shrl
and
xor
push
push
loopne
lea
adc
adc
dec
pop
outsb
jne
jl
jmp
inc
xor
xchg
outsl
lret
mov
mov
mov
fisttpl
aam
inc
std
push
add
enter
fisubs
fst
scas
sbb
inc
adc
xchg
mov
out
sub
mov
push
sarb
in
loope
inc
std
popa
cmp
push
sbb
xchg
popa
pop
aaa
adc
into
push
cltd
movsl
sub
pop
mov
adc
push
and
xor
lahf
gs
mov
jno
xchg
push
test
sbbl
sbb
inc
jmp
xchg
push
repz
xchg
xchg
adc
cmp
jl
sbb
andb
push
dec
dec
mov
push
fnstsw
enter
enter
adc
xor
jp
xorl
push
sbb
adc
pushf
push
pop
data16
subl
dec
xchg
add
sbb
xchg
in
lret
sub
fwait
out
jae
repnz
or
jg
jp
dec
inc
call
lock
outsb
fisttpl
sti
mov
add
pop
pushf
xchg
sbb
mov
jns
push
jbe
fxch
add
mov
adc
aaa
outsb
cwtl
mov
or
pop
cmp
into
adc
call
sub
inc
pushf
xor
push
ret
mull
fwait
test
sbb
loope
or
pop
leave
jle
mov
mov
xchg
fwait
pop
cltd
imul
xchg
push
into
in
sub
ss
jmp
mov
mov
mov
adc
cmp
adc
push
lahf
out
aaa
in
sbb
ds
sbb
mov
inc
sbb
call
mov
ja
int3
pusha
add
push
jg
cmpsl
mov
jl
mov
ss
movsl
jne
mov
inc
in
popa
es
dec
lahf
std
adc
jle
test
xchg
fisubl
push
xchg
sub
clc
sub
adc
ljmp
mov
jo
sub
pop
pop
cld
xor
ffreep
fstps
in
cltd
ds
fnclex
push
xchg
psubsw
mov
sbb
jecxz
mov
cmc
and
sbb
dec
cmp
fcmovnb
scas
lods
lcall
je
mov
sbb
into
inc
sbb
movsb
mov
dec
mov
cmp
adc
enter
xor
cltd
xchg
adc
pop
xor
mov
bound
xchg
jae
dec
in
insb
add
mov
lahf
ret
out
pop
cmpsl
rclb
addb
adc
sub
ja
rorb
mov
xor
ja
xchg
mov
out
in
imulb
ret
mov
sbb
mov
lcall
in
sti
xlat
fsts
in
ret
sub
cmp
jbe
decb
out
arpl
inc
jo
or
aam
xor
cltd
xlat
pop
roll
stos
inc
xor
mov
es
ss
inc
inc
icebp
pop
nop
fildll
lcall
cltd
mov
lds
es
scas
pop
icebp
inc
mov
xchg
cmc
push
in
cmpsb
xchg
std
pop
jg
cli
inc
movsb
push
sub
into
imul
subb
inc
pop
dec
or
pop
test
xchg
pop
test
lcall
cwtl
ret
mov
inc
pop
dec
arpl
arpl
decb
loop
push
cmp
lods
outsb
dec
daa
stc
ret
stos
lret
inc
mov
mov
pushf
or
ljmp
pop
fwait
pop
dec
add
popa
enter
mov
and
push
getsec
pusha
pop
cmpsb
mov
call
add
inc
mov
loope
push
push
rclb
mov
add
dec
je
es
mov
decb
sarb
and
not
sahf
xchg
cwtl
push
rorl
push
adc
idivb
cmp
xorb
into
in
cmpsl
movsb
sahf
lds
addr16
xchg
test
out
mov
mov
and
sahf
dec
nop
es
aaa
cmp
add
or
in
mov
popa
in
stos
push
jmp
out
sbb
and
mov
pushf
xchg
pop
sti
adc
add
jp
mov
push
insb
push
cmp
fnsave
mov
mov
jmp
shll
insb
cltd
lock
loope,pn
lahf
outsl
mov
jg
jns
test
inc
xchg
repz
push
xchg
push
loop
push
stos
ss
xchg
pop
aaa
inc
in
clc
sbb
leave
enter
push
insb
jmp
aad
loopew
xor
add
inc
pop
inc
shll
jecxz
mov
push
lock
jg
xor
enter
aam
lock
xorb
test
or
sub
jg
mov
gs
xchg
movsl
repnz
lods
push
push
cmpsb
add
jb
aad
cmc
adc
notb
inc
pop
gs
sub
mov
jge
xor
push
jge
mov
leave
leave
push
fadd
inc
or
jp
imull
ss
stos
and
and
loopne
jecxz
mov
stos
int3
nop
scas
ret
add
jl
lret
dec
inc
out
add
or
mov
inc
js
mov
inc
pop
lods
cli
out
mov
xorl
jnp
jne
pop
rolb
xchg
xchg
insl
sub
stos
fnstsw
jle
cmpsb
sar
arpl
adc
xor
dec
or
add
loop
nop
lret
lods
iret
lret
jmp
xchg
and
sbbb
mov
jle
mov
jg
into
sbb
sub
xor
jo
scas
add
push
aad
jbe
mov
mov
sbb
filds
clc
jns
sbb
insl
push
mov
xchg
push
sbb
jl
push
mov
andl
push
pop
jmp
pop
add
cmp
movsb
jbe
aam
leave
popa
aas
mov
pop
ja
stos
cmpsl
popf
es
push
aad
xchg
inc
sarl
cmc
and
inc
and
outsb
lds
iret
mov
jno
push
mov
sti
stc
outsb
add
inc
mov
mov
das
xor
lock
andl
leave
idiv
nop
sub
or
cli
jb
gs
aaa
lods
out
sarl
pusha
add
cwtl
inc
pop
into
stc
and
icebp
imul
jp
pop
xor
sub
into
test
les
or
sub
loopne
xchg
dec
leave
fistpll
mov
orl
mov
xchg
push
jae
es
xor
cmpsb
cmp
pop
push
xor
les
pusha
adc
sub
and
push
stc
dec
stc
adc
mov
adc
jne
clc
mov
lcall
rorb
cmp
push
iret
pop
mov
ror
xor
xchg
and
in
mov
xor
leave
shll
add
iret
aaa
jb
sub
cmp
adc
aad
dec
jp
pushf
jge
nop
push
enter
ja
popa
cmpsb
int3
mov
idiv
sub
mov
xor
xor
mov
jp
or
xchg
jb
stos
xlat
scas
jb
add
mov
inc
sbb
mov
adc
lds
push
jge
push
scas
dec
cmpsl
xor
mov
scas
pop
mov
inc
inc
mov
fs
and
mov
sub
jbe
pop
mov
xorb
mov
outsl
cli
cmp
mov
push
push
fldcw
mov
pop
jecxz
push
fistpll
lods
sub
test
adc
lods
mov
and
addr16
add
add
mov
dec
loopne
inc
cld
jg
ffreep
xchg
mov
pusha
popa
aam
jns
into
add
xchg
dec
pushf
jno
jnp
cltd
sahf
or
jnp
pop
push
xor
notb
dec
in
sbb
xor
sahf
xlat
sub
aaa
and
in
movsb
mov
aaa
in
mov
aaa
andb
sbb
or
in
pop
ja
push
decb
out
mov
stos
je
cmp
stos
int
push
jo
ret
fbld
loopne
and
xchg
adc
push
pop
and
xor
loopne
cmpsb
mov
cli
mov
xor
sbb
inc
xor
mull
or
jb
or
xor
addb
sub
adc
adc
lods
stos
in
sti
daa
jne
fnstcw
outsb
std
test
cmpsl
lods
test
pop
cmp
jmp
rol
mov
pop
pop
push
out
rolb
cmc
js
orl
cs
cld
xchg
or
lock
mov
cli
testb
inc
pop
in
dec
mov
mov
aad
mov
cmp
dec
aas
mov
sub
iret
arpl
add
dec
mov
iret
pop
int3
or
xor
cld
ds
sub
xor
mov
inc
adc
dec
cltd
mov
push
sti
movb
mov
xor
xor
ficoml
dec
ljmp
cmp
lret
push
xor
push
xchg
cmp
out
xchg
xor
xor
xor
add
inc
jo
rcll
sarl
pop
xor
imul
addr16
push
push
or
pop
xchg
insl
lods
lret
dec
ja
jl
push
or
jb
mov
push
clc
aaa
sub
xchg
mov
xchg
xor
mov
jl
push
mov
sahf
idivl
jg
ds
cmp
adc
jo
sub
mov
sbbl
cmp
hlt
add
movsl
or
sbb
pop
xor
int
push
fbld
mov
cmp
ret
lret
jmp
out
mov
and
sarl
push
add
mov
call
aad
sub
mov
ud0
dec
pop
add
jns
sub
mov
pop
pop
cmp
rcl
add
pushf
cmc
pop
smsw
stos
add
mov
jae
add
lea
ss
or
lcall
and
je
loope
in
xchg
pop
xchg
push
jmp
loopne
cs
jp
or
add
mov
xchg
mov
jmp
inc
cmp
cmpsb
shl
jle
lahf
add
enter
cs
lock
cmp
mov
dec
dec
out
lock
xor
sub
stos
test
out
add
daa
jbe
cmp
sti
xchg
int
push
pop
scas
push
stos
mov
mov
lea
repnz
push
xchg
jmp
scas
in
mov
xor
add
js
push
cmp
int
adc
push
fidivrl
cmp
mov
popf
sbb
in
xchg
out
sbb
xchg
mov
xor
xchg
mov
push
cltd
cwtl
xor
aad
fbstp
iret
test
aam
push
sub
cmpsl
fidivl
pop
cmp
mov
mov
pcmpeqd
outsb
in
movsl
ret
ss
dec
inc
cmp
sbb
aas
iret
jno
fistpll
sar
xchg
imul
and
mov
add
ds
or
add
imul
sahf
fucomip
push
mov
sbb
and
cmp
or
int3
mov
aaa
lods
push
mov
outsl
push
icebp
daa
scas
add
call
mov
das
das
mov
mov
fsubrs
cmp
test
sbb
in
out
and
inc
repz
fdivs
mov
aaa
xor
shll
lret
ficomps
mov
cld
mov
inc
int
std
mov
push
cmpsb
mov
xchg
rol
scas
mov
push
fnstenv
and
ret
adc
mov
aam
xchg
scas
jno
sub
sbbl
mov
add
out
cmpb
xchg
sti
pushl
sub
std
cltd
push
add
dec
pop
popf
and
test
movsl
jg
jb
adc
add
repz
ds
jmp
es
pop
fiadds
mov
sahf
test
sub
push
sub
shll
add
push
std
scas
outsb
mov
jbe
cmp
pop
sbb
mov
outsl
gs
mov
shl
mov
dec
and
dec
sbb
jo
pop
loop
lock
outsl
or
xchg
and
dec
sbb
xlat
popa
into
mov
loop
sbb
push
or
js
aam
pushf
and
adc
enter
inc
mov
mov
popf
bound
mov
enter
fisttps
xor
lods
stos
lods
sub
and
enter
xor
mov
movsb
clc
pop
mov
movsl
mov
xchg
ret
jecxz
pop
nop
mov
orl
and
xchg
loope
add
rclb
pushf
push
notb
push
pop
incl
and
or
pop
sarl
inc
shlb
and
sti
fwait
aaa
pop
in
repz
push
stos
xchg
loop
inc
out
dec
push
stos
cmp
jecxz
push
mov
xchg
jle
mov
dec
mov
cltd
sbb
subl
cmp
xor
add
jno
aaa
xchg
or
mov
mov
push
sub
sbb
movsb
cmc
jl
pop
add
cmpsl
pop
enter
lret
pop
stos
icebp
loop
arpl
inc
adc
out
in
xchg
mov
push
push
mov
fadds
adc
aaa
jns
mov
cmc
sti
popf
and
dec
lods
loop,pt
xor
and
mov
xor
push
mov
les
mov
add
mov
mov
xor
fwait
add
arpl
xchg
imul
popa
cmp
pop
xchg
outsb
int
out
xchg
outsb
lds
daa
cmpsl
cmc
mov
push
xor
mov
pop
in
inc
push
cmpsb
pavgb
adc
push
aas
sahf
xchg
xor
xchg
cwtl
pop
or
inc
lahf
fs
pushf
pushf
fwait
xchg
insb
push
sub
dec
into
and
scas
fidivl
loop
test
sub
cmp
shlb
xor
aad
adc
test
fistps
and
rcrl
in
adc
pop
push
sub
subb
sbb
loop
push
std
xor
and
test
dec
popa
ret
dec
in
sub
stos
in
push
xor
mov
dec
xchg
mov
nop
jne
cwtl
fidivl
int3
enter
aam
mov
xor
pop
mov
ret
into
xchg
add
ss
lea
ja
and
icebp
pushf
loopne
insb
jo
sahf
fildl
cmpsb
push
adc
js
out
inc
xor
cmp
jno
push
xor
les
and
bound
dec
fists
sub
fwait
pushf
pop
aas
push
and
arpl
and
add
pop
dec
adc
enter
mov
xchg
fstpt
lods
ret
jg
fs
add
add
mov
iret
cwtl
pusha
mov
or
mov
mov
jae
mov
add
cmp
sbb
inc
scas
adc
jbe
mov
rol
jle
orb
arpl
cwtl
test
dec
sbb
push
loop
bound
cmp
in
les
mov
dec
mov
cmpsb
mov
mov
xor
test
mov
inc
cmp
xor
jo
push
xor
cs
and
mov
jae
inc
lds
xchg
lahf
ret
clc
leave
and
aam
mov
cmp
add
jne
stos
xchg
mov
dec
cs
push
dec
leave
sahf
cmc
pop
iret
fwait
adc
add
or
aaa
cmp
shrl
lret
lock
mov
lods
pop
xlat
mov
mov
fnsave
cs
stc
in
adcb
pop
ljmp
ret
adc
pop
inc
cld
data16
movsb
lods
mov
cs
in
lea
jl
dec
mov
cmp
push
aam
inc
shlb
test
cwtl
movsb
inc
out
pop
push
push
inc
mov
jae
insl
pusha
stos
ret
pop
out
add
sbb
xchg
mov
pop
aad
cmpsl
fdivl
cmp
andl
mov
fsub
js
and
mov
dec
out
call
mov
popf
ja
sarl
clc
imul
and
fnsave
stos
jecxz
dec
or
mov
pop
or
fidivrl
loope
roll
iret
pop
test
pop
sub
shll
fildll
dec
sbb
fistl
es
fdivs
cltd
aam
icebp
pop
and
sbb
out
adcb
sbb
mov
fildll
sbb
cld
stos
loope
push
pusha
jmp
cltd
stos
jmp
sub
cmp
push
punpcklbw
scas
jno
cmp
cmp
orl
nop
jmp
jne
out
sub
clc
xchg
sbb
pop
fisubl
scas
cmpsb
mov
cmp
xchg
sub
sub
iret
xlat
icebp
and
cltd
jno
push
imul
adc
sub
mov
push
sub
fistl
inc
popa
mov
mov
in
sbb
dec
ss
sub
sbb
pop
adc
or
push
in
mov
mov
outsb
inc
jns
mov
cld
sbb
repnz
mov
push
push
cmc
dec
mov
loop
mov
addr16
leave
shlb
inc
add
and
push
inc
jecxz
lret
jnp
shlb
xorb
push
inc
sahf
pusha
inc
movsl
sbb
sbb
ja
loope
repnz
cmp
idivb
movsb
push
xor
adc
or
push
dec
mov
je
sub
jno
or
pop
out
test
mov
sbb
lds
ret
add
mov
mov
push
test
xor
sub
pop
cltd
pushl
adc
ret
nop
inc
nop
int
in
idivl
ja
shrl
dec
dec
jle
dec
cmpsb
cmp
mov
inc
adc
fmulp
out
btc
jae
mov
inc
or
inc
mov
inc
cmp
sbb
dec
aam
hlt
pop
icebp
sbb
in
add
add
xor
scas
data16
outsb
out
mov
stos
sbb
add
ficompl
xchg
mov
fsubrl
int
mov
push
mov
int3
subb
sbb
mov
aad
bound
push
popa
ds
mov
mov
or
push
rcll
enter
pushf
sbb
imul
out
add
sti
jno
dec
jg
push
jae
in
adc
mov
mov
imul
shrb
add
add
sub
sub
loope
jl
sbb
cmpsb
mov
xor
mov
push
jle
filds
test
inc
push
adc
fildll
out
sub
aas
jg
pop
jae
or
push
popf
lahf
in
dec
push
lcall
push
push
mov
sbbb
mov
cwtl
call
jmp
xchg
or
push
xor
push
stos
loop
dec
or
aas
ljmp
not
xchg
lret
popl
mov
sar
ret
pushf
pushf
in
cmp
pop
xor
lahf
and
lock
sysenter
sub
adc
aaa
adc
data16
pop
int
jge
or
icebp
sub
sub
dec
jb
aaa
jmp
push
pop
ljmp
xor
push
mov
jecxz
mov
push
pop
or
outsb
out
cmp
fnsave
test
xor
ficompl
lods
jns
pop
int3
sub
push
pop
cmovp
cltd
xor
and
popa
in
adc
xor
je
pop
inc
xor
and
repnz
faddp
lds
xchg
std
push
mov
cld
mov
inc
cmp
xorl
negb
test
out
addr16
in
jnp
jp
pop
and
mov
cld
push
inc
dec
rclb
dec
ljmp
hlt
aad
cmp
cmpsb
repnz
push
sbb
shl
xor
push
mov
test
ret
test
scas
push
dec
lret
fwait
scas
dec
jle
cmp
sub
xor
enter
int
fcompl
mov
cmp
psubusb
fidivs
es
inc
push
mov
dec
and
dec
imul
jns
jnp
data16
pop
ret
jno
ja
movsb
arpl
adc
xchg
or
out
mov
and
lods
mov
addr16
sti
fadd
fildl
sub
inc
lcall
pusha
addr16
cmp
outsb
xor
adc
ds
jb
adc
sbb
pop
pop
sbb
mov
inc
inc
loope
sbb
xor
and
ds
pop
shll
or
and
sub
loope
or
lret
jns
xchg
pop
jle
mov
pop
jbe
push
lock
add
mov
test
jne
mov
or
mov
fs
add
in
jns
jmp
in
xor
fsubrs
mov
cmp
mov
out
div
cmp
add
xchg
add
mov
xorb
sub
test
fmul
lods
iret
out
mov
pop
pusha
or
and
mov
mov
aas
mov
les
outsl
fimuls
scas
les
sbb
rclb
loop
mov
pop
or
xchg
inc
dec
push
fadds
loopne
jne
sub
mov
mov
sub
dec
int3
inc
mov
movsb
jg
test
hlt
mov
ja
pop
es
fwait
orl
jne
sbb
mov
and
lods
das
orl
out
ljmp
insl
out
mov
ficomps
cld
ljmp
fistl
lcall
fisubrl
xchg
mov
test
xorb
aaa
loope
fs
in
mov
cmc
daa
inc
jno
loopne
aas
mov
loope
or
and
sbb
lods
push
sub
aad
in
outsl
js
mov
xor
pop
pushf
jbe
jp
mov
xchg
xchg
test
ds
mov
xor
cmp
xchg
or
loope
out
movsl
dec
inc
movsb
or
inc
inc
and
pop
int
jge
adc
lcall
cmc
and
lret
aam
jno
sbb
push
fiaddl
shlb
pop
ret
repz
cmp
sub
lahf
mov
in
scas
ljmp
cmp
addl
pop
dec
xor
push
rolb
cmp
or
test
mov
out
jbe
jge
inc
and
inc
dec
cmp
and
addr16
je
push
lods
dec
je
in
jle
jl
push
fadds
call
and
ja
jne
jbe
arpl
in
lea
dec
mov
add
cmp
dec
ljmp
push
mov
jnp
mov
jg
insl
jge
and
out
bnd
xchg
and
push
fisttps
aaa
pop
lret
mov
shlb
sbbb
nop
add
or
add
add
aaa
push
pop
test
or
push
test
pop
mov
inc
push
pop
fsubs
cmp
adc
jbe
js
rcrb
sub
xlat
aas
xor
xor
mov
movsl
mov
and
mov
pushf
xchg
out
stos
sti
addr16
out
repz
add
gs
data16
sbb
imul
pop
jp
pop
repnz
fdivl
cmovl
mov
outsb
mov
push
out
xor
pop
add
rclb
inc
mov
dec
dec
mov
dec
mov
movsl
and
leave
jae
adc
mov
stc
leave
fldl
dec
lcall
inc
sub
cmp
jne
ret
cmp
cmp
mov
jne
adc
insb
shl
pushl
test
sub
sti
shrl
mov
add
dec
mov
popf
or
flds
hlt
push
into
popf
repnz
loopne
int3
mov
mov
add
push
and
loopne
mov
mov
or
lret
popf
xor
xor
jl
andl
xchg
dec
mov
cmc
ret
mov
nop
fsubl
cld
sbb
or
insl
ja
cld
jmp
stos
push
mov
lret
xor
dec
aaa
cli
fcoms
push
icebp
arpl
dec
xorl
mov
pop
cmp
push
inc
sbbl
fs
push
jl
inc
aas
stos
addr16
daa
cmpsb
add
testl
jo
xor
push
and
aad
or
jmp
stos
loopne
mov
jg
inc
out
imul
sub
lgs
mov
cltd
dec
rorl
in
xchg
bound
add
test
orl
push
outsb
cli
outsl
jb
jne
or
push
fdivl
dec
mov
jle
popf
and
jne
xchg
jmp
add
mov
mov
es
rolb
in
cmp
test
incl
loope
inc
fwait
jmp
dec
mov
xor
insl
movl
and
loopne
push
cvtps2pi
imul
sbb
or
rolb
mov
icebp
mov
icebp
sub
mov
pop
xorb
in
fnstcw
pop
rclb
outsl
push
cmpsl
imul
cli
fs
aad
fucomi
xchg
xor
test
int
xor
dec
inc
push
jl
jmp
xchg
jge
pop
clc
sbb
popf
out
jge
sbbl
daa
mov
rcrl
dec
iret
or
icebp
dec
and
insl
pop
icebp
xchg
dec
inc
outsb
dec
pop
inc
sbb
out
outsb
or
mov
mov
xor
cli
add
sbb
jnp
xchg
or
mov
insl
incl
xchg
sbb
sbb
notl
or
lcall
or
adc
pop
xor
jl
nop
and
pushf
inc
idiv
out
push
outsl
loope
dec
cli
add
jnp
in
es
movsl
jae
in
das
push
stos
int
cmpsl
xor
js
mov
stos
dec
dec
mov
adcl
imul
sbb
push
dec
adc
movsb
shlb
xchg
adc
adc
jb
arpl
cmpsb
xor
pushl
add
pop
popa
ss
mov
sbb
or
xor
in
sub
push
ljmp
jp
sub
mov
addl
sub
aas
push
lds
mov
mov
mov
adc
or
or
scas
cmp
cs
inc
bound
sub
or
xchg
mov
and
pop
or
in
mov
add
or
call
jne
icebp
dec
inc
sbb
fsubrp
xchg
aam
lcall
jg
stc
ror
dec
inc
sarl
jmp
dec
sub
xchg
xor
lds
out
and
push
lods
stos
sub
inc
mov
dec
mov
lea
leave
xchg
xor
neg
cmpsl
pop
xor
roll
jecxz
adc
in
or
push
jmp
movsb
dec
popf
mov
std
outsl
lret
cwtl
cmp
push
inc
xor
pop
fs
jge
cmp
mov
lea
mov
mov
mov
sbb
adc
mov
lea
dec
int3
andb
push
cmp
arpl
xchg
int
and
sarb
mov
dec
jle
push
cmp
inc
push
lcall
xorb
les
sbb
rcrb
mov
cmpsl
cmc
stc
mov
and
lahf
jmp
sbb
or
cmp
pushf
jmp
shrb
mov
ret
cmp
sub
sbb
call
dec
push
pop
xchg
xor
out
mov
aas
xchg
sub
jecxz
repnz
dec
and
scas
addb
mov
mov
aaa
fmul
xchg
pop
cmpsl
outsl
icebp
mov
fidivrl
sbb
negl
jnp
sub
ja
pop
or
lock
push
add
xor
sub
pop
pop
sti
shlb
cltd
mov
pop
xor
adcb
cmpsl
xchg
jne
nop
pop
fsubl
dec
mov
popf
call
loopne
dec
pop
stos
or
daa
popf
inc
xchg
pop
mov
pop
mov
sub
scas
xor
push
gs
mov
inc
lds
inc
cmc
mov
push
sub
inc
lods
call
popf
clc
jl
jo
or
adc
addb
cmp
leave
ss
addr16
adc
lret
je
push
and
sbb
push
mov
mov
push
rcrl
add
lea
dec
lock
push
mov
xchg
fbstp
dec
or
mov
in
push
jmp
in
loope
pop
pop
inc
ja
test
sbb
xlat
or
or
adc
inc
in
idivb
push
cld
push
in
loop
adc
sti
jb
jb
sbb
or
cwtl
cli
add
sarb
cmp
mov
dec
sub
jmp
bnd
movsl
cmpsb
lahf
repz
mov
lea
sahf
and
popf
and
or
lcall
pop
inc
loopne
mov
jo
imul
stos
lea
ljmp
mov
and
es
pop
sbb
cli
cltd
cli
mov
mov
int
jnp
es
das
jge
fidivl
xorl
and
ret
fstp
dec
jbe
fsubl
push
push
ffreep
in
rcrl
dec
inc
and
fs
cltd
aaa
mov
cmpb
push
enter
shrl
cwtl
popa
cmp
scas
jg
mov
ds
mov
dec
les
or
scas
call
mov
lock
mov
gs
and
jge
fstpl
push
popa
pop
xchg
mov
outsb
sub
and
leave
cmpsl
ds
cltd
mov
mov
lds
push
mov
rorl
xchg
or
mov
shlb
or
xchg
add
std
mov
es
shlb
ss
into
fcomps
out
loope
push
lcall
cmp
movsl
jecxz
sbb
xchg
loopne
inc
dec
dec
shlb
loope
mov
cld
stos
mov
movsb
or
jns
cmp
stc
gs
sbb
jle
jge
push
jbe
sbb
mov
lock
arpl
lods
test
adc
sub
mov
stos
or
aam
ljmp
xor
or
push
add
fldt
movsb
fcoms
test
inc
ficoms
nop
fstps
mov
fdivrs
inc
popa
test
dec
mov
xchg
jns
or
movsl
pop
sbb
stc
inc
inc
cmp
inc
fs
adc
sbb
iret
dec
leave
xlat
and
mov
dec
imul
dec
out
ja
xor
imul
ret
stos
inc
pop
fcoml
pusha
scas
or
lea
out
cmp
xchg
and
push
cltd
movb
or
out
ss
jb
xorb
pusha
shll
flds
mov
std
addr16
scas
xor
fistl
mov
push
ja,pn
mov
in
add
lret
fsubl
mov
imul
jbe
loopne
and
jo
or
push
pop
int
dec
mov
popf
je,pn
sbb
xchg
adc
hlt
pusha
cli
xlat
insl
test
insl
leave
nop
ja
mov
sub
cs
movsb
mulb
ficoms
cltd
inc
push
jecxz
mov
xchg
shr
insl
push
push
adc
cld
clc
pop
xor
sub
xchg
lahf
jns
inc
push
cmpsb
push
leave
lret
add
cmc
loope
adc
jbe
scas
filds
scas
and
loopne
or
xchg
mov
jg
shl
push
jnp
pop
or
lea
js
test
cmpsl
mov
mov
cli
sbb
leave
fnstsw
cmp
adc
insl
call
xor
jno
test
out
test
sbb
mov
cld
sahf
inc
add
xor
stc
fadd
inc
adc
and
bound
das
sub
insb
pop
mov
dec
out
or
outsl
pop
push
inc
mov
inc
imul
xor
scas
pushf
add
push
std
lock
jne
ss
push
outsl
dec
xchg
add
jecxz
xchg
sub
pop
jo
jmp
stc
aaa
addl
rcrb
jle
dec
dec
sbb
mov
movl
mov
cwtl
mov
inc
mov
rcll
push
xchg
or
insl
aad
pop
xor
fdivl
idiv
loopne
jbe
jl
addr16
push
pop
repz
stos
les
push
xor
adc
repnz
insl
aad
mov
push
sub
jne
mov
mov
and
clc
popa
mov
lret
push
push
outsl
jo
and
sub
imul
mov
call
insl
lods
and
inc
and
movsl
lea
mov
add
rcrb
mov
fistpll
and
xchg
xor
mov
cli
jle
cmp
lret
xchg
sti
mov
in
in
cmp
jmp
mov
movsl
mov
lahf
in
mov
stos
dec
mov
mov
jnp
loope
test
pop
fidivrl
negb
and
sub
jp
test
xor
dec
pop
in
push
mov
jg
das
je,pn
jp
mov
adc
in
push
cmp
push
jl
mov
jne
jle
mov
sarb
jbe
jmp
jne
stc
repz
or
mov
xchg
testl
and
inc
jno
dec
ret
push
in
push
inc
push
int
addb
cmp
lea
xchg
shrl
fidivrl
sarl
movsl
push
lahf
mov
std
lret
jno
jle
test
aas
insl
jb
in
imul
mov
out
jle
mov
dec
pop
cmp
or
push
adc
xlat
inc
jo
es
adc
dec
inc
mov
out
sub
xchg
add
mov
or
push
jb
add
enter
jmp
adc
subb
fmuls
cmp
loope
adc
out
jg
and
add
test
or
adc
lret
cmpsb
gs
add
mov
mov
push
fsubrp
aaa
cli
jae
add
sbb
leave
jmp
out
xchg
icebp
jns
aam
enter
xchg
jg
fiadds
inc
xorb
push
dec
adc
mov
arpl
sub
in
or
daa
fmul
pop
adc
pop
jmp
loopne
fs
xor
fstps
inc
in
mov
add
stos
or
icebp
mov
dec
call
mov
xor
scas
scas
addr16
adc
orl
stos
jge
cwtl
out
paddq
shlb
adc
hlt
mov
shl
pop
xor
movb
pop
or
into
inc
adc
xchg
or
fld
test
xor
fisubl
adc
sbb
movb
mov
adc
ret
aam
test
loop
not
mov
push
mov
inc
test
jp
test
add
aad
frstor
jg
pop
int
nop
sbb
xlat
jmp
jae
pop
xchg
push
add
outsb
push
push
stos
lock
shr
mov
scas
cmp
dec
mov
popa
jle
xor
loopne
lahf
cwtl
int3
dec
dec
xor
arpl
ficoms
xchg
rcll
xor
addr16
shlb
nop
cmp
xchg
or
add
pop
jmp
add
mov
sbb
jo
mov
mov
jge
es
mov
lret
popf
push
add
xor
xor
push
shll
sbb
sbb
push
call
and
jecxz
subl
lds
or
shl
fdivrs
xlat
jg,pn
pushf
dec
sub
mov
sub
sarb
imul
gs
arpl
cltd
icebp
adc
aaa
shl
add
fs
dec
xchg
sbb
nop
cmc
rcrl
dec
inc
xor
xor
fidivl
sub
mov
sbb
js
addr16
idivb
fcoml
arpl
scas
je
dec
push
fistpll
and
sub
cmp
cmp
js
ss
insb
mov
iret
les
jle
mov
adc
mov
in
sub
mov
jmp
js
pushf
mov
dec
inc
inc
mov
in
mov
cmpsb
fcomip
push
and
aaa
rcrl
ljmp
cmc
subb
lea
mov
add
cs
pop
add
push
icebp
stos
out
int
dec
mov
loope
and
mov
call
inc
pop
and
and
or
and
pop
jp
mov
jl
iret
mov
arpl
out
adc
pop
icebp
das
fstpt
sub
and
xor
ret
rcll
sbb
and
xor
stos
fisubrl
add
dec
stos
cmp
push
mov
dec
mov
cmp
loop
in
and
insb
lcall
mov
je
xor
cmpb
cltd
lret
ja
or
arpl
jb
fwait
fwait
icebp
adc
dec
mov
jecxz
jle
push
adc
cld
dec
mov
addr16
mov
push
jecxz
jne
test
out
sbb
pop
and
fldcw
loopne
jle
inc
loop
xchg
mov
jle
push
pop
mov
mov
push
les
xor
scas
adc
xor
rdseed
jecxz
cmp
sub
mov
repnz
mov
orb
mov
add
adc
ret
dec
movb
mov
sbb
mov
mov
push
xor
and
ss
push
mov
cs
dec
aaa
mov
jne
add
fs
cmpb
fisttpl
pop
clc
cmp
std
jo
or
fistps
jbe
xor
sarb
and
movb
mov
inc
push
ljmp
adc
faddl
jo,pt
aaa
xor
lret
out
dec
pushf
ss
mov
cmp
adc
jmp
les
cmp
insl
lret
in
and
cmpsl
inc
xchg
cmpsb
repz
negb
scas
cmpl
into
cmp
cmpsb
std
push
in
cmp
or
sbb
test
pusha
or
fldl
inc
mov
push
mov
adc
cmp
push
pop
lods
js
and
xor
sub
or
adc
push
insb
jmp
lret
jmp
xchg
pop
loop
insl
sti
lret
xchg
fcomps
les
mov
cmp
aaa
test
push
jnp
lds
mov
inc
mov
and
and
sbb
mov
mov
dec
aad
inc
pop
pop
das
je
and
mov
fimull
mov
or
and
push
adc
stos
push
mov
stos
jp
cmpsl
outsb
inc
jmp
aas
cmpl
scas
push
mov
fwait
mov
jnp
lock
lret
pop
dec
out
or
pop
rclb
mov
mov
jno
in
xchg
bound
dec
pop
mov
dec
xchg
ds
inc
clc
or
xor
lock
outsb
xchg
or
ret
or
jle
sub
shlb
jl
xchg
aas
xor
shlb
dec
inc
xor
lcall
lahf
jle
add
jg
mov
scas
mov
movsb
gs
sbb
mov
aaa
or
push
cmp
repnz
push
sti
mov
push
push
xchg
cwtl
ja
mov
lret
daa
ljmp
push
cmpl
pop
inc
fidivl
lock
out
mov
icebp
leave
add
das
rorb
jae
pop
je
stc
popf
xor
jno
inc
push
lock
dec
andb
inc
movsl
mov
fisubrl
mov
add
xchg
pop
rol
and
push
mov
sub
pop
sbb
stos
inc
mov
fstpt
movhps
jns
aaa
mov
push
cmpl
adc
shrb
pop
push
push
jns
es
xor
jnp
add
inc
gs
stos
div
popf
stc
jae
jecxz
orl
sub
pop
mov
int
sub
pop
adc
lds
or
bound
pushf
insb
pop
pushf
lret
xor
or
fstpl
add
xchg
fadd
data16
inc
ss
xor
xchg
mov
fdivrs
aam
in
jns
repz
ljmp
andb
pop
xlat
or
into
lock
mov
inc
imul
xchg
cmc
xor
mov
pop
sub
pop
jbe
rolb
mov
sbb
out
push
test
fdivr
mov
dec
mov
imul
sub
pop
add
popf
mov
aad
mov
jns
sub
xchg
xor
push
jnp
ret
cmp
pop
clc
inc
je
and
xchg
dec
pushf
jecxz
stos
sbb
cld
arpl
mov
cmp
loopne
pop
mov
and
jp
jmp
pop
cmpsb
cltd
je
xchg
push
dec
aam
push
inc
lds
add
push
stos
jno
insl
jb
imul
add
jle
jae
cmpsl
push
mov
jge
mov
mov
pop
out
add
pop
insb
dec
aaa
repnz
inc
xchg
jge
push
dec
push
xor
mov
sahf
jae
clc
out
sbb
inc
and
test
cld
aam
push
jno
movsl
jp
div
aas
adc
cs
lret
push
add
nop
imul
js
in
xchg
xchg
add
sub
push
mov
jg
jge
ljmp
nop
inc
push
mov
add
aad
or
or
push
cs
xorb
mov
imul
dec
ja
mov
leave
nop
inc
movsl
pop
mov
mov
repnz
xor
or
and
ret
cmp
xor
add
mov
fs
cmp
dec
sub
jns
data16
xchg
pop
cmp
in
lods
movsb
test
cmp
in
xor
scas
mov
xor
inc
dec
xchg
and
out
mov
lahf
pop
push
mov
pop
xor
mov
mov
fmuls
add
inc
cmp
xchg
or
xchg
subl
jo
or
sbb
push
dec
push
pop
repz
popa
or
cmp
cmp
fs
stos
dec
in
lock
mov
addr16
mov
pop
mov
imul
mov
out
lods
fidivrl
push
out
icebp
stc
pop
or
ss
aas
je
out
push
lods
sub
mov
testb
jae
xor
push
mov
and
jb
sbb
in
insb
push
scas
push
movsl
inc
pminub
insb
nop
inc
mov
ljmp
jbe
add
out
push
sub
test
push
enter
xor
fwait
and
mov
dec
popf
xor
xchg
gs
xor
imul
sbb
sub
cmc
repnz
adc
out
cli
xor
shlb
adc
mov
pop
and
mov
ja
mov
fwait
gs
test
inc
lods
xchg
or
xchg
jnp
mov
xor
xor
pop
dec
pusha
pop
mov
shlb
jmp
aam
cmpsb
fsts
push
xchg
call
dec
cmp
xchg
sub
pop
int
out
stc
xchg
aaa
cmpsl
insb
ds
std
test
stos
push
daa
push
cmp
scas
jno
jb
push
xor
das
xchg
ja
and
lcall
xor
lea
push
jno
mov
sub
push
or
sub
out
push
fisubs
pop
or
mov
jbe
ja
xchg
ret
sbb
xor
je
faddl
and
sbb
movsb
mov
fnsave
std
fs
mov
or
lret
ret
punpckhwd
push
pushf
mov
aad
push
cmp
push
inc
je
addl
in
out
ljmp
mov
rclb
lret
outsb
cmpsb
jae
cmp
mov
aad
mov
inc
and
fadd
icebp
add
mov
das
dec
sar
imul
fs
fcmovnb
mov
popl
in
xlat
mov
js
xor
mov
add
in
enter
out
jle
aaa
rcll
mov
sbb
push
sti
mov
cld
fldenv
int3
data16
mov
lods
psubusw
jae
mov
aas
push
out
je
push
add
xchg
scas
cmpsl
or
xchg
int3
mov
mov
xchg
into
xchg
das
ja
int
pushf
mov
dec
push
out
ja
int3
mov
push
js
cli
lahf
dec
lea
mov
inc
icebp
mov
lcall
sub
sahf
mov
ja
lods
rcrl
mov
cld
mov
mov
pop
dec
leave
jno
fs
adc
aam
sub
push
fisubrs
inc
mov
xor
fimuls
xor
mov
xchg
jno
outsb
sbb
mov
rclb
test
mov
int
loope
fwait
mov
pop
xor
idivl
dec
jle
outsb
sbb
ret
xchg
jnp
sub
xchg
movsb
xlat
sub
lcall
test
push
je
push
xchg
adc
lret
cmp
mov
jmp
add
es
jbe
lea
inc
test
adc
sbb
shr
adc
in
jb
inc
or
std
add
and
adc
cltd
lcall
push
xchg
mov
cltd
popf
flds
insb
jl
xchg
mov
jnp
idivl
into
or
dec
lods
push
sbb
cmpsb
movsb
mov
icebp
loop
jb
dec
push
call
xor
lahf
pop
mov
mov
cmp
gs
add
dec
dec
in
in
scas
xchg
clc
dec
jecxz
adc
lds
add
test
pop
ja
lret
fdiv
and
cmp
jg
fadd
insb
cwtl
xor
inc
call
decb
jnp
subl
inc
jae
jb
int3
sarl
adc
repnz
xchg
je
xchg
sub
adc
dec
rorl
imul
pop
pop
stos
popf
int3
rol
mov
dec
out
push
jp
xchg
xchg
xchg
fcompl
fisttpl
mov
adc
popl
mov
sbb
mov
mov
notl
imul
icebp
xor
mov
or
stos
mov
ss
push
add
lods
ljmp
inc
add
jl
fcom
popa
adc
mov
stc
lret
push
flds
nop
xor
xchg
pop
cltd
sub
aam
mull
sbb
sub
loop
pop
sarl
add
adc
add
cmpsb
and
andl
push
fsts
mulps
movsl
aas
push
fstl
cs
lahf
sub
dec
push
hlt
sahf
pop
mov
mov
and
lahf
mov
push
push
mov
clc
mov
xchg
lcall
xor
or
and
imul
sub
aas
mov
jne
out
xor
mov
adc
out
js
icebp
cmp
mov
ds
mov
pop
shl
aam
shll
inc
call
and
cmp
mov
ficoml
pusha
arpl
je
imul
lds
sub
ja
pop
mov
pop
push
xchg
loop
pop
xchg
mov
sub
mov
scas
inc
movhlps
test
gs
push
and
dec
iret
inc
pushf
xchg
fsubrl
and
mov
repnz
mov
mov
xor
movsb
jns
and
and
mov
add
sarb
push
ja
or
sub
fs
mov
pop
arpl
std
mov
push
xchg
inc
cmp
mov
xor
sbb
push
outsb
and
pop
pusha
ja
or
cmpsl
aas
xlat
es
lds
mov
into
cmp
or
mov
dec
fsubs
and
add
lcall
adc
mov
add
and
xor
dec
dec
mov
repz
and
sub
pop
jp
rolb
inc
fwait
mov
daa
inc
fnsave
push
adcl
daa
call
mov
lret
es
in
xchg
incb
jg
add
je
andb
addl
fsubl
repnz
pop
add
loopne
mov
jo
sbb
mov
aaa
jne
mov
in
cmpsb
rcrb
loope
lcall
lods
jmp
jns
cmp
inc
sub
scas
cmpsb
repz
mov
roll
movsb
ret
dec
mov
push
pop
add
push
sbb
mov
leave
push
pop
scas
or
fisttpl
sbb
xor
pop
sbb
adc
cmp
sbb
aam
inc
dec
fstpl
dec
dec
or
push
xor
test
ljmp
out
xchg
pop
movsl
lret
lds
adc
xor
or
mov
aas
xchg
call
mov
and
int3
lret
inc
add
cmc
inc
je
aas
sbb
cli
or
mov
outsl
cmc
lea
in
addl
dec
insb
mov
jbe
cs
icebp
mov
test
pusha
mov
mov
cmpsl
sub
lcall
inc
adc
jno
jo
arpl
sbb
mov
pop
aaa
sbb
inc
mov
jg
push
insl
cmp
push
pop
rolb
pop
mov
sub
imul
cmp
fsubrp
test
push
xchg
jmp
setg
sub
popf
test
push
js
in
mov
je
popa
jnp
repnz
movl
push
enter
in
stc
pop
cmp
movsl
inc
popf
push
sbb
jb
dec
mov
xchg
mov
add
jg
daa
lds
rcll
bound
jne
sub
iret
mov
das
test
adc
add
mov
scas
cltd
das
sub
fsts
or
sbb
mov
test
ds
lcall
imul
movsb
scas
xchg
cmc
fstpt
jno
cmp
shlb
pop
add
int
xchg
jne
ror
movsl
push
mov
lret
mov
sahf
jnp
adc
popf
dec
fldl
movsb
add
dec
std
or
aam
push
fucompp
pop
push
cmp
pop
es
sbb
jbe
or
ret
out
decb
divl
outsb
loop
or
test
fisttps
cmpb
es
std
outsl
dec
jecxz
cmp
test
xlat
or
mov
and
pop
cmp
rcll
jg
adc
sub
mov
popf
push
mov
jo
dec
sbb
xchg
xchg
movsl
fwait
pushf
mov
loope
rcrb
xlat
fisubl
fwait
out
xor
aaa
repnz
mov
cltd
dec
pop
cld
fsts
jne
xchg
fsts
or
enter
add
imul
movsl
xor
jnp
into
cltd
into
xchg
jbe
out
mov
cltd
adc
pop
jne
jecxz
mov
rorb
ficoml
jb
shrl
rolb
int
sbb
enter
les
in
push
mov
std
dec
imul
jmp
xlat
sbb
or
sbb
shlb
add
in
jl
dec
imul
push
dec
dec
arpl
and
push
mov
ficoml
cmp
outsl
lret
in
mov
hlt
mov
xor
pop
sahf
and
xchg
fidivl
xor
testb
stos
mov
adc
lret
dec
inc
pop
ret
leave
cmpsl
fildl
adc
push
faddl
cli
lret
movsb
les
lahf
jecxz
xorb
pop
and
mov
loope
dec
push
mov
adc
mov
xor
and
dec
iret
dec
lcall
in
test
xchg
xchg
mov
mov
jl
cli
loope
out
pop
lea
popa
and
les
pop
call
out
lret
jg
xchg
adc
sar
out
fdivrp
fistpl
aas
mov
and
stos
and
lret
repz
mov
outsl
sub
stc
dec
clc
ret
or
xchg
or
sbb
mov
in
jg
sahf
jl
lods
into
ret
call
and
enter
out
inc
xlat
cmc
inc
addb
adc
cmp
test
fisubrl
fdivs
xchg
test
cmp
xor
cmp
andl
out
adc
fldlg2
icebp
pop
mov
into
pop
in
mov
mov
fstl
sub
icebp
add
jge
out
xor
call
icebp
movsb
xchg
hlt
mul
push
es
ss
sub
dec
popa
push
clc
inc
pop
scas
popf
push
loope
std
jmp
sub
lcall
pop
dec
imul
dec
fwait
cmpsb
mov
and
jb
xor
xchg
mov
mov
cmpsb
lea
jl
jne
loope
or
or
dec
lea
cmc
lret
jg
clc
lods
lcall
mov
add
jmp
and
push
insb
fbld
sub
xchg
mov
test
aad
pop
test
pushf
mov
and
or
lds
mov
daa
inc
inc
lea
pop
imul
rcrl
int3
idiv
mov
inc
and
imul
dec
mov
call
daa
orb
adc
or
adc
xor
or
loope
xorb
fdivrl
inc
jge
pop
or
out
iret
ret
stos
pusha
sahf
pop
out
rcrl
lea
jp
jmp
nop
and
and
xchg
stos
in
pop
aam
add
jl
pop
pop
fsub
dec
movsl
shrb
pop
shrb
cmp
and
push
jmp
ja
out
fdivrs
into
repnz
jbe
lahf
sbb
popa
ret
mov
int3
std
adc
or
mov
mov
or
cmp
sbb
lds
gs
int3
leave
fidivs
dec
sbb
shll
or
sbb
jnp
vpsubw
push
lds
mov
or
scas
divl
les
adc
in
add
dec
jo
sbb
dec
addps
push
or
mov
ja
and
add
fcompl
mov
mov
notl
dec
push
push
dec
scas
sbb
xor
lret
aam
xchg
jecxz
test
inc
and
mov
aas
sti
mov
sahf
pop
mov
pushf
cmpsb
push
ljmp
cli
int3
ss
sub
add
outsl
orb
int
outsl
movl
pop
mov
inc
aam
add
xor
mov
mov
lds
pop
cmc
arpl
fldl
sub
mov
test
nop
and
fwait
inc
int
xchg
dec
mov
jnp
mov
movsb
mov
jle
mov
sub
in
stos
test
ror
dec
push
popa
cmp
inc
xchg
xor
mov
cli
jp
shrl
push
lcall
xor
das
or
mov
push
hlt
pop
jb
movsb
popw
insl
adcb
lea
lret
popf
out
movsb
je
xchg
out
pop
test
jl
dec
add
loop
daa
add
mov
mov
xor
mov
jns
xor
rclb
sbb
push
lods
add
jbe
ss
cld
inc
movsb
scas
dec
insl
or
cmpsl
inc
xor
dec
pop
lcall
dec
or
xor
or
test
cli
and
pop
xor
adc
call
add
addr16
das
fisttpll
aaa
xor
mov
push
jo
pop
nop
dec
stos
dec
in
out
xlat
mov
sbb
xlat
cmp
xor
in
shlb
or
sarb
dec
shll
jns
cld
cli
sbb
dec
movsb
and
sub
xabort
mov
dec
mov
les
scas
popf
pop
cld
aad
ss
repnz
pop
enter
jne
jno
mov
hlt
rcrb
mov
scas
frstor
flds
inc
jne
xor
dec
cmp
inc
pusha
sbb
fcoml
into
dec
popf
push
insb
shrl
xor
dec
inc
ja
stc
or
sbb
ficoms
push
sbb
das
or
leave
adc
sub
push
mov
mov
movsl
nop
je
int3
pop
push
xchg
das
cltd
pop
xor
sub
sub
sbb
repnz
cmp
and
adc
popl
xor
xor
jns
mov
add
dec
jge
push
ljmp
mov
inc
cmpsb
jp
loopne
pop
movl
jmp
imul
insb
fsubs
out
pushf
fisubrl
aam
xor
clc
push
inc
ja
in
scas
add
iret
cmp
ja
dec
movsb
sbb
dec
rorb
xchg
inc
jp
xchg
adc
pop
mov
inc
cmpsl
jo
and
cmp
mov
or
loop
add
mov
inc
addr16
cwtl
sbb
mov
orb
push
mov
mov
jb
data16
push
jb
pushf
std
lret
insb
rol
mov
lret
out
sbb
inc
sub
out
neg
sub
adc
imul
sub
dec
mov
mov
mov
stc
xchg
add
jno
mov
int3
xchg
in
xor
cmp
mov
fiadds
mov
out
mov
mov
int
and
adc
dec
cmpsb
gs
pop
dec
aas
jns
push
imul
pop
push
pop
xchg
mov
arpl
pop
and
mov
je
push
mov
jmp
rolb
movsl
test
xor
add
mov
rep
lods
mov
adc
jmp
jmp
leave
fidivrl
push
push
inc
inc
xlat
pop
and
mov
inc
add
add
aaa
popa
incb
aaa
filds
xor
cld
cmp
adc
lock
xorb
jp
fbld
inc
stos
stc
pop
or
or
cs
out
fwait
push
pop
and
popa
icebp
lods
pusha
sti
movl
les
shlb
cmp
ds
pop
jp
mov
and
adc
cmp
aas
cmp
jmp
add
or
and
jecxz
or
cmc
cmp
inc
pushf
jbe
pushl
scas
fcmovbe
mov
rol
ror
lcall
jae
inc
or
and
cwtl
xchg
inc
push
pop
mov
inc
cmc
jp
pop
lcall
xchg
and
or
roll
and
call
out
fmull
aaa
mov
cltd
dec
pusha
arpl
mov
mov
dec
incl
rcrl
loop
mov
push
inc
pop
out
and
mov
push
shl
fimull
bnd
mov
leave
ds
das
sub
aaa
cmp
sahf
jecxz
repnz
notl
push
pusha
test
mov
sti
mov
xchg
out
adc
dec
push
mov
or
lds
or
data16
mov
dec
push
lahf
mov
xchg
in
in
int3
cwtl
rcr
in
pop
rcll
and
dec
mov
dec
xchg
mov
sti
or
addr16
inc
rcl
cmp
ret
lods
neg
test
cmc
scas
mov
idiv
xchg
pusha
lods
jbe
xchg
fildl
shrb
es
inc
adc
push
cs
pop
cmp
or
or
scas
addr16
jmp
loope
fisubrs
fwait
das
mov
in
and
push
adc
lahf
mov
adc
ret
hlt
sub
mov
nop
xchg
decl
fiadds
or
mov
repnz
sub
dec
sti
ja
in
arpl
lret
into
repz
cld
adc
and
sub
push
out
aas
push
add
or
ret
mov
mov
das
adc
jo
ss
aad
mov
inc
test
adc
lahf
pop
pop
gs
sbb
leave
sbb
fimuls
jb
push
stc
push
dec
pop
xchg
inc
push
fwait
xor
cmp
iret
jg
xchg
lds
test
outsl
fmuls
test
jo
mov
sbb
outsl
xor
mov
pop
aas
pop
pop
push
lea
dec
jg
repz
pop
je
lods
and
mov
mov
pop
xchg
adc
gs
shrb
in
inc
sti
loope
in
sbb
call
or
fcomps
imul
xor
push
addb
std
lock
and
fstpt
test
cwtl
jnp
sbb
mov
jns
cltd
mov
daa
mov
jns
jo
dec
mov
js
mov
push
in
inc
xchg
push
ficoms
sub
orl
out
int
mov
mov
xchg
test
mov
pop
ret
jg
cmpb
add
cmpsl
lret
sbb
imul
xchg
fadds
mov
fisubl
or
sub
lcall
clc
push
xor
shlb
repnz
loopne
cmp
mov
sbb
pop
dec
std
jmp
inc
or
stos
sbb
mov
lcall
rorl
in
scas
push
into
push
xchg
mov
int
test
dec
push
mov
push
jbe
imul
and
or
hlt
notb
adc
loop
fildl
mov
inc
ljmp
pop
adc
in
cmpsl
mov
into
push
push
inc
inc
stos
pop
push
lahf
outsl
dec
mov
lcall
mov
scas
dec
loope
pop
mov
int
mov
imul
addb
push
sub
inc
ja
mov
mov
daa
xchg
popf
inc
inc
add
iret
push
dec
or
imul
lods
xchg
fdivl
sarl
movsb
add
leave
cmp
sub
call
xchg
add
push
pop
into
aam
daa
repz
dec
or
push
aaa
jp
sti
enter
cld
adc
inc
clc
pop
test
and
inc
or
and
xchg
out
hlt
or
inc
add
stos
adcl
lret
add
mov
xchg
mov
jb
xor
hlt
fnstcw
jno
lret
test
js
in
add
and
cmpsl
xchg
mov
add
insl
ss
fistps
cmpsl
jns
mov
lret
push
pushf
pop
jle
call
push
lds
sub
aaa
mov
in
jns
insl
jae
repnz
inc
xchg
cmp
and
cmp
fs
jmp
dec
insl
push
mov
int
jnp
dec
xchg
and
pop
test
jnp
lret
shrl
dec
ss
icebp
in
mov
movsb
jle
ret
pop
enter
lcall
xchg
test
stos
push
jg
sub
push
xchg
and
cmp
add
arpl
sbb
imul
insl
pop
mov
popf
hlt
and
decl
dec
xorb
outsl
push
aaa
push
loope
mov
pop
cmp
and
ljmp
ss
dec
lea
sub
sahf
movsb
jge
ret
jle
sbb
mov
sub
pop
mov
les
or
inc
jecxz
int3
sbb
popl
sub
hlt
pop
ret
dec
jno
popf
lea
into
xchg
enter
aas
or
xor
pop
inc
mov
mov
mov
mov
bound
adc
pop
jo
into
aas
mov
adc
icebp
pop
sbb
push
adc
nop
loope
ja
xlat
adc
loop
pop
mov
xor
push
inc
inc
add
dec
push
loope
iret
or
sbb
jecxz
add
dec
mov
imul
pushf
sub
and
maxps
mov
icebp
fisttps
jnp
jecxz
dec
sub
lahf
lea
xchg
cli
adc
imul
jnp
das
ds
mov
inc
pop
sbb
daa
ljmp
inc
test
jle
scas
popa
add
sbb
cmc
inc
arpl
fs
aad
inc
cwtl
shll
je
pusha
shr
dec
xlat
les
mov
scas
sbb
fcmovnu
and
jbe
fisttpll
enter
shl
push
imul
je
xchg
sbb
test
std
mov
cmp
testl
push
mov
sahf
xor
cltd
sbb
lock
mov
aas
shl
mov
out
jne
jns
nop
daa
dec
arpl
aaa
cmp
scas
and
dec
jae
in
jb
pop
fsubs
mov
cmp
and
pusha
mov
xlat
shlb
xchg
adc
lret
xor
gs
imul
and
gs
loop
jne
mov
js
sub
push
pop
test
xchg
xor
mov
or
repnz
fcomps
adc
lods
lahf
stc
xchg
cli
clc
cltd
sbb
inc
roll
inc
ljmp
ss
inc
imul
jne
inc
mov
pop
jae
imul
into
es
add
pop
mov
mov
stc
inc
mov
push
hlt
cltd
push
mov
push
push
mov
inc
ret
jg,pn
test
in
xorb
push
and
pop
bound
push
xchg
and
loope
add
add
push
lret
rep
jns
pusha
mov
daa
iret
xchg
mov
mov
jne
subb
test
in
xchg
pusha
add
lahf
adc
aad
cmpsl
cmpsl
cmp
push
adc
addl
sbb
prefetcht2
jmp
imul
rolb
hlt
aaa
in
dec
pop
mov
scas
shrb
adc
int3
arpl
jle
jle
push
mov
mov
dec
stos
pop
ja
cmpsl
test
xchg
shl
sub
movl
xor
rcl
xchg
aam
xchg
jo
repnz
flds
js
incl
inc
out
dec
push
jnp
inc
call
les
add
xchg
sub
lret
cmp
add
adc
out
mov
fbstp
in
pop
xor
sahf
mov
mov
xor
sbb
sub
iretw
je
mov
nop
sarb
jge
scas
push
ficompl
pop
testl
push
ljmp
or
bound
repz
pop
ror
cld
mov
add
jbe
xchg
adc
mov
imull
in
add
push
or
mov
pusha
enter
inc
repnz
es
cwtl
xchg
aas
out
scas
pop
or
in
adc
jecxz
xchg
loope
mov
adc
les
aas
das
mov
decb
inc
push
mov
pop
aas
ret
add
or
mov
popf
ret
mov
sbb
and
in
dec
sbb
dec
jo
lds
sub
data16
rcr
mov
sahf
aad
mov
rorl
bound
arpl
push
or
dec
fwait
or
sub
rcrb
mov
or
js
sbb
pushf
cmp
mov
or
movsl
aad
jne
sarb
pcmpeqw
es
int
cli
in
sbb
insb
aaa
lret
cwtl
lea
sbb
sub
out
xchg
inc
outsl
pop
jle
push
ss
pop
pusha
dec
mov
adc
insb
mov
clc
paddb
test
add
dec
push
add
loop
xchg
subb
jns
dec
xlat
out
sub
arpl
add
cs
mov
sub
std
loop
dec
test
and
jmp
push
shlb
popf
es
fldl
and
jge
data16
xchg
imul
hlt
and
push
fidivrs
jae
mov
imul
push
sarb
in
mov
cmp
or
cmovg
int3
xchg
xor
push
or
movsl
int3
ds
mov
jmp
sub
cltd
or
sbb
xchg
mov
repnz
push
int
push
aaa
pop
cmp
int
in
cmp
lds
cmp
push
mov
and
aaa
sub
in
dec
fisttpll
and
fucomp
aam
xor
cmp
xchg
scas
cmp
lret
adc
xchg
mov
insb
out
mov
movsl
test
mov
dec
inc
mov
dec
pop
loope
aad
push
stc
xchg
gs
outsb
and
inc
notb
mov
and
icebp
test
outsb
ja
or
inc
xor
movsl
jge
cmpsb
xchg
test
inc
fwait
xor
imul
mov
or
inc
adc
sbb
cmc
jns
mov
rcr
mov
xlat
lret
add
mov
cmp
loop
rorl
in
add
dec
push
push
jb
iret
mov
aas
push
sbb
lods
sub
push
cs
int
sub
lock
jp
aas
pop
sti
vpmaxsw
pop
shlb
loopne
fcomp
adc
loop
jmp
pop
push
adc
mov
mov
fldl
add
sbb
push
dec
int3
cmp
gs
push
lcall
icebp
incl
mov
scas
mov
jp
loopne
and
fsubs
push
push
add
dec
lret
rcr
ret
xor
add
sbb
lcall
adcb
jnp
push
cmc
cs
jb
mov
std
push
or
push
outsb
femms
or
or
lret
cmp
xchg
rolb
push
add
mov
lret
enter
pop
loop
sub
outsb
outsl
icebp
pop
ljmp
out
jmp
dec
push
push
rorl
add
add
dec
insl
jmp
mov
cmp
out
repz
aas
push
jb
outsb
call
lret
in
sti
ss
push
xor
std
cmpsl
aam
mov
and
mov
rcrb
pop
add
and
xchg
fs
insb
aaa
xor
xorl
lock
pop
inc
dec
mov
aaa
inc
lods
and
or
inc
jns
mov
xor
ljmp
stos
jmp
and
test
or
inc
adc
sti
push
stos
sbb
or
dec
aam
sub
ljmp
ljmp
jp
cmp
adc
inc
adc
clc
mov
pop
addb
pop
es
xor
hlt
lods
mov
test
add
xor
lds
push
cmp
lods
cmp
nop
sbb
mov
stos
hlt
in
pop
inc
adc
aam
cltd
add
lcall
inc
pop
or
jl
aas
lea
leave
insb
pop
fidivs
lds
mov
rcrb
lret
les
pop
mov
shlb
popf
add
lock
bound
sub
sti
mov
jecxz
xchg
lods
xor
push
test
arpl
pop
insl
daa
cmp
adc
repz
and
add
daa
add
movsl
adc
xor
dec
out
push
jecxz
xchg
stc
fiadds
mov
add
out
jo
lock
or
push
sub
push
mov
push
sbb
hlt
inc
push
repnz
xchg
stos
add
xor
imul
cs
sub
popf
fisubl
lds
lret
loop
push
mov
inc
pop
push
ja
sub
insl
js
aad
fists
cmp
push
sub
inc
cmp
pop
stos
push
xchg
pusha
int
mull
inc
sub
dec
sbb
and
push
inc
or
pop
mov
and
push
outsb
sub
inc
loope
sbb
mov
lds
push
clc
mov
inc
jmp
lret
lea
test
jmp
icebp
inc
jge
push
bound
and
ror
jmp
loop
push
bound
dec
bound
lods
or
std
push
adc
mov
icebp
xor
sbb
mov
fs
mov
in
xor
push
sbb
adc
insb
pop
cli
int
mov
sbb
add
loopne
test
les
push
push
cld
mov
pusha
into
icebp
adc
rcrb
insl
out
dec
jno
ret
jge
dec
pop
outsl
add
in
xor
fsubrp
test
out
movsl
jnp
adc
bnd
filds
addr16
xchg
jbe
stc
sbb
xchg
lods
cltd
xor
xor
xor
movsb
pop
js
int3
and
xchg
es
inc
js
push
dec
js
push
rcrb
dec
js
fcompl
or
out
mov
scas
dec
or
mov
test
push
xchg
into
inc
sarl
out
iret
xchg
xor
insb
test
scas
popf
pop
out
mov
or
shrl
jge
sub
mov
aad
fmuls
inc
stc
cmp
fs
bound
imul
stc
adc
adc
mov
adc
sbb
or
and
pop
pop
inc
adcl
or
lock
popf
adc
ret
xchg
sti
xchg
int
andb
aad
test
push
or
dec
mov
adc
stos
jb
xchg
push
inc
adc
xchg
bound
push
inc
inc
jnp
inc
sbb
or
jne
jmp
cmp
and
push
xchg
mov
mov
lcall
jns
dec
adc
jl
pop
sahf
hlt
repz
push
mov
scas
cli
lods
sbb
into
xchg
lret
add
inc
jb
jne
in
sub
push
xor
mov
add
movsl
cwtl
xor
pop
ret
jl
push
fwait
je
nop
rorl
sub
data16
push
cs
mov
push
add
sbb
mov
fdivr
pop
and
mov
or
insb
sub
aas
ret
cmc
jae
mov
mov
loop
xchg
push
orl
xchg
inc
cs
xlat
cwtl
and
test
pop
push
scas
test
rcll
daa
pop
sub
mov
add
or
mov
mov
into
test
jno
push
jae
les
add
push
mov
mov
adc
arpl
push
iret
in
popf
xor
in
mov
loope
xor
mov
call
loopne
iret
lahf
xchg
push
add
push
lods
xor
cld
xchg
xor
imul
add
adc
outsb
push
ret
xor
ds
test
sbb
mov
call
add
lret
insb
sbb
fadds
icebp
std
mov
outsb
fdivrs
xchg
cwtl
jmp
pop
sbb
xchg
das
xchg
adc
cld
clc
pop
pusha
inc
sbb
and
push
gs
mov
mov
pop
sarb
hlt
mov
stc
loope
gs
xchg
dec
push
jne
xchg
xchg
cmpsb
jecxz
imul
loope
in
icebp
jmp
sub
jecxz
in
aad
sub
jbe
mov
fnstcw
adc
jbe
cmp
jp
in
nop
fisttps
cs
adc
jo
inc
arpl
stos
xchg
aas
pop
inc
andb
cld
and
int
push
push
test
ret
das
mov
xchg
jecxz
mov
ja
inc
add
and
aad
leave
std
lods
outsl
jp
subb
cmp
sarb
jge
pop
mov
hlt
and
or
xor
popa
adc
xor
mov
and
leave
ljmp
out
out
scas
pop
fs
fiaddl
and
imul
insl
leave
repz
dec
mov
mov
testb
cmpl
mov
mov
add
call
mov
pusha
and
xor
xlat
scas
hlt
pushf
add
inc
jle
jnp
xor
inc
xchg
sbb
les
adc
jo
test
orl
add
dec
xor
ds
xchg
xchg
lret
sub
sub
xor
fadd
jp
adc
mov
and
shrb
jae
sub
test
jae
icebp
nop
and
shlb
xor
cmp
insl
inc
sahf
sub
or
rcrl
ret
stos
xor
and
mov
icebp
mov
cli
xor
nop
leave
jecxz
fildl
mov
jmp
cmova
xchg
fnstsw
gs
and
mov
inc
pop
pop
jle
cmpsl
dec
jl
mov
fs
insb
mov
sub
sub
call
inc
fnstcw
popa
daa
movsl
adc
loope
sub
fst
add
ret
sub
lea
and
daa
outsb
mov
loopne
std
add
pop
mov
jae
insb
shr
mov
xor
aas
lds
pushf
out
add
push
cmc
out
mov
xchg
out
loope
mov
pop
fwait
cmp
jo
mov
adc
je
aad
ret
cld
xchg
pop
imul
mov
adc
addr16
pushf
popl
cmpsb
repz
scas
int3
dec
dec
std
daa
cmp
push
int3
imul
pop
and
insb
pop
mov
pop
repnz
psubusw
mov
dec
xchg
adc
xchg
add
lahf
lret
pop
sbb
push
stc
in
pop
jne
aad
imul
insb
push
mov
mov
or
insb
shrl
jle
sub
pop
dec
adc
cmpsl
add
mov
xchg
mov
push
enter
mov
dec
loop
or
lods
out
adc
leave
jne
sub
scas
mov
xor
pop
in
lock
lods
popf
leave
sbb
xchg
cmp
aas
pop
mov
fisubrl
sbb
stos
sub
sbb
sub
mov
fs
mov
xor
out
adc
sub
inc
jg
push
push
or
adc
stc
push
mov
jg
fwait
or
decl
add
dec
movsb
out
into
je
ret
aaa
xor
mov
or
and
sub
lea
push
es
aam
xlat
cmp
add
lock
mov
jp
xor
or
lret
outsl
or
sbb
inc
pop
mov
adc
movsb
imul
in
out
iret
pop
dec
ja
outsb
push
push
in
js
loop
flds
pop
decb
xchg
popa
lahf
mov
clc
dec
mov
push
cmpsb
call
mov
dec
jo
fbstp
jecxz
dec
fsubrs
lds
idivl
push
inc
pop
sbb
xor
add
or
fsubrs
sbb
ja
xor
jnp
cmp
push
hlt
ljmp
and
or
sbb
sahf
cmp
push
cwtl
xchg
jp
adc
pop
and
iret
push
pop
lods
jle
push
cwtl
fnstcw
push
jecxz
mov
aam
data16
push
fld
push
and
sbb
lcall
fs
test
xor
subps
cli
call
pop
or
loope
xchg
sbbw
cmp
fidivrs
imul
dec
ss
pop
cmp
jb
test
sahf
je
push
loop
and
aaa
sub
cli
jge
mov
adcb
mov
lcall
sbb
or
pop
mov
sub
xchg
es
ficomps
js
ficoml
rcr
out
mov
mov
xchg
pop
adc
or
sbb
mov
arpl
loope
daa
xlat
jl
shl
shll
sahf
push
mov
pop
or
cmp
sub
out
movsl
xor
mov
imul
sbb
das
jns
aam
fsts
or
push
mov
mov
lds
pusha
xchg
adc
jmp
je
fistl
sahf
xorl
mov
mov
jmp
sub
cmp
inc
lret
fbstp
rorb
jecxz
sbbl
test
jecxz
inc
je
cltd
push
dec
lret
out
lea
xchg
cmp
mov
mov
push
cmp
sarb
xor
test
xor
pop
add
adc
xchg
filds
dec
popa
or
movsl
cmp
mov
fwait
lcall
inc
adc
mov
aas
add
outsb
aam
inc
cmpsl
xchg
jnp
aad
jne
ljmp
dec
addr16
scas
pop
xchg
xor
jle
pop
mov
cmpsl
fwait
push
jno
shrl
adc
in
jmp
inc
mov
test
mov
cmp
adc
mov
sbb
jmp
mov
and
rorb
xor
mov
inc
mov
repz
ret
stc
cmp
pusha
scas
scas
and
adc
inc
push
jne
cltd
xor
in
sbb
sbb
push
add
iret
xchg
data16
fstpl
or
cmp
dec
call
add
rol
dec
int3
loop
or
sarl
mov
fdivl
lock
mov
dec
aas
adc
je
decl
sbb
js
cmp
repnz
int3
push
or
dec
dec
dec
aad
xorl
test
xor
imull
mov
movsl
shrb
dec
mov
mov
xor
fdivl
xor
dec
sbb
es
mov
adc
inc
push
jmp
sbb
adc
mov
cmp
and
sbb
mov
pushf
fidivl
clc
aam
test
idivb
xlat
xchg
jno
jb
mov
mov
sbb
or
negb
inc
push
and
scas
xor
add
mov
aas
movb
xchg
lcall
in
rcr
cmpsl
jl
popl
dec
xchg
pop
dec
icebp
pop
aas
or
fisubrs
outsl
inc
int3
pop
clc
cwtl
cmp
inc
in
lods
inc
aad
add
movsl
push
push
into
dec
icebp
adc
inc
mov
adc
cmp
and
dec
push
add
movsb
push
bound
jge
xchg
fcoms
or
lahf
aas
adc
movsl
or
or
adc
leave
outsl
add
jne
hlt
lods
cli
aad
stos
sub
jg
nop
pop
or
cmpsl
ljmp
inc
xlat
lret
scas
out
ss
or
mov
mov
mov
dec
js
popf
dec
outsb
stos
xor
or
mov
xlat
les
pop
jmp
add
insb
adc
jg
jae
and
xlat
fucomip
enter
lret
clc
adc
mov
or
iret
mov
stos
sbb
push
out
add
push
test
xor
icebp
insl
mov
sub
vunpcklps
sti
nop
dec
or
xchg
sar
push
lcall
int
mov
inc
jb
pop
cmpl
mov
pop
fucom
fxch
insb
data16
jg
adc
rcrb
cmp
shll
or
push
jle
jp
popf
inc
rcrb
rcll
scas
ret
sub
test
add
stos
orb
rorl
nop
aam
bound
dec
fstps
cld
sub
xchg
cmpsl
das
insb
dec
xchg
and
inc
mov
es
mov
insb
cmp
fs
push
dec
js
mov
cmc
je
notl
add
jg
aad
pop
fsubp
and
pop
addl
or
inc
sahf
negl
pop
inc
enter
mov
add
xchg
jnp
cli
mov
test
mov
sbbb
movl
jge
sbb
pop
mov
pusha
enter
mov
mov
in
cmc
ficoml
loop
nop
imull
cmpsb
dec
cmpsl
sbb
mov
in
popa
cmp
jbe
popf
xchg
mov
movsb
out
mov
jl
scas
inc
mov
movb
inc
and
jbe
movsl
mov
iret
adc
nop
ret
out
stos
loopne
pop
mov
hlt
inc
movsb
jg
lcall
xchg
and
pushf
fistpl
in
adc
test
clc
add
sbb
cmp
push
pop
cwtl
lea
and
shlb
cli
or
dec
mov
add
ja
adc
popf
movsb
jno
add
jne
pop
mov
sbb
pop
js
dec
adc
pop
mov
inc
xor
sti
andb
scas
jge
xlat
xchg
sbb
and
or
out
ficoms
ret
in
xchg
das
js
jne
imul
cmp
notl
adc
ss
add
or
lret
or
adc
leave
lahf
stos
daa
subl
cmp
xor
fs
shlb
lcall
push
or
js
dec
add
lock
fstpl
mov
or
or
and
or
lock
or
adc
test
xor
sti
sub
arpl
mov
out
lret
sti
add
add
repz
enter
push
or
pop
pushf
into
dec
imul
and
sub
jnp
loop
mov
push
jne
cmp
in
cltd
add
icebp
cmpb
push
mov
negl
insl
dec
mov
and
and
mov
imul
cmp
or
fcmovbe
add
movsl
xchg
mov
lret
push
fwait
popa
add
mov
or
insb
into
xchg
sub
pop
sbb
jg
mov
push
sub
mov
shlb
cmp
mov
mov
mov
xor
xchg
std
jmp
pop
mov
rorl
push
lods
push
out
lahf
add
push
add
test
add
jbe
jmp
pop
sbb
frstor
mov
pop
push
test
mov
inc
pop
movsb
pop
in
dec
cli
outsl
call
fs
jo
dec
jns,pn
xchg
jecxz
testl
int
or
mov
mov
and
mov
cmp
push
sarl
insb
pushl
pop
icebp
fisubl
sbb
mov
push
or
test
repz
test
push
mov
mov
imul
cli
dec
add
int3
or
mov
in
mov
out
push
mov
jmp
add
popa
mov
pop
jecxz
cmp
sarl
cmpsl
cli
shll
and
xchg
pop
sbb
mov
lock
pop
in
in
jns
ficomps
mov
stc
mov
jg
rcr
dec
add
mov
xor
rcll
ds
mov
sahf
sub
dec
mov
add
add
stos
fdiv
sub
mov
cmpl
imul
scas
in
cld
push
movsl
scas
pop
xlat
out
sahf
sub
and
jb
mov
test
dec
push
mov
mov
rorb
jne
push
call
mov
pop
ja
mov
testb
in
aaa
fnstenv
push
push
push
out
and
pop
jnp
ret
add
jnp
sub
xchg
xlat
flds
loop
add
leave
jns
cmpsl
lcall
jno
sbb
push
out
shll
mov
sbb
jns
add
push
xchg
jns
mov
mov
pop
sub
inc
or
ljmp
test
jle
xor
push
lds
test
lods
fstps
lret
gs
lcall
mov
add
clc
dec
inc
fdivrl
cmpsb
add
add
lret
insb
mov
sbb
push
jle
inc
xchg
inc
lret
sbb
sub
out
or
jp
inc
push
dec
cltd
add
push
in
mov
push
pop
ror
inc
shlw
stos
lds
inc
xor
push
test
dec
mov
xchg
mov
xchg
sbb
loopne
scas
inc
fwait
push
mov
jmp
inc
in
adc
xor
out
dec
mov
shll
jecxz
cld
push
sub
mov
push
add
mov
push
mov
push
mov
sub
sbb
js
aas
cmp
and
inc
fnstcw
daa
xchg
imul
icebp
dec
jle
sub
mov
pop
loopne
test
bound
push
lret
shrb
outsb
jg
inc
addb
in
sub
adc
lock
lret
pop
insl
xchg
mov
xchg
dec
xchg
add
aam
xchg
dec
cmp
sbbb
test
inc
sub
push
xchg
add
pop
or
lcall
jmp
lock
mov
int
jl
push
cmc
imul
cmp
inc
std
jmp
jmp
jae
popf
js
ficoml
pop
dec
push
in
xchg
test
mov
out
test
decb
dec
inc
mov
int
lcall
lret
ja
popa
orl
jbe
xor
je
xor
imul
jns
ret
int
push
and
lret
sbb
or
push
add
fistpll
bound
cmp
and
or
mov
iret
mov
bound
sti
mov
fwait
stos
in
xchg
ficompl
cli
gs
dec
cmpsl
es
sub
icebp
scas
mov
leave
cli
insb
xor
pop
lahf
sarl
stos
adc
or
adc
mov
mov
je
cmp
das
xchg
push
push
ljmp
lea
in
ret
dec
sbb
cmp
xor
dec
jl
inc
mov
sub
cmpsl
mov
ficoms
rorb
xchg
inc
fnstenv
cmp
hlt
push
js
dec
imul
cmc
jl
or
insb
scas
lea
ret
scas
in
sbb
add
insl
jl
pop
std
jp
jp
fcmovne
sub
rorl
push
aad
pop
xor
adc
data16
pop
xchg
test
cmp
ss
mov
sub
mov
jb
lods
in
sub
gs
sti
pop
dec
add
out
mov
push
decl
pop
add
lods
mov
fstl
and
fcmovnbe
out
xor
stc
cwtl
sbb
sbb
outsl
jle
lods
jnp
call
ja
dec
add
mov
adc
sub
shl
add
data16
shr
and
push
inc
mov
ja
repz
jl
rcll
pop
sub
shlb
inc
pop
pop
mov
lahf
push
fs
les
ret
xor
xchg
pushf
lcall
popa
inc
or
roll
cld
cmp
mov
outsl
iret
or
outsb
push
push
jne
xor
out
mov
pop
filds
in
mov
pop
pop
test
clc
dec
xchg
mov
dec
scas
sti
int3
imul
loope
lret
lahf
jae
jmp
mov
sub
jle
mov
add
sbb
lret
sub
rcrb
mov
adc
pop
aam
mov
lds
ss
xor
push
and
jbe
dec
cmpsl
sub
sub
sahf
cmpsl
adc
lret
mov
pop
int
shll
xchg
xchg
adc
and
subl
fldcw
push
add
mov
push
mov
lcall
rcl
mov
jb
clc
cli
cmpsl
or
cmp
sub
add
cltd
pop
test
mov
lea
pop
xor
or
clc
cmpsb
xchg
adcl
sub
test
aaa
adc
sbb
push
mov
cwtl
enter
icebp
dec
daa
sbb
xor
sub
xchg
mov
call
pop
pop
mov
xacquire
fwait
xor
add
xor
cmp
mov
xor
leave
mov
xchg
sub
cmp
xor
sahf
test
dec
call
out
adc
push
scas
adc
pusha
mov
cmpsb
sub
jl
adc
sub
stos
inc
mov
cmp
sbb
xor
mov
test
fs
hlt
imul
bound
outsb
incl
pop
add
dec
sti
add
cmp
sub
mov
jbe
fldenv
subl
and
push
dec
mov
cltd
repz
leave
pop
jp
jecxz
pop
jbe
mov
push
outsb
inc
mull
jp
and
cld
inc
leave
es
or
push
sub
push
mov
test
mov
shll
mov
loop
xchg
cld
pop
cmp
negl
dec
orb
fucom
mov
dec
or
sahf
mov
movsl
xor
iret
cmpsb
shrl
sub
xor
mov
cwtl
mov
lret
cmc
mov
inc
fdivs
fsub
movsb
push
insl
inc
pop
jns
icebp
xor
jbe
pop
das
pop
in
mov
pusha
aam
stc
sahf
cmc
mov
pop
leave
lcall
mov
insl
pop
push
mov
xchg
popa
mov
push
scas
jle
push
subb
fnstcw
das
dec
movsl
in
xor
xlat
fsub
fmull
push
inc
mov
lods
xor
mov
and
inc
ret
aam
repz
lahf
shr
jp
push
jbe
out
jnp
xchg
decb
mov
enter
cmpsl
and
adc
fidivrl
data16
jne
add
mov
bound
mov
pop
ds
push
jl
jge
pop
int3
dec
ret
inc
jp
xchg
ss
movsb
lcall
sbbb
dec
mov
leave
dec
bswap
pop
pop
mov
hlt
sbb
loope
je
outsb
fdivl
scas
pop
jmp
inc
xchg
mov
xor
in
lock
fstl
jb
ja
loopne
movsb
js
lret
movsl
int3
cmp
jmp
cmp
jnp
pop
ds
arpl
jb
dec
adcb
into
mov
addl
outsl
and
test
stc
jne
cmp
inc
idivl
jbe
icebp
movsl
inc
mov
mov
pop
in
imul
pop
push
xchg
imul
in
jae
cmpsb
xor
inc
mov
push
mov
rorl
add
jb
jg
or
sbb
xchg
or
loope
repz
add
and
ret
xlat
mov
icebp
mov
pushf
jne
outsl
clc
xor
stc
pop
xchg
push
nop
addr16
or
or
push
lds
fsubrp
and
in
xor
popf
hlt
shrl
pop
xchg
xchg
adc
rol
jecxz
hlt
inc
insl
test
pop
mov
and
adc
test
xor
pop
gs
sub
imul
cmpb
in
and
jbe
fcoms
jge
push
loop
cmc
rorl
mov
call
xor
pop
call
stos
pop
mov
je
push
and
mov
cli
adc
push
lods
pop
mov
dec
push
mov
scas
fsubl
fxam
int
pop
or
mov
orb
push
lcall
sarl
xchg
popa
xor
mov
sbb
push
sti
mov
movsl
jp
push
pop
aad
gs
adc
xor
pop
pop
popa
mov
xor
adcl
gs
aam
inc
fucom
repz
dec
jge
cld
cmp
dec
inc
fidivrl
imul
clc
stc
ja
and
movsl
pushf
cmp
mov
fisttpl
sub
test
sub
cli
mov
movsb
sub
mov
push
mov
rcrl
sbb
fsts
lock
lea
cli
cli
pop
mov
jmp
mov
cmpsb
in
push
mov
pop
jo
mov
xlat
mov
mov
jp
test
add
xchg
std
fbstp
mov
jp
loopne
and
mov
dec
push
dec
xor
repz
jle
dec
mov
flds
stos
fisttps
cwtl
cmpsl
fwait
mov
add
xor
fidivs
outsb
arpl
dec
test
cli
cltd
cmpl
dec
xchg
mov
lahf
aam
mov
or
arpl
lret
lret
xor
cmp
mov
pushw
scas
mov
lret
sbb
lods
inc
cmpsl
or
and
add
movsl
stos
cmpsb
sbbb
mov
xlat
push
imul
ret
std
ret
aaa
mov
sti
aas
xchg
data16
in
and
test
jmp
cmpsl
mov
jp
lret
pop
jne
stc
cmp
dec
stos
andb
push
stos
in
sar
mov
mov
add
add
rcll
xchg
add
push
loope
pop
fs
mov
fistpll
mov
test
sub
hlt
stos
cli
cmpsb
push
cmp
add
fdiv
cmc
jecxz
sbb
push
pushf
arpl
pop
jne
xchg
adc
popf
mov
lret
cmp
sbb
bound
loopne
pop
sti
loope
mov
ficoml
cmp
mov
in
popa
test
mov
es
das
pop
sti
dec
loope
in
and
fistl
arpl
or
xor
sti
fcmovnu
xchg
and
ss
adc
inc
fwait
popa
lcall
ja,pn
ja
inc
jbe
cs
loopne
mov
rcrb
ret
add
dec
dec
test
dec
push
mov
jno
int3
jecxz
icebp
cmp
cli
add
xchg
mov
push
push
dec
insb
popa
sub
or
ljmp
scas
jns
inc
and
dec
lahf
aam
nop
and
test
sbb
fmulp
fs
std
adc
das
jae
lcall
jmp
pop
addr16
jecxz
clc
les
mov
or
repz
test
sbb
mov
test
lea
cmp
shlb
mov
mov
or
filds
loopne
js
stos
push
jbe
adc
mov
fsubrl
cmp
xchg
cmp
js
and
jecxz
aam
jo
pop
fwait
push
and
sbb
pop
add
xchg
int
in
and
in
push
int
mov
rorl
test
xor
ss
inc
insl
fcomip
xor
test
adc
inc
jb
je
cmp
jecxz
mov
pop
xchg
mov
cltd
adc
xchg
xor
add
pushf
mov
cmc
mov
cmp
mov
inc
inc
jecxz
stc
xchg
jp
out
iret
jle
jge
loope
in
sub
or
lcall
and
adc
and
data16
movb
test
insl
pushf
test
test
xlat
inc
outsl
das
mov
fistl
dec
sbb
daa
or
je
call
cmpsl
xor
cmp
mov
mov
jb
pop
pop
dec
push
or
mov
fwait
jmp
jl
or
jmp
in
xchg
dec
lret
push
sbb
adc
sub
insl
inc
push
jne
test
cmp
or
pop
add
ss
inc
push
mov
inc
ficompl
rcrl
clc
add
inc
icebp
jle
push
fsubs
xchg
push
xorl
cmp
lods
pushf
mov
xchg
push
aaa
mov
adc
xor
arpl
inc
aas
icebp
neg
mov
pop
lods
mov
adc
rcl
mov
daa
and
add
inc
stos
imul
loope
cmp
or
cs
jne,pn
push
mov
clc
aam
inc
xor
sub
push
and
mov
int3
sub
sbb
cwtl
int
mov
push
pop
js
pop
lds
hlt
cli
out
rcrl
push
mov
sbb
fsub
pop
ljmp
push
mov
add
sbb
outsl
iret
imul
mov
sbb
rcr
ficoms
inc
xchg
add
jo
xor
add
adc
dec
mov
sbb
loop
adc
addr16
leave
mov
mov
jne
push
xor
push
mov
add
aam
pop
or
and
pop
ja
pop
clc
xor
mov
jl
jge
cmpsl
add
test
push
mov
inc
shlb
sub
xchg
jo
out
cmpb
mov
fmuls
jb
outsl
mov
pop
test
lcall
stos
mov
or
aam
je
and
dec
push
mov
cwtl
insl
loopne
nop
adc
or
sub
repnz
sbb
mov
push
ds
negb
xchg
sbbb
mov
pop
loopne
lahf
xor
adc
orb
sarl
xchg
sub
lods
pop
pop
xchg
cmp
loop
repnz
cltd
roll
and
bound
jne
fiaddl
pusha
lret
mov
sbbb
fnstenv
mov
push
pop
sub
mov
push
cltd
cmp
jp
push
call
jns
add
adc
cmc
jne
cld
dec
in
add
test
orl
or
loopne
push
sub
jp
or
jo
add
xchg
adc
aas
les
pushw
sbb
or
imul
xchg
sbb
fiadds
inc
cmp
inc
pop
scas
mov
in
test
inc
add
sbb
xor
pushf
stos
xor
dec
mov
jle
add
or
mov
shlb
int3
int3
inc
sub
xor
aas
cmp
clc
sub
and
mov
mov
adc
scas
adc
in
lahf
add
das
dec
cvtps2pi
dec
dec
jne
push
cmc
dec
dec
aam
xor
cld
jg
iret
xor
and
ss
jg
add
test
stos
shr
call
loopne
out
cli
or
rorb
xchg
rolb
adc
jbe
cmp
xor
repnz
dec
movsb
pop
mov
testb
lret
xchg
push
lods
xor
popf
loopne
inc
xchg
adc
cmp
adc
cmp
int
dec
dec
xor
outsb
xchg
lds
scas
leave
in
xor
lret
push
sub
stos
call
movsb
pop
xor
jecxz
mov
in
mov
lds
sub
jge
and
cmpsl
addr16
adc
xchg
push
lcall
dec
cmc
xchg
subl
xchg
testl
aaa
mov
js
leave
push
add
xor
dec
inc
sahf
lcall
or
rclb
sbb
lret
jecxz
mov
out
repnz
lods
aad
pop
sub
iret
into
daa
fidivrs
adc
scas
cmp
jmp
out
mov
ficompl
mov
lret
jns
xor
sub
xchg
int3
dec
xor
pop
fdivs
pop
je
call
daa
fistpl
jle
push
sbbb
mov
xchg
pop
fnstsw
adc
clc
mov
mov
lea
inc
add
xchg
leave
icebp
mov
inc
int3
cmp
and
insl
fsubrl
xor
test
push
mov
lods
jecxz
idiv
cs
jo
or
dec
adc
pop
mov
sbbl
repz
iret
daa
mov
into
movsb
je
cli
cmpsb
ret
psubusb
lret
in
xchg
jno
mov
or
mov
dec
lock
ror
cld
shrl
xchg
xchg
pop
dec
jecxz
movsl
xor
enter
outsb
arpl
mov
adc
mov
push
inc
jle
out
xbegin
out
in
out
dec
cmpb
mov
cli
data16
mov
add
cmp
repz
ljmp
pop
sbb
jno
loope
stos
inc
lcall
or
cmpsl
inc
cmp
shl
pop
push
push
mov
pop
pop
in
leave
jmp
inc
loope
fcmovu
cmpb
mov
dec
xchg
adc
test
sahf
or
cmp
loopne
adc
in
cltd
add
cli
testl
mull
push
dec
ljmp
call
arpl
push
pop
test
inc
decl
push
lahf
iret
mov
xchg
push
jae
jge
cmp
xchg
movsl
icebp
ret
and
xchg
sbb
in
outsb
or
clc
sub
fs
push
sub
jne
jmp
addr16
adc
cmp
in
out
add
out
add
push
xchg
mov
jle
push
cmc
mov
ret
into
cmp
lea
bound
insl
adc
sbb
daa
js
lret
xor
pop
aam
xchg
lock
fidivrs
pop
cmp
negl
mov
aam
and
mov
xchg
out
sbb
shr
cmpsl
add
jns
les
outsl
or
pusha
vmovapd
in
inc
push
or
mov
jge
cmp
mov
stos
out
mov
mov
and
lods
rclb
popa
jns
cmp
cmpsb
add
in
shrl
nop
pusha
pop
cmp
int
enter
in
clc
fucom
nop
fidivrs
arpl
mov
insl
ja
fadds
cmc
push
btr
mov
test
pop
test
js
push
sbb
xchg
mov
aad
add
add
negl
icebp
insl
mov
mov
out
into
xor
int3
cwtl
mov
xor
cli
adcb
gs
cmp
rep
adc
test
pusha
push
sbb
adc
jb
sbb
xlat
flds
setns
fucomip
cmpsl
cmp
dec
pop
mov
stos
push
movsb
adc
incb
and
mov
pop
out
sub
lea
sub
jg
arpl
mov
cwtl
arpl
js
sub
lods
loope
dec
jp
inc
int3
xchg
mov
xor
mov
mov
xchg
mov
jl
mov
xor
xor
pop
cld
fcoms
pop
lret
xlat
imul
cli
lock
rcrb
mov
pop
es
inc
aad
testb
in
xchg
loop
mov
xchg
or
inc
dec
insl
push
xor
jb
inc
movsl
and
rclb
mov
sbb
pop
aas
cmp
push
adc
lods
mov
mov
aas
dec
test
mov
arpl
add
decl
stos
std
loope
cmpsl
dec
add
and
rorb
out
outsb
jge
add
sbb
dec
jne
clc
flds
sbb
clc
jge
lret
pop
and
pop
lahf
pop
mov
mov
sbb
icebp
leave
aad
bnd
xchg
cmp
sahf
xchg
js
dec
movsb
andl
cld
inc
push
nop
fimuls
or
add
ljmp
jecxz
xchg
mov
jno
movl
and
outsl
int
jl
xchg
pushf
nop
sbb
addr16
adc
leave
lret
and
xor
pushf
mov
test
inc
int
outsl
sbb
add
jle
xrelease
loopne
arpl
fbstp
in
mov
sub
xchg
and
dec
in
rclb
inc
add
sti
aam
gs
in
jg
mov
pop
mov
loope
in
inc
imul
div
xor
adc
out
bound
jno
jno
cmc
jge
dec
cltd
xchg
sub
dec
inc
add
pop
hlt
xor
xchg
push
ror
mov
aam
sub
dec
mov
int
lock
pop
pop
sbb
fildl
push
xchg
cmpsl
mov
fisubrs
sub
stos
jp
push
rclb
or
adc
pop
jae
movsl
inc
lods
ja
sbb
out
lret
test
lds
add
inc
adc
adc
aaa
cmpl
jle
icebp
leave
cmpsb
clc
sub
push
imul
imul
fwait
call
lea
inc
out
xor
ffree
loope
bound
test
rorl
xchg
inc
lods
pop
mov
cli
jno
leave
and
mov
je
jne
cmp
mov
cmpsb
movsb
xchg
mov
dec
in
int3
outsl
cmpsl
push
addr16
ds
and
hlt
ljmp
push
icebp
repz
push
test
and
call
or
fnstcw
pop
int3
mov
enter
push
and
and
mov
fsts
xchg
movsl
jae
ds
ficomps
jle
mov
ret
sbb
push
shl
fucomp
xchg
sbb
jg
inc
xor
andl
loope
dec
pop
sbb
push
in
pop
fwait
pop
jle
cmp
les
idivl
mov
sub
inc
sub
mov
sbb
push
jne
lock
ret
std
jae
add
mov
adc
cmpsl
je
mov
lods
das
pop
push
jb
sbb
mov
ja
push
cmpsb
mov
ljmp
mov
mov
adc
clc
xchg
add
inc
mov
inc
cmc
inc
pop
mov
es
add
jp
cmpsb
cltd
xor
pop
stos
adc
ret
add
les
push
add
mul
cwtl
inc
mov
loopne
icebp
int
push
ret
adc
cmp
aas
aas
sub
imul
je
cmp
sub
lret
jb
or
mov
popf
sbb
mov
sbb
and
add
inc
xchg
mov
cmp
inc
xor
test
push
and
loopne
in
add
mov
pushf
shrb
sbb
enter
dec
cmp
ja
insb
daa
xor
in
ljmp
and
push
push
sahf
stc
cld
insb
or
lods
mov
pop
cli
jl
cltd
sub
inc
into
loopne
lds
andl
xchg
or
pop
aad
mov
bound
addl
xor
inc
rorb
stos
test
sub
icebp
jb
std
lea
shlb
inc
jecxz
inc
or
stos
jp
lret
cmpsl
or
bound
hlt
das
jl
sbbl
cmc
andl
or
mov
push
data16
nop
or
jecxz
cs
or
dec
xchg
das
push
call
cmp
xchg
and
inc
insb
inc
clc
ret
imul
add
sub
mov
lahf
imul
pop
lods
outsb
jmp
xor
mov
xchg
pop
pop
cmp
ja
ret
xchg
mov
aad
or
adcb
sub
aam
push
int
lods
gs
int
outsb
ficompl
ret
adc
xchg
pop
js
xchg
test
adc
fs
or
jl
lahf
scas
inc
add
pop
sub
test
xchg
loop
and
test
dec
je
dec
dec
je
xlat
inc
nop
loope
inc
xlat
sarl
sub
adc
mov
push
lds
xor
cltd
repnz
sbb
stos
mov
ds
data16
fs
sbbb
add
stc
sbb
mov
jb
add
cs
xchg
rclb
sti
mov
outsl
pop
mov
mov
xchg
cmc
subb
dec
mov
lock
outsl
push
or
sub
inc
fistpl
popf
stos
shr
pop
repz
hlt
dec
shl
mov
or
cwtl
mov
in
leave
lahf
jae
les
inc
dec
dec
popa
cli
add
add
and
adcl
das
pop
xor
ljmp
lock
clc
xlat
mov
dec
shlb
push
imul
into
dec
add
push
fimuls
mov
imul
outsl
cmp
xchg
dec
icebp
pop
leave
aam
jecxz
jp
sbb
push
addl
pusha
icebp
sub
dec
mov
cmp
shl
pop
in
shr
jns
popa
popa
xor
je
push
das
cmc
add
sub
pusha
fprem1
sub
and
jmp
cld
adc
enter
push
sti
inc
out
aam
es
cmp
add
fwait
add
add
cltd
in
shlb
sub
std
lds
ret
iret
dec
push
jmp
adc
and
das
test
dec
aaa
daa
in
es
ror
cli
enter
adc
fisubrs
push
add
ret
repnz
mov
stos
xor
dec
mov
loope
cmp
xchg
aaa
adc
cmp
ljmp
adc
hlt
popa
les
pop
iret
mov
sarb
int3
in
lcall
push
cmp
mov
idiv
leave
push
rcr
sbb
adc
or
clc
js
loopne
daa
pop
cmpsl
cltd
dec
adc
repnz
stc
shrl
inc
daa
lahf
fidivrl
notl
mov
and
xor
inc
sub
dec
ja
cmp
mov
fisubl
add
out
aad
adc
lret
sub
fildll
fnstcw
fildl
lods
adc
ss
sub
cmp
jecxz
icebp
not
mov
imul
fdivrs
or
movsl
cmp
xorl
adc
and
jmp
cltd
or
aas
pop
pop
cwtl
enter
in
jo
ret
cmp
push
and
lret
pop
mov
mov
cmp
stos
scas
xchg
jp
or
push
ficoml
dec
jo
mov
or
and
mov
push
neg
pop
add
push
jb
pop
jo
mov
jb
and
popf
push
push
add
int3
loop
std
adc
icebp
sbb
mov
jbe
sbb
xchg
arpl
xor
xchg
negb
ja
pushf
in
and
ljmp
fisttps
subb
cltd
fiadds
add
jno
push
dec
mov
push
ret
inc
mov
into
outsb
fdivl
push
xchg
shlb
xor
mov
stos
hlt
repz
push
das
xrelease
fwait
movsb
push
fcmovbe
sub
xor
cmpsl
les
pusha
popf
loope
rol
aam
push
jns
xor
out
fnstsw
mov
push
dec
jno
jns
mov
jp
push
mov
adc
pop
loopne
jle
in
adc
int3
mov
sbb
jnp
fmuls
push
pop
movsl
push
jb
jns
cwtl
pushf
and
ret
subl
mov
divb
mov
roll
subl
sbb
mov
cmpl
adc
jg
dec
cmpsb
push
fmull
mov
mov
xor
icebp
and
call
jno
jne
clc
xor
sbb
mov
je
cld
or
push
jl
rcrl
adc
mov
inc
loopne
fs
push
or
sbb
xlat
aaa
mov
or
dec
pop
mov
lds
xlat
pushf
mov
or
push
loopne
add
mov
push
jns
inc
daa
cwtl
aad
lods
jns
hlt
mov
test
sub
int3
aad
leave
or
cmp
icebp
ret
loop,pn
jge
inc
scas
xchg
dec
fisubs
mov
jne
stc
jmp
je
shr
xchg
sbbb
push
mov
pop
jns
divb
addr16
jp
push
or
sub
dec
aad
jl
inc
scas
iret
outsb
hlt
xor
repz
dec
xor
xchg
js
push
add
imul
adc
aaa
inc
rorl
ret
jne
bound
add
and
push
fldenv
jo
out
mov
stos
xchg
psrlq
push
mov
dec
aaa
fisttpll
mov
dec
lcall
jg
dec
mov
jg
clc
lea
test
fwait
pop
add
nop
mov
scas
xchg
cmp
je
sbb
lret
xchg
push
enter
mov
call
or
inc
cmp
jns
fnstenv
repz
mov
orl
arpl
imul
stc
mov
xchg
lahf
orl
outsb
lock
mov
fdiv
insl
imul
int3
sub
push
adc
or
mov
xchg
ret
jns
or
int
inc
mov
sub
jae
jp
dec
mov
in
subl
js
cmp
std
jp
ret
add
mov
leave
inc
in
aaa
ja
adc
lret
pusha
sub
es
push
dec
jbe
test
jo
sar
rol
jae
loopne
cmp
dec
aam
inc
mov
pushf
push
sub
pop
adc
cld
dec
xchg
sub
mov
mov
mov
sub
arpl
inc
pop
sub
push
inc
jg
ljmp
hlt
mov
pop
dec
mov
outsl
dec
xchg
xor
mov
or
in
sub
outsl
jae
std
mov
pop
pop
mov
add
pop
push
jmp
or
mov
sub
push
sub
push
xor
jmp
lods
jmp
pop
jbe
ret
or
lods
arpl
ret
clc
dec
lock
das
mov
dec
mov
int
loop
pop
xor
movsb
out
cltd
lcall
add
fidivl
mov
xlat
pop
fsubr
or
xchg
test
das
push
call
xor
dec
and
push
or
test
add
xchg
pop
stos
pop
int3
imul
push
add
xor
adc
mov
inc
pop
inc
pop
std
jl
push
cmp
xchg
divl
push
xor
push
add
mov
arpl
fstl
sbb
push
lods
je
inc
adc
mov
ret
jb
fiaddl
test
out
cld
mov
aas
das
scas
push
inc
sahf
adc
adc
xchg
inc
loopne
mov
int3
add
repnz
fwait
jecxz
stc
xor
pop
jno
or
add
xchg
pop
or
pushl
lods
aaa
adc
repz
jns
push
lods
mov
mov
push
sbb
adc
sbb
pop
push
push
mov
addl
cwtl
outsl
inc
out
in
lret
jmp
pop
and
or
xlat
aas
and
sub
cli
repnz
popf
mov
cmpsl
jae
mov
ret
call
or
add
scas
and
js
xor
jl
sub
mov
xchg
cmc
xor
xor
ljmp
incl
jnp
xchg
aam
fadds
mov
xchg
sahf
jne
decl
dec
xlat
pop
sbb
bound
movsb
mov
aam
or
aad
fs
mov
push
jmp
inc
popa
mov
into
inc
movsb
out
lcall
jbe
aad
loope
mov
pop
loopne
adc
cli
test
aam
xchg
mov
xor
dec
ljmp
scas
pop
jae
lret
pop
ljmp
add
call
out
mov
mov
loope
sub
in
test
sub
pop
lods
mov
sahf
out
pushf
cmp
ret
push
cmpsl
ficoml
sbb
pop
mov
xchg
jg
xchg
int
inc
cli
test
mov
mov
insb
out
jne
or
mov
jg
or
sbb
das
mov
xor
fcoms
jnp
pop
lds
adcb
lods
int
call
imul
mov
xor
inc
ljmp
adc
inc
push
pop
into
pop
mov
or
mov
call
mov
xchg
push
inc
mov
leave
pop
loopne
and
test
repz
sub
mov
push
pop
cmpsb
push
fs
outsb
pop
les
call
out
sub
cmp
and
xor
lret
ja
dec
add
and
mov
inc
adcb
adc
push
sbb
dec
insl
popa
adc
jbe
hlt
js
loop
lahf
aad
movsb
inc
jb
cmp
xchg
into
fstpt
xchg
push
inc
popa
xchg
jb
xor
dec
pop
mov
add
push
inc
repnz
pop
and
test
sbb
lcall
lock
int
imul
hlt
inc
mov
adc
mov
repz
sub
jmp
fldt
ljmp
jg
movlps
sub
leave
out
repnz
std
and
lret
jg
mov
and
adc
mov
stc
push
cmp
rcll
push
jg
adc
mov
inc
shlb
add
mov
stc
mov
clc
enter
jno
in
jecxz
jno
sbb
push
inc
movsl
lods
in
xlat
rcrl
ss
out
ja
push
leave
aas
lods
sbb
cltd
sbb
pop
cmp
mov
cwtl
cltd
push
push
push
fdivrs
add
subl
shlb
fcmovnu
arpl
mov
or
cmp
dec
out
repnz
insl
or
stos
mov
sub
fcoml
pop
adcb
pop
or
or
ds
repnz
jns
cltd
ja
dec
add
lods
and
xchg
inc
and
cmc
push
jle
into
popa
addb
and
or
sub
cmc
inc
hlt
adc
or
pop
sub
dec
leave
pop
imulb
lods
cltd
lods
or
mov
test
fcoml
mov
div
and
adc
pop
lahf
test
ss
insl
pop
inc
test
leave
jae
jb
add
xchg
xchg
mov
ror
adc
stc
mov
lds
or
pop
xchg
popf
xchg
and
or
clc
push
cmp
ret
or
rcrl
sbb
sbbb
test
stos
mov
xchg
sarb
and
std
addr16
std
jle
pop
jmp
mov
lock
jno
sub
ljmp
out
das
cld
mov
rolb
mov
xchg
xchg
mov
jo
enter
sbb
lret
stos
sbb
add
mov
jl
xchg
inc
push
movsl
jge
inc
dec
adc
xchg
imul
inc
arpl
pop
sbb
or
inc
loope
mov
scas
sbb
test
test
mov
pop
push
int
cld
pushf
fsub
sar
cmp
ret
sarl
in
fstps
jno
push
rorb
lock
mov
ret
xlat
adc
add
sbb
jp
dec
cltd
push
sbb
loop
in
xchg
jns
nop
mov
mov
sbbb
int3
cmpsl
pop
mov
fidivrl
loopne
and
mov
test
fcompp
ret
xchg
incb
lds
es
notb
pop
or
mov
imul
outsl
jg
adc
push
jecxz
xor
push
bound
mov
mov
test
sub
push
mov
ss
int
inc
je
mov
cmpsb
pop
gs
imul
pop
iret
add
and
lea
xchg
and
mov
pop
rcrl
out
jmp
inc
mov
ds
stc
cmp
sub
cmpsb
in
mov
jae
adc
cmpb
int3
mov
int3
inc
aas
fcompl
jae
pop
pop
push
shll
sub
inc
ljmp
and
insl
sub
icebp
dec
push
hlt
mov
filds
push
arpl
jecxz
sbb
into
int
jnp
lock
data16
jbe
test
lods
in
adc
std
add
or
imul
gs
cmp
icebp
cmp
mov
repnz
sti
leavew
sub
into
jbe
stos
sub
iret
fdivr
sub
inc
cmp
mov
clc
mov
inc
in
arpl
push
repnz
lcall
fidivrl
push
push
cs
call
mov
add
jle
dec
loop
lcall
pop
dec
xlat
pop
adc
jo
iret
iret
and
loop
fcmovbe
sbb
mov
inc
ret
dec
vrcpss
inc
stc
jae
xor
sbb
fs
xor
inc
and
jae
lods
cwtl
test
dec
loope
sub
lock
out
sbbl
push
pop
push
or
mov
sub
jno
jle
stos
dec
jbe
fists
aam
icebp
xchg
xor
repz
mov
fdivrl
std
or
arpl
jns
mov
aas
dec
pop
or
cmp
test
cmpsl
mov
call
xchg
mov
pop
jns
scas
or
push
ret
xlat
loop
xor
cmpsb
add
sbb
xchg
push
icebp
je
cwtl
test
adc
hlt
imul
push
in
lods
jmp
xchg
insb
push
lock
out
shll
mov
sbb
dec
lods
insb
int3
cmp
add
jg
pusha
insb
insb
xchg
push
inc
cmp
pop
flds
xchg
push
fsubrp
mov
cmpl
and
cld
sbb
push
jge
dec
cmpl
jno
jl
mov
sar
outsb
ss
sub
scas
mov
dec
mov
fistps
push
push
dec
push
sbb
or
lret
sbb
js
inc
ja
inc
cmc
xchg
jp
pop
outsb
bound
or
rclb
push
mov
push
enter
fdivrs
cmp
movsl
push
rol
adc
sbb
addr16
pop
sarb
nop
pusha
orb
mov
mov
arpl
xor
mov
dec
popa
cmp
aas
xchg
cwtl
mov
cmp
jno
sub
out
fs
mov
mov
ss
jmp
cmp
insl
std
sbb
push
sub
lods
scas
or
xlat
dec
mov
std
js
scas
into
or
leave
fsubs
std
aad
and
jle
fldcw
adc
mov
xchg
jecxz
push
mov
sbb
adc
or
inc
push
testb
sahf
lret
rcll
xchg
mov
dec
cmp
scas
mov
rcrl
xor
int3
popf
adcl
cmp
xor
sbb
iret
out
test
hlt
out
jl
push
mov
addr16
lock
xor
sub
adc
mov
pop
rorb
push
cmpsl
lods
data16
mov
dec
stos
sbb
mov
sub
xchg
out
xor
movsl
std
add
mov
jns
mov
mov
mov
sti
bound
fistpl
push
jnp
stc
fadds
sub
cs
test
scas
pushf
enter
icebp
cmp
ret
push
repnz
loopne
or
or
sub
hlt
or
outsl
test
sbb
xchg
sub
inc
roll
mov
cmpb
add
std
sahf
push
icebp
sbb
lret
enter
push
adc
mov
push
outsb
dec
hlt
mov
cmp
mov
hlt
ljmp
inc
mov
pop
outsl
scas
bound
pop
in
xchg
adc
rcll
nop
mov
pop
add
mov
cmp
jns
and
mov
cmp
cs
push
mov
pop
sub
xchg
mov
outsl
addb
fldenv
sbb
mov
inc
mov
lods
test
mov
repnz
fldt
push
xlat
xor
fsubrs
hlt
adc
sub
lods
lcall
ljmp
push
xchg
ja
mov
lock
ja
cwtl
dec
or
push
sbb
ja
xor
inc
test
insb
inc
jns
xchg
adc
cs
test
jns
aas
push
fcom
push
gs
adc
imul
stos
in
test
leave
mov
adc
ds
repnz
xchg
xor
movsl
cwtl
lret
lcall
push
bnd
int3
inc
popf
cmc
jno,pn
push
test
pop
mov
push
add
lcall
xchg
dec
and
mov
push
fimull
mov
mov
aaa
push
daa
and
call
mov
sub
int
adc
or
xchg
pushw
gs
divb
push
push
das
addr16
aad
addr16
inc
mov
dec
cwtl
pop
pop
daa
inc
jg
clc
jecxz
ret
xchg
cmp
hlt
cmc
pop
add
rcl
repnz
adc
sub
repz
pop
fwait
jno
in
dec
pushl
es
mov
and
sbb
push
sbb
push
insb
mov
dec
stos
cmp
inc
cli
xor
jnp
pop
dec
push
pop
fmull
sbb
mov
out
data16
or
out
ret
out
or
lret
test
push
lret
pop
repz
rclb
jno
push
mov
xchg
inc
pop
xchg
fwait
push
xchg
mov
jg
insl
dec
fldt
in
je
clc
adc
out
xlat
mov
dec
jle
pop
or
pop
in
cmc
ljmp
dec
mov
adc
popa
xchg
cmp
movsl
sbb
inc
dec
call
sti
shlb
cmp
ret
fdivs
ret
repz
add
jns
mov
aas
xor
in
xlat
pop
ds
xchg
sbb
shrl
pop
adc
jmp
jle
testl
mov
mov
shll
sbb
shl
fwait
xlat
lods
mov
mov
mov
and
cmp
xor
popl
ss
inc
rorl
fbstp
xor
add
push
cwtl
lea
xor
out
sbb
ficompl
fwait
addr16
push
sbb
pop
stos
jb
es
sbb
pop
shlb
daa
js
mov
pusha
gs
aas
mov
les
out
jge
inc
jo
fmulp
fists
call
scas
mov
aam
int3
mov
sbb
and
mov
jmp
mov
cmp
ja
push
out
dec
pop
or
and
cmp
or
loop
shl
lret
aam
sub
push
dec
or
sub
pusha
add
ja
xchg
push
xor
sub
or
dec
push
inc
inc
adc
cmp
pop
test
test
shll
test
in
push
mov
cld
cld
or
sub
test
mov
pop
testl
mov
sahf
mov
jecxz
mov
adc
inc
repnz
stc
pop
iret
lds
aaa
test
mov
mov
rol
dec
and
rolb
adc
ljmp
mov
xor
pop
jnp
or
cltd
mov
out
clc
sbb
sbb
push
test
add
xor
daa
or
test
mov
pop
cmc
adc
dec
push
and
lret
sbb
aaa
pop
cli
pop
insl
mov
je,pt
pop
adcl
mov
cmp
shrl
xlat
mov
pop
call
add
cld
xchg
aad
xchg
out
mov
lahf
push
sti
pop
mov
inc
pushf
stc
pop
pop
dec
les
adc
adc
xor
and
add
imul
mov
das
stos
movsl
mov
sub
repnz
sbb
stos
inc
mov
ror
add
arpl
sbb
mov
fdivrs
jno
pushf
xchg
inc
icebp
pop
repnz
sub
mov
fidivl
pop
jne
popf
loop
adc
xchg
sub
mov
jno
xchg
and
popa
mov
test
sahf
mov
pop
in
mov
inc
cmp
fistpll
or
cmpsl
stos
jp
pop
xorl
and
xor
call
ret
rclb
push
cli
pop
in
jns,pn
xchg
sub
push
int3
sarb
and
jle
out
adc
rolb
int3
out
jo
jne
jo
pushl
out
mov
inc
mov
fmull
outsb
sbb
test
and
push
je
inc
mov
ja
in
movsb
inc
dec
inc
jge
jp
or
data16
imul
dec
xor
jmp
aas
sub
sub
add
out
rorl
mov
dec
js
inc
lea
mov
jge
pop
add
pusha
adc
xchg
dec
mov
std
sub
inc
adc
mov
es
and
dec
mov
fwait
sahf
shlb
ret
std
aas
into
push
dec
loope
and
lea
std
pop
adc
sub
stos
pop
mov
sbb
mov
sarl
dec
icebp
stc
dec
inc
jb
cmpsb
xchg
pushf
sub
mov
in
stos
int
add
mov
aad
pop
dec
roll
inc
nop
test
mov
jp
inc
imul
or
jp
out
iret
ss
fs
fisttpl
clc
mov
int3
in
sbb
daa
dec
stos
in
jne
je
xchg
mov
push
rclb
sbbl
jge
and
loopne
pop
gs
movsb
lret
sub
mov
mov
mov
outsb
push
clc
es
inc
lods
jnp
dec
test
shl
xlat
fsubrl
xchg
lock
rolb
sahf
stc
cmp
loope
dec
das
add
shl
mov
arpl
cli
stos
mov
adc
pop
xor
dec
insb
jnp
xchg
xchg
xchg
and
addl
das
xchg
imul
xchg
pushf
test
mov
and
adc
adc
hlt
and
sbb
in
or
or
mov
and
jg
cmp
stos
pop
int
push
mov
aaa
jnp
push
xchg
xchg
nop
mov
repz
push
pushl
jnp
jmp
lret
fs
pop
mov
dec
scas
sahf
lret
bound
lock
jno
jmp
jnp
jle
xchg
xchg
add
cmp
adc
enter
js
mov
adc
mov
push
je
je
lret
pop
cmp
icebp
fstps
aam
pop
push
sbb
cmp
adc
daa
mov
imull
dec
jmp
jge
and
mov
das
lahf
jmp
out
jl
lret
sbb
xor
cmc
popf
test
cld
fnsave
xor
mov
pop
iret
mov
cltd
cmpsb
add
fcoml
aas
test
xor
je
mov
xor
aad
mov
mov
ss
or
cmp
addr16
aas
data16
fiaddl
dec
jmp
cltd
imul
out
xor
les
sub
in
fidivs
cmp
es
jnp
mov
inc
jge
ficompl
int3
bound
lcall
int3
jecxz
dec
inc
cmpsb
subl
shlb
xchg
xor
repnz
push
xchg
mov
xchg
fistps
out
ficoml
inc
fwait
push
notl
aaa
rolb
jb
ja
mov
cmpsl
xor
in
enter
and
loop
pop
ficomps
mov
stc
cwtl
in
js
mov
arpl
test
mov
lcall
fwait
imul
daa
sbb
ret
aam
popf
je
push
pop
shlb
sbb
imul
mov
xor
cmpsl
or
push
pop
iret
dec
pop
jns
bound
ror
push
push
cmp
mov
cmp
hlt
inc
mov
test
or
hlt
ret
sbb
mov
cltd
fistl
adc
bound
mov
jmp
leave
sub
or
add
dec
xchg
xlat
and
cmp
add
fstps
cwtl
lcall
add
add
loope
adc
iret
mov
dec
je
scas
xor
cs
ret
or
movsb
int
mov
nop
jo
sub
and
call
jnp
in
mov
aaa
pop
xor
femms
iret
adc
cmp
cmpsl
rcrb
in
fmuls
outsb
mov
and
filds
push
or
aad
arpl
mov
out
nop
mov
cmpsb
insb
enter
sub
and
aas
or
scas
or
test
arpl
sub
fisubl
pop
push
mov
stos
and
push
mov
push
push
pop
fs
dec
push
xor
jmp
and
fidivrl
add
nop
shlb
cmp
hlt
push
cli
inc
add
sub
ss
push
jg
test
pop
ret
in
xor
stos
push
push
xor
icebp
adc
dec
rclb
inc
enter
push
dec
fsubl
push
push
pop
scas
lahf
bound
dec
cmc
push
mov
cmp
cli
nop
jbe
dec
call
adc
popa
push
xorl
jl
movsl
std
and
cmp
es
and
add
push
add
or
inc
cltd
testl
cmp
cli
cld
cmc
cmp
fmull
push
push
imul
jecxz
mov
jg
adc
xchg
test
popf
daa
sub
mov
mov
sbb
test
pop
ds
sub
push
mov
mull
orl
push
push
mov
ja
call
mov
cld
fistps
ss
jo
repnz
movsb
stc
fwait
test
lea
add
cli
daa
jge
cld
stos
cmc
adc
ss
stos
nop
daa
add
cmp
outsb
inc
or
enter
xor
mov
or
adc
addl
jno
xor
fisubl
xchg
xor
in
call
scas
int3
adc
js
in
dec
pop
cmp
cmp
ret
gs
out
imul
push
cmc
testb
or
inc
add
mov
or
decb
or
and
or
insl
jge
sahf
test
inc
mov
xor
mov
out
push
cli
aaa
pop
pusha
push
pop
sub
and
push
xchg
or
and
sub
pop
sub
js
pop
insb
add
ds
dec
jmp
test
push
or
aas
inc
lods
out
or
inc
sbb
arpl
les
jecxz
adc
ret
mov
fistps
xor
inc
pop
pop
shll
adc
lret
xor
and
push
stc
mov
xor
in
cli
or
or
mov
outsl
out
in
mov
push
fimuls
bound
ds
mov
gs
mov
xchg
out
pop
push
and
lea
sbb
pop
dec
gs
lds
test
dec
sbb
outsb
pop
cli
jne
jnp
in
xchg
rcll
push
orl
outsb
xchg
out
fidivl
pusha
repz
adc
sub
xchg
jle
popa
mov
fst
aam
jge
push
pop
sub
addr16
xor
and
jns
test
mov
jmp
dec
xchg
mov
shr
cltd
xor
call
addr16
xor
daa
stos
adc
mov
adc
sbb
mov
in
shll
fists
sub
cmp
mov
sahf
ret
ret
push
addr16
cmp
mov
pop
test
ljmp
pushf
pusha
je
cltd
push
mov
xchg
dec
sbb
add
jno
pop
int
or
xchg
fdivrl
pushf
adc
lret
pop
fisubrs
sbb
in
mov
sub
pop
adc
mov
add
or
pop
into
dec
sbb
xchg
push
ret
sbb
in
mov
push
lret
or
mov
mov
adcb
jp
iret
iret
xor
mov
orb
outsb
out
or
aam
mov
ret
inc
pop
movsb
cmp
lret
xchg
bound
cli
xorl
xor
mov
mov
inc
sbb
cs
mov
out
xchg
mov
mov
mov
sbb
xor
mov
cmp
dec
jae
xor
add
es
xor
cmp
or
jo
or
pop
imul
inc
adc
out
mov
in
test
fbstp
cli
jl
sub
stc
adc
push
ret
mov
test
pushf
push
mov
rol
movsb
lods
inc
jge
pushf
sbb
push
cmp
pushf
mov
std
or
xchg
aaa
and
and
out
mov
and
cmpb
pop
outsb
outsb
jnp
or
clc
in
jbe
pop
push
lret
xchg
adc
aad
pop
or
fisubs
stos
pop
cwtl
mov
cltd
lahf
hlt
mov
lods
loop
adc
xorl
shl
or
and
imul
sbb
divb
adc
dec
repz
into
cwtl
out
push
cmpsl
sub
aaa
ljmp
adc
sarb
pushf
cmpsb
test
inc
lods
cltd
sbb
mov
inc
clc
push
sbb
jge,pt
mov
dec
sbb
cld
negl
xorl
pop
std
add
jnp
xor
stos
dec
sti
cmpsl
lahf
jmp
in
inc
mov
mov
pop
test
adc
cmpsb
rorl
jg
jne
lretw
cmp
in
sbb
cld
lret
mov
les
stc
ret
pop
test
jo
andl
and
in
mov
inc
mov
mov
mov
shl
and
insl
popa
addr16
push
fstpl
push
jl
sbb
mov
scas
jp
call
fwait
pop
lods
stos
mov
mov
in
testl
mov
clc
sbb
cmp
and
jae
mov
and
lock
mov
mov
stos
add
jbe
mov
jbe
jb
mov
sub
das
sub
in
add
xor
movaps
ljmp
or
movsl
pop
loopne
les
sub
adc
arpl
stc
rorl
adc
jne
sub
dec
mov
ds
call
mov
rorl
imul
dec
ret
jno
cmp
xchg
loope
in
jl
inc
shlb
xchg
fcomp
fs
dec
cwtl
es
call
mov
adc
push
sub
mov
jmp
pop
test
dec
cwtl
push
pop
sbb
push
fwait
sbb
or
mov
and
lahf
ret
xchg
dec
test
push
out
mov
rcrl
sub
divb
lret
jo
xchg
arpl
dec
push
or
loope
push
cli
in
test
std
rsqrtps
lds
scas
mov
ret
push
push
pop
lcall
cmc
test
jno
leave
xor
or
js
sub
jp
cmp
ret
mov
mov
xchg
imul
es
xor
mov
not
or
sub
shl
mov
lahf
xchg
jmp
push
mov
sub
sub
xor
test
aad
mov
mov
sub
dec
pop
sbb
and
fstps
mov
faddl
in
imul
xor
dec
pop
ret
fisubs
out
in
mov
in
mov
test
inc
xor
rcr
jp
mov
or
test
ss
push
adc
xor
or
sub
or
ds
fucomp
and
adc
aaa
inc
hlt
and
mov
lret
jae
in
push
loope
es
add
xor
ret
jo,pn
sub
xchg
or
push
pushf
xor
pop
lret
outsb
test
adc
dec
out
aaa
jbe
sbb
shl
bound
in
cmp
shl
daa
pop
test
jmp
fwait
cwtl
inc
rorb
into
scas
mov
std
xor
sbbb
enter
add
aam
xchg
imul
inc
gs
pusha
mov
sub
scas
push
xchg
lahf
imul
loope
add
adc
imul
mov
lret
iret
shrb
inc
aaa
xor
add
lock
fnstsw
pop
sbbb
or
sub
xchg
lahf
popf
or
aaa
lahf
sub
out
push
adc
repnz
mov
sbb
ds
add
hlt
dec
or
lret
dec
or
mov
aad
jp
aad
push
cmpsb
ret
inc
fcmovnb
inc
push
fmull
sbb
dec
loope
mov
in
icebp
jmp
aaa
xchg
xor
and
jbe
rol
daa
push
cmp
pop
and
test
sar
sbb
jns
icebp
mov
and
cltd
rcr
pushf
shlb
and
lahf
mov
outsl
test
int3
sub
aas
mov
loope
loopne
fldenv
mov
mov
in
test
cmp
testb
outsl
repz
mov
icebp
xchg
iret
inc
xor
push
sbb
adc
imul
out
push
je
xor
mov
pusha
daa
and
pop
push
ds
fwait
out
mov
mov
pop
shlb
ret
popf
xor
scas
orb
jno
pushf
fdivp
push
addr16
fcomi
loopne
aad
jecxz
cmp
xorl
cmpsl
rcr
cwtl
jmp
sbb
add
xchg
out
negb
cld
xchg
fisubrs
cmp
ret
sbb
dec
mov
xchg
xorl
out
xor
fnstcw
jbe
add
aas
xorl
gs
les
sub
mov
orb
push
je
lcall
push
pop
lcall
sub
dec
adc
dec
mov
xchg
xlat
in
xchg
aad
mov
pop
ss
xchg
loop
fwait
pop
xchg
inc
push
pop
dec
popf
pusha
imul
and
mov
push
dec
and
sbb
in
xor
pop
insb
movsb
test
inc
cmpsb
push
adc
arpl
ds
ret
mov
ds
stc
lods
jmp
leave
pop
incl
rolb
pop
xchg
or
jbe
stos
mov
push
jmp
enter
or
add
pushf
inc
adc
mov
mov
decb
ljmp
xchg
leave
hlt
ss
sbb
adc
dec
fisubrs
loope
pusha
mov
or
pushf
mov
movsl
in
aaa
push
xor
inc
sub
sbb
pop
enter
repnz
xchg
or
ljmp
cmp
shl
lret
lret
sbb
rcr
ja
in
hlt
xor
xchg
xchg
mov
lods
xor
leave
loop
xchg
sub
stos
mov
add
ds
notl
add
or
fdivrp
jle
xorl
jns
test
incw
lcall
mov
popf
shrl
fadds
loope
arpl
jl
pop
cwtl
in
pop
inc
cmc
or
call
lahf
inc
add
and
loop
mov
jns
jp
das
stc
stos
aas
mov
clc
scas
data16
cmpsl
or
inc
cs
movsl
dec
lods
xchg
cmp
xor
ficoml
in
sub
jne
cmp
dec
push
mov
xor
mov
xlat
mov
cli
and
or
aaa
mov
rcr
inc
xchg
add
into
shlb
mov
pop
xchg
mov
bound
cld
mov
lods
shl
adc
mov
add
cmpsl
mov
push
push
xchg
shrb
dec
xchg
push
mov
loop
xchg
rcll
mov
jge
inc
and
sub
mulb
icebp
cmpb
popa
xchg
or
cmpsb
mov
les
or
add
sub
xor
jnp
stc
mov
add
inc
fistpll
iret
ret
and
or
daa
sub
shll
test
jno
xchg
test
mov
insl
and
jge
test
and
sub
lods
leave
xchg
pop
cwtl
push
cmp
mov
jle
clc
push
sbb
in
rcll
mov
int3
xchg
loopne
negb
inc
sahf
sahf
dec
or
pop
daa
cmp
mov
add
shl
cmp
pop
mov
mov
call
fnsave
add
mov
jg
add
jle
sahf
xchg
imul
xchg
imul
enter
jne
xchg
and
jecxz
ret
pop
test
nop
mov
sub
insl
mov
arpl
xor
and
sarl
add
adc
dec
jecxz
das
int3
mov
xchg
add
and
dec
jge
mov
cs
insl
mov
outsb
insb
cmp
cmp
pop
insl
pop
outsb
ds
jnp
fists
cs
add
and
bound
popa
call
dec
int3
data16
stos
or
mov
rolb
xchg
stos
inc
hlt
mov
push
jae
lret
cmp
shrl
adc
std
insb
xor
push
xor
aas
js
in
sub
sub
push
clc
sbb
push
in
push
insl
mov
mov
jo
push
data16
sub
call
loop
inc
sub
xchg
clc
mov
scas
inc
pop
cmp
mov
stc
xor
fmuls
jb
fdiv
outsl
mov
push
lds
dec
mov
inc
cli
loop
hlt
add
mov
mov
mov
mov
cmp
cli
adc
pop
popa
sti
jnp
les
xchg
loope
add
jl
dec
jecxz
hlt
sub
aas
out
outsb
xchg
xchg
cmpsb
pop
xchg
mov
test
fidivl
je
xchg
nop
in
mov
loopne
stos
xchg
aad
das
nop
shll
add
repnz
fiadds
rcr
push
inc
mov
mov
xchg
jecxz
test
test
je
xor
lods
mov
insl
shll
cwtl
leave
jne
push
in
imul
aas
xor
jns
mov
aas
push
jecxz
insl
leave
ds
ljmp
xchg
js
push
pop
dec
adc
inc
cmpb
add
sti
fs
push
test
insb
aas
mov
movsb
call
rol
dec
xorb
pusha
sbb
mov
sub
shlb
pop
inc
loope
cmpb
cmpl
xchg
sub
mov
loop
mov
out
cmp
mov
sti
gs
adc
fsts
ficomps
xchg
lds
mov
cmp
mov
ljmp
fiadds
dec
aad
jnp
jnp
ret
dec
iret
sahf
dec
sub
xor
idiv
cwtl
aam
gs
jl
and
lcall
mov
addr16
jmp
shl
mov
and
notl
mov
test
mov
jge
inc
adc
movsb
jnp
icebp
cli
rcll
xchg
cmp
ret
lret
mov
mov
inc
cmpsl
dec
aaa
rclb
mov
pusha
ljmp
loop
push
push
dec
cmp
mov
rolb
jae
push
je
out
jp
xchg
fcom
push
add
jl
les
add
cmp
or
adc
inc
ss
mov
in
lds
ds
sbb
add
movsb
inc
scas
push
jo
addb
xorl
xor
mov
arpl
loopne
inc
lahf
sub
scas
xor
das
int
xchg
jmp
pop
adc
pop
and
push
sbb
and
push
or
in
movsb
or
into
ret
mov
add
mov
pop
inc
sub
sti
jns
cmp
rolb
sahf
int
or
lahf
ljmp
lahf
es
scas
cmp
arpl
mov
mov
das
or
out
cli
push
in
mov
outsl
fists
xchg
pop
jmp
hlt
inc
mov
mov
xchg
in
loope
cld
stos
aaa
cmp
jb
sti
pop
adc
pop
in
mov
add
add
dec
sarb
mov
mov
in
pop
inc
or
lds
jnp
call
mov
or
gs
js
cmpsl
or
pop
mov
or
loopne
cmp
lret
xor
adcl
inc
imul
adc
lods
in
sub
cmpsl
sbb
sub
in
xor
inc
bound
or
lcall
or
mov
xchg
jecxz
push
out
xor
jmp
pushf
xchg
les
jns
fisttpll
pusha
push
enter
cwtl
rcrl
fcmovnbe
lahf
enter
insb
mov
mov
dec
fmul
xor
sub
sbb
inc
sub
sbb
xlat
arpl
loop
aad
scas
and
and
sbb
in
outsb
in
les
mov
or
push
or
push
stos
sub
repz
lahf
or
loope,pt
mov
lock
fiadds
add
xor
sbb
adc
mov
ja
xor
out
and
lods
es
sub
lods
paddusb
or
push
cmp
stc
jb
jmp
cmp
js
jb
cmpsb
enter
add
pop
pop
push
mov
and
cmp
cmp
out
inc
pusha
out
dec
sub
js
nop
popa
es
mov
and
inc
loopne
inc
jg
and
xchg
aam
inc
arpl
mov
pushf
mov
sub
mov
pop
mov
call
out
jnp
xchg
push
mov
int
lock
sbb
rol
mov
or
jbe,pt
pop
aad
push
fisubrl
imul
cmpsb
or
pop
sbb
cmp
sub
sub
clc
cmp
call
nop
xor
cmp
jg
jb
mov
xor
mov
mov
mov
add
and
jns
jne
addr16
push
pop
mov
mov
insl
mov
mov
jmp
aad
cmp
std
pop
sub
lahf
hlt
fimuls
cltd
xlat
bound
inc
and
push
pop
pop
xor
ja,pt
jmp
cwtl
adc
imul
push
jno
or
add
xchg
test
pop
sub
inc
dec
sbb
in
adc
fiadds
or
notb
push
out
scas
stos
repz
xlat
jbe
sarl
cmp
mov
ds
adc
pop
xor
int
out
dec
fcompl
push
jecxz
pop
and
pushf
out
cli
aas
mov
dec
aam
aam
hlt
cmpsl
pop
aam
mov
inc
incb
data16
addl
mov
add
inc
adc
cli
or
xchg
jl
ret
out
cli
popa
sahf
mov
fidivrl
jge
inc
je
or
sub
repz
inc
clc
clc
aaa
push
and
repnz
ljmp
ljmp
jo
andb
and
ret
imul
inc
mov
les
lods
add
repnz
in
inc
or
int
daa
push
mov
hlt
pop
popa
test
ljmp
add
mov
adc
shlb
or
xchg
out
pop
push
jnp
xor
fucomp
jmp
xchg
pop
xor
pop
stos
mov
push
lea
jb
add
adc
sub
orl
out
push
add
adc
push
xchg
push
inc
pop
into
pop
aad
into
mov
jns
lea
adc
test
and
mov
repnz
xchg
xlat
es
cmpsl
or
mov
iret
push
lahf
inc
aam
xorb
and
xorb
sub
jg
stos
pop
pop
cmp
pop
lret
add
in
mov
aam
hlt
mov
out
push
sub
leave
xchg
pusha
xor
xchg
sbb
dec
push
xchg
stc
add
dec
outsb
jle
ret
inc
pop
pop
and
xor
and
std
sub
mov
cs
add
int
lahf
dec
push
call
inc
inc
mov
gs
jo
pop
xor
scas
pop
cwtl
cmpb
xor
xchg
jb
add
inc
xchg
std
popf
add
out
cli
xor
mov
sbb
or
test
shrb
inc
int
and
inc
mov
lock
add
roll
pop
push
stc
rcrl
pop
rcrl
in
aam
jb
xchg
rcl
and
add
mov
call
inc
cmc
push
xor
push
jae
or
pop
scas
fsts
popl
out
pop
jne
jae
inc
enter
xlat
test
cmp
pop
das
add
mov
mov
and
fidivl
or
xor
and
iret
adc
dec
loope
mov
ror
sub
jbe
cmc
push
orl
dec
repz
jl
dec
int
or
stos
aas
cwtl
mov
sahf
cs
push
adc
and
cmp
xor
dec
arpl
jo
sbb
pop
or
cwtl
sahf
pop
adc
dec
mov
shlb
push
movsl
jo
jne
adc
ret
test
or
xor
insb
js
sbb
ja
add
push
inc
mov
inc
pop
in
add
test
mov
adc
adc
ja
je
out
sub
loopne
mov
loopne
mov
cmp
daa
repnz
jb
addl
gs
ret
push
push
testb
rcll
mov
loope
nop
pop
or
jns
mov
loop
mov
mov
test
out
dec
outsb
cld
jp
mov
sti
movsl
push
push
mov
scas
mov
xchg
aas
test
pop
in
ret
out
and
gs
loop
stos
mov
call
cmp
test
aas
fildl
and
mov
push
push
lcall
scas
sbb
dec
out
add
shrb
out
aas
rorb
data16
dec
jg
mov
add
pop
mov
fistpl
xor
mov
or
push
pop
clc
sbb
cli
xchg
sbb
enter
jge
jge
iret
lods
push
pop
test
inc
xchg
push
cmp
mov
xlat
shll
fucomip
test
ret
lahf
adc
jmp
jl
outsl
xor
dec
sbb
push
mov
inc
dec
xchg
stos
cmp
test
inc
push
int3
pop
out
pop
pop
jecxz
mov
adc
mulps
or
xlat
add
sbb
xchg
jg
sub
pop
orps
mov
push
push
in
pushf
cmp
mov
cmc
sub
shlb
nop
dec
sbb
fisttpl
gs
loop
fldl
pop
xchg
clc
sub
scas
sbb
cmpsl
test
push
pop
xchg
mov
loopne
sbb
loope
add
or
cld
xor
cmp
in
xor
imul
pop
das
pop
push
push
movsl
movsb
iret
xchg
mov
add
jl
test
add
lret
fwait
clc
imul
sub
icebp
push
mov
mov
or
pop
inc
fnstcw
mov
xchg
in
pop
sarl
mov
jge
mov
jo
xor
mov
fsubs
mov
cli
inc
jns
xor
negb
lock
js
stos
xor
ja
inc
inc
pop
jp
add
stos
mov
fisubrl
test
dec
lcall
jae
push
mov
dec
xlat
popa
mov
push
jmp
cmp
mov
mov
enter
push
leave
out
and
mov
adc
addr16
std
pushf
and
push
mov
mov
jbe
or
inc
inc
sbbb
and
sub
test
rol
pop
inc
mov
mov
rcll
lea
cmpsb
pop
jmp
popl
daa
lahf
mov
sbb
aad
or
sahf
loope,pn
repz
xchg
push
inc
jecxz
xchg
test
clc
les
sub
shlb
and
push
push
test
mov
lods
outsb
mov
daa
pandn
stos
pop
push
mov
cmp
xor
sbb
fs
jmp
or
std
movsl
loope
mov
push
dec
pop
cld
xchg
loop
or
cmpsl
mov
mov
divl
sahf
inc
fisttpl
jp
lcall
mov
xchg
add
in
and
xchg
jle
loopne
rol
lods
jmp
and
and
mov
add
pop
scas
pop
fsubl
cmp
adc
xor
enter
repz
pop
or
out
cmp
xchg
mov
stos
and
and
xor
enter
push
out
repz
stos
fisttpl
inc
andb
inc
loope
cmp
mov
jae
popa
fistps
fdivs
mov
jb
jecxz
cwtl
jle
dec
xchg
cmp
dec
inc
es
aad
jge
or
int3
jo
pop
dec
out
xchg
imul
loop
xchg
in
sbb
pusha
pusha
hlt
inc
xor
inc
sbb
cwtl
xor
dec
push
aaa
sub
xor
rolb
or
fwait
rcll
stos
fadds
mov
adc
imul
out
daa
subl
test
ficomps
push
or
out
add
movsl
mov
mov
pop
dec
rclb
mov
mov
loope
xor
push
jl
ss
call
div
test
nop
add
push
mov
mov
sbb
and
insb
push
ds
icebp
and
mov
xchg
jns
xor
gs
das
je
pop
nop
jns
cmp
or
loop
jno
sub
adc
cltd
add
sti
mov
inc
jae
mov
icebp
out
jl
adc
mov
jp
cld
xchg
sbb
and
or
gs
cmp
ljmp
movsl
in
sbb
mov
inc
push
push
iret
dec
cmp
enter
fidivrs
jns
cmp
mov
inc
leave
clc
inc
imul
movsb
dec
mov
and
daa
rcrl
pop
mov
test
xor
testl
pushf
jne
mov
xchg
std
pop
mov
sahf
aas
xor
movsb
cld
dec
pop
mov
xchg
xchg
sahf
notl
jno
or
ret
adc
adc
dec
inc
js
mov
adc
mov
add
add
out
xchg
leave
mov
push
in
icebp
inc
adc
in
fisubrs
clc
lds
or
or
mov
sbb
sbb
or
stc
into
pop
das
jp
movsb
sub
fcoml
mulb
test
leave
jo
fdivr
lds
inc
fsubrl
adc
test
pop
test
sbbl
repz
fucomi
jb
popf
and
sub
sarl
das
dec
inc
mov
mov
cltd
pop
sarl
jp
lret
xor
std
cmp
pop
stc
cmp
pusha
or
rorl
aam
pop
or
push
int
call
aas
xorl
ljmp
lds
and
aad
adc
int
pop
inc
mov
mov
lea
insb
mov
or
loopne
incl
mov
xchg
jbe,pt
mov
mov
inc
and
stos
jge
xchg
adc
cmp
and
test
push
xor
mov
mov
jne
sbb
ljmp
test
xchg
je
dec
and
push
rcll
je
xor
xor
scas
add
lahf
mov
mov
lret
dec
scas
aaa
cli
pop
pop
xlat
lods
inc
lods
inc
in
clc
lods
sti
popa
or
xchg
daa
adc
nop
decl
and
xlat
inc
mov
cs
jo
dec
cmpl
arpl
fmul
hlt
push
decb
mull
in
or
in
pop
jno
push
jns
in
fildl
icebp
pop
sub
cmp
push
arpl
add
mov
jns
hlt
push
insb
iret
mov
jle
mov
rolb
pushf
pusha
pop
lret
and
clc
push
mov
jle
jnp
pop
out
push
lods
push
inc
jo
xchg
aam
icebp
jecxz
cltd
push
mov
cltd
stc
sbb
xchg
sbb
pop
xchg
mov
out
mov
outsl
sarl
in
mov
dec
sbb
notb
out
sbb
ret
xor
adc
sbb
mov
icebp
push
pop
sbb
pushl
add
in
sti
push
add
and
mov
cltd
insl
or
test
xchg
icebp
fistpl
int
mov
mov
out
pop
out
and
mov
inc
int
mov
lea
xor
jmp
xchg
push
subb
imul
lfs
fsubs
aaa
rorb
sub
in
hlt
pop
loope
push
in
or
or
fists
ljmp
repnz
data16
mov
pop
mov
cli
mov
mov
hlt
jns
ret
jae
sbb
cmc
jge
jno
jg
push
push
aam
push
push
push
std
or
stos
or
data16
xchg
cmp
pop
les
mov
rep
clc
jp
nop
lret
insl
push
pop
and
scas
sti
push
mov
xor
xchg
mov
pop
push
dec
lods
adc
in
fisttps
mov
rcrl
adc
lahf
filds
xchg
push
pop
fs
inc
push
rol
ljmp
xchg
mov
and
mov
test
loopne
cld
mulb
fwait
or
cwtl
mov
stos
lcall
stos
rcr
fstpl
mov
das
dec
out
je
inc
adc
in
jmp
aad
pop
cmp
or
add
jbe
incb
mov
jae
ret
push
inc
lea
test
imul
sub
clc
std
xchg
pop
pop
inc
xor
out
call
fnstenv
mov
xor
mov
or
repnz
fisttpll
iret
xor
cld
insl
and
out
loop
pop
sub
jge
nop
mov
jl
xchg
xor
js
fwait
imul
jp
jecxz
cmp
int3
mov
or
and
xchg
scas
scas
gs
divl
mov
iret
inc
pop
mov
les
iret
mov
out
pop
andl
push
es
fidivs
xor
lret
je
ja
mov
mov
fnstenv
sbb
cltd
scas
jns
jno
je
fimuls
loope
jmp
jbe
push
mov
mov
enter
or
lret
add
or
push
lcall
mov
scas
cmp
mov
and
add
clc
jns
in
dec
rorb
xor
fsubl
mov
fbld
xor
mulb
ret
test
mov
stc
xor
jae
jnp
mov
pop
mov
test
imul
mov
rclb
xor
outsl
xor
mov
sbb
xor
scas
aas
sub
push
ficompl
lods
lret
or
and
lahf
imul
enter
outsb
popf
pop
xchg
sti
loopne
int3
dec
xchg
mov
sbb
jge
imul
and
inc
aam
jbe
sbb
stc
jp
jmp
inc
cmpsb
or
test
loop
push
mov
daa
xchg
pop
xchg
ja
jae
xor
sbb
test
daa
fldcw
push
dec
cli
mov
sbb
jl
push
or
pop
sub
lahf
dec
push
enter
test
je
push
cmp
in
xchg
adc
ja
int
in
and
out
adc
inc
mov
call
lods
cwtl
pop
insb
mov
jp
icebp
pop
addr16
int
arpl
shl
sbb
pop
xor
pushf
pop
sbb
push
fnstenv
das
xchg
int
sub
mov
jecxz
iret
or
pop
dec
jmp
jg
sbb
nop
stos
test
lcall
mov
in
imul
int
aad
mov
mov
pusha
insl
les
mov
shll
sub
lea
push
pop
xchg
test
or
lock
ja
cwtl
adc
loop
xchg
cmp
adc
mov
cmp
adc
rclb
dec
cwtl
jbe
leave
pop
mov
jb
test
mov
cmpsb
aad
fdivl
dec
dec
jbe
inc
scas
scas
movsl
leave
sbb
cmp
and
nop
xchg
push
pop
rcrl
sub
shrb
jno
sub
es
mov
push
rcrb
cmc
dec
mov
imul
jbe
repnz
dec
or
xchg
aam
push
lods
data16
std
push
cmp
pop
sbb
dec
rorl
div
test
iret
enter
push
add
lods
roll
jl
add
sti
std
test
mov
sub
ss
xor
repnz
or
push
lock
push
xchg
mov
pusha
ret
xor
addb
jb
and
lahf
cli
aas
xchg
enter
movsb
movsl
orl
xor
inc
fimull
add
jno
inc
lret
imul
lahf
jle
xor
insb
lods
es
jl
push
push
jle
cmpsb
jecxz
fwait
test
push
aam
push
shrb
movsb
test
ds
cli
or
push
push
notb
testl
test
dec
mov
lahf
adc
fcompl
adc
adc
sbb
mov
scas
fidivl
jnp
fidivl
lcall
jbe
das
call
dec
sbb
call
fbld
adc
iret
test
lret
dec
cmp
jo
repz
mov
shr
add
out
sbb
in
inc
sub
andl
mov
mov
xchg
xchg
incb
lcall
rcr
mov
stos
enter
pop
mov
lods
jl
imul
ret
rcl
inc
push
jecxz
jg
ficompl
data16
jge
push
inc
cmp
fsubrl
jno
dec
nop
mov
mov
mov
and
repz
xor
cltd
outsl
xor
aas
outsl
test
mov
faddl
pop
xchg
iret
ljmp
xor
jb
push
sti
mov
fisttpl
ds
loopne
bound
fcmovbe
je
dec
ret
test
insb
rcrb
imul
cli
daa
jae
or
dec
loop
js
adc
pmuludq
push
imul
push
ja
push
adc
out
pushf
push
es
xlat
fmuls
pop
orb
out
rorb
je
mov
mov
test
dec
pop
popl
mov
and
sub
inc
xorb
leave
cmp
sbb
jmp
push
popf
mov
fisttpll
sub
mov
fcoml
int3
jmp
inc
je
pop
fnsave
insl
jmp
cmp
jno
pop
push
mov
pop
shll
mov
popa
enter
shlb
pop
outsb
add
push
out
pop
jae
jae
or
push
ja
mov
insb
xchg
sbb
fs
pop
outsb
mov
inc
scas
jp
insb
xchg
mov
mov
adc
mov
lahf
lds
add
aad
pop
pop
cmp
pop
mov
or
test
xor
sahf
arpl
jno
out
enter
iret
cmp
cmp
lds
pop
mov
subb
sbb
mov
dec
or
push
mov
leave
push
rcrb
adc
icebp
or
jno
xor
mov
repz
test
setle
lock
outsl
arpl
in
xor
pop
add
pop
pusha
mov
daa
mov
inc
insl
cs
dec
jo
jge
cmp
cmpl
scas
push
or
mov
sub
rorl
push
scas
mov
inc
pop
mov
xor
dec
sub
and
cmc
sti
shlb
pushl
jmp
inc
daa
fistpll
pop
bound
jl
pop
mov
stos
cmpsb
fisttpll
dec
dec
or
adc
and
push
jecxz
cmc
xor
pop
lret
mov
sbbb
push
adc
xchg
mov
out
mov
pop
daa
fs
js
aam
enter
and
push
push
inc
into
cmp
lods
call
cld
sahf
mov
rorl
cmpxchg
add
sub
jge
xor
and
xor
and
movsl
jp
in
mov
add
push
rolb
mov
push
push
mov
lods
jb
loop
jl
dec
and
cltd
outsb
dec
divb
xorl
push
shll
inc
fstl
dec
pop
add
mov
and
jp
cli
stos
out
test
xchg
subl
xchg
fdivr
and
in
dec
scas
sbb
repz
push
in
adc
sbb
mov
push
mov
sbb
mov
out
mov
jnp
and
std
xchg
add
stos
push
cli
cwtl
stos
pop
xchg
dec
push
sti
dec
xchg
push
das
push
jno
mov
cwtl
dec
push
and
fwait
popa
into
fstpt
nop
test
mov
xor
lret
xor
xchg
mov
and
pop
ret
test
lea
mov
rclb
or
lea
push
aas
add
jnp
inc
add
cmp
sub
adc
mov
jl
pushf
das
sub
and
lret
int3
loope
cltd
xchg
imul
xchg
rol
mov
xchg
mov
aaa
push
jle
jp
data16
sbb
dec
mov
xchg
push
arpl
jmp
push
xor
jne
sbb
gs
loope
sbb
xor
stos
pop
daa
scas
pusha
sbb
sbb
jp
ljmp
mov
mov
cmpsl
push
lret
jecxz
call
mov
pop
inc
add
dec
mov
mov
adc
int
dec
sti
outsl
jl
clc
popa
sti
cmp
xor
mov
mov
add
jmp
xchg
enter
jl
mov
push
mov
mov
cld
xchg
cld
icebp
xchg
add
cmp
adc
cmc
ss
mov
mov
cmp
rolb
xchg
adc
loopne
scas
aas
inc
xchg
mov
sbb
xor
push
add
dec
test
aaa
mov
xchg
push
adc
cmp
and
push
xchg
sub
daa
dec
and
lahf
loopne
cltd
mov
cmp
jle
cmp
xchg
outsb
adc
pop
out
add
mov
add
pop
adc
pop
xor
lret
jb
addr16
push
pop
adc
add
mov
mov
aas
dec
inc
dec
jmp
pop
je
inc
jno
xor
sarb
xchg
add
xchg
cmpsl
cmp
xchg
mov
cld
cmpsl
inc
sbb
jmp
push
stos
loopne
pop
test
add
mov
and
xchg
jo
pushf
stc
call
jle
xchg
push
icebp
pop
out
in
or
jg
aas
adc
and
das
or
decb
sar
add
shll
stos
outsl
push
mov
or
testb
sub
fimull
and
dec
cltd
push
aam
cmpsl
dec
add
clc
rcl
iret
fs
popf
or
popa
iret
mov
mov
hlt
cmp
mov
mov
push
jle
add
xor
and
fcmovne
cmc
or
fidivs
jmp
jnp
sbb
push
daa
xchg
jg
jae
jb
mov
js
jl
test
and
xchg
pushf
inc
jnp
fsubs
or
or
fisttpll
fimull
scas
mov
aas
mov
or
mov
testl
add
pop
call
sarl
stos
jecxz
jno
inc
adc
inc
rolb
cmpsb
mov
daa
and
jmp
or
xor
cwtl
int3
repz
movsl
ficompl
and
push
imul
jp
scas
fmul
shr
jb
jnp
adc
gs
into
xchg
xorl
movsb
es
mov
shll
leave
jne
inc
mov
xor
cmp
std
rolb
cmpsl
std
addl
imull
xor
add
add
push
addr16
push
mov
xchg
idivb
mov
icebp
fadd
and
add
mov
cmc
lods
fdivs
fdivl
std
add
mov
or
or
xchg
test
dec
movsl
mov
jb
cwtl
ret
pushf
into
sbb
ficompl
out
jae
xor
xchg
mov
adc
jmp
cmpsb
sbb
mov
repz
cmp
mov
adc
mov
dec
xchg
jp
push
pop
sub
pop
pop
ss
int
cmp
lds
mov
or
mov
fmul
xor
mov
lds
cmp
scas
mov
add
inc
xor
sub
out
jo
or
mov
jecxz
fcmovne
repz
pop
vdivps
addr16
hlt
addr16
pop
sbb
sbb
cs
arpl
xchg
pop
and
xor
js
aam
cmp
test
jl
test
ja
xchg
test
sbb
mov
inc
xchg
dec
les
pop
add
popf
inc
into
push
push
mov
test
shlb
in
xor
sbb
dec
cmp
movsl
cmp
repz
jno
fcmovnbe
adc
cmp
enter
je
test
xchg
xchg
aas
lret
or
shrb
mov
or
enter
inc
test
call
push
jl
insl
mov
in
inc
cmpl
shll
ret
push
push
xor
mov
or
ja
mov
inc
das
stos
cli
mov
leave
cmp
into
jl
mov
lret
xor
pop
stos
outsl
dec
adc
scas
fsubl
mov
inc
stc
xchg
std
iret
mov
test
stos
or
sub
cld
shlb
jb
addr16
push
xchg
inc
icebp
ja
rcrb
iret
xchg
mov
movsl
cwtl
inc
dec
xlat
mov
outsl
push
subb
fisubrs
ret
or
or
adc
mov
pop
ret
jns
lahf
into
mov
shll
pop
ds
push
addr16
jl
es
shll
or
dec
sbb
push
and
insb
adc
in
push
xor
pop
sub
push
jne
addb
add
ljmp
out
add
fsubr
xor
jecxz
fmull
jge
add
xchg
pop
hlt
mov
push
or
arpl
cmpsl
mov
jns
cmp
leave
fucomip
xchg
ret
lahf
jmp
movb
decb
fmull
out
aam
jb
jae
cli
dec
mov
xor
cmpsb
dec
add
mov
in
cs
jb
int
or
loop
shl
jmp
adc
out
insl
movsl
int3
inc
pop
mov
cmp
bound
int3
movl
adc
outsl
inc
cli
dec
xchg
jle
es
aaa
pop
xor
push
push
mov
and
jbe
jae
popf
xchg
js
ficompl
sub
sbb
or
call
mov
or
cmc
jns
inc
sub
out
jecxz
mov
push
lods
outsl
mov
sub
cmp
stos
and
sub
iret
mov
inc
les
out
sub
xlat
pop
in
mov
out
sbb
pop
fs
aam
iret
and
push
inc
int
icebp
lea
sahf
shlb
imul
aam
cli
sbb
mov
jnp
mov
aaa
out
loopne
sbbb
mov
mov
cmc
fsubl
rcrb
pop
push
xchg
sti
out
add
mov
mov
sub
inc
xchg
ret
or
mov
clc
cwtl
cmp
shrl
xorb
push
inc
dec
cmc
pop
pop
xchg
sub
repnz
mov
fcompl
scas
pushf
xor
imul
int
or
fdivrl
adc
jp
scas
orb
xor
mov
js
mov
xorl
fs
jne
enter
in
xchg
movsl
in
es
call
mov
dec
mov
and
adc
xor
cmp
mov
mov
daa
es
pop
mov
lock
inc
in
test
shlb
or
or
mov
cli
and
mov
jge
ljmp
xchg
xchg
cmp
and
cmc
rol
pop
imul
mov
pop
pop
inc
xchg
push
mov
adc
sub
nop
out
jne
xchg
popa
inc
push
into
out
inc
adc
and
mov
or
push
es
jmp
dec
and
mov
xorl
and
insb
pushw
fsubr
loopne
addr16
es
dec
push
and
and
pop
mov
cmc
loope
sbb
mov
adc
cmpl
pop
int3
daa
xchg
movsb
pop
jb
cmc
outsb
rcrb
xchg
jno
scas
inc
mov
dec
fildl
sub
mov
call
scas
data16
lret
xor
jne
push
fwait
or
out
jne
repnz
pop
xchg
pop
mov
cmpsb
dec
push
adc
inc
jle
mov
cmp
shrl
push
push
jbe
push
push
fisubrs
mov
mov
mov
outsb
dec
cltd
nop
pop
mov
or
jae
jge
das
inc
mov
scas
pop
mov
and
xor
sub
in
push
sub
cmp
adc
out
sub
ds
inc
es
shrl
cltd
mov
mul
pushf
loope
mov
mov
or
add
mov
xor
xchg
jge
repz
inc
and
jg
mov
ret
out
cmpsl
fwait
jmp
push
jg
mov
mov
pop
dec
movsl
cmp
jle
push
subb
xchg
jg
ret
in
leave
in
loop
adc
pop
mov
out
into
jge
mov
sbb
aam
lds
jae
pop
jne
test
xor
shrb
dec
in
lock
xchg
mov
pop
scas
aas
or
shrl
in
and
mov
loope
push
arpl
aam
push
xchg
xchg
sub
jb
scas
mov
movsl
ljmp
mov
adc
pushf
jne
or
mov
js
add
pop
iret
add
mov
mov
xor
cmp
in
inc
loop
hlt
pop
jl
push
jns
push
repz
bound
dec
int
or
ds
divl
insb
jbe
lret
push
test
repnz
sarl
mov
ficoml
dec
push
ret
xchg
sbb
adc
lcall
pop
push
push
imul
mov
repnz
add
or
jns
pushw
adc
movb
mov
jne
inc
push
cmp
out
add
daa
ficomps
notl
inc
sarb
fwait
out
sub
insb
pop
inc
fmuls
add
xor
lret
jno
or
push
sub
dec
sub
stc
sbb
xchg
js
movsb
lcall
icebp
aad
dec
or
push
bnd
ds
lds
xlat
xchg
jno
or
pop
push
jmp
mov
mov
xchg
loop
jmp
js
pushf
aad
sbb
xlat
lea
stc
into
ljmp
adc
leave
pop
fwait
ljmp
push
or
or
adc
pop
jns
add
stos
jo
xchg
dec
pop
and
fldt
lret
movb
mov
xchg
pop
push
mov
dec
in
test
adc
insb
fidivs
add
daa
push
int
add
mov
xor
dec
popf
cmpsb
test
push
out
mulb
xchg
fnstenv
xchg
insl
outsl
cmpsl
cs
xchg
mov
xor
or
iret
cmp
lahf
pop
test
sahf
ss
push
cmp
jmp
fiadds
add
xchg
stos
cmp
fisubrs
pop
and
dec
sbb
loop
pop
adc
push
lea
out
js
jb
cwtl
mov
push
mov
adc
nop
push
add
cld
sbb
jae
ret
jge
add
cmp
mov
pop
pop
inc
je
mov
jo
mov
hlt
pop
out
out
mov
popa
leave
dec
hlt
inc
cltd
daa
frstor
cli
int
push
rcrl
xchg
decb
xor
leave
cmp
scas
enter
lds
xchg
js
je
fcmovbe
sub
cmp
nop
pop
in
call
popa
loop
insb
fcomi
addr16
or
inc
cmc
push
mov
add
sar
dec
jge
stos
ficoml
push
cmpsb
repnz
pop
js
insb
xchg
inc
inc
push
test
rclb
xor
call
aad
mov
ja
xor
pop
sahf
idivb
sti
cmp
addb
and
shlb
lea
dec
add
arpl
lods
jno
push
mov
or
mov
out
mov
push
dec
pop
pop
out
mov
push
push
pusha
jp
sbb
and
stos
xchg
imul
add
jmp
pop
bound
pop
xor
or
sarb
aad
subl
jle
push
insl
mov
or
outsb
xchg
xchg
inc
out
xor
sub
fwait
sub
xor
push
dec
movsl
loope
popf
icebp
xchg
mov
or
mov
mov
and
inc
push
cmp
stos
popa
and
bnd
jp
cwtl
add
fbstp
adc
push
repz
aad
and
cmp
mov
dec
dec
sub
bound
repz
sub
test
movsl
mov
enter
mov
addr16
roll
pop
inc
test
inc
daa
or
or
pop
dec
repnz
sbb
jo
jp
mov
iret
repz
jmp
scas
call
adc
out
jnp
test
jo
or
and
cmp
jmp
add
lds
inc
or
ret
aam
inc
lea
xchg
pop
lcall
stos
fldenv
ds
xchg
xchg
xlat
imul
or
cmc
outsb
cmpsb
lods
insl
cli
xchg
and
rcrl
dec
pop
mov
std
aam
xchg
inc
and
cmp
sbb
xor
xlat
lea
mov
cmp
dec
lcall
out
xor
cmp
loopne
int3
ja
fnsave
fs
out
aas
lods
cmpsb
cltd
sub
mov
and
or
lret
scas
push
lds
jp
repnz
in
push
fbstp
cmp
rcr
or
jns
mov
mov
mov
dec
lcall
mov
sbb
out
fldcw
sbb
jae
ja
data16
ja
add
scas
inc
jns
jecxz
cmc
pop
fwait
repz
xor
arpl
fs
sbb
jle
inc
xchg
mulb
ss
jae
test
cmp
aad
jp
dec
add
lret
lret
mov
inc
add
js
mov
inc
sti
dec
adc
nop
in
sub
or
in
fnsave
sub
in
out
scas
test
dec
pushf
shl
mov
cmpsb
repnz
adc
and
sbb
mov
out
insl
aaa
dec
and
push
punpcklwd
ds
sub
pop
in
shlb
aas
in
imul
or
mov
pusha
cmp
push
scas
push
in
orb
push
jns
sub
pop
aas
stc
mov
aaa
jge
add
into
or
in
pushf
mov
cmc
inc
test
push
jle
cwtl
sbb
adc
jnp
jmp
bound
mov
and
sub
insl
lcall
cld
cmpsl
xchg
cs
sub
push
sbb
pusha
lret
pushf
push
jg
aad
out
fidivs
loopne
nop
int3
cli
cmc
and
push
xor
cltd
pusha
repnz
sub
pushf
inc
fadds
enter
ret
lock
test
adc
lcall
adc
mov
call
insb
xchg
movsl
imul
jae
dec
push
fdivs
loope,pn
cltd
pusha
sub
xchg
incb
push
mov
sub
inc
pushf
pop
hlt
xchg
adc
clc
lods
mulb
mov
incb
mov
mov
jl
mov
out
lcall
rolb
inc
push
rcrb
inc
imul
pcmpgtd
ds
inc
clc
fwait
nop
int3
xchg
jb
cmp
test
out
push
or
pop
inc
push
sbb
notl
adc
inc
add
int3
cmc
xor
mov
adc
jno
push
jb
jmp
out
popf
fisttps
aad
add
mov
and
cmp
pop
sub
dec
adc
push
hlt
js
jl
and
mov
int3
or
in
aad
inc
or
or
lods
mov
jge
test
shrb
add
roll
js
mov
shrl
ret
xchg
mov
icebp
push
fxrstor
add
mov
mov
ljmp
lcall
or
mov
and
fisubs
add
ss
nop
lret
pop
stc
and
pop
jmp
je
daa
mov
adc
push
in
dec
scas
push
pushf
int
pop
loope
out
xchg
imull
xor
sbb
nop
sbb
lea
mov
in
pushf
dec
out
mov
out
ljmp
aam
pushf
hlt
inc
lahf
jp
mov
mov
dec
adc
movb
enter
enter
call
add
adc
mulb
pop
call
test
psrld
jmp
push
or
sub
aam
jp
es
pop
les
repz
push
cwtl
in
or
lods
movsb
xlat
xchg
popa
xor
ja
push
mov
pop
mov
aad
lcall
ljmp
sub
sub
inc
fbld
outsl
jbe
xor
sbb
dec
jmp
sub
in
sub
xchg
out
ds
jne
out
imul
xchg
push
shll
pop
outsb
in
int
mov
std
jae
test
imul
fsubrs
adc
movsl
sbb
jno
jecxz
lea
call
or
mov
jno
pop
lcall
arpl
outsb
stc
jge
call
cs
pop
mov
mov
aaa
out
sbb
int3
orb
loop
dec
add
lods
mov
leave
fmull
cwtl
adc
push
pop
gs
les
rolb
loopne
jl
mov
rclb
aad
setp
push
cmp
mov
pop
ss
xor
mov
mov
leave
xchg
enter
and
push
lds
mov
pop
int3
add
dec
popf
xchg
int
pop
dec
push
lcall
rol
cmpsb
xor
aam
ret
inc
sbb
lds
test
sub
sbb
imul
das
and
pop
test
leave
xor
sti
rcr
jp
mov
iret
cmp
lods
sub
adc
mov
rcr
call
daa
andl
cmp
jns
out
mov
sub
and
decb
lock
adc
jmp
dec
inc
cmp
xor
sbb
subb
dec
dec
push
and
mov
jge
js
pop
inc
inc
fs
inc
and
xor
lret
xchg
or
add
pop
mov
xchg
dec
ja
xchg
fidivrs
mov
or
and
out
lret
orl
or
mov
loop
outsb
mov
or
adc
test
xlat
rcr
push
sbb
popf
inc
arpl
roll
push
in
xor
xchg
fwait
xorps
ss
jg
or
shlb
ja
dec
push
stos
movsl
pushf
jle
and
pop
stos
adc
fidivrl
push
xchg
mov
rcr
data16
and
inc
mov
and
sub
out
add
add
loope
repz
push
out
cli
mov
or
in
sub
mov
shl
mov
nop
mov
aaa
xchg
out
movsb
in
fidivrl
popf
or
sbb
or
jo
jge
jnp
xchg
push
inc
lods
mov
call
out
lods
subb
pop
or
inc
jno
inc
aad
mov
cmp
xchg
mov
sbb
add
mov
popa
mov
and
adc
fmull
jle
push
xchg
in
add
lahf
inc
jae
pushf
stos
mov
bound
jnp
jp
jno
pop
ja
call
pop
outsl
mov
dec
cmp
lods
mov
jle
repz
dec
das
imul
sub
out
test
lock
outsl
mov
fildl
notb
sbbb
addl
jnp
sub
cmp
repnz
sbb
mov
ficompl
mov
outsb
xchg
mov
mov
repz
dec
scas
mov
cli
sbb
sbb
std
pop
lods
mov
aaa
push
cltd
and
inc
addr16
out
hlt
pushf
add
push
mov
mov
push
aas
movsl
and
les
lock
test
fs
add
or
dec
xor
stos
add
mov
insb
push
mov
pop
clc
cmp
fucom
jge
push
add
clc
adc
lds
sub
mov
lret
dec
jno
sahf
loop
jbe
fbstp
or
clc
lods
daa
bound
mulb
out
nop
add
jl
movsl
inc
jmp
data16
jg
pop
and
and
push
fcoms
push
popf
aad
and
mov
xchg
sbbl
aam
pusha
inc
inc
cmpsb
xchg
pop
jmp
mov
fcmovu
sti
or
or
jge
js
or
adc
dec
in
sbb
in
and
movsb
out
jl
movsl
sbb
lret
loopne
jo
adc
xor
and
jmp
ljmp
imull
inc
inc
mov
and
dec
xchg
mov
and
movsl
fs
icebp
arpl
cmpl
mov
xchg
ds
in
xchg
cmc
cmpsl
mov
pop
pushf
ret
or
test
loopne
adc
test
fwait
push
clc
xor
inc
stos
insl
push
mov
call
cmp
scas
add
jo
xor
xchg
lods
test
jbe
cmp
lahf
mov
cmp
mov
lret
inc
call
jns
popa
xor
push
test
and
cmp
pop
loope
or
sbb
mov
jmp
out
xor
out
outsb
jo
cmp
pop
push
cmpsb
sbb
mov
mov
mov
vcvtsd2ss
push
mov
ds
jno
test
sbb
out
jno
aas
dec
push
sub
sub
popa
or
push
notl
in
sub
cmp
mov
aad
xchg
and
fldt
aas
jne
insl
stc
gs
inc
add
sub
bound
dec
jns
sub
lcall
inc
mov
mov
sub
or
mov
clc
outsl
pop
out
notl
repnz
fcmovu
xchg
pop
mov
lock
jnp
inc
cmp
call
pop
out
xchg
add
add
lea
cmp
aas
outsl
jge
mov
loop
xchg
adc
xchg
cmpsb
mov
mov
sbb
into
ds
mov
lods
jnp
loope
push
xchg
nop
test
cmp
inc
cmp
leave
push
shl
dec
dec
out
hlt
dec
inc
les
xrelease
pop
or
insl
mov
mov
or
inc
lcall
inc
jmp
mov
sbb
or
inc
fidivl
shlb
inc
and
loop
pop
xchg
fdivs
les
pusha
ja
je
inc
test
js
mov
cwtl
xchg
xor
xor
cmp
loopne
adc
xor
lods
cmp
push
inc
out
add
pop
dec
pop
bound
push
cwtl
inc
insl
jecxz
mov
mov
mov
inc
adc
in
pop
imul
lods
adc
sub
sub
push
dec
insb
out
ret
mov
jbe
mov
xchg
data16
inc
je
jmp
dec
mov
and
pop
imul
pop
lea
pop
call
insl
mov
sti
imul
mov
in
push
sub
mov
push
xor
push
and
psrld
fwait
ret
rcrb
mov
lea
mov
ret
test
jp
inc
xchg
sbb
mov
popa
int
mov
leave
cmp
divl
loop
fistpl
js
jg
jg
icebp
jne
enter
aad
mov
cmp
cmp
xchg
dec
lea
pop
fldt
aam
fdiv
xchg
ret
xchg
pushf
into
aad
imul
pop
and
mov
int3
jno
or
lods
fcoml
add
cwtl
mov
cs
pop
mov
add
cmp
mov
daa
sub
mov
fcoms
xor
sbb
mov
fsubr
mov
jbe
mov
adc
jle
fwait
mull
inc
adc
test
ret
pop
pop
mov
or
mov
mov
or
sar
out
push
and
iret
mov
jge
mov
loopne
or
mov
add
cmpsl
and
and
subb
pop
es
jbe
and
ret
loope
or
popl
sbb
adc
pusha
shl
mov
hlt
ret
fists
leave
test
lret
dec
sub
pop
push
dec
lcall
test
or
lahf
mov
sbb
inc
sbb
lcall
in
movsl
or
xor
sahf
mov
jg
jl
jle
inc
loopne
cmp
add
sbb
mov
jle
scas
popa
icebp
cmpsb
push
or
clc
fnstenv
cmp
out
popa
dec
sahf
sbb
add
inc
sub
jne
shrb
stos
adc
jb
out
aam
rolb
out
idivl
outsb
cwtl
addr16
test
movsb
pop
push
mov
outsb
cmp
dec
mov
cmp
inc
addb
aas
fildll
cmpsl
icebp
inc
cmp
lcall
fwait
loope
mov
mov
mov
mov
out
xor
adcb
cmp
push
adc
push
cld
push
lods
cmpsl
in
mov
rol
xor
mov
clc
cmp
or
stc
icebp
jnp
nop
inc
jbe
inc
nop
mov
aad
push
fcomps
arpl
dec
xor
jne
adcl
in
sub
cwtl
add
add
ja
lea
repz
jae
mov
xchg
add
add
insb
mov
iret
mov
jnp
cmp
mov
fs
popf
rcr
cmc
sub
insb
notl
jae
jg
ds
pop
mov
xchg
cmpsl
push
mov
pushl
std
ja
loop
lcall
push
push
mov
iret
sbbb
xor
xchg
pop
popa
or
shl
mov
push
pminsw
adc
scas
fchs
or
stos
out
inc
cmp
push
iret
cmpb
fs
insb
xchg
jns
jo
lock
mov
sbb
and
jns
jae
cmp
aam
pop
mov
pop
out
or
inc
testb
ljmp
fidivl
cmp
sbb
push
test
mov
fstps
and
pop
sub
and
add
adc
into
stos
ja
bound
jle
jb
jmp
cmpsb
xchg
stos
sub
js
mov
dec
or
mov
and
lock
daa
cmp
bound
scas
aaa
out
std
inc
leave
movsb
jmp
cmova
pop
outsb
dec
gs
lcall
gs
jae
pop
lock
inc
dec
lahf
cltd
aad
cmp
sti
inc
fs
xchg
inc
jp
dec
sub
imul
not
je
mov
push
rorb
fildll
es
arpl
lret
mov
mov
lret
int3
imul
and
mov
hlt
mov
call
xchg
xchg
push
repz
push
pop
add
int
imul
xchg
cmp
std
push
jns
sub
jns
pusha
in
js
and
movsl
adc
nop
xor
inc
xchg
add
sub
mov
add
dec
enter
fwait
popa
subl
sub
or
enter
popl
sbb
push
mov
lock
aam
xchg
jp
xchg
jbe
nop
movsl
and
in
mov
ficomps
aaa
imul
cmpsl
cwtl
inc
fisubrs
sbb
cs
inc
adc
aam
movsl
jge
mov
notb
nopl
fwait
imul
jns
inc
and
cmp
divb
loopne,pt
stos
cltd
adc
mov
ret
adc
sub
lods
and
pop
inc
push
inc
out
and
mov
jno
idiv
arpl
mov
inc
cld
dec
fdivrl
leave
shll
pushf
and
xlat
cmpsl
test
sub
les
mov
xchg
into
sub
mov
test
movsl
cltd
cmpsb
es
inc
jecxz
add
jg
mov
ficoms
loopne
lahf
arpl
mov
stos
stos
push
inc
pop
sub
jns
imul
jnp
adc
mov
fwait
repnz
cwtl
cmp
inc
pop
sub
ds
xor
pushf
pop
jns
adc
adc
divb
out
inc
xchg
std
jg
sar
mov
mov
push
xor
jp
push
cmp
roll
cs
or
mov
push
in
dec
das
push
and
mov
ljmp
sub
insb
jns,pt
or
or
push
xor
jecxz
ljmp
mov
dec
xor
popf
stc
mov
fiaddl
inc
lahf
ds
push
dec
mov
sub
loop
test
ja
jb
dec
jge
in
inc
das
sbb
mov
out
add
mov
popf
jle
ss
hlt
and
add
pop
or
addr16
mov
xor
ret
andb
out
ljmp
gs
add
xchg
and
mov
jge
cs
shll
nop
pop
mov
icebp
inc
lahf
xchg
pushf
sbb
push
ja
movsl
lods
in
daa
push
jne
push
mov
cmp
add
cmpsb
xchg
pop
cs
mov
mov
out
cmp
mov
fnstenv
js
mov
loopne
pushf
push
decb
cmp
mov
lods
and
int
jo
mov
fdivrl
cmpsb
leave
fidivrl
jb
cltd
rolb
dec
xor
push
pop
pop
test
adc
sub
shlb
sbb
test
jnp
stos
rclb
inc
add
fbstp
mov
add
pop
sbb
popf
mov
fisttpll
sub
aas
xchg
sar
data16
xor
test
rcrl
xchg
sub
xor
jecxz
ret
fsubrl
shr
arpl
xorb
test
data16
out
dec
aas
pop
inc
loope
cmc
dec
fs
cmp
sbb
and
data16
or
sbb
mov
mov
rcrb
push
nop
popa
lret
in
xchg
hlt
dec
mov
shlb
mov
cmp
lret
pop
lds
dec
pop
cmp
sbb
xor
jne
outsb
and
cltd
jae,pt
gs
mov
and
fistl
or
push
call
mov
xor
cmpsb
orb
sub
out
out
gs
mov
sahf
push
insb
aaa
jnp
mov
and
loop
mov
cmp
mov
fsub
jl
std
add
fsubr
rcrb
dec
xchg
ja
das
xor
cs
sbb
ja
pop
push
jno
cmp
int
stos
push
mov
sbb
xor
push
xlat
sub
filds
mul
sbb
push
add
xor
mov
and
shl
cmp
cli
lret
ljmp
jp
add
insl
ja
and
iret
stc
sahf
push
push
mov
fsubrl
arpl
push
pushf
inc
ret
mov
mov
lea
out
adc
xchg
mov
jle
dec
sub
jae
pavgb
iret
ljmp
adc
loop
out
jb
pop
dec
adc
bound
sbb
sahf
js
xchg
dec
xor
mov
fdivs
sbb
ss
mov
push
cmc
jecxz
adc
mov
stos
inc
sbb
clc
imul
stos
mov
push
dec
dec
xchg
mov
mov
add
inc
ljmp
add
xor
int3
jnp
push
xor
pop
mov
addl
callw
inc
dec
cli
aaa
xor
popa
repnz
andl
mov
sbb
cwtl
jle
inc
je
adc
push
arpl
lcall
lret
jle
lahf
xchg
jle
jns
scas
dec
xchg
ljmp
fcmovnb
jbe
int
outsl
jp
inc
mov
or
lcall
sti
push
adc
jge
sub
lods
inc
jmp
push
cld
push
fbstp
and
jns
inc
pop
mov
imul
inc
add
push
mov
add
es
insb
imul
sbb
mov
addb
sub
dec
xor
lcall
ja
std
jp
ret
jb
decl
test
jg
sub
fsubrs
test
js
inc
std
lods
je
js
mov
movsl
push
scas
adc
mov
fisubl
mov
and
int3
mov
cld
out
hlt
adc
push
pop
lret
dec
inc
xchg
enter
adc
jecxz
dec
sbb
jg
xor
leave
adc
movsl
xchg
or
cmpl
push
icebp
xchg
insb
orl
jo
or
inc
inc
mov
std
and
xchg
jno
mov
test
out
scas
pop
data16
icebp
jns
in
scas
or
dec
adc
in
gs
popa
int3
mov
inc
js
cwtl
test
cmc
dec
jecxz
push
adc
jmp
lock
inc
push
push
lret
pop
popa
test
fiaddl
in
aad
push
dec
aad
insb
pusha
push
cmp
call
mov
jbe
jecxz
sbb
mov
fucomp
les
pop
or
dec
mov
and
mov
repnz
mov
je
jae
call
dec
sbb
rclb
push
test
cwtl
dec
repz
mov
cmp
ljmp
mov
stc
adc
int3
les
cmc
add
xchg
lcall
cld
xchg
xchg
mov
aam
mov
mov
xlat
aaa
pop
mov
fwait
fwait
stos
or
lods
int3
cli
insl
xchg
mov
pusha
ret
pop
out
jns
popa
adc
xchg
adc
push
loop
out
cmc
and
jmp
pop
fcmove
push
and
add
add
pop
mov
jge
cmpsb
xchg
pop
rcrl
xchg
or
xchg
and
mov
cmp
dec
sbb
clc
shl
repnz
sbb
cmc
adc
iret
divb
mov
fwait
test
loop
dec
jnp
fisubl
lea
push
stc
aad
cli
mov
xor
in
scas
and
roll
jmp
fstps
jl
mov
push
cli
arpl
aaa
cmpsb
mov
and
add
adc
cwtl
pop
jg
icebp
jnp
test
xchg
rorl
out
std
mov
push
jnp
cmp
int3
shl
inc
aad
in
mov
or
add
or
in
addr16
jmp
loopne
or
mov
icebp
popa
out
lods
lock
hlt
lods
xor
fwait
fwait
push
fwait
or
inc
lret
int3
adc
push
notl
in
inc
sbbl
jae
jecxz
rcll
push
jp
popa
xchg
push
inc
sub
dec
insl
imul
inc
mov
ja
fisttps
cs
push
les
push
and
clc
loope
push
sbb
fidivl
jmp
cmpsb
xchg
sbb
mov
or
mov
push
xchg
das
stos
inc
dec
leave
fildl
xchg
sub
sbb
enter
or
xchg
dec
test
ljmp
loope
shl
add
cmp
push
jne
movsb
jnp
movb
xor
stos
test
cli
mov
jno
stc
mov
push
cmp
ss
std
daa
push
adc
jp
nop
lods
xchg
in
arpl
ret
mov
imul
mov
and
cld
push
mov
fsubrs
and
pop
lods
cmp
pop
pop
dec
mov
add
or
inc
adcb
stc
ret
daa
movsb
lret
scas
stos
add
mov
pop
test
xchg
mov
outsb
lods
and
inc
mov
in
push
xlat
mov
or
sub
mov
pop
fsubrs
hlt
les
xor
add
dec
testl
ret
out
ret
jnp
pushf
cwtl
sbb
mov
test
xorl
test
fsubs
sub
or
adc
jp
ret
or
loopne
inc
repz
cmp
pop
adc
jmp
stos
pop
in
in
je
jmp
out
xchg
addb
popa
jmp
pop
jno
fucomip
mov
mov
out
jne
adc
nop
scas
jno
scas
decb
pop
shrb
mov
jne
pop
outsb
push
sarl
lcall
xchg
pop
sub
mov
pop
scas
es
lcall
cmp
pop
lea
pop
sub
scas
fucomp
or
pop
sarl
xchg
mov
pop
add
es
xchg
add
rclb
mov
loope
shlb
rorb
pop
and
mov
and
pop
jmp
fcompl
inc
out
cld
lcall
cmp
int3
adc
cmp
sti
lock
adc
xor
cltd
popf
aad
adc
outsl
movsl
pop
decb
sbb
outsb
out
mov
jae
and
add
mov
xchg
add
test
movsb
nop
sub
push
dec
stc
inc
mov
daa
orl
and
pusha
push
repnz
xchg
ja
int3
and
sbb
test
inc
adc
mov
rol
or
cld
xor
add
aas
scas
add
and
push
in
out
pop
jge
pop
addb
and
pop
adc
inc
pop
fs
mov
popf
add
ror
cmpb
adc
push
movsb
xchg
jb
fildll
pop
jnp
repz
nop
out
mov
jb
mov
inc
dec
shll
repz
mov
pusha
lock
adc
aaa
push
ja
dec
mov
leave
pop
cltd
inc
into
test
xchg
push
and
int
xor
pop
mov
movsb
ljmp
sub
js
ds
addr16
push
add
cmp
in
xchg
popa
sbb
pop
add
call
mov
and
inc
jmp
aad
stos
sbb
rorl
fimull
push
pop
cmc
cmpsb
aad
xchg
adc
repz
or
imul
fcoml
or
adc
adc
cld
inc
cmp
pop
mov
stos
mov
add
xchg
mov
xchg
dec
pop
bound
jnp
daa
or
jp
dec
dec
and
xor
mov
dec
mov
xchg
fisttpll
xchg
mov
daa
cmp
jno
jb
sti
jnp
or
mov
inc
rorl
insb
aas
lret
fiaddl
call
inc
jmp
leave
mov
loopne
pop
pusha
dec
and
sti
push
or
ds
jmp
mov
std
xchg
cmc
pusha
imul
mov
pop
mov
pushf
data16
daa
outsl
cld
gs
std
dec
testl
scas
mov
mull
sbbb
jo
adc
push
lock
mov
rcl
subl
jp
sbb
inc
push
pop
mov
arpl
roll
inc
xchg
push
add
sub
xchg
movsl
pop
or
out
repnz
enter
jne
cmp
insl
pop
cmp
leave
shlb
cmpsl
sub
ss
insb
cmp
xchg
lahf
adc
les
jl
cld
testl
adc
mov
ljmp
dec
dec
xchg
lds
fsubl
ss
or
and
sub
fisubl
dec
cltd
push
sub
loop
sbb
cli
ss
jecxz
push
cmp
inc
test
adc
mov
sbb
jb
stos
shlb
iret
lea
inc
cmp
out
inc
jbe
jno
enter
xlat
iret
mov
rorl
and
popa
dec
dec
sbb
sbb
test
jno
stos
repnz
and
int
scas
jae
stos
test
adc
nop
jbe
push
sub
mov
jmp
repnz
test
aas
dec
insl
dec
jmp
inc
push
pop
mov
fisttpll
or
shrb
shrl
mov
jno
loopne
sbb
add
or
mov
xor
enter
dec
inc
dec
lods
pop
mov
push
dec
inc
fildll
or
mov
jmp
xchg
popa
xchg
lods
mov
jne
fs
xor
jnp
xor
xchg
into
sub
popa
mov
sub
fs
mov
lahf
cmp
setae
popf
clc
xchg
movsb
ds
mov
mov
jle
sub
shll
sbb
or
sbb
jno
dec
movsl
jo
lret
cmc
stos
andl
and
cmpb
pop
add
leave
pop
sbb
out
sub
or
push
lret
clc
aad
push
fbld
cwtl
jmp
aam
fs
inc
not
popl
mov
and
push
fsts
adc
mov
xchg
lret
ret
xchg
stos
icebp
mov
ret
enter
pop
jge
xchg
xchg
int
push
imul
dec
cmovb
push
adc
imul
mov
cmp
out
sbb
pushf
and
dec
sti
jno
mov
mov
daa
hlt
repz
mov
or
shrb
and
std
sbb
push
stos
movsb
xor
dec
adc
loope
pop
loope
push
jno
lods
repnz
jp
and
sub
addl
mov
mov
cmp
adc
mov
popf
add
push
pop
out
or
add
outsb
jae
push
cmp
cltd
xchg
insb
push
lea
sub
shrl
out
push
dec
add
in
jnp
imul
in
sbb
cmpsl
test
out
mov
fildl
jg
cmpsl
test
mov
jbe
fistl
repz
bnd
cmpb
jo
les
push
int
mov
xchg
lret
aad
jmp
repnz
or
add
fwait
dec
jnp
je
sub
inc
dec
dec
dec
mov
add
cmp
push
addb
movsb
or
fstpt
std
xchg
imull
in
sub
test
jge
xor
icebp
inc
xchg
sbb
push
in
cmpsl
clc
push
ljmp
push
mov
rcrl
int3
xchg
inc
cmp
jnp
andl
hlt
addr16
pop
mov
hlt
adc
cltd
pop
push
push
mov
pop
mov
pusha
lret
sub
adc
mov
vorps
mov
mov
in
jge
push
jp
xor
inc
jb
pop
inc
imul
cs
cmpsb
push
mov
mov
cli
or
sub
push
decb
int
xchg
ret
pop
ror
aad
lds
in
xor
jb
push
pushw
push
sbb
mov
push
jge
cmp
mov
ret
cmp
repz
in
inc
stos
out
testb
stc
push
adc
pop
es
adc
mov
add
and
fstpt
mov
mov
mov
rcrb
mov
mov
ds
fwait
rorb
and
leave
add
hlt
jbe
je
jbe
mov
add
stc
hlt
lahf
inc
and
cmpsl
rcrl
imul
pop
cmovbe
rcll
aas
jbe
mov
rcrl
adc
or
repnz
imul
jns
dec
js
push
dec
or
leave
sahf
lea
jns
mov
mov
push
sbb
repnz
sub
and
mov
jp
rolb
xchg
cmp
fidivs
jmp
fnsave
xchg
inc
or
pop
popa
inc
sahf
aas
mov
adc
pop
push
sub
std
add
out
vmread
in
in
pop
mov
cltd
out
cmc
call
mov
and
pushf
pop
jmp
sbb
js
pop
int3
cmp
movsb
add
fwait
int3
mov
adc
outsl
cmp
lret
mov
jl
cmp
cld
dec
dec
and
pop
push
lret
fistps
scas
push
cmp
pop
add
divb
mov
mov
in
adc
out
adc
sti
xor
sarb
or
test
dec
popa
ret
mov
dec
dec
bound
imul
adc
sub
mov
shrl
mov
in
jb
in
mov
lcall
int
into
push
and
rorl
add
pop
sbb
movsl
stos
bound
stos
test
bound
stc
leave
push
xor
out
outsl
js
test
lcall
cmp
faddp
rcrb
fs
cmpsb
pushf
or
cmp
scas
sahf
and
imul
rol
add
push
mov
jmp
add
dec
adcl
movsl
inc
or
jge
scas
loope
sbb
add
mov
out
add
mov
xchg
fcmovbe
cmpsl
scas
sbb
push
gs
sub
arpl
sub
shlb
repnz
sub
jle
mov
dec
jmp
pop
jns
adc
jne
add
aam
adcb
pop
ss
xor
and
inc
fucom
add
jb
jge
inc
mov
sub
rdmsr
sbb
xchg
icebp
jmp
dec
add
lret
test
pop
mulb
inc
xchg
adc
pop
xchg
scas
push
xor
pop
leave
dec
outsb
int
inc
jl
cmpsb
dec
xor
nop
lahf
fimuls
pop
mov
and
inc
jae
into
loope
fmull
add
out
sbb
mov
push
jb
ret
xchg
imul
push
js
int3
imul
xor
pop
repz
mov
and
and
jmp
les
xchg
mov
cmp
push
shld
sub
rcll
xor
xchg
inc
jbe
pop
inc
outsl
jne
pushw
aaa
jl
pop
mov
mov
sub
cli
scas
ljmp
jno
ljmp
insb
addb
xchg
push
leave
rorb
mov
cmp
sahf
adc
rolb
roll
mov
or
popf
cmpsl
or
loop,pt
pop
leave
dec
pop
aad
cmp
repz
cmp
idiv
dec
pop
test
std
inc
mov
mov
mov
scas
cmp
pop
lods
inc
popf
pop
je
fs
je
dec
dec
mov
repz
pushf
loop
sub
sbb
pop
scas
outsl
or
dec
jns
enter
popf
lds
xchg
rcrl
push
mov
movl
jb
idiv
outsl
push
and
push
rolb
sub
popa
cwtl
sbb
mov
cmp
arpl
sahf
mov
inc
and
inc
xlat
sub
test
incl
pop
rcll
clc
in
adc
lods
ret
sti
stos
add
xchg
mov
pop
jge
scas
xchg
call
lcall
ja
mov
in
mov
cmp
mov
lods
or
arpl
ss
jae
xor
cmp
jecxz
push
and
push
jo
repz
xlat
icebp
js
lods
xchg
test
push
mov
and
addr16
and
arpl
adc
jmp
cmp
cmp
jno
int
test
cmp
jle
js
push
cli
mov
xchg
loopne
xor
mov
btr
dec
and
mov
fisttpll
or
es
mov
xor
sbb
push
nop
dec
arpl
movsl
sbb
adc
sub
adc
sub
pusha
out
rcll
lock
jo
and
mov
shlb
movswl
repz
les
ror
iret
pop
mov
jg
inc
mov
xchg
aas
inc
pop
inc
jne
mov
int3
je
fistl
jns
js
jmp
ret
sbb
in
orb
pop
fistpll
and
dec
lods
cmp
mov
mov
jp
sarb
jo
pop
adc
into
insb
fwait
mov
lret
addl
fs
fxch
jge
or
into
inc
sahf
jecxz
fidivs
test
and
call
lahf
push
mov
xchg
mov
or
add
addr16
add
scas
and
push
daa
lret
mov
std
orl
lahf
jp
pusha
cmpsb
insb
mov
in
sub
mov
ljmp
iret
loopne
es
cmp
jbe
adc
es
inc
and
jns
push
enter
ret
aam
push
mov
mov
lock
cwtl
adc
mov
int
nop
add
dec
mov
adc
push
popa
xchg
mov
test
movsl
imul
jg
push
xchg
movl
aas
clc
rorl
xor
push
mov
fwait
jb
inc
xor
cmp
out
mov
ljmp
pop
dec
test
mov
pop
fdivrs
outsb
movsl
pop
fisubrs
jb
es
fisubs
dec
sub
push
dec
mov
pop
push
add
iret
or
sarb
add
add
loope
sarb
popf
adc
push
sbb
stos
outsb
sarb
lcall
ljmp
mov
pushf
fistpll
js
or
adc
leave
enter
inc
ss
lods
daa
orl
mov
enterw
sbbb
jno
lret
dec
mov
xchg
pop
test
push
into
shll
mov
les
sub
inc
lret
push
leave
jp
fs
rcrb
sahf
xchg
iret
repnz
jle
insb
xchg
dec
jb
je
or
rolb
pop
bound
insb
shlb
push
jl
cld
dec
ljmp
push
fdivrs
inc
test
mov
divb
repz
xchg
inc
lock
and
xor
xorb
dec
add
xchg
adc
in
incb
stos
mov
lods
imul
adc
les
mov
mov
cmp
add
packssdw
push
and
xchg
sbb
lock
push
push
insb
out
mov
push
jle
cli
inc
pop
cmp
insl
pop
inc
outsl
push
lret
fcmovbe
or
inc
test
pop
loope
mov
aaa
dec
xor
cmp
outsb
xlat
mov
mov
jae
cli
jae
into
lods
dec
int3
mov
mov
pop
ja
ds
dec
and
jb
add
push
ficompl
pop
clc
push
push
hlt
orl
jbe
sub
jo
pop
inc
adc
repz
pop
or
icebp
cmp
into
fs
repnz
enter
lret
insl
inc
jne
lret
movsb
in
test
adc
mov
inc
pop
inc
pop
sbb
mov
sti
ss
cmpsb
or
add
inc
mov
pushf
sti
sbb
jmp
cmc
cmp
and
add
cwtl
jbe
xchg
movsl
es
jo
push
or
add
test
push
cmpsb
or
call
sbb
xchg
and
or
mov
out
sbb
test
fucomip
cmp
stos
cmp
ficoml
mov
aaa
jns
imul
jne
fistl
roll
pop
mov
shlb
sti
jae
int
call
and
push
outsb
mov
mov
insl
lahf
xchg
and
xor
or
sub
cwtl
scas
out
dec
dec
test
ss
xlat
or
fwait
test
mov
ret
mov
insl
jns
fs
test
mov
pushf
cmpsb
dec
leave
leave
inc
push
sbb
mov
add
pop
push
jb
cmpsl
jbe
out
jae
jl
xlat
push
dec
cli
xchg
pop
ret
daa
add
repnz
ds
and
xchg
jecxz
ret
decb
std
inc
pop
loopne
lahf
ss
sahf
lret
lea
icebp
push
mov
mov
xchg
push
xchg
cs
loope
repz
xchg
ret
or
js
bound
cmpsl
loopne
flds
mov
mov
mov
pop
push
mov
adc
and
call
pop
ss
and
leave
das
movsl
xor
ficomps
ljmp
or
fwait
mov
lahf
push
fnstenv
lea
cs
jecxz
xchg
lods
jmp
movsb
icebp
xchg
fsts
lahf
out
cmp
and
mov
jl
inc
inc
adc
mov
xchg
xchg
xor
xchg
inc
push
adc
adc
cmp
sbb
mov
sbb
loopne
and
movsb
mov
pop
mov
push
push
cmp
mov
sbb
push
icebp
adc
xchg
xor
fstps
mov
push
mov
ret
xlat
xchg
push
cmp
shl
decl
jbe
cmp
xchg
push
fs
and
add
cmp
mov
mov
mov
ds
pop
out
pop
mov
inc
pop
mov
push
popf
mov
dec
scas
test
xor
add
cmp
sub
add
dec
jmp
imul
pop
aas
es
inc
aas
out
in
repz
jo
sahf
xor
push
push
cld
jo,pt
pop
das
lret
in
pop
cli
imul
aad
sub
sub
pop
cmpsb
fcmovnbe
popl
sti
inc
jge
ret
xchg
adc
mov
push
lcall
push
xor
sbb
adcb
add
sbb
push
xchg
jmp
pop
ja
cmp
push
pop
mov
pusha
add
cli
push
xchg
push
push
lcall
xor
jle
xor
mov
test
xchg
and
mov
jl
lds
cs
xchg
adc
sbb
dec
mov
sti
js
cmp
enter
shlb
dec
or
loopne
sub
insb
iret
sbb
enter
adc
rorl
inc
xchg
mov
adc
sub
scas
stc
lret
xor
test
mov
jno
and
insb
mov
pushf
sbbb
push
mov
inc
dec
popa
dec
sub
inc
pop
fsubl
aad
insl
mov
push
int
fwait
push
cmp
mov
enter
jecxz
test
lcall
movsb
dec
add
push
movsl
sbb
icebp
or
dec
push
push
imul
rcrl
add
data16
and
jl
cld
adc
daa
leave
xchg
mov
dec
or
shrl
inc
jnp
lods
add
inc
pop
imul
fnsave
cld
mov
xor
shll
popa
mov
sbb
lods
mov
in
int
jns
cli
mov
fsubp
push
push
test
xchg
sub
les
daa
sub
mov
orb
call
xor
cltd
into
pop
fdivrl
ret
or
addr16
lock
adc
dec
mov
divl
out
adc
arpl
fwait
in
cmp
cmp
rcll
ret
ss
dec
mov
push
sbb
sarl
arpl
adc
pop
sarb
test
sub
rclb
inc
cmpb
dec
inc
fldl
rcr
ja
pop
data16
inc
xchg
rorl
imul
or
cltd
outsl
mov
pop
inc
das
pop
mov
jl
je
pop
add
mov
mov
iret
aad
lahf
out
fldt
cld
inc
xor
or
sbb
outsl
sub
and
stos
mov
call
sub
mov
push
ret
xchg
les
and
cmp
out
cmp
push
cmc
andb
loope
std
mov
and
jle
rcll
lcall
add
inc
cltd
ret
aam
lock
scas
adc
mov
mov
pandn
xor
mov
push
stc
iret
jp
sbb
movsl
loop
mov
leave
mov
fsubr
mov
insl
call
aas
pop
ja
dec
pop
fistps
loopne
and
iret
or
ret
ret
jnp
push
adc
jl
mov
fwait
jge
xchg
and
xchg
adc
nop
jecxz
mov
xchg
mov
sahf
xchg
repz
nop
inc
loope
test
jno
nop
addr16
icebp
aam
mov
dec
cltd
imul
mov
mov
ror
pop
loop
sahf
push
xchg
add
lds
adc
pop
scas
fdivrs
repnz
arpl
je
js
mov
add
mov
jle
repz
leave
inc
aam
xchg
outsb
ja
movsl
scas
pop
dec
dec
rcl
xchg
adc
rcr
pop
or
sarl
repz
cmp
popa
test
jbe
mov
push
jno
sbb
dec
pop
testb
mov
fs
or
xchg
fstpt
jge
push
dec
popf
scas
mov
mov
jecxz
shlb
push
stc
dec
pop
add
push
in
lods
xor
in
lret
dec
xor
sbb
add
insl
adc
xchg
fstpl
ja
dec
xorl
xlat
push
repnz
xchg
add
push
xor
add
pop
rcll
push
add
cld
adc
add
xchg
pop
aaa
pop
or
fwait
cwtl
pop
and
xchg
xor
stc
xor
and
xchg
ljmp
cmpsl
ss
pushf
dec
cvtdq2ps
popf
std
cmp
sub
pop
loope
cli
fidivl
pop
js
and
shlb
xchg
add
in
movsb
or
fwait
inc
add
mov
andl
insb
nop
imul
ja
and
adc
xlat
fimuls
sub
xor
xchg
and
xorl
xchg
xchg
mov
and
add
std
mov
cmp
mov
fisttpl
aaa
sbb
cli
js
add
cmpsl
or
mov
push
out
add
mov
xchg
fdivp
jecxz
mov
sbb
add
add
imul
fisubl
lods
test
inc
push
or
jg
loop
ja
dec
jmp
rcl
adc
sbb
push
sbb
xor
mov
adc
push
stos
cmp
xchg
add
notl
mov
add
sub
aas
cld
mov
sub
arpl
rorb
test
clc
gs
fwait
repnz
stc
aas
sub
stos
out
movsl
dec
pop
push
mov
xor
gs
or
fucompp
jl
sbb
in
xor
into
clc
scas
xor
mov
daa
lock
stc
sub
insb
mov
mov
shrb
neg
filds
iret
xor
stos
inc
dec
test
lret
test
jo
lods
sti
jl
sbbl
jbe
sbb
jge
aam
fidivs
pop
or
jo
mov
cmpsl
push
roll
scas
call
pop
cli
pop
xorl
repnz
cmp
cmpsb
call
pop
or
xchg
subl
push
orl
cmc
or
pop
popf
shlb
fbld
adc
ljmp
jmp
mov
add
add
adc
sub
aad
xor
lret
cmp
sub
lahf
pop
jns
dec
inc
cltd
inc
or
movsl
pop
sub
jecxz
dec
mov
sbb
mov
dec
mov
lcall
bnd
jl
ror
xchg
push
bound
xor
hlt
mov
loop
fdivrp
adc
mov
out
xchg
add
sub
imul
jp
sahf
xchg
cld
lea
cli
scas
leave
add
xor
call
cli
popf
and
insl
das
sbb
andl
aad
pushf
out
repz
mov
mov
imul
mov
dec
aam
in
jle
add
daa
inc
sbb
jp
mov
and
cmp
cltd
mov
sarb
mov
cmp
fwait
out
sbb
cmp
fimuls
xchg
mov
jg
mov
push
pop
mov
xchg
leave
std
in
rcrb
fsubs
pop
pop
and
pushf
aas
fsts
test
add
jp
push
adc
xchg
sbb
dec
lcall
scas
lds
jg
inc
jmp
fadds
ja
outsb
popf
mov
push
mov
int
jns
sti
and
jne
or
cmp
mov
mov
test
pop
stos
lock
cmp
js
cmp
mov
enter
and
sar
rolb
push
out
iret
mov
shll
mov
push
add
xlat
xor
out
adc
dec
cmp
cmpsl
or
std
mov
jbe
insb
dec
and
hlt
mov
xor
mov
ret
popa
push
call
dec
mov
xor
jnp
imul
pop
add
mov
cmp
mov
test
stos
mov
mov
push
lcall
sbb
bound
outsb
insl
rol
ja
cwtl
fistl
orl
and
dec
stos
hlt
iret
fnstcw
int
out
pop
mov
fcomp
cltd
nop
cltd
sub
inc
xor
call
xor
inc
test
xchg
aas
incb
cwtl
out
cmp
sbb
pop
add
or
gs
cmp
xchg
call
lock
in
pop
sub
call
mov
inc
mov
inc
sub
call
xchg
or
mov
xlat
sub
xchg
and
insl
les
xchg
cmp
icebp
in
popa
in
fmull
pop
test
push
pop
cmp
pop
mov
enter
pop
cmp
mov
xorb
sbb
sbb
cmpsl
fwait
shrl
jecxz
jge
xchg
add
shrb
inc
push
loop
fmuls
outsl
mov
xor
pop
inc
or
lcall
xchg
in
mov
push
adc
orb
out
sti
adc
mov
add
or
mov
mov
stos
push
shll
inc
push
cmp
and
rcrb
setne
mov
xlat
mov
clc
push
fsubrl
popf
mov
pop
pop
mov
subl
pop
daa
sub
out
sahf
mov
cs
cmp
pop
ljmp
fwait
movsb
or
ljmp
inc
jle
sub
sti
pop
bound
lds
stc
mov
or
jmp
cmp
fiadds
cmpl
pop
mov
ficoms
clc
pop
jne
xchg
lods
jne
bound
push
dec
inc
push
push
popf
movsb
and
sub
mov
lea
push
mov
and
popf
or
aaa
mov
xor
lret
xor
mov
add
jae
icebp
je
mov
mov
fld
jmp
add
scas
or
nop
adc
idivl
std
mov
dec
pop
or
sti
cwtl
scas
das
cwtl
adc
push
fimull
sbb
xor
imul
cmp
ficoml
sub
push
mov
dec
mov
adc
jne
arpl
aad
inc
or
sbb
add
imul
or
int3
stc
sahf
cli
push
jge
jmp
andb
jecxz
mov
data16
xor
aam
inc
hlt
add
popl
cli
bound
or
repz
rolb
fistl
adc
stc
push
into
mov
loop
sub
jns
lea
movsl
sbb
mov
lahf
adc
insl
out
mov
mov
add
fidivrl
icebp
mov
mov
xor
cwtl
sti
jbe
es
jo
mov
cmc
push
push
cmp
and
ror
fsts
lock
jb
jecxz
adc
xchg
mov
cmp
pushl
mov
lods
test
subl
int3
jmp
cmc
xchg
pop
push
les
dec
add
mov
sub
jb
ret
xor
lret
insb
push
mov
xchg
lcall
xlat
jnp
enter
data16
aam
neg
arpl
sbb
fiadds
push
jne
mov
rolb
push
nop
and
fs
lds
and
mov
inc
xor
cld
adc
movsl
loope
xchg
and
out
jnp
in
cmp
popf
cltd
aas
icebp
shrl
push
pushf
mov
mov
stos
push
cli
pop
mov
shll
and
sbb
adc
jp
add
and
ds
inc
popl
xor
inc
xchg
in
push
inc
push
pop
mov
dec
je
and
out
inc
ljmp
pop
rcll
sbb
add
rcrb
inc
jmp
sbbl
lret
lds
push
mov
jo
ss
jmp
cmc
mov
mov
arpl
movsl
out
repnz
sub
xor
sub
movsb
and
mov
jae
jne
push
mov
movsb
cli
loopne
js
xchg
xchg
jmp
dec
int3
adc
or
orb
pop
xor
cmp
sub
test
jne
mov
dec
push
iret
xchg
mov
cmpb
push
sbb
jge
aas
inc
test
mov
inc
lahf
sar
pop
mov
daa
int
cwtl
aas
and
jmp
out
stc
pusha
ds
inc
mov
and
iret
lahf
and
xchg
cltd
pop
push
mov
aaa
mov
or
jnp
aam
mov
arpl
inc
fnsave
cmp
ljmp
add
ds
mov
mov
imul
and
pop
test
pop
flds
ds
test
pop
dec
fistpll
lods
sub
and
js
dec
xor
rcrb
xchg
cmp
jno
push
mov
or
pop
cli
adc
pop
mov
lahf
aam
or
insb
in
pusha
scas
adcl
pushf
mov
mov
std
or
aad
shlb
fisubl
dec
jecxz
or
out
mov
outsl
xlat
je
jmp
imul
adc
mov
jg
nop
cmp
mov
lret
out
gs
ror
push
mov
inc
adc
mov
jae
repz
mov
push
rclb
and
leave
add
jo
and
or
jno
fwait
adc
lret
lods
xor
jp
adc
pusha
fstpt
sub
jnp
mov
sub
gs
paddd
pop
push
jg
pop
mov
xlat
movsb
inc
dec
xchg
fiadds
push
xchg
gs
lcall
das
out
lcall
add
lds
mov
fsubs
push
cmp
xchg
jo
pop
xor
mov
aad
mov
pop
jnp
bound
pop
jbe
and
cmp
sbb
dec
adc
jle
popf
mov
pop
push
cmpsl
sbb
adcb
inc
popa
iret
cmp
insb
mov
jae
sbbb
adc
bnd
jl
lahf
nop
and
in
mov
jge
dec
sbb
scas
add
test
pusha
jmp
call
cmpsb
subb
and
add
adc
stos
ljmp
adc
xchg
jle
push
loope
mov
mov
xor
das
push
push
inc
and
xor
xchg
pop
push
xchg
popf
int3
sti
xchg
loope
mov
aam
xlat
ss
mov
push
insl
and
cmpsl
int3
fcom
add
test
scas
xchg
scas
repz
jp
mov
or
push
mov
adc
pop
movsb
push
jecxz
aam
add
jbe
lcall
add
shll
fnstsw
ret
and
movsb
jns
adc
mov
int
shrb
mov
test
xor
cmpsb
iret
sbb
roll
sbb
fucomip
sbb
push
xor
daa
dec
out
or
dec
jge
icebp
bound
xchg
mull
loop
sub
dec
push
negb
mov
fs
pop
mov
adc
loop
mov
insb
xor
outsb
loopne
jmp
mov
arpl
ljmp
dec
iret
mov
inc
nop
xor
and
dec
xchg
scas
pushf
aam
lods
mov
xlat
adc
cltd
ljmp
sahf
sub
cs
jecxz
mov
hlt
pop
or
mov
push
sti
or
inc
aas
sub
xchg
inc
leave
iret
out
fldcw
push
xchg
leave
xor
imul
adc
sub
mov
pop
iret
shlb
pop
adc
jle
repnz
test
lods
adc
adc
and
scas
daa
inc
cmp
jp
fcmovnu
js
nop
sbb
fdivl
xlat
mov
outsl
pop
jb
mov
movsl
push
push
dec
test
xchg
mov
or
out
xrelease
adc
and
lds
subl
adc
inc
cmp
or
lcall
jb
pop
mov
clc
movsl
xchg
call
jb
bound
inc
test
popa
mov
cmp
ljmp
sub
test
lea
push
jl
mov
mov
and
push
push
cmp
addl
dec
jge
rclb
xor
ret
add
hlt
ja
jae
aam
cs
xor
xchg
je
stc
and
popf
or
cmpsb
pop
les
mov
pusha
cmp
dec
sub
in
sub
adcl
push
xor
pop
int
push
push
dec
or
imul
mov
fidivl
fisttpll
cmpb
mov
call
cltd
push
push
popa
jl
add
sarb
cmpsl
call
adc
movsl
test
jnp
jbe
cmp
xlat
fs
inc
and
addb
and
pushf
xor
cmp
cwtl
stos
or
mov
clc
push
lcall
pop
pop
cmovo
xor
jno
std
pop
mov
xor
in
insl
dec
cmp
xor
movsb
int
pusha
xor
xchg
shrl
bound
xor
out
mov
daa
loop
mov
pop
rol
add
lods
sbb
xlat
jmp
inc
push
mov
aas
ljmp
add
xchg
mov
sub
cvtps2pd
and
and
mov
push
je
iret
imulb
lcall
or
push
pop
push
xchg
addr16
mov
pop
jno
mov
mov
sub
lret
aaa
mov
adc
out
add
dec
es
jae
shrb
clc
mov
jp
test
std
outsb
cmp
jbe
xchg
addr16
fists
xor
sbb
in
pop
lock
fwait
or
mov
or
fs
mov
jnp
dec
push
shll
fcomps
cmpsl
cs
xchg
push
add
aad
sbb
int3
mov
add
ss
inc
icebp
mov
das
jne
dec
and
mov
pop
mov
insl
lcall
xchg
das
xor
insl
adc
cli
shlb
add
fsubrl
bswap
es
add
add
inc
shll
adc
addr16
rolb
inc
insl
mov
or
xchg
xlat
fsubrs
xchg
pop
or
mov
sbb
shrb
pop
mov
xchg
inc
repnz
push
xchg
sbb
mov
push
es
xchg
add
sbb
scas
aas
repnz
fnstsw
pop
jbe
and
adc
cmc
es
lods
loope
inc
inc
push
outsl
repz
mov
lods
lods
mov
test
sub
ljmp
pop
xorl
jo
testl
pop
mov
jns
jle
pop
enter
outsl
clc
in
outsl
xor
lds
leave
mov
xorb
mov
push
data16
jecxz
or
ljmp
push
jns
adc
dec
inc
lods
or
pop
movsl
data16
or
adc
sbb
pushl
cld
stc
cmp
jg
stc
pushf
xchg
addr16
lcall
sub
loopne
sub
mov
jae
popa
mov
and
jns
push
icebp
mov
xchg
fwait
xchg
add
push
push
int3
inc
repnz
divl
mov
cld
in
dec
jl
push
aas
imul
mov
cmp
bt
subl
inc
jecxz
testl
mov
loope
pop
ljmp
imul
pop
into
and
fs
push
pop
jbe
adc
std
cli
scas
mov
mov
lret
int
stos
inc
lcall
adc
sbb
jecxz
and
push
cwtl
pop
nop
mov
xchg
and
push
sbb
xchg
or
xchg
mov
dec
dec
fmuls
sub
out
arpl
stos
sbb
sub
out
xchg
mov
jb
out
inc
fldenv
mov
push
sbb
cmp
jno
inc
icebp
int
popf
cs
ficompl
xlat
cltd
push
xor
dec
sbb
dec
pop
adc
dec
mov
in
out
daa
cmp
daa
cwtl
cmp
sti
inc
mov
lret
enter
into
adcl
ds
je
xchg
loopne
or
inc
idivb
enter
adc
test
inc
out
pop
pushl
mov
flds
or
pop
jl
push
and
pop
sbb
pusha
outsl
ja
sub
jmp
and
cmp
out
into
popf
pop
pop
jg
rorb
daa
mov
scas
jge
bound
push
inc
add
pop
sti
mov
int3
dec
pop
inc
int
mov
and
rcrb
out
in
xor
inc
test
pop
popf
sub
sbb
das
insl
sbb
in
mov
sub
pop
and
mov
adc
dec
shl
and
inc
outsb
xlat
clc
inc
mov
sbb
aad
movl
inc
mov
mov
ret
daa
jl
ret
divl
jb
cli
jo
mov
mov
ret
ss
push
ds
xor
pop
mov
lahf
jo
pop
sahf
mov
aad
pop
test
sbb
adc
fistl
pop
lahf
cmpsb
add
pop
inc
jmp
xor
imul
mov
cmp
rorb
dec
dec
bsr
adc
add
out
add
out
out
mov
cltd
lods
in
adc
mov
pop
adc
addl
scas
cmp
mov
sub
xchg
lahf
in
les
and
mov
je
xorb
mov
lods
sbb
shll
aam
xchg
xor
stc
and
jno
mov
daa
loope
fcmovb
mov
push
mov
cmpsb
testb
cmovbe
and
push
scas
or
adc
in
dec
iret
mov
cmp
insl
stos
dec
rcrb
mov
pop
lahf
data16
shrb
arpl
add
cmpl
fisttpl
lret
mov
in
jmp
imul
sbb
push
scas
cltd
lock
cwtl
mov
xchg
sub
mov
jns
sbb
adc
stc
notl
dec
mov
push
mov
das
xor
insl
into
popa
scas
add
inc
js
lods
std
stos
es
pop
jne
xchg
add
stos
pop
push
test
pop
sub
shrb
gs
ljmp
xchg
jl
test
mov
leave
fistpl
movsl
repz
sbb
cld
sub
cmp
dec
mov
adcl
jge
lods
pop
inc
in
xor
lret
pop
insb
jmp
or
aaa
inc
dec
test
mov
in
out
mov
dec
int
dec
mov
mov
cmpsb
mov
movsb
xchg
ror
popa
int
sub
or
jae
or
lods
cmp
xchg
push
cwtl
mov
subl
dec
xchg
pop
xchg
aam
clc
fsubr
addr16
insl
xchg
ret
or
mov
fsubs
sbb
pop
into
pop
pop
bound
in
push
pop
imull
add
sbb
cmp
pop
cmp
fnstsw
test
dec
sarl
pop
stos
inc
xor
call
jge
push
sbb
add
xorl
jo
dec
ret
nopl
aas
bound
mov
rep
movsb
add
mov
movsl
mov
xchg
xor
sarb
cwtl
mov
mov
popf
loop
sub
xor
ds
dec
cmp
stos
dec
xchg
lcall
not
sbb
sbb
push
js
pushf
inc
xchg
and
pushf
jp
adc
scas
mov
loopne
push
and
nopl
into
popa
stos
jp
data16
pusha
hlt
dec
ret
add
pop
jb
into
or
push
push
inc
rep
daa
jg
icebp
call
imul
sti
sbb
dec
push
in
mov
pusha
mov
shll
cmp
fst
and
cmpsb
lds
dec
daa
xchg
popf
scas
sahf
sub
push
pop
ficoml
call
add
mov
adc
jmp
jl
sbb
in
int3
sub
mov
push
mov
cmp
loopne
adc
ret
or
aam
mov
sti
fldenv
xchg
sbb
jns
shlb
dec
add
shlb
pushf
sbb
dec
and
xchg
adc
dec
and
xor
scas
or
inc
cmpsl
aam
xor
movsb
or
daa
jne
dec
dec
imul
rclb
imul
loop
icebp
stos
xor
jmp
data16
jne
cmpb
lahf
mov
mov
repnz
xchg
pop
stc
imul
jbe
sub
lock
nop
lods
icebp
mov
stos
fsubrs
xor
out
pop
jns
inc
lea
rsqrtps
cmpsl
jle
test
dec
add
pop
lods
pop
xchg
and
mov
into
scas
add
pop
cmp
add
pusha
sbb
aas
push
sar
pop
pop
jle
add
inc
pop
pop
jmp
decl
dec
jg
xor
out
ret
push
and
inc
mov
mov
jae
jmp
loop
push
out
push
lea
pop
xor
sbb
inc
add
push
xchg
ljmp
or
shlb
fs
insb
mov
adc
jno
xchg
test
fstps
mov
mov
mov
adcb
jo
lret
mul
inc
push
adc
mov
lret
stc
pop
xor
mov
outsl
adc
pushf
inc
scas
push
movsl
mov
mov
and
fmulp
sub
push
sub
test
je
xorl
lahf
icebp
adc
cmp
push
pop
in
dec
cmp
cld
test
ficoms
lods
ja
arpl
inc
jle
ret
dec
je
push
dec
inc
movsb
out
add
pusha
shrb
mov
imul
fsts
daa
push
mov
lea
stos
outsl
xchg
stos
mov
aam
jecxz
jae
inc
ss
mov
sbb
ja
push
sbb
gs
shl
add
in
mov
aaa
and
je
shlb
sbb
sahf
and
jne
pop
stos
scas
push
mov
pop
out
cmp
mov
test
or
mov
popf
jbe
test
add
cmc
xchg
in
pusha
enter
es
push
mov
les
arpl
arpl
mov
pop
xchg
popf
in
pop
fiadds
mov
mov
lahf
push
sub
lds
jae
ret
pop
push
ret
stos
fwait
xor
int
fnsave
sarl
and
mov
adc
mov
cvtps2pd
pop
xchg
sbb
or
ja
jnp
jmp
jbe
ffree
push
add
stos
or
cli
leave
inc
scas
fmul
std
js
mov
iret
mov
inc
inc
inc
ss
leave
aaa
jecxz
add
push
pop
jno
mov
mov
pushf
call
inc
jno
sti
shrl
rolb
and
sti
int3
cmp
in
pop
or
mov
decl
xchg
std
adc
pop
adc
and
fsubs
in
ret
sub
xor
mov
mov
xor
aas
hlt
adc
xchg
adc
push
add
or
fwait
rclb
in
and
jle
push
cmpsl
add
mov
jne
push
in
mov
xor
sbb
mov
and
rcrb
cmp
je
mov
aad
test
aam
movsb
push
sub
and
and
scas
fadd
mov
jge
lock
mov
push
pop
push
negb
fdivrl
insb
lock
mov
aam
sub
call
dec
mov
fnstenv
jbe
frstor
xor
adc
push
add
jp
mov
out
push
dec
jb
mov
out
mov
push
dec
cmpl
leave
shrl
jne
and
adc
icebp
adc
gs
cld
cli
or
xor
xchg
sbb
fldl
test
fs
sub
retw
fcom
insl
inc
scas
in
mov
js
das
lahf
insl
ret
arpl
outsl
add
int
xor
adc
mov
rorb
sbb
repnz
dec
mov
roll
xchg
imul
imul
fildll
dec
stc
jo
cltd
or
rclb
dec
dec
xchg
inc
in
jp
push
loop
mov
push
dec
iret
icebp
out
leave
lret
insb
loopne
bound
fs
xor
fisubrs
outsl
psrlq
fisttpl
arpl
jo
xchg
rcl
mov
rcrb
or
aam
mov
notb
stc
shr
or
shll
sub
pop
outsb
mov
sbb
insl
adc
add
pop
push
mov
les
ja
into
aad
add
lock
or
cmc
out
pop
adc
fucomp
ficoms
sbb
sbb
cmp
xchg
ret
inc
jmp
cmp
mov
sub
in
adc
or
inc
test
aas
jae
dec
loope
mov
ds
adc
aaa
sarl
mov
loope
xor
push
outsb
mov
pushl
cli
loope
mov
or
or
pop
jle
mov
divl
jae
mov
and
call
scas
cmp
pop
sbb
pushf
andl
jmp
xor
adcl
push
lods
aad
or
mov
testb
xor
push
mov
sbb
lods
inc
call
cmp
jne
in
out
dec
add
insl
and
out
sub
fcompl
and
mov
mov
or
add
ds
adc
bound
xorl
xchg
push
sub
adcb
ja
in
jmp
stos
sbb
in
xchg
dec
int
testl
cmp
bound
mov
mov
jl
scas
std
movsb
and
bound
fdivrl
jae
sbb
mov
mov
movsl
xchg
push
and
fdiv
xor
shrl
push
loopne
out
arpl
mov
fcoms
stos
cli
aaa
stos
add
iret
add
call
addr16
ja
test
cmp
pop
int3
sbb
jns
dec
mov
sti
std
popa
negl
and
mov
push
inc
push
sbb
jb
xor
jbe
outsl
punpcklwd
push
mov
mov
push
sbb
jp
js
sbb
aam
sbb
xlat
es
jle
push
sub
repnz
or
lods
dec
lods
jno
ficoms
mov
cli
scas
test
push
pop
xor
bnd
lea
lods
mov
cmpsl
jecxz
add
es
jne
pop
repnz
pushf
sub
mov
adc
jbe
bound
subb
sbb
sub
shlb
xchg
xor
push
std
popa
mov
incl
push
imul
movsb
roll
adc
xchg
gs
dec
push
mov
push
dec
aam
imul
loop
push
iret
pop
dec
adc
movsb
imul
push
xchg
or
adc
and
jb
add
dec
xor
les
sahf
add
cltd
adc
loope
xor
xchg
test
out
xor
sbb
pop
fimuls
sahf
cs
cli
stc
scas
sub
addl
mov
mov
adc
cmp
movsb
ret
fildll
sbb
jmp
icebp
sub
push
and
loopne
dec
leave
mov
cltd
iret
inc
push
jne
dec
xchg
loop
fnsave
ja
pop
loopne
sbb
cmp
dec
mov
mov
sub
ljmp
imul
push
pop
mov
jl
inc
ret
nop
or
and
mov
iret
mov
stc
mov
call
adc
shr
xor
xchg
fcmovbe
shll
xchg
iret
js
and
mov
clc
mov
jp
out
dec
xor
aad
dec
inc
scas
dec
or
sbb
scas
mov
and
mov
jb
out
into
stc
xorb
cmpsb
fwait
repz
cs
cwtl
push
mov
outsl
inc
pop
jbe
out
add
sub
mov
adc
les
lds
loope
adc
lds
ret
imul
daa
dec
movsl
popf
loopne
jne
adc
and
cmp
filds
sbb
hlt
xchg
in
mov
mov
ss
sbb
and
xchg
sbb
dec
add
push
inc
adc
jl
xchg
rol
fadd
movsb
imull
leave
mov
pop
filds
clc
rclb
jmp
sbb
inc
cmc
cli
jg
pop
xor
repnz
shrl
xor
cltd
jg
lahf
adc
aad
or
fbld
xor
int3
idivb
add
mov
push
mov
das
mov
add
insb
daa
inc
mov
adc
shld
jae,pt
shl
xchg
add
mov
mov
xchg
sbb
push
dec
mov
fs
notb
adc
insb
inc
or
lods
jno
ret
mov
jns
das
adc
mov
mov
sbb
gs
push
std
push
test
stos
mov
xchg
dec
pop
mov
setl
lea
imul
push
ss
repz
mul
dec
les
lods
movsb
divl
fs
sub
cmc
fdivr
test
mov
int3
test
push
pop
mov
cmpsb
ljmp
pop
adc
incl
xor
sti
in
inc
pop
insl
add
mov
pop
ret
inc
sub
nop
flds
push
fnstenv
jecxz
lds
mov
jns
fbstp
jle
into
or
les
adc
jecxz
clc
es
mov
add
pop
es
cmp
out
adc
bound
je
adc
push
shll
and
nop
loop
cmc
pop
jno
mov
sahf
aas
out
add
mov
jge
cmp
xor
sbb
push
xor
push
and
loope
dec
and
mov
push
hlt
cld
es
out
inc
pusha
pop
loopne
pushf
jno
call
dec
mov
in
bound
imul
in
cmpsl
add
pcmpgtw
dec
mov
xor
fsub
test
fnstenv
sbb
fsubrs
add
xchg
dec
cmp
mov
bound
xchg
addr16
test
sbb
aas
xchg
mov
loop
xor
adcl
add
mov
add
fwait
cmp
cmp
cmpl
clc
mov
add
or
and
loope
mov
sub
dec
sbbl
xchg
mov
lret
lods
in
adc
jmp
inc
sub
ret
mov
jecxz
inc
mov
cmp
sbb
adc
shrb
push
test
xor
lret
inc
dec
or
rcll
popa
xor
jp
icebp
xor
and
imul
cli
enter
or
addl
dec
push
sbb
and
out
jno
out
xchg
xlat
js
push
adc
in
sub
lret
cmpb
aad
shlb
movsb
sub
dec
das
xor
cmp
sbb
push
inc
jne
aad
ss
mov
addb
repz
adc
inc
mov
sahf
mov
fwait
idivl
gs
and
xchg
mov
sbb
adc
xor
sub
xor
sbb
mov
push
dec
dec
inc
jo
fisttps
mov
mov
std
add
and
or
and
lock
pop
aas
dec
xchg
les
mov
into
push
sub
test
subl
and
adc
lcall
or
pop
cmp
mov
xchg
dec
fisubrs
xor
xchg
mov
cli
cmp
jg
sbb
dec
lods
and
jno
push
popa
pop
out
dec
mov
jnp
scas
jp
and
clc
les
dec
sbbl
inc
mov
mov
and
xchg
jle
adc
std
mov
push
mov
andl
dec
bound
inc
std
mov
or
cs
aam
adc
call
icebp
outsl
repz
fst
shl
add
cltd
test
loope
mov
xchg
xchg
popa
lods
and
test
jecxz
pop
or
add
daa
inc
xchg
cli
dec
out
cli
xor
stos
sbb
adc
mov
xor
jno
push
mov
add
clc
cmpsl
test
sbb
add
in
xchg
popa
test
out
out
xlat
mov
pop
rcrl
fildl
inc
es
xor
imul
adc
je
fcomp
and
sub
and
aaa
in
out
push
aad
mov
imul
xchg
leave
out
int
xor
sbb
xlat
mov
mov
xchg
lock
icebp
push
shll
mov
mov
stos
and
in
cmc
inc
in
and
jge
clc
fwait
nop
add
cmp
mov
inc
ret
mov
inc
sbb
data16
movswl
aad
and
mov
lcall
test
dec
adc
sub
push
cmpb
fisttps
mov
js
shl
inc
in
in
mov
mov
cmpsl
popf
fst
cmp
jmp
outsb
add
shlb
scas
mov
lret
stc
ss
ljmp
cmc
adc
lret
das
add
test
test
xchg
movsl
jbe
push
pop
jnp
aas
fiadds
xchg
setbe
scas
mov
sub
cmpsb
xchg
inc
mov
cmpsl
mov
jnp
xchg
pop
movb
lock
mov
popf
repnz
lds
aaa
stos
popl
fnstcw
sub
les
push
add
pop
and
and
jae
sbb
pop
jns
push
ljmp
dec
cmpl
pop
xchg
mov
xor
imul
jl
cmpsl
xchg
add
repz
call
push
and
pop
dec
out
dec
push
loopne
pop
mov
movsb
xor
popf
mov
stc
mov
xor
cmpsb
jno
mov
scas
jae
movsb
cmpsl
ficomps
dec
cltd
jns
ret
mov
movsl
and
clc
push
cmc
jge
shr
dec
movsl
push
imul
cli
icebp
sbb
scas
aad
push
sbbl
jo
sbb
jp
jo
or
divb
fwait
inc
jg
ror
insl
clc
xchg
cmp
dec
mov
xor
and
mov
jle
mov
sub
loope
xchg
jmp
jmp
mov
pop
sub
inc
mov
out
dec
jno
cmc
dec
or
push
sbb
push
sbb
adc
inc
xchg
insb
pusha
dec
mov
int
fisubs
into
xor
cmpb
lret
pusha
pop
movsl
sub
or
or
xlat
mov
jecxz
sbb
jno
sbb
leave
and
rcll
push
mov
ja
pop
adcb
sbb
js
rol
mov
adc
xchg
or
bound
lret
insb
push
xor
cli
jb
outsb
and
lods
add
repnz
into
mov
mov
not
fcompl
inc
adc
bound
jp
jae
jle
add
lret
mov
clc
das
add
pop
das
inc
xlat
sub
test
scas
pop
jno
leave
cmp
rcrl
xlat
insb
popa
cmpsl
add
inc
ret
mov
push
or
jne
inc
xorl
xchg
shll
mov
mov
ja
mov
push
inc
fwait
pusha
jno
aaa
dec
das
push
cmp
call
mov
jecxz
mov
stc
sahf
aam
inc
pop
or
notb
pusha
dec
jmp
cli
jmp
orl
cmp
aam
jl
js
das
cmpsl
cs
sahf
xchg
mov
dec
bnd
insl
addr16
dec
xor
sbb
dec
mov
push
fimull
jp
mov
adc
adc
addr16
mov
dec
inc
outsb
out
lds
int3
out
ret
add
xor
push
push
or
fstpt
loope
pop
and
or
xchg
cmpsl
outsb
out
stos
push
sub
mov
bound
lods
push
add
pop
cmpsl
out
mov
pop
dec
mov
jns
mov
rep
dec
adc
sub
sbb
clc
sub
mov
pop
div
pop
mov
mov
fisttpl
add
pusha
jb
insl
jmp
adc
and
in
loop
mov
les
or
sub
stos
addl
xchg
or
xchg
push
nop
aad
push
in
into
rol
mov
out
lret
lahf
dec
scas
add
popf
push
xchg
jo
mov
sahf
aaa
pop
add
xchg
push
cmp
stos
out
xor
enter
and
test
lahf
lea
sub
insl
orb
cwtl
pop
stos
xchg
sbb
outsl
arpl
mov
or
pop
jns
aam
pop
lods
scas
out
rcll
int
jns
pop
sbb
fidivs
or
and
imul
popl
in
cmp
dec
int3
popf
lods
out
dec
lods
loop
ret
xor
out
outsl
push
push
add
test
cmp
cmp
cmp
shlb
dec
xor
dec
adc
jl
mov
mov
xor
lods
xor
jge
adc
inc
sbb
cld
icebp
scas
sbb
push
movsl
daa
in
idivb
pop
out
bound
ds
or
movsb
clc
aaa
jo
cmp
pop
cwtl
mov
fcmovb
pushw
sti
xchg
aam
inc
lcall
addr16
cs
add
xchg
or
daa
push
out
test
fs
ret
les
fsts
ret
icebp
fidivs
or
je
push
paddsb
stos
mov
cmp
mov
and
and
test
imul
or
pop
or
jae
cmp
mov
or
push
jl
outsb
sub
push
inc
pop
mov
dec
pop
inc
arpl
jne
fbstp
push
xchg
dec
outsl
mov
ret
sub
mov
inc
inc
and
ret
cmpsl
add
mov
jns
aad
push
aas
lcall
push
push
push
xchg
cmpsl
fs
movd
xchg
mov
lods
shll
xor
xor
test
push
jno
push
lret
pop
pop
inc
sub
xchg
pop
cmc
sub
je
orb
jp
add
notb
shlb
popa
or
loop
xchg
mov
xchg
mov
mov
add
arpl
ret
repnz
lds
dec
cmc
xor
and
adc
das
xchg
mov
mov
and
test
sti
stc
jp
lret
enter
aas
cltd
mov
std
mov
mov
repz
push
mov
or
les
lods
movsl
mov
negl
loop
push
ud0
inc
inc
loope
stos
stos
jo
add
jo
cmp
or
mov
call
push
mov
inc
cmp
push
mov
jb
or
pop
push
xorb
inc
dec
pop
insl
sub
in
jbe
mov
clc
cli
cli
dec
sbb
fidivrs
mov
cmp
cwtl
stos
aaa
fimuls
dec
lock
jbe
ljmp
sbb
ss
pop
outsl
es
jge
push
xor
rolb
mov
inc
add
xorb
hlt
xchg
push
jl
mov
shll
mov
dec
adc
cmp
dec
pop
imul
sti
dec
mov
cltd
sub
push
movsb
mov
jb
pop
mov
aam
sbb
pushf
out
lea
mov
push
xchg
adc
and
push
mov
jae
divl
pop
sub
cvtps2pd
int3
push
add
idivl
outsb
mov
loop
xor
fisttps
xor
sahf
popl
repz
shlb
push
mov
pop
cltd
cs
cwtl
cwtl
add
sbb
cwtl
ja
sahf
lret
and
cld
sbb
xlat
scas
xor
sub
mov
adc
pusha
xchg
test
gs
dec
mov
clc
adc
xchg
xchg
test
mov
mov
adc
out
popa
push
jl
or
insb
leave
xchg
fidivrl
lret
ja
push
fidivs
clc
add
scas
xchg
cmp
xchg
cmpsl
or
add
inc
or
into
push
and
dec
push
in
add
cmp
lds
inc
call
dec
cli
imul
push
outsb
pop
imul
mov
das
fimuls
out
pop
xor
mov
mov
arpl
inc
movsl
jbe
and
sbb
into
adc
push
je
xchg
jg
inc
mov
sbb
mov
jmp
out
add
ret
or
adc
xor
sbb
adc
je
fnstcw
mov
and
dec
gs
push
push
jmp
cmp
jmp
dec
rorl
jl
frstor
popa
jae
imul
bound
cmp
mov
dec
into
adc
icebp
lods
mov
hlt
call
cs
pop
arpl
and
cmp
lcall
dec
pushf
pop
loope
xchg
push
add
sub
repnz
cmp
mov
imull
hlt
inc
rcl
inc
bound
cld
ret
vmovhpd
repz
push
inc
iret
mov
xor
stc
shll
test
lret
movb
cmp
and
adc
cmp
mov
icebp
ficompl
push
sub
popf
inc
imul
cmp
adc
es
add
push
xor
mov
in
jbe
pop
ss
and
push
loope
add
and
sbb
insl
lods
bound
shrl
jae
rorb
inc
mov
xor
adc
movl
dec
or
adc
mov
cmc
add
test
jne
roll
cwtl
pop
mov
cs
mov
negl
popa
inc
test
push
hlt
dec
pusha
notl
pop
cmp
fsubrp
dec
mov
push
mov
fsts
je
lods
cmp
adc
dec
jo
sub
cmp
shrl
dec
sub
inc
out
inc
dec
repnz
lea
add
gs
mov
je
xchg
lods
imul
jo
mov
and
pop
lcall
pushf
xor
loope
pop
add
imul
xor
cmp
pusha
stos
js
sbb
mov
cmc
add
sbb
test
and
icebp
jmp
fsubrs
gs
xor
fcomps
aas
int3
mov
adcl
cs
xchg
jnp
mov
aaa
lcall
clc
ljmp
add
xchg
pop
push
jle
push
jo
sub
je
pop
cmp
imul
jecxz
aas
shl
sarl
pop
popa
insl
xor
pop
jecxz
inc
dec
verr
jl
pop
pusha
xchg
xor
cmp
pop
les
dec
js
adc
jge
int
dec
lahf
jge
rol
ljmp
push
jno
cli
test
lods
inc
aaa
loop
aas
mov
inc
dec
jno
call
and
cmp
xchg
lods
mov
es
jae
vmovups
test
cltd
mov
jne
pop
or
lods
add
push
repz
or
mov
mov
aaa
repz
sbb
pushf
pop
cli
xchg
pop
scas
std
xor
xor
cmp
cli
movb
cmpsl
icebp
or
jae
sub
adc
xor
sub
cmp
xlat
dec
sbb
cmp
push
scas
leave
adc
fnstsw
xor
pop
stos
pushf
or
inc
fcmovu
jo
out
je
fcompl
test
imul
ja
out
inc
in
test
xchg
cmp
mov
pop
or
mov
int3
pushf
add
js
mov
loopne
inc
lcall
and
cmp
xlat
je
ja
add
xor
int
sbb
mov
cmp
cmpsw
shlb
mov
inc
popf
xchg
or
shlb
mov
pcmpeqw
lods
addr16
or
adc
add
fistpll
push
jo
movq
imul
or
sbb
push
or
push
ret
int3
jmp
jno
lahf
and
xchg
jbe
add
jl
dec
int
add
and
and
and
das
fldl
mov
or
xor
les
mov
cli
mov
add
pop
mov
clc
or
es
repnz
or
xrstors
jp
in
mov
mov
out
mov
cli
shll
add
subl
mov
cmp
outsb
inc
aaa
xchg
mov
pushf
lret
mov
add
nop
sub
ds
shrb
sbb
push
icebp
push
push
push
repnz
mov
inc
mov
loopne
xor
push
loopne
add
mov
xor
xchg
add
mov
ljmp
jp
mov
mov
and
nop
inc
pop
nop
iret
gs
testl
sub
add
stc
pop
sar
in
lret
mov
lea
mov
fidivrs
mov
lods
enter
xorl
jo
mov
cld
fsubs
fs
dec
mov
push
scas
test
jno
mov
in
outsl
ret
adc
sbb
cmc
add
int
push
test
stos
imul
or
inc
mov
push
and
cmc
aaa
imul
in
test
dec
mov
nop
sarb
in
and
dec
shlb
int3
adc
or
push
dec
xchg
inc
pop
mov
fbstp
fcoms
imul
cmp
lcall
dec
sbb
push
stc
bound
ss
push
lods
xchg
filds
std
fisttpll
pusha
and
push
xchg
adc
mov
repnz
cmc
inc
and
pop
jg
push
rolb
mov
or
mov
push
fs
add
jne
out
scas
cli
sub
xorb
fcomp
adc
pusha
cmp
dec
les
push
sub
pop
mov
ret
mov
lahf
imul
lea
imul
xor
mov
les
aad
mov
sbb
ds
adc
aaa
inc
push
ret
sub
stos
ficompl
push
adc
cmp
outsl
lea
jb
mov
icebp
fistpl
out
insb
cld
movsl
shl
mov
aaa
xrelease
cmp
int3
xchg
jmp
mov
cmp
int
add
loopne
mov
jle
sub
fsub
jmp
pushf
sbb
add
lahf
aaa
fs
flds
mov
adc
dec
insb
stos
mov
popf
aam
popa
push
add
cmp
jae
mov
fdiv
lds
inc
pop
inc
lcall
jb
js
push
imull
stc
lock
add
add
rolb
add
cmpsb
sbb
push
int3
imul
and
gs
fists
loop
mov
shll
mov
or
cmpsb
xchg
je
test
xchg
lahf
mov
mov
test
pop
inc
dec
and
mov
aam
inc
mov
addr16
mov
insb
cwtl
xchg
enter
les
pop
js
icebp
mov
pushf
jns,pt
rcl
and
jmp
sub
cli
int
dec
jl
add
rclb
and
xchg
adc
xor
pop
aam
adc
push
push
cmp
pushf
cmc
pop
sbb
mov
lahf
fsubrl
xor
sub
mov
push
leave
lret
popa
jecxz
push
push
push
jl
into
cs
pusha
adcl
imul
xor
push
dec
outsl
ret
and
mov
mov
pop
add
mov
push
jno
fcmovbe
mov
pop
mov
push
and
enter
adc
dec
inc
ret
inc
scas
out
in
fsubrl
dec
ds
pop
mov
jg
add
test
jp
stc
enter
xor
cmp
and
mov
out
jmp
adc
cmp
cmp
adc
clc
sub
testl
shrl
push
gs
test
shrb
pop
les
iret
adc
jne
je
stos
ret
and
add
add
adc
dec
es
xchg
sub
sti
daa
dec
hlt
iret
orb
pop
test
out
mov
pop
push
stos
test
sub
lods
popf
fildl
stos
stos
mov
fidivrs
clc
pop
jns
mov
xor
push
popf
push
repnz
push
out
sbb
scas
inc
loop
or
and
xchg
push
push
insb
in
cmp
sahf
sbb
lods
cld
cmp
pop
xchg
xor
daa
inc
sti
fwait
mov
push
lcall
dec
cmp
dec
add
xchg
outsb
inc
popa
dec
jp
loopne
cmpsl
rcll
xchg
adc
inc
out
enter
mov
adc
push
out
jne
push
outsb
out
popf
jbe
sub
jo
sbb
popf
les
ftst
stc
cld
xchg
mov
xchg
int
lea
xor
subl
out
cmpsb
xchg
sub
adc
mov
cld
or
nop
push
ret
and
loope
xchg
js
mov
ss
out
xchg
push
add
lods
arpl
sub
push
addr16
data16
jb
fdivrs
inc
out
or
sub
ss
inc
in
jns
dec
lock
push
jb
pop
add
enter
call
lock
pop
fiadds
jmp
into
push
imul
lret
mov
cmp
notb
stos
push
out
sbb
push
lret
cmp
inc
mov
inc
ret
cmp
popa
fwait
jecxz
push
xor
iret
dec
shr
ficomps
mov
xor
out
roll
sub
fwait
je
stos
push
lahf
add
xor
inc
add
xlat
popf
es
xor
fwait
inc
int3
mov
jne
test
mov
pop
loop
mov
cmp
notl
aas
std
das
stos
sbb
data16
push
test
adc
data16
ret
mov
dec
sbb
bound
jmp
lods
push
popa
lods
xchg
add
lahf
ja
repz
daa
scas
xor
mov
dec
ss
test
push
mull
es
and
push
add
clc
push
fwait
sub
ja
rclb
aaa
daa
xor
cmpsl
adc
sub
into
in
or
scas
nop
xor
in
dec
rolb
lahf
cmp
repnz
jnp
or
push
dec
or
ret
xor
fs
out
mov
sub
mov
mov
ja
sub
loop
push
mov
push
pop
push
and
inc
pop
dec
pop
pop
sahf
fistl
fstl
ljmp
repz
lods
addb
mov
ret
mov
mov
test
jae
mov
pop
mov
mov
int3
movsl
in
cmp
push
lea
sub
dec
aas
xchg
pop
jo
dec
fdivrs
inc
bound
ds
mov
lcall
ret
fistl
xchg
fidivs
jg
pop
in
imul
out
dec
mov
rclb
mov
and
sub
stos
lea
sub
cmp
jmp
or
adc
mov
jb
scas
dec
in
aaa
push
xchg
out
ret
pop
fnsave
mov
clc
cld
mov
int
stos
imul
push
movsl
xor
adc
sbb
andl
ljmp
gs
bnd
or
mov
incb
lods
add
inc
ficompl
push
sub
jno
scas
push
mov
lods
push
mov
aam
or
jo
mov
lea
cwtl
push
dec
mov
lock
xchg
insl
sbb
in
push
sub
dec
fistpl
fidivrs
inc
and
aaa
adc
xchg
shll
fildl
push
loope
jle
jns,pt
aad
nop
mov
xor
xorb
lds
xchg
inc
mov
pinsrw
pop
enter
out
jecxz
stos
arpl
int
sub
sbb
or
dec
or
cmp
or
aas
mov
rcrb
cmp
or
lahf
insb
sbb
mov
fadds
int3
mov
pop
mov
jmp
inc
dec
xor
jo
add
pfrcp
stc
testb
mov
cmp
xchg
jnp
dec
mov
jecxz
add
decl
insb
pop
lock
sub
sub
mov
dec
fdivl
add
clc
adc
fwait
xor
icebp
add
gs
jno
imul
lock
lcall
sbb
xchg
pop
pop
adc
hlt
pop
and
mov
mov
dec
xchg
mov
jmp
jbe
pop
lods
xor
imul
in
fcomps
mov
or
xchg
inc
cmp
cwtl
inc
mov
cmpl
out
mov
lods
push
call
or
stc
xor
push
insl
mov
in
movsl
adc
or
divl
push
gs
lea
inc
mov
mov
dec
push
sub
idivb
cmc
or
sbb
stos
into
jmp
mov
hlt
or
imul
mov
mov
xchg
jbe
mov
inc
mov
cmc
mov
ret
sbb
stos
iret
jns
push
ja
test
in
pop
dec
xchg
lcall
arpl
push
push
aaa
xchg
or
push
cld
mov
imull
iret
lea
adc
dec
dec
popa
and
lods
xchg
ror
inc
sbb
rorb
data16
mov
in
shrb
pop
jge
das
add
roll
jae
test
sub
out
fildl
psubw
cld
in
js
ja
jmp
je
shlb
jl
xor
aas
lds
in
jle
nop
fidivs
sub
cmpsl
mov
pop
sub
insb
mov
inc
pop
adcl
add
stc
stos
cmp
push
pop
sahf
pop
test
jle
mov
gs
jae
daa
ret
mov
push
dec
jecxz
hlt
jp
aas
fmuls
fmuls
dec
cld
xchg
fldcw
add
bnd
lock
sbb
mov
icebp
std
call
dec
test
and
add
xchg
sub
xlat
in
cmp
sbb
scas
lcall
mov
xchg
jb
fs
scas
sub
dec
mov
mov
jae
sub
sub
mov
xor
inc
fldl
mov
push
xchg
jbe
jmp
loope
lods
inc
xor
cs
dec
mov
stos
mov
and
jnp
push
inc
sbb
hlt
xchg
and
sbb
popf
mov
dec
jo
lahf
sbb
out
clc
out
jecxz
cmp
jp
movsb
aam
lret
xchg
adc
add
mov
push
or
push
push
subl
push
cld
push
lock
mov
or
push
cmpsb
mov
aaa
popa
movsb
push
cltd
ja
icebp
or
or
xor
mov
mov
or
cs
cmp
jns
ja
pop
cmp
int3
jle
cmp
out
cmp
xchg
jp
pop
in
mov
leave
lods
out
pop
mov
cwtl
aaa
push
pop
insl
dec
dec
test
push
sub
rorb
push
sub
xchg
add
pushf
adc
or
cmp
pop
std
cmpsb
adc
ja
call
outsb
pop
std
test
fmuls
xchg
pop
in
add
mov
ret
aad
andl
mov
mov
jge
push
pusha
subb
mov
cmp
cmp
or
aam
outsb
into
and
in
jno
loop
fimuls
fsubrp
iret
arpl
mov
pop
xchg
and
mov
aas
push
and
les
sarl
or
inc
insl
adcb
xor
fisubrs
ss
nop
mov
in
pop
imul
push
jo
icebp
js
fmuls
insl
mov
sub
xor
jecxz
push
push
pop
insb
shrl
or
icebp
dec
xchg
or
sarl
ret
out
fadd
pop
inc
pop
call
rorl
jl
sbb
xor
lcall
jne
push
in
xchg
outsb
add
divb
imul
outsl
jl
mov
or
mov
xor
loop
ficompl
push
inc
in
lahf
pop
mov
lds
outsb
adc
lahf
jle
mov
fldcw
fldt
mov
xlat
imul
mov
test
aam
mov
clc
ss
or
fsubs
mov
into
stc
insl
sbb
dec
jbe
cli
mov
sub
push
and
mov
rorl
push
addr16
pop
xchg
pop
lahf
adc
rolw
fs
inc
lods
push
test
popf
mov
push
xchg
push
inc
push
cli
rcll
xor
repnz
sti
xchg
cmc
repz
or
push
mov
cli
or
jns
jbe
inc
or
sbb
pop
xchg
jp
or
and
test
add
cld
rcrb
jmp
jle
sbb
dec
adc
and
decl
push
outsl
adc
out
add
sarl
jns
mov
sbb
add
jmp
int3
add
out
dec
ljmp
in
cli
out
sub
jecxz
jo
rorl
adc
nop
stc
ja
fwait
push
inc
rorb
rcl
scas
pusha
in
and
shlb
sysret
sti
stos
stc
cmc
mov
adc
scas
repz
or
enter
cli
das
jl
insb
leave
addr16
add
mov
leave
sub
popf
iret
xor
adc
arpl
mov
shll
pop
dec
push
sub
mov
loopne
push
mov
into
dec
push
push
subl
rolb
jo
inc
inc
cli
lea
rcr
cmpsl
inc
mov
pop
add
ret
divl
scas
mov
xchg
mov
dec
icebp
jp
xlat
das
fwait
enter
jg
mov
pusha
lahf
jecxz
add
adc
pop
lahf
xor
sub
xorl
xor
movsb
add
ffreep
std
fimull
or
movsl
mov
push
hlt
adc
add
scas
jp
xor
ljmp
xchg
fistps
shrb
add
inc
xor
or
pop
inc
out
hlt
movsl
out
add
cmpsl
out
push
rorb
mov
sbb
push
pop
rcll
xor
and
pop
xorl
add
test
movsb
and
and
enter
inc
imul
cltd
pop
cmc
cmpsl
mov
jecxz
mov
shl
les
push
jbe
xchg
outsb
test
lret
fists
fnstsw
adc
adc
ret
or
nop
pop
lret
in
pop
xchg
fdivrs
stc
mov
iret
aas
push
mov
push
jnp
xor
in
pushf
add
mov
lds
cmp
jecxz
divb
dec
inc
or
sub
ret
xchg
nop
push
dec
fnstcw
cli
dec
sar
call
xor
test
scas
or
push
jl
sub
pop
fmul
jg
adc
mov
lds
lods
rclb
xchg
lcall
jae
add
xchg
pusha
jb
adc
dec
outsb
sbb
mov
hlt
adc
pop
mov
jecxz
push
loop
int3
xor
dec
cmp
mov
fstpt
es
popf
mov
jbe
inc
dec
add
sub
js
and
xor
cmc
sbb
out
xor
mov
insb
jnp
das
dec
icebp
jp
xor
or
rcrb
mov
imul
aas
or
pusha
ljmp
xchg
jge
dec
ljmp
icebp
mov
imul
add
mov
add
mov
cmpsb
pop
ds
lods
insb
or
mov
sbb
sub
xor
xorl
pop
adc
je
add
mov
pop
test
add
or
daa
out
mov
nop
sub
cmp
sub
imul
lea
dec
dec
lods
sub
ja
sbb
lea
sub
jmp
lds
cld
in
push
fcoms
inc
loopne
popf
jecxz
inc
xchg
clc
subb
js
clc
nop
pop
ss
fldcw
icebp
int3
mov
insb
mov
iret
movsb
pop
aam
pusha
sbb
lds
pop
shl
xor
int3
cmp
add
inc
aas
hlt
repz
out
imull
mov
icebp
or
push
xor
clc
decl
xchg
sub
pushf
lds
push
arpl
cwtl
dec
ret
pop
inc
loop
test
shlb
mov
in
jno
repnz
pop
in
push
and
fisubs
inc
cmp
insl
cltd
mov
rclb
adc
bound
cmp
inc
dec
cmp
sub
mov
jae
rolb
dec
fsts
pop
xchg
jle
loop
daa
lcall
loope
ret
adc
cmp
aaa
mov
sbbb
pop
ljmp
push
mov
jns
jnp
inc
roll
or
push
adc
outsl
ds
push
and
sti
pop
mov
out
mov
xlat
jp
pop
mov
pop
inc
push
jae
fsubr
add
sub
rolb
pop
bound
or
pushf
icebp
dec
sahf
dec
fidivrl
jb
fdecstp
sbb
xor
movsb
out
bound
sub
in
fldl
adc
pop
jg
and
ret
jae
gs
fdivrp
jno
sbbl
repz
bound
jle
cmp
jo
loope
out
je
push
std
mov
mov
jle
jns
adc
popa
sarb
stos
add
insl
push
cmpl
test
jp
mov
daa
push
jge
cmp
push
mov
int
xchg
ss
dec
movsb
mov
es
jb
cwtl
xchg
mov
mov
test
stc
pop
or
mov
adc
cli
imul
pop
pop
push
std
lods
icebp
ljmp
mov
lahf
cltd
sar
inc
xchg
xchg
sub
xor
or
notb
add
stos
push
push
decl
repz
scas
roll
xor
add
mov
imul
addr16
push
arpl
jecxz
push
adc
stos
outsb
add
push
mov
xchg
and
jns
push
jns
sbb
je
jbe
push
and
mov
ja
jmp
js
xchg
insb
jle
and
cwtl
ds
nop
mov
popf
or
imul
pop
xchg
mov
pop
or
jns
sub
xchg
rorb
pop
sub
mov
inc
inc
sbb
pop
arpl
out
push
cmc
test
je
lcall
mov
dec
inc
jb
and
dec
pop
insl
jecxz
xor
jo
hlt
xchg
sbb
cmp
sub
addr16
es
outsl
mov
int3
into
aaa
sbb
or
aam
repnz
rorb
or
fisubrl
push
or
testb
or
icebp
mov
inc
xchg
dec
mov
add
pushf
xchg
fiaddl
stc
shrl
cmp
adc
test
mov
and
andb
sbb
sub
fidivl
movsb
or
dec
jb
pop
fsubrl
mov
xchg
sub
push
mov
xchg
aad
xor
jbe
push
jno
jne
jl
test
std
movsl
cmpsl
jp
loope
or
sbb
push
cld
push
cmpsb
jle
scas
clc
nop
xlat
bound
jae
jecxz
mov
out
mov
sub
sti
movsb
stos
lock
jbe
or
add
gs
cmpsb
test
mov
xor
lds
int
push
push
fildll
cmp
stos
inc
repz
lods
or
outsl
data16
cmpsb
cs
jmp
dec
fnstcw
xor
hlt
jp
fcmovb
out
fs
xor
lret
push
adc
xchg
cmc
and
mull
loop
sbb
add
mov
loopne
adc
and
sub
push
or
mull
leave
mov
mov
hlt
or
pop
or
add
adc
xor
push
push
ja
jl
mov
cld
mov
std
xchg
fs
mov
shll
out
sbb
sti
addl
adc
sti
es
xor
jnp
mov
jecxz
sub
outsl
cmc
out
arpl
bound
int3
inc
lret
push
in
mov
pushf
lahf
test
push
cmpsl
sbbb
es
xor
and
add
add
ja
inc
push
rcr
sub
jle
jae
mov
or
add
cld
push
pop
mov
repnz
or
cmp
adc
sub
xor
test
add
adc
aas
arpl
push
dec
je
inc
sbb
out
and
jge
mov
popf
pop
mov
xlat
jmp
scas
jle
call
shlb
mov
out
push
xor
mov
enter
or
push
in
nop
int3
lea
ss
sbb
jmp
adc
jo
mov
xor
dec
lds
mov
popa
jle
dec
negl
fwait
mov
testb
jl
movsl
xchg
cmpsl
roll
mov
sbb
stos
sub
test
mov
pushf
fcomps
and
shlb
sbb
dec
js
and
leave
scas
sti
sbb
and
aaa
shlb
imul
and
outsb
lods
add
inc
adc
jbe
fisttps
inc
je
out
pop
jbe
adc
cli
gs
push
insb
mov
sti
cmc
out
adc
ja
movb
cmpsl
jle
jns
push
hlt
mov
and
test
pop
cmp
fnstenv
outsl
sbb
imul
cmp
or
xlat
ja
mov
js
fdivs
out
imul
bound
xor
dec
pop
lret
push
fldcw
stc
and
or
mov
jmp
push
and
lea
test
in
addr16
inc
popa
pop
fwait
push
lock
jno
movsl
pushf
ss
jl
popa
ds
adc
inc
lcall
adc
add
xlat
popf
lods
insb
test
jmp
xchg
jnp
xor
sub
sub
aaa
push
aad
fwait
xchg
xchg
push
psrld
mov
fcomi
shrl
pushf
inc
dec
adc
in
aaa
fwait
mov
xchg
loope
das
jb
and
mov
inc
rcl
stos
dec
xchg
pop
rcrl
insl
stc
jno
ja
and
leave
dec
cmp
aam
test
sbb
xchg
pushf
mov
jae
and
mov
add
jmp
or
inc
and
std
daa
scas
mov
mov
xchg
pop
lcall
dec
mov
pop
adc
adc
andl
rorl
xor
sbb
push
cli
scas
xor
popf
or
fs
jns
jg
or
cmp
inc
dec
lahf
movsb
push
pop
xchg
lock
mov
cltd
std
sbb
dec
lcall
iret
xor
out
mov
fldl
jmp
xor
adc
test
pop
loop
jae
test
add
test
out
mov
icebp
push
mov
pop
test
push
mov
das
lods
push
pushf
xchg
insl
add
lret
sub
mov
sti
data16
fmulp
gs
or
rcll
insl
pop
push
adc
inc
cmpsl
scas
or
cltd
lahf
clc
xlat
loopne
fadd
or
cld
xor
mov
push
pop
or
or
sbb
dec
xlat
cmpsw
add
fwait
and
xor
dec
outsl
mov
jo
les
dec
jo
adc
js
out
mov
fcoms
sbb
aam
push
jne
add
sub
ret
mov
push
sub
lods
leave
mov
adc
test
sub
add
gs
xor
push
jbe
int3
das
sbb
xchg
dec
cmp
sbb
clc
fimull
dec
mov
or
loope
movsl
xchg
shl
lret
movsb
jg
pop
pop
and
mov
push
sbb
js
add
cmp
shlb
dec
mov
outsl
jmp
inc
dec
int
fmul
inc
dec
lcall
outsl
nop
xchg
lods
subl
dec
push
inc
imul
scas
inc
sub
pop
mov
sub
icebp
jae
out
outsb
sar
enter
mov
xor
popf
add
add
cmpsl
testb
jbe
mov
fdivrl
sar
jg
cld
in
stc
call
push
std
cmp
test
sbb
push
cltd
ret
xchg
arpl
movsb
mov
xchg
adc
std
inc
xchg
outsb
inc
adc
cltd
inc
cmp
dec
add
ret
push
fnstenv
inc
sbb
adc
scas
in
mov
sbb
pop
jno
mov
push
scas
iret
inc
call
imul
xor
mov
data16
jnp
fcmovbe
cmp
data16
add
push
leave
jbe
mov
mov
sahf
movsl
inc
jle
adc
shrl
insb
mov
test
addr16
dec
push
inc
sbb
clc
mov
or
mov
or
sti
ds
push
ret
jl
stos
js
ror
adc
enter
or
pop
push
mov
mov
lret
lea
in
test
std
loopne
and
outsb
xchg
push
sbb
mov
pop
ljmp
aas
stos
bound
inc
into
ds
lock
mov
adc
push
or
xchg
out
es
add
test
push
inc
dec
and
xchg
or
xor
add
insb
test
call
fmul
and
pop
add
pushf
xlat
in
jecxz
pop
out
aam
int3
jbe
push
gs
inc
add
repz
pop
lds
jecxz
cmp
add
fisttps
fwait
in
xor
xchg
das
fisttpll
mov
mov
push
bt
stos
test
sub
repz
outsl
inc
jb
pop
hlt
aad
adc
dec
jo
jnp
sbbl
dec
jns
xchg
std
or
add
shl
mov
test
cltd
xor
ljmp
dec
mov
and
aad
fdivs
pop
or
mov
pop
cmp
sbb
adc
xchg
xor
cmpsb
cmpsl
pop
mov
inc
mov
js
adc
xor
inc
ret
sbb
in
enter
push
mov
movsl
aaa
int
cld
xchg
mov
or
xlat
call
ljmp
and
dec
mov
cli
cmp
roll
sub
cmp
mov
stos
sbb
sub
lret
sbb
dec
mov
into
fs
mov
push
add
mov
int
or
mov
subb
leave
in
mov
and
inc
pop
lret
pusha
mov
mov
add
push
xor
xor
push
testb
mov
aaa
fadds
xor
fwait
jp
enter
sub
into
nop
lret
movsb
cli
adc
sti
js
lock
stc
rcll
mov
or
push
pop
pop
mov
inc
sub
fcoms
push
mov
pop
loopne
fcmovne
sti
fwait
stos
adc
xchg
je
fadd
cmp
roll
sub
sbb
pop
mov
test
xchg
and
cmp
sub
mov
jge
outsl
sbb
jg
inc
roll
pop
shr
add
repz
repnz
fisttpl
cmpsb
jae
mov
out
jg
aad
add
pop
pusha
jnp
gs
call
add
das
js
cmp
arpl
aad
add
xchg
dec
and
inc
sti
imul
mov
mov
fldenv
shrl
xchg
pop
or
push
adc
push
icebp
push
mov
lret
nop
lcall
jbe
xchg
adc
hlt
addr16
outsb
push
jg
frstor
divb
andb
mov
scas
inc
hlt
mov
scas
pop
pop
divb
pop
xor
popf
dec
out
shl
mov
lock
es
nop
es
bound
aaa
mov
orb
inc
int
inc
pushl
lahf
scas
icebp
mov
imul
int3
mov
shrb
xrelease
pusha
ror
insb
inc
shrb
sahf
adc
sbb
mov
enter
arpl
jp
and
out
pop
movsl
push
imul
call
cmp
or
aaa
lods
jge
xchg
popa
andb
cltd
popf
pop
or
fwait
mov
inc
add
mov
xor
insl
ficoml
add
ljmp
lods
test
cmp
push
inc
stc
xchg
jecxz
cmp
out
imul
push
push
mov
sub
adc
pusha
out
pop
and
pop
jo
daa
mov
inc
sbb
out
cmp
jae
push
jae
xchg
mov
pop
mov
pusha
adc
fisttpll
push
pop
lret
xchg
pop
jmp
inc
std
dec
int3
ret
inc
inc
mov
jb
dec
cmpb
cld
pop
lret
mov
popf
imul
sahf
mov
or
adc
cs
inc
dec
jle
mov
lock
test
jp
leave
andl
test
and
nop
daa
cmpsl
dec
lds
add
or
jge
pushf
addr16
pop
dec
aaa
in
mov
inc
mov
cmp
pushf
mov
and
ds
fcmovnu
xchg
lock
xchg
mov
and
jno
cmc
jge
jge
mov
fmull
xor
test
mov
inc
xchg
es
and
add
add
test
sub
sbb
fs
add
movsb
roll
dec
arpl
pop
and
test
sub
adc
cmp
mov
outsl
pop
jb
adc
movsb
dec
mov
push
fwait
xchg
pop
cld
add
shll
push
lahf
sub
sbb
push
ret
data16
imul
xor
loop
xchg
adc
psubb
int3
mov
mov
enter
xchg
inc
sub
insb
adc
xchg
sbb
test
add
cmp
js
movsb
call
ficompl
dec
into
push
xor
insl
es
cmp
pop
and
je
sbb
mov
push
cmp
rcr
int3
push
je
pushf
stos
mov
adc
insl
repz
stos
in
mov
sub
pop
cli
jnp
popa
ja
jno
xchg
xor
cwtl
push
add
test
sub
jb
in
loop
imul
add
adc
inc
xchg
fldcw
cs
xchg
ss
jle
sar
jbe
lods
aad
fistpll
push
jecxz
cs
xchg
add
outsb
cmpsl
in
dec
and
movsl
xchg
dec
fdivs
adc
cmp
stos
cmp
js
pop
push
in
in
pop
adc
xor
pop
imul
das
outsb
inc
movsb
mov
mov
outsb
sahf
xchg
cmp
dec
scas
fdiv
inc
push
jae
adc
mov
repnz
ret
icebp
stos
jecxz
leave
es
xchg
rcr
jno
xchg
xchg
mov
test
cmc
jnp
ret
gs
cmp
push
lods
jno
mov
sub
fsts
push
and
pusha
adc
je
ljmp
in
movsb
inc
arpl
loop
sub
jl
or
pop
xchg
movsl
sub
mov
arpl
jmp
out
and
stos
jne
sub
push
fstl
mov
and
xor
add
push
pop
add
add
addr16
sub
xor
loopne
cmp
pop
cmp
fnstenv
mov
push
add
mov
ret
lret
negb
clc
shrl
cmp
stos
mov
mov
inc
sbb
les
cmpsl
rorl
jbe
or
and
jmp
or
add
sub
mov
bnd
scas
add
xchg
lcall
push
mov
jl
xor
xor
shlb
adc
hlt
xchg
mov
mov
loop
lahf
jb
dec
adc
int3
cmp
pop
xchg
jmp
xchg
rol
xchg
inc
insb
cmp
shrl
push
jge
push
adc
icebp
inc
es
inc
movsb
notl
add
divb
xchg
sub
nop
scas
shr
mov
push
daa
aam
xor
std
divl
dec
xchg
mov
cmp
xchg
inc
cmp
call
add
sti
aaa
dec
mov
popf
push
je,pt
sarb
loope
lcall
inc
pop
jge
sbb
add
inc
push
jno
mov
inc
cmp
lcall
dec
in
ficoms
mov
test
pusha
rcrb
lods
bound
pop
sbb
out
xchg
js
lods
lcall
push
push
inc
pop
mov
inc
pop
sbb
mov
or
fidivs
mov
test
and
fwait
pop
and
xchg
out
testb
das
jnp
fmul
and
jbe
xor
sub
cmp
ficomps
sub
mov
rorb
mov
movsb
imul
fwait
mov
inc
pop
jmp
and
jp
js
and
das
mov
arpl
inc
push
cmpsb
push
stc
lea
dec
dec
xchg
das
and
sbb
cmp
les
int
lods
test
mov
xchg
mov
adc
xor
xchg
sbb
int3
btl
and
ss
add
rolb
pop
or
or
inc
or
setne
das
lods
cltd
iret
mov
xchg
mov
aad
or
fcom
mov
lea
push
outsl
jbe
in
sbb
movsl
pop
and
nop
mov
cmp
leave
inc
insb
mov
mov
adc
clc
sub
xchg
and
les
dec
pop
ljmp
or
aam
out
repnz
roll
sbb
mov
fs
sbb
add
jge
addl
mov
pop
push
xlat
shlb
xchg
xchg
pushl
pop
movsl
fmuls
sub
lds
out
xor
xchg
nop
xor
cs
add
xchg
push
push
pop
stc
mov
sahf
pushf
push
inc
cmp
pop
test
mov
mov
or
inc
fstpl
mov
cld
setnp
xchg
fildll
in
dec
mov
mov
es
ret
ja
loop
adc
cmp
sarb
push
out
fdivp
cs
leave
clc
sahf
mov
xor
and
jne
inc
shll
mov
mov
push
push
sbb
add
sbb
push
mov
mov
lahf
lds
push
adc
stos
in
ret
sbb
ja
lret
fists
test
inc
nop
bound
das
xor
push
stos
cs
pop
jecxz
mov
jnp
mov
add
jne
and
or
mov
jb
rolb
or
xchg
jno
jno
aas
adc
xchg
addl
stc
sub
mov
jmp
shlb
cmp
push
shl
mov
insb
or
in
dec
nop
les
jne
dec
or
lods
test
fmul
fs
sub
pop
mov
pushf
out
iret
fdivs
out
les
scas
sbb
pop
push
out
hlt
es
pop
cs
scas
push
sbb
cmp
fwait
mov
or
fmul
push
fmull
dec
loope
dec
cmp
cmc
xor
push
clc
pop
mov
es
aam
fisttps
js
adc
jmp
xchg
adc
mov
inc
addl
push
cmpsl
iret
leave
inc
add
jge
jne
sbb
divl
dec
popf
push
aas
cltd
inc
cmp
scas
pop
jg
repnz
fsubrs
or
andl
fs
push
push
or
pop
dec
lods
rorb
adc
cmpsl
inc
and
jecxz
pop
inc
aas
fs
clc
inc
sbb
jp
je
sub
outsl
push
inc
cmp
and
or
sbb
mov
pop
dec
pop
pop
icebp
aad
or
fsubrs
addr16
std
insl
adc
aas
fisttps
addr16
in
jno
stos
xchg
xor
fstpl
sub
add
sbb
pop
add
js
mov
inc
mov
sbb
push
inc
repnz
gs
sub
test
jmp
push
cmp
int
xchg
mov
insb
mov
movb
jg
and
mov
sbb
xchg
dec
push
fnclex
rclb
cmpsb
push
dec
push
and
push
jae
aad
and
inc
dec
js
mov
inc
or
stos
notl
push
aaa
out
mov
fdivrl
jns
movsb
das
mov
call
mov
mov
inc
mov
sub
add
push
mov
push
mov
sub
jo
pop
push
cs
push
pop
push
leave
push
push
stos
mov
notb
test
cmpsb
cmpsb
and
fimull
mov
int
ret
int
or
push
dec
mov
sbb
int3
cli
lret
or
pusha
pop
push
jo
jmp
sbb
fs
xchg
nop
jo
mov
push
pushf
cltd
call
push
xchg
leave
imul
dec
xor
xchg
pop
scas
stos
ss
nop
mov
push
xchg
icebp
sti
jae
dec
fcoms
xor
cmp
and
lahf
fmull
jecxz
popa
xchg
xor
lds
sbb
mov
in
jb
cli
loopne
mov
stc
js
ja
inc
mov
mov
movb
mov
xor
shlb
adc
jg
in
mov
xchg
sub
xchg
fs
sub
filds
inc
mov
pop
int3
mov
and
ljmp
test
mov
push
xor
jle
dec
adc
js
inc
xor
push
sbb
movsl
add
ror
sbb
jo
jnp
sbb
loope
imulb
nop
lcall
xchg
mov
mov
rclb
pop
out
mov
adc
imul
fpatan
push
or
fstpl
lahf
pusha
sub
xchg
jecxz
mov
into
js
pop
xchg
in
and
mov
in
sub
xor
mov
dec
movsb
std
xchg
fldcw
clc
loop
out
out
imul
inc
mov
lret
stos
xlat
jmp
cmpb
pop
sbb
dec
roll
scas
cmp
test
je
or
iret
lret
in
stos
rcpps
lock
nop
icebp
jno
mov
inc
ud1
pop
dec
ja
or
data16
rcrb
enter
loopne
imul
loopne
loope
and
je
les
dec
push
rclb
inc
data16
loopne
mov
ja
mov
sub
pop
stos
jae
push
mov
fdiv
xor
je
loope
cmp
inc
mov
pushf
out
cmp
jns
andb
lods
mov
mov
sbb
mov
call
popf
popl
loope
push
xchg
adc
pop
push
mov
insl
jmp
into
jne
jmp
movsb
mov
imul
out
je
lahf
mov
aad
test
sub
std
add
cmpsb
ljmp
cli
repz
popf
shlb
pop
repz
push
pop
jne
jl
out
sub
incl
inc
cld
test
mov
gs
sbb
or
iret
xor
push
call
mov
out
pusha
pop
pop
jo
adc
into
adc
movsl
xlat
and
lods
scas
xchg
movsb
adc
adc
in
push
ja
push
push
mov
out
lret
pop
movsl
mov
sbb
or
jmp
mov
into
pop
fcmovnbe
fwait
jno
sbb
insl
inc
and
test
fwait
out
mov
daa
push
lret
fisubs
jg
cmpsb
nop
push
mov
push
adc
imull
push
imul
cmpsl
xchg
int3
outsb
out
imul
sbb
mov
push
push
lea
mov
std
xchg
dec
lods
sbb
rcrb
cmp
mov
sbb
aam
inc
add
cmp
or
iret
xlat
push
jae
aad
or
cld
fisttpll
jge
push
insl
dec
sti
in
into
out
pushf
inc
pushf
cmp
pop
scas
push
sti
dec
iret
and
pop
iret
inc
fidivrl
imul
cwtl
testb
push
int3
les
aas
lds
xchg
leave
fdivrl
es
jl
sub
ds
xchg
outsl
mov
add
cltd
movsb
inc
mov
pop
xchg
ss
add
add
push
sbb
mov
pop
ljmp
mov
fisubrs
ljmp
jno
inc
into
or
mov
fdivp
imul
jmp
int
fiadds
cmp
aas
push
cmp
lret
push
lea
jnp
ja
ret
data16
rcrb
popf
into
sbb
mov
lahf
cmpsl
mov
dec
cmp
aam
repz
sub
mov
orb
push
pop
adc
daa
ljmp
adc
in
add
das
jnp
les
sbb
pcmpgtb
idiv
fistl
rolb
pop
sub
xor
pop
xor
leave
add
mov
sbb
xor
push
out
shll
and
insb
lods
push
and
push
jmp
sub
adc
jnp
std
ja
mov
cmp
dec
adc
add
in
test
mov
inc
jbe
loope
std
sub
scas
in
adc
stos
sti
lret
out
xchg
scas
add
shll
or
jmp
dec
pop
mov
cmp
jl
pop
cmc
es
mov
xchg
je
inc
ds
into
js
pop
cld
mov
rcr
fsub
cs
lret
jns
insl
test
out
into
pop
dec
jbe
rclb
xor
mov
cmp
push
out
add
mov
fimuls
sbbb
mov
pushf
filds
loopne
fcomp
sahf
mov
xchg
xchg
pop
inc
cmp
jmp
jp
orb
adc
xchg
fsubr
adc
cltd
mov
sub
mov
push
call
pop
in
sub
scas
push
xor
inc
stos
mov
ds
int3
jmp
mov
jp
push
data16
cs
nop
das
jne
cmp
les
cltd
mov
cli
mov
mov
inc
xor
sahf
jbe
leave
sub
pop
pusha
jg
lcall
mov
das
out
nop
jmp
mov
push
data16
rorl
xchg
inc
mov
cmp
add
cli
push
lret
das
jg
sar
clc
xchg
cltd
adc
outsl
shl
iret
jecxz
lret
inc
or
push
stos
out
jmp
xor
movl
push
js,pt
lret
xchg
ret
enter
aaa
fbld
inc
push
inc
fwait
jl
or
pop
rorl
cld
cltd
cmp
and
jle
sbb
sbb
fwait
ss
or
int3
mov
ret
xchg
fadds
addr16
xchg
loope
adc
pushf
and
aam
int3
jae
popa
les
lahf
xlat
dec
xor
jnp
jmp
inc
adc
mov
inc
cmp
aad
push
pop
leave
cmp
pop
enter
icebp
xchg
bound
mov
insb
test
or
lret
xlat
fst
xchg
movsb
mov
dec
rcr
in
push
stos
sub
orl
mov
lods
test
mov
sbb
int
sbb
xchg
iret
testb
insl
int
mov
shll
pop
xlat
cs
iret
jo
std
sti
movsb
inc
sbb
mov
xchg
dec
adc
out
jno
lds
or
mov
pop
ret
sub
mov
aaa
shrb
ret
cmp
mov
dec
jnp
ljmp
mov
outsb
cwtl
in
jne
xor
cmp
dec
xchg
xchg
jbe
leave
inc
pop
stos
test
stos
mov
jns
adc
movsl
mov
popf
fdivs
xor
vpsubsw
insl
repz
les
push
cmp
push
hlt
loope
insb
mov
mov
pop
mov
dec
sbb
mov
cmpsb
sub
pop
in
dec
scas
das
pushf
fmulp
mov
dec
loop
test
xor
pushf
js
leave
pop
scas
xchg
in
in
jp
mov
or
mov
or
sbb
adc
fs
push
mov
add
pop
jmp
xchg
push
and
shrl
xor
add
jbe
xchg
cmp
enter
sub
push
jns
jno
fs
adc
pusha
mov
or
push
mov
mov
and
test
ficomps
sbb
xlat
cmp
iret
or
icebp
dec
xlat
xchg
dec
cmp
xor
mov
push
testl
lret
adc
test
loop
lea
shrl
lock
jae
or
xor
nop
xchg
stos
lea
lock
inc
add
sub
xchg
sub
ret
pop
ficoml
xor
cmp
and
ret
stos
pop
loope
mov
into
in
mov
scas
pop
sbb
xor
mov
or
adc
jo
sbb
gs
repnz
addr16
dec
dec
int3
loop
mov
xchg
fsts
loopne
outsb
add
mov
lcall
mov
mov
arpl
sbb
pop
gs
adc
mov
daa
mov
test
or
in
mov
sti
push
push
mov
lret
push
sub
repz
lcall
mov
mov
pusha
inc
adc
lcall
fsubrs
mov
nop
movsb
test
inc
pop
test
xor
or
add
ret
and
inc
es
push
ljmp
lcall
cmp
mov
fstps
push
mov
add
xchg
rorl
imul
loop
sahf
stc
jbe
ficompl
mov
loopne
movsb
pop
and
int
popa
into
in
lret
xchg
mov
push
inc
mov
stc
fadds
int
imul
sbb
out
push
inc
mov
mov
sub
xchg
out
pop
lahf
or
dec
aam
std
sub
in
stc
loope
sbb
insl
cmp
pop
pop
hlt
or
and
pop
sub
popa
add
fbld
sahf
mov
ljmp
inc
aaa
fcoms
push
adc
sbb
jmp
mov
ss
bswap
jno
ja
les
mov
add
jb
jae
inc
out
and
in
cmpl
add
loopne
movsb
loopne
popf
jo
iret
dec
enter
fstl
mov
mov
xchg
lods
xor
in
jg
pop
fisubrs
dec
movsl
int
xchg
out
sub
add
cmp
repz
popf
das
daa
js
sub
mov
mov
aam
sbb
out
mov
ja
ljmp
repz
xchg
inc
mov
mov
mov
inc
in
xor
movl
aas
das
sbb
push
jno
xchg
push
xchg
inc
or
push
rcl
add
sahf
adc
ds
add
jbe
and
jbe
iret
rorb
in
or
pop
test
mov
pop
mov
and
mov
xchg
and
push
pop
adc
ljmp
cmp
loopne
jb
icebp
or
into
add
cld
push
adc
adcl
out
jnp
dec
xchg
cli
push
jb
adc
push
adc
jle
cmpsb
and
sbb
loopne
dec
hlt
gs
push
cmpsl
adc
jmp
jge
jb
lcall
sbb
popa
or
mov
and
jl
cld
popl
sbb
mov
push
stc
xor
xor
fs
pop
sub
pop
mov
fsubrs
cli
cwtl
adc
lahf
sub
cld
or
xchg
ficoml
jno
stos
popf
mov
sbb
mov
xchg
add
or
pop
cld
inc
decl
cmp
and
ja
sahf
les
popf
mov
rorl
pop
popf
loope
push
mov
sbb
fwait
mov
pop
mov
add
push
dec
dec
pop
sarb
add
xor
push
mov
scas
mov
shl
ljmp
in
sarl
cmp
inc
repnz
shl
in
dec
lcall
cmp
push
clc
outsb
movsl
cwtl
out
fldt
cmc
ja
ljmp
adc
add
and
jne
rclb
jge
mov
push
xchg
testl
fdivrs
aas
sti
cmp
ret
scas
xchg
fcomps
xchg
icebp
aam
sbb
aas
int3
int
push
add
mov
jb
cmp
ja
clc
inc
imul
hlt
popa
fwait
adc
out
mov
rclb
call
and
and
add
xchg
adc
or
sbb
mov
xchg
jae
sarb
add
jl
std
mov
inc
in
push
cld
movsl
jecxz
ja
daa
mov
rorb
jg
scas
ret
fnstsw
pop
or
jg
inc
pushf
insb
ret
lahf
pop
lock
mov
or
cli
test
mov
xchg
cmp
shrl
scas
and
mov
xchg
cmp
ret
adc
addr16
sub
xchg
mov
enter
push
adc
adc
pop
cmp
mov
xchg
pop
push
dec
add
gs
inc
pop
repnz
xchg
mov
shll
lods
lods
insb
sub
fisubrs
jne
outsl
xlat
ret
adc
sbb
inc
xchg
adc
sahf
cmp
pop
les
stos
cltd
xor
jp
ja
inc
jbe
cmp
subl
inc
sahf
lcall
pop
repnz
sub
jecxz
dec
scas
fsubr
push
out
sbb
mov
pop
daa
subl
cmc
jns
dec
jle
pop
push
pop
js
mov
je
and
or
or
pop
je
lahf
call
in
repnz
sbb
pop
ljmp
add
aaa
pushl
scas
cmc
and
aas
mov
inc
sub
push
nop
jbe
rol
cmp
xor
fcmovnb
leave
rclb
outsl
out
loope
sub
mov
mov
add
push
movsl
icebp
addb
and
sub
imul
mov
std
sub
imul
enter
xchg
add
mov
insl
sub
test
lods
mov
dec
push
insb
cld
xchg
test
sbb
mov
push
hlt
push
sub
mov
ret
out
jne
or
cltd
aas
mov
pop
insb
sahf
sub
jbe
fstpt
pusha
cmp
movsb
ret
push
or
add
imul
movsl
movsl
nop
jo
jne
idivl
jl
pop
xlat
jp
scas
aaa
inc
xor
iret
mov
out
push
ljmp
push
fidivs
inc
sub
test
jae
out
lret
lds
loope
iret
jmp
in
aad
dec
inc
out
imul
je
test
sbb
jns
add
ds
int
push
xchg
outsb
call
pop
lret
pushf
cli
and
or
xchg
sarb
test
inc
cltd
sub
shll
push
jge
and
test
inc
jb
dec
lods
jns
dec
xchg
enterw
adc
add
xor
adc
je
ret
mov
fnstsw
jge
xchg
cmovb
xor
lcall
xor
pop
sbbl
mov
jmp
out
and
sbb
jo
and
repnz
jmp
lcall
xchg
jg
cmp
outsb
xor
sbb
push
or
ljmp
sbb
sahf
scas
lcall
dec
jle
mov
inc
push
push
or
or
icebp
sbb
nop
xor
xlat
push
mov
ret
lcall
sub
movsb
xchg
pop
jge
mov
jnp
jmp
rcll
sti
pop
mov
cmp
js
rcll
adc
pop
lea
xchg
cltd
cmp
popl
push
sub
mov
clc
fsubrp
add
xchg
pop
stos
xor
dec
xor
repnz
jb
and
cmp
and
fstps
lods
in
and
dec
das
pop
inc
cmc
add
push
out
mov
mov
mov
pop
insb
and
mov
xchg
testl
pop
mov
add
es
mov
xchg
es
mov
mov
cvttps2pi
xchg
mov
out
add
lock
pop
lea
cld
loopne
jne
xlat
mov
push
pop
lahf
idiv
ret
mov
sahf
sub
push
pop
adc
mov
cmpsl
pop
cmp
stos
jno
shll
cmpsl
pop
js
aas
xor
adc
inc
enter
popf
fwait
pop
repz
pop
popa
dec
sub
pop
push
hlt
insl
xor
adc
lret
out
fnstcw
mov
loope
repnz
scas
lods
rclb
mov
jno
inc
cmpsl
sbb
enter
mov
mov
push
scas
inc
sub
xchg
add
imul
js
inc
test
xor
fwait
mov
cs
jnp
or
imul
icebp
mov
push
fwait
jle
or
push
call
xchg
mov
adc
sub
mov
add
mov
sbb
out
add
clc
mov
jecxz
cmp
int3
rcrb
dec
jne
pop
cmpb
cwtl
sub
sub
xor
in
and
divb
pop
clc
pusha
fsubl
add
add
fwait
xchg
push
mov
mov
cmp
cmp
mov
aas
or
mov
repnz
ss
mov
mov
pop
hlt
cmpsl
dec
push
cmpxchg
mov
add
and
dec
ret
test
add
sbb
and
cs
cmp
jp
adcl
cwtl
lret
mov
pop
int
mov
pushf
adc
subl
mov
fdivs
mov
sub
out
lods
mov
mov
push
mov
data16
scas
jne
push
mov
add
das
aaa
outsb
mov
fidivl
push
dec
ficoms
aad
xchg
jno
or
shll
imul
cmpsb
cltd
ja
xchg
xor
jge
subl
jb
dec
pushf
leave
icebp
inc
mov
pushf
sbb
lods
xchg
push
cmp
cs
dec
mov
cmpsl
cwtl
xchg
movsb
inc
pop
cli
shll
mov
les
pop
mov
jmp
mov
movsb
aaa
xchg
add
mov
pop
cmp
repnz
popa
scas
adc
es
mov
jne
dec
mov
jg
js
jp
outsb
decl
jg
pop
lcall
adc
int3
pusha
dec
cmp
or
dec
pop
lret
sub
sbb
out
push
pop
dec
dec
lea
mov
xchg
test
out
mov
jns
push
jecxz,pn
cmpsl
lcall
hlt
inc
mov
pop
pop
movsb
loope
and
pop
dec
dec
push
inc
jae
pop
jbe
mov
or
arpl
mov
dec
mov
adc
or
stos
scas
and
ret
leave
or
frstor
shlb
pop
not
add
mov
xchg
mov
inc
and
sub
cmp
out
mov
or
in
or
shll
adc
xchg
sbb
push
mov
dec
jg
dec
pushl
fnstenv
xor
inc
xchg
mov
xor
pushf
xor
push
push
test
ror
lret
mov
mov
push
dec
lea
mov
dec
jle
sbb
hlt
or
mov
push
lods
in
fldenv
in
scas
mov
test
adc
add
mov
insl
jl
adc
ret
subb
out
push
sub
push
cmpsl
dec
cmp
aas
add
dec
and
insb
adc
div
inc
rorb
ljmp
pop
nop
enter
and
or
frstor
aad
enter
mov
sub
and
mov
jp
iret
xchg
inc
scas
in
xchg
lret
jg
dec
gs
cwtl
aas
xor
neg
mov
orb
push
pop
subb
xor
dec
test
xor
xorb
jns
add
xor
aam
fdivs
adc
fcomps
shlb
dec
and
dec
or
adc
movsb
lahf
out
push
icebp
pop
ja
std
insb
addr16
pop
jg
in
add
jge
jae
pop
and
aaa
fsubs
es
sti
rcrl
popf
and
add
fisubl
fs
pop
into
and
jle
rcrb
fistpll
test
cmp
dec
repnz
movsb
push
pop
aas
call
xor
xor
push
cwtl
jno
daa
cld
ret
in
mov
lret
or
push
xchg
xor
ja
cltd
pop
jmp
push
inc
push
mov
xchg
add
pop
push
adc
data16
clc
jp
dec
clc
loope
mov
xor
jb
std
arpl
stc
mov
lret
pop
std
mov
add
mov
cmp
mov
pop
js
adc
sarb
sbbl
xchg
movsl
nop
mov
cmp
sbb
sahf
jmp
push
data16
rclb
fldcw
mov
cmp
mov
test
shlb
pop
mov
addl
shlb
or
and
xchg
and
mov
dec
push
mov
mov
jno
pop
shrl
push
cltd
xor
jno
push
sbb
cld
cmp
mov
pushl
sbb
movsb
dec
add
sar
mov
adc
pop
sub
out
jle
sbb
jg
inc
jnp
mov
cmova
movsb
lods
sbb
aas
int
fisubrs
fdivrp
icebp
sbb
mov
repz
cmp
mov
push
orl
inc
xchg
pusha
xor
out
push
pop
mov
xlat
push
sbb
or
sub
dec
add
mov
adc
lds
xchg
nop
cwtl
inc
inc
cmp
repz
or
add
jecxz
mov
sarl
les
adc
test
or
frstor
jmp
lret
mov
add
stc
inc
in
inc
push
stos
outsl
pop
add
shll
insl
inc
int
sbb
push
ret
nop
or
inc
ss
sbb
mov
outsb
pop
push
mov
pushf
dec
inc
mov
cmp
xorl
lods
dec
or
jg
clc
rcr
faddl
stos
pop
inc
test
and
dec
aam
lea
imul
repnz
aam
push
push
addr16
adc
iret
enter
xor
in
hlt
or
pop
lock
shll
es
scas
test
test
pop
push
jle
subl
push
data16
pop
adc
fcoms
fs
cmp
je
xor
mov
ret
cld
sbb
int
mov
add
push
in
jno
add
cli
adc
xor
ficompl
cmp
mov
jg
lods
inc
pop
sbb
push
mov
sti
stos
mov
inc
mov
scas
clc
repz
add
push
and
mov
adc
add
mov
pop
sbb
cmc
gs
push
fnstenv
rcr
lret
xchg
icebp
insb
rcrb
mov
and
and
fdivrp
pop
cs
adc
mov
sbb
cli
add
sbb
stos
push
inc
xor
mov
jle
pop
jge
mov
push
or
iret
sarb
sub
add
mov
pop
ja
inc
fldl
insl
aaa
repz
out
bound
cmp
sbb
lea
cmp
cmc
push
mov
xchg
in
data16
in
inc
dec
mov
test
cli
notb
adc
inc
testb
adc
lock
bound
lret
faddl
mov
xchg
hlt
mov
lods
xchg
pop
jnp
or
mov
mov
lahf
lods
aas
stos
movsb
test
jne
jmp
arpl
add
les
adc
pop
imul
shrb
sti
xchg
dec
cs
and
cmp
jb
imul
imul
lret
es
dec
int3
adc
shr
rcrb
sub
sbb
cmp
and
sahf
mov
leave
inc
add
sub
aam
in
dec
fwait
push
sub
mov
inc
fsubrl
insb
in
frstor
into
xchg
add
sbb
iret
scas
inc
ret
inc
sarb
xchg
in
pop
lods
xchg
lods
aad
jl
xchg
cmp
pop
dec
filds
test
je
aas
push
bound
bound
bound
or
xor
in
rcl
out
mov
fwait
rol
xor
fidivl
mov
sbb
mov
dec
add
push
cmc
pop
pop
imul
adc
mov
pop
jl
movsb
inc
enter
ret
dec
pop
mov
xchg
test
sub
inc
cmp
push
je
mov
inc
aam
dec
cltd
mov
stos
fsubs
arpl
mov
or
sti
jecxz
scas
pextrw
and
cmpsb
jae
in
xchg
mov
mov
outsl
sti
cmp
inc
iret
push
adc
cld
fimull
roll
jl
mov
stos
out
iret
push
push
fs
jle
ljmp
cmp
bound
inc
sub
frstor
jle
push
addl
pop
jno
dec
loop
sub
push
dec
jmp
adc
xor
or
mov
and
pop
loop
cmp
inc
inc
in
mov
xchg
xor
addr16
repz
jae
mov
dec
ljmp
pop
jle
jle
and
sbbb
mov
test
add
mov
movsb
shll
jns
negb
shrl
cmp
push
ja
ljmp
pop
jbe
mov
xlat
pop
adc
push
lea
cmp
sbb
push
sub
xor
test
negb
inc
scas
cli
cld
neg
mov
in
ljmp
xor
ja
adc
psrld
push
mov
cs
aas
jns
adc
mov
cmp
jnp
pop
inc
xchg
pusha
sbb
cmp
mov
jp
rclb
out
shll
loop
pop
rcll
adcl
mov
xchg
fs
dec
mov
sbb
dec
fwait
pop
repz
sti
out
dec
push
pop
sub
ljmp
xor
push
inc
sbbb
inc
and
dec
gs
inc
dec
adc
mov
xlat
pop
nop
mov
mov
xchg
sub
inc
loop
movsl
push
add
or
mov
and
push
ss
jo
inc
enter
idiv
imul
dec
repnz
popa
push
push
pop
mov
movb
stos
out
jl
repz
cs
pushf
xchg
dec
mov
rcrb
and
jne
fdivs
scas
jo
lds
sub
ja
sub
out
jne
sbb
dec
fistpll
jle
aad
add
mov
inc
pop
lock
jnp
push
or
push
cmpsl
leave
jl
sub
add
rorl
out
out
push
or
cli
or
bound
push
hlt
popf
mov
out
jbe
sub
js
hlt
dec
stos
push
dec
nop
mov
mov
xchg
mov
inc
sbb
pusha
lock
and
in
bound
push
jmp
xor
setno
mov
rolb
mov
stc
stos
adc
sti
sbb
cmp
sbb
int3
add
out
pop
mov
mov
jecxz
lret
xchg
shll
imul
loopne
testb
dec
lret
lcall
or
les
cmp
mov
fldcw
mov
ret
dec
pop
or
ss
jbe
sub
dec
repnz
pcmpeqw
mov
jg
rclb
ret
inc
loopne
pop
int
dec
inc
movsl
xchg
sbb
pop
ljmp
loop
lcall
pushw
cmp
popf
xchg
jae
inc
pop
xor
mov
int
insl
gs
inc
adc
ds
fisubrs
inc
and
mov
out
rcrb
loop
popf
jno
lds
cld
insl
xchg
mov
in
xor
enter
jl
inc
and
jmp
inc
nopl
hlt
into
fiadds
sarb
mov
xchg
push
mov
lret
mov
jle
push
inc
push
pop
dec
xchg
loop
push
insl
push
into
mov
sahf
adc
xchg
nop
into
lods
icebp
aad
cmp
lds
ljmp
fisubrs
or
inc
xchg
roll
jno
cwtl
insl
in
testl
jno
jmp
movsl
xchg
mov
mov
gs
mov
in
push
or
push
sarb
loop
test
mov
mov
cmc
push
test
dec
jns
lret
out
out
push
fucomip
add
mov
out
lea
call
iret
mov
fnstcw
out
cmpb
fmuls
ss
inc
das
es
push
dec
repz
in
test
hlt
push
mov
cltd
faddl
pushf
mov
xchg
imul
call
sbbb
add
iret
mov
mulb
out
pop
shl
cwtl
sbb
stos
sbbb
or
adc
xchg
or
adc
out
cmp
rclb
mov
push
or
and
lret
nop
popa
aad
mov
in
push
cmp
pop
fs
std
cmpsl
dec
push
or
test
dec
xor
push
jmp
xor
or
sub
ja
hlt
outsl
popf
ret
insb
cld
fwait
adcb
dec
mov
or
lea
repnz
pushl
add
pop
sub
ret
fucomp
mov
add
sbb
mov
inc
iret
aaa
mov
cltd
push
sub
pop
pop
or
sub
mov
dec
mov
inc
mov
movsl
lods
fsubrp
into
ret
clc
stos
or
xor
les
ficoml
in
lret
adc
mov
and
jp
test
enter
push
or
xchg
xor
inc
test
push
dec
mov
add
popa
jnp
inc
lock
int
lea
add
fisubrs
xchg
test
pop
mov
mov
xchg
add
xchg
cmp
fdivs
lret
xor
or
mov
adc
mov
mov
imul
mov
fisttpll
stc
call
mov
js
jecxz
or
sbb
xchg
jecxz
jmp
jecxz
loop
mov
les
arpl
jb
divl
inc
lret
dec
pop
sub
sub
in
push
mov
jecxz
and
or
pop
dec
sahf
cmpsl
or
cmp
std
leave
in
lock
mov
mov
dec
and
movb
push
mov
hlt
jns
orb
xor
imul
jp
jo
mov
jo,pn
addb
sahf
push
je
sbb
test
dec
pop
push
aad
insb
sbb
mov
cld
mov
jl
adc
mov
sbb
jecxz
jne
dec
inc
decl
punpckhdq
sub
clc
lahf
inc
sbb
jle
popa
dec
lret
pop
pop
sahf
xorb
or
dec
adc
sbb
sbb
gs
shl
sahf
mov
mov
outsb
fcoml
xchg
call
xchg
in
mov
xchg
arpl
sahf
and
xor
stos
adc
xchg
cmc
icebp
into
cmp
aas
mov
outsb
aas
sahf
test
decb
outsl
and
and
js
gs
leave
ret
mov
pusha
mov
sub
inc
cmp
scas
es
idiv
gs
inc
mov
mov
ja
lds
lods
sti
rcrl
add
pop
pop
lods
xchg
mov
outsl
test
adc
outsb
sub
adc
sub
popa
push
adcb
sar
fs
pop
adc
mov
jmp
pop
jno
cmp
pusha
pop
js
cld
fiadds
push
xchg
ds
sub
mov
dec
jge
cltd
int
mov
add
xor
call
in
jnp
ss
adc
std
push
loopne
push
dec
or
in
stos
xchg
lds
out
aaa
dec
jmp
push
sbb
lods
bnd
mov
in
and
push
jne
adc
idiv
jae
lea
mov
in
pop
jne
mov
pushf
int
jb
out
repz
push
clc
iret
aas
adc
ficomps
stos
loopne
gs
add
add
adc
sbb
fisttpll
pusha
jecxz
imul
jb
inc
dec
add
std
push
xchg
sub
jno
or
mov
xor
inc
fmulp
test
jmp
fdivrl
dec
push
adc
int
inc
sbb
in
mov
cmp
ds
dec
cli
sub
outsb
mov
cmp
or
mov
in
jae
xchg
arpl
or
mov
lds
ret
xor
pop
push
add
subl
stc
pusha
pop
sbb
mov
mov
mov
xor
inc
enter
pop
xchg
out
xor
mov
xchg
les
xchg
scas
and
mov
or
shrb
popa
pushf
int3
shrl
movsb
sahf
loop
cs
mov
pop
push
sub
bnd
in
dec
push
enter
inc
mov
jp
dec
xchg
test
pop
leave
adc
pop
je
das
rorl
jg
mov
pop
push
fidivrl
not
cmp
mov
jb
mov
mov
cmc
into
push
in
xlat
sub
push
push
les
add
or
sub
popa
xchg
and
cs
pop
jl
mov
test
push
test
xchg
shrb
out
dec
fadds
sbbb
mov
jno
add
pop
dec
je
lahf
xchg
lods
test
cli
xor
mov
add
dec
cltd
or
xchg
adc
inc
jns
aam
jae
and
sub
mov
icebp
sbb
ja
mov
lea
in
faddl
xchg
imul
cli
fdivrp
push
in
xor
push
or
pushf
lcall
add
jge
incl
cmpsl
sbb
jl
lahf
cmp
push
jmp
cld
adc
scas
std
mov
movsb
cltd
jae
lods
fidivl
sub
mov
in
dec
add
and
push
jecxz
in
xchg
mov
movsl
test
loop
in
xor
out
scas
and
fcmovne
xchg
in
or
fiadds
ds
xlat
adc
jb
mov
sub
mov
into
jnp
fbstp
lock
insl
pop
shr
sbb
sub
or
repnz
push
imul
jge
add
iret
mov
divb
dec
rcl
push
push
cmp
leave
in
or
rorb
cmp
fdivrl
sub
add
cli
and
test
or
ljmp
adc
jecxz
pop
jne
xchg
push
bound
movsl
imul
fnsave
insb
cs
lods
das
sahf
pause
aad
divl
adc
lcall
sub
out
jbe
adc
adc
jne
xchg
les
push
pop
hlt
clc
sbb
push
mov
xchg
adc
repnz
shrb
jne
mov
sub
aad
sti
or
stos
sti
jge
adc
pop
add
dec
aad
cmp
in
jo
xor
mov
pop
imul
test
out
dec
sub
pop
pop
insl
rolb
insb
mov
add
jbe
int3
mov
dec
data16
mov
fstl
and
outsl
adc
cmp
loopne
lahf
insb
sbbl
test
fbld
sub
test
ljmp
out
sbb
addr16
movsb
jae
dec
das
xor
xchg
in
popl
mov
cmp
jge
mov
lods
ljmp
lret
cmp
arpl
ss
fcoms
sub
mov
cmc
mov
sub
push
fcmovnbe
loope
test
pop
clc
jg
out
inc
and
jle
cmp
mov
aam
sahf
icebp
and
loop
ret
pop
jg
push
inc
sti
mov
xchg
aam
cltd
test
popf
jbe
push
subb
into
loop
out
adcb
fimull
fdiv
into
jmp
ja
test
add
subb
pop
inc
mov
mov
or
jge
jae
and
pop
xchg
outsb
adc
cmc
push
jp
mov
xchg
cmc
shll
xchg
ret
sbb
add
xorl
icebp
orl
ss
pop
push
xor
stos
leave
jl
jg
inc
les
in
rol
cmp
and
mov
in
sub
or
vpshad
xlat
dec
popf
ja
pop
adc
sbb
xor
icebp
and
ficompl
mov
add
inc
ror
mov
outsl
mov
mov
pusha
add
insb
lea
sbb
push
scas
add
arpl
std
incb
push
repz
shlb
test
lea
es
xchg
mov
stos
adc
jne
aam
mov
sub
jmp
xchg
push
push
notl
sbb
rolb
loopne
scas
hlt
mov
mov
faddl
and
push
jno
push
inc
add
rcll
sbb
leave
push
ret
aam
jo
mov
lret
push
es
je
xchg
xchg
test
pushf
movsb
pop
push
cmp
xor
xor
cld
lcall
mov
push
stos
sbbb
mov
pop
cmpsl
std
insb
sbb
data16
xor
or
jl
mov
push
jb
clc
xchg
or
outsb
push
push
jnp
ficomps
mov
int
xchg
dec
xor
lahf
sub
lds
repnz
push
adc
mov
mov
xchg
pop
or
out
xchg
jnp
xchg
je
sub
ret
das
pushf
adc
in
mov
add
fists
sbb
cs
imul
loop
shlb
fucomip
les
push
fstpt
mov
mov
aad
adc
out
aas
in
pop
add
push
mov
inc
sub
shrb
cmp
cmc
fisttps
sbb
je
cwtl
insl
pop
fmul
cmpsb
inc
addr16
clc
inc
aam
push
xor
leave
jae
mov
cmc
pop
pop
cld
test
es
xor
lret
jecxz
mov
pop
aam
sbb
jle
pop
sti
aad
les
or
cmp
push
call
xchg
xchg
lods
mov
jb
xor
push
out
test
and
adc
inc
push
mov
das
aaa
mov
pop
cli
dec
dec
mov
sub
mov
or
pop
outsl
add
fisubrs
insb
mov
fwait
or
rorl
aaa
and
pop
stos
add
add
push
xor
outsb
push
pop
lret
fldt
int
xchg
fmull
push
pusha
test
in
jmp
stos
bound
out
add
xchg
pop
mov
mov
in
jge
scas
push
out
rol
cs
jge
mov
jg
aas
test
daa
sbb
mov
mov
cmc
adc
jo
inc
push
in
fs
out
jp
dec
enter
xchg
divl
push
xor
loopne
popa
subb
icebp
lock
mov
out
lods
shl
pop
mov
cmpsl
nop
mov
ret
inc
movsb
push
jmp
mov
and
mov
ljmp
cmp
loop
enter
cmpsl
mov
fs
mov
fsubl
pop
and
mov
into
hlt
jne
fistpll
imull
sbb
push
mov
inc
mov
push
stos
xor
jg
lds
outsl
and
scas
xchg
mov
popf
notb
insb
lret
ret
xchg
imul
mov
mov
pop
push
add
mov
sub
mov
ss
cli
jmp
je
xchg
fldenv
mov
andb
push
fldl2t
jne
and
push
ficompl
add
call
dec
adc
pop
cmp
int3
add
push
mov
push
out
and
shrb
jb
xchg
and
xor
out
shlb
sbb
js
cmpsl
push
push
scas
mov
lret
sbb
fcmovne
sbb
adc
enter
jne
movsb
sub
push
mov
cltd
cmpl
js
sub
jg
int
sub
ret
pop
lods
push
push
mov
jbe
cmc
mov
or
ret
sahf
lret
push
je
lahf
jl
rclb
imul
bound
adc
fimull
push
sti
jno
mov
cwtl
inc
cltd
icebp
sbb
shl
mov
cmp
xchg
idivl
mov
jl
jl
and
dec
dec
cmp
lret
sbb
inc
inc
flds
into
lret
sarb
sti
in
iret
stos
push
mov
movsl
popf
push
cmp
jne
das
testb
stos
mov
jle
cmp
mov
in
mov
or
cltd
jo
orl
lret
outsb
inc
nop
popa
pop
push
sbb
out
outsb
mov
cs
fistpll
mov
xor
cmp
popa
lods
lcall
lods
push
std
ret
or
sbb
cmp
mov
adc
js
fisttpl
jle
shrl
xor
outsb
repnz
and
movsb
pop
sub
mov
loopne
xor
test
fidivrl
shl
xor
sub
fs
push
jl
xor
add
out
mov
push
into
add
adc
sbb
lcall
jp
or
and
out
cli
pop
popa
out
cmpsb
add
jne
and
nop
test
push
add
js
and
sub
sti
stos
mov
push
cmpsl
push
je
mov
inc
or
or
outsb
xchg
xchg
jge
jns
push
xchg
imull
sbb
aas
dec
xor
inc
imul
mov
jnp
test
pusha
in
pop
jl
cltd
outsl
adc
pop
push
jle
iret
jge
cld
sub
test
xlat
xchg
jno
push
dec
jg
fs
jl
fiaddl
cmp
or
lea
loope
fsubl
pop
mov
jp
adc
pop
fistps
add
popa
mov
int3
pushf
clc
fstl
or
mov
loop
out
cmpsl
push
xor
or
bswap
push
out
pop
sti
add
pop
pop
mov
inc
jno
inc
cmp
xchg
sub
dec
xor
out
cs
fdivl
add
fdivrl
dec
ret
aam
fidivs
sahf
adc
es
jl
sti
enter
enter
xchg
jp
sub
push
lret
pop
sahf
add
pop
cmp
xchg
frstor
fisttps
popf
test
stos
insl
adc
push
sub
jae
pop
jo
jae
inc
and
mov
in
cltd
fwait
call
leave
movsl
es
and
push
sub
push
or
pop
mov
fwait
test
fucomip
push
dec
push
pusha
jg
xchg
fbld
pop
gs
inc
inc
test
jecxz
mov
out
jp
into
into
xchg
test
and
jge
pop
push
push
mov
test
movb
jle
mov
and
ds
adc
gs
clc
mov
push
push
sbb
lods
mov
cmc
push
adc
add
mov
and
cltd
lea
imulb
pop
call
mov
test
pop
ljmp
insl
jb
xorb
stos
popf
xchg
add
dec
jle
push
and
push
test
int3
add
mov
fiaddl
cld
mov
fs
mov
stos
mov
scas
mov
xchg
ss
daa
lcall
dec
mov
scas
xlat
repz
lods
imul
or
xor
xor
adc
in
aaa
xchg
out
lret
jmp
push
xchg
mov
mov
mov
arpl
fisubs
fisubl
mov
push
xor
or
dec
or
out
faddl
mov
shl
inc
leave
scas
lods
ret
hlt
andl
stc
das
sbb
or
cmpl
test
scas
loopne
mov
sbbl
cs
sub
jg
iret
mov
fisttpl
pop
sbb
dec
xorps
jg
ja
pop
mov
mov
sbb
lcall
xlat
xor
out
jnp
mov
in
lahf
jae
fcomps
xchg
mov
sbb
ljmp
sbb
dec
lahf
stos
ss
das
jnp
inc
adcb
xchg
push
test
jp
fistpl
int3
add
enter
cli
insl
movsb
dec
inc
testb
dec
xor
aaa
add
or
lahf
decb
je
ret
or
dec
or
push
movsb
xchg
ljmp
pop
mov
adcb
adc
push
sub
inc
mov
mov
sub
jbe
fs
dec
pop
jp
test
xor
arpl
out
add
sbb
lret
fiadds
mov
sahf
add
mov
jmp
inc
sbb
and
insl
sbb
divl
dec
dec
sub
xchg
movsb
clc
into
lock
jge
stos
xchg
push
out
and
mov
xchg
testl
das
xchg
gs
mov
repz
ljmp
add
ja
bound
mov
jle
out
fs
pushf
adc
jmp
and
pop
or
mov
rcll
lret
or
ljmp
ljmp
mov
adc
data16
in
cmpsl
or
in
xchg
adc
rcll
mov
inc
fmulp
fildl
lcall
lods
sti
or
outsl
push
stos
push
add
insb
and
ret
dec
mov
movsw
jnp
jae
rcl
lock
xchg
repnz
outsl
popa
paddsw
or
imul
hlt
ret
mov
leave
pop
jg
fldcw
shlb
mov
cltd
jmp
inc
inc
adc
addr16
cmp
and
sti
cmp
cltd
add
mov
and
push
aas
xor
arpl
test
fists
nop
ficoml
fnstsw
stos
scas
xchg
add
in
mov
jmp
sbb
stc
dec
pusha
mov
push
aad
loop
das
cs
daa
or
je
es
insb
jle
or
cmp
cs
pop
fs
jno
push
jns
mov
inc
mov
fildl
ljmp
sbb
lea
outsl
xchg
scas
das
sbb
clc
lods
ss
pushf
mov
sub
int3
add
mov
sub
and
loope
fs
jp
pop
xor
test
mov
push
out
mov
dec
add
ljmp
loop
jge
mov
mov
xchg
mov
xor
hlt
sti
pop
adc
push
andb
sahf
cmp
clc
push
jp
mov
inc
and
adc
cs
mov
fiaddl
in
sub
mov
mov
lret
jo
xor
mov
cmp
in
pop
fdivrs
pusha
neg
jecxz
scas
popa
ss
jns
sbb
aad
lcall
out
mov
add
or
les
in
outsl
ja
jne
sub
enter
loop
push
es
out
outsb
aaa
test
loop
push
add
add
out
dec
push
loope
mov
jo
cmp
add
out
xor
xor
jge
dec
jmp
inc
dec
dec
add
lods
pop
into
loopne
xchg
pusha
sub
xchg
mov
popf
cwtl
std
nop
ds
cmp
mov
inc
in
in
sub
mov
xchg
call
lea
inc
popf
je
dec
test
xchg
sub
sti
or
adc
bound
mov
adc
add
push
mov
xor
repz
pop
dec
push
mov
push
arpl
int3
adc
jb
adc
xorl
mov
add
iret
sbb
cwtl
sti
fidivl
xchg
cmp
mov
and
gs
or
cmc
mov
mov
jg
lods
sbb
sahf
jns
sbb
mov
dec
cli
ret
inc
adc
arpl
or
ljmp
mov
movsb
mov
ffreep
push
es
aas
testl
xchg
jl
cmp
adc
pop
inc
and
in
arpl
outsb
xchg
inc
add
dec
cmp
ret
dec
leave
push
jge
cmpsb
mov
dec
sub
scas
xor
lahf
mov
lea
pop
mov
clc
push
pop
clc
nop
in
int3
or
cmc
dec
into
jmp
divl
dec
xchg
call
pop
fisubl
xor
jae
sbb
loop
repnz
loop
into
or
pop
movsb
mov
clc
mov
pop
xor
mov
and
icebp
add
pop
fisubrs
xlat
xor
fidivl
inc
mov
and
or
leave
cltd
jbe
xor
stc
daa
dec
add
pop
cmp
add
cmpb
xlat
xor
call
bound
and
jp
mov
jge
adcb
add
inc
ror
fstl
and
or
popa
push
dec
and
leave
movsb
sbb
shl
sbb
jl,pn
or
imul
pop
sub
mov
sahf
lahf
jp
jmp
in
push
adc
leave
icebp
sbb
adc
xchg
xor
xchg
je
mov
xchg
pop
sbbl
loopne
or
or
idivl
stc
and
cmp
jns
call
mov
cwtl
in
fwait
mov
mov
jg
test
pop
jg
clc
lret
int3
ss
push
and
repnz
outsb
mov
pcmpeqw
loope
fwait
mov
sbb
dec
popa
mov
mov
dec
mov
lahf
pop
stos
mov
or
dec
stc
in
jmp
jnp
cmc
iret
xchg
jno
jmp
es
dec
and
xchg
mov
mov
popa
inc
sbb
push
mov
in
adcl
xor
dec
int3
xchg
mov
sub
orb
sbb
mov
out
cs
addr16
add
xchg
imul
sub
test
pusha
ficomps
xor
adc
mov
in
pop
xlat
push
inc
test
lock
adc
in
dec
sbb
push
sbb
dec
push
jge
bound
or
fldl
int3
test
daa
mov
mov
xchg
adc
add
lods
cli
cld
sbb
dec
or
inc
inc
loope
popf
jl
mov
xlat
add
mov
pop
sbb
je
movsl
cltd
xor
aas
dec
add
jg
test
lods
adc
in
loope
jno
and
fwait
rcr
pop
call
fcmovb
fstp
out
adc
jecxz
sub
addr16
sbb
inc
push
xchg
mov
cwtl
loop
bnd
push
stos
je
mov
or
jns
add
shrb
aas
dec
js
ja
inc
daa
je
adc
shl
data16
mov
jnp
or
idivb
fwait
pop
and
sub
mov
stos
xchg
xor
and
jns
sbb
insl
cmpsl
mov
outsl
out
clc
sti
pop
jge
ds
test
ss
sub
fwait
mov
jne
inc
pop
clc
or
arpl
aam
bound
jo
push
sub
jp
out
sub
js
push
in
js
sbb
mov
mov
lret
add
stos
mov
fstpl
pop
arpl
and
cmp
outsb
adc
push
test
jle
std
scas
insb
mov
pushf
push
and
push
xor
fnstsw
outsl
push
adcb
lock
sub
xchg
mov
out
mov
or
aad
cmp
es
rcl
add
mov
mov
cmp
insl
imul
cmpsb
andl
xchg
ficoml
inc
push
cld
lock
idivb
jno
mov
jne
fwait
xor
jbe
adc
push
add
stc
std
inc
push
pop
sar
daa
mov
add
inc
pop
fwait
sub
dec
fnstenv
add
in
dec
out
aas
pop
shr
dec
jge
pop
imul
cwtl
adc
push
add
sub
fsts
mov
or
jg
mov
or
shrl
and
pop
xor
xor
leave
mov
lods
jmp
hlt
push
or
mov
in
popa
js
dec
inc
mov
rcl
in
in
push
adc
add
out
push
sub
outsl
sub
fidivrl
jl
clc
mov
mov
negl
xchg
in
mov
sbb
push
sarl
mov
xchg
pop
das
int
jp
ja
faddl
stos
and
loop
sub
cmpsl
test
mov
mov
xchg
sub
test
xchg
sbb
sahf
jns
iret
sbb
stc
mov
ja
gs
xchg
es
shlb
mov
movsb
sub
fisttpl
push
xor
in
jbe
sar
adcl
mov
out
xor
and
sub
push
leave
sub
inc
cmp
fsubrl
push
push
mov
bound
shlb
cwtl
pop
and
add
pop
leave
mov
loope
adc
adcl
xchg
call
aas
roll
jg
mov
push
int3
push
lea
scas
xchg
shr
sbb
sbb
movsl
das
aad
sub
push
aad
movsb
cmp
stos
insb
mov
mov
mov
sbb
jns
call
enter
ret
lahf
push
dec
or
in
push
js
or
xor
cmp
int3
or
sahf
xlat
pop
loop
lret
nop
addl
xchg
test
mov
xor
das
and
mov
xchg
jae
adc
xchg
push
rol
out
in
and
leave
inc
xchg
loop
mov
inc
mov
in
ror
mov
sub
sti
jmp
xor
js
out
sub
push
repz
int3
pop
mov
ret
in
cmpb
xchg
add
pop
shlb
push
inc
andl
cmpsb
sti
xchg
shll
jecxz
mov
push
clc
xor
aam
test
adc
fidivl
or
mov
shlb
enter
jb
mov
loope
js
cmpl
stos
push
xor
push
insl
arpl
lea
inc
je
cmp
roll
or
and
test
mov
cli
push
jmp
cmp
daa
add
loope
mov
in
xchg
push
mov
xor
lret
hlt
or
xor
sbb
out
decl
push
xchg
xchg
lahf
cmc
dec
iret
sahf
mov
cltd
outsl
out
and
scas
data16
xchg
insl
lds
push
cmpsl
sbb
inc
adc
push
push
sbb
lock
clc
iret
sahf
stos
sbb
push
mov
fldt
xor
repnz
pushf
roll
loopne
dec
mov
icebp
imul
mov
sub
pop
lock
repnz
xchg
sbbl
xchg
aam
addr16
inc
lret
in
fdivrl
pushl
pop
and
sbb
fistpll
movsl
cmpsl
sbb
sahf
jno
mov
ljmp
push
mov
push
lret
add
xor
hlt
pop
enter
shl
imul
fisubl
out
xor
inc
cmp
jb
lcall
xchg
mov
shl
maskmovq
jnp
jns
in
das
xchg
and
fidivs
adc
jb
mov
sub
and
int
es
jg
adc
mov
mov
add
add
xorl
push
xor
mov
pop
in
dec
mov
mov
fwait
mov
jecxz
loope
stos
fwait
shrb
lods
sbb
repz
jle
or
cmp
push
sti
aad
test
pop
or
cmp
faddl
xchg
xchg
push
sti
or
insb
dec
imul
in
mov
xchg
test
jp
test
xchg
movsb
jle,pn
fwait
or
mov
sub
clc
rorb
cltd
jbe
out
xor
imul
jecxz
xor
es
dec
push
push
pop
inc
sbb
xlat
mov
cwtl
jg
cmp
mov
flds
adc
pop
xchg
mov
test
fwait
adc
jmp
rclb
mov
decl
jne
movsl
jne
pop
push
out
cmpsl
lods
daa
bound
adc
xlat
add
psubb
cmpsb
push
mov
push
outsb
push
mov
cli
cmp
push
mov
sbb
outsb
sahf
outsb
mov
fcmovb
call
cmpsl
enter
loopne
jno
or
icebp
les
pop
sub
inc
in
mov
jge
andl
cmp
cmp
daa
hlt
mov
mov
adc
mov
mov
das
scas
icebp
inc
out
gs
bound
mov
subl
imul
in
mov
imul
inc
add
xlat
data16
pop
push
sbb
adcl
maskmovq
testl
popl
sub
pop
int3
jmp
pop
loope
in
lods
jg
push
inc
mov
mov
and
test
ja
inc
ret
ss
sub
dec
popa
sbb
jl
test
xor
mov
dec
push
sbb
das
lods
rolb
ds
mov
mov
call
push
xchg
xor
add
shr
clc
mov
lods
or
out
sub
push
push
daa
jmp
pop
ds
movsb
add
data16
xorl
and
fiadds
cmp
adc
ljmp
sete
add
xchg
out
rcrb
popa
aaa
es
jb
mov
sub
nop
push
outsb
xchg
cmp
xchg
sub
pop
xchg
rorl
fcom
cwtl
mov
fwait
jmp
cmpsb
pop
pop
decl
dec
popf
scas
pop
push
sub
adc
adc
cld
push
fsts
in
fstp
mull
in
xchg
ljmp
lahf
or
pop
jl
pusha
fistl
test
or
cmpsl
mov
mov
insb
js
mov
or
cmp
mov
adcb
push
sbb
mov
les
xchg
inc
adc
leave
add
call
pop
cmp
ret
pop
iret
in
inc
bnd
lock
mov
dec
sbb
jns
lcall
pop
push
fnstsw
outsb
rcpps
cwtl
ds
jecxz
xchg
push
and
xor
mov
lahf
xchg
out
fisubrl
xchg
add
fdivrl
ret
sbb
mov
pop
push
mov
push
mov
repz
xchg
xor
hlt
pop
rcrl
popa
sbb
mov
repnz
cmp
rorl
or
imul
imul
jb
aad
cmp
test
push
insb
movsl
mov
cmc
call
jnp
cmp
cmpb
dec
sbb
mov
add
outsb
add
inc
sub
idiv
xorl
enter
push
stos
mov
cmp
lock
aaa
dec
or
das
sbb
lods
aad
pushf
aaa
cld
aam
cmp
jne
pop
addr16
cli
leave
ret
data16
leave
mov
dec
movl
cmp
push
sarl
dec
xlat
loope
or
jg
push
adc
dec
add
add
repnz
mov
daa
rcrb
out
cmp
mov
jnp
sub
inc
add
jmp
repnz
subb
or
sti
in
lahf
das
inc
lcall
jp
scas
int
push
hlt
mov
xor
popf
adc
mov
lcall
mov
orb
mov
sbb
les
lock
dec
fucom
xchg
pop
sub
jge
and
or
mov
lods
mov
clc
inc
loopne
pop
inc
ss
cli
adc
dec
outsl
test
cmp
push
cmp
cs
mov
jge
stos
pop
loope
arpl
jno
in
dec
loop
enter
cltd
test
mov
cmp
inc
push
int
xchg
je
jmp
jmp
fdivl
adc
aaa
je
repnz
pop
iret
andps
cmp
sub
push
enter
mov
push
adc
or
and
push
outsb
jae
inc
data16
outsl
lds
incb
cmp
imul
outsb
sub
rorl
and
fistpl
jl
insl
jnp
dec
jae
movl
jb
push
jns
cmc
xor
cmp
ljmp
out
xchg
push
addr16
cmpsl
je
jne
sub
fs
out
or
cmpsl
mov
and
imul
mov
push
cmc
in
int
fucomi
mov
jno
sub
sbb
mov
sub
in
out
cld
add
test
sbb
sbb
jl
sub
enter
sub
inc
icebp
lock
adc
loope
ss
mov
mov
push
jp
sub
daa
imul
cmp
lahf
mov
test
std
push
push
gs
inc
loope
lods
testb
arpl
dec
xchg
sbb
sub
imul
pop
popf
stos
data16
pop
mov
mov
fisubrs
jp
inc
mov
insl
sub
int3
rolb
jae
sbb
sbb
dec
push
cli
scas
pop
cli
dec
test
je
ficompl
mov
xor
pop
nop
pusha
arpl
stc
aaa
cltd
sub
nop
leave
popf
fs
and
insl
pop
pop
push
push
insb
adc
les
add
int
mov
testl
mov
ljmp
inc
call
lock
sbb
data16
aas
cmp
pusha
jle
rorl
stos
inc
xchg
mov
xor
pop
iret
leave
push
mov
mov
push
pop
ss
addb
les
push
out
dec
ja
push
popf
packsswb
frstor
adc
dec
cs
mov
in
and
repnz
icebp
inc
mov
mov
enter
imul
ret
mov
int
out
cmp
and
push
in
pop
movsl
popa
fcoms
dec
out
imul
scas
jle
lret
xor
cmp
jns
sahf
mov
icebp
or
or
cmpsl
push
fimull
divl
mov
movsb
dec
mov
xlat
push
push
pop
cltd
iret
xor
out
push
movsl
jecxz
mov
mov
or
fwait
decb
xor
and
scas
pop
rep
test
inc
iret
cmc
and
xchg
scas
shll
and
pusha
leave
or
jns
jb
test
in
mov
outsb
add
sahf
dec
outsb
cltd
and
aas
push
inc
push
mov
adc
stos
hlt
repnz
lds
cmp
adc
lods
cld
xchg
scas
mov
pop
sub
loopne
xchg
mov
xchg
aad
sub
sbb
enter
dec
or
div
xchg
jmp
jmp
mov
push
shlb
repz
adc
adc
xchg
ret
inc
adc
cmpl
loopne
pop
cltd
add
lahf
enter
or
stos
xchg
add
fstl
sbb
cld
fsubrs
insb
adc
rolb
fdivrs
negl
mov
test
dec
mov
clc
lret
adc
adc
and
mov
push
pop
inc
add
aas
dec
lcall
lods
sub
jge
das
or
test
mov
cli
ss
test
sub
bound
pop
mov
imulb
and
dec
adcl
jmp
fadds
test
dec
lock
mov
call
dec
cli
mov
enter
or
fwait
adc
cs
outsb
and
add
jmp
sub
adc
push
push
sbb
pusha
nop
repz
jb
cmpsb
push
pop
sbb
test
mov
in
stos
sar
xor
xchg
repnz
pop
push
sbb
hlt
mov
pop
mov
or
lock
pop
out
sti
and
or
aas
fstl
inc
out
add
arpl
inc
movsl
movsl
jno
out
insb
sbb
stos
inc
outsb
mov
jbe
cmovl
pop
push
pushf
lcall
cmc
lds
aas
das
out
push
stos
insl
popf
cmp
sahf
add
jmp
mov
scas
out
test
jge
mov
iret
xchg
add
xor
pop
and
imul
mov
loope
cmpsb
xchg
and
fbstp
cmp
ljmp
jg
push
mov
imull
mov
inc
push
in
xor
aas
sbb
out
in
or
mov
xchg
les
adc
rcrb
mov
aaa
xlat
add
dec
jbe
mov
cmp
push
insb
rcl
or
sti
jl
sbb
cmp
push
dec
xor
and
xor
sbb
mov
iret
xchg
lret
fidivs
mov
les
inc
xchg
dec
test
push
ds
data16
mov
loopne
push
in
pusha
sti
lds
add
or
in
sbb
in
mov
push
and
xchg
shrb
stos
inc
lds
js
mov
mov
stc
mov
jb
and
psrad
in
jb
lret
and
push
add
sbb
pop
into
ret
das
pop
and
jg
mov
pop
repz
out
xchg
rol
lret
jo
stc
sub
popf
test
aaa
cmp
insl
pop
clc
cmp
xor
ljmp
sub
das
jl
cmpsl
aas
stos
lahf
rcr
cmp
push
sbb
cmp
test
out
mov
call
sub
sub
mov
xchg
fcompl
data16
mov
ja
and
call
mov
js
or
iret
xchg
pop
lahf
pop
pop
xor
xchg
mov
filds
dec
es
mov
cmp
sahf
sub
fsubrp
test
dec
inc
imul
addl
mov
jl
fwait
std
int3
pop
inc
xchg
add
push
and
sbb
adc
mov
inc
insl
or
pushf
jl
ljmp
aas
mov
xchg
inc
icebp
pop
pop
ret
sbb
les
xchg
inc
mov
outsl
shrl
inc
fiadds
or
orl
pop
jge
cmpxchg
inc
in
sbb
loop
sahf
sub
add
add
inc
pop
mov
iret
cli
jb
mov
cmp
nop
sub
and
and
inc
scas
test
mov
or
push
cmp
jecxz
stc
add
xor
push
stos
scas
in
repz
std
pop
and
mov
aaa
mov
sub
cmpb
mov
cwtl
mov
fwait
inc
push
jmp
jmp
enter
test
mov
outsl
add
dec
test
insl
jmp
push
xor
xchg
adc
dec
gs
xchg
in
add
cld
sub
movb
mov
rclb
push
cmp
daa
loope
inc
jnp
ficoms
jae
mov
imul
jle
fistpl
mov
mov
outsb
lahf
add
scas
cvtps2pd
jno
mov
call
push
dec
dec
jno
and
lret
xor
sbb
in
iret
cwtl
bound
dec
aam
sbb
cmp
inc
daa
cmp
lock
loop
testb
sbb
into
popf
int3
out
insb
repnz
out
mov
add
ds
sbb
cmp
aas
mov
call
xchg
fistps
or
out
ja
inc
notl
bound
ja
repnz
stc
mov
xlat
clc
jmp
cmp
repz
cmpsb
jo
in
mov
jbe
int3
out
arpl
cwtl
adc
cli
stc
mov
fildl
popf
cltd
dec
cmp
fisubrl
jle
sbb
jle
loope
mov
pop
aas
sub
pushf
icebp
mov
pop
mov
bound
add
enter
add
in
fidivrs
bound
mov
insb
mov
cs
outsl
sbb
and
pop
pop
jb
xor
adc
popf
rcr
mov
in
cs
pop
sub
push
imul
push
adc
jno
fwait
cmpsb
repz
inc
fidivl
cmpsb
js
ljmp
xchg
mov
mov
mov
mov
in
daa
add
xchg
cwtl
fndisi(8087
andb
lahf
jmp
icebp
push
std
xchg
cmpsb
ret
mov
sub
stos
iret
and
inc
adc
or
in
mov
add
push
mov
cmpb
int3
movsb
cmp
sbb
idiv
imul
dec
ds
and
dec
xchg
cmp
cli
and
cmp
testl
jmp
popa
inc
dec
inc
movsl
mov
cs
and
cmp
and
adc
xchg
lret
xor
pmaxub
mov
inc
fildll
add
push
sub
xchg
dec
dec
and
sbb
or
inc
ret
jp
in
cmpsb
sub
outsl
pop
push
jnp
jl
negl
mov
loopne
mov
nop
lods
jno
stc
push
scas
push
je
test
push
mov
add
sbb
or
stos
push
ret
and
mov
jno
push
or
pop
add
push
push
mov
inc
divb
and
sbb
shrl
mov
daa
lods
jno
mov
jo
push
in
mov
mov
lahf
bswap
fucomp
je
push
sbb
call
addb
sub
lret
xlat
and
jmp
push
mov
inc
das
jnp
cmpsl
pop
xor
cmp
push
mov
sbbl
stc
into
out
mov
nop
mov
inc
add
pop
pop
push
sbb
cmpsb
mov
jg
jnp
pusha
ret
and
fstps
pop
mov
push
push
pop
outsb
sub
cmp
rorb
mov
jo
mov
xor
jle
dec
daa
loopne
mov
fs
loope
test
cmc
lcall
jl
cs
pop
cmpsb
fistpl
mov
ret
or
jae
mov
es
out
push
add
sub
jo
aam
xor
push
mov
lods
decb
inc
arpl
pop
fimull
inc
subb
sbb
pop
mov
jle
les
jnp
jle
pop
add
sahf
stos
and
and
in
nop
xor
aaa
push
pop
push
out
arpl
mov
ret
xor
xchg
in
loope
outsb
fsubl
jb
clc
cmpsl
je
sti
inc
and
das
cwtl
xchg
or
push
sti
daa
xor
sbb
mov
ja
ljmp
hlt
popl
push
outsl
lds
mov
in
stos
jmp
mov
jo
icebp
shl
push
nop
push
jns
xchg
ds
mov
aam
or
pushf
ja
cmp
xor
jge
pop
inc
sbb
arpl
imul
adc
mov
test
pop
xlat
sbb
sbb
jp
dec
pop
push
cwtl
pop
mov
into
dec
mov
xor
sti
shlb
js
arpl
sti
or
push
dec
add
mov
subb
jns
iret
pop
push
loop
cmp
add
lds
mov
push
xchg
cld
outsb
inc
inc
rol
sbb
int
test
push
fs
out
mov
or
xchg
mov
pop
xchg
xor
dec
cld
mov
sub
fbstp
int
jo
out
in
imul
xor
jb
sti
inc
mov
jnp
test
sbb
insb
dec
cmp
mov
ds
lahf
dec
sahf
push
scas
pop
movsb
mov
imul
stc
adc
jle
xor
sub
mov
fs
push
jnp
aaa
into
sub
adc
cmp
ja
movsl
mov
dec
mul
mov
pop
loopne
jp
imul
or
cmpsb
and
mov
mov
mov
data16
std
dec
test
jl
repz
pop
mov
add
sbb
push
test
sub
xor
xor
push
and
fsubr
cmpb
adc
inc
scas
sub
mov
and
push
test
add
pop
mov
arpl
imul
dec
mov
insl
pop
inc
inc
add
pop
sti
mov
adc
stc
daa
mov
subb
mov
push
sbb
and
ja
stos
in
pop
add
stos
dec
or
adc
cs
lock
push
jo
mov
js
arpl
incl
daa
jge
dec
jo
or
add
outsl
and
dec
sbb
lret
mov
negl
pop
mov
arpl
ljmp
cmp
out
test
dec
push
sarb
inc
in
ljmp
push
in
pop
xor
vpslld
fldenv
sub
mov
decb
sti
ret
in
cmp
mov
xchg
and
bound
das
sbb
jge
push
call
or
leave
add
sahf
test
popa
sbb
loope
fwait
jmp
in
cmp
mov
dec
cmp
sarl
pop
out
mov
out
repnz
and
stos
imul
pushf
adc
out
faddp
scas
pop
and
cld
mov
loop
andb
faddp
xchg
jecxz
out
outsb
or
adc
aad
mov
daa
outsl
jl
add
cli
sbb
fucomi
xor
push
mov
add
icebp
add
pop
test
sbb
or
lahf
mov
sub
insb
xor
cmp
pop
out
adc
pop
or
push
test
lods
and
add
movl
shrb
sbb
scas
and
pusha
jl
xor
push
repz
jl
hlt
mov
test
push
adc
in
xor
dec
push
sti
mov
adc
mov
mov
and
sti
jb
sub
shrl
mov
cmp
shll
xchg
xor
cmp
sub
sub
pushf
test
imul
shrl
jo
pop
jne
fiadds
fwait
and
lret
fs
out
cmp
cmpsl
xlat
cmc
rcrb
dec
or
iret
sub
add
sub
and
inc
repz
shr
mov
std
mull
jo
lds
xor
dec
mov
push
sbb
adc
inc
shr
xchg
data16
xchg
dec
ljmp
xchg
icebp
ljmp
out
mov
shrb
cli
pop
push
das
or
aad
mov
movsl
xchg
cmpb
sbb
jo
pop
movsb
les
in
faddl
fdivs
cli
adc
addr16
popf
fstps
push
sti
jmp
aam
xchg
xor
outsl
sbb
and
pop
cli
daa
cs
nop
ret
fld1
int3
mov
cltd
dec
push
or
mov
lds
push
pop
mov
jo
cld
push
outsb
add
and
loop
sti
test
in
push
jns
dec
pop
sbb
ljmp
fs
and
pop
sbb
jae
lock
fdivrp
std
gs
orl
add
addb
in
lock
icebp
sti
cmc
add
or
xor
push
cli
xor
mov
pop
sub
nop
add
ss
dec
sub
and
call
xor
loope
mov
xchg
lock
pop
jae
sbb
lahf
lahf
cmc
dec
adc
shlb
xor
xchg
ret
movb
flds
pop
loopne
mov
enterw
jle
mov
lret
neg
mov
xor
cwtl
les
jg
mov
imulb
pushl
adc
lods
sahf
loope
cmp
pop
mov
xor
xlat
xor
jb
outsb
xchg
push
adc
repnz
lret
ret
andb
in
into
aas
cmp
add
icebp
jns
sub
mov
mov
das
lret
ljmp
sub
push
pop
add
stos
and
ja
sub
push
hlt
or
stc
mov
jmp
xlat
sahf
xor
mov
in
rcl
jecxz
or
or
add
or
mov
inc
fwait
stos
pop
sub
pop
push
sahf
xor
loope
test
push
xchg
in
pop
cmpsl
ds
fmull
in
pushf
cld
adc
push
fmull
iret
in
pop
add
mov
lods
sub
or
or
dec
push
xchg
cltd
cmpsl
jo
sub
sub
call
clc
xchg
or
out
or
mov
push
sbb
jbe
stos
gs
fistpll
outsb
lret
adc
dec
push
test
mov
push
jmp
int
test
pop
insb
adc
sbb
sbbl
jns
fldt
mov
sub
sub
ds
pop
inc
lret
repnz
data16
lea
mov
mov
mov
xchg
cmp
push
add
rcrb
cmp
cmp
sbb
adcb
lds
rorb
mov
int3
cmp
inc
shlb
movsb
lret
lea
mov
xor
dec
jge
cld
adc
xor
push
pop
rorl
sub
mov
add
cwtl
xor
or
adc
scas
jns
lahf
adc
push
mov
mov
sub
das
mov
mov
push
xor
sub
psraw
push
cltd
pop
mov
and
lret
dec
sbb
xchg
sbb
mov
ffreep
jecxz
cmpsl
imul
add
push
faddl
in
cmp
push
mov
xchg
jle
movsl
stc
mov
mov
or
sub
outsl
je
insb
cltd
cli
dec
sbb
arpl
sbb
mov
add
and
ja
in
in
fmulp
or
fs
cltd
call
movsb
or
pushaw
fwait
ja
and
mov
xor
jbe
or
mov
and
sbb
mov
inc
test
jl
subb
movl
push
cmp
js
jae
sub
mov
jecxz
push
ds
movsl
adc
fstl
pop
push
sahf
sbb
stc
movsb
or
loope
push
cltd
mov
insb
mov
dec
push
loope
arpl
cwtl
aas
mov
lds
leave
xor
or
and
jb
stos
jbe
mov
inc
mov
repz
clc
or
push
iret
insb
jne
dec
es
mov
xor
mov
ret
cli
ds
stos
cmp
popa
lcall
out
or
out
test
lahf
es
fisubs
add
insb
addr16
mov
outsl
aad
xchg
sub
xor
arpl
pop
addb
adc
repnz
mov
dec
sbb
fs
enter
push
loope
push
loope
xor
lea
xor
andb
adc
cmp
aad
rcll
push
out
dec
jmp
mov
sub
mov
repz
mov
xchg
lods
inc
mov
in
inc
add
xchg
xlat
push
aas
cltd
cli
cld
xchg
mov
dec
loope
xor
in
aaa
shll
ret
xor
xchg
arpl
xlat
mov
and
inc
cmp
dec
inc
fs
sbb
mov
mov
fwait
addr16
cmp
jbe
movsl
fcoml
pop
xchg
sbbb
push
add
jle
sub
cld
or
mov
divl
lea
lock
daa
call
push
sahf
imulb
jbe
cmpsl
xor
inc
pop
mov
pop
imul
cmc
push
xchg
repz
das
adc
jecxz
movsb
arpl
sbb
cmp
mov
out
jp
jns
jno
lret
adc
pushf
mov
mov
popf
jp
xor
dec
loope
xchg
mov
stc
xchg
sbbl
mov
jp
loop
arpl
in
dec
arpl
mov
add
pop
sub
cwtl
push
outsb
adc
repz
mov
pushf
sbb
adc
add
add
in
xchg
test
cmpsb
aas
iret
call
dec
enter
push
xor
dec
loopne
jne
ljmp
shlb
aaa
subl
dec
call
sub
sub
and
jno
pop
popf
or
stos
fimull
xor
and
mov
popf
loop
pop
mov
icebp
aas
cmp
mov
mov
stos
xchg
pushf
leave
pop
mov
popf
mov
add
ss
lcall
xchg
in
hlt
lret
repz
divl
les
cmpsb
adc
mov
in
inc
shll
jo
cld
incb
pop
inc
fs
jno
sti
lahf
sub
mov
in
jecxz
arpl
dec
and
and
sbb
sti
add
outsb
pop
loop
sub
stc
mov
pop
fcomp
adc
cltd
mov
add
sbb
or
fwait
mov
and
mov
xchg
mov
into
and
les
dec
xor
mov
or
sub
clc
push
call
sbb
sarl
mov
scas
sbb
mov
xor
xor
jge
clc
ja
adc
icebp
sub
stc
leave
xchg
movsl
fisubs
pop
sti
push
pop
loope
xchg
loope
sahf
jo
cmp
add
xchg
rorb
or
sti
jecxz
jg
dec
loopne
lahf
clc
push
jb
xchg
cmc
fidivrs
cltd
imul
inc
scas
or
shll
stos
xor
push
data16
mov
sbb
adc
test
xor
xchg
or
xchg
jns
pop
loopne
inc
pop
into
cmp
mov
int
adc
xchg
jne
cmp
pusha
in
mov
outsb
and
pop
or
std
mov
push
dec
out
leave
sahf
mov
shlb
sahf
push
push
sub
pop
repnz
or
test
mov
cmc
fcmovnbe
mov
add
xchg
cwtl
push
ss
cmp
push
xor
iret
inc
data16
outsb
stos
sahf
mov
dec
sub
xchg
mov
cmp
in
lret
mov
jmp
add
push
nop
jo
popa
pop
xchg
mov
jno
in
stc
xor
repz
xchg
call
sahf
out
ret
mov
in
xchg
sbb
add
push
inc
xchg
mov
sarb
mov
insb
xlat
ds
push
mov
cld
iret
sub
ds
sbb
popa
mov
sub
sub
push
lcall
shlb
lret
push
adc
setne
jo
fwait
sti
roll
inc
lods
fcomps
jge
add
lock
mov
xchg
lods
cmp
mov
fdivl
scas
mov
call
add
cmp
mov
or
ss
icebp
xchg
daa
pop
cli
add
xor
cmc
inc
sub
into
iret
pusha
ror
pop
cmpl
or
call
push
insl
and
pop
cmp
xchg
pop
or
repz
in
lret
xor
push
xor
sbb
jb
icebp
out
stc
fstp
inc
adcb
scas
daa
pushf
sub
xorb
add
push
pushf
push
daa
loope
popf
mov
insl
insl
test
psllq
ficoml
pop
iret
jns
inc
ror
les
aaa
lret
daa
rolb
cmpl
call
and
sub
mov
and
aad
pop
sbb
fisttps
add
jl
add
cmp
sbb
cmp
jge
xchg
imul
dec
in
sub
jge
push
aad
pop
out
mov
xor
jge
sarl
js
std
mull
test
push
mov
and
pop
jne
push
push
inc
xchg
sbb
jg
cmp
fcomi
add
xorb
nop
inc
cli
sarb
ss
mov
xor
or
in
ret
pop
inc
dec
mov
ljmp
ret
sub
add
mov
push
or
inc
mov
jmp
and
lahf
push
adc
jno
push
and
inc
dec
jno
mov
xor
testl
jmp
jmp
adc
mov
shlb
scas
pop
out
cmc
cmc
push
fwait
sub
rorb
ret
lea
les
inc
push
jp
lcall
push
mov
lar
stc
cmp
push
push
sbbb
push
call
int
into
add
lret
or
adc
cs
xchg
out
test
push
mov
setle
pop
pop
dec
loop
xchg
lcall
insl
mov
shl
or
data16
es
jo
pop
arpl
sarb
ljmp
or
inc
jne
sub
pop
repnz
or
sub
pusha
and
push
pop
into
sub
jmp
ret
aam
inc
mov
xor
mov
cmp
or
add
push
mov
lea
adc
add
imul
add
mov
out
adc
sub
and
cs
mov
stos
cmp
jno
xchg
decb
jno
es
fiadds
dec
pop
add
cld
and
jl
ret
jl
inc
popf
mov
ja
jp
imul
fcoms
push
jnp
in
in
lock
inc
bnd
dec
sbb
out
mov
outsb
loopne
dec
dec
ss
fistps
fcmovb
add
mov
rorl
and
int3
mov
lds
and
in
sbb
cmp
adc
adcb
loop,pt
out
sbb
xchg
xchg
push
mov
or
pop
mov
pop
dec
or
es
cmpsb
notb
mov
pop
loope
mov
std
sbb
inc
mov
sub
les
jp
mov
push
adc
lods
or
ja
mov
pop
jmp
cmpsl
mov
loop
adc
xlat
sti
fnstsw
fs
dec
dec
mov
loopne
pop
mov
push
fwait
add
aam
je
mov
cltd
clc
inc
pushf
sub
push
sbb
sbb
leave
gs
jmp
loop
and
rcrb
jmp
rorb
adc
inc
cmp
mov
test
cld
hlt
iret
addr16
scas
jmp
iret
jle
out
xor
inc
push
data16
mov
push
insl
add
cltd
jge
mov
bound
cmp
int3
cmp
movsb
add
insb
nop
das
or
gs
xchg
push
out
sbb
sub
jge
pop
lock
mov
pop
push
inc
xchg
popf
repz
jb
es
adc
scas
mov
lret
cmc
push
xor
jnp
or
push
pop
iret
mov
or
inc
pop
imul
jmp
cmp
add
xchg
dec
push
add
je
mov
cmp
arpl
mov
out
mov
sub
rorb
pop
inc
pop
repnz
out
sub
and
inc
jle
sbb
or
mov
push
or
leave
mov
mov
mov
idivl
pop
mov
icebp
xlat
icebp
or
loop
shlb
cmp
std
arpl
xor
das
sbb
loopne
cmp
shrl
pop
inc
mov
or
jne
sbb
dec
sbb
inc
nop
pop
sub
or
outsb
dec
fstpt
inc
adc
mov
pop
movsb
popa
hlt
in
popl
xor
popf
fnstcw
ficoms
sub
rclb
testb
push
inc
push
mov
xchg
mov
in
cmp
cli
out
rolb
sahf
ret
fldenv
mul
cmp
jle
iret
jle
lods
push
pop
push
insl
dec
sbb
pop
cltd
jne
pop
jmp
mov
icebp
call
or
sti
dec
insl
ret
inc
inc
dec
dec
jl
xchg
test
adc
arpl
cmp
cmp
push
jge
mov
scas
jge
jne
xor
mov
aaa
icebp
call
ret
push
in
add
aam
or
xchg
push
pop
sbb
jecxz
adc
icebp
test
dec
cmp
cmp
fisttpl
xchg
cmpl
ficompl
ror
mov
xchg
mov
cmp
sbb
loopne
jle
mov
xchg
int3
xor
and
and
fxtract
mov
mov
sbb
add
dec
or
or
icebp
ss
dec
push
or
pop
scas
ja
cs
and
adc
rol
cmp
or
out
sbb
lahf
add
mov
fisttpl
mov
fwait
mov
mov
add
xchg
xchg
pop
int3
sahf
mov
xchg
mov
jge
pop
inc
daa
mov
daa
leave
test
mov
cmpsb
lcall
sbb
cmpsl
jbe
out
or
xor
or
fidivrs
pop
xor
inc
pop
lods
out
mov
cld
arpl
add
inc
and
popa
xchg
int
fyl2x
bound
or
inc
or
sub
jmp
inc
push
je
cmp
jbe
repnz
mov
jnp
cmp
loopne,pn
es
pop
aad
stos
pusha
add
jl
les
push
add
sbb
add
jbe
imul
ret
and
mov
dec
sbb
mov
push
jbe
sub
or
pop
inc
mov
stos
shrb
xchg
stc
add
dec
dec
xor
sbb
addr16
into
cmc
stos
outsb
into
sbb
jl
mov
orl
cmp
inc
push
fstps
iret
bound
jge
mov
outsb
jbe
cwtl
inc
push
scas
inc
cltd
dec
rclb
cmpb
jb
lea
pop
insl
mov
lods
test
scas
adc
stc
jns
jns
xchg
pop
or
stc
aad
mov
push
test
mov
mov
popa
xchg
aas
fwait
aam
lcall
pop
loope
dec
in
fadds
xor
push
sti
mov
mov
bound
cwtl
xor
cmpsb
ljmp
dec
sbbb
sub
int3
xchg
mov
cmp
sub
pushf
adc
xorl
jp
decb
xor
jno
jl
dec
pusha
outsb
mov
stos
push
stc
iret
out
shlb
mov
push
mov
inc
in
jp
aaa
adc
cld
xchg
popf
cltd
push
sub
or
cmp
sub
jge
ss
data16
cmp
mov
das
icebp
movd
push
xor
mov
data16
insl
nop
bsf
inc
setno
cmpsb
xchg
sub
dec
repnz
repnz
xchg
sub
cmpsb
push
adc
dec
pushf
int
jp
mull
jp
xor
scas
mov
cmp
mov
xchg
add
push
call
or
ja
push
dec
in
dec
push
mov
cmc
lods
mov
fldt
mov
mov
std
lds
mov
push
cmp
pop
jnp
sbb
enter
int3
mov
into
loopne
aad
push
push
mov
notl
inc
int
sti
pop
ret
lret
push
mov
mov
inc
add
jmp
clc
fisubrl
jp
nop
push
xor
cmp
adc
add
mov
out
out
mov
shrb
icebp
inc
mov
mov
mov
mov
adc
add
loopne
pop
xchg
incl
inc
or
and
mov
push
mov
jnp
mov
or
inc
out
or
sahf
xor
xchg
jno
sbb
jge
jne
mov
ss
add
addr16
inc
pop
adc
pop
sub
fcoml
outsb
pop
mov
loop
mov
in
sbb
test
jbe
in
repnz
inc
movsb
cwtl
dec
movsb
mov
add
or
push
mov
dec
push
sbb
add
jp
test
in
xlat
xchg
inc
data16
jp
lock
add
or
shlb
ss
call
cmp
mov
lcall
fiadds
xor
dec
mov
lods
push
hlt
mov
fiadds
test
fidivrl
leave
mov
jo
push
sti
xor
dec
mov
es
ljmp
adc
daa
pop
loope
dec
ss
jmp
ljmp
adc
ja
xor
lock
xor
jae
hlt
xor
and
add
aas
mov
xchg
fisttpl
xchg
inc
push
dec
cld
dec
xchg
ds
mov
sub
push
jle
xchg
dec
insb
int
mov
cmp
bound
ds
js
lcall
fs
cmpsb
pop
in
stos
inc
addl
xchg
push
xchg
fs
test
push
shll
outsl
int
ljmp
je
inc
test
dec
arpl
les
pop
adc
lret
inc
jne
outsl
idivb
and
jne
mov
arpl
xlat
mov
mov
push
cld
sbb
out
sub
ds
jmp
loope
dec
cmp
push
cmp
fistpl
fcompl
movsb
subb
cs
test
sahf
popa
lahf
dec
mov
ds
xor
ljmp
sub
or
popa
ret
sub
sub
ret
push
movsl
dec
jnp
inc
pop
sbb
mov
sub
adc
sub
cltd
leave
cmp
add
mov
adc
cmp
mov
adc
pop
adc
aas
and
mov
mov
pusha
xchg
or
sti
mov
sub
push
and
rcrl
arpl
or
shlb
mov
nop
nop
shr
test
cmp
xchg
mulb
ss
nop
loope
stos
mov
fildll
add
int
ret
lods
int
lret
push
xor
aam
adc
mov
bound
pushf
xchg
mov
push
push
not
mov
push
mov
adc
cmp
lcall
icebp
cli
pop
mov
cltd
std
out
xchg
lock
sub
cli
adc
dec
das
cmp
sub
jnp
dec
jo
frstor
adc
pop
fildll
cmp
mov
add
test
lret
clc
xor
pop
push
in
jne
and
repz
leave
jmp
push
repz
in
ljmp
cmp
sub
pop
jmp
inc
popa
lret
pop
adc
jbe
push
sbb
jecxz
das
orl
sub
jl
mov
mov
mov
mov
nop
mov
rorb
mov
lcall
loop
pop
push
push
jne
push
fsubrs
cmpsb
push
xchg
clc
ds
dec
scas
jns
call
out
test
or
pop
insl
in
add
sub
xor
mul
ret
xchg
lret
fadds
sbb
popa
lods
nop
cmpsb
decl
jg
ljmp
cmpsb
mov
mov
xlat
loopne
mov
cmpsb
xor
jns
fwait
and
jp
sub
xchg
mov
push
imul
fwait
repnz
push
xlat
xchg
and
stos
sub
jns
mov
je
inc
adc
loop
test
cmp
movsl
cmpl
fmull
jno
jb
and
stos
fwait
xchg
jnp
push
fwait
push
xchg
insl
push
aad
xchg
leave
into
lret
jg
xor
imulb
inc
xor
adc
and
pushf
sbb
add
test
push
out
scas
in
lock
cmp
out
std
pusha
mov
clc
inc
xor
add
addb
jo
mov
push
push
sub
sub
into
mov
iret
push
xchg
sbb
add
lcall
test
push
sbb
fs
icebp
sahf
js
fists
xchg
xchg
adc
daa
cltd
inc
xchg
sub
sub
scas
lea
mov
cmp
js
sbb
movsl
jmp
pop
or
repnz
mov
enter
dec
mov
sbb
dec
xlat
cwtl
push
add
fisubl
and
fsubrp
xchg
push
cmpsl
jecxz
popf
and
rclb
pop
movsb
mov
add
xchg
add
aaa
dec
cmp
imul
ja
cmp
push
pop
cwtl
lahf
or
out
scas
aad
xor
xor
push
rol
xchg
xchg
push
out
xchg
xchg
cmp
fmul
jmp
lret
jl
sbb
insl
sarb
lret
andl
sbbb
pushf
lods
cld
into
or
dec
adc
mov
sub
or
push
adc
into
mov
inc
dec
cmp
dec
mov
dec
mov
fmuls
jo
cmp
jmp
lahf
xor
neg
xor
rcl
pop
out
test
lahf
scas
jae
aam
clc
xchg
mov
scas
pop
inc
je
inc
cmp
mov
mov
test
int3
dec
clc
dec
inc
int3
xorl
pop
sbb
inc
mov
sbb
popa
sbb
mov
repz
mov
dec
daa
mov
arpl
jmp
inc
push
cs
push
hlt
aas
push
adc
lea
test
add
fwait
jl
mov
cwtl
into
pop
jp
lods
cld
das
and
out
aam
push
cmpsl
ljmp
push
pop
and
dec
inc
aad
add
es
mov
cmp
inc
sub
push
gs
outsl
aas
lcall
lods
iret
jo
pop
hlt
sub
push
or
mov
arpl
and
cmp
popa
lret
into
mov
inc
int
add
stc
test
adc
aas
inc
mov
or
fbld
and
mov
or
pop
mov
mov
daa
dec
ret
jmp
mov
std
adc
js
sub
clc
mov
cmc
aas
mov
jbe
or
sahf
xchg
iret
mov
lea
fstpl
sahf
xchg
int3
aaa
movsb
pop
test
mov
jnp
inc
outsb
mov
inc
jnp
inc
lret
mov
jnp
out
jmp
pop
ja
mov
sbb
jge
and
add
sbb
jp
outsb
adc
pushf
mov
sub
das
icebp
cmp
push
add
pop
dec
xor
fimull
mov
repz
cmp
in
jno
ja
push
fimuls
je
dec
lret
jns
pop
mov
mov
adc
mov
sub
mov
or
ljmp
adc
or
add
sbb
inc
aaa
fldcw
jbe
cmp
in
divb
and
mov
arpl
jns
test
rcrb
andb
jnp
sub
push
dec
dec
mov
mov
int
fiadds
pop
inc
lock
addl
xlat
js
out
pop
mov
pop
mov
jbe
mov
shl
gs
mov
lahf
mov
mov
into
jo
dec
imull
iret
test
pop
shll
pop
ss
adc
mov
sub
sbb
pop
nop
jp
movsl
mov
fwait
out
rcll
sbb
and
inc
pushf
cmp
cmpsl
ds
xor
and
sti
xor
fwait
sub
daa
xchg
jg
icebp
cmpsb
mov
sub
lret
popf
and
push
lret
imul
push
jp
sub
repnz
push
pop
imul
pop
out
push
cmpsl
jae
jge
sub
je
arpl
gs
cmc
xchg
mov
adcw
mov
fidivrs
imul
mov
push
pop
inc
dec
notb
imul
xlat
in
shrl
inc
js
cmpsb
push
notb
repz
mov
pop
pushf
sbb
je
push
mov
mov
mov
mov
stc
out
jno
push
xchg
mov
jecxz
dec
paddsb
hlt
and
and
inc
mov
sbb
sbb
mov
das
mov
fsts
icebp
and
inc
mov
vsubss
lock
mov
dec
loopne
sub
sub
inc
fsts
cs
push
data16
and
and
jl
pop
icebp
pop
js
imul
mov
gs
bound
popa
je
cmc
outsb
cmc
mov
lock
stos
sub
cmp
aaa
xchg
push
push
inc
mov
ss
lcall
inc
xlat
pop
mov
xor
fxam
into
negl
xor
mov
push
scas
adc
shl
test
std
out
push
out
not
push
shlb
fcmovb
out
jge
std
jmp
mov
scas
int
inc
ja
and
xchg
rclb
mov
aam
ja
inc
arpl
mov
enter
mov
subl
mov
xchg
imul
hlt
stc
rolb
add
pop
es
ret
lret
xlat
add
sbb
xchg
leave
stos
in
xchg
inc
in
adc
pop
dec
inc
scas
add
stos
scas
jbe
cmp
clc
imul
xchg
stos
cmpsl
es
add
mov
test
adc
movsl
iret
mov
push
sbb
rclb
movsl
lea
icebp
xor
int
addl
push
cli
xchg
inc
fisubrl
adc
xchg
cmc
pop
push
push
addb
and
std
xchg
fisubrs
cmpsl
ret
pop
fcoms
xlat
lods
jno
xchg
inc
std
pop
mov
or
je
adc
jl
mov
clc
adc
sub
mov
mov
test
dec
and
sbb
push
jp
mov
mov
loope
inc
cld
sti
out
pop
dec
js
xchg
imul
icebp
inc
stc
sub
mov
xchg
push
mov
or
mov
popa
pop
sbb
adc
mov
fstps
into
aad
cwtl
lods
xchg
bnd
mov
sub
add
mov
jecxz
inc
xchg
mov
mov
push
es
icebp
and
rorb
scas
jo
scas
incl
and
aam
fsubrs
sub
fldt
call
repnz
sbb
xchg
inc
es
inc
mov
or
mov
or
pop
dec
xor
outsl
inc
rcll
cmp
bound
push
or
ss
pushf
scas
cltd
dec
sub
add
imul
cmp
push
mov
mov
jnp
add
outsl
stc
or
mov
sahf
xor
jbe
sbb
adc
mul
mov
iret
or
sub
mov
pop
dec
dec
ljmp
fs
mov
and
add
dec
repz
mov
sbb
sbb
push
fstps
hlt
pop
aaa
xchg
xor
mov
mov
sbb
dec
orb
push
pop
dec
xchg
sbb
xchg
xor
pop
loopne
xchg
mov
fidivs
ss
leave
je
cld
pop
xchg
dec
lcall
pop
repz
testl
xchg
orb
pop
mov
ret
mov
scas
out
gs
sti
lock
pop
xorb
pop
cmp
or
adc
cmp
js
jmp
jae
hlt
sbb
push
add
xchg
mov
xor
cmp
push
lods
sahf
cmp
cmp
pop
cltd
aaa
push
fiadds
gs
cmp
cmpsb
add
imul
leave
ds
push
xchg
jg
inc
das
loop
ret
push
or
addr16
orb
fsubl
mov
lods
adc
mov
add
out
jge
cmpsb
mov
jnp
mov
add
cmpsb
ret
jns
xor
push
in
pop
mov
cwtl
lcall
daa
pusha
jecxz
cmp
or
xor
loope
dec
inc
stc
jns
and
sbb
cwtl
mov
mov
out
mov
scas
in
movsl
sbb
jno
jge
jmp
adc
add
loop
mov
or
cmp
cld
inc
mov
sbb
cld
and
mov
dec
sbb
push
inc
addb
mov
rcr
inc
mov
fiaddl
clc
or
popf
adc
inc
iret
xor
loope
loop
aad
pop
aam
repz
ja
jle
psubw
div
shr
inc
inc
into
into
int3
movsb
sbb
xlat
cmp
sbb
cmp
loopne,pn
rcl
and
pop
in
insl
cmpsb
sbb
mov
and
cmp
dec
adc
pusha
test
add
jecxz
sbb
out
sbb
sub
adc
outsl
and
adc
cmp
in
dec
or
mov
fnsave
aad
cmp
mov
xchg
dec
lock
stos
outsb
movsl
mov
fildl
adc
xor
cmp
xor
out
cmc
data16
push
inc
out
iret
cmc
jo
movsb
and
sub
jle
add
ficompl
sub
sbb
xor
ss
mov
push
xor
and
nop
ret
fcompl
push
lods
aas
cmp
into
stos
xlat
icebp
or
sbb
in
sub
inc
mov
pop
lods
dec
mov
inc
sbb
punpckhwd
insb
fwait
orb
xor
mov
add
enter
cmpsb
sbb
data16
add
sub
outsl
jp
pop
popf
outsb
inc
xchg
in
in
or
insb
inc
mov
or
lcall
pop
adc
lds
pop
xchg
outsb
jbe
xchg
adc
sbb
cmp
lea
pop
loopne
call
cwtl
les
int3
jp
out
push
nop
sbb
cmp
imul
cmp
and
add
ja
hlt
sarb
mov
test
and
arpl
sti
test
fnstsw
xchg
scas
test
or
fsubl
xlat
or
cwtl
sub
popf
mov
pop
jp
jb
cmp
insb
subb
incl
je
cwtl
cmpsb
lds
push
clc
rorl
ror
fs
lea
leave
add
xor
lret
and
loopne
jno
jle
and
sbb
mov
adc
das
cmpsb
movsl
adc
add
xchg
mov
lret
pop
cmp
sarl
ss
mov
enter
adcb
imul
sub
inc
inc
or
add
mov
shll
pop
pop
xchg
movsl
lea
insb
ds
ljmp
mov
les
insl
jg
xor
adc
add
lods
sahf
jae
aas
test
cmp
jg
and
xor
push
outsb
arpl
scas
fcoml
lods
aam
imul
xchg
inc
scas
push
mov
shll
sub
cli
cwtl
xor
dec
mov
test
jmp
push
mov
jmp
add
add
movsl
lods
cwtl
js
lods
adc
test
std
cmpl
lock
and
mov
cmpsl
ffreep
mov
ljmp
xlat
xchg
adc
mov
mov
test
repnz
xchg
sub
jb
and
cmc
pop
out
push
sbb
popf
in
pusha
mov
pushf
push
mov
mov
mov
iret
mov
xchg
shlb
mov
push
mov
push
add
or
test
lcall
inc
fsubrl
add
ds
and
push
xchg
jp
push
mov
mov
jno
ds
fcmovnbe
push
sbb
lea
xchg
xchg
mov
push
out
ret
into
fsubrl
aas
mov
shrb
mov
xchg
ror
pop
xchg
sbb
cltd
mov
cli
mov
outsb
jl
mov
icebp
leave
rcrb
add
dec
lods
inc
push
adc
inc
jae
xor
jbe
repnz
aas
daa
stos
fistl
pop
prefetcht1
sbb
add
jbe
loope
fldenv
adc
push
push
inc
sbb
add
xor
inc
clc
jle
cmpl
ret
jecxz
clc
jb
or
push
mov
clc
sbb
scas
scas
lea
stc
sbb
shr
gs
lret
ljmp
and
add
adc
in
mov
mov
adc
fcompl
data16
in
cmp
addl
adc
cmp
fwait
jnp
ret
pusha
ret
sbb
mov
lds
test
push
out
jg
notb
fwait
mov
je
insl
inc
mov
xor
loopne
mov
iret
xchg
into
adc
fbstp
or
inc
dec
mov
jno
mov
out
xchg
nop
repnz
sbb
ljmp
scas
rorb
fisubrs
sbbl
mov
add
in
imul
pop
xchg
sar
or
in
pop
and
dec
cmp
add
clc
insb
loopne
mov
mov
ret
out
fwait
xor
dec
sbb
cltd
gs
pop
ja
sub
xchg
push
mov
mov
fwait
mov
aaa
mov
fisubrs
mov
xor
out
jbe
popa
outsb
das
pop
fcomp
cld
cltd
stos
lret
jle
push
test
outsb
out
push
adcl
adc
mov
in
push
sbb
aaa
cwtl
repz
in
icebp
popf
mov
adc
dec
aaa
adc
dec
fsubrs
gs
popaw
pop
aam
xor
mov
sub
imul
jae
and
leave
push
loope
scas
enter
pop
add
sti
or
push
push
fld
loop
les
push
sub
fnstsw
dec
test
mov
jmp
jge
mov
popf
loop
xchg
inc
inc
dec
sti
xchg
or
test
push
aas
scas
or
scas
mov
or
sub
pusha
movsb
enter
cli
adc
jmp
ret
xchg
sub
mov
push
sbb
and
inc
add
ret
inc
imul
add
cmpsl
cmp
jp
out
xlat
jmp
icebp
mov
pop
addr16
xchg
push
dec
dec
ss
inc
cld
test
jmp
out
sbb
addb
cmp
das
dec
ds
dec
mov
sub
les
addl
jnp
mov
out
sarb
ljmp
push
idivl
bndmk
sbb
test
mov
mov
stos
cmp
add
std
ss
shr
into
dec
cmpsb
cmp
ret
repz
pop
les
xchg
aaa
inc
xchg
sub
mov
popa
add
js
mov
jl
pop
leave
les
mov
sbb
es
lods
popf
fists
fs
das
in
or
xor
ret
das
lahf
in
std
xor
in
lds
loopne
mov
add
fbld
mov
fimull
or
imul
push
leave
dec
and
pop
popa
testb
push
push
xchg
adc
mov
dec
mov
lret
fnsave
or
sub
icebp
lods
mov
jbe
cmp
divb
ret
mov
mov
dec
dec
mov
mov
fcompl
std
dec
or
push
jmp
sub
mov
test
xchg
rcl
push
sub
mov
insb
mov
cltd
mov
in
jecxz
in
dec
gs
xor
cmc
mov
je
mov
sub
out
or
cmpsl
into
mov
sbb
lahf
fsubs
ret
xor
mov
mov
push
sub
pop
pop
or
lahf
xchg
lret
dec
sub
movsl
or
icebp
xchg
out
fsts
in
add
mov
ljmp
jne
xchg
jp
dec
xor
arpl
sbb
push
pop
rcrl
mov
lock
mov
push
fstpl
jae
xor
popf
data16
sbb
or
inc
popf
mov
scas
ficomps
pop
sarl
fs
dec
aas
popf
xor
test
sub
fisubl
inc
jle
xor
sub
xor
shr
imul
shrb
movsl
jl
js
inc
fistps
mov
or
repz
addr16
inc
adc
imul
iret
add
movsl
subl
xchg
sarl
xchg
negb
mov
faddl
adc
xchg
jnp
lds
xchg
fwait
jge
jp
test
popa
aas
xor
xor
inc
in
fistpll
sub
les
jo
ret
pop
fmuls
lds
in
popa
sub
jmp
xor
dec
add
test
add
mov
test
cwtl
push
insb
mov
stc
jb
lods
sahf
lret
sbb
test
add
sbb
mov
cmp
pop
push
pop
fildll
js
pop
decb
shlb
mov
inc
adc
out
pop
mov
lret
js
mov
mov
jmp
xor
mov
movsb
sti
mov
mov
xor
mov
mov
les
fsub
clc
repnz
daa
aam
lods
mov
hlt
sbb
and
mov
mov
fyl2xp1
cmpsb
push
lcall
jg
xchg
inc
arpl
sbb
inc
test
jns
test
arpl
out
daa
pushf
fwait
scas
cmp
cs
push
cwtl
push
mov
or
push
aam
inc
xor
dec
push
arpl
mov
xchg
orb
xor
rcrl
mov
aaa
stc
mov
or
mov
test
inc
cmpsl
adcb
pusha
pop
jecxz
xchg
jle
xchg
jne
scas
push
repnz
scas
out
leave
outsl
xchg
fnstenv
cmp
rcrb
ret
add
aaa
loopne
xchg
insl
dec
cmovns
adc
nop
jne
shlb
call
rolb
xor
cltd
and
testb
push
inc
loope
aam
and
inc
push
rcrb
sub
dec
cmpsb
or
or
dec
es
or
sbb
pushl
imul
enter
imul
lock
lcall
fstpl
rcrb
ror
negb
jle
inc
jmp
or
and
sbb
in
or
ficomps
mov
or
inc
out
clc
add
scas
mov
dec
mov
test
adc
push
inc
outsl
movsb
ret
dec
jg
pop
imul
inc
lret
or
pop
cmp
lock
rorl
loopne
shll
imul
rcrb
push
repnz
cmpsl
dec
jb
jae
push
ljmp
out
mov
shrb
add
xchg
in
cs
mov
fists
sub
xor
mov
lods
push
pop
mov
enter
and
inc
sti
stos
pop
cmc
std
mov
lret
and
sbb
push
xchg
test
lods
add
inc
fmull
fwait
das
cmp
in
mov
int3
cmpsl
mov
adc
adc
pop
jne
les
or
mov
test
push
fimull
add
mov
jle,pn
adc
aam
push
out
mov
jae
jbe
cs
push
jp
and
push
xlat
cmp
add
xor
jecxz
into
cmp
jmp
lea
test
adc
int3
lret
xor
inc
stos
mov
cmp
dec
fsts
adc
les
int3
cmpsb
fidivrl
mov
xchg
push
adc
cmpb
xor
out
and
cmc
mov
xchg
dec
imul
pop
shl
int3
sub
test
dec
jmp
in
pop
or
mov
pop
adc
sub
cmp
jb
aad
adc
cmpsb
dec
lcall
call
ret
inc
popa
mov
scas
adcl
xor
scas
mov
inc
xorl
rcl
outsb
test
out
push
mov
fucomi
stos
jnp
add
out
cmpsl
loop
or
movsl
fmuls
mov
and
push
dec
mov
int
and
lock
cli
mov
mov
jb
repz
sbb
xor
fbstp
adc
lea
inc
repz
scas
inc
or
mov
mov
fnsave
andb
stos
decb
push
push
adc
lahf
mov
jbe
stc
mov
std
test
adc
stos
push
test
cmp
cmp
into
testb
inc
adc
pop
les
xchg
scas
mov
out
cmp
and
fbld
insb
pop
cmc
xchg
xorl
mov
rorb
push
stos
stc
and
push
test
dec
mov
addl
popa
stos
or
or
push
adc
xchg
mov
setne
ja
adc
cmp
shrl
repz
pop
xchg
aad
ficomps
and
pop
and
rolb
addr16
and
rcl
popa
jne
dec
cs
ss
inc
mov
fisubrl
out
or
cmpsl
insb
test
mov
jg
fwait
push
cltd
jl
fisubrs
loope
mov
adc
scas
lods
or
ret
jnp
and
mov
xchg
jno
ja
push
jge
rcr
loopne
xchg
aaa
rcll
xchg
cltd
push
cmp
pop
dec
cmpsl
cmpsl
mov
xor
push
mov
push
pop
js
sbb
add
movsl
mov
lcall
cmpsl
lods
orl
pop
pop
ljmp
mov
pop
add
pop
pop
into
outsl
and
ret
out
insl
cmpb
sub
movsl
cltd
mov
push
push
mov
imul
aas
pop
dec
fdivr
or
cltd
rdpmc
repnz
hlt
mov
icebp
test
outsb
hlt
pop
mov
scas
mov
loopne
fs
pop
mov
test
and
jbe
gs
fcmovu
pop
xor
dec
in
dec
jo
or
pop
orl
push
inc
push
filds
lcall
sub
sub
mov
imul
pop
pop
call
mov
paddw
jb
mov
inc
add
pop
cltd
sbb
jo
pop
fbstp
std
mov
mov
add
jnp
and
jle
jmp
mov
mov
dec
cmp
inc
sti
jae
xor
testl
fsubl
push
inc
outsb
mulb
mov
cmp
pop
out
push
aam
mov
stc
test
mov
out
clc
mov
push
cs
pop
popf
cmpsl
insl
sbb
xor
adc
pop
call
mov
push
adc
sub
loop
inc
fucomp
pushf
fidivl
add
arpl
ds
pop
les
pusha
jmp
es
jmp
movsb
push
jnp
inc
cli
adc
ds
mov
jae
push
ss
jno
mov
in
jne
or
scas
movsl
into
dec
sbb
mov
lret
scas
popa
lods
out
aaa
jo
mov
inc
sub
adc
and
add
fnstenv
mov
jmp
push
jecxz
test
fsubl
mov
mul
sub
pop
ljmp
xlat
cli
jnp
jb
repz
lret
cmp
sub
push
inc
cli
fldcw
mov
pop
inc
bound
test
imul
mov
push
or
pop
inc
mov
ret
leave
push
push
lcall
in
xlat
pop
mov
or
jno
or
nop
dec
subl
repz
sti
les
push
adc
fcmovnbe
insb
push
pop
lods
jge
mov
aas
xchg
add
push
cmp
jnp
das
mov
sub
pop
push
fimull
lcall
xchg
cmp
jbe
addr16
idiv
xchg
or
or
mov
in
sub
shlb
outsb
int3
sarl
xchg
mov
lcall
lret
icebp
mov
push
out
les
jno
popa
in
scas
aas
cmp
jae
mov
cmp
sub
sub
cmp
lock
inc
inc
sti
and
and
push
pop
push
movb
loope
lret
shrb
inc
push
leave
xor
mov
xchg
jge
xchg
adc
sbb
mov
fstps
mov
cmp
or
xchg
cmp
push
lret
iret
insb
jecxz
sub
add
mov
inc
fcmovnu
mov
inc
mov
add
inc
test
cld
push
mov
mov
add
rcrb
ljmp
push
jnp
push
js
js
mov
pushw
nop
xor
add
cmc
gs
js
cmp
out
mov
sub
push
xchg
jecxz
sti
stos
leave
lcall
push
push
lds
and
sbb
aas
pop
ss
mov
cmpsb
sti
push
xchg
imul
add
inc
dec
or
xor
js
sbb
pop
inc
and
cltd
pop
inc
adc
push
cmp
push
rolb
jb
adc
ljmp
hlt
and
jbe
lahf
test
xor
test
pop
adc
mov
mov
push
jo
ret
mov
lock
mov
jns
jp,pn
cmpsl
xchg
sbb
xor
adc
out
dec
in
pop
dec
sbbb
mov
or
sbb
sbb
xor
xchg
popa
mov
sarb
pop
mov
fists
into
sbb
push
cmc
shll
push
add
cmp
push
into
pop
cmc
pop
sub
mov
sar
push
adc
ficoml
xchg
pop
dec
sti
iret
sbb
sub
fmuls
or
jae
xchg
dec
aaa
cmp
mov
pop
cwtl
stos
inc
imul
jl
push
ret
clc
and
hlt
push
jg
push
test
stos
orb
sbb
sbb
test
push
push
fisttps
xchg
icebp
add
movsb
sti
sarl
jb
iret
and
xor
lret
xchg
add
lret
dec
out
mov
lcall
inc
popa
jne
pushf
ss
add
cwtl
mov
push
cmc
aam
js
push
jae
lret
int3
ret
cwtl
sbb
xor
adcb
je
xchg
add
push
icebp
divb
test
pop
subl
xchg
xor
out
jge
testl
addl
loop
adcb
sbb
and
js
ljmp
mov
sub
cmp
sbb
dec
leave
mov
mov
sub
daa
inc
or
push
insb
and
sbb
lret
fiadds
add
mov
outsl
aaa
arpl
mov
addl
rolb
mov
push
je
leave
fdivrl
push
xor
repnz
cs
out
out
hlt
loopne
mov
sbb
icebp
xor
cmp
push
enter
cmp
mov
sbbl
insl
xlat
cmp
dec
es
pop
inc
js
cmp
jg
imul
xchg
into
push
sub
fcmovnu
aam
dec
or
xchg
push
gs
xor
div
lods
sub
into
or
loopne
and
mov
add
mov
mov
jbe
rcrb
out
xchg
bound
jmp
outsl
sbb
cmp
test
cltd
mov
inc
ja
mov
stos
das
mov
cli
cmp
mov
push
jg
sbb
push
pop
data16
xchg
cmp
jg
cmp
data16
mov
jge
movsb
mov
push
mov
push
out
data16
aad
sbb
xor
push
adc
movsb
adc
sub
and
insl
sub
add
sub
mov
and
jmp
xlat
aam
fnstcw
push
aam
push
dec
cmp
les
je
stc
aad
js
xchg
and
fwait
mov
mov
imul
mov
inc
loope
sahf
mov
rcr
in
pop
push
lea
sti
push
mov
cwtl
out
inc
stos
ficomps
and
hlt
enterw
or
orb
int3
pop
iret
inc
mov
filds
ja
cltd
sbb
push
pop
push
and
add
call
loopne
inc
inc
pop
popa
push
pop
jns
or
mov
test
mov
mov
cmp
sub
xchg
xorb
cmp
ja
out
enter
sub
jecxz
jbe
fwait
dec
test
aas
std
cmp
jecxz
bound
sti
mov
jecxz
or
add
movsl
cld
movsb
shrb
push
sbb
inc
adc
pop
adc
adcl
and
mov
sbb
in
jecxz
fsubl
movsl
inc
ds
test
cmc
into
fbstp
cmp
ret
xor
or
dec
xchg
daa
cmp
and
mov
xchg
fwait
rolb
lock
data16
or
fisubs
in
shrb
stc
jns
pop
xchg
and
jb
fisubs
outsb
frstor
xchg
pop
jecxz
dec
loop
cmp
sti
xchg
std
sub
sbb
xchg
jb
cli
in
sub
test
icebp
insl
shrb
and
and
push
cmp
dec
cmpsl
repnz
arpl
test
mov
aam
movsl
test
popf
mov
imul
mov
mov
sub
lds
and
imul
push
cmpsl
fadd
mov
or
xchg
jns
jle
cmc
gs
mov
cld
mov
jp
mov
les
aam
nop
and
lret
push
dec
and
xchg
mov
test
push
or
jg
cltd
push
sub
out
mov
mov
shrl
mov
pop
cs
or
insl
ret
cmp
dec
push
je
clc
scas
push
in
xor
inc
rorb
and
jne
inc
xchg
mov
or
jmp
into
fwait
pusha
inc
xor
movsl
cmp
xchg
fcomps
add
push
fldl
popf
and
sbb
mov
cmp
sbb
sbb
sub
jns
cmp
xchg
push
mov
sti
test
push
jmp
gs
lds
mov
dec
xor
add
pop
cmp
add
stos
adc
push
sub
push
pop
test
ds
shl
imulb
ret
sub
push
movsl
clc
outsl
std
push
jbe
xchg
rorl
insb
loope
ficomps
xchg
mov
adc
jbe
mov
mov
pop
xchg
addb
xlat
sti
push
cmp
sub
js
mov
mov
inc
rolb
addl
cli
testb
push
mov
lock
jb
dec
mov
popa
movsl
dec
or
sub
adc
ljmp
mov
scas
mov
jmp
sahf
ss
pop
and
dec
cltd
pop
cmpl
rorb
out
movsb
push
stos
ret
popf
xchg
mov
inc
dec
inc
lret
in
test
sbb
jmp
xchg
cli
mov
jl
lret
mov
jmp
imul
fstpl
push
ja
and
insl
ss
inc
xchg
fcmovnu
and
cwtl
push
add
cmpsb
insb
jnp
into
push
adc
mov
pop
fsubrl
insb
test
cmc
mov
mov
xchg
popa
movsl
jmp
mov
xlat
popl
adc
das
enter
xor
imul
sub
fimuls
in
xor
push
movsb
cmpsb
and
jae
and
popa
test
shr
in
insl
sbb
mov
jle
sti
adc
aad
push
push
mov
push
cmp
mov
fdivr
cmp
xchg
push
dec
lret
mov
lret
adc
or
cmp
inc
lds
js
xchg
fldl
mov
or
mov
jp
nop
cmc
in
shl
xchg
mov
add
and
jne
aad
adc
dec
adc
hlt
jp
pop
testb
mov
jnp
mov
aad
add
xchg
dec
push
stos
es
add
inc
std
rorb
out
out
rcl
push
lods
aaa
pop
push
mov
aaa
loop
cltd
push
inc
pushf
inc
sub
pop
ret
gs
mov
inc
and
xor
shll
jmp
fwait
jg
sbb
mov
dec
cmpb
xor
mov
outsb
xor
int3
and
mov
pop
adc
pmaxsw
add
int
dec
in
jg
addb
popa
packsswb
push
fldt
add
fdivrl
arpl
adc
push
or
inc
push
jae
mov
call
daa
fists
int
jne
repnz
ret
mov
jecxz
jb
rcl
lret
test
pop
adc
xlat
pop
mov
dec
fidivrs
test
mov
int3
insl
mov
in
and
push
jno
cld
mov
test
pop
lock
and
subl
outsb
imul
cmp
cmp
outsb
clc
push
mov
inc
sub
sub
mov
ljmp
dec
popw
mov
adc
mov
xchg
xchg
inc
bound
jmp
push
std
inc
nop
gs
mov
jbe
movsb
aas
out
jmp
fs
call
xchg
cltd
push
mov
pop
sbb
test
mov
sub
inc
fnstcw
cmp
push
adc
xlat
mov
call
fwait
mov
pop
or
and
jmp
and
mov
in
push
xchg
mov
loope
mov
loopne
inc
add
gs
and
cmc
pop
popa
jnp
sbb
jne
jecxz
add
into
sti
jle
sub
sbb
cltd
dec
xchg
xchg
leave
and
or
and
mov
in
inc
mov
jb
mov
mov
int3
loopne
rcrl
insb
add
jb
add
aam
inc
adc
lea
push
and
sahf
ja
sbb
mov
pop
orb
div
loopne
mov
in
loop
sub
bound
daa
mov
pushf
rcll
sub
pop
pop
stos
into
mov
cmpsl
add
cltd
or
xlat
mov
xor
outsl
mov
clc
mov
xchg
push
fdivrs
movsb
insl
clc
lcall
mov
add
out
dec
xor
xlat
imul
inc
mov
test
dec
pusha
push
mov
adc
pop
push
xor
inc
add
adc
mov
sub
pushf
test
and
iret
and
mov
mov
mov
fucomi
push
dec
push
add
enter
gs
sahf
pop
fsts
or
add
aaa
jg
jbe
push
loope
jno
mov
adc
mov
mov
push
cwtl
les
shll
pop
pop
insb
or
sbb
and
outsl
fwait
and
and
rclb
leave
and
push
jbe
sahf
xorb
mov
inc
pop
js
sub
movsb
xor
cmp
pop
aas
pop
or
sbb
mov
in
lcall
xchg
lods
testl
pop
mov
xor
lods
addr16
lea
mov
push
pop
sub
fmul
adc
std
mov
mov
inc
mov
fildl
rolb
sub
mov
subb
popf
ss
dec
xor
adc
data16
fsubrl
ret
xor
das
inc
sub
daa
push
jo
cltd
push
and
shll
and
and
sbbl
inc
orl
pop
mov
out
mov
jge
lahf
aaa
pop
jge
dec
or
xchg
sbb
cs
jno
and
cmpsl
test
sahf
dec
js
mov
das
dec
mov
pop
aam
pop
in
push
jmp
push
gs
xchg
or
add
clc
nop
xchg
lea
fadds
mov
xchg
sbb
push
outsb
in
lret
sahf
jecxz
inc
adc
das
rcll
dec
adc
pop
jecxz
ret
daa
xchg
or
clc
jl
xlat
mov
mov
loopne
in
sub
pop
ljmp
jns
addr16
push
mov
or
fcmovne
out
inc
testb
aas
push
push
int3
and
sbbl
fsubrl
fisubrs
sbb
xchg
mov
mov
int
dec
sbb
into
repz
pop
push
subb
pop
cmp
inc
pushf
arpl
cmpsl
inc
and
push
inc
dec
repnz
das
or
cmc
imul
xor
xchg
es
lea
icebp
dec
imul
jp
repz
scas
in
imul
jae
sbb
jg
lea
mov
xchg
hlt
and
mov
cmp
pop
xlat
in
inc
pop
pusha
f2xm1
je
loopne
cld
mov
inc
jbe
sub
xchg
jmp
dec
sub
dec
cli
adc
lock
xor
ljmp
stos
push
adc
add
pusha
sbb
jge
dec
pop
sub
mov
push
pop
push
je
or
shrl
add
cwtl
xor
loopne
insb
gs
cmpsl
xchg
popf
push
lret
xor
mov
cli
fiadds
inc
js
movsl
push
and
inc
in
dec
pop
sub
adc
rorb
out
inc
sti
test
fidivrl
pminub
std
imul
out
xchg
jnp
add
xchg
leave
int
mov
add
push
out
or
mov
xchg
aaa
leave
sbbb
popf
xlat
popa
sub
or
lcall
inc
js
lock
and
dec
adc
push
pop
stc
xchg
das
mov
xchg
hlt
jecxz
enter
sbb
push
rcr
sarl
or
shll
cmp
jae
jnp
dec
mov
nop
add
add
sub
imul
sub
and
and
scas
ds
push
rcll
dec
sbb
xchg
mov
xor
sub
add
and
xlat
xor
in
push
sub
ljmp
call
stc
ja
cmp
jnp
in
lods
out
and
popw
or
mov
popf
hlt
cli
setno
or
fisttps
adc
lcall
fimull
push
popf
je
idivl
std
jge
lea
dec
push
icebp
push
push
ret
xor
mov
fdivp
dec
pop
rcr
leave
xchg
mov
out
mov
in
lods
int3
int3
stc
mov
loop
pop
and
dec
sub
mov
das
or
push
cld
jl
aaa
gs
and
lds
jg
dec
ret
fdivl
cs
out
aam
sbb
ja
aas
inc
sahf
test
xchg
xor
or
cmp
cmove
mov
ja
cld
pop
sub
push
xchg
pop
je
in
sbb
lods
adc
int3
movsw
jmp
ds
or
mov
jnp
stc
xchg
add
int3
pop
inc
adc
movsb
paddd
adcb
mov
sbb
and
lahf
and
out
int3
cli
cmp
sarb
jg
sub
cltd
aas
and
mov
cli
ret
icebp
push
rorl
and
or
pop
testb
adc
out
pop
or
sarb
shrl
cmp
inc
outsl
arpl
iret
cmpsb
aad
jmp
jmp
out
jp
mov
lahf
pop
mov
mov
fwait
scas
sbbb
lods
pop
inc
mov
call
mov
inc
sarl
cltd
jb
out
xor
jne
sub
mov
loope
inc
mov
pushf
int3
cmpl
mov
mov
push
xchg
sub
fidivrs
decl
fdivrl
jb
mov
rorb
leave
push
jb
pop
mov
mov
femms
cmpsl
or
jl
stc
jmp
pop
cmp
dec
repz
into
pop
push
adc
movsb
xchg
bound
shlb
pop
test
add
outsb
add
imul
inc
push
inc
in
mov
sub
lret
lods
imul
inc
sbb
push
pop
lret
and
cmp
and
mov
xor
lds
push
testb
sub
xor
cmp
mov
or
popa
incb
and
cltd
addr16
and
sub
push
std
dec
enter
xchg
mov
pop
or
in
mov
jae
mov
push
inc
xor
push
mov
pop
lret
shlb
cmp
daa
push
imul
mov
es
inc
das
fidivl
pop
dec
lcall
or
in
cmp
mov
adc
dec
bound
sti
loopne
cld
jecxz
clc
jb
sub
jne
push
push
jo
or
cmp
stos
adc
sbb
jle
hlt
loopne
insl
call
inc
add
mov
or
add
sub
pop
sar
addr16
push
jl
jno
or
jnp
ret
hlt
sbb
and
pop
xchg
sub
pop
add
out
movsb
inc
jno
or
imul
dec
or
mov
outsb
stos
or
inc
pusha
or
ret
repz
insl
out
ja
cmp
mov
sbb
and
fildll
sbb
mov
testb
pusha
aaa
pop
test
mov
cwtl
jne
stos
xchg
cld
push
inc
mov
rorl
enter
sub
lcall
mov
push
fcomps
push
push
out
fimuls
push
jecxz
mov
mov
add
mov
gs
jl
lods
mov
mov
pop
pop
jg
dec
cli
cld
push
push
sub
lcall
stos
jecxz
dec
mov
jge
mov
push
dec
ljmp
sbb
xchg
loop
dec
lea
jg
and
test
out
ret
ficomps
dec
popf
pop
mov
mov
jns
inc
cmc
inc
mov
sbb
dec
jmp
adc
andl
jge
stc
insb
pop
insl
inc
mov
xor
clc
mov
stc
add
out
sti
addl
in
xchg
pusha
adc
xchg
loop
fs
sbb
push
test
sub
mov
mov
mov
fs
repnz
cltd
gs
inc
mov
in
cwtl
xchg
sub
fnstcw
push
scas
push
add
mov
jl
ret
push
iret
and
test
and
mov
mulb
imul
mov
lods
fsub
cmc
cmpsl
pop
add
or
xchg
lret
outsl
inc
shrl
xor
lea
add
clc
xor
sbb
add
es
jo
ja
das
adc
push
xor
mov
jb
dec
sbb
sub
pop
sub
adc
imulb
sbb
xchg
inc
ss
mov
sbb
sahf
and
cmc
cmp
push
sbb
and
jb
enter
sarl
movsl
insb
xor
pop
inc
flds
cmp
and
addr16
push
enter
adc
sub
ret
out
dec
push
jne
lds
or
inc
push
xchg
or
sub
dec
adc
push
inc
push
mov
fbld
mov
outsl
xchg
sub
xchg
xor
sub
xchg
es
cld
ret
add
jns
sbb
mov
inc
jb
or
in
sub
cmpsb
sbb
inc
in
xor
fnop
insb
jg
mov
das
pop
sub
inc
mov
mov
pop
into
add
cmpps
sub
mov
mov
lcall
lret
faddl
aas
rcr
push
pop
mov
and
lcall
xchg
movsb
aas
popf
leave
pop
bound
and
lcall
mov
mov
mov
arpl
cmp
sbb
andl
push
test
add
xchg
enter
sbb
lea
ret
outsl
pushf
sbb
sub
pop
ss
mov
popa
jne
sub
dec
pop
or
ficompl
mov
orl
push
xchg
enter
jmp
and
popa
push
outsl
add
mov
push
imul
std
lock
xchg
mov
inc
lods
push
movsb
jb
test
aad
push
add
and
cmp
in
testb
pushl
ljmp
xor
sub
leave
sbb
ret
add
cmp
mov
sbb
nop
fstpl
fimull
pop
mov
mov
sub
fbstp
mov
push
je
pop
xlat
movsl
dec
insb
adc
incb
popa
fs
cmpl
or
mov
cmp
cmp
pop
std
sub
sub
das
inc
cmp
fcmovnu
dec
sbb
sbb
mov
pop
movsb
out
push
xchg
cmp
mov
cwtl
jge
popl
xchg
jge
mov
mov
mov
fwait
ds
push
dec
stc
lahf
inc
ljmp
fxch
pop
fs
inc
push
sbb
in
out
fildll
into
cli
xor
jg
sub
fdiv
call
nop
inc
cwtl
std
rcll
cmp
clc
lea
sbb
push
ss
es
sbb
test
imul
cmp
aas
adc
push
ret
pop
lahf
or
xchg
ud0
cli
adcl
rorb
push
add
gs
add
jno
ret
pop
dec
sbb
mov
ljmp
fs
jo
jle
cwtl
lret
arpl
pop
test
aam
sub
lods
or
pop
xchg
fmuls
stos
xor
xchg
xor
subb
dec
fwait
repnz
test
cmpsl
pop
ffree
pop
xchg
rcll
cs
inc
inc
fistl
ljmp
arpl
sub
mov
dec
jne
inc
sbb
adc
aad
stos
nop
adc
sbb
jae
pop
sub
test
fcomps
ljmp
lds
daa
and
loop
xchg
dec
pushf
and
add
jmp
cld
push
imul
and
mov
inc
xor
ret
lret
adc
cmp
and
das
mov
loopne
jp
lock
mov
inc
dec
movsl
inc
sbb
adc
lea
out
jae
or
pop
and
out
test
rorb
and
rolb
cli
and
out
push
adc
in
jne
nop
jp
scas
add
std
je
es
repz
push
pop
sbb
mov
push
movsl
inc
enter
in
loopne
sub
mov
out
xor
in
je
popf
es
pop
daa
mov
jle
cmp
inc
in
test
pop
mov
inc
pop
lock
ja
inc
je
iret
bound
adc
jl
sahf
sub
repnz
xor
lock
cmp
adc
inc
cmp
sub
sub
arpl
pop
jo
sbb
pop
test
xchg
test
mov
push
pop
stos
push
cmpsb
push
dec
mov
ror
cmp
dec
lcall
mov
lea
test
xchg
fisttps
lret
or
or
add
mov
leave
pushf
xchg
mov
in
outsb
loope
les
and
sbb
inc
jl
movsl
cmp
mov
xchg
sub
addb
pop
iret
out
scas
loope
dec
inc
mov
push
in
adcb
xor
daa
push
xchg
mov
inc
inc
or
push
mov
and
sar
repz
inc
dec
fiadds
adc
fbstp
call
pop
pop
lret
adc
add
adc
mov
je
inc
sbb
pop
add
dec
test
pop
cmp
mov
jne
pop
pop
ret
sbb
stc
jl
leave
sarb
sti
xchg
dec
movsb
das
add
mov
push
rorb
jecxz
outsb
sub
cmp
lea
loop
es
mov
pusha
sub
push
pusha
inc
sub
out
fneni(8087
xor
jno
lods
js
jns
lcall
addr16
cmpsl
leave
pop
xchg
hlt
mov
sbb
mov
add
shll
jmp
insb
out
lea
xor
aad
repz
dec
xchg
mov
in
rorb
jbe
lds
push
cmpsb
imul
inc
out
xchg
loope
shlb
pop
pop
sbb
and
adc
fistpl
aad
adc
loope
dec
outsb
jecxz
aas
hlt
cmpsl
xlat
js
sub
push
mov
sahf
stc
push
lock
push
leave
xchg
lods
inc
inc
sbb
mov
lods
in
cmp
repnz
hlt
addr16
add
xchg
rolb
mov
adc
mov
ljmp
pop
shl
xorb
push
lods
stos
loope
addb
cmp
xchg
lahf
and
outsl
cmp
scas
jl
and
mov
adc
aam
xlat
push
test
jmp
dec
cld
add
and
inc
fsubrs
pop
inc
mov
pop
lods
mov
ljmp
test
addr16
mov
aas
sti
arpl
shrb
and
leave
cmpsl
sub
pmaxub
andb
mov
rcrb
add
imulb
cmpsl
jns
dec
ds
xchg
inc
push
mov
stos
or
out
mov
adc
scas
repz
lahf
xchg
lret
cmp
mov
adc
in
mov
lods
adc
or
mov
test
inc
adc
pop
ss
mov
pushf
imul
lods
leave
push
push
inc
pop
sub
cs
repz
push
xor
test
mov
sahf
popf
push
stos
andl
xchg
sub
jmp
rcpps
loope
stos
das
stc
lods
je
imul
or
inc
ljmp
mov
inc
sbb
mov
nop
pop
lods
jp
cmp
mov
mov
or
out
mov
cs
pusha
cltd
dec
enter
mov
imul
int3
dec
push
out
pop
jne
adc
pop
cmp
out
push
cmc
shlb
std
push
sub
mov
sbb
movsb
dec
add
sar
mov
scas
dec
or
imul
push
fs
pop
xchg
push
pop
pop
addr16
cmpsl
jns
and
add
ja
les
inc
iret
cwtl
mov
lods
pop
push
cmp
pop
arpl
mov
jno
sub
and
iret
pop
jnp
dec
ja
pop
dec
push
pop
stos
push
cmp
in
cmpsl
mov
subb
lods
loope
mov
cmp
mov
lods
xchg
xor
mov
push
sbb
mov
in
call
ds
xor
cmpsl
div
jl
mov
mov
jns
or
addr16
out
mov
push
jl
cmp
push
lods
push
sbb
andb
dec
iret
adc
je
push
xor
popa
ret
shlb
push
mov
negl
xchg
jb
pop
sub
dec
mov
mov
out
mov
lcall
or
pop
jg
jg
data16
inc
mov
sbb
xor
fs
mov
arpl
gs
lock
mov
inc
jg
jo
imul
dec
mov
mov
push
mov
xor
adc
cmpsl
rcrb
outsl
xchg
inc
outsl
inc
xchg
push
pop
mov
loope
movsb
lods
pop
mov
adc
test
adc
dec
push
xchg
jmp
xor
enter
mov
xchg
jg
jge
xor
lea
push
xchg
lods
dec
push
mov
cmpsb
mov
and
jne
std
std
mov
scas
fdivl
fidivs
std
mov
out
in
shrl
stos
out
mov
mov
or
aam
stos
mov
mov
cli
ss
out
inc
repz
sub
subb
cmpsb
or
ljmp
out
jo
pop
jno
int3
pop
jno
lcall
call
stos
xchg
lock
mov
bound
aas
add
outsl
ret
xchg
mov
mov
push
ret
pop
mov
roll
out
sbb
cmpl
xor
add
pop
test
sbb
sub
ds
mov
mov
sbb
xchg
loopne
xchg
mov
push
push
adc
mov
mov
pop
or
in
xor
adc
inc
cwtl
popa
inc
sub
rcr
jne
stc
ljmp
outsl
icebp
cli
mov
test
mov
mov
inc
setb
sahf
pop
das
push
call
dec
xchg
push
lret
inc
and
daa
dec
and
pop
inc
bound
lea
or
loope
adc
lock
fbstp
dec
xor
sbb
nop
imul
mov
jnp
sbb
pushf
sub
icebp
enter
cld
jo
lcall
fnstenv
jecxz
jg
mov
push
mov
mov
mov
shr
push
inc
mov
outsb
inc
rorl
adc
fs
in
jg
sahf
push
rcl
add
pop
sub
sbb
dec
rcrb
sti
mov
inc
call
sbb
mull
and
jecxz
inc
xor
xor
mov
in
xlat
inc
mov
cmp
inc
hlt
or
inc
push
frstor
lret
sbb
or
cmc
pop
add
push
add
cmpsb
lea
xchg
repz
out
adc
mov
loopne
pop
sub
mov
lahf
mov
inc
pop
mov
sub
mov
fadd
push
fistpll
cmp
aad
push
lret
mov
cmp
adc
pop
repnz
cmc
mov
cmpsb
mov
inc
jmp
mov
and
sub
pop
int3
in
loop
mov
or
in
cmp
adcl
clc
add
addr16
cmp
mov
cmp
mov
cmp
repz
jno
mov
sub
jp
in
sbb
xchg
or
push
and
divb
inc
jae
ljmp
xor
jns
cmc
xor
mov
rcrb
mov
pop
gs
sub
jo
mov
ljmp
imul
mov
jnp
and
mov
shrl
pop
mov
pop
pop
pop
in
in
mov
jmp
sbb
jnp
jge
lods
fcoml
js
xchg
cmp
les
cmpb
lea
sub
mov
sbb
enter
fimuls
sbb
stos
ds
mov
loopne
jp
nop
stos
hlt
xor
adc
lret
hlt
and
push
cmp
push
gs
lret
prefetch
mov
push
loope
aam
fstp
loope
rorl
xor
scas
inc
adc
xchg
sbb
xor
popl
inc
stos
mov
sbb
repnz
xor
cmpl
sbb
cmpl
fs
test
mov
ljmp
nop
inc
pop
jns
stos
lea
idivl
sbb
sbb
fisubrs
and
push
fcomps
gs
je
ljmp
push
aad
xorb
repnz
mov
jle
inc
or
in
cld
jae
xchg
push
push
insb
or
add
cmpsl
sub
in
mov
xchg
pop
data16
outsb
daa
sub
xchg
xor
push
inc
sbb
pusha
xor
push
adc
sub
sbb
sub
jmp
jp
push
sub
cmpsl
push
jnp
sub
pop
cs
and
cmp
addr16
inc
or
inc
inc
jbe
pusha
sbb
int3
cld
lahf
pop
loopne
xchg
jl
sbb
daa
ret
sub
mov
xchg
inc
je
jecxz
stos
push
test
inc
repz
fsubrl
dec
adc
inc
fdivrl
nop
mov
mov
or
loopne
or
ret
cs
pop
sbb
inc
mov
fwait
xor
add
add
dec
adc
jg
outsl
add
add
xor
fcomps
mov
jg
lret
cld
jo
adc
push
or
inc
mov
xor
pop
lcall
mov
push
jp
add
dec
and
sbb
out
fistps
daa
xchg
aad
sbb
sbb
stc
xor
jbe
arpl
dec
jp
xor
push
mov
xchg
push
int3
xor
mov
fistpll
popa
push
and
loope
insb
add
fwait
addr16
mov
out
mov
aas
enter
gs
jne
ret
xchg
ds
mov
cmc
jns
out
add
into
loop
sub
mov
mov
xor
mov
mov
pop
xchg
pop
or
pop
divb
and
stos
xor
jns
mov
mov
fwait
xchg
test
pop
test
inc
jmp
in
loop
push
and
packuswb
adc
and
and
mul
daa
movsb
pop
ja
mov
xor
fisubrs
jae
xchg
jg
inc
lret
and
scas
mov
jbe
sub
stc
repnz
push
xor
pop
xchg
add
cmp
test
and
push
xchg
pop
mov
fptan
aad
movsl
test
dec
push
dec
ffreep
scas
add
inc
jmp
cmc
pop
sub
icebp
fwait
mov
sub
push
jno,pt
test
jecxz
pop
mov
mov
xchg
dec
lahf
lea
adc
jae
test
xor
scas
lods
sub
mov
inc
push
cld
inc
jnp
loope
pop
fisubrl
push
adc
scas
xchg
nop
push
sbb
mov
add
xor
loopne
mov
fnstcw
lock
fsubl
mov
dec
jnp
mov
xor
js
xlat
mov
pushf
mov
mov
pop
stc
cmpsl
in
pop
mov
pop
test
addr16
gs
test
cmpsb
jo
add
sti
fildll
sti
repz
mov
jle
push
stc
inc
stos
lods
adc
gs
addr16
lcall
mov
xchg
iret
sbb
repnz
fsubl
dec
subb
xchg
mov
out
inc
and
push
and
push
mov
imul
sbb
mov
pop
call
xchg
xor
jmp
sbb
call
and
sbb
enter
sub
out
mov
fnstenv
lods
cmp
and
push
movsl
pop
sbb
jmp
sbb
fwait
push
jo
outsl
xor
xchg
sti
or
or
and
cmp
xor
outsb
bswap
mov
imul
mov
and
cwtl
mov
dec
fcoml
mov
cld
dec
imul
mov
jecxz
aam
ss
xor
mov
mov
fistpl
mov
mov
push
push
xchg
push
stc
fmul
jl
lret
mov
xchg
dec
or
mov
pop
mov
les
xchg
outsb
imul
or
lods
xchg
sub
in
adcb
popa
mov
inc
or
pop
fisttpl
arpl
addr16
mov
pop
or
push
mov
hlt
cmp
test
xor
sahf
push
shlb
into
add
rcll
and
gs
jno
xor
jo
lahf
notb
bound
mov
jge
stos
push
aad
lahf
mov
jb
mov
fstl
rorl
js
adc
mov
jmp
add
jo
cmpsb
inc
outsb
cld
or
rolb
and
lahf
pop
out
outsl
lret
shrl
pusha
jl
loope
ret
fdivs
jg
inc
or
push
dec
addr16
loope
dec
dec
and
or
movsb
jle
mov
iret
mov
rol
rolb
stc
loope
fs
and
daa
les
jg
jl
addl
aaa
push
fwait
jg
and
jb
or
add
xor
sub
mov
andb
mov
sbb
scas
push
ret
mov
ret
mov
dec
or
jp
mov
cmpsl
inc
pop
dec
sub
or
inc
fcmovnu
xchg
jl
loope
clc
and
and
gs
fst
mov
cmp
in
lock
jno
flds
xchg
icebp
inc
mov
inc
pop
sub
ds
cmc
pop
iret
push
add
movsl
negb
arpl
cmp
xchg
jb
cmp
xchg
clc
sti
test
or
rorl
out
addr16
sub
adc
repz
pop
mov
jecxz
fscale
xor
cld
in
scas
xbegin
popa
or
fldt
cmp
cmp
cmpsb
cmp
scas
repz
ds
fnstcw
dec
popa
push
loopne
imul
ss
ds
xor
xor
mov
mov
shlb
shrl
xor
lahf
mull
mov
xor
mov
xor
sbb
andb
cli
shlb
xlat
inc
jbe
xchg
test
cmp
gs
sbb
andb
mov
sub
lods
jmp
shrl
imul
es
add
ljmp
mov
and
stc
imul
jecxz
shrl
insl
dec
mov
iret
or
mov
mov
adc
add
stos
insb
scas
jne
cmc
add
and
jns
jp
stc
arpl
stc
mov
sub
push
cmpsb
mov
inc
pop
ret
ret
pop
sbb
shlb
push
xchg
mov
jno
cmpsl
mov
push
inc
mov
add
repnz
in
jl
push
mov
out
jb
jl
call
push
addr16
in
mov
xor
push
mov
lcall
xor
mov
xor
arpl
xchg
outsl
fidivrl
ljmp
push
push
dec
fdivs
fstl
or
aad
dec
ret
subl
jg
sub
push
dec
test
test
jbe
in
fs
or
pop
xlat
ja
jge
js
shl
cld
xchg
call
std
push
sbb
and
mov
cmp
xchg
sbb
add
adc
lcall
popa
mov
popf
stos
movsl
loopne
jge
mov
adc
xchg
fwait
hlt
push
into
in
imul
mov
inc
jle
xchg
xchg
rclb
jb
xchg
lock
push
inc
xlat
rclb
mov
clc
sub
out
aam
stos
in
cs
pop
mov
imul
fsubrs
lahf
fwait
mov
push
nop
addr16
push
pushf
and
or
xor
inc
or
outsb
mov
ds
fstl
ja
lock
pop
movsl
add
out
clc
sbb
ja
adc
test
adc
jge
adc
push
sbb
add
leave
add
fistl
jmp
cs
out
pmullw
cs
xlat
cltd
dec
xor
jae
loopne
mov
push
gs
mov
stos
adc
into
fadds
mov
lahf
pop
arpl
mov
lret
push
or
pushl
pop
sbbb
pushf
mov
repz
aam
sbb
or
or
and
lret
aad
jno
push
inc
add
mov
movsb
sub
mov
orl
cmp
pop
or
sub
adc
lods
add
int3
movsb
test
testb
adc
out
cwtl
imul
call
mov
dec
inc
stc
sub
fildl
test
xor
js
push
or
clc
fisttpll
or
cwtl
jmp
pop
outsl
fwait
mov
fdivrs
je
mov
or
shll
test
sbb
stos
pop
jge
cmc
je
lcall
fs
mov
test
into
jbe
cmp
mov
mov
test
or
outsb
sub
jbe
sahf
rorb
aad
jns
dec
jnp
dec
xchg
fst
sub
pop
jle
inc
mov
cmp
push
aaa
aam
ret
bound
pop
pop
push
nop
and
mov
add
adc
scas
jae
sbb
cs
pop
gs
icebp
sub
sub
lds
sbb
scas
add
push
pop
cmpsb
shlb
or
aam
mov
pusha
mov
es
add
jmp
pop
dec
dec
ljmp
sarb
xor
push
fdivrl
rolb
sub
fstps
jo
mov
loopne
lods
push
std
pop
and
push
xchg
jg
lsl
sub
jle
out
insl
mov
je
push
stos
in
mov
fcmove
push
iret
addr16
sub
nopl
xchg
imul
pusha
add
push
fstl
clc
clc
inc
xchg
out
testb
mov
mov
test
cmp
mov
jmp
mov
addr16
mov
pop
mov
in
xchg
inc
push
stos
sbbb
mov
loop
cmpsb
cli
pop
push
inc
scas
cmp
movsl
xlat
push
and
in
or
push
stos
cmp
xor
daa
jle
dec
fsqrt
jo
rcl
xor
aad
in
dec
or
lcall
cmp
sti
cwtl
mov
insb
les
movl
add
mov
test
adc
jp
mov
and
mov
mov
xchg
xchg
mov
je
push
jmp
mov
popf
ja
lods
mulb
jno
cmpsl
push
pop
push
fwait
xchg
sti
shll
hlt
mov
insb
outsl
out
loope
ljmp
loopne
xor
pop
ss
aam
xchg
loope
adc
add
cmp
adc
stos
lcall
gs
inc
adc
mov
jg
repnz
in
les
fidivs
push
outsb
js
lock
les
loope
test
xor
mov
add
xchg
inc
into
jno
roll
push
fwait
sbb
sbb
repz
and
dec
xchg
popa
bound
rcrl
push
pop
enter
pop
sbb
je
xchg
mov
push
and
mov
and
add
add
jo
and
sub
jb
adc
lds
pop
xchg
cli
jle
repz
call
test
pop
fldcw
push
pop
mov
sub
push
std
cmp
outsb
xchg
sub
sbb
mov
xor
das
pushl
push
cwtl
das
push
xor
add
in
and
pushf
xchg
andl
and
mov
xchg
mov
mov
mov
push
fdiv
pop
cmp
loop
fwait
add
xchg
aaa
push
mov
jecxz
mov
pop
cld
and
test
mov
mov
sub
sbb
xrstors
cmp
scas
mov
dec
adc
int
loope
popf
xchg
out
out
lcall
iret
add
push
ds
loope
jbe
mov
pushf
push
push
pusha
adc
in
jno
lock
dec
jmp
jl
sbb
fistpl
iret
mov
mov
lahf
shll
shlb
decb
push
and
xchg
sti
ror
mov
mov
loop
adc
xchg
rcll
ss
lods
mov
push
das
mov
dec
imul
mov
dec
out
xchg
add
xor
sbb
mov
xchg
cmpsb
sti
pop
pop
out
lahf
push
dec
loop
inc
data16
sub
xchg
popl
out
stos
and
pop
loop
icebp
sbb
out
adc
xchg
mov
xchg
mov
repnz
xor
and
dec
cmpsl
mov
and
mov
bound
outsl
leave
xchg
cmp
sub
dec
cs
push
repnz
dec
inc
mov
jge
in
fcoms
fnstcw
xchg
mul
insb
icebp
ret
rorb
mov
lods
jb
test
mov
push
popa
popl
gs
pop
sub
rorl
add
adc
or
mov
stc
jns
out
lods
adc
cltd
pop
loopne
jecxz
sti
popa
jl
popf
je
dec
jge
push
jecxz
movsb
lret
in
out
data16
adc
push
jne
jb
mov
sub
dec
stos
mov
xor
leave
fiadds
int
xchg
into
popf
mov
aam
and
push
push
out
out
testl
mul
or
fidivl
xchg
gs
pop
pop
fisubrs
loope
mov
out
push
lret
cli
lcall
addr16
sub
roll
pop
inc
out
ror
lds
leave
jne
jle
outsb
std
neg
int3
lods
rolb
xor
mov
and
enter
push
push
inc
out
dec
stos
xor
imul
xor
xchg
fwait
sub
mov
dec
cmp
or
addr16
sub
mov
stos
fmul
shrl
cltd
mov
ret
adcl
bound
pushf
clc
lods
xchg
mov
mov
jae
subl
cmpl
out
test
xor
pop
push
jecxz
cwtl
jns
jnp
sub
add
into
jp
stos
in
xchg
sub
lcall
pop
add
dec
xchg
xlat
pop
mov
sub
add
xor
imul
dec
push
pop
mov
mov
insb
test
xchg
nop
rorl
jb
sub
shrb
in
mov
mov
fdivrp
or
pop
jg
pop
jno
inc
stos
cld
fldt
scas
fsubrs
fistpl
pop
xchg
pop
xor
inc
lcall
pop
fisubl
adc
stos
inc
inc
jmp
inc
data16
nop
sub
xor
std
insb
into
aaa
icebp
lcall
lea
push
add
fmull
mov
gs
test
sbb
dec
mov
int
push
jecxz
int
std
ret
stc
je
scas
inc
pop
in
jo
clc
lret
out
lods
pusha
std
xchg
test
js
pusha
int
adc
inc
rolb
and
imul
push
inc
pop
decb
mov
cmp
shll
sub
js
mov
mov
pop
aaa
cmp
je
fnstcw
sbb
je
adc
nop
scas
adc
jmp
sbb
dec
sub
das
lahf
jbe
and
sub
fsts
repnz
push
push
jge
fwait
sbb
pop
mov
mov
mov
aaa
fmull
mov
inc
adc
mov
inc
or
decb
ror
in
add
mov
test
pop
or
mov
cltd
sbb
es
pop
jg
mov
push
fsubrl
jecxz
jae
aam
add
mov
sahf
outsl
push
mov
cli
pop
push
lods
loopne
fucomip
jle
sbb
lods
sbb
idivl
dec
mov
adc
jmp
mov
clc
pop
outsl
mov
in
sti
fwait
es
xor
outsb
add
jne
sbb
imul
sahf
movsl
and
cmpsb
xchg
fimull
and
rorb
cmp
pop
push
lods
outsb
xor
shlb
mov
or
mov
xor
jns
dec
inc
pop
and
jge
jg
xchg
js
xlat
inc
imul
and
and
div
out
push
dec
daa
cwtl
sub
sub
ret
notb
mov
cmp
pop
in
scas
es
outsb
mov
dec
sarl
stc
or
xchg
xchg
out
dec
out
xor
test
sub
cmpsb
add
int
addr16
push
data16
clc
push
shld
int3
mov
xlat
pop
imul
in
sbbl
cltd
add
ret
in
fs
mov
scas
out
cmpsl
jne
pop
jno
mov
cli
aam
je
loope
push
movsl
movsl
cli
push
fwait
mov
je
add
js
lds
cmpl
lea
lcall
sbbb
hlt
push
sub
xchg
fcmovnbe
adc
inc
outsb
lcallw
rcll
filds
xchg
or
pop
push
out
js
cwtl
arpl
jp
mov
mov
cmpsl
lock
iret
es
jo
sbb
les
xchg
jae
enter
icebp
dec
pop
stc
add
inc
dec
push
push
fs
incl
addb
push
add
pop
push
sub
pop
xor
leave
cmovnp
pop
sbb
sbb
cmp
jo
pop
loop
cmp
jp
xor
sti
icebp
sbb
mov
push
fistl
push
xor
into
xor
jns
xlat
add
sbb
cmp
fnstcw
loope
xchg
sbb
inc
or
pop
fsts
test
sub
mov
fistps
ficompl
xor
jp
cmp
cli
rcll
mov
mov
call
jge
insb
mov
std
test
dec
xor
cmp
subb
hlt
xor
cmp
cli
xor
pushf
or
clc
sar
in
andb
xor
push
mov
out
rcrl
addl
jne
scas
insb
call
lahf
rorb
xor
inc
fnsave
lret
lock
in
hlt
dec
loopne
rcrb
in
pushf
lahf
inc
push
mov
int
stos
add
push
test
mov
js
pop
and
push
in
mov
out
mov
jne
cmp
es
xor
pcmpeqd
iret
scas
fs
bound
xor
jae
and
roll
sub
out
ljmp
mov
push
cli
mov
adc
pop
pushf
sbb
jmp
in
sbb
mov
imul
jge
outsl
out
sarl
mulb
pop
mov
je
push
and
addl
rorl
mov
adc
or
cmc
out
mov
xchg
aas
idivl
dec
iret
popa
xor
push
int3
out
test
movsl
frstor
sarl
jle
sub
xlat
sub
cmp
repnz
mov
fucom
fs
xor
xchg
sbb
mov
cmp
xchg
or
jg
mov
aas
jnp
push
aaa
fdivrl
lret
or
dec
mov
stos
push
xchg
out
fadds
aas
lock
test
mov
xchg
jg
add
pop
cmp
inc
push
sub
test
push
sar
loopne
add
fists
addr16
push
addb
inc
cmc
fsts
call
xorb
xor
fwait
xor
outsb
ret
gs
dec
jge
lock
jl
or
jecxz
xor
mov
pop
cmc
int3
nop
fdiv
push
clc
mov
out
jge
mul
or
jg
adc
xchg
xchg
sarl
jbe
ss
sbb
mov
mov
sbb
shlb
pop
je
stos
ds
sbb
add
mov
pop
mov
mov
je
sahf
sub
rorb
sub
pop
xor
movsb
inc
popa
repnz
jne
test
push
mov
pop
lea
inc
fimull
repnz
sarl
mov
and
ljmp
xor
push
loop
push
jl
aaa
jecxz
movsl
add
inc
in
cwtl
push
add
scas
jle
fcoms
out
dec
add
outsl
shl
mov
jl
xchg
in
pcmpeqw
inc
adc
mov
mov
fcoml
cmpl
cmpsl
clc
arpl
pop
cs
in
aaa
daa
jecxz
push
jg
xchg
cmc
les
sbb
inc
dec
jp
cmpsb
pop
cli
sbb
xchg
jo
sub
sub
mov
jae
inc
push
movsb
or
dec
nop
into
mov
cwtl
mov
rolb
sub
mov
jmp
sbbb
lret
add
scas
xchg
adc
clc
test
ss
pop
fsub
xchg
pop
sub
and
push
xchg
notl
loopne
jne
popl
mov
movsl
and
jnp
jnp
jnp
mov
arpl
pop
lods
xchg
lods
les
mov
jg
pop
sbb
fwait
jns
ja
mov
xchg
in
xor
aaa
sub
orb
cmp
out
cli
cmp
cwtl
and
and
add
and
sub
push
cmpsb
sahf
jbe
xchg
xchg
mov
cmp
ret
cmp
rcl
popf
test
pop
sub
in
je
loop
pop
xchg
mov
je
arpl
or
pop
jne
dec
dec
sub
xlat
pop
jmp
iret
xorb
pop
leave
adc
shll
jecxz
dec
push
add
jmp
mull
adcl
or
jl
and
inc
dec
data16
xchg
cmpl
bound
fwait
cld
aam
sub
loopne
mov
jecxz
xchg
mov
mov
jle
lahf
mov
cld
ret
stos
jecxz
or
cltd
sub
aam
or
dec
push
mov
scas
xchg
pop
mov
mov
mov
cmp
add
adc
jle
cwtl
aam
decl
ljmp
mov
mov
jmp
fnstenv
xor
cmp
loopne
sti
sub
dec
xchg
lcall
push
lea
jl
hlt
inc
mov
repnz
loopne
mov
push
or
push
out
sub
and
adc
sbb
adc
shlb
pop
in
nop
add
lods
ds
or
jecxz
sbb
and
mov
mov
outsl
mov
ret
or
add
add
inc
pop
or
rorb
xor
ljmp
sub
stos
push
mov
dec
nop
and
outsb
mov
cmc
or
xchg
pop
jbe
popf
pop
aaa
out
aad
pop
add
into
mov
mov
push
enter
test
rcll
jne
add
repnz
scas
push
scas
adc
jb
daa
dec
sbb
out
std
push
das
std
lock
popf
rclb
sbb
xchg
ss
scas
xor
dec
jl
jnp
stos
adc
enter
popa
pop
sub
pop
ficoml
cmpsl
sbb
ss
sbb
mov
sahf
xorl
and
mov
dec
sub
push
clc
aaa
sub
es
sbb
call
iret
or
ds
popf
mov
das
hlt
test
push
cmpsl
clc
mov
hlt
xorl
push
leave
icebp
mov
jo
popf
movsl
mov
mov
lock
ljmp
adc
jb
pop
xchg
pushf
push
pop
push
adc
jp
into
sarb
push
ds
jg
in
sbb
sbb
sbb
mov
xlat
or
stc
dec
dec
jb
mov
mov
nop
pop
fistps
jbe
xchg
mov
in
and
jp
jle
inc
jp
fwait
dec
outsl
xlat
push
jns
and
cwtl
push
shll
mov
pop
arpl
lock
pop
push
jecxz
ds
push
inc
cwtl
in
hlt
icebp
in
mov
movsb
xlat
dec
fcom
rcr
sbb
cld
in
bound
jp
aaa
shlb
pop
sub
xlat
push
loopne
dec
push
mov
sub
jmp
mov
or
nop
mov
idivl
jg
sti
decl
fistl
outsl
inc
jo
pop
fstp
fists
sbb
call
inc
addb
cld
fdivr
dec
sbb
shr
iret
jns
add
sub
mov
xor
mov
test
adc
push
outsb
stos
test
clc
ficoml
jb
jo
pop
fistl
push
xor
out
cs
sub
out
and
push
rcrl
ds
out
mov
jecxz
and
insl
les
jmp
mov
push
pushf
push
add
lcall
dec
jge
mov
or
push
dec
les
or
push
sbb
mov
sub
int3
cld
mov
add
movsb
add
adc
es
nop
mov
cmp
adc
xchg
lods
inc
xchg
inc
lahf
push
idivb
loope
aad
insb
scas
push
push
jmp
mov
cmp
push
icebp
scas
aaa
sbb
leave
xchg
out
shlb
xor
pop
pop
imul
in
or
xor
inc
je
and
cmc
test
int
ret
leave
inc
jbe
inc
pop
dec
gs
push
push
std
fadds
or
push
adc
mov
pop
call
pop
jae
aad
stos
push
cmp
adc
xchg
jno
sub
lret
pop
fcoml
cmpl
jne
popa
mulb
popa
in
test
into
faddl
push
call
pop
mov
push
cs
push
adc
or
pop
add
dec
mov
mov
mov
movsb
dec
pop
shl
sbb
add
add
hlt
mov
cmp
push
cld
xchg
inc
sbb
push
dec
jnp
mov
mov
mov
mov
pop
sub
mov
push
and
jne
pop
lods
movsl
xchg
add
sahf
dec
sbbl
pop
jne
ljmp
jbe
stos
lret
jne
add
leave
jg
mov
push
jmp
push
sbb
orb
aam
loop
addb
scas
movl
jp
ret
arpl
out
and
lea
xchg
push
lock
je
test
mov
adc
cmc
pop
cmpsb
jbe
je
add
xchg
jmp
cwtl
add
adc
and
iret
dec
mov
adc
and
jl
lds
sbb
jle
and
adc
adc
pop
popf
ljmp
mov
aam
xor
jb
pop
aad
or
push
loope
jne
push
call
fisubrl
sub
mov
mov
js
mov
adc
sbb
les
leave
sub
cwtl
mov
pop
fsubrs
adc
xlat
sub
repz
adc
fwait
xlat
and
inc
pop
mov
xor
push
incb
loop
data16
dec
adc
cmp
insl
push
sub
call
movsb
jmp
rclb
rolb
repnz
xchg
shll
inc
mov
fidivl
sub
inc
push
frstor
mov
lods
push
daa
sub
dec
fldenv
xchg
fnstcw
or
incl
xchg
jp
fldenv
insl
push
pop
jno
xchg
roll
mov
inc
cmp
and
stc
xchg
sub
lea
lock
scas
mov
lock
dec
pusha
pop
xchg
jae
loope
stos
pop
adc
push
je
sarb
mov
test
inc
mov
pop
je
lods
movsb
add
mov
mov
or
fcoml
cmp
xchg
mov
pop
mov
gs
mov
cltd
xchg
ret
test
inc
xchg
in
pop
das
cmp
xor
and
fcompl
cmpsl
stc
pusha
notl
add
nop
cmpsl
mov
pusha
add
rcrb
cli
arpl
push
fdivrl
jg
clc
cmpb
imul
sti
jmp
ret
rol
sbb
adc
mov
push
mov
js
sub
jo
inc
rorl
mov
pop
xchg
aam
pushl
lods
xchg
xor
dec
call
jp
mov
das
mov
ss
sub
inc
repz
mov
fadds
and
push
movsl
shll
lods
aas
pop
inc
xchg
aad
sbb
lcall
fidivl
inc
je
dec
mov
shr
xchg
pop
cmp
rorw
jo
mov
data16
dec
cmp
test
sbb
mov
imul
mov
push
or
flds
test
xchg
pop
js
pop
sub
cs
imul
scas
mov
xor
cmp
sahf
mov
or
mov
fbld
push
outsb
stos
pop
and
leave
sti
lahf
jecxz
sub
inc
inc
cmp
rclb
js
mov
jns
cmp
and
mov
jne
loop
bound
inc
mov
sub
into
pop
cmpsl
dec
mov
xchg
jecxz
xchg
jmp
add
ret
xorl
into
jecxz
bnd
mov
jg
out
lret
xchg
dec
mov
cmp
dec
push
lret
scas
or
push
decb
lock
add
rolb
rorb
jecxz
testb
add
push
cmp
jmp
into
movsl
popa
sbb
jl
test
pop
clc
lcall
push
gs
andl
ljmp
xchg
mov
loope
jg
pop
mov
pop
pop
add
push
pop
rclb
or
movsb
mov
inc
fcoms
aas
fisubrl
add
into
scas
jne
mov
jge
sti
ret
xchg
and
std
adc
sbb
test
and
insb
test
arpl
test
push
pop
stos
pop
mov
xor
test
in
or
loope
add
add
jo
testb
pop
sbb
mov
out
or
aad
adc
mov
xlat
and
pop
push
pop
xor
addr16
adcb
out
pop
loopne
out
sti
lret
ljmp
sbb
xchg
pop
scas
gs
and
popl
sbb
in
push
int3
mov
pop
call
fidivs
jge
mov
add
sbbl
pop
aas
and
xchg
in
arpl
outsb
daa
add
jb
pop
jo
cmp
xor
mov
lret
test
scas
xorl
mov
cmp
pop
jae
fwait
andb
mov
test
es
inc
test
repnz
dec
stc
jns
cmpsl
cmp
sbb
cld
and
cmpsl
nop
shll
in
xor
add
test
sti
dec
orl
and
pop
jge
add
aam
adc
in
ret
pop
sti
sub
call
and
je
insl
int3
ss
stc
push
movsb
sti
imul
mov
mov
pushf
neg
mov
dec
stc
lods
in
mov
ret
xor
lods
mov
jg
push
or
push
neg
push
mov
or
imul
push
pop
popfw
jne
mov
adc
test
repnz
fnstenv
fisttpll
add
daa
out
lret
mov
xor
or
adc
dec
adc
add
out
adc
mov
jl
or
mov
fbstp
subl
pop
cmp
pop
cmpb
sub
push
out
and
cltd
xor
jg
rolb
call
mov
stc
jbe
adcb
push
sbb
mov
scas
jp
inc
outsb
inc
push
insl
xchg
lahf
mov
inc
push
fsubrp
cmp
add
and
arpl
push
adc
xchg
rcrl
pop
sub
insb
mov
nop
stos
mov
adc
lods
sbb
adc
and
and
jle
push
data16
jmp
outsl
ds
in
lods
fdivrs
sbb
shl
or
adc
push
les
sarb
imul
push
sbb
loop
jge
out
mov
fwait
mov
shr
sub
dec
dec
and
jl
sbb
aad
inc
push
ja
out
adc
out
ret
dec
ss
insl
cmp
xor
push
pop
sub
sahf
pop
jae
push
cmpsl
sbb
ss
dec
in
sub
lock
mov
outsb
ja
popa
js
pusha
push
sbb
shrl
xor
inc
std
dec
mov
xor
fdivrs
mov
ja
mov
mov
push
pop
add
or
dec
xor
dec
call
xor
inc
inc
gs
xor
in
xchg
mov
movhps
mov
pop
roll
cmp
insl
cmpsl
fs
xor
sub
jmp
out
sub
mov
mov
dec
and
test
out
push
cmpsl
dec
test
dec
pop
push
sti
jo
rorb
bound
mov
jno
mov
call
pop
push
jmp
notl
xlat
outsl
mov
add
arpl
repnz
sbb
ds
adc
pop
mov
int3
jmp
clc
xor
scas
mov
movb
adc
sarb
movb
outsb
add
and
cli
mov
xchg
inc
xchg
mov
rcl
imul
adc
test
rcl
rcll
xor
mov
mov
mov
out
out
jne
insb
mov
fnstsw
clc
cmc
push
push
fidivrs
sbb
add
xchg
movsb
out
ljmp
jl
mov
fsubl
aas
xchg
cltd
sahf
mov
divb
int3
mov
jl
sbb
push
subb
daa
aas
not
pop
mov
pop
sub
out
push
jne
mov
xor
test
xor
inc
xchg
jo
imul
std
adc
dec
xchg
ljmp
mov
lods
ret
cld
shrl
and
sbb
je
out
ret
inc
out
sbbb
fimull
in
mov
repnz
adc
push
jmp
cltd
imul
mov
xchg
faddl
mov
scas
cmp
lods
lods
xor
das
out
fmuls
cmpsb
cli
adc
leave
push
mov
sbb
std
xor
xor
daa
mov
clc
nop
xchg
insb
addl
lea
call
push
test
in
push
push
ret
test
cs
cld
mov
xor
imul
adc
pop
pushf
or
fmull
push
sti
jl
mov
sub
test
jbe
xchg
xor
and
mov
in
imul
bound
dec
add
mov
inc
jne
ficomps
pop
stos
cmp
xor
push
xchg
je
loop
xchg
sub
push
xchg
stos
add
fstl
sbb
push
sbb
outsb
mov
bound
lods
hlt
dec
xchg
mov
in
rorb
lahf
cmc
insl
xchg
test
xchg
dec
lock
insl
add
mov
cld
adc
bound
repnz
sub
divl
pusha
dec
lret
mov
add
add
ja
repnz
pop
jmp
lret
cwtl
aaa
shlb
idivl
mov
mov
shll
repz
or
and
pusha
push
dec
cli
cmp
dec
fsubrl
je
cmpsb
insl
sbb
add
xor
add
pushl
addr16
lock
adc
popf
adc
inc
je
popa
data16
lahf
xor
leave
cmpb
pushl
fstl
es
jg
sub
jb
fcoml
inc
mov
xchg
cmp
push
fdivrl
imul
push
scas
mov
cwtl
xchg
mov
mov
sub
xchg
sub
push
push
jne
jge
xchg
and
fnstcw
push
jae
outsb
dec
cmpsb
lcall
pop
xchg
test
cs
ds
or
into
lock
subl
add
pop
pop
pop
pop
add
mov
add
aam
icebp
nop
sub
mov
stos
test
sti
push
mov
push
lods
cmpsb
stos
sbb
inc
mov
negl
fs
outsl
mov
addb
int
mov
pop
je
lock
xchg
ljmp
mov
ljmp
sub
push
sub
dec
sbb
or
repz
jns
adc
cmpsl
movsb
mov
xor
lcall
bound
mov
inc
loope
sbb
dec
ljmp
inc
int3
js
cmpsb
xor
out
jge
cmp
aam
rorb
push
or
loopne
cs
gs
push
sti
adc
jmp
mov
adc
push
shlb
mov
call
xor
sbb
testb
psubsw
xchg
scas
jge
dec
out
icebp
cmp
mov
sbb
inc
rcrl
mov
push
or
mull
sub
push
fisttps
inc
in
dec
mov
xchg
cmpsl
add
aaa
addr16
dec
test
xchg
test
push
icebp
ret
cmpsl
cmpsb
scas
fnstcw
pop
call
sbb
xor
cld
inc
insl
inc
aam
test
and
int
stos
jg
xchg
lret
in
inc
dec
or
out
add
cmp
lods
lds
shrl
mov
xchg
or
sti
loop
dec
mov
push
sbb
mov
imul
outsb
mov
cmc
xor
mov
sbb
dec
ret
fstpl
shll
cwtl
push
imul
bound
push
fcomi
adc
dec
into
ret
fnstsw
xlat
insl
lcall
mov
mov
dec
ret
mov
js
mov
xor
mov
aaa
gs
sub
xchg
rcrb
fsub
daa
mov
xor
dec
cmpsl
mov
jnp
inc
adc
loop
pop
pop
cli
inc
bound
mov
push
cmp
xor
gs
loopne
fcomps
and
negb
or
sbb
test
push
adc
mov
shlb
xchg
or
fyl2xp1
mov
adc
sbb
scas
xor
ret
xor
cmp
mov
sbb
push
iret
and
fsubrl
cmp
test
cmpsl
stos
mov
das
cli
sub
cli
mov
and
mov
iret
lods
cs
fwait
mov
arpl
and
shrl
mov
testb
out
lret
idiv
xchg
jae
ss
popf
pop
into
loopne
mov
sub
or
lea
pushf
sbb
fcomp
adcl
mov
mov
xor
sub
pmaxub
outsl
adc
push
loope
xlat
stos
jbe
test
mov
inc
mov
stc
dec
inc
or
stos
mov
push
icebp
faddp
rcrb
mov
mov
and
adc
ror
add
aas
gs
mov
jae,pt
cmc
out
mov
cld
out
cmp
jbe
adc
jne
inc
outsl
add
dec
inc
mov
repz
addr16
sbb
mov
in
lret
test
aaa
jb
leave
fists
sti
xchg
out
cld
and
imul
fistps
cmp
data16
jnp
pop
xor
inc
jl
xlat
shl
adc
faddl
clc
xchg
adcl
or
add
xor
sbb
pop
xor
paddusb
addr16
add
push
add
push
int3
add
jg
scas
call
imul
js
ret
outsb
out
lods
or
mov
icebp
mov
fadd
push
jmp
dec
pop
mov
ja
and
sbb
inc
jl
jmp
mov
out
fwait
pop
inc
in
sbb
cmp
push
or
int3
push
adc
jg
xchg
mov
das
pop
push
xor
lods
mov
out
scas
and
inc
fs
mov
xchg
testb
negb
cltd
xor
push
repnz
enter
sub
or
jne
jl
add
push
int3
loopne
mov
jns
lock
push
sub
xchg
scas
lds
mov
cli
pop
ja
fisubrs
pop
cmpsb
leave
mov
and
lret
cs
mov
fiadds
dec
loop
out
and
xchg
adc
adc
push
scas
in
into
decb
into
cli
in
or
add
repz
pop
inc
add
sbb
imul
sub
jbe
mov
clc
xor
add
xchg
popa
jb
imul
sub
test
push
scas
arpl
add
and
and
and
in
cs
pop
mov
pop
adc
cld
jmp
add
push
mov
inc
lahf
cwtl
xor
outsl
mov
jno
push
cmc
insl
mov
push
daa
sbb
sbb
sbb
mov
popa
mov
sub
mov
cmp
xor
inc
pop
minps
jp
xchg
pop
inc
lea
adc
jle
sub
movsb
aaa
hlt
jb
mov
imul
fldt
int3
mov
shl
icebp
cld
std
inc
jae
xchg
addr16
bound
add
sub
inc
in
inc
adc
pop
sbb
aad
rcll
shll
shl
push
imul
test
jp
nop
aam
and
cmp
jae
popf
add
scas
scas
sbb
pop
lcall
decb
dec
dec
stc
jmp
es
or
aas
mov
or
add
test
outsl
movb
sbb
sbb
stc
testb
fs
mov
shll
scas
call
adc
mov
inc
adc
ret
push
mov
jne
dec
mov
aaa
mov
dec
push
jmp
test
jecxz
adc
cmp
mov
sub
rolb
xor
ret
mov
test
jle
adc
test
dec
out
cmp
jg
mov
and
adcl
cmp
je
or
mov
xor
clc
dec
mov
adc
jp
je
push
lea
or
lods
neg
test
pop
rcrb
loopne
mov
fisttpll
sbb
jmp
sahf
lods
inc
sbb
pop
push
fs
repnz
loop
jno
dec
sbb
sbb
xchg
call
lret
and
lods
mov
push
fisttpl
sbb
rorb
std
xor
out
and
push
dec
xchg
xor
pop
and
xor
fldl
xor
adcl
aas
sub
aaa
mov
movsl
push
aam
push
rep
jne
pop
das
push
aas
push
js
sub
inc
lret
sti
mul
dec
sub
hlt
pop
cli
xor
pop
cmp
call
adc
lock
loop
sbb
xchg
mov
sahf
sub
push
adc
das
and
pop
cmp
mov
add
fstps
lods
sti
mov
mov
push
mov
or
popa
js
imul
jae
sub
fidivl
cld
into
insb
cmpsb
mov
xchg
cli
xchg
out
xor
arpl
aad
lret
icebp
xor
bound
mov
sub
sbb
loope
add
xchg
cmc
aaa
lods
out
lret
test
outsb
pop
add
adc
cmpsb
jge
hlt
mov
lcall
lret
aaa
adc
pop
dec
xor
iret
xchg
inc
push
jae
mov
negl
pop
je
shll
jecxz
pop
jae
lea
cmp
xorb
or
loop
xor
repnz
les
pop
dec
or
jb
jno
push
mov
dec
add
call
add
pop
outsl
outsl
pop
sar
or
mov
outsb
push
aam
adc
pop
insb
hlt
xor
mov
and
test
ret
aaa
cmp
add
push
stos
insb
push
mov
lds
or
fcompl
jg
outsl
cld
and
stos
into
inc
cs
popf
adc
sbb
add
inc
xor
sub
dec
loop
lcall
dec
xchg
rolb
jbe
repz
push
gs
xchg
aad
arpl
sar
jmp
cmpsb
clc
mov
sbbb
and
pop
test
je
sbb
dec
dec
pusha
inc
add
add
pop
pop
mov
gs
das
ret
jg
pop
dec
lds
stos
lods
int3
fs
popa
inc
lea
or
mov
xor
imul
sub
jne
in
out
ret
scas
dec
dec
stos
jne
cwtl
or
lea
push
rcrb
ja
andnps
cmp
insb
mov
es
hlt
lret
jo
adc
pushf
xchg
movl
jo
lcall
test
adc
into
adc
mov
add
and
xchg
pop
ret
loope
push
nop
pop
jp
sbb
xchg
xchg
sub
jecxz
movsl
stc
aas
imul
inc
xchg
mov
sub
mull
mov
pop
insl
addr16
sub
sub
sbb
inc
sbb
into
inc
push
add
fmull
int
arpl
push
lds
push
iret
cwtl
aaa
dec
jns
or
fadds
imul
lea
add
std
pop
inc
cwtl
inc
sbb
fwait
aam
les
jno
mov
shll
mov
add
push
and
mov
ficomps
jl
mov
lds
aad
xchg
lahf
out
ret
pop
push
dec
call
int3
push
and
aad
xorb
daa
insl
jp
inc
jns
or
fsub
dec
jmp
dec
orl
ja
mov
repnz
fwait
lods
xchg
mov
mov
dec
hlt
push
enter
outsl
jno
hlt
lcall
in
sbb
push
push
adcb
rcr
jae
jecxz
imul
sti
adc
popf
mov
leave
int3
inc
notb
xor
out
std
mov
scas
rcl
push
lsl
inc
sahf
lcall
clc
mov
dec
cs
ljmp
mov
or
addr16
cli
push
subw
js
jae
imul
jmp
idivb
mov
mov
loopne
int3
sbb
pop
jg
mov
sub
jb
jp
push
ljmp
in
repz
incb
aam
pusha
shll
and
xlat
fisubs
ret
cmp
les
aam
ds
push
inc
mov
movsl
inc
push
jb
leave
popl
testb
xor
pop
adc
test
and
mov
mov
sbb
mov
ret
mov
js
shll
dec
push
dec
into
sub
sbb
jae
scas
movsb
add
movsb
lods
sub
iret
cs
jo
call
lock
lock
jmp
mov
stc
push
ljmp
jle
clc
addl
les
loopne
pusha
pop
push
ja
mov
imul
in
cmc
and
xchg
push
ljmp
pop
lods
test
pop
ljmp
add
sbb
aad
mov
cmp
adcl
or
je
rcrb
push
lret
pusha
cmc
cmc
xor
cmp
mov
jns
nop
mov
pop
movsl
cvtdq2ps
pop
movsl
or
mov
mov
jb
jle
cs
jg
popa
jo
xor
mov
pop
xor
or
or
add
idivb
inc
lret
sbb
in
jne
pop
icebp
cmp
sub
sbb
xchg
mov
mov
jns
add
scas
sub
pop
xchg
xor
push
cltd
dec
push
cld
lret
jb
stos
dec
test
jl
inc
sub
mov
inc
dec
loopne
fistps
and
push
add
mov
inc
aad
sub
sbb
xor
inc
fidivrs
sub
shll
and
fwait
mov
out
jmp
inc
fs
cmc
adc
cmp
pop
repnz
bound
xchg
jl
fsubrl
cmp
pop
fdivs
mov
inc
inc
push
ljmp
gs
inc
mov
cmp
sub
add
inc
dec
cs
mov
xchg
cmc
ss
inc
jne
mov
mov
dec
mov
test
xchg
movsl
pop
push
iret
lcall
fistl
mov
add
xor
fwait
lock
dec
into
in
inc
jnp
xor
jge
in
push
or
dec
adc
negl
xor
inc
leave
shrb
push
popa
out
dec
int3
jp
mov
stos
and
adc
jnp
je
push
sti
dec
mov
cwtl
add
lret
push
add
xor
loope
xchg
push
ror
rolb
jbe
test
repz
push
pop
mov
fimuls
pop
popf
cmp
push
or
out
inc
mov
xor
mov
nop
inc
dec
lcall
inc
ret
inc
mov
repnz
add
shll
inc
fincstp
in
fdivp
add
fbstp
int3
les
jp
mov
es
mov
out
bound
testl
ljmp
xor
in
mov
jp
out
and
data16
pop
jle
xor
inc
movsl
movsl
xchg
dec
inc
stos
xor
nop
inc
insb
jl
inc
mov
in
enter
xor
fstpt
pop
adc
jae
data16
data16
push
push
mov
or
inc
pop
inc
aas
inc
dec
movsl
imul
pop
in
loopne
sbb
pop
push
xchg
jne
mov
fs
mov
add
outsb
inc
fwait
pop
std
imul
or
clc
pop
xlat
xchg
std
mov
not
fs
ds
push
outsb
cwtl
shll
jae
mov
cmp
xor
push
andl
fcom
jle
loopne
sub
into
push
adc
popl
data16
fs
mov
sti
push
inc
mov
decb
and
lret
sub
cmpsb
lods
std
adc
mov
nop
xchg
xor
test
mov
insb
sub
add
lret
mov
insl
mov
sbb
shrb
test
add
cli
or
lods
jns
mov
cmpsb
pop
int
fs
rcrl
aad
pop
cmpsl
push
xor
mov
mov
repnz
xor
sub
sbb
add
or
es
movb
mov
mov
stos
xor
mov
mov
cs
mov
stc
mul
mov
je
push
pop
mov
stos
mov
adcb
mov
aaa
and
push
jg
pop
stos
sbb
jecxz
xchg
repnz
lret
add
test
insb
xchg
or
sti
push
jge
mov
ret
jge
adc
sbb
pop
int3
decb
inc
sbb
test
inc
cmpb
xchg
repnz
mov
mov
pop
scas
sahf
xchg
insb
xchg
xor
sub
xor
gs
shll
arpl
push
loope
repnz
popf
pop
mov
loopne
push
jge
xchg
jb
ds
adc
or
jne
jno
mov
rcr
icebp
push
js
add
push
sbb
jge
lcall
cmp
ljmp
sub
cld
push
cmpl
mov
out
cmp
pop
mov
add
lods
xor
mov
stc
push
xor
mov
js
shrl
jg
insb
and
cmp
pop
mov
stos
push
cs
mov
std
jmp
dec
push
aaa
push
mov
or
and
cmpsl
mov
mov
dec
int
lahf
mov
out
pop
dec
adc
push
push
mov
pop
xchg
lahf
into
cwtl
adc
icebp
jl
shrl
adc
ret
dec
das
adc
stos
arpl
and
std
cmpsl
mov
inc
dec
xchg
repz
mov
shrb
push
sbb
lahf
daa
inc
insb
push
movsl
jne
stc
ja
adc
xchg
sub
fdivrs
pop
dec
sbb
mov
cld
mov
nop
pop
jne
std
push
lds
and
fisubrs
xor
retw
mov
xor
jle
xchg
pop
leave
add
lock
dec
ret
lret
arpl
or
int3
jbe
xor
hlt
cmpsl
aad
shll
dec
sub
arpl
adc
push
icebp
js
sbb
cld
in
jnp
or
and
cs
sub
mov
inc
ljmp
push
aas
mov
inc
adc
push
xchg
scas
and
cltd
sarb
cli
sbb
loopne
and
gs
cmp
lds
test
daa
js
push
sub
movsl
lods
xor
push
lods
ret
sub
cmp
adc
push
add
inc
repnz
sbb
xchg
pop
inc
test
fs
xor
fsubs
xor
into
rolb
xchg
push
xchg
push
mov
sub
mov
or
adc
pusha
in
inc
ja
dec
cmp
mov
ds
ret
fdiv
pop
add
push
std
int3
xor
cmp
rcrl
pop
jo
cmp
mov
jp
mov
add
data16
hlt
leave
push
data16
add
xchg
push
roll
cmp
lret
movsb
add
or
sub
or
outsl
push
xor
dec
or
cmp
or
adcb
mov
sbb
pop
lcall
stos
push
or
mov
or
pop
aaa
xorl
add
mov
aas
mov
push
push
outsl
sbb
movsb
mov
sbb
push
je
and
xor
rcll
push
out
xor
xchg
cmc
in
dec
addr16
cltd
push
nop
cwtl
cmp
addr16
or
xchg
stos
mov
sub
inc
mov
mov
push
outsl
cmpsl
aam
push
adc
pushf
test
sbb
mov
mov
lods
inc
pop
sbb
fsubp
push
stos
aaa
jo
iret
sbb
ret
movsb
aaa
stos
push
jne
mov
fadds
push
les
mov
loopne
aad
imul
xchg
test
clc
dec
mov
into
xchg
jo
test
mov
xor
out
jb
mov
sti
adcb
mov
pop
cmp
imul
xor
xor
cmpsb
outsb
mov
loope
andb
jnp
pop
lock
aaa
pop
sub
pop
mov
pop
cmpsb
jb
cmc
fdivrs
inc
xor
int
xchg
sub
cs
xor
and
jle
lea
insb
xchg
pop
push
sbb
mov
or
loop
cmp
cmpsb
rcll
inc
das
in
jecxz
jae
push
je
mov
xor
cmp
xlat
pop
add
add
or
xchg
aad
fwait
push
inc
sub
lock
in
outsl
xor
mov
or
aaa
nop
cmovl
pushw
cmc
loope
sub
mov
sbb
wrmsr
lahf
jecxz
fstp
loope
and
daa
aaa
test
mov
inc
scas
movsb
test
mulb
push
and
jg
fdivl
inc
add
loope
ss
stos
or
bound
sub
push
jbe
inc
jmp
mov
xchg
inc
inc
xchg
sti
adc
dec
cmp
xlat
fwait
pop
pop
cltd
sti
and
aam
lcall
enter
jae
jae
fcomps
push
adc
inc
cwtl
add
sarb
ljmp
mov
mov
lret
sbb
xchg
add
fiadds
push
lret
mov
xor
mov
and
xor
int
dec
jne
mov
call
lret
movsl
js
inc
mov
arpl
xchg
ja
aam
mov
mov
dec
out
lock
pop
ret
xor
inc
scas
inc
cmp
push
xchg
aas
data16
dec
xor
push
jmp
dec
inc
sti
push
jmp
jae
in
pop
cmp
push
in
jb
jge
xchg
not
pop
fdivrl
je
aad
sub
into
pop
outsl
jge
fsub
pop
dec
add
in
dec
pop
int3
lret
popa
pop
dec
sbb
push
int3
in
push
inc
sbb
xor
and
test
cwtl
push
and
push
scas
out
sar
stos
inc
aad
mov
lahf
dec
xor
cmpsb
pop
sbbl
adc
out
pop
or
jo
std
fidivrs
jbe
xor
lea
push
loopne
or
jbe
mov
mov
push
inc
jno
or
fsts
insl
and
push
dec
inc
jecxz
cld
or
jae
sbb
inc
sbbb
orb
add
mov
xchg
movsb
jnp
daa
mov
pop
xor
ljmp
and
xchg
mov
aam
mov
jl
andl
pop
cmp
in
fnstcw
mov
jecxz
scas
data16
jae
outsl
cmp
test
mov
dec
xchg
in
cltd
out
imul
mov
fildll
or
xor
cmp
call
and
arpl
mov
ret
mov
ficompl
or
cmp
pop
outsl
fmul
or
pop
in
std
punpcklwd
inc
ljmp
stc
aaa
negl
movsl
add
lahf
cmp
fstpt
pop
xchg
shl
pop
aam
stos
xor
loop
push
xchg
ljmp
nop
xchg
push
add
push
mov
insl
addr16
pop
mov
jbe
mov
aad
repnz
imull
pop
das
cld
loope
mov
jnp
into
sar
xchg
roll
inc
enter
fbstp
adc
pop
stc
repz
push
dec
insl
inc
aam
dec
cli
cmp
pop
mov
adc
pop
lods
andl
pop
or
ds
add
clc
ss
sbb
dec
and
in
mov
sub
dec
add
and
mov
in
cld
loop
push
or
xlat
dec
xor
test
jle
repnz
sti
rcl
cwtl
mov
popa
inc
jo
inc
jecxz
jmp
xchg
xchg
inc
daa
inc
xchg
pop
aad
iret
adc
cli
sub
dec
leave
into
mov
lret
xchg
mov
pop
push
arpl
lret
scas
test
lcall
scas
push
adc
in
pop
pop
and
lret
andb
mov
loop
mov
call
cwtl
mov
inc
out
push
mov
cltd
ss
test
xor
icebp
mov
daa
mov
dec
mov
mov
jle
adc
shl
cltd
pop
ret
inc
push
mov
sbb
add
push
push
push
cmp
mov
and
dec
pusha
pop
es
test
loopne
add
addr16
pusha
sbb
js
inc
xchg
pop
sarb
dec
mov
mov
mov
test
stos
mov
insl
es
addr16
xor
push
out
mov
mov
into
movsb
icebp
lahf
xor
cld
xchg
mov
add
imul
mov
push
add
inc
sbb
in
test
inc
inc
mov
sub
jmp
imul
scas
pusha
sbb
dec
outsl
loopne
cli
sub
cmp
out
xor
push
ret
int
fwait
scas
aas
inc
loopne
repz
out
fidivrl
sub
daa
or
cmp
jmp
sbb
gs
out
mov
gs
jg
jns,pn
popl
shlb
xchg
inc
fisttps
rcrl
addr16
aaa
call
mov
mov
push
in
incl
fwait
int3
mov
dec
fsin
push
cs
int3
int3
jne
and
push
imul
adc
xchg
mov
pusha
lods
mov
shlb
inc
mov
addb
shl
mov
lock
sub
push
pop
xchg
push
cmc
fwait
movsb
inc
in
test
ljmp
lea
mov
push
mov
aam
xor
sbb
lahf
gs
jno
les
test
das
sub
xchg
pushf
pop
xchg
xor
jge
pop
push
cs
lret
mov
inc
mov
xor
add
lods
pop
repnz
sbb
out
int
fwait
shlb
or
jg
mov
inc
jae
lret
into
fldcw
mov
in
iret
or
ds
arpl
sahf
scas
xchg
push
jne
dec
test
or
add
das
mov
add
xor
lea
pop
xchg
rolb
popa
jae
sbb
and
mov
notb
cmpsl
icebp
xchg
popf
lods
addr16
xor
icebp
insl
sub
sbb
adc
aaa
sbb
mov
xor
gs
cmp
mov
fimuls
movb
inc
pop
sbb
or
mov
std
cwtl
scas
mov
push
mov
adc
data16
jg
mov
cwtl
imul
scas
sub
push
cmp
lods
in
js
push
leave
pop
add
hlt
mov
cmpsb
in
outsl
adc
push
inc
cmpsb
out
or
inc
outsb
jecxz
cmp
rcll
dec
addr16
imul
push
xchg
pop
aas
xlat
int
xor
scas
sbb
xchg
out
cli
jle
lret
outsb
hlt
ljmp
aas
in
enter
mov
push
mov
mov
pop
loop
or
xor
push
std
mov
adc
mov
sub
add
fists
mov
or
inc
cltd
push
xor
jb
or
popf
aam
fs
add
mov
popf
jbe
sbb
repz
xchg
stos
inc
adc
sahf
xchg
scas
stos
adc
ror
ds
mov
sbb
ret
xlat
add
movsl
pushf
movsb
push
dec
lods
leave
push
jb
cmp
mov
popf
leave
cmp
into
cmp
cmp
and
jecxz
outsl
mov
xor
dec
pop
jne
call
adc
test
mov
adc
sarb
sub
mov
cmp
xor
cmpl
nop
jge
sbb
cmp
add
sub
cmp
dec
movsl
cltd
lahf
popa
aas
inc
dec
xor
movsb
cmpsl
fistps
cld
mulb
mov
inc
repz
nop
or
aam
fcomps
cltd
pusha
mov
and
inc
jns
add
rcll
into
xor
mov
ljmp
dec
repz
out
cmp
pop
push
cmp
pop
jp
dec
add
clc
cs
cmovnp
xchg
mov
lahf
sbb
jno
stc
leave
testb
xor
dec
popf
mov
xchg
pop
ljmp
sbb
jge
std
lods
jp
mov
mov
sub
ss
adc
or
sar
sub
cmp
cmp
push
dec
sub
cli
sarl
icebp
add
leave
das
sub
test
test
dec
insl
xorl
xor
jecxz
stos
outsl
jo
mov
insb
pushf
mov
aas
mov
sti
outsb
in
sbb
nop
mov
fs
loop
jns
repnz
fs
sub
pop
mov
and
fisubs
adc
out
add
in
inc
sbb
and
cmpsl
fwait
inc
or
fisubrl
in
xor
in
xchg
lret
or
jge
sub
hlt
sbb
incb
mov
mov
sbb
aas
mov
jecxz
jb
xchg
dec
push
ljmp
test
add
mov
pop
jbe
das
cmpsl
cmpsb
inc
or
cwtl
xchg
mov
xchg
popa
xor
movsl
jb
int
loope
sbb
pxor
xchg
mov
inc
popa
pop
xchg
push
divb
sbb
push
arpl
fwait
ja
xchg
jl
xchg
fisttpll
in
push
inc
xchg
test
add
leave
js
popa
jne
xchg
cmpsb
loopne
gs
divl
pop
push
and
inc
mov
jle
and
daa
loop
mov
rcll
xchg
jl
lods
mov
ja
push
iret
jbe
pop
addr16
xchg
mov
push
inc
lcall
push
cs
xchg
push
mov
mov
add
and
mov
xchg
xchg
addr16
sbb
xchg
repz
stc
xor
fstl
data16
cmpsl
or
lret
gs
xchg
adc
jbe
xchg
add
stos
outsl
dec
es
and
jo
cmp
or
xchg
dec
xchg
dec
adc
lea
inc
sahf
ss
shll
adc
dec
mov
popf
pusha
shl
jg
push
pop
loop
lds
mov
or
inc
push
iret
xchg
and
xor
cld
xchg
or
pop
push
sbb
push
lcall
aaa
out
enter
fwait
push
test
sbb
lea
xor
mov
cmpb
jecxz
adc
inc
enter
scas
cmpsl
leave
inc
sbb
imul
push
mov
in
jge
cld
mov
mov
lret
ficomps
push
addr16
repz
lcall
and
inc
nop
mov
movsl
xchg
mov
mov
jmp
ljmp
jne
std
int
shrl
test
loope
scas
lret
icebp
push
pop
mov
sbb
mov
rorl
cmp
sbb
mov
jle
sbb
faddp
das
mov
lods
mov
cs
insb
and
jl
cmp
in
call
cmp
push
jb
jg
jae
xor
insb
fildl
pop
xchg
mov
sti
mov
xchg
mov
push
cmp
and
adc
push
nop
lds
stos
mov
jle
aad
mov
xor
xor
leave
test
jle
call
fldcw
call
or
and
xor
sbb
mov
xor
jmp
das
movsb
ret
jmp
iret
cmp
fisubl
pop
adc
loop
ficoms
ss
mov
ljmp
imul
and
xchg
lret
aaa
fidivs
pop
pop
fiadds
lods
shrl
xchg
loopne
shlb
jb
inc
mov
push
cmp
lcall
lret
fistps
repz
mov
push
pop
cmp
cmp
lods
mov
adc
cld
push
out
or
ds
dec
mov
call
mov
xor
dec
cmpsl
popf
test
mov
cmpsb
out
sbb
js
int3
cmp
pop
mov
jbe
in
jecxz
in
push
arpl
test
fs
clc
sub
push
jae
bound
mov
shll
lret
push
lods
push
sahf
incb
test
xchg
rcll
sub
cmp
mov
mov
stc
in
rol
das
bound
push
dec
jnp
jle
jbe
dec
pop
dec
cs
stos
in
enter
xchg
fs
or
and
cmp
mov
js
fiaddl
mov
pop
stos
sbb
or
jmp
xchg
and
sub
test
or
mov
sub
stos
loope
hlt
mov
jge
scas
or
jecxz
loopne
test
outsl
call
jge
std
fsubl
aam
rclb
dec
cmp
movups
imul
cmp
lock
mov
sub
add
jmp
push
adc
jbe
and
jp
bound
mov
lock
rcr
aad
enter
pop
mov
xchg
pop
mov
lds
sub
dec
xchg
and
in
out
fs
adc
jmp
pop
dec
or
xlat
ljmp
ja
in
xor
xor
cltd
out
push
sub
shlb
jns
push
or
loop
inc
je
pminsw
ds
xor
xchg
popa
daa
and
pop
jle
popa
movsl
add
jge
or
pop
in
mov
cltd
cmp
push
mov
inc
test
cmp
mov
add
jp
movsl
xor
lahf
add
fidivrs
ljmp
rol
and
mov
call
xor
xor
sbb
adc
mov
fs
dec
xor
adc
sar
mov
xchg
aad
push
mov
inc
negb
add
mov
inc
out
jmp
sub
sub
mov
popa
adc
add
cmp
bound
imul
push
jg
add
mov
fldl
push
mov
mov
lds
adc
fdivrs
sub
rcr
push
pop
push
cmp
pop
sahf
rol
orl
jbe
jns
mov
negb
insb
jmp
daa
test
xor
cs
xchg
cmp
out
jecxz
fwait
shrl
hlt
jl
scas
in
xor
loope
push
shrl
or
loopne
sub
in
aad
sbb
cmp
loop
mov
idivl
inc
orl
push
enter
mov
stos
hlt
sbb
pop
jp
jg
adc
dec
mov
mov
shlb
mov
adc
cli
dec
pop
lret
mov
pop
imul
cmp
stos
mov
mov
inc
adc
jle
xchg
in
ret
xchg
lret
jle
xor
mov
cwtl
pop
jp
push
mov
jmp
cmp
sub
inc
imulb
sbb
mov
xor
push
dec
decb
and
out
sbb
in
jmp
push
sbb
sub
scas
push
push
sbb
push
in
out
imul
roll
inc
sub
adc
sti
sub
sbb
dec
lds
cmp
sbb
mull
xlat
cmpsb
insl
je
sub
add
sub
ljmp
add
andb
push
add
adc
add
jns
mov
or
icebp
or
and
arpl
out
xor
push
xor
xchg
enter
mov
clc
jge
mov
xchg
jae
pop
push
xlat
pop
and
orl
inc
fistps
adc
jne
in
cmp
push
cs
arpl
mov
jns
in
mov
rcll
les
pop
popf
dec
repz
rorb
mov
imul
push
push
out
push
sub
test
scas
mov
xor
mov
mov
cmpsl
xorb
jge
sub
mov
and
testl
ret
xchg
push
sbb
xchg
test
aad
mov
sarb
out
into
shl
push
pop
fiadds
ja
sbb
jl
lret
shll
outsb
push
cmp
dec
repnz
pop
or
or
lret
jp
xor
data16
bound
dec
jae
mov
out
fnstenv
dec
xchg
clc
sahf
dec
int
bound
and
jle
jnp
cmpsl
mov
push
mov
pop
or
dec
xlat
es
inc
lret
push
mov
push
das
push
out
sahf
jns
repz
mov
lcall
inc
int3
inc
iret
pop
fmull
jnp
lea
push
or
dec
jae
ljmp
iret
cmp
gs
mov
dec
pop
xchg
or
cmp
push
mov
adc
pop
jnp
nop
inc
jne
pop
jmp
jl
ds
sbb
movsl
cli
enter
in
xchg
jne
xchg
and
out
nop
sub
insb
outsb
negl
out
ret
or
cmpsl
jne
adc
jp
loop
jmp
pop
fadds
or
andb
movsb
ljmp
ret
inc
or
sub
mov
sar
int
cltd
test
dec
or
loopne
xchg
rcrb
inc
push
adc
lret
clc
xchg
and
pop
test
test
jb
jbe
xor
ljmp
cmpsl
mov
sub
jo
aad
cmp
loopne
mov
cmp
inc
sarl
mov
adc
outsl
sahf
add
xchg
repnz
rcrl
pop
dec
mov
mov
jbe
pop
sti
mov
std
mov
stos
loop
int
test
mov
out
mov
pop
faddl
xor
jecxz
test
pop
dec
stc
cmp
inc
pushf
pop
push
or
jnp
cld
stc
adc
aas
stc
addl
fisttpll
inc
bound
push
jge
icebp
iret
data16
das
sub
sub
fdivrp
mov
mov
icebp
dec
dec
lods
mov
cli
inc
stos
pop
adc
clc
imul
ljmp
or
push
mov
sbb
mov
iret
inc
in
inc
mov
rcrl
pusha
push
scas
pop
pop
clc
movsb
push
mov
mov
outsl
test
sarb
imul
add
xchg
dec
push
xor
mov
pop
sub
scas
adc
xchg
xor
dec
mov
pop
jg
mov
ja
or
fisttps
jmp
or
push
lcall
scas
ret
sarb
inc
insl
test
lock
jbe
cmpl
aas
mov
popf
fcoml
imul
aaa
pop
mov
mov
sub
pop
dec
sub
xchg
or
imul
add
rorl
rolb
or
xchg
inc
cli
inc
push
ds
adc
mov
xchg
mov
add
adc
sbb
mov
sbb
push
mov
into
lret
xchg
fstl
ffree
fucomi
jg
ljmp
sbb
out
or
add
sub
rolb
icebp
mov
int
rcll
stos
dec
sbb
ret
push
sub
pusha
jl
mov
sub
push
mov
mov
int
in
inc
jnp
pop
lcall
dec
push
cmp
inc
cmp
add
shrb
xor
push
cli
or
inc
push
or
es
push
pop
repnz
ud0
mov
or
fdivs
xor
adc
inc
pop
add
aaa
jg
inc
adc
imul
bound
aas
fsubs
and
in
aad
aad
sub
cltd
jl
fisubl
leave
rcl
mov
cmc
dec
adc
dec
fsubl
and
mov
mov
jno
pop
movsb
ja
xor
rolb
mov
int3
pop
ds
xlat
mov
xor
sbb
adcl
out
push
addl
xchg
sti
mov
pop
inc
or
mov
pop
int
ret
mov
push
mov
cmp
call
ljmp
movsb
jg
push
cs
mov
cmp
lret
ljmp
push
es
in
lret
dec
sti
addb
mov
fadd
mov
mov
jb
fiaddl
or
out
lds
inc
pop
jp
xchg
fstl
adc
rcrl
push
test
sub
inc
dec
fnsave
nop
cmp
inc
xchg
inc
adc
or
pop
dec
leave
add
add
popf
jb
mov
out
push
jmp
cmp
mov
lds
ror
add
and
test
sub
shll
xor
adc
hlt
push
or
mov
cwtl
fimull
xchg
dec
rorb
pop
scas
add
push
adc
cld
cmc
insl
mov
int3
jb
sub
xchg
mov
dec
cmp
push
dec
cmp
adc
jg
or
inc
cmc
aaa
and
repnz
and
rorb
out
pop
pop
test
sub
pop
jle
int3
pop
lret
outsl
mov
stos
daa
push
imul
shrl
sahf
mov
test
imul
out
mov
icebp
cld
je
rolb
dec
mov
inc
fsubl
xchg
pushl
aas
mov
xchg
out
pop
inc
sbb
or
sbb
in
ja
adc
jbe
xchg
fs
orl
sub
inc
mov
sti
cmc
mov
loope
push
inc
xchg
dec
pop
pop
push
divb
ds
push
mov
movsb
iret
xor
rcrl
dec
sub
subb
or
sbb
imul
andl
push
pop
inc
shl
or
and
jno
pop
cmp
outsb
pusha
test
jae
ja
push
lea
test
sub
lock
pop
sahf
inc
xchg
test
pop
jae
scas
insb
rol
jno
add
adc
add
fbstp
int
cmp
cmp
jne
jne
sub
inc
lret
flds
cmp
sbb
mov
xor
and
push
into
push
pop
adc
or
pop
pop
push
and
sub
es
and
fsubl
mov
mov
push
ret
ficomps
inc
inc
rol
jae
lds
adcl
out
sahf
bound
or
pop
ss
or
dec
sub
mov
pusha
sbb
and
dec
add
je
and
or
iret
bound
inc
xchg
aad
rcrb
andps
fldl
push
or
push
mov
aas
stos
movsl
cmpsl
pop
negb
call
lret
rcr
sbb
jno
out
mov
dec
repz
cltd
into
add
sub
mov
mov
adc
ds
sbb
dec
push
xchg
or
fildll
dec
shrb
repz
jo
mov
sbb
lret
dec
jno
jno
mov
pop
lahf
test
in
mov
add
pop
idivb
sbb
scas
fcoms
and
repz
inc
rol
mov
cwtl
dec
pop
mov
es
movsb
std
push
dec
mov
arpl
out
push
push
pop
push
movsb
pop
mov
cmp
iret
pop
push
adc
outsb
enter
cld
and
les
and
sub
mov
cmp
add
mov
mov
insb
bound
outsl
bound
sahf
dec
aas
inc
pop
mov
loop
scas
jp
xlat
push
add
mov
pop
xchg
in
and
xchg
push
pop
mov
and
add
into
and
mov
push
fs
sar
cmc
and
loope
cmp
test
rorb
mov
add
sub
out
push
cmp
or
aaa
or
jo
cltd
inc
dec
insb
lahf
roll
cmpb
jb
xchg
dec
or
xchg
imul
mov
or
popf
scas
xchg
mov
adc
outsl
outsb
in
jmp
movsl
fldenv
adc
fsubl
inc
sub
sbb
cli
jecxz
mov
ljmp
shlb
loop
repnz
int3
sbb
cwtl
ja
les
imul
fmul
fildll
add
mov
pop
pusha
ja
xlat
add
pop
mov
jo
xchg
pop
mov
mov
pop
push
jecxz
push
mov
sub
sarb
xchg
mov
fistpll
push
cmp
cmp
rorb
fidivrl
jnp
data16
mov
test
cmp
and
mov
inc
movswl
or
sub
clc
sbb
or
lret
mov
lret
fisubs
cmpsb
adc
mov
out
ljmp
data16
lcall
dec
stos
xor
leave
ljmp
aas
movsl
adc
mov
xlat
sbb
lods
popa
inc
or
sahf
sub
in
mov
test
stc
xor
mov
xchg
pop
andb
mov
dec
insl
sahf
repnz
jmp
mov
lock
jo
cmp
rorb
out
hlt
xchg
jl
and
mov
rdmsr
out
fsubs
mov
mov
imul
xchg
xchg
gs
out
into
int
paddusb
inc
xor
push
inc
gs
imul
sarl
dec
insl
jecxz
not
and
sbb
cld
pusha
xor
jecxz
loope
sbb
or
test
arpl
inc
test
mov
scas
adc
fdivrp
lods
lods
jg
and
add
pop
mov
cld
lret
dec
sarl
into
fwait
xchg
fimull
push
inc
into
out
cmp
mov
sbb
movsb
cld
lds
arpl
sahf
inc
ror
hlt
xchg
cmp
aas
push
pop
xchg
fisttpll
in
fsubrl
arpl
sbb
push
leave
imul
test
mov
sub
cmp
loope
fimull
das
cwtl
jb
pop
xchg
and
aam
fimuls
in
jmp
dec
call
adc
scas
dec
add
inc
out
cmp
mov
add
jge
xor
jmp
jmp
mov
aam
repnz
ficomps
fwait
shr
sub
mov
pop
mov
sub
jb
ja
cmp
test
add
inc
in
sub
lock
mov
das
mov
insl
fnstenv
jb
mov
incb
sbb
push
dec
push
or
jmp
inc
test
stos
iret
nop
enter
lds
push
cmp
leave
jnp
cltd
addb
mov
pop
cmp
push
test
gs
sub
pop
xchg
mov
dec
sbb
hlt
dec
adc
dec
aam
xchg
shlb
xchg
rcrb
addr16
lret
mov
mov
out
icebp
push
sub
imul
push
jge
into
cmc
lea
jb
lods
or
xor
movsl
lods
xchg
push
negl
mov
iret
fs
sarb
icebp
subb
jnp
sub
test
outsb
ljmp
sub
and
je
sbb
cmpsl
push
jo
cmp
sub
inc
push
lea
jnp
jg
outsb
out
mov
pop
sub
pop
jmp
icebp
dec
xor
lods
jecxz
push
or
outsb
or
stc
push
fisubrl
inc
int
mov
xchg
lods
cltd
sbb
cmp
push
movsb
xor
or
loop
les
orb
or
sahf
push
fsubrl
push
mov
jns
add
jge
repnz
insl
hlt
adc
cmp
mov
push
stc
inc
jb
mov
mov
mov
mov
nop
xchg
cli
movsl
push
mov
pop
adc
lea
bound
jne
jo
out
pop
cmp
or
scas
xchg
call
popa
and
mov
call
inc
out
xor
push
adc
and
in
mov
sub
jle
cmp
push
dec
push
adc
cwtl
mov
js
mov
loopne
mov
xchg
dec
sbb
scas
push
pop
insb
out
fwait
sub
fcompl
xchg
pop
or
cld
pushf
imul
inc
loope
js
and
inc
mov
adc
jnp
xlat
or
pop
pop
pop
inc
xor
sub
jge
sub
ds
enter
into
mov
pop
ret
out
aas
popf
xchg
add
push
dec
pusha
mov
out
fnstcw
jg
sub
in
sub
stos
lds
cmpsl
xor
push
pop
sar
cmp
or
shll
push
push
call
push
dec
or
fnstcw
dec
pusha
sub
int
enter
mov
xor
idivb
idivb
pusha
xor
jg
icebp
jmp
inc
mov
sbb
sub
add
adc
push
fistps
into
test
daa
stos
mov
in
dec
sbb
push
push
daa
cmp
pop
sub
fs
ret
xor
mov
loope
jb
cltd
mov
and
repnz
xor
jmp
sahf
inc
lcall
bound
das
mov
sub
inc
test
out
cmp
or
mov
dec
es
cmpsb
pop
jbe
aas
mov
pop
jnp
loop
pop
sbb
pop
mov
inc
xchg
pop
rcrl
out
rcrb
inc
leave
inc
in
sti
ja
sub
xchg
scas
mov
call
icebp
lods
fsubrl
mov
jo
imul
lea
push
mov
inc
cmpsb
cwtl
cmp
cmp
cmp
or
cmpsb
cmp
or
mov
test
lret
add
mov
push
scas
int
outsl
out
jo
mov
jmp
pop
xor
xor
dec
pusha
pop
fdivr
mov
pop
xchg
loopne
mov
hlt
add
xchg
dec
dec
mov
fidivl
imul
sub
lods
dec
push
jecxz
gs
in
inc
leave
mov
stos
sbb
and
xchg
lret
sub
xorb
add
mov
sbb
ss
push
aad
fnstsw
mov
lods
cmp
cmp
loopne
or
rcl
pusha
std
es
jmp
ret
xor
push
or
das
in
mov
add
dec
pop
clc
jge
push
add
mov
test
and
sub
mov
add
jae
jae
movsl
and
mov
or
mov
das
xchg
iret
xchg
xor
add
push
fmuls
dec
sbb
mov
les
jge
mov
test
mov
ds
test
std
test
ror
ret
adc
sahf
ss
or
rcll
mov
adc
jnp
lds
or
lock
outsb
test
mov
pop
popa
xchg
cli
jb
jnp
jecxz
or
xorb
and
push
and
dec
test
repnz
mov
jecxz
es
pop
fwait
mov
jae
mov
subb
ret
pusha
mov
mov
lcall
notb
add
xchg
into
cltd
pop
xchg
in
adc
sbb
inc
lret
aad
nop
cmpl
push
das
xor
jnp
andl
mov
bound
daa
dec
sub
lcall
push
ret
xchg
ds
in
aad
fwait
sti
call
outsb
loopne
in
adc
pop
rolb
mov
xor
pop
nop
adc
push
inc
add
mov
mov
andb
xor
repz
adc
jle
sti
xchg
mov
iret
xchg
lret
mov
inc
lods
int3
dec
out
push
popa
sbb
add
ljmp
inc
cltd
jnp
aaa
stc
cmpsl
and
mov
sbb
popa
std
or
stc
jecxz
cld
or
mov
aad
and
fdivrp
pop
push
mov
ss
adc
pop
dec
jg
cmp
sbb
mov
xchg
mov
add
xchg
fldt
xor
repnz
sbbl
dec
lods
sti
out
fiadds
lods
mov
inc
xchg
sbb
xchg
loopne
mov
fwait
pop
mov
daa
aaa
fdivl
pop
jg
dec
push
sbb
cmp
mov
test
ret
movsl
lret
loopne
push
fs
mov
std
bound
stc
das
cltd
add
xchg
imul
in
cmpsb
fbld
out
cmp
jne
aas
ljmp
xor
iret
sub
dec
mov
or
cli
orl
dec
push
into
push
cmc
xchg
outsl
in
cmp
lea
gs
mov
push
and
jnp
cmpsb
ja
bound
ror
mov
cmp
ljmp
cs
push
mov
rcrl
jl
push
shrl
gs
jbe
jge
inc
jp
fcmovne
xor
lret
sbb
mov
jns
mov
test
mov
int
je
jp
int
xchg
scas
jl
pop
or
adc
adc
dec
pop
sbb
inc
add
mov
loop
adc
push
aas
lret
mov
mov
xor
fstps
xchg
pop
out
and
sti
ja
xchg
lret
lret
je
lods
and
fisttpl
notb
push
popf
xor
cwtl
mov
dec
in
ljmp
lret
js
mov
pop
push
inc
popf
sub
das
jnp
pop
mov
push
cwtl
or
aad
mov
mov
js
dec
sti
jmp
mov
xor
or
aad
sbb
lret
inc
into
pop
lret
incb
add
insl
cli
js
lcall
sbb
fcmovbe
mov
pop
packssdw
and
lock
adc
popa
fsubs
mov
xchg
jne
or
lea
xlat
mov
jecxz
mov
js
lret
xchg
xchg
loope
xchg
sub
int3
jl
hlt
xchg
loopne
sbb
aad
pop
aad
test
ret
pop
and
jge
mov
or
push
jno
mov
sbb
xor
std
sub
mov
cmp
mov
lret
mov
testb
jno
cmc
std
sub
in
push
cmpsb
mov
movsl
fdivrl
add
push
inc
mov
ficompl
dec
sti
cmp
into
push
int3
or
arpl
jp
bound
mov
pop
mov
stc
insl
mov
jns
test
div
mov
adc
test
mov
dec
push
mov
test
push
sbb
sub
stc
sub
stc
dec
push
mov
adc
lret
push
or
mov
lahf
mov
sbb
push
cmp
sub
int
or
mov
ja
outsl
xchg
fimuls
sbb
inc
aas
xor
xlat
out
popa
cmpsl
loop
adc
pushf
leave
lods
cltd
add
jp
je
jb
pop
arpl
call
pushf
sti
cmp
push
sub
icebp
push
jnp
push
pop
addl
leave
lret
dec
adc
out
int3
fsts
lds
mov
icebp
mov
pushf
inc
fs
or
xor
movsb
or
movsb
popf
les
inc
push
lret
dec
inc
adc
sbb
pop
push
imul
xchg
lret
mov
rcrb
xchg
imul
hlt
mov
addl
popf
iret
lock
adc
aad
push
mov
push
outsb
mov
lods
inc
pushl
sbb
xchg
cmp
mov
in
push
dec
jb
and
add
and
jle
pop
dec
cmpsl
mov
cmp
pop
mov
mov
in
cmp
dec
wbinvd
jo
inc
shl
outsb
jne
sub
add
pop
mov
sar
bound
cmp
fnstcw
iret
mov
pop
bound
ffreep
pop
jae
and
not
and
imul
sub
mov
lds
in
cs
pcmpeqb
gs
lahf
cld
jl
and
sub
repz
mov
cmp
xchg
jae
jns
push
fisubl
call
cmpsl
mov
push
es
mov
cmp
aaa
xchg
and
adc
push
pop
stos
fistpll
ror
mov
cltd
pop
jbe
popf
iret
movsl
pop
xchg
scas
mov
rcrb
mov
pop
xorb
popf
mov
ds
inc
dec
lcall
mov
ja
pop
adc
adc
outsb
mov
pop
xchg
xchg
push
sub
or
adc
pop
lret
jl
scas
imul
rorb
popf
mov
jg
mov
ds
mov
pop
or
xchg
xchg
push
stos
ret
cmp
push
or
push
fstps
or
jecxz
fwait
sub
aam
ja
into
mov
inc
out
int3
fcmovnu
inc
xchg
xchg
push
frstor
out
mov
lcall
test
sbb
pop
ror
sub
add
jnp
push
sub
add
adc
test
stos
or
dec
mov
nop
test
je
add
inc
cmpsb
xor
mov
sbb
cmpsl
lods
movsb
insl
lret
and
xor
ljmp
jbe
rcl
std
out
sub
dec
fs
loopne
mov
sbb
outsl
xor
mov
out
sbb
dec
push
push
lods
into
jae
add
testl
or
rcl
mov
subb
dec
andps
pop
push
mov
std
and
ret
mov
ss
xchg
cs
and
lock
rolb
fldcw
mov
mov
mov
into
mov
hlt
inc
mov
pop
xor
sub
addr16
add
add
and
sbb
loop
roll
repnz
xor
sahf
lock
cmp
ds
outsb
je
dec
test
fdecstp
dec
dec
arpl
push
jne
jno
push
push
insb
jmp
jge
test
mov
aaa
mov
push
int3
xchg
je
repz
sbb
jmp
enter
shlb
mov
push
sbb
pop
push
adc
aas
xchg
lods
scas
fucomp
lock
inc
sub
xchg
jl
xor
pop
hlt
push
cmpsl
pop
mov
fstpt
jl
jp
rclb
mov
or
shlb
dec
sbb
jecxz
call
inc
mov
push
mov
jae
add
pop
call
std
shrb
dec
loop
movsl
xchg
push
inc
imul
mov
xchg
dec
dec
xchg
sbb
fisubl
inc
subl
push
lcall
aad
dec
pushf
popf
xor
in
mov
xchg
push
jae
push
and
clc
jmp
and
rcrb
inc
dec
and
inc
and
and
ficompl
fwait
call
std
test
cmp
sbb
inc
lcall
mov
and
jp
xor
lods
xchg
sbb
shr
jno
lds
push
jo
dec
ja
push
sbb
cmpsl
and
popf
add
mov
pop
mov
pop
leave
sub
daa
jo
out
test
cli
xchg
dec
mov
and
shrl
call
movd
js
cltd
lods
inc
or
mov
xchg
dec
mov
fsubr
popa
dec
test
jns
dec
icebp
mov
aam
in
xlat
scas
mov
and
xchg
movsb
test
ljmp
push
mov
xor
pop
movsb
mov
jg
in
mov
xor
xchg
dec
mov
mov
int3
cmp
cli
mov
mov
mull
xor
xchg
jne
sbb
and
jb
jbe
jb
pop
cmp
stc
adc
int3
stos
lret
inc
mov
lods
mov
loopne
pop
pop
xor
push
inc
pop
xor
pop
sbb
lods
or
mov
sbb
xor
push
inc
dec
lcall
data16
movsb
dec
dec
scas
sbb
in
pop
jg
mov
call
cmp
inc
jne
outsl
sub
ror
pop
clc
mov
push
mov
jbe
mov
pop
cmpsl
cli
loope
gs
sub
scas
dec
fsubs
pop
out
push
cs
loope
stos
sbb
int
cmp
clc
or
ficoms
jl
stos
in
jno
test
pop
dec
pop
and
fldcw
ljmp
or
ret
lret
mov
jmp
xor
loope
mov
int
sbb
repz
mov
movsb
and
pop
adc
xchg
dec
inc
stos
mov
and
mov
and
pop
sub
out
or
add
push
sbb
nop
in
popa
inc
fildll
mov
in
cld
popa
jnp
cmp
les
sub
imull
test
mov
add
sbb
stos
fldenv
xor
sub
cmc
jae
out
out
add
fistpl
nop
js
adc
mov
out
dec
mov
cmp
dec
es
test
jl
bound
repz
mov
sub
or
xor
xchg
andb
cmpsl
cmp
lahf
push
loope
jmp
pusha
frstor
je
cmp
inc
gs
iret
jle
out
cmp
lds
fwait
jns
mov
xorl
sub
ljmp
clc
jae
lcall
sub
jmp
xor
mov
mov
push
movsb
sbb
jno
xor
data16
movsb
negb
push
sub
mov
shrb
xor
sbb
mov
or
stos
sbb
add
addr16
lea
mov
movntps
push
pop
mov
aas
lock
lods
je
mov
push
loope
inc
cltd
es
or
bound
in
mov
pop
in
loopne
mov
fucomi
xchg
sarl
cmp
mov
dec
cmp
fs
out
outsb
push
stc
imul
push
jbe
test
fsubs
enter
lret
and
test
xchg
rorb
scas
insb
stos
roll
mov
jge
sbb
out
out
add
in
add
mov
dec
or
mull
test
in
ficompl
cld
push
dec
add
jb
push
adc
or
popf
cmpsl
movb
inc
sarl
adcb
push
daa
sub
call
sbb
pop
xchg
xchg
cmp
pusha
xor
push
stos
jo
imul
pop
pop
std
sbb
lea
adc
pop
push
je
test
push
jg
push
test
pop
adc
inc
mov
and
add
pop
push
imul
and
aad
mov
fs
mov
xchg
sbb
xchg
mov
icebp
cmpsl
push
int
mov
loop
fildll
mov
push
rcrl
int3
mov
sbbb
and
cmp
push
add
das
cmpsl
cmp
mov
jle
lods
dec
les
mov
loope
jl
sbb
mov
stos
js
mov
fisubs
sti
rolb
lea
ret
mov
insl
mov
or
inc
lcall
or
sbb
mov
sbb
cmp
lods
in
movsw
call
icebp
push
xchg
adc
cli
inc
rol
sbb
push
xor
adc
ss
xor
outsb
cmp
scas
push
jbe
xor
and
pop
aam
lret
hlt
jle
push
push
mov
lret
sub
std
insb
push
fstl
mov
imul
adc
mov
pop
test
fiadds
mov
xchg
rcrl
sbb
mov
adc
xchg
int3
insl
add
ret
ret
fidivs
fmuls
leave
aam
or
sbb
jns
cmp
mov
inc
inc
sbbb
outsb
lahf
dec
inc
lea
xor
mov
enter
ret
cld
int
adc
inc
std
loopne
pusha
stos
or
add
mov
cli
in
push
jmp
adc
sub
shlb
mov
ret
jae
insb
stc
mulb
je
or
xorl
pop
xor
and
popa
popf
testl
add
lods
mov
inc
mov
sahf
out
dec
mov
popa
mov
lods
and
sbb
adc
mov
aad
lock
mov
cld
stos
or
mov
mov
fstps
out
sub
icebp
cli
cmpb
push
cmp
jp
outsl
out
xchg
addr16
aad
aad
sbb
out
inc
int
mov
sbb
xchg
mov
rcr
mov
outsb
psubw
lea
pop
in
jne
adc
es
mov
mov
dec
and
inc
inc
xor
dec
in
int
cmc
mov
and
add
cwtl
cmp
out
xor
lret
xor
jbe
jb
popa
xchg
scas
or
addr16
or
fildl
aad
push
dec
ficomps
pop
adc
push
das
xchg
imul
fcmovbe
mov
dec
jo
mov
mov
mov
leave
sti
mov
mov
bnd
or
decl
lahf
pop
sbb
cmp
adc
mov
mov
aad
or
ret
jmp
lds
xchg
hlt
cwtl
pop
push
test
mov
out
stos
push
into
test
loop
push
test
ja
shl
and
xchg
clc
jge
aam
popf
fdivp
lock
cmp
rcll
mov
push
mov
dec
push
or
and
or
pop
loope
mov
ret
test
inc
ret
xor
adc
lea
pop
adc
jbe
out
out
add
lods
mov
lret
xorl
push
or
orb
lahf
lock
xchg
das
sbb
pop
aad
lret
fdivs
push
sub
fwait
pop
mov
cli
fcomps
aaa
adc
jnp
fwait
addl
lock
xlat
lods
push
mov
push
push
stc
jne
add
imul
std
int
lret
stos
jmp
mov
xor
xor
aad
adc
or
popf
xorl
sbb
into
add
jle
or
sub
shrl
jnp
sbb
mov
fnstenv
das
jne
add
adc
xchg
push
mov
push
in
dec
je
pop
or
jae
fiadds
or
push
cmp
add
adc
push
test
nop
jno
mov
call
cmp
mov
icebp
nop
cmp
lcall
scas
mov
leave
notb
cli
movaps
pop
inc
push
jmp
addb
pop
test
icebp
ds
repz
inc
out
push
int
mov
lcall
dec
push
and
daa
cwtl
shlb
pop
or
mov
sbb
sbb
dec
repz
mov
fidivrl
stos
push
mov
mov
testb
xor
pop
pop
push
movsb
inc
add
and
arpl
pop
jecxz
std
in
adc
and
out
data16
jge
in
lahf
js
sub
sti
loope
mov
and
adc
xor
aam
cli
jno
mov
fwait
leave
dec
xlat
sti
fdivrs
aad
int3
fsubr
lods
push
xchg
add
dec
clc
mov
insb
xchg
test
mov
out
cmp
cmp
cmpsb
jo
fisttps
or
vunpcklps
leave
imul
and
inc
lods
pop
dec
das
mov
sub
pop
ret
pop
dec
and
cmp
xor
xchg
lret
adc
lea
or
sbb
hlt
sti
es
insl
std
testb
mov
call
idiv
sub
xchg
pop
xor
lods
jnp
cmp
xor
jnp
ds
and
and
sti
stos
mov
xor
out
lods
dec
sbb
das
fwait
mov
add
pusha
push
mov
or
cwtl
enter
mov
cmp
movsb
imul
mov
ffreep
fs
add
add
incb
enter
rclb
mov
mov
pushf
jle
fwait
lock
out
das
test
std
dec
sub
enter
insb
and
int3
clc
test
sbb
aas
cli
ds
pusha
into
add
aaa
stos
pop
pop
push
mov
mov
pop
popf
mov
xor
rcll
push
adc
cmp
popa
sbb
loopne
shrb
hlt
push
mov
dec
mov
jno
icebp
inc
notl
mov
lret
sbb
mull
out
out
or
inc
jle
sbb
mov
aad
movsl
orl
xchg
sub
aad
int3
popa
popf
or
leave
push
mov
jmp
dec
dec
rcr
inc
pop
dec
push
dec
mov
xchg
pop
pop
andb
lret
cltd
test
call
fldenv
mov
xchg
or
cmp
mov
lea
and
mov
mov
jbe
lock
mov
movsl
or
and
aam
ss
cmp
and
pop
lret
mov
and
push
sub
dec
popa
dec
adc
arpl
adc
mov
inc
pop
inc
pusha
cltd
sbb
jmp
jo
data16
inc
cmpb
xchg
stc
mov
ret
icebp
mov
cs
pop
lret
push
dec
aaa
xchg
cmp
jno
shrl
push
dec
lds
ljmp
ds
xchg
xorb
outsl
bound
sbb
sahf
jecxz
sti
test
mov
mov
int
pop
push
in
inc
jl
out
add
or
and
mov
xchg
add
push
mov
out
dec
stos
add
push
incb
rorl
cmc
mov
push
add
sub
cmp
pop
sbb
sub
add
adc
cmpl
fidivrl
push
cmpsl
add
and
cwtl
scas
adc
or
and
scas
je
icebp
jp
jne
sbb
ss
call
adc
add
fnsave
mov
inc
add
cltd
fcomps
dec
dec
arpl
arpl
cmp
jle
sahf
outsl
aam
rolb
les
hlt
popa
dec
ret
inc
lahf
adc
inc
pop
mov
mov
xchg
aaa
add
jbe
jecxz
push
shl
dec
mov
pop
sbb
jne
das
mov
inc
bound
lea
fwait
mov
addl
and
xor
mov
call
mov
mov
cmpsb
ja
cmp
sub
dec
sbb
xor
sub
fsub
insl
idivl
out
add
jae
ret
add
daa
pusha
fcomp
sahf
xor
or
mov
lods
pop
aam
ss
inc
fisubrl
mov
mov
mov
push
push
ss
mov
jae
into
mov
jg
mov
sub
pop
jno
pushf
jns
push
mov
flds
ret
out
xchg
pushl
or
xchg
fnsave
pop
or
or
das
call
and
or
lea
cmpsl
push
stos
cli
loop
and
jge
fisubs
ja
xor
xchg
sbb
mov
push
aaa
push
add
outsb
int
int3
push
xlat
div
and
int3
sub
mov
mov
sbb
or
xor
andl
fimull
fwait
arpl
inc
mov
push
sbb
jp
cmp
stc
and
xchg
jb
enter
arpl
mov
cmpsl
xlat
outsl
push
add
pop
cli
pop
and
push
mov
xchg
push
fcoms
cmpsw
mov
push
scas
add
sbb
ret
les
repnz
xchg
addr16
or
cmp
loopne
mov
imul
popf
xor
mov
lock
sub
xchg
push
push
mov
cli
enter
insb
je
mov
inc
roll
scas
scas
and
push
mull
sbb
ljmp
ja
pusha
pop
rorl
movsl
cmpsl
aam
mov
cmp
dec
mov
sub
mov
out
sbbb
lret
mov
test
iret
sbb
cltd
xor
sub
icebp
jecxz
ret
dec
scas
pop
mov
aam
test
mov
clc
mov
adc
cmp
daa
push
fucomi
jne
fldenv
sahf
dec
xchg
repnz
jbe
xlat
sarb
sar
pop
pusha
sub
sbb
xchg
lcall
movsb
push
loop
push
fwait
movb
ljmp
idivb
xchg
imul
xlat
mov
ljmp
lahf
iret
mov
adc
xchg
adc
cmpsb
push
lea
mov
cmp
cmp
inc
mov
inc
movsl
jge
jmp
aas
ja
push
shll
jl
insl
imulb
xchg
adc
cld
mov
push
mov
push
or
sbb
xchg
outsl
hlt
sbb
sti
and
sub
popf
stos
out
sahf
lock
and
sub
fstps
or
pop
mov
push
pop
mov
mov
sub
cli
out
xor
inc
loop
stos
adc
lahf
ja
cmpsb
jne
push
mov
inc
xchg
enter
scas
jge
mov
pushf
jnp
aam
push
shlb
pop
lret
push
xchg
imul
loop
mov
clc
jb
fadds
pop
scas
sbb
test
xchg
lret
dec
test
fimull
hlt
enter
outsb
jbe
mov
cmp
mov
popf
fmulp
xlat
lret
hlt
outsb
outsl
in
scas
imulb
jecxz
pop
and
pop
and
rcrb
cmpl
jle
or
lcall
inc
or
push
inc
fst
jp
sub
push
icebp
and
movsb
add
sub
pushf
fldenv
stos
or
pop
sub
cmpb
inc
cli
dec
in
aaa
and
fucomp
jge
cld
sub
loope
test
gs
sti
cmp
fwait
pop
push
sbb
out
cld
insl
mov
adc
push
jo
leave
fs
test
pop
mov
xchg
scas
mov
nop
mov
int3
cmp
ret
mov
bound
aam
aad
adc
cmc
jge
sbb
aaa
sbb
je
insl
sub
repz
sbb
jb
mov
into
aad
sbb
push
mov
add
add
and
mov
jg
lds
sti
jnp
sub
adc
loope
stos
mov
mov
pop
pop
mov
push
inc
cmp
dec
test
jbe
xor
adc
insl
out
add
xor
jne
pushf
push
xor
mov
or
stos
sbb
imul
popf
mov
dec
test
aam
xchg
out
pop
mov
cmc
cmc
fldcw
addr16
fldenv
sbb
inc
mov
mov
jp
lret
pop
cwtl
fadds
shl
mov
pop
xor
inc
enter
or
pop
adc
aaa
enter
mov
out
push
inc
dec
cmpsl
fstpt
xchg
jecxz
fldt
notb
sub
lret
mov
mov
adc
lods
sub
cltd
fwait
inc
mov
test
pop
fwait
ja
lret
dec
adc
stos
sub
fisttpl
jno
scas
cmpl
jg
xchg
daa
mov
insl
mov
test
adc
sub
push
lods
sbb
dec
pop
fcoml
cli
imul
addr16
and
ret
je
xorl
cmp
lret
cmp
and
sbb
sbb
out
add
hlt
test
push
mov
pop
push
sbb
sahf
repnz
shrb
pop
push
jno
push
hlt
pushf
pop
adc
stos
in
ja,pt
bsr
loop
cwtl
ret
mov
xchg
shll
aam
popf
push
inc
movsb
xcrypt-cbc
cmpsl
xchg
or
push
mov
jmp
jle
int
test
sbb
inc
dec
in
xor
cld
test
jnp
repz
bound
push
lcall
mov
push
mov
mov
clc
mov
sbb
dec
in
xor
aas
js
cmp
xchg
jno
lds
sub
and
lahf
iret
adc
add
cmpsb
stc
mov
jae
mov
out
jmp
lret
loopne
cmp
or
mov
mov
pop
mov
mov
add
into
mov
cmp
fmuls
repnz
inc
adc
into
lods
stc
aas
lock
aaa
cmp
aaa
outsb
dec
mov
gs
dec
push
adc
addb
sub
mov
sub
jbe
leave
push
sarl
add
adc
ss
jns
add
push
hlt
rclb
adc
dec
cmpsl
dec
fcomps
mov
imull
jae
sbb
add
fwait
xchg
sar
es
inc
xchg
clc
mov
cs
jno
cltd
iret
fdivr
sub
mov
loopne
jno
jae
dec
decl
mov
insl
jmp
mov
repz
and
imul
mov
and
mov
and
pop
and
icebp
cmc
cmc
aaa
aam
insl
add
xor
nop
xchg
movsb
repz
xchg
int3
cmp
cmp
cmp
push
sbb
mov
sarl
sub
xor
push
mov
mov
cmp
test
mov
stc
fimull
sahf
shlb
shrl
push
pop
mov
ja
xor
fwait
ljmp
xchg
mov
sub
cmp
mov
mov
lret
sbb
mov
dec
test
int3
gs
add
mov
lea
lock
jmp
push
push
popf
xchg
fstl
fnsave
or
lahf
stos
outsl
jb
mov
iret
mov
inc
sbb
stos
ret
mov
mov
inc
jae
subl
inc
movsb
cmp
fwait
iret
fsts
arpl
push
shrl
jle
jae
in
sahf
out
mov
rcll
stos
pop
sarb
push
enter
js
jmp
das
mov
cwtl
in
sub
outsw
shll
or
push
cmpsb
test
scas
lea
push
and
movsb
mov
fwait
adcl
pop
inc
jo
sbb
outsl
subl
add
sbb
push
cmp
cli
mov
lcall
fistl
call
js
mov
lock
dec
add
inc
xchg
adc
imul
pop
xor
xchg
ret
ror
ss
pushf
pushf
nop
cmp
out
cli
shll
aaa
js
in
push
jp
jnp
add
movsl
adc
inc
sub
repz
mov
movsb
push
jno
aad
push
shll
testb
std
push
jno
out
aam
popa
arpl
xchg
push
inc
or
pop
flds
push
scas
leave
mov
movsb
scas
jb
scas
imul
xchg
jmp
inc
stc
jge
and
add
xchg
int
or
xchg
mov
jmp
out
popf
mov
in
cmp
mov
repz
push
test
or
jle
xor
mov
mov
ret
xchg
stos
mov
pop
scas
sar
das
push
push
inc
fimuls
cmp
in
mov
cli
test
sub
orb
adc
add
rorl
loop
repnz
or
push
incl
nop
jns
mov
cmova
neg
shlb
xlat
or
sub
data16
aad
add
jecxz
adc
loope
mov
pop
push
loop
add
sub
and
dec
mov
ja
movsl
cmc
sbb
pop
mov
pop
fisubrs
push
mov
imul
arpl
in
popa
lea
push
ficomps
cmp
je
lods
outsl
ret
mov
es
cmc
xor
aas
int
mov
mov
ja
jae
add
jle
or
adc
or
mov
cmpb
sbb
pop
add
imul
cmp
sbb
and
lea
lcall
pxor
pop
xchg
adc
and
ficompl
int
add
xchg
or
out
xchg
lsl
mov
pop
or
cltd
fistpll
adc
mov
imull
insl
push
pop
cmp
jmp
or
aad
jg
scas
orl
xor
fistpll
jne
lock
push
sbb
iret
lcall
out
scas
mov
mov
insl
add
pop
iret
cltd
orb
dec
fmuls
stc
daa
into
icebp
or
xor
dec
xor
rolb
dec
rcrb
pop
cmp
jmp
adc
inc
repnz
push
lret
addr16
adc
xchg
stos
xor
or
int
or
xchg
rol
fldt
cmp
pop
ret
in
pop
add
call
push
mov
or
sti
fwait
xchg
cltd
jecxz
ret
fldenv
sti
dec
dec
jmp
adc
xor
lock
lods
popa
daa
mov
xchg
and
les
and
mov
and
and
adc
and
add
in
shld
ficoms
test
sub
mov
lds
jmp
cmp
and
fidivrl
popf
mov
pop
mov
sub
dec
repz
pop
movsl
and
add
sbb
dec
xchg
mov
mov
in
jmp
addl
mov
psllw
mov
or
pop
mov
out
mov
pop
lock
xor
and
push
adc
sub
imul
adc
add
dec
arpl
jp
jne
stos
sahf
shlb
cmp
push
inc
push
jge
shlb
sbb
jnp
popa
es
and
mov
cmc
mov
insb
pop
test
incb
jmp
push
jmp
hlt
fs
push
inc
push
fisubs
mov
xchg
pop
clc
pop
ret
aam
jns
sbb
push
xchg
sbb
lret
inc
jl
or
popa
push
xchg
mov
add
sbb
movsl
pop
cmpsl
mov
sbb
icebp
ret
fs
push
pop
xor
les
or
enter
adc
push
xchg
jmp
mov
outsl
icebp
aam
mov
lds
ss
jle
lods
dec
inc
ret
shrb
cmp
repnz
ja
cltd
mov
fnstenv
adcl
inc
xchg
xor
subl
mov
in
adc
adc
inc
mov
sti
cmp
mov
add
movsl
push
cwtl
ss
dec
push
out
xor
sbb
in
stc
sub
arpl
mov
repz
sub
jne
xchg
hlt
pushf
add
add
adc
insl
jle
and
out
jle
sbb
jp
dec
push
arpl
jecxz
push
negb
std
sub
gs
add
loop
arpl
stos
into
xor
mov
sub
stc
push
push
jmp
or
shl
push
cmpsl
je
stc
subb
lock
cld
bound
aaa
ss
sub
mov
pusha
flds
xchg
nop
cs
mov
popf
jnp
pushf
dec
adcb
pusha
bound
mov
outsb
xchg
hlt
shll
shll
into
nop
add
fnsave
cmp
dec
cmp
rolb
or
mov
ss
cmc
call
out
repz
xchg
jb
gs
sub
in
jae
xchg
mov
adc
mov
mov
cmp
call
jae
mov
push
adc
mov
jb
mov
lock
cmc
adc
push
je
pop
xor
inc
stc
aaa
and
loop
leave
mov
pop
cli
lds
sub
mov
sahf
dec
push
add
outsl
push
lods
cltd
add
and
fstps
cmp
in
dec
dec
insb
out
xchg
bound
inc
cmpsb
bound
bound
aas
mov
clc
stos
orb
iret
jne
xchg
jge
dec
xchg
aad
adc
dec
inc
pusha
sub
add
stc
movsl
inc
cmpsl
ljmp
cwtl
cmc
in
xchg
shlb
xchg
or
inc
and
test
iret
in
sub
jne
das
je
jno
xor
das
mov
mov
stc
fwait
and
adc
jno
dec
lcall
jp
rolb
int
imul
jns
ffreep
faddl
jne
xchg
addr16
mov
cmp
bound
mov
daa
pop
stc
sub
mov
and
pop
in
pop
mov
mov
sub
js
imul
imul
jae
lds
das
scas
mov
shlb
test
add
sbb
cmp
dec
insl
or
rcll
repnz
mov
shl
jl
mov
call
pop
cmpsb
cli
adc
and
std
and
aad
fs
mov
xchg
jp
cmp
das
mov
mov
mov
fiadds
push
mov
lods
push
pop
jno
jnp
cmpsl
add
dec
and
cmc
add
push
lret
cmc
outsb
mov
hlt
out
lret
fisttpll
inc
arpl
push
sbb
aad
adc
push
lock
cmp
test
cmp
adc
pop
std
rcrb
fldl
push
push
loope
and
lock
test
mov
call
ss
cs
das
test
and
sbb
inc
lcall
pop
adcl
pop
inc
lea
cli
pop
cmpsb
out
mov
lret
xor
mov
cmpb
test
hlt
jno
dec
mov
push
scas
mov
test
cli
sti
lock
jecxz,pn
popl
mov
push
push
sbb
xchg
pop
pop
mov
xchg
repnz
jae
fdivr
mov
jb
pop
loop
sub
mov
jno
sbb
mov
mov
nop
rorb
pop
inc
test
dec
pop
cmp
cwtl
into
pop
fstp
push
bound
push
push
push
cmpb
add
xor
sub
rclb
adc
lds
xor
inc
std
les
or
xchg
xor
cmp
in
add
into
dec
jb
repnz
out
pop
mov
into
xor
xor
sbbb
fsubrp
imul
jp
xchg
in
aad
jle
lock
dec
pop
loope
scas
jle
cld
adc
mov
xchg
je
rorb
fistpl
push
data16
std
pushl
idivl
sub
or
lahf
call
mov
test
icebp
lret
out
loop
lret
and
cmc
adc
cmp
add
inc
xchg
adc
subl
hlt
fs
push
mov
sub
xchg
push
push
fcom
sub
out
fidivrl
inc
mov
insl
outsb
mov
in
sbb
in
scas
or
shll
xor
cmpsb
movsl
lods
loopne
push
inc
imul
jmp
and
mov
push
pop
mov
fmulp
cltd
dec
or
stos
jo
ljmp
or
fadds
inc
inc
rcrl
sahf
addr16
cmp
inc
and
dec
jmp
mov
inc
out
loop
cmp
pop
aad
pop
adc
dec
cli
loopne
pop
cwtl
add
jnp
dec
lods
jmp
adc
pusha
sarb
iret
icebp
data16
lret
lahf
loope
inc
shrl
pop
push
jo
sub
push
pop
add
xor
pop
ds
testb
ja
jne
sbb
xor
lahf
xorl
ficompl
fdivrs
fwait
mov
mov
outsw
in
je
inc
insl
cmovo
mov
in
popf
stc
cmc
test
icebp
imul
in
dec
jnp
daa
into
inc
adc
mov
sbb
add
push
mov
pop
pop
sbb
enter
add
aas
fcmovne
sti
jnp
mov
jp
test
mov
inc
xor
scas
jp
clc
pop
inc
fs
cld
sub
outsl
repz
add
inc
in
movsb
ljmp
mov
in
dec
test
cmp
inc
ret
sbb
inc
mov
and
xchg
sti
stc
std
sahf
cmp
xor
mov
popf
out
dec
or
mov
jbe
sbb
aad
cmp
ljmp
pop
xchg
repnz
and
sub
add
out
push
xor
or
jmp
das
mov
in
aas
push
inc
pushf
xchg
add
lods
add
xchg
cmpsb
mov
pop
pusha
jmp
into
xchg
and
sub
xchg
add
arpl
pop
xchg
adc
ja
inc
mov
insl
add
lods
pop
mov
fs
cmp
jmp
lret
dec
arpl
fmull
inc
and
jp
push
aad
iret
movsl
pop
sar
xchg
jmp
aam
mov
push
sahf
adc
into
fwait
mov
adc
mov
mov
dec
and
add
or
sbb
fistps
jne
pushf
scas
test
pop
xchg
outsl
sbb
lret
outsb
push
inc
data16
inc
add
jbe
ret
iret
sbb
in
sbb
pop
popa
test
fnstcw
cmpsb
push
test
mov
fidivl
add
fildll
aaa
adc
ljmp
pop
push
xor
ret
and
mov
cwtl
insl
xchg
or
inc
mov
inc
xchg
adc
mov
lods
mov
outsb
sub
sahf
mov
pop
mov
adc
inc
sub
push
fptan
jle
mov
and
lods
add
pop
std
mov
cmpsl
faddl
sbb
add
sub
adc
stos
mov
popf
push
push
mov
jne
jge
aad
mov
inc
pop
or
orb
jp
repz
pop
dec
sub
cmp
cmc
push
fadd
cmp
test
fisubrl
movsb
xor
lret
ljmp
dec
nop
mov
xchg
or
mov
sbb
inc
push
jecxz
orl
in
mov
pop
xchg
mov
mov
movsl
mov
scas
les
lret
cmpsb
add
and
lods
iret
dec
add
aam
mov
stos
add
ficompl
push
iret
push
mov
push
xor
mov
fistl
pushf
cwtl
mov
jp
mov
or
test
jno
incl
adc
mov
mov
insb
cmp
js
mov
and
mov
hlt
mov
dec
orb
adc
mov
scas
sub
inc
aam
dec
hlt
inc
cs
and
ljmp
fistps
das
rcrb
xchg
in
into
inc
and
mov
test
insb
jle
push
or
imul
int
sbb
pusha
cmp
int
imul
cmpb
loopne
ds
cmp
int3
mov
inc
mov
dec
pop
and
fchs
and
dec
cmp
arpl
dec
test
pop
sub
pop
stc
scas
push
xchg
inc
pop
mov
cmpl
xchg
fcompp
into
jge
mov
push
and
movsl
dec
rclb
jb
jnp
xor
jge
sbb
add
add
mov
xor
in
mov
xchg
stos
pushf
pop
mov
cmp
xor
out
inc
jbe
or
lret
cli
mov
fs
cmpsl
divb
in
push
dec
sub
sub
fldl
and
fxtract
sti
xor
and
sbb
mov
imul
push
mov
mov
xchg
in
or
aam
sbb
fcmovnb
mov
adc
test
pop
push
dec
and
or
ljmp
fcmovu
in
test
les
mov
inc
inc
push
cs
pop
fwait
adcb
dec
cli
inc
pusha
psubq
lret
mov
xchg
or
andl
sub
cmp
mov
dec
cmpl
jmp
mov
sub
inc
fldenv
in
jnp
jne
push
test
and
xchg
shl
pusha
jp
mov
repnz
lcall
cld
sbb
mov
sahf
popa
xor
jg
mov
jnp
push
loop
mov
sub
es
mov
push
sti
mov
int
imul
js
mov
xchg
sar
adc
sahf
outsl
pop
movsl
cli
nop
mov
jno
push
sbb
mov
inc
repnz
ljmp
nop
cli
orb
xor
jae
pop
rorb
inc
cli
test
pop
ret
xchg
mov
xchg
shr
stos
sbb
pusha
cmp
mov
gs
subb
sub
push
bnd
jne
addr16
jns
mov
aam
cld
mov
xor
aas
cmpb
jns
add
mov
inc
or
lods
gs
jle
cltd
push
sarb
pminsw
out
addb
mov
call
movsl
xchg
lret
adc
xlat
xchg
cwtl
aaa
imul
mov
and
jne
stc
in
mov
mov
cmpsl
ret
mov
gs
sarb
mov
stc
or
pushf
xlat
repz
dec
or
lods
adcb
lret
adc
lfs
mov
cmp
insb
call
pop
xor
loope
clc
repnz
into
pop
fistl
adc
lcall
fistpll
insb
pop
xor
shll
nop
xor
mov
fwait
pop
fsubs
add
out
pusha
popa
jb
mov
mov
pop
in
or
inc
mov
loopne
mov
jl
inc
mov
sbb
aaa
mov
adc
sub
repnz
in
and
fs
inc
scas
cmp
gs
pushf
jae
sub
sbb
and
cmp
pop
lahf
dec
mov
jge
mov
in
add
scas
pop
dec
cmpsb
pushl
push
lods
xchg
xor
in
aaa
fidivl
shrl
cwtl
sub
inc
es
add
mov
sub
or
pop
pop
and
addb
dec
inc
test
fsts
push
es
icebp
shl
les
or
test
mov
lds
dec
jae
cld
cmp
push
stc
pop
pop
xor
jbe
jle
jns
dec
mov
xchg
aam
cmpsb
pop
stos
lcall
adc
sub
mov
sahf
jmp
cld
scas
cmp
sbb
cmp
arpl
and
mov
sub
cmc
es
adc
into
shl
movsb
push
hlt
mov
or
jg
xor
dec
pop
xchg
add
inc
jle
xor
lcall
arpl
sbb
movsl
repz
or
cmpsb
adc
pop
push
fwait
rorb
test
push
mov
jo
inc
cmp
or
jne
fwait
popa
repnz
mov
push
hlt
bound
jmp
mov
call
outsb
jne
fcomps
and
fs
test
scas
mov
mov
negb
sub
push
loope
cmc
arpl
push
mov
es
push
mov
push
adc
test
imul
xor
lds
nop
dec
xchg
decl
xor
lds
jmp
jne
mov
inc
mov
sahf
test
ds
and
fiadds
rcrl
xchg
aam
mov
mov
insl
adc
frstor
dec
inc
in
shrb
cmp
out
ljmp
sti
mov
mov
sub
mov
cli
out
xor
jnp
lret
xor
imul
arpl
add
es
js
cmpl
cmp
add
lds
mov
nop
xchg
fists
pop
jmp
or
dec
or
jg
jmp
scas
xchg
dec
inc
data16
adc
imul
in
das
jmp
and
cwtl
or
mov
sahf
hlt
ljmp
icebp
bound
int
dec
dec
out
inc
lock
pusha
clc
mov
test
push
add
ret
mov
dec
sub
mov
fs
mov
js
mov
sub
cmc
sbb
es
lret
sbb
jecxz
aad
or
fadd
iret
out
adc
cmp
lret
arpl
jge
lret
insb
sbb
addb
jge
mov
cmp
or
stos
mov
adc
and
paddsb
inc
inc
mov
mov
lea
jecxz
mov
cmp
xlat
push
xlat
fists
or
mov
add
pop
cld
aas
insb
sbb
push
fdivrp
adc
jb
mov
cltd
mov
ret
lds
add
and
repnz
imul
icebp
in
and
xchg
inc
adc
inc
add
mov
add
jg
pop
xchg
pop
lods
gs
xchg
xchg
bts
cmpsl
movsb
xor
xchg
mov
sub
inc
sbb
pop
inc
sub
adc
sbb
xor
jge
leave
sti
out
ja
mov
jle
rol
xchg
and
jp
adc
inc
xor
mov
fwait
adc
mov
pop
scas
jp
or
out
cs
inc
lahf
icebp
xlat
iret
andl
jo
inc
inc
lahf
cmp
jo
xor
adc
sub
js
push
xor
sbb
repnz
inc
dec
and
in
push
sbb
inc
sub
dec
mov
mov
scas
cli
imul
pop
xor
sub
int3
imul
push
shll
hlt
adc
push
mov
push
jle
aas
dec
mov
sub
add
adc
ficompl
ds
xor
jmp
pop
push
call
dec
bound
scas
jno
xchg
loopne
xchg
or
push
mov
pop
cmpsl
cmpsl
inc
gs
nop
and
fwait
cmpl
push
cltd
cwtl
sbb
clc
cmc
das
jl
mov
aam
in
mov
cmp
push
loopne
pop
in
je
pop
sahf
inc
std
mov
mov
inc
adc
dec
out
fistl
xor
pop
fisubrl
sbb
mov
fidivl
sub
orl
mov
xor
xchg
arpl
cmp
ja
ret
pop
daa
int
call
jle
stos
add
insb
mov
xor
pop
jp
pop
sub
push
sti
cmp
jle
push
cmc
adc
or
int3
mov
inc
incb
mov
aad
mov
cmp
mov
cmp
sub
jbe
adcl
jno
mov
test
inc
pushw
mov
insl
mov
cltd
sti
mov
adc
leave
sub
pop
xchg
stc
leave
cmpsl
roll
loope
lcall
add
jnp
sub
sti
and
imul
dec
add
cmp
fsubrl
mov
sub
subb
in
insl
fisubs
faddp
add
dec
cmp
cltd
lea
js
jno
xor
stos
mov
les
add
in
js
les
cld
mov
adc
push
adc
and
mov
lcall
xchg
mov
push
testl
jl
xchg
jp
pop
mov
mov
jne
pop
js
or
loop
adc
and
inc
lahf
movsb
int
xorl
dec
cmpsl
lahf
sub
and
or
mov
adc
lret
or
mov
out
imul
lods
xor
sti
mov
jge
testl
test
aad
iret
push
aam
push
into
inc
sbb
jge
ja
in
mov
pop
cmp
jbe
push
sbb
sbb
rorl
and
add
sbb
stos
add
dec
lret
pop
sbb
bound
mov
jo
fisttpl
leave
or
sbb
ja
sbb
jae
xor
test
push
sbb
mov
fcomps
lock
adc
mov
jno
das
xchg
into
stc
inc
mov
xor
je
inc
addr16
addb
jecxz
cmp
cmpb
movsl
mov
xor
cld
pop
pop
cmc
fidivrl
stos
mov
pop
and
and
daa
and
fs
and
sahf
outsb
popf
xchg
leave
jle
mov
cmp
push
or
inc
lea
pop
lea
fs
push
ds
aas
push
daa
imul
jle
mov
cmp
dec
xor
sub
addr16
in
mov
pop
int3
cmp
xchg
test
repz
sbb
test
rolb
lods
adc
orl
adc
stos
int
adc
test
xchg
adc
fdivl
jae
mov
or
push
jecxz
stos
inc
xor
push
addr16
lods
das
cltd
loope
xchg
stos
mov
add
stos
push
jb,pn
in
out
sub
push
sbb
clc
push
pop
jne
mov
outsl
pushf
data16
cmpsl
sub
out
ficoms
shlb
mov
lock
or
stos
adc
addr16
push
mov
jmp
aam
repnz
push
out
sub
icebp
push
daa
fst
mov
pop
xchg
and
les
ret
add
fstp
scas
cmp
push
subb
or
push
mov
add
fistpl
push
push
addr16
lahf
and
imul
pop
xchg
push
mov
or
pop
inc
add
cmp
adc
fdivl
sbb
ljmp
jge
jle
aad
pop
dec
push
std
pop
pop
lods
negb
cmp
add
adc
lods
jb
rorb
push
pop
fs
cs
ror
mov
bts
aad
pusha
cmp
cmp
inc
fsubl
mov
jnp
xlat
cmpl
pusha
orl
cmpsl
and
das
imul
repz
das
inc
xor
add
inc
sbb
daa
xchg
lcall
and
cmp
leave
dec
cmp
push
enter
inc
xchg
and
xor
stos
addr16
xchg
jno
sbb
adc
or
pop
push
push
xor
into
and
dec
shll
sub
jge
ficompl
lahf
mov
add
xor
fldt
cmp
dec
jno
es
or
mov
mov
and
orb
jns
in
adc
and
sbb
or
or
hlt
packsswb
inc
inc
cmpsb
xchg
sub
gs
pop
push
inc
aas
pop
rcll
add
xor
cmp
pusha
lds
or
rorl
fstps
and
mov
mov
popf
in
fnstcw
data16
lcall
lock
or
mov
xchg
or
mov
fiadds
cmc
dec
das
icebp
nop
ss
pop
int
push
mov
sbb
jmp
scas
rclb
popl
out
popl
jbe
or
adc
leave
add
faddp
pop
push
or
movsb
add
cmc
add
mov
icebp
ret
add
stos
push
into
sahf
les
push
je
xchg
rcl
lret
subb
xchg
test
test
loope
call
inc
xchg
dec
jp
test
cli
xor
ret
xchg
aas
scas
leave
xor
mov
fxch
into
push
nop
jo
jmp
int
gs
and
sub
jecxz
mov
sub
nop
mov
jae
xchg
cltd
out
and
sahf
cmp
jnp
or
hlt
aaa
or
jg
loop
ret
adc
sbb
adc
das
pop
xor
icebp
cwtl
mov
xchg
xchg
mov
scas
xchg
dec
imul
jnp
leave
stc
and
into
lods
out
adc
add
sarb
add
and
mov
int3
ljmp
pop
and
dec
push
adc
jbe
fdivl
jno
pop
xlat
cmp
ljmp
outsb
sub
mov
sub
dec
cld
add
adc
jp
mov
mov
in
or
xchg
pop
idiv
cli
cmpsl
mov
out
loope
out
out
push
out
sub
pop
scas
pop
mov
call
mov
xchg
int
xor
and
mov
fdivs
cmpsb
mov
out
scas
loope
test
clc
mov
mov
cmpsl
test
jl
push
lods
sub
rolb
rcl
lret
push
or
fistpl
jg
fdivs
orl
jne
dec
je
push
dec
inc
sub
mov
sahf
pop
xlat
mov
addr16
sbb
out
out
xlat
sbb
lea
cli
mov
cli
sbb
loopne
cmp
jmp
jb
imul
fildl
pop
mov
dec
pusha
lea
sub
jmp
jno
cmp
xor
ja
jp
jp
out
mov
movsl
push
inc
jne
or
mov
aas
aaa
pop
inc
jnp
mov
shlb
cmp
pushf
push
dec
sub
mov
xor
into
sbb
push
jns
pop
fbstp
ja
adc
lods
popa
shll
stc
lret
jb
out
addb
sahf
mov
cmpsb
pop
int3
imul
rcrl
inc
lods
fdivrs
pop
nop
mov
lds
leave
push
inc
push
cmp
and
mov
movsl
rolb
loopne
cmp
insl
pop
xor
pop
test
popf
sti
jmp
push
lods
or
fimuls
test
dec
or
xlat
call
fwait
push
std
jge
or
mov
clc
xor
je
mov
mov
push
aas
pop
nop
in
pusha
pop
rclb
push
push
mov
push
adc
and
outsb
jge
jmp
into
shrl
and
addr16
jl
sub
movsl
and
sub
in
fstpt
push
test
jmp
imul
cmpsl
cltd
dec
pop
movsb
in
scas
and
xor
call
shrb
adc
lock
mov
movsl
jge
and
xchg
popa
cmpl
lret
jbe
push
cwtl
test
mov
push
stos
pop
pop
dec
sub
rclb
push
ficomps
add
into
shll
cmpsl
stc
or
das
mov
je
int
mov
js
hlt
addr16
xchg
push
adc
test
mov
mov
insl
rolb
jnp
insb
sbb
stos
add
enter
bound
iret
sbb
mov
inc
call
fnstsw
inc
jb
dec
cmp
push
sub
std
xchg
sub
adc
lret
stos
mov
gs
jo
cmpsb
hlt
stos
aam
js
pop
imul
pushf
mov
push
out
std
mov
pop
xchg
or
jecxz,pn
lds
inc
sbb
aas
pushf
sub
fs
inc
inc
jl
mov
cmp
xchg
adc
jle
xor
cmp
push
or
xchg
push
popf
dec
jecxz
pop
add
enter
sbb
out
push
stos
dec
xor
dec
jbe
outsl
xor
cwtl
or
cli
imul
push
popa
or
iret
lret
insb
scas
test
int3
cmp
cmc
mov
es
rcrl
incl
sub
jmp
mov
out
jb
and
cmp
sub
ds
mov
gs
xlat
mov
mov
lods
jecxz
shr
dec
imul
dec
cld
call
movsl
jbe
or
out
inc
aad
rcll
pop
jae
pop
adc
pusha
in
testb
mov
int3
and
xor
les
cmp
out
add
scas
and
insl
rclb
mov
repz
shlb
data16
xor
inc
ficompl
subb
sbb
mov
inc
jno
jmp
or
mov
test
lret
dec
je
loope
adc
in
sahf
out
test
fucomip
into
push
outsl
adc
xor
mov
scas
insl
push
sbb
push
mov
mov
sub
outsl
fst
add
dec
or
mov
xchg
call
sub
js
mov
pop
ret
sub
fcompl
dec
lret
or
movsl
repz
and
mov
and
jae
sbb
fwait
pop
shrl
mov
cmp
not
fisubs
iret
or
and
inc
ljmp
out
nop
data16
push
inc
push
lret
sub
movsb
sbb
xchg
ret
sub
jne
and
mov
or
pop
sub
insb
jecxz
loope
ljmp
mov
xchg
pop
int3
jl
dec
jg
clc
cmp
mov
mov
inc
cmp
mov
jns
in
cli
cmpsl
cmp
cmova
pop
iret
outsl
xlat
cli
mov
push
push
mov
rcll
mov
xor
dec
xchg
cmp
in
enter
and
mov
getsec
movsb
sub
push
into
ljmp
stc
cmp
sub
mov
stos
mov
in
test
sub
aad
lods
je
mov
xchg
xor
xchg
mov
sub
mov
ss
adc
sub
fsubl
push
cs
mov
inc
mov
fbstp
mov
insl
ja
inc
leave
push
sbb
sahf
sub
notb
outsb
repz
xor
cli
fsubl
push
mov
xchg
push
dec
int3
mov
xor
ret
or
outsb
push
cmp
adc
and
test
movsb
pop
stc
mov
pop
test
cmpsb
jbe
aaa
dec
sub
push
mov
shll
jns
or
mov
sbb
movups
and
sbbl
pop
ja
push
testl
ret
adc
ja
sahf
mov
xchg
nop
jge
xchg
xchg
xchg
ja
clc
sti
sbb
sub
adcl
lret
jo
mov
sub
fdivrs
sti
cwtl
sub
scas
cmpsb
or
in
dec
mov
mov
clc
fwait
cwtl
mov
sub
pop
call
sub
enter
jp
repz
push
sbb
les
lret
iret
dec
pop
inc
call
jle
inc
jb
xor
cmp
shlb
push
pop
test
lds
dec
lock
push
dec
dec
and
xor
je
push
mov
mov
imul
mov
pusha
xor
in
loopne
lret
sub
add
add
pop
arpl
adcb
or
cmp
hlt
and
stc
iret
xchg
push
fs
aad
jecxz
mov
mov
ja
testl
aad
sub
mov
or
or
dec
push
sbb
dec
inc
mov
and
or
fucomp
inc
lods
rclb
mov
shrb
cmp
dec
rcll
dec
inc
aam
les
ja
push
xor
cmp
push
push
sub
gs
fdivs
push
add
addr16
mov
mov
in
icebp
stos
dec
rcrb
mov
dec
loop
sti
ret
sbb
mov
and
mov
shlb
push
cli
jae
int3
int3
popa
fisubs
mov
cmpsb
shll
jmp
or
into
adc
lea
dec
push
fldt
std
mov
xlat
int
bound
jo
ja
sbb
mov
jb
aam
dec
cmpsl
jns
jns
shll
je
sub
mov
cmp
xor
adc
sarb
pusha
negb
sbb
push
ds
movsl
jo
xor
cltd
out
scas
cld
cmp
jecxz
fcoms
cmp
fldcw
test
test
stc
xor
mov
push
dec
push
jns
addb
stos
pop
push
mov
loope
test
jl
mulb
cmp
xor
and
jae
sbb
addb
push
ds
push
out
in
jg
rcr
aas
repz
loope
add
jae
mov
and
sbb
and
dec
dec
fstl
icebp
pop
scas
mov
sub
lea
sub
add
push
insl
add
out
xchg
dec
or
daa
sarl
test
xchg
jne
inc
mov
jle
clc
int3
mov
mov
pop
add
add
adc
loop
testb
adcb
dec
cmp
lea
call
adc
mov
ljmp
pusha
fcomps
jb
jp
mov
add
cwtl
lds
or
dec
cltd
push
in
lock
sbb
push
loope
outsl
rorb
push
loope
adc
pop
cmpsl
fists
pop
and
mov
adc
push
xchg
inc
imul
cmp
push
xor
mov
popf
xchg
mov
fistpll
ja
add
jb
sub
fdivl
shlb
xor
and
xchg
popf
adc
push
mov
jnp
pop
and
push
pop
inc
xor
pop
pushf
daa
scas
xor
sub
push
js
ja
jecxz
dec
shlb
mov
xor
adc
rep
add
dec
push
xlat
out
push
sbb
mov
out
jns
fstl
push
loopne
loope
mov
mov
lret
out
fcmovne
mov
adcl
nop
lods
test
sbb
lahf
scas
push
jae
adc
aam
push
sahf
dec
sbb
ror
cmpsb
pop
dec
bndldx
add
or
adc
int3
fcmovbe
test
pop
sbb
pushf
jno
sahf
and
inc
cmp
lcall
and
jb
lret
sbb
out
sahf
das
jg
mov
in
xchg
sbb
sub
jo
ror
add
movsb
push
in
inc
pop
aad
push
or
arpl
jae
xorl
lds
rorb
jmp
fs
mov
xchg
jmp
test
mov
fcomps
push
fistps
aam
xchg
cmpsb
lahf
outsl
aam
je
and
dec
rclb
pop
pop
aam
lods
xor
cmp
fiadds
daa
xor
das
push
std
inc
push
mov
jge
pushf
loop
inc
lods
js
pop
cmp
jle
clc
sub
pop
add
enter
mov
in
mov
out
add
imul
movzbl
jns
cmp
rcll
xorb
jne
and
or
ret
mov
lods
mov
mov
push
scas
sbb
test
in
xor
jns
inc
cmpsl
js
push
and
rcrb
cltd
outsl
outsb
add
mov
inc
lock
adc
aaa
lds
cli
jae
stos
add
daa
out
add
mov
mov
ja
stc
jns
ja
lock
mov
ret
popa
push
cmpsb
sar
add
add
push
aaa
pop
adc
xor
cmp
adc
lcall
aam
leave
add
test
dec
fsubrl
mov
rcrb
je
shlb
shll
cmp
push
out
stos
push
pop
sbb
aam
inc
push
mov
insl
mov
and
inc
dec
pop
xchg
mov
adc
inc
nop
xchg
mov
imul
cltd
fdivs
lret
mov
ljmp
adcb
addr16
nop
sub
ss
daa
jle
sti
dec
scas
push
dec
outsl
add
fsubrs
adc
xchg
lea
mov
mov
enter
cmpsb
sti
mov
inc
cwtl
cmc
xlat
inc
xchg
popa
sub
push
push
adc
lds
push
pop
ret
and
syscall
test
lds
jge
mov
repz
addr16
jecxz
popa
add
mov
data16
pop
sbbl
sub
jb
fs
stc
pop
lcall
out
sti
outsl
dec
add
cli
and
mov
jo
call
cwtl
cld
push
fstpt
repnz
jo
or
cmpl
jo
push
fnsave
pop
imul
out
or
sbb
stos
or
mov
add
or
in
sbb
inc
shlb
push
pushf
adc
pop
mov
inc
dec
xchg
pop
xchg
and
icebp
lcall
sbb
xlat
push
push
mov
cmp
repnz
daa
lahf
flds
mov
testl
cmp
add
mov
push
stos
push
mov
xor
inc
in
inc
inc
xor
std
ds
call
cwtl
xor
push
inc
push
imul
ret
and
sti
shl
dec
shrl
push
push
mov
clc
cmc
cld
ds
push
lahf
xchg
mov
cmp
test
dec
mov
jae
icebp
shrb
sarb
push
in
inc
ret
push
sahf
imul
adc
adc
push
cmp
mov
sub
pushf
or
pop
jge
ret
bound
es
adc
lods
movsl
inc
shrb
or
test
cmp
jg
scas
in
push
fwait
add
inc
out
je
jno
movsl
loop
cmpsb
lret
sbb
push
mov
stos
out
add
inc
test
lods
adc
mov
push
out
arpl
dec
adc
add
lods
jne
mov
pop
ss
les
ret
adc
lock
mov
arpl
mov
and
jg
pop
xchg
jmp
or
orb
or
lds
mov
adc
repz
scas
jg
cmp
jnp
nop
aas
and
xlat
test
nop
adc
add
in
shlb
mov
inc
lret
inc
popa
dec
push
inc
xchg
sub
lock
xchg
sub
cwtl
cmp
inc
pop
add
and
mov
test
xchg
cmp
andnps
pushf
movsb
add
dec
mov
sub
in
add
mov
sbb
adc
sbb
in
rclb
hlt
sahf
daa
jmp
sbb
sbb
and
cwtl
xchg
out
mov
adc
push
inc
clc
mov
ds
jns
or
call
in
gs
xlat
mov
mov
adc
pop
pop
mov
out
inc
fmul
add
scas
dec
jbe
or
sub
fbstp
push
mov
pushf
mov
cmpsb
or
test
inc
cmpsb
cmp
pop
stos
addr16
xorb
mov
ljmp
into
and
mov
outsl
jl
push
xchg
jmp
mov
sub
stc
sbb
es
cmc
mov
movsl
out
adcl
enter
orb
sbb
push
popa
jp
pop
jbe
pop
rolb
popl
pop
and
std
jb
jle
xchg
pushf
mov
std
inc
jns
xchg
xor
insb
in
sub
sub
push
fisubs
popa
test
jmp
mov
sub
push
pop
and
fisubrl
test
cvtdq2ps
xchg
jnp
testl
ds
sbb
cmp
adc
mov
inc
push
cld
mov
fs
lret
and
fldenv
les
shrl
ss
sahf
mov
cmp
out
aas
enter
dec
dec
es
sbb
push
jnp
sti
dec
out
mov
sti
xor
icebp
xor
cld
cld
or
jns
call
xlat
inc
xor
in
fsub
sbb
pop
push
fdivrl
hlt
dec
pop
mov
cmpb
cmp
or
ss
xchg
mov
fsubl
ljmp
mov
in
scas
mulb
test
sbb
xchg
or
push
cwtl
xchg
aam
or
inc
cmp
and
push
fmull
xchg
enter
sbb
dec
mov
cs
lret
pop
in
jl
add
dec
loop
sub
jge
ret
jl
xlat
xor
sbb
push
mov
gs
mov
pop
jne
xchg
mov
filds
sub
adcl
outsb
lods
in
pop
scas
cs
mov
pop
mov
lods
jl
rcrl
test
ffreep
repz
fldenv
xchg
lret
dec
repz
push
adc
sti
pop
push
in
ds
cmovs
pop
jge
loop
outsb
dec
outsl
mov
xchg
mov
jo
cltd
xor
dec
and
lods
lahf
adc
lods
dec
cmc
lret
fs
adc
js
mov
lock
cli
into
mov
je
out
mov
das
or
adc
gs
popl
or
mov
add
fwait
andl
mov
inc
jbe
inc
jmp
xchg
aad
cmp
aad
push
push
adc
mov
mov
repz
ds
cmp
sbb
mov
mov
add
add
out
jb
imul
push
cmp
shlb
das
xor
and
imul
dec
xchg
mov
dec
enter
aaa
clc
add
popa
jge
dec
jl
pop
data16
mov
repz
lock
lods
inc
jne
fistl
sbb
xchg
push
pop
pop
inc
mov
aas
insl
push
sti
jmp
xor
jns
adc
or
push
adc
mov
and
push
ja
insb
test
outsb
mov
inc
xorl
shlb
cwtl
dec
xchg
or
sub
xor
sbb
or
mov
mov
xor
jo
aad
cmc
inc
push
dec
ljmp
dec
je
mov
jg
push
pop
cld
add
pop
outsb
pop
lock
xchg
add
mov
scas
mov
hlt
std
ljmp
mov
mov
pop
push
pop
mov
xchg
cmp
pop
leave
call
add
dec
mov
bound
pop
sbb
out
mov
fs
lock
cwtl
sbb
dec
jae
fisttpl
lcall
bound
adc
inc
cmp
pop
mov
push
push
and
lods
dec
dec
pop
and
lahf
push
adc
xor
jbe
int
push
mov
sub
js
push
jbe
or
enter
ja
and
adc
xchg
xor
outsl
call
jg
sbb
insb
enter
xchg
adc
dec
lret
stc
and
sub
lahf
lret
push
out
xchg
mov
mov
jmp
and
icebp
clc
dec
out
or
pop
mov
js
lods
push
dec
mov
iret
ret
movsb
lods
jbe
dec
ss
aad
fnstenv
inc
push
jmp
mov
add
mov
sbb
mov
pop
ja
push
dec
lcall
push
mov
or
nop
mov
in
mov
icebp
rorl
sbb
inc
ja
push
movsb
jmp
cltd
aam
jnp
lds
push
insl
jne
push
inc
stos
out
popf
cmc
cli
in
popf
pop
and
loop
adc
dec
or
xchg
mov
push
lret
xchg
int3
adc
mov
mov
pop
lahf
outsl
cmp
js
dec
mov
jno
in
jmp
sub
sub
sti
sbb
ja
arpl
loop
jmp
gs
lods
jmp
adc
sub
adc
ja
jno
push
mov
dec
test
xlat
sbb
imul
mov
inc
mov
call
pop
inc
fwait
bound
loope
adc
sti
inc
setno
iret
mov
test
popf
loopne
sub
cmp
sub
push
jmp
popa
loope
clc
in
sbb
mov
dec
pop
push
jb
mov
aaa
adc
or
pop
xor
outsb
inc
and
pop
jge
shlb
lret
shll
sbb
sti
cltd
sub
lock
or
lock
out
jge
movsl
movsb
sbb
fiaddl
fsubr
inc
sbb
and
lcall
and
outsb
dec
lds
mov
ljmp
out
ja
pop
jp
mov
loop
pop
arpl
int
test
out
lret
jg
push
je
xlat
pushf
dec
inc
jns
js
cs
sbb
aaa
mov
and
insb
jbe
test
xchg
test
adc
lods
mov
xchg
cmc
jl
cmp
push
insl
push
fsubr
aam
mov
jne
in
ret
ret
pop
jae
std
cmpsb
loope
andb
sar
xchg
pop
push
pop
call
or
push
xchg
pushf
push
pop
adc
push
xchg
fisttpl
lahf
dec
mov
movzbl
adc
dec
xchg
cmp
mov
sub
imul
or
xchg
pop
push
sub
push
not
push
daa
nop
pop
lea
insb
int
std
mov
sub
or
push
jb
adc
add
mov
sub
jmp
aad
push
psubsb
cld
xlat
fwait
push
cli
pop
jae
pop
push
dec
push
mov
insl
dec
out
ss
divl
js
adc
stos
pop
mov
test
out
and
xchg
jmp
fldenv
aaa
xchg
filds
add
xchg
ds
hlt
inc
int3
fwait
sub
sbbl
adc
lret
jbe
shr
fidivl
loopne
fistps
int3
mov
push
ja
int
arpl
and
loopne
rcrb
in
inc
adc
fists
int3
fcoml
or
andl
lods
movsb
rol
push
dec
jp
jmp
mov
loop
lret
fwait
inc
sbb
add
jb
xchg
out
fdivrs
iret
aam
leave
pop
in
scas
fs
std
std
aas
dec
ret
xchg
mov
ret
inc
lahf
sub
dec
jge
sbb
mov
mov
push
jge
jmp
xchg
mov
rcll
cmp
xchg
add
data16
bound
xor
xchg
rcrl
test
into
sbb
nop
sbb
or
mov
ret
mov
cmp
and
repz
icebp
in
jge
mov
fmull
lahf
int
fstl
or
decb
sub
ret
jnp
adc
stos
cli
or
mov
clc
data16
push
bound
loopne
fs
add
je
dec
js
mov
mov
xchg
stos
xor
shll
add
xchg
mov
and
jb
inc
cmp
addr16
stc
decb
imul
dec
xlat
imul
cmpsb
sbb
xchg
pop
and
fwait
das
clc
test
ret
push
or
cmpsl
xchg
cmp
cmp
sub
fcmovne
dec
fstpt
lret
jns
dec
popa
add
push
jmp
leave
fdiv
ret
shrl
add
jp
cmpsl
fs
ja
adc
push
or
clc
push
icebp
add
jnp
pop
movsb
xchg
or
jg
in
clc
xchg
hlt
lahf
jb
lcall
mov
mov
push
cwtl
mov
mov
arpl
insl
outsl
dec
sub
cmp
mov
sub
lea
in
stos
shll
xor
sub
enter
pop
inc
hlt
gs
lods
fisttpl
mov
loope
cs
xor
fwait
shlb
push
clc
icebp
or
xor
ret
popf
bnd
sti
jno
mov
adc
mov
dec
into
insb
mov
xchg
cmp
loope
mov
lock
in
add
into
xor
les
fnstcw
cwtl
mov
jle
movsb
xor
pusha
inc
inc
test
decb
pop
gs
shl
mov
push
dec
loopne
cld
shl
mov
in
rcll
pop
mov
inc
into
cmp
inc
mov
mov
scas
imul
stos
xor
adc
int
pop
xchg
mov
cmp
and
sub
pop
pop
ret
push
lcall
pushf
push
repnz
and
mov
stos
pop
mov
pop
add
mov
cld
push
cmp
and
enter
loop
xor
pop
add
adc
cmpsl
or
lret
and
lahf
fsubs
mov
ds
repz
iret
stos
fwait
test
rcll
cmp
mov
lahf
sbb
fiadds
mov
adc
stos
in
xor
jle
pop
sahf
add
adc
inc
popa
lahf
shr
dec
jnp
sbb
cmp
and
mov
fcoml
ficoms
xor
ds
fidivrl
aam
arpl
jns
ficompl
decb
pop
stc
mov
dec
adc
inc
jl
and
add
cmp
cmpsl
outsl
jge
xchg
dec
popa
cli
mov
test
cmpsb
insb
int
aaa
push
stos
push
mov
mov
and
ja
call
cltd
xchg
cmp
test
mov
lods
mov
fbld
fldcw
out
lcall
add
lds
js
inc
popa
iret
xor
mov
or
or
neg
and
cmp
mov
stc
repnz
roll
in
xlat
or
jmp
inc
mov
xor
cmp
mov
cmp
push
jl
hlt
popa
xor
lods
insb
or
push
jl
ds
jns
jmp
xor
or
mov
xor
movsb
test
dec
popa
addl
sbb
jae
imul
inc
insb
incb
stos
or
cmp
xchg
stos
stos
loop
jns
mov
out
push
add
sbb
pop
adc
out
jnp
pop
add
mov
or
or
adc
xchg
pop
xchg
jecxz
mov
or
and
mov
ja
loopne
push
xchg
and
mov
push
jp
push
xchg
xchg
lods
mov
pusha
pop
mov
loop
jle
jo
xor
cwtl
adc
xor
popf
ss
std
adc
mov
rcrl
ficompl
xchg
pop
imul
cmp
aas
test
addb
inc
xor
imul
cmp
shlb
cmp
sbb
mov
add
out
test
je
xor
pop
sub
xchg
outsb
pop
test
movsl
sbb
shld
icebp
mov
push
mov
scas
dec
ljmp
mov
inc
shll
shlb
bound
xlat
or
mov
pop
adc
push
push
std
mov
bound
cmc
xchg
pop
scas
flds
fs
jg
cmpsb
adc
std
jmp
dec
inc
adc
xor
out
fisttps
mov
mov
sbb
fucomp
and
ds
clc
jecxz
mov
mov
mov
and
pop
daa
in
in
cmp
leave
xchg
scas
xchg
jne
das
sbb
loope
stos
dec
sub
ss
mov
push
and
add
inc
test
inc
dec
mov
jbe
mov
movsb
xor
jmp
sbbb
add
movsb
pop
xchg
pop
sbbl
test
lods
rcrb
dec
dec
repz
push
sbb
mov
in
cli
pop
lret
push
dec
sbb
mov
lea
jmp
fldenv
jle
sti
iret
inc
add
lahf
out
pop
lret
bound
out
rcll
and
add
mov
and
inc
enter
fadds
fucomi
or
out
jecxz
cmp
pop
pop
dec
push
pop
mov
add
jnp
pop
in
mov
testl
inc
adc
int
jno
popa
push
mov
mov
push
imul
push
jg
mov
mov
dec
jbe
jo
pop
stos
xor
or
je
pop
ljmp
cmp
xor
outsl
push
dec
push
lds
je
inc
cmp
mov
ja
jmp
je
mov
cltd
je
inc
inc
ljmp
out
cmp
xor
sub
adc
inc
in
jnp
movsb
incl
jns
inc
pushf
or
push
outsl
out
outsb
or
lret
arpl
scas
and
aam
push
incb
mov
dec
sbb
mov
and
mov
mov
shr
mov
inc
pop
out
push
out
push
in
stc
icebp
outsl
enter
stos
dec
stos
sub
xchg
sub
roll
aas
xchg
jmp
mov
and
adc
lcall
sar
cmpsl
push
mov
add
mov
test
pushf
inc
movsb
xchg
repz
or
fwait
jo
or
pop
orb
movsb
mov
sub
lcall
stos
cs
and
pop
pop
in
sahf
add
xchg
data16
test
push
xchg
lds
mov
pop
jb
mov
xor
jns
popf
cmp
ret
push
push
push
sti
popa
mov
add
lods
movsb
xchg
cmp
lret
lods
xor
hlt
sub
call
jp
mov
clc
clc
push
loopne
add
mov
std
out
fs
mov
xlat
fcmovbe
rep
adc
rorb
in
push
bound
into
and
mov
popa
push
insl
cmp
xlat
cli
das
mov
xor
lods
sub
mov
and
icebp
test
mov
scas
add
sub
pop
adc
jnp
xorb
aad
in
popf
repnz
leave
or
pop
jno
cmp
jle
in
rorl
add
add
cwtl
sub
es
mov
dec
dec
pop
pop
push
lods
cmpb
faddp
insl
popf
pop
push
hlt
data16
push
inc
divb
jmp
sti
dec
or
lock
rorl
xlat
or
shr
mov
jle
insl
lods
mov
sbb
in
push
push
jae
xchg
xor
lcall
insl
sti
popa
xor
or
addr16
int3
push
popa
movsl
or
loopne
sub
cmp
sbb
ret
sub
mov
out
bound
mov
mov
adc
in
xor
ss
mov
mov
fcoms
sbb
rcr
fidivs
int
les
cmp
fwait
dec
cmc
mov
sub
push
popa
movsl
sub
pushl
jle
insb
jmp
push
rcrl
in
push
inc
fbstp
adc
mov
or
scas
sub
adc
and
movsb
cld
cmp
jnp
in
sub
fxch
cmp
jge
push
addl
std
cmp
jb
cltd
sbb
sbb
int
ljmp
outsl
enter
pop
mov
sbb
mov
and
std
loop
jle
loope
push
into
shll
xchg
pushf
xlat
push
rcll
fiadds
fcomi
dec
shll
jnp
fdivr
mov
repnz
shlb
cmp
int
cmp
js
inc
pushl
dec
mov
xor
or
inc
or
mov
and
mov
idivl
stos
pop
fwait
add
jno
pop
push
int
sbb
repnz
push
adc
push
pop
mov
xor
mov
sbb
inc
inc
enter
mov
cmp
jmp
add
or
sub
pop
negl
pop
pop
mov
fsubrl
xor
js
pop
xor
pop
jecxz
mov
stos
jb
and
scas
dec
fisttpl
notl
inc
ret
and
mov
mov
mov
sub
out
mov
xor
or
jle
push
shlb
push
pop
fnstcw
mov
aad
xchg
dec
insl
xor
sbb
and
jmp
jmp
jle
mov
lds
aad
cmp
inc
ret
cltd
rol
jae
popa
push
mull
imul
add
push
mov
jg
mov
popf
mov
lock
mov
add
outsb
adc
shll
xor
pop
cmp
leave
inc
arpl
std
call
cmpsl
test
or
test
lods
mov
sbb
popf
arpl
pop
xchg
sbb
adc
rcll
mov
mov
test
xchg
lock
push
jns
mov
push
roll
js
mov
mov
shrb
jb
xchg
sub
cmp
ljmp
adc
pop
test
arpl
dec
mov
adc
and
or
lods
outsb
mov
xchg
and
xchg
lds
loop
ret
inc
data16
and
aaa
mov
mov
push
rol
stc
in
loopne
in
sbb
insl
mov
fnstcw
xor
sub
mov
pushf
dec
inc
jl
xlat
repnz
pop
cmpsb
mov
or
jbe
pop
js
inc
in
dec
pop
stos
fsubp
jo
pop
push
xchg
mov
and
inc
ss
jg
push
cmp
jle
fldcw
ficoml
repnz
cld
fs
mov
iret
or
ljmp
and
jp
dec
add
sbb
xor
call
mov
mov
gs
movsl
mov
shl
scas
aam
addl
mov
data16
imul
adc
sahf
cmpl
ret
repnz
test
cmp
addr16
mov
adc
mov
sar
cmp
cmp
mov
adc
xor
loope
xchg
incb
add
rcrl
mul
xchg
fildll
xchg
and
mov
dec
xchg
mov
xorl
add
dec
cmc
xor
test
icebp
cltd
push
jmp
nop
pop
pop
sub
insb
xchg
adc
stc
js
jo
xor
add
outsb
mov
les
sahf
cmc
mov
fstps
push
adc
pop
shrl
aas
xlat
leave
mov
bound
xchg
jl
xor
rcr
cmpsb
mov
cmpsb
subl
arpl
idivl
lds
stos
adc
sbb
into
xchg
rclb
adc
outsl
imul
mov
jle
push
popa
push
cmc
xchg
cmp
in
pusha
cmp
mov
mov
lds
stos
jbe
frstor
stos
and
icebp
inc
cmp
call
or
cmp
push
jne
lret
add
cmp
fstpt
add
push
movsb
cld
ficompl
jp
fcoms
sub
xchg
mov
les
sub
negb
sub
jns
xor
enter
arpl
inc
outsb
mov
xchg
pop
xchg
sub
dec
repz
jnp
or
and
repnz
adc
adc
mov
test
push
push
push
jle
shrb
xchg
repz
pushf
pop
jo
cltd
loopne
testl
in
sahf
jg
add
dec
ja
shrl
cmc
add
lock
push
xor
adc
mov
cmp
add
dec
xor
sub
jnp
test
inc
push
in
shr
sub
into
aad
jl
int3
or
dec
pushf
stc
cmc
inc
adc
std
cli
stos
mulb
es
stos
ficomps
sbb
ret
dec
fldcw
fists
mov
adc
rcll
data16
rclb
and
sub
lret
mov
test
push
mov
xor
sbb
cmp
pop
mov
and
mov
sub
cmp
add
leave
xlat
xor
push
je
xchg
loopne
mov
jle
mov
mov
jg
outsl
divl
lods
lret
adcb
jle
inc
push
lods
and
out
mov
shrl
inc
xor
jp
jo
pop
jnp
lock
daa
imul
lcall
test
lcall
jle
mov
mov
loope
sbb
pop
es
test
sub
enter
lcall
inc
dec
fdivs
xor
cli
mov
push
fstpt
negl
add
sbbl
dec
cmc
and
movsl
push
pop
test
filds
fistl
fistps
jmp
ljmp
lahf
mov
mov
mov
repz
es
adc
out
test
mov
rorb
lret
cmp
fiadds
stc
sub
idivl
xor
jbe
test
and
out
sahf
mov
fisubrs
inc
clc
xor
jmp
mov
int3
in
into
add
stos
jae
sbb
and
inc
adcl
fcmovu
cmc
and
test
xor
je
loope
stos
lcall
adcl
cmc
fdivl
addb
sahf
lods
icebp
push
jecxz
test
jge
fdivrl
sub
and
nop
sbb
cmc
or
jp
adc
push
xor
or
cs
lret
imul
inc
cmp
test
or
pop
inc
loope
out
lret
mov
cmp
push
cmp
add
and
jbe
or
xchg
stos
push
idivb
jns
adc
mov
inc
stc
stos
roll
cld
mov
clc
ljmp
in
pushf
dec
xor
mov
ret
jp
xchg
jecxz
pop
roll
or
pusha
pop
ds
cs
je
cmpsl
lods
int
mov
cmp
mov
lret
pop
xchg
test
mov
xor
push
mov
sub
iret
sbb
push
mov
mov
mov
mov
sbb
test
lods
lret
push
je
push
fs
jp
mov
xor
push
imul
or
jns
or
bound
ret
pop
jno
fadds
lock
repnz
ds
iret
icebp
cmc
pusha
rolb
in
in
inc
pop
mov
ljmp
push
mov
test
pop
int3
adc
out
in
in
and
lods
into
push
stos
test
add
fstpl
dec
adc
and
adc
repnz
pusha
aas
lods
cmp
lahf
cmpsb
xor
mov
mov
xor
add
sbb
test
pop
jmp
mov
mov
mov
inc
frstor
or
lahf
sbb
ds
rol
push
or
fs
mov
jae
cwtl
sub
lret
push
dec
xchg
xor
fdivrs
cmpsb
xchg
stos
jne
test
jle
xlat
pop
stos
and
pushf
insl
dec
aam
stos
rcrl
int
cld
cmpsl
pop
mov
inc
in
ret
jae
sarl
pop
push
sub
jg
sub
mov
stc
jo
jb
shlb
cmp
jmp
int
gs
xlat
cs
jo
pushf
cs
repnz
in
movsb
pop
out
sbb
jne
dec
ljmp
js
push
movsb
insl
sbb
sub
xor
jg
cltd
pop
jmp
pop
loop
shll
mov
pushf
lock
cmp
mov
sub
push
inc
gs
out
mov
leave
mov
cmc
mov
scas
xor
jb
push
ret
pop
mov
push
lods
inc
lock
imul
sarb
lahf
or
xchg
sub
add
jo
out
pop
xchg
stos
cmpl
sub
call
add
ljmp
lds
adc
push
cmp
sbb
cmpsl
and
adc
roll
mov
adc
inc
push
es
pop
notb
sahf
cli
jnp
and
cmp
mov
out
mov
leave
push
rcrl
and
movsl
lock
test
mov
cmc
cmp
push
xchg
push
push
jecxz
sbb
sbb
das
outsb
roll
arpl
add
cli
mov
addr16
or
mov
repnz
dec
stc
xor
shll
dec
add
subb
iret
jecxz
or
test
loopne
or
xor
iret
daa
jo
test
pop
stos
push
popf
int3
popf
add
lock
ret
test
ds
imul
xchg
xor
pushf
mov
iret
aaa
sub
or
lea
loope
mov
shlb
sub
into
incl
push
cmp
movsb
pop
xchg
mov
pop
and
leave
lock
jo
arpl
lcall
xchg
imul
jo
cmpsl
inc
mov
test
push
mov
cmc
fptan
inc
mov
cmp
and
icebp
mov
inc
test
mov
mov
sbb
aam
adcb
std
xor
adc
popf
pop
ficompl
sbbb
pushf
mov
inc
mov
sbb
fsts
dec
dec
inc
fcomip
cmc
loope
sbb
cs
addr16
xor
mov
lcall
cmc
mul
in
fdiv
cld
pop
xchg
fsub
pop
les
repz
sbb
dec
repnz
fistpll
outsb
jge
pushf
push
cmpsb
aaa
popa
subl
std
inc
xchg
dec
inc
xor
hlt
cltd
mov
push
mov
xchg
sti
pop
mov
test
jmp
add
test
stos
addl
fbstp
jb
fdivrs
sub
mov
sbb
adc
mov
data16
in
jno
jl
pop
mov
inc
test
pop
shrb
cwtl
out
xor
sti
lds
in
cmpsb
std
push
mov
call
jle
adcb
int3
jmp
mov
rolb
shlb
sub
sbbb
sbb
cmp
xchg
sbb
cmp
lcall
mov
add
mov
add
int
mov
xor
pop
mov
leave
das
shll
icebp
sbb
insb
push
xor
fwait
test
mov
out
popf
not
movsl
or
adc
cmp
xchg
pop
xor
movsl
mov
loop
cmp
aaa
stos
mov
inc
sti
out
jge
push
pop
pop
and
mov
add
mov
jnp
xchg
inc
mov
das
shl
sbb
cmp
fsubrs
incb
pop
ret
clc
mov
je
push
add
fsub
jbe
into
mov
sbb
sahf
xchg
adc
dec
imul
sbb
cltd
inc
iret
pop
fcmovbe
nop
add
sub
aas
lock
icebp
aad
jo
add
push
sahf
outsb
adc
jg
jg
adc
sub
pusha
mulb
and
loop
roll
xor
push
out
inc
insb
ds
stos
jge
xor
mov
push
push
outsb
fistpl
xchg
adc
add
mov
push
lret
jo
das
aaa
jg
dec
aaa
fcompl
cmp
pop
cli
or
insl
lcall
or
roll
jns
pop
xchg
filds
sarl
cld
outsb
lods
cmpb
pop
out
scas
push
cmp
insl
mov
xor
leave
cmp
test
jle
divl
out
cltd
sub
mov
adcl
xchg
mov
inc
sub
test
cmpsl
cmp
icebp
sub
imul
test
in
push
scas
mov
sub
pop
push
test
inc
fcmovu
in
pop
cmpsl
insb
xor
jecxz
add
cmp
insl
ret
lock
jp
fbld
out
mov
inc
pop
leave
pop
stc
ret
repz
fidivrs
adc
shr
sub
ds
std
pushf
pusha
fs
push
and
inc
mov
mov
mov
test
add
xor
jp
xor
xor
inc
daa
xchg
add
push
ja
lock
test
pcmpeqd
repnz
gs
aam
mov
lret
loope
jle
subl
cltd
test
push
icebp
push
imul
ja
cld
decb
mov
mov
or
push
leave
pop
and
test
pop
negl
push
js
cmpsb
sub
popl
xor
and
xchg
push
fwait
test
xchg
jle
push
popf
add
jbe
test
inc
ljmp
lcall
mov
xor
loopne
mov
loope
or
loop
stos
mov
mov
je
and
fldt
push
in
fldpi
cmpl
mov
push
in
mov
push
aam
jb
inc
add
je
fyl2x
inc
push
and
xor
mov
pop
dec
mov
pop
je
dec
rcl
inc
lcall
xchg
clc
das
les
iret
dec
clc
inc
cmp
mov
mov
mov
test
adc
mov
sbb
mov
aaa
lahf
cmp
loop
pop
iret
sahf
sbb
xchg
mov
sub
mov
dec
push
testl
movsl
icebp
arpl
mov
sub
hlt
pop
gs
loopne
cmp
loope
pop
clc
int
mov
sub
pop
aas
sahf
loope
into
sbb
xor
es
gs
and
xchg
fildll
fs
mov
push
push
jg
int3
pop
jp
cmovp
push
in
stos
fcomps
adc
ja
scas
and
adc
je
mov
mov
mov
call
pop
not
js
jp
jno
pushf
out
popf
mov
dec
sti
xor
mov
sbb
icebp
in
cmp
mov
jne
inc
call
adc
xacquire
push
sub
pop
xchg
bswap
nop
in
or
mov
ret
les
hlt
xchg
cmp
jo
pop
mov
les
jne
jge
popf
mov
shr
es
dec
sti
sbb
imul
mov
ljmp
out
mov
stos
out
lock
add
push
fwait
mov
stc
scas
adc
mov
rcrl
lods
mov
inc
inc
fbstp
pop
mov
mov
insb
fiadds
pop
fsubs
pop
lret
mov
mov
mov
in
fwait
push
pop
and
iret
push
lahf
jl
ss
daa
negb
adc
mov
xlat
dec
call
or
adc
mov
pop
mov
out
loopne
cmp
mov
adc
rcl
ud2
ds
jp
push
jns
or
imul
rcr
or
test
mov
dec
dec
fsubrs
or
in
push
mov
push
pop
shrb
ja
mov
jns
lods
or
sub
sbb
pop
test
pushf
scas
fdivr
ljmp
and
xor
repnz
idivb
in
push
jp
insl
out
and
xor
adc
xor
pop
scas
ljmp
jae
pop
xchg
mov
popa
imul
mov
cmp
pusha
fdivrl
ret
movsl
loope
inc
scas
mov
push
dec
lret
mov
pop
out
pop
and
aad
dec
shll
fidivs
rorl
sbb
dec
sub
jmp
pop
inc
adc
test
lret
rcrl
icebp
or
mov
pop
cltd
mov
sar
aas
imul
cltd
hlt
xchg
cmp
shl
cs
test
rclb
and
sbb
test
xchg
in
mov
jbe
test
xor
jbe
add
test
mov
fimuls
push
fsub
aam
jae
and
lods
xchg
sbb
cli
and
push
mov
inc
ret
sbb
outsb
mov
mov
pop
jle
cmp
cmp
shl
in
test
push
mov
jbe
xor
or
sub
and
sti
fisubrl
in
push
ja
mov
pop
jo
stos
test
js
sub
bnd
mov
rcrb
or
ljmp
push
into
les
ss
lret
xlat
lods
dec
mov
les
cmp
cmpsl
dec
push
dec
inc
push
mov
lock
dec
dec
out
test
insl
xor
dec
dec
in
pop
test
loopne
pop
sub
push
loopne
xlat
pop
pop
dec
orl
pop
stos
adc
and
jnp
insb
xor
add
mov
outsl
iret
cmc
je
test
add
push
icebp
mov
nop
repz
pop
mov
jecxz
out
enter
pop
add
mov
or
rcl
add
into
jbe
xchg
xor
adc
mov
and
lret
add
dec
inc
sbb
mov
scas
sub
addb
mov
mov
push
divb
jae
lcall
mov
push
xchg
sarb
lcall
loop
mov
ss
arpl
outsb
push
lods
jl
jg
loop
inc
sub
scas
mov
dec
out
cs
pop
pop
sbbl
pop
mov
xchg
push
andb
outsb
ja
mov
pop
push
dec
pop
cltd
sahf
sahf
cld
insl
push
iret
movsl
out
sbb
pop
lods
xor
movsb
bound
psubd
fwait
dec
xor
ljmp
sub
adcb
mov
mov
stc
aad
fmul
cmp
stc
inc
leave
movb
aam
pop
xchg
jo,pt
and
push
mov
cli
mov
fldcw
xchg
cmp
clc
and
or
enter
imul
sbb
dec
loopne
dec
or
loope
test
movsb
lahf
or
mov
in
lret
sub
adc
and
push
xor
sahf
cltd
mov
push
in
push
and
push
mov
cmp
adc
lcall
push
in
pop
sub
jne
dec
stc
out
stc
add
mov
stos
cmp
outsl
mov
in
push
test
cwtl
add
pop
push
mov
or
push
aaa
xchg
out
inc
xchg
fstpt
cmpsb
xchg
test
cmp
out
jnp
out
cmpsl
inc
stos
and
ret
push
xchg
aaa
sbb
sub
cmpl
jmp
sbb
push
shlb
js
idivl
cmpsb
push
jmp
mov
push
or
xor
push
inc
adc
xchg
dec
movsl
sbb
shlb
fucomi
fbld
mov
cmpsl
sbb
jae
jmp
xchg
daa
push
scas
dec
pop
jns
in
lcall
and
or
shl
pop
lds
nop
jmp
sub
lea
mov
jl
mov
pop
xchg
xorl
push
mov
aas
mov
sbb
aam
sub
mov
sub
mov
sub
mov
jecxz
sbb
test
sar
rcr
aas
fdiv
mov
sbb
fcoml
adc
xor
inc
inc
cmp
imul
into
push
cmp
call
insl
cmc
in
into
adc
sbb
dec
push
inc
stc
outsb
inc
xchg
push
test
mov
iret
or
inc
fcoml
push
xchg
mov
and
mov
add
mov
movsl
out
sub
mov
insl
mov
ljmp
aam
aaa
fcmovnbe
sbb
cmp
add
daa
mov
sub
mov
mov
jle
push
push
push
imul
dec
fst
push
sbb
pop
outsb
jecxz
movsl
adc
sub
xor
cli
cmc
push
mov
mov
add
std
cld
xor
inc
divl
iret
add
shll
pop
cmpsb
out
shll
movsb
jg
test
lret
testl
xchg
movsb
cmp
push
les
sub
dec
arpl
enter
cmpsl
das
cwtl
sbb
cmpsl
mov
xchg
addr16
inc
in
cmp
and
sub
xlat
addl
push
stos
mov
sub
je
in
cmp
sbb
push
add
aas
data16
add
cmp
les
jp
xlat
stc
xor
pop
scas
fadds
mov
cmp
push
aam
mov
iret
push
aam
bound
test
popa
push
push
bound
xchg
xor
mov
lahf
add
mov
push
or
jno
andb
test
nop
xchg
fwait
mov
push
adc
addr16
mov
sbb
fincstp
das
push
pop
xor
cmp
mov
or
and
jecxz
jb
xchg
jbe
inc
test
test
cwtl
dec
dec
pop
adc
ss
jp
push
popf
daa
sub
cli
cmp
cld
sbb
jmp
popf
les
sub
mov
mov
xor
xor
lea
mov
int3
popf
push
fsts
jmp
or
xor
pop
and
fisttpll
jmp
stos
ret
jae
sub
daa
sub
xor
insl
daa
in
jne
iret
adc
popa
arpl
jmp
das
pop
cwtl
mov
out
xor
dec
in
lods
aaa
add
orb
sub
cli
sub
push
jo
daa
frstpm(287
push
pop
jmp
into
dec
adc
lods
call
jle
out
mov
scas
movsl
jb
in
outsb
repz
scas
push
adc
out
jb
mov
cli
inc
enter
inc
shrl
aaa
loopne
fldcw
lahf
insl
jb
xchg
in
shl
scas
pop
xor
mov
pop
push
or
and
in
in
xor
adc
mov
push
xchg
pop
cmc
roll
cmpsb
fs
pop
adc
xchg
xchg
pushl
ficoml
repnz
popl
ja
lahf
jne
je
nop
pop
mov
jbe
stc
xchg
add
xor
jmp
sub
pusha
repz
cmp
pop
out
pop
cld
or
ljmp
popf
dec
iret
div
shrb
fdivrl
pushf
jbe
ljmp
into
sbb
inc
push
lods
push
movsl
inc
add
sbb
daa
ds
push
ret
mov
xor
test
popf
lahf
sub
and
inc
rcrb
xchg
sbb
faddl
jae
jmp
adc
es
cwtl
mov
mov
jge
mov
loopne
in
dec
and
stc
leave
das
xor
jecxz
daa
call
sub
dec
dec
push
jecxz
pop
inc
iret
push
push
inc
out
sarl
push
cwtl
je
jl
sbb
ret
rcr
jne
and
aam
sahf
imul
rcrl
mov
jp
icebp
jmp
dec
mov
cs
bound
adc
push
rol
imul
arpl
inc
mov
pop
jb
push
nop
clc
fimuls
fbstp
and
aam
pop
in
mov
test
mov
cmp
sbb
sbb
sti
xor
aas
sbb
sbb
push
pop
ret
ja
cmp
mov
cmpb
adc
sub
test
test
mov
mov
adc
cmp
or
and
mov
icebp
xchg
call
gs
test
pop
pop
ret
cmp
mov
inc
fnstsw
aam
xor
dec
iret
out
shrl
sbb
imul
mov
inc
xchg
daa
cwtl
icebp
fstl
movsb
out
push
lret
push
mov
adc
fistps
repnz
mov
movsb
inc
lahf
ss
lret
xchg
lods
int
sub
sub
fs
push
fs
gs
frstor
cwtl
and
cmp
and
mov
jae
les
shrb
inc
dec
push
sbb
cld
outsb
xchg
sub
sub
insl
movsb
mov
and
outsb
mov
std
int
xchg
push
mov
push
enter
xchg
ret
insb
out
pop
mov
adc
xchg
mov
movsb
mov
fdivs
adc
xchg
out
or
xor
dec
hlt
dec
ljmp
or
fld
loope
nop
call
outsl
mov
xorb
sub
int3
xor
stos
xchg
movsl
inc
push
out
stc
xchg
adcb
fnsave
out
rclb
lods
sub
or
ficoms
cmp
fcomp
cmp
dec
adc
lahf
loop
js
xor
das
hlt
pop
fstps
lret
in
fistl
cld
xchg
inc
inc
leave
ss
sarb
jp
cmp
xchg
lds
pusha
pushf
jns
les
shlb
add
es
cmpl
or
jecxz
push
push
lods
jo
xchg
xlat
stos
xchg
pusha
jecxz
and
mov
sahf
enter
add
add
mov
adc
push
sub
push
in
add
gs
or
movsl
bound
pop
inc
sbb
xchg
jo
shlb
pop
ss
in
fidivl
sbb
adc
mov
out
sbb
sub
repnz
sbb
inc
pop
sub
lahf
pop
mov
push
mov
outsb
dec
mov
add
daa
pushf
mov
fdivp
push
cmpsb
pop
ja
insb
sahf
fistpl
xor
xchg
push
pop
aam
mov
cmp
mov
fildll
adc
pop
sbb
sti
jne
clc
push
js
es
cli
in
mov
push
pushf
cld
out
lock
lods
inc
lret
fld
ljmp
cltd
mov
push
or
mov
cmp
add
loopne
lea
ja
in
inc
or
dec
in
test
xchg
rolb
and
dec
daa
in
mov
push
loope
inc
jle
sub
adc
lds
fwait
sbb
loope
ret
jg
gs
mov
shrl
jae
jb
fisubrs
lea
mov
cmp
js
pop
lahf
cli
lea
and
lret
shlb
addr16
popa
pop
stc
or
les
jmp
mov
xor
or
sbb
inc
inc
pop
jnp
push
xor
sbb
rolb
mov
out
pop
or
sahf
xchg
pop
or
adc
fs
sbb
jno
mov
sub
jecxz
mov
xor
popa
jne
ljmp
cli
add
sub
ljmp
xor
dec
mov
dec
dec
sub
icebp
ror
movsb
push
ljmp
or
int
xlat
pop
push
pop
pushf
sti
orl
inc
test
mov
je
push
mov
mov
push
ss
mov
pop
enter
push
jmp
test
mov
cmp
scas
cmp
sub
xor
int
andb
pop
lret
push
ljmp
loopne
jno
stc
push
push
push
pushf
dec
dec
stos
lods
ret
fwait
shlb
jle
cmp
pop
adc
mov
gs
stos
mov
lds
adc
mov
inc
jmp
outsl
das
rcll
sbb
dec
push
test
jmp
inc
sbb
inc
inc
fdivs
sub
lcall
or
cwtl
pusha
cmp
rcr
test
loopne
dec
push
cmpsb
push
test
enter
push
xchg
idivb
aad
inc
inc
js
test
mov
adc
xor
xchg
jp
out
xchg
jbe
pop
pop
clc
jg
lock
rcr
testb
lcall
movsl
sub
sub
cltd
xchg
outsl
sahf
xchg
add
mov
pop
xor
dec
jns
scas
xor
in
repz
subb
cmpsb
or
test
daa
push
ret
push
js
mov
sbbl
pop
loopne
sbb
in
add
insb
pop
out
mov
sbb
jl
out
jp
and
sub
fs
or
sbb
sbb
shll
andl
mov
pop
mov
xor
in
fmuls
call
cmpsl
insl
jo
repnz
push
xchg
cld
dec
test
mov
jge
outsl
jecxz
lret
mov
xor
add
mov
int3
push
mov
out
jno
mov
lock
cli
mov
dec
movsl
loop
call
dec
mov
jg
xchg
loop
cmp
adc
adc
cltd
sahf
push
mov
cld
push
outsb
subl
xchg
inc
in
repnz
jo
jo
popa
dec
out
addr16
or
xor
cmp
cltd
adc
test
mov
faddl
orb
gs
je
mulb
roll
clc
ret
cli
xchg
add
out
mov
in
leave
pop
push
gs
adc
mov
push
aam
cmpsb
fsubs
iret
inc
cli
jne
and
cmp
insb
jo
mov
ja
inc
stc
mov
jle
loope
cld
dec
xchg
mov
repnz
out
aaa
sbb
aas
jmp
push
ds
push
in
dec
jo
mov
in
bound
stos
jae
push
out
jb
pop
andl
or
add
dec
faddl
js
cli
mov
in
sbb
jmp
ret
or
out
ds
mov
sub
pushf
mov
xor
cmp
icebp
sysexit
jb
lret
loope
cwtl
inc
mov
fsubrp
iret
mov
or
mov
sar
pushf
scas
pushf
int3
cmpsl
mov
push
pusha
jmp
mov
or
push
sahf
xchg
xor
add
mov
daa
pop
xchg
or
fldt
xor
jo
outsb
enter
sarb
and
dec
add
fsubr
lods
mov
js
scas
cmp
lahf
sub
sbb
pop
jo
push
add
icebp
push
loope
push
js
stc
les
cmp
mov
jp
pop
mov
push
call
repz
enter
push
cs
movsb
fcomps
in
pop
ret
xchg
mov
cmpl
push
int3
mov
paddw
out
mov
push
push
leave
ret
je
or
cmp
adc
lret
mov
inc
lahf
sub
int3
dec
enter
pop
or
rorb
adc
cs
test
xchg
inc
adc
sub
mov
les
dec
mov
sbb
cs
or
nop
lods
clc
jae
push
push
aaa
test
xchg
cmpsb
rcl
stc
mov
and
add
dec
cmp
outsb
fildll
mov
push
popf
roll
mov
into
inc
xchg
notb
scas
mov
cmp
cmc
cmp
dec
dec
out
adc
aaa
xchg
shll
cmp
scas
push
rcl
pop
pop
and
dec
fdiv
mov
mov
mov
jbe
pop
mov
lcall
push
push
arpl
cmpsb
push
pop
and
mov
lretw
mov
push
int3
dec
popa
jbe
rep
arpl
xor
popf
push
add
testl
jns
pop
xchg
mov
lahf
jge
jb
mov
sub
test
jcxz
popf
cwtl
popl
repz
pop
mov
push
sahf
cmp
sub
push
cs
aad
popa
xlat
xchg
adc
stos
call
sub
jmp
or
mov
iret
test
rcr
addl
and
mov
mov
push
push
sbb
and
inc
jb
sub
push
inc
mov
pop
inc
popa
or
movsb
sub
divb
mov
outsl
cmpsl
dec
and
inc
jmp
popa
pop
lds
jbe
push
cmp
dec
lds
subl
shl
jl
aad
jp
jae
call
fs
cltd
testb
pop
add
mov
jp
mov
or
outsl
mov
mov
dec
pop
mov
movsl
mov
mov
mov
test
cmp
xchg
insb
roll
ret
idiv
aad
jne
cmp
mov
imul
ret
sub
add
jne
iret
mov
repz
push
sbb
fcmovnb
outsb
jecxz
cltd
and
fcompl
pop
insb
and
jb
cmc
mov
pop
sub
addr16
das
jnp
mov
dec
push
cmpsb
scas
mov
out
or
sbb
clc
xorl
cmpsb
div
ljmp
push
jp
ljmp
dec
pop
xor
fcoms
fs
adc
rorb
dec
lret
push
sbb
lret
loope
repnz
dec
pop
std
imul
test
dec
test
inc
and
out
ss
out
das
and
movsb
jecxz
xor
aam
sub
sbb
pop
pop
adc
inc
xchg
and
cmp
sbb
push
sbbl
out
sysret
or
cmp
and
in
or
dec
in
inc
mov
jl
adc
je
popf
cmp
push
jecxz
dec
or
dec
je
popf
jl
stos
daa
mov
mov
int
mov
xor
out
ret
fnstsw
loopne
mov
pop
jmp
arpl
loop
ficompl
mov
push
aam
rcrb
jle
popa
pop
inc
xchg
and
lods
inc
adc
iret
mov
push
mov
xor
adc
icebp
enter
sbb
das
xor
pop
jg
pop
adc
jecxz
pop
iret
adcl
lahf
xchg
adc
or
pushf
in
in
xchg
scas
dec
add
lret
or
jae
sbb
aam
xchg
seto
push
sar
test
or
sub
or
nop
pop
sbb
xchg
icebp
lahf
pop
push
insl
shlb
leave
push
xor
jg
dec
and
add
rcrl
or
dec
pop
mov
lock
sbb
fiaddl
xchg
out
lret
fisttps
push
pop
nop
call
jmp
jae
and
jmp
int3
jno
add
ret
push
in
pop
mov
add
test
mov
push
lret
ror
sbb
dec
dec
jnp
hlt
adc
gs
pusha
scas
xor
ss
xchg
test
flds
sub
cmp
pop
adcb
test
mov
pop
and
pop
jl
stos
mov
stos
sub
pop
xchg
adc
sub
out
xchg
insb
in
push
cwtl
out
popf
inc
lods
jns
das
pop
clc
lods
ret
jno
mull
outsb
sub
push
test
sub
int
ds
mov
push
movsl
xchg
scas
lds
xor
dec
xor
xor
mov
cmp
je
addl
lds
pop
jl
loopne
or
sub
stc
mov
adc
inc
daa
ja
ret
and
mov
adc
xchg
out
out
mov
xchg
pop
jmp
jg
cmp
pop
test
lock
pop
rcrb
jmp
inc
mov
pop
test
xchg
loope
pop
dec
dec
and
cmpsl
out
clc
push
xor
push
fcomi
mov
xor
test
mulb
hlt
mov
mov
mov
and
add
inc
dec
lahf
popa
sbb
push
repz
or
xor
cmp
pop
push
shlb
in
clc
int3
cmpsb
test
mov
outsl
test
out
mov
sti
mov
nop
outsb
test
dec
xor
daa
call
mov
or
in
bound
lods
lea
stos
and
aad
scas
xor
sahf
icebp
fistpl
jno
or
scas
pop
test
mov
in
xchg
bnd
addl
lods
cmpb
hlt
xor
mov
mov
fsubl
cs
cmpsl
mov
xchg
dec
stos
cmpsl
aad
fs
adc
and
aaa
movsb
adc
adc
addr16
enter
dec
es
and
cmp
push
scas
test
mov
lea
xchg
pop
jle
add
mov
lret
lods
aas
jbe
xchg
sub
push
xor
dec
ret
xor
test
and
in
pop
out
bound
stos
sub
adc
fnstsw
mov
mov
mov
inc
dec
adc
jmp
fdivl
pop
sbb
test
lret
mov
nop
ret
in
dec
ja
ljmp
jo
mov
pop
xchg
add
mov
outsb
pcmpeqw
sarl
dec
push
adc
cmc
shrb
mov
loop
or
lea
sub
pop
xchg
dec
es
add
mov
sbb
stos
jbe
or
bnd
sub
sbb
ds
xchg
sbb
push
repnz
add
aas
cmc
pushf
pop
jnp
fnstcw
fcoms
gs
lock
dec
jb
faddl
iret
lret
lods
cltd
mov
pop
loopne
aad
mov
sbb
loop
inc
or
xor
mov
aas
inc
outsl
in
adcb
xor
add
jmp
mov
aaa
mov
sbb
dec
jp
xor
loop
ffreep
lret
pushl
stos
test
test
mov
les
pop
adc
cwtl
aaa
std
jp
rcrl
push
push
iret
sbb
pop
ljmp
psubq
mov
sub
push
push
jl
mov
imul
outsb
sub
loope
adc
insl
popa
sub
daa
add
mov
ss
test
inc
xchg
out
dec
or
fsubrl
dec
mov
les
lcall
pop
repz
test
jg
sbb
stc
pop
into
lock
cmpsl
lcall
int
push
jb
push
pop
pop
jno
cmpsl
ret
pop
xor
notb
or
mov
sub
cmpsb
dec
jns
out
or
lea
aaa
and
ljmp
insl
outsl
call
int3
xchg
lods
or
mov
jg
add
dec
test
or
push
inc
sarl
fsubs
jmp
cmp
cmpb
push
pusha
addr16
call
lods
xor
popa
xchg
sbb
out
test
dec
xor
leave
xor
mov
das
and
outsl
ret
push
es
cltd
or
xor
pop
inc
mov
adc
push
das
sahf
mov
std
adc
inc
div
or
daa
sub
scas
push
aam
adc
int
mov
repz
pop
loope
pop
push
jecxz
in
cmp
dec
dec
int
mov
shrl
aad
lods
cmpsb
push
popa
mov
xchg
das
arpl
insl
movsl
xor
imul
out
ret
jns
push
repnz
cmp
jmp
xorb
or
xchg
fcomip
call
test
pop
idivb
ja
pop
push
sub
mov
xor
pusha
out
mov
push
dec
sahf
pop
scas
rorl
dec
push
push
jno
fcmovnu
rclb
mov
mov
ret
lods
mov
addr16
or
call
iret
fstps
pop
jle
shlb
loop
in
mov
xchg
mov
imul
movsl
adc
cmp
jmp
xlat
stc
xchg
clc
addr16
or
sbb
ret
adc
mov
pop
xchg
or
push
adc
xchg
fld
xchg
movb
sub
mov
sub
jnp
fwait
mov
and
loop
es
xchg
jns
push
add
out
stc
or
mov
mov
mov
mov
mov
iret
pop
out
loop
test
cli
fcmovb
add
push
mov
leave
xchg
jle
pop
shl
arpl
or
xchg
popa
xchg
push
jl
push
fcomps
mov
mov
sub
movsl
pop
dec
popa
mov
nop
loope
adc
lcall
or
dec
testb
dec
sub
dec
sbb
gs
movsl
pushf
pushf
aad
inc
push
ror
cmp
in
adc
push
xchg
cltd
jnp
xchg
scas
hlt
fcomp
jg
fadd
adc
add
mov
mov
push
xchg
lods
gs
adc
in
addb
scas
lock
rcrl
or
lcall
sbb
pop
cmp
add
loop
inc
inc
and
popa
mov
out
test
in
sbb
lret
loopne
imul
sub
call
nop
int3
xchg
icebp
roll
loopne
cwtl
sub
mov
imul
jp
or
aas
loopne
inc
sbb
inc
xor
push
lret
int3
mov
push
das
jno
mov
ds
cmp
movsl
cmpsb
dec
or
jmp
jae
sbb
lahf
mov
shlb
lods
jg
sbb
loop
mov
adc
lcall
shl
pop
mov
sahf
inc
inc
lcall
cmp
inc
pop
mov
xchg
mov
cmp
jmp
pop
aaa
mov
cs
cmp
jbe
cmp
jge
push
test
insb
cmp
fildll
xor
cmp
mov
add
and
xchg
xlat
fsubr
pop
dec
in
or
jg
cwtl
ja
iret
xor
sub
mov
or
sbb
popl
xor
fnstsw
pop
nop
cmpsl
or
clc
dec
mov
out
cmc
aad
dec
inc
push
int3
fnstsw
aas
sub
jge
pop
movd
xor
mov
icebp
lea
and
xor
dec
in
add
push
pop
imul
data16
mov
sub
nop
sub
push
cli
push
mov
pop
jge
enter
jge
xchg
jb
mov
fidivl
mov
sub
sar
xchg
out
mov
xchg
jns
adc
ret
pop
sub
xor
divb
lock
cmp
xor
jae
push
icebp
sbb
pop
push
and
mov
fldt
arpl
inc
mov
push
or
je
cld
pop
outsl
mov
and
lock
icebp
lcall
cmp
int3
ret
jns
add
cmc
outsb
dec
pop
or
jl
xor
outsl
inc
sbb
mov
cmp
scas
clc
sub
mov
into
push
inc
sbb
aad
repnz
enter
sar
scas
daa
pop
jecxz
sub
mov
sub
iret
adc
jbe
aam
ja
daa
out
lds
dec
in
push
lds
ljmp
pop
out
filds
daa
popf
sbb
inc
xor
je
sub
adc
add
scas
push
inc
adc
mov
mov
xchg
int
push
xor
ret
mov
cmp
xor
aam
push
shll
out
mov
or
xorl
cmc
xchg
xor
negb
mov
out
ljmp
popf
popa
mov
call
adc
jle
in
imul
jnp
outsl
divl
enter
push
pushf
lea
mov
popl
daa
adc
std
sbb
mov
and
hlt
shll
idiv
fs
fs
out
enter
test
push
inc
gs
jecxz
int
and
and
xor
mov
push
in
cmpsb
mov
subb
mov
mov
data16
mov
bound
inc
jne
adc
inc
xor
jmp
sbb
fdivl
adc
xlat
push
xchg
imul
cli
out
inc
cmc
and
inc
das
mov
lea
adc
sub
sub
xchg
jmp
sub
lahf
call
jmp
fists
ss
push
jecxz
gs
dec
mov
jle
xchg
cmpb
ficoms
scas
call
mov
into
dec
mov
jns
insb
sub
aaa
xchg
adc
stc
lock
xchg
mov
pop
xchg
mov
jecxz
enter
sbb
and
ljmp
push
jb
call
pop
xor
xor
adc
jmp
and
sub
sub
pushf
dec
scas
pop
mov
scas
jmp
in
scas
mov
cmp
cld
sub
std
clc
xor
push
jno
mov
scas
adc
rorb
add
movsb
loope
xchg
daa
and
push
std
fucomi
dec
cmp
push
icebp
shll
leave
dec
shlb
mov
xchg
push
pusha
lods
push
mov
jno
mov
lds
into
aaa
mov
out
icebp
popa
xchg
lahf
clc
insb
popl
add
pop
push
ljmp
push
sub
bound
push
subl
outsb
jg
jae
ret
xor
xchg
push
push
movsb
imul
test
push
jle
mov
push
out
sti
pop
xlat
mov
sub
push
data16
jae
into
test
jbe
cltd
imul
xor
cs
cmpb
jbe
pop
mov
iret
xor
ret
mov
and
xchg
dec
pusha
add
fs
outsb
xor
jg
les
ret
jb
mov
add
mov
in
mov
inc
leave
insb
or
call
fldt
orl
test
inc
push
neg
sbb
daa
mov
addr16
sbb
clc
cmp
clc
adc
sahf
and
shlb
aaa
push
pop
ret
mov
dec
mov
push
test
data16
imul
mov
pop
add
jg
imul
jno
adc
xchg
and
loopne
pop
cmc
push
scas
push
xchg
cmpl
xor
out
cld
lret
mov
jle
cltd
pop
es
addl
std
out
std
rorb
cmp
or
fdivrp
jp
mov
xor
test
jge
mov
mov
mov
push
jb
int
dec
shlb
out
mov
push
push
mov
cmpsl
lret
cmp
lahf
ja
ljmp
jl
jae
mov
and
dec
test
inc
pop
dec
popf
dec
and
mov
hlt
aaa
xchg
xor
jno
gs
jl
adc
jb
cmpsl
in
push
pop
or
push
pop
out
jg
in
imul
outsl
or
andb
sub
and
pop
lahf
inc
cltd
jbe
xchg
jno
pusha
mov
inc
mov
xor
sub
leave
sbb
pop
dec
mov
vcvttsd2si
pushf
in
inc
roll
roll
out
sub
mov
cmp
xchg
sub
adc
hlt
inc
pushf
test
push
sub
mov
sbb
mov
dec
arpl
xchg
into
mov
fistpll
scas
inc
xchg
mov
mov
sbb
jo
aas
or
js
imul
xchg
mov
into
in
or
movsb
inc
shrl
sub
mov
cmpsl
icebp
out
testb
pop
jo
sub
sbb
insb
testl
adc
mov
shlb
repz
adc
je
inc
int3
rcll
and
sub
sub
popa
sbbb
cltd
sub
add
in
andl
lret
lods
enter
push
lods
psubw
cwtl
pop
pop
mov
jmp
xor
test
dec
xlat
xchg
mov
rclb
inc
scas
inc
sub
shlb
sub
mov
enter
or
fcoms
or
or
xchg
rcrl
and
aaa
cwtl
mov
pop
mov
push
xor
pop
pop
je
or
sti
push
pop
mov
aaa
push
divl
ljmp
mov
sbbb
cs
test
push
sahf
pop
ret
push
mov
in
jae
mov
mov
xor
pusha
mov
pop
xchg
push
xchg
dec
hlt
cs
pop
or
movsb
lahf
and
pop
repnz
js
push
sub
ret
jecxz
cwtl
mov
ljmp
dec
outsb
sahf
int3
mov
into
add
out
loope
cmp
fwait
cmpl
outsl
inc
dec
lds
gs
loop
ret
stos
jge
and
inc
ficoms
popf
xchg
insl
xchg
insl
cltd
and
cli
ret
or
mov
rcr
xchg
ds
push
add
mov
popa
loop
cmp
fistps
or
mov
jge
imul
nop
inc
adc
adc
in
jae
cmc
push
sbb
or
add
cmp
push
fwait
or
icebp
adc
inc
test
add
movsl
clc
stos
sbb
push
lcall
rsqrtps
repz
add
scas
xchg
stos
push
inc
jl
mov
mov
jl
push
scas
call
mov
xchg
and
xor
sub
in
sbb
sahf
shl
cmp
mov
and
jge
push
lret
sub
mov
inc
adc
push
ret
inc
int3
add
fidivl
movsl
cmp
adc
cmp
add
xchg
xchg
repz
cmc
call
repz
fadd
int
mov
and
rolb
pop
add
lods
sbb
push
push
dec
xchg
pop
push
ret
cmc
and
sahf
cmc
mulb
cmpsb
xchg
dec
imul
pop
fdivrs
xchg
inc
pop
add
cmp
or
sahf
testb
fnstenv
jmp
fwait
jne
test
mov
out
mov
mov
outsl
and
cmp
add
cwtl
loopne
loopne
je
xchg
jg
lret
jmp
cmp
inc
int
xchg
xchg
mov
stc
icebp
sbb
push
mov
dec
movsb
adc
sub
cmpsb
gs
mov
inc
icebp
repz
mov
inc
push
dec
js
pop
jp
pop
xchg
jo
xchg
xorb
push
test
xchg
jnp
mov
fcomp
sub
fisubl
mov
lods
sub
sbb
xchg
xlat
stos
sub
inc
out
mov
fiadds
fistl
call
xorb
jo
or
bound
xchg
and
xchg
add
frstor
fcoml
lods
les
popf
xor
popf
fldenv
add
in
pusha
and
jno
dec
es
aas
sbb
mov
aad
fldenv
dec
icebp
nop
jmp
mov
das
mov
mov
xor
lea
mov
mov
push
sub
inc
push
bound
jbe
mov
arpl
sub
scas
cli
dec
aaa
mov
insb
sbb
add
mov
repz
rorl
pop
mov
pop
imul
lods
add
ss
push
sar
pusha
dec
repz
pop
adc
jp
mov
mov
js
mov
pop
test
mov
mov
aad
xchg
les
dec
cmp
pop
enter
and
mov
or
and
cmp
adc
push
cmc
adc
in
mov
std
adc
xchg
mov
xchg
fsts
nop
faddl
push
jle
cltd
aas
dec
cmp
shlb
cmc
sbb
mov
jl
or
test
mov
dec
addb
mov
jmp
xor
jno
inc
sti
push
cmc
sub
mov
xor
mov
movb
and
inc
fimull
add
xlat
pop
js
xchg
xchg
pop
dec
addr16
fcos
orl
fnstenv
or
dec
fisttpl
cmpsl
or
scas
enter
and
add
pop
sub
lahf
mov
scas
cmp
js
fmul
pop
mov
pop
fcmove
xor
test
mov
sbb
mov
or
push
es
lret
dec
call
cwtl
sub
add
mov
mov
sarl
or
sub
call
repnz
push
cmp
xchg
imul
mov
adc
pop
push
cmp
mov
cmp
cli
test
call
loop
mov
lds
aam
outsb
mov
mov
std
cmp
push
into
adc
sbb
movsb
ds
fisttpll
jne
fstl
fdivrp
push
push
lds
mov
cmp
bt
lea
into
popf
mov
cli
sub
data16
and
in
nop
add
pop
outsl
in
outsl
sbb
jnp
mov
stos
daa
push
xchg
mov
leave
or
imull
lods
mov
stc
jl
and
pop
fsubs
push
data16
mov
outsl
lcall
xchg
aas
subl
and
js
and
sahf
bound
in
push
lret
add
lcall
sbb
inc
lods
mov
scas
cmpsb
mov
push
loop
inc
scas
and
dec
lods
int3
ljmp
sbb
fst
or
lret
mov
lret
xchg
mov
sbb
xor
or
aaa
cmp
fs
lock
cld
stos
and
iret
mov
mov
dec
movsl
mov
cmpsb
mov
sti
add
ret
add
pop
out
add
lods
xor
sub
scas
insl
jle
and
push
dec
int
insb
imul
xor
ljmp
push
call
pop
in
mov
xchg
icebp
add
mov
lret
push
loopne
jnp
pushl
mov
push
dec
jno
inc
inc
lods
arpl
icebp
ds
cmp
icebp
shll
mov
ds
xchg
je
sbb
out
scas
rcrl
jae
rorb
sbb
arpl
sub
pop
sub
aas
jns
pusha
movsb
hlt
xchg
popa
cwtl
test
fisttpl
popf
aaa
xchg
in
adc
cmp
ja
adc
jo
aam
push
adc
jecxz
jae
test
fs
adc
adc
cmpsl
xor
xchg
mov
loope
push
aam
adc
mov
and
xchg
movsb
dec
add
lock
rcr
mov
xor
sahf
imul
and
popa
orl
jo
xor
repz
ffree
cmp
cli
loopne
cli
mov
inc
mov
pop
pop
dec
mov
inc
push
fmull
xchg
dec
ss
mov
inc
push
sbb
test
leave
out
das
dec
leave
arpl
pop
cwtl
xchg
outsb
pop
insl
dec
or
lds
ret
out
dec
push
mov
jbe
into
or
aas
repz
jg
data16
lahf
mov
aam
push
jb
jns
lods
jmp
inc
daa
jg
hlt
cmp
mov
xchg
dec
test
xor
mov
push
cmp
je
dec
rclb
mov
dec
inc
push
or
or
lret
loop
and
pop
loope
fldln2
mov
int3
jmp
jae
lds
mov
lods
fstp
push
xchg
mov
xchg
xor
or
je
sub
mov
adc
and
pop
int
jno
cwtl
xchg
or
fldt
push
and
and
ds
xchg
or
call
xchg
int
sub
xor
add
int3
push
mov
mov
pop
aaa
pop
inc
ss
int3
mov
xorb
mov
push
test
dec
and
stos
cltd
xlat
fstp
mov
mov
sbb
shll
out
lea
adc
lea
gs
add
push
sbb
dec
xor
and
inc
push
out
lret
inc
adc
fnstenv
lods
mov
outsl
or
sbbl
sahf
and
mov
and
sub
mov
jp
ret
mov
int3
xchg
aad
and
jbe
fbld
adc
fidivrs
sub
push
es
xor
mov
leave
xor
imul
jmp
pushf
mov
pop
inc
andl
stos
jmp
dec
jmp
cmpsb
addb
shll
fucomip
std
dec
sbb
pop
inc
adc
add
xchg
sti
adc
pop
psubd
ja
rcrb
outsb
outsb
or
push
fisttps
push
xchg
lock
dec
sti
cmp
iret
int
lcall
and
cli
loope
xchg
pop
adc
rorl
dec
in
pop
jno
push
cmp
inc
repz
or
pop
shll
sub
jne
and
jbe
sti
mov
jae
sahf
pop
pop
mov
cmc
adc
jb
shlb
aam
aam
mov
jecxz
pop
repz
jae
in
sbb
cmp
cmpsl
lock
mov
out
inc
scas
testl
iret
or
pop
ljmp
adc
push
push
nop
jae
aaa
jmp
dec
imul
pushw
je
jns
std
pop
aam
mov
pop
ret
adc
fwait
xchg
bound
test
shl
outsl
addr16
sbb
xchg
loope
xor
fstpt
lods
ret
pop
mov
dec
xchg
mov
cmc
loope
ja
rol
addr16
out
sbb
aad
ret
push
mov
cli
mov
sbb
and
bound
jl
jns
das
and
ret
aaa
sub
test
pop
cmp
imul
mov
int3
lcall
and
xchg
repz
add
es
lahf
js
mov
out
pop
xor
dec
xor
testb
push
sub
adc
pusha
dec
sbbb
and
dec
sub
pusha
out
ds
and
adc
add
inc
nop
ret
icebp
cmpsb
out
sub
cmc
jle
xor
or
subb
or
lea
mov
lea
xchg
lods
cwtl
mov
jne
inc
sbb
pop
inc
pop
popa
sti
sar
out
mov
lods
dec
addr16
jg
mov
mov
repz
mov
or
jp
push
adc
cmp
jle
mov
add
ds
gs
jo
and
or
cmp
lods
sarl
lcall
push
cld
lds
jge
sbb
sar
mov
in
jl
adc
xchg
into
xor
add
adc
sub
dec
lods
xor
fwait
xchg
rolb
stos
repz
js
mov
cmc
fwait
add
stos
aas
inc
mov
sarb
pop
mov
and
outsl
out
lock
testl
jnp
or
loopne
cltd
dec
mov
xor
nop
push
ds
arpl
in
push
mov
adc
stos
insb
jg
mov
xor
pushf
pop
mov
mov
out
or
pop
bound
daa
adc
xlat
sub
push
jbe
mov
popa
add
jo
jae
jle
fildll
shll
sub
mov
test
repnz
dec
adc
sbb
push
jno
sbb
sti
push
lods
loope
or
aad
push
mov
mov
gs
xchg
push
pop
outsl
jno
push
dec
and
repz
dec
or
jno
sbb
fistpl
push
jl
sbbl
fcomip
js
lret
cs
loopne
mov
aas
lds
inc
mov
shlb
jp
inc
xchg
xor
mov
mov
push
in
or
es
in
push
in
popf
je
call
stos
and
dec
adc
dec
sbb
das
and
inc
xor
adc
sub
arpl
hlt
or
push
jae
xchg
out
repnz
xchg
xchg
jb
imul
xorl
orl
sub
clc
jbe
outsl
rcl
in
mov
lret
push
adc
outsl
dec
out
les
int3
push
divps
xor
jle
shll
sub
and
mov
xchg
pop
fldl
stc
push
cmpsb
inc
movsb
or
and
sub
jbe
cwtl
push
je
inc
cld
repz
bound
push
aas
cmp
xchg
dec
lahf
lea
adc
test
mov
lret
lea
sub
insb
andb
dec
pop
test
fbstp
in
mov
shrl
sbb
cmc
cmpsb
popf
xor
out
mov
neg
out
dec
mov
and
fistl
addr16
and
sub
inc
jmp
inc
pop
pop
rclb
cli
xlat
adc
cmp
mov
mov
fildll
stc
push
sbb
xchg
out
cmc
push
xchg
into
mov
lods
fildl
or
xchg
ja
xchg
aad
jnp
lcall
paddsb
sub
or
fdivs
loop
or
stos
pop
inc
mov
pop
sub
pop
mov
sbb
sahf
mov
testb
mov
jne
add
push
mov
insl
xor
sub
fsubrs
mov
lds
loopne
dec
jae
mov
addr16
mov
divl
inc
xacquire
repnz
in
nop
adc
test
cmp
mov
mov
and
iret
aad
cwtl
xchg
mov
mov
cmp
and
pushw
mov
sahf
pop
adc
enter
mov
aas
pop
sub
popf
jae
into
aas
xlat
jmp
stos
mov
cwtl
add
mov
dec
repz
faddl
or
scas
pop
test
lret
mov
jno
hlt
xchg
fdivrs
mov
sub
fsubrl
adc
pop
icebp
pop
cli
aam
push
sub
inc
dec
jb
test
lcallw
or
popf
iret
xchg
xor
mov
sub
imul
jmp
stos
test
jne
in
xchg
mov
lahf
xchg
fs
dec
xlat
mov
inc
adc
inc
sub
dec
test
dec
in
xchg
scas
lret
dec
add
xchg
xchg
push
lods
mov
cs
gs
sub
call
pop
cmpsb
sbb
inc
cmovns
cmp
sub
stos
adc
inc
adc
cmpsb
sbb
repz
cmp
dec
pop
stos
add
cmpsl
push
das
mov
mov
xor
loopne
pop
call
shll
out
imulb
movsb
outsl
clc
popa
mov
dec
adc
sbb
shll
in
xchg
out
sbb
xchg
inc
jecxz
popa
cld
jnp
std
shl
xchg
cmpsb
push
fsubrs
cmpsb
or
cmc
test
mov
mov
dec
jmp
scas
pop
or
xchg
and
test
sub
je
lcall
push
testb
nop
xor
dec
sub
es
dec
mov
scas
movsb
and
pop
out
or
mov
xor
cmc
sbb
sub
testl
xor
call
rcll
fldl
shl
xor
lock
sub
ret
mov
fcmovnu
pop
push
and
mov
outsb
adc
pop
mov
sub
rcrb
sbb
push
adcl
std
sbb
cli
or
push
stos
into
pop
mov
aad
or
rcr
add
sub
inc
andb
lods
sbb
add
inc
cmp
incb
les
jecxz
and
nop
lods
ljmp
loopne
int3
pusha
test
dec
iret
and
test
rcrl
cwtl
mov
inc
cmp
in
sahf
stos
aas
das
or
xchg
jp
fwait
lret
sub
cmp
inc
lcall
daa
inc
mov
hlt
mov
jl
enter
push
lds
iret
lock
add
aas
pop
mov
das
sbb
inc
addr16
fildll
dec
xor
hlt
xor
rorl
xor
jb
out
jmp
adc
mov
rol
dec
or
mov
bsf
dec
xlat
fs
jecxz
add
shl
fcmovu
out
lods
int3
pop
in
cwtl
insl
dec
es
fwait
outsl
fsts
mov
mov
cmpsl
push
cmp
jl
imul
push
pop
mov
lret
pop
adc
movsl
mov
pop
daa
inc
xchg
push
iret
les
in
test
pushf
xor
mov
fwait
cltd
js
mov
stos
lea
lcall
das
pop
pop
cmpsb
and
mov
sub
push
or
dec
popa
hlt
or
fstps
lods
xchg
bswap
push
push
cli
rorb
test
fwait
out
inc
test
test
cmc
ficompl
cltd
addl
mov
cmp
add
lahf
sbb
push
mov
and
add
jmp
jecxz
xchg
icebp
xchg
push
icebp
adcl
dec
xchg
int3
lock
push
xchg
and
sub
enter
xchg
sbb
fwait
lods
cltd
jbe
nopl
sete
movsb
imul
adc
jl
pushf
aad
dec
xor
movsb
add
mov
test
push
stos
jl
ret
dec
repnz
rorb
icebp
rcr
mov
sub
cmp
data16
fld
jl
shrl
popf
dec
cmp
into
bound
mov
sbb
fistpl
lea
mov
rcll
lret
mov
stc
lcall
mov
repnz
mov
hlt
test
orl
lahf
sti
jp
inc
mov
dec
dec
cli
cld
add
bound
or
arpl
push
pop
in
cmc
sub
add
test
les
push
sarl
mov
mov
xchg
inc
andb
movsl
mov
xchg
and
push
adc
in
jno
mov
ror
dec
ja
setno
dec
inc
add
dec
inc
xor
pop
jo
hlt
test
or
dec
mov
sbb
dec
push
test
orl
iret
cltd
jo
jno
adc
mov
dec
lock
repnz
push
inc
dec
xor
or
mov
inc
ret
nop
sub
pop
js
push
sbb
inc
add
pop
sub
fidivrl
in
in
test
jp
or
and
cli
jbe
xor
scas
outsl
xor
pop
hlt
xchg
or
pop
mov
fnsave
inc
mov
mov
cmpsb
lock
pop
bound
lcall
add
and
jge
out
pop
mov
xor
jmp
dec
jl
add
ret
roll
mulb
pop
loope
arpl
jp
jnp
int3
int
cmp
mov
jl
cld
and
cmp
ljmp
imul
jmp
clc
adc
mov
and
aaa
hlt
or
xorb
push
jmp
add
test
scas
pop
popf
ja
pop
pop
stc
and
out
pop
dec
or
hlt
stos
nop
xor
fmuls
add
test
adcl
out
mov
dec
add
cmp
fldz
push
mov
shll
test
es
dec
jp
movsb
ds
daa
ds
xor
ret
pushf
push
dec
add
dec
dec
cmp
into
jge
insl
adc
cmp
scas
cmpsb
inc
imul
pop
daa
inc
shl
jge
lcall
adc
push
cmp
int
pop
mov
test
mov
cmp
arpl
insb
fucomip
push
jo
sbb
pusha
cld
repnz
mov
push
jmp
fidivrl
sbb
pushf
fdivp
out
dec
movsb
call
adc
push
sbb
and
pop
push
in
mov
sub
popa
inc
dec
rcll
jl
push
out
shl
xchg
lods
scas
fmul
stos
repnz
mov
les
dec
cmp
lret
lock
cmp
add
push
dec
loopne
fs
imul
cmp
inc
ret
inc
movsl
ss
xchg
adc
je
or
inc
push
dec
xor
hlt
xlat
dec
insl
cli
ljmp
shrb
jmp
push
inc
aam
fidivrs
sub
mov
inc
cmp
xchg
mov
mov
sbb
in
fiaddl
jns
push
sbb
push
test
nop
dec
sahf
arpl
popa
pop
iret
jns
and
pmaxub
cmp
scas
pop
sub
dec
in
pop
and
mov
hlt
and
lock
sahf
add
ret
loope
sarb
or
pop
xchg
loop
mov
lock
adc
xor
pop
test
into
std
pop
les
inc
in
jl
xchg
mov
mov
pop
mov
push
dec
jmp
adc
fidivs
cmc
call
dec
aas
cmpsb
jge
stc
rclb
mov
xorb
inc
data16
icebp
sbb
imul
xchg
jne
push
ss
mov
pop
mov
arpl
inc
pusha
xor
mov
lcall
add
lret
dec
xor
lds
push
mov
in
or
mov
sub
icebp
std
or
movl
mov
int
jge
fwait
or
cltd
imul
ret
repz
fidivl
loope
sub
outsb
mov
pop
xor
mov
loop
cltd
jmp
pop
insb
adc
sub
pop
inc
inc
int
icebp
mov
push
mov
adc
sbb
sub
xor
mov
into
fadds
mov
pop
lcall
xchg
xor
dec
std
movsl
cmovs
sbb
push
testl
pop
outsl
xor
push
jo
or
insl
imul
fcmovnu
movl
or
popf
cmc
js
xor
cmpsl
fsin
subl
adc
inc
test
cmp
dec
xchg
jg
mov
or
mul
jb
pop
cli
lahf
dec
add
push
movsl
lods
vmulps
mov
mov
xor
stos
cmp
xchg
mov
mov
aad
int
in
stc
imul
add
mov
in
scas
cmp
mov
dec
fwait
add
popf
inc
insl
sbb
test
fsubr
movsb
cwtl
outsb
mov
xor
aaa
jae
lods
cld
jo
fcoms
xchg
xchg
test
cmpsl
scas
mov
ljmp
in
add
jnp
push
mov
pop
mov
lret
js
imul
dec
stos
pushf
xor
inc
testb
mov
jno
jae
stc
lds
std
inc
mov
adc
dec
xchg
pushf
dec
pop
mov
sbb
fcompl
and
imul
and
ja
jno
addr16
mov
cmp
cmpsl
rorl
sub
mov
or
jecxz
jno
jmp
fs
jne
mov
and
mov
imul
mov
add
mov
sub
sbb
cmp
js
xor
xor
jecxz
mov
jge
mov
mov
ret
sahf
lcall
sub
sti
xchg
addr16
std
in
cmc
lcall
lret
mov
test
popa
pop
movsl
scas
mov
or
mov
sbbl
fists
and
test
push
cmp
and
pop
dec
inc
and
sar
inc
push
xchg
or
loop
sahf
sahf
xor
cmp
push
mov
sti
lret
std
mov
push
outsb
out
sub
xchg
dec
cmp
fstl
push
push
loop
or
mov
cmp
and
lahf
in
imul
insl
inc
jnp
mov
mov
insl
shlb
in
jo
mov
or
push
and
aam
mov
ret
out
aas
je
xchg
aad
cltd
or
pop
lahf
stc
ja
mov
mov
shr
add
data16
and
jb
or
xchg
jp
jbe
pop
xor
lret
push
pop
push
dec
shrb
pop
in
sbb
mov
mov
xor
xor
xor
frstor
cmp
pop
xchg
pop
xlat
loop
pusha
push
xchg
into
daa
sub
mov
outsb
out
addr16
jae
in
mov
fisttps
rcll
bound
pop
bound
dec
pushf
xchg
in
mov
pop
hlt
pop
and
psrld
sub
cmp
jo
fnstenv
out
pop
rorb
inc
or
add
push
pusha
sahf
mov
ss
stos
push
cmpsb
sbb
mov
push
pop
jmp
jns
in
and
lods
movsb
sbb
jbe
repnz
sub
movsl
push
or
aam
and
clc
add
sbb
pop
sub
mov
pop
xchg
lea
pushf
addb
aad
mov
daa
imul
loopne
jo
sarb
cmc
dec
hlt
inc
or
add
outsb
mov
mov
dec
lahf
xchg
test
in
xchg
add
cmc
ja
cld
jg
icebp
pop
ljmp
sub
fwait
pop
ret
mov
shlb
xchg
push
repz
sbb
leave
xchg
lods
inc
xchg
popf
inc
lcall
outsl
lahf
icebp
add
sbb
xor
jp
or
leave
mov
fs
xchg
or
mov
xchg
add
test
pop
shl
cmp
mov
cs
outsb
mov
aam
icebp
rcr
sbb
inc
cmc
pop
imul
stos
dec
push
jp
sbbl
and
jecxz
imul
fsubs
or
lret
ror
and
xor
jge
cmpsb
pushf
lahf
xor
pushf
jbe
xor
pinsrw
push
cld
aad
mov
out
cs
inc
sub
adc
mov
cmpb
xchg
shrl
mov
adc
mov
or
shrl
push
xor
stos
pop
jmp
or
aaa
ret
mov
mov
or
pop
xchg
faddl
insl
loopne
and
and
push
shll
or
mov
loope
rorb
test
gs
test
shlb
in
scas
jmp
repnz
and
sbb
call
ror
pop
repnz
cltd
add
pop
sub
pushl
mov
lea
dec
xlat
sahf
mov
jmp
push
ret
mov
std
hlt
mov
dec
test
out
aad
sbb
jns
cmpsl
cli
out
stos
push
in
sub
lods
clc
cltd
adc
and
dec
pop
sub
mov
cltd
pop
test
sbb
repnz
adc
sti
inc
dec
fidivrl
fnstsw
data16
jmp
in
gs
sub
jnp
lret
gs
mov
pop
add
pop
cwtl
test
or
mov
out
sti
dec
test
pop
xor
enter
xlat
add
cltd
jo
xor
push
outsb
outsl
repnz
cmpsl
ficomps
pop
jbe
fisttps
push
fxam
pushf
push
sub
xchg
rcl
dec
xchg
mov
pop
clc
js
jo
popf
pop
mov
and
movsl
sub
lahf
bound
add
cli
les
inc
xchg
outsb
adc
scas
xlat
mov
in
add
jge
push
pusha
in
arpl
sbb
sbb
add
sbb
in
out
in
inc
mov
mov
loopne
mov
inc
mov
and
xchg
xchg
out
popa
loope
daa
dec
lcall
jb
sbb
and
repnz
jmp
mov
jle
xchg
or
jb
imul
push
sbbb
push
aaa
xchg
in
xor
jmp
pop
and
mov
jmp
ficoml
jno
fdivs
movsl
sbb
aaa
out
fmull
test
jecxz
sub
iret
dec
and
mov
ficoms
movsl
push
test
fisubrs
popf
movsb
and
andb
scas
es
ds
pop
fbstp
fldcw
out
fwait
sub
lahf
cmpsl
fcmovne
push
push
ja
sbb
jae
int3
lods
and
dec
ficompl
cltd
dec
test
cli
loope
or
or
sbb
cmp
addr16
andb
ljmp
pop
fidivs
nop
pop
int
cmp
cmp
fsubr
ret
loope
xor
jo
nop
lcall
mov
inc
adc
fisttps
cli
aaa
test
cld
adc
aam
pop
sub
inc
push
ss
cmpsb
jnp
xchg
jno
pop
xor
xchg
push
pop
mov
pop
and
push
xchg
insb
cmp
lcall
mov
fwait
dec
comiss
fs
pop
out
sbb
or
adc
push
test
mov
rorb
sbb
push
mov
jne
xor
sub
imul
cltd
sbb
test
mov
adc
insb
add
fdivrp
iret
adc
and
out
in
test
mov
cmp
lods
stc
ljmp
mov
icebp
adc
sub
dec
data16
mov
clc
adc
add
cmpl
div
mov
mov
cmpsb
test
pop
lcall
cmp
inc
xor
nop
mov
notb
jne
stc
lods
push
ret
jge
cs
test
mov
in
repz
sarb
xor
xchg
mov
adc
push
les
mov
fildll
mov
lea
sbb
sbb
lods
in
push
push
imul
movsb
xor
in
cmp
jae
jg
or
pop
dec
push
mov
xchg
ret
hlt
mov
mov
mov
mov
add
fldt
adcl
mov
pop
jmp
inc
pop
mov
fsubs
dec
inc
aas
icebp
arpl
sub
mov
in
popf
daa
xchg
inc
shl
mov
and
dec
nop
or
fwait
jbe
jecxz
xchg
roll
pop
addr16
repnz
insb
mov
sbb
xor
sahf
loopne
enter
fcmovnu
call
enter
sub
xor
sti
push
cmp
xchg
out
or
push
push
hlt
dec
repnz
cmpl
mov
jne
cmp
fnstsw
test
xchg
cmp
cltd
es
out
adc
mov
push
test
cld
rorb
mov
and
add
adc
mov
mov
mov
aas
push
or
jae
mov
pop
and
pop
inc
js
test
lcall
xchg
lcall
in
sub
xor
sbb
xor
test
push
xchg
push
or
dec
fcoml
aad
add
mov
hlt
arpl
imul
cmp
pop
and
ret
arpl
dec
sub
testb
sarl
testl
stc
repnz
int
pop
sub
repz
xchg
les
dec
mov
or
and
lods
xor
jg
or
add
lahf
in
or
mov
jb
mov
sub
movsl
lcall
push
cltd
xchg
pop
fimull
jp
ds
icebp
imul
mov
inc
enter
and
add
addr16
int
sub
enter
xchg
stos
xchg
pop
testl
jp
xor
daa
aam
scas
cmp
js
xor
dec
mov
data16
inc
insl
in
and
sub
jp
iret
jp
jae
and
xor
repnz
add
mov
sbb
jl
and
mov
cmp
cmpsl
adc
push
or
cmp
iret
fsubs
sub
sarl
hlt
in
mov
daa
or
sub
inc
add
jns
cmp
icebp
push
and
iret
call
pop
cltd
fimuls
cwtl
sbb
jp
rcl
cmc
cli
lret
push
mov
popa
xchg
add
jno
dec
shr
ret
fs
push
adc
inc
pusha
dec
cmp
jo
xchg
les
xor
or
mov
mov
or
rcr
adc
xchg
mov
sarb
push
sbb
mov
aad
stos
mov
pop
sti
cmp
bound
inc
push
xchg
add
mov
dec
xchg
lea
sbb
insb
in
lds
mov
ficomps
test
inc
or
cmpsb
neg
test
inc
inc
lahf
add
pop
dec
xchg
jl
stos
jno
pop
sti
mov
xchg
leave
fnsave
jne
fwait
adc
lcall
fsubr
into
sbb
dec
rol
jo
xor
out
clc
lret
xlat
scas
xchg
in
cmp
gs
movsl
push
inc
inc
cmp
in
push
and
in
sub
mov
js
mov
mov
mov
imull
xchg
fcoml
pop
or
xor
pusha
outsb
js
xchg
ljmp
icebp
mov
in
jmp
dec
adc
mov
cli
pop
sbb
cmp
xor
adc
xchg
xchg
add
popa
movsl
mov
lret
xchg
push
loopne
cmp
dec
xchg
push
call
cmp
pop
in
out
loope
push
pushf
mov
sub
push
inc
push
dec
fimuls
xor
push
into
adc
inc
add
pop
cmpsl
push
imul
int3
push
sub
xchg
and
imul
jno
mov
pop
test
mov
dec
sub
in
pop
lock
sub
xchg
fbstp
mov
pop
jle
push
add
push
loope
roll
mov
mov
xorl
loop
stos
cmp
xor
rcr
daa
push
mov
jecxz
data16
lods
shll
adc
movsl
add
mov
mov
pop
cmpl
mov
mov
adc
scas
popa
mov
mov
shl
pusha
jle
xchg
pop
in
xor
mov
fbstp
jg
and
and
int
cltd
cmp
sub
mov
jne
rcrl
cmpsb
xor
loopne
leave
inc
inc
jecxz
push
mov
inc
arpl
and
sbb
std
pusha
pop
mov
popa
jnp
mov
test
cld
xchg
lret
dec
loope
fs
pop
dec
cs
loop
xchg
pop
cmp
add
int
or
fidivl
dec
test
inc
add
pop
push
jb
cmp
scas
mov
jbe
in
or
xlat
pop
lret
iret
rcrb
mov
gs
adc
mov
jbe
fidivrs
push
shlb
jp
adc
cmc
pusha
inc
aas
jne
jno
pop
ja
jl
rclb
mov
iret
cld
mov
dec
aad
cmp
pop
dec
sub
fildll
cmpsl
mov
sbb
jno
dec
idivb
and
rorb
dec
jbe
fs
pop
xor
fadds
into
popa
mov
dec
mov
dec
in
adc
sbb
cmp
fnstsw
fisttpl
ret
lock
mov
shll
cmc
negl
std
push
jl
lea
cli
mov
or
push
dec
les
test
xchg
cs
mov
inc
popa
loope
scas
jecxz
cmpsb
cmp
push
lock
insb
mov
jae
add
xor
movsb
mov
gs
aaa
out
xor
add
ja
bound
mov
ljmp
mov
sub
mov
xor
push
dec
mov
mov
adc
push
xchg
hlt
stos
lret
test
mov
jl
mov
incb
daa
mov
sbb
pop
inc
adc
push
iret
cmp
mov
cmp
push
add
or
scas
mov
sahf
push
sbb
mov
sbb
push
les
js
pop
mov
or
cmpsb
cltd
jl
adc
xchg
pop
mov
addr16
dec
es
pop
xchg
or
popf
and
movsl
das
or
or
mov
jo
or
fists
or
sahf
push
cmp
pop
imul
mov
xchg
adc
pop
aas
or
lret
ficomps
scas
clc
inc
mulb
mov
jbe
cmp
or
cmp
xchg
mov
pop
data16
lret
dec
in
add
daa
push
loop
aam
add
dec
sub
insb
add
sbb
mov
dec
inc
jo
sti
aas
sub
push
sub
push
push
and
and
push
hlt
mov
mov
das
lret
pop
mov
mov
cmpsl
lret
sbb
pop
xchg
repnz
jge
in
xchg
inc
nop
adc
pop
jno
xor
push
adc
out
and
subb
ds
test
pop
xchg
dec
mov
sbb
cwtl
orl
xlat
clc
xor
imul
mov
sub
or
push
cltd
and
pop
shrb
addl
fwait
in
sti
adc
push
cltd
dec
dec
push
and
xor
repz
stos
pop
cld
pop
or
mov
test
cmp
add
lret
pop
jbe
fxam
mov
dec
adc
out
mov
jmp
jno
jl
adc
mov
mov
and
push
imul
dec
mov
push
ffree
ret
ds
mov
add
pop
imul
jns
push
into
stos
cmc
inc
stc
gs
xchg
adc
stos
gs
inc
out
push
mov
mov
add
push
les
pop
jae
popw
pop
push
ljmp
mov
or
sub
test
into
pop
or
inc
jg
xchg
xchg
jb
sbb
mov
sarl
bound
dec
ret
pop
fmuls
xor
int
rcrb
mov
mov
not
mov
adc
cmp
xor
cs
lcall
lcall
jns
jecxz
cld
fsubrl
jno
fnstenv
mov
dec
push
mov
mov
mov
test
sub
pop
fninit
shlb
lret
mov
divl
aaa
js
cld
orl
mov
lea
stos
jne
jmp
mov
inc
add
and
xor
jbe
mov
mov
mov
or
rcrb
xchg
popf
push
xlat
jge
pushf
inc
mov
mov
mov
xchg
xchg
cwtl
scas
xchg
fsubl
push
imul
xchg
pop
out
or
int3
cmc
iret
popf
jl
push
sub
lcall
imul
sub
mov
mov
cmp
test
pop
call
sub
rolb
mov
xor
rcrl
aas
xchg
jnp
jns
mov
movsb
sbb
xchg
repz
add
daa
sahf
daa
sti
enter
jae
cwtl
ja
int3
adcl
gs
shl
mov
sub
jb
into
movsb
push
lcall
pop
push
and
push
notl
mov
mov
jne
test
aas
mov
xor
sbbl
pop
jmp
sub
loop
fcoms
lock
xchg
movsl
push
inc
inc
mov
aaa
jo
dec
shr
movsl
in
xchg
daa
fnstsw
lock
lcall
mov
lock
out
mov
leave
aam
cmp
rol
pusha
dec
mov
mov
dec
shrl
shrb
jg
adc
dec
mov
xlat
mov
addr16
jmp
in
lock
cli
xchg
pop
and
fmul
fwait
movsl
cmp
stc
nop
jae
push
mov
pop
or
pop
dec
dec
jmp
orl
xorb
add
add
imul
fxch
sub
mov
jne
or
xchg
xchg
les
cmpb
jecxz
mov
es
cmc
or
out
mov
pop
dec
push
in
clc
lds
daa
or
in
arpl
mov
or
mov
mov
mov
push
inc
push
call
loop
xlat
insl
cmp
std
imul
clc
lods
jnp,pt
sbb
outsl
xchg
mov
pop
cwtl
push
shlb
jmp
repz
pop
and
xor
pop
cmp
test
inc
sahf
xchg
stos
cmpsl
shll
daa
shll
pop
int3
shrb
push
loopne
in
mov
inc
mov
into
pop
jg
insb
testb
in
aam
inc
pop
out
mov
inc
mov
ja
lock
lret
ljmp
mov
mov
and
xor
dec
inc
pop
nop
xor
fbstp
mov
or
fdivrl
or
loop
pop
xor
out
jmp
into
jge
mov
dec
add
pusha
loop
mov
adc
or
adc
jnp
scas
lea
or
push
pop
pop
add
test
orl
arpl
sbb
fmull
jbe
outsb
pop
mov
outsl
xchg
or
cmp
les
scas
into
lods
and
pop
jp
arpl
xlat
mov
dec
test
popf
test
sbb
and
xchg
mov
xor
add
cmp
fnstcw
hlt
std
add
push
or
mov
adc
je
adc
mov
fadds
jns
std
pop
insb
lcall
fwait
mov
pop
ljmp
adc
dec
aad
mov
push
outsb
scas
push
push
out
or
jae
leave
and
pop
and
push
jecxz
sub
mov
lahf
aas
mov
fwait
mov
loopne
negb
stc
sub
clc
daa
mov
into
lods
dec
cld
inc
dec
sub
mov
imul
sbb
mov
add
jle
lret
lods
xlat
xchg
mov
push
inc
jmp
adc
adc
mov
sbb
lret
dec
out
aam
ret
test
pop
data16
outsb
lret
inc
nop
sahf
xchg
insb
and
or
jle
outsl
negl
sbbb
std
lods
xchg
cmp
test
in
add
aad
jg
pop
ja
or
cmpsb
sub
dec
mov
mov
mov
fs
loopne
or
fldt
fnsave
or
jne
addl
cs
mov
push
pop
xor
mov
jp
push
dec
mov
inc
lcall
jo
daa
push
pop
iret
out
jg
jae
adc
push
cs
lcall
sbb
imul
sub
pop
out
mov
dec
inc
les
adc
xchg
fdivrs
push
loop
add
dec
aad
push
xor
adc
pop
dec
fcmovbe
popa
dec
jge
shlb
or
jne
outsb
jo
mov
js
mov
lret
jbe
xchg
xchg
push
imul
movsb
sub
pop
jnp,pt
pop
in
inc
aas
adc
sub
clc
cltd
add
and
stos
sbb
aaa
jmp
cmp
mov
push
cmp
dec
adc
out
push
sbbl
frstor
cmp
and
js
loopne
gs
pop
mov
leave
stos
push
lods
jbe
inc
jl
or
mov
and
mov
or
fbstp
inc
adc
cmp
jl
pop
jl
idivb
sbb
add
cli
jl
icebp
stos
lods
mov
in
or
movsb
mov
mov
mov
push
shlb
pop
pop
test
sbb
cwtl
out
cmp
clc
sbb
inc
cmpsb
andb
into
adc
mov
stos
lret
xchg
push
ljmp
mov
ja
dec
adc
push
sub
cmp
mov
test
push
cmp
adc
dec
xor
push
push
xor
push
push
add
adc
sbb
inc
jae
loope
daa
add
xlat
jge
lock
push
push
jl
and
fidivl
xor
sbb
scas
mov
and
out
vcvtsi2sdl
push
jne
fdivrl
cmpl
xchg
dec
shlb
cmpsl
loopne
sub
lcall
aam
shlb
roll
cmp
popf
mov
imul
cmc
faddl
out
mov
notl
pop
pop
insw
fsub
ret
push
xchg
insl
hlt
mulb
pop
shlb
push
repnz
ret
cmp
lret
dec
sbb
pop
add
sbbl
sbb
mov
xchg
out
add
test
mov
dec
enter
aam
sub
arpl
pushf
movsl
int
loope
push
or
pop
cli
fwait
push
shlb
push
mov
lcall
imul
callw
push
out
mov
incb
dec
inc
dec
push
mov
popa
gs
push
and
inc
jl
in
jbe
mov
arpl
mov
mov
inc
ret
leave
and
sbb
enter
je
adc
out
pop
out
adc
clc
dec
lahf
mov
aad
ds
jne
aas
jmp
push
xor
roll
pop
fstpl
inc
sbb
xchg
ljmp
jns
and
adc
popf
jae
cmp
addr16
push
sub
mov
cs
sbb
adc
sti
test
subb
mov
cmp
aad
call
xchg
pop
mov
and
mov
fidivrs
push
ja
sbb
nop
shll
adc
and
mov
fisttps
mov
test
fucomp
xchg
lret
push
fwait
lock
iret
mov
mov
push
inc
pop
xor
mov
imul
dec
cmpsl
ja
cmp
popf
es
mov
in
mov
popa
xchg
cli
mov
push
jne
cmp
push
loopne
mov
test
arpl
stc
in
imul
scas
in
sbb
mov
lret
pop
xchg
mov
jg
popf
test
test
imul
leave
inc
hlt
cmpsl
mov
cs
cli
cltd
push
pop
es
sbb
or
mov
pop
and
xchg
cmc
pop
imul
mov
push
mov
jo
sbb
sub
aam
cmp
out
lea
repz
inc
pop
sbb
rcrl
rcrb
push
push
clc
in
mov
fdivl
out
ret
aas
or
push
int
daa
shrl
adc
mov
testl
mov
clc
pop
imul
js
lcall
hlt
sub
xchg
jp
or
jns
add
fcmovbe
mov
stc
cwtl
in
mov
or
int
outsb
notb
jg
sbb
pop
aaa
mov
scas
inc
xorb
mov
leavew
pop
bound
xor
and
sbb
loope
ret
mov
pop
pop
adc
outsb
repnz
jmp
mov
call
insb
xchg
dec
das
sub
xchg
shlb
data16
in
les
xor
icebp
dec
je
sub
insl
dec
stc
ret
pop
cld
cmp
lods
sbb
sbb
fucomip
xchg
call
test
ret
subb
xor
dec
lahf
movsb
sub
pop
stc
mov
call
push
sbb
pop
leave
fnstenv
cmc
push
cmc
add
repz
push
jp
nop
jbe
jae
addr16
cmp
fbstp
arpl
imul
xchg
fadds
insb
push
pusha
enter
into
lods
sbb
inc
cltd
xchg
in
add
icebp
int3
add
aad
das
lea
in
pop
fidivs
fcomps
leave
mov
sbb
add
or
add
wrmsr
jb
adc
jecxz
add
repz
pop
adc
inc
mov
pushf
sub
shlb
dec
out
lods
in
or
jnp
movsb
adc
add
cmc
lods
ret
xlat
and
push
std
and
cmp
aas
pop
jne
inc
in
cmpsb
cmp
loopne
or
jle
js
cmp
mov
and
enter
mov
fstp
add
pop
aas
mov
in
loope
xor
pop
mov
push
das
nop
mov
xchg
push
lcall
cmp
xor
adc
cmove
or
mov
inc
aas
and
ja
imul
mov
std
lock
mov
clts
movsl
movb
in
rcrb
cmp
jmp
add
jecxz
stc
mov
and
push
inc
mov
jnp
pop
cmc
jns
ds
sub
pop
in
test
push
jb
add
inc
xchg
mov
enter
and
mov
mov
insl
mov
insl
inc
das
mov
out
cmp
sbb
mov
test
loopne
fiaddl
pop
or
or
xchg
or
sbb
call
out
orb
dec
stos
scas
outsb
ficoms
dec
pushf
or
movsb
inc
test
shlb
sbb
outsb
adc
push
hlt
add
popa
fbstp
cmc
ja
sbb
xchg
mov
mov
hlt
xor
pop
jne
shrl
ss
inc
ret
in
insl
adc
cli
in
lcall
sbb
dec
adc
pop
and
test
mov
loope
push
fadds
inc
pop
andb
mov
adc
and
je
pop
sbb
cmp
fs
or
stos
aaa
inc
aam
cli
mov
out
pop
cmpsb
cmp
push
adc
push
gs
ja
sub
add
fisubs
gs
pop
insl
xchg
mov
inc
addr16
andl
hlt
call
mov
es
and
fwait
sbb
jl
push
loop
testl
cltd
sti
shll
lds
repnz
jmp
mov
pop
inc
sbb
dec
cmpl
imul
into
and
lcall
daa
push
sub
mov
subl
insb
cmp
dec
out
dec
loop
mov
in
icebp
xchg
cmp
cmp
sub
dec
cmc
js
ret
add
sub
push
push
xor
in
pop
fs
push
inc
bound
xor
adc
call
ud0
inc
sub
and
rcrb
or
cmp
insb
jnp
in
sbb
inc
cs
mov
outsb
sub
pop
std
add
lods
fdivrs
repz
les
mov
popf
mov
mov
add
mov
xor
pop
xor
aaa
pop
enter
push
xchg
lret
loopne
pop
lret
nop
aaa
repnz
add
daa
ljmp
lahf
ljmp
addr16
push
iret
aas
mov
sub
lds
sti
jb
push
dec
jmp
add
movsl
add
cli
sub
or
cmp
jge
ret
mov
xchg
dec
sub
inc
sub
fs
or
loope
stc
and
add
sbb
mov
jae
cmp
push
fmull
stos
pop
pop
xor
xor
jmp
sbb
adc
outsb
aas
fnstsw
cmp
dec
inc
pop
sbb
gs
aad
loop
and
dec
dec
scas
pushf
pop
mov
shlb
stc
cwtl
mov
mov
sub
push
inc
shrb
mov
xor
int
jge
dec
or
rclb
pop
rorl
pavgb
lods
xchg
jns
ljmp
sti
orb
mov
adc
dec
sub
wrmsr
aam
loopne
mov
stos
mov
push
xor
shrl
ret
fsubs
sub
test
add
sbb
fstpt
and
in
xchg
inc
xchg
stos
mov
sub
hlt
sub
shlb
push
insl
mov
sub
cmp
adc
fisubs
jno
mov
or
xchg
dec
xchg
ja
jg
and
popf
lds
inc
add
test
fs
xchg
cmpb
mov
iret
dec
test
jg
pop
push
xlat
das
shll
imul
nop
mov
inc
mov
pop
adc
dec
in
mov
sub
test
lods
mov
ficoms
movsl
mov
insb
das
adc
out
fs
mov
test
dec
xor
add
cld
mov
xchg
pop
push
sbb
data16
idiv
shlb
dec
cwtl
aam
jg
sub
mov
mov
inc
xchg
dec
inc
mov
add
xorb
sbb
cmp
sub
js
pop
lret
pop
add
jmp
xchg
lds
add
in
outsl
pusha
and
mov
push
shrb
and
adc
mov
adc
mov
adc
pop
cwtl
in
cmp
rcrl
adc
sub
xchg
mov
lret
push
pop
mov
idivl
pop
cmc
lock
leave
icebp
mov
cmp
push
movsl
inc
push
test
insb
ret
test
popf
pop
ret
mov
sub
in
int3
mov
aam
js
imul
and
loop
pusha
cltd
mov
rclb
inc
pusha
jl
addr16
and
arpl
gs
mov
dec
sti
mulb
sti
pop
sbb
mov
sbb
mov
pop
pop
mov
orb
test
jg
out
fs
mov
cmp
leave
rorb
pop
fldenv
mov
lret
icebp
cmpsb
loope
inc
adc
adc
movsl
fldcw
dec
test
lock
hlt
dec
cs
int3
xchg
cwtl
sbb
push
add
mov
xchg
add
xchg
xor
ss
in
cmp
gs
pop
pop
pushf
and
adcb
dec
and
or
xor
jne
sbb
int
aaa
cmpsl
repz
outsb
lret
or
dec
or
pop
pop
jnp
and
sarb
mov
in
push
lcall
dec
mov
or
arpl
xchg
jae
adc
xor
stos
gs
sub
sub
aaa
stos
inc
lods
leavew
int
mov
int3
xor
stos
lods
mov
jnp
mov
enter
incb
repz
push
dec
pushf
adc
aaa
inc
popa
adc
lcall
sti
rol
lock
sahf
cmc
mov
outsb
push
je
cmp
adc
mov
jnp
ldmxcsr
enter
xorb
out
mov
or
lcall
mov
xor
out
daa
xchg
leave
aaa
pop
push
cmp
adc
jl
daa
nop
icebp
cmp
pop
mov
cmp
aam
mov
je
push
mov
inc
and
mov
in
out
adc
jae
icebp
clc
sub
sbb
outsl
sbb
push
and
shlb
jg
pop
in
xlat
out
fidivs
mov
sub
imul
push
xchg
pop
adc
lret
and
dec
xchg
loop
sbb
test
ljmp
test
add
pop
movb
ja
out
bound
sub
add
dec
mov
dec
xchg
add
pop
movsl
fsubrs
push
lods
add
stc
xlat
ret
xchg
dec
out
or
jnp
pop
mov
loopne
xchg
idiv
jmp
and
cmp
mov
mov
nop
and
arpl
aam
popf
mov
mov
xchg
jp
outsl
and
loope
mov
lret
xor
push
sbbl
jb
push
xor
adc
dec
inc
cltd
fld
into
subb
repz
or
inc
dec
out
or
inc
pop
insb
cltd
mov
pop
push
mulb
sbb
mov
das
sbb
push
pop
test
pop
sub
fidivs
xor
xchg
jbe
sub
and
xor
dec
aaa
jnp
add
jmp
jno
mov
repnz
mov
pop
js
cmp
js
repnz
jmp
sub
dec
lret
mov
push
jle
inc
pop
mov
sahf
and
fidivs
sub
push
mov
pop
jge
repz
inc
nop
fistpll
rclb
test
stos
or
les
adc
addl
into
daa
jmp
repnz
stos
lcall
shlb
dec
imul
jg
call
aam
and
aaa
push
push
jmp
mov
xor
imul
add
xor
out
mov
pop
aam
mov
jge
les
in
movsb
mov
mov
mov
mov
inc
cmc
arpl
pop
lretw
aad
xchg
nop
inc
push
mov
jmp
int3
fnstenv
movsb
and
bound
inc
or
mov
fildl
iret
mov
test
jmp
jno
stc
sahf
cltd
lcall
push
xchg
shrl
xor
or
sub
aaa
mov
mov
rorl
test
jno
aas
add
xchg
sti
cmp
dec
bound
adc
test
lcall
jb
add
insb
icebp
xlat
add
jl
rol
sbb
xor
xor
push
mov
dec
dec
sbb
enter
fwait
dec
mov
or
lods
shr
icebp
xchg
inc
or
lret
sub
shll
add
jmp
cmp
mov
pop
cmp
test
mov
xchg
xlat
cmp
sub
jbe
jge
jge
add
adc
xlat
mov
mov
xor
and
cwtl
in
mov
xchg
sub
mov
pushf
std
cmc
daa
mov
fildll
inc
inc
and
push
test
jb
xchg
pushf
xchg
lret
repnz
addr16
in
jno
sahf
in
ja
push
pop
jp
int3
adc
adc
movsb
cli
sub
fiaddl
jne
mov
icebp
aam
push
mov
jle
and
out
sub
jg
in
outsl
mov
clc
jl
aam
sub
rcr
call
scas
jb
mull
add
cmp
pop
iret
mov
mov
stos
je
clc
mov
and
outsb
nop
mov
fisttps
push
mov
insl
jecxz
sub
sub
sub
cmp
and
mov
lods
jle
ret
loopne
stos
pop
data16
daa
mov
push
cmpsb
mov
aas
pop
inc
ja
or
ret
rcl
popf
rcl
iret
jns
fisttps
xchg
or
sub
mov
cmpsl
and
inc
sbb
sub
adc
xchg
movnti
std
mov
adc
testl
mov
cmp
push
out
inc
cmp
lods
std
inc
es
int
sbb
fidivl
ret
shlb
jmp
sub
dec
lods
adc
lahf
sub
inc
cli
xor
mov
cli
mov
sbb
or
mov
mov
out
and
and
fs
xor
dec
xchg
push
jne
data16
mov
mov
das
jl
pop
mov
insl
stos
mov
adc
pop
js
sar
xchg
lcall
leave
gs
cwtl
adc
inc
xor
add
add
jns
and
jp
insl
pusha
vpandn
sbbl
adc
dec
mov
lods
outsl
and
ret
push
push
insl
inc
aas
pop
jns
mov
push
xor
clc
scas
lret
sbb
inc
sub
stos
test
mov
movsb
cmovb
mov
lock
mov
xchg
cs
push
dec
jo
and
sub
into
pop
insl
pop
movsl
jb
jg
xchg
mov
mov
xchg
pop
add
mov
dec
out
or
jno
adc
inc
push
addr16
stos
push
mov
xor
sbb
lahf
push
pop
out
dec
xor
mov
cmpsb
add
xchg
or
dec
dec
adc
adc
nop
and
jle
inc
cmp
inc
cltd
mov
aad
testl
sti
aaa
mov
mov
into
fimuls
lcall
dec
cld
sbb
jns
cs
scas
shll
dec
push
fistps
jo
push
ja
das
leave
jl
andl
or
mov
sub
cmpsl
sub
faddl
pop
jg
or
out
pop
cld
in
mov
cmp
pop
mov
dec
jnp
or
inc
enter
xchg
ja
jp
in
shll
jo
push
scas
popa
cwtl
or
popa
dec
and
push
mov
mov
fwait
ret
dec
rclb
fcomi
int3
addr16
inc
cmp
arpl
sub
outsb
stos
ds
ljmp
mov
popa
out
mov
dec
lods
dec
mov
push
jns
jp
enter
bound
cs
fdivrp
add
or
push
cmp
adc
stos
jnp
out
push
mov
push
pop
mov
xchg
dec
ja
enter
out
cld
iret
js
ret
jno
out
xchg
add
mov
gs
jp
iret
int3
xor
cmp
lods
push
addr16
pop
xorl
sub
mov
mov
addb
mov
fcomp
push
insb
pop
cmpsl
cs
dec
dec
adc
ret
lock
push
in
andl
mov
mov
cwtl
lea
mov
lcall
adc
gs
push
xchg
in
ja
sarl
in
push
roll
sub
jnp
enter
dec
testl
push
push
push
adc
aas
jno
sub
jae
dec
dec
sarb
int
xchg
inc
inc
lcall
mov
es
bound
shlb
xchg
ljmp
or
push
lahf
xor
pusha
jb
daa
lahf
pop
pop
mov
mov
ror
inc
decl
mov
mov
and
xor
sbb
lods
popf
mov
es
out
decl
push
ljmp
rolb
inc
cmp
jle
pop
mov
mov
cwtl
add
dec
xor
flds
cmp
add
and
je
add
inc
in
fadds
xor
xchg
mov
ja
mov
shl
les
cld
pop
jb
clc
fwait
xchg
jbe
sub
mov
mov
fsubrp
cs
sub
push
repz
sub
adc
mov
fsubrp
test
sbb
mov
ja
mov
xor
arpl
fistpll
out
add
sub
repnz
pop
xchg
add
inc
ret
fdivp
pop
fidivrl
sbb
mov
pop
notb
out
mov
fiadds
pop
enter
loopne
sbb
jmp
lds
fmull
movsb
rcll
pop
icebp
add
sbb
mov
das
jbe
mov
jle
flds
xchg
pop
sbb
rcrl
ja
push
inc
movsl
cmp
jns
push
or
test
xchg
xlat
sbb
fs
push
inc
loop
es
nop
cmpsl
leave
pmaxsw
xor
negl
jns
push
sbb
enter
mov
and
push
cmp
mov
adc
cmc
mov
lock
aam
lret
enter
jge
test
pop
jns
xor
dec
bound
ds
sub
loope
or
pushf
imul
xchg
push
test
sub
mov
jae
sbb
or
aas
push
xor
jle
or
mov
push
mov
dec
pop
sub
mov
mov
and
movsl
stos
jns
fsubs
cmp
pop
aam
les
mov
cmp
jmp
mov
cmp
in
sbb
nop
fcmovnb
fwait
add
lods
shll
mov
mov
dec
andb
inc
popa
repnz
call
adc
movl
sar
inc
mov
jg
imul
or
lock
jmp
movsl
inc
add
push
mov
in
inc
dec
sbb
cmpsb
lcall
mov
sbb
sub
push
xchg
cmp
inc
xlat
outsl
in
add
insl
repz
test
pusha
movsl
adc
sbb
lea
loopne
and
andb
cmp
adc
fsubrs
shll
sub
and
into
enter
or
aas
and
inc
gs
push
insl
sub
xchg
jo
xchg
dec
jle
push
cld
pop
idiv
jle
xchg
shll
add
ja
movsb
push
sbb
jae
jbe
add
bound
iret
mov
cwtl
loope
aas
jbe
push
js
lea
daa
push
int
mov
mov
mov
les
xor
or
or
imul
mov
test
aas
adc
pop
ret
xlat
adc
push
pop
add
ljmp
rcl
cmc
imul
movsl
std
jecxz
adc
iret
cmpl
mov
xchg
adc
out
int3
outsl
jl
jg
repnz
cltd
test
scas
xchg
popf
lds
out
rclb
xor
adc
cltd
clc
repnz
inc
cmp
fsubrl
and
xchg
es
add
sbbl
or
inc
dec
cmpsb
mov
mov
push
mov
sbb
pusha
mov
mov
gs
jne
xchg
jle
adc
outsb
lock
xchg
inc
adc
stos
jno
xchg
mov
pop
cmp
fcoml
pop
pop
mov
xor
push
cmpsb
ja
loop
jl
push
cmp
clc
test
pusha
pushf
inc
xor
js
pop
cld
lahf
inc
addr16
cmp
jle
push
int3
inc
enter
arpl
jb
sbb
loopne
movsb
xor
std
inc
leave
sbb
fidivrl
jmp
addr16
lea
jnp
andl
leave
movsb
mov
mov
bound
inc
xorl
dec
insb
bound
mov
jae
pop
lret
lcall
pop
mov
push
or
adc
xchg
xchg
pop
xrelease
adc
lods
jg
and
or
mov
push
jb
jge
ret
rcrb
ret
repnz
and
out
sub
adc
inc
ds
cmc
stos
addr16
je
sbb
jb
cmp
js
push
xchg
cmp
fs
leave
pop
ret
dec
inc
add
movsb
xchg
mov
adc
mov
push
shl
jne
inc
sub
xor
fwait
scas
mov
sbb
stc
cmp
push
mov
stos
push
push
or
cld
in
incl
or
je
loopne
xor
inc
pushf
fdivl
sub
xor
insl
icebp
lea
mov
add
sub
pushf
fbstp
dec
xchg
fimuls
sbb
mov
js
out
jns
pop
inc
or
add
stos
xor
sti
out
mov
sub
repz
aas
imulb
push
inc
loopne
ret
inc
mov
stc
cmp
dec
or
leave
sti
and
ret
inc
sub
adc
insl
and
push
ljmp
insb
push
cld
test
loopne
jge
stos
push
xchg
out
xor
sub
stos
mov
mov
dec
out
and
insb
jbe
lret
iret
push
inc
pop
push
adc
cmp
push
inc
fmull
xchg
and
xor
inc
xchg
inc
imull
js
out
in
xchg
adc
mov
xlat
gs
mov
xchg
sub
addl
mov
and
std
xor
into
cmp
and
mov
fistps
and
add
cld
cli
cmpsl
mov
mov
xchg
push
sbb
jge
pop
pop
pusha
out
or
aam
adc
sti
negl
fwait
dec
repnz
outsb
loopne
enter
adc
pop
repz
cmp
shlb
fsubs
push
sbb
movsl
xor
imul
lret
adc
xchg
pop
lahf
mov
icebp
mov
push
sub
insl
dec
sub
es
push
add
ret
lret
mov
mov
mov
cmpsb
pop
aaa
add
aad
dec
jg
xchg
mov
add
sti
ljmp
jo
lds
cmpsb
daa
and
in
inc
inc
out
mov
push
pushf
movsb
xchg
inc
in
lods
jp
and
mov
dec
push
fs
mull
idiv
dec
add
shll
xor
iret
xchg
fcmovnbe
xor
cmp
es
lock
pop
push
add
xchg
ljmp
jecxz
daa
push
push
test
xchg
or
jp
and
cld
dec
and
adc
shl
dec
pmaxub
mov
push
sub
cmpsb
mov
pop
cmpsl
mov
jns
stos
lds
ljmp
cli
dec
dec
jmp
pop
fcmovnu
js
and
test
mov
rcll
ret
fsubp
and
push
cmp
jnp
in
jb
xor
data16
cmp
inc
mov
mov
xlat
popa
jo
add
mov
pusha
std
pop
push
or
lahf
imul
addr16
aam
imul
mov
mov
lahf
xchg
mov
inc
sbb
cwtl
pop
mov
lcall
fcmovnb
jbe
jmp
jns
clc
mov
jae
xor
icebp
movl
popf
pop
sahf
add
add
mov
loop
hlt
cmpsl
addb
mov
jbe
adc
or
fcom
push
leave
std
punpckhbw
mov
mov
cs
movsl
dec
mov
jmp
mov
jae
dec
xor
mov
fistpll
xor
jecxz
and
push
push
jno
movsb
stos
into
scas
into
movsb
roll
mov
push
insl
mov
daa
sub
jb
sbb
cltd
mov
add
jns
sub
push
push
inc
add
mov
jo
das
loopne
xor
cmp
jae
pop
mov
or
std
stos
sbb
cmpb
cltd
std
shll
lds
subl
pop
lods
sbb
shlb
lcall
sub
add
rol
adc
pop
xor
cmpsb
inc
dec
push
leave
pushl
sub
stos
mov
stc
stc
cmc
aam
jns
jl
mov
fwait
insb
lods
pop
bound
lea
push
aad
fs
cld
pop
inc
xchg
push
imul
aam
cld
cmp
add
stos
decl
imul
xchg
inc
mov
aam
aaa
mov
mov
rcrl
jb
pushf
mov
enter
pop
lods
fiadds
psllw
mov
aad
sbb
mov
cmc
test
ja
leave
loopne
xor
rorl
sarb
jne
mov
incb
mov
lock
lret
scas
sub
dec
nop
lock
lret
pop
iret
loopne
xor
ret
or
clc
jmp
add
flds
dec
popf
mov
out
ljmp
pusha
outsl
jp
xor
mov
jb
jmp
arpl
shll
lret
enter
add
mov
lahf
hlt
add
loopne
and
mov
into
mov
in
push
fldt
push
push
mov
mov
cmpsl
sbb
adc
test
scas
or
dec
ja
insl
sub
cmpsb
jg
outsb
sbb
mov
imul
in
xchg
xchg
fildll
into
sbb
inc
faddl
call
dec
lds
xlat
push
lds
or
inc
movsb
insb
rcr
ljmp
inc
mov
stc
dec
mov
fstl
lock
inc
mov
sub
cmpb
lret
push
enter
add
xor
daa
rclb
sahf
ja
leave
icebp
lods
fmulp
popf
xor
cltd
push
cmp
mov
movsl
das
inc
addr16
into
inc
adc
mov
outsl
jo
or
push
add
jle
loop
jbe
cmp
mov
stos
xchg
push
mov
xor
frstor
ds
xlat
test
sub
push
xor
mov
outsb
bound
aaa
setns
inc
xor
fs
out
inc
dec
aam
xchg
arpl
stc
xchg
into
daa
test
shlb
stos
xor
cmc
in
dec
outsb
and
adc
xor
nop
aam
fisttpll
ljmp
inc
movsl
out
push
mov
outsl
or
pop
lock
xchg
das
gs
pcmpeqb
xchg
mov
dec
lock
sbb
test
sti
sbb
fcomps
cmpsl
test
mov
aas
rcrb
cli
arpl
mov
mov
aam
stos
mov
mov
adcl
dec
push
mov
xor
xchg
xchg
cltd
sbb
dec
jmp
andl
repnz
and
clc
and
mov
out
sub
pushf
aad
mov
xorl
faddl
aam
or
mov
push
clc
pop
mov
pop
add
jg
jno
add
nop
and
ds
sti
adcl
cmp
lea
cmp
pop
es
les
outsl
out
fcmovu
pusha
add
mov
lret
xor
inc
cltd
lods
mov
cmpsb
add
sbb
ret
adc
inc
ljmp
sbb
repnz
outsb
lret
rol
cmp
add
repnz
and
cmp
or
dec
cli
lret
adc
fdivrs
scas
fildl
push
aam
cld
sti
mov
mov
ljmp
jecxz
dec
stc
xor
popa
pop
ss
push
jg
fistpll
pop
or
jle
out
inc
test
push
adc
out
cmp
fndisi(8087
xchg
aaa
mov
pushl
dec
sub
push
sti
nop
ret
bound
in
adc
inc
sarl
and
movsb
adc
popf
push
xlat
and
fwait
sbb
or
add
mov
test
mov
loope
cmpsb
add
sub
nop
shrl
mov
sub
push
sbb
dec
mov
stos
sbbb
loopne
inc
shlb
jmp
and
cmp
jne
aad
ficoms
rorb
hlt
jp
jae
stos
in
out
pop
pop
lods
data16
test
sub
pop
lret
out
imul
adc
dec
add
aad
test
outsb
iret
or
cmp
dec
or
push
in
pop
fistl
push
inc
mov
shll
imul
fstpl
mov
sbb
or
mov
or
stos
arpl
or
push
cmp
sarl
out
fadds
iret
lock
push
lret
ret
stc
dec
fistps
enter
scas
xchg
xor
adc
gs
fdivr
test
jg
mov
popf
adc
xor
loopne
iret
mov
ja
sbb
pushf
inc
inc
les
test
sbb
pop
loop
jo
arpl
rorb
xor
add
or
mov
cli
ljmp
lret
inc
sub
dec
jns
push
cltd
add
aad
ds
push
lret
stc
ja
jb
or
in
and
sbb
push
std
jmp
mov
cli
push
jg
mov
or
mov
je
scas
dec
sub
imul
aad
int3
sub
cmc
pop
add
imul
rol
adc
jle
out
aaa
lahf
pop
inc
js
hlt
pushf
pop
iret
test
into
mov
aam
push
mov
mov
repz
fisttpll
adc
popf
mov
adc
into
fisttpll
mov
sbb
popa
rcrb
push
cmc
fs
push
cmpsb
cmc
xor
repz
repz
pop
dec
mov
cli
sub
leave
repz
cld
data16
arpl
jle
or
mov
xor
fsubrs
xchg
push
sarl
cmc
ret
cmpsb
rcll
mov
dec
and
sub
cmp
rol
jg
imulb
jns
jge
sbb
xor
pop
pop
push
jmp
push
mov
cmp
mov
push
pop
adc
xchg
stos
jecxz
jmp
stos
cmp
fs
leave
cld
aas
mov
xlat
or
sbb
adc
call
test
sbbl
bound
pop
xor
nop
fldcw
mov
dec
cmp
aaa
fstl
daa
es
pop
call
pop
xor
xor
stc
pop
pop
aas
dec
test
pop
stos
pop
loop
or
loopne
mov
or
imul
sbb
mov
mov
insl
pushf
scas
and
pop
iret
fsubrs
jl
jmp
gs
frstor
xor
jp
loopne
add
adc
test
daa
push
adc
std
xchg
dec
sarb
inc
xor
or
pop
sub
loope
add
imul
sti
xchg
push
add
push
and
rsqrtps
xor
cs
xor
aaa
pop
sub
ficoml
or
jecxz,pn
adc
or
jns
adc
aad
cltd
xchg
dec
inc
jns
dec
adc
mov
shrb
imul
xchg
shr
mov
push
push
in
in
sbb
adc
les
add
and
push
imul
xchg
push
cmpsl
jle
xchg
mov
cli
push
mov
das
into
xlat
bound
inc
sbb
in
cs
xor
in
add
dec
shlb
mov
adc
adc
push
push
test
mov
cli
or
in
cmp
shr
mov
push
and
test
addl
or
divl
ret
aad
push
xor
jecxz
pop
mov
add
lcall
stos
stos
jp
xchg
jb
data16
jb
mov
inc
or
pop
out
pop
xor
xchg
mov
and
js
xchg
dec
pop
rcrl
mov
cmpsl
inc
add
sarb
sbb
dec
movsb
add
sahf
mov
movsl
popa
leave
call
sbb
lock
iret
fcomps
sbb
test
cmp
mov
and
or
or
fwait
and
aas
lock
xor
sub
sbb
bound
test
xor
adc
cmp
jb
lret
cld
repnz
sbb
stc
insl
and
pushf
pop
sbb
pop
xchg
add
mov
dec
lcall
sub
in
pop
sahf
iret
jge
mov
pop
stc
jge
dec
pop
cltd
int3
jecxz
or
push
loope
inc
mov
int
inc
jge
xor
mov
mov
mov
ret
xchg
fsts
jns
ret
arpl
push
das
sbb
inc
repz
sub
push
fwait
sahf
popa
shl
in
clc
bound
mov
movsb
mov
pop
pop
sub
iret
ret
push
dec
aas
filds
hlt
xor
xor
push
sub
push
cs
clc
mov
pop
dec
in
popf
jb
push
sbb
push
mulb
int3
ret
mov
test
ja
mov
mov
lock
aad
xor
repnz
pop
inc
mov
enter
inc
jmp
pop
xor
mov
jmp
scas
std
xor
out
pop
inc
fisubs
add
aad
test
test
push
cli
mov
or
mov
mov
out
loop
dec
pop
add
cwtl
popa
inc
test
mov
mov
xchg
add
cmp
xor
add
mov
jo
jnp
jns
push
loop
pusha
insb
insb
xorb
lret
and
pop
pop
dec
cwtl
aam
mov
fbld
inc
lods
cmpsb
aaa
and
jbe
cmp
sbb
ss
scas
add
push
jecxz
mov
sbb
out
adc
mov
mov
ret
dec
repz
sti
std
dec
jl
hlt
xchg
repnz
cmp
adc
and
mov
mov
paddb
lods
imul
mov
inc
sbb
int
out
aad
popa
or
inc
xor
ljmp
mov
fdivrl
testl
dec
mov
mov
sbb
pop
jns
clc
or
adc
sub
lods
and
adc
lret
fwait
imul
mov
setg
ss
push
jl
pop
test
notb
dec
mov
adc
mov
pop
das
or
mov
bound
pop
pushf
fdivrl
jl
gs
jno
mov
popf
dec
add
stos
mov
dec
and
je
xlat
mov
inc
and
out
jge
movsb
sub
jae
sub
push
sbb
xchg
xor
aad
push
repz
adc
sub
cmp
clc
jge
or
fptan
sbb
add
pop
cwtl
in
mov
cltd
adc
sbb
and
push
orl
aam
sub
jbe
repz
cmpsl
dec
jecxz
push
sbb
pop
stos
ret
push
ljmp
je
scas
pop
mov
and
jecxz
jnp
stos
lds
pushf
push
adc
out
jl
inc
js
dec
int3
jl
xchg
mov
xchg
std
lahf
imul
subps
or
sub
cmp
rcll
xor
xchg
imul
push
pusha
int3
xchg
sbb
push
or
repnz
xor
jae
sbb
dec
sbb
mov
rorb
xchg
dec
or
push
jecxz
mov
enter
push
ficoms
test
xchg
and
lods
scas
int
dec
ret
xor
mov
dec
imul
in
clc
rclb
sub
add
sbb
movsl
in
fstpt
push
fdivl
mov
inc
push
push
push
lret
jmp
cmp
push
fisubs
jmp
xor
pop
ret
fsubrs
add
es
mov
mulb
aam
adc
xchg
or
aad
mov
cltd
pop
jge
adc
jbe
pusha
fptan
jb
pop
and
xor
std
dec
fs
aad
inc
pusha
jno
cmp
and
sbb
aas
xor
push
pusha
popa
xlat
xchg
add
jmp
or
ljmp
ret
popa
mov
leave
lret
add
push
pop
jmp
pop
pop
test
pushf
ret
pusha
mov
lock
xor
push
mov
repnz
nop
sti
pop
dec
push
cmp
subb
aas
xor
or
add
cld
jmp
inc
das
clc
das
mov
fiadds
mov
jbe
mov
pop
sbb
xor
rolb
jp
mov
push
insl
sbb
xor
je
test
cmpl
cmp
sub
or
lret
xchg
ss
mov
fstpt
out
mov
ret
push
in
inc
add
sub
popa
stos
jge
xchg
arpl
mov
adcl
jae
aas
bound
pop
and
mov
inc
ficompl
pushf
pop
in
out
into
in
out
imul
push
fcoms
ds
popf
in
mov
jmp
out
cmp
adc
xorb
xchg
mov
add
ja
fisubrl
dec
inc
mov
and
pop
sub
incb
xor
inc
in
je
sbb
mov
movsl
test
or
es
movsl
pushf
mov
fbstp
sub
or
into
mov
mov
and
inc
mov
adc
movsb
push
shrl
cmpsb
add
mov
lcall
dec
pop
je
xor
add
jns
movsb
xor
cmpsb
push
adc
sbb
sti
sbb
pop
xor
ds
inc
cmp
insb
xchg
fdivl
clc
jb
jnp
test
loopne
fwait
push
fstl
aas
inc
inc
mov
or
out
push
cmpl
fimull
mov
fistps
aas
pop
jbe
mov
in
pop
mov
xlat
cli
bound
adc
and
dec
mov
inc
push
icebp
cmpsl
es
pop
in
jp
xchg
push
in
dec
addr16
sub
pop
mov
outsl
fcmovb
push
mov
test
mov
lret
cmp
sub
mov
aaa
mov
aad
sbb
das
pop
cmc
push
jg
fcoms
test
add
add
aad
mov
mulb
sbb
test
mov
or
inc
mov
sub
aad
js
sti
iret
add
mov
clc
scas
lods
mov
imul
adc
or
push
push
mov
insl
nop
add
lahf
push
sbb
or
ret
add
leave
inc
pop
mov
mov
jb
setns
adc
icebp
incl
mov
aaa
test
inc
jae
das
shrb
rorb
adcl
fidivrs
cmc
aad
enter
dec
shrl
or
or
test
popf
stc
xchg
inc
out
or
xor
cmp
inc
rcl
sbb
idivb
out
shrb
enter
lds
mov
jo
mov
jmp
mov
das
dec
lcall
addr16
dec
pusha
and
je
jae
loopne
sbb
insl
icebp
ja
mov
jno
frstor
jp
fistps
mov
lock
pop
adc
data16
insb
mov
xchg
sbb
scas
fildl
push
enter
rcrb
sbb
hlt
rorl
add
xchg
jmp
mov
jge
loop
pop
cmp
jbe
pop
mov
xchg
cmp
nop
inc
push
xor
sti
stos
dec
rorl
and
lds
sbb
push
xor
pop
aam
push
push
xor
sbbl
es
or
mov
out
xchg
xlat
adc
or
add
add
cld
shlb
jns
icebp
mov
and
adcb
cmp
scas
pop
cmp
jg
xchg
xor
cmp
mov
cmp
gs
dec
test
jecxz
addr16
fidivrs
rcrb
mov
sbb
adc
cli
inc
pop
pop
jns
arpl
scas
std
cmp
lds
fdivrs
xor
jle
jmp
daa
jo
jmp
popf
mov
rcrl
mov
jae
or
pop
adc
lds
es
bound
xchg
or
adc
aad
adc
mov
sub
insb
js
cli
popa
xchg
cmpsl
adc
inc
mov
stc
jo
out
mov
push
xchg
cmp
adc
or
daa
push
imul
mov
mov
data16
mov
ljmp
inc
jle
jns
shl
inc
mov
adcb
inc
loope
aas
aam
xchg
mov
in
lea
int3
add
dec
pop
xor
je
pop
dec
inc
decb
mov
iret
ds
sub
push
pop
movsl
sbb
pop
adc
sbb
adc
jb
lock
cld
push
addr16
icebp
movb
cli
lock
jo
xchg
outsb
mov
sbb
dec
mov
push
add
mov
ds
dec
add
popf
pop
cs
mov
sub
push
push
lret
mov
mov
xor
movsl
stos
push
sti
mov
and
inc
jp
jge
fldenv
xchg
sub
lds
aad
faddl
mov
pusha
push
popf
loop
les
popa
sbb
mov
lock
fidivs
push
stos
push
dec
xorb
decb
cwtl
push
cmpl
test
jb
aaa
shrb
jp
push
cwtl
mov
mov
xlat
aad
in
bswap
lods
sahf
mov
call
push
test
add
jb
or
fcom
cmp
xor
mov
cltd
movsl
divl
push
cld
push
out
add
out
lds
test
nop
jb
add
sahf
outsb
mov
insb
js
das
mov
xor
pop
inc
fwait
out
mov
mov
fstl
repz
jbe
into
add
in
push
loop
jno
call
push
dec
sbb
test
cmp
inc
shrl
rcl
pop
addr16
shlb
imul
pop
mov
leave
mov
push
adc
xchg
pop
std
add
imul
cmp
mov
stc
fists
adcb
xchg
enter
pop
shrb
dec
cld
or
popf
movsb
sbb
pop
xchg
sub
jp
jbe
scas
sbb
xchg
aad
sbb
mull
adc
dec
jb
or
gs
push
inc
mov
jmp
lcall
pop
adc
popf
fwait
bound
mov
push
push
aas
lods
add
in
pop
jbe
les
mov
adc
dec
or
orl
add
insl
insb
jae
les
in
mov
jl
int
sbb
pop
loopne
test
dec
pop
iret
push
jle
mov
lods
lods
add
mov
adc
push
fcomip
in
xchg
fwait
in
fidivs
xor
mov
shr
movsl
stos
xchg
add
adc
xorb
xchg
in
mov
and
and
mov
or
leave
dec
hlt
or
stos
add
xor
das
in
sbb
mov
inc
sahf
lds
and
out
enter
and
stos
mov
jp
imul
xor
sbb
mov
enter
std
push
out
xchg
adc
add
fcoml
push
stos
add
push
mov
adc
in
in
insl
push
test
push
jnp
and
scas
ret
loop
aam
fstl
lahf
xor
push
xchg
mov
xchg
pop
loop
adc
fsubrs
pop
push
js
mov
or
mov
dec
movsl
and
in
fisubrl
inc
xor
rorb
rorb
push
push
fiaddl
dec
adc
push
or
rcll
das
cmp
sub
call
push
xchg
leave
sarb
dec
rdmsr
push
xchg
lea
shll
lcall
and
cmp
subl
aaa
cmp
out
mov
mov
js
dec
stos
mov
rolb
movsb
pushf
out
ret
mov
lds
sub
fcomps
frstor
idivl
outsl
or
outsb
add
cmpsb
pop
push
xchg
cmp
leave
xlat
xor
std
mov
pop
mov
pop
add
cltd
jns
lahf
sbb
add
pushf
pop
jg
pop
es
lahf
lcall
xchg
lahf
cmpsb
inc
inc
and
fsubr
pop
xor
js
incb
ficompl
sub
pop
iret
xchg
cmp
cmp
cmpsl
movsb
and
mov
stc
jbe
cmc
les
xorl
mov
adc
or
jnp
cld
lods
push
add
pushf
jecxz
lret
jno
in
mov
xchg
mull
out
mov
sbb
hlt
out
loop
dec
ud1
mov
or
add
ja
es
pusha
jne
jle,pt
call
aad
dec
andb
push
ds
mov
out
cmp
das
lret
ret
addb
fyl2xp1
push
xchg
lea
mov
call
push
and
mov
into
jge
mov
adc
mov
push
and
shll
inc
hlt
add
pop
jnp
pop
dec
push
push
mov
mov
lcall
add
in
push
dec
pop
pop
pop
jmp
xor
sub
and
fildll
and
dec
ret
mov
mov
xor
mov
test
fidivs
sbb
rcl
aas
xchg
mov
or
cltd
sbbb
leave
dec
fdivrs
mov
popf
push
out
mov
cmp
dec
bswap
out
mov
push
cmpsl
int3
fcompl
stos
rcll
loopne
leave
xor
ret
sbb
jbe
or
push
das
stc
and
loope
sti
pusha
mov
loopne
out
int3
hlt
jno
cli
mov
data16
and
stc
mov
out
lret
loopne
aas
adc
push
out
and
mov
test
mov
std
bound
xlat
test
js
or
mov
jg
mov
or
or
jp
dec
push
push
pop
mov
into
jp
add
aam
mov
aam
add
insb
mov
mov
sbb
sub
dec
lds
push
aas
push
int3
dec
xchg
aaa
loop
dec
cmp
popf
mov
mov
or
fistpll
push
sbb
mov
dec
stc
sbb
inc
mov
push
sub
insl
xchg
mov
xchg
aas
hlt
int
out
inc
add
or
mov
mov
inc
imul
cmp
push
dec
push
inc
or
mov
lcall
pop
dec
pusha
lods
xchg
bound
mov
mov
mov
jbe
jmp
adc
push
dec
pop
mov
test
dec
dec
test
mov
pop
xchg
in
pop
out
mov
aad
or
das
testl
mov
or
ret
jo
jnp
pop
or
stos
sub
cmp
lods
in
mov
xchg
aam
mov
inc
aam
pop
movsl
or
or
xchg
test
shrl
out
iret
inc
adc
dec
ret
sti
nop
inc
aaa
xor
enter
pop
sub
lds
jno
stos
mov
aam
lods
mov
push
in
fisttps
jno
aad
lea
pop
sub
mov
add
fsubs
fdivrs
cmc
mov
adc
les
sahf
dec
imul
ss
jecxz
int
dec
jl
mov
pop
mov
add
sahf
cmp
sbb
push
cwtl
xor
cmpsl
cmp
insb
jae
rorb
dec
jbe
cmp
sbb
jge
cwtl
je
sub
mov
sbb
fwait
pusha
loope
push
fidivs
fldt
xor
adc
mov
out
inc
test
jb
cmp
lds
clc
dec
adc
std
inc
lret
cmpsl
inc
fistpll
jae
inc
jbe
jg
lods
or
loop
lahf
sbb
adc
aad
jmp
add
mov
jle
lods
iret
xchg
pop
mov
cmpsl
jle
push
sahf
xor
testl
shr
xor
bound
or
mov
cmp
mov
mov
in
sub
pop
or
fcmovnb
jmp
push
cmpsb
pop
ret
cld
or
push
lods
into
cmp
sub
dec
mov
adc
repnz
outsl
xor
lds
mov
fbstp
cli
sub
movsb
scas
fdivs
and
popf
mov
mov
stos
xorl
stos
insl
in
pop
sub
nop
cwtl
hlt
add
and
dec
sbb
push
mov
fwait
mov
push
xor
xor
leave
push
mov
pop
jge
or
in
ret
jl
aam
stc
lods
lods
mov
and
in
scas
aam
xchg
dec
cmc
out
lret
pop
ret
sarl
jecxz
outsl
sub
push
insb
add
sub
cmpl
nop
pop
movsb
scas
push
adc
sub
or
jo
rclb
std
fists
mov
or
push
mov
je
fisttps
addr16
lods
push
mov
shrl
push
jg
ljmp
jb
inc
pop
fs
popf
and
daa
dec
sbb
rclb
data16
cld
cmp
cmp
push
jg
hlt
sub
in
xchg
mov
push
fistps
xor
xchg
add
cltd
clc
addb
xorl
dec
ficoms
adc
pop
sub
popf
jno
push
ss
mov
pop
add
rclb
xor
mov
fnstsw
pop
loopne
jecxz
mov
cmp
sbb
inc
pop
mov
cmp
and
int3
cs
xlat
sti
xchg
adc
pop
add
add
sub
adc
aas
mov
fdiv
jne
xor
insb
test
push
xor
dec
mov
and
fwait
sbb
mov
adc
pop
pushf
jo
push
inc
add
inc
stc
out
lret
or
sbb
adc
sub
mov
or
pop
dec
xchg
in
cmp
cmpsl
icebp
rorb
inc
or
dec
add
fildl
or
fisubrs
push
xor
rolb
aam
rcrb
xor
add
sbb
sub
jnp
imulb
mov
fwait
in
adc
testb
js
mov
std
xor
inc
leave
frstor
out
test
sub
scas
pushf
dec
xor
push
das
cmpsl
cmp
add
sbb
pushf
cmp
push
into
push
or
or
sti
xor
in
or
cld
mov
pop
jbe
mov
pop
insl
cmc
or
xlat
inc
dec
icebp
mov
cmp
arpl
dec
cmp
popl
sbb
add
fcoms
dec
leave
insl
push
ret
cmp
push
testl
rolb
mov
lret
fadds
sub
sub
fmulp
fidivrl
add
out
jnp
pushf
fcomp
and
movb
push
add
lahf
cwtl
fdivp
push
aas
adc
lock
ss
addr16
repnz
xor
leave
aaa
mov
push
xor
dec
ret
mov
arpl
xor
cs
stc
icebp
int
sbb
in
mov
lret
call
mov
bound
dec
je
jle
insl
sub
jl
fsubrl
sbb
dec
sbb
sub
jmp
jnp
add
fs
mov
shl
pushf
jp
pop
sub
lods
sbb
push
xchg
dec
jmp
pop
fldlg2
popf
in
cld
or
ficoml
iret
fs
mov
ja
ds
in
aas
xchg
clc
cmp
outsl
in
rclb
cmp
mov
add
shlb
mov
cmp
ljmp
pushw
test
or
inc
add
test
mov
mov
roll
dec
add
xchg
xchg
push
stos
mov
popa
clc
xchg
out
adc
into
ljmp
cmp
adc
lock
and
xchg
out
popa
mov
cmp
xchg
stos
leave
mov
add
cmp
and
push
movsl
fwait
xchg
push
js
pop
stos
mov
and
pop
stc
mov
aas
mov
imul
push
push
lret
sub
dec
mov
sub
popa
add
sahf
out
mov
outsl
and
mov
dec
inc
sub
pop
std
pop
jbe
inc
stos
fisttpl
and
test
sub
push
or
out
outsb
sbb
cs
into
jbe
les
mov
adc
arpl
loope
in
sub
leave
and
xchg
adc
scas
test
or
adc
pop
insb
test
test
jl
cli
mov
testl
out
mov
push
xor
lock
aad
or
lea
mov
leave
or
inc
dec
test
sbb
scas
adc
mov
jns
jg
sbb
xchg
cli
shrb
shlb
adc
inc
sarl
pop
sbb
test
jle
xchg
daa
adc
sbb
cwtl
sbbl
xchg
loope
inc
xchg
mov
push
js
xor
sub
mov
xchg
dec
rcpps
cwtl
bound
jecxz
fcmovbe
scas
mov
sub
in
out
mov
rcrb
js
pusha
inc
mov
loopne
jns
mov
jne
or
add
xor
xor
out
mov
or
sub
inc
jnp
pop
add
pop
inc
add
bound
or
pop
add
mov
jne
push
sbb
add
jns
push
mov
push
pop
or
es
std
mov
mov
jb
int3
int3
and
mov
imul
mov
add
pop
mov
xorl
leave
jge
xchg
jb
stc
jne
sbb
xchg
ret
cwtl
adc
sbb
jbe
mov
cmp
mov
xchg
movsl
bound
cwtl
loop
dec
and
gs
pusha
pop
stc
pop
pop
lods
xor
sub
push
in
nop
cltd
out
push
inc
outsb
loope
mov
loope
pop
addr16
fs
add
add
jge
nop
in
push
push
mov
mov
lods
hlt
sub
test
pop
int
data16
cmp
inc
cwtl
pushf
xor
cld
adc
popa
jo
and
dec
mov
ret
rclb
mov
cmp
push
cld
inc
adc
adc
add
adc
sbb
mov
mov
imul
jb
insb
adc
aam
jmp
push
jecxz
xchg
jmp
add
imull
imul
pop
inc
cmp
stc
mov
test
mov
cmp
ds
mov
adcb
out
jne
pop
push
decb
fisttpl
shrb
out
dec
pop
sub
lea
push
mov
mov
mov
sbb
pop
imul
fldl
scas
sub
mov
stos
jp
pop
jmp
mov
xchg
jae
adc
sbb
mov
jl
lea
call
cmp
inc
pop
fmuls
nop
in
out
push
lock
adc
icebp
out
sub
push
adc
jl
rep
repnz
repz
pop
mov
xor
aam
mov
dec
faddp
and
add
mov
loope
popa
jnp
shll
int3
mov
outsl
lock
jns
jbe
popf
dec
adc
mov
mov
and
out
adc
pop
jmp
fistpll
stc
addr16
bound
dec
lock
xor
arpl
mov
push
push
fisubrl
ret
sbb
test
xlat
out
hlt
add
fsubrl
test
pop
jg
lock
repz
cwtl
sub
jle
scas
jb
enter
scas
lea
mov
shll
lahf
pusha
adc
jp
mov
in
or
divl
lcall
ficompl
sbb
mov
mov
cmpsl
mov
sbb
mov
push
jmp
fdivrl
add
ds
jle
outsl
and
mov
mov
out
ret
push
fsubrl
bound
out
js
sbbb
adc
mov
or
scas
pop
loopne
fcmovnb
add
insl
adc
in
pop
bound
xor
insl
mov
inc
ja
and
jnp
xchg
lock
mov
fisttpll
xchg
cwtl
add
sbb
and
shr
aam
mov
shll
inc
mov
rcll
jmp
mov
pusha
mov
xor
aad
rcll
rcr
mov
xor
or
jns
mov
xorb
repnz
repz
push
xchg
mov
bound
sub
lret
sahf
or
mov
mov
pop
pop
repz
dec
dec
inc
inc
push
aam
push
into
sbb
sub
repnz
xor
inc
andb
and
fwait
inc
or
pop
pop
fdivrp
lret
lods
push
add
test
adc
out
sub
and
cmpsb
mov
jl
shll
inc
dec
popa
bound
pop
sub
or
and
xchg
inc
js
push
cmp
mov
cmp
lds
fcoms
xor
fs
push
sahf
mov
cwtl
pop
mov
pop
inc
test
adc
orb
pop
add
inc
enter
push
stc
mov
sahf
sub
dec
std
xchg
xchg
inc
in
mov
cmc
pop
push
add
inc
cmp
cmpb
data16
cmc
call
cmp
gs
xlat
fiadds
inc
inc
push
cmpsb
adc
push
cmp
gs
push
xor
popf
out
pop
fwait
inc
jmp
loopne
mov
or
fisttps
dec
mov
and
pop
enter
inc
adc
adc
cli
das
fldcw
aam
daa
cmp
cmp
sub
add
dec
jl
and
inc
sbb
inc
mov
push
fdivp
int3
push
cli
cmp
adc
sbb
jno
add
xchg
jge
jo
xor
xchg
xor
stc
in
and
add
push
xchg
mov
mov
cwtl
xchg
fisttps
loop
adc
push
rol
faddl
out
enter
mov
mov
sbb
call
cs
lea
cs
add
push
ficompl
fcompl
mov
xor
addb
mov
shll
cmp
arpl
xchg
push
jns
shlb
pop
or
inc
mov
ret
nop
cmpsb
subb
shl
adc
testl
push
inc
cmp
das
sahf
dec
std
mov
or
mov
sub
pop
push
arpl
adc
or
sti
hlt
ljmp
xchg
sbb
mov
dec
mov
xor
ret
adc
fdivrl
jb
repnz
sbb
stos
push
stc
int
movsb
xchg
in
idiv
outsl
mov
movsl
push
and
test
adc
nop
and
icebp
push
mov
pop
lea
dec
movsl
pop
lret
nop
cmp
push
cmp
mulb
shlb
mov
popf
add
push
push
inc
add
cmp
js
and
xchg
cmp
inc
cmp
push
inc
fwait
mov
or
outsl
adc
or
mov
lods
pop
arpl
rolb
movsb
and
subb
inc
cmp
mov
pop
add
xchg
and
pop
ficoml
call
push
add
jl
xchg
or
mov
outsb
mov
pop
push
cmp
fmull
inc
jmp
shrb
inc
cmpsb
js
test
adc
xchg
cmp
mov
cmpsb
inc
decb
inc
loope
rorl
lds
mov
mov
out
push
jnp
test
stos
in
add
les
in
das
lret
pop
push
out
aaa
in
mov
cld
mov
push
arpl
jne
pop
test
out
or
xor
mov
push
jmp
imul
sbb
cmc
cmp
lods
sbb
ljmp
stos
iret
push
pop
imull
mov
pushf
cmpsb
stos
enter
xlat
add
ja
pop
xchg
mov
cmp
mov
xchg
icebp
sub
xor
in
dec
cli
aas
pop
dec
lahf
imul
stos
pop
std
mov
addr16
mov
xchg
pusha
pop
icebp
xchg
cmpsb
and
leave
repnz
or
imul
pop
add
out
dec
mov
pusha
xchg
daa
aad
sbb
stc
cmp
outsl
ss
mov
adc
dec
sub
iret
mov
bound
push
lds
cmp
mov
mov
rclb
cmp
rclb
fistps
or
enter
sbb
out
outsb
mov
mov
imul
cmp
imul
dec
test
push
jg
and
mov
les
es
cld
sbb
out
out
push
in
jb
jp
lcall
xchg
dec
and
push
loopne
cmc
sbbb
divb
roll
in
jmp
andl
jl
jo
pop
cmp
pop
xlat
fdivr
mov
jl
and
pop
mov
sub
aam
jb
push
sub
jp
pop
mov
ret
sbb
rolb
and
mov
push
sti
lds
xor
push
leave
icebp
cmp
mov
sbb
fwait
fwait
imul
rorl
or
and
lahf
sti
jb
push
popa
test
fstl
cli
push
cs
hlt
rcr
popa
imul
cwtl
xor
insl
adc
lret
call
pop
lock
enter
sbb
stos
insb
xchg
cwtl
cs
adc
fidivl
test
and
in
mov
pop
sub
jnp
popf
jecxz
sub
outsl
jnp
dec
or
aad
jg
pop
not
rol
inc
mov
and
jb
ds
jecxz
sbb
das
mov
xor
mov
or
inc
adc
faddp
and
sbb
xchg
mov
lock
bsr
jmp
daa
insl
lods
cmp
and
cmpsb
add
cli
lds
ds
mov
mov
cmp
sub
dec
out
jle
and
aad
push
jbe
loope
xchg
pop
fdivl
jno
inc
push
mov
rcr
roll
lods
dec
push
ss
jbe
lcall
adc
fwait
loopne
pop
adc
pop
sub
lods
dec
cmp
cmc
mov
das
pop
mov
outsb
xor
cmp
xchg
dec
jns
jg
cmp
mov
lahf
cmp
add
push
or
mov
cs
leave
jno
jmp
push
mov
in
out
mov
std
stos
cmpsb
aaa
out
mov
or
mov
das
vpacksswb
mov
and
cmp
sub
gs
cwtl
adc
inc
pop
jbe
push
push
test
shl
dec
jl
mov
fidivrs
mov
inc
es
adc
aas
clc
jp
adc
push
dec
icebp
inc
nop
mov
aad
mov
jne
leave
scas
or
or
fldt
add
mov
inc
or
adc
inc
sbb
jno
and
movsb
push
loopne
shll
sub
mov
cmp
imul
push
aad
movsb
lret
add
dec
cmp
adc
in
dec
data16
xchg
arpl
mov
mov
pop
or
adc
pop
dec
std
addr16
test
sbb
test
mov
cmp
xchg
pop
es
in
cli
or
add
adc
sete
or
pop
and
jno
mov
jle
sarb
mov
stos
push
cmpsb
cmp
pop
icebp
mov
mov
mov
repz
dec
dec
xorps
jl
fmull
jp
pop
pop
cmpb
imul
sbb
push
adc
test
mov
popf
sub
push
lcall
inc
sub
je
leave
pop
iret
xor
mov
clc
mov
dec
xchg
add
mov
mov
leave
mov
and
dec
aam
jae
push
sbb
mov
push
push
xorl
jge
pop
je
mov
icebp
adc
pop
bound
jno
ljmp
sub
sbb
add
cmp
mov
ret
mov
arpl
fistpl
dec
dec
xor
lds
mov
jae
mov
test
xchg
test
scas
nop
lods
into
push
fwait
push
test
fwait
cli
bound
xchg
push
mov
fwait
push
insl
in
and
inc
xchg
jno
sahf
cmpsb
sub
std
and
clc
jecxz
stos
xor
sub
xchg
cmc
cmp
ds
inc
in
xchg
mov
xchg
or
aam
mov
xchg
sahf
mov
pop
into
dec
rol
or
bswap
jbe
out
push
xchg
mov
pop
std
add
insl
or
test
aaa
push
cli
jo
and
xor
call
pop
mov
in
sbb
into
pop
divl
jb
int3
push
inc
fildl
adc
or
call
in
xor
in
jg
std
icebp
sbb
shlb
sti
xor
pop
ja
push
jge
xchg
lcall
add
imul
sbb
mov
outsb
faddl
imulb
or
sub
or
out
test
fistps
mov
add
mov
std
jp
mov
sbb
mov
mov
pop
dec
cmp
test
loope
inc
inc
inc
sahf
mov
jp
jno
mov
add
pop
aas
sub
inc
int
iret
ljmp
shr
pop
push
xchg
repnz
mov
xchg
pop
and
insb
into
push
cmpsb
lods
testb
aas
and
xor
adcl
loop
loope
in
jle
out
mov
add
sub
sti
fdivrs
jnp
push
cmpsl
test
push
iret
and
sbb
imull
nop
lods
or
rcrl
adc
insl
adc
xor
lock
stos
arpl
pop
lods
sub
xor
bound
xchg
sub
fldt
jnp
jnp
loopne
adc
sbb
jae
inc
xchg
pop
mov
and
dec
pop
int
mov
nop
in
mov
cltd
addr16
jp
mov
mov
aas
xchg
sub
dec
push
cmpsl
and
sub
cmp
cmp
push
and
xchg
nop
lods
cwtl
int3
sbb
scas
or
test
or
lahf
mov
fwait
mov
fwait
xor
lds
int3
jne
push
pop
jg
rol
outsl
or
shrl
cwtl
cmpsb
mov
ss
xchg
das
lods
clc
je
and
jne
ret
mov
adc
mov
popa
add
int
out
fadds
mov
stc
xchg
or
dec
outsl
pop
sbb
pop
mov
cmpsl
fwait
or
test
int3
sbb
xchg
xor
jbe
jg
cmp
int3
add
mov
sbb
xchg
test
pop
pop
sbb
sbb
xchg
or
xchg
mov
cmp
ret
hlt
mov
scas
les
jp
imull
sub
roll
xor
push
inc
lods
cmpsl
into
mov
rorb
or
or
dec
ljmp
aad
mov
in
and
mov
push
enter
fsubr
cmpsl
mov
lahf
decb
out
inc
pop
sbbb
jbe
sub
ret
pushf
popa
pop
add
or
xorb
pushl
stc
stc
fdivr
mov
in
xchg
cmpsb
inc
xor
cli
test
int
inc
inc
push
jns
push
sti
mov
fcomps
xchg
sahf
xor
push
sub
mov
das
and
inc
mov
push
clc
test
bound
mov
test
inc
mov
mov
dec
inc
mov
fisttpl
mov
call
add
jns
adc
or
xlat
push
push
in
mov
mov
call
push
aaa
flds
inc
xor
ret
lods
ret
es
mov
mov
scas
xchg
insb
es
cmp
xchg
cmp
outsl
scas
int3
cmp
std
jecxz
mov
rcll
daa
inc
mov
imul
inc
pop
pop
subl
les
jne
jg
stos
test
or
or
stc
sarb
arpl
push
das
popa
inc
xchg
push
mov
or
or
inc
popa
fisttpll
inc
mov
dec
js
jne
lods
leave
icebp
sub
add
in
lahf
inc
fcmovbe
lcall
jno
pushf
insb
pop
cmc
fidivs
bound
repnz
pop
xchg
pop
es
inc
inc
subb
clc
sbb
sub
in
in
jnp
daa
mov
pop
movsb
gs
das
arpl
sub
sbb
lcall
jp
in
stc
xchg
std
test
adc
jb
push
sbb
std
pop
and
sahf
xchg
test
cmp
enter
dec
mov
mov
lret
fisubrs
mov
loopne
or
imul
lcall
dec
sub
dec
fstps
into
sub
adc
lods
xchg
jle
mov
in
loopne
cmp
cmp
stos
ds
scas
call
and
inc
bound
sub
mov
ja
xchg
sti
out
ljmp
fs
ds
xor
xchg
lock
jo
aaa
xchg
jp
sub
and
dec
sbb
int3
arpl
mov
bound
mov
xor
es
aaa
dec
popl
jmp
sub
push
jne
jge
decl
loop
rcr
insb
mov
int3
mov
imul
push
rolb
sbb
mov
mov
jo
inc
jl
mov
and
push
bound
or
push
repnz
jmp
push
pushf
jmp
and
jl
sbb
pop
push
jge
lods
inc
dec
iret
div
ss
inc
gs
test
sub
push
sbb
enter
test
outsl
out
aaa
mov
dec
mov
cltd
sbb
sbb
sbb
cltd
filds
ss
movsb
into
outsl
xchg
add
mov
jnp
adc
je
rcr
mulb
push
in
push
ret
push
adc
inc
cwtl
imul
inc
out
mov
andb
pop
mov
and
push
fldenv
pop
xchg
sahf
loope
sub
dec
icebp
xchg
pop
adc
mov
insb
add
addb
repz
mov
push
or
sub
pop
sbb
imul
jmp
addr16
mov
fsin
inc
push
icebp
insl
lret
outsl
int3
mov
ds
inc
in
sti
lock
cwtl
call
pop
fstpt
pushf
dec
sbb
pusha
sbb
scas
test
lods
lods
push
inc
sub
or
imul
mov
mov
jl
xlat
or
in
cltd
nop
or
jg
lods
mov
or
loopne
inc
stos
xor
lahf
mov
xor
cmpb
mov
pop
mov
movsl
pusha
ret
cmp
jg
mov
push
insl
pop
scas
test
into
xor
mov
lea
and
icebp
lret
mov
out
ret
sub
push
scas
loope
imul
aam
out
in
mov
xor
push
repz
nop
icebp
mov
arpl
mov
in
cmpsb
jno
and
int
ret
sbb
loop
adc
stos
sub
pop
inc
sbb
dec
cmp
add
sub
clc
arpl
push
into
mov
xor
ret
loopne
xchg
pop
in
into
rcrb
or
loope
inc
sarb
imull
push
addl
insb
sti
imul
adc
lods
lcall
xchg
cmpsl
fnsave
dec
leave
aam
mov
cmc
cmp
dec
std
test
mov
pop
fadd
loop
sbb
push
mov
xchg
mov
jp
or
inc
outsl
movsb
xor
sbb
cld
das
int
push
inc
cmp
cmpsl
shrb
rolb
fdivs
int
je
rcrl
cmp
sbb
and
push
push
xor
fistps
sub
inc
stc
nop
add
pushf
pushf
mov
and
or
cmpsl
xchg
add
mov
xor
decl
xchg
ss
pop
adc
jg
sbb
ljmp
cmpsl
mov
dec
fwait
dec
je
sar
mov
aad
xchg
popf
sub
pop
sbb
push
and
neg
cmp
cmc
dec
push
jl
into
and
pop
outsl
imul
jno
or
mov
daa
sbb
inc
das
push
notl
ficoml
dec
adc
insb
cmp
jmp
xchg
add
aad
mov
mov
and
xorb
nop
jmp
cli
mov
mov
mov
jno
push
test
sub
mov
pushf
dec
mov
filds
add
fstpt
ljmp
cmpsl
sub
stos
popa
pop
rclb
cs
popa
dec
rcrl
movsl
lret
loope
leave
xchg
dec
stc
shl
push
sti
mov
dec
inc
sbb
pop
push
imul
aam
or
jge
xchg
movsl
dec
in
xchg
cmpsb
nop
fnsave
lret
mov
sbb
sbb
push
loop
sbb
icebp
clc
dec
sub
sub
push
sub
fs
dec
push
xchg
pop
adc
mov
mov
adc
cmc
fldcw
or
sbb
dec
cmp
mov
xor
in
stos
or
push
jl
call
out
scas
mov
pop
jle
fwait
movsl
in
xchg
xchg
xchg
add
mov
insb
cmc
rclb
or
fstl
cwtl
lcall
or
test
ss
mov
fucomip
sub
mov
inc
ror
cmp
loop
and
lock
jo
lods
pop
mov
dec
mov
inc
jno
xor
das
and
jns
sub
lea
xor
adc
mov
mov
scas
cld
test
sbb
xor
push
xor
mov
cmp
sahf
add
les
pop
adc
aaa
enter
int3
shrl
xchg
test
insl
fwait
mov
jp
dec
xchg
push
sub
xlat
xchg
sbb
sub
pop
pop
xorl
out
fwait
xchg
pop
jle
fdiv
mov
pushf
les
insl
dec
dec
jno
adc
xor
pushw
jbe
dec
sbb
push
or
pushw
push
popf
push
data16
mov
out
push
add
xlat
inc
sub
jl
push
adc
pushf
faddp
dec
lahf
push
js
movsb
add
sub
adc
rorb
nop
enter
pop
mov
scas
das
out
stos
pop
inc
mov
mov
dec
add
xchg
xchg
dec
das
gs
xchg
fs
sbb
cli
repz
in
mov
mov
ds
dec
push
addr16
arpl
sahf
imul
add
jae
mov
addr16
repz
sbb
xor
insb
lea
jg
mov
mov
scas
xchg
hlt
iret
cmpsb
inc
xchg
push
nop
cld
jb
mov
pop
sbb
fs
mov
jb
in
or
sbb
lea
repnz
cmpl
lahf
fisttps
fwait
or
daa
dec
push
and
lret
and
mov
push
or
je
setno
ret
call
fwait
je
mov
xchg
rcrb
mov
je
and
pop
jmp
scas
pop
mov
fwait
jg
outsb
cmpsl
icebp
adc
push
and
fidivrl
test
loope
pop
cs
jmp
mov
aam
ljmp
mov
sti
adcl
stc
stc
sub
dec
pop
test
fwait
inc
cmp
jmp
pop
mov
cld
dec
push
xor
in
sub
in
mov
notb
addr16
test
xor
fs
sub
das
ret
pop
fidivrl
js
inc
repz
repz
inc
pop
movsb
push
arpl
sbb
jno
loopne
scas
push
add
rcr
jae
dec
xor
add
cmp
aas
dec
lock
dec
push
mov
imul
in
cmp
mov
lods
jno
and
int3
dec
adc
outsb
mov
test
xchg
inc
je
std
sub
dec
shl
mov
out
loop
push
fildl
sub
shlb
test
in
fsts
ficoml
faddl
adc
jns
fstpt
mov
cmp
bound
pop
lret
adc
mov
push
cld
gs
pop
xchg
cmp
mov
jmp
bound
dec
clc
cli
in
rolb
jae
and
scas
add
inc
lods
lahf
cmp
or
rcll
xor
mov
enter
imul
cltd
lods
out
push
aam
jle
xor
dec
dec
sub
adc
ljmp
inc
leave
pop
push
add
mov
fisttpll
sti
cmp
xor
test
fcoms
stos
out
ss
xchg
inc
push
call
or
xchg
pushf
adc
sub
xor
pop
cmp
adc
cs
dec
inc
jecxz
xor
mov
data16
lods
das
in
insl
les
aam
pusha
shll
dec
cmc
jnp
xor
movsl
pop
pop
adc
dec
hlt
and
dec
sahf
arpl
push
push
add
cmp
mov
in
roll
cli
pop
in
nop
push
icebp
push
sbb
out
or
xchg
ret
dec
ss
mov
or
mov
das
hlt
je
pop
inc
fsub
push
out
push
and
lret
cld
mov
inc
sbb
sbb
mov
sub
xchg
xlat
mov
push
gs
pop
in
cmpsl
sbb
repz
lods
add
push
call
aad
or
mov
adc
adc
icebp
dec
sub
add
mov
or
inc
add
and
imul
and
jg
test
fnstenv
leave
mov
jbe
push
mov
dec
mov
iret
pushf
bound
push
repnz
test
imul
mov
pusha
inc
sbb
jecxz
dec
sub
mov
add
pop
mov
and
jo
mov
or
in
mov
add
dec
cmpsb
test
and
jne
push
in
xor
ret
mov
jmp
ljmp
insb
ss
xchg
fldcw
andl
in
xor
test
inc
pop
test
jbe
or
and
stos
fildl
lea
sbb
fnstenv
les
rclb
in
add
and
jns
sbbl
subl
mov
inc
ret
lea
mov
sub
inc
lods
inc
pop
cmp
adc
ds
inc
add
add
test
repnz
pushf
xorb
inc
jp
adc
das
push
mov
add
push
dec
mov
fisubl
gs
pop
cltd
addb
jge
int
jecxz
sahf
mov
fildll
stc
cs
mov
cmp
mov
pop
push
add
test
incb
pop
mov
loop
rolb
ret
call
sbb
mov
adcl
lods
test
jae
outsb
test
xchg
loopne
sub
cmp
push
mov
rorl
adc
xor
xor
fstpt
pop
and
pop
inc
lock
mov
or
ss
or
and
xchg
ret
arpl
mov
mov
mov
fsub
cmpsb
push
fyl2xp1
enter
aaa
shl
jb
movsl
and
pop
dec
lods
out
push
ret
cmc
je
adc
cmc
pop
enter
movsl
mov
jae
insl
mov
xor
adc
mov
scas
fsubr
lahf
test
xor
sub
sbb
shl
mov
mov
cmpsb
dec
fadds
arpl
mov
adc
add
xor
mov
jbe
nop
inc
add
xor
fucomip
xlat
mov
addr16
andw
jo
rcl
imul
pop
xchg
sbb
ret
int3
cmc
insb
leave
stos
repz
inc
xchg
inc
lret
dec
push
adc
mov
shrl
inc
adc
push
add
sbb
cmp
pop
cltd
mov
insb
pop
pusha
insb
in
mov
mov
push
es
outsl
push
push
scas
xor
insl
insl
adc
dec
stos
fisttpl
lretw
mov
clc
lock
push
xor
orb
inc
xor
imul
jl
loope
or
push
push
dec
mov
pusha
mov
daa
dec
mov
dec
mov
xchg
mulb
cmpsl
fstpt
jne
dec
call
push
sbb
scas
addb
or
scas
call
adc
cmpb
call
mov
or
lahf
and
cmpb
pusha
fbld
scas
ret
pop
sub
aam
cmp
cs
out
jbe
sub
fwait
adc
cmp
cs
shr
outsb
ja
leave
mov
mov
ss
filds
adc
data16
cld
jecxz
mov
cmp
cmp
add
sub
jb
xchg
mov
aas
inc
cmpb
es
jge
cmp
adc
ljmp
andb
shr
incl
adc
in
icebp
mov
jge
or
mov
lahf
repnz
cmp
lods
shll
int3
data16
or
and
and
push
jl
loope
ret
xchg
call
cmp
sub
jb
dec
les
xchg
lock
cwtl
add
inc
mov
fcoml
cmp
mov
sub
pop
lea
loope
pop
fisubl
pop
hlt
sub
push
lahf
loop
xor
ss
popa
and
cmp
ficoms
clc
add
clc
test
or
inc
das
and
or
mov
mov
andb
insb
int3
arpl
mov
sbb
mov
int
inc
cltd
or
or
adc
and
mov
jg
in
ret
bound
adcl
clc
in
addr16
mov
mov
push
push
sub
xor
sub
mov
add
pop
int
repnz
out
je
adc
test
mov
adc
add
dec
test
sbb
pop
leave
mov
sbb
add
adc
lahf
pop
push
mov
pop
sub
push
push
inc
jne
xchg
jbe
cmp
scas
ja
lcall
xor
mov
xlat
and
addr16
mov
loop
xchg
mov
mov
jecxz
inc
add
mov
test
icebp
and
inc
mov
and
cmp
aas
cmp
adc
xchg
jns
push
xchg
lret
cmp
push
mov
xor
mov
and
mov
xor
lock
pop
lret
adc
dec
mov
gs
xchg
push
pop
lret
inc
sub
jmp
sbb
iret
lods
xchg
jo
out
jl
lods
pushf
fldcw
test
sub
popf
inc
jecxz
jae
and
sti
mov
sbb
xor
movsb
jo
adcb
and
xlat
xchg
in
add
sub
lea
inc
sub
dec
stos
cmp
shlb
and
cltd
test
xorl
test
cs
dec
fcompl
out
push
lods
std
cmp
nop
add
clc
sub
inc
or
push
in
sahf
pop
xchg
xlat
loopne
cmpsl
cld
or
or
or
mov
mov
or
adc
pop
and
insl
shrb
movsb
adc
clc
or
sbb
movsb
cwtl
int3
out
cmp
rorb
mov
mov
add
mov
ret
xor
mov
pop
iret
mov
xchg
dec
arpl
add
xchg
mov
inc
out
mov
mov
insb
jnp
xchg
lock
or
jecxz
lea
xchg
mov
or
push
int3
xchg
xchg
sbb
arpl
inc
outsl
ror
add
aad
or
lret
outsl
xchg
gs
test
xlat
jns
push
addr16
or
or
scas
inc
push
jle
arpl
cmpsb
fwait
stc
sub
pop
sub
push
inc
push
xchg
inc
in
int3
das
das
push
cmp
jg
jb
mov
out
fiadds
jg
xchg
jae
mov
lahf
testb
pop
sbb
sub
xor
push
jb
xchg
rorb
jnp
shll
loope
xor
mov
pop
jo
out
pop
adc
mov
sbb
adc
fnstsw
push
adc
imul
sbb
and
add
cwtl
mov
inc
adc
mov
jmp
pusha
loopne
fisttpl
pop
out
test
dec
xchg
jns
ss
or
scas
mov
jl
outsl
mov
xchg
mov
in
jns
mov
jae
inc
pop
push
pop
sar
popf
in
mov
test
cli
cmc
or
clc
push
ds
mov
jb
pop
aaa
out
je
adc
je
add
jg
jle
inc
mov
fnstsw
std
pop
sub
imulb
shlb
seta
jge
lock
imull
jbe
loopne
sar
dec
jg
fnsave
cmp
mov
mov
sub
testl
scas
outsl
lock
cli
cmp
mov
jo
dec
xor
int3
jne
int
stc
xor
mov
lcall
mov
sub
testb
sub
dec
ret
jmp
fisubrl
jecxz
push
jg
and
test
movsl
xchg
sbb
hlt
inc
pop
aaa
sbb
adc
in
rcrb
mov
xor
aaa
mov
fsubs
iret
lods
test
push
and
sub
sub
sahf
ret
shrb
mov
leave
mov
scas
sahf
insl
xchg
mov
push
aad
movsl
mov
stos
inc
xchg
cmp
mov
add
orb
fistpl
iret
push
sti
hlt
fisttps
es
mov
sti
fwait
xor
adc
mov
xchg
mov
jo
sti
inc
push
adc
push
push
shl
jb
test
push
enter
xor
pop
cmp
stc
dec
jecxz
leave
jecxz
int3
dec
test
mov
and
sub
xchg
pop
fstpl
inc
les
subb
loopne
frstor
cmp
mov
or
xchg
mov
sub
iret
repnz
fwait
push
mov
addr16
jb
movsb
mov
cmp
sbb
imul
jo
in
mov
add
rcl
push
sub
out
jns
pop
int
cmp
fwait
inc
sub
jnp
sub
into
pop
pop
adc
aad
add
cmp
mov
sbb
add
mov
ja
subb
xor
jnp
pop
and
arpl
pop
sub
scas
clc
pop
push
jle
dec
lahf
icebp
xor
ficomps
mov
mov
push
or
lret
adc
movsl
std
mull
adc
shll
xchg
or
sar
fadds
mov
outsb
xchg
mov
popf
mov
cli
imul
jle
imul
mov
inc
mov
lods
mov
mov
cmpsb
rcrb
mov
loopne
ljmp
inc
cmp
ficompl
ss
and
or
je
cmp
daa
xchg
lret
sub
dec
das
jno
aas
xor
pushf
mov
add
enter
jne
ja
ds
hlt
js
idivl
pop
sti
pop
dec
out
popl
aas
enter
movsl
shrl
adc
ret
push
or
push
jge
mov
movsl
adc
xor
mov
adc
cwtl
or
loope
inc
mov
daa
xchg
js
xchg
rol
shl
gs
loop
mull
jb
cmp
adc
je
lea
fimull
popf
inc
out
sub
shlb
imul
mov
fldcw
das
cmc
ljmp
ss
call
xchg
icebp
xchg
frndint
repz
add
lcall
dec
lret
cmp
xor
pop
jge
movsl
xchg
nop
fiaddl
cmpsl
pop
dec
fnstcw
ljmp
std
outsl
scas
adc
fnstcw
pushf
xor
add
cmp
insb
pop
sbbb
out
pushf
mov
decb
decl
in
and
or
adc
out
push
ja
inc
das
addr16
pusha
cmc
dec
mov
fnstsw
pushf
lret
xchg
mov
mov
insb
mov
push
jp
jg
mov
jb
cmc
inc
mov
mov
adc
clc
into
xor
pop
jbe
lds
push
in
fdivl
int
or
push
mov
cmc
stos
cmc
push
scas
push
adc
xchg
adc
jbe
mov
loop
and
jo
mov
add
jmp
fldenv
sub
mov
jle
rorl
xchg
imul
popa
xchg
movsl
in
inc
push
sbb
mov
shrl
cmp
bsf
mov
dec
xor
or
inc
ret
imul
mov
cld
inc
ljmp
push
pop
inc
xchg
and
sbb
sbb
test
hlt
adc
sbb
test
pop
lahf
cmp
jp
movb
scas
and
xchg
sub
loop
fimull
imul
call
test
ljmp
jae
push
jbe
fmuls
loop
sarl
fwait
repnz
push
dec
scas
inc
adcb
add
lods
imul
xchg
test
sbb
or
loope
les
cmp
fidivl
loop
sub
sahf
aas
pop
fbstp
mov
xor
insl
testl
mov
xchg
dec
mov
xchg
mov
std
outsl
add
insb
out
test
xchg
icebp
outsl
lods
aas
mov
mov
mov
call
arpl
inc
sbb
push
mov
mov
xor
iret
aad
sub
mul
push
or
jg
dec
jae
repz
jo
mov
or
arpl
jne
jnp
sbb
add
je
adc
popf
leave
cwtl
jg
or
shll
std
fwait
cmpsl
mov
rol
stc
dec
and
jne
fwait
sbb
mov
testl
cmc
fidivl
cltd
rclb
jbe
mov
dec
gs
test
imul
pop
jg
jns
adc
cltd
adc
inc
repnz
sbb
dec
and
sbb
or
ret
insl
inc
lods
ret
sub
repz
add
inc
roll
lea
mov
dec
rcrb
movsb
loopne
adc
adc
dec
clc
mov
gs
jo
add
mov
fisubrl
xor
fisttpll
pop
cmp
jo
mov
ret
fwait
lods
adc
adc
jmp
jmp
fidivs
push
imul
iret
in
rcrl
bound
xor
cmp
mov
xor
cmpsl
outsb
clc
xor
popf
cmp
movsl
test
jmp
ljmp
cmp
stos
mov
cmp
jne
aas
xlat
rol
pushf
mov
shr
leave
xchg
rcrl
in
rolb
in
andb
int3
into
adc
xor
lahf
fsubs
out
mov
lahf
jne
sub
dec
stc
popf
dec
jo
mov
int
jb
call
imul
stos
sub
andb
xor
rcrl
dec
int3
fistpl
into
lea
aaa
loopne
ljmp
adc
inc
mov
xor
icebp
lock
and
cmc
add
lods
repz
leave
xchg
pop
jo
mov
movsb
xchg
and
out
mov
fidivl
test
sub
pop
mov
xlat
xchg
aam
xchg
scas
pop
pop
std
es
xor
mov
cs
int
sbb
insb
xchg
es
cli
jmp
push
or
dec
fiaddl
and
or
jb
cmp
xchg
adc
ljmp
sti
and
jnp
insb
in
call
mov
pop
addr16
sbb
cpuid
outsl
xlat
sbb
test
jl
roll
lods
fld
xchg
cmp
insl
sbb
rcrl
pop
push
push
lret
testb
jb
ja
xchg
movsb
rcrl
cmc
repz
inc
pop
lods
outsl
jle
mov
scas
in
pop
pop
out
gs
daa
movsl
int3
nop
push
push
mov
psubb
pushf
push
lock
inc
push
iret
push
sub
and
out
or
adc
cmp
mov
call
mov
lcall
out
stos
jbe
mov
mov
mov
sbb
inc
nop
cmpsb
insl
mov
test
les
mov
cmp
adc
cmp
add
jb
test
out
mov
insb
pop
and
loop
mov
repnz
arpl
ret
lahf
xor
cwtl
mov
fmull
imulb
aaa
xchg
nop
in
lods
push
nop
mov
and
in
enter
mov
adc
jecxz
dec
sbb
arpl
sahf
out
scas
data16
xchg
aad
int3
pop
cld
mov
dec
test
test
lahf
mov
dec
inc
or
mov
mov
cmpsl
enter
cmp
pop
xchg
loopne
dec
jecxz
out
xor
fmuls
mov
pop
aam
fisubs
mov
xor
bound
aaa
scas
xor
test
ds
mov
xlat
stos
inc
imul
arpl
mov
lret
gs
pushf
inc
rolb
adc
xchg
leave
inc
shrl
mov
push
jb
xor
aaa
ss
cmc
push
ds
fucom
insb
push
imul
cld
xchg
mov
jmp
rcll
js
lods
je
jp
adc
mov
adc
fisubrl
inc
fisubrl
fdivs
and
call
jns
jecxz
lods
ljmp
icebp
out
js
sub
outsl
test
cs
loope
testb
push
xor
pop
dec
fsubrp
push
jno
lds
inc
stc
push
xchg
popf
push
bt
lahf
jg
sbb
adc
sbb
jle
aad
fsts
mov
dec
ret
or
mov
bswap
mov
pop
shrb
push
mov
mov
shlb
js
jbe
movsl
push
mov
sub
les
xlat
pop
push
cmp
xchg
xchg
out
push
dec
xor
xor
pop
loope
adc
gs
ror
pop
rcll
fstl
arpl
ljmp
sti
lds
jmp
test
int3
pop
fildll
arpl
push
xchg
lcall
gs
es
jno
movsb
xchg
popf
insb
cmp
pusha
nop
dec
pop
mov
inc
cmp
shrl
and
loopne
xor
sub
and
rcr
mov
dec
dec
fisubrs
inc
movsl
arpl
addr16
push
jnp
fidivrl
sbb
add
into
xchg
rorl
aaa
xor
adc
out
sbb
clc
push
test
lahf
cmp
bnd
sub
sub
add
mov
jnp
movsb
stos
loop
out
sbb
adc
out
es
push
aam
push
iret
pusha
adc
xchg
push
or
mov
add
jle
lock
pop
sti
mov
sbb
dec
out
adcl
mov
lahf
or
sbb
or
add
and
sbb
mov
sbb
cmp
inc
cmpsl
lret
mov
and
rcrb
mov
mov
test
enter
sub
inc
stc
sub
mov
push
pop
inc
cmp
leave
sub
add
mov
scas
cmp
ds
sub
fidivrl
jmp
aas
push
mov
ja
xor
cltd
add
jmp
cmpsl
in
pop
jl
pop
fwait
mov
into
or
out
jns
lods
mov
ljmp
xor
jbe
lds
add
or
push
outsb
outsb
inc
cmp
xor
into
fdivs
cmp
pop
jmp
scas
mov
fucomi
push
std
mov
sarl
mov
pop
add
leave
enter
popa
cmp
ds
clc
in
stos
sbb
sahf
xchg
mov
mulb
imul
in
jbe
lcall
insb
mov
sbbb
ss
les
int3
pop
mov
or
ds
dec
out
cmpsb
stos
testb
lahf
lcall
roll
mov
data16
mov
cmc
pop
and
ficomps
inc
sbb
lret
inc
nop
inc
es
ret
jge
clc
ds
imul
leave
mov
jne
in
xor
mov
outsb
push
movsb
mov
sub
jne
popf
loope
push
push
mov
add
sub
pop
sti
out
adc
and
insl
jle
ljmp
sbb
subb
fcmovnu
jae
xor
lds
jns
cs
daa
sbb
pop
neg
cmpsl
aad
mov
aaa
out
dec
mov
jp
mov
adc
mov
add
mov
cmp
or
xor
mov
sbb
jb
out
aaa
sub
or
add
push
out
xchg
cmp
adc
sub
cmp
lret
dec
xchg
mov
lcall
fcomps
dec
fdivl
jge
push
push
push
rorb
insb
push
xor
fldcw
pop
in
fs
popa
inc
mov
addr16
pop
in
sti
inc
psrlw
jmp
push
loopne
sbb
outsb
mov
add
mov
rolb
xchg
xor
mov
mov
mov
jecxz
sub
xlat
add
roll
sub
sbb
cmp
test
mov
loopne
into
aaa
les
fwait
sbb
andl
cs
sbb
add
jl
insb
in
inc
cmp
pop
sahf
aaa
and
insb
subl
or
call
pop
das
repz
inc
loope
andl
mov
scas
idivb
pop
loope
sbb
pop
inc
mov
pop
inc
or
xor
mov
mov
dec
and
sub
dec
decl
or
cwtl
roll
cmpl
sub
popf
lods
cmp
movsl
lods
push
dec
push
xor
loopne
dec
mov
sbb
sti
pcmpeqd
jmp
push
fisttpll
adc
orl
mov
lcall
cmp
dec
icebp
jl
loop
jbe
inc
aad
stos
iret
cmp
shl
mov
testb
mov
cltd
mov
lea
inc
inc
stos
iret
inc
fstpt
sti
int
xchg
fwait
rcll
aam
adc
int
xor
leave
repz
jecxz
inc
out
je
movsl
stos
xchg
sarb
dec
lods
lock
out
call
into
mov
clc
push
mov
push
pop
pusha
imul
dec
jecxz
add
rcl
insb
cli
jbe
sub
sbb
adc
push
pusha
cmpb
dec
or
movsl
outsl
adc
sbb
sub
xchg
lcall
xor
cmp
push
adc
shlb
add
arpl
outsb
jno
dec
and
xor
in
jo
sbb
std
cmp
stos
mov
cltd
sub
cwtl
jno
jecxz
subl
push
imul
mov
push
movsl
xchg
cmp
adc
xor
mov
aad
adc
sarb
push
mulb
movb
imul
fcomi
int3
xor
adc
lret
imul
push
jno
mov
sbb
xor
addr16
rclb
pop
cmp
stos
push
or
into
daa
inc
jo
xlat
movsw
cmp
shl
mov
clc
inc
imul
shr
std
dec
gs
dec
adc
subb
dec
adc
gs
in
stos
bound
int
inc
dec
mov
or
cmp
pop
cmpsb
adc
mov
ret
jns
lods
sub
jo
repnz
pop
xor
mov
ja
xchg
adc
pop
cwtl
stos
inc
pop
in
cmpsl
add
ja
insb
icebp
mov
and
orb
clc
xchg
add
push
into
pop
ss
add
sub
mov
mov
xor
cmpsl
das
movsl
or
lret
dec
mov
sub
push
gs
inc
pop
xorb
adc
pop
mov
je
mov
mov
leave
xchg
jg
push
in
inc
jns
sahf
add
and
lcall
jmp
mov
stos
and
addb
cmp
cwtl
lods
push
and
mov
and
add
addl
scas
lahf
add
jg
imul
lods
sahf
mov
sub
sub
dec
mov
aas
pushf
rcll
or
fistl
sbb
inc
mov
lahf
jne
pop
aas
enter
fs
cli
cmp
int3
lock
cltd
adc
inc
insb
std
xchg
das
cwtl
mov
sub
out
pop
push
xor
cmpsb
pop
repnz
scas
movsb
fs
inc
dec
jae
repz
lock
aaa
pop
loop
or
sbb
inc
popa
sub
scas
add
dec
jg
cmp
jo
jmp
mov
out
cltd
or
cmpsl
adc
xor
jmp
out
pushf
popl
dec
xor
incl
incb
jg
mov
mov
mov
aad
jbe
das
aam
jle
icebp
push
jo
sub
dec
popf
ret
cld
cld
inc
std
mov
pop
js
mov
cmp
xchg
aad
inc
adc
inc
xchg
loopne
jmp
cmpsb
add
xchg
scas
lret
clc
fdivr
les
jo
and
mov
outsl
mov
fisubrs
push
pop
fimull
aas
ret
jmp
movsl
loope
lds
outsl
aas
ljmp
test
cli
sahf
ret
jne
pop
jl
dec
loop
in
cwtl
mov
or
dec
mov
lods
test
jb
mov
cmpsl
mov
loopne
adc
sub
arpl
movsb
repnz
out
push
roll
mov
mov
cltd
in
add
lret
add
scas
test
sti
clc
pop
jmp
push
cmp
pop
or
popf
js
sbb
push
pop
out
mov
mov
stc
mov
adc
stos
adc
aam
jne
into
push
xor
mov
push
shll
cwtl
lods
push
jge
inc
mov
repz
mov
shr
mov
dec
xor
push
pop
xchg
xchg
jns
pop
push
inc
push
cwtl
mov
add
mov
adc
iret
dec
mov
mov
mov
call
add
lret
and
test
aam
cmpsl
dec
lock
gs
cltd
xor
adc
pop
xchg
pop
call
push
ljmp
mov
xor
movl
mov
aad
lea
xor
push
rorl
xor
bound
and
clc
loop
sbb
mov
test
hlt
or
aad
and
pop
mov
test
mov
mov
aas
sub
int3
sti
int3
pop
mov
or
xchg
jge
dec
mov
cmp
adc
call
push
inc
adc
jne
pusha
xor
jg
dec
pop
pop
cmp
push
sbbl
jmp
push
cltd
fcompl
push
pop
jg
js
sbb
push
mov
xchg
mov
jo
mov
aad
and
jmp
mov
pop
mov
loope
add
cmpsb
and
in
pop
loop
sti
cmp
mov
sub
xchg
fidivl
outsb
add
call
cld
mov
ret
mov
cltd
sub
lods
jae
jnp
insb
shlb
xchg
mov
cmp
daa
cwtl
fisubrs
fs
xchg
cmp
add
mov
xlat
jbe
mov
jo
bound
loop
stos
scas
divb
dec
add
inc
stos
les
mov
or
lea
adc
and
mov
mov
mov
fcomps
mov
inc
sbb
and
inc
nop
mov
sbb
imul
push
gs
popa
repz
dec
mov
push
or
mov
leave
push
mov
clc
addr16
outsb
jbe
dec
and
out
pop
mov
mov
imul
dec
adc
in
xlat
cli
mov
xchg
cs
insl
inc
pop
popf
jne
push
xlat
les
outsb
sbb
ljmp
stos
push
push
mov
mov
js
loope
mov
imul
add
adc
mov
clc
test
sbb
cmp
repnz
popa
loope
mov
push
stos
dec
pop
andb
mov
push
scas
push
hlt
test
pop
sub
out
mov
in
or
aas
js
sub
adc
jo
cmpl
push
pop
sbb
mov
movsb
sahf
or
into
pop
aas
sbb
popa
insl
sbb
mov
sbb
sbb
pop
dec
into
mov
into
adc
or
data16
outsb
xchg
jmp
mov
js
adc
enter
mov
cmc
out
add
add
pop
lgs
insl
sahf
sbb
clc
xchg
lock
mov
sahf
pusha
mov
push
mov
subb
popf
jp
xor
push
inc
mov
sub
cmovo
cwtl
aam
lods
mov
roll
fists
push
dec
popf
inc
mov
or
movsl
aaa
sbb
fcoml
jmp
dec
test
nop
xchg
mov
aad
loop
jmp
out
push
or
jnp
cmp
cmp
cmp
repnz
adc
add
jb
adc
lods
scas
and
imul
aam
loope
jnp
sbb
adc
mov
jle
int
testl
das
or
fistps
insb
mov
cs
imul
pop
push
and
inc
iret
sarb
outsb
mov
push
in
pushf
dec
out
jb
movsl
addb
and
int
shr
mov
mov
out
xchg
push
add
ret
jmp
sub
dec
andb
mov
push
fmuls
ds
dec
loope
sbb
test
stos
fcomip
scas
dec
inc
in
push
mov
pop
push
fildll
sbb
dec
scas
outsb
mov
jo
inc
jecxz
or
int
les
adc
jo
xor
hlt
repz
call
lahf
call
jl
and
roll
or
jg
mov
or
sti
sti
das
cmp
rorl
nop
push
xchg
jp
xchg
rol
xchg
movsb
loope
jmp
mov
pop
mov
cmp
movsb
lods
mov
lret
and
sbb
scas
lea
cmp
stos
insl
and
leave
push
jae
addr16
jmp
int3
xchg
test
dec
mov
sub
mov
xlat
mov
push
ljmp
push
test
mov
in
adcl
shl
loop
mov
push
adc
mov
out
jg
pop
dec
pop
xor
pop
gs
adc
xchg
daa
dec
lods
pop
sahf
dec
cmp
mov
arpl
dec
xchg
ret
ret
xchg
add
out
adc
pop
sub
push
sbb
push
push
sahf
xchg
loope
cmc
xor
xor
shl
stos
loop
mov
ja
cli
out
push
clc
cs
push
scas
ds
pop
daa
sbb
jl
gs
mov
test
push
leave
xchg
jle
or
mov
jnp
dec
mov
push
add
jl
mov
data16
outsb
scas
cli
sub
clc
lock
mov
mov
or
pop
stos
mov
sbb
and
mov
icebp
jnp
and
icebp
dec
dec
das
and
test
add
mov
xor
mov
push
into
mov
dec
or
out
enter
loop
add
test
xorl
xchg
dec
xchg
push
loope
inc
push
movsl
jnp
fdivrs
cltd
push
and
mov
sub
adc
ret
xchg
xchg
or
inc
mov
out
push
ret
dec
pop
jb
daa
std
dec
arpl
js
add
rcrl
repz
mov
adc
lcall
add
fsubrs
imul
xchg
or
into
mov
lret
pop
jl
out
push
inc
push
jmp
mov
outsb
pop
push
int3
js
test
mov
xor
pushf
lahf
push
mov
cs
jo
icebp
test
and
and
cltd
jno
mov
adc
xchg
or
xor
ja
xchg
adc
mov
lock
cmp
fimuls
sbb
loopne
cld
add
cld
sub
adc
cmp
bnd
pop
faddp
mov
sti
fwait
icebp
call
mov
xchg
scas
arpl
mov
xor
popa
adc
repnz
dec
pushf
fsubrs
pop
pop
mov
push
stos
dec
xor
out
inc
push
xchg
sub
sub
and
pop
call
add
mov
add
addb
add
jmp
xor
add
push
imul
inc
push
dec
insb
fbstp
xchg
push
lret
push
add
xor
adcl
pop
push
jmp
inc
mov
rcll
inc
pop
ret
idiv
popf
test
xor
or
in
xchg
mov
nop
add
mov
inc
dec
mov
adcl
xchg
outsb
and
iret
cmp
jae
mov
pop
out
stc
out
stc
stos
aad
jecxz
xchg
insl
mov
sub
or
loope
fisubl
push
xchg
pusha
fnstcw
add
repz
aaa
sbb
xor
insl
xor
push
int3
dec
fnstsw
ja
mov
xor
push
hlt
cwtl
rorb
daa
cmpsb
and
lods
inc
add
leave
or
in
xlat
sbb
jmp
inc
repz
inc
andb
mov
cmpsb
sbb
xorb
jecxz
xlat
xchg
movsl
cmovnp
ljmp
lahf
mov
pop
in
jecxz
mov
nop
inc
mov
mov
mov
adc
outsb
enter
inc
jno
jmp
adcl
inc
mov
arpl
push
sti
add
inc
xor
das
xchg
lods
mov
sbb
insb
cmp
jnp
aam
orb
sub
fisubs
lods
or
lret
je
mov
or
sahf
rcrb
mov
add
push
push
jno
call
mov
jge
jbe
push
mov
pop
cmpsl
mov
pusha
fstpl
add
sub
in
and
xor
jecxz
mov
cmp
pop
push
jmp
dec
dec
push
gs
sahf
cs
dec
pop
inc
sbb
aas
lods
and
pop
ret
nop
pop
sbb
lds
clc
inc
push
sub
icebp
arpl
gs
mov
icebp
repz
dec
bound
xchg
adc
jl
pop
inc
cmp
inc
cmp
xor
sahf
enter
out
ret
push
xchg
pushf
pop
insb
dec
ljmp
cmpsl
fstpt
push
data16
test
jg
outsl
lcall
xchg
adc
or
mov
lods
jp
and
rcrl
fnstsw
movsl
or
and
push
aas
test
verr
mov
out
xchg
inc
psubb
fs
mov
aas
cmp
xchg
rorl
sub
push
xchg
cmpb
push
jno
cmpb
into
into
fiadds
rcr
jnp
inc
pop
mov
aam
mov
sbb
dec
movsl
add
sub
in
mov
push
lods
mov
sbb
sub
sbb
icebp
cld
jecxz
mov
add
adc
adc
sbb
cmp
insb
leave
xchg
pop
and
pop
les
cmp
inc
je
cld
outsl
push
shlb
jg
mov
mov
aad
xor
mov
dec
shrl
mov
aad
fiaddl
cmpsl
outsb
fisubs
into
sub
sti
cmp
fldenv
cli
scas
xchg
mov
cld
lcall
lea
jb
or
or
adcl
or
push
frstor
xor
dec
fldl
push
stc
in
add
lahf
or
repnz
int
iret
mov
mov
fstpt
cwtl
mov
dec
ss
push
testl
lea
push
mov
ja
repnz
cwtl
inc
dec
or
test
or
xlat
jnp
sub
daa
xor
into
or
dec
jg
mov
hlt
or
xchg
and
outsb
xor
pop
sub
mov
pop
pusha
int3
ljmp
adc
cwtl
push
push
jmp
pop
xor
xchg
inc
jae
sub
enter
fildll
in
and
mov
sub
sahf
xchg
push
js
stos
pop
mov
and
jb
loop
jb
pop
push
and
iret
lahf
push
stos
push
testb
inc
movaps
sysenter
jnp
decl
xor
in
out
pop
and
lock
cltd
or
cli
mov
pop
pop
les
outsl
adc
mov
or
pop
mul
cld
add
cmpsb
pop
out
fidivl
pop
mov
ss
iret
fs
imul
push
cmpsl
cmpsl
cmc
pop
orl
pop
ret
and
adc
mov
nop
mov
sub
out
in
icebp
cld
or
fcoms
andl
pop
sub
fs
mov
cmp
ds
icebp
dec
movsb
fbld
std
adc
sbb
sub
sub
jge
and
sub
pop
ja
push
push
push
pop
loop
fwait
in
inc
addr16
stc
add
sar
sub
cltd
sbb
gs
xchg
push
iret
jle
mov
cmpsl
test
mov
out
mov
push
rorl
sbb
and
negb
mov
cwtl
add
push
popa
icebp
je
dec
cmc
fsub
adc
ss
std
cmp
push
arpl
loop
test
js
and
jl
xlat
cmc
dec
out
push
push
xchg
rorb
nop
out
sub
lret
nop
or
popf
mov
les
fisttps
jmp
push
push
xchg
fwait
push
jae
sbb
leave
xchg
imulb
sbb
xor
sub
jle
fs
aam
dec
pop
out
fs
pusha
sub
inc
int3
cs
pop
shrb
and
cmc
dec
cld
dec
fptan
sub
es
adc
xchg
in
xor
movsl
or
aaa
or
popa
fstpl
sbbl
jae
dec
lret
xchg
popf
mov
dec
or
pop
imulb
sub
xchg
mov
or
cmp
inc
xchg
jecxz
jge
lret
movsb
std
outsl
out
out
lahf
push
push
adc
and
xor
mov
ret
jmp
mov
test
stos
daa
jbe
gs
insl
sbb
and
fldt
xor
popl
jge
cmp
mov
and
mov
bound
mov
push
or
sbb
fsubs
ds
xor
xorb
xor
jnp
push
dec
cltd
aad
and
sub
sbb
dec
inc
mov
lcall
xor
xlat
movb
jmp
xchg
xor
and
mov
das
scas
mov
xor
nop
icebp
sub
fs
mov
cmp
mov
mov
fcmovb
fdiv
dec
or
hlt
sbb
xchg
adc
icebp
cmp
mov
sbb
fs
imul
les
mov
mov
es
xchg
bound
jecxz
or
jne
mov
pop
icebp
pop
and
cmp
xchg
mov
aam
jge
cli
call
add
adc
sahf
xchg
loop
push
xor
push
mov
mov
sbb
daa
les
jne
mov
pop
aaa
push
lods
daa
inc
mov
dec
out
or
pop
cmpb
stos
pop
clc
sub
dec
loop
leave
repz
lahf
lahf
jne
xchg
cmp
aas
bound
dec
cltd
jnp
cmc
cmpsb
shlb
idivl
push
cmpsb
call
xchg
inc
jle
lods
mov
imul
or
cltd
and
ret
fwait
shr
insl
mov
sar
push
das
fstpt
and
xchg
jnp
je
scas
imul
mov
leave
addb
stos
or
xchg
jl
inc
out
psubsw
push
pop
shll
or
fsqrt
pop
jae
outsl
inc
int3
fistpl
lds
adc
test
cmp
outsb
add
mov
mov
jecxz
nop
fistpll
daa
fstpt
sahf
movsl
mov
mov
xchg
inc
addb
bound
cmovno
lret
insb
mov
xchg
cwtl
inc
jmp
rorl
inc
leave
jle
movsl
xrelease
xchg
cmp
or
or
out
imul
pop
dec
out
and
inc
in
mov
fs
out
or
fistps
cmp
and
hlt
pop
mov
inc
cmpsl
imul
montmul
cmpsb
sbbl
push
inc
and
mov
xchg
push
lcall
jl
add
xchg
aaa
cwtl
cld
loopne
jnp
xchg
jnp
mov
popf
dec
pop
jl
or
dec
or
add
inc
sbb
fdivrl
adc
mov
sub
mov
sub
test
add
cli
in
jge
rorl
test
mov
sbb
fstl
mov
notl
cmpl
hlt
aad
add
je
inc
xor
mov
jg
dec
mul
iret
stos
int
nop
mov
shlb
idivb
xor
imul
loope
push
pop
mov
movsl
test
mov
sbb
rcl
cmpsl
jb
in
or
fwait
aad
adc
xchg
leave
ds
int
test
mov
test
mov
mov
xor
add
pop
mov
out
xor
add
pop
jne
imul
sub
fcomi
mov
decl
sub
outsl
bound
je
add
dec
repnz
rol
or
sahf
js
inc
rol
les
lods
ffree
bound
inc
jo
lds
adc
jnp
outsl
jecxz
pop
rcr
stc
xor
cmp
std
dec
add
jg
cmpsb
mov
or
jns
roll
jg
push
shll
insl
or
jp
push
clc
rolb
imul
test
leave
xor
movsl
add
cmpsl
cld
dec
jl
or
rcrl
dec
int
popa
int
push
adc
loop
mov
lret
mov
gs
add
psllw
jae
xchg
outsb
sub
aas
fwait
int
fucom
push
rorb
sub
push
hlt
push
lods
andl
inc
xor
fbstp
jge
inc
mulb
jns
sbbb
add
push
cmpl
nop
adc
sbb
rcll
outsb
pushf
pop
and
inc
pop
cltd
fs
jp
cmp
push
cmp
ja
lds
outsl
jne
dec
xor
xchg
cmpsb
mov
lcall
pop
inc
sub
repz
mov
frstor
iret
aam
sar
and
cmp
inc
sbb
fstpl
push
lret
xor
test
data16
lods
pop
stos
adc
inc
jb
mov
addr16
add
jns
es
jno
push
roll
adc
pop
aam
and
lret
sub
stos
in
push
push
lods
shrl
loopne
imul
inc
ret
lcall
mov
inc
call
jno
xchg
mov
lcall
or
and
and
mov
inc
push
xlat
cmp
shrl
fdiv
or
pop
fmull
in
aam
outsl
sbb
jae
and
dec
push
daa
and
pop
pop
or
imul
dec
dec
mov
or
xchg
pop
push
dec
repnz
cmp
std
test
and
fidivrs
pushf
imulb
orb
mov
cmp
imul
shlb
sti
xchg
push
idivl
add
mov
aas
jae
cmpsb
lahf
iret
aas
mov
icebp
xchg
pusha
std
adc
mov
jmp
xor
daa
aas
sub
jbe
cmpsl
push
xlat
mov
pop
sti
andl
inc
push
imul
lret
xchg
scas
push
lret
ljmp
andb
sbb
insl
scas
sbb
fistl
popa
pop
jno
dec
lret
ja
sbbl
mov
out
xor
adc
es
jle
push
sbbl
sahf
cmpsl
repz
mov
cmpsb
pop
lcall
inc
push
and
mov
sbb
or
lea
rol
push
mov
xor
addr16
mov
cmp
adc
lea
int
cmpsl
jg
jl
mov
in
jmp
ja
mov
xor
xchg
cmc
daa
jle
mov
xchg
stc
rolb
cs
cmc
pop
xlat
or
leave
push
mov
outsl
xchg
add
push
pusha
xor
negb
into
sahf
pop
xor
xor
or
xor
or
scas
sbb
shl
sahf
xchg
sub
xor
je
nop
inc
aam
adc
lds
pop
ljmp
fcmovnbe
jb
jns
lcall
loopne
test
out
mov
sbbl
in
and
repnz
or
xor
popf
add
mov
mov
repz
pop
mov
mov
jl
adc
aaa
adc
loopne
inc
ljmp
add
clc
mov
cwtl
xor
push
adc
lahf
test
rcl
xor
push
in
jle
push
dec
iret
les
mov
sub
mov
push
imul
sub
push
mov
rorl
sbb
xchg
fidivs
and
adc
lea
ja
icebp
fadds
inc
and
mov
das
mov
inc
jae
jge
xor
movsb
dec
lret
xchg
je
shll
add
rcll
lahf
xor
loopne
push
into
ret
scas
jle
xchg
insl
mov
jl
sbb
lea
ret
lods
sub
cmp
into
lcall
loop
mov
fstps
sbb
and
inc
dec
push
aas
mov
cmp
adc
dec
xlat
out
jge
loop
stc
int3
pop
mov
andb
ss
repz
cmp
cwtl
inc
loope
xchg
lcall
mov
ret
inc
xchg
xor
fistpl
add
mov
sbb
pop
pop
push
lret
js
mov
cltd
fstl
mov
sub
jnp
mov
jl
jb
mov
sub
push
push
jae
sbb
orb
mov
sub
cmp
mov
dec
xchg
or
sbb
lds
inc
es
cwtl
shr
inc
xchg
sub
adc
xor
call
fldl
jecxz
pop
sar
out
mov
stos
jo
ss
rorb
js
inc
mov
ja
xchg
cmpb
sbb
jge
cmpsl
sub
in
imul
cmp
mov
cwtl
adc
popa
mov
into
lods
lods
mov
inc
stos
ficoml
fsubr
out
and
into
jae
mov
sub
int3
pop
sbb
inc
add
jno
movb
pop
cmpsb
imul
jp
lods
jle
leave
xlat
test
mov
push
xchg
dec
cmc
in
push
add
pushw
cltd
sti
movsl
cmp
xchg
push
inc
mov
push
jecxz
xchg
insb
fbstp
mov
inc
cs
scas
inc
test
adc
jecxz
jmp
add
and
xchg
lods
xchg
bndldx
imul
insl
in
scas
push
out
inc
das
pop
sbb
movsl
add
jmp
movsb
in
ljmp
mov
xchg
mov
pop
movsb
imul
cmp
pop
loope
lods
idivl
inc
mov
xchg
mov
sub
movsb
push
roll
cmp
cwtl
in
jl
push
call
sub
movsbl
dec
dec
out
dec
cmp
frstor
jmp
in
pop
cmp
fisubs
scas
jmp
in
push
inc
adc
rcrb
sub
add
add
fcmovnbe
fldt
mov
mov
jo
andb
push
adc
cmp
push
sbb
sahf
push
loope
pushf
divb
mov
xchg
mov
ret
push
movzbl
out
dec
xor
cmp
call
add
arpl
xchg
mov
pop
mov
scas
and
iret
ja
popa
add
inc
inc
pusha
imul
icebp
adc
mov
popw
mov
test
cmc
imul
loop
mov
pop
ljmp
mov
hlt
ljmp
cltd
in
sahf
ss
mulb
fdivl
and
sbb
jg
xor
ljmp
xchg
pop
or
jp
arpl
rclb
cmp
and
sbbl
dec
adc
popf
sahf
outsb
jl
jg
pop
sbb
lods
dec
dec
add
sarb
mov
dec
fbld
cli
pop
sti
mov
xor
mov
out
addr16
dec
cli
out
in
int
punpckhbw
lret
adc
jo
and
jge
jns
outsl
scas
adc
mov
cmpsl
mov
das
adc
and
xchg
dec
cwtl
les
inc
sahf
sub
in
bound
iret
pop
push
mov
scas
lahf
push
inc
add
jne
mov
sub
xchg
dec
cli
int3
lret
xchg
xchg
jns
popa
fwait
or
xor
pop
sbb
mov
and
imul
mov
shlb
lods
cmpsl
mov
fstl
push
outsl
jns
dec
mov
out
push
xchg
xchg
mov
mov
cwtl
mov
loop
mov
xor
sub
inc
sahf
ds
inc
shrl
adc
mov
loope
mov
sub
int3
push
cmp
add
mov
jp
ficoml
inc
hlt
decl
gs
jp
rolb
pop
add
test
in
mov
out
gs
insl
lahf
std
fisttpll
jmp
mov
pusha
movsb
jecxz
lret
push
xchg
cli
fwait
in
lock
mov
sti
xorb
popa
mov
cmpsl
faddl
push
jbe
inc
xchg
mov
or
jp
fimull
loope
push
stos
jl
mov
int3
push
cli
aad
pop
inc
inc
xchg
pop
test
insl
xor
pusha
xor
xchg
fnstcw
mov
add
xor
lret
in
sub
adcb
or
adc
js
bound
aas
mov
cmp
pop
mov
add
jbe
jne
leave
in
mov
xlat
adc
gs
inc
or
jp
jg
lret
push
push
adc
mov
pop
sbb
lret
push
or
popa
dec
fdivs
out
into
scas
mov
sub
mov
or
or
sub
xchg
notl
les
insl
idiv
loopne
fld
shlb
iret
test
sub
inc
ljmp
sbb
pop
xlat
int3
aas
shl
cmc
orl
loop
jp
loopne
pop
mov
adcl
inc
sbbb
jb
push
test
mov
enter
or
and
mov
xor
je
test
or
gs
insb
les
dec
out
sti
loop
cmp
fnsave
pop
sti
movntps
xor
out
in
jp
pop
sub
fdivrp
xchg
aas
sub
and
pop
and
shrl
pop
cmc
dec
fstpt
mov
cmp
adc
or
cmp
xor
or
imul
cs
inc
inc
paddw
jle
outsb
adc
arpl
xchg
mov
cmp
pop
jp
sbb
jp
jmp
sbb
bound
jle
pop
add
adc
mov
xchg
xor
cmp
adc
sbb
jl
insb
cmp
add
ret
push
in
fdivr
shlb
jne
daa
push
cmpsb
mov
dec
sbb
xchg
or
jmp
fnstsw
fldl
inc
mov
fs
test
pop
pop
flds
dec
sbb
js
push
les
xchg
dec
jne
push
inc
ds
fiaddl
xchg
jbe
lcall
inc
jl
int3
jmp
les
dec
mov
popf
xchg
inc
or
push
dec
jbe
enter
push
out
popf
xor
in
pusha
pop
es
je
imul
jecxz
fmull
or
jecxz
jmp
jmp
js
add
adc
call
cwtl
add
lcall
sbb
and
ret
push
lds
xor
adc
movb
jae
ret
mov
dec
aaa
ficompl
add
or
cs
fmul
in
jnp
dec
mov
int
inc
push
push
movsb
adc
inc
push
sub
adc
pop
movsl
outsb
sub
iret
mov
and
add
sub
outsb
jg
out
add
rcrl
xlat
out
incl
cltd
pop
pop
loop
push
jo
fwait
or
push
cwtl
rolb
xor
imul
movsb
push
into
fs
inc
dec
test
fmull
sbb
jg
mov
int
or
in
cmp
lods
push
ficoml
fidivl
fxch
mov
add
int
push
inc
xor
inc
or
pop
add
xchg
lods
lret
push
or
scas
pop
cmp
inc
jnp
jmp
inc
push
and
movsb
push
or
scas
adc
mov
push
mov
add
aam
xchg
jbe
shrb
pop
sti
addr16
jmp
sbb
cmovb
ss
xor
repz
arpl
mov
jmp
push
mov
lods
cmp
push
cld
pop
sub
das
or
pushf
dec
push
out
push
add
movsl
push
mov
and
repnz
loop
mov
push
clc
iret
and
cmp
mov
jmp
push
mov
add
cmp
xchg
icebp
mov
sbb
sub
sub
test
into
divb
adc
mov
jo
cmp
sbb
lahf
fidivs
xor
into
push
popf
xchg
sub
gs
in
in
ljmp
in
mov
mov
jns
popf
cmp
mov
push
loope
jmp
lods
ja
xor
xchg
dec
lock
test
mov
iret
inc
jns
das
lret
fcompp
push
lcall
sahf
outsl
jae
iret
adc
fdivrs
jbe
pop
sar
mov
data16
iret
add
inc
mov
sub
push
in
pop
popa
xor
cmpsl
inc
mov
mov
ret
dec
pop
ds
lret
sbb
dec
push
xor
cmp
lcall
inc
pop
gs
cltd
popa
in
cli
fs
dec
mov
fcmovne
adc
mov
sub
fnstsw
pop
or
shlb
movsb
jl
fildll
jmp
xchg
cwtl
mull
or
push
insb
and
and
lcall
xchg
push
add
sub
xchg
and
arpl
and
xor
dec
mov
dec
ret
xchg
add
pop
loop
sub
xor
jecxz
in
sbb
stc
adc
jne
and
mov
fnsave
lods
inc
into
in
jne
jnp
lret
in
or
imull
xchg
fistpll
jb
push
push
sti
pushf
add
xor
pop
add
pop
push
in
test
scas
mov
loope
cmp
push
lret
aaa
outsb
or
pop
and
push
shll
sahf
jle
loop
push
push
cmp
lock
aam
dec
mov
xchg
std
mov
dec
pop
inc
jo
cld
fsubs
arpl
sbb
imul
stos
js
jbe
pop
fsubs
popa
adc
mov
jae
cwtl
inc
mov
mov
loope
call
mov
insl
rcrl
addr16
jmp
cmp
xlat
mov
jo
decl
dec
out
je
inc
dec
fwait
jne
das
outsb
mov
push
push
jnp
and
xchg
adc
sarl
shrb
sub
negb
add
cwtl
movsl
xor
mov
imul
lcall
xchg
and
fisubrs
dec
iret
fisttpll
cmp
cmpsb
pop
push
cmpsb
fdivrl
sub
cmp
or
jecxz
inc
mov
add
cmpsl
andb
jno
inc
insl
negb
inc
je
outsb
mov
mov
stos
mov
or
pop
jl
outsl
insl
into
les
shlb
cmp
inc
and
dec
inc
and
cmp
sbb
fwait
repnz
inc
rcll
iret
cmp
jecxz
daa
cmp
int
and
xor
pusha
or
lcall
push
push
inc
ja
mov
mov
adc
lods
stc
sub
jb
xorb
add
ret
xor
in
ret
mov
popa
sti
mov
cmpsb
insl
adc
lahf
inc
out
insb
sub
mov
popa
mov
fisttpll
out
les
hlt
xor
lahf
xor
jnp
outsb
stos
gs
rorl
mov
iret
jecxz
xor
sbb
mov
xor
aaa
add
mov
cmp
push
int
in
dec
pushf
notb
jge
inc
add
and
je
jge
xchg
jecxz
rcrb
pop
adc
iret
stc
lret
and
mov
mov
les
xor
adc
jns
sbb
in
std
xor
aaa
imul
imul
jns
filds
xor
lret
push
ds
cmp
sub
cltd
push
xchg
imul
cli
push
mov
sbb
jb
in
dec
or
push
jno
movsl
outsl
clc
or
mov
pop
pop
add
pop
push
outsl
sbb
or
lahf
push
or
mov
push
xchg
idivb
push
filds
lds
sahf
hlt
sub
sub
push
xchg
lods
ljmp
jnp
xbegin
mov
xlat
cmp
jg
dec
test
mov
jp
jmp
sub
hlt
in
data16
lock
adc
sti
test
mov
mov
test
in
sbb
push
xchg
mov
add
sub
pusha
dec
push
cmp
scas
xchg
xrelease
adc
adc
xor
xlat
cmp
push
rcll
pop
jo
ljmp
in
fiaddl
push
jb
push
repz
ljmp
data16
mov
mov
lock
pop
adc
aaa
lock
push
addl
ret
push
mov
insb
jecxz
int3
pop
add
mov
inc
adc
jbe
mov
test
pop
movsl
cmp
sbb
aas
pop
or
or
xchg
lcall
lahf
imul
subb
test
pusha
cmp
fs
hlt
int
pop
scas
test
shll
stos
data16
fbstp
call
ja
inc
cmp
cmp
xchg
mov
call
popf
mov
mov
sti
xchg
in
push
fsubrs
add
lods
repnz
into
in
or
movsl
mov
mov
jne
sti
sbb
repz
idivb
push
push
shlb
or
xchg
mov
mov
rolb
incl
mov
outsb
ret
inc
adc
cwtl
xchg
xchg
sub
mov
sbb
xchg
scas
mov
sub
pop
imul
lret
dec
xor
sub
inc
xlat
xor
or
cmpsl
dec
add
adcb
mov
jge
cmp
pop
loope
hlt
dec
jne
fbstp
test
pop
mov
inc
dec
fsub
adc
mov
cwtl
mov
fcoms
or
addr16
ror
outsl
repz
nop
jg
movb
pushf
xchg
rcr
push
fldt
out
pop
jae
inc
stos
fmull
into
imul
mov
sub
ja
add
mov
mov
movsb
or
out
pop
test
mov
cmp
imul
inc
sub
mov
mov
sbb
rcl
fistpl
cmp
xor
or
mov
dec
jae
push
fstpt
outsl
lahf
mov
or
sub
inc
call
or
xchg
add
cld
cli
sbb
inc
cmp
stos
sub
mov
scas
int
test
xchg
adc
popl
sbb
popl
movl
lret
push
xchg
xchg
inc
inc
dec
xchg
cli
lds
popf
and
icebp
cmp
repz
cmc
pop
pop
sbb
cld
xor
andl
xchg
scas
mov
stos
out
pop
in
out
xchg
push
mov
in
or
dec
sti
aam
pop
mov
jmp
jbe
sub
mov
lahf
aam
jae
dec
push
fwait
pop
les
dec
xor
jno
fs
daa
mov
sbb
mov
push
and
mov
test
out
jmp
sbb
jp
divl
push
stos
mov
and
or
mov
add
jl
test
fimull
test
dec
popf
xorl
pop
jne
jl
sbb
stos
xor
addr16
in
mov
mov
sub
pop
int
sub
movsl
iret
and
popf
sbb
repz
das
mov
sbb
icebp
mov
cld
ficoml
xorl
mov
hlt
popa
stos
loope
lds
inc
inc
adc
das
adcb
rorl
jecxz
and
jle
mov
jo
sbb
stos
dec
inc
in
mov
out
inc
roll
js
jp
je
jecxz
movsl
scas
aad
lret
gs
sbb
lods
ds
sub
push
cltd
lods
shlb
dec
jnp
push
push
jle
sub
xchg
mov
ds
jno
and
xchg
xchg
rolb
les
loopne
push
mov
cmc
leave
adc
out
in
dec
rcrl
in
push
push
fistpll
xchg
ret
push
adc
sbb
int
adc
pushf
clc
leave
pop
mov
loop
or
je
arpl
or
cmp
push
scas
cli
cmp
dec
xchg
add
lea
inc
lcall
in
pop
imul
lea
cmc
mov
cltd
pop
and
adc
out
jbe
push
stos
sbb
popa
xor
mov
adc
stos
mov
adc
vandnps
idivb
in
adc
add
push
sbb
sarl
fisubrl
sbb
xor
pusha
imul
and
lret
xchg
sbb
inc
fildll
fildl
push
in
push
jno
test
xchg
mov
ss
xchg
int3
out
mov
jmp
pop
push
lods
xchg
out
lods
mov
cs
out
add
nop
ja
je
in
das
out
mov
lret
cmp
push
ret
adc
inc
adc
fsts
push
ret
xchg
es
inc
cmpsb
mov
and
aad
mov
inc
cmp
leave
mov
jmp
test
mov
jmp
lret
sub
mov
in
dec
insb
cmpsb
add
adc
dec
jge
negl
pop
adc
jne
mov
adc
mulb
add
mov
jno
pop
popa
ja
ja
cmp
rcll
cmp
ret
push
fidivs
pop
shrl
cmp
jmp
inc
insl
mov
dec
inc
fstl
aad
push
jle
call
mov
into
idiv
jl
push
or
fs
jl
mov
popa
push
pop
pop
lret
mov
stos
mov
sbbb
pushf
adc
scas
adc
pop
popf
cmc
push
pop
test
ficomps
ficomps
mov
enter
mov
push
insb
stc
xchg
xchg
loope
add
pop
in
lds
cmpsl
or
ret
push
sub
call
mov
sbb
push
pop
and
out
push
mov
loopne
mov
mov
das
call
subb
aam
insl
push
les
jbe
adc
idivl
cmp
pop
sub
jbe
fcomps
xchg
scas
hlt
lock
insb
xor
mov
roll
scas
jb
xchg
jge
cld
jb
or
sbb
cltd
xlat
push
sub
adc
cmpsb
sbb
ret
cmc
jb
je
inc
jb
mov
mov
fdivrl
dec
or
mov
jge
mov
push
mov
pushf
xchg
jb
sarl
push
sbb
imul
test
pushf
add
cmpsl
ljmp
xchg
fcomps
int
arpl
fdivs
adc
mov
ljmp
and
xor
test
in
mov
fcoml
pop
mov
sub
mov
xchg
dec
mov
adc
cmc
pop
jnp
jno
leave
and
subl
test
xor
or
fbld
jnp
add
jmp
sbb
dec
notb
jb
pop
and
lds
or
mov
xchg
sbb
cmp
fidivs
call
pushf
les
or
sub
les
repnz
inc
xor
sub
mov
ja
lock
rcrb
adcb
add
mov
jnp
subb
out
gs
pop
inc
fsubp
and
add
rdtsc
imul
and
push
fdivs
mov
pop
sbb
cmp
jp
movsl
cmp
lret
into
lods
adc
mov
lcall
jmp
das
inc
cmp
push
scas
insl
jp
or
push
hlt
mov
in
sbb
xchg
cmp
jecxz
aad
adc
or
movntq
out
push
push
jecxz
pop
pop
test
cmpsb
sub
adc
mov
push
pop
inc
push
scas
push
das
bound
in
movb
rcll
movsl
rcrb
sbb
ja
pop
ret
sub
cli
xor
scas
adc
leave
xchg
loope
pop
jmp
das
xchg
mov
jae
adc
call
add
xchg
pop
ljmp
mov
sub
aad
mov
loop
fsubp
lds
pop
cmc
push
cmp
mov
pop
adc
cltd
xor
inc
lods
mov
sub
scas
fs
fisubrs
sbb
mov
mov
sub
fildl
dec
test
jle
in
pop
call
pop
iret
pop
sub
in
sub
rcrb
sbb
jge
test
stos
xchg
mov
rorl
cld
dec
sub
mov
out
testb
ss
mov
aas
stos
aaa
addr16
pop
cmp
decl
ja
push
call
mov
sbb
dec
mov
or
rcl
jo
daa
xor
jb
call
lock
add
fisubrs
call
pop
fisttpll
out
add
adc
jge
pop
cs
in
sbb
mov
push
mov
jge
arpl
lcall
or
jno
rolb
mov
sbb
push
cmp
mov
xchg
imul
dec
jns
mov
aad
ss
cmp
call
xchg
sarb
cmp
pop
mov
rcl
push
and
bnd
add
push
adc
push
sahf
cmp
arpl
outsb
iret
sar
sbb
in
push
lock
adc
sbbb
mov
dec
pusha
aam
push
jbe
icebp
lahf
lods
sbb
cmp
icebp
dec
or
jl
jle
popl
lods
xlat
add
dec
in
adc
das
cmpsl
loop
mov
outsb
jge
mov
push
push
mov
scas
mov
scas
xlat
ss
or
lds
stc
ret
aad
xor
mov
repnz
dec
xchg
icebp
mov
int
xchg
push
or
or
pusha
sub
adc
bound
shll
mov
int
xchg
fstl
rcll
loope
xchg
je
ss
jp
xchg
sub
fimull
aas
ficomps
sbb
das
cmc
dec
into
cmpl
cltd
test
loopne
arpl
das
dec
xchg
filds
gs
push
in
pop
mov
or
xchg
out
pop
lahf
add
addr16
stos
pop
mov
push
outsl
mov
lcall
lcall
fst
mov
dec
dec
js
lret
add
lods
stc
xchg
mov
xchg
xor
sbb
mov
in
cmc
cmpl
loope
lret
inc
repz
pusha
scas
negb
cmc
fs
add
scas
scas
sbb
add
jae
jb
cltd
ret
test
xchg
ficoml
pop
sub
or
and
push
test
movsb
push
mov
lods
adc
add
cmp
push
out
or
ret
inc
test
and
cwtl
hlt
repz
add
ljmp
int
jg
pop
adc
and
adc
popf
mov
mov
xchg
out
fildl
and
es
in
jge
fbld
int
shrb
psraw
push
mov
mov
arpl
mov
lods
or
jne
scas
jmp
dec
sbb
movsb
shll
sub
stc
rcrb
or
or
in
int3
lods
ds
scas
sub
loopne
cmc
in
jo
lahf
add
test
in
stc
or
push
lods
int3
jecxz
popa
push
pop
ja
fistl
aam
lea
adc
rcrl
xor
cmp
cld
pushf
add
mov
sarb
fwait
imul
das
in
dec
xor
lods
cmp
pop
mov
pop
and
testb
mov
lahf
adcl
sub
jecxz
cwtl
mov
aaa
int3
aam
and
movsb
mov
mov
outsb
cld
aam
sbb
xorb
imul
pop
inc
jnp
outsb
clc
mov
ds
lcall
ret
push
sub
and
xor
icebp
lods
sti
adc
aad
jo
call
jnp
fdivs
fbstp
sbb
loop
dec
gs
scas
add
mov
in
xchg
insl
aaa
lea
pop
sub
push
jmp
jge
sub
nop
test
inc
or
cmp
sub
xor
xchg
js
jb
in
cmp
ds
add
dec
add
cli
imul
sub
and
lret
daa
fsubrs
aaa
test
mov
into
xchg
mov
rolb
pop
or
mov
daa
pop
jmp
push
mov
mov
ja
adc
inc
xor
push
xchg
movsl
xor
add
xchg
add
enter
dec
ret
or
ss
sbb
sub
mov
ffreep
in
cmp
jo
das
and
push
xor
out
pop
dec
lods
aas
ret
inc
ja
fistl
and
rcr
mov
popa
movsb
mov
ret
mov
xchg
out
or
popa
or
sbb
testb
and
or
popf
sub
mov
push
push
in
xor
or
sbbl
and
sbb
and
mov
dec
fisttps
jne
mov
mov
ja
mov
lret
mov
sbbb
and
insb
and
sub
lods
add
push
jne
repnz
jno
mov
xor
jge
jb
lods
ret
ffree
fs
clc
xor
jb
stos
mov
insl
xchg
das
xor
pop
cs
and
push
or
rcrl
pop
ss
mov
sub
mov
sbb
aas
push
xor
cmc
rolb
outsl
call
es
test
mov
pop
jl
and
lret
mov
pop
dec
pop
xchg
inc
addr16
mov
je
rolb
popf
xor
ljmp
je
int
jo
mov
and
sub
sub
xchg
out
jnp
mov
cmp
fs
cs
mov
xor
into
les
enter
xchg
lods
pop
mov
adc
jl
out
js
testl
push
pop
xchg
stos
jnp
lea
les
pop
cmp
gs
fstl
nop
mov
std
push
lock
sub
out
or
int3
xor
popa
popf
xchg
fnstsw
pushf
mov
into
lret
dec
ss
scas
jmp
aaa
mov
into
dec
dec
fcoms
adc
bound
lds
inc
cmp
sbb
jne
sbb
jne
arpl
dec
or
push
bsr
push
mov
push
iret
mov
and
cmp
and
test
mov
dec
cli
test
jno
dec
mov
sub
test
xor
sbb
mov
aam
ret
fdivr
jmp
daa
push
mov
jg
inc
push
das
in
sbb
xchg
xchg
pop
jo
sbb
pusha
mov
in
orl
rolb
jge
aad
push
fmul
cmpsb
popa
jle
jge
ret
pop
sbb
xchg
push
jnp
imul
movsl
push
jp
jae
in
sub
add
stos
add
sub
inc
push
sbb
js
sbb
int
jg
or
dec
rclb
cld
sub
in
inc
fcmovu
sub
mov
mov
mov
std
jl
jge
enter
aaa
jbe
aam
sub
repz
xchg
aad
add
sub
dec
inc
clc
and
cmpsb
jl
mov
xchg
lods
xor
fwait
add
sub
adc
cs
ret
pusha
add
pusha
jo
adc
pop
fsts
mov
ss
imul
not
mov
pop
adc
ret
jae
out
fcomip
ss
and
pop
in
and
pop
es
cmp
gs
out
xchg
push
sub
xchg
rol
test
xchg
rcrl
mov
cmp
and
test
ds
stos
in
ja
cmpsl
or
out
jno
imul
leave
jmp
movsl
fldt
jecxz
cmp
jno
adcl
dec
jae
mov
push
pop
push
push
adc
sbb
and
xchg
push
xchg
inc
icebp
scas
jecxz
enter
ret
mov
ficoml
xchg
cmpsb
mov
sub
or
lea
sub
pop
loopne
repz
das
mov
mov
ret
pop
mov
fnsave
and
add
xlat
loopne,pt
int3
sahf
fcomps
inc
pop
leave
sub
rcl
xor
leave
insl
xor
mov
lds
and
push
xchg
mov
add
sarl
sbb
out
xor
xor
sti
inc
xchg
mov
xor
cli
mov
fwait
mov
inc
push
scas
dec
iret
jl
and
xchg
push
scas
xchg
push
imul
jne
pusha
pop
jae
xchg
inc
adc
mov
or
pop
adc
inc
je
mov
add
adc
lcall
into
iret
rclb
popa
push
lret
or
cltd
call
aam
or
into
xlat
sarl
cmp
in
xchg
and
ficoms
sarl
sub
xor
pop
std
sbb
inc
subl
repnz
movsb
jl
mov
cli
ljmp
notb
xlat
and
add
xor
imul
insl
movsl
sub
sbb
mov
stos
pop
loopne
arpl
ja
mov
lcall
mov
pop
cld
xor
jle
shl
shll
data16
pop
mov
clc
inc
loope
and
es
and
filds
inc
xor
jns
jns
jl
movsl
jg
mov
fs
and
ljmp
stos
add
sub
push
push
popf
mov
faddl
push
mov
fnstenv
fldln2
jne
aas
mov
mov
repnz
sti
jo
add
mov
adc
push
adc
inc
dec
divl
das
jne
cmp
inc
xchg
cmpsb
mov
xchg
inc
mov
add
xchg
xchg
in
jae
jo
push
xchg
mov
jno
ret
mov
xor
push
gs
mov
lods
and
jle
push
out
jo
dec
fmuls
addr16
inc
jns
fwait
cwtl
add
dec
mov
sbb
inc
mov
ljmp
out
adc
into
adc
add
push
add
icebp
mov
iret
fildll
int
fnstcw
jmp
push
out
outsl
in
sub
cltd
mov
push
lcall
sub
and
xor
push
or
mov
jbe
jp
leave
out
jbe
jnp
mov
push
xor
cmp
jbe
lret
push
jns
push
dec
les
xchg
pushf
jbe
push
ror
add
add
lock
pusha
jg
and
out
sbb
push
daa
fidivl
stos
add
in
add
fidivrs
xchg
inc
cmp
pop
mov
nop
xchg
cwtl
fisttps
or
add
xor
les
jmp
stos
jecxz
or
pop
xchg
cmp
or
outsl
mov
jo
inc
test
add
adc
insl
fstpt
subl
push
mov
arpl
inc
xchg
inc
mov
adc
test
bound
pop
loope
shrl
jl
leave
inc
dec
add
ficoms
dec
dec
push
gs
push
fadd
lock
lods
in
push
cmp
mov
pop
push
and
test
pop
sbb
ja
and
sub
adcl
rcrb
pop
pop
stos
sbb
xor
sahf
xchg
and
jecxz
push
inc
add
dec
sbbl
test
add
inc
sub
push
test
stos
jae
add
std
fnstenv
rcrl
je
xor
movl
ja
add
pop
movsl
hlt
push
mov
call
and
pusha
sbb
and
sbb
push
cmp
cmp
insl
in
mov
jl
inc
lock
cltd
add
and
aam
adc
sti
push
cmp
test
push
lret
and
lods
andl
mov
xor
dec
mov
in
lcall
test
jge
mov
je
mov
sbb
or
lods
sbb
imul
mov
lock
inc
xchg
adc
js
rcll
cs
jle
insb
lock
outsl
jp
mov
cltd
icebp
mov
sarb
push
test
inc
in
fwait
fs
inc
xor
sbb
add
cmc
lea
sbb
jno
add
sub
add
out
lock
sbb
je
and
leave
sbb
cltd
xor
pop
push
int3
mov
push
fisttpl
mul
sbb
negb
sub
jne
mov
pushf
jge
loop
inc
sub
pop
xchg
das
pop
add
jl
adc
inc
lds
pop
daa
sahf
inc
pop
cltd
mov
xor
ja
add
aas
add
test
inc
ljmp
xchg
test
cmp
jmp
pop
sbb
jnp
in
cmc
jnp
push
mov
mov
sub
sbb
cmp
movsl
mov
push
jp
cltd
xor
cli
mov
js
jb
jp
popf
jp
test
jp
arpl
mov
insl
loopne
jo
xlat
mov
mov
aaa
jo
fldcw
mov
lret
adc
xchg
push
inc
add
xchg
inc
mov
in
dec
mov
push
mov
cld
lcall
fsubrl
mov
loope
sbb
jnp
mov
std
or
sub
leave
out
jae
or
xchg
loope
clc
loopne
pop
lock
or
dec
adc
pop
mov
dec
popf
xchg
push
mov
xchg
clc
std
imul
xor
stc
sub
jbe
ja
mov
or
gs
rcll
std
add
adc
push
sub
in
cmc
mov
test
or
sti
inc
mov
aad
iret
mov
enter
out
push
iret
sarl
jp
xchg
xor
jae
fwait
pushf
cmpsl
imul
jno
popw
dec
ficoml
xlat
stos
and
cs
add
out
and
pop
aad
cmc
xchg
shlb
int3
fstpt
loope
test
adcl
fwait
mov
mov
js
mov
push
lock
incb
mov
icebp
push
fdivrs
repnz
jae
or
add
cmp
loope
out
out
xchg
ja
sahf
mov
popa
xchg
inc
dec
inc
sub
jne
mov
rorl
add
adc
icebp
shrb
sbb
push
jp
imul
inc
push
sub
rclb
add
mov
adc
sbb
out
movsl
sbb
cmpsl
and
popl
inc
stos
xlat
mov
dec
fdivrp
cwtl
cmp
sbb
mov
push
fisubl
mov
push
decb
cs
xor
xchg
inc
leave
xlat
lahf
rcl
mov
lods
mov
mov
xchg
jg
flds
inc
push
mov
scas
adc
aad
jecxz
cld
cmp
enter
jecxz
mov
jmp
jp
fmuls
cwtl
adc
fwait
push
cwtl
int3
cmp
and
mov
in
jg
dec
pop
out
xchg
adc
pop
sbbl
inc
sub
pop
mov
loopne
or
add
pushf
cmpsb
pop
jmp
jg
imul
jns
push
fwait
das
push
les
enter
fstps
lret
rcrl
iret
sahf
mov
jne
in
xchg
cmp
mov
pop
cwtl
xor
lahf
push
lret
std
test
rcrl
push
mull
nop
pop
nop
mov
jae
push
cs
cmpl
jae
shl
add
out
push
flds
iret
dec
adc
stos
dec
and
fsubs
xchg
xchg
aam
push
jbe
jbe
add
mov
cmp
mov
sbb
add
lock
mov
lret
loop
mov
dec
shrl
add
mov
dec
leave
test
sahf
push
repz
lss
testl
pop
or
sahf
lret
and
popaw
in
lret
insb
rcrl
xor
stc
sub
insl
adc
add
dec
inc
ret
sbbb
pop
push
aas
sub
push
sub
ret
add
xchg
mov
mov
push
popf
jg
lahf
shr
sub
cld
out
js
push
and
mov
shrl
mov
lahf
push
xchg
shlb
stc
cltd
jmp
mov
xchg
jbe
inc
mov
add
fs
mov
pop
xor
in
jmp
mov
pop
jp
pop
cmc
lcall
and
push
movsb
out
mov
movsl
pop
mov
outsl
neg
outsl
das
adc
filds
movsl
push
sbb
es
clc
jg
lods
loope
cli
sti
inc
mov
mov
insl
mov
push
xchg
mov
movsb
enter
cmpl
aas
leave
push
xor
mov
pop
dec
ret
shlb
dec
sbb
ljmp
aam
aad
sbb
addb
int3
cmpsb
mov
adc
push
sub
push
and
xchg
xchg
fdivs
mov
xorl
das
iret
mov
pop
mov
cmp
ds
rolb
in
mov
std
sahf
push
es
jne
or
test
mov
push
add
test
cmp
add
repz
pushf
inc
insl
xor
sub
sub
push
xchg
repnz
inc
insb
xchg
mov
pop
push
xlat
int
js
mov
ds
xchg
pop
pop
out
fstpl
pop
pusha
into
push
cld
xchg
lahf
and
mov
and
add
sbb
scas
mov
dec
cld
lds
mov
pop
insl
and
outsb
roll
aaa
pop
out
xor
sub
pop
cmp
sarb
add
pushf
xorl
notl
fs
ud1
aam
mov
cmc
jmp
mov
and
cltd
lcall
leave
lcall
and
mov
cli
loop
adcl
in
push
imul
arpl
sbb
or
sbb
lret
add
leave
lock
out
sub
pusha
inc
or
dec
mov
stc
dec
insb
dec
movsl
lea
ret
les
ret
mov
cmp
xorl
add
and
insl
sti
movsl
stos
inc
mov
xor
dec
adc
adc
push
fs
leave
stos
jg
sbb
outsb
test
mov
mov
add
inc
cmp
push
fistpl
sub
or
lahf
and
push
inc
lahf
pop
sub
adc
mov
push
cmp
or
mov
xor
push
or
xor
bound
xor
fimuls
push
ret
fwait
push
jo
in
inc
push
mov
aam
addb
scas
lahf
and
inc
outsb
stc
adc
push
cmp
adc
out
jb
daa
rcrl
jno
dec
inc
out
mov
nop
xor
adc
mov
jmp
pop
xchg
cmp
xor
shr
ja
aas
cmp
mov
in
mov
aad
movsb
add
fs
test
call
mov
dec
stos
jl
sub
into
out
adc
ret
int3
notb
dec
out
rclb
push
dec
or
or
adc
mov
inc
imul
cmp
ja
or
pusha
loopne
add
imul
repz
adc
push
inc
clc
repnz
dec
shrl
adc
scas
sub
adcl
xor
mov
pop
clc
imul
add
stos
xchg
or
xchg
mov
test
int3
push
stos
cmpsl
jbe
xchg
xor
es
cmp
test
cmp
push
jo
push
aam
jo
fdivrs
adc
gs
sbbl
jb
test
aaa
or
jns
pop
mov
popa
push
hlt
popa
por
fisttps
sahf
flds
cld
ficoml
xchg
xor
cmp
sbbl
cld
and
mov
xchg
mov
jmp
in
shll
adc
or
mov
lock
sub
add
in
add
repz
cmp
push
lods
xlat
push
call
dec
add
xchg
loope
and
je
adc
fxtract
add
lock
lea
pop
popf
sub
add
out
push
add
mov
mov
xchg
mov
sbb
pusha
push
out
icebp
inc
jns
cmpsb
mov
mov
push
int3
shll
hlt
xor
or
xchg
divb
subb
imul
xor
stos
sahf
add
push
imul
lcall
mov
sub
and
rcll
or
imul
fildll
jb
jge
pop
data16
mov
or
rcl
fisttpll
lods
sbb
pop
jno
or
mov
adc
inc
jle
push
je
xchg
mov
in
ret
xchg
add
into
mov
mov
scas
dec
push
cmp
test
loope
sbb
pop
mov
cmp
mov
mov
or
dec
pop
imul
out
movsl
fdivrs
sbb
aas
cmp
jle
div
xchg
and
sub
and
pop
push
mov
lods
ss
push
cwtl
fadds
pop
adc
jae
jle
subb
insb
jp
mov
xor
and
rcrb
pop
mov
data16
mov
ljmp
pushf
movsb
or
mov
cmpsb
or
shll
lods
sub
sub
adc
dec
add
cs
sbb
mov
scas
jmp
orl
sbb
add
jne
push
xor
xchg
aam
or
mov
xor
sbb
sar
stos
sub
aad
xor
ds
in
test
mov
jb
xchg
and
xchg
movsb
and
das
adc
sub
jbe
test
scas
xchg
adc
pusha
sub
jl
fwait
mov
pop
xor
jne
add
psrld
mov
push
ss
or
and
pusha
cli
imul
adc
in
mov
jne
scas
test
icebp
rorl
inc
sub
mov
mov
test
sbb
in
sbb
pop
add
sub
das
addr16
sbb
sbb
pop
jb
xchg
push
adc
jl
add
pusha
cwtl
scas
fbstp
xchg
call
pop
fisttpl
out
sub
aaa
out
dec
mov
cmp
fists
stc
jne
repnz
in
lods
push
push
subl
pusha
in
mov
jb
popa
adc
cmpsl
sar
cmp
lds
cmp
orl
cmp
add
sti
stc
push
lea
inc
adc
sub
cmp
in
pop
ret
int
jl
stos
jno
adc
call
dec
add
clc
or
jecxz
xchg
xor
pop
outsl
jo
push
fmul
mov
push
dec
jnp
mov
stos
ror
push
pop
nop
mov
faddl
rclb
stos
ret
xlat
xor
movsl
jp
sarb
mov
aad
rcrl
in
mov
cmpsb
or
mov
in
test
dec
inc
pop
daa
cli
mov
mov
ljmp
repz
fcomip
sbb
mov
fbld
push
out
mov
mov
jl
cli
mov
sub
mov
nop
mov
bound
dec
pop
mov
lods
add
ret
stos
roll
push
jle
cmp
jns
pop
andl
pop
mov
mov
out
sub
and
inc
lret
inc
jg
cld
cmpsl
int
mov
mov
loop
cmc
jle
push
fsubp
and
movsl
xor
cli
loope
loope
jge
jge
lods
mov
xchg
std
adc
stos
pushf
push
jmp
popf
sub
lds
sub
je
xor
iret
iret
addr16
dec
ds
or
cmp
lods
movsl
and
mov
iret
pop
mov
sbb
and
divl
fdiv
cmpb
and
sub
mov
mov
mov
and
inc
ret
pop
outsl
xchg
ret
jae
mov
mov
icebp
or
xchg
add
mov
leave
mov
testb
imul
mov
dec
ljmp
loop
aad
xor
loop
push
je
sbb
aas
rclb
shrl
pop
push
je
lods
int3
mov
leave
iret
or
jmp
adc
sub
inc
lahf
lret
and
stc
adc
lcall
icebp
leave
dec
inc
mov
and
or
lret
adc
rcl
je
ja
cmp
out
pusha
push
shlb
stos
pop
inc
sbb
loope
push
dec
aaa
in
xchg
mov
sub
push
insb
sbb
insb
in
repz
and
imul
jbe
repz
data16
imul
scas
fstpl
xor
mov
shrl
xchg
lcall
jbe
xlat
and
pop
mov
mov
jbe
lret
in
out
xor
or
sbb
dec
loope
hlt
or
mov
inc
mov
js
fdivp
dec
xrstor
movsl
or
mov
repz
ret
in
es
das
xlat
rclb
in
adc
adc
out
fisubrl
sarl
jne
leave
jo
cli
ja
adc
xor
and
das
int
adc
pop
nop
xchg
adc
jnp
ds
std
repz
lret
jnp
insl
cmpsl
inc
daa
cmc
hlt
test
jns
mov
jle
jmp
dec
sti
les
mov
leave
xor
loopne
or
mov
mov
and
and
cld
andb
xchg
pop
sbb
xor
dec
xchg
xchg
call
es
cmp
imul
arpl
ret
ret
das
clc
and
inc
adc
inc
cmp
pop
or
sbb
adc
fldcw
into
inc
add
jo
and
adc
sbb
das
aad
ljmp
mov
or
xor
sub
js
push
imul
sbb
xchg
dec
dec
adc
sahf
scas
lahf
test
pop
add
xor
jo
lahf
mov
xor
loope
pushf
shr
cltd
push
fcoml
cltd
dec
ret
xor
sub
pop
leave
loop
pop
mov
in
add
sub
push
fs
sbb
sub
adc
cmp
push
jg
lea
mov
fldcw
xchg
sbb
cmc
dec
lea
mov
dec
dec
in
fldenv
adc
sar
and
xchg
test
lds
mov
negl
out
and
mov
enter
push
jl
popa
int3
pop
xor
mov
or
pop
pushf
xlat
sub
bound
aam
je
inc
fisubrs
mov
clc
sarb
push
lahf
push
cld
lods
pop
sbb
movsb
cld
fimull
test
adc
dec
and
push
cmp
cmpb
adc
test
pop
addr16
aas
data16
sbb
push
ret
movsb
push
iret
adc
pop
imul
jmp
and
fimull
and
pop
popf
or
jg
pop
mov
jnp
and
rclb
je
mov
mov
xchg
mov
xchg
jg
mov
clc
out
and
aas
inc
stos
push
sub
sub
cmp
cmpsl
adc
mov
loope
fistl
and
xor
js
fstl
cmp
sub
in
nop
movsl
mov
popf
pop
sbb
ja
subl
inc
jo
mov
push
adc
adc
pop
jmp
mov
xchg
out
lahf
sbb
push
pop
shlb
dec
ret
out
lods
or
xchg
jg
adc
lahf
push
adc
xor
mov
jno
adc
xchg
std
cmp
sub
xor
cmpsl
lret
push
sbb
cmp
inc
mov
clc
xchg
cwtl
xchg
inc
mov
dec
repz
xchg
int
ss
add
das
insl
sbb
hlt
iret
jg
stos
pusha
fcomps
icebp
jno
xchg
cmpsl
jg
inc
daa
jmpw
lcall
aam
xor
shll
test
stc
inc
fdivp
push
insb
fadd
mov
mov
jb
sub
cmp
fs
sti
mov
stos
jl
mov
pusha
xor
adc
cwtl
test
xlat
insb
call
ficoml
add
nop
and
je
in
fsts
mov
iret
clc
int3
push
jmp
and
mov
jge
lds
dec
repnz
cltd
cld
and
sbb
mov
mov
adc
add
lods
add
cmp
fchs
xchg
imul
fldt
mul
pop
bound
cld
sbb
mov
int3
outsb
sub
out
mov
xor
pushf
cmp
pushf
push
stos
fists
adc
dec
dec
stc
or
cli
lea
inc
pop
xlat
sub
push
lahf
inc
mov
std
push
pop
aad
push
mov
mov
jle
or
les
pop
sahf
pushf
mov
push
loope
mov
ret
scas
xchg
mov
mov
sbb
cmc
popa
push
scas
or
sub
hlt
fcoml
pop
xor
xchg
fxch
out
movb
mov
cmp
pop
push
shll
add
fldenv
lods
mov
xchg
dec
xchg
popf
xor
lret
mov
stos
mov
push
outsb
test
jno
cli
fcoms
sbb
xor
arpl
and
or
cmp
testl
jle
daa
pop
sub
sbb
fcomip
in
mov
aaa
xchg
dec
stos
shrl
stc
sbb
fsubl
arpl
adc
jns
xchg
stos
cmp
lcall
pusha
je
cld
push
out
bound
scas
mov
mov
loopne
arpl
push
out
icebp
fsubr
push
rorb
int
push
push
mov
ljmp
mov
pop
hlt
pop
fisttpll
dec
inc
xor
mov
insl
mov
push
inc
dec
movsl
cmp
cltd
lahf
enter
sbb
push
lods
mov
mov
mov
test
inc
sub
dec
out
adc
mov
movaps
mov
jne
test
addl
inc
fstps
adc
iret
mov
movsb
hlt
repnz
lea
mov
cmp
pusha
lods
cld
daa
test
xor
bswap
mov
pop
mov
clc
mov
icebp
mov
adc
out
sub
add
jne
divl
cltd
ds
push
pop
push
movsb
jg
mov
inc
mov
xor
xchg
mov
mov
jl
sahf
enter
add
sub
mov
dec
mov
sti
xchg
fimull
sarb
rorb
push
sub
loopne
xchg
shlb
sbb
sub
movsl
stos
or
std
dec
push
mov
mov
mov
ficoms
sub
popl
push
mov
mov
scas
mov
cmp
jp
and
adcb
ret
es
mov
outsb
pop
popf
lcall
or
das
adc
xor
fidivrs
pop
rcrb
fidivrs
push
inc
xchg
sub
enter
and
imul
xor
pop
jge
and
test
push
inc
push
pop
stc
jnp
inc
pop
xchg
testb
push
ret
inc
inc
cmp
adc
ficompl
mov
adc
mov
jne
repnz
inc
bound
mov
or
inc
lock
stos
jbe
push
pop
mov
mov
or
popa
and
xor
mov
shll
xor
imulb
xorl
mov
into
in
xor
and
pop
mov
filds
mov
fs
out
jmp
test
pop
sub
jge
cltd
bound
cli
push
lret
xor
lea
mov
outsb
dec
dec
dec
lods
in
bswap
pop
jno
andl
imul
ja
sarl
xor
in
pop
inc
add
movsb
jle
adc
data16
pop
popa
push
jne
ljmp
in
cld
xor
dec
sbb
fcmovnbe
mov
or
fists
rorl
push
int3
addr16
imul
je
movsb
or
push
imul
repz
jae
xor
add
sub
cmp
cld
adc
pop
imul
outsl
jne
inc
call
add
xor
or
insb
inc
mov
mov
decb
int3
cmp
adc
mov
cwtl
stc
rcll
out
aam
mov
mov
sub
std
fwait
popa
mov
sub
add
xor
sbb
shld
aas
arpl
cmpsb
cmp
sub
push
gs
dec
lret
frstor
cli
out
clc
test
jo
repz
adc
cli
xchg
shll
cltd
cltd
cltd
xchg
mov
push
aad
mov
xchg
cmc
jge
rcll
jmp
cli
jmp
fcompl
mov
call
adc
dec
and
cmp
sahf
add
add
aam
adc
lods
test
add
jle
xchg
fmuls
orb
repnz
cld
pop
lcall
aas
out
cmp
xchg
push
mov
cmp
ret
je
add
add
lods
mov
jp
pop
xor
sbb
xchg
lahf
mov
mov
sbb
dec
imul
sbbl
ret
lods
repz
pushf
sub
dec
fsubs
mov
repz
push
ljmp
cwtl
mov
jbe
push
cli
inc
sbbl
sbb
rcl
fstpt
sbb
sbb
cld
test
sbb
jns
scas
imul
mov
xor
inc
lcall
push
fstps
jl
dec
jp
imul
pop
push
es
jnp
aad
jnp
inc
imul
aaa
cmp
push
ret
pusha
rcl
fstps
push
mov
sbb
jmp
and
fwait
dec
test
cli
mov
xchg
clc
xchg
sub
hlt
dec
movsb
enter
fdivs
cmp
xor
add
cmp
add
dec
stos
mov
cmpsl
jmp
and
mov
and
out
dec
mov
or
cmp
sbbb
jecxz
push
or
mov
push
hlt
cmc
mov
stos
sbb
into
ret
bound
sti
clc
sahf
fnsave
push
pop
shrb
mov
xchg
lods
rorb
bound
pop
jmp
cmp
cmp
mov
cmp
jne
insl
push
lret
add
arpl
lcall
xchg
ret
pop
push
jne
cmpsl
mov
jle
sti
inc
orb
push
or
lret
lods
movsl
mov
and
sahf
and
mov
xor
xor
aad
cli
add
fwait
or
int3
dec
lds
mov
pop
stos
ficompl
in
sahf
pop
push
dec
mov
int
shlb
insb
std
ror
inc
mov
sub
movsb
lcall
jnp
and
adc
dec
js
std
in
popf
fisubrl
lea
cwtl
and
adc
fs
and
jns
pop
xchg
cmpsl
dec
xchg
hlt
and
mov
sub
imull
jg
loop
pop
cmp
mov
lods
pop
pop
inc
outsb
xorb
in
lcall
cmp
ret
jne
mul
lock
xchg
dec
popa
xchg
sub
mov
sbb
sub
push
popa
fidivrs
push
dec
or
insb
mov
jle
add
cs
movsb
cld
loop
int3
xorl
lret
sbb
sti
sub
pusha
iret
sbb
shrd
sbb
push
ret
sub
xchg
jo
sbb
push
out
mov
lret
push
scas
loope
mov
fadds
rcrb
push
pop
repnz
cmp
or
ds
sbbl
loop
fists
in
ljmp
shll
cwtl
loop
jne
mov
push
out
inc
orl
add
push
aad
scas
ret
ret
jno
imul
mov
sub
push
adc
cmp
rol
aam
xchg
inc
fstps
ret
scas
lods
flds
ds
pop
mov
out
inc
push
jno
jl
and
int3
fcomip
jle
dec
inc
fdivr
xchg
ficoml
fisubrl
div
lds
out
rclb
fldt
shrl
xor
pop
es
push
mov
andb
fcoml
lahf
lcall
jmp
fcompl
loopne
pop
mov
enter
rep
xor
push
jb
in
popf
jo
jbe
jecxz
xchg
bound
shrd
inc
loope
iret
lcall
xchg
add
cmp
jmp
enter
ss
or
or
jmp
aaa
pop
mov
test
mov
and
jne
pop
sub
andb
pop
cs
dec
mov
cltd
loope
sbb
jne
sbb
push
xchg
outsb
or
pop
dec
xor
inc
sbb
xchg
mov
jb
fildl
cmpsb
cmpsb
push
rclb
es
mov
jbe
icebp
addl
std
or
push
in
jmp
repnz
sti
dec
push
pusha
bnd
inc
popf
or
add
jbe
mov
push
shlb
mov
mov
lods
adc
not
je
mov
bound
imulb
shrd
cmp
xchg
lret
sub
ljmp
mov
mov
leave
or
jne
cli
mov
les
mov
mov
outsl
in
and
inc
in
fs
add
loop
cmp
negl
xor
or
fptan
inc
adc
add
sti
mov
aaa
push
mov
xchg
sub
dec
aad
and
les
insl
arpl
jg
jp
sub
sbb
mov
cmp
rep
int3
sbb
repnz
ja
jp
in
push
out
mov
aam
xlat
bound
gs
fsubrl
rclb
sub
or
mov
clc
into
push
mov
test
pop
sub
mov
mov
popa
mov
inc
leave
sub
inc
dec
push
xor
pop
cmp
shlb
and
mov
fnstenv
push
fdiv
fmuls
xchg
sub
sbb
in
fnstenv
mov
pop
roll
loopne
pop
insb
dec
inc
mov
mov
adc
sub
lret
jbe
fisttpll
push
adc
aam
cmp
and
lock
shlb
inc
shrb
push
fldcw
jg
and
ja
je
lea
sbb
inc
ret
cmp
lock
shlb
jl
cmpsb
mov
pushf
jmp
into
adc
jg
xor
inc
mov
mov
xchg
push
sbb
mov
out
faddl
lahf
pushf
inc
int
inc
mov
jmp
por
stc
cmp
add
mov
out
dec
or
push
arpl
dec
jmp
jbe
adc
neg
mov
dec
pop
dec
je
mul
pop
push
lock
sti
enter
nop
test
das
out
cmpsl
xor
nopl
cmp
sub
inc
push
movsb
pop
mov
push
cmp
sbb
push
sbb
lahf
ds
inc
incb
sbb
dec
mov
stc
cmpsb
into
int3
and
adc
push
mov
lcall
and
jle
push
jbe
adc
add
out
nop
xchg
xor
iret
jmp
mov
mov
test
sbb
pop
xchg
jl
dec
xlat
orb
out
xor
pop
xor
push
popf
push
jmp
cld
mov
insl
xor
add
das
aaa
fwait
push
mov
adc
xchg
repz
add
out
xchg
pop
adc
mov
insl
arpl
and
xlat
jmp
popf
inc
push
mov
dec
cmp
jle
clc
imul
mov
add
ret
add
loop
int3
les
push
push
pusha
stc
nop
jno
imul
fisubrl
add
js
frstor
xchg
nop
std
fidivrl
inc
subl
mov
adc
mov
and
cs
test
inc
mov
es
outsl
xor
in
and
xchg
das
push
inc
ror
push
out
sbb
cmp
loopne
jne
adc
test
jns
cmp
push
mov
mov
mov
mov
mov
mov
pop
mov
or
sub
sbb
mov
mov
mov
and
andb
stc
repnz
clc
pop
std
ret
cmp
sahf
mov
jbe
push
mov
xlat
push
and
sarl
xchg
out
and
clc
jle
div
dec
data16
fcmovnb
lret
cmp
imul
and
outsb
loope
repz
scas
xchg
lret
outsl
out
fs
int
xlat
jnp
mov
es
add
movsb
dec
cmp
loop
stos
jne
fbstp
sti
sub
out
push
shlb
push
out
or
jae
in
movsl
sub
sahf
cmp
sub
sbb
mov
imul
in
loope
mov
and
les
sbb
gs
inc
pop
push
mov
jns
or
xlat
cmp
mov
insl
xor
sub
movsl
in
rcrl
cmp
push
push
sub
mov
outsl
ror
cmp
xor
jmp
xor
mov
stos
mov
jnp
dec
push
stos
fsts
fidivrl
cmc
adc
repnz
xlat
movsb
jnp
push
push
in
out
pop
inc
jecxz
imul
pop
test
nop
xchg
sub
jnp
add
push
sub
pop
adc
movntps
test
fisttpll
lcall
lods
dec
cmc
testl
or
xor
lea
xchg
dec
push
std
and
sub
ret
xor
xchg
cmp
int3
filds
lahf
lods
and
ja
lahf
cmp
push
repz
inc
push
arpl
repz
xchg
aam
mov
clc
mov
mov
aam
pop
dec
lock
lea
sub
or
jge
jmp
test
fidivrs
lahf
mov
add
xor
data16
pop
mov
sbb
lret
daa
or
pop
push
ss
cwtl
cmpsl
ss
icebp
sub
int
adcb
out
cmpb
xchg
dec
std
rcl
insb
insl
push
les
std
jl
sbb
pop
movsb
fisttpll
data16
aad
iret
lods
fcomi
test
mov
xor
pop
je
mov
pusha
xchg
and
cmp
adc
es
pop
mov
mov
in
fwait
add
add
add
pop
add
mov
hlt
pop
je
adcb
aad
inc
or
out
mov
jecxz
lcall
xchg
inc
xor
and
in
jge
jp
adc
push
or
sbb
imul
mov
adc
dec
fisttpl
pop
sbb
imul
cld
jnp
pop
std
les
jo
daa
sahf
hlt
sbb
and
lods
andb
push
ja
xlat
xchg
mov
sbb
js
push
test
mov
loop
int
add
clc
rorl
push
jns
cmp
mov
gs
jb
or
and
les
ret
addr16
nop
leave
jb
pop
jmp
dec
push
xchg
pop
enter
roll
fwait
mov
sbb
lahf
or
fsubl
sbb
cmp
jbe
push
loope
rorb
out
fcmovu
mov
push
push
movl
aad
add
cmc
sub
mov
adc
ret
xor
jmp
les
fnstenv
push
sbb
push
retw
pushf
cmp
pop
mov
pop
lahf
xchg
cmp
add
xchg
in
andl
inc
testl
xor
std
stc
cmp
xchg
lock
adc
cmp
jecxz
cmpl
mov
xchg
jnp
out
push
cltd
push
add
cwtl
push
adc
loopne
cmp
or
dec
push
push
loopne
sbb
ljmp
push
dec
pop
es
insl
decl
lret
js
in
jo
aaa
jne
inc
das
or
das
jle
lret
vcvtss2sd
dec
cmpsl
scas
cmp
inc
push
mov
adc
cmc
or
xchg
push
jmp
scas
xchg
int
and
jge
mov
xor
sub
fsub
mov
cs
xor
xor
mov
aas
arpl
add
movsl
cmp
mov
insb
lods
stos
cmp
add
mov
add
dec
and
pop
mov
aam
inc
sub
push
pop
ficompl
orb
stos
mov
test
pop
push
pop
stc
sbb
jp
xor
lahf
cmpsb
ljmp
push
push
out
test
mov
pushf
stos
scas
jp
or
stc
lcall
mov
dec
pop
mov
add
and
xchg
xor
adc
push
adc
negl
jp
jp
push
loopne
or
movsl
in
les
pop
pushf
aaa
jo
shlb
pushf
sbb
daa
cmc
dec
dec
fcmovnu
adc
mov
js
gs
out
out
xchg
xchg
mov
push
dec
mov
mov
mov
bound
lods
repz
inc
xorb
adc
adc
sub
shrb
jmp
cmpsb
lods
movsb
pop
push
sbb
dec
movsb
scas
loope
mov
shll
mov
jb
subb
sub
pop
das
push
rol
shrb
shlb
sbbb
movsl
in
and
and
or
cs
lret
and
bnd
or
fsubr
sub
cmp
inc
mov
or
mov
mov
rorl
jp
mov
cmp
fstp
cmp
sti
rorl
xor
inc
lods
daa
xchg
adc
lds
inc
jnp
fwait
int3
push
iret
xchg
push
pop
sub
cmp
lcall
stos
call
add
cltd
xor
xchg
sbb
pop
push
mov
inc
idivb
push
mov
outsl
lret
jo
sbb
sbb
lods
out
outsb
stc
push
fldt
clc
or
cld
or
xorl
ror
adc
jns
mov
stos
pop
pop
and
lahf
xchg
mov
sub
es
outsb
pop
pop
dec
aas
std
in
arpl
sub
add
movsb
fdivl
sahf
jae
out
mov
jo
aaa
mov
mov
mov
test
in
mov
xorl
or
push
push
cs
roll
aad
fsubs
jmp
test
xchg
pop
cmc
jle
idivb
int3
dec
pushf
push
sub
mov
mov
add
lcall
scas
mov
jno
and
sbb
hlt
cmp
mov
repz
ljmp
push
sub
ljmp
and
fdivrl
jecxz
xchg
fs
iret
clc
pushf
adc
sbb
xor
shlb
or
jecxz
adc
sub
push
mov
push
sti
cld
je
dec
rol
mov
repz
fwait
lea
pop
shl
sbb
dec
jl
fwait
jno
sub
insb
insb
mov
test
filds
out
aaa
mov
jg
int
les
xchg
jp
xlat
insb
jmp
or
and
dec
out
mov
cmp
fbld
stos
adc
out
ret
shl
add
add
cmp
pop
shr
cli
mov
leave
xlat
push
out
mov
mov
jo
test
loop
fnstenv
jle
fsub
add
mov
sti
xchg
inc
in
f2xm1
pop
xchg
add
add
pop
jmp
mov
cmpsb
and
adc
rcl
push
fiadds
outsl
and
jmp
xchg
sub
rolb
xor
xor
sbb
insb
out
repnz
inc
arpl
push
rcll
sbb
ljmp
fbstp
and
imulb
mov
push
inc
sbb
fildl
inc
pushf
ret
cmpsl
divb
inc
lock
or
push
scas
into
dec
out
jge
and
rcl
int3
aad
pop
or
call
xor
push
cmp
imul
cmc
icebp
pushf
or
outsl
lds
loopne
cmpb
pop
cmp
cmp
xor
add
push
xor
sti
push
cmp
mov
adc
or
mov
je
add
and
fcom
movsb
mov
out
dec
push
dec
push
es
or
popa
mov
jae
push
insl
mov
aad
cmc
cld
mov
xchg
stos
loopne
inc
mov
and
mov
mov
inc
lahf
stos
sub
test
push
mov
lret
aad
lahf
and
mov
cltd
das
rorl
addr16
jmp
int3
pop
ljmp
addr16
mov
inc
xor
mov
adc
rorb
aam
sbb
mov
jae
xchg
push
and
push
enter
subl
pop
pop
inc
sub
test
jg
ja
pop
hlt
les
insl
mov
pop
push
push
add
stos
cmp
or
xchg
adc
and
mov
adc
sub
mov
add
out
lret
push
repnz
add
mov
inc
es
adc
fs
ffree
dec
out
cmp
cli
xor
and
inc
imul
add
dec
jmp
dec
aam
sarl
xchg
sbb
adc
addb
gs
pop
je
cmp
inc
jecxz
test
pop
adc
fdivrl
mov
sti
adc
xor
ret
std
popl
sub
mov
stc
fmull
push
jge
jne
adc
jge
les
cmpsl
sbb
mov
stc
or
jo
xchg
cmp
lret
icebp
popf
aas
mull
and
ljmp
jae
pop
sahf
scas
mov
jle
fstpl
mov
lea
sbb
pop
push
xlat
ffreep
inc
or
jp
xorl
jne
and
jle
xor
popf
mov
mov
push
jle
insb
push
mov
push
test
mov
and
roll
push
xor
add
cmp
aad
fstps
mov
xchg
jo
cmc
jns
or
adc
call
insb
orb
adc
outsl
sahf
sbb
mov
or
dec
add
push
js
fs
mov
test
pop
arpl
pop
outsl
out
sub
mov
pop
push
cmp
imul
int3
xchg
dec
data16
sti
sahf
push
jae
lds
jge
pop
or
adc
test
movsb
sub
pop
lret
sub
loop
dec
bound
inc
mov
xchg
in
cmpsb
cmp
xchg
ja
push
cmp
neg
xor
jnp
add
pop
mov
jb
pop
dec
dec
aam
je
mov
out
sarb
push
add
dec
xor
aas
xchg
add
cwtl
sbb
test
testl
cmp
test
cld
icebp
cmp
imull
orb
in
aam
leave
pop
or
xor
jl
out
and
inc
push
jne
mov
mov
cmpl
or
mov
pop
sahf
jp
adc
mov
popa
sbb
dec
adc
icebp
add
cmpsb
dec
into
sbb
insl
jg
lds
cld
dec
out
cmp
or
sahf
xchg
mov
das
outsb
sub
jno
mov
daa
jmp
xlat
mov
arpl
jge
mov
sbb
jmp
or
das
sub
xor
outsl
mov
add
outsl
mov
pop
pop
adc
test
adc
xchg
push
jl
hlt
adc
jnp
into
push
sub
adc
push
sbb
mov
push
sub
daa
cmp
repnz
mov
pop
div
add
mov
iret
fisubs
push
xor
cmp
ficomps
imul
lea
nop
dec
cmpsl
jo
inc
sbb
jecxz
jp
aaa
test
pop
xor
aad
dec
inc
xchg
lret
push
or
test
jg
dec
add
push
test
dec
jl
data16
jmp
inc
push
mov
inc
loopne
int3
ret
sar
pop
es
cld
mov
pop
push
mov
fidivl
lods
lods
push
lcall
pop
or
dec
jbe
frstor
adc
ja
fildll
bound
lcall
movsb
push
inc
hlt
jle
repnz
push
into
pushl
mov
cmp
push
mov
mov
inc
cmp
cwtl
xor
loop
add
jp
xchg
adc
fwait
cmpsb
sub
insl
jo
in
jne
iret
nop
std
cmp
insb
nop
xchg
pop
sbb
and
fadds
push
lods
cwtl
sbb
mov
xlat
mov
xor
push
xor
xor
ds
and
mov
lock
leave
icebp
test
out
and
jp
add
lock
or
and
fiaddl
icebp
mov
push
in
cwtl
add
int
stos
xchg
mov
cmp
xchg
xlat
sbb
jle
ror
sbb
into
xor
mov
inc
fstps
inc
xor
pop
jg
inc
enter
mov
sbbb
jmp
roll
cmpsb
rorl
pop
xlat
fildl
xchg
cld
push
pop
jl
out
xor
jl
cmc
dec
cli
iret
jge
rcll
push
jl
imul
cmp
dec
cmp
jmp
xor
addr16
stos
inc
cmp
ficomps
add
in
leave
loopne
mov
jne
jl
stc
filds
cmp
es
imul
dec
push
gs
iret
sub
add
out
ljmp
ss
push
shl
out
call
ret
int
ja
push
xor
sbb
push
cmp
icebp
inc
aas
call
mov
fcompl
cmpsb
aas
lret
jecxz
or
adc
xlat
popa
xlat
push
popa
insb
inc
cmpsb
and
ja
pop
mov
pop
pop
mov
cmp
mov
or
mov
ret
xlat
lock
pop
scas
ja
cmp
dec
ret
enter
jl
negl
push
and
jnp
sbb
xchg
nop
fwait
sub
repz
test
std
mov
in
rcrb
adc
das
mov
in
jbe
dec
daa
xor
mov
cs
es
push
sbb
or
aas
jns
repz
xchg
out
xor
iret
sub
and
adc
sbb
frstor
cmpsl
insl
iret
inc
icebp
fiaddl
pop
das
jmp
dec
xchg
loopne
adc
dec
or
cmpsb
adc
mov
or
jne
adc
cmp
lock
mov
cmpsl
xchg
in
repnz
mov
pop
int
das
dec
fwait
cmp
movsb
cltd
add
js
mov
and
rolb
sub
call
fdivl
mov
movsl
popa
and
out
mov
mov
and
lods
pop
cmp
jge
xchg
mov
cs
cmp
jns
add
or
lods
insl
cmp
xchg
loopne
mov
sarl
fmuls
dec
push
scas
jns
add
in
xchg
adc
mov
loope
xchg
int3
daa
add
push
movsb
mov
add
imul
add
icebp
ss
inc
movsb
push
lods
leave
push
or
cmc
mov
and
out
mov
push
mov
lcall
fsubrp
out
std
repz
mov
xchg
add
out
pushf
mov
xor
xor
push
lock
push
dec
add
xor
dec
and
xrelease
aam
psubw
movsb
mov
ljmp
outsl
add
popf
inc
sbb
inc
outsl
or
pop
pop
adc
dec
mov
daa
inc
sub
or
inc
loop
or
in
fs
ds
or
mov
push
loope
mov
ljmp
mov
sub
dec
leave
adc
rcrl
sub
xor
or
pop
cli
nop
or
or
in
shl
and
stos
bswap
scas
xor
lret
lret
loopne
jg
inc
xor
or
xchg
mov
ja
adc
out
mov
js
jbe
cmp
lds
xchg
xchg
push
bound
xchg
push
lret
cmpl
pop
xchg
push
adc
or
dec
jmp
das
arpl
xor
mov
shll
lcall
push
lahf
lods
jbe
bound
lret
in
mov
sub
stc
clc
inc
pop
xchg
cltd
push
lcall
mov
dec
xor
ret
pop
fdivrp
mov
out
ret
jne
xor
mov
sbb
jne
cmpl
js
cld
jmp
push
push
and
mov
dec
lods
push
push
pusha
pusha
ljmp
pop
dec
inc
ss
pop
and
adc
in
lods
pushf
test
or
stos
call
mov
test
sbb
push
cmpsl
daa
pop
imul
test
push
out
std
and
xor
mov
loope
adc
jge
fsubl
and
pop
sbb
je
or
jns
jp
xlat
in
lahf
lds
loop
stc
jle
ss
shlb
lret
sbb
inc
add
addr16
cmp
scas
insl
test
scas
cmp
data16
push
lret
pushf
dec
gs
jb
test
aaa
mov
je
mov
and
data16
adc
add
xchg
jno
push
mov
and
int3
ja
add
movsl
xchg
outsb
and
cmp
mov
push
es
mov
into
sub
xor
mov
lcall
data16
loopne
insl
sar
push
cmp
adc
cmp
sub
icebp
lcall
push
xchg
jno
pushf
xchg
aam
nop
rclb
pop
push
xchg
outsl
adc
adc
xor
mov
mov
jb
pop
rcl
addr16
ss
test
pop
xchg
out
add
sbb
movsb
je
outsl
insb
jb
adc
xchg
mov
out
pop
inc
pushf
clc
nop
push
ret
jno
rcrb
mov
mov
push
jno
pop
cmc
xor
stos
rcrl
fwait
push
ret
xor
add
jg
mov
fnstcw
xchg
xor
xchg
imul
mov
popw
rorb
sub
xchg
mov
mov
push
repnz
jmp
pop
popa
cld
call
cmpsl
adc
mov
or
mov
jecxz
das
adc
mov
movsb
movsl
lret
je
loope
add
adc
xlat
pop
jecxz
fstpl
xlat
inc
push
pop
xchg
adc
pop
call
pusha
push
jge
push
jno
into
fstp
sar
stos
cmovge
or
or
out
idivl
xchg
mov
inc
decb
gs
lods
fcompl
lcall
mov
lods
add
cmpsb
data16
imul
sbb
cltd
mov
jecxz
not
sti
push
in
test
sub
pop
lret
test
stc
mov
pop
or
shrb
repz
out
jg
lcall
push
in
jo
xchg
fisttps
mov
inc
dec
xor
loopne
xchg
lods
xor
mov
addr16
sbb
stos
scas
stc
sbb
jbe
adc
inc
lret
sbb
or
scas
fnstsw
mov
roll
pushf
lods
xchg
sti
lcall
and
xor
shll
mov
sbbl
jnp
cmp
les
xor
adc
in
mov
mov
mov
cwtl
push
sbb
xchg
mov
add
add
cmpsl
outsb
sbb
fptan
std
mov
cmc
in
dec
idivl
test
adc
dec
subl
cli
add
lret
aas
test
dec
jle,pn
sti
fwait
pop
popl
stos
jecxz
mov
outsb
mov
mov
sbb
mov
movsb
js
fstl
mov
dec
ja
jle
scas
fidivrl
push
dec
mov
dec
fistl
sub
jne
pop
mov
inc
or
push
pop
lret
mov
pop
cmpsl
cmp
xchg
pop
int3
int
cltd
cmp
xlat
mov
lods
test
ds
inc
sub
cmp
xor
fldl2e
jg
push
mov
jb
loop
pop
inc
test
insl
js
test
xchg
cmp
rcr
loop
xor
popf
cmp
adc
jle
ret
and
cltd
rcll
sub
cli
pop
int
adc
leave
lcall
push
mov
inc
fistl
movsl
xor
lahf
pop
cmp
sub
cwtl
outsb
cmp
inc
orl
dec
out
test
push
and
insl
push
push
push
imul
subl
xchg
scas
mov
mov
ss
and
insb
psllw
inc
adc
jl
xlat
adc
lahf
test
xor
jle
xchg
movsb
cmp
subb
enter
inc
mov
xlat
outsl
cltd
std
call
or
sbb
dec
xchg
les
in
mov
scas
imul
push
popa
sub
sbb
xchg
dec
stos
sarl
rorb
ja
sbb
mov
pop
inc
mov
sti
cld
popa
arpl
mov
hlt
scas
rcll
loopne
inc
cmp
xlat
cld
test
cltd
int
cmp
mov
dec
lock
les
ficoms
mov
push
es
fcoml
shlb
fsubl
push
jmp
movl
call
cmp
cmpsb
pop
inc
add
in
sbb
push
subl
aas
jmp
xchg
aaa
push
sub
leave
jmp
iret
cs
sbb
xor
xor
mov
push
mov
adc
popa
xor
mov
aam
aaa
jmp
mov
mov
jno
cmp
les
mov
xchg
jmp
mov
in
adc
imul
std
xor
or
arpl
sbb
imul
pop
not
xor
xor
dec
sub
push
inc
mov
jle
inc
mov
push
das
call
cmp
cmc
fldcw
daa
rol
xchg
enter
cmp
fmuls
sbbl
pop
pop
xchg
and
lcall
fwait
out
cli
xchg
loopne
shr
cmp
or
stos
mov
lods
mov
mov
push
sbb
pusha
or
lret
adc
xchg
push
int3
mov
into
inc
xchg
sbbl
mov
loop
lret
in
lods
cmp
arpl
or
mov
movsl
jl
gs
jl
mov
inc
les
push
movups
int3
aad
lea
push
outsl
je
mov
mov
aad
test
imul
inc
pop
shll
ds
pop
lret
movsb
mov
lcall
sub
cmpl
fildl
cltd
and
fsts
jae
in
push
pop
push
jns
pop
lcall
sbb
js
mov
inc
cld
xlat
pop
subl
mov
out
lods
jp
addl
mov
xchg
idivb
pushl
push
lods
add
lret
icebp
dec
pusha
cs
gs
inc
push
and
iret
sbb
xlat
cmpsb
push
inc
and
scas
sbb
insl
adc
mov
int3
pop
test
push
orl
rolb
xchg
xor
xchg
xor
mov
jae
std
fimuls
mov
testl
cmp
jo
push
mov
adcl
repz
pop
dec
mov
sbb
inc
or
ret
into
daa
sar
pusha
rolb
fs
jb
dec
stos
jecxz
mov
xchg
cmp
lahf
fsubl
iret
fs
test
das
loop
loope
and
sub
andl
fdivp
movsl
pop
adc
fistpl
fdivr
mov
pop
movsb
lahf
cmp
loop
out
mov
xor
test
jo
repnz
mov
jb
mov
bound
push
sub
adc
jns
sbbl
aad
jbe
hlt
sbb
leave
in
scas
popa
enter
pop
int
jp
aas
xor
ss
pop
andl
aam
pop
lret
add
mov
fstpl
cmp
pushf
js
out
or
or
scas
sbb
cli
es
out
decb
or
mov
mov
lods
sub
and
and
mov
mov
fwait
incb
aam
push
sbb
sbb
add
add
fldt
adc
ds
sub
pop
mov
arpl
pop
lret
cli
jecxz
sbb
dec
fwait
sub
mov
aaa
mov
push
mov
movsb
push
xchg
pop
push
xchg
jl
scas
or
jg
fmul
adc
lret
fsubl
mov
ret
sub
xchg
pop
xlat
dec
lcall
ljmp
cwtl
popa
out
xchg
dec
das
insl
cs
movsb
int
out
js
or
cmpsl
cmp
int3
sbb
pop
jno
iret
push
inc
jl
sbb
movsl
adc
cmp
fsincos
dec
adc
xchg
mov
lahf
cmp
ja
jbe
test
mov
xchg
mov
dec
inc
cmp
jge
add
clc
leave
add
in
aas
pop
cs
jae
adc
dec
clc
cmpsl
push
adc
call
test
mov
divl
ret
dec
sbb
push
imul
jge
outsb
in
add
sahf
xchg
xchg
cmpsb
cmp
imulb
ret
mov
pusha
fdivrs
aaa
repnz
scas
movsl
idivl
int3
sub
bound
stos
loope
out
insl
add
mov
or
cmp
rolb
mov
test
bound
test
lcall
and
cmc
ret
sahf
loopne
fisubrl
pop
lock
stos
adc
mov
loopne
ja
or
jo
and
xor
outsl
data16
flds
cmp
cmp
subl
mov
mov
loope
rolb
dec
in
popf
out
push
sub
xchg
cmp
mov
int
pop
sub
jns
imul
scas
jge
mov
jae
leave
xchg
sub
mov
arpl
push
sbb
xchg
nop
add
scas
mov
cwtl
test
mov
xorb
fcmovne
rcrl
pop
ljmp
inc
js
es
call
pop
pop
mov
pop
out
dec
mov
jmp
jns
cmp
in
fistpl
loopne
ret
lcall
decb
fstl
xchg
shll
mov
pop
lds
and
stc
pop
mov
sub
pusha
repz
jnp
sub
lret
jle
mulb
inc
cmp
pop
add
pusha
js
push
xchg
xor
int
pop
mov
mov
push
pop
shlb
cmpsb
in
mov
inc
icebp
push
inc
dec
lahf
dec
xchg
cmc
push
mov
pop
push
movsl
repz
call
mov
enter
mov
repz
std
sbb
sbb
and
lea
rorb
jg
leave
iret
inc
push
mov
mov
ret
data16
xor
les
arpl
mulb
mov
fdiv
cmp
imul
out
jle
jne
stos
push
cmc
sub
in
orl
jne
shrl
fwait
iret
dec
aaa
jbe
jae
mov
rorb
and
push
lods
mov
outsb
xchg
scas
sbb
jge
pop
add
out
jl
sub
push
inc
mov
mov
mov
xor
xchg
sbb
cld
or
push
mov
out
paddsb
dec
mov
lock
or
mov
jnp
mov
adc
push
push
push
stc
imul
andl
push
ljmp
dec
inc
xor
xchg
adc
loope
mov
inc
mov
aad
lahf
repz
mov
sar
rclb
jge
jecxz
push
jg
add
xchg
mov
and
inc
pop
mov
test
outsl
xor
cld
sub
mov
push
sarb
shl
cmpl
xchg
icebp
lahf
adc
add
fdivrl
xchg
push
pushf
xchg
xor
add
dec
popf
out
rcll
jp
mov
and
or
and
pushf
xlat
test
fs
pop
dec
mov
jmp
arpl
imul
cmpsb
clc
xrelease
ja
push
std
es
dec
stos
pop
sahf
xchg
outsl
loopne
out
lret
jbe
add
push
sti
lods
jno
pop
in
pop
pop
scas
ss
or
dec
and
jmp
cmp
jle
xchg
rorb
jns
std
bound
sub
pop
jb
insb
mov
pusha
ss
pop
aas
jne
xchg
fdivr
add
mov
sahf
mov
xchg
out
xor
and
je
mov
or
ret
xchg
je
incl
cs
mov
mov
aam
and
xlat
push
jp
stos
out
or
xchg
idivb
push
movsb
insb
rorb
and
cli
push
imul
lock
cld
sub
nop
jg
fcmovu
jmp
add
xor
xor
adc
icebp
xchg
xor
or
iret
lds
jp
loop
mov
sbb
inc
repnz
xchg
adc
mov
rcr
pop
jl
jne
mov
call
lahf
aam
jo
push
xor
test
clc
and
cmp
dec
xchg
flds
in
push
fsubs
cmp
cmpsl
gs
lcall
les
ret
pop
sub
fidivrs
jo
loop
mov
inc
cltd
mov
ljmp
mov
mov
add
xchg
lcall
mov
adc
inc
popa
fwait
cmp
rorb
xor
lret
mov
jo
xchg
js
fnsave
adc
and
je
aaa
je
xchg
pop
jb
push
sbb
push
push
sbb
push
les
outsl
int3
mov
sbb
sub
inc
add
cmp
insb
cmp
scas
sub
xor
adc
lcall
rol
and
outsl
nop
adc
sti
push
mov
lcall
es
add
adcl
gs
test
daa
add
aam
orl
int
subl
arpl
xchg
outsl
mov
mov
test
out
orl
idiv
fistl
sti
ja
inc
jo
push
inc
mov
clc
jns
mov
push
sub
inc
loope
xor
and
and
aad
jg
xor
xchg
repz
fs
lahf
aaa
insb
inc
cmp
mov
repnz
jo
shl
xor
pop
mov
jno
idivb
cld
out
orl
pop
dec
scas
sub
cmp
int
or
roll
mov
cmp
shrl
or
xchg
orl
xor
or
xchg
dec
daa
punpckldq
mov
add
loopne
mov
and
push
sti
nop
jmp
data16
notl
lret
gs
iret
dec
mov
xchg
jge
pusha
jnp
cmpb
add
dec
push
fiadds
jb
and
repz
mov
inc
enter
faddl
leave
nop
int3
cs
mov
fbstp
xor
jo
push
ds
jne
test
fiaddl
loop
sbbl
pop
test
jge
lds
andb
adc
leave
cmp
sbb
mov
adc
fstpt
xor
push
push
daa
js
imul
lahf
dec
push
push
push
push
adc
dec
imul
add
xchg
hlt
jge
sbb
addr16
push
int
popa
inc
jnp
inc
sbb
scas
sahf
xchg
std
test
dec
sar
fsubl
xor
pop
xor
pop
mov
out
movsb
pop
scas
in
nop
cmpsl
mov
lea
out
in
add
loop
mov
add
push
cmp
jmp
xchg
or
jmp
out
nop
mov
or
mov
leave
mov
jb
push
dec
movsl
in
in
mov
imul
imull
negb
add
cld
sub
inc
gs
xchg
jp
test
push
sub
pop
push
aad
das
leave
cld
sub
or
xchg
jmp
ret
imul
lret
aam
sahf
jnp
insl
jl
inc
sbb
data16
sbb
loope
insb
or
adc
mov
repz
add
pop
cld
inc
mov
add
xor
fs
lahf
jo,pt
and
mov
mov
sarl
cmpb
aam
push
call
inc
mov
aas
imul
ja
in
pushf
jmp
in
arpl
cwtl
sub
and
nop
jle
add
fmull
mov
loopne
sbb
ret
je
pop
enter
cltd
add
jp
jnp
add
pop
addl
jp
push
adc
fistps
xor
jp
add
or
out
into
imul
out
mov
jge
ljmp
mov
push
or
sarb
mov
inc
out
xchg
loope
cwtl
add
insb
mov
js
add
sbb
fimuls
mov
dec
cmp
dec
lods
xor
xor
pop
push
call
insb
mov
popf
push
xchg
mov
adc
into
jb
sahf
das
xchg
cmp
xorb
int
test
adc
adc
ja
xor
sbb
pop
jns
test
test
mov
and
pop
leave
ficomps
xor
xchg
cmpsb
aaa
mov
ds
dec
pop
mov
cmp
add
leave
pop
mov
test
int
or
and
imul
push
cmc
clc
jne
loope
shl
lods
mov
sar
xchg
pop
sarl
loope
and
das
cmp
repnz
push
shrb
fiadds
pusha
add
dec
rcrb
cmpsl
in
push
ja
adc
gs
jge
shlb
sbb
lret
fcoml
cmpsl
int3
jnp
mov
insl
add
jl
xor
dec
xor
mov
pop
jp
shrb
stos
notb
fbstp
adc
adcb
or
push
sbb
mov
out
gs
cmpsl
lahf
sbb
loope,pn
fdivs
cwtl
xorl
icebp
sarl
lcall
mov
jecxz
nop
cmp
lret
push
rclb
push
dec
cmp
push
pop
mov
and
jns
adc
icebp
es
ja
cmp
ja
mov
cld
rolb
shll
sarb
pop
mov
insl
cmpsb
rclb
sub
cmp
mov
pop
dec
movsl
jae
xor
pop
add
xchg
fdivrs
xor
jae
dec
cmp
push
cmp
add
push
mov
data16
adc
adc
mov
mov
dec
xor
pop
mov
push
or
mov
subl
stc
xorb
pop
push
inc
mov
mov
sub
xchg
add
stos
nop
repnz
arpl
add
push
sbb
jbe
jecxz
push
leave
add
sbb
cmpsl
push
loopne
push
aam
add
loopne
ret
push
pop
das
inc
fstps
jno
dec
jae
rcrb
pushf
test
add
and
xchg
fcmovbe
ret
or
or
pop
or
cmpsb
mov
lret
fstp
cltd
loopne
in
lea
pop
sub
aam
jb
xchg
dec
xor
cltd
ss
stos
mov
pop
jmp
pop
decb
cld
mov
inc
sub
lds
out
mov
jle
sub
mov
out
and
jg
cli
fdivr
xor
mov
mov
pop
mov
rcr
cmp
sub
stos
sbb
mov
sbb
es
addl
loopne
mov
mov
pop
or
es
adc
and
mov
mov
mov
push
jne
jno
or
enter
push
pop
test
inc
inc
push
inc
ja
and
and
rcrb
xchg
or
int
pop
mov
test
jge
scas
inc
pushf
adc
and
dec
dec
popa
fwait
nop
push
inc
fildl
insb
inc
cwtl
inc
xlat
bound
push
xor
dec
fstpl
mov
jecxz
insl
fisubs
pop
push
leave
add
jne
sub
mov
arpl
call
imul
out
aaa
movsb
js
pop
in
mov
mov
daa
mov
inc
xorl
mov
cld
cwtl
mov
push
lcall
xchg
or
popa
out
je
bound
in
loopne
test
inc
lret
arpl
lods
xor
jns
pop
adc
rolb
mov
test
scas
mov
repnz
dec
push
add
repnz
push
cltd
shlb
or
imull
pop
in
sahf
sbb
loope
pop
mov
xor
insl
xor
push
push
dec
xlat
mov
aad
pusha
ljmp
push
xor
cmpsl
sbb
dec
xchg
imul
fisttps
loopne
fisubl
fnstsw
xchg
scas
loope
ljmp
iret
icebp
call
packuswb
cld
lahf
out
stos
mov
cmp
jae
test
xchg
mov
xor
inc
and
call
movsl
mov
mov
sub
imul
mov
xchg
sub
dec
popf
adc
push
ficompl
loope
jl
sub
addr16
pop
and
and
test
inc
cli
sub
out
xchg
and
sub
inc
sub
mov
xor
and
test
jns
add
pushf
cli
xor
int3
fimuls
cmp
ror
xchg
and
sbb
mov
rcrb
xchg
mov
mov
or
cltd
fistps
imul
fcomps
in
lcall
std
and
adc
lret
imul
loopne
jno
xor
adc
cmp
adc
movsb
ds
sti
push
sahf
adcl
adc
lock
mov
xchg
sub
lahf
insl
fsubl
sub
sahf
xor
lret
shlb
lods
and
bound
shlb
xchg
movsl
jge
test
int
rcrl
or
sub
adc
lret
push
iret
call
outsl
jae
cltd
jge
add
aaa
xor
pop
je
aas
dec
cmp
xor
sub
int3
inc
leave
in
jns
stos
stos
add
jecxz
pushf
push
pop
dec
movsl
sarl
sbb
icebp
jb
xor
out
mov
rcll
lea
nop
jae
cmovg
mov
adc
insl
mov
lea
cmc
cmpsl
mov
pop
or
stc
inc
or
add
test
arpl
test
xor
sti
pop
sbb
in
or
inc
push
sarb
imul
data16
stc
mov
out
lock
mov
mov
jge
std
ret
sub
add
loop
std
popa
aaa
sbb
pop
xchg
xchg
test
or
jge
jb
repnz
scas
call
repz
mov
repz
test
dec
sar
je
jmp
int3
mov
sbb
dec
cmpsl
xchg
dec
jno
mov
popa
ds
inc
loop
dec
push
into
into
cmp
pop
jp
or
or
dec
and
cmp
cmc
decb
notb
sub
enter
dec
add
cs
xchg
jg
in
inc
xchg
es
adc
inc
outsl
cltd
bound
mov
dec
std
aas
sahf
lods
cmpsl
push
push
push
and
aam
adcl
and
outsl
ret
xor
ds
cwtl
xchg
cld
sbb
jb
sti
cwtl
loope
xor
das
xchg
repz
mov
xchg
imul
push
mov
mov
sarb
push
sbb
inc
enter
js
roll
pop
int
pop
add
jno
call
adc
imul
mov
shl
les
or
sub
loopne
movsl
xchg
or
mov
jbe
or
sub
gs
daa
mov
push
xchg
and
sub
cmp
jno
or
xchg
cmp
fisubs
int3
cmp
hlt
sub
lret
xchg
fisttpll
jne
adc
pop
shl
push
mov
test
mov
imul
mov
in
faddp
lret
mov
pop
add
gs
push
cli
adc
dec
gs
xchg
push
or
out
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
mov
sub
and
cwtl
cwtl
sarb
mov
push
push
dec
add
xor
sub
lret
sub
xor
cmp
dec
sbb
scas
adc
jl
xchg
cmp
movsl
jmp
sbb
mov
mov
mov
jo
call
or
movsb
js
outsb
daa
mov
mov
mov
lods
sahf
test
mov
aaa
popa
or
dec
push
pop
push
push
inc
outsb
mov
jnp
adc
push
xchg
cmp
cmp
add
les
adc
aam
push
sbb
cmp
xchg
ds
loop
pop
stos
cmp
bound
cmp
xchg
mov
push
dec
fsubr
jmp
aam
pop
or
mov
rorb
xchg
outsl
dec
or
push
push
mov
pop
ds
dec
es
cmp
addr16
xchg
fmull
adc
sti
xor
sub
jne
and
mov
cmp
jae
jbe
pushl
pop
mov
arpl
int
es
pop
add
xchg
cld
inc
push
roll
rcl
adc
iret
push
adcl
xchg
add
inc
xchg
repz
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
mov
add
