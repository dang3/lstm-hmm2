push
mov
sub
push
push
push
not
add
rcr
xchg
lea
lea
push
not
neg
neg
rcl
add
xor
lea
adc
ret
lea
mov
and
mov
mov
lea
xor
mov
xor
lea
lea
xor
xor
and
xchg
add
lea
xor
xor
rol
neg
rcr
add
mov
lea
xor
xor
mov
rcr
xor
mov
rcl
mov
lea
lea
not
xor
rcl
xor
mov
xor
not
xchg
adc
xor
xor
mov
neg
lea
lea
shr
neg
lea
lea
lea
add
mov
rcl
xchg
xor
xor
xchg
add
lea
xor
lea
adc
xor
xor
xor
push
lea
mov
rcl
rol
mov
and
not
neg
lea
rcr
push
mov
mov
shl
neg
lea
lea
xor
call
push
lea
xor
shr
xor
xor
mov
xchg
xor
mov
pop
rcr
mov
mov
xchg
rol
mov
xor
xor
rcr
lea
not
shl
xor
neg
xor
shr
lea
lea
xor
mov
not
shr
lea
not
xor
cmp
je
xchg
mov
xor
or
je
mov
xor
mov
add
xor
add
neg
mov
mov
xor
mov
mov
and
lea
lea
shr
lea
rcr
shl
xor
xchg
mov
xor
xor
not
not
lea
xchg
add
mov
neg
lea
mov
mov
rcl
neg
mov
mov
xor
and
ror
xor
not
lea
neg
shr
not
adc
mov
neg
and
xor
xor
mov
xor
mov
add
xor
mov
rcr
mov
and
rcr
cmp
je
xor
lea
mov
xor
lea
add
xor
lea
not
rcl
xor
rol
and
mov
push
call
xor
xor
add
shr
mov
xchg
rcl
xor
neg
neg
xor
xor
ror
mov
not
add
xor
rcl
mov
movl
add
xchg
mov
xor
rcr
lea
mov
adc
movl
lea
xor
add
lea
lea
lea
lea
xchg
ror
lea
not
neg
lea
rcr
lea
rol
lea
mov
neg
mov
rol
lea
neg
xor
add
lea
mov
xor
rcr
push
mov
not
xor
mov
xor
push
adc
lea
and
lea
mov
xor
mov
rcl
lea
pushl
not
lea
mov
lea
add
pushl
neg
not
and
not
lea
call
mov
shr
mov
xor
xor
neg
add
lea
not
mov
neg
lea
ror
xor
shl
not
xchg
neg
ror
mov
mov
lea
lea
neg
neg
mov
xchg
mov
shrl
and
not
lea
lea
mov
adc
xor
mov
and
mov
neg
mov
lea
not
neg
mov
and
not
and
ror
mov
mov
mov
mov
xor
lea
adc
not
shl
not
push
neg
xor
not
add
and
xor
mov
neg
mov
lea
lea
adc
lea
adc
xor
not
neg
neg
xor
add
xor
xor
popl
mov
neg
neg
lea
adc
add
add
rcr
not
not
lea
not
mov
neg
lea
lea
not
lea
ror
decl
jne
xor
adc
xor
lea
xor
lea
adc
mov
neg
and
lea
mov
mov
mov
neg
lea
rcr
neg
xchg
xor
xor
and
ror
xor
shr
xor
xor
lea
shr
lea
mov
shl
jmp
not
rcr
xor
adc
ror
mov
mov
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
bound
sbb
cmp
and
mov
cmp
scas
lds
insb
xor
cs
cmpsl
inc
mov
cmp
nop
pushl
in
aaa
push
loope
dec
and
cmc
roll
in
sbb
mov
lret
fldt
xchg
mov
stos
call
cmp
pop
shl
sbb
mov
push
divl
stc
cmp
mov
sub
xor
mov
ficoml
addb
sbb
fcmovnb
aas
cmp
or
ficomps
mov
stos
cld
aas
inc
cmp
mov
sbb
mov
lods
jne
cli
pop
pop
pop
mov
orb
iret
shl
jg
push
stos
scas
xor
sbb
xchg
push
pop
stos
mov
sbb
add
lret
xchg
ret
inc
test
sbb
xchg
cmp
cmp
mov
lock
fstp
fdivrs
and
mov
outsb
pop
in
cmp
out
shrl
js
nop
mov
sbb
jp
ficompl
out
xor
xor
and
xor
sbb
fsub
mov
cwtl
jbe
mov
sbb
and
add
xchg
lock
mov
adc
ficomps
mov
repnz
jns
sahf
sbb
mov
xchg
repz
sbb
lods
lahf
pop
mov
fwait
jecxz
jge
sbb
lds
mov
ret
dec
mov
out
mov
nop
jl,pt
sbb
push
dec
mov
jno
dec
mov
jge
nop
dec
iret
jo
gs
mov
jge
dec
or
ficomps
mov
js
fists
jl,pn
sbb
lret
dec
ds
repz
nop
cmp
jp
xor
mov
ficompl
out
sbb
fbld
cwtl
cmp
cmp
jp
push
in
cmp
andb
pop
xor
pusha
sub
lret
cmp
xor
cmpsl
arpl
dec
cmpsl
loopne
mov
inc
push
sbb
inc
imul
loopne
jae
shl
dec
loopne
stos
jnp
sub
lret
xchg
not
mov
mov
sbb
mov
jns
clc
xchg
dec
mov
shl
fs
outsb
andb
lret
xchg
arpl
pop
cmpsl
inc
loopne
stos
lret
cmp
push
out
inc
lret
sbb
dec
imul
repz
movsl
mov
imul
mov
fisubl
insl
gs
aaa
imul
cmp
add
mov
sub
imul
ljmp
xor
imul
sub
cwtl
push
and
push
lods
push
inc
imul
push
rcl
mov
xchg
sbb
inc
test
cmpsl
adc
pusha
loop
push
mov
mov
fcompl
mov
loopne
movsb
and
sbbl
inc
imul
xchg
sub
test
cmpsb
pop
mov
in
sbb
sub
or
rorb
scas
mov
iret
ljmp
sbb
cmpsl
inc
imul
jae
mov
inc
imul
fcomps
lock
call
sbbb
sarb
mov
test
pop
cmpsl
inc
inc
xchg
rclb
sbb
in
mov
nop
dec
pop
cli
adc
arpl
dec
insb
imul
imul
sbb
mov
xchg
rolb
sbb
lret
scas
ljmp
cwtl
std
stc
stos
in
jne
outsb
shll
jae
sbb
xchg
cmpsb
pop
push
mov
cmpsb
aad
test
outsb
andb
lret
xchg
arpl
pop
push
mov
es
inc
and
dec
inc
imul
inc
jge
jge
pop
cld
stc
rcrl
inc
push
pop
cs
imul
cmp
cmpsl
sub
push
imul
shl
mov
sub
cmp
push
std
sub
andl
xor
out
xchg
ljmp
mov
ficompl
jnp
pop
test
sub
ljmp
add
cld
adc
add
lahf
push
addr16
out
jo
inc
imul
push
cmp
add
test
out
fdivl
pop
adc
mov
push
sbb
inc
imul
dec
loopne
push
stc
push
pop
cmpsl
inc
cwtl
std
sub
loopne
movsb
cmp
or
shl
push
loopne
push
inc
and
inc
aas
xor
mov
arpl
mov
insl
dec
dec
jp
cmpsb
pop
sbb
and
lret
push
lods
sub
push
or
scas
inc
xor
mull
pop
test
sbb
xor
inc
icebp
adc
and
inc
adc
shl
js
pop
outsl
mov
jp
addl
rcr
dec
loopne
mov
push
lods
movsb
cmp
xor
xchg
pop
xor
add
dec
xchg
xchg
cmpsb
pop
lret
loopne
cmpsl
inc
imul
inc
imul
loopne
stos
dec
popf
sub
icebp
sub
cmp
icebp
sub
mov
pusha
bswap
int
cwtl
cwtl
test
movsb
pop
mov
jnp
xchg
dec
popf
sub
lret
pushf
pop
rorb
and
in
pusha
cltd
rcrl
push
pop
sbb
arpl
out
cmp
iret
mov
sbb
lahf
call
shl
dec
loopne
scas
inc
xor
adc
mull
fs
push
imul
ret
sar
cmpsl
inc
imul
loopne
scas
inc
fdivr
cmpsl
inc
imul
inc
push
push
sub
outsl
fimull
mov
hlt
shr
lock
jo
push
cmpb
popa
inc
scas
loopne
scas
inc
call
pop
and
imul
fwait
sub
loopne
cmpsl
inc
imul
inc
imul
loopne
mov
inc
cmp
out
pop
sub
pop
mov
inc
push
sub
rcrb
inc
imul
dec
lods
pop
cmpsl
inc
imul
loopne
addr16
imul
arpl
rorl
rcll
push
addr16
pop
loop
or
cmpsl
sub
rorb
mov
stos
cmpb
lret
sub
add
out
pop
loopne
scas
jns
inc
roll
pop
sahf
or
push
lret
xor
sbb
loop
mov
subb
inc
add
sarb
lahf
inc
or
mov
pop
jnp
inc
or
inc
pop
mov
inc
ja
sbb
hlt
bound
dec
sti
dec
repz
sub
daa
pop
cmp
xchg
xor
cmp
xchg
inc
xchg
imul
push
les
cs
scas
or
push
cmpsb
js
ds
sbb
inc
iret
insb
fsubrs
ja
lods
rcrb
sub
pop
inc
push
jmp
repz
call
or
adc
dec
inc
pop
mov
sub
lods
int
push
aaa
push
outsb
mov
mov
cwtl
jo
mov
mov
fistpl
jecxz
pop
or
test
fcomps
lods
inc
fistpll
pusha
insl
cmp
es
or
push
sub
or
iret
lea
mov
divl
add
mov
sbb
scas
enter
pusha
jp
loopne
loope
repz
xor
or
cmpl
adc
shrl
gs
mov
or
scas
inc
cmp
in
push
arpl
das
or
mov
or
add
std
psubusw
xor
out
jno
xor
lods
and
sub
xchg
pop
pop
mov
push
pop
lret
and
mov
pop
loope
jmp
ret
jmp
mov
add
call
addr16
out
push
scas
adc
or
or
les
pop
andb
dec
mov
pop
outsl
jns
cmp
cmp
xchg
aaa
fucomip
add
and
ja
clc
outsb
inc
jmp
sti
cmp
jno
pop
jecxz
inc
sub
in
aas
pop
xor
shrl
pop
pop
add
mov
aas
lods
aaa
rcrb
rclb
dec
test
stos
xchg
add
leave
repz
pop
inc
dec
push
lahf
clc
sub
sbb
cmpl
ss
int
fistpl
call
xor
xchg
imul
add
fiadds
iret
cmp
gs
orb
das
imul
cmp
xor
lret
inc
sub
ret
das
jge
dec
xchg
mov
sub
push
lods
mov
enter
hlt
push
idiv
push
add
inc
in
imul
mov
incb
js
fsub
xchg
ja
repz
je
into
push
cmp
iret
fnstcw
lods
adc
jl
inc
sub
or
adc
iret
enter
cmp
sarb
pop
scas
adc
aaa
pop
les
jne
mov
xor
movsb
arpl
mov
sub
lahf
jp
roll
sub
jns
inc
test
cmp
nop
push
xchg
mov
cmp
push
sbb
enter
mov
add
loopne
dec
lds
fsubs
adc
pop
sub
rclb
sbb
inc
fs
movsl
add
push
out
mov
aad
push
out
enter
cmp
ret
scas
in
sti
popa
shlb
dec
cmp
dec
aas
mov
fsubp
scas
pop
rolb
inc
fs
sti
mov
outsb
sub
sub
std
iret
cmp
gs
xor
js
lds
add
jg
pop
js
incl
out
cmp
pop
pop
push
mov
test
push
pop
mov
and
insl
and
jae
xor
das
or
push
subb
in
add
out
sbb
cs
loope
add
mov
xor
sub
addr16
inc
lods
sub
sbb
xor
imul
arpl
stos
adc
imull
gs
cmp
pop
push
es
mov
mov
ds
in
push
ror
sbb
pop
mov
addr16
repnz
aaa
les
fidivrl
loopne
sub
or
ljmp
push
pop
push
jnp
sub
push
shrb
daa
jnp
enter
mov
dec
subb
sub
loopne
push
jl
add
dec
aaa
sbb
and
dec
xchg
inc
jnp
inc
jbe
imul
call
xor
inc
cmpsl
outsl
gs
xchg
pop
xchg
ret
testl
inc
punpckhwd
js
mov
lret
and
outsl
sub
dec
pop
shll
inc
stos
inc
mov
and
nop
aad
cmp
push
fwait
test
push
push
adc
fldl
xchg
pop
pop
mov
dec
adc
dec
in
leave
mov
jnp
fistl
or
roll
insl
cmp
pop
mov
addr16
aad
je
adc
dec
and
jp
push
push
fisubs
pusha
xchg
pop
test
mov
push
mov
or
cmp
lret
cmp
lock
sbb
inc
ret
or
lret
ret
insl
gs
push
pusha
or
jge
push
ja
push
inc
push
add
mov
call
dec
mov
or
aam
outsb
or
xchg
fs
jmp
inc
cli
fwait
dec
test
cmp
dec
dec
dec
shl
jo
shrb
stos
shlb
adc
orl
add
out
stc
and
push
addr16
mov
test
outsl
xchg
push
enter
ret
mov
leave
stos
test
bound
add
mov
cs
mov
shll
xchg
push
cmpl
xchg
or
xchg
dec
jge
aaa
rclb
pop
jbe
outsl
stos
inc
push
jp
out
xchg
or
mov
jb
movsl
mov
sub
lret
js
lret
sarb
repnz
adc
cmc
jnp
in
push
call
mov
ret
push
into
jp
movsb
fdivrl
into
out
add
and
lret
rcl
dec
dec
mov
push
sub
pop
ja
loop
pop
dec
sub
lahf
pop
lods
pop
das
rorl
pop
xor
in
mov
cmp
push
xchg
test
test
sub
xchg
xor
aas
out
jmp
addr16
push
andb
cmpsb
xor
mov
mov
pop
lcall
push
sarb
cmpl
pop
out
orl
test
push
xchg
jo
or
mov
xor
dec
pushf
scas
sbb
pop
push
inc
movsb
fcompl
js
jo
mov
scas
inc
mov
xchg
sahf
push
xlat
dec
adc
mov
mov
push
sbbl
js
cmp
movsl
inc
mov
arpl
stos
adc
dec
or
push
inc
mov
push
test
xchg
sbb
rcll
das
movsb
mov
push
std
out
push
inc
ja
aaa
inc
jb
sub
pusha
and
sbbl
or
jno
sbb
test
jge
mov
xor
or
fdivrs
push
sub
scas
stos
icebp
mov
sarb
adc
pop
insb
popa
pop
mov
insb
sub
add
sub
cli
std
inc
enter
stos
mov
imul
sbb
add
push
dec
jb
cwtl
test
xchg
inc
mov
cmp
xlat
arpl
out
not
inc
mov
mov
data16
dec
in
adc
sti
fildl
aam
test
jge
adc
icebp
lret
cmp
jmp
arpl
ljmp
addr16
into
jne
xlat
std
adc
mov
hlt
cmp
dec
fcoml
movsl
inc
imul
inc
dec
push
mov
pusha
stc
fsubrs
adc
pop
gs
xchg
arpl
adc
test
add
fs
enter
les
jo
push
imul
xor
pop
ljmp
icebp
jns
dec
cmpb
adc
roll
outsl
lods
test
dec
cs
pushf
pop
pusha
dec
aad
mov
push
sbb
sbb
jno
sub
out
nop
xlat
dec
nop
test
leave
pop
xorl
dec
icebp
xchg
pop
push
mov
xor
test
fwait
mov
sbb
lret
insb
ds
inc
and
cmpsb
sub
mov
mov
ja
mov
pop
adc
leave
inc
mov
loop
sbb
xor
mov
cli
mov
mov
pop
movsl
leave
movsb
jo
push
in
pop
cmpb
add
inc
inc
ret
in
movsb
rcrl
add
sub
ret
ja
pop
push
int
pop
cs
shrb
pop
jae
mov
lea
sub
sbb
stos
dec
bound
iret
dec
or
push
and
inc
xchg
push
cmp
adc
movsl
xchg
xor
jge
shrl
fwait
sbb
sub
sub
cmp
add
rol
mov
inc
xchg
psubb
pop
cmp
inc
int
xor
lahf
in
pusha
call
push
pop
jae
bound
fdivs
xor
inc
inc
add
dec
stos
mov
in
bound
rorb
ja
clc
jo
push
mov
pop
hlt
gs
leave
xchg
mov
sub
pop
dec
push
xor
mov
movsl
dec
inc
fwait
orl
dec
gs
ret
xchg
fisubs
popa
sahf
add
mov
out
lcall
pop
je
mov
push
dec
or
shrb
dec
inc
pop
fisttpl
sbb
out
in
push
subl
xor
push
stos
fadds
push
imul
sub
std
cmp
push
mov
jmp
addl
lock
lret
or
movl
cmp
and
jl
out
add
jmp
js
mov
add
or
lds
xor
add
movsl
iret
movb
xor
mov
dec
in
subl
lahf
push
std
sbb
loop
ret
insb
jns
mov
and
add
aas
sbb
out
outsb
clc
dec
cmpsl
jnp
inc
mov
mov
xchg
daa
nopl
notb
pop
movsl
out
jmp
test
push
mov
cmp
sti
rcll
out
in
sarb
sbb
mov
dec
sbb
pop
aad
adc
xchg
pop
sub
mov
mov
loop
jo
mov
push
test
mov
inc
jb
es
pop
sti
xor
loopne
hlt
nop
loop
stos
push
inc
mov
mov
or
es
sub
pop
push
dec
jns
frstor
xchg
lods
mov
leave
daa
inc
cld
out
mov
push
arpl
pop
xorl
inc
cmp
sub
jb
xor
push
pusha
jbe
rorl
pop
xchg
lods
fwait
mov
inc
pop
cli
adcl
sub
pushf
fwait
push
andl
movsl
icebp
fs
push
mov
ret
int
push
xchg
cmp
inc
mov
cmpsb
xchg
aaa
jge
or
mov
sub
sbb
pop
or
and
ds
or
inc
cmpsb
std
xor
push
xchg
fs
in
das
mov
mov
cmpsb
sub
mov
jne
xor
imul
push
and
push
dec
xchg
lods
ss
or
test
imul
enter
xchg
push
cmp
test
imul
loop
cmc
fs
mov
push
sub
nopl
mov
mov
jl
xchg
mov
mov
pop
dec
scas
lahf
fldcw
pop
daa
mov
pop
and
jge
dec
lods
imul
leave
push
mov
enter
test
pop
enter
push
arpl
dec
loopne
push
in
xchg
sub
icebp
out
inc
mov
dec
mov
mov
sahf
stos
dec
jno
nop
jbe
add
rorl
fdivl
gs
and
sbb
iret
jge
lock
mov
pop
repz
inc
cmpsb
stos
pop
mov
jo
push
fisubrl
gs
addr16
or
sbbb
push
dec
ja
pop
sti
nop
dec
pop
pusha
cltd
lods
cli
addr16
sub
push
in
faddl
testb
movsl
fbld
cs
push
mov
or
sbb
dec
xchg
and
je
mov
loop
idivl
cwtl
shrl
dec
sbb
fisttpll
mov
sbb
lock
mov
or
outsb
int
jne
dec
fmull
or
mov
dec
popf
push
push
fistpll
push
cwtl
addb
clc
and
and
and
push
nop
fistl
xchg
bound
outsl
jae
rcrl
shlb
xor
jnp
decb
xor
xchg
test
pop
pop
outsl
add
shr
jl
jns
sarb
add
jns
mov
mov
ret
addb
in
aaa
pop
in
inc
subl
pop
arpl
lock
loop
xchg
aam
loope
cli
sub
xlat
rcrb
in
xlat
lret
mov
mov
pusha
ja
aad
js
das
inc
jbe
js
push
inc
js
das
inc
mulb
push
dec
jmp
and
mov
cltd
jno
movsb
cmovo
xor
cmp
mov
jecxz
fildl
jle
mov
arpl
push
pop
and
andl
push
les
in
pop
je
cmp
sbb
xchg
insl
lret
shr
cwtl
xchg
sbb
out
out
sti
or
lods
ret
aaa
jb
xchg
enter
jno
pop
push
cmp
insl
repz
movsb
aas
dec
pushf
xchg
sbb
push
sbb
ss
mov
push
push
leave
and
and
or
test
mov
cmp
sbb
cmp
dec
mov
dec
mov
xor
push
scas
inc
mov
mov
lock
cli
adc
adc
cltd
add
addr16
adc
stos
icebp
and
jmp
xorl
repnz
pop
stc
mov
sub
cs
xchg
xor
lahf
dec
insl
dec
cmp
inc
jnp
lock
rcrl
iret
dec
divb
divb
loope
xchg
imul
fs
push
scas
cmpsl
mov
test
xor
xor
or
inc
addr16
push
sahf
mov
movsb
sub
push
cmp
rolb
loopne
mov
push
push
cmp
dec
push
xor
mov
dec
add
clc
mov
jg
jp
pop
data16
gs
jmp
cs
pop
or
mov
inc
push
das
xor
jg
sbb
nop
and
sbb
pop
pop
cmp
and
inc
cmp
sbb
imul
ljmp
push
jae
mov
mov
push
mov
mov
mov
cmovge
insb
xor
sbb
movsl
adc
rorl
sbb
jg
sub
test
sub
cwtl
mov
mov
stc
in
mov
inc
out
mov
push
inc
sahf
push
and
clc
push
push
pop
lock
and
scas
xchg
scas
loopne
loope
mov
pop
xchg
fcoml
cmc
dec
mov
xor
lcall
sbb
test
je
sub
cmp
mov
aad
cwtl
inc
push
add
lret
push
sbbb
test
push
fdivrp
xchg
leave
out
sbb
aad
imul
rorb
mov
es
and
mov
dec
mov
loope
imul
lds
shlb
ljmp
sti
add
mov
sbb
das
movsb
scas
jge
dec
jmp
rcll
adc
ljmp
imul
aaa
inc
out
xchg
pop
push
and
call
push
scas
aas
pop
pop
outsb
and
jl
das
mov
mov
lret
pop
inc
cmp
daa
icebp
sbb
movsl
repz
cmp
subb
popf
stc
inc
je
mov
test
push
push
mov
out
mov
sbbl
out
test
inc
push
sbb
jno
xor
lods
enter
dec
lcall
add
adc
sub
imul
test
cwtl
out
sub
adc
dec
loopne
addr16
ret
and
rclb
sub
jl
jge
xor
repnz
xor
stc
movsb
out
push
decl
xchg
xor
ja
xlat
mov
mov
rclb
ja
jno
test
bound
xor
aam
stos
js
dec
loop
pushl
xor
xor
jmp
cmp
flds
push
cltd
sub
leave
xor
loop
jmp
cmp
mov
push
fsubrs
aad
ficomps
jns
cmc
mov
fwait
adc
mov
xor
mov
xor
insb
outsb
popl
mov
pop
sbb
mov
add
ret
movsb
pop
jmp
mov
cmp
add
dec
sti
into
in
outsb
sub
loope
pop
aad
inc
decl
gs
ss
enter
aas
scas
stos
push
addr16
movsb
dec
sub
test
lcall
aam
shrl
pusha
pop
je
push
arpl
or
mov
das
jo
negl
and
or
ss
and
sbbb
or
inc
pop
js
fcoms
repz
sbb
in
xor
inc
js
pusha
dec
add
cmp
dec
incl
iret
inc
xchg
ret
add
jo
dec
popa
inc
loopne
sub
pop
out
push
dec
xor
inc
mov
bound
jl
movsb
or
int3
mov
pop
jo
sub
ss
jns
out
test
aaa
jns
jmp
dec
daa
fcoms
inc
jp
dec
lret
add
jae
xlat
dec
push
into
int
mov
out
sbb
fwait
push
pop
add
fs
inc
aad
cmpsb
fsubr
jmp
sbb
lea
call
sub
loope
fdivr
dec
ljmp
inc
in
pop
inc
xor
das
dec
andl
sbb
cli
or
daa
jge
xor
mov
xchg
pop
push
pop
scas
push
pop
mov
enter
and
dec
shlb
push
fwait
xchg
xchg
outsb
rorb
imul
rcl
sub
push
rcll
jl
sub
push
mov
ljmp
jne
mov
push
pop
out
xor
ss
inc
mov
pop
jae
xchg
pop
sar
dec
xor
fwait
imul
xchg
mov
hlt
inc
mov
rorl
cmpsl
sti
pop
aam
aas
inc
dec
lods
outsl
cmpsb
orl
xchg
vcvtsi2ssl
pop
xchg
pop
rcrl
shlb
pop
into
and
mov
scas
sahf
mov
loopne
xchg
loop
or
push
faddp
repz
jmp
push
leave
cli
mov
bound
fisubl
incb
in
cli
mov
mov
scas
shl
xor
push
stos
inc
jg
sub
add
sub
cmp
sbb
push
dec
movsb
lret
adc
push
shlb
stc
imul
cmpsl
lret
xchg
bound
push
and
subl
jg
mov
dec
push
lret
mov
adc
sarb
or
xor
icebp
stc
sbb
xorl
leave
sbb
outsl
leave
mov
add
sub
notl
jnp
stos
or
jnp
mov
push
adc
mov
xchg
or
dec
jns
adc
popa
scas
mov
aaa
out
testl
pop
dec
sbb
pop
daa
mov
cmp
add
sti
insl
das
adc
sub
add
push
and
ljmp
sbb
scas
sbb
cmpsb
add
mov
fmuls
idiv
xchg
dec
movsb
nop
sub
cmp
and
aas
fnsave
daa
testl
xchg
dec
stos
ficompl
pop
testl
filds
sbb
cwtl
outsb
loop
sahf
dec
push
jns
mov
xor
addl
mov
pop
loop
mov
icebp
push
shlb
xor
mov
add
lods
push
out
cmpb
sbb
mov
rclb
fs
insl
ror
pop
dec
std
test
not
or
adc
jg
xor
mov
sbbl
sbb
add
xor
mov
pop
sbb
jne
add
repnz
cmp
int
pop
inc
leave
inc
pop
loope
fsubrl
adc
jns
sti
push
loopne
imul
pop
ficompl
push
cs
adcb
xchg
jge
jne
imul
arpl
mov
addr16
pop
and
xchg
sub
pop
loope
repz
push
bound
jecxz
sbb
inc
mov
dec
insl
jmp
loope
mov
je
or
shll
mov
dec
xor
cmp
pop
and
mov
aam
push
sbb
ret
mov
mov
jo
clc
push
sbb
sahf
jb
lods
dec
faddl
aas
adc
shl
inc
jle
in
pop
cmp
gs
mov
inc
addr16
dec
inc
movsb
popf
jge
dec
cli
ljmp
shl
dec
inc
or
movsl
test
dec
rcll
jns
scas
stos
push
lahf
bound
push
cmpsb
cmp
test
mov
pop
jne
mov
mov
insl
mov
jbe
pop
insl
add
lret
popf
push
jo
jp
xorb
in
xchg
roll
data16
jo
cmpl
adc
adc
push
push
xchg
popa
push
pusha
lahf
icebp
add
fs
cmpsl
adc
sub
insl
test
daa
loop
inc
mov
popa
js
xchg
repnz
dec
fstpt
pop
and
in
push
popa
std
sbb
into
aam
jmp
push
fs
fwait
inc
add
push
fsubs
lahf
movsb
aam
std
jae
outsb
jae
dec
shlb
fcoml
push
inc
iret
inc
mov
sbb
adc
mov
daa
lea
or
es
push
out
lods
push
xchg
mov
mov
in
and
fists
xorb
ja
clc
pop
adc
test
dec
imul
in
jbe
data16
rcrl
shrl
push
mov
leave
cmp
mov
addr16
add
jbe
pop
cltd
cmp
filds
ficoms
push
aaa
push
jl
arpl
dec
sahf
mov
test
hlt
dec
push
filds
test
push
and
mov
jno
ret
mov
dec
and
mov
xor
jnp
mov
inc
lock
es
push
push
jg
xor
mov
sbb
lcall
fldcw
pop
cmpb
dec
xchg
mov
in
dec
lods
inc
addr16
mov
mov
jne
bound
in
mov
js
lcall
int3
cmp
mov
es
lock
loop
inc
or
sbb
pop
aam
sub
test
into
leave
gs
or
mov
xor
sub
or
stc
xor
pop
stos
inc
out
lret
or
mov
cmp
mov
mov
mov
jno
jne
jno
addr16
mov
push
jg
mov
dec
imul
or
sbb
aam
mov
sub
and
jno
mov
test
push
adc
inc
and
cwtl
sub
pop
pop
mov
or
shl
inc
je
add
xor
adc
pop
sti
leave
mov
das
and
iret
repnz
stos
fldl
jecxz
out
mov
icebp
adc
jmp
aam
jmp
sbb
adc
dec
scas
add
shrl
in
cmp
ficompl
or
das
dec
jge
insl
outsb
xchg
scas
rcrb
mov
ret
xchg
pop
sbb
mov
push
push
mov
gs
les
cmp
add
cmpsl
adc
jge
cmpsl
dec
xchg
inc
sti
aad
pop
dec
or
lcall
mov
mov
clc
idivl
andb
fcmove
jo
cli
in
dec
icebp
pusha
aam
add
fcmovne
push
daa
mov
dec
fstpl
dec
mov
or
inc
divl
std
sub
dec
ds
dec
sub
and
and
das
sub
ret
test
daa
pop
inc
lret
pop
out
fcomp
movsl
test
fdivs
stos
jo
jl
jl
mov
dec
fimull
gs
sbb
mov
adc
xlat
mov
fstpt
jo
adc
loop
aam
cmpsl
inc
dec
mov
test
jl
sub
pop
movsl
jp
stc
lcall
sbb
lret
and
mov
dec
fnstsw
mov
or
dec
cmp
jb
dec
cmp
es
sti
pop
sahf
fsubl
or
hlt
ss
arpl
shll
dec
add
in
jb
out
jg
jg
pop
scas
bound
jnp
mov
addr16
mov
push
push
dec
scas
xor
das
or
dec
push
adcl
lcall
fcomps
inc
out
jae
cwtl
leave
loopne
ret
cld
mov
mov
sub
cli
in
push
imul
addl
adc
and
hlt
std
jl
popa
mov
stos
push
outsl
jmp
imul
test
inc
pop
outsl
sub
xor
push
adc
mov
mov
sbb
cmp
push
and
addl
insl
into
add
pop
in
mov
cwtl
imul
data16
insb
mov
add
lahf
iret
pushf
pop
dec
dec
loope
cmpb
mov
mov
jns
lea
adc
insb
mov
ret
mov
xor
sub
aas
arpl
data16
mov
mov
xchg
mov
repnz
lods
adc
adc
pop
inc
sub
mov
push
int3
add
push
mov
fs
mov
jnp
test
dec
jns
sbb
addl
and
dec
mov
pop
inc
aad
call
testl
call
roll
jl
push
repz
or
pop
dec
sub
sub
push
or
jl
ljmp
cmp
xbegin
addr16
data16
sub
xor
fimull
fidivrs
imul
scas
pop
das
pop
push
add
cmp
sbb
das
sbb
fistpll
inc
movsb
stos
pop
mov
adc
pop
xor
add
int
sbb
shll
shrl
push
dec
addl
push
test
rolb
flds
push
movsl
sub
add
dec
das
addr16
mov
mov
sar
push
sbb
jne
sub
mov
insb
jbe
dec
and
lds
sub
xchg
xor
sbbb
cmpsl
pop
stos
lret
cmpsl
xchg
pop
pusha
pop
scas
adc
mov
xchg
lods
and
mov
sbb
add
jo
dec
lea
and
pop
lock
dec
pop
mov
cmp
dec
gs
aam
pop
push
xor
cmpsl
push
pop
pushf
inc
cmp
or
cwtl
push
idivb
and
mov
scas
jl
aam
out
movd
rcrl
std
xchg
sub
jle
xchg
aas
andl
addl
mov
jno
mov
pusha
imul
pop
dec
shll
or
jne
mov
sub
push
movaps
inc
mulb
xchg
dec
cwtl
or
fdivs
insl
je
test
movl
mov
pop
icebp
xor
fidivs
pop
repnz
sub
in
sub
adc
leave
test
push
pop
sbb
sbb
pop
stos
test
rolb
sub
cmp
push
push
daa
mov
ja
test
shrl
cmp
loopne
arpl
fs
mov
push
jae
mov
repz
es
xlat
out
pop
inc
dec
int3
scas
ja
mov
dec
test
lods
cli
dec
push
es
into
lea
addr16
cmpsl
out
enter
lods
xchg
lret
push
mov
aam
outsb
pop
in
out
inc
in
fisubrl
ss
dec
mov
cmpsl
test
pop
test
pop
bound
jmp
mov
dec
dec
jo
das
pop
aaa
in
add
sbb
hlt
push
lods
jg
xor
or
dec
mov
cmpb
pop
and
das
cmp
pop
outsl
in
leave
push
pop
add
repnz
push
xchg
add
les
pop
inc
adc
shll
inc
dec
shrb
xchg
insb
push
pop
lret
xchg
daa
outsl
inc
push
cltd
mov
add
adc
sub
add
out
cmpsb
out
pop
adc
adc
dec
cmp
jge
adc
test
out
daa
mov
rol
sbb
inc
lret
push
sub
repnz
mov
fwait
inc
mov
jne
sub
cmp
cmp
sub
pop
sti
pop
xchg
jg
sti
mov
stos
mov
fdivrs
fwait
push
add
mov
mov
xchg
pop
or
pushf
arpl
push
mov
inc
loope
ret
add
cmpb
and
lea
clc
push
pop
pusha
shll
add
lret
inc
inc
jecxz
dec
stos
xor
sbb
xor
push
bound
movsl
ja
lcall
add
mov
pop
xchg
or
cli
leave
imul
dec
and
mov
leave
jns
inc
imul
test
push
sbb
insb
or
xor
hlt
jae
and
mov
sub
xchg
push
ja
shlb
push
xchg
push
mov
scas
push
adc
loopne
fdivl
fisubl
sarl
cs
add
push
and
ljmp
xor
pop
loop
stos
pop
lods
sbb
shl
imul
mull
pop
mov
daa
mov
filds
test
imul
cmp
gs
jne
pop
mov
lods
dec
test
push
hlt
inc
and
loope
aas
pop
lock
sub
inc
cs
sti
inc
sub
inc
sbb
inc
or
call
ret
xchg
into
jb
or
or
leave
iret
fsubr
or
or
stos
unpcklps
sub
adc
fwait
jl
lock
mov
iret
adc
dec
aam
push
inc
jno
stc
xchg
xlat
sub
jg
sbb
or
jae
mov
stos
xchg
push
loopne
mov
fiadds
inc
aam
and
jle
push
cmp
daa
jg
add
je
sub
add
stos
jl
enter
loop
imul
scas
enter
mov
loopne
xchg
rcl
lahf
cli
imul
add
and
ja
out
and
adc
inc
dec
jb
dec
mov
aaa
int3
cld
pop
mov
or
mov
and
sbb
inc
test
test
ret
ja
pop
cld
dec
pop
push
push
jnp
and
loop
js
inc
fldcw
dec
jns
idivb
repnz
or
cwtl
dec
inc
and
inc
inc
gs
daa
mov
faddl
lcall
adc
fstps
push
enter
aam
lret
std
mov
leave
pop
pop
xchg
sarb
mov
filds
xchg
das
ja
std
push
mov
leave
mov
shrb
adcb
outsl
imul
rcll
scas
mov
decl
movsb
fisttpl
inc
xor
int3
iret
insl
push
pop
leave
loopne
mov
ja
sbb
sub
out
incb
mov
fistps
push
xchg
jae
and
push
repnz
movsl
les
shl
xchg
mov
xor
push
js
lods
dec
push
and
inc
cmpsl
jns
test
push
dec
push
out
sub
xor
lods
adc
jno
jbe
push
ss
je
push
jae
and
les
mov
mov
xchg
and
mov
xor
cmp
imul
sub
jns
dec
mov
jbe
rcrl
or
cmp
fbld
mov
orl
jmp
fs
loop
sub
bound
pop
gs
mov
push
dec
mov
cmp
dec
inc
dec
and
test
ret
daa
adc
sahf
movsl
mov
and
sub
popf
leave
add
xor
addb
xor
movsl
mov
orb
mov
cwtl
add
fsub
mov
lods
cmpb
stc
popf
mov
out
push
pop
xchg
addps
sbb
mov
rcrl
cs
imul
stos
jbe
and
pop
gs
or
cmp
mov
cmp
leave
lcall
and
popf
enter
iret
mov
fistl
dec
fisttpll
add
test
sahf
das
xchg
push
in
sbb
je
or
sbb
aaa
jp
les
hlt
pop
js
pop
jne
jne
mov
xchg
xchg
cmpb
mov
cmpsb
sub
xor
ljmp
insl
popa
jle
mov
movsl
dec
push
call
pop
mov
xchg
pop
ret
or
int
pop
mov
cmp
std
lea
dec
pop
sub
inc
test
shlb
arpl
ja
xchg
mov
subl
pop
push
sbb
popf
inc
addl
inc
iret
sahf
inc
pcmpeqw
add
dec
and
insl
dec
mov
popa
test
pushf
xor
shrb
pusha
push
inc
stos
jb
mulb
movsb
pop
mov
test
arpl
jl
notb
outsb
pop
fildl
sbb
mov
jmp
dec
dec
ret
lret
jno
mov
xchg
stos
mov
mov
lods
push
xor
ret
or
stc
arpl
mov
cmp
and
adcl
mov
shlb
imul
aad
jmp
jb
jnp
loopne
jp
movsb
jp
inc
adc
dec
sub
in
cwtl
inc
mov
push
and
sub
outsb
inc
sbb
inc
mov
mov
and
inc
cmp
pusha
popf
mov
imul
xchg
leave
arpl
xor
xchg
sub
loopne
cmpsb
icebp
movq
jno
pop
jp
jo
daa
and
cmpsl
mov
or
lods
cmp
nop
das
push
sbb
push
cmpsb
lahf
xchg
mov
mov
inc
fdivrl
lds
mov
push
add
mov
mov
mov
leave
bound
xor
lret
pop
insb
sbb
test
mov
push
cmpsb
rclb
jno
mov
xchg
fs
orb
cmpsb
fdivr
pop
lds
xchg
movsb
xor
bound
mov
std
pop
aaa
dec
cmc
adc
inc
and
int
and
push
xchg
xor
pushf
sbb
adc
xor
push
xchg
loopne
sbb
dec
shrl
sub
nop
outsb
sub
stc
fisttpl
ss
adc
mov
int3
and
jns
mov
nop
test
rol
mov
inc
popa
in
dec
xor
pop
push
dec
popa
mov
add
jmp
shlb
adc
lods
add
or
fsts
xchg
cmp
movsb
mov
sub
mov
or
aad
mov
push
pop
adc
dec
test
pop
loopne
ss
fcoml
stc
mov
jns
pop
pusha
pop
lea
addr16
lcall
mov
in
xor
das
push
test
push
out
andb
aad
dec
enter
xchg
sbb
addr16
inc
stos
sub
test
into
sub
insb
jge
inc
int
mov
sub
shlb
aam
incb
mov
in
xchg
fsub
inc
outsl
xchg
pushf
pslld
fimuls
xchg
jnp
test
test
mov
orl
mov
xchg
scas
leave
or
jle
add
shll
push
sub
mov
aam
add
hlt
jno
les
jle
cld
xor
pusha
mov
push
and
adc
aas
push
dec
shll
push
loop
inc
js
jmp
test
xchg
xchg
sub
cmp
cli
push
jp
loope
scas
test
out
stos
shll
rorb
adc
xor
pusha
js
loopne
dec
xchg
test
icebp
call
jne
sub
in
pushf
xchg
shlb
jmp
or
test
gs
jmp
stc
scas
popf
in
sub
mov
daa
mov
lds
push
scas
cmp
std
arpl
scas
pop
push
dec
jg
sbb
mov
pop
cmp
push
data16
mov
gs
inc
sarl
cmpsb
xlat
pop
insl
dec
movsl
push
outsl
push
scas
dec
je
jl
cmp
scas
and
shlb
int3
jns
inc
loopne
stos
adc
fs
shlb
jae
pop
push
adcb
insl
arpl
int
in
repnz
inc
imul
push
and
outsl
movsb
nop
lods
pop
push
mov
pop
cmp
inc
imull
sub
push
jns
mov
lock
cwtl
outsl
out
jmp
xor
ret
fs
jae
inc
arpl
cli
test
mov
xchg
xchg
rcll
out
dec
pop
int3
mov
pop
pop
and
std
in
je
mov
lock
pop
add
mov
cmp
mov
fsubl
push
sub
inc
sbb
jo
or
test
xor
inc
ja
push
test
subl
jbe
ds
daa
sbb
inc
and
mov
pop
hlt
js
pop
mov
inc
mov
mov
test
push
mov
std
pusha
mov
out
jno
cmp
nop
mov
xor
fcmovnb
jo
add
xorl
inc
cmp
xor
jo
push
js
andl
push
cwtl
insb
adc
in
pop
inc
xor
xor
loope
push
mov
add
flds
inc
dec
jno
ljmp
pop
or
dec
fsts
jo
iret
test
cwtl
inc
add
stc
or
stos
popf
xor
and
push
loop
nop
cs
loopne
sahf
mov
test
scas
ret
and
cmpsb
xor
loopne
imul
lods
ss
and
dec
sub
outsl
xchg
lea
cmpsb
lds
leave
mov
push
popf
les
sarb
xchg
mov
loope
pop
dec
push
hlt
aas
dec
out
movsb
cs
jg
mov
cmp
ret
adc
popf
movsl
mov
jnp
mov
xchg
cwtl
sub
lret
les
pushf
mov
xorb
out
sbb
popa
ja
int3
xlat
mov
mov
mov
and
cwtl
out
iret
rcll
xor
jl
mov
and
lods
int3
dec
repnz
mov
jo
or
lods
loopne
outsl
sbb
adc
popa
mov
orl
test
mov
sub
and
packsswb
andb
xor
loope
lds
scas
push
jl
inc
gs
cmc
mov
or
enter
mov
pop
out
mov
or
dec
mov
ret
adc
movsl
nopl
or
out
test
loop
mov
mov
pop
push
cmpsl
jbe
popa
sahf
add
sbb
jne
pop
or
out
in
stos
dec
adc
loopne
xchg
xlat
rcr
push
popa
pop
ds
fldenv
inc
cltd
mov
jg
or
or
or
adc
inc
test
pop
xor
dec
call
inc
imul
pavgw
lret
je
outsl
dec
mov
jnp
cld
mov
xchg
xchg
adc
fisubs
pop
subb
pop
pushf
pop
enter
mov
ja
push
aam
into
xchg
sti
mov
sub
and
push
sarl
pop
xchg
lds
fidivrl
jle
rorl
in
inc
in
ljmp
jbe
out
mov
pop
and
inc
pop
je
push
pop
imul
scas
mov
sbb
addr16
jns
xor
iret
sub
jg
dec
sub
enter
repz
jo
fcoml
adc
fisubs
ds
push
sub
mov
pop
sbb
mov
inc
psubsw
xor
movsl
push
mov
imul
fldcw
loope
mov
jmp
push
xchg
rol
push
mov
push
inc
lret
int3
sub
mov
movsl
jnp,pn
dec
sbb
jo
sub
push
pushf
xor
in
dec
stos
jecxz
pop
orl
mov
rolb
jae
cmp
leave
icebp
addr16
ficompl
leave
jg
push
push
add
sbb
jmp
cmp
in
aad
push
adcb
xchg
cmp
jecxz
jg
mov
outsb
enter
and
and
lds
push
jle
or
mov
inc
pusha
outsl
mov
push
and
and
outsb
sub
lods
lcall
pop
js
data16
movsl
cmc
mov
loop
ja
pop
mov
xchg
clc
mov
subb
sub
rclb
ljmp
arpl
jnp
push
movsb
and
ds
inc
addr16
dec
addr16
dec
shrl
add
dec
hlt
pop
and
pop
mov
cmc
dec
jecxz
lods
inc
cmp
push
lahf
gs
pusha
push
jecxz
in
inc
xchg
adc
push
fwait
cmpsb
cmpsl
dec
push
push
test
loopne
dec
mov
mov
loope
mov
jno
movsb
vxorps
inc
dec
lds
test
jmp
xchg
arpl
mov
scas
cmpsb
imul
mov
cltd
ret
xchg
les
es
sbb
mov
sub
pop
sbb
inc
les
xchg
fidivs
addb
ret
adc
push
xlat
js
int
mov
mov
lods
jmp
xchg
dec
mov
pop
stos
js
push
push
insl
fldenv
mov
adc
lret
clc
jnp
lods
addb
push
bound
lcall
push
cmpsb
push
cmpsl
xchg
xchg
jo
ret
dec
iret
dec
mov
push
fldcw
aaa
jl
into
int3
mov
cltd
xchg
outsl
iret
xchg
cmc
rcll
push
add
inc
stc
adc
ds
jbe
int
sub
mov
mov
aad
dec
scas
repz
xor
dec
sbb
push
or
mov
xchg
cmc
ds
push
out
adc
mov
fadds
lret
or
inc
lds
pavgb
sbb
cmp
dec
arpl
dec
aas
mov
arpl
and
addr16
jecxz
fstpt
cwtl
leave
push
mov
in
push
andl
cmc
jp
divl
push
popa
fmuls
dec
std
push
movsb
dec
out
in
stos
pop
mov
inc
loop
std
xor
dec
enter
xor
xchg
es
xor
dec
repz
dec
pop
movsb
js
mov
imul
dec
cmpsb
out
loope
mov
subb
sbb
mov
adc
inc
mov
xor
jle
ror
cmpsl
enter
test
cmpl
jge
add
and
popa
cmp
lea
in
or
fstl
stos
shl
lds
mov
push
leave
lret
dec
out
inc
xor
lret
adc
sbb
pop
pop
xor
fwait
testl
mov
jl
sub
push
in
inc
mov
jmp
and
mov
or
inc
int
cmp
xor
adc
xchg
out
enter
xchg
andb
mov
nop
xchg
jne
cli
dec
xor
sbb
sbb
add
rorl
sub
ret
sbb
out
sbb
ja
mov
xorb
pop
imul
xchg
mov
shll
mov
ja
xchg
fdivrs
test
or
fbstp
fldlg2
mov
or
sub
ret
inc
mov
dec
imul
addl
ljmp
fidivl
repz
pusha
xor
jns
push
fs
lret
xchg
andb
lahf
rorw
or
adc
or
push
gs
xchg
ret
xchg
xor
lcall
pop
jno
push
xchg
outsl
hlt
rcrb
call
sub
push
sbb
push
in
addl
mov
mov
push
hlt
sub
sar
shlb
in
inc
pop
gs
lcall
push
jp
jo
aas
pop
add
xor
mov
gs
dec
mov
jbe
mov
push
mov
call
sti
arpl
xor
seto
cld
pop
and
out
sbb
fisttps
and
push
pop
sbb
outsl
push
jae
fsubl
imul
pop
push
int
dec
dec
mov
test
cmc
xlat
dec
jae
stos
out
and
push
or
sti
daa
fidivrs
insl
mov
push
mov
scas
inc
cmp
cltd
fmulp
jnp
lods
fs
pop
in
add
xlat
cmp
and
sbb
mov
push
push
xchg
mov
mov
dec
nop
into
repnz
sub
lea
and
mov
lcall
loop
dec
arpl
adcl
loope
in
imul
pop
inc
jp
call
mov
clc
jnp
sub
gs
shrl
push
outsl
xor
mov
xor
push
addr16
iret
add
or
pusha
mov
pop
jp
loop
xchg
popa
stos
mov
fwait
lods
insl
repnz
adc
dec
stos
std
std
xlat
and
jg
out
repz
and
popf
push
mov
xchg
icebp
cmpsl
stos
pop
aam
inc
push
stos
mov
and
push
mov
inc
lds
cmpsb
sbb
mov
jp
xor
jb
mov
fldl
xchg
mov
push
push
add
jnp
pop
sahf
addr16
addl
mov
popa
mov
imul
cld
lahf
scas
fdivrs
std
dec
mov
push
xor
jb
pop
dec
push
mov
out
movsl
add
ret
push
cmp
rcr
sub
aam
std
xor
jns
pop
jno
dec
ds
push
or
add
outsl
cmp
xchg
imul
and
and
xchg
addl
lods
nop
jo
bound
sub
in
dec
sarl
mov
xor
aad
or
and
add
leave
jmp
ret
lods
push
pusha
sub
xlat
cmp
inc
jno
pop
pop
mov
mov
mov
call
jae
scas
mov
xlat
add
push
add
leave
push
popf
xchg
pushf
inc
pop
inc
push
sete
pop
in
jnp
jo
lret
loopne
mov
mov
stos
pushf
mov
push
mov
push
movsb
xchg
dec
mov
xchg
mov
shlb
add
adc
mov
mov
addr16
xor
push
lret
inc
add
lock
sti
mov
mov
les
mov
outsb
or
fbstp
std
sbb
mov
wrmsr
dec
shrl
insb
insl
add
adc
leave
pop
add
repz
add
push
cmp
adc
cli
add
inc
sti
mov
mov
sahf
xor
adc
imul
sub
mov
jecxz
test
push
iret
cli
lret
mov
xchg
jp
xchg
fldenv
lock
loope
int3
cmp
dec
push
pop
push
pop
pushf
aad
xchg
lock
arpl
sub
and
mov
rolb
xchg
mov
sarb
mov
add
cmp
out
test
add
je
mov
or
mov
lcall
fstpl
mov
cltd
divl
adcb
jns
cwtl
sub
arpl
shr
or
mov
inc
andl
add
mov
jl
sti
lods
xor
lods
enter
jno
mov
popf
popf
push
pop
xchg
fbld
sub
push
mov
add
jg
mov
adc
sbb
jp
lock
and
sbb
popa
cmp
or
mov
ss
dec
jne
inc
push
xchg
jg
rcll
inc
call
mov
je
lcall
loop
scas
push
outsl
into
inc
fcomip
sub
mov
fistps
loope
and
jbe
scas
pop
aad
jne
jbe
add
outsl
cltd
inc
dec
mov
lret
and
rclb
jg
push
or
jnp
lods
mov
out
std
test
stos
nop
dec
push
mov
cmp
dec
movsl
movsb
push
lock
dec
push
and
add
jecxz
and
iret
lcall
lcall
pop
push
xor
sub
push
push
sub
pop
pusha
pop
fnstsw
push
shl
mov
scas
jne
adc
inc
jecxz
lret
mov
add
enter
or
out
nop
test
and
xchg
dec
sub
ds
frstor
inc
stc
or
push
daa
int
lock
jns
bound
and
in
dec
dec
inc
cmp
gs
push
popa
pop
and
push
icebp
mov
xlat
xchg
mov
mov
ja
mov
dec
dec
subl
xor
das
lds
sub
dec
inc
mov
or
out
out
mov
push
pop
sahf
xor
and
pop
fwait
xchg
dec
mov
bnd
dec
push
lock
cwtl
xlat
pop
inc
and
cld
inc
jnp
add
enter
mov
int
and
push
mov
jecxz
cmp
cmp
dec
sbb
or
and
adc
jle
mov
or
cs
sub
sbb
dec
fisttpl
jge
cltd
xchg
and
pop
fsubs
in
mov
mov
in
jle
outsl
inc
or
cwtl
mov
ds
mov
mov
inc
loop
jmp
jl
jp
mov
out
cmpsl
push
adc
inc
int3
mov
in
jnp
lcall
imul
imul
das
pusha
cmpb
popa
daa
addr16
sbbb
sar
xor
hlt
stos
dec
js
je
ret
or
ret
push
xchg
lods
pop
cmc
xchg
jp
mov
jg
test
jnp
lcall
mov
lret
mov
mov
sti
sub
mov
rclb
push
mov
cmpsl
cmpsb
dec
pop
outsl
pushf
xchg
imul
pop
pusha
push
inc
popl
add
adcl
daa
jns
push
sub
mov
imul
ds
mov
fucomp
mov
lods
dec
adc
rorb
lahf
cmpsb
in
xlat
push
lds
loop
xor
pop
aas
pusha
mov
pushf
scas
mov
mov
xchg
mov
cli
fs
mov
loopne
fistl
jmp
inc
in
cmpl
mov
pop
xor
add
jmp
stc
or
mov
shrb
xchg
adc
pop
inc
adc
push
out
mov
fsubl
aad
mov
clc
repnz
in
cmp
or
scas
fldl
in
mov
ret
sbb
insl
imul
ret
mov
int3
push
add
inc
fwait
lock
testl
mov
les
leave
cmp
cltd
in
js
dec
mov
scas
jo
int
bnd
imul
pop
mov
push
inc
insb
shr
mov
adc
mov
movsl
inc
inc
mov
push
sbb
mov
stos
cwtl
addl
mov
cmc
cltd
xorb
leave
lods
mov
decb
mov
inc
cmp
cmp
pop
inc
test
cmp
packuswb
iret
dec
int
push
and
inc
xlat
and
int3
mov
gs
incl
lods
clc
pop
mov
clc
popf
test
stos
mov
cmp
mov
cmpb
push
call
shl
mov
sti
stos
pop
cs
push
or
push
adcl
movsl
jb
jbe
mov
andl
sbb
add
cli
shlb
push
movsb
mov
cmpsb
inc
lods
sub
add
jge
mov
mov
push
lcall
call
pop
mov
lahf
je
pushf
or
out
icebp
add
movsl
mov
out
sbb
loopne
mov
lods
test
mov
lock
mov
addr16
in
pop
jp
push
arpl
dec
mov
inc
fdivrl
mov
mov
jne
clc
scas
shll
sub
lods
fistps
js
add
xor
xchg
dec
dec
imul
mov
shrl
adc
pop
mov
pusha
jnp
adc
enter
dec
xchg
add
mov
clc
inc
mov
jg
mov
sar
aad
sub
cmp
push
and
movsl
mov
or
or
fidivl
dec
and
jb
dec
loope
lods
rclb
repnz
push
add
and
sti
sub
jge
push
inc
incl
inc
divl
sbb
mov
and
jo
mov
loop
dec
fmull
out
dec
test
cwtl
rorl
sbb
jg
lret
int
jne
add
cld
leave
pop
push
loope
push
dec
movsl
adc
jmp
and
scas
fs
cmp
pusha
jge
movsl
adc
mov
jb
add
idivb
and
cwtl
clc
out
push
jp
leave
push
adc
dec
out
scas
out
add
jmp
mov
test
add
lret
pop
jge
push
loope
mov
fucom
push
dec
xor
cmp
iret
imul
popa
js
xchg
cmp
insb
dec
dec
rolb
xchg
loopne
xor
cs
fistl
dec
stos
test
andb
loope
dec
mov
inc
and
jp
imul
es
xchg
cs
jns
lret
mov
ja
push
push
add
cld
mov
pusha
stos
shl
inc
repz
popf
js
outsl
rorl
dec
inc
stos
inc
xor
in
bound
iret
lret
xchg
and
mov
fst
jge
test
pop
xor
pop
pop
mov
cmp
js
ljmp
fs
add
jge
and
dec
call
push
push
movsl
mov
mov
jb
mov
add
xchg
pop
jns
stos
out
xchg
cs
sub
lcall
aad
in
jge
or
cld
sarb
fwait
nop
cs
loopne
les
jp
daa
mov
shlb
sub
add
into
mov
arpl
sbb
ss
pop
push
cmpb
jnp
inc
nop
loop
push
out
pop
mov
xchg
ljmp
sti
lea
mov
mov
jns
xchg
stos
cmpsl
mov
mov
inc
mov
scas
les
push
inc
push
dec
sahf
lcall
xchg
xchg
pushf
stos
sbb
mov
sub
addr16
xchg
into
cld
inc
adc
stos
fwait
ja
sbb
mov
bndstx
sub
xchg
mov
push
push
mov
jp
gs
jbe
mov
cmp
mov
lods
rclb
jns
and
mov
mov
sub
sti
call
loop
jp
test
mov
call
xor
dec
push
xchg
mov
fistpll
sbb
data16
and
inc
je
add
pop
mov
cmpb
xor
stos
imul
adc
jno
xchg
adc
in
inc
xlat
push
mov
inc
mov
repz
push
jmp
call
mov
xor
mov
ljmp
cwtl
out
xor
cmp
dec
shr
or
popa
imul
out
mov
arpl
sbb
push
add
add
cld
sbb
xor
push
popf
cltd
lock
ja
inc
mov
xor
mov
push
pop
pop
push
sub
out
mov
mov
jo
push
scas
ja
pop
and
cmp
sahf
xor
sbb
fs
dec
mov
roll
cmpb
sub
std
les
pop
mov
push
sti
in
add
push
or
jnp
mov
jae
mov
das
js
fisubrl
mov
mov
fcmovbe
xchg
addl
jecxz
repz
xor
std
mov
cmp
in
mov
lods
les
enter
icebp
sub
adc
push
or
mul
ret
scas
pop
mov
js
stc
leave
add
and
dec
stos
dec
jnp
xor
xor
bound
das
xchg
mov
sub
icebp
inc
jmp
xchg
xchg
inc
inc
push
push
sbb
xchg
push
mov
inc
movb
push
mov
adc
imul
adc
aaa
test
addl
add
icebp
xor
mov
js
sub
shlb
lock
mov
sub
xor
xchg
test
mov
and
fwait
sbb
dec
arpl
pop
jp
adc
pop
sbb
sub
xlat
addr16
and
adc
les
jnp
jns
dec
mov
enter
scas
sub
and
push
sbb
rol
and
push
xchg
pop
loop
inc
movsb
and
pop
stos
insb
mov
aam
mov
add
test
mov
jge
inc
jne
jnp
add
pusha
and
cmpsl
fsubp
addl
mov
xchg
sbb
addr16
xor
into
outsb
arpl
les
or
mov
mov
sahf
loop
inc
pop
mov
rolb
push
adc
inc
ja
jb
movsb
add
mov
or
push
in
inc
jmp
and
je
stc
cmp
gs
lcall
push
mov
pop
ror
or
test
das
xchg
sbb
mov
fstps
lods
sti
pop
push
scas
adc
push
scas
mov
addr16
or
fs
mov
push
mov
aam
add
and
loope
add
mov
jg,pt
pop
sarb
lea
fists
pop
lea
into
aas
dec
adc
bound
mov
outsb
aas
movsb
loop
fnstsw
pusha
and
out
dec
xchg
adc
mov
leave
shll
int
ret
stos
mov
pushl
mov
mov
or
xchg
cmp
frstor
adc
add
push
xor
push
mov
fsts
sbb
pop
xor
lea
jecxz
push
ret
mov
mov
cli
sahf
into
leave
xchg
add
add
in
subl
mov
adc
xchg
inc
add
subl
and
outsb
rclb
popf
mov
add
movsl
xchg
jg
sbb
inc
bound
jb
inc
push
test
in
insl
into
dec
sub
fmull
push
jb
sub
sbb
jno
in
arpl
arpl
push
mov
xor
outsb
lret
aam
aad
insl
lods
addr16
ds
addr16
sub
arpl
jns
xor
test
pop
lret
lods
mov
push
pusha
jne
sub
call
lahf
ret
pusha
push
adc
and
pop
sbb
mov
sub
insl
ds
pushl
xlat
movsb
repz
push
mov
adc
mov
rcrl
iret
dec
dec
and
push
and
mov
jle
fs
dec
jbe
lods
add
xor
cmp
shll
lret
xor
adc
inc
aaa
mov
push
and
push
dec
add
pop
fwait
imul
test
dec
ret
push
and
jmp
xlat
dec
jns
push
jbe
adc
xchg
loope
in
add
aam
cmp
into
sbbb
push
pusha
imul
jmp
jg
lcall
sbb
shrb
sub
loop
stc
jge
adc
shll
rorb
mov
dec
jecxz
xchg
rorl
shlb
inc
xor
push
lcall
lcall
add
and
mov
lods
lcall
scas
aad
push
sbb
jg
pop
lods
fnsave
sbb
notl
pop
inc
xchg
pop
inc
inc
ret
push
mov
xchg
imul
add
rclb
mov
xor
and
sub
pop
cmpb
inc
xchg
jl
push
mov
jo
inc
imul
inc
jbe
and
cmp
dec
pop
sub
dec
push
xor
xchg
sbb
mov
dec
push
fistpl
pop
iret
mov
rorl
cmp
mov
sar
pop
jbe
gs
pop
mov
xor
imul
add
xor
xchg
jns
add
add
dec
mov
jecxz
mov
xlat
pop
adc
xchg
add
lcall
test
jno
or
xor
pop
xchg
stc
mov
repz
dec
ja
out
je
scas
out
test
mov
jnp
mov
cld
mov
dec
fwait
cmp
sbb
dec
idivl
dec
dec
push
cmc
fdivrl
xchg
lods
ss
loope
push
pop
out
fsubr
leave
jecxz
inc
mov
aam
jne
push
fwait
cmp
in
and
or
daa
mov
loope
shrl
jb
out
test
jle
pusha
jnp,pn
outsb
push
adc
retw
pop
pop
mov
popa
repnz
scas
das
arpl
js
andl
dec
inc
in
movnti
fs
rol
fnstenv
xorb
sbb
sub
imul
shlb
cmp
sub
add
dec
push
out
ds
jle
mov
dec
adc
pop
mov
xor
dec
inc
add
and
sbb
push
pop
out
scas
sub
loope
dec
inc
dec
dec
rcrb
lods
es
cmp
jae
shrl
push
push
pop
mulb
inc
sub
lcall
std
sbb
jnp
addl
mul
loopne
mov
enter
xchg
mov
out
inc
lret
add
sahf
dec
and
dec
inc
xchg
dec
sbb
push
cmp
push
and
mov
mov
xor
lds
fsubs
cmp
xor
ja
sbb
pop
lret
insl
lret
pop
mov
movsl
mov
in
nop
insl
sahf
mov
sbb
xchg
mov
cli
je
movsl
movsl
fcoms
scas
sbb
and
movsl
out
bound
dec
mov
or
movsb
add
dec
xchg
faddl
test
jnp
pop
inc
fisttpl
stc
dec
adc
mov
loope
movsb
loope
in
lcall
sti
lods
xor
filds
lret
xchg
cmc
bound
fcomip
fidivrs
mov
push
jmp
ljmp
push
jmp
inc
repz
push
jl
rclb
call
push
test
sbb
push
sub
adc
mov
xchg
test
pushf
arpl
lock
jl
outsl
les
or
cmp
int
inc
mov
sub
rcl
daa
push
push
jl
inc
and
dec
nop
sbb
test
and
dec
test
aas
sahf
mov
stos
in
pop
ret
jmp
mov
loop
das
stc
imul
clc
sbb
sbb
in
and
call
push
sti
leave
lock
imul
add
push
inc
aas
dec
out
xlat
mov
or
sub
aaa
outsl
adc
lods
fisttpl
les
mov
clc
fstl
or
mov
dec
test
cmpsb
vmread
and
or
mov
mov
gs
das
insl
dec
out
xchg
enter
out
cld
lret
push
cmp
pop
jge
inc
movsl
mov
mov
stos
or
dec
sti
lcall
mov
jg
aad
dec
mov
sub
mov
mov
push
fcompl
sbb
roll
add
and
xlat
xchg
loopne
dec
ljmp
adc
call
cmp
adc
fdivl
mov
popf
or
ret
cld
mov
cmp
scas
stc
adc
mov
pop
cwtl
jle
les
jne
cmpsb
cli
inc
mov
out
cmp
imul
call
sub
shlb
insl
push
iret
and
repnz
add
inc
sub
jmp
dec
sub
imul
sub
test
mov
cmp
sbb
pop
into
sub
add
dec
inc
imul
push
mov
test
clc
mov
and
push
mov
mov
xor
or
mov
dec
inc
mov
push
pop
cmp
push
popa
movsl
aaa
lock
das
into
mov
pusha
repnz
pop
cmp
xchg
xor
dec
test
cmp
xchg
and
push
cmp
xor
sbb
pop
fiaddl
jge
and
lods
and
push
jns
and
mov
sbb
or
insl
js
jle
xchg
pop
cmp
add
outsl
jg
dec
adc
lods
mov
adc
xchg
xor
push
push
mov
in
mov
mov
dec
dec
call
add
jnp
mov
pop
adc
sub
sbb
mov
jo
inc
mov
clc
sub
es
in
stc
and
arpl
xchg
inc
out
xchg
enter
jp
imul
shll
or
push
pusha
rclb
jge
fnstcw
mov
inc
cmp
out
mov
xchg
add
cmp
mov
mov
adc
test
push
mov
es
pop
clc
sub
jg
inc
dec
iret
dec
jecxz
andb
mov
or
pop
and
jbe
psrld
inc
jmp
inc
mov
aas
adc
inc
and
sbbl
or
pop
andl
xchg
in
xlat
and
add
inc
fildll
mov
mov
jnp
pop
das
mov
mov
add
ret
push
lds
jo
push
lcall
in
push
xor
push
mov
mov
mov
inc
ss
add
xchg
gs
lahf
pop
stos
andb
add
pop
sbb
cmp
adc
sbb
test
into
mov
jnp
arpl
popa
insb
loop
jns
xor
int
xor
lds
cs
andb
jbe
in
jmp
lock
mov
insl
push
jnp
adc
call
mov
push
or
loop
rolb
dec
icebp
mov
js
pop
fwait
sub
dec
push
cwtl
mov
lahf
arpl
sbbb
cmp
sub
sub
pop
mov
or
mov
pusha
sbb
add
fistl
inc
cwtl
loop
cmpb
scas
gs
push
sarl
jb
test
pusha
jnp
inc
mov
test
js
push
in
sahf
loopne
rclb
xor
jo
xor
add
scas
fs
jnp
mov
xchg
pop
adcb
daa
ja
or
or
sbb
push
or
or
pop
cmc
push
dec
test
dec
push
push
clc
and
mov
jns
inc
fadds
xor
mov
mov
xlat
xor
inc
cmp
push
lret
inc
jo
mov
loope
mov
stos
sbb
xor
mov
and
and
loope
rorl
push
sbbl
sub
cwtl
pop
test
dec
out
jbe
jl
cmp
aas
mov
sub
in
xchg
clc
pop
movsb
pusha
popa
jne
call
ret
outsb
sbb
mov
push
addr16
push
test
pop
insb
pop
stos
cmc
inc
outsl
add
fnstsw
mov
push
mov
sub
sbb
push
das
mov
dec
xlat
cwtl
mov
arpl
dec
sarl
das
cmovle
and
arpl
pop
mov
inc
jecxz
sbb
lds
push
mov
adc
dec
rcrb
sub
mov
rcll
and
iret
add
leave
and
jmp
push
pop
or
jmp
jecxz
pop
cld
stos
int
push
outsb
mov
fwait
and
mov
lcall
sub
movsb
inc
fs
jecxz
repnz
xor
faddl
inc
dec
in
jbe
push
sti
popl
mov
sub
into
sub
test
outsl
push
push
push
mov
mov
push
mov
movsb
in
inc
arpl
mov
outsl
pop
scas
xlat
push
pop
dec
in
clc
mov
bound
and
imul
dec
fldcw
jmp
scas
pop
ret
jp
ror
xchg
cmp
inc
sub
sub
test
cli
fldcw
and
xor
sub
arpl
enter
mov
das
sbb
xor
fmull
pop
aam
dec
push
subb
fmull
push
clc
jecxz
dec
pop
mov
xchg
mov
dec
sbb
fistl
mov
movb
xchg
or
scas
pop
daa
jp
shrl
xchg
out
push
sub
into
sub
test
jge
pusha
popl
pop
push
dec
mov
arpl
mov
loopne
mov
mov
arpl
mov
ja
cmpsl
xlat
loopne
dec
popf
sbb
mov
cmc
sahf
call
ja
sub
jp
shl
popf
mov
push
jmp
scas
cmp
push
fbld
enter
mov
pop
aaa
xlat
loopne
dec
or
inc
or
sbb
sub
push
jp
rcrl
mov
inc
mov
push
cli
dec
outsl
dec
push
aad
push
fst
mov
sub
test
mov
mov
arpl
mov
sbb
shll
pop
fcmovnbe
loopne
dec
icebp
ss
stc
inc
fcompl
rcrl
out
das
shr
xchg
daa
movsb
pop
sub
jns
inc
xlat
into
sub
test
cli
cmp
aad
push
or
jmp
and
jecxz
sub
xchg
pop
pop
xlat
loopne
dec
jno
mov
push
sahf
dec
ja
sub
dec
mov
sahf
lods
ja
sub
jp
shll
sub
cmpsl
inc
outsl
into
sub
fmul
sub
test
cli
in
outsl
lock
cmc
aad
fisttpll
in
stc
fsubl
leave
sahf
int3
xor
enter
rorb
mov
arpl
enter
mov
repz
cmp
loopne
dec
adc
add
sbb
sbb
je
imul
rorl
xchg
inc
mov
sub
test
pop
jnp
jecxz
cmp
inc
dec
into
sub
test
adc
mov
push
outsl
arpl
enter
mov
subps
xlat
loopne
inc
repz
mulb
aaa
mov
mov
loopne
dec
and
inc
xor
xor
ret
shll
xchg
movsb
xor
repz
inc
jmp
sub
test
sbb
popa
aad
push
imul
mov
mov
pop
xlat
loopne
inc
pop
mov
jp
pop
fmull
mov
push
into
sub
test
popl
mov
arpl
loope
cld
sbb
sahf
hlt
ja
sub
jp
ror
xchg
pop
scas
lcall
jns
inc
das
into
sub
test
cli
and
rcrl
loopne
dec
xor
and
cmp
sbb
sahf
adc
xchg
mull
inc
out
sub
test
insl
aad
push
jne
jp
mov
add
test
scas
add
dec
cs
jns
andl
ss
cmp
arpl
sbb
fs
leave
lea
bound
fcmovnbe
aas
pop
mov
adc
push
jo
jg
fs
mov
clc
pop
insl
dec
pop
dec
dec
in
inc
fistpll
mov
xor
pop
pop
cli
inc
mov
xor
adc
and
idivl
inc
stos
dec
ficompl
call
push
lret
fcomi
pop
shrb
xor
hlt
mov
cs
mov
xor
shlb
jnp
test
mov
inc
lgs
pop
cmp
xchg
idivl
pop
cmp
xor
mov
mov
out
andl
cmp
js
sbb
imul
lods
loope
push
imull
push
push
int
sub
adc
mov
fucom
jp
iret
xchg
push
ret
insl
popf
adc
adc
mov
repz
inc
icebp
repz
imulb
adc
adc
dec
popa
pushf
repnz
cmp
mov
dec
in
pop
xchg
popa
arpl
repz
fisttpl
incl
cmpsl
or
dec
and
aas
ss
pop
add
push
test
xchg
jo
dec
test
and
sub
sub
push
ja
daa
dec
xchg
pop
fdivl
inc
mov
rcrb
mov
insb
sbb
ja
test
int3
leave
inc
inc
jnp
cs
scas
jp
test
sub
sub
in
out
popa
sub
outsb
cmc
fwait
addr16
arpl
rcrl
sub
popf
inc
push
into
sub
test
movsl
aad
push
cmpsl
mov
mov
mov
inc
mov
pusha
dec
pop
adc
stos
dec
mov
lods
mov
mov
nop
ja
sub
mov
xchg
jb
mov
inc
jle
sub
test
popl
mov
arpl
mov
outsl
pop
mov
xchg
mov
xchg
sahf
lock
sub
fnstcw
rcr
xchg
adc
inc
push
into
sub
test
cli
in
std
out
call
mov
arpl
enter
mov
subps
xlat
loopne
dec
repnz
mov
negb
pop
stc
jp
sar
xchg
xor
inc
ds
sub
test
cli
lds
pop
aad
push
fnstcw
arpl
enter
mov
das
pop
loop
loopne
dec
shlb
int3
mov
sahf
xor
sub
sbb
rcrl
xchg
shlb
inc
fmulp
sub
test
cli
and
aad
push
cmp
arpl
enter
mov
iret
push
outsl
mov
movsb
repz
stos
xor
dec
push
inc
mov
push
sbb
xlat
daa
outsb
or
push
push
shrl
test
cmp
nop
jbe
dec
dec
es
xchg
insl
testb
aam
and
push
out
mov
push
mov
pop
cmp
push
sbb
aad
push
or
inc
jmp
pop
inc
cmpl
or
jns
xchg
mov
shll
dec
aad
push
mov
or
inc
pop
lcall
aas
shll
mov
push
ss
int
test
pop
add
call
jg
dec
pop
and
aas
ljmp
mov
pop
imul
mov
call
jl
mov
push
call
mov
mov
fwait
pop
addr16
pop
jnp
jecxz
clc
or
scas
fs
pop
out
test
std
loop
mov
repz
xor
adcl
push
fidivs
ds
call
dec
scas
jb
pop
mov
rclb
or
les
mov
scas
xor
arpl
push
mov
push
xor
dec
mov
pop
inc
loopne
lock
push
out
xor
push
out
dec
push
pop
xor
sti
stos
scas
xchg
push
sub
push
loop
or
imul
jns
loope
jg
js
insl
sbb
and
rcl
inc
or
add
dec
je
popa
call
dec
cs
pop
sbb
jo
sti
cltd
xlat
lods
mov
push
test
sub
lods
xchg
jecxz
sub
js
adc
add
sbb
dec
in
mov
cmpsl
mov
fcmovnb
pop
in
xor
jecxz
out
mov
cmp
sub
les
adc
mov
mov
lahf
push
loop
add
xlat
jb
stc
inc
das
sti
jb
in
mov
in
stos
out
cmp
mov
or
insl
addb
loopne
xchg
push
ss
push
rcll
sbb
cmpsl
pop
int
add
fildll
mov
mov
aaa
fcoml
xor
add
cli
pop
into
and
sub
mov
int3
daa
lret
aam
adc
pop
in
rcll
cmpsb
out
mov
xchg
mov
pop
add
or
and
xor
shlb
icebp
lret
test
adc
ds
test
das
adc
ljmp
push
jae
addr16
add
dec
mov
xchg
insl
lock
cs
mov
cmp
xlat
repnz
jo
sub
dec
loop
int3
fcom
push
cmp
cmp
rorb
inc
ljmp
mov
sarb
inc
dec
cs
dec
or
bound
leave
dec
xor
enter
push
sbb
cltd
pop
sbb
shlb
and
jae
loope
cmp
add
mov
jo
jg
push
or
and
jne
in
je
jecxz
adc
cmp
movsl
test
leave
adc
mov
mov
xor
sub
popf
scas
loop
and
int
daa
sar
sub
leave
add
lahf
add
and
jmp
pop
xor
jp
out
xchg
fadds
loope
into
xor
cmp
out
push
dec
xlat
sub
std
or
jecxz
testb
cmpsl
push
lds
push
cmp
fisttpll
sub
jnp
xchg
sub
jnp
or
pop
popf
jns
pop
lea
clc
adc
inc
lret
jne
fs
insb
mov
xor
or
hlt
les
inc
sbbb
ret
cmp
scas
sub
push
mov
dec
xor
and
sti
jno
mov
fisubl
cmpb
jmp
cwtl
cmp
jp
cmp
mov
push
sbb
sub
pop
imul
jge
or
fnsave
cmp
mov
in
jl
imul
pop
mov
mov
lock
jne
mov
les
inc
dec
insl
mov
xchg
dec
repnz
sbb
xchg
es
pusha
xor
or
push
sbb
fs
sti
pop
push
mov
mov
hlt
or
popf
cld
notb
or
sub
sbb
out
icebp
dec
int
adc
sub
ljmp
into
sbb
sbb
mov
enter
dec
aas
add
popa
adc
repnz
push
rclb
ret
jbe
popa
out
or
xor
pop
sub
push
stos
inc
scas
sbb
adc
test
ja
lcall
push
pop
pop
mov
ror
or
push
pop
push
mov
fsubs
xlat
repnz
jnp
add
cmp
aaa
das
fstpt
adc
pop
jmp
outsl
shll
test
jae
cs
dec
repz
sub
aad
aam
leave
adc
sbb
lahf
int3
adc
and
cwtl
mov
jg
add
push
pop
int3
push
stos
pop
dec
dec
sbb
data16
pusha
dec
shll
pop
cs
js
js
lret
subl
mov
or
jne
push
aas
or
rclb
sub
enter
xlat
push
aaa
xlat
dec
cmp
sub
aaa
xchg
dec
loop
mov
out
mov
dec
shll
in
cmpl
test
out
jae
push
outsb
pop
loop
shlb
sti
add
jecxz
or
push
lods
mov
jbe
gs
lcall
mov
jb
js
and
int3
rclb
inc
push
push
mov
test
or
mov
test
arpl
jno
mov
pop
data16
movsl
or
sub
or
loopne
fxch
mov
sbb
mov
mov
jo
ja
adc
pusha
sbbb
sbb
or
or
aad
imul
popa
scas
test
fst
xchg
int
inc
in
movsw
ljmp
mov
sti
sbb
nop
or
repz
out
dec
outsl
lods
push
std
and
mov
sbb
cmc
daa
cmpsb
lea
test
cmpsl
ret
jmp
xchg
and
pop
rclb
dec
xchg
cld
lods
inc
sub
mov
pop
push
push
xor
dec
js
sbb
mov
dec
or
jp
xor
cli
sbb
add
into
outsl
pop
adc
xor
mov
push
mov
inc
mov
sbb
in
out
lcall
sub
push
lds
pop
jl
cmp
stos
push
mov
jnp
sub
idivl
xchg
mov
adc
mov
ss
sti
pop
outsl
and
test
arpl
mov
jl
loope
push
xlat
fsts
pusha
imul
adc
add
inc
jnp
push
and
rcll
ljmp
out
jle
inc
pop
and
pushw
push
cmpsb
add
mov
out
sub
adc
adc
icebp
sbb
sub
dec
enter
mov
add
jp
jb
xchg
and
dec
inc
adc
jmp
cwtl
cmpl
test
sub
into
mov
or
fadds
inc
xchg
je
in
mov
out
push
jl
insb
add
mov
std
push
sub
jns
pop
out
pop
shrl
test
jecxz
div
dec
sbb
or
fldenv
test
adc
fsts
inc
scas
cld
jbe
xorb
adc
xor
jo,pn
scas
jecxz
mov
lds
into
inc
mov
push
idivl
add
cmp
popa
pop
xchg
xchg
out
out
addb
or
mov
or
jno
ja
mov
add
enter
scas
cli
scas
cmp
out
scas
in
iret
popf
or
dec
sti
add
pop
xor
sbb
fdivs
push
rcrb
ret
inc
loopne
dec
mov
dec
fisubl
cmp
icebp
sahf
iret
cmp
int
hlt
push
sub
call
xor
add
mov
mov
and
adc
outsl
xlat
sti
shrb
cmpsb
mov
sti
imul
repnz
fadd
xchg
pop
and
in
cwtl
and
comiss
sbb
jno
dec
aad
mov
dec
pop
scas
popa
in
popf
xlat
or
push
jb
mov
stc
and
loopne
jecxz
sbb
in
sub
scas
xlat
add
dec
lods
sbb
push
scas
cmc
push
add
mov
inc
lret
fs
ja
sti
xor
xorl
xlat
loop
outsb
mov
ds
jl
mov
push
addr16
hlt
sarl
pusha
js
and
adc
shr
incb
dec
out
adc
sub
inc
jne
and
mov
inc
jmp
popa
inc
clc
xor
push
outsb
push
das
in
mov
and
jle
fstpt
scas
xchg
cltd
jge
pop
lahf
imul
add
std
or
dec
inc
sbb
pop
fs
jecxz
dec
cmc
lods
dec
mov
and
addb
mov
cmpsl
mov
cmp
shlb
lahf
test
lahf
mov
mov
jnp
das
push
jmp
shrb
xchg
movsb
ss
jbe
pop
mov
push
adc
mov
and
dec
addr16
pop
insl
arpl
in
push
xchg
push
mov
sub
inc
pop
std
lret
imul
in
inc
xor
adc
mov
sbb
loop
icebp
incb
mov
inc
ret
xchg
mov
dec
fdivrs
lea
mov
lret
pop
push
mov
push
xor
mov
fxch
mov
sbb
roll
roll
test
addr16
pop
shlb
int
sbb
or
push
add
pop
mov
xor
imul
dec
and
out
lods
sbb
ret
dec
xor
dec
pop
fimull
xlat
fwait
ret
or
push
jno
jns
cs
addl
addr16
outsl
es
mov
cltd
out
mov
js
jmp
cwtl
push
andl
mov
call
jnp
daa
shrb
outsb
imul
pop
scas
pop
insl
addr16
insb
ret
cmc
sub
sbb
js
inc
mov
outsb
cmpb
pushf
inc
bound
add
push
or
mov
jo
jmp
pop
dec
js
xchg
les
and
xchg
jl
pop
movsl
push
jnp
jg
mov
sub
xchg
subl
pop
jbe
scas
cmp
xchg
notb
mov
hlt
faddl
in
lcall
cmp
sbb
out
sub
popf
mov
sub
or
add
lods
test
or
xchg
xchg
push
mov
aaa
nop
push
jae
sbb
or
aam
adc
xor
das
pop
shlb
ljmp
adc
sbb
jo
or
xchg
js
jns
out
bound
and
or
push
pusha
bound
inc
cmp
mov
leave
call
or
stos
mov
push
dec
cmp
cmp
ret
xor
jae
fnstcw
push
dec
shll
sahf
dec
or
sti
push
jae
mov
lret
add
cmpxchg
cwtl
cmp
loopne
lcall
xor
pop
insb
sub
mov
cmpl
lret
xor
lret
inc
ja
pop
add
jnp
sti
inc
or
imull
sar
xor
cmp
xchg
test
ljmp
and
sahf
into
shlb
jmp
stos
push
clc
sbb
arpl
mov
adc
call
push
out
inc
lock
inc
add
add
mov
decb
cmpsl
aam
adc
jno
sbb
nop
out
mov
push
push
inc
sbb
out
daa
dec
pop
dec
or
mov
movsl
ljmp
in
add
jne
lahf
testl
sar
arpl
push
xor
dec
xchg
movsb
jb
fwait
clc
sub
decb
shrl
xchg
lods
xchg
cwtl
adc
jge
mov
andl
pusha
add
push
push
jl
mov
cmpb
psrlw
add
add
leave
xor
mov
cltd
lahf
cmpsb
stc
fistpl
mov
lds
pop
addr16
data16
mov
sub
leave
lods
push
clc
mov
inc
mov
ja
std
sub
in
outsb
sahf
dec
dec
lock
dec
fstps
dec
push
aad
cld
push
lods
mov
outsl
inc
test
pop
jmp
push
add
cltd
dec
push
mov
add
pop
and
mov
pop
or
call
sub
cwtl
rclb
inc
popa
fmul
adc
loop
adc
jns
jb
repnz
loope
popf
pop
aam
loope
push
out
scas
sub
fldt
icebp
enter
lret
mov
inc
scas
mov
rcl
cmp
mov
enter
das
jg
out
cmp
test
ficompl
dec
popf
dec
push
mov
and
mov
lods
lea
sbb
inc
sub
aaa
push
popf
jno
ret
cmp
add
pop
fwait
mov
insb
dec
jp
pop
jb
jns
sub
imul
imul
xchg
xchg
cmp
in
add
mulb
xchg
faddl
hlt
dec
call
dec
inc
mov
loopne
xor
jno
mov
adc
mov
jo
scas
stos
xchg
call
ljmp
les
push
jp
in
mov
imulb
in
mov
jo
into
in
test
dec
adc
xchg
ja
movsl
shll
sub
rolb
insb
adc
add
stos
or
jg
pop
mov
dec
push
jnp
je
arpl
xorb
mov
xor
adc
sbb
lcall
jg
out
cmpsl
add
fcomps
fs
ret
lahf
cmp
push
mov
mov
pop
push
in
jne
and
sahf
xchg
ds
into
scas
lock
out
adc
push
pop
cmp
fmulp
add
add
movsb
aas
jp
into
add
xchg
cld
ret
adc
inc
sti
fidivl
xor
lea
jnp
into
or
pop
xor
mov
xchg
rorl
mov
mov
sbb
mov
andb
jg
fsub
mov
pushf
mov
in
jnp
and
lods
push
imul
jmp
sub
push
mov
adc
dec
sbb
mov
inc
jp
mov
aad
add
mov
add
mov
testb
fs
jne
cmp
out
test
sub
push
loope
mov
xor
ja
or
adc
js
inc
icebp
mov
lods
and
hlt
push
bound
adc
or
and
jnp
std
dec
cmpsl
nop
stos
shrb
cs
je
jle
lret
ud2
push
adc
iret
cmp
add
dec
lahf
rcrb
xchg
mov
add
mov
dec
movsl
and
push
and
ss
in
adc
ss
xorl
cmp
adcb
xor
divl
sbbb
pop
stos
sbb
into
jmp
aas
pop
push
andl
scas
inc
sub
fisttpll
popf
mov
lock
test
jnp
in
push
lods
or
mov
xchg
imul
mov
push
sti
jns
push
cmpb
add
pop
fildll
xor
push
xor
jns
out
je
mov
cmp
xchg
dec
dec
mov
dec
cld
aas
cmp
movsl
mov
movsb
insb
fnstenv
mov
movb
cmp
and
xchg
sub
clc
fwait
jmp
jle
pop
movsb
dec
xchg
data16
mov
das
mov
fisubl
cmp
xchg
jmp
jne
push
cltd
xor
dec
sbb
dec
faddl
imul
arpl
daa
sbb
xchg
out
jg
cmp
and
cmpsb
mov
adc
pop
sahf
mov
outsl
jp
fsts
out
dec
addr16
mov
inc
push
test
dec
outsl
dec
add
mov
inc
pop
arpl
sub
mov
add
ja
imul
divb
mov
jnp
incb
push
jns
pusha
add
inc
out
xchg
push
jnp
dec
aam
aas
pop
insl
inc
jl
inc
dec
jbe
scas
xchg
inc
fwait
cs
movsb
mov
lea
aad
out
stos
push
loopne
and
es
gs
push
fs
adc
inc
subl
cli
loope
inc
push
mov
mov
xor
cmp
push
shll
xchg
jmp
mov
movsb
ret
lcall
dec
leave
cmp
scas
inc
dec
mov
loop
and
jg
das
adc
aad
popa
mov
jge
andb
push
daa
sbbb
mov
xchg
and
sub
xchg
push
jno
jl
xor
jge
sbb
mov
data16
adc
xor
jno
mov
popf
cwtl
enter
js
push
rorl
pop
xchg
imul
push
es
cmp
adcl
insb
lods
test
sarb
cmp
data16
aaa
cmp
mov
ljmp
or
inc
lret
pushf
xchg
js
movsb
fwait
xchg
or
idivl
addr16
xor
test
cmpsb
mov
dec
sbb
aas
and
faddp
fidivrl
dec
mov
mov
adc
or
into
and
fwait
push
enter
fwait
leave
jl
rorl
mov
mov
popf
cmp
outsl
mov
mov
dec
mul
xchg
lods
add
cmp
loope
adc
fldt
jns
imul
scas
test
repz
add
dec
addr16
les
mov
xchg
test
push
dec
les
cmp
std
push
aas
rcl
jle
test
mov
sbb
jge
test
std
pop
sub
fstpl
xchg
fucom
mov
das
sub
sbb
mov
pop
cmp
push
in
cmpsl
lea
jecxz
pushf
leave
adc
xlat
je
test
dec
out
dec
stos
ja
rcrb
stos
lock
and
in
gs
je
movb
imul
and
fs
fldcw
or
cvttps2pi
cs
stos
aas
fdivrs
cmpb
push
push
push
out
pusha
dec
notb
rol
xchg
mov
and
dec
cmp
inc
ret
pop
inc
and
and
js
ds
and
fnstsw
mov
adc
in
cmpsl
jmp
rolb
dec
xchg
mov
xor
mov
jmp
cld
and
leave
aam
adc
xchg
jmp
sub
std
adcb
iret
test
jge
add
jecxz
jbe
sub
add
mov
leave
mov
shr
inc
scas
push
daa
push
add
mov
or
pop
adc
int
outsl
leave
xchg
and
xchg
lret
dec
cmp
hlt
sahf
jp
inc
les
mov
enter
mov
cmp
out
jmp
dec
lahf
jb
popa
fimull
mov
enter
lahf
mov
jmp
sub
leave
xchg
jb
in
lock
cmc
mov
inc
xor
movsl
push
stos
clc
jns
mov
outsl
cmpsl
adc
push
ltr
gs
rolb
mov
sti
shrb
mov
mov
mov
inc
aam
xchg
mov
imul
je
out
mov
mov
add
mov
cmp
jns
rclb
xor
mov
push
sbb
lea
dec
sub
loopne
cs
data16
testl
pop
dec
mov
jecxz
push
fadds
scas
aas
jns
mov
push
andl
mov
adc
test
mov
das
orl
lds
int
das
jns
insl
sub
aad
mov
rcl
scas
xor
xchg
loop
mov
mov
cmc
scas
sbb
mov
pop
repnz
sub
jp
test
lret
rorl
add
mov
mov
jno
mov
pop
shl
ret
fiaddl
dec
jmp
insb
rolb
dec
jo
jle
mov
and
mov
dec
pushf
xor
sub
adc
push
jns
sahf
and
inc
loope
subb
clc
mov
mov
loop
ret
outsb
inc
mov
push
add
or
push
or
loop
loop
sbb
adc
into
rolb
push
xchg
mov
js
push
xchg
stc
xchg
incb
sti
lahf
push
mov
call
dec
pop
cli
leave
dec
push
mov
test
jecxz
mov
inc
mov
mov
cmp
jne
adc
dec
jle
jp
mull
dec
ljmp
jnp
sti
ret
mov
insb
pusha
call
leave
xchg
or
dec
cld
jnp
and
fs
jmp
lods
push
sub
cmp
sub
cwtl
mov
push
stos
movsl
inc
sub
push
jmp
mov
or
rep
loope
adc
add
push
test
cmp
push
xor
cwtl
sti
mov
call
loope
inc
jle
notl
out
out
bts
jecxz
jecxz
cld
inc
push
lock
repnz
push
pop
dec
sbb
mov
movsb
mov
mov
push
test
lea
add
popf
repz
inc
cvtps2pi
dec
sub
test
cmpsl
and
lock
fs
lcall
das
mov
cmp
inc
ret
fiadds
jl
daa
scas
adc
shll
xchg
outsb
aas
subb
or
movsb
sbb
imul
cmp
lret
mov
add
mov
xor
loopne
dec
das
mov
test
pop
or
je
pushf
dec
gs
fnstsw
cmp
jl
mov
adc
addb
negl
out
lea
inc
adc
cmpsb
idivl
pop
pop
xorl
je
test
jbe,pt
mov
adc
sahf
out
shll
ret
cmc
inc
sti
pushf
xchg
inc
pop
push
mov
mov
bound
and
inc
out
cmp
cmpsb
dec
pop
pop
mov
repnz
xchg
scas
xchg
jg
push
bound
add
gs
mov
mov
adc
or
scas
adc
lcall
add
movsb
fisttpl
dec
mov
xor
lcall
scas
jle
xor
mov
dec
push
add
shrl
push
mov
push
inc
repnz
dec
data16
xor
sbb
nop
jnp
mov
pop
jae
sbb
mov
push
add
dec
mov
push
les
inc
mov
loop
test
aam
repnz
sti
add
in
jns
aad
sarl
rcll
or
mov
mov
popa
dec
mov
pop
dec
mov
roll
mov
sbb
imul
lahf
test
test
mov
and
dec
pop
mov
addr16
sub
xor
je
ficompl
lcall
daa
gs
ja
arpl
pop
lahf
mov
das
push
sub
lock
xorl
in
movsb
in
inc
fwait
ret
pop
js
adc
jge
and
inc
and
jbe
jg
popf
cmpsl
sbb
mov
jne
test
push
inc
repz
add
pop
dec
std
pusha
outsb
xchg
call
pop
insl
in
sbb
outsb
movsb
push
sub
inc
inc
and
popf
jo
pop
inc
mov
jbe
jns
push
outsb
xor
push
cli
push
jp
mov
testb
imul
adc
js
jo
les
and
scas
mov
les
jno
jge
adc
loope
shld
adc
sbb
add
in
pop
xchg
mov
push
push
pop
into
cmpb
jnp
mov
test
or
jle
incl
test
cmp
mov
xlat
andl
sti
sub
fisubrl
jbe
xchg
pop
cmpsl
lahf
push
mov
cmp
scas
adcb
sub
enter
inc
jmp
test
in
xchg
cmc
mov
fwait
ja
pop
inc
scas
push
fiadds
cmp
fwait
bound
fldenv
push
xor
mov
lods
aaa
jecxz
push
fisttps
stc
mov
push
shrb
sub
xchg
iret
push
cmp
decl
xchg
gs
xchg
test
mov
ja
dec
xorb
cli
and
dec
out
cmp
mov
mov
cmp
mov
fdivr
mov
rcll
in
fsubrl
mov
test
push
scas
mov
push
mov
push
sbb
lcall
out
adc
push
jne
enter
ds
pop
clc
outsl
jae
nop
out
lret
mov
and
mov
ret
mov
shll
stos
push
inc
inc
rcrb
mov
out
mov
dec
mov
arpl
js
dec
das
mov
jbe
adc
outsl
xchg
rclb
xlat
stc
js
je
pushf
loopne
adc
dec
sub
push
and
jne
push
pushf
sbb
inc
jl
sbb
dec
pop
leave
jns
cmp
jbe
xorb
fisttpl
out
jle
cmpsb
mov
pop
lods
insl
push
pop
mov
cmp
lcall
push
push
loope
push
inc
out
push
test
and
sbbl
pop
cmc
add
inc
incl
data16
push
dec
sub
jae
mov
loope
jne
cmpsb
or
inc
imul
dec
cs
push
xor
fpatan
outsb
pop
jp
jnp
sub
push
lret
cltd
out
cmp
jns
lahf
and
jne
mov
mov
xor
inc
jg
dec
stos
ja
sub
lock
xor
and
shr
jne
mov
rcl
stos
ja
movsl
cmc
cmp
call
mov
push
faddp
pusha
stc
jnp
sub
xchg
dec
cmp
ret
cmp
or
jmp
add
pop
enter
pop
sub
fxtract
cs
mov
cmp
xchg
cmc
xchg
mov
sbb
cmp
push
jo
dec
pop
icebp
push
in
mov
adc
add
dec
out
dec
sti
cmp
out
jbe
ds
push
gs
xor
pop
mov
and
and
scas
xchg
mov
stos
fs
ss
dec
stos
sub
mov
jge
push
xor
dec
jecxz
pop
sar
test
mov
inc
das
pushf
and
mov
xor
shlb
xchg
test
outsl
mov
iret
sub
push
push
outsl
mov
xchg
xchg
cmp
popf
jne
cmp
test
sub
leave
jge
pop
lods
inc
push
in
ja
in
jecxz
push
sub
subb
mov
lods
mov
lret
in
out
rolb
idivb
adc
subb
in
dec
sbb
xor
sbb
adc
pop
dec
dec
inc
iret
push
mov
xor
mov
add
mov
addb
sub
dec
xchg
gs
pop
ljmp
dec
mov
xor
test
xchg
dec
sub
ds
push
mov
jno
imull
cwtl
pop
je
lahf
pop
fwait
and
mov
cmp
int3
lahf
out
xor
dec
insb
in
mov
add
jns
cli
les
pop
mov
xor
pop
mov
dec
addr16
and
imul
push
out
sub
mov
mov
fstl
andb
dec
or
test
insb
mov
or
arpl
mov
int3
adc
cmpl
xchg
aad
push
add
scas
push
jnp
cmpsl
mov
sarb
inc
sti
test
xor
insl
iret
mov
lret
mov
xchg
movsb
inc
add
mov
push
mov
pop
out
pop
pushf
mov
mov
and
ja
clc
xorb
icebp
subl
mov
lret
fistps
pop
pop
aaa
or
cmpsl
es
adc
sub
data16
rclb
test
lret
jbe
dec
xchg
test
sub
fwait
clc
out
fcomps
pop
mov
cmp
fmuls
xchg
sub
jmp
dec
add
icebp
or
in
jge
adc
sbb
in
pop
or
mov
mov
jbe
jecxz
adc
push
xchg
dec
ljmp
sbb
lods
out
or
mov
mov
loop
pop
jae
or
fadd
rcll
out
xchg
ficompl
mov
pop
scas
gs
pop
aaa
push
push
mov
sbbb
sub
sbb
xor
push
or
ja
sub
out
mov
lea
lret
insl
in
mov
xorl
subb
hlt
mov
or
xchg
jae
jns
scas
jbe
inc
jae
out
fbld
aaa
fucomip
out
test
push
sbb
push
pop
jo
pop
sub
lahf
pop
addr16
sub
out
jge
pop
inc
cli
fsubr
sbb
je
dec
mov
cmp
les
stc
pop
mov
or
pop
cmc
pop
dec
xchg
nop
xchg
mov
clc
insl
mov
sub
enter
cs
adcl
neg
call
add
aaa
inc
mov
test
push
push
aas
mov
push
lcall
dec
popf
popa
jb
mov
mov
test
out
rclb
int
imul
xchg
adcl
or
fdivs
stc
insl
test
push
mov
xchg
cmp
hlt
inc
adc
and
pop
aam
push
mov
push
add
test
mov
cmp
ds
push
pushf
mov
ja
cmp
mov
movsl
mov
push
enter
popl
stos
xor
dec
inc
mov
js
iret
pop
xchg
cmp
lahf
shll
and
xchg
hlt
mov
and
idivb
add
repz
mov
xor
mov
movsl
pop
test
fsubrl
add
mov
xchg
sbb
sbb
pop
out
pop
loopne
or
aas
cwtl
mov
dec
lods
sbb
or
pop
addr16
jp
cwtl
popa
lahf
leave
push
xchg
xchg
dec
push
mov
sub
in
jge
cmp
lods
jp
jne
fbstp
mov
out
jl
jle
call
xor
rcrl
test
pop
rcrb
sub
and
fmull
mov
cmp
mov
and
mov
pop
xchg
push
stos
loop
in
fmull
sub
jmp
jae
inc
jmp
sbb
xor
push
stos
bound
pop
and
jg
and
xchg
test
xchg
sbb
xchg
jge
cmp
leave
out
mov
in
in
mov
inc
dec
dec
push
inc
mov
jnp
lret
jb
imul
pop
shld
jne
cwtl
iret
mov
sbb
and
int
cld
dec
dec
mov
cmp
test
and
cmc
mov
xor
rol
or
int3
xorl
jp
inc
icebp
lret
mov
push
out
repnz
sbb
orb
loope
or
cmp
ja
fstpl
out
jge
add
test
mov
pop
les
iret
or
xchg
lock
sbb
rorl
mov
sbb
inc
and
dec
cmc
hlt
jg
fiadds
je
pop
dec
ret
push
pop
lods
sahf
push
jmp
cmp
fidivl
xchg
lock
loope
fbld
pop
mov
cmp
je
or
mov
test
sub
addb
sub
iret
in
scas
or
mov
fcompl
add
test
inc
fists
mov
lahf
push
or
bound
cmovl
aas
mov
out
xchg
jmp
sub
and
inc
rolb
sbb
aad
add
mov
fsubrl
xchg
gs
rorb
mov
loopne
pop
mov
les
lods
mov
orb
dec
les
shrb
enter
mov
add
loopne
es
cltd
dec
das
cmp
andl
xor
sub
jmp
fsubs
adc
adc
aas
pushf
scas
ds
or
jp
cli
outsl
jae
in
jae
jbe
sti
mov
movaps
data16
push
adc
dec
inc
test
dec
cmp
mov
iret
jp
pop
xchg
pop
dec
cltd
mov
rcrb
inc
addr16
dec
mov
cmpsb
fs
xchg
sbb
pop
jnp
push
sub
pop
and
jl
aam
adc
cmp
or
stc
inc
popa
sub
mov
je
cld
hlt
cmp
int3
std
outsb
jl
xchg
int3
ss
dec
aas
xchg
nop
addl
cmp
cmp
add
cld
test
aam
loope
dec
scas
inc
xchg
sbb
xchg
clc
fsubr
mov
dec
mov
insl
or
jno
insl
imul
mov
push
stos
inc
inc
stos
fsubr
aas
js
shl
mov
jb
cmc
push
mov
int3
gs
dec
or
mov
repz
cli
ja
pushf
es
fmull
push
jno
pop
test
pop
mov
pop
jnp
jae
push
cmpsb
insl
orb
mov
fs
movups
ret
bound
in
mov
jnp
mov
into
mov
mov
sub
push
test
sbb
enter
pop
xchg
clc
adc
repnz
fisubl
mov
adc
cltd
aas
mov
jno
scas
jecxz
pop
je
or
sub
js
mov
movsl
in
inc
inc
les
mov
loope
and
mov
cmp
or
push
lods
or
or
stos
lcall
xor
popa
rcr
cwtl
dec
mov
mov
add
pop
cs
lret
adc
scas
enter
or
std
jg
mov
lcall
sub
mov
lcall
mov
push
sub
lahf
stos
or
or
dec
mov
fwait
pop
out
xchg
movsl
push
push
jmp
out
jno
aas
sub
out
lea
scas
mov
insb
jmp
push
iret
inc
pop
test
btr
stc
mov
rclb
ljmp
sbb
aas
push
adc
enter
cwtl
inc
clc
inc
roll
jl
pop
dec
adc
cmp
pop
gs
scas
sarl
subb
outsl
addr16
add
addr16
xor
dec
cmp
gs
add
push
stc
push
into
sahf
data16
mov
jns
outsl
aad
or
mov
push
enter
push
scas
xorl
jb
std
cwtl
sbb
add
mov
data16
ljmp
cmp
mov
mov
imull
xor
mov
xor
daa
adc
sbb
adc
pop
pop
popa
push
mov
jns
mov
imul
pop
or
and
mov
xchg
xchg
xchg
scas
mov
shl
or
mov
int3
inc
sub
pop
mov
xor
push
sbb
mov
in
loope
arpl
cmp
mov
lds
lea
sub
dec
les
xchg
rcrl
dec
dec
push
fadds
add
push
orl
int3
cmp
push
add
mov
cmpsb
aam
jnp
sbb
mov
xchg
xor
mov
stos
std
mov
out
pop
les
pop
dec
jp
mov
push
das
add
cs
pop
mov
push
inc
fsts
in
push
xor
cs
pop
mov
or
int3
mov
adc
dec
je
mov
in
in
fldl
jne
push
mov
push
outsl
mov
jmp
xorl
repz
je
in
lret
sub
mov
andb
push
push
and
xchg
iret
inc
leave
push
xor
outsb
outsl
aaa
and
pushf
lret
subb
orl
xchg
dec
and
daa
out
cmpsb
inc
xchg
lock
loop
cwtl
sub
lahf
xor
aas
inc
test
dec
xor
sub
clc
or
add
clc
sbb
scas
or
sub
push
pop
fldt
jae
test
or
pop
pop
push
idivl
fsubs
mov
lds
add
sbbb
push
sbb
dec
or
jmp
mov
aas
jmp
xchg
rorb
adc
and
mov
push
inc
xchg
out
push
cmp
fidivrs
ret
add
xor
je
add
mov
js
sub
lcall
mov
les
adc
fidivrs
xchg
inc
jmp
fdivrs
or
xchg
mov
pop
insl
jmp
inc
pop
gs
push
sbb
push
jmp
movsb
jb
mov
shr
jecxz
out
pusha
cmp
and
mov
sub
leave
into
popf
das
jle
fwait
sbb
std
mov
and
xlat
sbbl
inc
dec
out
test
loop
and
repz
inc
shlb
jbe
jb
xlat
popf
xchg
push
jp
push
or
sub
pop
sub
insl
cmp
dec
sbb
rclb
mov
and
fs
sarb
mov
subb
mov
repnz
imul
pop
push
movsb
scas
jg
inc
fcmovu
andb
push
pushf
and
jo
rcll
fisubs
push
inc
mov
mov
enter
push
bound
pop
push
fisttpl
jne
or
push
mov
cmp
xchg
lods
mov
jns
inc
push
dec
in
push
rcrl
jle
mov
jecxz
adc
sub
sub
and
or
xchg
js
inc
out
enter
sub
sahf
mov
lret
aas
mov
sub
mov
repz
adc
ret
sti
mov
jp
mov
rolb
xchg
lds
xor
pop
adc
and
xchg
dec
jecxz
inc
xchg
arpl
jno
pop
pop
mov
jo
mov
sub
jno
mov
pop
jmp
dec
imul
cmp
inc
stos
push
in
mov
shll
mov
div
jnp
rcrb
push
pop
daa
aaa
inc
inc
mov
sub
call
scas
inc
inc
std
mov
sbb
mov
test
aas
bound
pop
jnp
and
inc
mov
out
mov
push
dec
and
mov
lods
inc
in
pop
mov
sahf
cwtl
imul
mov
mov
bswap
ret
sbb
sbb
nop
and
in
add
loop
leave
out
nop
mov
test
int
push
dec
scas
push
mov
bound
leave
pop
pusha
push
addb
dec
mov
sbb
gs
incb
jp
sti
cmp
ret
mov
mov
loope
mov
push
push
inc
repnz
xlat
push
or
pop
pop
cmp
adc
in
inc
lea
dec
aad
xor
dec
es
adc
mov
push
out
test
xchg
test
mov
fwait
out
dec
stos
cmp
daa
and
hlt
shlb
xchg
das
and
aaa
pop
mov
add
push
out
andb
sbb
lret
jns
xchg
cmp
jns
xchg
stos
fildll
jecxz
test
arpl
stos
out
add
int
scas
cltd
lods
dec
and
or
push
mov
loope
dec
outsb
and
or
pop
add
push
orb
sbbb
rcrb
push
and
iret
jnp
movl
or
pusha
jo
push
add
mov
xor
shll
enter
scas
mov
mov
idiv
popf
mov
cmp
dec
add
loope
arpl
jle
sub
add
test
mov
inc
and
xor
sbbb
hlt
or
shll
movsb
add
mov
sahf
les
sbb
sbb
or
test
xchg
repz
jnp
and
and
adcl
aas
bound
jae
in
loop
sub
cli
fldcw
aam
add
test
outsb
cmc
aad
addr16
add
imulb
jge
ljmp
and
out
mull
scas
frstor
pop
gs
pop
jecxz
inc
jb
aam
in
rcrb
jle
sahf
mov
dec
sub
dec
cmc
mov
adc
pop
test
lahf
inc
pop
or
add
sahf
adc
adcl
nop
xor
inc
rol
adc
loope
pushf
fimull
push
sub
rcrb
push
xor
fcmovne
cmpsl
mov
cmpb
mov
movsb
dec
imulb
test
push
push
dec
dec
pusha
dec
ret
call
in
sbb
jmp
fdivrl
out
mov
add
mov
cmc
in
push
cmc
pop
cmp
test
jmp
push
cmpsb
xchg
xchg
dec
outsb
push
das
jae
pusha
dec
sub
data16
sarb
push
insb
roll
pop
je
mov
scas
adc
xchg
jbe
cmp
xor
dec
jo
mov
adc
repnz
adc
data16
ret
outsb
in
mov
lcall
dec
adc
mov
inc
loopne
std
lahf
pop
adc
push
mov
inc
mov
or
mov
mov
mov
into
xor
ret
jb
icebp
xor
in
add
pop
testb
outsl
xor
addb
adc
fabs
cmp
xor
scas
cmp
inc
outsl
into
rcr
lock
sbb
lea
int3
scas
inc
sub
in
and
jge
mov
dec
sbb
and
stc
pusha
sub
push
in
call
mov
mov
xor
lahf
ja
sub
shrl
mov
fisubl
adcl
xchg
inc
cltd
xor
in
stos
outsl
cmp
mov
xor
lods
dec
push
lds
sti
cmpsb
sub
xor
cmp
or
xchg
rorl
cmp
stos
or
inc
pop
inc
cs
push
les
daa
sub
push
push
data16
pop
and
movsl
cmc
shll
xchg
std
push
daa
sbb
jb
cmp
xor
pop
repz
cmp
dec
out
xor
das
pop
call
movsb
push
int3
and
loopne
imul
popf
je
add
dec
mov
gs
mov
push
xor
adc
and
sbb
ds
rorl
xchg
push
outsl
adc
pop
lahf
xor
cmp
or
jb
inc
repnz
and
es
cmc
aad
lret
inc
sbb
push
ret
cltd
adc
ss
arpl
cmpsb
stc
push
shl
cli
bound
push
pop
xchg
sbb
cltd
test
clc
pop
sbb
insl
cmp
insb
cwtl
loope
rcl
sub
sub
adc
inc
sbb
inc
loopne
jno
xchg
mov
cmp
inc
adc
mov
jg
scas
mov
or
repz
push
stos
sbb
push
dec
cmp
aas
es
or
adc
inc
or
mov
sbb
jb
inc
and
push
dec
jo
cmc
and
jnp
add
pop
lods
sbb
loope
out
fldenv
xor
dec
push
leave
mov
lea
jns
test
add
mov
push
sub
and
in
ret
push
push
lods
mov
fldl
jl
jp
jo
sub
rorb
push
bswap
loope
dec
pop
inc
je,pt
xlat
std
aaa
pop
int
arpl
dec
mov
enter
cld
xor
lahf
jmp
sub
add
add
dec
movsb
mov
mov
and
cmp
inc
ds
test
or
inc
sbb
xor
inc
pop
xchg
jns
xchg
jnp
jns
in
xchg
inc
daa
scas
in
push
cmp
testb
jp
ret
inc
sub
int
out
and
out
mov
pop
pop
jl,pn
pop
push
shll
shrb
push
fidivs
cmp
lds
cwtl
mov
popa
push
mov
pop
jle
adc
shll
lcall
fwait
movsl
push
out
xchg
add
out
inc
ds
int
add
shl
cmc
shl
cwtl
pop
mov
dec
mov
cmp
adcl
sbb
std
addr16
arpl
push
gs
inc
movsl
dec
sub
stos
xor
or
iret
out
xor
mov
or
dec
jp
lret
push
popa
mov
dec
mov
stc
js
call
addr16
xchg
in
sbb
repz
in
dec
lahf
in
sub
in
movsb
repz
pop
jnp
arpl
mov
mov
in
push
add
ljmp
out
jl
push
mov
xor
xchg
pusha
add
arpl
fs
xchg
test
sti
add
into
popf
cli
cmp
loope
mov
out
xchg
jmp
push
fldl
lret
movsl
cld
loope
push
pop
fdivs
push
push
mov
sub
imul
test
fdivl
bound
mov
sbb
and
mov
enter
add
lret
repz
add
call
jl
inc
scas
test
jp
inc
data16
aas
pop
dec
adc
jmp
add
fwait
out
add
cli
cmp
lock
repz
fidivl
sti
in
add
scas
xor
sbb
stos
nop
xchg
mov
ljmp
je
lcall
shl
jecxz
xlat
je
xchg
ja
xchg
jl
inc
repz
je
out
js
add
daa
push
orb
pop
jg
aam
inc
scas
xchg
add
inc
in
int
out
notb
lods
fdivrp
sbb
rcrl
shrb
push
pop
cmp
adc
xchg
sahf
mov
push
loopne
hlt
iret
gs
data16
repnz
lar
and
out
sbb
movsl
int3
cmp
aam
aam
dec
in
dec
test
inc
negl
inc
sbb
rcrb
jg
mov
and
loop
add
inc
jl
cltd
mov
adc
enter
jp
mov
ret
inc
int3
push
push
adc
xor
incb
pop
outsl
mov
dec
cltd
dec
ja
mov
stc
ds
shlb
pop
sbb
adc
pushf
notl
add
jns
repnz
mov
dec
xor
pushf
nop
bound
xor
sub
xor
cmp
cld
fisubrl
rclb
pop
lods
jo
and
or
xor
or
les
js
dec
gs
and
dec
inc
addb
jmp
sub
mov
pop
fmuls
insl
jp
pop
and
push
loopne
outsl
ror
das
cwtl
leave
shll
dec
mov
xor
adc
outsb
test
sub
xor
sbb
push
jmp
scas
mov
stc
or
out
mov
cltd
scas
push
and
dec
pop
dec
sub
fidivrs
shll
sarl
xor
dec
ja
fwait
mov
jl
xchg
sub
mov
add
fldcw
xlat
sbb
xchg
dec
outsb
dec
mov
lods
adc
sub
adc
mov
jno
test
das
es
or
sbb
lgs
dec
xchg
cld
jnp
mov
clc
add
or
rcrb
jg
mov
popf
push
lods
in
fs
aam
mov
leave
cmpsl
mov
in
push
mov
sub
das
call
pusha
jge
push
movsb
cmp
clc
leave
mov
sbb
repz
scas
add
pusha
push
mov
xchg
jg
js
add
cmp
outsl
dec
jl
pop
outsl
das
pop
inc
mov
pop
es
imul
dec
dec
push
out
jge
pop
sar
das
repnz
imul
cmp
pop
aam
das
dec
pop
push
pop
pop
ret
push
or
hlt
movsl
test
pop
add
xchg
sbb
push
ss
xor
in
add
call
jl
xor
rorb
setnp
ret
ljmp
int
mov
mov
iret
jle
xchg
in
mov
fsub
mov
outsb
aam
popf
dec
mov
pusha
mov
psubsw
repnz
sbb
cltd
adcl
leave
outsl
fbld
in
imul
lock
adc
lret
jne
pop
rcll
out
testb
ja
dec
xor
ret
rcrb
mov
aaa
rcll
out
aaa
pusha
imul
mov
push
shrl
cmp
push
test
scas
rep
adc
mov
leave
mov
outsl
add
mov
push
inc
jb
add
shll
and
adc
mov
repz
test
mov
mov
leave
stos
pop
and
insb
sbb
mov
push
vfnmadd132ss
lea
fdiv
pop
repz
mov
mov
fwait
clc
aaa
push
das
adc
mov
pop
jecxz
fistps
add
push
call
inc
call
scas
or
add
push
loope
mov
add
roll
enter
inc
loop
dec
adc
lahf
add
test
push
jmp
lahf
sbb
out
fnstenv
adc
adc
mov
int3
js
push
jecxz
call
push
les
ret
pop
lods
call
bound
jecxz
mov
rcll
dec
sti
xor
popf
pop
pusha
popf
jecxz
stos
shlb
enter
mov
sbb
jo
inc
mul
arpl
scas
sbb
jecxz
das
adc
dec
xor
ret
int3
jg
in
sub
js
dec
sub
das
xchg
mov
cmpl
inc
dec
mov
mov
roll
imul
xlat
add
scas
shrl
add
pop
jle
bound
aaa
stc
and
out
popf
jne
jnp
stc
xor
dec
add
adc
pusha
cmp
adc
cmp
dec
sti
out
inc
and
jo
test
hlt
test
or
jle
inc
xchg
push
outsl
jl
popf
pop
jle
jmp
and
das
jae
mov
arpl
rorb
inc
jecxz
loopne
pop
pop
iret
out
mov
add
aaa
push
push
pop
rorb
mov
lods
xchg
arpl
fimuls
loope
int3
es
ja
lds
push
jns
sbb
addr16
test
jbe
in
dec
test
mov
lods
out
and
adc
int
clc
inc
dec
dec
inc
sub
dec
test
cs
jecxz
add
xchg
pop
mov
gs
jl
call
inc
addb
fsubl
es
jnp
aam
xchg
cmova
add
je
sti
and
push
test
dec
cmpl
xor
jmp
mov
sub
popf
add
scas
and
fisttps
cmp
xchg
mov
les
shll
mov
sbb
sti
dec
xchg
fcomps
outsl
lea
shrl
mov
sub
repz
and
enter
arpl
lea
push
scas
adc
pop
aaa
mov
jnp
add
scas
jp
dec
jp
lods
pop
shll
cmp
inc
mov
jmp
mov
and
add
outsb
stc
ljmp
push
push
aas
int3
push
mov
mov
int
js
push
push
push
ds
push
sarl
int3
pop
add
mov
xor
popf
aam
cmp
mov
dec
es
mov
mov
and
out
fisubl
inc
iret
cmp
push
out
lahf
pop
jne
in
mov
andl
out
sbb
lret
sbb
or
inc
push
jbe
adc
daa
add
dec
or
addr16
or
sub
in
js
test
lds
pushf
add
enter
movsb
mov
cmp
jo
or
and
xorl
call
sub
arpl
jg
aad
arpl
in
ja
push
add
push
and
mov
jle
dec
pop
xchg
mul
add
jnp
lds
out
cwtl
mov
add
popa
jb
in
xchg
out
push
mov
adc
push
push
popf
dec
jbe
pusha
subb
dec
jge
addr16
int3
mov
imul
adc
fidivl
sti
incl
jecxz
xchg
mov
add
fs
imul
jg
cmp
mov
push
xchg
rcll
movsl
sbb
mov
sub
test
sbb
lret
dec
pop
subl
stos
test
dec
fdivrl
adc
jecxz
data16
stos
or
out
mov
test
mov
or
inc
rclb
push
inc
xor
adc
sub
dec
cmp
imul
push
movsl
addb
or
or
movsb
dec
popa
cli
push
jno
mov
out
jl
je
data16
imul
testl
inc
cmp
das
mov
mov
or
movsb
lret
xor
scas
lret
cwtl
pop
xchg
xchg
push
jno
adc
mov
cmp
ret
rolb
push
xchg
xchg
les
push
aaa
push
into
cmc
dec
clts
out
jne
cmp
push
mov
shlb
pop
outsl
mov
scas
lcall
jmp
loope
pusha
fiadds
fcmovbe
sbb
push
inc
sub
cmp
pop
scas
std
xchg
je
mov
test
or
pop
addr16
gs
inc
adc
testb
movb
adc
out
inc
dec
imul
inc
fwait
lods
fs
jns
clc
cmp
sbb
push
aad
enter
fwait
mov
inc
mov
push
subl
sub
jp
mov
mov
pusha
int
cmp
aam
inc
stc
cmc
movsb
iret
jp
das
popa
sub
pop
gs
pop
loop
iret
cmp
mov
std
dec
jge
cmp
les
lods
push
sbb
sti
in
hlt
lret
icebp
sti
push
push
in
mov
xchg
mov
push
mov
ret
xchg
add
pop
adc
mov
push
test
es
dec
jge
in
inc
int
adc
mov
scas
sub
imul
and
fisubrl
cmp
push
xchg
out
and
dec
push
fisubl
frstor
dec
inc
xorb
das
outsb
mov
inc
and
inc
jno
mov
sbb
push
and
and
dec
stos
cmp
arpl
add
dec
loop
mov
lds
arpl
pop
cmc
dec
jnp
mov
inc
or
mov
jne
cmp
dec
stos
cwtl
dec
dec
testl
rcll
xor
outsl
daa
test
or
movsl
xor
xor
mov
ss
add
pop
roll
dec
sti
xchg
repnz
dec
add
xor
pusha
xor
pop
aad
shll
or
adc
mov
mov
rorl
mov
sbb
or
sbb
mov
pop
iret
sub
ds
mov
add
inc
test
ret
lea
push
push
data16
call
add
in
dec
inc
mov
mov
in
dec
add
dec
jae
das
es
inc
fsubrs
sbb
mov
jl
jecxz
aaa
sbb
pop
ret
outsl
arpl
pop
cmp
jp
push
push
push
cli
roll
sub
popl
jnp
xor
test
shll
dec
out
test
adc
add
out
sbb
rorb
sarl
imul
push
in
scas
push
imul
lock
adc
and
xchg
aad
jne
loopne
lods
cs
addr16
xor
cli
jl
cltd
mov
outsl
bound
pop
push
add
dec
es
sub
into
sub
popf
test
data16
dec
js
push
sti
outsl
and
push
and
pop
sub
aad
cmp
sbb
inc
xchg
xor
popa
loop
push
clc
mov
or
jbe
outsl
mov
add
dec
push
jns
dec
adc
mov
mov
inc
sbb
cmpsb
jae
mov
mov
push
fldcw
jae
pop
out
pop
iret
pusha
fcomps
add
out
push
xchg
sub
fdivrl
adc
orl
jns
inc
mov
push
pop
push
jae
iret
mov
sub
inc
cltd
and
adc
or
es
push
ljmp
add
scas
loop
jl
rcll
shll
mov
jo
push
jl
mov
jecxz
xchg
dec
lods
fstps
adc
push
pop
hlt
push
test
loopne
push
js
ret
jno
jae
add
dec
sahf
lcall
mov
adc
mov
and
fwait
adc
pop
call
push
fdivrp
or
sbb
sbb
cmp
cmc
int3
ficomps
cli
cmp
cmp
clc
push
call
xchg
push
fsub
pop
sbb
mov
lds
fldl
jl
imul
fcom
mov
scas
pop
add
cli
shll
xor
xchg
lret
aam
or
sub
sub
fisubrs
and
repz
pop
cmp
cs
leave
test
pop
repz
insb
ss
jbe
push
xchg
and
or
sub
es
dec
shlb
pop
mov
sahf
lahf
fneni(8087
inc
mov
scas
cmpsb
inc
or
push
dec
mov
testl
mov
repz
inc
fwait
mov
stos
jo
sub
mov
adc
xchg
dec
sub
shrb
pop
and
lea
mov
out
jne
inc
into
cmpsb
mov
ss
sahf
jno
mov
cmpsb
outsb
je
pop
xchg
fstp
pop
ror
sbb
push
out
arpl
aas
push
lcall
xor
mov
dec
subl
sbb
mov
mov
inc
rcrl
push
lods
filds
out
mov
mov
fdivl
lods
filds
divl
jnp
dec
dec
xchg
popa
inc
das
sbb
xorl
dec
pop
aad
pop
cs
pop
out
shll
and
mov
fstpl
push
push
or
dec
or
inc
stos
inc
sub
imul
jae
fs
dec
push
mov
loop
pop
insl
rcll
pop
or
mov
mov
pop
jbe
add
rcrb
lret
adc
mov
jno
inc
pop
add
jbe
sub
loopne
lods
out
cmpb
mov
pop
jg
aad
cmp
outsb
pop
fmull
addr16
ret
repnz
or
jle
scas
outsb
jne
lods
cmp
out
lcall
push
pop
push
jmp
cmpsb
lret
leavew
adc
and
mov
mov
dec
gs
orb
mov
aaa
add
mov
lret
dec
pusha
iret
jg
stos
fwait
rcrb
cmp
xchg
repz
inc
dec
inc
xchg
mov
xor
movsl
mov
test
mov
sbb
movsl
mov
inc
mov
jb
popa
jecxz
mov
add
mov
stos
shlb
jae
roll
insl
cmp
dec
shrl
mov
xchg
mov
inc
sub
xor
pop
into
jmp
fabs
adc
shl
push
or
adc
lock
mov
adc
fidivs
dec
add
adc
test
gs
rorl
outsl
mov
lret
mov
out
cmp
pop
call
stos
jne
ret
test
test
ds
inc
inc
add
adc
jge
fadds
cmp
mov
ret
lods
mov
rorl
jge
cmp
movsl
sub
pop
dec
inc
xchg
stos
xorl
mov
nop
mov
pop
mov
fldl
push
dec
jbe
int
and
sbb
cs
fnstsw
fsubs
sbb
and
cmp
aam
int
movsl
imul
push
movsb
pop
lock
adc
adc
aam
dec
rorl
lods
test
mov
stos
and
cwtl
cmp
add
xchg
std
mov
adc
aam
lret
mov
rcrb
mov
dec
popa
mov
add
push
cmp
fmull
adc
dec
mov
and
enter
xchg
mov
push
xchg
xor
je
popa
xor
mov
fildl
insl
jo
push
repnz
lds
xor
push
scas
push
jnp
push
out
inc
lahf
sahf
add
int3
sub
rclb
aad
add
shll
pop
cmp
jnp
out
sbb
pop
aam
jne
outsl
push
repz
xchg
cwtl
mov
cmp
aas
enter
rolb
scas
mov
pop
pop
addr16
fbld
test
dec
and
dec
setbe
shrl
ss
out
lcall
sbb
sbb
jne
sbb
jl
fisubrs
cmp
jl
out
jnp
push
xor
call
jg
inc
mov
fsubp
rcll
loopne
and
cmp
mov
repz
mov
xchg
lock
out
gs
dec
add
mov
pop
insl
cmp
repnz
mov
jecxz
push
sbb
out
gs
add
cmp
popa
insl
loopne
bound
aam
shrb
cli
outsb
das
or
outsb
mov
ljmp
lea
and
leave
arpl
out
das
ljmp
and
je
mov
mov
push
mov
ljmp
pop
adcb
test
jbe
adc
scas
push
pop
cmp
ret
inc
pop
pop
negb
pop
sub
sub
mov
je
addl
test
fwait
fwait
adc
movsl
jb
mov
js
pushf
cmp
sub
pop
gs
fwait
mov
sbb
pop
dec
push
hlt
inc
in
xchg
jle
out
and
pop
jb
into
cmp
pusha
adc
xlat
sub
loope
dec
sub
push
and
cmp
aad
jle
cmp
push
dec
pop
pop
and
xor
and
out
unpcklps
xchg
mov
dec
inc
jne
test
mov
dec
frstor
and
test
leave
jno
lahf
xor
inc
inc
stc
mov
sahf
js
sbb
test
and
es
les
inc
mov
jmp
or
push
sub
iret
or
arpl
sub
pop
and
add
jp
cld
sub
push
pop
xchg
mov
pusha
jns
loop
inc
adc
push
jnp
jmp
mov
mov
cs
and
pop
js
fwait
xchg
push
gs
cld
pop
push
leave
fnstenv
inc
and
rcll
inc
nop
mov
mov
inc
push
sub
lods
add
mov
xor
adc
jns
fstpl
inc
mov
or
out
mov
inc
mov
cmpsb
negb
jae
inc
dec
cmp
and
push
insb
outsb
xor
iret
mov
jno
mov
scas
adc
and
jge
enter
sbb
ret
pop
scas
fmul
out
push
std
xchg
bound
dec
fistpl
mov
psllw
sub
test
push
mov
dec
jne
inc
popa
pop
daa
jns
xor
mov
adc
ja
sbb
and
cmp
outsb
out
leave
jo
sarl
mov
jo
sub
sub
movb
xchg
pop
fisubl
or
rorb
mov
sarl
cwtl
call
or
adc
xor
rolb
mov
mov
mulb
jb
add
dec
adc
jg
push
cli
jbe
orb
loope
push
xor
push
out
inc
mov
inc
sti
adc
cmp
aad
negb
jo
rclb
or
mov
push
dec
xlat
stc
das
mov
xor
nop
and
mov
push
enter
and
test
sbbb
add
jb
xlat
adc
jmp
out
aam
and
inc
mov
jne
add
fmuls
std
mov
testl
mov
cmp
daa
add
adc
mov
mov
dec
stos
decl
lret
sbb
loop
lea
iret
fildl
jp
push
fwait
repz
enter
into
stos
into
data16
sbb
js
mov
popa
loope
arpl
jb
xor
and
lods
or
push
cmp
add
pop
inc
xor
das
xchg
pop
fwait
subl
mov
data16
and
lcall
xchg
pop
sbb
sahf
sub
jo
aas
call
in
push
xchg
jp
push
pop
sbb
mov
cli
orb
mov
cli
mov
dec
arpl
mov
jle
imul
inc
mov
and
mov
mov
imul
jno
stos
jb
add
jg
mov
out
dec
sub
data16
mov
pushf
xchg
clc
pop
jle
pop
fmull
mov
arpl
out
movsl
push
fistl
icebp
inc
loop
jbe
xorb
xor
sbb
mov
add
dec
aam
out
sarl
scas
push
leave
pop
add
sbb
sbb
inc
sbb
jne
je
and
mov
push
rcll
xlat
mov
inc
outsb
imul
gs
pop
dec
pop
sbb
xor
add
ret
andl
xorb
pop
repz
movsl
sub
in
pcmpgtw
cmp
fwait
mov
jae
and
mov
call
push
cwtl
mov
hlt
ret
lock
dec
gs
jns
sbb
imul
or
lret
lret
xchg
mov
and
xor
loope
jle
mov
in
shr
or
ss
jo
scas
dec
jg
arpl
nop
addr16
xor
jge
fstl
test
loope
jnp
repnz
mov
or
adc
shl
push
pop
push
out
jle
fsubr
out
shl
pop
inc
jne
mov
sahf
sub
lahf
test
lcall
jb
je
sbb
xor
aaa
or
in
mov
push
adc
adc
or
mov
out
ret
ror
mov
inc
push
push
jmp
ficomps
sti
int
ret
in
sub
and
gs
leave
xchg
in
roll
mov
sub
mov
inc
xchg
enter
dec
out
mov
movsb
xchg
lods
add
sbb
dec
pop
sbb
das
gs
fs
lea
nop
sahf
dec
mov
movsl
adcl
sbb
inc
add
subb
jge
dec
and
out
mov
mov
cs
sbb
loope
push
pop
test
rcr
jb
pop
fwait
popa
push
gs
cli
cltd
jg
icebp
xchg
aam
jmp
push
fs
out
stos
mov
pop
jecxz
out
fstp
daa
mov
jne
rclb
mov
imulb
xlat
xlat
adc
pop
pop
scas
or
nop
fistpl
stc
jo
inc
popf
orl
aas
imul
addr16
mov
xchg
adc
mov
xchg
sbb
clc
pusha
cmpsb
enter
push
jae
das
or
jecxz
mov
mov
pop
and
adc
sbb
cmpl
add
cmc
add
jmp
das
jns
out
sbb
jecxz
pop
call
dec
mov
fmuls
mov
mov
pop
or
inc
pop
mov
repz
inc
out
mov
xchg
outsl
shl
xchg
addr16
inc
outsl
clc
jmp
sub
stc
mov
repnz
push
mov
push
movsb
jecxz
jb
flds
mov
and
mov
inc
pop
push
scas
sub
les
lret
packssdw
test
adc
dec
in
cld
dec
cmp
lds
inc
sub
out
jo
sti
test
xchg
jge
or
stos
shrl
jp
shrl
jo
adc
mov
and
je
adcl
mov
pop
inc
ss
mov
rorl
sti
shll
subl
mov
enter
inc
ss
jp
mov
addr16
dec
mov
xchg
mov
bound
sub
mov
pop
pop
pop
inc
sub
xchg
add
out
out
sbb
jecxz
stos
inc
and
push
in
loopne
lds
imul
mov
test
adc
cmpsb
int
and
dec
xor
push
movl
arpl
pop
arpl
je
insb
xchg
adc
dec
mov
in
xchg
cmc
or
cmpsl
hlt
and
dec
mov
fiadds
pop
jp
jge
inc
jnp
leave
jne
fiaddl
das
js
sub
scas
xor
sbb
enter
popa
dec
and
mov
sub
dec
mov
inc
clc
ss
fldlg2
mov
arpl
push
lret
rcrl
xlat
js
or
js
push
or
dec
mov
cmp
push
sti
cmp
loop
sbb
pop
cwtl
add
jl
push
push
and
bound
and
imul
dec
push
aas
hlt
leave
lcall
sti
test
add
test
arpl
push
loop
add
daa
out
pop
pop
pop
inc
sub
daa
stos
jl
mov
jg
bound
mov
cmp
sbb
fs
jo
dec
addr16
cld
push
cs
lods
and
push
jns
div
dec
jbe
mov
mov
rcr
adc
out
int
adc
xor
dec
fucomp
dec
xchg
jo
sub
ja
aas
dec
cmp
inc
hlt
inc
das
jne
fwait
fs
jnp
stos
int
ret
les
adc
xor
sahf
mov
push
in
dec
dec
sub
shll
popa
in
dec
mov
sub
mov
pusha
loopne
pop
mov
mov
sub
dec
fs
mov
sbb
jno
cmpsb
sub
cmp
ror
neg
add
sbb
sbb
into
cs
lds
sbb
enter
sub
out
hlt
and
jno
mov
push
rcll
push
jp
inc
scas
out
sub
mov
cmovg
cmp
pop
push
mov
aad
mov
mov
movsb
popf
insl
orl
je
xchg
outsl
arpl
rorl
fmuls
mov
lret
pop
into
sbb
lcall
insl
loopne
cmp
xor
loopne
inc
shrl
adc
pop
cmp
arpl
sbb
dec
ljmp
lcall
xor
das
push
movsb
ds
ja
pop
jecxz,pt
test
loope
loopne
ljmp
jb
mov
test
and
push
test
addr16
push
arpl
cld
and
popa
mov
adcb
jnp
das
outsl
xadd
popa
negl
pop
dec
dec
imul
xchg
dec
icebp
arpl
dec
cwtl
mov
add
js
rcr
xchg
iret
add
jnp
pop
fists
les
cmp
add
push
add
daa
push
cmp
dec
inc
out
sti
js
shrb
jnp
pop
mov
jmp
imul
shll
nop
movsb
mov
scas
mov
dec
mov
in
add
add
or
inc
pop
repnz
sub
es
or
repz
mov
cmp
dec
jmp
dec
add
scas
into
sub
lds
mov
into
ss
ret
push
js
enter
leave
or
push
xorb
mov
sbb
je
sahf
enter
push
out
or
push
sub
xor
push
imul
js
idivb
add
mov
push
lahf
dec
out
push
negl
out
or
xchg
pop
push
push
inc
pop
test
int
stos
es
ja
ja
popa
sarl
sub
out
sub
test
lahf
lea
scas
dec
push
push
js
movsl
cmpsl
mov
aaa
popf
arpl
lcall
cs
addl
sbb
pusha
jecxz
jmp
mov
dec
sbb
fs
js
pusha
iret
inc
out
addr16
xor
inc
or
add
scas
push
dec
sub
jae
push
data16
push
cmp
out
dec
push
pop
pop
sbb
xorb
outsl
jge
icebp
sbb
and
inc
enter
aam
aad
push
std
icebp
das
adc
fldl
mov
ss
out
aaa
fdivrs
add
sbb
mov
pop
mov
xorb
push
add
adc
je
outsb
aas
pop
lret
sbb
imul
xchg
leave
in
push
insb
pop
addr16
dec
mov
lods
mov
aas
adc
and
fildl
or
cmpsb
pop
jae
mov
mov
xor
adc
jno
cs
cmp
pop
add
inc
rclb
in
push
adc
scas
or
dec
imul
sbb
arpl
mov
call
daa
adc
cmp
mov
xchg
jle
mov
pop
out
sub
lret
pop
mov
mov
insl
mov
xchg
inc
and
jmp
mov
lea
xchg
and
ficompl
xchg
std
sbb
mov
xchg
mov
in
inc
test
lret
add
adc
inc
sbb
adc
push
mov
hlt
or
pop
popa
jl
fdivs
pop
adc
lret
fbstp
mov
jo
or
popf
mov
jle
mov
mov
mov
mov
jp
xchg
jle
andb
adc
rcrb
imul
add
mov
sbb
dec
inc
scas
pop
fmuls
inc
sbb
lods
ficompl
xchg
mov
stc
sub
push
inc
lahf
pop
repnz
out
xchg
jg
cltd
fiaddl
or
xchg
push
xchg
les
pop
mov
add
cmp
cmp
push
scas
movsl
aad
inc
dec
mov
call
aam
clc
pop
or
mov
and
test
and
fwait
mov
push
sbb
test
jmp
push
out
das
xchg
xchg
fisubrs
jle
and
out
js
mov
arpl
mov
iret
imul
daa
shlb
add
sbb
ret
dec
jbe
leave
lcall
add
lods
inc
imul
mov
pop
pop
push
in
insl
mov
mov
pushl
lods
push
mov
inc
sarl
xchg
xchg
add
dec
cmpsb
addr16
ljmp
lea
mov
or
add
js
sub
les
jge
jl
in
out
shr
push
in
in
rorl
pop
dec
pop
enter
loope
dec
sbb
xorb
out
or
push
add
sub
in
push
mov
mov
jp
stos
mov
clc
jecxz
dec
pop
sbb
jnp
mov
dec
subl
das
shlb
les
rorb
or
pop
popa
sbb
enter
fs
pop
sbbl
jmp
loope
pop
dec
inc
stc
pop
into
aam
imulb
sub
jae
test
imul
sbb
scas
insl
or
fsubrl
push
mov
mov
mov
or
push
imul
push
out
or
cmp
sbb
movsb
inc
inc
call
outsl
push
mov
addb
and
test
mov
or
stos
repnz
mov
pushf
mov
jp
jbe
jl
or
xchg
add
das
jle
insl
call
ror
mov
lcall
mov
and
xor
ret
jl
out
insb
mov
pop
subb
dec
dec
jae
dec
dec
jecxz
dec
add
nop
enter
xchg
adc
adc
adc
mov
xchg
in
scas
pop
repz
in
stos
cmpsb
or
movsb
inc
jl
sbb
adc
pop
movsb
push
test
insb
push
int
cmp
test
pop
loop
push
mov
xchg
mov
fsubrs
sub
mov
jle
sbbb
pop
cmp
into
fbld
fisttpll
inc
and
jmp
adc
loop
out
mov
sti
std
cmp
in
inc
push
jae
pop
dec
sub
insl
scas
out
dec
in
nop
cmp
mov
sbb
push
sbb
aam
cmpsb
xchg
sbb
xchg
faddl
adc
out
cmp
ss
loope
and
mov
mov
jp
dec
or
mov
pop
and
cmp
sbb
push
lahf
lahf
test
jb
pop
fcomi
negl
push
cmpsb
imul
in
sub
add
dec
sbb
pushf
shl
sbb
add
add
push
into
shl
rcrl
sbb
inc
sub
push
dec
flds
dec
call
adc
and
sbb
scas
das
ja
aaa
ret
jp
inc
int3
stc
mov
imul
adc
test
cmp
inc
daa
ret
xchg
dec
aam
xchg
mov
orb
stos
pop
int3
jo
fstps
dec
adc
and
mov
inc
jp
cmp
sar
sub
and
gs
inc
roll
mov
or
pop
xchg
iret
in
test
xchg
lds
lret
push
push
cld
xchg
fsubrp
cmp
cmp
dec
jb
adc
xor
roll
loop
das
cmp
cmpsb
xchg
push
xor
inc
mov
pop
cltd
mov
sub
sub
adc
data16
add
cmp
mov
loop
mov
dec
push
add
test
jbe
sbb
add
add
int
adcl
push
imul
mov
push
addr16
ret
scas
sub
daa
fiaddl
jae
outsl
add
inc
add
cmp
pop
pop
test
ja
dec
cmpsl
xor
sti
jg
add
jne
adc
inc
movsb
jecxz
pop
lahf
or
xor
mov
dec
frstor
dec
sar
in
imul
pop
push
inc
lcall
xchg
adc
adc
adc
push
loopne
icebp
insl
adc
movsl
mov
fdivr
push
push
mov
push
pop
add
arpl
jecxz
arpl
lahf
bound
bound
mov
dec
jp
int
es
jecxz
negb
out
push
popa
dec
push
mov
into
mov
push
stos
shll
cmp
inc
push
mov
in
add
arpl
dec
inc
lock
cmp
lds
push
scas
dec
scas
jnp
inc
lods
and
test
mov
fildll
lret
sub
push
lea
sti
stc
jle
xor
or
xor
or
xor
fwait
daa
mov
sahf
or
jp
push
scas
movsl
test
push
jo
fdivrp
lds
mov
std
ljmp
js
filds
imul
add
sub
shrb
idivl
dec
in
cmpb
cmc
inc
outsl
xchg
mov
push
push
or
js
mov
add
xchg
fldcw
mov
mov
mov
lret
dec
int3
pop
int3
ljmp
and
adc
push
orb
jecxz
loopne
arpl
js
dec
xchg
test
dec
mov
adc
mov
or
fmull
lock
jne
arpl
shrl
iret
sbb
inc
push
mov
andb
jle
dec
movsl
test
dec
mov
popf
adc
enter
push
fists
shll
in
cltd
out
xchg
ja
dec
ja
mov
mov
scas
xchg
and
pop
rclb
cmp
add
notl
jmp
out
mov
popf
sub
aam
xchg
xchg
cmp
cmp
scas
in
sub
cli
cmp
in
pop
test
cmp
pop
popa
inc
pop
mov
outsl
dec
lods
dec
dec
and
and
loop
jne
push
and
insb
mov
mov
out
pusha
imul
mov
into
mov
jl
cmp
push
out
push
cli
cmp
lahf
rclb
scas
and
out
add
sti
nop
sbb
jl
push
adc
roll
or
inc
xchg
out
mov
int3
sub
sub
sbb
in
test
jp
pcmpgtd
jno
int
je
xchg
mov
arpl
cmp
enter
pop
jp
mov
pop
out
dec
mul
scas
popa
pop
pop
out
pop
ljmp
pusha
call
ficoml
adc
and
cmovne
xchg
jnp
pop
and
mov
dec
sbb
inc
subb
ja
aam
je
xchg
cmp
scas
inc
jmp
mov
nop
cmp
and
aam
dec
stos
jmp
dec
mov
jo
in
lret
cwtl
aaa
xor
jnp
jne
mov
jg
inc
out
std
mov
adc
imul
in
mov
leave
xchg
dec
cmpsl
pop
pushf
sbb
jb
loop
inc
sarl
mov
inc
stc
jne
add
jbe
dec
pop
jno
xchg
push
mov
or
dec
out
push
or
enter
jns
and
inc
adc
cmpsl
dec
mov
arpl
ss
dec
xor
sar
add
gs
mov
mul
notl
mov
adc
loop
inc
push
call
stos
les
stos
out
cmp
fcmove
pop
fisubrs
test
xchg
push
movsl
push
clc
push
test
arpl
mov
cltd
ja
cmp
pop
enter
push
stos
pop
jno
pop
popf
movsl
leave
das
pop
test
and
jp
dec
lcall
mov
xchg
pop
inc
pushf
popa
jno
or
inc
mov
pusha
push
sub
js
push
bnd
and
pop
ss
outsl
scas
aaa
loope
mov
loope
mov
jg
dec
ss
jns
dec
shlb
mov
jns
ret
arpl
dec
aaa
push
cmc
lock
rcrl
and
pusha
out
mov
dec
mov
pop
xor
adc
test
sti
mov
jecxz
sbb
push
lret
sbb
loope
test
leave
push
out
or
push
sti
sub
ja
loope
mov
adc
dec
loope
add
mov
jnp
insl
mov
pop
jb
push
notb
ss
insl
addr16
inc
or
mov
inc
loopne,pn
push
adc
inc
mov
adc
out
push
push
test
movsl
xchg
inc
negl
sub
xor
cltd
or
stos
or
shrl
push
mov
jmp
fs
hlt
adc
mov
push
jnp
cld
mov
imul
dec
xchg
popf
xor
movsl
adc
jne
inc
lock
cmp
cmp
fisttpll
cmpl
setno
inc
cmp
daa
int3
mov
dec
mov
adc
decl
xchg
jno
dec
stos
leave
add
ret
xor
mov
test
out
inc
push
jl
add
mov
lahf
cmp
sti
jbe
bound
jecxz
add
rcll
jge
or
arpl
jnp
push
jnp
mov
jge
adc
xor
jl
mov
js
mov
pop
add
pusha
jecxz
push
fldt
out
arpl
mov
push
das
in
andb
cmp
sbb
inc
mov
rcr
jmp
jns
inc
js
add
jne
enter
push
adcb
sub
pop
inc
xchg
xchg
jo
dec
mov
adc
inc
inc
data16
sbb
fs
push
fnstsw
rcr
shrl
fbld
adcb
loopne
inc
loope
int
push
xchg
dec
jmp
inc
dec
imul
fstl
jle
movsl
hlt
mov
cs
loop
in
scas
add
rorb
inc
mov
push
inc
popa
mov
enter
int
or
clc
shrb
addr16
jl
dec
mov
outsl
dec
out
push
dec
lahf
mov
fsubl
out
cli
stos
xchg
pop
pop
add
pop
insl
dec
outsl
push
out
xor
fadds
lret
sub
jg
and
push
pop
lcall
cbtw
movsl
jg
les
jp
inc
pop
outsl
loopne
dec
jo
lahf
inc
aaa
fwait
adc
jo
icebp
test
mov
add
les
xchg
inc
adc
cmc
cld
jp
sbb
popa
adc
sub
das
testl
xor
xor
dec
adc
lret
inc
or
inc
cltd
or
adc
mov
dec
lods
arpl
adc
ret
testl
xlat
daa
stos
jne
xchg
mov
mov
mov
in
repz
aam
clc
pop
cltd
dec
scas
add
sarb
fistl
xchg
sub
jbe
jnp
rclb
orl
pop
pop
jns
es
jnp
addl
add
sub
push
inc
sbb
push
pushf
enter
jg
mov
push
subl
imul
and
inc
in
push
subb
jnp
xchg
arpl
out
pop
cmp
shrl
sarl
jp
xlat
add
shr
hlt
sub
into
je
inc
lods
out
dec
sbb
jmp
xchg
js
jp
adc
ret
adc
fnstsw
es
mov
add
push
pop
mov
sti
inc
cmp
outsl
dec
popa
pop
push
mov
xor
jo
movsb
mov
fmul
dec
jecxz
jecxz
and
dec
adc
fucom
mov
lret
and
pusha
and
and
xchg
xor
sub
push
enter
push
jns
aad
jnp
int
mov
cmp
movsb
addr16
outsb
jbe
mov
nop
mov
jbe
scas
iretw
and
in
jecxz
jge
jns
jbe
add
scas
pop
xchg
mov
sbbb
ljmp
pop
jecxz
pop
bound
pop
in
scas
pushf
js
jae
or
int3
dec
aam
jmp
sub
imul
pop
xchg
sbb
adc
dec
addr16
jecxz
and
dec
adc
nop
push
js
mov
iret
test
cmp
in
notl
in
or
dec
shlb
mov
movsl
mov
add
lret
sbb
jle
iret
mov
int3
repnz
adc
mov
popf
subl
mov
dec
in
jle
push
test
aaa
sub
or
test
pop
pop
movsl
insl
sahf
in
in
test
pop
add
stos
pop
dec
mov
shrb
jl
leave
fstpt
in
loopne
iret
test
push
push
lea
movsl
push
stc
pop
push
test
mov
adc
call
dec
jmp
cmp
js
dec
and
pop
inc
xchg
ds
in
add
mov
pop
xor
dec
les
jns
fwait
lods
sub
scas
jns
inc
aad
mov
test
out
dec
jcxz
mov
dec
xchg
fldenv
or
pop
sbb
dec
dec
aas
popf
cld
cmpsb
mov
shll
sub
ja
sub
xchg
in
mov
lret
sub
bound
leave
dec
insl
cltd
arpl
push
scas
xor
sub
cltd
ss
dec
mov
dec
sbb
mov
dec
jecxz
push
imul
rcll
xor
push
xor
jns
dec
scas
jo
dec
or
lret
iret
jns
test
jns
mov
mov
xchg
push
imul
and
sbb
cld
pop
cmp
jb
fidivs
jne
cmp
mov
and
dec
outsb
lret
inc
adc
loope
in
fildll
sub
push
xlat
adc
mov
popa
inc
and
adc
dec
xchg
adc
arpl
pop
dec
fcoms
inc
insl
arpl
push
dec
mov
test
cld
mov
enter
mov
fs
cli
and
sbb
dec
pop
adc
jb
scas
pushf
dec
lods
jmp
inc
jae
dec
sub
jecxz
jo
mov
add
add
icebp
cs
jns
mov
xor
jecxz
pop
ror
cmpl
insb
push
xor
jae
mov
jno
xor
mov
sbb
lahf
sahf
sub
xchg
xchg
dec
xchg
mov
out
pusha
dec
enter
in
out
inc
fsubl
cmp
mov
xor
pop
dec
mov
push
push
pop
mov
xorb
cmp
push
mov
pop
sti
mov
push
mov
je
mov
arpl
insl
mov
pushf
adc
cmpl
sar
push
mov
mov
add
jle
jnp
out
mov
dec
insb
add
je
xchg
lcall
js
dec
push
jge
push
pop
bound
lahf
sub
icebp
xor
fadd
call
js
shrb
add
push
add
jl
cmp
das
scas
push
adc
movsb
pop
push
cmpsl
loop
test
dec
and
mov
pop
cwtl
je
sub
cmp
sbb
arpl
popf
lods
xchg
pop
pop
add
loop
mov
xchg
mov
push
in
pop
mov
cli
pop
call
cmp
adc
jp
xor
mov
sub
xchg
cmp
mov
jl
cmpsb
int
mov
add
adc
jp
mov
gs
sub
das
loop
test
test
and
aam
or
pop
int3
inc
rol
mov
dec
jl
jg
add
sbb
repz
out
dec
xchg
dec
push
dec
arpl
cmp
mov
add
sub
out
xor
jge
shlb
mov
dec
add
xor
shlb
and
inc
mov
jae
jo
bound
jecxz
mov
push
push
lods
mov
orb
sub
sbb
cmpsb
icebp
adc
fdivr
xchg
dec
mov
loopne
mov
push
out
pop
orl
sub
into
add
repz
and
inc
aad
jmp
cmp
shr
repnz
sbb
cld
in
dec
arpl
insl
cmp
lds
push
stos
adc
push
shll
mov
lahf
mov
add
stos
adc
jecxz
out
xorb
movsl
bound
fs
in
loop
xchg
jmp
hlt
inc
pop
ret
and
mov
pop
inc
mov
or
mov
scas
lcall
sub
add
fnstcw
lret
in
fldenv
andb
in
push
adc
cli
mov
push
psllq
and
fisubrs
leave
and
in
sti
jo
cmp
shrl
sbb
push
cmpb
out
js
pushf
dec
add
dec
test
mov
shll
cmp
repz
pop
movsl
pop
mov
iret
inc
aas
mov
cwtl
loope
test
sbb
mov
addr16
lcall
arpl
add
roll
dec
mov
or
jp
cmpsb
cmc
mov
rorl
xor
popf
bound
fildl
dec
in
cwtl
fstps
andl
cmp
xchg
lds
imul
xchg
jnp
clc
stc
cli
ffreep
lahf
fwait
out
inc
pop
aad
sbb
xor
dec
sbb
sbb
imul
pop
lret
pop
loop
fadd
cmc
xchg
xor
lock
pop
popa
sti
and
sub
ja
fstpt
add
ret
popf
push
push
xchg
fdivl
xor
inc
xor
es
xor
jge
or
jns
cmp
jb
add
dec
pop
jecxz
jne
xchg
push
and
or
outsl
in
xor
enter
fwait
mov
pop
adc
sub
mov
cltd
dec
out
lret
pop
ds
sarl
mov
mov
sbb
rcll
test
adc
fwait
arpl
test
sti
mov
cltd
aam
divl
shll
xchg
enter
das
dec
mov
dec
decl
sbb
dec
push
call
adc
fstpt
cmpsl
int
push
inc
push
dec
pop
xchg
jmp
pop
or
int3
jnp
cmp
adc
xchg
in
scas
mov
and
pushf
hlt
sar
std
shufps
mov
inc
jb
mov
cmc
sbb
in
fs
mov
int
push
mov
outsl
loop
mov
dec
lock
mov
jle
imul
mov
mov
mov
outsl
mov
inc
int3
fcomi
mov
mov
xor
nop
fs
loopne
mov
sub
test
scas
enter
loopne
jns
enter
out
and
push
sbb
mov
adcl
repz
addb
jnp
cmpsl
mov
dec
push
inc
scas
mov
stos
iret
testl
or
fwait
pop
adc
iret
xor
in
aad
adc
scas
mov
ljmp
add
jmp
pop
ljmp
xchg
inc
mov
dec
imul
jnp
push
test
mov
cmp
mov
xor
xchg
sub
cmpsl
in
cmp
lods
jl
insl
jge
mov
and
in
mov
hlt
jbe
test
sbb
sub
mov
sub
shll
or
push
mov
scas
leave
jge
add
and
enter
stc
subb
cwtl
stc
xchg
lods
push
xchg
jbe
js
mov
mov
mov
clc
rorb
pop
inc
push
out
icebp
mov
jnp
mov
cmp
add
mov
fadd
fwait
mov
cmp
jle
pop
mov
mov
jge
js
sbb
test
sti
dec
ss
xor
dec
mov
inc
call
into
in
inc
mov
lahf
imull
nop
mov
jg
lret
mov
loop
lods
xchg
mov
cmpsb
int3
scas
cmp
mov
insb
mov
xor
movsl
cmp
stc
jp
fadds
es
jnp
cli
and
leave
pop
or
arpl
in
scas
loope
test
out
mov
arpl
outsl
mov
or
arpl
dec
inc
and
push
leave
enter
mov
xchg
lds
ret
lods
jb
notb
pop
test
dec
mov
sub
fs
or
or
pop
sub
sti
mov
jnp
push
mov
mov
mov
outsl
jbe
ja
cmp
roll
or
and
cmp
das
jne
sub
cmp
jg
jmp
jp
dec
adcl
adc
jns
js
inc
add
xchg
inc
test
cmp
into
and
aad
lret
dec
mov
out
imul
int3
jecxz
xor
jns
xor
cmp
addr16
mov
or
xchg
bound
and
popf
pop
inc
jne
insb
push
jp
cli
and
mov
iret
jge
movsl
xchg
lret
test
inc
repz
push
imul
lcall
or
movsl
jmp
fwait
scas
mov
cmp
jmp
je
int
cmp
outsb
ds
fwait
es
test
jbe
push
xchg
xchg
fs
mov
test
shrl
pop
sub
enter
xchg
jmp
fmuls
push
dec
cltd
cmc
xchg
sub
dec
sub
mov
pop
jns
xchg
outsb
loop
clc
js
gs
xor
pop
jnp
ja
mov
fimull
cmpsb
js
andb
sub
inc
inc
arpl
xchg
xchg
dec
pop
push
cmc
dec
pop
fs
adc
call
pop
push
in
pop
mov
adc
cs
mov
pop
and
xor
or
sahf
fwait
aam
cld
mov
ds
push
xchg
push
arpl
sti
bound
dec
or
dec
test
jae
mov
jl
aaa
inc
jecxz
rorl
andb
dec
jo
ja
pop
clc
xchg
out
xchg
mov
outsl
dec
or
xlat
sub
and
movsl
testl
mov
popf
mulb
inc
xchg
push
fisttps
dec
scas
push
lds
mov
sbb
dec
aas
sub
xlat
mov
shll
outsl
mov
push
sub
pop
xorl
stos
jp
pop
loopne
inc
cmp
addl
in
add
add
pop
orps
add
sub
or
loopne
jns
cmpsb
lahf
cmp
mov
add
xor
out
and
inc
ret
loop
xor
insl
dec
jno
clc
mov
scas
xor
scas
int3
lds
outsb
mov
jle
mov
push
or
sarb
pop
test
lahf
jnp
daa
insl
or
push
dec
xor
repnz
sub
mov
jne
out
fs
jp
add
rcrl
clts
dec
jl
dec
push
fs
outsb
stc
mov
inc
sbb
xor
cmpsl
outsl
add
movsb
push
inc
xchg
shlb
or
xor
add
dec
sub
test
psubusw
into
outsb
mov
and
in
sbb
xchg
and
xchg
jl
cld
aaa
sbb
push
imull
repnz
int3
cld
sahf
jecxz
aaa
sbb
push
in
dec
inc
out
add
push
in
aas
cltd
sbb
popa
push
iret
xchg
fstpl
pop
out
icebp
inc
icebp
sbb
cmp
shl
mov
mov
xor
pop
mov
shl
mov
jae
pop
and
dec
inc
lods
ss
xor
jae
in
rclb
sbb
inc
nop
push
sbb
lods
mov
lods
rep
push
stc
ljmp
movsb
cmp
ljmp
scas
aas
cmpsl
mov
scas
ret
jnp
mov
enter
and
fsts
das
sub
xchg
or
and
scas
movsb
jnp
aas
test
mov
lods
xchg
rcrb
jl
dec
xor
ror
xlat
mov
push
add
xor
and
push
imul
jp
test
das
fisttps
leave
mov
push
xor
jnp
fwait
out
es
jg
mov
xor
into
out
stc
rcrl
outsb
sub
or
in
xor
insl
mov
pop
mov
push
xchg
into
mov
xchg
jp
jne
outsb
lret
jns
inc
out
add
mov
add
or
push
dec
iret
in
daa
jecxz
movlps
addr16
add
repz
or
sarb
test
loop
mov
stos
mov
aaa
pop
stos
mov
stos
add
cmp
faddl
sbb
sbb
mov
jmp
insb
inc
aas
sbb
stos
sbb
sahf
loop
mov
or
fdivl
add
test
xorl
dec
mov
xchg
and
push
fldl
adc
or
sti
jb
std
gs
cwtl
lds
test
je
jl
rcll
loope
mov
out
dec
dec
add
jb
test
add
daa
movsb
push
adc
cmp
or
sub
lret
lahf
add
dec
mov
push
in
js
or
call
scas
js
fisttpll
adcb
push
jae
jo
push
adc
sub
es
lds
pop
gs
cli
pop
jae
jb
scas
push
fcomps
or
cli
sbbl
adc
pop
inc
mov
imul
xor
mov
in
and
imul
or
jg
outsb
clc
scas
add
dec
dec
imul
fucomi
dec
lds
push
ffreep
jg
arpl
mov
lcall
insl
mov
nop
or
dec
dec
popf
xchg
movl
test
in
enter
mov
lret
sbb
push
js
fdivl
ror
xchg
add
inc
decb
add
xchg
cmove
inc
test
or
or
loop
lcall
adc
push
fdivl
arpl
andl
loop
sbb
xchg
inc
mov
sub
mov
cltd
cmp
pop
ret
cltd
adc
xlat
jecxz
aaa
dec
xchg
mov
adc
jo
xchg
pop
sbb
add
sti
xchg
sbb
jb
dec
push
cli
inc
jae
push
shl
inc
sub
push
out
jb
or
cmp
std
in
jnp
arpl
fistpl
addr16
mov
xchg
mov
out
iret
push
and
mov
add
xlat
xor
pushf
fadds
ja
dec
into
mov
mov
scas
xchg
xor
xlat
sub
cmp
fisubrs
aas
popa
aad
adc
sub
mov
lods
js
nop
fdivs
inc
clc
ret
in
and
repz
add
cld
or
sub
sub
cmp
fmull
scas
aaa
repnz
pop
arpl
xor
out
fldenv
adc
pop
loope
cmp
add
outsl
pop
push
sar
push
adc
pop
gs
xor
arpl
bound
jmp
xor
sbb
sub
jnp
cmp
and
les
arpl
add
and
or
ret
imull
push
mov
mov
pop
xchg
jb
adc
out
loopne
in
fcoms
cltd
dec
loope
dec
pop
ja
xchg
push
in
aad
setle
and
sub
loopne
rorl
movsb
pop
je
or
inc
in
addb
adc
stc
xchg
jmp
iret
and
movsl
pop
inc
jns
les
mov
negb
dec
or
arpl
mov
xchg
rorl
mov
jo
inc
shlb
test
push
xchg
in
jne
sbb
adc
jp
push
punpckhdq
jae
test
lcall
push
addr16
ljmp
push
out
push
andl
add
movsl
jl
test
bound
add
jbe
movsl
js
jmp
push
scas
pop
and
fisubs
mov
push
ds
inc
mov
das
mov
sahf
adc
or
cmp
adc
pop
imull
dec
sbb
popf
imul
mov
mov
dec
adc
daa
in
rcll
and
mov
test
lods
popa
inc
enter
dec
and
sbb
cmp
jp
cmpsb
adcb
add
lock
jp
aas
ja
or
pop
pop
test
push
push
adc
sti
arpl
lds
in
dec
aaa
push
mov
mov
clc
test
push
in
lock
jbe
jle
or
pop
test
in
push
je
mov
enter
inc
push
rol
ror
and
rorb
sbb
mov
daa
lcall
cmp
fucom
loopne
adc
xor
stos
fcomip
fdivrl
pop
pusha
repnz
add
aad
aas
test
jnp
mov
js
cmp
sub
or
stos
add
jb
push
jns
xchg
jo
mov
pop
nop
daa
idivl
aad
jp
pop
pop
jae
mov
js
sbb
rorl
dec
mov
inc
xlat
int
xor
and
jecxz
hlt
jmp
insb
push
ljmp
bt
jae
pop
and
cld
mov
pop
cmpsl
inc
dec
add
jp
push
ss
push
xchg
mov
dec
fucomi
adc
push
loope
inc
fcmovnbe
push
imul
fmuls
call
aaa
jp
loopne
adc
std
jecxz
loopne
mov
out
or
lcall
stos
xor
mov
sbb
orl
mov
loop
xlat
pop
push
cmc
pop
shrl
jae
push
xor
push
push
dec
daa
out
in
cltd
dec
mov
pop
test
sbb
mov
dec
shr
in
lods
add
std
adc
leave
hlt
inc
popf
jge
jl
sbb
adc
xorb
jno
adc
dec
inc
fiadds
push
dec
bound
divb
call
xchg
jbe
add
push
mov
incl
add
cmpsb
mov
jecxz
pop
cs
cld
fnstenv
mov
cld
pushl
mov
cld
pop
mov
push
xorl
mov
mov
push
orl
mov
mov
push
adcl
aad
in
cld
adc
cmp
lahf
sub
rcl
dec
jmp
pop
sbb
push
stos
stos
dec
xchg
sbb
sub
add
loope
mov
mov
jecxz
iret
push
xchg
shll
leave
int3
dec
cmp
les
mov
bound
mov
jb
popf
mov
mov
aam
pop
pop
push
stos
inc
jnp
jo
sbb
sbbl
fldenv
test
sbb
test
popa
mov
cmp
test
adc
mov
icebp
rsqrtps
mov
xchg
cld
pusha
jp
leave
pop
mov
mov
xor
test
stc
mov
mov
jecxz
test
lds
mov
das
rcl
jb
outsl
test
adc
in
inc
mov
leave
mov
out
inc
jnp
mov
aad
cld
and
test
loopne
test
push
sahf
enter
insl
aad
pop
sti
fnsave
mov
mov
lret
xor
loop
cmp
add
xchg
adc
bound
sbb
fwait
push
cmc
pop
pop
scas
pusha
ret
mov
cli
jbe
dec
inc
cmp
mov
frstor
add
inc
enter
ret
ljmp
test
jmp
push
rorl
ret
lret
fs
out
cmp
inc
icebp
adc
insl
and
in
in
mov
mov
imul
aas
jnp
in
aad
rcl
pop
or
test
and
or
movsl
or
or
pop
mov
adcb
xchg
push
pop
mov
les
aas
jnp
mov
jmp
loope
imul
sbb
push
push
inc
fildll
mov
movsb
in
pop
inc
mov
sbb
aaa
add
xchg
push
push
lds
out
ljmp
movsl
add
xor
jl
push
scas
dec
testl
sub
push
xchg
scas
test
mov
and
sbb
push
and
inc
adc
in
dec
mov
scas
inc
lods
ljmp
ljmp
cli
pop
pusha
add
icebp
std
and
jnp
xchg
and
loop
stos
inc
ror
mov
stos
lods
mov
cmp
idivb
call
mov
sbb
or
ret
add
call
outsl
sar
imul
test
cmp
push
add
or
adc
push
cmp
mov
movsl
dec
adc
jecxz
jle
pop
mov
in
in
sbb
rorl
in
sub
jne
lock
jle
and
fwait
fs
push
or
mov
and
mov
popa
insb
adc
fsubl
daa
mov
jnp
cmp
fistpl
xchg
lds
jp
arpl
outsb
push
insb
and
pop
push
js
and
sbb
std
or
cmc
dec
sbb
int
push
jno
repz
cmp
pop
and
or
mov
outsb
pop
arpl
out
imul
push
push
fs
jno
jmp
or
pop
add
ficoml
pop
add
test
ja
mov
sbb
fistl
mov
xor
xor
cmp
icebp
or
fs
pop
and
arpl
scas
jb
cmp
out
xor
shrl
push
sbb
daa
bound
or
fldcw
aaa
adc
iret
pop
ja
mov
pop
sub
xor
and
lret
lret
rcl
aas
int3
call
xor
or
xlat
adc
lock
sbb
mov
push
aad
inc
adc
push
jo
lock
mov
imul
out
sub
les
push
add
sub
scas
push
jle
xor
icebp
subb
fstl
cmp
cmp
mov
and
cmc
jmp
add
aas
loope
sub
dec
pop
addr16
adc
inc
jge
pushf
iret
mov
or
xchg
add
mov
or
jge
nop
push
fmull
pop
movsl
dec
mov
in
fcmovnbe
xchg
xor
out
dec
mov
inc
pop
pop
les
push
or
cmpsb
jno
push
adc
and
fwait
mov
push
subb
xor
push
mov
sbb
adc
dec
aam
aad
jecxz
mov
dec
jecxz
xchg
jle
je
cmpsb
outsb
imul
push
xchg
insl
rorl
pop
sbb
loop
push
add
cmpsb
lds
in
jle
lock
mov
lret
cmc
push
pop
ret
jae
test
arpl
pop
cmp
sbb
lea
ret
and
sbb
rcrb
or
and
das
pop
cmp
rorl
mov
lret
sub
stos
lcall
jae
pop
inc
mov
sub
xor
fs
jb
stos
inc
outsb
cmpsb
add
stos
mov
cmpsb
mov
test
div
imul
out
mov
pop
jnp
aad
lcall
mov
lods
mov
lds
jns
arpl
pop
add
sbb
addr16
pop
jecxz
shrl
inc
shlb
xchg
and
push
inc
adcb
ror
pushf
orl
dec
add
xor
bswap
sahf
push
mov
jns
inc
and
pop
sub
mov
mov
cwtl
inc
aas
dec
push
aam
cltd
pusha
fs
lock
dec
scas
mov
pusha
xor
shl
xchg
xchg
adc
rcll
jle
mov
pushf
sahf
std
sbb
mov
ja
icebp
dec
orb
inc
lret
inc
sub
push
out
or
fisubl
mov
imul
notb
mov
jge
pop
xorb
sahf
out
xchg
mov
and
cmp
test
leave
push
sti
int
mov
cmc
sarb
jno
jg
aas
dec
cmc
lods
adc
inc
repz
pop
cmp
cmp
into
cwtl
out
inc
mov
repz
adc
jbe
ret
in
add
cwtl
jmp
pop
mov
cld
mov
mov
adc
push
xlat
jge
cmp
outsl
mov
fmuls
ret
add
add
mov
clc
aas
addr16
adc
cmc
aaa
dec
call
sub
push
out
out
xor
gs
or
cwtl
fadds
aam
popa
ret
or
push
rorl
cmpsb
adc
xchg
adc
mov
int3
aaa
cs
les
cwtl
cmp
mov
hlt
jae
push
das
pushf
jb
sub
into
pushf
inc
sbbb
fmuls
adc
pop
rorl
and
jl
orb
scas
push
cli
mov
test
in
xchg
cmc
or
xorb
test
or
dec
scas
cmp
fstpt
and
fucom
adc
frstor
jbe
mov
push
sub
xchg
in
push
pop
je
adc
mov
das
inc
sub
lds
add
inc
dec
push
dec
lods
andb
xor
or
les
and
pop
dec
insb
aad
or
inc
cmp
lret
inc
popa
es
aaa
clc
jne
lock
lock
jno
in
cli
push
and
nop
jnp
or
mov
leave
pop
or
pushf
mov
pop
dec
dec
and
and
jge
aas
test
pop
mov
pop
sub
xor
mov
scas
push
and
xchg
xchg
fwait
sbb
push
fildl
xchg
adc
cmp
adc
cmc
repnz
add
shrb
mov
test
fbld
shr
jo
nop
adc
leave
and
or
leave
mov
pushf
xchg
pop
mov
outsb
pop
insb
push
dec
xor
xchg
lret
and
push
cmc
scas
rorb
jo
mov
pushf
in
imul
xor
aam
incb
es
out
fbstp
xchg
sbb
push
inc
fwait
mov
push
sub
loop
es
pushf
push
into
mov
jmp
dec
es
inc
movntps
xchg
out
jp
daa
in
popa
xchg
shlb
loope
pop
inc
xchg
push
push
out
scas
fldcw
out
or
sbb
pop
pop
and
dec
push
cmpsb
pop
and
cmpsb
rolb
mov
inc
fwait
or
stc
mov
push
xchg
xchg
jae
xor
in
pushf
push
or
dec
ret
push
ljmp
int
pop
fs
pop
fdivl
cmpsb
mov
lods
pop
sti
or
jecxz
imul
pop
dec
and
push
movsl
lds
sbb
sbbb
loope
dec
dec
in
xor
adc
das
ret
xchg
mov
mov
jmp
push
inc
stos
jne
mov
in
cmp
mov
or
add
mov
dec
pop
out
lret
mov
push
mov
std
in
or
dec
aas
add
xchg
push
add
mov
lcall
xchg
lock
xchg
sbb
jnp
and
idiv
or
push
push
dec
scas
add
pop
jb
loopne
lods
fsubs
out
ss
fstps
push
test
call
mov
daa
movsl
arpl
jp
dec
cmp
or
inc
in
adc
out
int3
push
mov
repnz
xchg
mov
outsl
lods
int
add
add
roll
cmp
xor
and
orb
jp
subl
sti
jecxz
fs
or
jno
daa
push
std
testb
mov
les
xchg
pushf
jmp
fldenv
and
or
cs
int
mov
xchg
lods
gs
rorl
push
inc
lods
dec
sbb
outsl
outsl
pop
lcall
inc
ljmp
xchg
addr16
push
ja
push
pusha
mov
aad
mov
mov
rcrl
and
dec
aam
out
sbb
mov
dec
xchg
out
sahf
cli
mov
sarb
sar
bound
test
dec
xlat
mov
loop
das
dec
outsl
pop
ret
dec
cs
or
mov
jle
or
mov
aad
jb
pusha
imul
sbb
js
mov
xchg
inc
dec
sub
dec
sbb
push
mov
cmpb
adc
in
mov
dec
ret
sbb
add
or
aas
cmp
in
mov
cltd
add
jp
ja
fimuls
lahf
aam
outsb
test
clc
mov
out
sub
and
jb
rcll
mov
outsl
pop
add
mov
add
imul
or
sbb
les
sub
test
rorl
add
dec
dec
std
into
mov
addr16
push
xor
imull
idivl
inc
fbld
aas
push
xor
xor
out
xchg
mov
fdivl
push
arpl
in
adc
movsl
je
lods
sar
sti
arpl
loop
mov
inc
push
stc
add
mov
pop
xlat
bound
jo
jo
pop
and
cs
lods
jno
neg
mov
add
sub
mov
test
dec
out
pushf
lods
pusha
mov
mov
xchg
jo
pusha
inc
push
jl
cmp
push
adc
dec
cli
adc
dec
mov
xor
push
xor
push
inc
lds
mov
testl
cmova
pop
sbb
mov
or
pop
sti
es
scas
loope
loop
shll
sub
jbe
repnz
sbb
les
rcrl
push
mov
push
int
repz
outsb
stos
sbb
test
data16
pop
bound
jl
adc
cmp
jge
stos
inc
mov
adc
mov
cmp
pop
mov
loop
dec
mov
xchg
rcrl
mov
sbbb
les
mov
sub
mov
push
mov
mov
xchg
cmpsl
push
js
jp
insl
loopne
cmp
adc
sbb
ret
add
ds
jae
icebp
push
push
sub
xchg
jnp
mov
pop
lds
inc
adcb
gs
push
jb
adc
les
lds
push
or
dec
jb
mov
pop
mov
sbb
in
notb
add
add
push
add
inc
push
xchg
cmp
faddp
cltd
mov
in
adc
into
and
and
cmp
lahf
js
cmpsl
out
mov
aad
cmp
jle
pop
cmp
jge
sbb
and
jmp
pop
bound
jle
add
lcall
pusha
xor
test
sub
out
mov
and
stos
and
mov
cld
and
fstl
jmp
daa
lea
test
sbb
int3
imulb
ret
js
inc
addr16
jg
mov
xchg
lods
clc
add
nop
pusha
or
xchg
inc
call
cmp
aas
pushf
dec
adc
pop
adc
and
push
cs
jg
add
lods
movsb
std
aas
dec
int3
and
xor
mov
out
outsl
lahf
std
and
inc
arpl
mov
ljmp
pusha
das
pop
jno
adc
ja
ds
sbb
jno
adc
jle
addl
dec
sbb
addr16
xchg
call
insb
aaa
dec
mov
add
les
ficomps
cmp
cld
cmp
lret
mov
mov
mov
bound
lds
shl
mov
lcall
out
jmp
nop
xchg
test
pop
dec
xchg
cmc
cld
add
add
mov
repnz
push
and
or
jns
cmovge
dec
rcrb
rcll
pop
inc
scas
cs
and
xor
aas
sbb
xorb
pop
ds
sbb
stos
mov
pop
pop
in
daa
xchg
arpl
jo
and
add
pop
rol
xor
sub
popa
fsubs
shlb
out
sbb
fistl
jecxz
push
imul
pop
enter
or
pusha
dec
xchg
cltd
mov
repz
adc
xchg
pushf
jp
xchg
sbb
test
dec
sub
push
dec
xchg
aaa
mov
icebp
xor
popa
sub
call
lea
inc
imul
movsl
stos
jle
adc
push
push
or
fs
mov
and
loop
xchg
or
pop
add
inc
outsl
fcmovnu
mov
cmp
cmp
fsubl
mov
mov
jbe
arpl
adc
xor
xor
lret
call
out
sbb
mov
lods
data16
sbb
push
sti
icebp
and
nop
adc
sbb
jle
test
dec
pop
das
and
dec
mov
jae
ret
arpl
adc
aaa
fistl
call
jmp
add
test
cmp
push
jl
add
mov
roll
push
inc
ficoms
pop
pop
fstl
mov
mov
sbb
mov
sbb
dec
das
jle
mov
shll
cmp
mov
push
lea
outsl
inc
popf
cmp
popl
pusha
popa
cmp
lea
lods
cld
int3
popf
popa
xchg
dec
in
dec
mov
std
pop
jecxz
inc
lds
adc
mov
mov
in
xor
loop
mov
push
mov
int3
call
subl
jbe
pop
int3
aas
in
dec
imul
pop
sub
cs
jecxz
sbb
stos
inc
repnz
popf
mov
push
push
out
push
in
in
adc
dec
pushw
outsl
mov
addr16
and
rol
inc
js
mov
cltd
cltd
lcall
push
rol
adc
jp
adc
pop
dec
dec
pop
adc
test
add
repnz
and
mov
xor
test
adc
sub
xor
dec
add
sub
dec
test
cmp
clc
cmp
inc
imul
test
lds
arpl
pusha
and
inc
cmp
out
cmp
inc
in
and
cs
mov
adcl
popa
dec
push
outsl
sbb
mov
lock
adc
inc
rcrb
pusha
and
fs
sub
popf
sarl
mov
sbb
pop
fwait
adc
in
mov
inc
xchg
jmp
adc
xor
insb
test
popa
ss
and
loopne
xchg
popf
pop
rorb
test
pop
dec
arpl
test
cmp
cmp
das
test
pop
mov
mov
int3
push
dec
out
gs
lret
in
imul
enter
sbb
daa
call
shrl
mov
dec
or
cmp
mov
inc
mov
push
cmp
cmpsb
outsl
xchg
orb
stos
pusha
mov
arpl
push
test
lret
scas
notl
mov
jmp
adc
lods
scas
mov
push
xchg
xor
xchg
pusha
pop
dec
inc
sub
push
jnp
fistps
mov
popa
pop
jg
xlat
sbb
gs
adc
loope
cli
lods
test
call
cmp
rol
jnp
repnz
mov
jnp
pop
dec
dec
or
mov
out
pop
das
mov
push
jmp
scas
nop
bound
repnz
xor
mov
ljmp
mov
bound
jne
mov
pusha
bound
xchg
push
sub
jne
jae
and
jmp
mov
cmp
dec
mov
mov
mov
xor
mov
xchg
add
push
push
push
lahf
push
jno
sub
or
cmp
loopne
leave
and
sub
enter
mov
sti
loope
or
out
or
arpl
inc
cmp
addl
mov
les
cmp
in
int
out
mov
ja
aaa
push
iret
sub
and
scas
xor
dec
xchg
jmp
jns
in
sub
fs
mov
jbe
stos
xchg
inc
pop
andl
sub
and
jns
test
or
mov
push
xchg
mov
frstor
and
pop
repz
fwait
lret
mov
and
dec
test
dec
mov
arpl
rorl
mov
and
or
bound
inc
adcb
push
scas
ret
push
mov
inc
lods
push
or
frstor
mov
add
jo
add
nop
sar
xchg
cmp
jnp
mov
jb
jg
or
fstpl
test
shlb
xchg
insl
js
or
pusha
mov
les
stos
dec
in
shl
loope
mov
xorb
mov
xor
sbb
js
rcr
mov
push
rclb
scas
ja
sbbl
sub
fs
xchg
movsb
push
or
scas
or
pop
cltd
dec
mov
sahf
clc
out
jae
fs
lods
mov
cmpsl
fcompl
aas
push
dec
lods
frstor
clc
mov
xchg
cwtl
jne
in
fs
nop
fnstsw
mov
and
in
aas
in
clc
mov
mov
lea
mov
push
jle
mov
loope
mov
pushf
add
sahf
movsb
pop
dec
sahf
movsl
leave
xchg
cmpb
test
and
out
test
popa
sbb
fiaddl
bound
push
inc
imul
sub
imul
fistpll
lods
stos
clc
xor
jno
adc
iret
or
xchg
pop
add
test
jl
pop
push
fs
nop
pop
andl
push
aas
pop
divl
add
hlt
mov
or
pop
sahf
aaa
stc
divl
add
imul
jb
sbb
mov
and
jge
and
push
adc
push
push
loopne
sarb
pop
sub
pusha
movsl
sbb
add
es
data16
mov
jo
arpl
cmp
mov
call
movsb
or
sbb
inc
add
jge
adc
fdivs
ds
mov
mov
rcll
sub
push
fsubrs
mov
or
scas
jge
ljmp
pushf
push
sbb
pop
or
sub
push
mov
cmp
xchg
sub
fwait
outsb
pop
int
inc
xchg
popa
pop
inc
lss
andl
mov
jge
gs
test
mov
pop
or
out
xor
cmp
mov
repnz
rclb
pusha
dec
add
mov
std
pop
jecxz
cmp
mov
push
cltd
push
or
cmc
mov
int
xchg
xor
jnp
testb
cltd
dec
sbb
mulb
out
dec
dec
pushf
inc
inc
push
sub
loop
xchg
in
mov
cwtl
call
shll
dec
sarb
jmp
xchg
leave
lahf
lret
arpl
push
add
mov
jae
sbb
xor
xchg
inc
lret
sub
push
imull
es
std
dec
adc
fistps
dec
sbb
ret
in
sbb
jae
cmp
dec
cmp
or
mov
scas
inc
mov
stos
and
mov
jbe
lret
push
call
movsl
inc
add
cs
int
xchg
jnp
test
mov
and
dec
mov
stos
das
insl
repnz
in
push
xchg
mov
sbb
mov
arpl
dec
xlat
lea
into
imul
jge
jnp
pop
mov
dec
test
dec
je
or
adc
in
mov
xchg
lods
in
movsb
or
push
push
clc
add
dec
sar
mov
pop
pop
test
cmc
add
pop
jno
jo
shll
pushf
push
jg
mov
pop
sbbb
or
push
arpl
out
adc
in
pop
xor
lods
cltd
test
sbb
test
dec
add
fnsave
loop
mov
dec
pop
outsb
sub
inc
insb
sub
sti
cmc
adc
stc
imul
mov
pop
mov
nop
mov
bound
adc
inc
sbb
lods
and
gs
popa
jmp
pop
loopne
roll
rolb
fwait
mov
jo
rorl
fadds
xorb
jge
out
cmp
repz
or
fsubl
movb
push
out
xor
in
mov
mov
lahf
cs
cli
clc
scas
dec
pop
bound
mov
shl
es
rclb
ds
pop
iret
inc
mov
shrl
pop
shlb
lahf
jo
jp
aad
push
add
scas
out
sbb
loopne
cmp
loope
cmp
xor
cmp
dec
mov
in
ds
movsl
lahf
jns
popa
pop
inc
ds
jecxz
cmp
sbb
sbb
cli
rep
test
mov
test
ja
test
mov
mov
ja
xor
stos
lds
sbbb
mov
jp
lret
lahf
lds
popf
rol
pop
in
mov
cmp
cmp
shll
xchg
insb
call
and
push
in
les
sbb
out
orl
lea
out
inc
cmp
jecxz
lods
fcompl
je
insb
dec
loope
push
dec
mov
xchg
xchg
les
test
in
cli
ja
bnd
inc
pop
and
push
sbb
mov
mov
push
mov
loop
push
mov
jmp
repnz
cmpsl
push
stos
inc
arpl
nop
mov
sub
leave
xchg
cld
std
dec
std
xor
test
in
js
pusha
mov
imul
mov
mov
adc
pop
gs
and
push
not
pop
faddl
sbb
sahf
dec
push
test
scas
cld
cmp
push
inc
stos
sbb
sub
adc
mov
loopne
jg
pop
rcll
inc
imulb
roll
jno
cmp
mov
in
ret
push
and
and
mov
cmpsb
jo
lock
aad
jmp
or
lret
roll
pop
jp
mov
cmp
daa
jle
push
loop
sub
inc
outsb
ljmp
jecxz
dec
mov
pop
mov
xor
cmp
dec
fiaddl
jns
sbb
int3
or
insl
sbb
push
cmpsb
jno
lods
jecxz
cmc
sub
cltd
mov
fadds
xchg
push
cmp
stos
les
push
xlat
xor
mov
lods
mov
call
out
and
out
fldl
jne
mov
lods
cmp
movsl
daa
mov
popf
inc
mov
mov
xchg
xchg
mov
sbb
mov
adc
pop
jnp
sti
jl
outsl
pop
push
fildl
icebp
loop
pop
icebp
jno
lea
aad
mov
test
les
cmpsl
shrl
pop
daa
mov
push
xchg
ds
shll
pop
dec
outsb
lret
lcall
aam
mov
test
push
mov
push
lcall
pop
test
aaa
dec
pop
mov
pop
inc
xchg
dec
adc
inc
out
shlb
mov
cmp
mov
adc
pushl
lret
push
fptan
or
pop
mov
jnp
out
pop
daa
jnp
mov
inc
rolb
adc
jmp
push
mov
mov
mov
mov
nop
roll
das
cwtl
stos
pop
and
dec
xor
add
jno
sub
pushf
lds
repz
mov
and
sub
stos
mov
repnz
adc
loopne
shlb
mov
pusha
sub
adcb
mov
dec
fsubl
pop
mov
cli
jno
push
or
scas
pusha
jp
jmp
inc
ja
xchg
mov
inc
xlat
testl
sub
sbb
pop
mov
pop
xor
rorb
inc
jl
xor
dec
jb
inc
negl
dec
jae
cmova
outsl
mov
add
jp
adc
sbb
stc
pop
dec
xor
dec
jmp
jg
scas
popa
jb
jecxz
adc
ffreep
dec
ss
push
mov
xchg
add
es
pop
enter
jnp
jecxz
mov
and
push
jmp
push
push
loop
jl
mov
jecxz
jno
inc
adc
mov
mov
xchg
cld
cmc
cs
adc
daa
outsl
or
aam
orl
pop
mov
mov
or
mov
push
lods
mov
movsl
jmp
cmp
sbb
pop
cmp
push
mov
ficompl
leave
or
dec
jo
dec
test
in
fcoml
arpl
in
scas
push
xor
cmp
jp
data16
jmp
mov
push
and
cmpsb
inc
fs
sub
in
jnp
inc
xchg
sub
push
sbb
aaa
repz
inc
pop
add
xchg
dec
inc
dec
imull
cmpsb
and
rolb
dec
popa
dec
mov
xor
sub
scas
push
aad
mov
inc
xor
daa
rcl
mov
pavgb
inc
xchg
scas
push
push
xchg
xor
push
mov
xchg
adc
push
adc
mov
cs
inc
adc
pop
and
shr
movsb
jo
dec
cmc
sarl
scas
int3
adc
and
mov
sub
jno
xchg
sbb
cmpsb
hlt
inc
pop
dec
popa
shrl
push
addb
jno
mov
pop
sbb
nop
adcb
xchg
out
rcrl
dec
insb
fbstp
fwait
jb
or
fdivs
lahf
push
sbb
fcoms
xor
jmp
sub
and
mov
dec
call
pop
jo
nop
pop
mov
jg
jne
popa
iret
xor
dec
rclb
pop
xlat
fldl
pushf
movsl
mov
and
add
test
cld
shrb
imul
xor
xor
xchg
lock
and
inc
sub
test
scas
or
mov
int3
ljmp
pop
mov
inc
add
fidivrs
pop
cmp
dec
movsb
inc
push
sahf
aam
adc
jecxz
adc
lock
pushf
dec
sub
pop
out
rcl
mov
movsb
outsl
sub
pop
pusha
push
test
jae
iret
mov
pop
jbe
jno
lahf
xor
scas
nop
jmp
mov
fnstcw
push
inc
push
xlat
ffree
icebp
insb
jnp
cld
mov
insb
cltd
jl
pushf
sbb
xchg
stos
jp
push
adc
dec
sarb
jns
shlb
dec
xchg
pop
je
jo
inc
dec
stos
mov
cmp
push
cmpsb
inc
js
push
lock
xchg
xchg
mov
pusha
mov
fsubrs
adc
mov
cmp
call
dec
mov
fwait
jle
and
aad
cmp
xchg
cmpsb
add
orl
push
movsb
push
inc
sbb
sbb
jge
adc
cmp
xor
sbb
repz
push
or
jmp
inc
jno
stc
fisttpl
sbb
pmullw
fistpll
cmpsb
inc
sub
lahf
imul
jns
mov
push
jp
popa
leave
ss
inc
sbb
enter
sub
pop
add
hlt
sbb
outsb
mov
pop
lahf
lea
xorl
rorl
leave
movsl
gs
fsubrl
popa
outsl
clc
xor
adc
lahf
pop
sub
mov
add
cmp
ljmp
push
out
gs
cmp
pop
ficoms
xorl
adc
lock
xlat
xor
pop
cmpsb
int
leave
int3
inc
cmc
fidivrl
daa
repnz
inc
mov
bound
pop
mov
mov
dec
jmp
out
test
std
cwtl
fbstp
push
stc
popa
add
imul
mov
lds
sub
aas
js
inc
and
rorl
das
rcr
gs
aaa
mov
jo
or
cmp
sub
jb
inc
and
or
arpl
and
dec
mov
dec
es
shll
test
and
popa
push
leave
xor
stos
addr16
xor
and
popa
andl
shrl
mov
fdivrl
push
addl
js
testl
or
pop
cs
aam
aam
push
mov
mov
int
xchg
jno
cltd
pop
push
daa
repz
out
add
outsb
mov
mov
adc
roll
mov
xlat
orb
stos
dec
or
and
stc
lods
push
pop
xor
fistps
mov
test
push
incl
jns
test
or
jnp
pop
jae
das
cmp
add
movsb
jo
mov
ret
adc
pop
and
or
dec
fwait
les
ja
imul
rep
cmp
lods
shlb
rcrb
js
mov
stos
fldcw
imul
add
orl
jecxz
dec
add
push
out
pop
shlb
sti
inc
test
cmp
jecxz
and
lret
cmpl
jge
jbe
andb
aam
push
add
push
lds
aad
in
movsb
xchg
addl
out
adcb
dec
test
push
aaa
mov
xchg
shll
xchg
adc
fnsave
mov
jne
fucomp
mov
cmc
insb
arpl
cmp
test
jecxz
sarl
ja
and
outsl
std
pop
cmpsl
js
sub
leave
lahf
mov
jecxz
adcb
xchg
in
jecxz
fidivs
mov
push
stos
jge
mov
bound
gs
mov
cmp
adc
dec
sub
cmp
inc
int3
bound
lds
xor
stos
pop
dec
adcl
and
loopne
sarb
cmp
mov
inc
inc
push
push
dec
pop
adc
sub
cmc
push
cmp
jnp
and
into
fstpt
jno
mov
adc
dec
mov
jns
test
xchg
push
inc
fadd
adc
insl
push
mov
es
dec
das
out
gs
mov
inc
bound
add
pop
mov
lods
loopne
movsb
in
add
and
mov
rcll
mov
sbb
jne
ja
andb
pop
mov
lret
mov
adc
enter
out
stc
mov
loopne
cmpsl
xchg
push
or
inc
bndldx
or
sub
hlt
nop
jnp
pusha
mov
daa
js
sub
out
sub
cmpsl
scas
xchg
pop
lret
addr16
mov
arpl
lahf
mov
sti
mov
dec
mov
in
lock
push
repnz
cli
push
jg
mov
js
arpl
and
mov
adc
sbb
jae
mov
lret
xchg
je
aaa
arpl
jg
cmp
outsl
dec
jecxz
inc
jl
shlb
cs
push
dec
cmp
sub
stos
pop
ds
sub
push
fldenv
sbb
xor
mov
dec
pop
das
xchg
test
fdivr
div
cmp
mov
push
pop
push
jo
and
jmp
dec
push
hlt
and
push
xchg
or
clc
xor
adcb
sub
dec
push
in
fisubrs
popf
stos
int
gs
lock
fldl
dec
sub
fisttpl
sub
mov
mov
mov
fwait
push
jno
arpl
cltd
push
push
sahf
push
inc
add
daa
stc
push
sti
imul
sub
stos
xor
mov
or
outsl
out
dec
and
push
arpl
ja
and
fisubrl
adc
es
outsb
or
js
adc
jle
in
shlb
rclb
dec
in
sarl
lret
jae
pushf
cltd
int3
push
in
and
or
andb
lahf
sti
cmp
push
mov
mov
sahf
mov
dec
xor
std
imul
mov
in
inc
dec
add
adc
or
mov
jnp
data16
leave
pusha
mov
arpl
inc
ljmp
inc
dec
lds
mov
dec
scas
testb
and
xor
and
pop
ja
fisubs
adc
xor
mov
fsubrl
bound
sbb
jbe
mov
stos
xchg
mov
pushf
jo
int
mov
out
cmp
jl
les
xchg
sti
arpl
insl
adc
push
sbb
or
sbb
gs
lea
aad
or
das
inc
xchg
ja
dec
bound
mov
push
ficompl
enter
mov
dec
dec
not
inc
adc
out
or
fs
mov
aaa
and
pop
shrl
mov
adc
mov
add
sub
popa
push
inc
pop
fdivrp
mov
repz
add
insl
rorb
xchg
dec
xchg
cmp
or
sub
sub
and
sub
push
scas
inc
sub
les
pop
sbb
sub
jae
mov
fistl
sub
or
in
das
fucomi
das
add
adc
lds
jae
das
sub
mov
jg
push
push
fisubrs
pop
cmc
dec
push
xchg
or
dec
outsl
push
ret
cmp
dec
lcall
xchg
or
pop
sbbb
adc
sbb
outsb
out
mov
or
and
nop
fs
iret
jns
shrb
pop
cmp
push
das
shlb
outsl
jne
pop
sub
in
dec
push
in
push
repnz
pop
xchg
and
add
cmp
mov
dec
rclb
shlb
stos
add
pusha
inc
decb
repz
mov
and
fistps
adc
cmpb
outsl
shr
push
lds
dec
in
loop
std
aam
pop
arpl
push
xor
cmp
roll
push
arpl
and
mov
push
jle
xor
sbb
arpl
stos
dec
loop
add
pop
pop
sub
mov
push
push
pop
pop
pop
push
mov
repnz
sbb
dec
cmp
mov
subb
aaa
jnp
pop
enter
stos
fstl
dec
adc
cmp
insb
popa
sbb
or
shll
hlt
pop
scas
loopne
xchg
pop
jg
sbb
xor
loope
push
sub
jp
mov
jne
add
sub
leave
sub
sbb
out
scas
ds
jp
pop
mov
sub
rcll
lock
jmp
push
xor
xchg
sbb
mov
mov
jle
je
and
insl
test
push
jmp
xchg
daa
mov
xchg
cmpsl
orl
push
and
sub
test
subb
sub
xor
push
les
stc
xor
insl
pop
aas
mov
mov
mov
in
dec
cmp
jb
xor
jmp
fisubrs
cmp
xorb
popa
dec
pop
repz
mov
lods
pusha
inc
sub
enter
dec
out
sti
cmpsb
insb
ret
lods
pop
shlb
or
lea
add
cmpsl
pusha
dec
dec
arpl
cwtl
ret
jno
in
xchg
scas
in
icebp
lea
cmp
fdivrs
dec
jmp
ljmp
mov
js
mov
test
invd
clc
mov
push
jle
stos
dec
gs
outsl
ja
lods
push
push
inc
imul
ss
push
push
sbb
dec
out
mov
aas
mov
pushf
jae
pop
dec
lcall
iret
xchg
cmc
jmp
inc
sbb
sub
cmp
push
pop
dec
repz
sbb
es
andl
pop
mov
mov
sti
aad
mov
iret
mov
movl
clc
and
mov
inc
cmp
scas
insb
loope
xchg
sub
cltd
test
mov
les
leave
ja
mov
hlt
and
xchg
in
cmp
inc
adc
roll
aas
jecxz
mov
jecxz
mov
dec
pop
dec
dec
jb
mov
jo
xor
dec
mov
mov
loopne
cmpsb
pop
mov
sbb
dec
cmpsl
jnp
jo
out
mov
inc
jp
mul
mov
xchg
mov
inc
dec
decl
pop
mov
addl
cmp
or
mov
fstpt
mov
lock
imulb
mov
dec
out
repz
addr16
jmp
pop
pop
mov
sbb
add
mov
adcl
mov
inc
dec
fs
jge
dec
jns
mov
xchg
insb
cmpsb
nop
pop
pop
or
arpl
xorl
sub
enter
mov
cmp
pop
mov
fsubrl
cmp
test
inc
mov
push
imul
lret
jge
push
arpl
leave
cwtl
imul
adc
loopne
aaa
push
lcall
push
insb
push
push
adc
inc
add
pushf
mul
push
sbb
adc
pop
fucomp
sub
gs
inc
jnp
mov
daa
dec
jg
push
or
outsl
or
inc
scas
inc
and
jmp
jae
scas
lock
repz
jnp
mov
shrl
test
dec
mov
sub
arpl
aas
ffree
or
imul
std
xorb
mov
add
scas
pop
dec
iret
jmp
xchg
or
movsb
xchg
shrl
rorl
mov
lea
in
push
lods
jl
xlat
push
xor
xchg
jg
notl
push
mov
cmp
adc
gs
imul
in
xchg
test
adc
stc
out
fistpl
and
pop
out
int
rcl
mov
jnp
test
adc
orl
push
imul
sub
adc
iret
add
mov
dec
ds
push
mov
popa
adc
bound
push
inc
sarb
mov
fs
adc
cmp
pop
in
or
cmp
mov
sbb
in
xor
das
outsl
fs
fisubs
mov
dec
cmc
push
loope
mov
jp
and
xor
outsl
push
addr16
js
sub
and
mov
push
insb
jge
add
pop
scas
xlat
cli
cld
test
das
cwtl
push
fs
or
test
dec
out
dec
test
leave
fdivrs
mov
adc
dec
jmp
xor
mov
jnp
call
aaa
adc
rcrl
jnp
add
push
sbb
into
jmp
mov
dec
mov
into
adc
imul
div
jp
pop
mov
sub
in
xchg
xor
sbb
mov
inc
icebp
dec
movsl
cwtl
aaa
pop
mov
push
icebp
jo
aam
pop
les
in
cmc
and
dec
mov
xor
scas
mov
fldpi
and
insl
and
sbb
mov
bound
roll
adc
dec
mov
fildll
dec
mov
mov
lahf
dec
imul
xor
insl
rclb
xor
cld
sbb
inc
test
test
jnp,pn
xor
push
lret
mov
out
mov
mov
fisttpl
sbb
xor
mov
xor
jg
sub
das
inc
jecxz
dec
jp
push
cmpsb
or
lods
lods
jl
dec
xchg
and
add
sahf
jo
outsb
push
in
aaa
sbb
lret
xchg
aaa
pop
mov
mov
fcmovu
rorl
inc
ss
aaa
out
dec
mov
adcb
sbb
fstl
push
mov
das
mov
sbb
or
mov
dec
push
out
sub
mov
mov
lods
xor
lea
push
and
les
xor
orb
jmp
xor
sub
push
aaa
mov
les
pop
sub
fnstenv
scas
je
pop
pop
xor
sti
in
stos
ret
push
pop
cmp
jecxz
add
jnp
cmp
cmpsl
inc
daa
push
adc
pop
int3
cmpsl
and
pop
jecxz
scas
aam
test
dec
dec
push
mov
push
xchg
pop
setae
push
popf
xchg
push
lahf
mov
mov
daa
push
es
fmuls
leave
pop
dec
jmp
aas
adc
rorl
imul
cmp
cs
js
js
leave
add
pop
js
inc
dec
pop
enter
pop
sub
cmpsl
andb
mov
adc
lret
cmp
test
or
adc
pusha
mov
inc
aam
xchg
cmp
jecxz
xchg
scas
aam
lods
test
dec
mov
mov
fwait
repnz
shll
arpl
rolb
rorl
inc
jnp
mov
std
mov
stos
std
jnp
addr16
add
dec
shrb
xlat
insb
scas
popa
push
jb
dec
xlat
adc
popa
ret
int
push
lahf
jnp
movsb
and
movsl
cmp
jg
imul
jge
or
addr16
aad
out
fldl
jmp
es
dec
aas
push
movsl
lret
jnp
pop
rcr
mov
gs
mov
les
inc
cmp
das
imull
inc
popl
js
sub
inc
rcrb
push
lock
mov
inc
arpl
push
scas
and
loopne
sbb
shlb
fwait
jns
dec
ud0
fistps
in
js
lods
xor
sub
outsb
fwait
lods
dec
jne
dec
das
scas
leave
shrl
mov
bound
insl
and
into
cmc
sub
out
push
jo
adc
aas
ret
nop
xchg
testl
inc
scas
dec
loopne
cmpb
mov
in
cli
movl
out
adc
sbb
jle
lock
dec
push
mov
xor
cs
sarb
iret
pop
xor
push
aam
jne
inc
loope
sbb
and
ljmp
sbb
test
xchg
sti
dec
lahf
adc
shl
jmp
mov
and
sbb
stos
in
loopne
test
push
clc
lea
lahf
push
xchg
mov
ss
jmp
or
sbb
lret
fimuls
arpl
sub
into
push
pushf
add
mov
jmp
cmp
ret
mov
adc
sarb
fisubrl
inc
dec
xlat
dec
cmc
pusha
pushf
mov
mov
ret
lds
popf
jae
pop
and
cmp
push
repnz
outsb
dec
mov
ja
out
mov
xor
mov
cmp
fimull
push
fisubs
push
mov
cwtl
jns
sub
cmp
loop
jno
movl
ret
mov
mov
mov
out
mov
adc
icebp
sub
outsl
sbb
add
lcall
enter
int
mov
sbb
outsb
mov
loop
mov
lahf
cmc
mov
and
sarb
psubusw
in
inc
mov
push
xor
inc
adc
shl
xchg
icebp
ficomps
test
test
testl
outsb
jp
ja
sub
outsl
mov
xchg
fisttpll
adc
lret
mov
stos
leave
mov
add
loopne
push
hlt
test
jecxz
jg
mov
lret
bound
mov
mov
int3
sub
adc
jge
mov
sbb
pop
xor
jnp
outsb
pusha
sub
mov
push
pop
jno
pusha
daa
imul
inc
jl
js
pop
or
shlb
jo
mov
lods
sbb
adc
xchg
jecxz
sbbl
xchg
cmp
push
out
mov
push
jecxz
jbe
out
dec
add
popf
mov
dec
hlt
jmp
adc
idivl
insb
sti
or
jb
and
push
and
ret
xor
movsb
das
push
sub
dec
and
jae
ss
sbbl
mov
out
int
push
xor
dec
add
jge
int
dec
mov
and
xchg
rcrl
sbb
loope
mov
cld
aaa
cmp
push
cmp
cmpb
xchg
dec
sbb
mov
call
jle
and
ljmp
scas
sub
pusha
inc
mov
hlt
jecxz
sbb
inc
cmc
dec
jle
mov
adc
negl
sub
popa
sahf
or
loope
mov
shll
cmp
dec
xor
cmp
pop
lds
mov
stc
outsl
mov
std
sub
or
mov
aad
test
aaa
mov
and
sbb
sarl
out
fmul
mov
das
stos
decb
push
mov
cwtl
lret
out
dec
loopne
out
add
test
jae
aas
add
sbb
or
jo
cltd
inc
stc
call
insb
or
adc
out
out
dec
and
lock
xor
sub
xchg
dec
and
sbb
aaa
mov
lea
pop
pop
pop
jae
stos
pop
mov
sti
sbb
lods
or
in
mov
rcrl
inc
imul
jnp
adc
mov
or
inc
and
mov
sarb
xchg
es
lret
xor
ret
xchg
pusha
hlt
sub
cmpsb
xchg
popa
xchg
jb
lods
xchg
mov
sbb
scas
shlb
add
pusha
and
sbb
mov
dec
cwtl
add
dec
sub
inc
xor
push
ds
lret
imul
push
inc
jbe
sbb
push
pusha
das
ss
shrl
leave
push
mov
mov
and
dec
into
call
fcmovu
dec
insl
std
mov
jnp
mov
shrb
ss
stos
adc
sub
mov
rolb
push
das
jecxz
xchg
push
fiaddl
clc
xchg
pop
add
mov
int3
dec
in
call
push
mov
test
sub
mov
fcoml
sub
lods
mov
xchg
pop
ljmp
mul
dec
js
sbb
pop
bound
or
cmp
std
cmp
sbb
mov
or
mov
cmp
mov
jbe
xchg
shr
fists
imul
inc
jo
add
mov
cmp
pop
sbb
pop
and
les
jle
mov
jae
lods
or
mov
les
mov
loop
or
clc
mov
stos
es
imul
push
aaa
jae
lods
imul
sbb
subb
push
cmp
movsl
push
xchg
or
pop
in
sbb
jecxz
in
jle
sbb
enter
cmpsl
xchg
test
pop
jns
mov
push
pop
test
and
or
mov
fmuls
jb
jecxz
dec
inc
or
aaa
bound
jg
mov
sbbl
xor
xlat
outsl
xor
loope
stos
push
test
adc
dec
popl
push
xchg
mov
aaa
test
fs
jbe
push
popf
or
dec
shll
mov
das
outsb
add
jmp
out
test
nop
push
lea
or
push
jno
add
arpl
jp
jno
adc
mov
cmc
mov
jo
jecxz
jne
jecxz
call
pop
cmp
mov
and
icebp
sti
std
xchg
popf
dec
adc
inc
and
sub
xor
in
scas
jo
push
cli
addl
ljmp
dec
aaa
add
ja
aam
stos
call
test
outsl
mov
mov
and
popf
pusha
push
lea
pop
inc
out
rcl
mov
cmp
imul
pop
jl
test
fwait
popf
push
popa
or
push
enter
dec
adc
cld
mov
pop
adc
das
subb
js
sub
pop
loop
and
sbb
outsl
sbb
repnz
and
aam
xchg
mov
xor
mov
mov
addr16
aas
leave
popa
mov
dec
aad
inc
mov
in
xchg
jne
cmp
jnp
loop
hlt
das
pusha
pop
cmp
popa
sub
jnp
dec
mov
dec
sub
dec
mulb
jle
push
dec
rclb
insb
sbb
dec
cli
pop
push
loopne
pop
cwtl
cmp
scas
test
inc
mov
push
xor
movsb
lods
pop
mov
dec
jb
cmp
cmc
push
test
jb
push
cmp
push
scas
inc
mov
out
xor
mov
insl
inc
out
add
loop
lds
dec
or
dec
aam
out
mov
jb
xchg
and
mov
add
lcall
in
ja
jns
adc
mov
outsl
push
js
into
jno
add
shlb
mov
mov
jbe
push
bound
leave
into
adc
cs
jno
ret
stc
inc
popl
adc
idivb
insb
and
jno
dec
cmp
mov
jns
aam
mov
jb
loope
pop
cli
xor
jns
push
push
lcall
xor
mov
call
lock
int
mov
push
and
hlt
jnp
push
cmpsb
ret
adc
test
inc
xor
arpl
aas
cli
repz
loopne
adc
mov
inc
cmp
pop
addr16
cmp
lahf
xor
and
loop
jmp
or
and
pop
dec
push
stos
push
fbstp
push
data16
inc
jb
cld
stc
xchg
mov
fcoms
hlt
inc
mov
mov
aas
scas
mov
mov
push
add
jnp
imul
cld
int3
cmpsl
mov
add
dec
dec
nop
xchg
fsubrs
das
add
xchg
jno
mov
dec
shlb
fidivrs
jns
lret
ret
pop
push
out
subl
les
mov
mov
imulb
dec
mov
mov
setle
popl
pop
mov
pop
rcrb
inc
jge
xchg
mov
sub
lahf
bound
mov
or
or
dec
mov
mov
cmp
dec
in
mov
cmp
leave
and
add
xor
mov
jno
aaa
dec
mov
push
mov
pop
jp
rclb
pop
adc
in
loop
fdivl
pop
push
mov
ja
cmp
rcr
cmp
nop
ret
out
mov
std
xchg
xlat
call
xor
das
test
fimuls
jge
rcll
xchg
pop
sbb
xor
clc
cmp
aam
pusha
push
fs
adc
jae
xor
or
xor
xchg
addr16
in
push
cs
std
dec
clc
jmp
adc
divl
pop
add
nop
fnsave
xchg
pop
xchg
stos
jp
scas
add
loopne
lahf
clc
dec
mov
inc
dec
mov
push
xchg
dec
aas
pop
sbb
pushw
adc
dec
sub
push
jnp
dec
sub
repnz
sub
sub
stos
pop
pop
mov
jno
dec
mov
clc
inc
repz
pop
daa
out
ror
dec
or
test
dec
cmp
lods
into
fmuls
pop
mov
popf
lret
xor
jge
push
push
scas
inc
dec
push
cmpsl
sbb
cwtl
pop
pusha
push
mov
pop
push
leave
xor
sahf
cmp
and
out
mov
pop
cmp
jnp
imul
stos
xchg
jo
add
nop
push
test
dec
mov
push
in
mov
das
bound
cmp
push
or
sti
dec
ret
pushf
push
sahf
and
push
sub
int
mov
cwtd
jae
imul
clc
cwtl
inc
push
lfs
dec
call
test
into
lods
dec
xchg
aas
test
jg
mov
pop
push
cmpsb
pop
repz
out
mov
or
stc
pop
jecxz
sbb
xchg
cld
add
xchg
xchg
mov
out
mov
jne
sbb
inc
mov
dec
mov
or
push
gs
fildl
or
daa
addr16
mov
push
icebp
cmpsb
out
push
lock
ljmp
push
add
es
shlb
pop
mov
adc
jno
in
push
lods
ljmp
and
pop
mov
lahf
or
stos
inc
ds
dec
or
add
out
jl
push
notb
pop
cmp
dec
into
imul
inc
out
sbb
xor
leave
jl
daa
add
or
icebp
cmc
loop
stc
cmp
add
mov
rcl
scas
or
dec
rol
pop
jg
rcrb
adc
pop
dec
sub
xor
pop
inc
addb
imul
lds
inc
cld
add
sar
outsb
and
incb
arpl
andl
jmp
shl
enter
addr16
dec
push
push
cmp
dec
aas
test
clc
shlb
or
dec
push
xor
in
sbb
ss
mov
pop
push
jne
mov
jnp
mov
mov
and
frstor
pushf
sbb
cmc
dec
dec
addr16
mov
lock
test
jae
pop
mov
rorb
int
adc
push
shll
inc
adc
inc
mov
sub
adc
mov
call
bound
and
and
dec
mov
cltd
jle
dec
xchg
divb
insl
popf
mov
pop
adc
rorw
gs
sbb
shrl
int3
into
dec
mov
jb
push
out
sub
pop
shlb
mov
idivl
push
and
jns
rol
iret
repnz
lcall
mov
inc
and
insl
or
add
add
stos
mov
mov
pop
sub
or
out
mov
mul
jo
std
xor
cmp
sbb
add
pop
arpl
lock
mov
jne
sbbl
je
mov
insb
mov
cwtl
ljmp
fwait
ret
lahf
push
mov
and
dec
dec
sub
pusha
push
mov
mov
clc
sahf
std
stos
paddq
in
cs
out
outsb
test
out
jg
insb
mov
pop
mov
aam
pop
mov
hlt
or
in
shl
imul
xchg
inc
adc
and
pop
sbb
repnz
push
lds
cmp
daa
loope
xor
fnstenv
lcall
pop
push
in
out
fsts
rcl
ljmp
aas
mov
cmp
rorl
sub
popa
loopne
imul
and
scas
add
dec
clts
xchg
mov
inc
fmull
in
pop
xchg
test
sbb
sbbl
adc
sbb
push
dec
lea
xchg
outsb
xchg
sub
stc
shrl
scas
imul
out
mov
call
aad
popa
inc
popa
jo
and
roll
sbb
sbbb
mov
cmp
mov
aad
sbb
lret
or
mov
xor
jg
mov
fbld
movsb
xor
aam
xor
jae
push
ror
notb
aad
or
pop
stos
and
xlat
xchg
push
dec
js
cmp
dec
pop
jb
es
push
mov
je
jns
sub
jb
jp
push
insl
stc
inc
jae
inc
in
sbb
cld
movsl
mov
loopne
add
push
xor
inc
test
or
add
mov
stos
popf
mov
sbb
loope
jnp
test
jns
push
popa
sti
jbe
inc
rorb
shrl
repz
mov
jno
ret
out
stos
popf
dec
xorb
jmp
sahf
sub
add
and
addr16
cmp
pop
scas
jnp
out
xchg
xsha1
cmpsb
or
fstpl
outsb
adc
pop
fcompl
and
mov
mov
cli
insb
pop
pop
sub
add
xchg
loop
push
push
lock
xchg
xchg
mov
shlb
inc
pop
inc
and
int
insb
cmp
repz
in
loope
ret
jns
lahf
loop
jnp
pop
xor
mov
jge
out
insl
jnp
dec
popa
fldt
mov
les
dec
sub
daa
xor
ss
jbe
iret
lcall
jge
inc
xchg
dec
push
dec
and
dec
clc
and
int3
pop
aad
shrl
adc
pop
pop
pop
pop
add
jo
push
add
push
or
scas
pop
pop
cmc
aad
push
std
jp
sti
lock
add
push
mov
dec
arpl
sbb
cld
sbb
cli
test
daa
sbb
push
sub
or
mov
push
js
or
daa
in
pop
xor
outsb
mov
aad
repnz
pop
dec
mov
stos
pop
enter
jle
cltd
sbb
int
sub
sub
lahf
mov
xchg
xor
and
and
mov
adcb
inc
sbb
xchg
or
sbb
aas
mov
std
fmul
jns
push
cmc
add
out
cmc
fbstp
xlat
fdivl
mov
sarl
xor
fs
imul
push
xlat
pop
sub
pop
cmp
jle
adc
sbb
xchg
add
pop
lds
jmp
aam
popf
pop
mov
int3
aam
sub
push
dec
sarb
out
sbb
mov
jo
jle
cmp
scas
test
aam
mov
or
jo
mov
or
mov
or
mov
int3
dec
push
xchg
jg
jecxz
adc
and
jp
sarl
xor
jp
mov
add
xchg
push
push
adc
sub
test
leave
imul
arpl
call
dec
add
add
cmpsb
xchg
and
ja
mov
stc
ja
das
pop
call
push
mov
sub
jp
jne
sub
aam
fnsave
sbb
jl
sbb
sub
pop
mov
mov
enter
lods
mov
xor
jnp
or
pop
or
mov
in
cmp
jg
shrb
dec
mov
call
bound
imul
cmc
adcl
xchg
inc
mov
mov
xchg
add
and
and
ja
in
cmp
push
inc
enter
imul
stos
mov
inc
xchg
jecxz
push
adc
dec
adc
gs
insl
and
xchg
out
sbb
jbe
inc
loop
pop
testl
decl
jae
mov
mov
mov
dec
xor
jecxz
test
dec
inc
cmp
fwait
push
movsb
mov
stos
mov
fs
popa
jp
xchg
xor
out
sti
insl
and
or
dec
outsb
enter
ja
imul
cli
add
out
shll
mov
popf
jmp
adc
push
jmp
dec
pop
pop
mov
pop
cmp
ret
inc
sahf
cmp
xlat
sbb
inc
push
popa
je
subb
loop
arpl
cld
xchg
xor
adcl
push
cmc
mov
mov
or
in
sbb
push
add
add
and
mov
outsl
outsl
xchg
cmpsb
sbb
popa
xor
ljmp
outsb
mov
in
std
push
bound
xor
aad
adc
dec
push
inc
adc
fisubl
dec
in
dec
test
mov
add
xchg
inc
lock
movntq
outsb
cli
into
push
xchg
sbb
lods
insl
inc
xchg
les
dec
jns
and
pop
sub
dec
hlt
fs
cltd
out
jl
sub
jp
jne
sub
adc
insl
xchg
enter
negl
inc
mov
and
mov
hlt
fimull
cmp
sub
xchg
mov
hlt
or
xchg
icebp
mov
dec
and
sub
into
bound
cmp
mov
mov
insb
sub
in
shl
in
pop
jmp
insl
sub
dec
lods
sub
gs
rcll
dec
dec
jno
inc
mov
cmpsb
cwtl
jmp
cmpsb
stos
jnp
mov
std
cmp
push
roll
or
mov
fistps
in
inc
mov
and
push
outsl
cli
das
outsl
mov
mov
inc
cmc
mov
mov
idivl
shr
mov
movsb
xchg
adc
mov
mov
in
jnp
sub
popa
bnd
popa
pop
repnz
fs
adc
pushf
mov
push
push
or
sbb
push
cmp
popl
mov
and
add
dec
cmp
ds
test
pushf
shll
jecxz
mov
int3
sub
cmp
lods
xchg
bound
pop
inc
cli
out
jle
push
sbb
or
js
and
shll
push
push
mov
lods
or
mov
insb
decl
pop
fisttps
xor
lahf
dec
cmc
lods
popf
js
data16
xor
icebp
in
popa
scas
mov
mov
data16
sub
pusha
xchg
inc
xchg
jo
cmp
mov
imul
aam
int
xor
andl
cmp
out
sbb
push
loop
push
sti
xchg
addr16
imul
pop
rcrl
mov
call
xor
das
sbb
push
mov
xor
shlb
aas
leave
stos
das
sub
dec
mov
movsb
mov
inc
cmpsl
mov
lcall
js
ja
push
add
out
inc
push
adc
pop
xchg
cmpl
insb
inc
mov
outsb
pop
mov
xchg
mov
sbb
add
cwtl
push
lods
push
out
sub
push
fs
sub
test
mov
das
dec
inc
fnsave
dec
pop
daa
pushf
pop
pushf
imul
jne
arpl
xor
mov
jle
pop
push
cmp
lea
shl
pop
pushf
sub
arpl
mov
inc
out
adc
mov
lret
arpl
or
add
push
insl
mov
xchg
add
rorb
pusha
mov
cs
clc
push
std
lahf
mov
int3
sti
cmp
xchg
sbb
xchg
cmp
and
into
and
out
xchg
out
lahf
lods
loope
xor
xchg
lret
inc
jp
sbb
jo
das
dec
inc
rcrl
aaa
leave
lods
adc
insl
out
adc
roll
f2xm1
scas
call
popf
xchg
fisttps
in
or
push
and
xchg
jl
into
and
add
fnstcw
inc
jmp
push
sub
in
add
adc
cmpsl
and
mov
das
inc
fs
adc
mov
pop
sbb
test
xor
xor
mov
mov
mov
cmp
and
cltd
int
addb
cmc
cmpb
cltd
fdivl
xorl
pop
jecxz
or
stc
push
hlt
ja
xor
shlb
xor
pop
push
pop
dec
mov
mov
ss
mov
pushl
icebp
mov
lret
and
mov
fs
dec
mov
fwait
repz
roll
in
mov
jl
adc
push
stos
shll
fldt
mov
cmp
xchg
cmp
xor
popa
mov
cmp
jle
in
adc
sbb
dec
sbb
mov
xchg
adc
cmpsb
sub
ret
aaa
xchg
mov
fstpl
je
fidivl
fisttpll
stos
jge
or
cmp
movl
dec
dec
gs
or
dec
pop
add
cmpl
popf
dec
xlat
lret
push
loop
dec
push
inc
loop
dec
jl
call
xchg
add
sbb
xchg
inc
add
scas
sbb
push
jg
lcall
dec
push
or
xor
dec
xor
gs
xchg
test
sbb
cmp
sbb
adc
ds
test
mov
push
movsb
cld
sub
mov
imul
inc
daa
mov
fldl
add
dec
lds
and
repz
out
dec
adc
xchg
xchg
and
cmp
rclb
inc
adc
xchg
sbb
sarb
dec
cmpsb
mov
or
xchg
dec
scas
mov
cwtl
mov
in
mov
jb
push
les
mov
sbb
adc
mov
gs
adc
dec
mov
sbb
out
je
lods
mov
and
push
or
cli
sahf
int3
dec
cli
lahf
xchg
or
sub
or
add
rclb
lcall
xor
enter
mov
mov
imul
jne
cmp
jae
jmp
data16
jge
dec
lods
out
jnp
test
mov
jp
addr16
sbb
rclb
xor
inc
xlat
mov
fdivl
stos
and
cltd
js
dec
lock
shlb
out
out
inc
xorl
les
sbb
and
sub
mov
mov
int3
mov
jb
push
sarb
stc
jle
cmp
bound
loopne
jae
add
std
ljmp
cmpsb
mov
lods
sbb
sub
add
and
jnp
sbb
pop
pop
mov
dec
mov
jo
dec
mov
pop
add
pop
bound
adc
popf
inc
cmc
in
cwtl
fwait
repz
jnp
scas
fistps
lds
es
gs
sub
stc
mov
mov
or
or
pop
or
jmp
xchg
add
sahf
cmc
pop
out
dec
inc
inc
mov
xor
pop
scas
in
insl
push
rorb
div
sbb
les
out
and
xchg
push
and
pushf
outsl
push
ds
jnp
mov
insl
adc
int
dec
rcrl
and
imul
xchg
add
pop
xchg
sub
hlt
adc
jbe
push
loope
inc
sub
cmp
jno
or
out
notl
fdivl
ret
pushf
jecxz
cld
xlat
ficoms
sbb
test
ret
mov
jecxz
mov
es
arpl
push
jnp
dec
inc
gs
jle
or
mov
dec
xor
mov
ja
test
jbe
xlat
pop
pop
divl
daa
jl
cmp
add
inc
sub
xor
das
stc
in
inc
push
insb
mov
mov
test
or
addl
and
dec
ret
xchg
hlt
imul
jno,pn
and
sub
jmp
dec
nop
test
rorl
ret
test
rclb
orl
out
sub
push
dec
inc
test
fstpl
mov
push
jle
inc
movsl
stos
sbb
cmp
jns
sti
test
int3
xlat
shrl
pop
mov
stc
push
xchg
shrb
insl
insl
mov
pusha
jns
rcpps
stos
push
adc
and
call
aam
dec
lcall
js
xchg
dec
sbb
mov
jnp
rolb
mov
rclb
sbb
sub
xor
pop
mov
mov
fwait
popf
clc
arpl
push
lcall
mov
dec
das
xor
out
lret
pop
cmp
inc
and
or
iret
mov
jns
adc
aam
insb
aad
popa
fwait
lahf
sti
jmp
ret
add
sub
leave
jno
scas
mov
int
mov
cwtl
hlt
sub
movsb
xor
pusha
and
and
dec
push
es
jo
push
movsb
sahf
mov
push
mov
push
std
dec
xchg
sbb
ret
pop
push
inc
cmp
push
mov
push
push
push
out
push
fdivs
out
bound
mov
mov
push
dec
adc
aaa
mulb
lahf
cmp
mov
push
gs
add
xchg
dec
jecxz
jge
adc
inc
sti
sahf
or
rolb
jmp
popa
cltd
adc
dec
mov
mov
popa
aad
sbb
adc
jo
mov
fisttps
lcall
adc
sahf
jge
push
push
cld
sbb
and
mov
fmul
out
sbb
xor
repnz
aas
xchg
rcll
cmpsl
mov
pop
pop
xor
out
clc
bound
and
shl
add
add
or
scas
leave
and
inc
test
xchg
imul
dec
mov
mov
into
les
and
mov
push
fnstenv
dec
fcmovnu
xor
or
outsb
sub
push
xchg
or
rcr
dec
mov
jne
jae
xor
push
sar
xor
les
xchg
cmpl
js
adc
movsl
dec
push
mov
jecxz
inc
es
jnp
stos
pusha
sub
sub
jno
test
hlt
inc
inc
ss
sti
cmp
lods
shrl
aam
and
inc
pop
fs
and
out
and
push
xchg
push
lahf
and
or
mov
inc
dec
sbbl
sub
out
mov
fisubrs
mov
push
fimull
loop
ror
lods
cmp
or
mov
in
pop
and
or
fsubrl
mov
mov
cmp
je
or
mov
ss
ret
in
cmpsb
imul
dec
mov
out
mov
xor
mov
xchg
sbb
inc
outsl
push
add
out
pop
cs
out
inc
fsub
adc
scas
lds
pop
mov
adc
dec
call
mov
mov
xlat
pop
push
out
sbb
pushf
mov
arpl
push
mov
leave
push
xor
jae
ret
nop
jp
imul
lods
fwait
aam
push
lods
je
sbb
dec
insl
dec
loopne
aas
movsb
push
aam
adc
xchg
fwait
popf
mov
lods
pop
cmp
cli
fisttpll
pop
mov
pop
loopne
jmp
in
cmp
sbb
mov
mov
mov
inc
scas
pop
add
rorl
test
xor
sub
adc
mov
and
pop
mov
lret
sub
ret
rcl
xor
fucomi
cmp
insl
pusha
fcoms
in
pop
js
and
fdivs
jo
cmpl
jmp
sbbl
push
aad
outsl
or
cld
push
xlat
call
cmpsb
jmp
push
mov
scas
mov
test
and
cld
les
and
shl
push
push
jecxz
inc
adc
mov
pop
out
or
xor
fimull
hlt
std
lahf
pop
xor
int3
clc
dec
clc
fisubs
jp
stc
pop
pop
push
aam
dec
pop
aam
cmpsl
jl
shl
sbb
ss
pushf
dec
outsl
inc
test
test
loope
addr16
lea
sub
int3
hlt
cli
jp
adc
sahf
into
xorb
loopne
dec
add
cmp
lods
sti
aaa
xor
mov
add
mov
push
adcl
mov
je
imul
add
inc
mov
and
xor
pop
xchg
mov
jb
adc
aad
movsb
fwait
jl
call
lods
adc
dec
cmpsl
leave
dec
fwait
inc
scas
ss
scas
mov
insl
push
pusha
xchg
mov
push
mov
mov
adc
mov
ja
rcrb
sub
cmp
inc
mov
ds
mov
pusha
lods
jg
addr16
flds
mov
std
ret
insb
and
lahf
test
loopne
std
arpl
lret
pop
dec
ljmp
pop
add
mov
fstps
pop
fisubrl
das
or
xchg
xchg
jge
push
mov
mov
adc
mov
add
mov
push
push
adc
mov
fs
leave
sbb
xor
push
push
xorl
test
or
xchg
and
adcb
scas
pop
jb
jmp
mov
adc
je
push
insb
orb
ds
repnz
jae
xchg
popa
add
cmp
mov
dec
lods
sub
cmp
mov
inc
lahf
pop
jnp
push
jmp
scas
test
popf
fstl
addl
or
and
stos
mov
sbb
aas
out
roll
cwtl
sbb
out
mov
mov
pop
pop
fldt
int3
push
fmull
test
adcb
sub
mov
jp
out
ja
jle
movsb
jmp
dec
dec
clc
mov
mov
add
adc
mov
push
adc
add
int3
push
adc
mov
and
repnz
mov
mov
push
addr16
jecxz
insl
fucom
xor
dec
aaa
popa
ja
loopne
repnz
mov
push
popa
ds
scas
daa
pushf
nop
clc
lock
lret
dec
mov
popf
dec
pop
out
add
xchg
enter
jns
push
and
scas
dec
mov
test
mov
test
inc
jge
mov
cltd
pop
xor
fidivl
push
xchg
fiaddl
lahf
and
pop
pop
jp
push
stos
xlat
xor
xor
mov
call
mov
lret
push
cmc
push
lods
add
pop
fldl
push
mov
imulb
popa
and
mov
lea
jmp
mov
jmp
lahf
lret
push
dec
cwtl
test
cmp
mov
scas
shrb
jmp
fcmovu
pop
lds
dec
in
sub
push
push
test
repnz
repnz
sbb
fisubrs
test
adc
cmc
xchg
lods
imul
adc
xchg
mov
pop
add
fbld
cmc
or
mov
aaa
push
scas
cmpsb
sub
cmp
mov
cmp
jno
orl
mov
test
xorb
daa
sbb
dec
jo
sub
cmpb
mov
adc
push
push
outsl
pop
fists
jle
add
ret
xor
dec
fdivs
test
mov
repnz
jnp
into
jne
lock
ret
xchg
stos
dec
pop
stos
cld
orb
aas
insl
jo
lods
cmpsl
imul
push
adc
popa
dec
jne
mov
mov
cmp
adc
inc
test
jbe
lcall
clc
and
pushf
jmp
cmp
test
test
mov
insb
mov
dec
xchg
mov
idivl
jno
pop
and
push
push
dec
scas
cmp
add
stc
add
addl
jge
call
mov
or
inc
ss
cmp
mov
andb
aaa
test
dec
gs
fucomi
mov
lahf
movsb
test
test
pop
jae
or
das
add
stos
pop
inc
scas
shlb
fiadds
loope
cmpb
lods
add
xor
cmp
mov
push
xchg
das
adc
jmp
sbb
into
ljmp
push
push
test
mov
push
test
add
movsl
les
in
xchg
xlat
repnz
xchg
out
and
and
es
pop
mov
scas
inc
rorb
testl
jmp
leave
xor
lahf
into
gs
xchg
dec
xor
pop
jns
jmp
cmp
and
sbb
sbb
mov
lock
test
sub
sub
push
or
jmp
mov
xor
xor
jnp
xchg
xor
adc
fsubrl
addr16
fistpll
mov
addr16
push
ret
push
adc
sub
filds
mov
pop
outsl
leave
or
inc
jno
daa
jns
jne
jecxz
inc
je
scas
loopne
arpl
pop
mov
out
data16
aad
xchg
add
cli
cmp
push
push
dec
pop
clc
outsb
xor
fists
xor
jb
sub
pop
jns
aad
mov
cmp
sbb
or
or
jb
add
xor
faddp
jge
scas
jne
cmp
sub
fiadds
xor
xchg
enter
add
pop
or
movl
sbb
jle
sub
cmpsl
sbb
cwtl
addb
push
dec
jnp
dec
out
les
stos
aam
lahf
xchg
lods
or
cmp
imul
js
arpl
inc
arpl
mov
fwait
pushf
lock
dec
cmp
sbb
and
in
rcr
mov
fildl
rorl
mov
adc
mov
je
ss
loop
mov
or
jb
dec
dec
shll
orl
push
enter
fs
push
ja
jge
enter
insb
xchg
fimull
and
inc
subb
add
pop
mov
dec
mov
pop
mov
call
xlat
out
lds
imul
in
cli
addr16
test
dec
adc
cmp
adc
mov
jge
inc
sar
push
push
sbb
and
adc
ret
outsl
out
cmpsb
mov
inc
movsl
xor
jb
sbb
arpl
aad
std
xchg
out
adcb
pop
inc
xor
dec
addr16
push
ss
xor
cmpb
in
lret
add
inc
or
inc
rorb
aad
xor
and
xor
push
sub
xchg
adc
dec
jae
rol
scas
out
or
pop
cmp
or
sub
push
sar
or
push
cmp
iret
pop
lods
repnz
movsl
pusha
pop
push
inc
scas
scas
out
shlb
xchg
mov
rorl
adc
push
jp
icebp
xchg
clc
jecxz
lea
int3
xchg
test
inc
mov
sbb
sub
das
push
jnp
lods
test
clc
xchg
shlb
or
mov
dec
adc
jb
cmp
push
das
stos
lahf
out
xor
outsl
inc
popa
jecxz
data16
push
jnp
arpl
les
push
mov
outsl
xchg
xor
mov
cmpsl
mov
aad
shll
cmpsl
int
sub
pusha
add
jne
sbb
pop
mov
sbb
in
mov
sbb
mov
dec
rcrb
push
inc
movsb
mov
aas
clc
dec
sbb
cltd
lret
and
loope
shld
in
jecxz
clc
push
orl
dec
rolb
addr16
jecxz,pt
nop
das
leave
push
adc
pop
into
inc
xlat
call
jle
xchg
repnz
adc
pop
pusha
pop
mov
pop
push
sub
fs
aaa
jmp
orl
jg
loope
fisubl
mov
cmp
pop
test
xchg
sarl
pop
push
sbb
push
dec
push
addr16
rol
loopne
push
or
ds
mov
test
lods
popa
fs
pop
lcall
out
aas
ret
test
mov
sbb
mov
aas
sti
imull
dec
jno
or
push
fcoml
and
or
adc
push
insl
shl
cmp
std
out
lret
or
and
inc
inc
mov
xchg
or
out
jecxz
cltd
mov
cmp
push
pop
add
or
mov
pop
inc
fstpt
mov
pop
mov
sbb
pop
hlt
stc
push
push
mov
mov
ss
ret
adc
data16
jbe
ja
dec
sub
mov
pop
lds
jb
stc
les
inc
push
daa
sub
sbb
dec
push
push
shll
cltd
test
push
jne
icebp
std
dec
cmp
lock
les
adc
dec
jno
mov
adc
and
and
lock
sbb
cwtl
sbb
push
scas
cmp
sbb
ljmp
sahf
fisttpll
cwtl
mov
sbb
mov
into
cmpsl
icebp
adc
outsb
or
pushf
jne
pop
mov
push
mov
dec
ret
or
icebp
enter
test
jne
xor
pop
jae
arpl
dec
and
mov
adcl
outsb
ja
sbb
cmp
adc
pop
daa
loope
ljmp
mov
cmc
lds
mov
int
xchg
orb
mov
lds
je
into
dec
dec
push
and
aas
dec
outsb
dec
fsubl
adc
mov
mov
clc
stos
cld
insb
or
xchg
bound
or
sbb
loope
out
mov
bound
dec
pop
sbb
pop
fsubs
test
jne
mov
js
pop
sub
scas
push
and
out
pusha
push
test
scas
push
fs
jae
mov
lea
test
aas
enter
mov
sub
loop
insl
mov
pop
xchg
mov
xlat
js
mov
out
popf
out
cmovne
sbb
imul
xchg
pushl
mov
pop
pop
repz
mov
movsb
pop
hlt
leave
mov
mov
lret
add
lods
mov
mov
in
cwtl
mov
mov
std
xorl
or
mov
call
std
stc
dec
mov
popa
sbb
fisttps
mov
iret
stos
xor
jmp
xrstors
mov
pop
fwait
test
mov
or
xchg
xchg
sub
in
xchg
fwait
jg
jae,pt
mov
popf
push
and
mov
sbb
in
std
mov
push
add
data16
sbb
sub
scas
scas
mov
jb
imul
inc
xchg
inc
pop
push
cmp
mov
push
push
shrb
mov
mov
cmp
lret
and
das
incb
daa
sbb
lods
push
dec
add
out
outsl
mov
pop
push
mov
popa
pop
lods
bound
pop
lods
and
pop
sub
mov
jmp
loop
mov
lds
inc
cmp
mulb
out
push
dec
push
bnd
inc
stos
xchg
fstpl
mov
push
hlt
jbe
test
pushf
jg
cltd
lret
decl
lock
sbbb
divl
cmpsb
out
inc
mov
mov
lcall
sub
jp
std
test
outsl
cmpb
clc
pusha
xchg
push
dec
adc
sub
sbb
sbb
in
pusha
aad
jne
dec
neg
pop
xchg
mov
insb
jne
xchg
jbe
lret
add
push
cmp
pusha
pop
jecxz
pop
stos
xchg
in
dec
movb
push
movsb
mov
jl
jns
pop
jo
rorl
cmp
jge
add
jne
nop
or
xor
sub
inc
test
dec
dec
fcmovu
test
icebp
mov
pop
and
mov
push
movsb
dec
mov
inc
sbb
cmp
outsl
xor
xchg
pop
imul
leave
or
adc
leave
push
or
xchg
sub
and
dec
lods
sub
hlt
adc
sub
cmp
sarl
cmp
pop
push
and
xor
xchg
daa
xchg
pop
in
push
test
mov
movsb
push
mov
mov
aas
lods
push
leave
adc
cmc
mov
inc
xor
and
inc
mov
out
fnstsw
add
or
test
dec
xchg
pop
imul
scas
push
repz
xor
xchg
mov
pop
inc
jp
test
aaa
out
mov
push
fstpl
push
jp
adc
or
mov
popa
aam
mov
xor
data16
fcom
push
pop
inc
testl
rolb
mov
add
popf
or
pop
pop
and
std
mov
pop
andb
mov
sub
mov
or
roll
or
add
add
arpl
nop
lret
push
sub
rorb
xor
or
mov
leave
xchg
lds
ret
push
stos
dec
mov
mov
daa
pop
sub
leave
aas
test
imul
mov
fcomps
addr16
xor
mov
bound
dec
mov
push
test
push
and
inc
negl
fstl
fdivp
repnz
pop
or
fildl
loop
sub
adc
sti
xchg
gs
les
and
stos
jbe
or
out
add
sub
test
push
dec
fcmovnb
pop
xchg
or
std
pop
jp
or
lahf
lret
xlat
adc
mov
pop
rolb
fwait
in
cmp
imul
ja
out
orb
sub
andb
je
inc
outsb
mov
mov
pop
jecxz
sarb
xor
and
ficoms
lods
fs
lret
andb
push
mov
arpl
mov
push
mov
pop
addr16
sbb
sbb
inc
sub
scas
inc
das
mov
jle
mov
js
enter
pop
insb
xor
out
lahf
xor
scas
inc
pop
pop
hlt
jmp
dec
pop
aam
sar
sbb
mov
shlb
mov
mov
inc
dec
add
repz
cmp
dec
sub
ds
sbb
mov
push
ret
jg
push
fisttpll
pop
pop
cmp
push
push
dec
adc
mov
pop
mov
add
xchg
enter
imul
loope
aas
jne
mov
jno
xchg
dec
dec
inc
cmp
dec
fmuls
lds
mov
stc
popa
push
popa
test
scas
dec
sbb
mov
mov
sbb
rolb
addr16
push
lahf
popa
jle
scas
les
xor
lahf
pop
inc
mov
rol
jne
in
in
dec
push
ss
loope
jecxz
fiaddl
leave
arpl
cltd
ss
enter
fs
out
les
subl
push
xor
pop
cmp
mull
dec
mov
xchg
lods
jmp
xchg
mov
sub
fstps
dec
add
xor
aas
dec
fidivrs
rcr
adc
loopne
sub
fs
sub
mov
sti
outsl
or
xor
je
fnstcw
scas
jns
push
mov
push
cmc
push
mov
or
jbe
xchg
jle
pop
push
xchg
outsb
lock
test
mov
inc
nop
mov
push
jno
jns
aam
in
pop
mov
roll
push
xchg
jge
jecxz
decl
or
sub
xchg
jp
xchg
popf
mov
sbb
xchg
mov
shrl
adcb
sub
sbbb
stos
jb
push
stc
dec
sbb
cwtl
push
insb
imul
jbe
sbb
call
dec
aad
lea
dec
jne
loopne
inc
jp
push
pusha
aam
mov
lahf
cltd
shll
xchg
adc
aaa
sub
sahf
jl
dec
rclb
inc
add
pop
push
fwait
push
push
sbb
frstor
or
mov
cmc
or
mov
add
inc
inc
das
inc
push
data16
dec
test
in
pop
xchg
inc
jecxz
or
push
imul
out
cs
push
in
mov
and
adc
icebp
shl
test
add
in
xchg
xor
mov
pop
jp
mov
fs
stc
mov
or
sub
mov
inc
push
lret
push
sarb
movsb
insb
mov
cmpsb
daa
int3
imul
mov
push
lods
inc
mov
dec
stc
cwtl
inc
pop
inc
out
pop
jae
inc
and
clc
out
push
lds
pop
loope
and
push
jmp
pop
sbb
cmp
adc
scas
push
push
push
cs
jb
dec
ss
mov
mov
mov
dec
push
out
xor
imul
lods
pop
sbb
or
lods
je
push
mov
push
add
mov
cmpsl
mov
ss
imull
test
std
dec
out
or
cmc
movsb
jo
mov
jmp
jo
adc
jg
fucomp
test
sub
dec
test
or
mov
cmpsl
xlat
sub
cltd
test
lods
test
add
fwait
dec
fmull
cld
sbb
into
es
xchg
stc
loopne
cltd
push
xor
cmpsl
in
es
roll
aam
push
mov
popa
popf
xchg
lahf
dec
push
sub
mov
out
aad
hlt
scas
in
pop
dec
pop
xor
mov
and
dec
lea
cld
jnp
mov
and
shr
dec
mov
daa
clc
fnstenv
test
popl
outsb
push
outsl
adc
scas
inc
sti
mov
dec
leave
leave
imul
sar
iret
mov
xlat
popf
outsb
ret
pop
mov
jmp
mov
dec
inc
es
addr16
cld
je
mov
iret
xor
cs
loope
shll
imul
mov
call
mov
sarb
stc
loope
jae
loopne
add
mov
pop
jne
push
cli
or
dec
and
sub
dec
dec
xchg
enter
xchg
movsl
sbb
jmp
shrb
push
and
inc
sbb
add
insb
cmpl
xchg
push
sahf
popf
pop
xchg
in
mov
clc
jmp
push
adc
sti
pop
pop
xor
mov
fdivrl
mov
fwait
outsl
cmpsl
das
insl
mov
or
add
mov
mov
int
dec
mov
lret
adc
pop
push
out
push
xor
add
lret
mov
mov
mov
mov
pop
and
inc
cmpsl
test
addr16
mov
jecxz
das
push
adc
fsts
shlb
arpl
mov
lds
jne
push
shrb
sub
xor
pop
test
mov
mov
lahf
bswap
inc
push
adc
sbb
lcall
test
imulb
jl
and
fs
test
pop
push
incb
scas
pop
xchg
inc
dec
mov
fdivrl
inc
cli
mov
shlb
scas
int3
insb
ljmp
outsl
outsl
nop
cs
mov
xchg
mov
stos
sahf
cmp
and
xlat
cmp
inc
negl
or
push
sbbb
rolb
mov
into
jge
sbb
mov
inc
xchg
mov
sub
dec
adc
enter
lret
fildll
sbb
testl
movsl
movsl
sbb
mov
jp
inc
stos
push
in
stc
pop
in
adc
add
cmp
repnz
or
adc
jmp
fimull
ja
dec
scas
jbe
jge
movsb
push
push
adc
stos
mov
sarb
add
cmp
pop
fldcw
cmp
cmp
xchg
fisttpll
ja
push
xchg
push
xor
sbb
mov
add
mov
popf
loop
cmp
fwait
imulb
push
arpl
sbb
sar
pop
call
cmc
inc
aam
push
mov
add
jp
or
testl
mov
dec
test
mov
mov
mov
mov
adc
dec
fsubrs
or
and
jp
pop
test
xor
adc
jl
cmp
call
or
xor
xor
jmp
cmp
sti
test
enter
xchg
repz
out
sbb
xor
and
in
dec
cmp
xor
sahf
add
xor
inc
xlat
sti
aas
fcoml
dec
pop
adc
xchg
inc
dec
ljmp
js
sub
pushf
mov
dec
push
rorb
arpl
scas
sub
or
outsb
mov
cmp
push
jle
loop
cli
arpl
pusha
shll
popa
jb
gs
iret
adc
xchg
xor
lods
jge
repnz
xchg
imul
je
fldl
mov
sbb
sarl
xchg
js
inc
jp
push
inc
stos
decl
mov
imul
adc
sub
and
cmp
in
push
insl
sbb
or
sub
pop
pop
cmp
cmp
dec
adc
out
nop
ret
dec
mov
mov
jnp
nop
stos
xlat
xor
arpl
xrelease
mov
cmc
enter
repz
cmp
outsb
jecxz
adc
out
xor
test
pop
dec
jne
hlt
cmpsl
mov
pop
sbb
shl
loopne
andb
jl
int3
out
push
mov
ljmp
inc
addr16
mov
cmpsl
lds
push
popf
jp
xchg
mov
pusha
repnz
mov
sub
test
add
pop
xchg
inc
cmp
fstps
scas
or
jns
push
xchg
and
dec
or
ss
int3
movsl
leave
xor
jnp
xor
addr16
push
mov
fcmovnbe
test
adc
sbb
and
mov
outsl
call
andl
jnp
push
mov
hlt
aas
push
mov
fdivrs
push
mov
push
cmc
mov
dec
sbb
lods
dec
push
into
sub
fs
ret
shlb
xor
clc
movsl
xor
dec
jmp
dec
cmp
imul
aam
leave
xchg
into
jo
fcmovb
xchg
pop
xchg
stos
dec
js
test
xchg
cld
outsb
pop
ss
or
mov
inc
dec
loop
jns
sub
in
inc
adc
adc
mov
jl
push
gs
and
xorb
mov
dec
mov
and
ds
mov
adc
fisubl
enter
inc
pop
jp
pop
jl
testb
mov
and
stos
repz
jp
and
xor
sub
inc
stos
int3
jae
popf
test
xchg
bound
jo
adc
or
in
dec
jo
inc
es
or
jl
cmp
icebp
push
jbe
repz
adc
or
fldl2t
sbb
sub
push
adc
xor
cmpsl
push
xor
mov
push
sub
test
fadds
jno
cmp
les
lock
mov
call
repnz
fsubl
fwait
call
push
ja
sub
add
pop
pop
stos
insb
mov
arpl
xchg
pop
mov
xlat
test
inc
cmp
sub
jl
or
inc
add
dec
call
lea
cmp
cmpsb
pop
mov
jo
dec
popf
jp
jbe
test
and
leave
pusha
adc
or
loopne
mov
in
sti
imul
das
loopne
jle
clc
cmp
out
sbb
pop
adc
shll
jnp
pop
pop
dec
test
out
mov
push
or
push
push
mov
dec
bound
push
sbb
int
call
test
cmp
sbb
inc
mov
mov
mov
pop
inc
jnp
loopne
dec
ja
and
sbb
pop
jmp
push
xor
or
outsb
es
mov
mov
cs
and
mov
push
add
lahf
xchg
pmaxsw
jns
lea
ret
sub
mov
push
sarl
sbb
and
jae
pop
cwtl
jmp
fstl
test
in
scas
sub
cmpsl
xchg
jecxz
cmp
jle
out
popa
loope
cld
out
gs
mov
mov
cmp
mov
xchg
into
cld
aad
ss
int
sahf
mov
push
add
add
ror
cmp
sbb
jno
pop
lods
pop
sub
sbb
arpl
fidivrs
and
push
es
mov
pusha
dec
jae
xlat
inc
leave
xchg
mov
xchg
push
adcb
fwait
lds
ja
mov
pop
flds
push
mov
jecxz
mov
std
push
cmp
fisttpll
cld
and
inc
sub
mov
pop
jg
mov
sbb
arpl
fisubrs
jle
insl
in
mov
sarl
cmp
shlb
pop
imull
fbld
jge
adc
mov
or
push
out
lret
jge
test
aad
cmp
inc
xor
or
inc
stos
push
ret
sbbb
icebp
das
scas
mov
inc
rolb
dec
lods
adc
push
outsl
sub
xor
add
sub
jle
sarl
sti
add
xchg
shrl
aad
push
daa
mov
adc
jge
xchg
ret
bound
sbb
jno
stos
leavew
pop
xchg
inc
loop
data16
cmp
xor
jbe
pushf
mov
push
inc
lea
sub
dec
cmp
pop
imul
popf
add
nop
sarl
pop
jbe
pop
jnp
jo
dec
lock
jecxz
jnp
adc
and
add
outsl
xor
sbb
scas
incl
add
lahf
in
ds
lret
push
push
sub
into
add
mov
mov
lds
dec
pop
test
js
clc
arpl
out
pop
lock
add
mov
outsl
mov
mov
mov
shrl
mov
lcall
adc
dec
pop
adc
sti
jl
xchg
push
mov
fucom
xchg
scas
cwtl
popf
fucompp
jae
pop
jmp
ds
leave
adc
inc
cli
adc
fadds
jecxz
cmp
and
mov
imul
mov
pop
sbb
push
inc
sub
xlat
xor
add
gs
divl
clc
popf
test
mov
xor
push
sub
mov
es
test
sbb
mov
sbb
xchg
mov
bound
push
hlt
xor
jnp
enter
xchg
push
stos
dec
out
nop
cmpsb
movsb
xor
ret
sbb
push
sbb
out
outsl
ja
mov
pop
mov
sub
jge
sub
jp
jl
shll
push
inc
add
in
or
sbbb
xchg
add
sub
stos
jno
fadds
fstl
mov
hlt
insb
dec
sub
popa
scas
pop
icebp
orl
mov
pushf
push
repz
mov
jbe
out
adc
inc
pop
ret
inc
mov
push
jne
cmpsb
inc
jg
data16
hlt
jae
lock
adc
orb
push
and
cli
imul
mov
mov
fisttpl
stos
imul
div
loopne
insb
roll
lcall
clc
rol
imulb
push
out
mov
addl
jmp
push
dec
mov
add
push
dec
dec
inc
or
mov
daa
cmp
push
aas
and
mov
imul
push
out
jecxz
pop
insl
mov
popa
push
pop
jnp
scas
adc
xchg
xchg
movsb
jge
stc
mov
out
xchg
add
mov
fnstcw
insl
sbb
movsl
inc
out
and
in
or
out
lds
xor
inc
mov
xlat
fistps
and
rcll
mov
pop
into
mov
push
test
mov
push
adc
mov
mov
scas
inc
and
jg
fbld
and
inc
repz
add
jg
push
mov
test
sar
out
lea
jl
std
xor
loop
inc
and
stos
sub
xor
int3
dec
cmpsl
bound
in
rclb
inc
mov
mov
pop
aaa
insb
cmpsb
mov
pop
test
dec
aad
inc
call
roll
cs
inc
adc
mov
xor
lock
subl
div
jns
mov
and
lahf
adcb
jb
xor
mov
movsb
inc
jno
push
je
add
pop
push
test
popf
aas
push
mov
sbb
and
mov
mov
aam
sti
je
sbb
pop
xor
mov
or
mov
jnp
pop
into
cmpsb
loope
sarb
fwait
inc
push
jl
sub
movsl
ret
test
sub
stos
mov
adc
dec
push
mov
cmp
enter
push
stos
lahf
pop
popf
sbbb
or
stc
jns
mov
push
outsb
or
jae
insl
orb
add
mov
je
jge
dec
dec
leave
inc
inc
arpl
je
cwtl
inc
pop
ja
movsl
test
ljmp
fisubl
outsl
push
jns
cli
gs
cmpsl
jne
lahf
sahf
iret
jnp
adc
out
mov
and
xor
notb
pop
pop
jns
push
ja
addb
lret
std
test
hlt
out
insl
ret
sahf
and
test
mov
stc
push
xchg
mov
sti
aaa
out
mov
lret
mov
dec
ja
and
je
aad
lds
test
mov
cwtl
iret
cwtl
fs
icebp
and
jne
mov
enter
or
in
add
imul
xlat
inc
stc
xchg
jb
mov
dec
arpl
nop
adcb
sbb
fcmovu
imul
popf
andl
mov
cwtl
sbb
ret
pop
push
bound
mov
cltd
out
push
pop
jno
iret
pop
out
jno
sarb
aam
add
sbb
icebp
jb
push
inc
fs
cltd
dec
fldt
sbb
idivl
out
js
mov
xor
lods
out
xor
mov
push
adc
cmp
mov
div
ret
xchg
ret
push
sub
dec
mov
clc
mov
imul
lods
sti
dec
or
js,pt
push
stc
pop
insl
test
sub
push
cmp
out
xchg
pusha
jmp
cmp
in
fdiv
idivl
add
push
mov
ja
nop
roll
jle
dec
lods
inc
mov
pop
scas
sbb
dec
or
dec
imul
addb
jge
dec
ds
jecxz
dec
fdivr
not
not
pop
dec
fs
fmull
push
faddl
stos
stos
mov
shll
push
push
fisubl
mov
and
aad
pop
xchg
xchg
or
jno
or
mov
and
fmuls
dec
imul
outsl
fsubl
inc
sbbl
cltd
pop
loopne
dec
scas
xchg
xor
andl
jg
mov
sub
add
xor
push
add
imull
inc
lods
push
addr16
adc
leave
scas
jae
lret
jecxz
ficoms
jecxz
mov
ja
mov
aas
xchg
in
or
rcrl
insl
fstps
push
sub
test
dec
imul
test
loopne
jmp
cmp
jp
inc
sbb
mov
aaa
rolb
xchg
sbb
divb
inc
xchg
ds
mov
scas
or
mov
je
pop
xor
aas
arpl
jnp
int3
sub
arpl
xor
leave
data16
mov
mov
pop
daa
push
cwtl
sahf
ficoml
sbb
mov
cmp
push
ljmp
lods
fiaddl
pop
addr16
mov
jns
ljmp
or
add
repnz
mov
cwtl
movsb
push
lock
lret
mov
push
lahf
mov
xor
adc
dec
stos
inc
pusha
xor
inc
sahf
sbb
out
inc
jnp
lea
jb
mov
ljmp
push
ss
mov
pop
cmpsb
push
mov
popf
test
xchg
jecxz
mov
xor
test
jl
cmc
mov
in
sbb
adc
lahf
shlb
sub
sti
nop
mov
push
stos
popf
enter
add
lods
ds
imul
loope
cld
aad
jno
mov
cwtl
pusha
and
push
repnz
sub
clc
add
ret
xchg
fcomp
and
adc
std
seto
xor
adc
loope
sbb
inc
push
popa
dec
pop
scas
mov
dec
pushaw
mov
inc
push
or
in
cmp
mov
cltd
stos
xchg
repz
sbb
mov
mov
imul
icebp
jp
inc
cwtl
mov
pop
push
aam
add
std
add
mov
cmc
rcrb
testl
stc
jl
push
outsb
or
rclw
xorb
sbb
mov
stc
fisttpl
repz
inc
sbbb
loop
xchg
mov
add
adc
push
jle
cmp
iret
xor
mov
mov
lods
add
das
in
pop
dec
fnstcw
push
push
cmp
mov
repnz
stos
and
or
enter
sub
or
sbb
scas
cmp
orl
push
push
mov
out
sub
outsb
cmp
dec
and
loop
and
je
idivb
ret
push
push
jl
adc
pop
mov
test
iret
pusha
mov
sub
inc
adcl
cmpsb
in
out
fwait
inc
adc
mov
shlb
lahf
aad
pushl
mov
push
outsl
aad
mov
mov
cmpsl
subl
cmp
idivl
push
cmp
into
mov
mov
lods
sbb
out
and
add
and
lods
ret
sub
xchg
in
icebp
test
das
push
gs
push
sub
lds
push
out
outsl
push
fwait
lds
dec
push
roll
push
xchg
dec
call
or
out
mov
inc
mov
iret
subl
push
jnp
dec
inc
pop
mov
pop
dec
fs
xor
rclb
test
xor
int
adcb
fsin
and
into
test
arpl
cmpsb
mov
mov
ss
enter
ss
cmp
cmc
cmc
xor
dec
push
xorl
adc
in
popa
xchg
fs
push
fistpll
or
jl
cmc
js
jbe
aaa
pop
xor
jae
push
inc
push
arpl
mov
popf
stos
int
outsl
shlb
dec
inc
cmp
cmpl
notb
mov
sbb
sub
push
jno
mov
xor
popa
xchg
int3
stc
notl
adc
bnd
ret
mull
incb
sti
test
pop
pushf
out
or
popa
in
test
inc
fnstsw
rorb
mov
fnstcw
push
dec
test
clc
stc
pop
push
push
aas
mov
ja
jmp
fmull
mov
pop
push
pop
mov
mov
mov
xchg
inc
pusha
jb
in
and
xor
addr16
and
loopne
pop
cli
cmpsl
sbb
cltd
xlat
mov
in
insl
mov
dec
popf
push
and
ds
hlt
call
dec
sbb
in
dec
mov
cmc
cmp
scas
hlt
adc
imul
es
sti
ret
cs
iret
jne
add
sbb
mov
jge
inc
adc
and
push
in
push
rcl
sub
sbb
testb
aad
mov
call
mov
negb
arpl
pop
pushf
nop
push
push
imul
nop
fisubrs
int
adc
sti
jno
xor
rcr
mov
fbstp
mov
lcall
adc
cmp
pop
mov
sbb
fisttpll
xor
dec
in
sarb
jns
mov
xchg
outsb
mov
test
imull
adc
xchg
ljmpw
imul
jecxz
sub
jnp
outsl
out
fcmove
popl
xor
lahf
call
jo
add
pop
push
push
inc
pop
ficoml
sti
cmp
push
push
vmwrite
adcl
outsl
dec
and
out
out
cli
lcall
inc
cmp
leave
mov
popa
aas
shl
mov
sub
iret
and
and
rcrl
movsl
repz
sbb
pop
cwtl
dec
lds
or
cmp
and
mov
pop
jnp
cmp
std
call
pop
or
xchg
jno
jb
gs
mov
adc
mov
add
xor
xchg
add
mov
jnp
push
mov
and
loop
adc
mov
scas
out
icebp
sbb
cmpb
mov
lcall
xchg
sarl
xor
push
ds
out
sbb
pop
shr
les
pushf
jae
es
inc
mov
push
shlb
into
ljmp
sbb
dec
repnz
sbb
test
into
push
outsl
cmpsl
aas
xor
add
jns
shll
jmp
push
push
pop
push
hlt
lock
jo
push
mov
jbe
inc
loopne
ja
xor
call
popw
test
ds
cmp
push
repnz
cmp
cwtl
pop
mov
or
jne
cltd
jns
adc
fwait
jbe,pn
out
pushl
or
xchg
testl
sbb
test
push
mov
sbb
call
mov
movsl
lcall
jno
adc
decl
rcrl
mov
sub
or
ds
out
rol
or
sarl
outsl
ret
mov
xchg
sbbb
cld
dec
loop
sub
pop
ljmp
dec
outsl
pop
cmc
sbb
addr16
shrb
cmpsl
mov
adcb
out
loopw
lds
mov
leave
insl
jae
fsubs
lods
in
inc
sbb
or
int3
push
adc
xor
lcall
mov
leave
in
fs
pop
add
add
aas
mov
xor
pop
scas
sbb
lock
mov
sbbb
dec
pushf
loop
jnp
pop
orb
dec
mov
pusha
dec
push
adcb
movsl
push
nop
std
sub
out
add
outsb
xor
mov
pop
and
mov
xcrypt-ctr
cmpsl
fidivrl
cmp
push
add
pusha
add
inc
ret
sub
jno,pn
jg
cmp
scas
push
push
jbe
ret
mov
popa
lret
loop
mov
xor
in
push
aaa
lock
aad
jno
jb
sbb
mov
mov
negl
daa
and
insb
inc
mov
jle
mov
jae
jmp
mov
jle
or
or
jne
loope
notl
sub
call
and
mov
xor
add
jmp
lods
jnp
imul
add
lret
sbb
lods
sti
sbb
xchg
or
idivl
fs
mov
shr
in
adcl
divl
pop
dec
mov
xchg
inc
mov
lret
xor
movsl
push
and
add
push
jne
imul
and
test
out
loope
cli
dec
xchg
sub
or
mov
inc
subb
push
rcl
push
mov
pop
out
pop
loope
test
add
mov
adc
jl
mov
mov
mov
mov
cmp
xor
inc
xor
pop
scas
enter
mov
test
push
mov
and
outsl
dec
xchg
in
jg
pop
les
lds
sub
movsl
iret
xlat
rcr
mov
fnsave
lcall
sar
leave
pop
push
orl
cld
fcmovu
cmp
outsb
mov
loop
cwtl
dec
dec
andb
jb
xchg
insb
test
lahf
mov
pop
fimull
leave
stos
inc
iret
push
sub
sbb
out
aaa
push
pop
iret
mov
inc
push
bound
add
cmp
mov
add
jne
sub
pop
push
test
and
ja
call
loopne
test
cld
rol
pop
dec
mov
iret
fisttpl
push
add
outsl
and
sub
adc
jmp
pop
xor
adc
pushl
and
or
dec
jg
or
dec
xchg
mov
xrelease
pop
mov
inc
adc
sbb
pop
mov
sarl
cltd
pop
add
lods
fs
mov
ja
call
into
dec
cs
sarb
mov
inc
xlat
adc
mov
and
push
addr16
sub
and
mov
xor
xorl
lret
stos
add
out
stos
bound
std
iret
sub
aas
jge
xor
out
jp
dec
loope
cmp
int
or
xchg
repnz
stos
insb
and
punpcklbw
pop
out
pop
jecxz
or
cmpb
clc
sub
mov
push
xor
sub
inc
stos
push
lret
jno
dec
pop
iret
mov
dec
xlat
call
js
pop
dec
add
scas
push
or
add
lret
or
fists
roll
das
mov
xchg
fs
sbbb
add
sbb
or
in
jecxz
mov
out
mov
sbb
lds
jae
sti
std
cmp
jmp
aad
in
enter
stos
pop
out
adc
xor
jecxz
sub
mov
sub
push
loop
cmp
cmp
into
imul
add
jecxz
jecxz
dec
jge
and
ficoms
xor
sbb
push
test
pop
ljmp
jns
ds
push
push
xor
add
and
mov
or
arpl
ror
into
pop
xor
into
sti
inc
lods
fldcw
loopne
sti
pop
leave
test
mov
and
push
dec
mov
les
mov
leave
inc
insb
push
dec
xor
adc
or
cmp
outsb
jb
nop
pushf
jo
aam
sub
data16
pop
xor
mov
cmpsl
jmp
add
cmp
push
outsl
loope
cmp
inc
jbe
pop
mov
rcl
xor
out
mov
mov
sbb
dec
adc
and
sarb
mov
xchg
lods
inc
push
and
data16
dec
jmp
insb
sub
pop
nop
mov
push
les
mov
clc
orb
push
xor
mov
and
mov
enter
aas
mov
shrl
add
jb
pushf
decl
push
shll
in
dec
enter
push
xor
bound
sub
sub
push
dec
shll
rcrb
loope
cmp
jge
fs
fisubrl
jo
iret
dec
jl
shll
add
adc
lods
push
shlb
gs
mov
ret
or
js
mov
cmp
or
mov
dec
bound
xchg
cmpsb
sub
enter
mov
adc
mov
out
lret
movsb
cmpsb
rcl
push
push
xor
pop
mov
add
sub
iret
jno
lret
mov
xchg
add
int
call
xchg
push
mov
jo
outsb
icebp
clc
int3
mov
inc
insl
lret
mov
xchg
fwait
inc
mov
xchg
mov
dec
lods
or
pop
xor
push
lods
clc
cmp
fadd
imul
dec
clc
insl
inc
lret
std
xor
xor
mov
sub
sti
icebp
mov
paddusb
aad
cmp
sub
mov
xchg
push
inc
xor
mov
pop
lock
or
les
sti
mov
rclb
icebp
sbb
test
rcrl
pop
mov
test
rcrl
lea
idiv
jb
imull
fbstp
xor
pop
lds
arpl
push
mov
pop
sti
test
jmp
jecxz
scas
out
in
mov
xchg
scas
ror
pop
repnz
adc
dec
fs
out
adc
arpl
xor
scas
jecxz
push
xor
fistl
xchg
xchg
push
rolb
call
push
dec
out
sub
aad
mov
popa
lods
pop
adc
and
pushf
add
jae
jmp
push
subl
cs
sbb
ret
test
dec
out
add
push
cmpsl
add
jge
inc
or
sbb
cmp
mov
dec
loop
sbb
and
movsb
ret
stos
test
jle
adc
inc
jge
stos
lret
jg
adc
pusha
js
dec
stos
andl
arpl
fwait
outsb
push
push
push
mov
int
fisttpll
pop
decl
push
test
js
lea
mov
inc
testb
push
sub
outsl
icebp
aad
mov
pop
imul
jbe
andb
adc
loop
mov
dec
shr
sar
ret
das
sub
leave
cmp
or
int3
sarl
nop
sub
inc
xor
sbb
test
mov
mov
push
ret
pop
cmpsl
fcmovu
pop
and
inc
testb
nop
jmp
xchg
test
mov
pop
into
xchg
dec
pop
push
into
nop
jae
roll
shlb
das
stos
xchg
dec
jmp
pop
dec
stc
aad
test
outsl
dec
xchg
sbb
jmp
loop
fstpl
es
repz
jmp
inc
in
cwtl
jecxz
xchg
pop
shlb
jns
cld
dec
and
leave
sbb
pop
out
rcrb
ja
test
scas
inc
loopne
repz
or
das
sbb
gs
aaa
dec
mov
push
xor
arpl
fs
sbbb
add
ret
loopne
jg
outsb
pop
and
mov
mov
push
in
sub
in
shlb
enter
shrb
hlt
push
cltd
sub
pop
push
jp
rorb
jae
inc
out
push
and
push
dec
dec
rol
jb
mov
scas
mov
cltd
popf
sub
dec
jnp
imul
push
fbstp
in
pop
push
mov
dec
fidivs
test
adc
mov
and
add
jbe
pop
loopne
fdivl
pop
adc
test
cmpsb
push
rcrb
mov
pop
add
xor
pop
sub
fsubrs
sbb
jb
repnz
inc
outsb
mov
stc
pop
cli
pop
cmp
xor
adc
and
sbb
jo
pop
adc
les
stc
add
jno
xor
dec
test
mov
fsubr
push
rcl
fstl
push
nop
aaa
cmpsb
mov
cs
je
test
xchg
push
lods
xchg
fwait
push
and
or
scas
sub
addr16
int3
mov
incb
cmp
js
jnp
pop
je
adc
jge
mov
inc
lret
mull
bound
pop
xchg
fsub
outsl
call
repnz
jns
shlb
int3
fwait
rcrb
dec
push
xchg
or
mov
push
repnz
into
jno
cld
pop
mov
jmp
mov
sub
adc
lods
sbb
aam
and
or
dec
mov
xchg
fistpl
aas
dec
scas
inc
add
loope
or
sub
mov
in
push
mov
call
xchg
add
out
test
adc
testl
or
aam
fwait
sub
dec
jnp
pop
lds
push
sub
jno
pop
mov
push
add
fistps
pop
jl
cli
sub
xorb
jno
lods
dec
lcall
loop
jle
outsl
push
sub
sti
push
test
rcrl
xor
xchg
xchg
pusha
pop
sbb
sbb
push
mov
mov
push
or
jg
aaa
and
lods
ljmp
out
mov
jp
sub
xor
push
mov
outsb
das
test
dec
cmpsl
pop
aam
ficompl
push
arpl
mov
loopne
cmp
mov
xor
adc
push
add
jbe
add
test
ror
out
cmpsb
adc
in
int
mov
mov
out
stc
jmp
addr16
in
push
das
mov
les
dec
iret
push
test
jo
test
dec
ja
lods
xchg
xor
pop
cmpsl
aam
push
cmpb
mov
add
stc
out
inc
inc
test
jbe
inc
jnp
xor
push
and
cmp
push
loop
insb
pop
lahf
and
pop
cmc
dec
cmp
or
cmp
dec
dec
loopne
pop
jae
movsl
sbb
or
xchg
dec
cmpsb
pop
push
lret
js
dec
dec
test
enter
or
pop
inc
jae
pop
sub
das
cmp
or
out
inc
shlb
das
add
mov
in
sahf
dec
sbbl
fwait
mov
dec
out
push
movsl
or
cmpsb
scas
push
ret
rcrb
cmpsb
outsb
test
leave
leave
punpckldq
pushf
xchg
and
xchg
mov
and
les
dec
push
into
rcll
xchg
pop
imul
cwtl
xchg
mov
jge
inc
xchg
cmp
mov
mov
xchg
ja
mov
jecxz
adc
data16
mov
mov
in
imul
imul
jb
dec
push
rol
scas
sbb
fs
in
rcrl
mov
xorb
dec
loope
or
les
insl
cmp
and
in
in
push
mov
xorl
shr
pusha
cmpsb
xor
sub
sub
mov
sub
dec
jae
mov
loopnew
ret
data16
push
test
repz
mov
mov
cmp
nop
jg
ret
test
mov
xorl
in
ret
xchg
add
mov
and
adc
lods
repnz
add
sub
test
nop
aad
fucomp
mov
jae
ja
stos
fucom
mov
rorl
loope
movsb
mov
jge
idiv
mov
ja
out
dec
jns
cli
jae
add
pusha
divb
jnp
test
movsb
ret
lret
push
or
outsl
or
add
pusha
dec
push
enter
movsb
adc
and
push
push
imul
insb
and
xchg
push
fwait
in
jbe
js
out
cld
push
cmpsb
mov
jns
out
jmp
jne
arpl
mov
push
out
xchg
lret
jnp
decb
pop
loop
sub
out
pop
out
xor
lock
xchg
xor
adc
push
popa
jmp
mull
scas
inc
mov
mov
cmpsl
dec
lods
filds
jg
pop
xor
popa
fistps
sub
sbb
ret
xchg
bound
in
and
mov
cmc
cld
sbb
adcl
sti
in
xor
outsl
test
jbe
xchg
out
mov
xchg
jbe
repnz
push
dec
or
jg
insl
cmp
call
mov
sbb
ja
test
aad
fidivrl
pop
hlt
shrl
dec
dec
dec
sbb
mov
or
jecxz
sub
mov
dec
mov
xchg
sbb
pop
dec
mov
cmp
and
mov
in
push
jg
fsts
pop
push
xchg
jp
mov
movsb
mov
cmp
push
fcomps
sbbb
add
adc
enter
cli
test
push
movb
xchg
scas
cmpsl
js
leave
mov
js
ficoms
popl
fs
out
jb
inc
das
pcmpeqw
and
bound
in
mov
dec
or
mov
xchg
ss
roll
add
push
ds
out
or
dec
sub
add
test
negl
mov
daa
xchg
ror
aas
nop
rcr
and
outsl
sub
pop
in
shrl
cmpsb
pop
mov
mov
out
add
data16
cmp
int3
adc
and
rcll
inc
out
and
cmpsb
fldenv
mov
mov
dec
fdiv
popf
adc
rcrl
in
ss
scas
mov
js
xorb
add
int
out
cld
dec
loop
jnp
fwait
sub
sub
push
fadd
sub
xchg
jne
cmp
fwait
and
push
jo
rclb
jmp
stc
lret
aas
dec
ror
call
mov
jecxz
cmp
fisttps
xlat
xor
push
mov
xchg
fmull
mov
rcr
loopne
shlb
mov
add
test
mov
pop
adc
and
mov
sub
loope
pop
lods
push
and
arpl
mov
mov
dec
bound
shrl
popa
shll
jecxz
xchg
push
mov
sub
enter
pop
into
pop
push
push
mov
js
popa
mov
pop
mov
add
aad
inc
pushf
xchg
shrb
fldl
les
sbb
lods
xor
leave
outsb
pop
add
sbb
or
arpl
dec
out
or
xor
mov
pop
enter
mov
jne
in
inc
mov
rcl
jge
mov
xchg
gs
push
and
sbb
gs
cli
push
push
adc
lock
xchg
push
das
fsts
aad
sub
cmp
add
idivl
pop
add
push
imul
jp
xchg
ret
and
popa
jmp
addb
and
push
daa
mov
popa
or
xchg
fisttpll
lock
inc
jno
mov
mov
enter
ficomps
adc
dec
add
pusha
test
out
xchg
out
sbb
fwait
arpl
cmp
mov
notb
popa
ror
and
inc
call
test
sub
jnp
stos
xchg
jle
xchg
dec
inc
xor
into
sub
xchg
sbb
xor
hlt
or
sbb
sub
popa
fs
jbe,pn
js
sbb
push
dec
dec
and
add
mov
jp
jecxz
lods
pushf
xchg
cmp
mov
in
js
xchg
test
and
lcall
xchg
pusha
outsl
and
or
test
push
mov
fadd
in
in
in
sbb
xor
jl
push
push
adc
loope
sarb
daa
pop
and
push
addr16
dec
mov
hlt
mov
in
xchg
sub
add
jnp
aaa
push
cmp
pushl
fldt
push
ss
mov
dec
sbbb
outsb
push
out
inc
out
xchg
push
or
mov
pop
sub
sub
mov
call
and
loopne
push
mov
xor
add
and
es
sbb
sarl
mov
xlat
sub
sbb
stos
pop
fisubrl
jbe
out
sbb
ja
gs
rcll
mov
jl
inc
pop
scas
xchg
stos
xor
dec
in
xor
mov
in
mov
leave
shrb
mov
repz
js
sub
push
jns
add
or
cli
dec
sub
dec
addr16
test
dec
xchg
jecxz
sub
movsl
test
push
movsl
dec
cmp
add
jne
pop
and
mov
add
jl
xor
pop
mov
jnp
mov
stos
add
mov
push
aaa
dec
push
xor
pop
scas
mov
int
rcll
mov
cmc
gs
jmp
fldenv
push
mov
sub
pop
inc
enter
lock
mov
loope
cmp
xorl
cld
push
mov
roll
mov
mov
jb
inc
jg
cmp
rolb
hlt
cpuid
jp
add
sbb
pop
add
pop
jno
xor
xchg
xchg
incb
dec
and
adc
adc
mov
clc
lret
cld
cmc
push
dec
mov
das
dec
enter
and
sub
test
pop
cmp
loop
rclb
fdivl
mov
cmp
push
mov
cmc
ljmp
cmpsb
decl
enter
or
lret
and
loopne
sub
addr16
mov
and
mov
insl
daa
movups
in
pop
mov
push
xor
btc
adc
cld
movsb
jg
sahf
add
cltd
sub
push
inc
cmp
fsubrs
push
and
gs
loop
push
aas
mov
adc
push
or
out
sbb
scas
out
push
mov
pop
adc
jg
mov
popa
xchg
leave
lahf
js
fucom
enter
jle
push
test
sub
incl
movsl
dec
xchg
call
add
xor
rcl
push
test
sbb
inc
addr16
mov
les
pop
sub
pop
gs
inc
mov
iret
lods
xor
rorl
sub
dec
lods
mov
or
sbb
insl
stos
int
pop
dec
cmp
sbb
lea
cli
push
xchg
pop
aaa
dec
and
inc
sub
adcl
sbb
inc
pop
enter
mov
add
jnp
pusha
adc
mov
mov
and
addl
xor
mov
dec
iret
push
or
mov
xchg
dec
andb
out
das
and
fdivrl
enter
xchg
das
vfmaddsd
dec
fisttps
movsl
push
fs
mov
jb
ja
into
daa
lcall
mov
mov
cmp
jae
mov
cmp
and
dec
popa
add
fcompl
dec
lds
aas
popa
sarb
mov
hlt
jns
sub
pop
dec
icebp
xlat
andl
adcl
out
out
ret
call
jg
in
mov
pop
rcll
daa
push
xor
sbb
sbb
jno
mov
call
pop
fldt
outsb
scas
jg
aad
incl
insl
mov
insb
mov
jns
pop
ja
sub
jg
mov
addr16
scas
movsb
outsl
cs
mov
ja
sub
fwait
jp
roll
sub
mov
sahf
and
out
mov
pop
add
hlt
test
popa
and
jae
cmpsl
jmp
test
loopne
xchg
hlt
imul
mov
test
inc
js
out
das
pop
mov
mov
mov
jnp
aam
push
ljmp
aad
push
or
icebp
arpl
decl
xor
pop
xlat
loopne
dec
push
add
sbb
pop
sub
xchg
out
movsb
and
pop
movsb
daa
sub
jns
inc
call
jno
imul
insl
aad
push
outsl
mov
arpl
popf
mov
fwait
xor
cltd
pop
push
xlat
pop
pop
dec
xlat
loopne
dec
jp
mov
jle
push
inc
jp
roll
mov
inc
mov
sub
test
dec
outsl
push
dec
aad
push
inc
mov
arpl
mov
xor
xor
movsl
pop
push
pop
ss
mov
push
sahf
dec
ja
sub
addr16
shll
test
fwait
cmpsl
xchg
mov
stos
sub
cwtl
jp
rcrl
sub
xchg
dec
mov
pop
fcom
xchg
fwait
cmpsl
sub
insb
addl
jo
sbb
pop
cmc
xchg
fs
xlat
cltd
cli
push
imul
mov
mov
pop
pop
fildl
xchg
dec
mov
mov
pop
dec
outsl
push
testl
icebp
movsl
out
ret
add
adc
mov
ljmp
xor
lcall
xor
inc
jmp
jnp
lods
in
negl
scas
sbb
inc
mov
cmpl
fsub
dec
jnp
aas
arpl
cmp
xor
xor
or
enter
jmp
and
sbb
sbb
stos
mov
ret
cmp
push
sbb
add
out
pop
push
push
jb
lahf
push
cmp
fdiv
insl
inc
call
xchg
ljmp
dec
and
movsl
lret
repz
dec
fst
inc
adc
mov
sbb
or
inc
test
shrb
pop
insl
cmp
cwtl
fldenv
dec
jmp
and
fmulp
js
std
sbb
xchg
mov
lret
fistpll
outsl
andl
out
arpl
add
jmp
adc
sarl
sti
push
cs
adc
add
sub
push
mov
adc
movsb
decl
jne
in
std
ret
and
je
data16
movsb
xchg
loope
add
int
inc
cmpb
aad
pop
xchg
daa
icebp
and
add
push
add
xchg
inc
sub
fsubrl
push
repz
aaa
push
mov
dec
push
out
aam
and
ja
dec
fmul
dec
mov
xlat
jp
aad
jne
sbb
sbb
cmp
ret
arpl
in
push
in
xchg
mov
enter
popa
fidivl
arpl
sbb
sbb
arpl
mov
lret
pop
popa
popf
pop
sub
push
cld
in
ror
jp
outsl
insb
nopl
popf
popa
pop
adc
jge
scas
and
mov
jbe
xor
mov
rorl
dec
add
ss
jle
int
dec
shll
mov
dec
push
hlt
jns
pop
mov
xchg
loop
xor
sbb
dec
loop
add
mov
mov
xor
jecxz
lret
push
cmp
outsl
mov
divl
jnp
testb
mov
stos
add
xchg
pop
outsb
lahf
xchg
mov
mov
jno
insl
xchg
or
sub
out
or
mov
and
mov
mov
xor
bound
push
nop
out
cwtl
aaa
lret
mov
sbb
xor
mov
mov
mov
hlt
popf
test
cmp
mov
int3
mov
fs
pop
sbb
inc
jmp
inc
mov
fidivl
mov
pop
cmp
sti
fisttps
test
push
adc
fstps
cmpsb
dec
adc
sti
rorl
add
aas
xchg
ret
cmp
lock
jnp
or
mov
sbb
dec
cmpl
shl
sbb
mov
xor
fwait
mov
mov
out
cmp
int3
jp
xchg
lahf
push
shrb
bound
aas
negl
mov
push
push
pop
mov
mov
mov
inc
lret
xchg
dec
dec
lret
dec
test
add
gs
cmpl
mov
push
and
fisubrs
in
ljmp
mov
jnp
dec
stc
sub
addr16
call
dec
mov
std
andl
movsb
enter
inc
push
add
ret
push
mov
pop
cmp
shll
clc
insl
mov
jg
or
sbb
mov
dec
divl
daa
adc
mov
loop
sbb
jnp
push
loopne
push
adc
lds
jns
shll
cmc
sbb
adc
int3
aaa
xchg
xchg
aam
cmp
push
lahf
jmp
push
cmp
sarl
mov
adcb
sbb
xor
cmp
jnp
push
pop
pushf
sbb
lods
push
scas
imul
loopne
xchg
and
and
lret
sti
xchg
dec
rorb
or
test
sub
jle
sub
fdivrl
int
mov
add
push
mov
ror
pop
xor
incl
pop
imul
sub
sub
negb
mov
nop
loopne
push
insl
ds
scas
aam
cltd
scas
ds
roll
xchg
mov
sbb
in
push
iret
adc
add
jge
push
or
cmp
sub
lea
lahf
pop
mov
pop
jl
jb
repnz
mov
xor
or
cmp
fmull
shll
pop
adc
push
or
mov
arpl
add
cmp
and
adc
xchg
jg
lret
and
popa
push
popf
and
lds
cld
push
sub
jnp
mov
das
pop
mov
cltd
cmp
xchg
aas
pop
sub
jnp
or
lcall
mov
in
inc
in
and
jg
les
and
xchg
test
or
mov
mov
pop
outsl
repnz
imul
push
js
push
mov
and
inc
adc
pop
scas
outsl
scas
pushf
mov
sub
push
xchg
push
lea
fwait
or
gs
xchg
jne
movsb
aam
ds
fwait
mov
jle
jle
cmp
mov
jl
and
jo
xchg
pop
je
shl
push
push
mov
cmp
pushf
cmp
mov
bound
imul
xchg
hlt
xor
add
iret
adc
jo
mov
or
shl
adc
fisubrl
outsl
filds
pop
test
cmp
and
push
outsb
xchg
cmp
inc
mov
add
pop
dec
mov
les
xor
sub
rorb
std
and
mov
mov
xchg
lods
cmp
inc
and
sub
sub
pop
es
dec
jbe
inc
ret
mov
mov
push
fsubrl
ss
int3
ja
and
mov
aad
fwait
icebp
test
or
jl
imul
mov
sbb
mov
clc
idivb
adc
push
jge
adc
lea
lea
mov
jl
mov
sahf
cmp
sbbb
mov
add
lret
stc
repz
js
enter
lea
adc
pop
and
dec
ss
std
mov
lret
lock
mov
jnp
inc
push
dec
pop
je
cmpsl
push
push
pop
aam
and
mov
jle
sahf
inc
sbb
fldcw
dec
loop
push
sbb
mov
jg
mov
mov
in
mov
push
push
add
push
test
repz
dec
sub
inc
and
pop
dec
mov
xchg
sub
and
pop
sub
fcomp
mov
and
mov
inc
inc
sub
lds
lea
shlb
js
std
mov
dec
push
sbb
dec
sti
xor
dec
push
push
mov
pop
adcl
ss
arpl
daa
sub
rcll
push
add
xchg
pop
insb
mov
hlt
setg
cmp
sbb
test
mov
imul
mov
dec
add
mov
dec
fwait
dec
pop
outsl
aam
dec
or
pop
incl
xor
cmp
mov
xor
clc
push
fs
pop
in
dec
pop
mov
stc
pop
repnz
sub
lock
ficoms
push
loop
inc
dec
insb
add
xchg
push
jno
in
pusha
out
mov
dec
and
sbb
jp
xchg
mov
dec
xchg
lods
fistps
xchg
addl
adc
add
cmp
cmc
mov
inc
sarb
aad
inc
int
sti
fsubs
mov
inc
xchg
cmpsb
push
and
and
into
xchg
mov
popf
pop
add
add
shlb
addr16
cmp
pop
sub
add
mov
cmp
scas
flds
popa
mov
lods
sbb
cltd
xchg
pop
sub
ljmp
rorb
scas
cmpsl
and
sbb
xchg
scas
dec
or
sbb
lret
and
incb
test
pushf
jbe
inc
adc
lahf
popa
xor
rolb
scas
shrb
sbb
push
movsl
leave
sbb
hlt
mov
sbb
and
xor
xchg
sbb
add
gs
cltd
fs
stos
fists
pop
scas
loop
out
adcl
mov
mov
lret
add
add
cmc
pop
inc
imul
dec
xchg
xchg
inc
xor
mov
jmp
ret
jl
push
dec
jae
nop
push
adc
shll
insb
outsl
incb
xchg
arpl
cmp
xchg
sub
push
dec
jl
movsl
cmp
iret
fwait
daa
scas
cmpb
and
dec
sbb
cmp
mov
xchg
cmp
mov
xchg
adc
mov
xchg
pusha
pop
cmp
das
jp
repz
and
ret
ds
mov
inc
mov
leave
xor
fs
aas
mov
mov
push
in
add
enter
es
dec
das
out
sar
and
jnp
mov
rorb
aad
scas
push
nop
repz
and
ss
cmpb
iret
dec
mov
or
add
add
mov
xchg
or
sqrtps
sbb
insl
clc
sub
jl
negl
ret
adc
fnstsw
jae
divl
sub
imulb
sub
aam
out
cmp
xchg
jl
pop
lds
jle
leave
les
or
pop
pop
mov
mov
mov
addl
push
popa
sub
ja
cmpsl
inc
std
add
sahf
stos
pop
pop
xchg
addr16
fwait
mov
pause
pop
pop
xor
adc
push
enter
jbe
scas
sbb
mov
imul
scas
mov
nop
push
xchg
iret
jnp
xchg
js
xor
jns
ret
mov
push
xchg
jecxz
xor
push
repz
xor
xlat
push
cltd
dec
das
sub
sti
xor
lea
insl
cmp
mov
ret
fs
stos
jle
repnz
cmp
jnp
sub
icebp
sbb
dec
into
sbb
xchg
pop
and
sub
fstp
dec
movsl
sbb
outsb
mov
ss
arpl
in
ss
pop
mov
or
scas
inc
xchg
mov
pop
lock
arpl
xor
idivb
test
push
add
arpl
mov
ds
xchg
shr
mov
xor
sbb
xchg
inc
jbe
lods
test
xchg
xchg
rcrl
cmpsb
sub
mov
scas
sub
dec
mov
out
and
aaa
xchg
std
in
and
lds
inc
cmp
add
pop
loope,pn
dec
or
arpl
dec
gs
rcll
shlb
shl
fldl
sti
jmp
and
adc
inc
xor
pop
mov
jp
aad
xchg
pushf
dec
jae
xchg
icebp
das
lods
int
or
jecxz
mov
cmp
cltd
mov
cld
jp
out
add
sub
sbb
mov
mov
add
jg
lret
bound
push
add
or
int
lods
lea
mov
out
mov
repz
sub
inc
push
in
mov
push
push
push
jp
cltd
outsl
xor
and
jecxz
movsb
inc
mov
into
les
scas
sub
cmc
mov
hlt
xor
jae
stc
movsb
scas
push
add
cmp
sub
mov
cwtl
shlb
and
push
push
mulb
adc
cld
shlb
adc
in
pop
sarb
jo
rcll
cltd
sbb
push
sahf
push
add
dec
out
push
cmp
scas
ljmp
outsl
adcb
std
adc
punpcklwd
sbb
jae
or
mov
cmp
into
lahf
ljmp
pop
mov
dec
jmp
or
or
mov
inc
inc
jp
test
jo
lahf
iret
push
dec
pop
jl
mov
in
test
jbe
out
add
cwtl
es
inc
push
sahf
cmp
fisttpl
push
data16
in
into
jno
and
mov
mov
jnp
mov
pop
mov
outsb
int
jb
out
sarl
push
into
inc
rorb
mov
sar
mov
ret
inc
inc
sbb
outsl
or
inc
subb
lods
outsl
rcll
scas
cmp
movsl
cmp
out
addb
subl
xchg
fwait
icebp
mov
and
je
jbe
jle
imul
std
jbe
xchg
repnz
mov
jb
fldenv
out
jbe
rcl
addr16
mov
dec
test
or
pushf
pushf
lock
mov
scas
lret
jg
add
adc
fildll
test
jg
xor
mov
sahf
imul
jl
dec
dec
and
cmp
adc
xchg
outsl
xchg
das
or
pushf
iret
in
cmc
popf
mov
popf
mov
jno
xlat
mov
jae
ss
pop
outsl
inc
out
jmp
jle
sub
dec
add
fldcw
subl
out
adc
inc
dec
xchg
ficoml
xor
ss
leave
fistps
scas
fnstenv
and
jle
push
cli
rcll
loop
lods
arpl
add
mov
imul
les
xor
adc
aam
fsts
add
mov
cli
add
outsl
enter
add
ret
add
xchg
movsl
gs
aam
ljmp
movsl
clc
jmp
arpl
push
subl
push
xchg
es
pop
push
subl
ror
decb
jae
xor
push
mov
cmp
xor
jle
cli
rcrb
lahf
je
xlat
and
pop
dec
stos
mov
jle
stos
dec
das
push
fisubrs
cmp
icebp
and
adc
out
mov
jmp
cmp
xor
inc
test
pusha
sbb
sub
jmp
adc
in
adc
jne
xchg
adc
ja
and
push
and
cmp
sub
mov
ret
cmp
outsb
cltd
dec
iret
int
inc
lods
arpl
movsl
scas
daa
or
pshufw
lods
lahf
mov
sti
in
std
loop
add
and
mov
loopne
pop
inc
xchg
xchg
call
jns
mov
loopne
or
sub
xchg
lods
jle
jae
mov
fisttpl
mov
lods
out
xchg
and
xor
dec
test
pop
mov
sarb
xchg
jne
cwtl
mov
fcoms
pop
jmp
cmp
out
dec
sub
sti
inc
jge
inc
out
push
adc
sbb
or
jns
mov
out
pop
adc
mov
lods
pop
xor
and
cmc
mov
jmp
and
test
in
test
cmp
jl
or
mov
or
mov
es
das
xchg
push
pop
rcll
add
adc
xor
jmp
dec
xor
mov
or
cli
lea
sbb
push
mov
test
movsb
mov
scas
lahf
aas
loope
xchg
orl
cltd
dec
ss
xlat
enter
inc
sbb
mov
xor
inc
sub
dec
mov
stos
add
in
scas
adc
xchg
xchg
gs
adc
sahf
mov
pop
repnz
inc
pop
dec
sbb
imul
jo
pushf
test
call
sbb
dec
inc
mov
jge
cwtl
mov
mov
adc
push
out
mov
mov
dec
in
repz
add
and
and
add
mov
mov
loopne
lret
or
or
push
shl
xor
subb
sti
lret
js
sub
sbbl
pop
iret
out
cmpsb
add
lods
jmp
js
mov
jle
add
lods
out
mov
sub
jp
add
das
add
test
cld
test
push
ja
mov
inc
sbb
cmc
loope
and
jne,pn
stc
adc
xchg
xchg
lahf
popa
mov
addb
stos
scas
and
sub
scas
test
pop
jp
adc
aas
icebp
xchg
lods
push
stc
sbb
mov
pop
and
nop
mov
jae
adc
out
or
inc
fcoms
movsl
pop
sub
stc
jb
adc
jmp
xor
dec
sbb
scas
mov
stos
nop
sti
fidivrs
in
adc
fimull
cs
mov
out
push
adc
clc
dec
pop
mov
jnp
and
jne
cmpl
je
addb
mov
ret
pop
loope
jp
movsb
mov
iret
scas
dec
ljmp
out
jbe
lea
movsb
out
js
or
pop
arpl
mov
dec
sbb
push
negb
xchg
outsl
cmp
int
icebp
mov
pop
inc
mov
ja
xor
repz
adc
mov
movsb
xor
mov
pushf
mov
hlt
push
lds
push
inc
dec
stos
jle
test
mov
test
daa
cmp
aas
mov
shl
inc
mov
pop
loop
fdivs
push
stc
cmc
clc
inc
and
pop
jmp
cltd
push
sub
dec
pop
arpl
outsb
sub
push
sub
lods
add
int
mov
mov
mulb
push
nop
jbe
and
icebp
cli
scas
daa
insl
test
divl
adc
fsubrs
xchg
inc
and
xchg
jmp
test
test
jge
jmp
fildl
jmp
sbb
outsb
and
loope
mov
dec
pop
add
mov
mov
mov
and
mov
adc
add
dec
and
mov
daa
mov
mov
and
and
pop
aam
dec
mov
xchg
jp
outsl
cltd
or
ret
andl
cmpl
lret
lods
out
out
sbb
jp
dec
xchg
and
inc
bound
and
dec
mov
insl
sbb
scas
jmp
std
or
mov
repz
insb
enter
sbb
repz
push
aad
sbb
xchg
dec
sub
ret
fidivrl
lock
cwtl
mov
test
fldenv
cmpsl
mov
shr
pop
jge
frstor
xor
fsts
lcall
xchg
inc
mov
jnp
das
lods
xor
sub
stos
out
dec
out
rcrl
das
movsl
jg
imul
repz
mov
dec
pusha
js
enter
std
popa
dec
dec
aas
out
or
outsl
scas
mov
jge
in
popa
insb
scas
xlat
fwait
testl
push
lods
push
or
rolb
popa
js
enter
push
adcl
out
dec
sub
xchg
test
dec
outsb
mov
push
mov
cmp
in
sbb
mov
pusha
lock
mov
lods
lods
mov
or
jmp
imul
xchg
mov
movsb
fidivl
inc
xor
imul
push
pushf
aas
pop
mov
jle
out
fisubrl
lods
pop
push
sbb
push
lret
sbb
jnp
lods
outsb
int
adc
and
mov
not
dec
mov
inc
mov
pop
fwait
popf
cltd
dec
add
mov
inc
sub
push
loop
jecxz
inc
add
push
das
daa
push
sbb
jbe
push
sti
pushf
ret
mov
out
loope
cvtps2pd
cmp
and
inc
loope
test
inc
fs
sti
fiaddl
sub
scas
jbe
and
dec
add
jb
js
add
test
jmp
es
loopne
loope
push
clc
mov
lock
and
pop
into
inc
dec
lcall
sbb
jle
xchg
int3
popa
mov
arpl
add
jnp
inc
sbb
hlt
stos
fs
jne
pop
sub
push
ret
push
push
mov
sbb
push
sub
xor
xlat
mov
movsb
and
js
cmp
or
or
pop
sub
rcrb
sub
shl
add
lods
neg
in
jp
test
push
hlt
push
push
cmpsb
sub
cs
iret
fsubs
mov
arpl
mov
lcall
push
test
pusha
jp
push
push
test
sbb
loop
js
jge
inc
test
pop
rolb
bswap
aad
fmuls
out
popa
int3
sub
push
call
clc
adc
xlat
loopne
lods
sub
xor
lods
sbb
cli
movsl
pop
arpl
clc
adc
stos
inc
popa
or
imull
stc
cmp
stos
mov
pop
pop
push
shll
sbb
lret
xor
pop
mov
lcall
call
cld
and
and
shr
sti
cmp
pop
jns
push
add
mov
xchg
push
inc
sub
xor
test
sub
test
pop
add
jns
shll
add
aam
hlt
gs
jecxz
cmp
inc
das
mov
filds
dec
jmp
and
mov
pop
push
xor
inc
sub
aam
int
adc
aaa
rclb
dec
push
arpl
movsl
push
mov
mov
mov
data16
in
mov
xchg
sbb
daa
stos
test
loopne
xor
test
inc
dec
ja
repnz
xor
inc
pop
jno
dec
testl
shr
add
pop
lea
push
push
sbb
sti
jb
mov
filds
int
jmp
jmp
add
bound
push
testl
loope
jge
ret
orb
sub
rcrl
test
push
sub
adc
push
mov
js
pusha
popa
nop
inc
sbb
mov
cmp
imul
jle
pop
jecxz
jns
lds
cmpsl
dec
out
add
ffree
cmp
lods
lea
jnp
mov
insb
pop
jecxz
ds
push
sbb
sub
ss
push
aas
push
lahf
cmpsl
outsb
dec
cmp
mov
addr16
into
push
arpl
lock
int3
push
cld
pop
fldt
push
push
repz
jecxz
sub
xor
mov
xchg
andb
stos
or
cmp
xchg
aas
mov
pop
jae
arpl
out
mov
lock
pop
mov
hlt
mov
jnp
mov
xchg
dec
mov
push
mov
push
xchg
fildll
mov
es
xchg
ljmp
pop
lods
add
imul
jge
test
test
int3
rcl
outsb
xchg
scas
inc
push
mov
mov
repnz
mov
add
lea
pusha
into
fsin
inc
and
sbb
dec
dec
xchg
mov
gs
inc
aad
and
movsb
jae
jmp
push
sub
rorl
daa
sbb
testb
inc
jno
mov
mov
insl
pop
hlt
sbb
sbb
mov
push
jle
sub
dec
fmuls
or
jecxz
sahf
xor
into
mov
add
add
rcrl
fistps
jp
sbb
pop
subb
xor
add
outsl
jp
ss
mov
cmpsl
hlt
cwtl
push
imul
xchg
arpl
add
dec
xor
rcll
dec
pop
test
xor
test
in
out
mov
shlb
jo
dec
fisubrs
push
dec
xchg
lcall
push
adc
int3
jno
jg
imul
xor
xor
push
dec
fsincos
sbb
cmpsb
cwtl
or
sbb
movsb
and
nop
bound
inc
aas
rol
sub
push
arpl
cmp
cmc
add
and
outsb
pop
mov
aas
movsl
fisttpl
inc
cli
ds
cmpsl
add
push
addr16
rcrl
adc
mov
inc
jnp
loopne
mov
int
push
jae
pop
push
ds
and
lcall
push
mov
pop
pop
push
cmc
xor
insb
sbb
aaa
xor
and
adc
push
pop
movb
mov
and
sbb
in
out
scas
aas
cmp
ret
hlt
sbb
enter
dec
xchg
xor
lods
jns,pn
cmc
into
lods
and
inc
push
pop
shll
or
sahf
gs
mov
int3
or
leave
movsl
fwait
arpl
add
xchg
cli
mov
scas
inc
test
dec
push
fsubl
pop
xchg
pop
jb
mov
outsb
jecxz
jns
ss
enter
imul
jge
dec
push
pop
flds
pop
mov
add
jecxz
and
sub
sub
dec
mov
inc
adc
rcrl
std
dec
js
cmp
mov
scas
std
mov
daa
cmp
dec
cli
mov
xchg
shll
out
fisttps
adcb
mov
inc
ss
scas
stos
outsl
pop
pop
cmp
rcrl
test
pop
scas
sub
sub
imul
dec
mov
shll
test
cs
sub
cmc
mov
pop
imul
sbb
inc
iret
dec
pop
jle
jg
clc
out
dec
jno
push
ficoml
das
push
int3
inc
cmp
jns
dec
inc
jecxz
xchg
mov
sbb
stos
xchg
inc
jns
les
mov
leave
pop
xchg
fwait
inc
inc
mov
xchg
or
das
outsl
or
xchg
or
dec
sti
pop
pop
mov
or
and
jo
arpl
sbbl
add
scas
ret
ret
aas
leave
les
sbb
shlb
inc
mov
push
enter
inc
cmpl
mov
push
xchg
test
mov
pop
sub
mov
sbb
aaa
and
arpl
and
inc
push
xlat
pusha
sbb
sbb
mov
shlb
scas
or
sbb
stos
inc
xor
lcall
test
fsubrs
xchg
add
in
jne
icebp
hlt
jnp
psrld
retw
test
aad
scas
ds
insl
dec
sub
and
ret
les
arpl
jnp
aas
push
pop
mov
into
and
aaa
inc
imul
arpl
mov
std
into
sahf
lret
push
add
xchg
jmp
ret
mov
dec
das
enter
mov
or
push
cmpsl
mov
int
lret
leave
mov
xor
mov
in
pop
sub
and
lds
jns
add
adc
in
ja
stos
in
cmpsl
sub
mov
or
pop
lds
adc
pop
dec
dec
and
mov
mov
cmc
mov
xor
pusha
cmp
lahf
aam
lea
sub
jl
xor
mov
adc
test
sbb
xor
add
push
fistpll
mull
mov
xchg
jecxz
lahf
xchg
xor
xor
pop
mov
add
int
and
push
or
mov
xor
aas
data16
movsl
add
sub
mov
gs
mov
loop
xchg
add
jg
and
mov
data16
divl
mov
cli
dec
cmpsb
mov
clc
clc
mov
shrl
scas
dec
fmull
fisubl
xchg
add
or
hlt
mov
daa
aad
mov
xchg
mov
cli
ficoms
mov
xlat
dec
push
or
sti
mov
xorl
sbb
sub
pop
leave
or
pop
jb
movsb
and
mov
mov
push
scas
add
xor
adc
inc
xchg
dec
push
aam
mov
sbb
cmp
inc
push
ds
add
inc
adc
add
sbb
jo
lcall
fstpt
add
lea
jge
dec
inc
inc
lahf
xchg
shrb
dec
jp
lret
xchg
sbbl
adc
or
fs
jno
push
push
dec
rorb
testb
mov
aas
test
sub
cli
mov
frstpm(287
repz
mov
and
test
mov
or
jp
pop
xchg
and
dec
cmpsl
imul
and
mov
sub
mov
mov
or
push
and
mov
pop
and
adc
xchg
out
inc
dec
sti
cwtl
mov
inc
mov
xchg
jne
out
movsl
or
fsubrp
sub
ljmp
loop
mov
xchg
push
pusha
sti
mov
cmp
sub
xchg
dec
std
xchg
test
and
add
imul
and
add
lock
jmp
and
add
hlt
xchg
mov
loop
lock
jg
fimull
push
dec
sub
cmp
sub
sahf
lods
test
xchg
testb
cltd
or
aas
bound
jne
jg
mov
pop
ret
and
sarl
enter
mov
or
mov
jns
mov
inc
mov
push
jecxz
or
movsl
jae
std
dec
sbb
add
out
in
imul
cmp
out
add
cmp
stos
sbb
dec
or
in
mov
ret
ljmp
aaa
pop
adc
gs
pop
push
cmp
inc
add
push
into
ret
sbb
leave
mov
xor
mov
stos
mov
addr16
lret
sbb
out
xchg
cmp
inc
stc
sti
or
sbb
or
jns
sarl
cmp
aas
shr
push
clc
lahf
adc
add
jl
pop
aam
fwait
imul
push
sahf
push
fsubrs
call
incb
stos
sub
pop
sbb
out
dec
fucomip
sub
fbstp
js
popa
int3
imul
sbb
jle
fxch
jl
adc
insb
mov
push
xor
mov
sbb
cltd
std
adc
lret
icebp
and
gs
in
cwtl
sub
fs
je
rorl
cmp
clc
ds
sbbb
ret
into
arpl
or
adc
aam
xor
int
hlt
xor
xchg
lods
cltd
cmp
out
shlb
sbb
test
mov
pop
xchg
push
rcrl
lcall
add
mov
pop
pop
roll
push
mov
xchg
cmp
adc
gs
insb
mov
or
lods
decl
dec
lds
int3
dec
imul
add
dec
xchg
ss
loop
inc
imul
icebp
aas
out
dec
sti
shll
pushf
xor
sbb
iret
ds
gs
cwtl
lock
push
dec
sub
push
out
or
cs
lret
aad
push
rcr
cmp
xchg
imul
pop
pop
ret
jns
outsl
xor
push
arpl
xor
stos
ret
jns
push
pop
in
subb
mov
fimull
cmpsb
mov
js
mulb
stos
and
jae
adc
outsl
dec
ja
js
mov
pop
adc
stos
inc
arpl
adc
pop
jnp
or
ss
nop
pop
mov
add
je
push
cmp
adc
sbb
outsb
xor
out
ds
mov
jno
or
add
cmp
ljmp
push
cmp
and
in
ds
xchg
movsl
push
mov
xchg
cs
xor
and
mov
mov
imul
pop
push
mov
add
mov
add
xchg
out
jecxz
loopne
das
sbb
in
inc
cmp
xor
or
in
xor
adc
in
lret
inc
in
in
push
sbb
insb
unpckhps
lea
mov
fs
xchg
ljmp
enter
jnp
push
sub
dec
insl
repz
cmp
call
in
add
stc
pop
cltd
test
sbb
mov
loopne
daa
imul
lods
lahf
push
add
jno
inc
icebp
dec
loopne
sbb
lds
arpl
add
out
scas
test
or
mov
cs
testl
pop
pop
shlb
add
pop
cmp
jne
in
and
mov
push
movsl
push
rol
pop
push
shll
adc
pop
sbb
sub
gs
in
mov
jo
or
jae
add
scas
mov
xchg
push
sbb
sub
cmp
jmp
cwtl
dec
sbb
sbb
dec
sub
xchg
jns
inc
cmpb
inc
minps
push
loop
std
jp
cmpsb
call
adc
je
and
sbb
dec
xor
loopne
test
dec
ljmp
jecxz
inc
lret
imul
xor
lret
mov
and
push
adc
and
push
sub
addr16
add
cmpsl
and
jle
or
cmp
mov
scas
adc
std
jg
xlat
add
enter
sub
mov
movsb
pop
popa
jecxz
mov
cmpsl
cwtl
in
lods
add
jmp
in
mov
out
fucompp
mov
adc
inc
out
iret
adc
cwtl
or
pushf
add
sub
insl
gs
clc
push
stc
xor
ljmp
inc
mov
mov
inc
pop
fnstcw
xchg
in
daa
fcoml
mov
mov
add
mov
cs
out
clc
or
daa
call
pop
in
inc
xchg
add
clc
push
jb
sbb
pop
mov
jnp
mov
lods
repnz
push
add
cs
push
pop
cmc
rorb
or
inc
arpl
dec
and
xor
push
jno
fistpl
sbb
daa
add
sbb
push
in
sbb
xchg
in
in
mov
leave
faddl
addr16
pop
xchg
mov
in
sbb
mov
shlb
add
push
pop
inc
iret
xchg
mov
xor
sahf
pop
call
insb
dec
aaa
in
nop
xchg
inc
ss
pop
enter
dec
outsl
inc
or
out
insb
xchg
inc
pop
push
cltd
ficoms
or
in
mov
jl
mov
or
mov
inc
test
mov
ds
jecxz
out
mov
shlb
pop
mov
pop
lds
es
mov
or
push
subl
sahf
push
je
dec
icebp
cmp
dec
ret
aam
clc
or
cmp
cmpsb
fs
aas
dec
pop
ror
cmc
fscale
lods
sarl
cli
ljmp
cmp
jg
nop
inc
xorb
pop
call
push
mov
jae
dec
dec
inc
ljmp
dec
addr16
shrl
imull
stos
jge
sbb
push
dec
and
jnp
push
add
jl
lds
cmpsl
test
jo
pop
jecxz
fsubl
push
cli
mov
xor
cmpsl
out
loopne
bound
and
xorb
into
pop
cld
jo
sbb
aad
js
adc
stos
dec
aad
or
adc
jl
cmp
lods
xchg
adc
mov
add
dec
es
push
out
add
int
inc
dec
enter
or
mov
push
push
loop
add
cmp
add
jmp
sub
lret
pop
sbb
rorl
or
push
stc
sbb
and
adc
xor
jns
adc
dec
jl
pop
mov
pop
vpunpckhdq
mov
jmp
out
jne
fs
int
mov
pushf
orl
push
ret
dec
into
pop
cltd
mov
nop
hlt
lahf
xor
or
mov
mov
jecxz
push
add
jecxz
pop
xor
mov
mov
mov
stc
nop
xchg
push
repnz
sbb
or
loop
xor
add
xor
and
cli
and
pop
pop
cmp
push
aaa
jge
dec
push
outsb
cmp
jnp
pop
push
enter
cmp
lock
arpl
push
mov
inc
and
mov
mov
outsl
add
pop
cld
movsb
push
mov
mov
mov
int
bound
dec
xor
stc
mov
pop
into
fidivs
cmp
mov
push
jecxz
stos
test
sbb
mov
outsl
dec
loopne
sub
dec
out
inc
fldenv
push
jp
ret
cmp
popa
lret
bound
cmp
shll
lea
ret
mov
and
icebp
jnp
sti
jle
sub
mov
sub
sbb
add
jl,pt
xchg
sub
add
imul
and
ret
jnp
dec
scas
int3
scas
dec
rorl
cmp
ds
scas
call
add
push
fcoms
fisttpll
gs
mov
add
das
repz
int
movsl
popa
ds
scas
add
hlt
insl
jae
mov
cmp
cmpsl
rolb
push
push
lret
arpl
push
pop
pop
loope
inc
mov
sub
divl
into
in
ss
in
gs
push
sub
sub
bound
xor
lret
and
insb
cs
and
fimuls
dec
adc
xor
cltd
add
ss
aaa
jg
adc
pushf
mov
sbb
sbbl
cwtl
enter
sbb
mov
cmp
dec
pop
addr16
fistl
sbb
inc
in
pop
xchg
push
in
xchg
or
xchg
outsb
shll
dec
xchg
insb
adc
scas
fcomps
aam
data16
leave
mov
xchg
loopne
loop
setge
or
das
push
and
jns
cmc
es
push
rorb
pop
fstpl
mov
pop
jl
arpl
jl
inc
gs
pusha
inc
fnstcw
loop
scas
dec
out
js
movsl
int
inc
je
inc
das
sub
outsl
mov
dec
and
dec
das
lea
cmp
jb
in
inc
xchg
mov
dec
push
pop
daa
inc
add
dec
outsl
cmp
xchg
or
lcall
scas
out
mov
lcall
push
push
dec
jp
shrb
xlat
ss
dec
jmp
gs
dec
loopne
movsl
scas
imul
jb
stos
sub
shl
fs
das
cmp
or
loop
repz
dec
or
andb
pop
mov
mov
cli
repnz
dec
pop
push
sbb
arpl
pop
lahf
in
jo
popa
add
fsubr
pop
push
dec
cmc
out
incl
push
adc
push
and
mov
inc
fdiv
dec
cwtl
dec
add
repnz
rcl
lods
jmp
push
test
or
pop
xor
in
call
cltd
out
test
imul
stos
jnp
mov
mov
cmp
xchg
rcr
cwtl
xchg
and
aaa
fldt
testl
mov
jbe
push
ljmp
stos
fcomip
adc
clc
push
dec
mov
nop
push
mov
dec
push
test
and
pop
mov
scas
xchg
dec
mov
lret
cli
mov
sub
pop
cmp
out
sub
mov
call
sbb
dec
lock
aas
xchg
jno
mov
js
jne
cli
js
pop
subl
popa
das
dec
push
daa
push
fisubrl
jecxz
add
sbb
loope
mov
jne
push
movsl
mov
insb
fadd
cmpl
mov
pop
aad
sti
outsl
sahf
cmpsb
jmp
popf
cmp
cmpsb
sub
imul
scas
aam
and
inc
jecxz
xchg
sub
push
dec
in
test
mov
push
add
sub
pop
mov
shll
addl
nop
sbb
fstps
aas
sub
hlt
pusha
cmp
adc
fs
sbb
sub
in
or
jae
paddq
sub
cmp
ja
jae
push
and
mov
stos
negl
add
stos
arpl
add
loope
jmp
dec
fcmovu
add
pop
sub
push
idivb
dec
lcall
xlat
adc
les
stc
adc
inc
xchg
push
dec
outsl
and
push
inc
movsb
jecxz
sub
adc
ja
adc
repz
mov
lds
mov
jne
out
scas
add
mov
into
xor
into
insl
ret
add
push
not
push
iret
mov
jo
pop
sub
mov
push
in
data16
push
popf
lock
jge
or
mov
pushf
pop
jnp
add
loopne
and
repz
out
out
xchg
push
mov
repz
sbb
dec
or
imul
leave
sub
xchg
dec
aam
xor
fwait
push
out
fisttpll
push
and
iret
int
imul
les
dec
arpl
push
add
cmc
xchg
std
or
or
inc
jecxz
or
ss
jnp
mov
jp
push
fidivrl
out
push
dec
or
repnz
mov
or
xchg
fwait
popf
pop
lahf
dec
jmp
mov
dec
mov
iret
and
xchg
or
sbb
lret
or
and
adc
testb
es
cs
xor
mov
add
popf
mov
jmp
out
xchg
mov
ljmp
and
or
dec
add
fisubrs
out
jnp
or
or
push
std
jl
xchg
popf
bound
addr16
add
subb
sub
insl
es
hlt
sub
cmp
push
scas
lahf
out
xchg
lods
ss
sub
pop
xlat
sbb
filds
js
xchg
mov
cmp
les
pop
push
mov
mov
or
xchg
mov
xchg
loope
fisttps
cmp
dec
xchg
pusha
test
xchg
stos
icebp
arpl
pop
scas
call
push
push
fdivl
dec
sub
and
popf
sub
sbb
mov
out
pushf
or
xchg
pop
mov
fldpi
mov
arpl
shll
and
pop
arpl
scas
xchg
js
mov
fs
push
stos
loop
fprem1
mov
test
iret
adc
test
xlat
xchg
sbb
xchg
pop
fidivrl
push
arpl
adc
in
mov
and
out
cmc
jg
movsb
push
mov
dec
xchg
ret
push
sbb
sbb
xor
cmp
lock
fs
sbb
cmp
pop
js
sub
mov
outsl
loop
popf
adc
or
or
mov
ss
or
xchg
arpl
adc
and
adc
push
mov
mov
pop
outsl
in
iret
adc
mov
ret
hlt
daa
mov
mov
jle
sahf
sub
or
int3
push
or
cmp
push
loopne
xor
aaa
rorl
addr16
and
cmpsl
loop
dec
xlat
adc
in
push
push
rol
pushf
pop
mov
sub
int
pop
mov
stos
jg
jecxz
aam
jge
pop
xchg
arpl
arpl
push
repnz
add
fwait
add
inc
leave
xchg
mov
pop
dec
push
in
push
pop
insb
mov
cld
cmp
pushf
js
or
les
ds
in
mov
cmp
ret
in
pop
pop
and
or
pushf
mov
jnp
sub
aaa
xor
clc
shlb
les
pop
scas
inc
lret
out
cmp
test
out
enter
aam
inc
arpl
test
std
fwait
cld
push
mov
dec
shlb
or
sbb
xor
inc
enter
int3
into
mov
and
cmpsb
mov
jg
jne
pop
aad
in
test
push
xchg
dec
inc
dec
loop
xchg
in
inc
push
lcall
and
xchg
xchg
jg
inc
sbb
or
mov
xchg
pop
hlt
inc
jo
push
xor
pop
bound
xor
mov
add
xor
popa
cltd
das
inc
xor
ret
jns
or
dec
in
scas
push
inc
add
pushf
ja
dec
int
arpl
dec
mov
sub
mov
mov
jnp
bound
jp
mov
bound
xor
dec
test
inc
js
fwait
dec
jl
popa
jns
push
mov
push
xchg
fs
jge
popa
push
cmp
int
cmp
call
idivb
dec
sbb
pop
insb
movsl
jg
outsb
mov
jns
out
fists
js
andb
mov
andb
rclb
xor
ret
fmull
in
push
jo
inc
jae
mov
rcl
xor
std
xchg
movsl
dec
lret
mov
out
std
mov
lods
xor
xor
in
daa
dec
in
int
movsb
mov
subb
xor
push
jb
mull
pop
pop
jp
or
jp
pop
push
push
testb
gs
scas
std
es
hlt
faddp
divb
push
subl
decb
insb
mov
cwtl
fnsave
cmp
inc
lcall
loop
aad
or
outsb
subl
ljmp
dec
idiv
es
outsb
scas
orl
jo
push
int
xor
sti
pop
and
les
mov
and
dec
insl
push
sub
and
xchg
mov
and
xor
mov
xrelease
orb
pop
inc
inc
jo
sti
lods
xor
outsb
stos
mov
cmp
pop
sub
mov
into
es
nop
pop
subl
clc
repz
inc
dec
add
push
jge
out
pop
jle
aad
out
imul
movsb
push
mov
rcrb
cwtl
push
shr
test
roll
sub
imul
dec
mov
ss
or
out
mov
inc
btc
mov
mov
or
jge
push
je
std
push
out
pop
xchg
rcr
divl
mov
push
mov
mov
es
push
mov
mov
aad
mov
sti
jl
inc
shl
jge
mov
push
xchg
dec
je
pop
fadd
push
mov
aad
mov
pop
pop
testb
movsl
sub
repz
das
push
add
insb
jns
xchg
in
addl
push
ror
sti
cmpsb
clc
lret
lret
clc
push
dec
add
push
in
mov
lods
ljmp
mov
roll
mov
sbb
test
adc
jecxz
pop
das
in
push
xor
jp
pop
pop
js
cs
add
sbbl
xlat
sbb
sbb
imul
in
aaa
mov
push
xor
lret
push
pop
int3
jb
xor
xor
push
js
mov
dec
int
dec
dec
rolb
dec
and
stos
inc
imul
cs
rorl
and
or
popf
loop
push
sbb
pop
out
jnp
push
push
dec
lock
mov
mov
mov
ss
hlt
clc
outsl
ror
push
aam
and
cmp
mov
adc
dec
dec
add
mov
xlat
mov
adcl
jmp
mov
mov
inc
inc
xchg
mov
cmp
or
xchg
dec
jge
popf
icebp
testl
shl
clc
mov
pop
xor
or
adc
inc
jecxz
inc
shlb
shll
xchg
movsb
inc
and
jne
mov
loopne
jns
fwait
shl
add
jl
callw
jle
imul
dec
out
inc
jge
das
add
scas
insb
and
cmp
push
test
ljmp
push
rcrl
lods
imul
adc
jmp
sub
dec
pop
nop
dec
jl
jecxz
jl
gs
les
add
test
jno
push
push
fmull
leave
add
and
or
lret
pop
adcl
and
movsb
mov
inc
hlt
jno
inc
or
rolb
or
mov
insb
dec
lahf
jg
test
ja
cmp
pusha
lds
mov
push
lret
aam
mov
sarl
pushf
data16
inc
int
inc
sbb
sub
push
ss
dec
test
loope
int
addr16
aam
push
ret
jg
sbb
std
jae
sub
stos
pop
mov
mov
or
fucomip
dec
daa
mov
fmull
fmul
out
test
sub
stos
lea
push
pop
or
push
ja
xchg
push
cli
adc
add
js
jne
insb
pop
xchg
add
mov
ret
pusha
dec
pop
pop
imul
das
push
lcall
mov
adc
add
pop
adc
js
adc
pop
jecxz
outsl
ds
dec
call
mov
bound
fdivs
cli
in
out
and
popl
jp
imul
aas
sbb
xchg
pushf
push
addb
sbb
addr16
and
popf
dec
or
lock
popa
arpl
jns
cs
adc
fwait
mov
aam
fdivr
push
push
leave
dec
pop
test
mov
stos
jae
cmp
rolb
mov
test
nop
mov
mov
inc
mov
imul
nop
movsb
push
arpl
repz
idivl
pop
mov
pop
lods
xchg
ret
test
lahf
cmpxchg
inc
inc
adc
imul
mov
pop
leave
pop
repz
mov
mov
test
test
lods
sbb
jnp
and
insb
setg
inc
ret
fmulp
inc
push
xchg
pop
jge
cli
push
push
cli
push
dec
jbe
add
jno
or
jmp
sbb
sub
inc
add
sub
gs
jp
adc
js
fwait
iret
repnz
adc
cmp
fiaddl
and
inc
repnz
dec
cmpsl
fwait
ljmp
ljmp
pop
pop
cmc
xor
movsb
bound
gs
adc
mov
test
clc
mov
or
lahf
getsec
mov
outsl
mov
mov
sub
mov
or
lret
int
icebp
xchg
mov
or
pusha
fsubrl
sub
fcoml
jnp
jae
out
cli
mov
jecxz
xchg
enter
mov
call
push
sub
sarl
mov
dec
in
xlat
mov
imull
lea
notl
cltd
dec
pop
mov
adc
es
cmp
aad
xor
pop
imul
insb
ja
xchg
xchg
icebp
pop
sub
jbe
push
push
das
pop
cwtl
lds
push
jecxz
fs
jae,pt
and
call
data16
nop
fnstcw
outsl
dec
push
cmp
dec
repz
loopne
push
jbe
loop
testl
stos
inc
cmc
pop
mov
mov
dec
inc
cmpsl
cmc
addr16
dec
orl
movsb
dec
ss
std
add
xorl
es
push
les
inc
pusha
fsts
jo
dec
test
js
and
cli
cltd
mov
addr16
push
stos
enterw
ja
adc
cmc
mull
sarl
push
sbb
lds
out
inc
mov
aad
mov
mov
out
out
pop
ficoms
xlat
mov
pop
xor
leave
aam
lds
add
dec
cmp
jne
add
and
lods
push
sub
movsb
xorb
in
jmp
es
popa
mov
mov
enter
or
testl
cs
sub
shl
out
out
mov
jmp
rorb
xchg
mov
xchg
dec
cmp
cmp
out
lahf
adc
mov
mov
mov
and
mov
xchg
cltd
mov
ret
ss
xchg
fucomp
push
inc
fs
sti
test
sti
test
push
mov
inc
cmpsl
pop
inc
sbb
lds
movsl
cs
test
sbb
jmp
imull
mov
in
xor
cmp
mov
cmpsl
pop
push
push
or
add
vmwrite
roll
sub
add
out
repz
lock
mov
loope
mov
pop
mov
and
mov
ss
cs
jg
cmp
sub
sub
jb
dec
pop
pusha
iret
imul
mov
jp
es
adc
inc
fwait
mov
loop
pop
push
xchg
leave
stos
shlb
shll
add
adcb
bound
dec
das
push
stos
leave
gs
out
xor
leave
push
and
mov
shr
pop
test
mov
mov
insb
xchg
mov
jmp
cmp
jne
xor
jno
push
xchg
mov
addl
cwtl
int3
xchg
je
dec
mov
es
lods
movsb
ficompl
push
out
jb
push
daa
insl
sbb
mov
lods
sbb
push
arpl
leave
sbb
pop
out
push
scas
je
call
push
sub
inc
or
dec
push
loope
pop
sub
dec
aam
adc
shrl
jp
push
jb
inc
scas
cmpsb
pop
leave
mov
push
mov
repz
hlt
jae
movb
push
outsb
movsb
rorb
sub
into
push
dec
cmp
mov
movsb
hlt
mov
push
xchg
jecxz
icebp
xor
test
mov
mov
les
ss
mov
fwait
in
xor
test
sbb
adc
push
aam
dec
cmpsb
sbb
fistps
int3
jb
sub
lret
rorb
popf
scas
and
push
jl
jne
mov
xor
sahf
insl
flds
fmul
bound
lods
scas
cmpsl
add
outsl
sub
inc
filds
fs
xor
or
or
movsb
xor
sub
lock
imulb
movsl
mov
pop
jge
bound
sbb
lock
adc
adc
lret
cmp
xor
mov
jae
int
mov
sbb
inc
mov
stos
mov
inc
stc
xchg
stc
in
outsb
mov
adc
mov
out
or
jecxz
fsubrp
pusha
mov
mov
or
xor
sbb
fnsave
dec
or
fsubl
sti
fwait
jecxz
ret
inc
sbb
shrb
pusha
add
sub
mov
cmpsb
lods
dec
lock
adc
repnz
dec
push
scas
movb
cmp
shr
cmp
adc
fdivrs
icebp
hlt
jo
pop
push
push
push
and
rorb
js
push
movsl
xchg
or
aam
lods
rclb
out
jmp
push
aaa
movsb
dec
test
mov
arpl
leave
test
push
test
out
mov
lods
pusha
fwait
and
mov
out
sub
mov
and
popl
mov
ds
pop
add
call
push
sub
icebp
repz
test
mov
dec
outsb
xor
xchg
add
stc
dec
or
cs
movsb
and
lods
fdivl
mov
je
sbb
push
mov
das
pop
ds
xlat
test
sbb
mov
cmp
insl
int
lods
adc
adc
fwait
mov
popa
or
jecxz
pop
jecxz
cld
push
sbb
scas
mov
pop
shlb
mov
jge
and
roll
mov
sbb
cmpsb
shll
bound
or
sub
and
mov
xchg
jno
jno
mov
cmp
aaa
add
movsl
pop
cltd
scas
and
push
adc
jmp
sbb
lahf
dec
sti
mov
ret
popa
pop
ret
jns
lods
in
push
mov
movsb
xchg
xor
sbb
mov
dec
xlat
idivb
popf
and
cmp
test
test
and
out
adc
pop
cmp
pop
jmp
jmp
pop
xchg
int3
imul
leave
adc
add
inc
ljmp
push
add
add
lea
inc
push
mov
cs
dec
out
add
imul
push
stos
insl
mov
mov
pop
sub
pop
fs
into
mov
cmc
loope
push
iret
xor
lods
enter
pop
xchg
inc
pop
insl
add
cmp
nop
clc
inc
push
push
xor
popa
xchg
sbb
or
popa
ds
das
dec
scas
cpuid
push
jnp
mov
or
jno
and
or
pusha
mov
xor
xchg
in
scas
inc
xor
pop
out
xchg
mov
sbb
das
or
jns
and
push
test
jge
orb
popa
arpl
iret
and
dec
jne
out
movsb
xor
inc
loope
inc
idivb
cmp
mov
xor
in
leave
outsb
cmp
je
pop
sar
jge
and
icebp
call
hlt
push
mov
bound
andl
cltd
inc
and
inc
cltd
rcl
xchg
das
inc
test
mov
pop
cli
sub
ljmp
mull
das
bound
sbb
popa
scas
js
push
cmpsl
insl
dec
mov
aas
mov
push
dec
xor
sub
outsb
adc
pop
outsl
sub
movsb
fldcw
push
sbb
inc
xorb
cmpsl
xchg
push
xchg
mov
mov
mov
loop
ljmp
rorb
pop
lea
and
sarl
inc
and
and
movsb
mov
dec
inc
inc
sti
mov
mov
xor
adc
mov
cli
xchg
add
cld
loopne
add
arpl
aas
mov
or
inc
ss
pop
aas
adc
xchg
lods
outsl
push
cltd
imul
sub
xchg
lods
xor
gs
mov
mov
fs
sbb
dec
jle
stc
cmpsb
jp
push
repnz
ffreep
push
mov
xchg
mov
mov
mov
mov
mov
enter
xchg
lock
cmp
es
or
mov
aas
pop
lret
sub
cmp
and
cmp
addr16
sub
push
or
xor
pop
aas
dec
test
ret
jae
inc
push
in
add
das
or
dec
push
filds
lret
aas
sub
mov
rcrb
test
add
mov
andl
sbb
push
sbb
lds
xor
mov
in
pop
testl
xor
das
and
dec
iret
pop
adc
orb
int
xor
mov
mov
inc
or
pop
test
xor
loopne
repnz
test
sti
bswap
test
pushf
icebp
enter
lods
imul
rolw
mov
lcall
mov
and
popfw
sbb
movsl
xchg
xchg
cmpsb
scas
push
push
mov
sbb
aas
das
pop
xchg
rorb
dec
mov
xchg
enter
out
lret
jne
xor
dec
aad
sbb
jne
addr16
push
cltd
ja
mov
aam
push
or
mov
mov
add
bound
jne
jae
mov
sbb
loopne
out
out
mov
and
stc
test
push
push
sub
fildl
push
mov
int3
test
ret
subl
xchg
cmp
mov
and
mov
imul
daa
dec
pop
fsts
icebp
fcmovbe
out
and
jl
lahf
push
cmpb
popa
sar
push
cmp
lcall
notl
inc
mov
loop
cmp
ljmp
add
fcompl
ja
scas
push
and
sub
sbb
xchg
fdivrs
popfw
xchg
mov
mov
cli
mov
test
adc
mov
jecxz
dec
lret
cmc
or
sub
dec
mov
aam
inc
mov
lret
dec
pshufw
xor
inc
push
xchg
imul
push
ja
lds
xor
scas
ret
jle
add
cmpl
and
stos
pusha
repnz
ret
adc
rcrl
xchg
mov
and
aam
push
popa
xchg
jns
shlb
fiadds
mov
dec
cmp
dec
out
subb
mov
and
mov
sub
push
stos
sub
cmpb
sub
aaa
jns
shrl
mov
rcll
sub
popf
test
fnstenv
lods
out
repnz
mov
hlt
subl
push
lea
aaa
jle
jecxz
xchg
rol
or
pusha
ss
jg
xchg
arpl
xchg
negl
test
dec
pop
xchg
stos
ja
mov
jp
add
or
dec
sbb
adc
jae
sub
pop
cwtl
dec
iret
imul
cmp
xchg
jge
and
gs
push
adc
jge
sbb
sub
lret
dec
jb
insl
shrb
js
inc
lahf
mov
xchg
dec
out
js
insl
mov
mov
shl
mov
and
ja
push
test
mov
pushf
stos
xchg
in
mov
inc
or
clc
inc
pop
repz
push
in
mov
cmp
mov
or
jb
pop
or
add
leave
movsl
lock
out
xchg
push
ljmp
adc
sub
vpsubusb
lret
lods
fisubrs
lea
in
mov
adcb
movsb
cmp
xchg
inc
jnp
jb
and
sbb
jno
bound
dec
adc
lret
xchg
in
int3
cmp
push
push
subl
out
aad
movsb
mov
push
add
repz
or
pop
cld
imul
xor
inc
daa
out
fwait
js
shlb
push
adc
fsubl
imul
fs
addr16
outsb
xor
pop
loope
and
push
sbb
pop
push
shrl
mov
push
stos
hlt
dec
icebp
jge
lahf
add
push
loope
push
xchg
push
xchg
loopne
mov
lods
jecxz
jo
inc
test
adc
in
out
pop
jo
and
inc
mulps
push
mov
mov
push
inc
repnz
push
lret
ret
cmp
adc
loope
dec
inc
shl
and
dec
push
push
outsl
stc
xchg
sahf
mov
lahf
popl
ss
adc
mov
mov
push
dec
push
and
shl
cmovns
jg
adc
and
test
jg
jns
mov
adc
fistpll
xchg
sahf
rorl
ret
pop
addr16
subl
sub
shll
pushl
sbb
dec
out
mov
xchg
arpl
repnz
and
sbb
xchg
jns
push
xlat
jnp
fdivr
dec
rolb
mov
std
fldenv
in
jnp
xor
xlat
cmp
jno
cmp
int3
cmp
mov
repz
xchg
stos
jnp
leave
pop
imul
xor
rcr
dec
jge
sub
fnstsw
arpl
cltd
xchg
dec
and
es
jecxz
gs
dec
jnp
es
fsubl
fcom
mov
fwait
mov
jp
jmp
push
cwtl
loop
xor
out
notl
xchg
fisttps
jo
ret
test
adcb
addb
and
push
test
sti
mov
or
fstps
xchg
mov
lret
aaa
test
cmp
push
add
addb
and
dec
lret
pusha
fldcw
imul
cld
fistl
xchg
or
aad
cwtl
mov
cmp
fisubs
push
flds
mov
jecxz
jae
and
fsubr
adc
ljmp
rcrl
test
imul
mov
popa
lret
jnp
mov
scas
fdivrs
mov
cmpsb
int
rcrl
das
arpl
xor
ljmp
push
pop
pop
push
jg
xor
jno
pop
jecxz
xchg
jle
repnz
xchg
shrl
imul
jle
cmp
roll
cmp
aaa
mov
inc
add
xchg
push
sub
mov
cmp
in
hlt
jl
lds
and
and
orb
andb
lock
rolb
xchg
ljmp
xor
dec
mov
jns
cmpsb
lahf
cmp
mov
bound
cmp
lret
iret
add
es
sbb
cld
inc
not
adc
mov
jns
sar
cmpsb
or
xchg
cmp
inc
push
mull
or
cwtl
scas
adc
xchg
pop
mov
cmp
inc
popa
dec
scas
push
scas
daa
imul
sbb
jmp
xchg
or
in
leave
xor
cmp
pop
dec
and
lret
stos
into
and
adc
sbb
mov
mov
test
lods
shll
fsubrs
pop
pop
jmp
ljmp
add
andl
dec
dec
repz
es
sub
jl
jecxz
aaa
add
out
mov
cmp
nop
ss
adc
stc
cmpsb
cs
mov
insb
enter
test
mov
aam
dec
pop
cmpsl
xchg
inc
lods
xchg
leave
les
adc
cli
inc
xorps
push
jmp
dec
repnz
cmp
adc
inc
sbb
pop
add
push
loopne
mov
lret
adc
xchg
or
dec
jne
loop
xchg
jl
lods
pop
out
nop
aaa
sbb
dec
mov
dec
push
into
inc
jl
sub
loope
mov
paddsb
xor
js
mov
dec
xlat
push
pop
dec
arpl
pop
add
sub
sub
adcb
dec
fisttpll
enter
or
mov
popa
jge
sub
test
repnz
test
jge
push
lods
cmp
jge
ficoml
call
or
dec
nop
cli
inc
mov
push
out
mov
dec
dec
ja
pop
rorb
and
xor
sar
jg
mov
add
mov
outsl
pop
cmpb
popa
add
mov
xchg
cmp
xchg
incb
xor
mov
lret
dec
addr16
or
dec
and
adc
test
inc
and
clc
aam
or
ficompl
xor
mov
lret
push
jmp
das
xchg
lret
cltd
outsl
ficoms
adc
inc
loopne
nop
int
mov
popf
fnstcw
or
mov
inc
sbb
outsb
nop
fs
arpl
ss
sbb
loop
rorb
pushl
nop
testb
int3
sub
jo
xor
lea
mov
fsts
out
mov
cli
cmp
mov
lret
adc
jbe
incb
mov
pop
lds
inc
repz
mov
out
jge
js
aam
push
sbb
int3
mov
xor
pop
dec
push
sbb
mov
inc
popf
iret
push
ljmp
xorb
pop
and
xor
mov
sub
inc
mov
arpl
add
mov
xchg
adc
xor
out
mov
repnz
iret
push
or
aam
sub
jbe
in
mov
jmp
pushf
ss
inc
push
insb
mov
and
ja
icebp
insb
mov
adc
loope
inc
scas
je
mov
rcl
repnz
xchg
test
arpl
and
mov
shll
mov
sbb
xchg
sbb
add
std
add
add
enter
andb
dec
mov
in
sub
mov
add
mov
loop
movsl
dec
adc
stos
mov
xor
daa
lods
insb
mov
popf
mov
and
dec
mov
mov
shrl
adc
and
xchg
pop
dec
je
rorl
jno
lret
or
shl
sub
pop
cmp
pop
dec
pop
leave
pop
dec
mov
push
stos
xor
aas
add
in
push
mov
add
push
adc
push
push
xor
mov
dec
lret
add
cmp
loopne
icebp
int3
push
shlb
cld
movsl
sti
shlb
jle
mov
fwait
push
jecxz
jb
rcrb
xor
jae
aas
and
pop
sar
fisubrs
lret
jae
sysenter
stc
cmpsl
loop
dec
or
adc
or
int3
mov
adc
dec
dec
scas
fsubrs
out
sbb
iret
rolb
add
xchg
aas
lds
scas
scas
cmpb
sub
data16
clc
add
xchg
imul
push
adc
xchg
cmp
dec
jnp
add
mov
add
imul
sti
lret
cmp
outsl
mov
xchg
mov
sub
xor
inc
and
test
push
and
inc
xchg
adcl
or
not
inc
push
testl
add
mov
mov
test
mov
mov
push
adc
sub
pop
mov
xchg
xchg
pushf
xchg
scas
imul
cs
ja
cld
sbb
roll
jmp
pop
sbb
mov
insl
jno
scas
out
xor
xor
jb
add
push
adc
sub
in
push
in
pop
add
mov
ljmp
mov
jl
xchg
adc
inc
aaa
jecxz
iret
mov
aas
aaa
in
mov
mov
and
xchg
jne
sbb
dec
mov
fcmovbe
outsb
cmpl
pop
push
clc
in
mov
and
mov
ret
fwait
orb
push
int3
hlt
ret
js
xchg
dec
aaa
fidivrs
mov
inc
sahf
mov
mov
push
orb
pop
sub
in
aaa
cwtl
jns
xor
or
movsl
cmp
movsl
scas
hlt
rorl
mov
push
data16
je
out
in
dec
nop
inc
rorl
pop
movl
mov
sub
xor
mov
cmp
fs
data16
and
jl
sub
dec
sub
fldt
jns
cmp
jp
adc
mov
bnd
loope
testb
push
call
xchg
roll
push
push
int
sbb
adc
and
out
aam
sub
or
aas
lds
push
shlb
adc
jmp
out
jnp
mov
pop
movsb
xor
sahf
cmp
outsl
sub
jmp
xor
jl
pop
pusha
or
inc
sub
mov
jnp
jns
push
call
xchg
fs
rcrl
scas
leave
mov
add
bound
dec
dec
pop
mov
jo
in
repnz
rcrb
shlb
mov
arpl
nop
sub
xchg
sti
sub
ja
mov
adc
push
dec
push
jmp
mov
mov
icebp
push
mov
adc
xchg
jecxz
test
pop
and
pop
xor
sbb
in
cwtl
pop
pop
inc
push
jg
stc
jnp
pushf
fs
dec
mov
push
adc
jo
dec
jnp
add
jo
fs
bound
dec
jecxz
dec
scas
mov
and
or
repz
mov
push
scas
inc
std
jg
push
dec
xor
cmp
aas
cli
push
test
mov
loop
cmpl
sbb
mov
push
inc
hlt
mov
fcomip
dec
cmp
cmp
lret
and
aas
aas
mov
sub
iret
stos
push
inc
dec
and
stos
insl
lret
xor
jb
rcrl
out
mov
mov
int3
sub
or
clc
add
fcomps
inc
cmp
cmp
sbb
ja
lret
loop
es
cmc
pop
out
rcl
jecxz
mov
lcall
jmp
addr16
or
xor
xor
in
sub
hlt
orb
mov
sub
out
push
pop
xchg
sbb
xchg
cltd
push
xchg
into
sti
pop
sub
stc
mov
fldcw
pop
int3
loop
popa
lahf
mov
xor
lds
lret
mov
push
adc
jg
and
or
push
ss
add
loope
popf
pop
jne
or
xchg
cmc
xchg
dec
cmpb
negl
das
in
dec
jg
xchg
repz
icebp
enter
lds
cmp
pop
dec
leave
dec
ret
sbb
shlb
pop
lret
fisubl
inc
mov
enter
scas
ljmp
pop
jecxz
test
mov
out
stos
into
and
inc
adc
jp
pop
and
les
pop
sbb
adc
cmp
lods
out
xchg
dec
jle
jae
out
in
inc
test
arpl
add
aas
sbb
pop
and
nop
mov
add
adc
push
pop
mov
int
sub
mov
xchg
jnp
inc
add
mov
sub
mov
ficomps
sub
fwait
repz
ret
mov
inc
jecxz
incb
hlt
aam
mov
loop
xchg
test
fdivrs
jnp
rcll
or
xchg
cli
test
add
pop
jo
orb
jmp
mov
jp
je
data16
sbb
shlb
adc
arpl
inc
inc
mov
inc
stc
jecxz
ja,pn
pop
out
mov
fidivrs
enter
dec
push
jg
scas
pop
push
push
push
inc
vsubps
sbb
sub
dec
push
scas
xchg
mov
mov
enter
add
and
rorb
rcrl
jl
imul
push
shlb
dec
mov
popf
or
aad
add
out
int3
dec
sub
subb
push
xchg
dec
ja
mov
loope
inc
jns
fwait
and
mov
xor
js
xlat
cmc
test
mov
ljmp
xor
adc
xchg
and
fldl
sbb
shl
push
cld
repnz
mov
gs
ljmp
pop
test
push
xor
shr
lcall
or
loope
adc
outsb
dec
inc
roll
int
xor
mov
jae
dec
mov
xchg
push
xchg
push
push
mov
inc
sub
mov
shlb
push
pop
call
movsl
add
pop
mov
lcall
int
aaa
fstpl
mov
imul
mov
aad
push
js
mov
int3
inc
es
call
add
je
cmp
outsl
cmp
mov
jmp
out
insl
leave
shll
pop
cmp
push
leave
inc
sub
addr16
call
sub
inc
stos
movsb
jno
xor
add
pop
pop
pop
imul
jne
scas
js
adc
add
iret
cmpsl
push
sti
xchg
xor
push
gs
xchg
sbb
add
pusha
dec
lret
add
fstp
in
jae
push
push
jmp
clc
nop
aam
jl
sahf
xor
pop
and
push
arpl
shlb
add
movsl
lods
adc
fnsave
push
lds
js
repz
xchg
maskmovq
divl
dec
cmc
addl
push
mov
adc
sahf
in
push
ja
lahf
add
ds
int
add
aam
sbbb
sub
out
das
repz
es
xorl
jecxz
stos
push
dec
sbb
push
fisttps
in
scas
jg
fbstp
jns
cmp
push
fcoml
or
into
pop
jo
clc
push
inc
cmpsb
inc
xor
pop
in
cmpsl
sahf
inc
jp
sbb
ret
mov
lock
lods
fxch
pop
xchg
xor
adc
sbb
dec
push
push
sub
cltd
or
push
add
sbb
jne
adcb
adc
mov
pop
xlat
jnp
insb
add
push
inc
sub
cltd
call
pop
add
sar
scas
dec
arpl
jns
repz
popf
or
aad
jmp
test
push
fisubs
pushf
scas
repnz
dec
push
sub
pusha
pop
add
mov
cmp
outsb
push
repz
stos
mov
mov
or
xchg
jno
call
sti
or
jg
push
pushf
xchg
and
jg
in
movsl
xchg
xchg
sub
aas
rorb
adc
mov
sbbl
jecxz
jg
mov
insb
sbb
mov
push
cli
loop
or
inc
shlb
cmp
adc
sar
rcrl
mov
mov
dec
fwait
dec
jnp
shll
or
adc
stos
sbb
sub
sahf
push
dec
lahf
cmpsl
mov
lret
scas
cld
stos
mov
fdivs
fs
adc
inc
push
jmp
jnp
and
shlb
movzbl
shlb
add
inc
pop
dec
sar
data16
push
enter
push
dec
int
push
cmp
xchg
jmp
jbe
aaa
cmpsb
jne
jnp
xor
dec
flds
xchg
loope
movsl
lods
mov
outsb
arpl
in
hlt
outsl
adc
and
pop
mov
rcl
jns
notl
inc
pop
sbbl
xchg
lret
jg
push
ja
dec
pusha
shrl
and
dec
push
mov
gs
ficomps
sbb
bound
cmp
cmp
push
dec
loop
xchg
rorb
push
pop
pop
test
mov
mov
xor
ja
movsl
shlb
xlat
or
push
loope
imul
sub
ret
lret
cmp
adc
bound
fisttpll
popf
das
and
iret
inc
scas
mov
adc
mov
sbb
and
add
out
mov
sub
pop
mov
dec
cmpb
sbb
push
sub
cmpsb
insl
popf
addb
xor
out
mov
fsts
dec
sarl
xchg
in
scas
sbb
imul
icebp
or
loope
inc
call
or
call
cmc
mov
mov
jmp
xor
cmp
gs
pop
fstl
dec
sbb
outsl
sub
shll
mov
gs
out
arpl
dec
pop
popl
sbb
fsts
test
mov
or
and
scas
bound
insl
adc
lcall
test
orl
adc
sbb
push
add
loop
mov
inc
pusha
push
cs
into
jo
hlt
pop
add
cld
mov
scas
dec
scas
out
mov
adc
dec
xchg
xchg
imul
mov
fstl
mov
jnp
xchg
mov
and
inc
pop
pop
pushf
xor
mov
in
es
push
mov
mov
pop
xor
push
add
leave
xchg
shlb
inc
and
jge
push
neg
call
dec
mov
push
mov
jo
pop
sbb
dec
fwait
ljmp
cmp
les
jns
negl
sbb
stos
adc
int
dec
fmuls
sub
mov
stos
outsl
mov
test
dec
xchg
imul
ljmp
fwait
pop
pop
insb
stos
mulb
push
mov
mov
js
cmp
and
xor
xchg
lea
ljmp
push
dec
pop
lret
inc
mov
shlb
mov
cli
sub
addr16
iret
jae
int3
adc
mov
inc
test
dec
daa
mov
adc
cli
mov
je
jb
adc
movsb
add
mov
scas
mov
dec
stos
mov
movsl
xor
sti
out
sub
and
push
mov
mov
ficoml
mov
jp
jne
sahf
sarl
add
inc
mov
lcall
cwtl
imul
sbb
mov
sbb
shl
and
and
push
test
fld
fucomi
rorl
xchg
and
xor
sbb
sahf
popa
jecxz
das
push
xchg
push
mov
orb
push
push
in
adc
sub
sub
movsl
jno
sub
or
or
rcrl
popa
cmp
repnz
inc
cli
flds
push
lret
jmp
ret
rcrb
or
fnsave
mov
lahf
adcl
fdivp
dec
imul
jecxz
sahf
scas
fnstsw
je
mov
xor
xor
xor
add
adc
insl
sub
xor
aad
cmc
in
aam
mov
imul
incl
rclb
push
fsubl
xorl
icebp
repnz
xchg
inc
push
aam
pop
rolb
clc
xchg
sub
cltd
and
sub
pusha
addr16
xor
push
orb
jno
sahf
cld
pop
jns
orl
dec
adc
push
xor
lds
inc
nop
ds
pop
inc
mov
aas
rolb
cmp
and
add
mov
sbb
inc
mov
inc
nop
imul
mov
or
adc
xchg
js
fcomi
cmc
shrb
in
pop
cld
addl
cmp
cmp
cmpsl
mov
lock
andl
es
push
xchg
sub
mov
in
adc
jo
or
xchg
or
jecxz
loopne
cmp
push
mov
and
mov
lahf
mov
jno
cmp
insl
xchg
jl
push
arpl
pop
in
push
not
or
push
aaa
push
jp
sub
divb
shll
mov
sub
jbe
dec
sbb
dec
pop
and
cmpb
add
jmp
pop
outsl
dec
and
sub
int3
or
dec
push
push
ret
push
ret
shrb
test
icebp
jle
ja
out
pop
out
jecxz
xlat
pushl
jae
pop
jnp
cmp
jb
fistl
cmpsb
xchg
repz
inc
in
xchg
arpl
in
mov
jl
sar
icebp
or
xchg
rcrl
mov
cmp
mov
scas
adc
popf
cs
sahf
or
subl
in
push
jmp
or
mov
push
je
ja
mov
les
sbb
pop
ret
lcall
inc
scas
movsb
sbb
loope
mov
lock
mov
mov
pop
data16
ret
scas
adc
mulb
pop
cmp
cmp
rcll
xor
jmp
jecxz
adc
fisttps
cmp
inc
in
pushf
adcb
sub
jecxz
push
arpl
mov
shr
test
jmp
mov
push
daa
xor
cmp
gs
cmp
sub
lret
cmc
or
sahf
loope
pop
pop
test
incl
icebp
bound
or
mov
mov
xchg
cmp
fildll
inc
xchg
aam
xchg
sub
inc
daa
lret
adcb
mov
jg
mov
pop
pop
je
sub
jmp
push
je
mov
sbb
shrl
push
lret
nop
jno
inc
sub
inc
add
rorl
shll
mov
addb
loope
sub
div
test
dec
xor
int
out
adc
mov
scas
dec
imul
cmp
arpl
cld
xorl
popf
dec
fdivl
into
pusha
xlat
sub
push
arpl
es
mov
dec
push
and
xchg
inc
filds
pop
repnz
cld
ljmp
popf
test
xchg
pop
data16
dec
and
add
add
fadds
outsl
xchg
imul
xchg
sqrtps
and
sbb
or
sahf
add
pop
dec
insl
int
insb
imul
repnz
dec
jnp
xchg
mov
xor
popa
jb
mov
imul
cltd
daa
xlat
pushf
add
cmp
dec
inc
fistpll
aas
shrl
xchg
mov
dec
push
sqrtps
hlt
test
adc
out
sahf
push
sbb
test
aam
add
in
inc
stc
addr16
pop
les
call
out
pop
xlat
mov
addr16
pop
or
jp
pop
push
and
stos
sub
mov
xor
pop
dec
iret
cmp
sbb
fldcw
adc
test
out
pusha
ret
push
test
test
sbbl
mov
xchg
pop
pop
in
jp
xchg
dec
js
push
jns
adc
xchg
out
push
stos
fld1
sbb
jns
and
push
outsl
sti
movsl
jecxz
scas
sub
inc
lods
dec
lea
jmp
dec
mov
int3
mov
into
popa
and
dec
xchg
fistl
xchg
jae
enter
test
in
lahf
push
mov
sbb
stos
push
cmp
xchg
add
cmc
in
js
adc
data16
stos
mov
ljmp
mov
sahf
mov
scas
mov
push
test
pop
cmp
out
push
loop
aad
into
out
mov
jmp
mov
jge
clc
push
pop
lret
add
lock
mov
mov
mov
stos
cmc
add
aam
add
sbb
scas
inc
lea
lock
daa
mov
mov
or
pop
or
dec
mov
out
rcl
push
mov
xor
shll
rcll
imul
dec
arpl
shll
cmp
nop
ljmp
lret
adc
ret
imul
adc
cwtl
mov
jmp
jae
std
aam
leave
mov
popa
test
xor
incb
lock
or
lock
pop
adcl
into
fstps
jnp
dec
test
popf
lahf
xchg
scas
or
sti
xchg
aaa
mov
or
mov
jmp
mull
lods
xchg
imul
dec
mov
pusha
adc
inc
lret
push
dec
xor
mov
mov
imul
or
into
push
rol
jge
repnz
je
test
jae
mov
arpl
xchg
hlt
sbb
loope,pt
mov
ret
sub
dec
mov
adc
push
dec
sbb
pusha
xchg
pop
mov
dec
dec
pop
mov
popa
and
insb
ficoms
movsl
xchg
and
daa
mov
mov
dec
loopne
xchg
mov
mov
cld
mov
out
rclb
pusha
add
mov
daa
sub
mov
push
andl
inc
fcmovu
dec
sub
dec
jg
mov
out
imul
jnp
pop
test
movsl
jns
sub
xchg
mov
shlb
in
in
mov
add
inc
jbe
cltd
insb
mov
lret
mov
mov
arpl
sub
sbb
push
mov
pop
shrl
pop
daa
inc
mov
dec
push
sbb
xchg
mov
xchg
xlat
and
out
rcl
mov
imul
das
test
test
mov
outsb
mov
outsl
movsb
and
sub
ret
arpl
popf
rcll
mov
repz
mov
or
jecxz
ds
jbe
mov
and
mov
das
int3
sub
or
gs
push
loope
pop
mov
inc
xorb
and
stos
add
dec
fisubl
inc
mov
scas
inc
dec
sbb
and
adc
inc
mov
jge
fsubp
jns
inc
adc
fistpll
and
fwait
add
pop
sbb
fnstsw
repz
fcmovnu
pop
jbe
mov
mov
or
dec
in
and
scas
jp
movsb
mov
popf
push
fildll
jo
mov
fmull
popl
cmpsl
push
loopne
inc
addr16
rol
mov
ror
loop
cli
mov
and
add
fcmovnb
xchg
jnp
and
lret
repz
lret
popf
out
test
jg
insl
mov
inc
pop
dec
dec
pop
fptan
pop
push
adc
pop
push
sbb
addr16
mov
stos
rolb
imul
add
std
mov
insl
mov
mov
lret
sub
out
pusha
push
rcl
xor
jmp
mov
lret
je
insl
lret
sbb
mov
mov
clc
xchg
flds
mov
pop
mov
pop
shrb
ficoml
push
filds
int
cmp
xchg
in
mov
jns
mov
stos
ja
insb
inc
mov
test
cmpsl
dec
mov
fsubs
or
pop
pusha
xor
mov
mov
cld
insl
ret
add
or
pop
addl
sarb
mov
in
bound
mov
lods
pop
lahf
cmc
sub
dec
push
mov
and
sbb
cwtl
dec
push
bound
inc
pop
or
sarb
sub
bound
lods
add
or
dec
orb
adc
and
outsl
jecxz
dec
sbb
aas
call
ror
fdivrs
pop
scas
pop
pop
cmc
xor
push
jae
scas
lret
dec
sbb
mov
pop
iret
sub
mov
js
pushf
pop
xchg
cmp
cli
mov
jle
gs
add
xor
jle
pop
outsl
jae
jo
mov
inc
shl
das
clc
test
leave
push
jg
inc
or
cmp
adc
push
cmc
cld
dec
addr16
andb
dec
fldl
add
mov
in
push
xchg
mov
fcoms
scas
ret
stos
jmp
push
and
push
lds
sbb
xchg
jmp
jmp
xor
sub
imul
or
jae
jb
js
cmpsl
popl
xchg
mov
mov
out
popa
bound
sbb
sarb
and
std
mov
daa
jb
xchg
inc
push
adc
jmp
xor
cltd
dec
pop
das
test
rorb
mulb
lock
mov
cmp
rcll
xchg
jge
lods
fcomip
lea
pop
jo
addr16
loop
inc
push
icebp
mov
or
push
clc
ret
mov
sbb
fbstp
js
fdivs
shl
js
scas
stos
das
gs
pushw
out
inc
dec
xchg
push
ja
and
push
dec
jb
test
addr16
bnd
jno
les
dec
push
add
fs
push
push
mov
dec
inc
shll
mov
mov
adc
daa
sahf
inc
test
adc
fsubrp
add
adc
mov
push
adc
andl
in
adc
pop
shl
jecxz
xor
sbb
xor
les
mov
cmp
jmp
cmc
imul
out
mov
mov
mov
dec
addb
pop
cmp
cltd
adc
mov
sbb
sub
jnp
sub
pusha
pop
pusha
cmp
jl
cmc
hlt
mov
pop
dec
jns
cmpb
xlat
add
ret
scas
addr16
xor
mov
std
push
mov
push
hlt
jae
out
loopne
shll
jmp
push
repz
in
cmp
bnd
loopne
dec
pop
rcrl
in
jae
stc
fnsave
sub
inc
cltd
add
jnp
aaa
jo
push
idivl
popl
adc
pop
pop
jge
sar
leave
dec
mull
mov
xor
inc
inc
sub
daa
push
sub
xchg
push
int3
pusha
sbb
stos
pusha
lret
std
cmpsl
gs
shll
icebp
cli
ss
xchg
in
jbe
cmp
or
jae
jb
loope
movsb
fbstp
and
idiv
xor
adc
or
cwtl
adc
mov
mov
xor
and
test
inc
push
inc
and
pop
cmp
loop
addr16
lcall
test
outsl
push
cmp
dec
in
out
lahf
and
sti
and
lds
in
in
loopne
or
mov
and
aas
push
outsb
or
dec
xorb
mov
int
out
dec
mov
cltd
movsb
aas
aad
dec
xchg
je
lock
cmp
rclb
mov
xchg
lds
ror
fists
test
test
ds
or
add
dec
shlb
fcoml
push
divb
lret
loop
pop
repz
test
clc
add
js
loop
push
lock
shr
inc
cmp
jb
lods
and
jl
lock
mov
xchg
js
cmc
popf
dec
jge
sub
std
addr16
mov
pop
hlt
dec
divl
pop
test
dec
sbb
mov
sub
fsubr
test
mul
fidivrs
scas
and
les
stos
pop
push
or
outsl
hlt
mov
loope
sbb
push
jecxz
sbb
mov
dec
lret
lods
sub
aas
cld
lret
jecxz
testl
sbb
rorb
int3
push
shlb
enter
lcall
cmp
aam
dec
arpl
mov
cmp
and
jbe
call
sub
das
inc
lea
repz
repnz
mov
xor
icebp
mulb
xchg
dec
out
lcall
add
inc
mov
jg
sub
jmp
outsl
fists
rolb
add
cmpsl
popa
dec
pop
sub
pop
mov
mov
sbb
sbb
mov
pop
arpl
add
pusha
inc
xor
dec
imul
push
jecxz
jle
mov
or
push
mov
xor
or
sub
sahf
icebp
mov
pop
pop
cmp
js
dec
sbb
loopne
popf
add
push
dec
adc
pop
add
pop
xchg
jle
faddl
clc
sarb
dec
repz
dec
les
outsb
pop
inc
sbb
popa
pop
sbb
test
fwait
cli
fnstsw
outsl
call
xor
jmp
shll
rcrb
mov
adc
jmp
out
sbb
hlt
dec
in
sbb
cli
adc
mov
addr16
add
lret
push
jle
insl
inc
sub
jg
mov
dec
push
mov
cmpsl
cmp
jno
dec
sbb
jle
adc
aad
loop
xchg
and
test
jge
ljmp
add
bound
cmpb
popa
lret
sub
cmp
cwtl
cmp
scas
adc
inc
mov
sti
js
jl
aaa
jb
aam
bound
aaa
sub
rclb
xchg
and
sub
adc
and
jp
out
es
xor
and
arpl
xchg
xchg
pop
movsb
sbb
or
mov
xchg
or
add
dec
or
mov
inc
jle
hlt
aas
loope
rorl
jecxz
mov
repz
sub
jp
in
push
enter
mov
pushf
ljmp
xor
inc
clc
and
or
jo
cmp
or
shr
jl
out
inc
xchg
xlat
sbb
mov
add
mov
push
ja
daa
dec
jnp,pn
mov
adc
or
xchg
outsl
popf
mov
dec
dec
cmp
mov
ja
inc
pop
dec
pop
clc
mov
sub
icebp
mov
or
xor
lcall
sbb
sbb
xchg
loopne
mov
fucomp
push
ss
sub
sahf
test
repnz
mov
icebp
in
insb
popf
mov
inc
mov
dec
mov
out
loope
sub
aad
movsb
rcr
jmp
js
imul
daa
cmp
and
mov
mov
fmuls
dec
push
pop
imul
sub
lret
cmpsl
add
mov
loope
xchg
push
gs
jle
xchg
pop
filds
jo
jecxz
ljmp
sbbb
push
cmp
mov
fstpl
jg
mov
aaa
fldt
push
scas
mov
in
and
adc
lahf
movsb
xchg
sbb
inc
das
outsb
fincstp
fcoms
out
dec
rcl
mov
jo
aad
lcall
cmp
cmp
mov
dec
jb
sbb
jmp
repnz
sub
and
pop
aaa
das
loope
ds
sti
xchg
je
fs
out
xchg
loope
cmc
scas
imul
ret
idivb
addr16
push
sbb
lods
inc
arpl
mov
shrb
cltd
cmpsl
rclb
lret
sub
push
or
mov
out
mov
jle
adc
add
orb
int
adc
icebp
xchg
lret
jg
arpl
aam
mov
fs
mov
dec
mul
xlat
and
push
test
or
aad
subl
out
jg
lret
mov
int
cld
jmp
out
enter
and
xor
lock
mov
push
inc
aas
arpl
popa
leave
mov
pop
lods
ret
jns
mov
mov
dec
enter
xor
or
push
inc
mov
mov
push
dec
clc
lods
adc
arpl
flds
add
add
mov
testl
inc
xchg
dec
aam
mov
test
mov
addl
movsl
mov
leave
loop
aas
cmp
dec
call
sub
inc
iret
add
nop
in
sub
jg
or
out
ljmp
out
ja
mov
loop
mulb
mov
repz
minps
mov
ja
aam
mov
ja
jnp
pop
fbstp
cmpb
pusha
push
lock
pop
sub
adc
out
sarl
and
push
xchg
pop
movsb
sbb
inc
pop
xchg
cmovge
jmp
push
imul
adc
cmp
outsl
fs
movsl
sbb
nop
cmp
pop
test
mov
bound
aaa
dec
rcl
push
fwait
lahf
pop
dec
push
xchg
dec
fnsetpm(287
mov
loop
push
std
lods
xlat
pop
push
mov
ja
hlt
sub
cltd
test
or
pop
or
lcall
mov
jae
or
push
sbb
inc
bound
jl
adc
adc
pop
xor
aad
es
in
jbe
outsb
cmpsl
adc
mov
sub
pop
fwait
adc
movsb
or
jb
jnp
mov
and
cmp
xor
inc
decb
in
inc
cs
addr16
out
xchg
sub
pushf
outsb
mov
mov
cltd
lock
movsb
out
xchg
test
pop
psadbw
hlt
xchg
aam
popf
cli
xor
jp
mov
out
insl
loopne
loope
call
mov
out
mov
jmp
mov
xchg
scas
push
sub
loop
and
repz
mov
into
add
sub
dec
out
insl
fld
cmp
pushf
xor
leave
jns
es
dec
iret
aas
inc
jae
or
mov
cs
pop
dec
ret
into
fwait
dec
jnp
push
push
stos
iret
mov
sahf
ret
decl
addr16
in
pop
mov
dec
mov
ret
add
rcrb
pop
mov
pop
mov
or
cs
sar
movsb
aam
les
pop
dec
ljmp
test
and
in
bound
bound
call
scas
dec
out
imulb
test
and
scas
rcrl
pop
out
mov
cmpsb
arpl
daa
and
mov
xchg
stc
add
mov
dec
push
fsub
and
dec
pop
sub
inc
pop
sbb
pop
adc
xchg
inc
pusha
cmp
adc
out
stos
xlat
xchg
notb
inc
push
into
dec
into
mov
cmpsb
xor
dec
mov
test
cltd
mov
jbe
test
outsl
jge
adc
fisubs
stos
aam
mov
jl
sub
arpl
fwait
mov
gs
or
nop
and
out
cmp
push
subl
movsl
mov
and
sbb
les
in
pop
imul
jg
gs
jo
cld
dec
pop
mov
ds
mov
mov
mov
push
or
iret
repnz
iret
lret
sbb
fucomi
test
mov
pop
dec
aad
gs
xchg
cs
test
in
rcll
lcall
mov
lret
jle
lods
sub
pop
push
pushf
insb
cmc
push
aam
sub
adc
inc
pop
and
pusha
lret
or
or
jmp
adc
push
int3
pop
xor
push
in
dec
outsl
stos
inc
stos
dec
add
lods
repz
sbb
cltd
sub
out
mov
or
and
jmp
jnp
pop
push
inc
jecxz
lods
xlat
mov
arpl
push
lods
sbb
mov
out
mov
xor
pop
jge
mov
loope
aas
mov
add
cli
add
jmp
adc
nop
pop
mov
pop
loope
dec
or
comiss
sti
ficoml
int3
xorl
inc
out
dec
mov
loop
cmp
mov
pop
mov
xchg
call
das
mov
popf
mov
sahf
leave
sbb
mov
jecxz
sbb
or
dec
sub
rcrl
and
fisubs
cmp
mov
mov
cmpl
bnd
das
and
inc
pop
scas
mov
icebp
outsl
push
dec
shll
push
vmwrite
fs
xchg
lods
sub
sbb
cmp
repz
xchg
adcl
pop
sub
ja
cs
jmp
scas
and
jl
cmp
sbb
pop
insl
push
icebp
jge
sub
sub
insl
int3
cmova
out
sbb
jne
dec
outsl
sub
jo
jo
cs
imul
dec
enter
mov
movl
ffreep
push
int
push
rorl
inc
neg
push
cld
push
mov
mov
add
dec
adc
pop
jg
mov
sbb
push
dec
sti
imul
lds
add
pop
stc
aas
jecxz
mov
dec
ret
sbb
cmpsb
dec
push
sbb
sbb
in
sbb
ret
xchg
fwait
push
scas
je
cmp
imul
rolb
sbb
or
das
and
sub
repnz
sti
repz
sbb
jmp
loopne
sub
stos
pop
ret
inc
xor
sbb
dec
push
popa
mov
push
je
jae
inc
sbb
outsl
pushf
stos
adc
inc
xorl
imul
jnp
pop
jp
lods
dec
sbb
fstps
fxch
cmp
subl
xor
adc
call
hlt
lock
cmpl
add
daa
flds
push
scas
pop
sti
push
call
pop
mov
and
jno
cmp
lcall
mov
mov
imul
jae
sub
das
jp
push
daa
shl
test
cmp
jno
inc
int3
sub
xor
lds
pop
and
and
dec
sub
sti
popf
xor
repz
loope
dec
icebp
mov
jecxz
arpl
or
xchg
cld
jb
xchg
test
sub
cmpsl
jp
push
mov
cmp
das
mov
call
dec
cwtl
and
test
je
loop
aad
call
ret
adc
jge
in
jecxz
movsb
dec
add
test
orl
loop
mov
sub
test
shlb
test
gs
jo
or
leave
adc
pop
sbb
xchg
dec
call
in
dec
popa
mov
mov
mov
sub
sbb
arpl
mov
jecxz
jmp
cmc
pop
sbb
sub
dec
xchg
test
das
mov
xchg
dec
add
add
jnp
or
jmp
inc
pop
les
incl
aam
sub
push
pop
push
mov
cmp
outsl
push
cs
jmp
jmp
fstpt
push
and
sub
xchg
shrl
hlt
dec
test
jp
mov
arpl
int
fs
push
jecxz
sub
xchg
jnp
das
int3
repz
jp
mov
arpl
sbb
pop
dec
jae
jbe
or
enter
enter
xor
sbb
xlat
in
pop
fucom
rorb
mov
jecxz
inc
dec
dec
xchg
mov
ja
jecxz
cmpsl
fldl
mov
sbb
addr16
mov
loopne
dec
divl
fmull
mov
mov
mov
imul
xlat
pop
in
and
ret
mov
xor
fs
out
out
push
inc
cmpsl
call
adc
cmp
int3
add
sub
adc
inc
push
repnz
lods
dec
mov
fcoml
sbb
cli
in
xchg
stos
stos
insl
lods
mov
and
into
push
mov
xor
mov
sbb
jno
out
mov
in
orl
adc
test
sbb
pop
adc
in
pop
push
lods
cltd
int3
pop
sbb
or
adc
sub
dec
aam
gs
or
cmp
adc
cmpsl
sub
lret
inc
adc
add
inc
arpl
push
mov
mov
add
in
shlb
push
enter
cld
and
aaa
test
loop
jp
scas
enter
inc
jle
mov
lret
xchg
insb
iret
lahf
aad
lahf
jae
hlt
or
dec
cmc
sub
and
xor
adc
pop
dec
push
push
call
fbld
sub
imul
sbb
or
adc
faddl
xor
mov
adc
bnd
jbe
stc
xor
push
scas
ret
mov
push
popa
ja
rcl
das
dec
test
prefetch
or
lret
mov
into
lcall
xchg
icebp
pop
mov
aam
or
sub
or
ja
cmc
pop
mov
sbbl
xor
dec
push
jg
jbe
dec
daa
pop
das
rol
mov
cmp
xchg
inc
fwait
incl
les
lods
xlat
mov
sahf
mov
lcall
pop
imul
bound
shl
cltd
mov
xor
gs
mov
push
adc
das
lds
outsb
xchg
mov
aam
push
jae
mov
adc
enter
daa
xor
test
dec
aad
jno
jecxz
int3
xchg
jo
loope
insb
mov
jnp
add
and
nop
jecxz
jmp
xor
cmp
out
adc
jg
mov
push
pop
fnsave
push
enter
add
and
dec
arpl
mov
enter
divl
subb
popa
adc
and
lods
or
xor
or
and
jb
sti
divb
jp
stc
test
inc
jmp
stos
xchg
test
popa
cmp
push
popa
adc
push
dec
inc
adc
dec
leave
shll
outsl
aad
dec
sti
adc
imul
and
inc
fcoml
test
cmp
pusha
or
std
fidivs
mov
int
pop
lcall
into
sbb
sti
das
in
lret
xchg
push
lock
sti
jl
xchg
jle
or
das
sbb
jmp
cmpsb
lret
test
stos
cmp
fnsave
add
sub
dec
xchg
cmp
mov
hlt
mov
jmp
cld
loop
or
cld
repz
mov
push
cli
mov
cmpsl
adc
ret
xchg
pop
scas
lret
cltd
sub
inc
add
mov
mov
sub
sbbb
inc
pushf
jae
mov
cwtl
inc
fs
das
push
arpl
cwtl
mov
sbb
xor
pop
mov
and
push
scas
pop
pop
mov
mov
adc
loope
and
add
cli
stos
fsubs
mov
fs
js
mov
dec
shll
cmp
cmp
std
xorb
mov
mov
lds
add
enter
dec
dec
push
jecxz
inc
push
and
lahf
mov
dec
fadd
xchg
mov
outsb
xorl
xchg
sub
mov
lods
fst
xchg
cli
inc
pop
fwait
cs
lods
lea
cmpsb
lret
adc
xchg
pop
mov
pop
mov
arpl
scas
adc
outsl
ja
or
dec
dec
or
mov
out
cmp
sbb
out
or
cmp
data16
jmp
in
test
push
and
dec
les
cs
mov
data16
aad
inc
addr16
mov
mov
addb
dec
inc
inc
jno
test
out
imul
xor
push
pop
mov
pop
test
pop
ja
and
ret
pushf
int
rorl
outsl
xchg
pusha
mov
rclb
dec
test
clc
stos
xchg
in
or
mov
inc
ret
fwait
idivl
push
sub
xchg
test
mov
adc
cmp
mov
and
shr
push
xchg
sub
pop
cs
mov
cmpsb
popa
out
pop
mov
scas
cli
orb
fs
lods
mov
dec
jo
mov
pop
push
xchg
inc
push
pop
dec
push
jge
cwtl
pop
inc
push
imul
jle
push
push
movsb
push
cs
pop
cwtl
outsl
daa
or
add
dec
gs
push
js
add
imul
jns
daa
add
jne,pn
mov
xchg
xchg
jp,pt
adc
inc
clc
or
mov
outsb
sub
ja
pop
mov
inc
jne
dec
cmp
inc
cs
and
insb
fnstsw
adc
sti
lds
ss
stos
sub
andb
popl
das
inc
bound
jbe
ljmp
push
das
inc
cmp
stos
pop
xor
mov
int
fdiv
fisubrs
decb
xor
insl
cwtl
inc
inc
sbb
xlat
pop
mov
sbb
cmpsl
pop
lods
sbb
pusha
dec
out
int3
in
lahf
mov
xchg
add
push
jbe
adc
xchg
mov
int
adc
out
cli
add
xchg
push
lcall
inc
jnp
dec
inc
dec
push
push
lock
aaa
cmpsl
rclb
jae
loopne
pop
cmp
pop
loop
ja
sub
mov
xchg
push
dec
lock
inc
das
jecxz
sub
mov
mov
push
je
mov
std
xor
jb
in
pop
push
movsb
sbb
dec
sbb
mov
pop
inc
sbb
daa
add
mov
cmpsb
scas
bound
roll
test
imul
mov
jbe
sub
pop
sti
scas
and
sub
cltd
push
jns
pusha
daa
push
cwtl
idivb
ficoml
inc
gs
jge
jb
adc
cld
inc
pop
adc
test
das
add
loop
or
popa
xor
pushf
mull
pop
jecxz
and
ret
xchg
call
das
cld
cli
fnstenv
pop
push
cli
dec
fstps
xchg
dec
cmpsb
scas
fildl
imul
push
inc
shlb
test
mov
fiaddl
addl
stos
sbb
lret
xor
addb
dec
or
mov
ja
push
lds
adc
and
adc
or
xchg
ret
imul
movsl
adc
or
idivb
loopne
shrl
sub
xor
sbb
aas
mov
ja
fwait
xchg
orl
sub
imul
dec
inc
xorl
testl
xor
mov
pop
out
ret
ljmp
xlat
sbb
dec
orb
in
fcmovne
inc
add
js
sahf
xor
dec
push
pop
jecxz
adc
jne
mov
nop
pop
js
adc
insl
shrl
ficomps
jb
outsb
and
cmp
mov
in
dec
leave
aaa
jbe
pop
rcr
cs
xchg
or
iret
fisttpl
leave
sub
mov
push
mov
shlb
and
hlt
int
pop
mov
sbb
inc
sbb
xor
and
out
lods
std
adc
test
dec
or
out
gs
in
aaa
push
adc
mov
movsl
jno
cmpsl
dec
sub
enter
mov
pushf
cmpl
fisttpll
jbe
dec
pushf
or
es
sbb
xor
adc
push
cmpsb
add
rcrl
mov
sbb
cmp
xchg
shl
sub
in
push
xor
pop
fldenv
jle
aas
inc
pop
mov
mov
imul
fbld
sti
lahf
test
das
xchg
add
clc
mov
popa
jnp
jp
shlb
mov
subb
or
dec
xlat
js
into
push
movsl
data16
lds
dec
adcb
mov
idiv
cmp
ret
repz
popa
inc
lea
xor
in
cmp
mov
inc
mov
in
pop
popa
loope
dec
adc
sbb
call
xchg
inc
jl
dec
dec
inc
mov
inc
mov
dec
mov
add
add
addr16
xor
rclb
cli
fdivrs
insb
push
mov
cli
sbb
jbe
sbb
cmp
imul
and
mov
push
jge
popa
jnp
adc
js
adc
shll
sbb
test
dec
add
mov
pop
in
leave
fistl
lock
lret
shrl
insl
lds
jo
cmc
sbb
out
inc
jge
sub
mov
inc
xchg
cwtl
flds
inc
adc
fs
daa
in
jmp
push
add
and
pop
rclb
pop
fcmove
pop
stos
mov
xchg
or
frstor
mov
jb
dec
mov
inc
xlat
mov
mov
sub
movsb
jle
or
push
jg
scas
dec
inc
fwait
movsb
ss
jb
out
popf
pop
mov
out
psubsb
push
jo
jnp
andl
data16
inc
pop
xorl
scas
dec
push
leave
iret
jge
add
cmp
mov
push
add
mov
and
lods
or
adc
mov
jno
mov
dec
pop
inc
inc
xchg
movsb
xchg
das
pop
xchg
cmp
cs
xchg
dec
xchg
push
popa
into
xor
enter
sbb
loope
lods
bound
or
jnp
mov
test
je
add
push
inc
pmaddwd
dec
adc
xchg
aam
roll
sbb
push
jg
xchg
test
push
pop
xchg
movsl
push
imul
cli
jnp
sahf
or
push
adc
clc
xchg
xchg
or
movsb
mov
enter
or
aad
inc
rorb
fs
xchg
fsubrl
dec
mov
scas
xchg
pushf
adc
int
int
repz
xlat
add
push
xor
xor
das
shrb
mov
scas
movsb
mov
gs
add
scas
lock
sub
faddp
sub
inc
mov
lock
sbb
and
js
jbe
aad
popl
sbb
xor
imul
jnp
dec
cmpl
mov
pop
imull
loop
test
mov
test
jmp
fcompl
lock
divl
repnz
orb
test
popw
inc
int3
lcall
adc
dec
inc
jb
add
push
sbb
xor
ja
ret
bound
xor
divl
gs
daa
popf
adc
mov
bound
pop
ret
leave
adc
xchg
sbb
or
je
test
mov
cmp
shl
mov
inc
pop
ret
ljmp
scas
mov
and
push
insl
add
push
push
jg
shlb
mov
sub
pop
push
mov
dec
jg
mov
out
adc
stos
cltd
mov
popf
push
ljmp
ds
mov
lcall
push
mulb
push
cmp
dec
adc
push
cmp
inc
call
arpl
or
inc
cld
lock
lods
daa
orl
dec
es
xchg
jge
adc
pop
mov
cltd
xor
ljmp
mov
push
lock
jb
jbe
into
inc
lods
bound
into
arpl
fimuls
repnz
jbe
mov
push
mov
sub
loop
ja
std
js
xlat
es
addl
jae
adc
mov
jp
adc
adc
icebp
pushf
xchg
scas
mov
sub
xchg
xchg
leave
jp
pop
xor
loope
lret
in
mov
and
xorl
jnp
test
daa
jnp
test
cli
jo
xor
pop
mov
lods
sub
movsb
incb
fwait
icebp
aas
mov
jbe
lahf
shrl
sar
fisubrl
add
fisttpll
pop
inc
lods
gs
lods
push
jb
andl
imul
pop
mov
bound
popf
sti
mov
jo
test
inc
cmpsb
jmp
or
mov
adc
lds
rcrb
test
inc
xchg
pop
or
sbb
scas
sub
or
dec
stos
fstpl
add
and
sbb
pop
push
dec
sar
adc
aad
dec
sub
out
sbb
xchg
fisttpll
sar
dec
and
dec
adc
cmp
pop
cli
sub
sbb
or
add
cltd
mov
or
cmp
xchg
add
dec
or
call
xchg
adc
mov
dec
or
fbld
loop
adc
es
dec
xor
stos
sbb
mov
mov
jmp
pop
jg
lcall
mov
adc
pushf
je
dec
cmpsl
js
add
cmp
std
ja
subb
pop
jb
fistpll
shrl
data16
cmp
mov
pop
int3
nop
sbb
je
aam
jle
or
movsb
add
or
arpl
rcrl
xchg
push
jl
out
pop
ficompl
pop
jb
pop
lret
ret
je
jne
fs
sub
jg
stos
shrb
aaa
xlat
shlb
sti
dec
decb
aam
mov
push
inc
xor
fldcw
mov
imul
sbb
adc
fdivs
leave
mov
call
mov
inc
repnz
cmp
aad
lods
inc
lea
test
inc
iret
mov
sub
xchg
arpl
dec
mov
push
adc
aaa
inc
xor
lahf
add
and
and
xchg
and
push
push
adc
icebp
pop
out
sub
addb
xor
mov
dec
pop
ss
call
and
dec
mov
mov
jmp
jnp
xor
mov
pop
mov
xchg
cmp
jp
ljmp
inc
pop
or
js
cmp
inc
push
dec
lods
mov
js
scas
es
imul
lods
or
mov
out
test
pop
lret
xchg
fcmovu
jl
adc
jno
lds
test
sbb
mov
or
pop
das
mov
dec
lret
cmp
push
out
mov
filds
cli
add
dec
movsb
mov
cmp
sbbl
dec
js
dec
inc
lds
test
shlb
movsb
popa
das
xor
adc
mov
test
mov
leave
sbb
inc
xor
jno
repz
and
fdivr
xchg
mov
gs
mov
pop
lea
ja
addr16
or
mov
int3
xor
ja
out
inc
inc
out
insb
je
fwait
jbe
push
jecxz
roll
in
xor
push
jmp
adc
aas
push
and
mov
out
jecxz
dec
adc
lea
cmpb
mov
in
imul
sbb
pop
in
popa
adc
rclb
fs
add
dec
add
dec
movsb
push
xor
in
gs
jecxz
popl
addl
or
ret
mov
or
adc
arpl
jb
imul
sahf
inc
sub
push
jmp
or
imul
nop
and
push
neg
iret
jge
cmc
adc
jp
and
and
out
shl
movsl
repnz
ljmp
ja
sub
dec
or
inc
pop
sub
incl
pop
mov
dec
jns
call
flds
xor
loope
clc
push
add
pop
sar
mov
cmp
daa
stos
push
ffree
pop
insb
arpl
push
jecxz
test
inc
insb
sbb
cmc
sub
out
sarb
daa
outsl
fcomps
add
imul
pop
fxch
add
pop
adc
pop
scas
xor
or
inc
stos
fiaddl
jmp
cmp
xchg
or
arpl
hlt
mov
mov
or
movsl
pop
in
sub
add
cmpl
jne
pop
pop
jnp
or
jg
enter
aaa
mov
mov
inc
dec
lods
or
add
mov
cmp
sub
in
dec
stos
lods
pop
in
pop
lcallw
mov
loope
inc
xor
push
out
jnp
pop
dec
add
sub
adc
jg
sahf
dec
mov
cmpsl
lods
mov
inc
dec
das
pop
fiadds
cmp
adc
adc
cmp
test
cmpsb
leave
outsb
lock
hlt
insl
js
mov
adc
xchg
mov
addr16
xchg
adc
jb
add
js
fbld
push
sub
and
rcrb
push
mov
outsb
andl
rcll
icebp
push
dec
ds
xor
mov
mov
cmp
imul
data16
mov
sbb
mov
jne
daa
mov
xor
jge
and
repnz
lods
int3
scas
imul
and
fildll
sub
adc
fistps
pusha
ret
fs
insb
lcall
mov
js
aad
movsl
scas
inc
push
and
in
dec
xor
sarl
out
out
stos
in
dec
jecxz
xchg
jb
mov
sbb
les
sbb
push
mov
popa
push
push
mov
mov
add
or
and
push
fsubl
and
push
aam
addl
sub
loop
and
insb
adc
dec
and
push
adc
pop
mov
sbb
in
adcb
imul
inc
sbb
insl
inc
test
pop
sti
mov
sbb
daa
inc
insb
mov
jo
ja
mov
cmp
je
sbb
bound
bound
mov
dec
cmp
or
mov
decb
lahf
push
sub
sbb
pop
addr16
push
test
pop
cmpsb
jge
push
adc
jmp
pop
cmpsb
jp
ficompl
sahf
inc
or
dec
ljmp
addr16
mov
inc
loopne
mov
dec
mov
sbb
orb
dec
sbb
outsl
push
scas
popa
push
iret
out
and
jp
adc
pop
fiaddl
and
rcrl
sub
inc
adc
xchg
data16
roll
lahf
mov
push
lock
arpl
divl
push
icebp
lret
hlt
hlt
sbb
rcll
test
xchg
out
pop
mov
jb
push
push
push
and
sub
mov
mov
inc
rorl
sbb
inc
cmpb
push
mov
cmp
aam
in
imul
mov
xchg
push
lahf
shll
mov
in
loope
lods
enter
out
lods
jno
xchg
cmpb
rorl
cwtl
push
dec
pop
add
dec
xchg
cmp
xchg
shlb
fnstsw
sbb
pop
int
insl
das
fs
jge
or
push
add
test
ret
sbbl
pop
cs
aam
int3
pop
cmc
pop
sbb
pop
movb
mov
lret
sub
arpl
aas
repnz
dec
sub
outsl
cltd
push
outsb
cmp
sbb
lret
scas
dec
adcl
sbb
subb
adc
cs
push
in
sbb
cld
fildll
jecxz
mov
movsb
jmp
xor
std
loop
pusha
ja
or
sbb
adc
lahf
dec
push
and
scas
sbb
xor
pop
dec
inc
fcmovnbe
stos
add
mov
add
jp
das
pop
outsb
pushf
mov
pop
xchg
sub
movsl
not
lret
dec
or
stos
adc
cwtl
mov
mov
cwtl
push
das
lret
sub
add
fs
fcompl
clc
cmpsl
leave
fs
sbb
std
cld
sbb
xor
jge
add
cmpb
fldcw
adc
fcmovu
or
push
sub
insl
push
jns
jno
lods
leave
and
repz
inc
pop
pop
out
sub
sub
jns
insl
and
dec
shrb
push
push
fs
ds
adc
jae
xchg
xor
jb
leave
jecxz
shlb
stos
and
lods
xchg
mov
mov
pop
sub
jp
jge
mov
divl
xchg
jmp
test
cmpsb
nop
push
dec
jge
inc
mov
lds
xchg
cmp
shrb
sti
in
inc
adc
and
imul
jecxz
loope
mov
pop
add
inc
cmp
mov
data16
mov
pop
jo
rcr
inc
adc
jns
bound
mov
test
xchg
mov
mov
dec
divl
fimuls
inc
idivb
inc
scas
or
and
mov
movsb
out
daa
insl
xchg
sub
push
repz
ja
insl
and
push
scas
sbb
imul
in
xlat
sub
xchg
add
ja
or
insl
dec
stc
push
mov
filds
rol
js
dec
insb
pop
in
push
adc
sub
push
inc
stos
outsl
or
cs
pop
mov
mov
test
or
mov
mov
cwtl
cltd
cmp
and
test
outsl
pop
js
jb
mov
xchg
push
pushl
fxtract
je
xor
je
jb
and
icebp
xor
dec
cmp
xchg
cmp
js
repz
pop
jne
jbe
pop
jns
pop
jns
sbbb
mov
and
lea
push
cmp
cmc
jns
mov
pop
mov
dec
adc
jns
xchg
lods
je
sahf
movsb
sbb
mov
dec
push
lods
out
mov
mov
xchg
pop
jae
gs
aas
pushf
xor
cwtl
addr16
inc
mov
stos
mov
addr16
and
out
add
cs
mov
inc
arpl
hlt
inc
arpl
lea
fwait
mov
insl
jnp
pusha
ja
jecxz
cmpsb
rcrl
shlb
test
test
gs
jne
mov
push
push
enter
pop
jns
shlb
sbb
in
pusha
cmp
push
jbe
adc
push
or
idiv
fwait
add
shl
mov
push
call
jg
mov
cmc
sarl
or
jmp
in
add
lock
scas
push
aad
mov
mov
dec
lret
movsl
mov
js
mov
xchg
xchg
xchg
push
jns
sub
jle
imul
jno
repnz
daa
sbb
adc
pop
mov
mov
pop
mov
xchg
pop
movsb
arpl
in
mov
sub
das
ss
lret
inc
outsl
fimull
lahf
leave
cmc
mov
or
das
add
imul
cmp
dec
add
pop
or
mov
sbb
mov
cmp
push
dec
fstps
rolb
rorb
sbb
cli
ds
push
xor
ja
icebp
call
hlt
fiaddl
dec
jg
mov
mov
fs
pushf
lret
and
xor
or
loopew
inc
iret
jo
das
push
into
in
fwait
es
add
popa
arpl
dec
iret
icebp
pusha
fidivrs
mov
addr16
adc
ss
xor
rcrb
fsubl
imul
jae
xchg
push
dec
insl
lahf
stos
add
xor
popf
sub
out
aas
mov
call
adc
and
push
adc
mov
repnz
mov
shll
and
test
cmc
inc
lret
sbb
push
jb
movsl
leave
jg
and
pop
outsb
sub
adcb
mov
push
mov
outsb
jl
add
or
jmp
adc
outsl
in
lret
bound
outsl
pop
and
jg
out
sbb
mov
inc
xor
stos
aad
fisubrs
inc
je
stos
sub
adc
sti
mov
cli
add
xorl
stc
jle
mov
push
mov
test
fsubrs
lods
cmp
jno
xchg
sbb
ret
ret
jecxz
cmp
mov
stos
imul
movsl
mov
mov
and
sahf
bound
ficoml
ljmp
pop
aaa
scas
sbb
add
sub
movsl
int
push
lods
push
xor
lcall
pop
arpl
xor
push
xor
jb
xchg
push
pop
jno
psubusw
mov
push
dec
mov
adc
es
cwtl
leave
in
ret
ja
jg
dec
add
subb
dec
jmp
add
and
pop
dec
arpl
int3
insb
lcall
cli
push
ljmp
pusha
fucom
add
push
js
addr16
xchg
cs
je
cwtl
jl
mov
addb
ja
push
ja
pop
int
pop
ja
push
sub
add
push
js
pop
adc
adc
gs
into
leave
hlt
add
cmp
inc
inc
ret
cmp
xchg
jg
lret
aam
mov
imul
xchg
mov
cmp
xchg
sbb
sbb
sub
add
fadd
int3
stos
push
inc
test
ljmp
push
rcrb
and
outsl
mov
cmpsl
mov
stos
push
lods
aas
pop
sub
and
xchg
adc
addb
pop
jne
scas
pop
mov
rcll
out
cld
and
inc
outsb
test
lock
in
idiv
and
rclb
out
mov
pop
js
push
jb
fwait
cld
jno
aas
inc
sub
mov
dec
push
rolb
push
testl
cs
dec
jp
int3
inc
cmc
popf
lods
pushf
or
mov
inc
das
or
cmp
arpl
jg
shll
jo
andb
rorl
movl
bound
mov
mov
fidivrl
mov
loop
ret
cli
js
mov
add
lds
inc
and
or
cmp
and
shr
leave
or
xchg
mov
insb
imul
scas
es
in
lcall
adc
loop
mov
adc
cmp
pop
imul
orb
dec
xchg
xchg
jg
xor
sbb
push
sbb
xchg
mov
in
insb
adc
add
push
aam
and
movsl
inc
cmp
and
rorb
inc
dec
sub
add
cs
dec
pop
sbb
aam
mov
dec
loope
pusha
fcmove
lret
call
ss
daa
cmp
ret
xchg
test
xchg
jo
pop
xchg
dec
pop
inc
dec
orl
jg
dec
pop
dec
adc
pop
shl
aad
sub
arpl
mov
sbb
cltd
cmp
bound
in
pop
subl
cmp
pop
and
jo
pop
add
mov
fcoml
mov
icebp
jle
cmp
sub
or
loopne
dec
inc
rorb
aaa
ret
mov
push
movsb
dec
sbb
mov
popa
adc
call
popf
les
iret
cmp
mov
mov
inc
ret
sub
std
mov
inc
pop
loope
or
pop
idivb
insb
arpl
pop
jecxz
mov
leave
pop
lods
dec
mov
and
sub
mov
cltd
ljmp
and
cmp
int3
mov
pop
pop
lds
daa
and
pop
mov
in
mov
mov
shr
leave
in
fisttps
mov
cmp
mov
aas
lods
movsl
or
stc
push
and
fldenv
arpl
popa
dec
pushaw
rcll
loope
test
ret
cmp
testl
stc
fadds
add
mov
xchg
cmpb
cmp
repnz
inc
xor
pusha
in
pop
aad
push
fdivr
pop
loopne
jne
aas
fiadds
test
adc
bound
mov
jno
cmc
imul
mov
and
mov
clc
and
sbb
cli
lret
rclb
xor
scas
lods
and
adc
out
pop
sub
popf
cmpl
arpl
ljmp
lahf
jbe
inc
aas
inc
addb
cltd
add
gs
push
shl
sub
loope
adc
bound
add
rcrb
insl
mov
js
cmp
inc
mov
daa
test
call
int
mov
lret
out
call
lea
jns
out
or
sbb
jno
mov
movsb
dec
int3
mov
xchg
push
adc
adc
loopne
addb
xor
jg
xchg
adc
test
inc
sub
pop
cmp
jecxz
cmpsl
in
shrl
fwait
jge
arpl
int3
push
sbb
scas
dec
sub
add
jl
inc
mov
bound
xchg
fldt
sbb
mov
sbb
or
xchg
jne
call
xchg
xchg
xor
xchg
fimuls
xchg
mov
xchg
jo
outsb
aam
inc
in
push
inc
add
insl
mov
sub
push
aad
bound
inc
jb
les
popa
pusha
das
sbb
jp
imull
push
sarl
jbe
cmp
sub
mov
lock
scas
clc
dec
fmulp
dec
adc
lret
pop
les
arpl
mov
leave
rol
adc
or
pop
cmp
scas
push
mov
push
mov
cmp
jg
add
mov
inc
cli
sbbl
inc
icebp
pop
sarl
mov
mov
daa
push
add
push
push
andb
and
xor
pop
ljmp
repz
fadds
aas
xchg
pop
jae
rcl
cmc
insl
aad
add
pop
sub
inc
ds
sbb
out
mov
hlt
mov
rorl
sub
outsb
and
push
jno
jne
mov
push
cmpb
dec
mov
outsl
push
push
outsb
adc
xchg
hlt
dec
and
bound
xor
pop
pushaw
jge
sbb
cmp
sub
and
add
cmp
test
dec
cmpsb
add
xor
gs
pop
jl
inc
xchg
scas
fs
fimull
adc
jns
stos
pusha
scas
mov
addr16
xchg
loopne
inc
imull
outsb
mov
xchg
xlat
or
xor
dec
movsb
or
push
jle
loope
or
cld
inc
out
mov
sbb
mov
dec
pcmpeqw
lret
and
scas
insl
dec
and
mov
fisubl
jge
lea
and
dec
xchg
lds
cwtl
cmp
push
mov
xchg
lcall
sbb
mov
aaa
dec
sub
pushf
sbb
cmpsb
dec
fcom
mov
dec
xor
mov
adc
mov
mov
lds
cmp
loopne
and
sbbb
pop
imul
adc
mov
xchg
or
std
int3
jg
int3
push
inc
pop
test
insb
popa
adc
mov
or
jle
mov
dec
imul
test
fmull
jae
ds
fwait
xchg
movsb
jp
mov
dec
mov
jo
pop
xor
push
dec
cwtl
mov
scas
incl
pop
js
sub
outsb
inc
sbb
pop
stc
mov
xor
in
dec
cmp
into
mov
out
push
push
aam
add
mov
imul
lret
dec
mov
xor
fbstp
nop
or
int3
sti
js
pop
lods
add
ret
mov
or
leave
lds
cli
test
int3
das
mov
cmp
push
and
jbe
pop
inc
pop
sub
add
pop
add
sub
outsb
mov
scas
cli
sub
cmpsb
push
add
in
sub
lahf
dec
fnstenv
rcll
sbb
cltd
aaa
aad
jge
mov
dec
push
jb
cmp
dec
push
in
and
xchg
jecxz
pop
je
stc
into
je
test
mov
push
lcall
icebp
jp
lahf
mov
dec
xchg
aam
cmp
adc
cmp
pop
mov
int3
bound
js
mov
mov
outsw
xchg
pop
push
sub
jno
pop
push
adc
in
mov
mov
pop
inc
inc
movsb
fdivrs
imul
movsl
inc
shl
xchg
mov
ds
test
enter
mov
shrl
mov
lods
jb
roll
test
xchg
test
out
push
xchg
push
jl
imul
pusha
sbb
je
addr16
mov
rcrl
dec
dec
xchg
shlb
es
idivl
pop
mov
js
push
ss
daa
pushl
loop
push
imul
sbb
mov
in
mov
pop
pop
mov
out
std
fdivr
int3
push
jle
inc
shl
adc
ficomps
aaa
sbb
aaa
dec
shlb
xchg
jae
rol
orl
add
mov
cmc
pop
jne
test
and
fisubl
xchg
sbb
pop
dec
repz
jg,pt
imulb
fs
out
out
std
pop
mov
sub
push
cli
dec
push
pop
mov
mov
aad
test
sub
pop
and
les
sbb
and
xor
jnp
mov
sub
shll
sbb
popf
repnz
push
subb
sbb
push
stos
dec
mov
enter
roll
movsl
xchg
repnz
arpl
stos
cmp
mov
adc
xchg
stc
inc
cmp
scas
xchg
cld
dec
loopne
in
jnp
es
movsb
daa
adcl
push
movups
xor
fcmovnb
lret
pop
sbb
xlat
pop
mov
out
out
aas
not
addl
xorb
cwtl
jns
orb
stos
into
cwtl
icebp
or
je
mov
insb
popf
sub
nop
jns
outsl
mov
leave
xchg
adc
addr16
mov
dec
and
fwait
jo
jmp
sbb
cltd
push
pop
jns
sbbb
fdivrs
data16
gs
add
stos
inc
cs
out
pop
dec
inc
mov
mov
sub
and
cmp
cmp
testl
daa
xor
mov
push
inc
andb
les
loopne
shlb
in
pop
lods
push
jnp
push
dec
xchg
cltd
pop
adc
cmpl
jae
lods
push
repnz
cmpsb
iret
sub
mov
je
cmp
lds
sub
sti
mov
sub
dec
cmp
mov
arpl
add
push
add
jmp
stos
enter
nop
ss
sbb
pop
bsr
push
dec
mov
adc
dec
mov
push
test
or
sbb
inc
clc
in
mov
in
sbbl
ljmp
inc
imul
mov
push
leave
addr16
sbbl
sub
clc
xchg
push
mov
data16
out
push
mov
sbb
leave
cmp
jne
push
loopne
xor
lods
popf
xchg
stc
jge
jb
jge
fs
js
jo
jns
js
shrl
jmp
cmp
push
loopne
test
int3
jbe
and
das
jecxz
sbb
pop
add
outsl
fcomps
and
scas
dec
sbb
pop
sbb
fidivrs
push
pop
leave
or
jecxz
mov
cmp
pop
sub
sub
or
stos
add
arpl
inc
popf
aam
push
arpl
mov
adc
pop
dec
js
dec
fdivr
mov
fimull
in
mov
or
sbb
ja
add
lret
jecxz
jbe
inc
in
je
fxch
cmp
jp
popa
pop
inc
sbb
iret
push
push
imul
add
jecxz
cs
rorl
inc
jmp
sbb
jnp
leave
add
cmp
xlat
mov
loop
aaa
leave
je
cmc
adc
lea
leave
push
mov
xchg
cmpsl
and
test
push
push
xchg
stos
jge
dec
or
movsl
inc
fs
push
loop
cli
popf
sarb
and
or
lods
sbb
mov
out
and
pop
arpl
pop
pop
shl
imul
mov
dec
imul
pusha
hlt
xlat
xchg
test
fimull
mov
or
jns
das
inc
lods
push
inc
outsl
es
lret
push
movsl
pop
xor
fdivs
popl
pushf
jns
cltd
mov
shl
std
out
push
mov
fstpt
cmp
pop
mov
pop
sbb
pusha
js
mov
and
xchg
or
mov
jg
mov
or
dec
out
pop
push
test
cmpsl
adc
dec
jno
adc
mov
lds
out
dec
fisubl
sub
movsl
push
jg
xchg
jg
or
push
adc
inc
or
mov
pop
add
dec
insb
addb
mov
in
and
push
cmpsb
mov
call
mov
push
adc
jp
in
mov
mov
mov
scas
push
gs
mov
popl
lret
dec
in
push
imul
sbb
repnz
std
mov
jno
mov
mov
fisubrs
aam
inc
popa
rcrb
arpl
inc
xchg
xchg
and
sub
fs
jb
mov
rclb
outsl
sub
sbbl
ljmp
jge
pusha
jnp
clc
adc
ret
stos
add
or
cwtl
mov
mov
mov
scas
xor
sbb
or
ffreep
rolb
xchg
cmc
xchg
mov
sti
rcrb
imul
push
adc
insl
rclb
test
push
mov
and
imul
addb
loop
push
fimull
cwtl
enter
test
mov
and
rcrb
pop
jnp
shll
rcrb
cwtl
sbb
inc
ficompl
xchg
and
jmp
inc
ljmp
sbb
push
push
nop
in
out
jge
fs
and
jge
cli
cmp
mov
gs
rorb
xor
adc
icebp
leave
clc
sub
test
xor
sbb
insl
test
or
js
xchg
les
std
lods
fwait
ja
scas
adc
cmp
inc
mov
aas
jp
addr16
lret
xchg
cmc
lea
jmp
push
adc
test
aam
sbb
adc
dec
xchg
xor
lods
sbb
fisttps
pusha
jno
adc
test
sub
cmp
xor
flds
scas
and
mov
test
rcrb
inc
mov
push
mov
aas
push
shl
push
inc
cmp
shrb
test
jp
repnz
in
in
mov
pop
xor
xchg
fnstenv
adc
andb
or
mov
adc
add
mov
mov
addr16
lods
pop
fcomp
bound
push
jns
mov
inc
mov
pop
loope
addr16
push
or
addr16
cmp
sbb
mov
mov
dec
add
loopne
icebp
sarb
popf
mov
ja
and
cmc
test
pop
int
jg
cld
notl
mov
sub
mov
add
mov
ja
test
sub
pop
jno
cs
outsl
pushf
mov
dec
dec
mov
pusha
xchg
pop
ret
lea
jae
ds
jb
jnp
sub
loope
fcomi
pop
out
aam
std
jmp
pop
adc
movsl
js
paddq
idivb
xor
push
scas
int
push
cmpsb
adc
shrl
add
bnd
es
mov
adcl
rorb
xchg
xchg
rol
adc
fimull
push
pop
dec
pop
mov
and
cmp
dec
out
adc
inc
je
in
les
mov
popa
mov
in
push
pop
jg
adc
ljmp
xor
flds
xchg
loopne
js
pop
lock
movsb
add
mov
out
dec
jl
nop
cld
xchg
adc
mov
pop
aas
pop
repz
gs
mov
cmpsb
loopne
loope
roll
add
ja
dec
dec
xchg
inc
sub
aaa
xchg
cmp
inc
push
dec
cld
and
lahf
xchg
shrl
mov
pusha
popf
pop
arpl
dec
lods
fmul
addb
sahf
data16
mov
das
mov
push
sbb
leave
sbb
mov
sbb
gs
sahf
stos
test
mov
subl
push
mov
popf
je
test
jecxz
outsl
mov
push
rol
rolb
cmp
pop
xchg
or
mov
in
push
mov
push
sub
xor
sub
test
loope
lret
rclb
fidivrl
sbb
pop
sbb
push
mov
and
mov
lret
int3
filds
inc
dec
adc
lea
aad
xchg
mov
inc
dec
inc
and
testl
pop
mov
dec
inc
int3
cmpsb
popa
sub
adc
test
fadd
inc
inc
jns
loopne
fwait
pop
in
iret
lods
in
mov
mov
or
mov
sub
adc
loope
push
out
sub
xorb
inc
fcmovbe
push
bound
dec
test
xor
jge
adc
sub
je
aas
shr
ret
cmp
stos
popa
jg
adc
subb
push
test
sub
sbb
sbb
inc
movsl
out
jb
push
jecxz
stos
gs
rorl
pushf
mov
rol
pop
aas
mov
xchg
fisubrl
xchg
pop
insb
aaa
push
cltd
or
sub
mov
add
sbb
fsubrs
jae
test
lock
inc
dec
inc
repz
adc
int
add
xor
sbb
lods
test
jb
pop
and
push
pop
inc
cld
push
xor
shll
cmp
mov
mov
and
cmc
xlat
sub
cli
xchg
xchg
pop
jns
add
jne
add
push
repz
das
adc
stc
fwait
andl
pop
xor
mov
popf
cmp
clc
push
inc
outsl
inc
push
mov
xor
aam
pusha
jno
dec
xchg
into
adc
xchg
inc
loope
mov
aad
aas
push
push
adc
popa
aam
std
test
ret
sbb
mov
cld
daa
outsl
sbb
pushl
ljmp
lock
mov
movsb
mov
xchg
jae
stos
ja
mov
mov
scas
push
pusha
mov
call
dec
gs
sub
sub
cmp
add
push
cmp
push
mov
pop
xlat
lock
testb
mov
cmpsb
xor
movsb
inc
pop
sub
mov
inc
outsl
rol
push
lret
sbb
icebp
inc
mov
jno
mov
cmp
jp
pop
ret
jg
xchg
xlat
dec
fdivrs
cmp
fwait
dec
fsubrp
ss
xchg
shll
add
xor
sbbb
test
sbb
mov
ret
pop
xor
enter
add
lret
notb
std
inc
das
jno
aam
imul
cwtl
int3
cmp
jne
hlt
mov
lcall
bound
jmp
cs
ljmp
adc
popf
scas
adcl
push
mov
lret
in
shlb
bound
in
std
cli
jge
movlhps
pop
sub
les
fbstp
push
aaa
mov
je
leave
mov
pop
fisttpll
mov
cmp
sbb
mov
sub
push
jecxz
mov
pop
daa
scas
fldcw
pop
push
fistl
pop
cld
pop
rclb
int3
call
xchg
fwait
loope
jecxz
stos
xlat
sub
insl
pop
leave
je
jg
push
xlat
xor
pop
sbb
inc
jge
shl
pop
pushf
sub
push
mov
and
and
lret
dec
jp
dec
lods
or
xor
pop
xor
outsb
push
cmp
xchg
mov
lds
gs
movsb
clts
sub
mov
inc
xor
add
jns
dec
imul
scas
clc
sbb
es
push
push
dec
dec
adc
pop
mov
int3
pop
jmp
mov
dec
inc
dec
fdecstp
out
sbb
sbb
mov
or
fldenv
pop
sbb
mov
dec
je
idivb
push
xchg
pusha
mov
nop
sti
roll
jb
adc
mov
insb
test
hlt
testb
mov
fstpt
fisubrl
les
inc
xlat
jo
fwait
out
mov
lcall
loope
mov
ror
shlb
ficoms
xor
adc
test
dec
and
sbb
imul
popf
mov
xchg
mov
xchg
loopne
adcb
jbe
sub
pop
jbe
pusha
xchg
faddl
adc
xchg
adc
sub
into
inc
jns
pminub
push
jnp
sarb
add
lret
aaa
mov
mov
and
adc
leave
scas
bnd
sub
scas
cmp
test
or
callw
movsb
stos
dec
mov
xor
rcr
insl
sbb
dec
pop
pop
pop
mov
sar
test
out
add
add
xchg
loopne
jl
and
pusha
test
jno
ljmp
je
mov
push
cmpl
test
jbe
mov
rorb
inc
sub
clc
call
mov
negl
les
in
xor
mov
fistpll
gs
stc
sub
dec
daa
das
mov
movsb
rorb
mov
push
dec
push
pusha
mov
es
xor
dec
jl
ljmp
mov
dec
popa
jno
add
jl
pop
inc
pop
sub
or
cmp
mov
shlb
imul
js
xchg
add
test
fsubl
dec
push
dec
or
divl
shll
leave
fldcw
mov
rclb
sbb
bound
xchg
xlat
dec
aam
mov
popa
mov
push
inc
mov
fldenv
movsb
push
mov
and
xchg
xchg
in
or
jae
sub
xchg
jae
sbb
cld
movsb
ret
gs
and
or
test
and
jnp
popa
cld
adc
jecxz
outsb
fsubrl
jb
andl
sub
movsl
into
scas
ja
dec
cmp
orb
lods
adc
and
push
subb
mov
in
insl
test
pop
outsl
fldcw
dec
inc
das
in
cmpsl
dec
adc
rep
push
sbb
int
insb
or
jb
cmp
dec
mov
in
sbb
push
dec
xchg
or
mov
and
testb
in
in
jle
aam
push
mov
inc
pushf
xor
addl
jb
insl
dec
xchg
daa
pop
mov
dec
iret
ret
dec
mov
mov
lret
jo
jnp
mov
orb
shl
fildll
rcrl
frstor
outsb
dec
jae
daa
int
adc
add
aad
xchg
adc
fldln2
imul
sbb
test
push
lds
pop
mov
in
mov
fisttpll
inc
mov
jbe
pop
fisubl
mov
or
xchg
mov
js
bound
insl
push
and
fisttpl
subl
cmp
andb
cmp
push
inc
inc
pop
flds
pop
fldl
fs
clc
xchg
ret
int
shl
leave
jnp
jne
mov
stos
sub
cmp
sbb
test
ljmp
jns
and
jg
stos
push
insl
shlb
pop
jle
mov
movsb
inc
rolb
pushf
imul
cli
add
shl
pop
gs
inc
dec
lds
pop
cmp
ret
inc
hlt
push
add
dec
xchg
sub
cmp
lods
jns
xchg
add
xor
jb
mov
and
lcall
xchg
sub
dec
sti
or
cmpsb
mov
call
mov
add
mov
sbb
std
inc
dec
sbb
bound
xor
mov
or
xlat
arpl
out
das
sub
cmpb
dec
outsl
adc
push
test
int3
push
neg
pop
adc
dec
into
or
shll
insb
lea
push
std
xor
stos
movlps
cmp
or
scas
fisubs
adcb
or
in
sbb
push
or
dec
sbb
or
in
or
or
ljmp
mov
in
dec
and
lock
cmp
fnstsw
cwtl
adc
adc
call
sub
jl
xchg
movsl
dec
add
cmp
fbstp
subb
daa
lods
dec
aam
adc
pop
jne
fs
movsb
stos
bnd
pop
mov
out
cli
xor
pop
cmp
sbb
ja
xchg
sub
mov
cmpsl
and
cmp
pop
mov
aas
mov
xlat
or
ss
sbb
call
fisubrs
sub
adc
adc
inc
jmp
inc
shrb
adc
repnz
xor
int
adc
or
hlt
std
jne
pop
cmp
or
jl
pop
mov
and
push
sbb
in
cmpsb
xor
xor
and
xor
lea
in
out
add
mov
or
dec
and
sbb
xor
mov
jge
arpl
mov
jnp
gs
stos
cmpsb
xchg
or
dec
mov
cli
rclb
adc
and
ljmp
cld
out
aam
adc
push
or
lcall
and
gs
xor
xchg
dec
xor
clc
rsqrtps
rol
leave
jb
psraw
pusha
dec
scas
push
push
push
into
cmpsl
adc
cmp
repnz
clc
pop
jecxz
mov
aas
inc
subl
out
mov
movsl
insl
nop
push
pop
cli
xchg
shl
mov
pop
test
enter
adc
jmp
test
in
fs
aam
subl
ret
mov
cmp
aaa
jo
push
cmp
inc
and
loopne
jne
push
inc
test
sbb
js
lahf
push
mov
cmp
std
adcb
mov
and
pop
popf
ror
in
sbb
std
adc
in
dec
outsb
xor
aaa
mov
sbb
scas
cmp
icebp
push
adc
mov
dec
jle
xor
das
fisttps
xor
xor
into
jne
mov
and
mov
sti
mov
dec
sub
and
inc
insl
orl
and
push
add
leave
ds
das
dec
cmp
pop
inc
sti
scas
decb
pushf
divl
cmp
ds
and
add
xchg
mov
push
mov
imul
xchg
popa
in
or
pop
sbb
cmp
cmp
ljmp
sub
xchg
and
in
push
mov
insl
jmp
inc
dec
loope
out
pop
iret
scas
jmp
cmp
jae
xor
loope
mov
or
xor
cmpsb
rcll
mov
jo
aaa
repz
sub
pop
pop
sti
test
aaa
xor
cmc
push
jns
jo
out
out
xlat
rorb
stos
flds
xor
das
ror
add
in
and
pop
in
push
out
test
jmp
push
xor
mov
shlb
rcl
mov
push
xor
lret
icebp
daa
and
xor
xchg
ja
pop
lock
mov
xchg
ret
xchg
lret
sub
pop
xchg
cmpsb
adc
mov
inc
aaa
aam
or
and
adc
push
call
xchg
ja
lcall
fucomi
fwait
ja
arpl
inc
and
mov
aam
adc
mov
xchg
adc
pop
test
in
aam
push
cli
mov
ret
aam
sbb
out
adc
adc
cmc
sub
xchg
push
cwtl
sbb
push
mov
sbb
jb
sbb
icebp
mov
mov
dec
pusha
clc
out
cmp
pop
clc
inc
mov
out
xchg
sub
mov
fnsave
cmp
ja
arpl
shll
xchg
jecxz
sub
jns
inc
inc
or
out
push
sub
xlat
sub
mov
test
aaa
add
jne
cltd
call
adc
and
lods
add
push
das
sti
and
add
xor
xor
dec
aas
popf
ret
sub
xor
ss
push
pusha
hlt
insb
mov
xor
stos
add
aaa
sbb
mov
cmp
pop
xor
pop
add
faddl
mov
or
and
out
jo
xlat
push
dec
repnz
xor
cmp
xorps
out
xlat
je
add
add
jmp
imul
mov
iret
stos
ret
loope
jb
mov
inc
in
aas
and
push
jae
lods
sbb
push
dec
icebp
imul
aaa
and
push
das
or
inc
jmp
repz
and
insl
fldcw
enter
les
adc
out
jae
adc
push
fcmove
lret
inc
jp
sub
int
test
sub
xor
pop
rcrl
fmuls
inc
mov
cmc
xor
push
push
jmp
popa
mov
repnz
in
ret
cmpsl
dec
aas
sbb
or
fcomi
in
or
sub
sbb
adc
testl
cs
cli
or
adc
push
and
sbb
lds
pop
stos
adc
mov
inc
lock
jns
inc
shrl
int
xor
jmp
dec
daa
sbb
inc
or
jnp
adc
dec
ja
das
jns
push
jmp
inc
mov
inc
pop
test
xchg
roll
jp
xchg
push
popf
sbb
and
xor
sbb
stos
outsl
aam
mov
jo
add
stos
xlat
into
mov
fsub
sub
shl
loope
adc
mov
sub
jecxz
push
popl
xlat
jno
adc
pop
rcll
dec
cmp
and
and
dec
xlat
xor
mov
and
push
push
mov
bound
and
mov
pusha
lret
imul
fwait
sub
adc
arpl
push
repz
daa
jnp
jbe
std
sub
int
sbb
loop
pop
orb
dec
ret
test
adc
jle
push
add
mov
pusha
stos
jge
test
push
inc
pop
out
imul
cmp
mov
inc
mov
jg
inc
sbb
pand
push
popf
js
movsl
xlat
sub
jno
mov
cwtl
xor
push
xchg
or
or
push
jbe
outsl
addr16
xchg
jbe
out
sub
inc
adc
sub
xorl
adc
mov
mov
inc
xor
dec
add
dec
jo
sbb
lret
sub
inc
dec
xchg
jo
mov
shrl
test
xlat
fs
jge
dec
dec
shll
nop
cltd
jnp
xor
imul
dec
xor
dec
pusha
or
arpl
jmp
or
sub
or
aad
daa
sub
pop
jecxz
dec
push
stos
pop
gs
jbe
jbe
push
ret
ret
leave
and
xor
mov
dec
imul
jecxz
jp
data16
movsl
dec
or
xor
xlat
jge
mov
mov
fists
not
cmpsb
dec
fistpll
enter
pop
outsl
std
js
daa
rcrb
mov
imul
adc
cltd
sbb
nop
sub
mov
fcomip
inc
push
shr
cs
call
lea
lcall
sbb
adc
cmp
or
add
jne
aam
or
iret
dec
pop
xchg
inc
sub
int3
push
push
insl
aas
jl
mov
and
and
das
ret
imul
sbb
jecxz
mov
orl
lock
popf
ret
insl
and
arpl
leave
xor
pushf
daa
adc
or
addr16
mov
aad
pop
push
pop
push
mov
mov
xchg
push
mov
mov
sub
dec
sbb
enter
push
sahf
adc
addb
idivb
shrl
ret
dec
dec
imul
movsb
lahf
push
xor
lret
into
adc
outsb
jp
lahf
aam
icebp
xchg
push
data16
repnz
popf
xor
jge
dec
xchg
cmp
push
pop
repz
dec
and
in
test
jb
in
jns
testb
shlb
lea
ljmp
out
mov
enter
jno
ljmp
sbb
incl
loopne
sbb
jge
out
mov
aad
iret
test
mov
je
flds
loopne
dec
addr16
gs
xor
in
and
aaa
mov
sub
in
fadds
xchg
mov
pop
push
rclb
das
cltd
dec
cmp
dec
sub
or
push
jo
and
dec
scas
xor
pushf
xchg
inc
adc
out
test
jle
repnz
add
jg
and
nopl
push
sub
mov
mov
xchg
pop
dec
test
sti
imul
roll
inc
dec
fwait
std
jns
fdiv
xchg
xchg
outsb
in
outsl
inc
test
or
enter
sbb
xlat
add
push
adc
mov
lock
stc
mov
js
addl
add
lods
cmpb
aam
mov
and
roll
aas
xchg
adc
rclb
repz
ss
addl
mov
stos
or
pop
xchg
push
add
adc
mov
imul
or
outsl
pop
cmp
dec
jnp
ret
cmp
mov
xor
xchg
xchg
mov
push
gs
cld
int
testl
or
push
das
pop
int3
mov
rcrb
pushf
or
dec
pop
bound
xor
jge
les
add
jnp
jmp
inc
dec
jg
dec
and
shll
test
outsl
jo
or
push
xor
shr
sti
leave
push
dec
arpl
sub
daa
in
in
xorl
std
lret
sbb
fimuls
sub
decb
sub
in
and
cmp
hlt
mov
inc
adc
out
inc
inc
inc
insl
mov
add
scas
lea
dec
pop
xor
repz
pusha
mov
pusha
sbb
jecxz
add
and
sub
rcrl
or
dec
aaa
popa
sarl
sbb
jp
iret
adcb
gs
out
mov
jg
dec
pop
adc
xor
lret
adc
popf
ss
jl
xchg
sbb
inc
leave
int3
mov
and
lret
loop
add
add
jl
or
bound
jle
into
and
cmp
pop
lock
scas
outsb
test
jecxz
arpl
jae
jmp
pop
shrb
and
lret
adc
jg
lret
fbld
loop
inc
lea
pop
and
mov
outsb
je
cmp
mov
push
mov
dec
inc
inc
or
inc
lea
cltd
movsb
mov
mov
inc
or
cld
loop
add
xchg
daa
addr16
push
sbb
repnz
push
mov
cld
cmp
adc
cmp
add
sti
insb
inc
in
mov
cmp
das
call
dec
xor
inc
shlb
lods
push
andb
gs
out
loopne
push
je
stc
sub
sahf
sub
adc
hlt
loopne
cmp
pop
arpl
icebp
xchg
pop
test
or
jl
js
xor
addr16
jg
mov
dec
cltd
sbb
xchg
push
adc
inc
std
xchg
xor
in
cmp
stos
sbb
sub
and
pushf
xchg
fnstsw
add
adc
mov
sbb
xchg
push
sub
add
divl
dec
xchg
xchg
jns,pn
jle
jne
gs
xlat
cmpsl
mov
loopne
mov
mov
fwait
incb
in
xchg
aaa
or
sti
push
cmp
pop
stos
adc
cmp
mov
adc
fstp
mov
rcll
mov
je
xor
test
and
cwtl
xchg
add
jl
mov
fidivl
cmp
xchg
dec
mov
popf
xchg
push
push
jg
lahf
xchg
scas
mov
cmc
sarl
xchg
pusha
mov
push
pop
icebp
hlt
inc
pop
mov
push
mov
aas
mov
cmp
nop
jae
jnp
mov
pop
mov
enter
pop
push
dec
jmp
stc
ss
jo
aaa
jg
sub
sbbl
mov
mov
lds
imul
lret
push
add
dec
push
inc
mov
dec
mov
incb
xlat
xor
pop
stos
pop
add
mov
in
les
jp
add
or
add
popf
dec
icebp
push
fsubrp
leave
mov
sbb
scas
xchg
cld
rcrb
fwait
dec
inc
shl
dec
test
cwtl
jge
pusha
jmp
frstor
and
jmp
push
adc
pop
and
cmc
cltd
cs
orb
adc
stos
and
pop
xor
cmp
insl
pop
fiadds
les
adc
mov
iret
cmp
cmp
push
cmovns
dec
dec
jg
pop
sbb
cmpl
cltd
sbb
or
test
inc
popa
lock
jns
call
add
aas
test
scas
dec
mov
add
sti
cmp
jnp
shrl
jmp
or
rcrb
shr
dec
sbb
aas
shrb
pop
push
mov
dec
push
fistpl
sub
add
mov
mov
scas
in
stc
rorl
das
mov
push
jl
in
fldt
sbb
jp
or
int3
int3
subl
sbb
mov
push
lret
test
imull
lret
negl
lds
inc
arpl
cld
push
loope
mov
fdivs
std
jg
dec
mov
jbe
or
xchg
fwait
mov
popf
sub
add
inc
pop
dec
dec
mov
test
aas
insb
xor
push
aas
mov
add
dec
jnp
bound
cmpsb
sub
adc
ds
cmp
mov
jo
stos
fnstcw
mov
dec
int
sbb
dec
adc
stos
lea
jg
bound
xlat
aad
jno
push
inc
add
push
jg
pop
stc
sbb
pop
out
in
stc
out
test
out
mov
pop
addr16
ror
mov
inc
in
mov
enter
sbb
inc
clc
imul
xchg
jp
cmp
push
rcrl
sub
sbb
notl
sub
outsb
addr16
movsb
dec
pop
mov
outsb
pop
jmp
insb
rcrl
out
or
dec
mov
and
and
sarb
xor
inc
or
cmp
mov
jne
jnp
std
fsubp
in
cmp
fwait
adc
movsb
add
dec
icebp
xor
sbb
mov
xor
mov
mov
ja
mov
lods
daa
mov
lret
sub
mov
xor
pusha
shll
jg
mov
sbb
jne
fcmovnb
sti
dec
sti
pushf
outsl
in
inc
jae
jecxz
sbb
mov
mov
aam
pop
ss
and
insb
xor
std
push
dec
inc
test
imul
mov
jle
push
cmc
sbb
imull
les
push
in
scas
rcrl
ja
out
sub
mov
aas
into
add
sarb
or
cmp
pop
mov
and
clc
in
mov
lods
adc
mov
xor
mov
enter
push
jmp
jecxz
or
sub
loop
fs
inc
jae
mov
js
inc
mov
jle
sbb
push
xlat
xchg
sbb
pop
gs
and
xlat
pop
adcb
pop
and
in
pop
jmp
pushf
mov
mov
push
adc
mov
xchg
mov
xchg
or
bound
xchg
fwait
cmovp
not
clc
loope
xor
fiadds
cmpsb
sti
push
test
int3
dec
cltd
loopne
movsb
adc
arpl
lods
push
dec
lods
jecxz
rcrl
insb
popf
jns
mov
in
mov
push
scas
out
orb
jecxz
sbb
adc
pop
aad
xor
pop
clc
and
or
push
push
ds
stos
das
jle
pavgb
outsl
push
dec
jae
sub
roll
leave
jg
fwait
out
daa
jne
or
jne
in
sbb
div
int
repz
outsb
mov
test
dec
mov
rol
jle
xchg
xchg
sbb
jb
in
sbb
pop
test
xchg
push
xlat
or
je
js
adc
aas
flds
pop
mov
int
int3
mov
shll
scas
push
sub
cmc
pop
mulb
sbb
and
push
jb
jle
dec
cwtl
jmp
sbb
sub
lods
mov
inc
xchg
loope
cli
push
inc
fsubr
dec
test
and
or
sub
pop
int
dec
or
popf
adc
test
pop
sub
dec
addr16
fnstcw
mov
repz
daa
push
pop
pushf
jbe
mov
and
scas
rorl
push
ja
call
aam
ret
mov
leave
dec
mov
jg
les
insb
outsl
mov
cmpsl
mov
xlat
sbb
imull
jns
push
dec
or
daa
cmp
fildll
aaa
hlt
fsubrs
test
insl
mov
mov
adc
outsl
jmp
push
out
dec
loop
mov
nop
pop
add
xor
dec
and
fwait
xchg
sahf
push
dec
int
pop
inc
test
xor
fnsave
arpl
outsl
sbb
outsb
je
xchg
test
sbb
xor
shl
movsl
jno
dec
mov
and
shll
push
pop
mov
and
fs
inc
popa
jnp
in
std
rorb
jp
pop
push
in
or
test
pop
xor
add
pop
or
and
xchg
test
mov
ficoms
jge
pop
jge
and
and
orl
inc
xlat
out
add
ja
xor
jl
lahf
repz
mov
dec
inc
lret
xlat
inc
and
aas
add
add
int
mov
das
bound
or
clc
leave
fwait
aad
rcr
ficomps
xbegin
xor
shlb
subb
adc
in
sarl
sbb
call
adc
and
pop
fsts
push
pop
fildll
jecxz
shll
inc
push
aaa
outsb
les
push
sub
jno
and
fsubl
insb
sub
in
sbb
into
xchg
cltd
push
lods
fcmovbe
and
push
adc
mov
push
xlat
xchg
mov
stc
and
sbb
jnp
into
mov
mov
sarb
add
loopne
out
mov
js
xchg
mov
mov
jmp
fdivl
mov
pop
scas
push
jle
fwait
mov
fiaddl
dec
in
mov
xor
mulb
mov
mov
fildl
test
push
inc
adc
push
iret
rclb
mov
dec
call
in
lock
ss
push
dec
out
adc
aas
inc
outsl
mov
repnz
mov
repnz
mov
flds
js
mov
mov
insl
adc
sbb
xor
lret
jnp
je
cmp
mov
push
sarl
das
xor
popa
ja
in
addl
je
inc
pusha
mov
stos
stos
cmp
comiss
popa
xchg
push
rorl
dec
sti
in
xchg
mov
mov
rorb
fwait
mov
jl
pop
sarb
push
inc
in
mov
pop
mov
mov
adc
outsb
jne
mov
lods
in
int3
pop
insl
add
cli
sbb
outsb
adc
cltd
and
push
cmpl
push
pop
jecxz
je
add
xor
outsb
rcl
pop
jnp
sbb
das
in
xlat
and
fldcw
pop
jge
and
push
mov
push
clc
cmpsb
jl
mov
sub
cmpsb
lds
lcall
dec
pop
dec
out
shlb
jno
ss
mov
dec
stos
add
add
mov
inc
leave
fnstsw
adc
pop
dec
jb
cmp
test
dec
push
into
cmp
jo
fstpl
lret
fstps
lock
mov
stos
aas
push
ficomps
out
push
sub
clc
or
and
mov
imul
push
ljmp
inc
pop
test
push
je
jno
outsl
mov
jno
cli
das
inc
dec
jnp
arpl
jne
gs
xlat
pop
dec
or
inc
lcall
adc
shlb
pop
stos
sbb
clc
or
setns
test
js
push
out
or
fldcw
mov
je
movsb
pop
mov
mov
mov
repz
adc
mul
aad
sub
mov
repnz
push
es
lods
pop
inc
test
jbe
and
mov
test
cmp
call
pop
mov
lret
pop
popf
push
enter
pop
xchg
add
jno
insl
std
fucom
mov
movsb
scas
push
mov
sahf
add
sub
xor
sub
xlat
sahf
inc
sub
jl
mov
mov
aaa
sbb
enter
scas
popa
add
je
ds
xchg
adcb
daa
mov
jmp
adcb
sub
idiv
pop
jnp
inc
mov
mov
inc
enter
xchg
jb
push
out
mov
ja
adc
or
ds
sub
shll
jbe
out
hlt
or
scas
cmc
les
or
add
sbb
dec
dec
lds
test
xchg
fcmovu
les
push
adc
inc
pop
lods
je
stc
pop
adc
in
jp
push
in
jo
pop
mov
arpl
pushf
push
push
stos
mov
cmp
xor
sub
cmp
inc
mov
test
mov
cmp
sbb
leave
or
push
xor
dec
cli
cmp
test
out
rclb
mov
adc
add
arpl
out
inc
xchg
outsb
les
push
rolb
sbb
jo
fwait
xchg
roll
cld
movsb
ljmp
inc
stos
mov
loopne
test
daa
ljmp
lods
fisttpll
hlt
or
pop
sbb
stos
cmp
roll
mov
popa
sbb
mov
ds
ljmp
rcrl
add
xchg
jl
dec
and
int3
imul
dec
fnstsw
inc
adc
scas
mov
xorl
jo
out
mov
pop
xchg
mov
lods
xlat
xlat
xchg
inc
mov
inc
pop
lods
push
sbb
mov
inc
mov
dec
inc
push
or
push
pushf
and
push
add
pushf
push
mov
cmc
jne
add
dec
mov
adc
lret
mov
stos
pop
loope
call
xor
cmp
or
pop
orl
lahf
mov
sub
daa
cmp
aaa
leave
dec
das
iret
ret
call
push
jb
mov
lret
pop
push
add
fsts
nop
inc
cli
sub
push
mov
cmp
lods
fnstcw
out
dec
loop
notl
pop
aam
fcomp
sub
sub
sbb
dec
in
xor
push
sub
xchg
lcall
xchg
imul
xlat
test
xor
sti
aas
sbb
nop
adc
imul
or
jnp
push
inc
dec
addl
inc
mov
mov
sub
jbe
mov
iret
xchg
out
and
or
dec
add
int3
aas
adcl
je
mov
mov
popf
sbb
pop
mov
adc
clc
fildl
movsb
mov
cmc
xchg
ljmp
cltd
adc
mov
jne
pop
aas
jbe
xchg
xchg
in
dec
movsl
stos
push
jmp
xchg
mov
cltd
sbb
mov
insb
in
arpl
roll
loopne
negl
test
clc
or
mov
xchg
sbb
std
clc
add
rcll
ret
inc
pop
jb
push
xor
lahf
rclb
jae
pusha
stc
xchg
add
add
jg
push
aaa
xchg
test
jecxz
shrl
pop
xchg
repnz
xchg
cmpsl
lds
movsl
adc
arpl
inc
rcrb
imul
lods
xor
dec
je
rclb
rcrl
pop
jecxz
scas
xchg
cltd
or
push
xorb
test
push
into
leave
sti
icebp
std
pop
sbb
mov
push
leave
hlt
clc
jmp
lahf
push
jmp
sbb
repz
lret
insl
addr16
ficoml
clc
aad
cmc
mov
stos
pusha
repnz
xor
push
pop
pop
cmp
hlt
add
cmc
ss
xchg
mov
rcl
inc
lea
push
xor
loop
add
imul
inc
cltd
mov
js
jae
jl
out
mov
pushf
testl
xchg
xor
icebp
out
dec
dec
dec
imul
mov
sub
add
fimull
sbb
cmp
pop
mulb
inc
cmp
and
push
dec
xchg
xchg
test
sbb
scas
lret
ret
arpl
jb
out
mov
loope
stc
mov
or
add
loop
icebp
dec
dec
mov
sar
and
adc
mov
or
jg
jecxz
mov
lret
adc
insb
dec
ret
dec
cli
scas
xchg
fwait
leave
lods
cli
adc
arpl
add
mov
xor
les
sub
cmp
xor
cmp
cs
js
jno
or
sub
mov
cmp
shlb
out
fst
pop
fwait
ret
push
jnp
add
ret
aas
movsl
push
adc
add
lds
fiadds
xor
add
cs
lret
mov
dec
push
movsl
jecxz
mov
push
pusha
dec
icebp
pop
add
add
lods
push
in
pop
aas
and
lods
push
arpl
add
mov
dec
push
in
insb
mov
out
in
or
into
or
sub
out
lods
xchg
push
mov
and
out
jno
andl
mov
jp
int
dec
mov
pop
les
mov
mov
or
xlat
sbb
and
sub
sub
mov
mov
ss
sub
xchg
adc
xlat
cld
sub
xlat
fwait
pop
jns
sbb
mov
pop
sahf
mov
mov
mov
jecxz
dec
stc
dec
jmp
faddp
sub
inc
xor
cmp
xchg
popa
ret
and
xchg
xchg
pop
data16
dec
in
pmaxsw
push
fcmovbe
popl
cmpsl
jns
sub
ror
lods
js
jo
rorl
cmpsl
loop
stos
aas
jge
add
ds
dec
jle
push
fcmovbe
mov
or
rorl
mov
ss
pop
insb
shlb
push
mov
fiadds
jae
imul
jo
pop
mov
scas
leave
daa
mov
loop
and
addr16
cmpsb
lock
repz
in
sbb
jnp
dec
repz
jmp
push
push
js
push
test
notb
push
aaa
add
shlb
xchg
mov
fidivl
lds
jecxz
lds
dec
bound
pop
inc
loop
jae
mov
scas
push
out
xchg
xor
std
adc
jl
mov
ss
push
test
call
push
jno
ja
roll
sub
les
push
shufps
fisttpll
adcb
int
das
mov
les
mov
test
test
adc
mov
mov
mov
push
fidivrl
call
mov
incb
jnp
pop
faddl
lds
stos
add
movsb
jne
aam
mov
xor
jo
push
cli
pusha
cmp
sahf
push
mov
or
mov
rcl
gs
aaa
jo
sahf
cmc
ja
jle
sub
sti
loop
cltd
test
push
out
xor
je
in
addl
sub
in
test
mov
xchg
es
std
add
push
lods
add
sbb
pusha
pusha
mov
mov
mov
sbb
mov
adc
jbe
adc
dec
mov
sti
ret
ljmp
xchg
inc
outsb
sbb
outsl
int3
aas
sub
rcrb
jb
icebp
cmp
xorl
mov
mov
cmc
test
jp
push
lahf
rcl
test
cmp
push
dec
pop
inc
mov
jns
repnz
outsl
loopne
aas
nop
js
sub
negl
loop
mov
jge
add
adc
lret
xchg
and
daa
sar
lcall
outsb
scas
dec
xchg
loopne
pop
cwtl
push
add
add
sbb
imul
lahf
bound
push
push
jge
test
mov
add
popa
imul
push
add
mov
ret
sub
mov
sti
jmp
and
aaa
dec
gs
sub
and
jle
dec
clc
xchg
cmpsb
adc
ret
and
push
pushf
test
test
xor
push
mov
std
cs
js
scas
andl
mov
outsl
mov
fwait
lods
fstpl
jno
ja
mov
sub
loop
movsb
mov
lds
loopne
xor
movsb
or
jecxz
aam
leave
imul
call
inc
and
jl
push
pop
sub
dec
lcall
inc
jg
push
jmp
je
ret
testl
push
xor
push
and
inc
daa
mov
sarb
ret
sbb
js
leave
in
and
test
mov
ret
call
jle
sti
mov
jae
adc
push
in
or
bound
call
jge
cli
inc
jge
jmp
in
inc
rclb
stos
outsb
mov
leave
add
test
push
add
pop
and
pop
inc
rcrl
mov
gs
pop
fldl
xchg
adc
lret
fxch
xchg
divl
sbb
xlat
jge
push
das
cmp
sub
fildl
and
or
insl
sti
mov
push
fistl
rclb
dec
mov
lcall
lods
nop
lea
in
jno
mov
imul
movsl
xor
bound
test
pop
test
pop
dec
addr16
pop
inc
jno
adc
sbb
fnsave
into
inc
mov
pop
pop
mov
dec
cmp
lods
xor
ficoms
push
xor
rolb
pop
shlb
jge
movsb
sub
inc
jg,pt
pop
sahf
fs
shlb
xchg
or
dec
ret
dec
adc
out
inc
mov
std
ret
testb
dec
ss
getsec
mov
lods
mov
push
adc
jmp
cmc
push
dec
xlat
stos
aaa
lock
xor
xchg
add
bound
adc
mov
data16
push
mov
dec
shrl
xor
xchg
popa
or
fnstsw
or
jb
dec
ds
jb
pushl
fiadds
aaa
leave
and
adc
add
mov
dec
xchg
cwtl
loop
aam
lods
push
mov
mov
sbb
gs
mov
aad
add
loop
stos
mov
inc
sarb
rclb
push
scas
insb
popf
dec
mov
dec
sti
push
out
shlb
inc
insb
cmp
adcb
scas
cs
loopne
f2xm1
jbe
cmp
rol
inc
pop
subl
dec
jge
imul
push
jle
xchg
or
sub
jmp
push
imul
mov
mov
jb
xlat
mov
ficoms
xchg
rclb
pop
movsb
mov
pop
sti
bound
adc
shll
mov
push
xchg
dec
push
test
clc
loope
dec
push
sub
xchg
ss
push
cmp
je
mov
inc
push
ficompl
fcmovnbe
pusha
cmp
divl
lea
sbb
ja
and
cmp
pop
and
sub
mov
mov
out
out
sbb
jecxz,pt
adc
dec
pop
lret
xchg
jmp
and
rorl
pop
leave
stc
fstpt
shrb
dec
mov
ds
fldcw
adc
test
roll
test
mov
sbb
mov
and
out
js
fimull
sbb
lds
arpl
insb
jmp
jb
push
ret
xchg
pop
cli
xor
in
jecxz
or
daa
mov
push
cmpsb
dec
cld
or
dec
in
sbb
or
adc
rcrb
mov
mov
sbb
cmp
les
pusha
add
enter
jb
cltd
sbb
dec
dec
jge
mov
jmp
ss
mov
adc
imul
test
fmuls
out
dec
aam
inc
sub
jl
jg
das
pusha
stos
inc
pusha
ret
repz
mov
ljmp
iret
cmp
pop
and
and
xlat
push
sub
bound
stos
jmp
sub
push
sbb
inc
iret
loope
test
mov
pop
xchg
lcall
pop
enter
loop
sbb
arpl
add
ret
push
lret
les
sub
xchg
xchg
mov
das
jg
and
sub
stc
je
xor
add
jp
setbe
jecxz
jl
out
or
lret
jg
cmc
add
mov
jo
aaa
lahf
cmpl
inc
loopne
pop
scas
in
icebp
fcomp
adc
leave
pop
jge
add
sub
test
sub
add
pop
jbe
sub
push
add
mov
jle
es
push
cmpsb
jb
std
mov
or
xor
ljmp
or
cmc
mov
outsl
daa
jl
lea
add
dec
bound
fsubs
bt
dec
outsl
mov
std
lcall
test
movsl
jae
ja
ds
dec
xchg
or
cltd
push
sub
shll
push
leave
aaa
sbb
addr16
adc
mov
jnp
scas
add
mov
and
outsl
mov
push
insb
mov
xor
jmp
adc
jmp
jnp
data16
add
mov
cmpsl
pop
lret
movsb
push
jl
sub
pop
repz
cmc
adc
addr16
push
sub
sub
cmp
mov
test
inc
mov
lret
sbb
mov
inc
pop
mov
jge
or
sahf
lahf
repz
pop
cld
jg
xchg
add
fimull
sbb
outsb
xor
lret
ljmp
insb
mov
mov
jae
mov
subl
jl
ljmp
data16
inc
or
or
push
xchg
adcb
xor
insl
pushl
mov
andb
daa
jge
jl
cld
std
dec
cltd
pop
or
scas
jmp
data16
cmp
xchg
inc
pop
adc
dec
push
sahf
xor
jnp
andb
push
arpl
popf
cld
lods
push
gs
out
es
call
jg
jns
add
loop
fwait
in
dec
mov
scas
idivl
add
adcb
test
test
jecxz
sbb
push
adc
roll
dec
mov
and
push
add
into
or
push
js
or
stc
das
or
and
ret
popa
xchg
fidivrs
xor
mov
jb
or
insl
push
and
push
stc
pushf
mov
push
and
iret
jns
jae
pop
jno
jbe
mov
pusha
clc
jae
mov
popf
fisubrs
xor
mov
and
je
dec
pop
sbb
xchg
loop
mov
dec
dec
xorl
repz
jnp
loopne
xchg
das
lods
xor
icebp
sbb
pop
leave
push
jno
push
dec
push
jmp
cmc
cmc
sti
rorb
inc
adc
push
loopne
arpl
and
dec
aaa
inc
xlat
enter
cmp
and
sub
inc
and
add
test
mov
push
leave
mov
bound
sbb
cli
or
sub
mov
mov
push
and
outsl
pop
scas
call
mov
sti
fadds
sbb
arpl
cmpsl
mov
ds
add
cmp
xchg
flds
sbbb
cmp
mov
xchg
sbb
mov
pusha
add
aaa
jecxz
fnstsw
or
push
adc
lret
adc
dec
sbb
push
ss
xchg
push
movl
ljmp
push
pusha
or
xor
mov
nop
or
pop
sbb
in
cmp
negl
lret
xchg
pusha
aas
popa
mov
sub
jle
add
scas
push
loope
push
and
mov
mov
test
imul
adc
int3
stos
pop
in
int3
push
mov
or
arpl
test
adc
and
jge
mov
cmpsw
push
rcrl
mov
sub
fisubrl
cltd
nop
pop
dec
aad
pop
fsubs
fisttps
xchg
pop
adc
ss
mov
dec
dec
sbb
xchg
dec
jns
xor
es
bound
add
fwait
jno
lea
jnp
jae
aaa
js
push
addr16
icebp
push
xchg
cmp
push
push
mov
rolb
testl
push
jecxz
bound
scas
xor
xchg
pop
pop
sbb
mov
jo
clc
jo
xor
leave
cmp
imull
fstl
inc
lock
jle
pop
and
cmc
out
in
pop
cld
jg
dec
add
pop
dec
test
jno
cmpsb
add
lret
rclb
lea
dec
mov
push
mov
push
cmp
pop
dec
js
rolb
pop
add
inc
dec
lods
ficoms
inc
jl
or
mov
pop
imul
push
push
mov
sbb
mov
mov
out
pop
fdivrl
pop
push
cmp
xchg
push
and
ss
rorb
mov
aaa
insb
scas
negl
shrl
push
xor
inc
int
out
pop
fildll
les
push
andb
sbb
push
push
data16
jae
jp
jns
mov
jl
test
pop
out
pop
sbb
out
push
sub
sbb
xchg
xchg
jnp
pop
lret
cli
nop
fadd
fisubs
rcll
leave
jge
das
sbb
aad
movsb
out
loop
add
mov
pop
jns
fwait
push
inc
fwait
lret
rcr
sbb
inc
fisubrs
mov
ret
adc
cmpsl
mov
jnp
loope
jns,pn
push
cmc
adcb
adc
add
xor
sub
cmp
dec
sbb
and
outsb
lahf
stos
mov
xor
push
and
lcall
les
jno
shlb
adc
cmp
in
fadds
cmp
les
repnz
jnp
mov
push
jmp
in
mov
and
sti
sarl
inc
xchg
in
cmp
pop
push
sbb
push
xchg
pop
push
bndldx
loop
dec
loope
pop
in
pop
adcb
popa
sbb
test
std
inc
xor
popa
cmp
lret
jg
cmp
movsb
sub
arpl
lods
arpl
inc
dec
mov
out
clc
and
fmuls
pop
aam
stc
mov
mov
lcall
sub
inc
add
sbb
xchg
fcmove
xor
adc
mov
pop
sbb
xchg
std
adc
cs
stos
aam
test
int3
push
mov
mov
cmp
out
lea
adc
or
lret
shr
leave
cmp
fwait
jl
js
adc
outsl
push
sbb
pop
sahf
sub
and
into
mov
notb
sub
xchg
sbb
insb
inc
int
stos
fmuls
scas
jle
rclb
pop
and
test
inc
xor
in
push
sahf
fisubl
fiaddl
push
dec
jl
inc
xor
xorb
aaa
sbb
les
sub
and
mov
cltd
sub
sbb
add
out
add
rcl
inc
push
jmp
inc
in
scas
jb
jnp
or
dec
add
ja
pop
mov
mov
stos
shrb
nop
popa
ljmp
cmpsb
xor
push
insb
inc
adc
mov
movsb
stc
jle
add
cmp
pop
jne
jns
dec
push
cld
jg
sub
dec
fisttpll
into
push
push
lcall
ret
push
jbe
mov
push
mov
dec
jbe
clc
dec
push
jmp
in
fiadds
sbb
adc
cli
xor
lods
adc
mov
js
xchg
mov
jae
daa
pop
sub
daa
sti
jae
rolb
bound
xchg
dec
mov
imul
sbb
sbbl
dec
jle
pop
or
jl
inc
outsb
bt
jl
les
inc
or
sbb
aas
cmp
add
out
insb
pop
lret
xor
add
or
inc
popa
and
pusha
push
push
jg
mov
ja
add
dec
das
or
add
push
roll
mov
inc
xchg
fwait
arpl
in
push
dec
dec
or
sbb
movsl
mov
dec
or
add
mov
add
aaa
lods
in
xchg
stos
sarl
ret
lea
in
call
shll
mov
dec
jne
stos
pop
out
push
mov
sbb
outsl
imul
dec
dec
push
push
aad
cmp
xchg
je
inc
xor
push
or
cmp
ret
jmp
xchg
aaa
add
jle
add
add
gs
inc
js
pop
mov
fstpt
dec
lret
cltd
out
in
les
lahf
or
inc
clc
add
fdivl
roll
shrl
xor
dec
decl
inc
xchg
mov
dec
jae
add
in
int
dec
fs
and
sub
dec
dec
fnsave
dec
inc
std
adc
out
push
les
popf
js
sub
loopne
adc
mov
adc
ficompl
add
sub
lret
std
jp
and
test
mov
pop
push
fbstp
out
loopne
lret
out
shlb
in
out
scas
loope
pop
inc
fs
pop
scas
stos
sbb
pop
ljmp
pop
into
fs
fs
inc
jns
cltd
pop
sub
cs
lods
addr16
push
mov
inc
loopne
push
rorl
sti
shll
jg
outsb
add
xchg
sub
push
mov
fcomps
gs
fdiv
adc
jae
cld
mov
xlat
push
sub
das
xor
xchg
sbb
lahf
sbb
lds
dec
dec
jae
xchg
adc
jo
outsb
xchg
addr16
dec
orb
pop
es
cmp
inc
out
jmp
les
lods
mov
cmc
adc
cmp
or
pusha
dec
push
lahf
lea
inc
lret
arpl
mov
mov
mov
mov
sbb
sub
insb
in
push
mov
adc
cmp
push
mov
sbb
or
push
inc
ror
orb
syscall
xchg
loopne
enter
xor
pop
xchg
dec
test
ja
xchg
out
sub
pop
mov
mov
das
xchg
int
leave
pop
cmc
scas
xchg
mov
pusha
test
outsl
cmp
addb
sti
insl
cltd
lds
imul
dec
enter
dec
sub
addr16
addl
mov
add
andb
push
pop
into
jnp
mov
push
imul
add
or
hlt
mov
fsubrl
dec
mov
xor
xor
int3
fwait
mov
ror
cmp
mov
aas
xor
std
sbbb
int3
arpl
sti
and
inc
fcmovnbe
xchg
inc
xor
fisttpl
out
jp
add
and
int
testl
loope
mov
xor
xor
jb
ljmp
mov
shlb
push
insb
cld
pop
add
sti
lcall
and
ja
inc
mov
push
push
jecxz
xchg
mov
call
cmp
shlb
in
hlt
outsl
popf
daa
aaa
jecxz
mov
ret
add
inc
xchg
in
stos
in
jp
push
clc
sub
dec
fistpll
repz
dec
ja
aas
sbb
and
test
push
sub
in
movq
fsubrs
mov
nop
bnd
cmp
jo
hlt
into
sub
jg,pn
hlt
lret
imul
push
xchg
inc
subb
pop
push
je,pn
jge
jno
pop
and
mov
inc
call
ss
stos
pop
jnp
xorl
xorb
jecxz
add
dec
jbe
mov
or
mov
iret
gs
jmp
push
in
push
xchg
inc
inc
jecxz
add
pusha
mov
popf
loop
repnz
jo
mov
fwait
loop
mov
bound
movsb
scas
sti
daa
xor
cmp
aaa
jecxz
test
std
ffreep
sbb
shll
xor
gs
scas
jge
or
mov
gs
nop
enter
test
jmp
addr16
cmpsl
insl
dec
out
dec
add
lret
mov
xor
adc
iret
insl
xor
add
xor
jnp
push
js
sti
dec
push
ja
sbb
repnz
dec
mov
loope
mov
add
mov
pop
repz
pop
jg
cmp
in
and
outsb
mov
pop
add
aas
out
lcall
lahf
sbb
in
daa
daa
mov
dec
cwtl
std
adc
pop
cmp
imulb
mov
fs
pop
pop
and
loope
mov
mov
dec
mov
pop
push
xchg
or
js
and
dec
add
mov
mov
je
ret
lcall
push
and
fnstsw
movsl
cli
sahf
ret
or
cld
push
pop
mov
arpl
xor
xor
dec
or
mov
xchg
or
mov
jne
and
call
jbe
xchg
loope
dec
imul
adc
nop
test
mov
ja
hlt
pusha
jb
sub
push
popf
jmp
test
adc
lahf
xchg
push
adc
mov
xor
cmpsb
imul
push
insl
outsl
xor
inc
inc
sbb
fimuls
test
fxch
dec
scas
add
xchg
jmp
loop
scas
ret
add
fistpll
and
imul
imul
xor
lea
xor
mov
dec
outsb
call
add
lods
jmp
and
nop
iret
xor
cmp
and
stos
les
pop
mov
fwait
jns
cmp
faddl
add
jle
hlt
xor
lcall
imul
inc
mov
ljmp
mov
lahf
cmp
fstps
sub
xor
loopne
sbb
push
pop
outsl
pop
mov
push
mov
shlb
shll
sub
push
add
lock
nop
sbb
xchg
adc
mov
in
adc
aaa
pop
sbb
fisttps
xorl
jl
dec
xchg
je
sahf
icebp
adcb
iret
out
xchg
and
pushf
icebp
xchg
shrb
js
cmp
sub
call
xorl
ss
data16
lahf
jno
push
xchg
xchg
in
lods
ds
movsb
pushf
push
xchg
or
jp
mov
rcll
mov
pop
mov
or
lret
and
xlat
je
mov
out
push
and
sbb
pusha
and
aad
shl
mov
pop
das
mov
ds
cltd
push
cltd
or
rcrb
xor
jecxz
ja
adc
xchg
mov
or
sub
sub
es
mov
mov
mov
cmpsl
shlb
xchg
fstps
jl
shll
icebp
imul
xchg
jecxz
in
mov
aad
mov
sbb
addr16
test
loope
mov
test
in
lret
enter
and
adc
test
dec
es
sbb
pop
jbe
mov
hlt
push
rol
inc
cmpsb
cmpsb
inc
fwait
mov
push
xchg
mov
xchg
or
dec
loopne
xor
inc
pop
and
or
jp
sbb
stos
movsb
imul
and
push
gs
pop
push
popa
hlt
js
jl
inc
loope
mov
pop
inc
pop
cmp
rclb
data16
lcall
mov
sub
int
sbb
nop
imull
sbb
add
insl
aad
insl
sahf
mov
xor
aaa
mov
roll
jg
push
pop
das
call
xchg
ret
syscall
cmc
xchg
jp
push
addb
sbb
pusha
fcos
mov
roll
inc
cmp
sbb
pop
stos
fisttpll
ss
pop
lret
jne,pt
xor
jmp
arpl
daa
or
scas
xchg
or
test
cmpsb
mov
sbb
mov
jo
jl
icebp
adc
movsl
fisttpl
in
lds
js
and
int
inc
adc
scas
xor
xchg
sub
mov
jno
cs
jnp
mov
lods
jl
mov
clc
pop
cltd
sbb
imul
pop
jnp
jl
mov
jge
notb
dec
cli
add
test
xor
arpl
clc
xchg
inc
xor
adc
ss
mov
nop
sarl
xor
shl
push
push
jp
pop
sub
pushf
ja
xor
or
adc
jns
lret
push
mov
xchg
or
sbb
fsubp
sbb
xor
dec
xor
testb
jecxz
sarb
push
lret
push
cmp
mov
outsb
es
leave
cmp
push
mov
shl
adc
xchg
push
int3
enter
fs
aad
mov
ja
jae
pop
jle
mov
add
daa
mov
in
aaa
pop
loop
js
mov
jae
cmp
push
insl
sets
sub
jmp
mov
cmp
ret
xchg
lock
dec
xchg
dec
mov
mov
fs
inc
xchg
inc
scas
or
sub
xchg
fwait
pop
sub
push
stos
add
test
dec
cmp
dec
outsb
add
jge
test
incb
pop
rclb
xor
mov
repnz
scas
xor
out
movsl
mov
insl
jg
mov
push
cmp
jae
mov
mov
cld
xchg
cmp
outsl
sub
repnz
ret
mov
xchg
mov
xchg
fwait
jp
div
xchg
dec
cmp
scas
ret
pop
ficoml
jbe
divl
popa
into
ss
or
cmp
mov
cltd
xor
fidivrs
inc
mov
inc
loop
fisttpll
cs
dec
or
aam
dec
daa
cltd
lods
jmp
stos
xor
and
mov
cmp
cmp
push
push
in
push
xchg
shrl
mov
nop
jae
mov
or
cwtl
mov
push
sub
push
push
push
filds
imul
mov
icebp
jnp
lods
mov
cmpl
sbb
add
dec
ja
dec
pop
xor
push
mov
int
gs
adc
lcall
and
xor
cld
mov
mov
mov
and
xlat
xchg
rcrl
xchg
and
adc
dec
dec
int
cmpsb
lea
cmp
sti
jge
test
fiadds
lock
fcoms
inc
stos
aaa
push
add
jecxz
xlat
sbb
ret
push
mov
push
lock
in
xor
and
out
xor
adc
dec
jae
cmpsl
test
push
hlt
pop
xchg
push
addl
lahf
test
or
cmp
dec
lds
pop
into
push
push
sub
mov
add
imul
mov
and
das
ljmp
cs
ljmp
insb
mov
mov
in
cs
cmp
aam
push
adc
in
popa
push
je
xor
cmc
sub
hlt
xor
lahf
imul
adc
aaa
push
mov
sub
popf
xchg
repnz
xor
inc
or
fwait
test
aas
dec
clc
imulb
push
out
lret
stc
cmpl
xchg
lahf
call
add
test
sbb
dec
mov
xor
addr16
mov
xchg
sbbb
dec
aas
xchg
dec
xchg
daa
add
cmp
dec
or
ret
rcrb
dec
mov
mov
cmp
popa
jns
cmc
sbb
das
push
lret
in
pop
scas
add
cmc
test
jb
add
or
push
cmp
xor
cmp
sahf
popa
push
dec
inc
fadds
sub
push
cld
aas
push
dec
push
lahf
push
inc
jo
dec
bound
xor
lods
sbb
dec
mov
lock
jae
jp
fldcw
cmpsl
cmpsl
xchg
or
xchg
lret
test
mov
out
fistpll
jns
int3
xor
mov
xchg
cmp
mov
lea
push
cmpsb
out
adcb
pop
xchg
mov
sti
test
jne
mov
xchg
cmpsl
inc
dec
orl
btr
loop
mov
mov
mov
sbb
mov
aam
lahf
mov
and
adc
jp
out
xor
test
mov
mov
scas
gs
add
add
stos
test
add
mov
adc
ret
xor
cmp
hlt
jmp
jl
jb
mov
int
jbe
or
ret
jno
jne
mov
cmp
sbb
mov
out
adc
mov
and
fld
dec
sahf
lock
orb
insl
jmp
test
test
str
int
cltd
movb
xchg
push
xor
dec
rcl
or
push
stos
lret
pop
push
and
clc
outsl
add
push
push
inc
or
andl
test
je
scas
or
dec
aas
enter
cli
and
cmp
inc
push
and
push
sub
imul
fldt
xchg
hlt
pop
mov
imul
punpcklwd
data16
mov
jle
sti
les
push
fnstenv
into
push
pop
stos
and
flds
mov
test
inc
push
push
cmpb
inc
mov
pop
and
leave
bound
lods
les
arpl
std
xorl
aam
in
mov
sub
jae
aam
adc
adc
and
xor
dec
sarb
and
mov
add
rcrb
into
leave
lods
rcll
in
push
mov
aad
loopne
loop
jno
and
xor
nop
lods
test
add
and
or
divb
inc
add
sar
and
subl
pop
aas
push
movl
jp
imul
aam
cli
mov
lret
outsb
sarb
hlt
iret
lods
aam
call
in
aad
std
push
cmp
jbe
es
pop
cmp
cmp
dec
dec
inc
adcl
or
cmp
push
dec
lods
mov
xchg
ret
add
and
jecxz
sub
mov
or
inc
jns
push
sub
jl
cmp
push
dec
adc
and
lea
jno
push
leave
cmpsb
and
dec
insl
and
pusha
lods
and
add
mov
movsl
mov
jmp
mov
cmp
jae
xchg
imul
lods
adc
push
mov
sub
clc
loop
inc
outsl
aas
jae
das
jne
push
dec
in
mov
fwait
jp
add
jmp
stos
jl
dec
mov
or
clc
cmpsb
add
cs
sbb
jp
fistpll
fstl
mov
push
sbb
stos
mov
ret
out
pop
or
dec
push
and
jno
cwtl
scas
pusha
popf
cmpsl
out
mov
pop
jp
add
sbb
imul
pop
xor
pop
loop
push
adc
push
aam
lcall
dec
movl
ret
jb
mov
mov
arpl
push
daa
inc
fs
ja
out
xlat
adc
mov
cld
shrl
lcall
xor
sar
adc
xchg
cmp
in
inc
inc
jns
push
fisubrs
and
out
loop
jp
lods
ret
loop
ror
pusha
or
adc
adc
pop
push
jo
repz
leave
dec
pop
shll
sub
pop
jmp
xchg
push
lods
lea
icebp
push
push
jge
pop
cmp
sahf
jae
jb
loope
or
mov
jle
lret
dec
push
xchg
mov
inc
cmpsb
pop
vsubpd
sbb
mov
adc
in
pop
in
out
inc
jbe
adc
sahf
shrb
ret
adc
lret
push
mov
push
mov
jecxz
inc
pop
pop
ficoml
int3
stos
test
dec
mov
xchg
jge
flds
jb
cmp
daa
in
sbb
add
and
js
push
sub
push
fiaddl
sti
jo
popa
inc
das
in
xchg
jne
mov
push
adc
adcb
mov
jmp
xor
push
add
mov
icebp
loopne
rorb
inc
mov
adc
and
xor
push
jae
pop
jns
lock
push
repz
leave
aas
add
roll
or
push
xor
cmp
dec
xchg
imul
inc
jecxz
test
cmc
dec
sbb
sbb
push
fsubrp
rdtsc
xchg
cmp
stos
ficoms
fdivl
dec
cmp
sbb
ljmp
out
sub
outsl
in
rol
sbb
mov
adc
push
pop
mov
inc
hlt
sbb
sbb
mov
mov
push
ljmp
das
adc
icebp
mov
sbb
iret
push
mov
pop
shl
test
aam
inc
inc
cmp
adc
stc
inc
dec
sub
or
xchg
fcmovb
sub
xchg
pop
xor
push
aas
and
push
pop
xor
cmp
aam
sahf
mov
rcrl
sahf
pop
and
sbb
jo
sbb
xchg
stos
push
bound
out
mov
loop
mov
lds
mov
or
add
mov
push
mov
stos
orl
cmp
bound
fcmovnbe
dec
and
inc
in
mov
sbbl
dec
sub
cwtl
mov
cmpsb
sbb
movsb
sbbb
jae
mov
sbb
subb
int3
es
jno
sbb
lahf
and
insl
or
shlb
mov
scas
popf
inc
cmp
mov
js
dec
divl
cmp
mov
push
jnp
cmp
pop
pop
popa
scas
dec
aas
cmpsb
dec
dec
dec
call
idivb
cmc
sub
sub
xor
fbld
pop
lods
and
mov
mov
enter
in
shrl
or
lods
mov
test
push
fmuls
iret
cld
inc
push
dec
push
fiaddl
cmp
scas
and
fdivrp
add
xchg
addb
mov
jle
dec
adc
loope
subl
notl
decb
sbb
mov
cmp
repz
data16
add
inc
outsl
bound
dec
ljmp
adc
mov
adc
jbe
and
jl
or
aas
sub
iret
adc
xor
xor
and
and
int
loope
jle
xchg
adc
cmp
fldcw
pushf
mov
lea
pop
popa
inc
adc
or
push
push
test
dec
dec
sub
mov
xchg
adc
enter
clc
jo
xchg
into
adc
fstpl
js
mov
stos
fildll
pop
inc
xlat
mov
fdivr
ret
fwait
jge,pt
xor
push
es
jge
jg
cltd
fs
shrl
cs
ss
jns
leave
shrb
je
sbb
mov
sarb
sbb
sbb
fnstcw
cmp
lods
jb
cmc
push
aaa
lods
xor
popa
push
lahf
push
out
jg
pop
xchg
dec
hlt
and
xchg
lret
sbb
ja
clc
mov
out
xchg
xchg
aam
pop
jge
arpl
pusha
pop
pop
popa
jle
push
out
les
dec
adc
sub
mov
push
sarl
jnp
mov
test
test
cmpsb
push
stos
jae
js
repnz
xor
add
sub
pop
aas
dec
and
xchg
push
stos
mov
inc
lods
ljmp
xchg
sti
pop
arpl
push
adc
jp
cwtl
pushf
hlt
mov
sarl
fs
push
cmc
jne
gs
bound
adc
mov
mov
mov
aas
jbe
and
jle
mov
js
pop
mov
pop
movsb
out
or
bound
fs
push
outsl
mov
sbb
jae
adc
cmp
lock
adc
sarb
pushf
arpl
ja
out
leave
out
push
jno
mov
jp
data16
jecxz
js
outsb
pop
mov
into
lcall
popf
sub
push
mov
or
jmp
sbb
push
fiaddl
inc
ja
dec
cmpsb
adc
push
arpl
out
call
scas
push
jnp
fildll
lahf
cmp
nop
sub
daa
std
mov
or
lret
out
cmc
cmp
enter
ja
test
jmp
sub
sti
dec
mov
into
lods
test
das
mov
stos
push
jb
idivl
leave
js
xchg
xchg
mov
dec
xchg
dec
jg
cmp
push
jno
das
fs
and
dec
mov
sahf
cmc
lods
fisttps
mov
mov
out
pop
mov
in
mov
loopne
cwtl
scas
in
xchg
enter
mov
xor
repnz
gs
or
add
push
les
clc
xchg
cmp
cmpsb
inc
sti
or
test
lea
pop
inc
adc
popa
int
imul
push
scas
lret
cmc
jl
inc
aad
test
pusha
inc
scas
add
pop
pop
jle
jp
dec
cmpsl
aas
mov
test
popa
or
bound
bound
add
xlat
jmp
jge
xchg
xor
lds
push
sub
xor
xchg
mov
andl
and
addr16
andb
and
inc
bound
stos
cwtl
sub
adc
lea
pop
jp
pushf
bnd
cwtl
imul
lods
xor
dec
sub
push
clc
dec
xor
movsl
push
add
jmp
fildl
and
aam
xchg
jae
push
repnz
adc
pop
fdivs
imul
fcoml
ficomps
or
push
rorb
dec
or
push
adc
popa
stos
dec
sub
cs
mov
pop
xchg
jmp
xchg
in
popa
sti
xchg
sbb
mov
sub
dec
dec
push
sbb
fiaddl
addr16
xor
jns
test
lock
dec
and
push
cmp
xchg
dec
push
stos
cwtl
xchg
xchg
xchg
xchg
sub
cmp
jae
push
nop
mov
clc
dec
data16
idivb
cmpsl
inc
adc
adc
jb
mov
movsl
ja
cmp
fdivs
and
push
shr
add
sbb
mov
inc
mov
lock
jmp
sbb
mov
push
jb
loope
mov
test
cmc
bt
out
inc
dec
dec
cwtl
ds
into
jl
add
mov
jg
addb
push
dec
scas
jne
mov
or
dec
xchg
and
push
ret
push
es
les
sbb
or
sbb
shl
add
or
add
scas
jl
jbe
cmc
leave
cmc
jne
xor
xchg
call
dec
nop
ret
rclb
stos
pop
ret
dec
cmp
jb
add
ret
push
dec
or
mov
xchg
test
jmp
or
xchg
pop
push
test
sbb
xorl
mov
pop
test
mov
or
imul
mov
pop
movsb
pop
lock
xchg
inc
jmp
cmp
add
dec
sbb
xchg
rclb
cli
imul
push
enter
lret
fstpl
push
mov
lods
sub
mov
add
test
cmp
sub
arpl
inc
inc
add
mov
cmp
sahf
std
pop
mov
inc
jb
pop
adc
cmp
lds
adc
mov
push
outsb
or
mov
movsb
imul
ds
and
sbb
andl
out
push
push
sbb
mov
sub
test
stc
into
in
out
add
sub
fs
dec
pop
dec
out
out
mov
incl
cmpsl
fcmovbe
cmp
xor
test
imul
mov
sbb
adc
and
repnz
xor
cmp
pop
mov
scas
inc
imul
push
xor
xor
push
jl
mov
cs
mov
pop
test
sbb
adcb
test
mov
add
mov
arpl
adc
rorl
dec
mov
jae
and
aas
bndldx
fwait
sbb
mov
cmp
pop
dec
sbb
mov
lret
jae
mov
clc
jg
xchg
mov
cmp
xchg
data16
push
adc
idiv
gs
fistps
jp
and
bound
pop
shr
fsubs
sub
mov
push
lea
dec
out
mov
out
jg
adc
push
iret
sbb
pop
std
ret
fwait
mov
and
mov
data16
ficompl
mov
push
enter
sub
inc
aas
fdivp
addr16
push
xchg
xchg
andb
sub
in
incl
jns
ds
add
fwait
and
fs
sbb
gs
call
sarb
inc
or
rolb
sbb
jmp
xchg
jg
add
jno
xlat
xchg
ret
leave
sbb
into
fiaddl
mov
lahf
mov
mov
lahf
jae
scas
push
push
out
cmp
repz
test
mov
rorb
mov
insl
sahf
scas
int3
sub
inc
jmp
dec
mov
xor
fucom
pusha
and
sub
aaa
fdivs
loope
dec
push
loop
outsl
fsubp
mov
push
lret
in
mov
iret
ficompl
xchg
sub
fldenv
pop
inc
pop
jnp
mov
push
out
jmp
xchg
jmp
outsb
rcrb
out
aaa
je
js
add
repnz
dec
add
or
lds
aas
pushf
dec
sub
dec
testl
cmpsb
fsubp
jns
add
pop
sub
xchg
leave
pop
addr16
mov
push
and
call
jp
popf
mov
out
sub
fstl
mov
mov
or
inc
sbb
cmc
jb
push
jge
sbb
shll
addb
nop
pop
jmp
push
xchg
enter
jge
fwait
xlat
jle
mov
nop
lock
xor
mov
out
test
sahf
add
cmp
aad
or
add
lods
adc
jg
mov
jns
scas
daa
push
cmc
ret
fsubrl
push
aaa
jge
pop
jg
fistpll
testb
in
insb
xchg
jbe
sbb
out
push
mov
mov
std
jae
jecxz
pop
cmp
adc
testl
sub
andl
jae
xor
push
ret
pushf
jecxz
xchg
jmp
adc
dec
fsubrs
push
fisubrl
repz
pop
mov
xor
xor
pushf
popa
sbbb
add
xor
fists
push
or
inc
or
jb
sub
add
outsl
test
cs
mov
ljmp
nop
pop
sbb
jle
push
and
mov
adc
sar
sbb
fisubrl
stc
cwtl
mov
ljmp
xchg
aaa
or
sbb
mov
lret
push
sub
imul
call
daa
sub
add
sub
scas
or
mov
inc
lds
stc
scas
iret
das
cmpsl
push
lret
aaa
adc
fidivrl
pusha
scas
loope
insl
inc
out
sub
andb
xchg
xor
and
insb
clc
mov
andb
jecxz
lahf
or
cmpb
pop
pop
sub
inc
jge
bound
add
sbb
mov
mov
pop
mov
cs
jecxz
nop
dec
push
sub
pop
outsb
push
movsb
mov
adc
pop
jae
pop
dec
cmp
mov
call
push
mov
dec
mov
pop
movsl
mov
enter
dec
mov
mov
repnz
movsl
or
sbb
fdivrs
and
mov
mov
sbb
cmc
jecxz
cmp
loopne
outsl
cmp
inc
mov
pop
dec
mov
pop
js
add
ja
dec
sti
add
mov
inc
ret
push
stos
loopne
sub
lds
inc
rorb
sub
gs
roll
addr16
rclb
adc
and
inc
pop
dec
pop
loope
lea
jge
xchg
pop
push
into
xchg
cmp
enterw
stos
daa
push
orl
inc
mov
xchg
imul
gs
jecxz
sub
sbb
inc
insl
xchg
push
dec
sbb
add
imul
mov
insb
dec
adc
cmpsl
mov
or
cmp
and
imul
into
jg
inc
mov
dec
jns
jmp
pop
insl
jmp
add
jl
sbb
scas
xchg
cmp
ja
insb
data16
hlt
push
push
xor
sub
sub
mov
mov
jae
in
dec
fidivl
out
pop
sbb
mov
jmp
dec
je
mov
daa
aas
adc
pop
and
mov
push
loope
mov
lret
test
outsl
icebp
mov
mov
mov
mov
imul
cmp
fwait
cld
cmc
pop
lds
push
adc
daa
loopne
or
imul
xlat
inc
lds
sahf
aaa
fsubrp
outsl
xchg
ja
push
stos
nop
inc
shlb
sar
rcr
ret
and
pop
push
or
or
mov
popa
adc
or
scas
shrb
mov
inc
adc
sub
push
add
in
sbbl
sarl
rol
bound
lcall
out
fisubs
out
lods
jns
mov
jg
ja
cli
dec
mov
push
dec
dec
mov
jl
std
test
jmp
xor
outsl
lds
clc
testl
aas
sbb
add
jbe
js
xchg
ret
dec
dec
outsb
mov
js
and
iret
movsl
scas
push
sub
int3
or
shlb
repnz
push
cmp
ret
xor
rcrb
add
in
cmp
inc
js
sbb
punpckhbw
inc
cmp
mov
dec
fcmove
pop
jp
mov
popa
mov
shll
inc
movsl
icebp
fistl
ret
and
rcll
dec
push
das
aam
mov
and
pop
scas
rcrl
xor
cmpsl
into
pop
mov
popa
pop
pop
jmp
sarl
xchg
testb
popa
lahf
and
leave
jecxz
push
aad
dec
pusha
rcl
mov
leave
movsb
jp
insb
mov
rclb
xchg
movsb
or
call
or
movsl
sub
lret
int3
stos
cmp
jg
mov
out
sbb
and
and
mov
scas
dec
negb
outsb
bound
pop
ret
inc
dec
out
divl
faddp
sub
scas
cmpsb
lds
cld
scas
xchg
inc
jo
shlb
in
jb
mov
push
cltd
mov
loopne
jns
enter
xor
ja
insb
bound
mov
mov
jns
add
or
or
xchg
jl
sub
push
insb
push
and
mov
les
and
cmp
stos
negb
jo
push
lahf
call
pop
hlt
and
ja
jge
and
rcl
cli
xor
popa
pop
pop
dec
jge
stos
test
add
xor
or
inc
cwtl
arpl
int3
push
lods
out
push
inc
rcll
mov
fsubrl
stos
xorb
or
jae
enter
scas
scas
sub
sub
sti
imul
dec
pop
adc
sub
push
push
fnstcw
cmc
jmp
imul
sbb
jmp
jge
pop
enter
or
shl
mov
lds
mov
xlat
xor
das
dec
mov
ret
sbb
inc
shl
dec
xchg
jg
sbb
sti
in
push
call
rclb
mov
xor
mov
push
lret
jo
das
jmp
sbb
lret
sbb
mov
loope
push
repnz
rolb
scas
jmp
dec
outsl
dec
scas
cld
adc
cmp
pop
lods
jmp
cli
mov
stos
jnp
nop
push
inc
add
andl
leave
imul
jle
push
mov
call
or
inc
push
fiaddl
xor
jns
pop
add
adc
add
jl
sub
js
lds
xchg
cltd
dec
test
mov
pop
push
aam
sbb
bnd
or
insl
xchg
pop
sub
sbb
sub
pop
pop
xchg
push
fs
loopne
outsl
daa
scas
aad
jl
push
adc
aaa
daa
outsl
pushf
push
adc
pop
mov
jb
cwtl
adc
sahf
loopne
faddl
xor
xchg
imul
fwait
cld
push
and
dec
dec
lcall
cmpl
iret
in
andb
ficomps
adc
repz
gs
mov
fwait
js
xchg
jns
cmp
pusha
sbb
push
arpl
mov
jmp
mov
adc
cmp
cmc
or
rclb
out
sahf
xor
movsl
int
or
test
ret
jne
pop
in
mov
dec
pop
aaa
icebp
mov
dec
jo
push
int3
sbbb
fdivl
movsb
mov
jp
ja
mov
clc
fs
mov
jl
mov
and
sti
cmpsb
dec
scas
loope
jbe
fst
dec
cmp
cli
xchg
movsb
push
sbbl
loope,pt
jne
fdiv
aas
sbb
sbb
call
and
dec
cmpsb
adc
xchg
push
jg
out
adc
lea
int
shlb
cs
call
sarb
stos
xor
aas
push
scas
inc
es
fwait
xchg
adc
fxtract
test
and
fcmovu
sbb
xor
in
mov
out
adcb
sahf
lret
mov
in
xchg
into
cmp
mov
cmovl
imul
scas
xchg
dec
cli
pop
sbb
fwait
in
pop
mov
fldt
inc
call
sub
jmp
fistpl
das
cld
jg
sub
addr16
mov
call
iret
jo
pop
cli
stc
mov
jle
cmp
push
aad
fcomps
xlat
jecxz
sub
mov
sti
jp
push
jp
mov
aas
pop
in
push
es
mov
adc
inc
mov
js
dec
dec
mov
and
sbb
loopne
leave
ret
lea
out
mov
push
popa
push
xor
adc
pop
andl
sbb
mov
jae
js,pn
jge
cs
push
pop
push
loope
mov
movsb
jae
pop
push
xchg
xchg
cmp
mov
sub
dec
xlat
shrl
loope
mov
fstpt
cs
xchg
mov
sahf
adc
dec
dec
test
lods
mov
cmp
testl
mov
loopne
in
jo
aaa
and
clc
jno
popa
test
in
jp
sbb
pop
push
pop
scas
test
data16
addl
stos
lcall
popf
cltd
icebp
addr16
inc
lds
mov
dec
insl
into
pop
and
lcall
xchg
jnp
pop
pop
pop
push
repnz
adc
mov
ss
dec
mov
test
test
pop
adcb
and
dec
pop
mov
data16
imul
dec
leave
dec
mov
jge
add
lods
nop
dec
sbb
sub
out
inc
jb
ret
add
das
inc
into
xor
and
cmp
in
pop
sub
xchg
test
cwtl
push
adc
cmp
add
cmpsl
int
dec
inc
inc
std
out
lret
fdivrl
mov
movsl
mov
jle
pop
xchg
inc
cwtl
jmp
gs
pop
leave
hlt
inc
std
cmp
enter
sti
dec
or
clc
enter
popa
mov
mov
sarl
xor
jl
data16
and
and
ja
push
dec
mov
dec
jne
add
rcrl
ficoml
sub
xor
mov
xchg
mov
popa
fstl
dec
jno
pop
jecxz
jnp
or
test
pop
add
xor
cmc
int
addr16
aad
sub
add
cmpsb
jae
cmp
inc
sub
jnp
xor
shll
push
testl
mov
sahf
xor
add
loop
xor
sbb
cmp
adc
sub
xor
imul
mov
pusha
fwait
push
mov
pop
lahf
push
and
andl
add
xchg
stos
loopne
outsl
loopne
pop
shr
sub
add
scas
dec
inc
sbb
mov
mov
or
inc
mov
mov
jno
cld
stos
enter
add
fnstsw
js
xchg
pop
pop
dec
jno
mov
ss
fxch
sub
roll
aaa
ret
adc
inc
int3
dec
push
insb
xchg
jecxz
outsl
push
imul
sbbl
sub
sub
xchg
jp
or
mov
or
xchg
inc
test
mov
push
push
mov
adc
fmuls
scas
xorl
repnz
sti
lret
or
push
das
push
ror
ljmp
dec
and
dec
push
aaa
mov
lods
sti
add
insb
lods
hlt
leave
es
shrb
dec
rclb
pop
sbb
jae
movsl
push
or
mov
pop
and
cmp
jmp
mov
das
xchg
jb
mov
mov
inc
pop
jl
xorl
xor
in
pusha
pop
inc
pop
popf
repnz
mov
mov
lea
pop
cmp
sub
jg
inc
aas
sbb
addr16
cmp
jno
cmp
jecxz
push
mov
xor
jo
jp
adc
sbb
sub
fcomi
xchg
pop
fs
ret
or
dec
cmp
jno
xor
jae
into
sbb
pop
cmpb
dec
movsb
andl
stos
popa
push
jl
push
mov
fs
loop
andl
mov
sti
mov
cmp
je
lods
xchg
pop
out
fsub
roll
cmp
mov
mov
mov
mov
popa
push
add
mov
cmp
push
cmpsl
fisubrl
rcrl
jae
push
mov
and
fwait
data16
pushf
daa
leave
xchg
cmp
test
in
or
push
jno
mov
sbb
push
mov
cs
push
and
shrb
in
ljmp
pop
cmp
mov
pop
xchg
inc
test
cmc
into
call
ss
inc
mov
adc
movsl
sar
mov
dec
push
imul
into
dec
roll
or
hlt
in
and
dec
xchg
ss
iret
out
pop
push
and
aad
sub
mov
dec
jns
add
cld
pop
push
gs
jbe
popf
dec
adc
scas
call
push
lcall
clc
rorl
pop
addl
and
adc
dec
arpl
mov
add
incb
dec
adc
jae
xchg
jns
and
or
mov
cmp
cmp
lods
inc
outsl
movsl
data16
pop
daa
xor
mov
icebp
repnz
push
je
add
fs
xchg
shll
adc
lret
pop
stos
imul
sbb
xorl
lods
js
pop
xor
pop
push
loopne
sub
and
sub
sub
mov
orb
dec
fs
and
pop
sbb
sti
adc
movsb
cmpsb
int3
pop
xlat
dec
clc
push
fisttpll
daa
std
in
mov
or
cmp
das
pusha
and
lahf
push
lock
xor
ljmp
addb
add
ss
sbb
jmp
xor
lret
adc
mov
lock
fwait
or
jmp
roll
call
das
lcall
scas
mov
inc
iret
push
cmpsb
faddp
xchg
push
push
push
das
stc
das
push
mov
daa
stos
mov
mov
call
mov
or
jnp
cmp
sub
cs
test
dec
int3
ret
addl
pop
add
pop
ljmp
dec
adc
lods
or
call
cmp
out
add
dec
pop
outsl
fdivrl
fwait
mov
arpl
test
mov
repz
stos
fdivs
dec
jecxz
lcall
in
mov
adc
or
orb
scas
into
pop
mov
adc
nop
or
pop
je
bound
lods
add
and
xchg
cmp
pop
sahf
loop
jmp
dec
mov
bound
sbb
add
pop
mov
dec
jbe
sbb
mov
dec
pop
dec
gs
cs
loopne
mov
dec
movsl
mov
repnz
outsb
bswap
adc
mov
sub
adc
lds
mov
out
sub
xchg
sti
test
hlt
lret
add
cmp
mov
in
lods
jae
cmpsl
mov
into
repnz
mov
aas
sbb
mov
cmpsb
jl
mov
fs
cs
stos
jae
hlt
pop
cld
setne
pop
cltd
leave
lcall
ds
add
iret
dec
cmp
cld
jno
in
popf
aaa
mov
dec
sub
mov
sbb
push
es
jne
int3
dec
aam
loope
inc
out
enter
andb
mov
inc
pop
iret
subb
cmp
or
inc
loopne
arpl
or
ficoml
das
aas
repz
push
ljmp
cmp
xor
flds
bound
out
push
leave
mov
jmp
movsl
popf
push
sub
sarl
adc
clc
shlb
fstps
pusha
xlat
test
fs
pop
xor
push
out
jle
test
jne
dec
mov
push
cmp
repnz
dec
cld
sub
ss
mov
xchg
xchg
inc
adc
cs
jl
pop
and
ja
xlat
out
jg
es
sar
and
test
int
xor
push
mov
mov
adc
jns
xchg
and
pop
mov
mov
rolb
add
jnp
push
or
jno
push
and
dec
xor
mov
mov
inc
adc
outsb
std
xlat
xchg
sbb
mov
and
orl
rcrb
and
js
pop
shrb
sub
sub
sub
push
cmp
jno
and
jb
dec
and
adc
or
cmp
dec
mov
pushf
repnz
sti
sub
rolb
dec
xor
dec
jbe
arpl
sbb
popa
jge
outsb
mov
test
mov
dec
mov
lds
xor
xchg
je
imul
movl
scas
lret
and
add
add
mov
jmp
loop
jns
pop
push
dec
inc
loop
sub
jmp
mov
sbb
js
push
jle
dec
inc
int3
lret
test
inc
aad
lcall
mov
jb
mov
mov
arpl
in
or
pop
shrl
xor
jp
xor
adc
jnp
addb
or
jge
cltd
push
inc
xor
dec
mov
push
test
mov
mov
dec
mov
daa
mov
xchg
adc
and
add
jge
dec
loop
jnp
test
xor
mov
sbb
test
sub
fidivrs
or
or
test
dec
push
xchg
and
push
mov
sbb
ss
mov
mov
mov
push
leave
addb
xlat
aaa
in
dec
or
shrb
sbb
xlat
or
push
cmp
adc
repz
jecxz
int
inc
lahf
push
loope
in
cld
sbb
std
inc
leave
std
xor
xlat
jno
inc
scas
jp
sub
xchg
les
bound
fcmovbe
add
dec
lret
popa
ljmp
dec
cmp
pop
cmc
stc
sbb
cvtdq2ps
pop
std
sbb
pop
push
daa
cmp
mov
pop
sahf
jnp
outsl
xchg
rorl
inc
jge
xlat
or
les
xlat
sbb
jnp
push
bound
jecxz
dec
in
in
dec
sbb
pop
and
push
imul
les
dec
stos
adc
sbb
jb
pop
loopne
cmp
jecxz
out
sbb
adcb
jb
inc
out
lahf
leave
xor
inc
mov
int3
imul
inc
out
aam
adc
imul
jmp
pusha
mov
adc
das
test
dec
fdivrs
sar
xor
cltd
fnstenv
daa
das
jb
pcmpgtb
xchg
dec
sarl
cs
xchg
pushf
mov
dec
inc
sbb
cmp
pop
mov
sbb
cld
xlat
mov
fistpll
push
mov
adc
js
push
addr16
stc
inc
cmp
aad
mov
es
pop
pop
cld
imul
cmpb
mov
loopne
push
aas
jae
js
bound
inc
jle
and
cmp
push
in
jl
and
fisubs
sbb
sub
aad
and
ds
cmp
pop
xchg
mov
cs
add
mov
add
aam
les
jb
loop
fs
inc
dec
mov
dec
jae
sti
outsb
xlat
pop
mov
pop
push
lret
sub
adc
xlat
ljmp
in
or
and
test
xchg
or
push
cmp
mov
mov
test
shrb
mov
out
push
mov
mov
inc
xchg
cs
jle
pop
xor
mov
mov
mov
inc
sarb
jbe
gs
inc
inc
jne
inc
pop
push
jecxz
sbbl
inc
or
pshufw
adc
inc
je
clc
scas
movsl
sbb
jno
pop
mov
mov
mov
imul
mov
test
sub
pop
mov
or
cs
mov
fs
aam
inc
mov
xchg
hlt
and
pop
mov
sbb
je
scas
popf
cmpsl
jmp
in
add
into
sub
mov
daa
jns
fistpll
mov
scas
inc
js
lea
xor
clc
inc
popa
out
daa
mov
mov
jge
adc
out
mov
mov
dec
xor
in
sub
or
ja
inc
rcl
fmulp
ret
dec
pop
sbb
mov
test
lea
imul
ds
fwait
sbb
or
jmp
push
popa
outsl
push
sbb
inc
out
mov
pop
pop
jne
dec
push
push
push
pop
push
mov
repz
pusha
movsl
sub
and
jmp
inc
outsb
int
cmp
push
push
sbb
sar
std
repz
nop
addb
dec
add
das
sub
add
cld
mov
or
mov
dec
lods
xchg
test
rcrl
sti
lahf
test
sbb
addr16
test
pop
xchg
adc
jnp
xchg
shl
je
mov
jb
push
fsubs
js
sbb
adc
inc
into
inc
iret
movsb
sub
mov
pop
push
sbb
fsubrl
pop
cmp
jnp
xor
ret
add
pop
fsubrl
mov
jne,pn
pop
cmc
sbb
inc
mov
sub
push
and
fwait
sbb
dec
and
mov
ret
sub
test
sahf
mov
rcrb
mov
iret
addw
scas
fists
movsl
xor
mov
scas
mov
cmp
pop
mov
jb
and
push
lods
push
adcl
fs
pusha
or
lret
xlat
or
inc
xor
outsb
dec
and
and
sub
in
inc
int3
arpl
mov
xchg
divb
insb
js
outsb
negb
push
dec
xchg
test
fxch
div
cmpsl
test
push
inc
cmp
pushf
das
cli
and
mov
and
outsl
scas
dec
data16
xchg
aaa
inc
jge
ljmp
mov
pushf
iret
in
in
ja
dec
fistl
cmp
mov
scas
in
push
sbb
loop
and
test
iretw
mov
out
mov
cld
inc
loopne
adc
test
rorb
sub
fldz
mov
cmp
adc
in
dec
inc
aaa
ret
test
pop
cltd
pop
sub
mov
sarb
fs
sbb
or
mov
stc
test
mov
or
cmp
scas
pushf
dec
nop
cwtl
rorb
lods
out
dec
jae
fbld
leave
lods
out
dec
push
push
add
fbstp
mov
cld
gs
xor
jae
fabs
push
xchg
lret
add
sub
jno
leave
mov
jp
cmpsb
clc
scas
push
fwait
jne
notl
xchg
jecxz
push
out
adc
jnp
xchg
fs
push
and
fucomip
jecxz
in
lea
mov
inc
push
ljmp
push
repz
cmpsb
aas
cmp
sub
mov
aas
pop
push
inc
sub
bound
js
add
jnp
jmp
vmwrite
push
sbb
add
mov
and
dec
loop
inc
gs
int
jb
inc
nop
xchg
inc
pop
inc
repnz
mov
dec
mov
pusha
push
aad
idivl
in
cmp
mov
push
arpl
cmp
js
add
xchg
imul
fidivrl
mull
out
popa
insb
addl
pop
xor
clc
sub
idivl
xchg
popa
push
test
xchg
dec
jns
cmpsb
ss
mov
add
loopne
clc
mov
test
loope
rclb
mov
rcrl
mov
ja
dec
aad
and
push
loope
in
jmp
cmp
mov
push
cld
test
inc
hlt
mov
jge
mov
pop
dec
gs
fsubs
aas
add
jae
mov
xchg
xor
push
aad
loop
sub
insl
mov
pop
mov
push
mov
pop
xchg
push
jno
dec
and
mov
cmp
lods
inc
fidivs
pop
out
and
clc
sub
ret
popf
rorb
lods
xchg
adc
push
dec
adc
mov
sti
js
sbb
dec
in
shl
jno
pop
leave
insl
int3
lods
push
lods
sub
arpl
jnp
test
ljmp
jp
stos
xor
rcrb
test
pop
dec
mov
or
cli
xchg
lea
mov
push
cmp
xchg
xor
test
out
loop
fisttpll
test
add
addb
outsb
scas
and
in
jnp
push
lods
roll
jbe
stos
jnp
stos
push
pop
or
cmp
in
inc
push
jno
je
mov
les
mov
jnp
test
push
adc
lods
mov
lods
sub
pop
out
cmp
adc
jle
lods
cmp
sbb
lahf
je
mov
jge
ret
ja
pop
add
jbe
mov
mov
jecxz
nop
stos
dec
dec
bound
sbb
pop
push
insb
pop
push
inc
and
dec
jbe
ja
push
pop
dec
lret
lds
mov
mov
mov
pop
cmp
divl
stc
fsubl
insb
and
in
xlat
cmc
pop
xor
call
xor
cs
jns
shlb
in
sahf
cltd
add
loope
daa
and
shl
lret
or
jmp
pop
idivl
or
loope
mov
xchg
or
je
dec
cmp
jo
add
dec
roll
xchg
push
sbb
xor
sub
add
xor
idivb
les
shlb
push
xor
je
and
dec
fwait
aaa
xchg
js
add
das
mov
jge
sbbb
lret
push
jne
mov
xchg
pop
bound
dec
mov
add
out
sbb
imul
sub
or
imulb
jno
adc
adc
add
fmul
ficoms
cmp
call
dec
and
dec
or
arpl
repnz
cmpsb
xchg
xchg
mov
in
adc
repnz
fs
mov
lahf
mov
sub
stc
sub
pop
push
out
dec
movsl
push
sub
dec
mov
push
cmp
adc
fmuls
scas
and
xchg
mov
add
pusha
xchg
xchg
int
loop
xchg
adc
adc
rcr
dec
fs
jp
ror
add
fwait
push
inc
lret
fimull
xor
dec
gs
push
jo
rorb
inc
pop
dec
or
pop
sbb
leave
arpl
insb
pop
and
je
push
mov
cmp
mov
mov
in
inc
mov
push
lret
pop
loope
push
xchg
outsb
cmp
daa
sub
ja
loope
sub
enter
test
add
cmp
add
sbb
ret
push
aas
popa
cmp
test
aad
mov
xchg
shlb
notl
add
sub
add
movsb
in
push
fs
iret
test
ja
push
rol
ljmp
adc
cmp
dec
xor
xchg
iret
or
dec
xchg
jl
insb
call
mov
divl
out
mov
cmpsl
pop
push
enter
icebp
push
dec
xchg
push
and
mov
xor
xchg
cli
in
pop
cmpl
loope
dec
mov
mov
cltd
and
jecxz
cmp
and
jmp
pop
fisubs
mov
jne
mov
in
aas
jmp
inc
xchg
bound
stos
mov
xchg
mov
fimull
rclb
pop
xchg
add
icebp
add
mov
xor
mov
push
imul
push
xchg
add
imul
pop
sub
add
sbb
idivl
lcall
pop
jnp
outsl
push
movsb
sbb
or
sbb
aam
cmp
stc
in
mov
aam
xlat
int
nop
imul
inc
ljmp
push
and
push
xor
sarb
aaa
inc
or
add
inc
sbb
mov
jge
out
fsubr
mov
inc
in
inc
cli
jne
dec
rcr
jmp
rorl
sbb
addb
or
pusha
test
cs
sub
mov
mov
test
push
xchg
jecxz
jae
rcrb
fsubrl
hlt
lret
mov
pop
push
pushf
mov
xchg
and
and
jns
xchg
push
cs
mov
lock
fcmovnbe
sti
mov
mov
mov
push
jo
dec
jnp
test
mov
lret
pop
jecxz
push
mov
mov
mov
test
in
pop
mov
sub
mov
jecxz
or
xor
push
into
loope
pop
xchg
push
pop
mov
xchg
cmp
adc
sbb
mov
xchg
jns
das
cmpsb
cs
sub
leave
xor
outsl
pop
add
movsl
shrl
scas
imul
mov
mov
mov
push
jo
push
and
rorb
push
fs
pop
cs
bound
and
jecxz
in
mov
mov
imul
mov
stc
add
dec
lret
in
mov
and
popf
lock
jmp
and
cmpsl
les
dec
insl
test
mov
xchg
int3
scas
stos
adc
popf
pop
loopne
mov
xor
xchg
insb
inc
scas
gs
lahf
sbb
loop
call
pop
cmp
pop
jge
add
jmp
imul
pop
lret
daa
pop
lret
pop
xchg
pop
sbb
jno
jae
arpl
pop
pop
adc
adc
jb
mov
lret
popa
movsl
sbb
mov
dec
xor
sbb
sbb
daa
leave
out
aas
mov
test
jnp
pop
mov
fidivrs
or
out
xor
divl
loop
dec
cmc
adc
imul
sti
jp
pop
dec
aam
lcall
add
sti
xchg
cmp
cli
pop
jnp
sbb
mov
mov
ret
xchg
and
adc
lcall
arpl
fisttpll
push
push
movsl
lret
aas
ficoml
dec
loop
cmp
or
or
mov
lret
dec
xchg
dec
dec
jb
mov
stos
jmp
std
mov
daa
adc
pop
arpl
push
fs
push
out
cmpsl
imul
fcmovu
xchg
nop
xlat
jl
fnstenv
data16
sbb
xlat
and
into
scas
cmp
dec
popf
mov
mov
xor
es
js
inc
sbb
inc
out
rol
shrl
sbb
adc
xor
sub
lods
or
push
insb
loop
cmpsl
sbb
mov
sbb
push
cs
mov
adc
test
pushf
loopne
aam
scas
push
push
and
sbb
jg
add
loop
pop
xor
add
lret
sub
scas
add
xchg
daa
mov
addr16
jp
dec
aam
inc
jmp
out
jle
pushf
fnstenv
insb
push
ds
add
cmpl
push
out
sub
dec
pop
cmpsb
mov
bound
mov
sbb
call
out
xor
jmp
insb
int3
jmp
sti
fidivs
and
inc
mov
adc
dec
add
xchg
scas
fs
jg
out
pop
fimuls
dec
arpl
pop
or
xor
out
leave
and
test
dec
hlt
sub
add
daa
add
mov
dec
insl
cmp
lret
or
ret
sub
stos
sbb
rcrl
xchg
in
loope
jnp
into
mov
pop
test
inc
push
xlat
mov
call
outsb
adc
aaa
mov
adc
xlat
cwtl
jge
dec
fndisi(8087
cmc
and
pop
jg
xor
push
gs
jg
decl
sub
sbb
sub
iret
xchg
imul
and
ret
jno
xor
push
call
inc
aaa
sbb
xor
push
jnp
ja
cmp
xchg
push
sub
mov
xor
cmc
lods
adc
fxch
pop
add
ja
shrl
repnz
dec
ret
jns
and
cmp
jne
dec
jle
push
in
inc
outsb
inc
dec
aas
mov
and
push
clc
test
push
mov
xchg
sub
jo
clc
repz
sbb
dec
push
fdivr
stc
push
xor
cmp
mov
mov
repnz
lret
popa
dec
shlb
dec
dec
fdivrl
sbb
pop
cmp
jnp
int
shrb
and
in
and
incb
xchg
mulb
and
inc
jl
push
jmp
cmc
mov
fbld
xchg
ss
sti
aad
adc
stos
mov
inc
mov
xor
pop
fistps
out
jnp
mov
in
out
out
test
mov
or
out
mov
out
push
cwtl
mov
imul
xlat
sbb
decl
inc
fdiv
xor
arpl
adc
popf
lods
dec
sub
out
cmp
xor
xlat
push
push
pop
sbb
cs
xchg
pop
sbb
fbld
mov
sub
push
pushf
push
jnp
sbb
in
or
cmpsl
pusha
sub
lret
sub
data16
mov
pop
mov
jns
mov
sarl
jne
movsl
pop
enter
lcall
mov
lahf
cmp
mov
push
hlt
sub
loopne
push
and
das
std
icebp
sub
test
push
es
mov
jns
jmp
push
enter
mov
divb
fwait
xor
jbe
into
testl
sbb
xorb
lret
jae
std
mov
add
sub
cmpsb
adc
sahf
push
push
in
ud1
sti
enter
add
add
rcll
cmp
daa
inc
mov
enter
loope
scas
pop
call
xor
sub
mov
inc
cmp
btc
ds
xchg
mov
dec
lods
imul
xor
out
in
pop
cmp
lret
jl
cmp
xlat
je
fldenv
testl
imul
dec
mov
addr16
movsl
int3
sbb
pop
ds
test
es
mull
ljmp
dec
xchg
and
add
in
test
ret
or
loop
aam
add
in
test
pop
dec
xchg
movsl
or
dec
dec
jmpw
and
pop
hlt
mov
xor
aad
mov
lret
rorl
xchg
loop
or
neg
jbe
leave
loop,pt
enter
inc
xor
pusha
push
xchg
sti
inc
cmc
cli
mov
jnp
jae
outsl
fdivp
sbb
rcrl
or
pop
pop
cmp
pop
sub
dec
outsb
bound
cmp
ljmp
inc
jl
popf
mov
js
lods
cmp
ja
lahf
add
out
lea
inc
loop
mov
push
cs
es
mov
sbb
in
mov
xchg
sbb
and
xchg
mov
xor
dec
sahf
aas
ret
cmp
mov
add
mov
mov
inc
xchg
mov
test
outsl
popa
mov
sub
inc
xor
fcompl
or
mov
or
movsl
push
jecxz
pop
sahf
ret
sub
daa
inc
dec
cltd
jge
sbb
in
xchg
cltd
dec
push
inc
push
pop
out
push
lock
inc
mov
jnp
ds
mov
mov
jbe
shl
mov
insb
push
jmp
lock
lds
push
inc
jb
cmp
cli
push
pop
jecxz
jbe
gs
idivl
pop
lods
cli
inc
xor
jp
rcrb
outsl
cmp
das
xor
inc
adc
sub
sbb
aas
into
xor
mov
xchg
fbld
or
jecxz
movsb
jo
lock
mov
and
jge
imul
cmpsl
repz
mov
shll
xchg
in
mov
andb
or
sub
mov
xchg
cmpl
hlt
movsl
pop
loop
icebp
cmpl
inc
test
xor
adc
or
test
pop
lods
sbb
shrl
jne
fcompl
dec
add
adc
mov
lods
push
add
popf
cmp
das
xchg
mov
push
rorl
xchg
xchg
scas
lahf
mov
adc
dec
push
loope
lcall
stos
xor
dec
out
lret
jmp
lcall
arpl
adc
sbb
sub
jno
pop
pop
mov
mov
hlt
cld
push
aas
jnp
iret
lods
test
sub
add
outsl
cmpsb
ja
xchg
loope
xchg
mov
scas
dec
shll
xchg
dec
cltd
imul
or
ror
mov
dec
popf
mov
pop
inc
out
js
lods
mov
popf
push
fldcw
dec
ror
popa
dec
popa
xchg
adc
loopne
movsb
pusha
jg
mov
pop
jl
cmp
sub
push
add
xor
iret
xchg
ror
mov
fidivl
testb
test
adc
sub
insl
ret
and
shrl
or
cmpsb
aas
ret
inc
subb
test
push
shlb
dec
icebp
pop
pusha
inc
sbb
test
decb
mov
cmp
in
mov
bound
gs
fsubrs
loope
mov
pop
add
fbstp
sbb
bound
shl
movsb
push
cmp
gs
outsl
or
testb
mov
orb
inc
ret
dec
lea
inc
sbb
bound
push
mov
jnp
jae
push
inc
movsb
dec
sbb
and
jecxz
scas
inc
lods
out
pop
int3
and
lret
ret
adc
enter
mov
in
push
mov
mov
cmp
out
and
lods
in
jecxz
push
call
xor
ss
call
or
add
sbb
aam
or
jb
xor
mov
or
jne,pt
test
xchg
js
mov
mov
in
push
sahf
enter
jno
jno
stos
jne
mov
lahf
loope
imull
testl
xor
push
test
in
out
dec
sub
xchg
dec
jb
add
push
insb
setno
pop
lods
push
or
in
inc
cmp
and
cs
sbb
sub
fisttpl
scas
mov
jnp
xorl
xchg
push
push
inc
sti
add
shll
ret
sbb
icebp
cltd
add
xchg
jecxz
das
mov
orl
inc
mov
ja
mov
js
push
push
mov
jecxz
pop
mov
jnp
imul
mov
dec
xor
into
lods
ds
push
mov
rclb
xor
cvtdq2ps
adc
sti
mov
and
mov
xor
mov
loopne,pt
sub
dec
andl
cmp
push
jmp
mov
jle
push
sbb
pop
movsl
jns
loope
dec
insl
sbb
push
lret
mov
jo
aam
dec
mov
mov
jno
in
sbb
jae
xchg
shrl
ds
outsb
adc
das
cltd
pop
je
jb
aad
pop
bound
jae
data16
jmp
enter
ret
cmpsb
push
adc
into
adc
shr
fneni(8087
das
fxam
dec
out
lret
cmc
out
jg
das
adc
dec
dec
loopne
fdivp
movsb
and
push
dec
sti
hlt
pop
leave
shr
inc
and
sbb
sub
sbb
sub
mov
dec
cmp
inc
jns
rolb
stos
lret
les
or
sub
sub
xor
lods
outsl
mov
cld
xchg
mov
and
leave
ficoms
lret
incl
bound
daa
cs
leave
lret
push
push
repz
stc
add
frstor
push
mov
dec
insl
filds
mov
mov
xor
adc
ret
out
jge
dec
lahf
dec
sub
dec
les
mov
lret
jno
arpl
mov
mov
pushf
mov
sbb
roll
jecxz
popf
ljmp
mov
dec
push
dec
sbb
loope
sub
mov
int3
stos
xor
sbb
add
in
jnp
loope
mov
addr16
mov
jo
lret
xchg
shl
mov
cs
push
aas
lods
imul
jbe
add
lcall
adc
pusha
adcl
dec
out
pop
in
movsl
mov
mov
fstps
in
aas
mov
lods
push
add
jae
add
xor
pop
push
sbb
rcr
ljmp
dec
sbb
jle
aad
loopne
rorb
mov
and
adc
xor
adc
aas
addr16
mov
xchg
mov
pop
mov
sbb
inc
leave
mov
push
xchg
sbb
clc
ja
pushf
loopne
sub
popf
dec
xchg
cmpsl
xchg
mov
mov
cmpsl
orl
aas
shlb
and
adc
pop
test
test
pop
dec
test
inc
pushf
ds
js
fcomps
test
loope
lcall
inc
popf
jbe
outsl
ja
xor
xorl
dec
arpl
aaa
mov
pop
scas
dec
vmovmskps
arpl
test
mov
and
jae
and
jbe
xchg
pop
push
xor
rcr
or
inc
jae
mov
xor
fnstcw
mov
mov
icebp
fisubl
daa
jns
mov
adc
dec
jecxz
call
dec
jp
mov
inc
es
inc
adc
outsb
decl
rorb
and
mov
xchg
cmc
jno
in
inc
shrb
inc
call
jbe
inc
fstps
shrb
repnz
fdivl
push
mov
stos
add
orl
jno
adc
test
shl
dec
pop
push
sbb
mov
add
shl
jno
ss
test
stc
test
fwait
repz
sub
cmp
jl
dec
outsl
cmc
clc
pusha
arpl
xchg
cli
jl
rorl
sub
ret
stc
xor
xchg
adc
mov
sub
into
xchg
jae
add
pop
jecxz
push
add
fcomps
and
nop
ror
les
adc
pusha
ret
sub
mov
push
int3
cs
fsubs
dec
inc
push
mov
pusha
sub
dec
jns
pop
sub
mov
xor
repz
pop
jno
js
cmc
adc
hlt
orb
andw
cli
and
xchg
xchg
inc
ret
insl
jge
leave
pushl
cltd
popa
inc
out
cmp
out
pusha
shll
mov
aaa
adc
addr16
add
adc
bound
push
jno
loop
je
cmp
dec
bound
fisttpl
addb
or
icebp
add
int3
aas
xor
aam
sub
std
stos
std
test
test
cmpsb
imul
jecxz
or
xor
pusha
push
test
mov
sbb
shrb
push
imul
arpl
push
xchg
adc
jnp
xchg
mov
fnsave
jne
shlb
cmp
cwtl
push
add
fildl
mov
lcall
orb
push
out
out
test
xchg
insb
pop
mov
mov
aas
adc
and
adc
test
xchg
pop
pop
inc
push
inc
inc
rorl
cli
movsl
jecxz
arpl
push
js
test
pushw
pop
or
dec
cmp
push
push
frstor
into
mov
lods
sub
stos
adc
mov
mov
bound
leave
dec
mov
jno
aas
inc
mov
cmp
adc
or
or
mov
fstpt
bound
inc
dec
repnz
int
and
popa
pop
das
jge
or
in
and
mov
rcll
mov
loopne
hlt
mov
pop
cmp
sub
dec
daa
sti
sahf
imul
gs
out
adc
jnp
or
lcall
mov
fisttps
push
dec
xlat
bswap
cmp
inc
imul
ret
mov
jns
dec
jnp
mov
jno
mov
dec
jecxz
addr16
lods
mov
or
sbb
inc
shlb
imul
out
jo
xor
cld
jge
fcoms
mov
sbb
outsb
push
inc
fisttps
mov
scas
mov
daa
lahf
stos
daa
insb
mov
xchg
push
ret
fwait
jne
xor
mov
push
dec
cmp
iret
and
icebp
test
inc
cmp
in
in
jb
ds
cmp
insl
inc
dec
outsb
ss
mov
sbb
cmp
mov
pop
xchg
pop
sub
push
dec
adc
pushf
push
xchg
mov
nop
pop
xor
mov
stos
sarl
jb
mov
inc
rcll
pop
mov
shlb
js
inc
aam
cmpb
add
mov
fimuls
xor
fstpl
push
pop
xor
adc
and
hlt
push
imul
inc
xchg
jmp
inc
xlat
out
mov
sbb
lret
out
je
faddp
inc
inc
sub
pop
popa
pushf
call
insb
pop
mov
loope
cmp
ret
add
xor
adc
jmp
sbb
jns
xor
lret
xor
mov
mov
aam
dec
js
jno
adc
movsl
add
mov
mov
mov
sub
movsl
dec
dec
outsl
fsubrl
xlat
adc
leave
dec
pop
arpl
bound
scas
ljmp
cwtl
dec
mov
fistps
or
fisttpl
xchg
ret
or
popa
jmp
dec
add
std
movsb
fildl
sub
iret
jmp
jae
sub
dec
adc
cmp
sub
andb
mov
jl
stos
call
xor
mov
call
mov
pop
fs
addr16
popa
std
cs
fs
jle
push
mov
in
ss
bound
xlat
scas
adc
movsl
bound
scas
loop
inc
jb
lods
clc
insl
or
hlt
ja
mov
push
adcl
out
xchg
clc
lods
inc
inc
mov
xchg
mov
cmp
mov
push
jns
push
ret
in
inc
repz
and
and
jo
dec
pop
outsl
inc
push
cmc
and
dec
dec
aam
xchg
jl
sbb
xchg
pushl
jns
xchg
dec
lods
popa
push
cmp
push
dec
loope
push
lods
dec
sub
push
out
xchg
lret
call
push
push
and
decb
or
or
mov
stos
push
out
mov
fstpt
pop
pop
pop
pusha
or
mov
jecxz
fstps
js
adc
sub
adc
leave
xor
adc
cmc
inc
inc
mov
pop
lahf
clc
aaa
lock
mov
or
int
je
mov
sti
jbe
sbb
push
stos
aad
add
cmp
mov
sbbl
push
out
jmp
pop
popa
mov
dec
cld
push
pop
popa
ret
fwait
pop
icebp
inc
cmp
mov
jo
inc
repnz
push
arpl
xchg
inc
xlat
mov
sbb
mov
dec
add
sub
pop
addb
xor
shlb
aas
inc
je
icebp
loope
loope
jnp
mov
pop
sub
rol
mov
inc
andl
pop
inc
xchg
cmc
imul
cli
inc
xchg
ds
mov
xchg
mov
dec
mov
outsl
scas
scas
sbb
or
mov
sub
fcoml
cmpsl
lods
or
push
gs
stos
mov
jmp
pusha
js
mov
ficomps
mov
pop
pop
aad
mov
es
pop
outsb
fwait
out
push
mov
sub
fmull
and
push
in
adc
jnp
fisttpl
call
dec
outsl
test
leave
xor
into
sub
fdivrs
jns
paddb
add
loope
cmp
pop
xchg
inc
add
sub
mov
js
insl
popa
push
ja
push
rcl
dec
dec
and
sbb
mov
insl
stc
lods
push
call
cs
test
mov
dec
pop
aad
pop
aam
xchg
popa
inc
xor
pop
sub
ss
in
jmp
push
and
out
das
pop
mull
out
in
packsswb
mov
dec
mov
mov
xchg
xlat
lret
push
push
lret
pop
outsb
das
dec
out
pop
sbb
xchg
ljmp
test
xor
rcl
adc
sub
cld
aad
and
mov
rep
int
repz
sub
cli
insb
sub
add
sub
shlb
ret
and
or
xchg
lods
out
adc
dec
and
loopne
test
push
fistl
mov
pop
jle
insb
xchg
push
cs
mov
dec
dec
cwtl
jnp
hlt
or
ja
aam
jbe
or
mov
pop
lods
jl
cmp
imul
sbb
and
jne
aad
hlt
add
fcomi
fcoms
jbe
fadds
lods
ljmp
pop
cmp
mov
pop
popf
and
pushf
push
lcall
lea
push
pop
enter
jp
cwtl
dec
js
mov
cli
push
add
and
or
inc
jnp
cs
jnp
add
push
ja
jo
call
adc
out
fiaddl
push
or
xlat
push
mov
incl
and
sbb
ret
dec
pop
bound
scas
iret
popa
cmp
sbb
enter
dec
mov
mov
lahf
or
cmp
data16
stc
sub
aaa
rorl
adc
push
xchg
rcrb
in
fdivrs
enter
pop
ja
mov
push
andl
call
mov
mov
xor
mov
lds
es
jl
aaa
sub
jbe
xchg
sub
test
mov
sbb
xchg
pushf
mov
hlt
shrb
inc
sbb
push
mull
mov
cli
sarb
mov
sbb
and
jecxz
or
push
xchg
mov
jp
dec
outsl
stos
sbb
loopne
lods
mov
shr
jmp
sbb
dec
mov
dec
rclb
roll
imull
push
cli
and
push
xor
ret
xor
sti
xchg
and
mov
div
or
mov
pop
pop
sub
mov
jb
push
hlt
nop
ss
dec
lods
add
mov
mov
xchg
loope
hlt
std
add
lcall
je
cmpsl
rcl
xchg
daa
xor
lret
inc
test
pop
mov
adc
sahf
das
adc
jo
imul
sbb
inc
test
es
xchg
shll
pushf
xor
xor
lcall
jns
push
sbb
daa
lods
stc
imul
mov
gs
ret
out
sub
inc
jns
inc
pop
and
push
sarl
int3
push
hlt
test
add
mov
cmpsb
jno
dec
jge
sbb
js
std
dec
push
cmp
shl
push
add
add
std
jnp
jnp
mov
arpl
icebp
dec
xchg
pusha
inc
sbb
xchg
jbe
sbbb
dec
fcompl
fsts
sub
loopne
push
pop
mov
pop
leave
xchg
lret
dec
test
cmp
mov
cmc
mov
into
jns
mov
push
andb
call
sti
fisubl
daa
xor
dec
int
push
data16
scas
fs
xchg
jge
mov
jno
aad
push
jnp
mov
dec
fdivr
in
setno
mov
pop
and
mov
stos
sbbl
lret
dec
jno
jnp
add
sbb
xchg
sub
adcb
cwtl
arpl
push
mov
daa
cmp
mov
inc
out
loopne
outsl
cli
pop
cmp
loope
bound
sub
cs
fdivrs
mov
stos
push
andb
ret
je
xchg
dec
or
mov
or
in
or
in
or
in
or
in
or
mov
cmp
lds
jo
mov
mov
les
insb
jle
dec
xchg
sbb
dec
or
in
in
add
popa
sbb
imul
jbe
dec
push
outsb
shlb
jae
jp
mov
sub
mov
test
jp
lret
push
dec
loop
in
pushf
inc
dec
les
out
addl
adc
or
add
pushf
mov
pop
stos
jo
out
add
loop
lods
cld
hlt
cmpsb
mov
call
inc
aas
mov
dec
jmp
mov
jg
xor
ss
pop
inc
adcl
inc
sbb
sub
call
insl
scas
enter
lods
xchg
test
cld
shrl
sbb
dec
aas
imul
adc
mov
push
xchg
inc
cmp
test
in
out
dec
loope
mov
rolb
push
lret
ret
in
jnp
add
add
mov
mov
into
int3
into
or
mov
std
in
cmc
orl
outsb
test
aam
mov
in
out
cmp
rorl
cmp
push
movsl
ss
jl
jmp
sub
js
shrb
sti
jno
push
pop
in
rolb
stc
sub
pop
in
cmpsb
enter
hlt
jge
xchg
push
mov
cmp
xchg
adcl
data16
jne
icebp
gs
test
popa
push
das
xchg
sub
sbb
cmpb
shrl
in
test
aad
sbb
fildl
sarl
out
pusha
mov
out
sbb
test
jns
ss
lret
push
mov
jecxz
aas
jecxz
stos
dec
mov
pop
sub
arpl
xor
outsl
dec
aad
test
scas
mov
repz
sahf
insl
push
repz
and
pop
sar
repz
loop
test
adc
out
hlt
test
cmpsl
jbe
sarb
mov
dec
pop
xchg
fiaddl
pop
mov
adc
mov
popa
pop
inc
or
xchg
outsb
push
mov
clc
out
sbb
xchg
xchg
rcll
sbb
shl
test
jle
jns
dec
bnd
mov
jle
sub
divb
dec
mov
js
or
cs
inc
cmpsb
sbb
push
mov
test
pop
mov
loope
push
cmp
dec
jb
sar
mov
push
mov
push
lods
sub
nop
sbb
push
mov
sarl
int3
sub
dec
pop
dec
rcrb
rcrb
out
jle
std
fsts
mov
lret
xchg
movntq
lret
adc
paddsb
xchg
mov
dec
dec
xor
ss
push
push
or
mov
jnp
mov
pusha
xchg
ud2
and
and
rcr
push
jno
and
lods
mov
adc
loop
stos
sti
mov
out
adc
test
pop
adc
fimull
popa
je
int3
aaa
jge
xor
inc
outsl
mov
movsb
mov
lcall
sub
dec
sbb
add
daa
mov
cmp
ret
adc
bound
in
daa
call
cmc
enter
mov
dec
cmp
inc
push
outsl
ret
in
call
shrl
push
dec
je
clc
fisttps
add
dec
bound
sbb
push
outsl
cli
dec
push
mov
scas
mov
loopne
jno
cltd
pop
loop
xchg
xor
rcrb
out
mov
sahf
sub
mov
stc
xchg
das
xchg
sub
mov
mov
mov
fsubs
push
add
mov
rcll
mov
xchg
stos
add
or
ret
dec
leave
in
imul
adc
shll
jecxz
sub
jns
mov
enter
shlb
push
pop
xlat
sub
xchg
inc
shlb
push
jle
leave
add
inc
jnp
out
ret
insb
fistpll
push
mov
std
and
fwait
enter
fnsave
push
adc
jge
repz
adc
clc
mov
jbe
mov
js
loope
nop
pop
fstpl
xchg
outsb
loope
push
pop
xor
dec
push
mov
fdivrs
lret
sub
adc
pop
inc
pop
dec
test
scas
inc
aad
in
incl
push
lock
xchg
aad
jmp
out
enter
shrb
bound
pop
and
jae
push
xchg
cs
fadds
xor
sbb
dec
out
lahf
and
and
sub
push
outsl
mov
xchg
pop
xchg
lret
push
fisubrs
movsb
xchg
andb
outsl
sub
lds
ret
or
mov
cmp
mov
pop
pop
inc
xchg
push
call
ljmp
mov
addr16
loopne
loop
inc
in
adc
dec
pop
dec
shl
imul
push
sti
xlat
cmpsl
dec
xchg
fadds
aaa
sub
pop
adc
push
mov
inc
addl
xchg
inc
loop
lea
or
int
mov
xlat
inc
insb
sbb
cmp
xchg
mov
cmpsl
enter
xor
xchg
mov
xorb
ret
ja
test
sub
hlt
test
adc
mov
enter
push
je
xor
addr16
rcr
cmpsb
sbb
popa
rol
jno
pop
or
dec
mov
xor
out
nop
mov
xor
add
cltd
cld
daa
call
push
dec
imul
cmpsl
push
rcr
pop
out
pop
aam
loopne
xchg
xchg
leave
add
lea
inc
lds
or
mov
dec
dec
shl
or
mov
pop
shl
xchg
mov
outsl
out
add
dec
push
dec
add
scas
push
xchg
xchg
jno
iret
and
add
mov
mov
cmp
rcrb
lods
mov
imul
mov
mov
sbb
jge
mov
push
test
test
add
inc
bound
adc
mov
jmp
mov
mov
mov
dec
adc
cmp
repz
cmp
xor
add
cmp
mov
adc
push
scas
or
add
or
inc
add
cmpsb
ds
add
xor
pmaxub
ss
or
sub
mov
aas
inc
mov
mov
mov
xlat
hlt
xor
in
pop
pop
sub
arpl
test
call
aas
pop
pop
push
pop
enter
loope
adc
xchg
mov
push
stos
inc
inc
pop
adc
pop
outsb
shll
and
inc
mov
or
pusha
dec
js
add
xor
mov
mov
mov
cmpsl
clc
add
pop
rclb
and
out
add
sub
pop
into
dec
imul
dec
mov
mov
add
xlat
js
add
out
scas
push
aad
icebp
rcr
jp
push
push
sbb
xor
add
sarb
fsts
push
jp
test
xlat
sbb
daa
sub
cmc
andl
cmp
sub
lret
xor
add
bound
or
dec
dec
cmp
adc
ds
jnp
and
sub
lods
push
pop
loope
push
shrb
mov
mov
rolb
mov
hlt
lods
scas
ret
iret
push
inc
rolb
push
rol
sub
jecxz
cmp
shll
std
stc
mov
fnsave
insb
mov
mov
mov
add
je
push
pop
movsb
sbb
cmc
pop
cmpb
pop
push
fwait
pop
cmp
sbb
jge
xchg
sub
mov
test
sub
hlt
test
pushf
mov
mov
dec
fmuls
fucom
enter
mov
in
ret
pop
dec
xchg
mov
addr16
sub
in
fsubl
cli
inc
jecxz
enter
dec
mov
loopne
test
mov
rcl
sbb
dec
mov
push
fistpl
ja
adc
xchg
aaa
hlt
leave
dec
mov
dec
in
ljmp
sbb
dec
mov
imul
bound
dec
pop
stos
fcompl
and
daa
aaa
and
pop
ret
dec
ja
cmp
loope
fdivr
lahf
adc
fwait
mov
adc
dec
mov
ja
mov
addr16
and
mov
mov
fbld
mov
aaa
mov
jb
sbb
sub
add
adc
loop
sbb
aas
inc
mov
push
pop
adc
scas
lcall
stc
xchg
mov
push
mov
dec
or
test
loopne
lods
cmpsl
out
cmc
aad
dec
cs
or
jecxz
rcl
imul
mov
insb
push
sbbl
mov
fs
mov
lods
push
mov
mov
add
fbstp
fcompl
dec
add
mov
scas
cs
scas
jecxz
movsl
mov
lret
add
push
xor
and
outsl
and
movsb
sub
imul
arpl
pop
outsb
sbb
jno
mov
cmp
ds
enter
or
mov
mov
sub
jge
pop
or
cmpsb
inc
cmp
sub
dec
mov
adc
out
xor
mov
outsl
inc
dec
mov
sub
inc
outsb
fsubrp
inc
or
adc
and
mov
add
sbb
inc
inc
jp
sub
xor
rcrl
push
lret
xor
dec
add
jno
mov
mov
sub
dec
push
shll
mov
data16
sub
aam
scas
dec
leave
dec
orl
loopne
pop
and
push
ficomps
cmp
rcll
mov
sub
pop
fs
pop
mov
push
mov
rcll
scas
add
cltd
mov
cmpsl
adc
fldenv
mov
lret
cmp
jmp
inc
imul
leave
mov
cmc
jecxz
shll
xchg
push
cli
leave
popa
add
call
rep
arpl
cltd
mov
repz
iret
jnp
push
rcrb
lds
push
movsl
inc
push
lahf
mov
in
dec
dec
scas
aam
pop
inc
in
push
ret
push
rep
in
leave
xchg
das
adc
inc
push
xlat
xchg
inc
ds
jns
xrelease
push
jp
push
push
adc
outsl
mov
outsl
cmpsb
pop
jl
inc
sahf
mov
pop
sti
pop
dec
fdivr
fwait
es
dec
pop
or
call
mov
dec
mov
cld
test
pop
dec
out
xchg
out
or
pop
rorl
loopne
cmp
adc
jg
lret
xchg
jno
inc
stos
dec
scas
adc
cmp
iret
btr
dec
decl
xor
lcall
sub
push
inc
xor
test
dec
popa
adc
addb
sti
jg
cmp
add
stos
add
shrb
je
push
dec
push
repz
jb
loopne
outsb
fistl
sbb
mov
push
or
data16
and
fsubr
jbe
adc
out
lods
popf
add
dec
repz
push
cmp
loop
push
xchg
sub
mov
ja
hlt
mov
xchg
mov
push
cmp
cwtl
push
mov
fsub
shlb
dec
scas
mov
mov
xchg
add
jge
mov
inc
bound
and
addr16
or
jl
xor
in
pop
scas
lods
or
outsl
push
popf
or
push
dec
ljmp
mov
cs
aad
loop
xor
mov
popf
push
jle
xor
dec
sbb
pushf
mov
mov
push
je
adc
inc
inc
scas
je
mov
pop
add
and
pushf
loope
mov
jnp
dec
push
arpl
pop
stos
ret
ret
jmp
xor
pusha
lahf
push
shll
pop
inc
sub
cld
sbb
clc
push
inc
inc
adc
mov
sbb
outsl
or
jnp
fmull
mov
lret
stos
jle
mov
outsl
popf
movsb
xor
bound
xor
daa
outsl
xchg
mov
out
inc
jle
xor
movsb
das
cmp
or
jp
pop
push
inc
mov
xchg
jecxz
inc
push
lahf
leave
mov
dec
divb
out
dec
stos
xorl
pop
inc
mov
add
dec
loope
mov
jecxz
into
rcr
scas
test
insb
outsb
int
sub
sub
daa
aad
jp
dec
adc
xchg
cmp
loop
loope
push
fcomps
inc
mov
mov
jle
lods
sub
push
scas
test
jns
add
imul
sbb
scas
sbb
call
xor
sub
out
inc
fs
call
jg
jmp
push
mov
push
mov
scas
mov
push
pushf
daa
inc
sub
cli
xchg
push
call
das
out
nop
dec
inc
sub
lret
into
stos
dec
arpl
addr16
jmp
push
jb
insl
aam
scas
or
add
xor
sarb
or
sub
dec
xchg
pop
jns
xlat
inc
cmp
in
nop
jbe
cmp
pop
je
pop
fidivrs
daa
sti
jae
ljmp
clc
fs
sarl
ljmp
jmp
fwait
cmpsb
mov
jae
lods
cld
jl
xchg
mov
jb
scas
dec
aas
mov
stos
sti
std
aas
adc
clc
and
xchg
lock
insl
popf
cmp
add
ja
inc
adc
enter
inc
in
es
cmova
jl
mov
pop
push
clc
jae
or
xchg
add
push
mov
dec
dec
nop
sub
adc
mov
pusha
testb
add
mov
mov
adc
push
sahf
movsl
sub
dec
jp
or
cltd
out
push
and
jb
sbb
cmp
mov
sub
inc
stos
bound
add
sarl
push
std
fsts
sbb
int3
cmp
dec
jnp
or
in
add
out
ljmp
sbb
sbb
or
fs
sar
jns
gs
pop
mov
sbb
jns
or
add
int3
push
sub
xlat
or
adc
daa
fucomi
xchg
lea
ret
sti
scas
inc
xchg
call
mov
int
mov
pop
cld
dec
scas
xchg
xor
dec
rcl
ds
inc
mov
and
dec
adcl
fwait
jge
xchg
xchg
std
mov
aaa
jg
orl
add
mov
xor
out
jge
jl
sbb
adc
dec
jmp
jne
fcoml
and
xor
pop
add
push
mov
pusha
jl
xchg
add
xchg
shl
std
std
inc
sub
pop
lods
mov
jp
fldl
out
adc
movsl
jno
inc
popf
enter
out
dec
cmp
inc
test
lret
mov
jo
push
pop
push
shlb
mov
outsl
scas
pop
add
test
pop
insl
push
sub
ss
into
out
sbb
gs
push
cmpsl
xchg
lock
sbb
fcmovnb
lret
jb
stos
and
add
cmp
inc
aad
or
dec
lods
jae
lods
pop
sbb
pop
ljmp
dec
dec
mov
dec
test
lahf
mov
push
xchg
adc
xor
dec
cmpsb
pop
pop
inc
xchg
imul
mov
aaa
das
shrl
sbb
les
or
stos
int3
sub
jge
cmp
ret
call
rorl
xchg
adcb
sbb
jge
jno
sub
push
or
leave
je
enter
adc
call
je
popa
movsb
dec
movsb
sub
xor
enter
dec
or
jbe
xchg
loop
and
mov
icebp
and
int3
sub
loope
fldcw
insb
das
aam
pop
adc
into
ret
jg
cld
cltd
pusha
jge
xor
fwait
pop
lock
xchg
lock
dec
sbb
or
insb
std
movsl
or
push
aas
and
jmp
jb
pop
jne
jg
mov
mov
jge
mov
lea
adc
dec
pop
in
leave
ljmp
imul
xchg
xor
fisubrs
cltd
ljmp
js
cwtl
sub
inc
and
insl
cmp
mov
les
lret
push
dec
fistpll
test
sbbl
mov
ds
dec
mov
add
mov
mov
or
pop
sub
pusha
sub
in
mov
sti
push
test
lock
pop
mov
adc
pusha
cmpb
jno
push
mov
in
mov
and
inc
jp
add
mov
imul
cmp
and
push
add
fistpll
pop
frstor
in
enter
subb
cli
cmp
movsb
call
sub
cmp
imul
loop
push
stos
addr16
out
xchg
pop
out
pop
stc
jecxz
xchg
adc
jmp
adc
les
aas
dec
fs
scas
add
rcrl
inc
xor
pop
repnz
add
inc
jp
and
test
xchg
loop
ljmp
mov
dec
outsb
inc
dec
pop
fdivr
push
rcrb
push
andb
ss
sbb
aas
popa
inc
jmp
xlat
jno
push
ret
pop
pushf
mov
inc
notb
lods
es
push
push
xchg
cmpsb
xchg
loopne
fsubl
mov
or
or
ljmp
jno
ret
mov
lret
xor
mov
dec
and
mov
sarb
push
dec
sarl
adc
sub
push
orb
mov
jg
sub
repz
jo
and
jo
outsl
dec
stos
je
pushf
ss
in
aas
loope
adc
pop
into
push
jae
mov
movsl
popa
inc
dec
xor
insl
inc
jne
inc
pusha
bound
sbb
mov
adc
cmc
sti
loope
clc
mul
dec
mov
pop
fisubrl
or
fnstenv
movsb
push
fisttpl
push
fwait
pop
mov
gs
dec
iret
inc
xchg
addb
hlt
lret
mov
xor
sub
aad
push
int3
mov
std
and
mov
outsl
into
sub
out
sub
in
pop
notl
repnz
jecxz
or
add
xor
xchg
cmp
pop
gs
dec
cmp
pop
loopne
cmp
sahf
mov
push
cmp
je
xor
pushf
push
test
push
mov
mov
call
into
insl
mov
iret
cmc
xor
out
jp
es
xor
mov
int
mov
push
sbb
sub
pop
jl
push
dec
mov
mov
fstpl
push
fisttps
pop
loope
jecxz
outsl
pop
xor
jns
inc
jae
push
jb
nop
pop
add
sub
push
or
xor
mov
jnp
hlt
repz
sub
sbb
lahf
sbb
ret
jns
out
sbb
sbbb
faddl
push
arpl
repnz
jge
shlb
aad
mov
pop
sub
xchg
popf
inc
mov
push
cmp
nop
inc
gs
sub
sub
es
imul
xchg
aam
adc
mov
fdivl
shrl
and
sub
push
ret
fstpt
fwait
and
int3
jmp
push
pushf
inc
sub
push
cmp
and
bound
leave
dec
mov
dec
mov
shll
xchg
mov
cmpsl
call
fisttpl
dec
add
push
cmp
xchg
cmp
loope
cld
pushf
adc
jb
mov
sub
pop
or
mov
daa
aas
fistpll
inc
jbe
xchg
push
pop
loope
inc
and
idivb
inc
pop
aas
sahf
movsb
mov
pop
adc
push
jl
add
dec
jmp
popf
and
movsl
fcoml
fstl
pop
stos
ds
cltd
or
daa
xchg
adcb
ret
inc
es
mov
or
jns
push
int3
std
enter
sbb
inc
ljmp
pop
sub
data16
in
cld
sub
dec
mov
stos
xor
pop
lcall
popa
mov
arpl
es
