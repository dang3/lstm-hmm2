sbb
add
mov
pushf
mov
add
sahf
cmpb
data16
xchg
mov
mov
fsts
into
jmp
push
mov
mov
jp
test
jg
adc
movsl
and
aaa
cmpb
inc
push
push
int3
mov
stos
pop
pop
pop
push
push
adc
xor
push
lret
push
inc
and
or
cwtl
cmpl
inc
std
stc
push
mov
aaa
mov
pop
xchg
jmp
pop
dec
xacquire
inc
mov
lret
or
ficomps
inc
test
pusha
adc
push
in
in
int3
xorl
xor
inc
pop
lfs
shlb
lahf
xchg
rcll
pop
dec
cmp
out
xchg
jp
adc
xlat
jg
leave
push
mov
xor
push
in
pop
popa
aaa
pushf
adc
sbb
jp
test
daa
je
sti
mov
xlat
mov
sub
inc
adc
int3
cmp
cld
inc
cli
cmpsl
rcr
cmpsl
push
jmp
jbe
ret
repz
scas
push
gs
dec
jecxz
std
fisttpl
sub
pop
hlt
aam
mov
cmp
aaa
mov
mov
mov
fcom
lock
lret
clc
out
jnp
xchg
adc
sahf
cmp
mov
pop
cmpsb
sub
mov
jmp
cwtl
lock
lock
repnz
mov
arpl
aaa
jns
jmp
je
mov
mov
rorb
dec
rcrb
adc
je
jmp
pop
jg
xchg
sti
push
jo
call
jle
mov
addr16
stos
adc
inc
data16
cs
out
cltd
cmp
pop
dec
dec
push
mov
jle
xchg
outsl
aam
test
add
test
sbb
or
dec
mov
ror
and
sub
adcb
push
mov
sbbl
cld
fsubrl
repnz
out
push
push
fistpl
aas
loope
mov
mov
push
dec
lock
ds
add
fs
loope
aaa
aas
mov
stc
xchg
rcl
pop
add
das
jno
clc
and
in
enter
xlat
lahf
out
insb
fimull
add
stos
mov
mov
ss
inc
mov
in
cmpsb
jo
dec
pop
ja
lcall
fldcw
jb
cld
jbe
les
mov
mov
mov
ss
daa
loop
jo
xchg
xchg
cmp
mov
and
gs
jl
or
fisubrs
dec
xor
mov
push
arpl
sbb
nop
sbb
jg
bound
insb
fsub
adc
in
pop
into
mov
inc
mov
push
lcall
rcl
test
push
mov
add
nop
inc
insb
xchg
jbe
pop
mov
iret
jbe
sub
pusha
rcrl
xor
dec
out
or
in
mov
inc
inc
adc
lret
outsl
fnsave
aaa
jbe
lods
mov
mov
mov
insl
and
mov
xor
fldl
es
xchg
pop
call
mov
sti
cmp
je
sbb
popa
jnp
negl
into
xchg
jmp
jle
inc
js
pop
cwtl
jns
in
inc
or
cmc
xchg
ret
add
adc
aad
mov
sub
sbb
out
or
or
out
std
xor
lods
inc
decb
mov
sbb
in
pushl
sti
lods
clc
sub
jge
das
or
test
cmp
inc
insb
popa
mov
cmp
mov
pop
lahf
dec
xchg
fnstenv
dec
stos
add
sbb
jmp
popf
stc
inc
xchg
cmp
movsb
or
hlt
mov
sbb
xchg
cld
xchg
jmp
scas
fidivrl
xor
pusha
rolb
jae
sub
rorl
aaa
jno
out
mov
sbbb
insb
popf
aas
push
insl
fs
clc
out
addl
out
sbb
push
push
sbb
sahf
or
test
add
mov
jecxz
jb
sbb
xchg
push
push
cmp
or
sbb
aas
xor
cmp
in
jne
push
ret
add
mov
es
pop
ja
mov
stc
jae
sbb
in
stc
inc
int3
mov
mov
push
mov
dec
push
mov
stc
repnz
mov
loop
add
mov
pushl
fsts
dec
out
or
push
sbb
inc
mov
enter
fcmovne
daa
lcall
ja
push
test
imul
add
push
jle
push
mov
or
testb
push
fdiv
in
push
addr16
outsb
adcb
adc
or
fdivrl
insl
xchg
jecxz
xchg
jl
into
cmp
cmp
sub
cli
push
daa
pop
xchg
hlt
pop
push
mov
in
sbb
lods
popa
mov
out
xchg
stos
pop
mov
cmc
loopne
sub
bound
adc
xchg
fsub
pop
inc
pop
mov
mov
dec
jbe
xchg
jp
cmpsl
inc
dec
cli
cmp
iret
or
push
jle
xchg
adc
je
sbb
jnp
dec
push
xor
adc
hlt
les
addr16
in
out
push
out
testb
aam
shl
pushf
nop
mov
xchg
and
bound
out
ljmp
sahf
pop
jp
inc
ficoml
aas
or
adc
in
pop
and
inc
or
mul
cmpsb
push
and
cs
push
cmpb
pop
mov
push
addl
mov
sbb
pop
mov
test
mov
inc
cmc
add
sti
movsb
push
sbb
mov
push
fistpll
test
or
inc
adc
lods
call
push
mov
in
cld
jge
test
add
jae
push
out
push
inc
mov
cmp
popa
jno
jge
mov
mov
ret
ficompl
add
aas
dec
leave
sub
xor
mov
jnp
loop
dec
repnz
pop
nop
aam
scas
sub
sbb
push
ljmp
stos
cmpb
jmp
sub
mov
fs
dec
das
mov
int3
push
pop
out
ret
arpl
mov
daa
add
aad
xchg
fidivs
inc
inc
push
testl
aam
mov
fsubl
int
pop
sub
mov
lcall
clc
and
sub
xor
jae
nop
loopne
push
out
or
imul
adc
add
jp
jp
push
ret
orl
pop
js
cld
fs
je
ljmp
or
ja
in
rorl
jp
pop
ret
rcll
sarb
jbe
xlat
mov
and
loope
loopne
xchg
es
dec
pop
push
add
mov
sbb
test
add
xor
cmp
dec
and
push
lret
inc
push
scas
je
jg
sub
adc
mov
push
mov
pop
aam
dec
addr16
mov
les
lds
push
idivl
and
pop
popa
pop
mov
pusha
icebp
xor
jp,pn
xchg
push
pop
pop
test
loop
cmp
xor
fistl
paddusb
sahf
jnp
inc
ret
add
subb
xchg
inc
push
imul
sub
xorb
into
in
sub
jle
mov
insb
popf
hlt
sub
sbb
cmp
mov
xchg
lret
pop
das
call
sbb
js
mov
inc
jecxz
loope
lds
add
inc
aad
jb
push
and
clc
or
mov
call
xor
into
popa
mov
jns
mov
lock
std
or
lods
pop
mov
dec
jl
inc
pop
jns
add
xchg
pop
pushf
mov
xchg
or
dec
mov
notb
ror
add
dec
pop
cwtl
xor
cli
cltd
ror
sbb
shlb
push
in
pop
stc
push
subb
adc
shlb
mov
push
cmp
stc
jp
inc
imul
dec
jne
or
out
rorl
fbld
push
mov
ror
xor
test
icebp
cli
outsl
xchg
mov
inc
imul
mov
xor
rolb
sub
jmp
gs
sahf
xchg
jbe
dec
sub
fimull
cmp
jae
inc
sbb
fists
cmpsl
movsl
sub
arpl
xchg
out
dec
insb
addr16
leave
not
xchg
lcall
and
mov
sub
cli
push
pusha
xlat
in
xor
cmp
jae
mov
add
arpl
hlt
mov
push
adc
cltd
cmc
nop
sub
stos
into
mov
push
out
inc
xchg
ret
push
fcmovnu
mov
loop
mov
frstor
mov
jbe
lcall
dec
in
aaa
mov
outsb
pop
cld
adc
cli
cld
mov
or
xchg
iret
pop
insb
mov
push
xchg
mov
repz
or
scas
cmp
or
mov
jns
xchg
ds
mov
mov
pop
cmp
ja
aad
jmp
xor
mov
adc
ret
rcll
mov
push
mov
mov
mov
inc
jle
loope
shll
mov
adc
in
movsb
hlt
jb
in
sub
sbb
or
ret
add
clc
push
call
mov
sti
pop
into
xlat
movsb
ret
leave
pop
fisubrs
adc
dec
lock
arpl
sbb
mov
adc
adc
jmp
repz
js
popf
enter
inc
cmp
lret
mov
pop
and
pop
js
fwait
jge
jle
fwait
sbb
xor
in
pop
mov
cmp
fldz
push
rorb
nopl
jb
hlt
scas
sbb
xchg
push
adcl
mov
sbb
pop
orl
scas
hlt
add
push
mov
push
xor
into
test
xchg
movsl
loopne
sbb
sbb
push
mov
in
push
xchg
or
push
dec
divb
sub
mov
notl
out
sbbb
pop
insl
jne
sbb
test
inc
or
cli
add
loopne
scas
or
or
and
push
out
movl
shl
sub
push
dec
stos
fisttpl
add
inc
test
arpl
sbb
lds
or
in
pop
adc
cmp
mov
sbb
push
jg
add
lods
lods
mov
add
xchg
lds
stc
out
scas
jne
aaa
sbb
add
popa
add
mov
jbe
cmp
shrb
pop
push
outsl
mov
mov
pusha
push
pop
mov
lock
xchg
rcrb
mov
lock
jnp
adc
xor
cmpsl
xor
sarb
mov
popf
and
mov
jne
xor
or
jg
iret
sub
aaa
rcr
pop
cli
lret
mov
dec
inc
das
and
mov
aam
dec
dec
cld
js
lea
std
xor
mov
push
sarl
add
inc
out
hlt
sbb
mov
pop
adc
jnp
push
xchg
jns
add
fsubrl
outsb
push
fstl
mov
add
in
hlt
inc
loopne
sub
cmp
jp
add
pop
stos
aaa
jo
push
jecxz
cmc
scas
stos
rcrb
sbb
cmp
cli
pop
or
pop
imul
data16
fldcw
xchg
lahf
mov
sarl
pop
cs
add
icebp
adc
arpl
inc
add
add
jne
fdiv
sbb
push
bound
aas
dec
pop
pop
mov
popa
inc
outsb
mov
sbb
mov
shll
lcall
and
ret
mov
test
fmuls
fptan
push
cli
mov
ret
scas
mov
rolb
sbb
inc
adc
mov
loop
add
movsb
in
sbbl
jnp
shr
setnp
push
jae
mov
mov
sub
push
inc
sub
inc
arpl
mov
movsb
js
mov
cmpsb
test
mov
jge
inc
mov
xor
shll
lock
pop
cmp
xor
dec
dec
cltd
call
sub
mov
or
or
iret
jmp
aaa
add
jge
lds
icebp
or
lahf
mov
push
mov
inc
sub
xchg
fwait
ds
cwtl
insl
loope
fisubs
fldenv
add
cld
outsb
inc
mov
test
lret
outsb
xor
mov
adc
mov
aad
add
fistps
push
cmp
scas
out
faddp
and
repnz
cwtl
dec
cmpsb
mov
addl
pop
mov
std
lret
cmp
lods
enter
fmull
out
sti
cwtl
jae
inc
enter
aas
cwtl
out
xor
sub
jmp
add
sbb
push
fisubl
dec
jle
ljmp
sub
testb
pop
sbb
adc
pop
ficoml
ss
daa
sub
int3
xor
clc
jp
adc
iret
pop
or
dec
adc
ret
ficomps
push
adc
icebp
movsl
bound
xchg
push
insb
adc
nop
mov
mov
fimuls
into
and
fstpt
mov
out
leave
mov
jae
bound
leave
aad
rol
jg
cwtl
lods
cmp
loope
pop
mov
add
mov
pop
icebp
inc
inc
hlt
push
push
xor
mov
outsl
in
pop
test
in
push
xchg
pop
mov
mov
xchg
push
loopne
aad
aam
xchg
js
scas
pop
and
sbb
add
hlt
fdivrs
ja
loopne
inc
cmp
adc
sbb
aad
dec
jae
xor
push
rcll
jns
xchg
jnp
mov
rcrl
pop
ficoml
dec
popa
shl
jno
inc
loope
fwait
jbe
mov
mov
mov
pusha
in
push
outsb
and
mov
sti
loopne
in
insl
cmpsb
jno
dec
mov
cmpsb
mov
sarb
inc
pushf
push
or
xchg
test
ficomps
rep
sti
adc
hlt
call
movsb
lods
jmp
test
jnp
mov
aaa
scas
sbbl
addr16
jae
in
pop
push
add
lret
out
sahf
int3
in
roll
push
xor
dec
dec
into
mulb
out
pop
mov
and
inc
dec
add
sbb
es
dec
call
pop
loop
dec
jecxz
sbb
pusha
xchg
jbe
add
ds
movsb
sbb
loope
add
and
jne
imul
dec
push
jbe
loop
dec
pushf
xchg
sbb
imul
mov
ljmp
mov
jb
xor
xchg
mov
mov
push
stos
pop
ret
mov
mov
cmp
hlt
adc
sub
xor
fwait
into
jmp
jl
pushf
and
ja
sub
fcmovb
fildl
fistpll
lock
ret
les
arpl
pop
movsl
cld
push
mov
sahf
mov
into
dec
sti
xor
xor
pushf
push
inc
jmp
lea
xlat
js
sbb
push
xor
sub
scas
mov
jo
fincstp
mov
sub
dec
std
pop
sbb
ja
je
push
and
mov
jb
dec
sbb
int3
in
mov
je
sbb
roll
jns
outsb
js
pusha
push
ja
or
mov
mov
pop
imul
nop
adc
in
xor
xor
loopne
and
sub
ret
or
xor
or
adc
lret
stos
std
jo
jb
jne
mov
fisttpll
mov
sti
cld
cwtl
xchg
mov
adc
in
insb
pop
aas
pop
sub
cmp
pop
push
sbb
push
sbb
mov
outsb
cmp
push
movsl
jge
jg
mov
mov
cld
out
dec
xor
cmp
pop
fwait
repnz
dec
fildll
fidivs
dec
jmp
stos
ficompl
ds
cmpsb
lret
orb
cmc
push
add
test
mov
fadd
mov
fnsave
or
subb
lret
mov
or
or
ljmp
cwtl
adc
add
lret
adc
push
dec
xchg
leave
adc
cmpl
xor
push
test
ljmp
xchg
es
cmp
jnp
mov
push
push
mov
mov
or
xchg
dec
add
loop
and
dec
call
imulb
mov
in
xchg
adc
xor
sub
mov
push
rorl
push
sbb
jno
cmp
push
sbb
fsubl
sub
or
les
pop
insb
dec
cmpsb
dec
push
dec
inc
in
mov
leave
jnp
adc
sti
mov
dec
xor
lcall
dec
xchg
pop
dec
xchg
mov
jge
and
push
addb
add
shlb
cmovns
pop
cwtl
fsubs
mov
add
xor
xchg
sahf
dec
push
daa
jle
mov
and
jmp
sbb
insb
push
mov
inc
leave
lods
int
dec
loop
mov
xchg
loop
dec
mov
push
int
lds
dec
cmp
cmp
xor
add
leave
aas
pop
cmp
hlt
daa
sub
int3
rorb
mov
scas
cmpsl
outsl
insl
rorb
cmp
aaa
and
sarl
jg
test
dec
and
addl
lea
pop
inc
cltd
mov
jge
lcall
cmpsl
fisttps
cmp
leave
stc
push
leave
scas
aam
mov
or
lea
cmp
jge
loopne
sbb
jg
ffreep
fnstsw
jmp
into
inc
adc
dec
adc
cwtl
lea
call
pushf
sbb
sbb
and
lds
xor
push
shll
xchg
hlt
mov
in
test
and
mov
pop
pop
leave
or
mov
cwtl
pop
inc
pop
in
cs
adc
loope
fistpl
cmp
daa
xor
or
add
xchg
xor
or
pop
stc
loopne
cmp
pop
mov
in
pop
rorb
pop
sub
gs
mov
out
sbbl
mov
out
mov
and
imul
inc
int3
and
cmp
pop
test
xchg
cwtl
sbb
shrl
lds
lahf
sub
aas
aam
jmp
ret
xchg
mov
imul
mov
insl
jecxz
test
in
cmp
jb
adc
fisubrl
adc
xchg
rclb
ds
lea
jl
push
add
mov
clc
filds
jnp
or
dec
jmp
xchg
pop
push
stos
lcall
test
sub
jb
sahf
adc
xchg
repnz
jmp
jmp
fnsave
lock
mov
add
inc
bound
ficompl
mov
idivl
cmp
addr16
dec
add
cmp
xchg
hlt
les
xchg
inc
call
pop
arpl
jge
out
and
stc
dec
cmp
mov
gs
sub
xchg
inc
cmp
negb
fdivs
loop
mov
cmc
xchg
push
scas
add
repz
fmull
mov
call
xor
jecxz
xor
enter
popa
xor
sahf
cmp
les
mov
xchg
pop
and
pop
into
hlt
mov
pushf
mov
push
xorb
inc
out
sub
mov
push
mov
push
push
sub
jge
fcmovbe
sub
mov
out
mov
jnp
outsb
mov
jo
push
cmp
fidivl
jecxz
or
pop
xorb
les
jle
jnp
arpl
gs
out
clc
test
cmpsb
add
sbbl
jae
xchg
jne
pop
movsb
movsl
mov
lock
adc
and
push
push
aaa
xchg
sysret
sahf
mov
fwait
push
and
mov
out
fs
inc
jbe
lret
jnp
sbb
and
cmpsb
push
xchg
in
dec
and
nop
jnp
aas
xchg
fcoml
fstl
xchg
mov
cmc
dec
xchg
inc
pop
sbb
subl
in
in
dec
int3
sbb
inc
mov
lret
aaa
pop
lods
push
xor
pop
hlt
or
add
xchg
unpckhps
push
push
jns
fldenv
jecxz
sarl
and
sahf
and
jae
fwait
dec
add
mov
rcrl
jno
xchg
or
xor
ror
enter
ljmp
jp
cmp
mov
insl
repnz
ss
mov
dec
popa
jae,pn
jae
sub
test
xor
pusha
movzbl
jns
adc
xlat
xchg
xor
movsl
inc
mov
mov
js
dec
xchg
mov
add
insb
std
mov
gs
pop
scas
mov
pop
or
sub
xchg
jecxz
sbb
orl
int3
sbb
push
cmpsl
dec
dec
call
and
fistpl
pusha
push
dec
xchg
jb
jo
enter
push
mov
xor
adc
out
in
lret
sub
and
xor
xor
repz
cmp
push
stos
mov
fisttps
in
std
dec
orl
out
int3
inc
cmpsb
test
orb
gs
pop
repnz
pop
adc
cmovne
adc
outsl
inc
aaa
and
dec
je
jl
int
fisubl
movsl
ret
rcl
jmp
icebp
dec
add
mov
aam
outsl
pop
sub
fistl
xor
ss
fimuls
dec
je
add
cli
stos
lea
or
mov
dec
pusha
enter
add
imul
mov
mov
cmp
xchg
dec
sub
ds
loope
lods
inc
mov
jge
clc
and
int
xchg
sbb
jge
cmc
lea
xchg
movsb
add
xchg
subl
orb
push
mov
test
mov
popw
out
adcl
out
outsb
les
in
xor
subl
int3
out
andb
xchg
in
out
ficoml
lret
test
cmpsl
outsl
movsl
dec
sub
mov
movl
mov
dec
sub
ret
imul
mov
push
push
out
sbb
or
repz
rcl
sbbl
push
jnp
test
imul
cs
scas
or
test
ds
nop
or
add
cmp
sbb
pop
or
pop
or
repnz
xor
ret
scas
sbb
jnp
or
or
adc
ret
xchg
int
push
push
or
out
scas
ss
mov
mov
jle
addl
mov
or
insl
shr
faddl
cmp
add
cmp
mov
pop
xor
or
xchg
das
outsb
xchg
pop
movsl
push
test
ficompl
lea
test
mov
push
pop
icebp
sbb
das
jbe
test
mov
jb
pop
fiadds
and
xor
cmp
sub
pop
jnp
test
pop
ja
nop
adc
lds
sub
movsl
sub
and
cmc
jbe
outsb
xlat
sub
inc
bound
add
mov
out
adc
adc
ds
sub
xor
xchg
mov
xchg
mov
idiv
ljmp
bsf
dec
and
fnstcw
push
mov
adc
jnp
jmp
fistps
mov
decb
in
roll
pusha
mov
cmc
testb
call
jl
xorl
xchg
mov
xor
sbb
cmp
je
push
dec
ja
push
push
jne
call
dec
testb
cs
pusha
adc
xor
jne
xchg
fstpl
out
jne
dec
push
cli
xlat
pop
xchg
test
cmpl
cs
mov
mov
cmc
mov
push
insb
loopne
adc
push
mov
cwtl
rorl
mov
mov
dec
or
rclb
jl
sub
push
test
shll
insl
push
pushf
inc
push
ss
cmp
mov
and
push
sbb
mov
popf
xchg
fld1
pop
ljmp
cmpsl
popf
mov
sub
inc
pop
pop
jmp
jae
xor
das
call
adc
push
fisubrs
mov
out
mov
pushf
push
adc
dec
std
outsb
divl
ror
inc
push
sarb
mov
pop
scas
stos
cmp
pop
and
jnp
push
testb
push
xchg
push
add
fimull
push
and
push
adc
push
in
outsb
cmp
jl
bound
sub
rcrb
lret
jbe
xorb
pop
aad
push
push
and
ljmp
fisubrl
push
lret
sub
scas
repz
dec
cmc
mov
test
int
iret
lock
dec
stos
cld
adc
xchg
and
mov
sub
outsb
insl
shlb
cld
and
push
dec
addb
push
mov
sub
inc
ss
pop
out
arpl
jge
imul
sub
mov
push
dec
cmp
loopne
add
aad
rol
popa
movntq
mov
lret
mov
or
loop
cmp
dec
xor
pop
jl
insl
call
jg
or
lret
push
and
enter
out
ja
mov
cmp
xor
lret
daa
dec
inc
imul
dec
rolb
push
mov
rcl
bound
and
out
inc
cld
pop
inc
into
pop
xchg
add
cmpsb
lock
xchg
mov
pop
cli
inc
insb
repnz
push
nop
mov
push
jb
test
push
mov
mov
jle
js
mov
xor
lods
call
std
push
subb
ljmp
jg
les
outsl
push
sahf
mov
ret
adc
repnz
lcall
inc
sbb
mov
pop
cmp
js
cmp
add
mov
adc
or
std
mov
imul
jmp
cs
clc
rorb
inc
jne
in
mov
mov
jne
into
rcrl
fs
pop
lods
mov
or
or
stos
push
adc
bound
jmp
gs
dec
cld
pop
arpl
push
call
xchg
dec
mov
and
fstps
fldt
sub
xchg
cld
mov
imul
inc
and
sbb
mov
icebp
xchg
cmpsb
sub
and
aas
sbb
push
push
sub
cltd
nop
sbb
jnp
mov
cmc
sub
popa
and
and
jne
and
jnp
adc
pop
push
subb
jbe
jae
into
enter
mov
mov
stc
mov
es
xor
inc
in
mov
addr16
xchg
cs
adc
bound
jecxz
dec
jmp
sub
insb
and
inc
ss
popf
loope
sub
pop
lret
out
sbbb
inc
or
adc
ret
and
sbb
or
mov
lea
scas
cmpsb
mov
loop
adc
dec
and
fidivs
inc
xchg
je
mov
fisubs
fwait
sbb
es
loop
ret
rorl
mov
sti
mov
push
push
jp
cli
xchg
mov
pop
pop
imul
ficomps
decb
test
push
inc
or
sbb
pop
and
jle
inc
int3
pop
mov
push
mov
imul
inc
popf
cmpsb
cwtl
or
addb
or
lock
or
hlt
push
repnz
outsl
sub
cli
adcl
push
and
enter
push
cmp
std
pushf
jecxz
and
and
mov
lock
pop
ss
jle
dec
jb
pop
sbb
pop
jl
adc
pop
push
cld
aaa
xchg
cmpl
push
arpl
pop
insl
mov
stos
mov
cmpsb
outsl
jecxz
shlb
jl
loopne
push
inc
fisubrl
pop
xchg
roll
and
mov
jno
cld
mov
bound
mov
lods
ss
subb
inc
out
sub
into
pop
push
add
lret
negb
das
pop
nop
mov
push
cmp
ret
pop
mov
dec
imul
mov
loop
push
mov
xor
mov
arpl
pop
sbb
mov
pop
int3
in
xchg
mov
test
addl
out
add
int
jb
mov
jle
ret
sbb
jmp
popf
call
mov
rcr
mov
dec
fst
jmp
sub
sub
lds
pushf
mov
mov
jbe
jns
jnp
rorl
adc
add
lahf
rcl
jns
lahf
rcll
out
xchg
push
imul
repz
adcb
xor
xlat
lods
sbb
mov
shlb
xor
negl
stos
xchg
dec
adc
rcll
ficomps
mov
dec
jle
mov
inc
movsb
xchg
mov
cmp
fucomip
aas
or
dec
adc
leave
dec
daa
aaa
jg
aad
push
add
cmc
fistl
dec
fbld
or
jno
push
xchg
popf
ret
jg
mov
xchg
mov
iret
xchg
pop
dec
adc
iret
sbb
loop
ficompl
and
jbe
call
and
loope
xchg
out
push
push
movsl
test
lods
mov
addr16
xor
repnz
or
sub
pop
xor
sbb
mov
adc
cmpb
mov
in
dec
lret
jge
mov
bound
pop
mov
shll
mov
das
jb
out
cmp
arpl
iret
loop
sub
cmp
lods
push
inc
ret
pop
add
xor
or
jbe
push
pop
and
int3
sbb
jns
nop
mov
in
hlt
add
mov
fmuls
pushf
or
xchg
or
mov
popa
iret
mov
sub
in
adc
ss
in
dec
mov
sbb
xchg
aad
out
ret
movsb
arpl
mov
push
test
dec
aas
ret
sub
cltd
aad
add
sbb
in
push
call
xlat
inc
or
nop
adc
and
cltd
push
imul
test
xchg
mov
or
push
xor
and
ljmp
in
leave
adc
jbe
stc
push
push
imul
sub
daa
jbe
xchg
in
jl
aad
pop
xor
test
mov
cmpsb
mov
sbb
rcrl
mov
sbb
out
mov
mov
loopne
jae
jl
leave
icebp
dec
outsb
addr16
cwtl
pop
mov
mov
les
cwtl
add
pop
inc
pop
fldt
movsl
adc
int
fistl
cmp
sub
paddusb
jb
xor
test
outsb
xchg
cltd
jecxz
jae
pop
fwait
lods
jns
dec
js
jp
inc
adc
out
pop
inc
nop
fisttps
dec
or
rorl
or
repnz
loopne
loop
adc
inc
lods
pop
loop
push
jmp
inc
loope
mov
enter
sbb
xchg
ja
pop
mov
clc
into
pushf
popf
dec
in
aam
mov
mov
push
inc
add
decl
jae
int
add
out
ficompl
cmp
sub
fstpt
mov
jns
add
adc
xchg
mov
mov
mov
sbb
test
mov
fs
jg
jno
jne
push
in
inc
add
mov
dec
data16
cs
aad
pop
dec
and
jae
cld
jb
clc
dec
mov
pusha
mov
into
repnz
mov
sbb
iret
lods
mov
or
shr
or
lods
dec
rcrl
call
mov
sbb
add
push
fnstsw
js
movsb
pop
mov
sti
jb
jb
ljmp
fstpt
je
inc
push
sbbl
hlt
sbb
imul
pop
inc
mov
push
xchg
adcb
outsl
cmpsb
rolb
loopne
fs
fildll
dec
cmp
inc
in
les
push
jno
sbb
inc
mov
adc
and
xor
add
mov
push
fs
push
loop
push
dec
pop
shr
xchg
int
ds
stos
xchg
ret
fs
into
repz
loopne
gs
xchg
scas
cmpsl
jno
mov
inc
shrl
mov
inc
pop
lcall
pop
and
jae
inc
hlt
xchg
flds
loop
xor
cmp
not
and
sbb
ljmp
sub
ror
pop
shll
push
jle,pn
mov
jbe
push
mov
hlt
iret
jne
xorb
pop
movsb
xor
into
dec
sbbl
mov
sub
insb
jns
mov
imul
adc
repz
int
fistps
pop
movsl
call
ja
add
mov
lds
loop
xchg
ja
mov
or
pop
test
jns
frstor
lea
adc
inc
stos
mov
or
jne
lds
pop
ja
and
aad
mov
repz
mov
pop
fsubrs
repz
loope
add
orl
insb
push
adc
pop
mov
out
cmpsb
scas
add
cmp
inc
add
push
xor
shlb
add
out
mov
mov
sub
xchg
mov
push
xchg
cmpsb
fucomip
cld
dec
adc
xchg
jns
lea
pop
sbb
mov
dec
out
aas
lret
scas
testb
leave
add
ss
int
sub
xor
fs
ret
lods
les
dec
push
popa
imul
jb,pt
xchg
adc
push
push
les
shl
pusha
call
ret
pusha
sti
stc
push
mov
ss
pop
sub
xchg
lods
aas
movsb
arpl
jecxz
das
jge
pop
and
cli
rol
push
add
xor
aas
stc
and
and
in
dec
fdiv
dec
dec
movsl
cmp
int
pop
hlt
cltd
xor
pusha
adc
shl
std
enter
jnp
test
fisttps
fwait
cltd
mov
lret
sbb
movb
enter
push
push
arpl
inc
lds
out
dec
addl
aam
push
adc
insb
fldcw
add
aad
or
and
out
dec
arpl
mov
fistps
lods
mov
and
movsl
xlat
js
mov
xchg
loopne
sub
loopne
stos
ds
xchg
xchg
ds
test
xor
add
sub
into
gs
fistpl
int3
insl
add
lods
enter
xor
add
xchg
mov
jg
push
aaa
inc
jae
js
aaa
cmpsl
adc
ds
sub
jle
or
popf
inc
loope
jecxz
and
lock
call
mov
or
mov
pop
xchg
sbb
lea
popa
fwait
xorb
js
das
lea
lock
stc
lret
cmp
fldt
sub
xor
sub
jb
push
xchg
xchg
cmc
sarb
outsl
cltd
ds
lods
clc
scas
sbb
jl
lea
stos
je
pop
daa
xor
or
test
inc
push
jb
insb
cmp
push
mov
test
std
sub
lret
inc
or
mov
test
orb
ja
pop
add
adc
cli
out
push
push
push
lahf
jbe
insl
mov
pop
lcall
ds
dec
xchg
mov
xchg
xchg
lret
xor
xlat
xchg
mov
cmp
xor
call
in
cwtl
and
ja
xlat
movsl
adc
pop
inc
rcll
push
dec
add
dec
jno
and
inc
mov
mov
xor
mov
push
or
imul
mov
sahf
mov
lock
xchg
ss
mov
sub
inc
inc
xchg
gs
sub
int
or
popf
or
mov
mov
xchg
je
mov
repz
out
lahf
jno
pop
gs
pop
out
mov
and
repnz
lret
sbb
and
jmp
ret
inc
mov
sub
nop
dec
ja
push
call
xchg
push
sbb
clc
sub
sbb
ja
fsubs
imul
cmpsb
lcall
fstpt
mov
notb
adc
cmp
fldt
ja
adc
cwtl
gs
add
fwait
insl
out
push
and
inc
test
and
bnd
sarb
inc
or
test
cmp
jns
mov
pop
pop
adc
jb
push
outsb
jnp
mov
or
or
pop
mov
pop
lret
rorb
mov
push
cli
cmp
cmp
cmp
shlb
test
js
mov
hlt
daa
mov
inc
jnp
mov
mov
lds
aaa
sbb
push
pop
enter
scas
imul
icebp
pop
fdivrp
mov
jg
jnp
jmp
lds
sbb
adc
cmpsb
jle
repz
loopne
mov
imul
push
mov
sahf
jmp
inc
adc
push
scas
push
fidivs
mov
push
inc
xchg
and
inc
pop
lock
nop
mov
mov
ljmp
pop
es
jb
fimuls
fisttpl
loope
dec
adc
adc
sti
push
pop
and
fcmove
cltd
lds
and
xchg
adc
xor
stc
cltd
jbe
rorb
jg
faddl
xchg
lods
rclb
and
mov
dec
int3
fidivrl
cmpb
icebp
sbb
or
cmpsb
in
mov
sbb
lea
xor
leave
add
pop
addr16
mov
mov
insl
pop
scas
pop
imul
sti
stos
adc
addr16
dec
sub
aaa
subb
pop
jne
sbb
mov
in
sbb
push
stc
movsb
mov
jmp
mov
arpl
jne
ljmp
out
inc
inc
bound
fstl
test
nop
xchg
fwait
sub
loope
fisubl
aas
lret
rcr
in
lods
sub
in
dec
in
push
fwait
sbb
cs
nop
jmp
fidivrl
sbb
xor
fdivl
mov
rorl
js
popf
stc
mov
push
add
push
fs
sbb
push
jmp
or
rcrl
data16
loopne
stos
pop
and
ret
mov
pop
sbb
sub
jp
xor
or
mov
sub
sbb
pop
sbb
dec
mov
repnz
lods
dec
addl
andl
push
jae
mov
inc
mov
push
icebp
repnz
cmpl
in
in
sbb
sbb
xor
and
int
mov
icebp
xor
pop
in
jg
and
push
je
lret
xchg
or
daa
mov
push
cwtl
fs
in
sbb
aam
out
popa
loopne
fimuls
ja
sahf
adc
movsl
xchg
mov
sarl
xor
jecxz
lret
add
bound
push
fdivrl
adc
xchg
fs
jno
mov
divb
mov
int3
xchg
shrb
aad
and
das
jp
out
jbe
add
test
ljmp
leave
xchg
inc
lcall
xor
test
xor
loop
addb
mov
clc
dec
pushf
mov
pop
jecxz
jp
cmp
clc
dec
in
pop
dec
cmp
jecxz
pop
push
shll
in
test
insb
jno
cmp
in
repnz
das
into
mov
cmpsl
arpl
mov
rcrl
dec
sahf
fcoml
js
push
dec
fdiv
into
mov
push
sti
mov
inc
arpl
aad
sub
hlt
inc
ja
sahf
ret
movsl
ds
push
movsl
mov
jne
insb
rolb
les
lret
pop
mov
inc
dec
mov
jmp
mov
inc
mov
outsl
inc
xor
jo
pop
pop
xchg
cmp
xor
inc
lods
in
mov
pop
into
adc
test
xchg
pop
test
loop
insl
add
xor
shrl
or
pop
dec
push
fstps
movb
dec
ss
push
and
jp
sbb
or
inc
xchg
xor
ss
mov
lock
and
in
xor
icebp
mov
adc
in
pop
jge
aad
adc
push
and
pop
jns
jge
adc
mov
in
movsb
es
pop
out
mov
std
jmp
jle
push
loope
adc
mov
dec
and
mov
imul
insl
mov
test
jnp
add
xchg
push
dec
xor
and
mov
pinsrw
jmp
xchg
imul
sar
lahf
das
adcl
lret
mov
ret
lcall
into
push
gs
cmp
push
xor
adc
imul
leave
adc
adc
jge
push
adc
sub
daa
mov
sbb
add
push
lods
mov
pop
rorl
test
fsubrp
cltd
xchg
data16
jg
out
add
xor
push
xchg
jmp
xchg
scas
xor
lods
aaa
pop
jb
lcall
pop
lret
insb
ficoml
lock
xor
pop
movsb
call
sbb
mov
and
and
fstl
mov
cltd
lcall
pop
iret
fwait
jg
inc
bound
sbb
xor
sub
cs
fs
xor
cmp
push
in
jge
mov
or
aaa
adc
and
negl
and
or
test
mov
inc
repz
add
in
sbb
xor
mov
sbb
push
pop
dec
hlt
jmp
data16
mov
movsb
xlat
lret
xchg
push
xchg
or
sub
mov
mov
xor
ret
or
mov
pop
cmpsl
push
sbb
fildll
aam
lods
inc
xchg
cmc
lock
mov
mov
add
test
xchg
and
or
lods
push
mov
mov
scas
ret
jg
mov
lds
cmp
or
jg
les
mov
jmp
inc
dec
xchg
lock
push
mov
mov
mov
adcb
sbb
push
sub
adc
adc
imul
lcall
add
push
sbb
pop
popf
shll
pop
jle
or
sub
mov
repnz
push
mov
outsb
mov
jbe
push
add
mov
popa
sti
test
rclb
jmp
dec
out
push
mov
dec
xchg
in
outsb
and
lods
dec
outsl
dec
push
jnp
mov
enter
sub
jmp
js
push
push
fdivl
hlt
out
pop
ljmp
sti
add
inc
jle
fisubs
scas
mov
mov
push
sub
mov
movsl
cmp
mov
hlt
js
mov
iret
movsl
js
mov
lahf
mov
popf
aas
dec
stos
xor
or
icebp
inc
das
jl
jae
or
push
add
add
adc
std
test
lea
cmp
test
icebp
dec
cmp
mov
mov
daa
cmp
push
xchg
leave
inc
dec
lods
test
dec
dec
xchg
ljmp
dec
ret
pop
lret
lret
mov
xchg
iret
loopne
dec
imul
cli
xor
mov
lahf
sbb
sbb
cmp
or
pop
mov
aam
mov
mov
xor
hlt
pop
dec
call
adc
push
aaa
into
pop
mov
test
popf
add
pop
fucomip
pop
mov
je
and
fs
sbb
gs
stc
xor
ss
sub
sbb
jno
cmp
inc
adc
xor
popa
and
sub
xor
outsl
leave
mov
stos
mov
push
add
insb
sub
cmp
stc
xchg
adc
mov
mov
ljmp
pop
xchg
mulb
cmp
mov
scas
rorb
cwtl
mov
mov
pop
stc
in
in
mov
and
pop
jg
sarl
sbb
mov
xor
enter
sbb
mov
insb
push
inc
xchg
mov
fisttps
push
inc
jno
mov
mov
or
mov
xchg
mov
movsl
adc
add
jmp
sub
mov
add
jg
sbb
clc
dec
jmp
cmp
call
int3
stos
xchg
jnp
ficoms
mov
xor
dec
jns
rol
std
inc
test
movsb
stc
xchg
movsb
add
xor
fstl
ret
mov
jbe
aaa
std
xchg
sub
fwait
stc
xchg
daa
dec
stc
testl
xlat
mov
inc
test
repz
adc
or
mov
pop
jne
daa
movsl
and
xchg
jne
cmp
pushf
pop
push
jle
add
adc
mov
sbb
fucom
fcomip
push
sbb
mov
rcrl
add
stc
pop
test
enter
add
leave
push
inc
pop
call
inc
shr
xchg
add
scas
mov
stos
icebp
or
loope
jnp
dec
inc
add
inc
cmp
pop
push
push
mov
fdivrl
pusha
and
ja
lock
leave
jecxz
cmp
enter
or
adc
mov
ljmp
push
adc
hlt
cwtl
movsl
std
mov
loopne
sti
sbb
aam
add
daa
stos
shrl
inc
push
adc
mov
xchg
jb
xchg
inc
dec
jp
sbb
fwait
movsb
mov
testl
ret
sbb
jnp
xor
mov
pop
add
andb
jo
sub
sub
rcll
push
mov
leave
inc
stos
cmpsl
iret
cmpl
mov
movsb
sbbl
fwait
std
sub
stos
ss
pusha
mov
lods
cld
addr16
popf
in
stos
aaa
add
push
jne
xchg
mov
lcall
pop
ret
fs
pop
inc
test
inc
pushf
std
sub
fldcw
in
mov
in
test
xchg
jno
adc
cmpsl
lods
and
xchg
ja
xor
addr16
outsl
and
loope
mov
icebp
fisubrl
icebp
call
push
in
popf
insl
adc
shll
adc
jecxz
and
movsb
aad
mov
adc
repnz
fldpi
test
jo
outsb
add
or
xor
push
push
cwtl
jl
sub
dec
mov
sbb
test
loopne
pop
or
cmp
lods
outsl
jae
pop
add
cmp
xchg
int3
mov
mov
imul
test
imul
movsb
jmp
rcll
out
dec
repnz
fildll
mov
nop
loop
mov
outsb
not
prefetch
cmp
pop
sub
call
scas
scas
pop
lahf
push
bound
adc
mov
sbb
xorb
pop
clc
arpl
xor
or
cmovl
test
xchg
aad
mov
xchg
jo
aad
ret
scas
xchg
cli
scas
and
adc
test
pop
mov
mov
add
loopne
adc
mov
repnz
xchg
aad
mov
and
sub
push
jns
adc
scas
icebp
dec
xchg
lods
cmp
jnp
dec
xchg
les
lods
sbb
cmp
inc
or
inc
and
pushf
outsb
inc
pop
fldl
xchg
fdivrl
jnp
fsubs
jg
adc
je
pop
stc
out
jne
stos
incl
mov
das
call
test
loop
adc
aad
imul
mov
and
lods
mov
inc
or
hlt
daa
lods
mov
popa
sub
inc
mov
fstps
lds
jmp
movsb
jno
xlat
push
cmp
xchg
fcoms
imul
jecxz
jmp
cli
out
sub
inc
inc
jns
jb
es
pop
and
or
mov
mov
clc
dec
imul
sbb
lahf
mov
js
in
xor
scas
push
push
fimull
mov
inc
stos
stc
xchg
push
scas
ds
inc
nop
mov
push
ja
loop
out
lahf
clc
mov
push
push
imul
in
mov
add
xor
mov
aam
dec
jo
out
fs
xchg
cld
mov
jle
stos
out
push
sarl
inc
sarb
adc
dec
push
mov
lds
pop
in
test
xor
insb
mov
fs
push
movl
jecxz
jl
mov
push
inc
jo
push
cmc
add
inc
and
divl
jmp
inc
xor
arpl
adc
dec
stos
cs
mov
mov
jp
cmp
icebp
and
cli
mov
stc
add
jg
xor
sub
pop
fstl
sti
xchg
das
ds
cmp
nop
push
fimuls
test
dec
mov
or
mov
pushf
stos
or
sar
gs
loope
in
stos
ljmp
sti
mov
and
inc
inc
adc
inc
fwait
and
loop
out
aam
dec
xlat
scas
cmp
xchg
or
insb
dec
jl
scas
cmp
and
push
or
mov
ljmp
jle
les
repz
je
cmp
pushf
mov
push
aad
sbb
cs
mov
adc
pop
scas
mov
outsl
test
add
xor
outsl
ds
jg
testl
mov
jo
shr
ret
xor
cmpsb
pop
std
sbb
cmp
int3
sti
pop
clc
pop
push
inc
nop
lock
stos
and
or
jno
pop
lea
jmpw
aad
mov
les
mov
jbe
xchg
das
dec
xrelease
and
xchg
cli
scas
adc
fldenv
ljmp
push
jge
add
in
jp
or
je
movsb
ja
mov
fsubl
andl
mov
icebp
lcall
divl
xchg
stos
mov
hlt
push
xor
jecxz
pop
cmp
in
je
mov
rcrl
or
scas
dec
sub
lea
push
and
in
sub
roll
xor
jmp
jl
mov
jnp
lods
mov
lret
pop
pop
inc
outsl
xchg
adcl
push
rolb
gs
leave
or
std
hlt
add
loopne
push
dec
cld
adcl
pop
out
sbbb
mov
cmpsl
jecxz
scas
scas
push
mov
ffree
mov
gs
jecxz
mov
popa
testl
arpl
sub
jg
or
clc
stos
xchg
mov
and
nop
xchg
mov
xchg
cmp
cmp
push
loop
jp
arpl
cs
xchg
mov
inc
mov
sbb
fadd
add
xor
cmp
iret
and
sbb
lret
cmpl
out
xchg
loopne
mov
dec
mov
movsb
adc
xchg
cmp
sbb
ds
xchg
and
sbb
push
fisubs
adc
jno
xchg
cld
sub
adc
lahf
inc
xchg
pop
mov
mov
push
dec
ja
ds
fmulp
lretw
mov
pop
xchg
inc
pop
dec
or
cmp
or
inc
push
mov
pop
jp
pop
jbe
adc
jae
pop
sahf
aad
push
arpl
cs
popf
add
fidivrs
xchg
xchg
mov
dec
in
inc
das
test
pop
icebp
into
imul
sub
int3
cmp
negb
pop
mov
stos
pop
xchg
inc
xor
in
sbbl
sbb
push
cmpsl
add
inc
or
mov
js
jae
mov
jae
xchg
aas
imul
mov
fnstcw
fcomps
dec
or
rorb
push
adc
xchg
dec
pop
jge
pop
lods
jmp
mov
lret
sti
jge
pop
flds
shrl
pop
stc
jmp
ret
push
mov
movsb
mov
and
jns
dec
inc
sub
and
dec
cmc
jbe
stos
ja
sbb
mov
adc
imulb
gs
mov
xchg
add
and
xlat
rclb
mov
pop
jno
and
out
jl
push
in
push
sbb
xor
mov
xchg
cld
push
out
enter
jle
inc
xchg
cmp
cwtl
mov
call
sub
daa
push
stc
out
mov
clc
cmp
mov
pop
adc
frstor
dec
adc
xchg
or
add
shrb
test
pop
pop
jmp
mov
fs
or
ss
sti
cmp
lods
add
jae
mov
sub
leave
sahf
mov
out
cmp
push
ficompl
push
xchg
add
sbb
mov
sbbl
enter
xor
int3
andb
dec
sahf
mov
or
ss
xor
out
push
cli
sub
add
fwait
inc
jns
xchg
repnz
pop
mov
sbb
mov
fdivrp
cmp
push
aad
sub
push
mov
or
clc
add
imul
sub
dec
xorb
adc
adc
je
or
and
lahf
cltd
stc
push
and
test
daa
add
mov
xchg
in
adc
lock
call
xor
cmpsl
add
popa
out
imul
lods
loope
inc
cmp
std
ljmp
and
mov
mulb
pop
pushf
dec
lds
mov
mov
adc
fidivrs
orl
ret
mov
xor
dec
or
mov
arpl
aam
scas
out
ret
push
shlb
testb
fdiv
imul
add
lods
lds
mov
sbb
jge
add
imul
std
fadds
sub
fwait
mov
ret
mov
stc
pop
gs
addr16
out
add
mov
cmp
cmp
bound
lret
shlb
sbb
fcoml
filds
and
test
loope
add
lock
push
nop
sbbb
xchg
or
jmp
outsl
mov
mov
or
in
pop
addb
mov
xor
mov
data16
mov
mov
add
inc
mov
inc
mov
cmpl
fidivrs
jp
xlat
add
sbb
int
sub
cmp
and
jno
jo
dec
xchg
fdivp
xchg
mov
in
fadd
movsl
lahf
fisubs
adc
imull
inc
aad
stc
mov
mov
pop
lods
into
lods
ret
clc
dec
sti
adc
xchg
adc
shrl
outsb
dec
or
clc
in
xorl
pop
clc
shlb
and
adcl
scas
xchg
sub
cmp
dec
dec
mov
lcall
mov
pop
xchg
icebp
cmp
popa
mov
mov
mov
or
fs
push
dec
xchg
mov
ja
push
clc
shl
or
and
push
inc
pop
add
aam
jp
push
jns
push
int
sbb
lahf
lods
out
cld
clc
fwait
lods
sbb
sub
hlt
xor
xor
fucomip
dec
pop
pushf
mov
push
mov
or
xchg
imul
xchg
pop
dec
jle
rcll
int3
loop
popf
cmp
rcr
aam
pop
jl
mov
inc
fcoms
mov
xor
test
nop
xor
js
mov
mov
into
outsb
fstl
dec
fwait
jb
imul
aad
cmp
in
xsha256
cmpsb
adc
jp
pop
and
dec
aas
and
sbb
xchg
mov
mov
jg
cmp
cmpb
pushl
call
jbe
jmp
shr
jl
jp
testb
inc
pop
xchg
mov
lea
cwtl
jno
sub
jg
xlat
dec
mov
add
ficomps
mov
jns
lock
mul
sbb
xchg
push
ret
mov
sub
pop
fdivs
mov
cmp
or
aad
int3
sub
or
sti
je
dec
in
cli
inc
pop
mov
out
imul
cwtl
jg
dec
push
mov
rcl
pop
sbb
iret
les
lds
cmp
cs
mov
pop
movsl
push
dec
inc
aad
jp
dec
mov
mov
cmp
cwtl
out
mov
int3
cmp
into
push
test
xchg
dec
fildll
mov
loop
and
add
in
insl
fs
or
pop
adc
adc
mov
push
push
fnstcw
mov
pushf
push
sahf
or
es
fistps
inc
adc
addr16
pop
pushf
and
test
les
test
mov
in
pop
sti
sbb
add
lret
jb
sahf
pop
or
jp
sbb
orb
mov
mov
sahf
jl
imul
into
dec
scas
push
outsb
addl
hlt
sbb
push
push
mov
ret
add
push
adc
inc
lods
aam
jge
cmp
int3
push
ret
scas
sbb
mov
je
mov
inc
daa
outsb
subl
lret
cmp
xor
or
ret
add
jo
cmp
aaa
push
add
out
cmp
lahf
pusha
jae
cmp
out
jg
dec
dec
mov
pop
lds
loopne
lock
stos
dec
and
add
xchg
xor
scas
xchg
push
push
inc
inc
fwait
mov
push
mov
dec
sti
sahf
mov
mov
je
test
lock
loope
mov
inc
xor
in
or
adc
jno
mov
fisttpll
add
hlt
mov
inc
idivb
imul
adc
xchg
sbb
pop
dec
lahf
xlat
mov
mov
outsl
mov
push
sarb
pop
or
or
sub
sbb
out
enter
lods
dec
adc
stos
stc
dec
ret
sub
js
scas
out
adc
dec
dec
cmc
push
push
xchg
stos
lods
pop
imul
push
mov
in
test
shrl
in
jae
adc
insl
sbb
sbb
xchg
mov
je
daa
sbb
and
xchg
jae
push
or
push
jg
inc
clc
fdivs
adc
mov
ss
mov
mov
leave
jge
pop
andb
daa
jmp
notl
imul
sub
cwtl
fidivrs
shrl
inc
repz
xor
in
add
das
ljmp
mov
dec
pop
lods
incb
and
insl
loop,pn
rclb
pushf
mov
insb
loope
rorl
popa
mov
xor
add
mov
mov
scas
and
pop
cltd
ret
jecxz
daa
ljmp
inc
fwait
pop
jl
in
fldenv
nop
jns
lods
and
lock
in
cwtl
jl
dec
movsl
push
icebp
or
lea
jno
fldt
movsl
rol
mov
ss
cli
jnp
lret
jmp
ljmp
dec
inc
jge
int3
dec
les
pop
icebp
push
sar
push
adc
outsl
mov
and
or
push
mov
test
adc
into
xor
leave
cmp
call
xor
xor
into
sbb
push
jecxz
call
xchg
cmpb
test
cmpsl
xor
aaa
call
lods
divl
sub
push
mov
and
and
cmpsb
pop
or
mov
mov
cmp
scas
jge
stc
xor
xchg
pop
test
pop
mov
adc
popf
in
movl
and
push
jno
mov
inc
icebp
pop
out
andl
fsubp
push
mov
rorb
in
mov
xchg
sub
jmp
mov
lea
push
sub
fdivrs
push
cmovb
xor
and
fs
cmp
jge
or
jmp
addr16
mov
repnz
xor
dec
sbb
fildl
aad
out
mov
mov
fldl
or
das
xchg
lcall
ss
int3
mov
cmc
cltd
pop
xor
lea
pop
pop
aaa
jno
in
mov
loope
or
jecxz
es
and
gs
and
cmpb
adc
sub
pushf
sub
cmc
sub
sahf
sbb
test
addr16
mov
rolb
mov
js
sarl
push
lret
cmp
ja
push
add
idiv
inc
pusha
in
dec
test
pop
lods
fisubrs
pop
movsl
adcl
cmpsl
hlt
xor
and
cmp
repz
test
jg
cmp
cli
fisubs
fldcw
mov
ss
das
cmp
pushf
popf
inc
dec
sahf
mov
dec
xchg
cmpsl
add
aad
and
lds
lea
jae
rorl
cmp
inc
sbb
testb
mov
orb
pop
ljmp
jmp
sub
push
add
sti
ret
fdivs
cmc
sbb
or
cmc
jno
cltd
in
aam
fwait
mov
aad
sbb
test
jbe
xor
mov
inc
addb
je
dec
push
into
subb
mov
cltd
ficomps
leave
pop
imul
fwait
mov
std
jl
dec
mov
push
dec
adc
cld
xchg
cmp
outsl
cmpsb
pop
jecxz
mov
mov
cmp
adc
mull
pop
xchg
sbb
jns
or
test
inc
nop
push
cmpsl
adc
mov
lahf
mov
fisubs
gs
imul
sub
xchg
mov
data16
fidivs
sbb
cli
daa
or
aad
push
jg
adc
push
and
shr
xor
inc
mov
jge
sbb
mov
xchg
ret
mov
fdivl
push
fwait
neg
add
sbb
xor
sbb
dec
inc
cmc
into
jge
pop
stos
pop
cld
mov
mov
or
jnp
inc
bound
push
mov
enter
aas
add
inc
cld
loop
xchg
cs
mov
add
pusha
mov
int
hlt
lahf
mov
sbb
andb
xchg
xchg
mov
cmc
xor
lock
pop
adc
mov
mov
fisubrl
mov
test
test
ds
sub
cmp
sub
lret
push
mov
shlb
in
jecxz
in
enter
and
sub
rcrl
push
ret
inc
sub
aad
mov
pop
push
push
fwait
mov
cmp
test
jmp
fcoml
cmp
sbb
inc
mov
out
inc
mov
clc
into
lcall
jp
ret
lahf
call
xor
jmp
je
push
stos
mov
dec
mov
adc
icebp
mov
rorb
inc
rcrl
inc
aad
inc
mov
adc
clc
or
imul
imulb
pop
lret
shlb
mov
adc
cwtl
dec
cmp
roll
xor
pop
imul
into
xor
mov
mov
pop
ss
push
cwtl
xchg
mov
popa
popa
sub
movsl
icebp
in
and
lahf
test
add
imul
jne
jmp
mov
add
shlb
stos
ret
dec
das
arpl
repz
mov
xor
aas
fcompl
inc
mov
mov
clc
sub
adc
jp
mov
pop
jbe
int3
mov
jp
xlat
dec
jne
fcomip
sbb
push
addr16
sub
jns
pop
in
insl
aam
aas
lahf
sub
or
push
xor
xchg
clc
icebp
arpl
aas
fsts
jo
jge
sub
dec
sahf
mov
cmp
loopne
mov
iret
popl
mov
popw
mov
fwait
mov
mov
movsl
xchg
inc
das
adc
inc
enter
push
shlb
andb
xor
push
sbb
lret
sbb
sbb
push
fs
mov
push
pop
pop
fs
rcll
cli
mov
inc
es
pop
push
cltd
paddsb
mov
pop
neg
jl
test
cli
stos
mov
cld
pop
mov
jne
stos
ds
fstl
lock
mov
mov
das
addr16
call
pop
test
jne
add
outsl
jle
lock
inc
push
subl
test
data16
inc
pop
addr16
and
movsl
outsb
lea
fildll
sub
js
call
cwtl
xchg
push
aaa
ret
addl
icebp
inc
fcmovbe
jecxz
and
xor
inc
stos
ss
push
mov
fbld
mov
fsubr
mov
dec
bound
mov
pushw
leave
popf
cmp
into
mov
inc
cmp
std
or
mov
imul
jae
mov
inc
xor
lea
xchg
pop
sbb
or
arpl
fisubrl
sahf
scas
adc
mov
lret
xchg
lret
orl
divl
xchg
dec
aam
gs
sub
movsb
sub
jl
jne
je
ljmp
xor
decb
out
or
xchg
and
adc
fdivrl
and
jl
paddq
fdiv
mov
int3
mov
repz
pop
fs
xchg
int
sbb
push
cwtl
mov
aaa
mov
pop
loope
dec
scas
movsb
addl
xchg
xchg
pop
mov
mov
in
sbb
xchg
sub
jno
sub
andl
and
add
cmpl
sub
notl
jne
pop
sub
adc
loopne
nop
jg
sbb
adc
int3
xchg
xchg
gs
sbb
ret
mov
scas
leave
pop
dec
imul
popa
je
or
jge
fwait
lods
in
scas
jo
into
fisubl
jb
push
adc
out
test
jne
cmp
jecxz
ljmp
mov
xor
into
adc
sahf
mov
xchg
push
push
icebp
out
jae
test
and
addr16
sub
enter
push
jmp
test
cmpsl
inc
push
scas
insb
mov
mov
rol
xchg
push
mov
inc
jmp
je
adcl
jb
inc
xchg
and
adc
mov
out
arpl
out
lea
data16
or
cmp
xchg
xor
js
int
pop
ss
xchg
sbb
xchg
lds
push
test
mov
out
rcrb
mov
sarb
in
cmp
int
or
dec
xor
shll
aad
std
lret
ret
scas
out
mov
stos
out
pop
push
add
dec
int3
adc
jb
fwait
mov
ds
rcrb
dec
xlat
and
push
sbb
add
sbb
aam
push
lcall
ja
xchg
lock
cld
cmp
xchg
xchg
shll
and
xchg
loopne
addps
add
pop
sbb
xor
inc
jge
adc
rcr
fwait
jmp
or
mov
into
ret
sbb
ficoms
mov
sbb
sub
jnp
out
push
call
add
cmp
add
fcoml
insl
out
call
xor
jge
loope
xchg
xchg
sbb
xor
cli
push
push
mov
adc
push
mov
ds
cmpsl
fcmovnb
adc
sub
loope
xchg
cmp
adc
lea
mov
pushf
or
fs
das
test
repnz
scas
cwtl
xchg
daa
rcll
hlt
mov
mov
dec
scas
sbb
dec
test
jle
xchg
mov
movsl
ds
sbb
pop
out
inc
out
pop
hlt
aas
mov
subl
das
loope
add
adc
or
imul
sub
addr16
das
sbb
cmp
inc
or
pop
dec
cmpsl
mov
rorl
xchg
out
jnp
jecxz
scas
loopne
mov
fimuls
dec
shrb
fcomps
inc
outsb
or
mov
sub
add
adc
pop
and
sub
dec
push
add
in
jecxz
stos
cmc
push
jno
ret
sub
mov
xchg
mov
loop
push
mov
push
cli
dec
sbb
mov
icebp
mov
inc
lahf
js
lcall
mov
xor
lods
fcoms
in
jle
mov
mov
dec
stos
js
out
jbe
mov
jae
sbb
xchg
fbstp
or
pushf
addb
xchg
dec
cmp
lods
loop
mov
jbe
push
and
ljmp
sbb
jle
scas
jp
lds
arpl
jae
cltd
addr16
and
shrl
stos
adc
in
cmp
dec
add
stc
cmpsl
rcrb
hlt
mov
retw
rol
mov
jg
inc
movntq
pusha
inc
add
sub
xchg
pusha
hlt
xor
sti
xorb
jecxz
or
and
aam
sbb
inc
stc
test
dec
jge
mov
dec
push
cltd
out
insl
cmp
and
jle
rcr
adc
xchg
das
jae
outsl
xor
lock
bound
in
out
pop
jmp
loopne
in
mov
cltd
stos
xchg
rclb
aam
pushl
lds
lock
xchg
std
ror
fbld
xchg
or
test
out
test
jno
imul
in
sbb
jns
test
inc
cmpsl
add
movsl
stos
mov
and
xchg
add
out
mov
icebp
adc
outsl
repz
aaa
dec
sbb
outsb
lods
inc
das
add
cmc
pop
xor
in
ja
incb
cs
sub
xor
jmp
or
in
shrb
ret
pop
outsl
or
sti
sub
pop
dec
mov
push
sbb
sub
lret
ret
int
xchg
and
sbbb
dec
lock
pusha
push
push
loope
mov
pop
jbe
sbb
pop
test
xchg
xchg
and
out
lods
jns
pop
xorl
out
jnp
je
cld
dec
mov
pop
sub
inc
sarl
sub
cwtl
repz
inc
inc
lret
hlt
je
ja
jnp
lcall
mov
lods
xor
cwtl
jmp
loope
stc
mov
add
dec
cltd
push
movsb
push
adc
and
pop
rol
rcll
ret
leave
mov
push
prefetchw
arpl
test
xor
jg
mov
fwait
inc
in
or
in
add
and
shlb
push
es
loope
inc
hlt
ja
imul
fmull
and
repnz
xchg
sub
shl
jg
cmp
leave
lods
shll
dec
xchg
lea
ret
shl
mov
cmpsl
cmp
dec
sub
call
test
mov
add
xor
push
cli
insb
adc
mov
pop
insb
stc
inc
mov
and
out
cs
inc
insb
sbb
cmpsl
loopne
push
ds
mov
xor
push
pop
adc
sub
and
ffree
stos
jle
and
test
push
nop
push
gs
lea
lcall
or
jb
lods
pop
test
mov
ja
jl
js
sbbb
jecxz
rcll
mov
add
mov
adc
xchg
inc
cmp
daa
sub
add
mov
test
mov
into
mov
dec
frstor
cltd
daa
shlb
dec
mov
mov
or
add
int3
sub
nop
push
pop
sbb
adc
pop
pop
mov
jae
fidivl
or
lahf
jg
rclb
jbe
jmp
ljmp
pusha
lods
mov
out
popa
imul
loopne
inc
mov
outsl
fdiv
push
cld
sbb
sub
ja
xlat
dec
je
std
insl
add
idivb
in
jle
addb
add
jae
ficomps
adc
jnp
scas
call
inc
roll
mov
lahf
jp
jecxz
mov
inc
cmp
jp
add
sbb
outsl
xor
imul
pop
sti
cmp
aas
add
add
loop
fidivl
dec
or
movsl
or
xchg
movsl
stos
ret
movsb
shrl
mov
fdivl
stos
in
mov
cmp
sub
test
push
popf
sub
lret
push
xchg
add
sbb
adc
or
lods
xor
and
loope
mov
cmc
test
sbb
in
lods
ret
dec
xchg
lds
lahf
push
test
std
dec
cmp
cmp
mov
push
xchg
loope
sbb
adc
jmp
loop
mov
ja
mov
lods
test
sete
inc
mov
xchg
cmpsl
ljmp
or
mov
push
and
sbb
gs
mov
xchg
jmp
fwait
sbb
sub
pop
ss
pop
add
sbb
jg
adc
lock
cli
sub
pop
mov
jle
insb
lcall
repz
or
or
or
mov
scas
pop
add
addr16
jno
sahf
in
and
mov
dec
xchg
and
push
test
push
lds
xchg
jns
sbb
cmpsl
pop
mov
fisttpl
dec
shr
cwtl
mov
notl
fsubrs
mov
call
push
pop
cmpb
jge
outsb
loope
je
pop
inc
push
dec
loopne
ss
inc
hlt
or
inc
jne
lahf
jb
mov
enter
inc
jns
insb
cs
xor
inc
mov
fstp
lret
dec
xor
je
into
rep
stos
fcomi
sub
sbbb
xlat
mov
mov
sbbl
lds
pop
sbb
filds
lahf
jnp
sarb
ljmp
pop
pop
insl
pop
mov
adc
fisubs
imul
pop
jle
loope
decl
sbb
xor
jne
mov
test
jb
lret
lods
cmpsb
mov
or
add
cmp
stos
cwtl
js
jae
cld
cli
cmp
ret
into
incb
mov
jg
adc
sahf
in
cmp
pop
xor
roll
scas
sbb
adc
shrb
shrl
jns
sti
ret
xor
dec
mov
xor
inc
xchg
mov
add
push
adc
sbb
fnstsw
out
xor
into
mulb
xlat
adc
fwait
xor
xor
or
xchg
ljmp
or
cmpsl
out
xor
in
out
and
daa
jecxz
shlb
lret
and
movsb
mov
and
xchg
fidivs
les
dec
push
jnp
sbb
aas
sub
pop
hlt
sahf
data16
sbb
dec
add
addr16
jno
inc
jo
popa
xor
out
sub
fistpll
call
pop
xchg
xchg
adc
add
lret
insb
bound
jno
rorb
hlt
inc
cs
adc
fwait
inc
cmc
int
mov
mov
dec
loop
repnz
stos
pop
int3
ret
xor
int
gs
jo
cld
les
lahf
mov
push
jb
mov
enter
fbstp
xorl
mov
in
insb
sub
mov
sub
scas
test
test
idivb
adc
mov
mov
push
xor
jecxz
roll
js
data16
adc
and
pop
cltd
int3
xchg
mov
cmc
rorl
jae
lods
std
idiv
int3
jp
aaa
insl
push
jmp
rcrl
mov
xor
ja
sbb
cwtl
push
lds
lods
cld
lods
cmp
ficoml
fwait
out
push
mov
fdivr
inc
daa
in
pop
mov
in
mov
fisubl
mov
mov
mov
mov
jne
inc
insb
mov
mov
nop
jnp
xchg
imul
jbe
fadd
movsb
cmpsb
les
clc
lret
aaa
int
shrl
mov
sbb
jecxz
fs
adc
into
mov
repnz
xchg
cmp
out
mov
push
push
adc
pop
fsubs
xchg
lods
loop
pop
daa
or
and
inc
stc
fisubs
loop
push
cmp
sub
cmp
add
dec
pushf
mov
push
jecxz
shrl
ja
dec
fistps
ret
mov
and
fidivrl
mov
scas
addr16
adc
xchg
sbb
or
sub
inc
fnstcw
sub
sbbb
jg
lea
pop
sbb
lcall
jne
xor
loopne
cltd
pop
jae
adc
cmp
mov
sbbb
inc
and
popf
ja
dec
xchg
pop
sbb
jb
mov
sbb
adc
sub
les
js
lods
rorl
stos
nop
stos
mov
fstl
stos
adc
push
sub
mov
je
mov
xor
push
in
adc
add
xchg
mov
popf
jbe
out
pop
pop
inc
filds
imul
mov
lea
outsb
cmc
jg
stc
adc
lcall
xchg
cltd
adc
push
dec
add
jmp
adc
sub
add
ret
push
cld
sub
push
jg
shrb
aad
dec
cs
cli
lds
js
sbb
dec
je
mov
xchg
pop
outsb
addr16
fucomip
sub
fldcw
nop
std
pop
and
incb
pop
sub
lcall
lds
ret
psubw
inc
pop
shll
lretw
outsl
pop
sbb
xchg
sub
std
addb
mov
sub
mov
xchg
movsb
xchg
dec
aad
testb
jmp
test
rol
mov
or
xchg
add
into
jb
cmpsb
in
push
sbb
push
jb
lods
add
cs
push
push
aad
xchg
inc
adc
sbb
pop
int3
xchg
call
sbb
xchg
ljmp
mov
jo
aam
not
cwtl
lret
mov
cmc
sub
fsubs
imul
in
repz
and
adc
sub
and
das
rcrb
ret
test
push
push
mov
cmp
hlt
inc
inc
in
pop
hlt
outsl
jmp
or
push
adc
jge
dec
into
je
imul
adc
pop
push
xchg
loop
push
fs
sub
outsb
mov
adc
test
xchg
add
jmp
cli
arpl
xchg
mov
xchg
into
add
shll
jne
lahf
int3
jl
add
pop
cmp
in
addr16
nop
iret
xchg
cwtl
cmpl
mov
push
or
imul
or
loopne
mov
inc
daa
inc
fimull
lods
push
imul
dec
aam
or
int
add
adc
cli
iret
js
pusha
jecxz
std
cmp
ljmp
loop
mov
mov
jbe
int
out
or
incb
loopne
dec
inc
int
idiv
dec
dec
xor
fdivs
adc
pop
mov
loop
or
in
fwait
xchg
adc
repnz
push
sbb
xor
aad
cs
andl
ds
test
or
mov
sbb
rclw
loop
pop
lock
mov
and
outsl
inc
jecxz
lds
mov
mov
repz
push
popf
or
mov
pop
orps
mov
or
jmp
js
mov
daa
call
lods
cmpsb
leave
adc
pop
or
mov
mov
sbb
xor
jmp
cwtl
xchg
aad
stos
xlat
fs
sahf
test
enter
push
mov
dec
in
add
lods
push
xorl
inc
xchg
add
popf
push
cs
inc
imul
and
sub
cmp
cmp
cmpsb
daa
jmp
jb
and
mov
jecxz
xchg
mov
sub
popa
fld1
xor
push
pusha
jl
lds
xchg
jmp
xlat
cmp
fcompl
aas
pop
push
push
jle
shrl
ds
cmp
cmpsb
pmulhw
imul
adc
repz
inc
lahf
aas
mov
mov
jb
sbb
pop
xor
cmp
fcmovbe
sbb
jnp
arpl
adc
es
add
mov
test
pusha
sbb
cld
sub
jne
jl
cmp
mov
sub
mov
popf
mov
shl
jae
movsb
jecxz
xchg
mov
mov
xor
fdivl
mov
test
clc
sub
push
call
push
xchg
pop
xchg
sub
xchg
mov
out
into
and
movsl
dec
jmp
mov
lcall
outsl
push
cmp
mov
push
out
jnp
lea
cld
adc
push
add
inc
dec
jnp
jmp
sub
mov
mov
bound
iret
into
mov
stos
in
xor
dec
inc
and
mov
out
push
pop
mov
ljmp
ljmp
mov
cmc
pop
dec
inc
jns
imul
aam
push
arpl
xchg
cltd
fld
adc
mov
cmp
mov
scas
jno
mov
stos
icebp
cmp
dec
mov
push
mov
dec
into
das
sub
sarl
adc
xor
loope
xor
setns
out
xchg
fisubrs
xchg
xor
adc
sub
pop
movb
inc
andb
sbb
or
or
mov
test
ljmp
push
jge
pop
lods
and
lahf
in
daa
enter
sub
rorl
mov
scas
dec
stos
pusha
sub
sub
daa
adcl
in
ficoml
sbb
sub
out
call
mov
imul
sbb
into
add
aas
cmp
rcr
popa
leave
xchg
inc
pop
gs
inc
xor
test
pop
jmp
push
jp
int3
test
cmp
mov
loop
adc
sbb
adc
and
mov
mov
or
out
push
js
push
pop
sub
xchg
sbb
lock
push
dec
repnz
add
fwait
lods
aas
push
pop
dec
inc
inc
mov
mov
mov
test
jbe
adc
decl
inc
adc
mov
mov
jecxz
sbb
es
ds
lea
push
stc
mov
cmpsl
xchg
icebp
out
xchg
sub
dec
js
add
cmp
andb
andb
mov
pop
pushf
dec
fstl
inc
pop
cmp
clc
and
mov
repnz
jnp
fs
dec
adc
mov
sub
xor
stos
cmp
sub
aaa
test
adc
push
lahf
push
cmp
xchg
aas
mov
push
stc
in
stos
jbe
stc
mov
scas
mov
ret
cmp
cmp
adc
jge
pop
lcall
pop
inc
or
in
jae
cwtl
cmp
xor
out
arpl
arpl
daa
enter
push
cltd
dec
cmp
fldt
cmp
cmpsl
popf
rorb
out
inc
mov
mov
add
pop
pushf
daa
loop
dec
shlb
clc
jo
pusha
faddl
xchg
rorl
add
inc
popa
adc
pop
shr
scas
mov
pop
sbb
dec
and
xchg
pop
mov
imul
xor
gs
cmc
inc
adc
ret
cs
push
test
pop
inc
cmpsl
mov
mov
mov
call
xor
insl
adc
insb
imul
and
mov
pusha
push
cs
and
push
imulb
xor
xchg
jns
mov
in
int3
fidivl
mov
leave
arpl
cmp
cmp
xchg
xor
sbb
push
inc
out
mov
mov
aas
lret
into
and
cmp
std
rcll
mov
int3
xchg
xchg
sahf
pop
into
ja
sarl
jne
das
jl
and
fucomi
scas
syscall
dec
test
out
fimuls
xor
cmpsb
cwtl
ret
loope
aaa
das
pop
mulb
aaa
xchg
not
and
lods
dec
lcall
pop
int3
mov
add
inc
and
inc
lods
xchg
jno
fisubrl
aad
fs
add
inc
mov
cmpsb
pop
xchg
dec
mov
stos
adc
cli
pop
xchg
out
shrl
mov
sarb
je
dec
sub
mov
addr16
push
mov
into
inc
cmp
insb
xchg
cwtl
mov
jle
push
les
and
arpl
pop
stos
mov
ds
das
lods
lcall
add
jg
jne
bound
push
lahf
fisttpll
fildll
fnstenv
call
add
xchg
or
test
xor
lods
lcall
inc
xchg
jbe
ja
nop
les
loopne
pop
cltd
pop
jbe
and
pop
mov
ds
imul
sub
fdivl
scas
pop
popa
mov
out
cmp
dec
cmp
adc
push
fdivl
in
mov
hlt
aas
repnz
and
jbe
jbe
stos
leave
mov
in
std
xchg
cmpsl
add
mov
roll
test
jg
arpl
lahf
data16
imul
xor
aaa
mov
pusha
jnp
leave
adc
cwtl
hlt
js
out
std
cmpsb
loope
fldcw
dec
sbb
push
push
xchg
push
push
push
dec
lret
xlat
sub
test
sarb
push
sbb
add
push
xchg
test
fadds
sub
jnp
sub
push
divb
pop
movsb
xchg
gs
lock
out
hlt
fwait
in
popf
jo
out
mov
jg
or
jb
sti
addl
push
mov
jno
mov
fs
inc
or
pop
lea
cmp
out
and
dec
loop
out
repnz
fsubs
fmulp
pop
scas
push
mov
add
pushf
test
pop
mov
sahf
add
push
jns
dec
pop
jp
mov
int
dec
push
sbb
sbb
aaa
stos
xor
adc
jae
and
arpl
cltd
jle
filds
jbe
push
jmp
adc
xlat
adc
jecxz
or
jbe
xor
xchg
push
movsb
cmp
aam
mov
std
nop
jae
jg
fnstsw
aad
inc
int3
std
imul
xchg
hlt
push
sar
ljmp
lahf
or
popf
leave
inc
adc
repz
cmpsb
push
clc
and
dec
jmp
das
loop
gs
push
fwait
adc
repnz
outsl
add
mov
mov
pushl
adc
jecxz
cwtl
loop
xor
orl
cmp
mov
test
mov
jns
sub
icebp
mov
stc
js
mov
mov
cmp
xchg
lods
and
gs
xor
imul
jbe
add
pop
jecxz
cltd
repz
cmp
jge
xor
xchg
inc
loopne
add
mov
lcall
out
or
jg
xorl
mov
sti
pop
ja
xchg
xor
inc
dec
nop
cmp
xchg
rcrl
mov
divb
cmc
in
les
add
js
lods
mov
repnz
rorl
loopne
shll
popf
mov
lods
sbb
mov
pop
add
mov
and
fadd
sbb
and
xchg
lcall
and
out
mov
ja
scas
lcallw
daa
std
nop
shlb
lods
sbb
mov
mov
test
aas
scas
stos
movsb
movsl
imul
std
leave
mov
leave
insl
fldl2t
mov
bound
mov
pushf
lcall
lcall
xor
xor
mov
subb
inc
sub
inc
int
sub
pusha
jle
sbb
mov
nop
bound
loopne
dec
xor
xorl
lret
aaa
cmp
mov
push
ror
push
jb
fcmove
cltd
in
add
fstl
arpl
pop
fwait
pop
stos
jo
adc
push
sub
dec
jmp
sahf
mov
popa
cld
adc
test
mov
out
repz
pop
cmc
push
cmp
add
mov
call
push
jbe
pop
jnp
add
jp
pusha
jnp
mov
sub
xchg
test
fiadds
adc
lock
jne
xchg
cli
pop
sbb
sub
and
jns
lahf
out
scas
call
push
outsl
in
adc
aaa
pop
in
mov
xor
andl
sbb
mov
jg
sub
pop
mov
push
call
sub
add
cltd
aaa
cmp
hlt
push
gs
adc
or
sbb
add
mov
out
js
and
lds
movsl
xchg
lret
and
or
enter
imul
outsl
adc
std
mov
jns
add
inc
es
cwtl
or
in
mov
mov
push
mov
cmp
dec
mov
dec
push
mov
ret
inc
test
in
jl
imul
xchg
mov
mov
pop
fstps
mov
push
adc
in
push
ja
cmp
dec
jecxz
test
sbb
aad
jmp
movsl
sbb
and
rorb
xchg
inc
enter
xor
push
mov
nop
cli
xchg
scas
outsb
add
jnp
adc
dec
inc
fwait
outsb
pop
inc
jbe
inc
fisubs
push
fidivs
iret
and
push
cs
mov
outsb
pop
sarl
cli
leave
lcall
out
pop
fisttps
stc
fldenv
ds
clc
gs
cmp
out
xor
inc
aam
push
daa
ret
jnp
int3
aad
mov
cld
dec
pop
mov
xlat
and
jns
out
lcall
add
inc
cmp
imul
sti
repz
push
sub
push
jbe
mov
add
push
flds
cmp
repnz
lret
insb
mov
addl
pop
dec
fcmove
mov
pop
mov
xor
scas
in
inc
inc
pop
jmp
adc
push
push
mov
add
pusha
cmp
aaa
popf
inc
xor
adcb
mov
adcb
xor
push
dec
add
nop
jne
movsl
pop
aas
mov
pop
mov
mov
jmp
rolb
mov
mov
leave
call
fs
sub
lret
xor
loopne
add
enter
or
lahf
push
out
pop
divb
insb
cmp
scas
shrl
insl
xchg
pop
mov
jno
pushf
xchg
jbe
aas
or
mov
lret
daa
jb
in
stos
or
xchg
aam
cmp
jmp
and
jns
jbe
insl
std
add
mov
mov
in
fcmove
jle
jb
or
clc
inc
adc
dec
mov
imul
cmpsb
xchg
xchg
xor
js
movsb
rcrl
lea
lret
gs
sbb
test
lret
imul
test
pusha
jmp
fnstsw
jecxz
fsubrp
int3
rorb
mov
cmpsl
mov
addl
mov
loopne
push
add
inc
enter
add
dec
dec
jl
jg
pop
hlt
imul
cmp
push
mov
dec
and
sbb
dec
das
test
out
adc
pop
scas
mov
shr
dec
addl
sub
lock
and
fwait
jo
out
cli
test
fidivrs
mov
pushf
outsb
mov
mov
mov
xor
jbe
test
in
sarl
xchg
mov
dec
and
int
ljmp
punpcklbw
int3
pop
mov
pop
loop
adc
add
pop
add
pop
cwtl
inc
dec
shlb
fbld
mov
xchg
jmp
cmp
lea
scas
test
jns
inc
or
rorb
fistpl
rcrl
fwait
sub
scas
xchg
xor
outsb
dec
cmpb
adc
cld
fidivrl
xor
xchg
xchg
mov
cmp
popf
sub
lahf
pop
adc
sbb
mov
dec
test
subb
mov
lock
lock
xor
cld
fcom
push
and
daa
loop
inc
inc
dec
mov
or
cltd
sub
je
popf
lret
mov
jnp
sahf
stos
xchg
lods
mov
jb
xlat
and
add
or
adc
fidivrs
push
ds
mov
pop
mov
sub
out
xchg
inc
pop
mov
shlb
cmp
mov
imul
dec
das
xor
xor
arpl
lods
lea
clc
std
push
pop
stc
mov
aad
adc
rolb
ss
gs
ret
xchg
in
inc
int3
sbb
out
stc
cmc
lods
mov
mov
sub
add
addr16
pusha
sahf
xchg
mov
xor
lcall
cmpsl
push
inc
inc
dec
stos
mov
dec
mov
sub
stc
and
insb
mov
jecxz
rep
adc
xchg
jno
fs
pop
jmp
xor
cli
daa
xor
cltd
movsl
ja
outsl
aam
vpminub
test
or
cmp
test
mov
out
mov
nop
adc
loopne
test
repz
mov
inc
add
call
sbbb
and
cmp
movsb
dec
mov
insb
jl
cs
mov
push
xlat
lahf
ret
xorl
in
cld
hlt
enter
clc
addr16
add
jmp
subb
rcll
jp
out
int
mov
xchg
rolb
ret
push
fdiv
inc
fstps
and
leave
sbb
aaa
icebp
add
mov
fs
enter
inc
bound
pushf
mov
sub
lret
inc
push
xchg
xlat
fldt
cltd
cwtl
and
pop
sbb
inc
and
fwait
add
pushf
pop
sub
xor
inc
push
les
cmpsb
mov
pusha
in
dec
arpl
cmp
cmpsl
mov
cmc
adc
int3
push
fildl
lds
jmp
pop
mov
call
dec
and
push
dec
data16
xlat
ret
outsb
mov
push
cmc
jo
adc
das
ffreep
jle
call
or
push
ja
jg
daa
jae
cltd
fdiv
push
ljmp
add
arpl
adc
and
add
and
pop
push
scas
xchg
dec
adc
aas
daa
xor
int3
in
sub
adc
sub
push
jne
dec
sarb
sbb
ret
push
sbb
fdivl
inc
fldcw
je
mov
xchg
adc
in
daa
leave
outsl
mov
sub
jae,pn
and
and
repz
out
int3
fistps
inc
jnp
mov
pop
cmp
lcall
pop
jmp
mov
push
outsl
or
cmp
mov
popf
cli
push
add
mov
popa
scas
inc
dec
pop
sbb
cmp
jge
iret
cmp
push
in
xchg
mov
sbb
orb
test
std
clc
xchg
dec
test
lods
push
inc
pop
sub
cmpsl
aam
push
imul
out
sbb
mov
scas
icebp
mov
out
cmpsb
inc
popf
mov
out
jnp
mov
popa
cwtl
fistps
sub
sbb
inc
cmp
cmp
ljmp
jb
ds
jne
add
add
outsl
icebp
hlt
jno
inc
rcrb
fidivrs
sbb
andl
push
dec
add
mov
xor
mov
vpsubq
rcr
jecxz
dec
fs
cltd
ret
insb
roll
xchg
test
rcrl
pop
sub
aas
rolb
fadd
or
mov
xlat
lret
jae
push
call
aaa
mov
pop
test
ja
daa
enter
sub
rolb
andl
incl
ja
cmp
in
aaa
adc
xor
add
cmp
mov
add
psubusb
dec
int
mov
out
jecxz
nop
mov
adc
addr16
adc
mull
pop
mov
inc
jg
jae
sub
inc
leave
dec
lock
aaa
mov
mov
dec
or
jmp
in
fs
inc
inc
push
add
push
cmp
dec
cmpb
dec
sarl
cld
lret
adc
pop
dec
cmc
push
or
cmpsl
hlt
cld
and
cmp
popf
mov
push
shll
loope
jne
mov
lea
jmp
mov
sub
push
pushl
loop
fdiv
add
lods
jecxz
or
jmp
stos
cmp
pop
inc
les
jle
stos
and
lahf
out
jecxz
cmp
mov
adc
enter
push
push
jne
pop
pop
lds
adc
aas
xchg
jb
mov
in
add
loope
jl
pop
hlt
cmp
add
add
mov
out
jge
in
lea
lock
popa
jae
sahf
sub
jle
sahf
test
cmp
dec
inc
outsl
mov
mov
daa
adc
add
inc
pop
push
repz
imul
repz
dec
arpl
xchg
cwtl
inc
inc
sub
popa
in
addr16
add
mov
test
jo
insb
xchg
adcb
iret
push
inc
subb
clc
mov
test
dec
mov
mov
repz
sarw
fcomi
scas
cmc
mov
lods
xchg
cmc
pop
pop
dec
and
xlat
aaa
lods
shrl
add
pop
sbb
icebp
scas
test
xor
data16
stos
add
dec
dec
push
ds
xchg
push
mov
xor
hlt
dec
cmpb
in
pop
cmp
xchg
mov
addr16
and
test
inc
dec
jnp
insb
mov
arpl
js
fists
sti
cmpsb
inc
xchg
js
xor
ss
es
ret
cmpb
cmpsb
repz
adc
jae
js
test
enter
push
mov
xchg
sbb
mov
les
and
add
loope
ds
movb
rcrl
scas
popf
fimuls
mov
dec
out
or
iret
sub
cltd
clc
jmp
fmulp
sarl
cmp
rcrb
stos
in
lcall
mov
pop
pop
mov
cltd
mov
cmp
dec
jnp
and
dec
scas
cmp
testl
inc
pop
dec
jmp
je
out
mov
repz
icebp
icebp
outsl
lods
imul
or
shrb
sub
mov
pop
cmpsl
icebp
test
xchg
and
incb
cmp
dec
and
rcr
xchg
pop
xchg
dec
xchg
xchg
outsb
pop
sub
das
push
mov
add
je
push
in
xchg
push
shlb
fiaddl
ret
popa
aaa
movsb
cwtl
pusha
cmp
das
add
cltd
adc
jno
jl
push
daa
cmp
cs
adc
imul
neg
fildll
popf
mov
mov
pop
push
add
aaa
jl
jmp
stc
pop
fidivs
sbb
insl
push
sbb
out
dec
cld
loop
mov
repnz
sbb
hlt
imul
sbb
pusha
stos
jmp
sbb
jg
sub
popf
dec
les
arpl
push
testl
je
inc
xlat
pop
adc
dec
mov
imul
jg
in
nop
rolb
lods
mov
flds
icebp
xor
stc
in
popf
mov
sbb
pop
jnp
mov
ljmp
aad
sub
pop
and
mov
pop
loopne
lcall
rorl
adc
sar
ficoms
or
mov
pop
xchg
in
mov
out
cmpl
leave
aaa
sub
ss
lods
mov
call
jne
mov
test
in
cltd
orb
lret
std
rcrb
mov
rcr
test
icebp
gs
sub
dec
lea
iret
decb
mov
and
outsl
inc
subl
jl
mov
mov
cmpsb
push
xor
cmp
push
cli
js
pop
test
insl
jns
pop
add
mov
push
popf
xor
mov
sbb
data16
mov
push
cmc
ficoml
sahf
jmp
imul
and
mov
hlt
push
lods
test
inc
mov
std
movsb
andb
aas
in
ret
movsb
mov
jne
push
mov
or
inc
stc
lods
sbb
xchg
movsb
dec
fnstenv
jbe
pop
cmp
stos
jge
aas
lods
fcoml
xchg
mov
push
jns
jle
nop
xlat
mov
call
sbb
out
mov
and
sub
scas
mov
mov
notb
push
stc
sub
test
inc
hlt
addb
call
sbb
or
inc
repz
adc
hlt
mov
mov
jae
ja
aaa
dec
add
jbe
fdiv
sub
cmp
jb
ret
scas
gs
jns
in
xor
lcall
mov
push
ficoms
js
mov
adc
jns
icebp
dec
popa
xlat
mov
out
sub
adcb
testb
inc
inc
popf
stc
lret
mov
lret
jl
aam
shll
adc
adc
pop
aad
loopne
jecxz
lret
aaa
rolb
addl
sbb
lcall
ret
in
xor
sub
lock
jp
addr16
dec
je
pminub
cmpb
data16
loop
std
es
pop
xlat
rolb
clc
sahf
call
adc
mov
int
das
push
gs
cs
jmp
cli
imul
loopne
repz
stc
inc
jl
pop
mov
movsl
sbb
cmp
mov
enter
lret
jns
lods
push
nop
push
js
or
std
dec
nop
mov
adc
adc
or
loope
adc
scas
insl
jge
sbb
je
and
mov
dec
jmp
out
inc
nop
stc
ds
mov
in
adc
mov
pop
and
inc
ret
inc
xchg
xor
shrl
adc
adc
fsubr
cmpsl
idivl
mov
mov
push
jnp
jg
pop
jge
lret
jg
xlat
fiaddl
pop
xor
stos
je
push
into
and
je
add
out
lahf
and
ror
mov
cltd
std
insb
bound
loope
dec
adc
xchg
call
gs
jg
dec
jp
mov
les
jns
xchg
ret
push
push
clc
dec
dec
stos
ss
fisttps
data16
stos
add
dec
lds
or
loopne
xlat
and
rcll
out
daa
cmpsb
sub
icebp
mov
bound
add
lret
fwait
dec
scas
cmp
into
fldt
xorb
adc
fsub
push
imull
in
lods
es
push
cmp
jp
test
add
in
pop
lcall
les
jmp
in
insb
or
pop
push
jge
das
jge
and
repnz
cmpsl
xchg
imul
inc
pop
fcoms
lds
loopne
arpl
imul
cmp
in
aad
mov
je
mov
push
inc
insl
sar
sub
push
sbb
out
mov
jne
enter
mov
push
cmpsb
xor
sub
cltd
mov
leave
in
sbb
ljmp
imul
orl
les
fdiv
mov
sub
or
and
pop
jge
leave
js
sbb
inc
aas
sbb
shl
push
xchg
and
xor
sbb
aam
push
jmp
cmpl
outsl
xlat
jecxz
jmp
imul
xlat
sbb
stos
out
dec
pop
sub
icebp
mov
daa
sub
bound
mov
lods
addr16
jae
outsl
imul
and
dec
lcall
sub
das
xchg
mov
test
pop
fwait
jnp
adc
outsl
push
loopne
sbb
jge
lret
mov
sub
xor
lds
pop
inc
adc
push
adc
test
ljmp
in
xor
jl
pop
push
dec
mov
pop
jp
out
and
je
in
jne
sbb
ja
and
aas
adc
adc
fsubp
inc
fcompl
xor
push
cmp
lret
repnz
mov
aam
or
mov
js
test
jge
les
jl
in
int3
sarb
adc
adc
out
and
inc
fs
jae
into
loopne
sbb
adc
decb
pushfw
cli
stos
sbb
mov
mov
ret
jp
xlat
push
stc
dec
out
cmpsl
outsl
nopl
and
and
lret
xor
enter
adc
cmp
pop
leave
and
lock
test
pop
iret
das
es
dec
insl
ljmp
inc
cmpl
pop
push
mov
mov
xor
push
jp
pusha
cld
fwait
inc
jno
mov
ror
sub
out
mov
imul
stos
adc
mov
aas
pop
inc
pop
cmp
inc
add
out
mov
pusha
shl
pop
jb
add
jo
mov
pop
dec
sub
sti
add
lahf
and
fwait
xchg
lret
clc
repz
sub
subl
push
sahf
xorl
iret
mov
sub
scas
test
mov
icebp
push
push
inc
xor
add
addr16
inc
sbb
aaa
dec
and
mov
insl
int
enter
dec
add
rorl
xor
inc
lock
int3
push
cli
outsl
pop
xor
roll
test
outsl
inc
xor
pop
mov
jo
sbb
sbb
repz
repnz
mov
sbbb
or
xor
sbb
cmp
int
nop
mov
int3
das
stos
fbstp
jne
in
ds
push
adc
fcomps
test
xlat
or
xlat
jae
xchg
ffreep
gs
fsubr
ret
xor
push
cmp
jecxz
cmp
insb
mov
pop
ljmp
jl
aas
cmc
faddp
outsl
scas
aas
cmpsl
add
and
popa
fbld
add
mov
outsb
jo
cmp
xchg
xlat
cs
lret
xor
adc
mov
add
xor
pop
lds
dec
pop
js
and
xlat
jo
push
or
into
inc
loopne
inc
add
inc
and
jne
cmp
or
sbbb
pop
jbe
lea
mov
mov
xor
out
in
adc
adc
pop
rorl
out
cltd
cmp
inc
adc
mov
push
mov
add
movsb
test
std
xor
fiaddl
mov
outsl
or
in
rclb
xchg
out
xorb
int
pop
lods
mov
sbb
adc
dec
ficomps
loop
mov
in
sub
fsubl
pop
mov
mov
xchg
icebp
loope
mov
aad
dec
pop
divl
rcll
ds
ds
pop
pop
jns
sbb
jmp
aas
xchg
sbb
xchg
mov
mov
dec
sbb
sub
xchg
mov
out
and
decl
divb
push
dec
stos
lock
icebp
inc
sbb
mov
sbb
inc
stc
iret
add
popl
inc
push
cmp
imul
mov
and
adc
loop
adc
pop
inc
and
ss
inc
jle
mov
jb
loopne
in
or
sbb
adc
xchg
cmp
jmp
mov
xchg
lds
outsb
xor
cmpsl
es
ljmp
movsb
daa
scas
or
add
xchg
ret
jmp
pop
cmp
nop
iret
add
jmp
mov
arpl
sbb
daa
call
adc
push
cmp
pusha
mov
or
dec
mov
arpl
lock
push
insl
fildll
fmul
lret
icebp
bound
loope
xchg
or
int3
clc
adc
arpl
repz
pop
movsl
dec
xchg
xchg
stos
mov
xchg
leave
pop
arpl
add
jmp
mov
sarb
push
or
jne
ret
shrl
xor
bound
mov
fstpt
lret
dec
loop
push
test
mov
push
into
cltd
mov
call
push
lea
cld
lea
lock
sti
sbb
loopne
and
xchg
cmc
and
add
aas
sub
rorl
decl
pop
scas
jp
jbe
mov
cs
into
push
pop
inc
hlt
sbb
scas
fwait
xchg
adc
cli
cld
dec
addl
inc
iret
adc
sbb
loope
sbb
sbb
mov
xchg
lods
out
out
or
leave
push
sbb
clc
aad
fwait
mov
inc
je
sub
fdivp
pop
mov
out
mov
call
negl
mov
lcall
jno
mov
dec
add
or
mov
mov
xor
int3
cltd
out
inc
loop
xchg
xor
cmpsb
jle
sub
xor
fstps
push
lea
je
fnstcw
mov
pop
inc
push
adc
lods
test
cwtl
loop
fidivrl
mov
fnstcw
repnz
cwtl
movsb
or
scas
lods
cmp
cmp
enter
sbb
ret
stc
dec
sub
arpl
out
fadds
pop
ficoml
dec
adc
xchg
scas
pop
mov
xchg
jbe
repnz
cld
xchg
or
lret
jg
jo
and
mov
cwtl
dec
mov
mov
mov
decl
and
and
loop
pop
iret
dec
xlat
mov
aam
aas
push
pop
pop
aad
dec
pop
test
aad
add
arpl
xor
pop
lea
int
jns
xor
adc
and
sbb
sub
mov
loop
xor
lret
data16
mov
fwait
pop
pushf
dec
push
dec
or
cmc
data16
mov
cmp
mov
pop
pop
icebp
jo
push
push
pop
pusha
aad
xchg
cmp
and
mov
cmp
stos
push
push
inc
imul
mov
int3
push
add
inc
mov
lock
scas
add
fsubs
xor
insl
mov
into
pop
aad
je
adc
xchg
pop
mov
and
sbb
enter
cs
pop
and
xlat
push
repz
inc
dec
cld
call
cmpsb
stos
stos
ds
ss
pop
push
hlt
xchg
fs
xchg
jecxz
jg
fsubs
aad
nop
inc
fld
test
sbb
or
sahf
and
sub
xor
xchg
mov
pop
repnz
pop
adc
stos
inc
push
fdivrl
imul
mov
adc
jne
cs
add
scas
out
mov
std
adc
das
fmull
rcr
add
push
jnp
mov
prefetcht0
cmp
xor
insl
xor
int
adc
std
and
in
mov
cmpb
pusha
cmp
or
jb
in
or
subb
test
in
adc
icebp
dec
mov
bnd
int
daa
movsb
fistl
outsb
clc
add
nop
mov
sbb
in
cmp
fsubr
in
popa
ja
pop
movsl
insl
mov
rolb
ret
aam
push
das
mov
iret
jno
mov
dec
mov
fsubrs
stc
add
push
add
mov
jb
fistl
mov
push
inc
inc
or
inc
cmp
xlat
aam
mov
mov
xchg
daa
pop
das
sbb
push
gs
mov
punpcklwd
jno
lret
cmp
mov
loope,pn
pop
xchg
popf
dec
mov
ret
push
mov
jo
mov
mov
ljmp
add
gs
mov
outsl
mov
mov
mov
mov
shlb
adc
jge
and
xchg
pop
xchg
cmp
aad
imul
out
insl
xchg
jl
xor
out
repnz
sti
leave
add
xor
int3
sbb
cs
insb
or
mov
adc
cmp
out
sbb
mov
mov
loopne
cmp
adc
scas
xchg
mov
ljmp
fwait
fldenv
xchg
push
or
lcall
enter
pop
test
adc
cmc
lods
pop
mov
mov
imul
or
out
inc
or
ss
xchg
dec
popf
push
jo
mov
dec
das
or
repz
es
push
xchg
mov
pusha
loop
mov
mov
popf
mov
lea
stos
push
scas
sti
cmp
jmp
jb
jo
pusha
sahf
cmp
fs
adc
cwtl
imull
mov
xchg
bound
movl
clc
negl
lods
xchg
or
push
mov
mov
jle
out
xor
loopne
add
ss
jne
push
mov
call
push
loop
ljmp
inc
or
pop
insl
mov
sbb
or
lret
add
inc
cmp
icebp
xchg
lcall
nop
cld
xor
clc
mov
fimull
xchg
xor
mov
pushf
lcall
mov
in
scas
mov
cmp
sub
and
push
xchg
shll
cwtl
mov
sbb
add
in
int
mov
or
push
xor
clc
fisubrl
outsb
xchg
mov
loopne
scas
lahf
pop
mov
or
in
pop
popf
or
mov
lock
lock
mov
add
stos
mov
aad
push
sub
ror
nop
mov
dec
daa
pushf
inc
mov
out
push
sbb
cs
scas
pushf
sbb
xchg
mov
cmc
and
or
sbbb
jmp
std
je
cmp
add
or
stos
rol
cli
fcoml
cmp
icebp
xchg
ljmp
out
loope
mov
ljmp
and
cmp
mov
in
mov
cmp
pop
pop
add
das
scas
xor
sbb
mov
inc
jp
inc
or
push
push
inc
bound
jp
stos
mov
xor
or
mov
mov
mov
cmp
and
cmpsl
cmp
sub
arpl
sbb
sbb
fcomip
outsl
or
xor
pop
test
gs
ljmp
push
pop
rclb
fs
mov
xchg
and
mov
mov
pop
xor
in
cwtl
outsl
das
dec
jno
dec
pushf
cmpb
ds
push
in
in
aaa
mov
adc
xchg
nop
loopne
test
outsb
cltd
loope
mov
dec
push
cli
mov
pop
inc
addr16
mov
or
xchg
dec
and
je
inc
push
jp
iret
cmp
and
rcll
and
lahf
jbe,pt
mov
adcb
into
adc
sub
mov
hlt
add
and
inc
sbb
sub
dec
and
icebp
cmpsb
daa
ja
adc
push
push
inc
mov
lret
or
clc
mov
sbb
popf
lcall
fucomi
xchg
push
out
jecxz
pop
or
mov
add
jmp
push
inc
push
or
rol
mov
in
mov
loope
push
dec
push
inc
adc
mov
and
dec
inc
mov
gs
enter
sbb
xchg
xchg
clc
pop
pop
xchg
pop
roll
mov
xor
hlt
imul
subb
cmpsb
xor
and
in
jl
add
jnp
or
mov
dec
mov
push
pop
sub
xchg
jl
stos
dec
nop
and
inc
cmpsl
mov
mov
sub
ficoms
or
in
ss
inc
or
loopne
adc
mov
sbb
or
fs
sub
les
cmp
outsl
sub
sbb
dec
jno
push
pop
sbb
push
xor
fdivl
outsl
xchg
sbb
jp
push
arpl
xorb
add
icebp
cmp
sti
popf
lods
ret
inc
push
clc
test
fstpl
or
dec
sub
pop
vpunpckhwd
mov
jno
popf
cltd
adc
sub
add
xchg
loop
push
and
jno
push
sarl
cld
paddsb
push
adc
sub
inc
mov
fidivrl
test
std
sbb
ret
push
daa
dec
daa
ja
pop
add
cmp
inc
xor
stos
idivl
xchg
inc
xlat
addr16
fstps
sbb
std
ds
ret
pop
push
xchg
bnd
cwtl
adc
xor
stos
lock
popf
pop
popf
test
or
xchg
repnz
push
jg
jmp
sbb
mov
out
add
add
hlt
rorl
sub
cmp
jmp
dec
inc
adcb
dec
punpcklwd
mov
int
pop
sub
xor
dec
inc
pop
out
jno
les
mov
repz
iret
push
push
and
push
jle
adc
dec
daa
pop
mov
lea
cmp
rcrl
mov
cmp
daa
adc
xor
ret
cltd
cmpl
adc
mov
pop
ljmp
inc
mov
int3
outsb
cltd
pop
jle
inc
ljmp
sub
imul
lahf
lods
sbb
jp
dec
jo
arpl
inc
nop
inc
pop
int
dec
mov
push
adc
fiaddl
pop
mov
or
fnstenv
mov
inc
insl
sbb
out
test
icebp
adc
in
xchg
push
cwtl
pusha
adc
pusha
shll
mov
cmpsb
or
jl
les
push
ljmp
cltd
fcomps
or
jbe
jge
push
notb
nop
loopne
pop
adc
mov
movsb
shl
xor
xchg
shll
mov
mov
mov
test
aas
mov
lcall
fisubrl
adc
lret
cmpb
test
fsub
stc
add
push
adc
aam
add
mov
rcl
mov
lock
xor
mov
jo
adc
xchg
push
cwtl
es
ljmp
jg
hlt
std
push
mov
repz
test
ret
fistps
cmpsl
outsb
arpl
inc
loop
inc
scas
adc
inc
mov
xorb
test
sbb
loope
sbb
sub
mov
xor
jb
cld
popl
pop
mov
sub
std
cmp
cmp
sbb
pop
std
pop
popa
inc
iret
push
dec
test
mov
arpl
out
scas
dec
addr16
sti
mov
imul
dec
adc
repz
add
push
dec
mov
movsl
mov
add
or
pop
bound
jecxz
adc
mov
cwtl
repnz
push
ja
mov
mov
push
mov
stos
push
or
jae
cmpsb
insl
xor
clc
mov
inc
hlt
mov
in
cmp
add
in
pop
jno
je
sbb
lret
cmpsl
cltd
jns
aad
xchg
lea
cmpsl
hlt
adc
and
sbb
xchg
pop
lcall
je
andb
push
lcall
lcall
mov
test
daa
lds
push
mov
movaps
cltd
std
sahf
lahf
sub
push
popa
pushf
sub
mov
call
push
cmp
mov
push
cmpsl
ss
js
mov
pushf
incb
mov
mov
sbb
cld
and
dec
push
fs
mov
adc
cmp
rclb
push
outsl
sub
or
pop
jp
jbe
idiv
test
mov
mov
lds
and
jae
pop
mov
into
xchg
pushf
sbb
aaa
push
pop
loopne
xlat
inc
mov
sarl
xchg
mov
in
cwtl
inc
add
aam
jl
add
cmp
bound
mov
mov
push
div
vmread
xor
out
dec
pop
aad
and
mov
pushf
insb
cmp
outsb
loopne
sbb
in
inc
shlb
mov
push
xchg
es
mov
or
iret
push
lret
into
xchg
jecxz
xchg
mov
inc
lret
addr16
scas
xor
push
jne
jbe
sub
leave
sbb
outsb
loopne
mov
fsubrs
and
rcrw
ss
inc
outsl
lock
lods
cmp
sub
rcrl
sarb
pushf
dec
adc
lcall
out
in
fs
jae
scas
xchg
jl
jbe
sbb
popf
loop
rclb
mov
mov
push
shr
insb
xchg
pushf
jns
cmpb
cwtl
mov
xchg
out
lods
sbb
shrb
xchg
stc
das
fidivrl
pop
cli
sub
popf
in
imul
or
jmp
lods
hlt
pop
mov
or
cmc
mov
roll
fistpll
mov
cli
std
mov
aaa
jl
pop
daa
mov
roll
lods
dec
movzwl
stos
test
xchg
add
repz
sbb
call
or
pop
and
pop
fbld
shll
mov
jnp
mov
push
xchg
test
dec
mov
sbb
push
imul
mov
rcrb
xor
or
jbe
dec
fs
add
into
leave
imul
aaa
out
imull
scas
fcom
dec
in
and
sub
neg
mov
enter
lds
call
mov
xchg
xor
in
arpl
add
int3
jl
xchg
push
in
and
cmp
add
fidivs
dec
mov
fdivs
inc
out
mov
lcall
es
mov
rcrb
cmp
mov
icebp
xchg
push
mov
cmpsb
ds
rclb
in
daa
testb
xchg
add
push
sub
push
sti
add
sahf
cmp
mov
jl
test
insb
fwait
ss
les
in
jp
data16
dec
scas
xchg
daa
mov
ja
xlat
test
testl
pop
movsb
int3
cs
adc
js
jno
cmp
pop
inc
sbb
cli
adc
dec
imul
mov
jp
jp
and
pusha
rcrb
js
mov
lret
shrb
xlat
jnp
fsincos
cmp
rcl
sti
push
ret
xor
push
cmpsb
xor
add
push
sub
mov
in
leave
inc
out
or
inc
mov
iret
out
lcall
nop
lea
fldcw
cmp
xchg
push
mov
mov
cmp
mov
xor
add
aaa
inc
pop
mul
in
and
add
cmp
add
xor
push
jne
fs
ret
repz
mov
xchg
les
scas
orb
dec
sub
jp
xor
mov
fsubrl
jmp
xchg
mov
mov
push
mov
ret
iret
xchg
fisubrl
std
insl
and
xor
xchg
xchg
fisttpll
push
jmp
dec
repz
flds
gs
int
hlt
mov
js
xchg
and
add
mov
jo
pop
mov
xchg
dec
jmp
inc
mov
sub
mov
out
jae
rolb
scas
aam
add
lods
mov
leave
out
sub
fcom
testl
or
mov
mov
lods
inc
dec
in
fcom
imul
push
cmp
test
test
dec
bound
icebp
incb
xchg
arpl
out
mov
inc
test
out
mov
mov
adc
inc
dec
addr16
add
mov
push
int
jmp
in
dec
pop
stos
or
sub
loope
push
cmc
or
je
es
stc
out
mov
scas
jns
sub
fwait
insl
cmp
mov
in
push
cwtl
aam
ret
sbb
decb
or
mov
pop
jnp
xorl
lods
fadds
sbb
in
stc
push
xchg
mov
xor
pop
add
loope
repz
outsl
loop
dec
lea
inc
xchg
fyl2xp1
ljmp
adc
out
jge
pop
popa
int
push
pop
mov
dec
mov
mov
lods
push
adc
fs
out
mov
add
insl
push
roll
push
mov
or
mov
outsl
mov
std
int
out
mov
pop
jb
jle
fwait
lea
sbb
pop
ficoms
in
loopne
pop
cltd
jno
pop
inc
cmp
notb
out
pop
mov
int
in
testb
lods
sarb
fnstsw
fsub
add
inc
test
or
mov
int3
lods
mov
pop
mov
mov
movsb
cmp
clc
xchg
pop
scas
mov
movsl
cmpsb
mov
dec
cs
cmc
pop
std
and
inc
fsubrs
rol
xor
mov
add
mov
push
mov
mov
sbb
inc
sbb
mov
cld
mov
inc
pop
push
jg
and
aad
int
jbe
mov
stc
mov
cwtl
mov
test
in
add
cwtl
push
lahf
aas
xchg
adc
jle
mov
or
dec
das
jne
pop
cli
icebp
push
pop
mov
fisttpl
lcall
pop
imul
sbb
pop
sbb
mov
mov
or
popf
ds
adc
ljmp
mov
loopne
je
push
mov
shll
or
mov
cmpsb
cmpsl
xchg
jnp
mov
xchg
dec
cwtl
adc
lret
adc
xor
or
xchg
and
xchg
push
imul
ret
cmp
ret
push
and
gs
pop
pop
pop
mov
push
jge
mov
mov
movsl
adc
icebp
cmp
repnz
pop
sbb
push
bound
push
adc
out
aad
pop
pusha
insl
aam
push
mov
rcrb
sbb
cmpsl
pop
mov
leave
adc
jmp
mov
bound
push
jmp
fisubs
fs
mov
jns
push
add
and
mov
test
in
inc
mov
ret
lods
je
loope
lods
fnsave
repz
sub
ds
out
pop
or
stc
into
inc
ss
or
mov
mov
add
mov
jle
pop
pusha
sbb
jl
add
fdivl
shll
sahf
in
shll
cmp
dec
sbb
test
ret
inc
in
dec
xlat
lock
pop
pop
pusha
mov
dec
ja
xor
shrb
stos
loop
movsl
stc
andb
in
cld
fcompl
sbb
mov
ficoml
cmp
push
sub
outsb
xor
mov
test
clc
sbb
repz
sahf
jg
cwtl
lcall
loop
popf
jg
imul
sub
and
pop
mov
push
cmp
test
negl
mov
out
int
ffreep
cmc
cld
or
mov
aas
sub
lret
add
je
dec
cmp
jge
aam
sub
sahf
sti
in
dec
dec
icebp
in
insb
out
xor
jmp
lds
out
xchg
addr16
clc
push
js
std
jno
push
mov
fdivp
cltd
push
sub
lods
rorl
dec
loopne
jg
shrl
stos
dec
lea
xchg
add
push
xor
push
mov
cs
adc
mov
rcl
or
mov
int
jnp
jnp
xor
mov
adc
ja
imul
mov
imul
mov
sub
mov
in
jnp
push
xlat
xor
in
fidivl
cmp
push
fisttpl
loopne
cmp
aam
cmp
mov
sbb
cmc
fmuls
rcrl
cltd
ret
push
outsl
sbb
push
std
dec
dec
xchg
xorl
or
aas
rcll
pop
xchg
repnz
lret
xchg
leave
rolb
daa
ficoms
cmpsb
cmp
in
sbb
dec
xor
rcrb
mov
test
sbb
jnp
inc
mov
jmp
xchg
dec
aaa
mov
add
insb
mov
cwtl
or
jle
cmp
jmp
mov
pop
rcrb
or
ret
jo
or
add
aas
cli
call
and
jb
cwtl
cmp
lods
sbb
leave
aas
sub
fwait
test
cwtl
fdivrs
xchg
hlt
mov
loop
insb
cltd
push
xor
rcrb
mov
pusha
and
and
xchg
int
ret
xor
rolb
std
mov
mov
out
jmp
cmp
adc
rcrb
jnp
push
ds
and
popf
cli
in
outsb
cmpsb
shll
sbb
cmp
sbb
mov
and
cld
stos
stc
loopne
andb
mov
loop
push
int3
mov
mov
out
pop
jne
fldcw
fiaddl
sbb
mov
dec
mov
mov
ret
push
mov
cmp
popf
cli
out
movsl
inc
push
les
loopne
mov
aam
add
push
lret
dec
sahf
jns
cwtl
jnp
add
test
test
push
push
cmp
adc
add
mov
scas
xchg
jl
shll
mov
inc
lods
jo
xlat
scas
pop
push
iret
ja
mov
dec
adc
push
cmpb
and
ret
jns
cmpsl
popa
inc
dec
insl
scas
js
movsb
push
pop
lods
lods
cmp
dec
adc
sub
cwtl
dec
lods
fcmovbe
mov
jmp
and
jo
ja
xor
add
inc
ja
call
jl
das
test
dec
xor
sub
insl
lret
and
sahf
jns
pop
ret
jo
loope
push
lcall
push
fxch
hlt
or
fcmovne
sbb
sbb
mov
jecxz
jl
out
scas
aam
mov
fucomip
jg
ja
popa
inc
sbb
xchg
push
or
push
bound
mov
cmp
lds
xor
add
int
fs
xor
cmpsb
popf
push
sti
stos
sbb
fnstsw
inc
push
andl
push
cmpsl
stc
cmpsb
pop
xchg
dec
mov
jecxz
js
add
or
jne
pop
sub
lods
aad
mov
dec
ficoms
mov
cmp
lds
inc
mov
imul
jnp
shrl
adc
sub
ja
lea
push
addr16
pop
jne
out
scas
mov
lds
lsl
mov
in
loop
sti
divl
mov
les
cmp
aaa
and
popf
xchg
jmp
adc
sub
and
int3
imul
imul
stos
mov
aad
dec
dec
iret
lods
inc
rorl
push
cmpsl
mov
cmpsb
xchg
iret
dec
sub
aad
mov
das
jb
cs
inc
pop
ljmp
das
mov
dec
test
mov
pusha
jne
pop
pop
jns
add
popa
repnz
repnz
fbld
fistl
addr16
ljmp
xchg
xor
mov
cwtl
cld
mov
outsb
sbb
mov
pushf
fistpl
popf
mov
aas
rorb
icebp
mov
mov
jle
aas
lea
loop
ds
push
nop
xchg
bound
data16
popa
testb
sub
divl
xchg
pusha
out
lcall
les
push
pop
mov
or
int
jmp
leave
loopne
mov
lahf
xchg
in
xchg
int3
jne
jno
imul
fsubrl
and
mov
decl
sub
adc
mov
add
inc
xchg
pop
push
lcall
lock
xchg
add
into
add
xchg
add
push
std
rclb
push
mov
sub
xchg
xchg
cltd
orb
popf
dec
pop
lret
cmpsb
jge
fst
mov
sbb
and
mov
shll
fadd
in
mov
mov
sahf
call
mov
xchg
lret
lods
mov
pop
movsb
adc
nop
popa
jl
pop
mov
insl
xchg
stc
clc
jae
stos
mov
push
int3
aas
mov
imul
mov
in
das
ss
loope
pop
mov
push
dec
cmp
xchg
pusha
and
mov
inc
dec
js
rorl
mov
add
cmp
ret
arpl
arpl
and
popf
sub
rorb
nop
frstor
loopne
adc
sahf
ss
loop
mov
clc
xchg
scas
mov
insb
lcall
into
in
imul
adc
pop
lret
orl
mov
test
stos
mul
xor
mov
scas
push
insb
repz
iret
xchg
divl
outsb
cli
push
add
mov
ss
pushaw
inc
addr16
std
or
mov
mov
fdivs
jb
sub
sub
fbstp
mov
inc
push
inc
and
mov
pop
dec
mov
sub
lods
shll
inc
pop
ret
cmp
stc
mov
dec
pop
popl
inc
ret
popf
jmp
jb
outsb
inc
inc
xchg
insb
jp
rcrb
mov
mov
mov
pop
push
cwtl
inc
mov
fwait
outsl
stos
mov
add
jo,pn
lds
push
sahf
ja
sub
cli
jmp
aam
jnp
inc
fdivs
fisttps
outsl
cld
int
shl
inc
inc
sub
cmp
dec
js
mov
in
mov
cs
and
mov
aad
mov
ds
cld
jbe
pop
pop
mov
enter
cwtl
or
xchg
dec
add
inc
jne
xchg
xor
mov
sbb
out
xchg
mov
sbb
imul
cmc
imul
ja
xchg
shr
push
inc
mov
mov
push
movsb
stos
or
imul
fcompp
push
test
sbb
mov
dec
ljmp
imul
sahf
das
in
loop
sbb
int3
push
int3
mov
hlt
sub
mov
or
mov
adc
repz
cltd
jmp
aaa
mov
leave
sbb
inc
cs
lds
or
cmp
pop
fs
clc
add
inc
push
fmull
insl
in
stos
and
ja
pop
push
in
leave
loope
inc
adc
jno
shrl
mov
push
or
in
dec
jmp
pop
out
push
icebp
cmp
jecxz
outsl
push
lcall
outsl
sbb
dec
cmpsl
pushf
xlat
pop
inc
cmp
dec
jp
inc
push
test
jge
push
cmpsb
mov
jecxz
sub
popf
pop
sub
aas
xchg
inc
fcomps
inc
mov
movsb
adc
pop
sbb
ficoml
inc
dec
inc
sub
pop
pop
jo
ss
sahf
insl
push
cltd
xchg
and
dec
outsb
int3
out
xlat
pop
divl
pop
add
jmp
cli
das
movsb
cmp
xchg
int
mov
int
int
cmc
bound
push
pushf
push
push
loope
imul
jl
lcall
aaa
enter
pop
stos
dec
fwait
jg
add
dec
inc
pop
cld
fisttpl
sub
sub
dec
scas
or
mov
gs
fwait
jne
arpl
cmp
into
add
jne
cwtl
xchg
out
xchg
mov
into
fimull
lahf
rolb
mov
push
out
or
test
xor
loope
aam
sbb
and
arpl
xchg
sbb
imul
aad
popf
mov
icebp
aam
push
mov
or
pop
aam
icebp
fchs
das
mov
sub
ja
add
sbb
mov
mov
movsb
aas
cmpsb
je
dec
push
int3
es
jl
mov
jno
pop
ljmp
cmp
sub
sub
add
inc
pop
aam
ljmp
xchg
and
sub
cmc
jge
fsubr
jb
stc
imul
add
sbb
mov
ror
inc
or
loopne
sub
orb
mov
in
imul
jns
ss
sbb
mov
es
sub
loope
inc
in
mov
mov
xlat
les
mov
clc
clc
add
and
mov
adc
rolb
mov
mov
jle
int
push
and
add
adc
frstor
cmp
test
jb
inc
inc
and
sbb
cmc
cmp
sarb
add
cli
aaa
sub
fwait
dec
mov
pushf
mov
cwtl
cmpl
insb
jmp
popa
lods
xchg
test
adc
in
xor
mov
mov
jnp
mov
popa
fimull
loopne
push
xor
imul
jbe
xchg
cld
or
cmc
inc
push
jbe
pop
add
scas
fwait
lcall
pop
out
mov
js
int3
push
aam
sahf
mov
lea
in
add
lret
mov
or
cmp
out
rcll
and
fwait
sub
and
jge
xlat
test
inc
xor
cmp
pop
rorl
insb
test
mov
pop
xor
sbb
mov
mov
jb
imul
push
insl
cwtl
and
je
stc
into
xor
mov
xchg
in
sub
pop
xor
pop
cmp
int3
xchg
pop
mov
cs
loopne
add
add
xchg
push
gs
scas
out
mov
xchg
inc
inc
push
cmp
mov
mov
dec
sbb
repnz
dec
fstps
cwtl
sbb
pusha
pop
or
or
dec
mov
cs
shrb
push
loopne
pusha
fdivrs
ret
adc
xchg
sbbl
repz
out
xchg
jg
fldcw
and
clc
cmpsb
scas
in
call
push
insl
sbb
adc
or
inc
mov
cmp
jecxz
or
pop
mov
lret
cmp
jl
fisubs
jae
hlt
rorb
xchg
dec
lret
test
std
jae
ds
fstpl
std
push
leave
sub
adc
xchg
ss
and
icebp
data16
scas
inc
loop
jns
int3
data16
sbb
pop
jb
jl
std
outsb
add
cmp
sbb
and
mov
xchg
aaa
or
adc
pusha
pop
fxtract
bound
pop
stos
mov
insl
stc
xchg
mov
lods
add
aad
dec
notl
pop
adc
push
sub
mov
data16
mov
sbb
out
sahf
imul
or
lret
in
imul
rcrb
adc
or
cmp
xor
shlb
sbbl
sahf
in
sbb
std
sub
sti
xchg
stc
add
imul
pop
jnp
aam
pop
dec
hlt
push
popf
mov
lea
mov
push
cmp
and
cwtl
mov
rorl
jne
movsl
fcoms
loopne
mov
pushf
clc
and
pop
cmp
test
mov
mov
mov
sbb
dec
cli
pushf
addr16
jp
aam
jbe
ds
aad
jno
pop
sub
inc
subb
std
or
outsl
jnp
loop
pop
fimuls
stc
or
mov
add
pop
sbb
stos
inc
sub
outsl
mov
jno
mov
push
dec
es
adcl
mov
mov
xorb
lret
roll
mov
push
xchg
fstpt
add
scas
add
mov
sbb
mov
ss
inc
jbe
cmpsb
pusha
shrb
sub
and
insb
faddl
aam
imul
pop
pop
sub
and
aam
pop
scas
mov
fldcw
addr16
mov
mov
arpl
into
push
les
aaa
inc
jle
adc
and
dec
daa
arpl
ja
push
fsubs
lods
aam
fistl
xor
xor
mov
adc
jge
cmp
adc
js
mov
push
cmp
push
repz
or
add
fsubp
imul
int
mov
fsts
test
mov
inc
shrb
cmp
jp
repz
dec
and
mov
xor
pop
sbb
and
test
xchg
cli
and
pop
imull
xor
idivl
sub
outsl
dec
xchg
idiv
lret
xchg
inc
pop
xorb
int
sarl
popf
cltd
ret
push
repz
out
mov
pop
test
mov
int3
enter
iret
and
in
adc
sub
fcom
dec
pop
lret
mov
xchg
adcl
jp
repnz
mov
decb
and
jb
mov
jl
pop
and
jl
pop
addr16
sbb
enter
dec
dec
std
out
push
mov
adc
pusha
mov
out
xor
xchg
bound
jecxz
and
pop
mov
xchg
out
test
add
sub
push
push
inc
aad
loope
jne
cmp
lret
jl
adc
mov
adc
cmc
mov
cmp
pop
pushf
fldl
add
ret
mov
sub
jno
sbb
mov
in
fmul
add
outsb
add
repnz
xchg
scas
add
movsb
mov
or
jne
inc
outsl
aaa
lahf
into
int3
cmovns
or
mov
cmc
scas
lahf
mov
jl
xor
lcall
xchg
xchg
adc
xchg
add
or
dec
int
add
dec
or
cmp
xchg
cmpsl
sbb
stos
pop
mov
lahf
insl
mov
enter
adc
jl
xchg
out
jle
dec
add
rol
cltd
cld
pop
push
push
dec
push
cmp
test
sbb
xchg
out
out
and
sub
sbb
cltd
mov
int
loop
outsb
mov
mov
stos
ds
and
or
fdivrl
mov
mov
or
mov
mov
test
adc
lds
xor
stos
fisttps
mov
sahf
lret
jae
or
inc
test
pusha
jle
fadds
push
lea
cmp
repnz
ja
xor
add
mov
mov
inc
add
movsl
push
adc
sbb
sbb
leave
push
pusha
mov
out
pushf
mov
push
dec
mov
dec
jge
cmp
mov
sti
int
inc
leave
dec
addr16
sbbb
ret
pushf
xchg
push
sbb
fistpl
cmpl
mov
xor
sub
fisttpl
out
adc
das
jbe
cmp
jb
popl
inc
fistpll
push
push
test
adc
dec
cwtl
fwait
aas
hlt
dec
into
movsl
jbe
in
stos
aaa
sarl
xor
outsl
sbb
movsl
jne
mov
dec
cmp
mov
mov
pop
mul
mov
or
outsb
adc
jp
enter
adc
jbe
fbstp
lods
daa
xor
sbb
lahf
in
dec
decl
xchg
sbb
jbe
or
aas
js
sub
jle
dec
repz
adc
add
mov
les
lock
mov
mov
mov
and
pop
add
cmp
mov
mov
mov
stc
sbb
outsl
enter
add
sub
scas
jb
push
push
xor
sub
roll
xchg
inc
xchg
stc
sbb
out
lds
movsl
mov
cmpsl
pop
inc
faddl
push
fsubr
insb
pop
push
jb
pushl
movb
add
aam
out
cmc
jbe
sbb
pop
ret
lea
shlb
ss
cmp
pop
mov
and
cltd
or
shlb
int
adc
jmp
mov
test
stos
movsl
push
add
dec
pop
xchg
fs
sbb
sub
arpl
loop
pop
ljmp
jbe
into
stos
mov
stc
cmp
iret
hlt
orl
fwait
adc
jle
addl
pop
insb
xchg
dec
in
or
push
jns
sbb
loop
in
sub
addl
push
adc
xchg
cmc
push
mov
push
and
sbb
scas
loopne
or
pop
mov
aad
jb
frstor
inc
int
add
jb
les
ljmp
cmp
daa
sbb
shrl
push
ljmp
inc
in
mov
jno
out
xor
ror
mov
mov
leave
push
push
rclb
sub
cwtl
push
dec
cmpsl
cmc
rcl
pop
inc
xchg
test
fwait
sub
push
sub
ret
cmp
xor
loop
cmp
outsb
cs
jecxz
sahf
jns
cmp
lods
out
jbe
add
fcoms
popa
insb
dec
cmpb
lahf
test
pop
ds
jmp
mov
repz
daa
jne
push
bound
pop
cs
mov
jmp
out
sbb
out
jne
cmp
mov
xor
js
pop
push
lds
fnstsw
pop
cmpsl
mov
fcompp
icebp
push
jmp
inc
mov
cmp
fcompl
or
cmp
cmp
mov
repz
imul
fldl
insl
pop
lcall
mov
inc
xchg
push
sub
adc
xchg
outsb
movsl
jmp
rep
pop
dec
mov
add
in
loop
es
push
lods
aam
inc
pop
clc
rcll
mov
inc
clc
addr16
mov
ja
xor
shr
dec
cmp
fimuls
jg
cmpsb
out
pop
aas
push
movsb
xchg
fidivrs
adc
les
loopne
add
scas
jbe
mov
icebp
bswap
sub
fxch
cmp
vandps
loopne
out
push
jns
dec
fs
xchg
aad
push
rcll
push
loop
push
mov
lahf
or
inc
imul
jnp
mov
mov
or
cmp
es
pop
dec
push
xor
pop
insb
gs
push
shrb
aaa
cli
test
cmp
mov
or
adc
or
mov
and
jl
rcl
ds
test
mov
mov
shrb
mov
loope
sub
mov
insb
addb
sub
inc
cmpsl
shrl
in
insb
mov
jl
outsl
inc
cmpsl
sahf
xlat
rcl
jae
adc
mov
dec
mov
add
xlat
incb
es
mov
dec
xor
jge
sub
cmpsb
in
and
fnstsw
rorl
test
jns
movsb
ret
jno
add
test
dec
push
inc
jno
cmp
lods
and
and
push
jmp
mov
xchg
pushf
insl
sub
sub
jne
mov
inc
scas
add
movsl
xchg
or
dec
xchg
cmp
mov
or
sub
movsb
es
sub
test
cmp
fnstcw
sbb
out
add
jne
in
lods
and
sti
imul
es
lods
sub
addr16
sbb
mov
xchg
sarl
mov
ss
jne
mov
loopne
push
or
pop
xor
dec
and
mov
in
ret
loop
shl
dec
inc
and
sbb
imul
push
add
jne
les
loopne
jmp
sbb
mov
jg
or
mov
repz
jnp
insb
push
popa
shlb
out
push
sbb
and
dec
mov
das
inc
inc
addr16
pop
not
lds
cmc
les
and
in
ret
dec
out
in
hlt
adc
xor
pop
or
pop
inc
hlt
sti
ja
push
add
lea
js
cwtl
ret
or
pusha
addr16
mov
lds
insl
cmp
inc
sub
rcl
xchg
aad
xor
lret
pop
or
push
sbb
aad
and
xlat
movaps
je
insl
add
shl
jle
mov
jbe
fimuls
incb
mov
rclb
les
cltd
movsl
add
cwtl
add
std
outsb
or
and
push
or
scas
push
cmp
sbb
sahf
add
mov
mov
loope
pop
sub
enter
sub
inc
sbb
jns
cmp
sahf
sbb
jne
les
sbb
adc
and
mov
mov
notl
dec
xor
mov
rcl
mov
aaa
jns
push
bound
hlt
xchg
cld
rolb
bound
mov
jg
jg
mov
mov
ljmp
mov
add
or
daa
cltd
data16
mov
cmp
jae
cmpsb
mov
mov
cmp
imulb
sub
sbb
aaa
in
testl
xchg
aam
pop
pop
add
pop
cs
jecxz
xlat
dec
popf
xchg
jo
and
sbb
mov
or
jb
gs
push
icebp
test
fldt
pushf
pop
out
fwait
out
mov
cli
dec
lds
aas
add
popa
mov
cmpsl
dec
inc
dec
or
pop
inc
xor
jge
dec
add
test
sbb
out
ljmp
loop
mov
push
mov
mov
loop
mov
repz
lret
int
iret
je
icebp
dec
aad
lret
sbb
mov
lret
movsb
hlt
negl
jae
repnz
mov
or
rcl
sub
addb
dec
jns
es
pushf
loope
add
das
dec
mov
sbb
push
ret
leave
test
mov
pop
imul
sbb
lret
cld
mov
in
fs
lretw
leave
or
les
repnz
push
sub
jmp
test
jle
mov
out
lods
cmp
sahf
jmp
mov
cmp
pop
in
cmpsb
mov
jno
push
xchg
es
adc
in
mov
sub
sbb
movsl
adc
fnstenv
fdiv
jmp
push
mov
rcrb
cs
pop
or
lods
jne
pop
mul
lcall
add
add
or
mov
mov
jge
inc
mov
jns
repnz
dec
lcall
gs
mov
ror
ljmp
jne
mov
adc
xchg
lock
add
fs
xchg
sbb
jg
push
sbb
pop
xor
clc
sahf
adc
fsubrp
ficoml
mov
cmp
mov
push
pop
mov
loopne
popf
inc
std
scas
or
loope
sub
insb
lock
mov
push
xor
les
pop
aas
and
xchg
dec
mov
jbe
and
stos
inc
and
xchg
mov
push
add
rcll
xchg
xor
mov
addl
add
mov
les
mov
push
inc
jl
pop
pop
xchg
test
mov
mov
inc
mov
push
pop
sbb
jae
dec
add
pop
mov
adcl
xor
cld
xchg
and
jae
push
repz
mov
mov
xlat
loopne
inc
dec
enter
out
int3
xor
push
mov
popf
jmp
inc
jl
scas
vorps
pop
push
add
sbb
test
lds
cmp
lret
imul
mov
adc
arpl
push
xchg
js
cmp
sbb
mov
dec
pop
pop
pop
or
adcb
js
ret
adcb
rorb
add
cmpsl
out
test
adc
jae
xor
inc
inc
fs
test
iret
sti
aaa
dec
subb
loop
ljmp
cmc
insb
mov
pop
movsb
cmp
outsl
jmp
dec
sbbb
stos
lahf
cwtl
push
jmp
test
mov
mov
mov
xchg
adc
mov
into
in
cmp
pushf
insb
int3
cmp
and
push
jo
pop
jecxz
mov
adc
fnsave
add
or
mov
es
mov
sarb
adc
mov
sbb
xchg
call
or
dec
cltd
in
rorb
out
add
mov
mov
push
sbb
jnp
lock
cli
cli
fcompl
inc
or
sub
inc
push
jae
jne
outsb
mov
mov
dec
inc
repz
ficomps
int
invd
mov
repz
push
in
jne
mov
pop
outsb
insl
incb
jbe
sarl
pop
cmp
fcoml
xor
cwtl
dec
imul
ja
mov
stos
dec
sbbb
fcompl
and
xchg
sub
jb
mov
sub
sbb
jmp
or
cwtl
cs
ret
pop
jg
xchg
jae
les
scas
jecxz
adc
mov
test
sub
mov
inc
xor
jne
fdivrs
cld
out
rcr
adc
lcall
sbb
lds
mov
pop
int
or
pop
jge
icebp
push
das
xor
inc
push
adc
jbe
sbb
in
xchg
aas
lret
pop
sbb
fsubrs
int3
lret
ss
mov
aas
loopne
push
push
mov
test
push
inc
and
fsubs
jnp
sarl
mov
aad
cmpsl
orl
mov
movsb
sbbb
ljmp
out
xchg
repnz
mov
pop
xchg
movl
pop
js
add
mov
ret
mov
lods
setno
cmp
push
sbb
shll
js
in
push
jle
sub
std
arpl
push
shl
popl
test
popl
in
jle
add
in
jle
xor
xchg
ds
add
jmp
lea
cmp
cld
dec
insl
xchg
stos
dec
repz
shlb
test
lcall
mov
jno
mov
mov
imul
sub
pop
jne
inc
mov
cltd
pop
sbb
aam
mov
sahf
imul
popa
lret
xchg
push
inc
stos
sub
mov
sub
sti
xchg
iret
fnstenv
arpl
test
mov
mov
sub
jg
mov
decl
xchg
add
xchg
jp
lret
sahf
fnstsw
out
pop
mov
cmp
mov
enter
mov
lahf
clc
push
mov
push
sub
jge
in
stc
inc
jno
rclb
cld
xchg
cmp
dec
mov
cmpsb
pop
hlt
jns
jno
dec
sub
jecxz
cwtl
xchg
leave
decb
les
xor
sub
popa
fbld
xor
adc
mov
sub
jmp
mov
lea
les
cmpsl
and
mov
into
je
in
pop
iret
insl
outsl
enter
sbb
inc
mov
jmp
mov
cmp
inc
ljmp
mov
pop
in
in
dec
add
add
jb
sub
xor
push
aas
cmp
mov
sahf
stos
andl
imul
std
test
das
jl
mov
adc
push
in
and
shl
or
iret
xor
enter
push
jns
cmc
dec
lcall
std
lock
test
mov
push
add
cltd
test
sub
lds
loope
inc
sbbl
js
inc
cld
out
test
imul
outsl
stos
cmc
adc
je
adcl
out
and
and
pop
or
popa
push
imul
call
das
rolb
cmp
fwait
cmpsl
lret
add
aad
dec
cmpb
xor
jns
sub
cmp
pusha
dec
imul
int3
test
std
dec
xor
lods
stc
imul
or
fidivl
inc
mov
ret
xchg
repz
fimull
aad
mov
rolb
aam
int3
mov
push
imul
adc
test
jl
js
mov
xchg
add
pop
loopne
or
mov
sub
test
cmp
testb
lret
xchg
mov
shll
clc
imul
icebp
insb
aas
sub
in
lret
imul
cld
adcb
xor
test
sbb
xor
jns
out
andb
scas
shl
jge
stos
sub
iret
push
orl
mov
iret
pusha
cmp
enter
pop
cltd
fsubs
jmp
xor
cli
xchg
xchg
xchg
push
int
mov
insl
mov
repz
inc
pop
fs
sub
clc
dec
int3
mov
test
ss
sbb
ds
add
mov
inc
les
nop
ljmp
enter
adc
stos
nop
repnz
into
cld
inc
dec
sarb
jno
ja
xchg
or
ret
test
xchg
lret
dec
mov
testl
lods
outsl
adc
xor
lea
int3
inc
sub
je
xchg
test
jp
aad
in
jmp
cmp
inc
pop
cmp
scas
mov
mov
movsl
dec
js
cmp
test
inc
out
add
lcall
scas
subl
push
and
mov
sbb
sub
xor
faddp
xchg
jno
adc
js
popf
loopne
mov
clc
cmp
cld
pop
sub
or
popa
shll
test
pop
push
bound
aas
inc
jecxz
sahf
pop
and
in
pop
sbb
lret
loopne
xchg
sbb
es
idivl
cmp
push
mov
mov
imul
dec
das
fdecstp
jp
andb
mov
je
aam
ret
sub
call
cmp
inc
mov
mov
test
scas
xchg
data16
bsf
shlb
sbb
mov
mov
ficoms
pusha
bound
js
jno
add
dec
jle
jae
imulb
xchg
mov
call
sub
es
xchg
xchg
lea
popf
fnstcw
or
cld
loop
and
int3
es
lds
xchg
dec
andl
test
inc
push
fstpt
pop
xor
rcrb
jecxz
add
push
mov
inc
cmc
cmc
cmp
sbb
lea
push
or
push
and
cmc
inc
push
inc
mov
jo
push
outsb
sub
lahf
inc
or
lds
stos
or
jns
rcrl
jo
push
push
push
sbb
pop
add
mov
int3
cmpsl
out
push
lock
xlat
in
incb
loopne
xchg
movsb
jg
fisubs
in
mov
pusha
cmp
hlt
xchg
jnp
pop
add
inc
hlt
pop
inc
inc
pop
xor
mov
in
mov
mov
lahf
xor
mov
or
lods
mov
push
call
test
push
push
jo
sbb
mull
loopne
insl
mov
js
ret
addl
fstl
orb
pop
push
and
rolb
xor
xchg
or
ret
push
and
adc
dec
dec
cmp
mov
dec
or
shr
call
dec
enter
push
add
inc
pop
add
mov
jg
or
push
daa
rcll
sbb
sbbl
mov
leave
inc
insb
sbb
inc
pop
fs
cmpsl
shlb
arpl
pop
test
es
enter
nop
packuswb
or
das
pop
jg
xchg
dec
in
or
jg
and
cltd
in
faddl
cli
cmp
int
fsubrl
pop
add
mov
cmp
mov
mulb
inc
cmp
jno
add
sub
scas
shrl
inc
jmp
je
xor
popf
in
xorl
push
xchg
loop
mov
int
adc
mov
rcrb
lods
inc
or
or
addl
out
sarl
lods
out
push
mov
fstp
sub
leave
popa
pop
iret
jmp
cmp
adc
fwait
ljmp
mov
ja
xor
test
stos
or
sub
dec
ss
adc
loope
jae
cmp
adc
ja
sarl
pop
inc
cwtl
pop
add
data16
or
dec
mov
mov
cs
ljmp
pop
pop
jns
dec
mov
and
lods
xchg
test
push
sub
in
xor
mov
data16
test
or
push
out
xchg
push
cwtl
mov
adc
dec
dec
jo
pop
push
shrl
sarb
and
hlt
xchg
je
fwait
je
sbb
jmp
mov
gs
stc
mov
xor
pop
dec
in
movsb
inc
dec
xor
scas
sub
pop
jo
mov
arpl
add
aas
mov
les
lret
mov
lods
push
out
iret
call
pop
mov
sahf
push
mov
sahf
loope
sub
pop
daa
xlat
inc
movups
pushf
lahf
add
dec
mov
insl
xchg
fdivrl
aaa
ljmp
mov
out
xchg
stos
ss
xchg
and
mov
idivl
ljmp
out
in
pop
inc
jp
jb
inc
dec
pop
adc
in
mov
jae
sahf
fucom
inc
mov
fldl2t
sub
subl
insb
daa
mov
mov
sub
into
lcall
arpl
subb
nop
push
shr
dec
movsb
fcompl
jecxz
sub
fisttpll
pushl
outsb
mov
dec
adc
mov
arpl
xchg
subl
inc
imul
or
xchg
jae
adc
push
sub
push
jbe
jle
iret
adcb
sub
fdiv
push
xor
outsb
jl
mov
xor
xor
mov
and
add
and
fsubr
mov
xchg
or
scas
mov
or
nop
lret
or
pop
inc
mov
lea
mov
arpl
adc
xchg
decb
jle
lock
xchg
iret
inc
fisttps
rclb
pop
xchg
adc
inc
movsl
ret
mov
movsl
push
insb
pop
and
or
cs
lods
pextrw
and
and
les
out
fnstenv
cli
pushf
sarl
sbb
jp
cmp
div
pop
es
mov
pop
push
imul
mov
xchg
dec
out
inc
dec
loopne
notl
les
fildll
sahf
jne
lahf
add
scas
push
xchg
hlt
outsl
xchg
fcmovnb
rorl
in
and
mov
imul
pusha
iret
dec
je
lcall
js
xlat
sub
sbb
fs
sub
loopne
push
dec
ror
mov
add
in
jb
ficompl
arpl
cli
jp
xor
jno
inc
outsl
sbb
int3
cmpsb
dec
xor
cmp
dec
pop
test
insl
test
pusha
scas
testl
mov
daa
xchg
iret
inc
shlb
imul
mov
shrb
outsb
push
imul
pop
jmp
mov
mov
jle
mov
jge
lahf
mov
jg
cltd
dec
mov
xchg
xchg
dec
push
cli
mov
inc
dec
lea
dec
pop
pop
js
cmovge
mov
stc
and
dec
pop
adc
jmp
xchg
cmpsl
int
insb
sub
inc
cmpxchg
sub
dec
gs
cmp
loope
aam
pop
xchg
inc
stos
leave
test
lret
into
sarl
mov
sti
push
roll
aaa
mov
xor
or
cmpsl
push
dec
ds
dec
pusha
fisttps
out
adc
imull
fbstp
roll
std
dec
lea
pop
and
or
cmpl
push
fists
inc
mov
xor
enter
out
jns
out
lods
into
mov
mov
sub
dec
add
inc
sbb
jp
ret
jle
jns
in
sub
out
mov
stos
mov
mov
popf
arpl
pop
pop
sbb
scas
pop
mov
xor
push
fmull
sarb
and
jo
icebp
mov
shl
xor
jb
iret
jno
arpl
ss
mov
push
sub
pusha
mov
ret
lds
dec
scas
pop
jb
jno
mov
loop
mov
mov
cmpsl
mov
cli
stos
cmpsl
pusha
lock
or
into
adc
cmc
out
ja
imul
into
lds
les
jb
outsb
insl
imul
scas
cmpsl
adc
cmp
xchg
les
sub
sub
inc
imul
pop
jne
push
aad
sbb
push
sbb
iret
xor
stos
add
xchg
test
cmp
mov
xchg
addr16
lcall
test
icebp
ja
jo
sti
xchg
into
pop
sti
jb
fsubr
iret
adc
jl
adc
xchg
add
fnstenv
nop
rorb
sub
pop
shrb
xor
ret
mov
and
loopne
test
shrb
sbb
dec
and
in
mov
mov
mov
cmpsl
out
loope
jne
mov
iret
adc
inc
xchg
into
mov
pop
cmp
pushf
sarb
shr
or
mov
cli
jb
stos
out
sub
enter
jnp
pop
push
nop
sbb
mov
mov
mov
xchg
or
pop
or
mov
sub
cld
and
jae
nop
data16
push
add
rcrb
mov
fs
int3
jmp
faddp
cmp
arpl
xchg
dec
fdivs
imul
iret
mov
shl
sub
pushf
lea
test
jae
cwtl
lcall
gs
add
jmp
test
mov
mov
cmp
jle
inc
loop
and
sub
sahf
cmp
test
xchg
adc
dec
les
sbb
push
inc
xchg
fdivs
icebp
dec
fs
clc
inc
lods
sub
or
pop
mov
ss
mov
pop
pop
mov
xchg
dec
push
cli
in
popl
mov
jg
xor
arpl
lret
jnp
out
push
icebp
sbb
scas
lea
cmp
scas
mov
insb
push
pushf
call
or
in
fs
ret
stos
mov
ret
sbb
pusha
inc
enter
cld
sahf
jns
push
push
std
stos
jg
mov
mull
hlt
ret
sub
imul
or
inc
insb
xchg
mov
or
xchg
ret
cltd
stos
sub
dec
sysenter
adcb
enter
pop
shll
and
mov
jp
repz
mov
mov
fistps
shrl
aam
mov
sarb
push
pushf
mov
clc
into
mov
xor
adc
adc
ret
sbb
mov
out
add
in
cmp
push
or
push
mov
pusha
dec
push
fsubr
stos
std
xor
mov
xchg
nop
and
ficompl
or
repz
sub
sub
push
jmp
jbe
cmp
push
lea
adc
sbb
cwtl
cltd
enter
pop
add
shrl
or
push
repnz
adc
or
mov
imul
lret
mov
pop
inc
jae
pop
pop
je
push
pushf
cmpsb
adc
jbe
and
push
mull
sub
sbb
sub
sbb
mull
ror
adcl
xchg
test
xor
scas
jnp
cmp
cmc
xchg
xlat
fs
adc
jp
xor
dec
add
mov
lea
sub
pop
test
dec
fwait
adc
or
stc
loope
cs
fisubrl
ficomps
insl
mov
sti
push
lds
mov
test
sub
jbe
loope
test
test
lret
into
and
fstps
mov
pop
daa
mov
pop
xor
scas
scas
bound
aas
popf
mov
aad
call
mov
mov
add
dec
adc
jo
std
xor
xor
push
popa
inc
stos
adc
mov
addr16
sbbl
mov
nop
ljmp
in
insb
mov
fcmovnb
push
out
fwait
loope
sub
pushf
pop
sub
mov
loope
rcl
inc
adc
inc
fmull
add
dec
je
push
jp
arpl
out
mov
sub
fisttpll
out
pushf
repnz
scas
outsl
jge
vdivsd
cmp
lds
jle
pop
mov
xor
add
adc
bound
arpl
dec
mov
adc
xor
shll
push
aas
cmp
cmp
push
rorb
add
add
in
jl
pop
pop
mov
cmpl
inc
xor
imul
pop
mov
cmp
jmp
shr
mov
pop
push
out
pop
xchg
jg
dec
or
push
pop
inc
xchg
arpl
adc
push
leave
dec
xchg
jmp
mov
jp
xor
rclb
cmp
lret
or
cmp
ret
jg
sub
adc
cmc
ret
sti
andb
fsubrl
inc
push
lea
test
movsl
fwait
adc
mov
mov
shlb
mov
jbe
scas
call
push
xchg
adc
or
fwait
mov
adc
shll
and
in
mov
pop
xchg
push
dec
pop
dec
jbe
shl
xor
mov
mov
sub
jno
scas
iret
push
pop
add
clc
add
sarb
xchg
push
testb
mov
cld
sbb
xor
movsb
rolb
push
std
fiadds
mov
sbb
mov
push
and
push
dec
and
sbb
push
mov
pop
pop
and
bound
adc
mov
lret
push
sub
pop
sti
bnd
cmpsb
dec
or
add
inc
and
inc
aaa
push
cmpsl
or
scas
xchg
mov
fs
jb
sbb
jne
inc
add
hlt
cli
xchg
mov
mov
or
mov
cs
pop
sub
or
repnz
xor
pop
xchg
lret
aas
mov
ret
popa
add
mov
mov
fistl
jae
test
test
mov
hlt
or
jmp
dec
push
popa
add
sbb
cmp
adc
jne
in
xchg
or
sti
cmpsl
sti
aam
inc
mov
pop
loopne
into
jge
pop
push
cmpsl
shlb
test
orb
pop
insb
jg
dec
sahf
cs
adc
lea
cli
sub
test
sbb
jle
sbb
fistpl
xor
mov
and
xchg
jmp
push
mov
adc
or
pushf
mov
dec
mov
gs
mov
xor
mov
arpl
xchg
lock
mov
ljmp
and
sbb
pop
inc
jle
and
push
inc
xchg
rcrb
inc
les
inc
xor
rclb
dec
pop
pop
test
jle
ret
fadds
xor
dec
addr16
xchg
test
dec
data16
inc
leave
ficoms
inc
jnp
je
les
sub
das
lret
js
addb
leave
jmp
pop
mov
imul
pop
mov
adc
and
mov
aam
push
mov
call
push
js
mov
adc
inc
loop
push
push
scas
mov
mov
jg
scas
repnz
or
test
jno
pop
cmp
sub
cmp
addr16
or
add
test
imul
jbe
int3
mov
cwtl
popa
sub
jbe
xchg
xchg
scas
sbb
loopne
aaa
aaa
std
scas
push
xor
push
inc
push
pop
cs
mov
xchg
cmp
in
daa
cmpsb
xchg
sub
pop
sbb
mov
stos
int3
imul
or
pop
movsb
ja
cmp
fcmovb
mov
and
inc
jo
sub
test
or
ds
lods
stos
mov
and
cwtl
stc
xor
repnz
std
jg
sub
repz
aaa
rcrb
push
mov
daa
fldenv
outsb
jmp
inc
adc
cmp
sbb
push
xlat
inc
jb
xor
mov
cmc
jnp
pop
sbb
sti
testl
scas
loope
pusha
xor
push
mov
mov
mov
inc
pop
cmp
arpl
aaa
inc
lods
mov
dec
cmp
inc
lea
les
or
mov
jne
lret
and
ljmp
pushw
sbb
mov
xchg
jg
ja
repz
inc
pop
xor
movsb
pop
scas
pop
outsb
repnz
jecxz
push
add
iret
sub
mov
dec
icebp
mov
add
and
inc
mov
mov
mov
stos
rorb
pop
ds
out
mov
movsl
cwtl
xor
cmp
xor
mov
adc
jns
jbe
and
inc
mov
or
out
or
std
sub
cmp
push
test
adc
stc
jnp
mov
or
or
pop
dec
sbb
imul
jbe
aad
adc
and
push
add
sub
pop
xor
out
jbe
out
jae
add
inc
inc
mov
push
and
outsb
test
cltd
nop
or
mov
or
jne
inc
stc
adc
cli
loopne
add
pop
sbb
aaa
imulb
ret
mov
pop
mov
push
mov
xor
repnz
ljmp
push
and
cmp
sub
add
cli
and
jg
lret
enter
rorl
mov
repz
clc
mov
mov
mov
std
cmpsl
sti
div
in
popf
into
fs
lahf
sub
xchg
push
addr16
cmp
inc
jl
mov
add
out
mov
mov
iret
mov
repnz
add
stos
jmp
and
test
aas
icebp
faddl
dec
and
push
mov
jge
mov
clc
mov
test
xchg
push
in
mov
ret
insl
mov
push
fists
enter
sahf
and
xor
repz
jbe
test
loopne
jne
cli
out
fsubrl
inc
xchg
stc
jmp
dec
popf
pushw
rcrb
or
testl
out
int3
xchg
cmp
push
in
fisttpll
jbe
ret
xor
xchg
leave
pop
jae
xchg
sub
ja
dec
adcl
stos
xchg
sbb
add
jmp
and
movsb
je
xlat
fdivl
not
ss
mov
int
adc
out
jno
clc
jae
adc
xchg
dec
stos
lahf
add
fs
pushf
icebp
cmp
mov
mov
in
lock
jb
mov
stos
out
fucomi
xchg
xchg
fistl
fldenv
sti
ret
mov
scas
movsl
cwtl
push
sub
mov
dec
push
jns
in
adc
dec
and
pop
jne
bnd
cmp
pop
lret
mov
and
and
dec
test
imul
sub
cmp
sbb
fsubl
pop
call
lcall
jne
mov
xor
mov
enter
pop
cltd
jo
xchg
cmp
das
insb
mov
xchg
inc
test
scas
cmovge
or
xchg
repz
aam
hlt
sub
mov
aam
dec
sti
mov
push
mov
rcrl
rcrb
add
sub
sub
lret
out
mov
inc
popf
lret
sahf
inc
mov
add
fwait
add
sub
adc
lods
imul
mov
rol
test
xor
adc
add
lds
cmpsb
adc
outsb
push
push
mov
dec
out
stos
xor
xlat
test
jmp
mov
fisubs
mov
ret
cli
cmp
in
pop
inc
xchg
cmp
sub
imul
cmp
mov
jmp
aaa
cmp
push
mov
xchg
dec
and
dec
aad
imul
int3
xor
ja
push
movsl
cmp
rcr
jae
dec
push
aaa
pop
mov
int
push
and
pusha
pop
jb
popf
mov
pop
inc
fisubrs
sti
and
mov
lea
lret
gs
lcall
nop
shr
cmp
dec
mov
mov
push
lahf
lods
mov
pop
clc
add
ds
testl
test
pop
jl
iret
ret
shrb
enter
add
add
cmp
adc
jno
imul
dec
push
pop
movl
sahf
jnp
loopne
lcall
mov
mov
adc
imul
call
fwait
add
cmp
lods
push
push
bound
push
lods
xor
sbb
add
xor
popa
test
jle
push
mov
pushf
xchg
jne
mov
ficoml
and
hlt
in
mov
lock
insl
jb
push
fwait
dec
sub
and
mov
pop
inc
test
pusha
insb
je
xchg
dec
lock
dec
addb
cmp
xchg
cld
jl
stos
ss
fwait
gs
mov
cmp
les
push
add
movsl
ret
out
mov
in
sub
loop
lods
ficoms
stc
pop
xchg
and
xchg
ja
test
pop
or
mov
bnd
cltd
add
cltd
fnstsw
mov
or
les
fcmovnu
jbe
arpl
clc
and
push
pop
push
pop
jbe
add
jl
mov
ljmp
lret
pop
lods
push
xchg
sar
insb
jo
lret
in
mov
cmc
lock
sbb
sar
push
push
clc
cmp
dec
test
pusha
test
call
shlb
sub
movsb
popa
out
scas
int
je
rorl
mov
pop
dec
mov
pop
mov
rorb
jecxz
jo
aaa
sti
fisttpl
push
adc
jns
out
mov
dec
sbb
jmp
addr16
xor
xor
xchg
pop
lock
pop
jle
out
test
cmpsl
lret
xchg
fs
decb
xchg
mov
xchg
clc
jae
cmp
pop
mov
xlat
adc
push
sbb
xor
imul
or
lea
cmp
mov
loop
in
ss
idivb
dec
inc
inc
sti
fisubs
and
pop
sbb
mov
inc
dec
inc
cwtl
adc
lds
inc
jmp
inc
and
xor
inc
out
xchg
cmpsb
xchg
sub
or
xor
push
sbb
lods
ss
je
xor
iret
outsl
mov
jmp
jmp
pop
lea
mov
mov
movsb
pop
js
outsl
jge
fistpl
push
mov
cld
fnstenv
sbb
and
stos
aam
inc
cmp
sub
cmp
iret
loope
pop
or
stos
push
jp
jp
sub
mov
dec
aaa
mov
je
jmp
orb
fsubrs
movsl
out
sub
adc
insl
int
adc
in
cmpsl
jge
push
mov
mov
push
and
sbb
cmp
aaa
jno
inc
shll
int3
in
mov
int
inc
mov
adc
and
shll
push
mov
mov
lcall
enter
dec
mov
jne
dec
adc
xor
jle
ds
ss
decl
mov
roll
cmp
arpl
sub
sub
push
add
mov
cmp
lea
push
inc
mov
jl
jne
sub
xorl
out
mov
andb
daa
ficompl
int3
data16
sbb
daa
push
sahf
mov
or
add
repz
pushf
push
xlat
xchg
sub
pusha
inc
outsl
pop
mov
test
mov
mov
insb
shlb
xor
mov
ret
inc
loope
and
incl
repz
mov
mov
push
es
xchg
sbb
xor
jo
push
sahf
test
adc
inc
xchg
xchg
jnp
push
inc
repz
das
xchg
pop
stos
enter
mov
inc
cmp
mov
idivl
aam
mov
mov
inc
pop
in
or
movsl
mov
adc
fsqrt
aad
sahf
sbb
ja
or
stc
dec
out
ds
arpl
mov
rolb
push
or
fdivrl
mov
mov
mov
and
dec
fldl
pop
dec
cmp
or
adc
lcall
pop
mov
bound
mov
dec
adc
jns
mov
clc
dec
sbb
or
push
pusha
cmp
or
out
xchg
lods
dec
cmp
in
dec
dec
xor
mov
fwait
or
mov
xchg
xchg
out
aam
cmpsb
pop
pop
xor
or
pop
jne
ja
dec
es
xchg
pop
push
mov
dec
cmp
mov
add
rep
cmp
out
mov
push
lcall
jg
ret
repz
imul
in
lods
pop
imul
lods
outsb
or
push
in
aas
jle
mov
mov
das
pop
bound
cmp
adc
jnp
mov
mov
mov
scas
fdivrs
test
adc
bt
and
jbe
jmp
sub
test
mov
nop
rcpps
mov
mov
cmc
mov
pop
aad
movsb
inc
jge
sti
sub
fcomi
fdivl
cmpsb
insl
or
sub
sbb
adc
mov
cltd
popa
xchg
outsl
push
jbe
cmpsl
ja
clc
cmp
adc
mov
lea
rcrl
loopne
dec
jp
js
push
add
mov
loopne
lods
aam
sti
out
sub
inc
fwait
gs
jne
sub
ret
movsb
inc
std
jne
xor
sahf
inc
aam
xchg
in
movsb
outsb
flds
ja
push
dec
ficoms
xchg
or
push
push
pop
sub
mov
in
push
scas
repnz
push
mov
hlt
push
jae
mov
and
popa
xchg
mov
pop
clc
adc
inc
dec
pop
dec
xor
lcall
jmp
mov
dec
xchg
push
or
fsubrp
and
xlat
movsl
push
jns
lea
pop
icebp
ret
lcall
sahf
loop
cmp
out
inc
insl
cmp
test
mov
lret
pop
pop
inc
add
cmp
push
xchg
ret
push
scas
xorl
loope
xchg
jb
mov
mov
jae
leave
dec
add
lods
push
out
fwait
pop
aad
adc
popf
cltd
pop
js
mov
pop
cltd
dec
out
pop
jae
mov
xor
shll
fdivrp
add
lahf
jnp
add
cli
jno
mov
dec
jae
test
lock
sbb
cs
ret
mov
mov
sub
sbb
bound
mov
mov
clc
inc
int
or
lret
cmp
enter
adc
shrb
or
in
daa
lock
mov
add
ret
mov
aam
jecxz
stc
sub
test
jmp
jne
pop
pop
test
pushf
sbb
cli
pop
mov
bound
enter
ss
ss
mov
enter
call
lods
fldl
cmp
adc
std
cmpsl
cmpsl
mov
pop
and
xchg
cltd
inc
ret
sub
sti
pop
fsubl
mov
cld
add
rcll
sar
jmp
lret
arpl
and
nop
lds
mov
adc
mov
out
and
test
dec
pop
fisttpl
cmp
dec
mov
xor
and
or
mov
lods
mov
sbb
jmp
out
fwait
or
hlt
repnz
or
test
test
mov
cmpsl
cmp
and
xor
cmp
cmovns
add
dec
arpl
data16
sub
cmpsb
pop
mov
idiv
shl
xor
inc
dec
lock
bound
in
and
dec
in
addr16
sub
mov
adc
or
dec
pop
cld
scas
int
xchg
xchg
add
movsl
add
adc
dec
cmp
jb
cli
jo
popf
imul
rclb
lcall
or
xchg
fwait
out
xchg
add
pop
mov
daa
push
jmp
nop
pusha
push
cmp
add
sti
out
dec
arpl
sbb
pop
jae
lahf
lods
ja
dec
lret
adcb
mov
lahf
stc
aaa
pop
scas
pop
rcrb
int
and
or
add
add
sahf
add
movsb
ds
or
cmp
xchg
repz
jb
push
out
inc
push
out
hlt
stc
cmp
rcrl
or
push
int
adc
pop
mov
cmp
and
xchg
xor
mov
push
out
push
inc
outsb
add
cmp
clc
xchg
adc
sbb
xorl
adc
sub
adc
mov
sub
push
adc
lahf
addr16
inc
mov
scas
mov
dec
lods
sub
popf
icebp
jb
in
dec
jno
push
fmuls
xchg
loopne
out
arpl
xor
je
es
and
fidivrs
and
cmp
mov
push
mov
cwtl
pop
aad
loop
push
imul
rcl
add
jns
cmp
call
push
decl
mov
in
cs
call
sub
stos
and
ret
sub
mov
xchg
es
and
pop
adc
xchg
popf
leave
fsubrs
ss
push
xlat
adc
ficoml
std
ret
mov
jg
xchg
jecxz
in
inc
mov
addl
xchg
add
es
loopne
popa
mov
stc
imulb
xor
repnz
xor
std
sbb
sbb
cmp
mov
pop
jl
and
enter
pushf
dec
dec
or
mov
pop
sti
jmp
cmp
lods
inc
cmp
push
jbe
pop
cmp
pushw
pop
xor
cmp
mov
mov
and
mov
pop
mov
xchg
pushf
insl
stos
cmp
andl
xor
add
xchg
xchg
movsl
scas
lret
arpl
push
stos
in
out
dec
scas
cmc
jns
cmp
and
imul
loope
insl
pusha
cmp
repnz
xchg
jg
rdmsr
lea
jp
ret
and
mov
insb
sub
das
call
add
adc
mov
jp
or
clc
cmp
sub
xchg
xlat
xchg
lahf
ds
repz
jnp
cmp
sti
and
or
push
les
rorb
addr16
lahf
aam
movsb
cmpsb
mov
pop
xlat
in
in
inc
cmpsl
push
xchg
lds
xchg
xor
idiv
sar
or
pushf
adc
cmpps
cmpsb
fs
idivb
and
inc
dec
movsb
jae
lcall
or
cmp
sub
xchg
std
shl
shlb
nop
shrb
pop
cmpl
mov
arpl
push
xorl
les
jo
sub
ljmp
dec
les
aam
test
push
add
or
inc
mov
dec
es
loop
scas
test
jge
cld
mov
loop
pop
out
cwtl
movsl
mov
xchg
addr16
sub
mov
push
and
out
je
or
cs
inc
cmp
les
mov
add
sti
js
sbb
shl
dec
gs
add
add
jecxz
mov
xor
outsb
sub
ret
iret
hlt
pop
push
popf
mov
imul
jno
jno
cli
dec
push
sbb
fsubrl
dec
mov
into
dec
push
dec
movsb
xchg
lret
repz
xchg
mov
xchg
lods
outsl
jg
loopne
movl
pop
icebp
lahf
arpl
lret
xchg
jle
xchg
sbb
sbb
dec
sbb
flds
insb
rcrb
push
cmp
sbb
adc
lds
hlt
sbb
push
jno
ja
mov
xchg
xlat
sar
js
adc
cltd
dec
leave
mov
pushf
fs
and
add
jge
jg
dec
add
test
xchg
out
rolb
mov
insb
sbb
incl
pop
mov
xchg
inc
xor
loopne
jns
sub
lds
inc
dec
cmp
outsb
dec
aad
sbb
or
inc
fidivrs
ja
fldcw
lds
xor
movsb
ds
ficompl
sbb
test
lods
cmp
cwtl
dec
xor
dec
shlb
jg
jge
pop
mov
lcall
add
adc
lahf
and
jp
movb
mov
es
andb
mov
fldenv
addr16
sti
stos
pop
sbb
leave
push
mov
inc
test
fwait
shll
dec
ljmp
sbb
js
pop
cmpsb
pop
int
jecxz
cmpsl
cmp
mov
fidivs
and
loop
orb
dec
and
xchg
sub
je
xchg
mov
int
lods
pop
xchg
or
lods
pop
pop
leave
scas
xor
call
test
jo
pop
dec
pop
jb
inc
sahf
sub
inc
gs
ret
lods
inc
pop
xchg
nop
insb
or
stos
loop
cmp
push
in
adc
add
add
mov
mov
dec
and
aas
mov
mov
js
and
cmp
pop
insl
dec
inc
mov
pop
jb
sti
push
add
jecxz
jecxz
sub
push
rolb
int
mov
sbb
xchg
inc
pop
push
clc
data16
in
jmp
subl
in
fcmovu
iret
aad
bound
mov
pop
test
xlat
xchg
or
jp
mov
gs
popf
mov
int3
dec
dec
stc
mov
push
fisttpl
xchg
xchg
inc
cwtl
jp
pop
mov
loop
dec
dec
pusha
repnz
jb
and
mov
inc
movsl
std
sub
test
xchg
mov
negb
lock
insb
mov
jle
lret
loope
lea
pop
xchg
lods
sbb
clc
mov
add
sbb
out
stos
aas
jbe
push
cmp
mov
rcrb
xchg
jecxz
or
mov
sbb
out
push
aaa
iret
add
outsb
roll
cmp
sbb
lods
frstor
iret
add
out
jmp
test
mov
cmc
pop
call
dec
mov
push
mov
mov
repz
dec
nop
out
jne
jp
mov
cltd
lods
sti
xor
xor
jmp
or
jmp
xchg
add
test
out
pop
xchg
sub
fldcw
mov
add
mov
mov
sub
loop
ja
lea
push
jmp
pop
pusha
pop
cmp
sbb
cmp
push
pop
ja
sarb
xlat
sahf
popl
and
loop
fwait
mov
push
mov
push
hlt
lods
jne
insl
out
dec
sbb
ja
adc
push
add
fimull
hlt
pop
pusha
push
adc
and
push
mov
sub
cmp
mov
add
push
iret
cltd
add
sbb
popa
adc
sti
insl
push
lcall
rcrl
cmp
addb
or
add
cmp
adc
shll
imul
and
sahf
sub
adc
push
les
adc
nop
xor
out
adc
add
push
adc
inc
sti
sub
xlat
out
bound
inc
xchg
leave
sarb
test
inc
icebp
cmpsb
push
cmc
cltd
es
getsec
and
mov
xchg
sar
dec
mov
jle
test
test
ficomps
std
push
int
sub
sub
repz
or
sbb
and
cmp
icebp
mulb
and
jge
push
xor
loopne
adc
lcall
rcpps
shrl
xchg
push
push
sub
repz
repz
xor
jl
clc
adc
or
or
inc
sub
cwtl
add
cs
xchg
add
iret
add
ljmp
add
pop
repz
inc
sti
and
dec
fldcw
cmpsl
lock
aad
lds
xchg
or
mov
leave
mov
or
xchg
test
adc
push
mov
sub
cld
fbstp
lahf
push
fcmovnu
push
jecxz
fmull
pushf
fwait
add
mov
nop
adc
dec
jne
mov
dec
mov
jle
in
pop
inc
ret
jno
mov
mov
js
icebp
push
pop
je
mov
rolb
fs
test
jae
loope
jge
and
in
jno
mov
aad
fstpl
mov
lahf
daa
dec
insb
int3
mov
imul
cmp
popf
mov
add
pop
popa
es
mov
lea
sub
lods
lret
dec
sub
lcall
ljmp
xlat
xchg
sti
out
and
adc
dec
pop
adc
pop
sbb
sub
call
mov
scas
and
pop
and
in
sub
or
idivl
outsb
fisttps
jge
das
das
test
aam
cltd
xchg
pop
mov
out
and
xchg
in
dec
and
or
in
sub
mov
movl
jbe
bound
pop
jbe
iret
jns
pop
and
mov
sub
lods
xchg
rclb
pushf
icebp
mov
pop
fst
and
out
mov
and
push
cmpsb
mov
xchg
inc
test
xor
fs
fisttpl
jns
inc
mov
mov
push
stos
pop
adc
mov
fldl
andl
pop
adc
push
sbb
or
cmp
cwtl
jbe
movl
lock
sahf
rolb
movsb
aas
adc
in
mov
inc
add
inc
pop
and
ss
icebp
inc
jbe
loope
push
test
lret
dec
sbbl
jns
jg
mov
mov
popf
mov
or
add
sbb
ja
out
cmp
add
insl
mov
fiaddl
mov
or
mov
cmp
lds
shll
test
cmpb
lcall
das
nop
inc
cwtl
sahf
adc
pop
lock
pop
adc
hlt
xor
fnstenv
and
inc
xchg
popf
negb
loope
or
jae
paddsb
jmp
rsqrtps
aas
clc
imul
jl
jbe
adc
hlt
jne
cs
xlat
aaa
and
stos
or
dec
and
popa
pop
and
push
adc
rcl
scas
jge
popa
ds
mov
pop
enter
or
dec
jae
in
int
mov
dec
addl
enter
or
cmp
push
and
xchg
jp
cmpb
and
nop
insl
or
xor
outsl
test
orl
mov
or
push
or
sub
lcall
xor
jne
jno
loope
cwtl
lcall
in
sbb
push
mov
mov
mov
mov
ret
adc
or
test
sbb
sti
enter
inc
cmc
loopne
dec
lock
push
pop
stos
push
in
push
mov
xchg
cmc
movsl
mov
jmp
inc
adc
std
and
loope
js
loopne
mov
in
repnz
mov
pop
add
jb
fcmovne
jbe
js
fidivrl
xchg
mov
ss
imull
pop
rclb
add
ss
pop
dec
fwait
and
inc
fnstsw
cld
cmp
cmp
jmp
ficompl
lods
add
in
mov
pop
mov
sub
inc
fmulp
testb
add
mov
les
mov
aaa
pushf
std
cmc
push
push
mov
adc
mov
jle
bound
test
test
sub
loope
ror
xor
jo
std
add
dec
arpl
movsl
in
jae
push
xor
push
push
push
sbb
cmpsb
loop
insb
lcall
mov
loope
adc
data16
mov
adc
mov
aas
inc
inc
dec
loope
popa
clc
jne
fcmovne
rorl
dec
pop
or
cltd
scas
mov
or
inc
push
or
jns
sti
mov
loope
lahf
and
fadds
pop
movsl
dec
or
sbb
dec
outsl
mov
xchg
jmp
shr
ret
out
sbb
sub
jne
dec
loop
idiv
inc
jmp
mov
jbe
out
pop
mov
sbb
cmp
call
cltd
xchg
xorl
rol
jmp
push
test
orb
or
fstl
adcb
cmp
inc
out
and
aaa
daa
pop
lds
inc
mov
jb,pt
mov
js
adc
cmp
push
clc
cld
sub
dec
and
fwait
pop
cs
data16
hlt
lods
hlt
xchg
repnz
sbb
add
pop
pop
call
ljmp
notl
rorl
leave
mov
or
inc
lea
mov
cwtl
sbb
push
aas
cmp
popa
xchg
aad
pop
or
xchg
mov
push
sbb
mov
or
add
jo
or
jo
aaa
stos
xchg
dec
push
lcall
sbb
mov
push
xchg
lcall
sti
cmp
fs
lds
pop
sub
aaa
jo
pop
dec
mov
jl,pn
jmp
fidivrs
pop
sbb
mov
bound
idivb
insl
sar
repnz
xor
fistl
or
or
mov
pop
adc
imul
aam
cmp
inc
ret
sbb
add
sarl
sbb
dec
xor
push
movsl
orl
mov
xor
sub
mov
push
dec
pop
dec
pop
std
adc
lcall
and
mov
xchg
mov
mov
jno
nop
cmp
jns
in
dec
scas
outsl
push
xchg
cld
lock
aam
xchg
fcoml
jo
push
aad
cmpsl
fsub
add
out
into
xchg
add
test
clc
sbb
and
adc
filds
mov
sub
or
push
push
addl
addr16
adc
repnz
test
xor
mov
nop
jo
int3
fdivr
pop
add
pushf
mov
mov
rorl
jae
add
inc
pop
ja
aam
push
mov
insb
cmpsb
adc
into
popf
cmp
add
adc
insb
adc
xor
repnz
stc
jne
push
push
sub
sub
test
cld
mov
push
rcl
pusha
mov
data16
aam
loop
add
or
bound
cmp
pop
jg
lcall
call
aaa
pop
roll
cmpb
and
incl
lods
adc
in
jge
ss
sub
pop
cmp
xor
outsb
adc
ja
lea
fdivs
inc
or
mov
scas
ror
push
jp
add
mov
in
mov
icebp
addb
shll
pop
and
filds
test
add
clc
inc
inc
pop
out
pop
xorb
pop
mov
mov
data16
lock
cmpl
imul
jnp
es
addr16
enter
stc
fadds
push
pop
jmp
cmpb
mov
mov
sub
jns
sub
add
cmp
aad
cmc
pop
jecxz
dec
nop
cld
shrl
daa
cltd
mov
push
ficomps
inc
mov
mov
xchg
or
testl
jmp
imul
mov
test
mov
xchg
call
cli
into
ja
mov
les
jno
std
sub
or
jl
jmp
aam
ret
fisttpl
lahf
nop
les
sub
in
add
dec
shrl
gs
or
shlb
mov
daa
ja
jle
and
test
int
pop
dec
add
cmp
dec
scas
push
decl
sub
andb
jp
xchg
inc
push
fisttpl
mov
out
xchg
lcall
mov
test
dec
xchg
add
pop
arpl
in
jecxz
push
xchg
js
stos
test
adc
leave
imul
jge
xlat
sub
clc
out
lret
lea
add
ds
scas
jle
lcall
sti
xchg
add
pop
orl
andl
sub
jge
mov
out
adc
test
or
out
inc
jne
xchg
gs
cmp
cli
lods
jne
stos
xor
pop
mov
dec
sub
dec
inc
dec
into
cmpsl
sbb
fsubs
in
and
scas
push
push
push
gs
out
push
roll
scas
adc
out
xchg
movsl
enter
leave
fsts
ret
sbb
addl
les
or
push
dec
cmp
mov
adcl
xor
or
mov
lahf
pushf
outsl
or
fwait
pop
cmp
xchg
adc
sbb
add
xchg
test
mov
fsubs
aad
outsb
mov
mov
loope
daa
jns
ljmp
fcoml
cltd
into
shrl
pop
pusha
sub
xor
push
fidivrl
iret
pop
xchg
loope
push
xor
lods
loope
push
cmp
bound
mov
adc
pop
and
pop
mov
in
mov
outsb
rcrl
ret
lahf
jmp
out
mov
out
and
adc
adc
jle
loopne
and
xor
out
clc
adc
cmp
mov
push
pop
mov
lea
mov
in
cli
adc
out
dec
push
xor
fbld
call
xlat
pop
mov
mov
fldl
out
aad
enter
or
cmp
cmc
add
daa
dec
cmc
jnp
add
mov
jp
xchg
add
inc
jae
sbb
xor
push
nop
push
adc
dec
jl
test
and
and
lret
sbb
jb
dec
push
pop
stc
pop
pop
mov
das
sub
or
push
sti
add
pop
leave
cmp
mov
loop
pop
aam
sub
add
fisttps
adc
cltd
sub
adc
push
scas
push
ret
mulb
test
into
aad
aas
loop
mov
jnp
xchg
in
xchg
cltd
test
ljmp
push
cmp
cld
inc
cmp
and
test
loopne
inc
shrl
fscale
subb
dec
popa
adcb
and
push
ss
out
mov
inc
out
push
cmp
push
or
pop
mov
sarb
ss
std
fcmove
mov
es
cs
int3
lea
or
pop
mov
xor
not
mov
jno
and
push
push
lret
add
jnp
sbb
out
lods
inc
mov
jno
xor
sub
dec
outsl
jecxz
pop
add
jmp
mov
push
test
les
xor
cltd
clc
arpl
mov
cmpsl
fwait
and
sbb
iret
sbb
and
mov
bsf
fsubs
jae
pop
sti
addl
dec
pushf
pop
popf
dec
mov
pop
sbb
rcrl
cmp
mov
or
jle
sub
cmp
adc
pop
lods
mov
fdivl
xor
dec
arpl
pop
ss
and
push
xchg
xlat
hlt
cmc
cmp
adc
dec
mov
sbb
ss
leave
adc
mov
in
js
sub
arpl
pop
pusha
sub
xchg
addl
scas
cmpb
cltd
cli
xor
lea
outsb
mov
mov
call
lods
dec
shlb
mov
pop
jo
fsubrs
mov
dec
xchg
push
mov
mov
mov
rcl
movsb
insb
loop
jno
test
fdivr
cs
repnz
cmpsb
pop
outsl
xchg
js
and
stos
dec
orl
stc
inc
not
addb
mov
js
cmpsl
pop
fisttps
jne
or
movsb
daa
cwtl
mov
cmp
xor
andl
mov
adc
rclb
mov
inc
jae
rcrb
std
mov
insb
sub
and
inc
and
je
shlb
clc
jge
push
loopne
mov
mov
cwtl
pushf
mov
jmp
stc
mov
inc
push
xor
mov
mov
or
xor
test
divl
xchg
sbb
sbb
cmpsb
mov
shrb
mov
sbb
scas
ljmp
popa
rolb
mov
subl
mov
or
bound
sbb
dec
xor
bound
jp
xorl
lret
outsb
pop
lcall
cwtl
xor
or
mov
cmpl
push
xchg
push
popf
orb
ret
int3
sarb
cmpsl
xchg
xor
cli
inc
rorb
pop
rol
xchg
pop
leave
adc
pop
stos
xor
pop
pop
mov
pop
xor
and
lds
stos
jle
dec
js
stos
ss
cmp
stos
cmp
repz
pop
test
fsts
pop
sbb
out
or
cmpb
xchg
and
jbe
mov
stc
jl
clc
jl
stos
mov
dec
jbe
cmp
jge
aam
into
fucom
mov
psubq
inc
outsb
add
cmp
leave
sahf
xchg
mov
imul
cmp
adc
aad
sbb
sub
jg
dec
cs
je
out
or
movsb
push
and
cli
or
and
xchg
xchg
cmp
mov
in
push
xor
fadds
add
iret
cmp
es
xchg
out
stos
lcall
mov
mov
cmp
mov
mov
icebp
fwait
bound
mov
inc
rorb
adc
sub
repz
or
aas
xor
add
insl
push
or
add
adc
jle
pop
repz
jno
dec
andb
mov
imul
xchg
and
ficoms
fdivs
cwtl
mov
call
pop
subl
xchg
test
mov
pop
pop
inc
push
lods
aaa
aad
pusha
add
fistl
repz
mov
sub
mov
stc
jae
jl
add
inc
fs
and
cs
add
sbb
lods
push
mov
mov
push
sarb
or
ljmp
mov
inc
and
stc
adc
push
mov
loopne
bound
mov
fldt
and
test
sub
jo
and
or
jg
lea
insb
xchg
xchg
pop
push
sbb
xchg
adc
mov
mov
cmp
std
out
mov
les
add
dec
push
mov
outsb
fbstp
mov
nop
inc
inc
adc
sub
psadbw
enter
lds
mov
jmp
aaa
sub
clc
int3
adc
cs
push
mov
jbe
dec
mov
stos
inc
sub
ret
das
pop
adc
push
imul
mov
aam
jo
lahf
daa
mov
cs
jae
sub
jno
cmp
negl
push
std
loop
popa
in
aam
ret
dec
and
lret
les
insb
cld
and
fistl
jl
cmpsb
lcall
out
pop
sbb
push
fmuls
lds
sbb
mov
pop
inc
xor
inc
mov
je
loope
sub
outsb
fs
out
mov
or
stc
pop
es
fistpll
jl
xor
lods
mov
es
pop
imul
cmc
mov
xchg
loop
dec
ret
gs
lfs
mov
ja
push
dec
in
outsl
adc
jge
mov
adc
cld
and
das
pop
movsb
add
sub
xchg
fsubp
mov
shr
xor
rolb
xchg
jg
dec
shlb
std
add
jo
or
jns
add
mov
idivl
cmp
out
fsubp
leave
mov
rolb
cmp
dec
sbb
ret
sub
lret
lea
sub
outsb
ja
movsb
lods
xor
in
repz
mov
cmp
shlb
pusha
dec
pop
addr16
cmp
push
xchg
daa
test
repz
cmp
xchg
bound
inc
jmp
jp
dec
test
iret
jb
cs
loope
ret
loopne
sbb
jbe
cwtl
ljmp
js
mov
mov
add
lcall
push
sbb
xchg
dec
mov
add
pop
lds
mov
adc
lret
sub
ds
icebp
xor
pusha
loope
xchg
cmc
push
sub
jae
pop
mov
fists
sbb
lods
jecxz
jae
sub
lahf
lock
sti
xchg
das
push
rcll
pop
mov
pop
mov
push
leave
repz
jp
mov
mov
mov
or
cli
out
adc
cli
test
push
push
fsubs
push
outsl
jne
or
roll
or
cmp
mov
push
out
or
and
mov
out
ja
js
int3
subl
jb
sti
xor
cmpsb
inc
xchg
and
cltd
mov
les
cli
dec
push
xchg
in
adcb
or
or
ret
sub
rorb
mov
outsl
dec
push
jne
adc
pop
ss
dec
inc
push
mov
xchg
push
inc
or
adc
pushf
push
xchg
sub
loop
or
xchg
test
jns
hlt
dec
cwtl
jmp
mov
adc
jmp
add
mov
lock
bound
stos
out
mov
push
cs
pop
push
ljmp
std
aam
jecxz
mov
cmp
inc
mov
sub
push
fwait
cltd
in
adc
jne
mov
scas
subb
dec
int
push
xchg
mov
inc
bound
mov
daa
ljmp
je
push
ds
sarb
sbb
xor
outsb
mov
dec
in
loopne
push
xchg
xchg
dec
add
sbb
pop
adc
icebp
pop
xchg
test
sub
sbb
and
mov
sub
and
fimuls
push
repnz
notb
jne
shrl
mov
xor
mov
setbe
call
cmp
es
dec
lods
jg
push
iret
pop
jb
sbb
ret
insb
ja
mov
mov
cli
shl
sbb
sbb
inc
ret
rclb
mov
ds
mov
xlat
aad
inc
loopew
sub
bound
in
lretw
push
xchg
mov
add
loope
stc
test
leave
insb
add
into
xchg
lods
xchg
pop
or
mov
push
test
movsb
add
xchg
in
cmp
push
sbb
push
and
jbe
int
out
xchg
cmp
mov
rcl
dec
and
mov
or
insb
enter
das
pop
and
arpl
pop
inc
js
pop
lret
int
push
jno
mov
addl
rclb
leave
pop
adc
in
pop
xor
je
aad
cmp
scas
or
jecxz
inc
lods
xchg
cli
cmp
mov
jno
push
inc
rclb
ljmp
mov
cmp
add
xchg
sub
iret
jge
sbb
iret
dec
and
in
sub
mov
sbb
mov
jnp
call
sahf
dec
add
cmp
push
jp
hlt
shl
push
mov
lock
sub
mov
mov
in
insl
xchg
xor
cmp
subl
xchg
outsl
in
stos
mov
jnp
inc
sahf
in
lods
adc
sub
testb
jne
rclb
mov
movsb
adc
sahf
notl
mov
popa
cwtl
push
cmp
push
sub
mov
mov
lock
sub
cmc
scas
jge
ljmp
int
ret
adc
test
jge
in
out
push
dec
rcll
jl
sbb
mov
sbb
rclb
lea
addr16
shrl
ss
gs
in
scas
push
dec
fidivs
loop
pop
repz
cwtl
cs
push
js
insb
cmc
imul
stc
xor
rorl
mov
mov
pop
cmp
push
out
loope
xor
clc
adcb
inc
movsl
js
jnp
sbb
pushw
pop
inc
into
xor
and
jecxz
clc
dec
gs
fidivs
hlt
loopne
addl
dec
inc
sub
pop
cli
push
push
pop
jae
inc
push
pop
inc
lahf
pop
add
test
push
jg
sbb
xchg
push
sahf
pop
testl
ja
push
lods
sub
inc
lahf
xor
lea
push
xchg
mov
dec
bound
les
adc
xchg
jno
xchg
xchg
and
adcl
xchg
cmovb
in
jo
mov
ss
jne
mov
or
push
fcoml
out
jp
into
adc
les
inc
adc
mov
movsb
jb
lret
and
aaa
mov
ss
jp
insl
subl
and
es
out
add
push
pushf
je
or
cli
popa
fidivrs
aad
sub
mov
or
and
inc
or
lods
inc
cmp
xor
jae
loopne
es
mov
daa
gs
mov
data16
vpsllw
adc
fs
int3
sub
push
push
push
jns
adc
push
mov
mov
jo
xchg
add
jp
fnstcw
push
cs
rcrb
xlat
push
pop
fs
jnp
iret
mov
jae
mov
je
outsl
inc
inc
adc
sbb
pop
inc
push
jecxz
cmp
loopne
push
sbb
js
bound
push
adc
imul
lods
insb
jecxz
xchg
mov
pop
sti
ja
ljmp
mov
dec
std
pop
xor
push
xchg
lret
leave
xchg
cmp
pop
and
fldcw
popl
adc
fstpt
jge
push
call
dec
cmp
mov
mov
cmp
jl
xor
adc
mov
pop
movsl
outsl
dec
xchg
cmpsb
nop
pop
xchg
jnp
int3
jl
dec
jne
insl
out
fsubl
pop
cmp
mov
stc
outsb
and
out
jnp
bound
int3
sbb
mov
icebp
ja
cld
int
addr16
sbb
mov
rolb
mov
in
sbb
aad
nop
pusha
mov
adc
jmp
inc
je
lcall
inc
cld
push
stos
sbb
ja
data16
stos
lahf
dec
add
lahf
mov
dec
pushf
or
push
and
mov
pop
gs
dec
daa
std
pop
cmp
lret
sub
push
inc
dec
xchg
jg
pushf
out
in
inc
mov
aaa
lods
dec
push
stos
dec
sahf
cmpsb
cmp
jae
jmp
inc
push
inc
test
int3
cmc
adc
xchg
push
dec
mov
pop
add
sbb
ljmp
fldl
inc
and
ret
mov
push
popf
and
stos
jmp
push
mov
sub
ret
push
sub
mov
cmpsl
test
rol
addr16
fcoms
in
adc
mull
cmp
shll
push
das
sub
xor
jmp
xchg
out
xchg
repnz
mov
mov
cmpsb
sti
cmpsl
test
jmp
sub
push
cmpsb
cltd
mov
test
xchg
cmp
stos
mov
test
stc
lahf
sub
je
xor
in
xchg
icebp
leave
movsl
and
ds
fndisi(8087
lret
mov
loop
jg
push
sbb
pushf
in
negl
into
or
les
pusha
ret
ret
out
popf
dec
and
es
adc
xchg
aad
fldcw
xchg
mov
sbb
mov
ja
je
hlt
adc
loop
sti
test
or
lcall
jae
and
mov
xorl
movsb
add
sbb
pop
or
pusha
jo
js
addr16
ljmp
push
push
in
aaa
pop
lock
add
js
cmp
inc
test
jl
mov
enter
push
mov
inc
fistpll
es
dec
das
push
add
jo
jno
xchg
in
push
rorl
add
pop
push
testl
mov
call
jnp
pushf
sbbb
out
insl
lods
addr16
xlat
stc
out
scas
mov
mov
jnp
jno
lahf
add
test
jg
adc
mov
or
pushf
pushf
sub
sbb
and
es
dec
bound
jecxz
cmp
pop
dec
pop
je
es
push
negb
jno
scas
cmp
sahf
fbld
out
mov
or
je
mov
lods
addl
add
dec
dec
add
add
and
lret
idiv
cld
arpl
pop
dec
subb
xorb
imul
decb
xchg
icebp
fsub
les
lods
ljmp
mov
andl
inc
xor
add
xor
dec
mov
filds
addb
inc
or
push
lds
sub
mov
pop
cwtl
xor
and
cmpsl
mov
pop
ss
pop
pop
pop
adc
outsb
pop
lock
sub
push
ficompl
or
out
insb
sbb
xor
add
cwtl
or
inc
cmp
cmp
rolb
hlt
scas
sbb
inc
nop
ficoml
xor
jbe
mov
stc
jl
cmp
jbe
sahf
ficompl
lahf
shlb
loope
pop
cmp
fwait
or
ds
rcrb
jmp
fildll
nop
adc
cld
pop
mov
jp
fidivs
insl
shlb
cmp
leave
pop
iret
in
push
xor
sti
add
or
inc
sub
std
int
mov
ja
inc
andl
loope
mov
fbstp
scas
aad
shl
ljmp
in
add
sub
mov
xchg
ljmp
pop
xor
repz
jge
fmuls
push
xor
cmpb
scas
jle
mov
inc
in
add
xchg
mov
push
scas
and
push
dec
cmp
les
adc
inc
inc
sub
ret
imull
sbb
mov
inc
aaa
xchg
sbb
xor
jo
xlat
adc
movsl
shll
shlb
imul
outsb
negb
sbb
fiaddl
push
pop
pushf
inc
xchg
mov
cmp
push
fcmovnb
out
stos
add
push
iret
mov
inc
ret
add
sbb
insl
imul
imul
mov
loop
add
xor
shll
js
inc
mov
fxch
push
jg
xor
add
push
xchg
sub
mov
shll
mov
stos
sbb
lds
mov
lods
or
pusha
out
popf
bound
cltd
loopne
cmp
ja
pop
mov
cmp
js
jg
and
inc
xchg
cmp
cmp
les
mov
out
mov
add
push
popa
inc
int3
outsl
sbb
outsl
jns
js
lds
lahf
pusha
and
sub
fwait
sbb
cmovno
mov
jmp
mov
jne
sub
sbb
ret
cli
fdivl
pop
ljmp
and
scas
and
adc
call
jle
outsb
jnp
mov
cmc
or
inc
gs
lahf
add
out
mov
sub
pop
lods
mov
or
mov
das
or
fwait
dec
iret
sbb
dec
dec
mov
push
pop
sub
cli
sub
xchg
in
stos
jle
xchg
push
cli
loope
adc
and
out
std
js
sbb
in
push
lods
aad
sub
mov
pop
shll
pop
fwait
or
cmp
cltd
push
sbb
mov
pushf
enter
mov
in
out
xor
inc
inc
or
mov
inc
lret
mov
mov
les
imul
ljmp
aaa
pushf
pop
push
je
mov
arpl
dec
icebp
push
test
int3
dec
sbb
stos
xlat
mov
inc
insl
xlat
es
mov
sbb
pushf
push
loop
ja
lods
xor
test
mov
int3
fwait
je
mov
std
mov
movsb
jo
fists
dec
in
lahf
mov
shlb
aas
cltd
lods
cmp
push
imul
fisubs
add
into
fldenv
adc
xchg
cmp
in
imul
or
mov
repz
sub
xor
cmpsb
inc
inc
inc
stos
jae
imulb
movsl
and
push
mov
or
ds
jo
or
adc
xor
xor
sarl
jno
js
into
imul
outsb
pop
and
pop
pop
xchg
into
sub
mov
adcl
daa
daa
lret
cmp
ret
and
cli
dec
cmp
dec
sub
hlt
xchg
push
mov
divb
loope
inc
les
push
adc
dec
popa
cmp
into
add
jecxz
mov
lret
clc
push
mov
push
in
ljmp
inc
lret
rcrb
scas
loop
cmp
call
dec
sti
xor
mov
mov
lahf
and
dec
negl
push
mov
push
sbb
lret
adc
lods
in
jb
mov
int3
pop
xor
pop
insb
xor
loope
fists
sbb
or
xor
cmp
cmp
lret
push
mov
data16
add
add
je
shrl
jnp
sbb
xchg
add
push
popa
mov
sbb
jno
test
and
pop
fisubrs
xor
mov
cmpl
leave
nop
push
outsl
clc
lds
jo
and
icebp
mov
outsb
jg
pusha
jg
cli
sti
jnp
inc
mov
mov
mov
test
push
jno
iret
dec
fdivrs
inc
or
dec
adc
cmpsb
shl
lahf
pop
jo
cmp
sti
out
gs
int3
jle
fstl
push
icebp
cmp
daa
lods
leave
xor
in
jp
cmp
sub
mov
insl
jecxz
into
dec
cmp
pop
sbb
dec
js
out
lds
in
xchg
call
imul
and
test
jne
in
mov
mov
adc
mov
add
insl
movsb
cmp
gs
in
addr16
cs
jbe
lcall
int
pushf
mov
lods
or
mov
sahf
mov
push
mov
lret
mov
and
frstor
test
pop
pop
xchg
shll
arpl
mov
pop
and
or
lock
push
repz
nop
sarb
or
or
out
sbb
test
and
in
lret
pop
xorb
nop
aaa
ficompl
outsl
lahf
filds
jmp
push
mov
push
aam
cmp
shlb
fdivs
lea
mov
cmp
or
mov
xchg
push
xchg
js
mov
rcr
daa
stc
jb
rcrb
nop
in
or
clc
cmpsl
cmp
ficoml
inc
ja
jo
or
push
mov
sahf
loopne
cmpsl
stos
mov
movsl
fcoms
jmp
sub
sub
push
jl
dec
je
scas
xchg
int3
arpl
mov
rol
aad
rol
or
push
icebp
xchg
and
add
and
push
loope
jp
and
adc
lds
xchg
neg
adc
jb
in
lds
xchg
dec
pop
mov
test
adc
mov
scas
call
sub
in
xor
jg
sbb
push
daa
pop
int
or
pop
test
jo
sub
adc
pop
jmp
daa
lock
imul
xchg
mov
ss
jb
mov
sbb
mov
mulb
out
xchg
cmp
mov
enter
inc
jg
call
scas
ljmp
ror
hlt
cmp
es
and
mov
mov
nop
jb
popa
adc
aad
adc
inc
cli
in
xchg
enter
pop
jae
icebp
mov
pop
sub
mov
sbb
xor
fwait
pop
stc
dec
sbb
cmc
pop
jl
daa
mov
pop
ja
xor
adc
inc
inc
mov
cld
outsl
mov
jl
jge
sarb
sbb
cmpsb
jg
mov
in
test
adc
mov
scas
out
bound
movsb
push
mov
jbe
jmp
js
mov
mov
add
jae
pop
sub
pop
dec
test
pop
sbb
pusha
inc
rcll
mov
test
sub
dec
inc
xlat
inc
fiadds
add
movsl
mov
xchg
mov
jo
sub
push
push
je
stos
shll
pop
std
mov
mov
jo
lret
ret
push
and
popf
loopne
or
dec
pop
dec
xor
cmp
cmpsl
sbb
add
iret
cmp
sti
add
insl
iret
or
or
pop
jl
bound
xchg
mov
aam
mov
sub
lahf
arpl
test
rcl
jp
pushf
js
rcrl
and
adc
sbb
jle
punpckhdq
nop
lret
mov
add
sub
sub
pop
push
shl
push
test
iret
pop
pop
sahf
loop
stos
lea
dec
jns
dec
xchg
repnz
cli
jbe
ja
test
popf
cwtl
sbb
dec
pusha
sbb
xchg
cmp
sbb
jecxz
jo
xor
or
int3
dec
sub
outsb
mov
int3
shl
pop
gs
movsl
fistl
out
sti
cmpsb
imul
pop
push
mov
and
imul
aad
and
jl
bt
in
dec
movsb
nop
add
cmp
lea
cli
insb
jb
sbb
ret
leave
in
jge
insl
out
xor
js
jns
push
push
sbb
inc
cmpl
loop
fidivl
stc
xchg
and
sub
rorb
mov
add
adc
sti
xchg
mov
push
push
adc
mov
push
in
sti
dec
cmpsl
mov
test
inc
push
jb
xor
jb
repz
je
dec
pop
jecxz
daa
adc
push
xor
inc
add
in
mov
std
xor
fdivr
jg
in
xchg
cwtl
js
xor
cmp
xchg
sub
dec
scas
jbe
das
shl
loop
mov
push
pusha
dec
decl
shrb
out
push
jmp
fcompl
nop
lret
xchg
sbb
test
jns
sarl
sub
jmp
sub
jp
cmpsl
sub
mov
repnz
sub
fimull
mov
cmp
xchg
insb
inc
xchg
pop
and
lds
lds
or
push
sub
sub
mov
inc
xor
jnp
mov
sbb
fistpll
xor
pop
pminub
pop
divb
rcr
fisttpll
outsb
andb
sbb
pop
jne
add
add
icebp
mov
cmpsl
sbb
or
or
stc
ss
scas
xchg
in
jmp
xlat
fs
jl
test
dec
andb
lock
push
cld
lods
inc
adc
mov
aas
dec
push
mov
in
jnp
aas
in
fists
leave
add
popf
rorb
xorl
aas
mov
mov
cli
jl
aas
jge
mov
lods
mov
pop
shl
bound
and
fisttpll
imul
dec
sbb
cmp
adc
std
outsl
push
sbb
js
mov
sarl
ficoml
add
sti
push
hlt
into
in
test
pushf
pop
cmp
inc
lahf
adc
inc
into
jb
adc
mov
stos
add
cmpsl
stos
sub
push
test
hlt
mov
out
jb
pusha
pop
xchg
mov
aas
xor
push
xchg
fldlg2
ret
ja
fisubrl
xchg
and
sub
arpl
data16
dec
xor
cld
out
mov
cli
arpl
sbb
imul
jge
jge
jg
jae
adc
dec
push
sbb
nop
mov
les
dec
out
rol
mov
inc
aas
sbb
inc
mov
fsubrl
test
in
pushf
mov
dec
jg
cmp
sub
xchg
inc
add
out
cmpsb
cmpsl
ss
pop
add
push
aaa
pop
cs
sti
fsubl
scas
and
xor
addr16
daa
sub
mov
int
lea
ret
call
inc
adc
or
lret
sbbl
sbbl
out
cmc
pop
sbb
popf
xchg
shrb
pushf
jnp
inc
sub
pop
push
mov
sahf
sub
jo
jg
push
das
cmc
scas
sbbb
add
jmp
push
sbb
adc
push
mov
mov
jl
xchg
lcall
mov
into
shrl
mov
enter
adc
and
stos
mov
insl
mov
sahf
mov
sub
xchg
lea
push
clc
pop
and
iret
cs
adc
andb
mov
in
jns
push
push
iret
xlat
inc
sahf
push
cmp
or
jb
les
cmp
je
adc
data16
push
ret
push
sub
in
loope
jge
pop
push
stc
xchg
add
dec
rcrb
push
mov
aad
dec
cwtl
dec
lret
inc
xchg
rcr
mov
mov
and
adc
jne
sub
cmp
jns
sub
mov
dec
adc
sub
mov
sub
pusha
out
je
gs
int
cli
mov
sahf
jecxz
sbb
add
inc
inc
push
mov
pop
callw
and
loopne
shrl
mov
add
dec
xchg
lcall
inc
or
leave
xlat
cltd
adc
and
gs
orl
rclb
aad
xchg
enter
xchg
out
xlat
xchg
les
aaa
pop
jbe
xchg
jae
push
push
jo
rolb
pushf
add
fistps
movsl
xchg
add
shll
add
orb
fstps
nop
mov
dec
shrl
lds
gs
mov
icebp
adcl
loopne
xchg
jle
fdivrl
int3
cwtl
xchg
jmp
push
shll
aad
dec
inc
stos
jmp
mov
dec
or
push
lret
aas
je
xchg
idivb
pop
out
sbbb
cmp
mov
cmp
sub
lea
mov
call
fucomip
ljmp
fadds
sti
pop
xchg
insb
cmp
aam
cli
jecxz
rcll
adc
push
mov
pop
adc
push
push
jmp
or
enter
pop
pushf
loop
popa
xchg
lds
and
iret
fists
and
insb
add
mov
aaa
inc
sub
add
lock
fmuls
incl
pop
pop
stos
mov
mov
xor
leave
inc
mov
pop
dec
test
shr
mov
sti
shll
sbb
and
xor
dec
adc
or
mov
sti
ficoml
sub
out
bound
push
push
test
shrl
or
sbb
push
push
lahf
fistpll
js
ljmp
inc
in
arpl
mov
push
addl
test
imul
std
xchg
dec
and
test
nop
fadds
cmp
negl
rorb
call
pop
mov
movsl
and
or
in
ds
jne
movsl
stc
mov
repz
outsl
mov
add
pushf
and
pop
arpl
mov
into
add
movsl
cli
mov
or
ljmp
repz
test
sub
dec
adc
hlt
sbb
leave
pop
leave
loop
lea
cmp
out
stc
adc
inc
dec
lods
fmull
inc
push
cmp
fsub
les
mov
or
out
stc
in
rcll
imul
rcll
add
cmp
nop
pop
and
sbb
out
fld
fcoms
and
xor
sub
pop
push
xchg
dec
xor
inc
cltd
aam
mov
mov
adc
jl
push
mov
and
jmp
xchg
movsb
mov
lcall
pop
add
ds
das
lea
sub
fdivrl
jmp
arpl
sbb
pop
out
std
pop
and
in
push
fisubrl
dec
add
lcall
out
mov
mull
jno
test
fs
sbb
pop
cmp
lret
imul
jecxz
scas
adc
outsl
add
imul
mov
jne
or
out
sbb
mov
xchg
ret
aaa
mov
inc
arpl
sub
test
inc
inc
outsb
pop
sbb
mov
repnz
ret
mov
or
pop
dec
cli
lret
cmpsb
xor
xchg
pop
xor
add
dec
cmp
mov
xchg
pop
jp
sbb
repz
idivl
aaa
sub
data16
mov
ds
imul
dec
push
mov
pop
mov
movsl
mov
movb
std
shll
jecxz
pop
pusha
xor
rol
dec
dec
push
aaa
test
xchg
daa
or
test
outsb
cltd
in
mov
scas
movsl
mov
mov
jge
pop
mov
cmp
test
scas
inc
push
jne
or
repz
ja
xchg
add
and
or
mov
sbbl
or
rolb
sub
out
rol
xor
nop
popf
add
inc
nop
mov
mov
dec
mov
cmp
lods
jnp
pop
mov
imul
std
lahf
and
lret
das
xor
pusha
pop
xor
adc
jge
sahf
pop
sbb
push
mov
mov
or
insl
xchg
pop
enter
mov
mov
andb
inc
cwtl
int
nop
stc
jne
push
mov
cs
adc
xchg
aam
cmp
insb
cwtl
movsb
in
pop
lods
sbb
outsb
fldt
and
scas
inc
js
clc
scas
xchg
std
or
inc
push
push
cmp
loop
scas
add
mov
notb
dec
lcall
out
cmp
inc
loop
mov
xchg
sub
jb
mov
cmp
xchg
stos
icebp
and
loop
add
imul
js
jecxz
add
and
and
inc
test
into
and
je
jns
xchg
adc
outsl
mov
in
xchg
pop
andb
dec
shrb
sub
mov
fwait
xchg
add
inc
out
mov
inc
daa
stos
push
dec
mov
fnstcw
adcl
std
add
xchg
jp
mov
lret
inc
pop
fidivrl
sti
mov
subl
sub
xorl
notl
dec
imul
es
popf
xchg
stos
or
jecxz
fisttpl
add
ficoml
dec
push
pop
add
or
mov
into
lret
mov
mov
cmp
insl
repnz
sub
in
or
std
inc
fsubl
pop
mov
iret
mov
mov
sub
mov
inc
popa
cmpsb
inc
inc
mov
or
pop
data16
xchg
sti
imul
int3
sub
push
push
cmp
jp
gs
inc
and
add
mov
test
adc
pop
loope
lahf
clc
lret
ljmp
int
bound
or
jle
lret
sbb
roll
test
cmpsb
push
adc
dec
xchg
mov
insl
xchg
mov
ljmp
xor
stos
sub
fs
inc
push
push
repnz
fsubrl
and
insl
inc
subb
add
enter
xchg
in
mov
cmc
mov
adc
cmpsb
scas
shrl
push
gs
push
rcll
xchg
jp
mov
xor
daa
icebp
push
pop
adc
jne
adc
ret
mov
lahf
in
lock
mov
pop
daa
jbe
imul
nop
in
xor
sub
pop
jge
mov
inc
mov
sti
ret
pop
sarb
leave
push
fdivrl
jb
jae
movsl
icebp
or
aaa
gs
mov
mov
jae
mov
test
xor
pop
movsb
gs
and
or
mov
test
jmp
rorl
jmp
mov
pop
movsl
fwait
test
cmp
inc
std
sbb
ljmp
sub
sub
push
cmpsl
mov
and
sbb
push
daa
and
test
ja
jl
js
test
add
add
adc
jb
outsb
aaa
add
in
ljmp
pop
sbb
jo
jle
cld
mov
sub
lea
cs
movsl
sub
cmp
in
testl
imul
inc
mov
pop
and
sub
or
xchg
or
jb
icebp
fwait
jnp
and
or
jne
out
mov
test
mov
mov
leave
subb
sbb
and
enter
push
enter
sahf
cmp
shlb
xor
rcll
loope
adc
adc
xchg
out
mov
sbb
mov
mov
inc
cld
xchg
sub
dec
mov
out
fldl
push
lcall
push
add
sub
fisubs
xchg
xchg
xlat
repz
les
or
jo
nop
movsl
dec
pop
xor
mov
cmpl
outsl
sti
jno
cmp
push
add
sbbl
and
or
icebp
sub
mov
sub
or
nop
xchg
xlat
pop
sub
loope
inc
mov
test
push
xor
and
in
sarb
and
xchg
xorl
cmc
aam
addb
frstor
ljmp
enter
sbb
xchg
imul
pop
mov
add
adc
call
push
les
lods
sbb
adc
lea
shrb
push
pop
cmp
xchg
push
add
lods
lds
test
xor
mov
popf
or
loopne
imul
xchg
xor
sahf
fs
xor
jl
call
adc
push
xchg
mov
inc
insl
xchg
adc
jg
cs
aaa
adcb
les
ror
jmp
and
popf
arpl
lret
xchg
ret
outsb
test
rol
int
mov
ds
nop
sub
arpl
in
mov
or
test
orl
push
mov
dec
gs
push
add
pusha
sub
pop
movsl
dec
aad
or
iret
inc
test
add
test
sub
sub
mov
or
out
jp
movsb
jecxz
addr16
or
push
ret
gs
dec
jne
fidivs
dec
leave
jns
popa
push
aam
mov
xchg
sarl
mov
jnp
cmp
xchg
mov
insb
mov
xlat
adc
jmp
cwtl
imul
loope
mov
or
mov
mov
lods
add
roll
pop
cmc
lods
leave
std
ret
push
mov
int3
enter
push
or
inc
xor
inc
cmp
inc
int
xchg
into
inc
cltd
les
stc
aam
jb
ret
dec
test
imul
mov
das
add
adc
sahf
mov
dec
into
dec
inc
fcoms
inc
dec
jns
lods
mov
enter
jg
mov
sub
ret
sti
dec
inc
cmp
and
jo
pop
push
repnz
sti
fcom
mov
cmpsb
cmpsw
jno
cmp
mov
jecxz
push
pop
fbld
lahf
popf
arpl
cmp
lds
inc
jnp
test
lock
pop
adc
dec
pop
fprem
fidivrl
aam
pop
xor
inc
test
xchg
sub
mov
adc
cwtl
inc
out
fnstenv
insb
notb
and
jns
xchg
dec
xor
les
mov
mov
mov
mov
xchg
sbb
and
jbe
dec
pushf
jg
mov
mov
sbb
add
pop
stc
pop
mov
int
clc
jae
or
xchg
test
movsl
outsb
loopne
icebp
sbb
shlb
xchg
sti
mov
push
fstps
out
mov
movsb
mov
int3
mov
ds
sub
fsubrl
iret
sbb
push
clc
xlat
xor
and
fidivs
insb
test
movsl
outsl
mov
lcall
rcrb
pusha
popf
mov
dec
xor
sub
mov
mov
jl
jb
push
sbb
inc
sub
xchg
jp
xchg
test
or
xchg
pop
dec
ret
notl
push
or
mov
fisttps
mov
cs
dec
lock
cs
or
ljmp
lret
jl
pop
clc
in
cmp
mov
aam
mov
or
test
mov
sbb
out
push
or
dec
pop
cmp
roll
sub
rcrl
sti
hlt
and
mov
pusha
xchg
xor
imul
mov
or
imul
inc
add
push
andl
mov
adcl
cmpsb
inc
xchg
push
test
and
sub
jae
cmpsl
mov
sahf
daa
pop
dec
nop
call
cmc
arpl
jae
rclb
das
pushf
mov
mov
iret
fsts
pop
mov
lock
sub
loope
cld
ljmp
hlt
xchg
push
mov
lretw
outsb
pop
insl
fwait
mov
shl
fistl
pop
lods
test
in
adc
inc
in
and
pop
outsb
lock
imul
pop
lret
push
das
fwait
add
jno
aam
or
bound
mov
xchg
xor
jg
loop
and
inc
sbb
test
sub
inc
fwait
divb
or
std
stos
pop
xchg
dec
mov
inc
pop
and
gs
lock
adcl
or
mov
lret
xchg
mov
mov
je
pop
movsl
and
bound
push
dec
dec
jp
jns
sub
mov
xor
mov
jg
aaa
lret
lock
sti
sub
out
divb
rol
mov
or
push
arpl
std
mov
lahf
push
shlb
sub
xor
and
push
add
mov
pusha
lcall
iret
inc
stc
xchg
rorb
loopne
sub
adc
aaa
sbb
pop
jb
rol
mov
leave
mov
push
xor
push
das
mul
test
aaa
pop
or
loope
sbb
xchg
push
push
out
add
lods
test
int3
mov
xor
xor
dec
push
fstps
es
mov
scas
inc
cmp
add
movsb
xchg
push
push
dec
mov
rcrl
int
push
jl
addr16
adc
or
ret
mov
add
lea
add
xorb
sbb
pop
mov
leave
movsb
mov
or
imul
outsb
sar
test
inc
clc
outsb
cmp
pop
cli
push
add
mov
cwtl
mov
add
jecxz
sub
sbb
jge
dec
xchg
cld
lret
das
out
push
popf
lds
pop
faddl
cmc
add
xchg
mov
sbb
push
xchg
ret
jge
or
icebp
push
scas
dec
jg
pushf
mov
std
or
jp
jo
xor
jbe
inc
fldt
cmp
pop
mov
xor
test
jo
lea
into
jae
jle
cmp
sub
ret
and
incl
adc
fnstcw
mov
sub
mov
repnz
cmpl
dec
push
mov
push
nop
data16
sbb
rclb
pushf
mov
into
imul
dec
cld
in
sbb
scas
js
mov
das
pop
fnstcw
cmc
lcall
ja
inc
cld
rorl
stos
cmp
and
inc
out
stos
aaa
xor
or
fists
cmp
test
cli
in
mov
stc
outsl
inc
popf
insb
inc
xchg
dec
subb
xchg
ja
jns
ljmp
pop
scas
xor
push
les
push
in
pop
push
ret
lahf
stc
imul
outsl
arpl
into
mov
imul
and
cmp
in
and
daa
pop
in
or
push
out
mov
cmpsl
push
insb
push
addr16
imul
mov
dec
sbb
jge
jg
das
cmpsb
xor
out
nop
cmp
mov
xchg
jge
stc
mov
xchg
jl
or
stc
popa
or
push
pop
push
mov
data16
sub
movsb
push
stos
aas
out
jle
data16
mov
loop
cli
cli
cmp
daa
imulb
mov
shrl
inc
and
cmp
push
jns
test
dec
pop
xchg
xchg
ret
fnstsw
cmp
push
sub
adc
in
pushf
inc
test
rcrl
call
mov
jle
sti
sub
in
into
in
xchg
sub
mov
push
and
arpl
mov
testb
dec
jno
aad
pop
jge
outsl
cmp
loop
cwtl
inc
adc
jb
das
jae
add
push
push
sahf
int
imul
sbb
mov
sub
adc
leave
xor
pop
shll
inc
mov
js
dec
mov
stos
push
push
or
sub
fwait
iret
imul
jp
inc
ret
inc
int3
fmull
adc
mov
add
sub
std
ss
jnp
mov
pop
dec
les
xorl
xchg
push
add
add
cmc
fwait
cmp
ja
lret
push
cmp
jg
jl
ror
shll
mov
int
cltd
xor
jl
push
sbb
lret
mov
or
addr16
sbb
dec
test
adc
sub
ret
mov
lret
test
push
andb
jnp,pn
cwtl
imul
sub
enter
mov
aam
xchg
dec
xor
movsb
xchg
cld
cmpsl
sti
in
mov
in
iret
loopne
stos
lds
mov
mov
push
inc
push
mov
jmp
pushf
jbe
ja
push
lcall
test
pop
dec
mov
xchg
inc
sub
cmpsb
xchg
or
lahf
jg
test
data16
xorb
loop
lea
orb
adc
imulb
aam
pushf
adc
call
into
and
adc
scas
sbbb
mov
sub
push
lods
adc
mov
inc
inc
mov
insb
int3
rorl
push
lahf
popa
gs
adc
dec
xor
add
and
mull
push
inc
jb
sub
mov
sbb
decb
cmp
adc
test
vpunpcklqdq
aaa
mull
frstor
inc
xchg
mov
and
fucomip
aad
lret
aam
cmpb
loopne
ds
repnz
repz
cwtl
inc
lcall
std
or
loopne
mov
lcall
fdivs
push
and
pop
les
aas
cmpsl
jnp
fmuls
ljmp
pusha
lods
mov
jno
pop
enter
xchg
dec
out
xor
call
ljmp
pop
dec
sub
cltd
dec
test
data16
sahf
add
out
cmpsl
xchg
cmp
pop
inc
prefetch
fsubl
adc
push
jne
sbb
or
test
lods
mov
xor
int
icebp
xchg
dec
jno
cmpb
adc
jns
addr16
loope
test
mov
cwtl
aas
stc
pop
push
xchg
push
adc
repz
sbb
xlat
scas
orl
xor
dec
imul
adc
es
in
push
mov
mov
mov
je
je
sub
inc
in
int3
movsb
jae
dec
pushf
pop
or
fcomi
sbb
push
fdivs
fcomi
mov
push
add
sahf
adc
jle
pop
lds
dec
and
mov
mov
faddp
js
daa
movsl
xor
mov
imul
jle
jp
adc
ja
push
clc
movsl
mov
pushf
inc
mov
cmpsl
mov
cmp
cli
test
jo
movsl
xor
xor
xchg
jno
inc
xor
dec
lock
push
adc
fwait
in
xor
call
mov
stos
arpl
ja
mov
int3
mov
or
adc
test
fisubrl
sbb
push
adc
stos
mov
jl
outsl
inc
xor
xor
jae
mov
pop
mov
cwtl
mov
insb
test
or
repnz
adc
out
jno
arpl
jbe
and
sbb
gs
cld
cmp
and
pushf
out
or
mov
add
nop
cmc
jl
or
int
or
outsl
mov
add
mov
mov
add
sub
shrl
lcall
cli
inc
sbb
add
jmp
xor
decl
lds
jle
gs
pop
pop
repnz
mov
lahf
rcr
cmp
add
fs
mov
inc
mov
shr
pusha
and
push
and
int3
push
mov
ret
xchg
repnz
pop
into
pop
das
cld
jle
pop
scas
aas
push
imul
pop
jno
sbb
mov
and
movsb
pop
popl
sbb
xchg
xchg
out
inc
push
inc
fists
leave
adc
jns
and
popf
test
xlat
or
mov
js
sbb
jno
jbe
xchg
aas
jp
stc
mov
popa
cs
adc
rcl
or
mov
insb
icebp
fistpl
xorl
outsb
imul
and
js
mov
cld
sub
and
xlat
jmp
add
mov
sbb
add
test
sub
stos
ds
push
js
cs
mov
adc
sbb
sbb
push
add
pop
jmp
xchg
mov
jle
mov
enter
xchg
leave
in
or
xor
pop
imul
adc
add
mov
lods
clc
je
rclb
mov
or
mov
push
jns
adc
not
aas
add
pop
xchg
fldt
outsb
lods
movsb
add
lods
jge
jbe
sbb
pop
enter
sub
cld
popa
sbb
xor
xchg
int
ss
repz
push
xor
mull
or
in
xor
xorb
mov
sub
add
test
inc
out
test
or
imul
shlb
pop
lods
or
mov
iret
out
popl
mov
add
jns
je
jo
negl
loope
xchg
adc
sub
dec
outsl
xchg
hlt
mov
jg
in
orl
mov
push
pop
jne
les
jp
inc
rclb
in
outsl
aad
jo
push
stos
leave
mov
mov
add
frstor
push
shll
xchg
mov
and
mov
hlt
push
push
sub
cmpsb
xor
jle
cltd
sbb
xor
xor
sbb
loope
lcall
dec
lcall
loopne
outsl
imulb
cmp
adc
push
jmp
loopne
cmc
lods
mov
test
aam
pop
inc
xchg
pop
fnstcw
sbb
jb
and
cmp
imul
test
mov
insb
fistpl
repz
cli
cmp
lret
cld
cmp
mov
popf
xchg
push
jbe
out
out
jmp
scas
inc
dec
rcrb
sub
xor
std
sbb
mov
sub
push
cmp
add
fcmovu
daa
mov
lcallw
cmpb
xchg
lahf
add
popf
push
scas
push
mov
out
notb
aas
js
les
mov
xchg
jns
adc
dec
mov
adc
pushf
and
lea
pushf
cli
int3
add
lret
jmp
imul
cmpsl
mov
sub
dec
jle
rcll
xchg
shl
addr16
lea
jno
shl
clc
repnz
arpl
cmp
and
dec
rcl
sbbb
pop
nop
sbb
inc
bound
adc
int3
mov
fucomip
mov
popf
fs
cs
inc
or
mov
and
mov
mov
jne
cmp
stos
shll
sbb
ret
push
lahf
shrb
pop
adc
mov
sub
adc
lcall
sbb
movsb
bound
jns
sbb
push
jl
cmp
mov
dec
inc
rorb
inc
in
mov
mov
jne
pop
lret
imul
xchg
cld
sbb
out
mov
mov
push
sti
in
dec
in
out
hlt
mov
push
jne
jmp
adc
imul
jbe
add
xlat
inc
inc
xor
loopne
jecxz
sarb
mov
rclb
cmc
cmp
clc
jnp
out
nop
push
fwait
lock
lock
sub
lods
shrb
xchg
adc
dec
testb
add
or
addr16
adc
cld
adc
daa
fs
movl
dec
or
push
mov
mov
faddl
sarl
or
cmp
and
je
push
add
adc
sbb
adc
aam
jns
xor
adc
stos
or
push
cmp
pop
hlt
adc
push
fst
xor
inc
push
mov
dec
imul
or
mov
iret
sbb
push
xchg
clc
mov
sbb
dec
clc
lods
in
add
hlt
xor
jl
fsubrs
rcr
adc
loopne
leave
add
mov
lret
into
and
and
cmp
les
add
je
ja
pop
add
loope
jp
adc
or
outsb
mov
inc
subb
call
jno
mov
cmp
outsl
imul
jl
or
jb
mov
mov
ficoml
adc
inc
fimuls
mov
or
in
pusha
pop
inc
inc
add
popf
push
push
daa
jb
pop
andb
and
int
bound
mov
test
push
sub
xchg
inc
sbb
call
cmpsb
jle
loop
add
popf
push
arpl
pop
xor
testb
ror
shll
into
in
in
lock
aad
dec
call
mov
iret
dec
mov
adc
iret
adc
adc
push
inc
popf
add
popf
sarb
add
pop
jle
add
addr16
sbb
xchg
andb
or
pop
inc
stos
lock
iret
jns
mov
adc
xchg
and
enter
inc
xor
mov
xor
mov
ficompl
push
xchg
stc
cvtps2pi
pop
xor
lock
add
pop
and
aad
inc
pushl
mov
adc
gs
arpl
scas
out
pop
push
lea
add
ss
in
sub
xchg
dec
sahf
push
dec
xlat
lret
ret
mov
sahf
sbb
lret
outsl
inc
repz
scas
and
add
mov
push
pop
pop
lock
and
mov
dec
push
push
sbb
or
mov
out
popf
jmp
ret
lcall
adc
scas
dec
mov
mov
sub
mov
les
inc
dec
nop
testb
jg
pop
fisttpl
test
cwtl
js
and
fidivl
int3
dec
mov
cmp
dec
sbb
fisubrs
add
cmp
idiv
push
data16
pop
negl
cmp
pop
outsb
pop
loope
rclb
arpl
adc
ja
rolb
mov
dec
and
dec
dec
xor
push
bound
add
repnz
ss
xchg
jne
aam
int3
sbb
ljmp
lcall
mov
out
rcl
iret
dec
ds
in
push
inc
scas
in
jno
ja
cmp
gs
lods
pop
pop
scas
inc
xor
mov
cmp
inc
push
and
jae
or
xlat
xchg
ss
jle
jno
dec
pop
aaa
ljmp
ja
ds
pop
test
xchg
nop
js
ljmp
bndstx
push
mov
mov
xchg
dec
mov
xor
jb
dec
mov
in
mov
fwait
jne
or
ja
lahf
sub
icebp
mov
popa
scas
mov
ljmp
loopne
cwtl
jmp
orb
fiadds
pop
push
inc
or
lret
xor
jns
lods
outsb
push
cmpsl
pop
cmpb
push
adc
into
cmc
add
fldcw
fwait
dec
sub
and
push
cmp
cs
repz
js
jp
hlt
mov
add
cmp
in
jge
scas
jae
jmp
xchg
sti
push
push
sbb
mov
sub
push
fcmovbe
out
inc
inc
mov
loop
lods
adc
loop
addr16
icebp
and
sar
jbe
repz
xor
sub
adc
xor
pop
hlt
jne
push
int3
mov
jecxz
cmp
daa
popf
mov
cltd
add
das
sub
pop
mov
xor
pop
ds
int
pop
sub
mov
mov
jl
std
jp
pushf
in
dec
mov
sbb
dec
cltd
sarl
mov
add
inc
cmp
pop
pop
or
xlat
dec
cmp
pop
adcl
sbb
inc
pop
cmp
dec
shlb
adcl
mov
outsb
mov
in
dec
xor
mov
nop
imul
sub
shl
mov
jb
nop
scas
or
ret
jo
cmp
aad
push
mov
loop
jns
cmp
pop
and
cmpsb
inc
les
xor
mov
mov
inc
fildl
pop
cltd
xchg
pushl
xor
pop
jne
sahf
addr16
arpl
in
adc
aad
inc
adc
sub
pop
cmp
or
or
cwtl
fidivs
rcrl
sbb
push
push
test
add
xor
lret
test
stc
decl
and
xor
gs
pop
pavgw
mov
mov
sbb
inc
mov
gs
dec
dec
fsubrs
xor
or
loopne
std
fs
xor
sbb
into
mov
iret
lcall
ret
test
shlb
lret
push
aas
repnz
inc
into
mov
sbb
and
xchg
pop
nop
ss
and
inc
inc
sbb
cwtl
mov
clc
movsl
mov
push
cmp
dec
xchg
movsb
aas
jb
jl
shr
ds
aad
dec
jne
repz
out
jnp
cltd
jecxz
cmp
mov
ss
lods
cmp
fisttpll
inc
add
je
push
nop
movsb
and
xor
ss
out
pop
pusha
mov
jae
iret
outsl
push
push
xor
or
sub
sub
mov
movsb
xor
pop
lods
idivb
neg
scas
jle
test
ss
aad
push
fxch
outsb
xlat
pop
call
sahf
jns
xor
loope
cltd
lret
xor
movsb
pop
jg
outsl
negl
nopl
jl
mov
jnp
cli
out
in
mov
sti
pushf
sbb
test
fmuls
jl
mov
dec
repnz
fsubl
aam
hlt
add
xor
and
xor
sahf
fstpl
sbb
add
sbb
mov
neg
in
movsb
mov
or
ficompl
ljmp
shlb
arpl
mov
bound
rol
out
dec
enter
out
mov
or
clc
mov
jp
sahf
adc
add
ret
jge
sub
mov
add
lret
push
cmp
dec
lret
xlat
iret
cmpsb
sub
jne
xchg
mov
lds
loopne
into
mov
sub
add
orb
fisubrs
xchg
das
adc
lret
cmp
sbb
je
or
pusha
inc
shrb
inc
push
cltd
les
mov
jbe
mov
mov
mov
fisttps
mov
cmpsb
cmpsb
and
xchg
test
push
mov
stos
sti
lods
xchg
out
xchg
and
sbb
fyl2x
pop
test
xor
pop
xor
into
arpl
lds
mov
outsl
pop
xchg
icebp
call
gs
sbb
inc
sub
scas
adcb
add
lea
shrb
cwtl
sub
iret
xchg
lods
add
cmpsb
dec
add
lret
push
dec
fistl
dec
cmp
add
mov
sti
pop
sub
pop
mov
xor
cmpl
int3
jo
outsl
fbld
data16
pop
dec
add
lret
imul
dec
rolb
push
xor
pop
clc
fwait
daa
sbb
popa
fstl
adc
push
xor
push
pop
enter
or
daa
jl
pop
sub
sbb
aaa
dec
les
mov
or
pop
mov
lods
stos
leave
repz
xchg
sub
jns
push
add
ljmp
cs
out
loope
sbb
and
and
pusha
jbe
pop
xor
enter
jns
insl
sub
pop
adc
sbb
xchg
and
xchg
inc
sub
xlat
pop
leave
push
sub
je
sbb
mov
pop
add
lret
into
xchg
xor
bound
aas
out
xor
mov
xor
cmpsl
xchg
adc
xchg
or
or
add
lds
rol
test
xlat
call
bound
sahf
push
addr16
add
ds
cmpsb
out
sub
jmp
fmull
add
or
jmp
cld
and
ret
push
cmpsl
mov
push
cmpsl
mov
jno
pop
or
cmpl
sub
iret
sbb
loope
mov
add
jnp
mov
in
sub
mov
and
dec
inc
mov
mov
mov
and
xchg
test
dec
lret
mov
cmp
cmpsb
test
mov
lds
das
call
jo
dec
mov
jle
mov
test
out
push
cmp
shlb
scas
pop
cli
jle
in
mov
sbb
scas
add
sahf
fidivs
and
sub
and
pop
adc
and
shrb
addr16
rcll
movsl
je
or
movsb
push
movsl
aad
pusha
int
push
repz
fs
addr16
fnstcw
dec
dec
sbb
das
test
out
cmp
pop
mov
adc
or
dec
mov
cmp
shl
sbb
mov
sub
outsb
cmp
and
jge
das
mov
lcall
pusha
inc
mov
imul
add
enter
outsl
lahf
mov
leave
lds
ds
rorb
pop
cmp
xchg
jne
jge
xchg
call
adc
push
mov
outsl
std
fwait
enter
jo
movq
fisubs
std
vmovaps
lahf
push
mov
push
cwtl
inc
or
jae
xor
cwtl
and
lods
sbbb
scas
test
dec
testb
movsl
lret
and
in
dec
adcb
in
or
rcl
pop
mov
push
xor
mov
call
add
out
cmp
xchg
and
add
cmp
mov
and
mov
mov
lcall
sahf
scas
cmpsb
cmp
pop
mov
cmp
jno
mov
mov
adc
jne
icebp
pop
movzbl
iret
adc
lcall
out
xchg
mov
lea
sahf
dec
or
inc
mov
lret
enter
fisubl
mov
je
xor
mov
stos
mov
jge
in
js
xor
je
sub
sub
inc
lods
into
xlat
sbb
ljmp
sahf
cli
cmp
push
pop
and
fidivrs
cmp
loop
stos
leave
cmp
and
inc
dec
lahf
movsb
je
mov
push
push
pushf
and
or
mov
xchg
clc
inc
mov
cld
or
in
add
neg
lret
xchg
or
mov
bound
xchg
push
out
movsl
inc
pop
icebp
ss
cmpsl
subb
xchg
jno
lods
mov
inc
faddl
outsb
fimuls
gs
int
stos
aam
mov
cmp
std
inc
cmp
repz
sub
sub
pusha
int3
sub
pop
mov
je
repnz
cmp
adc
jns
clc
dec
nop
inc
dec
out
aam
jne
bound
sbb
sar
daa
in
jg
sbb
xchg
mov
add
xor
mov
sti
or
test
xor
sbb
fs
adc
insl
cs
or
lock
and
out
mov
jmp
mov
sti
xor
or
xor
mov
mov
and
cs
ja
sbb
jecxz
ds
loop
lret
xchg
fcmove
and
fwait
inc
xor
jnp
and
imul
insb
scas
std
or
mov
jg
fldenv
les
mov
mov
push
push
sti
inc
sub
pop
and
lods
xor
dec
popf
dec
into
xchg
fsubl
loope
fsubr
pop
mov
out
cmp
lods
test
pop
jecxz
push
testl
xchg
std
or
inc
mov
dec
in
inc
mov
nop
cmpl
mov
loop
loopne
fwait
sub
pusha
ds
scas
nop
push
mov
lods
push
xchg
push
dec
and
lods
xor
sbb
inc
sub
dec
fs
push
push
add
sub
and
and
sub
dec
stos
rorb
mov
ljmp
in
mov
dec
jg
dec
sbb
orl
mov
adc
stc
scas
pop
push
xchg
lock
popl
int3
pop
sub
aas
test
and
call
xor
xor
movsl
clc
xchg
inc
inc
pop
jle
cmp
ret
cmp
mov
fsubs
out
xchg
gs
push
aam
jo
arpl
pop
mov
or
pop
pop
jl
jnp
ja
jo
mov
mov
inc
xchg
out
ss
xchg
stc
mov
jmp
cwtl
and
jae
mov
mov
ds
pop
cmp
ds
ret
push
fldt
push
je
mov
mov
adc
pop
jge
in
lret
pop
jns
xchg
dec
push
mov
daa
jno
sub
subb
mov
pop
repz
mov
mov
mov
add
data16
repz
jbe
or
shr
fcoml
adc
adc
ret
cmp
lahf
in
popa
addb
push
dec
push
adc
mov
mov
dec
fdivrl
repnz
lds
jbe
lret
mov
dec
dec
in
inc
stc
adc
pop
xchg
cltd
mov
lea
pusha
cmc
jne
add
in
shrb
inc
lods
push
loop
cmp
push
or
mov
dec
loope
fwait
cmp
jp
fisttpll
sbb
cli
sahf
mov
push
sbb
pop
add
out
pop
mov
inc
cmp
cltd
ss
mov
mov
push
insb
stos
daa
cmc
bound
ret
xchg
jnp
call
mov
test
test
fsubrs
cmp
in
push
xchg
jg
jns
xor
xchg
cltd
pop
test
out
push
fwait
imul
mov
xor
cli
ss
cld
xor
xchg
andb
clc
push
push
xor
push
mov
jb
bound
jno
ja
inc
mov
and
add
sub
adc
lods
xor
mov
scas
cwtl
dec
lds
inc
and
add
incb
cmp
lds
or
lret
sbb
mov
push
cltd
inc
or
shll
push
cmp
fstps
xor
nop
jno
ret
xor
sub
jns
insl
inc
ret
add
and
fucomip
pushf
scas
scas
xor
mov
mov
jnp
in
mov
xchg
dec
dec
mov
pop
int
cld
es
pop
pop
mov
jno
mov
jns
xchg
and
push
xor
inc
inc
mov
mov
jmp
lods
stos
jmp
mov
cmpsb
mov
pop
sbb
lcall
mov
xor
xor
adc
xchg
nop
add
or
out
insb
or
adc
mov
popf
pushf
sahf
fisubrl
jecxz
fsubrs
xor
leave
lock
mov
mov
add
mov
mov
testl
aam
mov
and
push
aas
movsb
jns
add
bound
ficoml
jb
in
lret
loop
sub
dec
xchg
ret
add
lods
int
aas
leave
ret
xor
mov
movsb
rorl
loop
int3
cld
mov
ja
arpl
std
pop
mov
popa
pop
fcompl
xor
mov
movsl
or
neg
xchg
mov
or
push
sbb
repnz
jae
roll
fadds
pop
rcrb
mov
adc
scas
mov
fistps
sub
xchg
push
adc
lahf
les
mov
inc
insb
mov
add
sbb
negl
push
orl
cmp
jle
sysexit
cs
ror
lahf
jnp
movsb
loope
xchg
in
pushf
cmp
in
ja
inc
loope
jo
or
cmp
adc
iret
inc
mov
mov
sbb
xchg
mov
out
cmp
and
mov
cmp
outsl
jmp
test
mov
icebp
fxtract
ss
jp
push
enter
and
inc
jb
xchg
sub
mov
stos
into
fwait
push
cmp
push
in
or
push
xchg
movsb
dec
and
clc
or
insb
xchg
std
or
addb
jmp
ficoml
add
out
mov
stos
cmp
fsubl
or
jbe
and
scas
lcall
pop
jns
sbb
aam
pop
jmp
mov
add
or
daa
pusha
push
leave
test
mov
cwtl
rorb
mov
push
out
jp
cmp
adcb
add
fildl
pop
mov
ja
adc
inc
inc
sbb
lahf
rcrl
cwtl
or
inc
ret
ret
sub
rcl
hlt
jg
nop
mov
orb
dec
mov
mov
dec
dec
inc
rorl
fidivrs
xchg
mov
ss
xchg
push
xor
jbe
xchg
addr16
test
cmpsl
into
push
mov
push
xor
jp
dec
cltd
sbbl
push
mov
pop
mov
and
jns
out
imul
jne
xchg
mov
loope
fiaddl
cltd
add
mov
je
add
or
pop
sbb
es
jg
scas
popa
or
dec
jno
pop
mov
and
dec
popa
inc
mov
sub
xchg
data16
loop
call
jp
test
icebp
pop
stc
out
test
and
cmp
or
inc
mov
pop
addr16
pop
les
call
sbb
push
sub
pop
rol
sub
rcrb
lret
jp
movsl
xchg
ds
jne
pop
dec
icebp
or
bound
inc
daa
add
popf
cli
add
in
mov
jns
loope
xor
leave
push
pop
sub
add
or
add
mov
pop
addl
dec
movsl
and
dec
inc
enter
ret
jnp
aaa
ret
pop
cs
xchg
std
rclb
push
adc
pop
dec
arpl
shll
jg
and
xchg
aaa
or
mov
mov
dec
dec
xor
cmp
inc
rcll
sbb
mov
shlb
in
stc
in
lds
sbb
aam
jge
aaa
lahf
shrb
add
sbb
sbb
test
mov
lret
outsl
scas
cld
xchg
sub
cmp
jge
mov
lock
dec
sbbl
movups
or
daa
jns
aam
clc
int3
enter
fwait
lds
xor
push
lret
mov
push
inc
add
xchg
and
rolb
jns
xor
sbb
adcb
ror
in
lods
inc
lds
in
add
add
sbb
lds
std
decb
ret
jo
in
rcl
enter
mov
mov
shrl
lds
jno
lret
movsb
pushf
sub
push
or
add
repnz
int
fs
push
xbegin
and
pop
push
mov
outsl
fistps
pop
mov
push
je
test
jnp
fsubr
outsl
loop
fs
dec
push
xchg
cmp
fldenv
cs
fisubrs
mov
cld
xor
mov
fistpll
push
jb
and
add
pop
int
xor
mov
push
dec
fcomps
push
dec
mov
lods
xchg
xchg
dec
scas
stc
rorl
inc
sub
xchg
and
xchg
mov
sub
mov
and
int3
leave
mov
xchg
jnp
subb
xor
imul
mov
dec
pop
lods
mov
mov
add
lret
popa
cmp
jg
push
pop
dec
movsl
rclb
or
into
std
jo
pop
shrb
push
lret
sub
cwtl
shlb
add
ret
repz
push
cmp
xlat
ret
out
fs
mov
inc
std
lcall
jg
jmp
mov
enter
xor
testb
fdivp
push
lea
outsb
sub
cmpsl
repnz
cmp
mov
sub
dec
push
rcrl
fcompl
test
jns
cmp
xchg
jg
fcmovne
sbb
aas
cld
sahf
xchg
imul
cltd
jp
mov
mov
mov
faddl
push
subb
bound
js
xchg
add
jae
mov
ds
dec
out
scas
push
and
jns
xchg
int3
es
mov
outsl
fucom
inc
out
data16
add
lods
push
call
jl
pop
pop
push
xchg
jo
add
arpl
pop
sbb
sti
and
or
mov
dec
or
cmp
jnp
mov
shl
js
ret
fstpt
inc
fidivrs
add
push
aam
jbe
cmp
stos
sub
stos
xchg
idivl
pop
into
and
cmp
daa
and
shll
mov
sub
sub
test
mov
notb
stc
orl
ret
jo
ljmp
or
dec
mov
maskmovq
and
stc
outsl
sbb
xchg
dec
shrb
xor
jbe
test
fisubl
cmpsl
push
int
sub
out
mov
xchg
mov
xor
out
cmpl
aad
repnz
out
inc
cmp
mov
mov
int3
jle
test
xor
push
imul
mov
push
sbbb
jns
push
ljmp
clc
cld
xchg
ja
dec
and
sahf
mulb
sbb
fwait
xchg
add
pushf
stos
pop
aaa
xchg
xchg
xchg
cmp
fisttps
adc
sub
mov
push
adc
push
test
int
shrb
xchg
jl
lods
cmp
pushf
out
movsb
fmul
mov
dec
cmp
mov
test
arpl
push
loopne
ficoml
lock
lahf
dec
mov
aas
push
sahf
das
out
popf
push
loope
jno
push
incb
out
repz
out
xor
mov
mov
clc
jecxz
in
lret
push
xchg
dec
xor
push
dec
adc
rcll
das
out
push
imull
mov
in
pop
or
ljmp
or
int3
mov
xor
stos
sahf
pop
inc
scas
xchg
xchg
add
xchg
push
pop
pop
inc
xor
dec
std
xor
mov
rcrb
out
bound
and
ret
mov
out
enter
cmp
or
sarl
jbe
fwait
test
ss
jge
and
loope
addb
dec
loope
in
mov
sti
cmp
idiv
xchg
or
aam
add
or
in
test
mov
mov
in
xlat
jae
cld
push
sub
aad
sub
sbb
int
imul
sub
cld
push
insl
ret
mov
add
lock
popf
addl
rcl
incb
imul
xor
or
aaa
cmpsb
mov
rorb
in
sub
inc
rorl
adc
cs
or
rolb
jmp
mov
pop
adc
mov
cltd
sub
mov
mov
fwait
bound
cmpsl
aas
pop
lods
out
xor
xorb
cmpsl
orl
and
adc
jmp
test
mov
cmp
xchg
cmp
pop
iret
dec
js
jne
in
mov
mov
into
and
inc
stos
cs
xchg
pop
aad
pop
pop
lds
into
imul
shrb
enter
aaa
and
xor
inc
sbb
sub
shrl
ds
sbb
adc
test
cs
aaa
xor
mov
and
test
rorl
pop
add
loope
loop
jb
repz
mov
xchg
sub
mov
jle
add
pop
xor
inc
add
loopne
xor
data16
mov
xchg
movsb
aaa
cmp
mov
sarl
js
jl
inc
mov
cmp
mov
lahf
mov
and
test
cmp
mov
inc
pop
repz
sbb
push
adc
arpl
xchg
mov
xchg
jp
js
pop
sub
ds
jg
pop
inc
aad
or
fsts
sub
sub
lahf
outsl
pop
in
inc
sbb
mov
mov
pop
dec
lods
jae
test
das
imul
xchg
add
push
adc
test
sbb
push
add
dec
mov
mov
push
ds
inc
addr16
jne
nop
ds
cmpsl
sbb
push
add
gs
add
and
xor
pop
sub
pop
out
lods
push
lods
adc
sbb
add
xchg
or
pop
es
cmpsl
pop
mov
adc
jne
mov
fmuls
inc
xchg
inc
dec
pop
and
jmp
add
int3
mov
mov
add
repz
add
fsubp
in
push
outsl
enter
mov
jne
dec
xor
cltd
ja
lea
pop
cli
shrb
push
test
xor
outsb
cmpsl
add
mov
xor
xor
add
inc
lds
mov
sub
popf
data16
lahf
jg
cmp
push
and
adc
orb
in
loope
push
push
jl
gs
in
push
rcrl
outsl
jle
push
fidivrs
jne
dec
xchg
movsl
mov
inc
out
inc
sbb
shlb
pushf
and
sbb
inc
xor
flds
arpl
pop
data16
loopne
and
jmp
ljmp
mov
ror
and
jle
push
adc
pop
in
sbb
ds
out
clc
aas
test
push
cmp
and
xchg
iret
sub
push
xchg
incl
into
scas
sub
stc
imul
scas
popf
jnp
loop
jl
or
or
pop
push
jl
aaa
adc
pop
xchg
inc
or
and
cmpsb
in
xchg
mov
in
in
test
inc
je
cmp
jg
xor
pusha
adc
mov
iret
jnp
or
iret
jge
movsl
push
or
jb
jge
adc
cmp
lahf
and
out
xchg
dec
ret
mov
out
in
in
cmpsl
add
testl
xor
dec
test
daa
jne
enter
mov
cltd
pop
sbb
mov
pop
stc
push
add
cmp
iret
and
jae
push
push
insl
mov
ficoml
push
js
or
fdivp
xor
push
cmc
lret
mov
movsl
mov
out
aam
outsl
dec
popa
cmp
in
mov
in
push
shrb
or
std
sub
stos
popl
sub
lcall
mov
cmpsl
mov
or
jp
dec
sub
mov
cmp
cltd
push
shlb
sbb
xchg
push
cmpsl
scas
or
aaa
and
push
dec
sbb
cmp
sahf
inc
pop
stos
ret
stc
out
cmpsb
enter
sub
icebp
mov
pop
ror
or
pop
mov
add
das
sbb
addb
push
add
push
push
add
sub
shll
enter
push
mov
adc
cld
cmc
pushf
xchg
clc
daa
pop
movsl
jp
test
int3
pop
data16
imul
sbb
imul
push
fcos
movsb
mov
mov
les
cmp
arpl
stos
add
lods
shrl
les
add
xchg
mov
pop
adc
pause
adc
push
imul
imul
mov
nop
jecxz
orl
or
mov
cltd
xor
ficomps
sbb
and
test
fidivl
push
sub
or
mov
gs
and
in
and
mov
push
or
sub
rolb
in
push
mov
dec
cmpsl
cli
int3
stos
inc
sbb
inc
and
mov
or
push
lods
push
in
pop
xchg
and
and
pop
or
pusha
and
arpl
call
bound
push
cli
adc
xchg
aaa
js
sub
rcrb
insb
fdivrs
out
insl
pop
pop
stos
addr16
test
dec
aam
xlat
xchg
dec
add
jno
xchg
cmpsl
inc
hlt
imul
dec
repnz
lret
aaa
hlt
pusha
pop
sbb
cmp
jmp
jne
lods
test
rolb
insb
sbb
xlat
xchg
or
jge
lods
in
xchg
xlat
pop
scas
lds
test
movsl
sar
pop
mov
cld
test
push
mov
inc
lods
sub
xor
jb
sarl
or
jno
sbb
popf
ja
inc
push
mov
sti
cmpsl
push
negl
lock
pop
loop
aam
std
and
orl
cwtl
inc
clc
xor
and
cmp
ljmp
sbb
fdivrs
ss
inc
mov
xor
mov
jp
mov
inc
daa
rclb
negl
push
cmp
jmp
mov
jl
xchg
pop
mov
subl
xor
sub
inc
gs
xchg
or
fistpl
ret
in
lahf
pop
and
pop
mov
mov
stos
leave
dec
clts
jg
push
lret
movsb
add
and
sahf
cli
jmp
cmpsl
xchg
or
or
rcll
adc
rcrb
and
loopne
pop
mov
mov
dec
xchg
dec
out
or
je
add
and
xchg
nop
cmpsl
pop
cltd
push
jb
push
dec
mov
xchg
pop
outsb
xor
sub
ret
aam
inc
arpl
mov
mov
clc
sub
fs
lock
inc
inc
cmp
popa
xor
mov
push
mov
cmp
push
sub
pop
pop
in
popf
mov
jmp
jecxz
cmp
cmp
pop
cmpsl
out
xor
add
arpl
mov
push
aad
dec
cli
scas
rcll
fmull
addr16
or
or
ret
fstpl
sbb
cwtl
lds
out
shll
roll
sarb
int
xacquire
jge
dec
clc
out
stos
pop
leave
and
rcrb
push
inc
insb
pop
into
push
xlat
push
adc
mov
lea
fwait
lods
and
cwtl
cwtl
or
movsl
mov
movsb
push
mov
cs
jmp
sbb
sbb
in
mov
cmpsl
aas
sahf
popf
mov
sub
imul
cmp
ret
icebp
push
mov
and
pop
mov
pop
sub
adc
sbbb
stos
jmp
lods
push
push
lea
jmp
loope
imull
mov
scas
fwait
insb
pusha
jns
sub
sub
dec
mov
arpl
fsub
adc
sbb
push
or
lock
cwtl
xor
mov
test
gs
xor
stos
pop
shrb
push
mov
sti
xchg
push
mov
cmpl
adc
pop
mov
push
clc
popf
mov
in
lock
pop
mov
fidivl
pop
das
insb
mov
insl
mov
mov
cwtl
test
mov
mov
subb
and
mov
mov
pop
and
push
aaa
inc
enter
push
push
add
sbb
sub
call
jecxz
mov
mov
fbstp
call
int
push
cmp
nop
cmpsb
sbb
lds
outsb
xor
xchg
into
sub
pop
xchg
roll
jb
mov
andb
jg
stos
push
shll
orl
mov
or
push
fisttpll
push
inc
jnp
cmp
push
pop
lcall
jge
arpl
dec
pop
pop
aas
arpl
pop
test
repz
add
mov
inc
mov
call
mov
pushf
js
loop
mov
je
nop
sub
and
or
pop
jp
popa
cmp
subb
sub
cmp
das
jmp
xor
fstps
pop
in
adc
and
xor
xlat
data16
ljmp
fs
scas
jb
hlt
fwait
test
sti
sbb
jl
adc
sbb
testl
add
rolb
test
lock
mov
push
inc
cmp
cmc
xor
adc
mov
push
imul
sub
xchg
inc
mov
adc
cli
into
mov
icebp
lds
scas
adc
mov
das
fbld
mov
das
repz
mov
js
test
sbb
push
inc
push
mov
dec
movsl
jne
outsl
ljmp
jo
pop
adc
out
jns
sbb
je
mov
lods
loop
in
push
in
test
jg
sbb
rcrb
dec
sub
xchg
cmpl
popa
stc
dec
in
leave
in
in
xchg
lods
fs
jno
in
loopne
stc
add
jp
push
repnz
clc
movsl
mov
sahf
dec
les
xor
inc
shrl
rcll
fisttpl
cltd
rcrl
rorb
jne
ss
push
das
je
lret
cld
ljmp
out
or
add
cmp
pop
in
rol
data16
mov
push
sub
enter
jg
or
cmp
inc
imul
sahf
imul
addr16
js
aad
lahf
pop
in
loopne
mov
inc
jae
cmp
push
jno
cmpsl
cli
pop
adc
stc
xchg
xchg
inc
test
inc
out
clc
mov
xor
lret
cmpsb
dec
aas
int
loop
inc
push
pop
and
xor
enter
cmpl
outsb
enter
fs
mov
test
dec
ss
lods
aam
es
adc
lea
add
popa
divl
lods
inc
fbld
cmpsl
test
iret
movsb
sbb
dec
add
lods
pop
enter
mov
cmpsb
add
sub
lcall
xchg
cwtl
xchg
or
fistps
mov
popa
dec
mov
lock
pusha
inc
std
or
sub
push
add
fcomps
int
adc
repz
jecxz
adc
mov
les
jmp
shrl
pop
sbb
fwait
sub
sbb
aad
and
jle
fmul
out
aad
mov
push
rclb
mov
fdiv
gs
jl
push
out
popf
cmp
sbb
xchg
lcall
out
stos
sbb
jnp
push
jge
fs
movl
fwait
test
hlt
push
icebp
adc
jb
jns
add
movsb
cmpsl
stos
mov
push
xchg
xor
dec
fnstenv
je
repz
movb
lock
jno
out
ret
or
xchg
mov
cs
aas
jl
test
push
cmpsb
pusha
daa
inc
inc
mov
or
mov
push
dec
insb
andl
imul
shrb
mov
pop
jns
ret
aad
mov
ret
dec
leave
faddl
xadd
out
push
popf
and
pop
pop
pop
or
nopl
enter
pop
outsl
mov
xchg
sub
mov
mov
dec
add
dec
mull
jns
cli
cmc
push
fwait
cmp
push
push
jns
or
inc
scas
imul
daa
int3
mov
lcall
idivb
sbb
mov
pop
mov
inc
loopne
sbb
dec
repz
jne
mov
mov
int
sub
divps
scas
and
icebp
mov
or
rorb
into
stc
pop
fdivr
out
mov
imul
aaa
xor
push
xor
int3
mov
ret
or
push
mov
mov
lahf
pop
sbb
mov
mov
outsl
addr16
hlt
add
mov
inc
mov
push
cmp
aad
outsl
mov
or
out
sbb
jl
je
sbb
mov
ljmp
dec
fisubl
cmpsb
push
inc
div
mov
sahf
xor
imul
leave
sub
sub
in
clc
jg,pt
adc
jl
fisubl
mov
sbb
fimull
mov
sbb
xchg
jno
js
movsb
adc
add
subb
stos
pop
inc
mov
dec
fdivl
mov
dec
leave
dec
sub
pop
and
mov
or
jmp
jg
add
fs
pop
mov
out
dec
movsb
pop
es
mov
xor
dec
gs
aad
aaa
dec
push
jge
les
pop
repz
aad
pop
out
movsl
dec
sub
test
push
mov
cmpsl
mov
xlat
ret
icebp
jp
push
popa
inc
adc
fstp
sub
pop
jns
adc
cmp
add
pop
sbb
jp
xchg
mov
push
pop
pop
pop
inc
cli
shl
lds
mov
sbb
and
sbb
clc
xchg
cmp
fildll
mov
stos
xchg
sub
fidivs
in
and
sbb
cmp
cmp
scas
pop
mov
sub
sbb
pop
xchg
sbb
push
sahf
push
mov
pop
push
in
or
pop
dec
test
sti
rorb
pop
mov
clc
in
or
mov
ret
jg
popf
adc
popf
lcall
movsb
sbb
movsb
stc
idivb
fucomp
leave
shll
iret
dec
movsb
mov
jecxz
aas
sbb
fbstp
sbb
mulb
push
pop
lret
mov
push
sbb
adc
inc
inc
mov
jle
jno
in
in
mov
inc
mov
cmp
imul
inc
pop
mov
mov
outsb
lea
aad
iret
pop
mov
js
iret
add
aas
pop
jecxz
pop
and
lea
ds
push
pop
lea
cltd
push
mov
inc
repnz
mov
mov
popf
shl
sub
xor
iret
cmc
mov
outsb
fmull
mov
jg
gs
mov
outsl
mov
fdivr
sub
add
mov
lods
imul
xchg
fcmovne
mov
push
push
adc
jecxz
sbb
dec
xchg
and
nop
mov
movb
xchg
xchg
inc
sub
rcr
add
std
daa
sbb
dec
enter
stc
mov
mov
daa
push
push
mov
push
sbb
and
mov
adc
jle
lods
pop
push
mov
fistl
stos
je
jmp
lcall
fs
cmp
sbb
push
cmp
add
hlt
inc
mov
sub
addb
add
std
push
jp
hlt
mov
and
mov
stc
mov
or
add
xor
add
inc
stc
ret
sti
xchg
cltd
pop
mov
das
stos
decb
xor
push
sarl
in
call
xchg
fdivl
and
fidivl
mov
inc
lds
inc
mov
xorb
inc
xchg
in
loop
push
repz
int
xor
movsl
push
xlat
insb
mov
push
and
mov
bound
xchg
insb
cmp
out
mov
cld
stc
dec
test
cmp
fnsave
fimull
arpl
adc
mov
mov
andb
jne
mov
aas
cmp
mov
fists
pop
sub
mov
push
arpl
lcall
pop
mov
push
ja
cmp
movsb
xchg
mov
mov
jg
imul
mov
ret
and
dec
jbe
std
js
pusha
popf
inc
or
imul
and
inc
push
dec
adc
mov
xor
xchg
sub
pusha
lahf
pop
pop
les
insb
mov
push
lcall
int3
inc
icebp
movl
mov
cmp
push
dec
bound
xorl
mov
std
cmp
daa
xor
xchg
loopne
adc
mov
lret
sub
cltd
jge
rep
fistpll
and
mov
call
enter
pusha
shlb
iret
cmc
test
mov
xor
cld
fisttpll
mov
inc
in
dec
cmc
mov
mov
lret
fcompl
add
loope
frstor
sahf
fisubs
jo,pt
jecxz
pop
mov
sbb
stc
pop
xchg
dec
inc
fcmovb
outsb
ficompl
jp
filds
xchg
leave
outsb
add
and
pushf
std
fnstenv
lods
scas
int
adc
push
fsubs
add
rorb
rcrb
xchg
sbb
imul
jge
sbb
push
jnp
fstpt
aaa
adc
mov
cmpsb
aad
int3
jle
std
mov
jge
rclb
test
push
lods
xchg
add
stos
imul
push
fbld
imul
push
in
test
fs
scas
subb
dec
xchg
lods
sbb
sahf
out
xchg
cld
xchg
ror
roll
inc
inc
and
and
sub
sbb
out
das
out
sar
gs
das
imul
xor
testl
or
bnd
xchg
dec
sub
mov
inc
cli
in
lret
sub
insl
mov
insl
or
and
and
jnp
sub
ret
aaa
outsb
jbe
sti
jno
shlb
roll
cmc
jb
sbb
push
push
sti
or
add
sti
cli
ja
and
cmp
push
push
subl
fisttpl
mov
mov
jnp
mov
aad
mov
subb
ret
dec
das
xor
pop
or
xchg
sbb
mov
mov
cmp
sti
jns
rcl
dec
repnz
stos
jo
dec
mov
lret
insl
ret
cmc
inc
mov
and
sub
dec
xor
and
stos
mov
adc
xchg
mov
arpl
jp
popf
mov
jno
lcall
lret
sub
dec
iret
mov
mov
fistl
fwait
pop
loop
les
insb
std
pop
xchg
outsl
aad
or
mov
roll
aam
jae
test
popa
sbb
inc
cmp
aad
lret
mov
mov
cmp
push
shll
in
inc
or
mov
mov
loop
and
sbb
subl
and
movsl
pop
popf
push
push
push
daa
jg
xor
push
mov
popa
lret
push
test
cmpsl
sahf
aaa
dec
mov
ds
pop
ficoml
mov
ss
fildll
jp
mov
push
mov
pop
stc
jo
insb
adc
ss
sbb
mov
mov
and
outsl
dec
xor
fnstsw
nop
add
mov
xor
jp
lds
and
push
stc
rcrb
shll
cld
iret
ret
mov
in
jae
sti
jecxz
pop
push
ja
leave
xchg
xchg
sbb
loop
mov
mov
inc
sbb
xchg
in
sub
movsl
mov
jnp
mov
sahf
enter
ljmp
cmp
inc
sub
into
sbb
and
push
sub
pop
cltd
ror
push
fwait
push
dec
aad
xor
sbb
and
addr16
ret
inc
ret
in
inc
push
aad
cld
add
mov
gs
or
pop
insl
add
or
ds
add
adc
sbb
ret
lds
push
bound
bound
outsb
cs
xchg
lcall
pushf
sbb
jp
xor
inc
sbb
icebp
jl
push
add
jp
inc
loope
lcall
ljmp
jnp
jecxz
lahf
rolb
test
fiaddl
mov
mov
inc
sub
cmp
or
fstp
sub
pop
mov
insl
mov
add
or
push
fimuls
scas
push
push
or
and
add
movsb
dec
insl
jne
aam
jg
mov
and
add
fdivs
sbb
lret
pop
lret
push
jb
add
adc
lea
push
adc
jecxz
push
pop
out
inc
pop
xchg
xor
cmc
decl
jge
inc
mov
jecxz
cli
scas
fsubrs
lock
mov
pop
jmp
mov
xor
push
aas
or
gs
scas
dec
sti
cmp
xchg
xchg
outsb
or
add
xchg
mov
add
fidivrl
mov
std
sbb
and
scas
adc
push
jne
cmpsb
cmp
sub
xor
push
adc
mov
negl
fs
and
jge
lcall
jnp
pop
xchg
cmp
aad
ja
mov
cmp
cmpsl
repz
cltd
mov
jle
mov
and
inc
mov
adc
test
xor
xor
mov
xor
xor
adc
cmp
out
jecxz
repz
sbb
dec
fs
clc
ljmp
sti
scas
ss
leave
adc
xchg
jmp
adc
fwait
xor
je
cli
push
add
mov
inc
hlt
fcmove
inc
mov
adc
mov
mov
mov
or
icebp
shrb
mov
imul
xor
or
lods
jecxz
cltd
cmpl
popf
jo
mov
push
pop
int3
push
gs
call
rorb
xor
mov
and
and
pusha
lods
inc
sti
xor
pop
xchg
sbb
out
jecxz
push
call
ss
fs
out
shlb
int3
mov
lods
xor
jp
fidivs
pushf
adc
clc
call
xchg
addb
and
push
aad
fsubs
cmp
loopne
xchg
lret
push
lret
xlat
mov
push
in
mov
dec
lret
movb
movsb
loop
dec
idivl
mul
insl
inc
jo
mov
jge
push
les
add
fisttpll
rclb
mov
lahf
mov
ds
mov
in
lods
pop
popf
mov
sbb
scas
hlt
sbb
outsb
push
dec
mov
mov
sbb
daa
push
bound
lahf
int
insl
push
into
or
movsl
cmp
test
lock
mov
and
pop
adc
push
js
call
adc
inc
inc
stos
daa
mov
jo
lret
xor
inc
stos
sbb
loope
xchg
adc
and
fwait
insl
inc
ja
lods
imull
adc
out
movsl
mov
lret
dec
jne
out
dec
push
daa
and
dec
mov
addr16
jmp
jo
inc
mov
je
leave
das
das
sub
loopne
std
mov
sbb
rcl
sahf
add
scas
add
fidivrs
xchg
les
lea
xlat
jge
mov
scas
jge
jo
add
ljmp
sub
enter
shrb
and
xor
xchg
hlt
mov
cmpsl
jge
ljmp
push
inc
jae
out
fcompp
jge
push
clc
fbld
push
aaa
dec
mov
adc
int3
sbb
push
in
jle
mov
sub
xchg
cmc
push
mov
dec
push
shll
mov
fxch
lcall
sub
and
ljmpw
daa
fcomps
mov
out
jge
jno
rcrl
shr
jecxz
subb
adc
sub
add
mov
push
mov
adc
unpcklps
mov
hlt
push
jae
cmp
ret
dec
sarb
mov
mov
adc
xchg
out
push
sbb
dec
adc
inc
add
psrad
jb
dec
movd
loopne
inc
in
push
outsl
push
jno
xor
adc
and
sub
adc
insl
xor
jbe
fidivrl
push
inc
mov
pop
jmp
das
sbb
mov
je
mov
xchg
hlt
fisttpl
dec
hlt
add
pop
cltd
mov
in
push
pop
pop
shrb
push
sbb
mov
inc
push
push
jne
adc
mov
push
cmp
mov
outsb
xchg
mov
jle
fucomi
mov
sbb
dec
xor
gs
out
add
dec
ljmp
cmp
movsl
cmp
inc
call
jb
push
and
bound
pop
and
scas
int
mov
mov
iret
lret
fnstcw
cs
movsb
lds
sub
test
stos
clc
push
out
push
inc
scas
mov
jl
jl
imul
cs
sti
inc
pop
out
into
aam
mov
lods
add
add
jecxz
ret
iret
lds
fimuls
xchg
ss
lock
push
jnp
cltd
add
iret
cmp
pop
into
imul
fstl
jmp
mov
shlb
jae
loop
mov
mov
sub
dec
and
test
adc
dec
xor
or
outsl
add
imul
pop
aas
stos
and
xchg
popf
dec
pop
and
jnp
and
addr16
adc
ljmp
inc
adc
xor
xchg
mov
inc
inc
inc
sbb
sbb
std
in
mov
andb
rorl
fdivrs
fiadds
jecxz
sbb
adcl
mov
mov
std
adc
ja
lret
dec
dec
mov
mov
xchg
mov
inc
bound
cmp
dec
add
mov
mov
ret
and
and
sub
mov
or
add
and
subb
cmp
addr16
jl
adc
lret
xor
jb,pt
inc
and
mov
insb
add
lock
mov
xchg
das
add
testl
loop
cmpsl
mov
fs
out
int3
xor
adc
sbb
adc
mov
out
aad
int
gs
into
test
out
mov
push
imul
dec
addr16
mov
dec
rcr
outsb
ret
les
sbb
jp
ljmp
sahf
add
enter
iret
das
sbb
shll
and
pop
jns
cmp
or
jmp
pop
sbb
arpl
fstps
pop
test
pop
jg
cmpsb
or
pop
add
mov
js
ficoml
shr
xlat
ret
xchg
bound
xchg
mov
push
xchg
pop
sub
mov
cmp
ja
into
adc
push
mov
cmp
pop
dec
jge
mov
repnz
xchg
adc
dec
adc
loop
add
push
movsb
mov
sbb
sbb
pop
xorl
sti
loopne
mov
xchg
and
push
mov
mov
cmp
xchg
je
xchg
xchg
cmpsl
adc
cmpsl
mov
lret
arpl
adc
sarl
repnz
push
in
cmpsl
push
mov
add
mov
jecxz
xchg
xchg
add
push
push
adc
cmpsb
in
pop
imul
sbb
sbb
iret
fsubl
push
nop
dec
subb
jno
cmp
lret
mov
pop
pop
dec
mov
push
daa
jne
js
sbb
rorl
lock
lods
bound
inc
cltd
mov
cwtl
out
mov
xchg
in
test
hlt
lds
sahf
aam
cmpsl
and
aad
jne
pop
sti
mov
insl
dec
fisubl
insb
outsb
adc
shll
and
imul
stos
push
xchg
aam
fidivrs
adc
js
xor
shl
jmp
repz
adc
sub
lock
or
mov
adc
jo
dec
xorl
push
jbe
lcall
jns
outsl
inc
jne
cmpsl
cmp
push
and
fidivs
jl
xchg
pop
or
punpckhwd
mov
mov
xchg
in
and
mov
cli
mov
je
fisttpl
movsb
mov
inc
out
sahf
mov
sbb
mov
nop
jnp
or
xor
jbe
sahf
and
inc
aaa
jno
sbb
outsb
lods
inc
int
cmpsb
add
dec
lds
sbb
movsl
or
test
hlt
ds
ja
test
jo
jmp
add
clc
cs
jecxz
mov
ljmp
mov
and
das
dec
sbb
xchg
fwait
xchg
out
or
and
scas
cmp
outsb
adc
add
insb
mull
cmp
imulb
inc
dec
aad
mov
test
jno
call
mov
inc
shl
or
push
sbb
cs
sahf
jno
mov
loope
outsl
idiv
dec
out
fs
mov
jmp
mov
xor
jae
enter
xchg
loope
in
cs
cli
pop
cmp
lahf
or
xchg
dec
jne
xor
push
idivl
out
out
int3
lret
push
fnclex
sbb
mov
sbb
mov
jns
add
mov
test
gs
cmpsl
mov
loopne
divb
mov
icebp
jle
adc
push
popf
lock
imul
mov
repnz
xchg
sub
sbb
hlt
call
imul
scas
jecxz
es
sbb
jl
ret
mov
mov
pop
xchg
sbb
pusha
pop
ljmp
pop
in
test
adc
xchg
pop
rorl
mov
andl
mov
pop
lods
jb
jae
imul
jnp
dec
popf
inc
ret
dec
scas
mov
in
sub
std
int
mov
es
aaa
jge
mov
test
cs
inc
pop
or
xor
ret
push
outsl
xor
push
rorb
mov
aaa
sub
or
dec
lods
pop
dec
mov
negl
and
imul
inc
repz
jmp
jmp
loope
pop
sti
imul
add
jge
xchg
pushf
ficompl
inc
insl
ljmp
hlt
mov
adc
cmp
shlb
pushf
test
scas
inc
aam
iret
fmuls
lcall
js
pop
stos
fistps
das
mov
or
jg
sub
subl
or
sahf
jno
loopne
mov
mov
mov
popa
mov
xchg
xor
shll
repz
mov
shrb
repnz
xchg
sbb
andl
faddl
mov
mov
fincstp
ljmp
sub
pop
xchg
mov
sub
in
mov
pushf
mov
jnp
pop
bnd
shl
adc
insl
xchg
mov
jl
lahf
sub
pusha
xchg
inc
sub
add
push
lcall
and
pusha
sbb
in
loope
leave
jp
pop
xrelease
sbb
lahf
cmp
jno
rorl
xor
push
dec
test
sarl
adc
cmpsb
shll
outsb
pop
mov
pop
xchg
fidivrl
xchg
pop
jmp
frstor
outsl
jns
mov
xlat
lds
mov
ret
ljmp
cmp
das
mov
cltd
mov
push
push
gs
outsb
jbe
xor
cmpsl
notl
mov
subl
into
lock
jns
dec
scas
shrb
test
add
or
pop
test
mov
insl
insb
dec
and
add
mov
lahf
popa
add
iret
or
sub
cmp
scas
inc
cmc
aas
add
add
inc
loop
mov
aad
adc
bound
inc
cmp
jnp
push
mov
push
mov
cmc
pop
sbb
nop
mov
push
leave
adc
cli
aaa
sbb
mov
or
xchg
inc
dec
push
jp
jle
cmpsb
cmp
imul
out
jmp
fwait
imul
fsubrs
mov
das
lea
pop
mov
filds
adc
fistpll
pushf
clc
xor
push
test
adc
and
aaa
pop
add
jb
orb
fdivrs
ss
and
notb
clc
cld
push
lret
jb
pop
mov
push
xor
sbb
and
adc
mov
lahf
sarb
mov
inc
mov
jp
adc
mov
add
or
inc
stos
fadds
das
xchg
lcall
rol
and
outsl
adc
sub
jge
mov
aad
loopne
shll
cmpsb
cmp
pop
in
movsb
cmp
mov
data16
lret
call
mov
adc
je
out
sbb
jne
cmp
and
dec
and
adc
int
xlat
and
stos
inc
cmp
aad
pusha
addr16
push
cmp
js
add
xchg
mov
mov
test
cmpsl
xor
and
dec
lcall
hlt
shr
fwait
movsl
pop
xchg
daa
or
jge
popa
das
mov
movsb
aaa
repnz
add
mov
idiv
stos
jmp
popf
jg
xchg
pusha
xchg
mov
add
in
test
nop
jno
aaa
pop
mov
in
sbb
inc
adc
cmc
sbb
xor
and
aaa
fidivrl
adc
data16
cmpsb
push
mov
jne
cs
add
sbb
push
dec
testl
insb
aas
xchg
xor
mov
shll
mov
cmp
les
mov
outsw
inc
add
jnp
jecxz
mov
cmp
frndint
adc
cmc
adc
jne
or
jge
sbbl
es
js
mov
sbb
pushf
out
ret
das
adc
jge
mov
jnp
jl
imul
push
or
loope
es
and
and
lret
nop
adc
adc
lcall
rorl
mov
mov
aad
sti
pop
mov
push
cmp
loop
cmp
mov
adc
and
cmp
mov
lahf
jle
adc
lret
inc
add
dec
push
ja
pop
and
decb
daa
andl
out
in
popf
mov
fcomip
lods
push
mov
dec
and
xor
add
mov
jp
mov
int3
pusha
pop
cwtl
test
xchg
ja
fsubrl
push
and
icebp
xchg
xor
jmp
pushf
aas
in
jbe
jnp
pop
in
out
stos
sti
into
into
ds
or
push
sahf
mov
fucomi
cmp
loope
jle
jl
sub
push
xchg
and
jne
add
aad
add
ss
push
cmpsl
adc
test
push
sarl
repz
mov
in
mov
repnz
mov
mov
pop
insl
sub
cmp
rcrl
xor
pop
stos
xchg
adc
xchg
push
add
outsl
ja
xchg
lea
fwait
bound
jge
dec
cld
inc
add
mov
push
int
mov
sub
add
mulb
stos
mov
lahf
sbb
into
add
ret
push
pop
loopne
sbb
sbb
popf
data16
mov
adc
ja
jp
push
js
or
call
out
mov
jo
lcall
arpl
hlt
xchg
inc
inc
sti
outsb
lret
pop
inc
jmp
cld
pop
push
stc
bnd
shll
stos
into
sbb
or
imul
loopne
sbb
dec
dec
jl
mov
lds
sar
mov
es
jnp
inc
sbb
rorl
loop
in
dec
lret
nop
aaa
adc
pushf
sbb
mov
fcomps
jno
sub
cmp
into
xchg
cmp
subl
pop
lcall
out
cmc
iret
dec
mov
adc
mov
cmp
repnz
xchg
dec
sub
stos
inc
adc
out
fmul
cmpb
icebp
loope
in
dec
testl
pop
jnp
jno
mov
jl
or
enter
sub
or
enter
mov
adc
fcmovnb
and
inc
cmp
mov
push
ljmp
fldenv
push
jns
push
sbb
dec
je
jns
jnp
movsl
scas
daa
sbbb
xchg
mov
sbb
imul
repz
bound
in
inc
movaps
jbe
pop
push
dec
and
jle
jge
ljmp
fcoml
add
cmc
inc
inc
mov
adc
into
dec
xchg
imul
mov
push
jecxz
pop
sbb
mov
xor
scas
icebp
loop
leave
add
dec
iret
adc
cli
rorb
rcr
add
xor
mov
sbb
movsb
xor
lods
ja
or
mov
adc
dec
test
movsl
cwtl
sarb
pop
cwtl
imul
movsl
xor
xchg
sub
push
adc
mov
sarb
mov
scas
push
mov
lock
popf
movsl
shlb
inc
push
mov
insl
testl
cmp
sbb
xchg
push
mov
push
jmp
dec
sahf
movsl
pop
int3
lods
push
nop
push
sti
lcall
outsl
cmc
dec
inc
fcoms
push
pop
mov
enter
pminsw
adc
fstpt
fwait
dec
adc
push
xchg
and
out
in
mov
mov
xor
push
add
adc
icebp
dec
fidivrs
insl
aas
mov
mov
inc
mov
std
jae
cwtl
inc
ficomps
out
int
push
pop
xchg
pop
inc
jnp
fs
fiaddl
push
loopne
insl
loopne,pt
or
jbe
jbe
sub
clc
sbb
clc
call
inc
cmc
data16
ret
sahf
xchg
mov
rorb
mov
cmp
inc
hlt
mov
fidivrs
inc
xchg
addr16
imul
or
mov
dec
push
addr16
lods
xorl
loop
mov
and
jbe
ss
loope
sub
pop
fstp
pop
sub
enter
pop
mov
and
mov
adc
or
rcrb
gs
fwait
add
adc
fwait
lods
jg
les
push
aaa
iret
mov
cmp
or
cmp
add
push
pushf
xchg
movsb
int3
push
jge
mov
mull
push
enter
rorl
jg
add
jno
or
pop
test
dec
rcrl
sub
in
repz
pop
or
lds
dec
insb
mov
loope
pop
and
fnstenv
adc
mov
inc
jns
and
ret
xchg
adc
rol
push
dec
ljmp
ret
or
fcoms
xchg
mov
fbstp
mov
mov
call
sub
cmp
cmp
pop
cli
out
pop
fidivl
mov
mov
xchg
inc
leave
adc
pop
in
mov
push
in
sub
xchg
xchg
dec
push
jg
bound
stos
add
sbb
sub
lret
or
xchg
shll
mov
and
pop
mov
sahf
mov
ss
pop
jl
xor
adc
mov
sub
stc
mov
dec
hlt
rep
repz
xor
xor
inc
sarb
mov
es
inc
cmp
test
leave
fiaddl
cld
jmp
fmull
adc
add
imulb
es
xor
pop
push
mov
add
sahf
icebp
loopne
pushf
neg
ss
xchg
jl
xchg
push
mov
mov
pop
lds
iret
arpl
nop
fidivs
repnz
push
cmp
xchg
inc
test
les
push
repz
imul
daa
sti
jo
push
imul
or
push
sahf
cs
push
adc
xchg
push
cmp
mov
dec
test
scas
fs
or
gs
jo
dec
testl
stc
pop
dec
mov
adc
je
lods
pop
push
mov
push
rorb
jg
xchg
mov
pop
in
dec
mov
test
outsl
leave
stos
jb
xor
fbstp
mov
outsl
out
add
arpl
in
adc
lret
popa
cs
test
enter
js
outsb
add
jae
pop
xchg
mov
fists
push
outsb
ret
neg
mov
pop
fwait
mov
out
ds
ss
jge
stos
cmp
mov
pop
stos
adc
out
jmp
aad
and
and
insb
sub
pop
mov
xor
shll
jecxz
clc
mov
iret
jno
mov
in
inc
shrb
aaa
clc
enter
push
jno
adc
push
pop
shll
ds
int3
xor
add
xchg
ret
int3
mov
jge
mov
pop
data16
inc
cli
xchg
dec
loope
rolb
xchg
mov
mov
push
mov
xchg
mov
mov
or
inc
pop
dec
fcoms
jnp
mov
pop
mov
outsb
push
mov
cs
adc
test
fmuls
movsl
in
mov
hlt
push
mov
mov
scas
push
mov
ret
mov
popa
xchg
xchg
adc
sub
les
pop
rcrb
sub
stc
aaa
dec
add
push
scas
lds
xchg
les
sbb
test
ret
or
sub
sub
or
out
pop
cmpsl
mov
das
jae
mov
jl
lock
outsl
mov
rorl
fnstenv
xchg
inc
mov
dec
shrb
iret
xchg
add
mov
and
mov
cmp
push
push
repnz
jo
mov
test
mov
fsubs
mov
in
sub
clc
inc
fsubrl
lods
out
enter
jmp
cltd
lock
add
lcall
add
shl
and
pop
incl
les
mov
ljmp
and
push
pop
gs
and
adc
fcmovb
pop
shll
nop
lret
sub
call
push
loope
push
dec
push
xlat
loopne
inc
vdivpd
imull
lock
repz
inc
out
leave
out
push
mov
les
je
std
cs
int3
xchg
rorl
push
or
ret
jae
or
sarb
xchg
js
enter
cmp
cwtl
mov
jg
jl
adc
inc
cmp
out
subl
cmc
cwtl
inc
fcmovu
rol
hlt
in
jp
mov
sub
mov
bound
into
xchg
or
xor
clc
pop
outsb
lahf
ret
dec
inc
hlt
xor
insl
push
and
xor
mov
stos
mov
push
push
mov
fists
fiadds
xchg
mov
inc
dec
lods
cli
cli
jp
cmp
inc
push
out
iret
pusha
rolb
and
cmp
mov
out
rolb
pop
icebp
jge
push
or
repnz
fwait
xor
rcl
add
lret
jmp
and
cmc
inc
add
inc
xchg
lret
sbb
mov
daa
sub
mulb
repnz
add
sub
shr
mov
mull
imul
adc
add
push
inc
inc
in
rorl
pop
push
and
shll
jne
jae
fisttps
dec
das
fs
lahf
mov
or
stc
sbb
jl
shrb
add
loop
into
movsb
enter
xchg
mov
adc
addr16
push
lea
lock
pusha
stos
xorb
fsubrs
cmp
inc
pushf
sbbb
popf
cmp
rorl
mov
mov
sarl
stc
shll
pop
jp
dec
push
in
cmpsl
mov
adc
fsubrs
les
inc
dec
jmp
adc
xor
iret
pusha
addr16
fs
xchg
jle
push
pushf
pop
push
sub
inc
inc
jecxz
cmp
mov
outsl
fimull
mov
ret
movsl
popa
repnz
dec
or
in
das
es
mov
inc
adc
jle
xor
mov
mov
add
ficomps
arpl
mov
jg
mov
cmpsl
mov
pop
dec
mov
mov
and
jno
ja
ret
pop
push
dec
cltd
dec
das
xchg
add
xor
in
mov
cltd
addr16
push
ljmp
inc
lock
add
hlt
sub
pusha
es
aam
xor
cmp
add
inc
popa
nop
mov
insl
in
ss
in
inc
pop
pusha
sub
dec
popa
fdivr
sub
pop
out
mov
arpl
xchg
pop
fisubl
pop
xor
in
sbb
lret
pop
inc
add
jle
or
ficoms
mov
jns
icebp
jl
push
mov
adcb
stos
sbb
not
ss
mov
insl
dec
imul
daa
add
or
push
sub
xchg
sub
and
imul
mov
pop
and
or
sbb
inc
int
inc
sti
adc
push
push
mov
rcll
lds
xchg
and
xchg
out
xlat
fidivl
push
inc
push
dec
loopne
nop
xchg
je
je
xor
or
int3
sub
stos
inc
jb
sahf
or
and
push
pop
cs
xor
aam
loope
imul
loopne
js
inc
popa
sbbb
push
mov
sbb
and
sub
xchg
js
ja
xchg
sub
shlb
mov
fldl
inc
sub
fadd
adc
int
cmpsl
test
jo
aaa
xorb
cltd
jb
mov
jne
mov
mov
outsb
fcomps
mov
sbb
mov
sbb
or
mov
jae
dec
in
notb
fwait
dec
or
inc
inc
sub
inc
mov
add
ljmp
cmp
push
xor
movsl
adc
lea
add
adc
aaa
les
ljmp
aaa
stos
push
xchg
xchg
sub
sbb
add
jns
or
mov
movsb
test
xorb
mov
mov
ret
out
inc
sbbb
out
inc
shl
adc
mov
nop
dec
mov
push
or
xchg
cmpsb
sbb
dec
shrb
aas
pop
hlt
mov
pop
or
pop
xor
inc
call
ret
ds
daa
push
adc
mov
xchg
mov
mov
hlt
sbb
js
push
cwtl
xchg
sbb
dec
push
jecxz
mov
pop
sub
ret
mov
xchg
inc
jmp
cld
xchg
or
push
inc
xor
jae
inc
mov
sbb
aaa
adc
cli
rcrb
add
hlt
int3
dec
aad
je
dec
jns
pusha
addr16
imul
lds
inc
arpl
lods
and
push
push
mov
mov
leave
rorl
int3
mov
stc
push
mov
push
mov
fisttpll
cmp
jbe
jns
jo
mov
xchg
fs
jl
jns
fstpl
int3
lret
lods
add
ljmp
idivl
jle
pop
or
insb
clc
push
cmp
lods
and
cmp
mov
das
mov
cs
lds
sub
ss
dec
clc
clc
adc
jno
nop
js
or
mov
imul
and
mov
je
loopne
pusha
pushf
adc
test
xor
jb
shll
jp
cld
stc
push
mov
inc
adc
idivb
push
mov
loopne
push
fiadds
pop
push
and
or
mov
fiadds
fs
pop
xor
jo
push
jno
std
movsb
mov
loop
jno
mov
aad
mov
mov
xchg
rorb
mov
mov
or
les
data16
frstor
xchg
xchg
fs
test
orb
dec
pop
out
mov
jne
mov
mov
sbb
inc
dec
vprotb
test
lea
popa
xchg
lea
sbb
shrl
or
pop
mov
lcall
sub
mov
insb
fstpl
andl
pusha
popf
add
xor
mov
iret
cmpsb
push
leave
mov
lods
mov
subb
movl
insb
cmc
sbb
mov
sahf
cmp
inc
sub
mov
test
push
and
cmp
mov
out
ja
inc
add
push
mov
addb
imul
aad
sar
fs
into
je
sbb
call
incb
pop
add
mov
call
and
or
xchg
sbb
lea
fsubs
add
stos
lret
mov
cmp
mov
dec
sub
sub
cmp
aas
add
inc
fdiv
sub
or
out
mov
scas
jne
iret
cmp
pop
sbb
into
cwtl
push
push
add
push
je
insl
mov
xor
pop
and
inc
stos
mov
sub
cmp
in
push
lret
bound
or
movsl
sub
or
sub
push
xchg
in
sub
lods
lea
insb
insl
xor
in
scas
push
xchg
sbb
in
imul
and
fstps
sbb
cltd
push
not
add
scas
inc
jg
imul
or
push
push
cli
imul
lea
push
int
icebp
mov
adc
xor
cmc
fstpt
xchg
sbb
pop
sub
cwtl
lea
inc
mov
rolb
adc
mov
popf
xchg
repz
mov
mov
cmp
aas
push
xor
es
cmpb
pop
es
sub
cmp
xchg
dec
rolb
cmpsl
pop
fst
jg
mov
fidivrl
shrb
adc
cltd
test
loop
or
sub
out
insb
pop
movsb
mov
roll
or
fiaddl
in
adc
into
sbb
sbb
mov
push
insb
cld
or
daa
loopne
jg
add
push
mov
sub
out
lcall
fisttps
jae
inc
or
popf
sub
loop
or
mov
sbb
pushf
and
outsb
ss
out
inc
xchg
ret
call
lcall
aad
movsb
add
ret
inc
shl
in
das
mov
out
xchg
cmp
xchg
sbb
pop
lds
push
loop
adc
xor
xchg
test
cmp
sub
out
xor
cmp
sub
out
mov
das
xor
dec
push
xchg
test
sbb
lods
cmp
lahf
sbb
icebp
and
ljmp
shlb
insb
aas
adc
cmpsl
jmp
xor
iret
into
pop
xchg
loopne
movsl
ret
das
test
scas
lret
gs
cmp
dec
cltd
iret
xorl
push
adc
and
orb
sbb
pusha
mov
cmp
mov
dec
push
into
roll
js
nop
je
in
or
xchg
pusha
daa
fists
or
subb
pop
loope
and
mov
cmp
cli
push
xchg
int
xor
cmp
je
xlat
adc
mov
cwtl
push
push
lods
mov
jnp
pop
adc
push
push
outsb
nop
adc
test
aas
inc
nop
fiadds
jge
push
xlat
xchg
loop,pt
mov
inc
insl
lods
xchg
loope
and
xchg
mov
ds
jg
fiadds
lods
jb
ljmp
xchg
mov
test
iret
dec
pop
iret
movsb
cwtl
enter
imul
or
pop
sbb
xchg
mov
and
imul
jp
jg
pop
fnstenv
in
out
push
fistl
pusha
test
dec
xor
push
mov
dec
xlat
mov
imul
pop
mov
xchg
orb
sahf
xorl
sbb
enter
dec
xor
mov
out
and
adc
xchg
test
dec
jg
lods
dec
lret
pop
or
test
inc
dec
mov
lahf
lret
inc
jns
xchg
adc
inc
sbb
or
movsl
dec
ret
sbb
outsb
xchg
js
mov
dec
xchg
sti
push
xchg
dec
outsl
iret
rorb
xlat
mov
inc
inc
cli
jge
out
in
dec
xchg
stc
call
pop
ljmp
xor
sbb
jecxz
sarl
popf
imull
pop
andl
jmp
nop
pusha
imul
xor
pop
jmp
daa
aam
movlps
insl
stos
jns
ret
ljmp
cs
dec
push
movsl
mov
pusha
xor
push
inc
inc
xor
or
inc
lock
sub
mov
ficoms
fildl
subl
hlt
push
add
clc
xchg
sahf
add
stos
repnz
jg
mov
out
rcrb
frstor
lods
push
dec
mov
iret
pushf
mov
pop
movsb
cmpsl
scas
mov
push
nop
xor
out
fwait
movsb
xchg
xchg
fldl
mov
mov
mov
imul
jp
popa
fists
hlt
testb
mov
and
push
cmp
mov
xchg
cwtl
xchg
add
adc
aam
cld
and
test
fdiv
aas
fisubs
jle
mov
mov
sbb
pop
xchg
je
sub
fistps
add
dec
jns
arpl
jmp
jle
addr16
popw
and
mov
mov
jb
inc
and
adc
pop
ficomps
shrl
jmp
rcr
das
mov
sub
and
inc
mov
addr16
or
mov
mov
mov
jne
pop
icebp
push
and
pop
scas
dec
xor
dec
pop
movsl
xor
sub
aas
dec
inc
add
es
xor
jno
add
mov
dec
adc
fstpt
pop
mov
dec
jnp
or
lahf
add
stos
stc
loope
jbe
test
loopne
push
jge
xchg
stos
into
daa
std
hlt
outsb
inc
cmp
xchg
mov
out
nop
lea
push
cmc
cmp
inc
add
xchg
adc
lods
fadds
push
push
ret
cltd
rorb
aad
cwtl
cmpsb
iret
scas
aaa
inc
cli
sbb
sub
xchg
xor
arpl
and
es
pop
leave
popa
aam
sbb
pop
jg
test
nop
out
shll
push
sub
add
imul
add
sub
push
testl
mov
hlt
push
pop
test
repz
sbb
arpl
mov
or
pop
mov
stos
inc
out
and
dec
xchg
push
add
int
insb
js
push
cmpsl
mov
inc
stos
xchg
mov
xchg
inc
or
popa
lahf
pop
jmp
sub
rorl
cli
lds
cs
cwtl
mov
jge
nop
pop
cld
clc
push
movsb
mov
add
rorl
arpl
sub
dec
loop
loopne
loopne
inc
xor
cmc
shlb
test
stos
adc
ret
mull
push
sub
cmp
lahf
loopne
pop
sub
sbbb
out
dec
mov
je
dec
leave
push
ljmp
cmp
mov
insb
ret
loopne
dec
jbe
ja
cmpb
lods
jo
in
mov
lea
push
push
push
pop
aam
sub
adc
push
out
mov
adc
mov
arpl
addr16
stos
push
mov
sarb
imul
rolb
dec
aad
aam
lods
in
push
jns
test
add
and
loop
sarl
jp
popf
pop
psubb
call
pop
ret
xchg
in
daa
frstor
push
sub
xor
dec
lret
in
mov
test
dec
insl
push
inc
rcll
out
mov
std
enter
lret
xor
jmp
xor
jecxz
fcoml
push
push
mov
sub
or
sbb
jl
add
lods
pop
int3
cmp
jno
aam
shll
hlt
vpcomw
sub
clc
mov
and
leave
mov
cmp
xchg
pop
inc
in
insb
pop
pop
cltd
adc
fs
lods
push
jl
outsb
or
lcall
in
cmp
movsl
pop
cmp
jg
out
fisttpll
mov
xlat
jno
adcl
stos
or
dec
or
mov
fnstcw
xchg
and
js
adc
and
cs
inc
in
add
rol
outsb
jp
xchg
jmp
sbb
andl
sti
jge
fisubrl
add
scas
daa
mov
stos
aad
pop
mov
sbb
cs
shr
and
and
push
arpl
pop
out
movsl
adcb
popf
shll
mov
sahf
add
lods
jle
and
outsb
loope
iret
xor
aas
mov
pop
mov
repz
jae
rcrl
and
cmpsl
fldl
imul
dec
xor
jae
push
xor
cmp
pusha
mov
lret
loope
push
pop
loopne
rolb
imul
mov
mov
fstpt
ds
push
mov
and
mov
sbb
adc
mov
jge
jo
dec
push
adcb
jl
dec
sarb
jns
xchg
aad
fdivl
add
add
lahf
sbb
test
dec
adc
aam
jae
cmp
repnz
call
fs
jne
mov
je
fcompl
mov
arpl
jns
pop
ret
scas
inc
sub
dec
cwtl
mov
fildl
inc
in
in
push
jmp
or
je
lret
clc
loop
dec
mov
sub
pusha
leave
call
cmp
dec
lds
enter
out
mov
into
repz
jge
pop
mov
pushf
add
cmp
ss
inc
call
jle
xchg
clc
sbb
sbb
test
jno
movsb
stc
add
aam
cmp
pop
cwtl
push
js
adc
inc
imul
push
ficoms
cltd
push
push
inc
adc
ror
cwtl
les
in
xchg
iret
and
pop
mov
add
sub
cld
mov
mov
push
lea
xchg
arpl
cmp
out
dec
pop
inc
mov
or
cmp
iret
xchg
add
push
scas
in
daa
cmpsb
outsb
outsl
shl
pop
stos
xor
pop
imull
mov
movsb
fildl
sub
push
or
xlat
jmp
cmp
jae
int3
xlat
pop
sbbl
or
lock
ret
push
add
cmp
in
xchg
add
pop
cmpsl
ljmp
inc
daa
jmp
pop
pop
jne
xchg
mov
jbe
popa
ss
ja
shlb
adc
sbb
and
in
fildl
inc
addr16
lcall
cld
rclb
hlt
mov
outsb
sbb
push
ret
lret
pusha
mov
gs
test
jp
push
jge
xchg
or
movsl
mov
sub
mov
xor
push
ret
aas
sbb
xchg
pushf
mov
jo
mov
movsb
or
fisttpl
mov
stos
test
icebp
add
jo
out
ds
mov
test
add
adc
adc
mov
mov
out
into
fwait
lea
test
xor
push
add
cwtl
or
ja
sbb
fcoml
push
push
in
dec
cli
jg
dec
sub
mov
mov
pop
into
dec
push
sti
xchg
pop
mov
es
mov
aaa
sub
inc
xchg
fs
and
stc
scas
lock
scas
pusha
pop
inc
inc
shlb
sub
lods
pusha
add
sub
sub
rclb
pop
xor
rorb
movsb
pop
mov
mov
mov
dec
mov
dec
aam
cmpsb
mov
ja
mov
jae
ret
inc
cmpsl
fcoms
loop
jnp
push
jge
adc
and
dec
dec
and
xor
lock
push
stos
int
mov
dec
rol
jno
xcrypt-ecb
cmpsl
mov
call
daa
mov
adc
jne
jne
insl
sti
mov
ss
scas
ljmp
push
adc
cmp
mov
jbe
lret
stc
inc
fcmovnb
jne
or
xchg
xorl
dec
out
gs
js
mov
xor
in
jmp
iret
and
lret
repnz
repnz
sbbl
add
out
fstps
push
xchg
mov
imul
xor
sub
icebp
jno
add
push
out
ret
pushf
xor
sub
adc
ja
sbb
aas
push
int
xlat
sub
lods
aaa
push
sahf
add
ds
pop
out
outsl
ss
lods
mov
cmp
popl
cli
shll
or
mov
ja
mov
mov
mov
leave
scas
pushf
xor
cld
add
es
mov
js
std
arpl
inc
fcoms
daa
mov
mov
mov
dec
mov
add
rcll
and
ficomps
jnp
shl
sub
jnp
insb
lock
stos
aam
jno
ret
push
dec
jne
xchg
jge
test
movb
in
push
push
mulb
loope
xchg
or
or
push
cli
lret
lcall
enter
mov
cmp
push
and
test
loop
inc
call
add
icebp
lret
adc
mov
aam
stc
xchg
enter
enter
in
sti
lea
imul
lods
pop
sahf
call
jae
adc
jge
jecxz
dec
into
mov
orl
and
cmc
pop
jnp
add
mov
movsl
fnstcw
xchg
test
push
or
outsl
insb
xchg
and
je
lods
mov
push
into
cmpsl
lods
dec
popa
sub
jne
cltd
and
shlb
imul
lret
test
imul
test
xchg
stos
xchg
cmp
ss
scas
icebp
inc
fistps
mov
sub
insb
push
adc
pop
sbb
jl
loopne
mov
out
push
mov
mov
stos
dec
mov
in
cmpsl
imul
sbb
add
repz
fidivl
jmp
or
inc
shlb
dec
jmp
inc
sbb
popa
pop
add
cmc
pop
test
out
movsl
mov
mov
mov
dec
cs
pop
jno
mov
xchg
nop
mov
jmp
movsb
dec
dec
jns
jle
cmpsb
adc
ljmp
scas
sti
xchg
adc
xchg
shr
mov
lret
fwait
pop
in
imul
lahf
pop
xchg
xor
call
daa
mov
push
fsts
lds
es
in
iret
repnz
adc
cmc
mov
fwait
addr16
push
dec
shlb
fldenv
or
or
inc
test
mov
ret
and
sahf
inc
sub
in
mov
nop
lods
lcall
fidivrs
dec
add
add
push
test
mov
add
lret
inc
jbe
and
push
fwait
jns
test
mov
mov
sub
mov
sbb
push
and
mov
rolb
jmp
enter
loope
cli
push
into
sub
push
loopne
xchg
popa
ret
fadds
outsl
popa
mov
jg
scas
lcall
stos
xchg
pop
in
push
sahf
inc
cli
mov
subl
cmp
aad
sahf
scas
repnz
add
adc
or
sbbb
cs
in
pop
mov
shrl
push
mov
lock
fwait
xor
scas
out
gs
push
mov
cmp
jns
mov
call
pop
ja
jbe
push
fs
std
pop
icebp
test
bound
out
cmp
dec
movsb
mov
xchg
mov
lret
ds
notl
lock
arpl
lods
sarl
cmp
adc
cmpsl
jl
lcall
mov
xor
fisubrl
pop
iret
xor
mov
fisubl
out
lods
pop
inc
pop
or
jbe
mov
fmul
xor
fdivrp
ja
aad
outsb
in
or
jg
add
stos
push
xchg
mov
nop
jns
imul
test
es
pop
mov
mov
add
add
pop
mov
jns
inc
out
out
aad
mov
xor
fstl
mov
inc
add
mulb
f2xm1
pop
push
xor
pop
adcb
inc
adc
pop
push
out
cmp
out
pushf
jno
mov
jno
or
les
repnz
and
mov
imul
aam
test
add
ret
mov
dec
and
adc
cmp
cmp
inc
test
mov
mov
sbb
fists
lahf
add
pop
gs
clc
pop
shll
cli
pushf
xlat
pop
ljmp
movl
pop
inc
mov
shr
lods
mov
fistpll
scas
jg
decl
stos
aad
mov
cmp
stc
jle
int
mov
pop
shlb
test
push
jp
repz
data16
jns
jecxz
xchg
orl
js
icebp
add
call
mov
loope
push
in
cmp
jge
pop
mov
push
sub
mov
inc
movsb
std
adc
std
cmp
mov
or
movsl
movsl
sar
lret
sbb
ljmp
adc
incl
xlat
jmp
stos
xor
sbb
stos
xor
lods
gs
lods
in
cmpsb
jo
cs
in
aas
js
fs
mov
ret
jmp
test
adc
loope
mov
pop
dec
ljmp
daa
jno
dec
std
shld
sub
jle
lock
inc
scas
mov
fsincos
push
ffreep
or
sbb
add
ficomps
loop
lahf
xor
xchg
fdivrp
inc
rorl
mov
inc
in
cmp
mov
push
inc
jmp
aam
cmp
dec
out
mov
jg
push
jo
and
dec
call
or
punpckhbw
xchg
imul
sbb
inc
pop
mov
test
iret
dec
mov
and
int
iret
les
andb
mov
sbb
pop
clc
xor
scas
stos
mov
pushf
or
cmpsl
imul
leave
cmp
jae
aas
and
mov
cmpsl
sub
pusha
jp
inc
inc
movsb
addl
mov
add
sti
cli
mov
pop
pop
dec
test
sbb
lods
inc
mov
incb
hlt
sbb
push
push
cs
mov
xor
test
inc
jne
shlb
xchg
cmpl
add
cmc
cmp
sbb
push
faddl
adcb
mov
dec
xchg
hlt
je
test
push
xchg
inc
or
iret
loop
cs
and
inc
mov
push
movsl
jbe
push
jno
stos
sbb
scas
arpl
scas
mov
lods
jle
icebp
add
sbb
xor
sub
or
or
lods
dec
mov
push
xor
idivb
jbe
xchg
push
add
push
mov
xor
int
ss
fldenv
cmp
mov
mov
mov
testb
outsl
jbe
jne
add
movsl
mov
push
mov
mov
adc
sbb
cmp
movsl
mov
mov
sbbl
dec
sub
dec
je
test
mov
add
dec
scas
mov
xor
mov
dec
sti
aad
imul
and
test
aad
adc
sub
popf
fistps
aaa
and
call
std
in
aas
pusha
cmp
outsb
arpl
idivl
mov
std
jno
pop
jne
add
jbe
add
inc
int3
adc
nop
pop
inc
js
and
or
or
fimuls
and
cs
imul
push
stos
aad
aaa
mov
add
adc
lcall
pop
cmc
jmp
dec
add
pop
iret
pusha
push
in
mov
xlat
xchg
push
lahf
unpckhps
lcall
test
fildl
pusha
dec
push
sub
pushf
je
pop
add
test
test
pop
test
xchg
sbb
jle
sub
cmp
sbb
and
test
pop
stos
in
ret
jns
ja
orb
les
fisubrl
lds
add
pop
lods
mov
jmp
imul
and
cmp
mov
mov
or
xor
mov
notb
imulb
sbb
xchg
repnz
lcall
movsl
shll
dec
and
clc
shrd
jb
push
adc
stc
adc
fcomps
or
sti
inc
push
xchg
mov
adc
jecxz
shll
cmp
add
arpl
repnz
lock
jb
enter
mov
jns
sahf
adc
mov
sub
nop
aas
inc
bound
inc
subb
mov
mov
push
leave
js
les
arpl
sub
loope
xchg
xchg
sbb
repnz
cltd
xchg
cmp
push
gs
push
push
push
mov
leave
jae
fdivrp
lret
cmp
cmp
mov
notl
cmp
mov
pop
popa
inc
or
int3
repz
cld
jno
cmp
or
das
sbb
mov
pop
jns
icebp
fcomps
das
inc
mov
aam
subl
mov
and
jo
and
cmp
mov
mov
push
adc
xor
es
push
out
addr16
sub
cwtl
mov
cmc
push
adc
fcomps
cmp
sbb
xor
inc
mov
xor
sub
adc
out
ror
and
mov
call
test
mov
inc
push
dec
xor
mov
mov
push
xor
xchg
inc
call
and
das
insl
adc
push
enter
xor
out
addr16
fadds
pop
hlt
dec
aas
les
push
add
js
pop
mov
les
daa
push
xchg
inc
mov
and
jg
push
sub
push
iret
imul
mov
xlat
cmp
cli
lea
ljmp
mov
adc
dec
xchg
jbe
repz
mov
bound
scas
in
xor
dec
lcall
lcall
into
shlw
dec
and
in
mov
pop
lods
dec
fiaddl
or
and
fs
dec
orb
xlat
push
popa
pop
cvtpi2ps
mov
rcll
dec
mov
lds
outsb
mov
mov
xchg
xchg
movsb
in
ds
negl
sub
xchg
dec
stos
out
cmc
inc
push
lcall
push
into
mov
movsb
dec
xor
jl
xor
nop
adc
mov
dec
inc
test
cltd
leave
jo
ljmp
and
pop
jp
inc
arpl
sbb
in
push
and
inc
or
fsts
add
lods
shr
std
in
rcrb
and
ret
mov
rcl
push
add
les
test
fcomp
out
pop
aas
js
test
sub
hlt
sub
and
loop
pop
and
arpl
cli
popa
mov
test
adc
les
dec
fildl
aaa
out
daa
nop
lahf
lock
jns
es
mov
fdivrl
cwtl
incb
add
inc
das
or
sub
das
or
jmp
orb
pop
mov
pop
rclb
outsl
cmp
sbb
jo
mov
dec
ret
xlat
or
mov
aas
fistpl
dec
add
adc
sub
sub
loope
dec
sub
xor
movsl
out
cmp
mov
pop
int
in
scas
testb
mov
push
mov
and
xlat
imul
push
mov
jle
adc
mov
xchg
stos
cmp
jbe
mov
xchg
fistpl
inc
mov
cmp
clc
out
mov
xchg
sbbl
arpl
xchg
pushf
push
mov
or
rorb
rorl
in
and
lods
out
lods
fwait
mov
mov
jge
xor
stos
shr
mov
popf
adcb
mov
jns
xchg
jmp
xchg
mov
scas
push
xlat
cld
xchg
imul
in
popa
jg
or
cmp
jno
lahf
xchg
roll
inc
xor
dec
cmp
jbe
call
push
or
enter
das
adc
cmp
jge
jl
and
popf
sub
push
mov
call
pop
lret
out
iret
out
push
add
and
mov
pop
mov
pusha
aas
inc
out
jl
add
unpcklps
push
mov
jg
sub
cld
cmp
mov
xchg
inc
fsubl
sub
cmp
jnp
sbb
jno
in
push
inc
push
lods
jg
sub
lahf
jg
mov
fnsave
adc
pop
loopne
xchg
xor
adc
inc
sub
add
lcall
pop
add
movsb
pop
sub
rorb
sub
sti
xchg
mov
mov
fnsave
inc
stos
xchg
aaa
lods
sub
lahf
jnp
fisubrs
xchg
add
mov
in
push
cmp
xchg
pusha
enter
mov
iret
inc
mov
push
je
jl
insl
sub
jb
sub
adc
adc
adc
and
cmovle
leave
call
fnstsw
mov
notb
push
loop
add
jmp
stos
int
jg,pt
shrd
xlat
aas
cmp
out
in
push
sub
clc
xchg
cmpsl
mov
xchg
cmp
mov
int3
shll
pop
cld
jp
mov
mov
cmpb
jbe
mov
cmc
ret
or
xchg
ss
lods
fisubl
jl
insb
inc
inc
jbe
mov
lock
pop
js
lock
jg
ljmp
imul
push
xchg
test
adcb
mov
sti
in
cmp
repnz
xor
add
cmp
or
push
lods
push
and
mov
bound
mov
ljmp
dec
jbe
mov
movsl
xchg
mov
repz
adc
pop
add
mov
push
test
pop
icebp
clc
fsubl
add
orb
adc
sbb
out
test
or
pop
xor
lret
movsb
loop
test
lret
add
outsb
dec
xchg
nop
mov
in
sub
enter
add
scas
pop
add
xor
and
mov
sub
aaa
mov
loope
mov
sub
pop
aaa
test
inc
push
imul
push
xchg
mov
icebp
sbb
and
xlat
aam
inc
icebp
and
mov
popf
in
sbb
aaa
mov
inc
xor
inc
mov
mov
je,pn
fwait
dec
fxch
mov
ret
cld
scas
test
push
cld
out
dec
or
inc
inc
jl
lcall
and
xchg
cmp
mov
out
xor
inc
add
push
ja
adc
test
dec
dec
outsb
xchg
popf
das
jno
cmp
pop
lea
in
push
push
stc
ds
aaa
ret
fwait
push
push
push
ja
in
jo
shl
lret
jle
stos
out
adc
cmpsb
inc
imul
mov
xchg
pop
add
xchg
mov
stos
arpl
repz
sub
mov
into
dec
cli
and
imul
inc
sbb
dec
sbb
fnstcw
bound
xor
add
cmc
scas
loop
sbb
inc
arpl
cld
js
pop
cmp
dec
movsl
fs
ret
jne
lock
dec
mov
outsb
cmpsb
pop
adc
push
ljmp
inc
mov
sub
push
insb
mov
ljmp
push
jge
sti
mov
cltd
or
loope
fwait
out
cs
push
mov
jb
mov
mov
sbb
out
shlb
mov
sub
xchg
or
aam
xchg
sub
pop
rolb
lret
shll
stos
dec
dec
lcall
mov
mov
adc
inc
arpl
and
imul
xor
mov
fwait
xor
ret
mov
mov
jmp
out
cmp
sti
pop
out
jb
lahf
xchg
jg
xchg
add
xorl
pop
out
ret
shr
lahf
iret
mov
xchg
add
xchg
aaa
mov
hlt
add
lcall
dec
repnz
rorb
jmp
push
fnstsw
nop
or
dec
pop
pop
dec
jle
gs
pop
ja
inc
xchg
in
ror
and
inc
pusha
jae
add
mov
cmp
test
outsl
xchg
imul
pop
cmp
add
hlt
sarb
les
pop
inc
or
lea
jg
shlb
mov
repz
fs
push
xchg
sub
xchg
sbb
push
hlt
dec
out
and
xor
fs
lahf
pop
scas
in
in
add
sbb
inc
add
push
mov
cmc
sti
ret
jle
push
movsb
stc
sti
nop
dec
jns
pop
out
xor
cmp
jmp
imul
adc
je
xor
cli
aam
in
adc
test
sti
roll
and
pop
ret
movsb
icebp
sbb
push
lea
cmp
jp
mov
outsb
scas
ficoms
adc
push
mov
fwait
lret
sub
pop
and
lret
popf
add
gs
mov
ret
mov
push
xor
stc
or
test
pop
mov
mov
imull
xchg
or
jecxz
pop
xchg
dec
lock
and
outsl
pop
test
and
pop
jmp
jns
and
jg
ja
in
xchg
flds
repnz
xor
ja
outsl
sti
rcrl
sub
sahf
in
ficomps
cli
test
fwait
loop,pn
imul
jno
out
adc
jno
adc
pop
int3
xor
fwait
add
arpl
jle
imul
lock
mov
jnp
fs
pop
jmp
or
scas
or
jge
sbb
mov
xor
mov
outsl
jno
cmp
iret
push
stos
jmp
testl
test
pop
xor
jmp
lock
jge
popf
aad
lods
fcmove
jle
das
ds
pop
cs
and
popa
sbb
out
pop
dec
out
nop
push
and
cwtl
lcall
mov
pop
inc
mov
cmpsb
dec
mov
les
adc
data16
out
cmc
mov
test
mull
cmp
add
pop
xchg
addr16
clc
mov
jecxz
not
xor
pop
in
xlat
cwtl
ljmp
cmpsl
pop
and
jne
mov
jge
lahf
call
hlt
daa
jne
cmpb
insl
clc
push
inc
pop
or
xchg
sub
cmpsb
sahf
pop
sub
mov
and
adc
push
or
jbe
add
icebp
mov
push
pusha
pop
nop
into
or
jmp
adc
inc
cwtl
lcall
fnstsw
pop
inc
fs
je
jecxz
and
and
and
scas
fsubrl
movsl
sub
mov
mov
lret
xchg
scas
mov
jecxz
sub
xchg
test
repz
pop
repz
pushw
mov
ja
pop
imul
cmp
add
pop
or
stos
jp
popa
pop
lret
mov
int3
fldt
push
and
pusha
inc
arpl
aad
mov
xchg
ret
mov
scas
fcomp
mov
xlat
pop
mov
aas
sbb
rol
stos
mov
jo
movsl
aas
cltd
out
xchg
ss
dec
jo
cs
cltd
scas
call
xor
addr16
sahf
rcrb
int
nop
fisubrl
cmp
popa
aam
mov
pop
loop
xorb
sti
xlat
push
push
add
mov
stos
clc
xor
push
fdivrl
pop
inc
stos
sbbb
cmpsl
in
xor
add
push
fsubl
jle,pt
xchg
cmp
gs
cmp
add
add
jo
xor
xchg
test
mov
sbb
dec
jecxz
out
jnp
mov
and
fsts
xor
jno
call
or
or
pop
jp
repnz
fistpll
pop
inc
jp
negl
sbb
sbb
lock
or
mov
xchg
ja
or
repnz
xor
fdivs
fstps
adc
sub
cmc
shll
repz
mov
push
cmp
popa
mov
pop
shl
jo
jno
push
sub
add
adc
mov
imul
jne
in
lds
fs
std
adc
dec
xchg
pop
adc
jg
sbb
cltd
inc
imul
push
sbb
jae
and
lea
andl
test
into
fucomip
and
fldlg2
xor
and
aam
scas
xchg
jo
sbb
rcl
adc
fcomip
cmp
mov
add
sbb
or
ret
mov
pop
fdivs
xchg
andl
ret
lods
pop
push
cmp
clc
call
aam
push
addr16
enter
inc
js
out
insb
pushf
gs
pusha
cmpsl
mov
mov
ret
xor
loopne
outsl
push
cwtl
and
dec
fs
rclb
fcompl
mov
daa
mov
mov
movsb
push
bnd
pop
cmp
mov
add
mov
lds
mov
inc
stos
mov
aaa
mov
xor
mov
cld
cwtl
pop
jbe
mov
test
inc
add
xchg
mov
dec
insl
cmpsl
xor
daa
add
jo
sub
sbb
push
xor
mov
jno
jmp
xlat
adc
pop
xor
mov
xor
mov
ret
shlb
add
dec
inc
out
les
and
scas
insb
inc
and
cmp
push
push
cli
inc
dec
aas
js
stc
int3
rcr
imul
push
mov
cmpl
rolb
push
dec
push
mov
pop
adc
lds
pushf
mov
mov
dec
mov
dec
cwtl
sbb
add
mov
out
je
or
add
jb
cmp
push
out
loop
push
lahf
push
xchg
push
sahf
mov
xor
push
and
pop
pop
xchg
push
xchg
jnp
mov
out
fnstcw
lea
and
insl
test
push
sbb
jns
jp
cs
push
imul
mov
jge
popf
mov
mov
mov
stos
fstpl
fisubl
std
pop
pop
outsb
test
push
movsb
aaa
or
je
mov
or
test
and
sbb
xchg
jp
cmpsb
iret
mov
flds
stc
xchg
pop
jg
xchg
rcr
stos
mov
and
push
in
daa
ret
cmp
pop
inc
in
popa
pop
xor
or
dec
and
nop
fcoml
popf
dec
pop
push
xor
pop
icebp
pusha
sbb
ret
inc
lahf
inc
jle
mov
push
xchg
adc
es
aaa
mov
adc
and
mov
inc
cmpsl
ret
push
cmp
icebp
xor
repz
mov
jo
shrb
ret
xchg
in
orb
xchg
shrb
inc
hlt
jecxz
out
icebp
cmpsl
aas
sbb
xchg
dec
cmpsl
ret
jb
mov
jae
mov
and
test
outsb
push
or
jno
sahf
or
shll
jg
cli
inc
xchg
mov
sbb
xor
jno
push
mov
sbb
aad
add
out
jae
lahf
ja
jbe
mov
dec
stc
pop
pusha
push
push
cmp
inc
sarb
push
sbb
push
fisttpll
dec
or
rcll
jns
xor
cmp
push
xchg
js
add
mov
push
cltd
mov
pop
sahf
cmpsl
and
sub
test
stos
out
push
mov
test
sbb
mov
inc
nop
mov
pop
outsl
movb
cltd
xor
mov
ds
movsl
movsb
jns
mov
jle
call
repnz
in
rcll
movsb
or
mov
sarl
insl
sbb
xor
scas
les
test
jle
fisubrl
imul
sti
inc
and
jo
call
adc
add
outsb
cmp
inc
push
dec
shlb
sbb
mov
hlt
fstl
adc
in
aam
test
jns
div
int
mov
aad
xor
stos
mov
mov
pop
ljmp
mov
inc
mov
outsl
pushl
gs
icebp
add
xchg
xor
lcall
scas
mov
negb
cmp
repnz
ficomps
jbe
idivb
jecxz
getsec
cmc
mov
test
lea
sbb
inc
in
fidivl
mov
sbb
fisubrl
shlb
cs
stos
scas
or
cmpsl
pop
arpl
cmp
dec
mov
or
cmp
int3
scas
sub
adc
mov
popa
lcall
ljmp
mov
xchg
xchg
cmp
cwtl
jmp
cmpl
push
ret
xchg
inc
inc
into
loopne
dec
imul
push
mov
mov
mov
push
jo
mov
es
imul
lret
test
test
mov
jno
add
mov
repnz
adc
out
fsub
pop
nop
es
pop
inc
dec
push
push
cld
shrb
pop
aas
test
test
or
mov
xor
dec
incb
pop
pop
mov
inc
push
inc
call
data16
pop
cmpsl
rcrl
sub
shr
dec
mov
xor
xchg
xor
xor
ret
test
idivl
xchg
rcll
jae
pushf
add
out
or
mov
fcompl
ss
mov
ret
insb
into
aas
inc
shrl
outsb
jl
ljmp
std
gs
jp
repnz
xor
mov
xor
mov
pop
inc
arpl
push
test
in
pop
adc
lcall
jo
arpl
leave
cltd
test
aad
mov
mov
data16
stos
lock
sarb
sbb
hlt
ss
loop
push
movsl
gs
add
mov
adc
cli
dec
pop
xorb
push
fnstenv
cmpsl
mov
fnstcw
mov
mov
sbb
and
fstpl
xchg
jnp
loopne
lahf
mov
lods
jmp
out
jecxz
sbb
cwtl
ds
and
ret
mov
fstpt
imul
cltd
out
imul
and
push
out
xchg
dec
cld
std
or
jno
xor
call
loop
mov
mov
les
daa
pop
pop
or
subb
sbb
fnstcw
or
ja
ret
imul
in
add
adc
roll
cmp
mov
pop
xchg
mov
add
int
mov
or
test
dec
mov
test
ds
cmpsb
fsubs
sub
mov
sub
inc
add
dec
cmovns
ficompl
push
mov
or
int3
iret
push
pushf
mov
mov
sbb
arpl
ja
sbb
cmpsb
aaa
push
fimuls
and
in
aam
pop
cmp
lods
xchg
sahf
or
cmp
fnstcw
insb
clc
cmpsl
xchg
stc
mov
movsb
cmp
sbb
fcmovne
call
mov
jo
out
out
je
cmc
cs
inc
mov
loope
aad
sub
xor
xchg
outsb
cwtl
jle
mov
in
notb
int
xchg
fldt
lret
adc
aad
ret
xchg
mov
mov
movsl
fcmove
rorb
das
lock
out
insl
lret
pop
ficoml
add
test
dec
inc
test
cmp
jg
xchg
aad
dec
adc
and
dec
ret
xchg
std
std
and
out
iret
hlt
loop
fistpll
popa
adcl
mov
push
mov
jo
lcall
rorl
dec
jae
inc
pop
jp
in
out
adc
pop
lock
lret
iret
stos
les
jmp
pop
pop
mov
push
jmp
cli
das
orl
sbb
jns
jb
pushl
mov
fs
jns
addr16
cmp
inc
sub
pop
fsts
testb
and
mov
xor
lret
jl
lods
and
xor
popa
dec
das
arpl
js
mov
and
mov
xor
pop
hlt
out
fdivp
sbb
mov
in
and
test
adc
xor
xor
push
sub
lods
cwtl
mov
daa
sbb
leave
inc
ret
pusha
cmp
xchg
stos
and
loop
loopne
add
sbb
lcall
sbb
dec
mov
xchg
pop
pop
cmp
push
mov
inc
xor
cli
bound
pop
cmc
outsb
enter
hlt
aad
push
movsb
arpl
insb
bound
adc
adc
shlb
fwait
mov
dec
xchg
jb
mov
out
mov
imul
test
jne
or
aaa
neg
cltd
fdivp
sarb
inc
leave
roll
testl
incl
jno
divb
sub
mov
sub
sbb
jne
mov
test
xlat
pop
aad
push
in
mov
adc
xchg
cmp
out
mov
mov
dec
addl
aam
push
push
lcall
sbb
ret
pop
shrb
xor
mov
push
stos
push
jns
dec
xrelease
flds
mov
popf
lods
adc
ja
xor
pop
sub
loop
dec
hlt
cmp
jbe
inc
orb
roll
jbe
mov
gs
lods
push
add
js
ss
fwait
inc
cmp
das
fldl
or
mov
cmp
mov
mov
fnstcw
addr16
jne
rorb
cmpsb
mov
push
lods
add
sub
cmp
and
ljmp
mov
dec
aas
rol
add
jg
pop
fwait
mov
scas
outsb
or
fldenv
push
mov
fdivrp
aad
aad
fs
xor
jecxz
in
xchg
cmp
popa
push
jge
mov
repz
xchg
xchg
std
jg
dec
sbb
cmp
sbb
lds
out
gs
add
out
xchg
jmp
frstor
jl
rcrl
mov
imul
jle
mov
inc
inc
call
dec
inc
xabort
ja
hlt
popf
adc
out
in
inc
mov
imul
scas
mov
shl
dec
xchg
repz
jo
pop
mov
or
xchg
add
cmp
xor
ret
int
mov
inc
out
push
mov
push
repz
mov
aaa
rcll
mov
addb
push
cmp
insl
dec
dec
push
jp
dec
mov
mov
adc
xchg
jle
sub
out
fcmovnu
fbstp
cmpsl
and
sub
jge
mov
test
xchg
inc
test
and
cmc
int3
sub
cli
mov
cmp
into
rorl
push
xchg
into
out
stos
push
leave
std
out
jbe
push
pop
mov
scas
ja
mov
sub
lea
incl
stc
add
repz
jns
inc
xchg
cwtl
das
es
and
mov
ficompl
dec
call
outsl
das
pop
in
dec
push
push
es
adc
jnp
dec
mov
xor
fs
sbb
mov
dec
outsl
add
cmc
ficompl
xchg
lcall
ja
sbb
repnz
cmp
aaa
cmp
fidivrl
test
arpl
jg
cmp
idiv
push
add
cmpsb
fldenv
loop
das
cs
aam
aad
push
push
out
or
xor
jp
cld
aam
inc
stos
xor
or
cmp
inc
xchg
stos
jne
repz
jns
sbb
sarb
negb
dec
cmc
fmul
loope
mov
ja
pop
scas
jge
lods
sahf
out
popa
inc
mov
xchg
pushf
sti
lcall
xchg
jle
repnz
dec
imul
xchg
inc
xor
inc
lock
or
outsl
sahf
push
dec
xchg
push
push
mov
mov
cmpsl
or
std
xor
fwait
pushf
xchg
ds
mov
test
xchg
mov
adc
pushf
mov
pop
adc
fcoml
jle
mov
mov
inc
jle
in
and
in
cli
jno
pop
scas
mov
outsb
incb
push
fisttps
cmp
out
pop
push
jb
mov
clc
and
ss
or
sub
sti
push
mov
frstor
in
js
inc
xchg
jo
rclb
stc
imul
xchg
cs
hlt
pop
pop
sbb
jl
aad
pop
nop
cld
and
adc
inc
jnp
or
jne
xor
jbe
outsl
push
sub
push
xchg
cmpsb
jl
ret
gs
push
rcrb
push
lahf
dec
mov
mov
dec
cli
scas
stc
inc
inc
mov
test
xchg
ss
mov
mov
lcall
pop
jmp
mov
adc
pop
hlt
and
dec
test
inc
push
add
bnd
int
aam
sahf
fmull
xchg
divb
scas
popf
push
loop
les
jno,pt
outsb
call
sbb
add
push
push
sahf
push
pop
orb
sbbl
fsin
je
mov
je
or
lods
imul
dec
hlt
ss
jmp
out
xor
push
dec
and
mull
dec
data16
sti
inc
xchg
fnsave
mov
fldcw
push
insl
lods
xor
pop
mov
pushf
and
ja
or
cmp
stc
inc
imul
dec
xchg
movsl
sub
sub
fstps
fldl
push
outsl
lods
cmpsl
and
push
cmpl
inc
dec
push
mov
bound
xchg
lret
enter
jmp
push
mov
addl
mov
push
xor
dec
sti
enter
jp
or
mov
lods
stos
push
ds
insb
test
mov
das
sbb
jecxz
adc
cmp
sti
ret
mov
jge
jae
inc
lahf
int3
xchg
and
repz
shr
add
lds
pop
adc
mov
cmp
or
push
stos
push
sbb
movsl
lahf
add
cmpsb
push
inc
fwait
out
shll
xchg
into
xlat
shlb
sub
or
jb
lods
mov
xchg
xchg
aas
sbb
mov
cmc
jne
sbb
mov
mov
dec
or
jle
repz
scas
popa
outsl
cs
add
cmc
popw
es
je
jle
int3
mov
adc
lds
jnp
cmp
adc
int3
jnp
xchg
je
mov
les
cmp
data16
into
loope
cmp
cmpsl
mov
sbb
pop
add
and
sarb
dec
outsl
adc
dec
icebp
inc
adc
test
fisubrs
dec
inc
fcompl
sub
sahf
nop
jl
ret
lret
cmp
in
mov
loop
lahf
push
popf
pop
xchg
cmp
adc
mov
out
mov
jge
sbbl
adc
ja
es
jae
cmp
out
cmp
add
sub
add
add
fbstp
test
mov
in
push
mov
xor
push
or
jo
sub
neg
inc
xlat
addl
push
test
pop
scas
andb
cmp
sub
loopne
sub
ja
lods
adc
cwtl
fimuls
andb
push
std
add
imul
sbb
add
repz
push
ja
pop
cltd
jae
es
sbb
icebp
rcll
pop
or
xor
mov
inc
js
cmp
lds
inc
in
gs
aaa
fs
push
rcrb
add
pop
popf
push
or
lcall
cmp
mov
stos
push
jecxz
test
and
xchg
adc
jno
ljmp
inc
mov
cmpsb
popf
out
pop
bound
or
rcrl
adc
out
xchg
insb
cs
push
dec
fucomi
mov
jo
inc
pop
xchg
jo
and
adc
adc
lds
sbb
mov
notb
clc
xor
out
push
out
mov
jmp
push
jge
sbb
repz
mov
scas
inc
push
pop
in
push
push
xor
push
sbb
push
lds
aad
xchg
mov
inc
xchg
add
lds
and
ds
insb
movsb
xchg
cmc
out
pop
xchg
divl
out
mov
into
imul
popa
leave
xchg
jno
or
push
or
lret
and
icebp
add
mov
dec
xchg
imul
pop
cmpb
mov
dec
loop
xlat
cmp
repz
add
in
push
lds
std
scas
push
inc
pop
xor
lea
push
xor
mov
dec
std
push
loopne
and
cmp
popf
stos
jnp
or
cmpsl
sti
es
lock
sbbb
sbb
test
fisttpll
dec
ds
pop
cmp
mov
outsb
xlat
and
or
cli
out
mov
push
clc
push
inc
push
jae
aam
xchg
int3
fisubrl
dec
imul
cltd
pop
push
dec
outsl
popa
leave
in
xchg
and
cmc
jp
arpl
sahf
dec
imul
jo
push
push
xchg
dec
out
xor
xchg
mov
inc
rcll
lods
mov
cmpsb
sbbl
mov
jno
cmpl
mov
or
sbb
pop
xchg
cwtl
add
in
mov
and
xchg
jbe
jo
fadds
fs
ret
cmp
fsts
xchg
frstor
bound
mov
sub
gs
pop
push
pop
mov
jbe
inc
mov
add
dec
adc
mov
mov
mov
mov
pop
pop
dec
cmc
insb
mov
mov
xchg
lods
mov
xlat
and
inc
pusha
add
fnstcw
mov
jmp
add
and
lock
mov
pusha
xchg
nop
push
pop
cmp
rorb
in
stos
les
jecxz
mov
imull
jg
out
push
or
inc
adc
and
sbb
inc
cmp
subb
fiaddl
xor
pop
fldl
cmpb
mov
xchg
js
sub
mov
test
out
pusha
frndint
mov
test
js
cli
aam
scas
jmp
push
fistl
aas
fldl
jmp
mov
xchg
dec
xorb
xor
scas
not
addr16
ja
sbb
fiadds
stc
inc
and
adc
and
stos
fstpt
mov
mov
fcoms
dec
aad
jno
scas
dec
bnd
in
xchg
mov
test
repnz
out
add
push
jmp
aam
sahf
jne
das
test
rcrb
lret
adcl
pop
or
or
fists
movsb
hlt
jge
xor
pop
rolb
xor
loopne
mov
sub
mov
jmp
adc
xor
stos
pop
int3
int
push
daa
mov
cmp
shl
mov
ja
mov
cmp
adc
inc
pop
cmp
cmpsl
lahf
dec
cli
or
jbe
pop
out
xlat
dec
js
xchg
fsubs
addr16
clc
push
nop
cwtl
stc
fmulp
push
inc
adc
imul
cli
in
xlat
hlt
or
rclb
fwait
add
cli
sbb
shrl
jmp
jg
repz
popf
jecxz
cmpb
pop
enter
and
or
out
cltd
mov
test
js
loopne
sbb
mov
sub
dec
hlt
inc
push
ret
dec
mov
mov
test
add
das
sub
es
sbb
fwait
sub
test
jmp
iret
adc
push
cmpsl
xchg
fstps
or
fld
call
adc
mov
jl
test
rolb
out
dec
xchg
out
push
out
pop
fcmovnbe
pop
popa
sahf
mov
scas
hlt
pop
adc
xor
add
dec
sahf
add
cmp
int3
mov
in
jl
test
dec
push
daa
inc
mov
pop
jecxz
and
ds
aam
xchg
fmull
push
fcoms
out
orb
mov
addr16
fdivrl
aaa
dec
test
pop
xchg
dec
ljmp
cli
test
movsb
outsb
aaa
sub
add
sti
sbb
xor
pop
les
ja
and
mov
dec
fnsetpm(287
cmpsb
and
jns
mov
into
outsl
sbb
leave
mov
and
je
in
ret
insl
mov
adc
dec
xor
cmovb
sbb
arpl
xor
mov
cld
mov
scas
sahf
iret
cwtl
and
lods
pop
push
pop
repnz
push
ljmp
into
add
dec
push
jbe
cmp
and
sub
data16
dec
xor
mov
pop
das
dec
adc
sbb
push
mov
pop
push
pop
mov
push
adc
cltd
pop
mov
lods
inc
rcrb
mov
xchg
fmul
pop
lock
pop
test
cld
or
mov
div
mov
mov
jb
sub
bswap
push
faddl
cli
lods
mov
adc
xchg
pushf
clc
mov
jle
shll
jnp
adc
inc
daa
xchg
repz
push
push
imul
dec
mov
and
jo
int3
dec
orl
jp
lcall
shll
aas
ficoml
cmp
aam
stc
test
leave
mov
jl
dec
inc
sbb
shlb
and
loope
sub
stc
movsb
cld
push
jnp
cmpsl
xchg
jne
sbb
out
add
insb
pop
je
cmpsl
dec
nop
cmp
dec
add
clc
stos
fwait
pop
push
addr16
out
adc
int3
cld
mov
enter
int
push
dec
je
std
adc
sub
rclb
and
jns
lds
sub
hlt
repz
bnd
or
loop
ret
dec
push
add
and
aas
test
pop
inc
sub
add
fs
repz
cmp
pop
fildl
scas
popa
daa
mov
mov
push
mov
mov
mov
push
xchg
pop
dec
mov
fildl
stos
inc
or
xchg
rcll
adcb
loope
ret
stc
imul
inc
loope
sub
or
jb
lret
loop
mov
inc
popa
mov
sub
sar
jno
cmpsl
testb
mov
jno
jmp
add
pop
cmp
dec
and
lret
pop
daa
cltd
pop
call
jne
imul
sub
imul
repnz
jp
and
addb
repz
or
mov
flds
addl
jb
mov
or
or
rorb
add
sub
insl
mov
add
aam
xor
inc
mov
adc
pushf
popf
aam
xor
fwait
scas
lea
xchg
aam
iret
jecxz
jmp
sti
leave
inc
movsl
je
jo
push
cld
std
and
stos
jne
ja
cmp
cmp
jp
or
das
out
icebp
ss
lock
mov
dec
insb
mov
jl
dec
roll
jmp
xlat
sbb
xchg
jnp
into
sbb
push
inc
pusha
inc
mov
sub
pop
inc
adc
insb
jp
ffreep
aas
push
addr16
pusha
pushf
sti
adc
mov
sbb
add
inc
jmp
pop
pop
clc
shlb
jne
jnp
or
ret
xor
in
ds
fs
fildl
jg
push
sub
sbb
clc
cmp
cmpsl
mov
jae
out
and
jb
or
aaa
aam
test
fcomps
or
sub
fwait
dec
xchg
ret
scas
mov
enter
xlat
in
ss
xchg
pusha
fisubrs
pop
mov
add
jo
add
arpl
mov
shll
cli
xchg
inc
xchg
loop
out
ss
lds
in
fistl
pop
shll
call
les
lahf
lahf
loope
sub
mov
cltd
dec
add
mov
add
cmp
jge
and
xor
jmp
lcall
inc
and
mov
aad
inc
push
and
jae
cmpsb
lods
iret
ss
mov
push
test
and
cmpsb
xlat
dec
hlt
dec
adc
clc
repz
xchg
mov
dec
push
push
mov
or
sub
xor
int
inc
fs
out
out
or
leave
fidivl
pop
dec
sbb
xor
repz
inc
sbb
ret
lahf
hlt
and
or
mov
popf
adc
and
scas
je
insl
int
xchg
mov
pusha
mov
push
lods
out
pop
dec
test
xchg
adc
and
lock
icebp
pop
enter
dec
push
fildll
popf
js
sbb
adc
sti
fildll
cmp
mov
push
jbe
lds
es
loop
mov
outsl
pop
in
sbb
ja
xchg
xchg
in
cld
ret
enter
mov
pusha
enter
mov
cmp
cmpsb
jmp
sub
inc
xor
dec
cwtl
adc
or
dec
aam
dec
cwtl
fwait
test
mov
add
and
addr16
iret
js
mov
add
inc
add
push
push
xchg
push
push
aam
aaa
jge
cmp
adc
mov
push
leave
mov
dec
jns
adc
lds
ret
int3
adc
loop
sbb
push
int
sbb
fcoms
insb
stos
add
aas
xor
or
pop
int
pusha
cltd
push
and
xlat
ljmp
mov
hlt
sbb
mov
out
mov
jb
mov
xchg
imul
adc
sbb
and
and
xor
xlat
fwait
push
push
hlt
mov
jmp
dec
data16
pop
aad
fisubs
test
stc
es
jp
jp
imul
fwait
ljmp
jno
out
or
adc
and
xchg
pop
daa
add
sarb
xchg
sub
mov
fld
inc
sbb
repz
add
cmp
int3
popf
fisubrl
jne
daa
xor
mov
or
leave
jecxz
inc
inc
xor
daa
adc
jne
hlt
or
pop
or
sbb
sub
cmc
jg
or
or
xlat
ret
add
xor
sti
imul
jle
testb
push
sub
cmpsb
jbe
daa
test
addb
cwtl
and
inc
or
xor
pop
clc
mov
jl
push
xchg
jecxz
fldl
mov
cmp
dec
inc
push
cmc
aad
int3
cmpb
hlt
repz
movsb
mov
fcmovne
data16
inc
int
push
mov
std
xchg
inc
repz
add
insl
xlat
enter
pop
fdivrs
bound
pop
jnp
enter
inc
fiaddl
mov
faddp
cmpsb
push
cli
xchg
sbb
out
pop
out
push
pop
adc
mov
mov
or
mov
push
fcmove
sbb
sub
sbb
sub
ficomps
cmpsb
jns
pop
and
mov
test
push
in
ret
jnp
inc
xchg
in
xor
xor
cmp
pop
push
das
les
jno
scas
inc
stos
imul
adc
inc
mov
das
lods
add
scas
push
call
sarb
mul
adc
repz
dec
sub
dec
out
inc
scas
dec
mov
aad
jge
xchg
or
out
jno
cmp
cmp
fidivrl
das
mov
nop
mov
push
and
mov
push
dec
push
arpl
ret
mov
leave
mov
dec
scas
push
cld
andb
mov
test
js
mov
jp
inc
cmc
call
fsubrs
lcall
cwtl
aaa
dec
jecxz
fisubrl
dec
push
jno
out
push
jne
and
sbbl
mov
pop
push
push
cmp
ret
xor
fdivrs
out
inc
lret
js
cmp
je
imul
mov
cmp
jge
or
jb
in
sub
enter
adc
xchg
lret
inc
mov
movsb
outsl
pcmpgtd
repz
leave
xchg
mov
or
sbb
pop
cmp
fwait
idivl
shr
mov
jno
popf
fbld
sbb
cwtl
dec
inc
jno
insl
add
lods
pop
cmpsl
test
call
ret
jns
pop
sbb
pop
andl
outsl
sbb
jns
push
lcall
sub
cmp
lahf
nop
sub
rol
dec
inc
rcr
add
inc
dec
mov
add
dec
mov
mov
push
cmovl
rcrb
pop
les
dec
add
xchg
push
lock
leave
cmp
xchg
imul
xchg
fs
fildll
sub
mov
mov
push
cltd
push
mov
jae
xchg
mov
pushf
pushf
arpl
push
shl
and
rcl
xor
and
pop
jnp
add
mov
stos
xor
mov
cmpsb
mov
push
jo
xchg
and
popf
xor
mov
lock
divl
xchg
xchg
ret
cmpsl
xchg
pop
test
dec
popw
movsb
jl
pop
popa
mov
jmp
or
xlat
stos
adc
test
dec
xor
cwtl
jo
inc
and
mov
test
push
les
andb
pusha
add
or
dec
leave
add
pop
sbb
add
inc
and
inc
lods
std
lea
popa
sub
cs
inc
dec
pushf
mov
out
inc
dec
push
lds
sahf
xchg
popa
mov
not
js
sub
xor
cs
adc
sbb
pop
daa
jecxz
out
rclb
out
sub
scas
fmull
andl
mulb
cmp
jg
push
push
shl
mov
es
or
or
pop
adc
test
sbb
mov
leave
fisubl
popa
dec
cmp
int
sub
lret
adc
adc
inc
mov
jbe
push
push
fwait
jl,pt
add
push
mov
into
push
cltd
movsl
xlat
dec
outsb
jmp
or
ret
mov
mov
xchg
lock
cmp
adc
icebp
pop
sbb
dec
jmp
dec
jbe
cmp
iret
pop
push
inc
iret
ds
out
sbb
mov
fisttpl
xor
das
loop
mov
ss
dec
mov
xor
push
stos
pop
aaa
lret
lahf
ret
imul
in
loope
aam
mov
jae
inc
inc
xor
out
cs
lahf
shl
add
cmc
lds
xor
imull
cmpsl
cs
pop
ljmp
jae
outsb
mov
pop
dec
mov
std
orl
movsb
jb
cmp
sbb
pop
movsb
pop
adc
push
pop
push
fdivrs
lods
incl
enter
mov
add
mov
fldt
mov
jmp
push
ds
pushl
lret
ja
lret
outsb
or
cmp
or
and
jmp
cwtl
js
sub
sarb
lret
sub
push
sbb
xor
jbe
in
bound
and
jmp
push
mov
test
insb
movsl
mov
insb
xchg
jmp
pushf
and
add
mov
pop
xchg
jnp
pop
enter
jo
jb
pop
ds
mov
dec
popf
cwtl
xor
mov
rclb
mov
filds
sub
mov
xchg
inc
push
mov
sbb
pop
or
call
jae
or
jmp
daa
fistl
std
cld
lcall
out
adc
std
clc
xchg
push
mov
sbb
into
and
mov
cmc
push
add
cmpsb
out
out
ljmp
mov
into
ljmp
fildl
jl
data16
mov
sub
rcll
push
lods
test
inc
call
fwait
mov
mov
adc
lcall
nop
inc
inc
adc
enter
mov
pop
push
int3
push
cmp
or
push
loop
decb
push
ret
ret
iret
mov
inc
out
jne
ret
imul
inc
sahf
add
sbb
lahf
fstps
adc
iret
ret
jp
jae
xchg
push
xlat
ja
xchg
fldenv
mov
adc
cmpsb
push
arpl
out
or
ret
or
lds
cs
in
xlat
sbb
xor
dec
sub
fiaddl
sub
insb
jecxz
cld
push
loop
xor
repnz
push
adc
inc
nop
lods
push
xor
popw
and
push
repz
dec
ds
aam
add
jns
sub
rcrl
or
ss
sbb
data16
fbstp
fiadds
pusha
cs
pop
pop
xorl
xchg
aam
or
push
in
lods
shlb
ret
pop
lahf
adc
mov
bound
and
mov
and
outsl
scas
pop
xchg
xor
jns
test
outsb
and
push
scas
lods
aas
mov
xor
xchg
xor
inc
adc
enter
add
mov
cmp
lret
rclb
pop
out
xchg
aas
inc
and
xor
push
dec
call
cwtl
or
adcl
xor
sub
jb
xor
pop
std
loope
jns
addb
lahf
loope
mov
gs
popf
xchg
cwtl
cmpsl
add
mov
mov
mov
in
insb
fldenv
adc
cli
stos
push
dec
sbb
icebp
je
fldz
arpl
nop
sbb
les
scas
negb
testl
icebp
push
pusha
adc
inc
stos
pop
cmpsb
dec
mov
jle
pop
inc
addr16
mov
lcall
xor
xchg
lds
sbb
loope
loopne
ds
movsl
hlt
jae
ret
pusha
outsl
mov
lods
pop
sbb
sub
mov
sub
and
mov
mov
mov
mov
inc
xlat
scas
adc
enter
insb
lods
mov
mov
flds
std
mov
add
xchg
and
outsb
jp
sub
scas
stos
mov
mov
mov
imul
xchg
sub
scas
adc
divl
cmp
js
orps
cmc
push
jns
mov
clc
mov
ret
cli
xchg
pop
adc
dec
xor
cmpsb
add
add
js
scas
and
int3
pushf
inc
adc
test
mov
leave
fidivl
loopne
aam
out
test
push
dec
mov
push
mov
jl
loop
repz
subb
inc
sarl
mov
jno
mov
push
addr16
test
in
insb
fs
ja
insb
in
adc
cmp
sbb
jecxz
imul
mul
fistpll
ss
clc
mov
add
imul
into
jb
xchg
out
mov
fnstsw
dec
js
mov
clc
int
sub
fcomps
jecxz
jae
addl
cmc
adc
mov
mov
lret
in
xchg
scas
addr16
fcompl
test
outsl
stos
cmp
push
iret
int3
rolb
lock
jne
adc
xor
xchg
xchg
and
mov
or
call
insl
pusha
jbe
adc
dec
mov
cmp
cld
pop
push
icebp
clc
andb
xor
push
jns
mov
loop
dec
outsb
inc
in
nop
stos
mov
pop
lret
aam
xchg
sbb
scas
addr16
imul
pusha
add
stos
lods
aad
sbb
inc
mov
ja
shl
inc
aaa
iret
repnz
push
scas
test
mull
ds
sbb
bound
inc
push
push
mov
pop
inc
or
and
test
xchg
and
push
lret
roll
or
adc
xchg
les
xor
mov
test
mov
cmp
pop
mov
ja
insb
hlt
mov
mov
push
sub
xchg
insb
jnp
inc
orb
mov
cmp
faddp
test
imul
sti
sub
inc
jno
xchg
pop
popa
push
sub
xchg
outsl
int
xchg
repz
adc
cmp
ret
and
popa
xchg
aad
pusha
mov
lret
fst
sbb
adc
mov
inc
lods
sbb
pop
lods
xchg
pushf
push
cltd
cmp
dec
mov
imul
push
outsb
push
lds
nop
inc
add
loop
mov
fbstp
or
fcoml
mov
bound
jne
adc
leave
cwtl
out
arpl
xchg
aaa
xor
imul
ret
fildl
jne
imul
cli
ret
cmc
leave
in
push
sbb
mov
add
sbb
mov
jb,pn
xor
sbb
or
cmp
aaa
add
shlb
repnz
lret
or
adc
cmpsl
sbb
xchg
sbb
mov
dec
mov
roll
movsb
mov
xchg
mov
and
push
mov
lret
sahf
dec
lret
xchg
iret
insb
fyl2x
or
pop
mov
sub
and
push
jl
mov
inc
ljmp
cmp
insb
arpl
mov
cmp
sbb
in
xchg
push
mov
pop
mov
cmp
sub
cmp
adc
xlat
and
adc
cwtl
pop
add
mov
fs
cli
xchg
dec
fwait
insb
xlat
test
test
cltd
push
and
or
jecxz
cmp
call
outsl
cmp
and
dec
sahf
add
sub
shll
jle
jmp
inc
into
jnp
push
dec
sbb
xlat
push
mov
rcll
shll
mov
lret
and
add
lods
mov
mov
xchg
pop
popf
xlat
xor
jb
repz
sub
sbb
push
aas
or
shr
arpl
fistl
testb
inc
icebp
sti
cmpb
pop
push
je
sub
out
add
add
mov
add
testb
andps
jl
mov
add
std
xchg
mov
imul
dec
mov
les
or
test
dec
clc
mov
loope
in
dec
lret
sbb
add
jl
out
test
lret
call
fimuls
pop
sarb
sarl
mov
popf
fcoms
mov
arpl
xchg
out
lahf
nop
sbb
fs
daa
xchg
mov
or
inc
pop
sahf
adc
dec
jg
xor
pop
rcll
clc
inc
inc
clc
mov
jns
lret
push
add
and
xlat
inc
loop
mov
or
mov
lods
repnz
cld
lds
insb
sub
andl
mov
pop
jmp
pop
mov
cld
jmp
push
call
imul
aam
sub
dec
mov
jmp
adc
xchg
mov
imul
pmuludq
outsb
adc
stos
pop
testb
mov
mov
ss
mov
sub
ja
inc
sbb
daa
xchg
mov
pcmpgtb
in
and
sub
push
and
mov
fldt
pop
leave
push
push
or
std
inc
popa
xor
pusha
inc
add
sbb
xrelease
ficomps
adc
xchg
pop
pop
jo
iret
mov
fwait
cmp
repnz
call
daa
jae
shlb
pusha
pushf
mov
and
cmp
lea
arpl
xchg
lods
mov
fdivs
pop
mov
dec
scas
enter
stc
je
out
xchg
push
mov
inc
cmc
lret
addr16
or
andl
movsb
sbb
jle
jbe
gs
stos
adc
add
cmp
rcrb
stos
test
xor
xor
scas
rcll
in
cmp
inc
into
inc
lcall
clc
aaa
cli
movsb
andl
xchg
addb
push
jbe
imul
movsl
sti
pop
sahf
repnz
pop
adc
jl
and
add
cmp
icebp
cmp
es
in
fs
scas
ret
les
sub
out
lock
push
cmp
push
adc
mov
sbb
bound
les
sahf
mov
jge
or
sub
push
addl
jg
inc
sub
mov
mov
stc
and
les
pop
data16
mov
or
bound
adcb
das
psraw
dec
loope
leave
lea
xchg
adc
aas
pusha
orb
adc
stos
dec
lret
ljmp
mov
icebp
push
xchg
fistpll
orl
incl
dec
pop
stos
mov
pop
mov
lret
jb
xlat
cmpl
sti
pop
push
adcl
inc
ror
or
mov
jl
shl
xor
lea
lahf
orl
sbb
xchg
pop
cmp
jns
imull
iret
lock
test
test
push
sub
and
or
fidivs
ljmp
inc
fnstenv
sub
sbb
idivb
repz
adc
sti
fmull
jo
mov
addr16
add
je
mov
dec
jle
mov
push
mov
decb
lret
or
mov
cwtl
test
cmc
or
imul
sub
adc
adc
movsl
add
mov
adc
out
hlt
clc
lret
rorl
es
xorl
xor
arpl
or
lods
test
xchg
inc
pop
pop
ljmp
aad
xchg
cs
aad
cli
sub
das
push
adc
aam
test
push
test
js
ja
dec
scas
loopne
xchg
scas
mov
sbb
sub
xchg
pop
cmp
rcll
mov
or
rcrl
xchg
mov
aad
mov
loope
pop
mov
sbb
add
xchg
ljmp
movsb
cld
cmp
jae
cmp
xchg
dec
int
subb
ja
mov
add
xor
inc
pop
out
inc
inc
xchg
add
lods
mov
jge
cwtl
ljmp
adc
divl
clc
leave
int
inc
jp
lret
loopne
mov
cmp
xchg
cmp
xchg
jne
mov
add
sub
shll
sbbl
lret
mov
test
cmpsb
rcl
scas
adc
inc
in
and
pop
sub
push
fwait
mov
ret
mov
push
pop
cmpsl
pop
pop
leave
inc
jmp
mov
xchg
and
sbb
xor
loopne
mov
and
cmp
mov
mov
adc
roll
insl
sarb
call
xchg
xchg
std
jae
mov
sbb
popa
xchg
jo
jg
and
push
sbb
or
xchg
inc
adc
cmpsl
int3
sbb
cwtl
fcomp
frstor
fadds
push
insl
test
sbb
test
pop
test
jmp
jmp
cmp
lret
add
sbb
jns
push
xlat
dec
pushf
in
ret
mov
cmp
xor
lods
stc
and
mov
lds
and
imul
sub
andb
sub
adc
daa
sbb
sbb
jne
pop
movsl
ljmp
fadds
and
out
aas
pop
add
inc
sbb
mov
enter
outsb
rclb
sbb
mov
gs
aad
pop
push
movsl
mov
xor
outsl
pop
sub
adc
dec
fs
push
xlat
and
and
inc
dec
mulb
sbb
sub
mov
sub
lcall
or
lods
rolb
and
mov
mov
rorl
xor
movsb
lods
push
mov
pop
rcl
icebp
ficomps
jb
movsl
pushl
lds
aam
in
into
cwtl
fadd
cli
xor
inc
push
sarl
aam
fbstp
mov
cmc
pusha
lods
dec
mov
outsl
in
std
or
in
mov
and
cmpsl
sub
mov
adc
gs
inc
or
mov
mov
aam
es
es
xor
fsubl
mov
adc
lods
out
pop
dec
bound
aas
cs
ud1
cmp
aaa
jg
xor
lods
ljmp
inc
sbb
stos
jle
adc
sub
jle
movsb
jmp
xchg
or
mov
dec
cmp
arpl
movsb
push
outsl
rol
dec
shrb
out
cmp
adc
cmc
cmp
shlb
add
mov
pop
fdiv
cltd
or
push
decb
clc
mov
or
fsubp
jecxz
push
add
repz
jns
rcrl
jne
jns
mov
imul
sbb
xchg
mov
cmpsb
cmp
mov
and
call
mov
pop
sub
imul
inc
das
fdivl
popa
insb
call
jp
xchg
jp
fldl
xchg
in
sbbb
stos
xchg
stos
adc
subl
test
sbb
js
mov
es
jecxz
xor
jnp
out
mov
fstps
and
pop
cmpsb
dec
imulb
adc
dec
lods
cmc
adc
mov
mov
xchg
pop
jmp
cmpsl
iret
loop
shll
ja
lret
shll
cmp
inc
pop
movsb
push
shr
mov
jne
sbb
pop
adc
add
push
push
jbe
mov
aad
in
aas
xor
lds
ret
push
add
sbb
sti
xchg
rcr
insl
pop
nop
jmp
xchg
clc
cmc
addr16
xchg
sti
cmpsb
xor
out
sub
subl
cs
sbb
popa
std
inc
jne
out
movsb
flds
jno
cs
out
xchg
mov
add
mov
inc
dec
icebp
cmpsb
lea
or
or
mov
dec
outsl
add
sarl
mov
je
movsb
pop
movsl
pop
lods
lahf
mov
fistps
sbb
ss
cltd
data16
mov
in
jae
xchg
mov
sbb
stc
outsl
fdivrs
pop
imull
mov
xchg
mov
int3
sub
dec
adc
jge
arpl
pop
jns
cmp
sbb
fwait
loopne
inc
dec
stos
fcoml
sub
and
push
jg
xor
mov
dec
inc
mov
lret
out
or
pop
in
repnz
mov
mov
push
sub
data16
mov
jns
lods
push
mov
fiaddl
inc
sub
sub
movaps
lods
cld
test
pop
scas
and
in
jnp
call
jp
bound
xchg
sub
sbb
pusha
cmp
or
test
popf
xchg
mov
add
cmpsb
xchg
arpl
fstpt
and
popa
lret
push
mov
add
dec
mov
mov
cmp
addr16
mov
aaa
or
rclb
cltd
add
and
push
fwait
into
jmp
mov
lods
fisubl
aam
mov
jge
xchg
out
mov
cmp
xor
fs
pop
mov
ffreep
test
cld
add
aad
test
xor
fbstp
add
inc
out
aad
dec
sbb
xchg
inc
std
idivl
xchg
clc
jmp
aas
or
and
gs
sub
adc
mov
xchg
mov
jle
inc
shrb
dec
sbb
pushf
dec
mov
mov
cmp
mov
push
cmpsl
dec
repz
mov
scas
out
pop
out
push
ljmp
imul
insb
int3
xchg
stc
pop
data16
arpl
sti
and
xchg
clc
push
adc
jl
lods
lock
xchg
cwtl
mov
pop
jnp
sahf
insl
jge
and
pop
dec
hlt
mov
iret
inc
insl
push
cli
push
sub
aas
add
inc
mov
mov
hlt
es
push
repnz
jmp
push
or
and
pushf
or
cmp
stos
jecxz
inc
mov
push
leave
xor
inc
jg
jns
aad
test
jg
fnstenv
xor
add
jle
cmp
mov
out
sarb
push
scas
or
popf
mov
scas
scas
outsl
add
inc
and
sub
or
popf
lcall
stc
push
movsb
push
sahf
xchg
and
push
and
out
sub
dec
or
mov
mov
and
sub
ja
jae
sbb
lret
mov
jae
mov
fiadds
sbb
dec
fnstenv
call
rorl
xchg
xchg
and
out
push
sub
ret
jecxz
mov
pushf
inc
mov
adc
sub
xor
adc
outsl
pop
mov
push
jmp
out
mov
adc
cmp
bound
push
dec
xchg
andl
hlt
mov
addr16
cmpb
dec
pop
pushf
inc
fsubrl
jne
neg
jae
pusha
mov
int
sub
or
clc
push
mov
movsl
jno
test
xor
sbb
enter
mov
out
int
add
adc
dec
add
imul
in
lret
xor
cmp
cmpsb
xchg
cmp
ret
mov
jbe
mov
arpl
fwait
xorl
gs
addb
stos
cmp
pop
out
and
inc
ds
shll
call
push
sahf
push
jg
xchg
pop
test
gs
and
mov
popa
roll
call
xor
inc
add
cmp
pushf
rcr
xor
mov
stos
adc
mov
pushf
xchg
outsb
stc
gs
dec
in
xchg
insb
inc
int3
cli
stc
cld
xchg
cld
sub
iret
or
cmp
daa
lcall
xchg
ret
xchg
xor
cmp
mov
into
aas
inc
in
inc
pop
pushf
fsubrl
dec
leave
cld
inc
and
js
fcomps
in
jge
lcall
popa
iret
out
adc
sub
das
testl
xchg
add
ss
jge
sub
je
lcall
es
adc
cmpl
mov
push
push
pop
stos
je
mov
or
daa
fcoms
jno
mov
adc
lahf
jo
lahf
sbb
clc
je
adc
in
sbb
jg
add
negb
and
fnsave
push
pop
mov
prefetcht2
xchg
add
data16
or
test
inc
xchg
mov
fdivrp
or
les
inc
or
mov
mov
and
stos
push
and
pop
jge
push
xchg
and
xchg
jmp
push
mov
mov
adc
in
out
in
sub
cmc
jae
pop
lcall
mov
mov
sbb
add
xor
loopne
fmull
sub
cmp
mov
push
mov
xchg
add
push
mov
mov
enter
mov
fistpl
push
out
pop
test
push
popf
sub
push
jmp
xor
adc
lcall
push
xor
push
aaa
hlt
dec
inc
add
xchg
repz
adc
push
mov
loopne
inc
dec
ljmp
xor
aam
sub
cmp
leave
or
lcall
jg
inc
ret
repnz
inc
or
jne
mov
xor
mov
mov
jp
pop
xchg
or
fs
dec
lock
popa
add
repnz
fbld
lock
xchg
sub
pop
or
lock
hlt
add
fcompl
iret
xchg
lahf
sub
enter
mov
mov
enter
mov
leave
push
insl
js
add
sbb
mov
or
loopne
jecxz
xor
dec
jne
add
push
fucomi
aas
cs
lods
cmp
sbb
xorb
and
and
addr16
push
cmp
or
cmpsb
lret
lret
inc
ret
xor
rorl
jb
cmpsl
loope
lods
enter
adc
sbb
adc
mov
fiaddl
xchg
cmp
mov
xchg
into
add
xchg
lret
sub
enter
dec
test
xchg
push
movsl
mov
mov
push
jp
fdivl
dec
xor
popf
jo
idivl
xchg
lock
in
cmp
push
mov
push
push
jmp
adc
add
ret
addr16
insb
adc
jmp
pop
push
push
pop
cmc
lods
mov
pop
outsb
push
fimull
add
cmc
and
lods
adc
pop
or
ficoml
shlb
xor
jo
and
loopne
cmc
pop
sub
jmp
dec
mov
jg
fiadds
nop
vcvtdq2ps
dec
and
insb
cmp
jmp
pop
mov
es
jge
dec
push
adc
push
pop
jge
daa
jno
and
lods
xchg
repz
test
pop
inc
pop
sbb
dec
fwait
ds
repnz
jle
sub
inc
xor
negl
mov
mov
mov
dec
mov
xchg
sbb
insl
test
int
into
jle
mov
popf
sbb
dec
out
mov
or
bnd
cmp
adc
push
jle
or
inc
mov
aas
test
jno
xor
push
dec
add
sbb
dec
sub
movsl
int3
push
test
shufps
xor
sub
andl
stos
test
xor
stc
mov
inc
mov
add
jle
das
iret
push
xchg
repz
mov
cmp
fs
xchg
sbb
je
stc
push
int
ds
cmc
xchg
pop
adc
clc
cld
fistpl
testl
std
js
insb
iret
adc
sti
adc
pushf
jecxz
sbb
nop
in
movsb
int
jp
xchg
lods
dec
xchg
xchg
pop
movsb
rcrb
push
jg
cltd
loope
mov
jbe
mov
sbb
push
xchg
push
push
cmpsb
out
out
addr16
jge
push
ficoml
cmovg
jl
jns
daa
xchg
sub
xorl
inc
xlat
mov
mov
push
ja
xchg
jno
rclb
mov
arpl
into
push
add
and
subb
cmp
pushf
out
dec
loop
lret
fimuls
or
into
dec
or
repz
repnz
jp
adc
xchg
jle
shll
sahf
adc
push
jp
mov
xor
out
sub
add
test
or
xchg
test
or
push
pop
push
jge
jno
lcall
icebp
test
ss
nop
das
punpckhwd
jle
cli
imul
sub
shrl
orl
sti
and
mov
dec
sub
xchg
xchg
inc
add
or
loopne
shrb
subl
and
incb
pop
aad
lods
push
int3
xor
testl
push
nopl
insl
adc
mov
iret
mov
push
movsl
jmp
cmp
pop
fs
stos
or
dec
cmpsb
cmc
pop
adc
xorl
sub
movsb
adc
or
nop
push
cld
insl
test
mov
and
or
mov
cmc
cmp
scas
and
lds
push
test
xchg
pop
jb
adc
sbb
mov
fisubs
fiadds
mov
hlt
or
add
pusha
inc
cmpsl
mov
cs
inc
test
pop
mov
mov
cld
sbb
loope
push
and
clc
js
dec
sbb
mov
shlb
dec
or
push
fisubl
std
add
push
sub
mov
int3
sahf
add
rolb
es
mov
or
sbb
lock
test
mov
fldl
lods
decl
cmp
test
lret
repz
and
gs
daa
adc
and
inc
stos
aad
out
dec
lret
fcompl
test
and
jl
aad
mov
cli
rol
xchg
fcoms
pop
repnz
stc
imul
jecxz
test
xchg
lret
pop
xchg
mov
jmp
sub
and
mov
mov
jl
fwait
sub
mull
jmp
cli
shlb
icebp
fwait
sub
fildll
push
pop
xchg
and
out
pop
jge
push
jge
cs
mov
shr
adc
jo
mov
mov
xchg
sbb
mov
xchg
in
adc
cmpsb
int
ss
ret
movsb
dec
loope
das
mov
enter
mov
push
add
shlb
and
mov
subb
xchg
or
push
and
fdivr
mov
bound
pop
sub
sahf
inc
lcall
imul
cmp
or
pop
mov
inc
jbe
jle
push
push
lds
xor
rclb
add
jns
inc
cmc
popf
test
lret
out
loope
push
leave
sub
in
jge
inc
mov
push
inc
mov
aad
aad
out
cli
stos
outsl
dec
add
push
or
in
fs
xor
inc
adcl
scas
std
xchg
xchg
out
stos
sub
sub
inc
bound
stc
dec
lcall
mov
js
mov
aam
repz
or
pop
movsl
adc
jle
adc
lret
in
jne
idivl
mov
leave
jo
inc
mov
fisubl
cltd
or
cmpsl
int
push
push
iret
push
sub
xchg
xchg
add
out
mov
push
ja
out
movsb
popa
scas
adc
mov
mov
negl
sti
lds
pop
popa
sbb
push
cmp
mov
xorb
jae
sub
aaa
sbb
add
rcrl
push
sbb
imulb
or
mov
int3
push
aad
push
adc
mov
xchg
mov
ss
lea
adc
mov
lret
xchg
jle
popf
aaa
sti
data16
or
mov
imul
inc
jg
xchg
add
popa
add
mov
pop
mov
jno
dec
push
clc
cwtl
das
jo
jecxz
insl
jmp
lcall
loop
and
mov
addl
rcrb
sbbb
inc
inc
out
sub
jg
into
mov
xor
mov
daa
mov
jmp
push
fldcw
xchg
lods
das
cmp
sub
mov
les
jno
arpl
call
jecxz
mov
inc
mov
xor
inc
call
or
inc
mov
inc
add
adc
repz
lock
adcl
int3
xor
mov
add
es
inc
xchg
cmc
lcall
notl
pop
aam
pop
pop
lcall
mov
subps
ljmp
out
and
xlat
mov
sub
dec
stos
addb
into
leave
push
loope
into
sub
sbb
pop
dec
sub
popa
xchg
in
insl
pop
adc
pop
lock
dec
inc
ficomps
push
hlt
cmpb
jae
fstpl
sub
jmp
scas
in
movl
arpl
and
outsl
ljmp
sub
inc
or
stc
lcall
ja
dec
sbb
inc
scas
icebp
dec
pop
sub
mov
aaa
sbb
lods
mov
rorl
inc
dec
cmp
add
scas
inc
push
stc
mov
xchg
and
add
jae
std
adc
push
daa
mov
sbb
xchg
ljmp
daa
inc
sub
adc
push
or
sahf
clc
push
iret
test
dec
dec
std
mov
scas
ret
cmpsl
sbb
ss
pop
cmpb
pop
adc
bound
call
stos
in
lds
push
inc
in
movsb
divb
imul
pushf
xor
aas
xchg
aas
rcrb
stc
rclb
add
into
cmp
jecxz
push
adc
in
xchg
cmpl
or
sub
cmp
pushf
hlt
xor
fists
shl
jl
enter
imul
or
ds
pop
inc
aad
inc
pop
test
clc
jnp
in
pop
andl
insb
pop
pop
xor
shlb
cs
mov
inc
std
pop
test
pop
fsts
in
sbb
push
push
mov
sbb
icebp
scas
pop
movsb
adc
mov
fwait
fs
pop
push
lret
mov
ss
mov
dec
scas
adc
lock
push
nop
adcb
outsl
outsb
imul
add
stc
std
es
jo
mov
ret
out
cmpsb
push
push
mov
insl
shrb
out
inc
push
inc
insb
push
or
or
xchg
js
lea
ja
pop
mov
in
in
jecxz
aam
hlt
lods
jle
add
dec
out
jg
mov
add
pushf
rorb
fwait
pop
lods
dec
pop
sti
das
fisttpll
push
push
add
inc
pop
add
bound
mov
and
xor
andl
push
inc
push
ss
enter
gs
repnz
inc
push
dec
jno
and
mov
xor
mov
sub
loope
dec
test
jge
mov
ss
add
sbb
push
xchg
jmp
sub
enter
fidivrl
icebp
push
stc
push
mov
stc
shll
mov
xchg
test
adcb
mov
or
lea
call
push
cmp
aas
mov
jnp
pop
bound
insl
pop
mov
pop
lea
and
and
sbb
push
sub
dec
push
inc
pop
addr16
ret
fistl
shlb
sbb
ds
dec
stos
cmpsb
mov
xor
rclb
lods
mov
lahf
xlat
inc
paddusb
ret
aam
ss
xchg
stos
flds
ja
xor
hlt
inc
movsb
push
push
nop
scas
push
inc
mul
pop
sub
adc
dec
xchg
scas
orb
mov
pushf
hlt
mov
cli
int3
sub
fsubrs
divl
or
mov
inc
jns
dec
scas
inc
xor
mov
cmpsl
aas
xor
movsb
in
lret
jb
adc
and
cmp
cmp
hlt
hlt
mov
lret
mov
xor
and
sub
dec
int
jle
or
mov
inc
and
adc
or
js
mov
sbb
xor
mov
or
xor
add
push
pop
cmp
lods
into
jecxz
mov
test
xchg
in
test
and
nop
adc
xorl
cmp
in
das
xor
push
ret
adc
aam
rcr
push
fists
or
mov
mov
rcl
xchg
mov
and
loope
loope
insb
iret
or
dec
adc
or
mov
addr16
sbb
mov
or
push
fcompp
sub
stos
dec
mov
cmp
cmp
and
mov
fs
fisubrl
mov
mov
mov
jo
shll
hlt
push
shll
aam
push
mov
testl
mov
lea
jle
nop
bound
sbb
faddl
imul
pusha
mov
xor
nop
push
mov
int3
adc
or
and
and
std
push
sub
mov
xchg
cmp
out
movsl
adc
shll
and
add
notb
adc
std
or
rclb
push
es
call
clc
pshufw
iret
jne
in
sbb
push
sbb
sbb
sub
lret
roll
in
aaa
sbb
sbb
mov
movsb
shr
mov
and
pop
lret
stc
jo
mov
loopne
stc
lea
ret
xchg
fstpl
outsl
xchg
rcr
std
inc
int
dec
in
and
xor
dec
ja
pop
cltd
cmp
shr
sbb
mov
mov
mov
jmp
xor
mov
sub
gs
jo
test
cmp
mov
pop
add
out
and
jmp
sub
push
insb
xchg
lods
cmp
mov
xorl
les
popa
dec
mov
or
sbb
popa
cmpsl
fisubrs
lods
pop
adc
fcomp
adc
sti
or
ljmp
shrl
imul
cmpsb
cld
dec
dec
mov
mov
out
sti
outsb
out
aas
enter
pop
sub
les
lea
inc
inc
lods
mov
and
xchg
imul
shll
stc
fildl
dec
mov
out
negl
fxch
sub
cmpl
push
gs
aas
lahf
ljmp
push
aam
push
lea
dec
or
pop
cwtl
pop
pop
jo
mov
fildl
pop
fisubrs
je
add
cmc
or
sbb
lods
jo
mov
and
test
aad
dec
dec
ret
arpl
sbb
sahf
sbb
sub
jne
mov
and
adc
ja
xor
aaa
xor
cltd
in
rcll
div
jg
push
jecxz
icebp
xor
pop
add
and
cli
push
rcrb
cmpsl
or
add
xchg
orl
adc
in
jns
add
outsb
insl
shrl
call
or
push
insb
jbe
sti
mov
lahf
adc
push
popa
arpl
and
fwait
mov
pusha
pusha
mov
sbb
dec
xor
jle
jbe
and
sbb
add
pop
mov
push
adcl
ss
jmp
push
mov
insb
xchg
push
ja
jno
in
fistpll
mov
dec
lea
mov
sbb
and
lods
adc
jb
shlb
jg
cmp
repnz
pop
call
sbb
loopne
mov
inc
das
adc
mov
sub
jg
mov
dec
adc
int3
xchg
mov
push
rcrl
sub
xor
or
pop
jl
xor
lcall
push
ljmp
push
cmp
shrl
xchg
lret
mov
push
subb
mov
bound
mov
mov
out
enter
dec
fcompl
cltd
push
fstps
jbe
xchg
pushf
ficoms
mov
sbb
test
arpl
loopne
dec
push
mov
jle
push
cmp
std
stos
mov
sahf
imul
ret
mov
cwtl
call
lret
movsl
shl
push
movsb
outsl
xor
mov
inc
leave
push
cmc
pop
jg
addb
xchg
dec
mov
mov
mov
dec
fnstenv
xor
inc
pop
je
enter
xchg
arpl
xchg
in
sbb
in
outsb
xchg
clc
pop
nop
pusha
or
inc
dec
icebp
test
sub
int3
arpl
mov
xor
adc
xchg
sub
test
lcall
scas
out
test
push
fsubs
jecxz
popa
orl
repz
daa
push
push
rcrb
cmp
jmp
jmp
mov
orb
scas
xchg
dec
scas
lret
in
ljmp
cmp
ret
jo
call
adc
dec
xchg
rcll
fbstp
cld
inc
lods
fprem1
pop
jo
push
dec
jno
lods
push
cmpsb
mov
xchg
jnp
jae
push
cmp
jne
int
push
sbb
dec
jecxz
enter
add
arpl
mov
mov
aaa
mov
lcall
das
mulb
fs
loopne
xchg
adc
es
pop
shrb
mov
mov
popa
outsb
test
mov
inc
sub
ljmp
movsb
xchg
scas
in
jae
mov
and
sub
pushf
aam
add
pop
out
dec
clc
int3
mov
pusha
ja
mov
push
inc
inc
lar
cmpl
xlat
sbb
pop
outsl
dec
mov
popf
sti
pop
lcall
pop
dec
into
icebp
sbb
push
and
or
aas
mov
ror
fmuls
enter
lahf
test
adc
jne
mov
ret
shlb
mov
rcrb
test
loope
push
jmp
dec
popa
jb
jge
add
jp
xor
or
stos
scas
mov
mov
fstl
xchg
jecxz
imul
out
or
pop
mov
push
std
adc
pushf
or
pop
icebp
in
mov
notb
je
jb
cmpb
or
cs
nop
jnp
cmpsb
or
push
addb
push
adc
movsl
xchg
aas
std
add
inc
cmpl
add
int3
nop
push
sub
jmp
xchg
cmc
aaa
fcom
add
stos
pop
mov
leave
adc
test
pop
imul
xor
mov
inc
lret
int3
push
loopne
es
cmp
push
lret
add
in
scas
lods
movsb
daa
dec
adc
icebp
lea
lea
cmp
jnp
daa
mov
dec
sub
mov
std
push
dec
les
addr16
pop
mov
stos
shlb
addr16
aam
inc
cmovl
mov
je
push
pop
scas
cwtl
scas
mov
fdivs
daa
stc
mov
loope
cmc
sub
ss
mov
sbb
cmp
push
mov
cltd
call
mov
sub
scas
pop
int
cmp
and
mov
iret
outsb
movsl
enter
xchg
std
imul
adc
scas
pmuludq
push
call
and
jno
mov
xlat
test
adc
movsb
pop
dec
pop
mov
popf
cmc
ret
sub
les
cli
push
jae
pop
mov
dec
mov
cli
lea
xchg
imul
and
dec
cmp
xchg
cmp
popf
ret
adc
and
and
dec
mov
in
out
js
sub
cmp
ss
pop
inc
pop
fsubs
mov
repnz
filds
xor
jns
loop
sbb
sar
xor
cmp
into
xchg
sbb
xchg
xor
out
mov
shr
stos
out
or
in
in
jnp
and
cs
cmp
lret
pushf
aad
dec
and
ss
pushf
pop
mov
sub
jbe
hlt
js
push
or
mov
les
les
js
jne
ss
mov
dec
mov
or
dec
rcll
sbb
test
xor
xor
push
mov
xchg
sub
adc
mull
sub
fimuls
cld
leave
ss
adc
add
or
push
xchg
in
jns
ds
cmpsl
pushf
pusha
adc
mov
jle
imul
mov
dec
ret
out
clc
jae
pop
cmp
mov
mov
popf
pop
mov
cmp
inc
add
cli
aas
cmpsb
or
je
daa
and
lods
in
or
ror
lods
push
repnz
push
mov
mov
ljmp
mov
or
jb
flds
es
rcl
inc
push
pop
icebp
int
cmc
popa
in
pop
arpl
ljmp
mov
in
fsubr
popa
push
lret
repnz
rorl
jmp
or
test
cmp
cmpsb
adc
inc
popl
or
xchg
or
nop
lahf
test
scas
hlt
ds
mov
xchg
jmp
cwtl
repz
xchg
jp
aas
shlb
stos
sbb
lret
jae
out
stc
jl
mov
adc
inc
adc
pop
and
fiadds
sub
fs
scas
out
push
xorl
push
jnp
shlb
int3
loop
les
test
dec
fadds
in
sub
rclb
mov
popa
ret
xchg
xor
mov
js
lods
dec
pusha
test
popa
xchg
pop
push
sub
adc
add
icebp
add
les
out
xlat
mov
push
sub
jns
aad
mov
sbb
mov
cmp
mov
cmp
adc
xchg
repnz
mov
pusha
xor
fisubrs
lret
sahf
out
push
ficoms
in
out
fsts
lret
cmp
fcmovnb
jecxz
jg
sarb
xor
cld
test
dec
mov
aas
and
out
lret
sti
push
push
int
inc
outsb
sub
push
into
stc
push
pusha
or
jle
mov
mov
pop
mov
ret
and
pop
xchg
cmp
into
sbb
nop
mov
adc
mov
rcrl
jne
popf
pusha
testl
adc
cltd
popf
push
pop
sbb
daa
mov
adcl
add
cmpsl
dec
scas
push
mov
sbb
ret
popfw
adc
lea
or
movsb
and
jbe
mov
add
scas
add
push
mov
dec
or
ret
ljmp
sti
or
scas
cmp
arpl
nop
adc
sti
mov
divb
adcb
fmuls
addr16
nop
ja
mov
mov
ljmp
mov
arpl
mov
xor
insb
mov
push
mov
and
xchg
imul
jb
mov
in
sbb
jbe
stc
xchg
popa
nop
or
xor
es
xchg
aad
dec
push
xchg
bswap
xchg
or
in
loop
sub
mov
jne
cltd
ljmp
std
mov
sbb
push
cmpb
lods
lea
xchg
fldenv
mov
pop
les
jg
inc
jne
or
pop
cmpsb
out
pop
sbb
mov
adc
or
dec
rol
fwait
cmp
daa
mov
dec
add
mov
adc
mov
pushf
rorb
and
jno
icebp
repz
dec
sub
ret
mov
insb
adc
jg
ror
fnstsw
push
stc
fistl
js
jle
popf
out
mov
aaa
mov
sbb
jmp
cmp
mov
mov
sub
push
mov
xchg
cmpsl
push
mov
jecxz
jle
dec
jno
mov
jge
sbb
jmp
ss
inc
in
sub
cmp
sbb
in
ss
clc
out
mov
outsb
arpl
or
cmp
popa
imul
pusha
mov
out
imul
mov
addr16
mov
insb
popf
cmpl
notb
and
mov
loope
sbb
ficoms
fwait
aaa
add
mov
jo
jns
es
inc
mov
mov
test
xchg
pop
shrb
lock
fcmovne
loopne
enter
sub
xchg
mov
mov
mov
test
sub
shrl
movsb
rorb
les
js
les
jle
mov
out
lock
out
inc
adc
int3
add
add
mov
outsl
aas
or
aas
or
xchg
sub
jnp
dec
xor
mov
shlb
mov
test
xchg
cmp
cmp
call
scas
push
xchg
movsb
push
sub
outsb
push
dec
pop
addr16
data16
push
jle
imul
inc
and
cltd
dec
add
je
jb
mov
fsubrs
cmp
push
mov
jno
cmp
cltd
sti
fcoms
xor
mov
mov
add
cmpsl
mov
adc
push
add
sub
fwait
push
cmp
push
sarb
pop
jnp
jge
mov
adc
and
sub
subb
arpl
mov
test
inc
mov
pop
iret
imul
pop
push
cwtl
mov
pop
dec
addr16
leave
movsl
mov
sbb
jbe
sub
or
and
shlb
lods
xchg
add
nop
xchg
ret
gs
xorb
test
jno
sub
ret
je
ret
lahf
sub
fwait
cmpsb
aaa
pop
push
pop
outsb
jmp
aad
sub
cmc
bound
lret
and
jg
dec
movsl
ficompl
bound
cmc
aad
cld
mov
out
adc
dec
dec
xorl
xchg
inc
bound
fwait
repnz
adc
out
cld
shll
mov
add
dec
or
sti
cltd
adc
adc
aaa
lods
movsl
fcomps
jae
adc
or
jp
or
push
cmp
sub
lcall
int3
out
xchg
fldenv
cld
sbb
aaa
repnz
js
mov
jg
hlt
jae
lret
das
adc
test
push
sub
mov
rorb
mov
mov
push
sub
js
sti
loopne
mov
mov
push
std
ds
clc
loope
hlt
lret
jg
adc
lea
xor
js
or
dec
dec
xchg
flds
ret
adc
xor
adc
sbb
sbb
std
cwtl
push
mov
push
mov
imul
push
mov
mov
aam
aam
aad
icebp
pop
or
sar
push
notb
mov
cmp
adc
push
loopne
out
xchg
inc
fwait
sahf
imul
aam
add
clc
mov
bound
mov
or
lcall
jnp
mov
pushl
dec
lods
mov
es
into
adc
mov
cmp
int
shl
xchg
call
jbe
idiv
push
out
stc
mov
aaa
je
roll
dec
cld
sub
jle
sub
inc
or
add
rcrl
or
scas
repz
lods
loopne
movsl
and
mov
push
jg
test
pop
rcl
inc
jo
movsl
xlat
pop
jae
iret
jno
clc
cmpsb
mov
xor
jno
adc
mov
xchg
pop
int3
ds
fldenv
pop
sarl
out
inc
and
mov
loope
push
xor
je
adc
push
fsubrp
inc
and
add
imul
lds
inc
in
int
sbb
adc
cmp
or
jns
mov
fiaddl
stos
pop
je
mov
jb
add
out
cmpsb
sbb
cmp
mov
mov
pop
orl
pop
int3
push
and
xchg
add
jno
push
sbb
mov
loop
js
sti
push
pusha
lcall
dec
out
push
mov
cmovg
mov
mov
pop
mov
xchg
je
daa
cmp
pop
adcl
fsts
dec
jmp
lret
push
xor
in
icebp
cmpb
mov
sub
jp
lds
fbld
cmpsb
jmp
xor
sar
jl
call
pop
adc
xchg
xchg
andb
jmp
aad
push
out
push
jne
and
xchg
shl
xor
fmuls
mov
add
xor
jmp
xchg
pop
xchg
cli
rorl
mov
in
in
mov
aas
xor
pop
dec
cli
imul
adc
loopne
insb
popf
mov
das
pop
adc
dec
add
mov
push
lea
outsb
lods
dec
imul
icebp
lock
fwait
or
lock
pop
xor
sbb
push
jnp
lock
andl
sbb
pop
dec
cmpsb
pop
sub
push
push
int
or
insb
mov
adc
add
shrl
mov
fwait
ret
imul
stos
or
jmp
int3
sbb
jbe
sub
sub
push
inc
pop
cmc
jne
lea
addl
sbb
sub
lcall
cmpsl
add
mov
rol
push
sub
jnp
push
fwait
push
adcb
pop
add
into
jne
add
inc
mov
js
ljmp
fcompl
js
addr16
mov
dec
fisttps
pop
movhps
rcll
or
mov
jmp
pop
outsb
leave
lcall
jecxz
das
cmpsl
sub
adc
sar
jnp
or
jo
aam
dec
outsl
mov
icebp
aam
mov
xor
cltd
orb
in
arpl
mov
sub
pop
and
repz
sarb
sarb
or
push
cmp
ds
push
mov
mov
clc
lock
jo
inc
add
and
mov
pop
cmp
out
jg
mov
xor
xor
mov
cmp
bound
push
adc
sbb
subb
aaa
and
or
ret
lcall
sbb
or
loope
add
add
adc
cmp
cmp
jns
es
shr
pop
sbb
sub
pop
int
aas
inc
and
jnp
sub
push
xor
out
inc
mov
inc
add
popf
cmp
fimull
aad
sub
inc
push
jae
ficompl
jns
ss
mov
ja
call
push
xchg
jnp
mov
pop
lods
sub
cwtl
cwtl
addr16
mov
scas
loope
shlb
jae
mov
inc
fiaddl
mov
repz
push
nop
and
fnsave
sbbl
test
mov
mov
fldcw
mov
push
add
cmpsb
pusha
js
push
mov
or
mov
mov
push
je
sub
xchg
outsl
lods
scas
or
divb
mov
mov
cld
popf
cmc
or
test
xchg
inc
or
mov
adc
push
cmp
push
and
mov
cld
mov
ss
lods
imulb
cmp
push
mov
and
or
pop
sub
cmpb
push
scas
int
rclb
sub
je
inc
ljmp
test
ret
jo
icebp
xchg
jg
xor
and
pop
mov
xor
xor
inc
das
dec
enter
mov
lret
inc
cmpsl
push
xchg
iret
lods
scas
outsl
cmp
push
push
dec
in
imul
mov
fs
mov
dec
nop
and
lahf
mov
mov
gs
jnp
leave
pop
mov
and
xchg
xchg
mov
jno
xchg
mov
cmp
in
aaa
loope
out
push
icebp
lret
and
sarl
add
lds
push
lods
sti
mov
adc
sub
or
xchg
sbb
int3
cs
xchg
push
adc
mov
mov
fiadds
sub
xchg
sbb
pusha
mov
mov
ja
pop
sbb
data16
sti
dec
ret
test
popl
pop
pop
and
mov
out
ljmp
cmp
data16
repz
and
xchg
lods
inc
ljmp
fiadds
into
lds
and
mov
xchg
lods
in
and
scas
mov
mov
pop
addl
fmull
inc
aaa
insb
sahf
xor
ja
add
mov
mov
mov
or
mov
lock
jae
out
mov
stos
or
jp
lahf
xchg
call
gs
popf
scas
dec
lea
cmc
jge
gs
bnd
std
test
pop
out
xchg
iret
inc
ja
and
mov
sbb
sub
out
icebp
mov
inc
loope
cmp
push
int3
stos
pop
dec
xor
cs
sbb
mov
xchg
inc
fisubrs
mov
mov
xor
jb
bnd
adcb
and
pop
sbb
aam
inc
pushf
out
mov
dec
cmp
aad
add
add
aam
inc
fisubrs
sub
lahf
cwtl
dec
lret
sbb
enter
adc
ljmp
xor
popa
insb
addb
movsl
inc
lea
rorb
mov
cli
sti
out
aam
add
push
mov
jb
pop
fcomi
loopne
push
dec
ss
fildl
inc
les
enter
jns
push
addr16
dec
es
push
bound
hlt
lahf
dec
aad
cmp
fmulp
jge
test
imul
jnp
hlt
adc
je
push
add
sub
ljmp
inc
mov
xor
jbe
jg
insb
sub
in
dec
in
fnstenv
inc
xchg
imul
mov
fidivrl
jmp
cmp
xchg
xlat
jne
and
mov
lods
xor
ss
popf
test
pop
and
in
xchg
mov
pop
addb
rclb
repnz
sar
inc
adcb
pop
jns
jbe
scas
std
sub
aaa
negl
xlat
jge
daa
xchg
xchg
insb
stos
scas
out
out
jp
xor
mov
mov
adc
push
mov
cmp
mov
scas
jbe
push
xchg
rolb
das
lds
cmp
mov
nop
xchg
lret
fisubrs
das
outsb
xchg
xchg
icebp
add
out
ds
xor
adc
fsubrl
test
leave
xchg
std
mov
mov
mov
or
adc
inc
sub
fnstenv
xchg
leave
out
pop
jb
and
adc
cmp
stc
or
sbb
and
xchg
es
clc
shrw
out
les
jnp
mov
lret
popa
cs
stc
pop
hlt
scas
mov
scas
into
mov
mov
sbb
mov
pop
cmp
adc
mov
sbb
outsb
jnp
jb
shlb
mov
stos
adc
and
push
xor
pop
jecxz
mov
mov
xlat
jno
pop
and
mov
jnp
inc
lahf
dec
test
mov
ds
movsl
aaa
inc
mov
jge
hlt
fcoms
ret
das
cmc
push
mov
dec
shll
negl
cmp
es
jns
and
push
dec
enter
and
lret
fstl
test
loop
xchg
add
iret
and
mov
and
and
out
adc
pop
sbb
idivl
sub
faddl
pushf
and
es
in
dec
addb
inc
shr
leave
and
push
fsts
stc
cwtl
cmp
mov
push
cmp
shll
lea
inc
sti
ljmp
xor
jmp
adc
mov
mov
mov
inc
inc
fs
sub
aas
or
add
push
cmp
xchg
cltd
sbb
test
add
aas
imul
pop
push
jle
xchg
jg
addps
adc
cmp
jb
mov
inc
or
scas
das
notl
xor
mov
mov
mov
sbb
dec
inc
aas
leave
jecxz
inc
ret
fistpll
sub
mov
push
lcall
dec
insl
stos
or
repnz
movl
dec
iret
jo
jmp
loopne
adcb
cmc
out
lret
lods
xchg
lock
lods
aad
push
repz
scas
mov
js
pop
xchg
das
push
xchg
cld
push
xor
jmp
dec
push
lret
jp
mov
popa
bound
jp
cmpsl
jl
add
mov
in
arpl
ljmp
jle
dec
addb
loop
jns
stos
js
and
lods
cli
icebp
prefetch
lods
mov
aam
push
mov
or
aam
arpl
ss
popa
jb
sbb
or
outsb
test
mov
xchg
mov
inc
aam
sub
out
fmull
lcall
aad
push
mov
out
shr
xchg
and
imul
adc
jl
xchg
cmpsl
leave
rorb
bound
jecxz
sarb
cmp
sbb
lret
cmp
int
pop
test
out
jnp
aam
pop
xchg
sbb
push
mov
dec
xorl
adc
or
scas
dec
nop
scas
mov
pop
sbb
inc
add
push
or
ljmp
mov
adc
push
enter
je
and
and
jne
add
dec
cmpsb
cltd
or
fnsave
test
lahf
les
pop
test
xor
outsb
loope
int
inc
pop
pop
stos
mov
inc
in
sahf
lock
and
or
push
jp
imul
call
ficompl
xchg
orb
xor
jmp
arpl
in
in
xchg
push
mov
sbb
mov
mov
xorb
pushf
dec
out
shrl
mov
fstpl
push
aad
fsubl
stos
clc
mov
sarl
xor
aam
dec
or
push
push
jo
or
push
or
cmovne
and
pop
dec
xor
addr16
orb
ds
fxch
and
test
and
sbb
pop
mov
repnz
xchg
dec
mov
jp
xlat
cs
or
xor
pop
push
mov
jp
fcomip
outsb
mov
inc
cmpsl
gs
sar
scas
mov
ss
or
js
test
xorl
lods
mov
sbb
mov
pop
xchg
inc
push
ja
mov
leave
pop
sbb
stc
sti
enter
movsb
sub
jne
movsb
push
xchg
jns
daa
cmp
sub
mov
inc
xchg
inc
mov
xor
mov
jp
cs
rcrl
gs
fistps
idivb
movsb
aam
aam
std
mov
pop
push
roll
push
int
dec
jo
int3
call
jle
push
aam
hlt
push
lods
jne
pop
or
dec
mov
inc
sahf
out
pop
movsl
or
ds
flds
sbb
pop
mov
pop
sbb
bound
jae
arpl
loope
mov
jo
test
xlat
push
cltd
fdivs
leave
sbb
inc
aas
xor
out
movsl
imul
rorb
sbbl
xor
pop
andb
jo
inc
subl
push
sub
mov
cs
push
pop
icebp
pop
jae
mov
xchg
stos
mov
iret
xchg
scas
cmp
jo
pop
scas
popf
ficomps
test
inc
or
mov
lock
data16
pop
addr16
fstpl
jns
jg
push
lods
sub
inc
scas
into
mov
add
daa
push
in
scas
jle
in
push
sub
into
mov
shll
dec
lret
xor
mov
mov
aad
pop
in
adcl
test
js
inc
xor
mov
and
pinsrw
push
cmpsl
mov
and
sub
mov
cld
popf
jnp
push
push
jo
out
pop
insb
sbb
mov
and
push
sbb
pop
imul
orb
mov
pop
cmpsl
xchg
inc
nop
dec
shl
fdivs
int
fsts
popf
into
and
push
adc
stos
jl
and
xor
in
sub
pusha
pop
stos
adc
sub
gs
pop
mov
fsubl
cltd
lods
insl
jb
pop
jb
into
out
lret
mov
sub
mov
int
mov
xchg
jle
push
cmpl
cmpb
ret
jnp
or
dec
cmp
adc
push
sbb
dec
rorl
aas
inc
sub
nop
mov
sub
cmp
jge
inc
push
fprem1
jo
cltd
lea
mov
and
mov
jns
leave
inc
mov
les
aaa
mov
stos
int3
movsb
dec
test
add
push
outsl
in
mov
scas
lret
sbb
mov
icebp
mov
xor
cwtl
sub
push
outsb
xor
lret
sbb
mov
daa
push
or
jg
dec
and
fistpl
test
lods
cltd
test
mov
add
jo
xlat
and
or
push
push
push
or
mov
lods
cld
push
xor
dec
hlt
std
test
or
outsb
repnz
cmp
or
ljmp
mov
dec
mov
ja
push
jne
jne
sbb
lods
jle
push
push
xchg
pop
orl
scas
xor
scas
lahf
cmp
int3
pop
imul
and
push
mov
dec
push
add
aam
cli
jg
jge
sub
jae
mov
xchg
fwait
sbb
push
shlb
ret
jae
fidivrl
jp
loopne
pusha
movsl
cltd
sub
nop
scas
fs
lods
push
mov
dec
xchg
mov
xorb
inc
adc
out
cmc
adcl
sub
mov
jae
pop
push
mov
addl
xor
and
jns
fs
in
and
stc
outsb
popf
push
aam
sbb
mov
adc
and
daa
test
dec
sahf
in
mov
dec
sbb
loop
push
shll
test
arpl
mov
and
pop
or
inc
les
fmuls
add
cwtl
cmp
mov
xchg
call
xchg
ja
jge
lods
mov
aaa
cmc
inc
dec
test
cmc
scas
push
pop
int3
cmp
mov
shlb
roll
dec
ja
xchg
fidivs
fs
addb
cmp
adc
or
test
cmp
inc
xor
rcrb
outsl
cmp
sub
cmp
xor
xchg
mov
xchg
les
pop
int
xorl
sbb
int
addl
and
cmp
repnz
push
inc
daa
mov
ror
cs
fwait
dec
lahf
push
popf
push
in
callw
rcrb
mov
jae
fwait
jns
jns
pop
je
popa
mulb
and
lahf
push
or
subl
sub
mov
dec
dec
xchg
test
jnp
xchg
dec
pop
dec
push
repz
fadds
xchg
imul
imul
ror
mov
pop
inc
cltd
fiadds
cwtl
loop
loop
loopne
cmp
or
pop
push
test
add
xlat
xchg
push
xor
ljmp
hlt
adc
outsb
in
xchg
mov
push
mov
lret
out
xchg
sbb
mov
scas
ljmp
mov
jns
mov
lods
and
jmp
dec
iret
xchg
xchg
cmp
scas
repz
in
cmpl
loopne
subb
mov
push
dec
sarb
fsubrl
jbe
hlt
pop
and
out
cmpps
test
mov
jnp
jmp
bound
popa
mov
ljmp
mov
fsts
inc
mov
xor
sbbb
cmc
and
bound
in
mov
mov
inc
cmpsl
cmp
std
adc
cmpsb
and
push
pop
stos
jo
adc
or
push
adc
sahf
pop
xchg
xlat
std
push
rorl
push
pop
pop
daa
or
rcrl
rol
push
popf
out
addl
rolb
div
mov
mov
adc
push
lcall
sbb
mov
out
andb
cwtl
fstps
sahf
or
pop
fnstcw
mov
inc
sbb
push
pushf
inc
adc
mov
xor
adc
pop
mov
dec
mov
imulb
dec
arpl
in
sub
cmp
ljmp
cmp
cmc
and
inc
fwait
inc
fnstenv
pop
and
stc
test
xor
jb
xchg
mov
addr16
xchg
ret
xchg
mov
hlt
jo
test
call
xor
xchg
psubsw
clc
push
xchg
push
cmp
in
mov
xchg
jl
ja
jmp
add
xor
lret
add
aas
inc
stos
rorl
clc
aas
dec
sti
lahf
add
pop
dec
push
mov
pop
cmpb
scas
and
scas
mov
rol
js
cmpsb
data16
adc
das
test
lcall
adc
test
mov
mov
mov
sub
mov
jl
call
mov
movb
push
pushf
fidivrs
lods
cltd
loop
cmpsb
push
mov
aad
nop
sub
int
loope
leave
push
add
mov
mov
mov
mov
pop
lret
fwait
je
shrl
mov
rol
sarl
test
sbb
ret
sub
inc
mov
mov
cltd
ss
sbb
loopne
mov
or
popa
push
scas
in
inc
adc
sarb
jnp
ljmp
sub
jp
arpl
jmp
xchg
in
pop
pop
xchg
sahf
ja
aad
and
and
loopne
test
negl
jbe
setp
add
cld
fdivrl
js
sahf
jne
pop
popa
adc
push
inc
xchg
mov
dec
push
mov
loopne
mov
cmpsl
sbb
clc
pop
adc
jno
jns
jno
and
xchg
jle
and
lahf
lods
xor
in
sbb
dec
es
rolb
xchg
les
mov
add
addr16
test
pusha
sbb
lea
fisubrs
adc
loopne
jne
xor
outsb
push
lods
daa
loop
sahf
fidivl
aam
sub
mov
jne
mov
mov
adc
add
sbb
fstpl
sbb
data16
cmpsb
inc
inc
jno
dec
adc
push
mov
mov
testl
xor
xchg
cltd
jg
cmpsl
adc
pop
imul
xor
inc
pushf
pop
cmp
mov
out
shrl
cli
xlat
xor
int
mov
add
xor
lds
lret
jae
mov
fwait
loop
cmp
into
pop
cmp
add
sbb
scas
imul
push
sub
mov
pusha
jg
jne
mov
mov
popa
mov
ljmp
pop
orb
jl
sbb
jge
push
sub
orl
into
enter
cld
or
cmp
push
sti
pop
mov
lcall
push
add
jmp
addb
in
mov
enter
jge
aaa
adc
dec
cs
dec
jl
sub
push
daa
jp
in
les
loope,pn
das
lods
add
fstpl
sbb
movzwl
sub
std
xchg
dec
pop
and
add
mov
push
ljmp
cmp
mov
rorb
and
sub
test
fnstenv
js
outsb
enter
das
iret
imul
rolb
jb
inc
add
jg
ret
popa
add
cmp
insl
sahf
loop
imul
mov
sti
add
fistps
movsl
nop
lds
repnz
shll
push
fcomps
das
and
insl
jp
ljmp
mov
iret
stos
movsl
push
outsb
movsb
mov
ljmp
mov
ljmp
rcll
les
gs
ja
mov
mov
loop
cmp
arpl
inc
or
gs
xchg
jg
loop
jmp
icebp
fs
scas
lods
imul
loop
int
cltd
fidivs
inc
mov
incb
add
lods
sbb
and
nop
xchg
sub
xchg
data16
mov
pop
or
fisttpl
in
mov
mov
outsb
and
dec
sti
dec
inc
imul
push
stc
imul
dec
xchg
fmull
jle
addr16
sub
lods
popf
jno
clc
push
and
out
outsb
mov
mov
xchg
xchg
pop
mov
push
jle
ret
cli
shll
sub
mov
push
pop
push
sbb
jecxz
sbb
sub
sbb
add
or
sub
rolb
vandps
push
cmp
stos
test
jecxz
xchg
xchg
movsb
pop
enter
pop
sub
leave
xchg
xor
sbb
mov
insb
fs
mov
adc
test
mov
test
cmpb
aad
cmp
jl
add
sbb
add
dec
outsl
lds
outsl
aad
mov
push
jne
xor
test
xchg
lret
jbe
leave
dec
or
dec
and
in
inc
xchg
fistl
push
mov
mov
mov
jne
fwait
es
xor
sub
enter
or
lahf
and
cmp
dec
pop
roll
sti
dec
loopne
lahf
ljmp
loopne
jecxz
cmc
test
repz
aam
push
out
outsb
jne
jbe
push
xor
dec
loopne
or
adc
inc
and
push
and
xchg
sbb
sbb
push
sub
jb
xor
push
cld
cmp
sub
cwtl
xor
add
fmuls
out
or
arpl
sar
ficoml
andb
push
test
call
into
jns
mov
insb
iret
add
fistpl
and
push
pusha
pop
jbe
sbb
pop
mov
mov
pop
repnz
stos
xchg
cmpsb
inc
shrl
jae
imul
mov
mov
dec
xor
mov
aaa
addr16
mov
adc
clc
dec
sti
xorb
sbb
lds
and
push
dec
mov
jl
sbb
cmpsl
call
and
and
je
xor
cmp
mov
jecxz
sbb
push
pop
pop
and
stc
jns
hlt
sub
ja
pop
dec
arpl
dec
xchg
add
pop
stos
lods
mov
mov
sub
rorl
fmull
xchg
pop
push
and
dec
gs
mov
aad
dec
inc
and
push
push
jl
negb
xor
xchg
or
test
imul
fstps
mov
push
pop
icebp
pushf
xorl
or
xor
dec
dec
clc
mov
hlt
sbb
xchg
inc
fwait
and
sbb
mov
dec
inc
pop
in
adc
push
test
enter
into
cmpsl
sahf
mov
inc
stos
rcrl
inc
and
mov
ss
roll
out
inc
popf
jo
fnstsw
popl
dec
pop
pop
mov
mov
arpl
cmp
int
ret
xchg
das
xchg
orb
clc
cli
inc
jge
or
jmp
das
leave
or
or
jg
outsb
fnsave
lcall
mov
mov
mov
mov
imul
push
push
or
cwtl
lahf
les
movsl
shl
outsb
cmp
jnp
imul
mov
pusha
cltd
and
sub
xor
shlb
mov
pop
add
or
xchg
enter
iret
fnsave
cmp
inc
inc
popf
pop
jle
movsb
fs
jp
jo
pop
je
push
in
rcr
rorb
push
pusha
repz
push
inc
in
sbb
clc
es
stc
repz
jge
mov
fimuls
cbtw
fwait
xchg
fidivrs
call
loop
cmpl
mov
ljmp
loope
mov
fldt
xchg
mov
mov
mov
mov
mov
out
adc
cmp
mov
or
mov
fldcw
mov
cmp
mov
xor
pop
jo
mov
sub
add
mov
or
stos
rol
mov
fldcw
sub
mov
or
mov
je
outsl
mov
inc
es
pusha
jmp
mov
dec
enter
arpl
lret
enter
insl
out
addr16
stos
mov
fsubrl
addb
xchg
dec
loopne
xor
sbb
and
and
aam
jle
mov
out
pop
les
cmpsl
cmp
sub
aam
mov
lret
push
xchg
mov
cli
sbbl
mov
mov
inc
sarl
inc
or
pop
dec
mov
and
inc
lcall
icebp
push
sbb
or
mov
push
out
shlb
xor
xchg
out
aaa
jo
xor
xchg
out
inc
cmc
cli
cmp
cltd
lcall
int
cmpsb
and
adc
loope
lret
inc
xor
mov
push
hlt
into
out
push
push
dec
cmpsb
xlat
pusha
adc
jnp
mov
ficoml
mov
jns
lods
stos
jbe
and
xor
nop
adc
movsl
dec
lret
add
aam
popf
push
pop
xor
call
push
test
pop
out
sub
es
lds
div
sub
sbb
ljmp
jbe
jp
into
push
test
test
out
xchg
lret
cwtl
dec
das
adc
test
jmp
inc
mov
cmp
cmp
pop
fincstp
mov
inc
enter
add
xor
sbb
testl
ds
fsubr
inc
cli
pop
scas
mov
inc
lret
or
inc
inc
js
out
and
aad
jp
xchg
out
jns
ljmp
popa
mov
add
and
xor
pop
mov
xchg
std
scas
and
mov
imul
in
xchg
jmp
out
cmp
push
out
mov
add
lret
mov
out
leave
xchg
and
cwtl
clc
unpckhps
pushw
mov
push
mov
jp
aas
rcrl
or
jo
mov
aas
push
xor
add
scas
andb
idivl
fsubs
push
jae
pop
lahf
mov
xor
inc
cmpsl
icebp
push
jnp
pop
insl
out
push
mov
sti
cmp
push
jl
hlt
xchg
add
orb
dec
pop
loopne
ss
add
arpl
dec
jns
xchg
rorl
aas
push
mov
and
lret
or
pop
xchg
mov
sti
mov
ja
fmull
xchg
dec
xor
inc
mov
adc
add
fimuls
es
aaa
mov
pop
imulb
xchg
or
mov
insb
int
add
push
add
pop
pop
out
sub
fbld
psubb
lret
jl
les
sub
aam
fs
dec
and
cmpsl
sbb
mov
xchg
lds
push
test
ljmp
add
xchg
sarl
mov
in
sbb
jle
jnp
cwtl
sub
push
jnp
shll
int
or
push
sub
pop
or
or
fwait
repnz
mov
repnz
mov
arpl
std
cmp
sbb
dec
ja
or
cltd
inc
hlt
outsl
and
sarb
and
stos
lahf
outsl
pop
and
lret
add
mov
inc
rolb
mov
sbb
pop
jae
mov
out
loope
outsl
inc
jne
and
loopne
jp
inc
aam
pop
lock
adc
pop
lret
sbb
mov
add
add
xchg
sub
sbb
gs
dec
lcall
lods
add
data16
fbld
dec
fwait
aas
dec
inc
inc
fidivrl
loop
jb
push
xlat
xor
push
jecxz
mov
arpl
cld
fs
fmull
dec
insl
and
add
adc
aaa
pop
std
fs
xchg
add
jbe
inc
mov
mov
shlb
test
clc
mov
js
pop
lods
aad
push
xchg
sti
bound
jne
cld
les
adc
cld
push
in
xchg
mov
or
stos
fsub
pop
push
cmp
call
push
cmc
jl
sub
loop
xchg
dec
pusha
das
mov
imul
enter
jbe
lret
cwtl
shr
xor
jg
outsl
xchg
fwait
sti
push
push
or
rolb
xchg
dec
sahf
iret
ljmp
cmpsb
mov
in
lock
repnz
sarb
test
lcall
sub
jbe
cltd
mov
ja
dec
cmpb
push
mov
dec
jle
cltd
xchg
mov
inc
imul
dec
ret
insb
ss
or
add
es
sub
faddl
pop
mov
jb
aad
addr16
rcrb
sbbl
stos
push
sub
ror
mov
adc
or
in
jae
xchg
jbe
int3
inc
push
add
cmp
jecxz
inc
ror
inc
cmpsb
add
add
popf
jl
pop
pcmpeqb
xchg
test
sbb
push
cmp
ds
stc
add
add
and
cmp
sahf
sub
into
adc
push
lahf
es
out
scas
ds
fmuls
fildll
or
mov
repz
int
pop
aas
testl
pop
pop
lahf
aad
int
cmp
ficomps
sbb
les
push
scas
jo
and
fsubr
testl
cmc
mov
mov
or
hlt
or
shrl
lret
pop
idivb
cmpsl
aam
insl
scas
xor
cmpsl
add
ficomps
xor
pop
pop
scas
push
ss
insl
scas
adc
addr16
pop
pcmpgtb
outsl
adc
push
mov
inc
and
test
push
cs
xor
and
sbb
xor
xor
outsl
pop
jb
pushw
fcoml
and
cld
fbstp
mov
in
mulb
and
xchg
xchg
lock
insl
and
mov
rcr
call
daa
adc
js
and
sub
push
and
mov
rcrl
mov
rorl
shll
jno
test
out
aas
push
or
rolb
cmp
in
ljmp
divl
mov
in
mov
mov
sbb
int
test
fs
loop
xchg
cmpsl
inc
dec
es
ffree
and
decb
mov
scas
and
cli
outsb
xchg
fiaddl
mov
iret
jbe
out
addr16
jecxz
sbb
ret
es
xchg
stos
aaa
cs
or
xchg
aad
sahf
and
lods
pop
adc
lret
jl
sbb
stc
addr16
enter
popf
or
ss
int3
repnz
mov
jmp
fsubrl
dec
jge
dec
pop
test
aaa
or
js
mov
pop
aam
sub
and
mov
mov
pop
mov
mov
or
mov
hlt
lea
stos
add
imul
mov
andb
mov
lods
dec
testb
xor
jge
cli
inc
cwtl
sub
insb
push
jp
mov
mov
std
jne
push
ds
sarb
pop
xor
das
movsb
ret
rclb
cwtl
fucomip
xchg
jne
ret
cmpl
inc
push
pop
sbb
aas
adcb
cmc
push
or
subb
repz
push
sti
aam
movsl
shll
dec
xchg
and
imul
bound
cmp
outsl
imul
xor
cli
mov
mov
jns
orb
jmp
mov
xchg
jo
sbb
popl
xchg
icebp
adc
fwait
mov
and
adc
jae
cmc
inc
pop
sbb
push
xlat
jecxz
fisubl
add
in
jge
jge
shlb
lret
or
mov
mov
add
shrb
mov
in
test
or
xchg
call
mov
push
pop
scas
sbb
cmpl
inc
enter
add
andb
lods
scas
call
push
std
jnp
outsl
in
aad
out
jecxz
push
cs
fcomp
pop
mov
test
mov
inc
sbb
ret
mov
sub
or
daa
and
call
das
mov
cmp
les
cwtl
adcb
out
push
or
aaa
dec
mov
movsb
or
jo
sub
insl
sub
adc
or
test
dec
ret
fst
test
and
or
push
call
pusha
adc
jmp
out
test
inc
xor
mov
mov
adc
jne
ds
xchg
mov
dec
ret
mov
insb
add
js
xor
pop
insb
push
adc
rorb
push
xorb
rcl
lods
movsb
scas
dec
aaa
das
flds
jp
mov
add
add
or
outsl
jbe
divl
and
dec
lock
out
out
cwtl
mov
or
nop
add
cmpsl
pop
shl
repz
fs
cmp
pushf
in
js
mov
or
dec
testl
in
arpl
push
sub
pushf
jmp
push
xchg
sbb
pop
repnz
mov
leave
lea
scas
adc
rolb
adc
add
leave
shr
in
xlat
orl
lea
pop
dec
insl
jnp
mov
outsl
xor
mov
ds
xchg
aaa
push
inc
cwtl
sub
in
or
fnstcw
jle
adc
jbe
push
mov
iret
add
mov
stc
jmp
testl
loop
cmpsl
xchg
dec
test
test
or
sbb
movsl
xor
aad
cmp
and
pop
movsl
ret
inc
sbb
es
and
orl
sub
cmc
push
sbb
mov
fprem1
jno
inc
push
mov
mov
xor
js
dec
mov
ret
xor
adc
jae
test
mov
ljmpw
add
rcrb
xor
imul
xor
mov
xor
fcoms
xchg
push
mov
mov
fnstcw
mov
push
and
stos
pop
push
mov
mov
mov
aas
movsb
lods
and
inc
testl
test
dec
shl
fxch
jne
loop
notl
xchg
mov
and
mov
sub
lret
gs
ret
js
bound
dec
cld
push
xchg
or
mov
ret
cwtl
mov
jle
push
pop
jo
out
sub
jne
or
sub
adcl
outsl
sub
lcall
push
loopne
pop
fwait
and
xchg
pushf
sub
aad
jo
cmpsb
sbb
xchg
js
xchg
aad
out
mov
ljmp
test
icebp
jmp
pop
jne
cmpl
mov
adc
lods
sub
mov
adc
lea
arpl
mov
jnp
push
and
mov
insl
sub
jp
sub
ljmp
int
add
cmp
sbb
sbb
dec
bound
push
pushf
pusha
pop
addr16
sti
pop
adc
pop
fwait
push
adc
xchg
inc
cmpsb
pop
lock
inc
cmpl
sbb
push
sbb
fisttps
jge
mov
push
stos
popa
sbb
bound
test
lret
cmpsl
mov
lahf
repnz
or
imul
jo
pop
stos
stos
sbb
inc
dec
add
sarl
push
movsl
xor
xchg
adc
js
push
mov
xor
lahf
add
scas
cld
in
mov
xchg
sub
fistpll
inc
xlat
xor
adc
xor
mov
push
jle
popa
xchg
in
test
xchg
stc
mov
mov
mov
mov
imul
jo
repnz
jecxz
inc
add
insl
xchg
sti
insl
aam
xchg
jno
xorb
push
loope
push
mov
mov
inc
mov
into
repnz
pop
mov
add
lret
mov
mov
mov
jb
lods
dec
fadds
loope
jp
mov
xchg
and
shrl
pop
adc
jmp
and
cmc
imul
add
sub
mov
movsl
dec
push
add
jbe
test
aaa
mov
movsb
xlat
out
jo
fs
js
xchg
test
jae
test
push
fdivl
fisubl
push
mov
testb
pop
fsubl
and
jbe
mov
aad
xor
pop
ficompl
mov
push
mov
inc
inc
lret
out
dec
adc
mov
popl
push
cmp
dec
loopne
cmp
fwait
push
jg
push
rolb
push
mov
fcmovne
hlt
in
mov
mov
pushf
push
dec
loop
push
daa
sub
sub
cmp
inc
scas
xor
inc
pop
add
aam
repnz
jns
xor
mov
mov
dec
insb
hlt
mov
xor
popa
sbb
pop
xor
jge
push
rorl
loope
add
test
mov
pusha
sahf
xchg
mov
rorl
cli
pusha
lahf
shll
rcll
int3
lret
clc
test
aam
pop
jno
or
outsb
pop
stos
cmp
scas
sbb
adc
dec
addl
lea
add
jmp
sub
adc
test
fwait
cltd
rclb
dec
push
lcall
rol
sub
cmp
iret
lret
es
in
addb
out
dec
or
xlat
and
dec
jbe
xchg
aad
and
outsb
and
or
or
push
cmp
jp
and
stos
mov
sahf
xchg
jno
push
addr16
out
jmp
mov
enter
enter
and
insb
jne
insb
adc
imul
stos
xor
ljmp
test
sahf
in
add
xchg
leave
push
jne
andb
push
pop
outsl
mov
jb
or
xor
in
and
inc
lret
jecxz
add
addb
sahf
and
in
arpl
data16
lret
cmc
shll
cmp
xor
inc
mov
xor
xchg
fldt
mov
clc
adc
mov
adc
lods
mov
dec
pop
pop
shrb
insb
cmp
jbe
and
lret
pop
fucomp
adc
cmp
sti
xchg
or
rcl
inc
popa
popf
xor
popf
aaa
xor
int
and
push
mov
dec
test
cmpsl
inc
insl
mov
pop
push
add
imul
jg
mov
cmc
lret
and
adc
cmp
mov
daa
bswap
sbb
lock
fcomps
fs
ja
loopne
loope
inc
dec
je
adc
movb
xor
stc
push
rcl
popf
adc
jns
pop
mov
sbb
pushf
inc
jae
mov
data16
pop
pushl
lret
sarb
subb
pusha
ficoms
push
push
and
xor
sub
mov
cmc
pop
mov
sub
and
xor
mov
aam
addr16
enter
lahf
nop
das
in
shl
xchg
test
inc
cs
mov
push
in
add
clc
in
daa
jo
fadd
mov
bnd
dec
int
jns
pop
pop
or
dec
loope
pushf
sub
mov
clc
gs
clc
xlat
cmpsl
sub
cmp
or
dec
push
mov
mov
cs
pop
mov
jecxz
sti
sub
sbb
mov
mov
mov
movsl
fisubs
jae
leave
and
cmp
je
js
test
mov
je
repz
ficoms
arpl
inc
mov
enter
jmp
test
cmp
cmp
pop
and
or
jae
lcall
cmp
shl
mov
fnstenv
xchg
mov
sti
aas
loopne
pop
ljmp
and
stos
xor
cmp
daa
add
test
push
xor
iret
or
cs
loopne
or
clc
or
outsb
dec
inc
jne
sbb
push
and
adc
push
push
mov
or
stc
iret
in
pusha
cmc
insb
mov
out
mov
stos
stc
outsb
pushf
pop
sti
jnp
inc
outsl
push
dec
adc
jmp
xchg
mov
es
scas
inc
in
cld
ljmp
out
add
test
dec
mov
xor
or
leave
jne
pop
shrb
xor
xchg
mov
loopne
sahf
test
jp
mov
dec
shrb
test
mov
xor
test
sbb
rclb
push
jnp
push
mov
dec
adcb
mov
in
inc
sub
inc
mov
adc
outsl
call
imul
pushf
fisubl
dec
or
loope
dec
scas
push
push
std
in
cmpb
adc
pop
xchg
es
lock
mov
es
and
pop
or
roll
or
xorl
fldt
ds
inc
rcr
sarl
xchg
les
cmpsb
xor
mov
xor
sub
sbb
andb
add
imul
ret
mov
out
dec
xor
cmp
leave
mov
xor
ja
lret
or
popa
jo
dec
shl
mov
popf
xor
popf
or
push
and
fadds
clc
loopne
mov
repz
dec
punpckhdq
fcoms
mov
ret
jmp
test
nop
xchg
ja
sub
push
loop
adc
shl
xchg
out
add
icebp
or
dec
lock
pushf
lret
sbb
js
pop
js
fst
jg
mov
dec
repnz
or
adc
lret
sub
xor
and
faddl
out
popf
dec
loope
imul
jno
das
insb
jle
fnsave
test
mov
call
in
cmp
cs
aad
mov
ret
xchg
push
dec
je
jmp
inc
nop
fstl
lds
movsl
cmp
movl
xor
cmpb
or
and
jg
cmpsl
aas
mov
xchg
adc
popa
fsub
stos
jae
sub
icebp
mov
test
pop
push
sbb
mov
pop
movsb
and
xchg
daa
mov
popf
mov
pusha
mov
insb
sbbb
psrad
and
sub
sbb
cmpsl
icebp
dec
ja
and
pop
inc
ljmp
popf
add
ljmp
inc
adc
add
dec
xor
addr16
aas
fistl
add
jnp
and
out
or
sbb
bound
jp
js
xchg
pop
adc
pop
insl
inc
xchg
jb
lods
mov
fcmovu
lret
stos
test
add
xchg
test
cmc
push
fstl
pop
lret
jae
mov
pusha
xchg
outsl
cli
dec
cmp
repz
and
cmpsl
out
sub
dec
sbb
xor
imul
adc
out
push
xor
cmc
cmp
jbe
push
push
mov
dec
and
pop
add
ja
dec
insb
mov
xchg
in
fwait
cmp
insl
arpl
int
inc
aad
mov
ja
ds
mov
pop
jecxz
xchg
aas
out
pop
shrb
or
jl
add
aad
pop
add
jmp
pop
nop
xchg
push
movsl
and
out
mov
dec
or
xchg
mov
mov
shll
sbb
push
stos
push
push
and
lock
int
enter
xchg
cltd
out
mov
test
sbb
icebp
jle
jbe
mov
xor
decb
das
mov
and
jle
pusha
xor
xor
xlat
mov
add
imul
mov
xchg
enter
in
clc
aad
pop
nop
mov
stos
xor
ljmp
fs
lds
je
mov
scas
sub
lret
lods
sarl
push
in
jl
xor
push
adc
adc
inc
mulb
add
sub
aaa
js
xlat
test
stos
push
or
and
cmp
jne
fisttpll
out
int
shrl
and
pusha
jae
fcoms
xchg
lret
jecxz
out
mov
jbe
scas
jns
popa
push
lods
cmpsl
out
daa
testl
jne
mov
sbb
xor
or
sub
insl
outsl
jecxz,pn
xchg
xchg
pop
in
jmp
scas
jmp
inc
stos
or
neg
sti
xchg
push
push
xchg
or
mov
pop
jl
xor
sub
or
adc
xor
mov
hlt
cmpsb
stc
inc
scas
enter
into
das
mov
repz
xorl
dec
je
mov
mov
imul
mov
fidivrl
std
push
loope
popf
sbb
test
cwtl
jb
and
mov
pop
and
addr16
push
das
push
shlb
mov
scas
sub
pop
mov
mov
xchg
adc
popf
pop
popf
imul
roll
mov
mov
adc
adc
pushf
in
shrb
mov
fnstsw
andb
sti
adc
sbb
inc
movsb
jg
mov
int3
les
pop
test
and
mov
das
or
dec
add
negl
imul
adc
mov
push
ret
je
int
cld
mov
cmpsl
adc
mov
and
test
inc
mov
shrl
pop
outsl
mov
ljmp
ror
or
inc
icebp
test
jecxz
mov
lret
mov
imul
dec
pop
mov
sbbl
dec
cmpsl
movsb
les
mov
pop
dec
push
fwait
roll
lea
daa
gs
jmp
pusha
ds
stc
fisubs
sbb
ljmp
pop
ss
loope
mov
mov
xor
xchg
sbbb
mov
add
nop
sbb
cld
data16
xchg
mov
ljmp
add
and
dec
mov
mov
fdivrs
test
aaa
cld
loop
ja
insb
pop
cld
ss
daa
ljmp
out
cltd
push
cmc
dec
or
sbb
test
lds
xchg
bnd
sub
pusha
lods
leave
pop
mov
in
mov
dec
xchg
out
aas
insl
xchg
add
sub
jmp
push
in
jmp
sub
and
lahf
mov
inc
push
push
sub
mov
push
inc
nop
mov
cs
loop
clc
lahf
jge
mov
sub
fwait
mov
movb
outsl
push
mov
push
mov
dec
lret
or
sub
aas
pop
mov
out
jg
cmp
xchg
and
mov
les
inc
in
xor
ja
add
adc
push
jle
shlb
in
sub
mov
mov
push
fcmovnu
xchg
je
pop
mov
fcompl
cmpsb
es
iret
adc
bound
cmc
sub
and
pop
sub
inc
cmp
mov
aam
mov
fcoms
pop
daa
nop
mov
fsubrl
mov
test
add
jne
icebp
pusha
pop
mov
inc
int3
test
lds
lods
dec
pop
arpl
pusha
sbb
sbb
sbb
shr
lods
cmpsb
xchg
mov
setge
notb
dec
jb
xchg
fnsave
mov
adc
cmp
pop
jbe
fldenv
enter
cmp
adc
movsb
add
dec
jg
lds
xlat
mov
sbb
dec
or
fisttpl
in
es
dec
add
in
sbb
or
scas
cli
mov
and
pop
dec
fdivrs
daa
nop
repnz
pop
daa
xor
jp
sub
jp
mov
add
mov
pop
mov
or
stos
ds
je
push
mov
shll
sub
fldt
sar
cmp
pop
mov
add
xor
adc
arpl
pop
xchg
out
mov
shlb
repz
adc
adc
xchg
mov
scas
ljmp
xchg
fisubl
mov
sbbb
xchg
jp
push
call
rcrl
push
inc
adc
and
jg
arpl
jle
aaa
hlt
cld
jno
add
popf
pusha
sbb
dec
fscale
aaa
fwait
mov
xor
or
cmc
icebp
add
xchg
int
leave
pop
rorb
test
cmp
or
fdivs
xchg
outsl
xor
ss
scas
adc
and
push
pop
sahf
es
sub
sti
sarb
push
nop
sbb
xchg
test
callw
aad
add
inc
cs
lret
cwtl
aad
jecxz
mov
ret
sub
in
mov
mov
xchg
fs
dec
mov
test
xor
mov
lods
push
mov
inc
pushl
aaa
lods
negl
lds
stos
into
jmp
mov
mov
stc
push
push
mov
xchg
pop
mov
loope
pop
in
scas
jge
push
loop
mov
fsubs
insl
scas
clc
icebp
xor
cmc
ds
into
cltd
stos
add
adc
mov
cwtl
lods
or
sbb
mov
aaa
mov
pop
cmp
push
adc
mov
adc
stos
xchg
addl
cmp
test
mov
lahf
dec
xchg
inc
cmp
push
ss
or
xchg
incl
lea
push
mov
push
cld
movsl
pop
jns
push
int
mov
push
cmpsb
clc
imul
jmp
cli
lds
inc
sbb
pushf
cmpsl
addr16
mov
and
ljmp
popf
xor
push
cmc
ret
cltd
dec
adc
cld
adc
sbb
add
lret
push
outsb
xor
loop
emms
pop
sub
mov
add
out
addb
repz
sbb
mov
sbb
mov
rorb
adc
xor
pop
xor
int
push
ret
pop
lahf
xor
je
sub
mov
lods
aaa
lcall
loope
pop
es
fs
in
into
dec
xor
mov
mov
mov
push
pop
jne
pop
inc
cwtl
aaa
inc
cli
out
dec
push
insl
and
das
frstor
cmp
lret
fwait
pop
jo
jno
lea
push
hlt
out
cmp
mov
sarl
sub
cwtl
in
cmp
mov
shlb
add
leave
mov
negl
stos
in
xor
std
sub
les
repz
jl
jnp
adc
gs
sub
and
pop
mov
call
fistpll
or
call
in
xchg
push
sahf
xor
xor
das
cmc
mulb
movsl
pop
loop
pop
dec
mov
dec
inc
daa
or
ret
xor
cwtl
aaa
mov
jp
adc
ds
mov
out
cmpl
fildl
sub
dec
repnz
sub
stc
pop
ja
cmp
lcall
push
push
daa
cmc
sub
rcr
push
mov
add
mov
mov
mov
jne
and
out
or
jg
rcrl
inc
and
js
pushf
outsl
aad
inc
aam
xorb
pop
adc
or
test
cli
dec
or
cmpsb
popa
inc
and
inc
push
movsl
leave
sbb
je
loope
xor
int3
mov
in
and
or
mov
xlat
dec
xchg
ret
sub
pop
or
data16
stos
je
add
sub
mov
in
sti
jg
lcall
repnz
push
test
push
and
sbb
into
xchg
rolb
loop
add
addl
dec
sbb
jns
pop
into
iret
cwtl
outsb
pop
mov
sbb
or
insl
iret
fcom
mov
test
jg
outsb
xor
roll
jo
sbb
lcall
mov
xchg
iret
sub
xlat
shl
or
cs
loop
addr16
push
pop
sahf
shlb
jne
lock
ja
fadd
mov
sub
mov
push
xchg
push
rorl
lret
jmp
jecxz
cs
jnp
add
ja
lea
pop
repnz
popl
fdivs
jp
push
stos
ds
mov
out
testl
push
xor
lods
xchg
loope
inc
outsb
pop
xchg
xor
cltd
push
adc
adc
cmc
icebp
push
lea
push
xchg
gs
in
dec
leave
insl
push
jp
popf
mov
sbb
mov
cmpsl
loop
cld
out
aaa
push
shll
xor
or
dec
and
aad
push
mov
pop
sub
adc
test
lods
movsl
inc
jo
jg
pop
fsubr
cmc
lcall
loope
hlt
pop
mov
sbb
scas
and
es
mov
add
aam
jnp
xor
mov
dec
and
sarb
mov
loop
arpl
scas
call
push
mov
int
push
std
xchg
rorl
lret
or
outsl
fnsave
imul
cmp
mov
xchg
out
popa
adc
aad
sub
jno
ljmp
test
mov
loopne
pop
cwtl
xchg
adc
sbb
sbbl
mov
sub
popf
push
mov
aaa
loop
addb
aaa
push
mov
enter
sbb
adc
std
jp
xchg
mov
and
adc
std
pop
dec
push
rcrb
mov
jmp
inc
outsl
jbe
loopne
negb
jne
mov
movsl
das
test
push
frstors
jp
test
stos
call
popf
imul
mov
push
sbbl
insl
add
cmp
cs
cmp
pusha
out
ret
jmp
jmp
sub
cmp
add
pop
lret
loop
sub
mov
aas
ficompl
in
out
sub
bnd
out
jg
cmp
lahf
andl
sbb
jne
xchg
xchg
and
addb
pop
adc
pop
fwait
pop
dec
cli
out
dec
out
test
cld
dec
data16
es
sbb
push
in
ja
movsl
outsb
or
cltd
mov
movl
xchg
cmc
ficoml
pop
cmpsl
pushf
xchg
xor
push
xlat
roll
mov
fwait
pop
aam
test
ljmp
bound
aas
test
or
mov
sub
xor
push
mov
into
pop
test
dec
ss
in
jg
jmp
and
jo
sahf
into
fiaddl
add
scas
push
popa
icebp
cmp
xchg
ss
xchg
inc
repz
ret
fwait
push
pusha
pop
je
mov
xchg
or
lret
sahf
add
push
xor
arpl
xor
lea
test
mov
lcall
adc
clc
pop
cwtl
in
outsl
jo
cli
pop
and
sbb
les
dec
rclb
pusha
aam
lock
and
sbb
or
out
fidivl
mov
sbb
repnz
ljmp
jl
dec
push
xlat
out
imul
in
push
cwtl
mov
cmp
lock
nop
test
mov
jle
or
inc
out
subb
dec
dec
pushf
fnstcw
lea
movsb
lret
shrb
fsts
add
push
gs
xchg
xor
jp
push
fbld
inc
mov
mov
sbbb
clc
pusha
fmulp
pusha
pop
out
movsb
stos
addb
mov
dec
cmp
repz
pop
lahf
and
aad
cmp
les
movsb
inc
sbbl
pop
and
adc
and
xchg
pushw
dec
xor
adc
mov
imul
xchg
ret
dec
or
xlat
sub
fistl
fldt
dec
push
ja
mov
or
movsl
out
aaa
in
push
outsl
adcl
insb
pushf
ficompl
dec
stos
adc
mov
cmp
and
fcom
push
notl
jmp
in
leave
stc
aaa
push
addr16
das
in
out
xor
sbb
cmc
cmc
cli
mov
dec
dec
idivb
pushf
push
dec
adc
daa
push
mov
in
push
mov
fwait
cmp
outsl
mov
xor
xor
js
outsb
shlb
sub
ret
jae
ss
cli
cmovae
ds
sub
inc
mov
push
sbbl
pop
dec
fs
mov
shl
dec
cmp
add
fistl
xchg
or
int
mov
movsb
xor
fisubl
pop
jmp
and
popa
idiv
ja
aam
mov
and
and
jmp
popa
add
scas
sbb
sarl
pop
pusha
push
imulb
imulb
repnz
xor
pushf
out
mov
sbb
jg
cmpsw
pop
std
int
hlt
pushf
les
xor
shll
dec
ficomps
push
sub
and
in
mov
hlt
movsb
adc
sahf
sub
insl
into
xchg
mov
addr16
or
mov
ljmp
ret
mov
sub
cmp
les
hlt
push
sti
fs
mov
mov
test
scas
pop
lcall
cmpsb
fisubrs
stc
xor
fwait
scas
pop
pop
adc
ret
cwtl
loopne
lret
sbb
sbb
xor
mov
lock
xchg
xor
xlat
xchg
mov
and
jmp
sbb
dec
insb
mov
cmc
mov
or
pushf
and
xchg
xchg
in
div
in
rolb
adc
mov
hlt
bound
xor
mov
icebp
ljmp
rorb
mov
xorb
es
loopne
loopne
insl
es
rcrb
xor
push
jo
rorl
not
pop
xchg
add
adc
sbb
stc
xchg
xor
sbb
jle
xor
cwtl
cld
push
mov
std
ja
call
pop
daa
push
fbstp
and
aad
ja
xor
in
int
push
sub
mov
shlb
jno
jne
cmp
mov
bound
rcll
mov
push
das
jle
daa
lods
out
orb
mov
inc
jbe,pt
inc
les
test
jle
jb
sbb
mov
xchg
jo
dec
or
ret
sahf
cmp
int
push
push
adc
decl
lods
xchg
loopne
and
mov
add
push
out
jp
cmpsb
jge
ret
xor
pop
dec
popf
data16
sahf
loope
xchg
xchg
scas
sub
daa
lret
dec
ss
les
mov
jecxz
les
cwtl
es
jmp
shll
ret
jae
add
jmp
jns
inc
fisttpll
adc
mov
xor
mov
lcall
sub
xor
nop
sahf
leave
sub
add
testl
or
adc
push
lret
xchg
outsl
ret
push
pop
mov
ret
int3
adc
mov
sti
mov
add
pop
nop
pushf
mov
mov
push
mov
xlat
dec
mov
stc
lods
dec
xchg
mov
inc
into
xchg
repnz
xchg
mov
shld
mov
ja
movsb
pop
push
pop
push
les
pop
sbb
mov
and
pcmpeqw
loope
arpl
hlt
inc
or
inc
jg
jp
jg
push
dec
jno
cld
jo
lods
xor
push
inc
mov
pop
sbb
aam
test
dec
cwtl
mov
and
fdivp
sub
sub
ss
in
je
mov
and
addb
testl
ja
mov
clc
fiadds
repnz
lods
dec
cmp
mov
stos
cmp
mov
lds
lock
imul
or
jle
jnp
js
insl
jle
fwait
cmp
mov
push
daa
add
sub
ja
cli
stos
pop
out
xchg
loope
inc
sbb
lcall
push
mov
xlat
push
stc
push
cvttps2pi
push
hlt
mov
bound
lret
adc
fnstsw
sbb
xlat
pop
popf
gs
iret
and
iret
jbe
and
lock
xor
lods
jo
pop
fisubl
std
lret
mov
mov
add
mov
dec
cmpsb
bound
sub
fmull
push
mov
xor
pop
fldcw
outsb
cmp
es
xor
insl
pop
int
aad
daa
or
sub
sbb
hlt
sahf
movsl
pop
std
fmull
sti
ljmp
stos
cmpsb
fstp
mov
out
sbb
mov
xchg
js
out
stos
mov
mov
fwait
dec
jnp
xor
adc
jecxz
sbb
stos
out
or
mov
daa
and
adc
aas
sub
aas
fldt
xchg
xorb
pop
adc
cmpsl
enter
mov
dec
xor
es
ret
push
adcl
in
int
dec
scas
sbb
aam
sbbl
test
sbb
mov
mov
lock
cmp
jle
sbb
test
xor
aas
add
stos
inc
ret
mov
ja
js
aaa
push
mov
lds
xchg
or
int
sbbb
adc
fistl
xchg
cmp
pushf
push
mov
push
aas
out
cmc
aaa
aam
pop
add
mov
nop
iret
inc
out
mov
sub
lods
mov
xchg
cmpl
jge
sarb
loopne
lods
sub
and
rorl
mov
frstors
mov
out
adc
or
or
lahf
jmp
or
stc
dec
xchg
das
cmpsl
xor
mov
sbb
inc
sub
icebp
mov
insb
in
mov
ret
cli
sbb
xlat
or
shll
into
pop
das
leave
mov
in
imulb
inc
push
xor
jmp
push
scas
imul
loop
inc
cmp
fsubr
test
pop
push
dec
mov
scas
shlb
mov
jbe
pop
ficomps
pop
xchg
sbb
lcall
mov
adcl
js
les
jg
mov
push
sbb
sub
out
cmp
add
add
fwait
imul
xor
inc
sub
mov
push
push
mov
sbbb
push
jle
and
mov
jae
imul
jge
dec
mov
adc
inc
or
icebp
movsl
imul
mov
push
sbb
dec
stos
scas
pop
cmpsb
inc
inc
nop
les
push
pop
pop
out
cmpsl
enter
ficompl
adc
jl
ret
shrb
lock
inc
jecxz
dec
pop
push
mov
jmp
jle
sahf
scas
out
cmp
into
out
lret
js
jg
inc
movsb
fwait
in
repnz
adcl
cltd
outsb
dec
mov
adc
push
inc
pop
negb
xchg
mov
scas
out
sub
call
sbb
icebp
inc
mov
pop
rorl
sbb
xor
imul
sbb
scas
add
sub
mov
mov
mov
stos
cmp
popf
sub
mov
mov
add
mov
and
dec
pop
push
push
idivl
xor
mov
dec
mov
insb
testb
lds
xchg
stos
mov
xor
push
inc
or
cmp
lods
mov
mov
lret
xor
pushf
stos
sbb
lahf
pusha
aad
cs
mov
jg
into
shl
mov
aad
push
movl
lods
xor
orl
int3
jmp
rolb
andl
sbb
shlb
mov
jp
dec
negl
cs
sbb
push
push
pushf
add
lods
adc
mov
sbb
xchg
xchg
pop
sub
push
cld
addr16
cmp
mov
jae
push
jne
icebp
or
mov
fistpl
sbb
jne
add
stos
xor
cmp
mov
mov
mov
es
es
subb
lods
outsl
mov
ljmp
lds
rorl
mov
jmp
aas
push
outsl
in
lret
ret
jno
pusha
xlat
mov
aam
dec
lea
adc
xor
imul
in
jno
xchg
sbbb
inc
daa
adc
outsl
sbb
out
call
sub
cli
xlat
imul
sahf
int
and
dec
inc
in
ljmp
pop
adc
push
jmp
loopne
add
clc
jl
lahf
add
int
add
sub
out
loop
lods
push
ret
push
mov
mov
sub
inc
xor
add
aam
pop
or
dec
jle
dec
sub
sub
mov
mov
add
ret
xorl
and
sbb
fidivrl
push
sub
or
inc
shl
jns
sub
adcb
mov
xchg
cwtl
push
cli
add
cwtl
int3
push
xchg
mov
iret
out
shll
test
push
cmpsb
cmp
mov
rcrl
daa
imul
ljmp
push
adc
loopne
ss
mov
pop
lcall
mov
bound
leave
or
xchg
cmpsb
add
adc
jge
repz
ds
lahf
jo
adc
in
mulb
xchg
mov
repz
xchg
lock
jg
xchg
repz
mov
stos
iret
or
adc
inc
testb
sarl
cmpl
cli
and
xchg
dec
fldcw
jge
xchg
fwait
pop
jno
push
bound
int3
shl
dec
popf
push
cmpsl
lret
mov
sub
or
dec
andps
popa
roll
adc
lock
mov
stos
mov
add
fmul
sbb
mov
lods
mov
out
jmp
shll
adc
inc
aaa
jnp
dec
cs
popa
mov
jle
scas
adc
jae
jo
xor
pop
stos
dec
dec
stos
jo
cmp
rclb
sbb
lods
jae
or
adc
faddl
sub
movsb
fcomip
ljmp
dec
in
ret
dec
loopne
loopne
pop
cmp
in
pop
lds
xor
jmp
adc
imul
int3
gs
in
lahf
push
jbe
mov
sti
sub
cmp
fcmovnu
lods
pop
cmp
cltd
repz
xchg
insb
lret
xchg
and
aad
and
aas
fwait
les
int
js
add
aas
aaa
jp
rorb
fabs
xor
push
pop
ja
mov
mov
cmpb
sub
dec
mov
in
mov
push
pop
push
loop
mov
jmp
mov
xor
pop
xchg
js
icebp
sub
push
loopne
inc
fldenv
mov
cmp
pop
jg
inc
sbb
test
sbb
bound
jg
adc
pop
ret
dec
mov
andl
dec
fcmovu
push
jns
xorb
in
pop
mov
shrl
je
sub
aaa
pusha
xor
inc
push
out
xchg
pop
dec
add
bound
lods
mov
mov
adc
mov
inc
call
mov
dec
lods
pop
sub
or
push
je
adc
out
daa
fsub
jmp
adc
popa
imul
ss
mov
mov
movsb
jno
out
cmp
xchg
nop
push
leave
lret
push
fsubrl
push
add
fiadds
mov
movsl
sbb
ljmp
fsubr
out
mov
pusha
xlat
sbb
daa
aad
imul
mov
xchg
xchg
mov
out
scas
mov
pop
loopne
outsb
popa
fdivl
scas
imulb
ficompl
cmp
mov
imul
add
sub
mov
lret
int3
pop
add
ficomps
les
loopne
jmp
dec
addr16
ficomps
xchg
jl
inc
xrelease
inc
mov
lahf
mov
das
mov
into
filds
mov
mov
enter
add
xor
pop
or
clc
int3
aas
lods
mov
in
enter
adc
push
mov
in
fiaddl
fbld
out
mov
push
push
je
imul
stc
test
push
sbbb
mov
int
adc
ja
sbb
xchg
inc
fstpl
inc
jge
lock
dec
add
lods
xchg
xor
hlt
add
push
js
and
sub
rcll
into
or
and
add
pop
mov
decl
mov
mov
test
aas
mov
pop
sbb
push
mov
inc
mov
ja
into
mov
pop
mov
mov
test
push
lret
jae
gs
xor
dec
sarb
vpunpcklqdq
hlt
jl
ljmp
push
mov
int
fcmove
sbb
push
fldl
popa
add
pop
lods
add
xor
sbb
shll
imul
addr16
and
dec
lcall
xor
push
jg
mov
and
jo
in
mov
das
mov
shll
mov
sar
aas
push
inc
xchg
dec
push
inc
sub
adc
int3
pop
cs
nop
mov
and
dec
xchg
dec
cld
ljmp
add
lahf
repnz
std
push
jbe
lret
fs
fs
pop
std
bound
lods
dec
xor
cmp
xchg
inc
jbe
mov
dec
add
jp
enter
filds
mov
shrb
mov
sub
js
add
inc
roll
sbb
bnd
dec
xchg
xchg
push
mov
adc
aaa
js
and
outsb
in
movsb
cmp
lret
mov
pop
cltd
push
and
pop
dec
sbb
jmp
adc
shrl
bound
stc
mov
xor
movsl
in
lret
lods
shrl
xchg
bound
imul
dec
test
jle
lods
lods
out
rcll
sub
out
leave
ds
xchg
cmp
dec
mov
dec
das
pop
sbb
and
mov
mov
cmpsb
sub
ds
lods
mov
aaa
push
lods
xchg
movntps
sar
push
cmp
lock
or
js
or
xchg
add
mov
lret
add
sub
mov
ds
sbb
arpl
push
addl
mov
js
jp
outsb
call
fcomi
push
xchg
inc
shlb
adc
movsl
sti
das
fdiv
sub
scas
mov
ds
xor
test
mov
into
movsl
mov
out
and
iret
lods
lret
arpl
adc
lret
dec
int
in
mov
mov
test
pmaxsw
jle
jp
mov
jecxz
test
gs
jle
jnp
adc
pop
dec
sbb
loope
fimuls
adc
jmp
in
mov
hlt
stos
mov
fidivrl
clc
cltd
out
ret
inc
das
sti
je
add
in
xor
loopne
push
in
push
fstl
xchg
scas
mov
mov
jae
pop
mov
push
adc
shl
lods
mov
pop
hlt
lret
xlat
push
jge
add
aam
jmp
aaa
lock
or
mov
cmp
mov
dec
or
mov
inc
ljmp
jp
popa
and
imul
out
lds
mov
jge
sbb
popf
repnz
jmp
push
shrl
pop
fisttpl
out
adc
shr
jge
sahf
pusha
push
loopne
push
int
test
dec
lcall
adc
outsb
fs
xor
loop
xor
mov
arpl
loopne
loope
mov
mov
outsl
push
add
push
inc
pop
test
push
out
nop
inc
or
imul
add
lahf
mov
cmp
mov
loop
shl
clc
mov
fistps
ljmp
je
loop
inc
imulb
pop
mov
pop
push
jns
loopne
add
repnz
mov
in
pop
iret
or
leave
sbb
lds
and
stos
fsts
clc
sarb
or
insb
dec
cmpsb
mov
into
imul
js
out
and
stos
loop
xchg
mov
cld
jo
xchg
xor
inc
fdivr
scas
cli
movl
repnz
sbb
push
mov
xor
push
xlat
cli
movsl
jge
xor
std
sub
imul
arpl
daa
mov
aad
jmp
cmpsl
fstp
cmp
xchg
ljmp
add
xchg
xor
adc
mov
rolb
imul
rorl
inc
mov
jle
cmpsb
stc
push
fistl
adc
jecxz
push
mov
push
fldcw
nopl
adc
jno
cld
fwait
imul
fildll
daa
nop
invd
bound
test
pop
rorb
cmp
cwtl
insb
dec
gs
or
test
ret
push
or
cld
leave
inc
loop
mov
push
imul
fidivrl
fisubrs
lret
sbb
xchg
inc
aaa
adc
or
in
jns
shlb
xchg
jb
cmp
xor
out
mov
jmp
das
push
icebp
sub
sbb
stos
iret
outsl
dec
mov
std
cmp
xchg
mov
out
rol
xchg
call
aas
dec
mov
cmc
out
scas
dec
out
xchg
call
je
push
xorl
leave
xchg
outsl
inc
rcrb
insl
push
dec
loopne
je
sbb
push
das
jo
mov
dec
stos
out
inc
das
dec
rep
out
or
ss
in
das
pop
push
ja
insl
cmp
nop
lcall
ret
pop
push
mov
sbb
adc
dec
lret
lods
xor
sub
das
insb
pmovmskb
inc
les
pop
mov
scas
xor
insb
pop
pop
jge
jmp
or
inc
pop
add
xorl
gs
pusha
mov
mov
mov
mov
insl
jl
sbb
loop
add
out
mov
outsl
sub
or
jmp
ret
ss
out
ret
out
je
call
test
mov
imul
sbb
daa
cld
mov
cmpsl
gs
mov
stos
ret
cli
movsl
es
mov
dec
dec
mov
dec
push
cmp
test
sub
mov
aad
jnp
dec
icebp
mov
cmp
sti
gs
pop
sub
pop
fildll
adc
fmul
imul
rorb
cwtl
adc
dec
shl
push
jl
fstpt
addl
test
push
nop
ret
push
or
arpl
inc
pop
xor
mov
cld
cmp
add
push
pop
adc
outsb
nop
outsb
jnp
xchg
mov
mov
inc
jae
call
stos
fidivl
scas
nop
push
daa
inc
std
mov
int
mov
mov
pop
mov
jns
add
jle
in
insb
inc
xor
sbb
stos
mov
dec
mov
movsl
fisttpl
cmpsb
fldenv
test
rcrl
mov
mov
xchg
lret
jnp
cli
test
jno
int3
mov
lods
adc
rorl
or
xlat
mov
repnz
sub
jl
sbb
pop
sbb
out
inc
jge
pop
jg
in
sbb
pushf
loope
and
sbb
mov
movsl
loopne
mov
in
cmpsb
shr
mov
mov
inc
jp
xchg
jg
mov
out
divb
pop
ja
mov
cmp
push
sbb
adc
enter
mov
xchg
loop
mov
pusha
ss
bound
sbb
aas
jecxz
mov
aam
rcll
fcomi
shlb
sbb
rcll
mov
test
ficoml
push
adc
push
or
cli
push
cld
std
or
lret
mov
stc
xor
xor
cmp
cld
and
xchg
lods
js
jmp
cs
mov
jp
add
inc
sbbb
int
iret
stos
mov
faddl
add
cmp
cmp
pop
inc
push
dec
sahf
xchg
mov
add
push
or
nop
outsb
fmulp
cmc
push
pop
cmp
push
pavgb
js
push
jae
ret
dec
mov
leave
dec
jmp
pop
cmp
jno
popf
or
cmp
jmp
imul
std
hlt
incb
aad
mov
lds
repz
fisubrl
xor
cwtl
xchg
mov
daa
sub
pushf
loope
mov
inc
dec
jg
stos
mov
cltd
fistps
mov
pop
adc
inc
popa
sub
in
mov
and
fstl
sbb
mov
dec
fnstcw
loop
push
popf
fcoml
loop
sbb
xor
xor
xor
test
lods
pushf
ret
pop
sbb
mov
mov
fldcw
and
loope
stos
add
in
add
repz
jo
push
imul
int
mull
fnstsw
jl
mov
into
loopne
ss
je
jne
enter
mov
aad
pusha
insb
ss
cwtl
xor
ss
push
imul
lret
test
cmp
pop
pop
mov
mov
in
mov
and
add
jb
sub
mov
jp
in
fidivrl
shll
leave
iret
mov
push
inc
rorb
arpl
out
xor
dec
sbb
outsb
imul
mov
cmp
int3
stos
imull
jmp
in
das
xchg
cs
mov
dec
icebp
xor
movsb
jg
stos
or
jnp
ret
sbb
add
jle
push
test
lahf
jg
cmp
push
push
or
test
pop
xchg
cmpsl
fistps
dec
push
or
mov
lcall
out
pop
loop
fiaddl
or
mov
loopne
mov
sbb
and
out
gs
cld
shl
movsl
xchg
xchg
cmp
adc
mov
jb
pusha
jns
xlat
jp
lods
fisubl
xchg
fcomip
sub
and
sahf
add
mov
test
int3
xor
pop
mov
jnp
call
mov
icebp
fstpl
pop
pop
add
in
xchg
js
shlb
ljmp
sbb
data16
shll
mov
pop
aam
sahf
mov
xor
jecxz
lods
test
xchg
pop
mov
and
pop
in
mov
ret
push
and
or
adc
aad
jo
mov
sbbl
lods
shrl
and
jl
notb
lock
jmp
mov
frstor
adc
xchg
js
iret
imul
sub
mov
xor
lods
inc
add
sub
or
mov
sub
fistps
lret
dec
ss
jb
mov
dec
push
push
fildl
fidivrl
stos
in
test
dec
lea
jl
sbb
int
lds
mov
mov
jae
ljmp
into
pop
sub
sub
inc
dec
pop
pushl
jbe
push
xchg
jne
stc
in
push
rcll
adc
stos
ljmp
add
or
xchg
jne
pushf
or
dec
test
mov
stc
imul
jne
sti
dec
push
xchg
cmp
stc
out
and
add
push
sbb
sbb
mov
shlb
aaa
outsb
lret
and
pushf
out
or
rcl
sub
adcb
hlt
insb
xor
push
sub
lods
cmpsl
cmp
pop
sub
leave
adc
fstl
mov
xchg
cmc
fildll
jae
pop
sbb
rcl
aad
xchg
xchg
push
push
sub
call
dec
jge
lock
repnz
xchg
inc
les
iret
cmp
mov
pop
xor
cmp
pushf
pop
push
lahf
stos
sbb
and
subb
shll
xlat
xchg
scas
subb
jge
or
inc
jl
and
adc
add
dec
gs
in
jmp
adc
out
push
mov
cli
cmc
jmp
lcall
stc
ffree
cmpsb
ret
ds
ds
xor
sbb
iret
nop
pop
adc
aam
add
mov
popa
popa
adc
fiadds
or
in
dec
push
jge
jbe
and
fstpl
adc
add
inc
or
repz
cli
add
jo
pop
xchg
arpl
fcomps
xchg
test
mov
pop
aad
in
fs
lcall
pop
shrb
fcoms
jb
and
lea
sbb
sahf
mov
mov
fisubrs
fcoml
cmpsl
push
aas
lret
insl
cmp
movb
mov
repnz
loopne
add
pop
inc
jecxz
out
sti
or
cmp
push
xor
and
mov
ljmp
repnz
mov
in
fstl
jo
jno
mov
and
repnz
jbe
push
stos
rol
pop
sahf
mov
stc
int
and
pop
repz
dec
loopne
push
sub
adc
bound
sbb
or
xchg
or
subl
lret
dec
sbb
and
je
aaa
gs
mov
nop
icebp
dec
jge
dec
cli
cmc
jmp
xchg
aad
xlat
int
push
jl
xlat
gs
fcmovbe
addb
fistl
mov
sti
xchg
lret
in
mov
mov
orl
sub
jge
gs
push
jno
leave
andl
bound
push
addb
push
inc
pop
dec
add
xchg
adc
xchg
xchg
faddp
incl
cli
jp
iret
lcall
or
loopne
cmp
out
cmp
jg
popf
mov
scas
adc
scas
pop
xor
test
jl
jle
imulb
dec
jle
cmc
push
xchg
aam
jb
fsts
xor
jg
sbb
jnp
imul
inc
cli
push
and
adc
das
push
lret
lods
test
movl
aam
add
pop
js
aam
xchg
xor
data16
out
push
fwait
or
xchg
in
xor
or
dec
jg
imul
out
xchg
jno
xchg
jb
or
pop
cmp
test
and
pop
lods
dec
sub
adc
or
ss
ljmp
movsl
xchg
out
sbb
sbb
adc
dec
sbb
dec
mov
addl
fwait
jl
sbb
test
cmp
mov
lret
mov
lahf
or
outsl
jmp
cmpsb
pop
loopne
loopne
dec
dec
loop
outsl
fnstcw
int
cmc
ss
scas
mov
mov
data16
inc
pusha
pop
xor
mov
push
mov
push
js
sarb
data16
leave
add
sub
fldt
jbe
mov
pop
idivl
sbb
or
mov
adc
sbb
cltd
lcall
out
out
or
das
scas
lea
mov
mov
aaa
jecxz
stos
xchg
adc
mov
imul
in
cmpl
ljmp
inc
ss
xchg
out
cmp
imull
aaa
lcall
call
jno
add
and
mov
pop
push
insb
or
pop
jb
pop
or
cmp
pop
inc
call
shl
adc
fnstcw
andl
gs
pop
rcll
insb
pop
pusha
dec
mov
clc
sub
incb
clc
mov
xchg
lock
es
in
mov
cld
xor
repnz
mov
mov
int3
add
add
or
repnz
das
adc
call
sahf
jb
jle
jbe
fiadds
sub
jbe
lds
cmp
cmp
xorl
mov
fsubs
cltd
mov
in
jns
divb
imul
int3
xchg
scas
cmc
outsl
test
adc
jae
jl
fmul
fidivs
fstps
pop
lock
movsl
into
in
lret
cltd
aad
ljmp
jecxz
rcr
into
jb
adc
xor
push
push
div
pop
dec
mov
and
sbb
cmp
inc
mov
push
ds
sbb
push
shrl
fdiv
sbb
jp
gs
test
inc
mov
ss
std
popa
mov
sub
xor
orl
fisubs
push
outsb
stc
jg
pusha
popf
adc
pop
nop
or
mov
out
icebp
inc
in
sbb
test
xchg
int
cltd
arpl
scas
fwait
lcall
test
out
push
imull
pushf
lret
sbb
xchg
cmpsl
gs
nop
or
lcall
sub
rorb
aam
jecxz
aam
sbb
fidivrs
js
das
adc
pop
inc
shrb
in
pop
mov
mov
jne
stos
jecxz
ret
pop
aaa
xor
mov
push
and
and
shrb
pop
xchg
sub
shrl
negl
lock
pop
push
adc
lret
push
push
insb
pop
cmp
out
sub
dec
fcoms
dec
mov
aam
push
and
dec
aaa
xor
jne
xchg
and
out
xchg
sub
das
add
out
or
les
in
fistl
or
xor
out
cmp
sbb
das
cmp
xchg
pusha
ret
loopne
mov
sarb
movsl
stc
xchg
mov
aaa
gs
pushf
sbb
lret
push
inc
shll
out
js
mov
inc
add
hlt
popa
sbbl
xor
outsl
xor
fimuls
pop
xchg
jge
fs
mov
icebp
mov
insb
xor
dec
push
push
icebp
lds
mov
or
pop
ja
adc
loopne
pop
xchg
add
test
out
adc
or
sub
adc
pop
push
rclb
addl
xor
mov
lret
pop
mov
pop
xor
mov
or
xchg
jecxz
pop
and
hlt
pop
in
repz
adc
xlat
sbb
adc
jl
dec
cli
dec
push
fnstenv
xor
mov
jno
dec
arpl
js
mov
sub
jle
jno
inc
mov
mov
lahf
or
mov
inc
aaa
fistpl
pop
mov
imul
adc
dec
stos
jb
adc
push
hlt
fdivrl
mov
push
sub
addl
dec
jne
dec
int
jle
xor
dec
movsl
pop
test
lods
add
das
jp
lods
mov
sti
add
xchg
decl
mov
fsubrs
pop
pusha
lds
inc
dec
xor
mov
in
in
or
movl
sahf
inc
movsl
jns
add
sub
xchg
push
decb
nop
fucomi
fdivs
mov
test
inc
push
insb
jb
sub
and
jb
dec
imul
lock
pushl
aas
cmp
inc
mov
or
int
loope
pushf
jne
sub
mov
lahf
ss
lock
lcall
push
lods
ss
cli
loop
inc
rorl
out
mov
adc
dec
xor
add
ret
add
into
mov
stc
mov
and
int
mov
mov
shl
lds
pop
fstl
or
jnp
call
js
hlt
es
insl
push
outsb
mov
sti
aas
into
push
inc
sysret
out
ljmp
mov
mov
inc
ja
stos
aas
aad
mov
lcall
vandnpd
pop
popa
ds
out
cmp
push
iret
xchg
xchg
mov
adc
push
sub
dec
outsl
insb
icebp
add
and
jnp
xor
add
or
filds
loope
xchg
leave
je
movsb
cltd
jno
jl
out
rcrb
shr
mov
pop
mov
push
jp
add
or
insl
sub
daa
stos
xchg
scas
mov
cltd
out
inc
stos
push
mov
add
call
dec
mov
lcall
scas
clc
mov
sub
int
adc
dec
mov
add
imul
xor
outsl
cli
ja
mov
jnp
aas
ja
push
fcmove
mov
inc
int3
push
lcall
lods
or
cmp
shufps
test
cmp
lcall
sbb
mov
dec
lea
pop
test
repz
xor
mov
andl
in
loopne
cmp
push
adc
mov
or
jl
pop
pop
jnp
sbb
stos
push
mov
mov
jle
push
fistpl
ret
cmp
dec
sub
cli
push
lods
enter
xchg
inc
addr16
clc
lcall
xchg
les
pusha
sbb
mov
push
jo
push
mov
add
lahf
fsubs
cld
mov
popf
in
out
dec
js
push
shr
dec
fstl
jb
aam
or
addr16
add
lock
je
push
mov
dec
repnz
pop
add
push
stos
jp
mov
xchg
stc
jmp
clc
push
add
insb
pop
jnp
sub
xor
daa
cli
negb
pop
pop
xchg
out
fisttpl
mov
mov
add
js
fisubrs
or
outsb
and
inc
lods
jns
in
imul
add
int
push
cmc
dec
adc
push
pushl
call
pop
loopne
aaa
test
aaa
and
jnp
aad
jg
cld
xchg
es
add
or
outsl
int3
push
fwait
fs
add
lea
mov
adc
in
and
pop
jecxz
xchg
push
lds
pop
loop
add
jns
dec
sbb
mov
mov
push
add
or
pop
fwait
lods
sbb
sub
mov
mov
aas
adc
inc
mov
lret
push
int3
jbe
lret
sarb
mov
sbb
adc
sub
and
popa
cmpb
jnp
jle,pt
enter
and
fs
mov
jnp
sti
and
inc
and
push
and
jmp
arpl
cmpl
movsl
mov
stc
add
cmp
add
lods
fisubs
push
mov
mov
hlt
ljmp
sbbb
sti
jl
jnp
jge
mov
shrl
jno
cwtl
repz
fdivs
nop
or
pop
es
push
mov
fs
or
jmp
sub
and
push
xchg
add
lods
or
insl
push
inc
adc
nop
stos
in
mov
adc
jne
fiaddl
and
into
push
scas
xchg
mov
out
cmp
and
jmp
mov
cli
inc
push
nop
lods
xchg
mov
pushf
shrl
outsl
push
lret
xchg
inc
in
call
inc
mov
lock
push
pop
xor
loop
cwtl
mov
sbb
xchg
or
ret
ret
jae
lret
in
mov
out
js
mov
cmc
aas
daa
cmp
stc
inc
lret
popa
mov
ds
mov
lcall
inc
inc
pop
subl
xor
cmp
loopne
jo
int
cmp
addr16
fldcw
fistl
jno
or
sarb
dec
cmp
or
repz
imull
iret
arpl
jnp
ss
lret
or
xor
jo
movl
pop
es
sbb
xchg
test
xchg
dec
push
cmp
ret
test
mov
mov
in
add
xor
sbb
test
ljmp
call
aam
jbe
sbb
fst
push
sub
scas
push
pop
ja
sti
daa
addr16
int
push
jns
mov
xor
adc
jnp
xchg
fs
subb
sub
in
lcall
xor
iret
or
lds
or
bound
popa
sarb
push
inc
ljmp
loopne
sub
aaa
leave
xchg
mov
nop
push
fisubs
and
icebp
pop
xor
bound
pop
hlt
jo
les
dec
outsb
sahf
add
mov
out
ret
imul
adc
stc
hlt
mov
mov
orl
jae
add
jne
je
mov
mov
mov
jp
lea
daa
mov
repz
movsl
pop
mov
cltd
inc
lret
stos
push
cmc
or
test
outsb
jge
lcall
xor
or
add
jle
jns
push
push
lods
fcmovu
lds
push
add
fiadds
dec
and
fisttps
xor
mov
push
adc
sub
push
mov
dec
xorb
push
mov
scas
mov
dec
cwtl
loopne
xchg
sub
or
and
mov
and
movlps
ficoms
mov
mov
jg
pop
pushl
popf
mov
std
mov
pop
shlb
push
lahf
add
imul
sub
inc
clc
bound
xchg
inc
fstpt
pop
jno
shrb
cmp
mov
mov
xchg
dec
lods
jle
out
addb
jne
xchg
psraw
or
sub
push
repz
stos
lcall
fildll
out
dec
cwtl
in
mov
cmp
repz
jo
jmp
ja
jmp
fiadds
xor
out
add
mov
fwait
mov
add
imul
out
push
or
jns
cmpsb
mov
fistpl
mov
adcl
fbstp
mov
pop
jle
lods
cmp
call
mov
xor
bound
jmp
sbb
push
mov
adc
out
push
clc
jge
inc
roll
ds
shl
sbb
cmp
push
mov
out
adc
ja
jle
aad
mov
lret
mov
mov
push
push
push
mov
xchg
lods
mov
notl
in
mov
and
bound
lods
jae
repnz
mov
clc
filds
and
scas
cmp
jge
push
mov
mov
ljmp
or
adc
jae
stos
inc
mov
or
neg
mov
popf
in
out
lock
repz
pop
jp
adc
mov
dec
stos
imul
pop
or
fchs
inc
xor
mov
imull
test
idivb
inc
push
rolb
imull
push
mov
mov
rclb
cmp
cmc
pop
pusha
sub
sti
xchg
arpl
shr
cmpsl
mov
push
rorb
sbb
dec
dec
aaa
inc
inc
call
or
enter
lcall
sbb
and
ds
pop
neg
neg
out
aaa
insb
xlat
and
addr16
bound
fldlg2
out
out
jmp
push
clc
sahf
mov
pop
shll
imul
pop
mov
stos
push
test
loopne
ds
cmpsb
outsl
sbb
rcrb
xor
test
ret
outsl
push
scas
adc
les
mov
addl
and
test
push
es
jp
mov
inc
push
mov
push
mov
or
lds
cmp
pop
cmp
or
sarb
cmpsl
or
ljmp
and
mov
pop
mov
add
popf
xchg
stos
adc
dec
push
insl
dec
cmp
mov
pop
sbb
add
fdivs
and
lods
fldln2
arpl
fldenv
aas
sbb
mov
popa
jl
push
xor
or
push
lea
xchg
aam
icebp
pop
push
xor
jp
xor
mov
and
inc
mov
sarl
add
mov
push
mov
orl
or
jmp
aad
xchg
mov
out
int3
mov
stos
mov
fbstp
mov
cmp
popf
xor
sub
mov
adc
mov
out
adc
mov
xchg
bound
and
mov
xor
out
ja
cs
fstpl
aas
rcll
pop
jne
push
cmp
test
add
out
arpl
outsb
add
fnstsw
inc
push
cmp
fiaddl
pop
and
cmpsl
testl
dec
fstl
mov
mov
push
inc
dec
push
sub
xchg
les
pop
cwtl
les
cmpsb
sbb
jbe
lods
push
or
cmp
cmc
cmp
fcmovbe
and
xchg
rol
jno
adc
push
push
pop
mov
sbb
lret
pop
lock
mov
or
dec
sbb
pop
ret
push
stos
clc
icebp
rclb
xchg
ds
dec
fdivl
test
add
pop
aad
dec
mov
outsb
incl
dec
mov
pushf
ja
lods
mov
fidivs
jns
jno
repz
movsb
movsl
or
sub
pushf
push
outsl
inc
push
sbb
dec
jne
sbb
pop
fs
push
shlb
cmp
xorps
fdiv
mov
clc
arpl
mov
cmp
pop
mov
dec
jp
xchg
pop
sti
scas
lret
inc
dec
xor
shlb
mov
cltd
cmp
mov
cwtl
pop
xlat
pop
mov
pop
frstor
adc
loope
enter
or
jns
call
in
imul
out
jle
sub
lock
sbb
dec
xchg
cmp
adc
stos
dec
aad
pop
sub
insl
mov
mov
pop
pop
sub
hlt
nop
push
mov
in
cmp
fsts
and
mov
je
adc
outsb
stc
lods
aas
int3
iret
add
loop
xchg
je
jns
addr16
aaa
cmp
dec
andl
dec
aam
xchg
insb
and
shlb
out
cmpsb
inc
mov
push
push
std
push
pop
ficoml
xchg
or
lods
shlb
sub
add
mov
or
pop
lods
add
clc
add
mov
jp
inc
dec
adc
mov
inc
rcll
mov
fdivrl
ja
iret
sub
xchg
fcmovne
test
mov
in
lret
movsl
int3
loope
cmp
cmpsl
fisubs
out
or
loope
out
add
test
repnz
mov
xchg
outsb
xor
fldl
or
stos
xchg
cmp
jnp
aad
mov
fimull
outsl
adc
loope
stos
sbb
stos
jb
fstps
insl
ja
sbb
rclb
fdivs
mov
stos
mov
mov
or
aaa
imul
mov
mov
mov
subb
ss
int3
add
mov
pusha
mov
xorl
xchg
and
and
ss
setno
push
sub
cmp
loopne
outsb
pusha
adc
adc
pusha
mov
xorb
add
or
jne
push
sti
sub
mov
or
lods
jmp
leave
test
jo
mov
inc
jmp
lods
mov
xor
in
testb
sbb
fwait
push
psubd
js
popa
call
lds
inc
xchg
pop
and
jbe
mov
cmp
push
lea
xor
pop
jne
test
cmp
mov
or
cltd
fcoml
scas
jl
cmp
or
bnd
ljmp
cmpsb
sbb
adc
mov
sub
std
insl
jbe
adc
mov
leave
aas
call
loop,pt
sub
sbb
bnd
roll
insl
sarl
int
xchg
sub
adc
and
icebp
ljmp
rol
fildl
or
leave
adc
outsb
dec
pop
inc
stos
int
sub
dec
ja
movsb
mov
imul
pop
cwtl
repz
loop
cmp
mov
loopne
rcll
lds
out
xchg
pop
test
stos
or
out
sbb
fisttpll
xor
out
xlat
les
cmpsb
and
fcmovnbe
popa
jnp
lods
xchg
fs
scas
mov
jmp
sub
or
sub
aas
xchg
xor
adc
or
hlt
xchg
xor
repz
add
dec
mov
dec
jns
add
aaa
leave
movsb
stos
sti
jp
jno
jno
push
mov
rorl
cld
hlt
dec
je
xchg
lahf
aad
sub
lea
ffreep
cmp
ja
stc
mov
xchg
aas
arpl
stos
sub
daa
jno
fwait
mov
mov
test
in
imul
jp
jecxz
mov
scas
jg
call
popa
dec
fstpt
repnz
or
insb
mov
xchg
jmp
dec
xchg
sbb
inc
adc
or
dec
push
mov
mov
das
sbb
rcrb
int
popf
cmc
aaa
and
jmp
mov
push
idivb
sub
sbb
aas
mov
and
pop
nop
test
icebp
aaa
fsubl
jae
std
mov
sbb
cmpsb
inc
adcl
and
mov
les
fucomp
dec
push
add
push
sub
stos
repnz
jno
stos
pop
sbb
cmp
dec
popl
pop
ljmp
lock
xor
push
push
mov
jns
mov
dec
jne
mov
and
add
sub
xorl
inc
inc
stos
jb
mov
mov
aaa
nop
je
mov
cmc
shrb
jge
dec
mov
jmp
in
mov
rolb
pop
xchg
inc
or
or
push
lds
mov
mov
sbb
jge
psubusw
fistpll
add
sti
lcall
xchg
mov
jg
xor
jmp
pop
loope
jne
aaa
mov
shl
loop
cmp
jge
mov
sub
into
sub
fsubs
icebp
push
mov
push
stos
pop
movsl
dec
sti
mov
mov
sbb
cmc
shrl
popf
in
mov
add
popf
push
test
lock
inc
bound
daa
or
out
inc
mov
dec
lds
xlat
inc
jmp
lahf
cmp
idivl
sbb
adc
fmul
lret
insb
dec
loope
popa
mov
test
shlb
push
inc
inc
scas
subb
addr16
cmp
and
add
andl
aas
imul
add
es
jle
outsb
dec
pop
push
sbb
mov
popf
dec
and
xchg
cmpsl
xlat
push
outsl
lock
nop
fcomip
push
push
push
mov
jp
mov
pop
sbb
ret
mov
mov
cmpsb
test
jge
fwait
movsl
rcrl
push
rcl
pop
mov
or
ret
test
cmp
cmp
loopne
fs
push
inc
push
cmp
test
pop
sbb
hlt
in
mov
inc
mov
adc
incb
mov
xor
lcall
sub
popf
inc
enter
loop
lods
arpl
fbld
push
enter
lcall
pop
jne
adc
mov
and
or
nop
insb
in
cwtl
fwait
dec
lea
xchg
xchg
out
push
in
push
mov
push
push
fnstsw
jbe
add
fmuls
push
cmpsl
in
lcall
xor
push
xchg
ficompl
aam
cmp
pop
mov
and
mov
lods
inc
out
jmp
jl
popa
in
and
test
cmp
jl
add
mov
leave
pop
pop
jno
movsb
pop
mov
mov
cmp
ret
pop
jp
or
inc
popa
out
mov
loop
mov
mov
add
mov
aas
out
sbb
and
pusha
jp
dec
sarl
shrl
jne
stc
push
imul
and
jg
sahf
nop
mov
lods
aad
add
and
jp
or
daa
fwait
xor
sub
sbb
sub
and
mov
pop
in
ret
repnz
xor
ret
pushf
adc
cmp
int
lret
jg
test
push
inc
xor
fs
inc
sub
xor
jge
pop
lods
dec
sahf
add
fisttpll
fnsave
dec
push
movd
xor
xor
sub
inc
jp
cwtl
mov
mov
xor
int
divb
xchg
mov
dec
out
jb
mov
subl
repnz
clc
pop
scas
jbe
ss
cwtl
aam
mov
cld
pop
aaa
sbbb
std
in
mov
sub
call
int3
ja
ficomps
std
loope
out
sbb
inc
shlb
dec
cltd
iret
dec
rcrb
into
test
push
test
sti
mov
dec
nop
test
jns
pop
add
test
push
cmp
mov
cs
jae
fwait
sub
bound
rcll
fidivrl
ja
enter
imul
jno
loopne
jno
loop
test
mov
sub
fisubrs
adc
mov
imul
sub
lahf
aam
add
cmp
cmpb
inc
aaa
inc
mov
enter
mov
filds
cld
shrl
out
sub
jne
sbb
sbb
push
movsb
loope
mov
pop
leave
push
cli
clc
xor
imul
and
je
andl
sbb
push
jecxz
jg
mov
xlat
cmp
movsl
adc
lret
inc
adc
pushf
push
adc
mov
loope
xchg
dec
ud1
push
mov
mov
movsb
mov
mov
cwtl
xor
call
mov
inc
int
scas
stos
sbb
add
push
repz
xor
cmpsb
pop
les
xor
jb
mov
pop
addl
ret
in
mov
sub
outsb
inc
test
sahf
hlt
cmp
pop
push
push
jns
iret
xor
enter
cltd
mov
aad
and
mov
ljmp
jg
lock
and
mov
inc
or
into
cmp
int3
loope
arpl
jg
sub
push
inc
and
enter
jno
mov
ror
mov
pop
and
pop
mov
pop
call
mov
sbbl
adc
push
ja
add
push
push
push
sbb
dec
inc
cmp
cmp
pop
push
orb
and
jns
pop
mov
sub
fistpl
mov
inc
pop
pop
inc
add
pusha
ret
dec
or
subb
fiadds
pop
lods
cwtl
dec
or
jg
popa
mov
cwtl
adc
subb
daa
mov
cltd
push
push
mov
mov
fidivrl
ficoms
xor
cmpsl
aam
pop
loope
cmp
and
ja
daa
rclb
nop
adc
pop
push
xchg
idivb
pop
mov
jne
std
cmp
xlat
sahf
or
cmc
in
sub
movsb
sbb
andb
sub
lock
fstpt
mov
and
lahf
and
adc
inc
push
es
fstl
in
les
gs
fs
mov
mov
mov
in
lds
mov
xchg
jno
adc
cli
lahf
adc
lods
dec
lds
je
and
nop
test
loopne
mov
cmpsl
jl
sbbl
jns
push
test
cmp
mov
loopne
loope
aad
sub
dec
out
aaa
push
jo
jno
jge
sbb
outsl
push
push
imul
das
lret
out
cmp
or
pop
std
and
adc
je
jle
push
in
in
iret
loopne
cli
scas
or
sub
inc
outsb
testl
sbb
xchg
int3
and
pop
popa
jne
jno
jb
adc
movsb
je
jl
cli
push
add
sub
movsl
ds
sbb
dec
mov
fistl
mov
jnp
in
pop
and
test
ret
in
in
rcrl
and
popa
inc
and
dec
data16
lret
mov
rcrb
cmp
rcrb
shll
sbb
in
push
std
out
outsb
lods
sbb
ja
cmp
dec
mov
sbb
adc
arpl
mov
push
cli
imul
add
jae
sbb
test
jle
fbstp
mov
pop
xor
mov
push
inc
fistl
inc
lret
add
mov
xchg
cltd
out
inc
ljmp
jmp
dec
push
mov
cmp
jg
pop
push
cmc
add
sub
je
adc
mov
adc
cmpsl
imul
sbb
jecxz
test
sbb
lds
int
mov
cmpsl
cmp
mov
inc
jae
inc
aas
inc
and
ds
sub
cmp
sub
loope
vmovss
lret
jge
mov
in
pop
sub
sar
xchg
adc
jmp
jle
inc
fwait
mov
inc
sbb
dec
mov
jnp
pop
dec
sbb
das
fcmovnbe
shl
push
mov
into
jmp
popf
mov
xlat
sti
and
out
inc
nop
movsb
jle
cmpsl
ret
pop
inc
xchg
fdivl
mov
cmc
adc
jge
out
dec
repnz
out
jg
psraw
mov
lahf
add
sbb
aam
pop
aaa
dec
pop
movsl
movsb
mov
pop
mov
pop
and
lds
xchg
repnz
xchg
rorl
inc
ret
jmp
adc
mov
jmp
xchg
lret
daa
ja
pop
ss
sub
mov
aas
in
int3
ja
mov
add
loopne
pop
ret
xor
roll
push
insl
ret
inc
scas
popf
mov
mov
push
push
sub
mov
insl
popf
in
loope
inc
cs
cmpl
ret
xchg
arpl
xchg
adc
mov
cs
add
mov
ljmp
inc
sub
cld
sti
sub
or
shlb
xchg
jae
sub
sub
adcl
jae
fwait
add
aad
inc
ret
adc
cmp
daa
icebp
insl
lcall
ret
push
and
and
popf
adc
mov
aas
jne
jl
mov
or
fcoms
push
add
out
rorb
repz
jge
arpl
add
out
je
add
pop
hlt
sbb
ja
ljmp
paddusw
pop
cmp
movsb
dec
cmp
movsb
pop
mov
sub
test
xor
mov
cmpsb
negl
mov
shl
adc
sub
lahf
stos
inc
mov
loopne
jno
aaa
sbb
inc
push
sbb
sti
push
xchg
cmp
cmp
adc
test
dec
xchg
daa
rorl
pusha
mov
add
and
dec
xlat
or
push
xchg
mov
fsts
mov
sub
or
push
lcall
pop
lahf
pop
sub
xchg
mov
or
cmpb
mov
popa
push
gs
fcmovnb
in
sbb
sbbb
out
and
cmpsl
pop
adc
js
mov
loopne
pusha
nop
xchg
sbb
repz
sbb
pop
in
mov
rcll
hlt
sbb
leave
shrb
je
sub
call
push
jbe
or
sub
cld
add
std
fwait
aaa
jmp
adc
iret
jno
jle
jae
sbb
push
push
or
mov
inc
icebp
lods
dec
ffreep
cmp
sbb
scas
mov
call
sti
pop
push
cwtl
stos
dec
sbb
jge
mov
int
jbe
jp
mov
jle
cmp
xchg
mov
popf
jmp
lods
je
mov
jnp
pop
iret
push
in
icebp
sub
add
aas
xchg
int
push
insb
jmp
dec
push
int
push
lcall
pop
lock
sbb
dec
xchg
push
in
push
int3
xchg
add
mov
mov
pcmpgtw
testl
dec
sti
mov
int3
mov
jo
cli
aaa
add
mov
aad
dec
cmc
mov
xlat
int3
cmp
shlb
cwtl
sarl
jb
testb
test
fdivr
mov
inc
fdivrs
push
sbb
movsb
fiadds
xchg
push
mov
lock
xor
scas
movsl
dec
pop
enter
ficoms
testl
and
icebp
lock
daa
outsb
adc
push
xchg
sbb
fstpt
ja
aam
mov
arpl
push
push
pop
xchg
lcall
lcall
fmuls
jne
mov
addr16
daa
xchg
adc
sub
mov
mov
fldln2
into
or
aas
pop
mov
leave
add
lcall
jo
fildl
sti
and
adc
rolb
push
bound
fidivrs
mov
jmp
sub
imul
push
leave
cmc
addb
cmpsl
pop
test
push
xchg
jge,pt
out
add
enter
pop
xchg
mov
enter
mov
inc
mov
xlat
and
and
mov
mov
stc
aas
jno
or
inc
jo
int3
jg
clc
push
inc
outsb
cmpsl
xchg
inc
movsl
push
test
add
loopne
sub
popf
xchg
pop
sahf
and
cld
inc
push
pushf
pop
adc
adcl
push
jle
aad
add
xor
les
mov
mov
sti
subl
out
pop
or
xchg
pop
shll
mov
inc
loop
orb
cmpsb
and
lret
dec
or
dec
jb
pcmpgtd
pop
sub
push
push
jo
inc
sub
jnp
dec
loope
hlt
and
test
sbb
mov
add
mov
outsb
lock
rcll
lea
xor
cmp
add
bound
fidivrl
mov
je
dec
out
adc
dec
sbb
cmp
inc
xor
mov
cld
clc
add
gs
push
icebp
dec
loopne
insb
mov
rorb
je
ss
jnp
rol
xchg
ja
outsl
dec
cmp
rcr
push
add
in
ljmp
rclb
push
or
and
ficompl
and
pop
stos
mov
aam
mov
or
mov
cmp
or
jae
ret
sub
fisttpl
call
push
lods
jns
aad
mov
jnp
adc
jp
mov
jbe
and
leave
mov
repz
adc
cmp
push
fldcw
and
nop
xor
mov
add
and
pop
xchg
xchg
sub
je
and
cmp
and
gs
dec
pop
stc
dec
inc
gs
and
stos
sub
sbb
push
inc
pop
mov
cmp
mov
mov
sub
out
cmp
mov
pop
pop
xchg
mov
or
ss
sub
and
imul
lahf
or
movsl
push
out
mov
leave
test
mov
dec
addr16
adc
stos
xor
outsb
or
sahf
push
pop
xor
in
pop
jae
xor
std
sub
fnstcw
dec
cs
fdivl
mov
sti
addr16
negl
cmp
imul
pop
mov
mov
add
lahf
aad
cltd
fstl
jge
lods
and
mov
test
xchg
pusha
push
data16
fstps
test
out
mov
lea
pop
push
xchg
ret
ja
icebp
lcall
outsb
addr16
enter
outsb
imul
movsw
enter
cld
lahf
shrb
mov
pop
mov
pop
mov
pop
dec
orl
mov
sbb
sub
pushf
pop
add
jae
stos
sahf
lods
in
test
aaa
cmp
insb
insb
test
or
sar
and
jbe
jo
sbb
push
sbb
xchg
jp
fisttps
out
cmp
incb
lods
jne
in
bnd
test
push
imul
rcrb
popf
popf
sarl
leave
test
xor
mov
test
ljmp
pusha
sbb
mov
dec
jnp
popa
inc
imul
jl
mov
bound
push
and
cmp
in
xor
jns
xlat
dec
dec
stc
pop
add
pop
bound
test
cmp
les
movsl
or
mov
orb
pop
dec
pop
pop
xor
sbb
push
daa
push
stc
xor
maxps
xchg
insb
xor
and
cld
popa
arpl
push
or
pop
hlt
std
xor
pop
pop
lret
sub
mov
out
xchg
inc
in
cmp
jnp
cmp
jae
sarl
jl,pt
roll
mov
stc
adc
scas
aad
sub
fistps
jg
jp
and
movsb
adc
imul
dec
pop
sti
pop
stos
int3
jo
or
and
lcall
adc
int3
jp
loopne
pushf
jns
arpl
inc
mov
arpl
insl
loop
add
insb
in
hlt
lcall
mov
outsb
mov
jg
shl
arpl
movsl
inc
int
loope
rcrl
mov
pop
jns
jmp
inc
adc
insl
pop
cmp
dec
mov
jge
inc
mov
mov
decb
cmp
mov
xchg
mov
jg
fs
outsb
cli
pop
pop
xor
fadds
push
cltd
push
cwtl
jo
mov
cmc
rorl
push
aad
mull
mov
loopne
jecxz
mov
imulb
loop
mov
adcl
xlat
jl
imul
and
stc
call
nop
add
insl
push
pop
cwtl
cmc
push
sub
test
leave
cwtl
mov
jecxz
pop
in
popf
sbb
movsb
xor
mov
enter
insl
and
ret
in
fisttpl
add
add
cli
add
imul
or
aad
ret
stos
in
stos
adc
xchg
es
int
and
pop
mov
test
je
aas
int
dec
cltd
lds
mov
outsb
popa
cmpsb
stos
repnz
scas
xor
sti
les
mov
cs
inc
jns
stos
pop
jmp
daa
or
test
imul
leave
lcall
sub
scas
clc
push
orb
mov
cmp
rclb
jg
lock
int3
jno
jmp
mov
lcall
les
call
mov
xor
push
in
ficomps
jbe
subl
iret
mov
fldcw
sub
fimuls
xchg
cli
insb
lock
adc
mov
mov
adc
out
sub
lcall
cltd
leave
arpl
or
cmp
fdivp
out
sub
jg
or
mov
test
call
lret
inc
icebp
or
push
outsb
pop
ds
test
sarb
das
mov
mov
push
jnp
std
mov
jno
mov
daa
push
loopne
push
jg
jle
int
bound
sub
mov
fistl
jle
loop
insb
pop
test
jns
fldt
add
pusha
int
lock
in
hlt
bound
out
aas
ret
insb
cli
cmc
roll
nop
in
pop
bound
xor
jns
jge
jae
pop
push
test
data16
add
jp
int3
mov
cmp
pushf
outsb
in
in
xchg
out
mov
cs
pop
outsl
fidivrs
data16
cmc
push
jmp
push
rcrb
or
pop
and
nop
lods
cmp
cmp
test
test
loopw
dec
sbb
mov
imul
pop
clc
mov
inc
jp
adc
adc
mov
daa
push
les
or
add
lret
loopne
mov
xor
sub
push
dec
jbe
inc
inc
inc
arpl
jp
push
mov
jb
dec
sbb
and
push
sub
push
mov
dec
sbb
inc
incb
pop
push
cltd
mov
rorl
aad
pop
stc
call
repnz
cmp
rcl
adc
fwait
xor
in
adc
ss
pop
push
mov
sahf
lds
ja
nop
fnsave
inc
cltd
jle
mov
add
sub
test
push
add
mov
or
insl
mov
inc
aaa
cmpsl
cwtl
jle
inc
scas
fs
stos
fstpl
jecxz
repnz
icebp
mov
ret
lret
dec
sub
mov
xor
imul
dec
sbb
ret
call
push
cmpsl
pushf
adc
xor
sbb
ds
sbb
mov
into
adc
xchg
and
nop
icebp
cmp
stc
adc
add
jbe
fmull
push
cli
dec
test
and
ds
loope
mov
out
out
stos
mov
mov
jns
fdivrs
mov
jbe,pt
mov
adc
dec
sbb
adc
sub
lcall
stos
es
mov
push
sti
xor
ljmp
xor
pop
mov
nop
mov
jae
cs
mov
mov
or
imul
ret
insb
inc
xchg
jne
bound
out
outsb
gs
mov
fwait
jecxz
lret
inc
jecxz
aaa
push
pop
xchg
fbld
gs
je
mov
push
dec
or
cmp
jmp
jbe
jae
test
lods
pop
or
das
xchg
outsl
outsl
xchg
inc
pop
jg
or
xchg
movsb
jae
leave
inc
cmp
stc
dec
lahf
cmp
adc
mov
push
in
sbb
fidivs
imul
push
inc
fcomps
push
hlt
sbb
sbb
pop
pop
add
sub
push
inc
lcall
jecxz
cwtl
sub
mov
push
aad
ret
loopne
mov
fldt
pop
addb
scas
jb
mov
imul
cmp
add
shll
push
lds
xchg
xchg
mov
shr
mov
int3
int3
mov
sbb
ljmp
pop
lea
adc
stos
push
outsl
mov
or
push
repz
mov
adc
in
ds
dec
push
pop
mov
cmp
pop
or
inc
rcl
jns
pop
hlt
and
mov
xor
int3
test
into
cs
cld
xor
stos
inc
push
stos
stc
imul
push
dec
movsb
popf
cmp
cmp
in
mov
mov
pop
fmul
unpcklps
xor
jle
lahf
mov
pusha
cld
cmc
test
mov
jecxz
lods
xchg
fnstcw
push
or
push
mov
fmul
mov
int
inc
or
add
xor
cmp
gs
inc
repz
push
enter
and
das
mov
inc
or
ret
mov
pop
push
loopne
aad
xlat
push
test
adc
cli
jle
sbb
lahf
out
lea
shl
in
mov
cwtl
mov
iret
or
dec
mov
outsl
mov
and
pusha
dec
iret
pop
mov
mov
jnp
aaa
in
sti
inc
imul
or
adc
test
mov
cli
out
mov
aas
ret
popf
adc
dec
xchg
test
cmp
lcall
sub
dec
pusha
jno
cmc
in
lods
loope
sbb
sbb
push
xchg
inc
and
cli
std
dec
dec
mov
in
int3
adc
push
outsb
and
repnz
inc
jo
icebp
or
sbb
loope
ret
dec
out
daa
inc
mov
push
div
xchg
cld
icebp
out
jne
inc
add
cltd
loop
add
sbb
fdivs
mulb
mov
loopne
hlt
mov
cmp
push
jmp
std
cmpsl
dec
pop
repz
mov
gs
cmp
dec
insb
cs
xchg
xor
xor
int3
add
cs
add
mov
adc
lret
enter
fdivrs
inc
fnstenv
je
test
data16
imul
ljmp
in
jb
push
call
test
xor
xor
or
xchg
mov
push
jbe
cmp
into
pop
cmp
addr16
pop
mov
add
cwtl
cmp
loopne
sbb
mov
mov
or
xchg
xchg
mov
ffreep
dec
mov
mov
and
push
push
scas
pop
jmp
jnp
movsbl
mov
into
push
gs
insl
daa
in
and
or
push
mov
xor
dec
jae
repz
mov
in
shlb
xchg
popf
adc
movsb
add
push
stos
xor
pop
stos
and
nop
jmp
sti
cltd
jns
inc
pop
ret
repnz
repnz
xchg
fildl
notb
inc
shlb
outsb
stos
mov
jae
jne
adc
jne
xchg
xor
pushf
pop
xchg
mov
push
xchg
inc
test
push
pop
add
mov
cmp
add
adc
punpckhdq
or
xchg
inc
ds
clc
lcall
movsl
inc
mov
pop
cmp
sbbl
jmp
mov
call
mov
enter
mov
push
dec
sbb
lcall
cmpsl
lret
jae
cld
pop
ljmp
jno
scas
add
or
sbb
cmp
ja
dec
aad
push
lret
int3
fstps
jmp
negb
repnz
jp
cld
mov
loopne
out
lahf
cmpsb
ret
mov
pop
sub
mov
mov
aad
inc
stos
setg
sub
mov
in
and
xchg
fistpl
push
stos
ss
call
xor
add
pushf
dec
rorl
pop
push
xor
push
into
cli
add
mov
jbe
fidivrl
loopne
adc
jo
sbb
cli
ljmp
lcall
add
js
mov
xchg
adc
out
mov
add
add
dec
popa
insb
out
call
bound
fwait
out
sbb
hlt
into
mov
cmp
xchg
fidivs
mov
jnp
inc
fnsave
addb
insl
ljmp
xor
outsb
jo
fbstp
cmpsb
fs
dec
rorl
icebp
aam
sbb
pop
div
xchg
and
icebp
jp
das
push
or
xchg
repz
jle
shrb
clc
btcl
inc
push
push
cwtl
push
enter
inc
push
andb
sub
mov
pop
std
into
les
cmp
add
cmp
dec
mov
lds
push
nop
mov
cmp
incb
test
int3
popa
rolb
outsl
cld
mov
ret
mov
jl
addr16
imul
sbb
inc
lods
ja
les
pop
fbld
lods
ds
fbld
mov
xchg
ss
pop
adc
jmp
pop
sub
mov
adc
bound
pusha
arpl
sub
bound
xchg
sbb
lahf
fdivr
or
fs
xor
sbb
insl
subb
pusha
lret
rcr
adc
lods
or
jecxz
dec
enter
cmpsb
push
jns
test
subl
mov
enter
add
and
lods
push
bound
enter
outsb
pop
xor
mov
fmuls
mov
stos
ret
lods
ret
jbe
lods
lahf
xchg
inc
pushf
sbb
pop
cld
xchg
and
cli
addl
in
adc
sahf
subb
arpl
scas
sbb
cmpsl
mov
inc
repnz
pop
call
enter
push
xchg
cli
xor
push
lds
push
xchg
negb
sbb
in
test
xor
jbe
stos
jnp
imulb
hlt
push
or
das
xorl
jecxz
and
lods
cmp
dec
jmp
jo
in
cmp
in
ljmp
push
jns
popf
idiv
xchg
divb
lods
push
pop
shll
dec
pop
mov
or
stos
lods
mov
jno
push
test
out
stos
pushf
clc
int
mov
aaa
mov
fcompl
icebp
mov
mov
ja
jnp
cmc
cld
sub
lock
roll
cmp
stos
call
shl
loop
inc
mov
xchg
inc
xchg
xchg
insl
jmp
and
xlat
xor
aad
push
inc
xchg
pop
mov
jg
lds
mov
pop
dec
xor
inc
decl
lret
movsl
push
dec
hlt
adc
sub
cmp
or
repz
jns
cmp
mov
inc
clc
or
and
push
cmp
xchg
cli
nop
aaa
sub
or
inc
or
cmp
sahf
mov
cmp
xor
insl
mov
pop
std
cld
imul
mov
daa
ljmp
mov
les
fstl
and
sub
popa
int3
jg
sub
mov
mov
ljmp
cmc
pop
lods
mov
lret
push
dec
movsl
push
sbb
add
push
dec
cmp
sbb
sarb
mov
jne
sbb
enter
add
add
leave
out
sbb
mov
shlb
inc
add
fcompl
xor
sti
orl
mov
dec
sbb
in
mov
inc
pop
inc
gs
jno
ret
lds
sub
sub
js
dec
subb
pop
je
iret
out
in
icebp
fiaddl
bound
xlat
out
inc
adc
aad
jle
test
cli
ss
xchg
test
inc
ret
subb
outsl
insl
cmp
dec
lods
jnp
pop
push
jle
add
pop
stos
xor
ds
cmpsb
sarb
mov
push
notb
sbbl
test
sub
lsl
shl
adc
jp
data16
or
cmp
enter
inc
jne
mov
cld
cs
shl
sbb
dec
pop
loope
aas
xchg
fwait
jmp
jne
jbe
adc
stc
mov
stos
insb
popf
movsb
add
xchg
sti
hlt
sub
push
pop
mov
call
inc
leave
fnstsw
sub
dec
int
outsb
xchg
loopne
cmpsl
fwait
repz
xchg
add
sub
comiss
mov
outsb
fsub
cld
cmp
mov
mul
mov
in
jo
jne
xchg
arpl
pop
and
stos
insl
adc
sub
addr16
sub
mov
add
push
or
dec
arpl
repz
cmp
stos
repnz
xor
repnz
dec
insb
push
and
ljmp
pushf
bound
dec
cmp
xchg
sub
in
pop
jnp
mov
push
cmpsl
cli
sbb
nop
inc
pop
repz
cmp
xchg
xchg
add
mov
push
insb
int3
dec
lock
das
jge
add
cmc
cmp
mov
xchg
mov
int
gs
test
cmc
hlt
es
push
lods
inc
popf
mov
xchg
mov
lods
dec
xchg
leave
in
dec
jno
lcall
jle
movsb
xor
subb
out
xor
das
sub
pop
enter
jne
mov
iret
lock
jnp
cmp
out
dec
rcrl
jae
or
clc
sbb
jne
push
outsb
jp
dec
scas
mov
test
addl
push
bound
lret
mov
stos
or
add
cmp
and
jle
fbld
iret
and
jno
sarb
mov
adc
jge
lds
mov
test
jl
cmp
pop
aaa
cmp
cmp
adc
add
andb
jmp
adc
xchg
sub
scas
test
jl
jmp
in
jo
jb
mov
pcmpeqb
xchg
dec
loop
cmp
dec
ret
sub
fwait
ret
out
pop
cmp
mov
sbbb
sub
jmp
add
fdivp
repnz
mov
mov
rclb
stos
icebp
out
add
cmpsl
mov
lret
outsb
inc
mov
out
popa
in
mov
aam
jp
shlb
clc
mov
ljmp
cmpsl
aaa
adc
xor
xchg
pop
mov
xor
push
mov
and
lock
mov
dec
adc
addl
sub
imul
inc
mov
ret
sbb
sbb
mov
nop
inc
adc
popa
cmp
in
add
and
dec
decl
cmp
call
rcrb
and
stos
adc
sbb
jo
mov
das
add
rorb
sub
inc
shll
notl
mov
sbb
push
stos
mov
push
or
movsb
adc
repz
mov
pop
fimuls
pop
or
rep
jp
ret
add
pop
jb
movsb
fnstsw
lret
jbe
xchg
adc
mov
andl
push
ljmp
sbb
fwait
lahf
adc
ljmp
mov
data16
mov
inc
push
cmp
outsl
cmp
cmpsb
shr
mov
sbb
cmc
dec
sbb
iret
pop
aas
pop
imul
les
lock
mov
dec
ljmp
mov
in
movsl
cmp
pop
iret
call
popf
or
aam
mov
mov
in
push
fstps
adc
or
daa
and
mov
mov
sub
ret
out
scas
ss
loopne
push
mov
popf
lock
or
dec
out
push
push
jbe
js
test
call
cmc
aam
cli
mov
push
fisubs
sub
mov
hlt
xor
lea
aas
cmp
or
mov
push
xor
xchg
jne
in
out
or
inc
push
mov
mov
popaw
mov
mov
in
sbb
imul
fstpt
mov
lret
push
aad
xor
mov
scas
xlat
lods
mov
xchg
aaa
ret
je
dec
loope
gs
or
inc
sub
sbb
add
jmp
jbe
push
pop
mov
outsl
mov
imul
xchg
xchg
icebp
xlat
mov
pop
jge
xchg
fxch
lods
fucom
out
test
shll
jae
sbb
je
loope
sub
pop
lahf
adc
pop
lret
xchg
andl
xlat
outsl
mov
push
test
mov
in
mov
mov
cmp
xchg
mov
cltd
fnstenv
dec
pop
icebp
mov
mov
dec
les
mov
jecxz,pn
cmp
ret
fcoms
or
clc
testb
imul
jne
addr16
push
xor
mul
and
add
mov
in
fisubs
sti
call
sbb
mov
or
lret
xlat
dec
mov
ret
popf
repnz
negb
jo
iret
dec
repz
adcb
jmp
rclb
sub
lret
adc
adc
pop
adc
jle
mov
fwait
lret
mov
call
mov
push
jae
push
imul
pushl
es
sbb
mov
pop
push
or
cltd
sti
cmp
xor
in
jnp
mov
ss
fadd
mov
lock
inc
dec
cmp
pop
into
and
test
xor
sbb
sbb
xor
faddl
adc
aaa
inc
loopne
gs
mov
jmp
and
inc
mov
je
and
js
pop
sbb
dec
aam
add
xchg
shll
out
fidivrl
push
sbb
aas
sub
xchg
pop
xor
push
jne
jge
or
imul
dec
inc
lea
adc
mov
mov
scas
lret
aam
mov
pop
mov
dec
pop
mov
jg
mov
aam
inc
lret
loopne
insb
add
mov
bound
push
stos
mov
or
insb
xchg
xlat
add
pop
data16
loopne
popa
and
mov
arpl
sub
pop
or
jl
ror
incb
mov
sub
jl
or
mov
inc
jle
and
push
test
adcb
scas
or
push
push
pusha
sbb
jl
outsb
add
mov
mov
out
xor
and
and
xchg
lea
push
push
add
inc
dec
lods
sahf
or
ss
push
mov
test
cmp
jge
add
adc
xchg
out
sbb
cmp
cmp
xchg
xchg
pop
inc
push
scas
adcl
or
mov
test
out
pop
stos
in
push
cmp
xchg
xchg
pop
out
mov
ret
cltd
fiaddl
and
mov
addr16
out
fisubl
or
icebp
and
ja
cltd
enter
pop
dec
fsubr
test
xor
mov
pop
shlb
pusha
insl
mov
jecxz
cmpsb
insb
mov
mov
imul
or
in
push
pusha
and
inc
xor
test
inc
lahf
fs
mov
gs
mov
and
movsb
jbe
fwait
movsl
mov
xchg
inc
mov
lods
fstps
out
lods
pop
lods
xchg
or
push
fdivl
pop
xchg
lea
stos
mov
jge
cmp
es
fucomip
insl
inc
push
int3
int3
pop
aad
nop
sahf
sub
ror
insb
add
pop
xchg
mov
ret
lods
lea
cmp
push
mov
cmp
ljmp
dec
xlat
aas
pushaw
or
jmp
cmp
push
sub
loopne
push
and
aad
test
rclb
jp
test
mov
scas
iret
testb
inc
int3
fisttpl
push
mov
in
push
inc
in
dec
enter
loope
mov
xchg
ret
xor
sub
jns
repnz
xor
push
jmp
sub
lret
icebp
dec
movsb
popa
cltd
jns
sbb
push
cli
je
pop
ret
ja
idivb
mov
mov
xchg
pop
sbb
enter
fs
pop
cmp
ljmp
xor
push
mov
adc
mov
sbb
or
into
in
stos
mov
and
cmp
mov
xchg
das
int3
and
out
mov
mov
mov
jge
jmp
inc
in
adc
mov
fistl
inc
dec
lcall
mov
lcall
test
outsb
shll
dec
adcb
pop
adc
mov
outsb
add
ret
fistpll
jl
jo
xchg
jnp
adc
sbb
mov
xchg
lock
cld
inc
cs
sub
aad
dec
push
jge
cmc
dec
pop
cmp
mov
es
into
sub
out
sti
leave
push
push
daa
pop
adcl
xor
jmp
lahf
mov
call
xchg
call
out
enterw
mov
hlt
push
lret
mov
cmpsb
or
jmp
xchg
sbb
xchg
mov
sarl
cmpsl
and
sbb
inc
out
push
dec
push
lea
popf
stc
fnclex
adc
mov
xchg
sub
rolb
pusha
cmp
leave
mov
pop
fcomps
adc
dec
and
jnp
je
jo
imul
and
inc
and
repz
sbb
xchg
and
and
sub
orl
pop
pop
imul
repnz
and
lods
pop
leave
mull
aad
fnstenv
adc
push
add
in
dec
push
rolb
cmpsl
sub
adc
movsl
and
or
push
cmp
push
xchg
xor
inc
sbb
addb
add
mov
add
call
cwtl
out
das
pop
and
out
data16
int3
in
scas
sti
test
pop
lcall
loopne
dec
dec
jl
xchg
mov
ja
xlat
mov
xchg
out
out
stos
fbstp
int3
popf
in
push
cmc
lret
cmp
inc
inc
in
mov
xchg
jecxz
pop
and
inc
dec
sub
nop
add
nop
or
inc
add
in
stos
dec
push
aaa
inc
pop
lock
sbb
insl
loope
or
in
mov
ja
imul
adc
mov
xor
push
gs
je
mov
fdivr
in
ds
mov
repz
push
push
cmp
insb
sub
sub
and
xor
sbb
out
arpl
sarl
cmp
sbb
or
imul
shl
mov
mov
in
push
sub
xchg
cmp
popf
bound
fdivrs
nop
jbe
in
cmp
insl
add
cmp
push
lods
and
mov
pushf
and
push
or
fidivrs
pop
push
xor
or
dec
sarl
in
pop
sub
push
push
sub
ror
cmpsb
jnp
sub
sbb
push
es
pushf
add
in
sarl
ficompl
enter
jmp
cmp
mov
xor
pop
loope
xor
inc
gs
pop
add
or
shl
loop
rclb
and
pop
jbe
inc
mov
cmp
clc
jb
jg
jecxz
sti
and
xorl
ja
daa
je
xor
inc
std
and
jmp
dec
pop
insl
mov
sub
push
test
jmp
dec
jecxz
inc
sbb
push
outsb
aas
cmpsb
scas
push
mov
xchg
pop
sbb
add
push
fcom
ljmp
loop
aad
imul
pop
mov
jb
subb
xchg
jo
or
adc
in
lods
sahf
icebp
ret
jbe
fcomp
mov
scas
lcall
adc
ds
xchg
dec
sbb
sbbl
mov
jne
testb
jle
rorb
fists
js
sbb
xor
cld
jo
add
bndstx
sbb
mov
fcmovu
ficomps
in
pop
cmp
xchg
push
js
sbbb
in
mov
adc
nop
stos
lahf
insb
mov
lock
add
daa
sub
pop
stc
lds
mov
call
mov
sub
mov
enter
das
push
dec
cltd
dec
mov
or
scas
sbb
pusha
movsb
sbb
adc
insl
sub
push
inc
iret
xchg
pusha
sahf
adc
adc
out
xchg
out
pop
xchg
and
adc
outsb
std
dec
aam
imul
movsl
loope
cli
mov
xchg
outsb
pop
mov
rclb
aad
mov
push
or
dec
cwtl
cmp
jnp
aaa
push
adc
cli
adc
or
pop
in
lock
xchg
xchg
cmp
nop
or
push
ljmp
stos
in
sti
mov
or
aas
js
cs
scas
ret
fimuls
mov
pop
fst
add
add
sahf
roll
sti
fisttpll
xchg
mov
xchg
sbb
inc
movsl
xor
ljmp
scas
mov
aaa
je
inc
pop
sbb
dec
sub
sti
ficomps
cmp
cld
push
mov
pop
mov
mov
test
out
rorl
in
adc
pusha
push
mov
jmp
mov
mov
mov
mov
sub
xchg
std
mov
add
andb
repz
jg
scas
out
out
mov
in
mov
cli
push
aam
js
jbe
xor
xchg
push
pushl
hlt
gs
cmp
mov
mov
xor
pop
ret
lds
cmc
repnz
and
ss
or
lahf
fadds
cmp
mov
dec
xchg
loopne
ret
mov
subb
das
shll
enter
vpmullw
call
shlb
dec
xor
dec
popa
outsb
out
std
mov
pushf
jae
mov
lods
gs
mov
mov
mov
movsb
je
daa
enter
ds
pop
cli
jo
test
xchg
popf
jecxz
and
adc
xchg
sub
push
cltd
cmp
test
cmp
or
leave
adc
push
je
mov
dec
fxch
rcrl
scas
sbb
pop
in
xchg
or
fidivs
xchg
or
mov
out
xor
testb
xchg
lea
mov
sub
je
aad
out
aas
add
test
adc
mov
imul
dec
cmp
dec
fcmovnu
fistpl
dec
shll
and
adc
int3
mov
das
aam
stos
loopne
test
pop
outsb
dec
mov
cli
cwtl
mov
or
jle
fwait
inc
cmp
mov
push
push
std
sub
cmpsb
push
mov
imul
jnp
push
adc
shll
xchg
push
mov
inc
mov
jnp
pop
sub
or
cld
inc
push
mov
clc
sti
mov
je
or
push
sahf
cmp
and
add
jno
cmpsl
or
enter
add
dec
xchg
mov
sub
sub
mov
push
je
sbb
add
pop
fsubr
and
dec
repnz
add
aam
adc
cmp
in
pusha
dec
fsubrs
fcmovnb
pop
sarb
stos
sbb
mov
push
mov
sub
and
jg
ljmp
xchg
hlt
sbb
les
lret
mov
scas
out
loop
adc
sbb
pop
adc
lcall
and
sub
mov
loop,pt
mov
outsb
fldl
xchg
outsl
dec
into
clc
cmp
shl
jns
or
mov
lahf
mov
sahf
push
shlb
and
std
push
cli
fsts
sub
movsb
pop
pop
repnz
jmp
arpl
hlt
pop
pop
je
adc
xor
dec
data16
add
cmp
sbb
into
jecxz
cs
imul
jg
sti
in
fstps
je
mov
push
xchg
jle
push
mov
scas
xor
rcll
push
inc
mov
fcmovne
cwtl
cmp
push
ficoml
in
mov
fimuls
sti
jmp
sub
pusha
pop
nop
out
push
in
or
dec
stos
icebp
ret
stos
es
movsl
nop
test
mov
pop
stos
cltd
add
jbe
rcrl
loopne
mov
repnz
mov
insb
mov
leave
mov
adc
jns
lret
loop
into
ss
ljmp
mov
lcall
inc
jmp
mov
push
and
sbb
jo
pop
xchg
jmp
outsb
push
movsb
mov
push
mov
scas
sbb
cmp
push
leave
inc
test
js
pop
add
inc
loope
ret
enter
lods
mul
sub
adc
rsqrtps
test
arpl
rcrl
icebp
add
mov
js
ret
lret
idiv
imul
mov
fdiv
mov
shrl
andl
mul
fwait
mov
lds
sub
imul
or
pop
cmp
xchg
das
test
jg
pushf
addr16
test
mov
jno
pop
jae
xchg
cmp
test
mov
insb
das
rcl
fmull
and
repz
xchg
sub
sbb
pop
pop
or
mov
nop
or
dec
add
push
loopne
js
jb
scas
and
or
out
fcmovnbe
psubq
inc
popa
cwtl
in
aaa
cwtl
scas
xor
dec
lods
shrb
mov
aas
cltd
cld
xchg
out
push
rcrb
mov
hlt
add
dec
pop
xor
test
nop
les
dec
mov
mov
pop
cmp
cmp
lods
aas
fiadds
push
lods
sar
cltd
or
and
xor
aas
xor
cmp
repz
repnz
mov
jno
mov
cli
pop
addb
jle
inc
dec
push
mov
scas
sub
mov
mulb
jle
sbb
in
das
adc
fildl
pushf
adc
push
adc
ja
push
cmpsb
adc
mov
sub
pop
mov
popf
pop
sbb
xlat
clc
subl
jne
rorl
insl
xorl
scas
xlat
daa
jo
leave
or
fildll
bound
xor
loop
repz
loope
adc
es
mov
inc
mov
scas
bound
mov
add
imul
ja
mov
imul
xchg
and
add
lods
sub
ljmp
xchg
mov
jb
fcoms
xlat
andl
sbb
sub
ret
outsb
push
loope
ds
sbb
xchg
seto
inc
push
test
mov
xchg
insb
test
lea
jno
icebp
std
sub
mov
lea
jl
jo
inc
fs
out
push
mov
mov
ja
xor
cmpsl
cmpsb
xchg
int3
and
leave
lcall
dec
xchg
push
out
xchg
or
stc
loopne
xor
cmovp
jns
inc
and
fdivl
cli
inc
roll
outsb
xor
mov
mov
or
cltd
out
sbb
push
bound
stc
cs
jge
or
cmpsb
pop
mov
outsl
and
jl
jecxz
outsb
lahf
xor
orb
lret
push
orb
insl
test
test
push
inc
sub
hlt
cld
add
js
aas
dec
idivb
lahf
push
jmp
arpl
xchg
xor
sub
lret
inc
subb
add
lods
fists
es
mov
iret
or
xchg
rclb
out
ror
in
ljmp
movsb
pop
add
push
ljmp
jge
in
or
pop
sub
inc
jbe
scas
dec
add
adc
invd
out
inc
xchg
pop
and
mov
fistpl
call
and
or
mov
jp
cmpsb
ficompl
pop
pop
mov
sub
push
iret
jge
lret
xchg
xorl
sub
or
mov
mov
stc
mov
mov
and
subb
mov
pop
sub
aad
push
adc
bound
loopne
hlt
or
add
inc
mov
repnz
lret
add
pop
gs
stc
enter
sbbl
sub
jo
je
negb
ds
cmpsb
jge
ret
push
scas
inc
rorl
push
outsb
xchg
cmp
outsl
icebp
pop
mov
mov
mov
popa
and
mov
cwtl
cmpsl
cmc
xlat
dec
shl
enter
cld
sbb
xor
inc
fbld
sub
inc
inc
cmp
ffree
pushf
sahf
mov
dec
add
loope
xor
shr
mov
idivl
add
dec
push
cs
das
repz
filds
add
fldenv
js
mov
pushf
repnz
idivb
xchg
fdiv
js
incb
popf
lock
jae
xchg
lock
pop
rolb
inc
mov
cld
push
jae
mov
sbb
scas
scas
pop
scas
dec
pop
int3
xlat
xchg
nop
jmp
xlat
push
push
push
out
imul
notb
dec
jbe
xlat
xor
adc
mov
xchg
xchg
insb
sbb
dec
cmp
call
sub
pop
adc
in
lock
push
xchg
pusha
imul
push
mov
sub
xchg
mov
inc
cld
into
out
into
ret
mov
pusha
mov
loopne
inc
mov
pop
iret
adc
push
sbb
aas
loopne
mov
pusha
test
in
scas
cmpsl
enter
jp
sbb
jno
push
inc
jo
xchg
xchg
sbb
test
int3
mov
lret
inc
pushf
xor
push
cmpsb
push
nop
scas
sahf
jo
pop
icebp
sub
cltd
xor
xchg
imul
sub
je
pusha
dec
cmpsb
push
rcrl
fcmovb
adc
jae
mov
cmpb
inc
aam
cmp
aas
mov
fucomip
mov
shll
cli
cmpsb
orl
xchg
xor
push
out
faddl
sub
out
push
sub
test
in
int
xorl
leave
inc
mov
mov
stos
test
mov
push
and
outsl
out
pop
outsb
sahf
loope
dec
or
int
jb
mov
les
shll
js
xor
insb
xchg
into
je
sti
imul
push
das
jne
leave
or
push
orl
roll
sbb
jmp
mov
test
jb
jb
xchg
cmp
jle
aaa
push
sub
inc
xor
mov
jno
sub
xchg
fmul
popf
add
in
add
mov
xor
cltd
jne
jge
mov
loope
pusha
pop
dec
xchg
inc
outsb
or
and
rcrl
ja
arpl
cmp
aam
mov
cmpsb
jecxz
test
push
or
into
insl
scas
outsl
push
scas
sbb
dec
sub
xor
imul
push
or
jnp
outsb
iret
outsb
popf
mov
fwait
movsb
xchg
fsubl
lods
cmp
lcall
arpl
inc
adc
jo
mov
or
iret
sub
jp
ret
out
dec
clc
pop
ds
sbb
adc
movsb
cmp
push
jnp
bswap
pop
or
stc
mov
mov
lcall
flds
sbb
adc
rolb
and
lds
xor
and
loop
loope
pop
pop
cli
or
incl
nop
mov
xchg
push
push
add
pushf
cmp
lret
lret
insl
clc
shll
inc
dec
cmp
xlat
jp
ja
cmp
dec
pop
mov
jmp
out
push
add
mov
fcomps
repz
mov
out
shll
cmp
adc
test
fwait
push
outsl
dec
orb
push
jge
dec
jae
dec
movsl
outsb
into
andb
ret
or
pop
cld
mov
mov
aad
push
dec
shlb
sbb
push
out
mov
mov
add
xor
pop
xor
inc
jb
pop
fnstenv
mov
pop
nop
ror
adc
ret
jle
add
cmpsb
or
xchg
rorb
push
jmp
outsb
xorb
dec
jno
out
add
pop
jl
arpl
fwait
pop
jno
and
mov
insb
mov
add
mov
mov
mov
cmp
lock
or
lods
popa
or
test
dec
dec
and
xorl
push
rclb
mov
mov
pop
popa
sbb
gs
popf
cmp
rclb
jo
xchg
mov
bound
imul
ss
das
jle
stos
adc
andb
sub
ret
mov
inc
adc
loope
add
xchg
scas
mov
add
lahf
into
popfw
lret
int
stos
leave
in
push
mov
bound
mov
mov
sub
cwtl
mov
in
rcrb
out
add
ds
mov
or
daa
xor
xrelease
jne
inc
cld
jecxz
dec
jno
jp
xor
cmp
cmp
push
adc
mov
fs
inc
sbb
xchg
mov
cmp
push
push
mov
addr16
shrb
cmp
sbb
pop
das
inc
jecxz
xchg
sub
inc
mov
mov
mov
push
ficomps
out
test
inc
inc
insb
testb
imul
es
mov
push
dec
add
mov
xchg
out
ret
mul
xlat
movsb
arpl
and
out
faddp
sbbb
cmpsl
pop
mov
pushf
mov
jmp
fists
inc
adc
xchg
in
pop
jmp
pop
xlat
mov
aad
loope
inc
les
lods
inc
mov
and
mov
jmp
dec
loope
loopne
test
test
push
jo
push
push
pop
fxam
inc
arpl
mov
push
movsl
pop
subl
addr16
iret
mov
pop
call
sysenter
imul
push
xchg
pusha
div
test
cmc
call
jnp
and
mov
mov
ss
push
sbb
jmp
imul
push
subb
push
push
shll
sub
add
mov
xchg
cmp
or
lods
xchg
mov
adc
ljmp
js
paddd
js
daa
std
push
add
lahf
jnp
dec
mov
sbb
dec
adc
popf
stos
das
add
ja
scas
cmpb
leave
bound
lock
cmp
mov
push
fnstsw
push
xor
xor
roll
xchg
rolb
xlat
cld
lock
leave
test
jnp
ja
add
xchg
insl
into
adc
sbbl
mov
pushf
fimuls
or
addr16
popl
push
sbb
mov
dec
les
mov
add
or
test
sub
mov
sbb
andl
and
push
loop
into
cld
out
sub
jge
pusha
repz
repz
mov
out
in
loope
nop
lahf
adc
xor
call
aam
insl
mov
xchg
inc
push
push
out
test
js
aam
xor
fmul
push
mov
mov
aad
shlb
jnp
fcoms
lods
push
scas
push
mov
fistpll
push
notb
sar
imul
xor
mov
cmp
out
nop
stos
rol
jp
mov
pusha
dec
dec
dec
sbb
cltd
mov
cwtl
dec
imul
jmp
cmp
pusha
shrl
lret
or
rorl
push
or
add
aaa
cmpsl
sbb
sub
roll
popl
ret
pop
mov
ret
xchg
rclb
xchg
cld
pop
test
aam
mov
xchg
push
out
xor
call
jno
mov
cmp
cmp
jbe
je
cmc
jecxz
add
or
and
sti
lahf
and
mov
jnp
aam
inc
les
inc
mov
test
pop
xlat
dec
hlt
int
pop
xchg
mov
inc
arpl
add
jge
ds
mov
inc
push
sbb
push
fwait
hlt
lods
rcll
aam
stos
sub
push
in
jbe
inc
cmpsb
orl
sub
ljmp
ds
xchg
xchg
out
dec
dec
cmp
fcomps
sbb
xchg
dec
pop
arpl
mov
scas
imull
cmpsb
or
add
sub
ss
setg
or
cmc
sahf
cli
push
pop
cltd
out
pop
scas
js
push
rcr
sti
rorl
and
movsb
adc
dec
add
sbb
mov
outsl
or
xchg
jle
adc
xchg
sti
imul
popf
jns
push
push
movsb
push
into
sbb
xchg
ret
testb
add
jecxz
push
popf
popf
adc
lret
scas
cld
mov
add
icebp
inc
pop
outsb
xchg
jnp
mov
sbb
ret
fldenv
and
outsb
movsl
popf
das
inc
daa
push
sarb
jmp
aaa
subb
xchg
mov
or
cmp
jo
dec
in
in
adc
enter
mov
insb
cmp
dec
add
loopne
mov
jp
andl
aaa
mov
add
scas
icebp
mov
ret
sub
dec
mov
sbb
or
clc
loop
xchg
cs
cmp
int
xchg
fisttps
and
mov
xchg
arpl
add
ja
idivl
pop
lds
out
cmp
lcall
inc
pop
xlat
shll
pop
mov
mov
jne
test
and
inc
js
dec
xor
inc
xor
je
lret
fwait
loopne
cmp
mov
mov
lock
and
adc
sti
sbb
sub
pop
cmp
xor
cmp
pusha
push
mov
push
mov
xchg
lock
shll
stos
inc
fwait
jle
negl
inc
aad
movsb
sub
and
dec
pop
int
mov
stc
mov
mov
pop
add
mov
fimull
lods
cmp
outsl
mov
xchg
mov
inc
add
inc
out
je
sarl
cmpsb
adc
bound
movsl
pop
dec
sbb
clc
xchg
mov
fildl
lds
lcall
rcr
rcrb
fbstp
in
cmp
insb
enter
or
sbb
push
sti
mov
push
pop
fnstsw
push
mov
inc
ljmp
or
lret
inc
adc
scas
jp
mov
js
and
mov
lcall
rclb
pop
lret
lahf
jae
cs
xor
inc
int
push
inc
sub
frstor
xor
aaa
mov
sbb
arpl
push
rolb
push
out
dec
outsb
repnz
xchg
mov
dec
lea
fisubrl
sbb
movsb
pop
sbb
sub
xchg
ret
cmp
es
cmc
and
cmc
pop
push
inc
jge
and
or
ret
fistps
loop
and
or
sub
imulb
cmp
lods
in
movsl
xchg
mov
lahf
xchg
stos
inc
jge
xor
sahf
insb
mov
add
add
stos
mov
add
popf
lea
mov
rolb
sbb
sbb
inc
jo
push
push
outsb
sbb
xchg
dec
pop
repnz
insb
jbe
notb
popa
inc
push
sub
jno
xor
jo
push
add
mov
push
sub
push
in
aaa
loop
jge
adc
jmp
cmpsl
les
push
scas
hlt
je
sub
clc
rcr
fnsave
fnstenv
mov
cmp
mov
arpl
jg
sub
iret
fs
xchg
sbb
mov
push
push
dec
xor
ja
movsl
mov
or
or
xchg
mov
in
pushl
pop
dec
scas
pop
jecxz
clc
test
dec
fbld
push
fwait
mov
xlat
in
adc
lds
shr
std
xchg
inc
jle
adc
sbb
mov
mov
xchg
jo
popa
jle
mov
popa
jg
mov
xchg
pop
lret
dec
adc
xchg
ss
aam
hlt
les
push
push
leave
pop
dec
leave
xchg
mov
inc
outsb
lcall
sub
mov
mov
enter
clc
adc
or
sarb
or
sbb
sbbl
fs
mov
mov
fstl
or
jle
push
test
mov
repz
xorb
sahf
fwait
mov
mov
cmp
adc
rsqrtps
cmpsb
subb
insl
out
add
out
or
cmp
mov
out
pop
or
add
xor
mov
psrld
cltd
aam
cmpsb
out
pop
cmp
and
mov
out
outsb
jl
std
scas
loop
cmpsl
and
xor
fldcw
ds
jmp
push
loop
rorl
fcmovnu
jo
pop
jecxz
adc
out
sbb
lea
js
sti
repz
mov
pop
jp
push
push
ficompl
push
xor
mov
addr16
pushf
inc
and
stos
iret
ror
repnz
fiadds
repnz
outsl
push
pop
rcll
jp
dec
and
loop
sub
out
dec
mov
xchg
jns
push
loopne
fnsave
mov
popa
mov
and
mov
lret
fwait
pshufw
jecxz
loopne
jle
scas
mov
jns
je
mov
lock
and
mov
sbb
movl
jge
mov
fidivs
push
xor
testl
jecxz
inc
jnp
fsubrs
mov
insb
fldl
jbe
and
sti
lret
push
xchg
movsl
cld
insb
jne
imul
lret
in
aas
les
or
mov
mov
cmp
xchg
sub
sub
ss
test
lods
bound
inc
in
xor
xchg
andb
stc
or
pop
adc
xor
dec
mov
out
mov
dec
out
inc
xor
icebp
and
jns
int3
sbb
mov
int
pop
jno
push
inc
shlb
xor
loop
out
ds
add
sbb
sub
bound
fisttpl
pop
lret
cmp
push
lret
shrb
in
push
mov
mov
imul
push
mov
push
dec
enter
insb
jbe
mov
daa
sbb
push
xor
push
popa
fwait
lods
out
imul
and
je
leave
mov
adc
inc
cmpl
je
sbb
jns,pt
adc
push
push
rcrl
das
popf
jne
dec
repnz
ja,pn
inc
add
cmp
call
enter
cli
call
into
cmp
mov
push
mov
insb
flds
adc
adc
lea
pop
inc
mov
imul
and
scas
pop
sahf
fwait
cld
out
jl
fcoml
sbb
pop
mov
ljmp
aad
mov
push
sbb
pusha
jecxz
adc
repnz
mov
xlat
mov
cltd
mov
leave
or
xchg
add
jae
sbb
xor
dec
push
cmc
fwait
mov
scas
daa
xchg
adc
dec
push
mov
mov
cmpsl
imul
in
adc
xchg
ret
mov
arpl
jmp
popa
imul
out
cmpsl
adc
cmc
enter
std
outsl
cmp
mov
mov
lods
push
add
pop
mov
sbb
decl
add
loope
in
aad
mov
out
int
shll
fs
mov
pop
sub
js
mov
fmul
xor
jno
sub
mov
aad
or
inc
pop
xchg
mov
or
inc
push
xchg
aam
mov
lret
sahf
adc
fcmovbe
mov
dec
pop
outsb
jecxz
jge
fadds
sub
mov
aad
mov
ja
jp
popa
or
sbbl
shrl
lds
mov
loopne
iret
mov
push
repnz
out
mov
addr16
mov
push
xchg
add
or
push
add
xchg
pop
pushw
imull
push
jbe
ljmp
pushf
rorb
mov
mov
jl
addr16
addr16
shrb
aas
pop
ss
fwait
enter
enter
xchg
fisttpl
repnz
dec
hlt
xor
sarl
outsb
out
and
sbb
loope
pop
imul
push
hlt
mov
push
jnp
scas
jge
push
add
ret
xchg
xchg
xor
xor
sub
push
push
imull
cli
je
aad
dec
jge
dec
ds
fmuls
fidivl
or
nop
jle
and
pusha
cmp
es
inc
jns
lret
repz
lods
push
out
lock
into
xchg
pop
mov
inc
dec
jecxz
jg
cmp
pop
loopne
lret
adc
test
sbb
xor
mov
pop
fsubl
rclb
ficomps
xchg
jge
xor
jmp
pop
pop
adc
cwtl
jns
ljmp
pusha
push
lret
sub
fidivs
daa
icebp
insl
dec
jge
pslld
and
repz
mov
sahf
clc
lcall
xor
sarl
sti
inc
test
inc
outsb
xchg
pop
cs
mov
adc
scas
test
jecxz
test
repnz
mov
into
sbbb
loop
xor
subb
mov
leave
cld
pop
div
or
push
inc
sbb
inc
lcall
fisttpll
xor
cmpsb
bound
in
aaa
pop
jp
pusha
mov
lcall
add
pop
iret
jecxz
dec
in
push
insb
into
arpl
pop
dec
mov
icebp
ret
aad
cmp
mov
jmp
or
jmp
mov
push
cmp
xlat
lea
int3
movsl
adc
dec
out
xchg
xchg
jp
sub
aam
mov
data16
clc
jne
in
gs
testl
adc
lea
sti
sbb
sub
adc
mov
and
lahf
sbb
ds
pop
dec
xor
mov
into
and
xchg
sbbb
in
je
dec
jecxz
loopne
mov
into
int
sbbb
sbbb
sarl
js
dec
neg
mov
enter
jge
ret
clc
xlat
mov
push
add
mov
and
pop
mov
add
jge
jg
push
mov
rol
daa
shrb
ljmp
int
dec
icebp
sbb
popa
mov
cs
push
fistl
shll
lcall
sbb
je
sbb
cmp
jl
repz
sbb
xchg
stos
push
fisttps
pop
shlb
or
jecxz
das
cli
aaa
dec
in
sbb
and
and
push
xor
lods
add
repnz
out
push
push
sub
orb
es
mov
mov
inc
jb
insb
xor
sarl
cld
ret
pop
mov
stos
mov
jp
out
mov
jmp
in
pop
jae
iret
orl
xor
mov
mov
repz
shrl
in
insb
or
int
mov
test
or
and
push
andl
add
xchg
in
arpl
shrb
cli
sbb
jl
outsl
clc
lahf
dec
gs
sti
lea
dec
mov
aas
ljmp
adc
movsl
and
sub
aaa
enter
dec
mov
inc
xchg
lock
pop
sarl
repz
and
arpl
outsb
xchg
xor
push
xchg
into
imul
aaa
add
fcom
out
xchg
leave
sbb
sub
xor
xchg
xchg
xor
jne
jp
sbb
out
movsl
movsb
sbb
add
pusha
sahf
das
ficoml
pop
pop
dec
mov
add
mov
fwait
or
outsb
adc
or
xor
jge
xor
inc
mov
xchg
mov
clc
and
xchg
dec
xchg
popf
repnz
cmp
dec
scas
add
ror
pop
call
xlat
inc
arpl
xchg
adc
push
push
cmp
cld
out
out
inc
xor
pop
xor
mov
lock
cmpb
jnp
mov
adc
aas
shrb
mov
inc
jmp
fwait
bound
out
int3
xchg
adc
in
mov
ret
push
and
cmpsl
ret
ret
imul
imul
push
dec
fsubl
sarb
mov
pop
jns
pop
insl
xchg
mov
jge
push
jns
xchg
mov
add
ds
jo
or
and
mov
dec
fistpll
ficoms
into
cli
movsl
cmp
sbbb
idivb
arpl
pop
or
test
mov
adc
leave
adcb
stc
in
out
lock
stc
mov
push
sub
jne
jbe
int
mov
jo
sbb
xlat
sub
popl
inc
es
imulb
push
popa
xor
jmp
jmp
jecxz
mov
add
inc
cmp
pop
ficomps
leave
lds
adc
scas
pop
int
sbb
mov
and
adc
iret
push
add
mov
push
in
inc
leave
sbb
add
call
or
jns
ret
fnstenv
outsb
jb
add
inc
jo
fsubrp
stc
mov
xchg
cld
rorl
rcll
xor
xor
and
push
add
movsb
fists
mov
adc
inc
sub
cltd
or
mov
mov
cmpl
xchg
shrl
pushf
fwait
cmp
cwtl
movsb
sarl
dec
cmpsb
dec
pop
outsl
inc
sub
imul
fcompl
lret
rorl
ds
adc
or
xchg
pop
push
je
adc
xchg
gs
inc
cltd
cmp
stos
data16
int
inc
xchg
test
push
lea
or
or
push
pusha
aaa
shll
sub
jb
mov
mov
rclb
xor
dec
cmp
pop
flds
add
mov
pop
and
fucomip
outsl
subb
push
test
loop
cmp
xor
sbb
or
std
addr16
push
pop
adc
sets
inc
stos
out
stos
fisttpl
ljmp
sahf
mov
push
inc
xchg
ret
push
mov
mov
aas
ljmp
insb
into
or
dec
std
jnp
dec
inc
sbb
xchg
mov
push
lods
fstps
test
nop
fcmovnbe
lods
mov
jne
mov
cli
add
xor
popa
mul
test
fsubrs
hlt
test
test
push
mov
call
pusha
push
add
mov
fisubl
xor
or
jb
cmp
shrl
pop
test
arpl
rcl
in
xlat
and
imul
loop
cs
ljmp
sbb
stos
mov
adc
and
add
cmc
loopne
scas
push
cli
shrl
cmp
insl
loope
cmp
mov
inc
shlb
repz
cli
arpl
push
xor
mov
testb
iret
or
icebp
pop
inc
or
lret
test
add
push
dec
es
inc
popf
gs
add
cmpsl
stc
mov
imul
shrb
clc
movsl
repnz
sub
add
dec
push
mov
out
iret
subl
repz
xor
mov
imul
xor
nop
push
enter
insl
adc
enter
gs
pop
ss
xchg
inc
push
ret
in
ja
out
mov
mov
pop
jb
fwait
sbb
fwait
jns
xchg
pushf
add
mov
out
lret
int3
jl
loope
lock
je
mov
cmp
data16
xchg
xchg
inc
cli
sub
sarl
jg
in
push
jo
or
addr16
and
sarb
mov
dec
push
pop
push
stc
mov
and
push
ret
cmpsb
addr16
aam
xor
lock
outsl
jnp
xchg
out
std
inc
sahf
das
mov
out
or
add
dec
stos
insl
cmp
sub
psraw
repz
or
imul
out
push
sbb
icebp
xchg
sbb
cmc
push
xchg
xor
mov
add
cmp
add
div
js
adc
scas
out
xor
push
add
orb
or
xchg
push
pop
ficomps
xchg
call
adc
jg
mov
outsl
ds
lods
xchg
mov
out
mov
sub
mov
shrb
mov
xor
and
test
stos
pop
add
cld
imul
out
mov
mov
repz
repnz
jg
outsb
xchg
xchg
cmp
sahf
out
xor
jmp
scas
dec
fwait
or
in
xchg
addr16
inc
rol
push
rcr
mov
lods
xor
and
ds
sub
es
adc
xchg
fbld
outsb
rcl
gs
dec
inc
int
sub
xchg
adc
dec
lea
out
lods
movsb
inc
jle
sbb
addb
add
popa
inc
stos
add
cwtl
lods
sbb
jno
cmc
cmp
mov
in
mov
mov
mov
insl
in
leave
inc
jno
xor
or
cmp
push
int
dec
mov
jecxz
jmp
xchg
orl
push
sub
push
mov
cmp
mov
dec
push
push
out
sbb
popf
inc
aad
aam
insb
adc
jle
sub
xor
shrl
orl
mov
ljmp
repz
movsb
adc
setnp
iret
aad
in
cmc
sub
enter
ret
fdivs
mov
mov
or
pop
icebp
imul
mov
lahf
sub
fwait
dec
gs
pop
addr16
sbbb
fcompp
popf
jp
dec
ljmp
iret
andb
pusha
adc
pushf
mov
pop
stos
out
loope
mov
fmuls
or
mul
mov
daa
and
mov
addb
jbe
or
rcr
rol
shrb
sahf
daa
enter
xchg
mov
stos
and
sbb
mov
jne
sahf
or
loope
pop
test
ds
dec
sbb
jmp
cmp
lods
lds
mov
roll
scas
mov
push
test
loopne
add
outsl
in
loope
iret
test
or
loop
fidivs
je
fistps
lods
push
push
fmuls
inc
sub
dec
pop
add
xor
int3
xor
pop
out
lahf
cmc
pop
push
adc
jo
mov
pop
inc
in
push
add
mov
sub
testl
movsl
lret
jg
pop
lds
push
and
stc
jp
jmp
cmp
in
fdivs
aam
fs
dec
mov
push
mov
or
test
das
xchg
push
add
mov
sub
scas
or
inc
aas
das
mov
out
push
rcrl
call
scas
icebp
aaa
mov
movsb
mov
cltd
loopne
cld
cmp
stc
test
cmp
les
rol
lret
mov
cmp
shlb
sahf
insl
xchg
xor
scas
outsl
arpl
std
divl
popf
fnstsw
repnz
in
jp
outsl
mov
ljmp
fucom
incb
add
mov
xchg
jo
nop
dec
iret
popf
mov
loope
mov
nop
cld
xor
out
xor
icebp
out
clc
fs
xor
test
aam
movsb
shlb
ss
cmp
lret
cmp
adc
mov
outsb
std
inc
sbb
stc
jns
andl
rcrb
mov
push
cli
cmp
int3
outsb
adc
jne
rorl
daa
add
gs
sub
cmp
sub
mov
adcl
mov
push
clc
adc
int
fcmovnb
rclb
loopne
ljmp
mov
cmc
sub
into
push
mov
addr16
aaa
jp
jb
sub
js
in
stos
push
and
fwait
je
inc
cs
loope
inc
outsb
ficoms
bndldx
mov
push
lds
xor
mov
andl
inc
pop
lahf
mov
add
aas
call
shlb
cs
shlb
out
data16
aam
push
nop
mov
fmul
xor
rcll
dec
jp
sbb
mov
push
jne
adc
repnz
mov
xchg
cmp
adc
subl
scas
pop
mov
mov
mov
add
mov
pop
sbb
mov
jle
andl
pop
cld
jo
push
and
mov
and
sahf
pop
xor
imul
xlat
add
jp
rcrl
mov
pop
jecxz
push
sbb
icebp
pop
lahf
ss
mov
fistps
pushf
pop
les
jmp
mov
adc
jg
lock
lea
mov
inc
popa
adc
popf
inc
sub
adc
jp
xor
jns
pop
lods
dec
mov
xchg
nop
xor
aas
xchg
cmp
xchg
bound
fucomip
dec
mov
std
stos
popf
cmp
and
sarb
mov
xchg
loopne
or
xor
cmp
movsb
mov
cmp
xchg
mov
cmp
cwtl
xorb
adc
and
dec
cmp
in
inc
dec
xchg
mov
xchg
fidivl
sbb
sub
ret
mov
sahf
es
sbb
push
jle
and
jno
popf
push
sarb
bound
mov
test
cmp
fldenv
mov
mov
mov
repz
out
add
out
push
fnstcw
mov
fs
add
rclb
push
out
push
fstp
mov
sahf
cmp
mov
pop
jbe
pop
cmc
popa
add
movsb
adc
dec
inc
les
jno
lahf
mov
pop
out
bound
dec
xchg
or
push
mov
fstp
mov
shlb
jne
push
sub
or
inc
jl
test
mov
test
lcall
stc
fldcw
push
es
jbe
dec
dec
inc
rclb
mov
sti
push
in
nop
mov
dec
inc
jb
mov
push
jmp
cmpl
cmc
sbb
fcmovbe
push
push
mov
jl
cmp
pop
mov
add
dec
lret
and
mov
in
movsbl
sti
jns
ljmp
push
arpl
jb
jns
mov
sub
ljmp
arpl
pushf
inc
push
scas
xchg
idivb
stos
and
ss
addl
jg
xchg
in
shl
dec
ljmp
add
stc
jmp
in
or
dec
dec
lea
and
mov
enter
pop
xchg
cmp
xor
xchg
mov
bound
mov
jns,pn
or
xchg
mov
and
loop
popa
xchg
ljmp
lds
and
enter
dec
call
xor
je
movsl
cmp
and
imul
and
jle
sbb
inc
div
sub
xchg
ss
rorl
addb
and
sbb
pop
cmp
xor
mov
or
push
jmp
stc
call
jbe
mov
div
mov
push
cmc
clc
add
cmc
rorl
jge
shrb
stc
int3
es
in
lods
push
adc
xor
adc
pop
xor
pop
int
addb
xchg
xor
add
inc
arpl
and
lods
cmp
pop
stc
xor
in
dec
mov
inc
pop
adc
pop
ljmp
mov
inc
cmpsb
call
ljmp
cmc
pop
and
out
sub
in
jle
call
rcrl
cld
sub
data16
sarb
lods
mulb
sti
sub
popa
loop
lea
imul
int3
add
xor
xchg
push
adc
jg
gs
add
and
sbb
adc
mov
and
leave
mov
xor
adc
sbb
imul
repz
aaa
aam
bound
push
scas
push
cs
xlat
push
xchg
leave
ret
in
popa
jmp
pop
sbb
mov
lds
je
and
imul
rolb
mov
les
mov
loope
lahf
sbb
aam
test
xchg
xor
mov
adc
test
sbb
jne
and
mov
ds
push
sub
mov
sub
xchg
fistpll
adcb
bound
fcoms
mov
stc
movsl
jne
cmpsl
movsb
adc
mov
dec
xchg
lea
mov
mov
aam
and
nop
repz
inc
jle
or
pop
dec
sub
sbb
popa
mov
mov
push
inc
xor
jno
in
stos
xchg
jecxz
push
cmp
mov
aad
dec
test
and
and
cmp
stc
sarl
mov
popf
xchg
push
insl
mov
aam
dec
mov
pushf
push
movsl
jno
fs
aaa
test
repz
rcr
fucom
add
loopne
in
sbb
mov
enter
fsubs
cmp
mov
mov
notl
pushl
fldenv
lret
jp
jmp
in
clc
aas
mov
adc
mov
xor
js
mov
dec
push
in
mov
pavgw
lret
push
fsubrs
dec
and
test
inc
mov
inc
jmp
jnp
and
pop
stos
dec
sub
xor
scas
jb
cmp
test
cmpsl
or
outsb
repnz
bound
cmpsl
sti
mov
cs
mov
mov
dec
cmp
cmp
adc
xor
mov
xchg
adc
and
pop
mov
xchg
std
dec
imul
mov
inc
mov
fbstp
sub
lret
data16
lcall
push
mov
popf
adc
jp
xchg
cwtl
out
test
mov
fwait
sub
pop
sbb
sub
iret
lret
dec
imul
jbe
inc
mov
mov
enter
push
out
add
jg
call
pop
jno
jmp
or
inc
ds
mov
push
iret
xchg
aaa
test
jmp
pop
out
adc
hlt
adc
push
cmp
ja
aas
fisubs
test
push
popa
sarl
popf
xor
call
sub
scas
xor
push
xchg
loopne
rclb
std
xchg
push
movsl
out
fcom
sbb
das
add
pop
es
mov
fsubl
repz
loop
jg
sahf
jmp
stos
cmp
jbe
loopne
lea
pop
cmp
inc
pusha
pop
add
fbld
loopne
sbb
inc
push
adc
cmp
add
push
test
adc
mull
jge
repz
cmpsb
ret
pop
jmp
pop
sbb
xor
in
jns
cld
sbb
mov
cli
in
pop
lea
into
fldl
lods
pop
popf
loop
ret
scas
out
xchg
aam
in
and
mov
and
jno
ret
push
push
ljmp
loope
scas
xlat
lea
fmull
push
clc
pop
pop
jo
lea
imul
push
jae
decb
xchg
pop
fidivrs
pop
negb
or
lods
adc
int
jno
pop
inc
pop
add
fwait
mov
int
scas
arpl
movsb
pop
mov
or
add
shlb
pusha
mov
das
jae
lds
incb
dec
ficoms
jae
call
add
pushf
fiadds
add
js
jg
lret
mov
pop
fildl
pop
xchg
sbb
and
fcmovnb
popf
or
test
push
aam
xor
int
sub
popa
fninit
mov
nop
test
fdiv
jnp
jg
dec
sub
stos
imul
mov
insb
push
push
add
popa
lea
cmp
mov
orb
adc
test
cmp
fisubrl
cli
sarb
push
lahf
scas
jp
lods
jb
movl
pushf
subb
dec
aam
dec
push
cmp
loope
jmp
dec
outsb
push
cmp
xchg
push
imul
stc
loope
movsb
movsb
ffreep
test
or
aaa
sbbb
sbb
adc
or
add
cmp
imul
cmp
dec
and
std
into
repz
out
scas
xor
push
shl
pop
lods
jp
pop
icebp
push
pop
add
dec
and
adc
cmpsb
cmp
aad
add
xchg
shl
mov
jne
out
loopne
iret
pop
out
gs
mov
bound
add
stos
bound
aaa
lcall
adc
inc
push
fsubrl
fnsave
mov
mov
ljmp
cmp
je
mov
jge
into
ss
call
xchg
sbb
int
mov
hlt
cmc
in
int3
int
sti
test
jne
icebp
push
jnp
out
cmp
loope
shrb
sbb
out
sbbb
cmpsb
cmp
mov
les
lret
mov
xchg
pop
mov
out
outsb
movb
pushf
shll
lahf
add
or
add
and
pop
dec
push
fwait
jecxz,pt
enter
cmp
mov
clc
xchg
mov
pop
fildl
mov
loop
jnp
lcall
fbld
sbb
mov
xor
push
scas
or
xor
jbe
insb
adc
in
in
lods
sbb
mov
mov
jb
mov
sub
sub
fistps
imul
mov
cltd
sbb
xor
out
dec
mov
mov
fs
or
mov
aad
sub
pushf
jmp
lret
mov
cs
mov
jae
lds
and
lea
cltd
cmp
addr16
cmc
mov
or
in
dec
std
mov
aas
cmp
dec
out
sbb
in
popa
lea
lods
pop
adc
cmp
mov
mov
insb
loop
cmpb
dec
inc
nop
nop
add
sti
push
mov
sub
pop
lcall
mov
loope
adc
stos
incb
pop
dec
test
in
adc
repnz
dec
pop
bound
or
mov
push
and
mov
jmp
xor
out
mov
xchg
cmpsl
inc
add
adc
lea
adc
mov
dec
mov
in
notb
inc
mov
add
add
inc
jle
bound
jo
jecxz
mov
sahf
and
fsubr
in
insl
daa
jl
dec
and
jb
movsl
add
mov
cwtl
int
mov
pusha
call
add
movsl
cli
add
pop
stc
lods
lahf
test
add
daa
or
adc
daa
sbb
js
mov
iret
cmp
xchg
test
notl
sbb
or
lret
adc
out
clc
lds
cmp
imul
add
arpl
xor
mov
mov
mov
icebp
pop
sbb
and
fwait
jbe
adc
sbb
pushf
xor
pop
outsl
insb
adc
jne
loopne
pop
sbb
adc
sub
sahf
loop
aad
repz
fnstcw
sbb
pushf
ds
push
notl
insl
push
cmp
mov
loop
mov
or
data16
dec
mov
in
adc
jmp
mov
fimuls
cmpsl
jmp
cmc
fs
and
lea
mov
add
add
ffree
inc
cmp
mov
adc
xor
jp
pop
xchg
aad
sub
or
jmp
cmp
insb
push
ljmp
sbb
call
mov
dec
push
sub
or
cld
imul
or
test
sub
aaa
dec
push
scas
adc
cli
cmp
in
cmp
xchg
or
push
jg
add
adc
loope
dec
xor
mov
or
out
push
pop
test
sbb
and
adc
addr16
scas
sbbl
rolb
lods
lret
mov
or
jge
push
pop
loop
pop
lock
cmp
sbb
sub
add
or
xor
dec
inc
imul
divl
inc
fmull
outsb
roll
clc
adc
and
jno
hlt
pop
ret
push
iret
mov
stos
lret
scas
fdivr
or
push
out
mov
sbb
jge
or
cltd
out
push
out
mov
push
xor
enter
mov
dec
fcoml
pop
ficomps
repz
dec
punpckhdq
out
inc
dec
mov
cmp
sub
lret
ja
push
fldenv
bound
in
xorl
pop
bound
push
pop
out
sub
dec
jg
sti
xlat
xchg
imul
fldenv
insl
popf
inc
adc
mov
mov
repz
in
fimull
outsb
jb
enter
push
jne
sbb
fwait
icebp
gs
outsl
rcrl
loop
jg
cmp
dec
hlt
sub
cmp
ljmp
jno
call
ficomps
or
daa
mov
mov
xor
test
jae
stc
mov
jp
pextrw
test
insb
ja
mov
jle
lret
cwtl
loopne
lea
les
ret
adc
mov
adc
lods
add
cld
pop
test
mov
jnp
mov
in
ja
sub
sub
test
dec
std
push
iret
imull
cmp
xchg
rolb
mov
and
jo
loope
shrl
or
mov
or
sbb
in
jae
rolb
sub
lret
mov
jecxz
aaa
pop
pop
insb
jle
inc
js
pop
or
imull
dec
jbe
fwait
shl
cmovb
inc
add
dec
bound
out
pop
xchg
mov
sti
jmp
dec
hlt
cmp
cmpsl
jl
xchg
mov
mov
pushf
idivb
jns
movsb
jl
popl
outsl
cltd
rcll
xor
ficomps
cmpsl
inc
sub
mov
rorl
imul
outsb
xchg
cmp
sbb
push
fldcw
sbb
stc
mov
int
xor
jo
push
jge
mov
hlt
rcll
push
jmp
sub
add
mov
and
mov
mov
push
mov
push
clc
iret
mov
mov
rcr
xchg
xchg
jl
test
add
pop
jo
aad
lcall
cld
mov
xchg
mov
cmp
cld
imul
imul
inc
push
cli
pop
sbb
sub
fcomip
or
mov
lea
ret
cmp
sbb
xchg
arpl
out
lds
es
nop
pop
and
jb
pop
push
sub
mov
rorl
or
xlat
decl
movsl
pop
adc
ficoml
add
mov
fdivl
and
outsb
jnp
mov
int3
jecxz
ret
cli
mov
cld
add
js
xor
shr
mov
sub
add
mov
mov
negb
test
in
int
add
inc
ss
sbb
push
add
or
jnp
cmp
jmp
lea
mov
and
shll
movaps
dec
push
setno
mov
sbb
movsl
fmul
js
call
jecxz
test
sbb
pop
pop
cs
pop
in
push
mov
pop
std
repz
fwait
mov
loop
pop
cld
push
lret
fisubs
mov
sahf
push
clc
in
js
dec
add
pop
mov
sar
test
insb
je
pop
pusha
push
dec
imul
shrb
dec
xchg
bound
enter
or
sub
je
out
ljmp
loop
in
dec
dec
or
sbb
cmp
lds
ljmp
jbe
push
leave
xchg
xor
and
and
into
sbb
adc
adc
movb
lret
aaa
leave
sti
xor
mov
in
push
pmulhw
mov
xchg
adc
adc
movsl
cmpsl
sbb
cs
nop
sub
mov
sub
jg
out
mov
notb
test
mov
mov
vprotw
sbb
sub
and
inc
sahf
jl
and
fs
sarb
int3
push
mov
xlat
jmp
lods
mov
out
cli
mov
lods
aad
xchg
fcomi
add
dec
clc
mov
jp
mov
out
push
shlb
push
mov
xorl
and
mov
out
dec
bound
jnp
cmpsl
inc
xor
xchg
test
lds
cmc
sbb
and
jle
fists
sbb
iret
clc
popa
int3
mov
cwtl
lret
xchg
xlat
or
mov
push
test
xchg
fisubrs
or
push
sub
bound
mov
cwtl
sbb
inc
scas
repnz
cmp
dec
fisubl
sub
jmp
and
or
mov
ss
dec
pop
push
jmp
add
inc
fmuls
mov
ss
test
adc
fidivrs
sarb
mov
inc
mov
mov
mov
push
shl
cmpsl
into
ret
sahf
in
sbb
mov
or
out
dec
iret
mov
insl
std
std
or
jp
and
mov
lock
inc
rcll
test
jmp
clc
mov
clc
ss
lods
xchg
adc
adc
daa
sti
data16
sub
mov
nop
negl
mov
loopne
push
imul
sbb
ret
dec
clc
jns
out
cmp
xchg
sub
mov
icebp
les
sbb
ljmp
ss
dec
pop
mov
jmp
ss
push
std
push
cmp
cmp
subl
arpl
inc
pusha
lods
iret
xor
xor
shlb
dec
movsl
popa
pop
pop
ds
fidivrl
aad
mov
sbb
xchg
rcrl
test
dec
adcl
lock
mov
jbe
pop
movsl
pop
push
fidivl
xchg
or
xor
jnp
rcrb
mov
sbb
mov
sub
xchg
jp
sti
inc
call
bnd
adc
inc
fwait
testb
xor
cmp
xchg
sub
fiadds
pop
aaa
enter
push
add
cmp
sub
cmp
scas
iret
cmp
scas
fwait
mov
cli
cwtl
sbb
or
sbb
mov
fstps
dec
filds
in
or
mov
xchg
lret
loope
in
mov
mov
cld
adc
or
sub
andl
cltd
jg
jecxz
xchg
mov
scas
and
dec
adc
scas
mov
ljmp
adc
adc
or
adc
aam
push
inc
adc
add
mov
call
jbe
push
das
popa
jne
aad
dec
stc
pusha
add
and
call
jg
sub
insl
ficoml
fmull
rclb
adcl
and
test
cld
loop
fs
push
outsb
mov
pop
enter
adc
inc
pop
xor
mov
dec
xor
div
xlat
pop
jecxz
jmp
sbb
test
int3
ds
rcrb
xor
jp
fcoms
movd
push
arpl
data16
mov
cltd
or
pushf
push
pop
push
cli
test
fwait
ret
mov
test
scas
sbb
mov
cli
or
push
adc
mov
pop
cmp
sbb
loop
cmp
es
jns
fdivl
mov
xor
outsl
cmp
xchg
cmc
int
andb
add
sub
xor
jb
xchg
and
dec
cmp
dec
incb
pop
inc
cmp
outsb
jnp
inc
pusha
test
fdivrl
cmpsb
stc
mov
xchg
add
sbb
test
test
pop
sbb
and
out
addr16
shlb
cmp
fnstenv
sub
cmc
xchg
mov
xor
mov
jno
ret
mov
adcb
mov
xchg
inc
das
pop
outsl
or
jns
stos
cmp
sbb
arpl
testl
pop
dec
int
insb
dec
sbb
and
cwtl
mov
outsl
dec
pop
hlt
loop
inc
int
and
ja
in
inc
jns
cmp
mov
inc
push
fiadds
push
mov
add
jno
popf
sbb
xchg
mov
adcl
mov
icebp
lret
es
leave
sub
push
pushf
int
lock
xchg
pop
dec
test
call
loope
punpcklwd
mov
setl
repz
mov
xor
icebp
std
sub
or
cmp
aam
andl
lcall
xchg
test
mov
and
stos
insb
mov
cmpsb
mov
scas
leave
jmp
cwtl
adc
mov
imul
push
dec
mov
and
push
jbe
mov
mov
dec
mov
mov
mov
mov
sub
pop
jp
xchg
mov
jge
scas
scas
sub
loope
loopne
lret
imul
push
and
insb
xrelease
adcl
movsb
loope
xchg
jne
dec
fildl
clc
or
push
xor
ds
lods
jp
mov
rcrl
test
jne
push
aad
dec
shlb
sub
mov
ljmp
lret
xor
jl
ss
jle
mov
dec
mov
aas
cmpsb
mov
add
outsb
lods
lods
clc
xlat
js
push
mov
les
sbb
pop
and
cld
loopne
xor
sti
cltd
movups
mov
mov
rorb
int
loop
cmp
cmp
ljmp
lahf
aam
rorb
nop
dec
pop
scas
lods
fdivr
xlat
popf
adc
cmpl
and
iret
or
in
stos
sub
jbe
sti
outsb
mov
in
dec
fs
dec
ja
dec
mov
iret
xor
std
cmp
mov
jl
call
push
sbb
icebp
mov
je
push
dec
and
jnp
fcoml
pop
out
push
int3
push
pop
jmp
rcl
popf
ja
sub
inc
xor
or
in
adc
mov
cld
daa
cmp
icebp
add
mov
outsb
shrb
push
add
cmc
out
add
dec
out
adc
inc
mov
lea
mov
sbbl
sub
inc
js
xor
mov
push
nop
jle
insb
enter
pop
jae
mov
out
aas
or
fcmovbe
insl
pop
js
cmp
cmp
push
jp
add
and
adc
lea
leave
push
cmp
xchg
pusha
push
outsb
test
test
push
int3
cmp
imul
lds
in
push
ds
xchg
in
xor
addr16
stc
dec
mov
push
pusha
pop
movsl
sbb
pusha
or
mov
out
clc
hlt
xor
addb
push
push
das
notb
rorb
imul
push
cmpsb
dec
sub
mov
jl
in
sub
sub
inc
cmpsl
aad
dec
push
add
pop
pop
mov
inc
mov
ljmp
sub
xchg
mov
inc
sbb
fsubs
dec
fists
cld
xor
test
push
jmp
je
push
pusha
nop
xchg
push
pop
and
sbb
or
cmp
lea
mov
mov
fbstp
add
les
ja
call
xor
lods
leave
add
out
pop
push
jecxz
movsb
gs
push
pop
jg
jp
sub
js
and
lods
inc
xchg
cmp
push
inc
sub
cmp
pop
and
pushf
or
mov
xor
insl
pop
mov
imul
iret
shl
sbb
movsl
xlat
les
push
and
pop
lock
aad
pop
pop
arpl
cs
xorb
sbb
outsb
xchg
jno
cmc
cmp
add
orb
and
xchg
or
ret
divl
dec
insl
icebp
enter
out
mov
arpl
sub
mov
mov
cmp
dec
add
dec
pop
movsb
test
jl
push
pop
or
mov
jne
stos
dec
add
ja
xchg
cld
stos
subl
lods
sub
sahf
inc
and
xchg
xor
pop
push
ret
push
fcomps
arpl
cli
dec
dec
push
and
sti
sub
mov
mov
or
and
add
adc
sbb
js
sysenter
movsl
fcomps
outsb
adc
pushf
cmpsb
lret
mov
aaa
sbb
mov
jmp
insl
imul
loope
out
out
dec
fldl2e
and
mov
dec
dec
pop
sbb
ja
es
pop
jb
jae
and
mov
notb
push
fwait
sarl
or
pop
xchg
pop
cmpsl
push
mov
fs
or
mov
insb
mov
cmp
jp
lahf
pop
lret
mov
cwtl
xor
adc
fs
add
lahf
fisttpll
out
hlt
xor
push
aad
in
daa
andl
movsl
cmp
sbbb
pop
mov
push
sbb
js,pt
out
or
mov
loope
inc
fists
and
mov
mov
add
sbb
call
mov
loop
mov
movsb
aas
test
push
pop
dec
push
adc
cwtl
or
jbe
jo
jne
icebp
add
addr16
jmp
test
and
mov
sbb
lds
out
repz
scas
add
inc
mov
repz
sbb
fadd
bound
adc
add
incl
mov
sub
cmp
js
pop
push
add
cmpsb
jb
sub
push
or
mov
jne
mov
mov
imulb
pusha
loop
and
lret
lods
adc
leave
cwtl
sub
test
sarl
xchg
cld
and
cli
add
jp
pop
xchg
stc
jmp
outsb
dec
jbe
std
addb
xor
jae
cmp
sbb
aaa
push
add
gs
icebp
sahf
imul
scas
jbe
loope
pop
aad
pop
das
add
fnsave
data16
adc
add
xor
add
push
add
arpl
cli
mov
out
daa
sahf
cmp
rcpps
xor
sub
incl
pop
enter
in
mov
aam
jp
xor
sbb
test
and
movsb
inc
adc
mov
ja
gs
inc
jmp
jge
lahf
xlat
mov
js
or
dec
fstpl
loopne
outsb
pop
sbb
ror
cmc
xor
xchg
inc
fwait
lods
mov
das
mov
mov
sti
push
adc
cmp
loope
les
cmp
sub
dec
pop
incb
dec
in
mov
jecxz
push
mov
pop
test
cmp
data16
sub
cltd
jl
int3
divb
xchg
out
or
pop
cltd
adc
pusha
mov
and
lret
js
leave
sarb
and
es
cmpsb
fistpll
or
fisttpl
cmp
outsl
sub
jno
das
adc
inc
push
xchg
jb
bound
fnstcw
push
call
loope
lds
test
fs
inc
imul
cld
add
jb
aad
movsl
or
loopne,pt
testl
adc
ret
mov
cld
test
rcll
fistl
cmpsl
pop
mov
dec
arpl
sub
and
dec
and
xor
jnp
adc
rcrb
mov
aas
ret
out
imul
xor
mov
scas
rcrl
mov
inc
jnp
jecxz
add
notl
cwtl
pushl
clc
out
repz
dec
inc
pop
inc
in
push
adc
jnp
inc
insb
lret
xlat
mov
and
in
cs
mov
xor
jnp
aam
add
repz
push
sub
add
xor
cmp
cmpsl
xor
pop
loope
mov
inc
out
jbe
scas
scas
jmp
repz
stc
mov
stos
or
dec
int3
add
jle
xor
outsb
daa
xchg
imul
gs
lret
imul
pushf
outsb
inc
dec
sub
pusha
mov
sub
xchg
mov
mov
add
and
dec
addr16
inc
or
push
push
add
dec
in
add
mov
sub
stos
jge
mulb
test
div
cld
ret
adc
jmp
loop
add
icebp
and
scas
and
xchg
out
pop
mov
and
push
jnp
in
cmpb
sub
addr16
ja
inc
loope
leave
xor
jl
add
mov
adc
fcomps
outsl
in
daa
mov
push
jne
jns
lcall
lea
mov
sbb
cmp
and
sahf
mov
sub
ja
andl
insb
mov
movsb
xchg
mov
inc
mov
mov
mov
jb
scas
mov
adc
fwait
xchg
hlt
mov
movsl
loop
leave
jo
jp
xchg
sub
add
jbe
sbb
mov
ss
sbbb
dec
rorb
sbb
sub
jle
aaa
ss
fcomps
or
ljmp
es
sti
or
mov
dec
adc
adcb
add
movsl
adc
pop
xchg
push
mov
xorb
push
push
mov
sub
pusha
or
shrb
and
std
or
in
lea
xor
loopne
out
jne
call
shlb
inc
inc
scas
and
push
and
movsb
out
sbb
ffree
pop
pop
shlb
pop
push
test
in
mov
xor
xor
pop
xchg
pavgb
push
lock
xor
mov
sub
xor
sbb
xchg
andl
mov
inc
xchg
jbe
push
adcl
test
mov
arpl
and
mov
lods
pusha
pop
inc
fadd
xchg
or
adc
inc
dec
mov
outsl
shr
jl
xor
and
add
mov
inc
jecxz
test
xchg
loope
pop
add
pushf
dec
scas
add
fbstp
inc
les
inc
repnz
adc
mov
sbb
jno
loope
std
jl
icebp
cmp
rcll
pop
or
xor
mov
jbe
pushf
push
push
pop
sbb
pop
int3
and
lcall
pop
std
mov
rorl
mov
push
or
mov
cs
push
outsl
leave
divl
pop
adc
lods
xchg
inc
jp
lods
sbb
inc
mov
cs
in
bound
lcall
push
adc
std
push
out
enter
jg
mov
mov
lcall
inc
dec
into
cmp
mov
mov
lcall
popf
pop
mov
lret
fadds
iret
mov
std
xor
bound
adc
ja
ja
leave
stos
inc
cli
test
pop
cmp
lea
pop
push
add
dec
jbe
gs
insl
outsb
je
test
call
insl
xor
push
je
test
rorb
pushf
mov
test
shl
push
adc
data16
ljmp
push
mov
es
dec
out
and
fimull
and
mov
mov
cli
mov
bound
push
adc
int3
scas
inc
add
dec
push
mov
jp
pusha
sub
cmp
adc
fs
rcrl
out
imul
xchg
idivl
cmp
fnstsw
mov
xchg
sahf
mov
std
xchg
cld
ljmp
jge
pop
loopne
neg
sub
xchg
inc
inc
jo
cmpb
mov
repz
and
aaa
loop
ret
popa
arpl
fcoms
jne
adc
dec
hlt
mov
jl
add
lret
mov
dec
outsb
int3
jno
mov
fwait
xchg
mov
pushf
stos
lea
aas
pop
cmpsl
jp
loop
addb
clc
add
int3
push
scas
inc
pop
in
mov
pop
es
xchg
andb
sub
cwtl
out
popl
xor
in
mov
das
pushf
adc
stc
xor
pandn
js
xchg
popa
int3
push
push
rclb
cwtl
cmc
sub
loope
in
insl
aad
push
push
inc
fistps
pusha
pushf
add
push
dec
pop
in
jbe
popf
popa
mov
push
cwtl
stos
lock
loopne
inc
or
lods
mov
or
packssdw
outsb
adc
insl
psubd
pop
xchg
jne
dec
in
gs
jecxz
mov
pushf
ret
inc
adcb
stos
cmp
add
aam
mul
or
rcrb
loopne
xchg
imul
jne
mov
push
adc
add
dec
leave
jg
sahf
push
daa
clc
in
adc
bound
insb
ficomps
popa
pop
sub
movsl
outsl
inc
push
lods
push
dec
sub
and
mov
pop
push
in
add
aas
mov
cld
pop
aam
xor
sbb
push
sahf
aam
stos
add
outsl
inc
shlb
push
push
pop
test
xor
mov
adc
mov
cmp
ja
xor
rcll
in
mov
xor
popa
push
mov
pop
pop
cld
out
mov
adc
mov
scas
out
push
jmp
mov
jb
inc
mov
pop
sbb
fadd
je
rcrb
mov
stos
stos
aaa
rcll
cli
push
xor
jbe
mov
xchg
jmp
jb
sahf
xchg
push
iret
adc
mov
mov
dec
addb
xchg
and
aam
jnp
mov
test
cld
sbb
add
mov
repz
sarb
rcrb
in
jg
and
pushf
inc
fcmovne
jmp
sbb
and
loop
fdivrs
mov
sbb
sub
mov
mov
and
nop
lret
dec
sub
das
leave
lahf
mov
pop
dec
mov
xchg
add
push
mov
fiadds
sbb
stos
ljmp
push
sub
adc
mov
popa
adc
and
add
sbb
stos
scas
nop
push
jns
fwait
sbb
loope
arpl
xchg
dec
xchg
sti
std
or
repnz
lods
cmpsb
add
mov
shlb
mov
pop
fdiv
call
enter
pop
popa
xor
xor
stc
jl
add
lods
dec
stos
mov
in
add
mov
aas
xchg
pop
and
pop
dec
inc
jns
mov
in
cs
subl
xlat
adc
dec
ss
pop
rcll
mov
data16
in
cs
jno
mov
xchg
stc
rorl
and
adc
lcall
push
sti
mov
les
mov
ret
int3
outsl
in
push
imull
movsb
push
loop
jnp
mov
ss
mov
sub
jecxz
xchg
inc
inc
test
lods
std
xor
ss
mov
push
jecxz
xor
cmp
mov
fcomip
cli
mov
pop
inc
push
pop
call
fwait
xchg
and
shlb
pop
aam
mov
jae
les
ljmp
arpl
add
scas
cmp
xchg
mov
mov
jg
cli
jmp
jno
mov
test
pop
rcll
mov
mov
add
sahf
popf
outsl
dec
cmp
fadd
fsts
cmp
inc
push
out
pop
iret
test
xlat
addr16
pop
inc
mov
popa
adc
aad
rcr
pop
fimull
stos
fisubrl
jne
inc
or
rcl
dec
int3
or
mov
inc
outsl
sti
data16
mov
or
dec
fs
cwtl
push
jl
jo
cmp
imul
sub
das
sbb
and
cmp
mov
shll
sahf
test
and
mov
add
jo
fdivl
dec
mov
inc
and
out
int
fstps
mov
decb
inc
ss
pop
pop
aaa
sbbl
pushf
out
pushf
inc
push
fwait
add
stos
test
xchg
dec
lahf
mov
insb
imul
push
punpckhwd
or
int
das
xlat
pushf
jge
inc
iret
inc
or
sub
stc
push
andb
imul
sub
mov
mov
push
add
mov
push
stc
pop
insl
je
push
inc
xor
mov
jns
pop
addr16
pop
mov
mov
das
shl
das
push
push
pop
inc
and
mov
test
adcl
stos
xchg
mov
sbb
enter
out
ret
out
pusha
pop
lods
mov
jne
mov
int
mov
icebp
adc
jl
mov
push
js
in
add
pop
push
jecxz
leave
xor
dec
push
and
xlat
add
sbb
mov
gs
sub
test
fidivrs
sbb
ja
call
lods
jne
aad
mov
mov
add
lods
sub
daa
push
popf
adc
adc
data16
xchg
insl
lcall
cli
repz
or
push
icebp
xor
jl
or
sbb
sub
jecxz
out
jb
and
jg
mov
mov
loopne
or
insb
inc
bound
add
mov
insl
lcall
adc
xlat
mov
ja
dec
adc
mov
clc
arpl
adc
or
sahf
ss
mov
jne
jecxz
push
xorl
stc
scas
lcall
aas
sub
lret
push
lret
pop
das
loopne
fisubl
xor
mov
dec
imul
cs
and
ja
jno
mov
xor
in
pop
mov
sbb
ss
jb
rol
jns
test
push
movsb
add
dec
fs
mov
fcmovne
sti
fidivrs
addb
repnz
out
lds
sbb
sbb
std
mov
stos
add
jno
pop
mov
ds
jp
addb
popf
inc
movsl
xchg
dec
popa
cmpsl
out
pop
das
mov
es
add
insl
and
shrb
aam
jp
pop
fidivrl
sub
adc
cmpsl
mov
jmp
xor
decb
cwtl
lea
insl
add
enter
int
pop
adc
daa
dec
mov
sub
jns
and
in
ror
mov
xor
pop
mov
xchg
or
push
lahf
pop
es
xchg
and
xchg
out
mov
cmp
xchg
lock
lods
dec
xor
push
daa
add
int3
les
loop
js
in
mov
jno
adc
sub
mov
xchg
cmp
imul
aaa
mov
rorb
in
push
xor
jae
jnp
in
jecxz
loopne
or
mov
aaa
andb
cmp
shll
jb,pn
subl
and
cmc
outsb
int
adc
jl
jne
xchg
mov
out
jbe
std
clc
jnp
dec
in
xchg
cltd
pusha
das
inc
or
push
shl
jp
dec
outsl
test
sbb
scas
sbb
push
mov
adc
push
leave
mov
incl
jmp
lahf
scas
data16
sub
mov
movsl
fcoml
pusha
cmpsb
push
cld
and
mov
xchg
mov
fcmovnbe
gs
jo
xor
push
lods
xor
jg
aas
scas
jmp
fwait
pop
pop
add
pop
mov
push
fdivl
lret
jno
mov
sbb
cmp
aas
push
hlt
pop
pop
clc
pop
sub
in
loope
jbe
jnp
leave
xchg
aaa
jmp
fdivrs
int
sbb
aas
mov
pop
sbb
mov
insb
popl
cli
xchg
lret
ds
add
movsb
pop
ret
xchg
pushf
mov
push
push
adc
mov
mov
outsb
test
sub
lea
jae
pop
cltd
jp
test
jmp
mov
jg
imul
ret
push
aam
dec
aas
push
in
cmpl
stos
sbb
subl
imul
shll
or
popf
or
lods
push
mov
adc
bound
fcoml
lret
push
xor
mov
incl
add
mov
shr
dec
push
add
fsubrl
call
xor
xlat
add
xchg
cmp
pop
imul
dec
lcall
int3
pop
lahf
outsl
dec
ja
pop
sahf
lcall
idiv
xor
inc
adc
xor
lock
std
bound
jae
aas
ljmp
fcoms
xchg
lcall
rorb
les
dec
adc
lahf
bound
gs
js
icebp
int
out
fidivs
stos
sub
jg
add
dec
lcall
sbb
add
arpl
push
loopne
sbb
ljmp
sbbb
cmovo
xchg
call
std
xor
or
or
fildll
jmp
or
inc
out
sub
insb
xor
enter
stc
div
addb
push
vaddpd
lds
and
rcrb
nop
out
lahf
insl
xlat
sbb
xor
shlb
cmpsb
dec
outsl
aam
sbb
fistpll
cld
jo
ficoml
xor
ds
sbb
js
pushf
mov
pop
in
pop
out
cmp
nop
push
xor
pop
inc
adc
sti
sub
jno
or
or
mov
adc
jae
outsl
sub
cmpsb
pop
insb
jp
bound
adcb
out
inc
repnz
int3
data16
test
setns
adc
sub
imul
lea
mov
xor
enter
inc
jnp
jle
std
ficoms
add
iret
pop
inc
and
mov
arpl
fsubl
and
lock
mov
mov
nop
pop
pop
jmp
movsl
mov
mov
mov
mov
bound
jae
cmp
in
mov
mov
push
pop
cmc
push
test
or
sahf
out
cmp
jb
pop
nop
inc
xchg
cmp
insl
mov
jmp
jge
and
dec
pop
fwait
push
jo
mov
dec
je
mov
mov
pop
add
cmpsl
dec
mov
sub
add
xchg
and
jb
mov
mov
dec
ss
mov
shrb
fcompl
ljmp
pop
popa
sub
rcrb
enter
mov
test
pop
push
in
loope
adc
loope
xor
mov
add
pop
adc
inc
jg
sar
push
scas
sbbb
adc
mov
pop
andb
out
cmc
mov
mov
dec
sub
repz
pop
cmp
dec
lret
pop
imul
cmp
jbe
insb
jge
xor
mov
stos
xor
lock
cmp
push
sbb
in
pop
pop
scas
cmpsl
jne
xchg
into
sarl
test
aam
push
inc
mov
add
pop
les
dec
test
int3
xor
mov
in
add
jle
or
faddl
dec
xchg
xchg
lods
aam
out
jge
jecxz
aas
orl
aaa
cmp
mov
cmc
aad
mov
or
faddp
pop
xor
xchg
loopne
gs
sub
cs
pop
dec
sub
aaa
lahf
sbb
adc
nop
push
add
outsl
aas
xor
pop
xchg
out
mov
sub
loopne
mov
stos
in
or
clc
rcl
or
in
push
out
mov
dec
push
in
stc
std
jae
push
lea
es
popa
outsl
lcall
mov
pusha
sub
outsb
or
leave
mov
outsl
shr
jne
mov
mov
ds
pushf
in
data16
xchg
nop
movsl
fisttpl
rclb
faddp
outsl
mov
add
sbb
push
les
jae
inc
xor
cmp
rolb
xchg
mov
add
insl
and
pushf
dec
mov
and
sbb
push
ljmp
imul
xchg
dec
daa
or
push
lahf
or
sbb
sbb
iret
out
out
xchg
and
imul
push
add
push
xchg
and
mov
imul
movb
pop
sarb
lock
xor
sbb
lahf
mov
inc
call
es
dec
scas
add
adc
mov
aaa
daa
scas
mov
sbb
push
sub
xor
xor
jge
dec
aas
mov
mov
jmp
in
mov
and
out
push
clc
and
add
js
jmp
sbbl
fisttps
aad
add
cmp
mov
adc
ljmp
sub
out
js
bound
and
cli
lahf
insl
or
mov
shrl
jnp
push
push
aam
mov
or
stos
lret
push
adc
mov
mov
mov
cmpsl
mov
mov
out
arpl
rorb
daa
das
fidivl
adc
lret
in
aad
pushf
dec
repz
jno
shl
mov
jns
ds
add
fdivs
dec
sub
int3
pop
loopne
and
test
xchg
sbb
cld
repz
lock
cwtl
jge
pusha
inc
mov
adc
in
inc
hlt
mov
adc
bound
mov
xor
xchg
sub
leave
cwtl
imul
stos
lds
push
mov
or
cltd
cmpb
bound
cmp
mov
les
sub
cwtl
adc
mov
pop
test
ror
test
xorl
sub
shll
mov
lahf
outsl
mov
pop
stc
iret
or
cmc
fcmovnbe
enter
rcl
popa
stos
sbb
or
es
jl
call
mov
adc
jo
mov
pop
add
sbb
in
push
lds
and
xchg
ror
stc
in
dec
lea
imul
aas
mov
or
xchg
sbb
stos
xor
jecxz
push
cltd
and
jno
push
lods
fsubrl
mov
mov
sbb
roll
push
adc
add
jo
pop
xor
dec
test
arpl
xor
or
mov
cmp
push
lret
pusha
mov
mov
mov
pop
mov
andl
repnz
aam
mov
pop
dec
adc
dec
adc
rcrl
push
pop
lret
push
andb
adc
adc
fbstp
adc
mov
jl
cmc
ss
shll
divl
or
mov
les
cmpsb
outsl
repnz
xchg
pop
mov
loope
pop
jle
mov
in
mov
jnp
inc
dec
int3
add
out
dec
lret
outsl
out
and
aaa
leave
and
jb
fmul
cmp
or
sti
mov
adc
cmpsl
xor
sahf
mov
out
imul
ljmp
adc
mov
sub
leave
clc
mov
push
test
insl
cld
dec
adc
or
movsl
sub
mov
mov
mov
add
mull
add
dec
loop
orl
rcrl
int
sti
adc
mov
jnp
mov
fbld
pop
pusha
adc
sbb
mov
fidivrl
hlt
rcr
adc
test
jbe
subl
sub
js
mov
push
jp
fsubrs
js
insb
push
push
mov
outsl
shl
popf
ljmp
pop
pop
bound
jle
hlt
pop
and
push
lahf
int3
fstpl
into
int
jb
fists
cmp
xchg
out
jbe
stos
cmp
es
dec
pop
adc
add
dec
mov
scas
test
lock
cmpl
mov
and
mov
arpl
xchg
pop
adc
fwait
sbb
cltd
aad
mov
icebp
pop
sub
in
mov
int
adc
jmp
icebp
jns
outsl
fwait
mov
stos
ss
xchg
pop
mov
xchg
js
cmp
mov
jnp
out
lcall
in
fildll
inc
fwait
adc
mov
xchg
lds
jg
jbe
lahf
push
pop
outsl
call
inc
mov
gs
mov
fnstenv
sti
and
jnp
lcall
jp
lods
mov
fsubr
lret
je
mov
stos
in
in
nop
mov
mov
ljmp
add
jge
dec
mov
movsb
jbe
in
cmp
js
pusha
and
outsl
shll
int3
jb
xchg
and
cmp
pop
fidivl
jp
add
ret
loopne
int3
mov
out
cwtl
dec
je
jae
sbb
pusha
mov
xor
lret
or
scas
ror
jecxz
test
dec
jp
dec
pop
cmp
fnsetpm(287
stos
inc
sub
mov
or
movsb
jecxz
xchg
sub
scas
popa
fwait
loopne
xor
mov
push
mov
popf
xchg
push
outsl
mov
insb
push
insl
xor
xor
adc
xor
daa
ljmp
mov
fs
cmp
fwait
inc
lock
jmp
cwtl
sti
mov
pusha
jbe
movsl
push
in
les
mulb
push
ljmp
rcr
out
jno
mull
cmp
ret
xchg
sbb
xor
cmpsb
xchg
jno
sub
mov
pop
push
leave
test
les
sub
sbb
xchg
add
jecxz
sbb
xor
xchg
sbb
pusha
clc
std
add
lcall
dec
rol
and
jnp
aas
or
stos
ja
xchg
ja
jb
jno
call
xor
mov
insl
scas
xor
and
inc
mov
loopne
pop
mov
cmc
sub
jbe
mov
lds
es
nop
inc
int3
ror
movsl
cmc
and
int
cmp
js
xorb
jecxz
inc
inc
iret
mov
faddl
scas
es
inc
xchg
das
mov
cltd
out
inc
mov
dec
mov
ficoml
push
fdivrl
mov
movsb
jmp
rclb
sbb
fwait
push
push
mov
and
in
cmp
std
shll
mov
jnp
xchg
inc
rorl
loopne
gs
rcrb
insl
ret
lds
sub
imul
sub
sbb
insb
inc
packuswb
push
sbb
push
mov
inc
mov
adc
es
fisttpl
popa
fmuls
sub
xchg
or
and
call
lds
or
or
cs
in
mov
cld
in
ss
push
lock
jae
push
mull
cmp
jge
insb
mov
cmp
xchg
push
push
test
leave
adc
xor
and
rcrb
aad
mov
jno
gs
push
and
jp
mov
test
pop
jge
and
testl
mov
das
pop
pop
or
inc
test
push
mov
mov
aad
xchg
je
repz
push
movsb
pop
dec
jno
jo
stc
and
cs
or
in
fs
clc
out
es
aam
js
mov
xor
sarb
mov
mov
or
add
jns
lcall
add
cmp
mov
int3
xchg
popa
xor
pop
xor
xchg
sub
int
ret
in
push
sub
fldenv
sbbl
mov
mov
outsl
rcll
cmove
adc
xor
clc
ljmp
scas
dec
lods
cmc
bound
mov
repz
mov
bound
ss
fadds
mov
inc
sahf
scas
and
fnstenv
pop
stos
pop
repz
repnz
in
cwtl
push
into
mov
dec
jg
adc
jae
xlat
loope
pop
xor
and
clc
daa
adc
loopne
stos
sub
sbbb
imul
je
pop
push
cli
xchg
pop
lods
adc
stos
test
or
jmp
shlb
iret
xor
pusha
cmpsb
ss
add
inc
in
xorl
popf
cmp
and
test
call
adc
popa
fimull
sub
je
in
aaa
lret
jmp
ds
add
jb
or
outsl
sub
adc
cmp
xor
jnp
push
xor
cmp
test
rcl
jbe
ss
pop
inc
and
cmp
pop
push
popa
andl
jnp
in
pop
jmp
jge
mov
lea
orl
cmp
stos
sub
ds
mov
push
push
dec
adc
mov
test
mov
inc
sti
out
shrb
outsl
icebp
mov
movsl
repz
mov
mov
add
int
pop
and
or
push
fs
stos
lds
andl
dec
jne
add
test
xchg
sarb
mov
imul
lds
shrl
xchg
dec
xchg
dec
ss
and
sahf
dec
cmp
xor
inc
stos
cs
add
sub
das
in
pop
enter
push
imul
sub
sarb
adcl
out
scas
dec
loopne
lret
adc
gs
push
push
call
mov
adc
outsl
cmp
dec
fldl
mov
sbb
mov
xor
in
jnp
repz
inc
push
js
insb
sub
adc
adc
xor
xchg
test
cltd
in
mov
sub
mov
test
loope
mov
xor
xchg
cmp
fiadds
jmp
pop
inc
pop
mov
cs
add
inc
loope
into
andb
sahf
xchg
cli
pop
mov
fnstcw
test
shl
jb
outsb
push
mov
gs
rcl
sahf
ss
ret
mov
aaa
xchg
ljmp
push
dec
loopne
in
pushf
test
shlb
icebp
ss
arpl
jnp
jae
jno
and
jl
push
repnz
popf
fcompl
xchg
jns
pop
adc
sub
jg
push
out
sbb
rcrb
bound
xor
pop
adc
sbb
pop
stc
jbe
movsl
ljmp
mov
sbb
jnp,pn
pushf
clc
push
cmpl
mov
jge
das
mov
test
jp
cld
mov
xor
icebp
jnp
or
push
sub
je
dec
inc
iret
movsb
repz
cld
pop
sbb
fidivrs
mov
push
mov
pop
inc
sbbl
std
mov
jmp
leave
hlt
push
leave
movsl
sub
xlat
sub
dec
stos
push
inc
and
xor
pop
out
icebp
orb
xchg
mov
xchg
mov
aas
jmp
xchg
je
aam
mov
in
mov
lods
push
filds
xchg
push
in
daa
notl
ret
jmp
sbb
lds
loopne
pop
insl
push
xchg
cmc
int
aaa
fsubrl
pushf
pop
dec
sbb
mull
pop
jo
inc
subb
out
enter
shll
mov
cltd
je
into
fistpll
mov
or
fxch
addr16
notb
cltd
xor
mov
sub
rorb
test
mov
jb
xor
dec
inc
jl
stos
adc
lods
inc
cmpsl
push
addl
ja
jecxz
xchg
in
repz
lret
mov
inc
xor
cmp
inc
int3
push
gs
ja
test
pop
ja
or
mov
scas
inc
mov
pop
ret
mov
add
test
push
lret
add
ret
or
ret
imul
js
jp
movsl
xchg
testl
loope
mov
aas
stc
rclb
pushf
ljmp
mov
xchg
jno
lcall
dec
lret
xor
ds
cmc
mov
adc
fsubl
xchg
scas
sub
pushf
adc
pop
dec
and
mov
inc
mov
jecxz
xchg
mov
push
aam
repz
mov
js
imul
sbb
push
ss
pop
pop
insl
shll
lods
rcrb
cmp
outsl
pusha
push
lds
aaa
loop
dec
outsb
rorb
and
jae
addl
cmpsb
xchg
cmc
sub
das
inc
lock
cmp
pop
and
xchg
pop
stc
shr
jne
inc
cwtl
incl
or
stos
pop
imul
mov
fldt
xacquire
cmp
int3
fdivrl
scas
xchg
pop
int
in
mov
dec
aam
lcall
fst
mov
mov
sub
jp
into
xchg
movsb
cltd
xchg
ds
xchg
movups
xchg
and
xor
clc
cmp
mov
sub
mov
test
jmp
or
sub
insb
dec
mov
ret
dec
add
daa
je
out
and
xor
inc
idiv
jmp
mov
mov
jnp
lock
ljmp
add
push
iret
sub
stos
pop
pop
sbb
push
sbb
cmp
xchg
mov
pusha
pop
daa
jo
jle
fs
sbbl
add
xor
cmpsb
and
or
pop
out
enter
ficoml
subps
cltd
call
xchg
push
test
ljmp
cli
inc
cld
notl
or
mov
add
add
push
xchg
adc
test
pop
call
addr16
js
es
leave
insb
in
adcb
cmp
pop
push
jl
push
pop
xchg
push
movsl
in
gs
sbb
inc
sub
sti
mov
aad
jb
in
fldt
lds
lahf
push
mov
xor
rolb
adc
jo
mov
cmp
add
repnz
add
push
mov
push
sbb
jmp
js
paddq
aaa
push
test
push
sub
lahf
xchg
sbb
mov
out
cmp
cltd
jmp
xchg
xorb
cmc
push
scas
pushf
in
fidivs
jle
pop
divl
xor
inc
int3
fldt
mov
rcrl
ljmp
mov
int
stos
daa
loopne
cmpsb
loope
insl
or
icebp
xor
jbe
push
cltd
jo
jmp
dec
mov
jle
shl
hlt
mov
xchg
sbb
mov
or
push
cli
stos
sub
std
das
sahf
mov
clts
xchg
stos
cmp
ss
cmpl
jns
lcall
or
daa
aas
xchg
inc
adc
push
ds
ljmp
je
xor
jns
ja
or
sar
xchg
mov
enter
push
sbb
xchg
or
add
push
adc
subl
iret
insb
fstp
sbb
ret
inc
icebp
in
xor
lods
push
jl
fcmove
dec
jl
push
xor
sete
add
inc
cli
nop
loope
dec
cmc
popa
mov
add
or
stc
loop
test
scas
push
adc
movsl
xor
sti
jl
dec
outsl
lret
movsl
sahf
push
mov
mov
and
jo
in
insl
mov
jle
sub
stc
sbb
lods
mov
jle
mov
add
sub
jnp
sub
pop
sub
jmp
stos
cltd
jl
add
xchg
cltd
or
pushf
in
pusha
jl
rcrl
and
add
test
pop
movsb
scas
addr16
pop
cmpsb
popa
or
or
fsubs
mov
stos
call
adc
loope
es
cmp
jp
pop
xchg
mov
cli
call
add
push
out
mov
cmp
mov
add
imulb
mov
fwait
xchg
pop
sub
mov
mov
xchg
xchg
outsl
pusha
mov
mov
jp
push
imul
push
sahf
out
mov
ds
mov
jne
fadds
mov
inc
mov
jno
sbb
pop
sub
mov
fimull
daa
mov
jp
cmp
es
pop
push
cwtl
fidivrl
and
aaa
mov
push
sub
or
shr
mov
arpl
mul
pushl
mov
mov
push
lock
push
stos
pop
pop
shll
push
data16
push
pop
mov
push
pop
or
nop
repnz
jnp
enter
test
cli
or
test
dec
ljmp
jecxz
cmc
aaa
jmp
aam
xor
cltd
mov
loope
jmp
mov
jmp
or
jge
outsb
shrl
or
jg
and
mov
xchg
imul
dec
test
push
inc
dec
sub
push
lret
mov
mov
cltd
xchg
cmp
aas
out
lock
data16
lock
scas
sub
lret
fs
xchg
clc
mov
movsb
vrcpss
aam
sub
xchg
fcomp
jge
je
negl
adc
push
cltd
sbb
stos
ds
add
inc
xor
in
shll
mov
mov
jmp
pop
sahf
aas
push
ret
cld
loop
fdivrs
mov
cmpl
jp
test
ss
push
add
mov
mov
clc
mov
inc
out
pop
xlat
sub
enter
pop
or
andb
arpl
xorb
mov
push
mov
add
faddl
mov
jg
out
pop
rcrb
fwait
push
mov
fwait
les
lds
mov
and
cltd
insl
mov
mov
mov
ret
xor
mov
test
sbb
in
lea
push
mov
fcmovne
push
es
lret
inc
sti
and
or
pop
mov
jo
adcb
inc
push
mov
push
outsl
sbb
cltd
or
aaa
mov
adc
fcomp
scas
push
push
shrb
push
wbinvd
loope
inc
xlat
ja
ss
xor
xchg
int3
test
popa
icebp
sub
adc
xchg
js
pop
or
outsl
or
fwait
inc
cmp
push
sub
leave
outsb
cmp
mov
adc
sahf
jg
xchg
enter
es
in
xchg
lods
int
xchg
push
add
push
xor
inc
mov
xor
add
push
dec
add
sbb
dec
mov
rclb
arpl
mov
scas
repz
loope
shll
pusha
insl
ss
stc
push
fs
sub
sbb
pop
test
or
mov
add
sahf
adcb
mov
pop
jns
push
pop
out
xchg
xchg
dec
sbbb
in
xlat
push
in
movsb
mov
inc
js
stos
outsl
pop
add
cmp
jl
jge
jecxz
mov
or
inc
push
cwtl
pop
popf
test
xor
mov
pop
test
insl
dec
into
dec
scas
nop
fdiv
inc
and
ficomps
xor
gs
dec
aad
dec
inc
aaa
jne
sahf
mov
rcll
int3
in
xor
sti
shrl
out
bound
out
popf
pusha
outsb
dec
mov
call
jae
fdivs
mov
xor
mov
pop
nop
movsb
adc
pushf
ss
xlat
cli
xchg
in
jl
pop
xorl
pop
iret
jo
ret
outsl
mov
dec
mov
sub
adc
in
push
mov
cmpsl
push
mov
pop
lds
pop
push
inc
jge
jne
mov
popf
sahf
mov
jnp
mov
sbb
mov
cwtl
fidivrs
mov
dec
fbld
dec
call
jno
or
dec
push
xor
aaa
sub
push
mov
aad
shufps
cmpsl
dec
mov
idivl
mov
rol
lock
and
testb
pusha
into
pushl
pushf
dec
in
shlb
inc
cmp
outsb
clc
ds
mov
pop
mov
cltd
call
aas
mov
add
mov
add
pop
xor
jae
pushf
xor
push
movsl
std
sbb
mov
shll
inc
clc
add
or
das
ret
cmp
push
or
cld
lret
xor
cmp
mov
mov
add
icebp
inc
sub
das
cmp
jne
inc
jle,pn
push
shr
jno
lahf
call
out
icebp
popf
pop
mov
sub
lea
mul
hlt
sub
push
gs
xorb
cmpsb
test
int3
pop
iret
xor
je
cmp
in
or
adc
lret
pusha
pop
adc
push
and
fisttps
pop
nop/reserved
xlat
pop
push
orl
out
dec
sub
add
gs
stc
push
cmc
adc
inc
shll
mov
cs
jg
mov
les
nop
lods
push
pop
fistl
mov
cmc
test
stos
insb
popf
adc
lahf
insl
sbb
in
cmpsb
jno
push
adc
add
push
scas
inc
clc
mov
ljmp
dec
xchg
ljmp
lret
fldt
jns
fcompp
scas
adc
out
push
fcompl
fbstp
xchg
pop
xor
mov
sub
lods
sub
mov
push
and
and
loope
cmovno
fbstp
add
inc
lahf
lahf
jge
fdiv
dec
sub
pop
add
hlt
pushf
popl
lods
push
push
inc
jne
repnz
sbb
out
cmp
out
sub
pushf
lahf
mov
rcrl
gs
insl
imul
adc
inc
iret
ds
mov
out
jle
sbbl
mov
push
xlat
mov
movsb
out
pusha
push
bound
push
xchg
les
xchg
push
fidivrs
data16
or
push
pushf
add
repz
test
mov
adc
add
xchg
jecxz
test
jno
cmp
cmpsl
mov
sub
sti
jl
add
es
add
dec
sbb
test
jno
scas
inc
jg
jp
push
lret
enter
ja
mov
xor
lahf
rcr
mov
add
cld
outsl
jg
cltd
ss
dec
mov
xlat
add
mov
jae
add
jle
mov
add
lret
std
dec
loop
jb
mov
xchg
inc
in
cli
aad
mov
rclb
je
fmul
addb
mov
add
sub
xor
cmp
mov
es
mov
push
jl
inc
sub
aaa
mov
lcall
test
pop
mov
jno
lret
inc
lahf
adc
into
pop
testl
fidivrs
mov
cmovnp
mov
rcr
test
sahf
aaa
mov
mov
fnstcw
cmp
andb
insl
nop
mov
push
inc
dec
jecxz
cs
sub
pop
out
popa
jg
pusha
jne
test
cld
inc
push
push
cmpsb
adc
js
sbb
clc
decl
xchg
imul
nop
dec
cmpsl
in
fdivrs
pop
jbe
inc
dec
pushf
repz
mov
cmp
mov
or
lcall
pop
cmp
xor
imulb
iret
cmpsb
sbb
popf
xchg
xchg
enter
jae
nop
xchg
stos
add
cmp
mov
fs
sub
lahf
das
mov
fs
mov
adc
test
lods
pop
xchg
je
iret
push
stc
push
adc
sbbl
pop
xchg
sub
dec
mov
sarl
mov
pop
les
jb
push
xor
adc
pusha
mov
mov
lcall
in
jmp
cs
push
out
and
inc
add
xchg
data16
adc
dec
stos
push
sub
jl
inc
push
jno
xchg
sub
mov
lret
pop
and
popf
std
jns
mov
in
out
fidivrs
icebp
jae
dec
icebp
in
push
test
mov
aaa
pusha
cmp
stos
or
cmp
mov
inc
cwtl
rorb
add
and
inc
sub
rcrl
cltd
jns
xchg
inc
in
out
call
push
ljmp
mov
aam
mov
mov
int
loope
pop
fisubrs
shrl
fwait
pushf
xor
in
mov
scas
les
sbb
and
testl
aaa
pushf
and
into
xlat
bound
rcll
add
xor
scas
cwtl
sub
inc
pop
rcrl
mov
fsts
pop
xlat
cmpsb
sbb
pop
mov
jg
mov
jne
mov
out
jne
fimuls
ja
sbb
and
dec
iret
daa
shll
dec
out
xchg
mov
add
and
mov
mov
out
rcll
loop
loopne
jmp
pop
pop
data16
loopne
push
hlt
cwtl
xor
push
icebp
lods
pop
dec
sar
xchg
xlat
leave
lret
mov
xchg
inc
xor
shrb
ja
out
and
repz
push
aas
push
cld
rclb
call
popf
push
and
adc
int
add
mov
clc
pop
pop
pop
sub
pushw
inc
ja
inc
outsl
xchg
pop
sbb
sbb
cmp
push
or
fidivrs
movsl
mov
out
rcrb
into
mov
xchg
mov
jl
pop
ror
mov
out
add
jmp
imul
dec
push
sbb
movb
imul
in
jg
sub
mov
dec
in
inc
and
xor
pop
scas
fsubrl
xchg
push
cmp
jno
loop
push
out
and
imull
int3
mov
enter
xor
bnd
inc
ljmp
mov
dec
pop
or
cld
pop
xchg
rcrl
inc
pop
xchg
or
push
iret
mov
dec
sbbb
clc
jbe
or
mov
popa
fisubs
popf
mov
popf
jp
mov
adc
mov
sub
int
call
or
sti
leave
mov
aaa
push
sbb
dec
retw
ficomps
sub
mov
dec
test
xor
pop
fisubrs
js
sub
mov
jnp
mov
sub
inc
adc
sbb
test
jae
jae,pn
or
incb
or
fisttpll
pop
jle
shlb
test
incb
clc
xor
push
sub
iret
popa
adc
cmpsl
push
nop
push
or
and
in
sbb
outsl
pushf
jo
xlat
out
in
add
cmp
sub
add
mov
pushl
add
mov
push
add
xor
jne
int
xor
out
roll
out
dec
addr16
insl
xor
push
jne
cmp
xor
lods
or
scas
cmpsb
inc
cmpb
in
out
pop
fnsave
jae
mov
fmuls
sti
es
into
outsl
inc
xor
popa
arpl
stc
inc
fmul
pop
lret
sub
sub
sarb
or
mov
adc
mov
add
and
sub
xor
dec
movsl
jp
adc
js
fwait
push
hlt
test
push
lods
lret
sbb
jmp
cwtl
add
adcb
shrb
jns
pop
into
nop
aaa
rcrb
jnp
fcoms
sbb
mov
negb
mov
cmpsb
ja
adc
push
dec
mov
mov
push
fnstsw
pop
cmp
xchg
xchg
je
rcrl
inc
sti
cltd
jp
or
clc
inc
jns
cmp
pop
mov
sbb
fs
stos
push
loopne
inc
cld
mov
xor
sub
push
mov
jns
push
sbb
xchg
and
mov
das
popa
jae
mov
mov
popa
pop
clc
aad
xor
and
jne
out
cmpsb
out
aad
adc
add
popf
loop
arpl
lahf
add
and
xor
cmp
pushf
push
in
iret
enter
in
or
pusha
je
jo
push
nop
inc
pop
bswap
repz
push
inc
scas
ja
adc
inc
push
lret
scas
lret
lods
xchg
lcall
test
sbb
inc
add
outsb
loopne
cltd
insl
pop
ja
icebp
mov
outsb
addr16
mov
or
shl
pusha
push
enter
mov
add
mov
jbe
pop
loop
test
adcb
xor
fninit
fs
mov
filds
sub
mov
popa
xchg
cmp
push
adc
pop
fisttpll
jg
jno
or
scas
push
cld
fisubrl
or
fs
rcrl
lahf
sarb
push
mov
mov
test
aaa
mov
aas
mov
scas
sbb
xchg
sub
push
mov
sbb
lea
sbb
enter
pop
push
inc
push
lock
loop
iret
mov
adc
pop
and
and
out
mov
into
call
inc
cli
mov
xlat
and
ficompl
frstor
mov
jecxz
add
inc
lods
mov
pushf
pop
or
sbb
in
shll
enter
loopne
fidivl
dec
les
xor
stos
andl
xor
dec
rcr
enter
sub
frstor
loope
sbb
mov
enter
out
test
dec
aaa
jmp
jo
push
aaa
scas
cli
scas
xor
sub
aaa
xchg
loop
add
dec
inc
cs
mov
cmpsb
sub
stos
rcll
push
dec
cmp
es
inc
mov
xchg
jo
ret
notl
and
or
pop
dec
arpl
and
divl
and
and
adc
in
js
fs
fists
jno
lods
std
pop
fstpl
dec
jnp
sub
mov
out
xor
es
xchg
adc
aad
adc
sub
dec
icebp
xor
xor
xor
push
sub
test
or
push
xchg
aad
ljmp
andl
xchg
sbb
cltd
cld
jp
pop
gs
and
push
add
xchg
aad
jge
xchg
in
mov
push
notb
pop
int3
cs
mov
loopne
push
fwait
xor
add
adc
in
ljmp
popa
xorl
cli
pop
push
ret
fstpl
jnp
adcl
cmpsb
in
cld
js
sbb
imull
mov
enter
ror
jo
dec
icebp
mov
add
movsb
mov
dec
pop
aaa
jl
ss
cmova
jo
repz
ret
es
mov
mov
jmp
cmp
cwtl
or
sbb
jecxz
xchg
jge
mov
lods
je
mov
sub
cmp
pop
xchg
negb
ret
cmc
fcompl
aad
push
sub
pop
mov
test
inc
popa
repz
sbbl
aas
dec
mov
orl
leave
push
mov
mov
push
gs
and
mov
les
dec
add
xchg
out
cli
dec
mov
push
xchg
xchg
xor
cltd
mov
out
jnp
pop
or
lods
push
or
cwtl
shlb
fidivl
outsb
shll
sbb
mov
add
dec
fs
notl
outsb
add
into
gs
in
fbld
dec
es
mov
and
lcall
pop
push
inc
cli
push
fwait
adc
les
bound
fucomi
jp
and
add
sahf
push
jne
and
cmc
push
lret
sub
pusha
subb
cmp
bound
xor
sbb
rorl
inc
aaa
xchg
and
fistps
push
and
inc
cmp
sub
fldt
mov
hlt
addl
scas
jbe
and
add
jmp
xchg
das
sbb
dec
jno
mov
ds
mov
dec
sbb
lahf
xorl
sbb
test
cmpsl
xchg
xor
idiv
sbb
jo
xor
lret
cld
dec
shrl
xchg
jns
out
out
ds
jmp
fs
shll
icebp
jbe
lods
stos
jg
sub
adc
bound
xor
popf
pop
add
xor
test
mov
enter
adc
pop
test
movsl
loope
xor
cmpsl
dec
cld
ds
stos
jmp
mov
insl
jge
cs
lcall
cmp
and
fnstsw
push
dec
add
xchg
mov
inc
xchg
outsb
sarb
dec
aad
jne
adc
pop
adc
outsl
shr
pop
xchg
and
add
xlat
int3
movsl
cmp
mov
movl
orb
aaa
movsl
dec
addr16
xchg
test
push
add
mov
nop
and
stos
gs
shl
dec
das
or
pop
add
jle
enter
ja
push
sub
inc
mov
loope
mov
mov
cmp
out
in
xor
mov
pop
pushf
adc
mov
je
jge
pop
mull
loop
push
dec
lds
call
xchg
lock
dec
or
xor
cwtl
je
int3
mov
pop
push
sub
inc
sub
sbb
jns
insl
mov
repz
sahf
jo
mov
test
mov
test
in
mov
into
inc
ljmp
xor
or
or
in
sbb
stos
jle
and
popa
test
orl
dec
and
lds
dec
xchg
nop
add
jo
add
xchg
lahf
loop
dec
ss
in
stos
jg
pushf
cwtl
enter
pop
sar
es
callw
sarb
test
lea
sbb
cmc
adc
movsb
rolb
mov
mov
scas
repz
aam
loopne
xchg
mov
subl
jecxz
adc
lret
aas
mov
jnp
cmp
insb
mov
pop
mov
pop
adc
addr16
mov
stos
ss
mov
lret
sbb
push
ljmp
xchg
div
loop
adc
iret
push
adc
xchg
jmp
xchg
icebp
mov
add
loopne
jg
call
lret
outsb
mov
mov
in
stc
adc
inc
rorl
mov
sar
dec
push
addr16
xchg
pushf
cmp
inc
xor
addr16
mov
mov
add
push
addr16
aad
jmp
movsb
icebp
dec
in
sub
cmp
mov
add
xor
add
pop
add
or
push
dec
push
lods
enter
js,pt
push
pop
mov
mov
cmpsb
das
pop
lahf
dec
in
xor
pusha
in
fistps
inc
add
or
jb
lds
lea
pop
faddp
loop
repz
hlt
gs
xor
lock
frstor
addl
je
hlt
jnp
push
fisubl
pop
xor
outsb
daa
outsb
outsb
les
push
repz
push
xchg
jb
jno
pop
push
das
or
pop
mov
das
loopne
pusha
mov
insb
adc
test
mov
push
movsb
mov
movsb
scas
cmp
inc
mov
iret
pop
or
push
cmc
add
sbb
rorl
push
jae
or
lahf
rcll
sub
fadds
and
mov
push
inc
sub
mov
gs
or
lods
adc
leave
nop
inc
jo
aam
sub
aad
sbb
jg
cwtl
mov
shrb
sub
dec
mov
sbb
xor
and
ljmp
test
std
adc
pop
add
add
dec
scas
outsl
adc
pop
mov
pop
test
lcall
push
mov
inc
dec
xor
push
fsubrl
push
lock
lret
lods
cs
cltd
mov
dec
mov
sbb
pushf
lods
push
imul
mov
cmpsl
adc
adc
push
mov
or
and
xor
out
daa
shlb
push
jp
adc
sub
movsl
lahf
sub
sub
xchg
pop
fists
ljmp
sbb
enter
ljmp
bound
call
and
sbb
push
dec
fsubr
cwtl
movsb
xor
pop
mov
sub
mov
stc
iret
pop
jo
inc
cmpsb
pusha
jbe
sbb
jnp
or
insb
jle
cmpsb
pop
pop
inc
ds
sub
call
add
dec
xchg
imul
lods
xchg
jle
out
push
orl
xchg
fists
ret
mov
jnp
sub
leave
adc
insb
xchg
mov
es
dec
dec
sbb
addb
sbb
nop
out
sahf
sar
inc
ret
adc
lret
sbb
in
and
inc
mov
adc
mov
divl
jae
out
mov
or
cmp
fcompl
leave
xchg
push
daa
lahf
mov
jb
nop
dec
adcb
data16
je
loop
loope
jge
push
shlb
xchg
sbb
jne
jne
lds
xchg
test
fimuls
inc
pusha
sub
mov
ror
dec
jmp
pop
mov
push
dec
movl
repnz
jle
sar
adc
inc
into
shrb
out
cmp
jmp
popa
hlt
or
jae
and
adc
in
sub
cmpsb
fidivl
xchg
mov
mov
cmpsb
sub
out
into
xor
aaa
pop
sub
pop
pop
mov
jno
cmp
jns
je
or
jne
dec
cmpsl
mov
push
mov
pop
test
mov
xchg
cli
lfs
mov
int3
adc
pop
sub
add
cli
cmp
imul
mov
clc
pusha
push
jecxz
jle
push
fadds
incl
jl
movsl
sbb
adc
sub
mov
mov
and
aam
jno
test
lods
inc
cmp
adcl
and
clc
movsb
add
jne
push
imul
cltd
mov
call
jno
push
pop
xchg
push
out
lods
xor
aaa
push
mov
cmp
pop
pop
out
inc
mov
jmp
mov
inc
fsub
imul
push
push
aaa
jmp
nop
dec
scas
and
sub
decb
jmp
mov
push
or
jg
mov
mov
sarb
push
xor
mov
cmp
or
lods
repz
jns
jo
mov
fidivs
jecxz
cmp
push
push
inc
cli
mov
sti
dec
repz
jmp
dec
pop
push
mov
loopne
out
sub
insl
and
call
sub
int
rorb
jno
push
cmp
addb
insb
mov
in
das
sahf
icebp
dec
push
cmp
js
movsb
pop
ret
iret
imul
mov
push
mov
and
mov
jge
push
inc
mov
pop
rolb
xlat
xchg
inc
ret
sbb
lret
jno
imul
mov
cld
lea
inc
dec
rol
add
imul
fsub
push
ss
out
xor
lock
out
mov
mov
shl
neg
mov
repnz
mov
rcll
ljmp
xor
adc
int
movsb
push
cmp
dec
sub
xor
push
cmp
arpl
roll
lret
in
push
and
xor
lock
or
scas
cmpsb
and
arpl
addb
adc
mov
inc
pop
mov
and
xor
test
clc
push
fldcw
in
jg
xchg
inc
jle
rorl
and
mov
repnz
int3
mov
imul
sti
jg
mov
mov
insl
inc
out
mov
pop
sbb
loopne
enter
mov
ds
or
inc
je
add
sbb
fsts
cltd
cmp
lea
mov
jmp
push
push
mov
xchg
or
jb
dec
jmp
and
adc
cmp
outsl
or
scas
dec
mov
push
and
cld
add
inc
outsl
xor
add
jg
sbb
sahf
xor
nop
outsb
aaa
scas
sar
scas
sub
sbb
outsl
pusha
lahf
fstpt
pop
jo
cmp
or
xchg
mov
mov
push
jge
mov
test
dec
stos
leave
mov
int3
or
xor
shl
dec
lock
fs
pop
les
fistpll
aas
popa
into
mov
inc
dec
es
ljmp
sub
mov
jno
inc
and
outsl
cld
daa
insb
fiadds
pop
push
pop
mov
mull
jns
jecxz
fwait
outsl
aaa
into
push
mov
jl
cmp
div
jp
sub
stos
mov
in
jmp
cmp
pop
fists
loope
call
lods
test
cwtl
add
jbe
adc
xor
in
mov
inc
sub
xor
ds
or
sti
xchg
mov
mov
jae
jmp
xor
xlat
fadds
xor
scas
out
inc
cmpsl
mov
and
fbstp
nop
mov
jae
or
mov
pop
mov
punpckldq
in
fs
out
xchg
aam
dec
loopne
adc
xchg
inc
cmpsl
in
pop
addr16
jl
mov
jno
pop
xorb
inc
ret
jmp
sahf
call
xchg
mov
test
push
push
or
shrl
pop
cmpsb
or
das
loopne
xchg
gs
cmc
das
xlat
xor
and
repz
arpl
push
xlat
roll
adc
mov
xchg
inc
lock
mov
es
popa
mov
jmp
xchg
and
popf
add
cmpsb
jbe
sbb
sub
jg
push
xchg
jmp
int3
push
pandn
es
inc
cmpl
push
add
stos
iret
mov
xor
pop
push
sbb
pop
rorb
mov
popf
je
cli
pop
adc
lcall
iret
mov
push
cmc
movsb
sub
or
add
and
nop
insl
arpl
mov
cld
fcompl
stos
push
cld
imul
in
pop
adc
jle
cmp
mov
add
or
out
ss
lock
rclb
jb
mov
xor
aas
jbe
mov
pop
aas
pop
aad
pushf
pop
xor
jnp
mov
test
and
or
inc
scas
lods
jle
cs
xchg
cmp
test
mov
incb
mov
push
push
sahf
or
andl
das
mov
cmc
out
dec
outsb
daa
aad
or
lods
pop
testb
mov
fbld
pop
inc
mov
and
icebp
cmp
test
es
test
lret
lock
mov
pop
push
jnp
adc
and
pop
lods
call
dec
ss
cmp
rcll
inc
xchg
mov
adc
sub
outsl
dec
pop
or
fstps
rorl
and
xchg
in
xlat
addr16
push
aas
sbb
cltd
mov
xchg
pop
les
adc
xchg
addr16
mov
mov
xor
cmp
mov
dec
fcompl
add
hlt
lret
loope
faddl
mov
out
xor
rcrl
pop
in
repnz
inc
cmp
out
bound
sbb
sti
rcrb
aam
sub
dec
cltd
mov
sub
int3
dec
cltd
mov
jp
stc
pop
mov
decl
fisubrl
repnz
add
sbb
sahf
jnp
push
adc
les
mov
mov
inc
test
inc
dec
popf
in
scas
adc
ficomps
out
int
sub
cmp
insl
insl
js
lods
mov
fsubs
dec
stos
into
repnz
push
lahf
sub
test
sub
xor
in
stc
hlt
popf
or
scas
jl
insb
mov
pop
iret
cmpsb
pushf
sbb
es
int
mov
test
aam
sbbl
cs
mov
les
dec
sbb
cmp
xchg
mov
mov
les
pop
sbb
outsb
jne
jbe
and
je
call
jp
cmp
xor
movsb
lret
shll
mov
mov
sub
push
jno
jno
out
fwait
ljmp
cmp
lock
add
imul
lea
xchg
jo
xchg
push
scas
or
add
les
mov
pusha
mov
ja
jg
push
mov
sar
cltd
adc
je
shrb
pushf
test
imul
gs
data16
addb
pop
cmp
stc
subl
insb
push
jbe
adc
cmc
repnz
cmp
cmp
test
jecxz
loop
pop
or
scas
mov
jle
outsl
push
ja
cmc
popf
rol
adc
mov
mov
or
clc
cltd
hlt
fcoml
in
lret
in
xchg
leave
mov
cmp
inc
pop
xchg
dec
and
jae
hlt
lea
addb
xchg
cld
negb
jbe
in
rcr
lcall
sahf
movsl
je
clc
add
ljmp
mov
pop
cli
and
mov
aaa
jnp
fucom
fcmovb
and
mov
nop
xchg
aam
push
inc
inc
dec
jecxz
jmp
and
sub
adc
adc
jp
insl
mov
mov
pop
dec
ret
loopne
loop
in
and
pushf
fcoml
pop
ljmp
mov
mov
sub
sbb
imul
add
cmpsb
popf
push
mov
lahf
push
cmp
lret
inc
adc
dec
repz
sbb
inc
dec
mov
jnp
je
scas
call
insb
push
cmp
cs
ret
xchg
mov
jmp
pop
out
sahf
and
sub
push
dec
out
dec
sbb
cwtl
xchg
shlb
pop
std
clc
jo
cld
iret
xor
sbb
aas
xchg
xlat
cmp
in
add
mov
inc
ljmp
scas
test
imulb
inc
mov
imul
imul
ret
clc
dec
outsl
or
andl
enter
mov
stos
seto
mov
or
xchg
insl
inc
push
cmp
leave
icebp
loope
call
add
negl
add
mov
mov
out
mov
xchg
cmpsl
pop
imul
sysexit
aas
ret
das
shll
sti
cmpsl
test
push
aaa
xor
in
cs
or
testl
add
inc
int
mov
fsub
sbb
jb
push
mov
mov
hlt
ja
add
lock
cmp
xchg
add
xchg
jle
nop
xchg
push
roll
ret
xchg
in
sub
xchg
lods
xor
movsl
out
adc
bound
je
adc
rcl
cwtl
mov
jnp
repnz
je
stc
stos
xor
jecxz
mov
sub
out
sbb
ljmp
ss
cltd
xchg
das
mov
std
xor
fwait
mov
dec
mov
mov
mov
cwtl
or
adc
sbb
cmpsl
cmp
mov
add
mov
mov
jp
mov
loope
inc
sbbl
mov
call
int
dec
jp
cmp
fnstsw
jmp
dec
adc
mov
sbbb
out
lds
aam
jb
aas
xor
sbb
fs
imul
cmp
jo
daa
out
rcrb
jg
sarl
xorb
dec
loopne
popa
je
jg
push
mov
adc
add
ret
fdivl
jg
inc
incb
pop
pushf
adc
xchg
adc
xor
mov
dec
dec
pop
cmp
mov
and
dec
in
es
repz
jo
push
pop
xchg
mov
adc
dec
push
rcll
scas
add
mov
pop
in
inc
xchg
stos
jbe
push
xchg
ljmp
inc
sbb
dec
jecxz
or
insl
in
xchg
xor
xchg
push
mov
ret
mov
adc
lahf
dec
push
out
icebp
mov
mov
push
sbb
stc
popfw
push
sbb
repnz
pop
cmp
jle
sahf
xor
dec
clc
xor
dec
xor
mov
jo
std
mov
and
jl
pop
cmpsl
jb
loope
inc
test
dec
hlt
aas
clc
jl
fstps
repz
sbb
outsb
mov
movsl
inc
mov
loope
pop
fwait
add
inc
push
ss
jl
sbb
push
daa
push
mov
inc
je
push
jnp
rorb
shlb
push
std
mov
mov
cmp
fwait
and
push
mov
int
fbstp
xlat
cmp
dec
mov
mov
ss
arpl
push
lods
mov
cmp
pop
aaa
rcrl
in
in
inc
and
enter
and
jnp
push
jo
or
push
int
push
inc
push
jle
jb
stos
gs
loop
fsubrs
arpl
ret
aaa
stc
xlat
push
into
popa
mov
arpl
les
xchg
imul
out
dec
aas
dec
inc
js
int
jmp
pop
jns
xchg
adc
rcrb
mov
sub
rcr
or
icebp
inc
gs
add
or
aas
mov
mov
pushf
jg
push
mov
jbe
pop
and
mov
push
mov
push
inc
pusha
add
inc
sub
mov
jb
clc
aam
loope
cwtl
sbb
hlt
aaa
push
mov
lods
pusha
arpl
dec
xchg
inc
mov
cmc
pop
test
nop
or
rcrl
dec
sub
add
xchg
jns
outsl
or
stos
mov
xchg
dec
sbb
mov
test
xchg
inc
pop
pop
jle
xorb
stos
cmp
cmc
loope
add
xor
test
jns
inc
and
mov
sub
icebp
or
pop
test
xor
nop
inc
jno
lods
xchg
push
popa
dec
sbb
lahf
mov
cmpsb
add
push
dec
loop
inc
jo
mov
cld
popa
xchg
or
ffreep
popa
rclb
pop
outsb
xchg
shl
adc
ds
cmp
fs
dec
addr16
movsl
ret
adc
pop
adc
jmp
and
mov
mov
push
fucompp
aad
sbb
jmp
mov
mov
inc
imul
cwtl
int3
js
pop
jg
jle
sbb
xor
jae
aas
rorb
ficompl
dec
cmp
in
xchg
sbb
cmp
das
mov
sbb
test
outsl
push
xor
add
lock
jo
mov
aam
dec
ds
xchg
das
inc
mov
jge
ss
xor
in
push
push
push
sbb
gs
cltd
jo
in
test
mov
push
test
mov
dec
sbb
mov
leave
inc
cmp
cmp
adc
mov
dec
test
mov
sbb
adc
dec
add
cwtl
frstor
jb
insl
pop
jns
or
xchg
mov
sbb
xor
ss
pop
in
pop
jmp
mov
jae
out
pop
stc
es
cwtl
or
sub
or
mov
and
in
into
popa
jl
and
pop
mov
inc
jnp
jae
mov
sbb
pop
or
mov
sbb
outsb
sub
xchg
sub
cmp
daa
out
pop
sbb
push
cmp
mov
pop
popf
sub
jb
mov
ret
xor
pop
jmp
dec
addb
repnz
arpl
or
mov
jnp
mov
pop
or
imul
jecxz
sbb
cmp
stos
je
jle
push
inc
cmp
mov
test
lock
pop
into
rorl
mov
push
xor
and
fucomip
push
push
mov
xchg
in
cs
icebp
test
cmc
mov
das
sbb
mov
push
xlat
push
or
pop
inc
cli
push
sbb
sbb
mov
mov
filds
mov
sub
push
lds
fucomi
roll
loop
jmp
dec
mov
lods
adc
pushf
ret
mov
jno
sbb
xchg
sbbl
insb
pop
imul
add
scas
jecxz
pop
mov
fs
xor
dec
mov
inc
push
xchg
sbbb
mov
fildll
pop
out
push
fnstcw
stos
adcl
ss
or
xor
repnz
push
sub
lahf
cmp
repnz
test
dec
push
jp
popa
adc
add
loopne
ret
pop
je
sbb
imul
mov
sub
jbe
pop
nop
xor
adc
adc
orl
test
inc
fwait
or
fisubrs
add
out
add
mov
pushf
pop
lahf
test
bound
fidivrs
ret
push
arpl
jge
daa
clc
enter
add
pop
sub
setno
icebp
cs
data16
cmp
push
ficoml
sbb
imul
push
outsb
mov
push
xchg
and
sbb
clc
add
bound
ljmp
outsl
cmp
jno
push
bound
gs
insl
jns
or
push
ljmp
mov
fistpll
insl
jmp
add
dec
mov
push
adc
pop
out
push
fstps
jmp
mov
xchg
dec
shll
jns
cmp
dec
and
or
lcall
jno
sbb
div
mov
mov
and
rcrb
loop
xchg
inc
jne
mov
fsubrs
xor
jo
lods
and
mov
jmp
jno
in
movsb
or
dec
push
pusha
push
ret
hlt
movsl
orb
cmp
shlb
xchg
sbb
rcrl
and
xor
push
sti
pop
outsl
xlat
jo
cmc
jg
mov
nop
cmp
loope
and
lods
add
mov
cmpl
push
test
mov
mov
lock
pop
mov
pusha
fidivs
pop
adc
aas
mov
mov
cmp
mov
repnz
push
jne
pop
inc
lcall
push
mov
mov
fstpl
mov
mov
into
pop
popf
jo
int3
stc
sbbb
lcall
mov
test
jge
cld
ret
sahf
movsl
movsl
inc
std
loope
push
lock
cwtl
pop
ss
movsl
fdiv
push
data16
ds
jns
mov
add
scas
sbb
clc
adc
test
ds
sub
cwtl
int
cltd
es
cmc
pushf
add
int
sub
xchg
sub
inc
push
insl
sti
or
outsl
xor
mov
push
sbb
repnz
ficoms
in
rcll
in
mov
add
mov
dec
cmp
add
in
fidivrs
out
cmp
push
loop
xchg
jae
les
pop
andb
dec
movb
popf
out
or
and
nop
int3
pop
jp
pop
lcall
in
js
dec
iret
sbb
dec
add
cmp
int3
sbb
inc
cmp
and
jno
cmc
xchg
xor
xchg
mov
dec
xchg
rcrb
jmp
xorb
gs
inc
mov
cwtl
push
push
dec
xchg
fildll
xlat
cmp
icebp
cmp
data16
arpl
and
rorb
mov
movd
lahf
jmp
enter
rolb
mov
jns
add
lods
push
jnp
inc
hlt
add
push
dec
addb
mov
arpl
stc
icebp
lds
movsl
mov
jl
push
jo
xchg
adc
and
add
inc
and
enter
jae
lcall
outsl
push
rcll
xchg
shr
push
es
imul
mov
xor
std
xchg
add
shrb
aas
out
fsubrs
cs
addl
sbb
test
pusha
out
loopne
pushf
cltd
cwtl
cmpsb
ds
andb
and
lahf
aaa
les
and
xor
icebp
icebp
addl
pop
stc
js
mov
divb
push
push
ljmp
fcmovu
rdtsc
bound
fsubl
add
aam
leave
inc
movsl
jo
test
add
movsl
push
pop
and
cmp
cmp
xor
aam
push
mov
inc
out
test
inc
inc
jmp
fcoms
jge
out
es
call
test
test
test
loopne
xchg
imul
jns
or
xor
cs
jmp
xor
jecxz
cwtl
mov
add
and
adc
push
add
add
mov
ja
xor
push
cs
xor
insl
push
adc
cmp
jg
or
adc
sysexit
push
fisubl
addr16
repnz
fs
jg
scas
sub
gs
inc
jl
jbe
dec
stc
jmp
jp
mov
xchg
imul
pop
mov
inc
testb
aas
cmpsb
xchg
sahf
insl
clc
lahf
inc
jne
in
mov
pop
pop
enter
mov
ds
test
popa
out
and
int3
or
enter
mov
xchg
shlb
fstpt
ljmp
xchg
popa
and
pop
fistpll
cmp
and
inc
data16
int3
into
cld
sub
dec
xor
js
sahf
jecxz
iret
movsl
mov
pop
adc
fsubr
pusha
popl
or
movl
ret
lods
outsl
add
dec
mov
adc
adc
xor
std
jnp
fwait
lcall
insl
and
pop
pop
sub
dec
cli
or
jnp
fbld
mov
test
in
sub
cmp
into
inc
inc
sub
rcrb
fstpl
shr
sbb
iret
inc
lret
ja
or
mov
inc
mov
imul
xchg
push
fisubl
pop
push
lods
pushl
mov
mov
and
jp
stc
xor
jbe
cmc
push
xor
mov
pop
outsl
pop
push
es
fstps
ret
out
push
popa
js
icebp
in
pop
cltd
movsl
or
ret
cmp
xor
popa
or
cmpsl
movsb
push
xor
fwait
jp
fucom
arpl
jecxz
in
adc
or
mull
xor
ss
jecxz
xor
sub
insl
ljmp
jne
mov
add
out
daa
insl
xor
mov
out
xchg
push
inc
inc
pop
cld
or
pop
mov
cltd
sbb
sub
pop
les
xchg
push
and
call
pop
xchg
pushf
shlb
jb
inc
ret
dec
es
dec
push
out
mov
inc
jmp
mov
xchg
and
push
cmpsl
sub
xchg
lret
lock
outsb
jg
sub
adc
arpl
mov
sbbb
and
or
pop
and
popa
push
loope
cmpsb
fnstsw
dec
mov
and
popf
pop
sar
outsb
xchg
iret
jl
les
mov
jbe
sub
in
shrl
sbbl
jne
rcrb
pusha
mov
inc
iret
mov
jge
push
nop
push
inc
dec
or
movsb
mov
cmp
das
mov
jb
jbe
push
fisubrs
xchg
leave
test
xchg
add
lret
addl
sbb
sub
imul
pusha
mov
xor
out
xor
jb
push
sub
cmp
push
lcall
enter
out
add
adc
test
and
jnp
xchg
sub
pop
leave
outsl
arpl
lods
cmp
and
jnp
out
and
in
lds
fneni(8087
jl
fdecstp
jo
jle
jge
ds
pop
xlat
dec
aam
and
stos
xor
fsubs
jmp
push
lods
sbb
and
xchg
or
cmp
fnstcw
loopne
in
leave
jnp
addl
out
cltd
outsl
jecxz
inc
clc
pop
ja
or
jmp
mov
sti
sub
aam
sub
dec
sbb
or
test
int3
jle
and
jmp
and
or
enter
jmp
inc
and
je
das
mov
test
dec
cmp
xor
pushf
lahf
push
insl
enter
les
mov
and
and
fisttpl
inc
lahf
xor
xchg
inc
cmpsl
in
add
in
jbe
jnp
pop
mov
mov
call
mov
stos
xchg
adc
lock
popa
int
xchg
sahf
dec
sub
mov
incb
add
cmc
aas
orl
lea
adc
out
push
das
xlat
idivb
out
xchg
addr16
out
jnp
mov
aad
mov
enter
xlat
inc
fidivrl
pop
mov
sub
stos
imul
xor
mov
add
in
test
and
enter
push
aad
mov
or
scas
push
jge
arpl
hlt
fimuls
xchg
cmp
negb
push
cmp
sahf
inc
in
pop
out
add
mov
pop
test
imul
mov
ja
sub
xchg
sbb
js
into
das
pop
jo
leave
jge
aas
cmpsl
pop
dec
jle
inc
jbe
je
dec
sub
jo
mov
mov
lahf
xchg
add
push
add
sbb
repz
xchg
out
sbb
sbb
adc
addr16
gs
stc
aaa
imul
or
mov
stc
mov
pop
cli
jb
mov
sbb
fwait
push
pop
leave
pop
fcmove
fs
repnz
adc
fmull
sbb
inc
stc
mov
in
xchg
pop
out
cltd
xorb
gs
popa
out
ret
das
xchg
cmpsl
dec
dec
out
sub
ret
cmc
mov
jno
dec
mov
jae
cmp
mov
or
push
mov
dec
test
test
mov
mov
daa
push
fsubs
adc
aad
rol
xchg
xchg
or
iret
pop
sub
imul
mov
or
std
jle
sahf
jno
lods
and
or
inc
add
pop
xchg
xor
inc
scas
out
xor
pop
push
std
ret
roll
mov
out
sbb
scas
pop
add
js
or
dec
es
add
ljmp
shrl
mov
adc
dec
pushl
pop
mov
or
shll
or
cltd
mov
mov
push
popf
inc
lcall
mov
insb
dec
dec
fistps
pop
rolb
adc
gs
and
test
nop
sub
adc
clc
lret
dec
xorb
sub
pop
and
jg
mov
std
jmp
lret
sbbl
add
xor
mov
mov
lock
xchg
push
ss
adc
inc
or
fildl
adc
sbb
push
mov
insb
popf
daa
out
inc
nop
mov
out
jl
sub
loop
inc
sbb
aas
cmp
les
cmp
fwait
ds
outsl
jg
sub
pop
pop
jnp
fbstp
mov
clc
popa
stc
loop
sub
fwait
cmp
loopne
out
push
xlat
jp
mov
leave
adc
and
push
in
or
je
ret
inc
pop
xchg
fstl
adc
stc
or
and
mov
int
outsl
daa
inc
xchg
pop
dec
adc
xor
mov
pusha
mov
jne
cltd
inc
int
mov
enter
xchg
xchg
idivl
mov
xor
cmp
ja
lods
cwtl
sbb
and
jmp
lahf
cld
mov
repz
push
std
inc
or
out
bound
add
add
icebp
fsubs
orb
lds
lods
or
les
out
adc
faddl
mov
add
sub
push
mov
sbb
sub
adc
in
mov
int
mov
mov
mov
mov
cmp
pusha
rcrb
push
push
daa
adc
xchg
cmc
mov
push
mov
jbe
cmp
aaa
xchg
js
sbb
pop
int3
andl
cmc
insb
mov
jnp
cmpsb
sub
cmp
mov
test
mov
mov
insb
dec
fsubr
frstor
jo
fimuls
fimuls
jb
mov
mov
das
int3
divl
or
mov
mov
add
cli
clc
int3
iret
and
in
cmp
sti
dec
test
fdivs
or
inc
lods
sub
push
add
push
inc
jl
cltd
push
mov
cmpsl
fiaddl
jbe
mov
mov
jmp
loope
pop
pop
mov
add
inc
fdivs
sbb
addr16
pushf
inc
mov
leave
mov
xchg
in
inc
mov
pop
dec
jns
cmp
sbb
mov
leave
mov
cmp
or
jb
inc
stos
arpl
inc
jl
sahf
add
mov
sbb
mov
out
mov
sub
mov
test
or
push
lods
and
sub
mov
push
pop
dec
mov
std
xchg
jb
push
jg
sar
out
cmpsb
sub
mov
sbb
pushl
add
rcrb
mov
or
aas
jmp
mov
in
mov
hlt
int3
sub
dec
add
into
mov
clc
push
hlt
stos
rep
push
and
sub
mov
and
shlb
fidivs
xor
adc
cmp
push
fiadds
dec
ljmp
cld
sti
inc
xchg
lahf
mov
xchg
cmp
push
jmp
mov
cmp
in
xlat
add
sar
mov
cmp
sub
mov
pusha
pushf
sub
pop
popl
ss
cwtl
or
add
sar
ficomps
ss
mov
in
jp
loopne
nop
addr16
push
movsl
sahf
daa
cmpsb
fstpt
cli
fisttpll
lret
jg
push
movsl
push
popf
adc
pop
cmp
push
pushf
xlat
and
test
inc
sbb
add
in
or
hlt
lret
mov
or
in
mov
stos
leave
popf
ds
sub
pop
in
mov
sbb
pop
clc
test
xor
inc
adc
mov
daa
nop
xor
fcompl
mov
mov
nop
test
dec
in
fdivr
sub
lds
mov
sbb
hlt
arpl
adc
sub
fsubrs
lahf
and
in
pop
mov
stos
lahf
rolb
add
in
je
adc
ds
push
or
xchg
fisubs
sub
sub
adc
xor
addb
mov
add
sbb
cmp
scas
lds
das
shlb
jge
mov
lret
push
xchg
jbe
pop
sbb
test
nop
xor
pop
mov
aas
pop
pop
mov
lea
shll
inc
add
cmp
cltd
jbe
les
ss
imul
inc
dec
into
push
dec
cmpsb
push
ss
push
js
xchg
and
out
loop
les
idivb
popa
lods
xchg
dec
push
sbb
jp
cmp
out
inc
jp
shrb
test
sbb
sub
movl
xchg
xor
adc
fneni(8087
cmp
rcll
and
cltd
inc
in
push
and
mov
loopne
xchg
sub
mov
nop
adc
lods
leave
je
call
in
cmp
scas
mov
sti
sti
add
outsl
movb
push
pop
outsb
leave
mov
popl
pop
jmp
xor
jmp
out
inc
mov
cmpsb
pusha
or
xor
pop
inc
adc
popa
xchg
leave
jne
mov
jg
and
jo
jle
test
push
notl
lea
arpl
adc
inc
inc
mov
jle
cmpsl
stos
dec
mov
xchg
outsb
push
adc
add
adc
mov
jno
cli
xchg
jp
ret
sub
ret
lock
inc
cmp
aad
cli
and
nop
inc
mov
int3
mov
fcoml
dec
xchg
scas
or
and
jg
mov
imul
inc
aad
loopne
fnstenv
xchg
xchg
dec
ficoms
pop
push
push
xor
mov
push
or
xor
xor
mov
sbb
mov
or
and
adc
gs
mov
and
hlt
scas
dec
and
push
fwait
and
cmp
int
jg
add
paddusw
out
or
xor
ja
sub
xorb
mov
iret
sbb
loop
adc
push
dec
pusha
movsl
sar
mov
dec
mov
mov
jmp
cmp
es
fisubs
pop
mov
cli
sub
insb
push
jg
lods
or
jge
jl
pop
adc
scas
stc
mov
js
notb
jle
xchg
fists
pop
in
sti
enter
mov
in
mov
ret
jne
pop
cmp
pop
cmp
jae
fdivl
and
shl
mov
andb
cmp
cs
sbb
sarb
inc
xchg
push
sti
mov
out
fsubs
enter
scas
xor
cmp
in
in
ljmp
popf
aaa
stos
in
push
mov
cmp
stos
loopne
push
gs
xor
nop
mov
sbb
leave
test
pop
icebp
push
mov
sahf
das
fdivrs
xchg
mov
repnz
stos
dec
adc
imulb
xchg
movsl
mov
sub
push
dec
xchg
and
js
arpl
and
dec
jmp
pop
or
mov
mov
mov
enter
jbe
mov
adc
insl
mov
imul
add
jno
out
push
adc
rclb
or
pop
mov
xchg
pop
dec
sti
dec
aaa
cmp
sbb
sbb
inc
pop
pop
stos
imulb
ficoml
mov
dec
mov
cmc
jl
lret
cwtl
and
daa
jle
scas
pop
es
or
mov
out
and
loop
mov
imul
notb
xchg
sbb
mov
mov
jno
xlat
sub
lock
std
inc
add
push
inc
cwtl
inc
adc
rcl
lds
dec
sub
and
outsb
add
dec
sbb
mov
pop
das
cmpsb
lock
jp
dec
sbb
or
push
enter
adc
or
cmp
sub
pop
dec
lea
std
aam
and
pop
sub
cmp
jnp
sahf
movsb
and
push
sbb
outsl
and
xchg
and
adc
mov
rolb
imul
push
jnp
mov
fstpt
xchg
subb
gs
ja
enter
bound
cmp
decl
jecxz
jns
jl
stos
enter
cmp
icebp
fwait
jno
je
mov
and
and
inc
sbb
sub
mov
inc
pop
loopne
and
mov
or
mov
pop
dec
fisubs
bound
xchg
dec
addr16
xlat
icebp
pushf
xor
sbb
mov
or
clc
add
stc
push
cld
push
push
lods
jnp
cmp
stc
pop
aaa
push
dec
push
stos
cltd
in
ficompl
dec
or
loope
pushf
and
mov
scas
sub
loopne
add
testl
inc
iret
lret
pop
mov
mov
push
lcall
and
xchg
push
pop
insb
cld
cld
clc
lcall
enter
dec
stos
sahf
fucomip
push
xchg
pop
adc
pop
cltd
in
arpl
ljmp
xchg
loop
ret
dec
inc
cmp
ljmp
pop
mov
add
out
fldl
jns
mov
cld
sub
int3
mov
in
les
mov
les
push
test
push
pop
adc
aaa
dec
xor
lea
mov
add
repnz
shl
repz
pop
nop
mov
aaa
decb
add
push
pop
dec
jecxz
jecxz
cli
call
xor
in
rcrb
ss
pop
or
icebp
bound
orb
pop
sbb
cwtl
loope
outsb
testb
movsl
cmc
add
test
adc
data16
fstps
lea
inc
jg
movsl
mov
add
mov
sub
xchg
and
fadds
mov
insb
pop
pop
hlt
mov
push
js
sub
mov
or
mov
js
push
nop
pop
pop
fsubrl
loope
call
pop
cld
push
mov
test
add
dec
es
dec
ficomps
ret
scas
or
mov
or
icebp
sbb
into
repnz
je
mov
bound
push
mov
bound
jae
mov
xchg
or
sub
adc
clc
lcall
rclb
jecxz
aaa
xchg
jmp
mov
jecxz
in
pop
aaa
push
or
push
call
aaa
outsb
pop
add
mov
jg
ficompl
dec
mov
inc
mov
ljmp
pop
mov
arpl
sbb
mov
sub
xlat
push
clc
sarl
push
sub
fnsave
and
mov
jae
fidivrl
jp
lods
mov
sbb
pop
mov
loopne
pop
ja
jmp
clc
shr
repz
sbb
xorb
mov
adc
iret
data16
mov
movsb
xor
arpl
les
adc
push
push
xchg
ljmp
sub
aam
stos
mov
in
sbb
iret
popa
cwtl
and
jp
add
push
push
test
mov
adc
sets
jnp
push
cmp
ja
sub
mov
mov
cmpsb
add
or
pop
addr16
jno
rcrb
les
loope
sti
sarb
xchg
fidivs
xchg
shlb
pop
push
clc
jnp
adc
adc
nop
mov
fcompl
mov
leave
dec
push
inc
out
mov
xor
cli
lods
cmp
subl
orb
popf
jle
imul
test
out
add
ret
or
stos
movsb
or
xor
push
clc
jnp
or
cmp
lea
xlat
dec
and
and
imul
mov
xchg
es
xchg
xlat
stos
push
call
pop
cmp
push
in
push
std
test
fs
loope
xchg
mov
lahf
into
mov
xor
mov
shl
fwait
cmp
fst
fiaddl
ss
arpl
cmp
inc
lret
dec
dec
cmp
xor
movb
cwtl
inc
je
sbb
sbb
mov
fadds
xor
loop
sahf
push
stos
std
and
pop
fimull
inc
or
es
fs
or
sarl
cmp
xchg
xchg
pop
gs
jns
ret
cs
or
mov
mov
mov
inc
adc
xchg
add
das
data16
loop
rcl
push
xchg
push
out
sub
mov
rolb
xchg
neg
mov
rolb
pop
fidivrl
push
loop
and
in
adc
jnp
push
pusha
in
pop
cmp
in
sahf
popa
jb
cwtl
pushl
mov
dec
hlt
repz
ljmp
cmp
insl
addr16
nop
jg
pop
push
jno
nop
test
movsl
and
inc
push
mov
push
arpl
cmp
daa
popa
repnz
js
popf
pop
mov
popf
pusha
add
sahf
adc
into
cld
mov
pop
cmpsb
cmp
add
sbb
outsl
sti
inc
scas
cli
shrb
dec
lds
and
dec
rcr
int3
test
ret
lea
sbb
xlat
add
xchg
jp
popa
test
mov
rcll
out
movsl
test
lea
aaa
jl,pn
xchg
insl
fsts
outsl
call
cmp
mov
bound
mov
jnp
cwtl
dec
sarl
fidivl
flds
pop
lea
xorl
add
ffreep
or
jge
aad
cli
les
add
mov
pop
mov
prefetchw
or
xchg
fucomip
xlat
xchg
into
test
lea
sbbb
or
adc
mov
push
cmp
call
mov
xor
in
sbb
daa
mov
adc
outsl
outsl
mov
ret
shl
jbe
cld
leave
cmp
notl
jno
mov
ret
test
xchg
inc
cmp
int3
inc
adc
xchg
leave
ret
pushf
imul
add
cmc
jo
jns
pop
inc
imul
jge
cmp
scas
js
pop
or
mov
xchg
push
and
dec
push
adc
lock
cwtl
dec
jg
insb
mov
lcall
inc
jnp
xchg
cwtl
rorb
nop
cmp
push
sbb
ficompl
in
mov
lcall
sbb
jo
js,pt
xor
push
jnp
out
sbb
in
and
add
pop
jb
pop
movsl
push
push
add
out
pop
out
adc
add
pop
inc
add
aaa
mov
xchg
mov
popa
sbb
and
neg
push
mov
sub
pop
stos
dec
pop
sbb
mov
cmp
je
xchg
lcall
mov
cmp
fldt
es
pop
gs
je
fistpll
push
xor
pusha
insb
push
sub
stos
push
add
and
dec
int3
call
fsubl
xorb
ret
add
push
fdivs
filds
in
inc
pop
cs
stc
leave
inc
outsl
stos
popf
jne
int3
mov
pop
dec
imul
sahf
mov
cli
xor
jge
jl
aam
outsb
xchg
sub
and
shl
cmpsb
cltd
scas
ficompl
lods
dec
mov
jmp
sbb
cmpl
mov
aad
add
repnz
call
jge
pop
fs
pop
xchg
push
ret
mov
jo
iret
stos
fisttpll
scas
add
push
adc
scas
jp
inc
sbb
push
cmp
movsl
repz
sarl
xchg
out
mov
test
xchg
stos
decl
lcall
enter
sbb
jne
xchg
xchg
stc
jg
mov
fsts
xchg
dec
orb
shrl
in
js
gs
jecxz
addl
jne
pop
mov
mov
test
cmp
adcb
lods
pop
pop
popa
mov
xor
dec
or
mov
int
adc
loopne
push
neg
stos
int
add
cmp
ljmp
xchg
subl
outsl
cmpsb
das
iret
in
addr16
out
xchg
sbbl
pushf
call
mov
dec
js
lcall
fidivs
sub
xor
mov
lods
mov
dec
fimuls
inc
enter
add
jo
mov
subl
js
dec
sbb
rorb
pop
les
add
jecxz
push
pusha
cmpsl
or
sbb
addl
mov
lcall
cmp
adc
lahf
adc
mov
loopne
pop
and
jecxz
inc
dec
jb
popa
das
push
icebp
push
jge
lds
xchg
into
adc
mov
fmul
dec
popf
sbb
cmp
push
mov
dec
out
jecxz
pop
hlt
sub
outsl
jnp
push
lock
mov
mov
loope
jge
sbbb
xor
or
aaa
movsb
pop
js
jne
push
push
jns
fdivp
shlb
sbb
int3
ret
mov
xor
out
out
push
mov
mov
jno
mov
xchg
bound
xchg
inc
imul
lea
dec
add
cmpsb
iret
jns
inc
xchg
mov
add
scas
mov
and
xor
fs
mov
pop
dec
sbb
xor
push
xor
insl
jb
jno
inc
clc
outsl
sbb
xor
data16
imul
jmp
fstpt
inc
jecxz
mov
jmp
sub
std
mov
ljmp
fsts
mov
xor
lret
test
daa
pop
rorl
and
add
jne
xchg
cmp
and
lret
arpl
pushf
cmp
mov
or
mov
dec
push
icebp
push
add
ret
adc
xchg
repz
into
andl
or
push
xchg
lods
mov
xor
lret
push
jmp
sbb
jnp
fiaddl
or
mov
jge
and
lcall
push
push
adc
mov
mov
jl
movsl
mov
imul
aam
push
pop
sbb
std
xchg
jbe
cmpsl
je
push
pop
shrb
adc
xchg
sub
jl
push
enter
jle
mov
js
pop
or
jnp
addl
mov
jp
kmovd
jne
sbb
adc
sub
push
jbe
test
sub
or
pushf
fdivs
mov
imul
mov
xchg
pop
inc
xchg
es
les
inc
fsts
leave
add
dec
mov
cmovo
cmp
dec
mov
test
pusha
int3
adc
sbb
in
dec
lcall
jmp
mov
lea
jecxz
cld
daa
sub
inc
jg
imulb
or
ss
fistps
push
push
xchg
jae
lcall
jbe
push
pushf
sub
out
int
mov
push
push
insl
pop
xor
lret
popf
cmp
inc
xrelease
inc
jg
dec
xchg
daa
shr
pusha
pushw
pop
inc
sub
stos
adc
sub
xchg
inc
cmc
push
add
push
inc
arpl
push
xor
loopne
inc
sbb
push
add
gs
add
dec
pop
pop
repz
and
out
inc
push
pop
leave
pop
inc
movsb
jo
enter
push
dec
std
inc
ss
ljmp
xlat
push
cltd
and
mov
aam
cli
dec
fisubl
es
jg
xor
arpl
lretw
mov
data16
scas
stos
add
cmp
icebp
jp
popf
xor
mov
inc
cmc
data16
mov
xchg
lea
xchg
xor
scas
push
loop
mov
mov
mov
lods
sbb
test
add
adc
fsubrs
inc
sub
or
repnz
mov
jne
gs
ror
jle
xchg
insb
repnz
push
popa
rcl
mov
daa
nop
pop
dec
js
out
enter
pop
pop
lahf
scas
sbb
xchg
jp
xchg
inc
dec
ljmp
test
test
cmp
jp
jb
sub
adc
mov
sbb
and
xchg
int3
scas
push
jmp
test
mov
sahf
add
add
adc
daa
ljmp
fimuls
stos
mov
clc
xchg
sub
mov
stos
pop
ret
dec
jbe
sbb
pop
rolb
iret
repnz
xchg
inc
icebp
out
fstpt
mov
inc
inc
divb
jmp
sbb
jnp
shrl
inc
lret
pusha
sub
push
sub
sub
js
push
sbb
adc
lock
jl
fistpll
mov
shl
inc
arpl
jno
std
inc
ja
aad
inc
aad
push
lahf
int3
mov
push
movsb
adc
push
mov
daa
dec
fwait
xchg
shl
xor
cmpsl
jae
dec
insb
mov
cld
das
cmpsb
orb
mov
and
push
mov
cmp
sub
rclb
sbbl
mov
loope
js
data16
cltd
add
add
leave
adc
xor
stc
dec
cmp
dec
pop
or
add
mov
mov
inc
add
adc
je
cmpsl
cmp
movsb
fists
lea
pop
sub
data16
fisttps
sub
sahf
or
or
imul
icebp
pop
sub
das
ret
bound
dec
repz
fnstcw
stc
test
xchg
ja
cmp
insb
or
aad
call
inc
mov
add
inc
mov
mov
mov
pusha
and
loop
or
push
push
call
pop
addb
xchg
inc
imul
stos
es
leave
scas
sub
stos
sub
inc
and
adc
outsl
sub
aaa
in
xor
popf
dec
push
js
mov
jecxz
jl
lret
fcoms
jg
sub
xchg
sbb
pop
cmpsl
jle
les
mov
loope
or
adc
popa
xor
repz
aad
jmp
mov
sbb
inc
popf
sbb
scas
xchg
add
ret
push
addr16
pushl
insb
bound
pop
test
inc
gs
mov
cvttps2pi
cmpb
aas
insl
add
int
inc
or
dec
arpl
mov
pop
xlat
movsb
test
orl
lahf
sbb
xor
xchg
in
cmpsb
js
mov
mov
loop
mov
fistl
cs
hlt
lods
jbe
cmpsb
in
cltd
fmuls
js
pop
js
mov
mov
jle
adc
mov
sbb
and
out
mov
cmpsb
push
push
shl
mov
andl
in
enter
scas
mov
mov
imul
sub
stos
dec
adc
int
jp
jnp
clc
lds
popf
xchg
adc
or
lret
repz
inc
call
add
aam
push
negb
hlt
pop
pusha
mov
mov
enter
xchg
jnp
lea
lea
cli
fwait
js
jge
shll
cli
jbe
push
jo
xor
push
pop
enter
jne
pop
cmp
mov
popl
das
stos
fmull
int3
es
popa
cmp
addr16
dec
popa
notb
mov
sub
les
xchg
sahf
subl
pop
inc
unpckhps
fcoms
lret
gs
push
rolb
movsb
int
movsb
jl
pushf
dec
add
and
cltd
push
xchg
dec
mov
and
jo
pop
movsl
fldenv
loop
ffree
std
scas
loope
sub
mov
cmpsb
pop
repz
and
jnp
ret
pop
jmp
pop
inc
sti
bound
mov
mulb
je
out
shll
fmull
daa
push
mov
imul
cmpsb
icebp
xchg
dec
rolb
test
stos
ror
jno
lds
xor
aas
cwtl
repz
xor
sbb
data16
pop
stc
in
not
scas
inc
inc
lea
es
mov
push
inc
pop
xor
pop
lea
adc
add
mov
add
pop
mov
and
mov
inc
popf
push
xlat
sbb
cmpsl
outsb
mov
jae
movsl
cmpsl
sbb
pop
xchg
icebp
movsl
xor
mov
dec
push
pusha
push
inc
popf
xchg
and
pop
dec
out
jno
outsb
fisubl
xchg
adc
leave
test
mov
xor
in
xor
mov
xchg
loope
mov
add
sti
sbb
ja
outsl
mov
xchg
lret
ret
ret
ret
addr16
add
or
cmp
lret
pop
mov
jns
jle
mov
jge
fimull
lcall
push
incl
push
cmp
mov
add
sti
icebp
mulb
dec
sbb
movsb
add
pop
jmp
sub
mov
arpl
aas
mov
int3
mov
stos
and
xchg
sub
lods
negl
mov
enter
cmp
inc
inc
loopne
shll
ljmp
lds
lahf
adc
xchg
hlt
call
jmp
pusha
jno
loop
shrl
fcompl
dec
subl
adc
cli
imul
jns
inc
push
mov
ret
push
leave
into
scas
mov
jno
push
inc
out
mov
std
jns
pop
inc
sub
xor
pop
shrb
shrl
sarl
cmp
and
int
jg
dec
sbb
dec
mov
add
mov
bts
addr16
dec
xchg
popf
dec
mov
jecxz
scas
xor
or
arpl
fistpl
cmpsb
scas
mov
shrl
sub
jae
lock
xor
cmp
and
int
dec
mov
out
adc
shlb
and
or
pop
call
movsl
push
sahf
cltd
pop
cmc
push
mov
cwtl
icebp
jp
lock
or
jo
std
pusha
cmp
or
hlt
imul
mov
pop
ljmp
sub
mov
rolb
popa
jecxz
push
aaa
jp
dec
test
ret
mov
test
andl
inc
jae
test
fnsave
xchg
add
mov
xor
stc
mov
cmpsl
jns
mov
sub
inc
das
pop
adc
dec
negb
insb
mov
inc
jge
iret
icebp
jmp
mov
mov
clc
data16
cmp
jo
inc
rorl
xor
xor
mov
jnp
out
inc
stos
xchg
mov
movsl
dec
out
ljmp
inc
js
sub
lods
out
mov
xchg
rcrl
pop
sub
xchg
in
sbb
lock
mov
movsb
jecxz
loopne
in
lods
clc
cmp
scas
ret
jmp
inc
jle
pop
or
dec
enter
cltd
jnp
int
lds
cmp
xchg
sahf
sbb
pop
mov
incb
push
and
jne
jge
adcb
pop
add
cmpsl
repnz
push
fucomip
jmp
sub
scas
push
rcrb
rolb
out
cmpl
pusha
sti
inc
pop
push
cwtl
cmp
push
loopne
mov
inc
aam
cmp
mov
inc
cmp
lods
or
hlt
scas
lret
imul
mov
push
cmpsl
mov
mov
into
pop
stos
stos
dec
pop
push
clc
stos
fdiv
cmc
jmp
outsl
imulb
mov
mov
pop
enter
lea
mov
sarb
leave
mov
movsl
jp
js
push
and
movsb
pop
pop
adc
in
movsb
sarb
sahf
sbb
inc
push
add
add
fwait
dec
adc
fldt
dec
pop
in
jle
ret
xchg
int
push
cmpsb
jne
ljmp
das
add
sub
stc
cltd
dec
int3
fcmovbe
mov
dec
bts
mov
pop
pusha
jg
sub
inc
mov
push
push
popf
pop
xor
adc
push
xchg
orl
jp
push
bound
push
in
and
jecxz
out
push
inc
mov
inc
or
lret
cmp
movsb
repz
out
inc
rcrl
outsl
in
xor
call
push
cmp
into
dec
in
or
aaa
jle
cmpsb
mov
icebp
pop
testb
je
out
andb
jmp
fcomip
push
aaa
fistl
mov
inc
mov
out
leave
outsb
enter
lds
lods
adcb
movsl
sub
loope
push
je
retw
or
or
in
gs
mov
inc
popa
ljmp
into
or
cmc
int
cmc
and
shrl
sbb
in
lds
into
jnp
adc
repnz
movsl
out
mov
sub
or
jne
shll
dec
shl
ja
mov
mov
cmp
and
cmp
shr
mov
lret
repz
mov
push
shlb
mov
lods
sahf
push
xchg
sub
cmp
mov
sub
sbb
xchg
cmpsb
mov
jne
ja
push
push
aam
lcall
xor
sub
dec
lcall
xor
fidivrs
movsb
sbb
inc
inc
sbb
mov
dec
fidivrs
in
jnp
push
pop
pop
mov
call
lods
and
push
adc
adc
setge
cmpsl
mov
out
faddl
sbb
fwait
leave
fcompl
adc
movsl
stc
jb
outsb
lock
pop
iret
rclb
cmp
in
movsb
jp
and
dec
xchg
in
lret
test
bound
hlt
test
enter
inc
add
push
mov
adcb
sbb
fs
fldl
mov
gs
add
imul
lret
jmp
cmc
cmpsb
pop
xor
add
cmp
nop
dec
arpl
xchg
xlat
popa
jle
mov
je
test
mov
mov
iret
addr16
lret
and
sub
ds
das
mov
push
jmp
jbe
mov
xchg
lret
sub
jo
xchg
mov
cltd
frstor
out
subb
dec
cmp
test
mov
pop
inc
in
jae
test
cmp
or
fidivs
push
js
cmc
adc
js
insb
testb
imul
add
fildl
test
movsb
adc
jbe
daa
xchg
and
insl
sbbb
inc
dec
test
and
adc
pop
and
adc
xchg
push
inc
xchg
sub
stos
popa
mov
xchg
call
movsb
pusha
icebp
int3
cld
jb
mov
int3
jg
bound
iret
sbb
test
cmp
sub
pop
push
fidivrs
xor
call
push
fs
rep
dec
mov
cmp
xor
xchg
imul
cmpl
sub
push
iret
pushf
pop
push
sbb
xor
stos
psubusb
pop
imul
jmp
fsin
sarl
mov
loope
fidivrl
sub
push
imul
leave
mov
repnz
and
mov
in
cltd
mov
arpl
inc
aad
or
popf
or
or
pop
or
push
out
add
jns
out
adc
loope
pusha
cmpsb
cmp
pop
imulb
rcll
pop
aad
jne
inc
loopne
push
mov
loopne
push
cmpsb
sbb
into
push
jge
mov
push
lods
dec
jle
in
add
test
test
mov
cltd
jnp
div
je
pop
icebp
call
mul
aaa
pop
mov
dec
aaa
push
pusha
pop
out
push
jmp
xor
add
jecxz
daa
lret
mov
dec
lret
inc
rolb
xor
push
dec
push
jb
sub
arpl
xor
sbbb
xchg
stos
add
imul
add
ficomps
add
jp
mov
imul
sbb
jb
mov
stos
xchg
dec
adc
scas
inc
sub
add
inc
cs
hlt
push
das
test
aaa
stc
mov
push
push
std
mov
inc
clc
mov
fs
pop
in
bound
adc
ds
dec
xchg
fiaddl
sbb
dec
mov
adc
dec
out
sti
fwait
sahf
xchg
pop
ror
and
fcompl
mov
shl
or
mov
psrld
push
test
cmp
aaa
cmpsl
dec
movsl
cli
hlt
mov
mov
and
rcrl
ljmp
rcrb
outsb
hlt
popa
leave
jno
lds
xchg
iret
out
sub
mov
repnz
or
lea
mov
fwait
sub
sbb
xchg
sub
lcall
cmpsb
lahf
push
cmp
jno
insb
dec
push
les
mov
mov
pop
cmp
ljmp
notl
xlat
outsl
and
adc
jbe
xlat
dec
push
jbe
dec
insb
sbb
lock
pusha
cmp
int3
push
int
cwtl
adc
je
mov
sbb
xor
loopne
mov
mov
repnz
inc
push
adc
clc
lahf
push
int
sub
cmpsb
xchg
test
adc
cmp
and
adc
or
xlat
ret
jmp
arpl
sti
pop
jbe
sub
enter
ja
rorl
stos
stos
scas
push
add
imul
movsb
inc
fiaddl
and
int
or
shl
notl
rcrl
std
or
jl
rcll
xchg
das
sub
cmp
jns
sub
mov
scas
xchg
inc
ljmp
cmp
mov
cs
aad
ret
push
cli
dec
stos
sub
dec
mov
xor
pop
xchg
in
popf
and
or
mov
mov
es
sbb
mov
insl
insb
jne
push
pop
mov
cmp
lcall
add
jae
sub
push
mov
daa
cmp
insb
mov
imul
mov
mov
rcll
sbbb
mov
out
jno
jg
outsl
in
or
push
mov
xor
push
jmp
sbb
sbb
stc
mov
rcr
pop
mov
stos
outsl
push
xchg
sbb
aaa
aaa
addl
and
or
pop
dec
movsl
gs
cmp
or
fsubrl
pop
or
fsts
test
out
iret
add
into
in
aaa
xchg
stos
scas
mov
jno
imul
pusha
jb
add
jge
cltd
mov
push
adc
and
pop
push
in
and
adc
adc
mov
cld
jmp
scas
xchg
mov
fwait
dec
lds
sub
push
ljmp
jne
mov
mov
in
divb
into
mov
inc
xchg
inc
imul
clc
pop
test
dec
lock
push
sbb
jp
cli
sub
popf
repnz
xor
xor
pushf
fwait
les
mov
mov
int3
ljmp
popf
mov
js
stos
enter
sbb
xchg
out
imul
rcrb
lock
mov
iret
shlb
jae
xlat
sub
xor
rolb
mov
adc
outsb
pop
push
sub
lret
imul
mov
dec
lock
xlat
das
mov
bound
outsb
cmpsl
and
lret
enter
add
in
cmp
out
dec
std
ja
mov
or
push
push
adc
xor
addr16
leave
mov
pop
in
dec
mov
fsubr
dec
jnp
adc
test
push
xor
inc
sbb
push
xchg
mov
fiaddl
mov
xor
arpl
jp
push
sub
lret
arpl
adc
cmpl
stos
push
inc
mov
sbb
call
xor
shrb
lock
ffreep
mov
push
mov
pusha
pop
inc
xor
sti
add
inc
js
and
dec
and
fiadds
and
scas
xor
jecxz
xor
inc
popf
jbe
cmpsl
sub
jmp
pop
movb
ret
adc
dec
push
sbb
repz
rorb
rorb
stos
mov
fwait
jo
sub
in
cmc
movsl
inc
leave
adc
dec
jno
sbb
pop
in
test
adc
loope
ret
int3
leave
sbb
pop
dec
xchg
dec
aaa
ret
jge
out
xor
jns
pop
mov
call
push
out
gs
adc
inc
cmc
mov
or
cmp
jge
nop
sub
pop
sbb
inc
xchg
iret
adc
movsb
stos
cs
jecxz
inc
cmpb
lods
enter
or
and
stos
lcall
ret
and
jns
push
fnsave
push
ret
jns
fsubrl
lds
lds
insb
mov
xchg
sahf
ret
data16
stc
or
push
or
cwtl
or
adc
jge
fdivrs
fcmovbe
daa
and
xchg
add
int3
pusha
test
les
sahf
loopne
jmp
add
cmp
push
shrl
or
adcl
mov
jne
int3
xchg
pushf
xchg
outsb
push
int3
pop
mov
rcll
mov
sub
jae
mov
into
repnz
sti
pop
mov
mov
pop
push
add
sub
test
outsl
xor
imul
icebp
and
jg
imul
push
dec
outsb
in
dec
add
int3
sti
push
stos
adc
and
test
adc
aad
xor
push
pop
fcmovnu
scas
and
fbstp
pop
negl
inc
sbb
je
dec
pop
in
mov
ret
popf
fwait
xchg
ds
xchg
call
popa
adc
add
cwtl
nop
mov
dec
loop
jnp
jl
leave
inc
push
xor
mov
movsl
popa
pop
stos
jns
push
sub
in
bound
or
jbe
out
repz
dec
or
out
test
pop
xchg
pop
mov
fs
and
push
and
jle
sbb
ret
cmp
std
xchg
scas
or
dec
add
popf
pop
cmc
adc
dec
mov
push
sbbb
jbe
sar
test
add
adc
cmp
jno
rolb
imul
imul
cwtl
adc
push
xchg
cmp
cmp
out
ljmp
xchg
clc
add
sahf
gs
sub
sbbb
scas
xor
icebp
or
xor
and
lret
cltd
push
roll
loop
das
fdivr
jae
in
sahf
data16
mov
fstl
movsl
aas
mov
jge
jno
cmp
mov
inc
push
adc
xor
loop
movsbl
test
lret
fistps
fld
dec
ljmp
pop
fmuls
xor
movsl
test
repz
jne
scas
pusha
lahf
or
add
dec
in
shll
push
ds
ja,pt
fcomps
enter
mov
fs
mov
andb
popa
icebp
rorl
pop
or
ds
popf
into
push
ror
jae
lods
cs
xchg
iret
aaa
and
shll
dec
sarb
cmove
pop
int3
movsb
lock
ds
add
adc
or
movsl
aas
fs
test
mov
lret
orl
mov
xor
aas
or
cmp
andb
push
std
jl
sub
fwait
popa
les
loopne
outsl
inc
adc
sub
les
add
xor
pushf
mov
popa
xchg
bound
jmp
int
mov
or
mov
cmp
dec
adc
mov
lods
adc
in
cmp
rolb
addr16
lea
adc
pop
cld
lods
xchg
cmc
fisubrs
pop
cmp
jle
mov
ds
inc
pop
fimuls
push
out
pop
out
pushf
bound
in
push
loopne
bound
push
xor
sub
jge
push
xchg
fcmovnu
mov
adc
bswap
test
inc
jle
fidivl
icebp
test
movl
dec
movsl
xchg
outsb
xor
dec
and
loope
pop
mov
sub
and
ficoms
jb
mov
sahf
adc
sub
pushf
pop
arpl
loop
sbb
adc
jae
pop
add
bound
sti
inc
jmp
mov
push
fwait
inc
mulb
adc
fwait
jmp
and
int
loopne
test
add
cmp
sbb
push
std
fcoms
push
pusha
pop
push
sbbl
cmpsl
shll
inc
repnz
hlt
sub
aaa
dec
shrl
adc
jp
stos
movsl
scas
cmc
imul
daa
push
ret
push
xor
xor
sub
std
cltd
pop
push
and
int
dec
sub
inc
fsts
lds
xchg
add
addl
or
xor
rclb
ja
add
in
inc
mov
mov
dec
add
imul
mov
scas
gs
out
cmc
call
or
push
in
clc
inc
push
sahf
mov
xchg
stc
mov
mov
pop
inc
add
mov
aad
jmp
add
shll
add
add
pusha
fidivs
add
pop
test
mov
stc
bound
dec
popf
popf
aas
aad
pushf
subb
mov
in
cmpsb
repz
stc
in
xchg
dec
push
cmpl
outsb
xchg
push
pusha
outsl
mov
push
xor
sub
adc
push
inc
in
push
pushf
out
add
clc
lods
add
xchg
or
leave
mov
adc
dec
or
push
and
cli
xchg
in
push
pop
sbb
and
pop
jb
pop
popa
xor
aas
fs
and
mov
cwtl
rorl
outsb
clc
jb
lods
aad
insl
add
xchg
repnz
out
jnp
xchg
or
pop
cmp
aas
mov
lcall
fs
lods
testb
out
xor
jecxz
push
jb
jmp
add
ljmp
pusha
xchg
mov
ret
mov
adc
lock
sub
fs
jae
lret
mov
or
pop
xlat
xchg
mov
mov
mov
test
test
in
dec
push
push
adc
decl
call
pop
ljmp
repnz
mov
mov
push
and
adc
les
or
addr16
mov
dec
or
pop
mov
jns
push
js
mov
adc
pop
mov
idivl
mov
loopne
in
test
xchg
mov
sub
cmp
ret
call
sub
ss
dec
loope
mov
push
sub
pop
add
cmp
sbb
push
xchg
sbb
gs
add
jne
movsb
mov
leave
sbb
cmpsl
das
mov
jmp
jg
test
and
shrb
inc
mov
jmp
jb
cmp
sub
call
loopne
in
dec
ljmp
xchg
mov
stos
sbb
hlt
jge
movsl
dec
rorb
jmp
repz
pop
dec
adc
xchg
repz
cmp
repnz
push
fcoml
push
bound
int
aas
aad
in
faddp
xchg
dec
jge
xchg
cwtl
cmpsl
sbb
xchg
adc
pop
sub
out
xchg
mov
xor
aaa
xor
shl
dec
inc
mov
add
sub
fdiv
inc
stos
jbe
lock
and
nop
movsb
dec
or
lret
sub
int3
lods
jnp,pt
add
in
adc
inc
insl
adc
stos
lret
cmp
and
bound
push
subb
mov
and
xor
pop
lods
mov
lret
mov
fstps
cmp
push
mov
jnp
mov
lret
or
dec
inc
imul
or
jns
mov
pop
fstps
jo
mov
sub
add
ret
cmp
gs
jns
pop
ret
pop
adc
xor
push
out
mov
fisttpll
shl
xchg
xchg
sub
or
cmp
sbb
ja
sahf
cmp
pop
aad
mov
nop
add
or
jmp
shlb
and
pop
xchg
fs
stos
std
das
mov
clc
or
jecxz
loop
jbe
inc
push
pushf
cmp
mov
jecxz
hlt
push
daa
fs
sbb
and
cli
imul
push
rdtsc
and
adc
sub
in
ret
lods
lahf
in
pop
xchg
inc
pop
rcrb
stc
and
loope
lcall
adc
and
adc
jl
mov
lret
cmpsb
into
stc
cld
lods
call
push
push
in
fists
out
xor
mov
ret
add
mov
les
popa
mov
rorl
out
cltd
xchg
icebp
push
aad
not
xchg
xor
adc
rcrb
mov
pop
call
stos
cmpsl
xor
xor
call
lcall
lds
dec
jb
pop
pop
push
int
or
in
xor
dec
popf
insb
and
aas
adc
jp
xchg
dec
cld
mov
and
dec
mov
lea
int3
jge
insl
pop
enter
outsb
insl
pop
cld
imul
sbb
test
cld
xchg
fiadds
xor
xor
icebp
sub
mov
aas
lea
nop
outsb
in
sbb
xchg
insb
int
js
shll
mov
aas
xor
and
mov
shlb
push
repnz
lret
lock
loopne
mov
test
cmp
es
ret
and
das
cmp
lret
jae
xor
lods
inc
xchg
into
sbb
xchg
push
jae
stos
add
sub
sti
mov
enter
xor
xchg
andb
mov
jmp
insb
fistpl
dec
or
cwtl
xchg
inc
mov
in
aam
jb
pop
xchg
fstps
dec
inc
enter
add
add
lcall
popa
popf
pop
aad
lods
xchg
cmpsb
jbe
inc
cmp
arpl
push
jge
inc
mov
add
dec
sbb
push
lock
movl
stos
cmp
addb
and
mov
adcl
scas
sbb
dec
adc
test
divl
xchg
inc
nop
loope
repnz
inc
std
push
jbe
out
xchg
imul
outsl
movb
push
mov
push
pop
icebp
push
push
and
mov
sub
addr16
add
mov
cmp
add
sbb
mov
js
xchg
fdivrp
notl
inc
clc
shll
cmc
or
das
pop
add
test
mov
rorl
mov
loop
xchg
repnz
mov
adc
xor
mov
fwait
orl
cmc
out
or
sub
enter
push
enter
decb
arpl
in
into
sbb
popa
fwait
in
sub
jg
mov
push
and
aam
push
jle
rolb
pusha
lret
mov
pusha
jl
in
movsl
arpl
pop
ss
sub
dec
jno
popf
and
adc
stc
fdivs
inc
insl
xor
cmp
sub
fidivl
sahf
push
movsb
sbb
add
xchg
push
fldt
cmp
jmp
outsl
arpl
faddl
btc
xchg
and
pushf
testb
adc
out
sti
pusha
sbb
or
push
subl
arpl
repnz
adc
mov
add
outsl
cli
xchg
imul
pop
rcll
inc
push
push
mov
push
xor
sbb
push
iret
ret
ds
push
adc
sti
ja
push
and
repz
rorl
ljmp
popf
jnp
xor
inc
jns
movsb
push
addr16
mov
sahf
inc
dec
adc
inc
jne
lods
cmpsb
faddl
xor
mov
loope
push
in
pop
ja
les
js,pn
sbb
inc
cmp
pop
out
imul
gs
add
add
pop
rcll
cmpsl
add
pop
lock
and
fld
movl
adc
xorl
cmpsl
mov
popa
scas
pop
xchg
outsb
push
xchg
pop
in
int
jg
cs
add
mov
xrelease
nop
inc
jmp
insb
mov
aas
leave
sti
fiadds
xchg
xor
cmpsb
mov
mov
dec
in
mov
fld1
mov
es
jg
ss
xor
ljmp
pop
jns
jne
les
cmp
stos
cwtl
jle
test
jo
inc
ds
dec
fimull
je
bound
dec
fstpt
mov
sbb
aaa
ss
sbb
push
sar
xor
fsts
stc
cmp
jo
fldenv
sbb
mov
push
stos
xor
fimuls
stos
std
int3
mov
adc
xchg
movl
mov
jge
fsubl
adc
mov
das
jp
jecxz
mov
cs
pop
aam
xchg
push
jne
or
shlb
leave
enter
mov
dec
fnclex
or
jno
repnz
sub
pop
stc
sbb
decb
aas
pop
hlt
or
push
add
cmpsb
pop
push
sti
jno
and
loope
sbb
rcll
pop
jmp
push
stc
mov
loope
mov
cs
push
subl
pop
mov
xchg
add
sbb
call
mov
loope
pop
hlt
rorb
xchg
imull
idiv
and
pop
ljmp
out
mov
ret
sub
adc
out
dec
fwait
mov
rolb
dec
and
pusha
and
insb
sub
sbb
cmp
mov
inc
js
push
repnz
je
ror
mov
pop
pop
daa
pop
add
std
in
cld
xor
pop
cmp
push
fcmovbe
lods
lock
movsl
sti
addr16
shrb
jb
mov
adc
xchg
adcl
mov
mov
xchg
cli
popa
repz
cmp
mov
mov
xchg
jecxz
jne
cmp
mul
stc
outsl
push
xchg
jbe
mov
repz
das
testl
cmovo
frstor
xorl
and
call
push
lcall
pop
ds
and
sub
test
pop
sub
leave
xchg
mov
push
imul
inc
lods
inc
popa
mov
or
xchg
jae
xor
and
cmpsl
mov
dec
jl
cs
dec
mov
jle
pop
jl
ss
rcr
mov
fs
call
incb
add
jnp
scas
imul
mov
idiv
push
and
orl
cmpsb
cmp
jns
bound
pop
xchg
pop
mov
inc
mov
xchg
inc
xchg
test
adc
out
or
dec
cmp
lds
cmc
pop
push
cltd
push
js
and
and
sahf
adc
pop
push
xchg
sbb
push
jbe
jecxz
fmuls
outsb
inc
jo
lret
mov
out
and
push
cmp
int
sbb
sub
mov
jo
jbe
ds
nop
add
mov
je
repnz
out
cmp
jbe
or
jp
xor
xchg
hlt
fcomps
scas
sahf
jmp
jecxz
adcb
pushf
inc
jns
push
rcr
in
xchg
add
xor
in
rclb
inc
adc
mov
outsl
push
lcall
rcll
dec
test
fmulp
subb
sarl
es
xor
repz
rcrl
and
mov
inc
mov
push
jbe
addr16
jge
addr16
mov
mov
adc
lret
cmp
push
inc
dec
fldcw
rcrb
fs
add
fwait
jno
sbb
sub
xor
cmp
jns
hlt
add
jg
xor
int3
add
lea
cltd
ss
mov
xor
mov
incb
enter
push
aad
aaa
xlat
jne
fiaddl
stos
or
lcall
int
pop
inc
fnstcw
pusha
scas
mov
in
dec
sbb
outsb
xchg
mov
sbb
jmp
lods
push
or
fs
dec
mov
fcoms
sarb
sub
sub
jg
rcr
nop
mov
pop
jns
test
xchg
sbb
bound
outsl
rorb
clc
popf
and
ret
mov
or
out
stc
and
jle
lcall
mov
mov
mov
xchg
xchg
in
shlb
sarl
lods
dec
mov
imul
stos
xchg
adc
mov
sbb
cmp
cmpl
xchg
sub
lods
fists
or
addr16
dec
sar
es
dec
adc
xor
shrb
mov
jmp
xor
push
or
std
shrb
cmp
into
pop
dec
inc
lret
fiadds
stos
fstps
sbb
jb
dec
push
sub
xor
iret
mov
adc
testl
jno
test
sti
call
ret
sbb
push
mov
jmp
inc
sub
loope
test
ljmp
aad
fcomps
fwait
cmp
push
or
pop
pop
dec
add
nop
or
sbb
aas
push
mov
dec
xor
and
leave
pop
int3
adc
dec
arpl
adc
and
or
adc
or
js
rolb
aad
cli
imul
nop
gs
jne
adc
pop
insl
movl
js
cmp
out
addl
push
out
jmp
cmp
xchg
wbinvd
mov
dec
rcrl
je
pop
mov
loope
mul
lods
adc
cmpsl
jp
in
xchg
in
idivb
mov
lcall
das
ljmp
or
jb
mov
popf
rorl
loope
sbb
pop
xchg
push
xchg
adc
xor
adc
jg
dec
imul
in
mov
xchg
scas
ret
das
std
dec
cmovno
out
enter
sbb
jae
mov
out
or
imul
and
sub
sbb
in
ss
add
sub
arpl
adc
mov
pop
push
xchg
mov
xchg
cmp
dec
dec
xchg
mov
pop
adc
inc
daa
fdivr
xchg
outsb
pop
push
das
xlat
cmp
stos
repnz
sbb
repz
mov
scas
adc
stos
dec
sbb
test
push
mov
fcoml
xchg
mov
cmpsl
fwait
inc
jecxz
roll
xor
arpl
idivb
mov
add
cmpsb
inc
xchg
push
xchg
jge
lret
sub
and
mov
add
out
xchg
adc
fstpt
in
int
lret
rcl
loopne
lret
inc
int3
loop
imul
jle
add
lret
dec
or
adc
mov
sub
or
imul
in
jge
inc
and
ret
push
adc
cwtl
repnz
subl
inc
jne
sub
pop
mov
fwait
jnp
fidivrl
leave
sarb
lds
loope
pushl
xchg
daa
jne
push
fstpt
jp
xchg
jmp
icebp
mov
jmp
rclb
dec
lds
add
in
or
xchg
stos
scas
nop
sbb
in
sub
in
mov
cmp
movsb
or
mov
jl
scas
mov
mov
lock
add
es
and
out
ds
stc
lds
test
nop
push
mov
inc
xchg
push
daa
data16
inc
test
xor
jo
pop
test
scas
loop
mov
mov
cmp
sarl
aam
push
pop
add
test
sub
pop
xlat
lock
push
stc
lds
jg
fldenv
rolb
out
push
and
jmp
gs
cli
add
popa
mov
dec
push
jl,pn
mov
push
mov
mov
sbb
sbb
sbb
rcrb
adc
push
mov
cmp
jp
fisubrl
mov
test
push
mov
xchg
xor
cld
xchg
push
add
or
mov
aam
sti
out
push
ljmp
xchg
xor
gs
repz
aaa
push
test
inc
sub
cmpsl
xlat
cmp
loope
xchg
mov
sbb
stos
into
cmpsl
cmc
ret
lahf
xchg
jno
xchg
xor
out
dec
mov
iret
dec
aas
lock
xchg
add
cmp
out
in
pop
mov
adc
push
stos
xchg
bound
sbb
ret
pusha
jbe
aad
push
xorb
dec
cmpsl
rorb
call
add
cmc
push
negb
fxtract
out
popf
clc
sbbb
jae
jne
in
sub
pop
mov
ret
stos
js
jae
nop
xchg
addr16
mov
loop
sbbb
xor
daa
outsl
fistpll
inc
in
scas
ret
mov
popa
outsb
or
cli
cltd
fs
dec
popa
fucom
je
test
data16
fdivrl
scas
dec
xchg
fdivr
cmc
aas
sarb
sbb
mov
xchg
dec
jle
or
arpl
hlt
imulb
xchg
or
push
aaa
xchg
bound
mov
cmpsl
sub
insb
sbb
xchg
and
shll
sbb
cli
sbb
mov
cmpsb
lds
mov
xor
js
pop
mov
mov
and
mov
or
leave
pop
stc
inc
cmpsb
fistpll
adc
add
jns
mov
das
cmp
cmp
dec
out
pop
sti
xchg
ret
push
pop
inc
mov
add
insb
sti
ljmp
enter
ds
test
push
rcll
iret
fimuls
lods
popf
mov
or
pop
mov
jg
adc
adc
scas
add
mov
mov
ds
xchg
mov
ror
cmp
or
and
in
xchg
pop
sahf
imul
fmuls
xlat
pop
xchg
mov
int
je
xor
and
add
inc
enter
push
inc
push
rcr
ret
int
dec
xchg
cmc
outsl
mov
mov
shrl
cli
aam
aam
push
aad
cmc
mov
adc
and
cmp
lea
pusha
or
and
pop
ficomps
push
rorb
aas
cmp
shl
lcall
cmp
mov
aam
out
js
pop
ret
and
call
loope
int3
call
in
mov
add
daa
fsqrt
fnsave
sub
xchg
push
jns,pn
mov
xor
adc
aas
les
repz
les
aad
movsl
add
mov
adc
sbb
pop
lret
mov
jns
outsl
jnp
in
mov
cmpsb
or
pop
push
out
push
jae
daa
push
pop
pop
mov
test
idivl
andb
mov
push
das
insb
stos
push
pop
sbb
and
pop
bound
dec
xlat
mov
movsl
xchg
and
popa
inc
adc
mov
cli
ja
ja
repz
sub
dec
orb
cmc
outsb
sarb
add
xor
int3
lock
ret
jecxz
icebp
mov
cld
mov
sbb
addr16
inc
rol
shrb
mov
mov
lea
arpl
jo
lods
out
jae
xchg
jmp
xor
cmpsb
incl
mov
pusha
push
pop
rorb
sub
testl
inc
mov
pop
mov
jns
adcb
jl
sbb
xchg
pop
test
stos
and
push
jb
ss
sub
or
jbe
inc
xchg
aaa
mov
sub
jecxz
jns
ror
add
jmp
mov
push
add
adc
cmp
mov
out
hlt
in
sub
xchg
push
sti
inc
enter
xchg
or
ret
scas
lahf
cmpsl
push
popf
mov
cmc
dec
sub
and
iret
outsl
jnp
cwtl
leave
jl
call
adc
inc
jns
gs
mov
fldenv
into
and
icebp
std
mov
sbb
xchg
bound
xor
lcall
or
xor
cli
mov
mov
rolb
lahf
cmc
das
dec
leave
iret
scas
int
jg
insb
call
jnp
sbb
xor
shl
and
ficoms
mov
sub
pusha
dec
and
shr
jmp
jns
inc
shll
insb
jle
and
shll
cmp
xor
mov
fdivp
decb
dec
negl
xor
js
push
cli
cmp
sub
sub
mov
das
pop
mov
inc
cmp
in
xor
sbb
leave
in
les
lds
mov
mov
hlt
pushf
sbb
push
into
push
gs
add
mov
mov
add
cwtl
pushf
test
negl
daa
int
push
scas
jmp
xchg
and
adc
cmpsl
daa
sbb
into
fwait
mov
pop
call
inc
xor
push
sbb
ds
fistps
sbb
and
sbb
std
push
mov
lahf
insl
inc
icebp
sub
add
jmp
or
leave
pop
pop
cld
or
xor
nop
push
dec
imul
xor
xor
and
xor
dec
mov
int
pop
dec
cmp
out
inc
insl
mov
push
adc
sbb
mov
pop
jo
lret
push
sbb
je
cli
nop
unpcklps
shrb
dec
xchg
repz
adc
movsl
push
notb
cmpsb
adc
xlat
xlat
dec
call
lods
pop
loope
dec
fidivrl
mov
push
jae
cmp
out
out
cwtl
insl
push
push
test
pop
dec
sbb
mov
es
das
sbb
imul
sub
xor
jne
mov
gs
mov
adc
in
inc
sbb
push
out
jge
pop
pusha
push
inc
in
sub
cmp
out
xchg
fwait
loop
es
sbb
mov
sbb
rcrl
sub
stc
arpl
add
add
gs
repz
dec
pop
jge
sbb
data16
test
js
insl
repz
cs
jnp
add
mov
inc
notb
pop
cmp
mov
negl
push
jnp
mov
xor
pushl
and
aad
test
xor
or
fcomps
cmp
push
jecxz
pop
leave
push
roll
lahf
pop
add
out
mov
les
cli
cltd
shlb
jbe
mov
test
cmp
jecxz
loope
xchg
sti
lcall
jns
lods
push
push
xchg
and
jmp
sub
cltd
repz
cli
xlat
push
pop
adc
mov
ficoml
cmpsl
and
lods
loope
imul
xchg
or
mov
sbb
rolb
xor
mull
sub
push
mov
in
std
fldcw
sbbl
or
inc
lcall
test
xchg
mov
mov
or
pop
sti
xchg
dec
or
rclb
mov
or
mov
sahf
movb
and
and
btc
jecxz
mov
fnsave
lds
push
cmp
push
movsl
jne
mov
or
mov
in
sub
stos
fwait
xor
mov
lcall
imul
cmpsb
sti
ds
xchg
mov
divb
stos
pop
mov
fwait
stos
lds
lods
cmpsb
mov
mov
rcl
lock
test
cltd
sti
ret
push
push
push
cmpl
stc
mov
test
push
test
sbb
fistps
xlat
enter
test
pop
mov
fnstenv
mov
enter
jno
fdivrs
push
lret
shlb
or
aaa
jae
mov
leave
push
outsl
xor
xchg
js
and
pop
pushl
lock
test
and
push
sahf
cli
rcll
mov
shrl
cmp
xchg
push
imul
jg
push
cltd
fninit
daa
dec
push
or
ret
ljmp
mov
cs
test
in
mov
enter
cmc
sbb
sbb
loop
rcl
icebp
jle
add
mov
mov
or
inc
sahf
lahf
xlat
out
mov
bound
jmp
fdiv
and
or
enter
or
or
adc
cmp
xchg
ret
mov
pushf
mov
neg
ja
jl
lods
xchg
inc
and
cmp
add
jae
mov
loop
or
es
xchg
lret
mov
mov
sub
pop
sar
call
fnsave
xor
cmp
inc
cmp
mov
fstl
and
sbb
movb
bound
fwait
adc
xor
adc
enter
push
add
cltd
pop
mov
lea
loope
addr16
mov
fsubr
or
mov
daa
fistl
and
dec
sub
iret
inc
outsl
dec
xor
lahf
xor
incl
addr16
mov
mov
mov
sbb
jp
test
push
addr16
or
adc
test
add
cs
jge
mov
dec
push
mov
sbb
lcall
xor
push
test
pop
in
push
inc
cmpsl
xor
movsb
dec
fldenv
aaa
jp,pn
inc
pop
ret
mov
jmp
dec
outsb
pusha
loopne
mov
jl
mov
loop
hlt
mov
cmpb
imul
ds
insl
cmc
sahf
push
mov
arpl
fcomp
icebp
dec
shl
stos
xor
call
jne
adc
xchg
bound
aas
imul
add
push
int3
xor
lahf
movsb
cmpl
inc
xchg
or
movsb
shll
sub
and
jecxz
orb
ss
jp
jp
js
dec
idivl
adc
sub
out
insl
sbb
mov
sub
add
and
aas
lret
mov
mov
fldl
jb
mov
xchg
inc
out
cltd
sbb
jns
xor
js
mov
iret
call
nop
stos
lahf
out
sar
es
insl
pop
scas
cs
add
aaa
and
movsl
cmpsb
mov
dec
add
inc
push
adc
sub
cmp
call
add
sbb
push
xchg
or
cmp
dec
push
loop
aad
and
fidivrs
loop
dec
fisubl
enter
lods
into
and
dec
into
fs
push
push
push
shl
xor
cli
dec
jg
in
mov
xchg
mov
inc
mov
mov
sbb
mov
incl
stos
lods
imul
mov
lahf
and
jmp
movsl
in
lahf
dec
cmp
dec
loope
lds
aad
into
icebp
sbb
xchg
sbb
cltd
and
push
iret
repnz
sbb
mov
inc
cld
xchg
xor
adc
and
shrb
inc
ret
movsl
in
cs
pop
mov
pop
jne
sbb
loopne
fisttpll
mov
mov
push
sub
or
or
inc
mov
sub
inc
or
add
push
cmp
nop
andb
mov
adc
xchg
jb
mov
cli
cwtl
sahf
flds
mov
sub
xchg
pop
aaa
push
pop
pusha
jl
dec
mov
mov
test
mov
subl
aas
jo
cs
and
inc
shll
movsl
stos
or
int3
cmp
lds
neg
dec
loopne
pop
sub
loopne
cmpb
dec
sub
std
test
pop
enter
push
mov
addr16
mov
push
xchg
cli
lods
je
push
and
ret
push
out
out
mov
mov
mov
push
mov
pop
mov
std
pop
int3
xchg
pop
outsb
jae
stos
jo
pop
fwait
subb
or
jmp
cmp
nop
sti
popa
adc
mov
mov
mov
push
popa
add
add
mov
cmpsb
push
push
outsl
push
xor
gs
add
rcr
int3
mov
push
or
popa
in
add
dec
sbb
or
daa
add
adc
popf
cltd
icebp
fdiv
and
cmpsl
std
ds
pop
dec
in
ret
in
and
dec
mov
or
xchg
xlat
xor
mov
ficoml
cmp
pop
mov
int
fwait
rcr
sti
aaa
fstl
dec
fisubrl
cwtl
ss
sti
call
adc
mov
inc
push
sbb
or
leave
cli
movsb
popf
rolb
movsb
push
cmp
adc
or
fs
add
jecxz
xor
pushf
or
dec
add
pushf
rorl
adc
lock
inc
xchg
cmp
pushf
lret
ds
mov
add
jnp
ret
sub
sbb
sbbl
push
sub
stc
rolb
mov
jno
xchg
aaa
push
xchg
sub
push
cmp
add
xor
push
mov
pop
dec
mov
dec
xorb
mov
faddp
std
mov
loopne
repnz
pop
lcall
push
aas
dec
inc
sbb
cmp
aam
mov
aam
repz
mov
fisubrs
push
and
jmp
mov
mov
pusha
cwtl
push
sarb
loope
lret
jnp
mov
adc
fdivr
jge
popa
cmp
add
test
dec
xlat
clc
orb
jg
mov
adc
in
bound
mov
mov
mov
outsl
outsl
mov
sbb
addr16
adcb
xchg
outsb
lds
mov
ror
adc
cmc
push
es
in
test
inc
pushf
xor
outsb
mov
lea
mov
insb
pushf
icebp
sbb
xchg
xchg
out
rcrb
mov
js
push
rorb
pop
pop
std
or
bound
int
pop
sti
push
nop
test
pop
ds
mov
lea
cli
cld
aam
pop
sub
imul
inc
push
jne
cli
xor
adc
ds
mov
pop
jecxz
mov
pop
imull
loopne
push
mov
les
shl
test
sub
cmpsl
push
cs
adc
imul
sbb
add
fdivrs
mov
int3
xchg
loopne
fbstp
push
adc
inc
fstps
fwait
out
adc
imul
mov
push
xchg
pop
or
test
call
int3
cwtl
test
sub
mov
xor
or
or
cmpsb
xchg
push
jecxz
inc
mov
jge
lock
add
cmp
xor
add
test
xor
jle
pop
mov
aad
fstps
arpl
loop
out
lods
push
imul
fsubrs
lea
mov
fsubp
jge
dec
inc
iret
and
subl
adc
xchg
leave
adc
mov
cmp
jo
cli
rclb
or
cmpsb
mov
aam
push
xchg
inc
lea
dec
fs
xor
fcmovnbe
scas
mov
cmc
lods
push
sbb
mov
xchg
aad
dec
in
pop
das
int3
xchg
test
mov
pushf
add
sub
out
or
daa
pop
sub
jmp
jnp
and
xchg
push
cli
test
push
dec
stc
clc
jle
popa
subb
xor
aas
xor
cmp
repnz
inc
test
mov
aaa
jp
repnz
cwtl
aas
push
mov
stos
pop
add
sar
mov
bound
imul
mov
test
inc
mov
iret
repz
int
xchg
add
lahf
sbb
add
bound
out
in
sub
js
mov
mov
jmp
pop
jecxz
dec
xor
neg
in
fistl
mov
lods
popf
in
lahf
pop
dec
imul
adc
std
dec
inc
cmp
pop
or
adc
pushf
in
dec
shrb
pop
std
sbb
rclb
xchg
loopne
repnz
adc
stos
mov
ljmp
jno
sarl
cmp
mov
dec
cmp
cmp
sbb
shrb
push
cmp
out
adc
jle
mov
push
and
sub
push
pop
jmp
xor
dec
gs
cld
jo
inc
sar
loopne
das
imul
dec
push
mov
push
mov
jae
dec
push
arpl
mov
and
test
fistpll
mov
out
cmc
cmc
fwait
out
jecxz
sub
or
sbb
sbb
xlat
mov
ret
add
lahf
addb
jmp
push
arpl
push
or
cmpl
sub
dec
xor
mov
push
xchg
shrb
push
ss
add
gs
inc
call
cmpsb
std
pop
adc
cwtl
mov
push
je
xor
ds
js
xchg
mov
push
jl
test
cmp
sbb
cwtl
push
addr16
js
dec
push
xlat
jae
xchg
adc
sub
or
lods
mov
or
or
jmp
pop
xor
sub
ja
xchg
ljmp
push
pop
fwait
jo
pop
and
push
sbb
and
push
dec
inc
dec
mov
dec
int3
outsl
push
xor
pushf
lods
je
out
jns
xor
cmp
cmp
aaa
fists
pop
neg
je
or
mov
pushf
cmpsb
cmp
in
xor
nop
fisubs
dec
jg
popl
xchg
call
out
push
int
lods
rcr
pusha
test
or
pop
gs
shll
mov
mov
jnp
mov
cld
iret
and
aas
lods
data16
call
outsl
jge
lret
ja
dec
dec
push
stc
cltd
out
sub
mov
cmp
loop
add
dec
fwait
ret
inc
div
push
daa
loopne
rol
mov
out
cmc
mov
add
xor
icebp
inc
xor
shrl
ja
push
in
and
mov
xor
adc
cmp
or
in
push
adc
insb
push
push
push
rcl
jmp
mov
xor
cmc
and
push
xchg
cmp
data16
dec
sbb
pop
jecxz
data16
or
test
or
popf
pop
insl
mov
out
stos
fistpl
adc
les
aam
js
pop
push
outsb
repnz
lds
movsbl
mov
xor
stos
xor
cmpl
and
loop
scas
mov
cmp
notl
out
fldl
mov
mov
lret
popa
sub
dec
hlt
gs
xchg
xor
or
mov
pop
xor
jecxz,pt
leave
dec
aad
cwtl
mov
mov
mov
sti
cmc
cmp
xor
dec
cmpb
lea
xchg
clc
add
mov
in
test
stc
jmp
inc
xchg
leave
xor
aas
xchg
sub
cmp
pop
shll
mov
stos
dec
dec
xchg
cmp
or
jmp
push
fistpl
inc
dec
xchg
mov
add
cmc
or
pop
testl
movhps
xor
push
mov
or
pop
lcall
push
mov
add
aam
insl
mov
inc
imull
jnp
adc
mov
test
mov
and
das
adcl
dec
dec
roll
sarl
jae
mov
xlat
xor
pop
inc
pop
lds
dec
popf
lea
inc
mov
dec
sarl
int3
lcall
sbb
jl
inc
mov
daa
stc
xchg
mov
cmpsl
mov
push
ljmp
test
sbb
xor
in
cmp
jge
dec
outsb
jmp
gs
inc
popa
nop
cli
sbb
jnp
scas
mov
cmpsb
lds
xor
mov
and
mov
popa
or
scas
stos
mov
pop
fcomi
mov
leave
mov
pop
lock
ja
jg
cmp
xchg
fdivrs
fisttps
add
scas
push
mov
xchg
and
mov
xchg
pushl
fwait
leave
ret
mov
out
pop
gs
sub
mov
mov
cmp
sbb
cmp
stos
ret
rep
imul
int3
repnz
sbb
lret
sbb
ror
ret
add
pop
jp
loopne
out
in
sub
xchg
mov
hlt
jle
or
sbb
and
push
mov
test
pop
xor
dec
test
out
loopne
scas
push
dec
mov
xchg
test
or
pop
int3
inc
ret
inc
fmull
pop
inc
aas
lock
sbb
mov
subb
movsb
jb
cmp
mov
subl
xlat
shlb
cltd
enter
push
iret
call
inc
repz
idiv
or
scas
lods
mov
mov
rcr
loop
mov
sti
ficompl
fstpt
add
jae
push
nop
dec
in
movsl
mov
lret
or
xor
test
fdivrl
andb
mov
js
lock
test
mov
add
xchg
mov
daa
xor
push
out
in
xor
scas
ss
mov
pop
jecxz
sbb
pusha
dec
in
lcall
mov
mov
or
sub
pop
out
test
mov
add
scas
nop
arpl
xchg
fwait
into
jp
mov
adc
push
gs
lea
out
scas
dec
insl
xchg
jg
mov
mov
inc
or
popf
inc
inc
aas
test
cmp
int
mov
in
dec
lret
mov
aam
loope
xor
movsl
xchg
mov
dec
pop
rcr
in
sub
and
cmpsl
lret
sahf
push
mov
push
pusha
jg
or
loop
test
imul
push
into
xchg
jg
cld
xchg
mov
push
push
test
rorl
cmp
imull
sbb
adc
xor
xchg
xchg
push
sub
jle
jb
scas
cltd
out
sbb
in
xchg
push
subb
jno
or
leave
mov
aaa
movsb
dec
and
mov
into
jp
and
inc
test
inc
sahf
sub
adc
or
insb
ror
adc
mov
pop
sub
jae
mov
sbb
inc
mov
jns
test
adc
int3
out
push
fwait
add
xor
xchg
mov
ds
lock
pop
int
xchg
mov
mov
mov
int
sub
std
js
inc
shr
dec
jno
lock
pop
mov
test
cwtl
push
mov
jb
adc
pop
sarb
jl
pop
xor
add
rclb
pop
pushf
cmp
movsl
loopne
push
inc
cmp
mov
sub
data16
add
repz
jmp
sbb
sbb
movsl
mov
and
pop
push
sbb
pop
mov
movsb
and
cmp
insl
testl
mulb
xchg
pop
xchg
mov
sbb
sub
mov
jbe
adc
adc
lods
pushf
mov
loopne
clc
fdivrp
aas
adc
push
movl
jg
in
push
fiadds
insb
testl
push
stos
jo
test
mov
sub
aad
adc
add
mov
leave
movsb
sahf
ljmp
ss
push
sahf
push
jg
cmpl
cld
cmp
adc
xlat
int3
mov
sub
mov
ljmp
sahf
jmp
add
int
and
nop
dec
lcall
out
mov
push
jbe
pop
aam
pop
mov
fsubl
jp
in
roll
jmp
jp
xchg
cld
cmpsb
dec
daa
jmp
loop
test
ror
loopne
cs
int
mov
test
or
sub
iret
push
aaa
pop
aas
adc
cmp
push
adc
es
sub
jl
push
jae
mov
imul
adc
dec
ja
repnz
dec
and
aam
enter
and
jbe
pop
or
lcall
pop
pusha
jp
push
push
xchg
sub
fldl
cwtl
push
stos
cwtl
push
jle
xchg
insl
ljmp
or
push
mov
sub
mov
jne
int
xchg
pop
inc
and
loope
sbb
fs
sub
and
mov
dec
push
xorb
popa
adc
jbe
std
xchg
call
mov
or
mov
jmp
int
aam
cltd
repnz
or
popf
ds
in
sahf
and
mov
outsb
dec
jecxz
stos
shl
lock
lcall
and
pop
mov
cmpsb
cli
add
xlat
mov
and
mov
or
cli
dec
sbb
ja
mov
sub
scas
shlb
mov
loopne,pn
jae
iret
rcll
mov
push
push
test
cli
lret
les
cmp
cmpl
push
inc
inc
or
adc
pop
jno
add
cmpsl
imul
jno
aas
jo
mov
mov
or
jns
stc
sub
adc
out
adc
inc
mov
loopne
adc
pop
and
add
es
data16
sbb
cmpsb
in
fcomps
insb
jp
mov
push
ds
pusha
into
addr16
in
pop
cltd
mov
cmp
outsl
aad
inc
xchg
lahf
cwtl
lahf
and
sbb
aas
push
push
or
sub
dec
test
dec
sti
xlat
add
pop
adc
push
or
mov
add
cmp
mov
out
push
movsl
mov
push
sbb
xchg
push
outsl
sub
fbstp
outsl
xchg
push
fisubrs
pop
shlb
and
aam
jo
jns
aam
dec
arpl
xchg
adc
xchg
repnz
xlat
cli
out
iret
mov
outsb
jbe
or
lahf
ds
jne
push
and
frndint
pop
fbstp
add
cmp
bound
iret
mov
mov
repz
lea
cmp
xor
cmp
mov
fsubl
mov
xor
sbb
and
int
xlat
ljmp
push
ret
cmp
sbb
pop
sarb
add
xchg
mov
mov
add
cld
cmpb
inc
jmp
sub
push
call
xor
aam
pop
inc
push
sbb
xor
sahf
inc
in
scas
mov
xchg
sahf
lds
mov
mov
ret
jmp
mov
cmc
out
cmp
pop
int3
clc
sti
stos
push
aad
fimuls
int
pop
add
inc
testb
jne
xchg
adcb
mov
dec
cmp
mov
push
mov
add
test
jge
imul
jae
aad
call
sarl
test
out
scas
inc
loop
cli
push
lea
pop
mov
scas
dec
add
fdivr
sbb
mov
sub
add
call
stc
pop
dec
and
icebp
cmc
xchg
jge
mov
movsb
xchg
dec
mov
mov
add
and
lret
je
sbb
xchg
es
enter
jnp
cli
xlat
in
lret
icebp
addr16
outsl
aaa
stc
fstpt
and
xchg
stos
in
pop
pop
inc
pop
test
loope
and
dec
sahf
and
loope
pushf
daa
stos
into
ljmp
imul
fwait
imul
and
aas
sub
sub
jmp
mov
lea
imul
sub
jmp
fisubs
pop
push
jae
mov
imul
idivl
leave
or
and
xchg
adc
imul
push
out
pop
in
mov
mov
sbb
pop
loopne
ret
fwait
sub
jb
sub
xor
inc
push
test
push
dec
jno
pop
push
fiaddl
mov
jns
cmp
cld
nop
or
jae
negl
lds
testb
cmc
inc
xor
lods
mov
lock
daa
mov
ljmp
xchg
movsb
dec
iret
insl
movsb
test
inc
add
jb
mov
dec
push
pusha
enter
scas
push
sahf
sub
and
out
push
xchg
lock
jb
rcl
sahf
dec
inc
mov
popa
in
es
push
imul
push
add
iret
jmp
orl
dec
mov
adc
enter
lea
hlt
out
inc
cs
fwait
and
push
cmp
enter
insb
dec
mov
data16
stos
fldcw
and
inc
add
mov
fistpl
movsb
icebp
popf
lret
test
mov
push
loope
add
lds
mov
inc
push
push
adc
popf
gs
xchg
mov
push
icebp
cmp
push
inc
cmpsl
clc
adc
jge
test
inc
gs
test
repnz
cmp
fsub
mov
inc
xchg
jo
pop
in
jnp
nop
mov
and
mov
je
lock
fsubrs
insb
mov
cmpsb
rol
xor
pop
outsb
jp
or
push
ja
and
or
rclb
mov
hlt
sub
jg
es
cld
in
out
push
inc
sbb
cmpb
xchg
mov
mov
pop
fisubl
push
pop
loopne
and
sub
inc
or
pop
mov
mov
xchg
and
and
ljmp
adc
shl
jae
push
sbb
fsubrl
lds
xchg
mov
out
push
out
sbb
fxch
sarb
out
fwait
aad
and
lcall
inc
pop
pop
push
les
popa
adc
cwtl
jo
gs
push
xchg
mov
imul
lret
sub
cmpsb
jnp
ljmp
push
idivl
je
loopne
cwtl
mov
xlat
mov
leave
and
fidivrl
jns
jl
cmp
pop
bound
or
inc
and
sub
mov
xchg
cmpb
mov
daa
jne
inc
shll
pop
stos
mov
inc
into
push
sub
mov
fmul
imul
jbe
jbe
cs
ja
mov
xor
cmp
sbb
aad
inc
insb
popa
test
shll
or
jmp
adc
push
cmpsl
lods
xor
insb
pop
lret
or
dec
fcomps
sidtl
push
push
jo
pause
or
lret
sub
sub
xlat
mov
into
sbb
sbb
sbb
add
sbb
fs
mov
mov
adc
mov
scas
or
mov
xchg
mov
daa
sub
repz
and
das
hlt
aas
add
mov
jge
jp
jmp
or
imul
test
inc
ja
add
push
rolb
aam
in
js
bound
xchg
hlt
cmpsb
sub
add
adc
testb
push
pop
mov
pop
nop
xchg
imul
push
push
sbb
mov
push
jns
das
test
shll
sub
fucom
test
push
std
cmpsb
fistl
dec
cli
mov
sub
js
iret
sub
ljmp
dec
cmp
mov
in
xchg
cwtl
xor
lds
push
jmp
flds
aad
fldcw
push
jl
adc
cmp
negb
in
data16
ret
mov
popf
push
mov
inc
leave
and
sti
and
dec
pop
movsb
jp
push
shll
mov
mov
adc
mov
or
shll
mov
popl
js
ljmp
into
movsb
addr16
insb
sbb
jno
fidivl
dec
aad
pushf
test
inc
in
and
cmp
in
test
hlt
stos
xchg
sbb
push
fnsave
mov
push
loopne
push
inc
inc
dec
orl
cwtl
fwait
out
lcall
test
ret
rsqrtps
push
jno
test
ss
ficoml
pusha
dec
sub
dec
out
adc
daa
out
insl
mov
ret
lods
cmp
jp
jl
fwait
mov
mov
lods
ljmp
std
lock
mov
cmpb
mov
inc
add
mov
xchg
mov
jno
dec
adc
xchg
xchg
mov
pop
add
jmp
sarb
jnp
or
lock
inc
stc
in
call
xor
or
xchg
xchg
pop
mov
in
add
fidivrs
or
cltd
xchg
add
pop
mov
mov
fnstenv
rep
sbb
cmpsl
pop
pop
repz
mov
insl
mov
mov
arpl
in
mov
stos
das
xchg
ja
cmc
pop
pop
incl
sbb
sbb
xor
lods
push
dec
sbbl
jl
stos
movsl
pusha
jp
xor
fistpll
scas
ret
fwait
out
movsb
jecxz
jb
push
out
cmc
xchg
push
xchg
insb
neg
dec
sbb
mov
dec
jae,pn
mov
mov
imul
adc
adc
cmp
outsb
xor
and
dec
loope
sti
or
leave
inc
pop
push
and
cmp
sbbl
xor
ficoms
and
inc
int
je
lea
sbb
mov
add
cmpsb
and
cmp
cmp
repnz
scas
fimull
dec
dec
xor
test
std
loopne
sahf
out
testb
aad
and
arpl
movsb
xchg
aam
mov
mov
rcrl
sub
add
lds
aaa
mov
sbb
pop
push
pop
or
mov
stc
cwtl
jns
xchg
mov
scas
add
js
pcmpeqw
pop
cmp
ja
rcll
sub
mov
mov
pop
dec
dec
and
js
in
xor
out
mov
mov
and
cli
hlt
mov
data16
xchg
dec
imul
inc
in
or
pop
insb
inc
int3
cs
hlt
mov
enter
mov
in
cli
mov
and
in
xor
xchg
outsb
push
fdiv
es
mov
and
cltd
inc
jecxz
jmp
push
cli
lock
in
or
dec
lretw
hlt
inc
aas
pop
lea
test
adc
adc
push
pop
jl
mov
movsl
enter
imul
inc
lahf
aas
dec
adc
sub
rorl
mov
sub
das
cltd
mov
push
sti
movsl
stos
test
jecxz
divl
std
xchg
mov
sub
outsb
jbe
jle
and
imul
sbb
adc
mov
cmp
ja
push
jae
jle
out
xchg
fistpl
pushf
dec
stc
add
adc
ljmp
addl
aas
pop
xor
stc
xor
push
mov
ficompl
idivb
dec
popf
push
roll
or
sub
sbb
int
aaa
pop
dec
push
xor
push
xchg
adc
es
outsb
lds
or
movsl
push
and
jns
mov
jg
cmpsl
sub
jo
mov
out
mov
pop
push
or
cmp
or
and
push
ja
in
mov
das
pop
mov
xor
jo
das
adcl
ret
jns
jle
xchg
cmpsb
aam
add
stos
cs
cmp
or
std
sbb
push
test
leave
and
pop
sub
lea
les
cmpsl
sahf
faddl
stos
sub
jnp
cltd
jg
lret
add
icebp
aas
test
mov
lods
push
push
mov
xchg
std
lea
or
mov
and
jecxz
cmp
jns
fs
inc
cmp
pop
mov
std
push
or
bound
cvttps2pi
gs
mov
xchg
pusha
adc
or
std
or
popf
mov
cltd
in
add
ficomps
and
jnp
gs
loope
push
mov
push
sub
les
rcrl
cmc
ljmp
adc
jge
and
outsl
pop
pushl
stos
inc
mov
xchg
adc
test
cli
fisubrl
loopne
cmp
lock
xchg
loopne
sbb
mov
push
or
loope
adcl
cwtl
jl
int3
add
xchg
and
or
xor
sub
into
addl
inc
push
jmp
lahf
and
sub
mov
movsl
sbb
insl
je
pop
xor
scas
push
insl
jge
stos
push
sub
shrb
bound
adc
jg,pt
mov
orl
pop
fisubs
inc
sub
test
pop
mov
mov
into
pop
in
xor
stc
shll
pop
or
and
xchg
jmp
lcall
std
pop
cmc
mov
cwtl
loopne
inc
xchg
pop
fwait
in
es
jmp
out
insb
stc
push
data16
out
xchg
das
cltd
mov
lock
push
adc
mov
arpl
dec
inc
mov
add
and
ja
lahf
outsb
jnp
push
inc
push
sub
fsub
push
cltd
incb
and
xorb
adc
cmp
inc
xchg
jge
or
sbb
lods
loopne
sub
cmovae
or
pop
jbe
aam
les
pop
stc
and
mov
loop
dec
and
or
adc
mov
iret
add
imul
mov
sub
out
dec
jmp
das
or
mov
sbb
mov
xor
pop
xchg
out
inc
dec
push
cmp
sbb
js
and
fistl
cli
sti
test
in
sbb
arpl
fstps
mov
jbe
cmp
mov
ret
hlt
add
dec
aas
jne
outsl
sub
jno
das
inc
fildl
lods
roll
pop
dec
lcall
sub
dec
sub
and
ret
xchg
inc
xor
xlat
jb
xchg
sti
rep
pop
xchg
add
mov
pop
imul
pop
add
imul
mov
mov
popa
les
test
outsb
arpl
les
imul
cwtl
cmpsb
lods
out
fcompl
sahf
inc
in
push
pusha
stos
mov
mov
mul
ja
push
push
dec
in
xor
push
pop
mov
xor
ljmp
lcall
jp
sub
sbb
loopne
dec
aas
fmull
aam
fmul
scas
jge
push
sbb
mov
dec
dec
das
mov
dec
sbb
jns
test
and
lock
push
sbb
inc
dec
cmpsl
mov
jmp
leave
or
ret
daa
inc
popf
mov
xor
in
mov
dec
aas
mov
je
loope
in
and
jmp
sarb
fcomi
inc
imulb
xchg
cmpsb
imul
rorb
inc
dec
mov
jmp
or
aaa
movsb
fdiv
lods
das
imul
xor
gs
xor
call
and
and
or
mov
sub
outsl
pop
mov
and
cld
sub
lret
jmp
bound
movsl
mov
xchg
dec
push
or
push
pusha
orl
sub
jns
push
daa
and
sahf
ret
lock
daa
pop
inc
push
fucomi
or
push
xchg
xlat
in
mov
xchg
inc
daa
ljmp
hlt
lds
mov
push
daa
ret
repnz
or
adc
push
test
fisubrl
andb
incl
and
add
jb
pop
stos
jle
or
adc
jecxz
ss
daa
sub
xchg
xor
imul
test
or
into
xorb
jnp
push
inc
pop
out
xor
lods
pop
and
mov
aas
jp
js
dec
shll
dec
fdivs
iret
les
bnd
iret
ffree
outsb
xchg
cmp
xchg
mov
mov
std
mov
lret
or
or
lcall
iret
mov
sbb
cmp
push
into
adc
jge
je
or
mov
adc
sarb
cmp
dec
xchg
mov
xor
imul
cmpsl
xchg
mov
xchg
andl
push
aad
mov
mov
dec
push
jg
xor
xchg
xor
pop
mov
fs
pusha
jp
mov
mov
adc
pop
je
pop
mov
pop
sub
pop
push
std
xchg
xchg
push
adc
int
inc
sbb
pop
and
pop
popa
clc
pop
int3
sbb
xor
inc
popf
xor
insb
aam
push
xchg
sbb
pop
jbe
cmp
and
sbb
les
das
xchg
add
xchg
sbb
inc
dec
mov
cmp
jg
ss
dec
sbb
loope
xchg
pop
sub
out
fnstenv
pop
sbb
mov
cmpsl
push
out
aad
and
dec
into
lret
ja
pop
pushf
and
aaa
mov
out
xchg
mov
mov
das
outsb
mov
mov
shlb
frstor
popa
jg
xor
sahf
daa
jg
hlt
push
in
test
jo
test
mov
xchg
sbb
out
xorl
sti
sub
mov
fucomi
add
xchg
pusha
lods
aad
xchg
test
cltd
shrb
mov
cmp
jb
mov
inc
sub
push
xor
sub
push
cmc
add
mov
sub
sbb
dec
and
mov
cmp
stos
lsl
sbb
mov
xchg
mov
push
cmp
xor
das
sahf
push
jo
in
testb
push
push
push
sbb
fimuls
incb
xchg
or
or
std
push
mov
fs
loope
push
adc
sbb
xor
or
inc
dec
jne
out
cmp
cmp
dec
ret
shrb
lock
cmp
push
mov
in
sub
push
adc
scas
leave
jne
cmc
mov
sub
jns
rep
push
mov
push
scas
stc
jb
push
sahf
cmp
stos
dec
fbld
pop
inc
xor
mov
adc
ret
test
jnp
push
mov
sub
gs
sbb
jp
jecxz
pop
xorb
xchg
loopne
lds
sbb
mov
cmp
sub
daa
imulb
popf
fucomi
xor
popa
mov
cmp
scas
ja
pop
xor
push
xchg
push
pop
mov
mov
test
add
mov
xlat
or
fidivrl
in
incl
aam
dec
mov
and
sbb
sub
imul
hlt
rorb
sub
or
xchg
movsl
gs
inc
fldcw
arpl
inc
push
push
movsb
jno
pop
mov
push
pop
fnstenv
and
test
pop
cld
and
push
xor
mov
bound
call
mov
mov
cmpb
enter
loop
cld
xchg
std
inc
adc
jne
leave
xchg
mov
pusha
and
xor
fisubl
subb
or
push
test
mov
imul
or
loop
xchg
lds
lods
xchg
sbb
mov
stos
xor
mov
clc
jg
pushf
lods
repz
addb
pop
mov
inc
test
leave
bound
in
xchg
inc
roll
add
ljmp
aad
ss
pop
add
fsubrl
pop
mov
xchg
mov
xchg
push
bound
je
inc
inc
or
push
mov
xor
pop
cmp
inc
jae
out
icebp
mov
push
push
adc
lods
into
fwait
and
into
sbb
ljmp
ljmp
test
mov
sbb
push
cmp
mov
mov
imul
mov
mov
mov
add
in
inc
or
ds
lods
dec
adc
sub
cmpsb
in
and
push
pop
jp
inc
int3
sbb
or
mov
pusha
and
pop
pop
jge
pushf
out
adc
push
leave
fs
inc
iret
ds
cmp
pop
inc
into
and
outsb
popa
dec
ret
cmpl
lea
xchg
rcrl
dec
frstor
outsb
bound
mov
imul
jnp
cmp
mov
mov
or
push
xchg
imul
and
stos
lahf
addr16
sub
push
stos
and
out
mov
dec
test
push
cmp
cmp
pop
loope
inc
mov
sub
push
pop
adc
push
jecxz
ljmp
imul
divb
negb
jp
sti
pop
cmovns
jp
sbb
push
push
enter
cwtl
repz
xchg
pop
aas
jno
push
arpl
aas
sbb
add
outsb
roll
adc
push
push
rcrb
mov
movsl
fdivrp
es
mov
data16
add
or
adc
adc
push
rolb
jecxz
cmc
dec
pushf
adc
mov
xchg
lods
repz
fiaddl
les
fstp
cmp
sahf
or
xchg
adc
or
fucomip
fs
insl
adc
mov
add
mov
rcr
push
jbe
xorl
adc
imul
out
adc
inc
xor
mov
lods
dec
dec
mov
pop
ret
leave
pop
cltd
jo
dec
xchg
xor
popf
xor
daa
sbb
mov
aad
rcll
xchg
jnp
push
jg
int3
sub
fnsave
mov
movsl
lds
iret
jo
ja
push
mov
scas
dec
dec
jae
rclb
callw
pusha
add
ret
adc
mov
adc
cmp
mov
push
pop
inc
adc
ret
pop
dec
cmp
hlt
test
subl
sbb
out
mull
push
jle
push
cmpsl
dec
cmc
iret
mov
mov
jae
pop
in
sbb
xchg
fadd
jne
les
xchg
nop
jns
into
lea
add
out
mov
and
push
ds
or
cmpsl
scas
pop
clc
imul
movsb
push
xchg
jl
cmp
push
psubsb
lret
mov
adc
jo
inc
inc
xchg
adc
sti
sub
sub
clc
mov
push
aad
call
rcr
xor
or
mov
push
and
sbb
push
movsl
mov
sub
mov
mov
adc
je
or
mov
lea
inc
dec
sahf
cmp
in
sbb
mov
xchg
aaa
inc
push
ret
add
enter
mov
adc
movsb
sbbl
fstps
stos
mov
fmuls
sbb
jl
out
mov
sub
pop
jb
mov
push
xor
inc
mov
mov
stc
insl
dec
lods
pop
add
cmp
sbb
es
into
into
cmp
icebp
sbb
outsb
ja
int
stos
cmp
lret
mov
add
popa
mov
loope
push
std
es
mov
arpl
xor
dec
ret
mov
das
cmc
jns
sub
pop
rorb
iret
dec
push
dec
push
xchg
rcl
jl
xor
xchg
flds
shll
sahf
idiv
mov
out
jp
mov
cmc
or
lock
lahf
in
setle
not
mov
adc
and
outsb
xchg
xchg
popa
xchg
pop
enter
jb
inc
xor
bnd
pop
push
pop
fst
or
lods
sub
inc
add
mov
mov
or
sbb
movsb
ds
rcrb
mov
pusha
arpl
aad
fcompl
sub
lods
aaa
pop
hlt
in
lods
enter
int
add
stos
loopne
cmc
push
pop
lock
call
xchg
mov
cs
sub
ret
int
shrl
sbbb
mov
adc
insb
shl
sbb
subb
bound
nop
out
mov
pop
xor
dec
push
rolb
jle
push
cmp
xchg
popa
test
fwait
in
cmpl
out
sub
push
test
adc
jmp
sub
pop
adc
cmpsb
aas
add
push
xchg
dec
mov
add
in
mov
add
sar
addr16
cmp
xor
les
ret
xor
sub
xchg
repnz
cmp
adc
jmp
shl
mov
fmul
jmp
mov
dec
iret
inc
and
add
daa
aad
cli
aam
and
mov
xor
call
xor
push
sub
and
dec
xchg
orl
sub
mov
add
add
jp
ret
insb
or
andb
push
shlb
pop
ret
sbb
push
fstl
sub
in
or
cmp
cmp
in
push
adc
cltd
cmp
outsl
mov
jmp
fisubl
lds
arpl
sbb
adc
push
cld
sbb
inc
or
add
ret
dec
or
int3
push
mov
and
cmc
repz
rolb
cmp
test
xchg
mov
or
xchg
leave
adc
sbb
fstpt
mov
or
mov
dec
cmp
xchg
dec
movsb
mov
or
movl
or
stos
rclb
aam
test
xchg
fisubs
aam
enter
icebp
xchg
ds
das
jle
addr16
jmp
mov
xor
out
mov
xor
stos
subl
ds
stos
fdivrp
cltd
aad
xor
adcb
ljmp
daa
adc
ret
movsb
fstl
sbb
xchg
clc
scas
sbb
sub
or
ret
jns
shrb
clc
icebp
sahf
mov
xorb
or
mov
pushl
and
jecxz
adc
push
subb
sbb
shll
test
push
sbb
mov
mov
dec
rcrl
out
sub
sahf
mov
mov
jae
fdiv
inc
cmp
push
adc
mov
mov
rcrl
fwait
movsb
jle
push
add
sbbb
std
add
jmp
adc
faddp
mov
jle
stc
es
outsb
movsb
fwait
xor
inc
xchg
ss
imul
fistpll
dec
in
add
adc
jno
push
adc
out
push
xor
fs
xor
pop
pop
dec
dec
pop
popa
rcrl
and
aaa
adc
pusha
insl
fildl
testl
push
inc
push
xorps
adc
aas
sbb
scas
mov
lods
push
out
rolb
inc
push
cmp
jnp
popf
jno
lods
adc
jle
jp
add
in
mov
or
add
ja
jecxz
add
mov
xor
adc
xlat
mov
cmp
pop
adc
mov
addr16
dec
stos
xlat
clc
stos
xchg
dec
shlb
jmp
mov
stc
or
add
adc
in
sub
repz
mov
mov
out
nop
outsl
adc
fstl
jb
jle
frstor
mov
xchg
int
icebp
inc
or
mov
sbb
das
sarb
mov
mov
mov
stos
jbe
stc
mov
inc
mov
sti
sar
iret
adc
jne
push
mov
decb
outsl
out
pop
mov
out
xchg
movsb
mov
testl
sbb
jl
sbb
inc
cmpl
test
jle
cwtl
dec
inc
mov
cli
xorb
or
dec
fidivrs
sti
pop
nop
sbb
adcb
lea
loope
iret
subps
and
pushf
xchg
aad
jo
push
mov
pop
test
in
dec
data16
shll
mov
aam
adc
sbb
mov
in
xchg
test
fwait
pusha
mov
ja
push
lds
mov
inc
stc
cwtl
cmp
mov
imul
dec
and
aad
pop
inc
imul
sbb
int
in
jmp
add
or
push
gs
out
lret
xchg
lea
movsb
sbb
lods
pop
outsb
inc
aas
sub
inc
loop
call
mov
add
adc
fidivl
mov
shl
aaa
sbb
sub
fstpt
int
idivl
or
arpl
add
inc
les
adc
out
mov
enter
into
xor
lret
in
nop
mov
rclb
sbb
sub
bnd
es
aas
adc
fcoms
mov
push
adc
xor
dec
xor
pop
data16
xchg
mov
lcall
pop
jo
sahf
add
loopne
xor
daa
inc
stos
xor
ds
pop
in
push
xorl
adc
mov
jecxz
mov
inc
movsl
aaa
mov
fmuls
and
int3
les
and
stc
adc
call
aas
inc
add
pushf
ds
cmp
mov
add
rorb
xchg
ds
mov
adc
adc
mov
jecxz
scas
add
mov
push
xlat
je
shlb
js
sbb
jge
sub
sbb
jmp
inc
push
and
insb
ss
fdivs
rcrb
sti
enter
or
push
mov
fs
lcall
pop
sub
decb
dec
jne
xlat
xchg
outsl
call
enter
lret
cs
in
enter
fisttps
shll
jmp
rorl
mov
leave
je
js
dec
stos
mov
mov
cmp
jbe
mov
loop
lret
leave
dec
repnz
lcall
je
or
test
fsts
bound
sarb
push
jmp
imul
mov
mov
aaa
ret
stos
jl
jmp
sub
movsb
std
insl
repz
test
jmp
mov
and
mov
xlat
imulb
add
and
cmp
lret
in
jmp
call
repz
jg
inc
mov
call
add
cmp
push
test
mov
das
clc
mov
out
adc
add
push
pushf
sbb
insb
ret
sbb
jae
sarl
dec
add
mov
notl
jno
in
stc
loope
aas
sub
int
xlat
adc
inc
lret
adc
jno
fdiv
movsb
jne
out
xchg
ljmp
push
in
das
iret
ret
xor
sbb
cmp
roll
mov
pop
sbb
jmp
andl
jge
xor
les
inc
stc
dec
test
mov
mov
jb
bound
or
mov
inc
cs
sub
test
or
loop
inc
ret
rolb
or
addr16
push
mov
inc
jecxz
jge
pop
mov
fdiv
in
pop
shrl
data16
jp
mov
sbb
int
or
jno
pop
or
cmpsl
nop
test
xchg
jno
pusha
dec
repz
movsl
xchg
mov
mov
stc
xchg
xchg
fldt
lret
push
test
adc
add
sahf
cltd
pop
lret
jno
lahf
pop
mov
or
aam
xchg
ja
mov
ret
jbe
fildl
fists
jb
inc
stc
pop
dec
sbb
rol
cmp
push
cli
cmp
insl
sub
pop
mov
jb
test
add
ds
clc
mov
jb
sbb
lret
sti
xchg
xor
mov
sbbb
aam
xlat
mov
xchg
sbb
xchg
xchg
xlat
fs
inc
loop
out
add
shl
pop
lock
shl
mov
and
fistl
jo
push
out
test
in
pop
pop
or
push
les
int
push
dec
push
jecxz
push
sub
dec
ljmp
cltd
lods
dec
shlb
mov
inc
negl
mov
xchg
push
inc
mov
add
or
lahf
repnz
sbb
xor
inc
push
test
ror
mov
mov
rcrb
lods
out
clc
pop
cltd
cmpsl
mov
dec
dec
xlat
les
push
repz
mov
adc
divb
fdivrl
loopne
les
mov
pop
stc
and
jp
test
push
cwtl
mov
aad
and
test
or
out
test
movsb
lods
cmpsb
pushl
cmp
lock
xchg
mov
in
cmpsb
dec
shlb
iret
jae
push
mov
ja
pop
loope
pop
pop
dec
fs
xchg
jmp
enter
fidivrs
es
mov
test
xorl
push
and
aas
xchg
int3
xchg
add
xor
subb
pop
es
pop
pop
mov
or
add
jbe
sahf
mov
push
mov
cmp
pop
idivb
loop
add
and
mov
inc
in
in
daa
cmc
addb
data16
movsl
inc
addr16
sbb
out
cmpsl
mov
cmp
and
es
lods
cld
cmp
pushf
xchg
ds
mov
mov
sti
test
or
mov
sub
push
popf
inc
notb
lods
sub
out
sbb
sbb
pop
es
and
sbb
push
int
mov
ja
sub
les
adc
xlat
jmp
ljmpw
or
pusha
mov
sbb
sbb
push
mov
pop
sub
aaa
addr16
push
test
sbb
in
sub
mulb
arpl
repz
test
push
jae
sub
cmc
mov
shrb
pop
xor
or
fwait
push
lahf
jp
jns
mov
pop
in
lods
sub
jb
sbb
ds
leave
cli
xchg
jno
sub
les
jo
scas
push
jmp
push
cmc
mov
repz
int3
sub
nop
sarl
xchg
dec
pop
mov
cwtl
push
int3
shrb
ds
xchg
fistpll
cmp
fdivrl
dec
inc
inc
fstps
xchg
test
jmp
jmp
test
mov
fdivp
mov
push
imull
outsl
movsl
iret
xchg
scas
gs
jae
sub
fmuls
fistl
push
bound
push
scas
pop
outsl
les
mov
adc
ljmp
push
jmp
lahf
and
cltd
jae
add
mov
and
mov
bound
push
hlt
mov
pop
or
pop
outsb
add
mov
pop
mov
sub
rolb
push
inc
or
je
pop
dec
lds
xchg
push
mov
neg
cmp
lret
jmp
inc
dec
push
int3
lcall
mov
push
cmp
xchg
dec
pop
cli
sbb
push
ficompl
mov
dec
sbbb
bnd
mov
jne
mov
add
sbb
pop
les
cmp
mov
repz
pop
push
ret
ret
dec
cmp
movsb
and
hlt
shll
pop
pop
pop
push
or
sub
test
xchg
xor
pop
jo
cmpl
mov
bound
stos
rclb
and
and
push
pop
stos
cmpsl
jge
daa
adc
push
sub
sbb
arpl
inc
jge
or
in
add
sbb
std
in
cmp
add
mov
dec
stos
das
insl
or
dec
inc
cltd
gs
push
inc
sahf
mov
cmp
sbb
pop
mov
aam
test
jge
pushl
nop
mov
or
mov
clc
xchg
mov
pop
ljmp
cmp
loope
fcmovu
cld
jae
inc
int3
testb
es
shrb
push
mov
mov
adc
adc
test
repz
jp
test
sarb
mov
jbe
arpl
mov
out
andl
fldcw
jl
arpl
inc
jno
pop
push
call
outsb
lea
xlat
adc
in
aaa
and
sbb
data16
xchg
and
inc
inc
xchg
jge
lods
xor
sahf
lods
adc
push
adc
jo
mov
cltd
aad
jnp
jecxz
cli
mov
dec
dec
xor
stos
loopne
mov
dec
mov
lods
inc
pop
negb
mov
push
scas
dec
or
movsb
popa
pop
lods
mov
iret
out
mov
cmpsl
jno
les
ja
lret
ss
aas
cmp
xchg
push
roll
or
clc
and
mov
mov
bound
add
dec
daa
adc
xchg
pop
cltd
and
push
outsl
in
inc
aaa
push
in
and
lcall
jbe
icebp
jecxz
shl
in
notl
test
into
daa
shlb
jb
sbb
mov
ret
inc
cmp
mov
insl
repnz
test
xchg
cmpsl
repnz
loopne
mov
mov
fdivrs
xor
lcall
lret
mov
jns
sbb
arpl
test
add
xchg
and
lods
leave
mov
or
cli
into
loope
xchg
out
cmp
cli
xor
sbb
inc
loopne
cwtl
mov
je
gs
pop
insb
orb
adc
pusha
cld
in
xchg
xlat
in
jp
fildll
imul
push
mov
test
and
leave
hlt
sub
push
cmpsl
mov
jns
loop
push
loope
mov
ja
cwtl
push
jmp
dec
mov
mov
movb
or
lcall
push
ljmp
std
xor
dec
test
insl
cmp
fisubrs
sub
jae
rcl
pop
sub
sbb
pop
test
mov
fsubl
jle
in
ret
mov
or
mov
test
pop
lret
mov
add
dec
adc
adc
unpckhps
popa
or
push
jmp
sbb
adc
or
jbe
xchg
js
mov
push
and
ss
jmp
lds
in
add
iret
push
int
fadds
ret
or
es
mov
cmc
jle
add
into
xchg
xlat
mov
jg
jns
mov
pop
jecxz
sti
ss
lret
sahf
jmp
mov
hlt
jae
jnp
jno
call
sti
lds
sbb
fimuls
sub
add
enter
cld
aaa
cmp
lods
hlt
xor
cltd
xor
int3
iret
ja
fwait
pushf
lock
sbb
jl
mov
jns
push
out
xchg
and
sub
enter
stc
inc
and
pop
mov
cmpsl
mov
fimuls
mov
adc
lret
add
andb
lcall
xchg
mov
insl
xchg
and
pop
mov
dec
and
insl
into
adc
xchg
fsubrp
add
add
xchg
xchg
xor
jecxz
ljmp
sahf
ds
push
testl
adc
inc
add
add
mov
mov
rclb
sti
enter
ljmp
xor
in
adc
mov
jmp
fucom
xor
aam
ljmp
test
jg
lea
mov
loopne
dec
push
cltd
arpl
ret
filds
jne
mov
jnp
ljmp
fildl
loope
cmpsb
movsb
in
xchg
dec
mov
and
cmp
mov
das
flds
rcrl
dec
rcrl
pop
adc
faddl
mov
xchg
sbb
pop
ljmp
mov
sbb
or
cld
xchg
adc
fcmovbe
cmp
es
fchs
dec
test
mov
xchg
fcomps
sub
push
push
dec
pop
out
cwtl
inc
jle
cmp
add
inc
divps
sub
jbe
push
mov
mov
add
sub
push
cmp
xor
sub
int
dec
sub
sbb
and
std
push
mov
xchg
inc
push
fyl2xp1
xchg
fs
adc
stos
push
sub
insl
sbb
pop
xchg
xchg
smsw
mov
fisubrs
imul
lea
cmc
data16
in
ret
addb
scas
imul
adcl
sbb
fisttpll
inc
and
je
xchg
inc
dec
pushf
sbb
stos
orb
ficoml
add
mov
outsb
roll
dec
jo
cmp
hlt
pop
in
outsl
or
test
sbbb
jb
fwait
outsb
popf
fs
xor
xchg
pushf
int
pop
add
pop
dec
pop
inc
sub
push
or
xor
mov
and
popa
repnz
mov
fisubs
nop
dec
stos
clc
bndldx
push
scas
imul
inc
push
cmc
or
xor
into
xchg
cmp
adc
outsl
in
add
sub
xor
cwtl
fimull
decb
int
rorl
push
ss
movsb
leave
push
dec
ljmp
cmc
sbb
nop
nop
add
rorb
push
sub
mov
faddp
or
inc
scas
xchg
xchg
std
xchg
push
sub
push
sub
mov
pop
inc
push
inc
xor
or
pushf
mov
pop
out
xchg
scas
sbbl
pop
mov
inc
mov
arpl
scas
adc
push
xor
jbe
pop
imul
lahf
lcall
xchg
mov
jmp
push
xor
divl
add
cmp
popf
xor
cmp
mov
jp
sahf
movsl
xchg
inc
push
jb
jmp
jge
mov
repz
icebp
inc
dec
sarl
lcall
inc
aad
lods
sub
mov
sbb
test
xchg
arpl
inc
outsb
mov
fimull
out
or
fadds
aas
sub
dec
outsb
inc
cltd
xor
lds
jns
dec
mov
dec
sbbb
pop
jb
movb
mov
loopne
iret
insl
xchg
xor
in
fstl
inc
mov
mov
xor
push
and
arpl
int
loop
imul
jge
pop
adcb
hlt
xchg
and
lret
in
jnp
mov
xlat
adc
call
mov
rorb
addr16
or
aas
rcrb
fdivp
push
adc
loope
and
filds
jle
inc
in
xchg
popf
stos
sub
imul
cwtl
andl
rorl
fiadds
aad
add
addr16
mov
sbb
testb
lret
jbe
cmp
mov
and
add
mov
inc
outsl
bound
stc
cli
outsb
lock
sahf
and
dec
pop
out
lods
inc
jae
inc
outsl
pop
jle
push
mov
jo
or
lods
repz
hlt
cli
mov
dec
nop
fldenv
std
dec
mov
pusha
loopne
xchg
pop
sbb
or
sub
pop
lret
mov
adc
or
lock
xchg
test
dec
and
lret
xchg
test
movsb
daa
xchg
sub
repz
lea
test
add
cmp
and
jmp
ret
push
cmp
lret
or
divb
sahf
stc
psubd
incl
adc
mov
push
dec
cmpl
out
popf
mov
dec
sub
or
push
mov
ss
inc
pop
rcrb
push
fstpl
lahf
mov
push
faddp
push
cmp
sbb
test
pop
cmp
xchg
sahf
push
ficoms
dec
add
pop
mov
fcoms
sbb
mov
push
or
push
out
xor
or
das
dec
jge
adc
pop
sub
push
push
mov
mov
fldcw
aad
rorb
adc
push
mov
out
cmpsl
orl
mov
fisubrl
and
cs
imul
dec
test
insl
push
xchg
inc
fwait
ret
pop
jmp
dec
adc
stc
test
or
lcall
pop
pop
addr16
cmc
mov
push
bound
mov
xchg
xchg
icebp
inc
sbb
jmp
push
incl
add
push
inc
not
int3
int3
aas
mov
mov
lret
fistpll
lret
or
dec
sbb
scas
ljmp
mov
lods
pop
movsb
or
dec
andl
popa
fsubrs
jg
notb
daa
add
stos
sub
sub
pop
push
lods
cmpsb
rcrb
cld
and
jns
push
xor
ja
rclb
sbb
mov
out
imul
mov
es
rclb
cmp
cmc
jae
pop
push
xor
les
scas
inc
inc
cmp
nop
adc
and
xor
cmp
jo
sub
sbb
or
repnz
ja
jp
loopne
aas
nop
loope
cmpsl
sub
pop
inc
xchg
out
lahf
mov
cmpsb
jbe
lcall
mov
jae
inc
xor
xor
fcmove
bound
pop
sub
and
mov
xlat
mov
fistps
aam
ja
mov
mov
add
cli
jge
adc
outsb
or
inc
in
mov
into
ss
and
movsl
sbb
prefetcht0
in
push
lcall
fidivrl
pop
dec
push
mov
jbe
xchg
negb
cmp
push
dec
clc
push
rcr
ds
aaa
lret
stos
xchg
mov
xchg
flds
sub
mov
xchg
sub
lret
mov
aas
jbe
jge
lea
adc
lahf
loopne
fs
mov
int3
sbb
mov
push
rcr
das
pop
pop
jl
and
sub
xchg
iret
out
and
xor
loopne
call
in
rorb
mov
push
cmpsl
adc
adc
jge
push
add
or
mov
pushf
dec
insl
sub
sub
cltd
scas
aas
cmp
je,pt
push
jge
mov
out
mov
cli
cmc
sbb
jb
aaa
push
out
mov
mov
mov
mov
bound
sahf
push
fimuls
roll
stc
adc
out
lea
cli
aaa
fistps
adc
in
addb
cmp
mov
cld
dec
stc
mov
dec
xchg
sub
jbe
stos
lock
xchg
ja
add
or
aam
lcall
ret
mov
dec
ror
cmp
stos
sbb
loopne
in
mov
push
push
dec
push
cwtl
loop
pop
in
jge
pushf
adc
or
or
add
jbe
sbb
out
adc
inc
icebp
inc
jnp
and
in
mov
mov
cmp
dec
xchg
dec
jp
add
mov
clc
les
mov
lret
fs
fwait
mov
mov
cltd
mov
outsb
mov
cmp
testl
sub
lret
pop
sarl
xchg
inc
ss
xchg
imul
mov
movsb
push
mov
jl
incl
cltd
and
aaa
outsl
enter
leave
mov
fdiv
mov
hlt
jns
jae
inc
pop
cmpsb
movsb
test
inc
mov
mov
fcoms
in
jnp
aaa
sub
xchg
cld
jle
cld
sub
xchg
push
add
pop
int3
dec
jecxz
outsb
mov
pushl
jo
push
and
daa
xchg
xchg
pop
sub
jl
inc
push
cmpps
mov
adc
imul
scas
add
mov
sbb
pop
and
iret
cmp
dec
loope
and
sub
or
jnp
int3
pop
xchg
adc
movsb
sub
mov
dec
nop
jo
sbb
aam
adc
pop
mov
in
fiadds
xor
es
jns
sub
lds
cmpsl
mov
cmc
push
pmullw
lods
push
cmp
imul
stos
sbb
push
push
mov
scas
xchg
pop
cmp
pop
fs
jne
pop
mov
movd
into
and
aad
jno
rolb
call
add
xchg
jmp
pushf
ss
lds
enter
jb
hlt
andl
ds
sub
adc
loop
pop
lret
rcrb
xchg
es
shrb
push
cmp
int3
scas
jl
mov
inc
fnstenv
test
or
xchg
pushf
push
rorl
or
mov
sub
and
es
jne
adc
popa
xor
pop
mov
sti
sub
jmp
fdivs
jmp
mov
xchg
loopne
sbb
pop
or
cmp
jg
cmpsl
bnd
je
in
sti
sub
int
popa
test
fsubs
jae
js
dec
adc
bound
rolb
out
push
call
adc
rorb
dec
stos
and
inc
out
insb
sub
fadd
adc
aaa
clc
iret
call
adc
cmp
sbb
insl
xor
jno
in
jmp
push
mov
mov
mov
mov
fiaddl
push
in
xchg
inc
mov
mov
mov
mov
test
dec
rcll
sub
rorb
stos
xchg
rorb
jmp
push
xchg
test
xchg
cmp
dec
cmc
in
lea
adc
cmp
xor
mov
lods
test
lods
outsb
add
inc
mov
sub
aam
rcrb
jb
cmp
iret
dec
inc
pusha
sbb
inc
ss
add
lret
xlat
popa
add
push
sub
leave
mov
aaa
and
and
test
mov
and
daa
ret
jno
adc
xchg
sub
lcall
in
jne
popf
call
push
lea
push
ja
pop
leave
xchg
mov
test
push
lahf
jecxz
mov
fisttpll
jecxz
inc
pop
jbe
test
cmp
push
and
in
cmp
out
into
xchg
xor
mov
jmp
adc
or
divb
stos
and
sbb
shlb
jecxz
push
xchg
call
movsl
cmc
stos
xor
xlat
repz
xchg
push
xchg
fs
xor
cmpsb
fsts
mov
inc
lods
pop
push
cmp
data16
ja
cld
mov
aaa
add
mov
fldenv
out
jge
push
cmp
fdiv
xor
jecxz
stos
pop
jl
cmp
lock
ljmp
fs
push
rol
nop
push
dec
dec
pop
push
mov
mov
push
mov
inc
aaa
out
ds
mov
sub
cld
xchg
sbb
cld
outsb
xor
cmc
mov
pop
and
inc
pop
push
mov
add
lds
mov
inc
cmp
sub
lea
fsubr
dec
cmpsb
es
lahf
arpl
cmp
sub
dec
mov
mov
mov
mov
pop
dec
inc
fldl
decl
addl
sahf
repz
mov
sub
push
test
ss
mov
jle
outsl
fs
bound
sahf
jb
popa
adc
stc
or
in
icebp
mov
iret
test
in
out
loope
and
and
or
dec
repnz
push
mov
stos
call
mov
pop
in
lods
mov
loope
mov
sub
arpl
push
mov
fisubl
xor
adc
inc
sbb
inc
push
addr16
out
adc
out
sub
lahf
sahf
daa
xor
xor
je
sub
mov
das
pop
push
xchg
popf
fwait
lcall
pop
jns
cmp
lcall
mov
mov
cld
xchg
rorl
js
sti
xchg
lds
push
int
in
in
or
mov
movsb
cmp
inc
push
cltd
add
dec
inc
cwtl
pop
sahf
iret
ss
mov
out
pop
test
mov
xchg
dec
mov
sub
jle
gs
or
mov
mov
loope
stos
fdivs
adc
push
repz
xchg
repz
mov
popa
inc
popf
push
inc
mov
or
mov
pop
sbb
mov
mov
mov
out
andl
sbb
mov
dec
push
std
punpcklwd
bound
cmpl
cmp
nop
pop
jb
and
scas
and
and
loopne
rcrb
mov
cmp
mov
outsl
jnp
jle
imul
cmp
xchg
cmp
pushl
cmp
hlt
cld
adc
pop
dec
xchg
mov
les
out
std
pop
or
jbe
das
dec
insl
xor
mov
hlt
movb
out
mov
js
inc
jp
jno
jge
fisttps
jae
fcoms
insl
pop
jecxz
fidivrl
lret
bound
inc
jnp
sbb
test
dec
into
lods
scas
jno
pushl
xchg
insb
cmp
div
out
es
movsb
dec
cwtl
repz
icebp
repnz
and
subb
test
orps
or
dec
mov
shrb
xor
bound
xor
ret
or
insb
ljmp
push
clc
sub
and
cmp
rcl
in
popf
push
push
lods
stos
lock
fwait
lahf
push
pusha
mov
ljmp
lods
fdiv
outsl
push
jl
xchg
jmp
lods
popl
sub
xchg
lcall
push
sbb
lock
pop
xchg
xlat
rcll
gs
add
jb
mov
or
lret
dec
cmp
dec
js
pop
fisttpl
jl
xchg
rorl
fs
pop
sbb
lret
pop
mov
sbbb
jae
mov
insb
shll
mov
std
pop
xor
fwait
or
negb
xchg
popa
ret
and
lahf
jae
test
scas
fmul
and
iret
cmp
stos
mov
popa
lret
std
sbb
jge
fstl
lods
lods
dec
faddl
push
and
aas
sarb
pop
jg
push
ja
inc
hlt
xchg
imul
lahf
popa
mov
jo
xor
sahf
add
cs
xor
stos
sbb
jmp
adcb
pusha
scas
cmpsb
sub
stos
lea
fidivs
xchg
push
in
xchg
mov
sarl
jge
fildll
mov
inc
xor
pop
in
insb
outsb
cltd
jo
jge
push
jo
jmp
mov
xchg
sub
pusha
mov
add
pop
je
push
aam
std
sub
inc
mov
cld
icebp
pop
imul
mov
lret
fldcw
arpl
sub
popa
stc
pop
dec
add
cmp
icebp
sbb
push
push
fstpt
jo
mov
incb
jo
outsl
scas
in
bound
pop
sahf
xchg
mov
mov
cmp
lds
sub
inc
pop
cmpsb
test
inc
addb
dec
xor
aaa
jp
add
cmpsl
cmpsl
dec
jp
xor
cmp
xchg
in
add
push
push
lods
dec
dec
xlat
mov
std
lods
fs
push
das
das
scas
adc
je
data16
adc
mov
adc
sti
mov
or
jle
mov
out
ret
jae
jp
dec
bound
sbb
sbb
cmpsb
lcall
cmp
push
add
fcom
adc
mov
out
dec
push
xor
push
cwtl
inc
call
stos
sbb
fdivrs
dec
lret
repz
xchg
sub
cmpsb
jg
std
jnp
outsb
repz
xchg
mov
or
dec
mov
push
mov
cmp
and
clc
jnp
or
sub
outsb
jne
lret
cltd
pusha
cmp
rcr
jge
ds
and
icebp
rolb
mov
stos
in
sbbb
out
dec
out
xchg
cmpsb
cmpsl
pop
pushf
shll
shll
in
test
lret
clc
pop
push
outsb
pushf
pushf
adc
or
push
gs
repnz
push
arpl
mov
push
dec
adc
mov
pop
xchg
mov
and
mov
pusha
pusha
sbb
fldenv
icebp
aam
xchg
out
in
std
cli
and
jg
cld
bound
repnz
sbb
shll
outsb
movl
add
fstpt
xchg
fs
cmpsb
test
cs
loopne
or
dec
je
add
add
stos
pushf
mov
imull
insl
sub
lock
dec
orb
ror
xchg
fdivr
sub
std
pop
fsts
inc
ficomps
mov
sub
sti
movsl
push
push
popl
inc
inc
test
mov
add
lock
xchg
fcoms
xor
pop
pusha
icebp
xchg
fimuls
daa
mov
and
inc
adc
or
jae
xchg
dec
mov
push
ljmp
lock
pop
pop
negl
ret
loopne
movl
out
mov
rcl
push
mov
mov
enter
repz
pop
pop
dec
push
mov
jnp
push
movsl
popa
xchg
or
xchg
or
and
out
pop
les
push
movsl
loopne
testb
cmp
sub
cmpsb
loop
xchg
ret
xchg
push
xchg
mov
sti
cltd
test
pushf
lahf
push
xchg
mov
pop
pop
add
repz
lret
xchg
pop
adc
mov
js
fidivrs
loop
lds
add
mov
sub
bound
fcompl
cs
xor
fwait
mov
ret
jg
dec
test
xchg
jne
stos
lock
icebp
popa
jns
cli
aad
xor
dec
cmp
jecxz
fwait
mov
dec
xorb
xchg
imul
xchg
cld
pop
fstps
daa
jmp
and
bound
pop
pop
into
mov
sbb
cmpsl
addr16
imul
adc
out
fldcw
les
inc
pop
sbb
sahf
arpl
adc
push
fcomps
hlt
mov
loope
faddl
jge
mov
pop
dec
icebp
outsl
adc
cmpl
leave
mov
push
dec
loop
cmp
jae
mov
loopne
lock
pusha
gs
test
sbb
mov
sub
aam
push
mov
inc
pop
cmpsb
shlb
shl
xor
xchg
adcl
sbb
sbb
aad
mov
movsbl
mov
cli
sahf
in
mov
test
push
in
adc
xchg
jecxz
adc
in
mov
dec
lret
cld
movsl
fldt
scas
testl
aas
notb
popf
loop
sub
scas
imul
aam
icebp
stos
fidivl
mov
mov
mov
jbe
lods
cld
xor
mov
call
cmp
jl
aam
push
xchg
mov
push
lods
repnz
cmp
push
pushl
jns
pop
or
mov
outsb
dec
fimuls
dec
in
and
movsb
jo
cmp
pop
push
lcall
xor
popf
ret
aad
sahf
jno
xchg
out
xchg
sbb
and
fwait
insl
ja
fwait
cwtl
mov
push
das
add
sbb
mov
negb
jge
in
push
jae
icebp
jp
sahf
mov
or
push
inc
adc
jg
or
cmc
add
daa
lahf
pop
cmp
mov
les
xchg
repz
mov
xrelease
xchg
jb
test
adc
insl
push
fwait
mov
out
push
pop
xor
js
pushf
and
xchg
cli
push
sub
mov
cmp
and
movsb
ficoml
jg
add
mov
jle
cli
mov
and
sub
adc
sbb
xchg
adc
mov
shlb
adc
imul
and
push
sub
arpl
int
test
ljmp
pusha
shl
sbb
sbb
pop
in
data16
push
jg
rorb
mov
nop
jne
pusha
inc
in
push
mov
or
adc
andl
repnz
inc
aad
mull
adc
pop
or
cli
sub
adc
and
adc
insl
lods
bound
inc
xlat
mov
mov
pop
stc
cmp
xchg
lods
mov
xchg
rorl
cmpsl
mov
das
sbb
add
stos
shll
fcomp
notb
jnp
movsb
lds
dec
fistpll
xchg
mov
cmp
xor
cmp
xchg
jne
and
push
bound
jne
mov
mov
movsl
data16
or
jne
adc
incb
testl
in
in
shlb
dec
and
shll
repz
xchg
mov
push
mov
lods
out
cltd
adc
aad
andb
dec
add
add
cmc
rorb
mov
cwtl
jmp
movsb
roll
lret
insl
mov
lahf
in
push
pop
push
out
inc
rclb
js
leave
pop
pop
push
push
out
gs
push
cmp
xor
push
es
jnp
xor
mov
xchg
test
cwtl
dec
xor
pusha
inc
cli
and
inc
dec
dec
and
fnstsw
lods
push
xor
int
xor
enter
jecxz
loop
push
dec
mov
hlt
in
mov
repz
lea
jae
int3
movsb
xchg
mov
jl
adc
arpl
cmp
addr16
mov
mov
push
call
out
or
xchg
push
mov
push
xchg
xchg
ljmp
inc
dec
daa
icebp
in
or
lret
cmc
xchg
fisubrs
xchg
add
add
fwait
cltd
pop
mov
push
lea
movsb
shl
in
in
push
pop
mov
lods
sub
jg
dec
fsubp
and
mov
push
fcoms
imulb
and
lods
push
lret
pop
jns
popf
xor
int
pop
mov
adc
xor
sub
xchg
adc
cltd
sub
pop
jg
sub
aaa
sub
xchg
shl
cltd
cltd
inc
in
jb
mov
add
inc
jmp
mov
je
sti
xchg
aas
jle
cli
pop
push
and
shlb
mov
nop
jno
ficoml
push
cmp
js
jae
mov
or
rcll
dec
add
vpmullw
roll
mov
filds
leave
lods
mov
or
xchg
dec
aas
inc
push
mov
subl
mov
sahf
push
dec
adc
rolb
xor
repnz
lahf
bndstx
rcrl
push
and
mov
adc
sbb
out
dec
cmpsl
push
test
out
adc
sbb
push
shl
mov
or
test
pop
mov
shlb
adcb
add
xor
data16
data16
mov
hlt
insb
mov
stos
stos
lods
stos
fcoms
xchg
mov
mov
inc
sbb
out
out
outsl
bound
lods
out
add
les
push
sub
jge
cmp
mov
push
lock
mov
popf
adc
popf
call
and
cmpsb
in
add
stc
mov
jle
xor
mov
outsb
repz
dec
mov
xor
mov
mov
or
or
pop
mov
ja
cli
xor
out
call
fwait
jmp
adc
in
or
adc
lcall
xchg
sbb
in
jb
fistl
dec
cli
xor
lock
pop
rcll
ja
pusha
nop
mulb
fstpt
data16
pop
sahf
sahf
add
ljmp
daa
idiv
or
incb
mov
xchg
pop
jecxz
aaa
xchg
lret
outsb
jmp
and
or
push
adc
mov
cmp
push
mov
cmp
mov
inc
cmp
clc
push
shlb
mov
sub
mov
scas
cli
adc
insb
daa
movsl
fmuls
int3
fisttpll
imulb
sub
push
imul
scas
inc
insb
mov
dec
orl
jp
xchg
lret
sahf
cmp
pop
add
sbb
addb
mov
inc
adc
ficoml
mov
rcrl
clc
mov
mov
cmp
ds
or
sbb
jl
mov
push
rcr
xchg
sahf
sbb
mov
test
cs
dec
lds
sub
sbb
dec
pushf
ret
sbbl
mov
mov
add
enter
xor
imul
into
and
hlt
inc
hlt
xlat
pop
jmp
add
movsb
push
fdivp
insb
test
mov
pop
jno
out
into
xchg
sahf
fwait
lret
iret
jl
arpl
pop
adc
or
jo
cmovle
mov
cmpsl
sub
pop
movsl
lea
in
cwtl
jp
push
movsl
dec
in
cli
stos
ja
dec
shl
lcall
int3
aam
stos
dec
sub
add
fldl
cmpsb
adc
xor
orl
insl
vshufpd
pop
pop
mov
jne
pushf
push
xlat
mov
out
cwtl
push
lcall
adc
loopne
jns
rcrb
xchg
subl
sbb
stos
sahf
cmc
mov
repnz
ret
mov
push
lret
shlb
or
sahf
lret
cwtl
mov
xchg
call
xor
cld
push
jno
mov
aas
nop
mov
pop
or
mov
movsb
loopne
out
jl
imul
xchg
sbb
sub
push
mov
jle
ss
jae
std
pop
xchg
push
xchg
adc
or
in
test
test
and
pop
mov
adc
subb
cmp
dec
inc
sbb
push
out
or
mov
xchg
arpl
mov
mov
aad
out
ds
cwtl
jnp
and
cmp
popf
cmp
mov
push
scas
jle
xchg
jle
xchg
dec
and
xor
or
pop
stos
jno
pop
test
sbb
sbb
mov
push
fadd
adc
sub
pop
and
sbb
sub
push
or
or
sub
fidivs
mov
push
or
lret
sub
add
repz
jnp
pop
test
movsl
stc
je
adc
jmp
mov
test
sbb
jg
add
xor
ds
cwtl
aad
xchg
jb
cmp
add
jle
scas
add
adc
pop
ljmp
cld
nop
clc
and
mov
xor
add
cmpsl
mov
pop
aam
xchg
mov
sahf
pop
in
pop
jne
test
fistpl
in
into
cmpsl
sub
std
or
sub
rcr
jge
mov
fnsave
xor
lahf
xlat
sahf
xorl
jno
iret
and
push
sbb
fs
or
add
jne
push
icebp
testl
mov
in
insb
cmp
fwait
push
in
add
outsl
mov
cmpb
xchg
cltd
push
mov
pop
push
bound
mov
movsl
lds
stc
data16
xor
dec
std
into
mov
adc
je
popf
dec
xor
jecxz
jge
pop
out
sub
mov
cmp
jnp
cmc
and
mov
shrb
call
dec
std
mov
imul
jae
jmp
cs
mov
adc
add
ret
push
push
add
andl
xchg
cmc
adc
push
int
add
hlt
lock
pop
shlb
popa
push
xorl
or
jge
jae
hlt
mov
mov
xchg
and
enter
mov
leave
push
jecxz
adc
xor
daa
dec
inc
inc
push
insl
out
xor
test
pusha
cmpsb
pop
flds
cmp
faddl
and
xor
mov
or
inc
pop
dec
je
jnp
dec
test
sbb
mov
xor
fiadds
shll
sbb
gs
testb
mov
scas
lcall
in
lods
mov
sti
mov
inc
or
test
or
loop
add
sti
jns
cs
jae
enter
mov
out
push
cmpsl
xchg
xchg
dec
rcll
mov
sbb
xchg
xchg
out
jne
ja
jnp
es
sub
adc
pop
xchg
scas
push
cli
stc
outsb
jg
out
jecxz
sbb
fdivrl
imulb
adc
cli
push
mov
or
and
and
or
mov
jns
icebp
cmpsb
repz
mov
fldcw
cmp
inc
pop
jnp
push
add
aaa
lahf
xchg
mov
aad
jmp
cmpsb
out
xchg
sbb
stc
and
and
std
loop
mov
rcl
pop
test
xchg
xchg
rcl
cs
imul
mov
dec
gs
sbb
jmp
xor
insb
inc
xchg
cmp
push
cmp
lret
in
mov
mov
xchg
enter
imul
mov
repnz
xor
adc
mov
das
hlt
les
fdiv
adc
mov
jmp
imul
mov
add
push
ja
repnz
icebp
imul
sub
insl
mov
add
stos
inc
mov
add
push
pop
push
cmp
ljmp
jge
jbe
les
test
adc
lock
mov
jmp
cmpsl
adc
int
cltd
xchg
icebp
or
dec
xchg
pop
rcll
adc
cs
push
and
mov
pop
and
mov
ficompl
push
sub
mov
imul
dec
sub
and
push
aas
push
pop
push
iret
sbb
and
out
fwait
dec
ficoms
cvtdq2ps
push
adc
iret
ret
mov
or
daa
mov
push
jle
ror
cmp
aas
hlt
dec
sbb
xchg
add
outsl
and
push
sbb
test
outsb
stos
jmp
fsubr
dec
cwtl
or
jbe
movsl
movsl
add
imul
data16
clc
repz
jmp
lret
sub
jmp
lds
outsl
sbb
inc
je
pop
cmp
int3
push
addr16
addl
jge
rorb
loop
int
pop
std
in
inc
lret
add
push
les
bound
pusha
push
rcll
lcall
cmp
inc
sbb
xchg
inc
push
pop
enter
cmpsl
push
rolb
movsb
daa
cmp
out
into
xchg
pop
stos
lods
and
clc
and
push
js
sbbb
xchg
add
out
sub
fsubl
icebp
jle
pusha
sub
push
push
jae
xchg
hlt
push
adc
or
add
xchg
jb
arpl
rcr
cltd
sbb
int3
push
adc
xchg
pop
ret
push
adc
arpl
lods
shll
scas
aad
jg
rol
int3
enter
jg
call
jle
sub
xor
adc
adc
and
pop
in
pop
repz
test
shrb
push
arpl
push
inc
push
stos
mov
out
icebp
cmp
push
add
out
shll
inc
scas
sbb
mov
lods
mov
lea
cmp
mov
jo
popf
adc
jle
fdivrl
sbbl
dec
xor
xchg
fmul
addb
sbb
int3
arpl
xchg
call
in
das
pop
imul
jne
adc
je
mov
adc
xchg
sub
dec
out
adc
shlb
sub
xchg
add
nop
xor
shrw
cmpl
xchg
ret
jne
fists
adc
inc
hlt
ss
push
push
cmp
aas
xlat
ficomps
and
xchg
ret
lcall
sbb
shl
jle
jno
push
cli
cmp
push
or
xchg
adc
and
push
push
ljmp
loopne
ljmp
aas
outsb
xor
mov
and
popl
xchg
and
fxch
repnz
leave
std
iret
leave
mov
rcrb
xchg
dec
int
dec
or
aam
faddl
mov
mov
sahf
push
cwtl
icebp
repnz
in
fisttpll
addr16
arpl
repz
sub
dec
xor
out
lret
cmp
out
in
aam
flds
inc
cmc
dec
in
mov
sbb
in
addr16
aad
negl
lods
sbb
lahf
cmpsb
jo
xchg
pop
int
sub
xor
aam
xor
xlat
cmp
push
testb
dec
pop
mov
sub
sbb
jp
jg
dec
js
mov
sub
rol
cmp
or
ljmp
pop
pop
add
add
xor
test
sbb
pop
lret
push
cmp
arpl
fisubs
inc
ficompl
outsl
jo
loope
popf
cmp
cmc
pop
sbb
sbb
inc
int3
out
ror
jo
mov
inc
mov
std
std
dec
sbb
lret
xor
inc
test
outsl
mov
scas
addr16
jge
ss
jle
sbb
push
push
mov
sub
xorl
add
jmp
pop
and
mov
lods
cmc
mov
ja
xor
mov
mov
pushf
shrb
jp
popa
jno
test
pop
rcrb
sbb
loop
xchg
ds
std
dec
jge
fstpt
push
movsb
mov
mov
stc
lods
push
fs
mov
fcomps
mov
iret
push
aas
lret
fst
lret
cmp
aaa
xor
je,pn
add
ret
in
mov
nop
jbe
mov
inc
mov
and
jo
xor
mov
adc
idivb
cltd
aas
cmp
inc
inc
aam
fsubl
call
pop
jecxz
cwtl
xchg
inc
into
out
ljmp
jecxz
cmp
xchg
cmp
cmc
test
adc
xor
fisubrs
out
dec
lds
outsl
cmp
mov
in
add
adc
stc
xor
pop
xchg
andl
ret
mov
shll
jne
ret
fsubrs
outsb
cmp
mov
inc
cltd
loopne
out
sub
push
mov
and
push
and
cwtl
mov
bound
xor
rclb
add
nop
push
add
jno
cmp
ss
inc
shll
lret
push
cwtl
rcl
aas
cmp
xor
add
enter
inc
jo
mov
int3
sub
xor
sub
push
pop
cmp
adc
mov
xor
fstpt
cmp
mov
ljmp
mov
sbb
xor
es
mov
sub
sub
test
int
in
outsb
aam
loopne
push
mov
mov
repz
notl
xchg
divps
xor
mov
fistps
cmc
aaa
arpl
jo
insl
loop
sahf
aad
cwtl
adc
xor
mov
sub
daa
dec
inc
movsl
fdivl
arpl
mov
or
roll
push
arpl
or
mov
in
call
mov
repnz
mov
lcall
sub
hlt
call
sub
cmp
clc
int
mov
inc
insb
ljmp
fcomps
lahf
mov
sub
lret
mov
pop
popf
ljmp
jnp
and
adc
loopne
outsl
std
push
add
lea
js
dec
stos
and
out
jmp
mov
pop
lods
icebp
out
cmp
ja
adc
cmp
mov
and
push
xor
sbb
dec
and
jnp
xor
mov
jo
incb
mov
dec
adc
pmaddwd
push
dec
fs
adc
jae
clc
mov
ret
mov
cmp
add
movd
push
or
loopne
lods
inc
or
fwait
leave
pusha
in
movsb
movsb
dec
inc
cmp
aam
fcoml
fs
popa
pmulhuw
or
pusha
fldt
daa
jnp
insb
inc
gs
ds
jbe
dec
pop
fnstsw
inc
test
jns
push
lods
sbb
push
jmp
fbld
adc
pushf
lret
mov
cmp
pop
push
iret
mov
mov
cmp
jl
add
xor
shll
jecxz
neg
jle
jle
mov
and
fstp
cwtl
or
dec
mov
and
push
cmpsb
loope
adc
and
push
ljmp
clc
sbb
mov
stc
jno
lahf
mov
lahf
outsb
inc
bnd
dec
sub
or
repnz
jl
repnz
xlat
movsl
in
add
lahf
pop
mov
xor
pop
dec
bnd
movsb
xor
jp
or
outsb
pop
xchg
sbb
dec
or
call
and
push
mov
arpl
sahf
pop
jge
lods
clc
inc
js
push
pop
int3
rcrl
test
inc
clc
in
cmpsl
mov
out
cmp
push
leave
pop
movsb
cli
sbb
push
push
ja
cmp
pop
and
lods
aam
shlb
in
cmp
mov
jecxz
das
push
xchg
dec
lret
in
ja
mov
test
addr16
scas
jb
xchg
in
fldt
sbb
sti
faddl
insb
sbb
setns
shll
cmpl
cmp
xchg
fcmove
cmp
pop
mov
adc
lock
add
cmp
rorl
enter
adc
dec
je
and
loop
sbb
push
add
lret
xor
mov
mov
cmp
jb
call
xor
mov
ja
sarl
fadds
leave
icebp
add
and
push
clc
jp
test
daa
push
inc
loopne
scas
out
mov
mov
or
sub
rorl
cli
out
in
mov
cmp
xchg
outsl
mov
mov
aad
cli
lock
add
adc
fists
in
stc
push
fisttpl
inc
push
out
jmp
cs
push
xor
adc
in
push
lods
sahf
push
repnz
add
sti
push
das
mov
repz
mov
inc
out
ja
add
shlb
push
dec
mov
xor
lret
bound
xlat
mov
scas
cs
aas
adc
insl
pop
jmp
lret
and
sub
push
in
in
mov
mov
and
pushf
jl
shr
xlat
orb
mov
cmpsb
gs
adc
mov
into
stos
repz
cmp
jnp
cld
mov
int
jmp
mov
ret
add
int3
jno
int
sbb
daa
sub
clc
data16
jle
aas
cmc
rolb
mov
in
ja
mov
jbe
mov
aam
aad
sub
inc
cltd
aam
inc
imul
dec
dec
dec
andl
xchg
push
and
xor
dec
dec
insl
pop
les
hlt
sub
sub
jp
xchg
out
mov
test
neg
add
jg,pn
shrl
pop
test
mov
negl
pop
push
cmp
or
cmp
dec
adc
fimull
mov
in
cmc
int3
es
or
xor
pop
inc
cli
movsb
popf
push
jp
std
mov
xor
aaa
std
mov
mov
test
in
lret
xor
lods
test
add
loopne
in
bound
iret
mov
sub
lods
mov
out
xchg
add
mov
outsb
ljmp
add
inc
mov
push
leave
lret
mov
cmp
push
lds
mov
lods
jg
test
xchg
nop
into
mov
cmp
jnp
int
daa
xor
mov
cmp
cli
cmovg
daa
xchg
pop
sub
cmp
cs
aam
xchg
sbb
outsl
xor
das
aaa
cmp
outsb
aas
inc
bound
jnp
pop
mov
addr16
sbb
adcb
lret
xor
cmp
stos
mov
das
cli
sub
movb
jmp
dec
sub
xchg
cltd
lret
cs
shrl
aam
bound
je
jnp
les
dec
mov
xor
xchg
out
jae
call
loope
fadd
mov
xor
les
cld
cmpsb
jb
dec
dec
insl
mov
cmpsb
lret
add
movb
hlt
or
push
inc
or
xor
jne
adc
in
mov
adc
push
pop
sti
lcall
jo
push
es
push
je
lret
mov
jmp
fnsave
test
push
out
push
push
out
into
pushf
xor
push
out
pop
arpl
pushf
in
add
mov
adcb
incb
popf
arpl
cmp
rolb
lods
inc
push
loop
xchg
cmp
sti
mov
xchg
mov
pop
cmp
mov
lods
adc
aad
jp
xor
lods
rorl
xchg
popf
in
xchg
add
stos
jmp
fcmovnu
fiadds
xlat
sbb
lea
and
jg
pop
mov
pop
fnstsw
pusha
xchg
jle
outsb
xor
lds
cmp
mov
arpl
mov
in
cmp
xor
dec
push
inc
sub
add
push
xchg
call
data16
xchg
loop
cmp
sarb
mov
in
lcall
adc
xor
adcl
xchg
in
push
mov
push
fcoms
outsb
cs
cmc
outsb
inc
nop
cwtl
rorb
mov
cmp
mov
xchg
aad
insb
sbb
adc
out
sahf
js
popa
add
mov
jbe
mov
out
rcrb
pop
loop
cmpsb
sti
adc
cmp
jle
shl
jnp
ficompl
call
enter
add
xor
adc
sub
ficoms
int
nop
int
xor
pop
and
fwait
test
xor
dec
lret
mov
cs
leave
and
lahf
js
or
jnp
test
decb
popf
imul
mov
sub
or
dec
test
push
daa
mov
int
lcall
xchg
dec
bnd
or
out
pushf
pop
mov
movsb
push
stos
sub
cli
and
push
add
sbb
cmpsb
mov
cmp
add
add
jl
repz
aas
mov
sub
sahf
jae
pop
mov
lret
negl
pushf
xor
insb
sub
fnstsw
pop
lock
fmull
rcll
jmp
or
leave
cltd
clc
dec
mov
xchg
mov
cli
push
imul
mov
idivl
mov
lret
sahf
and
aad
aas
shlb
and
mov
cmc
mov
jae
xchg
push
mov
addl
xchg
jnp
leave
lret
lret
int3
ret
mov
dec
xor
shl
enter
rolb
jle
sub
inc
cmp
mov
and
mov
or
mov
sbb
push
int
mov
imul
mov
cli
pushf
mov
popf
sbb
fwait
xor
test
out
pop
sar
mov
jne
mov
add
lcall
sbb
cmp
push
push
jl
in
push
lods
dec
movsb
fistpl
sbb
fwait
and
out
xor
xor
lods
adc
lea
lret
in
mov
jge
scas
popf
std
test
dec
fmuls
mov
inc
push
cld
out
and
jmp
mov
cli
cmc
and
ret
out
jp
lcall
cmp
push
sub
fmuls
incl
in
shlb
flds
mov
mov
pop
fcoms
movsl
stc
fwait
mov
adc
mov
fidivrl
sti
cs
mov
dec
out
mov
inc
imul
in
jne
mov
mov
les
cmp
in
cwtl
arpl
add
lock
jae
div
aas
push
mov
je
test
mov
loope
push
jecxz
cli
push
in
dec
in
das
das
insb
mov
in
sbb
or
dec
xor
ja
fs
rolb
jge
int
hlt
fildll
insb
leave
jno
insl
push
xor
add
pusha
push
push
xchg
popa
cwtl
imul
cli
rclb
test
mov
into
lods
mov
inc
dec
lods
imul
mov
pop
repz
dec
clc
sub
shlb
adc
ss
dec
out
jg
dec
mov
popa
dec
je
mov
scas
mov
and
aaa
xchg
push
mov
pushf
fstpt
push
sub
jge
jns
cmp
push
ds
inc
loopne
mov
pop
mov
rorl
sbb
stc
cltd
xchg
mov
in
cmp
dec
cmp
pop
mov
fisubrl
push
sahf
cmc
or
ja
add
je
lods
adc
mov
push
js
mov
outsb
pop
mov
shrb
in
clc
ret
jne
add
orl
shrl
fimuls
pop
inc
outsb
addr16
jns
stc
push
sbb
lret
add
and
cmp
jb
sahf
xor
push
push
push
push
sar
das
mov
mov
mov
jo
jno
add
std
mov
scas
gs
sbb
inc
xchg
out
push
lcall
inc
add
pop
xor
lcall
fisttpll
lds
jg
lret
add
jge
cmp
lods
jl
and
fmull
lods
pusha
mov
jp
lret
pop
imul
cwtl
jb
push
pushf
sahf
inc
enter
aad
dec
xor
mov
push
jge
les
adc
dec
sub
push
mov
aas
out
outsl
aad
addr16
pop
cmp
lds
shl
jmp
leave
cmp
int
cltd
xlat
inc
enter
mov
in
or
cmpsb
mov
lods
xchg
jmp
pop
test
jge
into
mov
push
add
or
cmpsb
into
loopne
lods
in
adc
int3
jbe
xchg
cmp
or
pusha
out
movsl
dec
cmpsb
shlb
fsubp
mov
dec
inc
mov
lret
mov
sub
xchg
push
mov
or
test
mov
inc
xchg
test
dec
int
test
pop
movsb
nop
pop
dec
icebp
sbb
or
mov
outsl
sub
filds
xchg
rorl
sbb
inc
jae
xorb
jns,pn
ret
xorl
dec
test
hlt
loopne
jp
push
into
xchg
lret
inc
mov
arpl
andb
mov
push
xchg
int3
pop
mov
loop
cmp
dec
cmp
dec
sub
add
xchg
adc
clc
imul
mov
adc
gs
mov
vunpckhps
movsb
jnp
ja
inc
outsl
loop
fildll
fdivr
add
int3
rcrb
insl
test
call
jbe
push
out
adc
fwait
sbb
mov
int
dec
mov
mov
dec
fs
test
lahf
sub
fcoms
cld
sbb
rorl
mov
pusha
aam
int3
jg
mov
fnstcw
or
outsl
xchg
ja
pop
push
jg
xor
xchg
add
push
mov
in
int
bt
xor
fadd
sub
sbb
dec
and
sbb
in
sub
or
xlat
push
test
les
and
les
xchg
mov
out
popf
mov
mov
insl
sahf
ja
jg
ret
sti
inc
adc
sbb
push
mov
mov
dec
push
lret
ja
test
add
sbbl
jns
testb
push
add
data16
xchg
add
xchg
aad
shll
in
or
ret
jmp
insl
dec
push
lea
jmp
cwtl
lcall
xchg
std
push
push
push
mov
jb
sub
repz
dec
cmp
mov
pop
sbb
imul
and
adc
enter
mov
sarl
cmp
les
mov
mov
bound
les
in
sbb
xor
add
sub
cmc
adc
js
aad
sub
jge
mov
int
std
mov
jb
cmpsl
in
mov
lock
dec
adc
xor
fsubl
mov
cwtl
cmpsb
pop
sbb
mov
les
fistl
repnz
js
ret
pop
aam
add
in
lods
test
and
lods
add
in
pusha
dec
cmp
inc
mov
sti
ljmp
jo
shlb
dec
jmp
push
cwtl
push
or
dec
shlb
mov
mov
cmc
adc
sti
inc
push
inc
loope
adc
test
movsl
dec
das
rcrl
lods
cmp
sub
push
movb
jle
sti
mov
xor
add
xchg
faddl
lds
les
cltd
sbb
arpl
xchg
int
push
adc
aad
shl
pop
mov
adc
xchg
sbb
dec
popf
arpl
sbbl
jo
inc
jg
add
mov
add
fs
pop
dec
into
rcrb
sub
call
mov
jno
or
dec
jne
jb
cmp
add
dec
imul
add
sbb
dec
scas
and
mov
lods
xlat
pushf
lahf
xchg
stos
mov
jbe
les
and
jbe
subl
and
and
sub
inc
sbb
outsb
ja
mov
fcomps
mov
sbb
fdiv
int3
lahf
xchg
loopne
or
sbb
push
pop
std
pop
data16
mov
xlat
xchg
popf
stos
xor
jmp
mov
ret
mov
loopne
sub
pop
xchg
cmp
clc
idivb
cmp
jnp
pop
dec
aad
out
cmp
mov
sbb
rorb
sbbl
shll
test
jnp
push
push
jae
mov
and
xchg
pop
repnz
and
insb
daa
sub
sub
push
sbb
xchg
es
mov
mov
je
mov
push
cmpl
cmpsb
mov
mov
fucomip
loope
add
add
push
inc
out
mov
inc
pop
and
sub
sbb
push
mov
cmp
sub
fdivrs
mov
xor
lds
out
push
xchg
xlat
mov
mov
inc
daa
fs
push
sub
adc
rorl
adc
cmp
cmp
fnstsw
xchg
shrl
in
pushf
pop
and
sahf
cmp
icebp
dec
push
repz
movq
lods
xor
icebp
shlb
popa
daa
push
icebp
jae
jbe
adcb
enter
cli
ljmp
jmp
sbb
and
mov
clc
loope
loopne
clc
out
fidivrs
mov
sbb
imul
sarb
adc
push
inc
out
ret
pop
push
cltd
and
xchg
dec
lret
xchg
mov
in
push
jge
pop
lret
xor
add
dec
jns
or
mov
jge
cmp
movsl
adc
pop
int3
rcrb
mov
mov
ja
jnp
icebp
lods
push
les
pop
adc
addr16
stos
adc
lret
subl
ja
xchg
jecxz
test
mov
add
js
cmc
xor
into
inc
aas
mov
mov
inc
inc
push
cmpsb
in
mov
mov
mov
or
icebp
jecxz
fdivr
aad
iretw
outsl
rcrb
xchg
popa
out
mov
shr
mov
mov
rcl
rcrl
test
lea
pop
in
dec
xchg
jae
xchg
fwait
out
ljmp
adc
bound
out
jb
sub
dec
sub
lods
mov
jp
xchg
adc
lcall
dec
mov
fstps
shlb
imull
dec
cmc
mov
pusha
mull
inc
adc
leave
jle
sub
sbb
mov
xchg
jp
shll
insb
cmpb
mov
and
jl
push
sbb
in
jae,pn
fs
pop
push
xlat
cld
dec
shll
ljmp
cmp
insl
sahf
push
es
pop
cmpsl
mov
test
sub
stc
test
mov
push
fidivrl
sub
jge
adc
imul
cmp
fiaddl
imul
arpl
mov
sbb
mov
pop
pop
int
mov
clc
incb
mov
cwtl
xor
in
in
add
cmp
rclb
inc
shlb
jb
inc
stos
popa
movsl
enter
lods
pop
dec
addr16
mov
jmp
imul
cmp
adc
imul
pop
test
movsl
push
or
dec
mov
bound
pop
cmp
mov
cwtl
adc
fnstenv
push
arpl
mov
testl
push
rorb
popa
inc
jmp
iret
pop
outsb
mov
push
out
cmpsl
xlat
imul
push
pop
call
mov
daa
sbb
repz
lret
js
dec
aad
fmull
mov
add
mov
inc
daa
fwait
cmpb
aad
stos
fmull
test
imul
fs
loope
bound
push
push
aam
lahf
mov
aas
mov
inc
mov
addr16
jae
js
int3
jae
sub
subb
mov
inc
mov
pop
shll
or
jg
inc
sub
xchg
cwtl
lret
cmp
jo
inc
push
sbb
icebp
inc
test
leave
rorl
sahf
jo
xor
lods
arpl
in
jge
inc
pushf
and
and
jne
and
in
sbb
pop
popa
xchg
ret
unpckhps
dec
sbb
cltd
sbb
adc
lods
fwait
xlat
aam
push
and
push
inc
ja
jl
push
dec
shrb
xor
imul
and
sub
out
scas
sub
data16
sbb
fnstcw
dec
mov
cmpsl
xor
and
push
outsb
aad
and
in
xor
mov
xchg
test
adcb
sti
std
and
ljmp
jae
jge
xchg
xchg
push
jbe
hlt
sarb
test
pop
scas
iret
cmp
rcr
push
cmp
inc
push
aad
pop
or
sub
mov
sub
sbb
rol
mov
outsl
test
cmp
data16
cmp
or
push
fwait
cmpl
ret
xchg
fdivrp
adc
jmp
inc
aaa
pop
fs
das
adc
dec
cmp
neg
jbe
rcll
sub
nop
mov
dec
jne
dec
cs
andl
mov
add
sub
dec
nop
in
das
mov
inc
cmp
push
lret
mov
fiadds
arpl
mov
xor
lods
xchg
fimuls
mov
push
aad
subb
mov
jle
xchg
les
pop
loope
mov
cmp
scas
imul
gs
jo
pop
cmp
lods
aas
sbb
cli
and
neg
sarb
cld
jmp
ror
das
and
push
imul
fildl
popf
cmc
icebp
xchg
stos
sub
add
cmp
xchg
ja
test
arpl
cmp
sti
fwait
sub
cmp
cmc
sahf
or
outsl
sub
push
rcll
mov
pop
and
add
jle,pn
push
enter
mov
mov
cmp
out
push
into
push
mov
lock
ficoml
mov
jbe
arpl
mov
pop
mov
add
je
xor
push
rcrl
call
mov
fisubs
jnp
iret
mov
pop
iret
jne
outsb
or
pop
cli
popa
push
jne
jae
dec
test
icebp
inc
cmp
fstps
or
inc
or
xor
in
popa
scas
clc
call
in
mov
mov
xor
imul
jecxz
jle
push
xchg
loopne
subl
lahf
stos
dec
xchg
pushf
sub
cmp
test
jge
sub
xchg
push
gs
iret
xor
out
cltd
popa
and
in
pop
lods
mov
addr16
inc
les
jl
sub
leave
call
or
adc
mov
fcomip
leave
insl
jno
icebp
mov
mov
xor
and
sbb
test
mov
push
pop
pop
add
xchg
xor
pop
xchg
ds
push
cmpsl
scas
jp
mov
cmp
lcall
jnp
cmpsl
mov
nop
test
push
mov
and
pop
cs
mov
push
fiadds
cmp
and
fcmovb
lret
mov
xor
push
inc
les
ljmp
pop
mov
pop
call
imul
sbb
imul
add
test
add
jbe
add
mov
stc
stc
add
adc
rcrl
inc
pop
imul
dec
mov
sbb
into
jl
out
mov
jnp
inc
decb
lea
and
sub
fisubl
xchg
adc
dec
mov
sub
imul
cmp
inc
or
sbb
in
mov
mov
loope
jns
or
and
push
mov
aas
pop
pop
xchg
mov
and
into
sbb
cmp
ds
mov
push
pop
mov
lock
mov
cmp
test
mov
punpckhdq
dec
movb
xor
xchg
push
jg
push
dec
lcall
fldl
sbbb
lods
dec
or
cld
dec
and
lahf
movsl
push
mov
jo
mov
movsb
sub
inc
cmp
dec
pop
cmpl
sub
cwtl
mov
xchg
sub
jns
iret
out
cmp
push
xor
pop
push
xor
inc
add
mov
int
fwait
or
dec
data16
xlat
mov
out
sbb
ret
sub
js
dec
aas
mov
mov
xor
enter
push
aaa
cmp
shl
les
mov
out
dec
orb
sete
sub
fdivrs
insb
cmp
or
loope
sbb
scas
cmp
mov
xchg
jnp
int
mov
scas
ja
fst
loope
mov
notb
imulb
xor
lods
sbbb
scas
fadd
jbe
out
arpl
or
nop
push
sbb
jno
repnz
fcomps
out
ja,pt
mov
inc
adc
or
mov
xor
xchg
ret
fstpt
decb
sub
sub
cmp
ja
aad
enter
mov
movsb
pushf
xchg
jmp
test
mov
lret
xor
out
ret
movsl
xchg
ss
jne
jge
mov
subb
in
push
adc
int
push
aaa
scas
push
dec
jno
fcoml
out
sti
or
add
movsl
xor
xor
xor
out
pushaw
pushf
out
stc
scas
pusha
jne
xor
mov
cmpsl
add
fisttps
cltd
jmp
ret
movsb
jg
mov
sub
pop
fcmovu
jnp
inc
inc
nop
std
movsb
shl
push
mov
and
sub
pop
pop
stos
ret
mov
dec
jo
in
movsb
mov
adc
adc
dec
jae
xor
pop
movsb
and
adc
dec
je
movsb
cmp
mov
xchg
add
lds
push
xchg
int3
test
clc
add
sub
sub
mov
jnp
lret
sahf
mov
pop
jns
shl
sbb
jle
repnz
inc
lahf
cmp
inc
push
cmp
cmp
pop
xchg
mov
dec
xchg
in
mov
jo
iret
fdivrl
stos
sbb
aad
cwtl
aad
inc
aad
nop
mov
ljmp
fcoml
pusha
push
mov
jo
and
jle
push
aaa
mov
inc
push
sbb
dec
bound
mov
mov
gs
fnstsw
sbb
push
inc
xor
xchg
jnp
xchg
mov
xlat
xor
cltd
push
out
fiaddl
mov
rcrb
push
or
pop
mov
aad
ss
ss
insb
or
xor
sahf
cld
loop
push
clc
orb
or
nop
outsb
mov
jmp
inc
es
sbb
fldt
loope
call
sbb
cmc
pop
aam
rol
adc
xor
cmp
inc
clc
ja
xlat
insl
push
add
gs
mulb
pop
lret
mov
les
rclb
xchg
mov
dec
sti
push
pop
mov
sarl
xchg
dec
cs
repz
lcall
sbb
cwtl
negb
lods
sub
jmp
cmp
mov
add
add
rclb
jp
add
ljmp
or
xchg
daa
xchg
or
lea
imul
mov
por
aad
fwait
jnp
pop
fs
pop
fcoml
xchg
add
add
sub
lods
mov
cltd
sub
cltd
add
add
and
cs
push
lret
es
ss
fwait
loop
cmpsl
xchg
loope
cmp
sbb
imul
clc
jecxz
dec
movsl
or
clc
dec
cmp
repz
mov
fs
iret
ret
int
add
adc
xor
frstor
jg
and
nop
in
mov
test
and
popa
push
dec
lods
leave
mov
jbe
rol
mov
sbb
aad
adc
pop
lret
insl
sub
mov
out
cltd
inc
push
fs
jl
and
xor
mov
out
adc
pop
ss
arpl
pop
data16
pop
add
xchg
out
cwtl
insb
das
xchg
out
jmp
cmp
insb
inc
push
or
clc
jl
lret
inc
std
repnz
xchg
jo
jns
and
into
mov
dec
cmp
dec
out
into
mov
push
push
mov
arpl
pop
mov
dec
lock
loope
out
pop
sub
add
cltd
dec
shll
lea
mov
xchg
dec
rcl
out
mov
push
rclb
ret
sti
xchg
lahf
mov
arpl
test
xor
jg
mov
fldenv
in
mov
pop
add
negl
mov
add
jge
adc
or
jge
test
push
fldl
ret
cmc
leave
ljmp
jecxz
sub
into
lret
mov
sar
cmp
cmpsb
clc
fadds
inc
sbb
repnz
cmp
imul
mov
mov
cwtl
pop
xchg
jg
dec
scas
mov
cmp
data16
add
fs
xor
inc
mov
or
clc
cwtl
sbbb
dec
cld
pop
inc
pop
sub
pop
inc
mov
push
pop
leave
imul
and
sub
test
mov
inc
and
mov
pop
lea
shlb
inc
dec
in
cmp
add
dec
enter
insb
push
inc
dec
aam
cmp
fwait
add
in
out
jmp
incl
mov
mov
push
into
call
ja
stc
cld
mov
sbbb
inc
add
out
bound
cmp
ficoml
ljmp
sub
xchg
push
aad
push
cmp
push
xchg
sbb
mov
xchg
es
test
mov
xorb
push
sbb
inc
adc
inc
repnz
fstl
aas
sub
sbb
mov
cmp
imul
adc
sahf
mov
mov
mov
inc
pushf
cmovs
add
daa
insl
cmp
mov
sti
push
add
aam
jg
lds
mov
outsl
popa
mov
and
bound
mov
fisttpl
cltd
mov
icebp
cmp
lret
pop
xor
nop
mov
adc
sbb
repnz
shlb
or
loopne
mov
jns
int3
fst
and
insl
sub
inc
lods
out
mov
or
filds
lea
imul
mov
mov
xor
ljmp
out
mov
movsl
mov
out
mov
shll
setle
or
push
mov
jp
cmp
mov
sub
cmp
fwait
pop
divl
les
fbstp
mov
notl
mov
shlb
adc
ljmp
push
adc
adc
or
int
loope
xor
int3
cmp
cmpsb
nop
aad
xchg
sbb
sbb
hlt
shll
pop
xchg
mov
icebp
fisubl
insl
dec
cwtl
mov
dec
cmpsb
int3
rcr
xchg
mov
cmp
fcmovu
pop
or
mov
push
int3
and
or
push
dec
mov
bound
negl
clc
jecxz
sbb
popa
inc
and
subb
xchg
xor
loop
ds
cmp
add
inc
mov
cwtl
mov
pushf
and
cltd
ljmp
cli
mov
cmp
mov
adc
mov
roll
add
mov
orb
add
fimull
mov
jb
mov
inc
jns
inc
inc
fisubl
sub
dec
shrl
jecxz
sub
sbb
in
pop
adc
shlb
add
dec
and
inc
adc
sahf
loopnew
scas
ja
popf
js
int
add
or
cmp
cli
mov
lock
pop
iret
or
cwtl
xor
std
add
insb
std
and
mov
iret
popf
aam
dec
cmp
mov
in
add
aaa
mov
movsb
adc
mov
pop
jp
sbb
jle
js
fcmovbe
lock
test
out
je
fdivs
mov
mov
add
mov
notb
and
mov
mov
outsb
ja
loopne
xchg
in
and
jo
stc
push
cmc
pop
outsl
mov
ret
int
jp
pop
dec
cmpsb
mov
mov
or
lret
icebp
scas
add
sbb
push
js
popf
adc
adc
xchg
mov
xor
int3
testl
xchg
cmpsb
inc
out
fiadds
pusha
arpl
dec
shll
mov
jno
movsl
into
sbb
cmp
mov
pop
addr16
rorb
adc
fstl
out
add
into
mov
xor
outsb
shlb
adc
and
imul
dec
push
inc
pop
xor
mov
aam
div
cmp
aam
stc
pop
roll
leave
loop
adc
stos
adcl
mov
in
fs
mov
jo
dec
and
leave
pusha
pusha
dec
xor
mov
lcall
iret
add
out
nop
jbe
aaa
and
notb
pop
fnsave
mov
jb
sub
adc
dec
mov
push
or
pushf
sbb
lds
icebp
ror
lods
push
pushf
add
loopne
or
add
mov
dec
jns
loopnew
jl
filds
movsl
notl
stc
or
sub
lret
scas
stos
out
imul
jo
add
mov
inc
or
or
pop
movsl
pop
lock
jbe
pop
dec
loop
xchg
cs
cmp
fcomps
mov
mov
mov
or
loopne
inc
aaa
jge
subl
push
fidivrs
dec
push
inc
inc
inc
and
andl
mov
testl
sub
inc
fsubrs
enter
sbb
ret
fiaddl
cmp
lcall
mov
stos
inc
mov
cltd
insb
pop
scas
js
es
dec
mov
pslld
or
pop
mov
pop
cmc
push
in
movb
sub
lea
pop
jbe
out
movsl
pop
gs
insb
push
popa
data16
orl
fidivl
outsl
insb
insb
test
inc
xor
add
popf
xchg
mov
cli
adc
lret
add
icebp
fs
dec
mov
fwait
mov
data16
clc
insl
sub
and
dec
mov
sbb
jp
daa
inc
xchg
out
jns
sub
test
xor
cmp
cwtl
jge
negl
pusha
fldcw
add
pop
push
imul
mov
hlt
add
mov
ja
jns
cld
aas
shrb
mov
pop
xor
inc
or
outsl
mov
mov
outsl
ret
lret
cmp
pop
cli
fwait
jbe
fisttpl
lret
cmpsl
orb
sbb
cld
mov
mov
sbb
stc
subl
addr16
sub
inc
xchg
dec
cmp
rcr
in
repz
ljmp
and
rcrb
daa
pop
cwtl
daa
mov
inc
push
jle
push
xchg
push
mov
or
dec
enter
insb
pop
pop
pop
fsubrs
jge
cmpsl
hlt
mov
cltd
dec
int
repz
adc
mov
ljmp
lock
jle
in
fnstenv
cmp
orb
xchg
adc
jae
fsts
pop
enter
shlb
cmp
lret
inc
sbb
aad
in
sbb
fildl
fbld
push
pop
sub
jne
cmc
hlt
test
push
jnp
mov
incl
das
aam
ret
inc
movsb
add
pop
xchg
and
ljmp
adcl
mov
sub
dec
push
mov
nop
mov
mov
out
xor
or
mov
imul
das
push
mov
cs
ret
xchg
mov
incl
inc
mov
lahf
popf
outsb
movsl
ret
lret
mov
std
jo
ret
idivb
arpl
sub
pop
adc
popf
pop
and
push
outsb
sub
cwtl
fdivrl
xchg
mov
sbb
inc
or
stos
iret
aam
and
int3
pop
adc
das
xchg
hlt
xorb
loopne
or
adc
cltd
test
pop
xor
dec
or
sub
pop
push
push
in
inc
invd
es
mov
jge
ds
sbb
ljmp
xchg
mov
pop
lret
adc
loopne
xor
mov
scas
push
mov
jl
int
jb
imul
ljmp
lret
sti
jecxz
xor
push
lcall
xor
sbb
mov
xchg
pop
inc
add
mov
fsubrs
cmp
cmp
cmpsb
insb
aad
push
scas
xchg
or
sbb
add
stos
insb
jmp
lods
mov
out
xor
mov
sub
or
fimuls
ss
sub
pushf
loope
rorb
int3
daa
dec
mov
and
lock
arpl
pop
into
popf
or
adc
imul
xchg
in
faddl
clc
sahf
mov
aas
or
inc
icebp
scas
cmp
add
test
sbb
scas
les
repnz
ja
cmp
cmp
add
dec
insb
rorl
lods
loopne
in
ja
push
mov
int
push
divb
pop
iret
add
and
enter
sub
mov
mov
or
jnp
xor
into
mov
adc
fildl
push
jo
imul
repz
out
inc
shll
fisubs
icebp
dec
cmp
out
ss
lret
inc
sbb
mov
mov
rol
xor
adc
push
xor
rcrl
jmp
mov
sub
mov
mov
push
mov
mov
jp
mov
ljmp
loopew
cmp
pop
mov
shl
pop
mov
adc
sti
cmpsl
cmc
mov
mov
cmp
into
stos
and
fs
insb
push
xchg
xor
adc
pop
insl
pop
and
lods
sgdtl
leave
fdivrs
test
scas
aas
pop
xchg
sbb
xchg
pusha
mov
adc
adcb
mov
das
gs
and
mov
lahf
div
cmc
jge
push
push
imulb
fidivrs
sbb
push
adc
or
adcb
fnstcw
or
jae
or
xchg
mov
shl
aam
scas
push
cmc
mov
testb
pusha
sbb
adc
outsb
xorb
or
ds
jo
dec
int3
push
dec
inc
rcrl
popa
pop
in
stos
out
pop
adc
mov
xor
add
ret
mov
or
add
mov
pusha
mov
rcl
out
cmc
xorl
in
es
aam
insb
jmp
popf
xorl
jb
or
mov
cmp
xchg
mov
add
iret
popf
and
fcmovne
lahf
adcl
mov
stos
and
test
shll
pop
push
cmpsb
xor
and
ds
push
ja
jb
xchg
lea
mov
and
out
aam
lds
xchg
xchg
xchg
sub
imul
xor
push
scas
mov
sbb
dec
lock
inc
and
pop
sbb
and
aad
scas
xchg
push
or
fisubrl
subl
pop
es
pop
mov
fs
fsub
add
mov
pop
add
jo
popa
das
lea
jne
xchg
xor
pusha
test
mov
lahf
es
xchg
ret
xchg
sub
cmp
jl
adc
test
cmpl
ljmp
mov
adc
and
pop
aam
aam
insb
adc
sub
loope
loop
sub
or
mov
cld
inc
push
or
ja
push
lock
cmp
leave
clc
xchg
mov
or
pop
mov
mov
cmpsb
das
push
in
inc
pop
push
flds
int
inc
jg
arpl
push
pop
arpl
and
rorb
add
insb
dec
into
xor
cwtl
xor
jae
sbb
xchg
jp
pop
mov
in
push
mov
mov
hlt
dec
sahf
dec
mov
cli
mov
jecxz
xor
sti
js
clc
mov
shlb
movsb
movsl
mov
adc
sahf
enter
xchg
pop
dec
mov
dec
mov
adc
fwait
cmp
add
xor
jl
lret
and
mov
call
and
dec
lds
pop
jae
dec
jnp
aaa
jne
pusha
mov
mov
imul
test
sbb
pop
mov
mov
sub
dec
sbbl
gs
cmpsb
adc
add
pop
push
fmulp
inc
or
sub
pop
aam
xchg
cs
pop
mov
sub
cmp
cmp
decl
aad
das
adc
fimuls
subb
in
out
mov
scas
dec
dec
push
sub
push
mov
mov
lods
imul
in
jmp
add
sub
mov
dec
cld
in
call
mov
lds
mov
addr16
mov
lret
mov
mov
lods
push
mov
jns
fcmovnb
mov
pop
sti
out
cld
movlps
sub
push
in
cmp
adcl
cmp
imul
xchg
pop
adc
cmpsl
mov
and
out
cmp
mov
pop
out
fisttps
mov
stos
xchg
stc
jnp
aam
stos
pop
cmpsb
mov
xor
leave
test
sbb
ss
cmp
mull
in
jge
xchg
cwtl
jbe
adc
je
push
or
cmpsb
or
andb
sub
scas
or
jae
fnstsw
jno
dec
fsubl
jb
inc
mov
push
cmc
sbb
mov
sub
insl
es
inc
in
xor
dec
mov
es
scas
jmp
mov
fistps
inc
int
add
jne
cmpb
test
adc
mov
mov
mov
and
mov
flds
test
aad
push
pusha
dec
sub
push
fisubrs
aaa
add
loop
jle
enter
mov
jb
sarl
jo
inc
stos
sub
lea
inc
adc
sbb
mov
sub
mov
add
roll
jne
cli
pop
push
pop
out
out
sub
push
ljmp
sbb
mov
sbb
mov
subl
pop
jo
cltd
sbb
mov
std
fwait
in
jmp
leave
aaa
pop
pop
lret
fcomps
pop
xor
mov
call
in
icebp
arpl
sbb
push
mov
scas
sbb
fcomps
fs
mov
dec
cmp
daa
lds
in
xchg
test
stos
lret
mov
mov
add
in
inc
inc
pusha
arpl
dec
addr16
fwait
or
mov
and
subb
mov
stos
sbb
dec
nop
imul
insb
mov
or
adc
pop
rorb
cmc
iret
jo
jge
dec
cmp
loope
filds
aad
add
shlb
push
les
mov
cmpsb
cmp
dec
adc
xorl
jns
enter
jo
insl
cs
sarb
fcomp
mov
mov
sub
aam
cmp
and
fildll
lret
imul
sub
pop
iret
test
or
mov
daa
idivb
popf
dec
repnz
xchg
or
aas
jno
movsb
test
xchg
xchg
pop
in
jge
cmp
cmp
jne
popa
cs
mov
push
xor
sub
jl
mov
rcl
rcrl
repnz
mov
dec
mov
mov
rcr
pusha
inc
xchg
cmp
xor
pop
psubsw
add
loop
push
push
sahf
jbe
fldl
int
jecxz
loope
lcall
xchg
ss
jno
iret
into
test
adc
cmc
int
test
sbb
xor
mov
mov
sub
xchg
sub
pop
in
mov
test
jl
rcrb
fists
ret
xchg
push
jb
fadd
ret
inc
fisubl
or
popf
icebp
popa
mov
popa
insl
mov
lret
push
inc
test
leave
mov
repz
xchg
ds
les
mov
cltd
push
pop
mov
daa
xor
ljmp
xchg
decl
cli
pop
or
xor
or
push
pop
cld
inc
mov
pop
pop
jp
mov
mov
cmpl
dec
pop
imul
dec
inc
push
ss
int
mov
push
xor
jmp
daa
dec
jecxz
dec
inc
cmpsb
xlat
sbb
arpl
and
cmp
iret
in
pop
mov
bound
jle
pop
aad
gs
cmp
mov
ret
sbb
imul
out
inc
push
pop
shlb
push
movl
movsl
xchg
jb
mov
pusha
sarb
xchg
jecxz
cmc
bound
pop
mov
std
jo
or
arpl
dec
aam
pushf
mov
sbb
mov
add
stc
fdivrl
fstps
aaa
out
pop
push
cmp
call
sbb
in
call
sub
cs
xor
clc
test
mov
xchg
jno
fdiv
lret
adc
sbb
fldcw
push
mov
mov
idiv
icebp
outsb
cmp
clc
mov
cmp
aam
inc
sti
push
fwait
mov
xchg
pop
testl
fsts
jmp
loopne
add
mov
fsubl
stos
mov
pop
scas
mov
and
sub
arpl
mov
mov
in
fcoml
adc
shrl
daa
push
lret
xchg
loopne
das
xor
cli
cmp
sub
ds
in
addr16
mov
mov
xor
xchg
pusha
dec
jno
sub
inc
pop
out
mov
rcrl
das
xchg
fisubrl
insb
pushf
adcl
idivl
mov
test
lret
das
dec
inc
cmp
xor
mov
scas
in
fists
icebp
jo
mov
popa
sbb
bound
icebp
add
mov
pop
test
pop
js
incl
dec
loopne
mov
les
mov
notb
xchg
and
pop
cli
stos
ret
mov
sub
or
pop
hlt
test
sbb
inc
fadds
inc
inc
inc
loop
shlb
mov
icebp
iret
push
mov
pop
pop
inc
jb
dec
lods
sbb
adc
fimull
mov
loope
xchg
xchg
sbb
push
xor
add
push
push
mov
pop
movsl
cwtl
inc
cmp
test
stc
cmpsl
rcrl
push
jge
sub
imul
lahf
rcrl
ds
and
loop
adc
gs
fbld
jmp
movsl
cli
and
push
pop
adc
mov
jnp
dec
mov
mov
cmp
mov
jge
cmp
pop
pop
es
psllw
imul
adc
mov
pop
add
jne
mov
movsl
mov
inc
repz
xor
imul
inc
inc
decl
adc
lods
or
shr
pop
seta
pop
outsb
push
js
adc
cmovno
pop
dec
lret
adc
test
dec
sub
lahf
test
push
xor
xor
out
pop
loope
or
adc
daa
mov
mov
jne
mulb
jno
pop
xchg
pop
ds
int3
sub
cld
jg
js
mov
and
fisttpl
mov
ret
cltd
mov
stos
fnstcw
stc
inc
sbb
scas
adc
iret
mov
ljmp
fdivr
xchg
mov
iret
mov
or
push
push
push
cs
hlt
mov
js
loope
aaa
fstps
inc
push
sbb
xorb
mov
inc
imul
enter
sub
jno
sarb
add
stc
mov
add
jge
std
adc
cmp
xor
testl
popa
jp
xlat
pop
cwtl
xor
mov
lock
and
clc
or
sbb
pop
dec
cs
enter
in
ja
mov
out
jne
insb
cmp
fucomi
push
sbb
mov
imul
mov
in
push
sahf
sub
add
push
enter
jo
jp
into
enter
das
ret
lahf
push
and
xor
fnsetpm(287
cmpsl
imul
push
xor
cmc
ret
jno
pop
scas
pop
jo
shrl
insl
leave
xor
insb
inc
jne
mov
stc
pop
push
mov
aad
jg
icebp
test
inc
cmp
sub
je
cmp
lods
cmc
shrl
cs
pop
cmpsl
ljmp
mov
pop
jo
inc
add
stos
mov
inc
jnp
or
jg
jmp
insl
xor
rcl
jno
mov
cmp
pop
jo
mov
sbb
lret
lock
daa
mov
xchg
scas
mov
imul
cs
mov
out
test
mov
lods
xchg
inc
lret
sbb
lahf
push
fdivrs
popf
mov
cmp
sub
mov
test
xchg
lcall
cltd
xor
movsl
sub
jne
std
jne
push
ror
int
add
push
mov
xor
std
shlb
push
int
or
scas
sub
and
xor
sub
out
pop
or
xlat
pop
jmp
push
cmpsl
negb
shlb
fcoml
andl
addb
sub
mov
sbb
das
in
inc
pusha
cmp
lret
test
out
add
ret
repnz
push
or
cltd
adc
mov
mov
lods
add
je
fsubs
psubusw
mov
and
sahf
push
sub
mov
or
aas
push
mov
je
aas
cli
fwait
xor
lds
sub
sub
pop
jno
jge
xchg
push
js
xchg
xor
inc
test
outsb
sbb
movb
jl
aaa
fsubrs
mov
frstor
adc
push
stc
jmp
or
repz
add
xor
fwait
jne
shrb
lock
fsubs
pusha
or
lahf
lcall
mov
sahf
push
pop
xlat
push
inc
test
sbb
outsb
scas
sarb
or
mov
cmp
push
sub
jno
and
dec
rorl
mov
enter
in
pop
dec
jno
xor
ret
mov
lds
cmp
icebp
mov
cmp
mov
add
add
test
cmp
or
push
push
out
je
js
lods
push
leave
hlt
clc
or
adc
xchg
mov
pop
mov
lahf
push
cmp
mov
mov
sbb
jle
lds
cmpsl
sar
xchg
repz
cli
aaa
xchg
stc
adc
mov
dec
sahf
test
cmp
jo
sti
pop
xor
fiaddl
mov
mov
push
std
cmpl
cwtl
jmp
cli
cmp
arpl
and
test
loop
push
out
test
popf
xor
jo
jle
pop
xor
mov
out
cmp
or
aas
sub
or
push
insl
adc
lods
jno
test
or
pop
lock
mov
xchg
xchg
jno
pop
mov
loop
scas
test
mov
add
push
inc
cmpsl
gs
lahf
jae
pop
dec
xor
fbld
jbe
andb
xchg
lea
xchg
fdivrl
push
pop
mov
mov
mov
gs
cmp
sub
insl
roll
adc
inc
sub
rol
xchg
mov
push
push
xor
pusha
or
subb
xchg
cmp
jg
lret
ss
aas
call
or
stc
ficomps
ja
fadd
sub
mov
dec
mov
in
popa
xchg
fbld
mov
add
roll
or
or
daa
out
adc
push
xor
repnz
lea
arpl
inc
xlat
daa
xchg
mov
lahf
leave
jno
lcall
sbb
jmp
add
xor
jecxz
clc
mov
inc
cltd
mov
cmpb
add
insb
aas
movsl
test
cld
scas
mov
cmp
push
push
pop
xorl
pop
inc
test
push
mov
lods
jg
xchg
add
addr16
vandnpd
les
scas
cmpsl
dec
hlt
mov
sbb
adc
cmp
or
sarb
outsl
pushf
std
addr16
rcr
jecxz
enter
dec
pop
insb
pop
call
cmpsb
jbe
pop
dec
mov
xchg
outsl
jle
pop
mov
lock
push
sarb
jge
imull
incb
lea
bnd
dec
sub
adc
xor
jle
sti
mov
jnp
cmc
or
or
inc
nop
push
data16
addr16
mov
inc
ljmp
pushf
add
imul
into
das
call
ret
mov
jns
push
movsl
inc
push
push
push
icebp
mov
xor
lret
sti
xchg
add
lods
test
aas
xor
dec
mov
es
push
scas
ljmp
pop
aad
sbb
mov
leave
pop
jnp
mov
mov
xor
mov
loope
mov
movl
icebp
sahf
add
sbb
pop
adc
mov
xlat
addr16
jmpw
loop
mov
outsl
ds
mov
popa
dec
xor
arpl
push
stos
lods
insb
aas
xchg
sub
push
adc
imul
cmpsb
xor
stos
cmp
xor
push
add
mov
js
inc
add
or
xor
mov
pop
mov
cmp
fisubl
repz
add
test
mov
testb
jg
out
js
repnz
ret
lret
lods
sub
mov
stc
cld
or
out
inc
and
outsl
rcl
cmc
and
or
push
dec
jmp
out
jno
test
push
push
adc
clc
or
repz
scas
cmpsl
or
ja
push
mov
mov
data16
dec
sbb
bound
es
test
js
xor
mov
shlb
addr16
jo
stos
lcall
or
dec
push
sti
mov
shll
xor
sub
pxor
adc
xchg
xor
pop
cmp
xchg
inc
sub
and
pop
ja
fdivl
mov
jo
xlat
out
lea
outsl
cmp
in
imul
addr16
out
daa
lcall
lret
pop
rcr
pop
cmp
in
cmpsl
xor
mov
out
jb
test
aaa
loop
mov
xchg
sub
pop
cltd
xchg
push
xlat
pop
in
sub
test
mov
jl
fdivs
pop
sub
lods
pop
mov
cmpsb
sar
push
pop
jns
mov
pop
inc
xchg
mov
lods
mov
inc
and
aas
adc
enter
lea
push
mov
sub
dec
out
dec
std
rclb
ret
daa
push
adc
cltd
mov
xor
stos
inc
subb
js
ficomps
bound
pop
je
dec
adc
pop
mov
adc
inc
xor
cmp
insb
jle
pushf
in
les
popf
pop
outsl
popa
adc
mov
pop
js
cld
pusha
jl
dec
movsb
push
dec
bound
push
sub
or
xchg
jg
sub
int
push
push
cmp
mov
out
mov
pop
ret
shrl
xor
mov
pop
mov
out
mov
mov
pop
push
jbe
lea
out
sub
cltd
out
or
mov
jo
or
shlb
inc
arpl
mov
xchg
and
ljmp
leave
add
popf
dec
repnz
add
das
and
in
adc
push
push
push
dec
roll
stos
add
mov
or
jge
cwtl
popf
and
add
adc
jg
sarb
lock
push
mov
xchg
out
imul
mov
data16
xor
fldt
xor
push
cltd
gs
cmp
inc
mov
and
push
jg
pxor
das
ja
push
pop
cmpsb
movsl
lret
adc
jecxz
sbb
sbb
push
shr
mov
sahf
add
add
data16
lock
pushf
xor
out
fdivs
loop
fidivl
mov
sbb
jns
adc
lock
jae
bound
inc
add
push
add
pusha
fs
add
jne
into
cmpsl
cmp
sub
push
adc
out
push
mov
out
jne
lock
or
cld
push
cwtl
lcall
into
popf
pushf
lock
jb
stos
cmp
sub
jmp
repnz
push
out
loope
dec
daa
repz
loopne
jns
mov
add
or
xchg
data16
aad
sub
dec
add
inc
clc
inc
dec
dec
or
sbb
or
dec
pop
xchg
adc
insb
faddl
stc
fcoms
pop
mov
cs
ror
scas
stc
ror
enter
adc
pushf
push
push
outsb
xchg
jne
push
mov
push
xchg
ljmp
push
fidivrs
fsubs
mov
cmpsl
mov
jmp
gs
popa
iret
out
test
stc
xchg
stos
xchg
push
inc
dec
ret
in
popa
into
mov
cs
ja
mov
or
or
int3
jmp
fistpl
push
sub
xor
push
jnp
sbb
mov
in
fcoml
or
mov
movsl
push
lods
scas
push
fwait
pop
push
lods
divl
int
test
xlat
ljmp
cld
pop
outsb
adc
pop
adc
test
mov
dec
repnz
mov
bound
aaa
popa
loopne
cld
mov
mov
ret
pop
das
cltd
inc
out
gs
inc
outsb
iret
mov
out
push
jno
jae
cmp
dec
sarb
xor
incl
fsubs
les
cmp
iret
inc
lahf
imul
mov
sbb
mov
repnz
and
mov
scas
dec
jg
fistpll
sub
ds
mov
mov
ds
sarl
and
fwait
bound
mov
imul
and
shl
adc
jb
test
mov
pusha
mov
jnp
dec
imul
idiv
xchg
jmp
ljmp
movsb
in
and
lret
dec
xchg
dec
shll
rcrl
rolb
add
ja
stos
arpl
mov
push
es
test
mov
pop
test
cmpsb
fmuls
add
push
cmpsb
pop
int
pop
addr16
in
popa
jns
fbld
sahf
cmp
mov
sarb
dec
pop
push
mov
addl
out
cltd
sub
sbb
fwait
pop
out
pop
test
je
mov
test
lret
lcall
and
inc
pop
push
mov
and
dec
aas
jecxz
fcom
iret
mov
fcoms
mov
cld
sub
ret
stos
fldcw
xlat
sub
movsl
out
adc
ret
movb
pop
mov
cwtl
aam
jp
pushf
roll
pushf
aam
mov
test
inc
scas
mov
jbe
xchg
sbb
leave
dec
xchg
mov
sbb
cwtl
pop
or
fidivs
scas
rcr
xchg
inc
xchg
lea
lds
test
push
adc
cli
xor
int
adc
sub
adc
out
mov
xlat
mov
call
orb
ret
inc
sti
ljmp
and
popa
fnsave
out
ds
xlat
xor
push
ror
js
push
cmp
or
ja
sub
pop
push
cmp
xorl
mov
dec
les
vpmaxub
je
pop
inc
pop
bound
in
stc
dec
inc
into
lcall
mov
mov
orl
imul
adc
gs
mov
iret
push
mov
inc
jno
pop
add
jl
sbb
sub
aam
in
stos
and
sub
fistpl
sbb
dec
xor
xchg
xchg
mov
fstl
pop
test
lcall
xor
dec
in
mov
pop
shrl
xchg
jg
stos
jne
mov
sub
xor
jle
push
shll
xor
and
mov
jno
mov
add
or
loopne
mov
adc
pop
leave
pushf
and
decl
or
mov
xchg
lds
pop
movsl
in
adcl
gs
aad
pop
icebp
in
pop
adc
push
adc
enter
mov
adc
in
or
dec
mov
es
cli
and
and
movsl
clc
test
arpl
add
inc
mov
rclb
ss
pop
btr
mov
rolb
xchg
mov
fwait
xor
repnz
sub
push
mov
xor
push
add
push
dec
ficoms
subl
fistl
je
add
cs
jns
mov
icebp
les
jle
lods
xor
in
or
sbb
stos
add
xchg
push
pushf
mov
add
mov
cmpsl
pop
mov
jge
rcll
xlat
jb
inc
or
dec
push
sub
adc
pop
pop
imul
sbb
test
inc
sbb
jmp
icebp
pop
mov
insl
mov
rclb
inc
inc
cmp
jb
mov
fcompl
cmp
cmpsl
scas
gs
jo
stos
fldt
mov
jb
cltd
xor
pop
out
jecxz
inc
mov
js
xchg
popf
je
sarb
push
fidivl
fucomip
sub
sub
mov
pushf
pop
gs
dec
fld
in
call
jmp
mov
pushf
fcoms
mov
mov
mov
iret
enter
jge
movsb
pop
fstpt
pop
cs
mov
inc
jle
fs
in
mov
and
ljmpw
insl
mov
std
push
lret
in
out
in
xchg
and
sbb
frstor
push
push
shll
xor
cmp
shll
push
mov
enter
mov
pop
or
outsl
jl
outsl
cwtl
adc
loopne
inc
aad
fisubs
or
sub
stos
xor
out
aas
cmp
add
mov
add
hlt
mov
xchg
loopne
mov
sbb
cld
mov
sub
cmp
stos
lea
test
pusha
outsl
orb
push
xor
mov
mov
mov
dec
jle
faddl
cmp
pop
bound
jl
enter
xor
mov
test
lods
fmul
mov
jle
dec
jbe
inc
sbb
xor
lock
and
xchg
lahf
mov
inc
cmp
add
test
adc
xor
xor
insb
lea
xor
or
cmp
mov
cmovnp
testl
daa
cli
imul
pushf
data16
out
mov
sbb
jecxz
pop
cmpsl
push
inc
andl
fdivs
je
mov
sbb
jecxz
nop
sub
push
mov
cmp
pop
sbb
dec
ds
adc
xchg
shl
adc
aaa
push
mov
test
int
fmul
call
lods
cmp
cli
cmp
in
jecxz
add
mov
xchg
jo
fs
enter
out
jmp
rcll
loopew
and
jmp
push
mov
daa
sbb
popf
inc
adc
jecxz
or
inc
lods
push
ljmp
lahf
pop
and
jg
loopne
xchg
xchg
cld
mov
jb
daa
aas
and
sbb
jae
adc
iret
jae
movsb
xchg
sub
xchg
sbb
fsubrl
mov
out
fisttps
iret
pop
movsb
xchg
and
sbb
gs
mov
lcall
fistps
fists
andb
sub
sbb
aam
fidivrs
sub
ss
adc
add
fidivs
cli
jl
enter
adcb
jb
repnz
test
test
cmpsl
inc
mov
aaa
stos
movsl
sub
mov
data16
inc
icebp
dec
lret
out
xor
xor
mov
dec
adc
inc
iret
push
add
and
and
jle
xchg
add
mov
addr16
inc
mov
inc
adc
push
jp
mov
pop
jnp
es
out
stos
into
lret
mov
aam
mov
xor
push
pop
aas
aad
inc
cwtl
cmp
pop
fs
xchg
pushf
sti
ds
jecxz
jp
xor
inc
jg
addr16
pop
roll
push
lods
mov
adc
mov
xor
cmpsl
call
xorb
daa
je
pop
aam
adc
repnz
outsb
jp
arpl
test
push
rcrb
sub
out
insl
add
cmp
jmp
or
cmp
shl
std
jne
je
pushf
dec
push
inc
xor
in
out
jecxz
adc
xlat
repz
imul
dec
cmp
pop
int
or
popa
sbb
popf
nop
and
loopne
adc
pushf
std
gs
push
cli
in
and
int3
lods
lea
sub
insb
ds
mov
data16
sub
cmp
xor
divl
and
stc
push
loope
movsb
repnz
scas
rcl
dec
xchg
adc
cmp
pop
addr16
and
xchg
andb
sbbl
mov
jle
sub
test
cmp
xlat
fwait
stc
iret
xchg
pop
and
jo
call
ja
xlat
push
mov
faddl
sarl
ret
rcrb
xor
insl
mov
into
pop
xchg
mov
pop
adc
into
mov
push
mov
dec
mov
or
mov
mov
in
cmp
repz
pop
push
js
mov
ret
lret
loope
gs
push
xlat
xchg
jl
push
mov
push
sahf
fstpt
cmp
adc
sbb
lea
movsl
xor
sarl
iret
enter
jecxz
add
sbb
aaa
xor
and
aaa
repz
stos
movsl
and
std
mov
xchg
adcl
dec
in
popa
js
mov
jp
outsb
mov
mov
jbe
dec
jne
mov
fadd
cs
push
fimull
lods
stos
hlt
nop
cs
test
sbb
ja
sti
xchg
mov
cld
test
dec
jecxz
lods
cltd
bound
mov
in
inc
dec
aad
add
test
test
cmc
jmp
int
shll
les
ret
jge
inc
and
fs
andl
shll
xchg
cmp
and
or
jno
mov
stc
insl
add
mov
xchg
cli
jp
jo
inc
jg
sti
int3
ds
push
xchg
pop
mov
mov
popa
mov
sub
mov
popf
jns
jle
or
adc
push
arpl
inc
jbe
insl
cmp
ret
and
adcl
jae
fists
or
sub
add
push
push
push
pop
add
mov
xchg
mov
sti
push
dec
sahf
or
addr16
scas
jo
add
and
pop
add
mov
outsb
mov
pop
cmp
data16
mov
add
and
cmp
mov
mov
or
pop
andl
aas
rorb
add
push
repnz
jp
fisubrs
add
xchg
xorb
insl
ds
cmp
adc
or
pop
pop
dec
mov
xchg
dec
pop
std
inc
popf
popf
jp
aad
hlt
mov
ss
into
push
add
jp
jbe
sbb
cmpsl
scas
mov
lret
mov
jl
repz
or
imul
xchg
xchg
or
ret
lock
inc
stc
push
pop
jp
mov
mov
aad
cmp
aas
inc
jno
lcall
clc
add
rdmsr
clc
mov
mov
arpl
or
cmpb
insb
pop
mov
lret
negb
xchg
scas
das
loopne
jno
arpl
mov
mov
jno
fs
stos
mov
sahf
hlt
jbe
mov
cltd
sti
fwait
mov
imul
andl
fs
xchg
xchg
add
leave
cltd
mov
xchg
cmp
jo
inc
insb
or
xchg
test
shl
cmc
test
jb
popa
dec
and
dec
xchg
add
dec
insb
push
andb
or
jp
mov
sub
xor
inc
ljmp
fcompl
ljmp
xchg
ss
sbb
js
jbe
or
cmp
jp
mov
imul
repz
push
xchg
shl
bound
cs
call
dec
pop
push
mov
push
cmp
push
add
mov
fs
fidivs
add
mov
push
push
mov
popl
or
sub
imul
int
push
lahf
stos
add
inc
dec
es
mov
dec
mov
xor
push
pop
mov
mov
ud0
cmpsb
pop
test
push
push
imul
sub
clc
push
pop
bound
outsb
jg
negl
inc
mov
jno
push
mov
push
sti
loope
mov
frstor
ja
stc
fcmovnbe
mov
mov
push
pop
xchg
adcb
out
movsl
movsb
sbb
leave
test
inc
jae
mov
mov
mov
dec
in
ja
sbb
ret
pop
jo
scas
xchg
mov
push
adc
pop
out
jno
mov
inc
mov
mov
cmp
ret
sbb
test
push
lret
fbld
push
inc
imul
sti
faddl
xchg
incb
lret
subb
icebp
cld
cld
xor
pushf
sbb
movsb
inc
and
leave
popa
cwtl
scas
imul
inc
jl
scas
sbb
fldl2t
add
inc
inc
hlt
mov
out
rorl
xchg
inc
lods
push
adc
jnp
in
sbbl
xlat
sahf
jne
jl
shrb
fnstsw
xchg
pop
ret
rcrl
inc
pop
jnp
fbld
or
lds
jmp
xor
fimuls
sbb
popf
cmc
mov
mov
adcb
rolb
loope
mov
sbbl
mov
mov
stos
out
push
push
fldl
ficoml
jp
or
jns
test
sub
pop
subb
fcompl
lcall
xor
sbb
add
inc
dec
leave
or
lds
loope
cwtl
je
adc
in
sbb
fdivrl
cmpl
or
dec
imul
push
sarb
ss
scas
cld
jp
inc
es
fxam
ja
xchg
mov
sbb
int3
jae
mov
iret
mov
jns
cmc
mov
in
in
cmp
jl
dec
int3
sti
inc
or
xchg
shll
insl
mov
dec
les
push
fsubl
ljmp
mov
xlat
out
iret
xchg
adc
add
outsb
ja
jg
inc
xor
jno
push
lods
mov
pusha
ljmp
out
fisubrl
out
imul
or
imulb
std
cmp
jbe
pusha
xor
pop
xchg
add
sti
dec
test
lock
adc
push
add
lods
mov
adc
aam
ret
xchg
test
jl
jp
xor
xor
pop
sbb
scas
or
popa
fcoms
imul
mov
or
fsts
mov
imul
int
xchg
cld
jg
pop
adc
mov
xchg
mov
cli
lods
xchg
out
hlt
stc
scas
pop
imul
and
push
cmc
scas
iret
cmc
sbb
lret
and
out
xchg
fstl
out
jae
xlat
dec
jp
sbb
jb
cltd
jb
rcr
bound
sahf
sbb
pop
push
movsl
and
xorb
sarb
push
mov
and
adc
cs
test
add
aad
nop
jnp
dec
xchg
shll
push
mov
ret
add
inc
mov
stos
fwait
pop
and
jnp
roll
clc
dec
stos
rsqrtps
push
mov
dec
test
dec
jl
mull
cltd
sbb
add
call
xchg
outsb
xchg
pop
inc
push
mov
aad
jecxz
leave
dec
fld
mov
inc
negl
cmpsl
call
fwait
fs
push
fwait
xor
movsl
cs
outsb
fs
dec
pop
sbb
adc
rclb
adc
lcall
or
pop
push
bound
insb
mov
js
add
pop
xlat
mov
ss
arpl
mov
mov
xchg
mov
push
xchg
or
cmp
jmp
or
pushf
or
inc
rclb
or
xor
or
test
orb
fstps
or
cmpsl
fbstp
pop
add
stos
ss
pop
sub
or
daa
pop
sub
xlat
lea
jmp
adc
pop
push
xor
loop
es
mov
popw
shrb
scas
shl
gs
mov
inc
xchg
fisubl
cld
sbb
mov
cwtl
adc
dec
test
mov
aas
add
xor
insl
push
mov
repnz
call
jmp
cmp
dec
mov
scas
mov
dec
divb
push
roll
cmp
dec
cwtl
xor
bound
jmp
ja
inc
dec
or
inc
add
movsb
inc
mov
insl
sub
insl
mov
inc
outsb
loope
sahf
data16
movsb
adc
cmp
clc
ret
mov
xchg
xor
test
divb
xchg
push
xor
mov
cli
dec
andb
mov
bound
xor
enter
cmpsl
out
pushf
jae
repz
mov
mov
insl
aad
xor
inc
negl
lret
mov
das
stc
jb
mov
leave
mov
scas
roll
addl
movsb
jae
or
xor
pop
movsb
cmp
add
mov
insb
push
int3
push
outsl
mov
mov
mov
push
lret
pop
imul
mov
sbb
pushf
in
and
clc
mov
cmp
adc
movsb
fildl
test
push
push
add
or
sbb
pop
jne
jge
stos
stos
in
out
outsb
xor
enter
xchg
jne
xchg
inc
ja
loopne
mov
lret
and
jae
add
xchg
in
daa
sahf
iret
shlb
and
inc
lret
mov
scas
mov
pop
sbb
or
push
push
int
sbb
mov
cs
mov
lods
out
imull
mov
sbb
lret
sbb
into
adc
xchg
out
add
xchg
or
mov
mov
cli
jb
rorl
jecxz
pop
mov
add
ret
scas
scas
shlb
xchg
xorl
xorb
fwait
fs
stos
out
jnp
mov
push
push
scas
mov
inc
xor
out
xlat
scas
icebp
inc
cmp
mov
adc
xchg
sub
fldl
jp
scas
adc
jno
cmp
hlt
inc
sti
gs
mov
in
add
ja
pop
cmp
cld
inc
fdivl
in
cwtl
xchg
clc
in
leave
rcr
xor
out
jp
push
lret
jecxz
or
pop
jge
repnz
nop
pop
xor
adc
hlt
je
test
xor
ret
xor
negl
outsb
sub
stc
dec
outsl
dec
sbb
or
es
leave
loop
sub
or
mov
push
xor
mov
nop
jnp
and
mov
out
dec
int
ficoms
icebp
cmp
enter
testl
fs
loope
hlt
add
imul
mov
adc
xchg
in
xchg
insb
subl
cld
pop
adc
push
stos
shr
adc
icebp
daa
xchg
nop
mov
add
sbb
sbb
jp
bound
sbb
mov
xchg
mov
push
popf
or
jne
push
mov
adc
xor
cmp
mov
cs
jl
xlat
jns
jle
cmpsb
negl
jns
scas
outsw
sbb
cmpsb
fwait
pop
pop
push
lea
lock
test
mov
push
aaa
add
push
and
xchg
inc
cwtl
add
daa
int3
lcall
pop
mov
mov
xchg
jnp
leave
cmp
cltd
insb
fidivs
mov
xchg
clc
dec
mov
or
and
addb
rolb
nop
aaa
daa
pop
adc
xor
pop
hlt
lret
ret
xor
clc
mov
stos
xchg
icebp
sub
add
push
movsl
sub
neg
ret
xchg
mov
sbb
ljmp
cli
loopne
out
xchg
fwait
jp
cmp
xchg
popa
addr16
pop
jl
in
ljmp
xchg
sub
mov
fists
clc
jne
fsts
push
test
cmp
inc
sti
iret
dec
int3
cmp
cmp
or
ljmp
sahf
pop
mov
decb
xchg
dec
or
aas
mov
bound
xchg
inc
pop
aaa
add
or
shlb
test
js
andb
mov
insb
or
mov
and
or
cmp
out
adc
add
jns
pop
pop
ljmp
pop
out
pusha
jmp
add
adc
gs
dec
jne
jg
gs
push
leave
xchg
and
pop
cld
and
sbb
sub
je
mov
jle
rol
mov
dec
mov
stc
push
cmpl
outsb
imul
sbbl
test
xchg
sub
nop
cmp
js
outsl
jmp
pop
xor
push
cs
mov
test
and
outsb
adc
cmpsl
les
dec
jb
shl
jno
aaa
popf
xchg
sbb
leave
iret
ljmp
mov
add
xchg
stc
mov
insb
adc
add
dec
dec
and
add
repz
add
jno
orb
dec
xchg
sub
ss
adc
mov
xchg
fistps
stos
lock
popa
les
lcall
repz
mov
enter
sub
fcoml
test
icebp
jg
adc
add
imul
add
int3
cltd
sbb
das
or
in
lock
push
push
sub
ror
test
sub
adc
icebp
cld
nop
pop
aad
jb
mov
sbb
xchg
insb
dec
jle
out
sbb
scas
dec
int3
mov
loopne
mov
je
dec
mov
cmp
je
cli
mov
mov
or
lea
cmp
fs
or
fucomi
jp
xor
cmp
sbb
adc
dec
not
cmp
notl
and
shrl
shrl
mov
sub
mov
add
jnp
jl
jo
test
mov
cmp
or
inc
aad
hlt
jle
cmp
or
lret
flds
dec
cmp
cwtl
adc
push
dec
or
add
int
sub
cli
mov
mov
cwtl
mov
push
fstl
test
cmp
dec
xchg
sub
cmp
popf
xor
pop
jns
xor
cmp
scas
mov
imul
shll
mov
inc
adc
enter
xchg
and
adc
sbb
pop
jb
nop
xor
sbb
loope
in
inc
mov
sub
ja
arpl
mov
fnsave
insl
fsubrs
and
pushf
jg
and
cld
fsubs
or
aas
sub
jg
aad
sbb
rcrb
add
push
outsl
sbb
mov
addr16
jno
fidivrs
jmp
sbb
mov
fistps
cltd
out
out
sti
repnz
xor
jle
sub
cltd
pop
out
pop
aaa
sub
mov
xchg
mov
inc
inc
loope
rcrl
mov
push
cltd
aam
rorl
add
lret
inc
push
jle
or
or
loope
mov
mov
sub
xlat
mov
js
dec
push
mov
push
adc
jg
into
es
je
sub
mov
pop
leave
inc
cmp
idivl
in
xchg
cmp
xchg
dec
adc
lds
adcl
mov
push
inc
pop
ret
pop
push
mov
pop
fsubrl
sbb
xor
ja
ret
mov
dec
add
rcll
or
mov
add
xchg
je
cs
rorl
and
xor
sahf
sub
imul
mov
xor
iret
cmp
jg
or
ss
pop
add
orl
ljmp
mov
rolb
cli
adc
sahf
cltd
sub
mov
jecxz
call
test
dec
push
out
lea
jnp
cli
mov
sbb
xor
dec
imul
pushf
push
sub
sbb
bswap
fwait
pop
daa
icebp
idivl
mov
inc
mov
mov
xchg
cwtl
mov
push
fistpll
mov
cmp
and
or
sbb
cmp
pop
fistl
cmpsb
sub
inc
shl
pop
icebp
out
mov
pop
inc
icebp
ffreep
ljmp
add
push
mov
adc
aas
pop
or
jge
jo
sbb
mov
js
popf
scas
arpl
xchg
inc
inc
dec
add
push
imul
cmp
aas
aam
push
in
cltd
add
jns
paddw
xor
out
mov
jp
adc
test
pop
xchg
xorb
inc
mov
decl
sahf
pop
add
sbb
and
inc
lea
out
repnz
cmpsl
pop
ss
mov
lahf
push
adc
jp
or
test
inc
sahf
mov
jmp
sub
jo
das
out
sbb
orl
adc
pop
mov
jns
mov
xor
xchg
imul
adc
and
inc
jnp
sbb
fs
jae
ljmp
arpl
test
lods
dec
xchg
mov
pop
add
ret
mov
xor
cmp
mov
or
xchg
out
cld
in
out
mov
lea
das
or
push
sbb
ja
and
shrl
sub
xchg
aaa
inc
cltd
mov
sbb
jns
pushf
adc
popf
pop
inc
inc
cmp
test
mov
dec
xchg
jae
pop
jg
stos
faddl
jbe
and
shlb
mov
lahf
mov
mov
xor
mov
xor
jbe
and
loop
into
xchg
pop
rep
rcrl
call
mov
fdivrs
pop
lods
cmpsb
into
and
loopne
and
cmp
in
adc
stc
xlat
inc
or
stos
pop
pop
mov
test
push
mov
jns
xor
pop
shrb
incl
jmp
popa
sub
pop
jmp
call
mov
mov
stos
and
lea
cmp
call
xlat
shl
add
scas
lcall
xchg
es
ja
adc
pop
std
popa
cld
not
lock
out
nop
pop
mov
insb
cmpsl
cmp
jmp
and
or
lods
je
cmp
push
push
dec
icebp
push
ret
add
xor
je
test
inc
dec
mov
sub
lea
sbb
lods
stos
xor
pop
icebp
xchg
data16
or
mov
test
inc
xchg
cld
or
cs
xchg
scas
cmp
imul
movsl
hlt
inc
lods
arpl
incl
sbb
imul
sub
pop
lods
data16
inc
or
mull
jnp
sar
dec
pop
jns
jnp
movsb
std
in
test
and
mov
addr16
dec
mov
pushf
sub
xor
mov
or
inc
xchg
xlat
popf
orl
inc
popl
jge
jno
int3
cmp
int
das
cwtl
shrb
scas
enter
inc
push
aad
jmp
xchg
inc
dec
jg
push
repnz
push
sub
jne
pop
sub
adc
rorb
lods
or
fistpll
mov
xchg
add
xor
and
pushf
cmp
push
cld
sar
or
jb
mov
pop
fwait
gs
inc
mov
inc
testl
or
jns
rcll
pop
or
jno
push
xor
and
popf
and
xchg
xor
xlat
mov
cmc
insl
xchg
lods
jb
or
aaa
jmp
test
out
enter
mov
or
out
jns
jecxz
xorb
sti
inc
imul
mov
enter
or
and
sub
and
mov
jg
mov
popf
mov
icebp
or
insb
adc
mov
aad
xchg
or
inc
lahf
fdivp
das
popa
cwtl
push
popf
cli
jp
lods
pop
scas
je
cmp
loop
jmp
jp
sti
mov
rcll
push
clc
aas
inc
and
lcall
or
in
ds
xor
rcrl
dec
jo
ret
subb
xchg
mov
dec
push
pop
sbb
sub
pop
fstps
fwait
out
xchg
out
loopne
mov
pop
add
xchg
jne
jns
pop
add
mov
popf
mov
dec
lock
flds
sub
popl
jle
mov
mov
mov
aad
roll
mov
sub
push
and
pop
cmp
mov
xor
xor
and
push
stos
add
fiaddl
inc
ljmp
pop
ret
mov
adc
adc
repz
adc
lock
cmpsb
pop
fistl
xchg
pushf
lret
adc
and
inc
test
fucomip
add
mov
fwait
loope
out
jg
dec
stos
jle
shrl
scas
jmp
enter
iret
xchg
pop
imul
xchg
xchg
stos
aad
ret
daa
ds
add
cmp
in
sbb
mov
inc
pop
lret
mov
add
stos
sarb
repnz
out
jg
mov
scas
das
adcb
jns
push
rclb
pop
mov
xstore-rng
cmpsl
add
mov
ret
lock
cmc
jg
fcomps
xchg
lea
add
pop
or
subb
lahf
inc
dec
push
xchg
movsl
add
hlt
fwait
xchg
adc
push
xorl
sub
test
mov
xorl
mov
les
push
rcrb
cli
xchg
negb
dec
add
mov
cwtl
std
adc
fstl
scas
sti
push
insl
ss
pcmpeqw
mulps
jp
cmpsb
xchg
ficomps
xor
movsl
mov
push
popf
lret
mov
mov
xchg
mov
ret
mov
push
add
pusha
jge
add
add
jbe
sub
sbb
sbb
dec
call
ja
xchg
and
push
xor
scas
lahf
or
imul
push
mov
xor
daa
xor
sub
adc
push
cmp
mov
cltd
mov
mov
sbb
mov
jnp
jge
dec
mov
mov
inc
xchg
out
leavew
mov
jae
mov
lret
rcrl
cmpsl
push
sub
xchg
in
jp
fstpt
icebp
xchg
add
or
fistl
test
add
cmp
nop
xchg
pop
loopne
popf
mov
xlat
adc
mov
inc
cmp
cld
cmp
or
push
in
in
shrb
push
popf
sti
jp
mov
dec
lock
rcrl
jns
test
cld
mov
test
push
outsl
out
bswap
sbb
pop
or
test
xlat
scas
das
leave
popf
jmp
sbb
jns
inc
add
dec
leave
jecxz
or
and
lea
mov
mov
xchg
xor
gs
xor
gs
daa
pop
mov
or
xor
lret
push
arpl
cmpsb
fldenv
inc
adc
ljmp
pop
push
ljmp
out
int
shlb
sbb
jbe
ss
and
push
or
mov
mov
dec
imul
ret
popf
xor
repz
sahf
lcall
jmp
test
jp
and
xchg
mov
inc
xor
mov
std
ljmp
aaa
test
ljmp
bound
mov
sbb
inc
movsb
fldcw
into
rdtsc
jne
adc
sbb
xor
mov
outsb
jbe
mov
xor
pusha
pop
mov
repnz
ds
mov
popa
ljmp
stc
mov
inc
clc
or
pop
or
sbb
fbstp
push
jne
pop
bound
clc
jnp
hlt
negb
adc
cmp
hlt
adc
inc
lods
cs
cs
cmp
pop
add
jg
jge
loopne
sub
and
sbb
push
repnz
shll
and
mov
jecxz
add
cmc
out
dec
push
ret
xor
or
in
scas
in
int3
aad
and
inc
std
andb
lock
sub
add
jp
lret
aad
xor
inc
arpl
mov
dec
jmp
mov
stos
into
mov
cmp
sahf
rol
daa
jo
push
cld
sub
test
xor
movsl
push
adc
push
cmc
mov
out
out
mov
jns
dec
push
sbb
imul
push
cmc
jle
pusha
jno
dec
push
jno
jge
xor
push
shrl
insb
out
or
lahf
aas
enter
cmp
cmpsb
imul
adc
cmpb
mov
movsl
movsl
iret
pop
dec
cltd
aaa
aam
test
sbb
cmp
addr16
mov
stos
inc
fidivl
mov
bound
push
neg
mov
leave
xchg
daa
mov
lds
andl
sti
pop
insb
jae
test
cs
arpl
add
out
mov
in
dec
arpl
aad
loop
xor
cmp
add
sbb
jmp
movsl
mov
out
sub
dec
and
add
mov
pushf
xor
mov
ret
daa
inc
sti
xchg
push
and
and
push
lock
push
mov
mov
stc
sub
sarb
ret
dec
imul
jle
sub
mov
arpl
rclb
xchg
dec
mov
addb
or
inc
sub
mov
inc
int3
mov
hlt
lds
cld
xlat
mov
pop
inc
cmp
mov
bound
or
cld
aas
inc
jb
nop
inc
rorb
dec
mov
cmpsb
cwtl
xchg
cli
cli
and
jne
or
mov
outsl
outsl
jnp
jno
nop
test
hlt
xor
popa
jecxz
adc
mov
shr
xchg
shl
cmp
or
out
mov
cmp
insl
pop
out
scas
pop
and
mov
push
out
xchg
movsb
add
xchg
sbbb
shll
pop
insl
inc
adc
mov
sti
dec
adc
jle
outsl
leave
pushf
std
add
aad
sbb
sub
dec
or
fcmovnb
cmp
popf
lock
pop
xor
lret
mov
mov
mov
or
sub
in
sub
fcoml
dec
xor
out
fisubl
sbb
push
fstpl
fidivrl
adc
xchg
dec
pusha
push
mov
fisttpll
dec
gs
and
cmc
xor
icebp
push
lcall
push
scas
add
out
push
stos
sahf
test
pop
cmpsl
mov
add
sbb
lcall
sub
les
sub
add
sbb
mov
pop
push
loope
cwtl
and
inc
xor
adc
add
xchg
sub
sbb
pop
mov
add
mov
lret
outsl
clc
push
arpl
imul
jp
mov
dec
jmp
rorl
pop
pop
fsubl
stos
shrl
or
movsb
inc
out
mov
adc
push
enter
filds
sbb
mov
jle
std
adc
xchg
mov
and
jmp
xor
leave
xor
sub
cs
loopne
mov
adc
xor
mov
dec
and
push
pop
stc
sub
cmp
xchg
xchg
push
nop
mov
jmp
scas
and
jb
xchg
jo
cmpsb
js
jbe
std
mov
andl
adc
pop
sub
adcb
mov
stos
loope
mov
xor
jecxz
push
and
mov
cltd
stos
nop
imul
adc
into
or
movsl
pop
sbb
pop
cmpb
mov
xchg
mov
pop
add
stos
mov
cwtl
dec
mov
push
push
push
out
lea
lret
shrb
int
lds
loope
mov
cmpsl
fisubrs
andl
aas
loop
mov
adc
or
fmul
loopne
std
dec
dec
or
xchg
push
cmp
insl
dec
jge
popa
outsl
lcall
xchg
mov
test
mov
or
push
sbb
in
pop
in
ja
adc
fwait
sbbl
leave
lods
jl
adc
ret
cmp
sbb
jbe
outsb
lods
dec
ror
adc
das
inc
in
int
in
gs
outsb
lret
xchg
push
rcll
in
or
faddp
aad
push
cmp
rcrl
lret
aam
mov
daa
mov
pop
mov
jno
add
pusha
filds
push
loopne
cwtl
int
jmp
push
sti
aas
shl
jecxz
lahf
sahf
cmp
jge
pushf
in
cmp
push
fcomp
push
mov
pop
mov
xchg
movsb
into
adc
arpl
outsl
jae
jb
push
xchg
or
cmp
pushf
inc
loop
mov
sub
lock
rcll
es
ljmp
add
rolb
cmp
repz
cmpsb
xlat
or
add
push
and
divl
fildl
mov
popa
pop
icebp
mov
inc
imul
jecxz
jecxz
jmp
stc
pop
sub
xor
fs
xor
cld
xchg
repnz
jbe
pop
mov
mov
lcall
mov
clc
cmpsl
popa
xchg
or
and
cmp
lcall
arpl
mov
imul
add
pop
testl
sbb
sub
adc
test
pushf
ja
inc
xor
inc
fistpl
push
mov
inc
je
cwtl
pop
popf
out
repnz
mov
fiaddl
xor
or
in
inc
add
cmpsb
pop
xor
ds
idivb
xchg
adc
loopne
mov
int
inc
test
and
int
xor
and
pop
hlt
sbb
push
stos
ds
gs
pop
std
mov
mov
xor
pusha
lods
adc
sahf
add
in
mov
lret
jp
push
mov
jns
dec
jmp
sub
lret
mov
inc
mov
dec
sbb
imul
xchg
std
mov
int3
cmp
in
add
es
xlat
cmp
je
or
loop
mov
mov
loopne
ds
out
dec
scas
popf
xor
in
mov
sbb
jb
out
insb
lret
dec
vmovupd
mulb
mov
jnp
jle
lods
sub
sahf
xlat
dec
cmpsl
pop
mov
lcall
jbe
add
inc
sub
jae
enter
daa
in
icebp
int
ds
cmp
out
movsb
xchg
sub
push
orb
notb
or
xchg
stc
fisttps
outsb
xor
out
inc
sbb
call
addr16
loope
mov
sbb
and
mov
fstps
inc
sbb
add
mov
push
dec
leave
rcrl
gs
xchg
push
lcall
jns
pop
and
out
stos
sub
adc
lcall
pop
sub
int3
aas
out
xchg
sbb
filds
push
js
jnp
dec
push
jae
cmp
decl
jb
iret
jg
pusha
xchg
mov
mov
movsb
test
cmp
xor
xchg
int
lea
inc
iret
sub
in
leave
cli
adc
xchg
aam
roll
rcrl
lods
or
lods
bound
fldl
xor
sahf
mov
pop
sbb
pusha
lds
mov
push
js
ljmp
push
mov
repnz
xlat
pop
jle
call
mov
stos
mov
push
sub
mov
xor
push
push
dec
lock
sub
mov
rolb
dec
sub
lea
xchg
dec
adc
fimull
idivb
xor
cmpl
and
push
movsl
xchg
ljmp
aad
or
jmp
data16
mov
sbb
pushf
test
sbb
sahf
fldenv
or
jae
mov
add
sahf
fidivs
adc
sub
imul
insl
je
popf
add
jne
ss
cmpsb
aam
ss
js
cmc
stos
imulb
pop
sbb
sub
mov
bound
push
push
cs
pop
mov
or
or
mov
idivb
and
and
repnz
cmp
cmp
cmp
aam
dec
lds
dec
jg
cwtl
sahf
int3
fbstp
idivl
ljmp
sbb
xchg
and
jae
lea
rorl
fisttpl
mov
js
sbb
andl
push
dec
inc
fisubrs
outsb
xor
mov
jns
and
push
scas
insl
cmp
add
and
adc
clc
and
fwait
and
inc
sub
adc
aam
in
pop
xchg
repz
sub
xchg
adc
inc
mov
or
dec
push
fimuls
int
jg
inc
xor
xchg
and
xchg
mov
dec
pop
fisubrl
push
outsl
cmp
push
xor
xchg
je
inc
xor
push
adc
loope
sarl
scas
aam
out
jl
cmp
imul
xchg
jno
out
cmp
cli
shlb
xor
xchg
sbb
fsubl
dec
adc
iret
sub
fistpl
jle
not
or
pop
sub
sub
movsl
or
test
into
leave
xor
dec
jb
inc
xor
mov
or
jne
jb
jl
sub
mov
shr
xor
sbb
fistpl
xchg
adc
cs
and
mov
inc
in
push
adc
pop
inc
sub
xchg
aas
and
mov
add
scas
xchg
data16
cld
inc
adc
lahf
xchg
mov
and
mov
sbb
jmp
nop
enter
fwait
adc
sbb
and
into
pop
in
shr
cmpsl
cmp
pop
xor
jbe
mov
pop
mov
hlt
adcb
aam
mov
stc
scas
pop
test
mov
neg
mov
add
addb
xchg
fs
xor
cmp
pusha
xchg
adc
ja
cs
dec
fstp
dec
imul
and
sbb
dec
or
scas
or
lea
lret
shlb
aad
jbe
test
and
adc
ret
push
out
mov
mov
xor
dec
int3
movsl
mov
mov
pop
fisubrl
dec
es
scas
bswap
pop
jo,pt
fxch
push
addl
pop
negl
aaa
cwtl
mov
test
roll
out
mov
inc
xlat
enter
mov
cltd
lahf
push
dec
ljmp
sub
cmp
movsb
lds
sbb
iret
mov
mov
test
clc
mov
mov
jbe
add
testl
inc
pop
leave
cmp
xlat
mov
addr16
jne
pop
inc
neg
inc
add
aas
mov
jo
pushf
pushf
and
sub
cmpsb
loope
mov
loope
iret
sub
stc
xor
adc
mov
sub
test
xlat
add
popf
pusha
push
sub
inc
jne
sub
mov
inc
xor
jbe
adc
in
stc
pop
jge
subb
cwtl
jg
movsb
mov
nop
stos
mov
push
or
mov
mov
test
jno
mov
sub
xor
sbb
xchg
add
inc
mov
pushf
mov
xchg
push
andl
into
push
out
cmp
jl
cld
loop
add
and
or
add
leave
mov
mov
leave
adc
dec
dec
push
mov
dec
out
fbstp
lea
shlb
push
pop
out
scas
jmp
fsubrl
jg
repz
cmp
mov
mov
leave
mov
loopne
fst
dec
inc
loopne
es
jno
ds
push
push
pop
aas
add
icebp
and
pop
push
rolb
adc
mov
sub
mov
sbb
add
mov
icebp
faddp
xchg
pop
dec
lea
push
aad
test
lock
roll
sbb
mov
or
or
push
clc
inc
lret
test
int
add
jnp
mov
leave
jl
jp
inc
iret
cmpsb
addr16
adc
std
loop
imul
fld
shr
push
push
pop
pusha
fildll
sti
adc
ror
lret
xchg
jae
bnd
lcall
sti
dec
ret
popf
inc
gs
sub
shlb
push
push
and
add
lahf
imul
data16
jg
jno
jnp
sbb
mov
jo
xchg
pop
movsb
pop
daa
lds
jg
and
cmp
loopne
lods
sbb
rclb
add
push
ljmp
sbb
add
fsubrl
cli
test
jne
repnz
jae
mov
pop
orl
imul
inc
in
fs
mov
sub
xchg
stos
sub
movl
lods
out
subb
icebp
rclb
sbb
pusha
or
fld
jne
push
stc
shll
movsb
jo,pt
push
sbb
jmp
push
jnp
lds
and
hlt
add
pusha
popa
xchg
in
push
mov
inc
test
inc
jge
scas
sti
hlt
push
sub
ret
lahf
sub
mov
pop
daa
stc
imul
mov
aas
mov
or
push
mov
das
inc
cmp
out
jmp
stc
leave
aad
cmp
gs
stos
mov
or
push
adc
dec
and
dec
mov
mov
or
insl
mov
pop
jmp
sbb
add
push
pusha
pop
inc
xor
jmp
pop
lahf
push
lods
pop
loope
add
jb
jecxz
mov
xchg
mov
imul
jnp
test
or
mov
adc
cmp
clc
mov
inc
mov
ret
add
jno
mov
mov
mov
cltd
call
push
and
lea
mov
xchg
rcrl
into
ja
inc
jecxz
shrl
inc
idivb
and
mov
outsb
mov
inc
inc
es
pop
push
mov
sbb
xchg
outsl
push
leave
push
inc
jge
push
pop
aam
icebp
jecxz
xchg
or
jle
pushf
push
lea
sbbb
ljmp
xchg
test
push
shll
pop
icebp
and
ja
or
fbld
xor
pop
sub
sub
frstor
into
add
in
femms
push
mov
adc
inc
pop
xor
iret
js
push
nop
pop
insl
sub
jnp
sbb
mov
add
push
xor
stos
shll
adc
sbb
lret
inc
insb
jo
inc
pop
jmp
sbb
pusha
fwait
cmp
push
xchg
sbb
lods
xchg
hlt
xchg
jle
pop
test
sbb
or
jnp
add
xchg
in
fdivl
mulb
cmp
lea
fistpll
rclb
mov
xchg
fwait
mov
inc
inc
mov
fmuls
stc
xchg
flds
sbb
pop
stc
pop
sbb
mov
icebp
and
call
pop
push
jmp
jb
sbb
adc
int
addl
mov
inc
mov
and
leave
and
data16
addr16
mov
push
rcrl
jecxz
sub
jb
jge
or
cmpsl
or
std
jae
stc
ss
daa
and
stos
ja
decb
ss
mov
es
mov
stos
sbb
pop
test
inc
imull
xchg
pop
out
jns
dec
mov
xor
out
mov
mov
ret
or
ljmp
xor
pop
mov
scas
push
add
push
stos
jle
and
test
add
out
dec
push
arpl
mov
xchg
add
shll
test
arpl
sbb
jo
dec
pop
cmpsl
mov
or
push
fmulp
scas
nop
popa
sti
out
out
mov
hlt
mov
outsl
imul
pop
orl
mov
movl
mov
mov
rcpps
and
jb
mov
mov
imul
shl
rol
insb
mov
lds
mov
or
jle
lods
mov
dec
clc
push
inc
mov
cmpsl
mov
out
pop
mov
cld
mov
sub
sahf
adcl
inc
and
mov
mov
ret
ds
leave
mov
gs
sub
int
mov
jg
lods
sbb
test
pop
mov
fsub
push
scas
loop
dec
jmp
push
add
cs
imul
cmpsb
or
and
jmp
dec
ret
or
hlt
in
bound
push
mov
dec
mov
cld
mov
jmp
test
insb
xor
sbb
dec
pop
std
xchg
cmp
aam
leave
cwtl
mov
xor
scas
lock
call
xlat
das
sti
arpl
pop
mov
sub
mov
add
fistps
and
mov
push
adcb
push
sub
adc
shrb
sub
sub
xchg
popa
push
daa
xchg
push
cmpsb
xchg
mov
ja
sbb
add
xchg
rorl
jle
adc
and
in
insb
pop
add
cmc
sub
into
data16
mov
out
dec
stos
mov
das
dec
xchg
jo
movsb
lea
mov
test
cmpsl
loop
dec
lret
push
sti
fs
jne
hlt
mov
push
lahf
mov
and
dec
adc
sub
xchg
sbbl
neg
btc
inc
iret
xchg
js
push
icebp
fisttpll
mov
imul
pop
mov
clc
push
loop
push
or
adc
xchg
test
repnz
sbb
and
and
stos
ds
inc
adc
jns
jae
pop
fldl
adc
movsl
sti
adc
push
add
icebp
cmp
and
jge
push
cmp
arpl
pop
stos
in
push
push
pop
mov
push
sbb
cmp
mov
out
ljmp
fcoml
or
jbe
pop
dec
and
pop
adc
js
inc
insb
leave
fs
nop
fwait
mov
add
imull
cmp
adc
mov
push
gs
jns
mull
mov
jo
cmp
lcall
pop
mov
push
mov
call
push
mov
repz
ret
sub
jns
mov
idivb
inc
cmp
pusha
aaa
inc
sub
dec
clc
mov
and
aam
ja
stc
sbb
adc
mov
lods
lods
jl
nop
or
fldt
jge
sarl
outsl
jl
aam
nop
sub
add
lock
ja
pop
mov
dec
sahf
cmpsb
inc
xchg
js
pop
loope
pop
inc
inc
adcb
mov
add
mov
mov
test
stos
testl
stc
mov
ja
negl
cmp
lret
sub
jnp
push
sub
mov
nop
xchg
lret
mov
fildl
cmp
mov
pop
cmp
adc
outsb
mov
push
push
pop
push
fwait
shll
push
ja
jg
dec
jbe
iret
outsb
sbbb
inc
push
fmull
outsb
jbe
pop
faddl
ret
das
sbb
out
or
mov
sti
data16
mov
inc
inc
jg
add
mov
mov
xor
add
push
push
fsts
mov
movsb
sbb
push
stos
les
cs
push
mov
dec
xchg
fnstcw
mov
cmp
in
js
out
jmp
push
lods
ja
outsb
mov
sub
pop
int3
inc
xlat
shrb
inc
ret
mov
lock
pushf
add
aad
repz
std
popw
cmpsl
out
cld
cli
jbe,pt
aad
and
sahf
lock
jno
sub
cld
add
repz
int3
xchg
push
sbb
push
adc
cld
fidivl
ret
jno
adc
loope
sarl
out
push
pop
sbb
xlat
dec
or
xlat
adc
sub
mov
push
mov
in
jp
push
ds
cs
iret
iret
inc
loope
add
in
aam
add
and
add
fimull
cltd
ja
stc
cmp
out
cmp
pop
pop
std
cli
vcvtdq2ps
adc
lods
enter
sub
mov
cmp
cmpsl
sbb
lea
inc
xor
push
xchg
jp
popf
js
loop
insl
or
mov
or
jl
mov
pop
fst
aad
mov
sahf
jnp
pop
cmp
add
pop
xor
inc
push
push
shl
or
test
mov
sub
inc
mov
incl
fs
hlt
pop
xchg
ret
sbb
dec
jg
popf
mov
jae
add
push
sbb
xchg
adc
ss
dec
mov
jns
ja
or
push
sub
sahf
lcall
push
imul
int3
jmp
stc
pop
outsl
mov
popa
mov
jg
arpl
lods
icebp
sbb
out
and
rclb
pop
clc
or
and
xchg
pop
fwait
xor
lds
ror
jnp
xchg
dec
std
int
mov
outsb
adc
ds
loopne
or
leave
push
sbb
pop
mov
lock
pop
xor
das
int3
inc
dec
mov
lock
sub
add
jns
xchg
andl
add
mov
push
xchg
or
pop
push
inc
mov
shr
fucom
rcr
jl
aaa
adc
dec
sub
sahf
adc
adc
sub
cmp
sahf
push
call
jecxz
stos
and
fidivl
mov
out
or
clc
into
mov
test
aad
insl
inc
push
aad
lcall
jo
cwtl
fcmovb
mov
inc
inc
pop
add
xchg
scas
xor
jle
pop
jecxz
aad
insl
sub
scas
xor
push
testl
lods
ja
in
fcmovu
inc
test
xor
add
or
adc
push
sarb
add
push
xor
ja
mulb
inc
push
fwait
pop
jmp
fidivrs
outsb
sbb
xlat
xchg
ss
xchg
push
cmpl
pop
and
push
sub
or
mov
xchg
ljmp
jle
out
sbb
subl
in
inc
xor
lea
and
fisubl
sti
sub
rolb
push
pushf
push
fisubl
ret
ja
dec
ret
inc
lcall
cmp
or
cmc
jae
cs
subl
push
scas
push
sub
leave
mov
icebp
rclb
push
popa
inc
push
es
xchg
push
in
test
xor
hlt
mov
jg
mov
sti
addl
or
pop
add
xlat
es
fwait
aam
mov
icebp
dec
pop
aam
dec
or
xor
out
dec
push
dec
push
fs
dec
sbb
mov
xor
mov
jl
inc
imul
stos
outsl
mov
movsl
sbb
lret
pop
ret
adc
push
rorl
and
sub
loop
and
out
inc
imul
add
mov
and
fisubl
insb
jg
movsb
lcall
adc
mov
adc
fs
xor
daa
or
or
xchg
sbb
mov
outsl
pop
fistpl
cmp
in
dec
mov
pop
cltd
mov
cs
jecxz
popf
mov
mov
popa
pop
push
nop
sub
jl
out
out
inc
push
xchg
jmp
push
jne
int
jae
sub
sbb
mov
cmp
aad
scas
pop
xchg
add
hlt
xor
xor
cmpl
pushf
scas
sub
jns
cld
lahf
cwtl
scas
sub
pop
fwait
cmp
jae
aaa
dec
push
adc
dec
in
je
jb
jge
push
sub
sbb
jne
mov
dec
sub
shrl
std
gs
mov
add
mov
dec
popa
and
xchg
push
adc
lds
pop
pop
lods
popa
jecxz
push
and
ss
and
ds
int3
xor
divl
cli
and
mov
std
and
lea
adc
jge
decl
xchg
xor
sahf
mov
cltd
lods
popf
shll
pop
add
fcoms
out
rorl
cmp
repz
cmp
jb
mov
pop
sub
inc
add
inc
cmp
das
push
lea
mov
adc
mov
adc
adc
mov
aad
orl
push
in
lret
pop
stc
or
mov
imul
jecxz
loope
xlat
jp
dec
pop
push
pop
mov
push
in
pop
push
mov
fimuls
xchg
fcoml
xchg
and
sbb
jbe
cmp
test
jae
pop
enter
ss
xchg
pop
pop
outsb
inc
or
jmp
mov
dec
jl
cld
sub
lock
cmp
cmp
inc
sub
inc
jae
mov
cmp
mov
and
subb
shlb
jmp
rcrl
xchg
out
xchg
out
push
dec
dec
fstpt
xchg
sbb
or
or
arpl
xlat
imul
stc
inc
popa
test
not
xor
inc
lcall
dec
shlb
mov
adc
xor
pop
xor
es
jp
sarb
mov
inc
cmp
adc
push
addr16
pop
cmc
or
mov
cli
ret
xchg
mov
add
rorb
add
hlt
jno
add
sbb
sub
jb
in
mov
adc
fcoml
xlat
xchg
pop
outsb
push
lret
movsb
and
aam
xor
mov
popf
leave
push
pop
push
pushf
jns
ds
movsb
in
jne
sbb
divl
test
cli
push
jg
xor
xlat
push
mov
cmp
daa
out
js
pop
jle
cmp
push
pop
add
shlb
cpuid
in
mov
sbbb
daa
andl
push
cld
das
sub
xchg
lahf
mov
mov
test
test
into
xbegin
adc
jo
int
mov
adc
imul
ret
push
stos
js
add
push
push
les
cmp
mov
cld
pusha
jb
les
int3
push
negb
stos
sti
cmp
cmp
loop
or
mov
ljmp
insb
out
lods
test
das
mov
dec
push
add
scas
in
dec
add
pop
and
out
imul
fsubrl
cmp
outsl
sbb
or
aas
or
data16
sub
es
arpl
je
fbstp
sbb
in
xchg
inc
dec
mov
xor
out
cmp
daa
movhps
arpl
mov
jbe
lods
in
cmp
je
movsl
ljmp
ficomps
in
mov
cmp
push
es
shrb
push
mov
outsb
add
push
popf
mov
mov
repz
xor
xor
push
jbe
insb
xchg
rcl
adc
mov
lock
ljmp
jnp
cld
push
push
sub
sbb
ret
icebp
pop
lds
int3
out
jecxz
xor
scas
test
pop
push
mov
gs
sbb
sarl
outsl
nop
lock
insb
push
mov
ds
add
enter
add
outsl
rorl
xor
inc
adc
cmc
sub
daa
in
out
pop
lea
fimuls
pop
ss
imul
loope
nop
xor
sahf
ret
push
dec
xor
sbb
push
repz
divb
js
push
stos
cwtl
pop
div
xor
add
lock
test
mov
and
mov
mov
lcall
adc
dec
cmp
pop
cwtl
mov
and
stc
dec
push
mov
into
loope
ds
inc
in
lahf
mov
aad
adc
and
std
mov
xchg
mov
pop
pop
jo
int
sbb
sahf
or
xchg
pslld
pop
les
add
push
cmpsl
fsincos
inc
dec
xor
xor
aas
gs
fimuls
mov
hlt
or
fmul
addr16
lret
test
lret
ja
sub
mov
jb
push
push
mov
out
or
sar
sub
and
xchg
testb
lret
je
cmpsl
sbb
jl
mov
inc
mov
mov
cs
add
hlt
fisttpll
ljmp
es
lret
idivl
fwait
ret
jne
lock
test
mov
or
imul
mov
repnz
or
sub
add
dec
push
out
leave
ret
in
mov
sarb
inc
int3
jle
mov
lds
in
cltd
les
push
push
nop
fs
stos
and
ret
and
xor
sbb
jecxz
fildl
js
sbb
fsubr
std
sbb
jp
pop
pushf
jge
mov
pop
cmp
mov
popa
adc
jmp
push
mov
idivb
mov
aam
cmp
dec
push
pop
lds
addl
nop
or
ret
pop
fdivs
sub
adc
movsl
mov
sarl
adc
leave
xchg
cmp
pop
dec
sub
pop
lds
insb
add
les
mov
add
ret
out
mov
push
xchg
xlat
mov
push
inc
stos
aad
add
push
lret
mov
xchg
sbb
mov
lods
cmpsl
mov
jbe
in
jg
xor
push
sub
ffree
lock
pop
nop
cmp
lods
bswap
xchg
out
cmpsl
xchg
pusha
cltd
dec
imul
aas
jnp
std
xchg
leave
mov
push
std
fs
sti
and
test
pop
inc
out
iret
adc
hlt
mov
in
cmp
aaa
aas
jp
ret
mov
fcmovnu
sar
les
mov
jecxz
dec
lock
cmpsl
in
cs
arpl
and
or
mov
in
dec
imul
icebp
sub
jns
jp
sub
push
dec
pop
pop
sbb
dec
cmpsb
mov
inc
adc
inc
inc
lock
inc
dec
imul
sub
add
jo
insl
or
xor
add
fstl
xchg
aaa
sub
lods
add
ljmp
mov
add
pop
fnsetpm(287
sarl
or
into
fcmovnu
nop
test
scas
lret
repz
enter
es
cld
divb
sub
mov
imul
mov
daa
iret
sbbl
jnp
dec
pop
push
cmpsb
mov
mov
fcmove
cmp
ljmp
or
or
lds
pop
int3
pop
das
outsb
and
pop
mov
rcll
xchg
mov
mov
enter
and
add
mov
mov
lret
jmp
repz
rcr
addr16
out
mov
pop
arpl
and
sub
mov
adc
movsb
dec
cmp
fs
mov
push
jmp
sbb
dec
jl
arpl
add
shr
rol
dec
and
fstps
inc
push
add
ljmp
xor
cld
js
push
add
push
lret
mov
mov
loop
jg
pop
push
cmp
push
fidivl
lock
pop
push
insb
jne
mov
js
pop
cld
out
cs
jge
cli
cmp
pop
mov
rcll
xor
loope
jbe
aas
bnd
mov
adc
aas
pop
add
cmp
cmc
push
and
insb
test
sub
and
lods
jo
push
mov
jnp
push
xchg
jmp
sub
adc
aam
rcrl
idivl
push
imul
dec
fisttpl
mov
pop
mov
dec
pop
dec
push
adc
xchg
mov
out
in
int3
pop
pop
xlat
push
xchg
out
fwait
lock
mov
repnz
adcl
pushl
cwtl
xchg
in
in
mov
scas
iret
inc
divl
pusha
sbb
or
ret
scas
inc
push
out
movsl
pop
pop
fwait
mov
or
loope
lret
add
aaa
clc
add
dec
mov
pusha
sub
sti
dec
jb
lds
inc
sub
push
xchg
lret
pop
push
lahf
lret
dec
sahf
adc
ret
outsb
lock
sbb
shll
add
sbb
push
addb
mov
int3
xor
xchg
hlt
lods
cld
add
pop
push
cmp
push
mov
push
std
sbb
pop
insl
jne
cmp
ja
loopne
and
arpl
in
adc
mov
xor
mov
lods
sub
daa
xor
lcall
sarb
lret
push
fwait
out
in
std
xchg
push
and
adcl
mov
mov
xchg
scas
loopne
or
or
xchg
dec
mov
test
pop
aad
int3
test
in
les
mov
push
push
lods
cltd
dec
or
push
jmp
orl
mov
in
stos
fstpt
add
movsb
dec
outsl
fisttps
popf
lods
out
sub
add
add
fimull
in
push
jne
or
mov
scas
jmp
lock
xchg
pop
cs
dec
loop
xchg
ljmp
xor
addr16
shll
adc
daa
mov
or
iret
loopne
dec
ret
pop
in
mov
lret
cmp
add
andb
cwtl
daa
cmp
push
sub
fdiv
sti
stos
clc
pop
das
jae
mov
push
mov
into
sub
sbb
push
dec
lret
popa
cmc
in
scas
jmp
je
stos
push
or
push
jmp
xchg
sbb
and
jo
cmpsb
sbb
dec
bound
xor
pop
test
add
dec
mov
sbb
mov
and
fwait
xchg
call
or
xor
pop
loopne
xor
push
mov
sub
pop
fcomps
dec
aas
add
ror
push
negb
mov
loope
and
ds
and
repnz
sbb
cmp
rcrb
scas
xor
and
dec
std
lds
mov
mov
sub
movsb
fdivl
out
rcrl
push
stos
add
fbstp
jns
popa
les
fsubrp
mov
adc
lcall
pusha
pop
sub
aaa
xor
sbb
mov
fidivl
test
sub
push
test
fxch
jae
shl
and
fidivrl
and
hlt
or
es
push
jge
mov
out
and
out
adc
rclb
repz
mov
out
pop
or
pop
popf
pop
shlb
repnz
push
xor
movsl
lock
and
icebp
mov
hlt
out
or
jns
inc
push
rcl
mov
mov
push
or
jns
adc
add
cmp
push
cs
push
or
jno
push
je
adc
jae
mov
fsubr
cltd
push
fldt
mov
sub
outsb
jbe
hlt
sbb
cli
in
imul
jg
scas
sbb
pop
xchg
dec
pushf
loope
mov
cmpsb
test
les
ret
movsb
xor
loop
pushf
mov
jle
repnz
enter
mov
outsb
rol
pop
ja
inc
aaa
sub
mov
and
jns
lret
test
mov
out
ljmp
rorl
movswl
sub
add
out
adc
sbb
push
jl
pop
xchg
mov
mov
mov
cmp
and
repz
mov
jne
fbld
fmull
lods
mov
mov
push
jl
adc
or
xor
push
andps
sbb
sahf
sub
test
cmpsb
imul
mov
mov
cmp
aam
jmp
mov
sbb
sbb
mov
push
sub
inc
push
aad
cmp
ffreep
cmp
sbb
xchg
scas
rcrl
mov
or
out
jne
adcl
xor
stc
fsubs
cmc
push
cmc
hlt
pop
xor
mov
imul
cmp
repnz
mov
lods
insl
es
pushf
test
jnp
jmp
and
aad
jbe
fsubrl
cltd
stos
and
sbb
jae
mov
negl
mov
dec
bound
push
inc
sahf
pop
lret
pop
movsl
dec
aad
out
sub
repz
and
add
movsb
push
stc
dec
imull
pop
sub
inc
adc
push
and
sarl
scas
and
lret
shlb
cwtl
xchg
cmc
imul
add
rorb
bound
fs
jl
cmp
mov
int3
arpl
roll
mov
sbb
xchg
xchg
fldl2e
inc
pop
pop
sahf
cmp
into
xlat
cs
addr16
inc
stc
hlt
xor
gs
fnstsw
dec
rorb
lock
outsl
mov
outsb
cmc
adc
les
mov
inc
jmp
mov
dec
lahf
adc
add
and
inc
xlat
test
ss
les
cmp
stos
sahf
mov
test
push
leave
pop
or
pop
in
test
pop
adc
mov
sub
jbe
ja
ja
sub
cli
mov
test
mov
dec
push
pop
jb
scas
inc
inc
leave
mov
sti
cs
jbe
fcomps
cmpsl
inc
imul
cld
xchg
xchg
dec
jno
or
into
int3
sbb
push
fisttpl
mov
aas
jmp
je
cmp
pop
setg
xchg
inc
sbb
xchg
lea
sahf
push
inc
test
in
adc
push
scas
adc
add
push
or
xchg
fcomp
pop
xor
sbb
sub
adcl
pop
push
jmp
jp
mov
jns
mov
mov
mov
inc
into
and
mov
popa
enter
dec
leave
sbb
subb
and
cs
push
stc
lahf
add
jne
or
mov
pop
sbb
jb
cmp
mov
sub
push
pop
sub
ss
aas
orb
sub
das
sub
aam
pop
add
hlt
push
imul
in
push
mov
lahf
add
movsl
cld
jmp
dec
inc
mov
rcl
ja
and
dec
ds
imull
arpl
xchg
xchg
loop
orb
xchg
add
jno
ret
ret
dec
pop
mov
xchg
mov
push
sti
pop
dec
fnsave
push
cmpb
lods
dec
add
sub
std
or
cmc
and
fists
sbb
sub
xchg
mov
shr
roll
adc
dec
xchg
mov
xor
or
or
add
xor
out
repz
dec
add
ljmp
inc
sbb
fs
std
jo
lods
lods
sbb
mov
pop
sbb
mov
mov
mov
insb
mov
push
push
jg
sub
ja
push
fldcw
enter
cmpsl
adc
lock
mov
xchg
jns
jmp
fcomi
rcll
and
xchg
and
fwait
push
icebp
mov
hlt
out
testl
int
jg
sbb
lods
or
mov
lea
and
xorl
xchg
mov
jnp
insb
cmc
fcmovnu
push
arpl
es
into
xchg
fisubrs
ja
and
add
lcall
iret
xchg
push
or
aas
or
std
je
sub
cmpsb
mov
xchg
ja
das
int
loop
mov
add
iret
add
lds
push
sbb
daa
jle
pop
orl
xchg
mov
add
lret
xor
cmp
xchg
push
aam
mov
mov
adc
adc
push
xchg
dec
mov
sub
mov
out
ds
jg
dec
hlt
mov
enter
out
dec
push
shrl
test
sbb
xchg
call
mov
jnp
addb
sbb
not
mov
xchg
cld
add
inc
ljmp
mov
stc
jle
rolb
pop
lcall
fwait
sbb
pop
push
outsb
xor
shl
mov
xchg
inc
xor
xchg
xlat
or
sub
aas
cmp
stc
ret
cld
hlt
fisttps
in
mov
lea
rcll
xchg
inc
mov
and
sbb
sub
mov
stos
add
jecxz
outsl
inc
mov
mov
or
pop
dec
rcr
mov
pop
cld
xor
jle
outsb
daa
stos
mov
mov
xchg
clc
test
ror
out
inc
adc
stos
sub
nop
cwtl
jo
imul
imul
add
mov
xor
fldcw
addb
adc
sbbb
push
pop
rcl
adc
nop
loop
movsb
movsb
mov
cmp
pop
sti
pop
dec
adcl
ror
push
nop
cmp
roll
mov
ror
xchg
sbb
insl
pop
dec
cmpsl
sti
arpl
lret
push
lcall
addb
dec
jns
dec
ret
nop
mov
mov
stos
lods
push
jmp
fs
xor
xchg
cmc
das
add
fwait
testb
call
mov
test
shl
push
arpl
loope
movsl
rolb
fcoms
mov
push
jge
xlat
rol
out
xor
repz
or
roll
pusha
xchg
jo
sbb
jmp
lock
lcall
mov
neg
hlt
mov
pop
mov
movsl
fcmovnbe
je
in
push
mov
jne
xchg
dec
int
out
adc
nop
push
adc
data16
jle
lret
adc
push
fmul
adcb
lcall
mov
sbb
adc
adc
or
xchg
call
add
push
jnp
mov
out
pop
mov
outsl
jmp
jno
jg
mov
and
pop
scas
dec
push
mov
dec
test
mov
mov
out
mov
ret
movsb
repz
hlt
out
mov
or
jns
lret
jo
mov
fmulp
mov
jo
test
repz
dec
pop
xor
push
pop
fiaddl
sbb
and
enter
out
inc
cmpsl
push
fs
adc
xchg
mov
add
dec
pop
sbb
int3
int
xor
pop
xor
out
pop
jmp
outsl
dec
addr16
mov
cmp
mov
mov
mov
popf
dec
push
jbe
dec
aam
das
push
fcmovb
movsb
fists
int
adc
inc
scas
lods
cmp
mov
imul
imul
sub
xchg
xlat
xor
jmp
fmull
sub
push
or
pop
lods
add
loop
icebp
fyl2x
push
jle
nop
mov
mov
fs
pop
icebp
lods
and
out
les
cmp
sahf
pop
js
popa
loope
data16
icebp
sub
nop
data16
pushf
fsts
add
sub
mov
outsl
leave
dec
xlat
pop
adc
mov
ret
push
mov
in
loope
fists
sbb
cmp
xor
inc
nop
jne
loope
movsl
sub
mov
ja
ret
rol
hlt
jae
sbb
sub
sub
bound
mov
into
clc
fdivr
or
mov
pop
std
mov
pusha
jne
insl
add
xchg
mov
push
xchg
cmpb
ss
outsl
ret
push
mull
in
inc
cmp
leave
cmp
pop
fistl
inc
and
jbe
push
mov
add
inc
faddl
insb
sbb
stc
xlat
addb
mov
cltd
stos
push
aad
loope
mov
repnz
outsb
xor
add
push
sbb
call
cmp
pop
aaa
mov
add
nop
out
inc
insb
test
pop
sbb
ljmp
popa
xor
gs
loopne
loop
mov
xchg
mov
or
inc
loop
jo
cs
pushf
jns
dec
adc
daa
cld
cmp
sbb
xor
jle
daa
push
loope
cwtl
add
shll
sub
pop
mov
sti
bound
hlt
add
out
repz
movsl
pop
cmc
js
aaa
mov
push
mov
xchg
jnp
out
jbe
loope
das
test
xlat
lcall
lcall
repnz
mov
cld
les
fwait
xchg
or
and
jp
adc
mov
lret
push
adc
xchg
push
mov
jp
xor
cmpsb
inc
adc
or
mov
call
push
lock
fsts
ret
mov
xchg
lret
mov
hlt
insl
cmp
aad
popf
inc
cli
adc
into
insb
xchg
pusha
pop
aam
xchg
sub
mov
mov
test
aaa
pop
in
lret
push
mov
ss
pop
hlt
xchg
rolb
xchg
or
ds
mov
cmpsb
je
fldenv
aam
mov
or
sbb
adc
mov
popf
fbld
ja
arpl
stos
lret
leave
pop
sar
pop
mov
shll
cwtl
rcrb
lea
andl
loopne
out
pop
lcall
fucomi
lret
add
adc
mov
cmp
mov
cmp
xchg
xchg
out
ljmp
iret
mov
and
shlb
scas
sbb
mov
push
ds
les
pop
call
mov
adc
mov
jl
fidivrl
xor
jae
xchg
hlt
imul
daa
jp
dec
xor
or
adc
addr16
adc
pop
cmp
punpcklbw
test
add
cmp
cltd
scas
fistpl
push
add
fwait
mov
xlat
cmp
dec
jb
mov
out
movsl
pop
sbb
and
xchg
lock
insb
test
cmp
mov
lds
cmp
scas
and
cmp
push
test
mov
outsl
outsl
or
outsl
pop
pushf
xor
lock
xchg
imul
leave
cmpsl
cmpsl
sahf
or
in
mov
and
ret
insl
cmp
es
jno
out
dec
sti
or
repz
rol
test
aaa
mov
xlat
jns
jg
sub
enter
dec
shr
fdiv
jno
fdivs
and
lods
adc
hlt
jb
push
lret
pop
fistps
das
jmp
mov
xlat
mov
iret
mov
and
jl
fildll
sti
or
cmpsb
dec
addr16
push
insl
add
mov
ret
jne
aas
and
mov
in
xchg
cmc
xor
cmova
loope
mov
jp
pop
pop
push
hlt
leave
rorb
inc
decb
int
loopne
pop
adc
adc
pop
clc
icebp
push
add
aad
dec
cld
es
call
mov
add
dec
popf
cmp
xor
push
jo
xor
insb
mov
fistl
or
push
aam
mov
fistps
sbb
ds
aas
out
repz
mov
insl
dec
imul
in
lret
jo
ret
cmp
mov
jle
hlt
dec
hlt
mov
lret
pop
lahf
fbld
mov
popa
ret
mov
xchg
andb
rolb
or
bound
jns
jnp
lea
in
rorl
dec
pop
fxch
cmpsl
mov
pop
out
sbb
jge
lret
leave
cmp
repnz
sbb
dec
push
pop
jno
sbb
test
stos
xor
inc
cmp
test
dec
cli
ret
mov
je
inc
push
push
pop
mov
xchg
dec
mov
push
hlt
sbb
mov
xor
iret
sbb
lcall
mov
cmpsb
jno
xchg
sub
inc
cmp
ja
imul
mov
out
xchg
adc
cmp
cmpsb
rorl
mov
scas
fisubl
loopne
ljmp
pusha
out
xlat
and
int
push
pop
or
into
mov
cltd
push
pop
cmp
rorl
cmc
lret
das
adc
inc
jmp
pop
les
shrl
in
rorl
ficompl
xchg
xchg
fwait
sbb
dec
add
lods
nop
mov
cmp
push
mov
stc
shlb
jae
cltd
dec
dec
push
cwtl
jb
aaa
and
mov
jno
stos
imul
movsl
jl
lret
repnz
push
in
sub
leave
xchg
shrb
mov
jmp
fs
js
sbb
xchg
ja
pop
stos
in
push
and
jo
inc
xchg
mov
sbb
push
sub
lahf
cmp
fcmovu
inc
insb
sbb
ljmp
jle
push
mov
loop
adc
out
push
mov
popf
in
lea
inc
bound
xchg
pop
inc
outsb
and
lock
sub
popf
jae
adc
sub
rol
push
mov
sbb
icebp
mov
xchg
ficompl
jle
popa
mov
or
xor
and
adc
int3
sbb
or
jb
inc
pop
cmpsb
subb
jae
cli
aaa
dec
clc
fnsave
arpl
pop
data16
pop
jmp
or
jno
loope
xor
shrb
testl
leave
aad
lods
pop
shl
mov
or
mulb
lods
sub
jbe
ds
into
lods
scas
cmp
inc
inc
pop
push
out
bound
enter
inc
cmp
cmp
popa
inc
mov
jp
jno
and
mov
iret
mov
adc
rcrl
fwait
xor
push
ficompl
sbb
pop
jmp
push
scas
xchg
sub
ret
ficomps
lods
clc
adc
aas
mov
lds
mov
fwait
aaa
mov
mov
sub
scas
movsb
lods
imul
shr
push
jp
xlat
mov
sbb
cmpsb
mov
aam
and
repz
cwtl
inc
sbb
mov
and
push
cmpsb
cmp
pop
dec
lret
iret
rcrb
outsb
jo
jl
lahf
cmp
xchg
push
ret
mov
cmc
lods
xchg
sbb
cmp
in
xor
add
fistl
or
jp
movsb
cmp
loope
sbb
or
das
jecxz
mov
sahf
insb
ss
sbb
xchg
xchg
cmp
bound
xchg
lea
mov
sbb
sbb
jle
fwait
incl
dec
cmp
dec
xchg
stos
shrl
jge
movsl
test
xchg
les
insl
movsb
push
jns
clc
lea
sbb
pushf
movsl
sbb
sbb
mov
jmp
or
pop
or
add
pop
xor
jl
fisttpl
in
jp
push
inc
clc
inc
stos
cmp
xor
sub
add
push
jne
aad
addr16
pop
int3
sbbl
cli
mov
adc
sbb
and
mov
in
mov
sti
aad
jmp
fmuls
dec
call
pop
mov
mov
fisttps
std
sti
jbe
xor
arpl
xchg
out
adc
sahf
pop
adc
lcall
xchg
testb
pop
dec
lods
mov
jge
insb
mov
cmpsl
mov
rcll
sbb
arpl
mov
sbb
arpl
mov
push
cmp
aam
mov
push
jb
out
mov
dec
pop
icebp
lods
int
outsb
test
call
adc
jno
or
into
stos
mov
pop
adc
aaa
out
mov
xchg
xchg
dec
ror
jg
loop
imul
loopne
sti
data16
mov
mov
adcb
scas
and
test
fiadds
mov
mov
sahf
jecxz
push
dec
xchg
pop
pop
test
lods
imull
push
fildl
add
or
mov
mov
mov
or
das
push
adc
mov
and
movsb
cs
lock
ret
jle
mov
pop
lods
pop
jb
mov
std
xor
aad
lcall
xor
pop
xor
pop
movsb
adc
fmul
mov
xchg
xor
jno
dec
pop
mov
pop
pushf
jnp
fsubrl
xchg
test
fidivrs
daa
inc
enter
lahf
dec
pop
jmp
sbb
arpl
or
adcb
mov
stos
mov
lahf
inc
std
mov
arpl
outsb
adc
jns
or
call
ss
movsl
add
adc
leave
pusha
jne
fcomi
mov
jg
mov
leave
data16
bound
popa
in
jmp
fistpll
push
mov
insb
arpl
add
dec
int3
xchg
mov
adc
js
mov
nop
or
mov
lahf
dec
and
add
imul
test
xor
ja
mov
outsl
mov
jns
jle
cmp
cs
adc
cld
jbe
pushf
pushf
daa
cmp
pop
lock
mov
xor
js
inc
ds
jns
xorb
add
sbb
add
pop
xchg
mov
xchg
out
mov
loope
ret
inc
sbb
rcrl
xor
mov
pushf
xor
aad
or
dec
lcall
repz
jb
es
push
jmp
xor
cs
xlat
fisttpll
cld
je
int
outsb
enter
cmpsb
inc
dec
jg
cmp
jnp
jo
repnz
mov
adc
fwait
stos
fdivl
xor
sbb
mov
push
and
cmc
enter
sub
xchg
lret
insl
ds
sahf
jmp
mov
sbb
xchg
int3
ficomps
jl
push
outsl
lea
je
fisubrl
insb
lods
andb
mov
mov
xchg
cli
mov
lret
repnz
cmc
jp
jge
mov
roll
fistpll
cs
sbb
push
ja
loopne
test
jae
mov
shrb
out
mov
das
mov
or
push
or
shlb
ret
cmp
mov
and
jae
insb
push
int
lcall
in
mull
lea
sub
popa
lcall
adc
mov
cmp
ss
mov
adcb
repnz
mov
add
push
adc
sahf
clc
scas
fs
mov
nop
push
dec
mov
push
inc
es
std
mov
xlat
and
and
add
lret
jno
stc
arpl
dec
hlt
push
and
xlat
ret
int3
je
pop
sbb
mov
sub
popf
xadd
pop
cmpsb
pop
or
lock
fistpl
scas
cmp
dec
cs
sti
loope
mov
push
enter
shlb
pop
jg
call
cmpsl
sbb
mov
inc
and
lret
imul
out
adc
stc
mov
adc
mov
pop
leave
mov
mov
shrb
outsb
adc
testl
sub
mov
mov
cmp
sub
pop
insb
inc
ss
fdivrs
mov
jge
hlt
std
leave
cmpb
mov
sti
enter
cwtl
or
stos
popf
scas
stos
adc
xor
pushf
test
cwtl
xor
in
cld
xchg
xlat
nop
jl
cltd
jecxz
imul
fiadds
call
in
aam
add
ret
ljmp
sub
mov
and
movsb
aaa
jo
pop
or
lods
cwtl
mov
leave
mov
enter
sub
dec
mov
bound
mov
xor
cmp
cwtl
add
adc
pop
pop
les
mov
mov
push
add
inc
rorb
shrl
xchg
outsb
push
outsl
xor
rol
dec
pushf
sbb
aas
int
insb
pop
or
subl
loopne
daa
mov
rcl
sub
bound
cmp
jg
adc
sbb
mov
add
add
testl
repz
xor
cmp
int
mov
loope
fstl
lods
imul
clc
shrb
and
popa
pop
je
mov
int
jg
cs
sub
push
push
add
cli
mov
sbb
add
sbb
movsb
je
mov
xorl
mov
inc
inc
pop
mov
pop
fisttpl
out
dec
xchg
sbb
ds
loope
cmp
push
mov
push
sahf
in
adc
js
pushf
lret
sahf
int
push
lods
enter
mov
jl
cltd
push
add
mov
into
or
test
xchg
test
jbe
jge
sub
mov
dec
and
cli
cmp
shll
jae
popa
cmp
add
jle
fidivrl
cmc
scas
mov
pop
lds
sub
inc
cwtl
xor
nop
jno
sub
fidivrs
test
pop
sbb
push
xchg
test
adc
repnz
iret
cmp
or
lock
into
mov
aad
dec
fs
inc
mov
mov
and
and
fdiv
and
jns
xchg
cmp
or
outsb
pop
adcb
sar
fwait
inc
jmp
lods
loope
mov
pop
jo
and
outsl
or
or
and
cmpsl
adc
pop
shr
mov
in
dec
aas
jle
mov
ret
jb
adc
insb
dec
xchg
adc
mov
sbb
fldt
push
cs
adc
das
lret
fisttpll
fs
outsl
push
pop
fadd
push
adc
mov
push
stos
inc
xchg
or
mov
movsl
dec
push
pop
out
or
xchg
cmc
xchg
leave
int
ret
loopne
arpl
sbb
cld
lods
push
xor
pop
cld
cmp
sub
xchg
jo
sbb
mov
push
outsl
test
or
int
xchg
ja
rorb
out
bound
cmp
sub
adc
xor
orl
jmp
in
and
mov
sbb
xchg
int3
push
out
call
fildl
mov
or
add
push
testb
insl
jmp
fdivr
xor
dec
ret
and
push
xchg
push
jmp
loopne
sahf
inc
int3
ret
inc
in
jae
rcr
mov
inc
sbb
fstp
ljmp
es
das
pop
mov
dec
lock
push
pop
sbb
adc
add
stos
push
jae
jl
sub
jne
pop
daa
dec
js
pusha
xchg
push
jge
push
fdivs
xor
lds
and
mov
jp
mov
mov
hlt
adcb
xor
pop
push
movsb
cmpl
mov
fsts
fwait
inc
sbbb
test
pop
sbb
std
dec
outsl
repnz
pop
push
push
xchg
cltd
xor
add
test
xchg
xor
pop
mov
scas
sbb
out
or
push
sahf
sti
xor
dec
cmp
jae
test
jmp
loop
xchg
cmp
mov
adcl
add
jae
test
addr16
cli
iret
sbb
in
clc
ret
mov
sbb
push
daa
xchg
sub
or
add
dec
faddp
in
int
dec
dec
loopne
jb
pop
sub
js
lahf
mov
popa
jno
shrb
mov
push
outsb
jp
int
iret
add
xlat
xrelease
iret
data16
aam
sbb
sub
fwait
rorl
fisubl
jno
dec
sub
sub
and
dec
pop
xchg
js
push
sub
add
popf
mov
or
sbb
out
mov
test
das
pop
leave
cmp
in
rclb
sub
aad
fdivrl
add
mov
iret
and
push
push
jo
outsl
mov
mov
int3
dec
hlt
int3
int
shll
mov
adc
and
mov
mov
outsl
mov
xor
enter
out
jo
pop
dec
stc
or
mov
fwait
mov
scas
rclb
pop
mov
lods
cwtl
mov
push
jge
imul
push
pushl
push
sti
mov
lea
xchg
mov
or
push
lret
cmp
push
pusha
push
mov
sbbl
cmp
mov
mov
scas
jnp
out
xor
and
sbb
inc
mov
mov
xchg
out
das
push
cli
add
mov
iret
cmc
mov
pop
repnz
imul
mov
movsb
sbb
xor
repz
dec
adc
push
dec
enter
fisttps
pop
inc
xchg
fsub
jp
test
push
adcb
pop
cmp
stc
jge
ljmp
nop
sub
les
push
xor
aaa
repz
sub
stos
push
addl
jp
jae
ja
movsb
sbb
mov
aam
jno
insb
mov
aaa
mov
jno
in
cmpsl
cmp
fisubs
arpl
leave
popf
lds
inc
adc
adc
push
pop
fs
add
adc
bnd
cwtl
or
jne
xchg
notb
sahf
jmp
jle
mov
hlt
jp
jge
jbe
mov
mov
or
test
insl
dec
pushf
jb
sub
mov
jo
jge
xor
cld
rorl
js
bound
cmp
adc
lret
in
orb
call
loop
cmp
push
test
lret
push
popf
pop
pop
movsl
cs
fs
das
subl
imul
push
jmp
ljmp
jb
or
mov
sub
or
push
fmulp
aas
inc
mov
mov
xor
cwtl
ret
jbe
lret
lods
pop
mov
call
add
mov
jo
clc
test
shrb
imul
jl
mov
aad
std
loopne
push
addr16
inc
push
mulb
mov
rcll
sbbl
dec
add
inc
dec
lods
fbstp
mov
xorl
testl
lcall
pop
mov
lods
in
cmpsl
out
iret
mov
out
mov
inc
adc
cmp
lidtl
in
mov
xor
xchg
sbb
lahf
xor
gs
gs
lea
dec
inc
pop
jne
nop
cmp
repz
add
inc
add
mov
and
leave
lahf
and
fsubp
sarb
dec
nop
jns
xor
andl
pop
fildll
xchg
shll
dec
enter
ds
movsl
sbb
pop
push
imul
into
aam
pop
xchg
inc
shll
fwait
lock
pop
mov
adc
xchg
jns
cs
scas
add
sub
push
push
cltd
inc
push
push
and
push
add
mov
enter
mov
out
cmp
ds
pop
mov
pop
sbb
imul
jbe
aam
ss
das
adcl
arpl
inc
shrb
sbbb
adc
cmpsl
cmp
mov
cmp
sbb
int
xor
mov
pop
pop
mov
sub
mov
lcall
and
add
dec
lods
test
add
add
shlb
cmc
lcall
push
daa
je
test
loopne
lds
cltd
bound
frstor
inc
mov
out
imul
inc
lcall
jae
hlt
fsubs
jbe
mov
mov
xchg
lea
mov
ja
rcll
lret
test
sbb
dec
push
cmp
ja
js
sti
and
out
sbb
movsb
clc
adc
sub
cmp
out
stc
call
pop
lcall
setl
lahf
arpl
je
cmp
mov
cltd
test
nop
add
outsb
call
or
and
test
mov
mov
jp
cmp
dec
ja
mov
iret
push
lock
and
ret
jle
sub
hlt
test
xchg
imul
ret
xchg
out
ret
rorb
pop
mov
in
movsl
jge
mov
mov
filds
add
jge
pop
pop
roll
mov
inc
xchg
push
sbb
negb
mov
xor
adc
jg
inc
aam
dec
ret
jle
xchg
test
and
jns
fstpl
out
add
cmpsb
in
insl
cltd
cmp
push
or
fisttpll
sbb
jae
cmp
mov
jmp
push
sub
xor
xchg
mov
sbb
repnz
out
inc
out
es
push
sbb
dec
xchg
sahf
into
mov
inc
or
fadd
dec
and
mov
push
mov
pop
test
dec
loopne
lcall
adc
push
fcoml
out
cmp
test
inc
add
or
mov
scas
jl
push
fs
inc
push
jecxz
mov
arpl
dec
push
lcall
jnp
loope
dec
movsb
clc
jge
push
leave
int
cmp
fwait
adc
ret
rcll
mov
push
or
and
add
fisubrl
cltd
ret
adc
pop
aas
xchg
push
cmp
add
push
or
adc
xor
popl
idivb
scas
cmpsl
mov
mov
rorl
les
popa
in
pop
test
divb
xor
aaa
sbb
xor
sbb
dec
jg
fnsetpm(287
lea
sbb
and
shlb
scas
sbb
clc
sub
lea
dec
adc
mov
cmpsl
add
sub
push
hlt
inc
arpl
mov
pop
pop
shl
adc
mov
xchg
loope
sub
push
xchg
pop
xor
fadds
mov
mov
pop
adc
push
ds
inc
sub
imul
jae
xor
das
fucomi
jg
nop
pushf
loop
xchg
mov
cmpsb
push
jns
insb
pushf
dec
and
dec
mov
adc
and
push
xchg
insl
fdivl
jle
xchg
das
arpl
arpl
push
iret
pop
or
out
mov
cmpsl
out
test
int
mov
insb
mov
stos
xchg
xor
and
cwtl
push
movb
movsl
pop
lcall
aad
lret
sbb
sbb
mov
repnz
mov
loopne
lds
sub
pop
cmp
lds
add
fchs
sahf
movsl
xor
fbld
push
cmp
iret
jns
mov
shll
gs
popa
add
push
adc
je
add
mov
stos
mov
out
lcall
daa
popf
test
jmp
movsb
jbe
add
xchg
hlt
add
sub
aaa
leave
lea
mov
inc
and
call
mov
sub
adc
cs
mov
sub
jg
or
push
outsb
sub
xor
lret
mov
mov
xlat
cmp
stc
pushf
dec
hlt
adc
xchg
fisttpll
jb
mov
jne
fisubrl
loopne
sbb
xchg
jno
xchg
outsb
xchg
pop
insb
shl
fdivr
mov
lea
out
xor
lcall
dec
pop
ljmp
xor
lret
pop
or
gs
sbb
loopne
and
and
push
imul
xchg
in
imul
cmp
mov
mov
aaa
gs
stc
gs
mov
in
daa
dec
je
sahf
push
pop
lcall
inc
scas
in
insb
cld
pop
cmp
add
lock
cmp
inc
shll
int
lea
inc
dec
dec
xchg
push
es
and
jmp
rcr
inc
jge
inc
ffreep
jecxz
xchg
mov
mov
dec
lods
repz
mov
and
dec
xchg
ja
fistl
les
icebp
in
mov
pop
cld
out
dec
mov
popf
dec
je
sub
add
dec
mov
dec
cmpsl
xchg
fdiv
xor
mov
cltd
ret
stc
jg
adc
or
push
scas
dec
out
jo
clc
jb
xor
dec
xchg
sub
sub
jno
mov
sahf
mov
or
insl
and
aas
cli
inc
in
mov
mov
cmp
shll
bound
mov
mov
iret
jecxz
test
jno
cmc
sub
or
cmpsl
cmpsl
sub
xchg
xchg
and
dec
mov
test
jl
mov
movl
sub
jmp
aas
ja
sbbb
das
aas
pop
jne
sub
std
push
shlb
fwait
and
insl
std
into
sahf
ss
and
xlat
popf
fnstsw
aam
cmpsl
inc
ljmp
xchg
scas
or
mov
aad
pop
mov
je
fldl2t
fidivl
mov
stc
call
push
stos
mov
mov
fadds
in
bound
notb
jne
xchg
lahf
xor
mov
add
faddp
ss
xchg
mov
movsb
and
lds
pop
cmp
es
adc
push
pop
xlat
inc
push
jp
bound
jb
ss
fisttpl
movsb
dec
pop
stos
in
icebp
cltd
nop
lock
popa
mov
mov
and
pop
jnp
fadd
arpl
sbbl
mov
pushf
jmp
or
xchg
pop
fistpl
jns
in
jle
lds
fdiv
daa
popa
lret
fisubs
cs
sub
jp
pop
popf
xchg
or
cmp
mov
cwtl
in
repz
xor
imul
pop
cs
int
push
ds
arpl
cmp
mov
rol
cli
mov
fs
mov
das
mov
daa
xor
sarb
outsb
pop
and
lcall
push
invd
cltd
push
mov
pop
sbb
div
and
subb
stos
mov
add
cmpsb
add
imul
push
push
add
push
out
decb
fnstcw
or
and
mov
outsl
cmp
mov
test
mov
push
pushf
inc
xchg
insb
mov
xchg
call
lret
stc
scas
add
lahf
dec
pop
movsl
cmpl
mov
and
sub
ljmp
adc
jno
mov
lock
jmp
popf
push
inc
cmp
jecxz
jmp
sub
cwtl
nop
pop
cmp
dec
cltd
jmp
sub
push
lret
jae
jmp
repnz
mov
cmp
int
and
inc
pop
cmp
push
push
call
ja
cli
lret
scas
jmp
lahf
filds
sub
pop
fsubrl
mov
and
leave
push
jbe
mov
xchg
inc
pop
cmpsl
mov
jno
mov
mov
es
push
add
sti
mov
nop
sub
push
cmpsl
adc
into
adc
call
dec
sbb
jo
push
sub
cmpsl
inc
fwait
pop
xchg
xorb
sbb
insb
cs
mov
inc
lock
fldt
mov
xor
movsb
pop
jne
adc
pop
cs
hlt
xor
sbb
or
fwait
shrb
push
imul
inc
push
nop
xchg
call
cmc
lods
imul
jmp
fwait
aaa
adc
xor
jle
bound
push
push
ja
mov
push
push
inc
jmp
pusha
js
jg
pop
dec
lret
fidivs
xchg
mov
scas
mov
adc
mov
in
sbb
ret
lret
fistps
cmc
fdivrl
xor
int3
arpl
cwtl
inc
js
xor
mov
push
btr
lods
jge
cmpsb
je
repz
or
dec
sbb
cmpsl
lret
cmp
cmp
pop
mov
movsb
add
sar
fdivs
jmp
xor
mov
repz
fisttpll
mov
sbb
js
push
jg
stos
out
cmp
jbe
cmp
lcall
sbb
sbbl
lcall
ja
call
je
lret
sub
cld
imul
repz
dec
std
inc
jecxz
in
cltd
lret
xor
test
dec
test
cmp
test
sbb
adc
xor
and
daa
push
adc
lret
ds
ja
xor
mov
cmp
sub
movsb
in
sub
fdivl
xchg
test
dec
cld
ja
mov
adc
mov
add
outsb
push
test
enter
sarl
cmp
sbb
in
out
sbb
les
fmuls
fcomps
inc
inc
and
and
jecxz
icebp
scas
mov
aad
dec
aam
push
lods
add
mov
dec
jno
cli
xchg
inc
int3
xchg
mov
enter
paddusb
in
les
out
xor
test
aaa
movsb
ret
xchg
cmp
push
insb
add
pop
xchg
sbb
mov
imul
outsb
imul
fistpll
mov
dec
fstpl
add
mov
in
lock
mov
xor
push
andl
aad
or
xchg
fdivr
loope
push
and
stc
push
lahf
pop
sarb
aas
sbb
icebp
mov
loope
sahf
mov
insb
cmp
sub
lds
push
xor
aas
js
sub
xchg
fadd
sti
jp
xchg
add
pop
mov
sar
push
cmpsl
pop
mov
lea
lock
push
scas
repnz
jg
notl
stc
fnstsw
gs
ss
aam
adc
imul
in
xlat
mov
les
jp
mov
sub
repz
ja
pop
and
shrb
and
das
pop
iret
and
mov
dec
pusha
sbb
lea
in
add
mov
mov
push
jmp
mov
sbb
inc
lds
sub
cmp
jmp
bnd
mov
cmpsl
push
cltd
add
pushf
inc
mov
aam
mov
sbb
sarl
dec
popf
lock
add
js
xchg
inc
xor
ja
pop
cmp
lcall
mul
sub
mov
and
je
cmp
out
push
popa
xchg
pusha
fstpl
jno
mov
or
push
xchg
mov
lds
pop
dec
lods
mov
sbb
mov
jnp
pop
jnp
push
adc
cli
call
sbb
mov
out
or
sbb
push
lret
outsl
cmp
dec
subb
or
dec
mov
icebp
movsb
mov
cmp
inc
out
mov
hlt
inc
mov
std
lret
out
lahf
jo
cmp
andb
push
mov
push
push
insb
push
test
iret
or
lahf
pop
xchg
mov
fistl
dec
inc
mov
int3
pop
inc
or
lea
xor
xchg
jl
mov
mov
and
jmp
or
es
shll
mov
lcall
mov
mov
sub
out
cmp
mov
std
xchg
imul
lret
pop
inc
jne
add
xor
xchg
mov
ds
lods
mov
inc
sub
mov
dec
xor
sub
and
fcmovne
sub
loope
xchg
in
fimull
add
or
jnp
jecxz
std
mov
stos
adc
cmp
sbb
fs
mov
mov
pop
jbe
cmp
iret
std
push
or
ja
adc
pushf
sahf
bswap
mov
mov
decl
inc
aaa
mov
mov
xor
in
cmpsb
clc
bnd
xchg
lea
sbb
in
mov
pop
lock
jo
mov
cmp
push
insl
xor
int
lcall
mov
inc
and
jne
mov
push
mov
nop
jl
out
and
inc
stos
sbbb
bound
in
push
mov
fcomps
aaa
mov
pop
out
pushf
movsl
fs
out
inc
mov
xor
mov
sarb
mov
es
pushf
aad
loop
jno
fidivs
shrl
and
gs
or
mov
adc
xchg
fnsave
fs
sbb
or
mov
xorl
jl
xchg
icebp
add
stos
enter
pop
icebp
mov
inc
addl
lods
push
rorl
das
scas
fstl
fdivrs
in
dec
das
fwait
xor
mov
push
add
xor
mov
decl
sub
cmp
mov
std
cmpsb
push
cmp
push
or
sar
outsl
test
xchg
fsub
xchg
xor
and
lods
pop
stos
not
inc
in
xor
daa
fs
ljmp
test
push
mov
loop
cwtl
pusha
out
popf
cli
je
rorb
clc
xor
dec
mov
fidivrl
div
inc
sbb
add
pop
es
outsl
divl
call
data16
lds
out
jp
in
xchg
cmp
cmp
pop
add
xchg
cmp
lahf
sbbl
bound
add
clc
dec
cmpb
insl
arpl
xor
lock
mov
xor
push
test
or
cmp
jecxz,pn
xchg
pop
std
fildll
push
xchg
mov
ret
jne
jp
mov
sbbl
inc
popf
nop
movsb
jge
xor
pop
mov
testb
mov
popa
imul
mov
jb
je
xchg
push
cld
sbb
call
jl
cmpsl
jnp
jmp
ret
movsl
push
fisttps
dec
int
mov
repz
mov
cld
repz
stos
dec
mov
xor
inc
lret
mov
lret
dec
hlt
ja
faddl
inc
pop
rcl
lods
mov
mov
dec
jno
inc
sub
lret
loopne
movsl
xchg
loope
sub
jno,pt
fimull
ja
scas
mov
pop
dec
arpl
orl
int3
jo
xchg
xor
inc
gs
sub
std
jle
sbb
in
mov
out
push
in
jno
test
mov
inc
push
and
fildll
mul
sti
dec
arpl
ret
jne
push
jno
or
pushf
and
lcall
test
mov
ja
test
dec
int3
xor
jbe
or
mov
add
mov
mov
arpl
aam
jmp
adc
mov
or
mov
loop
pop
ljmp
cld
movsl
test
inc
xchg
or
dec
testb
mov
xchg
dec
cmpsl
push
lcall
in
aam
stos
inc
push
pop
ficoms
lahf
frndint
pop
outsb
je
in
xchg
and
mov
fwait
sbb
mov
in
mov
xor
aaa
inc
sar
xorl
sub
lret
jmp
add
fwait
repnz
negl
std
inc
mov
xchg
idivl
add
add
clc
push
mov
pop
imul
jbe
ljmp
or
or
or
push
enter
mov
addr16
adc
call
jecxz
fldenv
pop
sub
sbb
xlat
cmp
xchg
std
or
adc
inc
fs
stos
inc
mov
jecxz
inc
call
mov
mov
cmc
rol
movsl
inc
nop
repnz
stos
or
add
xchg
es
outsb
icebp
xor
adc
pushf
jg
ret
add
push
push
xchg
adc
sub
leave
dec
mov
fdivrp
mov
scas
aad
aas
jbe
and
xchg
in
or
dec
push
xor
or
int
inc
bound
popf
and
sub
sub
cmpsl
jge
fstps
dec
mov
out
push
lret
dec
mov
xchg
inc
cmpsl
pop
test
jne
and
jae
jecxz
movl
add
mov
mov
mov
ljmp
mov
ljmp
jb
std
push
popa
inc
inc
popa
sahf
adcl
imul
stos
incb
insl
cmp
iret
mov
ret
jmp
clc
stos
pop
cmc
cli
or
cltd
fisubl
sbb
mov
cmpsl
out
loope
lods
in
mov
dec
movsb
push
push
or
xchg
dec
sbb
out
popf
pop
lahf
pop
fwait
mov
push
xchg
incl
enter
outsl
and
leave
test
out
inc
repnz
sub
sub
xor
ja
adc
jb
in
mov
inc
hlt
jmp
shll
cmpl
push
outsb
add
andl
adc
out
push
xchg
mov
pop
jge
inc
aad
or
sub
mov
cmp
mov
mov
ds
jl
jmp
adc
cmpsb
jns
xor
aaa
mov
ret
adc
push
mov
out
xchg
fstpt
into
mov
mov
popf
idivb
inc
or
mov
or
addl
dec
pop
xor
or
mov
ja
insb
int3
mov
imul
imul
xchg
adc
movsl
lock
and
ljmp
cs
adc
orl
scas
call
xchg
je
jl
sub
pop
add
in
mov
mov
and
cld
push
pop
addl
std
mov
repz
test
call
pushf
inc
rcrl
mov
mov
xchg
mov
je
rcrl
mov
cmp
mov
mov
pop
in
leave
mov
out
mov
mov
ficoms
push
sbb
dec
js
mov
add
scas
in
cli
pop
and
fwait
adcl
xor
lahf
test
adc
inc
int
aas
icebp
js
pop
iret
ror
lods
lea
sbb
add
ror
xchg
sarb
cmc
push
push
pop
adc
pop
imul
in
xchg
int
sbb
adc
adc
mov
data16
movb
int3
fiadds
shrl
or
das
hlt
push
add
adc
pop
insb
and
and
nop
xchg
or
in
js
lods
push
ret
daa
aad
sarl
add
jge
pop
pop
lods
aam
scas
pushf
jns
fs
xor
lock
xchg
inc
sbb
pop
fstl
add
rol
out
sbb
adc
pop
mov
add
pop
popa
xchg
xor
arpl
rcrb
fwait
mov
dec
xor
mov
jno
jmp
xchg
test
jecxz
adc
icebp
adc
and
ljmp
lods
jl
xchg
int
dec
rolb
stos
call
rclb
sarb
lcall
xchg
xchg
mov
jp
aam
xchg
out
icebp
add
mov
dec
jl
and
sar
xchg
ret
in
gs
leave
mov
fnsave
pushf
xor
fwait
loopne
push
push
push
sbb
pusha
hlt
call
fistl
aas
cmpsl
rol
jle
and
mov
clc
das
testl
fidivrs
push
sahf
sub
pop
jne
fimull
setno
sbb
dec
mov
xor
jns
cmp
and
sub
aad
mov
cli
xor
lret
fcoml
xchg
xor
out
imul
daa
cld
jns
xorb
mov
mov
bound
daa
pop
aaa
xlat
push
outsb
cmpsb
xchg
iret
cmp
xchg
imul
pop
idivl
movsb
ret
push
lods
fcoms
jns
pop
fmull
das
sub
in
jmp
jne
add
pop
mov
leave
in
aas
cld
nop
push
outsl
or
mov
or
adc
xchg
mov
shl
push
out
jle
scas
xlat
add
lahf
mov
imul
lea
sbb
push
inc
inc
push
sbb
adc
je
stos
jl
push
mov
mov
movsb
or
mov
into
jbe
shll
out
test
add
xchg
adc
imull
and
mov
mov
pop
and
call
sbb
pop
cmpsb
and
ljmp
shll
push
enter
inc
pusha
sbb
sub
scas
cmp
aam
jns
dec
pushf
aaa
cwtl
sub
mov
xchg
in
xor
xor
sub
dec
xor
add
jae
leave
add
roll
jl
insl
sub
add
loope
add
xchg
mov
loop
mov
push
xor
push
sub
stos
cmp
mov
sub
cld
fnsave
jns
inc
out
stos
pop
sti
add
inc
iret
scas
popl
inc
add
movsb
xor
repz
mov
push
aad
mov
add
push
pop
hlt
pop
sbb
sbb
mov
mov
push
mov
pop
mov
inc
movsl
push
aaa
jb
xchg
pop
mov
pop
leave
jecxz
sarb
and
jns
sarl
aaa
mov
push
in
loop
push
test
test
mov
loope
mov
xor
pop
cwtl
dec
xor
mov
out
stc
pop
sub
jbe
ss
out
ja
pop
rolb
xor
pop
xchg
stc
adc
mov
adc
adc
pushf
movsl
insl
and
jp
push
clc
mov
and
lods
dec
sbb
mov
pop
pop
pop
test
xor
xor
lret
mov
xchg
adc
push
sahf
test
fiadds
in
sub
popa
or
test
aaa
mov
stos
stc
jbe
icebp
xor
lahf
in
addl
popf
dec
jnp
jge
add
out
into
sub
lea
dec
std
push
sahf
ljmp
sbb
sub
cwtl
mov
je
xchg
lret
xor
sub
stos
movsl
inc
enter
or
mov
xorl
addr16
pop
pop
icebp
sbb
pushf
push
cmp
mov
stos
push
mov
iret
sub
mov
xchg
pop
int3
mov
mov
sub
pushf
mov
dec
fs
sub
call
sbb
arpl
xchg
ss
in
nop
inc
shl
imul
jne
mov
out
sub
std
pop
test
in
or
push
mov
imul
mov
inc
pop
shrl
loope
xor
sbb
mov
mov
push
movsb
push
rorb
xchg
xchg
fldenv
inc
pop
stos
and
xor
ret
jns
mov
sbb
imul
lahf
dec
incl
shr
imul
mov
mov
test
sbb
mov
test
mov
sbb
enter
push
cmpsl
mov
add
into
loop
mov
cmp
pop
data16
dec
and
insb
out
push
int
push
inc
std
xor
pop
and
mov
int
stos
into
test
or
mov
pop
imul
or
mov
std
hlt
jb
cmp
lods
mov
cmc
ret
pop
push
jbe
int
and
or
jae
loopne
cmc
aam
fbstp
lahf
lea
mov
ret
and
nop
xchg
sti
adcb
ret
sub
mov
loope
cwtl
into
aad
mov
iret
xchg
jnp
loopne
xlat
push
hlt
add
sbb
or
into
xchg
push
fdivrs
sbb
sub
mov
or
cmp
xchg
lds
pop
vmovups
lret
jbe
cmp
shrl
xchg
movsb
mov
popa
roll
mov
lds
xlat
insl
push
and
repnz
ret
lods
dec
sub
xchg
pop
inc
dec
divl
aad
ss
cmp
xor
push
fwait
mov
sub
xchg
xchg
pop
icebp
mov
pusha
xchg
loop
ret
dec
jnp
fs
and
xchg
js
fwait
test
cmp
les
dec
iret
pop
pop
mov
fstpl
lds
mov
xor
in
fmull
out
lret
in
cwtl
or
in
push
stc
sbb
or
divl
sub
mov
pop
clc
mov
insl
shrl
int
lret
ret
popa
and
hlt
int3
pushw
lret
sar
out
dec
lods
lcall
dec
int
xor
fisubrs
loop
sbb
into
inc
dec
pushf
and
lea
mov
inc
mov
jg
hlt
mov
xchg
pop
xchg
or
or
insb
ss
loope
jg
sti
je
ss
fcmovnb
test
mov
or
lret
fiadds
cwtl
xor
mov
or
fstpt
and
sarl
in
xor
cmpsb
ds
imul
imul
pushf
orb
mov
dec
fidivl
pop
mov
stc
inc
pop
lds
pop
out
add
enter
mov
icebp
mov
mov
xor
mov
cmp
lahf
cs
xor
adc
push
lcall
sub
std
add
outsb
mov
or
sbb
dec
inc
mov
fwait
rorl
sub
aas
or
cltd
lock
js
mov
push
push
jge
sub
xor
outsb
dec
fwait
mov
lea
dec
cwtl
add
or
jae
loopne
cmpsb
push
inc
mov
rorb
xchg
mov
imul
scas
jp
and
scas
or
pop
mov
repz
sbb
xchg
and
push
push
imul
mov
arpl
dec
jne
insb
dec
xor
xor
jo
mull
dec
mov
push
repz
std
mov
sbb
popf
lret
psubusb
pop
pop
dec
int
shlb
std
jmp
push
and
mov
daa
test
ret
adc
push
js
ljmp
mov
add
fdivrs
sarb
lcall
push
xor
mov
scas
or
dec
addr16
in
cli
pushf
and
sub
rcl
mov
mov
arpl
les
mov
out
stos
cmpsb
add
lahf
push
cmp
lcall
mov
dec
inc
jae
cmp
aas
inc
sub
sub
jns
je
aad
pop
jne
cmp
outsl
mov
pushf
sub
dec
sub
insl
sub
iret
mov
in
jle
sbb
stc
iret
jno
insl
popa
and
outsl
inc
jns
scas
mov
imul
dec
ror
daa
pop
dec
sub
or
adc
push
arpl
hlt
movq
dec
stos
std
xor
mov
fcmove
push
cs
andl
xchg
or
ljmp
loopne
mov
bound
bound
cltd
fsincos
jno
xor
in
mov
push
aas
mov
pushf
mov
mov
filds
mov
jle
pop
push
pusha
fisttpll
aas
or
cmpsl
mov
enter
imul
test
cmp
ljmp
ss
mov
adc
imul
loope
and
pop
add
mov
cltd
or
xor
outsb
mov
scas
mov
icebp
cld
mov
xchg
mov
add
ds
cmp
mov
push
mov
jg
cmp
es
lds
cmp
mov
sbb
push
mov
outsl
xchg
sbb
fwait
sub
inc
sbb
iret
adc
dec
fdivrl
pop
and
cs
cmp
add
hlt
push
cli
jae
xchg
xor
orl
ja
clc
fsubr
pop
cmpsb
test
es
sub
cmp
and
rcll
shl
into
les
push
xchg
pusha
int
mov
rorl
sub
dec
jg
or
aad
jo
add
data16
mov
dec
aad
fcoml
lcall
in
push
std
enter
int3
adc
nop
test
insb
cmp
arpl
jmp
inc
push
dec
out
ljmp
xchg
decb
addb
clc
je
and
out
mov
add
or
cmp
push
add
loop
into
jae
add
jns
fs
ljmp
or
push
add
sub
xchg
cmp
sahf
outsb
fwait
orl
aaa
ss
stos
and
out
test
mov
adc
and
ljmp
sti
loop
dec
ret
aaa
adcl
fwait
fwait
cwtl
push
out
sub
fldt
dec
out
mov
repz
ds
fcom
mov
push
sbb
ffree
push
ja
dec
push
outsb
jno
sbb
mov
lcall
inc
out
xor
push
push
pop
adc
pop
popa
sahf
aas
add
jne
lcall
mov
push
js
dec
inc
shlb
leave
jle
mov
fidivl
jp
cmp
push
insb
rcll
into
cmp
pop
pop
sbb
stos
add
or
push
repz
scas
in
ss
aaa
andb
inc
mov
icebp
or
mov
pop
test
jmp
push
cmp
or
and
pop
mov
das
popf
adc
add
sarl
xor
pop
out
push
dec
xchg
adc
jmp
xor
add
mov
add
enter
mov
dec
popf
push
or
mov
dec
and
je
fbstp
inc
push
repz
inc
xchg
push
jae
ret
cltd
xchg
jge
xor
jns
stc
andl
cs
test
pop
jmp
push
pusha
out
sahf
mov
push
pop
add
mov
fldcw
lea
adc
movsb
mov
add
push
adc
jg
mov
lods
push
sbb
sub
push
std
pop
outsb
imul
fists
sahf
out
in
aam
out
lcall
es
add
mov
sub
les
pop
popf
jecxz
or
add
adcl
pushf
arpl
mov
cmp
arpl
xor
mov
xor
add
ret
inc
pop
xlat
dec
cmc
add
pop
scas
sbb
addr16
push
sbb
fdiv
push
ret
jmp
and
fwait
mov
ss
scas
adc
jge
xchg
sub
inc
sti
adc
loopne
xchg
mov
in
sub
xchg
add
cltd
mov
stos
jae
fwait
xor
mov
mov
xorl
or
mov
call
cmp
dec
add
push
gs
lds
push
mov
mov
cmp
sbb
fisubs
repz
icebp
shl
sbbb
inc
xorl
sub
daa
adc
lods
std
push
lods
jb
push
out
cld
xchg
fmulp
mov
sbb
pushl
mul
lods
fmull
xor
dec
jns
aas
repz
mov
sub
sbb
iret
ljmp
js
push
clc
push
loop
push
push
divl
shrb
inc
roll
aam
insb
cmpsb
out
lods
xchg
add
shll
out
xchg
mov
addr16
imul
pop
and
addr16
push
mov
pushf
sahf
mov
pop
adcl
or
popf
mov
inc
push
jg
imul
mov
xor
data16
popa
fcompl
inc
push
xchg
test
mull
mov
jne
cmp
push
ret
fwait
push
inc
movsb
lea
sarl
out
daa
adc
dec
sbb
mov
mov
fdivrs
xchg
shr
out
insl
jmp
outsb
cmc
mov
cmp
sbb
out
jne
cltd
shl
xchg
sti
enter
and
fwait
cmp
inc
push
movsl
lahf
jo
push
mov
push
mov
dec
enter
int3
sbb
rorb
sub
push
aas
cmp
push
stos
imul
push
clc
cmc
aam
cmc
jne
popf
setl
sahf
inc
movsl
dec
out
jge
mov
pop
xchg
stc
loopne
leave
and
adcl
out
mov
pop
lret
jo
mov
inc
out
aaa
lret
mov
pop
pop
btr
sub
push
mov
xor
lahf
xchg
in
push
lods
sub
xchg
pop
xchg
mov
iret
dec
cmp
jbe
pop
dec
push
lret
popa
es
out
inc
mov
das
shrl
dec
ds
pusha
ficomps
insl
cmp
shll
mov
movsl
sub
pop
ret
push
pop
aam
scas
jecxz
bound
or
mov
xor
add
cmpsl
fs
xor
jle
pop
sahf
es
es
dec
cwtl
or
add
or
or
pop
out
cmp
fnstsw
inc
xchg
xor
aam
push
faddp
lds
addr16
cmc
lods
jbe
out
mov
xchg
sbb
mov
into
sub
cli
andl
mov
pop
push
mov
sub
or
lcall
pusha
ret
or
cltd
rep
ret
or
and
enter
pop
cmp
stos
daa
int3
lret
lret
sbb
pop
add
mov
sarb
lea
aam
jns
pop
stc
hlt
lret
sbb
cmp
cld
sbb
lock
xchg
movsb
iret
rorb
jnp
addl
out
pop
cmpsb
repnz
fnstenv
roll
or
daa
push
jae
xor
fdivrl
add
repz
adc
insb
das
clc
stos
popf
into
push
fmull
and
mov
jp
jne
push
ficomps
icebp
xlat
xor
pop
into
jae
xchg
mov
sbb
call
push
xorl
lods
ljmp
and
sahf
popa
adcl
dec
je
jo
add
mov
mov
jecxz
sub
mov
adc
out
orl
xchg
cwtl
push
mov
push
aaa
add
gs
clc
inc
shll
loop
xchg
mov
mov
push
jp
mov
and
dec
fsubrl
int3
decb
pushf
loop
arpl
push
inc
mov
add
call
stc
xor
shlb
sbb
std
or
test
insb
gs
sbb
cmp
idivl
push
mov
sub
mov
mov
and
jle
scas
sbb
jo
jae
mov
aaa
adc
ret
jp
xchg
pop
das
xchg
adc
shrl
pop
and
fidivl
mov
adc
or
mov
les
mov
mov
or
mov
sub
lods
jecxz
ja
shll
jae
pusha
mov
fstps
aaa
enter
push
in
data16
push
loope
rclb
dec
push
adc
sti
and
int3
addl
and
dec
mov
or
ret
sbb
push
insl
adc
pop
xchg
xchg
fwait
sbb
add
jb
cmc
mov
xchg
into
and
and
cmp
sbb
lahf
movl
idivl
pop
adc
roll
fwait
stos
jbe
xlat
lret
mov
or
pop
bnd
fs
cli
ss
in
sbb
sbbb
cltd
in
push
subb
mov
sti
push
repz
sbbw
sahf
pop
pop
mov
inc
dec
xchg
je
mov
lea
subl
inc
xchg
jmp
fwait
jbe
stos
mov
and
stc
jb
push
sbb
push
sub
ljmp
data16
jbe
add
rcl
inc
jns
pop
mov
mov
rclb
sub
dec
popl
xor
dec
bound
push
mov
lods
cmpsb
idivb
in
fmul
pop
lret
fisubrs
add
fisttpll
clc
or
push
mov
cmp
lock
shl
int3
movsb
fcoml
cmc
ss
mov
es
pusha
call
dec
and
push
dec
test
mov
pop
dec
xor
scas
or
addl
rol
add
xor
mov
xor
inc
inc
call
lahf
xchg
shrb
xchg
in
pop
decl
mov
sub
sbbb
jbe
mov
ss
dec
cmp
pop
sbb
cmp
jnp
mov
or
cmp
movsl
outsl
sbb
push
jno
mov
adc
pop
cmp
aad
ss
negb
sbb
adc
add
push
and
and
addr16
push
or
scas
out
dec
push
cli
lock
es
xchg
sbb
lea
popf
out
out
dec
fbstp
pop
pop
push
pop
cmp
mov
insl
scas
sub
and
test
xor
imul
and
jge
and
pushf
mov
and
popa
mov
cmp
call
ljmp
out
cmpsl
jg
cmpsb
dec
jns
clc
icebp
dec
dec
xor
dec
mov
insb
clc
pop
fisubrs
and
adc
subb
jmp
pop
fdivrs
dec
add
dec
xor
mov
mov
lahf
mov
inc
arpl
cmovb
es
adc
js
sbb
jae
mov
outsl
clc
jp
jb
and
mov
movsb
jg
jmp
lret
mov
push
push
cwtl
ljmp
and
adc
dec
test
in
out
mov
andb
push
jmp
dec
nop
mov
mov
cmp
repnz
dec
enter
sbb
mov
mov
add
lahf
es
mov
cltd
ficoms
xor
dec
xchg
add
std
ljmp
aad
adc
clc
lods
in
push
aad
sbb
xor
mov
pop
sbbb
icebp
popf
sbb
and
pop
push
es
xchg
sahf
push
sbb
add
jl
je
jno
push
repz
hlt
mov
cli
xchg
inc
sub
repnz
dec
xor
fwait
scas
or
adc
sbb
cmpsl
add
push
xor
mov
jbe
iret
fcmove
hlt
pop
std
and
repz
mov
frstor
jb
inc
les
lret
sbb
imull
cltd
pop
test
pop
push
aad
and
daa
fsubrl
dec
insl
dec
and
sub
movsb
scas
push
loop
pushf
pop
inc
inc
xchg
ret
out
fidivrs
adc
ss
sbb
int
jne
fcmovu
nop
jg
cmpl
ss
cwtl
push
lock
inc
mov
or
mov
ljmp
scas
mov
jge
shrl
mov
repz
ret
add
jmp
jns
mov
arpl
add
inc
in
or
lock
pop
cld
and
xchg
fmuls
inc
jne
and
adc
inc
jae
or
xor
andb
mov
dec
xchg
jl
xor
in
add
fwait
ljmp
dec
mov
xchg
adc
jmp
push
xchg
dec
jbe
rol
mov
xor
shrl
daa
popa
cmp
in
les
fxch
push
insb
iret
scas
stos
sub
cmp
cli
push
ror
xchg
xor
sub
fdiv
add
test
jecxz
sahf
jg
in
push
push
cmpsl
pop
icebp
loopne
sbb
nop
mov
insl
adc
adc
stos
cs
pop
aas
or
testl
mov
stc
lahf
fistpll
mov
sub
outsb
mov
iret
add
mov
lret
push
cmpsl
pop
popa
insl
mov
cmpsl
sahf
out
and
mov
lods
daa
idivl
stos
sbb
inc
ljmp
mov
jno
mov
in
insb
pusha
add
cmpsb
imul
inc
cmp
mov
sub
adc
out
lahf
adc
add
jg
pop
adc
push
add
pop
in
adc
dec
stos
sub
inc
mov
push
pop
adc
dec
xchg
fwait
jns
arpl
push
jle
lods
add
rolb
sbb
sti
adc
out
inc
xchg
mov
mov
and
mov
imul
dec
sarb
sarl
out
insl
loop
or
dec
xor
sahf
mov
add
movsb
push
movl
xchg
push
fimuls
pop
sbb
sub
and
add
repz
insb
sbb
repz
sarl
nop
sub
std
dec
inc
dec
lret
lahf
jbe
insb
sub
push
test
cmc
sbb
pushf
xor
push
movsb
addb
aam
mov
sbb
and
or
lods
int
xor
outsb
sbb
iret
das
sbb
cmp
jb
std
rclb
mov
jge
mov
inc
mov
jns
call
mov
cmp
lods
jmp
mov
inc
mov
icebp
jmp
xor
aaa
aam
cld
jne
mov
sub
push
shrl
ljmp
cmp
and
xor
scas
lds
mov
test
shr
jnp
scas
or
fiaddl
out
cmp
jo
cli
call
add
fdivrs
jl
push
orb
inc
cmpb
lods
in
mov
sub
into
clc
test
sbb
cmc
loop
dec
test
jae
and
repz
sub
mov
call
out
and
repnz
movsl
mov
and
cbtw
fstl
inc
and
andl
xor
sub
loope
or
dec
je
fwait
dec
mov
xchg
mov
lahf
in
imul
out
movsb
push
or
lock
into
scas
fisubrs
aas
jmp
fwait
pop
push
xor
shlb
stos
push
fcompl
fbstp
inc
fs
cli
adc
mov
sub
addb
push
ficomps
mov
push
lcall
mov
jl
and
xchg
movsl
cwtl
cmp
into
push
mov
inc
popa
pop
jne
pop
in
adc
jae
sub
test
aad
dec
jp
js
xor
test
cmp
mov
testl
arpl
jb
xchg
cmp
mov
pop
lret
adc
fadds
pushf
mov
out
mov
xchg
add
mov
repnz
mov
call
int
sub
jle
stc
jge
pop
sub
test
xchg
loop
pusha
add
cli
add
dec
enter
notl
jmp
mov
sub
lahf
in
add
xchg
test
sbb
jno
add
dec
jno
or
or
xchg
ss
in
mov
xchg
arpl
dec
adc
arpl
out
push
sub
pusha
lret
mov
fists
jno
pop
inc
dec
sub
sub
fiaddl
addr16
cmpsb
int3
adcb
loope
lret
inc
pop
fisttpll
cmp
fistpll
xchg
lret
sub
icebp
cmp
xchg
pop
lahf
dec
test
aam
lds
jmp
rolb
int
imul
popf
jbe
inc
into
inc
or
or
and
dec
mov
sbb
orb
jge
mov
pop
cmp
sub
xorl
lcall
pop
mov
aam
sub
dec
imull
xor
mov
lds
jg
out
in
jno
or
mov
addr16
xchg
aas
hlt
mov
nop
in
pop
push
cmp
into
adc
fwait
pop
sbb
shrb
and
sbb
shrl
aam
sbb
into
inc
sbb
cmp
sti
aam
pop
mov
lahf
cmp
cmp
hlt
es
loop
pop
mov
lds
mov
aam
leave
mov
idiv
sub
pop
adc
mov
scas
out
lods
test
popf
mov
xlat
inc
pop
stc
push
and
xorl
ret
inc
xlat
andb
sub
bound
pop
aas
repnz
cmpb
testb
das
imull
lock
add
ficomps
fs
mov
fs
cmc
and
sbb
shrb
push
sti
mov
outsl
cmp
jb
add
outsb
mov
add
dec
mov
lea
insl
decb
xor
pop
sub
adc
cmp
sbb
pop
repnz
lret
xchg
jns
or
add
shrl
sbb
pop
daa
das
cmp
mov
add
sub
out
or
out
mov
and
movsl
mov
push
addr16
pop
or
scas
push
jle
call
pop
adc
shll
insb
sub
and
into
outsb
loopne
movsl
call
outsb
xchg
icebp
add
xchg
dec
sbb
pop
aaa
stos
xchg
sbb
pop
dec
shll
movsl
rcrl
sub
rolb
or
stos
aaa
xchg
cmp
into
in
movsb
and
outsb
and
pop
inc
and
and
decl
inc
pop
add
in
shrl
cmp
mov
pop
push
jbe
sbb
sarl
mov
arpl
mov
and
dec
arpl
lods
outsb
dec
js
scas
lret
pop
leave
ljmp
mov
out
cld
or
cld
sub
or
test
loope
mov
dec
cmpsb
int
lods
pop
test
jl
sbb
shll
adc
or
cli
mov
les
je
cmp
xchg
lret
sahf
out
add
adc
pop
jp
mov
dec
mov
pop
retw
mov
mov
and
mov
or
enter
jg
push
pop
pop
add
repz
leave
dec
test
decb
dec
cld
push
pop
int3
sub
arpl
and
inc
sub
jg
int3
sbb
adcl
arpl
js
push
sub
repnz
les
sbb
mov
cmp
data16
fldenv
loopne
in
aaa
cmp
adc
fcmovnu
push
cmp
lock
jae
js
std
mov
inc
fcom
mov
stos
or
jge
es
sub
scas
jle
cmp
loopne
fbld
dec
pop
dec
inc
xor
ret
mov
ja
rclb
push
mov
aad
and
call
fcomps
inc
test
into
pop
jl
cmpsl
mov
xchg
fsubrl
out
lea
arpl
pop
repnz
mov
mov
sbb
popf
mov
and
ja
or
pop
aas
jg
xchg
fcmove
addr16
cmc
jae
aaa
testb
sub
jne
push
ficompl
xor
ss
in
mov
std
mov
in
add
xor
or
int
dec
jo
adc
and
add
lret
push
xlat
adc
cmp
cmp
mov
fs
addr16
fidivl
into
or
xchg
notl
push
cmp
xchg
mov
fimull
sbb
mov
mov
mov
lret
and
jmp
or
mulb
add
mov
ljmp
pusha
xchg
icebp
jmp
aam
sub
or
outsl
add
stos
pop
loope
mov
lret
xchg
push
sub
mov
div
inc
popf
xor
subl
mov
adc
clc
bound
sbb
gs
es
push
aaa
ja
dec
xor
fcomps
ljmp
mov
jo
daa
mov
or
std
pop
out
adc
push
push
dec
out
in
mov
lods
in
inc
loopne
jg
scas
dec
popa
popf
inc
cmpsb
and
stc
aas
sbb
lahf
call
mov
clc
ret
popa
cmpsb
movsl
negl
mov
inc
cs
dec
push
sub
mov
nop
jle
or
lock
icebp
in
outsl
sbb
mov
aam
in
scas
xchg
fldcw
mov
xor
or
out
mov
mov
xor
ljmp
xor
lock
lret
push
mov
test
fdivrl
sub
pusha
add
mov
dec
xor
out
dec
pop
in
lods
cmp
push
jp
jl
inc
fmuls
push
mov
mov
fiaddl
sbb
frstors
mov
push
mov
xchg
cmp
cmp
insl
pop
jge
insb
jo
push
sub
test
outsl
scas
out
fimull
pop
lock
or
negb
sbb
mov
shrb
mov
data16
push
xor
cmpsl
jnp
push
lea
idivb
jns
mov
test
cld
xor
mov
sub
divb
jne
sar
mov
rcll
cmp
cmc
outsl
mov
insl
mov
dec
ret
mov
pop
add
dec
mov
stos
scas
cltd
arpl
cwtl
cmp
sub
lahf
pop
dec
mov
sub
xchg
push
gs
div
sub
xchg
fcompl
adc
pushf
adc
xor
sahf
or
push
fiadds
cmp
mov
insb
mov
push
test
mov
sbb
xchg
mov
push
daa
inc
pushf
mov
xchg
iret
mov
and
push
sbb
cld
mov
dec
daa
jns
cli
xor
dec
fnstcw
cmp
pop
in
daa
adc
mov
inc
push
arpl
cwtl
daa
fwait
jmp
ds
ret
lcall
fildll
lock
xor
jb
ja
fidivl
adc
adc
push
out
mov
pop
shll
dec
fimuls
bswap
test
xchg
in
clc
add
sub
ficomps
enter
stos
pop
cmp
stos
cmp
mov
or
and
push
stos
pop
sbb
pop
adc
leave
ss
jb
jmp
add
ja
iret
jns
mulb
pop
sti
adc
or
mov
pop
punpcklwd
inc
daa
jbe
jo
xchg
test
mov
nop
mov
leave
clc
sbb
add
addl
cs
cmpsl
cld
dec
and
dec
jnp
loope
scas
scas
aas
push
test
or
dec
mov
les
mov
loope
mov
jnp
test
mov
add
int3
inc
mov
mov
inc
cmp
cmp
repnz
arpl
add
and
sbb
movsb
mov
shlb
and
outsl
pop
call
xchg
iret
mov
jbe
in
mov
inc
push
xor
and
ret
mov
shrb
adc
stos
jmp
jmp
xchg
mov
rcrb
xor
imul
push
xor
pop
cmp
sbb
jne
je
fnstcw
sbb
adc
mov
xchg
dec
cmp
mov
in
mov
pop
hlt
iret
lea
aas
adc
dec
inc
mov
mov
lcall
int
push
jmp
fdivs
and
int3
outsl
fs
lret
inc
fidivl
bound
xchg
dec
clc
pop
push
add
mov
mov
in
sub
mov
mov
dec
and
push
inc
mov
pop
pop
push
or
and
push
dec
jp
xchg
loop
lea
sub
and
out
push
or
jg
sarb
push
mov
dec
push
ljmp
sahf
and
xor
xlat
pusha
ret
mov
jl
gs
sub
mov
and
jbe
gs
pop
jno
test
icebp
outsb
jnp
adc
cmpsb
mov
out
fistps
pushf
push
cmp
dec
mov
pushf
xor
xchg
loope
out
pop
cmpsl
mov
out
push
ss
movsb
xchg
pop
neg
or
adc
inc
cltd
jae
push
push
dec
adc
pusha
sub
dec
daa
int3
ja
enter
dec
xchg
add
mov
clc
icebp
popa
add
push
cmpsb
jns
xor
adc
leave
movsb
mov
loop
inc
adc
idiv
pop
mov
add
cmp
call
ja
adcb
jo
fadds
dec
mov
insl
cmp
jmp
int3
push
mov
fs
pop
mov
dec
fmull
sbb
int3
dec
in
xchg
sub
inc
mov
cmp
dec
andl
or
cmp
cmp
pop
outsb
fwait
sub
inc
test
lds
mov
add
lock
and
push
push
imul
mov
or
ret
adc
cmp
decl
add
or
fs
sbb
cmpsb
jae
lret
icebp
and
imul
imul
cwtl
outsl
mov
in
movsl
out
enter
dec
inc
nop
jg
call
xchg
shrb
sar
jmp
push
mov
inc
and
or
cmc
jns
stos
push
inc
dec
arpl
std
push
lds
inc
and
or
cmpsb
cmp
mov
mov
insb
pop
pop
insb
inc
pop
lods
adc
cwtl
xchg
fsubrl
ret
popf
loop
pushf
cmp
test
or
mov
xchg
cli
aam
xchg
lcall
pop
pop
push
iret
xor
cmp
sbb
mov
shlb
xchg
shrb
stos
adc
sub
scas
shrb
scas
pop
aas
subb
cli
mov
in
jno
stos
jecxz
insl
iret
push
hlt
xchg
pop
adc
fisubrl
mov
adc
js
mov
cmpsb
jl
push
movsl
mov
inc
mov
pop
cwtl
popf
dec
and
sti
sub
mov
sbb
aad
push
roll
sub
mov
stos
sti
and
pop
clc
jae
insb
inc
push
cmpsb
popa
into
and
test
mov
rolb
dec
mov
rep
mov
inc
aad
push
mov
repnz
dec
jg
dec
push
jbe
in
scas
and
inc
ja
mov
pop
fwait
cld
sub
and
int3
in
loop
dec
mov
mov
and
sub
mov
sub
dec
test
dec
push
cmp
rcl
test
xchg
imul
in
push
xchg
push
int3
or
cwtl
pop
ss
jp
imul
push
cmp
mov
sbb
dec
push
mov
leave
push
int
jg
mov
jo
or
testb
adc
adc
pusha
and
outsl
xchg
add
jno
std
and
clc
in
repnz
cmp
push
adcb
imul
xchg
ret
add
cltd
and
cmpsl
jl
pop
push
and
andl
mov
fnstcw
sti
push
sbb
mov
inc
repnz
popa
push
sub
xlat
xchg
pop
dec
jecxz
pop
sbb
and
mov
imul
pop
jnp
aad
scas
xchg
fsubl
in
rcrb
lds
xchg
dec
dec
lcall
xchg
std
mov
sub
filds
mov
or
and
pop
sbb
por
lahf
sub
popa
test
and
mov
xchg
cmpl
call
outsl
xor
scas
test
pop
xchg
mov
sub
inc
out
in
mov
popf
fwait
adc
mov
xchg
mov
sahf
inc
push
inc
mov
dec
sub
fldt
lea
xchg
mov
pop
jo
ret
sub
adc
ficompl
nop
xor
sbb
push
pop
mov
mov
addr16
inc
push
ret
test
xchg
or
mov
inc
arpl
imul
test
pusha
xchg
fs
mov
out
mov
int3
push
sub
mov
inc
movsl
in
push
in
movsb
repz
add
inc
mov
add
insb
cmpsb
ja
daa
add
aas
pushf
jae
mov
fisubrs
xchg
test
lock
fnstenv
adc
insl
sti
aaa
add
jmp
or
mov
jne
adc
shll
sub
dec
xor
sbb
int
pop
popf
je
cmp
lock
into
cmp
xor
cld
xchg
jo
shrl
fstps
cmp
imul
sbb
js
aaa
or
je
push
ds
or
adc
sub
test
sub
jb
fsubr
int
jbe
sbb
in
pusha
inc
push
cmp
cmp
daa
push
lock
aas
sbb
lret
mov
cmp
shrb
dec
dec
adc
mov
mov
sub
mov
xor
fisubrs
push
mov
sub
daa
cmp
scas
and
jns
add
andl
fdivl
xlat
sbb
mov
sahf
or
adc
cmp
lods
lea
popa
or
jns
push
mov
push
pop
loop
idivb
xchg
pushl
and
xchg
cmpsl
xor
inc
xor
xchg
sbb
pop
ss
btc
sub
push
and
jae
pop
std
inc
lods
in
sbb
xchg
mov
int3
fiadds
jp
jnp
seto
in
cmpb
and
call
push
pop
repz
mov
xor
sbb
pop
sub
jbe
fimull
stc
dec
mov
pop
fs
fsubrs
sub
out
das
dec
fimuls
popa
cs
jae
sub
cmpsb
ds
mov
and
mov
jnp
xchg
addr16
fs
test
adc
cmp
loopne
mov
sbb
jo
sbb
sbb
xor
sbb
push
insb
inc
cmpsl
cmp
sub
pop
push
movsl
push
js
dec
adc
and
icebp
adc
sub
lret
mov
nop
nop
and
jns
mov
popa
pusha
popf
sahf
mov
xchg
fmul
cmpsb
pop
lds
jbe
std
addr16
pop
imul
mov
fsubp
cmp
call
ss
sbb
adc
pop
sbb
insl
lret
ja
scas
jecxz
sahf
xchg
add
outsb
imulb
imul
stos
adc
jne
pop
pushf
fldenv
outsb
sbb
aaa
sbb
jae
out
rol
imul
push
ljmp
pop
pop
cmp
cmp
cwtl
push
bound
js
orb
loop
popf
mov
es
arpl
ret
jge
fistpll
inc
cld
xchg
fistps
dec
stos
mov
movsl
insl
rolb
fcomps
outsl
stc
enter
push
stos
jle
in
ljmp
pop
jle
ss
xchg
stc
push
mov
lret
lods
out
jb
insl
adc
mov
sbb
scas
cmp
aaa
int
gs
mov
pop
xchg
dec
hlt
lds
jae
xor
sub
outsl
roll
or
cmp
loope,pt
and
lds
movsl
leave
addr16
ds
dec
jo
sub
cmp
pop
jne
mov
out
push
ljmp
out
lock
dec
stos
pop
or
fs
inc
pop
sub
int3
jg
pop
enter
lock
dec
pop
stos
push
nop
fildl
sti
sbb
xor
mov
or
dec
cld
jecxz
out
cltd
adc
movsl
popf
mov
mov
xlat
push
stos
js
dec
test
sub
insl
adc
adc
xchg
sbb
outsb
pop
repnz
and
sub
test
fisttps
loope,pt
out
pop
pop
add
xchg
dec
sub
pushf
cwtl
and
repnz
gs
ret
sbb
je
stos
insb
sbb
mov
or
out
mov
iret
stos
sahf
dec
or
pop
push
and
push
and
xor
shl
pop
and
add
je
adc
mov
jo
and
and
lret
cltd
repz
adc
mov
and
dec
out
imulb
jge
sub
mov
dec
jno
add
sub
lret
dec
push
mov
and
fwait
ljmp
sbb
adc
lods
shll
testl
sbb
and
push
sub
pop
xchg
jmp
mov
leave
rclb
lret
jmp
sbb
mov
jns
sbbl
test
ss
xlat
xlat
and
inc
add
stos
sbb
mov
push
rcrb
push
dec
insb
cwtl
sti
mov
test
mov
leave
mov
sti
pusha
inc
or
inc
sti
xchg
add
and
push
test
mov
mov
mov
mov
int
or
add
cmp
jp
pusha
int3
shrb
in
int3
mov
imulb
cmp
lods
fldln2
cmpsl
cmpsl
aas
insb
test
gs
dec
inc
sbb
aaa
fmull
loop
and
inc
repnz
cmpsl
sub
mov
mov
daa
dec
negb
xchg
stos
rcrb
out
push
addr16
mov
or
loope
lock
jne
das
enter
adc
cltd
push
incl
jg
rolb
sbb
lret
or
int3
hlt
jo
push
fisubrs
jg
jo
popl
imul
push
or
push
jl
movsl
cmp
dec
leave
xchg
mov
cmp
xor
pop
mov
xor
adc
fmul
fmull
in
add
dec
xchg
add
repnz
popf
pop
sbb
data16
data16
or
fisubs
movsl
mov
dec
pop
push
pop
aas
jns
mov
mov
push
repz
xchg
into
xlat
jb
js
sahf
inc
sahf
in
mov
mov
ds
push
iret
mov
xchg
mov
inc
fbld
ret
and
fstpt
pop
adc
cmpsl
push
pusha
inc
adcb
in
sub
xor
daa
sub
sbb
sub
push
fldt
inc
inc
jl
sarl
inc
pop
cmp
jmp
mov
dec
lods
adc
imul
sbb
push
xor
pop
std
mov
mov
jo
inc
mov
jo
cwtl
or
adc
in
fwait
inc
inc
and
fisubs
stos
lahf
stos
fcomps
andb
mov
push
pushf
add
lods
adc
mov
cmp
adc
mov
in
inc
pop
cltd
jl
xchg
mov
into
and
mov
aaa
clc
loope
addb
fwait
pop
stc
jmp
sub
das
inc
inc
adc
movsl
sbb
or
push
push
pop
xorb
out
test
iret
inc
test
pushf
push
dec
mov
loopne
std
lret
pop
insb
pop
sbb
lds
adc
int3
repz
xchg
loop
in
cmp
fisubrs
rclb
insl
and
cmp
push
icebp
sub
fisttpll
jge
or
jl
sbb
test
mov
jl
fwait
jns
ds
test
mov
jmp
add
outsl
mov
sbb
add
sub
sbb
aam
fildl
xchg
iret
int
scas
jecxz
sbb
xlat
lahf
inc
cmp
sub
jne
xor
xor
jnp
mov
shrb
mov
das
pop
das
popf
push
shl
pop
cmp
inc
movsl
ficompl
adc
dec
mov
jno
test
push
das
call
out
stos
inc
inc
mov
shlb
push
mov
jns
popa
and
test
xlat
mov
ret
mov
add
and
jp
fstpt
xor
fbld
sbb
and
mov
nop
push
stos
mov
adcb
push
xor
imul
mov
push
jb
aas
aad
icebp
mov
sbb
nop
cmp
stos
sti
xchg
in
rorb
mov
pop
push
sbb
add
cli
or
scas
bound
sub
bound
je
call
lcall
stc
mov
jbe
jg
pop
pop
int
inc
gs
or
cwtl
sti
add
adc
jecxz
and
leave
adc
pop
fwait
mov
leave
or
pop
ljmp
lcall
add
enter
adc
negl
or
je
add
jbe
inc
in
ficompl
loopne
loope,pn
mov
shr
inc
jecxz
pushf
bound
imul
fwait
xchg
addr16
mov
fsub
adc
pushf
mov
daa
adc
aam
inc
int3
popf
out
add
inc
nop
fldt
sahf
pop
popf
jle
lock
fwait
aas
push
ds
push
in
xor
js
fildll
and
data16
jg
sbb
pop
aam
shlb
pop
pop
aas
dec
jb
int3
psadbw
push
call
dec
repnz
adc
jg
cmp
rcrb
out
jmp
add
push
xor
aad
xchg
or
jae
arpl
push
push
aaa
dec
mov
jl
adc
das
es
pop
jb
push
mov
xor
jmp
xor
mov
pop
mov
les
out
push
ret
inc
cli
jecxz
xchg
fstps
fists
xchg
popf
stos
clc
mov
add
std
fistpl
rcll
popa
andb
or
int
pop
popf
adcb
lahf
in
movsl
dec
sub
jne
push
fcoml
jns
jmp
xchg
cld
adc
fwait
or
mov
pop
je
fsubrl
xchg
mov
xor
shll
popa
ja
mov
jl
inc
pop
mov
fmul
pushf
cwtl
mov
dec
dec
ret
add
andb
xchg
leave
sbb
lock
ss
xor
insb
jp
and
ds
sti
sahf
mov
out
inc
push
out
mov
out
mov
scas
push
fcomip
push
and
sub
sbb
push
movsb
jne
jmp
add
mov
test
outsb
lods
mov
loopne
jb
insl
dec
jp
mov
inc
add
out
jns
xchg
test
jo
and
outsl
js
cs
xor
loop
push
jno
or
mov
js
rep
mov
mov
aas
cltd
cmp
loop
xor
sub
xchg
and
lds
bound
adc
mov
jbe
cmpsl
mov
pusha
test
bound
test
xchg
inc
daa
outsb
sti
and
or
sti
cmpsb
sti
flds
sub
gs
fnstcw
shlb
pop
sub
addr16
int3
add
addr16
sar
repnz
add
xchg
cmp
loopew
or
fdivl
imul
fildl
or
mov
lret
pop
ds
jmp
jp
mov
mov
xor
pop
ficoml
popf
inc
call
xor
cmc
in
ja
stos
hlt
lds
jecxz
aas
fsubl
shll
adc
imul
pop
xchg
add
push
inc
into
out
dec
dec
dec
jl
mov
mov
mov
pushf
push
decb
jo
mov
clc
scas
fstpl
imul
loopne,pn
rcrl
fbld
adc
cmp
in
xor
lcall
cmp
imulb
hlt
dec
cmpsl
push
jle
loopne
and
cmc
adc
sahf
fmuls
jmp
jg
lds
cmp
push
xchg
cli
rorl
lock
or
aas
mov
jg
and
sub
dec
add
add
popa
or
sbb
mov
in
sub
divl
lds
push
popf
sub
push
xor
mov
xchg
adc
pop
mov
jns
outsl
fwait
loope
test
mov
bound
mov
mov
pushf
mov
xchg
shll
in
std
sub
adc
ds
pop
loop
les
mov
dec
fimuls
or
popf
cltd
adc
and
cltd
mov
mov
loope
inc
outsb
push
sub
or
xor
int3
cmc
es
sbbl
pop
and
push
pop
loopne
fmulp
dec
repnz
cli
push
sub
inc
pop
jns
sbb
jecxz
or
shr
sbb
shrb
mov
fwait
divb
call
out
movsl
daa
pop
insl
loope
add
stos
mov
sbb
add
sub
outsb
test
out
daa
fwait
xchg
aam
fiaddl
mov
ljmp
push
lahf
and
cli
mov
mov
imul
sub
mov
andb
imul
daa
xchg
push
fisubrl
or
jnp
cmp
insl
shrl
in
nop
add
cmp
xlat
mov
and
mov
stos
add
and
scas
xchg
cmp
data16
frstor
sbb
in
popa
insb
ret
sbb
fidivrl
or
sarl
xor
push
mov
fs
dec
jg
push
flds
negb
cwtl
xor
je
int3
call
insl
sub
and
lock
mov
push
mov
push
mov
and
lcall
repnz
les
dec
cmp
stos
or
pop
fidivrl
or
xlat
enter
sti
inc
cltd
test
aas
adc
inc
pop
or
pop
sbb
lock
mov
in
scas
xchg
imul
lret
es
mov
mov
inc
mov
or
cmp
inc
mov
ljmp
mov
adc
inc
add
xchg
lcall
pop
adc
jbe
mov
negb
cvttps2pi
sbb
inc
cmp
mov
adc
sub
loope
pop
or
sub
rcl
push
jae
addr16
mov
sub
inc
sub
lret
dec
outsl
cmc
xor
aaa
lcall
xor
clc
add
test
aaa
dec
sub
test
add
loopne
pop
jnp
sbbb
or
xchg
imul
sbb
xchg
std
mov
notl
and
insb
sub
mov
push
aad
sarl
addr16
jb
and
add
jb
pop
fs
out
mov
jp
mov
add
push
fadds
sub
sub
xchg
push
xor
push
pusha
mov
shll
clc
sbb
and
cmc
out
mov
imul
push
fs
xchg
inc
or
mov
je
outsl
mov
cmp
divb
mov
and
or
shl
data16
mov
inc
repz
sbb
xchg
add
push
mov
scas
lret
fisttpll
adc
rclb
cwtl
push
sbb
mov
push
sub
jecxz
mov
add
xchg
in
stos
fstpt
pop
incb
std
test
push
cmpsb
sti
add
insl
loop
iret
add
pop
in
pop
and
cmp
std
inc
subl
push
fwait
popf
ficompl
stos
sbb
sbb
xchg
idivl
in
xor
pushf
mov
pop
add
dec
fsub
mov
lods
insb
fs
je
lods
pop
aaa
or
jo
fs
sub
jle
daa
std
hlt
inc
lret
movsb
aam
jmp
cltd
xor
jae
pop
pop
pusha
cmp
aaa
sbb
scas
adc
and
fists
jno
dec
loope
dec
daa
testl
sbb
and
out
std
mov
mov
mov
sahf
jg
das
in
imul
or
mov
sub
lret
stos
xor
mov
adc
jg
fisubrs
lods
ret
cmp
mulb
pop
out
movsl
xor
xchg
sub
int
add
aad
out
mov
push
loopne
push
cmp
dec
ret
and
push
push
sub
and
imul
das
stos
push
je
xor
call
sbb
sbb
enter
cmp
test
popl
stos
mov
scas
sbb
pop
std
mov
sbb
pushf
mov
aaa
push
mov
es
adc
xchg
lret
lds
and
lea
fsubrs
jae
sbb
mov
pushf
cmc
mov
xor
lock
mov
cmp
jae
xor
cltd
jnp
sub
sbb
mov
or
mov
fdivs
iret
mov
xor
imul
lahf
push
sbb
gs
out
les
sbb
test
movsl
test
fadds
cmp
xchg
pop
imull
popa
or
rcrl
xchg
cld
sbb
lcall
fcmovnb
jno
mov
and
fbstp
adc
cli
add
sub
stos
or
mov
inc
callw
bound
cli
dec
pop
sub
std
ficompl
sbb
mov
cmpsb
sti
lea
loope
sarl
jl
insl
scas
mov
jbe
imul
dec
sbb
shrl
sub
sub
lock
out
into
rcrb
lea
and
sbb
and
or
push
pop
aam
leave
lret
test
popl
dec
repnz
pop
ja
jnp
pop
lods
adc
cwtl
popl
add
in
dec
fdivs
notl
mov
jg
push
imul
mov
xchg
jg
adc
pushw
inc
pop
mov
incl
xchg
imul
fstps
or
dec
lret
cmp
and
fdivrl
jecxz
xchg
test
fs
in
dec
pop
add
dec
dec
jnp
xchg
mov
add
xchg
xor
fidivrs
shll
push
hlt
dec
cli
jne
mov
addr16
enter
or
or
aaa
pop
fs
cmp
nop
fisttps
dec
mov
fcomp
lahf
cmpsb
inc
mov
pop
jo
xor
jb
aad
movsl
and
mov
xor
adc
xor
mov
lds
pop
pop
inc
clc
and
iret
mov
sub
sti
shrl
pop
add
xor
mov
or
dec
sub
adc
inc
xor
push
xchg
popf
cltd
mov
dec
inc
fwait
es
rolb
push
sub
aas
loop
pop
popf
pop
and
lock
sbb
cmpb
sbb
loope
cs
add
mov
rcrl
or
adc
loop
fldt
int
xor
jne
add
jne
push
nop
adc
loopne
loop,pt
inc
fmull
push
adc
mov
pop
xchg
aam
add
mov
daa
mov
aam
and
ja
push
ljmp
add
test
aas
inc
pop
cmc
mov
and
mov
xchg
sar
in
jl
or
int
pushf
and
sub
sti
aad
push
jl
out
add
das
xor
hlt
pop
aam
cmp
and
push
xor
in
inc
xchg
lds
icebp
je
sub
fldl
inc
push
icebp
loopne
mov
testl
xor
xchg
loop
sbbb
cmpsb
push
ror
adcl
xor
rorl
std
ret
ret
clc
lds
cs
inc
addr16
mov
sub
and
arpl
inc
jl
add
dec
mov
cmpl
mov
xchg
addb
lcall
je
test
sahf
inc
cwtl
inc
mov
push
movsl
dec
and
dec
cli
lods
mov
mov
cltd
push
imul
aam
mov
dec
mov
or
out
insb
lret
xchg
je
xor
add
mov
mov
sbb
sahf
jo
mov
mov
inc
lods
and
xchg
xchg
xor
pop
iret
and
jmp
jae
outsl
xchg
fiaddl
xor
test
mov
or
and
push
ret
popa
push
cmp
aam
cwtl
adc
outsb
mov
mov
test
lock
js
negb
loop
cmc
shl
out
lods
ja
aaa
lock
das
movsb
test
add
pop
push
sbb
jbe
fidivs
lahf
mov
jns
jnp
cs
jno
mov
or
inc
cmp
pop
andl
pop
repnz
test
dec
repnz
mov
jle
pusha
jge
add
mov
sbb
xadd
mov
int3
popf
das
andb
int3
inc
fs
xor
mov
xchg
dec
cli
cli
mov
mov
xor
cmp
out
shll
sbbl
cli
sbb
jl
mov
repnz
cmp
ret
jmp
mov
daa
pop
sbb
aaa
pop
std
pop
cld
mov
cmp
adc
pop
pop
jecxz
in
movsl
sbb
imul
nop
jp
outsb
ja
testl
add
mov
pop
add
xchg
cmpsb
dec
jne
mov
testl
mov
mov
insb
in
sbbl
push
xor
cmp
fldt
idivb
jb
mov
imul
leave
jle
arpl
inc
lret
adc
adc
xor
mov
dec
and
cli
int3
arpl
stos
lcall
insb
cvtdq2ps
push
popa
inc
sbb
mov
gs
fwait
inc
es
sbb
cmpsb
lods
dec
dec
and
sbb
cmc
mov
cmp
push
aam
add
sahf
jg
lret
dec
inc
inc
push
push
gs
pop
inc
xchg
lods
inc
inc
popl
js
add
icebp
jg
or
stos
pop
xchg
sarl
and
insl
mov
movsl
bound
mov
sbb
sti
hlt
cmpb
fnsave
iret
or
movsl
inc
iret
popa
mov
jns
cmc
scas
pop
sbb
jns
test
xchg
repz
cwtl
push
das
and
das
inc
inc
push
inc
idivl
mov
mov
adc
sub
jnp
push
repz
sub
mov
fisttps
pop
das
add
pop
imul
inc
push
std
mov
test
test
ret
stc
mov
mulb
mov
fwait
lea
lret
orl
loopne
adc
mov
mov
sub
mov
and
lods
clc
ja
idivl
jle
cltd
jb
dec
dec
fninit
pop
jae
out
dec
mov
outsl
and
andl
or
add
fs
lahf
mov
pop
push
cwtl
sub
leave
pop
cmpsl
mov
xorl
mov
insl
popa
pop
cmc
xor
dec
ja
outsl
or
mov
mov
repz
pop
cmp
repz
shld
test
inc
sbb
fadd
xchg
bound
jb
and
fs
sub
and
mov
push
mov
add
push
out
int3
fisubl
mov
or
push
clc
movsb
cmc
jo
les
dec
fildll
pop
xchg
lods
clc
xchg
cmp
push
cmp
sub
mov
stos
or
dec
xchg
pop
stc
test
push
je
stos
fstpl
or
dec
adc
stc
mov
sahf
dec
and
out
sbb
xchg
or
movsb
test
adc
je
push
fs
sarb
movsb
jp
sub
ret
lock
lods
adc
pop
loope
xchg
mov
or
jge
fadds
fwait
add
icebp
or
loop
imul
dec
call
sbb
scas
push
xchg
jmp
adc
xchg
outsl
add
mov
dec
out
jg
fsubl
sbb
mov
daa
nop
or
push
pop
std
stos
push
cltd
loope
xchg
jnp
dec
cltd
jns
xorl
cmp
test
fiaddl
xor
xchg
and
cmp
inc
aas
mov
icebp
jne
xor
and
cli
jp
mov
jl
jecxz
or
lahf
xorb
push
fnstenv
jae
push
mov
in
xchg
add
outsb
mov
sub
mov
pop
and
mov
pop
mov
out
xchg
loop
mov
mov
or
inc
jae
pusha
jge
xor
xchg
in
mov
pop
mov
jnp
pop
test
jle
inc
lods
ljmp
push
pop
lcall
ljmp
sbb
cmc
jo
imul
add
sbb
mov
outsl
stc
sub
cmpsl
sub
push
repz
dec
sbb
inc
sbb
inc
and
insl
push
mov
sub
xchg
xchg
xchg
xchg
testl
out
mov
adc
daa
pop
cmc
jb
lcall
mov
mov
xchg
stos
pusha
xchg
imul
mov
mov
fdivl
cmp
pop
adc
pop
jle
adc
jbe
mov
xchg
fs
fs
lock
fsubrs
pop
mov
in
outsl
sub
sub
mov
pop
add
stos
push
xchg
cwtl
add
and
dec
pop
popa
into
adc
repnz
sbb
pop
dec
sub
cli
std
repz
sbb
mov
scas
xlat
outsl
ret
insb
out
insb
sub
or
xor
dec
jg
clc
push
std
inc
scas
shrl
jmp
push
cmp
ss
pop
jne
js
sbb
xchg
push
out
jmp
mov
push
sbb
arpl
sahf
sti
add
mov
movsl
sbb
jg
es
fbstp
dec
xchg
clc
js
mov
mov
mov
imul
sbb
lods
mov
mov
in
ss
es
outsb
lds
rorl
xorb
xchg
inc
cmp
insl
aas
mov
pop
iret
lods
ds
pop
shr
mov
cwtl
push
push
xchg
push
or
mov
cmovb
xchg
clc
imul
mov
cmp
jge
mul
xor
cmpsl
lods
cli
imul
fcoms
es
sub
add
test
fnstenv
and
cmp
add
jle
movsb
dec
mov
adc
icebp
push
xchg
add
mov
add
sgdtl
lret
js
jle
fistps
adc
ror
xor
push
imul
add
mov
push
shlw
mov
test
andl
sbb
lcall
inc
fs
insl
xor
shlb
andb
push
cmc
les
xchg
xor
or
and
pop
jae
push
cmp
push
dec
sbb
cmp
inc
jae
add
xor
aas
ret
les
adc
ljmp
ja
jmp
stos
cmp
les
addr16
push
mov
push
mov
push
mov
std
shll
lret
and
stc
mov
lcall
negb
orl
shll
es
inc
mov
mov
sbb
addr16
inc
push
jb
push
pop
std
movsb
es
fs
fsubrs
pop
mov
out
ss
push
xor
insl
ret
push
in
pusha
mov
into
push
push
push
fs
push
and
xchg
enter
xchg
xchg
aam
pop
or
ljmp
xchg
cmpsl
jbe
jo
or
ljmp
in
push
adc
cmp
inc
cmpsb
in
push
and
jmp
sbb
cmpsl
mov
lea
out
int
mov
cld
jl
ret
sub
ljmp
lret
in
lock
add
dec
divb
test
add
icebp
mov
push
addr16
popa
cmc
and
mov
mov
ja
adc
cwtl
bnd
gs
sbb
or
cmpsl
add
fs
lret
inc
imul
fsubrp
popf
icebp
mov
jge
or
sbb
cmpsl
adc
sti
and
or
and
mov
cltd
aam
dec
add
dec
adc
add
mov
std
clc
loopne
sub
test
fnstcw
inc
xchg
inc
mov
push
lahf
int
sbb
push
jmp
lock
push
mov
mov
jl
aas
fimull
dec
inc
call
fcos
inc
out
imul
test
push
fs
jle
outsl
mov
inc
and
out
ret
or
jnp
pop
mov
ljmp
bound
cmpsb
pop
push
xchg
js
and
test
dec
and
insb
mov
mov
stc
fmuls
and
mov
ret
cmp
or
ret
lcall
push
adc
pop
sbb
inc
or
mov
das
jo
push
inc
mov
sti
data16
stc
nop
fsubrl
into
aaa
inc
mov
dec
mov
adc
mov
lahf
pop
dec
jmp
jbe
and
lahf
dec
or
xchg
xchg
and
lods
lods
mov
xchg
mov
xchg
xor
test
out
test
xor
popa
movsl
sarb
mov
adc
fwait
pop
sbb
bnd
aas
cmp
push
push
jle
arpl
cltd
movsb
das
fwait
sti
push
mov
fldcw
cmpl
inc
inc
imul
jmp
call
dec
xor
mov
xchg
jmp
adc
mov
lcall
iret
sbb
in
adc
jne
cmp
inc
and
mov
fwait
imul
bnd
jecxz
scas
shrl
add
testb
in
sbb
sub
leave
mov
test
dec
dec
push
or
mov
inc
xchg
adc
fidivs
fistps
mov
inc
rcr
cltd
icebp
outsb
lods
jne
jge
scas
movsl
sub
das
repz
loop
sub
lods
icebp
inc
lds
cmp
dec
xor
out
jne
call
mov
cwtl
mov
inc
xchg
and
outsb
xor
idivl
in
jl
or
popl
clc
add
in
and
orl
xor
shll
mov
or
push
add
sbb
addr16
mov
pop
pop
jp
push
arpl
dec
mov
push
imul
xorl
dec
pusha
outsb
jmp
cmp
aaa
das
mov
sub
cmp
mov
mov
jecxz
push
out
leave
out
test
ljmp
mov
lock
popa
cld
lods
out
inc
pop
out
loop
fs
pop
adc
int3
iret
jmp
mov
cmp
adc
jg
ds
cwtl
mov
and
xchg
cld
mov
jb
mov
in
adc
mov
daa
mov
push
jo
cltd
and
mov
addr16
or
scas
fsubrl
push
jp
xchg
push
dec
xchg
push
mov
adc
push
cmp
es
inc
loopne
cmp
insl
cmp
ret
out
test
sbb
addr16
pop
aas
pushl
push
cmp
lods
mov
mov
pushf
cwtl
sahf
push
fwait
add
add
xor
inc
push
and
shr
insl
cmpsl
pop
cmpsb
cmpsb
lcall
pop
push
data16
sbb
ss
xor
rcr
pop
or
repnz
loopne
inc
jmp
enter
sub
sti
subb
pushf
test
bound
lds
roll
add
leave
packsswb
mov
jg
mov
mov
insl
xor
mov
xor
fcmove
ja
dec
jle
sar
adc
add
inc
xchg
mov
or
std
lcall
mov
vmovaps
lea
shr
cltd
and
dec
insb
adc
dec
sub
mov
repz
andl
shll
out
or
leave
mov
dec
mov
mov
add
xor
mov
mov
pop
std
aas
add
push
lock
mov
lods
mov
inc
imul
nop
cmp
sub
je
pop
push
dec
ret
xchg
test
jno
ja
out
jo
fiadds
jp
ret
and
jmp
pop
xchg
jnp
repz
mov
xchg
push
std
dec
xchg
lock
mov
xor
jno
xchg
lds
jns
adc
jge
out
cmp
xlat
popf
xor
add
lds
push
cwtl
fcoms
mov
cmc
sbb
fists
loope
adc
cmp
leave
dec
cld
mov
sbb
sbb
jle
pop
jae
dec
add
mov
cmpb
or
push
jbe
shrb
mov
in
imul
or
mov
dec
es
xlat
popa
pushf
pop
sub
lds
out
cld
in
mov
push
lahf
imul
mov
mov
xor
lods
fists
xor
ret
enter
jb
xlat
dec
mov
push
jae
rcrb
out
pop
sti
xor
aaa
mov
mov
notb
cld
leave
lret
or
dec
fistpl
insb
mov
in
cltd
xchg
jecxz
cltd
lods
sti
stc
rcrb
ljmp
loopne
mov
shlb
xor
pop
mov
mov
mov
lods
fidivl
mov
jl
jmp
jne
mov
dec
popf
mov
xor
or
into
into
dec
mov
inc
adcl
mov
adc
ljmp
jbe
sbb
xorl
shl
dec
fcomip
mov
loop
adc
iret
push
xlat
in
gs
jge
daa
sub
rorb
mov
pop
pop
pushf
aas
ljmp
mov
push
mov
xchg
mov
or
sub
dec
pop
push
mov
data16
mov
cmc
stos
rcrb
fwait
insb
and
dec
adc
pop
jle
pop
jo
stos
roll
cli
mov
sbb
stos
inc
mov
sub
andb
inc
inc
clc
xchg
inc
out
pop
out
cmp
push
clc
lock
xchg
cmp
outsl
inc
and
mov
sbb
inc
add
pop
movsb
cli
xchg
data16
dec
and
stos
pop
jg
daa
pusha
lods
rsqrtps
inc
dec
mov
push
scas
xchg
adc
xchg
movsl
in
pop
push
jp
mov
addl
ret
fldcw
ret
ljmp
std
xor
clc
push
lds
shll
ffreep
cmp
lea
aaa
mov
jp
mov
fisubs
dec
cmp
lods
fcomps
lcall
dec
add
test
mov
sub
into
jg
fimull
call
or
adc
test
inc
add
clc
xor
data16
push
lcall
pop
in
lods
push
daa
dec
or
dec
mov
dec
imul
adc
xchg
data16
fstpt
jno
inc
xor
xchg
jp
and
sbb
mov
push
addr16
jecxz
xor
xchg
cmp
enter
int
and
pop
mov
xchg
in
or
jp
stc
stc
sbb
das
iret
or
loop
jno
aad
cld
push
cmc
jge
dec
push
mov
fmuls
loope
cmp
jns
cmp
adc
lock
jmp
sub
sbb
outsb
stos
rcll
mov
xor
pop
sar
in
and
ret
stos
add
jnp
insl
cltd
dec
lret
dec
jmp
idivl
adc
pop
imul
jb
adc
lods
xchg
and
inc
rorl
test
les
arpl
scas
pop
jg
push
inc
lret
movb
imul
popf
jmp
jle
jnp
std
fcomip
xchg
mov
mov
sbb
cmc
fcmovnbe
xor
jmp
sti
insb
mov
into
or
cmc
mov
add
xor
jl
push
popf
cltd
mov
adc
mov
xor
loopne
mov
inc
int
popl
xchg
inc
cmp
into
outsb
dec
inc
cli
xchg
cmpsl
pop
xor
shlb
sbb
imul
inc
and
enter
xchg
xchg
fnstenv
in
adc
test
mov
mov
push
stos
sbbb
jecxz
inc
or
jg
xchg
mov
and
cmpsl
inc
clc
push
into
sbb
imul
inc
inc
movsb
shlb
cli
xorb
mov
ret
sysenter
aas
std
jecxz
xchg
adc
sahf
test
mov
xchg
stc
xlat
dec
shll
xor
int3
and
inc
ja
sahf
or
fmulp
iret
cmp
enter
mov
mov
test
mov
roll
jb
add
sub
jmp
sub
cli
mov
push
lods
pop
fisttps
cmpsl
rorl
sbb
jae
fcompl
rcrb
adc
push
stos
in
jecxz
and
mov
add
movb
xchg
popa
hlt
out
mov
mov
loope
xchg
xor
adc
lahf
inc
mov
jno
add
loopne
test
inc
mov
mov
mov
xchg
adc
lret
sub
fstpl
push
cmc
frstor
fs
fimull
xchg
mov
mov
pushf
sbb
inc
inc
add
aad
inc
mov
ss
outsb
dec
por
cmp
fidivrl
push
hlt
lea
dec
or
cltd
jecxz
push
jne
xlat
mov
inc
pop
inc
les
ja
outsb
aaa
pusha
out
push
push
sub
inc
push
add
gs
pusha
enter
xlat
xchg
bound
daa
dec
imulb
jge
cltd
sbb
movsl
jbe
outsb
adc
jl
push
cmp
cmpxchg
mov
mov
or
mov
mov
jno
xchg
movsl
filds
adc
push
push
pop
xchg
sbb
fiadds
inc
fs
out
push
sub
loop
mov
mov
mov
cmc
fnsave
ss
jecxz
enter
cmpsl
add
mov
je
clc
pop
push
inc
push
jae
dec
sahf
xchg
xchg
and
inc
jne
pusha
sub
xchg
inc
inc
sahf
sahf
push
add
fstps
fimuls
and
xchg
jae
mov
mov
je
mov
sbb
loopne
cmp
insb
in
mov
mov
xchg
stos
ret
and
xchg
das
jns
data16
push
cmp
divb
pushf
ja
inc
or
jo
stc
push
outsb
sub
xlat
in
jbe
adc
repz
test
push
adc
pop
ja
push
js
loope
dec
or
mov
jae
jno
pusha
inc
fisubs
cmp
push
mov
sbb
jae
insb
imul
mov
ljmp
lcall
ljmp
nop
add
pop
mov
cli
jnp
fiaddl
and
lock
pusha
sti
pop
dec
mov
adc
ret
clc
xchg
jecxz
mov
das
pop
pop
rol
shll
xchg
lahf
mov
gs
jecxz
fwait
pop
mov
shrb
jge
daa
data16
in
mov
push
cmc
lcall
mov
sub
js
pop
xchg
sahf
insb
js
cmp
lahf
sub
in
ss
mov
aas
mov
pop
or
daa
int3
mov
mov
lods
ds
jne
inc
xchg
jnp
adcl
jge
push
xchg
movsb
or
push
cld
and
les
hlt
nop
inc
mov
movsb
push
rcll
pop
lahf
pusha
xchg
sti
scas
mov
and
inc
adc
addb
xor
int
xchg
jns
mov
pop
mov
sub
lock
push
mov
in
lret
jne
cs
cwtl
pusha
mov
pop
mov
je
lods
insl
insl
and
shlb
adc
mov
mov
push
pop
scas
xor
jmp
mov
in
xchg
lcall
outsb
repz
lds
xchg
sub
and
insb
mov
and
hlt
stos
mov
das
push
dec
nop
mov
inc
fwait
ret
xor
mov
rcrb
jg
movsl
mov
pop
out
stc
fidivrl
js
cmpsl
int3
fistpll
xchg
cmpsl
stos
jbe
adc
add
inc
add
add
adc
pop
adc
mov
or
lcall
add
pop
sbb
pop
mov
and
std
add
push
loop
sbb
les
in
inc
mov
mov
push
adc
inc
mov
mov
sub
or
dec
sbb
movsl
sbb
xor
sub
fisubrl
lret
insl
cmp
enter
lods
pop
pop
and
or
add
push
and
and
push
or
mov
inc
mov
jge
or
xchg
dec
loop
xor
and
jo
jmp
inc
add
cmp
sub
cmp
mov
dec
pop
popf
fdivrl
push
popl
je
xlat
jp
pop
jmp
mov
or
push
mov
fcomps
pop
fnsave
imul
cmpsb
fwait
lock
sub
std
rcl
fwait
jno
cmpsl
add
sbb
or
inc
std
movsb
shlb
pop
xchg
mov
je
ret
fisubrs
lcall
fistl
mov
mov
shrb
mov
sub
int3
xchg
mov
loope
adc
fmul
cli
sub
scas
jb
jle
into
popa
pop
fnstsw
incb
xchg
dec
scas
icebp
adc
fsub
enter
push
push
adc
enter
leave
add
and
adc
jne
in
mov
out
insl
movsl
adc
push
lea
pop
pusha
ffreep
cmp
lds
jae
pop
push
fadd
sti
xchg
dec
fst
pop
sub
sbb
pushf
mov
and
cmp
mov
mov
rcrb
adc
enter
icebp
loope
mov
dec
aam
inc
cmp
sbb
xor
data16
outsl
data16
arpl
mov
pop
jno
jne
mov
xchg
dec
jne
aam
popa
cmp
icebp
xor
in
loopne
cwtl
into
push
jo
fwait
sbb
mov
pop
pop
fstl
push
xchg
aam
add
pushf
shlb
fdivs
ret
cli
push
nop
outsb
xorl
dec
cmp
push
xchg
xchg
and
jne
inc
push
xor
aad
es
arpl
test
adc
or
pop
mov
in
inc
pop
xchg
mov
adc
aad
pop
out
cmp
mov
jnp
test
sub
test
dec
inc
stos
loop
adc
jle
jne
in
mov
jne
movsb
nop
adcl
pop
fsubl
dec
int3
xchg
and
imul
or
loopne
or
pop
inc
xchg
cld
jns
mov
jno
out
pusha
test
insb
dec
mov
push
imul
jecxz
cmc
mov
imul
adc
stc
lea
popa
and
lret
pusha
add
ret
mov
push
mov
cltd
xor
scas
xor
int3
inc
mov
inc
sbb
std
pop
cwtl
mov
inc
movsb
push
and
add
jo
loope
stos
sti
sahf
into
dec
xchg
cli
pop
int3
ffree
fstp
mov
add
fs
dec
cmc
rcrl
inc
mov
cltd
repz
adc
and
jl
cwtl
clc
ret
push
jae
je
push
jp
xor
and
jmp
lds
ds
pop
nop
jp
and
mov
dec
loope
adc
cmp
movsb
int3
push
scas
xor
push
lret
and
or
in
test
cmpsl
mov
cmp
cwtl
cld
jmp
pop
ja
jb
push
sbb
inc
bound
mov
xlat
mov
push
aaa
jge
sub
adc
cmpsl
pop
enter
icebp
stos
add
sub
mov
push
cmp
pop
fwait
xlat
les
add
aad
jnp
cmp
adc
and
gs
mov
and
mov
sub
and
sti
cli
enter
lcall
shrb
daa
mov
cwtl
jg
dec
mov
mov
pushf
mov
push
cli
js
stos
out
pushf
addr16
in
xchg
and
pop
push
mov
mov
inc
jecxz
xchg
cmc
jne
mov
mov
stos
jns
xchg
stc
and
mov
lock
scas
push
mov
xchg
jg
outsl
int3
cmp
sub
mov
sbb
inc
and
jno
out
mov
push
in
frstor
leave
sub
pop
repnz
das
cmp
iret
movsl
add
fwait
ds
adc
or
test
cld
mov
sub
mov
jle
xchg
loope
pop
ds
lds
pop
or
xchg
cli
cli
xor
leave
adc
imul
add
and
xorb
addl
cmp
pusha
xor
jbe
mov
xorps
les
psubw
and
dec
xchg
or
fucomip
cmpsb
addr16
xchg
inc
pop
adc
xchg
lods
aaa
pop
jmp
push
mov
stc
dec
jnp
and
test
push
pop
jecxz
dec
xchg
sbb
sub
es
pushf
fcoml
arpl
dec
aad
aam
jge
sub
sar
sub
xchg
push
push
loopne
icebp
rolb
lret
dec
aas
push
js
add
jo
push
xor
push
dec
fldenv
rorl
cmp
fisubrs
push
fwait
sub
mov
push
jbe
jb
scas
outsb
mov
cmc
call
andb
pop
sub
std
push
cmpsl
mov
icebp
cwtl
sub
pop
mov
sti
inc
add
call
fs
jo
sti
stc
xor
mov
mov
test
dec
inc
popa
fidivs
js
pushf
mov
xchg
lahf
out
sub
fabs
inc
lcall
das
fabs
pop
cmp
clc
stc
or
cs
je
add
stos
and
call
push
gs
and
xchg
and
enter
xlat
mov
fnsave
das
pop
fimuls
mov
outsb
mov
lea
shrl
or
arpl
int
mov
jns
cmpsb
dec
lcall
cli
sti
cmp
push
decl
adc
and
orl
popa
orl
movsb
and
dec
out
ret
jno
xchg
in
iret
push
daa
cmp
pop
fildl
mov
pop
xorb
pusha
and
cwtl
add
jle
cld
jbe
xchg
in
dec
aad
or
mov
int
cltd
test
pop
inc
insb
sbb
inc
shlb
mov
and
out
add
jecxz
int3
mov
push
inc
inc
rcrl
iret
cmc
sti
and
fidivrs
push
sub
jns
pop
fidivrs
pop
orb
or
aam
jmp
ss
call
out
fidivrl
jp
and
fnstenv
outsb
mov
adc
fwait
jle
enter
pop
jns
push
cmp
aam
cmp
pop
pushf
fiadds
mov
pop
fcmovnb
sub
lock
mov
and
int3
xor
sbb
out
sbbl
add
fistl
sbb
sub
xchg
cmp
xor
jb
mov
inc
shrb
dec
fyl2x
in
pop
mov
stos
adc
dec
clc
adc
arpl
mov
cld
pushf
jnp
push
subb
pop
cmpl
lds
xchg
aam
pusha
popa
xor
outsl
das
pop
push
mov
mov
adcl
insl
repnz
xor
inc
fwait
in
mov
cmp
sbb
jecxz
inc
test
xchg
mov
or
popa
test
push
push
inc
xor
je
mov
mov
test
adc
rorl
call
out
jl
pop
arpl
pop
and
push
xchg
inc
imul
cmp
pop
cmp
inc
mov
out
lock
mov
dec
out
jmp
xchg
pop
pop
and
mov
arpl
mov
repz
xor
xor
jp
in
mov
sar
inc
int3
imul
sub
cltd
mov
fs
subl
and
outsl
inc
mov
test
jg
sub
aad
lret
or
cmp
sub
mov
fisubrs
jge
push
or
repnz
ljmp
inc
sti
incb
xchg
int3
into
xchg
fninit
sbb
divl
scas
in
fnsave
mov
repnz
add
ret
push
and
les
or
pop
mov
test
or
mov
pop
or
nop
aad
inc
push
or
repnz
repz
mov
mov
in
outsb
ds
repz
cltd
push
cs
push
aaa
adc
fbstp
or
in
sbb
inc
out
out
pmullw
neg
jecxz
cwtl
in
mov
xchg
xor
pop
xchg
inc
mov
fdivrs
cmp
icebp
sarb
adc
mov
outsl
cmp
push
fldl
dec
xchg
add
fcmove
pop
inc
push
adc
sbb
and
out
outsl
push
outsb
sbb
fbld
adc
mov
pop
addr16
push
es
mov
int
into
xchg
dec
add
loope
fsubl
out
or
push
popf
cmp
sub
aaa
std
push
dec
imul
aad
mov
cmp
add
mov
ret
pop
in
pop
mov
iret
cwtl
cmp
scas
das
je
inc
or
lret
xchg
add
outsb
rorb
in
fisttps
pop
data16
cmp
shll
sub
lods
xchg
pop
cld
sub
stc
mov
cld
mov
mov
add
mov
push
inc
adc
das
lods
mov
mov
mov
mov
dec
xorl
pop
and
push
push
push
dec
jae
mov
xchg
mov
pop
xchg
add
dec
clc
rolb
into
sbb
sahf
adc
pop
in
xor
mov
inc
pop
aam
fistps
sub
aaa
fmuls
loopne
inc
loopne
pop
xchg
insb
push
test
mov
loop
stos
mov
addr16
inc
cltd
aam
cli
popa
xchg
iretw
lcall
arpl
xor
dec
xchg
fisubs
mov
jae
shl
fisubs
or
lds
or
jge
cmp
adc
out
dec
pop
test
pop
jge
xchg
cmp
mov
pop
jne
cmp
cs
xor
jbe
xor
adc
lret
xlat
mov
daa
and
gs
in
pop
daa
mov
inc
aas
mov
in
jg
pop
inc
jp
and
out
pop
lods
int
es
pushw
test
cld
sbb
add
inc
and
add
pop
pushf
jmp
dec
xchg
xlat
incb
dec
mov
out
adc
xor
or
sahf
add
pushl
jecxz
mov
cmp
fwait
stc
add
outsl
mov
xlat
fwait
aas
clc
add
rcrb
add
add
rorb
notl
ret
mov
inc
pusha
test
push
fisubs
sub
arpl
xchg
in
jge
pop
xchg
or
dec
xchg
push
loopne
adcl
pop
icebp
push
pop
call
sub
push
pop
test
int3
mov
sbb
je
leave
mov
sub
adc
mov
std
stc
inc
mulb
pusha
cld
fs
inc
leave
mov
cwtl
pop
mov
adc
orl
jle
vmovups
add
leave
movsb
cmpsl
sub
push
sub
push
and
fcomip
adc
aam
outsl
sbb
mov
dec
addb
adcb
add
pusha
xor
cmc
cmp
aas
pop
out
movl
call
dec
xchg
seta
aad
mov
test
jecxz
add
add
sbb
fidivl
test
sbb
cli
lods
jnp
les
ss
js
scas
adc
push
cmp
cmp
cmp
cmp
jmp
scas
pop
jle
xor
mov
fnstsw
pop
mov
inc
clc
push
or
out
mov
cmp
notl
mov
fisttps
pop
lock
adc
loop
sub
xchg
jnp
stos
fstpl
adc
lahf
xlat
enter
setb
add
shrb
enter
and
xchg
fnstcw
mov
or
pusha
out
hlt
mov
pop
mov
add
xor
fcoms
scas
mov
dec
jl
pop
push
jb
in
scas
xchg
aad
test
mov
lret
stc
xchg
jae
or
mov
xchg
cmpl
lcall
xor
aad
and
cmpb
pushf
and
lds
sarl
inc
idiv
cmpsb
sbb
stos
test
sahf
xor
mov
into
das
aad
cltd
xlat
mov
adc
xchg
pop
repz
sti
nop
dec
xor
mov
pop
or
aad
pop
push
leave
popa
leave
ja
jl
in
sub
data16
pop
xor
mov
movsb
inc
pop
pop
cmp
cmp
sbb
clc
lret
jnp
and
mulb
inc
stc
mov
sub
fiaddl
sub
inc
dec
mov
adc
jbe
add
cmp
fidivrl
add
in
jns
xor
xchg
mov
test
mov
xchg
in
mov
cmp
jbe
mov
fisubs
add
xlat
les
data16
push
out
and
jns
aas
inc
pop
sub
and
imul
add
mov
mov
popf
dec
dec
cli
icebp
sbb
insb
pop
int
add
pop
sub
jo
lcall
pushf
jae
hlt
sti
pmaddwd
xchg
adc
std
mov
inc
jne
add
xor
test
sub
push
mov
aas
popa
or
sbb
lret
push
cmc
dec
ss
adc
cmp
inc
adc
roll
cmp
pusha
mov
movsb
push
cli
sbb
insb
inc
test
jne
fisubrl
mull
fstp
cwtl
sbb
cli
adcb
cmp
xlat
cmp
push
jecxz
sub
jge
daa
sbb
sbb
inc
aam
inc
ficompl
adc
mov
jno
adc
and
sbb
jge
xor
inc
xchg
aas
repz
jp
cmp
pop
mov
fadds
repz
enter
xchg
sbb
shl
jmp
jno
jno
mul
movsl
push
mov
nop
rcrb
add
shll
cli
or
addr16
cmp
jecxz
and
mov
out
sub
cwtl
pop
add
xor
push
and
loope,pn
sbb
add
fwait
movsl
cltd
xchg
fldcw
and
das
repnz
ficomps
outsl
pop
jbe
mov
jmp
add
mov
int
in
test
test
mov
cmpsb
es
test
mov
xor
push
jb
frstor
mov
out
and
fdivrl
out
addr16
adc
int
mov
gs
xchg
mov
mov
jno
lea
test
jae
jne
hlt
and
aas
add
mov
push
add
mov
pop
aam
dec
je
xchg
fidivrl
pop
push
sbb
stc
sub
push
jnp
neg
negl
into
xor
dec
insb
add
adc
cmp
and
adc
iret
jle
fidivrl
jns
in
fimull
xorb
lcall
js
xchg
aam
jmp
gs
xchg
lea
pop
xchg
cmpsb
call
fsubrs
mov
dec
cltd
and
mov
movsl
adc
xchg
ret
cs
jle
add
sub
rolb
lret
inc
or
jg
sub
les
push
pop
or
xchg
cld
inc
mov
mov
xchg
jl
sbb
sub
setne
in
dec
inc
cmp
mov
mov
adc
and
dec
sub
dec
mov
addr16
sbb
loopne
or
out
ljmp
insb
out
sbb
adc
xor
sub
or
stos
loopne
xchg
outsb
cld
cmp
movsl
enter
cmp
or
ja
mov
pushf
rcrl
push
testl
ret
jae
stos
inc
pop
imul
jmp
fsubl
or
push
jmp
and
or
int
mov
pop
xchg
or
int
test
cld
rolb
popf
and
sbb
sub
cmp
mov
mov
jge
lods
add
push
xor
pop
xor
test
pop
cmp
es
inc
pop
xchg
push
mov
and
push
pop
pop
sbb
sub
cwtl
or
mov
test
xor
jle
cmp
ja
mov
and
inc
aas
xor
push
jmp
mov
mov
xchg
call
ss
cmp
sub
clc
shlb
mov
cs
cltd
sbb
loop
int
push
and
sub
mov
es
stc
mov
push
and
test
repnz
iret
and
push
jle
fchs
stos
push
mov
ss
int3
or
or
ret
mov
mov
push
test
fsubrl
sahf
cmpsb
test
mov
dec
mov
lcall
xchg
or
inc
sub
and
sbb
fs
dec
in
fisubrl
out
subb
and
push
and
mov
je
js
bound
in
jnp
adc
xor
hlt
mov
icebp
lock
cmpsb
sub
push
sub
jbe
jne
fcmovnb
test
add
outsl
inc
cmp
sub
int3
aas
cmpb
xchg
test
jnp
sub
fisubrl
mov
cld
lds
popf
xlat
pop
loopne
orb
sub
fsubrp
iret
test
push
dec
bndldx
mov
hlt
or
sub
push
call
jmp
jo
les
stos
cmpl
pushf
pop
or
sarb
dec
out
push
inc
rcrb
mov
cmc
sub
xchg
xor
mov
push
cmp
outsl
mov
mov
setg
data16
pop
idivb
pushf
xchg
cld
movsb
sar
sbb
xor
lods
push
cmc
jnp
sahf
dec
push
mov
push
popl
sbb
scas
cs
cmpb
xor
xchg
add
pushf
cmpsb
jbe
xor
dec
shr
sahf
mov
add
test
cltd
adc
imul
pop
jmp
in
mov
and
push
and
cmp
mov
mov
push
aaa
sbb
adc
call
cmp
orl
push
pusha
jns
mov
fdivr
lahf
mov
std
test
movsb
std
sbb
in
lret
fstpt
jne
push
mov
jns
push
leave
mov
mov
inc
arpl
ds
inc
lcall
xor
cli
icebp
enter
mov
aas
aas
or
dec
addb
xorb
cmpsl
dec
das
sub
dec
cltd
clc
repnz
mov
jecxz
out
jp
arpl
adc
iret
pushf
inc
rcll
pushf
mov
dec
pusha
int
ret
hlt
movsb
into
fwait
in
add
xchg
or
loop
or
fisttps
mov
pop
cli
pandn
inc
sbbb
ja
pop
fstl
call
xor
pusha
adc
mov
out
xlat
fs
and
add
sub
popf
or
cmp
pop
mov
repz
sbb
pusha
push
xchg
stos
dec
lret
pop
nopl
fisttps
aas
or
pop
sub
dec
and
dec
jo
ret
imul
lds
mov
mov
push
or
out
ds
aas
dec
loope
lret
ret
mov
repnz
inc
ljmp
outsl
mov
push
je
xchg
push
in
nop
pop
imul
jo
fcmovnu
stos
or
lods
adc
mov
imul
and
out
mov
adc
cmp
bound
aas
adc
hlt
dec
sbb
lods
add
loope
mov
cmpsl
in
cmpsb
fwait
lret
cli
jg
imul
ret
notb
fstl
sbb
push
loop
cmp
jl
sub
xor
inc
or
out
fs
pop
fwait
ret
and
js
pop
fidivl
cmpl
and
repnz
xchg
sub
daa
rcll
rorl
add
loopne
xor
imul
call
ss
mov
and
add
sbb
add
cmp
je
add
in
xchg
adc
adc
cmp
outsb
xor
or
pop
inc
mov
push
dec
ret
sti
cmp
insb
ljmp
jbe
xor
sub
or
arpl
outsb
iret
sbb
jae
push
out
sub
lea
sarb
test
fstpl
mov
insb
sub
pop
sub
cmp
lret
inc
push
sub
and
loopne
lods
mov
and
adc
mov
jns
mov
lea
sbb
pop
fdivr
jmp
push
xchg
cwtl
cmp
cmpsb
sbb
mov
jecxz
or
cmp
add
fists
mov
mov
mov
or
add
xchg
push
loopne
jnp
jl
and
icebp
jns
push
cmpsl
or
aas
aam
mov
dec
and
inc
cmpsl
sbb
pop
dec
sub
or
dec
enter
jno
jg
ret
jecxz
mov
mov
jno
cmp
fsub
push
xor
mov
lcall
pop
lret
cmc
add
dec
xchg
or
inc
and
mov
out
push
jb
arpl
das
repnz
and
mov
inc
mov
cmp
scas
pusha
or
hlt
dec
mov
movsb
arpl
jb
loope
adc
aaa
and
dec
dec
sarb
dec
imul
sbb
fidivrs
cmp
repnz
or
aam
outsl
sbb
stc
sbb
or
std
pop
push
lods
jo
gs
mov
inc
and
jo
mov
or
sub
jg
add
xchg
les
cld
mov
rcrl
mov
and
jl
or
push
inc
leave
dec
add
cmp
enter
stos
cmp
aaa
nop
lods
mov
xor
mov
mov
mov
mov
or
sbb
mov
xor
filds
rcl
xor
les
mov
mov
icebp
pop
dec
fdivrs
xchg
dec
adc
inc
je
pop
pusha
pop
in
sub
lret
add
popa
dec
cmpsl
mov
cltd
and
xchg
sbb
sbb
ljmp
cwtl
pop
dec
push
imul
jne
imul
sbb
mov
adc
aad
scas
in
pop
sbb
mov
fcoms
push
ja
fsubs
repz
push
mov
js
sahf
fiaddl
dec
jbe
addr16
push
test
add
xor
inc
cmp
push
pop
rcl
ds
pop
dec
stos
push
xchg
add
lods
pop
cltd
cmp
adc
pop
mov
mov
out
into
xlat
cmpsb
pop
push
aaa
std
int
jecxz
add
jle
loop
dec
cwtl
in
aad
imul
inc
fnstsw
add
add
popf
jns
cmp
jno
jno
pop
lcall
add
sahf
mov
test
in
jecxz
mov
cmp
xchg
clc
sbb
je
lret
pop
pop
xchg
adc
lock
adc
push
adc
xor
and
addr16
xchg
in
cmpsb
xor
in
pop
pop
or
outsl
xor
cmp
das
or
xchg
xchg
cmp
inc
xor
sbb
and
dec
add
shl
jmp
push
xchg
ret
std
sahf
das
push
xor
cwtl
dec
cltd
sti
mov
inc
and
push
int3
and
xchg
ret
lret
fcompl
lods
xor
sbb
dec
lret
sub
mov
repz
sub
xchg
andb
popa
lds
ret
jge
xchg
pop
mov
fsts
mov
int
push
jns
iret
lds
cmpsb
xchg
lods
pop
mov
xor
repnz
push
aas
pushf
push
pop
mov
out
andl
sahf
vlddqu
xlat
jne
mov
inc
lret
cld
mov
filds
jmp
das
std
sbb
pop
ja
add
shrl
pop
pop
popf
and
inc
mov
dec
rcrl
add
jl
lret
loop
inc
loop
sub
icebp
jecxz
jecxz
rolb
clc
popf
bound
mov
and
popf
scas
jb
jb
add
cmpsl
xchg
push
mov
jnp
fsubl
push
inc
cltd
push
mov
lret
in
cs
outsb
repnz
stos
inc
sbb
pop
cmp
inc
add
and
outsb
push
xor
xchg
xor
lods
xor
cmp
inc
jge
xchg
jecxz
jno
jo
aam
cmp
adcb
add
adc
jle
icebp
and
std
mov
or
sbb
scas
jnp
fidivs
aam
loopne
adc
sbb
push
push
xchg
cmp
fnstcw
popa
outsb
insb
pusha
xor
adc
test
pop
dec
xchg
jnp
inc
add
mov
mov
iret
xor
mov
fsubs
bswap
xor
ljmp
pushf
pop
mov
bts
dec
dec
shlb
cmp
jge
add
cltd
subl
scas
and
sbb
mov
pop
call
shl
les
fwait
mov
inc
outsb
cmp
mov
xor
pop
dec
push
jo
or
int
dec
adc
or
jecxz
imul
sbb
mov
rcll
add
jne
pusha
mov
mov
jno
inc
movl
cmp
enter
xchg
inc
mov
lcall
add
or
inc
jg
mov
in
aam
je
jp
inc
sbb
xchg
or
inc
push
xchg
test
stos
arpl
mov
jge
sahf
xor
int
cwtl
sbb
mov
dec
das
notb
out
nop
and
pop
sbb
fdivl
add
outsb
lcall
inc
aam
int
mov
negl
lods
repz
aas
movsb
jne
test
push
mov
mov
inc
lds
adc
mov
adc
sbb
push
cmpsl
xor
cld
and
xchg
pop
les
pushf
and
inc
lahf
xor
dec
loopne
inc
and
push
jl
out
jl
mov
dec
notl
adc
sub
fimuls
push
and
xor
mov
fbld
fs
and
pop
mov
filds
fs
test
inc
popf
mov
popf
or
push
xchg
aad
mov
jo
mov
repz
xchg
mov
cmp
and
sarb
jmp
shl
test
lahf
pusha
ret
xor
mov
dec
loop
movsl
xor
or
lret
jb
sbb
das
inc
mov
insb
and
imul
sbb
mov
push
mov
fcomps
rolb
addr16
xor
mov
dec
out
add
cs
adc
pop
cwtl
mov
pop
fstl
push
or
xlat
fucomip
adc
xorl
pushf
xlat
mov
and
loope
and
mov
jnp
out
arpl
in
shll
bound
ljmp
jg
idivb
adc
sub
adc
inc
vminss
mov
pop
ror
push
das
inc
das
cmp
test
gs
mov
mov
fstpt
add
push
inc
shr
rcll
push
loope
dec
xor
and
into
jns
jmp
mov
xchg
loope
adc
sti
out
idivl
dec
repz
pop
sbb
mov
test
rolb
pop
in
testl
cmpb
pop
or
push
cmp
xor
xchg
mov
ja
outsl
jp
mov
and
les
out
mov
jb
fwait
in
bound
fisubl
bound
shlb
jp
stos
xor
fs
sbb
pop
push
xor
add
push
jg
stos
inc
rclb
push
lds
iret
jo
mov
push
adc
xor
out
and
not
mov
xchg
ret
push
mov
or
mov
pop
cmp
in
insb
pop
jecxz
xchg
fcmovbe
and
jns
frstor
popa
pop
or
xor
in
mov
test
clc
scas
loope
push
leave
fsts
cld
or
jbe
dec
mov
notl
test
fldcw
sbb
insl
daa
jno
push
icebp
cmpsl
repnz
jne
mov
inc
cld
adc
sbb
ds
jb
add
xchg
sbb
lods
call
inc
adc
or
stc
xchg
jb
add
lret
xchg
out
outsb
jle
pop
or
sbb
dec
sahf
and
cmp
into
push
cmp
dec
pop
das
jnp
out
xor
test
hlt
mov
adc
mov
pop
sbb
adc
lret
pop
inc
sub
dec
mov
inc
stos
jbe
in
jo
cmc
aad
xlat
mov
jge
enter
test
mov
movsb
scas
mov
mov
mov
mov
shrl
cmpsl
fmulp
jmp
dec
inc
mov
jp
dec
movb
sub
lret
mov
sub
push
jbe
xchg
cmp
imul
in
mov
inc
iret
enter
mov
inc
inc
xchg
aas
dec
dec
daa
sbb
addr16
mov
lds
rorl
fldl
scas
cmpsl
ljmp
cmp
aas
fidivrl
mov
roll
jmp
mov
mov
into
inc
mov
fdivrp
nop
xchg
insb
pop
adc
shll
cmp
das
mov
inc
mov
push
and
mov
pop
pop
sahf
test
scas
jbe
iret
cmp
js
hlt
lea
xchg
dec
movsb
ficomps
loopne
stc
adc
cmp
cmp
fsubr
cmp
out
movsb
fsubs
adc
and
mov
or
push
int3
mov
or
jb
call
xor
sahf
push
lds
mov
mov
cmp
cmpsl
mov
sahf
push
mov
adc
leave
fidivs
cmpsl
out
scas
pop
xchg
inc
mov
and
push
sar
cmpsb
or
and
iret
sahf
inc
inc
jmp
shrb
push
adc
xchg
cld
adc
or
popf
mov
xor
hlt
test
aam
adc
push
or
mov
mov
mov
leave
mov
jmp
jl
inc
int
aaa
jb
out
cli
ljmp
jne
rorb
lods
and
std
mov
push
aaa
arpl
jbe
ljmp
in
push
lcall
xor
mov
sub
mov
cli
cmp
inc
mov
js
dec
int3
aad
jb
and
fldt
pop
insl
js
dec
in
cmp
iret
aaa
je
dec
push
add
lods
inc
insl
clc
insl
inc
push
mull
dec
jbe
add
aaa
push
lds
sbb
dec
jnp
and
jp
outsl
stc
cmp
push
dec
add
xchg
push
repz
inc
mov
mov
pop
cld
pusha
cs
fcomi
or
pop
ds
std
sbb
mov
cltd
pop
mov
add
sahf
mov
std
add
sbb
mov
mov
lods
and
sbb
inc
jl
add
adc
ret
jnp
faddp
or
cltd
rcr
dec
inc
cmp
shr
jb
hlt
sub
inc
gs
jmp
pop
mov
mov
test
scas
mov
fcomi
mov
mov
adc
xor
dec
mov
push
sub
and
inc
imul
sub
imul
out
repnz
hlt
or
or
dec
loope
add
insl
inc
loopne
lea
mov
inc
xor
push
cmp
inc
cmp
mov
jns
sbb
xor
xor
ffreep
inc
stos
cmpsl
dec
test
mov
imul
adc
cmpsb
inc
push
cmp
movsb
icebp
jge
pop
icebp
ret
shr
jg
das
or
ds
fwait
push
mov
add
das
adc
mov
mov
sub
sbbb
clc
shll
dec
addl
call
sub
cmc
sbb
das
outsb
fsubrl
into
ror
sub
add
js
sbb
repnz
jp
jmp
enter
cmp
sbb
daa
outsb
xchg
popf
push
xchg
or
insl
mov
sub
xchg
or
xor
add
xchg
iret
jne
mov
add
fucomp
imull
pop
aas
cld
stos
xor
inc
jo
jnp
cmp
push
pop
jae
fucomp
mov
xchg
xchg
out
and
incl
fpatan
inc
and
cs
push
imul
jne
outsb
adc
mov
pusha
hlt
dec
or
gs
sahf
xor
cmp
addr16
aad
out
fnstsw
xchg
andl
adc
lea
lea
cltd
pop
sti
or
mov
mov
mov
xchg
fcoms
and
lret
ret
jg
pop
inc
and
push
cmp
fildl
shlb
frndint
fsubrl
test
jbe
inc
and
jne
out
jp
mov
mov
xchg
test
dec
roll
mov
sbb
and
mov
lret
mov
out
rclb
or
adc
push
jne
xor
cwtl
mov
in
or
xchg
fwait
and
sti
adc
inc
pop
fwait
add
daa
dec
bound
mov
in
je
fnsave
mov
xchg
testb
jbe
hlt
sub
imul
mov
fstpl
pop
add
inc
sub
bound
aad
pop
sahf
push
xor
hlt
xor
lcall
int3
mov
lods
inc
lds
push
mov
test
lret
xchg
sbb
cmp
hlt
int
push
rorl
push
rcr
gs
dec
loopne
mov
sbb
lea
or
adc
add
test
shlb
mov
xchg
fbstp
outsl
sahf
mov
mov
shl
addr16
decl
inc
jne
fs
inc
stos
lock
pop
mov
mov
outsl
movb
mov
cltd
inc
lods
or
pushf
jb
dec
lret
pushf
sti
popa
jbe
arpl
mov
and
inc
aad
in
mov
mov
inc
jle
dec
lret
adc
stc
out
push
test
cmp
in
or
mov
outsl
fisttpll
fldenv
ds
fs
cmp
jns
loope
or
adc
in
fmuls
loop
stc
test
into
popf
mov
xchg
or
or
cltd
dec
add
inc
xor
cmpsl
add
aad
inc
cmp
mov
rorb
push
dec
andl
test
jmp
pop
std
inc
call
jno
mov
adc
mov
xchg
adc
mov
cli
inc
jmp
leave
xchg
and
dec
scas
xor
pop
add
adc
mov
fwait
loope
inc
imul
jae
cwtl
sbb
xlat
call
lds
scas
fisubrl
and
insb
mov
test
jmp
jmp
jo
es
cmp
fstps
out
and
out
pop
dec
push
in
in
jle
add
and
cmp
dec
enter
cli
test
ljmp
es
call
jno
popa
lahf
cmc
movsl
or
subl
sbb
outsb
in
xchg
ret
jg
jbe
pop
xchg
lea
popa
shll
mov
mov
mov
jp
mov
push
sbb
xchg
jns
fisttpl
imul
stos
xor
push
and
jmp
dec
scas
loope
jle
xchg
pop
and
lahf
xor
scas
lock
mov
or
shl
jg
fs
mov
icebp
orl
push
pusha
mov
loopne
mov
pop
mov
jmp
lock
push
and
in
push
imul
push
add
jb
std
pop
or
jmp
in
adc
inc
mov
ret
fs
lcall
inc
mov
push
xor
daa
jb
jae
sub
pop
mov
push
jmp
jno
in
jle
inc
addr16
inc
stos
xorl
pop
mov
lods
xor
cltd
rcll
inc
daa
aad
iret
arpl
xchg
mov
fidivrs
ja
jns
hlt
inc
in
fimuls
adc
xor
mov
fsubrl
icebp
test
xchg
dec
int
in
sub
mov
mov
fstl
pop
adc
or
inc
jno
xor
je
call
stc
xor
aam
add
or
mov
fs
mov
cwtl
aad
mov
dec
xor
js
cmpsl
xchg
ja
sbb
arpl
mov
ror
movsl
repnz
push
mov
inc
mov
daa
inc
scas
jb
xchg
lds
xchg
push
xor
fmuls
sub
repz
inc
adc
imul
or
dec
mov
push
and
cmpsb
repnz
inc
fisttps
push
adc
lret
into
and
test
cmpsl
xchg
imull
imul
je
jecxz
jg
xchg
cmp
xlat
mov
into
iret
adc
sub
mov
loope
out
mov
add
push
push
decb
jecxz
gs
pop
ja
pop
aad
movsl
lret
sbb
sbb
and
inc
xor
mov
shr
cmp
cli
xor
jmp
shlb
iret
out
fildll
leave
jbe
andb
pop
lods
jmp
mov
inc
iret
inc
insl
cmp
add
and
les
std
jg
pushf
or
and
cmp
inc
add
or
and
popf
in
push
dec
or
jg
popa
pop
mov
sub
lret
shl
mov
inc
out
sub
sub
add
cmp
sub
jmp
xor
xchg
push
shlb
or
js
outsb
push
mov
lds
or
mov
mov
xor
push
mov
sbb
mov
in
adc
jmp
dec
dec
popf
xchg
push
sbb
pushf
bound
push
bound
cmp
jg
ret
pop
jl
xlat
and
mov
xchg
cld
mov
movl
jae
pusha
into
xor
enter
cltd
and
and
daa
cmp
int
add
push
xor
int3
pop
loope
cli
cli
icebp
sub
jecxz
push
cwtl
pop
mov
popa
cltd
mov
sub
daa
mov
ficoml
outsb
sbb
mov
mov
pop
xor
xchg
sub
cli
fucom
push
out
jge
sbb
xor
jae,pt
pop
xor
jl
test
mov
adc
xchg
call
cmp
ja
pop
test
aad
scas
pusha
popa
dec
ss
pop
outsl
movsl
loope
mov
in
mov
add
ret
jns
imul
push
xor
add
bound
int3
push
sahf
pop
pop
xor
or
in
push
mov
std
sub
ds
mov
xchg
imul
xchg
idivl
mov
rcrb
jbe
or
xchg
fisubrl
jge
lret
sbb
call
pop
mov
or
ret
loope
test
nop
mov
mov
xor
add
mov
jp
push
pop
mov
repz
shll
jmp
lea
inc
push
mov
mov
add
outsl
mov
aam
scas
sbb
mov
mov
cmp
mov
add
or
test
ret
sbb
sbb
xor
sbb
fisubrl
dec
mov
inc
out
pop
or
pop
add
mov
imul
mov
jno
sub
push
add
sub
fadd
into
cmpsl
sbb
aas
js
nop
mov
dec
pop
add
dec
je
mov
lret
pushf
imul
faddl
mov
fiaddl
pop
mov
aad
call
fdivrl
push
es
lods
movsb
xchg
lds
fwait
push
lret
outsl
add
sbb
push
dec
push
stos
rclb
lahf
mov
shll
xor
movsb
out
mov
es
dec
sub
rep
fsubs
inc
inc
dec
ret
ss
pop
sub
cmp
cmpsb
jbe
cmc
test
lock
fisttpll
push
add
xchg
hlt
jecxz
lcall
adc
in
push
dec
mov
loopne
cltd
jae
inc
inc
pop
adc
adc
adc
adc
push
jne
xchg
aas
rcll
xchg
and
mov
fsubrs
loop
ret
int
std
push
add
outsb
mov
pop
lock
dec
and
and
xchg
mov
cmp
adc
jo
nop
add
outsb
push
or
fmuls
dec
insb
data16
adc
mov
sar
dec
imul
xchg
sub
push
rorb
xchg
shll
in
pushf
jl
in
add
add
and
test
mov
lock
in
cli
xor
lods
pop
repnz
jge
or
sbb
pushf
mov
cltd
lods
gs
aas
cli
cmp
test
and
in
adc
push
or
xor
adc
daa
jnp
push
rcr
lret
push
xlat
cltd
and
mov
mov
sub
xor
andl
call
jne
add
dec
dec
in
or
outsl
pop
inc
movsb
adc
sub
insb
pop
push
in
xlat
push
fldenv
and
fldcw
cmc
movsb
and
rolb
scas
xchg
or
call
std
push
xor
ss
pop
add
and
mov
shll
dec
mov
pop
test
mov
push
adc
in
pop
push
sbb
jp
aad
push
test
cli
scas
in
jg
dec
pop
shll
call
adc
enter
test
stos
add
or
pop
repz
cmp
add
imul
in
inc
jae
inc
popa
lret
cmp
adc
orl
inc
sub
or
mov
xchg
enter
je
ficoms
outsl
shll
or
jbe
push
jae
fsin
dec
lcall
xor
add
adc
sbbb
add
mov
repnz
cmpl
fldenv
aam
pop
cmp
pop
repz
aam
cmp
add
negb
push
syscall
mov
jp
sbb
lds
xor
mov
clc
pusha
and
fdivl
loop
pop
outsl
cli
mov
xchg
push
addr16
aad
in
rorl
dec
pop
push
lahf
jnp
in
outsl
sub
arpl
push
sub
sbb
gs
test
test
addb
xchg
xor
repnz
ljmp
insl
push
cmp
push
jecxz
and
and
and
push
out
bound
pop
sub
mov
jns
aas
addr16
addr16
mov
jno
int3
je
out
or
pop
sub
sub
jecxz
test
sub
outsb
dec
mov
jle
xchg
inc
imul
push
addr16
out
in
xor
mov
rcll
stos
aad
sbb
dec
dec
mov
sub
xchg
mov
pusha
sarl
xchg
pop
xchg
div
cltd
mov
int
sub
in
push
and
lahf
shlb
lcall
pop
mov
sbb
ret
sbb
mov
push
xchg
inc
loop
std
arpl
insb
out
fwait
dec
test
lret
mov
mov
sbb
xor
lahf
clc
jecxz
call
imul
cmpxchg
sahf
xlat
jle
adc
rcrb
fstpl
in
lds
lret
xchg
xchg
jge
push
dec
call
sbbl
in
xor
shll
xchg
dec
push
in
icebp
jle
jb
inc
push
jns
fldcw
stos
or
loope
add
loope
xchg
mov
gs
test
jmp
mov
xorl
movl
jb
dec
sbb
sbb
cmpb
rcl
jecxz
cs
aam
sbb
cs
lds
or
sbb
gs
add
out
xchg
das
inc
adc
mov
testl
loopne
lods
gs
repnz
sub
xchg
sbb
gs
xorb
xor
into
btc
pop
jmp
adc
sub
or
je
pop
imul
dec
push
jne
xchg
dec
sbb
mov
jg
call
dec
mov
dec
sbb
xor
mov
pusha
loopne
into
jle
xor
decl
mov
insb
jo
inc
push
or
popa
jns
mov
loop
mov
js
js
push
ror
inc
lock
mov
cmp
or
inc
shll
hlt
test
icebp
or
or
stc
sub
scas
cs
xchg
lret
sbb
xchg
mov
push
xchg
xchg
stos
movsl
push
xor
and
sbb
pop
mov
xlat
mov
movsb
pop
and
inc
jns
shll
cld
ja
push
iret
inc
adc
out
pop
les
insl
call
mov
outsl
orb
insl
jo
jle
fists
xor
test
mov
stos
mov
adc
shlb
ss
adc
jge
jbe
div
cmpsb
imull
testl
mov
dec
sti
xchg
fisubs
push
or
loopne
jmp
or
and
pop
push
push
iret
or
mov
xchg
push
jb
stc
mov
clc
xor
in
cmc
adc
cmpsl
adc
pop
adc
shlb
cs
and
in
xchg
mov
aam
xchg
es
sbb
push
in
sbb
pop
fs
xor
push
pop
lcall
and
jb
addr16
sti
push
mov
lret
add
roll
xlat
cmp
add
fldcw
lret
mov
fsubrl
fwait
sub
in
movsl
imul
lahf
xor
fisttpl
pop
cli
lock
sub
inc
push
stos
insb
mov
xchg
sbb
sub
hlt
aas
nop
push
in
pop
and
xor
jg
fwait
ror
mov
filds
or
insb
inc
inc
movsb
cmp
and
jb
mov
fldl
xchg
das
ja
imul
xchg
gs
clc
xor
jecxz
ficomps
je
mov
push
push
or
push
arpl
push
jne
sahf
imul
push
inc
sub
lods
or
xor
sbb
lods
sti
js
lods
mov
inc
inc
out
or
cld
test
jbe
lret
aam
sti
lret
cmc
push
mov
in
push
outsb
jns
push
stos
lret
sbb
add
sbb
mov
mov
xor
cltd
insl
cmp
sahf
es
aas
pop
out
aam
shrl
rcll
cmp
xor
pusha
daa
cmp
add
rorl
mov
mov
ret
rcll
es
subb
add
xor
in
mov
lret
mov
das
adc
clc
jge
lods
pop
add
cwtl
es
fiaddl
loope
ja
or
gs
cwtl
cltd
push
lcall
and
js
stos
mov
mov
jbe
mov
dec
mov
jge
xchg
divl
test
push
imul
ds
outsl
jmp
jle
ret
movsl
nop
sbb
fdivl
sbb
inc
ret
xchg
imul
lods
dec
notl
fs
cmp
mov
hlt
lret
jmp
enter
sub
and
push
jns
cmp
cmp
sub
popl
mov
xchg
int
xchg
jae
outsl
inc
and
aad
lods
xor
or
push
movsl
shl
or
pop
fmuls
push
xor
sarb
hlt
out
pop
mov
inc
data16
pop
adcb
sub
cld
cmp
xlat
int3
push
adc
mov
adc
push
jno
xor
inc
mov
push
or
add
adc
and
lcall
lret
xor
push
or
pop
fidivl
pop
dec
out
mov
hlt
push
imul
loope
cld
addr16
js
pop
addr16
lret
fs
jnp
ret
mov
mov
adc
arpl
pop
aad
mov
outsl
mov
jp
sarl
add
sbb
inc
jae
data16
cmp
lahf
sbb
movsl
sub
mov
mov
les
cld
pop
cmp
shrb
inc
push
jns
mov
mov
js
dec
xor
ds
imul
loopne
cmpsl
sub
push
das
dec
scas
and
push
js
loopne
xor
mov
sbbl
cmp
mov
js
lds
sbb
andb
adc
inc
daa
jge
stos
adc
imul
or
mov
push
adc
jo
mov
aad
mov
repnz
lea
adc
push
or
fldcw
push
dec
cltd
icebp
sub
shr
std
dec
mov
ss
sbb
pop
movsl
into
sbb
adc
add
adc
pop
push
rcll
sbb
pushf
mov
xchg
push
mov
in
loopne
cmp
cmp
mov
inc
dec
jp
and
loopne
std
popf
cltd
aas
xchg
pop
xor
pop
or
inc
imul
xor
in
cmpsb
mov
mov
and
mov
into
or
add
sbb
jl
jmp
push
in
lock
adc
in
add
movzbl
sbb
dec
mov
adc
stos
cmpb
add
clc
inc
scas
xor
cmp
xchg
iret
mov
mov
daa
inc
ljmp
jns
loope
xor
mov
inc
sbb
xchg
inc
outsl
out
lea
push
push
mov
pop
jle
jg
shll
dec
xchg
inc
or
out
nop
lds
js
jp
into
dec
mov
mov
mov
loope
test
daa
fcmovb
cmp
xor
mov
je
jmp
adc
push
jo
jmp
gs
jp
adc
adc
mov
lods
mov
pop
jg
hlt
and
inc
push
mov
nop
outsb
jbe
add
lods
lods
add
mov
mov
lahf
sbb
cltd
add
cli
sub
fmull
dec
adc
orl
pop
jnp
ljmp
xchg
out
mov
fidivrl
sub
cmp
scas
sub
les
cmpsb
push
je
aas
mov
sahf
loop
and
clc
out
sarb
xor
push
xchg
sbb
push
cmp
sub
sbb
xchg
dec
icebp
subl
fsubrl
aad
test
xlat
mov
popf
aad
sub
xchg
and
cmc
dec
mov
fwait
adc
ret
inc
into
fcomps
jle
dec
dec
pop
pop
mov
dec
cmp
xor
mov
movsb
jbe
call
movsb
imul
fsubrp
cmpsl
and
pop
ret
lds
aas
ss
mull
bswap
sub
sub
xor
inc
outsb
pop
jle
fists
stos
insb
cwtl
push
inc
out
clc
add
mov
add
icebp
stc
jno
and
jae
movsb
cltd
xchg
stos
gs
aaa
inc
fimuls
xlat
fwait
lods
mov
sub
mov
sub
test
or
ret
jns
mov
notb
sub
dec
dec
pop
xor
int
xchg
inc
loop
sub
mov
jns
rorb
add
jbe
or
push
loopne
lcall
xorl
iret
inc
movsb
imul
mov
outsb
pop
pop
jbe
lods
xchg
aad
lea
mul
jecxz
pop
aad
cltd
xor
jbe
cmp
mov
cmp
dec
sbb
sti
mov
clc
mov
xchg
insl
mov
data16
pop
pop
testl
stos
or
xchg
sub
mov
cltd
mov
adc
adc
xor
push
ss
add
in
xor
andl
sbb
mov
shl
or
mov
stc
sub
scas
mov
mov
xor
je
xor
push
jne
popa
inc
fcomps
test
lret
mov
sti
inc
stc
push
push
mov
stos
sub
cli
adc
and
fs
mov
stc
xchg
cmp
mov
mov
mov
fistps
mov
cmpsl
arpl
ss
or
and
jae
imul
jne
loope
and
test
movsb
jg
shrb
imul
sbb
aam
push
and
sbb
or
pop
icebp
xchg
cmc
repz
and
loop
fcmovnbe
lcall
dec
in
fadds
push
mov
inc
push
fmuls
clc
sbb
pop
xor
cltd
arpl
scas
mov
loop
sub
mov
jbe
xchg
xchg
fsubp
loop
imul
fadds
mov
out
adc
push
ss
push
push
or
sbb
fisttpl
pusha
sahf
pushf
jmp
aas
ja
test
or
daa
or
cmpb
mov
pop
ljmp
into
cld
add
push
out
push
lret
ror
gs
fnstsw
iret
es
fdivl
ret
sub
fwait
insl
dec
sub
sbb
xchg
cld
jno
insl
je
push
dec
lcall
bound
rorb
and
adc
mov
insb
adc
mov
ret
pop
mov
push
rclb
push
xchg
mov
mov
mov
enter
dec
and
xchg
mov
jle
mov
push
xor
fisubrl
fwait
movsb
push
lods
int3
jnp
sbb
inc
cli
fs
dec
pop
mov
mov
push
or
xor
mov
jg
xor
ficoml
sbb
push
sub
ljmp
cmpsb
pop
js
pop
fs
stos
push
test
daa
ret
xchg
movlps
sbb
push
sub
insb
pop
jo
dec
rcl
adc
fidivs
jge
je
cmp
push
lock
and
lds
movsb
sbb
popa
mov
dec
and
fcomps
cmpsb
ret
jp
sbb
xchg
jl
int
and
mov
pop
mov
xor
scas
inc
jne
scas
fs
inc
int3
mov
les
and
fdivs
add
jbe
pop
cmpsb
inc
push
push
ret
adc
mov
pop
xor
pop
fidivrl
pop
push
adc
adc
lret
mov
outsb
aas
inc
mov
cmp
mov
push
xchg
fbstp
dec
push
xchg
repnz
out
fsts
cwtl
icebp
movsl
push
not
pop
arpl
sub
es
mov
adc
xor
dec
ja
mov
shll
add
add
cmp
cmpsb
and
loope
std
dec
fstpl
push
jo
hlt
mov
in
cld
push
push
dec
outsb
fidivrs
arpl
fsubr
inc
mov
jb
pusha
mov
mov
jmp
ret
sbb
fsub
stc
das
pop
inc
jns
dec
addl
cmpsb
mov
std
fimuls
adc
clc
mov
sbb
add
jno
mov
mov
outsb
xchg
sti
push
clc
pop
pushf
mov
xor
or
cltd
negb
dec
xchg
outsb
outsl
call
push
xchg
mov
sbb
ret
push
mov
push
xchg
mov
inc
popf
in
lds
adcb
andb
pop
andl
call
shlb
test
int3
xchg
ljmp
mov
jle
mov
lcall
add
cmpsl
add
scas
pop
mov
xchg
pop
sub
fmul
rcl
jnp
lods
xlat
lds
test
mov
pop
mov
fisttps
xchg
push
mov
repz
popa
pop
arpl
inc
cs
fmull
mov
stos
roll
sbb
push
cld
or
jg
fadds
enter
mov
data16
xor
xchg
inc
jp
imul
in
movsl
ficomps
aas
xlat
xchg
das
dec
ds
aam
inc
pop
sub
add
push
ret
jle
popa
jbe
pop
xor
ja
adc
xchg
push
add
dec
push
fsubrp
out
lret
push
sub
out
dec
pop
cmp
mov
mov
int
mov
jne
jecxz
jae
stos
mov
dec
xchg
test
pop
dec
int
sbb
daa
fadds
fs
mov
lahf
pushf
out
cwtl
ret
mov
add
sub
jno
addr16
and
xchg
mov
push
enter
clc
fldt
xor
shr
sub
sub
int
lcall
aad
sahf
pop
jge
movsb
out
mov
in
pop
sbb
repnz
push
xor
fcoml
pop
xchg
mov
cmp
ljmp
lods
in
pop
dec
out
sarl
dec
sbb
mov
cli
jo
and
push
inc
xchg
je
xchg
sbb
lods
adc
sub
je
mov
xor
inc
xchg
jnp
cmpsl
idiv
mov
cmp
xchg
imul
xor
xor
add
mov
inc
in
stos
add
cmc
xchg
cmc
adc
jnp
int
andnps
call
push
iret
mov
pop
push
inc
inc
cli
mov
scas
mov
lcall
dec
and
add
dec
lods
push
adc
and
push
pop
imul
lock
pusha
loop
sti
inc
in
stos
test
lods
dec
pusha
fsubp
lret
mov
negl
fildll
push
xor
test
push
inc
dec
jmp
call
mov
mov
loopne
push
push
mov
cltd
shll
xchg
js
or
cmpb
sub
jecxz
dec
insb
sbb
jns
out
xor
cmp
or
xchg
xorl
inc
enter
dec
fbstp
adc
out
jae
sub
dec
dec
out
mov
cmp
repz
inc
fcmovb
dec
sbb
xchg
scas
mov
repz
fadd
cltd
test
pop
nop
out
cmpl
subb
lods
pop
or
out
mov
je
aaa
mov
mov
pushf
jge
lret
dec
add
into
dec
jg
pop
shll
cmp
data16
mov
inc
imul
jne
jnp
cmpsl
mov
dec
mov
popf
andb
dec
pop
inc
sahf
iret
push
mov
in
leave
and
test
fldcw
or
cli
shrl
std
xchg
dec
jle
push
test
or
mov
call
jae
or
cwtl
shll
xchg
aaa
nop
in
xchg
jg
sbb
adc
lods
stos
repnz
jne
outsl
xchg
push
fstl
rolb
cmp
andb
xlat
cld
dec
cltd
callw
mov
xchg
inc
in
or
add
inc
push
push
pusha
mov
dec
aam
fldt
cmp
jnp
xchg
cs
mov
mov
outsl
mov
les
mov
jno
adcl
jae
pop
loop
push
lret
fstps
push
jl
jnp
es
or
scas
sbb
inc
xchg
mov
vmovntps
int3
xor
jno
in
dec
imul
push
js
sub
jns
dec
mov
jp
out
pop
mov
or
xchg
loope
cmp
jg
mov
and
or
rcrl
arpl
xchg
iret
pop
outsb
movsl
fsubrs
adc
xchg
prefetchnta
or
test
pusha
inc
mov
jo
out
dec
sti
mov
repz
sti
push
pop
xchg
jecxz
xor
pop
xor
xchg
xor
cld
sbb
sti
ret
rcll
jg
mov
shll
xlat
in
pushf
sub
push
xchg
cmp
lock
cmpsb
ret
add
mov
pop
jns
mov
mov
or
push
lahf
and
push
ja
xor
xor
setp
sahf
stc
lret
mov
adc
sti
loopne
fucom
and
pop
pop
jg
mov
xor
mov
or
jns
xlat
mov
mov
cmp
lea
enter
lret
jp
daa
jmp
movsl
mov
xor
push
pop
push
cmp
repz
push
push
add
in
fadds
dec
fmull
testb
pop
xor
call
push
dec
pop
pushf
xchg
xchg
xor
pop
push
aas
add
push
mov
fsub
jnp,pn
inc
fwait
and
dec
fisubl
lock
popf
test
pop
sbb
or
cmp
clc
aad
mov
jnp
inc
inc
or
lods
xor
xchg
leave
push
mov
cmp
push
cld
xchg
dec
pop
add
dec
arpl
int
sbb
and
dec
sub
iret
and
xchg
lret
add
std
mov
clc
mov
inc
and
inc
xchg
jle
pop
ror
aaa
rorl
fnstsw
inc
dec
pop
lea
add
sbb
outsb
loopne
pop
and
in
sbb
popa
int
push
arpl
inc
popf
in
xor
push
push
test
dec
clc
sarl
es
sbb
rclb
inc
cli
mov
mov
mov
rsqrtps
sub
jmp
cmp
testl
jp
popa
adcw
fists
inc
xor
adc
imul
push
scas
clc
push
shll
mov
mov
das
scas
lock
pmullw
mov
hlt
shll
fimuls
adc
cmp
adc
loop
pxor
inc
arpl
fs
out
stos
dec
jmp
mov
js
and
or
shrl
stc
into
imul
mov
ficompl
xor
jb
loopne
mov
out
fistpl
pop
test
das
aad
sub
test
dec
repz
popl
sti
xchg
sahf
gs
jae
and
xor
in
or
jne
stos
fcmovnbe
push
fcomps
daa
test
add
loop
xchg
gs
std
adc
mov
or
dec
aam
inc
sub
loop
jge
xor
mov
insl
mov
mov
out
add
imul
jecxz
das
movsb
sbb
popfw
test
mov
imull
mov
loopne
jo
pusha
lahf
and
adc
jnp
movsl
push
iret
lea
or
sub
cmc
pushf
stc
hlt
jne
test
imul
inc
mov
into
ret
add
aas
add
xor
cmpsl
push
xlat
data16
dec
mov
push
inc
sub
sbb
jne
jb
push
movzbl
mov
mov
sbb
test
sahf
insb
stos
pop
js
loopnew
je
scas
mov
xor
scas
xchg
jle
xchg
mov
mov
add
imul
mov
lahf
mov
push
out
mov
idivb
cmp
mov
repz
mov
sbb
out
sub
stc
in
aaa
loopne
lret
das
cld
into
cmpsb
divl
test
pop
fcompl
adc
mov
sub
mov
scas
cmpsl
xor
cmc
call
jecxz
shr
mov
ret
sbb
sbb
push
inc
jo
adc
inc
ja
arpl
sub
xor
dec
stos
jb
xchg
add
xchg
ja
rcrb
and
adc
mov
sbb
dec
test
mov
frstor
fiadds
mov
pop
out
and
jne
mov
aaa
mov
pusha
andl
popa
ss
lods
cmp
cmp
js
insb
inc
add
cmp
sti
push
in
jne
inc
ss
jg
les
stos
mov
sub
lret
lock
cmp
stos
push
je
push
xor
mov
js
loope
xor
fdivl
cmp
adc
dec
sub
and
lock
stos
ja
notl
inc
test
push
cmpl
inc
pop
xor
sbb
rol
jns
jp
lea
cmp
mov
or
and
jne
lock
out
es
orl
push
hlt
lcall
aam
iret
out
cwtl
sbb
pusha
je
pop
adc
or
lock
mov
sub
cmpsb
les
jnp
enter
mov
lret
and
scas
aad
add
add
mov
movsb
dec
push
mov
movsl
popf
fwait
in
jl
adc
ret
pop
in
loopne
fcompl
mov
sub
xor
testb
mov
xor
fidivrl
notl
ret
mov
sub
mov
insb
xchg
lods
push
fwait
aaa
cmpsl
cmp
nop
pushf
pop
sub
push
das
clc
jg
fdivp
or
out
lret
js
mov
addr16
das
jecxz
lahf
pushf
cs
add
sbb
inc
pop
iret
add
pusha
fnstsw
mov
sub
cmpsl
fcoml
or
adc
adc
xchg
xor
pop
inc
dec
inc
fisubrl
push
fwait
push
cmc
cmp
push
cltd
cld
addr16
in
lahf
lret
xchg
lea
xchg
xchg
jnp
and
xor
lods
pop
jecxz
repz
into
lahf
into
cmp
push
pop
sar
data16
pushf
jae
mov
xchg
xchg
push
jbe
push
ja
cmp
add
movsl
test
cltd
mov
and
test
or
xchg
in
push
cld
jp
cmpsb
popf
rclb
fdivl
mov
shrl
xchg
arpl
push
loop
sbb
pushf
in
or
xchg
icebp
test
xchg
push
xchg
enter
mov
sbb
cmc
imul
outsb
xchg
push
ss
sbb
sub
jl
movlps
stc
xor
adc
cltd
iret
and
jb
js
push
loope
and
and
mov
pop
jmp
mov
cmp
cmp
xchg
fisttpl
in
mov
insl
leave
in
or
mov
cmp
addb
scas
rorb
push
dec
push
xchg
inc
adc
jns
and
int3
mov
out
ss
sbb
dec
adc
xchg
add
aas
hlt
test
dec
inc
rcrl
mov
sbb
test
sub
push
mov
mov
outsl
fnsave
jl
pusha
outsb
xor
jno
sbb
out
aas
out
lahf
pop
push
mov
cli
in
push
xchg
lds
js
jae
xorl
imul
push
dec
pop
or
sub
mov
xchg
jne
ds
dec
mov
inc
mov
daa
mov
test
jns
push
out
divl
mov
mov
cltd
addr16
inc
push
or
stc
cs
mov
sub
outsb
push
imul
jns
mov
ja
stos
outsl
sti
ljmp
outsl
dec
int3
mov
sbb
aaa
pop
push
scas
stos
or
ja,pt
ss
xchg
fmuls
add
incl
into
dec
aam
fmull
push
ret
xor
mov
jb
les
jo
inc
mov
test
sub
dec
popa
loope
dec
pop
loop
repnz
jge
out
imul
inc
fwait
lods
ja
ja
adc
add
mov
mov
jns
mov
rolb
in
movsb
add
jno
xchg
xor
out
adc
push
and
enter
outsl
jae
mov
insb
repz
popf
cs
out
push
mov
push
arpl
icebp
sbb
jnp
cltd
mov
mov
fwait
in
or
fiaddl
or
ficomps
xchg
xor
imul
and
sub
sub
nop
incl
cwtl
cmp
call
mov
jne
sbb
xor
lods
enter
subb
leave
mov
add
cmc
jge
pop
mov
shlb
xor
repnz
ja
outsb
pusha
mov
jno
aas
pop
ret
add
xor
jg
pop
test
data16
data16
dec
push
shll
lea
xchg
lcall
xchg
rorl
popa
subl
cmpb
aad
jbe
flds
arpl
pop
or
adc
xchg
loop
xchg
ja
or
lods
lea
daa
pop
dec
outsl
into
scas
push
das
dec
popf
popa
mov
cmp
pop
movsb
ret
jbe
clc
sbb
or
and
mov
fisttpl
sub
xor
call
lds
loope
bound
shll
mov
mov
mov
jecxz
flds
pop
sub
mov
ret
mov
out
pusha
stos
in
sbb
insl
cmp
push
pop
push
sub
jge
daa
out
sub
xchg
rcrl
dec
inc
ret
in
out
lods
test
and
mov
loopne
pop
out
sub
sbb
cmp
jmp
pusha
gs
shlb
mov
popw
icebp
test
xor
push
or
pop
int3
sub
push
mov
sbb
popa
and
push
jne
negl
ds
add
mov
mov
lret
cmp
add
jno
or
mov
rorl
ret
lret
inc
adc
ljmp
push
lahf
jmp
sub
jo
mov
and
iret
sbb
adc
int3
hlt
lds
in
stos
test
mov
out
repnz
or
fcomps
mov
mov
push
fs
inc
cmpsl
fnstcw
xchg
out
ficomps
mov
mov
or
push
sub
push
inc
test
mov
pop
xor
inc
pop
cmp
lret
pop
inc
negb
mov
jno
shrl
mov
and
imul
adc
mov
jge
hlt
pop
cmpsb
push
mov
add
fldl
mov
dec
push
nop
sub
nop
jbe
cmp
adc
in
inc
xlat
iret
popa
movq
cmp
pop
cli
insl
add
repnz
pop
xchg
sub
repnz
sti
push
add
push
scas
pop
mov
dec
lock
cmp
add
dec
push
add
mov
jge
push
inc
loop
idivl
mov
adc
and
jl
xchg
adc
sub
pop
sbb
xchg
nop
ret
mov
mov
cwtl
aaa
addr16
in
add
mov
mov
xor
inc
sbb
push
dec
faddp
lds
js
xor
pop
jp
ret
jo
lret
adc
lods
clc
insb
mov
push
add
push
int
xchg
mov
js
jecxz
popa
rcrb
push
and
nop
mov
jbe
fs
mov
lcall
fldl2t
and
mov
jl
icebp
mov
sub
cld
xor
dec
shll
sub
or
sub
inc
fimull
mov
lock
int3
leave
hlt
pop
jb
mov
xor
push
mov
int3
arpl
jb
push
stos
jle
das
adc
clc
addr16
mov
arpl
inc
lods
dec
jmp
lret
ljmp
push
sbb
data16
cmp
addr16
mov
mov
jl
stos
pop
mov
shld
jmp
cmp
pop
outsb
cmpsl
aas
add
cmp
mov
sahf
mov
xor
inc
ljmp
in
gs
xchg
mov
aam
fcoms
cmp
mov
and
jbe
movl
adc
sub
out
or
lret
nop
mov
jp
lods
jmp
stos
add
repz
fisubl
dec
xchg
and
mov
push
call
adc
scas
mov
out
iret
pop
sbb
or
out
sbb
bound
add
mov
mov
mov
incl
push
mov
xchg
push
addr16
loope
lea
lcall
movsl
dec
ds
in
cli
cmpsl
pushf
and
in
loop
push
xor
incb
sub
mov
pop
xchg
add
push
dec
and
sbb
adc
mov
call
fistps
sbb
gs
xchg
xchg
adc
mov
or
fsubs
and
mov
std
mov
data16
inc
sbb
mov
xor
clc
mov
or
shl
aas
mov
mov
rcll
xchg
xchg
popa
cwtl
and
cmp
outsb
adc
adc
cmp
jb
jae
cmp
jne
dec
cmp
test
push
sub
xchg
pop
scas
xor
daa
jecxz
js
jbe
mov
mov
push
popa
jnp
adc
add
std
outsb
shrb
push
lcall
xor
cwtl
insb
jmp
lods
jecxz
in
or
xlat
lahf
sbbl
scas
xchg
lahf
faddl
mov
lods
cmp
hlt
adc
cmpl
cmpsl
dec
mov
in
xor
daa
and
push
or
xchg
jb
lret
or
stos
adc
jne
xchg
std
cmp
push
mov
xchg
mov
repz
andb
dec
or
xchg
imul
xchg
adc
mov
out
mov
mov
jge
nop
xchg
or
cld
lds
and
or
mov
mov
cwtl
jnp
cld
lcall
mov
dec
sbb
loopne,pn
xor
mov
loope
mov
fmuls
fs
inc
cmpl
inc
enter
and
mov
dec
jbe
cmp
int3
inc
addb
enter
scas
sbbl
adc
je
sbb
mov
loope
xor
push
add
xchg
pop
xchg
int3
push
lods
dec
pop
stos
and
jae
adc
xor
pushf
movsb
sbb
fildl
mov
add
pop
lret
mov
mov
jl
xchg
rorl
mov
add
lods
mov
lret
js
fs
nop
aam
and
add
cli
fwait
test
imulb
mov
ds
or
xor
sbb
mov
cmp
popf
add
mov
aaa
shl
ljmp
dec
sub
shll
adc
pop
bound
xchg
and
adc
push
pusha
mov
popa
sbb
mov
add
or
fsts
cltd
fs
cmp
pop
out
fldt
cwtl
jae
bnd
lods
xchg
and
jae
scas
imul
mov
pushf
ds
ljmp
push
cwtl
mov
lds
call
pop
orl
push
int
pop
xor
ret
mov
imul
iret
inc
mov
loope
mov
push
enter
out
outsb
out
jl
mov
pop
pusha
adc
mov
or
sub
xchg
cmp
loope
adc
jle,pt
int3
lods
fidivs
xor
jp
or
outsb
ror
mov
sbb
scas
xchg
sbb
jecxz
mov
sub
xchg
inc
ret
ljmp
mov
fsubl
out
xchg
sub
ljmp
lahf
arpl
stos
hlt
stc
jge
fidivl
nop
jae
leave
push
pusha
addr16
adc
sti
mov
insl
fimuls
mov
int
pop
shlb
neg
movsl
sti
sbbb
xor
mov
into
lret
jl
adc
les
insb
adc
jo
pop
sbb
ss
inc
fs
mov
mov
mov
xor
mov
test
jg
ficomps
adc
mov
mov
xor
xor
mov
outsl
adc
mov
popf
test
lds
jge
mov
push
jp
add
mov
or
xor
pop
cmpsb
adc
cmp
jne
pop
jp
out
repz
xor
jns
in
jge
stos
jmp
jo
mov
enter
or
fwait
clc
test
scas
es
clc
mov
popa
das
xor
dec
push
or
lret
in
stos
push
pop
aad
daa
aaa
loop
or
fiaddl
dec
gs
fisubrl
mov
jge
inc
lret
mov
fsubrl
xlat
dec
cmp
inc
cmp
mov
nop
jb
lea
imul
rorl
sub
outsb
pop
rorl
sbbb
or
stos
out
insb
dec
lahf
mov
push
pushf
pushf
aad
test
and
jecxz
pop
add
rcr
mov
fs
bound
stos
cmpsb
shlb
imull
stos
sarb
jne
pop
mov
or
add
je
movsb
gs
cli
bound
std
ficoml
loop
lods
mov
xchg
add
lahf
insl
push
leave
lods
fsts
and
movsl
in
or
adc
in
mov
insb
test
aas
inc
cmpsl
rolb
es
mov
and
aas
cmp
xchg
xchg
dec
loop
jg
or
and
dec
or
pop
jl
push
loopne
int
xor
jbe
fsubl
popa
imul
scas
jno
into
in
loop
fdivrs
add
sbb
sbb
push
shrb
push
sbb
jmp
adc
cmc
lods
inc
mov
cltd
ds
aam
int
dec
xor
adc
nop
into
gs
enter
xchg
pop
or
sbb
aam
lret
pop
mov
xor
or
dec
fcoml
sub
jno
mov
push
nop
je
pop
in
inc
sub
mov
xchg
aam
movsb
or
sahf
and
xchg
ret
out
popa
es
ja
push
lret
imul
in
lret
bswap
mov
sbb
cmc
outsl
push
insl
inc
mov
das
inc
xchg
inc
fxch
xor
mov
push
sti
sub
fnstenv
clc
jge
hlt
ret
or
push
sub
xor
flds
inc
fdivrs
dec
iret
in
jge
mov
pop
xchg
pop
jp
repnz
xor
addr16
cli
add
and
loop
xor
inc
cmp
adc
adc
hlt
aas
ds
popa
mov
xchg
and
xor
lret
popa
pop
test
cmpb
add
loope
es
sahf
shr
pushf
sti
mov
ja
dec
shrl
or
lods
pop
mov
loopne
push
push
mov
sbb
add
loopne
das
pop
call
andb
js
jne
fistps
xchg
mov
push
mulb
mov
sbb
and
mov
loopne
xchg
push
mov
dec
enter
pop
jle
adc
scas
cs
fnstenv
and
mov
cmp
and
js
clc
cmpsl
lret
pop
add
sarl
push
rcll
pop
xor
jge
xchg
sub
arpl
sub
outsl
mov
jg
cmp
loopne
stc
pop
test
jne
fcompl
xchg
sub
and
in
push
pop
iret
xchg
in
mov
pop
jge
mov
sbb
jb
push
orl
mov
inc
cmp
leave
ja
add
insb
xor
dec
push
inc
adc
orl
ss
subl
cmc
leave
les
out
jb
inc
sahf
dec
mov
cmc
jp
and
outsb
in
cmpsl
inc
xor
je
mov
mov
fwait
in
jle
and
mov
pop
test
adc
lods
stc
cs
inc
inc
xchg
lret
int3
mov
xor
add
jno
cmp
jg
xchg
jns
pop
jb
sbb
push
mov
lret
inc
cmp
jne
cmpsl
ret
ret
out
dec
cmp
xchg
addr16
add
mov
stc
in
pop
aad
enter
insl
pop
dec
xchg
pop
add
mov
arpl
out
and
jp
push
gs
lret
mov
inc
xlat
fidivrl
or
fnstcw
dec
xchg
sbb
shrb
out
mov
dec
xchg
mov
inc
mov
dec
add
lea
jmp
xor
dec
mov
jb
xor
add
sbb
xlat
es
or
sbb
cltd
dec
mov
mov
in
mov
test
mov
lods
stc
pusha
lret
scas
nop
stos
imul
dec
mov
insb
or
push
mov
push
test
and
lcall
lods
ret
roll
pop
iret
cwtl
xor
inc
xlat
lods
mov
xchg
data16
je
adc
iret
clc
aad
mov
fucom
lcall
mov
inc
fists
push
mov
insb
push
fcmovnbe
push
xor
test
adc
mov
flds
mov
mov
mov
test
or
push
fidivrl
mov
or
cmp
cmpsb
dec
inc
ja
cmp
push
or
jp
jns
into
push
push
addr16
push
sbb
cwtl
sub
pop
ret
pavgw
popf
or
in
ss
iret
aam
shll
mov
sub
cmp
dec
loop
dec
nop
movsb
test
and
std
gs
icebp
add
in
jmp
add
cs
mov
and
dec
mov
or
filds
xchg
sub
out
jp
pop
loope
mov
mov
sub
lock
rcrb
add
push
jle
cmp
jge
push
push
jns
repz
cmpps
mov
ja
aas
mov
mov
rcr
test
push
leave
lahf
cmp
imul
fcomps
xchg
xchg
outsb
scas
push
and
mov
dec
loopne
test
mov
or
movb
dec
cmp
sti
insl
xchg
imul
iret
scas
jmp
mov
lret
addr16
or
xor
outsb
xor
xor
dec
jae
in
mov
movsb
loopne
or
mov
jge
push
sbb
je
fistpl
sbb
xor
cs
int
or
push
jge
and
hlt
repz
clc
movsl
push
mov
fisubrl
sub
mov
inc
aaa
dec
mov
movsb
and
in
pop
cmc
test
in
out
popl
jo
adc
adc
arpl
in
call
jne
jo
lea
push
jns
mov
jmp
add
adc
int
addr16
cs
mov
lods
ret
fcmovb
push
inc
aas
add
cs
xor
jecxz
xchg
jge
sub
ret
nop
jmp
cmp
sbb
fs
mov
xchg
cmp
shlb
jge
push
es
and
mov
fcoms
cltd
pop
dec
sbb
notl
sbb
call
clc
xor
xchg
fwait
and
push
sbb
repnz
lock
hlt
sarl
push
xorb
das
pop
fs
push
jge
xor
jl
sti
ljmp
xor
cmp
rorl
jg
mov
jle
jb
stc
jg
cmp
cmp
mov
jae
es
push
push
inc
leave
iret
jae
mov
jnp
repnz
dec
nop
test
dec
in
pop
xchg
mov
inc
pop
or
jl
mov
hlt
mov
jg
dec
sahf
je
es
cmc
and
loop
mov
fwait
das
adcb
adc
mov
sub
pop
xlat
lock
out
mov
jnp
mov
adc
call
cmp
inc
loopne
sbb
fstpl
mov
sahf
aad
es
int
add
ret
outsl
adc
stos
lret
arpl
jle
dec
jb
sub
xor
and
jg
les
adc
inc
sub
mov
nop
mov
stc
mov
xchg
insl
mov
daa
out
dec
sbb
xchg
loopne
leave
sbb
sub
into
daa
pop
or
testl
push
test
sbb
inc
sbb
mov
push
mov
stos
iret
cmp
outsb
mov
cwtl
push
gs
jecxz
sub
cmp
sarl
push
mov
push
mov
rcll
xchg
or
mov
lock
loope
mov
inc
fs
in
out
sbb
mov
push
mulb
jg
lcall
jg
add
aas
enter
adc
test
xor
pop
je
adc
test
aaa
adc
fistpll
add
loope
sbb
les
push
test
mov
cs
push
sub
out
sbb
inc
rol
cmp
pop
sbb
fdivrp
aam
xchg
scas
in
dec
push
or
rcrb
and
bound
push
and
push
jae
xor
mov
fwait
test
outsb
ret
adc
nop
dec
dec
xchg
bound
stc
pop
xchg
int
adc
push
ret
call
xor
jnp
aad
xchg
popa
xor
xchg
push
sub
add
jbe
imul
test
ja
sahf
push
fidivs
add
pop
and
mov
ja
inc
add
imul
je
jmp
imul
fwait
repnz
add
mov
ss
mov
outsl
xor
or
mov
mov
mov
mov
cmp
cwtl
pop
jge
sbb
jmp
insb
repz
jo
int
aas
dec
and
popf
cld
popa
push
xchg
jmp
sub
mov
stos
push
movlps
jge
jno
out
push
dec
jge
leave
iret
and
xchg
inc
push
sbb
lret
je
xor
outsl
in
sub
xor
push
in
push
sahf
sbbl
jg
loopne
inc
insb
rorb
fnstenv
adc
call
add
shll
pop
pop
xor
call
mov
nop
cmc
scas
aaa
xorb
test
negb
fldcw
lahf
and
and
jle
loop
xchg
subl
es
jbe
mov
sub
mov
mov
jl
cld
addr16
push
in
popa
enter
pop
dec
push
and
adc
push
into
or
sbb
or
sahf
xchg
pop
xchg
add
jge
or
pushf
jmp
fwait
cld
adc
xchg
add
mov
icebp
lods
add
popa
mov
popf
jne
loop
aam
imul
cltd
stos
cmp
dec
dec
insl
lods
negb
fucomi
inc
cmc
pop
test
mov
xor
push
xor
xor
lea
int
dec
cmpsl
call
mov
stos
push
jp
or
push
fwait
cwtl
test
in
fdivs
mov
test
mov
mov
subb
out
subl
sub
inc
mov
mov
mov
adc
mov
or
adc
xchg
int3
pop
pusha
inc
mov
cwtl
dec
push
push
mov
leave
das
xchg
scas
lcall
iret
push
xor
mov
jnp
jbe
or
dec
inc
jnp
jp
xchg
iret
sahf
cmp
cld
add
jge
pop
js
jo
mov
adc
rcrb
dec
xchg
jg
sub
dec
dec
xchg
stos
cwtl
lret
jnp
cmpsb
pushf
push
mov
jle
jecxz
test
movsb
jb
mov
adc
jns
cmpb
je
add
cli
std
xchg
adc
xchg
nop
push
xor
mov
sbb
aas
adc
cmp
int
pop
jnp
cwtl
cmpsb
sbb
repz
je
rorl
outsl
into
xchg
or
add
lcall
cmp
in
dec
stc
inc
xchg
push
pop
mov
je
mov
inc
inc
dec
addr16
pusha
or
sbb
pop
int
sahf
or
hlt
inc
nop
rcrl
xlat
pop
adc
repz
frstor
mov
aad
pop
clc
sarb
gs
idivb
roll
cmp
inc
inc
popa
gs
dec
loope
mov
jne
push
cld
xchg
dec
cmpsl
in
hlt
hlt
fiadds
cmp
sub
sti
in
pop
sbbb
ljmp
add
and
jnp
mov
inc
in
movsl
xchg
cmpsl
or
gs
movsl
sub
fprem
loop
ficompl
dec
sub
jge
stc
enter
sarl
push
jb
out
inc
sub
sarl
dec
lret
pusha
rolb
stos
inc
call
cli
call
lock
addb
mov
mov
pop
sub
cwtl
jp
ljmp
add
or
pop
into
sub
ja
or
mov
push
fmulp
push
sahf
shrl
and
xchg
push
push
jl
arpl
adc
out
shrb
xor
add
and
inc
loopne
xchg
xchg
jo
cwtl
and
xor
add
insb
ud1
pop
ss
ds
push
jecxz
mov
dec
roll
sbb
sub
test
fidivrl
pop
cmpsb
jl
jge
sub
push
adcb
push
scas
ss
movsb
ljmp
and
sbb
dec
cmp
les
stos
add
mov
popa
rep
jae
mov
xor
fwait
cmp
bound
ffree
mov
sahf
xor
xlat
sub
xchg
imul
enter
push
pop
mov
mov
xchg
cmc
outsb
and
inc
jmp
test
lcall
cli
in
cwtl
xor
add
inc
xlat
aas
dec
aad
dec
fdivrl
pop
out
call
xchg
mov
dec
hlt
sbb
adc
mov
xor
push
lcall
xchg
call
popf
out
popa
test
inc
int
dec
sbb
and
insb
aas
lds
pop
shll
cmp
repz
enter
insb
outsl
enter
add
jp
push
xor
mov
ss
fwait
cmp
cmc
lods
add
sub
cmpb
shrl
push
in
push
jo
je
push
movsl
out
ljmp
loop
add
das
bound
clc
adc
jle,pt
lods
pop
xor
mov
xchg
lcall
repz
jbe
sarl
outsl
shlb
jge
scas
xchg
mov
cmp
loop
adc
jns,pn
adc
test
cld
cmc
mov
xchg
daa
jmp
push
inc
jecxz
adc
ss
stc
sub
jmp
or
mov
cmpsb
mov
mov
sbb
adc
xchg
sbb
jae
mov
icebp
cmp
mov
mov
push
js
sbb
scas
jl
out
mov
loopne
loopne
add
int3
shll
jmp
push
mov
shlb
dec
aaa
in
fyl2x
and
adc
repz
mov
pop
mov
int3
shll
jns
cli
sbb
leave
pop
add
jo
sbb
mov
adc
jns
rclb
jecxz
fistpll
sbb
xchg
pop
stos
sti
sbbb
xor
push
shll
aad
push
sub
out
out
adc
dec
xor
ror
pop
rcrl
out
cmc
ljmp
xor
sub
ljmp
out
sbb
ss
imul
loopne
cmp
mov
popa
mov
xchg
lahf
push
sbb
jno
cld
cmpsb
fcomps
movsl
int
insl
shl
mov
nop
adc
dec
movsl
push
cld
pop
inc
cmc
mov
mov
pop
push
and
sbb
rolb
inc
or
aam
out
sub
fcmovb
xchg
dec
dec
mov
outsl
inc
adc
pusha
xor
pusha
inc
jne
into
jg
cmpb
add
mov
push
inc
jecxz
sahf
jne
cmp
iret
filds
push
adc
mov
dec
popa
xor
inc
xlat
jbe
adc
cmpl
xchg
jae
sbb
lcall
jbe
loop
sbb
aam
mov
mov
sarb
pusha
sahf
sub
cltd
xor
pop
add
xor
xchg
cwtl
and
and
ss
daa
jb
lret
rolb
repnz
mov
lret
aas
inc
dec
in
int3
jg
enter
iret
lds
or
mov
xchg
sub
into
cwtl
fdivrl
mov
adc
inc
cmp
movsb
inc
fsubp
jns
cli
call
mov
jb
jecxz
push
rolb
sub
push
xor
shll
pushf
aaa
sub
arpl
imul
push
dec
push
xchg
sbb
jecxz
and
xor
mov
repz
or
nop
xchg
jge
adc
lea
pushf
and
mov
cwtl
pop
dec
sbb
into
pop
add
daa
daa
cmpsl
mov
out
out
inc
lret
dec
sub
mov
movsl
inc
pop
add
adc
jg
enter
pop
jl
out
pop
mov
daa
add
push
arpl
insl
mov
nop
sti
dec
ficoml
std
push
cltd
fldt
sbb
lret
into
sub
enter
roll
inc
jp
iret
stc
fs
mov
into
imul
pusha
push
mov
insl
or
mov
adc
arpl
and
push
mov
jge
addr16
jp
fstpt
sahf
scas
gs
repnz
std
push
stos
mov
cwtl
test
push
cmpsb
xor
mov
and
pop
and
push
and
lcall
add
test
inc
sbb
inc
inc
push
xchg
call
mov
add
xlat
jmp
cmpsl
test
inc
inc
orb
jo
es
add
and
ret
mov
js
sub
sti
mov
lret
dec
pmaxub
mov
push
push
movsb
mov
es
gs
imul
icebp
arpl
aam
cmpsl
jle
lret
dec
in
out
mov
cmp
push
adc
imull
jp
aam
fistps
sub
xchg
pop
aas
loope
insl
pop
xchg
out
jae
jg
lret
jl
jecxz
adcb
or
inc
mov
mov
sbb
imull
sub
cmpsb
lcall
or
pop
pop
int
push
popl
add
aaa
and
sub
mov
ror
dec
adcb
jno
xor
adc
and
lods
cwtl
mov
lea
pop
xchg
cs
rorl
data16
or
ss
int
mov
pushf
jg
push
movsb
sub
cmp
jb
shlb
adc
jg
cli
daa
adc
cmpsl
lods
jmp
mov
testl
mov
lahf
aad
pop
mov
pop
xchg
adc
or
inc
sbb
das
inc
daa
mov
or
jno
and
in
imul
sti
fadd
dec
int
add
adc
and
in
rcll
inc
sub
pop
mov
push
icebp
popa
ss
cmp
mov
cwtl
pop
test
and
orb
int
insl
test
addr16
inc
jmp
lret
mov
xlat
xchg
stos
sbb
pop
dec
sub
mov
add
lret
out
addr16
push
in
cli
idivb
xor
stos
or
fbstp
addr16
or
xchg
dec
scas
xorb
adc
adc
in
pusha
cwtl
inc
or
shrl
dec
jns
popf
ja
xor
cmp
cli
jge
dec
adc
mov
mov
jae
imul
shll
adc
dec
push
push
gs
pop
pusha
pop
insl
jle
dec
pop
jp
pop
gs
rclb
sub
scas
mov
xchg
cmp
push
pusha
cltd
xchg
insb
lods
jp
adc
adc
clc
cmpl
bswap
das
adc
jo
movsb
insl
lcall
mov
adc
pusha
fdivs
adcb
and
mov
xchg
xor
xchg
pop
sahf
xor
pop
push
lods
in
aaa
in
mov
loop
movsl
adc
cmp
shl
xor
push
ja
pop
loope
adc
adc
mov
cmc
outsl
addr16
adc
push
push
mov
cmp
ret
dec
das
aas
ror
mov
mov
push
cmp
mov
imul
sub
xor
sbb
testb
add
sub
pop
pop
das
or
mov
decb
dec
in
ss
pop
add
leave
cmpsb
js
sahf
outsb
sahf
mov
jb
imul
pop
sub
pop
fwait
sub
std
mov
mov
cmp
push
adc
fwait
xor
xchg
cmp
rorb
jge
pop
push
cmp
jne
mov
add
cmp
int
iret
fists
sarl
fnsave
stc
sub
fwait
mov
xor
pushf
in
int
push
sub
sahf
lods
xchg
xchg
cmp
pop
out
mov
push
adc
mov
jbe
sbb
movsb
xchg
fnstcw
mov
iret
mov
cmp
push
filds
fidivrs
aaa
and
adc
das
push
sbb
test
jmp
lods
daa
je
jo
pop
mov
jbe
add
cli
jmp
inc
sbbb
jo
ja
add
notb
jecxz
cmp
lahf
dec
mov
or
lds
es
sbb
jns
stos
cmc
pop
push
xor
aam
inc
movsl
and
ret
cmp
mov
cmp
lea
jmp
sub
push
daa
ljmp
pop
imulb
push
sbb
xchg
outsb
pop
jecxz
pop
xchg
lods
or
xchg
mov
imul
mov
dec
ja
adc
sub
cltd
push
add
pusha
or
adc
clc
std
call
mov
mov
jp
inc
mov
push
xchg
inc
jl
jle
movsb
adc
test
or
xor
lcall
mov
aaa
or
cmp
add
xor
push
xchg
leave
sahf
and
add
imul
dec
sub
out
in
roll
or
xor
and
mov
xor
mov
int
jge
or
pop
lods
dec
into
test
scas
dec
add
add
rcll
rcrb
insb
test
out
mov
arpl
xchg
jl
lods
insl
leave
nop
arpl
push
in
pop
shr
cli
stos
dec
sub
xchg
vmovsd
inc
daa
lea
popl
cli
pop
lret
dec
test
push
jp
out
push
mov
sub
push
jae
cmp
jne
lock
xchg
dec
xlat
xchg
dec
cmpsb
sbb
mov
test
stos
enter
cltd
hlt
movsb
leave
aaa
cmp
jge
inc
push
cmp
into
and
jl
xchg
fstpl
lahf
jbe
sub
or
jae
xlat
fwait
lret
inc
cmpsl
iret
or
in
jo
fs
jbe
jge
repnz
or
pop
push
cmp
cld
shl
imul
fistl
rcrb
and
aaa
decb
inc
sbb
out
jae
ds
pusha
jg
inc
fsubr
add
iret
mov
pop
out
cmp
jle
pop
pop
into
lods
xor
inc
shll
shl
mov
cltd
inc
sbb
mov
add
loope
push
dec
shll
mov
or
pop
mov
je
es
repnz
pop
ss
push
inc
test
jge
mov
mov
mov
jae
xchg
lea
aas
push
nop
mov
mov
data16
adc
inc
xchg
lods
mov
lds
or
mov
mov
sahf
sarb
and
sarl
xchg
jne
outsl
or
aad
fimuls
inc
test
jb
pop
bound
lods
jg
daa
xor
hlt
push
decl
adcb
pop
fdivl
cwtl
in
repnz
jae
xor
lock
mov
cwtl
bound
xor
pop
fld
leave
movsl
fstpt
inc
scas
inc
loopne
sbb
popf
test
push
aad
adc
jne
loop
push
outsl
sub
fadd
je
jbe
rdtsc
mov
pop
jb
aam
push
cmpsl
xchg
push
push
fdivs
dec
ja
daa
xor
or
mov
stos
mov
call
xchg
fsubrs
sbb
dec
adc
cmp
mov
ret
leave
push
dec
ds
insl
or
and
stc
daa
xor
loopne
rol
aam
iret
mov
orb
in
sbb
nop
sbb
lock
inc
add
cmp
ds
test
push
xor
adc
sub
jg
push
add
cltd
pop
movsb
out
call
mov
and
inc
sti
cmp
test
mov
and
pusha
pop
aad
jge
decl
xor
lahf
sbb
into
lcall
sbbb
push
xchg
inc
mulb
enter
cwtl
fistps
sub
push
add
setge
adc
pop
pop
jae
dec
push
adc
and
call
scas
push
sbb
out
mov
sbb
sahf
jo
jmp
and
jp
xor
sti
add
sub
sub
jb
mov
or
dec
pushf
push
xchg
dec
lret
js
dec
sub
xchg
push
outsl
push
rcll
call
fistl
sub
addr16
jg
xor
bound
lock
cmpsb
inc
daa
cmp
jns
push
dec
imul
push
xchg
push
sub
idivb
fdivs
jo
and
jle
jns
lcall
mov
sarb
in
push
rcl
mov
cmp
mov
sbb
xchg
out
fsub
or
jp
jae
jae
shll
iret
xchg
lret
testl
dec
sti
pop
lock
add
dec
repnz
push
daa
inc
push
sub
sbb
mov
pop
lcall
mov
push
xor
movsl
aad
loope
mov
xor
mull
pushf
aam
das
test
sub
rcrl
lods
ljmp
jg
push
es
jp
fsubrl
jnp,pn
xor
outsb
mov
stos
pop
mov
dec
sbb
imul
pop
iret
mov
mov
call
mov
jnp
sbb
outsb
sahf
jo,pn
mov
js
and
and
sub
sub
hlt
mov
jmp
vcvtuqq2pd
inc
mov
sub
sbbl
xor
dec
dec
mov
pop
ss
fdivp
data16
xor
jmp
xchg
inc
or
fistpll
fdivl
jns
popf
lahf
sarb
pusha
add
add
stc
loope
xor
outsl
and
dec
mov
mov
adc
sti
xor
xor
movsl
xor
and
pop
push
cli
into
mov
inc
mov
bound
popf
jg
daa
pop
call
pop
xchg
and
stos
insl
out
jns
popl
roll
test
push
sbb
ret
jo
outsl
fsubs
aam
dec
addr16
jne
lea
repnz
xor
sahf
jg
out
inc
cmp
cwtl
ds
or
push
push
ss
sbb
jo
leave
ror
dec
pop
jle
sbbl
add
dec
push
dec
imul
stos
mov
xorl
ret
push
outsl
arpl
add
icebp
lods
sub
dec
cmp
lods
test
push
lret
cli
int
jnp
in
push
add
add
mov
mov
repz
mov
jl
cmp
imul
jge
adc
adc
sub
pop
cmp
ret
push
add
popa
mov
das
cmp
and
out
scas
xor
leave
lock
sbbb
aas
mov
frstor
daa
add
pop
mov
mov
rcr
and
pushf
test
imul
aas
pop
xchg
stos
shrl
lds
mov
ret
aaa
or
adc
and
or
je
stos
js
mov
pop
jbe
xor
ljmp
xor
lcall
xchg
jg
sbb
cltd
shlb
ja
pop
add
cmpsl
je,pt
and
or
pop
ds
not
ds
xchg
xor
mov
in
mov
sti
aam
dec
mov
dec
sti
xchg
test
cmpl
repnz
inc
push
aam
or
dec
xchg
lea
outsb
andb
in
daa
cmp
cmp
pusha
jmp
stc
aam
push
xchg
ljmp
in
inc
sub
out
push
pop
sbb
jnp
out
insb
fwait
sub
fsubl
pop
lret
cmp
dec
jno
jo
cmp
stos
outsb
jnp
cmp
cmp
add
mov
cmp
add
inc
mov
popf
push
jge
inc
mov
shlb
cmp
xor
test
push
das
mov
cltd
dec
mov
push
lods
inc
inc
pop
cmpsl
lahf
adc
dec
push
and
push
pop
rcr
inc
inc
push
cld
rcll
or
mov
lea
popa
sub
insb
mov
jae
xchg
push
jg
mov
outsl
loop
shlb
bound
cmp
std
das
mov
lret
sub
dec
stos
out
loop
sbb
xor
scas
jp
add
push
add
mov
out
jge
fst
sarl
sub
icebp
inc
mov
and
lods
pop
les
sbb
es
mov
pop
xchg
addb
imul
call
jno
ljmp
lods
mov
push
jecxz
add
loope
adc
xlat
hlt
cmp
ret
adc
xchg
incb
or
adc
icebp
xorb
cmp
fadds
divb
cmc
arpl
cltd
jnp
jae
xor
mov
int
leave
push
adc
test
pop
iret
movsl
stos
addr16
add
addb
rcrl
pop
xor
pop
add
pop
add
ss
jno
in
push
int
mov
das
and
cmp
xchg
push
fsubs
jb
or
jns
cmc
push
stos
scas
bsr
jno
arpl
lods
jbe
test
lahf
inc
jp
outsl
cmp
in
test
lret
mov
mov
mov
sub
sbb
jg
stos
imul
jo
mov
mov
push
test
mov
mov
lea
or
xor
and
out
and
addr16
orl
sbb
cmp
pop
sbb
insl
mov
and
mov
das
das
sbb
fwait
jecxz
nop
in
add
dec
lret
inc
xor
mov
addr16
sti
mov
hlt
test
jp
std
sbb
push
fcmovbe
hlt
dec
mov
mov
das
clc
dec
jecxz
cmp
lret
cmp
in
inc
inc
stc
xchg
mov
pop
fisubl
inc
cld
icebp
iret
inc
loopne
dec
mov
repnz
out
lock
test
xchg
mov
dec
jp
pop
out
jne
incl
idivb
dec
adc
jb
int3
outsl
es
xlat
enter
mov
scas
xchg
push
lods
and
mov
aad
arpl
push
push
push
mov
cmpsb
push
mov
sub
cltd
adc
stc
sbb
sti
cmp
out
mov
into
aad
cmp
push
lds
pop
ja
cltd
xor
cli
divl
repz
enter
adc
aam
jp
inc
mov
jge
xor
aam
push
mov
cli
mov
insb
outsb
mov
insb
call
add
jne,pt
sub
jns
and
call
cwtl
and
jg
adc
pop
push
insl
fcmovne
imul
daa
push
aaa
cli
cmp
aaa
or
sub
xchg
gs
sbb
sbb
xchg
push
mov
sbb
pop
call
call
xchg
dec
dec
jnp
cmp
pop
xchg
ret
inc
shll
mov
mov
mov
pop
xor
inc
adc
or
sahf
push
and
adc
clc
mov
inc
jl
xchg
enter
or
mov
add
jae
pop
stos
cmpsl
jmp
mov
push
adc
shlb
test
shrl
jg
imul
iret
push
and
cmp
out
inc
sbb
inc
jae
inc
ret
push
leave
cwtl
cmp
jmp
xchg
push
add
adc
or
insb
adc
xchg
push
mov
add
hlt
adcb
rolb
jmp
test
pop
lock
push
jmp
out
popl
xor
fs
xor
fbld
mov
insb
push
xchg
push
push
mov
add
cmp
pop
add
add
mov
mov
push
stos
insl
es
test
mov
out
repz
repz
loopne
scas
fdivs
xor
lret
push
jle
adc
inc
stc
jae
jb
scas
into
push
xchg
xor
and
cltd
xchg
scas
inc
or
hlt
lret
jno
jmp
and
pushf
mov
scas
rcl
xchg
add
sbb
lea
pop
rcrl
sub
loop
ret
lds
icebp
jl
orb
jecxz
dec
or
fidivs
addr16
jnp
fldl
pop
arpl
test
inc
cmc
adc
mov
in
insb
cmpsl
xchg
xor
and
es
push
jb
divl
js
push
scas
popf
cs
repnz
jecxz
inc
mov
push
out
stos
jge
aas
push
add
adc
movsl
fmul
popf
xor
cli
sub
mov
clc
mov
mov
adc
ret
shlb
mov
inc
xchg
xor
mov
loope
xchg
in
in
inc
adcb
and
push
xchg
xor
mov
or
test
enter
ja
outsb
push
jmp
inc
insl
je
in
movnti
test
cmp
aam
mull
mov
inc
jmp
out
xor
rcll
sub
int3
cmp
addl
or
sarl
mov
sbb
jno
arpl
mov
aad
aaa
jno
sub
push
and
mov
mov
add
aas
mov
and
cmpsb
sbb
loopne
cwtl
mov
sub
testb
inc
gs
cld
xchg
mov
std
lea
sub
sti
or
and
xor
pushf
jno
dec
cmp
das
push
jge
nop
jo
xchg
jns
gs
in
sbb
push
and
sub
push
fisubrl
sub
push
cmc
add
mov
enter
jb
pop
and
imul
adc
add
and
rcl
xor
jbe
dec
xchg
adc
fistl
ja
dec
or
shrl
jbe
jb
pop
std
cmp
xchg
xchg
jp
enter
jo
test
iret
aad
les
sarl
int
xchg
rcll
jp
mov
xchg
inc
mov
cld
or
sti
fwait
addr16
jle
ss
in
jmp
dec
mov
add
sbb
push
dec
inc
pop
sbb
add
adc
push
mov
dec
xchg
mov
jae
je
adc
cld
mov
out
sub
xorb
fwait
push
mov
mov
out
xchg
loopne
inc
sbb
xor
cmp
test
push
test
aas
leave
xchg
jg
dec
add
cmp
sbb
push
hlt
stos
jo
orb
push
sti
mov
add
pusha
xlat
add
xchg
xor
shlb
and
mov
cld
jne
out
adc
std
xor
and
push
mov
adc
or
jbe
movsl
test
jg
xchg
dec
call
test
dec
out
lcall
adc
dec
std
js,pn
mov
inc
xchg
cltd
add
push
jb
push
fcompl
aad
xor
or
shl
inc
dec
push
scas
xor
push
dec
cmpl
out
inc
inc
sub
ret
ret
icebp
stos
sarb
shlb
fisubl
adc
loop
mov
push
cwtl
insl
cmp
enter
mov
mov
addr16
inc
dec
dec
popf
push
cmpsl
jge,pn
add
lods
dec
mov
mov
pop
push
mov
xlat
jno
inc
mov
dec
mov
jo
ja
ss
ficoml
cmp
or
cmp
and
mov
data16
add
jmp
cwtl
fbstp
mov
sbb
hlt
pop
dec
inc
jg
lock
push
jle
pop
popa
mov
push
test
dec
test
cmp
jae
cmp
jl
daa
cmp
in
jmp
pop
shll
push
or
xchg
add
cmp
sub
sub
dec
sbb
dec
push
rcrb
pop
sbb
movsb
std
lcall
pushf
cs
lret
fstp
aaa
mov
rol
pop
frstor
adc
fs
in
mul
lcall
mov
mov
or
push
xchg
ss
adc
in
fnstcw
movsb
pop
jecxz
or
mov
ror
dec
lods
pop
push
shr
stmxcsr
test
aam
add
xchg
lds
dec
mov
dec
nop
or
sahf
xor
outsb
lea
push
or
dec
roll
scas
pop
pop
jecxz
mov
sbbl
fwait
in
fbstp
pop
repz
cltd
cmc
jae
ret
pop
cmp
cmp
fisubs
daa
sbb
inc
adc
insb
sub
ret
xchg
in
xchg
mov
jmp
push
or
jecxz
or
inc
xor
dec
sbb
bound
fsubs
cmpsb
mov
stos
mov
mov
pop
sub
test
popf
out
imul
or
test
imul
and
jae
int
rcrl
push
sbb
or
pop
add
cs
xor
pop
inc
or
icebp
or
push
test
lock
inc
test
mov
outsl
jae
inc
jne
cmpsl
pop
inc
inc
xor
push
and
sarb
mov
xchg
jns
imul
movsb
lret
jmp
testl
js
mov
xorb
jno
movsl
mov
mov
xchg
mov
mov
addr16
mov
aas
sbb
std
and
lahf
mov
cwtl
mov
mov
ret
sbb
iret
faddl
pop
adc
pusha
mov
adc
out
lea
popf
bound
ret
xor
test
repnz
lock
inc
in
or
notb
xchg
insl
test
push
push
push
dec
jg
fdivl
dec
jnp
jne
cmp
pop
fstpt
push
push
insl
ds
push
add
xchg
movsb
pop
push
jle
idivb
pusha
rorb
out
cs
idivl
dec
add
jns
mov
lahf
mov
jno
cmp
jbe
mov
pop
neg
lock
sbb
cmc
or
lcall
cmpsl
je
shrb
adc
sub
lcall
sub
in
and
shll
out
andl
andl
bound
jle
mov
pop
sub
fidivrl
fdivr
inc
test
sub
pop
ja
lds
insl
test
out
repnz
jp
jo
push
mov
lret
imulb
in
push
lret
pop
jbe
xchg
es
xchg
pop
loop
cmpsl
popa
insl
es
push
add
in
add
sar
cmp
mov
pop
inc
sbb
leave
in
xchg
fcmovb
in
push
pop
push
xchg
jl
jl
in
in
test
sbbb
and
jnp
adc
out
ljmp
lret
inc
fwait
mov
cld
repz
popf
or
call
shlb
jns
xchg
mov
xchg
or
inc
mov
inc
repz
cmc
shl
push
jge
lcall
add
push
adc
sbb
mov
pop
mov
bound
enter
jno
icebp
cmp
push
ss
sbb
mov
iret
cmpsb
mov
lret
push
xor
shll
call
pop
jbe
mov
inc
xor
cwtl
mov
sahf
push
std
sbb
xchg
dec
mov
and
sub
sub
dec
sahf
adcl
jno
int3
mov
scas
int3
rcrl
adc
scas
in
mov
xor
cmp
ja
mov
outsl
pop
and
or
or
ja
pop
lcall
push
adc
lea
fimull
sarb
jp
push
enter
out
jmp
mov
push
stc
inc
inc
icebp
pop
nop
test
aam
lahf
sbb
inc
icebp
push
jmp
adc
sbb
mov
add
adc
mov
inc
rclb
xchg
fcoms
jns
dec
push
push
jecxz
loope
mov
sarb
push
repz
jno
fiaddl
das
jg
sub
jae
xchg
and
fisttpl
dec
cmpsl
addr16
aaa
push
clc
jg
sbb
sub
pop
pxor
fsubl
xor
mov
mov
fs
dec
rolb
pop
je
aad
mull
jg
xchg
insb
pop
fmull
icebp
adc
adc
cs
test
pop
filds
mov
xlat
dec
fs
popl
mov
xlat
mov
xchg
popf
adc
mov
xor
das
fisttpl
dec
jl
inc
dec
inc
inc
js
arpl
std
dec
push
and
jp
pop
adc
fnsave
bound
add
and
dec
jbe
sub
pop
lcall
stos
push
push
push
mov
xchg
aad
pop
lahf
adc
pushf
cs
iret
cmp
mov
cmpsb
je
push
icebp
jbe
cmp
fldenv
shrb
xchg
das
jle
out
aad
stc
add
cli
fstp
bound
xchg
cmp
sub
fimuls
dec
cmp
notb
popf
mov
insl
call
pop
cmp
pop
adc
out
adc
sub
sbb
mov
je
cmp
sti
aaa
mov
mov
adc
inc
xchg
stc
pusha
repz
out
and
sbb
hlt
scas
daa
adc
add
test
sub
test
repz
xor
or
mov
out
rcr
out
inc
gs
aaa
movsb
stc
fdivp
pushf
movsl
adc
mov
push
imul
dec
mov
sbb
stos
lret
loope
mov
add
fnsave
or
sub
pop
xor
punpckhdq
push
js
jl
jle
cmp
inc
repz
loop
fmul
fcmovnbe
adc
mov
mov
fwait
jp
or
pusha
jbe
rorl
movsl
lds
ss
ficomps
dec
or
cmp
or
add
mov
mov
inc
push
mov
stos
loope
inc
inc
xchg
aad
dec
nop
fdivs
xchg
adc
in
lods
rolb
mov
adc
test
jbe
push
inc
sub
les
lods
stos
sub
pop
aam
rcrl
mov
xchg
push
xlat
gs
shrb
scas
or
push
das
fsubrs
test
in
sbb
xchg
sbb
push
xchg
loope
rolb
jae
jmp
ret
jb
push
xor
mov
pop
mov
mov
insl
lret
sbb
add
xor
jns
sbb
mov
adc
dec
mov
dec
inc
imul
push
xlat
sub
into
dec
je
xor
push
xchg
push
sub
inc
enter
into
mov
in
xor
xchg
dec
xor
fdiv
not
push
inc
stos
imul
pop
leave
outsl
inc
iret
cs
push
imul
mov
lret
in
out
cmp
js
clc
test
ljmp
cltd
xor
sbb
out
mov
cmc
mov
pop
insl
xchg
lock
sbb
inc
jle
jp
inc
mov
cmpsb
in
adc
xchg
push
mov
pop
adc
in
jge
inc
mov
neg
mov
dec
jecxz
pop
and
jno
or
add
fadd
movsb
nop
sbb
jmp
cmp
or
xchg
arpl
insb
cmpsl
sbb
cs
cmpl
movsb
lret
cmpsl
rorl
and
xor
pop
dec
cmpsb
popl
mov
testl
hlt
callw
xor
inc
iret
arpl
test
mov
sub
add
sarl
push
push
inc
dec
fdivl
aaa
lcall
out
fisttpl
inc
mov
mov
jbe
mov
loopne
dec
mov
xchg
stos
out
adc
mov
sbb
cmp
pop
jle
clc
gs
xchg
testl
std
arpl
mov
repnz
fildl
push
cmp
and
mov
sub
pop
or
jg
orl
jbe
xchg
dec
xchg
mov
mov
outsl
out
mov
mov
jne
popf
pop
dec
xchg
xchg
out
mov
xchg
jge
push
std
pop
fwait
in
mov
xchg
mov
in
push
shll
adc
aad
fildl
inc
pop
lcall
jnp
dec
xor
popf
inc
insl
int3
aad
stos
push
and
bound
push
dec
or
or
mov
enter
mov
daa
xor
push
xchg
xor
xchg
outsl
mov
inc
fsubrl
aam
loop
movl
adc
inc
xor
shll
aad
adc
jge
pop
sub
and
popa
pushf
test
jp
jecxz
cmc
lret
in
das
mov
fistps
sbb
mov
xchg
push
pop
cmp
sub
jne
and
jecxz
in
ja
addr16
popf
push
jmp
and
cmpl
scas
add
movsb
add
add
and
dec
mov
scas
mov
cwtl
arpl
lock
daa
pusha
pushf
loop
fcoml
mov
jnp
clc
lock
leave
add
add
shrl
in
lret
mov
xchg
lahf
jecxz
jmp
fdivrl
pop
or
arpl
push
sub
mull
and
int3
and
xor
loope
scas
add
stos
iret
repnz
repnz
adc
lret
pop
xorl
subl
xor
mov
fs
ret
lret
ss
jno
cltd
lock
fidivl
xor
arpl
test
test
cmpb
lret
push
cwtl
mov
notl
and
mov
mov
adc
xchg
pop
addl
dec
outsl
inc
roll
mov
mov
into
or
mov
mov
call
push
les
pop
arpl
pushf
cwtl
xchg
dec
xor
jecxz
lock
add
mov
add
mov
jecxz
mov
pop
and
mov
mov
into
int
jne
xorl
add
orb
icebp
sbb
ret
das
shlb
ror
test
sbb
xchg
mov
xchg
xor
cmp
data16
xchg
sbb
cwtl
out
add
xlat
mov
pop
cwtl
inc
popa
xor
adc
push
sub
jne
inc
aad
lret
stc
lods
xor
in
and
sub
pop
sub
icebp
nop
sbb
add
repz
lea
in
out
mov
pop
inc
mov
pop
int
imulb
lret
adc
jmp
jno
clc
inc
push
and
shll
imul
and
add
out
mov
in
in
imul
mov
push
cs
lea
push
dec
int3
adc
pop
roll
push
and
add
dec
jno
push
and
or
xchg
roll
xchg
inc
lret
mov
loopne
shll
adc
add
pushf
mov
cltd
mov
dec
inc
inc
jg
mov
inc
adc
aad
fwait
fwait
xchg
pop
lea
sahf
push
rcr
into
ficompl
push
cmp
or
xchg
mov
test
xor
pop
data16
daa
loope
pushf
dec
jmp
lea
mov
sti
movsb
arpl
mov
cmp
mov
jecxz
inc
mov
dec
flds
in
cmc
mov
cmp
pop
lahf
inc
gs
or
fldcw
or
adc
cmpl
mov
pop
in
lods
jle
test
andl
mov
addr16
mov
loopne
in
scas
fildll
and
push
fcomps
shll
push
testb
pop
out
add
jno
test
mov
js
push
dec
jb,pn
scas
jae
sub
mov
sbb
lcall
or
cmpsl
aad
imul
test
mov
xchg
dec
mov
pusha
sahf
mov
mov
ret
adc
leave
jp
adc
mov
jae
mov
js
ljmp
imul
in
mov
js
adc
cwtl
fimuls
fistpl
jo
fsubrs
jno
xor
dec
xlat
sahf
inc
push
mov
imul
sahf
mov
das
mov
or
sbb
mov
or
pop
inc
pop
jns
mov
popa
shl
push
jp
leave
imul
daa
fs
add
pop
xor
cmp
jle
or
ja
mov
sar
inc
adc
fwait
add
jnp
iret
shrl
cmpsl
dec
adc
push
arpl
dec
int
imul
sbb
pop
jle
xor
iret
aam
push
into
push
je
xchg
or
imul
jnp
ja
cmc
mov
sbb
jns
inc
xchg
mov
int
shll
push
fcom
pushf
xchg
jl
test
cltd
adc
jg
ljmp
scas
cld
lods
stos
lods
arpl
loope
mov
inc
inc
int3
lock
or
addr16
jl
hlt
adc
add
fnsave
cli
sti
mov
ret
or
and
cmp
leave
lahf
clc
xlat
push
xchg
les
mov
sbb
xor
in
jo
dec
push
in
int3
xchg
cltd
ja
mov
aam
jg
cmc
jno
gs
xchg
in
cmp
insl
cmp
push
mov
xchg
das
outsb
or
into
lret
sub
icebp
jne
sbb
stos
repz
test
dec
and
add
in
cltd
adc
cmp
push
push
out
cmp
pop
dec
jle
mov
pop
or
arpl
jle
scas
scas
fildll
cmp
sbb
popf
ss
inc
movntq
movsl
and
aam
cmp
xchg
or
int
xor
js
pop
pop
xchg
cmp
shrl
das
and
add
cld
in
imul
sbb
and
ja
xorb
and
fsubrl
mov
mov
xchg
mov
push
mov
es
mov
xchg
stos
jp
inc
jp
mov
mov
xchg
stos
push
mov
outsl
rcrb
xchg
xlat
push
loop
dec
xchg
dec
or
mov
xor
push
jne
ds
xchg
mov
roll
sarb
rcrl
xor
ja
push
ret
push
fildl
pushf
int
lds
in
je
fldl
aas
outsb
insb
cli
inc
cmc
pop
lcall
push
rorb
je
mov
fidivs
inc
ss
rorb
and
jle
pop
fiaddl
mov
add
and
push
pop
mov
insb
jl
data16
add
lock
das
mov
test
idiv
outsb
lods
jbe
stos
inc
xchg
jge
xchg
leave
call
dec
popf
je
add
adc
into
mov
lret
mov
cmp
insl
pop
xor
mov
roll
cmp
push
cmpsl
xchg
cmp
jge
aas
mov
int3
sub
inc
add
ret
adc
scas
es
or
xchg
mov
push
jo
gs
push
and
push
out
mov
or
stos
fdivrl
jmp
dec
and
push
movsl
pushf
sahf
mov
stos
mov
dec
aaa
stos
xchg
mov
in
outsb
mov
shlb
push
push
shll
lods
sub
or
mov
loope
inc
mov
mov
push
jno
clc
sub
sbb
mov
mov
sbb
jge
inc
hlt
add
adc
mov
movsb
inc
push
mov
cwtl
sub
sbb
sub
imul
sbb
roll
adc
repz
scas
lea
cmc
je
jge
lfs
mov
xchg
ret
push
in
mov
or
popa
roll
mov
add
icebp
movsl
loope
movsb
jno
shr
fbld
pop
jns
fidivrl
cs
ret
mov
pop
xor
sub
inc
push
jo
sbb
or
mov
pop
repnz
fisttpll
cmp
xchg
int
mov
or
sub
sahf
popa
cmp
inc
add
pop
into
and
push
lahf
mov
mov
out
std
mov
sarl
xor
pop
xchg
jle
dec
push
and
xor
lret
or
mov
xchg
inc
jbe
aaa
sub
fldcw
popl
rcl
add
into
cmpb
sbb
adc
scas
fstps
sub
loope
mov
cmpsb
bnd
jno
jmp
fnstenv
dec
pushf
insb
out
add
fwait
adc
testl
jecxz
lods
push
into
and
sbb
cmp
fucomp
das
sub
aas
addr16
lods
jnp
push
pop
pushf
mov
or
jge
dec
fdivrs
lret
lods
shll
dec
and
push
jecxz
addb
das
inc
bound
xchg
adc
leave
add
and
adc
push
mov
or
dec
in
jecxz
into
pop
std
sub
adc
xchg
cs
testl
mov
mov
and
mov
dec
push
sub
cli
dec
mov
mov
subl
das
nop
mov
loopne
inc
cmp
ja
pop
shll
sbb
fmul
shll
push
and
pop
popf
adc
push
pop
jecxz
and
mov
cs
and
dec
insl
or
arpl
and
cwtl
xchg
mov
std
dec
or
cmp
mov
js
cmp
mov
inc
in
mov
pop
mov
cmpb
mov
test
clc
xor
xchg
andl
pop
aad
call
mov
mov
cmp
jae
cmove
xlat
lea
cmp
into
pop
mov
inc
sub
mov
bswap
push
adc
jmp
mov
lods
call
push
mov
ret
inc
movsb
pop
push
push
rolb
pop
popf
loopne
ljmp
and
into
movsl
mov
add
mov
mov
xor
cmc
je,pn
jne
in
mov
adc
hlt
pop
scas
nop
xor
imul
orb
call
add
cltd
push
out
arpl
mov
into
lret
repz
mov
push
loope
popl
je
sbb
test
fidivrs
in
or
out
data16
pushf
popf
dec
dec
in
push
pop
shlb
insl
jge
xchg
fsubs
mov
aas
jno
mov
fwait
mov
push
xor
mov
sbb
sbb
mov
jno
mov
push
pop
add
test
fcmovb
test
mov
xchg
cmpl
ljmp
outsb
addb
add
aas
scas
out
sub
pop
push
lods
sbb
jns
lods
out
rolb
dec
cwtl
dec
inc
add
shl
inc
lahf
fmulp
lock
cli
push
push
or
lds
inc
fsubrs
mov
add
push
mov
adc
stos
xchg
and
xchg
ret
in
decl
int3
xchg
lcall
push
test
push
dec
mov
xchg
mov
pop
ss
into
out
sbb
and
jb
insl
jp
and
cltd
lahf
das
imul
jmp
outsb
xchg
mov
and
dec
ds
stc
imull
mull
inc
notl
inc
jmp
jae
mov
out
inc
adc
clc
frstor
aas
mov
mov
adc
bts
aam
sahf
sbb
jae
out
jns
dec
sbbb
in
rcrl
jne
dec
int3
dec
xor
mov
jecxz
test
pop
aaa
dec
div
and
enter
mov
das
je
stc
mov
push
shll
adc
cltd
jb
fdivrl
sbb
pop
mov
mov
mov
roll
or
call
mov
cmp
pop
and
cmp
fs
or
mov
data16
fsubp
sbb
or
xchg
jne
pop
or
ss
jne
sbb
fs
and
xchg
jecxz,pn
insb
or
std
lock
and
xchg
mov
aad
enter
rcr
repz
fiaddl
std
stos
dec
and
push
or
stos
movsb
push
repz
adc
aam
pop
in
arpl
in
aam
mov
sub
int
sbb
not
add
xchg
jbe
lahf
adc
push
roll
fidivrl
xchg
outsb
fldl
jb
icebp
and
adc
aaa
call
pop
mov
mov
int3
gs
rorl
out
and
push
and
pop
jne
insb
outsb
mov
mov
mov
fbstp
mov
in
add
outsl
lret
pop
mov
in
lahf
ljmp
fistpll
xchg
mov
lret
ja
dec
mov
sbb
lcall
or
push
sub
add
push
ja
add
and
pop
dec
mov
ret
cmpsl
inc
cmc
push
fsubrs
stos
dec
lea
mov
pop
mov
lahf
xchg
shrb
test
or
cmp
mov
shlb
scas
mov
daa
xor
shlb
sahf
stos
clc
faddl
mov
arpl
xchg
movsb
addr16
sbb
push
in
repnz
mov
mov
mov
and
dec
sbb
mov
inc
jg
inc
xor
pop
fildll
sbb
iret
cwtl
lods
inc
es
cli
xchg
test
or
inc
fs
fwait
xor
add
lds
inc
xchg
test
xchg
pop
pop
cwtl
adc
add
ljmp
cmp
pop
adc
mov
xor
and
movsl
mov
adc
sbb
ss
ja
push
lahf
ljmp
jae
jne
xchg
dec
mov
add
cmp
mov
jg
lret
imul
cmp
frstor
pushf
xchg
cmp
std
rcrl
shrb
in
repnz
xchg
xor
and
push
pop
into
addr16
aad
pop
mov
pop
stos
iret
push
pop
xchg
sub
inc
rcr
shrb
aas
fldenv
xchg
adc
inc
jnp
mov
sti
mov
gs
jle
outsl
in
clc
cmpsl
test
subb
cmp
repnz
mov
fldcw
jbe
mov
lret
fistpl
adc
pop
out
jns
jle
hlt
shr
inc
pop
cwtl
and
mov
rcl
sbb
sub
lea
sub
add
sbb
gs
xchg
mov
xlat
and
out
stos
adc
mov
push
or
loope
aaa
cmp
inc
sub
cmp
pushf
enterw
out
cli
leave
ret
mov
daa
dec
push
faddp
out
xchg
cwtl
out
cmp
pop
stc
leave
mov
or
and
fwait
xchg
and
mov
xor
rcll
bound
jmp
hlt
es
mov
pop
adc
aad
testb
mov
js
mov
js
mov
imul
adc
cmpsl
lods
ss
cs
sti
jle
pop
imul
in
daa
roll
test
out
xchg
int
or
sbb
inc
int3
fcmovne
cmpsl
insb
cli
in
out
ja
cltd
jnp
fdivr
icebp
insl
pusha
mov
xchg
fwait
adc
xchg
insl
mov
cmp
inc
loopne
inc
jg
pop
lret
imul
xchg
xchg
test
outsl
dec
push
push
ficoml
into
outsl
add
push
xchg
fisubrl
imul
adc
sbb
lret
cli
cmp
gs
dec
out
mov
pop
push
dec
lods
std
sub
jno
push
add
mov
pop
adc
loopne
popa
dec
mov
push
aaa
leave
add
lahf
add
xchg
dec
aaa
mov
mov
inc
cld
out
daa
stos
fdivrl
push
push
mov
jl
flds
jmp
jne
pop
mov
add
jno
sbb
jge
push
and
clc
jmp
sub
js
sbb
sbb
inc
jp
sub
ret
dec
and
xchg
jmp
sub
mov
inc
mov
mov
out
loope
subl
insl
orb
insl
mov
call
sarb
dec
mov
inc
lret
and
push
lahf
gs
addr16
dec
sbb
mov
lods
dec
js
aam
call
dec
mov
pop
sahf
sub
lods
sub
sbb
fdivr
or
push
clc
xchg
jg
dec
xchg
aad
dec
xlat
inc
movsl
clc
push
stc
fisubrs
fsubr
stos
out
movsb
nop
add
out
out
cmp
xchg
sahf
sub
mov
xlat
and
bound
cld
cmpsl
jecxz
cld
shl
xor
iret
imul
pushf
mov
push
test
inc
arpl
lahf
jnp
adc
mov
clc
jb
sti
xchg
mov
aam
mov
xchg
icebp
dec
jmp
mov
lret
cmp
stc
inc
mov
push
sti
lea
imul
xorl
pop
mov
jbe
out
test
je
inc
jnp
add
mov
sub
lds
jge
add
xchg
pop
call
mov
push
loope
outsb
jmp
jno
in
dec
dec
xchg
fnstsw
testl
lret
scas
xchg
bound
and
cwtl
arpl
icebp
std
jno
push
rorb
adc
xchg
cwtl
mov
jo
sub
push
add
sub
mov
sbb
xor
or
xchg
ss
pop
adc
call
cmp
fwait
xchg
jg
mov
xlat
jnp
add
sub
pusha
mov
sbb
arpl
mov
rcl
inc
loope
cmpsl
fdivrs
outsb
mov
test
jg
out
jle
mov
inc
sahf
ljmp
and
lods
mov
pushf
cld
xor
ja
xor
adc
xor
shl
jne
cmp
sub
psubb
xchg
std
jge
in
fiadds
mov
jne
mov
movsl
nop
sub
sbb
inc
loope
loop
dec
fs
mov
cmp
lahf
mov
or
cld
push
jno
fdivrs
ja
adc
popa
aam
pushf
mov
rorl
push
sub
js
jns
shrb
nop
das
test
or
imul
fwait
and
adc
arpl
call
xchg
mov
inc
aas
fstp
inc
imul
cmp
aas
fnstcw
out
adc
inc
pop
xchg
shrb
imul
fwait
pop
daa
push
xlat
mov
sub
out
and
dec
loop
mov
into
xchg
or
mov
or
jns
sub
jecxz
aas
es
cs
mov
jecxz
adc
int
rcl
sbb
bound
imul
push
ja
leave
mov
xchg
addr16
stos
scas
unpcklps
mov
mov
lahf
xchg
sub
dec
loopne
imul
imul
mov
imul
xlat
mov
lcall
bound
mov
xor
orps
xor
rcr
cmpsl
xchg
je
and
icebp
cmp
adc
adc
mov
pop
adc
jg
dec
enter
push
mov
je
out
and
lahf
ret
pop
inc
cmpb
xchg
push
xor
sub
int3
in
lahf
push
mov
xchg
jl
mov
inc
addr16
add
jl
cs
inc
adc
aas
or
cmp
bnd
or
das
bound
cmp
or
push
xor
clc
hlt
and
adc
sub
stc
nop
out
shlb
ja
pop
test
loope
mov
jle
cmp
jecxz
je
bound
push
inc
inc
add
dec
outsl
add
popa
dec
push
loopne
dec
loop
daa
sbb
sub
std
in
add
fmuls
scas
jecxz
push
or
and
pop
mov
adc
xor
lods
mov
mov
std
or
mov
inc
int
sbb
outsl
jmp
dec
iret
lret
xor
test
jnp
mov
imull
sub
inc
in
data16
inc
push
aas
or
sbb
lea
xor
in
fstps
inc
lods
daa
fs
xor
fisubl
in
pop
jp
pusha
lahf
rcl
and
addb
test
loope
mov
mov
jmp
mov
xor
pop
and
and
fs
mov
movsb
dec
push
fdivl
or
mov
sub
lret
cmp
cmc
negl
nop
fidivrs
fwait
in
inc
add
push
or
fbld
mov
mov
dec
jl
adc
or
pop
mov
mov
in
loope
shll
xor
fs
pop
rcr
lret
repnz
dec
inc
fbld
push
stos
imul
inc
or
jae
dec
adc
loopne
sbb
jg
ror
sarb
mov
mov
pop
daa
dec
push
fbstp
cmp
xor
add
ds
les
inc
and
cmp
mov
popf
xor
pop
or
jecxz
cmp
push
jbe
cmpsl
add
test
popa
mov
adc
aam
xchg
mov
inc
clc
jno
mov
das
cld
mov
ds
iret
mov
push
dec
flds
or
sbbl
mov
push
scas
xchg
out
lret
scas
cmpsl
out
popf
pop
jmp
xchg
pop
cmp
or
mov
cmp
xchg
aam
or
stos
jp
mov
xchg
das
mov
xlat
scas
bswap
loope
dec
hlt
inc
scas
mov
or
jp
xor
popa
xchg
inc
out
gs
fmuls
inc
iret
mov
cmp
xchg
shrl
cmpsb
scas
and
stos
ss
loopne
nop
jecxz
push
and
mov
out
adc
dec
in
and
icebp
mov
dec
shl
inc
iret
fwait
test
mul
cltd
adc
in
pop
cmpsb
lret
cli
ja
movsb
lcall
aam
dec
push
jb
outsb
jcxz
jno
jno
push
imul
xchg
pop
pop
pop
imul
sbb
rolb
or
inc
mov
adc
cmc
push
or
out
pop
xor
addr16
lret
adc
fs
ljmp
and
lock
dec
sub
push
fldl2t
xchg
std
and
jno
ss
pop
sub
xchg
add
repz
mov
cmpsb
inc
push
lahf
icebp
les
ds
pop
pop
lea
xchg
jae
loop
or
xlat
test
fdivs
int3
adc
mov
mov
stos
movsl
sbb
push
into
divl
repnz
sub
ljmp
mov
scas
xchg
fldcw
pushf
arpl
and
fs
in
shr
lods
mov
add
fsubp
in
test
test
pop
or
pushf
jbe
sti
mov
mov
test
int
in
and
push
out
xor
xchg
fdivs
clc
jae
pop
inc
push
lock
neg
lods
cld
add
and
jns
jae
popf
nop
cmc
add
insl
or
sbb
push
lret
call
cmp
and
mov
cmpsl
inc
push
cwtl
lret
push
jo
adc
xchg
and
jl
push
jl
jb
mov
pop
jns
mov
xlat
jae
mov
stc
add
xorb
sbb
je
adc
test
je
das
add
dec
mov
add
sbb
nop
into
das
das
xchg
scas
xchg
jo
pop
loopne
dec
outsl
or
or
fistl
cmpl
xchg
adc
xchg
repz
mov
cmpb
adc
adc
xchg
iret
popa
or
pop
push
xor
sbb
add
aas
mov
hlt
rsm
sahf
jo
xchg
repz
mov
pushf
xchg
xchg
sbb
dec
jbe
push
aam
jns
lods
imul
push
imul
lret
push
adc
fidivrl
fstp
xor
shrb
pop
aas
out
sarb
mov
stos
ficompl
int
inc
pop
outsl
jle
test
mov
adc
mov
adc
push
xchg
cmp
idivl
insb
in
mov
xchg
pop
out
pop
dec
int
cmp
push
or
adc
push
mov
pop
insb
sti
or
gs
scas
or
pop
push
sub
imull
sbb
shlb
jp
jmp
mov
jg
test
movsl
fdivl
gs
xor
shl
out
insl
inc
clc
fstpl
dec
sbb
push
scas
xchg
sbbb
iret
int
daa
push
adc
lea
dec
jnp
xor
rorb
add
xchg
pop
dec
aaa
dec
mov
cmp
jge
lods
push
es
dec
stc
ss
push
and
pusha
scas
lahf
outsb
dec
push
sub
sub
clc
mov
jne
ds
xchg
call
cmp
mov
in
cmc
pop
or
dec
cwtl
mov
push
pop
or
pusha
outsl
aaa
mov
int3
pop
and
add
xchg
sbb
xor
lods
pop
add
jg
inc
outsl
cld
xchg
sbb
imul
jmp
mov
or
lea
pop
pop
mov
adc
jle
mov
lods
mov
inc
lahf
int
lret
mov
fstpl
lods
cmpb
mov
jl
ja
cltd
inc
nop
dec
xchg
lret
sbb
sub
jg
ret
cmpsb
xchg
adc
ret
subl
adc
out
test
mov
cltd
pushf
ret
adc
mov
pop
pop
xor
fstp
iret
sahf
cmc
inc
sub
dec
mov
jne
lret
xchg
mov
inc
push
and
pop
and
jns
ret
adc
pop
cmp
rcrl
ret
ret
into
punpckldq
pop
outsb
mov
mov
lods
dec
icebp
add
ss
mov
jo
cmpsl
lea
in
push
cmp
mov
es
fwait
adc
int3
cmp
movsb
sbb
pop
xor
jbe
and
mov
mov
syscall
xchg
jne
es
push
ss
je
and
daa
aad
mov
add
orl
push
jmp
pop
adc
jne
leave
pop
sub
sub
sub
lods
je
movsl
push
lret
adc
jmp
popf
cmp
jge
dec
mov
pop
add
movsl
rorl
scas
lds
push
and
mov
mov
das
stc
mov
inc
sahf
fsubl
push
popa
mov
sbb
sbb
xchg
popa
dec
fstl
lods
lahf
es
and
mov
nop
mov
outsb
shll
mov
cs
ljmp
in
ret
sbb
ljmp
dec
js
cmp
pushf
push
adc
ret
push
dec
int
test
mov
ret
lcall
adc
ss
push
cwtl
insl
mov
and
lods
pop
ret
out
add
adc
pop
mov
mov
xchg
insb
and
fidivrl
push
leave
leave
mov
comiss
adc
xor
ja
push
pop
sahf
cmp
and
rcrb
faddp
lods
cmp
pop
dec
mov
lahf
add
add
outsl
and
mov
or
adc
insb
or
test
pop
pop
out
xchg
inc
fsubs
push
js
insb
cmp
cmpsl
test
lea
push
nop
jge
dec
inc
and
cs
ret
cmp
push
adc
outsl
stos
dec
fists
adc
push
scas
push
sbb
out
push
das
dec
add
jge
test
xchg
mov
xchg
cltd
shl
cmp
cli
lret
ds
jbe
cli
psubq
imul
daa
mov
adc
mov
and
sbb
xlat
push
sbb
stc
out
sbb
sbb
int3
xchg
rcll
and
outsb
popl
xchg
mov
cmp
inc
mov
ret
fisttps
enter
push
push
jmp
add
pop
dec
push
daa
fldt
sub
cmp
push
mov
pop
add
xchg
jno
mov
xor
es
das
divb
dec
jl
dec
sbb
rclb
cwtl
mov
inc
xor
mov
sbb
jg
popf
sub
movsb
pop
add
repz
fldz
cld
push
repz
int
je
mov
add
fisubrs
mov
int
mov
lods
es
jge
mov
gs
push
rep
aaa
cs
pop
adc
test
movsl
data16
popf
idivl
mov
pop
leave
je
fisubl
mov
pop
or
lods
sbb
mov
clc
jg
pop
mov
icebp
mov
or
xchg
xchg
jb
xor
je
inc
mov
pop
sub
mov
dec
jle
shl
int3
xchg
push
sub
insb
mov
add
xor
mov
data16
test
aas
pusha
and
mov
leave
sahf
and
imul
push
add
cli
or
or
jno
xor
movsl
and
pop
mov
out
pop
cmp
in
and
gs
push
ret
test
pop
aaa
pop
inc
mov
or
mov
je
and
test
sarb
adc
cmp
lods
out
enter
jp
inc
fcoms
fcompl
daa
or
xchg
push
add
cmp
je
enter
ljmp
and
mov
mov
push
decb
jb
dec
cmpsl
dec
arpl
jp
sub
mov
pop
mov
out
add
repnz
inc
out
orl
jl
mov
or
insl
ds
xchg
jge
add
push
lods
fstps
js
mov
ds
xchg
popf
cs
mov
cmp
and
pop
jae
pop
xor
scas
and
mov
mov
hlt
xor
outsb
out
outsl
in
aas
fmul
dec
cld
sbb
lock
mov
mov
mov
sbb
mov
pop
out
jecxz
iret
xchg
ret
sub
mov
xchg
jge
roll
dec
cmpb
pop
and
loope
in
les
cmp
mov
mov
dec
or
inc
loop
pop
xchg
xchg
mov
pop
movsl
mov
jg
loop
cmpsl
lret
nop
pushf
or
ja
fidivl
out
jb
xchg
cwtl
lret
add
add
fsubs
mov
ljmp
mov
mov
sbb
xchg
xchg
scas
call
ficoml
test
xchg
into
movsb
or
fisubs
inc
jmp
loop
and
or
aam
pop
adc
cmpsb
push
push
test
inc
cmp
les
icebp
mov
in
dec
ss
int
jg
and
or
jns
push
repnz
int3
xchg
les
icebp
aas
fisttpl
mov
popf
mov
mov
fldenv
lcall
jae
stos
lock
and
xor
fwait
inc
movsb
scas
or
adc
loop
sub
xchg
xor
icebp
jo
hlt
ja
cmpsb
jp
mov
adc
and
popl
mov
cmp
insl
jmp
push
jne
in
movsl
and
push
jmp
rcrl
jecxz
nop
into
std
imul
adc
xor
and
cmp
mov
xor
pop
jmp
dec
mov
dec
sti
inc
cmp
cmp
orl
imulb
sub
ds
xor
cmp
add
push
imul
popa
mov
jg
mov
dec
jge
mov
jae
inc
pop
jecxz
adc
xchg
dec
test
aam
ret
outsb
and
fnstsw
lsl
dec
les
fistpl
mov
mov
pop
inc
xchg
scas
lahf
stos
stos
test
lcall
pop
jp
cmpsl
cli
adc
and
mov
jmp
cmp
dec
push
adc
int
pop
je
fs
outsb
mov
dec
jmp
fcomip
mov
dec
push
js
inc
jae
aas
test
xchg
push
xchg
je
aaa
mov
sub
imul
out
movsl
out
pop
jg
add
or
pushf
mov
std
sbbl
sub
fidivrs
pop
add
mov
mov
sub
daa
popa
popa
inc
sbb
xchg
daa
xor
jnp
cmpsl
movsl
push
ljmp
das
sbb
arpl
jb
in
jmp
push
popf
aaa
jl
popf
push
rcl
aaa
or
pop
pusha
push
popa
push
movsl
out
ficoms
pop
pop
lahf
sub
pop
popa
jne
pop
xorps
into
mov
enter
push
xor
pop
jb
mov
cmc
loopne
cs
xchg
pushf
fwait
cmc
dec
mov
xchg
in
xor
or
imul
popa
pop
push
imulb
out
nop
sub
data16
mov
test
push
push
and
or
jnp
sbb
add
pop
push
call
mul
pop
jmp
es
fidivl
int3
cmp
gs
dec
outsb
dec
ds
and
mov
pop
jne
pop
out
out
pop
jbe
insb
ss
sbb
xor
push
leave
pop
sub
clc
in
mov
test
in
outsb
stos
jae
jl
mov
dec
push
cmp
loop
sub
pop
add
adc
jmp
lea
test
out
int3
xor
sub
xchg
push
cld
enter
and
es
or
and
xor
cmp
cmp
mov
inc
in
test
or
pop
sbb
or
mov
iret
jno
jmp
sub
jae
shll
add
and
scas
in
shrl
add
adc
and
add
or
jmp
and
pushf
pop
roll
push
leave
add
jnp
test
or
imul
sbb
jecxz
sarl
sub
test
test
nop
test
imul
push
mov
test
pop
test
andb
mov
jb
mov
sbb
push
cli
test
xor
jmp
and
lcall
ficoml
or
push
mov
mov
lret
arpl
inc
adc
mov
or
adc
scas
jg
loope
cli
movsl
jae
movsb
add
xor
cld
xchg
movsl
lret
cmp
or
mov
push
stos
dec
loope
ret
sub
push
inc
cmp
mov
add
icebp
mov
add
shr
ret
jmp
cmc
jg
xchg
inc
inc
adc
xor
stos
and
push
nop
outsl
shlb
jbe
aad
sub
or
mov
or
popa
push
cmpsl
fiaddl
sub
call
cmp
sub
test
shlb
movsb
cmc
ljmp
and
and
roll
adc
add
jmp
xchg
add
js
gs
je,pn
fs
lds
xchg
jb
xchg
push
leave
xor
dec
outsl
cld
add
or
leave
bound
les
imul
xor
pop
icebp
xor
cld
fsubrp
sub
xbegin
daa
or
and
cs
push
lods
xor
fbstp
push
adc
mov
imull
mov
fsub
jb
inc
pop
xchg
sbb
sti
movsl
daa
lcall
push
int
test
push
fs
cs
roll
push
aam
out
and
vmulsd
mov
fistpl
jnp
rorl
mov
or
mov
loopne
sbb
out
pop
xchg
arpl
sti
xor
inc
addr16
push
push
sahf
mov
dec
dec
shrb
arpl
js
out
cmc
dec
add
sbb
fs
imul
mov
pushf
addr16
xchg
sub
clc
inc
inc
push
aas
and
iret
jmp
pop
arpl
dec
xchg
jg
push
out
ds
mov
test
mov
jae
cmp
inc
push
sti
into
add
ds
lcall
mov
rcr
push
int3
adc
shl
xchg
xchg
mov
push
aad
bound
cmp
xlat
add
into
inc
xchg
pop
cmp
mov
out
fs
cld
push
xor
pop
das
jns
inc
aam
fdiv
mov
and
rcll
pop
or
cmc
push
lret
stos
cmpsl
adc
sub
push
sbb
mov
mov
jecxz
pop
in
cld
insl
outsl
cltd
sub
inc
jecxz
movsl
mov
inc
rcl
pop
lds
or
subb
sub
fwait
add
push
loopne
lret
cli
mov
rcll
or
inc
mov
lret
dec
add
scas
inc
sti
xor
mov
or
dec
sbb
call
pop
lods
mov
xor
call
insb
cmpsb
push
addr16
out
add
bound
sbb
lret
cmpsl
sbb
sub
cli
dec
sahf
xchg
jnp
mov
adc
mov
popa
push
addb
lret
or
pop
mov
mov
stos
aam
jb
xor
jecxz
mov
pop
mov
mov
inc
stos
movsb
fcoml
push
jae
imul
sahf
push
dec
lods
movl
scas
mov
inc
adc
jne
cltd
addr16
rorb
stos
les
hlt
int
sub
adc
mov
cld
das
inc
cmpl
jle
out
je
ds
sub
dec
mov
sbb
loopne
mov
mov
and
mov
js,pn
cmp
jmp
fwait
subb
xor
xchg
inc
push
jo
stos
ss
sub
xchg
push
push
popa
test
sti
sub
cmpb
loop
inc
imul
or
aas
inc
scas
mov
jmp
mov
rol
pop
nop
mov
or
inc
adc
in
out
push
mov
in
subl
jo
notl
xor
add
pop
sbb
call
and
jb
insb
pop
adc
icebp
roll
sti
test
xchg
jp
jnp
test
cmpsl
add
mov
mov
outsb
lret
insb
pop
xorb
mov
in
ret
mov
push
lcall
and
cs
rcll
repnz
adc
jb
test
mov
mov
sbb
popa
add
mov
cmp
imul
out
cs
add
std
stc
or
mov
dec
jb
inc
scas
sbb
mov
ds
test
daa
and
cld
negb
fcmovnu
out
xor
mov
sbb
insb
mov
nop
outsl
push
scas
sbb
sub
std
xchg
xchg
and
repz
int3
pushl
cmp
add
or
lcall
movswl
pop
scas
les
sbb
enter
mov
xor
pop
mov
sub
jns
imul
jne
pop
inc
pop
mov
shl
xchg
pop
idiv
cs
inc
mov
inc
or
sti
add
divl
lret
outsl
add
mov
bound
stos
pop
ljmp
fwait
icebp
and
mov
cmp
push
and
sarb
add
pusha
jno
cmp
cmp
xor
lcall
or
mov
movsb
jp
shl
js
out
shlb
cs
popf
adc
aad
xor
int
or
push
jbe
push
ja
pop
rcl
sbb
inc
sar
frstor
push
movsb
in
pop
pop
xchg
xchg
rcll
cli
sbb
cmp
mov
out
es
int
pop
push
dec
lcall
jno
mov
inc
cli
gs
or
dec
dec
push
mov
packsswb
push
movsb
jae
sub
or
ss
fwait
pop
sbb
in
or
mov
pop
jmp
inc
in
sub
stos
call
movsl
dec
add
imul
testl
xlat
jbe
ret
outsb
movsl
aaa
sbb
and
sbb
cmpsl
call
fnstenv
jp
push
jmp
shrl
adc
cmp
pop
stc
pop
js
data16
mov
mov
or
movsb
out
pop
add
test
subb
mov
inc
sub
insl
imul
stos
mov
mov
daa
lea
imul
dec
and
push
insl
fldt
jge
ret
jnp
fidivrl
pop
out
push
ja
sub
xor
dec
pusha
jg
test
stos
popf
add
push
lret
cwtl
mov
push
fidivl
fisttps
mov
cmovnp
jmp
movsl
insl
out
cmc
dec
adc
iret
inc
pop
mov
fcompl
int
idivl
pop
ror
ret
lods
div
mov
sub
mov
pop
sub
xchg
xor
in
jl
fbstp
cmpsb
sarl
and
mov
ret
adc
jnp
cli
inc
xchg
loope
push
mov
jge
inc
push
clc
mov
out
adc
outsl
jae
mov
enter
inc
dec
inc
xorb
xchg
sub
dec
sbb
push
mov
ret
jge
arpl
hlt
xor
fdivrl
icebp
dec
adc
dec
push
pop
cmc
dec
orl
jne
adc
adc
sarl
cmc
or
cmp
push
xor
outsb
mov
add
inc
lcall
pop
bound
and
mov
xchg
cmp
jge
fsts
in
push
and
xlat
mov
scas
mov
xchg
jne
shll
add
push
aam
sbb
daa
inc
sbb
pusha
insl
and
jae
stos
or
or
rolb
shlb
xor
dec
pop
clc
xor
leave
cmpsl
in
pop
outsl
and
outsl
or
mov
xor
fsts
lret
add
cmpsb
cmp
in
push
sub
test
add
or
pop
test
sub
mov
jge
push
mov
mov
mov
ljmp
push
mov
or
in
aaa
push
xor
sbb
sub
cmpsb
push
loope
movsb
sbb
jo
loop
lods
mov
insl
pop
fwait
arpl
mov
pop
mov
or
mov
mov
pop
hlt
cmp
fisubrl
push
in
mov
pusha
daa
fldcw
xchg
ljmp
pop
sub
mov
jge
cmp
or
aaa
pusha
mov
cmpb
push
roll
jb
mov
lods
fisttpl
add
incl
pop
push
and
pop
lods
sbb
daa
or
stc
movsl
jg
mov
xor
pop
insl
loope
jecxz
mov
lds
jb
mov
dec
notb
shlb
and
enter
and
dec
push
and
ss
cwtl
in
jle
aas
inc
xchg
jle
shll
das
ret
aam
sub
adc
pop
adc
jno
sub
pop
movsb
popf
pop
mov
outsb
pop
mov
pop
iret
pop
je
movsb
rorl
pop
cmp
rcr
add
mov
shll
sbb
push
lret
xchg
addr16
xor
mov
ljmp
xchg
sarw
out
jg
xchg
ficompl
cmp
ds
adc
aad
shrb
out
in
mov
popa
adc
xchg
shlb
icebp
cld
adc
sub
imul
pusha
frstor
lcall
cmp
adc
push
inc
enterw
or
iret
bound
and
adc
mov
data16
movsl
out
mov
or
inc
dec
cs
shll
jmp
lock
cmc
cwtl
mov
adc
push
push
lahf
dec
loope
cli
cmpsb
sub
mov
jne
cmpsl
jecxz
xchg
xchg
xchg
dec
cld
cltd
and
fwait
add
rcr
decb
sub
xchg
inc
mov
xchg
push
dec
outsl
push
loopne
mov
mov
fisttps
sub
pop
dec
inc
movsb
or
rep
mov
testb
cmp
iret
lods
sub
rcrb
pop
pop
nop
sbb
lcall
add
idivl
imul
fs
push
and
sub
or
enter
dec
cmpsb
and
or
ja
vmwrite
ret
jo
test
cwtl
adc
lahf
mov
mov
arpl
jne
ret
jp
jmp
decl
adc
lods
mov
mov
inc
jmp
arpl
shrb
fs
push
or
jp
mov
add
sbb
andl
pop
mov
outsb
mov
jp
mov
jmp
repnz
sbb
xchg
dec
cli
outsl
ret
loop
or
andl
inc
pop
mov
lret
and
jle
test
pop
sahf
xchg
imul
in
cmp
fdivrl
mov
or
xor
jae
outsb
outsb
lea
int
in
jo
add
push
xchg
int
nop
lret
pushf
rorb
mov
scas
cmp
scas
adc
pop
xchg
fadds
in
push
cmc
loop
sbb
inc
aas
sbbb
adc
mov
push
mov
xchg
xchg
push
ret
dec
sbbb
hlt
or
ss
stos
inc
rep
xchg
dec
aas
adcb
sub
pop
loop
pushf
pop
xchg
icebp
jb
jo
jmp
mov
pop
jo
out
xchg
cs
pop
and
mov
push
cmp
inc
arpl
popf
scas
gs
iret
pop
mov
mov
push
pop
in
push
push
jg
aad
xchg
scas
xchg
mov
aam
mov
cmp
jg
sub
mov
cmpsl
add
xchg
test
xchg
xor
mov
pop
rcr
test
out
in
shl
xchg
or
jb
add
cmp
xchg
fadds
cli
scas
in
jbe
cmpsb
adc
jnp
xchg
mov
test
sbb
add
ljmp
imul
repnz
cmp
xchg
cld
out
xchg
fidivl
repnz
fdivs
or
push
pop
cltd
mov
push
fistps
clc
nop
addr16
mov
mov
mov
jg
push
or
in
dec
mov
fdivs
fs
enter
cmp
pop
sub
cmc
ret
rcrl
push
cmp
inc
icebp
push
jge
lcall
movsl
cmpl
and
ss
xchg
stc
push
mov
lds
imul
xchg
sub
ja
push
scas
call
mov
inc
cltd
jle
jle
fwait
js
push
lret
pop
adc
jb
jb
outsb
inc
mov
xchg
jg
stos
lahf
pop
mov
daa
inc
xchg
loope
xchg
testb
push
jne
test
ja
in
mov
and
inc
lahf
insb
shrb
imul
xlat
cmp
adc
subl
jmp
imul
bound
pop
xor
pop
enter
cmp
xchg
xchg
push
cmp
or
pusha
das
fwait
roll
popa
loop
add
inc
stc
cltd
mov
inc
xlat
mov
lret
lock
sub
pop
out
mov
cmp
lahf
test
popa
lods
mov
inc
lods
sbb
ret
sbbl
jae
push
push
inc
pop
lods
xchg
mov
aas
xor
lret
cmp
call
or
fistpll
imul
dec
test
push
enter
or
push
pop
mov
xor
inc
addr16
xchg
fisttpl
es
lods
dec
push
jle
ss
gs
repz
jnp
jno
mov
jle
push
adc
xor
mov
jp
add
ljmp
out
xor
dec
jmp
push
mov
notb
push
inc
fidivs
js
cs
push
in
xchg
xor
jbe
cmp
cmpsb
lea
fldl
pop
push
xchg
cmp
ret
test
lcall
and
xor
lcall
es
and
stc
jl
dec
dec
cld
and
lret
cmpl
aad
call
nop
movsl
xlat
in
adc
mov
push
sbb
or
vmwrite
xchg
push
ja
out
inc
insl
dec
jg
out
sbb
mov
push
add
sti
fdivrs
and
cmp
test
inc
outsl
mov
andl
xor
mov
xor
icebp
push
mov
pushf
popf
jne
cmp
sti
idivb
sahf
dec
pop
mov
push
and
nop
dec
mov
mov
shl
xchg
repz
ja
pop
mov
test
cmc
cmp
popa
cltd
enter
jbe
clc
mov
not
and
loope
dec
in
add
pop
das
pop
adc
or
pop
adc
xchg
mov
mov
adc
inc
xor
jb
sub
scas
int3
mov
lods
mov
cwtl
adc
imul
mov
mov
push
and
mov
icebp
inc
testl
dec
call
ljmp
pushf
add
pop
jo
in
or
mov
mov
or
mov
test
int3
sbb
popl
sbb
push
mov
mov
fsubl
sbb
lcall
mov
xor
in
or
aas
fisubl
stc
xchg
pop
or
ud1
movsl
imul
iret
stos
mul
cmp
ret
push
mov
fimuls
mov
mov
or
in
sahf
xchg
sti
or
mov
ret
xchg
fstps
sub
movsb
mov
or
pushf
xchg
frstor
jg
or
or
add
jle
jle
jl
push
inc
test
jmp
in
repz
nop
mov
sti
mov
shrb
out
sbb
mov
inc
cmp
cli
mov
outsl
xchg
cmp
mov
enter
and
mov
outsb
jle
jecxz
mov
stos
inc
cmc
mov
mov
push
lds
pop
pop
sbb
ret
inc
push
adc
mov
popa
xchg
mov
test
mov
std
sub
sbb
call
insb
sbb
add
push
imul
jle
es
fisttps
push
push
sti
lock
push
adc
mov
mov
pop
imull
fimuls
popf
mov
stc
negl
pop
pop
test
add
jnp
xor
filds
out
in
mov
push
xchg
inc
dec
and
push
test
leave
mov
cmp
cli
jmp
dec
or
adc
lret
imul
aas
sbb
cli
inc
lea
pop
sbb
aad
cmp
xor
inc
mov
jle
add
push
scas
mov
mov
cli
mov
pop
or
sub
andl
std
mov
jne
pusha
pusha
lret
mov
push
cmpsb
xor
jb
mov
test
fmuls
shrb
xorb
or
inc
test
pop
inc
mov
pop
lock
ja
imul
repnz
fstps
inc
mov
sbb
cld
aam
and
push
mov
or
mov
cmp
jecxz
les
cli
jp
fwait
xchg
mov
popf
cs
test
adc
jne
str
cmp
inc
in
insb
sub
sbb
mov
pop
xor
mov
push
mov
push
mov
popa
hlt
dec
in
lret
cmp
xchg
xor
xchg
jo
mov
xor
fs
movsl
xchg
es
jmp
jecxz
xor
jmp
cmpb
mov
jl
sub
add
dec
popa
out
adc
js
gs
pop
cvtps2pd
lods
xor
pop
rcrl
pop
pop
aas
pusha
dec
mov
in
lret
in
aad
outsl
loop
xchg
mov
cmpsl
xchg
cs
or
pop
xchg
das
inc
insl
and
cmc
lcall
idiv
std
mov
in
xor
in
dec
stos
pop
push
lret
test
cli
xorb
lea
sub
xchg
pusha
aad
inc
loopne
xchg
aad
jecxz
mov
aaa
dec
mov
pop
idivb
popf
aaa
call
mov
iret
dec
sarl
push
daa
cli
xor
xor
inc
ret
fdivrs
shlb
sub
sbb
sub
cmp
xchg
jb
pushf
mov
iret
into
call
in
lods
sub
insb
adc
push
mov
inc
cmpsl
or
call
cmp
push
cli
mov
sbb
dec
rorb
push
pop
fstpt
cmovl
push
shl
push
mov
movsb
ja
pop
imul
fcoms
into
ljmp
and
fisubl
loope
iret
sbb
jo
pop
dec
jae
pop
mov
mov
pop
test
jp
sbb
mov
lock
call
dec
and
and
imul
js
push
jmp
repnz
fmuls
and
sub
cwtl
push
or
inc
inc
mov
or
out
sbb
push
cmp
aas
pop
vcmppd
xchg
push
lds
hlt
shlb
mov
mov
int3
test
dec
push
mov
add
mov
rclb
fsub
lea
mov
jae
aam
repnz
and
test
xchg
xor
cltd
jge
fsts
rcrb
in
xchg
cs
loop
out
inc
xor
addr16
cs
ja
sbb
cmp
cltd
dec
repnz
jg
xchg
pop
daa
pop
or
pop
mov
mov
loop
das
push
cmp
xor
loope
cmp
in
dec
out
and
leave
add
bound
fwait
or
and
pop
lods
jl
mov
bound
pop
in
fsubs
xor
bound
addr16
adc
xchg
sub
push
pop
adc
xchg
scas
jecxz
std
inc
cmc
lock
sbb
or
cmpsb
icebp
push
or
push
fisubrs
cmc
faddl
and
movsl
sahf
fisttpll
rorl
dec
cld
jg
mov
push
in
push
adc
in
ja
mov
sub
gs
stc
xlat
sbb
out
sbbl
lcall
xchg
pop
adc
mov
ljmp
insb
movb
sbb
enter
js
adc
adc
push
out
add
or
out
fistpl
inc
je
cmpsb
rcll
clc
pusha
int3
bound
mov
add
stos
inc
push
mov
pop
jle
cmpsb
mulb
and
out
jbe
xchg
mov
out
push
push
mov
lret
and
sub
call
scas
fbstp
sbb
or
aad
mov
push
mov
mov
or
dec
insl
test
add
fistl
scas
inc
dec
mov
leave
push
gs
sahf
loop
push
push
add
movsl
dec
stos
out
dec
mov
cmpsb
push
mov
inc
lods
imulb
insl
popf
das
daa
in
std
pop
sub
enter
and
adc
in
cmpsl
test
scas
add
xchg
lods
lods
stos
and
and
xchg
xor
push
subl
insb
mov
pop
xchg
cmpsb
cmp
inc
andl
ret
fnstcw
repz
push
fists
xchg
int
lds
data16
mov
or
shl
lahf
jle
xchg
int3
pop
xchg
lea
jo,pn
jno
and
mov
imul
lock
imulb
push
out
inc
sub
mov
movsl
test
fwait
icebp
mov
addr16
out
jmp
or
mov
scas
sub
cwtl
pop
sbb
fwait
aaa
xchg
add
cmp
jg
call
and
je
insl
loop
iret
lret
fcmovu
jge
sub
in
jle
aad
pop
lds
lahf
mov
mov
mov
push
jl
jg
adc
add
add
jno
inc
cltd
jns
clc
mov
adc
jno
add
or
popa
jb
fsubl
popf
xchg
inc
icebp
mov
xchg
ficoml
imull
popf
pop
mov
xor
int3
cmp
insl
cmp
add
hlt
out
adc
mov
test
add
leave
pop
outsb
lea
mov
pop
lods
nop
or
jne
xchg
adc
sbb
test
adc
pop
aas
xchg
fst
in
punpcklbw
mov
int
xchg
mov
cmp
fstpl
inc
roll
mov
popa
add
imul
or
xor
popf
popa
dec
repz
rcrb
fs
stos
sbb
icebp
or
cmp
push
popa
adc
adc
xor
scas
nop
shl
add
pusha
fiaddl
sbb
jb
andb
rorb
sbbb
enter
mov
movsl
repz
xor
pop
push
xchg
mov
jp
mov
lcall
mov
ret
jmp
je
fsubrs
cmp
inc
notl
mov
cltd
std
mov
adc
pop
out
jbe
or
inc
and
loop
test
inc
xchg
jl
lods
dec
test
into
mov
push
fisubrs
aad
cwtl
in
xor
in
jbe
or
lods
lret
stc
adcl
sub
jbe
das
outsl
sub
mov
nop
andl
rol
lcall
rcrl
enter
and
daa
lock
in
data16
repnz
dec
lods
fisttpl
add
inc
mov
pop
jg
pop
pop
push
ljmp
fisttps
lods
leave
roll
mov
cmp
lods
cmc
shlb
adc
shll
mov
xchg
lret
js
lahf
nop
jecxz
addr16
dec
movsl
fisubs
sub
dec
jae,pt
pop
mov
xchg
jle
mov
les
mov
outsl
pop
sub
into
sahf
add
les
xor
stos
sbb
jp
push
adc
add
pushf
std
sub
mov
adc
les
cmp
in
imul
cmp
pop
enter
and
cwtl
push
fmul
pop
lahf
in
xor
scas
push
mov
mov
or
xor
gs
addr16
ja
fadds
and
push
sbb
lods
xchg
mov
add
fwait
xchg
add
xchg
lret
mov
ret
imul
push
mov
mov
mov
and
lahf
push
dec
div
xchg
loopne
cs
sub
pop
cmp
ror
push
xchg
sbbl
push
rcll
jp
dec
mov
dec
and
or
enter
fidivrl
lcall
loopne
xor
fs
jno
das
and
jno
es
stos
sti
push
je
clc
pop
or
and
ja
in
push
pop
jge
adc
cmp
in
test
sub
loop
sahf
push
xchg
je
rcrb
aam
mov
mov
mov
leave
add
rol
pop
cmp
mov
fildl
fadds
add
inc
lods
daa
iret
jae
xor
jnp
jbe
scas
fnstsw
repz
cli
dec
loopne
pop
jnp
jnp
fs
mov
sbb
jle
insb
xor
mov
add
mov
pop
sbb
andl
nop
jecxz
movsb
mov
outsb
push
xor
outsl
jnp
mov
bound
adc
fcomip
outsl
mov
std
outsl
pop
bound
sbb
ss
das
push
pop
pop
and
inc
ja
fldcw
sub
add
call
mov
mov
jl
pop
jmp
repz
imul
ds
jnp
lods
clc
addr16
loopne
pop
add
dec
xor
repnz
cmp
adc
in
leave
xchg
dec
pop
jge
je
clc
enter
cmp
mov
sbb
incb
and
ret
leave
call
out
test
mov
in
pop
xchg
or
addb
stos
rorl
js
push
out
ss
xor
bound
leave
jge
jmp
mov
mov
andl
mov
dec
xlat
mov
popa
sbb
dec
or
mov
mov
sbb
dec
lock
ret
rorl
and
add
push
add
mov
mov
arpl
push
sub
pop
scas
iret
fcoml
cmp
cmp
mov
das
adc
xchg
jb
mov
in
movsb
and
cmp
mov
fcomps
push
fnstcw
sbb
rorb
push
outsb
sbb
mov
push
das
sbb
sub
jmp
cltd
outsb
je
fwait
clc
adc
and
addr16
std
add
addb
test
xchg
scas
jnp
dec
ds
add
mull
lods
cwtl
lea
mov
iret
andb
das
pop
xor
fsts
jp
or
cmp
push
pop
outsb
push
lcall
and
mov
sbb
mov
pop
mov
push
arpl
je
xchg
dec
pop
cmc
mov
cli
lods
movsl
lea
lret
cmp
sub
sbb
mov
mov
and
ja
sub
xchg
mov
xchg
imul
lods
in
lock
push
les
loop
sub
mov
cmp
push
sub
jl
lret
stos
jmp
pop
aad
ret
rcrl
mov
pushf
mov
mov
lds
pop
dec
enter
lods
sub
nop
jo
das
pop
pushf
pop
arpl
test
add
bound
cmpsl
std
scas
dec
nop
popa
mov
cmp
mov
sbb
call
inc
int
outsl
ss
fstl
loopne
scas
inc
mov
rcrl
ror
and
int3
test
pop
ror
push
pushf
jg
adc
mov
dec
jecxz
mov
in
scas
push
stc
and
iret
jo
cmp
mov
jmp
movsb
mov
sbb
pop
cmpsl
dec
jo
push
cld
push
repz
ret
lahf
sahf
mov
dec
nop
jnp
je
inc
in
rclb
repz
fwait
jmp
iret
add
xchg
jbe
ficomps
mov
icebp
aam
xor
in
inc
mov
fistl
or
add
into
adc
or
lods
mov
lar
or
rorb
mov
cmp
stos
sbb
pop
popf
mov
aaa
jecxz
inc
movsl
mov
push
xchg
lret
orb
imul
pop
or
gs
mov
xchg
sbb
test
cmpsl
jo
pop
adc
xor
lods
pushf
inc
pop
dec
ja
push
push
sub
nop
out
push
jge
gs
sahf
imul
jecxz
and
push
and
bound
into
in
pop
mov
loopne
inc
pop
and
push
das
mov
int
dec
out
ljmp
xrstors
pop
sbb
sbb
xchg
jo
mov
mov
xchg
pop
lea
addr16
mov
testb
push
and
and
bnd
stos
div
pop
popf
push
and
sub
mov
dec
pop
out
shlb
cli
xor
jp
push
in
pop
movsb
mov
test
and
sbb
push
add
loope
ret
xchg
enter
les
xor
xor
fsubrl
mov
clc
fs
inc
jmp
les
push
sbb
aas
mov
ja
adc
add
cmp
les
pop
std
daa
adc
cmpsl
psubq
outsl
pusha
cmp
movsl
cmp
lahf
mov
add
cmp
icebp
outsl
mov
xor
xor
push
aad
std
das
aas
enter
push
repz
sbb
jbe
test
ds
mov
or
test
adc
jecxz
pop
add
xor
sbb
scas
cmpsl
mov
xor
and
pushf
mov
and
inc
mov
and
push
outsl
lods
mov
fnstenv
add
mov
rcl
rcrl
mov
inc
and
mov
shlb
dec
fldcw
sahf
leave
lods
mov
cmp
repz
pop
cmp
mov
xchg
mov
mov
ja
xlat
outsl
fiaddl
std
xchg
sarl
cmpsl
fstpl
dec
stc
call
xor
das
and
ja
mov
out
enter
out
outsl
dec
mov
push
hlt
pusha
lods
mov
xchg
test
sbb
test
test
push
sub
jns
pop
mov
jecxz
fidivrs
enter
ss
dec
popw
or
cmp
fists
hlt
js
pop
adc
adc
mov
sti
and
jle
mov
rcl
test
sbb
adcl
into
mov
dec
out
icebp
aas
jl
popl
or
mov
mov
rorb
mov
ljmp
xorb
cwtl
sbb
mov
pusha
jmp
cmpsl
or
dec
fs
mov
adc
adc
stos
aas
movl
sub
cwtl
adc
pop
cmc
mov
hlt
incb
push
push
adc
rorl
mov
adcb
mov
ja
sarb
js
pop
dec
or
sarl
mov
lods
fs
inc
mov
hlt
pop
cmc
lret
sub
pushf
pop
mov
adc
add
xchg
jnp
push
andl
xor
fs
popf
xchg
data16
lds
popa
inc
pop
dec
pop
mov
icebp
mov
and
push
fsub
test
xchg
push
and
sub
jge
fsub
push
inc
fiaddl
shll
cmp
ds
mov
insb
sbb
pop
mov
sub
orl
fnsave
rclb
mov
aas
aaa
repz
int3
xlat
xchg
or
in
lds
xlat
cld
iret
jmp
dec
pop
stos
mov
es
mov
aam
fstps
into
jmp
pop
pop
jecxz
fbstp
or
add
or
popa
inc
ljmp
fwait
or
vmwrite
hlt
faddp
call
jns
jp
iret
cmpsl
push
pop
out
arpl
inc
xchg
andl
data16
in
xchg
dec
lock
jl
cltd
int3
push
push
pop
mov
fwait
add
cld
pusha
mov
dec
out
xor
xor
jo
lret
loopne
rclb
mov
sub
dec
sbb
jnp
mov
loopne
xor
sub
loop
push
or
loopne
mov
jnp
mov
pop
and
adc
mov
les
call
outsb
adc
xchg
jmp
cmp
mov
clc
stos
mov
push
pop
dec
mov
pop
out
stc
in
adc
bnd
adc
dec
xchg
enter
out
in
data16
dec
push
aad
adc
cmpl
xchg
pop
jo
shrl
or
mov
cli
inc
mov
std
shlb
sbb
add
lods
mov
adc
dec
addr16
mov
lret
add
or
jmp
popf
jp
fidivs
sti
hlt
or
dec
xchg
add
mov
fildll
pop
sarb
fstpl
loop
cmp
inc
mov
jns
dec
stos
dec
lods
dec
jge
mov
in
cld
dec
xor
ljmp
incb
into
jne
rcr
fcompl
pop
call
push
mov
das
cmpsl
jmp
ds
clc
loope
test
scas
fnstsw
clc
in
cmpsl
xor
loop
jl
xor
jp
jp
out
push
pop
icebp
imull
push
mov
adc
sbb
adc
pop
lcall
jmp
xchg
mov
lea
add
mov
xor
pop
leave
mov
imul
sub
push
icebp
dec
mov
jmp
call
iret
in
push
mov
sub
or
adc
jmp
int3
test
inc
fisttpll
cmp
push
mov
mov
add
cmp
imul
lock
flds
mov
cwtl
into
sahf
es
jb
jae
fidivrl
mov
adc
sbb
xchg
jmp
xor
push
pop
imul
in
adc
ficompl
xor
xor
xchg
outsb
jbe
lods
fadds
mov
aaa
pop
data16
xchg
cmpsb
pop
dec
dec
aam
mov
add
pop
xchg
adc
and
out
je
int3
adc
add
mov
sbb
in
or
les
push
shlb
cltd
out
data16
jae
push
loop
imul
inc
fists
or
jmp
cltd
jno
movsl
aad
cs
xchg
arpl
aas
movsl
jmp
and
pop
fldl
or
cmc
sub
aad
pusha
pusha
pop
out
mov
subb
in
fdivrl
pusha
sub
dec
push
lret
mov
push
pop
scas
inc
pop
push
jp
push
mov
imul
rcrb
cmpsl
std
add
lock
std
and
sbb
pop
in
xchg
inc
sbb
icebp
repz
loop
cmpsb
test
sub
push
fcoms
ja
dec
stos
out
adc
je
test
jns
outsb
pop
mov
mov
cmp
sbb
push
inc
cmp
mov
lret
dec
nop
mov
lea
mov
ret
lahf
das
or
or
jle
add
xchg
adc
sbbl
icebp
lds
fstpl
mov
mov
mov
dec
sbb
das
sub
lds
cld
mov
push
jno
mov
mov
cmp
popa
int
icebp
sbb
xchg
jb
jnp
xchg
mov
push
icebp
lret
xor
cmp
push
jp
ljmp
mov
sub
in
adcl
mov
jne
cmp
xchg
dec
cmc
sbb
xchg
andl
mov
aam
add
xor
aas
icebp
call
push
xchg
dec
repnz
push
dec
push
push
ss
cwtl
adc
pushf
mov
push
scas
inc
daa
cld
jge
cmp
pop
cs
pop
mov
sub
mov
out
mov
and
mov
cwtl
cli
testb
dec
mov
fdivrl
addr16
ja
dec
sub
std
lods
and
xchg
test
dec
inc
pop
adc
xchg
sbb
sahf
cltd
push
jae
pop
out
add
imul
push
mov
stos
jle
mulb
push
mov
sbb
sbb
les
stos
test
and
into
icebp
xor
movl
movsb
popf
jne
movhlps
pop
or
jg
xchg
jge
shl
daa
mov
dec
mov
daa
mov
das
lret
mov
dec
push
enter
lret
pushf
ljmp
pop
imul
add
test
xor
std
rol
aad
mov
jp
jne
lds
xor
push
cmp
add
gs
sub
inc
mov
or
sti
mov
ret
inc
mov
fildll
arpl
push
lea
or
jae
sub
loope
jp
psubw
jo
add
js
cmpsl
sub
shll
xchg
add
lds
faddl
sub
adc
cld
adc
cmpsb
xor
inc
mov
xor
lret
jecxz
jns
mov
cwtl
hlt
jmp
xchg
cmp
push
jge
orl
cmp
cmp
aas
testl
jo
imul
xchg
stos
inc
and
fbstp
inc
stos
lods
sbbb
lret
sub
imul
hlt
mov
sub
cmp
jns
pop
cmp
push
add
mov
xchg
testb
and
pushf
mov
sub
fiadds
xchg
pop
jb
mov
les
adc
shrl
jbe
emms
jge
inc
mov
ficompl
js
cmpsl
popf
and
daa
ret
les
imul
dec
imul
mov
lret
repnz
fs
cli
sbb
movsl
movsb
cmpsb
lcall
xchg
popa
pop
mov
aas
icebp
int
cltd
lahf
test
mov
cmp
jnp
cmp
shl
fs
lret
sbb
rclb
sbb
jnp
sub
repnz
cmp
leave
jge
push
stos
call
mov
stos
loope
movsl
movsl
xor
stc
mov
inc
pop
mov
cmp
xchg
jae
sub
lret
push
push
xchg
pusha
int3
es
cli
test
pop
repz
or
lods
lcall
bound
dec
aas
dec
xchg
cmpsl
mov
mov
push
je
push
inc
loopne
xchg
es
popa
or
roll
subl
dec
incb
data16
xchg
test
loope
arpl
pop
fcomps
in
mov
ret
std
icebp
cmp
inc
std
adc
xor
jbe
fdivrl
bound
pop
clc
add
mov
fdivrl
jecxz
jne
or
shlb
jo
add
loope
pop
lahf
mov
shll
leave
addr16
and
or
add
jmp
out
jne
mov
add
push
adc
decl
in
pop
lods
out
xor
mov
dec
ja
adc
dec
lahf
jnp
pop
test
sbb
sub
mov
add
mov
mov
sbb
or
mov
divb
push
nop
loope
jmp
xlat
dec
loope
sub
jge
cmp
cld
mov
repnz
ds
stos
int3
xchg
lock
sub
popf
sub
mov
inc
add
mov
int3
push
lret
les
jge
pop
out
mov
sbb
xchg
cmc
inc
clc
jae
loop
xchg
ret
or
lcall
jno
aaa
test
sbb
inc
push
mov
lods
jae
pop
adc
xor
imull
cmp
sub
repnz
outsb
arpl
shlb
xchg
sbb
xor
dec
mov
xchg
pop
add
js
mov
mov
push
es
fsubl
sbb
bound
lods
dec
fs
lcall
in
push
out
loopne
push
push
jle
sbb
push
orb
push
ret
sbb
int
inc
mov
sub
adc
push
out
xorl
cwtl
sbb
sbb
and
dec
ss
sub
push
popa
or
lock
cwtl
aam
cmp
jo
jnp
or
stc
xor
xor
notb
iret
or
fs
dec
xor
ret
push
sub
push
xchg
pop
adc
mov
push
dec
nop
insl
inc
mov
les
push
fcomi
std
mov
jo
in
popf
je
push
mov
or
or
pcmpgtb
fwait
mov
add
jmp
dec
lahf
pusha
stos
and
mov
dec
mov
aas
in
cmp
inc
jmp
test
pop
lods
lock
sbb
mov
enter
fadd
pop
push
or
pop
daa
mov
rorl
jmp
ret
addr16
jge
dec
cmc
lds
cs
mov
aad
adc
push
xor
stc
push
in
test
jg
into
dec
inc
fldt
jg
out
pop
mov
stos
pop
ds
cltd
pop
out
pop
pop
addb
loop
mov
mov
mov
vmovapd
enter
pop
pusha
pushf
push
pop
xor
mov
sahf
in
dec
and
mov
out
ja
test
xchg
lahf
adc
lea
ret
repnz
mov
sbb
ljmp
lock
mov
fldcw
pop
test
enter
pop
das
xlat
mov
out
or
add
pop
lahf
leave
jbe
scas
push
or
and
movlhps
loopne
rsm
sub
and
pop
loop
jge
pop
fsubrp
into
scas
add
lret
scas
aad
out
jnp
enter
xchg
jle
pop
movsb
jmp
dec
push
sbb
mov
jl
xor
mov
and
fwait
or
sub
mov
sbb
lea
mov
xor
aaa
test
sbb
sub
and
dec
int
add
mov
jl
shrl
dec
mov
fsubr
pop
clc
and
pusha
cmc
test
popa
cld
mov
jg
add
xchg
cmpsl
das
cmp
std
xor
lods
mov
cmpsb
shrb
in
xchg
push
xor
sub
and
xchg
sub
pop
xor
pushf
xor
loopne
or
inc
add
mov
subl
in
sarb
mov
shr
mov
jp
cld
mov
dec
hlt
and
and
and
push
icebp
mov
stc
sbb
test
int
fs
push
jns
aam
cld
out
out
fadds
std
fcmovbe
fadd
mov
mov
sbbl
stos
test
mov
mov
loope
xchg
stos
dec
into
stos
pop
sbb
dec
and
dec
xchg
and
adc
ds
sbb
jle
repnz
push
xchg
test
pop
fsubp
xchg
loopne
push
bound
pop
xchg
dec
add
imul
push
testl
adc
jge
push
xchg
xchg
call
lock
mov
int3
loope
popa
loope
xorb
jbe
jns
lea
lret
xchg
arpl
sahf
adc
mov
jle
aaa
jg
aam
nop
xchg
out
clc
ret
arpl
pop
jbe
insb
shl
xchg
pusha
xchg
stos
out
mov
xor
fucomp
add
xor
adc
or
adc
pop
adc
out
and
sti
cmp
fcomps
xchg
daa
lods
pop
jb
mov
add
movb
dec
loopne
dec
fimuls
sbbl
test
or
xor
imul
adcb
push
jb
out
hlt
sbbb
scas
lea
jnp
pop
call
loopne
mov
jge
loop
jno
jecxz
sub
mov
mov
mov
mov
shrl
or
jae
sbb
shr
or
hlt
xor
or
popa
xchg
fisubs
fistl
push
icebp
xlat
insl
mov
mov
or
adc
mov
add
jns
cmp
pushf
jle
outsb
mov
leave
xchg
inc
roll
jge
rcrl
pop
inc
push
ficompl
pop
subb
mov
fwait
cmc
adc
imul
and
adc
push
jo
iret
out
flds
pop
pop
rcr
fidivs
shlb
inc
or
iret
into
or
xchg
filds
xor
inc
cwtl
lds
sub
jb
xor
dec
mov
xor
xchg
fdivr
mov
aad
fildl
mov
jp
inc
push
or
test
fs
scas
and
mov
jp
cmc
loop
js
jns
cmp
cmc
push
fcoms
push
loopne
pop
sub
js
stc
dec
fnsave
rorl
lret
inc
xchg
jg
sub
sbb
jno
lods
jb
mov
jp
adc
lret
fs
mov
dec
push
xchg
mov
mov
ficompl
lret
mov
mov
popf
sub
pop
pop
loopne
cmp
mov
stos
xchg
adc
fcmovnb
cs
adc
push
stc
xchg
movsb
push
es
out
inc
push
cld
add
in
push
jmp
ljmp
outsl
cmp
popa
mov
int
xchg
mov
jg
dec
dec
inc
imulb
clc
out
sub
fisubrl
test
call
ffreep
sub
mov
repz
or
movsl
mov
jno
inc
pop
mov
testl
pushf
adc
push
cld
or
pop
mov
dec
inc
aas
and
mov
popa
sbb
aam
cmp
aam
andl
add
and
cmp
add
ret
xor
sub
and
xor
pop
insl
pop
sbb
movsb
add
inc
push
ss
out
shl
repnz
push
sbb
lcall
rolb
loopne
int3
rcr
out
xchg
sarb
sub
inc
jo
inc
push
test
sar
xchg
in
lret
xor
pop
cld
mov
xchg
and
or
add
mov
leave
mov
cmp
aas
pop
iret
lea
cmp
mov
inc
cli
sub
aas
stos
loopne
loop
jnp
or
scas
dec
les
mov
mov
sub
mov
cmpsl
out
xor
js
sti
rclb
fdivrs
jecxz
lock
xchg
xchg
lcall
int3
and
mov
jl
test
cli
adc
add
ljmp
pusha
xchg
or
fisttpl
sbb
jb
sbb
ret
aam
sub
sbb
leave
mov
xchg
call
sub
lret
ret
loop
scas
stos
push
js
imul
ljmp
test
jge
sub
mov
lock
stos
sub
jnp
lcall
dec
xchg
mov
and
mov
push
sub
sbb
bound
mov
jo
or
xchg
xchg
mov
pop
sub
dec
outsl
fisttpl
lret
add
pop
fimull
shrl
or
test
adc
cmp
sub
push
sbb
xchg
xchg
sub
pop
push
popa
int
jb
fwait
sub
inc
xor
push
popf
insb
mov
test
int
cmp
cld
xchg
sub
pop
call
mov
mov
clc
std
js
inc
lret
aam
mov
mov
paddusb
clc
mov
push
lcall
stos
int
xchg
mov
mov
stc
xor
frstor
mov
in
mov
lahf
jmp
das
sub
mov
dec
ret
sbb
xchg
cld
cmp
and
inc
xchg
enter
and
xchg
repnz
fs
out
xchg
xor
mov
push
testb
or
mov
cmpsb
add
cmp
testb
push
xchg
xor
mov
push
iret
inc
fisubs
push
fsubrl
out
sbb
lahf
divl
dec
dec
inc
xchg
cmpb
mov
ds
out
loopne
or
dec
cmp
push
pop
es
xchg
lret
cmpsl
lahf
cmp
cld
xor
fsubs
xchg
cs
or
pusha
add
dec
pop
subb
jge
xor
pop
fwait
sarb
push
jno
lock
subl
jecxz
int3
repnz
add
popa
jmp
pop
adc
movsl
rcll
jge
aam
pop
sahf
cmp
test
jo
or
cwtl
inc
fwait
add
jle
push
call
fistpl
mov
jecxz
pop
test
sub
std
mov
xchg
sbb
adc
lock
mov
out
or
cwtl
lahf
cld
aas
stos
or
iret
sar
jmp
cmovno
push
mov
xchg
adc
mov
dec
je
ljmp
jne
adc
add
push
in
add
pop
aam
cmpsl
xor
mov
or
cmpsl
loope
mov
repnz
cmp
out
cmp
xchg
cmp
adcb
lods
add
pop
fbld
add
pop
dec
mov
daa
mov
loope
lcall
and
jl
out
clc
mov
les
mov
fwait
rorl
lret
xor
enter
sub
sub
mov
xchg
pop
loop
adc
cltd
scas
push
fisubrs
mov
mov
or
and
push
cmp
jg
adc
cmp
les
stos
cld
int3
clc
lea
pop
loopne
test
in
mov
dec
mov
lea
xor
cwtl
push
jns
jae
aad
ljmp
pusha
test
adc
imul
dec
enter
clc
ret
push
inc
xor
xchg
arpl
test
fs
sbb
sti
loope
cs
sbb
test
outsb
cmpsb
bound
je
adc
cmp
push
inc
dec
js
into
xchg
addr16
xlat
xlat
jl
ret
fcmovnbe
orb
movsl
cmp
lea
sti
clc
sbb
push
ficomps
mov
sbb
pop
mov
dec
inc
cmp
adc
mov
dec
xor
icebp
cmp
arpl
rorb
mov
mov
bound
sbb
sbb
pop
sahf
mov
les
setl
fistps
sub
mov
fidivl
mov
add
push
int
ds
fnstcw
test
pusha
iret
mov
aad
popf
shlb
movsl
rorl
in
andl
sbb
sbbl
sub
aas
outsl
lret
pop
and
lcall
fistpll
dec
in
loope
adc
mov
lods
sarl
sub
lods
sbb
es
data16
in
and
inc
dec
mov
movsb
aaa
jne
outsb
inc
dec
sub
lock
push
mov
sub
push
xor
adc
gs
ficoml
nop
subb
jmp
xor
loopne
push
and
cmp
cmpsb
adc
inc
mov
sub
dec
call
cmp
mov
add
mov
ret
shrl
xchg
scas
and
mov
roll
fiadds
mov
xchg
inc
mov
push
in
mov
dec
je
xlat
dec
dec
cmp
sub
xor
adc
test
jo
cltd
subb
or
mov
cld
out
jl
cmp
sar
dec
and
pop
cli
sub
push
sbb
lahf
int3
mov
subb
pop
mov
mov
pextrw
jnp
mov
pop
or
sub
ds
in
shlb
setne
repnz
orb
cmp
adc
dec
aas
loopne
or
ret
fnstsw
subl
xchg
sub
fbld
mov
iret
int3
fcomps
sub
mov
cltd
repz
or
mov
mov
xor
shrb
shlb
cmp
adcl
data16
fwait
jns
jl
push
pop
mull
cmp
mov
aas
cli
pop
test
xor
hlt
clc
lods
lods
xor
mov
pop
or
movsb
mov
adc
aad
lds
mov
bound
rcll
cltd
mov
jp
aad
dec
test
lea
mov
mov
int3
add
and
jl,pt
mov
nop
sbb
in
mov
fcompl
roll
call
out
inc
dec
push
in
xchg
cmpsb
mov
mov
push
decl
jne
fmul
lods
jg
xor
sub
pop
jp
jp
insl
in
xor
loop
aad
lret
repz
leave
in
add
adc
in
andb
jae
push
fwait
inc
xor
add
mov
pop
xchg
imul
je
mov
lahf
jbe
insl
push
outsb
xor
mov
or
sub
loop
int
inc
int3
sub
adc
popa
mov
cld
lahf
mulb
jl
dec
and
pop
push
mov
pop
pop
jge
flds
repnz
sub
int
cmpsb
ss
ret
mov
cs
shl
lret
sarl
sbb
outsb
cmpsb
pop
push
pop
int3
pushf
sub
and
jno
test
scas
fst
jp
mov
mov
mov
rorl
cs
mov
in
adc
dec
push
outsb
pop
imulb
lods
mov
sub
add
repz
idivb
push
fadds
lahf
and
aaa
mov
or
xchg
xor
inc
jle
pushf
mov
jp
int
jnp
loopne
jle
das
xlat
xchg
imul
sarb
shrb
lret
shrl
inc
icebp
pop
sti
adc
pop
stc
xor
add
sti
add
mov
jecxz
cmp
adc
daa
inc
pop
test
cmp
cltd
cs
leave
pop
pop
sarl
daa
or
push
fs
push
adcb
imul
sub
or
ficoml
lahf
xchg
movsb
mov
fs
xchg
add
pop
push
sub
mov
in
aas
cmp
hlt
add
lods
sbb
enter
je
add
add
jne
andb
pop
inc
outsb
lods
push
mov
push
add
mov
popl
shrb
scas
popf
pop
fcmovnu
outsb
fists
and
pusha
adc
mov
daa
test
lds
in
sbb
lret
cltd
out
sbb
dec
mov
push
gs
in
and
jl
push
jns
xchg
frstor
subl
lock
lret
jnp,pt
loopne
rcr
pminsw
or
movb
call
repz
pop
xchg
into
aas
xchg
xchg
es
cmpb
mov
dec
fstpl
add
rcrb
fdivrs
mul
lahf
ljmp
inc
mov
xor
int3
add
push
cs
adc
cmp
push
mov
xchg
mov
inc
push
ficompl
cmp
cmp
scas
xchg
outsl
inc
ret
mov
cltd
inc
and
sbb
daa
push
icebp
fistps
push
fwait
and
jne
sbb
push
lret
adc
mov
inc
loope
enter
decl
test
add
lahf
xor
shlb
sbb
lods
notl
push
cltd
aaa
sbb
movsl
jl
mov
sbb
outsl
add
addr16
in
rolb
push
inc
out
hlt
and
jle
xchg
call
add
aam
xchg
cmp
mov
mov
xor
gs
xlat
push
andb
shll
xchg
mov
orl
lahf
loop
jl
fldt
mov
popf
adc
inc
adc
insb
popf
mov
push
cmc
push
rcrb
leave
jbe
mov
jg
mov
add
mov
inc
mov
movsb
sub
or
add
push
jno
dec
jns
sahf
or
inc
scas
fwait
add
dec
fildl
jae
es
cmp
xchg
cltd
cmpsb
pop
push
jmp
test
push
pop
les
lods
stos
dec
inc
mov
lret
adcl
and
mov
sub
imulb
fdivrl
cmp
mov
mov
fistl
js
std
cltd
cld
je
cmc
xlat
test
xor
add
fidivs
jbe
fwait
adc
mov
dec
outsl
daa
arpl
sub
push
shlb
or
and
or
stos
mov
push
mov
mov
es
dec
pop
pop
sarl
sbb
and
das
loopne
das
mov
aas
nop
ret
or
push
lcall
addb
pop
xchg
pop
rcr
jne
pop
sub
jno
dec
and
cmpl
xor
fidivrs
mov
out
and
push
pop
js
and
std
movsl
dec
in
sbb
xchg
add
imul
add
mov
es
inc
in
mov
inc
iret
es
repnz
jnp
test
icebp
mov
push
loopne
out
lahf
enter
push
add
test
in
xchg
push
xchg
sbb
mov
das
xor
adc
mov
pop
aaa
mov
mov
daa
sub
enter
and
sub
xor
sbb
pop
dec
repz
dec
ljmp
xchg
cli
dec
mov
hlt
repz
les
sbb
scas
xor
push
and
adc
add
repnz
mov
mov
lcall
sbb
inc
xor
pop
sub
in
add
dec
adc
jecxz
jno
stos
inc
test
inc
ljmp
popf
sub
cmpsl
jb
and
push
mov
add
xchg
repz
and
jmp
or
inc
mull
jne
add
inc
xchg
sbb
add
adc
inc
and
xor
out
dec
cs
add
arpl
pusha
dec
fsubs
aaa
cld
stos
inc
repz
cmpsb
jmp
and
lret
std
cmp
xor
adc
xlat
cmp
les
das
cltd
shr
sbb
cmp
daa
rclb
in
test
shlb
xchg
fildll
push
sbb
add
cmc
decb
sbb
inc
push
mov
inc
inc
inc
rcll
mov
xor
sbb
fidivrl
js
fst
adc
mov
mov
inc
ret
loope
jb
jge
rcll
pushf
xchg
mov
mov
pop
lock
adc
mov
ret
mov
push
adc
jecxz
cmp
popa
dec
idivb
daa
fiadds
mov
lcall
in
sub
aam
xchg
cs
into
inc
test
mov
pop
add
xor
cld
lret
aas
ffree
pop
into
ror
xchg
cli
leave
cmpsb
imul
push
or
inc
in
mov
push
push
popa
hlt
jp
mov
ja
rolb
fwait
mov
dec
dec
ljmp
pop
ds
and
sbb
int
adc
shlb
lods
sub
xor
pop
sbb
jae
fs
sbb
aad
mov
imul
xchg
jae
cwtl
jo
rcl
addr16
cld
pusha
fildl
dec
lret
call
adc
test
xchg
adc
mov
ret
daa
mov
stc
add
outsb
adc
les
loop
adc
dec
shrl
insb
test
es
mov
and
push
shll
inc
xchg
cmp
in
or
push
mov
push
sbb
sub
and
dec
lcall
lds
movaps
or
cmp
sahf
jecxz
js
xor
mov
dec
loop
and
jle
lods
dec
push
push
aad
sub
daa
pushf
push
add
hlt
fidivrl
sub
adc
mov
sub
std
cmp
push
leave
mov
int
into
mov
push
rolb
add
mov
shlb
push
call
jmp
sbb
push
test
ret
sbb
movl
cmp
pop
add
and
cmp
xchg
aas
sub
inc
movsb
mov
movsb
xor
mov
cmp
mov
rorb
xchg
mov
stc
xchg
cmp
test
mov
stc
mov
dec
fldl
dec
gs
lds
add
in
addl
icebp
xchg
push
or
insb
mov
pop
jnp
pop
push
mov
fistpl
jo
xor
or
enter
hlt
xor
cmp
int
ds
pop
pop
nop
mov
sbb
pop
mov
and
push
or
mov
lcall
leave
pushw
call
mov
fisttpll
pop
add
or
inc
arpl
sub
sbb
jle
or
lcall
cmpsl
sbb
in
push
adc
push
sub
nop
insl
sti
insl
lods
push
std
mov
push
iret
pop
shrb
ja
fucomi
cmp
popa
out
shrb
iret
nop
sub
mov
jle
xor
rorb
jmp
fdivrs
add
dec
pop
jl
mov
and
or
jecxz
fistl
imul
dec
shrl
cmovl
xor
mov
jmp
in
mov
cmp
pop
push
adc
jp
cmp
fcompl
add
xor
into
syscall
cltd
dec
dec
pop
add
and
inc
test
mov
xlat
sahf
lret
cmp
dec
sbb
pop
rcrb
scas
xchg
mov
or
ss
jle
out
cmc
insl
mov
mov
sbb
and
xchg
sbb
rol
bound
push
mov
or
dec
push
push
ljmp
sub
inc
mov
fildl
add
fucomp
into
sarl
pop
mov
call
fsub
push
mov
scas
out
int
pop
cmp
repnz
mov
xchg
jge
movsb
repnz
mov
es
sub
testl
push
shlb
ljmp
pusha
daa
or
cmpsl
ffreep
dec
push
daa
lahf
imul
clts
push
rolb
cmc
inc
mov
pop
mov
mov
test
incl
fstl
rorl
cwtl
mov
and
push
in
push
stc
xchg
push
adc
xor
fwait
dec
lret
gs
xchg
xor
pop
pop
fsubrp
enter
iret
insb
jo
jmp
mov
in
inc
push
cwtl
pusha
test
xchg
ja
inc
cmpsl
lcall
fisttpl
pop
data16
add
rsm
cmp
fcoms
jae
pop
mov
add
sbbb
inc
pop
pushf
or
jbe
add
push
mov
fwait
adc
mov
sub
or
sub
repnz
mov
mov
xchg
adc
jmp
cld
push
sbb
cmp
cmp
stc
outsl
pop
stos
iret
pop
dec
push
das
push
mov
jbe
dec
mov
pop
ja
fcmovnb
cmp
dec
aad
bnd
out
les
test
inc
dec
inc
nopl
bnd
xchg
stc
cmpb
in
mov
test
data16
pop
push
cmp
sub
ficoms
js
sbbl
pop
repnz
arpl
cmp
jns
pop
mov
mov
push
movsl
loope
mov
fwait
and
push
loopne
jae
mov
cmc
xor
inc
pop
push
dec
in
mov
loop
adc
and
outsl
rcrb
push
scas
out
sbb
xchg
pop
dec
mov
subb
xor
jno
xchg
jmp
out
and
mov
inc
movsl
arpl
neg
fcomip
push
xchg
cwtl
mov
sub
test
mov
nop
mov
and
ret
je
push
cmp
aaa
jg
aad
in
lcall
inc
aas
ss
mov
and
pop
mov
ror
and
adc
fstps
dec
sbb
pop
imul
movsb
bound
push
mov
mov
bound
mov
sub
fcmovne
out
xor
add
cmp
mov
push
lea
mov
lcall
insb
xchg
push
cmpsl
add
push
adc
lock
imul
divl
cld
stc
sahf
dec
movsb
out
or
hlt
lock
xorl
iret
jno
pop
jb
aaa
push
insl
xchg
jp
es
scas
fnstsw
push
mov
out
sub
push
mov
or
inc
imul
mov
iret
out
jl
or
iret
scas
pop
lods
cmp
pop
adc
out
js
mov
inc
test
lds
dec
mov
test
push
sbb
jmp
je
jnp
addr16
in
stc
and
iret
ret
dec
stc
lock
pop
push
testl
popa
ds
push
mov
cwtl
decl
ds
sbb
sbb
jo
addr16
push
mov
pop
or
jl
popa
insb
cli
movsb
jne
fwait
mov
sub
sarl
cmp
xchg
out
loope
xchg
adc
enter
cmp
loopne
lcall
xchg
push
mov
int
jae
ret
jle
add
in
pop
cld
in
pop
pop
add
xchg
mov
insl
loopne
push
push
ja
daa
jge
jmp
adc
dec
mov
add
push
xlat
dec
fs
or
out
mov
xchg
mov
pop
rcl
mov
nop
fs
push
ret
negb
daa
inc
push
xorl
outsl
faddl
mov
fnstenv
andb
insb
jno
cwtl
adc
cmp
mov
shll
mov
cmc
add
inc
or
jl
jne
push
int
xor
rcl
shrb
and
push
je
inc
bound
shll
leave
mov
pop
push
jg
xchg
lea
or
lret
pop
popf
inc
mov
adc
adcl
rcl
out
and
push
lock
push
outsb
jmp
pop
push
and
cli
xchg
pop
push
iret
rcr
cs
jno
repnz
sarb
mov
scas
je
or
pmuludq
imulb
lcall
or
out
and
pop
cld
ljmp
adc
repz
jecxz
cmp
mov
sbbb
lods
inc
sub
dec
jbe
sub
jno
ret
clc
jo
stos
push
subl
pop
pop
divl
cli
inc
cmpsb
jne
mov
scas
jno
in
push
icebp
dec
lea
sbb
outsb
xchg
stos
xchg
dec
add
add
add
sbb
adc
mov
mov
sub
insl
cs
cli
repnz
or
sub
xchg
scas
jns
loopne
inc
mov
rolb
inc
or
fs
icebp
add
cmp
mov
out
mov
mov
ret
imul
leave
adc
je
fldcw
lcall
xchg
xchg
push
and
je
in
pushf
mov
xlat
pop
icebp
cmc
int
xor
add
xchg
or
ss
sub
jns
fistps
sbb
push
or
xchg
jmp
lret
outsl
sbb
mov
loopne
push
ficomps
arpl
inc
cmc
lods
out
addr16
test
inc
dec
popa
test
sub
lahf
add
inc
sbb
outsb
add
adc
and
out
add
arpl
arpl
in
pop
out
xchg
in
lds
outsb
push
aaa
xor
inc
add
loope
in
add
jge
inc
cmp
nop
movsb
mov
push
dec
fcoml
pop
nop
fwait
and
lods
out
lcall
cmp
xchg
sarb
sbb
xchg
movsb
fisttpl
stos
loope
fsubrp
icebp
or
xor
mov
jecxz
loopne
push
lea
aam
cmp
lea
fcompl
sbb
sti
fwait
cmp
sub
sub
sub
dec
add
sbb
lock
xchg
push
ficompl
or
imul
xor
xor
divb
iret
movsl
loopne
push
push
mov
pop
jno
or
inc
and
test
mov
jbe
out
pop
mov
test
fs
jns
push
ja
or
mov
mov
push
sub
cmp
stc
arpl
dec
mov
push
jecxz
jae
insb
sub
mov
pusha
inc
dec
cmp
or
mov
dec
ljmp
push
or
lret
jo
adc
sub
or
fisttpll
xchg
mov
hlt
inc
ret
aas
stc
mov
lcall
xor
add
ljmp
mov
fdivr
insb
out
push
ja
mov
cli
xor
mov
adc
insb
out
ljmp
les
inc
and
and
jae
push
or
fs
adc
jg
mov
xchg
mov
clc
out
and
scas
mov
xchg
xor
cltd
mov
idiv
sbb
mov
inc
mov
stc
cmp
xchg
cmp
rorb
mov
stos
aas
pop
or
fdivrs
call
jne
push
and
in
mov
push
lret
shlb
mov
cmp
or
add
jno
movsb
sub
mov
icebp
jmp
inc
addb
dec
sub
int3
rorl
fnstcw
std
dec
pusha
dec
es
mov
push
sbb
icebp
fdiv
sub
mov
out
fxch
ja
jns
shll
popa
sbb
int
and
push
repz
subb
repz
pop
repnz
imul
pop
cli
ja
loope
and
stc
mov
addr16
sbb
add
inc
mov
inc
int
sbbb
jge
aas
jmp
js
cmp
loop
xor
adc
jl
in
adcb
into
out
sbb
das
add
push
popf
sub
mov
insl
lcall
mov
sbbb
mov
jb
aaa
dec
call
fwait
inc
mov
and
movsb
in
sub
in
mov
data16
adc
aas
jb
mov
mov
into
shr
daa
cwtl
outsb
movsl
mov
sub
cmp
pop
out
sub
bndstx
jb
sub
std
dec
pop
cmpsl
fsubs
lret
push
loope
mov
sub
mov
or
mov
fwait
xorb
pusha
and
aaa
cmc
inc
mov
xor
sti
push
rcrl
gs
lahf
pushf
cmc
jmp
xor
stos
nop
adc
xor
js
lret
insl
mov
sar
mov
cs
lods
or
add
out
jg
pop
movsl
jmp
or
push
lds
xchg
inc
iret
dec
xor
leave
sbb
inc
mov
mov
cmc
xor
fidivrs
shll
popf
jle
stos
inc
cmpsb
addr16
movhps
jge
adc
or
push
cmp
mov
cmp
sbb
cmpsb
nop
imul
je
cmpsb
jnp
sub
mov
fsubr
stos
sub
or
lea
sub
sub
aas
add
sti
pop
xchg
out
lret
add
scas
outsb
mov
outsl
sbb
inc
mov
rorl
inc
mov
mov
pop
pcmpgtd
imul
xor
lret
scas
xchg
jl
jno
rorb
mov
jmp
dec
push
or
cld
cli
adc
lret
hlt
and
neg
insl
test
and
inc
pusha
rcr
lcall
fdivrl
pop
and
lret
and
jno
sahf
int3
push
sbb
imul
jne
insl
sub
mov
add
fadd
repz
out
inc
xlat
outsl
add
jg
adc
ja
and
sti
test
inc
out
sbb
dec
inc
push
jnp
mov
dec
out
push
iret
push
mov
or
jmp
lret
cmp
xchg
stc
sbb
repnz
push
stos
aaa
scas
pop
shrb
sbb
pusha
rcrb
jecxz
dec
pop
push
cmp
mov
aaa
data16
out
pop
in
push
cmp
jmp
xchg
cltd
and
xchg
aam
lock
pop
hlt
push
testb
or
aas
mov
movsl
ss
rorl
pop
imul
fmuls
repz
mov
int3
bnd
xchg
or
insb
mov
or
xor
xchg
or
or
pop
pop
aam
mov
mov
inc
xchg
scas
sbb
mov
inc
inc
add
cmp
call
pop
test
xchg
push
imul
call
mov
mov
jle
iret
xchg
mov
scas
repz
or
in
sarb
inc
mov
xchg
sub
loope
mov
pop
xor
xchg
pop
sub
cmp
mov
xchg
mov
pop
movsb
pop
aaa
sub
mov
aas
push
loopne
add
pop
out
clc
jp
mul
xchg
mov
mov
neg
movsl
jle
lret
add
test
cwtl
leave
pop
test
enter
outsb
xchg
add
mov
cltd
jge
and
sahf
dec
pop
inc
pop
stos
shll
leave
pop
or
hlt
dec
add
pop
mov
push
cmp
mov
ret
cmp
nop
aaa
testb
push
sbb
fwait
ljmp
jo
rol
xor
dec
or
or
cwtl
shrl
movsl
cltd
imul
mov
mov
xor
fwait
pop
fwait
sub
pop
adc
dec
jle
mov
lods
mov
or
xchg
scas
aas
loope
adc
pop
lret
test
dec
xor
pop
cmp
push
push
mov
stc
fwait
dec
and
jg
or
sti
sahf
in
pop
inc
out
inc
fsubs
lahf
and
sub
cmpsl
cltd
pop
or
sti
daa
jb
rcrl
movsb
mov
jns
push
dec
mov
mov
into
sbb
push
mov
push
mov
xchg
sbb
rclb
jnp
xchg
jb
mov
loopne
popa
push
pusha
push
cs
sub
scas
lds
lret
insl
xor
jmp
shrb
jae
mov
das
out
bound
pop
mov
in
pushf
pop
sub
mov
mov
xchg
jp
sbb
shl
push
dec
mov
cmp
and
dec
sub
cmpsl
pop
inc
cmp
push
push
fldt
movsl
cmpsl
adc
pop
and
lahf
mov
imul
fs
test
dec
xchg
out
push
stc
jl
test
add
adc
fcmovnbe
ss
insb
test
fdiv
adc
push
inc
insl
xor
pop
inc
mov
mov
repz
cmp
push
xchg
cltd
jecxz
or
xor
sbb
pushl
inc
push
xchg
ret
rcl
cld
add
mov
fsubr
lds
mov
sahf
push
scas
or
mov
fadds
addl
push
push
fwait
add
ja
add
adc
addl
add
sbb
scas
push
pop
mov
mull
adcb
rcr
cwtl
cmp
push
push
cmpsb
mov
jl
or
test
mov
mov
lret
cmp
iret
mov
push
pusha
mov
fsts
jg
xchg
lea
adcb
xlat
sub
test
jge
movsb
push
pop
inc
pop
fidivrs
in
stos
js
fs
sub
mov
and
dec
add
jno
push
adc
xlat
dec
pop
js
lock
inc
xchg
aaa
data16
push
insl
xor
stc
mov
pop
dec
jnp
scas
cltd
and
fldcw
lahf
stc
leave
push
lcall
cmpsb
cltd
repz
lea
adc
sub
shrb
sub
jbe
data16
xor
pop
and
xor
aaa
adc
mov
rcrb
int3
fst
test
popa
lahf
lret
mov
jbe
fnstenv
xorb
ja
imul
es
incb
sub
adc
fistpl
fcmovnbe
xchg
sbb
clc
fwait
loop
js
sbb
fwait
and
push
insl
test
hlt
jecxz
out
in
in
pop
adc
ljmp
adcb
in
add
int
mov
push
jae
xor
out
pop
xor
or
sahf
pop
adc
mov
lods
sbb
and
aam
pop
shl
pop
ret
push
imulb
adcb
ret
mov
dec
push
das
sub
xchg
adc
out
outsl
repz
xchg
ss
leave
shl
fmulp
lods
mov
mov
sbb
aam
mov
jge
mov
or
int
xlat
popf
popf
jge
pop
mov
pop
push
daa
adc
inc
std
push
dec
adc
shlb
aas
push
js
call
add
pop
pop
arpl
and
jno
lret
fs
js
ret
pop
repnz
adc
lods
js
lods
jns
inc
nop
cmp
xchg
dec
sbb
xchg
push
outsl
and
lret
push
mov
pop
sarl
hlt
sub
mov
mov
dec
cmp
lods
or
lods
pop
in
xor
out
xor
cmp
jg
cs
add
jnp
adc
mov
push
cmpsl
push
leave
testl
mov
fwait
or
dec
cmp
js
mov
mov
clc
adc
out
mov
sub
iret
shrb
sbb
imul
rorb
icebp
aas
pushf
mov
xchg
inc
dec
stos
outsl
cmc
adc
mov
pop
xor
loop
clc
mov
lods
dec
mov
xor
jae
jne
or
mov
adc
in
cli
dec
div
in
pop
mov
jmp
jbe
mov
and
push
xlat
loope
addl
es
fstl
out
in
test
dec
push
movsl
dec
add
dec
stos
cmp
adc
icebp
cmp
rorb
dec
add
int3
add
sub
xor
add
mov
xchg
imulb
cwtl
js
xchg
lahf
sti
shrl
outsl
push
push
insl
xchg
or
jnp
std
outsb
push
inc
pop
fsubrs
stc
test
fisttpl
stos
rorb
add
ret
dec
in
inc
jle
loop
in
xchg
jmp
mov
mov
imul
aas
adc
loop
cs
insl
fnstsw
pusha
mov
mov
orb
pop
or
icebp
js
fldenv
jmp
mov
cmp
xor
inc
int
sbb
imul
dec
ret
dec
cmpsl
xchg
insb
jecxz
push
repz
stos
gs
jle
xchg
cmp
dec
sub
sbb
inc
pop
scas
jnp
adc
rolb
stos
mov
mulb
lods
dec
daa
mov
cli
jmp
mov
pop
and
addr16
push
imulb
stos
xor
cmp
pusha
adc
daa
mov
add
insb
shrb
loope
jno
aas
jbe
loopne
cmp
xor
pop
push
xor
cwtl
push
fbld
fwait
aad
lds
mov
test
outsb
fprem1
test
push
lods
mov
cli
ds
xor
cltd
push
inc
loopne
ficoml
adc
pop
sti
mov
dec
fisubl
push
inc
enter
adc
fisttpl
imul
test
xchg
add
and
fildl
aam
lea
lea
mov
stos
sub
sbb
xchg
sti
mov
push
into
pushf
pusha
push
scas
push
mov
fcoml
icebp
cli
repnz
aad
push
add
movsb
or
ljmp
cmp
aad
aas
xor
jne
dec
inc
cmp
insl
lcall
sub
lahf
fiadds
out
pop
jmp
pop
xchg
xchg
sub
nop
cld
je
enter
lcall
push
loopne
cwtl
dec
imull
fdivrs
cli
or
push
push
adc
ret
inc
repnz
inc
jecxz
arpl
testl
adc
ss
dec
shr
mov
add
sub
mov
sbb
xor
mov
pop
sub
xlat
cmp
leave
push
lea
aam
sahf
lods
ds
movsl
add
cltd
xor
jp
and
bound
test
mov
decb
jb
and
jbe
or
xchg
mov
push
rcl
scas
popf
cmp
push
push
icebp
aad
xlat
or
or
mov
and
or
mov
pushf
pop
push
and
repnz
test
stc
das
cmp
mov
inc
lea
jns
push
push
insb
mov
int3
lcall
and
push
scas
lcall
sbb
inc
into
lods
and
xchg
nop
cmp
cltd
dec
out
and
cmpsb
mov
add
or
mov
data16
sub
mov
mov
and
and
jp
in
stos
loopne
fidivs
cli
push
dec
cmp
aam
mov
xor
dec
lahf
sahf
test
mov
push
filds
stc
lea
mov
das
ljmp
outsl
test
loop
jge
shl
bound
adc
gs
push
and
jg
mov
xchg
mov
cmp
adc
mov
insb
cmp
lds
sti
in
and
pop
mov
pop
sbb
push
jge
mov
pop
imul
nop
fmuls
and
jge
lahf
inc
ljmp
or
xchg
in
movsl
cwtl
sbb
cmpsb
sti
out
add
cmpsl
mov
rcr
neg
pop
int
mov
movsl
sbb
fcoml
cmp
shll
or
and
dec
cs
jl
add
jnp
pop
scas
hlt
jmp
mov
sbb
cld
fldl
pusha
daa
in
xchg
cmp
inc
jecxz
inc
adc
add
ret
out
mov
fimuls
sub
in
dec
arpl
loop
add
jl
call
dec
dec
sub
rep
in
and
push
out
mov
out
xlat
add
and
sub
bound
xrelease
jle
or
adc
into
adc
xchg
mov
das
aad
lahf
jne
lret
mov
addr16
push
outsl
loopne
inc
in
sbb
cmp
cmpb
test
in
jle
pop
adc
mov
cmp
inc
push
sbb
add
sbb
icebp
addb
test
mov
sbb
xchg
or
mov
aam
push
cld
outsb
inc
or
pop
xchg
jge
mov
in
loop
cld
and
push
sbb
fs
jbe
dec
pop
sbb
jne
cltd
sarl
push
inc
mov
push
cmpsb
mov
inc
js
sbb
push
sub
std
dec
mov
insb
mov
mov
repnz
loope
sub
push
push
or
mov
and
aaa
outsl
cmpsl
inc
push
adc
ret
jle
pop
add
pop
pusha
shlb
cmp
fldt
sarl
jne
dec
cmp
repnz
rcll
stos
and
mov
mov
and
inc
inc
loope
mov
mov
iret
jo
sub
leave
push
cwtl
xchg
loop
and
push
iret
popf
and
inc
iret
inc
inc
push
adc
and
mov
inc
push
loop
lcall
push
popf
into
arpl
pop
cmp
in
outsl
and
inc
push
out
movsb
adc
push
leave
push
mov
cmp
adc
insb
sbb
popf
push
sbb
push
sub
pop
out
lods
int3
xchg
pop
in
cltd
sbb
pop
sbb
cwtl
and
sbb
test
lock
cmpsl
xchg
mov
jl
jl
jae
repz
cltd
imull
sub
iret
out
fdiv
jg
cli
add
movsb
sti
mov
xchg
jbe
jb
push
cltd
jnp
xor
pusha
lret
rcll
adc
jnp
jne
xor
inc
jnp
jne
add
sbb
scas
mov
scas
add
shll
adc
xor
add
in
push
jbe
and
and
in
shll
push
fdivrl
ds
jl
xor
sbb
pop
roll
xor
inc
xchg
pop
in
addl
mov
mov
subb
lret
movsl
mov
mov
or
negb
andl
lahf
jbe
xlat
out
add
leave
bsr
lock
xchg
sbb
stc
cltd
xor
adc
lds
out
ds
insb
cli
jo
lcall
add
or
push
push
jp
pop
add
mov
lea
lret
push
out
push
push
gs
sbb
ret
mov
enter
fstps
gs
pop
shr
aam
mov
jl
mov
cltd
ss
adcb
pop
sahf
jne
repnz
out
cli
leave
es
ret
push
mulb
pop
mov
out
push
cltd
and
clc
roll
ror
leave
mov
push
test
shll
out
cld
sub
pop
push
pop
jae
mov
pop
cmp
mov
sbb
hlt
andb
dec
cmpsl
jo
hlt
mov
shrb
cwtl
movsb
xchg
jno
lock
enter
pop
inc
jmp
rol
inc
and
dec
shl
inc
fdivl
lret
addps
pop
jle
push
xchg
pop
rcll
ds
sub
loopne
mov
imul
imul
xor
mov
hlt
push
cli
inc
push
jmp
arpl
ret
dec
stos
push
cmp
aam
xchg
fisubrl
mov
push
add
in
jae
iret
cmp
pop
xor
js
adc
pop
xchg
xchg
mov
enter
gs
cs
and
mov
outsl
adc
and
idivl
mov
pop
xchg
xchg
push
sub
fcoml
lret
sarb
cmc
mov
insl
test
fstpl
imulb
mov
xor
sub
int
sub
lret
sti
sahf
mov
jo
in
ja
sub
mov
push
enter
dec
mov
xor
adc
mov
mov
lods
add
or
or
mov
fcom
shlb
movsb
loop
push
inc
push
xchg
push
aam
cmp
xor
adc
xor
scas
or
jmp
xchg
inc
in
xchg
pop
es
popa
inc
test
xlat
dec
dec
mov
bound
push
addl
lahf
fwait
jbe
aas
sub
pop
jge
leave
stc
rcl
aas
mov
out
xchg
out
push
push
insb
orl
pop
rolb
hlt
jae
xlat
and
dec
aaa
and
dec
mov
sub
out
xchg
sbb
int3
scas
orl
loop
fsubrl
xchg
out
push
sbb
out
add
divb
mov
mov
sub
dec
adc
pop
jb
mov
dec
ds
dec
mov
lahf
mov
mov
aaa
cmc
push
dec
push
rclb
xor
pusha
je
xchg
dec
mov
std
les
or
sub
je
test
fcmovnu
cs
imul
or
cwtl
mov
inc
or
xchg
dec
or
dec
lds
rolb
push
stc
push
pop
pop
call
inc
jmp
js
or
pop
xchg
pop
xchg
jle
sbb
jecxz
stc
jae
mov
adc
mov
add
pusha
mov
mov
sub
insb
inc
xor
in
cs
aam
push
cs
cmp
rcll
ss
xchg
and
cmp
test
push
xchg
fiadds
test
loopne
mov
outsb
dec
cmp
fsubs
int
or
mov
outsl
in
js
test
rorl
push
enter
rcrb
add
mov
sub
xchg
mov
sub
dec
test
pop
bound
push
stos
and
out
jmp
add
and
cwtl
push
push
ja
lahf
mov
and
jne
sahf
cld
cmpsl
push
cmp
ds
xchg
jae
es
jne
iret
mov
mov
fs
push
jnp
js
imul
xchg
fldenv
lods
les
inc
cmpb
mov
fidivrl
out
xor
pop
in
cli
pop
and
xchg
jae
adc
add
mov
pop
popf
out
jecxz
test
inc
mov
push
dec
cmp
repnz
dec
mov
testb
push
cmp
lods
and
ds
mov
scas
stc
fwait
loope
test
mov
dec
push
mov
mov
xchg
xchg
loope
ret
xor
or
out
lcall
dec
and
mov
pop
or
stos
js
mul
push
sbb
xchg
jb
fnsave
test
outsl
sti
fidivrs
les
sbb
aam
jb
pop
jne
cli
stc
cld
enter
lea
mov
inc
lods
pushf
jge
and
mov
mov
mov
enter
andl
pop
scas
adc
stos
sahf
jb
push
or
pop
mov
fxch
rcll
jl
sbb
arpl
out
int3
xor
pop
sbb
imul
testb
rol
mov
loopne
mov
cmc
or
jg
pop
iret
xchg
xchg
js
sub
mov
push
mov
cmpsb
mov
sahf
movsb
or
cmpsb
adc
dec
jl
jmp
daa
and
pop
pcmpgtw
cmc
jnp
cld
hlt
push
mov
mov
mov
movsb
out
adc
in
repnz
jbe
icebp
stc
fdivp
movsl
jns
xor
out
cwtl
test
lcall
dec
push
and
ljmp
or
and
push
iret
ljmp
icebp
cli
aaa
movsb
test
aam
repz
pop
sbbb
icebp
flds
mov
inc
iret
xor
xchg
pushf
cmp
push
int3
or
push
popf
je
lret
cmp
repnz
andl
aas
and
adc
stos
or
add
ja
lret
cwtl
adc
shlb
fdivrp
and
nop
or
scas
cmp
sub
loop
and
mov
jp
lret
shll
and
lahf
ss
imul
lcall
or
int3
xor
xchg
pop
mov
mov
in
inc
rorl
xchg
fdivl
mov
or
in
adc
les
aas
mov
std
fbstp
out
loope
jb
cld
fldt
or
loope
fldcw
push
lock
jge
add
dec
fdivr
and
shrl
dec
stos
jmp
ljmp
or
fldcw
inc
test
dec
js
cmp
mov
clc
inc
jo
in
bound
cmp
sbb
scas
leave
out
pop
popa
lcall
push
adc
xor
int
movsl
inc
sahf
rorl
and
and
dec
or
rorb
xchg
cltd
jb
data16
loope
ror
imul
and
sub
xchg
int
xchg
mov
pop
adcb
rclb
xchg
push
jmp
stc
pop
xchg
xchg
mov
mov
inc
rcrl
cmp
data16
lods
mov
mov
ret
mov
mov
xchg
add
jl
int
pop
mov
inc
xor
pop
xchg
dec
mov
jnp
and
std
out
lock
jecxz
jae
popf
cwtl
in
xor
pop
cmc
add
dec
mov
mov
fcmovb
cmp
hlt
into
pop
std
int
les
lods
jl
movsb
or
or
pop
and
push
fildll
ret
sbb
pop
dec
add
popf
push
rorb
pushf
mov
aam
mov
fwait
dec
mov
add
xor
int3
inc
push
sub
mov
out
jecxz
pop
aam
loop
fs
enter
in
mov
inc
lcall
mov
sub
inc
push
mov
test
xor
and
fildll
and
mov
jle
push
dec
imul
cmp
or
es
mov
call
or
jge
pop
dec
inc
jge,pn
jns
dec
inc
repnz
mov
inc
pop
in
movsb
add
pop
cmp
mov
pop
dec
inc
in
aam
mov
scas
cmp
cmp
xor
dec
push
pop
jl
cltd
dec
jnp
pop
rcl
xor
cmpsl
sbbb
push
jae
cmp
add
pusha
cmpsb
jmp
xor
pushf
imull
dec
mov
mov
or
fstpl
aaa
sbb
aaa
clc
pop
imulb
pop
lock
int
xor
shlb
pop
cltd
out
fnstenv
jo
mov
jg
jmp
and
int3
mov
jp
hlt
outsb
movsb
insl
ret
pop
jg
fs
in
pop
sub
inc
shrl
enter
or
lock
xchg
xor
adc
shl
aam
andl
sarl
or
fcompl
adc
gs
dec
xor
inc
fstpt
ret
sbbb
pop
jge
fimull
addr16
lock
mov
mov
mov
mov
push
add
xor
mov
leave
add
test
dec
and
pop
and
jg
push
dec
push
bnd
cmp
pop
mov
popa
sahf
fimull
loop
shlb
push
inc
push
push
push
bound
or
push
call
sub
mov
jnp
xchg
sbb
push
mov
adc
test
push
mov
sbb
push
pop
test
aad
xor
push
pop
inc
int
xor
dec
mov
aaa
loopne
fisttps
mov
js
sbb
jne
int3
or
adcl
adc
ds
gs
sbb
cmp
cmp
sub
insl
icebp
push
mov
sbb
stos
cltd
inc
iret
and
data16
test
sbb
dec
out
je
cmp
rep
movsl
lahf
xchg
mov
jle
mov
mov
stc
mov
pop
cmp
inc
test
je
mov
adc
lret
and
adc
pop
xor
imul
inc
repnz
cmp
adc
dec
mov
fisubrl
cld
jge
lret
aam
or
or
dec
jae
and
inc
jbe
adc
lea
mov
adc
mov
addr16
pop
sbb
and
mov
push
pop
add
test
out
xchg
push
aam
mov
inc
les
xchg
in
lcall
xor
int
orb
sbb
inc
fcoml
sub
sub
insb
aas
dec
mul
jne
cmp
xchg
loop
je
inc
es
sahf
inc
mov
out
in
insl
mov
in
je
cmovae
fistpl
jg
inc
sub
mov
outsl
pop
shll
mov
in
add
or
imul
rol
mov
movsb
orl
add
fbld
mov
sub
xchg
arpl
pop
push
pop
dec
ds
inc
addr16
enter
mov
and
stos
mov
lret
inc
mov
sbb
add
xchg
cmpb
aad
and
movsl
lcall
shll
jmp
cwtl
out
mov
fsubrp
pop
stc
xchg
push
out
xchg
mov
into
cmpb
adc
into
ja,pn
xchg
loope
lock
hlt
mov
adc
mov
mov
pop
lret
pop
test
daa
cmp
int3
iret
in
loopne
add
mov
dec
nop
xchg
jne
rcr
xchg
mov
push
icebp
sahf
mov
pop
outsl
repz
or
test
into
daa
popa
ljmp
gs
lret
adc
mov
inc
jmp
cwtl
lock
adc
dec
shl
pop
icebp
pop
nop
fbstp
jb
jl
fs
xchg
sub
add
loope
jae
mov
pop
mov
jg
cmc
pop
push
push
lahf
icebp
sbb
movsb
repnz
or
xorl
push
xchg
xor
sub
arpl
mov
xorb
adc
jp
inc
sbb
int3
sbb
and
xor
in
insl
sub
sub
jmp
xor
popa
stc
jb
lods
outsb
jge
mov
pop
cmpsl
lods
jae
mov
js
call
scas
and
out
mov
xchg
imul
shlb
sub
push
scas
mov
push
pop
mov
sub
or
adc
pop
push
ljmp
inc
dec
mov
imul
pop
jg
pop
xor
repnz
jns
flds
mov
movsl
or
push
stc
dec
pop
shlw
jp,pt
pop
jge
cli
dec
in
jae
insl
or
ds
sahf
push
ret
ficomps
pop
cwtl
lock
icebp
rorl
icebp
add
test
mov
sub
push
dec
orl
pop
cmp
ret
in
fs
out
pop
iret
adc
and
push
dec
jno
jne
popa
addr16
in
cmp
push
pop
ja
sbb
jl
jecxz
into
mov
pushf
and
std
daa
cmp
in
cld
mov
leave
clc
xchg
sub
push
jge
sbb
push
leave
pop
int
and
push
fwait
lock
lea
js
mov
pop
jns
gs
cwtl
mov
lcall
cmp
xor
loope
pusha
xor
enter
xchg
aas
cmp
popf
gs
daa
mov
insb
xor
xor
ret
jns
decb
rclb
cltd
shl
loopne
and
lcall
cmpsl
lcall
push
sbb
stos
ret
xlat
insl
mull
or
arpl
jge
mov
ljmp
rorb
ss
cmc
push
addl
in
add
jns
push
out
mov
push
arpl
imul
xchg
add
mov
xchg
lcall
adc
add
cwtl
jb
mov
or
push
xor
insb
inc
cwtl
enter
les
ja
pop
movsl
repz
and
je
pop
or
mov
jae
ljmp
enter
cltd
adc
push
in
fnstcw
outsb
or
sub
inc
mov
stos
les
outsl
fistps
mov
cmp
ret
jge
xchg
aaa
xor
jp
xlat
aam
push
fs
jo
js
mov
test
repnz
ja
push
mov
std
lahf
outsl
loop
add
jbe
dec
jp
inc
and
mov
leave
pop
loope
imul
stos
out
mov
sub
jg
cmc
mov
and
and
dec
fwait
movsb
mov
ficompl
mov
repnz
sti
into
xchg
shrb
pop
in
imul
cmc
fsubl
mov
rolb
sub
mov
outsb
fdivp
call
rcl
sub
mov
jecxz
xchg
test
push
cmp
hlt
pop
sbb
pop
inc
int
jb
loope
adc
ret
rcl
aas
sbb
jmp
cmpsb
jo
fldt
les
mov
call
mov
js
imul
dec
push
repz
and
aam
push
push
adc
pop
cmp
lret
aad
push
nop
cli
adc
mov
js
xchg
lret
cmp
hlt
xor
cli
es
inc
lcall
dec
ror
iret
loopne
push
jno
lds
sbb
dec
mov
adc
mov
xlat
fdivs
fiadds
add
pop
cmp
xchg
dec
adc
dec
mov
adc
ja
and
daa
inc
mov
outsb
daa
or
dec
js
lret
das
daa
loopne
andl
and
xor
fwait
loope
js
rorl
repz
mov
mov
sbbl
lock
push
cwtl
gs
mov
mov
out
sub
fidivrl
aam
adc
ret
lods
fistpll
cmp
sbb
xchg
mov
cmp
sti
lret
int
pop
mov
jb
call
test
call
jo
enter
test
adc
pop
jp
xlat
jge
pop
cmp
jo
cmp
xchg
pusha
loop
and
dec
outsl
inc
pop
ret
add
sahf
and
pop
hlt
das
cltd
aam
lods
mov
mov
or
cltd
lock
sbb
mov
mov
mov
mov
push
cmp
pusha
in
leave
mov
rcrl
pusha
rolb
hlt
and
cwtl
inc
das
in
in
mov
xchg
fstpt
fucomi
and
dec
pusha
sbb
xor
jae
inc
arpl
cwtl
fistps
cmp
push
xchg
pushf
loopne
pop
xchg
xor
imul
pusha
xchg
sbb
dec
scas
mov
ja
int3
es
fs
inc
jg
xchg
ss
mov
sbb
mov
lea
sbb
icebp
test
fucomp
pusha
pop
mov
sbb
inc
inc
xor
and
cmp
addr16
loop
bound
sub
stos
mov
jg
and
sbb
mov
or
pop
sub
push
mov
outsl
orl
xlat
shlb
add
mov
fildl
cmpsl
jbe
cwtl
cmp
lock
stos
stos
pause
push
imul
mov
cmpsl
dec
pop
or
xor
inc
inc
push
add
test
repnz
jns
mov
or
fwait
xor
cld
popf
test
pminub
cmpsl
aam
insb
lods
popf
pop
cmp
mov
inc
and
repnz
push
addr16
jmp
mov
clc
mov
out
lods
cmp
push
popa
clc
dec
das
cmp
or
in
dec
push
decl
sbb
dec
xor
rcrb
or
mov
jne
jnp
jb
adc
inc
sbb
scas
jp
cmpsl
push
test
ret
clc
mov
ja
test
dec
pushf
adc
mov
fistpll
cmp
loope
jge
cld
fwait
mov
ja
ljmp
iret
sbb
rcll
clc
mov
ljmp
movsb
int3
mov
roll
jnp
icebp
aad
loopne
in
xchg
push
ret
push
pop
jp
push
icebp
sahf
fwait
add
inc
pusha
or
jno
inc
leave
jecxz
push
cli
mov
mov
ret
xor
dec
js
lahf
cwtl
push
pop
pop
dec
incb
jg
add
rcr
leave
mov
nop
push
push
shll
cmp
mov
insb
push
sub
mov
insl
out
push
push
imul
mov
sahf
push
shlb
jne
cmp
daa
dec
out
cltd
xor
xor
mov
mov
dec
leave
les
testl
add
cwtl
xchg
repz
fidivl
repz
repz
jl
push
xchg
jne
iret
sub
xchg
mov
mov
jmp
sub
pop
mov
jb
pop
movl
sarb
imul
and
call
add
scas
xchg
jae
or
xchg
mov
lret
orb
cmp
mov
mov
sub
scas
push
mov
cmp
push
push
inc
jnp
add
add
add
shrb
insb
mov
mov
sub
xor
enter
shlb
int3
ficomps
xor
dec
lock
inc
mov
xchg
stos
cmp
imul
rorb
push
fmull
fdivrs
inc
test
fstpt
je
in
push
mov
mov
lods
out
outsl
xor
jne
sarl
shlb
std
xchg
cmp
mov
das
adc
xchg
push
push
pop
test
xor
dec
jg
lds
movsb
lods
repz
call
xchg
sbb
xor
pushf
mov
adc
js
jl
outsb
ret
xchg
xor
fcompp
js
into
mov
test
mov
adc
ret
adc
xor
roll
popf
test
cmpsl
stos
mov
fstp
stos
dec
lahf
inc
in
dec
xor
orl
push
aam
out
ror
dec
cmp
shl
mov
pushf
arpl
fidivs
adc
enter
lret
fsubs
xor
cld
jge
fisubl
faddl
aas
adc
cli
push
aam
pushf
adc
inc
clc
mov
pop
sub
or
add
insb
lds
sti
in
and
dec
mov
sbb
add
fimuls
cltd
adc
cs
mov
push
cwtl
dec
push
inc
inc
xor
rclb
test
and
jnp
fsubrl
xor
dec
jmp
dec
xor
cltd
stos
jne
les
ss
dec
and
sub
mov
and
repnz
cld
aas
mov
sbb
xlat
inc
rcr
sbb
jae,pn
mov
loope
xchg
mov
mov
or
cmpb
jmp
enter
movb
ljmp
sbb
andl
push
or
clc
push
xchg
rorl
cmp
cmp
test
or
xchg
movsl
aaa
dec
push
dec
or
xchg
and
xchg
lahf
movl
inc
push
into
adc
test
arpl
mov
sub
fistps
insl
xchg
in
ja
mov
and
or
add
mov
jle
mov
inc
mov
popf
push
pusha
lock
test
mov
mov
call
xor
mov
adcb
inc
sbb
mov
rclb
lcall
cld
ret
jle
mov
aaa
xchg
xor
jge
movsb
and
xor
or
sbb
je
in
mov
sub
scas
mov
pop
stos
xor
push
lock
call
insl
jne
inc
lcall
aaa
js
movsb
push
mov
sbb
js
sbb
movsl
sbb
add
cmp
les
push
mov
xchg
inc
leave
test
inc
fs
push
sbb
cmp
jae
sub
push
mov
push
mov
pop
sti
loop
cmp
push
xchg
icebp
mov
sbb
mov
lret
jl
pop
bound
xlat
aaa
jne
jnp
jp
xor
push
clc
mov
mov
mov
mov
sub
leave
hlt
outsb
jg
out
push
jecxz
xchg
test
jl
fs
and
je
mov
inc
stos
fsubl
cmp
mov
mov
shrl
add
sahf
lret
mov
dec
jns
cmc
cmp
jns
xor
cmp
xor
xor
push
cwtl
sub
in
pop
dec
sub
adc
inc
mov
add
mov
outsl
mov
push
ror
and
aam
mov
ja
fwait
cmp
shlb
jmp
sar
into
orb
xor
adc
xor
mov
sub
fidivrl
fninit
cmp
mov
pop
imul
mov
lgs
sub
repz
sbb
mov
xlat
add
or
xchg
pushf
pop
ljmp
outsb
dec
subl
mov
popf
add
and
addr16
negb
test
mov
push
and
out
int3
sbb
or
out
dec
cli
pop
mov
mov
or
push
adc
lcall
mov
das
std
jl
in
jge
addl
ja
xor
sti
sub
sbb
or
xlat
lods
std
dec
repnz
cld
dec
mov
xchg
shrb
dec
inc
or
es
lret
cmovl
cwtl
fidivrl
fsub
jne
adc
dec
push
insb
sbb
sbb
or
cwtl
test
adc
in
enter
mov
clc
fidivrs
push
mov
push
lds
sbb
shl
pushf
movsb
mov
sub
ret
cmc
je
popa
mov
adc
mov
jno
insb
loope
add
loopne
addr16
out
iret
mov
mov
cmpsl
xor
jge
addb
ja
std
test
jecxz
movsb
xor
pop
or
mov
pop
das
push
pop
mov
or
mov
aad
mov
sbb
dec
int3
dec
test
pop
pop
ss
inc
sbb
push
mov
push
aad
xor
mov
fildll
test
push
inc
das
pop
sbb
cmpsl
sahf
adc
cmp
ja
jae
fdivrs
inc
sbb
mov
push
xor
push
aaa
jns
std
fsubs
movsb
bound
or
popf
xor
add
push
jmp
push
pop
aam
adc
and
or
cmp
or
bound
loopne
test
cli
arpl
negb
hlt
lret
aam
push
aaa
cmp
hlt
addr16
cli
dec
stos
test
xor
inc
pop
fwait
add
xchg
xor
outsl
in
pop
stc
cwtl
andb
dec
pop
xchg
inc
gs
mov
rcrb
xor
aam
cmp
aam
mov
cwtl
stc
loope
dec
or
in
jnp
or
add
push
mov
in
std
dec
loope
lret
bnd
test
out
sub
mov
insb
and
mov
fsubrl
push
cs
and
push
outsb
xor
insb
fimull
shlb
popa
and
gs
cmp
cmpsl
add
xlat
stc
mov
mov
aas
loope
xchg
mov
call
or
add
cmpl
mov
in
push
lret
out
outsb
cmp
kmovw
cli
or
insl
lods
jne
mov
sbb
cmp
fdivs
sti
aam
pop
scas
hlt
xchg
mov
xchg
xchg
sbbl
out
push
stc
movsl
add
xor
and
jmp
sub
stc
das
add
outsb
xchg
mov
imull
loopne
inc
and
cmp
adc
test
push
push
or
loopne
pop
andl
rorl
into
mov
call
xor
pop
insb
in
mov
rcr
xor
movsb
and
cmp
ljmp
jecxz
dec
lods
scas
pop
ss
xchg
fidivs
xchg
xor
dec
or
add
mov
xor
test
and
push
sub
xchg
pop
rcrl
cmpsb
sub
into
pop
scas
mov
sbb
mov
xchg
pop
mov
push
and
addb
pop
sbb
mov
pop
lods
push
inc
in
cmpsl
xchg
cmpsb
dec
mov
imul
mov
or
bound
scas
loop
pop
xor
or
in
mov
pop
xchg
add
mov
pop
out
mov
out
test
imul
cmp
les
bound
lods
je,pt
addr16
push
rclb
push
and
add
out
and
outsl
add
push
mov
ljmp
xor
mov
fldpi
aad
cmpl
push
push
jb
notl
xchg
ret
pop
inc
lret
sbb
mov
stc
daa
sbb
inc
shl
addr16
pusha
push
jle
or
aam
daa
jp
sbbb
jmp
hlt
cld
mov
pushl
in
pop
mov
test
dec
cmpsl
call
gs
and
jmp
fsubs
cmp
xor
sub
sub
adc
rcl
jmp
sti
dec
and
xchg
fisttpll
pop
dec
mov
push
movsb
loopne
out
pop
clc
inc
scas
daa
hlt
mov
in
cmp
mov
and
into
ja
pop
dec
loope
fs
insb
les
xor
push
jnp
xor
pop
mov
daa
jb
add
stc
cwtl
adcl
mov
mov
jne
sbb
or
outsb
rclb
xchg
hlt
pop
jno
scas
adc
add
xor
out
inc
push
mov
stos
xchg
add
in
pop
inc
imul
xor
jae
jnp
shrb
adcl
cltd
out
movsl
pop
xor
push
mov
mov
jns
pop
cmpsb
cmp
dec
ficoms
sbb
xchg
outsb
test
xchg
jp
pop
mov
or
jle
sub
adc
mov
lds
popa
xor
imul
jb
inc
and
test
adc
or
mov
and
push
xor
xchg
imul
repz
lret
inc
xchg
pushf
popl
dec
aaa
sub
std
xor
adc
push
fstps
popf
or
jmp
cmp
or
pop
mov
enter
and
xchg
inc
cmp
jle
lret
shrb
xlat
testl
mov
mov
decb
push
repz
mov
pop
pop
mov
loope
jmp
sti
push
xor
sub
mov
clc
add
jle
in
daa
ds
rcr
lret
test
arpl
ljmp
sbb
ds
imull
mov
outsb
fstl
mov
cmp
xchg
sub
dec
mov
fcom
sbb
xor
sbb
fisttpll
imul
sar
lret
or
push
fdivr
jecxz
mov
and
insl
cmpsl
sub
in
test
cmp
jnp
push
or
sbb
jnp
mov
js
insl
add
test
rcrb
jmp
jecxz
sbb
lea
sbb
jno
push
pusha
pop
popf
ficoms
xor
insl
loop
loop,pt
loopne
push
xchg
mov
sbb
mov
sbb
pushf
mov
xor
sti
add
cli
mov
add
pop
sbb
push
mov
insb
stos
mov
bound
out
test
lret
xchg
cmp
cld
test
insb
and
int
jg
int
cmp
idivb
inc
mov
jmp
ljmp
adc
int
sbb
xchg
xchg
push
mov
and
daa
sarb
pop
outsl
mov
sbb
aam
push
mov
sub
or
test
push
cmp
mov
out
sub
std
shrd
push
cld
xchg
dec
mov
sbb
jns
mov
push
insl
and
aaa
mov
xor
test
out
push
out
dec
cmp
mov
mov
xor
jbe
nop
fsubl
incl
adc
test
fisubl
cmp
mov
mov
push
jno
clc
sbb
adc
or
cwtl
into
jle
add
xchg
xchg
inc
mov
cli
enter
lds
inc
arpl
inc
xchg
test
inc
adc
mov
and
mov
add
subps
mov
test
add
push
pop
faddl
inc
subl
in
orb
loope
and
pop
andb
fwait
adc
mov
leave
out
divb
frstor
leave
mov
scas
jmp
mov
lods
jmp
mov
xchg
pop
lret
push
mov
insl
in
in
mov
or
mov
cs
ljmp
cmpsb
pusha
mov
lret
pop
or
gs
dec
cmp
jb
pusha
add
shll
jae
arpl
fidivs
mov
jp
xor
or
rcr
pushf
fadds
add
mov
outsb
bound
movsl
gs
hlt
sbb
mov
xchg
sbb
cld
and
ds
push
fwait
sub
push
push
mov
add
out
pushf
jb
mov
dec
movsb
out
xchg
fwait
mov
push
xlat
xchg
jg
rcrl
outsb
stos
inc
aaa
add
fistps
mov
jae
sbb
cmp
or
and
pop
inc
xchg
rorb
or
jo
out
and
jbe
mov
sahf
pop
mov
loop
xor
push
mov
or
leave
dec
fistl
lret
push
mov
sti
icebp
in
pop
sbb
inc
adc
mov
movsl
mul
pop
pop
lcall
mov
inc
and
inc
jmp
bound
inc
push
dec
push
loopne
sub
pop
cmp
dec
mov
in
ret
popa
stos
xchg
roll
leave
lods
sub
test
push
pop
out
bound
fs
mov
xor
mov
into
pop
xor
outsl
in
add
xor
push
insl
jno
bound
or
lret
insb
or
es
lds
lods
ja
cs
sbbl
pop
iret
mov
add
sub
push
push
push
or
pop
loop
roll
mov
or
cmp
fwait
scas
imul
ret
imul
add
jp
ja
add
or
movsb
adc
mov
adc
push
outsb
inc
int
mov
lcall
mov
dec
and
fadds
sub
push
xchg
fcomi
lret
pop
int
push
insb
stc
cmp
movsl
jl
faddl
cmp
jb
test
mov
imul
inc
fiadds
rorb
les
mov
lcall
subl
test
mov
pop
xchg
pop
or
xchg
push
adc
jle
add
aam
jl
insb
popa
mov
and
jg
push
out
or
sarb
ljmp
iret
ret
cmp
xchg
das
insb
xor
sub
jl
pop
xchg
and
or
cmp
ret
cmpl
mov
testb
hlt
cmp
daa
or
aaa
dec
bound
sbb
rolb
mov
lds
fidivs
shlb
aam
cmc
hlt
xchg
lret
xor
sahf
xor
repnz
lcall
cmp
mov
lcall
dec
sub
aaa
and
or
dec
insb
push
jae
das
mov
and
in
fisubrs
sbb
mov
bound
sbb
xchg
mov
jbe
roll
jge
and
dec
divb
pop
pop
mov
sbbl
xorb
lods
adc
and
push
sub
stos
loope
pop
dec
faddp
push
push
jo
mov
push
mov
add
sub
bound
and
sub
adc
outsb
dec
jmp
xor
idivl
movl
movsb
sbb
leave
pop
jmp
leave
fnstenv
or
sbb
mov
in
sbb
cmpsb
dec
outsb
ja
jle
test
ja
ret
enter
pop
std
inc
pop
std
stos
push
pop
jp
sub
aad
or
add
jnp
xchg
xchg
test
or
mov
leave
out
sub
movsb
out
pop
dec
fnstcw
repnz
in
xor
jno
cltd
xchg
mov
or
cmpb
and
lret
push
lahf
jns
scas
sti
sti
pushf
lds
in
adc
repz
out
and
inc
lods
test
sbb
enter
repnz
mov
lret
cltd
jp
sbb
lcall
inc
scas
loopne
jp
push
fisttpll
push
and
jl
out
cwtl
mov
mov
jp
inc
sahf
fldt
aam
test
jns
add
adc
add
push
push
push
push
jns
or
push
cmp
call
int3
pop
cmp
jmp
or
dec
xchg
ljmp
inc
jp
js
add
cmpl
leave
das
pushl
push
stos
sub
cmpsl
aaa
add
and
pushw
dec
cmp
mov
mov
fmull
mov
xchg
adc
sbb
sti
xchg
add
sub
loopne
mov
inc
inc
sbb
and
sub
and
pop
mov
dec
mov
int3
mov
cmp
pop
push
pop
lcall
inc
and
je
xchg
and
lcall
lcall
adc
sbb
cli
mov
lret
adc
inc
cli
xchg
pop
cltd
div
lds
cld
je
and
js
filds
xor
or
ds
add
inc
outsl
adc
lods
push
inc
in
jns
jnp
sub
int3
popf
mov
popa
cltd
not
addb
stos
dec
fstl
sti
jo
push
ror
fbld
sahf
pop
dec
test
mov
test
imul
in
stos
xchg
loopne
clc
pop
pop
or
inc
lds
pusha
fisttpl
adc
cltd
faddl
pusha
jl
js
outsl
adc
mov
mov
outsl
ljmp
sbb
nop
and
loop
push
add
jno
clc
mov
scas
xor
or
call
scas
fwait
cld
sarl
jns
jle
jo
mov
cltd
or
push
cmp
popa
in
lcall
int3
movsb
lds
push
mov
push
out
clc
push
pushf
xor
adc
jl
or
sub
bnd
pop
jae
ret
icebp
roll
decl
xchg
lds
lods
inc
push
enter
sti
push
ljmp
cmp
ret
sbb
lea
fisttpl
add
fwait
iret
rcl
xlat
popa
push
stc
in
cmp
dec
jg
andl
xchg
mov
mov
mov
mov
dec
xchg
sbb
xchg
gs
arpl
push
lret
inc
dec
dec
insl
adc
and
mov
aas
ret
daa
jbe
inc
lea
int
push
arpl
adc
cld
sub
pop
and
dec
inc
pop
pop
movsl
dec
jl
jle
pop
mov
iret
shr
aaa
in
out
push
int
es
xchg
cmp
outsl
movsl
sub
and
sub
test
iret
lods
dec
xchg
adc
and
mov
test
jecxz
dec
in
jl
xchg
add
push
and
pushf
adc
adc
dec
dec
mov
scas
popl
bound
mov
dec
jbe
aad
mov
insl
lret
jge
pop
jns
adc
push
movsl
rol
mov
jp
pop
mov
xor
pop
aad
pop
push
lret
mov
popa
push
jne
pop
mov
adc
data16
fidivl
sub
sub
pop
mov
fnstsw
ret
sahf
cs
iret
leave
xor
pop
int
test
mov
adc
push
mov
lock
dec
and
imul
fcmovu
test
mov
xchg
dec
push
xor
pusha
mov
cmp
cmp
hlt
out
fs
cmpsl
daa
fdivs
in
mov
js
and
out
sahf
mov
popf
sub
popf
lret
inc
lods
push
add
cmc
sti
push
jl
dec
inc
mov
mov
ret
pop
imul
fdiv
test
mov
cmpl
aaa
inc
inc
loop
adc
mov
shrb
js
dec
add
jne
popf
xchg
rcll
in
sahf
adc
sbb
movsb
fnstenv
fbld
inc
pop
clc
push
in
sbb
jge
int
inc
xor
pop
inc
jns
stos
mov
mov
rcrl
repz
xor
in
enter
lcall
inc
mulb
jecxz
movsl
sub
push
in
or
add
test
out
dec
lods
fbld
push
pop
aad
sbb
pop
mov
add
in
or
inc
xor
fldl
cmp
push
or
int
mov
mov
das
cmp
sahf
xacquire
xchg
xor
xchg
mov
or
mov
js
mov
cli
sar
fs
mov
push
addr16
stos
or
pop
sub
inc
cmpsb
lcall
pop
aas
pushf
stos
adc
sbbb
sbb
sbbb
jl
cld
into
stos
fwait
insb
jne
shlb
or
popf
rcrl
out
mov
push
adc
or
data16
sbb
push
out
es
int
out
mov
dec
out
adc
cwtl
lret
dec
and
or
jo
mov
test
sbb
inc
add
iret
inc
sbbb
fistps
adc
popa
inc
inc
push
or
icebp
add
mov
inc
in
cmp
out
call
in
push
clc
mov
sub
lcall
push
xchg
fimull
dec
pop
ret
mull
inc
pop
lds
mov
lods
xchg
scas
pusha
cld
lods
push
push
push
aam
pop
movsb
fs
and
mov
inc
iret
scas
mov
sbb
daa
pop
mov
lcall
sbb
mov
andb
or
sahf
lock
test
jle
sub
add
jb
imul
and
xchg
test
mov
std
ds
stos
cli
push
jo
mov
or
loopne
pop
and
out
pop
mov
sarl
or
or
test
mov
mov
mov
pop
inc
jp
in
mov
adc
gs
dec
sbb
jb
rolb
insl
aas
ljmp
leave
stos
fistps
int
rep
xor
pop
jg
pusha
popa
or
daa
and
les
add
jecxz
jl
add
cltd
rolb
fcmovbe
or
sbb
xchg
int
add
xor
addb
fcoms
int3
mov
mov
jecxz
dec
sbb
outsb
pop
mull
inc
decb
push
inc
mov
movsb
mov
inc
in
cmpsb
loop
inc
ret
pushf
dec
aam
out
loop
add
and
fisttps
into
jg
xor
dec
mov
and
jbe
pop
push
push
xchg
mov
jl
or
fs
jmp
insb
cmc
ret
outsb
adcb
sbb
fidivs
cmpsb
test
add
stc
pop
adc
repz
and
ret
or
pop
push
test
sub
loopne
popf
jne
pusha
jmp
jnp
movsl
jle
icebp
sbb
clc
pushf
rcll
jns
sub
push
inc
leave
mov
scas
push
ds
lahf
push
call
outsb
lods
aaa
or
ja
xor
mov
orl
cmp
mov
fstpt
inc
cmpl
push
lds
loopne
imul
xchg
cmp
add
js
add
adc
addr16
pop
and
pop
push
int3
jb
add
pop
mov
jl
out
inc
icebp
dec
mov
cmp
add
push
dec
mov
mov
xchg
pop
sbb
pop
sbb
ljmp
xchg
das
pop
adc
dec
out
repz
xchg
xchg
sbb
fmuls
mov
lods
insl
add
pop
pop
pop
push
loope
push
push
sub
out
in
sti
mov
cmp
sbb
rorl
loop
adc
push
popf
cmpb
xor
and
push
jl
fnstcw
jecxz
cmp
pop
fisubs
imull
xor
adc
cmc
push
push
imul
pop
push
inc
stos
jg
jmp
jge
rol
mov
push
xchg
or
movl
decl
enter
mov
mov
mov
mov
mov
adc
loop
mov
je
mov
lods
jl
out
xor
cmpsl
addr16
iret
shl
sub
lds
jo
mov
cmp
xorl
mov
cmpsb
movsl
mov
fdivrs
xchg
mov
cli
shrb
insl
popa
jmp
out
jg
and
dec
testl
pop
inc
jae
rcll
iret
mov
bound
int
xorb
xchg
mov
movl
mov
ljmp
add
jbe
jge
pop
iret
lods
cmp
sub
jge
cmp
fisttpl
aam
jl
adc
shrl
jb
dec
jae
ljmp
and
jno
mov
and
push
mov
sarb
adc
add
mov
mov
movsl
mov
decl
adc
in
lret
mov
in
mov
sub
cmp
cmc
mov
daa
mov
cmp
sahf
sbb
stc
adc
popf
adc
jle
fisttps
mov
aad
xor
std
mov
xchg
jno
fldt
testb
adc
mov
icebp
adc
sbb
das
or
mov
mov
mov
or
enter
and
jle
dec
push
cmp
out
iret
cmc
fmuls
cmc
jbe
sub
fldl2t
mov
addb
aas
sbb
fs
mov
repnz
sahf
sbb
push
dec
pop
sub
xchg
mov
cli
mov
push
mov
cmp
and
adc
mov
pusha
mov
add
int
sti
inc
xchg
dec
sbb
mov
xor
lock
mov
test
mov
push
push
jmp
cmpsl
pop
in
sub
mov
ja
popa
clts
xchg
adc
mov
scas
fldt
jne
ja
cmp
out
dec
ficompl
scas
add
out
inc
rcrl
add
aam
push
sbb
das
cmp
add
insl
sahf
sti
inc
iret
fcoms
lock
movsb
inc
adc
fisubs
fstps
and
and
scas
jae
mov
das
aas
dec
enter
sub
in
enter
jmp
fbld
adc
mov
out
arpl
repnz
inc
cmp
cwtl
sub
jl
and
out
mov
insb
das
shl
popa
push
xchg
testb
mov
lret
mov
fsts
dec
push
dec
adc
mov
lods
xor
xchg
fadd
enter
push
scas
pop
sub
add
imulb
jmp
loopne
push
mov
push
pushf
mov
mov
sub
mov
testb
test
pop
out
rorl
pop
addr16
hlt
mov
repz
dec
or
scas
imul
je
lahf
mov
adc
push
xor
mov
pop
leave
mov
enter
inc
lock
or
test
jg
sub
pusha
sub
dec
lock
cmp
xlat
jge
xor
fcomi
sbb
cmp
test
add
in
imul
xchg
xor
pop
inc
jo
fldcw
ljmp
or
js
and
loope
jb
cmc
bound
test
loope
or
adc
sub
aas
adc
cmc
leave
aad
sbb
mov
add
push
mov
jno
out
arpl
lock
addl
and
das
roll
or
jo
pushf
mov
mov
dec
cmp
adc
lret
lcall
mov
mov
les
fs
mov
mov
xor
aam
shrb
dec
sub
inc
lock
adc
mov
mov
in
add
jl
add
loopne
push
mov
sub
adc
inc
cwtl
jnp
in
inc
adc
sbb
ljmp
mov
pop
cmp
cmp
add
es
or
cmpb
xor
movsl
sub
pop
push
insl
iret
push
xlat
dec
pushf
imul
cltd
cmp
dec
shrl
ret
movsb
mov
sbb
leave
or
mov
adc
lea
mov
adc
or
xor
out
push
add
pusha
rcll
jp
ficoms
dec
out
loope
sbb
mov
push
jo
mov
out
dec
lret
xor
shrb
jl
pop
pop
push
lea
or
enter
dec
ljmp
and
out
and
push
loop
adc
flds
sbb
inc
ss
adc
xlat
scas
leave
dec
push
fwait
pop
lock
mov
push
pop
xor
clc
das
adc
and
mov
into
mov
add
enter
cwtl
mov
xor
scas
add
lcall
out
or
push
pop
adc
xchg
add
pop
jo
test
outsl
cmpsb
roll
cmp
int3
add
sbb
inc
imul
adc
adc
cs
rorb
mov
xchg
or
adc
mov
xlat
clc
mov
sbb
bswap
pop
fcomi
ret
mov
popa
popf
mov
jbe
fwait
mov
movb
jecxz
dec
push
adc
sbb
xchg
mov
test
push
jbe
out
and
mov
lds
and
loopne
xor
pop
scas
xchg
adcl
inc
call
xor
rolb
fs
ljmp
xchg
insb
mov
inc
test
ljmp
sbb
jl
lds
loop
pop
xor
out
dec
lea
daa
jecxz
dec
mov
ss
aam
cwtl
mov
fldenv
mov
and
fucomip
xor
lods
and
and
sub
orl
into
sub
fisttps
cltd
int
clc
xchg
adc
xor
daa
mov
clc
mov
in
pop
and
and
mov
ja
cmp
repnz
xchg
jo
popf
push
fsubrp
add
in
cmpsb
push
stos
and
les
mov
xchg
and
xor
and
jmp
adc
sarl
js
add
pop
pop
scas
out
dec
test
lcall
rcll
into
mov
mov
mov
mov
dec
pop
mov
mov
sbb
cltd
fdivrs
xor
rolb
add
clc
or
arpl
rorb
popa
pop
jl
push
pop
or
jecxz
stos
lcall
shlb
mov
sti
cmp
fadds
mov
mov
jecxz
mov
pop
push
jo
pop
push
sbb
scas
or
in
xchg
xchg
ret
dec
dec
fistpll
jne
jno
adc
pop
aam
xchg
mov
xchg
enter
push
lock
popa
xor
popf
repz
push
data16
mov
push
or
inc
shl
fwait
or
es
jl
int
or
inc
xchg
xchg
jae
adcb
aad
pop
std
inc
loopne
and
sub
add
out
addr16
sahf
loop
jno
push
divb
and
repz
outsl
xchg
dec
fcomps
lahf
adc
lret
repz
and
ljmp
rep
adc
push
pop
adc
mov
dec
dec
sub
iret
dec
cmp
mov
xor
in
or
xchg
inc
inc
test
call
pushf
lret
hlt
iret
je
adc
mov
mov
ret
popa
jo
cmp
imul
mov
or
xchg
push
xchg
mov
xchg
nop
jmp
cmp
jne
int3
mov
push
xchg
add
mov
rorl
add
adc
ss
cmp
dec
jl
dec
repz
pop
idivb
fs
cmp
subl
aaa
insb
aas
mov
lahf
fmulp
dec
sub
push
mov
sub
fxch
jp
pop
imul
jmp
mov
sub
mov
subl
dec
pop
add
cmp
cmp
or
dec
xor
fs
push
push
push
negl
punpckhdq
cmp
xlat
leave
mov
inc
out
mov
icebp
pop
sbb
mov
lret
adc
push
lods
jle
and
stos
mul
jge
push
mov
mov
adc
mov
push
cmp
loopne
xor
lock
mov
xchg
mov
push
push
inc
lea
or
pushf
in
loope
lds
call
clc
and
add
out
fnstcw
fstp
sub
mov
or
bound
pop
dec
into
adc
fnstsw
lock
insb
roll
bound
push
sub
sub
pusha
mov
adc
lods
hlt
add
aas
xor
sub
xor
dec
xor
jbe
xor
add
mov
lods
or
push
repnz
push
addb
lods
push
push
loope
mov
sarl
mov
icebp
pop
jmp
jns
insl
mov
addr16
mov
or
les
xchg
insb
mov
xchg
jno
aaa
mov
mov
add
lret
jecxz
movsl
stos
mov
push
inc
dec
adc
xchg
jbe
and
mov
pop
test
xchg
negb
mov
stos
add
pop
add
in
fld
inc
es
and
outsl
repz
mov
cs
mov
xchg
xchg
test
cmp
sub
jle
iret
dec
lcall
sbb
shlb
mov
mov
aas
cmp
jg
int3
or
clc
xchg
sbb
cmpsl
enter
in
loopne
push
cmpsb
fisubrl
or
shlb
xor
repnz
xor
mov
cld
rsm
mov
or
push
jbe
clc
sub
jmp
test
pushf
dec
lret
jb
fs
pop
in
push
mov
fadds
movsl
lock
sar
dec
fwait
shlb
inc
mov
enter
and
dec
add
adc
addr16
mov
xor
push
pop
xabort
cmp
out
jns
push
xor
pushf
pop
outsl
psubsw
popa
sbb
mul
push
test
jecxz
ljmp
cmpsl
das
add
pushf
pop
pusha
xor
mov
pop
push
dec
mov
pop
dec
ds
ljmp
add
sti
add
dec
mov
cmpps
and
push
inc
test
enter
std
test
fidivs
ret
loop
leave
mov
insl
adc
fcmovu
ret
inc
outsl
pop
int
popa
inc
and
ret
cmp
je
or
pushf
xchg
xorl
repz
adc
popf
jg
gs
adc
neg
add
push
xchg
ja
loopne
sub
ret
dec
clc
insl
push
pushf
aam
jg
push
imul
and
add
lods
nop
sbb
pop
jp
and
mov
sub
sbb
mov
cmp
mov
xchg
mov
pop
push
insb
push
adc
into
call
movsl
cmc
push
jg
mov
add
lcall
sub
xor
push
dec
jbe
push
dec
sbb
push
push
nop
push
adc
sbb
mov
mov
xchg
testl
jbe
mov
mov
sub
adc
not
jmp
pop
loope
cmpsb
sbb
int3
inc
push
cli
stos
mov
clc
ret
bound
mov
mov
insl
lret
inc
mov
xorl
mov
movsb
ret
daa
mov
xchg
push
push
and
imul
ja
xchg
repnz
imul
lds
and
and
out
sbb
cld
inc
jmp
push
cltd
fyl2xp1
stos
scas
add
arpl
cs
loopne
sub
mov
outsl
test
jge
push
add
jge
or
pop
mov
dec
fldt
ret
sbb
imul
sub
loope
sbb
mov
push
clc
mov
push
sbb
xchg
or
jge
insb
sub
cmp
inc
dec
dec
mov
mov
pop
imul
insb
notb
aad
jle
ja
test
shrl
fimull
scas
jb
and
push
dec
cmc
and
in
and
pop
imul
push
in
stos
mov
xchg
jae
stc
inc
mov
pop
adc
or
pop
nopl
jle
or
sti
sbb
cli
or
cmp
add
incl
cmp
inc
push
or
movsl
in
cmc
dec
push
insl
pop
popf
fbld
jbe
gs
push
in
xchg
cmp
lods
in
mov
sbb
les
xchg
inc
cmpsl
imulb
adc
dec
lahf
jne
fdivs
mov
dec
iret
jge
mov
fisubs
adc
into
lret
es
push
test
cmp
mov
mov
int
push
insb
mov
sbb
dec
mov
xchg
pop
mov
xchg
and
mov
jmp
scas
cmc
mov
pusha
mov
imul
xor
fstpl
sbb
fidivrl
mov
xor
sub
in
stos
push
adc
cli
add
mov
call
aas
loop
sub
dec
mov
out
shlb
test
mov
stos
jbe
nop
inc
fadds
xor
pushf
mov
das
shl
mov
push
pop
repnz
jp
mov
push
fstl
lods
mov
arpl
mov
fs
in
inc
int3
jmp
push
jnp
pop
push
push
dec
pop
int
cmp
ret
mov
sub
lahf
or
lock
mov
push
xor
div
fiaddl
mov
dec
sbb
fnstcw
div
nop
repnz
loop
shll
dec
test
mov
push
outsl
jbe
rcll
push
ds
jnp
jp
or
sbb
add
mov
sbb
mov
and
jns
mov
jae
jp
sub
flds
rcll
pop
inc
add
mov
jl
inc
hlt
repz
dec
push
and
repnz
out
adc
sbb
movl
in
dec
adc
cmp
mov
jmp
cmp
ja
stos
inc
dec
cmc
fiadds
jg,pt
xor
pop
mov
xchg
pop
lret
dec
clc
pop
pop
nop
and
pop
popf
xchg
sbb
lock
fnstenv
mov
nop
xchg
je
dec
lret
mov
cmp
gs
fsubrp
cmp
adc
loop
cmp
xchg
pop
lock
mov
ret
xchg
mov
sub
and
mov
in
mov
xor
loopne
jp,pn
fistps
loope
mov
dec
lret
data16
ss
es
adc
lret
insl
pop
push
jp
cltd
subb
xor
ja
mov
push
mov
mov
mov
sbb
out
test
in
push
xor
lods
mov
mov
movsb
add
fists
sbb
adcb
mov
pop
jo
xor
mov
and
mov
nop
sub
pushf
push
jecxz
cmp
rorb
and
lahf
out
outsl
out
fninit
outsl
bound
movsb
iret
loope
jo
xor
inc
ja
xchg
gs
lea
jp
inc
call
jo
mov
adcb
pop
jp
ret
and
inc
mov
dec
inc
add
lret
sti
popf
jp
rolb
push
ljmp
mov
dec
push
cmp
pop
mov
cmp
cmc
enter
stos
cltd
cs
xor
outsb
push
test
pop
scas
pop
data16
mov
and
sub
rcrl
fadd
xchg
outsl
push
mov
pop
xchg
add
out
sub
xchg
pop
and
mov
push
cmp
popa
xor
rol
xchg
pop
pop
cbtw
jecxz
stos
inc
test
add
inc
les
xchg
aas
fldt
mov
pop
aam
mov
add
xor
call
cmp
inc
dec
cld
pop
test
add
xorl
mov
adc
xchg
icebp
adc
and
jg
cs
test
aad
push
cltd
fs
test
mov
imull
push
push
push
fcompl
cmpsb
jmp
hlt
add
repnz
add
and
lahf
add
stos
xchg
xor
icebp
mov
in
jle
jo
mov
cmp
subl
push
js
sbb
outsb
mov
jl
rol
mov
imul
loope
call
xchg
push
ficoms
dec
adc
push
xchg
jae
pusha
out
enter
or
aas
push
shll
adc
xchg
jle
arpl
sbb
sub
xor
ret
pop
fbld
xor
andl
cltd
push
push
cmp
add
pop
ss
and
xchg
test
in
sub
sbb
in
imul
outsb
adc
out
mov
jecxz
shrl
dec
aaa
dec
xor
ds
pushf
jmp
or
std
jnp
pop
cli
pop
sub
xchg
stc
sbb
movsb
repz
inc
fisttps
rclb
dec
pop
imul
repnz
fsubrs
iret
and
int
repnz
mov
repnz
dec
jl
clc
je
pusha
adc
cltd
jnp
test
lods
push
shll
or
push
mov
lods
adc
and
pop
adc
mov
xchg
lahf
outsl
fs
in
iret
mov
sub
and
pop
pop
dec
std
sub
shl
jnp
movsl
or
jle
into
push
push
adcb
jo
loop
insb
popa
pop
mov
mov
stos
dec
test
jns
xor
jbe
pushf
sub
push
jmp
faddl
push
pop
fs
add
das
inc
arpl
jae
adc
adc
mov
arpl
pop
xchg
push
cwtl
hlt
test
xchg
sub
nop
fwait
add
sub
jecxz
out
ffreep
lahf
push
push
repz
ds
sub
and
adcl
adc
push
idiv
in
or
icebp
add
into
jl
repz
jo
fnstenv
fs
iret
mov
pop
rcll
sbb
mov
into
pop
sub
or
sbb
jmp
sarl
add
adc
dec
aaa
jge
ss
xchg
mov
add
outsl
adcl
mov
xchg
or
sub
fsts
ljmp
js
inc
lcall
xor
pop
jg
mov
shrl
aaa
lods
xchg
jg
cli
imul
push
xchg
repz
movsb
cld
jbe
xor
fcomp
cli
dec
inc
ficompl
decl
mov
xor
test
inc
loopne
mov
cltd
jbe
enter
cs
mov
mov
daa
and
mov
fsubrs
or
or
rcll
outsb
leave
rclb
sbb
pop
ja
lock
dec
or
adc
movsl
jp
imul
stc
inc
inc
outsl
loopne
and
jle
jg
jb
or
in
mov
ss
and
and
pop
mov
int
sub
lcall
sub
lahf
push
dec
inc
not
test
rcrb
jnp
fwait
lods
inc
mov
insb
shrl
push
cmp
and
cs
mov
fiaddl
mov
inc
xlat
arpl
mov
push
call
add
add
or
jo
lock
out
arpl
xlat
lods
push
scas
jb
add
sbb
insb
dec
xor
cltd
mov
jo
rolb
neg
jp
repz
mov
mov
scas
adc
jmp
mov
daa
lahf
flds
mov
inc
jno
insl
shl
test
adc
gs
repz
test
daa
int3
stc
aad
xchg
cmp
into
mov
pop
mov
fs
sub
repnz
cltd
cmpb
dec
call
sbb
test
lds
adc
xchg
sbb
push
jo
movsl
stos
pop
lcall
insl
sub
mov
in
add
cmpsb
iret
pushf
cmp
cmpsb
pop
mov
mov
mov
stos
jo
outsb
arpl
or
jno
jge
es
pushfw
cmp
push
sti
out
sub
es
adc
rorb
test
and
add
fdivl
mov
sub
dec
and
mov
mov
std
mov
push
mov
and
mov
inc
cmp
cli
jb
xor
push
pop
repnz
cmp
add
add
pushf
push
adc
lahf
sbb
fwait
xchg
xchg
cli
mov
or
mov
clc
mov
mov
jo
add
mov
hlt
in
sub
pop
cmc
inc
call
repz
cld
pop
mov
jno
loope
cli
mov
sbb
and
mov
sbb
inc
stos
xor
sahf
or
sub
jns
enter
lods
mov
or
das
mov
and
push
xchg
or
ss
jo
test
jl
adc
clc
fsubrl
jns
in
dec
push
stos
movsbl
and
dec
outsl
sub
mov
sti
inc
shr
mov
pop
inc
stos
adc
mov
mov
inc
movsl
cwtl
outsl
subb
into
push
cmpxchg
push
dec
xchg
add
jmp
add
fcomps
mov
or
sbb
fwait
pop
add
push
pop
not
ljmp
std
outsl
mov
roll
in
xchg
xor
in
pop
fwait
std
mov
insb
adcb
jg
and
popf
and
dec
sub
call
dec
mov
jmp
jle
scas
pushf
jnp
mov
mov
push
pusha
adc
xchg
testb
idivb
dec
mov
xchg
adcb
stos
adc
jp
mov
sarl
xor
sub
shl
push
inc
xchg
icebp
inc
addr16
sbb
mov
mov
ret
pusha
xchg
movw
scas
movsl
push
push
cmc
stc
scas
aad
aam
test
les
lcall
arpl
xor
or
xchg
or
xchg
aam
push
std
cmp
mov
or
mov
int3
mov
and
adc
mov
inc
ds
xchg
rolb
fwait
xchg
mov
dec
adc
test
sub
pop
push
mov
mov
pop
aaa
or
mov
cmp
divb
rorb
xchg
adc
adc
lcall
push
rcll
fwait
mov
aaa
into
test
sbb
outsl
jecxz
pop
ret
jecxz
ror
loop
adc
sti
js
mov
gs
insb
xchg
outsl
clc
loopne
out
adc
sbb
mov
and
clc
sti
xor
out
mov
scas
sahf
bnd
dec
and
and
mov
inc
ds
addb
mov
mov
adc
jmp
mov
or
mov
rcrl
mov
in
nop
cltd
das
sub
es
movsl
push
fcmovb
push
fsubr
cmc
push
fstl
adc
mov
dec
enter
clc
xchg
not
int
jnp
mov
in
leave
mov
cmp
lods
in
rolb
push
pop
loop
mov
lahf
in
adcb
push
cmp
imull
xor
mov
lahf
aas
pop
sbb
push
leave
cwtl
jo
pop
lcall
ficompl
push
lahf
in
stos
add
js
aas
das
inc
sti
dec
fldenv
push
cmp
pushf
sub
push
popa
mov
rclb
aas
shlb
mov
fs
mov
cld
or
jbe
lcall
dec
xchg
daa
adc
repz
hlt
jle
mov
mov
stc
gs
jmp
adc
adc
inc
imul
cmp
push
movsl
sub
push
ja
add
loopne
jae
imul
jecxz
xor
fwait
pop
sub
scas
hlt
jmp
cmpsb
cmp
ja
test
add
mov
mov
cmp
inc
pop
mov
sarl
insl
jbe
mov
repz
add
shrb
jl
and
daa
mov
into
and
and
fidivl
inc
cmp
push
shl
js
push
mov
sbb
imul
inc
ret
aad
mov
addr16
cltd
stos
mov
xchg
inc
push
cmp
pop
push
xorps
inc
push
lds
test
dec
lret
add
mov
mov
out
outsb
mov
in
aas
and
scas
mov
insb
jg
mov
mov
push
mov
in
pop
and
mov
ret
xchg
das
mulps
mov
dec
jnp
into
fbld
movsb
lret
out
xchg
pusha
or
or
and
pop
das
inc
cmc
in
loop
shr
das
cmp
popa
fucom
or
sbb
insl
test
bound
stc
mov
mov
mov
mov
dec
sbb
fisttps
sbb
xchg
stos
dec
xchg
test
push
jmp
out
and
xchg
pushf
call
dec
inc
es
push
cmp
repnz
mov
inc
gs
cltd
pop
mov
xor
cwtl
xchg
cmp
jp
jle
add
ja
out
mov
cmc
push
movb
inc
mov
js
cmp
jl
lret
push
mov
mov
pop
lea
fmulp
pop
imul
adc
jo
dec
mov
imul
ficoml
frstor
test
xor
sub
aam
dec
arpl
roll
mov
adc
jp
cld
loopne
daa
stc
je
xchg
pop
mov
out
fidivs
filds
aas
cmp
fisubrl
jl
xchg
xlat
add
lret
adc
adc
jnp
es
lret
fcoml
xor
mov
dec
mov
fmull
dec
gs
xchg
mov
or
int3
mov
adc
adc
sub
rolb
pop
roll
push
pushl
fmul
test
sub
jecxz
inc
xlat
mov
jg
mov
pop
repnz
add
movl
mov
leave
xor
cmp
push
pop
dec
adc
out
push
aam
test
mov
jle
dec
loopne
inc
jae
and
xchg
add
mov
mov
mov
enter
and
fimull
in
insb
inc
cwtl
in
inc
sbb
xchg
add
or
lock
aam
out
xor
shlb
fwait
xchg
outsb
fdivr
fcomip
divl
xor
push
mov
not
fidivl
lret
push
rorb
sti
cmpsb
pop
lcall
pop
add
dec
popf
dec
repnz
stos
fadd
fimuls
daa
repz
sti
or
mov
test
push
pop
loope
push
inc
bound
pop
push
mov
repz
mov
sub
sbb
std
out
dec
add
lea
idivl
sbb
cltd
je
cltd
xor
pushf
test
pop
int3
mov
aas
xlat
cmc
mov
lahf
adc
jg
repnz
push
int3
mov
jecxz
dec
push
fistps
xchg
mov
add
in
pop
jle
sbb
nop
xor
dec
in
dec
aas
inc
push
test
dec
mov
mov
cmp
stos
dec
cmp
mov
pop
pop
mov
mull
jmp
mov
arpl
or
ret
mov
push
push
jp
pop
dec
out
xchg
sub
xchg
punpckhwd
xor
mov
ja
aam
repz
push
cmp
std
ja
inc
mov
movsl
adc
dec
sub
xchg
push
cmpb
add
mov
stc
pop
cmp
xor
inc
or
aad
movsl
sbb
sti
outsb
adc
mov
cmpsb
loop
movsl
fucom
mov
cld
int3
and
rorl
ret
insl
decl
sub
xchg
xorl
bound
sahf
popa
loop
cli
cmp
fisttpl
shrl
movsl
pop
push
xor
mov
mov
shlb
sbb
repz
fdivrs
test
adc
test
dec
outsl
xchg
sbb
mov
xbegin
jl
nop
movb
xchg
pop
mov
push
add
pop
add
cmp
lods
out
test
xchg
sub
push
inc
inc
enter
fcoml
dec
pop
xlat
and
xor
popf
cmpsl
jp
dec
addr16
mov
hlt
adc
pop
cmp
orl
mov
std
add
jno
ljmp
icebp
jl
lock
push
add
ja
in
or
out
mulb
xlat
add
imul
sub
adc
outsl
or
mov
jae
cmp
mov
cltd
mov
xchg
jle
leave
mov
outsl
mov
call
sub
lea
pushf
ds
fimuls
das
jb
andl
fnsave
dec
jb
test
cld
cmp
out
out
adc
cmp
mov
int
xchg
and
ja
push
xor
arpl
nop
leave
js
fmull
jnp
sub
fwait
out
enter
es
xlat
ljmp
mov
fidivl
mov
xorl
and
dec
insb
aam
adc
jb
outsl
popf
sti
push
jl
in
and
or
sub
jl
push
cmpsl
add
cmp
sbb
aad
mov
mov
dec
lock
push
clc
adc
pop
mov
mov
fwait
inc
div
pop
pushf
push
sahf
stos
xchg
mov
fldl
pop
adc
sub
mov
andb
cli
jne
sahf
loop
and
js
mov
lods
add
shlb
mov
inc
xchg
push
mov
movsl
jg
xor
mov
jbe
ds
sbb
cltd
les
movsl
and
cmp
fwait
jne
jne
arpl
inc
fisttps
movsl
sub
mov
hlt
and
sub
sbb
xor
xchg
test
add
push
adc
mov
dec
and
aam
push
mov
adc
lds
cmp
push
cmp
sbb
daa
pop
xor
mov
test
test
add
in
jae
mov
das
xchg
lds
push
mov
mov
xchg
mov
addr16
xor
mov
cmp
lods
shrl
in
lcall
pop
xchg
pop
dec
lea
cmp
out
out
fucomp
push
and
fimuls
dec
fmuls
sbb
test
fs
jmp
out
xchg
push
xchg
ret
adc
lret
clc
add
enter
mov
test
cmc
test
pop
xlat
cld
mov
pusha
pop
outsl
fisubrs
push
loope
idivl
push
dec
pushf
in
mov
xchg
xlat
push
mov
rcll
rorl
cmpsb
push
cmp
and
cmpsl
push
inc
mov
mov
push
mov
aaa
add
mov
adc
sub
mov
test
mov
scas
test
out
jbe
or
lock
jl
roll
pusha
sub
dec
push
sbb
mov
mov
pop
inc
jmp
in
fsubs
push
xlat
pop
adc
cmp
pop
push
insb
shrl
int
cmp
pop
mov
xor
jae
xchg
lods
mov
andb
push
jae
inc
repnz
mov
ss
fcomip
jge
jnp
arpl
int
sub
xchg
ret
test
jns
xor
jo
and
mov
cmp
cmp
dec
scas
pop
cmp
lock
fcompl
xor
pusha
xor
test
fisubrl
gs
push
xor
mov
jnp
mov
scas
gs
scas
hlt
shlb
sti
outsl
cmp
sub
cli
inc
cmpb
fcmovne
pop
ljmp
mov
pop
inc
shl
sbb
inc
popf
mov
mov
add
push
push
test
inc
inc
add
sub
mov
mov
loopne
inc
inc
push
mov
push
out
jns
jmp
fistpl
es
cwtl
and
mov
stos
push
pop
or
add
div
stos
dec
pusha
add
lods
sbbl
cmp
mov
jns
dec
lret
sub
int
loopne
cwtl
jb
mov
lcall
xor
rolb
stos
enter
jae
cwtl
subl
inc
mov
push
in
aad
enter
hlt
ja
adc
sbb
sbb
dec
std
inc
sub
lret
dec
xchg
xchg
or
pop
popf
push
aas
int
aaa
enter
and
mov
xor
sbb
push
push
stos
pop
jle
int3
sbb
push
movsl
das
add
xchg
or
or
pop
stos
ror
jae
test
mov
adc
xchg
ja
push
ficoms
movsb
insl
test
add
loopne
fisubs
jbe
repz
wrmsr
push
cmpsb
movhps
int
fsubl
sbb
shlb
mov
sub
inc
mov
insb
inc
dec
mov
sub
jnp
xchg
add
sbb
arpl
mov
push
int
bound
test
shl
push
jmp
sbb
cltd
add
sub
arpl
adc
pop
xor
jo
ret
je
stos
adc
lret
stos
ss
jo
cs
and
pop
imul
rclb
je
js
dec
in
lea
std
or
mov
std
pusha
inc
out
and
and
or
sbb
rclb
mov
pop
cli
fisubrl
insb
lea
aas
insb
pop
lahf
push
pop
jno
cmp
sti
cmp
and
pop
xchg
push
test
or
scas
pop
insl
mov
in
jbe
std
out
jo
sbb
dec
add
cmp
xchg
push
es
movsb
stos
aaa
jo
add
lret
add
dec
xor
movsb
jp
test
jge
add
push
jg
movsl
mov
jae
imul
add
aaa
neg
out
xchg
jnp
scas
or
imul
pop
sar
mov
fistpll
xchg
push
fcomps
or
sbb
adcl
loopne
pop
insb
sub
ja
pop
sub
sub
cltd
and
shlb
push
mov
lock
mov
cmpsl
les
add
cli
mov
jle
jno
mul
jle
inc
cmp
fidivrl
stos
lret
dec
and
mov
and
ljmp
enter
movsb
and
imul
scas
mov
addr16
push
push
rolb
mov
inc
sub
loope
faddl
ret
pop
out
push
sub
mov
leave
sub
push
mov
xor
fsubs
imul
dec
scas
mov
xchg
rorb
inc
mov
repz
hlt
lret
fisubrs
push
fwait
xor
stos
les
dec
mov
out
shr
dec
xchg
test
jbe
fsubp
mov
stos
adc
mov
dec
out
pop
divb
call
or
sub
fwait
xchg
or
pop
in
lret
sbb
gs
fwait
or
ss
pushf
sub
pop
pop
xchg
push
pop
cmp
add
lock
mov
mov
mov
push
mov
js
sbb
fisubrl
shl
xor
mov
cmpl
loope
ror
loop
hlt
jb
imulb
pop
shl
sub
in
outsl
xor
add
cmp
test
xor
jmp
xchg
pop
lods
jge
sbb
repz
sub
enter
adcb
xchg
pop
or
bswap
push
sarl
fimull
into
mov
imul
dec
shrb
and
xchg
in
les
mov
xchg
sbb
lods
sbb
scas
xchg
arpl
xchg
sbb
push
call
lock
fwait
sbb
sbb
inc
scas
les
or
shlb
mov
roll
mov
stc
lahf
scas
ret
out
out
mov
enter
dec
lret
adc
out
pop
push
jb
sahf
test
cli
scas
ss
test
sub
xchg
dec
push
or
lcall
daa
inc
inc
xor
test
cmpsl
mov
ret
xchg
push
pop
fwait
add
mov
jae
push
xor
pushf
sub
lret
add
mov
xor
mov
mov
push
test
mov
push
push
lret
scas
xor
loop
inc
sti
addr16
popf
scas
pop
jg
xchg
in
jb
int
xchg
inc
pop
xchg
hlt
jge
fsubl
cmp
add
nop
lret
push
outsl
inc
in
call
cmp
sarb
jne
movsl
mov
inc
insl
pop
aaa
loop
cli
ds
lods
loopne
or
mov
sarb
enter
int3
and
testl
jno
xor
mov
cmp
dec
dec
dec
mov
in
rcl
out
scas
fidivl
icebp
in
sbb
je
testb
aaa
mov
inc
lea
lahf
xorb
push
dec
mov
ret
jp
sub
pop
imul
movsb
iret
aas
fmuls
test
insb
in
push
xchg
cmpsl
outsb
or
sbb
in
popf
mov
call
pop
pop
inc
bound
fistl
jmp
fcompl
mov
xchg
and
ret
xor
add
cmp
ret
popa
lds
inc
cld
sbb
lds
ret
outsl
cwtl
xchg
mov
lock
faddl
int
mov
cmpsl
ror
mov
fmuls
mov
sbb
inc
repnz
out
ret
mov
xchg
xchg
push
jae
mov
xlat
imul
clc
dec
xor
lea
ss
enter
push
or
bswap
out
cmp
push
subl
mov
mov
or
xor
mov
icebp
sub
arpl
aaa
push
outsb
sti
dec
bound
lcall
cmp
inc
orl
int
sbb
mov
or
mov
lcall
jo
loope
stos
or
pop
mov
mov
test
mov
pop
insb
push
es
mov
sub
xchg
sub
test
sub
jae
or
jbe
pop
lock
push
insb
sar
inc
sub
add
jl
stos
mov
je
dec
mov
mov
ja
je
leave
and
jne
dec
lret
lods
rcrb
ret
sub
test
or
mull
ret
pop
call
out
fistps
loopne
push
aas
xor
hlt
hlt
jp
push
in
mov
xor
rcll
cmc
jns
das
pop
jae
jae
stc
xchg
inc
mov
in
popa
sbb
mov
repz
adc
divb
leave
inc
mov
xor
fdivrl
cmp
data16
add
add
mov
push
push
lret
sub
sbb
arpl
pop
or
pop
sti
mov
and
clc
push
jne
sbb
jp
mov
fldt
leave
stos
into
pop
mov
or
mov
inc
sub
xor
xchg
pusha
imul
add
rcrb
dec
lea
ljmp
pop
sti
fsubl
and
pop
cmp
push
stos
lcall
fsts
cmp
push
ret
sbb
je
fs
jecxz
fsubrs
push
jo
jecxz
stc
pusha
mov
es
sub
inc
pop
sub
clc
push
jge
out
sti
lahf
lods
or
out
jbe
adc
push
aaa
cmp
xor
cwtl
fmuls
adc
fdivr
pop
mov
add
xchg
cmp
mov
and
xchg
je
cmp
inc
sbb
stc
xor
jle
loope
mov
outsb
cmp
leave
mov
lret
popa
lock
lahf
xchg
cmp
fcomi
xchg
or
adc
dec
mov
and
jnp
pop
ror
push
mov
xchg
sub
sti
cmp
lea
mov
cmpsl
sub
adc
in
aam
prefetchwt1
pop
lret
outsl
mov
xlat
bound
sub
pusha
xor
lcall
sub
leave
mov
xchg
mov
sbb
out
xor
dec
rcl
add
or
push
mov
shrl
sub
pop
movsl
mov
push
iret
cltd
sbb
and
popa
push
cld
ja
ficoml
inc
ret
nop
ficompl
cmp
adc
ss
xchg
test
or
movsl
mov
add
fidivl
jb
mov
pusha
leave
repz
add
inc
daa
push
enter
push
jns
mov
out
mov
aaa
and
sbbl
adc
rcrl
aam
inc
dec
fimull
das
ja
mov
xor
loope
ljmp
rol
cwtl
aas
mov
aas
rorb
addr16
shlb
sub
or
mov
insb
xchg
ficoml
add
dec
dec
fwait
adcb
jmp
add
cmp
incl
sarl
popf
cltd
ja
dec
sbb
mov
cmp
pop
or
sub
xor
loopne
jno
imul
fstps
fstp
pop
mov
decb
and
nop
pop
jo
lds
out
cli
push
push
ljmp
mov
pop
xchg
hlt
ret
in
sub
push
pop
ret
or
push
ret
imul
dec
sbb
sbb
dec
and
mov
or
sub
jecxz
or
inc
mull
or
gs
xor
push
jae
mov
data16
lcall
cld
mov
push
cltd
jae
sbb
mov
stos
push
mov
or
push
push
or
jns
xchg
mov
in
jge
push
lock
stos
in
shl
pop
sub
popa
push
push
jle
mov
ja
jnp
aad
jne
fldl
mov
adc
add
out
aas
lahf
shlb
test
lret
xchg
dec
or
cmp
shll
ss
pushf
insb
cld
pop
pop
dec
divl
adc
mov
sbb
mov
push
hlt
xor
outsb
cld
xor
dec
inc
adc
push
xchg
cmp
mov
jge
cli
xor
xor
and
mov
adc
adc
std
push
push
sub
bound
popa
pop
aaa
fstpl
jno
xchg
out
xchg
ss
das
xchg
dec
push
or
popa
inc
sub
aam
bound
cmpl
adc
mov
or
mov
xorl
lret
das
sahf
out
mov
mov
mov
mov
sti
js
ret
andl
in
std
fidivs
adc
cmp
lret
ret
outsl
fdivr
inc
jb
pslld
dec
sub
dec
sbbl
xchg
jmp
or
aad
imul
pop
fdivl
pop
mov
daa
push
jecxz
inc
mov
in
mov
imul
or
jmp
popa
das
cmp
dec
aam
into
mov
rorb
adc
stos
mov
in
nop
arpl
or
mov
test
fdivs
dec
inc
inc
ret
scas
xchg
fwait
sbb
mov
cmpsl
fstl
inc
ja
push
lock
fs
cmp
je
xchg
xchg
mov
cmp
cli
mov
push
lods
iret
and
jmp
jo
xchg
int3
nop
ret
jo
dec
loop
in
pop
mov
subb
xor
xor
and
int3
and
fiaddl
pop
adc
mov
pop
jo
push
or
imul
cmc
mov
inc
or
jmp
and
mov
loopne
adc
jmp
mov
add
mov
xchg
stc
lret
ja
loop
push
push
inc
out
sub
ret
test
sub
mov
fsubrl
cmp
pop
xchg
sub
lahf
cmc
leave
imul
cmpsb
shl
add
xchg
sub
push
and
push
sub
sub
push
jo
movb
sub
in
sbb
inc
movsl
arpl
pop
inc
call
lea
in
jg
les
jo
fldl
jecxz
scas
sti
add
push
aam
sub
and
jae
clc
lret
nop
insb
stc
mov
cld
mov
cmc
or
rolb
sbb
mov
or
lock
insl
cmp
push
cwtl
xor
aad
das
test
push
cmp
push
xchg
xor
cmp
xlat
sbb
rcrb
mov
in
aad
adc
pop
add
ljmp
sub
daa
lods
dec
xchg
pop
imul
movsl
jns
add
or
test
into
cmpsb
into
xor
adc
int
enter
je
sub
insl
into
mov
je
lahf
mov
sahf
inc
movsl
push
cmp
sahf
lock
pop
add
xor
jb
sub
pop
cmp
cmp
mov
sbb
sub
stos
outsl
mov
mov
adc
dec
inc
jne
int
cmp
xchg
mov
jle
loopne
mov
js
data16
push
js
xor
xchg
popa
xor
push
push
out
aad
pop
aad
pop
mov
cmp
pop
cmp
sub
in
cmp
insb
fidivl
cmc
fcompl
and
xor
xchg
gs
cli
cmp
in
es
mov
call
jp
hlt
mov
stos
outsb
push
and
stos
insb
les
mov
jecxz
ffreep
xchg
imul
sub
mov
xor
stc
in
jge
and
xlat
dec
dec
cmpsl
out
mov
add
push
mov
out
jle
ss
sahf
mov
movsb
jecxz
or
mov
rorb
inc
pop
adc
mov
push
mov
ret
mov
jecxz
pop
push
stos
shrl
mov
add
mov
push
out
fmul
adc
mov
sbb
xor
int
mov
lcall
add
movsl
or
or
push
push
dec
mov
ja
out
jmp
jnp
test
jno
xchg
mov
ret
pop
les
insl
jp
mov
cs
hlt
add
mov
and
xor
jle
popf
dec
push
sub
mov
dec
lods
movsb
push
ds
xchg
push
xchg
movsb
in
jecxz
icebp
sbb
pop
jg
add
enter
jb
fwait
jno
ljmp
inc
and
pop
xor
iret
stos
or
jg
dec
icebp
enter
and
mov
hlt
shll
int
sbb
mov
rcr
and
jg
jbe
fidivrl
adc
pusha
in
aas
orl
sub
mov
arpl
push
dec
mov
jecxz
scas
mulb
sti
inc
out
cmpsb
mov
and
xchg
loop
mov
aam
cmp
fwait
or
pop
clc
out
movsl
nop
push
in
push
and
jo
or
push
and
hlt
xlat
stos
jmp
das
mov
inc
and
adcl
mov
lock
pop
push
inc
stc
ficoms
fnstsw
lds
mov
push
into
sahf
dec
jl
inc
popa
add
jno
mov
xor
lea
test
jne
ss
es
sahf
mov
fists
roll
sub
andb
cli
sbb
stos
sahf
loope
adc
jb
pop
shlb
cmp
fnstcw
sahf
ljmp
push
loop
mov
push
mov
insl
js
pop
fisubl
out
mull
js
jne
in
dec
scas
lret
sbb
push
inc
int3
int
repnz
cmpsb
xchg
jmp
inc
aaa
add
mov
sub
push
adc
test
sarb
insb
mov
div
scas
mov
xor
cmp
inc
js
ljmp
adc
gs
cmp
push
fcmove
test
scas
jl
inc
jb
mov
adc
in
je
pop
scas
pop
into
dec
pop
jmp
fimull
add
iret
mov
pop
xchg
dec
sbb
test
or
fisubrl
sub
adc
and
cmp
ss
popf
xor
ret
repnz
dec
mov
lods
adc
or
fistps
jae
cli
sub
jnp
subb
rcrb
inc
push
push
nop
jge
inc
cld
insb
ret
ret
in
test
test
shrb
xchg
sbb
add
lret
sub
xor
aad
cmp
inc
push
xchg
loope
push
loop
fwait
adc
adc
repz
rol
inc
scas
mov
pop
sbb
rolb
lock
movsl
cmp
adc
ret
inc
testl
arpl
mov
cs
dec
dec
sbb
lock
std
dec
inc
out
mov
jno
pop
mov
movb
and
sti
ja
ja
shl
sbb
add
cmc
addb
xor
divb
imul
add
jo
cmp
nop
or
in
cwtl
sbbl
es
add
arpl
aad
sub
in
divl
adc
ss
mov
fstpt
popf
xor
mov
leave
and
je
xchg
out
movb
mov
int
jb
iret
pop
jne
movsb
sub
dec
push
adc
push
cli
mov
arpl
lock
xchg
fdivrl
or
in
subl
xchg
es
stc
inc
rclb
cmp
aas
test
fists
filds
or
cs
xor
imul
inc
stos
and
xchg
xchg
xchg
lock
jl
jno
adc
fdivr
jno
int
xor
int
filds
or
sbb
testb
fimull
testl
popf
cmc
and
pop
sarl
mov
push
lahf
xchg
xor
pushf
push
and
pop
add
ret
pop
push
jne
je
jae
jo
jle
popa
test
repnz
dec
push
lods
iret
stc
iret
sti
sub
jae
inc
xor
sbb
sbb
mov
ss
mov
in
leave
stc
insl
insl
test
shr
xor
add
sub
push
xor
es
pusha
mov
sbb
xchg
lcall
mov
push
cmp
faddl
sub
ret
sbb
cmp
inc
adc
jns
jb
mov
xchg
negb
clc
inc
vmovq
testl
loopne
mov
icebp
adc
and
push
arpl
aas
sarb
rorb
psubd
mov
xor
scas
sub
mov
jp
sbb
sub
scas
push
mov
fidivl
adc
jecxz
pop
test
mov
fcmovnu
sbb
jbe
ja
cmpsl
scas
jo
cld
cmp
popf
rorl
dec
pop
sbb
bound
mov
inc
in
xchg
xor
and
sbbl
cwtl
pop
mov
or
mov
push
punpckhdq
rcrb
pushf
inc
mov
gs
scas
adc
jne
mov
add
cs
popa
pusha
movsb
or
int3
jle
or
add
rorb
repnz
lret
xchg
std
addb
lods
sub
dec
imul
xchg
cmp
sub
popf
icebp
push
adc
jge
and
icebp
sbb
outsl
mov
pusha
mov
repz
sub
outsb
subl
ss
testl
ljmp
mov
add
nop
out
aam
dec
insl
daa
js
adc
jg
out
lahf
clc
and
lock
pop
in
mov
sub
lods
add
jbe
push
aam
xor
je
jnp
jo
mov
sub
mov
clc
mov
out
shl
mov
insl
test
loop
mov
jne
xchg
mov
sarl
jp
mov
xchg
sbbb
leave
xchg
andl
pop
testl
enter
icebp
or
lds
popa
mov
call
je
xor
dec
fnstcw
stos
jns
xchg
ficoms
ds
in
xor
add
test
leave
test
pop
aam
in
push
leave
push
stc
lret
mov
or
lock
iret
in
jns
fimuls
add
push
cmpb
pop
jp
pop
cmpl
pop
jge
pop
inc
sbb
or
mov
adc
fisubs
jb
cmc
sub
jo
mov
mov
test
push
lods
lods
mov
lahf
lods
scas
inc
leave
lcall
add
pop
sti
pop
out
aaa
enter
cmp
jnp
dec
ret
mov
push
es
mov
cld
sub
js
mov
jnp
mov
aas
jb
pop
out
rcr
cmp
aaa
jo
sbb
jge
shll
inc
lahf
mov
pop
pushf
cmp
int
mov
mov
mov
ret
mov
in
cmpl
bound
jmp
pop
ret
jo
int
jno
mov
adc
add
into
dec
iret
aaa
aad
or
xor
test
and
imul
loopne
in
test
mov
sub
pusha
jne
loopne
or
lods
pop
repnz
stos
pop
dec
xchg
cld
jb
and
shl
out
fists
mov
sbb
insl
pop
nop
lods
sar
stos
scas
or
jge
in
jl
adc
inc
pop
test
cmp
sub
fisttpll
lahf
jl
popf
pop
clc
sbb
mov
lret
jno
ret
ret
loope
stc
cmp
loop
int3
push
decl
dec
xor
sbb
negb
cmp
scas
popf
mov
jg
nop
fwait
stos
lret
inc
in
icebp
xor
and
push
or
in
mov
ret
xor
aas
lds
push
bound
fwait
test
imul
mov
xor
cli
jno
jnp
mov
mov
gs
inc
pop
push
xchg
out
roll
imul
lcall
iret
sbb
repnz
stos
pop
jl
pop
xchg
out
scas
pop
pop
mov
jbe
xchg
lcall
call
sbb
push
jl
push
ja
iret
adc
pop
and
popa
clc
pop
cwtl
inc
mov
xor
lcall
mov
lods
and
sub
insb
mov
jmp
mov
push
rcrb
test
xchg
test
mov
mov
inc
sar
and
out
and
or
call
inc
mov
imul
cld
pop
sub
sub
shl
dec
xor
cmp
mov
add
cmp
xlat
repnz
pop
mov
bound
lea
nop
js
sti
out
cli
adc
das
cmp
sub
lock
push
int3
rcrb
popa
orb
fwait
xchg
mov
std
adc
xor
fistps
icebp
cwtl
addr16
add
lret
sub
and
dec
xchg
ret
push
add
or
pop
iret
jl
mov
pop
mov
xchg
out
outsb
push
test
rcrl
fldt
push
mov
mov
jo
xor
fcompl
push
gs
sub
out
fdivrl
pushf
clc
inc
lret
mov
pop
insl
pop
aam
sub
mov
add
xor
jmp
mov
ret
gs
fcomps
push
mov
es
inc
mov
aam
sub
pop
adc
adc
cmp
repnz
dec
aad
test
and
int3
fsubrs
sbb
outsl
jl
bnd
push
or
sbb
daa
pop
mov
gs
in
cwtl
ljmp
jae
aad
in
lcall
inc
int3
scas
int
data16
or
xchg
in
cmpsl
pop
insl
mov
sub
out
in
jo
in
inc
lds
test
sbb
push
int3
cmc
fucomp
add
add
push
incl
mov
fs
xchg
test
cmp
test
xchg
in
and
mov
cmp
in
add
nop
mov
ficomps
or
xor
cwtl
lock
adc
add
or
frstor
xor
jne
add
divl
cld
cmp
mov
lds
sub
int
cmp
xor
arpl
and
xor
subb
mov
das
mov
mov
flds
mov
cmp
mov
inc
movsl
aad
dec
decl
jae
lret
repnz
mov
pop
pop
pop
lock
and
mov
jp
adc
push
xor
jo
pop
mov
notb
ret
push
add
mov
push
in
sahf
jg
adcb
push
mov
jns
mov
popa
push
mov
stc
mov
test
loopne
mov
jp
les
repnz
lahf
pop
jnp
data16
repz
iret
mov
std
xchg
mov
push
andb
sti
aam
pop
int
xchg
mov
lea
lret
xchg
push
sbb
push
fmull
sub
imul
loope
jo
add
xchg
ds
mov
cmp
rorb
lock
jge
cmc
clc
xchg
je
xchg
mov
pop
data16
cmp
and
data16
loopne
aad
lock
ja
popf
pop
and
leave
xlat
int
repz
subb
out
je
and
mov
lret
nop
push
mov
js
lds
cltd
and
jne
dec
push
movsb
lret
or
std
inc
push
pusha
pusha
sbb
jecxz
fldl
subb
aaa
lods
stc
insl
ja
and
pop
pop
mov
mov
loope
jb
in
in
aaa
push
lret
ja
adc
nop
sbb
dec
xor
enter
leave
push
jns
sub
insl
adc
mov
subb
lods
bound
fcmovu
inc
lret
xor
imul
mov
mov
pop
roll
cltd
dec
sbb
and
movsb
sbb
andl
inc
push
fcomip
gs
push
lods
cmp
adc
jno
or
or
stos
and
leave
lods
shr
mov
ds
pushf
push
ret
out
fisubl
lods
not
push
or
or
mov
dec
jnp
or
lcall
pop
int3
xchg
clc
adc
xchg
popf
gs
stos
xor
push
or
push
inc
leave
dec
jmp
xor
scas
cld
ret
mov
dec
sub
pop
inc
mov
mov
lahf
mov
xor
cmp
aam
lret
push
fbstp
sarb
xchg
xor
pop
test
inc
adcl
addr16
xor
fisttps
icebp
or
dec
lcall
in
bound
push
out
int3
inc
sub
stos
push
mov
sbb
or
cli
mov
rcrb
stos
cmpb
add
mov
mov
into
adc
sub
jge
mov
orl
push
add
int3
jnp
popa
sub
loope
inc
aaa
call
les
xchg
arpl
sub
in
aam
andb
cs
and
mov
cld
popf
int3
xchg
xchg
daa
mov
add
and
pop
inc
stos
jb
pop
fidivs
pop
adc
sub
inc
push
inc
mov
cmp
sbb
jo
pop
movsl
adc
out
or
in
jbe
cmp
fcmove
add
fcmovnb
pop
ret
lret
fsubl
ss
jecxz
push
inc
cmp
add
push
jecxz
xchg
adc
or
setg
pop
mov
adc
mov
roll
cmp
icebp
mov
push
sub
addr16
lea
mov
jo
push
dec
pop
pop
cwtl
dec
in
ljmp
test
xchg
repnz
into
mov
mov
shl
inc
and
cmpsl
and
sbb
test
fistps
stos
xchg
test
repnz
cwtl
pop
clc
jecxz
stos
lods
imul
jb
lods
push
push
mov
dec
sub
cmpsl
xchg
push
sti
addr16
mov
jae
stos
test
nop
ss
negl
lods
lea
je
or
pop
out
loopne
mov
push
clc
jne
cld
adc
inc
test
mov
pop
dec
mov
add
inc
scas
pushf
dec
mov
pop
mov
cld
mov
xor
mov
mov
mov
push
loopne
mov
imul
xor
stc
lahf
jge
jg
pop
sub
lcall
add
and
cs
sbb
xchg
mov
jo
adc
cmp
sub
jns
mov
decb
scas
xor
lcall
push
dec
cmp
es
mov
aam
into
es
sti
pop
dec
xchg
cli
pop
movsl
in
push
fldcw
insb
mov
rcl
bound
lods
pop
aad
jl
lods
xchg
sbb
jmp
xchg
pushf
outsl
sub
xchg
xchg
pop
or
loop
cmp
push
icebp
rclb
xor
xor
ss
in
push
sbb
mov
aam
in
in
add
dec
cwtl
push
push
into
test
mov
xchg
inc
add
or
pop
inc
hlt
idivb
jns
movsl
mov
pop
mov
inc
jbe
loope
repnz
clc
sbb
in
xchg
popa
mov
mov
cmpsl
aad
mov
les
pop
es
out
or
dec
pop
jbe
test
adc
mov
imul
test
aam
push
sub
roll
xorb
sub
jecxz
sub
outsb
adc
xchg
xchg
cwtl
xor
shlb
cmp
mov
cld
add
repz
scas
rclb
aam
rcr
lock
outsl
cmp
insl
popa
mov
mov
test
and
cltd
fwait
or
xor
ss
cltd
mov
inc
inc
jbe
pop
leave
add
cmp
aad
dec
mov
xchg
in
fs
daa
shlb
push
push
fisttpl
cmp
lcall
shll
call
jecxz
push
aaa
or
cmpsl
or
stos
shrl
cmpsb
aad
and
adc
mov
imul
fcomps
repnz
pop
push
mov
clc
pop
or
cli
push
push
das
data16
test
xchg
ss
cld
ret
xor
adc
cli
or
out
mov
out
popf
mov
mov
subl
loopne
push
or
mov
dec
and
xchg
mov
mov
mov
cmp
cltd
add
ja
dec
stos
lret
inc
ret
mov
fwait
movsb
shll
outsl
push
repz
fwait
xchg
jno
jle
mov
filds
sbb
dec
sbb
push
mov
int3
out
cltd
adc
cmp
rcr
pop
jne
sahf
leave
mov
btc
imul
push
push
popf
xor
sbb
cmc
test
in
in
jecxz
cmpsl
sbb
fstps
das
dec
or
mov
and
inc
inc
adc
out
outsb
jnp
or
xor
stos
jmp
dec
xor
cmc
xor
daa
shl
and
mov
and
sbb
dec
xchg
stos
cwtl
mov
add
lock
testb
fiadds
ljmp
shll
ljmp
add
mov
cmp
cmpl
cmp
ds
or
cmp
outsl
mov
add
ss
adc
sub
pop
or
insb
xor
andb
ljmp
loopne
and
xor
xor
cmpsl
incb
iret
ret
fmull
pop
test
scas
xchg
mov
push
push
cltd
or
cltd
in
leave
push
jns
push
ret
lret
mov
cwtl
xchg
push
push
comiss
bound
out
hlt
xor
stos
mov
pop
or
rclb
lret
int
rorb
inc
nop
or
pop
mov
or
stos
jb
frstor
scas
iret
cmpsb
dec
vhsubps
pop
adc
xchg
fwait
sbb
fs
add
and
iret
xchg
add
lds
out
andb
std
stc
fisubrl
dec
enter
loopne
dec
movsb
inc
incl
les
cli
mov
and
cmp
movsb
xchg
call
jp
add
cmp
movl
jbe
pop
jmp
int
loopne
sbb
jl
lods
xlat
addb
xchg
inc
cmp
and
cmpb
push
lret
or
icebp
or
movsl
das
xchg
out
dec
repnz
test
xchg
loop
bound
jno
bound
cs
nop
test
mov
sub
jae
movsl
imul
stc
aad
mov
jo
xchg
mov
sub
into
test
imul
mov
mov
inc
pop
lods
mov
mov
mov
outsl
aad
mov
and
jle
cmc
les
push
shrl
enter
jnp
or
push
or
pop
ds
mov
push
cmpl
gs
and
or
lock
sbb
mov
stos
movsb
out
jne
es
lret
jb
aas
add
int
pop
push
pop
jbe
dec
js
adc
sub
mov
addr16
push
out
and
adc
push
or
inc
pushf
in
sbb
mov
pop
lods
std
push
mov
jp
and
cmpsb
cld
leave
les
push
mov
add
cmp
testl
xchg
mov
xchg
mov
stos
stos
add
inc
lret
subl
shrb
xor
xchg
in
lret
lock
imul
sbb
cmp
rcrl
ds
mov
es
clc
cmp
push
popa
sub
pop
jp
or
mov
shl
fistpll
loopne
xor
sub
dec
dec
jmp
aam
dec
sbb
mov
xchg
jg
jns
sti
or
pop
or
int3
clc
add
dec
test
scas
inc
out
push
leave
in
nop
shr
ja
mov
inc
dec
jecxz
lds
push
imulb
mov
imul
mov
out
cmp
pop
lock
int3
inc
out
dec
or
mov
vmovsd
adc
mov
and
xchg
or
mov
dec
cmpsl
mov
push
shll
hlt
int
sub
xor
fnstsw
shll
nop
push
lret
ss
xor
test
cmpsl
sbb
dec
mov
mov
cmp
scas
mov
fldenv
mov
mov
daa
orb
jp
sub
mov
push
push
mov
xor
xlat
push
imul
adc
xor
dec
pop
lcall
adc
inc
inc
fs
mov
aam
pop
jae
and
inc
mov
fcoml
stos
imul
stos
test
pop
jne
xor
mov
in
or
fs
andb
test
in
adc
jno
stc
mov
cwtl
dec
and
ja
mov
and
add
rorb
jg
ja
pop
ficomps
xor
jg
out
jns
mov
jne
inc
and
mov
cmp
lock
outsl
push
mov
mov
insb
iret
insl
xchg
jecxz
mov
push
ret
mov
push
jns
outsb
imull
pop
jb
movsl
or
dec
jmp
xor
add
mov
add
xchg
pop
sbb
ja
movsb
out
cld
cs
jne
ss
jnp
push
orl
rcll
mov
dec
pop
cmp
jno
inc
test
cmp
jnp
lods
dec
nop
push
mov
ja
hlt
fildll
add
jle
mov
je
xchg
pop
jnp
dec
xor
fidivl
jp
into
cltd
cmpsb
ret
outsb
mov
cmp
loope
xchg
and
add
les
shrb
in
rol
sahf
mov
hlt
cmpsl
mov
dec
jp
jns
fnsetpm(287
daa
js
sub
pop
out
dec
in
inc
mov
mov
mov
and
mov
mov
sub
jg
xor
sti
rorb
and
out
rcrb
cmc
add
adc
fisubs
cmp
inc
push
dec
pop
fs
sub
xchg
scas
add
movsl
stos
popf
cmc
pop
sbb
pop
data16
imul
xor
push
inc
jbe
push
divl
lea
cli
xchg
jmp
ja
fcmovbe
dec
in
jg
dec
pusha
cmp
loopne
push
rcl
mov
pop
sar
ja
xlat
imul
xor
sbb
inc
je
lret
loop
jecxz
rorl
imul
rorl
sbb
je
pop
add
mov
xor
sub
inc
cmc
ret
mov
cmp
mov
loopne
mov
push
mov
loop
stc
adc
mov
jns
mov
xchg
je
mov
ljmp
cmp
jle
jp
scas
dec
cmc
pop
outsb
lods
and
icebp
mov
adc
leave
jne
pop
test
sub
enter
stos
push
pop
cwtl
lcall
divl
mov
lret
adc
lea
je
cmp
arpl
icebp
dec
fiadds
adc
lahf
mov
push
push
fldt
push
cmp
idiv
push
inc
xor
cli
or
dec
jmp
addb
rcll
jmp
xorb
in
test
dec
notb
lods
push
push
pop
fsts
arpl
push
into
and
js
push
out
pmuludq
pop
add
addr16
repz
inc
test
rorb
movsb
lods
dec
daa
outsb
mov
pop
xchg
jb
mov
pusha
fbld
gs
cwtl
jmp
aaa
xchg
popa
test
or
push
dec
push
rcrb
out
call
cmp
and
jno
in
xchg
add
pop
push
jge
pop
xorl
xlat
cmp
ret
es
enterw
fs
dec
movsl
aaa
cmpsb
xor
scas
jl
push
xor
lock
clc
inc
addr16
adc
mov
sbbb
mov
mov
std
cld
mov
add
cmp
shlb
orl
mov
aas
inc
xchg
jge
cld
mov
mov
rcl
push
jbe
mov
fnstcw
mov
filds
push
test
inc
dec
jns
xchg
cmp
insl
rcrl
cmpsb
jae
jl
or
cltd
hlt
test
dec
pop
mov
xchg
cmp
push
jle
jno
adc
sbb
loope
sbb
dec
sub
inc
sbb
clc
inc
stc
lret
dec
sub
loopne
mov
popa
lea
or
loopne
je
scas
daa
mov
pop
ljmp
and
dec
dec
mov
mov
mov
sahf
sti
rorb
add
jg
adc
dec
aaa
dec
cmp
js
push
lods
push
outsl
out
add
jo
mov
movsb
or
mov
mov
jle
mov
out
mov
inc
sbb
xor
sbb
out
dec
add
mov
fdivp
push
jbe
mov
ds
fwait
rol
in
ja
pop
nop
ljmp
push
xor
push
inc
push
and
and
push
mov
sub
mov
lahf
add
mov
in
jno
out
andps
shrl
outsb
add
jge
enter
xchg
cmpsl
insl
bound
add
repnz
sbbb
push
or
fwait
and
xchg
xor
dec
sub
gs
cmp
outsb
push
dec
idivl
sbb
sbb
lea
adc
mov
inc
and
int
xlat
shlb
scas
daa
push
lock
sti
sti
push
int3
movl
cmp
jae
mov
leave
repnz
xor
pusha
inc
hlt
add
out
pop
jo
je
pop
shl
xchg
sbb
sub
addr16
jl
xor
lret
lock
inc
popf
dec
in
popa
popa
xchg
adc
push
push
push
out
fprem
mov
dec
jb
or
fisubl
pop
sub
ficoms
insl
push
in
in
jne
repz
ss
jmp
mov
test
mov
leave
pop
or
mov
jl
pop
out
adc
and
mov
sub
mov
xor
cmp
add
cmp
in
xchg
outsb
fs
sahf
das
iret
xchg
or
pop
pop
cmp
mov
inc
lods
push
stos
add
pushf
inc
add
xorl
dec
mov
fwait
xchg
lock
icebp
jno
jmp
xchg
inc
pop
add
fnsave
sbb
add
fwait
xchg
jae
jns
sub
stos
pop
pop
pushf
inc
iret
std
adcb
ret
ret
add
or
es
out
emms
aaa
call
out
sbb
mov
roll
adc
add
jmp
cltd
sub
xor
or
imul
or
stos
mov
and
sub
cmc
jb
lahf
sub
imul
jns
jb
jne
xchg
and
jno
pop
iret
pop
push
lods
shrl
scas
push
or
stc
jl
icebp
xchg
xchg
lret
jo
iret
pop
lahf
cld
mov
js
cmp
cmpb
loope
push
mov
aas
jmp
mov
and
jbe
jmp
pop
dec
aas
inc
lods
fsub
jg
dec
adc
mov
cmp
lds
push
shrb
roll
mov
insl
sub
inc
ret
rcrl
cs
lcall
rorb
inc
js
lahf
pop
std
jl
outsl
and
insb
inc
cld
pusha
cmp
mov
cmp
ljmp
gs
addb
xchg
push
les
xor
jecxz
aas
dec
inc
rcrl
fdivr
xorb
xor
jg
hlt
in
out
loope
test
push
xchg
push
mov
sbb
xchg
push
shll
repnz
cmpsl
shrb
or
adcb
fists
push
and
add
dec
iret
fnstenv
repnz
xchg
arpl
pop
mov
imulb
adc
out
es
call
xchg
std
popf
xchg
mov
out
dec
stos
and
sbb
leave
pop
push
xchg
jg
adc
aas
sub
cmp
and
dec
xor
push
xchg
fs
adc
mov
dec
lock
flds
fwait
push
hlt
mov
jbe
and
aad
sbb
dec
xor
sub
pop
enter
xchg
pop
lds
mov
shrb
and
pop
rep
repnz
clc
cmp
mov
xor
add
inc
popa
shll
out
aam
cmc
lods
xchg
mov
aad
inc
imul
loop
scas
lcall
aaa
inc
push
mov
aad
nop
int3
xchg
ja
out
into
cmpb
popl
mov
cmp
loopne
lds
lods
fsubrs
rcll
lea
mov
pop
jo
cli
mov
mov
lret
mov
lds
ret
jns
cwtl
clc
hlt
ffreep
movsl
xor
or
repz
inc
dec
test
loope
hlt
push
sub
xor
adc
sub
push
cmp
ljmp
xchg
sub
xorb
les
out
sub
cwtl
sbb
jnp
or
jnp
push
sti
out
lods
push
add
push
xor
or
cmc
lcall
xor
push
xor
pop
pushf
and
aam
int3
sbb
insl
je
push
sub
mov
mov
mov
inc
sbb
push
inc
outsl
mov
or
add
inc
nop
add
insl
shrl
adc
popf
loop
iret
imul
or
and
xor
jecxz
jecxz
jne
push
add
mov
fistpl
repz
ja
and
cs
jge
cmp
cmp
push
mov
lret
dec
sbb
cltd
mov
xor
mov
add
and
mov
inc
or
sbb
in
cmp
rcll
test
shl
cmp
lret
mov
leave
sbb
xchg
adc
inc
cwtl
xor
dec
jns
lods
sub
divb
xchg
popa
add
mov
push
pop
and
cmpsb
imulb
mov
inc
adc
cs
mov
pop
mov
mov
push
nop
dec
jno
lock
dec
pop
push
std
jno
icebp
inc
rolb
dec
repnz
sbbb
xchg
push
sub
cmp
sahf
or
cltd
lds
sar
sti
imul
int3
out
insb
cmp
dec
inc
push
mov
xchg
repnz
mov
push
aad
arpl
rcr
loopne
inc
cmp
cmp
jnp
and
enter
div
testl
mov
xor
or
loope
jae
ja
push
xor
fst
repnz
stc
xlat
aam
xchg
cmp
mov
add
scas
jns
sbb
stc
mov
dec
stos
push
pop
pop
daa
pop
daa
fdivp
gs
mov
aaa
fidivs
test
rcll
jno
fstpt
cmpl
cs
xchg
cli
out
sub
adc
jne
cmovle
nop
mov
jnp
add
pop
fistpll
rcr
idivl
in
dec
std
pop
add
xlat
mov
xchg
xchg
fsubl
pop
nop
imul
stos
push
add
aas
lret
hlt
cmovb
icebp
inc
push
lret
pusha
jl
es
xchg
push
shl
cmp
fdivrl
pop
loop
jmp
add
adc
or
pop
stos
sbb
sbbl
scas
push
ret
mov
jno
stc
mov
ds
or
cmp
or
inc
insb
dec
imul
fidivrl
sbb
into
hlt
aas
rorb
scas
test
test
add
fisttpl
addl
mov
add
jl
jbe
movl
mov
push
cmpsb
out
cmp
pop
jns
adc
rcrb
imul
cmp
in
cli
cld
test
sub
mov
out
push
in
aaa
mov
add
or
mov
aas
and
dec
lea
jns
mov
cmp
sub
cwtl
ret
dec
mov
aam
call
or
xor
inc
fnstenv
inc
inc
inc
adc
sub
arpl
ljmp
xlat
imul
sbb
test
outsb
popf
les
sbb
fucomp
loope
jns
adc
cltd
call
and
add
xor
in
cmpsb
xor
cmp
aas
shlb
inc
mov
lahf
pop
jecxz
hlt
xor
jmp
add
inc
inc
cmp
inc
ds
jno
push
addr16
lcall
pop
xchg
jmp
mov
mov
in
dec
and
pop
dec
push
jb
mov
mov
jg
sbb
ljmp
aas
lock
lahf
cmp
cmp
mov
mov
sub
xchg
lds
sbb
inc
adc
xchg
and
xchg
mov
shll
adc
push
jns,pt
fst
cmc
imul
xchg
popa
sub
push
cwtl
int3
ljmp
xor
mov
fisubl
fs
std
adc
test
mov
push
push
bound
iret
pop
in
cmpsl
push
xchg
cmp
jp
jbe
cmp
sub
lret
xchg
fcompl
or
roll
shll
or
lock
and
mov
scas
jle
es
xlat
es
mov
xchg
repz
out
fistps
pop
cmc
xchg
pop
inc
sub
mov
stos
lds
es
fadd
pusha
add
not
in
xchg
inc
push
mov
add
push
pop
stos
mov
out
mov
jle
dec
or
jl
push
fcmovu
in
cli
repz
cmp
popf
mov
loop
arpl
and
jle
icebp
sbb
sub
stos
out
in
data16
lea
hlt
movsl
mov
negl
xchg
in
daa
adc
repz
sbb
ds
mov
fistl
fstpl
pop
pop
or
xchg
insl
popa
lret
je
push
js
mov
mov
addl
mov
sbb
les
enter
fwait
rorl
ret
mov
negb
xchg
stos
fs
clc
sarl
shl
icebp
add
mov
cmp
xchg
popa
sbb
fcoml
loop
int3
call
pusha
push
add
cmpsb
outsl
test
mov
cmp
movsl
pop
pop
pop
gs
imull
xchg
hlt
aas
dec
push
push
or
mov
jg
inc
movsb
enter
enter
dec
xor
adc
faddl
mov
mov
dec
sub
scas
add
ja
cltd
aad
ljmpw
fs
or
adc
dec
fnsave
adc
icebp
in
xlat
adc
popa
push
jnp
gs
jmp
lock
sahf
mov
test
jg
sbb
insl
in
adc
lahf
mov
xchg
cmp
pusha
push
cltd
xchg
jge
push
sbb
jl
mov
stc
scas
mov
icebp
mov
testl
sub
sbb
pop
mov
mov
mov
sbb
cltd
test
adc
addr16
dec
test
dec
test
dec
xchg
or
pushf
sti
mov
ret
ds
adc
sti
addr16
outsb
xchg
lods
clc
mov
cld
ss
scas
stos
mov
lods
stc
xor
iret
call
popa
inc
cmc
sub
lods
mov
push
or
into
adc
pop
lahf
movsl
pushf
les
aas
mov
jmp
pushf
mov
mov
mov
popa
add
sbb
dec
ret
clc
adc
popf
mov
bound
stc
test
xor
ds
or
fcoms
mov
inc
jb
sbb
xor
mov
sub
inc
inc
popf
inc
jb
mov
arpl
lods
mov
fsubrl
push
in
jle
je
out
xor
pushf
mov
jne
sbb
and
inc
or
jmp
pop
xor
mov
shrl
xor
pop
add
inc
inc
mov
sbb
cmp
rcl
lcall
push
aam
pop
mov
adc
jns
arpl
dec
add
fs
sbb
add
mov
shrb
pop
frstor
jo
mov
xchg
iret
lret
and
stos
or
jbe
jnp
cmpsb
lcall
xlat
stos
jmp
mov
push
or
xlat
int
sub
aam
add
pushf
addr16
pop
xchg
outsl
popf
js
add
add
mov
das
push
hlt
sub
aaa
scas
rclb
stos
sub
inc
mov
arpl
aam
fidivs
add
movsl
nop
adc
movsl
inc
or
bound
shrl
add
dec
jl
jmp
icebp
push
adc
jae
adc
or
push
add
add
in
xchg
test
mov
repnz
aas
sub
xchg
push
pop
jb
lock
addr16
cmp
push
push
inc
fsqrt
icebp
cmp
shrl
adc
adc
sbb
and
arpl
mulps
daa
sub
xchg
xchg
movsb
jns
mov
das
in
fisttpll
cli
mov
idivl
mov
sub
fdivs
shl
fisttpl
sbb
scas
mov
xchg
adc
in
rcrl
mov
mov
sarb
inc
mov
and
lea
dec
ret
movsl
xchg
xchg
data16
sbb
xchg
ret
jp
into
scas
or
mov
mov
fwait
push
repnz
inc
fsub
add
sub
imul
sbb
je
test
sbb
xor
test
xchg
adc
fisttpll
mov
arpl
push
xor
cmp
pusha
int3
dec
mov
xchg
enter
or
push
pop
lret
mov
iret
inc
sti
mov
test
aaa
lcall
push
jnp
test
and
xor
dec
popf
dec
jbe
cmp
icebp
cmc
and
int3
popf
gs
rorl
sub
in
sahf
scas
pop
inc
jl
decb
fadds
push
jmp
hlt
ss
nop
jnp
mov
sti
or
mov
adc
dec
pop
inc
aas
sub
sbb
int3
out
aad
mov
jb
rorb
mov
sbb
das
adc
das
jp
add
orb
stos
mov
loop
mov
mov
mov
add
std
movsb
hlt
mov
outsl
lret
in
pop
and
mov
mov
xchg
push
mov
mov
adc
lods
movsb
push
ja
xchg
sub
shl
and
inc
popf
lods
out
outsb
jae
mov
mov
sbb
lahf
xchg
data16
push
fnsave
fstl
xchg
sub
dec
mov
sub
mov
push
jp
lods
mov
rol
adcl
iret
fsubs
sbb
mov
movsb
push
mov
push
mov
inc
sbb
mov
in
into
adc
andb
mov
pusha
xchg
hlt
es
mov
pop
unpcklps
mov
push
dec
adc
push
lds
push
clc
loopne
push
xlat
jno
xorl
or
mov
lock
xchg
pop
flds
inc
push
and
pop
incb
jl
push
int
in
ss
movsb
aad
subl
push
xor
incb
call
pushf
sub
jno
jmp
pop
dec
cwtl
movsl
rorl
sub
sbb
ja
rcl
and
repz
sub
in
sbb
and
rclb
add
popf
or
cmp
and
xchg
jmp
pop
mov
ss
outsb
jge
adc
sbb
mov
push
inc
xor
inc
xchg
xchg
inc
call
lea
lcall
sar
cmp
js
dec
cmpsl
and
outsb
mov
imul
loope
dec
jbe
movsl
xor
inc
les
rclb
add
scas
rcrl
inc
pop
les
sbb
imul
mov
mov
insb
mov
inc
movsl
cmp
xchg
sbbb
aaa
aam
xchg
push
jns
sbb
dec
jb
adc
xchg
jge
jmp
adc
cli
jnp
hlt
mov
in
roll
jge
pusha
sub
mov
push
add
cmp
adc
cwtl
and
add
and
push
dec
aas
mov
fisttpll
dec
ja
gs
cmp
push
test
hlt
mov
jo
repz
sub
pop
outsl
sti
add
fcompl
out
or
fsubs
xlat
jnp
lret
xorb
call
out
imul
int
js
fimull
xor
mov
push
xchg
pop
popa
inc
ja
rclb
push
and
lcall
popa
xchg
ds
fdivs
jns
movsl
and
or
mov
push
lds
xor
jb
fwait
arpl
stc
push
fwait
inc
xor
dec
adc
js
dec
push
fwait
mov
sbb
sbb
sub
data16
addr16
mov
mov
dec
xor
addr16
stos
ret
in
popaw
inc
enter
sub
push
setbe
jo
xchg
clc
xchg
push
sub
pop
or
out
xor
out
pop
or
mov
mov
add
pusha
mov
cmpsl
mov
push
inc
aam
pop
lcall
jns
cmpsl
or
cld
pop
cmp
xchg
test
sbb
sbb
divl
mov
push
rcll
aaa
jo
test
pop
shlb
lds
test
subb
jbe
loop
clc
stos
ja
ja
xchg
into
dec
mov
mov
lret
ljmp
pop
fnsave
jp
or
inc
jge
cmp
jae
in
xor
dec
lods
leave
test
icebp
sub
out
jnp
int
mov
inc
loopne
adc
loop
ljmp
test
jle
and
xlat
push
pop
and
mov
cmovp
mov
mov
cmp
js
xchg
cmp
mov
push
shl
sbb
sub
movsb
stos
pop
cmp
mov
sbb
sub
js
int
add
popf
adc
xor
jecxz
sub
sbb
push
pop
lret
dec
lret
mov
add
les
fisubrs
hlt
iret
leave
push
mov
mov
mul
or
xor
add
jmp
int3
lcall
out
xchg
push
bound
fsubl
pop
pop
pop
dec
aas
mov
cmp
mov
push
mov
scas
lahf
adc
cmp
ficoms
sahf
sub
jle
push
mov
arpl
inc
xor
mov
mov
sti
hlt
cmp
push
pushf
es
adc
add
or
mov
frstor
pop
test
push
mov
inc
pusha
shrl
or
inc
and
xlat
aad
pop
sub
jle
testl
leave
and
cli
add
loopne
inc
inc
xor
iret
xchg
in
call
loopne
jno
int
push
arpl
and
jge
cmpsb
push
sbb
ljmp
aam
inc
dec
sbb
xor
pusha
pop
push
fistpl
sti
xor
fidivs
out
adc
and
add
lret
sub
cmc
sub
jnp
mov
mov
call
call
jge
and
shll
insl
and
mov
aaa
fucom
push
mov
fimuls
mov
iret
or
leave
mov
cwtl
mov
cwtl
dec
jg
pop
aam
test
jb
aad
std
mov
jl
rorb
push
push
mov
sbb
mov
push
out
aad
adc
push
gs
xchg
add
je
shll
lods
leave
imul
movsl
sub
aam
int3
mov
inc
add
push
mov
jecxz
pop
jne
jbe
lcall
xchg
cmp
xchg
and
lock
test
inc
mov
adcl
inc
lods
adc
jae
sub
jg
test
ss
dec
xchg
shr
pop
adc
push
mov
lret
mov
jno
inc
jle
adc
mov
jg
mov
xchg
in
nop
and
fldl
mov
adc
aad
ret
rolb
sub
das
adc
push
push
arpl
or
fcos
xor
push
inc
leave
nop
mov
scas
cmp
mov
stc
sbb
jbe
fidivs
mov
decl
aam
clc
mov
rol
fdivl
in
sub
imul
aam
cwtl
pop
push
repz
mov
pop
jle
jl
ss
outsb
jecxz
ss
popf
adc
lods
or
inc
xchg
in
cmp
pushf
movsb
fnstenv
test
decb
push
movswl
jae
mov
or
sub
popf
mov
push
icebp
rolb
sahf
aas
ret
in
mov
xor
xchg
int
leave
scas
lret
sbb
ja
es
jb
mov
fcmovbe
enter
cltd
inc
mov
pop
mov
ret
and
iret
and
addl
imul
lahf
push
and
testl
nop
xor
sub
adc
push
push
pop
shrl
lds
js
dec
leave
mov
adc
pop
test
loop
movsl
int3
add
stos
jmp
xchg
adc
bnd
mov
mov
popa
mov
xor
mov
dec
daa
push
fisubrl
push
mov
stos
mov
and
add
jge
cld
les
jae
jne
pop
and
push
push
cwtl
inc
les
rorl
push
insl
sarl
jg
dec
jg
stc
pop
jmp
inc
push
jp
push
popf
outsl
cli
push
and
gs
adc
jp
inc
scas
aam
pop
je
lods
push
inc
in
out
xchg
and
pop
xor
scas
das
sti
pop
mov
mov
sti
sub
push
mov
mov
daa
cmpl
hlt
xor
jmp
lock
ret
loop
out
lahf
cld
push
push
orl
sub
push
rcrb
movsb
out
add
inc
mov
stos
scas
mov
add
ss
jne
bound
icebp
adc
xchg
lock
dec
dec
out
pop
repz
and
cmp
pushf
fcmove
fwait
cs
cmp
cli
in
inc
add
mov
adcb
jl
cwtl
inc
add
mov
neg
fcomps
xor
pop
and
xor
nop
jns
xchg
das
push
in
lods
shll
cs
mov
sahf
xor
inc
xchg
out
pop
inc
mov
test
and
pop
out
in
outsb
xor
addr16
sub
mov
shll
mov
push
or
or
add
mov
movsl
clc
or
aam
fwait
cmc
add
pop
sbb
cwtl
xchg
in
jmp
scas
insl
jo
and
mov
sub
push
out
push
aam
xchg
mov
adcl
scas
adc
clc
ror
or
js
jmp
cmpl
inc
mov
leave
jb
mov
sub
xchg
in
dec
andb
cmc
xchg
push
cli
in
mov
push
and
call
divl
xor
movsl
test
insb
push
movsb
cmpb
aam
jl
mov
mov
dec
xchg
pop
fs
mov
fwait
rolb
cmpsb
sarb
out
adc
cmp
fcomip
cmp
cmp
fs
or
or
mov
ss
xor
movsl
sub
out
mov
loope
jno
cmp
notb
lea
fistl
arpl
mov
fnstenv
fnstenv
imul
mov
push
cli
jnp
movsb
mov
and
add
das
jae
mov
sub
fdivs
lahf
and
pop
xor
add
sahf
scas
and
js
mov
loope
xchg
or
adc
push
pop
pop
ljmp
xchg
stos
lods
ljmp
pop
mov
sbb
orb
in
push
push
inc
jo
jg
mov
fdivrl
push
lods
pop
rcrb
pop
jl
add
xor
mov
inc
dec
mov
mov
fstpt
lock
fs
jp
lds
std
nop
mov
push
stos
add
inc
ljmp
dec
out
cmp
cmp
and
add
jne
iret
mov
rcrb
sub
add
pop
insl
inc
push
sub
mul
outsl
lods
pop
push
push
imul
sbb
mov
inc
sbb
rcrl
pop
fisttpl
jae
cmp
xchg
pop
fsubrl
mov
addr16
sub
test
xchg
addr16
les
inc
mov
int
inc
leave
mov
xchg
fcmovne
lret
lods
scas
cmp
mov
call
pop
xchg
xor
filds
jo
xor
xchg
pusha
mov
fdivl
jb
mov
inc
pop
pop
cmp
fwait
or
push
adc
cwtl
rcrl
xor
push
repz
adc
dec
mov
sub
test
ret
icebp
mov
and
sub
mov
rorb
das
das
lcall
and
jne
push
sbbl
and
fsubl
dec
add
iret
push
jle
popa
and
cwtl
sbbl
loopne
adc
jne
xor
mov
fiaddl
xchg
popa
repnz
or
idivb
outsb
ljmp
stc
aam
test
jle
bound
andl
mov
dec
enter
mov
ret
fisttpll
sub
jle
lds
addr16
lahf
inc
out
rorl
inc
add
movsl
mov
xor
push
fcompl
les
das
iret
push
movsb
lcall
addl
or
repnz
mov
pop
fiadds
sbb
mov
daa
add
sub
mov
or
fistps
movsb
aaa
in
mulb
add
jns
in
mov
ret
movsl
lahf
pop
int3
loopne
inc
orl
lea
les
lods
std
lods
int
xchg
out
adc
int
mov
pop
imul
xchg
mov
inc
out
aam
xorl
xchg
cs
fisttpll
adc
in
movsb
loopne
hlt
or
imul
mov
outsl
cmp
and
pop
jno
mov
jl
mov
xor
and
aam
push
aas
fldcw
and
mov
insb
jne
pushf
cltd
jns
ja
mov
dec
std
xor
xchg
imul
pop
sti
jecxz
test
fwait
std
out
in
mov
or
lods
xor
push
dec
push
pop
jle
arpl
xadd
jle
insl
jge
loopne
pop
mov
add
jp
push
aad
cli
lcall
iret
mov
and
bound
mov
jbe
adc
jp
pop
mov
mov
fldenv
sbb
test
imul
popa
stos
stc
mov
jecxz
test
mov
insb
and
mov
int
jg
inc
sub
aaa
shll
imul
jbe
jp
lock
movsb
and
sti
mov
test
clc
add
fsubs
popl
rolb
cmp
push
mov
push
mov
adc
mov
repz
out
andl
shlb
xor
push
out
mov
daa
sub
xchg
lcall
and
add
iret
cmp
into
or
push
imul
aas
jae
mov
rolb
hlt
push
sbb
sub
cmp
mov
push
jge
jle
js
test
or
fiadds
mov
addl
mov
jo
jecxz
mov
leave
ja
push
pop
push
xlat
cmp
mov
lds
fsts
dec
bound
dec
add
iret
push
js
jb
or
out
mov
dec
mov
in
cmp
subl
insl
jmp
mov
mov
scas
add
add
jno
cs
cmp
fidivs
les
fsubrs
and
jns
adc
icebp
add
sbb
dec
iret
rclb
jmp
xor
insl
outsl
insb
cltd
jbe
hlt
pop
fisttpl
mov
insb
jmp
dec
dec
leave
lock
int
mov
lahf
sbb
fcmovb
jg
ret
push
stos
jno
sbb
and
loopne
add
fcomps
fsub
rorb
push
std
dec
pop
mov
in
inc
add
dec
cld
jle
pushf
jmp
adc
dec
sahf
jecxz
inc
xor
aaa
andb
dec
daa
fiadds
insb
mov
mov
mov
add
test
scas
push
daa
call
lods
loop
cld
jo
cld
jmp
std
ja
inc
mov
clc
ljmp
icebp
iret
cmpsl
pushf
hlt
sub
faddp
mov
push
data16
jle
sub
mov
inc
xchg
xor
add
cltd
xchg
imul
mov
jle
sub
dec
pop
lret
mov
pop
push
call
mov
dec
add
sbb
pop
add
lcall
les
pmuludq
dec
int
insb
push
lds
adc
pop
jg
repnz
addl
fwait
cmp
and
pop
xchg
sub
lret
mov
orb
negl
jl
sub
cs
movsl
mov
cmp
lods
cmp
clc
cwtl
xlat
repz
sub
pop
fistps
adc
or
inc
inc
test
mov
stos
mov
or
orb
sbb
bnd
in
fst
mov
sub
adc
cmp
or
push
rcl
insl
mov
xchg
and
xchg
pop
enter
xchg
sarl
sbb
pop
mov
lcall
loope
lcall
fists
add
movsl
pop
pop
cwtl
leave
aaa
cmp
insl
inc
cmp
or
pop
movsl
shlb
lahf
inc
xchg
outsb
sub
pop
ss
movzwl
xor
cltd
xchg
push
pop
xchg
pop
mov
mov
call
out
pop
push
adc
ljmp
pushf
mov
add
cli
xor
in
scas
or
xchg
out
jl
and
mov
leave
jno
ret
pushf
push
and
iret
inc
in
push
adc
push
imul
jmp
sub
cwtl
lods
mov
hlt
mov
fisttpl
xchg
mov
dec
pushf
cmp
flds
sbb
lcall
mov
ficomps
sub
je
mov
scas
cld
cld
mov
cmpsb
fwait
inc
fnstcw
lahf
call
scas
outsb
sti
ret
sub
rcrl
stos
mov
shll
mov
dec
divl
sub
mov
aaa
movsb
bound
arpl
aam
in
adc
movsl
daa
in
lcall
push
push
mov
lret
test
iret
fmull
orl
test
std
fsts
std
sti
pop
jns
repz
jge
or
push
pop
enter
mov
pop
pop
ja
lahf
pop
popf
jg
ja
cltd
jmp
lds
sbbl
mov
push
xor
push
cmc
mov
sub
mov
fs
aaa
stos
mov
popf
test
cld
data16
adc
mov
pop
repnz
test
mov
xor
les
lret
test
sbbl
movsb
fsts
mov
nop
stos
lods
jno
std
stc
les
fwait
rcl
shll
lret
mov
push
sbb
xor
dec
push
and
inc
push
testb
and
std
cmpsl
pop
jns
btr
mov
stos
std
je
mov
jo
mov
sbb
push
cs
outsl
cmp
test
pop
jne
push
enter
xchg
int
jns
mov
ljmp
xor
loopne
push
out
je
cwtl
cmpsb
xchg
lods
inc
in
push
int3
scas
fcomip
stc
bound
pushf
std
mov
and
mov
stc
push
sbb
push
and
into
cwtl
stos
pop
out
pop
mov
and
fstpt
movsb
inc
sahf
dec
mov
shlb
mov
push
dec
xchg
test
lods
aaa
lds
pop
loopne
iret
in
push
and
js
stc
and
imul
rorl
jmp
pop
pusha
test
xchg
cmp
adc
cmpsb
nop
fistpl
es
mov
fstpt
xchg
sub
add
adc
or
and
cmp
repz
add
mov
fcoml
repz
pop
fmuls
mov
push
cld
shlb
pop
inc
push
inc
inc
mov
clc
mov
dec
call
inc
xchg
out
movsl
and
adc
popa
cld
adc
pop
jp
leave
inc
or
push
ja
sub
cmp
aaa
and
xor
stos
aad
push
or
pop
mov
stos
adc
lret
addr16
sbb
sbb
shrl
stc
inc
pop
pop
xchg
mov
std
bound
or
and
cmpsl
cmp
inc
sbb
push
imul
jb
add
or
mov
inc
dec
add
inc
dec
rclb
dec
xor
xor
pop
sbb
pop
add
lds
test
mov
rorl
mov
out
shll
jg
lock
lods
sbb
dec
dec
add
pop
sub
jns
adc
outsb
roll
scas
mov
xlat
shrb
push
jg
adc
iret
cwtl
mov
xchg
sbb
ror
pop
fcomp
xor
pop
pop
mov
leave
adc
push
lret
aaa
xchg
inc
lods
rorb
outsb
insb
or
lret
pusha
lret
xor
ret
bound
adc
cmp
jno
push
movsb
mov
sarb
xchg
sub
mov
lods
mov
js
leave
in
adc
test
sbb
sbb
pop
cmc
sahf
or
add
imul
or
mov
lods
pop
data16
stos
pop
cmp
dec
jecxz
test
pusha
xchg
repz
inc
sbb
dec
jns
loope
leave
in
icebp
inc
xchg
mov
mov
jnp
sub
mov
mov
and
cmp
pop
sbbb
add
adc
and
lods
aad
movsb
icebp
lret
bound
mov
adc
jge
mov
stos
divl
dec
adc
xchg
xlat
xor
mov
ret
pop
dec
aaa
adc
xchg
and
lds
sub
pop
dec
in
mov
arpl
sub
and
jo
movsb
inc
sti
imul
push
mov
sub
cmp
pop
mov
mov
mov
inc
xor
repz
outsb
movsb
add
xchg
clc
movsb
inc
adc
push
inc
dec
imul
leave
dec
sahf
ljmp
std
repz
mov
fstpt
dec
cmpsl
sbb
xchg
outsl
std
adcl
cmp
push
adc
pushf
shll
pop
xchg
gs
xor
btr
xor
sbb
popf
adc
jge
push
rcll
xchg
adc
push
fcmovu
icebp
mov
or
mov
inc
fldt
push
xchg
push
mov
mov
mov
cli
out
ljmp
inc
loop
lods
nop
push
pop
push
cmpsb
out
imul
jbe
in
mov
sbb
cmp
cmpsl
les
pop
or
stos
and
fidivrl
mov
jg
faddl
cli
jne
cli
jnp
lea
push
jo
out
jecxz
adcb
bound
jb
pusha
jecxz
pop
test
lock
mov
call
stos
xor
pop
inc
loope
sti
dec
aas
je
or
sub
add
pop
repnz
push
push
mov
negb
fisubs
lods
lahf
ds
mov
adc
fsubs
inc
mov
sti
sarl
mov
ja
in
and
ss
push
inc
pop
xor
pushl
ja
sbb
xchg
jg
and
add
addb
insl
lret
cltd
scas
outsb
pop
pop
out
daa
sarl
mov
pusha
dec
or
push
and
xchg
dec
jno
push
movsl
sbb
cmp
stos
sub
gs
mov
mov
mov
cmc
fisttpl
dec
stc
cmpsb
cmp
nop
mov
mov
js
test
and
call
jae
lcall
jno
hlt
les
add
outsl
and
mov
int3
cli
and
movsb
std
stos
lahf
inc
dec
cmpsl
xchg
jmp
ja
fbld
cld
push
ljmp
out
xor
mov
cmp
js
inc
mov
pop
mov
mov
rcl
push
jl
dec
lds
jl
mov
inc
cmp
xor
and
int3
mov
pop
pop
adc
leave
xor
dec
adc
test
outsl
dec
lods
sbb
jle
xchg
push
add
out
jmp
and
repz
lret
mov
std
fucomip
push
cmp
jno
add
xchg
cmp
fldl
cmp
clc
and
pop
push
cwtl
push
loopne
in
adc
fstpt
xor
pop
push
and
add
mov
cmp
jmp
mov
jno
push
xchg
sbb
fildl
and
or
adc
cmp
push
movl
stc
in
loope
inc
lods
push
cld
sub
pop
aam
bound
inc
out
pop
out
mov
into
cwtl
je
fsts
xlat
push
aad
push
aaa
cmp
enter
incb
xchg
cmp
xchg
xchg
jnp,pt
mov
mov
mov
test
ret
sub
and
lea
outsl
fcoml
sub
mov
int3
aaa
and
pop
clc
add
xchg
xchg
out
mov
jge
shrb
mov
cmpsl
pop
andl
mov
repnz
mov
mov
jbe
cmpsl
push
fcmovne
mov
fsubrl
push
mov
shll
push
lods
mov
jno
fstpl
in
lret
je
push
dec
scas
sub
mov
test
mov
pop
push
pushf
fwait
mov
xchg
sub
inc
gs
jbe
and
push
jecxz
xchg
cli
or
and
xlat
sbb
jge
pop
nop
cwtl
loopne
mov
dec
aad
jae
xchg
stos
bound
es
sbb
mov
push
add
sbbb
adc
aaa
jg
in
cli
sti
xor
add
arpl
xor
pop
mov
sbb
xlat
mulb
in
xchg
push
out
sbb
int
jno
dec
sbb
call
mov
cs
cmp
aas
jbe
dec
xchg
xor
mov
xchg
add
jmp
or
jno
pop
aad
outsl
cmp
or
mov
fwait
stos
adc
sub
sbb
mov
cmc
push
and
dec
lods
sbb
sub
fdivl
mov
adc
cmp
jmp
mov
shlb
fstps
or
stos
pusha
xor
mov
lods
xor
inc
into
mov
subb
sarl
xchg
dec
cmp
test
pop
push
outsl
fidivl
jmp
dec
jp
fwait
cmc
test
xchg
jp
icebp
loopne
and
mov
aam
lods
in
pushf
add
fcmovb
push
inc
subl
push
dec
movsb
sub
popa
daa
mov
lock
cmp
xchg
ja
cmp
and
iret
lds
cmp
les
mov
ljmp
mov
push
jp
testl
xchg
dec
cli
cld
jmp
jmp
and
cld
add
push
lahf
lret
cmp
out
jae
fimull
cltd
cmpb
fdivrl
or
mov
pusha
popf
pop
dec
xchg
div
out
cmpsb
push
roll
test
xchg
or
popf
push
push
mov
pop
cmpl
das
addr16
in
outsl
dec
add
dec
subl
ljmp
in
mov
sbb
jp
dec
in
in
or
mov
in
ljmp
dec
in
and
nop
xchg
dec
inc
mov
sahf
and
lcall
push
adc
in
cmp
sub
movb
jne
aas
sub
stos
inc
or
out
js
daa
xor
xchg
mov
pop
fwait
outsl
mov
mov
rcrl
popf
pop
inc
pop
call
inc
loope
lock
addr16
mov
ds
js
adc
adc
jg
push
or
xchg
mov
cmp
inc
or
sbb
push
sbb
les
xchg
adc
pop
dec
or
rolb
int
or
sbb
cmp
jne
fsubs
pusha
popa
insb
pushf
push
dec
outsl
scas
xor
adc
lahf
mov
sbb
sahf
pop
loopne
in
mov
scas
sbb
adcl
mov
inc
hlt
ss
push
add
imul
in
iret
lcall
shl
jg
sti
arpl
outsb
add
dec
inc
ja
pop
jl
aam
sub
xchg
mov
xor
das
dec
sbb
arpl
jge
mov
popf
imul
lods
stos
adc
nop
inc
mov
add
mov
mov
mov
mov
xchg
add
sbb
daa
movsl
mov
iret
sbb
pop
mov
cmpsl
jb
and
sti
call
fdivr
inc
sbb
or
pushf
icebp
inc
mov
sahf
out
xchg
mov
mov
pop
imul
stc
fsubr
and
subb
adc
sub
sub
std
mov
push
sbb
pop
jecxz
int
cmp
mov
fcmovnbe
int
push
inc
imul
insb
push
int3
dec
add
mov
push
gs
into
xor
jl
xchg
fcompl
pusha
jle
cs
inc
add
fdivl
mov
xchg
int
xor
out
shlb
aam
mov
xchg
xchg
insb
test
in
mov
mov
ds
inc
cs
mov
and
dec
mov
xchg
test
scas
adc
lsl
and
iret
xchg
cmp
sbb
aas
loope
xchg
pmullw
xchg
call
push
fs
out
aam
lahf
cmc
jae
fnstsw
sub
and
leave
dec
or
js
xchg
and
add
outsb
and
cli
lahf
addr16
mov
adc
mov
jle
adc
jl
and
icebp
dec
push
xchg
jae
or
lods
stos
fstpt
insb
stos
sub
pop
fwait
mov
sbb
cmp
test
pop
adc
mov
mov
mov
gs
dec
cmpsl
ficoml
add
popf
xchg
mov
pop
sbb
xchg
aaa
loop
gs
cmpsb
shrb
adc
movsl
mov
mov
sbb
xchg
vpsllq
les
aam
testl
aam
push
jl
ja
cwtl
dec
imul
dec
cmp
xchg
sbb
dec
and
jl
repz
cmp
jno
mov
xor
add
mov
mov
cmp
fcmovu
lea
or
and
js
push
dec
and
int3
xchg
xor
push
stos
lret
lahf
mov
mov
je
adc
inc
scas
and
icebp
xchg
mov
dec
popa
daa
imul
pop
ret
outsl
pop
loop
daa
mov
jo
mov
das
push
mov
mov
and
movsl
dec
inc
jl
das
shlb
cmpsl
and
scas
negb
jnp
cmp
pop
xchg
mov
xchg
or
fsts
mov
mov
xchg
or
shlb
jo
arpl
push
test
out
dec
fnsave
push
test
push
jg
aaa
mov
cmp
sbb
inc
out
sarb
cli
enter
xor
lret
mov
push
insl
lock
pop
rcrb
ja
sbb
test
pop
lcall
negl
aad
mov
jnp
mov
lahf
cmp
pop
imul
std
into
pop
rdmsr
test
loopne
sarl
jb
clc
test
stos
add
pop
inc
ret
cmp
lds
out
inc
xor
sbb
ret
ja
sahf
insl
xor
xlat
pushf
call
enter
aad
arpl
fisubrl
inc
inc
cmpsb
imul
repnz
insb
xchg
xor
mov
push
jmpw
rcrb
les
test
jbe
decb
dec
in
out
hlt
sbb
mov
mov
sub
inc
xchg
sub
rolb
xchg
js
sub
mov
inc
sbb
aad
pop
push
sub
mov
cs
or
add
cmpl
jecxz
div
int
in
inc
dec
push
fiaddl
dec
or
imul
in
popf
cmpsl
enter
hlt
and
jo
jecxz
jo
or
popa
inc
dec
and
rcrb
jmp
adc
push
xor
mov
push
push
adc
stos
mov
lahf
fildll
dec
shll
sbb
inc
ret
sbb
sbb
bound
lods
pop
xor
les
call
loope
add
mov
push
sarb
int
sbb
aad
pop
jae
mov
xor
mov
je
cmpb
rcll
mov
pop
inc
shlb
push
lods
pop
cmp
cmp
xchg
push
sbb
bound
lret
mov
insl
inc
xchg
repz
stos
popf
movsl
lods
mov
das
or
flds
lods
dec
inc
test
jle
orl
xor
movsl
mov
and
popa
int3
fstl
je
sub
fwait
fs
pop
cmpsb
scas
test
in
adcb
outsb
pushf
sub
rcll
xchg
imul
or
cmp
adc
data16
and
fsubrl
mov
in
xchg
or
loop
sbb
dec
lock
pop
aam
ret
sarb
loopne
lods
pop
shlw
and
sub
fldenv
and
xchg
mov
dec
inc
jo
jo
imul
shrl
sbb
jge
pushl
lcall
inc
mov
jae
movl
dec
dec
mov
stos
mov
mov
pminub
sahf
xchg
out
fcoml
mov
dec
stos
sbb
sbb
jecxz
dec
movlps
lahf
mov
notl
out
and
push
sub
and
ljmp
jnp
cs
lea
in
lea
scas
test
mov
sub
lret
push
xor
loope
dec
inc
push
mov
dec
xor
out
inc
xchg
cmp
dec
inc
daa
flds
sub
and
popf
jp
hlt
popa
xchg
test
movl
out
movsb
push
rclb
inc
push
sbb
iret
inc
jge
in
cmp
add
test
mov
sub
mov
mov
pop
jmp
aam
lea
push
mov
sbb
xchg
xor
jnp
inc
adcb
push
add
aam
je
dec
xor
pop
int
sub
jne
stc
dec
push
jns
mov
imulb
dec
ss
jecxz
repz
je
inc
and
and
mov
jp
pop
xlat
fstpl
pop
icebp
mov
mov
imul
shrl
ja
movntss
shrb
mov
xor
dec
jecxz
or
nop
cmp
lcall
ja
and
mov
shll
adc
xchg
fcmovbe
scas
es
jo
add
pop
mov
jo
inc
pushl
mov
clc
jle
mov
push
xor
jae
or
sub
cmpsb
popl
mov
test
addb
in
adc
xor
xchg
pop
rclb
xchg
dec
mov
sbb
hlt
sbb
sub
mov
fisttps
cld
lea
call
mov
push
dec
pop
xlat
test
push
jl
xchg
jno
dec
call
jecxz
scas
into
xor
cmp
inc
leave
pop
xlat
ds
xchg
cmp
mov
mov
adcl
dec
mov
in
add
shll
inc
repz
xor
xchg
test
push
and
mov
pop
in
mov
repnz
sub
fs
movsb
gs
sbbb
outsb
mov
cmp
jle
pop
ficoml
and
sub
loopne
mov
outsl
mov
or
xchg
inc
inc
jecxz
inc
adc
cmc
pop
and
pop
pop
sub
add
outsb
popf
aad
cmpsl
pop
or
ficompl
ljmp
sub
xlat
fisttpll
or
fcoms
je
xbegin
das
out
xchg
jb
xchg
fists
add
dec
aad
dec
sbbb
cmc
cmc
mov
popf
and
test
repnz
lcall
push
mov
mov
ja
mov
sbb
ja
and
sbbb
xor
rcl
pop
cmp
shll
push
iret
or
aaa
out
mov
xor
lcall
int
aam
jae
popa
jb
dec
mov
les
jo
and
or
filds
shlb
popa
lret
repz
sti
icebp
xlat
mov
jae
sub
movsl
stos
negl
imull
xchg
mov
fs
enter
adc
movsb
por
ja
ss
sti
repz
adc
pop
and
popf
pop
jecxz
add
es
imul
in
fisttpll
cmpsl
mov
mov
stc
fisttps
cmpsb
adc
insl
push
inc
aaa
fld
scas
add
imul
leave
aas
sbb
sbb
pop
int
mov
cmp
cmc
mov
inc
aaa
fimull
cmp
decl
movsl
mov
mov
dec
lods
mov
daa
jp
dec
lret
jmp
lcall
and
sbb
inc
pusha
loopne
jne
popa
rcrb
popa
rorl
mov
cmpl
sub
cld
out
xchg
popa
lods
jmp
lock
rcl
arpl
pusha
cmc
shlb
mov
cmpsb
and
add
cmpsb
cmc
mov
outsl
xchg
xor
or
pop
jbe
loopne
xor
xorl
data16
call
enter
mov
out
jmp
xchg
xor
push
mov
cmp
push
addr16
nop
push
loope
add
outsl
fdivrp
jmp
aas
gs
in
popa
lock
out
sbb
jb
dec
inc
sub
fisubrl
ss
loopne
cmc
out
cmp
addr16
sub
cpuid
loopne
sbb
loopne
paddsw
mov
psubusw
pop
outsb
mov
hlt
xor
lock
and
pop
pop
xor
mov
shr
add
and
mov
dec
sti
ficomps
addr16
xor
xlat
jns
addr16
pop
into
mov
mov
adc
mov
push
inc
mov
ss
jp
xchg
stos
and
xor
pusha
mov
jnp
loop
pop
pop
jns
jg
dec
mov
out
jno
jb
jne
cmpsb
cmp
test
and
dec
adc
in
mov
jmp
test
mov
mov
mov
xor
mov
int3
icebp
aad
and
dec
imul
adc
test
repnz
jp
mov
xor
mov
mov
lcall
aad
adc
mov
adc
bnd
mov
in
repz
add
inc
jne
dec
fs
sbb
sbb
sub
stos
mov
test
cmp
add
fwait
or
inc
shlb
notl
or
addr16
sbb
lret
jnp
cld
inc
test
inc
aas
xor
pop
dec
lret
inc
lret
push
mov
stc
push
adc
jbe
repnz
inc
push
sahf
pop
test
out
mov
xchg
dec
imul
insl
mov
insl
mov
push
sbb
xor
xchg
ret
lahf
arpl
outsb
dec
mov
push
pop
xor
xlat
xor
test
xor
mov
aas
cs
in
mov
mov
pushl
xchg
jge
es
icebp
cmpsl
xor
or
leave
mov
sub
jmp
iret
repnz
popf
addr16
and
nop
imul
xchg
aad
or
lcall
jmp
ss
gs
jp
fwait
bound
call
jl
jns
mov
cmpsb
mov
add
movsb
sub
hlt
dec
and
and
mov
sbb
mov
pop
iret
popa
cmp
pop
fcoml
cmp
jae
repz
jns
sbb
lods
ds
nop
sbb
pop
subb
ljmp
mov
pop
es
rorl
pop
jno
jae
push
sbb
lahf
test
fwait
inc
jne
xor
sbb
and
pop
movsl
enter
or
jmp
test
outsl
adc
test
cmp
enter
jnp
sub
sub
and
mov
jl
xchg
sbb
cli
push
popf
push
or
mov
scas
xlat
mov
jne
shll
sbb
xchg
sbb
mov
mov
fnstenv
push
sbb
xlat
sbb
adc
pusha
cli
pop
xchg
orl
push
mov
scas
gs
sub
sub
in
sub
dec
cli
push
movsl
and
xlat
and
loop
mov
or
repz
jns
mov
cmp
xor
xchg
into
into
dec
push
inc
orb
adc
aaa
insb
push
or
cmp
pushf
push
jp
dec
in
stos
in
inc
out
cmp
mov
pop
lcall
enter
dec
push
mov
pop
aam
out
fdivs
out
in
jl
push
add
mov
mull
popa
mov
or
notl
decl
mov
mov
dec
jb
icebp
hlt
dec
insl
int
add
xchg
jbe
push
push
mov
push
mov
jp
pop
pop
andb
mov
stos
scas
push
push
mov
fcoml
jnp
pusha
sub
xlat
fstps
or
fcmovu
adcl
cmc
sbb
out
push
sti
jecxz
sbb
add
mov
cmp
xchg
mov
aad
sub
movsb
inc
into
jle
lahf
sbb
mov
adc
mov
jmp
jmp
push
cmp
inc
cmpsb
ret
push
jecxz
push
lods
mov
mov
rclb
enter
lret
mov
lock
leave
fcmovb
push
out
jae
jle
sbb
mov
mov
cmpsb
mov
dec
xor
sub
mov
inc
xchg
or
je
mov
xchg
pop
sti
add
imul
add
push
in
fdivr
pop
test
icebp
adc
dec
lods
inc
adc
sahf
movsl
lods
daa
mov
daa
adc
mov
mov
mov
cmp
ret
movsl
test
push
jge
mov
mov
adc
ds
scas
push
in
mov
inc
jecxz
repz
je
xchg
int
mov
sub
cmp
jge
loope
out
adc
test
aam
sbb
pop
sbb
data16
int
mov
dec
icebp
sahf
mov
lret
stos
add
enter
dec
pop
add
sub
leave
aam
popw
add
sbb
mov
lcall
fcomi
in
inc
popl
inc
add
in
cld
push
push
cmpsb
jne
test
jge
or
pop
lcall
xchg
jb
sbb
mov
cmp
xlat
pop
sbb
lcall
mov
int3
mov
adc
out
outsb
dec
call
or
inc
sub
jbe
stos
js
xchg
out
sbb
je
testb
shrl
jns
stos
stos
jne
mov
mov
push
scas
cld
lret
lods
test
xchg
aam
push
leave
sti
ss
leave
pop
or
cmp
test
mov
pop
lea
dec
push
jle
mov
pushl
pop
es
mov
sub
inc
in
pop
or
mov
xor
inc
push
pop
jbe
nop
leave
cmp
jbe
scas
mov
or
jg
call
jb
addr16
mov
lock
add
rcrb
ljmp
pop
shr
xor
mov
push
xchg
dec
mov
jbe
pusha
adc
add
nop
lahf
xchg
fcmovu
shlb
mov
nop
inc
int3
scas
sbb
push
mov
test
es
jns
hlt
in
call
sub
pop
add
adc
gs
xchg
xchg
std
repz
sahf
je
in
add
lea
addl
test
adc
hlt
jg
mov
addr16
pop
clc
ds
ret
jnp
mov
in
aas
pop
mov
push
mov
dec
add
or
jl
inc
es
mov
imul
inc
mov
jns
fs
lret
sub
aad
test
in
push
pop
out
fisubl
rorb
or
cmp
add
adc
sbb
jbe
ror
scas
stos
mov
jp
fbstp
movsbl
and
or
rcpps
aaa
movsb
xchg
and
sbb
dec
jecxz
lock
sub
jbe
lret
inc
cmpsb
and
jl
mov
mov
inc
or
and
fiadds
xor
mov
jne
fmuls
nop
mov
xchg
sub
jle
xchg
repnz
xor
inc
cltd
and
mov
inc
lret
test
mov
push
cmpsb
cmp
lahf
jns
mov
leave
mov
jno
stc
cmp
cli
cmp
stos
jmp
out
and
mov
sahf
sarl
ret
or
mov
push
sub
insl
shll
addb
out
gs
lret
mov
into
push
mov
add
or
pop
push
outsb
sub
xchg
mov
lods
enter
pop
pop
mov
outsl
mov
lret
adc
inc
or
xchg
xchg
cmp
daa
loope
mov
mov
and
pop
mov
dec
xchg
repz
adc
sub
divl
loope
and
mov
xor
ds
aas
or
adc
clc
sti
lahf
pop
cmp
pusha
lea
dec
ret
pushf
or
cmpsl
xchg
loopne
lahf
dec
lret
es
cmp
mov
arpl
clc
iret
mov
inc
mov
cmp
sbb
pop
jmp
inc
sub
cmpl
push
aam
les
aas
and
mov
les
cmp
ljmp
imul
push
push
push
sbb
jge
add
push
shrb
outsb
inc
sbb
cmp
mov
iret
out
stos
sub
jbe
outsb
movsb
sub
xorb
mov
iret
fstpt
push
rorb
xor
dec
int3
pop
xchg
push
out
loop
mov
pop
push
aas
repz
adc
adc
cmp
jg
pop
jecxz
hlt
cwtl
daa
in
xchg
pushl
sub
pop
pop
lods
scas
rcpps
pop
mov
add
cmpsb
ljmp
mov
push
mov
out
rcl
test
push
sub
sbb
cmp
xor
mov
aaa
iret
jbe
adc
aad
inc
cmp
push
fsubp
xor
loop
call
enter
mov
dec
cld
jbe
add
cmpsb
fabs
mov
cmc
jecxz
or
cwtl
mov
add
loopne
push
stos
mov
loope
es
fsubs
repz
aaa
not
outsb
mov
xor
or
cmp
mov
mov
loopne
cmpsl
lahf
fs
pop
into
sub
sbb
bts
out
sahf
ss
xor
mov
lock
ljmp
mov
sbb
rcl
add
inc
dec
jnp
push
cmp
mov
add
and
cmp
push
nop
push
push
xchg
mov
lret
pop
aad
dec
push
and
adc
mov
adc
inc
bound
or
xchg
lahf
and
sti
outsb
push
adc
imul
out
pop
mov
imul
nop
mov
mov
push
cld
push
adc
mov
xchg
iret
jmp
xor
jns
popa
pop
test
je
aad
push
js
loope
dec
mov
fcmovbe
add
mov
add
lret
mov
out
mov
or
push
push
int3
pop
adc
cmpsl
jo
xor
adc
add
call
bound
push
sbb
inc
orb
mov
mov
cld
adc
pop
inc
insl
jle,pn
xchg
jle
test
jp
adc
xor
or
sub
std
int3
sbb
daa
loopne
mov
mov
loope
rclb
add
and
sarl
inc
cmp
push
mov
imul
cmp
inc
pop
sahf
adc
incl
mov
ret
pop
cmp
fsubrl
fstpl
fidivs
hlt
or
push
and
ds
adc
outsl
or
xor
fwait
test
shrb
out
inc
iret
mov
mov
xor
icebp
jle
in
xlat
sbb
xchg
or
cmp
push
and
cmp
inc
out
cmp
dec
outsl
inc
cmp
mov
cmp
mov
xor
sahf
aam
outsb
jno
ds
push
lcall
mov
mov
inc
repnz
sub
popf
push
mov
test
xor
mov
mov
aaa
and
mov
dec
pop
imul
adc
xchg
push
pop
pop
and
or
in
insb
or
notb
mov
je
mov
movsb
paddusb
scas
into
mov
push
sbb
ja
scas
cmp
push
xchg
xchg
icebp
cli
mov
jne
adc
jmp
repnz
or
int
scas
jle
stos
fnsave
dec
mov
ljmp
jmp
ja
cmpsl
in
mov
add
push
xchg
jnp
adc
rclb
out
sti
cli
jle
movsb
push
mov
push
add
jae
mov
loop
int3
iret
lods
cmp
cld
test
aaa
inc
loope
cmp
shll
cld
pop
cmp
repnz
xchg
inc
jns
notl
mov
push
jno
mov
popa
xlat
fcoml
ja
sti
pop
xchg
enter
popa
loop
sub
insl
cmp
ss
cmp
faddl
fsubrl
in
fsubrs
jae
enter
imul
pop
sbb
fs
mov
mov
xchg
lods
pop
mov
sub
mov
cwtl
fists
push
inc
push
pop
das
push
insl
jbe
jge
xchg
jg
push
pop
cmc
cmp
xor
in
hlt
out
xor
mov
js
fstl
scas
sub
cmpsb
mov
xchg
mov
sub
fnstenv
stos
cmpsl
or
mov
cmp
hlt
jl
nop
mov
imul
dec
push
ljmp
cmc
outsl
ret
push
dec
loopne
xchg
dec
mov
test
pushf
lret
add
jb
mov
repnz
stos
inc
divb
je
repnz
pop
mov
jae
filds
inc
mov
jns
cmpsl
test
fstpt
xchg
sbb
jg
dec
movsl
mov
cmp
adc
adc
cld
lods
pop
test
cmp
aaa
scas
xor
jb
popl
pop
leave
mov
and
sbb
mov
or
add
adc
xlat
jns
stc
lea
ljmp
sub
leave
iret
insb
pusha
jo
mov
insb
out
scas
push
cmp
sarl
outsl
mov
pushf
xor
mov
and
or
mov
idivb
jl
outsb
inc
mov
daa
sub
icebp
jmp
mov
add
fsubl
mov
xchg
or
movsb
jns
adc
mov
or
sub
jmp
adc
outsl
jb
scas
outsl
loop
std
or
pop
fcmovu
xchg
sbb
dec
js
xchg
mov
test
xchg
jo
ret
sub
mov
mov
rol
mov
not
es
pop
mov
cmpsl
insb
dec
ljmp
mov
pop
pop
mov
pushf
mov
rolb
mov
aaa
xchg
push
inc
aad
insl
js
sbb
outsl
scas
pop
roll
cs
aam
fwait
mov
loope
hlt
and
inc
aad
sbbb
add
jecxz
mov
popf
test
scas
mov
inc
test
outsb
fdivs
pop
cmpsl
out
adc
jmp
mov
xor
sub
push
bound
cmpsb
fldenv
mov
pop
adc
lahf
stc
shl
imul
pop
test
aas
sarb
sub
pop
cmp
pop
mov
and
leave
push
jnp
push
popf
pop
sub
pop
fstpt
retw
push
jae
or
aam
out
lds
fidivl
xchg
push
mov
jmp
sti
int
lcall
gs
mov
out
pop
scas
loop
fdivrl
cmpb
decl
call
into
gs
cltd
mov
inc
dec
leave
aas
cmpsl
push
aaa
cmpl
decl
mov
fs
subl
shll
data16
mov
dec
in
mov
add
es
dec
aad
dec
sub
movsl
sbb
jle
jb
xor
into
call
pusha
sub
inc
pop
and
adc
hlt
cmp
sub
jnp
ret
shrb
jno
cmc
cmp
leave
int
std
pop
lahf
or
fisubl
jmp
lods
in
je
les
lods
xchg
mov
lcall
pop
mov
push
mov
jae
xchg
outsl
arpl
outsb
aaa
xlat
aaa
lea
outsb
sahf
sbb
dec
mov
cmp
and
and
mov
clc
imul
cli
sbb
adc
pop
sub
repnz
clc
mov
jo
push
sub
mov
lret
mov
xor
inc
push
xchg
testb
push
cmp
rcl
iret
xchg
iret
add
leave
aaa
mov
out
into
sarb
fwait
mull
adc
sbb
mov
push
popf
pop
scas
lret
push
mov
adc
call
inc
pop
adc
insb
in
loopne
aam
xor
cmp
mov
mov
xchg
xor
shlb
add
jecxz
pop
sbb
dec
iret
cld
test
push
jl
add
add
xchg
ss
into
add
hlt
pop
push
sbb
cmp
xor
jg
repnz
out
aaa
jnp
or
loopne
inc
xchg
and
xor
out
inc
scas
mov
pop
pop
movsb
xchg
fucomp
lods
or
mov
sub
lret
cmp
fmulp
cld
subl
sbb
stc
das
xor
rolb
dec
xchg
insb
lret
or
out
cmp
mov
mov
pop
pop
inc
mov
nop
andb
jle
pop
fstps
inc
fs
les
mov
aaa
inc
mov
iret
bound
dec
and
adc
rcrl
fucomi
mov
push
inc
sub
ja
dec
imul
and
ds
das
mov
cmpsb
jae
or
adc
push
jne
popa
out
int
getsec
fistpl
aas
in
shlb
sahf
jge
das
mov
sbb
adc
ds
cmp
push
jbe
sbb
push
ss
or
addr16
pop
icebp
xor
cmp
int3
aam
pop
shrl
sbb
jmp
mov
sub
xchg
and
cmp
push
xchg
inc
jmp
cmp
cltd
pop
push
mov
inc
aas
mov
cmp
push
imul
mov
hlt
cs
xchg
clc
lock
popa
push
mov
cmpsb
repnz
mov
mov
cli
ds
and
and
mov
insb
std
mov
cmpsl
mov
loope
inc
lods
or
sub
pop
jle
jp
pop
mov
jbe
push
adc
ljmp
mul
rcrb
sub
xchg
dec
stos
push
aas
inc
enter
ret
xor
adc
mov
jne
mov
aam
sar
iret
add
jb
cs
imul
sub
adc
js
nop
imul
push
lea
pop
push
stc
dec
cmp
add
fdivrp
jg
jp
pushf
testb
mov
jge
jp
pop
movsl
cmpsl
addl
lret
call
push
and
jecxz
subb
pop
mov
test
cltd
dec
ds
arpl
repnz
call
repnz
xchg
inc
jmp
xor
pop
fsubp
mov
mov
mov
and
fs
inc
dec
pusha
aam
pop
jecxz
scas
lods
cmp
stos
xorb
sub
xlat
lock
lea
mov
lret
or
sub
lret
dec
popf
xlat
add
pop
dec
sbb
lahf
icebp
push
pop
xchg
push
dec
add
int3
sti
pop
jb
lea
mov
lods
scas
ret
and
push
mov
ret
mov
daa
push
fchs
fsubrl
mov
repnz
ja
mov
add
sbb
stc
call
inc
repz
hlt
cli
mov
bound
push
or
mov
push
addr16
jo
pop
dec
push
fstpl
ret
rolb
inc
xor
mov
mov
inc
scas
pusha
arpl
mov
icebp
cmpsl
loope
in
stos
or
js
arpl
mov
jmp
pop
pushf
adc
clc
fwait
inc
aad
xchg
imul
cmp
add
rolb
cltd
dec
in
ljmp
xor
fcomps
cmpsb
outsl
cwtl
sub
mov
push
faddl
cmp
imul
iret
dec
pop
mov
sbb
sbb
mov
into
push
cmp
mulb
mov
or
fstl
cld
jmp
sbb
lock
mov
push
cmp
jb
jnp
jne
js
adc
in
or
aad
in
dec
ret
movsb
daa
imul
stos
ret
inc
push
faddl
jge
jp
push
ljmp
adc
xchg
arpl
inc
inc
shrb
iret
stc
push
daa
adc
js
inc
pop
cmp
push
xchg
jmp
cmp
inc
cmp
fimuls
or
insb
add
popf
xchg
cmpsl
jecxz
mov
daa
test
icebp
push
insb
dec
adc
mov
jle
pop
and
movsl
mov
or
jnp
push
in
adc
or
push
dec
adc
into
repz
loop
dec
ja
movb
xchg
ret
sarb
or
movsl
xchg
clc
mov
xchg
sub
mov
dec
enter
ret
sbb
cli
or
shrb
cwtl
sahf
dec
sahf
iret
or
cld
faddl
mov
nop
std
sbb
push
pop
in
push
sub
or
sub
xchg
mov
hlt
mov
inc
bound
push
nop
jae
jae
add
aaa
sbb
and
lods
inc
or
inc
mov
pop
mov
sbb
inc
out
enter
shll
push
loop
rcll
xchg
push
cmpsb
or
arpl
imul
mov
sbb
mov
pop
mov
cmp
packsswb
mov
sub
jnp
inc
out
xchg
adc
jb
jno
lret
mov
cli
push
or
jge
mov
ja
mov
mov
pushf
rcr
in
dec
mov
cmpps
jg
xor
cltd
sar
fnstsw
mov
push
lods
mov
jle
xchg
jmp
or
pop
aam
mov
stos
and
xor
pop
aam
inc
ljmp
jmp
inc
add
fs
ficoms
mov
lcall
dec
out
cmp
and
dec
pop
sahf
fwait
aad
lods
jo
sbb
mov
adc
xchg
mov
mov
sbb
inc
mov
dec
adc
mov
push
test
repz
push
addb
lock
pushf
and
jbe
mov
mov
outsl
cmp
shll
subb
std
push
rolb
imul
rcr
jo
add
dec
ds
cmc
xchg
popa
fdivrs
mov
push
inc
push
pop
mov
loope
xor
loopne
sub
aad
in
adc
xor
push
inc
pop
pop
and
push
stos
ds
fs
pop
or
mov
or
sbbb
pcmpeqd
and
leave
mov
mov
popf
mov
inc
jno
add
sub
mov
sahf
aam
into
inc
hlt
push
push
dec
sbb
pusha
cmc
mov
in
popf
lods
xor
jmp
add
insl
js
shll
fwait
mov
pop
push
mov
in
xor
push
hlt
lds
adc
inc
xchg
fnstenv
xchg
xor
movsl
sbbl
inc
rcl
into
pop
jg
jno
lock
mov
mov
imul
mov
mov
adc
int3
mov
aam
pop
adc
sar
dec
test
pop
lea
inc
mov
mov
mov
loope
in
fsubrs
add
int3
cs
mov
pop
mov
pop
push
repnz
cmpsb
and
daa
cmp
cld
into
xchg
xor
mov
test
jle
lock
in
rorl
aaa
inc
ljmp
cs
mov
jo
movsb
xchg
call
adc
call
sub
pop
inc
scas
cmc
movsl
and
lcall
vmwrite
mov
hlt
push
fdivl
out
hlt
push
dec
test
mov
xchg
les
inc
jne
insb
mov
and
fsubrl
shrl
hlt
inc
mov
test
mov
dec
pop
add
add
lods
sbb
pop
xchg
push
enter
push
dec
les
sub
leave
movsl
fstpt
sbb
dec
enter
ljmp
mov
aad
arpl
sub
mov
pop
pop
xor
sub
xlat
loopne
in
bound
mov
scas
pop
inc
push
gs
xor
stos
imul
and
in
sbb
and
movsb
pop
push
roll
aad
jle
test
pop
lret
lret
jbe
cli
pop
push
cmp
lods
stos
into
std
lock
fisttps
adc
insl
out
rclb
lea
cwtl
mov
pushf
lods
ret
daa
sbb
push
imul
xchg
andl
outsl
jl
jge
inc
pop
test
push
addr16
or
movsb
cmpsb
add
push
nop
je
xor
jo
xchg
push
xor
mov
xor
div
scas
pop
mov
lods
cmovl
xchg
sbb
pop
jo
sbb
pusha
adc
test
add
testl
ficompl
jns
test
dec
aas
sub
ja
mov
int3
ja
lds
sub
popf
add
dec
mov
cmp
shrb
push
fwait
push
int3
mov
test
cmp
and
ja
stos
mov
push
jl
mov
and
jmp
push
sbb
dec
ljmp
adc
js
movsl
loope
loop
test
jg
sbb
xor
pop
sbb
xor
mov
adc
sti
pop
cs
xlat
sbbl
andl
push
loopne,pn
fcom
mov
lret
add
mov
mov
movsl
mov
push
imulb
xor
shl
mov
xchg
xchg
push
fmull
stos
cmpsb
xor
lahf
or
aam
xrelease
out
add
mov
inc
out
repz
repz
pop
iret
lahf
mov
test
out
push
xor
mov
cmp
fcoms
fldenv
cwtl
les
enter
adc
dec
shll
and
fildl
loope
das
and
cmc
jmp
cmp
rorb
mov
ljmp
xchg
cmpsl
adc
xchg
sbb
add
push
pop
fimull
mov
pop
fsubrl
push
pop
cmp
adc
xchg
insl
and
mov
add
sub
jo
dec
call
lcall
fsts
out
and
push
push
sbb
xchg
push
mov
stos
rclb
push
rorb
sbb
andb
test
daa
mov
jg
push
imulb
test
adc
aas
jle
repnz
enter
ret
sbbb
pop
hlt
pushf
dec
fsubrp
sub
jl
out
lock
jo
pop
inc
push
push
shll
inc
sub
fisttpll
adc
pop
sarl
push
xchg
fs
and
stc
xchg
cli
rolb
in
push
loop
pop
jb
and
nop
push
mov
cmpsl
or
jb
mov
jne
call
cmp
aad
mov
add
andl
mov
lret
inc
mov
ret
stos
dec
jl
xchg
hlt
outsb
adc
mov
cmpsb
cmpsl
push
sbb
mov
fsubr
xor
cwtl
jecxz
ret
je
cmp
jl
int3
mov
lea
jp
loope
inc
cmp
enter
sti
scas
inc
xor
outsb
mov
mov
das
cmp
xor
jle
xchg
mov
add
fsubs
mov
mov
rcll
push
stc
dec
add
xchg
fcoml
inc
or
clc
sarl
jl
add
mov
fsub
pushf
mov
jle
and
mov
in
insb
test
ret
add
sbb
out
xor
dec
mov
adc
or
addr16
xchg
test
inc
int
scas
outsb
adc
sbb
test
cwtl
pop
add
xor
pop
aad
sbb
or
cmp
and
sub
dec
cli
fwait
fs
jae
in
pop
out
stos
enter
add
test
push
repz
dec
sbb
push
jbe
push
dec
inc
lock
lds
dec
outsb
push
mov
stos
xchg
xor
push
xchg
mov
push
mov
test
dec
mov
movsl
mov
in
test
sbb
or
mov
inc
sahf
jp
mov
xor
cwtl
push
insl
addl
dec
ljmp
inc
or
xchg
mov
mov
inc
nop
pop
das
leave
mov
les
sub
cmpsl
mov
int
dec
clc
leave
mov
sub
mov
or
in
jb
incb
bound
addr16
andl
mov
dec
mov
adc
pop
fcmove
inc
cmp
aam
jecxz
and
push
sub
lret
xorb
push
inc
in
jno
aaa
pop
xchg
sub
insl
js
sbb
and
mov
loope
xorl
jne
cld
outsl
xchg
pop
mov
or
sub
adc
stos
fistl
sub
sbb
push
xor
in
lods
insl
inc
mov
fists
cmp
fstl
dec
jmp
sbb
mov
or
inc
out
add
hlt
pop
push
aad
fildll
mov
mov
aam
stos
aam
jnp
lahf
fdivr
loopne
mov
out
addb
mov
leave
ljmp
stos
fcompl
or
test
mov
lea
movsl
cltd
lahf
add
push
and
js
ret
and
xor
push
push
fsubrs
mov
jle
jmp
adc
dec
movq
inc
pop
cmp
jae
in
call
in
xchg
data16
push
aaa
cs
jbe
xchg
and
mov
gs
iret
sbb
lds
out
dec
push
aad
pop
outsl
jecxz
add
cs
or
mov
and
dec
imul
ljmp
mov
or
rcrb
data16
aad
test
mov
stc
sub
xchg
dec
lret
outsb
xchg
pop
idivl
repnz
push
test
clc
bound
or
jl
xor
xor
cmp
pop
cs
lods
rcrl
mov
pop
sbb
xor
inc
mov
jmp
cmp
add
out
jle
mov
and
adc
shl
jl
es
in
sbb
xchg
xchg
out
jno
lods
push
cwtl
and
sub
scas
int
in
mov
sahf
sub
arpl
sub
cli
shl
xchg
sti
aas
shrl
push
inc
fwait
ds
and
pop
iret
adc
js
bound
dec
scas
rcrb
imul
jmp
push
dec
stc
jmp
pop
jo
stc
imul
fwait
aaa
cmpsb
scas
mov
test
out
cmp
les
push
xor
pop
sbb
stc
push
les
pop
dec
lea
xor
pop
cmpsl
fcmovne
rol
dec
inc
std
fldenv
aam
dec
mov
push
aad
adc
movsb
scas
inc
dec
pop
mov
dec
ljmp
jg
sub
jae
push
cmpl
test
adc
push
jecxz
adc
mov
decl
jbe
test
test
xor
adc
lock
jp
sbb
lret
push
mov
test
iret
fsubl
add
stos
xor
jb
fcom
xor
inc
fisttpl
test
into
mov
xor
inc
mov
xchg
cld
js
or
and
les
imul
xchg
test
add
pusha
cmp
test
je
fnstsw
cmp
push
aam
fcomps
cmp
push
dec
sub
movsl
jno
andl
sub
inc
mov
or
sbb
jno
shll
or
aad
lods
and
roll
inc
adc
imul
fidivrs
push
out
pop
mov
mov
adc
lock
insb
add
inc
xchg
mov
ret
cmpsl
push
inc
repz
mov
cmp
scas
or
fdiv
test
test
sbb
nop
ja
xchg
xlat
pop
add
adc
test
fstpl
das
xchg
sub
mulb
sahf
xorl
sbb
adc
sub
xor
icebp
jb
or
xor
out
hlt
cmpsl
repz
push
sub
rcrb
in
mov
sub
das
pusha
push
loopne
jle,pt
add
dec
popa
fcoml
xor
mov
fst
movsb
repnz
mov
pop
shufps
sub
aad
xchg
pop
or
addr16
xor
mov
fs
addr16
enter
jne
jecxz
mov
push
and
lcall
out
nop
in
lret
movsl
sbb
push
inc
jns
fldl
dec
int
push
cwtl
push
test
aad
addb
mov
sub
sub
in
jnp
stc
push
jne
pop
or
add
ljmp
add
cs
rorl
outsb
lret
add
test
jl
cld
inc
lahf
out
xchg
xchg
rcll
push
or
dec
mov
ja
jmp
sub
cmc
lret
xor
fimull
jno
fdivrl
lret
shrl
dec
sbbb
cli
xor
mov
dec
xchg
cld
mov
xchg
jno
fsubrs
bound
add
xchg
scas
mov
mov
cmc
jae
sbb
fmuls
xlat
jne
sub
or
ret
faddl
pop
imul
mov
shll
cs
push
aad
push
xchg
inc
cwtl
scas
xchg
jo
mov
in
test
jmp
stc
dec
ret
push
mov
test
sarb
jno
dec
xchg
in
cmp
aam
out
adc
mov
out
sti
jmp
or
data16
or
sbb
js
test
sbb
out
mov
test
or
daa
ja
dec
shll
pop
inc
pop
stos
sahf
mov
in
popa
sti
pop
jbe
call
and
dec
cmp
jg
in
lcall
and
jbe
sub
add
movsb
arpl
xchg
add
push
outsl
add
jae
sbb
dec
inc
ss
test
les
movsl
pop
push
stos
cmp
dec
dec
mov
mov
sbb
mov
push
les
mov
and
lea
jl
sbb
dec
or
and
xor
pop
icebp
adc
adc
scas
idivb
cmp
jecxz
xorl
cmp
mov
movsl
repz
mov
xchg
cmp
test
imul
push
mov
mov
sahf
dec
std
cmp
stos
int3
xor
sub
sub
adc
out
mov
pushf
lahf
xchg
scas
mov
or
call
mov
add
xchg
push
loop
das
shrb
lods
pusha
cltd
and
addr16
cwtl
pop
pop
in
sbb
loop
push
xor
imul
xor
fsubrs
cmp
sub
push
loopne
mov
inc
lods
jbe
xchg
pop
iret
bound
xchg
mov
xchg
mov
dec
adc
ficoms
jnp
jns
cld
cli
xchg
push
sbb
dec
outsl
and
fldl
push
cmp
xchg
push
je
adc
jge
and
popl
cltd
shrb
and
or
cli
inc
mov
push
add
add
int
xchg
mov
push
xchg
addb
aam
dec
inc
call
sub
sahf
enter
icebp
or
repz
and
enter
push
cmp
rcrb
shl
or
inc
pop
adc
inc
jne
fisubrl
mov
xchg
in
pop
jge
push
pusha
cmpsl
xor
scas
mov
xchg
repnz
aaa
ret
daa
adc
lods
clc
scas
mov
cltd
adc
int
stos
mov
lcall
jp
lds
cmp
aam
ja
pop
fucomp
aad
stc
sub
xchg
das
push
cmp
dec
push
cmp
mov
out
nop
and
cltd
push
and
xchg
in
push
enter
xchg
je
cwtl
in
mov
cwtl
mov
adc
and
das
jb
test
cmp
or
cmp
in
push
and
xchg
dec
ret
iret
inc
mov
repz
mov
outsb
ret
imul
cmc
fiadds
sbb
enter
mov
js
xchg
adc
mov
push
lahf
inc
bound
mov
or
push
sub
fsub
js
frstor
and
pushf
mov
scas
rclb
mov
mov
pusha
mov
ret
mov
push
jle
rcrl
jbe
lret
sahf
add
out
lret
mov
popf
pop
mov
cmp
pop
stos
inc
pushf
test
hlt
or
icebp
test
sbb
cli
std
ss
jmp
mov
cmp
sbb
insl
inc
or
jmp
ljmp
repnz
pop
imul
pushf
and
cmpsl
mov
xlat
sbb
test
sbb
xor
or
fsubs
mov
xchg
leave
add
mov
lret
icebp
fwait
or
inc
dec
inc
cmp
sbb
rorb
popf
std
dec
cwtl
mov
popa
out
popa
add
flds
test
imul
sahf
test
es
xor
pop
cmp
cmp
mov
mov
lds
and
and
sbb
shrl
outsb
lods
push
cmp
out
mov
or
in
outsb
xor
divb
lods
adc
xchg
mov
jmp
call
inc
mov
mov
lret
arpl
scas
inc
popa
push
adc
lea
rcll
jo
adc
xor
add
inc
xchg
aad
jns
cwtl
pop
insb
xor
or
or
mov
xchg
fsts
xchg
aas
pop
add
mov
mov
aaa
dec
cmpsl
xor
jne
notb
jns
out
orb
aam
pop
dec
bound
jecxz
test
jnp
inc
movsb
rclb
sbb
xchg
std
xchg
inc
sbb
sarl
lahf
ret
sti
cmpsl
mov
bound
addr16
cmpsb
or
js
iret
mov
xor
inc
repnz
adc
divl
push
dec
addb
push
add
adcl
enter
into
rcl
in
cmc
cmpsb
movsl
push
scas
xor
cmpsb
pop
push
mov
xlat
xchg
aas
cmc
sbb
movsb
push
rorb
add
leave
shlb
cmp
add
and
aad
xchg
jmp
sub
jo
dec
data16
pop
adc
out
mov
stc
and
call
jno
in
sub
fistpll
fmulp
aad
or
mov
add
in
data16
movsb
xor
scas
mov
jns
sbb
and
inc
bound
outsb
xchg
jmp
es
out
sbb
fnstcw
push
fildl
cmp
out
push
pop
sbb
jg
out
icebp
sbb
js
dec
ljmp
mov
xor
daa
sti
mov
sti
mov
jno
pop
jbe
or
dec
push
adc
mov
sti
popf
pop
call
lcall
aam
jecxz
cmp
and
jmp
xchg
mov
pop
dec
mov
fs
cmpsl
ret
fs
xlat
mov
sahf
repz
push
mov
pop
lock
ss
jmp
pause
cmp
cmc
enter
mov
imul
scas
mov
sbb
xchg
pop
mov
lret
test
mov
lea
clc
rorl
push
sbb
and
lock
sbb
lret
adc
sbb
sbb
mov
movsb
xor
ds
movsb
mov
sub
cmp
sahf
or
outsb
imul
push
cmc
fsincos
cli
mov
xchg
cmp
mov
xor
popa
add
mov
leave
jbe
adc
fwait
sbbl
sbb
movsl
add
mov
jp
popf
lret
jg
xchg
es
lds
cwtl
push
xor
movsl
mulb
fwait
stc
mov
lods
push
xchg
aas
jo
js
ljmp
mov
mov
add
aas
call
mov
xor
mov
mov
cmp
adc
sbb
scas
psubusb
lock
fsubp
fwait
insl
test
cmc
or
aas
lods
aas
pop
jg
xor
pop
aaa
les
ja
arpl
pushf
xchg
pop
add
cltd
or
in
popf
ret
cmp
sbb
xor
btr
or
add
movsb
jmp
pop
cmp
lret
mov
dec
push
sub
sub
insb
pop
jb
gs
xchg
mov
data16
adc
push
xchg
push
loop
addr16
fsubs
ret
cmp
sbb
dec
cmp
xor
mov
jg
lahf
int3
pusha
cld
add
sbb
cmpsb
movsl
fsts
pop
dec
lock
test
lods
icebp
cmpsb
leave
shl
cli
cld
test
mov
test
movsl
js
pop
jb
mov
in
jecxz
mov
aas
movsl
mov
and
dec
mov
popa
icebp
addr16
popf
ja
push
xor
xchg
imul
lret
test
jl
sub
dec
sub
sbb
in
mov
dec
aam
outsb
sbb
aad
mov
and
mov
push
mov
movsb
pop
popa
divb
loop
aaa
mov
outsl
ret
push
mov
sbb
icebp
and
subb
cmp
lods
jmp
loope
inc
stc
std
cmp
push
adc
pop
sti
insb
pop
flds
sub
popa
xchg
cmp
popa
inc
fyl2xp1
mov
ret
push
jecxz
mov
mov
cmp
jle
mov
jne
out
gs
xchg
xchg
into
lock
data16
inc
fwait
repnz
out
or
add
ss
cmpl
mov
pushf
push
mov
jbe
cltd
stos
imul
loopne
fucom
inc
dec
xchg
lret
mov
pop
test
call
push
fidivrl
mov
jbe
clc
adc
int3
scas
pop
ret
mov
xor
cmp
add
hlt
jne
insb
insl
inc
dec
lock
push
inc
mov
add
insl
mov
sbb
xor
nop
test
pop
dec
mov
mov
xchg
pushf
out
iret
jmp
les
mov
add
pop
daa
mov
inc
rolb
test
push
ja
sbb
bound
jae
gs
lcall
leave
lret
pop
divb
lea
ffree
test
movsb
dec
inc
pop
in
stos
stc
mov
pop
or
addb
imul
add
push
pushf
xchg
add
insb
mov
push
and
popa
push
dec
dec
push
push
out
or
insl
call
cld
sarb
ljmp
push
cmpsl
jnp
fisubrl
fisttps
cmp
adc
inc
dec
hlt
out
fmul
in
mov
push
cmc
imulb
ds
xor
cmc
mov
aam
mov
mov
pop
sbb
jb
xchg
sahf
iret
out
lea
jle
andl
pop
decb
pop
les
shrb
repnz
bound
shrb
cmp
leave
sub
shl
push
into
out
sahf
push
add
sub
xor
dec
lret
push
sbb
sbb
jecxz
ljmp
adc
dec
adc
das
pop
dec
jg
cmp
adc
test
and
shr
inc
sbb
push
call
lock
adc
pop
in
pop
movsl
leave
cwtl
inc
je
mov
scas
outsb
test
and
nop
into
sub
ss
xor
pop
mov
loop
fidivrs
repnz
sub
rcl
adc
sbb
shrl
cmp
xchg
dec
cmp
cltd
nop
pop
arpl
push
add
mov
repnz
xor
pop
out
dec
das
sub
test
push
arpl
and
shl
cmp
mov
inc
add
sub
and
pop
inc
rolb
jb
xor
dec
gs
outsl
into
mov
jecxz
inc
or
lahf
sbb
sahf
or
sub
test
fwait
sub
push
imul
mov
sub
or
pop
mov
cmpb
xchg
bound
arpl
jnp
call
insb
dec
pop
icebp
sub
mov
mov
outsl
fnclex
sub
ds
push
adc
das
shlb
xor
push
mov
dec
sbb
add
iret
leave
leave
cli
dec
movsb
xlat
nop
test
mov
sub
hlt
shrb
jns
fldl
int3
rol
mov
xor
and
sbb
call
xor
sub
add
sti
enter
inc
inc
stos
add
mov
dec
aad
sbb
mov
sbb
scas
xorl
pop
and
daa
mov
cmp
push
pop
dec
mov
jae
cld
scas
sbb
jle
jo
inc
inc
mov
inc
inc
popf
jp
cltd
dec
cld
inc
fisttpl
and
call
out
insl
adc
stos
mov
test
rcll
and
pop
push
je
mov
add
stc
lret
bound
addr16
mov
rclb
and
rcl
add
fs
inc
push
into
lods
and
pop
sbb
inc
out
fisubl
push
mov
call
shlb
popf
mov
jo
in
into
sti
cltd
xchg
pop
cltd
ret
push
xchg
fbld
out
mov
pop
mov
outsl
push
jecxz
loop
push
lea
arpl
mov
inc
dec
push
or
or
or
jb
and
fstp
icebp
stos
mov
add
and
xor
pop
jge
sbb
jb
test
xor
daa
stc
ljmp
jne
xor
das
add
cwtl
outsl
negl
iret
mov
xchg
es
and
cmc
out
pushaw
sub
mov
sub
ret
repz
xchg
call
adcb
adc
fdivrl
fisubrs
xchg
mov
sti
lcall
aam
xchg
pop
and
xchg
mov
sbb
testb
and
fistpll
insb
ds
push
push
call
jl
sub
xchg
sti
mov
mov
inc
jo
dec
sarl
sbb
hlt
out
add
ljmp
pop
cmp
push
dec
push
adc
sub
jns
stc
in
hlt
add
pushw
push
push
sbb
inc
aaa
popf
pop
sub
bound
push
sbb
fwait
mov
push
in
mov
push
push
xor
add
push
popf
hlt
or
sub
sbb
into
aad
lock
and
cmc
mov
add
sbb
and
test
push
sub
ljmp
ret
ret
idiv
mov
mov
push
adc
out
or
inc
loopne
dec
imul
jp
inc
cmp
cwtl
cltd
pop
xchg
scas
mov
cld
lods
leave
or
dec
xchg
and
xor
jo
stos
pop
dec
mov
adc
and
add
shl
jl
call
jb
mov
pop
sbb
mov
push
pop
add
shlb
loop
inc
insl
mov
icebp
mov
stos
add
dec
ljmp
dec
mov
popf
cmp
mov
pop
leave
push
test
or
test
cmp
xchg
and
xchg
imul
lret
sub
pushl
push
or
mov
mov
out
loop
mov
lret
stos
lods
push
cmpsb
repnz
js
cmp
rorb
out
cs
sbb
jmp
xchg
test
xchg
jbe
in
loope
repz
dec
adc
fisubs
and
icebp
jne
ret
push
aas
xor
or
roll
xchg
shrb
gs
and
lcall
stos
lret
dec
imul
fcmovb
sbb
jne
insb
sbb
rolb
enter
lcall
in
adc
mov
inc
scas
pop
inc
push
fnsave
loop
cli
jno
or
fdivrl
lret
stos
push
arpl
pusha
iret
cwtl
fwait
inc
dec
lahf
fisttpl
sti
inc
enter
jnp
adc
cmp
imul
inc
pusha
fimuls
mov
hlt
mov
push
mov
jp
add
sbb
aad
int
mov
and
dec
push
mov
or
fsubrs
push
jmp
sbb
cs
sbb
mov
leave
arpl
popf
adc
pop
out
movsl
jo
pop
jle
lods
cmc
and
jmp
or
cmpsb
mov
mov
movsb
imul
pushf
fmull
pop
pop
outsb
mov
fucom
jae
adc
xor
lods
js
dec
push
aaa
loop
xor
jl
push
fldl
sbb
xchg
das
idivb
xor
pop
mov
xor
daa
leave
incl
jb
lods
sub
push
sbb
addr16
pop
and
aaa
imul
cmp
das
jg
dec
xor
cltd
popa
and
cmp
lods
jb
xchg
dec
pop
sbb
pop
les
inc
adc
jge
movsl
xor
mov
fwait
sbb
pop
je
mov
icebp
sbb
jp
mov
jnp
lds
inc
iret
rorb
loopne
push
adcl
mov
jecxz
das
push
rcll
xchg
out
sbb
into
sbb
pop
enter
jp
mov
cmc
js
pop
and
jno
cmp
in
arpl
std
push
mov
or
aam
push
sub
imulb
lds
xor
jb
inc
xchg
mov
cli
jl
aaa
xchg
xlat
mov
mov
das
dec
mov
sar
cmp
xor
daa
or
and
lret
test
xor
pop
lcall
sbb
push
pop
in
xchg
inc
adcl
sbb
fiadds
dec
sbb
cld
sbb
inc
jg
jp
loope
mov
and
push
xchg
inc
cmc
push
cwtl
mov
sahf
out
pop
xchg
add
mov
fsubs
test
xor
cwtl
mov
jp
aaa
sub
jp
xchg
cs
jo
cwtl
add
xor
outsl
pushl
stc
mov
les
leave
or
repnz
movl
xor
cmp
gs
mov
imul
inc
sub
cli
or
mov
sbb
adc
sbb
sub
dec
sub
sbbl
xchg
imul
pop
inc
add
jp
push
push
in
aaa
xchg
xchg
mov
sti
loop
sub
pop
and
and
movsb
enter
scas
stos
xchg
cmp
and
js
push
add
mov
movsl
pop
mov
jnp
mov
pop
inc
pop
sub
push
pop
and
jb
sub
mov
in
xor
std
sar
jne
cmp
adc
push
dec
push
push
out
sub
ror
loop
icebp
mov
jmp
mov
sub
and
dec
push
shrl
in
xchg
data16
jmp
dec
lods
cmpsl
pop
lods
ljmp
aaa
adc
mov
jne
push
sbb
imul
jae
sub
cmp
sahf
dec
iret
das
jb
rcrw
jmp
mov
imul
lods
push
dec
cmpsl
push
mov
out
fcomps
sti
push
scas
or
adc
cwtl
rclb
loopne
pop
ret
xor
pop
ljmp
jns
add
je
cmp
fdivrl
add
xor
jae
and
mov
sub
imul
add
lret
cs
push
xor
sbb
lods
call
adc
push
cmp
xor
cmc
test
or
inc
sub
pop
adc
testb
mov
and
adc
data16
mov
test
cmpsb
cltd
in
add
lcall
cmp
push
push
or
or
shll
push
test
or
inc
cmp
popa
push
xchg
movsl
mov
xchg
insl
adc
push
outsb
sub
inc
sbb
jp,pn
mov
mov
inc
inc
scas
adc
leave
jmp
sub
dec
add
js
and
jne
xchg
movsl
push
fwait
xchg
fistl
icebp
pop
or
mov
scas
scas
les
in
rclb
mov
shrb
sub
out
cmpsl
mov
pop
scas
punpckhdq
add
push
out
das
outsb
iret
repz
pop
xor
jo
add
cmp
sahf
ja
outsb
adc
fsub
xor
push
lods
loopne
pusha
bound
mov
pop
bound
jmp
insb
roll
popf
xchg
adc
jg
jno
dec
cs
pusha
dec
mov
cmpl
aad
arpl
aaa
xchg
inc
add
add
adc
and
mov
popf
out
sti
or
das
cld
btc
or
mov
mov
jne
test
lods
cli
mov
add
xor
push
into
push
or
dec
sbb
lahf
ss
call
adc
fnstenv
mov
sbb
push
push
mov
xchg
add
xorl
add
scas
mov
test
test
out
subb
push
and
iret
es
mov
stos
loopne
divl
xchg
or
mov
jns
dec
sub
inc
clc
fcmovbe
mov
and
pop
leave
jae
insb
xchg
sahf
out
lcall
call
sbb
fucomi
out
movsb
push
out
mov
repnz
lds
sbb
cwtl
stos
sub
pushf
cmp
or
add
test
repz
mov
stos
es
enter
adc
adc
lds
mov
mov
les
mov
jno
pop
into
xor
insb
in
loope
popa
xchg
push
aaa
sbb
cli
xor
add
rcl
int
xchg
mov
dec
in
popa
inc
sub
movsb
push
aam
cmp
sub
inc
scas
sub
xor
ret
jb
cmc
loop
add
aad
jae
cmp
inc
sbb
popa
test
outsb
jg
repz
cwtl
or
fiadds
mov
and
cmp
add
push
xchg
test
sbb
or
inc
cmp
mov
inc
fbld
in
popa
jns
stc
loope
adc
inc
xor
jo
dec
leave
jb
sarb
fisubrs
test
sbb
ja
mov
mov
pop
xchg
or
sbb
scas
push
stos
iret
cli
xor
imul
sub
push
fnstcw
pop
jo
pop
out
jle
xor
outsl
mov
mov
cmpb
fadd
ljmp
push
repz
popf
jnp
insl
push
jae
xor
xor
iret
pop
cmp
pop
les
pop
outsl
jns
sub
testl
out
out
mov
in
mov
pop
out
loope
std
cmpsl
test
adcl
loope
ret
std
mov
bound
sub
fistps
push
je
dec
out
jns
outsb
out
je
and
cmp
or
sbb
and
leave
pusha
cmp
and
rcll
icebp
mov
data16
jns
popf
popa
dec
ss
inc
lret
sbb
or
add
lea
repnz
ds
push
test
cmpsl
push
lods
dec
pusha
push
jno
cmc
bound
sarl
and
out
fildl
shlb
add
addr16
insb
ljmp
inc
pop
ds
inc
cmc
sbb
jge
pop
dec
or
out
pop
mov
sbb
adc
bound
xor
jle
xchg
movsb
test
lods
aam
push
popf
aam
jns
xor
mov
xchg
jo
adc
mov
xor
push
cli
test
push
mov
adc
ret
xchg
call
mov
nop
in
sub
sub
xor
mov
cmp
or
int3
add
push
adc
jp
test
flds
add
mov
xor
add
pop
das
cmp
aad
addl
adc
data16
nop
push
push
jmp
mov
shr
shll
call
pop
mov
repnz
out
in
jo
jle
rclb
lret
in
xchg
jmp
sbb
jne
mov
in
addr16
jns
sbb
rdtsc
shll
add
pop
repnz
dec
call
sbb
test
in
lret
jmp
popf
sahf
repz
sti
repz
push
or
das
pop
jne
jbe
pop
pushf
push
adcl
pop
xor
and
inc
dec
jl
loope
decb
cmp
sbb
outsb
hlt
into
jbe
push
pushf
xor
mov
mov
rclb
ljmp
lods
ss
or
shr
fnstenv
or
das
jne
mov
hlt
xchg
mov
mov
mov
mov
dec
fiaddl
and
push
inc
dec
addr16
xor
int
std
leave
adc
jge
sbb
ret
inc
insl
fld
pop
shlb
sub
sahf
fimuls
fcmovbe
gs
xchg
movsl
cmpsb
pop
jnp
sub
inc
out
dec
repz
cmp
and
loope
sbb
mov
sti
xor
popf
data16
or
fistps
arpl
popf
test
xchg
mov
adc
push
out
xchg
std
clc
lret
divb
pop
xchg
out
xchg
hlt
clc
inc
jo
scas
fstpl
repnz
pop
xor
jne
or
shr
or
cmp
out
pop
cmpsl
movsb
sub
mov
push
ds
das
lahf
adc
or
xchg
rclb
mov
int3
leave
stos
stos
jbe
insb
adc
push
ds
mov
lea
clc
pop
ds
or
addr16
sbb
jo
jge
cmp
cmpl
adc
sbb
jle
push
and
int3
or
xor
out
dec
jo
js
popf
out
mov
dec
push
fisubrs
test
out
sub
inc
adc
sub
xchg
pop
fnstcw
fistpl
bound
dec
test
jae
iret
cwtl
lock
test
jb
mov
sub
push
push
or
push
mov
pop
int
push
adcb
cltd
push
cmp
sti
movsl
lods
adc
xchg
dec
ret
cmp
mov
mov
push
push
dec
loope
movsb
adc
repz
ror
or
push
hlt
fcoml
pop
pop
nop
dec
push
xor
inc
out
call
jp
dec
push
out
add
stos
inc
cmpsl
push
mov
ja
add
push
mov
add
sbb
sbb
jnp
xcrypt-ecb
cmpsl
mov
jge
outsl
jns
jp
outsb
in
fnstsw
push
pop
xor
mov
jg
dec
jb
ja
push
pop
icebp
stos
clc
mov
cmc
adc
adc
jecxz
outsl
bound
mov
cmp
inc
std
jns
add
mov
push
mov
enter
fimuls
les
fidivs
xlat
fwait
mov
arpl
sub
mov
mov
mov
sub
pop
or
xchg
pop
int
sub
in
push
inc
negl
lods
dec
or
ljmp
iret
lods
and
sub
movsb
lahf
popa
inc
ret
and
rcr
cs
lods
cmp
push
imul
mov
push
lea
incl
mov
loope
pop
push
cmp
jp
mov
repnz
mov
pop
pop
scas
mov
test
rorl
and
inc
shr
popf
sbb
lock
add
je
xor
aam
adc
push
out
mov
cltd
in
or
inc
jge
mov
push
mov
mov
repz
into
aas
es
mov
lods
sarb
sub
mov
hlt
shlb
cmp
je
cmc
clc
push
push
or
push
das
adc
mov
adc
scas
and
aam
aam
lods
jmp
and
and
jae
lock
scas
scas
je
outsl
sub
inc
dec
jp
jmp
insl
xor
cmc
mov
fwait
out
xchg
xor
nop
add
ljmp
add
in
and
repz
in
mov
push
jno
inc
lcall
aam
cmovbe
push
cmp
out
ret
dec
xor
xchg
jle
jl
adc
push
jb
sbb
jb
dec
nop
xchg
sbb
xor
push
les
popa
sbb
pusha
mov
sbb
ja
imul
aas
add
and
sbb
xor
adc
icebp
or
filds
int
mov
mov
scas
daa
js
dec
sbb
jbe
mov
fsubs
in
xchg
xchg
or
addl
jmp
push
mov
jns
movsl
xchg
ja
push
xchg
dec
scas
and
fistps
and
iret
jns
test
cmpsb
js
jno
or
mov
jp
jp
dec
call
test
es
mov
and
mov
out
xchg
adc
lahf
pop
scas
or
cs
arpl
js
fsubs
sub
sbb
sar
scas
lcall
lahf
test
mov
mov
push
push
pop
test
mov
outsb
lahf
mov
cmp
or
jmp
jg
pusha
jge
cmp
loope
cmp
sbb
mov
cwtl
pop
jbe
ficoml
dec
or
mov
pop
ljmp
pop
adc
and
aas
jnp
push
pop
fst
inc
fiadds
popf
mov
insl
movsb
mov
dec
add
mov
iret
cmpsb
fstl
xchg
sbb
int3
lret
mov
data16
bound
orb
aam
and
xchg
scas
cld
addr16
inc
jae
pushf
pop
dec
addr16
cmpsb
xchg
sbb
mov
ret
scas
filds
fidivl
sub
or
popf
lahf
rcrb
leave
xor
push
cmp
cs
es
mov
jo
lods
sarl
iret
fs
cmp
rorl
mov
add
addr16
push
je
push
rol
mov
jg
and
jb
mov
aas
xor
int3
in
in
sub
unpcklps
push
leave
pushf
repnz
cld
pop
dec
sbb
mov
sbb
xchg
mov
test
arpl
inc
stc
mov
repz
mov
leave
out
pop
xchg
dec
and
mov
hlt
mov
ds
scas
out
pcmpgtb
push
sub
pop
loop
add
jp
test
mov
mov
addl
testl
or
je
mov
daa
fmuls
push
loope
sub
repnz
leave
stc
stos
hlt
pop
bound
std
je
dec
mov
sbb
push
mov
cmp
in
into
add
insb
cli
xor
cmp
insb
mov
push
jnp
xor
push
cmp
pushf
xchg
adc
pop
sub
rol
xchg
lahf
pop
outsb
in
in
rcr
ficompl
popa
cmp
lret
in
loopne
mov
sub
dec
outsl
ljmp
in
sbb
cwtl
enter
push
xchg
pop
push
repnz
insb
cmp
mov
pop
push
andl
adc
enter
mov
adc
clc
sbb
or
add
xchg
pop
iret
ret
pop
push
and
cmp
lret
pop
mov
stos
xchg
fisubrl
loopne
or
push
xchg
insl
rorb
enter
pop
lds
xchg
mov
and
movsb
scas
int
jecxz
imul
ret
icebp
cmpsb
add
or
add
mov
pop
call
nop
and
scas
push
pop
rorb
pop
pop
imul
sub
int3
or
sbb
lret
loop
xor
mov
jns
ja
or
dec
in
das
lods
notb
ss
mov
push
lahf
insl
mov
loope
out
cmp
cmp
lret
and
repz
out
push
les
push
sahf
scas
fsubr
mov
cmp
mov
xor
js
hlt
jne
stos
mov
or
and
xchg
hlt
mov
call
imul
stc
push
jmp
call
mov
push
std
movsb
inc
mov
scas
sbb
fistpll
mov
push
sti
pop
sub
leave
orl
clc
mov
out
lods
adc
ds
and
inc
xor
int
xor
fldenv
ret
fmull
mov
pop
aaa
je
pop
add
out
loop
out
mov
hlt
inc
and
add
cs
mov
mov
outsb
jnp
mov
insb
mov
rcll
push
mov
mov
mov
loop
xchg
out
in
or
xor
inc
dec
leave
inc
scas
jbe
fwait
mov
dec
sbb
test
inc
addr16
inc
and
das
inc
int
mov
cmp
push
cld
and
dec
mov
ljmp
movsl
sbbb
mov
imul
push
loop
mov
fnstsw
cli
lret
filds
or
fdivrs
and
adc
cmpsl
sar
add
mov
adc
add
loopne
shlb
test
push
ret
sub
sub
ss
xchg
lods
pusha
cmpsl
cli
es
cwtd
cwtl
pop
sbb
jmp
mov
push
mov
inc
mov
insl
xor
dec
inc
pop
sbb
inc
inc
sbbb
push
lea
cmpsb
or
push
adc
inc
lret
push
aaa
int3
pushf
mov
or
push
pop
stos
fmull
pop
lahf
nop
fmuls
in
add
push
add
outsl
gs
sahf
ja
lock
or
pop
mov
pop
ljmp
sbb
inc
js
aam
popa
imul
pop
lock
repz
outsl
lahf
sub
pop
cmpsl
ret
mov
xchg
mov
aas
test
add
lods
dec
pop
or
xchg
int
aam
adc
xchg
mov
pop
sub
decb
inc
out
push
jl
into
sbb
sbb
mov
sub
movsl
pop
push
js
fwait
daa
ret
adc
roll
push
and
or
insb
inc
popf
push
loope
sub
dec
jle
mov
inc
push
fildll
sbb
sbb
in
cmp
mov
add
negb
popa
scas
out
push
mov
rorl
dec
xor
xchg
cmp
cmp
pop
in
mov
adc
aas
xchg
movsl
lret
mov
lock
xor
hlt
xchg
jne
dec
lods
jecxz
in
daa
stos
ret
enter
addr16
in
test
jns
xchg
inc
or
jo
jae
pop
mov
andb
cmc
pop
inc
mov
iret
insb
fs
mov
pop
and
enter
pop
mov
mov
adc
mov
mov
sub
fisttpl
arpl
dec
push
subl
out
aaa
pop
dec
sahf
stos
xor
enter
push
xchg
xchg
stos
xor
stos
dec
push
cwtl
insb
std
sub
addr16
mov
dec
gs
xchg
cli
mov
inc
aaa
in
xor
push
jg
jg
movsb
out
cltd
push
mov
and
lds
aad
jge
mov
pop
std
mov
adc
sarl
loop
fcomip
imul
xor
adc
outsl
mov
lock
xchg
add
mov
pop
cmpsb
lds
inc
adc
jae
push
jmp
fs
push
mov
pusha
or
out
cmc
sub
or
es
mov
push
popf
xchg
mov
xchg
pushf
sub
sbb
cli
sahf
int
push
adc
lcall
sbb
jno
repz
rclb
mov
pushf
mov
jg
adc
cli
mov
xor
mov
fs
insb
adc
and
push
call
out
roll
mov
mov
inc
jo
test
outsl
xchg
xchg
daa
cmovl
inc
fdivr
cmp
movb
sub
cmc
std
dec
inc
cmp
fdivl
sbb
and
stc
jbe
push
inc
jnp
movsl
mov
scas
push
mov
xchg
xchg
popa
popa
cmp
pop
pop
pop
lea
xchg
and
test
loop
pop
push
dec
and
mov
clc
lcall
scas
cli
mov
repz
jl
loop
sub
inc
shlb
jne
adc
je
xorb
push
pop
inc
xorl
rcrl
pop
repnz
nop
aam
push
push
loopne
sub
pop
inc
pop
stos
into
in
stos
inc
clc
fsubs
jl
jg
dec
xchg
insb
das
shr
lock
jns
cmp
jb
push
fimull
fdivr
stc
lods
cs
jecxz
arpl
aam
mov
es
mov
lcall
mov
shlb
and
mov
mov
enter
sub
inc
and
aas
mov
jnp
sbb
push
push
lods
fidivrl
dec
aam
mov
iret
jge
stos
hlt
imul
ljmp
jns
jo
jb
push
pop
call
pop
push
test
fisttpll
negb
sub
pusha
sbb
sbb
jb
xchg
mov
sbb
addr16
adc
inc
and
fldcw
xchg
popa
cmp
mov
lret
push
cmp
sahf
stos
loop
dec
and
cmp
xor
test
mov
push
imul
or
xchg
pop
outsl
lock
int3
mov
negl
sahf
xor
xorl
daa
dec
add
fimull
rcr
jmp
xor
lods
sbb
dec
das
xchg
xchg
mov
lea
cmp
xlat
push
scas
notl
adc
xchg
inc
addl
mov
dec
je
xchg
int3
sub
mov
vmwrite
mov
ljmp
mov
loopne
int3
mov
dec
btc
dec
and
loop
cmpb
pop
lret
outsl
inc
cwtl
jge
sbb
mov
in
js
jns
push
adc
mov
push
xor
ss
int3
enter
mov
jmp
pop
adc
pop
inc
in
push
aas
movsl
jge
jmp
mov
mov
ss
push
cwtl
sahf
ja
shlb
scas
xchg
in
push
les
in
mov
insl
pop
mov
mov
test
jg
test
add
int
xor
enter
lods
inc
aas
out
add
sub
inc
pop
pop
test
jmp
jnp
adc
int
add
xor
cmp
pop
loopne
sbb
fisubs
or
mov
lods
pop
dec
out
je
xor
add
inc
outsl
xchg
jae
popf
pusha
gs
xchg
movsb
cmp
sub
inc
and
loopne
aad
mov
inc
or
mov
add
pop
test
add
mov
push
push
mov
ret
sub
das
jmp
xchg
lcall
inc
les
je
inc
imul
iret
ljmp
icebp
push
cltd
mov
xchg
add
sti
push
jne
lock
and
adc
jg
dec
add
push
or
push
mov
aaa
mov
fcoml
jp
hlt
lea
jmp
movsl
xchg
decl
test
pusha
cmp
ret
pop
js
hlt
gs
int3
mov
sahf
int3
ja
xchg
mov
and
pop
ss
loop
icebp
movsb
cmpsl
jp,pt
inc
push
inc
lret
mov
call
rcrb
mov
mov
out
cmpsl
xor
pushf
add
loope
mov
inc
add
lods
in
stos
cmpl
lods
int
dec
and
imul
in
popa
fcmovne
ja
push
push
jge
enter
cli
pusha
sub
movb
xchg
daa
lods
pop
lds
movsb
aad
mov
dec
shlb
inc
out
aad
cs
inc
or
insl
lret
jno
sbb
and
push
push
fdivl
ds
pop
pop
sub
std
mov
add
enter
cld
mov
fsubrl
mov
sti
jle
loop
pop
sub
pop
pop
mov
out
push
inc
insb
mov
repnz
sub
popw
popa
movsl
ljmp
loopne
or
pop
aas
in
sub
ds
jns
lds
stos
sbb
das
xlat
in
outsl
pusha
call
popf
cld
lcall
leave
fisttpll
push
lods
push
vmovmskpd
push
jno
push
inc
loop
jno
fisubrs
or
outsl
mov
cmp
pop
repnz
jae
sub
add
rorl
stos
or
cmc
push
test
jp
jbe
xor
push
pusha
pushf
stos
or
pop
pop
sahf
sbb
loope
inc
pop
adc
mov
cld
mov
mov
xor
dec
out
jnp
sub
mov
push
push
dec
and
xchg
leave
push
in
sbb
and
bound
movsl
jmp
fsts
lock
push
sbb
sub
mov
insb
sub
xor
in
sti
mov
push
lret
paddq
pushf
push
sti
fcoms
out
inc
insb
outsl
cmc
lds
pop
mov
decl
outsl
add
push
push
repz
or
add
ficoml
dec
dec
mov
dec
call
xor
call
add
fnstenv
in
in
cs
scas
and
test
push
in
xchg
popf
inc
inc
enter
insb
mov
add
inc
loop
xchg
int
insb
adc
je
push
xor
out
repz
inc
call
icebp
popa
dec
pop
popa
push
ja
mov
add
movsl
push
insb
in
idivb
sub
mov
sub
stos
fnstenv
xchg
stos
int3
imul
out
cmp
cmp
pop
adc
mov
mov
jecxz
adc
mov
xchg
lret
incb
in
mov
cld
fcomps
mov
sbb
jge
sbb
pop
xchg
sbb
popf
into
test
xchg
bound
movsl
add
mov
repz
add
mov
mov
push
orb
dec
call
or
lock
push
lods
mov
fisttps
je
lods
xorl
jl
pop
popa
movsl
loope
xchg
dec
add
sbb
leave
adc
imul
sub
sahf
hlt
lods
xor
movb
hlt
out
adc
push
lea
mov
dec
lock
inc
pop
jmp
shl
rcr
popa
dec
sbb
jmp
mov
sbb
ret
or
adc
idivl
xchg
xchg
adc
or
or
xchg
out
or
push
push
xlat
stos
fs
mov
pop
or
lods
xor
and
in
or
out
adc
repnz
ret
dec
je
sbb
or
mov
pop
test
dec
inc
push
dec
push
ret
stos
mov
sub
inc
es
push
cmp
inc
aam
pop
ret
cmp
lret
push
sub
fdiv
cmpsl
xchg
out
xlat
ret
dec
fst
and
lods
or
push
jno
nop
mov
xchg
mov
mov
inc
fsubrs
lods
sbb
xor
cmpsb
push
jne
dec
push
daa
mov
jne
sti
or
inc
sub
push
pop
push
pop
fcoml
add
in
movsl
repz
loop
aam
sahf
push
cmc
sub
nop
pop
data16
and
sbb
data16
movsb
jecxz
sahf
movsbl
push
cli
inc
rorb
xor
cmp
push
dec
inc
xlat
mov
shll
pop
arpl
int3
ja
mov
add
in
dec
sbb
mov
je
mov
cli
mov
out
movsl
std
sub
ds
xor
mov
jecxz
scas
jl
xor
jnp
pop
dec
push
mov
xor
jle
fadd
mov
jp
lret
cmp
and
sti
inc
out
mov
pop
insl
icebp
fwait
stc
dec
jecxz
xchg
inc
stos
mov
sub
ret
cmp
ficoml
push
das
shl
and
cld
xchg
cmp
mov
test
je
mov
mov
inc
xchg
jo
inc
mov
or
push
pop
adc
fdivrs
mov
movsb
sub
jmp
mov
pop
lock
or
xor
scas
ja
dec
ja
out
shll
shrb
pop
jbe
insl
mov
addl
rolb
inc
cmpsl
scas
in
lcall
add
jne
xchg
ret
and
int
pop
imul
push
mov
cmc
xorb
push
mov
cwtl
lahf
lock
jb
insb
cmpsl
lods
ret
or
adc
adc
sbb
jae
call
fsubr
push
movsb
xor
icebp
push
lcall
sbb
pop
inc
cmpsb
xor
outsl
pop
inc
arpl
movsb
mov
out
orb
enter
in
xlat
insb
dec
push
call
pop
cmp
mov
sbb
in
jl
leave
int
push
mov
pop
dec
or
pusha
movsl
mov
xlat
push
loop
jnp
lret
jbe
test
sub
or
jp
inc
sbbb
stos
ret
shlb
push
lret
adc
jo
into
loopne
pop
jl
fcoml
sbb
push
sbb
fstps
or
cmp
xor
cmp
ficoms
adc
push
lods
dec
or
pushf
xor
add
fadds
in
popf
pop
mov
pop
incl
cli
lods
je
jl
mov
in
fisubrl
dec
adc
jge
out
mov
mov
cmpsl
sbb
adc
stc
pop
adc
je
or
call
xorl
jmp
lcall
and
dec
cltd
ljmp
sub
lods
int
inc
pop
scas
inc
adc
push
adc
mov
dec
add
inc
mov
sti
mov
addl
stos
leave
sub
das
sub
push
fs
mov
inc
xchg
stos
pop
adc
cmp
jle
sbb
jp,pn
sub
gs
lret
dec
fwait
in
in
andl
push
arpl
jns
dec
mov
xchg
sahf
outsb
sub
sbb
jnp
cwtl
jl
mov
mov
cmpsl
repz
movsl
cmpsb
shlb
aam
lret
sahf
aad
aaa
or
fsubp
stc
nop
dec
data16
scas
mov
jle
cltd
inc
orl
sub
xor
mov
rolb
cli
pop
pusha
add
pusha
push
dec
dec
aas
sbbb
jb
call
mov
or
mov
lds
mov
cs
cwtl
mov
repnz
clc
xor
cmp
mov
and
test
shll
mov
add
inc
sarl
dec
idivl
mov
or
lcall
fst
dec
mov
xor
es
icebp
and
lea
mov
leave
xlat
jae
mov
clc
test
mov
xor
das
clc
pushf
sub
lahf
insb
xor
clc
cli
dec
dec
jle
je,pt
lret
xchg
xor
aas
fldt
aad
sub
into
repz
cld
pop
push
call
imul
sarl
dec
mov
or
pop
or
mov
mov
fisttpl
and
je,pt
jle
scas
fs
movsl
mov
pop
fimull
daa
dec
fs
jge
data16
pop
pop
call
push
sbb
ret
outsb
xor
pusha
je
jns
mov
cld
aas
sar
add
mov
scas
addr16
icebp
jo
xor
xchg
inc
mov
pop
sub
cwtl
out
mov
and
adc
push
iret
add
jne
andl
sarb
das
jns
sbb
dec
into
xchg
mov
js
fimuls
sub
pop
mov
and
loop
jbe
in
data16
insb
xor
pop
xchg
outsl
shrl
mov
lock
xchg
mov
pusha
rorl
insb
rcrl
nop
or
or
adc
rorb
push
insl
imul
ds
adc
icebp
push
adc
aas
jnp
leave
push
and
inc
sbb
jb
xlat
push
ja
mov
into
loop
and
je
push
or
sbb
insb
pop
sub
xchg
int3
test
xchg
test
cli
arpl
shll
neg
data16
fbld
adc
pop
cmp
inc
addl
inc
add
add
loope
mov
sbb
and
jb
in
xor
jns
repnz
push
je
xor
jle
je
dec
pop
push
xor
adc
cmp
jmp
sub
outsb
mov
lea
pop
or
lret
sub
ljmp
sub
push
and
sti
mov
mov
insl
subl
subb
mov
xor
addb
sub
cld
ja
iret
aad
in
jo
aas
adc
xchg
jg
mov
test
mov
add
movsb
rcrl
xchg
mov
dec
loope
aas
cmp
iret
aas
sub
xor
add
sbb
movsb
test
lea
les
jl
lods
inc
ja
add
jp
loope
mov
push
pop
hlt
loope
imul
jl
cmp
add
mov
inc
in
fcompl
sbb
add
imul
test
mov
int
push
cmp
lock
sbb
push
inc
rorl
outsb
sbb
sub
and
das
or
mov
cwtl
aad
add
mov
xor
inc
pop
dec
cmpsl
xlat
sub
into
xchg
shlb
mov
pop
movsb
lea
mov
aas
and
in
pop
inc
addr16
int3
popa
ret
and
mov
test
out
mov
xchg
jnp
test
cmp
mov
cmp
push
cld
sub
fxch
test
out
shr
push
ficomps
fisubrs
mov
fs
push
lds
cld
lahf
push
pop
add
and
repnz
xchg
xchg
sbb
aam
sub
push
inc
std
inc
sbb
int3
or
sbb
jecxz
push
cmpsb
or
sub
pop
dec
push
dec
pop
lahf
mov
dec
jmp
std
mov
in
mov
pop
xchg
lea
push
dec
imul
ret
xchg
out
add
sbb
stc
jno
ja
sbb
clc
mov
mov
inc
pop
adc
sbb
in
mov
movsb
cmpsb
jo
jo
movsl
dec
scas
adc
mov
clc
in
ret
or
dec
push
push
clc
jmp
mov
das
ljmp
push
addl
nop
dec
xchg
int3
iret
aam
in
push
xlat
stc
or
push
adc
mov
in
sbb
push
and
aaa
add
mov
cmc
lods
dec
adc
add
mov
hlt
or
xor
rcrb
cwtl
xor
push
sub
inc
fnsave
add
test
clc
mov
sti
sbb
add
push
mov
sub
rol
xor
fnstcw
aas
data16
fbld
inc
rclb
cltd
cld
fsub
cmpsb
lret
xchg
xchg
arpl
xchg
ja
aas
pop
aaa
mov
mov
subl
sti
pop
aas
jmp
out
daa
testl
xor
imulb
adc
sbb
adc
repnz
cmp
or
test
std
mov
pushf
sub
mov
adc
aam
dec
mov
cmpsb
jno
adc
dec
int
sbb
mov
das
pop
test
or
push
push
push
jnp
jmp
push
call
xchg
hlt
jbe
js
pop
cmp
pop
jnp
popf
jb
not
sbb
adc
scas
idivb
xchg
mov
pop
xchg
add
jge
nop
inc
adc
mov
pop
push
mov
push
test
ret
ret
insb
call
or
test
shlb
pusha
sub
mov
int
imul
sti
xor
leave
fiadds
mov
shl
imul
sub
jo
cmp
test
icebp
int3
jns
xchg
push
je
sbb
adcl
xchg
jne
shrb
jnp
jg
push
in
js
xlat
xchg
xchg
jecxz
pop
mov
imul
cmp
cmp
push
iret
cmpl
xchg
mov
das
test
js
int3
orb
cmp
cmc
adc
push
xchg
bound
rol
push
mov
xchg
push
or
scas
filds
rcrl
cld
sbb
xor
and
movsl
sub
movsl
hlt
fnstcw
fmull
hlt
mov
inc
repnz
ret
adc
outsl
pop
push
mov
mov
rcrb
inc
fwait
stc
lcall
pop
imul
jne
xchg
test
icebp
fdivrs
mov
shll
stc
or
js
mov
imul
loope
loope
fidivrs
and
test
sbb
roll
pusha
addr16
add
adc
xlat
in
cwtl
fisttps
testl
mov
cmp
xlat
and
fsubrl
adc
mov
and
popa
cmp
sub
and
mov
ret
lods
loopne
mov
cwtl
clc
clc
or
mov
dec
add
enter
clc
mov
sti
adc
jae
aaa
jp
add
xchg
sub
xor
enter
pop
lcall
jp
shlb
xchg
stos
rorl
mov
adc
jge
stc
push
insl
in
in
in
int3
cmp
xor
push
stc
add
lea
push
jno
pushf
fs
pushf
pusha
popf
push
and
jle
jmp
mov
push
popf
cmp
das
in
xor
and
push
mov
and
mov
xchg
loop
fmull
aas
es
mov
and
jns
call
int3
movsb
andl
cltd
shll
push
not
or
pop
dec
push
cs
xor
frstor
cmpsb
and
aaa
sti
jns
int3
in
and
orb
mov
xchg
aam
dec
xchg
inc
mov
outsl
loopne
add
sub
xchg
mov
sbb
jl
lds
into
sub
aad
loopne
mov
sub
mov
xlat
aaa
outsb
popa
ret
ffree
cmp
js
inc
adc
mov
stos
enter
and
nop
add
xlat
lods
jnp
icebp
pop
insb
cmpsb
jmp
sbb
shrl
jge
mov
adc
mov
ljmp
cmp
mov
inc
addr16
nop
jle
inc
cmp
test
icebp
in
bound
clc
push
inc
lret
into
rorb
hlt
shrl
mov
outsl
cs
enter
xchg
enter
pushf
mov
or
push
sub
aas
test
inc
mov
out
nop
loopne
scas
sub
icebp
in
out
jg
pop
test
cmp
mov
in
fldcw
sbb
ror
sub
and
test
cmp
xchg
push
repnz
push
es
add
mov
inc
inc
xorb
xor
test
fmul
outsl
rcrb
rcl
cmc
adc
fidivl
cmp
cmpb
jle
inc
daa
pushf
pop
stos
lret
bnd
js
lods
shlb
adc
loopne
sbb
sub
or
clc
arpl
sahf
cmp
or
and
je
xor
and
dec
adc
inc
push
scas
cmpb
xor
inc
lock
ror
and
and
inc
imul
push
out
mov
cmp
xchg
int3
add
jno
ja
int3
adc
mov
test
ret
mov
rcl
inc
mov
xor
pop
jns
adc
cmp
bnd
scas
int
scas
cmc
sbb
push
mov
push
fwait
sbb
js
and
cmp
mov
pusha
imul
mov
loop
cld
mov
pop
addr16
mov
addr16
dec
and
addr16
jb
adc
add
and
pusha
out
push
into
outsl
scas
push
jns
mov
sti
jne
imul
push
popw
cs
mov
shlb
leave
sub
mov
ss
dec
negb
pushf
cltd
inc
out
push
pop
ljmp
and
fs
push
dec
into
fidivs
mov
or
or
jl
mov
sub
jge
cmpsb
mov
shlb
dec
testb
xor
icebp
fsubs
aam
fisubrl
fsts
cmp
shlb
scas
mov
sub
xchg
jg
mov
xor
mov
mov
pop
mov
inc
test
in
mov
sbb
cld
mov
fs
hlt
inc
mov
stc
int3
iret
or
push
add
lds
jno
shrl
filds
es
mov
and
sub
jns
in
cmp
xor
inc
lret
je
fdivrp
stos
inc
jle
je
rcll
mov
js
adc
pop
cmp
xchg
inc
push
push
mov
cmpl
stos
inc
bound
pusha
aas
insl
and
and
and
rol
vmovddup
xchg
jno
dec
and
adc
shl
lahf
push
push
push
shrl
adcb
pop
adcb
mov
dec
jns
sbb
ds
jne
fdivl
subb
hlt
pop
pop
aam
cmp
cmp
sahf
hlt
push
test
sbb
scas
shll
fcom
stos
cld
mov
add
ret
pop
int
add
xchg
sbb
pop
sbb
daa
je
and
push
xor
les
stos
mov
sahf
sar
in
outsl
sbb
je
fisttpll
sbb
dec
inc
in
cld
mov
dec
shrb
mov
jl
cmp
lods
mov
xchg
cmc
mov
xchg
cmc
test
mov
fistpll
fs
push
jbe
cmpsl
dec
mov
test
mov
stos
lcall
and
add
and
lods
jne
xchg
jns
and
push
loopne
into
pop
aad
jne
fsubrs
in
sbb
pop
je,pn
es
dec
and
mov
mov
add
jl
sti
in
fistl
addl
test
adc
mov
repz
cmp
ret
movb
lods
push
sbb
aas
popf
pushf
xchg
loopne
sti
xchg
cwtl
add
ja
mov
sub
into
push
push
ljmp
inc
es
fdivrl
xchg
push
aaa
xchg
fadds
pop
pop
dec
out
out
mov
add
inc
iret
insl
pop
movsl
test
insl
mov
add
lea
dec
cltd
and
jo
cwtl
pop
mov
sub
jbe
lahf
inc
fmull
mov
fucomip
dec
jo
lea
rcll
pop
gs
adcl
xor
les
call
mov
pop
data16
negl
cmp
aaa
scas
aam
sbb
fst
or
fisubl
push
imull
hlt
into
jo
push
daa
outsl
push
sub
xor
dec
xchg
push
in
stos
cmp
push
cwtl
in
dec
inc
inc
and
mov
mov
scas
stos
sbb
iret
test
adc
into
push
sbb
pop
mov
leave
stos
out
call
mov
xchg
mov
adc
xlat
sahf
inc
sub
xchg
sbb
loope
adc
daa
xchg
shll
push
mov
pop
fwait
mov
aam
fadds
dec
fdivs
adc
xor
and
subl
in
jno
scas
in
jp
clc
inc
neg
imul
sbb
shrb
cmp
cld
jg
lahf
scas
icebp
jbe
sbb
and
jbe
push
daa
imul
cmp
daa
popa
pop
mov
add
lahf
mov
ja
inc
int3
in
mov
push
popf
cmp
icebp
je
hlt
mov
fstpl
out
xchg
arpl
ljmp
std
icebp
jo
cmp
in
shlb
adc
roll
push
xlat
inc
and
cmp
out
jl
int3
les
push
jl
and
adc
out
bound
mov
xor
test
push
addr16
lcall
push
jno
scas
pushf
repnz
xchg
adc
push
orl
and
icebp
dec
insl
pop
jle
test
or
pushf
mov
cmpsb
adc
fsts
sbb
push
rorl
jnp
xchg
shll
jecxz
ljmp
sar
int3
outsb
and
cmp
iret
data16
xchg
inc
mov
add
xchg
mov
int
leave
in
adc
add
pop
test
mov
lods
mov
xchg
mov
add
dec
ffree
cmp
push
decl
push
sub
cld
adc
push
std
xor
testl
dec
mov
notl
mov
jne
xchg
adc
push
lcall
dec
or
push
dec
mov
into
adc
adc
sarb
fsubrp
out
out
outsb
inc
add
aam
cli
out
sub
pop
cmp
sub
xor
adc
cmp
jl
sub
arpl
and
shlb
jg
outsl
pusha
pop
mov
jns
cld
dec
adc
inc
push
push
and
addr16
stc
fwait
jle
lcall
dec
and
push
jne
xor
aas
add
jp
inc
inc
outsb
or
or
outsl
ljmp
insb
hlt
loop
xor
cmp
cld
adc
jge
or
jle
inc
aas
add
mov
std
imul
movntq
out
fistps
decb
iret
insl
jecxz
jp
fs
out
inc
aad
jge
dec
hlt
cld
mov
es
out
jmp
addb
outsb
sahf
xchg
andl
mov
ljmp
mov
js
imul
push
jmp
loopne
or
dec
sbb
sub
mov
xchg
in
out
fmull
mov
mov
push
sahf
repz
mov
xlat
adc
stc
jo
jge
pop
fmull
add
test
fidivl
xor
fildll
mov
shll
adc
andb
in
js
sbb
push
neg
negb
cmc
xchg
loopne
fwait
nop
add
popl
outsl
dec
xor
push
orl
movsl
push
or
hlt
lahf
jmp
sbb
jge
mov
push
or
test
lret
frstor
jge
dec
xchg
imul
xor
adc
xor
mov
in
mov
mov
jne
push
sbb
jbe
sub
push
pop
jle
iret
jg
lret
add
inc
insb
sti
shl
lret
mov
and
sub
scas
test
arpl
cmpb
sbb
mov
cli
ja
cmpsb
mov
sub
cmp
pop
fwait
sbb
adc
mov
mulb
xchg
gs
cli
loope
mov
imul
insl
shlb
jo
mov
jns
sub
xorb
repnz
push
popa
js
shll
or
xchg
mov
or
mov
je
jo
lahf
scas
loope
dec
sub
jp
insl
sbb
mov
test
jmp
and
lods
or
xchg
pop
js
pop
mov
out
idivl
daa
outsb
sbb
xorl
mov
in
into
aam
adc
sbb
ret
xor
mov
cmp
andl
and
jecxz
sahf
xchg
add
out
sbb
sbb
pusha
sti
sub
sahf
cmpsl
xchg
cmp
cmp
jg
sub
dec
xchg
addr16
xchg
cmc
mov
pop
out
inc
sub
jp
gs
xlat
arpl
in
jns
out
sti
jmp
shl
mov
sbb
imul
repnz
test
jne
dec
mov
xchg
jno
mov
lret
or
cmp
pop
xor
xor
nop
test
das
sub
js
push
cmp
mov
cmp
pop
popa
pusha
push
pushf
ljmp
popa
mov
push
jne
sarl
mov
cmp
fidivl
loopne
lea
and
aad
jbe
xor
xor
mov
mov
out
xchg
insb
pop
sub
pop
mov
das
nop
jmp
pop
mov
fdiv
imul
daa
jle
mov
jg
in
stos
lds
adc
daa
aaa
mov
js
inc
mov
push
std
mov
mov
inc
push
inc
fsub
cmp
arpl
dec
rolb
dec
push
xlat
mov
xor
arpl
cmpsb
mov
push
and
mov
pop
rcrb
add
mov
outsb
aam
add
push
xor
iret
dec
daa
lret
lea
sub
lahf
lret
xchg
pop
mov
clc
cmc
push
push
cmp
push
mov
aam
mov
jg
popf
mov
orl
jle
cmpsl
jae
inc
dec
pop
push
lret
iret
jle
sub
sub
mov
mov
lcall
push
dec
int
shll
xchg
inc
idiv
movsb
sbb
xor
mov
das
loop
data16
and
pop
fisubrs
pop
aas
sub
inc
or
pop
test
jmp
dec
and
lret
sub
sub
ret
sub
pop
add
pop
push
mov
icebp
xchg
inc
sbb
dec
fcmovu
loopne
lret
sbb
push
fdivp
xor
test
inc
mov
dec
push
or
into
mov
lods
aam
mov
pop
push
data16
sub
mov
lcall
jne
andb
jmp
inc
jns
mov
lea
stos
push
xchg
test
jns
cmpsb
fstl
pop
aaa
sti
out
movl
aaa
test
sub
lods
inc
jae
lds
jb
hlt
jbe
int3
push
hlt
jp
movsb
cmpsb
pop
movsl
lahf
inc
add
add
jge
jbe
jb
scas
fsubr
pop
ret
sub
sub
pop
loopne
pop
adc
inc
mov
push
mov
sbb
lds
cmpsb
push
cltd
sahf
pop
lock
cmp
add
aas
lcall
xor
push
les
insl
push
mov
dec
loopne
repnz
sbb
sub
stc
ss
inc
sub
leave
into
or
int
jg
fs
sub
or
mov
push
jecxz
push
fimuls
jmp
pusha
imul
jnp
inc
jne
xor
push
cli
out
repz
xchg
hlt
mov
jnp
hlt
sti
scas
fstpl
cwtl
pop
adc
and
dec
loope
adc
pushf
mov
jp
cli
insb
jp
es
lahf
add
cmp
mov
and
mov
hlt
inc
dec
inc
loopne
xchg
out
popf
dec
imul
test
test
add
into
fs
pop
push
in
inc
sbb
xchg
mov
mov
into
loope
in
mov
fs
mov
ret
sub
cmpsb
sti
add
inc
pop
mov
xor
dec
lahf
sbb
or
mov
fildll
icebp
and
xchg
movsl
arpl
xchg
cltd
cld
xchg
movsb
ljmp
scas
clc
jl
std
sub
fidivrl
xchg
sahf
pusha
test
movsl
or
aam
call
out
call
stos
sbb
in
aam
or
and
iret
mov
fistps
dec
sub
subb
pop
lods
in
sub
lret
push
mov
xchg
je
rcrl
ret
push
sub
dec
lret
jmp
nop
scas
sahf
jecxz
adc
mov
cltd
mov
hlt
mov
fsubr
loope
dec
stos
cmp
sub
aam
pop
sub
ds
jg
sbb
fidivrl
imul
fsts
sbb
sbbb
fwait
iret
ret
insl
inc
sahf
add
ficompl
aam
inc
fsubrl
out
call
pop
xchg
adc
and
imul
rorb
loop
and
jbe
aad
pop
int3
iret
test
pusha
rorl
stc
xor
mov
pop
pushf
mov
mov
pop
sbb
testb
inc
sbb
push
cmc
mov
add
pop
lds
mov
loope
xor
pop
jmp
subb
lret
sbbl
js
lea
jnp
cmp
inc
daa
sbb
push
aaa
push
test
or
insb
sbb
out
ret
pusha
jp
sub
push
lcall
jno
adc
cmpsb
inc
fisubl
jns
jp
popa
lods
jo
dec
in
bound
mov
jg
test
rorb
sub
in
call
mov
ja
push
gs
mulb
push
or
fnstenv
sub
xchg
and
xchg
cmp
repnz
push
sub
mov
mov
add
xchg
les
adc
mov
int3
xor
mov
pop
push
add
xor
sub
sub
xchg
cmp
pop
fisttpll
divl
pop
enter
je
xor
fimull
das
fldl2e
pop
xchg
jecxz
pop
outsb
xor
xchg
xor
mov
or
cmp
xorl
sub
lods
sbb
rorl
push
loop
inc
mov
sub
sub
mov
out
sub
stc
sbb
rcrb
imul
pusha
shrl
jno
jle
pop
cs
pop
dec
mov
iret
outsl
cmc
push
xor
inc
adc
cs
aam
or
mov
pop
iret
std
icebp
loop
cmpsb
mov
jne
cmp
filds
popf
adc
xchg
outsb
push
insb
out
out
rcr
inc
jno
insb
fsubrs
cmpsl
fnstcw
into
out
fidivl
jge
push
dec
jl
loop,pt
jnp
xor
andb
sahf
xor
in
dec
lcall
shlb
xor
jnp
sbb
sub
test
pop
out
fidivs
add
sti
in
sub
xor
inc
mov
and
sbb
out
adc
rcl
pop
gs
arpl
add
xchg
xchg
add
xchg
sub
je
mov
sahf
stos
imul
fsubl
es
loop
arpl
dec
clc
aad
cmp
ljmp
lods
dec
lds
sub
out
sbb
jns
mov
int
and
popf
push
js
cwtl
lcall
shr
pop
add
rol
sbb
outsl
mov
sbb
rolb
cmpsb
mov
jmp
orps
mov
mov
add
xchg
insl
inc
out
mov
xchg
push
sub
adc
das
xor
xor
xchg
daa
push
rorb
cld
jl
and
cs
pusha
mov
enter
sbb
xchg
xor
inc
mov
xchg
lahf
rep
push
pusha
or
adc
mov
in
xchg
sti
mov
movsb
imulb
mov
into
ret
negl
mov
out
out
cld
cmp
or
mov
ss
xchg
sbb
xor
mov
popf
mov
push
int
push
lods
pop
mov
aas
jo
mov
xor
or
pop
sub
sar
in
push
add
push
mov
stc
sbb
mov
pop
imul
and
inc
ret
fldcw
lods
pop
pop
jns
mov
sbbb
mov
mov
sub
sbb
jmp
std
lcall
stc
pop
xchg
loop
pop
xor
int3
pop
insl
and
aas
out
jns
mov
jge
fcoml
and
aaa
ljmp
mov
adc
lds
xchg
jle
ss
fsubrl
push
cmp
xor
int
mov
mov
repnz
fwait
test
frstor
inc
in
cmp
xchg
ljmp
in
xchg
inc
xchg
xlat
addl
rcll
pop
dec
adc
xchg
sbb
cld
call
jb
or
adc
insl
aas
jg
daa
ficoml
ds
mov
addr16
cmp
sarb
mov
call
dec
jo
push
test
mov
or
jo
mov
push
lret
ss
add
jns
imul
rorb
pop
shl
stos
and
inc
jmp
pop
cmp
sbb
ljmp
daa
sub
xorl
xchg
clc
pop
out
jmp
dec
fsubrs
mov
sbb
rcl
std
sub
mov
or
lret
sbb
xchg
inc
xor
push
sbb
cmc
inc
mov
sub
mov
inc
lcall
push
lcall
shlb
fdiv
sahf
or
ss
lret
lret
dec
sahf
fstl
arpl
insl
pop
xchg
jmp
lea
enter
sub
mov
push
mov
lret
push
cmp
sbb
cs
pop
ret
lahf
or
movsb
dec
push
xchg
outsl
scas
adc
dec
jnp
ds
xchg
pop
jg
xchg
sub
xlat
push
add
pop
inc
dec
cwtl
jae
jo
aaa
lret
xor
cli
dec
rcrl
stos
or
sbb
js
mov
mov
jnp
hlt
mov
sbb
and
test
in
mov
mov
loopne
dec
int
or
jb
push
cmp
mov
lods
sbb
gs
inc
insl
jno
pop
xor
ds
sub
pop
add
mov
orl
stc
add
pop
push
inc
dec
push
jae
imul
mov
in
mov
xor
add
arpl
pop
addr16
add
shr
dec
dec
insb
sub
pushf
lods
out
xor
dec
clc
cs
orb
push
in
into
push
ss
ljmp
cltd
popl
fiadds
mov
lods
pop
in
cld
mov
push
mov
inc
dec
test
shlw
test
fildll
stc
sub
pop
mov
cmovs
add
or
clc
mov
rcrb
ret
les
or
repz
xor
rcrl
pusha
cs
sub
add
repnz
pop
and
adcb
outsb
ret
adc
sti
insl
js
pop
add
lahf
mov
out
and
movsb
ficoms
lret
incl
jg
dec
lcall
daa
cmpsl
loope
jecxz
repnz
pop
pop
loop
xchg
dec
jmp
sub
push
inc
mov
je
add
push
loope
mov
jb
mov
inc
iret
push
push
cmp
ficoms
cmpsb
cs
sbb
xchg
out
xor
shlb
push
aad
sub
dec
pop
popa
cmp
pop
clc
adcl
pop
pop
mov
add
lcall
bound
jbe
imul
mov
addr16
scas
mov
push
pusha
mov
imul
sbb
inc
jl
movsb
mov
mov
in
xchg
and
or
adc
mov
jge
cmp
mov
cld
fs
sub
sub
sub
inc
push
hlt
or
stos
mov
jns
ds
sub
stos
inc
call
sbb
test
addr16
adc
out
add
pop
xchg
push
orb
adc
int3
mov
ja
fildll
repnz
rclb
xchg
adc
xor
popa
xchg
add
lret
jl
xor
fimull
stos
mov
outsl
iret
out
loop
cmpsl
ret
nop
xchg
adcl
sbb
popa
sbb
xchg
gs
pop
add
fnstenv
jmp
inc
xchg
mov
aam
cli
mov
adc
in
dec
popa
rcll
loopne
divl
mov
push
fisubrs
into
xor
mov
icebp
rorl
sub
mov
js
add
test
fsubrs
fldcw
shll
popl
push
cmpb
in
dec
inc
xor
mov
aam
lret
push
jno
pop
dec
cmp
sbbl
leave
adc
call
enter
ret
or
mov
xchg
aaa
mov
mov
pop
lcall
pop
add
fsubrs
test
push
cmp
pop
nop
and
add
push
adc
cmpsl
neg
adc
xchg
scas
inc
push
jge
mov
jb
or
push
mov
mov
inc
jmp
insb
adc
xchg
arpl
out
or
pop
and
mov
push
outsb
mov
inc
std
pop
cmovbe
pop
add
scas
lea
xor
adc
jge
adc
lods
in
adc
fcomip
mov
and
mov
xlat
xchg
mov
jle
jnp
add
xchg
jb
inc
fwait
jae
pop
push
inc
xor
ret
outsb
inc
sub
je
or
daa
and
stos
es
pop
cmp
fidivrs
jnp
xchg
jl
pop
push
jns
lods
sahf
push
jle
popa
xor
or
inc
lret
xor
sahf
jmp
jbe
cmp
dec
das
jmp
push
insb
pop
jne
push
pop
and
aam
scas
cli
xor
fs
cmp
push
push
aam
or
std
dec
push
adc
push
add
mov
lret
test
test
out
repz
pop
fiadds
mov
sub
cmp
mov
gs
jmp
sbb
mov
inc
adc
push
sahf
adc
int3
mov
imul
scas
xlat
loopne
ret
inc
inc
pop
push
adc
push
outsl
pusha
popl
std
push
shlb
mov
insb
and
lcall
in
repz
dec
push
jae
lret
jns
mov
pop
cwtl
and
sub
movsl
and
sub
nop
and
mov
adc
xor
and
popf
inc
cwtl
xor
and
hlt
mov
jle
and
loope
jge
je
push
push
shlb
out
dec
add
inc
dec
bound
movsl
mov
lret
lods
and
inc
int3
cmpsl
jo
lods
test
or
enter
pop
xchg
pop
movsb
mov
and
inc
ds
mov
fisttpl
ss
mov
adc
fcoml
imul
dec
inc
enter
stos
ds
pushf
fisubs
inc
mov
lret
pop
stos
sbb
jne
xor
push
and
repz
pop
cmp
adc
daa
xchg
je
out
sbbl
push
push
xor
pop
inc
xor
and
xchg
cli
scas
push
paddd
fisttpll
or
mov
add
dec
jg
pop
loop
seta
dec
pop
adc
dec
pop
jl
mov
adc
int
xchg
loope
imul
out
xor
cmpsl
or
leave
pop
leave
xchg
dec
outsb
cmp
mov
andl
mov
add
sbb
push
push
es
jb
mov
lret
jnp
pushf
jge
mov
push
pop
addr16
test
aas
in
adc
sub
mov
xchg
sbb
add
test
cmpsl
push
xchg
inc
mov
xchg
movsl
mov
movsl
je
push
push
jns
adcl
and
fdivr
int3
adc
movsl
cmpsl
aam
repnz
idivb
xchg
loopne
mov
mov
xor
sub
sub
or
cld
out
xchg
out
cmp
add
inc
sbb
movsl
dec
mov
adc
pop
rorl
movl
jo
cmpb
sub
dec
iret
mov
or
popf
mov
insl
sbb
sub
addl
adc
mov
faddl
iret
and
daa
or
andb
ja
fcoms
outsl
scas
mov
ret
adc
loopne
or
push
adc
arpl
out
or
jnp
daa
cmpsb
sahf
dec
inc
imul
cmp
loop
imul
sbb
pop
sub
sbb
aam
xchg
inc
inc
mov
aaa
adc
lcall
cmp
imul
push
inc
dec
mov
inc
push
out
xchg
or
or
aaa
inc
xchg
ds
inc
pop
push
ret
and
pop
jmp
pop
sub
cld
sub
inc
ljmp
lods
arpl
cltd
leave
push
lods
pushf
cmp
sbb
lcall
inc
adc
fidivs
xchg
jmp
clc
fwait
push
push
xchg
sub
mov
arpl
out
lahf
test
jg
jg
test
shl
into
int
pop
ja
xlat
push
inc
jo
jb
rorl
push
add
adc
add
hlt
xchg
lds
push
sub
movsb
and
mov
jecxz
cmpsl
popf
jecxz
mov
cltd
cmp
ss
mov
mov
cmpb
and
js
ja
and
xor
jbe
mov
sub
outsb
rclb
inc
or
push
add
mov
test
shrl
iret
jns,pt
mov
and
cli
cmp
pushf
cmp
ret
adc
sub
enter
dec
in
mov
mov
pop
les
mov
hlt
xchg
ret
repnz
xchg
fldl
aaa
cltd
cmp
xchg
adc
das
push
movsb
xchg
mov
arpl
aas
ljmp
push
inc
stos
icebp
mov
add
pop
popf
ja
and
shll
pop
xorl
inc
cmp
xor
push
ja
divb
cltd
sbb
sahf
rcrl
into
pop
mov
jp
push
mov
pop
stos
mov
cmp
std
push
inc
dec
push
cwtl
int3
lea
cmpsb
scas
shll
cmpsl
mov
xlat
mov
insl
cmp
ljmp
mov
lret
test
mov
out
arpl
push
in
mov
aam
lcall
pop
fs
aam
mov
shrb
xchg
and
nop
cs
int3
push
mov
mov
imul
jg
into
xchg
fwait
cltd
xchg
cli
inc
in
sahf
sti
inc
popf
mov
mov
test
push
adc
add
outsl
xchg
icebp
fwait
pushf
fwait
xchg
jne
int
and
movsl
jge
inc
int3
loopne
stos
dec
ds
ja
stc
insb
stos
testb
int3
jbe
push
xor
push
push
lds
adc
fnstcw
jne
xor
and
inc
push
loope
loope
std
rcll
jecxz
outsb
mov
std
adc
imul
cltd
mov
push
mov
setbe
in
sub
loop
pop
sbb
arpl
jno
xchg
inc
add
push
dec
mov
xor
push
outsl
sahf
loope
xchg
fisttpll
clc
addl
sbb
les
test
or
sub
iret
mov
mov
mov
xchg
pop
aam
mov
and
je
mov
xchg
dec
shll
push
xchg
lods
push
loopne
push
lock
pop
xchg
aad
mov
test
xchg
mov
popl
mov
sbb
mov
pusha
push
cmp
testb
mov
in
mov
adc
rorl
inc
je
es
rorl
pop
xor
clc
cmp
inc
es
cmpsb
cwtl
dec
mov
ret
les
pop
shl
lds
jg
cld
adc
push
adc
mov
std
or
add
mov
outsl
adc
fildl
out
lcall
push
and
or
imull
repz
mov
das
jno
and
add
js
hlt
fiaddl
fs
pop
popa
rorb
scas
push
std
sbb
out
and
xchg
cwtl
push
mov
mov
cmp
jle
mov
mov
push
int
dec
pop
insb
into
gs
mov
movsl
jge
cmp
or
mov
imul
jae
push
int3
jo
sub
fcompl
loop
or
dec
aas
icebp
inc
cmp
add
push
xchg
sarb
ror
in
push
addr16
adc
test
jne
shlb
cmp
jns
ja
xor
bound
ljmp
push
add
xchg
fisubl
lea
lods
rcll
fwait
leave
sbb
lods
push
test
mov
js
mov
cmp
push
xchg
pop
jmp
and
jns
mov
mov
lods
jb
inc
nop
xchg
shlb
test
xlat
push
adc
jno
fisttps
jo
cmp
es
or
jmp
ret
sbb
cmp
fisubs
push
inc
lret
push
fnstsw
dec
add
mov
mov
or
xchg
mov
int3
pop
sub
cld
jnp
cmc
cmpl
jp
icebp
cmpl
lds
sbbb
mov
mov
pop
jle
sbb
jg
sub
out
aaa
popa
mov
inc
sbb
icebp
out
jbe
sub
dec
rcrl
rclb
sub
sub
daa
movsl
add
sbb
push
mov
jl
insl
add
dec
clc
and
xchg
mov
outsb
and
out
int3
push
insw
les
push
popa
xchg
sub
adc
add
cmc
xor
xor
push
mov
add
adc
cmp
les
cmpsl
iret
iret
sbb
or
dec
jae
rcll
inc
in
cmpsl
push
add
and
sub
xor
jmp
jnp
ret
push
incl
sub
or
in
push
push
lods
call
loopne
cmp
push
sub
add
add
adc
call
sub
sbb
test
leave
cli
mov
shrl
or
jae
shrl
xchg
das
cmp
rcrb
cmpsb
cwtl
std
or
mov
push
enter
dec
fildl
inc
fisubrl
xor
mov
ficoms
andl
lret
dec
pushf
cmpsb
call
push
aas
lahf
cmp
stos
xor
add
aad
stos
mov
and
out
sub
clc
mov
dec
mov
rorl
xchg
fs
aas
cli
dec
les
gs
sub
jnp
in
sub
sarl
cltd
lret
ss
mov
sbb
dec
jne
jo
mov
inc
and
sub
pop
insl
xlat
cltd
insb
pop
scas
sti
ss
cmpb
add
push
mov
mov
jmp
into
cmp
xchg
or
out
push
popa
stc
xchg
sbb
inc
leave
lds
mov
fs
mov
mov
adc
xor
sub
xor
sub
enter
push
test
pop
fstpl
shlb
loopne
jno
and
jo
or
lret
shlb
push
ja
sub
sti
cmp
cli
fmulp
xchg
mov
inc
in
and
sub
pusha
out
out
mov
int
lahf
outsl
xchg
out
pop
sub
fcoml
insl
daa
in
jge
std
sub
mov
cld
notl
add
sub
pop
adc
fwait
lahf
pop
mov
or
dec
mov
cmp
and
fsubr
xchg
scas
dec
imulb
mov
test
rolb
dec
nop
adc
sbbb
outsb
inc
fs
inc
mov
int3
test
shl
scas
andb
sbb
or
push
pop
fstpl
dec
in
fsubrp
dec
jp
push
cwtl
jae
xchg
mov
je
mov
rcr
pop
mov
push
mov
movsb
mov
ret
test
repnz
cmp
mov
sbbb
cmp
popa
pop
xor
sub
cmp
jns
stc
out
outsb
lahf
pop
lods
pop
hlt
insb
inc
dec
lea
es
rclb
scas
cs
leave
lret
outsb
sub
pop
js
and
xor
mov
or
shrb
sbb
in
ficomps
fidivrs
jl
cmpsl
sar
xchg
stos
mov
scas
sbb
xchg
jg
scas
aas
or
cltd
cs
lods
or
push
loopne
fcompl
push
test
push
pop
mov
push
sub
les
lods
lock
mov
and
cmp
movsl
int
mov
popf
ja
nop
pop
adc
fwait
mov
daa
aad
mov
jp
mov
add
movsb
nop
or
and
out
pop
in
iret
add
inc
adc
insb
int3
subl
inc
imul
lahf
push
das
and
mov
sarb
mov
and
push
sbb
jle
mov
loopne
sub
cmp
and
mov
xchg
sbb
mov
jp
xchg
pop
or
xlat
sbbb
jle
jb
stc
mov
fwait
aas
icebp
ret
xor
adc
mov
mov
insl
mov
jbe
push
data16
pop
or
outsl
out
mov
mov
lods
adc
pop
push
cmp
sub
jmp
shlb
jl
add
xor
insb
xchg
mov
xchg
jae
xchg
xchg
add
cmp
pop
sub
addl
push
icebp
mov
dec
shl
insb
xchg
push
lret
les
xlat
sahf
add
inc
es
pop
pusha
adc
or
mov
aad
jno
xor
pusha
add
add
imul
out
jmp
in
mov
adc
pop
jle
test
addb
fists
cwtl
pop
fcompl
pop
dec
sbb
jae
popf
pop
xchg
in
and
pop
orl
xchg
int3
fists
dec
push
lods
mov
jo
cmp
xchg
repnz
sub
ds
jno
mov
call
out
jns
enter
or
aam
mov
ja
sbbl
push
movl
jno
sub
mov
xlat
mov
lret
inc
and
fadd
cmp
sub
sub
jne
or
pop
mov
or
push
int
mov
jl
outsl
dec
pop
cs
repnz
popf
pop
fnstenv
sub
cs
mov
cmp
js
jg
sbb
adc
mov
jmp
xor
aam
xchg
xlat
pusha
cmpsb
cmc
mov
adc
enter
dec
test
std
decl
mov
pop
xchg
imulb
pop
es
jb
mov
cmp
push
cmp
lahf
adc
idiv
repz
mov
gs
lods
dec
stos
jae
nop
push
sarb
idivl
pop
xor
pop
pop
sbb
or
imul
das
js
sbb
and
xor
int3
notb
lds
out
xchg
dec
pop
xor
inc
jl
cmp
or
inc
mov
ret
xchg
insl
cmc
add
adc
cmc
test
scas
enter
lcall
es
jae
imul
add
ja
js
pop
push
lock
gs
and
lea
mov
ljmp
dec
pop
leave
pop
lret
cmc
sbb
sbb
mov
movsl
mov
cmp
mov
pop
xchg
add
mov
add
or
adc
or
fdivrl
aaa
mov
mov
shr
arpl
adc
adc
jmp
scas
jg
call
fisubrs
pop
enter
rcrl
mov
stos
adc
xchg
mov
fnstcw
mov
call
fs
or
push
push
sub
jmp
or
xchg
dec
cmp
dec
pop
clc
outsl
lods
shll
pop
pop
or
int
ljmp
popa
int3
in
scas
outsl
jne
lods
jl
cmpsb
ja
push
shl
mov
mov
xor
push
mov
nop
lahf
nop
xchg
in
in
jl
dec
mov
mov
jge
xchg
mov
mov
hlt
and
inc
fs
notl
and
mov
inc
addl
mov
popa
jnp
out
pop
out
iret
ret
jb
jg
stos
test
or
mov
mov
call
inc
cmp
xchg
jae
es
pop
xlat
mov
addr16
aas
imul
rcll
jg
jmp
int3
jecxz
jge
fiaddl
scas
insl
sbb
pop
or
in
and
les
pop
out
dec
sahf
out
mov
das
add
je
data16
or
fnsave
push
xor
cmp
inc
sub
push
mov
dec
jb
dec
in
xlat
dec
inc
add
movsb
lret
lret
push
and
scas
or
pop
lea
xchg
or
adc
test
popf
and
insl
pop
mov
movsb
testl
in
outsb
mov
out
ret
push
push
test
mov
repnz
xlat
sbb
lcall
les
add
or
xchg
inc
push
dec
cs
xlat
aam
pop
mov
lea
out
insl
js
icebp
cld
nop
pop
hlt
sti
cmp
mov
and
jmp
mov
push
cltd
sub
aad
fwait
in
test
add
andl
jge
push
dec
adc
lahf
sbb
dec
or
mov
fadds
jb
aam
xor
jae
xchg
scas
dec
pop
sahf
inc
push
out
lcall
mov
ja
popf
xor
ljmp
jne
addb
xchg
mov
sti
jo
rcrl
data16
push
mov
in
xlat
int3
repz
pop
test
inc
sub
push
cmc
inc
mov
jp
dec
int3
loopne
scas
cmp
lcall
cmp
xchg
insl
xor
mov
add
mov
andl
jle
sub
enter
cmpsl
pop
sub
cwtl
lahf
and
cltd
addl
insl
rolb
mov
cld
adcb
lds
jg
loopne
fmul
ljmp
daa
fnstcw
mov
fwait
mov
and
rcrb
lock
jae
push
pop
movb
pushf
out
mov
imul
fprem1
or
les
lret
lods
mov
or
push
inc
sbb
adc
lret
popf
imul
inc
in
sub
popa
dec
clc
and
test
loopne
into
testb
cli
sarb
jl
inc
adcb
pop
fwait
and
mov
mov
fcompl
pop
aas
sub
pop
pop
jne
pop
sub
xor
shrb
sbb
lds
insb
or
jp
pop
xor
lcall
fcmovbe
adc
mov
orb
inc
jmp
dec
pop
test
mov
mov
push
in
xor
popa
ss
lcall
es
sub
rclb
dec
in
imul
stos
pop
mov
fdivl
dec
jmp
adc
out
aas
cwtl
jmp
out
mov
sbb
cmpsb
mov
ror
push
mov
inc
cmp
xchg
mov
addr16
xor
inc
movsb
pop
iret
loope
mov
jp
pop
fnstcw
gs
insb
scas
mov
xor
out
dec
insl
xchg
pop
xor
adc
stos
loopne
into
lret
testl
xchg
pop
into
adc
mov
in
jecxz
notb
ja
mov
sbb
mov
adc
arpl
fcomps
data16
mov
rorl
ret
loope
out
stos
aas
fsts
mov
cmp
sbb
push
mov
cmp
aaa
xchg
pop
je
popf
mov
jb
cmp
ret
dec
in
sub
dec
push
xor
sti
test
repz
or
adc
pusha
push
sahf
cltd
sub
mov
in
dec
add
lods
push
xchg
sub
iret
js
ja
fsubrs
xchg
xchg
lock
mov
push
stos
mov
or
add
ljmp
and
and
add
adc
push
fs
xor
mov
pop
call
imul
and
sub
sbb
mov
pop
scas
and
aas
fcomps
ret
or
or
adc
addr16
inc
rcr
adc
xchg
lods
jl
inc
xchg
jl
mov
mov
cmc
inc
mov
xor
ss
cmpsl
adcb
jl
int3
fwait
jnp
inc
mov
pop
push
outsb
aas
and
xor
call
rcl
movsb
out
mov
insl
add
in
icebp
lea
fsubrs
xchg
popa
pop
cmp
pop
insl
jo
jg,pn
lret
fisubrl
addr16
ljmp
in
enter
or
in
dec
cmp
pop
mov
pop
mov
int
mov
mov
dec
push
je
js
push
pop
sahf
cmpsl
add
es
jge
out
adc
or
add
cmp
or
inc
and
ret
stc
sti
subb
sub
xor
enter
push
or
lahf
aam
xor
aam
mov
inc
std
adcl
fs
push
fmul
pop
cmp
cmp
cmp
imul
mov
sub
jbe
and
pop
lods
clc
les
mov
add
mov
cltd
push
pushf
in
push
cmp
xchg
pop
mov
push
ljmp
in
in
jne
sbb
mov
inc
sub
sbb
and
dec
mov
add
jecxz
xchg
pop
daa
in
imul
cwtl
jo
cmpsl
shrb
pop
leave
jb
fst
imull
xchg
cmp
pushf
jmp
sbb
fldcw
mov
jbe
cmc
add
iret
es
push
in
cmp
sbb
sub
cmp
add
enter
jbe
faddp
mov
bound
dec
push
cmpsb
mov
data16
pop
dec
push
fcoms
pop
cs
ljmp
std
jo
movl
lods
movsl
xor
sub
insl
repnz
loop
adc
jmp
popf
in
push
insb
in
or
mov
cmc
rcll
loope
ja
cld
mov
sbb
fisubs
mov
imul
out
aaa
inc
push
and
pop
in
loop
pop
lds
cmp
push
out
lcall
pop
ja
add
jge
mov
dec
cmp
cmp
mov
mov
pop
xchg
push
cmp
sub
xchg
mov
into
push
xchg
xchg
jl
std
nop
push
pop
pop
xchg
mov
into
xchg
sbb
out
in
mov
xor
pop
lds
jge
dec
sti
in
jge
xchg
js
loop
mov
jp
ret
sbb
mov
mov
jo
lods
iret
dec
sbb
inc
insl
dec
jmp
mov
pop
jle
mov
pusha
stc
das
repnz
mov
mov
pop
jge
test
inc
pop
jl
pop
hlt
movsb
movsb
js
outsb
mov
das
out
addl
popa
bound
add
mov
or
sbb
lret
pop
ss
or
stos
add
bound
mul
stos
jp
mov
xchg
jae
ds
mov
inc
cld
pop
sarl
imul
pop
adc
or
test
mov
cltd
push
fldl
stc
mov
fwait
jno
fistpll
inc
shrl
mov
xchg
ret
loope
movsb
add
adc
push
rolb
xchg
cmp
stc
sti
mov
insl
mov
shlb
pop
arpl
mov
lcall
dec
sbb
dec
add
push
icebp
enter
shrl
addr16
mov
jecxz
fistpll
mov
add
lret
mov
mov
out
dec
mov
dec
mov
push
mov
jge
jo
insb
fbstp
jp
adc
daa
dec
insb
sar
mov
adc
stos
sub
or
pop
into
hlt
lea
and
inc
adc
mov
sbb
lods
cs
test
mov
push
imul
stos
cmpsl
sub
dec
into
add
std
and
ljmp
pop
inc
test
cmp
push
into
mov
xchg
popf
addr16
cmp
sbb
or
fdiv
sub
shrb
inc
sbb
jl
je
es
jb
je
shlb
shlb
negl
pop
pusha
scas
push
fsubl
or
mov
mov
sub
xor
and
inc
jmp
xchg
push
hlt
mov
pop
xchg
enter
test
hlt
lahf
fs
test
ret
mov
add
into
cmpsb
jb
mov
mov
iret
and
push
sub
orb
out
dec
je
int
out
cmpsl
imul
lret
xor
movsb
inc
lcall
push
mov
sub
xor
call
dec
inc
xchg
pop
inc
loope
dec
and
xor
jmp
mov
pop
aam
out
imull
xchg
mov
mov
jno
dec
int3
mov
sbb
in
ffree
jns
sub
mov
dec
dec
inc
out
inc
sub
or
fs
sub
movb
dec
inc
push
sbb
int3
pop
xchg
dec
test
mov
cwtl
es
lea
xchg
fdivrs
negb
subl
mov
xor
imul
ds
cltd
leave
mov
fmul
jnp
icebp
push
fnstcw
add
je
lcall
xchg
push
and
jp
pop
fs
fcompl
imul
pushf
imul
subl
icebp
pop
js
push
cmp
xor
outsb
test
sub
ret
or
jecxz
insl
scas
repz
add
das
lcall
pop
sub
bound
rcrb
movl
inc
sbb
pop
fistpll
lahf
setle
sbb
push
loope
loopne
fidivl
iret
les
sub
or
sub
dec
lock
adc
add
lods
test
or
gs
mov
sub
push
int
xchg
stos
mov
loop
fisubrs
and
int3
mov
push
inc
cmp
lods
xchg
iret
jg
jne
jmp
add
pusha
xchg
popa
movl
addb
fsubr
cmp
xchg
cmc
cmp
pop
outsb
sahf
jne
inc
popa
mov
std
in
loopne
pop
push
hlt
mov
out
fisubs
sub
aad
inc
leave
idiv
xlat
add
or
xchg
pop
xor
loop
sbb
aaa
cmp
mov
xchg
popf
add
mov
jno
lock
sub
xchg
shlb
in
andb
dec
mov
mov
stc
int
mov
and
dec
dec
pop
bound
lea
jmp
push
pop
sub
pop
push
jne
or
cld
flds
jmp
insb
popa
and
je
or
mov
inc
xchg
or
cmp
or
femms
dec
mov
jge
iret
push
clc
aad
loope
addb
adcl
sar
lret
shrb
mov
icebp
inc
in
or
pop
cmpsb
lret
insb
xor
push
pop
xchg
test
iret
je
or
pop
add
or
mov
cmc
pop
xchg
shr
das
loopne
divb
push
fidivrl
inc
inc
scas
xchg
add
mov
repz
pop
or
sub
pusha
insb
enter
mull
mov
jmp
in
xor
lock
and
pop
test
mov
jmp
pop
jecxz
insb
xchg
lret
pop
shll
fwait
sbb
lahf
mov
mov
outsl
sti
test
mov
ret
push
cmc
inc
ja
aad
add
cltd
mov
add
stos
adc
cmp
rclb
jnp
out
int3
pop
adc
movsl
jo
jo
shlb
mov
fmull
cmc
in
aas
add
add
pop
pop
or
xor
sarl
int3
pop
or
push
in
cmpsl
cmp
out
jmp
addb
lock
gs
cli
xor
add
gs
inc
mov
jne
lret
adc
jl
test
inc
jns
lock
clc
clc
mov
fildll
jecxz
cmp
repnz
add
fcomi
push
add
cmp
jo
ret
sub
pop
enter
pop
add
pop
xchg
dec
sbb
dec
lock
push
mov
mov
sub
pop
shll
sbb
pop
xchg
sbb
int
push
adc
pop
inc
and
repz
and
fdivl
inc
xor
cmpsl
jns
xchg
sub
mov
sub
cmpsb
rolb
lahf
mov
or
jg
aaa
lds
in
or
daa
push
jmp
or
mov
mov
in
in
popf
pop
xchg
mov
dec
mov
or
cmp
mov
push
jmp
clc
xchg
and
sbb
mov
push
jbe
rorb
inc
sub
fucomi
cli
xor
gs
movsl
mov
xor
orl
fnsave
xor
xchg
pop
out
and
arpl
xchg
or
sbb
inc
test
stos
outsb
mov
jp
or
adc
outsl
inc
test
es
push
mov
insb
mov
cs
in
popa
in
add
xchg
out
rcrl
push
xchg
js
sahf
xor
sub
imull
mov
sahf
sbb
cmpl
jge
mov
mov
cwtl
mov
mov
aam
pop
andb
inc
loop
sub
loopne
cs
cmp
stc
in
jo
pop
loop
stos
nop
xor
and
or
inc
lds
xor
mov
dec
push
push
sub
fcoml
mov
push
and
fstps
xor
in
pop
xor
adc
push
in
push
int3
jns
cmp
mov
pop
cld
rol
call
ret
xor
jmp
pop
push
xchg
mov
and
fidivrs
adc
iret
nop
xchg
lods
inc
pop
std
addr16
mov
lret
push
das
pop
or
lahf
or
sbb
mov
pop
and
mov
sub
test
pop
jge
loop
dec
push
jno
mov
jb
sub
xor
add
idivb
mov
and
and
pop
popa
push
or
adc
cmc
sbb
or
lods
jns,pn
or
cmp
lock
adc
dec
pop
xchg
sub
out
leave
sub
push
xchg
mov
jge
pop
out
in
ljmp
pop
test
fnstsw
popa
xlat
sbb
fistpll
cmp
jne
sub
adc
mov
cld
and
sbb
dec
and
pop
movsb
into
lds
push
add
adc
js
stc
push
xchg
cmp
lds
adc
mov
je
push
test
mov
sti
jl
lahf
dec
orb
dec
add
add
fsubrs
and
ja
push
mov
mov
and
pop
adc
mov
or
aam
out
pop
out
pop
sub
out
out
xor
xor
pushf
scas
sub
cs
fwait
mov
std
cltd
in
shl
adc
cmp
lret
jle
repnz
daa
xchg
inc
pop
jne
cmp
out
jnp
pop
les
inc
push
in
dec
test
outsb
imul
cmovb
out
mov
cli
pop
notl
les
rcr
mov
add
jae
push
cltd
xor
jecxz
mov
int3
negl
push
iret
ljmp
jns
out
mov
out
movsb
inc
jnp
push
fstpt
imul
push
cmp
xchg
lock
clc
hlt
xchg
jp
cmp
int
mov
xlat
daa
sbb
push
aam
jbe
inc
test
pop
mov
cmp
jmp
popf
push
js
out
jo
int
mov
dec
idivl
das
cli
loopne
xchg
push
dec
rcrb
mov
pop
sub
cmp
dec
or
pop
xchg
cmc
adc
lcall
cli
sub
or
pop
enter
mov
dec
xor
mov
cmpsl
insb
in
fistpl
pushf
mov
push
fimull
rolb
outsl
cmp
pop
inc
pop
xchg
xor
inc
dec
pop
cwtl
lret
loopne
sarl
arpl
pop
addr16
aas
xlat
outsb
imul
and
scas
shll
push
mov
aam
xchg
dec
aad
shll
add
faddl
or
mov
std
cmpb
cltd
not
hlt
mov
or
and
loope
leave
or
adc
je
push
fst
mov
mov
add
xor
or
pop
inc
es
scas
sbb
add
xor
push
sbb
xchg
xor
es
or
pop
pop
add
mov
jnp
rcrl
ljmp
push
sbb
xor
stos
out
xor
jp
mov
and
mov
ret
rep
fadds
idivl
jnp
adcl
out
jno
sti
jb
out
pop
js
push
xor
push
cmp
lret
and
sub
mov
adc
adc
ja
dec
fidivl
loopne
xchg
and
stos
or
push
lock
cmp
hlt
lds
rol
lret
cmp
fists
into
add
mov
jle
and
int3
push
cli
out
inc
jno
sub
adc
mov
lods
xor
movsb
cmp
int3
sbb
fisubs
flds
jle
loope
push
pop
or
aam
aad
imul
clc
lods
rcrl
lret
mov
mov
mov
mov
sbb
int
cmc
les
imul
mov
xchg
sbb
mov
sbb
mov
out
adc
sbb
test
mov
push
je
add
pop
insl
jg
dec
or
xchg
add
push
xor
jecxz
out
pop
int3
adc
sub
mov
sub
lret
lret
dec
mov
shl
sbb
loope
cltd
out
xor
jp
push
shrl
fildll
gs
fmuls
xor
adc
xorb
inc
test
pop
xorb
and
mov
stos
pop
lea
add
jl
gs
aad
xchg
xchg
mov
dec
mov
int
and
push
leave
mov
xlat
dec
push
movsb
aaa
movsb
stos
mov
pop
adc
inc
pop
nop
imul
repnz
test
mov
mov
movsb
xor
sub
mov
fmuls
mov
add
and
cmpsb
adc
ret
insl
or
mov
fsubrp
es
push
jae
sbb
add
arpl
fisubrl
es
shl
cmpsb
mov
adc
aad
ret
ret
js
gs
stos
push
jno
mov
push
outsb
in
into
arpl
add
loopne
dec
jp
aas
push
aam
xchg
adc
shlb
add
idivb
aam
std
ljmp
xchg
sub
sbb
in
mov
clc
and
stos
or
leave
sub
push
inc
popf
adc
rcrl
mov
push
xor
pop
jp
in
and
push
jecxz
test
push
lock
aas
das
sti
or
bound
stos
jb
push
outsb
cmpsb
xchg
ret
cmp
ds
cmp
fwait
sbb
mov
cmp
or
loopne
pop
notl
fstl
add
cmp
pop
push
xor
je
cmpl
adc
push
ret
andl
xchg
in
sub
cmp
jns
jnp
movsl
hlt
inc
pusha
and
movsb
aad
lahf
aad
int3
push
stc
cmp
add
ss
call
sbb
dec
lods
jo
movsl
jg
inc
iret
pop
push
dec
add
sub
enter
push
jp
out
rclb
enter
or
push
data16
divl
add
outsb
idivl
cmpsb
and
jae
sub
jbe
fidivrs
and
ret
mov
ret
loope
or
push
out
adc
and
movsb
jns
dec
enter
jle
lods
in
sbb
paddsw
adc
push
mov
aas
push
jecxz
test
or
mov
mov
inc
ret
cmpsb
mov
popa
push
sbb
and
push
aam
inc
pop
lods
gs
pop
call
stos
int
xor
dec
cmpsb
or
data16
cmp
inc
jecxz
push
xchg
and
dec
mov
mov
lret
and
lods
movsl
lcall
xor
jns
mov
push
inc
test
mov
sahf
dec
dec
mov
aad
jge
enter
shl
cmp
lods
scas
xchg
loope
testl
xchg
fistl
lods
xchg
js
pop
fucom
iret
and
sbb
mov
xor
loope
test
sub
cmp
out
adc
inc
ljmp
lcall
xchg
out
icebp
fildll
ds
imul
mov
imul
push
call
sub
je
fwait
cli
push
xchg
call
push
jg
xorb
adc
cwtl
xchg
push
pop
xchg
adc
cmpsb
add
fsubrl
xchg
enter
mov
movsl
nop
xor
mov
dec
sbb
nop
aas
shlb
cmp
sbb
lcall
pop
push
les
xchg
jp
cmp
and
js
mov
cwtl
sub
pusha
out
jmp
inc
or
rcrb
sub
aas
frstor
jns
pop
push
push
dec
jge
cmpsl
mov
in
ljmp
dec
call
lock
push
adc
xor
ja
lods
stc
aas
mov
mov
jl
aas
aas
pop
pxor
mov
in
mov
imul
shlb
mov
out
sub
popa
sbb
xchg
mov
rcl
es
int3
push
jnp
mov
decb
cmp
pusha
push
sbb
mov
cmp
inc
jp
loopne
inc
mov
sub
and
adc
cmp
lea
orb
dec
xlat
rcrb
push
dec
jmp
push
and
sub
mov
cmp
addr16
ljmp
jns,pn
lods
xor
shrl
in
int
push
nop
mov
pop
mov
xor
pop
leave
fdivl
fs
mov
sub
add
ss
mov
mov
jmp
or
cmp
mov
jns
popf
js
test
gs
jmp
push
jo
movsb
je
pop
aam
shll
test
push
out
cmp
cmpsl
mov
mov
add
fsub
cmp
jle
pusha
inc
jnp
adc
sub
pop
scas
mov
in
add
lret
xchg
mov
xor
lret
loopne
cmc
jge
sbbl
lock
or
adc
jns
add
pop
push
sti
mov
jle
or
xchg
cmp
mov
cmpsb
lds
in
dec
cli
adc
pop
fsubrp
xchg
test
mov
jmp
xchg
push
push
scas
xchg
dec
test
pop
or
sub
movsb
sbb
and
mov
cltd
ja
andl
mov
jl
jns
imul
std
adc
sub
add
fdivrs
outsb
sub
pop
push
cli
xorl
mov
adc
sub
push
das
jne
jno
add
or
inc
jp
jne
ficompl
add
fstl
fstp
out
lret
jg
dec
sahf
mov
add
or
mov
dec
xchg
cmp
cmp
pop
mov
adc
xchg
lret
mov
sahf
pop
push
sarl
fs
mov
js
sub
je
jo
stos
aaa
or
add
sbb
cmp
add
out
mov
lahf
jl
lock
adc
pop
pushf
lcall
test
pushf
ljmp
loopne
mov
mov
adc
and
pextrw
mov
or
addr16
nop
fnsave
pop
xor
shlb
hlt
enter
cmp
or
outsl
sti
mov
rcr
daa
mov
scas
icebp
out
sbb
xor
icebp
mov
push
rclb
shlb
or
and
dec
cmc
mov
imul
sbb
in
data16
lods
sub
sub
inc
das
mov
stos
insb
fnsave
cmpsl
stos
test
clc
ds
sti
out
mov
jae
ret
movsl
pop
aas
and
sbb
mov
popf
adc
lods
popf
xchg
cmp
jbe
jle
fcoms
cs
inc
pushl
cmp
in
enter
jmp
test
arpl
fildl
addl
scas
in
sub
dec
xchg
mov
push
add
jns
popa
int
sbb
stos
popf
mov
out
idivl
mov
mov
aas
dec
add
test
mov
jp
bound
iret
jecxz
pop
jl
pop
inc
inc
sbb
stc
ret
push
add
dec
shl
jnp
pop
fdiv
xlat
mov
pop
inc
mov
adc
das
cld
mov
mov
cmpsl
push
popa
mov
test
movsl
jp
dec
sub
xchg
jle
and
mov
mov
scas
add
bound
xor
into
cli
cli
mov
push
inc
iret
lods
out
or
inc
daa
add
jb
push
adc
jne
jmp
or
and
push
fs
daa
cmp
inc
nop
mov
push
and
cmc
ret
mov
xchg
addr16
or
divb
jge
xchg
jo
inc
push
sbb
lods
jo
sub
mov
xor
mov
loopne
sub
mov
pushf
and
push
and
icebp
inc
movsl
loop
push
jnp
push
pop
cmp
ret
sub
in
jmp
faddl
sbb
andb
outsb
nop
adc
mov
xlat
leave
or
das
inc
push
and
pop
ds
fcmovu
jge
rorb
pushf
adc
loop
fs
fbstp
mov
enter
popa
sub
out
adc
xchg
aad
xchg
or
inc
aas
aad
sub
pop
xor
mov
jbe
mov
je
cmp
es
rcrl
popa
fisttpl
or
es
jge
imul
mov
cmp
out
push
rcl
fwait
cwtl
adc
jge
vmread
mov
sub
xor
out
clc
insb
out
mov
sbb
inc
inc
push
divb
ret
and
xor
int3
mulb
mov
mov
mov
jmp
insl
adc
sub
jnp
push
jbe
repnz
dec
ret
imul
and
xchg
hlt
movsl
jge
sub
cmp
cld
cltd
fcompl
push
es
jns
cmp
js
scas
sahf
fsubs
aas
mov
pop
jb
push
ret
lock
divl
flds
add
push
xor
test
orb
fs
xor
inc
lods
hlt
jb
test
dec
int3
sbb
lret
jo
jnp
fs
dec
ss
sub
jb
data16
and
loopne
js
arpl
push
mov
clc
add
mov
popf
cmpl
sbb
push
mov
cmp
jnp
daa
cmp
ret
insb
xor
sahf
inc
sbb
dec
popa
shrb
or
pop
mov
fcoml
jp
jbe
ds
int
add
xchg
nop
or
ret
ss
jnp
or
hlt
add
rclb
icebp
inc
push
js
mov
out
pushf
mov
lahf
adc
test
lret
scas
data16
jecxz
push
xor
pop
push
jg
adcl
adc
mov
dec
test
popf
push
leave
ret
push
subb
sbb
mov
movsl
loope
in
mov
or
addr16
bound
add
xchg
pop
je
andl
mov
mov
cmpsb
mov
stc
jbe
repz
arpl
xor
in
scas
out
adc
pop
in
shl
cmpl
mov
ja
cmpsl
jnp
push
insl
sahf
negb
mov
inc
add
xchg
adc
sub
and
hlt
push
popa
mov
int
stos
popa
cmc
dec
imul
js
mov
push
cmp
mov
pop
popa
fs
int3
test
xchg
popf
es
pop
mov
scas
in
pushl
jg
inc
xchg
xor
xchg
push
aas
int
cmp
and
insb
or
and
in
mov
popf
push
daa
xchg
test
and
das
fsubs
dec
inc
mov
ret
and
js
stos
add
or
dec
insl
sbbl
jae
xor
repz
adc
fdivs
sbb
pusha
adc
cwtl
into
mov
sub
add
push
outsl
pop
repnz
es
ret
test
sub
mov
stc
adcl
sbb
stos
push
es
xchg
mov
loope
inc
and
int
dec
in
push
mov
insb
cld
mov
fsubr
outsb
cmp
bound
dec
ret
mov
shrl
push
lret
sarl
push
out
pop
xchg
jno
xor
mov
call
cmp
stos
and
mov
pop
mov
adc
mov
icebp
fldcw
test
loopne
adc
les
add
push
cmp
add
sub
sub
mov
andl
add
xor
mov
adc
cli
enter
ret
in
adc
xor
fists
shr
pop
outsb
outsb
enter
ret
outsb
cmp
mov
fdivrl
add
mov
jae
fwait
inc
mov
aam
sbb
xchg
js
push
dec
js
sti
out
scas
cltd
dec
pop
or
mov
sbb
ja
mov
es
movsl
push
mov
sub
sub
test
das
fadd
lods
rolb
push
ds
lahf
fwait
outsl
xchg
mov
sbb
stos
clc
push
setne
sbb
adc
loope
cmc
push
pop
or
call
mov
cmp
aam
lock
push
les
test
adc
dec
ret
popa
inc
mov
fmuls
jge
inc
test
push
or
pop
shll
int3
sub
xchg
mov
or
xlat
imul
iret
inc
and
outsl
jge
push
test
sub
xchg
jns
addl
cs
push
inc
dec
jbe
pop
in
movsb
jo
mov
push
ds
neg
push
xchg
into
lods
loop
and
jb
clc
push
iret
sub
cmp
inc
pop
sub
push
dec
or
pop
sbb
or
cltd
out
cmc
push
push
into
adc
lahf
sbb
imul
addr16
mov
out
xor
and
fisubs
ret
lock
xchg
or
xor
fisubrs
or
push
popf
in
dec
sbb
mov
inc
xlat
pusha
or
and
iret
fcoml
sub
movsb
push
mov
inc
pop
mov
add
sbb
data16
lret
adc
sbb
and
inc
stos
sub
dec
or
pop
mov
pop
xchg
je
outsb
insb
fiaddl
jl
mov
cmp
sbbl
pop
cli
mov
pop
push
ja
fdivr
mov
outsl
cmp
push
pop
mov
xor
mov
outsl
outsl
clc
jo
repnz
pusha
pop
std
xchg
outsl
xchg
shlb
mov
mov
bound
fwait
sbb
lds
xchg
scas
adc
loopne
pushf
divps
cmp
sub
ret
xor
sti
addl
xchg
ret
dec
int3
xchg
push
push
jle
je
sub
int
xor
sub
xorl
cmc
adc
inc
xor
ficoml
xchg
cwtl
mov
or
xchg
arpl
mov
test
iret
je
sbb
shrl
in
fildll
imul
cwtl
xchg
add
adc
outsb
inc
fs
lcall
or
cli
in
cmp
inc
or
sbbl
push
add
pop
loopne
fldt
jg
ljmp
iret
jmp
sub
lahf
icebp
sub
cmpb
cmp
mov
mov
sar
xchg
xor
inc
outsb
adc
lcall
push
dec
mov
pop
stc
jmp
push
sahf
stos
or
xor
fisubrl
pop
jae
xchg
movsl
dec
xchg
shlb
xchg
dec
jmp
add
mov
mov
lret
andl
outsl
mov
jle
aad
sbb
push
sbb
cmp
test
or
sub
into
test
imul
test
and
loop
cmp
mov
call
add
add
ds
aaa
push
mov
pusha
cmp
enter
or
add
mov
ljmp
sub
adc
fldcw
mov
outsl
dec
sti
loope
fs
xor
fs
insl
leave
add
mov
push
dec
jbe
mov
jle
cmc
test
sub
sbb
mov
push
dec
mov
lret
sub
xchg
xor
jo
pop
add
fisubrl
shr
fwait
test
dec
test
mov
cmpsb
pop
cmpb
fnstsw
xchg
push
push
fnstsw
lds
setbe
xchg
mov
push
and
sbb
mov
popl
fistpll
dec
or
jb
cmp
dec
sub
sub
stc
sub
pop
dec
adc
sub
out
add
movb
xlat
stos
mov
push
ljmp
push
xlat
imul
mov
bound
insb
lret
popf
imul
jae
test
xchg
out
lods
das
cmc
subb
loopne
xchg
cli
fildl
push
push
stos
pop
inc
cmpsb
clc
mov
adc
arpl
test
jb
push
xor
adc
sub
inc
out
xchg
sbb
std
std
fidivs
add
pop
xchg
cmp
popf
sahf
lret
cli
scas
fsubrs
and
push
jmp
je
xchg
ret
aad
ret
std
dec
pop
xchg
fnstsw
out
insb
lret
jbe
inc
stc
nopl
out
dec
ud0
push
dec
lret
mov
adc
xor
pop
jno
mov
out
add
test
scas
xor
test
or
push
loopne
inc
popa
jmp
pop
add
out
hlt
add
orl
mov
aas
ljmp
ret
push
sti
sub
fidivrs
sbb
inc
lret
mov
xchg
mov
fmull
dec
pop
test
test
add
es
loope
mov
fisubrl
fnstsw
fcmove
push
mov
cmpsl
inc
push
imul
pop
call
cmp
add
jnp
dec
mulb
xor
lods
dec
cltd
imul
sub
mov
xchg
jae
sbb
pushf
int
test
and
cld
cmc
mov
roll
je
sub
dec
sbbb
mov
call
js
cmp
dec
lods
adc
popa
or
stos
push
sub
repnz
sbb
hlt
rcrb
xor
andb
scas
sbb
test
jo
adc
sbb
mov
sbb
add
dec
fs
ret
jae
inc
dec
inc
sub
mov
inc
ja
fldl
push
pop
into
stos
sbb
fldcw
cmp
stc
test
je
fs
jg
pop
jp
jl
dec
adc
sub
je
lret
sub
ret
jo
add
cmc
cs
ret
fistpll
pop
cmpsl
dec
xor
fwait
jle
inc
adc
test
mov
aad
int3
pop
iret
out
clc
repz
cld
dec
dec
daa
push
arpl
stos
insb
xor
jo
pushf
adc
mov
sbb
mov
mov
push
fistps
popa
scas
movsl
mov
int3
movsl
jge
shrb
adc
xor
jo
xchg
jmp
mov
mov
cmp
push
cmp
dec
mov
mov
mov
in
arpl
sub
dec
bound
subb
inc
pushf
loopne
popa
inc
cmp
enter
xchg
scas
inc
iret
pop
jnp
addb
sbb
jg
adc
xorb
xorl
sub
or
cmp
out
int3
add
dec
in
xchg
or
cwtl
push
out
in
and
cmpsl
imul
test
int
bound
push
mov
insb
or
inc
xor
test
cltd
je
xor
jne
or
ss
push
pop
push
mov
add
in
bound
orb
cmc
subl
scas
inc
pop
sbb
jl
outsl
jnp
gs
xchg
pop
adcb
mov
ds
popf
push
cli
rorb
outsl
mov
lahf
cmp
cmp
adc
jae
js
fsin
mov
ret
ret
cmc
mov
js
xor
jmp
and
rolb
pop
orb
pop
adc
xchg
stos
hlt
cmp
cmpsl
lock
pop
adc
xor
mov
cmpsl
pushf
in
aas
mov
mov
adc
push
add
mov
repz
pop
sub
jne
hlt
dec
push
clc
jmp
call
ljmp
idivl
out
jmp
addr16
mov
inc
cmp
arpl
stos
bound
bound
pop
imul
inc
testl
int3
push
icebp
mov
xor
adc
test
lds
xchg
mov
fisubrs
cltd
jl
jo
roll
hlt
shll
and
cs
push
add
mov
pop
in
cmp
or
sub
and
sbb
rol
cmpsb
pop
lret
aaa
movb
int3
lods
gs
inc
loop
popa
movsb
adc
sub
ljmp
push
add
test
pop
and
mov
mov
mov
enter
sbb
push
fisttpl
in
iret
fwait
adc
jl
icebp
mov
mov
loope
push
bswap
push
lods
sub
xchg
rolb
out
dec
in
mov
push
shll
mov
jp
cmp
sbb
cli
out
mov
add
lods
push
sbb
cmp
push
lret
pop
dec
inc
cs
cmp
push
lods
lock
stc
mov
dec
mov
mov
test
mov
lds
and
rcrb
cs
push
mov
gs
repnz
cltd
adc
or
sbb
cltd
cmp
aaa
adc
notb
cmp
das
leave
loopne
in
inc
fdivl
or
add
fidivl
lds
insl
insb
stc
xchg
shll
jecxz
adcl
adc
xchg
jne
sbb
ret
cmpsb
lret
pop
in
sub
adc
mov
sub
cmp
scas
fwait
ss
jo
sbb
cld
lcall
out
xchg
mov
rorl
adc
mov
mov
xchg
sbb
jo
loop
push
test
imul
and
imul
in
xlat
aad
jno
sahf
mov
cmp
pop
idivl
int
leave
cmp
test
add
push
movsb
inc
iret
sarl
jg
insb
mov
xor
and
fidivrl
push
insb
rcll
mov
adc
and
push
push
mov
push
cld
rclb
insl
and
push
pushf
addr16
push
movsl
dec
imul
xchg
pop
test
push
or
stos
xchg
or
scas
imul
decl
pushf
xor
mov
unpckhps
xlat
xor
adc
xchg
mov
jg
rclb
in
add
jp
sbb
xor
rol
lock
jno
es
ss
lods
xor
mov
loopne
lsl
in
faddp
stos
mov
jbe
jge
pushf
sbb
test
inc
xchg
cli
ljmp
ret
addr16
jb
pop
pop
enter
sbb
pop
cmp
popf
cld
push
or
in
xchg
add
xchg
xchg
inc
cmp
in
out
rcll
mov
mov
sbb
iret
imul
cli
adc
mov
mov
iret
mov
nop
or
mov
call
jb
cmp
add
jp
dec
out
jecxz
fildl
mov
repz
fwait
xchg
pop
sahf
cli
out
mov
imul
movsb
nop
iret
pop
cmp
test
mov
or
sub
push
or
and
std
mov
hlt
subl
xchg
dec
push
loope
inc
jae
cmp
aas
push
dec
mov
fs
pusha
aaa
fs
out
dec
cmp
sbb
xor
sub
adc
jae
in
inc
into
pop
cs
push
pusha
sti
clc
mov
mov
jge
stos
in
jecxz
arpl
cli
dec
test
out
dec
cltd
mov
jl
js
xchg
jo
leave
shll
loope
lock
add
loop
pop
xchg
dec
insb
cs
popf
inc
jp,pt
stos
lcall
in
les
sub
add
pop
pop
sahf
lret
les
pushf
negb
out
and
lea
fiaddl
mov
mov
in
mov
mov
mov
hlt
cmpsl
jb
fdivr
and
rorb
xchg
or
sbb
dec
jp
ret
lods
jge
cmpsb
icebp
sbb
adc
sub
loopne
fs
or
icebp
xor
push
fs
aad
dec
cmp
arpl
aaa
jge
inc
xchg
mov
sbb
fcmovnu
add
dec
push
push
fwait
mov
out
arpl
inc
mov
or
jb
adc
sbb
sahf
cmpl
mov
mov
push
out
push
shlb
icebp
xchg
pcmpeqd
fisttps
movsb
cmp
and
push
pop
imul
jecxz
pop
add
negb
lahf
xor
sbb
lret
mov
loop
fstpl
cmpsb
test
xchg
sbb
pop
cmpl
xor
outsl
fldcw
xor
frstor
fwait
and
addr16
push
loopne
je
sub
clc
dec
imul
test
sarb
pop
fildll
ret
or
cld
add
and
popa
lret
lods
mov
push
add
in
in
lock
fildl
fldl
or
jg
cli
nop
mov
aad
mov
cli
aas
add
jmp
push
dec
ss
dec
ss
pop
data16
push
xchg
inc
pop
sub
jbe
lds
pusha
dec
sarl
mov
ror
lret
lods
enter
jecxz
push
sarb
sub
xor
daa
pop
pop
mov
hlt
in
mov
adc
insb
inc
sbb
or
xchg
stos
ja
aam
movsb
shlb
data16
mov
movsl
out
dec
idiv
sarb
sarl
xchg
or
ss
pop
xchg
je
lahf
or
inc
cmp
cwtl
push
mov
sbb
mov
popf
fldl
mov
pop
in
mov
cmpsb
or
das
pop
push
clc
insb
cli
mov
movsb
scas
test
mov
in
movsb
add
cs
out
or
sbb
lahf
aam
ret
xchg
cmc
push
jnp
ret
sahf
lcall
movsb
pop
sbb
int
jno
sbb
fsubs
mov
push
xchg
ja
pop
xchg
imul
xchg
call
icebp
mov
sbbl
das
fmulp
adc
scas
dec
inc
jmp
and
fildll
out
hlt
xor
aad
push
xor
and
pop
out
jo
inc
xlat
shr
int3
aad
fidivrs
jo
push
jmp
inc
insb
es
lock
jmp
mov
push
inc
fs
scas
les
loop,pt
in
in
cwtl
inc
push
jl
pop
lcall
ror
jns
dec
in
ljmp
xchg
mov
mov
xor
mov
xchg
rol
gs
sbb
push
push
xchg
mov
clc
xchg
xor
mov
out
fs
and
int3
sub
ficoml
pop
adc
sub
push
inc
aaa
or
push
push
imul
scas
mov
sbb
xchg
andl
jo
push
xchg
and
ljmp
jo
xlat
push
lods
stos
and
xor
add
mov
decl
cmpsl
aam
pop
sbb
and
ja
xchg
push
in
ret
mov
aam
adc
in
jmp
mov
out
data16
fdivs
fsts
or
mov
push
xor
sbbb
movsb
and
cmpl
dec
lods
insb
mov
or
fistpl
cmp
dec
iret
cmc
add
sbb
add
shrb
aad
testb
pop
pop
das
add
xor
fiaddl
cmp
jbe
test
xchg
inc
jne
out
in
gs
or
add
jno
stos
and
movsb
call
cmp
sub
adc
xlat
jle
test
scas
imul
outsb
movsl
jecxz
push
loop
push
add
cli
adc
add
les
xor
cld
add
aaa
leave
bound
push
dec
mov
shr
adc
fsubrp
adc
dec
aaa
loope
lock
jmp
jp
test
lret
jbe
cmp
mov
push
inc
cmc
std
jp
lret
mov
jns
pop
mov
mov
add
push
fwait
mov
or
jae
testb
add
pop
lret
lds
add
mov
sahf
jb
pop
mov
or
outsl
mov
adc
push
and
mov
ds
mov
lcall
mov
pop
sub
jns
mov
jl
push
out
dec
data16
xchg
inc
push
adc
pop
push
imul
orb
xor
and
sahf
movsl
xchg
jo
and
push
sbb
pop
out
out
xor
cmpl
cmp
sub
dec
loope
or
imul
or
xchg
adc
and
push
mov
pop
mov
lahf
pop
and
sbb
add
int
jecxz
cmp
xorl
outsb
hlt
add
add
mov
mov
insb
lret
pop
cmp
cmc
xchg
ss
adc
clc
aaa
imul
outsl
mov
jge
iret
std
into
dec
sub
fs
jo
or
sbb
cmp
dec
in
fisubrs
cmp
iret
push
mov
in
adc
es
fldenv
pushl
shlb
popf
test
jmp
sbb
bound
ja
dec
sub
in
xor
sbb
jmp
mov
add
std
dec
cmp
jmp
loope
fdiv
add
stos
dec
xchg
cmp
into
js
push
mov
out
out
sar
or
push
divb
lret
into
hlt
xorl
mov
out
loopne
jae
les
push
push
cmp
jno
pop
cmp
or
dec
fisttpll
iret
jp
lods
or
lea
cld
rol
rorb
lret
jle
sbb
fsubrs
insb
mov
ret
and
cmpsl
mov
lods
subl
lods
and
xchg
out
out
pop
loopne
pusha
push
in
bound
stc
repz
cmp
cmpsb
sti
xchg
hlt
jne
mov
rcrl
cmpsb
jle
shll
jb
or
inc
mov
js
mov
mov
in
xchg
test
xchg
movb
imulb
sarl
int3
lret
cmp
pop
or
lahf
sbb
and
mov
ret
xor
arpl
hlt
es
movsl
notl
jo
imul
dec
xchg
jbe
fwait
add
and
push
xor
jns
jl
iret
add
mov
je
jmp
xchg
shll
sahf
inc
je
pop
add
clc
sub
xchg
outsb
aam
lret
outsb
shlb
xchg
mov
adc
cmp
mov
pop
and
rcl
icebp
push
xchg
ss
fstpl
add
mov
adc
pusha
ja
loope
mov
mov
imul
bound
or
loopne
int
je
cmpsl
mov
outsl
ret
jge
or
adc
frndint
pusha
mov
in
push
in
sbb
aaa
mov
daa
mov
loopne
rclb
icebp
jecxz
fsts
imul
sti
push
mov
mov
loope
std
scas
icebp
push
jl
and
call
out
mov
lret
mov
or
mov
in
and
out
xchg
inc
sub
xor
lcall
or
pusha
into
inc
les
out
mov
push
xchg
scas
icebp
add
dec
or
test
mov
jnp
mov
ja
mov
in
mov
je
mov
pop
aad
fs
jg
mov
dec
ss
mov
pop
adcl
jl
inc
bound
mov
bound
push
pop
fmuls
push
decb
ljmp
xlat
push
ljmp
jae
cwtl
aaa
jmp
mov
mov
jno
std
rcrb
ret
add
sub
jl
outsb
sahf
push
loop
lcall
xor
or
mov
out
cmp
jae
pusha
xor
fs
push
out
test
out
cmp
mov
test
add
aaa
mov
movsl
mov
rcll
pop
ljmp
jmp
popa
sbb
loope
sarl
lods
fsubrs
cmpsb
push
out
adc
push
pusha
pop
cld
push
jle
repz
pop
cmp
fbld
out
mov
and
mov
gs
pop
daa
pop
shll
notb
or
cmp
insl
loop
mov
sub
fisubrl
movsl
fmuls
pop
test
adc
sahf
adcl
popf
xchg
test
xchg
mov
pop
xor
daa
push
and
mov
clc
leave
sbb
jne
insl
out
and
movsb
dec
mov
ljmp
sbbl
cld
xlat
or
lret
ret
sbb
jb
mov
aaa
mov
xchg
xor
hlt
sahf
je
add
insb
and
mov
aaa
push
test
mov
sbb
mov
daa
repz
inc
in
xchg
xchg
rcll
data16
sub
fistl
cmc
fadds
adc
insb
enter
sbb
sub
jbe
jb
int
cmp
pop
in
movsb
cmp
and
shll
aad
nopl
push
ret
push
mov
xor
scas
or
lahf
ret
cmp
fadds
repnz
imul
push
sub
mov
pop
mov
jne
push
test
shrl
sbb
addr16
adc
sbb
aas
xor
icebp
mov
adc
repnz
lret
jmp
out
out
dec
sbb
push
xchg
icebp
sbb
cmpsl
cmc
mov
push
lahf
gs
popf
mov
xor
and
les
outsl
xchg
jo
lahf
out
iret
or
nop
ss
out
and
out
dec
popfw
js
inc
xor
sub
test
negb
push
cmpsb
push
lods
cmc
call
mov
push
push
xor
mov
test
add
pop
fwait
add
adc
int3
stos
sub
inc
ljmp
outsl
cmp
and
pop
dec
mov
shlb
jbe
push
or
sbb
mov
in
pop
fwait
lret
jmp
add
rcll
mov
mov
mov
mov
es
push
or
rcrl
pop
cmp
rorl
mov
sub
mov
push
push
adc
pop
dec
cmp
mov
adc
lods
pusha
push
mov
inc
push
arpl
jae
pop
sarl
repnz
ja
mov
pop
mov
add
cmc
mov
mov
adc
cmp
fists
push
lock
jns
clc
clc
add
dec
cmp
test
push
in
sub
jmp
mov
cltd
in
mov
pop
push
filds
mov
or
sub
daa
out
dec
jg
push
add
les
jmp
je
mov
mov
aaa
mov
sahf
rclb
test
dec
pop
add
pop
cmp
mov
rcrl
stos
sub
fsub
cmp
jg
in
mov
fwait
pop
out
mov
dec
daa
lea
imul
mov
mov
and
cmp
popf
imul
mov
pop
inc
mov
cli
mov
sub
jnp
call
xor
bound
lods
loope
mov
dec
out
gs
sbb
fwait
cs
iret
cmp
pop
and
pop
jno
in
stos
xchg
not
cmpb
cmpsl
pop
mov
push
jmp
pop
inc
inc
cmp
cmp
imul
sbb
mov
xchg
add
sahf
les
pop
insl
shll
jecxz
js
xchg
pushf
jno
pop
test
scas
or
pop
in
add
int
xchg
sbb
ret
lds
mov
out
pop
mov
push
stos
out
je
arpl
and
or
pop
test
gs
outsb
mov
es
insl
cmp
aaa
add
test
popa
add
push
mov
testl
adcl
xor
les
push
ffree
iret
jno
mov
add
scas
scas
data16
std
jle
inc
ljmp
popf
lahf
hlt
mov
mov
aad
iret
pop
add
mov
dec
daa
pop
mov
ret
jmp
jb
push
je
mov
push
test
xor
mov
in
popa
fistpll
notl
aad
add
mov
xchg
and
mov
cmpsb
std
sti
inc
add
insl
sub
jmp
jmp
lods
xor
aad
push
add
into
subb
aam
in
pop
or
dec
pop
aas
xlat
enter
pusha
popa
ret
test
repnz
pop
jne
pop
stos
cmp
loopne
push
cmp
repz
in
push
cmpsb
sbb
pop
or
aam
bound
xor
popf
jns
test
mov
in
int3
cltd
je
sub
push
je
add
ret
aad
push
loop
mov
cmp
loopne
dec
mov
das
fstpt
and
ror
push
andl
mov
daa
jp
xchg
incb
cmpsb
ss
pop
aad
mov
dec
adc
lea
popa
imull
pop
cmp
xchg
add
mov
jecxz
icebp
insl
and
dec
mov
fidivs
add
ficoms
pushf
push
test
cwtl
aam
cmp
rorb
xchg
das
xchg
mov
push
imul
lods
movsl
dec
shlb
push
inc
inc
dec
bound
xchg
mov
movsb
das
mov
fisubrs
out
mov
jge
dec
int3
lcall
arpl
je
aad
push
addb
cld
inc
push
jmp
inc
stos
andl
fld
cld
ret
or
loop
lods
inc
popa
mov
mov
jp
mov
mov
inc
or
out
push
push
sub
repnz
or
lret
xchg
inc
icebp
add
mov
or
aam
jo
movsb
lods
fmuls
cmp
movsl
sbb
xlat
imul
push
aad
mov
or
rcrb
lock
out
add
or
push
pop
push
push
or
cwtl
cld
pop
in
mov
sub
mov
mov
repz
jnp
les
push
jg
lret
push
sti
add
mov
insl
in
xor
into
or
add
movsb
fisubrs
sarl
lock
mov
mov
imul
hlt
pop
mov
or
and
push
and
sub
jbe
scas
movsb
push
xchg
push
repnz
pusha
addr16
imul
lock
add
dec
cmp
aas
cmp
js
inc
sbb
popa
sub
in
std
inc
xchg
mov
iretw
lock
mov
pop
fstps
push
pusha
das
jne
mov
scas
mov
push
adc
scas
xchg
in
mov
pusha
sub
lods
and
and
add
push
push
mov
imul
jae
jnp
jl
aam
dec
pop
xor
adc
stos
push
cmc
pop
faddp
mov
test
loopne
or
lea
ljmp
cmpsl
repz
add
and
add
dec
pop
jecxz
sub
orl
sahf
repz
vmovd
pop
pop
outsl
orb
lahf
outsb
je
and
dec
out
jo
addr16
dec
pop
popa
js
add
jmp
lods
ret
mov
push
and
dec
mov
cmp
loop
mov
dec
ja
int
xchg
and
lret
addb
jmp
lcall
xor
rol
je
fdivrs
jmp
std
mov
fsts
je
cmp
mov
mov
inc
repnz
push
pop
push
cwtl
mov
sub
and
xchg
inc
jmp
ljmp
or
daa
scas
or
rclb
lock
add
adc
xor
jb
loop
inc
iret
mov
adc
push
pop
loope
int
clc
pop
xchg
test
pusha
cmp
imul
sti
sbb
mov
xchg
sbb
negb
push
imul
pop
jb
cmp
jg
jecxz
imull
outsl
xchg
inc
clc
lahf
sub
rol
mov
pop
and
pop
aas
mov
sub
jl
add
fcmovnb
out
repz
mov
rcrb
inc
xchg
scas
mov
xlat
cmp
and
scas
push
fidivrl
jbe
push
mov
push
pop
push
inc
test
std
test
pop
xchg
int
push
push
out
insl
add
or
sbb
or
mov
dec
dec
xchg
inc
clc
std
mov
and
cmp
sub
pop
repz
cld
sub
sub
sar
add
add
addl
stos
mov
outsl
test
jl
cli
adc
aas
add
jne
add
xchg
xor
cwtl
popaw
and
rorb
cwtl
mov
jp
sbb
push
aam
leave
idivl
xor
pop
fnstsw
jle
cmpb
les
ja
or
sahf
pop
sbb
daa
arpl
push
test
push
mov
lret
pusha
mov
cmpsl
mov
xor
mov
inc
call
scas
psubusw
jmp
sbb
mov
mov
cmp
xchg
inc
fldl
cmc
add
icebp
mov
sbb
dec
fsubl
sub
adc
fwait
xchg
nop
test
cwtl
sahf
and
aas
iret
xchg
push
test
inc
cmpsb
popf
subl
sub
mov
push
mov
mov
pop
outsl
sbb
stos
shll
cmp
stc
xchg
gs
jp
inc
stos
popf
pusha
pop
mov
ja
push
icebp
dec
out
mov
lds
pop
xchg
cmpsl
mov
dec
jb
push
gs
inc
inc
movsb
sahf
mov
sbb
inc
bound
jne
mov
rorb
aam
orb
scas
std
jns
xchg
aam
scas
cmpsl
jmp
cli
loop
imul
sbbl
out
and
push
pop
in
inc
xchg
fistpll
xchg
jecxz
cli
ds
and
inc
fdivrs
pop
adc
movsl
or
mov
fildll
xchg
cs
clc
inc
jmp
pop
sbb
cmc
sub
scas
ss
jno
popf
pop
sub
cmpsb
and
out
dec
daa
jge
jbe
adc
sub
sub
mov
ret
dec
stos
lret
cmp
pop
mov
repnz
push
stc
cld
fmuls
fcompl
ret
sbb
inc
xchg
int
jnp
pop
test
pop
xor
sub
xchg
fs
outsb
mov
mov
outsl
mov
inc
cmp
sbb
sarb
ret
loopne
fwait
dec
mov
sbb
cmp
loopne
cmp
sub
push
cwtl
andb
sub
lea
dec
fs
insl
mov
pop
xchg
loopne
or
data16
enter
mov
aas
hlt
dec
movsl
in
inc
popa
int
jl
adc
pop
insl
nop
xchg
shl
jecxz
xchg
xchg
xchg
push
pop
addr16
sbb
sbb
or
fadds
push
enter
mov
bnd
pop
or
xor
pop
rcl
loope
fcompl
or
pop
xor
mov
cmpsb
sti
push
and
mov
fisttps
xor
and
xlat
jbe
iret
lahf
mov
xorl
mov
adc
adc
scas
mov
add
push
das
push
ds
mov
and
cmp
daa
add
in
fisttps
dec
mov
xor
cmp
loop
sub
movsb
rcrb
mov
sbb
mov
inc
pop
jbe
lods
dec
ss
ret
sbb
stc
fcompl
out
icebp
push
mov
dec
cltd
daa
test
rcrb
loope
movsb
inc
inc
shll
inc
or
xor
cmpl
adc
inc
mov
lahf
inc
or
cmp
mov
sub
inc
mov
or
dec
mov
jne
jae
mov
jne
mov
loope
and
sti
and
push
push
in
mov
or
insl
push
sbb
daa
pushf
insl
mov
iret
mov
mov
xchg
jp
test
xor
jns
fwait
pop
inc
pop
and
scas
xchg
cmp
sub
test
cmp
out
push
jo
daa
inc
push
mov
out
lret
push
ljmp
rol
icebp
pop
dec
stos
inc
sub
aam
stos
mov
je
xchg
cmp
rcll
in
lods
mov
mov
cmp
pushf
cmp
loope
mov
gs
aaa
mov
pop
xchg
cmp
fldcw
jns
adc
dec
fisttpl
or
mov
data16
pop
xchg
mov
mov
shl
xor
pop
int3
jb
mov
clc
xor
scas
xchg
jmp
mov
fistl
pushf
lret
mov
sub
cli
or
push
jecxz
xor
pop
scas
pop
in
mov
insb
adc
mov
dec
imul
or
fdivl
cmpsb
aaa
xor
jns
insb
pop
cmpsl
mov
dec
addl
sbb
mov
data16
testl
in
cmp
cmp
cmp
mov
mov
lret
sbb
loopne
aas
scas
jmp
jb
or
jmp
xor
aam
dec
shll
mov
adc
aas
and
ror
inc
xchg
clc
inc
fdivl
insb
pop
fs
adc
xchg
test
xchg
aam
fmul
add
rorl
mov
sbb
lods
add
imul
sbb
jl
inc
nop
push
or
mov
fisubrl
mov
call
inc
rorl
aam
xorb
sbb
fxch
ret
adc
fistps
mov
roll
add
sub
call
bound
xor
icebp
xchg
movl
ljmp
pushl
pop
mov
pop
sub
aam
scas
and
push
imul
dec
es
dec
push
int3
aas
pusha
jle
out
imul
cmp
arpl
sarb
icebp
ds
adc
in
mov
dec
lea
jg
inc
loope,pt
and
jns
ljmp
and
je
std
push
or
or
mov
les
push
inc
ljmp
je
iret
adc
lods
xchg
pop
mov
pop
add
das
and
jnp
adc
adc
rol
ret
aad
pop
inc
mov
cwtl
cmp
mov
repnz
fcmovne
call
scas
cmp
stos
mov
sub
and
ja
or
jge
pop
add
push
add
out
push
les
rorb
rorb
test
pop
test
in
and
iret
mov
xlat
outsl
xchg
dec
and
outsb
sbb
mov
or
cmp
adc
inc
cwtl
insb
pop
mov
and
sub
pusha
or
mov
adc
outsb
aas
dec
iret
aas
sahf
ret
pop
pop
lret
cmc
jmp
sbb
loop
xchg
lock
in
xchg
icebp
cmpsb
and
mov
xchg
push
incb
xchg
popa
popa
push
fcoms
jno
pop
cli
shrb
pop
inc
fcom
loop
lods
xchg
shl
mov
jmp
sbb
test
pop
gs
mov
cmp
lods
add
pop
fstpt
mov
faddp
cmpsl
imul
jnp
xor
aam
pop
sub
cmc
push
dec
inc
mov
leave
push
pop
test
push
jecxz
push
repnz
les
lret
pop
int
pop
lods
mov
pop
fstp
imul
mov
adc
shl
mov
push
and
add
popa
nop
outsb
push
iret
mov
dec
ja
cltd
push
out
fcompl
cmp
dec
jo
mov
push
insl
insb
inc
jb
lock
inc
jno
xchg
inc
insb
out
nop
or
outsb
sbb
push
xor
mov
rcr
jle
pop
pusha
and
xor
mov
push
sub
lock
ds
lahf
insl
add
lret
pop
mov
add
gs
mov
loop
add
addr16
test
xchg
jne
test
dec
mov
sbb
ja
mov
and
jae
shlb
pusha
loop
in
or
pop
aas
mov
mov
lods
es
call
and
in
int
pop
pop
add
push
inc
pop
cmpsl
js
nop
xchg
les
mov
push
add
xorl
and
ss
daa
jbe
push
test
mov
sub
out
xor
stc
xor
xchg
dec
data16
cmp
dec
sub
popf
pusha
adc
xchg
outsl
dec
leave
mov
cmp
pop
repnz
mov
shr
xchg
xchg
fldt
popf
dec
xchg
or
pop
adc
adc
inc
sub
mov
push
mov
sub
jmp
rol
sarl
out
dec
adc
xchg
inc
movsl
xchg
mov
cmpsb
rcr
xchg
inc
lahf
lds
mov
adc
push
or
dec
mov
sti
cmp
jo
sub
mov
xorl
xor
rcll
mov
xor
dec
mov
cmc
ret
xchg
sub
jl
sbb
pop
inc
xlat
loop
xchg
mov
xlat
or
aas
loopne
test
aas
lods
popa
xchg
xchg
je
push
cmp
insb
mov
dec
lods
jl
repnz
mov
das
addb
dec
mov
pop
ret
loopne
iret
stos
inc
mov
mov
inc
adc
add
inc
jnp
ror
icebp
pusha
orb
ficoml
iret
mov
cwtl
mov
fmuls
jbe
inc
mov
inc
jp
or
sbb
out
sub
cmpsb
into
out
jmp
sub
jp
cmp
rcr
mul
adc
cmp
dec
rcll
scas
leave
pop
inc
inc
add
push
lea
push
test
fbld
outsb
lahf
fsts
xor
orb
test
xor
in
mov
xchg
fistpll
mov
int3
xchg
out
mov
dec
xor
out
in
leave
aas
insb
aas
add
adc
gs
jae
clc
cmpsb
fwait
mov
jecxz
mov
adc
dec
aaa
cmp
or
out
sbb
pusha
cmp
loopnew
xchg
test
addb
out
xchg
push
and
mov
mov
aas
add
movsb
or
dec
xchg
xor
cmp
mov
les
les
xor
xor
mov
repz
nop
lret
dec
sbb
cmp
pop
mov
test
sti
mov
dec
xchg
lahf
lret
pop
repz
movsb
jne
xor
iret
inc
mov
lods
mov
lahf
aas
xchg
lods
xchg
mov
inc
loop
pushf
shrb
push
mov
popa
and
push
cld
jp
fisubl
mov
cmp
lret
cmc
xchg
and
or
jecxz
cld
call
aaa
loope
cmp
sbb
mov
pop
sti
cmc
cmp
into
faddl
xchg
sbb
push
sbb
pop
pop
or
sarl
imul
sub
ds
xchg
dec
stc
icebp
jg
push
cmp
and
icebp
xchg
pop
sub
aas
adc
pop
movlps
js
stc
cmp
fistpll
pop
xor
and
mov
test
ss
out
test
pop
test
not
outsb
xchg
ret
mov
xor
sbb
dec
xchg
js
mov
xor
lahf
in
jno
adc
add
or
push
push
sbb
gs
dec
and
dec
fucomp
and
test
mov
add
enter
cld
insb
pushf
mov
decl
lret
jp
pop
jbe
insb
fimull
lea
jnp
and
std
std
ss
fwait
pop
in
fildll
mov
cli
rcr
xchg
inc
cmp
inc
jle
and
xchg
inc
stos
sub
push
sbb
and
addb
push
pop
subb
roll
cltd
sbb
pop
arpl
mov
lret
cs
imul
or
or
mov
insl
xchg
fwait
inc
push
dec
movsl
jmp
scas
push
lods
imul
pushf
xor
mov
jnp
adc
out
inc
xorb
push
pop
hlt
push
or
loope
hlt
cmp
jmp
push
push
cmp
iret
je
pop
pushw
add
jmp
test
shlb
mov
dec
or
daa
pop
xor
out
push
aam
nop
and
xor
cmp
pop
aad
mov
mov
jl
jo
pop
sub
add
cmpb
cmp
inc
push
or
sbb
insl
mov
shl
jp
je
ja
fdivrs
or
rcr
jno
sbb
adc
int
jnp
and
jo
pop
insl
test
mov
rcrb
inc
inc
jae
lret
outsb
fcom
aam
fistpll
pushf
repz
push
popf
mov
test
popa
lds
dec
mov
inc
dec
mov
dec
movsl
shr
enter
js
mov
push
add
and
sbb
test
jne
rorb
sbb
outsl
cltd
jmp
push
pop
fildll
outsb
pop
imul
jmp
mov
lock
repz
mov
int
add
cmpsl
dec
or
outsb
fs
outsb
leave
aas
leave
enter
cwtl
test
loope
adc
insl
or
mov
push
adc
repz
dec
sub
pop
lock
push
mov
dec
sbb
mov
in
mov
lods
shll
mov
mov
push
stc
lods
stos
jns
push
jecxz
sbb
bound
sbb
cmp
hlt
xacquire
fimuls
cmp
ja
or
stc
sub
inc
xchg
pop
sti
loope
icebp
imul
mov
dec
add
or
das
sbbb
pop
jbe
dec
shlb
push
inc
mov
sub
pop
lcall
and
mov
pushf
test
cmp
push
lods
push
adc
mov
imul
adc
cmp
addr16
bound
pop
test
mov
mov
adc
mov
cmp
stc
sub
jmp
call
subl
jns
mov
int3
mov
adc
add
xor
xor
insb
xor
dec
iret
mov
inc
addr16
dec
xchg
in
dec
jmp
jl
jo
dec
and
mov
push
cmpb
or
mov
add
stc
in
fistpll
inc
cmp
js
in
loope
ljmp
mov
aas
xor
popf
test
mov
ret
in
xor
es
cwtl
sub
orl
fs
adc
rorb
xor
out
mov
stos
aas
and
ret
dec
adc
push
jl
out
pop
sbb
in
subb
mov
lock
rorl
pop
cmp
push
ljmp
sti
dec
xor
popa
push
iret
aaa
pop
enter
popf
sbb
pop
mov
rolb
and
xchg
inc
pop
rorl
movsl
in
aaa
hlt
insb
rolb
hlt
rol
in
popf
psrlw
cmp
dec
nop
movsl
clc
imul
xchg
add
sbb
add
fnstenv
jg
pop
xlat
lods
adc
ja
fwait
in
push
pop
ljmp
jp
sarl
jns
xlat
cmp
xchg
scas
dec
and
mov
jecxz
cli
mov
and
add
or
loope
mov
hlt
xchg
adc
push
mov
push
inc
adc
cld
scas
xchg
xchg
push
mov
push
int3
loope
lea
push
jl
xor
popf
mov
scas
pop
mov
jne
setge
imul
clc
pop
andl
insl
daa
je
mov
push
fstps
pcmpeqw
push
sub
sbb
das
shlb
cwtl
loopne
sbb
mov
mov
js
jge
popf
insb
mov
hlt
out
inc
stos
jp
shll
inc
mov
imul
mov
jbe
push
mov
js
cmp
lahf
sub
and
inc
repnz
mov
test
jb
xchg
adc
repz
insb
cmc
inc
inc
mov
sub
push
pop
icebp
les
xchg
adc
enter
push
rclb
pop
loop
jnp
lret
loopne
mov
mov
out
inc
add
cmp
call
bt
or
ret
xchg
int3
sub
push
bndldx
xor
jno
cmp
jne
jo
pop
sti
jbe
neg
push
dec
jl
iret
dec
cmp
sbb
or
dec
daa
xchg
cltd
enter
mov
jbe
sbb
test
insl
scas
sti
cmp
add
cmp
pop
cmpsl
pop
jbe
push
push
imul
mov
jno
fs
inc
jge
shr
mov
out
lret
dec
pop
xchg
push
add
out
out
add
xchg
and
mov
cmp
inc
jle
mov
xor
xchg
cmp
fidivrl
out
xor
jbe
add
ja
xchg
sti
stos
lods
int
addl
dec
lods
jg
outsb
hlt
lret
out
sub
cmp
aas
ret
cmp
xor
insb
mov
sarb
lods
mov
jmp
pop
jb
add
cmpsb
shrb
sub
mov
mov
xor
pop
ficoml
fisttpll
add
pop
ds
xor
jnp
pop
out
mov
cmp
int3
ds
mov
jo
inc
xchg
fcompl
jae
fwait
iret
pop
and
push
adc
inc
aas
popa
in
iret
xor
pop
sbb
icebp
push
fstp
sub
ss
js
lods
jns
pop
out
daa
sub
mov
jno
add
jb
repz
fldenv
mov
out
out
imul
push
cmp
test
cmp
push
xchg
and
xchg
aaa
js,pn
movsb
sub
bndstx
xchg
push
in
adc
sbb
cli
pusha
jl
mov
in
mov
dec
int3
jo
xorl
or
add
cli
xchg
sub
mov
jmp
xor
jnp
pusha
and
push
jb
cmc
jne
out
mov
std
shrl
jo
ja
repnz
fimuls
mov
sbb
mov
ret
mov
xchg
aas
xor
adc
imul
cmp
rcr
js
icebp
mov
arpl
inc
adc
mov
test
jg
xchg
pop
adc
test
mov
inc
js
mov
mov
push
ret
test
std
mov
sbb
cwtl
add
outsb
int3
rorb
int
outsl
sar
test
repnz
data16
ret
mov
sub
add
sbb
roll
xor
movsl
sti
cmp
adc
xor
dec
lahf
jae
dec
stos
outsl
xchg
iretw
and
je
aam
arpl
pop
subb
lret
flds
or
jb
push
sbb
cwtd
out
mov
add
ret
ror
cld
icebp
movsl
push
movsb
cmc
mov
mov
movsb
jl
jmp
cmp
popl
push
sub
pop
push
xlat
addl
lds
pop
js
fimull
cmp
lods
rolb
pop
dec
jg
daa
pop
lcall
ljmp
enter
jns
insb
pop
mov
adc
push
lcall
push
sti
sub
mov
pop
aaa
dec
enterw
dec
in
enter
push
add
or
ja
sub
cmpsl
je
add
and
fnsave
push
push
iret
push
mov
pushf
fwait
sub
test
push
test
dec
jne
clc
in
push
imul
lock
je
cmc
or
cmp
add
in
pop
dec
pop
movsl
lea
push
pop
pop
add
push
movsl
mov
jno
pop
fimuls
cmp
cmp
mov
test
pop
outsb
pop
lods
jge
mull
pushw
call
dec
bound
data16
push
add
sbb
sbb
mov
and
popf
and
jmp
outsb
enter
stos
lock
mov
lret
and
je
cmp
xor
add
sub
mov
fldenv
jle
xorb
pop
daa
cmpsb
sar
push
push
in
jo
dec
xor
inc
or
mov
pop
nop
les
cmp
fcoml
pop
mov
cmp
sub
test
addr16
in
add
int
jmp
and
xor
cmp
loop
data16
lods
bound
fldenv
das
cmc
stos
xor
mov
or
sub
ja
add
lcall
lods
cmp
jae
sub
insl
xor
pop
inc
xchg
dec
add
lds
shlb
mov
sbb
cmpsl
xor
cmpsb
xor
lret
push
ss
mov
getsec
std
dec
cld
in
loope
mov
ds
push
adcb
outsl
adcl
movsb
test
lret
loope
cltd
pop
sbb
jae
fildl
cld
add
add
push
pop
popf
notl
xorb
cld
shrl
xor
fcoms
ljmp
scas
inc
mov
insl
push
idivb
lcall
daa
popf
in
lods
pop
sbb
or
sbb
int3
ljmp
aaa
insb
jmp
pop
enter
push
popa
out
daa
push
int
sub
movsl
jae
inc
xchg
inc
sbb
push
cmp
push
cld
xchg
and
cld
or
or
pop
sub
ret
push
arpl
cmp
or
aaa
xchg
test
mov
sub
inc
push
pushf
mov
xchg
out
addr16
pop
addl
push
mov
or
push
sbb
sub
lret
idivb
xor
lods
aaa
xor
and
jbe
out
inc
lods
aas
mov
cs
inc
jmp
js
lcall
push
ret
dec
dec
inc
and
inc
mov
rcrb
mov
lods
test
pop
arpl
stc
cmp
daa
adc
jo
ja
movsb
sub
add
add
out
pusha
mov
push
lock
aaa
rorb
inc
jnp
popf
int3
dec
and
push
xor
xchg
rclb
push
push
push
push
loope
sbb
push
cmp
lret
std
or
sub
xor
xchg
inc
test
mov
jns
aas
inc
cltd
pop
mov
push
shl
jo
pop
adc
rolb
cmc
mov
sbb
add
push
nop
mov
fldcw
jae
lods
insl
jge
cmp
mov
xlat
adc
xchg
push
mov
pop
mov
lea
cmp
es
gs
in
sbb
jg
mov
mov
aam
mov
mov
sub
mov
in
std
jge
insl
add
mov
mov
arpl
mov
push
mov
mov
out
mov
lods
jns
adc
jnp
pop
testb
xchg
shl
xchg
lock
and
idiv
cld
pop
scas
data16
fs
repz
sbb
jne
insl
jbe
push
lret
push
lea
mov
ret
jo
js
sub
ja
xchg
addr16
rorb
cmp
iret
and
pop
sbb
pop
clc
mov
pop
fbstp
jl
adc
mov
push
in
push
cmp
xor
cld
jmp
mov
xor
je
insl
sahf
mov
clc
mov
rcr
inc
push
lds
pop
int
jmp
add
imul
outsb
pop
xchg
mov
pop
jb
jecxz
cmc
sahf
mov
jnp
es
adc
fcmovnbe
inc
pop
jg
push
lock
jns
popa
nop
mov
mov
jmp
mov
lret
cltd
cmp
adc
leave
fimull
sub
add
and
call
insl
xchg
dec
das
inc
pop
cmp
stos
fwait
pop
xchg
into
enter
sbb
mov
xchg
scas
ljmp
cmp
add
sbbb
add
pcmpeqb
push
sahf
sub
aas
mov
jo
pop
push
test
addr16
xlat
lods
mov
jle
xor
fists
cmp
outsb
jnp
jecxz
shrb
out
test
test
pop
and
dec
mov
adc
xchg
bound
adc
sbbb
jb
mov
sub
jp
mov
mov
test
js
xor
test
push
mov
jae
mov
mov
xchg
sub
cmpsb
cwtl
push
mov
es
mov
add
pop
xlat
or
nop
scas
stos
fisubl
pop
xor
jl
xchg
movsb
das
popa
loopne
mov
cmp
sbbl
aas
adc
scas
stos
pushf
repz
ret
jmp
sbb
fnstenv
aas
aas
jmp
nop
lock
test
testl
xchg
lret
lods
bound
cmp
adc
dec
fstpl
sbb
repz
push
pop
xchg
test
cli
sub
fcomps
lret
pop
cltd
push
enter
popa
xor
fs
pop
mov
add
adc
negl
and
xchg
jp
sbb
xorl
mov
jno
subl
sbb
incl
adc
xchg
jne
mov
addl
test
or
iret
or
lock
cmpsb
js
fldcw
mov
mov
dec
fsubrl
sub
dec
jp
dec
xlat
inc
cmc
ja
jno
push
jb
xor
pop
nop
push
cmp
test
popa
jg
and
movl
dec
stos
pop
mov
mov
pop
xor
xor
sarl
pop
xchg
push
fimuls
push
xchg
mov
scas
sub
and
stos
sub
and
xor
push
lret
mov
stos
cwtl
shll
mov
cmpsb
dec
pop
sub
and
push
out
lcall
scas
adc
mov
jecxz
imul
repz
fsubrl
mov
jg
adc
roll
mov
imul
mov
lahf
daa
xchg
lds
jecxz
jl
or
leave
sub
rcrl
ret
xchg
xor
cli
dec
xlat
push
jg
pop
pushf
mov
xor
xchg
dec
jmp
pop
enter
shrb
rcrl
sub
push
orb
insl
sarb
add
loop
or
stos
xchg
jne
ret
push
and
loop
mov
scas
iret
jmp
pop
in
or
pop
ud0
cli
movsb
sbb
inc
fistl
out
push
mov
dec
mov
ffree
insl
in
in
movsb
sub
mov
in
cmp
adc
enter
ret
inc
enter
mov
mov
clc
cld
mov
dec
outsl
mov
push
pop
cli
xchg
fists
aad
mov
test
mov
xchg
mov
jl
inc
loopne
inc
ret
or
xor
mov
and
popa
push
pop
dec
xchg
addb
data16
aad
les
xor
popf
inc
cmp
xor
pop
jo
mov
cmc
mov
jb
and
lret
fcoml
aaa
imul
in
cmp
idivl
mov
cmp
rcrl
and
adc
fdiv
xor
fidivs
fdivrl
hlt
rorl
inc
ja
and
jo
clc
loop
fucomip
push
mov
inc
dec
sub
in
mov
aad
dec
outsl
ficoms
push
adc
push
stos
push
sub
push
fs
nop
jo
inc
adcb
adc
int
outsl
pop
pop
movsb
loopne
jp
lods
es
push
sbb
mov
popa
outsl
push
movsb
popa
insb
aam
sub
mov
dec
push
lods
ds
xchg
adc
pop
divl
inc
out
cmp
mov
test
call
pop
ss
cltd
mov
sub
rcll
shr
dec
js
insb
in
jo
xchg
ja
mov
and
pop
stos
ficompl
roll
xchg
cli
mov
push
popa
mov
jns
or
mov
iret
sysexit
lds
cld
or
dec
ljmp
and
imul
mov
dec
push
sbb
insl
repz
inc
mov
lods
xchg
sarb
cwtl
xor
cmpsl
out
iret
push
mov
xchg
rorb
shrl
jo
mov
jg
jge
or
fldt
rol
mov
inc
and
jae
fs
sbb
inc
add
adc
inc
cmp
xchg
clc
pop
cmp
sbb
add
pop
dec
xchg
call
xchg
sub
dec
pop
mov
add
lcall
push
cmp
out
mov
jnp
inc
dec
push
loopne
xchg
repnz
subl
sub
dec
insb
loopne
mov
fnstcw
push
mov
add
test
cmpsb
loop
addr16
in
mov
stc
push
dec
push
pop
add
enter
repnz
mov
dec
mov
pop
in
js
lret
push
mov
repz
call
and
mov
pop
sbb
pusha
xchg
fsubp
dec
arpl
fwait
test
dec
sbb
jno
dec
inc
sahf
test
jno
xor
outsl
xchg
inc
out
pop
xchg
mov
push
les
inc
test
fdivl
cld
mov
sahf
imul
cs
sbb
push
add
scas
mov
lret
fildll
xor
je
mov
dec
lcall
and
jmp
repnz
mov
pop
lcall
mov
mov
adc
pop
imul
jnp
sbb
enter
shr
pop
jl
mov
mov
rcll
sbb
lret
and
sahf
mov
pop
lods
mov
xchg
adc
leave
sbb
cmp
xor
enter
push
test
inc
shll
outsl
jg
xchg
push
nop
push
mov
lods
inc
or
scas
sbb
pushl
xchg
jae
jnp
push
fcmovnb
fstpt
xchg
cmp
xor
jmp
xchg
dec
pop
dec
call
aas
jmp
int3
ret
jbe
loop
out
inc
mov
push
sub
addl
faddl
pop
mov
aam
into
xor
jb
mov
cmp
jnp
sbb
inc
and
mov
ds
lds
adc
fwait
sarl
call
pop
cltd
sub
sarl
cmpsl
push
or
stc
pop
cmp
leave
push
xor
inc
iret
inc
mov
adc
loopne
add
pop
cltd
xchg
xchg
xor
mov
outsb
insb
fs
in
add
loope
inc
lret
jo
sub
rcrl
cmp
adc
cmp
jo
movsb
jno
repz
scas
movl
mov
mov
add
cli
dec
mov
test
stc
dec
jle
daa
dec
xchg
mov
std
mov
daa
dec
pop
incb
cmp
jecxz
mov
arpl
inc
lods
out
int3
mov
jo
add
or
clc
and
mov
mov
aam
mov
mov
ja
mov
push
test
in
cmp
loop
enter
rorb
hlt
repnz
mov
outsl
repz
xor
xor
test
sub
jnp
out
xchg
mov
loop
or
mov
aas
shll
outsl
mov
mov
pop
les
in
fcoml
ret
dec
mov
fldcw
cltd
add
arpl
pop
sbb
mov
mov
jecxz
cmp
jmp
ljmp
cwtl
stc
popa
lock
cmp
aaa
mov
add
pushf
outsl
push
popf
pop
ss
jmp
mov
decb
andb
ja
stos
cmpsl
mov
aaa
push
cli
scas
aad
sti
lahf
ret
movb
jbe
aam
dec
sub
aaa
jae
sbb
mull
pop
xchg
and
in
xor
pusha
mov
mov
mov
dec
mov
cld
and
jmp
iret
push
aam
int
sub
dec
push
movsl
subl
out
cltd
and
jne
into
xchg
mov
mov
mov
ds
iret
sub
movsb
fsts
cs
popa
std
leave
sub
push
mov
xor
lock
sub
cmp
ror
into
es
aam
imul
jnp
push
jp
aam
out
lcall
mov
dec
inc
push
pop
push
in
pop
jo
mov
or
pusha
clc
jg
push
lods
push
daa
cltd
sti
std
mov
xchg
mov
inc
push
push
mov
and
es
fadd
pop
push
xor
les
movb
sub
pop
int
shll
scas
popf
std
inc
mov
cmp
rcrl
incb
sub
std
popf
mov
inc
test
neg
call
push
mov
les
pop
addr16
add
mov
xor
andl
mov
adc
mov
mov
push
adc
jnp
inc
fnsave
insw
fiaddl
orb
pop
inc
pop
or
hlt
sbb
fsubl
inc
or
cmp
je
jg
adc
adc
lods
or
loop
xchg
mov
leave
fs
rclb
data16
sbb
cwtl
mov
xchg
cmpsl
cli
xchg
push
stc
scas
add
fadds
pop
mov
aaa
add
nop
inc
jne
add
mov
mov
jbe
cmp
out
pop
iret
negl
shll
mov
das
inc
test
dec
xchg
mov
idivl
add
repnz
mov
inc
add
js
sbb
cmp
push
jae
jns
mov
fst
xchg
arpl
xor
popa
jg
pop
into
mov
sub
or
aaa
subb
jns
xchg
push
cmpsb
mov
cmp
mov
push
adc
add
std
mov
adc
fisttpll
fsub
and
je
mov
repz
xlat
in
sub
jnp
ret
loopne
adc
mov
aaa
jmp
cmp
ret
mov
pop
xor
ret
jecxz
movb
jb
andl
stos
mov
hlt
shl
inc
dec
loop
pop
cmp
data16
fyl2xp1
cmp
lods
jne
dec
cmp
xchg
lret
mov
and
sbb
testl
pop
adc
sbb
xor
adc
mov
pop
cmpsl
call
or
mov
aaa
aaa
hlt
lods
mov
cmp
loopne
dec
mov
into
jno
sahf
cmc
jg
sbb
dec
sbb
jg
or
std
jge
lahf
pop
lock
enter
rorb
and
sub
push
pop
test
mov
clc
sbb
mov
lods
std
subl
dec
push
xorl
xchg
lods
sub
ss
cmpsb
adc
lea
xor
cltd
out
sub
xchg
clc
lds
and
adc
scas
mov
dec
jle
pop
mov
inc
imul
jge
adc
cmp
push
jnp
or
mov
xor
xor
mov
rsqrtps
cmp
or
jmp
into
inc
push
inc
in
lock
adc
ljmp
add
pop
sarl
ja
adc
cmc
push
dec
nop
cmp
xchg
ss
js
add
pop
in
inc
push
inc
and
pop
std
xor
popf
lds
shll
stc
cmp
jge
xorb
jb
loope
push
divl
popf
or
enter
jmp
js
adc
adc
lret
pop
pushf
insb
aas
adc
dec
jle
int3
dec
add
xchg
repnz
pop
out
shrb
pop
fdiv
fistps
push
aaa
sub
movsl
xor
mov
pop
scas
mov
mov
subb
clc
fildll
or
outsl
jbe
cmp
and
mov
shrb
out
loopne
daa
sub
inc
mov
push
dec
cmp
cmp
adc
pop
push
ret
xchg
sarb
daa
push
adc
outsl
mov
sub
fsts
adc
into
cld
pop
and
pop
sub
mov
popf
dec
test
sbb
jns
out
outsb
sub
je
aas
mov
dec
pop
cmpl
jp
pop
xchg
xor
jnp
into
push
sub
arpl
xchg
lret
mov
ficoms
and
icebp
xchg
notl
xchg
adc
ja
insl
cmp
insb
ret
stos
dec
in
shrb
adc
popf
nop
jnp
lods
clc
add
outsb
jb
push
cld
dec
out
jp
mov
sbb
repnz
pushf
jae
inc
dec
stos
push
adc
pop
fldl
in
and
sub
lods
in
push
ja
lods
fsubl
add
push
gs
or
je
je
mov
xchg
dec
push
adc
add
insl
xor
xor
xor
int3
es
cmc
lods
sub
and
and
fisubrs
fcomps
popa
jbe
out
mov
dec
mov
mov
push
pop
shrb
xchg
movsb
pop
dec
fcoml
es
or
sbb
popf
and
jecxz
fistpl
push
mov
mov
je
cmp
scas
mull
mov
push
cmpsb
xorb
or
movsl
pop
dec
out
outsb
seto
out
adc
mov
xor
xchg
jns
xchg
ds
hlt
mov
in
lods
push
jecxz
dec
shl
std
adc
fbstp
xor
int
out
lods
into
pop
push
cltd
jb
jl
and
add
leave
jl
dec
push
arpl
adc
mov
das
sub
int
xchg
pop
mov
xlat
test
add
dec
sbb
ja
outsb
xchg
mov
mov
mov
popf
clc
mov
jno
outsb
inc
push
lcall
cmp
cmp
fmuls
xchg
jp
xor
mov
mov
loopne
jecxz
mov
inc
add
sub
in
xchg
jge
jmp
mov
mov
ss
push
xor
jmp
mov
lret
enter
imul
les
sub
add
test
ds
in
popa
pop
push
pop
and
je
imul
aas
lret
pop
sarb
fwait
xchg
push
xor
add
imul
xor
pop
mov
cli
add
cmpsl
and
lahf
fbld
mov
jmp
ja
dec
pop
lret
cmovns
subb
out
addl
daa
idivb
push
shrb
movsl
xor
dec
outsl
or
cmp
or
inc
pop
dec
jmp
out
xor
js
and
cmp
sbb
jmp
idivb
xchg
and
sub
loopne
and
loope
aas
lods
xchg
xlat
mov
xlat
pop
popf
adc
and
lcall
mov
divb
push
mov
fnsave
lods
outsb
jb
pop
int
xor
xchg
bound
pop
sub
and
dec
daa
and
shl
nop
dec
adc
in
sbb
mov
mov
push
repz
or
mov
fwait
scas
lea
loopne
popf
or
in
dec
xor
and
ret
add
add
cltd
xchg
xor
test
aad
pop
push
js
and
mov
sbb
outsl
mov
adc
pop
int
shrb
das
sbb
ja
aaa
push
popf
xchg
sub
pop
fnsave
call
subl
sbb
outsl
testb
outsl
adc
sbb
and
imul
scas
sub
or
dec
push
inc
out
xor
cmp
ja
pop
and
mov
xchg
decb
xchg
mov
das
jl
mov
fwait
enter
sti
outsb
out
fs
roll
inc
inc
cmpb
sbb
mov
jl
mov
fmuls
mov
orl
dec
and
addb
addr16
mov
mov
sbb
push
inc
movzbl
inc
test
push
lock
mov
out
movsl
push
jge
mov
inc
cmpsl
cmp
fs
nop
ret
jno
pushl
iret
mov
js
pop
in
dec
sub
or
fldcw
insb
loopne
jge
dec
bound
test
pop
or
scas
packsswb
inc
loope
outsl
mov
pushf
popf
js
dec
mov
movsb
idivl
and
push
adc
or
ja
mov
sbbb
adc
lds
les
out
loope
lret
rol
dec
int
mov
dec
enter
and
dec
cmpsb
ror
add
sahf
loop
loopne
dec
sbb
mov
cmpsb
sarl
adc
insl
adc
and
fdivrp
inc
test
movsb
dec
sti
and
ss
or
mov
pop
pop
mov
lds
add
mov
jnp
inc
loopne
sub
xor
pop
ljmp
sub
int
sub
addr16
insl
repnz
push
out
outsb
jg
push
fisubrl
add
flds
mov
sbbl
push
ret
lds
mov
mov
or
test
lret
mov
xchg
add
add
pop
xchg
fisubrs
loope
out
nop
cmpsb
loopne
je
aad
lock
icebp
xchg
mov
roll
sub
ss
out
xchg
mov
push
lods
sahf
outsl
cmp
dec
addb
lcall
mov
loop
mov
aaa
negl
cmp
aas
lods
popf
repnz
fldenv
lods
cli
out
xchg
clc
push
arpl
out
lret
jmp
pusha
add
enter
mov
sti
xor
and
push
add
enter
es
adc
and
fcoms
inc
outsl
cmp
dec
jae
mov
cmp
sbb
int
fs
test
orb
mov
enter
das
jno
nop
xchg
fildl
mov
and
push
sbb
aas
jmp
inc
dec
leave
test
mov
pop
fs
daa
mov
xor
xlat
sub
fs
xor
sub
dec
pop
xlat
sbb
stc
add
cmp
adc
xchg
notl
fidivrl
cmpsl
arpl
decb
cmp
jmp
xchg
mov
xchg
lock
or
orl
es
push
adc
vpmaxsw
popa
testb
mov
mov
jmp
pop
and
idivb
sub
add
push
ljmp
sub
gs
sub
xorb
sbb
mov
xchg
xor
adc
pop
leave
out
mov
pop
ja
ds
ret
jg
clc
sub
movsl
mov
mov
rcrl
cli
out
mov
pop
mov
push
scas
cmp
fdivr
add
pusha
add
lods
push
xchg
inc
xor
shll
sub
jmp
out
xor
stos
aas
push
xor
sti
loopne
cli
xchg
test
gs
out
xor
hlt
push
mov
inc
cmp
stos
lods
lock
rdtsc
pushf
add
mov
jle
neg
out
push
or
outsb
mov
ljmp
ds
cmp
adc
sub
out
add
mov
loopne
jg
adc
in
rcr
fimull
in
push
mov
test
ljmp
sbb
popf
repz
and
gs
cmp
or
ucomiss
add
in
test
pop
lea
jg
inc
xchg
out
ljmp
js
leave
inc
pop
mov
bound
arpl
mov
test
and
push
push
out
shll
movsb
popa
pop
xor
add
enter
dec
inc
push
mov
push
sbb
mov
es
inc
xchg
insb
sbb
outsl
clc
icebp
pop
and
jne
mov
and
mov
inc
push
js
and
dec
sbb
jmp
sbb
loopne
xor
xchg
push
xchg
pop
out
sti
mov
cmp
jns
scas
push
sbb
rcl
js
mov
jmp
fnstenv
ja
out
mov
data16
outsl
xchg
mov
push
adc
cmpl
adc
push
or
lret
ds
jle
fists
repz
lods
mov
pusha
pop
outsb
add
pop
jno
popa
add
call
lret
nop
shl
jne
cmp
pop
fildl
add
inc
hlt
jmp
scas
xor
shrl
enter
cmpsl
mov
jo
inc
movsl
or
add
push
pop
mov
jl
xchg
jns
fnstcw
mov
xchg
iret
in
and
test
mov
push
and
dec
xor
xchg
mov
mov
lret
mov
popl
jmp
jmp
mov
jmp
cmpsb
mov
addl
inc
jp
sbb
in
inc
inc
lock
fs
push
out
inc
mov
inc
add
jbe
xor
test
mov
xchg
jo
pop
xchg
fnsave
repnz
dec
sbb
cmp
pop
lods
xor
or
xchg
and
les
pop
std
test
xchg
jl
imul
xchg
inc
inc
sbb
and
insb
push
lea
filds
add
in
pop
leave
sub
test
movswl
movsb
rolb
xchg
sub
loop
orb
imul
test
pop
stc
test
push
test
push
dec
or
xchg
lock
loop
pop
pop
jbe
jge
aas
mov
sbb
or
es
xor
mov
cmc
inc
inc
or
ja
cltd
xlat
dec
filds
mov
add
in
xor
mov
dec
lret
mov
repz
inc
imul
mov
imul
sub
lret
push
test
xor
xor
call
inc
sub
out
sub
out
movsb
jo
push
mov
xchg
mov
add
mov
lods
ja
jge
xor
sbbl
adc
sbb
lret
cmc
xchg
jmp
mov
mov
adc
fadds
scas
mov
jnp
and
jecxz
sbb
imul
stos
in
lods
fwait
adc
mov
ret
and
xlat
lret
adc
cltd
and
xor
xor
jecxz
jg
or
js
mov
cmp
sti
xchg
push
lea
je
lret
cmp
pushl
add
push
popf
ret
loope
dec
xor
adc
rcl
add
stc
lcall
repz
aas
int
hlt
movsl
adc
and
movsb
out
sbb
sbb
addr16
adc
and
stc
lcall
stos
or
ljmp
lods
xchg
mov
mov
adc
cmpsl
push
roll
or
ret
push
pop
repz
loop
test
arpl
and
pop
fsubs
pushf
gs
and
repz
add
cmp
push
adc
in
push
and
and
or
mov
cld
sub
sub
sub
in
mov
in
popa
or
inc
int
shll
xor
mov
dec
int
pop
movsl
mov
ret
notb
sub
lahf
dec
test
cmp
scas
stos
sub
sbb
adc
je
mov
dec
jns
push
adc
sub
aaa
lods
into
sub
out
sub
int3
in
sub
mov
imul
jge
pop
xchg
and
movsb
fadd
fs
or
mov
mov
cmp
scas
shl
or
jb
jle
scas
popf
ret
shlb
pushf
cli
add
adc
mov
inc
or
lock
sbb
or
xlat
push
push
movsb
aas
xor
adc
or
pop
jns
mov
push
push
cmpsl
lret
add
xchg
or
mov
xor
or
loopne
shrl
sbb
pop
xchg
dec
push
jg
cs
nop
jmp
jne
mov
repz
adc
lds
cli
dec
pusha
sub
mov
jmp
xor
or
js
adcl
insb
mov
dec
mov
xchg
sbb
xchg
xchg
xchg
jb
outsb
mov
adc
loop
xchg
scas
test
in
movsb
sub
addr16
imul
imul
out
jg
ret
jne
aaa
popl
data16
dec
popf
sub
xor
sbb
aad
insl
fadds
jl
push
xor
and
test
mov
sub
es
mov
xchg
rorl
push
push
jae
push
test
pop
add
inc
mov
mov
or
or
jb
add
mov
xchg
in
cwtl
je
inc
daa
cmp
add
jb
mov
adc
bound
test
xchg
mov
or
push
sub
mov
push
jp
jo
inc
pop
cmp
push
pop
rclb
cmpsl
xchg
out
xor
xchg
pop
mov
xor
dec
add
and
jbe
mov
sahf
inc
rclb
ja
js
xlat
jb
inc
jno
shll
icebp
cli
test
sub
scas
cmp
dec
mov
or
ficomps
test
or
xorl
adc
xchg
daa
push
jp
pmullw
ffree
pop
arpl
clc
outsl
cmovne
cmp
push
mov
loope
jno
lock
push
jp
test
insl
shl
push
mov
dec
adc
popf
add
xchg
test
or
bound
nop
scas
cltd
fwait
jbe
xchg
das
and
sahf
cld
sub
enter
movsb
inc
mov
scas
or
outsb
pmulhuw
adc
lods
pop
add
jecxz
rcrl
enter
mov
adc
mov
lahf
cltd
std
dec
jbe
pop
lods
jae
mov
xor
and
subl
lods
out
and
xor
ret
xor
add
sahf
fucomp
insb
outsl
xchg
adc
mov
xor
or
enter
ffree
xor
xor
jge
aaa
jnp
loope
jp
push
pop
xchg
daa
fists
mov
adc
lods
imul
dec
movsb
push
adc
pop
mov
mov
ror
adc
pop
lcall
hlt
push
jp
mov
mov
les
or
ljmp
push
movsl
mov
adc
mov
pop
jnp
jnp
sub
lret
pop
sbb
lahf
pusha
arpl
loope
lret
int3
enter
das
arpl
pop
sarb
jl
fimull
push
scas
jbe
mov
out
mov
mov
inc
pop
in
repnz
iret
lods
add
pusha
fdivl
mov
push
loopne
in
cmp
jo
cmpsb
outsl
jge
faddl
push
int3
mov
lds
adc
insb
ror
sbb
imul
hlt
push
jp
pop
xchg
or
add
ja
into
stc
mov
and
sub
pop
mov
xor
dec
jg
sbbb
out
cmpsb
pop
fs
cmp
push
sbb
cmpsl
push
mov
sub
xor
xchg
inc
pop
pop
pop
xchg
dec
push
or
popl
cmp
shrb
lods
sub
push
cltd
mov
mov
jo
jae
push
pop
sub
mov
add
iret
insb
jg
and
mov
lret
pop
inc
cmp
or
xchg
test
repnz
dec
icebp
out
rorb
jbe
sub
mov
xchg
pop
scas
mov
test
dec
in
call
or
nop
cld
loop
mov
stos
mov
mov
das
sbb
xor
movl
push
dec
inc
imul
jmp
cmp
jo
jge
stos
xchg
lcall
dec
inc
push
add
mov
int
shlb
inc
gs
aam
cmc
and
cmp
dec
mov
stc
hlt
stos
aas
negl
fsub
adc
sub
mov
call
lcall
mov
popf
insl
sub
sub
jp
and
in
adc
inc
insl
clc
xchg
push
les
popf
cmp
stos
sub
jecxz
mov
and
in
les
inc
push
cmp
shr
and
inc
movsl
pushl
into
xor
repz
sbb
rcll
jl
pop
insb
jo
mov
push
mov
gs
push
or
cmp
cmpsl
push
push
sbb
repnz
jg
mov
cmp
lret
dec
jno
mov
lods
jbe
cltd
imul
ja
push
push
pop
test
inc
or
call
ss
notl
loopne
add
scas
push
or
mov
lds
xor
add
push
xchg
and
mov
or
cmp
popf
adc
test
push
je
inc
jmp
xor
and
mov
mov
popa
ss
fstpt
repnz
incb
add
popf
adc
xchg
mov
insl
pop
xchg
cmpsb
push
adc
stc
inc
div
das
nop
fmuls
mov
jno
cmp
mov
mov
lgs
mov
mov
ds
ficomps
and
pop
out
popa
pop
mov
imul
gs
pop
daa
add
xlat
pusha
lock
out
mov
out
and
leave
xchg
push
out
jle
dec
test
out
and
in
pop
cld
hlt
mov
adc
and
jno
push
aam
mov
in
call
pop
lock
jg
jmp
push
sub
mov
fstpt
or
cmp
aas
imul
mov
jns
add
repnz
lea
sub
mov
dec
xchg
into
mov
sbb
mov
push
inc
in
mov
popa
cmp
stos
fdivrs
and
lods
xchg
notb
jb
and
mov
dec
nop
mov
data16
popa
mov
ljmp
jmp
or
js
loop
add
jnp
out
js
add
test
fwait
daa
repz
add
pop
scas
into
pop
nop
daa
xchg
mov
int3
push
cmpsl
rorl
push
leave
mov
out
mov
mov
or
shrb
inc
xor
mov
cmp
outsl
pop
xchg
aaa
rorl
imul
in
aam
sbb
ret
testl
inc
jl
mov
scas
stc
sahf
cmp
or
sbb
cltd
add
xchg
lret
push
push
stos
out
sub
pop
stos
pop
idivb
out
mov
fimull
outsb
pusha
add
mov
adc
xor
out
sub
iret
push
pop
mov
pop
jmp
and
cmpsl
xchg
pop
lock
sbb
mov
jne
lahf
lret
pop
push
daa
pop
aas
cli
adc
lret
and
pop
fimull
mov
scas
xor
mov
pushf
mov
aad
adc
icebp
scas
call
sbb
xor
call
mov
xor
jmp
sub
scas
mov
sub
das
jb
stos
stc
and
daa
enter
out
mull
xor
xor
lea
add
cli
pop
ror
push
lock
ja
and
xchg
mov
ds
in
sbb
ja
enter
lcall
push
ret
leave
push
adc
xor
mov
mov
mov
cmpsl
add
test
push
outsl
inc
sahf
inc
or
sti
js
xchg
jp
cmp
jmp
sub
push
jle
cmpsl
fnstcw
aam
inc
dec
adc
aam
in
jne
adc
lcall
adc
and
sti
test
cmp
and
aad
aam
inc
cmp
sub
and
or
ret
in
or
imul
cmpsb
iret
jmp
pusha
push
iret
jae
icebp
icebp
push
lcall
add
inc
pop
sub
add
icebp
dec
dec
xor
xor
in
add
push
or
cmp
pop
mov
mov
jle
sbb
icebp
repnz
sub
into
in
push
or
ds
outsb
iret
fcompl
mov
cmp
push
xor
pop
loope
in
xor
cmpsl
fidivrl
add
push
mov
xor
int
inc
daa
hlt
sub
dec
xchg
mov
ret
out
mov
daa
cli
sbbl
fsubrs
mov
and
cld
cmpsb
xor
cmpb
dec
xor
add
inc
mov
pushf
add
gs
lret
out
jbe
adc
test
ljmp
and
pushf
lret
imul
out
insl
pop
sub
pop
cs
fldcw
dec
mov
sbb
sbb
mov
jg
pop
inc
xchg
clc
into
mov
iret
je
in
ljmp
out
mov
shrb
push
mov
ss
jl
mov
rcrl
inc
jbe
push
inc
mov
mov
adc
mov
es
ret
xchg
jae
jne
testl
or
aad
push
insb
std
sbb
sbb
inc
add
pop
loop
push
out
dec
pop
int3
xlat
sbb
dec
divb
mov
mov
js
insb
push
lods
xchg
mov
repnz
aaa
jecxz
leave
fdivs
loopne
mov
add
roll
pop
rcrl
out
lds
inc
fldcw
add
cmc
test
jno
mov
ds
xchg
xchg
mov
add
mov
sub
popf
push
xor
add
jmp
mov
push
mov
je
cmpsb
popa
add
fwait
lds
test
icebp
mov
popa
sbb
int
mov
cld
shll
jae
adc
xor
xor
lret
add
stos
jp
pop
sbb
pop
mov
int3
sub
push
addb
data16
test
push
nop
lar
adcb
aaa
pop
es
cltd
inc
mov
pop
and
dec
scas
push
xor
enter
adcb
in
cmp
cmp
lret
cmc
pop
dec
xchg
pop
mov
xor
ret
cltd
in
sub
gs
and
mov
xor
fwait
add
xlat
mov
icebp
sub
or
xchg
pop
pop
jl
sbb
div
pop
loope
in
int3
push
pop
inc
dec
sti
loop
fiadds
and
sbb
jnp
cmc
xchg
movsl
stos
mov
sbb
into
push
sub
aam
pushw
dec
xchg
jbe
adc
xchg
jp
inc
jl
cli
xor
loopne
adc
loope
orl
mov
rcrb
movsb
aas
fcoml
cmpsl
mov
out
push
mov
mov
jne
imul
cmp
shll
test
mov
cmpsl
out
aaa
out
mov
lret
repnz
ss
xchg
mov
leave
leave
pop
jl
mov
enter
stos
nop
push
mov
mov
pop
fcoms
in
adc
xchg
fcoms
pop
out
dec
pop
pop
xchg
jl
ret
adc
inc
cmp
adcl
mov
pop
mov
xlat
cwtl
sbb
nop
sub
jmp
sbb
jmp
xor
hlt
std
and
mov
int3
outsl
es
cli
jl
enter
or
stos
push
inc
lock
nop
fsubr
jmp
adc
sbb
cmp
rolb
fbld
or
xchg
gs
insb
mov
js
inc
add
or
cmp
mov
or
cmp
inc
or
and
test
je
int3
in
xchg
pop
in
push
push
ffreep
adc
iret
and
mov
js
jmp
cmp
xchg
mov
xchg
cmp
sub
aam
hlt
dec
add
fwait
stos
ds
jns
or
jge
movsb
sahf
push
inc
cmp
je
xor
push
xlat
sbb
xchg
repnz
std
ret
outsb
xchg
cmp
aaa
xchg
scas
jo
push
push
ss
in
loop
sub
push
xlat
inc
add
movsl
xor
xchg
mov
bnd
test
in
pop
push
pop
mov
mov
push
fisttps
daa
ficoml
aad
sbb
imul
out
fisubrs
push
mov
mov
stc
mov
xor
in
mov
push
mov
sub
xchg
sub
shrl
mov
add
xor
or
inc
inc
inc
xor
mov
sbb
adc
mov
xchg
jl
pop
test
ja
test
btc
sbb
xlat
shl
inc
jl
nop
stc
mov
lods
xor
adc
jmp
pop
mov
adc
xor
les
jo
sbb
pop
and
xchg
clc
mov
daa
inc
push
inc
sub
dec
push
jl
adc
inc
push
les
nop
ds
xchg
cmp
imul
xor
xor
dec
cld
ret
js
aaa
xchg
jae
movsl
jmp
pop
subl
pop
mov
add
cld
aam
stos
int3
push
mov
ror
xchg
int3
xchg
popa
mov
pusha
add
lcall
mov
sub
test
cmpsb
adc
push
add
or
adc
and
cli
mov
rcrb
lcall
cld
hlt
pop
add
arpl
pusha
pop
ret
ss
loop
push
add
mov
lahf
pop
je
lods
movsl
cmp
cmp
out
push
leave
fyl2x
lea
fs
cmp
cmp
lret
sti
dec
into
push
inc
ljmp
or
imul
cmpsl
and
fcomp
outsb
gs
sahf
dec
sbb
cltd
inc
fsubl
cmp
orb
jne
shlb
xchg
cmp
push
pop
xchg
imul
mov
mov
loope
dec
mov
mov
pop
push
jns
jno
cwtl
and
in
dec
rcr
scas
pusha
lods
mov
mov
xchg
adc
pop
mov
xchg
mov
push
add
fyl2x
jmp
ds
rcr
in
sarb
pushf
imul
jno
mov
xchg
pop
push
mov
inc
push
adc
es
mov
push
xchg
popf
sub
sub
pop
insb
mov
in
jbe
jnp
mov
mov
iret
cs
dec
sbb
sbbl
and
adc
xor
aad
hlt
popf
xchg
mov
or
pop
pop
bound
stos
test
dec
cmp
pop
cmp
aam
dec
outsl
jle
imul
repz
pop
pop
push
mov
iret
das
mov
xor
gs
nop
les
mov
pop
xchg
push
loop
lcall
xchg
mov
xchg
je
xor
xchg
pop
xchg
fsubr
mov
aam
data16
jecxz
lret
adc
jae
int
outsb
lods
cmp
iret
push
jle
repz
repz
inc
arpl
jmp
call
rclb
push
popa
lea
das
xorl
pop
insb
push
adc
stc
addr16
ret
lcall
imul
add
cmpsb
mov
sub
mov
fimuls
fildl
mov
sub
lock
xchg
push
mov
pop
push
adc
call
inc
filds
loope
lret
lock
idivl
divl
leave
adc
inc
aam
cmp
mov
push
pop
xchg
cld
add
pop
loope
scas
pop
push
test
es
and
sbb
sub
lds
out
cld
or
stos
dec
xor
daa
and
cmp
rclb
push
push
shll
jl
pop
scas
rcr
push
incb
push
mov
xor
sub
jg
xchg
pop
jecxz
outsb
mov
int3
xchg
adc
mov
xchg
cmp
pop
mov
cmp
jp
outsl
shl
rcrl
lcall
leave
scas
mov
xchg
loopne
adc
mov
jp
sti
pop
test
sbbl
out
mov
cmpsb
xchg
shrl
jb
lods
mov
or
mov
fisttpl
adc
das
pop
inc
rcrb
in
dec
jmp
clc
ja
cld
int3
pop
inc
or
lds
popf
add
test
sub
or
cmpsb
lods
pop
in
sbb
aas
fdivl
cwtl
movsl
xchg
stos
rcll
loop
pop
mov
fisubrs
xor
dec
push
jge
jno
or
fsubs
or
jg
cmp
loope
pop
test
cli
sub
and
pop
sub
lods
mov
xor
outsb
ljmp
in
or
aad
inc
cmpsb
test
adcl
test
mov
push
test
mov
xchg
std
fdivl
lods
mov
je
sbb
pop
push
sub
in
inc
sbb
jg
adc
bound
ficoml
mov
and
test
cmp
fld
aad
cmp
push
dec
notl
scas
mov
add
mov
rol
in
insb
sbb
test
out
adc
in
gs
xchg
jb
mov
xchg
inc
into
clc
jbe
jno
cli
cs
lods
shlb
nop
push
cmp
push
pop
jg
outsb
cmp
mov
jp
mov
into
iret
mov
rcrb
ret
addr16
es
push
sub
mov
or
or
mov
nop
fstpt
mov
xchg
int
mov
aas
mov
outsl
hlt
int3
mov
test
push
das
ss
adc
xor
xor
arpl
mov
inc
push
mov
fistps
ds
loopne
jne
dec
mov
mov
xchg
jne
push
ss
push
xor
in
lods
std
sub
push
js
inc
push
cmp
xor
dec
jae
push
cltd
fisttpll
jb
test
scas
jmp
or
pop
je
push
mov
pop
or
sub
not
push
jge
fs
nop
idivb
xchg
cmpsb
mov
pop
jo
push
add
sub
push
cmc
push
cs
out
roll
jo
jmp
xchg
jg
pop
jmp
icebp
rcll
jb
jmp
mov
jo
xchg
sbb
push
inc
pop
aad
sub
or
pop
adc
add
xor
shrb
mov
sbb
jno
dec
fsubs
imul
jb
xorb
cld
pop
cld
into
les
mov
xchg
sbb
hlt
addr16
mov
jge
inc
cmp
and
cwtl
and
out
addl
pop
cmpsb
sbbb
jo
pop
xor
mov
insl
and
inc
insl
sbb
cmpsl
sub
adc
aam
push
xchg
adcb
adc
push
mov
xor
mov
xchg
nop
rorl
movl
or
push
mov
jnp
aam
sub
rcr
outsb
andl
push
or
push
movsl
fidivrl
shrl
mov
jae
fld
popa
imul
sub
orl
in
out
shlb
enter
inc
mov
pop
pushf
or
cmpl
nop
xchg
xchg
filds
jmp
bnd
loop
inc
and
pushf
add
and
in
cltd
xor
jmp
negl
lods
add
stos
andb
inc
out
dec
or
sahf
out
xor
adc
pusha
pop
or
stc
jb
push
clc
push
jb
movsl
enter
mov
out
and
xor
ror
push
adc
out
inc
popf
xor
dec
jo
xchg
lret
repz
adc
adc
push
add
pop
lahf
jne
mov
test
sbb
fbld
sbb
popa
mov
push
inc
push
sbb
call
int3
lcall
test
std
add
push
xchg
mov
insl
iret
int3
inc
cltd
lahf
roll
adc
pushf
lods
test
mov
stos
daa
fs
ficompl
mov
sti
adcb
pop
sub
push
sbb
push
add
push
dec
jge
inc
insl
add
fsubrp
push
es
pop
adcl
out
std
pop
push
cmp
std
mov
outsb
cmpsl
or
mov
and
pusha
data16
outsb
lahf
mov
push
stos
sarb
and
cmp
lods
in
mov
int3
mov
or
mov
cmp
aas
or
imul
lahf
stos
fstps
sbb
loopne
xchg
mov
mov
test
outsb
push
cmpsl
sbb
jb
comiss
add
popa
lods
aam
pop
lock
decl
dec
add
test
in
mov
rcl
stc
pop
test
fs
pop
into
xlat
xchg
cmpb
mov
fldl
jnp
ljmp
int
dec
sbb
int
fmuls
mov
mov
cmpsb
gs
fcomps
mov
loop
clc
lret
cli
and
gs
mov
rcrl
add
fbstp
adc
into
mov
scas
xchg
and
jl
in
sbb
sbb
push
inc
fs
pop
adc
outsb
mov
aad
dec
mov
ret
pop
or
bound
mov
xor
loop
mov
inc
cmp
mov
xor
or
jl
ljmp
dec
test
fsubl
stos
rol
outsb
in
jle
push
cmovae
push
lea
xchg
sbb
test
push
lea
dec
lahf
ret
int
aad
mov
sbb
pop
push
sbb
mov
outsl
gs
cltd
mov
fadds
and
cli
sub
push
pop
fstps
daa
sbb
push
sub
shlb
mov
shlb
push
adc
call
int
aaa
push
movsb
test
insl
mov
lret
imul
inc
hlt
mov
fldl
rclb
or
push
dec
jl
sub
or
lret
pop
xor
ljmp
adc
push
imul
or
push
cwtl
addr16
int
int
fcomps
std
jbe
test
movsl
inc
scas
mov
mov
fildll
bound
mov
xchg
fcmovb
fistl
rclb
add
inc
sub
cmp
cmpsb
mov
mov
adc
in
in
xor
jae
shrb
xor
xor
jg
test
orb
out
xchg
fwait
shll
adc
subb
cwtl
repnz
loopne
flds
stos
out
dec
js
rcr
repz
xor
mov
mov
scas
xchg
dec
xchg
mov
mov
je
out
and
fwait
sub
push
in
sub
test
adc
mov
and
movsl
adc
pop
cmpsl
mov
dec
cmp
adc
movsl
test
fwait
pusha
pushw
je
cmp
jecxz
push
jmp
dec
jne
pop
xchg
subl
mov
inc
pop
popf
inc
mov
rcl
adc
loop
dec
adc
push
mov
lcall
cmp
pop
sbb
sar
xlat
lea
bound
and
xor
loope
fcomps
mov
cmp
pop
and
mov
push
int
test
xchg
push
ljmp
or
imul
and
hlt
push
aaa
in
std
hlt
xchg
inc
and
pop
inc
xchg
push
sub
mov
push
push
inc
xchg
mov
les
fwait
sub
mov
into
pusha
push
xor
int
jge
xchg
out
add
inc
sbb
and
cmp
xchg
sub
pop
sahf
push
lock
jg
or
in
sub
icebp
fcompl
es
pop
out
fbld
adc
mov
shll
adcb
push
mov
add
hlt
jp
clc
sti
imul
shl
add
xor
xor
int3
repz
xor
pop
xchg
adc
jp
push
inc
out
xchg
mov
fdivl
bound
jp
mov
mov
jo
movsb
hlt
mov
or
rol
inc
mov
cltd
mov
les
dec
xor
or
mov
inc
sub
inc
xchg
imul
jnp
add
icebp
movsl
arpl
test
jne
fs
into
xor
jae
jnp
mov
movsl
and
stos
mov
test
out
add
movsl
lods
inc
pop
test
dec
es
dec
cli
sub
add
add
gs
inc
mov
or
add
xchg
cld
pop
mov
inc
cmp
lock
insb
mov
das
es
les
iret
mov
lds
in
sbb
dec
mov
xchg
sbb
fcomps
sbb
pop
push
mov
push
add
cmp
ja
push
andb
fistpll
pop
inc
xchg
fnstcw
ret
xchg
pop
sub
pop
mov
ja
sub
aad
xchg
ljmp
iret
pop
add
cmp
or
dec
mov
mov
mov
adc
pop
dec
fdivr
arpl
insl
jno
jb
div
nop
pushf
sahf
pusha
insb
out
lahf
add
xchg
mov
and
or
lea
lret
add
push
fcoms
in
jl
loopne
sub
xor
jns
add
inc
inc
mov
scas
sub
push
adc
pop
mov
pushf
pop
dec
push
mov
pop
ret
aaa
iret
mov
test
push
mov
jo
lods
dec
mov
and
sbb
xor
jecxz
mov
or
aas
lcall
inc
mov
mov
jecxz
add
lods
lret
ljmp
mov
out
data16
stos
stc
es
enter
inc
loope
push
das
xchg
sbb
fnstcw
lcall
stos
xor
jl
sub
xchg
or
orb
adc
dec
mov
and
std
adc
xchg
adc
cmp
cmpsl
jnp
sbb
jl
inc
mov
mov
rcr
testl
cmp
jae
jns
lcall
xor
adc
adc
jbe
cmc
dec
cmc
dec
jo
pop
push
xor
stos
jb
sbb
sub
mov
lock
mov
negl
or
fisubrl
mov
stos
inc
sbb
jb
orb
cmp
push
jl
stos
cmc
xor
out
jp
ljmp
hlt
repnz
out
shll
mov
jmp
fs
inc
xchg
mov
je
ss
into
nop
lret
dec
jg
aad
jno
cmp
mov
dec
cmp
aad
fldenv
mov
push
or
jmp
sub
push
inc
sbb
aaa
mov
sbbl
pop
sarb
jg
stos
jp
mov
pop
push
add
int
ficompl
mov
imul
in
jecxz
mov
add
cld
inc
dec
imul
dec
cmp
xor
divl
push
pop
push
sub
push
xchg
imul
js
enter
add
xchg
inc
shrl
or
test
ds
out
aas
fwait
out
jnp
les
jl
lcall
add
int
les
or
sub
mov
hlt
stc
cmp
clc
adc
addr16
xor
or
push
and
cmpb
jge
lret
testl
jae
into
sarl
inc
push
xchg
cld
xor
push
fidivrs
pop
and
fdivl
dec
data16
cmc
xlat
aad
mov
sbb
xchg
xor
jmp
mov
push
fsubp
cli
lea
or
loope
mov
add
outsl
stos
sbb
or
loopne
pop
mov
nop
xor
out
lret
ljmp
inc
in
pusha
cmp
subb
pop
mov
test
lret
test
or
jns
dec
pop
leave
jmp
mov
xor
pop
mov
push
sbb
in
cmp
xor
dec
enter
inc
ja
lds
xor
mov
and
jb
imul
cmpb
test
stos
jno
inc
xchg
ja
pop
add
pop
jge
pop
stos
in
mov
mov
mov
inc
mov
or
add
outsb
dec
and
mov
int
pusha
dec
mov
aad
mov
push
jae
xor
jbe
stos
mov
mov
pop
out
or
jnp
xchg
sbb
cmp
loopne
imul
xchg
scas
test
ja
add
flds
lahf
out
pusha
cmc
lods
jge
test
call
roll
cld
je
mov
mov
lods
lcall
stos
or
divb
push
addr16
adc
lods
aaa
adc
out
lret
ret
sbb
inc
xchg
dec
popa
bound
jmp
imul
jnp
cltd
xchg
pushf
jmp
fisubrs
xchg
ljmp
rol
aad
int
lret
mov
out
adc
and
int3
bound
pop
enter
sbb
mov
shld
inc
mov
lahf
lods
push
pop
insb
fs
push
jle
movsl
cmp
or
lods
mov
cld
rolb
cmpsb
lods
jecxz
loopne
inc
cmp
hlt
jb
mov
or
mov
data16
dec
call
push
imul
sbb
cmp
sahf
data16
aam
mov
sub
inc
push
in
mov
lahf
in
cmpl
cli
lods
push
in
shll
sub
fidivrl
jo
stos
pop
fsubs
sub
jge
mov
fcompl
jbe
jbe
adc
fst
pop
shlb
pushf
clc
bound
sbb
idivl
ror
sbb
jno
jno
push
ja
pop
push
sub
pop
jecxz
imul
dec
into
xchg
into
sti
xor
lcall
inc
sarb
sete
or
arpl
test
mov
cmpsb
dec
shr
aas
add
in
sarl
mov
into
pop
pop
addr16
mov
js
and
jne
jg
and
push
adc
mov
in
sub
inc
insb
addl
addb
lods
mov
fsubrl
mov
jae
pop
es
adc
imul
vmovhlps
sub
clc
xchg
popf
cmpsl
dec
jl
out
xor
push
fstpt
loope
jg
adc
push
stos
stos
fnstenv
inc
push
xchg
mov
sub
ss
stc
pop
xor
fistpll
mov
int
test
and
push
int
lahf
push
inc
aam
sbb
nop
xor
mov
negb
mov
mov
icebp
pop
and
int3
mov
test
movsb
adc
and
mov
mov
aaa
fwait
cmp
lea
inc
sub
repnz
lock
inc
or
movsb
mov
jmp
loop
pop
dec
rclb
mov
xchg
flds
orb
stos
push
int3
rolb
push
in
addr16
push
aam
orl
test
je
mov
pop
mov
insb
gs
cltd
jne
test
test
pop
pop
lret
inc
jae
sub
mov
cmpsb
cli
adc
push
rcll
jno
mov
mov
xchg
andb
ret
dec
fwait
imul
push
fisubl
fcoml
ret
pop
int
xorl
mov
repnz
add
clc
pushf
fiaddl
and
pop
imul
ss
xor
add
pusha
xor
xchg
loop
pop
stos
out
mov
jnp
dec
xchg
jp
imulb
es
push
xor
mov
adc
push
xchg
jmp
aam
fstpl
sub
repnz
test
lahf
rorl
inc
loop
push
add
adc
es
negb
add
sbbl
add
xor
rcrb
inc
jnp
ss
mov
pop
aaa
enter
add
pop
gs
mov
sahf
sbb
and
xor
enter
inc
jle
xor
adc
mov
mov
scas
scas
cwtl
sti
fwait
push
cwtl
aad
int
pop
mulb
or
add
insl
push
push
arpl
lock
mov
jae
es
jmp
sbb
add
mov
in
ficompl
dec
pop
clc
sbbb
repnz
cli
shll
andnps
int
data16
cmpsl
cmp
lock
fisubl
out
imul
cli
xor
gs
jmp
cmp
jb
test
mov
inc
outsl
loopne
mov
shrb
call
cmp
sti
pop
setbe
lret
mov
inc
insl
inc
push
lahf
into
insl
mov
nop
push
scas
mov
cmp
ljmp
mov
das
out
lcall
xor
inc
fnstcw
mov
loopne
lods
and
mov
pop
jae
xor
gs
mov
fisttpll
xchg
jno
and
add
mov
cs
sbb
insb
cmpsb
jle
imul
out
xchg
and
testb
cmpb
push
aas
cmp
xor
iret
inc
stos
mov
testb
or
mov
loopne
pop
mov
shlb
aam
xor
mov
mov
imul
stos
dec
int
int3
jl
in
adc
addr16
sbb
fstpt
cs
xchg
pushf
mov
sti
add
das
push
outsb
imul
xor
adc
bound
dec
icebp
jp
sahf
dec
lret
or
test
sub
or
inc
dec
test
fs
mov
ss
test
ds
adc
lods
notl
adc
repz
test
lahf
add
arpl
mov
xor
adc
inc
xor
out
push
je
xchg
iret
cltd
xor
nop
or
test
xchg
xlat
cmp
nop
flds
leave
jnp
test
mov
int3
scas
pushw
adc
loop
add
repz
pusha
mov
push
xor
adc
and
add
repz
imul
cmc
psllw
add
sbb
dec
int
jo
addl
sbb
mov
xor
push
push
scas
and
int3
and
mov
loopne
mov
out
imul
daa
dec
repz
nop
xchg
pop
pop
add
js
mov
hlt
insl
pushf
push
rcl
les
adc
xchg
lahf
sti
dec
dec
ljmp
jae
mov
jbe
cmp
fists
or
sub
fisttpll
and
cltd
loopne
je
pop
mov
enter
lods
sbb
pop
jnp
and
pop
mov
add
leave
xchg
in
add
jmp
xchg
mov
shrb
cwtl
mov
nop/reserved
mov
xchg
lret
dec
mov
push
lods
xor
adc
stos
mov
lods
imul
sahf
xor
and
cmpsb
mov
cmc
push
mov
lds
push
pop
cmp
ret
and
xor
insl
jg
xchg
imul
pop
pop
mov
rolb
sarl
pop
ljmp
fdivrp
pop
push
imul
cwtl
pop
push
in
imulb
outsb
ja
jno
insl
sub
sete
es
mov
lea
lods
bound
add
push
push
testb
ds
xchg
sub
push
jo
sub
or
sub
dec
jmp
pop
lock
inc
cmp
mov
sbb
sbb
mov
sub
test
cmpsb
push
xor
xor
mov
jne
mov
lcall
je
adc
mov
or
mov
push
repz
pop
pop
loop
push
mov
sub
xchg
jmp
sbb
jle
and
shll
loope
dec
jbe
and
repz
mov
mov
mov
ljmp
or
dec
cmp
push
mov
sarl
test
cld
cmp
daa
jge
int3
pop
xchg
out
ror
mul
pop
push
fimuls
rep
jmp
mov
push
add
movsb
fstl
jne
clc
sbb
mov
sti
mov
out
add
and
mov
adc
out
push
in
xchg
ret
mov
pop
insl
mov
rolb
or
negb
or
pop
push
xor
loope
xchg
xchg
sti
std
enter
mov
mov
lods
shl
aaa
fcomp
jnp
jle
mov
lret
andb
xor
push
sub
mov
sub
sbb
xchg
mov
pop
sahf
ja
mov
push
dec
lcall
mov
loop
das
outsl
jnp
push
aad
jb
add
cli
sbb
aam
nop
sbb
xor
popa
inc
lods
and
jl
out
cmpsl
inc
pop
xchg
sbb
imul
out
lret
fiaddl
cmp
out
dec
sahf
in
cmp
xchg
aam
dec
push
push
das
xor
pop
inc
out
cmpsl
xor
jl
mov
push
andb
cmp
or
or
into
gs
into
or
stos
outsb
das
sub
fcmovne
and
cmpsl
xchg
adcl
enter
nop
in
mov
mov
mov
mov
xchg
loop
out
xor
pop
stos
fwait
testb
movsl
jbe
inc
shrl
cmp
fldcw
mov
inc
fmull
and
mov
bound
jp
orl
ja,pn
into
jle
cmp
push
mov
aam
mul
stos
xchg
mov
dec
or
xchg
mov
sub
xor
daa
je
pop
loop
pop
stc
fistps
ret
mov
sbb
fmuls
inc
arpl
sbb
ljmp
or
pop
push
sbb
lods
or
dec
xor
or
lret
in
fcmovne
mov
repnz
push
scas
mov
fists
lods
nop
add
call
fadds
mov
xor
sti
and
jb
dec
aad
push
or
dec
sub
lods
repz
or
mov
lods
push
scas
cmp
divl
jae
add
inc
dec
cmp
mov
inc
jle
rcpps
xchg
cltd
jmp
in
push
pop
cwtl
cli
nop
xchg
lcall
jecxz
push
in
rorl
mov
inc
sub
ret
lods
stc
test
xor
hlt
push
divb
lock
dec
aad
mov
lods
or
dec
dec
push
test
call
clc
push
add
pop
ret
and
adc
shl
jae
inc
xor
fistps
xor
ficompl
dec
cltd
mov
sbb
push
push
neg
dec
aad
xchg
xchg
pop
pop
cmpl
es
pop
pop
pop
xor
push
cmp
lret
out
insl
in
jge
and
hlt
lcall
lcall
clc
add
push
hlt
push
jbe
push
inc
xor
sbb
sub
inc
lods
sbb
ja
ss
and
fcoml
aad
loopne
mulb
add
or
addb
mov
int
add
dec
das
inc
push
repnz
ja
xchg
push
pop
cltd
jge
xor
inc
cli
sbb
jbe
cmp
stc
mov
in
xchg
push
mul
inc
mov
push
gs
jbe
scas
leave
mov
ds
repnz
mov
adc
xchg
dec
mov
iret
inc
sbb
add
xor
dec
push
outsl
pop
lea
adc
mov
sbb
pshufw
iret
jae
cmp
mov
int
out
aaa
xor
jmp
mov
cs
shrb
sbb
mov
jl
pop
pop
nop
cli
xor
movsb
aas
add
mov
test
mov
scas
jae
movsl
in
cltd
pop
xchg
aaa
call
aaa
cmp
xchg
cmp
lret
test
mov
pop
ja
cmp
cmpsb
dec
rorl
pop
ja
aaa
xor
in
xlat
jbe
mov
das
int3
cmp
test
shlb
add
jns
lret
stos
mov
rorl
add
push
fsubrp
dec
add
mov
pop
pop
sahf
cmp
dec
cmp
pushf
dec
xlat
int3
lahf
push
push
pop
enter
xchg
lods
cmp
mov
inc
sbb
push
call
adc
and
mov
rorl
imul
sbb
pop
lea
rclb
repz
arpl
push
inc
scas
lret
inc
mov
test
push
or
out
cmp
mov
mov
mov
jo
push
mov
inc
jle
test
add
sbb
sub
dec
pop
in
fists
jp
dec
ret
cmp
inc
insl
cltd
aad
pop
inc
loopne
stos
pop
iret
cmp
nop
jnp
mov
cmp
add
push
sbb
mov
cmp
dec
sub
nop
fs
psubsb
add
xchg
and
xor
xchg
imul
into
mov
xchg
shrb
mov
fwait
cmp
mov
es
push
push
or
and
test
jl
cmpsl
jg
aad
notl
inc
mov
mov
xlat
dec
and
andb
cmp
mov
fs
xor
mov
repnz
rorb
jne
fcomps
push
or
xor
mov
xchg
dec
bnd
rclb
fcompp
mov
les
mov
xchg
fcomps
mov
dec
dec
add
call
inc
pop
call
jl
xchg
jno
dec
mov
jnp
mov
jnp
and
or
nop
add
cmp
xchg
int3
pushf
inc
out
inc
mov
dec
adcl
jp
jb
lock
pop
mov
repnz
fistpll
sti
pop
ret
ffreep
mov
orl
scas
jmp
pop
imul
jg
je
scas
call
mov
int3
xlat
movsb
aam
mov
jl
mov
push
sarb
cmp
and
sub
sbb
rorl
in
ja
mov
pop
add
mov
jle
subb
clc
push
sub
mov
mov
adc
jecxz
push
shrb
xlat
fidivrl
mov
push
xor
notl
gs
addr16
outsl
mov
imul
pusha
sub
cmp
mov
lahf
jo
dec
mov
jnp
xor
sub
sub
mov
shll
sbb
jne
insb
stos
cmp
das
repnz
shl
lahf
xor
movsb
in
mov
xor
loop
inc
lcall
pop
xor
hlt
jns
cmp
rclb
test
push
add
jo
movsl
insb
mov
sbb
enter
mov
iret
fmul
dec
sbb
sti
sub
push
pop
add
ret
xor
repnz
push
mov
iret
mov
aam
loop
outsl
cmp
mulb
dec
lret
mov
cmp
pop
pushw
mov
in
daa
lods
lcall
ds
pop
and
jo
cmp
mov
repnz
ljmp
les
jp
jb
rcrb
dec
push
mov
adc
js
mov
pusha
dec
popf
cmp
call
shrl
dec
dec
inc
pop
dec
fnstenv
jbe
and
mov
adc
add
or
add
repz
cmp
xor
inc
ja
pop
jne
cli
call
inc
or
pop
pop
xor
popa
and
fbld
ljmp
jp
pop
jae
cmc
cmc
xor
xor
mov
mov
sarl
or
test
mov
push
stos
dec
aad
and
mov
insb
xchg
push
lock
cmp
adc
fwait
les
sbb
adc
or
add
mov
pop
aam
lcall
mov
test
imul
sbb
fnstcw
push
fdivs
adc
cli
fwait
mov
jecxz
addb
out
inc
cmp
in
pop
xlat
and
outsl
mov
jne
movsb
jne
xor
loop
loopne
ljmp
sbb
out
scas
mov
test
in
mov
xor
dec
xchg
mov
xchg
outsb
sti
mov
inc
or
sub
jns
repz
jne
stc
jno
fbld
pushf
mov
nop
push
dec
push
mov
outsw
dec
flds
out
cmp
xor
out
dec
ds
xchg
cld
pop
lret
imul
iret
aam
sahf
in
lock
pop
pop
mov
xchg
sbb
and
push
aam
push
jmp
mov
mov
repnz
inc
movsb
add
jle
xchg
lds
mov
fisttpl
jb
popf
xor
dec
out
enter
pop
bound
mov
mov
mov
cmpsl
clc
mov
aad
vsqrtsd
call
xorb
daa
jb
arpl
xchg
enter
jge
and
ficompl
push
jnp
das
cld
or
sbb
cs
xor
adc
mov
aas
in
imul
dec
xlat
sbb
cmp
fisubs
xrelease
push
int
sbb
mov
mov
cmpsb
xor
insl
sub
add
mov
xchg
mov
jle
insl
sbb
xchg
into
sbb
xorl
les
gs
pop
adc
js
scas
hlt
mov
xor
mov
movsb
pop
or
mov
cld
mov
leave
leave
dec
pand
pop
ja
lods
jge
into
inc
cmp
push
sub
push
std
sub
dec
adc
mov
lahf
outsb
mov
pop
out
cmp
fwait
push
mov
repnz
sub
mov
and
aam
arpl
int
pusha
sub
out
jl
cltd
pop
mov
and
add
nop
iret
enter
lock
dec
mov
js
pop
xor
cmpsb
lcall
popa
xchg
push
dec
sub
mov
mov
gs
sub
pop
es
jb
pop
stos
or
inc
xor
inc
mov
add
adc
out
fcomps
and
out
cmpsl
jp
sub
xor
cmp
scas
popa
es
or
imul
loope
push
sbb
ds
or
sbb
and
cs
inc
jmp
mov
and
ss
push
popf
xchg
xchg
mov
shll
dec
lds
rcl
and
sahf
mov
jb
rclb
mov
and
pop
das
cli
sarl
and
xor
popa
dec
fwait
ss
mov
repnz
sbb
shl
test
mov
adc
movsb
sahf
jecxz
fidivrl
jp
push
cmp
scas
and
xor
jmp
or
push
add
pop
push
sbb
aam
jmp
push
add
sub
fcom
xchg
mov
xlat
int3
shl
mov
add
sbb
mov
ljmp
sarl
daa
push
fcoms
ss
adc
loop
mov
jle
cmp
inc
xor
inc
jno
mov
cwtl
int3
scas
out
mov
and
xor
mov
add
imul
test
lock
movsb
lret
sub
xchg
mov
loopne
xor
push
test
lret
in
mov
ja
add
loop
js
fldcw
popa
ljmp
test
out
stos
cli
std
icebp
pop
out
lret
shrl
or
cmp
adc
add
movsl
pushf
or
sub
mov
cmpl
int
push
lahf
cmp
loop
bound
fcomps
sub
adc
push
pop
push
ret
xchg
fistl
les
or
clc
push
lds
sub
dec
testl
popa
inc
dec
add
ss
movsl
rcrl
cmp
out
xchg
fsubr
inc
inc
popf
lds
in
jge
jbe
pusha
loop
mov
xor
push
pop
mov
jns
iret
aad
int
test
jne
dec
dec
cmp
xor
enter
fsubs
pop
pop
push
movsl
xor
mov
fmuls
push
icebp
cmc
lds
mov
cmp
lret
add
inc
mov
movsl
mov
pop
ja
sub
mov
btr
fdivr
inc
fldcw
adc
dec
adc
xchg
sub
adc
fistl
push
mulb
and
lods
xchg
ret
roll
jnp
xlat
pop
add
mov
fildl
jbe
sbb
lock
lods
lcall
cmp
bound
pop
mov
aam
mov
dec
in
outsl
nop
std
xchg
fistl
add
xor
pop
dec
or
inc
pop
pop
test
lret
mov
scas
iret
inc
xor
inc
fsubl
inc
fs
sub
in
data16
mov
movsb
mov
mov
shrb
cltd
inc
lods
mov
pop
lret
xor
mov
imul
push
iret
fldt
mov
mov
cmpsb
popf
sub
inc
dec
mov
cmp
fwait
xchg
movsb
mov
shrl
cld
mov
loop
jbe
out
sbb
scas
gs
inc
fisubrl
sub
jge
inc
inc
inc
ljmp
fdivrs
mov
negl
ljmp
mov
js
inc
ret
pop
xor
repz
mov
dec
nop
cltd
jb
sbb
or
mov
inc
fists
mov
push
sbb
jb
loop
les
xchg
sub
dec
push
dec
shlb
jmp
outsl
sub
insl
pop
jg
pop
les
jge,pn
push
xlat
cmc
aad
sub
cwtl
imul
pushf
lods
outsl
xchg
sub
adc
aas
faddp
add
incl
push
icebp
jmp
cmp
cmp
adc
lods
pop
mov
adc
popf
out
and
jg
test
sbb
andl
add
lods
sbb
mov
icebp
scas
std
dec
mov
shlb
data16
sbb
push
leave
and
sbb
scas
sub
cmp
pop
cmp
push
js
sub
fdivrl
sbb
pushf
mov
cmpsb
nop
or
xor
mov
adc
inc
cmp
sbb
fnstcw
mov
adc
clc
sbb
inc
out
push
gs
cwtl
fcomps
les
inc
xlat
adc
jp
add
jne
inc
and
inc
data16
cmp
js
gs
ret
add
mov
inc
mov
cld
cwtl
adc
pop
js
jmp
cmc
push
rorl
xorps
icebp
mov
sti
aam
aaa
xor
out
mov
sbbb
mov
andl
movsb
pushf
lret
or
pushf
mov
mov
ja
sar
xchg
fsubr
sub
jo
adcl
cmpsl
push
jne
push
sub
ret
les
cmpsl
and
lea
mov
outsl
dec
adc
push
and
stos
addl
in
cmp
dec
cmp
xchg
add
and
leave
bound
mov
or
loop
push
cmpsl
sbb
inc
ret
lods
notl
dec
sbb
sbb
data16
inc
jp
xchg
sbb
lret
sbb
cmp
ret
mov
mov
inc
mov
mov
fwait
into
lea
aas
dec
pop
push
inc
cld
push
in
push
mov
lods
stos
sub
adc
bound
sbb
and
cmc
aad
out
arpl
rol
cltd
mov
mov
notb
test
and
leave
inc
pop
pushf
xchg
mov
in
xor
je
xchg
subl
das
sar
mov
jns
push
mov
jne
inc
setns
and
pop
cld
inc
push
mov
nop
les
mov
jo
arpl
pop
cmp
lret
mov
xor
mov
js
jmp
push
cmp
gs
push
repz
jae
aam
ret
lods
pop
in
mov
lods
int3
mov
push
adcb
aam
das
sub
adc
lods
mov
popf
or
stos
test
shll
push
jmpw
loopne
xor
ret
gs
cld
imul
jg
out
fstpl
rcrb
add
cmpsl
iret
pop
inc
and
lret
or
push
lds
je
mov
mov
popl
aam
adc
add
aad
push
jl
loopne
fidivrl
test
loopne
pop
mov
dec
lea
imul
out
imul
fadds
mov
push
lods
jge
mov
inc
cltd
sbb
int3
lock
mov
xchg
scas
xchg
pop
sbb
js
ljmp
ljmp
mov
popf
push
mov
into
jbe
mov
inc
dec
addr16
xchg
and
ret
popa
xchg
iret
sti
hlt
mov
xor
std
push
pushl
out
mov
inc
lods
test
xchg
clc
inc
cmpsl
insb
scas
fmulp
sub
cmp
push
inc
xchg
adc
lret
inc
mov
jp
mov
mov
mov
sub
jp
test
dec
pop
push
add
xchg
jnp
daa
pop
and
fsts
stc
dec
ret
and
mov
aas
and
repnz
aaa
dec
lods
sahf
stos
mov
mov
pop
arpl
adc
add
out
adc
data16
mov
cmp
cmp
xor
jmp
sbb
aas
imul
mov
sub
cmpsl
insl
push
ret
push
mov
add
mov
add
rcrl
mov
pop
fcmovu
and
lret
dec
jnp,pt
decl
jbe
jae
icebp
cmp
shlb
mov
mov
dec
lea
mov
push
fdivs
xchg
mov
pop
xchg
mov
mov
pop
inc
jnp
or
cmp
inc
sarb
repnz
in
rcrb
bound
out
cld
cld
pop
xor
std
ss
in
jle
in
test
js
sub
cwtl
js
aaa
xchg
pop
mov
xchg
xchg
mov
in
fdivl
daa
xor
lea
out
xor
fs
push
test
lcall
sbb
dec
sbb
sbb
negl
popa
cld
daa
icebp
mov
das
inc
mov
xchg
sub
aad
sbb
adcb
sub
ret
dec
popa
rcl
mov
push
repnz
dec
adc
cmc
xlat
adc
adc
aam
lret
in
inc
testl
imul
push
enter
mov
xlat
cltd
mov
int
lock
fldenv
imul
fisubrl
push
imul
sbb
mov
bound
push
mov
jge
ss
push
lret
stos
dec
xor
push
xor
mov
sti
cli
insb
pop
pushf
jg
pop
push
pop
shl
fnstsw
in
dec
fdivrs
sub
sbb
adc
dec
leave
cld
insl
dec
dec
jmp
jne
dec
jl
mov
cs
jmp
lahf
in
movsl
cmc
cltd
mov
pop
push
or
movsl
add
jp
sbb
nop
ret
outsb
jne
pusha
push
adc
inc
inc
dec
mov
or
or
test
xchg
mov
push
lock
xchg
xchg
dec
push
fadds
inc
jge
add
inc
pop
mov
dec
xchg
sub
lret
xor
push
mov
xchg
xor
add
aam
stos
hlt
sub
cmc
or
cmc
leave
adc
jle
cmp
stc
scas
into
adc
or
push
test
jne
loope
xchg
push
pop
xor
inc
fistpl
aaa
test
xor
inc
subb
mov
and
shrl
mov
pop
leave
lods
sbb
std
aas
fdivrl
jmp
outsb
fadds
inc
cmpsl
and
xor
data16
pop
push
or
pusha
jle
rorl
icebp
movsb
jecxz
jnp
jl
out
mov
int3
cmpsl
mov
test
pop
pop
xchg
dec
movsl
xchg
adc
mov
or
jno
mov
cmp
out
push
inc
fs
lea
icebp
jns
push
fsubp
jns
cmp
out
into
and
or
lea
inc
repz
xor
repnz
cs
aas
add
adc
jne
rolb
dec
pop
and
sub
negb
test
mov
and
lods
cltd
stos
ja
jge
adc
and
cld
push
dec
popa
lret
lcall
and
jl
arpl
inc
fwait
insl
mov
push
test
ficomps
add
mov
sar
loop
push
xor
push
jns
push
push
mov
inc
mov
icebp
xor
inc
push
test
aad
push
add
icebp
popf
into
xor
out
repz
xor
fsts
add
test
mov
cmpsl
sub
cmp
cwtl
pushf
or
jno
movsb
addr16
pop
xor
ja
mov
mov
xchg
enter
les
xor
pop
test
jno
lret
xor
int3
inc
push
cli
cmp
test
pop
call
and
pop
pop
jge
aas
popf
adc
jns
pusha
iret
push
xchg
test
stos
pop
jns
out
xchg
jle
les
int
mov
sarb
orb
jbe
sbb
push
mov
pop
cld
jns
xchg
mov
or
in
leave
in
add
adc
cmp
xchg
pop
jb
adc
adc
lret
pop
hlt
leave
mov
pop
addr16
scas
mov
loop
fiadds
cmp
or
in
or
sub
jecxz
sbb
test
sbb
out
stc
lret
fcoml
aad
mov
sub
add
add
clc
sbb
addr16
jnp
repz
call
xchg
push
dec
xor
mov
cltd
jg
cld
sbb
add
mov
sbb
ja
test
aas
lahf
sub
pop
mov
and
push
test
adc
ljmp
hlt
lea
imul
out
scas
lcall
imul
arpl
dec
xor
call
cmpb
cmp
inc
fiadds
fs
pop
adc
and
int3
and
leave
sub
lods
lret
mov
cmc
and
ljmp
in
dec
pusha
repz
xor
test
jb
mov
cld
or
andl
adc
mov
mov
subb
mull
inc
pop
lea
mov
push
inc
mov
xchg
xchg
testl
aaa
push
pop
xchg
inc
out
movsl
or
sub
adc
sbb
pop
or
rcl
lea
push
mov
lock
fs
ja
pop
lret
test
fbld
jns
stos
push
xchg
setb
icebp
adc
lock
pop
xor
loopne
orb
inc
push
outsl
sbb
in
jno
mov
push
movsb
xchg
shr
int
pop
test
cli
or
aas
sahf
push
mov
push
cltd
inc
and
lods
lcall
add
push
lret
rep
and
sysret
fxch
push
cmp
mov
or
jne
sub
push
mov
inc
cld
repnz
cmp
and
pop
inc
dec
pop
adc
mov
aas
mov
xchg
and
loopne,pt
movsb
and
sub
jno
ja
xchg
out
cmp
mov
addl
cli
dec
inc
fldcw
sahf
xchg
jns
push
or
faddl
sbb
hlt
dec
sbb
push
xchg
insl
adc
add
arpl
mov
xor
add
pop
xlat
mov
out
addl
hlt
leave
cmpl
out
xchg
and
mov
add
mov
lock
dec
xchg
stos
xor
mov
push
aam
fsubrl
pop
xchg
stos
addr16
and
pop
adc
sarl
xlat
cltd
scas
ljmp
inc
xchg
loope
cmp
adc
fidivs
mov
or
insl
push
push
cltd
lods
sub
jmp
nop
pop
hlt
jne
ds
pop
mov
cmp
mov
sbb
pop
adc
test
aad
aaa
cwtl
psllq
lea
out
push
ret
mov
loop
push
add
ds
into
imul
test
call
sbb
subb
loopne
push
sbb
dec
cld
jnp
inc
pop
lods
pop
imul
push
test
out
sub
in
decb
cmp
cmpl
pop
pusha
iret
dec
or
mov
push
inc
mov
fistpll
jle
int3
mul
js
arpl
mov
fwait
push
and
cs
out
and
outsl
jbe
xchg
and
mov
jo
mov
test
jns
push
xchg
xchg
fists
shll
dec
mov
leave
sub
fldcw
and
xchg
shrb
les
in
std
aad
jne
ret
jno
mov
int3
sbbb
or
mov
sbb
rorl
dec
imul
dec
call
lods
adc
mov
data16
lea
subl
lahf
or
push
test
dec
loop
dec
popf
data16
into
out
dec
dec
daa
pushf
call
inc
ljmp
sub
lods
cwtl
mov
scas
repnz
add
adc
jno
adcb
ds
lret
dec
push
push
mov
sahf
out
dec
or
mov
mov
shrb
xor
cmp
pop
mov
imul
daa
insb
in
mov
add
outsl
jb
insb
es
into
lods
mov
xor
sbbb
roll
mov
mov
inc
mov
jnp
jne
fiadds
mov
test
dec
daa
mov
loop
pushf
add
lods
mov
sbb
xor
xchg
mov
lock
fidivs
test
mov
aad
cmp
daa
shr
fs
and
test
call
das
sbb
icebp
lea
dec
jle
inc
mov
arpl
aad
and
fs
lds
xor
xor
je
int3
mov
loopne
aam
out
and
je
js
push
divb
push
loop
pop
sbb
outsb
dec
mov
xor
xlat
sahf
loop
mulb
lea
call
test
enter
test
pop
testb
sti
jmp
iret
dec
xchg
orl
pop
hlt
add
and
stc
xchg
jecxz
js
mov
out
xchg
inc
jle
in
push
data16
xchg
decb
adc
jl
mov
pop
or
jb
push
and
arpl
fcoms
adc
and
sbb
push
aad
int3
insb
icebp
jl
ljmp
jns
inc
mov
je
push
mov
int3
lock
jg
inc
cld
and
adc
adc
inc
mov
cmp
pop
cwtl
jne
sahf
sbb
cwtl
xor
jno
cmp
xor
push
mov
inc
pop
hlt
stc
cmp
mov
adcl
sub
daa
lock
in
fistpll
xor
jb
xchg
sahf
das
mov
aaa
mov
fsubl
xchg
ds
enter
xlat
out
adc
test
jo
sbb
cmpsb
nop
jne
aam
ds
fidivrl
out
sbb
push
adc
cmp
lret
add
push
adc
test
mov
arpl
add
das
mov
insl
int
push
movsl
sti
pop
aas
data16
call
jmp
mov
push
sbb
roll
mov
pop
fistps
adc
fcmovb
loope
sbb
cld
pop
sub
xlat
data16
sbb
xor
mov
add
data16
popf
lds
roll
mov
jmp
lahf
ret
cmp
cmp
aas
jp
std
lret
lret
jp
iret
mov
jns
jp
pusha
repnz
in
rdpmc
jae
push
jp
jg
stos
sub
popf
jb
ljmp
or
inc
push
jl
fistpl
xor
out
cmc
cmc
shlb
dec
mov
nop
xor
push
cmpsl
xchg
shlb
mov
clc
lcall
pop
fwait
scas
roll
sub
fdivrs
xor
jmp
pop
into
adc
adc
sub
das
outsb
sahf
daa
mov
shlb
xchg
les
ljmp
out
add
insl
sbb
lds
jmp
jbe
fwait
bound
pop
int3
add
xor
jl,pn
pop
inc
xchg
inc
int3
movsb
xor
cmpsb
movsb
daa
je
loope
adc
sbb
ficoms
xchg
mov
push
repz
vmovupd
xchg
in
mov
xchg
push
push
inc
hlt
cmp
sub
popf
ret
repnz
pusha
cmp
push
mov
dec
retw
or
adc
xchg
xchg
add
fdivrl
fcoms
lock
aas
aam
add
inc
pop
cmpsl
lock
popf
cmc
in
mov
dec
sahf
sbb
je
cmpsb
mov
fsts
loope
mov
adcb
mov
mov
push
adc
jb
inc
add
sarl
mov
jae
dec
stos
outsl
ret
jne
sub
adc
call
pop
mov
mov
sub
test
bound
jp
jbe
sbb
xor
imul
and
lods
inc
insl
scas
cmp
jmp
mov
pop
sahf
jo
popf
add
adc
inc
pop
jle
in
rep
stc
dec
xchg
pop
loope
lret
inc
mov
inc
dec
sbb
clc
test
addr16
pop
or
loopne
jle
test
hlt
lea
pop
inc
iret
cmp
inc
aad
jo
ljmp
cmpsb
jp
std
mov
mov
lret
das
xchg
jmp
push
sub
mov
lea
xor
cmpsb
lods
popf
cmp
jbe
mov
push
rol
mov
lahf
fistps
cli
movsb
and
jecxz
insb
pop
push
lahf
and
pop
mov
jle
fs
inc
mov
dec
lea
aaa
sub
popa
out
and
xor
or
data16
rorl
lret
orl
lds
outsl
push
shlb
jle
sbb
lock
imul
push
rcr
loopne
pusha
push
dec
scas
in
jne
test
xchg
jno
lods
test
rcr
adc
andl
shrb
addr16
mov
mov
leave
adc
xor
push
pushf
lret
adc
mov
outsl
or
sub
jg
daa
or
outsb
jl
and
fists
daa
or
mov
ret
push
out
cli
jg
rcrl
fidivl
xchg
lods
cmp
arpl
cmc
rcl
adc
ja
push
xor
jge
hlt
mov
fldl
les
cmp
neg
sahf
jg
shlb
inc
stos
leave
mov
push
mov
push
pop
xchg
jo
pop
jno
fcomps
mov
test
or
or
ror
inc
or
jb
in
mov
mov
lret
out
jb
add
dec
or
pop
cwtl
fdivrl
cli
addr16
xchg
ljmp
je
stos
push
ret
xor
sbb
or
stos
and
and
sub
xchg
icebp
insb
add
jg
arpl
push
enter
xor
outsl
jmp
shrl
push
push
imul
dec
add
lds
test
out
std
out
and
in
inc
xchg
dec
stos
sarb
mov
clc
inc
and
and
and
sub
and
sub
popf
mov
loope
push
sti
jb
or
pushf
sub
mov
outsb
into
sbb
xchg
cwtl
rcl
and
addr16
fcmovbe
pop
aas
xchg
fcomps
xchg
mov
in
push
sub
es
jns
cmp
xchg
daa
fdivs
daa
fdivr
loopne
pop
push
mov
lcall
jns
mov
cmp
cmovl
loopne
push
pop
or
mov
cmp
and
cmp
arpl
dec
cmp
adc
push
sbbl
mov
scas
or
movsl
xchg
or
out
sbb
jge
mov
iret
rclb
push
push
cmpsl
in
call
pop
je
or
adc
xchg
and
or
dec
lea
std
pop
fnstcw
shlb
mov
mov
mov
and
fsts
xor
sar
repnz
orb
movsb
push
scas
dec
sarl
xor
cmpb
int
loop
test
cmpsb
je
adc
ret
gs
cld
cmp
cmp
mov
shrl
outsl
inc
mov
push
adc
data16
rcrl
jmp
mov
mov
inc
jecxz
pusha
call
mov
cltd
jne
inc
pop
neg
add
sarl
fdivs
dec
daa
jp
out
push
push
mov
das
in
sbb
add
pop
enter
int
in
pinsrw
jae
and
in
shrb
xchg
mov
stos
jo
sarb
xor
jae
dec
in
or
mov
aas
and
stc
sub
cmp
inc
inc
xor
jno
sbb
lahf
dec
call
lahf
mov
testb
mov
sbb
inc
inc
adc
and
inc
mov
pop
cli
or
xchg
test
repnz
push
lea
sahf
rclb
jnp
xchg
sub
repnz
mov
rcrb
stos
or
mov
adc
xor
or
jle
gs
and
shlb
push
xchg
adc
bound
dec
push
adc
icebp
inc
mov
adc
ret
ljmp
out
adc
loop
rcrl
pop
mov
or
ja
sahf
pusha
or
data16
or
or
mov
addr16
cmp
and
cld
addr16
test
mov
dec
insl
mov
xor
movsb
lcall
scas
bound
or
cmp
lahf
adc
frstor
mov
mov
scas
rcll
mov
push
push
inc
dec
adc
je
stos
jp
xchg
pop
vmovlps
les
mov
jp
cmp
xchg
insb
fldt
pop
xchg
leave
jmp
jmp
dec
mov
loopne
sbb
mov
add
inc
inc
inc
jecxz
sbb
mov
jo
pop
mov
mov
out
mov
dec
in
lods
cmc
sahf
sahf
hlt
pop
lods
cwtl
incb
jge
cmp
ror
jp
jbe
inc
mov
mov
cmp
mov
pop
scas
mov
lods
pop
sub
popf
adc
enter
mov
rcl
inc
push
mov
lahf
xor
ds
div
add
xor
div
fsub
movsl
outsl
js
mov
cmp
xor
add
in
push
test
dec
jns
pop
out
adc
test
ror
inc
pop
lret
pop
fstpl
cmp
sub
sbb
jno
jmp
push
gs
dec
add
sbb
or
fbld
out
xchg
test
jmp
xor
xchg
or
jle
out
push
sahf
jg
push
mov
xor
mov
and
shrl
adc
sahf
fcoms
inc
dec
xchg
add
sbb
or
rcrl
rcrb
data16
fldenv
xchg
stos
lea
outsl
addl
adc
push
adcw
nop
sbb
sahf
imul
loope
inc
leave
je
stos
add
mov
mov
setnp
mov
add
addr16
xchg
jp
dec
jnp
roll
andl
xchg
sub
xor
lock
ror
loop
sub
das
test
cwtl
mov
leave
mov
shlb
int3
xchg
lods
pop
ss
mov
mov
inc
lret
cli
out
lcall
dec
or
mov
add
out
movsb
push
enter
sub
adc
das
mov
aas
in
mov
stos
call
dec
sub
dec
pop
add
jne
push
add
xor
or
xchg
jg
cmc
lea
call
dec
sarl
pop
js
sbb
mov
pop
lds
xchg
cltd
or
jns
xchg
add
add
jge
inc
dec
jbe
js
push
leave
cli
xchg
pop
xor
xchg
je
mov
inc
daa
daa
mov
sbb
mov
aam
adc
mov
int
mov
mov
scas
add
mov
in
mov
push
add
xor
cmc
sub
and
stos
cli
or
test
push
xchg
pushf
push
pop
push
add
pop
mov
xchg
push
add
aad
js
in
inc
jo
jb
lods
push
mov
mov
mov
ret
nop
dec
mov
push
loopne
ss
inc
dec
sub
push
int3
mov
mov
xor
dec
pop
ret
lcall
adc
fiaddl
aam
test
fdivrl
outsb
xor
orb
je
lret
imul
dec
cmpsl
bound
jo
enter
lcall
mov
mov
dec
pop
sbb
int3
jo
inc
cli
orl
frstor
test
pop
add
jae
mov
enter
or
ja
mov
ss
iret
loop
jecxz
scas
xor
leave
push
inc
inc
and
lds
sbb
call
push
imul
popa
testb
test
xor
pop
bound
fidivl
ljmp
sub
bound
xchg
icebp
dec
dec
push
dec
dec
fistps
pushf
sahf
mov
sub
inc
cmc
repz
lret
inc
mov
fwait
push
movsb
dec
fimull
and
and
mov
jp
push
test
cmp
stos
add
mov
and
in
fimuls
andb
adc
mov
jmp
jns
setne
cmp
mov
dec
cltd
daa
sbb
lods
mov
mov
insb
fldt
and
loop
shrl
and
cmp
push
stos
outsl
mov
and
mov
pop
int3
or
das
and
ret
cmpb
scas
and
dec
pop
imul
sub
out
or
lods
fisubrl
mov
fstl
mov
cmp
addr16
lahf
in
inc
inc
dec
and
push
vsubsd
push
add
sbbl
cmpsl
ja
pop
jns
mov
testb
repz
push
sbb
or
test
aam
and
loop
add
xchg
jb
out
pop
or
imul
mov
or
sbb
and
mov
pop
test
xor
ds
fiaddl
xchg
lds
pop
es
mov
mul
mov
fisubrs
inc
adc
shrl
inc
pop
add
in
jb
mov
mov
jg
inc
xchg
cmp
cmpsb
and
cmp
dec
stc
cmp
mov
ds
xchg
lds
stc
jb
mov
inc
adc
cmp
dec
or
es
aad
imul
add
push
movsb
stc
dec
pop
clc
nop
rol
inc
adc
aad
lock
les
or
daa
xor
hlt
mov
cld
stos
dec
scas
inc
pop
cmpsl
and
and
cmp
jmp
bound
jl
fcmovne
lret
repnz
xlat
paddq
lcall
cmp
pop
bswap
pushf
das
inc
adc
inc
inc
mov
mov
js
leave
pop
ss
and
xchg
jb
pop
jle
jno
mov
fdiv
jno
mov
lds
push
dec
bndldx
mov
js
out
cltd
push
xor
orl
inc
pop
add
inc
mov
idiv
popf
adc
push
arpl
les
test
and
add
jnp
loopne
cmp
mov
mov
sbb
ja
dec
dec
jae
cwtl
stos
aaa
add
pop
rol
cli
xchg
sbb
push
mov
jp
adc
adc
push
inc
pushf
xlat
pop
scas
and
fwait
dec
test
clc
push
flds
mov
out
shlb
xchg
lret
mov
push
lock
cmp
movsb
je
iret
or
pop
and
shlb
push
cmpl
adc
xor
mov
loop
sub
fsubrl
pop
xchg
ljmp
in
les
ss
lret
arpl
mov
mov
pop
dec
jmp
movsl
push
loop
mov
in
stos
loopne
lahf
xchg
or
dec
mov
jl
orl
lret
cmove
stos
cmp
in
lds
pop
scas
les
imul
out
gs
push
adc
pop
pop
jno
andb
scas
jle
mov
orb
cs
xchg
ja
mov
inc
movsl
cli
lret
popa
cmp
mov
cmp
mov
clc
fdivrl
mov
cmp
sbb
imulb
add
popa
pop
out
and
scas
cmp
mov
fldt
fcmovu
scas
pusha
bound
fstpl
ss
enter
mov
cmp
mov
insl
mov
aad
mov
mov
cmp
jl
mov
imul
aam
fwait
xor
call
add
in
add
shl
fldcw
dec
imul
sbb
dec
sbb
add
push
cmpsl
fwait
xchg
ret
loop
les
fwait
jb
mov
pop
lods
dec
mov
arpl
testb
popf
sbb
adc
sub
mov
out
stos
movsb
inc
mov
jae
mov
fdiv
xchg
subb
scas
pop
imul
mov
leave
incl
xor
into
in
jmp
int3
repnz
jle
jl
bound
xchg
mov
jl
cwtl
or
test
pop
std
or
test
in
shll
fisttps
dec
jle
or
fldcw
aas
scas
arpl
sub
sbb
dec
sub
xchg
call
xchg
mov
and
mov
loope
cmc
sbb
sub
movl
jne
in
fsubs
mov
ret
stos
jne
jb
xchg
and
mov
sbb
in
add
dec
sahf
xchg
pop
outsb
pop
ds
xchg
je,pn
js
mov
jg
cmp
adc
pop
lret
imul
fists
inc
push
xor
pop
test
push
fbstp
test
cmpsb
shll
push
cmpsl
mov
pop
mov
xor
in
sub
mov
or
mov
fwait
pusha
out
out
fdivrs
dec
cs
decb
cltd
cs
sub
xchg
pushf
jle
mov
cld
cmc
aam
sub
xchg
fwait
cmpsl
insl
std
inc
mov
cltd
add
dec
lcall
hlt
ljmp
out
sbb
dec
xor
pop
shll
push
shlb
jo
in
jb
mov
add
fwait
imul
mov
push
sti
inc
sub
xlat
cs
ret
push
sbb
pop
add
lea
dec
and
pop
or
fsubrp
inc
sub
iret
adc
popf
loope
xorb
xchg
je
test
jp
in
iret
and
imul
cmpsb
std
and
push
popf
mov
sub
add
xor
or
aam
outsl
je
jno
inc
int3
adc
push
mov
and
in
in
cli
adc
pop
push
lds
mov
cmc
and
xor
sbbl
daa
fcomps
cwtl
jle
xchg
sahf
pop
imul
and
mov
jp
iret
add
jmp
add
sti
push
xchg
xchg
test
and
popa
sti
aaa
mov
push
sub
sub
xadd
jne
cmp
mov
lods
loop
pop
and
mov
pop
push
add
orl
ficoms
jp
adc
dec
repz
cli
pop
mov
cmc
aam
pusha
adc
sub
pop
repnz
mov
fisttpll
cmpsb
or
push
in
inc
push
testl
and
fs
sub
shrl
inc
in
push
adc
les
cmpsl
mov
xchg
loopne
sub
bound
cmpsl
mov
cmc
push
mov
dec
mov
jg
push
je
icebp
xor
rclb
sub
adc
iret
sub
sbb
xor
add
jecxz
sahf
ret
jge
rolb
push
jecxz
push
fmul
daa
push
xchg
adc
xchg
insb
pop
int
addr16
and
sbb
dec
mov
addr16
enter
or
test
inc
cmc
mov
add
cmp
jo
call
pop
les
mov
jp
ljmp
sti
movsl
pop
push
rol
mov
rolb
xchg
xchg
hlt
clc
xchg
jne
sbb
inc
jne
dec
or
jo
insb
sub
in
ljmp
mov
sbb
ss
sbb
scas
ror
sti
push
push
cltd
mov
cmpsl
aam
pushl
add
push
pusha
mov
movsl
and
jns
xor
test
incl
push
cld
lcall
loopne
aam
add
sub
pop
stos
pop
pop
aam
int3
das
xlat
pop
pop
adc
mov
repnz
mov
cmp
dec
push
jecxz
mov
lods
iret
iret
sbb
sub
daa
xor
dec
ret
gs
inc
pushf
pop
jle
mov
data16
adc
cmp
les
mov
mov
leave
and
fimull
fldenv
movd
jp
adc
aam
imul
mov
pop
out
es
pop
nop
pusha
and
mov
mov
test
xchg
jecxz
xor
jne
das
sub
sub
push
pop
imul
push
add
dec
sbb
enter
sbb
mov
sti
mov
dec
outsb
repnz
inc
les
es
mov
sbb
fsts
sarb
jns,pn
hlt
push
in
push
rclb
aam
scas
mov
imul
cmc
dec
repz
cwtl
and
das
popl
pop
repz
xchg
in
mov
jne
lods
adc
sbb
mov
out
pop
cmpsb
sub
adc
or
leave
adc
andb
sub
cmp
push
shlb
cmp
mov
repz
nop
xlat
cmpsl
fcompl
insb
ds
faddl
mov
xor
jnp
or
mov
or
insl
adc
mov
dec
add
xor
iret
dec
cmp
pop
bound
sahf
imul
inc
bswap
adc
scas
push
pop
pop
testl
adc
and
test
pop
fwait
movsb
mov
das
rolb
xchg
push
push
insl
sbbl
js
mov
mov
pusha
inc
mov
cmp
mov
xchg
adc
out
xor
movaps
sbb
sbb
loopne
mov
and
push
jge
jb
mov
sbbb
insl
xor
fstps
xchg
push
xchg
call
lock
aaa
data16
mulb
loop
cld
inc
fs
ret
subl
jle
shr
pop
int3
bound
std
lds
inc
jae
mov
mov
pusha
ret
lea
push
pop
mov
gs
test
iret
xchg
dec
xchg
dec
mov
add
xor
pushf
cs
in
test
sbb
inc
cmpsl
cwtl
jl
fstps
jl
cmp
ret
mov
cmp
negb
or
xchg
adc
stos
scas
sahf
add
fbstp
mov
adc
sti
and
and
pop
rcl
mov
mov
lahf
negb
mov
mov
out
sub
push
sbb
xor
xor
jl
xchg
sbb
cmp
sbb
loop
call
or
daa
mov
enter
sbb
in
je
fistps
stos
aad
ffreep
rcrl
in
push
add
pushf
sub
js
cmp
aaa
lds
and
popf
mov
out
mov
ds
sti
mov
lret
or
mov
cwtl
push
ds
push
inc
aam
mov
xor
icebp
mov
stc
das
cmpl
loope
pop
mov
adc
loopne
bound
push
pop
popf
mov
dec
jmp
adc
int3
out
negl
or
add
int
cs
xor
pusha
mov
imull
movsl
mov
stos
push
cmpb
and
xchg
xchg
pop
jbe
xchg
and
jo
xchg
test
inc
xor
cltd
subl
xchg
repnz
scas
pop
adc
or
dec
ljmp
pop
pop
cmp
filds
aad
sub
inc
push
cmc
cmpsb
push
jecxz
cmpb
test
movsb
xor
and
and
mov
and
arpl
add
loopne
inc
adc
jp
mov
movsl
repnz
push
pushl
fdivrl
ss
pop
jg
fcmove
leave
test
popf
mov
pop
mov
mov
cmp
pop
push
loopne
sub
xchg
cmpb
cmpsl
stos
sbb
xor
das
repnz
out
xchg
dec
das
aad
or
rep
sub
out
push
jmp
cli
xchg
cli
sbb
push
xchg
es
mov
and
stos
lods
rorl
aad
add
dec
mov
aad
fcoms
jns
stos
xor
loopne
xor
fistps
dec
outsl
inc
push
lcall
inc
and
insl
adc
arpl
mov
into
jge
clc
loop
and
cmp
pop
in
enter
nop
roll
xor
js
mov
lock
ret
fimull
sbb
shll
lock
xchg
mov
and
mov
sarb
aas
in
dec
std
icebp
mov
push
jno
mov
outsb
lahf
lcall
es
pop
xchg
sbb
jne
mov
mov
and
push
loopne
sbb
fimull
push
rcrb
jnp
adc
cld
jg
in
fwait
dec
xchg
dec
in
insl
add
stc
xor
xchg
cmp
push
jecxz
enter
xor
adc
inc
inc
shrl
addr16
int
fcoms
push
lds
int
cs
xchg
dec
lods
pop
sub
or
dec
repnz
pop
cmp
fwait
sbb
jmp
xor
aad
in
push
push
out
pop
mov
icebp
sti
mov
sub
push
std
mov
xorb
das
cmp
loopne,pt
sar
repnz
mov
cltd
cmp
mov
shlb
gs
sub
movsl
fsubrl
dec
ja
fdivp
and
cmc
aaa
adc
and
cs
sahf
aam
repnz
mov
int3
pop
sbb
adc
movsl
int
lods
rol
push
cld
rol
roll
bound
dec
adc
mov
or
stc
stc
cs
xchg
xor
add
imul
enter
cltd
aaa
lea
mov
jns
dec
bound
shlb
ret
out
fwait
in
xchg
jb
mov
das
and
xchg
rorb
js
dec
add
mov
mov
dec
jecxz
sbb
ret
fnsave
fmulp
jns
outsl
adc
test
fdivrl
inc
imul
inc
and
rcr
les
mov
mov
sub
lock
xlat
insl
insb
pop
xor
rclb
test
cmp
icebp
iret
jo
lods
fstpt
rclb
dec
shr
dec
mov
cs
out
and
divl
inc
scas
popf
xor
in
imul
ljmp
bnd
call
pop
add
pop
sbb
out
fucomip
and
shll
and
add
cmp
push
hlt
cmpsb
and
mov
dec
mov
popa
push
mov
adc
lret
lahf
cmp
imul
roll
stos
in
vpackssdw
cmp
or
xor
add
pushf
sub
fmull
mov
mov
repz
push
jns
cmpsl
mov
push
xor
dec
fwait
pop
cli
pusha
out
pop
es
jb
pop
jle
mov
and
daa
lahf
jne
mov
pop
cmp
pop
addb
xor
cwtl
mov
mov
movsl
mov
repnz
imul
dec
jl
dec
xchg
xchg
adc
mov
rolb
test
into
xchg
pop
fmull
out
or
lds
ljmp
mov
fcmovnbe
jg
decl
out
into
jmp
push
cld
scas
fdivs
sahf
sbb
fiadds
andl
jp
mov
into
popa
mov
xchg
mov
test
jecxz
loop
fmul
mov
mov
cmp
add
cmpsb
dec
ljmp
rcr
pop
xchg
dec
test
ret
or
mov
or
hlt
add
nop
pop
xor
and
scas
cmp
mov
outsb
cmp
dec
xchg
shlb
repz
in
cmp
inc
xlat
pop
dec
cwtl
xchg
ljmp
push
cmp
sub
jbe
daa
pop
mov
mov
push
pop
bound
idiv
pop
push
dec
add
xchg
sub
jns
and
jle
shl
jns
sbb
rcll
mov
fwait
out
scas
inc
aad
out
mov
out
mov
xchg
xor
arpl
cld
push
xor
mov
push
push
pop
mov
lods
mov
imul
mov
dec
jecxz
dec
test
jp
out
ret
mul
or
sub
outsl
es
nop
je
fistl
imul
insb
aas
cmp
or
adc
imul
xorl
dec
popl
jo
rcrl
fbstp
or
jmp
lods
rcrb
pop
mov
cltd
insl
mov
int
sbb
mov
hlt
push
xchg
lahf
xor
in
xor
push
fisttpl
shl
lret
sub
add
push
inc
jge
pusha
push
pop
enter
mov
imul
rcll
pop
out
pushf
jp
xor
pop
ds
and
jae
cmp
cltd
xor
xchg
out
test
icebp
push
sbb
stos
test
nop
add
push
mov
cmp
dec
clc
pop
icebp
or
repz
movsl
cltd
mov
in
pushf
jns
jae
mov
mov
push
sbb
xor
adc
pop
mov
dec
idiv
mov
or
mov
lcall
xor
aad
loope
and
pusha
jmp
xor
subl
xor
pushf
lcall
mov
pop
cli
icebp
fwait
xor
mov
ds
push
jae
push
xor
test
fsubrs
imul
xchg
inc
xchg
test
ror
mov
stos
cmp
pop
xchg
ss
sti
testb
in
movsl
enter
push
xor
cmp
loop
inc
xlat
jne
jb
into
clc
lods
inc
insb
or
movsb
packsswb
int
psraw
mull
fistps
dec
sahf
lcall
in
das
aas
mov
mov
fstl
xchg
andl
aaa
and
mov
outsb
fbld
pop
adc
sahf
jl
shlb
adc
lret
lcall
dec
ljmp
mov
jb
lock
or
ljmp
dec
out
cmc
out
mov
or
dec
adc
out
add
xor
xchg
jmp
push
stos
add
pop
xchg
mov
jne
inc
add
dec
add
mov
fnstenv
out
inc
in
push
sbb
sbb
decl
mov
jp
push
in
dec
add
xor
and
leave
push
mov
mov
pusha
inc
mov
push
aam
and
sbb
fwait
subl
push
jb
mov
dec
aas
test
lcall
push
in
and
inc
enter
in
push
adc
jo
test
vmwrite
stc
test
jb
movsl
shll
xor
inc
or
xchg
ja
xor
std
and
xor
shrb
insl
stc
stos
orl
pop
dec
sbb
add
lahf
iret
aam
dec
jbe
xor
xor
addl
push
scas
jg
negl
shl
inc
aam
fbld
das
lahf
dec
sbb
sar
fcmovnb
in
shll
push
jp
mov
repz
insb
daa
push
popa
addr16
mov
pop
push
sbb
dec
aaa
aas
fwait
mov
jl
js
lock
sahf
xor
jns
pushf
mov
xor
sbb
push
xchg
xchg
mov
mov
mov
aad
cmp
lcall
ss
and
add
inc
imul
lcall
je
divl
xor
cmp
es
jp
dec
jae
shrl
stos
mov
mov
repz
mov
inc
mov
adc
frstor
sbb
sbb
shll
cmp
fcoml
lock
cmpsl
andl
repz
lods
inc
mov
dec
int
mov
inc
popf
mov
into
xchg
adc
add
and
int
clc
or
jge
xor
xchg
mov
lret
add
popf
push
pop
test
fsts
mov
sbb
sbb
xchg
in
shll
sbb
xor
mov
mov
iret
into
or
fistpll
stc
hlt
adc
sbb
int3
int3
les
sahf
stc
mov
mov
out
lods
mov
inc
leave
mov
ss
cli
mov
mov
jmp
dec
xchg
pop
std
mov
repnz
sub
cli
mov
jo
popf
xchg
fcoml
idivl
prefetch
sub
aad
ret
daa
lods
xor
mov
mov
mov
lds
decl
inc
add
sbb
add
ds
push
cmp
mov
cmpb
outsl
pop
adc
jb
add
mov
fnsave
adc
mov
jae
mov
es
jnp
pop
jmp
fisubrl
ss
lock
test
movsb
inc
aaa
in
mov
fsts
mov
jnp
dec
pop
dec
test
mov
mov
cmp
jecxz
or
pop
rcll
call
pop
add
dec
jno
xchg
add
loopne
inc
push
pop
mov
mov
lret
cmpsl
fisubl
push
push
fs
out
out
fldcw
fnsave
jmp
push
jbe
test
dec
inc
fstl
mov
jg
sub
mov
mov
out
imul
std
out
lods
cli
dec
adc
jno
div
mov
sti
jno
in
cmp
insb
cmp
inc
pushf
mov
addr16
daa
pop
add
jae
cmovs
in
loopne
push
mov
fisubrl
imul
mov
sbb
out
dec
jne
movsl
adc
mov
inc
iret
jle
pop
sub
dec
push
repz
sub
pop
scas
aas
or
inc
fidivrl
cmp
cmpsb
sarb
gs
call
push
lcall
mov
das
and
adc
pop
inc
sarb
rolb
movsl
mul
ljmp
aas
xchg
xchg
scas
test
mov
xorl
xchg
lock
int
mov
out
push
jnp
mov
hlt
loope
dec
aas
std
call
fidivl
sub
cmp
out
or
cwtl
rcl
push
xor
mov
jae
cmpsl
out
aas
jae
sub
les
sbb
sbb
cltd
cmp
mov
push
lret
in
fbld
and
jp
rclb
pop
mov
dec
xor
xor
outsb
mov
insl
les
adc
inc
jl
popf
cwtl
ljmp
jg
enter
push
add
pop
cmpsb
cmp
push
mov
push
loopne
mov
mov
daa
jg
sbb
fcmovnb
jl
test
fldenv
ljmp
std
pop
bnd
add
mov
push
ja
or
mov
sbbb
push
jns
int3
or
mov
add
inc
mov
cmp
shlb
cmp
cli
sub
data16
xorl
sub
pop
jmp
es
cmp
push
mov
cmp
mov
sub
clc
jo
pop
notl
rcrl
mov
mov
dec
jo
imul
inc
pop
pop
pusha
adc
je
mov
push
adc
jb
sahf
mov
xor
imul
push
sbb
adc
ss
in
pop
cli
cmpsl
testb
ret
je
inc
xlat
sti
lds
dec
lock
movsl
enter
mov
popa
fsubrs
jb
incl
mov
dec
xchg
icebp
jbe
pop
inc
ficoml
add
pop
sub
adc
loope
push
insb
shl
in
xchg
cmc
insl
hlt
cli
xchg
dec
dec
pop
push
pop
mov
cmp
jno
pop
data16
xchg
push
pop
jno
insl
mov
inc
push
inc
call
lcall
popa
aam
pop
adc
inc
sbb
pop
xchg
cmp
jbe
adc
mov
push
adc
dec
mov
push
popf
mov
mov
sub
push
mov
arpl
fnstenv
xchg
xor
out
cwtl
cmpsb
sub
das
repnz
push
sbb
jge
mov
pop
mov
cwtl
popf
sub
lret
sarb
mov
fimuls
xor
lahf
push
mov
ret
xor
call
rcll
sbb
xor
sti
dec
ljmp
mov
pop
sub
mov
jg
pop
or
xor
push
leave
jmp
dec
mov
lods
es
mov
movb
fnsave
or
cmp
push
jmp
adc
cs
shrl
out
enter
ljmp
dec
fs
fst
imul
fadds
das
aam
ljmp
push
mov
pop
xchg
or
fdivp
jns
fstl
mov
cmp
je
movsb
inc
mov
fildl
inc
lods
hlt
shrl
jg
or
push
cltd
mov
aam
stos
notb
shll
sub
xor
pusha
or
sahf
xor
popf
aaa
leave
cmp
inc
imul
fs
cmp
add
out
addr16
lods
jb
fsubl
loop
add
cltd
add
std
cltd
or
adc
inc
xchg
inc
xchg
inc
dec
pop
ret
inc
movsl
xchg
shl
test
mov
pop
stc
xor
int
adcl
push
pop
out
inc
mov
cmpsb
mov
push
pop
aaa
shlb
inc
mov
xor
ljmp
les
scas
enter
xchg
imul
loopne
int
aam
std
loop
gs
sbb
ret
movsl
pop
jl
ficompl
inc
rcrb
bound
lods
and
adc
pop
imulb
push
inc
push
add
int3
inc
or
xchg
fsubr
mov
push
xchg
pusha
mov
scas
sarb
xchg
push
daa
ret
lods
add
cld
jo
or
pushf
or
pop
pop
addl
ret
inc
sbb
jmp
je
xchg
and
xlat
push
clc
push
xor
bnd
idiv
jnp
jo
mov
mov
jne
mov
loopne
loopne
ja
testl
cmp
add
repnz
pushf
or
nop
testb
push
push
out
jne
pop
cmp
loope
add
pop
push
xor
shl
aaa
sub
or
es
mov
mov
cmc
adc
push
ror
rorl
insb
mov
imul
les
mov
leave
enter
fidivl
mov
inc
xchg
mov
shll
shll
xchg
adc
push
loopne
xorl
stos
jle
lods
mov
push
and
push
fstps
decl
mov
xor
pusha
call
ljmp
sub
adc
fistl
dec
mov
pop
mov
sahf
mov
data16
gs
fidivl
int3
notb
gs
aad
adcb
dec
pop
push
les
mov
pop
andl
push
cltd
insb
jae
in
jne
inc
les
mov
mov
mov
cld
sub
and
add
lret
mov
roll
loop
subl
xchg
xor
int3
pusha
nop
gs
inc
popa
mov
adc
or
ret
sub
roll
inc
cs
sub
clc
aam
pop
outsb
sub
or
leave
xchg
insl
push
repnz
andl
iret
fistl
jge
push
mov
mov
push
mov
and
subl
rol
cmc
xlat
pop
inc
call
pop
mov
jg
cmp
dec
ret
bound
popf
and
dec
or
popa
push
scas
push
jg
adc
push
data16
mov
imul
dec
xchg
lock
or
nop
pusha
sbb
pop
sbb
dec
mov
inc
sub
cld
push
jns
xlat
jp
add
fwait
mov
xor
and
imul
aam
repz
repz
sahf
fimull
xor
mov
jae
inc
cwtl
pop
push
repz
cwtl
pop
in
cld
ret
add
push
mov
mov
jmp
std
pop
and
jmp
or
insb
out
jne
jae
or
xor
inc
xchg
dec
loope
aam
aaa
sub
das
xchg
dec
inc
in
cli
loope
cmc
jle
mov
adc
and
xchg
iret
lods
loope
push
push
xlat
xchg
lds
mov
and
or
aam
inc
mov
icebp
push
inc
mov
iret
out
call
xor
mov
sub
ds
lcall
sbb
inc
cmp
mov
movsl
cmp
nop
es
sbb
out
adc
sbb
cld
push
lahf
cmp
scas
cmp
leave
dec
movsb
inc
inc
out
and
pop
pushf
dec
and
xor
inc
mov
lahf
andb
xchg
stos
loope
mov
push
fld
dec
int3
mov
into
mov
dec
hlt
push
mov
out
sbb
repnz
scas
pushf
push
push
test
fyl2x
repnz
sub
mov
sti
push
stos
shll
neg
clc
adc
dec
mov
adc
notl
mov
shrl
inc
lahf
sub
call
repz
dec
jle
cmp
inc
stc
inc
loope
xlat
mov
fistpll
jo
rclb
mov
js
repz
lea
mov
push
leave
sbb
daa
xchg
rolb
in
push
cmp
add
lahf
sahf
mov
rcll
stos
push
in
lods
fsub
addr16
inc
test
test
lock
jecxz
xlat
cwtl
mov
fs
mov
stos
mov
les
mov
sbb
fistps
jecxz
and
and
xchg
or
dec
jmp
push
mov
movsl
out
loop
enter
rolb
iret
push
sbb
add
xchg
mov
push
pop
ret
dec
xor
xor
jecxz
loope
fildll
dec
dec
mov
mov
push
test
test
and
cmc
aaa
jns
roll
mov
and
mov
jo
sbb
dec
xchg
adc
lcall
dec
rcrl
daa
cmp
mov
mov
jmp
fcompl
in
mov
mov
sbb
ret
fildl
xor
int3
ljmp
pop
stc
inc
jmp
insb
jno
and
fwait
xor
mov
js
mov
les
cmp
sub
fcmove
xchg
stos
mov
pusha
dec
nop
inc
mov
pop
jns
and
xlat
loop
pop
incb
hlt
das
sbb
mov
divb
test
mov
adc
mov
or
cmp
daa
gs
pop
mov
fildl
sub
dec
int
insl
mov
xor
mov
pop
mov
and
popf
sbb
jbe
jp
dec
mov
jo
js
xchg
pop
push
iret
lcall
outsb
push
mov
in
out
xchg
xchg
enter
inc
repz
in
cmc
lods
or
out
lret
sub
ret
fstl
popa
mov
sbb
shlb
aaa
or
call
les
pop
std
pop
add
add
mov
dec
inc
add
sahf
xchg
loope
sbb
push
test
test
inc
adc
scas
test
or
das
mov
mov
mov
inc
ficomps
xor
mov
add
outsl
push
add
push
adc
sub
mov
dec
js
inc
inc
mov
mov
cmp
addb
aad
in
adc
subb
push
cmp
add
push
pusha
mov
lret
xorl
jle
rclb
mov
shl
pop
lahf
lret
out
fdiv
xchg
xchg
jge
es
jb
or
inc
cmp
lock
scas
imul
pusha
insb
outsl
sub
sti
subb
rol
mov
push
push
cmp
dec
xchg
iret
cmp
das
testl
hlt
mov
icebp
or
push
dec
fimull
and
or
sub
jp
or
jmp
or
mov
clc
in
aas
jle
stos
pop
mov
scas
mov
mov
or
ret
les
dec
dec
inc
add
adc
push
add
adc
dec
ljmp
dec
or
sub
add
divl
test
js
lahf
jmp
pop
lahf
aad
and
jno
push
in
hlt
imul
ljmp
adcb
push
jb
loope
push
push
and
jae
hlt
loope
jecxz
dec
mov
out
and
and
add
pop
jle
insb
out
stos
xchg
repz
test
scas
sub
mov
imul
and
xlat
pop
fldl
sbb
mov
fadds
insl
loopne
lcall
lods
in
pop
leave
call
cwtl
enter
pop
xchg
pop
mov
fisubrs
imul
mov
xchg
lock
add
jl
cltd
jp
pop
mov
mov
mov
mov
xor
subb
add
xchg
bnd
sbb
loope
inc
adc
xchg
inc
cmc
lret
shr
push
lcall
sbb
shll
lods
stos
sbb
jbe
cli
inc
das
adc
sbb
fidivs
xor
int
xchg
jecxz
adc
popf
imul
mov
mov
pop
aas
pop
mov
mov
mov
dec
lret
sub
cli
mov
movsl
push
add
push
cltd
cmp
sub
mov
sbbl
call
push
movsl
stc
pop
loop
jno
or
sarl
push
loope
push
rolb
mov
ret
xor
repnz
lods
ds
aas
and
adc
sbb
push
and
ret
rcll
rclb
jno
and
dec
push
jg
fists
lods
add
pop
shr
loop
jns
sti
inc
sbb
xchg
pop
rolb
dec
ficomps
pop
into
add
fdivs
icebp
sbb
add
cwtl
dec
jno
xchg
dec
jle
pop
subb
xor
loop
repnz
add
fsub
and
pushf
cmp
pop
inc
cltd
lods
push
movsl
aad
xor
cmpsl
xchg
xor
mov
push
xchg
in
addr16
hlt
imul
lods
lods
aad
out
pop
sti
jg
mov
lahf
aaa
dec
sbbb
push
test
dec
jae
mov
cmpl
push
ret
xchg
or
xor
mov
sbb
inc
mov
push
mov
inc
inc
int
movsb
testb
xor
dec
pop
mov
stc
nop
jmp
sbb
xor
xchg
nop
addr16
pop
jl
int
pop
mov
mov
out
imul
lret
stc
call
push
xchg
js
adc
flds
cmp
dec
push
dec
mov
jb
int3
mov
inc
mov
push
int
lret
xchg
jl
fiaddl
mov
dec
lret
mov
divb
push
dec
sbb
or
inc
popf
ss
jnp
xchg
inc
push
inc
mov
cli
and
add
cmc
dec
gs
sub
pushw
out
pop
hlt
icebp
icebp
sbbl
pop
sub
jns
add
fwait
pushf
xor
pop
cmp
sub
sbb
mov
mov
pop
sbb
xor
ss
into
adc
outsl
inc
adc
mov
icebp
or
popf
pop
inc
pop
lahf
int
push
xor
mov
lods
lret
push
mov
clc
dec
test
mov
pop
idivl
push
push
scas
pop
cs
cmpsb
leave
jb
ljmp
pusha
sub
xchg
es
les
jmp
and
jp
test
cmp
sub
and
jmp
out
je
or
adc
pop
in
cli
push
aaa
test
hlt
xchg
mov
imul
push
int3
push
sub
sbb
mov
pop
sub
or
push
pop
popf
sbb
outsb
and
and
xchg
test
outsb
sahf
imul
mov
addr16
or
xchg
cltd
cmc
jge
or
add
sub
pop
sub
cmpb
test
mov
push
lds
pusha
push
cli
xor
dec
xor
jb
ss
and
lds
sbb
test
es
add
sub
incl
test
dec
addr16
enter
adc
push
dec
data16
jp
mov
pop
dec
cld
cmp
sub
sbb
je
pop
cmc
lret
insl
push
xchg
fisubl
fisubrs
test
and
push
push
mov
mov
xchg
mov
push
in
pop
inc
push
or
cmpsb
movsl
arpl
test
mov
lods
push
call
sub
inc
loop
icebp
pop
sbb
jo
rclb
dec
pop
or
pushf
test
test
iret
int3
loop
xor
clc
les
mov
mov
mov
addr16
inc
add
adc
ds
cmp
push
jne
scas
jge
fbstp
stos
dec
lock
stc
cmp
aas
das
mov
dec
hlt
mov
mov
lds
cli
inc
lock
push
xor
sbb
cmp
jl
push
clc
mov
cs
xchg
test
pop
sbb
repnz
idivb
sub
jno
xchg
movsb
cs
cmp
xor
cli
push
push
pop
xchg
or
xchg
clc
sbb
mov
jne
jp
mov
and
call
mov
cltd
addb
ja
dec
mov
loop
mov
cltd
loopne
dec
and
or
and
jg
sbb
scas
hlt
cmp
push
cli
push
stos
out
dec
sub
mov
cwtl
pop
rorb
mov
sarb
push
stos
ret
inc
xchg
xchg
dec
push
mov
shlb
je
ja
enter
xchg
xchg
call
repz
pushf
push
sub
hlt
cmp
in
dec
cmp
pop
repz
ja
mov
xor
test
and
cmp
sbb
or
and
sbb
sbb
repnz
rcrb
clc
mov
aad
inc
rol
fcoml
aad
jl
jb
loop
mov
pop
adc
lock
cmp
and
loopne
push
in
push
mov
xorl
test
in
cld
call
stc
push
lds
mov
xchg
mov
popa
daa
mov
adc
call
xor
dec
insl
addr16
aas
and
inc
sbb
dec
lret
xchg
inc
and
test
jbe
dec
cmpsl
pop
movsl
inc
xchg
mov
bound
push
dec
aad
pop
pop
fsubp
out
fwait
rorl
cld
in
jge
bnd
inc
lret
ret
fadds
jmp
stc
cmp
mov
push
and
pop
push
stos
orb
and
das
loope
jg
and
inc
outsl
rcrl
mov
stc
adcb
add
jns
or
xchg
sahf
int3
dec
test
aaa
and
fwait
roll
imul
pusha
aad
adc
and
dec
inc
or
inc
cmc
stc
push
sti
inc
popf
into
popa
into
push
add
mov
orb
outsl
mov
xchg
out
cmp
jb
dec
jns
sub
js
pop
and
sub
jl
popa
and
xor
repz
inc
or
mov
stos
divl
and
ret
and
addl
or
lock
adcb
incl
xor
mov
loop
inc
or
daa
xchg
aam
nop
push
mov
test
mov
clc
xchg
shlb
sbb
int
lock
mov
inc
js
icebp
rorb
jmp
jae
aad
jae
mov
xorb
pop
or
insb
insb
out
mov
ds
lods
mov
ljmp
repz
jl
cmpsb
jg
imul
adc
fcomps
fdivl
push
push
push
enter
mov
shrb
clc
fdivr
and
dec
push
scas
or
jns
push
bound
insl
js
mov
add
add
or
ja
loopne
xchg
pop
icebp
mov
iret
cmp
push
cld
sub
adc
mov
xor
inc
pop
das
sub
lods
push
and
cwtl
rolb
jge
fisubrl
sbb
dec
mov
cld
xchg
outsb
cmc
sbb
lods
out
jp
or
cmp
inc
sub
loope
sarb
stos
sub
outsl
fwait
in
xchg
outsb
bound
test
xchg
insb
jnp
sbb
lret
dec
imul
xchg
mov
xchg
and
loop
lea
mov
pop
add
int3
ja
mov
mov
sub
mov
push
sbb
inc
add
push
mov
hlt
enter
out
in
inc
add
ficompl
inc
aaa
pop
push
sub
data16
sub
jo
mov
dec
inc
pop
xchg
mov
pop
outsb
and
aad
or
out
sub
jae
inc
popa
out
xor
and
mov
and
mulb
gs
les
fisubrl
xor
cmc
sub
into
test
ffree
adc
pop
mov
pop
incl
add
xchg
movsl
negb
pop
sub
out
cmp
sub
stos
pop
inc
push
sahf
ds
xor
data16
pop
jae
xchg
or
dec
inc
xor
jo
push
sub
mov
dec
mov
popa
xchg
push
insl
in
inc
dec
aaa
sbb
mov
push
loope
jno
mov
fcoml
shr
mov
sahf
xchg
shll
ret
push
mov
andb
mov
in
pop
xlat
mov
testb
aam
test
inc
or
jbe
xorb
addb
sbb
shl
push
insb
call
ret
push
movsl
mov
test
mov
mov
cmpsl
fstpl
add
dec
inc
clc
sub
xor
scas
ja
mov
gs
mov
lcall
mov
mov
ja
xchg
popa
xchg
inc
insl
cmp
sub
or
rsqrtps
shlb
pop
push
jp
pushf
mov
or
test
pop
add
test
das
test
cmp
dec
pushf
xchg
test
in
inc
js
jmp
adc
addr16
mov
lcall
xlat
jle
lds
stc
loop
and
adc
push
das
mov
out
in
jnp
mov
pushf
test
out
arpl
fildl
aaa
outsb
jo
add
ds
imul
or
aad
mov
push
adc
lcall
lret
data16
sub
into
loop
and
pop
bound
sbb
psubw
or
mov
or
cmp
xlat
or
into
lcall
cmp
add
call
jo
push
shrl
add
loope
mov
into
fdivs
arpl
push
xchg
dec
xlat
aas
add
jmp
add
mov
negb
inc
repnz
ret
fildll
xlat
inc
pop
popf
stos
lret
or
inc
sbb
jae
mov
sub
mov
cld
int
jne
mov
fcmovnb
mov
clc
popf
cmpsb
add
cld
xchg
push
push
xchg
dec
mov
clc
std
xlat
or
pop
daa
sub
sub
adc
xor
pop
cmp
pop
sub
adc
jno
fisttps
fldl
clc
scas
inc
xchg
sub
std
add
pop
es
leave
and
idivb
push
shll
mov
pop
loope
inc
cmpsl
jmp
int3
jnp
add
xor
mov
insb
xchg
repz
adc
jmp
popa
aaa
cli
mov
mov
or
sub
loop
hlt
mov
fcompl
push
sti
push
push
xchg
pop
pop
pusha
sub
gs
jae
mov
sbb
xor
int3
cmpsb
scas
rorb
mul
fsubrl
int3
cmpsb
icebp
xor
mov
shlb
mov
adc
xor
cmpsb
pop
fsubs
shlb
testl
je
pop
xchg
sarb
aam
dec
dec
inc
outsb
sahf
mov
dec
aam
dec
sub
sub
xor
fldcw
or
int3
ljmp
rcrb
or
sbb
icebp
dec
out
mov
push
fsubrl
pop
add
outsb
mov
iret
pop
or
mov
fwait
in
cmpsl
popa
xchg
adc
and
data16
pop
jne
outsb
lods
or
mov
jbe
cmpsb
xchg
push
pop
mov
mov
imull
adc
clc
test
cld
jle
pop
xchg
arpl
or
nop
push
das
lods
mov
xchg
xchg
pop
insb
subb
stc
insb
test
push
pop
pop
fstl
scas
imul
push
mov
fdivrl
and
mov
mov
jecxz
sbbl
rcl
scas
jno
fisubs
cmp
adc
jns
xor
movsb
jg
dec
js
test
or
je
stc
loopne
and
in
in
faddl
hlt
sbb
outsl
mov
gs
and
std
dec
xchg
arpl
js
adc
enter
push
pop
ss
insl
loopne
dec
jecxz
outsl
repnz
outsb
pusha
mov
push
arpl
dec
int
push
xchg
call
inc
outsb
pop
dec
jb
and
pop
movsb
sub
inc
push
shll
test
test
cmp
insb
xchg
hlt
stos
xor
iret
fwait
ret
inc
jnp
adc
mov
test
sahf
mov
jns
sub
lahf
dec
inc
pop
cmpsl
daa
sub
xchg
pop
mov
xchg
xchg
ffree
clc
lret
icebp
sti
xchg
mov
cwtl
mov
adc
adc
imul
clc
xchg
outsl
adc
stc
roll
jae
mov
mov
jnp
out
and
mov
push
and
mov
lret
rcrl
add
mov
push
and
and
pop
addb
call
fwait
gs
jbe
aam
popa
push
dec
sub
ljmp
jecxz
mov
fcomp
sbbb
xor
leave
in
test
inc
xchg
sar
adc
xchg
push
adc
insl
jl
aad
mul
test
add
mov
es
and
mov
add
mov
or
arpl
in
jecxz
aas
cli
int
lret
in
negb
xchg
dec
jno
lock
ljmp
movsl
add
sub
cld
cmp
ljmp
lret
adc
out
das
stos
stc
dec
popa
xchg
scas
cmc
adc
mov
add
mov
into
shl
imul
xor
lods
sbb
aas
notb
sub
aad
movd
stos
lcall
adc
xchg
rol
test
loope
cmc
fcoml
lods
xchg
pop
ljmp
call
add
push
ss
lock
cmp
sbbb
push
mov
jmp
daa
sbb
in
neg
adc
jo
popf
jns
aam
ja
fwait
stc
das
dec
xchg
inc
xchg
or
addr16
pop
stos
les
in
aad
adc
push
sub
pop
inc
pop
add
dec
aas
shr
movsl
cmpsb
lret
cmpsb
int
shl
pop
cmc
mov
and
push
jge
adc
clc
lds
fs
push
cs
leave
adc
jne
xor
imul
mov
mov
push
sarl
pusha
dec
push
jl
add
loopne
enter
mov
int3
decl
push
push
out
adc
push
xchg
add
cmp
std
cli
icebp
imul
inc
jecxz
rolb
inc
scas
mov
dec
mov
scas
cmp
mov
imull
ss
cmc
pop
sub
mov
add
mov
sub
mov
jl
lock
xlat
mov
dec
dec
test
mov
add
es
sbb
cmc
call
push
ja
sub
mov
cmp
mov
int
add
push
sahf
jge
add
pop
bound
push
and
jge
outsl
aas
int
xchg
add
data16
outsl
pop
cmpsl
mov
cli
xor
add
insl
or
jmp
imulb
cmp
out
push
push
add
leave
pop
gs
inc
stos
roll
lds
pop
jmp
mov
ja
push
jb
in
jmp
rclb
and
push
and
mov
scas
pop
xchg
mov
mov
sahf
mov
or
mov
mov
out
xchg
dec
ret
pop
in
je
ret
xor
enter
xchg
pop
enter
xchg
stos
dec
dec
jp
sub
dec
dec
es
ss
outsl
mov
and
adcl
mov
sub
fs
dec
cmp
hlt
pop
push
jb
stos
xchg
imul
jp
mov
sbb
dec
es
pop
out
push
and
pop
fistpll
pop
pop
fwait
jg
and
ret
mov
or
loopne
pop
jmp
jno
xor
adc
mov
xchg
imul
jl
int3
scas
inc
arpl
mov
or
sbb
fidivs
pop
out
inc
jbe
es
and
push
lret
xor
mov
mov
cmp
xor
daa
cld
test
inc
addl
or
into
les
adc
ret
pop
xchg
xor
aaa
sub
jnp
mov
push
xor
gs
movhlps
mov
mov
out
xor
sti
sbb
movsl
mov
aam
jl
out
gs
out
mov
mov
fildll
adc
or
jno
cmp
fistpl
stos
es
arpl
lahf
add
aam
sarl
mov
sbb
cwtl
fsubl
xchg
addr16
mov
mov
jle
out
icebp
cmp
inc
ss
push
lcall
jo
and
push
cmp
bound
imulb
rcrb
mov
xchg
int3
fwait
das
out
sub
mul
movsl
pop
loope
shlb
xchg
aaa
daa
cmp
nop
inc
imul
sbb
xchg
inc
pusha
aaa
call
movsl
jo
mov
fmuls
sahf
push
sbb
pop
mov
or
clc
pop
fistpll
imul
aaa
insl
jo
lock
pop
inc
mov
hlt
push
test
mov
mov
das
cwtl
cmpsb
jge
dec
jnp
mov
sahf
fcom
xchg
addr16
mov
bound
shrb
sarl
cld
xor
shl
or
xlat
addb
sbbb
xchg
cmp
loope
imul
adc
lock
lcall
lcall
mov
cmpsb
dec
cmp
or
setg
out
inc
es
mov
fs
inc
les
fiaddl
aaa
insl
adc
or
jecxz
mov
adc
xor
call
and
push
pop
adcl
inc
rcrb
pop
pop
mov
push
adc
in
aas
cld
or
and
jae
dec
int3
pusha
cmp
sti
dec
fdivrl
jae
movlps
daa
mov
aaa
divb
mov
mov
cmp
mov
popf
adc
andl
inc
jne
sbb
hlt
lods
sbb
mov
and
pushf
inc
xlat
mov
into
daa
jle
mov
ss
cwtd
lods
pop
sbbl
add
addl
bnd
sbb
rorb
movsb
push
pop
in
sbb
inc
mov
jae
jae
pop
xor
cmp
divl
xchg
mov
dec
movsb
and
cmpsb
adc
ror
dec
ret
sbb
pusha
pop
inc
popa
sub
xor
jb
repz
xchg
dec
and
pop
dec
xor
dec
jecxz
ret
jbe
push
jl
bound
mov
push
fidivs
cs
sbb
insl
inc
rcl
das
lods
imul
lock
mov
mov
movsl
int
popa
mov
mov
repz
stc
xchg
pop
das
je
xchg
adc
cmp
flds
jecxz
lock
mov
xor
pusha
das
jge
test
xchg
mov
ja
addb
xchg
or
cs
frstor
lret
insb
dec
pushf
scas
inc
in
sarl
and
cmp
jl
sahf
shlb
sub
sbb
fisttpll
les
and
cwtl
pop
dec
add
mov
cmp
or
jns
adc
and
sti
bound
stos
add
cltd
cmc
or
test
scas
test
cmc
fucomi
pop
outsb
mov
mov
js
and
mov
inc
xchg
or
pop
push
loop
mov
divl
push
subl
pop
ljmp
cmp
and
sti
dec
pusha
xchg
sub
cld
push
imulb
stos
fnstenv
push
xor
roll
shrb
xchg
adc
inc
insl
or
push
adc
jo
lods
in
inc
xchg
in
xchg
inc
cli
xchg
dec
movsl
movsl
loopne
test
dec
aad
and
ret
test
jl
cmp
jnp
sub
dec
and
pop
xchg
xor
shll
jne
jg
jne
jge
movsb
repz
in
cli
ljmp
fstl
fidivl
insl
cmp
adc
pop
mov
test
aas
pop
pop
adc
xchg
xchg
repz
inc
inc
jno
sub
ja
hlt
sbb
test
pusha
inc
mov
inc
enter
dec
cmpsb
jne
aaa
mov
adc
clc
out
push
add
jbe
add
inc
cmp
movsb
mov
int3
fstpt
adc
mov
xchg
fwait
cmp
clc
inc
addr16
test
push
movsb
inc
mov
or
std
aam
mov
ror
popf
dec
sbb
ret
fs
inc
pop
repz
insb
jp
cli
int
mov
mov
cmpsb
aas
pop
mov
jnp
mov
mov
pop
cmp
stos
gs
add
iret
das
int
jbe
out
rorb
xor
je
sub
icebp
inc
stc
fchs
pop
or
push
cs
jb
cltd
mov
out
cmpsl
scas
daa
ss
or
jo
sbb
aaa
ret
test
fsubrs
jno
dec
rcr
push
or
mov
sub
mov
xor
scas
mov
mov
repz
lods
daa
es
in
jp
pop
dec
sbb
popf
mov
repz
cmp
inc
mul
stos
mov
int
xchg
cmpsb
gs
and
adc
sarb
mov
sti
or
pop
push
aam
pusha
fidivrl
xchg
jp
jecxz
xchg
test
adc
dec
jl
inc
xor
mov
movsl
js
mov
fists
lods
pop
aas
loop
cmpl
test
pop
push
bound
add
sbb
adc
xchg
fsubr
jo
pushf
leave
sbb
lock
xchg
ja
or
pop
and
mov
out
sbb
adc
dec
stos
aam
dec
das
mov
lret
or
push
lahf
arpl
in
repnz
and
xor
or
and
xor
sub
pop
pusha
cli
addr16
pop
dec
mov
push
sub
rclb
push
adc
inc
mov
cmp
enter
ss
movsb
add
incb
push
push
push
lods
cld
test
cmp
inc
pop
pusha
inc
cmp
andb
mov
or
mov
or
fwait
iret
sub
call
addr16
jnp
movsl
mov
inc
sbb
mov
lods
mov
xchg
pop
mov
cs
repz
cmp
lds
sbb
sbb
xor
insl
cmpsl
cmp
push
dec
jmp
ss
enter
push
js
adc
or
adc
mov
outsb
fscale
jmp
pop
out
ljmp
xor
out
cltd
iret
mov
ss
rcrb
xchg
cmp
xlat
mov
hlt
push
sbb
repz
xlat
cmp
imul
cmp
imul
push
out
les
les
lds
fs
dec
imul
je
push
adc
lcall
sub
sub
add
adc
std
push
insb
in
mov
xor
push
push
fs
popa
push
xor
lds
dec
ficoms
in
cmp
dec
push
cmc
mov
stos
and
scas
pusha
xor
xor
loope
add
xor
sbb
gs
or
out
shll
adc
outsl
in
lret
lret
mov
add
xchg
cli
test
push
cltd
inc
push
cmp
enter
cs
pop
inc
mov
imul
xchg
repnz
loopne
mov
mov
dec
dec
and
xchg
inc
and
jecxz
xor
cmp
sub
dec
mov
cmp
dec
pop
dec
movsb
jg
stos
jecxz
jbe
popf
outsl
js
xchg
pop
sub
adc
jge
push
outsb
stos
testl
xlat
fwait
jge
xchg
jp
sbb
js
ret
mov
mov
cmp
fildll
cli
push
js
sub
add
mov
aaa
cmp
movsl
loop
dec
ret
cmp
imul
push
cmp
cmp
jne
rorb
add
cmc
cmp
xor
inc
and
inc
je
or
jae
xor
out
loop
fsubr
adc
mov
lcall
mov
push
add
push
sub
fsubrl
shrl
xor
inc
mov
repnz
ret
fistpl
lret
adc
cmp
daa
sub
mov
push
sti
int3
test
ja
sbb
mov
outsl
sub
cmpsl
stc
lret
mov
jo
mov
push
repz
jno
cltd
dec
movsb
out
push
lds
cmpsl
dec
push
mov
imul
scas
pop
hlt
push
adc
sbb
add
mov
incb
jecxz
out
dec
mov
and
adcl
sbb
fdivl
lret
cmc
xchg
add
ljmp
cmp
lods
sbb
lock
movsb
mov
aas
sbb
nop
cmp
insb
jo
and
lcall
daa
scas
stc
adc
fcompl
popf
lock
addb
pop
cmpsb
cmp
imul
adc
loopne
dec
jmp
dec
cwtl
rol
mov
adc
pusha
dec
test
dec
scas
scas
sub
cld
push
push
or
mov
nop
cmp
dec
push
lock
dec
outsl
pop
iret
lahf
xchg
test
add
pop
jge
or
xchg
aad
loopne
jb
sbb
xchg
lret
or
stos
clc
jbe
in
insl
xor
push
aaa
clc
addr16
add
pop
jbe
sbb
xor
xor
dec
pop
rcll
outsl
pop
loop
pop
outsl
push
int3
test
popf
add
jl
lahf
sbb
add
mov
xor
gs
mov
arpl
sub
mov
shll
stos
add
ja
add
sub
xchg
sbb
ret
inc
jns
jg
lds
dec
lahf
inc
negl
mov
popf
int
push
add
jne
data16
adc
cwtl
fcomps
shrl
jb
inc
sti
jae
loope
icebp
add
xchg
clc
mov
push
das
gs
inc
jge
enter
ret
cli
mov
add
inc
pop
scas
repnz
pop
sub
bound
aam
sub
sbbl
fisttpll
loope
dec
dec
outsb
mov
cmp
jge
push
ds
inc
inc
pushf
popa
mov
mov
xor
add
lahf
js
dec
sub
mov
inc
lock
sbbb
xor
mov
je
inc
push
adc
inc
fldl
mov
mov
or
fcmovnbe
jle
cmp
into
jo
fidivs
mov
pop
sub
lds
push
inc
data16
cli
jg
push
mov
ret
inc
mov
pusha
insb
neg
fadds
or
clc
and
arpl
xchg
jg
mov
push
aad
mulps
scas
lret
push
aaa
jmp
inc
push
xorb
sar
lock
ret
lret
sub
aam
sbb
jbe
mov
mov
xlat
mov
lret
cmpsl
cmp
cmp
adc
pusha
add
pusha
mov
out
cmpsl
loopne
adc
push
mov
cld
rcll
and
push
xchg
out
in
call
and
jge
push
mov
hlt
and
mov
cmpsl
das
insl
fwait
loope
insb
repnz
xor
test
aaa
lds
push
pushf
pop
xor
clc
fdivrs
repz
adc
push
jle
hlt
adcl
into
push
ffreep
in
jecxz
adc
loop
dec
int3
add
cld
mov
push
xor
mov
pop
inc
ds
gs
jge
push
lret
leave
push
adc
jb
stc
rep
push
sub
mov
leave
xor
sti
arpl
imull
dec
std
push
subl
fldenv
or
push
xchg
push
fstps
jl
mov
jp
into
mov
fiadds
dec
lret
arpl
jne
and
xchg
stos
dec
or
es
sbb
jp
stc
sbb
cs
aad
mov
subb
xchg
stos
neg
pop
fidivrl
insb
das
xor
pop
out
loopne
adc
or
sbb
lahf
mov
adc
push
leave
xchg
and
insb
call
insb
dec
jns
fwait
xor
repz
mul
aam
iret
cmp
in
or
ja
mov
mov
xchg
push
addr16
fldenv
inc
ret
cmp
aad
fmull
popf
cmp
inc
or
mov
ljmp
inc
sar
dec
push
mov
addl
adc
and
xchg
sbb
mov
nop
sahf
in
leave
xchg
mov
jns
test
inc
ret
jge
sub
xchg
out
mov
aad
es
pusha
cmpsl
mov
decb
xchg
ret
or
dec
hlt
ja
inc
stos
dec
jbe
lcall
xor
movsb
cmp
jmp
jno
cmp
or
push
outsb
dec
jge
mov
and
movsl
mov
add
rorb
or
sub
les
xchg
iret
in
push
inc
enter
and
testl
pop
aas
adc
xchg
adc
jge
sbb
inc
lds
mov
mov
or
ret
and
inc
inc
jbe
xor
bound
mov
mov
pop
xchg
sarl
push
push
or
sub
adc
pop
sbb
jge
aam
pextrw
lea
das
mov
std
inc
icebp
test
xor
sbb
mov
xchg
ss
pop
incl
je
or
sbb
jnp
sbb
inc
cmp
dec
push
pushf
mov
inc
std
pushf
jle
push
xor
jne
pusha
aaa
stos
add
ss
dec
sarl
mov
fdivl
neg
jno
addr16
or
sub
mov
adc
xor
or
sub
test
loop
add
inc
mov
fs
jle
lods
aam
in
outsl
out
popa
jb
pop
xor
and
mov
add
xchg
mov
add
int3
add
mov
lods
inc
pop
and
fmul
fwait
cwtl
hlt
lret
xor
sub
in
xor
push
pop
shrl
pop
cltd
lock
sbb
mov
mov
in
cmp
test
push
out
push
xchg
in
mov
movsb
add
cmc
push
jge
add
es
jl
pop
out
in
dec
sub
jmp
ljmp
dec
sti
xchg
lds
push
pop
stos
ss
lea
das
call
dec
xchg
xor
loope
cmp
cpuid
sahf
mov
std
mov
lret
jae
stc
ss
sbb
loopne
sub
fimuls
movsb
shl
popa
in
ret
fs
push
cmp
gs
cli
movsl
fscale
stc
leave
xchg
fcmove
add
daa
sbb
cltd
bound
mov
dec
jp
outsb
mov
ret
xchg
push
test
iret
andb
ljmp
adc
mov
fdivrl
in
aas
mov
xchg
pop
sub
jecxz
pop
dec
adc
clc
push
arpl
dec
pop
jmp
push
pop
sub
icebp
sub
rcrb
ret
lcall
dec
test
pusha
ficomps
xchg
pop
aam
mov
and
hlt
xchg
in
jo
test
pop
jmp
test
sub
jg
in
push
pop
push
stos
decl
xor
scas
mov
or
in
stos
jp
xor
addr16
stos
and
or
rcll
cmpb
movsb
popl
push
pop
loope
lods
fucomip
iret
lret
fisubrs
mov
daa
xor
xor
stos
cmp
in
mov
mov
fdivrs
cs
cmp
pop
in
sahf
mov
lcall
or
mov
cs
lcall
sbb
xchg
and
aas
adc
cmp
into
ss
cmp
lock
repnz
xchg
fdivl
cmp
adc
inc
popf
push
ja
fiaddl
push
popa
aas
mov
icebp
dec
xchg
sti
test
stc
loop
arpl
rcl
mov
mov
inc
test
xchg
sbb
or
push
or
mov
dec
mov
xor
jp
pop
shr
pop
test
add
loope,pt
lods
or
movsl
add
mulb
in
adc
sbbb
sbb
adc
clc
call
ds
movsb
xchg
shl
push
fmuls
shrl
es
xchg
mov
fldcw
lds
mov
push
mov
xor
inc
xor
outsb
xor
and
push
ja
scas
sbb
into
popa
scas
cltd
or
ficomps
pop
shlb
pop
push
cmpsb
jo
scas
fs
jbe
test
fcoml
aad
icebp
cmp
in
call
in
fdivrl
insb
dec
sub
jae
adc
xchg
into
es
fimuls
loopne
fcompl
cltd
xchg
mov
sti
imul
movsb
pop
xchg
and
pop
or
sbb
jne
shr
ds
int
dec
nop
sbb
xor
inc
and
and
stc
jb
xchg
sti
pop
pop
ja
adc
mov
clc
leave
les
adc
mov
cmpsl
cli
pop
xlat
aam
cwtl
ret
cmp
mov
inc
push
mov
mov
in
push
shll
adc
sub
inc
mov
sub
lret
aas
in
jo
push
popf
test
jo
adc
movsb
or
out
pop
mov
sahf
rolb
push
push
cwtl
pop
int3
loop
test
mov
ret
push
bound
pushf
lods
clc
sbb
aad
gs
pop
jne
in
or
or
orl
repz
cmp
sbbb
repnz
cli
push
add
ret
aam
pop
mov
sti
add
xchg
fnstcw
movsl
daa
and
dec
divb
repnz
jg
add
rorb
dec
sbb
cld
pop
cmp
cmp
jne
adc
jne
push
push
pop
xor
scas
aaa
aas
popf
mov
xchg
cmpsb
xchg
daa
nop
xlat
inc
pop
add
sub
sbb
and
inc
adc
cwtl
aam
mov
out
movsl
scas
pop
xlat
cmpsb
or
addr16
add
add
sahf
test
pop
adc
pop
mov
lods
ret
jmp
dec
into
ret
jbe
jl
daa
jnp
movsb
cltd
adc
mov
jnp
cwtl
inc
xchg
ja
rol
fstps
pop
dec
arpl
bound
mov
push
adc
fwait
xchg
aad
stos
scas
dec
insl
stos
sbbb
push
sub
cmp
xchg
dec
sbb
ds
rclb
ret
pop
adc
lret
xchg
cwtl
mov
inc
in
lcall
jmp
ds
and
inc
jns
mov
hlt
and
jp
and
xlat
cld
fisttps
xchg
sbb
xchg
adc
adc
xorb
push
imul
inc
scas
and
cmp
out
stos
mov
ljmp
xacquire
xchg
and
es
aam
mov
pusha
std
mov
jp
mov
mov
push
aam
repnz
dec
mov
adc
push
xorl
xchg
push
pop
xchg
fildl
xchg
xor
stos
mov
and
inc
and
incl
inc
mov
lret
das
gs
and
aaa
push
fisttps
pop
inc
xor
sti
push
lods
adc
pop
sbb
or
jne
loope
ret
jnp
mov
lds
out
pop
bound
iret
dec
jp
ljmp
push
adc
int
aad
rclb
pop
jp
cmp
pop
and
push
rcll
add
pushw
roll
shlb
or
cld
test
mov
xchg
imul
sti
xor
notl
ss
pop
cltd
jg
push
int
push
push
sub
xchg
ret
cmc
mov
sbb
fnsetpm(287
inc
out
pop
mov
fucomip
in
xchg
or
and
xor
push
and
jns
push
aas
fcom
mov
adc
out
cmp
add
insb
push
fwait
jle
inc
cmp
dec
mov
pop
pop
push
ljmp
dec
shl
xchg
rorb
aas
out
aas
and
call
rcrl
xchg
pop
and
scas
push
jae
push
sbb
cmovns
xor
pop
cmpsl
cmc
movsl
aam
fcmovne
andb
mov
popf
xor
mov
daa
or
mov
xchg
mov
insl
out
sahf
mov
cltd
rcl
stos
jne
mov
jnp
add
fsubrl
xor
cmp
xor
inc
dec
jo
cmp
enter
jnp
loop
shlb
mov
jno
insl
and
stos
xor
mov
outsb
adc
dec
aas
aam
jmp
imul
and
jns
adc
sbb
or
push
int
aad
fidivs
jle
adc
sbbb
cmpsb
fwait
lods
out
adc
gs
fcompl
jg
out
xchg
mov
or
lods
addr16
stos
pop
cmc
mov
ss
push
fnsave
xor
aas
gs
pusha
push
jae
jmp
add
mov
jge
pop
into
push
jmp
mov
pop
enter
inc
stos
pop
inc
mov
out
mov
loope
jmp
sbb
loopne
mov
imulb
xlat
leave
pop
mov
pop
and
in
call
cli
movsl
cmp
cwtl
add
les
adc
out
jl
add
pavgb
pop
mov
fucomip
fadds
pop
mov
lock
out
aas
sub
loope
fimull
clc
add
add
dec
das
push
add
push
test
jbe
cmp
cmpb
lods
or
iret
dec
push
sub
jns
in
push
cmpsl
cmp
fwait
inc
loopne
sbb
pop
lcall
icebp
xor
clc
lret
into
loopne
into
dec
stos
jl
pop
aas
adc
pop
inc
into
inc
arpl
jne
lods
xchg
ljmp
outsb
test
in
decl
rep
incl
fldt
inc
adc
inc
jbe
lea
testb
adc
test
fmul
inc
and
cmp
loope
mov
cwtl
mov
insl
das
dec
push
add
fs
leave
flds
push
jae
sbb
pop
ljmp
xor
sbb
mov
sbb
mov
pop
dec
sub
cld
adc
ret
add
popa
andb
sub
add
test
jnp
adc
lods
scas
sub
add
loope
pop
gs
popf
lods
fstpl
imul
movsb
adc
mov
stos
cmpsb
mov
inc
ja
movsb
push
movsb
xchg
fprem1
pop
es
iret
cmp
cmc
sahf
adc
pop
pop
mov
mov
rcr
or
add
and
xorb
jno
mov
push
push
adc
jno
push
cs
inc
cld
or
xor
jmp
cmp
sub
js
xchg
xchg
enter
inc
aad
adc
repz
out
mov
or
inc
scas
xchg
mov
mov
repz
cmp
loop
packssdw
mov
popl
and
rcll
add
sgdtl
push
mov
xor
cltd
sub
outsl
ret
and
js
loopne
mov
mov
shrl
repnz
pop
push
pushf
mov
xchg
scas
aas
adc
add
pop
pop
in
sbb
inc
cltd
imul
sub
jne
push
cltd
movsb
enter
das
and
ficoms
sub
loopne
cmpsl
jp
mov
jmp
dec
adc
mov
aaa
iret
mov
into
adc
lods
xchg
fdivs
nop
xor
add
xchg
notl
sub
jecxz
sti
mov
or
or
test
cltd
xor
inc
scas
lock
nop
test
clc
imul
lods
inc
mov
dec
mov
sub
loopne
pop
xor
pop
stc
arpl
hlt
loope
cltd
jns
mov
xor
in
movsl
pop
in
enter
ljmp
ret
dec
dec
stos
loope
mov
data16
insb
mov
ljmp
hlt
aas
dec
out
imul
inc
sbb
add
icebp
gs
dec
leave
mov
mov
andl
adc
je
int3
pop
dec
sub
mov
or
adc
mov
cwtl
xor
cld
pop
call
mov
adc
in
in
fldenv
ss
popa
cmpsb
and
stos
out
adcb
roll
into
shl
jg
mov
jl
negl
xchg
xchg
ret
dec
mov
fs
cmc
mov
mov
sbbl
push
scas
daa
mov
insb
jns
add
adc
cli
repz
loopne
jnp
inc
stos
xchg
sub
out
sub
dec
pop
mov
lods
mov
inc
cwtl
jecxz
push
add
push
fsubs
out
mov
sarl
inc
xor
sbb
cld
call
and
imul
inc
stos
loop
push
adc
leave
enter
lahf
or
pop
ljmp
bound
xor
stos
lock
pop
jbe
fcomps
xor
pushf
ljmp
mov
jecxz
pop
jb
inc
pop
aaa
mov
jo
popa
stos
out
ret
in
push
xor
outsl
ja
jae
or
push
stc
jbe
clc
and
in
loope
mov
adc
test
push
push
push
lret
pop
adc
loop
jmp
icebp
cli
arpl
out
stc
icebp
test
in
cmp
daa
repz
fwait
hlt
je
sbb
or
aam
insb
test
lret
iret
lods
mov
mov
sti
xor
mov
xchg
je
repnz
push
pop
stos
lds
stos
push
pop
or
push
xlat
outsb
in
enter
movsl
scas
mov
out
cmp
rcll
movsb
cmp
out
sahf
aam
sbb
stc
adc
xchg
dec
mov
jl
in
adc
sub
outsb
adc
push
xor
jmp
das
mov
sub
cmp
add
iret
push
repz
outsl
adcl
bound
inc
xchg
mov
sbb
add
mov
pop
cmp
rorl
inc
or
mov
ja
inc
cld
xlat
jno
je
jae
movsb
lcall
aaa
dec
test
shll
es
addr16
leave
push
cwtl
sub
popf
xor
mov
outsb
mov
stos
or
push
push
sub
dec
pushf
nop
iret
jl
popf
cwtl
arpl
or
cmp
loop
roll
cmpsb
out
pop
repz
mov
mulb
pop
rorl
adc
arpl
pop
and
mov
sarb
dec
scas
xchg
aad
int3
sbbl
add
shl
sub
and
adc
iret
and
add
cltd
js
mov
xor
jmp
imul
pop
mov
mov
mov
pushf
and
in
lahf
test
sub
mov
sbb
cltd
stc
push
sub
pop
aad
push
pusha
xchg
dec
jg
pop
and
ljmp
stos
and
scas
lods
outsl
add
dec
cwtl
mov
mov
popf
ds
pop
repz
or
movsl
jge
mov
sbb
or
push
test
mov
out
push
mov
sub
dec
test
fs
in
jl
rcll
cmp
push
push
in
xlat
xlat
jl
cmp
lea
lods
das
adc
lods
push
push
jb
pop
cmpsl
out
xchg
mov
ffreep
mov
xchg
shll
sub
sub
push
cmp
out
lods
outsl
lock
jle
xchg
cltd
imul
mov
dec
push
fwait
dec
adc
dec
shll
ret
rcrl
pop
bound
fisubrs
adc
test
cmp
imulb
dec
lret
hlt
sbb
sbb
sub
push
lds
inc
sbb
sti
pop
jo
insb
adc
or
sbb
mov
fisubl
cmc
decb
cmp
sub
loope
rol
adc
adc
rclb
mov
lahf
pusha
cmpsl
ds
and
add
push
jge
inc
out
mov
movsb
repnz
stos
test
ss
cmp
repz
mov
mov
movsb
mov
fdivrp
movsb
pop
cmpsb
or
shll
inc
mulb
mov
in
jne
ret
adc
loopne
sbb
adc
aas
mov
xor
fbld
lods
inc
add
or
sti
and
and
sarl
in
mov
ds
dec
jmp
sbb
dec
or
in
mov
ja
shlb
xchg
arpl
cmp
adc
pop
fs
cmpsb
popf
popa
movl
stos
pop
add
and
mov
movsb
adc
pushl
aam
sbb
call
aas
into
es
inc
cmp
jne
repz
bound
xchg
push
cmp
mov
movsl
mov
notl
les
movsb
push
dec
bound
outsb
test
outsl
mov
std
into
stos
aaa
adc
xorl
fisubrl
int3
pushf
mov
add
and
nop
xlat
dec
outsb
xorb
pop
ffree
ret
xor
mov
clc
add
dec
xor
aaa
sbb
sub
outsl
les
loopne
xor
popa
outsl
ret
stc
loope
mov
sbb
jnp
push
push
test
sub
fisubs
pop
sub
inc
sbbb
repnz
test
cld
sub
sub
sbb
jno
movsb
add
repz
shr
ficomps
cs
fcomp
int
ljmp
mov
add
rcrl
movsb
jecxz
xorb
out
scas
pop
ja
mov
sti
sti
jno
lret
cmpsl
mov
test
dec
dec
jmp
lcall
iret
xchg
movsl
mov
push
int3
xchg
fs
mov
xor
aad
cmp
fdivrs
cmc
push
clc
in
inc
push
add
mov
push
pushf
out
rclb
fists
scas
jecxz
push
cmp
in
adc
repz
test
push
out
xor
sub
pop
sub
push
dec
and
xchg
stos
mov
push
into
subl
mov
add
pop
pop
xchg
fwait
dec
testl
fadd
js
int
mov
or
mov
pop
pop
aad
stos
lcall
outsl
and
pop
cli
mov
in
rcrl
dec
test
lahf
ror
cmp
ret
in
cmp
int
adc
cmc
mov
out
mov
ljmp
aas
testb
les
push
orl
adc
cli
pop
xchg
fs
mov
fdivs
shll
enter
arpl
or
xchg
int3
sbb
stos
mov
aas
cmp
test
rcr
loope
int
xor
cwtl
sldt
daa
cmp
mov
jecxz
add
mov
sbb
pop
mov
jae
inc
mov
inc
pop
mov
sbb
cmp
and
movsb
test
inc
lods
negl
imul
aaa
aam
mov
or
ds
lret
push
gs
movsb
test
push
add
pop
cld
cmp
outsl
and
inc
push
in
repz
scas
ret
or
inc
mov
mov
loop
ficomps
insb
xchg
shlb
jno
cmp
xchg
or
pop
pop
lea
sub
jb
pop
push
mov
mov
mov
pop
pop
loopne
call
add
aad
js
cmpsl
jo
inc
mov
pop
fbld
arpl
sub
cld
mov
sub
lcall
sub
and
rclb
loopne
mov
dec
daa
loopne
mov
mov
es
mov
cltd
xchg
imulb
add
jge
ficoml
push
fsubp
test
and
das
and
faddl
rol
aas
jns
inc
cmp
iret
xchg
jbe
movsb
imul
shrb
mov
ret
and
in
and
cld
icebp
xchg
movsb
sbb
lds
inc
mov
sbb
cltd
dec
cmpsl
shlb
ss
inc
movsb
jns
scas
push
push
jecxz
jecxz
pop
or
add
cld
push
or
add
adc
or
jmp
nop
mov
out
int
imul
out
mov
or
mov
or
popf
in
loop
cmp
sti
orb
mov
insl
popl
sub
data16
clc
xlat
and
stos
ficoml
cmp
ds
out
shlb
lods
dec
test
mov
clc
jp
into
lcall
cmpl
andb
push
ja
add
aam
inc
mov
xchg
mov
fisubrl
jmp
movsb
inc
into
xor
fildll
loope
mov
iret
shl
ja
in
repnz
subb
ja,pt
adc
int
mov
mov
cld
es
xchg
enter
pop
rcll
jo
jp
repz
push
pop
leave
jne
arpl
adc
jo
dec
insl
cltd
mov
mov
sub
xchg
sti
mov
lcall
mov
mov
int3
xchg
ss
fisubrs
cwtl
and
add
cmp
hlt
pop
fs
stos
mov
daa
xchg
sub
sbb
in
add
scas
xchg
xor
xchg
jecxz
loopne
setge
out
loope
mov
mov
es
mov
jmp
xchg
test
or
js
fucompp
cltd
sbb
insb
imul
lret
lret
mov
imul
xor
cmp
mov
lret
movsl
xchg
jge
mov
stos
out
pusha
jo
stos
jne
jns
lret
sbb
into
test
je
xchg
into
dec
nop
shrl
push
push
add
fisubrl
mov
mov
outsb
jb
or
fstpl
pop
fmull
test
ds
bound
sbb
push
fldt
fcomp
jbe
mov
movsl
sub
pop
dec
leave
xor
ret
inc
cmpsb
andl
out
inc
push
shlb
popl
sbb
jl
dec
push
pop
sub
xchg
ret
pop
and
dec
dec
mov
sbb
pop
mov
or
pcmpeqb
sub
push
push
adc
inc
dec
popf
cltd
pop
xor
push
shll
ficoml
and
jmp
mov
mov
mov
mov
popf
ret
or
sub
xchg
jmp
sub
popa
jle
imul
sahf
popf
jbe,pn
scas
jnp
sub
lret
orb
sbb
sub
subb
sbb
add
and
popf
cli
xlat
std
lods
push
int
push
push
or
arpl
data16
add
jo
test
mov
jno
aas
arpl
dec
ds
inc
and
jp
imul
fstpt
xlat
xchg
mov
imul
imul
pushl
push
fidivl
dec
push
sbb
pop
cmp
add
xchg
jne
cli
add
add
rcrl
outsl
ljmp
icebp
mov
or
lods
test
cmp
adc
cli
add
sbb
sbb
sarb
ror
push
out
mov
sbb
pop
rclb
mov
imul
xchg
rclb
adc
adc
loopne
adc
mov
lcall
add
pop
mov
dec
xorb
inc
rol
sbb
mov
pop
fcom
mov
xchg
inc
hlt
or
cmp
addr16
sub
push
dec
sub
mov
sti
insb
xor
adc
bswap
sbb
fldenv
pop
pop
sbb
add
loop
cltd
sbb
leave
jge
push
pusha
sbbl
pop
xchg
rcrl
enter
adc
dec
mov
psraw
adc
mov
xchg
cld
loopne
jbe
sbb
and
add
mov
jg
sbb
adc
fcompl
fsubl
sahf
outsb
imulb
pop
jecxz
and
lock
cmp
and
or
ljmp
xor
into
push
jo
lret
fisubl
adc
jnp
fisttpl
out
lcall
push
xchg
in
sub
andl
or
mov
pop
or
loop
xor
mov
imul
inc
push
ja
fildll
in
cmpsb
ret
divb
scas
push
gs
cs
out
shll
stos
mov
arpl
loope
lock
mov
stos
imul
stos
addr16
pop
stos
push
aam
add
lahf
fdivp
pop
arpl
clc
lcall
xor
or
xor
cli
jns
or
fs
dec
jnp
sub
add
pop
shll
gs
inc
data16
xlat
xchg
sahf
std
mov
add
push
xchg
push
test
loop
inc
jbe
and
outsl
stos
dec
cli
cmpsl
cld
unpckhps
dec
outsb
inc
andb
mov
xchg
roll
js
data16
ds
outsl
mov
lcall
js
mov
mov
mov
mov
and
ljmp
mov
das
rcrb
iret
mov
inc
xchg
in
sub
cwtl
sub
mov
enter
or
out
add
jae
jae
add
mov
lret
pop
aas
push
shrl
mov
in
push
add
mov
push
adc
sub
dec
aam
jnp
cmc
cli
outsl
mov
pop
pusha
enter
jnp
add
mov
sbb
out
jmp
ss
xor
pop
out
fdivrl
mov
popf
adc
popf
int3
cld
xchg
stos
mov
outsl
lock
ja
mov
fildll
in
sti
inc
addr16
mov
sbb
dec
mov
pushf
outsl
fsubrs
mov
inc
sub
and
or
push
dec
filds
xchg
shll
or
sbb
jnp
hlt
sti
out
cwtl
adc
xchg
jge
fwait
das
push
mov
ss
pop
jne
mov
pop
cmp
mov
mov
and
lret
push
popa
push
fs
fsubrs
push
push
aas
sub
hlt
movsb
sub
xchg
mov
pop
jnp
pop
mov
stc
insl
mov
cmp
insb
les
ret
dec
or
insb
pop
in
orl
mov
sbb
mov
sbb
pop
test
stos
push
in
cmp
imul
sbb
cli
or
sahf
subb
xor
fcomp
ret
fcmovb
jo
loope
scas
cmc
aaa
lahf
dec
insl
sbb
aaa
daa
xor
mov
pop
inc
insl
xor
mov
or
jae
popa
sbb
xor
mov
jle
adc
or
jp
push
testw
sub
loop
dec
lcall
add
mov
fnstenv
arpl
in
add
movsl
fsubrs
fisubl
rcrl
loope
bound
jecxz
fdivrs
or
mov
push
push
andl
inc
inc
sub
xchg
jns
filds
and
cmp
mov
sbb
sahf
or
aad
out
movsl
push
es
fsubl
pushf
push
xor
lods
ss
test
dec
sbbb
mov
xchg
insl
add
loope
xchg
in
pop
loope
call
dec
lock
into
scas
loopne
cmc
and
insl
sbb
call
daa
push
out
fwait
testb
push
push
subl
lahf
adcl
jae
mov
or
mov
hlt
jle
xor
adc
jl
or
or
or
pop
xor
pop
jno
dec
cld
jg
xor
mov
fsts
jb
jo
pop
sti
mov
stos
cmpsb
movsl
in
xlat
in
pop
sbb
sbb
imul
loop
je
sbb
sbb
jbe
hlt
filds
imul
jae
std
loopne
repnz
or
cmpsl
out
push
sbb
rclb
movsl
fisubrl
sbbb
addl
add
shlb
lahf
daa
xchg
adc
lret
push
lret
mov
dec
lock
jge
loope
lods
jne
cwtl
negl
daa
idivb
leave
push
push
cltd
or
and
mov
push
add
dec
int
sti
out
cli
lret
push
pushf
in
or
mov
aad
addl
mov
and
aas
add
push
mov
stos
push
mov
fs
aas
xor
int
repnz
int
inc
jo
jl
or
adc
in
stc
or
lcall
pushf
call
jge
inc
xor
xchg
jp
xor
ljmp
mov
push
adc
ljmp
push
push
mov
loope
pop
cwtl
je
std
inc
jbe
push
enter
sub
pop
lret
mov
xchg
push
aas
xchg
ret
fidivs
fstps
ret
mov
ret
cs
adc
dec
add
add
std
xchg
mov
insl
int
enter
mov
dec
add
fadds
inc
fbld
pusha
mov
mov
jns
fiadds
ljmp
hlt
test
cltd
xchg
mov
out
pop
mov
lret
imul
int3
loope
loop
jmp
jne
adc
stc
cmp
loopne
pushf
ret
into
call
ret
cld
push
cs
daa
lods
lods
scas
mov
pop
fistps
inc
ss
or
dec
aam
dec
cwtl
sbb
sahf
mov
loope
cmp
jecxz
pusha
lock
add
jnp
scas
xchg
cs
bound
dec
jmp
dec
add
stc
adc
or
pushl
gs
cltd
insl
scas
popf
ss
outsl
cmp
dec
mov
scas
inc
xor
cmp
lahf
pusha
scas
stos
cmp
dec
jne
lds
scas
sbb
loope
jnp
std
push
ror
lret
inc
dec
mov
push
xchg
pushf
push
mov
push
adc
cmp
cmp
das
out
mov
aaa
mov
mov
lcall
das
cltd
jb
mov
aad
or
lret
xchg
nop
mov
shl
cmpsl
aam
adc
scas
out
in
in
inc
pop
jb
mulb
out
push
and
cld
aaa
rorb
imul
sub
pop
in
xchg
mov
rorl
and
rcll
mov
loop
adc
sub
sub
pop
sub
scas
es
xchg
push
sbb
enter
movsl
movsb
popf
adc
cld
push
mov
or
fsubr
cmpsl
or
push
or
jl
les
ss
hlt
sbb
push
sub
andb
outsl
popa
add
mov
push
sub
out
shrl
jno
ret
das
inc
lods
bound
xlat
or
inc
xchg
sub
sbb
add
jnp
stc
add
inc
inc
and
addl
lret
xchg
add
mov
jno
dec
jnp
xchg
insb
cmp
daa
cltd
adc
mov
mov
xchg
mov
je
negb
push
sbb
push
mov
lret
push
fnsave
push
push
shlb
sti
mov
test
cli
fmull
push
lcall
add
mov
insb
dec
dec
jp
iret
jb
ss
inc
dec
test
popa
insl
in
xchg
push
dec
inc
mov
or
aam
dec
push
aaa
xorl
xchg
addr16
and
jns
rolb
iret
ret
cs
repnz
mov
dec
mov
enter
inc
test
inc
push
xchg
push
xor
jb
xor
xor
outsb
lds
pop
xchg
xchg
inc
sbb
jbe
mov
jle
shlb
cli
cmp
add
adc
jbe
mov
xor
or
lods
je
scas
bound
mov
or
pop
jnp
xor
shrb
add
lods
jecxz
add
roll
cld
stos
pop
imul
imul
aas
inc
inc
xor
mov
mov
pop
cmpsb
fcmovnu
fidivs
sub
push
out
pushf
faddp
cmp
push
shl
pop
inc
rclb
push
dec
aad
bound
cwtl
outsl
xchg
inc
lret
or
adc
dec
or
jl
xchg
dec
push
xlat
push
outsl
xor
pushf
fsubl
test
fimuls
loop
or
dec
and
rcrb
mov
in
xchg
js
ret
and
push
dec
lret
or
xor
adc
add
xor
cmp
les
ror
or
xor
jecxz
fmull
mov
dec
popf
rcl
lcall
pusha
fildll
testl
call
faddl
jge
sbb
out
into
outsb
test
add
out
push
sub
loope
mov
fildl
inc
je
cwtl
mov
fcmovu
sub
lds
pop
adc
inc
clc
pop
inc
lret
pusha
jg
pop
mov
adc
cmpsb
addr16
jo
jmp
jbe
les
scas
pop
pop
mov
in
push
leave
inc
pop
movb
sahf
rcll
sub
mov
in
xchg
and
enter
xor
cmp
aaa
jecxz
jle
fdiv
and
push
aaa
shrl
outsb
adc
sub
js
dec
insb
pop
ret
cmc
xor
mov
xchg
cmp
mov
dec
out
vphsubbw
cmc
sbb
jne
and
lahf
movsl
sbb
add
test
mov
stos
xchg
jo
xchg
and
fisubrs
icebp
cli
xor
sbb
sbb
or
xchg
pop
dec
test
or
test
ret
xchg
mov
adc
std
xlat
sub
lods
xor
adc
add
and
push
ds
imul
or
js
ss
jecxz
movsl
aad
daa
mov
and
loopne
cmpsb
jg
inc
xchg
arpl
dec
es
mov
dec
inc
in
nop
scas
mov
xchg
add
iret
push
cli
jno
icebp
stos
push
sti
sbb
int
in
add
aas
xchg
add
in
lret
ja
mov
xchg
mov
ficompl
daa
out
add
and
jns
jne
daa
cmp
testl
cmpl
sbb
push
sub
xchg
sbb
add
pop
rcrl
pop
add
mov
jns
fistps
mov
mov
push
inc
bound
and
cmp
mov
in
daa
lds
adc
xchg
mov
loope
mov
psubsb
xor
xor
pop
mov
mov
ljmp
cli
jmp
push
shrb
sbb
bound
das
cmp
rorb
das
roll
mov
adc
or
stos
dec
add
adc
std
mov
jb
sbb
jge
mov
test
lods
jp
mov
cmp
sbb
pop
rolb
test
es
fwait
movsb
mov
jl
mov
mov
cld
mov
sahf
addr16
inc
jl
sbb
push
mov
pop
and
adc
push
aad
push
adc
outsl
jns
push
sbb
add
scas
std
icebp
dec
jg
pop
xchg
pop
scas
jmp
aam
mov
jmp
rcl
idivl
pop
mov
mov
ret
in
pusha
into
mov
mov
negl
jmp
adc
dec
inc
mov
sub
es
cli
out
xor
pop
outsb
lock
push
loope
xchg
push
enter
add
adc
push
jbe
js
pop
repnz
test
dec
add
rcrl
sbb
ljmp
imul
or
pop
mov
pop
lahf
jbe
lea
movsb
pushf
cmp
push
add
movsl
sti
cltd
int
and
into
faddl
ficomps
mov
xor
xor
mov
or
jae
sbb
nop
cld
test
fimuls
cmp
lock
and
js
dec
jp
add
ds
insb
lret
xor
imul
insb
xchg
jge
je
lret
addl
mov
pop
dec
in
sarb
add
cmp
repz
cmp
mov
push
sub
and
xor
mull
mov
lds
cmc
mov
imul
inc
pop
mov
mov
jg
mov
ljmp
sub
rsm
fistpll
nop
xchg
mov
ret
dec
adc
dec
sub
in
lock
jns
in
and
xor
cmp
lods
aad
les
sbb
ret
jbe
sbb
pop
mov
stos
fs
dec
outsb
sbb
fcoml
mov
leave
mov
push
and
pop
data16
cs
out
daa
xchg
cwtl
lret
adc
sar
dec
push
or
pusha
mov
jnp
adc
je
cmp
xor
or
rclb
ret
ficoms
sub
or
roll
lds
movsl
movsb
cmp
inc
bound
sub
pushf
sub
sbb
ror
mov
cmp
out
inc
inc
rolb
cmpb
out
je
gs
dec
and
mov
mov
mov
stos
push
adc
outsl
sbb
adc
cmpl
dec
cmpsl
add
push
xor
xchg
lahf
dec
idivl
ret
or
leave
cltd
push
dec
mov
sub
xchg
fs
sahf
and
loope
and
mov
sub
dec
sub
pop
cmp
divb
ret
sbbl
lahf
pop
lds
dec
adc
xchg
aaa
and
and
insb
xor
push
popf
bound
xchg
mov
adc
stc
stos
add
push
out
jl
mov
clc
rcl
sub
shr
adc
push
and
dec
ss
mov
ret
pop
jmp
insb
mov
add
notl
jecxz
xchg
and
pop
push
mov
pushf
daa
xor
das
rol
jecxz
lds
mov
pusha
test
jb
adc
hlt
int3
xchg
orb
or
xchg
data16
andl
pop
mov
mov
xchg
adc
inc
push
dec
xchg
outsb
mov
cmpsb
push
je
sub
lcall
test
pop
pop
cs
sub
cli
jns
fldt
or
push
in
punpckhdq
jle
std
mov
push
fucomi
sub
ljmp
adc
mov
jl
lret
add
cmc
movsb
in
filds
ror
gs
stos
and
pop
jmp
mov
das
add
arpl
aas
dec
and
sahf
ror
add
and
roll
popa
mov
inc
dec
das
lea
mov
or
mov
jp
sbb
or
icebp
mov
pushf
pop
jae
mov
cmpsb
or
in
jno
jmp
cmpsb
lods
cmp
mov
in
push
imul
repnz
mov
inc
mov
cmp
jo
int3
cmc
inc
fs
or
sahf
push
inc
out
fildl
xor
sub
and
sbbl
and
inc
mov
cmpsb
jno
pop
out
jnp
mov
andl
push
mov
push
mov
sbb
or
loope
jle
push
sahf
push
shl
cmp
aam
outsb
loopne
arpl
lret
or
data16
push
shr
cltd
imul
lods
insl
mov
xchg
inc
mov
pop
cmp
add
rclb
ss
lods
xor
arpl
pushf
add
dec
cmp
jecxz
out
mov
jnp
les
jns
lret
inc
xor
ljmp
fdiv
rolw
das
pop
or
xchg
xor
sbb
test
add
push
stos
imul
or
add
arpl
fucompp
iret
lcall
jg
insl
stos
mull
std
sub
xchg
sbb
test
lock
fs
add
jno
push
inc
mov
cmc
xchg
mov
pop
and
ds
pusha
push
outsb
test
aaa
lahf
cmp
push
pusha
jl
or
sbb
ljmp
xlat
hlt
mov
push
xchg
ds
sub
xchg
fildll
and
ja
ret
xor
pusha
sbb
out
pop
inc
ret
je
sub
out
mov
loope
roll
mov
les
insl
mov
arpl
mov
sub
dec
int3
pop
loope
add
or
xor
dec
cmp
or
dec
adc
xor
xchg
testb
xor
cmp
xor
lods
cmpsl
int
adc
fidivs
and
mov
out
out
and
xchg
mov
cs
or
sbb
cmp
add
addr16
and
xor
les
xchg
in
ds
lds
mov
and
icebp
nop
cmc
andb
lcall
or
xchg
and
mov
xchg
fs
pop
repz
dec
sbb
mov
jb
or
pop
outsl
ss
inc
xor
lock
je
imul
mov
xor
xor
mov
or
cmp
xchg
fistpl
sub
nop
mov
cmp
cmc
inc
fisttpll
outsl
loopne
ret
push
and
lret
jae
pop
ss
les
mov
add
cmp
jg
mov
mov
mov
mov
mov
sarb
mov
shlb
sbb
sub
arpl
add
dec
jb
shlb
lds
out
cs
inc
cmp
sbb
dec
es
scas
inc
cmpsb
push
aaa
or
dec
fwait
sbb
push
xchg
inc
adc
mov
fcompl
jbe
fdivrs
insl
ret
mov
adc
push
sub
jl
std
scas
insb
rcrb
ja
rcrl
ret
inc
sub
pop
int3
jae
cmc
jl
xor
inc
fmul
inc
pusha
dec
jle
mov
sbb
jae
fcoms
sub
mov
es
lahf
push
dec
andl
sub
push
xlat
xchg
insb
mov
add
outsl
pop
jp
in
xchg
and
jnp
scas
loope
pop
scas
xlat
push
mov
test
out
mov
xchg
xchg
xchg
sbb
sbb
out
and
jb
icebp
sbb
adc
ds
push
orb
xchg
xor
pop
mov
pop
and
lret
cmp
sbb
or
xor
mov
mov
out
mov
push
xchg
clc
dec
sub
adcl
fucomip
inc
jb
cmpsl
in
push
mov
mov
mov
push
push
lahf
cmpl
shlb
xor
dec
testl
pop
ljmp
pushf
push
mov
sub
scas
adc
push
pop
bound
inc
dec
xor
jp
cs
sub
xchg
xchg
push
mov
loop
xor
pop
out
clc
dec
movsl
stos
nop
xor
xchg
ficoml
push
xor
adc
jg
and
push
fists
rorl
lods
mov
add
std
dec
aas
mov
pop
xor
ret
out
lods
mov
pop
mov
xor
mov
dec
push
mov
shr
bound
fcoms
xchg
push
mov
dec
ror
imul
stc
sub
sbb
pop
test
push
ret
mov
shll
rcr
in
fdivrs
or
inc
add
fnstenv
movsl
mov
shl
cmpsb
leave
jb
sbb
out
sub
mov
dec
sub
and
sbb
repz
jle
lds
frstor
inc
je
xlat
sub
jb
leave
pop
mov
or
lcall
pop
cmp
setno
and
fwait
mov
nop
addr16
data16
scas
inc
ljmp
popf
adc
leave
sbb
imul
mov
jnp
mov
insl
insb
js
adc
fwait
inc
lahf
stc
fst
pop
outsb
mov
imul
cmc
cs
roll
lcall
jecxz
in
stc
pop
fistpl
jo
in
cs
inc
jnp
pop
ljmp
shrb
sarb
and
fucom
xor
out
imul
outsb
out
ret
pusha
lfs
daa
lret
cmc
mov
sbb
push
sbbl
dec
lds
lret
jp
leave
lds
inc
or
push
stos
mov
popf
leave
sti
add
inc
push
ja
enter
test
or
push
in
push
ljmp
cs
mov
jne
test
int3
jle
les
dec
insb
mov
jbe
mov
test
aas
mov
int3
lret
stc
jns
dec
shll
cmp
pusha
imul
and
ss
adc
out
jb
iret
adc
shlb
jg
repz
adc
mov
mov
nop
mov
mov
je
sti
cld
subl
shll
pusha
or
sub
push
insb
and
cmc
xor
scas
fimull
pop
out
outsl
out
outsb
dec
push
cli
mov
hlt
insb
out
add
mov
xor
mul
into
cmp
jno
sub
or
and
es
aad
insl
test
scas
mov
aad
fistpl
sub
inc
dec
mov
rcl
cmp
daa
inc
push
mov
xor
shrb
push
leave
and
mov
lods
sahf
mov
push
movsl
dec
jge
inc
xchg
mov
cld
push
inc
jns
mov
adc
pop
pop
inc
xor
mov
imul
xchg
cltd
add
aaa
sahf
mov
adc
jp
pop
lret
mov
ss
loop
imul
and
sbb
jo
jae
faddl
jae
enter
add
call
loopne
xor
mov
sbb
jne
push
push
jle
xchg
pusha
cwtl
dec
mov
sbb
ret
xchg
mov
scas
fldt
sbbb
xor
inc
jae
std
ds
xor
xchg
popf
gs
aaa
cwtl
adc
cltd
jp
sub
pop
movsl
pop
mov
lods
lret
fnsave
cmp
jg
jnp
fs
jmp
ljmp
xchg
mov
es
jg
aas
dec
mov
in
fstpt
sub
jo
sarb
push
outsb
and
jecxz
or
mov
add
add
in
or
xchg
cmpsb
cmp
cmp
mov
out
pop
sbb
lods
mov
out
pop
into
int
int3
clc
outsl
outsl
ljmp
repnz
mov
cmpsl
in
outsl
cmp
xchg
and
xchg
pop
sub
pop
stos
pop
leave
and
test
jns
gs
stc
popw
stc
fs
sbb
nop
mov
jge
dec
mov
jecxz
mov
push
sub
aaa
cli
inc
test
stos
stos
pop
in
and
jb
inc
and
mov
xor
movsl
or
jmp
jl
push
and
mov
repz
test
in
sub
in
or
fwait
sbb
push
or
mov
pop
and
or
test
fsubrs
xchg
xorl
loope
addr16
cltd
inc
scas
sub
xchg
pop
mov
jl
and
lret
xchg
sub
sahf
mov
pusha
std
rorl
imul
cld
adc
cmpsl
sbb
cmp
cmpsl
ss
adc
cwtl
movsb
ds
popa
aam
rorl
and
imul
fisubrs
xor
ficompl
lock
sbb
std
xchg
out
jp
jns
mov
pop
pop
xchg
je
les
ret
test
pop
es
dec
or
dec
push
movsl
jg
mov
inc
test
or
add
mov
xchg
popa
imul
push
lret
adc
pop
mov
daa
fs
int3
cmpsb
stos
gs
lea
ljmp
in
int3
inc
mov
icebp
mov
das
add
shlb
or
pop
stc
push
ljmp
inc
in
mov
jbe
mov
mov
sti
cmpsb
sbb
mov
push
push
addr16
pop
sbb
pop
pusha
mov
enter
cmp
xor
in
movsl
imul
enter
mov
popf
ret
mov
je
mov
jb
bnd
adc
aaa
dec
cmp
fucomp
mov
inc
shll
enter
call
sti
jae
in
push
or
cmpsl
xlat
test
cmc
xorl
mov
xor
xor
push
or
movsl
jg
pop
outsb
popa
xor
aaa
into
push
mov
dec
jp
xor
xchg
in
push
das
outsl
push
pop
insl
idivb
cmpsl
scas
add
mov
sub
push
push
cltd
dec
cmc
int
sub
jmp
inc
frstor
lock
ret
lods
mov
out
lret
cmp
daa
inc
pop
stos
add
movsb
leave
push
push
shrb
ljmp
int3
push
mov
xor
jmp
call
add
fstpt
and
lock
imul
jnp
pusha
gs
pop
mov
jo
out
jno
lret
mov
insl
xchg
sbb
mov
push
push
shl
lock
push
in
fldt
mov
notl
push
cmpsb
pop
sbb
jbe
add
je
inc
outsl
cld
jno
dec
jl
adc
mov
mov
push
mov
xor
mov
in
push
jmp
dec
cs
push
sub
push
fwait
or
xchg
roll
and
inc
mov
cmpsb
or
push
leave
push
jle
push
jl
sbb
mov
jl
sub
xor
cmpsl
vpaddd
mov
cmpsl
xor
inc
push
cltd
adc
xor
hlt
xchg
es
dec
bound
push
rcrb
out
sbb
lret
std
mov
mov
mov
cmpsl
mov
xchg
sub
and
mov
arpl
sarb
inc
mov
sub
mov
mov
das
pop
xchg
xor
or
adc
sbb
ret
divb
jno
int
dec
outsl
inc
and
push
inc
lahf
mov
push
xchg
clc
std
cltd
test
adc
sub
lahf
lock
cltd
shl
ror
jno
cmp
sub
xchg
jg
lcall
add
cli
dec
inc
push
into
xor
sub
in
idivl
scas
mov
cmpsb
aad
lods
inc
or
mov
ljmp
xchg
js
ror
adc
jo
lock
test
fnstcw
push
dec
jp
lods
or
mov
sbb
arpl
arpl
inc
out
inc
jp,pt
xchg
push
test
sbb
or
pushf
pop
jne
adc
idiv
inc
dec
popa
ret
mov
sahf
sbb
scas
out
sar
cmp
add
add
hlt
dec
adc
rcrl
lcall
jne
cld
jbe
enter
or
pop
gs
fcmovb
sbb
out
or
sbb
push
fsubr
sahf
sub
pusha
sarl
push
pop
sbb
dec
sbb
in
popf
repnz
aaa
es
mov
push
xchg
test
je
out
xchg
mov
mov
and
lret
inc
lahf
sub
mov
sbb
cmpxchg
lret
add
js
xor
and
pop
fsubrs
lock
movsb
adc
clc
cltd
out
fs
sub
inc
xor
xchg
int3
pop
mov
movsl
fcompl
or
out
mov
shll
sahf
mov
adc
notl
rorb
adc
and
pop
mov
jno
push
push
sahf
pop
testb
inc
pushf
jmp
pop
ret
out
lahf
add
call
mov
les
cs
push
daa
sub
push
subl
adcb
mov
xor
jae
stc
aam
sub
popl
pop
and
mov
insl
in
call
jp
sbb
push
add
jb
or
push
inc
add
sbb
or
dec
iret
fisubl
pusha
push
dec
js
outsl
shrl
fnstenv
jge
xor
inc
xchg
js
pop
in
dec
cwtl
jge
bound
add
call
fdivrl
sarl
cltd
arpl
js
pushf
leave
test
sub
das
mov
and
add
sti
mov
nop
orl
adc
aas
push
mov
sub
xor
jae
mov
add
push
mov
jmp
imul
xchg
mov
test
xchg
addb
push
imul
jo
dec
add
idivl
ljmp
out
pushf
ret
push
xchg
hlt
mov
sub
mov
movsb
xor
outsb
inc
pop
popa
cld
push
popf
push
dec
and
sbbb
loope
daa
and
repnz
add
mov
test
outsl
sub
lahf
sub
add
pop
in
cltd
xchg
xorl
xchg
iret
adc
jle
cmp
into
inc
cmc
cmp
add
movsl
mov
or
loopne
in
ret
push
out
xor
or
jg
inc
adc
jl
or
dec
sub
scas
and
cltd
xor
imul
aad
inc
and
push
in
lahf
jmp
adc
shlb
daa
adc
in
inc
iret
or
imul
or
inc
pop
pop
cmp
cmp
bound
inc
add
dec
mov
int3
cmp
pextrw
xor
stos
lea
ret
bnd
jecxz
cmp
adc
pop
inc
xchg
out
or
stc
outsb
push
xchg
or
mov
fwait
nop
std
xlat
or
ror
scas
mov
jmpw
mov
sub
cli
jo
stos
scas
fwait
fwait
adc
mov
aad
outsl
mull
test
dec
cmpsl
out
les
jg
add
xchg
jne
and
xor
or
mov
enter
adc
push
xor
dec
roll
jge
repz
mov
sbb
fcompl
cli
mov
pop
ret
int3
test
sub
xchg
pop
lret
sbb
pop
lock
inc
stc
mov
add
imul
cli
or
sbb
movsb
jl
push
cli
popa
or
xchg
add
sahf
jge
test
out
and
and
negb
push
jne
mov
lcall
fistl
or
cld
addr16
out
mov
adc
jnp
test
add
aam
sbb
dec
int
adc
dec
mov
pusha
fiaddl
add
inc
and
outsl
xchg
shl
dec
xchg
fistpll
leave
cmp
lret
xchg
push
mov
data16
pop
xor
cmc
rcrl
imul
insl
dec
cmp
xchg
inc
pusha
rclb
repnz
pop
push
in
mul
addb
xchg
jge
ss
scas
add
mov
das
cld
sub
aad
and
inc
sarb
add
fnstcw
sbb
lret
stos
int
mov
xor
dec
sahf
xchg
cmc
mov
mov
jmp
divb
mov
xorl
mov
inc
and
xor
aam
clc
stos
jb
imul
push
sbb
add
cmp
mov
mov
lods
addb
cmp
cvtps2pi
mov
or
das
pop
push
or
iret
shll
push
push
pop
femms
lret
std
cld
pop
jbe
mov
ja
mov
ds
mov
in
and
mov
cmp
jecxz
lret
es
sub
out
outsl
push
mov
pop
mov
scas
js
xlat
out
ficoml
sbbl
jg
add
nop
fwait
pop
sub
cmpsb
gs
jmp
adc
adc
jecxz
push
or
sbb
mov
mov
stos
dec
sbb
test
aad
cmp
mov
add
mov
insb
fidivs
adc
add
lret
inc
sti
and
fnstsw
loope
leave
test
jl
in
and
xlat
add
lcall
adc
inc
ss
push
dec
mov
bnd
leave
fnsetpm(287
loope
sbb
fwait
push
lret
adc
lds
xor
add
and
push
aad
xchg
or
stos
and
dec
or
in
and
cmpsb
dec
mov
fwait
lods
xchg
add
or
sbb
insb
push
cmp
xchg
pop
divl
adc
mov
aam
in
clc
and
jnp
xor
into
xchg
aad
icebp
les
add
mov
iret
xchg
aas
jl
add
push
rclb
scas
in
lahf
scas
out
dec
add
stos
rclb
ret
insb
sbb
push
pop
inc
pop
pop
xchg
aad
mov
xlat
mov
pop
int
scas
movsl
mov
insb
in
insb
mov
fdivrs
push
jnp
icebp
fistpll
fwait
ljmp
pop
movhps
inc
adc
mov
stc
mov
out
stos
hlt
cmp
test
out
cwtl
lahf
and
orl
xor
stos
nop
mov
push
pop
sub
lods
fcoml
in
shlb
pop
cmpb
cld
xchg
pop
mov
into
adcb
mov
xchg
rol
cmp
insb
inc
orb
xlat
lret
xor
sbb
xor
mov
je
lods
push
stos
cmp
loop
rcrb
xlat
scas
gs
cmp
push
cs
lods
outsb
cmp
jb
insl
pop
icebp
sub
lret
fcoms
aam
fists
add
lss
pop
mov
mov
lahf
xor
mov
jmp
outsb
outsb
scas
imul
and
sub
sbb
shrb
sbb
shlb
in
push
mov
push
add
sbb
lret
xchg
jmp
sbb
jbe
dec
push
rol
in
mov
rep
ja
adc
sub
loopnew
inc
lods
xor
jmp
jmp
fs
mov
mov
pop
and
add
sbb
cwtl
push
or
and
aas
dec
pop
dec
in
stos
cmp
fsubrl
test
add
cmp
xor
inc
mov
push
leave
daa
xlat
xor
pop
push
sub
xchg
repnz
aas
inc
push
cmp
lcall
sub
mov
imull
js
repz
loop
ret
sbb
sbb
jb
hlt
or
inc
dec
dec
mov
mov
dec
jmp
cmp
lods
cltd
mov
mov
cld
xorl
sub
data16
sub
and
mov
rcll
stc
aad
inc
jno
js
mov
pop
add
and
addr16
dec
fsub
push
add
in
aam
scas
hlt
js
pop
notb
xchg
imul
sbb
add
jmp
shlb
push
sarb
sti
jl
arpl
clc
xchg
push
lret
inc
sbb
add
roll
pop
mov
jae
jg
adc
xchg
dec
imul
pop
rcr
out
mov
aaa
pop
xchg
decl
in
fmulp
shrl
jmp
jg
std
mov
push
test
dec
ret
dec
aas
mov
or
movsb
inc
test
incl
cmpsl
pop
out
stc
mov
loopne
or
das
insl
pusha
ds
xchg
pop
add
pop
and
mov
cmp
pop
jne
mov
das
cli
dec
mov
push
or
and
push
mov
in
push
jbe
lahf
pop
push
insb
cmpsl
push
lahf
mov
or
push
add
fsubl
out
popf
cmp
jl
ret
push
ljmp
xchg
jl
adc
pop
cmpsl
pusha
sbb
mov
adc
testl
jb
push
outsl
aam
daa
data16
es
cld
push
dec
dec
cmp
das
jecxz
inc
inc
dec
icebp
clc
pushf
fucomip
lods
dec
out
sbb
sbb
push
scas
mov
dec
out
sub
out
push
pusha
push
push
sbb
js
aad
jnp
fs
push
mov
xorb
xor
inc
cwtl
adc
filds
fwait
xor
xor
push
sahf
mov
xchg
rorl
push
stc
push
jns
xchg
jl
int
mov
mov
es
mov
xor
cli
into
push
xor
popf
shrb
sti
scas
mov
mov
inc
test
lret
xor
jo
xor
andl
push
mov
insl
jp
js
push
outsl
cmp
pop
push
and
and
jmp
inc
aad
pop
mov
aad
sti
xor
cmp
loopne
mov
loop
or
or
das
xor
dec
pushf
sub
je
movsl
movsl
dec
mov
sbb
shr
xchg
fimull
jb
pop
pushf
mov
test
cli
popf
jmp
push
inc
stos
fdiv
sbb
mov
xchg
dec
jo
aad
push
in
add
jecxz
test
mov
push
jl
push
ficomps
push
outsl
push
mov
jp
cmp
pop
out
mov
pop
and
push
imul
xchg
inc
clc
sahf
lds
aam
movl
fldt
scas
icebp
sub
mov
cmp
jb
sbb
mov
stos
sbb
mov
jne
lret
and
inc
and
pop
movsl
adc
js
rolb
sti
jl
push
inc
inc
xchg
mov
lods
sbb
ljmp
dec
push
iret
or
pop
lock
mov
mov
das
lods
add
daa
inc
xchg
jle
nop
cli
pop
mov
sub
ds
cmpsb
cmpsl
xchg
jecxz
or
add
cmp
je
lret
cs
es
push
inc
mov
xorl
cmp
sub
xor
outsl
mov
mov
sbb
xor
cmc
xchg
adc
in
mov
ret
cmpsl
sahf
cli
and
rcrb
sets
test
xchg
js
mov
lods
cmpsl
nop
push
icebp
jo
arpl
xor
pusha
jae
and
in
adc
xchg
stos
jmp
sahf
lods
shll
lods
cmpsb
outsb
sub
stos
in
adc
aad
push
call
ds
push
lods
and
dec
xchg
pop
pop
cmp
xor
cmc
fisttpl
pop
daa
cmp
cmp
adc
lret
aam
cld
adc
rep
jge
lds
imul
lods
lods
ret
out
int
ds
scas
dec
hlt
sti
outsl
dec
leave
xor
pop
dec
ljmp
call
stos
faddl
test
mov
out
mov
mov
fiadds
pop
mov
jg
mov
sbb
or
xchg
decl
fiaddl
mov
fwait
lods
test
inc
xchg
mov
cmp
xchg
inc
push
cld
cli
int
mov
adc
pop
cmp
sub
fldt
mov
jo
faddp
aaa
adc
lret
pop
add
pop
adc
push
dec
bound
sub
lods
outsb
aam
and
enter
test
roll
orb
sti
mov
cmp
sbb
inc
lds
mov
pop
fdivs
jge
mov
and
dec
in
das
mov
test
incb
pop
cmp
clc
inc
mov
xchg
xchg
lods
mov
aaa
add
mov
or
or
pop
dec
add
push
or
aas
fnstenv
mov
jb
pop
mov
dec
cld
in
mov
fnstcw
mov
and
fldcw
adc
rolb
xchg
push
cmpsb
shl
fwait
mov
aaa
cs
aas
lea
lea
ds
clc
push
and
adc
xchg
mov
push
xchg
sbb
dec
addr16
dec
inc
lock
mov
inc
mov
hlt
cmp
jmp
jbe
pop
push
mov
sub
xchg
js
adc
lea
inc
and
ja
sub
mov
sub
jge
cmc
aas
lret
popa
dec
jns
jne
loop,pn
iret
mov
in
pusha
push
lret
jp
mov
repnz
in
jp
push
xlat
pop
jg
add
or
mov
pop
cmpsb
pop
aas
pop
repz
adc
cmc
into
sub
adc
packsswb
or
out
push
in
mov
push
call
jmp
mov
jg
xchg
xchg
xor
mov
mov
test
push
mov
mov
movsl
test
imulb
into
xorl
push
outsl
pop
add
ja
into
push
pop
and
aaa
adc
sub
dec
sub
and
xchg
stc
out
xor
arpl
fnstsw
mov
sbb
cmp
jl
add
movsb
pop
lods
sub
aas
mov
push
inc
test
popa
mov
and
insb
outsl
rcrl
pop
mov
lods
sub
data16
lret
fidivs
xlat
cmc
cmp
push
pop
ret
inc
sbb
mov
push
mov
add
stc
sbb
push
mov
notl
lcall
jns
or
ret
and
sbbb
daa
push
xchg
sbb
xchg
loop
lock
push
sbb
outsl
mov
lods
mov
daa
out
xchg
push
add
dec
insb
repnz
ss
mov
pop
mov
lds
fwait
stc
or
sbb
repz
fadd
shrl
or
lcall
pop
les
mov
aas
imul
stos
cmp
inc
push
incb
sbb
xchg
fsubrl
ss
cltd
icebp
lods
jp,pt
shr
sbb
xchg
stos
psraw
fildll
xor
xor
out
sti
popa
mov
dec
std
lret
dec
fistl
ja
les
nop
mov
mov
add
scas
mov
and
popa
test
jge
jge
pop
ds
push
add
push
nop
adc
imul
mov
mov
outsl
push
cmp
sbb
cltd
inc
jnp
xchg
iret
ja
add
jbe
add
fs
rclb
movsl
xchg
and
pop
add
cmc
call
inc
mov
fwait
inc
scas
into
test
aad
stos
sahf
arpl
scas
xchg
call
fcmovb
hlt
pop
lds
rolb
add
dec
push
fadds
mov
insl
cmp
loop
lods
adc
cmpsb
jne
test
jb
cmpsl
hlt
test
clc
jp
pop
clc
and
std
jle
dec
loop
repnz
lret
add
xchg
test
int
jecxz
xor
push
sti
in
pop
xor
push
fidivrs
es
loope
ret
jg
inc
xchg
push
roll
dec
out
mov
adc
xchg
cmp
cmp
mov
jmp
in
pop
or
and
je
push
adc
mov
mov
mov
cmp
lahf
in
mov
cli
mov
and
pop
mov
and
cmp
mov
hlt
and
pop
mov
adc
cmp
xorb
and
les
repz
cli
mov
std
add
add
mov
aad
lret
adc
std
icebp
mov
cli
int3
shlb
and
repnz
sahf
adc
add
lock
or
mov
lods
cmpl
inc
inc
insb
int
and
xlat
aad
out
mov
fdivrl
jecxz
jne
and
ret
push
xor
ds
jb
outsb
cmpb
dec
orb
lock
pop
or
push
out
xchg
cmp
scas
outsb
jp
and
cli
sub
sbb
dec
dec
sub
push
cmp
jbe
or
push
mov
test
push
leave
inc
cmp
mov
cmpsb
das
xchg
inc
jno
adc
adc
lcall
mov
xchg
shrl
stc
push
leave
dec
push
cmp
ja
fildl
inc
add
push
push
in
or
adc
icebp
sarb
xchg
and
popa
sub
jnp
scas
xchg
mov
out
pop
dec
mov
es
rcrl
into
je
stos
mov
scas
popa
gs
sub
sub
jnp
sub
out
scas
outsl
sub
insb
ret
lock
into
mov
jl
push
addr16
cmp
mov
mov
jl
lcall
lods
fdivl
and
push
pop
push
mov
adc
mov
movsl
movsl
mov
push
shrl
mov
js
or
negb
rol
pusha
dec
adc
add
rcrb
in
jae
nop
jb
mov
pop
inc
xchg
stc
adc
adc
fcos
mov
mov
sub
out
fisttps
rclb
jl
outsl
adc
mov
mov
mov
xchg
arpl
stc
fs
int3
mov
xor
mov
pop
sbb
or
aas
push
and
lret
stos
insl
bnd
xchg
jno
popa
es
jbe
xor
adc
aaa
movsl
jmp
or
iret
xchg
inc
jmp
mov
int
ret
mov
pop
icebp
adc
or
fmulp
lea
rcll
rcll
dec
dec
das
inc
mov
cmp
pxor
inc
push
cmp
pop
sbb
mov
sub
fdivrs
popa
iret
push
gs
jle
sub
sub
lea
ficomps
cmc
or
xchg
test
xor
movsl
sbb
push
mov
adc
mov
mov
ja
rorb
cmpb
mov
pop
subb
lret
hlt
pop
or
cs
cmp
fs
push
in
js
dec
fimuls
cmpl
cltd
fdiv
dec
pop
add
js
mov
daa
out
mov
jp
sub
jmp
inc
jbe
es
jp
movsl
adc
lret
sti
lret
add
cmpsb
test
js
jbe
leave
psubusb
hlt
xor
in
cmpsl
xchg
into
jns
adc
push
dec
sahf
mov
cmp
adcl
int3
and
sarl
ljmp
dec
jp
xchg
lds
test
mov
push
hlt
in
test
adc
int3
xor
cmp
xchg
dec
sub
aas
sbb
aam
incl
adc
pushf
repz
out
push
add
ja
fdivrl
jo
jbe
jl
into
pop
mov
jecxz
adc
jmp
sbb
pop
loopne
outsb
fisubrs
fadds
mov
rclb
mov
push
shll
cmc
aaa
daa
subl
insb
adc
push
mov
dec
push
xchg
data16
aam
nop
inc
add
les
jno
ja
pop
fsub
test
lock
mov
mov
or
dec
mov
lahf
xor
stos
rcrb
xchg
in
adc
popa
sbb
sbb
roll
lcall
mul
popf
dec
inc
lret
mov
cmc
in
or
or
pop
mov
sbb
adc
add
call
add
adc
cwtl
sub
call
or
dec
inc
aaa
xchg
fst
cmp
out
xchg
loop
push
xor
pop
pxor
sbb
add
ret
scas
dec
add
cmpsb
mov
add
mov
sbb
mov
xor
rcrb
aas
sbb
testb
jno
fld
sbbl
inc
jbe
jbe
xor
mov
sbb
mov
add
cld
and
dec
xorb
or
fs
push
call
pop
enter
push
fistpll
and
jmp
and
sub
sarl
outsb
mov
std
mov
cmp
jno
shrb
pop
out
pusha
sbb
cwtl
inc
gs
aad
xor
stos
mov
xor
fistpl
jo
or
push
xchg
enter
add
punpcklbw
test
icebp
sub
xchg
out
sub
push
jb
rcrb
pop
pop
sbb
mov
adcl
pop
dec
test
mov
adc
jmp
mov
mov
xchg
inc
fimuls
jle
sbb
or
cmpsb
push
mov
cltd
movsl
test
sub
hlt
sar
std
inc
cs
add
add
out
je
adc
push
add
pusha
inc
std
adc
cmpsb
xor
sbb
cmc
mov
mov
cmp
lods
call
sbb
sub
dec
shlb
stos
xor
jo
sub
sbb
out
add
pusha
mov
imul
pop
movb
fwait
mov
sar
xor
and
sbb
mov
pop
jno
dec
inc
push
sbb
inc
andl
jo
pop
mov
push
in
fisubrl
pop
repz
fmull
dec
push
sarl
fldenv
lret
cwtl
loopne
scas
mov
int3
or
fldl
push
stos
adc
mov
inc
add
mov
loop
pop
test
pusha
data16
dec
jae
xchg
mov
xchg
jle
lods
dec
nop
call
mov
sti
cltd
pushf
je
jbe
push
cmp
lret
dec
cmovo
sbb
gs
sub
addr16
adc
sbbb
pop
leave
sahf
pop
pop
rcrb
and
inc
add
push
add
mov
and
ds
xor
jecxz
sti
adc
adc
mov
mov
pop
les
pop
xchg
sub
dec
shll
sub
and
push
cwtl
or
push
or
lds
and
out
lds
xchg
lock
ret
ja
xchg
aaa
push
roll
inc
les
cmp
mov
test
mov
jno
ds
and
movsl
mov
lock
sbb
arpl
in
and
cmp
cld
js
out
mov
roll
test
mov
dec
incb
pop
out
hlt
cmc
fwait
les
lret
push
pop
adc
mov
and
fisubl
idiv
mov
cld
lcall
jo
mov
data16
iret
ds
fs
mov
xchg
iret
lret
in
push
cld
jg
ficoml
and
inc
ret
inc
dec
sbbl
jae
daa
sbb
repz
mov
dec
les
insl
adc
xor
int3
lret
lahf
mov
add
loope
or
xor
fmull
xor
adc
in
and
and
jo
mov
fstps
pop
shll
sbb
sbb
adc
lods
cmp
aad
es
aaa
pop
or
or
mov
int
pop
xchg
dec
sbb
cltd
cmp
dec
stos
jg
addr16
push
pop
outsl
add
inc
pop
xchg
fdivrs
ja
stos
xor
stos
das
xchg
mov
or
xchg
nop
xchg
cs
jne
jo
lds
mov
loope
cmp
addr16
add
addr16
mov
adc
sbb
push
mov
mov
adc
out
sub
sarl
cmpsl
mov
aaa
int3
mov
repz
movsb
fistl
pop
fcomip
push
and
aad
adc
push
aas
orl
rcrl
es
cmp
dec
std
pop
jae
jg
xor
pop
mov
stc
pop
inc
add
fcomip
mov
mov
add
mov
dec
in
jne
scas
int3
and
mov
pop
nop
sub
lahf
mov
pop
popa
das
in
pop
movsb
sbb
imul
test
xchg
imull
js
mov
mov
addl
xchg
cld
addl
in
icebp
cmp
jg
fistpll
es
in
inc
aas
inc
stc
ret
cld
pop
mov
push
jmp
fsts
mov
lods
decb
jecxz
rorl
mov
inc
roll
lea
sahf
and
fldenv
inc
idivb
pop
mov
aad
add
pop
call
daa
add
jnp
jg
test
fnstsw
cmp
daa
fwait
dec
add
or
daa
xchg
pop
add
sar
lret
sbb
out
cmp
ret
jmp
shrl
push
bound
arpl
into
lock
pop
or
pop
xor
nop
gs
push
cltd
lret
dec
rcrl
lcall
mov
inc
aas
ret
dec
and
test
les
dec
sbb
jge
and
jae
bound
dec
mov
pop
cmp
in
ud0
int3
push
add
push
cmpsl
jle
outsb
fwait
cmp
iret
arpl
das
pushf
push
and
mov
push
shrl
add
dec
adc
lds
gs
ja
or
movb
stos
push
ja
clc
and
loope
or
xchg
and
pop
les
test
pop
cwtl
adc
movsl
xor
popf
sbbl
std
push
fmull
pop
in
adc
outsl
pop
call
adc
movsb
adc
and
xchg
cld
mov
adc
mov
lods
test
cmp
jle
mov
jbe
shll
cmp
das
jae
stos
bound
mov
in
xchg
mov
cmp
shr
xor
pop
ss
push
popf
loope
ds
ja
rcrb
out
lds
pop
mov
mov
jnp
inc
loopne
xor
pop
inc
mov
sbb
push
mov
imul
xchg
icebp
lret
std
dec
mov
loope
addr16
arpl
mov
das
add
cmpsl
nop
cmp
jge
inc
sbb
mov
or
scas
test
aad
mov
adc
cmc
jmp
add
sub
push
jnp
lret
adc
scas
sub
aas
add
iret
mov
test
add
pop
fidivrs
mov
fwait
iret
mov
add
inc
addr16
mov
pop
pop
jl
leave
ss
jb
insb
jo
in
mov
cmp
cltd
jne
mov
enter
repnz
xor
and
jmp
jge
sub
cmc
xchg
inc
mov
inc
or
cwtl
das
sbb
sbb
add
push
ljmp
je
aam
mov
cmp
fildl
push
rcl
push
mov
dec
lea
in
push
adc
lret
cltd
or
test
push
insb
gs
stos
out
xchg
pop
or
pop
movsl
lds
adc
mov
sahf
inc
pop
aas
inc
pusha
and
fsts
push
scas
dec
subb
cwtl
in
sub
mov
popl
scas
pop
inc
pusha
rcll
adc
push
xchg
lea
cltd
adc
sahf
push
xchg
test
loope
adc
jbe
cmc
enter
or
stos
arpl
int
dec
jo
pop
outsb
lcall
push
inc
dec
loop
bound
shl
negl
jnp
xor
add
xor
jmp
insb
add
ds
call
iret
lea
dec
pusha
in
push
xor
cmp
xor
lods
push
jl
testb
test
es
jge
arpl
out
iret
mov
mov
adc
pusha
int
cli
sarb
cmp
and
hlt
int3
movsb
leave
mov
imul
loope
push
cmp
push
add
inc
xchg
cmp
popa
add
ja
shl
push
xchg
mov
sub
das
imul
mov
fidivs
xor
cmc
inc
adcb
ror
jg
rcrl
pop
adc
push
dec
adc
fcoml
sbb
lock
add
or
adc
xor
pop
mov
call
push
or
shr
push
stc
pop
fnstcw
and
push
jmp
shll
mov
lds
sub
adc
daa
pop
jecxz
stc
repz
pusha
scas
stos
pop
out
scas
xchg
dec
mov
mov
or
in
add
ret
sti
mov
inc
scas
mov
nop
dec
dec
adc
fdivrs
roll
loope
jg
jns
int3
es
mov
sbb
push
lds
pusha
or
xor
inc
dec
rcrl
inc
in
xchg
ljmp
jl
test
mov
jae
sqrtps
sub
fnstsw
sbb
and
mov
xchg
jns
and
pop
xor
dec
cmp
inc
pop
and
push
fcmovbe
cmp
mov
or
js
xor
jno
jnp
ja
and
mov
add
xchg
add
mov
loop,pn
xchg
cltd
pop
jo
mov
push
test
cmp
out
sub
cmp
mov
frstor
faddl
mov
xchg
push
pop
push
or
jne
push
add
jmp
xchg
shl
lods
mov
divl
test
cmpsl
sbb
fcoms
imul
pop
and
lock
loope
repz
dec
push
xchg
imull
mov
xor
and
and
mov
or
scas
in
lret
adc
adc
enter
shlb
cmp
rorb
mov
or
jno
adcb
sub
clc
push
mov
sbb
scas
stos
out
push
sarl
cld
mov
lock
jne
xchg
mov
and
or
cmpsl
cltd
int3
push
testl
cmpsl
add
test
push
adc
call
jo
adcb
mov
js
xchg
loop
jmp
sbb
push
inc
xor
and
sbb
xor
movsl
add
or
loop
rolb
cwtl
es
cmp
aad
leave
sub
push
jmp
xchg
popf
fmuls
in
and
dec
call
jns
loop
rcrb
js
dec
mov
enter
cwtl
jbe
ja
xchg
sub
repz
adc
outsl
neg
mov
dec
or
add
add
mov
pusha
push
sbb
add
outsl
push
orb
cmp
sub
lcall
movsb
add
mov
daa
int3
dec
in
notb
inc
ja
aaa
xor
test
out
pop
ja
xor
es
push
data16
jecxz
out
sub
cmp
dec
dec
add
pop
clts
or
adc
cmc
cmc
and
sbb
idivb
cld
pop
xlat
xor
dec
jg
stos
jp
out
fnstsw
push
cmp
xchg
addr16
mov
sbb
in
lods
sub
testb
mov
lahf
aaa
repnz
rcll
lret
lods
outsl
xchg
cli
push
jecxz
pop
in
xchg
addr16
repnz
or
or
lods
xor
daa
leave
into
js
aaa
stc
ja
xor
insb
xchg
xor
je
and
lcall
leave
in
push
push
rcl
jb
xchg
lods
fsubrp
mov
lock
bound
shll
test
mov
pop
sbb
icebp
cmp
pop
cmpb
inc
or
les
mov
fldln2
out
dec
mov
push
push
int
pop
jl
in
sub
out
cltd
and
inc
shrl
in
outsb
xor
aas
sbb
bound
dec
mov
jge
cmp
pop
cmp
sti
xor
punpckhbw
adc
outsb
jp
jp
in
or
xchg
sbb
mov
sbb
ds
iret
getsec
inc
dec
and
repnz
cmp
cltd
and
pop
adc
jae
negb
push
xor
out
pop
jecxz
dec
test
pop
es
rolb
pop
pushl
mov
lock
dec
cs
pop
movsl
cmp
add
es
mov
add
jle
das
cmp
lret
pop
mov
test
jbe
mov
fiadds
mov
pop
add
dec
int3
mov
and
add
inc
mov
dec
in
adc
fcoms
pop
fldt
shlb
icebp
scas
dec
add
mov
and
ret
cmp
xchg
fs
add
daa
adc
and
cmpsb
add
lea
lods
lds
or
xor
sti
imulb
ljmp
mov
xor
fwait
int
or
mov
enter
mov
adc
mov
shr
in
iret
stc
sqrtps
push
lret
stos
xor
add
pop
ret
mov
push
loopne
push
pop
dec
adc
mov
cmp
or
insl
pushf
xor
xchg
out
mov
fwait
xchg
mov
icebp
and
xlat
sar
shlb
mov
fcompl
and
aam
push
fstpl
test
jge
sbb
jo
add
aad
mov
cli
std
inc
jecxz
dec
fneni(8087
push
dec
test
mov
insl
test
js
bound
push
or
mov
dec
push
add
pop
jae
inc
adc
push
aaa
inc
fwait
xchg
cli
mov
test
xchg
scas
fsubrl
fsubl
arpl
nop
mov
mov
sub
stos
mov
cvtps2pd
dec
scas
outsl
loop
push
fmuls
mov
add
mov
lret
icebp
bswap
loopne
ds
jbe
sbbl
lock
push
inc
xchg
or
add
mov
inc
mov
sub
andb
xchg
and
cmp
pop
dec
jp
into
lcall
mov
shlb
insl
pop
add
scas
sub
test
adc
mov
data16
mov
xor
out
lods
out
adc
inc
mov
ret
cmp
das
std
mov
rolb
pop
hlt
xchg
insl
xchg
add
popa
lods
push
icebp
aaa
pop
jnp
mov
fidivrs
mov
dec
repz
xchg
jge
xchg
xor
xchg
mov
add
mov
lcall
inc
pushf
test
gs
call
xchg
sbb
int
pop
push
xor
add
sub
into
pop
and
sub
stos
leave
sub
push
cmp
int
jo
xor
mov
push
mov
pop
sub
pop
xchg
scas
fs
popa
mov
int
pop
arpl
mov
push
movsb
mov
cmp
loope
or
popf
dec
fimuls
pop
sahf
push
xor
lods
icebp
xchg
cmp
ss
pop
pop
lahf
mov
push
sub
sbb
sbb
clc
and
scas
and
mov
sbb
ss
std
mov
inc
and
and
scas
adc
jo
mov
mov
pop
outsb
adc
cmp
leave
imul
inc
aaa
jl
sub
push
mov
shll
adc
fcom
mov
add
bound
cmc
dec
ljmp
test
sbb
shlb
call
push
inc
xor
or
fisubl
int3
mov
pop
dec
xchg
mov
sub
push
mov
mov
repz
lcall
out
les
popf
pop
hlt
cmp
jnp
mov
in
and
repz
test
fdiv
xor
lcall
mov
int
pop
cmp
out
xor
lds
and
aam
dec
repnz
adcl
aad
mov
xor
or
insb
push
lcall
mov
mov
pop
sub
leave
and
or
push
dec
add
mul
mov
add
daa
shrl
add
dec
std
rorb
or
add
pop
les
test
xchg
fsubl
push
fisubrl
fnstenv
pop
sub
ror
or
in
mov
fs
pop
sbb
dec
push
inc
fmuls
xchg
adc
aam
idivl
mov
rclb
dec
pop
push
js
iret
je
xchg
jge
xchg
rcrb
lods
aas
jecxz
cmp
cmp
add
xchg
pop
inc
pop
lods
repz
cmc
arpl
cmpxchg
jmp
pop
push
pop
push
aaa
xchg
dec
out
push
call
das
xor
jl
shll
adc
repnz
fsubl
out
int3
inc
mov
cmp
cmp
mov
imul
sbb
notl
dec
inc
sar
js
test
out
jecxz
xchg
lahf
shr
pop
fcmovu
xchg
adc
xchg
cmpsb
add
fisubrl
mov
jns
mov
scas
pusha
push
jo
into
arpl
mov
dec
inc
movsb
sub
test
ret
push
dec
mov
lea
insl
xlat
jmp
test
orb
adc
cwtl
xchg
inc
aas
push
cmp
and
sbb
inc
xor
push
nop
inc
subl
mov
imul
or
fld1
xor
popa
jo
arpl
and
outsl
pop
cmp
xchg
sub
aas
mov
dec
sub
vcvttsd2si
dec
aaa
imul
mov
pop
adc
dec
hlt
clc
jl
testb
jecxz
mov
and
sub
or
xchg
push
shrl
xchg
jp
and
push
test
lret
sahf
xor
xchg
and
fcomp
add
roll
les
add
and
inc
fdivl
nop
mov
insl
int
xor
adc
std
fcoms
or
mov
hlt
out
mov
xchg
cmpsl
add
daa
lret
mov
jmp
adc
lods
repnz
inc
adc
xchg
xchg
cmp
xor
insl
repz
fldt
xchg
mov
jge
inc
test
mov
cmp
mov
mov
jnp
pop
mov
outsb
and
addl
cli
faddl
sub
pop
inc
sahf
inc
imul
jl
push
lea
fsub
jns
fistps
xlat
pop
addr16
push
xchg
xchg
adc
dec
pop
pop
mov
push
mov
push
sub
sahf
das
push
xchg
jmp
outsl
inc
hlt
into
mov
in
in
aas
lock
call
sar
sti
daa
inc
xor
int
and
jle
or
add
mov
insl
loope
sub
sbb
dec
jb
popf
sbb
adc
xor
add
pop
jno
lock
imul
and
mov
xchg
xor
out
add
mov
inc
inc
mov
les
pop
sbb
enter
loop
cmp
sbb
lea
cmp
addl
in
fildl
jno
mov
or
leave
mov
sub
mov
cltd
sub
daa
push
jno
and
dec
or
adc
int3
je
mov
iret
faddl
leave
clc
mov
mov
outsl
add
into
fisttps
or
or
mov
or
and
test
xchg
imul
lcall
lret
andb
pushf
pop
sub
push
cmpsb
fadd
lahf
add
imul
push
or
add
push
mov
or
adc
scas
clc
push
jle
movsb
cmp
ds
fcomp
cmc
int
shrl
xor
inc
arpl
gs
sti
lahf
test
std
dec
aad
or
jne
sub
xchg
sbb
int
push
lods
fistpl
imul
adc
and
mov
test
pop
xchg
cmc
sbb
or
add
fdivs
enter
shll
adc
cmp
lcall
cmp
outsl
jge
ret
mov
push
mov
lods
adc
push
cs
mov
repz
and
mov
sbb
pop
enter
ret
repz
cmp
mov
into
dec
dec
enter
adc
push
push
push
dec
and
jmp
daa
jnp
push
jl
lea
inc
xor
and
bound
popa
inc
xchg
popa
sub
mov
add
cmpsb
or
inc
adc
in
add
test
movl
stos
stc
xchg
out
xlat
lea
adc
call
inc
jecxz
fsubr
or
inc
xchg
push
mov
mov
cs
aad
mov
pushf
leave
gs
cmp
ja
cmc
in
hlt
xchg
push
enter
mov
in
outsl
imul
xor
xchg
adc
iret
cmp
cld
push
aam
jp
inc
loop,pn
jle
hlt
sub
mov
or
aad
repnz
xlat
inc
mov
push
imul
les
ja
sub
add
mov
loope
sub
iret
leave
and
inc
cmp
cmpb
mov
cs
lret
jae
lea
loope
dec
push
sbb
notb
sbb
jae
or
scas
mov
inc
aam
fnsave
clc
bound
addr16
xor
pusha
cmpsl
jl
push
dec
cmp
sub
roll
jbe
sbb
fwait
sub
sbb
jae
lret
lahf
ja
out
faddl
push
or
dec
cmp
ljmp
outsb
cs
add
js
ljmp
in
sub
fisubrs
inc
div
cmpsb
inc
gs
mov
push
pop
sub
repnz
dec
cmpsl
je
xchg
rcrb
push
or
lret
push
mov
pop
jmp
or
cmp
rclb
lods
xor
stos
sbb
lahf
fists
push
das
bound
pop
ljmp
imul
mov
sbb
jp
and
mov
xchg
inc
test
cli
insb
and
sub
addl
add
or
push
dec
xchg
mov
adc
xor
fisttpll
mov
fldt
shr
addr16
push
leave
jb
jecxz
in
mov
jno
mov
xchg
cmp
mov
inc
jecxz
lods
dec
shrb
leave
push
dec
jno
sbb
imull
scas
push
pusha
push
add
fdivs
iret
in
pop
mov
out
stc
outsl
in
dec
pop
sbb
push
adc
push
sub
mov
movsb
xchg
cli
sub
repnz
adc
aas
scas
adc
jl
fnstcw
dec
jge
shll
jb
lret
sub
out
outsl
arpl
mov
adc
sbb
or
jnp
xchg
std
movb
stos
push
fsubs
sarb
mov
pop
mov
mov
rolb
mov
insb
bound
xor
cmp
pop
imul
jp
jnp
int
inc
ss
fldcw
cmp
jle
lcall
sub
mov
cld
mov
aad
add
leave
imul
clc
cmp
clc
iret
in
imul
jp
inc
adc
inc
jp
daa
and
std
aad
sahf
jg
fnstenv
mov
stos
sub
mov
push
adc
inc
pop
cmpl
mov
lods
xchg
std
les
jo
pop
nop
dec
mov
into
pop
aad
mov
mov
addb
mov
mov
cmp
cwtl
mov
sub
je
sub
mov
dec
cwtl
mov
aam
out
out
in
jne
jp
inc
push
sub
mov
pop
in
or
cmp
int
dec
clc
sub
pop
lods
pop
xor
les
rcrl
push
shrb
test
dec
popf
push
push
std
mov
movsb
inc
notb
jb
enter
lods
xchg
adc
inc
in
xor
mov
xchg
aaa
adc
rcr
jl
mov
icebp
outsl
loop
inc
std
inc
xor
mov
stc
add
outsl
pop
in
loop
push
or
add
stos
mov
sahf
inc
jp
outsb
stos
mov
aad
out
mov
xor
incl
push
out
out
dec
ficompl
sbb
nop
and
jae
adc
mov
sub
add
fcmovbe
loopew
xchg
imul
xor
rcll
xchg
fldenv
test
data16
push
pop
add
cwtl
pop
mov
rcll
push
loopne
and
out
or
jmp
jo
leave
ljmp
lea
movsl
xor
cs
loopne
fidivl
add
xor
xchg
sub
push
push
stc
adcl
mov
add
and
fdivs
inc
jecxz
jo
lahf
in
bound
jge
sbb
jns
push
shrb
adc
jae
insl
sbb
sbb
addb
icebp
xor
inc
dec
mov
and
test
xor
test
sub
mov
ds
inc
fsubs
out
std
lret
sub
fnstenv
cmpsl
inc
inc
jecxz
lods
ds
and
or
add
and
adc
or
xchg
push
add
bound
pushf
cmc
mov
add
mov
or
jmp
jl
test
and
jg
loopne
add
cltd
jmp
jne
shlb
sub
jae
lcall
into
ja
lea
dec
fisttpl
das
dec
in
jecxz
jecxz
xchg
icebp
mov
push
iret
sar
lods
sarb
or
sbb
push
push
shrl
dec
ret
sbb
cmpsb
pop
xchg
push
in
mov
outsb
pop
adc
xchg
xchg
and
cmpl
fmulp
pop
shlb
jnp
mov
jbe
mov
in
sub
inc
enter
notl
jbe
sbbb
adc
inc
push
leave
pop
sub
std
mov
inc
out
and
mov
hlt
push
push
pop
lcall
lods
add
std
xchg
das
or
cmp
pop
loop
std
sti
jg
test
mov
or
jnp,pn
js
add
jae
cmp
cmp
fisubl
sbb
out
xchg
jge
or
push
push
dec
cs
loopne
inc
pop
and
sbb
aam
aam
mov
pop
adc
pop
js
sbb
aaa
imul
iret
andl
inc
arpl
adc
dec
lods
mov
pop
mov
outsl
mov
add
mov
mov
lock
std
push
fcompl
movl
mov
mov
xchg
stos
das
xchg
popf
in
data16
dec
fwait
cltd
popa
or
cmp
mov
adc
jl
xchg
addr16
add
xor
pop
ja
pop
lea
movsl
jno
dec
mov
mov
jnp
daa
or
mov
adc
mov
xchg
xchg
mov
out
mov
dec
push
add
jnp
insl
mov
jl
xor
test
cwtl
imul
and
push
pushl
cmp
aad
lret
pop
sbb
in
in
push
jb
ljmp
aad
inc
out
in
mov
push
cmp
ds
jo
xchg
jecxz
cs
xlat
push
loopne
xchg
icebp
lret
adc
scas
cmp
cs
sbb
lods
fwait
into
mov
jp
adc
push
xchg
imul
loope
fisttpl
outsb
adc
jbe
mov
int
rcrb
mov
mov
lods
int3
bound
push
add
ss
inc
jb
stos
adc
adc
xchg
cltd
in
clc
es
push
scas
xchg
or
push
jge
jg
jne
adc
sub
or
mov
sub
pop
fsubr
mov
arpl
or
inc
add
fcos
mov
jge
push
add
out
sbb
lds
or
adc
sub
aaa
fs
mov
jnp
sub
mov
or
popf
iret
fadds
jg
mov
pop
inc
in
nop
pop
orl
xlat
jle
push
out
sub
bnd
dec
or
cmpsl
mov
sub
push
jno
cmp
inc
fistpl
rcll
mov
or
gs
mov
pop
sar
cmp
out
push
dec
ret
xor
daa
and
repz
sbb
mov
add
push
cltd
pop
jb
or
mov
pop
cwtl
leave
mov
pop
loopne
aad
jne
sarw
icebp
negl
leave
lock
loop
rcrl
pop
leave
pop
push
push
shl
sahf
ja
xor
push
and
inc
xlat
and
mov
test
cs
imul
daa
mov
dec
xor
sbb
dec
aas
dec
outsb
pop
dec
push
jae
dec
or
daa
sub
mov
loope
jp
repnz
fsubs
mov
lret
add
or
push
xchg
mov
pop
xor
jge
pop
xchg
aam
jae
out
sbb
out
ret
push
sub
push
loope
add
pop
inc
push
adc
gs
call
insb
popa
movsl
or
ret
out
jo
in
pusha
xchg
std
pop
xor
and
push
mov
rorb
cmpsl
mov
fcoms
aas
xor
cmp
dec
push
push
scas
cmc
jne
mov
insl
cwtl
std
jmp
dec
aad
sbb
cmp
dec
mov
pop
or
imul
jmp
ss
inc
sub
ds
dec
xor
cli
pop
pusha
aaa
idivb
leave
mov
pop
mov
pop
clc
dec
pop
push
scas
divb
inc
jp
sub
repnz
orl
icebp
imul
cmpsl
xchg
movsb
mov
xor
and
mov
pusha
adcl
xchg
jmp
int
arpl
rolb
fisttpl
xor
mov
inc
std
pop
push
cmp
xor
xchg
repz
dec
nop
pop
call
lret
pop
xchg
insb
repnz
rcrb
iret
push
fcomip
popa
cmpsb
sub
add
add
xchg
mov
in
aas
xor
cld
inc
addl
jae
mov
mov
mov
aad
and
lds
testb
pop
add
popa
es
inc
addb
xor
out
or
push
mov
jne
jae
enter
int
cmp
pusha
pop
mov
loop
in
call
in
je
mov
push
inc
fcompl
test
push
cmpsl
dec
push
aam
test
mov
adc
lret
mov
and
int3
jns
jg
insl
mov
adc
dec
add
sub
pop
clc
and
jecxz
pop
test
data16
or
out
stc
movsb
fldt
inc
inc
jbe
les
push
clc
adc
adc
mov
dec
push
add
rorl
jo
movsb
push
sub
dec
inc
jns
mov
cmp
aas
icebp
adc
lcall
iret
xchg
push
pop
jbe
ljmp
or
popw
sbb
in
popa
inc
sti
pushf
mov
scas
gs
cmp
and
pop
mov
pusha
jb
xchg
adc
cmp
pop
dec
lock
xchg
cltd
mov
ror
push
aaa
test
cld
inc
push
cmp
out
pusha
cmp
ss
scas
int3
jmp
jns
mov
out
and
lcall
inc
sti
jl
icebp
sbb
dec
out
xchg
out
loop
sbb
mov
loope
imul
loope
sub
fsub
pop
in
stc
xor
jo
scas
out
push
pop
adc
loop
push
scas
popa
repz
mov
mov
addr16
jno
push
xor
dec
sub
cmc
push
adc
fisubl
sub
sub
in
lods
shr
lahf
into
push
cmp
sbb
clc
jne
dec
push
jae
mov
sarb
cmpsl
movsb
mov
inc
or
cmp
sbb
repz
cmp
pop
dec
lret
loope
insl
loop
pavgb
fistpl
cmpl
orl
push
fists
repz
test
out
xchg
out
fs
sub
dec
mov
xor
fisttps
in
out
inc
cmpl
and
popa
ja
and
mov
aaa
test
adc
arpl
dec
cmp
xchg
repz
push
das
sahf
call
aam
jo
shl
dec
jo
cli
clc
addr16
clc
jge
shlb
js
and
xchg
aas
push
adc
fcoml
push
xchg
add
fwait
std
cld
sub
sub
fimull
inc
inc
rorl
repz
iret
mov
lds
je
mov
out
mov
inc
inc
gs
jecxz
testl
cs
lret
clc
pop
into
xchg
loope
cmp
cmp
mov
mov
adc
cmpsb
out
dec
rorb
jp
dec
test
sti
out
cmpsl
push
ljmp
fwait
in
mov
xchg
scas
rcll
dec
movsl
pop
ret
cmp
push
or
and
gs
mov
fstpl
icebp
and
mov
pop
push
inc
stc
cli
mov
aad
test
adc
in
ds
and
cmpsl
fsubrs
call
mov
add
inc
aam
loopne
rolb
lea
pop
imul
imulb
pushf
or
adc
mov
lods
in
add
fcmovu
test
int3
out
sub
nop
push
xchg
lods
and
mov
dec
or
xor
mov
ja
mov
mov
roll
xchg
and
mov
daa
loope
je
jnp
pop
adc
lods
dec
rolb
mov
mov
mov
mov
stos
cmpb
icebp
pop
mov
pop
mov
mov
jl
shrb
aaa
loop
ljmp
cmp
mov
pop
int
mull
cmpl
pop
dec
dec
test
jge
sarl
push
cmp
in
sub
movsl
imul
aas
fldcw
in
mov
push
or
sbb
adcl
mul
jl
loop
mov
sbbb
jle
mov
dec
dec
in
xlat
out
cmc
mov
das
sti
lcall
cltd
js
frstor
add
push
add
loope
stos
or
into
mov
sub
ss
jae
jbe
dec
lcall
cmp
fsubrp
or
xchg
lds
sbb
sbb
pop
mov
cli
aad
in
orb
jg
inc
push
pop
pop
dec
add
test
clc
fwait
xchg
ljmpw
push
bound
out
lods
or
out
sbb
dec
jns
pop
test
rsm
ss
and
inc
out
sbb
pop
lea
push
inc
std
jl
call
mov
mov
aam
nop
adc
mov
cmpsb
cwtl
clc
popa
repnz
jnp
adc
pushf
bound
lcall
push
lret
cltd
mov
xchg
mov
test
loope
out
mov
cmpsb
mov
adc
imul
aad
or
scas
sarb
adc
add
and
add
pop
xchg
not
mov
outsb
or
cmc
pop
pop
loop
xlat
mov
pushf
jge
bound
adc
mov
push
sbb
lret
stos
push
cmp
sarb
mov
outsb
jnp
jae
or
and
xor
jecxz
fldl
std
fs
cld
ja
cli
hlt
lahf
cvtps2pi
daa
js
push
pop
push
mov
fwait
and
stos
cmp
pop
ret
pushf
add
cmpsb
loopne
call
test
imul
cmc
xchg
jbe
lods
icebp
sahf
push
lret
jns
or
imull
bound
sahf
andl
out
inc
jne
and
cmp
mov
xchg
mov
insl
lds
movsl
cmp
fbld
jae
jo
push
stos
xlat
lods
stos
adc
dec
cltd
add
or
dec
xor
mov
cmp
dec
test
and
fsubl
mov
cmp
lret
xchg
imul
push
push
lods
leave
jge
pop
mov
setle
popf
aas
clc
inc
xor
add
sbb
or
xor
inc
in
jle
lret
xor
mov
lahf
out
gs
pop
ror
mov
sti
pop
test
pop
leave
xchg
stos
cmp
test
mov
adc
fs
je
mov
stos
mov
or
pushf
dec
aas
jns
xor
push
or
jecxz
call
int
addl
push
pop
out
lahf
dec
pop
fidivs
ret
mov
or
xlat
pop
mov
lock
fisubrs
mov
mov
jo
cwtl
inc
or
sbb
mov
jecxz
adc
imul
sub
jmp
xor
xor
mov
pop
fs
fwait
mov
xchg
pop
mov
loopne
push
lret
ret
inc
sbb
and
mov
inc
and
testl
sti
lods
jl
bound
cwtl
adc
hlt
xchg
sbb
std
loopne
jp
pop
out
ja
jp
push
dec
add
mov
xchg
pop
xlat
jnp
neg
adc
push
dec
cld
stos
mov
pminsw
dec
mov
mov
push
mov
add
mov
and
mov
icebp
jnp
fisttpll
adc
shll
xor
lock
out
add
fisubs
push
clc
add
shlb
es
jb
xorb
icebp
mov
rolb
lods
ja
adc
jg
lods
mov
xor
dec
lcall
shll
mov
cmp
arpl
mov
mov
ljmp
movsl
rsqrtps
mov
xchg
popa
aam
sub
push
andb
lahf
das
adc
mov
cltd
mov
jmp
inc
jns
int3
pusha
or
mov
arpl
cmp
adc
ss
xchg
loopne
in
icebp
adc
mov
shrl
iret
sbb
in
movsl
sbb
add
cmp
jns
jb
or
jge
sub
jne
in
xchg
mov
dec
adc
or
sub
xchg
xor
sbb
and
pop
cli
aam
xor
aaa
les
mov
push
or
in
and
pop
lret
cli
or
adc
out
rorb
aaa
bound
sbb
jl
mov
rcll
adc
cmc
insl
xchg
mov
jb
sbb
mov
jmp
cmp
aas
pop
das
mov
lock
xchg
arpl
rclb
cmp
es
loopne
sbb
sbbl
mov
out
xor
std
inc
pushf
sahf
xor
aam
sub
jne
pop
imul
jge
mov
ds
cltd
push
mov
enter
cmp
jmp
mov
arpl
or
xchg
sti
or
add
int
out
inc
rorl
je
loop
add
dec
mov
mov
mov
out
push
pop
mov
adc
je
xchg
xchg
call
cltd
jg
push
rcrb
xor
mov
mov
xor
jmp
jne
ljmp
sbb
add
add
sahf
lahf
and
jmp
clc
jne
cmpsl
clc
inc
clc
imul
into
mov
inc
imul
loop
mov
mov
xchg
or
or
loopne
test
arpl
mov
stc
adc
xorb
adc
outsb
cltd
lods
mov
sub
ret
or
cmp
dec
negb
push
cs
call
or
leave
outsb
stos
jns
jb
pop
sbb
in
loope
outsl
std
cmpsl
imul
cmp
cwtl
cmp
roll
cmpsl
add
andb
jl
in
inc
jno
bound
push
out
mov
mov
push
cld
shl
mov
aad
loop
movsl
jp
outsb
jne
jecxz
mov
push
mov
mov
sub
xor
fisttpll
je
jb
jns
inc
aas
push
xor
std
insb
pop
fists
pop
out
bound
mov
pop
inc
or
cmp
das
pop
and
mov
cmp
loope
fildll
mov
cmp
push
adc
dec
mov
cmpsb
push
jle
push
gs
sbb
mov
pop
rcrl
xor
xchg
stos
pop
xchg
dec
cmp
sbbb
inc
popa
in
add
mov
or
pop
xor
fisttpll
scas
pop
jl
mov
shrl
movsl
sbb
cmp
or
stc
jns
push
daa
adc
ds
inc
sub
fs
adc
popf
push
adc
mov
aam
xchg
sahf
push
cmp
shrl
adc
ret
adcb
pop
cmp
lahf
icebp
push
orb
xor
pop
fs
lret
inc
dec
je
mov
sub
push
popf
jbe
dec
cld
mov
jge
or
ljmp
inc
mov
lods
cmpsl
mov
lods
dec
jnp
ljmp
das
sub
outsb
sub
mov
in
mov
shlb
lea
xchg
int3
jl
imul
push
jmp
loop
jb
repz
jp
inc
loope
mov
rcll
pop
aad
or
inc
mov
and
xor
hlt
hlt
or
stc
mov
cmpsb
out
aas
cmp
test
pop
mov
or
movsl
std
fbstp
sbb
mov
outsl
das
add
sbb
cmc
sub
mov
xchg
rcl
int
outsl
lds
sbb
jnp
std
sub
push
mov
mov
push
mov
add
fwait
iret
jae
les
int3
cmpl
gs
stos
fisubs
jns
je
or
xchg
sub
lods
sub
rcll
aaa
push
bound
mov
iret
adc
jae
jge
mov
push
mov
movsl
les
jge
fldcw
and
xchg
loop
loope
jo
fldl
mov
arpl
inc
dec
pop
mov
icebp
or
sub
and
addr16
cmpsb
or
das
leave
out
push
addl
and
push
les
jge
mov
stos
pop
push
sbb
test
or
gs
int3
orb
dec
mov
movsb
adc
cmpb
fisttpll
push
mov
xchg
sub
pop
pusha
comiss
push
loop
cmpsb
jp
dec
cmpsb
je
pop
pop
je
and
xchg
lods
insb
push
push
mov
push
dec
dec
sarl
cwtl
mov
or
xchg
shlb
add
pusha
rcll
add
or
in
test
aam
in
inc
daa
inc
mov
sahf
pop
data16
cs
clc
lods
inc
mov
call
cmp
call
imul
mov
out
pop
mov
jg
mov
mov
rcrb
pushf
cmp
test
cltd
jp
and
pop
movsl
ljmp
pop
mov
pop
pop
sub
pop
test
icebp
addr16
dec
loope
xlat
and
mov
xchg
lds
stc
in
push
xchg
xchg
mov
lret
sub
mov
lahf
lock
subl
frstor
arpl
in
jecxz
adc
jne
and
adc
stc
mov
xchg
rorl
daa
data16
dec
push
pop
xor
sub
jae
inc
mov
pusha
sub
roll
clc
jno
sub
sub
xor
lock
add
mov
mov
or
inc
mov
in
pop
and
mov
sahf
cltd
pop
push
or
jge
bnd
iret
cmp
lods
sub
je
xchg
js
jne
in
xchg
add
sub
repnz
xor
imul
daa
dec
xchg
mov
cmpsl
jecxz
mov
shl
and
mov
push
fdiv
cmp
rolb
bound
and
sahf
pop
insl
push
add
sete
repnz
and
lahf
arpl
adc
push
mov
xchg
inc
sbb
test
icebp
sub
iret
arpl
mov
out
mov
xor
push
out
mov
mov
sub
or
int3
clc
mov
inc
fisubs
pusha
sub
or
fpatan
popa
push
lods
push
pop
lods
lcall
sub
adc
scas
mov
push
scas
push
jae
xor
and
scas
repnz
test
mov
les
inc
mov
outsl
test
xchg
lock
stc
pop
push
add
mov
fs
pop
xor
xor
or
cmc
fwait
aam
and
ret
leave
out
or
mov
cmpl
lock
dec
adc
dec
shrb
inc
outsb
loop
push
int
lds
inc
rclb
dec
push
cmp
mov
fs
addb
jecxz
loopne
sti
les
pop
fiaddl
jge
hlt
je
xor
mov
fildll
int
jae
lds
or
cmc
pop
pushf
push
in
test
xchg
or
push
pusha
test
and
mov
cmp
cltd
pusha
jbe
add
and
xlat
addb
dec
lahf
daa
jmp
and
jge
xor
repnz
xchg
rclb
dec
fwait
stc
or
push
mov
loope
je
jl
fldl
fwait
loop
mov
in
aaa
sub
in
data16
test
mov
jno
adc
dec
ja
adc
dec
jne
cmp
fs
pop
add
test
mov
popa
mov
outsb
loop
in
mov
ds
inc
outsl
xchg
inc
xchg
sahf
lret
cs
jno
hlt
call
add
loop
jo
mov
lods
inc
adc
inc
or
in
pop
movsb
jle
call
jae
punpckhwd
mov
jno
stos
das
bound
lret
insl
rcl
fs
notb
jns
mov
jecxz
mov
and
iret
jg
sub
aad
push
cmpsb
movaps
pop
aaa
movsb
push
dec
inc
and
or
shlb
in
or
idivb
sub
in
jns
out
repz
cltd
fisubrl
cmp
push
mov
push
lds
leave
dec
lods
pop
add
fimull
cmpsl
fidivs
xchg
pop
xlat
adc
stos
mov
push
shlb
cltd
jle
pop
mov
imul
in
xchg
fs
sub
add
xchg
dec
cmp
jge
lret
sqrtps
jmp
cmp
je
daa
ret
pop
sub
pop
movsl
outsl
lea
or
dec
inc
xchg
jnp
jno
push
mov
adc
xor
or
add
cmp
int3
imul
mov
jae
jecxz
mov
cs
scas
lds
cmp
mov
jl
std
stc
inc
inc
imul
inc
aas
xor
jl
jne
mov
cmp
pusha
cmp
fisubl
sbb
fcoml
sbb
lcallw
icebp
and
mov
jmp
push
into
icebp
push
insb
sub
push
loopne
mov
pushf
fdivl
ljmp
pushf
adc
jmp
cmp
popf
push
int3
mov
add
inc
scas
scas
daa
ja
jo
push
loopne
or
mov
cli
aaa
push
int
rcr
mov
mov
mov
dec
bound
and
mov
lret
into
fdivr
cmp
mov
sbb
and
roll
xchg
imull
sub
mov
leave
loope
lea
mov
int3
cmp
mov
jge
fs
mov
lcall
aam
and
cmc
mov
pop
into
int3
imul
jne
dec
nop
cmp
orb
jecxz
movsl
test
mov
xor
sbb
gs
fmull
fisttpl
adc
jne
sahf
jne
in
test
add
mov
in
outsb
sbb
fwait
xchg
cmc
lcall
movl
push
or
inc
mov
mov
loopne
push
leave
icebp
fnstenv
rcll
lahf
mov
and
add
xchg
xchg
lock
stc
lcall
mov
imul
out
aaa
fcmovb
push
mov
enter
clc
pushl
pop
adcl
xor
nop
and
xor
gs
xchg
lods
fnstenv
xchg
dec
inc
andl
inc
sub
in
push
ret
unpcklps
out
in
movsl
call
call
xor
xchg
imul
pop
loop
les
mov
add
pop
dec
nop
xchg
adc
adc
aas
popa
inc
pusha
in
fcoml
outsb
cmp
sub
add
and
fnstenv
mov
movsb
call
dec
add
dec
xor
sbb
cltd
dec
call
lock
gs
shr
ret
int
aad
dec
popa
cmpsb
lea
jo
sub
fxch
pop
inc
xor
imul
lea
loope
push
jno
testb
decl
cmp
cwtl
and
cmp
xor
cli
out
out
push
add
pop
mov
push
xchg
lcall
out
pop
inc
std
jge
or
fs
inc
cld
jnp
aam
lret
add
jns
sbb
and
in
push
adc
inc
pusha
adc
push
push
push
mov
push
mov
sub
jmp
push
pop
in
lods
inc
shll
cmpsb
lret
cmpsb
in
pop
mov
int
scas
addl
dec
aam
or
cltd
pop
jne
testl
and
fldenv
fnsave
mov
add
test
js
sub
sbb
in
xchg
inc
jl
mov
rorb
subl
jmp
lods
jae
push
in
int3
int3
loopne
lods
and
clc
aaa
jb
jg
inc
jb
testl
xchg
popa
repnz
subl
push
xchg
inc
dec
sbb
sub
icebp
mov
pushf
pop
nop
cwtl
jnp
lcall
ret
or
add
dec
push
add
and
mov
jge
push
lret
test
dec
pop
push
popf
add
pop
ljmp
sbb
btl
jae
ljmp
pop
insb
add
xchg
repz
nop
xor
adc
ljmp
pop
filds
std
cmpb
cmp
mov
das
jge
push
push
pop
shr
int3
push
and
es
scas
jns
xor
jne
ja
sbb
repnz
data16
xchg
in
loop
xchg
mov
aas
add
aam
fldt
cmp
int
push
hlt
ret
push
nop
test
dec
pop
mov
insb
and
popa
sub
xor
xor
test
jno
and
jbe
jge
sbb
sbb
bound
add
mov
js
jnp
dec
ljmp
popf
movsb
clc
ret
sahf
faddp
lret
inc
mov
adc
dec
jmp
leave
push
jne
lods
dec
inc
sub
xchg
jb
xorb
push
scas
pop
std
add
adc
jb
and
and
mov
adcl
push
sbb
in
jge
jnp
inc
adc
jg
adc
mov
adc
mov
push
leave
rcr
mov
jbe
arpl
ds
and
cmpsl
push
clc
idiv
test
sbb
cmpsb
xor
push
ljmp
shll
or
sub
lock
fucomp
in
inc
pop
pop
fs
ljmp
cmovg
int
mov
push
call
push
in
les
mov
adc
pop
add
or
data16
movsb
std
dec
fnstenv
stc
adc
insl
pop
and
insl
mov
sti
ret
fsub
cld
test
adc
sahf
add
int3
mov
lock
adc
ds
ret
jno
aam
xor
or
mull
das
lret
test
rorl
xchg
mov
popa
pusha
jp
xor
dec
fs
jno
or
cmp
je
jmp
push
push
loopne
xor
movsl
aas
icebp
mov
outsl
repz
into
adc
outsl
int
push
sub
lret
pop
or
lcall
mov
inc
and
mov
into
shlb
sub
mov
leave
ret
sub
sahf
sub
les
es
movsl
pushf
push
xor
inc
out
and
aad
add
ret
or
pushf
lret
inc
out
jo
mov
mov
xchg
or
lock
mov
shrb
mov
pop
fldenv
xchg
arpl
sbb
inc
push
sbb
dec
lcall
inc
add
mov
call
mov
movsb
scas
sbb
fcmovnbe
mov
pop
cmp
mov
or
mov
fistpll
add
xchg
lds
movsb
push
and
add
imulb
dec
pop
xchg
push
fiadds
inc
daa
dec
jbe
scas
mov
mov
icebp
adc
scas
gs
or
loopne
addb
dec
pop
xchg
pop
mov
clc
jbe
cltd
inc
in
repnz
jne
sbb
cmp
imull
xchg
fnsave
sarl
or
xor
lods
inc
test
push
hlt
icebp
push
addr16
pop
or
dec
adc
push
adc
inc
add
sarb
or
jae
xchg
ds
jno
sbb
adc
cmp
dec
and
sahf
mov
pushf
enter
loopne
ss
inc
xor
pop
sbb
or
ret
mov
cmp
mov
rolb
inc
cltd
xchg
jnp
cli
mov
jle
in
xor
xchg
stos
mov
dec
mov
or
mov
scas
ficomps
mov
mov
daa
sti
clc
and
in
fstpt
icebp
and
jb
cmp
push
adc
push
mov
pop
rcrl
and
cmp
push
cmp
cmp
into
push
enter
imul
xchg
leave
imul
pop
adc
adc
add
shlb
pop
inc
rclb
sti
ret
pop
fisttpll
sbb
mov
stos
dec
insb
mov
add
push
and
repz
sub
push
sbb
daa
dec
int
mov
rcrl
add
mov
sub
push
bound
mov
jne
cli
mov
sub
fisubrl
bound
jmp
push
js
negl
insl
sub
inc
fsubrl
movsb
xlat
sbb
add
loop
js
xor
lds
push
icebp
xor
mov
adc
sub
outsl
sub
cltd
inc
inc
jecxz
add
jb
shl
xchg
mov
sbb
shlb
jmp
getsec
dec
je
scas
shlb
ljmp
jbe
gs
inc
das
incl
loop
enter
call
push
jno
daa
mov
iret
pop
ret
pop
jae
call
jle
or
cmp
sbb
push
xchg
out
xchg
sub
cmc
and
adc
push
sbb
mov
lds
inc
jns
roll
lods
orl
loope
repz
mov
push
lcall
push
mov
cltd
sub
jb
xchg
in
mov
pop
xor
std
sbbb
fisubl
dec
mulb
jb
xchg
ret
mov
arpl
mov
out
icebp
xchg
push
adc
inc
ss
sbb
push
mov
sbb
cmp
daa
add
mov
and
or
icebp
sbb
pop
rolb
and
lds
shl
int3
fisttpll
pop
sarb
add
push
add
sti
xor
xchg
out
out
sub
mov
cmp
and
into
cs
mov
add
or
mov
mov
adc
test
mov
push
int3
sbb
xchg
jecxz
sub
out
lods
push
sub
lret
roll
repnz
pop
mov
fldcw
call
pop
lahf
mov
fwait
mov
ret
adc
jmp
sahf
lcall
dec
jg
sbb
test
pop
xor
pop
sbb
aam
fisubl
push
cmp
jmp
push
popa
pop
push
lret
and
je
inc
fistl
je
inc
jb
adc
push
ret
adc
in
cmpsl
pop
lea
inc
jns
repnz
rol
or
xor
aaa
mov
rolb
outsl
test
pop
je
setb
xchg
mov
push
push
sub
jo
pop
aas
scas
add
adc
fwait
movsb
idivb
xor
push
adc
sahf
jb
fwait
rclb
rorl
les
das
hlt
enter
lcall
add
and
shll
adc
mov
shlb
push
add
sti
xchg
pop
pop
sbb
fisubl
and
inc
aad
xchg
bound
jns
lret
mov
nop
sbb
and
fcomps
xchg
push
mov
movsl
insb
mov
lods
sarb
mov
sub
pop
xor
das
lahf
add
mov
mov
icebp
push
nop
cmp
inc
sahf
xchg
addr16
add
out
cwtl
pop
gs
jo
movsl
mov
xor
je
pop
push
jo
xchg
movsl
sub
xor
mov
sbb
lret
sbb
imul
fs
or
and
dec
repnz
xchg
mov
dec
adc
imul
mov
fadds
in
leave
mov
divl
or
add
xlat
pop
fstenv
imulb
out
or
pushf
ds
and
mull
cmp
fdivrs
in
movl
jmp
popa
fisttps
loope
or
ret
fiaddl
or
add
inc
jmp
ja
xor
int3
stos
int3
les
decl
xor
rclb
ds
lret
adc
pop
xchg
mov
xchg
sub
insl
cs
lock
jno
jne
daa
xlat
dec
es
icebp
gs
popf
inc
arpl
cmp
xchg
xor
fistpl
dec
mov
call
scas
hlt
adc
jmp
pop
add
stos
jge
nop
or
scas
fwait
jmp
sub
mov
ja
sbb
fcmovne
jbe
dec
xchg
lods
je
or
loope
aad
mov
jge
xchg
xlat
jl
pop
pop
push
shrb
dec
add
movsl
sbb
stos
pop
mov
lcall
cld
xchg
mov
fildll
pop
push
bound
testl
dec
test
xlat
jo
jns
imul
sbb
mov
je
push
out
add
xor
cmpb
bound
dec
jge
cmp
pop
ds
stos
clc
add
mov
pop
xchg
mov
sub
cld
or
mov
mov
xchg
sub
je
mov
lock
pop
inc
into
out
inc
lret
inc
cmpsl
xor
mov
mov
stc
add
mov
repz
mov
rol
dec
cmp
pop
dec
popf
iret
mov
sbb
xor
mov
mov
xorb
in
lcall
sahf
imul
cmpsb
mov
icebp
xchg
mov
scas
out
jmp
sub
pop
dec
out
adc
ror
mov
mov
divb
in
cltd
data16
jo
push
in
rolb
cld
shrb
pusha
lcall
test
mov
or
bnd
inc
aas
pop
hlt
mov
inc
pop
pushw
pop
in
xorl
xchg
cmp
ror
ret
push
mov
ret
push
dec
rolb
inc
dec
call
jae
call
fnstsw
movsb
pop
inc
aas
stos
push
cmp
repz
or
fdivrs
inc
push
cmpb
lret
push
pop
jmp
sbb
dec
sub
loopne
cmpsb
mov
out
jns
inc
push
cmp
mov
ret
inc
xchg
shl
stos
fistpll
add
mov
mov
aad
jmp
or
popa
push
mov
pusha
mov
dec
sbb
aas
fwait
out
scas
aam
fimuls
shrb
mov
stos
pusha
sti
xchg
xchg
xchg
shrl
sbb
das
test
in
jmp
pop
imul
les
hlt
adc
scas
fisubl
sbbb
dec
sub
das
ret
adcl
or
imul
daa
cld
add
push
cmp
ljmp
mov
rorb
dec
pop
into
lds
xchg
sub
or
mov
jae
pop
xchg
fstl
xlat
sub
xor
pop
sbb
or
insb
pushl
sbb
leave
mov
icebp
out
push
js
divl
aad
cmp
out
jecxz
fidivrs
jb
in
cmc
jno
nop
or
sbb
dec
jne
jo
cmp
xchg
xchg
bound
and
divb
or
loope
sahf
and
or
sub
das
cld
lcall
rcrl
sub
in
xor
mov
or
mov
fwait
test
jbe
fmull
xchg
sub
leave
ror
pop
and
jne
cltd
movsb
js
repnz
add
iret
enter
pop
dec
push
pop
jnp
pop
pop
or
je
cmp
lcall
mov
cmp
xor
mov
enter
xchg
xchg
pusha
sub
imul
mov
xorl
jg
test
clc
mov
push
jmp
nop
mov
push
xor
xchg
jne
or
inc
push
sbb
adc
or
sahf
loop
cltd
repz
lret
add
jl
xchg
pop
push
subl
mov
sub
pop
push
xorl
xor
mov
ud1
xchg
cmpb
sbb
jg
inc
add
mov
repnz
mov
xchg
mov
fadd
insl
outsl
jecxz
imul
shlb
idivb
cmpsl
jmp
cmc
cmp
pop
ficoms
sti
jb
rolb
mov
ret
jl
add
int3
xchg
clc
pusha
out
dec
jne
xchg
or
jge
mov
xchg
dec
mov
sub
sbb
int3
loop
xor
pop
aas
mov
push
rcr
jge
mov
rcl
in
and
mov
sub
daa
in
ss
push
and
aas
inc
insl
mov
cmp
add
outsl
jecxz
or
lret
insl
frstor
lea
mov
xchg
pop
add
jecxz
cli
adcl
and
into
mov
dec
push
and
ljmp
xchg
push
adc
inc
inc
mov
sbb
loop
jns
add
mov
imul
out
test
adc
sub
cs
lahf
mov
out
adc
ret
push
push
pop
stos
dec
dec
mov
push
cli
and
mov
stos
mov
stc
stos
outsb
pop
lret
std
dec
cmp
mov
stos
movsb
in
sbb
mov
adc
push
das
add
in
in
loope
and
sbb
sbb
imul
test
sarb
notl
out
sbb
fadds
mov
mov
or
add
test
xchg
fsubrs
mov
add
adc
push
add
push
xor
push
lahf
pop
and
clc
ss
cld
in
xchg
dec
mov
mov
xchg
sub
sub
sbb
clc
xor
scas
rclb
push
push
and
fs
or
cmp
int3
out
nop
lcall
and
push
xchg
lahf
testb
in
adc
jmp
jecxz
sbb
pop
cmp
and
pop
dec
outsb
imul
mov
dec
jg
and
pop
push
add
fwait
ret
and
lret
clc
jge
xchg
arpl
mov
inc
pop
hlt
and
sahf
sarb
fwait
mov
add
add
enter
roll
add
jne
aam
rcll
add
and
xchg
imul
inc
repz
ljmp
push
or
jle
xchg
sahf
into
jno
xchg
pop
jb
mov
lock
mov
push
repnz
dec
lcall
idivb
sbb
popa
pop
sub
ljmp
cmp
fs
insl
jg
iret
sub
jno
cmp
cld
sub
pop
add
shll
mov
push
ljmp
stos
cmp
mov
fcoml
push
jp
scas
cmp
movsl
mov
repnz
mov
mov
xor
in
imul
iret
sbb
jg
xchg
jnp
or
repz
ja,pn
loope
jns
test
push
jmp
movsb
add
mov
push
insl
sbb
pop
mov
cmpsl
sub
jl
inc
mov
fisubrs
je
add
pop
and
push
jns
adc
mov
or
je
mov
stos
es
xor
bnd
add
jle
mov
gs
fmuls
mov
int
inc
pop
cli
fbld
pop
inc
ja
inc
addr16
inc
inc
mov
sbb
add
std
adc
cmpsb
adc
push
lock
mov
data16
jnp
mov
or
test
popf
inc
out
mov
ret
and
dec
mov
mov
inc
cmpsb
clc
xchg
movsb
ds
cmpsl
outsl
pop
fs
bound
and
fildl
jecxz
sbb
xor
xor
sbb
jns
xor
fxam
scas
mov
cmp
loopne
add
sbb
arpl
adc
popf
push
pop
add
mov
lcall
bound
out
test
adc
scas
dec
mov
push
int3
inc
mov
sbb
xor
dec
sti
out
loope
stc
movsb
imull
sbb
fimuls
pushf
or
mov
repnz
add
pushf
cmp
rcrl
jp
xchg
cs
pop
insb
leave
adc
push
mov
pop
stc
lods
shl
fwait
add
outsb
int
test
or
pop
push
lret
mov
insl
loop
jge
or
xor
shrl
icebp
pop
repz
cmpsb
pop
inc
push
adc
dec
in
push
pop
xchg
push
mov
add
and
insl
aas
psubd
aas
testb
sbb
fld
cmpsb
xlat
mov
xchg
jmp
push
loopne
into
insl
stc
push
lea
mov
ljmp
lds
test
mov
das
add
daa
xlat
loopne
mov
pop
negb
jp
insb
pushf
fxch
shll
mov
mov
push
mov
push
jmp
cmp
jbe
pop
pop
sti
icebp
xor
cmp
mov
pop
cmp
cmpsl
leave
adc
ficoml
adc
aam
jb
xchg
cmp
idivb
lods
test
and
mov
add
mov
push
fs
mov
xorb
cli
or
imul
andl
adc
jmp
jns
sbb
dec
inc
cmp
das
push
xchg
ss
nop
repnz
push
mov
xchg
icebp
insl
adc
xchg
sub
testb
movsl
fwait
jecxz
jg
arpl
inc
or
pop
inc
xchg
sub
xchg
iret
pop
hlt
mov
jne
aam
enter
push
mov
or
add
ret
mov
daa
xor
lret
and
jl
push
pop
loop
push
cmp
inc
repz
fbstp
je
dec
lods
into
in
sti
cmp
test
jg
hlt
aad
enter
and
mov
or
repnz
test
mov
outsl
and
pusha
xor
aad
push
xchg
xor
ret
jmp
or
pop
mov
dec
repz
cli
aaa
cmpsl
xor
push
jmp
scas
push
mov
cmp
dec
mov
pop
xchg
jno
xlat
cmpb
fdivl
testb
in
insb
ret
scas
adc
lea
repz
test
mov
pmaxub
cmc
pop
pop
pop
cmp
dec
lcall
and
pop
ds
lock
mov
insb
loop
xor
push
sbb
sahf
cli
or
push
sub
xor
loopne
out
mov
sub
loope
mov
ljmp
popf
inc
icebp
jo
sub
jg
loopne
xchg
nop
pop
sti
mov
dec
mov
mov
out
loope
rclb
cld
je
or
shrl
push
mov
mull
jg
sbb
je
pop
push
jne
aad
inc
xchg
jmp
mov
fldt
cwtl
pop
stos
dec
xor
lcall
lret
call
outsb
repnz
add
fs
sbb
inc
lock
nop
es
or
aad
imul
shll
sub
mov
ficoms
mov
or
aam
jle
xor
fs
and
inc
mov
mov
lret
arpl
or
out
pop
fldt
sahf
sahf
dec
cltd
outsb
and
jg
xchg
popf
push
pop
addb
nop
xchg
loop
cli
inc
pop
mov
sti
xchg
mov
loope
maskmovq
divl
push
lods
cmpsl
jne
subl
in
cmp
divl
outsl
inc
mov
or
jne
pop
cmp
and
and
std
pop
jne
mov
xor
cmc
sbbb
sbb
sub
xchg
sub
or
cs
mov
arpl
lcall
insb
ret
add
sub
or
das
ret
add
int
dec
or
mov
int3
bound
sub
mov
adcl
sti
inc
or
push
iret
imul
jp
jae
cmp
shll
leave
hlt
adc
xor
mov
movsb
cmp
pop
add
pop
xorb
fstpt
xor
testb
fcompl
add
leave
std
sub
mov
sbb
fucomp
cmp
mov
adc
test
push
sbb
inc
mov
rcl
or
icebp
xor
enter
pop
in
insb
sub
repnz
ljmp
mov
pop
sub
jmp
lds
scas
add
pop
xor
mov
xor
xchg
scas
push
lret
test
ja
je
mov
adc
cmc
xchg
add
mov
or
in
out
sub
xor
jecxz
cmp
pop
sbb
mov
or
inc
or
xchg
push
and
imull
ss
sbb
call
sub
mov
popa
mov
outsb
or
mov
icebp
push
xor
js
adc
leave
mov
push
out
sbb
sub
push
jp
xlat
push
imul
jecxz
mov
dec
sbb
jmp
add
popa
fisttpl
lcall
dec
xor
nop
add
test
sbb
leave
lcall
movsb
rclb
lret
sub
in
mov
and
mov
notb
inc
mov
sbb
jae
popa
lods
insb
loopne
push
xchg
xchg
xchg
in
fidivrs
mov
aaa
add
ficoms
push
jbe
jae
or
dec
andl
popf
and
push
sub
jmp
sub
mov
sahf
pusha
bound
shrl
sub
mov
jae
mov
dec
fdivrl
mov
adc
jmp
sub
aas
push
inc
cmp
mov
mov
fadd
lock
jge
stos
dec
xlat
mov
xor
add
cmp
add
mov
mov
and
xchg
lahf
adc
xor
inc
adc
adc
mov
daa
adc
or
fs
rolb
jbe
jecxz
dec
shlb
sub
popl
mov
or
cltd
jmp
clc
adc
cmp
lret
mov
mov
mov
addr16
daa
inc
add
and
cmp
sahf
repnz
xor
jp
jne
xor
or
inc
adc
fistl
jnp
pop
ret
aaa
mov
je
movb
sbb
enter
lds
out
mov
pop
loop
ja
test
lods
in
dec
arpl
add
dec
xchg
pop
pop
mov
in
fs
in
data16
mov
sub
dec
xchg
mov
mov
fsubs
out
push
mov
mov
jge
and
jmp
mov
push
sub
shll
xchg
pop
fsubrl
pop
out
add
dec
fnstcw
cmp
adc
pop
lret
jmp
jle
or
cld
mov
sub
iret
add
je
or
mov
adc
pmullw
mov
fnstcw
mov
xor
mov
scas
testl
mov
lods
in
repnz
sub
pushf
out
mov
das
addl
xor
pop
inc
mov
or
fisubl
in
push
jge
xor
lcall
stos
and
loope
mov
mov
into
in
jns
bound
xchg
fsubrs
add
push
xor
mov
mov
sbb
mov
popf
or
xchg
inc
push
cmp
stos
sti
lahf
in
jl
jecxz
push
mov
add
cmp
outsb
stos
pop
cmp
cmp
sub
inc
sub
push
or
sti
xchg
pop
iret
popa
jle
mov
xor
xchg
ss
fnstcw
sub
ljmp
scas
aaa
cmc
push
cmp
adc
mov
mov
gs
xor
stos
lods
jle
cmp
cmp
inc
jl
js
shl
mov
xlat
and
loop
jnp
pop
test
mov
jmp
aam
adc
lock
pop
dec
ds
push
dec
loop
inc
data16
pop
sub
and
xor
dec
mov
scas
lods
push
xor
sarl
cmovg
icebp
mov
lea
mov
jmp
stos
jl
dec
das
push
sub
aas
outsb
sub
sub
sub
push
dec
mov
inc
mov
xor
pop
mov
in
mov
lahf
lock
stos
add
stos
rclb
cmp
or
pop
sbb
pop
jge
pop
sahf
repz
dec
mov
call
cmpsl
mov
dec
cmc
dec
addr16
add
mov
dec
test
mov
out
repz
dec
dec
push
xor
xor
popf
fsubl
fnstenv
incl
xor
cli
jb
sub
sub
sub
xchg
pusha
faddl
outsb
lcall
adc
jns
or
sub
adc
je
xor
ss
xor
cmp
jle
jb
in
jge
add
test
mov
stos
inc
xor
push
rcll
lods
out
dec
add
iret
mov
les
inc
mov
and
loop
inc
das
lds
sbb
push
call
jns
in
add
ljmp
rcrb
arpl
lret
xchg
and
cmp
cmp
xchg
std
xchg
addr16
inc
nop
sub
fwait
pop
sbb
clc
cmp
dec
je
cmpsb
int
test
pushf
or
les
lcall
mov
out
xchg
sub
inc
mov
sub
xor
popl
xor
cs
push
mov
imul
mov
lret
inc
pop
mov
fistps
jmp
movsl
frstor
scas
test
sarb
add
fdivrp
inc
adc
pop
test
xchg
outsb
in
xor
cld
test
jl
mov
fwait
mov
jns
jmp
test
mov
push
sbb
pop
xor
fadds
adc
inc
cwtl
adc
xor
add
popa
sbb
fldenv
outsl
xchg
repnz
and
sub
sbb
cmp
sub
push
mov
imul
pop
and
xor
pop
cwtl
stc
mov
cmc
rcrl
int
mov
xor
pop
popf
and
nop
cld
pop
xorl
pop
push
ja
jmp
fisttpll
cmp
push
sbb
add
dec
pop
das
xchg
mov
add
and
jbe
pop
pop
outsb
pop
sub
add
mov
mov
push
mov
adc
movsl
and
inc
jno
jno
or
out
sbb
outsb
sub
cltd
lock
pop
mov
in
pop
mov
xchg
dec
xor
dec
cli
cwtl
jle
notl
imul
push
sahf
cmc
inc
out
test
mov
mov
or
movsl
cld
dec
movsb
sub
dec
mov
les
mov
jg
push
repnz
jecxz
sbb
imul
xchg
push
pop
inc
xor
push
jl
mov
lret
movl
or
pop
aaa
jmp
into
jno
test
cltd
sbbl
and
xor
mov
push
mov
into
mull
mov
jne
les
jnp
sarb
sub
and
jnp
divl
std
jne
lds
scas
cli
sbb
gs
test
cld
adc
mov
or
cmp
adc
int3
cmpsl
mov
or
inc
mov
push
mov
xchg
sti
cmp
outsl
clc
xor
jp
rol
sub
leave
inc
lcall
test
pop
stc
fimull
xchg
data16
loope
faddl
jle
rorl
pop
push
jle
cld
mov
sbb
and
in
pop
cli
mov
mov
xchg
loopne
sub
lods
xor
mov
sub
sub
lock
movsb
pop
mov
dec
mov
mov
jg
mov
add
mov
ret
or
in
nop
ss
pop
popa
pop
or
xor
rcrl
inc
push
cmp
addl
sbb
cmpb
xchg
stc
dec
roll
aam
fbld
fcom
into
test
mov
cmp
sbb
cmp
add
xor
mov
loopne
idivl
mov
cmpb
into
pop
pop
scas
lret
mov
pop
and
sub
lret
sub
loop
cwtl
jns
test
orl
ss
jle
jns
mov
push
dec
mov
les
fstl
push
ja
into
cltd
sub
repz
imul
jnp
dec
sbb
cmc
stos
popf
repnz
fists
or
pop
or
cmpsb
dec
shrl
or
jno
sbb
xor
inc
mov
sti
or
syscall
pop
or
nop
sbb
push
stos
out
add
mov
adc
push
and
popa
push
cmp
cld
popf
insb
orl
cmp
xchg
inc
xor
test
iretw
std
repnz
mov
mov
sbbb
outsl
push
insb
sahf
mov
orl
in
pushf
add
mov
shrl
sahf
cwtl
clc
cmp
outsb
mov
sbb
push
push
ficomps
push
or
loope
pop
sbb
mov
fwait
lds
ficoms
xchg
xchg
clc
add
stos
mov
inc
mov
xchg
nop
test
notb
mov
stc
sbb
inc
push
mov
je
icebp
lock
mov
in
adc
mov
das
je
xor
flds
sbb
repz
out
out
mov
sbb
mov
dec
stos
pop
fidivrs
mov
jle
xchg
lcall
mov
xchg
sbb
xor
nop
fldt
mov
das
xlat
out
into
push
stc
das
mov
rcrl
dec
lods
inc
enter
in
xorl
xor
adc
shlb
cli
push
and
aam
and
stos
hlt
fs
ja
mov
push
scas
jo
xor
dec
fcomps
adc
sahf
add
cli
pop
es
aad
jnp
cmp
pop
rorb
jmp
dec
lock
sbb
sbb
cmp
push
mov
jne
jp
fcomp
je
sar
cli
hlt
xchg
push
mov
rolb
mov
clc
pop
xchg
test
add
mov
push
push
jmp
dec
mov
and
pop
sar
fsubr
push
mov
mov
mov
btl
lahf
add
jbe
mov
jg
add
fisubl
addr16
jo
lret
jl
jl
mov
dec
jb
cli
sbb
lret
lcall
in
mov
cmc
dec
or
icebp
daa
cmp
mov
cmc
jg
leave
cmp
inc
test
pop
jge
adc
add
or
pop
mov
cmpb
hlt
repz
je
stos
loop
dec
lods
shll
adc
sbb
int
rorl
aaa
dec
ja
nop
xor
push
mov
pop
movsb
mov
xor
sbb
notb
clc
xchg
mov
push
cmpsb
xor
push
jecxz
or
mov
mov
cmc
fistl
or
jo
lock
in
pop
mov
popa
loopne
jne
add
xchg
inc
add
sub
fs
cmpsb
adc
xchg
rcrb
xchg
sbb
cmp
scas
test
push
aad
ret
call
sbb
cmp
lea
xchg
xor
outsl
jno
lcall
insl
dec
xchg
or
mov
sub
push
fdivrl
push
add
cmp
ja
xchg
cmpsl
push
xchg
sbb
jo
sub
sub
and
aad
pop
pop
cwtl
push
dec
push
push
fs
adc
imul
xor
lods
cmp
push
cmp
ret
clc
mov
setl
icebp
pop
xchg
loop,pn
sub
cmp
mov
mov
jle
pop
pop
or
jmp
or
out
adc
xchg
mov
mov
mov
mov
sub
loop
inc
shrb
mov
dec
hlt
xchg
mov
xchg
mov
out
sub
sub
aas
fsubrs
push
rcll
icebp
mov
or
notb
mov
shl
insl
dec
pushf
fisttps
gs
repz
push
inc
mov
movsb
ret
xor
adc
dec
xchg
mov
aas
js
xchg
jl
sub
add
pop
xchg
inc
sbb
mov
lds
cltd
out
mov
xor
out
fdivrs
mov
stos
fwait
and
jbe
ds
xchg
addr16
movsb
and
bnd
adc
pop
mov
cmpb
popf
mov
add
adc
cmpsb
out
hlt
int3
cwtl
mov
cmp
jl
add
std
push
fdiv
inc
aad
mov
inc
mov
loop
aas
pop
out
and
and
arpl
mov
add
inc
enter
test
loop
enter
jnp
gs
or
mov
lods
std
je
sarb
xchg
arpl
cli
inc
ds
mov
mov
leave
insb
dec
std
lods
call
mov
dec
rorl
aam
push
mov
cmpsl
roll
push
cmpsb
sar
daa
jne
lret
and
jae
ret
int3
test
jbe
movl
or
xchg
fwait
cmp
jnp
sbbl
leave
pop
and
mov
aam
jmp
xor
mov
xchg
xchg
popf
push
das
les
in
sub
inc
jg
clc
jne
xchg
leave
loopne
movsb
aad
inc
mov
add
mov
mov
test
xchg
xor
dec
push
dec
jb
sbb
lods
pusha
outsl
out
sub
scas
cmp
mov
mov
add
sub
pop
les
orb
fcmovbe
ret
inc
addr16
push
add
imul
sarl
lds
or
xchg
movsb
push
pop
sbb
ds
jmp
sbb
lods
mov
xchg
mov
ss
xor
xchg
sbb
fdivrs
mov
jg
cli
mov
jnp
xor
repz
icebp
or
or
imul
out
das
add
shrb
jo
adc
push
mov
in
sbb
jle
ja
sub
sub
stos
mov
xor
inc
push
sub
ljmp
dec
inc
jb
mov
jmp
jl
insb
mov
xor
sarb
ja
and
pop
ds
dec
scas
cmc
pushf
xchg
push
add
mov
pop
pop
inc
xor
loop
addr16
push
mov
mov
outsb
hlt
inc
stos
loop
orl
icebp
ja
outsl
inc
sti
cmp
inc
fistpl
xor
xor
push
sub
pop
dec
push
subl
fdivrs
add
fnstsw
adc
or
in
and
out
xchg
add
mov
xchg
adc
cmpsb
nop
and
pop
xlat
xchg
inc
in
ficoml
add
sbb
test
aad
cwtl
cltd
cmp
aaa
ret
lods
xchg
fsubs
jbe
or
add
jmp
test
outsb
xchg
mov
jae
cmp
test
jae
xor
mov
test
xchg
out
xchg
jecxz
out
ret
xchg
mov
cmpsl
xor
outsl
out
fstps
sbb
aam
xor
mov
jne
test
push
mov
or
test
sub
insb
mov
xchg
icebp
orb
push
adc
ja
cmp
dec
or
cmp
adcb
scas
sti
xchg
xor
out
pop
je
and
ss
and
adc
push
jno
addr16
daa
xchg
and
inc
lahf
cmp
xchg
adc
adc
lahf
add
cwtl
adc
gs
les
les
xchg
aas
fbstp
leave
push
jp
xchg
inc
mov
cmp
cmpb
in
enter
fistpll
outsl
leave
xor
mov
fldenv
sarb
je
or
add
xor
sub
ret
pop
jnp
push
lret
not
dec
jg
pop
xlat
jge
mov
add
popa
pop
mov
mov
jecxz
jmp
shr
xor
jne
mov
xchg
xor
xor
sahf
inc
xor
jecxz
out
push
jb
add
outsl
fidivs
cs
test
push
xchg
dec
mov
mov
push
std
adc
pop
in
ficoms
or
mov
mov
icebp
pop
lret
mov
jmp
lds
dec
insb
enter
mov
int3
lds
xchg
mov
xchg
mov
enter
sub
sbb
pop
pop
cld
jl
push
and
in
mov
loope
mov
decb
cmp
pop
pop
mov
pop
pop
pushl
std
jns
call
lods
pop
push
jle
xor
testb
sbb
out
dec
mov
pop
lea
aas
pop
xchg
hlt
pop
fs
repz
dec
and
shll
fsubr
lahf
mov
aad
jnp
sarb
mov
xchg
push
ret
rolb
add
sbb
or
es
test
mov
adcb
je
and
inc
adc
pop
or
mov
popf
sbbl
xor
nop
pop
out
test
sub
mov
rcrl
inc
sub
cltd
cmp
out
mov
mov
inc
sbb
loop
lea
xor
sub
mov
jmp
incl
lea
ss
mov
pop
inc
xchg
sti
mov
or
xor
mov
pop
rcll
test
jb
lcall
sbb
lods
adc
xlat
inc
push
adc
fwait
push
pop
sub
loopne
test
pop
xchg
jg
sar
mov
sub
sub
lods
fsubrs
pop
mov
push
jecxz
mov
cmp
add
ss
push
dec
pop
push
add
dec
sbb
adc
xor
inc
or
in
movsl
loope
repz
jg
pop
dec
in
pop
int
pop
lods
jne
push
or
add
scas
cmc
aaa
stc
out
xadd
push
dec
cs
test
sarb
xchg
adc
xchg
push
outsb
lods
mov
jnp
je
add
je
sbb
jae
mov
and
fbstp
mov
js
mov
das
cmp
stc
xchg
ds
jno
inc
iret
and
repnz
adc
test
es
push
push
lea
cltd
stc
or
mov
push
push
xchg
imul
test
cmpb
dec
fadd
popa
mov
ljmp
pop
inc
mov
js
dec
adc
push
xor
ret
xchg
xor
insl
and
jb
xchg
push
sbb
outsl
adc
ljmp
dec
popa
imul
inc
outsb
ret
fnsave
or
dec
lods
jne
popl
rcrb
or
insl
mov
cli
mov
pop
js
inc
jp
dec
fwait
aas
mov
mov
stos
mov
adc
adc
fcomip
mov
in
cmc
add
sbb
pop
pop
pop
mov
pop
jmp
loop
mov
hlt
sub
or
ds
add
mov
xchg
je
sarb
frstor
push
mov
outsb
inc
fcoms
jle
mov
cmp
scas
pop
sbb
add
sbb
stos
popa
sbbb
test
les
mov
pusha
xchg
mov
lret
lcall
ja
dec
or
out
inc
xor
je
daa
sbbb
or
mov
inc
cmc
jmp
xlat
div
sbb
int
imul
imul
sti
sub
mov
mov
cmp
sub
xchg
push
push
xchg
cmp
sub
aas
lcall
xlat
push
call
orb
sbb
cmp
cmp
xlat
icebp
mov
lds
dec
adc
negb
push
dec
cli
sub
shll
adcb
je
pop
mov
fidivs
outsb
ds
test
xor
pop
hlt
and
mov
daa
andl
add
pop
xor
dec
lock
out
xchg
add
popf
push
dec
adcl
xchg
pop
ds
xchg
ss
in
dec
lcall
pop
mov
pop
mov
mov
mov
lcall
cmp
pop
mov
jmp
dec
lret
push
sbb
or
mov
shrb
sbb
mov
mov
push
jecxz
aam
fisubl
lcall
icebp
jbe
xchg
lds
aaa
pop
jp
jge
cmp
repz
es
mov
xchg
or
or
or
add
dec
xor
dec
cs
cwtl
cld
adc
jge
dec
mov
or
js
gs
lock
cmc
insl
inc
and
pop
lahf
adc
stc
cmpsb
lea
std
lcall
sub
mov
push
pop
nop
and
adc
sbb
inc
xor
sub
ficompl
mov
call
jns
insb
pop
xchg
push
mov
shlb
sub
mov
mov
gs
es
add
inc
call
addl
add
call
inc
adc
orb
mov
adc
stc
je
out
jle
in
flds
fwait
push
mov
addr16
xor
push
loopne
mov
sbb
adc
mov
filds
pop
clc
xor
bound
xlat
xor
lret
push
imul
mov
and
int
mov
add
les
pop
sub
cmp
xlat
and
mov
add
or
mov
push
int3
inc
bound
push
test
xor
sub
push
and
xchg
xchg
test
dec
scas
lret
fsts
lods
stc
sub
inc
cmpsb
adc
sti
pop
inc
inc
pop
enter
sbb
lcall
jge
fistpll
popf
sahf
xchg
mov
push
scas
fistpl
fcompl
inc
ja
shrb
hlt
mov
adc
sbb
push
adc
fmull
mov
xchg
movsb
jge
in
adc
fldenv
adc
push
push
je
and
shr
std
test
cmpsb
mov
pop
mov
sarb
or
mov
addl
jg
lds
cmp
outsl
lock
pop
jno
sbb
jmp
arpl
daa
inc
cld
rcll
cmp
out
push
sbb
sahf
imul
jae
mov
insl
pop
test
jbe
jle
push
mov
mov
pop
ficomps
jl
push
jp
xor
icebp
dec
das
sbb
pop
xchg
sbb
xchg
rcrl
stos
ret
inc
adc
mov
add
clc
cmpsb
or
mul
pop
lods
xlat
call
add
xor
out
out
movsb
stos
cli
or
out
aad
int3
daa
sub
test
sahf
loope
and
cs
in
push
sub
dec
out
dec
mov
xor
push
loopne
cs
inc
in
mov
push
out
dec
sub
inc
cmp
xchg
fwait
push
es
sub
lods
js
sub
repz
rclb
jae
test
jb
sbb
mov
inc
fld
sbb
int
test
call
sbb
add
xor
cmp
inc
jae
jmp
dec
popa
shl
dec
push
inc
xchg
dec
std
mov
push
jecxz
mov
jns
cmpb
jo
push
add
and
cmp
sbb
in
push
add
mov
jb
lds
lret
fdivs
add
lcall
dec
and
fs
mov
mov
das
pop
inc
shlb
pop
jno
sarl
faddl
mov
adc
movsb
lahf
mov
jns
cmp
in
push
outsb
jmp
push
inc
cmp
lods
loope
add
dec
cmc
idivl
lret
int
xchg
les
mov
and
test
enter
and
inc
and
or
cmpsb
loope
jae
xlat
adc
idivl
mov
jl
daa
out
pop
bound
outsl
inc
pop
hlt
pop
xorl
pop
sbb
mov
hlt
mov
xor
insb
mov
inc
inc
dec
bound
push
and
inc
pop
fisubs
sub
cmpl
push
xor
outsb
out
mov
mov
cs
addr16
dec
mov
dec
xchg
mov
nop
jne
lret
icebp
sbb
cmpsl
mov
mov
cmc
pop
jle
ret
hlt
pop
xchg
sti
int
pop
mov
jecxz
psubsw
lahf
sbb
mov
dec
or
jl
imul
loopne
inc
aad
dec
add
dec
dec
adc
add
push
inc
mov
pop
out
mov
jge
adc
stc
mov
adc
ss
dec
mov
lds
inc
push
popa
gs
iret
in
inc
cs
enter
jmp
xchg
dec
jo
xchg
dec
pop
rclb
jne
cltd
xchg
aaa
test
call
sbb
sbb
lds
aad
inc
popf
aad
lret
cmp
adc
pop
xorl
sbb
xchg
pop
mov
pop
and
xchg
fmuls
inc
faddl
insl
pop
push
addr16
and
sub
push
int
arpl
or
subl
or
or
sti
add
pop
and
pop
adc
xchg
out
xchg
adc
jo
insl
testb
cmpb
mov
cs
sub
pushf
push
add
jl
sub
movsl
dec
sub
jl
dec
in
xor
adc
jns
dec
nop
imul
mov
fwait
or
loope
push
leave
or
pusha
push
or
pop
stc
outsb
sbb
push
push
dec
mov
sbb
xor
int
dec
imul
mov
mov
jmp
cmp
jle
repnz
test
and
jle
ljmp
pop
int
inc
cwtl
jne
push
xchg
cmc
imul
gs
clc
mov
cmp
xchg
adc
fimull
repnz
inc
mov
lds
cs
xor
hlt
inc
xchg
imul
xor
adc
ftst
adc
roll
adc
xor
pop
push
inc
pop
pop
sbb
test
std
imul
sarl
jl
clc
cmc
loope
sbbl
movsb
cmc
lahf
mov
mov
int3
fimuls
popf
dec
cmpl
cmp
imul
adc
pusha
popl
imul
test
sub
sarl
mov
pop
fisttps
scas
mov
mov
cmp
jnp
shrl
sbb
mov
fildll
sub
cmp
jns
xchg
push
add
ljmp
arpl
dec
frstor
mov
xchg
or
test
stc
pop
push
sub
test
outsb
test
enter
fwait
adc
aad
sbb
or
and
popa
push
sub
into
mov
xor
outsb
inc
das
aas
xchg
mov
pop
mov
sub
out
and
adc
sub
mov
lret
adc
scas
dec
pusha
iret
add
inc
cmpsb
sub
or
lcall
sub
inc
pusha
cli
std
je
jo
mov
mov
mov
xchg
sub
pop
ds
mov
or
pop
ss
or
shll
les
jbe
rorl
fcmovne
sub
imul
ficoml
inc
rolb
or
lret
fs
mov
fs
std
lcall
jle
sbbl
dec
lcall
adc
add
pop
sub
and
add
push
pop
jns
mov
daa
xchg
in
nop
cmpsb
sbb
adc
sbb
insb
aas
push
sub
cs
cmpsl
imul
push
pop
call
push
push
jge
pop
test
loop
enter
inc
adc
or
fimuls
pushf
mov
mov
lds
mov
addb
fcmovb
mov
sbb
fsubrs
add
loope
or
cmp
lret
inc
jmp
icebp
imul
imul
incb
xchg
jbe
scas
cmpsl
add
cld
sbb
and
std
das
clc
adc
aam
xor
cmc
adc
xor
lahf
cmp
xorl
pop
push
pusha
fwait
por
jo
or
sti
sub
jle
sub
jno
test
incl
xchg
sub
lea
scas
mov
cmp
filds
sub
adc
adc
imul
flds
inc
push
sub
adc
sbb
bound
push
pop
fsubp
jg
aam
mov
rcll
or
fsubrl
movsl
and
adc
data16
jae
sub
cmpsl
sahf
stos
pop
jno
lret
aaa
mov
jns
shrl
test
in
dec
sub
fimuls
fldenv
nop
adc
loop,pn
push
pushf
dec
dec
cmp
in
pop
sti
sti
stos
cmc
adc
mov
lods
xor
andb
mov
mov
sbb
cmp
dec
pop
stos
in
adcl
xchg
mov
xchg
imul
test
call
out
addb
mov
adc
and
sbb
sub
sahf
sbb
dec
lcall
inc
cmp
call
in
in
cmp
fcomp
push
es
lret
adc
mov
xorb
cmp
mov
xor
pusha
movb
push
sbb
mov
insl
push
jp
into
cli
outsb
sti
bound
psubb
aaa
ret
and
xchg
jecxz
test
dec
inc
push
sarb
andb
mov
in
mov
sbb
inc
adc
or
movsb
sbb
insl
add
rorl
out
dec
popa
or
popa
int3
daa
shll
loopne
repz
sub
pushf
arpl
push
imul
loopne
fidivrl
daa
mov
sub
or
shl
cltd
mov
jae
imul
push
push
mov
popa
push
sbb
mov
push
mov
imul
mov
push
dec
loopne
jmp
outsb
mov
xor
cmp
int
test
mov
scas
adc
fdivl
cli
jmp
xchg
dec
cli
jle
mov
stos
sub
mov
outsl
pop
jns
cmp
mov
pop
arpl
repnz
pop
or
mov
pop
stc
sub
aad
pop
cmpb
mov
rol
fldcw
stos
mov
mov
jne
and
lods
aaa
pop
ficoml
outsl
adc
stos
sbb
sub
ss
add
pop
shrl
shll
cmp
xchg
gs
lods
repz
testl
lcall
jmp
pop
cmp
mov
test
jmp
rcrl
shrb
movsb
fnstcw
xlat
dec
clc
xchg
es
das
aad
in
push
or
or
adc
adc
dec
pop
mov
mov
sahf
fwait
push
sbb
cltd
ja
repz
fimull
aaa
imul
jns
icebp
fs
inc
or
dec
outsl
movsl
adc
or
out
xor
mov
pusha
adc
aam
mov
sub
das
pop
nop
inc
mov
paddw
inc
stos
cs
jl
mov
sbb
sub
dec
aam
ret
pop
and
inc
sub
mov
pop
sahf
pop
sub
iret
dec
fidivl
add
mov
in
ficompl
mov
mov
cmpl
sub
mov
sbb
in
push
gs
or
pop
mov
test
or
jmp
and
adc
mov
push
leave
in
sub
repz
mov
mov
cwtl
mov
movsb
jecxz
add
js
xor
fs
gs
std
cmpsb
xchg
adc
jle
mov
dec
or
inc
arpl
hlt
mov
and
pop
cli
iret
push
inc
arpl
sbb
adc
sub
adc
in
mov
lea
or
xorl
pop
int
or
inc
pop
cmp
jg
ret
ja
xor
orb
popa
mov
into
jns
aaa
jp
jnp
mov
movsb
and
pop
adc
push
xchg
lahf
dec
push
sub
stos
das
sahf
std
cmpsb
inc
xorl
sbb
sbb
ja
mov
scas
dec
dec
cltd
sub
stc
ljmp
mov
clc
fwait
mov
adc
pop
cld
inc
xchg
add
add
aad
sahf
in
in
sub
inc
ficompl
stos
push
and
mov
jp
xor
movsb
add
sti
fwait
mov
std
dec
sbb
pop
push
cmp
adc
inc
cmp
add
jecxz
leave
sbb
lods
inc
or
test
stos
push
negb
mov
inc
xchg
insl
push
fs
jns
cmp
shlb
stos
sbb
shll
add
lea
mov
std
call
dec
add
int
xchg
insb
push
inc
into
fstps
mov
inc
sub
aaa
lcall
clc
adc
arpl
fwait
jb
mov
cmp
ret
xor
add
pop
fucom
dec
push
mov
movsl
and
scas
push
imul
stos
sbbl
outsb
push
mov
popf
xor
mov
mov
roll
hlt
clc
xlat
enter
int3
push
mov
mov
jno
mov
push
push
rcll
stos
sub
cmp
daa
or
std
add
subl
scas
in
push
sub
or
lret
pop
and
in
lods
addr16
std
or
in
pop
dec
mov
mov
mull
jecxz
gs
popf
inc
sbb
sbb
in
fimull
fisubl
sub
mov
xor
or
adc
int3
push
inc
jle
lret
cmp
pop
arpl
hlt
push
outsb
shrb
or
lret
cmp
dec
xor
cmp
or
mov
sub
mov
jnp
pop
ffree
fdivl
xchg
cmp
inc
mov
mov
shlb
jno
mov
and
jne
test
sbb
loope
aas
aaa
dec
les
out
ret
mov
push
sub
jle
jmp
ja,pn
fs
outsl
cld
fwait
notb
es
jecxz
adc
in
jge
sbb
ss
xchg
jle
enter
cmp
imul
pop
mov
fwait
test
mov
mov
into
sbb
repnz
cmp
jno
pop
sbb
dec
jnp
orb
add
aaa
sbb
xchg
sub
out
test
add
or
and
insb
das
sbb
sub
out
mov
adc
xchg
sbb
pop
call
mov
loope
cmp
cmp
push
push
lods
inc
loop
xchg
xor
les
int3
cmp
mov
fsubl
popf
xchg
std
mov
adc
add
push
les
enter
dec
sub
mov
mov
insl
inc
bound
adc
inc
cmpsl
leave
push
movsl
inc
stos
sub
xor
jae
adc
xchg
pushf
inc
gs
enter
pushf
popf
pop
test
lods
out
push
loop
in
jno
loope
daa
and
mov
scas
push
js
es
xor
inc
mov
jae
es
jne
push
cvtps2pi
fs
xor
push
mov
repnz
sub
and
or
mov
scas
lock
add
mov
pop
int3
fbld
pop
jno
fmull
pop
shld
xor
in
into
test
cli
dec
sbb
sub
rol
nop
xor
add
cmp
stos
popf
mov
xchg
sub
dec
mov
add
shlb
out
das
cmp
mov
aaa
pop
pop
mov
mov
out
xor
jp
mov
sub
sub
push
sub
inc
sbb
pop
das
and
movsl
sbb
xchg
sarb
in
mov
sbb
repnz
sub
add
mov
sbb
fs
jl
xor
add
add
lahf
stc
jb
add
mov
mov
lock
and
pop
fmuls
orb
leave
daa
rcrb
std
mov
out
pop
and
mov
movsb
sbb
test
lds
neg
push
inc
xchg
mov
lods
aaa
hlt
arpl
fidivrl
mov
in
js
mov
nop
cmp
push
stc
addr16
jge
cmp
or
or
mov
jle
mov
inc
jne
cs
idivb
lret
xchg
repnz
sub
xchg
mov
test
mov
iret
xor
jo
push
cmp
xor
and
mov
sub
aaa
in
ror
jle
and
repnz
addr16
pushf
xchg
repnz
xchg
arpl
xor
pop
xsaves
inc
ja
fidivrl
add
xchg
and
js
daa
cli
mov
jle
and
lods
push
dec
push
das
jae
fmuls
push
mulb
mov
sbb
or
enter
insb
sbb
test
push
lcall
scas
das
push
cmp
daa
add
je
xchg
mov
ret
cmp
mov
mov
rol
add
mov
push
ret
out
xchg
call
fnstenv
icebp
notb
pop
enter
das
adc
push
stc
jnp
imul
lods
cli
or
les
push
cwtl
push
mov
aas
das
jns
add
mov
cmp
push
divb
lea
mov
pop
std
ret
pop
push
or
testb
into
mov
jns
jl
test
xlat
pmaxub
mov
fidivs
xor
in
mov
loop
insb
and
xchg
fists
or
popl
xchg
aaa
call
lea
out
orl
jo
pop
push
mov
insl
push
stc
js
mov
in
pop
jae
and
add
rol
mov
mov
test
ficoms
pop
cltd
dec
fsubrl
dec
test
jns
jne
xor
sub
push
inc
aaa
ss
int3
lahf
push
jne
and
sub
and
push
add
jp
mov
iret
jecxz
in
inc
push
cmpl
push
or
xchg
inc
jp
shrb
xor
dec
rorl
jns
icebp
and
orl
jnp
filds
mov
ljmp
cmp
cmpsl
pop
push
jae
jle
and
mov
aad
loope
adc
icebp
mov
dec
sub
in
test
in
mov
jnp
int
dec
inc
lahf
dec
mov
push
js
in
mov
sub
lock
mov
shrb
push
enter
scas
ss
mov
xor
mov
or
mov
ret
pop
add
cmpsl
fwait
lahf
mov
lock
repnz
pop
cmc
lret
or
fcomi
lahf
mov
data16
xor
ljmp
out
xlat
mov
out
negw
sub
lahf
rcrb
jmp
adc
imul
pop
xor
push
out
mov
enter
dec
popa
in
ds
dec
popa
arpl
jmp
fstpl
out
mov
sbb
mov
inc
jo
xchg
mov
pop
pop
dec
sahf
fimull
insb
leave
xor
push
lods
or
push
xor
mov
mov
iret
fimull
inc
cmp
stc
xor
insb
outsb
cmp
imul
pop
or
inc
inc
ja
fwait
xchg
out
inc
imul
mov
sbb
mov
pop
in
decl
fdivs
push
xchg
daa
jle
fcmovnbe
pop
flds
jg
rcll
lea
dec
out
mov
arpl
popf
test
or
pop
mov
mov
je
jp
add
push
and
dec
pushf
fwait
int
add
movsb
sub
out
pusha
insl
out
push
xor
scas
stos
fwait
mov
jno
xchg
xlat
testl
filds
adc
add
xor
mov
test
repnz
fbld
stos
lret
mov
out
lds
cmp
dec
nop
iret
xor
push
xor
lret
test
mov
fs
add
inc
xorl
add
xor
ds
push
cmp
call
inc
add
mov
pop
push
fistps
lcall
outsb
enter
jae
ret
adc
and
std
js
push
cmc
test
fs
sahf
nop
inc
test
mov
cld
testl
sbb
call
int3
inc
sub
or
or
push
xor
je,pt
push
into
or
in
cmpsl
movsb
fs
push
push
mov
or
dec
pop
pop
pop
cmp
dec
sahf
sub
inc
push
gs
inc
add
jecxz
std
aad
outsb
aad
sbb
mov
push
mov
scas
adc
xchg
jbe
test
inc
cmp
dec
jp
stos
adc
das
out
icebp
das
mov
push
test
rol
xor
xchg
adc
mov
es
js
dec
add
loop
std
push
stc
das
popf
or
xchg
adcl
xchg
adc
movsl
jmp
iret
sub
sbb
fwait
or
testl
cltd
cmp
adc
and
sar
xchg
push
mov
ret
add
pop
sbb
pop
mov
insb
xchg
cmp
testb
adc
pop
sub
lcall
or
pop
stos
cmp
aam
sti
in
idivl
mov
mov
mov
push
shr
mov
push
pop
shlb
xchg
in
inc
fiadds
push
jecxz
sbb
aas
adc
jb
mov
pop
cmp
loop
fistpl
pop
mov
pop
out
pop
gs
out
xrelease
data16
xor
pop
push
mov
insb
out
imull
mov
sbb
pop
mov
xchg
dec
lret
in
fidivl
dec
push
dec
leave
ss
xorl
jmp
iret
dec
int3
fmulp
test
sub
mov
and
ret
cmp
add
shll
pop
lea
jg
mov
gs
cmovg
xchg
das
outsl
sub
outsl
xlat
stc
mov
cmp
cmc
mov
dec
lds
rcl
xchg
cmp
cmp
fcoml
or
dec
je
push
xor
push
ja
jle
add
inc
sbb
shrb
cltd
movsb
jp
mov
cmp
xor
jnp
out
mov
xabort
mov
adc
push
push
jecxz
sbbb
inc
pop
or
out
imul
scas
imul
dec
gs
ret
pop
xor
mov
inc
xor
push
sbbb
rol
inc
ret
sbb
push
movsl
arpl
xchg
adc
lahf
icebp
mov
fisttpll
sarb
jle
es
rcl
arpl
jo
xchg
sbbb
js
sbb
inc
and
and
test
or
sbb
inc
mov
mov
cld
popf
fcomps
mov
out
and
mov
outsl
inc
iret
mov
outsl
rcrb
rclb
fdivl
mov
sub
or
push
ficompl
push
lret
pop
mov
aaa
ss
add
shlb
clc
adc
shlb
mov
ljmp
mov
scas
pusha
inc
or
adc
arpl
imul
jg
and
cmc
lods
mov
jge
xchg
insb
fistl
mov
sbb
lcall
xor
adc
jmp
adc
mov
js
sbb
sbb
xchg
mov
movl
push
stos
adc
aas
fidivrl
ljmp
out
sbb
jne
pop
mov
aaa
repz
out
cmp
hlt
xchg
loop
prefetch
push
psllw
xchg
pop
xchg
out
lret
out
jb
stc
xchg
dec
fnstcw
jo
mov
outsb
out
addr16
pusha
mov
testb
adc
jle
int3
cmp
xchg
andl
insl
icebp
mov
xchg
mov
jne
pop
test
test
rcll
mov
rolb
addr16
adc
add
aam
outsl
fcmovbe
imul
xchg
inc
mov
out
cmp
and
jl
mov
iret
push
add
mov
mov
xor
testb
mov
push
ficoms
mov
lock
dec
push
ss
test
jb
subl
jecxz
aad
mov
xchg
push
mov
pop
loope
jns
jae
xchg
jbe
pop
pop
movsl
lahf
sub
jns
test
ss
pop
fnstcw
jecxz
ds
xchg
daa
lods
pushf
push
and
cs
scas
push
mov
sub
data16
movsl
repnz
cmc
nop
shlb
fbld
adc
lods
in
mov
inc
loopne
icebp
idivb
mov
lods
call
cwtl
sub
ret
jecxz
inc
sbb
inc
pop
mov
pop
pusha
sar
leave
adc
sbb
sub
or
adc
out
out
sub
and
pusha
or
bound
add
movsl
push
js
xchg
sbb
cmc
push
test
cmc
mov
mov
imul
sub
jno
stos
jns
inc
maxps
push
xchg
jge
mov
incl
push
push
out
pop
xchg
jl
clc
ds
leave
inc
repnz
add
or
jo
cwtl
cmp
and
loopne
xlat
pop
and
mov
push
push
inc
xchg
ret
negl
mov
pop
test
in
mov
repnz
test
adc
into
cld
xchg
sarb
sar
jl
imul
das
xchg
cmp
int
jo
xchg
jle
outsb
xchg
imul
sbb
test
aam
out
ror
lret
xchg
inc
nop
leave
das
aad
mov
jp
mov
mov
out
adc
incb
idivl
in
into
nop
mov
adc
mov
ljmp
mov
int3
fcomps
sbb
xorl
repnz
jp
pop
inc
dec
push
ficompl
pushf
les
inc
or
add
fadd
mov
imul
stos
int
icebp
gs
push
cmpsb
popf
or
notl
xchg
fisttps
mov
popf
jno
push
sub
popa
dec
imul
add
or
mull
cmp
faddl
add
daa
into
jne
insb
mov
mov
add
rorb
push
push
test
adcb
sbb
hlt
and
pusha
movsl
mov
inc
lds
and
xchg
adc
add
and
bound
sahf
nop
pop
jmp
push
mov
movsl
push
fisubl
mov
lret
inc
fcoml
leave
and
insb
mov
ss
push
int3
scas
inc
sar
sahf
xchg
inc
ds
cmp
pop
sbb
xchg
add
push
test
ds
push
xlat
enter
in
cmp
ja
xchg
jns
or
xor
push
es
lds
mov
add
imull
fs
lcall
sub
insb
inc
mov
fdiv
clc
fnsave
jo
lret
test
dec
loopne
jle
add
pop
bound
andl
add
pop
jg
ljmp
enter
cmp
xor
pop
lahf
and
pushf
sti
xor
jae
fsubr
popf
lock
pop
inc
stos
fisubrs
dec
lcall
ja
or
mov
lods
adc
bound
aas
jp
dec
in
jecxz
loopne
jp
xor
mov
cmpsb
test
push
sbb
xchg
sub
inc
in
sti
loope
cmp
xor
mov
jae
pop
jnp
inc
inc
dec
xor
jmp
xor
aad
sbb
jg
or
imul
sahf
lea
xor
fidivl
sub
jnp
adc
gs
lock
lds
add
adc
dec
pop
loope
stc
rorl
jo
test
popf
xor
or
or
les
dec
lock
ffreep
pop
push
add
xor
insb
inc
xlat
or
fdivl
dec
push
mov
sbb
repz
dec
cmpsb
xchg
scas
xor
dec
add
jmp
shlb
pop
dec
loope
scas
pop
add
dec
sti
fimull
ud1
xchg
ss
lods
push
clc
push
and
hlt
ds
inc
sahf
lds
sbb
int
js
mov
jp
imul
in
les
mov
xchg
pop
scas
sbb
call
jle
movsl
sbb
loopne
mov
mov
lock
lods
ret
pusha
sub
and
imul
pop
mov
jns
aad
push
push
jmp
dec
imul
ret
and
fidivrs
out
push
fnstcw
dec
loope
mov
push
push
mov
inc
cmpsl
push
repnz
scas
add
mov
or
imul
enter
ficomps
ret
dec
nop
movsl
inc
leave
xchg
or
xchg
test
push
iret
cld
ja
add
cmpsl
pop
and
or
out
dec
mov
dec
push
add
mov
jmp
rclb
scas
dec
pop
pop
mov
xor
adc
mov
sbb
addr16
scas
sbb
lahf
lret
jnp
cmp
dec
fxch
stos
fadds
fyl2xp1
ss
loope
or
xchg
mov
scas
out
cwtl
xor
lock
sbb
xor
fsubl
hlt
adc
insb
and
test
dec
xchg
inc
mov
test
mov
jge
lahf
lds
nop
cmp
into
ds
cmpsl
mulb
pop
or
xchg
icebp
aas
push
push
cmp
mov
pop
mov
mov
jns
fisttpll
enter
mov
mov
inc
add
lods
aaa
sbb
xor
es
movsb
cmp
push
push
jbe
shlb
inc
in
out
ret
jb
inc
loop
in
cmp
loope
into
mov
add
push
push
sbb
mov
scas
adc
push
sub
mov
xchg
xchg
popa
and
jno
and
dec
mov
cmc
xor
or
call
lods
add
rorb
testl
adc
rorl
sahf
push
sarb
je
leave
sahf
sub
test
jecxz
push
sub
or
in
pop
mov
negl
mov
sub
mov
out
bound
sbb
out
and
mov
xchg
push
ss
negl
inc
jp
add
in
sub
inc
pusha
popa
sti
or
mov
outsb
das
jns
mov
repz
xchg
pop
dec
inc
lcall
das
icebp
lods
loopne
sbb
outsb
sbb
pop
pop
adc
pusha
jne
cmp
movsb
shlb
pusha
mov
int
das
or
cmc
into
push
movsb
dec
push
xchg
push
cli
cmp
xor
fisttps
popf
aas
ljmp
scas
icebp
xor
mov
fisubrl
pusha
mov
cmpsl
rcl
add
inc
es
stos
pushf
jecxz
jbe
fwait
inc
sbb
push
rcrb
sbb
fcomps
mov
lock
enter
ja
xchg
sbb
lods
fwait
mov
ljmp
cmp
jl
arpl
fmuls
mov
stos
scas
mov
andl
imul
out
or
scas
stos
cmp
addl
shll
dec
fs
mov
fsubr
cmp
push
and
stos
dec
xchg
adc
into
fisubl
push
add
push
add
adc
das
ljmp
xorb
aam
sbb
les
sbb
sbbb
sub
ja
sbbb
out
pusha
pushf
jnp
dec
adcl
popf
pop
dec
sbb
add
mov
mov
loope
and
lea
mov
adc
je
dec
stc
shl
mov
sbb
mov
jmp
outsl
sbb
leave
inc
sub
scas
jo
orb
jge
loop
test
popf
sub
ljmp
movsb
dec
jmp
xchg
jp
notb
rorl
sub
adc
out
mov
sub
mov
sub
in
xor
mov
stos
hlt
mov
lds
xchg
jne
rorb
mov
inc
lods
mov
aas
jne
out
icebp
mov
in
nop
push
mov
jo
enter
arpl
or
pop
lea
arpl
xchg
popf
and
push
mov
inc
push
jnp
subl
or
add
out
in
sbb
push
in
xor
xlat
sarb
inc
stc
mov
adc
adc
and
movsl
fdivp
aaa
daa
mov
and
pop
insl
xchg
stc
insb
adc
xor
dec
test
push
mov
in
les
sbb
repz
or
pop
loop
lock
test
add
pop
push
push
push
scas
dec
cmp
ss
sbb
and
popf
sbb
inc
shr
and
scas
xlat
mov
dec
stc
cmp
add
pusha
rcrb
loopne
push
pop
or
inc
lahf
pop
mov
int3
into
lahf
xchg
mov
and
mov
push
add
xor
or
ret
imul
popf
inc
add
nop
dec
pop
or
lret
xchg
cmp
ret
lret
mov
adc
jns
in
loopne
fs
call
pop
ret
adc
pop
xchg
enter
mov
adc
or
inc
add
mov
out
stos
bound
cwtl
adc
cli
inc
rcrb
jbe
dec
imul
sub
ficompl
sbb
push
rcrb
adcl
call
inc
scas
push
mov
aad
jl
xchg
mov
dec
je
dec
cmp
jmp
les
xlat
test
jb
lock
int
push
mov
add
pop
push
dec
or
cmp
or
xchg
add
sti
and
fistpl
mov
rorb
xchg
pop
mov
sbb
inc
jle
mov
in
lods
es
rclb
sbb
jns
jmp
mov
mov
les
pop
insl
mov
xchg
das
mov
xor
rcrl
mov
aam
pop
or
imul
nop
cmc
cmp
mov
mov
xchg
xorb
jns
rorl
mov
jl
dec
add
mov
adc
or
jo
test
cmp
outsb
mov
mov
lods
xchg
aas
imul
pop
loope
sub
je
sub
sbb
int3
sbb
add
icebp
or
inc
out
inc
test
popa
imul
in
into
loope
xor
or
xchg
add
inc
and
jp
loop
or
pop
ret
mov
inc
push
push
adc
nop
aas
mov
stos
outsb
je
cmp
sahf
or
pop
mov
loope
ja
or
mov
cmpsb
jb
test
push
cmp
lahf
shl
mov
push
or
adc
xor
dec
ret
cld
mov
pop
out
pop
ret
movsb
out
fdivrs
sub
lret
inc
sub
push
push
and
sbb
jp
roll
push
dec
nop
add
aas
fildl
cs
sub
pop
fistpll
ja
pop
ljmp
mov
mov
sbb
int
ss
fcompl
mov
xchg
inc
push
push
mov
pop
inc
pop
mov
dec
idivb
add
fsubrs
adc
call
mov
push
imul
jns
subb
sbb
pop
pop
dec
mov
pop
or
jg
int3
outsl
stos
mov
mov
and
test
jb
das
lahf
jnp
loop
cli
jns
lahf
mov
mov
dec
in
or
mov
and
xlat
std
loop
loop
outsl
cld
les
push
iret
pop
jns
mov
shrb
aas
jbe
fsubs
aas
push
jo
pop
xor
out
leave
mov
lea
mov
mov
jb
pop
stos
pop
inc
xor
notb
jbe
mov
fwait
mov
add
ficoms
jmp
sbb
outsb
arpl
add
imulb
adc
mov
sbb
lds
dec
cli
push
push
into
mov
jp
ret
jno
cmp
fisubrl
mov
lcall
pop
mov
xchg
push
cmpsl
cwtl
and
fildl
mov
sub
popa
in
ret
cli
dec
mov
leave
xchg
mov
std
xor
jge
push
icebp
inc
imul
push
or
or
pop
divl
pop
dec
popa
out
insb
mov
lods
stc
push
push
sti
test
inc
dec
ret
xchg
sub
cmpsl
insl
jo
push
into
xchg
cmpb
popa
and
sub
fsubp
cmp
lcall
imul
shrl
push
lods
mov
psllq
jbe
cwtl
dec
aas
add
nop
jp
ss
inc
xorb
mov
jne
jbe
adc
lock
imul
lock
testl
push
inc
imul
adc
ja
jnp
int3
clc
or
fisttps
test
jo
sbb
je
imul
push
inc
mov
pop
jno
mov
or
test
pop
pop
mov
int
pop
inc
aad
jl
xchg
or
or
pop
popf
sbb
inc
mov
pop
sahf
in
jecxz
xor
lea
or
pop
or
pusha
sub
xor
jecxz
sbb
fwait
in
aad
repz
mov
adc
push
xchg
icebp
jo
mov
push
ret
inc
mov
stos
jo
pop
daa
jge
xlat
dec
lret
inc
into
jle
adc
aam
sbb
loop
sub
stos
xor
inc
and
lea
dec
jmp
mov
xor
xchg
repnz
xor
sahf
mov
outsb
scas
adc
and
push
into
call
fcomps
into
addr16
push
and
lods
dec
jnp
or
jg
xchg
arpl
push
fcomps
xor
lcall
push
jbe
ret
sub
dec
icebp
mov
int
rcr
or
inc
test
les
jmp
jp
jge
xor
popf
int3
call
mov
sub
loope
mov
ja
shlb
enter
imul
fldl
add
xchg
push
bound
lods
mov
cwtl
add
xor
jb
fsubrs
mov
addr16
sbb
imul
cmpsl
xchg
sahf
into
jg
mov
cmp
jno
repnz
call
cwtl
xchg
subl
mov
or
insl
inc
xor
mov
mov
xor
sbb
push
xchg
out
and
mov
decb
mov
cmp
xor
xor
insl
adc
mov
push
cs
add
sbb
inc
jb
xor
mov
scas
stos
push
jns
das
dec
or
dec
pushf
sub
pop
loopne
scas
nop
and
sub
fcmovu
cld
stos
clc
in
cmc
cmp
out
call
xchg
xchg
mov
in
push
and
out
rcrl
je
fs
imul
fcoms
cmp
mov
in
mov
je
test
xchg
cltd
daa
jmp
add
ret
repz
push
mulb
mov
or
cmp
xor
push
test
andb
mov
hlt
test
push
jle
sbb
jb
sti
nop
xchg
sub
inc
fsubrs
jb
pop
lock
mov
sub
cld
mov
pop
int
jge
lods
mov
out
popf
mov
fsubs
sub
cmp
push
xchg
je
jge
mov
jle
or
leave
in
xchg
sarb
std
pop
insb
shlb
jecxz
jmp
inc
stc
dec
movsb
gs
je
in
test
test
imul
ja
mov
add
mov
std
xchg
cmpsl
or
sbb
mov
lcall
xchg
aam
aad
pop
mov
adc
xchg
pop
and
hlt
loop
lds
add
mov
jg
into
inc
jb
fwait
and
or
outsb
cmp
movsb
push
push
mov
stos
lds
mov
mov
pop
push
into
pop
and
inc
mov
and
mov
out
pop
adc
aam
jp
addr16
outsl
mov
hlt
add
aas
mov
mov
pop
cmpsl
pushf
clc
adc
mov
push
inc
loopne
orl
popa
dec
adc
add
lcall
jae
jge
out
mov
push
pop
stc
sub
mov
std
add
out
jo
cmp
aas
pop
xchg
leave
mov
add
and
or
out
inc
ja
pusha
mov
and
xchg
mov
cmp
shlb
pushf
lcall
xchg
jbe
mov
popa
add
int
ljmp
cmp
fildl
das
mov
lods
pop
sbb
addr16
cmp
je
cmpsl
fwait
aad
scas
cmp
xor
iret
jp
fcoms
ljmp
xor
xchg
aam
jp
mov
test
add
and
into
pop
sbb
lret
pop
daa
shrl
pushf
mov
movl
test
fistps
addb
shrb
test
shlb
jl
jle
imul
pusha
xchg
scas
lea
or
insb
mov
clc
push
arpl
sbb
lahf
mov
push
imul
lahf
jns
enter
add
cmc
popa
and
clc
xor
scas
inc
mov
sub
es
pop
out
xor
cmp
push
mov
pmullw
inc
addl
pop
insl
jb
push
je
ja
testb
pop
lods
jg
out
mov
push
or
xchg
jge
enter
sbb
xor
shl
mov
imul
and
pop
out
cltd
fidivrl
jbe
je
ret
sub
gs
shlb
loop
test
inc
arpl
or
in
pop
xor
xchg
xor
and
les
ret
int3
popa
pop
cltd
sub
lock
outsb
in
adc
pop
or
scas
fiaddl
mov
psrlq
out
nop
xor
dec
cwtl
and
enter
aas
pushf
adc
xor
pop
cmp
into
jb
xorl
sbb
inc
sub
mov
clc
add
mov
and
mov
mov
xlat
jmp
scas
shrl
cmpl
ljmp
arpl
addr16
je
outsb
lods
dec
push
sub
test
adc
repnz
xchg
push
scas
iret
lods
shlb
or
aas
mov
mov
das
int3
pop
iret
mov
dec
into
sub
data16
and
inc
jge
lret
push
mov
pop
adc
sbb
repz
pop
into
add
andl
stc
fs
mul
jmp
rorl
inc
add
cmpsb
mov
pushf
aaa
xchg
jg
sbb
sbb
scas
push
arpl
inc
mov
fisttps
xor
stc
mov
xor
jmp
sti
and
shlb
js
jo
sahf
xchg
xor
and
mov
mov
mov
lock
jecxz
lret
pop
pop
rclb
mov
xor
pusha
lahf
into
cmp
les
push
dec
loope
jmp
mov
jl
xor
cli
sbb
inc
lret
push
in
aad
shl
add
push
pop
pop
push
aam
leave
push
or
div
shlb
push
pop
enter
ja
das
xor
movsl
jle
setg
and
sub
lahf
push
jns
rclb
rcll
mov
add
jne
outsb
clc
ret
aam
pop
adc
pop
xchg
inc
push
dec
jmp
adc
jno
mov
addr16
rcll
cmp
out
add
adc
sbb
ret
jmp
movsl
or
or
movsl
icebp
shrl
xor
imul
dec
push
pop
push
xor
push
mov
fsubrs
nop
mov
ja
add
pop
stos
imul
adc
lods
inc
dec
testl
mov
aaa
push
xchg
mov
sub
dec
and
mov
jmp
sbbl
fwait
pop
imul
aad
add
xchg
imul
test
push
stos
fwait
dec
push
aaa
inc
iret
cmpsb
cmc
xchg
out
add
push
repz
nop
inc
int3
mov
mov
mov
pop
pop
ja
add
jge
out
cs
das
fistps
stos
push
dec
dec
or
xchg
jmp
fcmovnb
xchg
adc
movsl
enter
xor
jmp
jns
jnp
idiv
rorb
jno
dec
jno
push
fisttps
cwtl
ucomiss
cmp
dec
pop
rol
dec
icebp
mov
jecxz
mov
push
nop
dec
popf
shr
jl
data16
xor
xchg
mov
pop
sub
sbb
test
and
addr16
add
inc
cli
and
sti
test
xor
push
bound
mov
pop
shlb
imul
pushf
aaa
mov
int3
pop
or
lods
pop
rclb
je
adc
mov
push
push
lcall
mov
add
ss
aas
dec
add
pop
pop
sbb
inc
inc
fs
movl
xlat
mov
addr16
lds
push
fisubrs
sbb
pop
je
aas
daa
xorl
push
dec
or
adc
out
pop
mov
pop
insl
push
iret
mov
cwtl
std
andl
lock
stc
cwtl
inc
data16
mov
xor
mov
rcll
gs
push
mov
jle
fwait
sub
inc
cmp
lahf
addr16
imul
imull
xchg
fcoml
aad
cmpsl
sub
mov
xor
subb
push
lret
iret
push
out
fsts
je
jmp
inc
outsl
fwait
aad
bound
cmpl
sbb
call
jnp
fdivrs
fisttpll
mov
add
dec
fcoml
xchg
xchg
xchg
mov
mov
cmc
mov
dec
push
loope
fsubrl
add
mov
dec
je
mul
push
je,pt
jb
cmpsb
add
xchg
fdivs
pop
imul
jns
adc
inc
cmp
pop
fidivl
shrb
sub
mov
jl
stos
adc
shll
jle
sub
fnstsw
sbb
adc
mov
outsb
sub
hlt
dec
lcall
cwtl
jae
mov
fstps
xchg
adc
dec
dec
push
xchg
stos
mov
sbb
jo
mov
jl
and
push
ret
mov
pusha
push
xor
mov
mov
ss
in
aas
bound
lahf
cltd
cwtl
mov
adc
and
addr16
adc
jbe
in
add
push
fisubs
xor
mov
add
sbb
jg
jns
sub
mov
jb
sub
imul
and
push
cmp
sub
fimull
pop
lods
xor
mov
adc
ljmp
cmpsb
cmp
add
iret
movsb
arpl
mov
add
lret
adc
inc
sub
les
fildll
lea
sbb
cmp
pop
pop
movsl
mov
std
lret
and
test
xchg
test
invlpg
push
bound
fnstenv
stos
fisubrl
mov
sbb
out
hlt
hlt
in
sarb
cs
das
in
imul
mov
pop
outsl
lret
jmp
xlat
lcall
aas
mov
les
jae
mov
mov
pop
dec
loop
inc
push
roll
aad
in
push
mov
iret
imul
pop
xlat
shlb
lcall
mov
data16
pop
and
inc
aad
les
push
xor
or
pop
cld
adc
pop
push
mov
loope
adc
mov
and
sub
call
ret
mov
fs
push
bound
push
sbb
cwtl
sbb
inc
cs
dec
lods
inc
cmp
ds
mov
shl
loop
cld
outsb
or
fnstsw
ret
sbb
pop
xchg
jb
in
pop
jecxz
pop
les
cmp
push
ret
xchg
adc
out
sub
in
les
ret
ljmp
and
sub
sarl
mov
mov
test
sbb
pop
inc
pusha
in
jae
arpl
push
decl
call
bound
or
jmp
cmp
and
xchg
xchg
int
mov
xor
cmpsl
xchg
and
mov
pop
pop
and
sub
pop
je
mov
cli
adc
xor
clc
gs
ret
test
jl
lret
xor
cmp
inc
sub
fs
das
fsubrs
jae
fwait
push
cmp
jae
mov
ja
add
mov
lahf
push
cltd
push
mov
ret
xchg
sub
sbb
cmp
cld
fistps
or
cli
inc
dec
outsl
add
iret
arpl
fists
xchg
mov
inc
and
jecxz
clc
aam
cld
and
xchg
cs
dec
and
add
sub
cmc
jne
cltd
or
xchg
out
mov
hlt
arpl
aad
jl
testb
ret
in
in
push
mov
out
mov
pop
movsb
add
add
shlb
pop
lret
xor
cmp
ret
push
adc
inc
clc
and
inc
std
mov
mov
iret
pop
inc
das
mov
mov
stc
test
bound
dec
sbb
or
fdivrs
jp
repnz
insb
pusha
pushf
fists
cli
out
add
jno,pt
into
cwtl
sbb
xor
decl
int3
pop
cmp
in
sbb
cmpsl
loopne
push
sub
jbe
cs
sti
mov
sti
jmp
leave
aaa
ss
sbb
xchg
and
mov
or
pushl
out
in
leave
popf
sub
pop
jl
inc
xchg
repnz
or
loope
xchg
mov
dec
mov
js
mov
scas
pop
dec
insl
mov
dec
push
push
notl
pop
out
dec
mov
into
stc
jbe
sti
mov
pcmpeqw
lcall
repz
fsubs
sahf
add
subl
jp
and
stc
loopne
add
mov
fidivrl
and
xor
or
mov
negb
jecxz
push
sbb
cwtl
jae,pt
sbb
cmp
in
mov
inc
push
inc
xor
scas
pop
dec
xchg
cs
loop
dec
ljmp
cmpsl
bound
out
xor
adcl
xchg
xchg
stc
add
aam
xor
pop
daa
cmp
and
in
repnz
fbld
sahf
add
mov
sbb
adc
xchg
lock
lock
popf
inc
je
cmc
data16
mov
lahf
mov
int
mov
shll
add
aas
loope
lock
mov
mov
dec
lea
js
and
cld
mov
jl
shlb
ret
fcoml
xlat
imul
fisubrs
dec
cmpsl
jb
or
push
fists
data16
mov
lea
sub
pop
dec
mov
data16
sub
mov
xor
or
ret
push
cmpsb
or
out
sub
lods
xchg
add
js
fsubr
imulb
mov
inc
cmp
lods
pop
or
lret
adc
mov
loopne
sbb
call
mov
test
mov
lock
mov
dec
mov
xor
out
sub
aas
cmp
repnz
cmp
cltd
xorl
lea
jp
push
sub
adc
loope
push
aam
lahf
inc
jb
jecxz
test
mull
adc
dec
rep
repz
jg
cli
push
in
cmp
lahf
shll
aam
sub
xor
push
dec
nop
sarb
xor
push
and
xor
add
and
ret
dec
mov
gs
mov
dec
push
dec
and
mov
sbb
jb
mov
andb
mov
popf
test
repz
jmp
cltd
rcrb
pusha
movsb
jb
push
iret
imulb
or
xchg
jnp
mov
cwtl
test
popl
sbb
jp
or
jb
sbb
mov
ret
pop
xor
les
fcomps
push
mov
adc
ss
sbb
pop
addr16
out
push
mov
sub
lods
mov
cmp
dec
mov
rcr
adc
int3
lods
sub
rcll
lods
fs
xor
sbb
add
sahf
stos
call
ds
das
adc
xor
sbb
fisubrl
fwait
cmp
divl
stc
push
aam
xorb
into
mov
dec
jmp
inc
dec
rclb
pop
mov
sub
add
movsb
cmpl
mov
dec
fcoms
fxch
push
add
sub
adc
lcall
dec
xchg
inc
push
icebp
or
sub
adc
cmovnp
incl
icebp
loopne
sahf
and
test
fimull
js
and
pop
loopne
dec
lret
cmp
and
add
pop
cmpsl
sub
jns
dec
mov
push
mov
inc
cmp
pop
sarl
or
push
cli
mov
or
add
xlat
push
pop
cmpsb
jmp
movsb
xchg
sub
mov
clc
mov
mov
push
cmpsl
imul
sub
stc
xchg
ja
cmp
xchg
mov
pop
repnz
cmp
lret
cwtl
out
sbb
ds
comiss
sub
pushf
mov
gs
inc
fdivl
mov
xor
dec
pushf
bswap
stc
mov
mov
sub
jmp
xor
sahf
or
das
std
popa
mov
pop
or
jae
into
xor
mov
push
fists
ret
repnz
loope
lds
or
mov
es
cmp
pop
or
mov
or
ja
ljmp
and
push
imul
pusha
movsb
mov
inc
in
test
rcl
xchg
add
xor
jecxz
or
mov
js
jecxz
cld
push
add
add
mov
mov
int3
mov
sub
mov
lahf
daa
ss
jp
arpl
jmp
out
arpl
mov
dec
mov
push
addl
pop
dec
sti
mov
sbb
sti
popa
mov
test
pop
xchg
mov
mov
and
dec
clc
xchg
push
ds
inc
jbe
jge
fucomp
cmp
inc
and
mov
dec
mov
lret
std
sbb
inc
jno
xchg
jge
aam
outsl
js
ret
bound
adc
pop
jo
inc
jae
xor
insl
or
popf
fs
iret
outsl
sbb
repnz
jmp
dec
imul
and
xchg
cmpsl
sbbb
pop
lret
ja
or
mov
mov
sbb
push
inc
dec
sahf
add
jnp
ror
ret
or
cmpsb
idivb
jne
std
dec
ret
xor
stos
push
add
xor
push
inc
inc
mov
jae
sbb
pusha
and
ss
add
nop
lret
andl
orl
shll
dec
subb
pop
jle
sbb
addr16
loopne
xchg
lds
aam
pop
lock
or
xorb
bound
enter
dec
xchg
in
and
jae
sub
lahf
adc
mov
jns
mov
sbb
xor
das
xchg
mov
js
sbb
jmp
insl
shrl
add
insl
inc
pop
cmp
pop
push
lcall
test
sub
mov
jno
ret
fcmovnu
addl
aam
mov
mov
pop
pop
cmp
sub
lcall
les
aaa
sbb
jbe
mov
push
lods
jns
ret
dec
dec
jbe
in
mov
cmpl
adc
rcrb
fimull
int3
je
out
jno
cmp
sarl
addb
mov
sub
mov
cmp
pop
enter
negl
pop
lds
test
push
inc
std
xchg
shlb
mov
fiaddl
xchg
mov
cmc
out
add
pushf
rcll
aaa
mov
jo
and
xor
inc
loope
bound
and
adc
pusha
mov
mov
push
push
mov
mov
adc
xchg
dec
fs
push
daa
dec
ja
add
inc
sub
push
push
fwait
enter
pop
icebp
inc
scas
shrl
outsl
je
cmc
or
pop
adc
aaa
outsl
js
xor
pop
repz
xchg
cmp
mov
test
pop
jl
testl
fstpl
lds
inc
sub
lea
je
jns
insb
push
ljmp
inc
flds
lcall
sub
leave
push
pop
lahf
fldenv
aad
mov
test
out
dec
mov
mov
inc
or
push
jno
dec
and
stos
cltd
mov
push
jmp
dec
cmc
shrb
ret
jl
jo
inc
inc
lods
ja
lahf
jp
pop
lret
sti
sub
cmpsl
mov
in
mov
andb
bnd
addr16
push
mov
jno,pt
add
mov
push
jns
andl
aaa
and
fsubl
xchg
push
sbb
mov
sub
jno
in
lahf
subb
sbb
xor
xchg
sbb
dec
popf
rol
sbb
lods
dec
in
inc
or
or
push
out
mov
ret
xchg
enter
out
packuswb
imul
jl
adc
sbb
xchg
rcrl
addr16
sub
js
shr
ja
cli
in
add
pop
jmp
ds
popa
dec
daa
cmp
push
mov
je
jle
push
loopne
jne
aam
divb
arpl
scas
mov
jo
in
leave
neg
movsl
mov
out
lods
sbb
fcomps
xchg
fdivs
mov
add
rcrb
and
dec
movsb
aad
fnsave
add
out
shll
rcrl
adc
sub
sub
ficoms
fbld
mov
fldcw
jbe
fiadds
cmpsb
jp
iret
pusha
inc
or
jg
insb
or
in
sub
cmp
aas
lret
adc
mov
xor
inc
xchg
mov
add
lahf
int
sbb
loopne
xchg
jnp
jecxz
pop
scas
sub
or
add
xor
mov
sti
pop
daa
flds
mov
popa
popa
leave
mov
loopne
dec
jmp
int
pop
cmp
fwait
jl
dec
dec
cmc
push
lods
inc
mov
xchg
sbbl
fistps
cmpsl
mov
pop
push
xor
jle
jnp
pop
xor
pop
xor
lods
mov
inc
in
movsl
mov
inc
mov
cmp
dec
cmp
jecxz
sub
sub
fists
fimuls
jo
pusha
mov
pop
mov
stc
cmp
cmpsb
xchg
mov
movsb
loope
cmc
jp
xor
dec
sahf
imul
nop
fdivs
lret
inc
inc
fdivp
pop
dec
sbbb
jp
xor
js
fwait
or
aas
fwait
mov
jno
push
data16
in
outsb
fnstenv
jge
inc
jg
rcrb
dec
loop
sbb
and
outsb
mov
add
push
pushf
xor
mov
push
jne
push
nop
ss
push
cmc
pop
or
inc
lret
mov
xchg
mov
and
jnp
xchg
out
out
xchg
push
in
ret
shll
or
mov
lods
sahf
push
test
ss
cmpb
mov
lods
cmp
pusha
pop
jge
fisubrs
nop
dec
mov
and
shr
dec
int
fldl
out
mov
mov
rcl
cmp
gs
cltd
pop
mov
fsubl
arpl
repz
jnp
add
stos
repnz
jbe
sti
mov
dec
pop
mov
pop
and
lahf
adc
dec
testl
sbb
es
hlt
call
je
fsubr
xor
push
xchg
in
les
mov
sti
aad
cvtps2pd
stc
inc
jns
shl
mov
xor
mov
sub
push
adc
mov
sti
test
rorl
ret
arpl
adc
mov
or
out
iret
pop
mov
bound
insb
xchg
sbb
mov
ret
into
pop
fsubs
aaa
leave
sbb
mov
into
and
sbb
jne
sub
fistl
jl
cmp
arpl
and
movsb
int
movsl
movsb
mov
jae
pop
inc
mov
jl
pop
call
jg
sahf
scas
xchg
mov
rcl
in
mov
cmp
dec
aam
xchg
or
out
or
xchg
adc
jbe
out
insb
and
adc
loopne
cwtl
pushl
add
dec
or
loopw
sub
imul
add
push
mov
pusha
imul
or
js
push
movsb
pop
pop
js
xchg
fwait
into
std
inc
out
fcoml
pop
jae
and
pop
pushf
insb
mov
push
fiaddl
mov
push
sub
or
cmp
push
hlt
dec
sbbb
push
mov
insb
ja
shr
xor
xchg
bound
jo
mov
sbbb
gs
mov
adc
jne
out
sub
test
cmp
mov
ret
xchg
imul
xor
aaa
icebp
jecxz
js
cmp
sarl
and
and
mov
data16
or
add
inc
cmp
fcomps
xor
rorb
xchg
shl
and
adc
loop
or
roll
mov
ficompl
mov
enter
adc
negb
inc
mov
das
clc
movsb
mov
mov
call
jp
out
daa
mov
lods
inc
adc
adc
test
adc
scas
jg
push
arpl
dec
fwait
sbbb
sub
imul
cmpsl
sbb
pop
in
test
cli
in
popf
jno
pop
icebp
pushf
pop
dec
push
imul
inc
out
gs
sub
imul
add
push
inc
lods
adc
xor
loope
shrb
in
nop
repnz
enter
je
repz
js
mov
push
lahf
mov
insl
push
imul
stos
mov
scas
cmp
jae
repz
or
loopne
or
test
mov
jmp
es
sub
adc
inc
sub
in
jecxz
js
enter
rorl
scas
ror
inc
sbb
cmp
dec
cmc
in
cmp
add
jp
adc
stos
dec
xchg
jg
lds
testl
sub
icebp
push
shlb
add
push
dec
inc
xlat
xchg
int3
loope
mov
ljmp
jl
add
mov
rcrb
aaa
inc
inc
call
mov
inc
jns
ja
push
mov
repnz
sbb
imul
cmp
movsl
cmp
jl
fdivrp
int3
lea
jne
iret
pushf
fldt
dec
xchg
addl
or
adcl
xchg
mov
iret
mov
fcompl
mov
roll
sbb
das
cld
inc
pop
push
xor
out
jmp
cld
shrb
int3
lds
dec
ret
imul
inc
add
call
lret
jno
lret
dec
lahf
add
xor
push
mov
inc
or
movsl
or
adc
ss
mov
cmp
push
jg
fstpt
lret
loop
mov
push
sarb
or
mov
jecxz
sbb
adc
cmp
int3
or
xor
divb
xor
idivb
repz
mov
sbb
jnp
sub
or
lds
mov
imul
hlt
pushf
or
mov
xor
fdecstp
cmc
jl
pop
jb
cmp
lcall
pop
dec
pusha
jnp
push
inc
pusha
out
rorl
dec
mov
ret
xor
mov
movsb
fcmovnu
test
push
cmpsl
hlt
xor
pushf
xchg
jp
lcall
cmp
rorb
cmp
movsb
dec
sbb
loope
jb
fisttpl
popa
int
pop
mov
mov
adc
push
cmc
mov
mov
daa
popf
mov
adc
adc
mov
insl
ss
addr16
sub
repnz
subl
test
mov
lds
hlt
push
shlb
jle
pop
popa
mov
iret
dec
enter
jge
scas
and
mov
aas
sub
xor
shll
loope
test
and
mull
dec
out
ret
dec
mov
or
mov
ficoms
in
adc
sub
cmp
or
mov
mov
sub
mov
das
ss
cmp
in
xchg
sbb
js
outsl
fidivrs
push
pop
lds
sbb
cmp
aam
and
xor
pushl
pop
sbb
pop
std
aaa
push
cs
or
fcmovb
xor
subl
iret
inc
outsb
jle
shrl
push
ficomps
or
pop
ret
fmul
add
dec
fstpl
dec
imul
adc
jmp
cwtl
lds
pop
xor
test
adc
inc
sub
xchg
rcrl
js
test
rolb
aas
mov
int
cs
jno
mov
cmpb
mov
ret
mov
xchg
pop
xor
push
bound
dec
ja
les
push
imul
xchg
jno
jno
jo
test
outsl
icebp
fsubrl
mov
sub
mov
mov
pop
das
scas
clc
pop
or
jp
in
rorb
xor
xchg
scas
xchg
push
std
cmpb
ret
ljmp
outsb
jae
fimull
xchg
mov
xchg
cmp
cmp
inc
cmp
dec
icebp
mov
fwait
mov
pusha
and
and
pop
mov
lret
es
stos
mov
and
or
xchg
lret
in
outsb
leave
fdivr
movsb
bound
fildl
imul
push
push
bound
lea
aas
pop
mov
pushf
push
aas
roll
inc
aaa
mov
inc
add
mov
inc
cmpsl
or
out
cmpsl
into
and
lods
stos
jge
mov
daa
addb
inc
rcrl
filds
cmp
adc
pop
jl
mov
or
cmp
push
ficomps
jo
sub
jae
xchg
stos
jb
and
jno
rcll
scas
dec
sti
stos
push
enter
push
imul
cmp
scas
push
or
lea
stc
call
addb
sbb
insb
push
bound
mov
xchg
les
sub
lahf
or
call
fistpl
or
sbb
cltd
outsl
jg
mov
test
cmp
dec
loop
push
pop
mov
mov
loop
xor
xor
or
loope
jae
xchg
lock
ljmp
xlat
cmp
mov
adc
jae
pop
cltd
push
pop
lret
pop
lock
test
shll
cmp
xchg
mov
shrl
das
dec
ret
fs
xor
and
mov
mov
cwtl
pop
cmpsl
pop
inc
push
sbb
je
daa
pop
pop
lea
es
xchg
xor
cmp
movsl
cld
xlat
and
push
jmp
adcb
dec
out
mov
mov
adc
neg
rcl
push
and
cmp
sbb
stos
ret
xchg
movl
adc
addr16
lcall
dec
push
mov
lret
add
push
push
sub
out
std
add
xor
decl
sub
addl
adc
add
ds
lods
daa
inc
xchg
rcr
orb
xor
outsl
gs
mov
cmpsl
adc
mov
jae
into
or
pop
dec
addr16
fwait
lahf
jbe
cmc
insl
in
xor
add
cs
das
jmp
out
fs
lcall
or
lea
stc
mov
cwtl
sbb
in
pop
gs
add
cmp
sbbb
mov
fidivl
outsb
aas
stos
outsl
loopne
sub
sbb
movsl
adc
lret
add
mov
and
rorl
ljmp
adc
jle
popf
daa
into
std
xchg
test
test
insb
inc
bound
movsb
je
push
in
dec
lods
or
xor
pop
std
mov
jns
leave
xor
cs
pop
cmp
push
cmpsb
and
pushf
movsl
sti
inc
xorb
inc
cmpsl
pop
enter
gs
and
mov
outsl
xchg
data16
pop
mov
popf
pop
rclb
push
mov
xor
lock
inc
cmc
and
adc
imulb
insl
xchg
icebp
stos
das
mov
xchg
insl
inc
and
cmc
pop
andl
sbb
shr
mov
mov
pop
sub
subb
jle
cmc
xor
nop
dec
dec
inc
and
aaa
xchg
pop
cmc
lock
or
sbb
iret
xor
jo
sub
pop
jae
sarl
ret
int3
lret
out
xlat
cmpsb
push
ss
mov
rcrb
ja
mov
sub
push
add
iret
mov
insl
pushf
inc
hlt
in
ret
sub
adc
dec
xchg
mov
jp
out
xor
push
aas
imul
mov
arpl
outsl
nop
lds
in
xchg
sti
int
pop
in
sbb
jmp
call
imull
in
add
jne
repz
jae
xchg
ss
fcomp
mull
in
gs
jg
lret
outsb
idivb
push
movsb
mov
lret
dec
loope
adc
mov
outsb
add
dec
dec
jo
sub
test
dec
testl
cli
imul
sub
and
fisttpll
adc
xor
mov
std
or
jbe
add
repnz
and
xchg
aad
or
repz
int
dec
shrb
in
cmpsl
mov
scas
loopne
cmp
orl
enter
dec
or
cwtl
fcoml
js
xchg
sahf
mov
out
adc
ror
and
lea
adc
mov
dec
test
fwait
sub
jb
incb
mov
iret
jg
xor
push
test
hlt
dec
or
aaa
cmpsl
xor
inc
pop
movntq
andb
cs
cmp
aaa
lea
and
push
icebp
mov
in
out
cmp
pop
mov
lds
sub
in
aad
bound
in
rcr
push
in
dec
sbb
icebp
push
mov
xor
into
pop
xor
out
mov
pop
sbbb
pusha
divl
inc
and
aam
cld
cwtl
test
jo
mov
js
xchg
sub
jns
sbb
into
dec
shll
mov
stos
dec
adc
fcmovnbe
les
cmc
mov
inc
icebp
insl
mov
adc
mov
lock
pop
cwtl
in
jg
sub
cltd
push
xor
aaa
add
sub
ret
lcall
cld
pop
dec
inc
pop
popa
dec
mov
test
adc
loop
push
and
mov
insb
cmp
leave
rorl
insb
mov
pop
dec
inc
lods
pushf
fisubl
xor
in
or
push
pop
popf
add
xchg
loope
popf
jbe
sbb
in
sti
in
out
sub
mov
xchg
ja
ss
adc
inc
test
mov
cli
lods
mov
cmp
mov
xor
sbb
sbb
rcrl
push
lock
dec
adc
mov
popa
mov
gs
dec
pop
into
xchg
mov
jb
mov
mov
ret
insl
ss
shl
and
pop
jnp
lods
jecxz
adc
icebp
and
loope
adc
inc
xchg
leave
lods
add
pop
push
dec
jb
push
pop
dec
mov
mov
pusha
mov
or
es
sub
out
insb
push
lret
add
add
jbe
dec
into
push
cmp
and
adc
xchg
mov
push
jns
stos
adc
in
les
and
dec
rcrb
cmp
fidivrs
xor
out
out
dec
mov
pop
test
test
and
inc
scas
pop
ds
insl
jge
outsb
aas
xchg
adc
push
push
sbb
xchg
jl
cmp
sti
in
shrb
or
jo
std
in
jecxz
mov
sub
push
aam
and
mov
mov
inc
std
jp
movsb
imulb
xchg
enter
xor
xchg
movsb
cmp
pop
mov
mov
add
test
and
cmpb
adc
mov
and
jl
add
adc
sub
push
mov
jb
mov
rcll
psllq
mov
sbbl
adc
hlt
jmp
inc
out
adc
aaa
push
les
in
out
rcrl
xorb
in
mov
je
loopne
data16
or
sub
icebp
and
push
scas
adc
or
int3
jne
jb
or
xchg
and
pop
adc
dec
out
xor
sub
dec
fs
into
inc
shlb
mov
mov
mov
sti
xchg
out
mov
les
mov
dec
inc
cmpsl
xchg
inc
cmp
push
iret
stos
sbb
adc
aas
repz
daa
lret
sbb
outsb
shll
xchg
pop
data16
dec
pop
pop
push
jle
imul
xlat
dec
jl
xchg
enter
push
sub
push
lahf
out
xor
inc
dec
pop
dec
hlt
dec
pop
in
add
dec
loopne
inc
jge
lahf
mov
lcall
cmpsb
les
ret
les
insb
xor
cltd
lock
fildl
stos
add
mov
mov
mov
ret
rcrb
mov
push
xchg
push
daa
sub
cmp
stos
xchg
mov
inc
and
lds
je
add
in
stos
xchg
and
pop
cmpsl
imul
imul
pop
pusha
cmpsl
enter
add
sbb
sub
outsb
js
inc
push
repnz
sbb
push
ret
out
or
repz
in
sbb
in
test
mov
jo
jnp
dec
adc
sub
fcmove
insl
and
lcall
xorb
cmp
icebp
sub
push
push
movsl
jmp
sub
daa
lcall
bswap
popa
xchg
aad
cmpsb
push
sub
cmp
fwait
jg
mov
xchg
jg
daa
mov
mov
notl
outsb
inc
in
adc
ja
sbb
pop
jnp
ror
lea
outsl
shlb
add
sub
fs
subb
fidivl
xchg
jo
fwait
sbb
xchg
addr16
jns
mov
jns
fsubrl
aaa
jns
inc
rolb
outsb
stos
push
cs
sti
or
mov
test
mov
adc
cwtl
sub
sbb
repnz
mov
lret
stc
enter
lds
stc
daa
jne
mulb
push
pop
stos
or
mov
es
jae
sbb
add
lds
adc
dec
lods
pop
cli
adc
mov
push
pop
sti
pushf
mov
int
or
test
push
test
mov
sbb
repz
adc
cltd
rclb
clc
push
cwtl
push
mov
push
lods
stos
inc
cmp
adcb
hlt
inc
add
adc
fldcw
enter
xor
inc
pop
push
xchg
pop
push
cmpsl
std
lahf
popa
addl
fdivrs
sub
xchg
idivb
lods
and
mov
int3
adc
cmp
gs
fdivrp
jo
lea
popf
xor
fistpll
mov
mov
pop
inc
fists
xchg
jmp
fstp
dec
pop
mov
mov
jecxz
js
mov
loope
push
test
hlt
nop
cmpsl
inc
cwtl
popf
cwtl
mov
cs
hlt
xchg
adc
out
and
testb
orb
adc
xor
xchg
jl
enter
cwtl
iret
jecxz
ss
adc
sub
ret
insb
jbe
or
dec
lock
leave
cmp
sub
dec
xchg
movsl
les
lods
pop
cmp
sub
arpl
movsl
jp
lds
orl
in
or
cmc
pop
das
inc
movsl
and
pop
loop
movsb
dec
sub
fldcw
jp
frstor
push
out
mov
das
lods
inc
push
aas
inc
inc
adc
fcomps
jns
jge
jge
faddp
bound
in
jp
out
mov
xlat
pusha
adc
insl
mov
add
jbe
adc
out
es
gs
js
sbb
clc
ds
mov
jecxz
sub
stc
addr16
lea
cmp
stos
mov
in
and
pop
in
pop
imul
int3
or
fists
cmpb
push
mov
xor
jle
dec
xor
int
push
xchg
adc
xor
in
clc
jmp
lods
addr16
mov
jns
pop
jnp
mov
movsl
adc
sub
pop
fidivl
jne
mov
add
out
mov
and
fcom
or
rorb
fcomip
call
push
mov
subb
add
movsl
dec
pop
nop
faddl
fld
sti
mov
xchg
push
sub
aam
mov
outsl
adc
jmp
cmp
testl
add
cmp
mov
or
mov
ret
xor
addr16
xor
push
cmp
xor
leave
jae
and
rolb
mov
adc
mov
stc
fstps
inc
in
inc
aaa
and
mov
ss
mov
mov
dec
shrb
imul
pop
cmpl
cmp
push
sbb
aas
adc
add
xchg
fucomp
shl
leave
mov
cmp
sbb
fs
aad
xor
xor
hlt
test
nop
cmpsw
jb
cmp
cmp
outsb
sbb
addr16
lret
cli
daa
ffree
aaa
pop
or
lahf
adc
xchg
gs
jge
dec
cmc
psubsw
mov
pop
das
js
clc
inc
xor
cmp
fbstp
subl
sub
add
push
scas
xchg
ficomps
lea
sbb
adc
cmp
adc
sbb
cltd
pop
inc
ljmp
int3
insl
lock
or
cmpsl
pop
sti
push
jle
xor
les
adc
cmp
mov
fldt
pop
xor
ret
sub
add
sbb
cmpsl
inc
or
mov
jge
xor
ds
inc
jge
outsl
fadds
int3
cmp
lds
xor
popf
mov
xchg
addb
xor
adc
notb
into
jecxz
inc
add
add
add
lcall
std
adc
add
xchg
int
test
add
mov
in
int
gs
xor
mov
lret
xor
fcompl
in
mov
mov
shlb
leave
lcall
xchg
sub
idivl
cmp
les
pop
xlat
jb
xor
in
pop
fs
push
pop
outsb
jns
mov
mov
loope
es
jecxz
sbb
ficoml
scas
mov
out
mov
sarb
mov
daa
xchg
or
data16
inc
subb
stos
add
or
cs
cs
pop
sahf
cli
jae
jp
and
mov
push
insb
jnp
iret
mov
push
invd
insb
mov
mov
cmp
jb
mov
or
add
inc
incl
rclb
pop
pushf
jle
nop
xchg
imul
sbb
daa
xorb
shrb
nop
mov
scas
sbb
negb
pop
mov
push
aas
dec
lcall
push
sbb
inc
jno
pop
pop
int
addr16
stc
cld
jmp
cld
and
lcall
sbb
insl
sbb
push
nop
dec
pushf
mov
or
lods
or
ffreep
xor
jp
call
xchg
cmc
hlt
addr16
sbbl
push
repnz
lods
mov
or
icebp
and
mov
in
inc
icebp
xor
in
in
rclb
push
int3
repnz
push
adc
sti
jp
or
cmc
mov
bound
push
push
sbbb
pop
test
jo
jle
jns,pt
addl
das
mov
cltd
ljmp
cs
and
pop
aad
and
mov
mov
push
xor
repnz
aaa
stos
das
lods
cltd
jecxz
ret
cmovns
jp
negl
and
popl
or
sbb
sahf
pop
mov
adcl
rorb
cltd
cwtl
add
sub
cld
aas
add
loope
xor
cld
filds
movb
ss
test
cmp
stos
lcall
test
cwtl
loop
lods
mov
sbb
pop
inc
rcr
xor
fcomp
cmp
push
sbb
cld
sub
insl
and
daa
push
out
cmc
inc
arpl
test
fwait
xor
push
nop
ficompl
out
outsl
cmp
icebp
dec
mov
and
shll
or
mov
pop
imul
test
and
and
neg
dec
sub
in
je
sbb
or
stos
cmpsl
mov
daa
and
cli
adc
jge
sub
inc
arpl
aaa
sbb
mov
stos
lea
push
pop
adc
dec
mov
enter
loopne
mov
out
mov
cmp
push
into
push
sub
mov
aas
inc
or
push
addr16
or
ret
add
bound
and
lea
out
push
aam
fidivl
paddsb
and
xor
lcall
roll
movsb
cmp
pop
add
mov
cld
mov
sub
in
nop
xor
add
aaa
inc
pop
mov
mov
fwait
lea
fs
int3
xchg
ss
and
mov
cltd
ret
cli
enter
popa
xor
adc
aad
mov
or
repz
mov
mov
or
mov
into
repz
pusha
mov
pop
jge
aam
add
push
imul
loopne
lea
repz
push
sub
in
pop
icebp
mov
pop
pop
mov
outsb
stc
popa
mov
push
and
adc
cmpsl
popa
lods
adc
icebp
icebp
sbb
clc
xchg
js
aaa
cmpsl
jg
nop
inc
push
adc
sbb
pop
stc
adc
push
mov
gs
push
fildll
lcall
out
jae
cld
add
cmpsl
cmp
inc
push
aad
fmulp
inc
mov
xchg
mov
cmp
sarl
sbb
subb
xor
fldt
xor
dec
mov
and
iret
repz
mov
stc
cli
insl
sub
loop
addr16
ljmp
sub
in
insb
adc
clc
aaa
pushl
xorb
or
cmc
jge
jge
sub
cs
subl
inc
jp
lds
lods
lock
xchg
std
dec
jmp
popl
adc
cmovl
pusha
or
and
cs
sbb
jge
jmp
es
insb
sbb
mov
mov
push
repnz
adc
in
add
lret
sbb
fiaddl
fldcw
dec
repnz
lret
sbbl
out
in
sub
or
cmp
data16
dec
popf
addr16
push
out
sub
pushf
pop
adc
cltd
pop
inc
mov
and
pushf
xchg
repnz
loopne
mov
stc
xor
inc
test
sbb
push
insb
in
fwait
push
cmp
sub
idivl
ja
sbb
sti
lret
dec
mov
mov
das
out
sub
jp
inc
pushf
sub
in
and
add
sbbl
fistps
cmp
jmp
inc
cmp
xchg
ret
xchg
ljmp
add
ljmp
sbb
mov
testl
fistpll
pop
ss
fistpll
pop
out
pop
out
popa
inc
dec
pop
movb
repnz
cmp
stos
pop
pop
sbb
cmp
in
fistps
aad
clc
cmpsl
arpl
hlt
dec
rcll
pop
popf
jmp
repz
repnz
jecxz
ljmp
add
ficomps
cwtl
dec
cmp
pop
std
outsl
jl
mov
mov
adc
movsl
cmpsb
mov
push
jle
xchg
inc
cmpsl
test
mov
cmpsl
add
inc
roll
pop
test
pusha
push
scas
inc
jns
insb
and
add
stos
shlb
inc
jns
xchg
ja
out
inc
mov
cli
sbb
jns
test
fistpll
lcall
cmpsb
jp
aad
fmull
dec
push
inc
enter
adc
sbb
ljmp
add
pop
sub
mov
sub
out
dec
mov
imul
cmp
in
xor
int3
iret
or
mov
andb
or
cmp
inc
and
pop
dec
or
sub
add
dec
lock
movsb
push
pop
lock
out
adc
cmp
hlt
pop
shlb
icebp
loope
pop
imulb
pop
jne
sub
lock
or
mov
sahf
daa
mov
std
add
test
mov
xchg
xor
lret
or
xchg
dec
pop
sub
add
std
in
shrl
and
dec
loop
xchg
ja
xor
aam
fiaddl
mov
cltd
pop
pop
dec
pop
scas
jae
jbe
jle
inc
mov
sub
inc
fwait
out
cltd
imul
out
sbb
negl
test
out
lock
arpl
nop
mov
and
adc
imul
mov
std
clc
mov
mov
or
jg
mov
xchg
inc
xor
adc
xchg
cmp
xchg
imul
lret
test
mov
xor
jl
lahf
fsubs
pop
addl
mov
dec
std
xor
push
jl
mov
pop
inc
sub
lcall
and
test
cmc
cmp
daa
iret
lea
sub
movsb
lret
testb
mov
loopne
xchg
sarl
jb
lds
daa
and
dec
xor
pop
inc
into
sti
mov
inc
add
mov
rorl
jp
xorb
test
cmp
inc
in
dec
jmp
pop
ret
mov
lret
test
push
xor
es
adc
jge
insl
pop
or
or
add
sar
lcall
testl
or
aas
fidivrs
shll
shr
dec
fcomps
cmp
sbb
test
sub
lret
stc
adc
mov
xchg
cmp
inc
iret
dec
pop
repz
mov
or
mov
and
pushf
icebp
mov
inc
push
jno
add
inc
fsubrl
fidivrl
or
repnz
scas
mov
mov
out
mov
mov
inc
out
cwtl
clc
jbe
inc
adc
ljmp
push
mov
cmp
sbb
mov
jbe
int3
push
in
dec
shll
mov
shrl
push
mov
fwait
mov
xchg
jns
mov
fwait
mov
fdivrs
adc
cld
mov
test
js
xor
xchg
leave
cltd
cmp
cmp
aam
into
pop
fistpl
sbb
mov
mov
xor
mov
push
out
sub
sub
dec
and
jb
addl
inc
sbb
test
pushf
pusha
pop
dec
adc
push
ret
cmp
test
jb
inc
push
push
mov
mov
pop
out
sbbb
jno
jb
test
adc
stos
bound
pushf
arpl
dec
dec
shll
jl
je
aam
sbb
rcll
call
add
cmp
aaa
sbb
dec
test
mov
jp
pop
movsb
in
in
inc
out
pop
sub
fnstenv
mov
packuswb
jo
pop
sbb
jae
repz
imul
jmp
adc
and
cmp
sbb
mov
push
xchg
lret
mov
push
jnp
mov
cmpsl
aad
ja
icebp
or
add
cmp
or
xchg
mov
mov
lret
stc
imul
mov
xchg
and
cs
inc
pop
outsl
push
mov
pop
mov
out
cli
add
pusha
mov
cs
arpl
imul
sbb
or
xor
xchg
mov
mull
rclb
int
pushf
mov
frstor
sti
sbb
fwait
pop
pop
outsb
out
shl
mov
mov
outsl
mov
mov
rorb
outsb
hlt
ja
and
push
xor
and
mov
push
subb
inc
cmp
cmc
addr16
pop
push
shrb
xchg
push
dec
sub
jnp
xchg
and
add
insb
loop
pop
mov
int3
mov
cltd
xor
xor
push
cld
sbb
push
sub
int3
add
and
pusha
fsubrl
jbe
lcall
mov
std
scas
mov
pusha
jmp
negb
fisubrl
or
outsb
enter
inc
in
ret
neg
push
mov
sbb
outsb
arpl
lods
js
jecxz
loop
mov
out
orb
mov
push
xchg
push
cs
pop
in
in
jle
cmpsb
sub
sbb
jne
aam
mov
mov
inc
bound
xor
mov
jne
xchg
sub
cld
mov
cmp
pop
movsb
xor
jae
ja
xchg
dec
ja
pop
icebp
add
sbb
or
jl
dec
fstl
out
push
lds
outsl
lods
fsubrl
mov
jno
gs
fldl
sbb
mov
pop
jnp
push
loop
loop
sti
or
dec
xchg
repnz
fnstenv
jg
xor
popa
push
mov
inc
iret
jmp
or
outsb
mov
adc
inc
xor
fsub
out
scas
test
dec
sbb
lods
xchg
hlt
sbb
push
sbb
xor
sub
cmp
sub
jnp
cltd
cld
mov
mov
add
clc
cwtl
imul
push
rcr
hlt
imul
ljmp
cli
mov
fldenv
jae
in
jmp
and
xchg
notb
xor
xor
sub
icebp
pop
cmpsb
aaa
aad
pop
xchg
repz
jmp
enter
push
mov
adc
mov
mov
push
je
loope
cli
adc
dec
jno
or
mov
arpl
sub
mov
mov
jno
out
lock
les
sbb
pop
out
rep
fildll
push
fisttps
xchg
notb
sbb
bound
cs
popf
enter
pop
mov
pop
xchg
dec
dec
sub
sbb
mov
aaa
cmp
adcb
mov
push
rorb
pop
dec
xor
lea
pop
xchg
jbe
imulb
lds
bnd
mov
pop
or
sub
cmp
ja
andb
inc
scas
cmp
mov
inc
fildl
add
sbb
fisttpll
inc
test
aas
test
push
sub
iret
mov
or
loopne
loop
daa
adc
cmpsl
or
ret
cmp
mov
pop
clc
mov
data16
das
stos
mov
lock
shlb
cmc
or
and
imul
mov
dec
lahf
dec
push
in
lods
jle
cs
and
push
mov
fsubs
mov
call
adc
out
incl
daa
inc
sysexit
and
jne
pop
iret
mov
push
mov
adc
or
je
cli
cmp
push
jp,pn
jnp
sahf
dec
pop
hlt
inc
sbb
lods
xchg
mov
int3
pop
test
mov
mov
cmpb
repnz
jo
loope
cmc
lret
xchg
testl
xor
mov
aaa
and
addr16
movsl
xor
jg
flds
cmp
mov
arpl
jae
in
inc
mov
rorb
popf
mov
rcrl
scas
sub
aam
adc
and
es
xor
js
out
cmp
cmpsl
or
adc
mov
ds
xlat
xor
sub
sub
or
divb
rorl
scas
adc
icebp
push
scas
movsb
gs
add
test
add
das
mov
icebp
sbb
int3
cmpsl
sbb
push
stos
push
inc
call
push
dec
jbe
jae
and
das
xchg
insl
test
mov
nop
dec
lahf
imull
sub
push
jmp
sub
xor
and
aaa
aaa
insb
mov
push
nop
mov
or
push
inc
pusha
pop
lret
mov
jb
cmp
je
inc
add
push
lahf
mov
bound
jb
ljmp
insl
mov
or
js
sbb
aam
mov
or
xchg
pop
push
push
movsb
data16
pop
aad
sahf
testl
mov
sbb
pop
xchg
dec
mov
inc
js
pop
cs
mov
shll
mov
or
scas
decb
jl
or
xchg
mov
xchg
and
mov
mov
stc
add
cmp
lss
subl
push
sbb
jne
imul
add
pop
inc
sub
pushf
push
mov
fs
jg
and
fildl
jb
add
push
xlat
sbb
cmp
and
rcll
test
lods
and
sahf
int3
imulb
sub
adc
adc
ljmp
pop
and
mov
aam
add
sub
nop
insb
mov
mov
shll
mov
lcall
or
jmp
mov
mov
mov
xchg
push
dec
push
insl
rcrb
pusha
cmp
aaa
add
call
lret
inc
pusha
and
loope
leave
mov
xor
rep
cltd
push
pop
mov
vmovd
cltd
pop
lret
cmpl
push
mov
push
xchg
push
cmp
push
and
test
inc
pop
mov
out
push
sahf
push
outsl
sub
xchg
mov
mov
mov
sub
or
fstpl
inc
xlat
push
mov
gs
das
lock
cld
jmp
jmp
fs
pusha
hlt
es
popa
mov
mov
pop
adc
test
cmp
inc
adc
fwait
es
adc
data16
hlt
in
push
lahf
aas
popa
dec
enter
imul
push
sub
inc
cwtl
mov
jno
push
and
xor
pop
xor
fstpl
xor
or
insl
cmp
les
jmp
add
xchg
dec
inc
xchg
push
mov
out
rorl
push
cmp
lods
mov
std
bound
lret
into
idivl
dec
lret
adc
jae
xchg
pop
or
subps
rorb
incb
sub
ljmp
fs
xchg
push
mov
cs
jmp
xchg
out
insl
packuswb
mov
insb
inc
cmpl
or
imul
add
jle
mov
lock
shrl
mov
jle
insl
mov
int
popa
addr16
pushf
or
push
inc
les
xor
arpl
jne
sbb
or
ds
ljmp
mov
cmp
inc
loope
mov
in
jl
sahf
fimull
insb
or
xor
dec
mov
sub
movsl
inc
mov
xor
push
fs
test
cld
es
sbb
hlt
lods
inc
cmp
mov
enter
leave
inc
je
push
test
xchg
xor
dec
jp
loope
scas
sbb
sub
jg
stc
fwait
repz
pop
cmpsl
nop
push
in
adc
jl
das
fnstsw
ret
movsl
popf
mov
sbb
mov
movb
push
test
push
mov
jne
mov
ja
fs
movl
aam
addr16
dec
adc
xor
xchg
in
sbb
push
movsb
sbb
cmp
inc
push
pop
loop
or
or
jp
xchg
shll
pop
lcall
xchg
push
mov
lahf
jle
mov
fmull
pop
pop
jno
enter
cltd
jle
fcomi
mov
les
cmp
int
mov
mov
inc
loop
add
push
push
inc
iret
pop
xchg
sub
cmp
dec
xor
pop
inc
mov
dec
out
pusha
cmc
aas
into
sbb
sbb
pop
mov
jne
les
arpl
pop
dec
inc
pop
and
pushf
sbb
pop
out
or
adc
dec
daa
pop
cmp
ret
jae
mov
stos
dec
xchg
test
mov
push
in
sub
mov
aad
mov
lret
push
inc
cmpsl
cmp
cmp
push
leave
out
push
dec
outsl
jno
inc
leave
jae
hlt
insb
inc
popf
shlb
ss
jno
mov
ljmp
cwtl
icebp
jg
push
inc
cli
loop
jge
xor
mov
lods
cmpsb
outsb
mov
pop
mov
hlt
pop
pop
clc
cli
sbb
jmp
dec
sub
mov
xchg
cmp
mov
fwait
mov
loopne
aam
adc
xchg
mov
loope
mov
adc
sub
or
in
ss
stc
bound
push
mov
test
push
and
sub
sbb
aad
rcl
add
push
sbb
cmp
aas
lods
push
nop
and
sub
test
pop
xor
cmpsb
lahf
cmp
push
dec
dec
sarb
sbb
movsb
add
mov
sbb
stos
cmp
in
sarb
ja
pop
outsl
cmpsl
int3
cmpsb
push
inc
insl
xchg
cmc
jecxz
shrl
jp
mov
addr16
dec
dec
lds
add
inc
adc
xchg
lcall
frstor
stos
lock
loope
shr
aad
push
sbb
imul
rolb
cwtl
frstor
adc
je
jge
cmpsl
stos
imull
lock
dec
ret
add
xor
adc
jmp
loop
sbb
daa
xor
dec
xchg
mov
and
cmp
pop
movsb
pop
rolb
or
add
outsl
mov
sub
sbb
outsl
out
stc
dec
lds
mov
cmp
jp
incl
aam
pop
or
pop
cs
test
lock
adc
sbb
popa
out
pop
repz
jb
adc
cld
and
and
sbb
mov
je
test
and
and
push
call
jl
cmp
popf
inc
sub
mov
mov
repz
popa
cltd
dec
icebp
loope
add
jle
sbb
dec
pushf
pop
jmp
mov
cltd
xor
xor
mov
adc
movsb
into
popa
cmpsl
gs
mov
repz
push
ret
adc
fld
pop
and
add
loopne
jg
out
icebp
aam
cmpb
sahf
sbb
sbb
dec
or
iret
jo
nop
push
loope
pop
imul
ret
and
pop
sub
fistps
or
xor
cwtl
es
bound
jo
int3
scas
pop
lret
push
jbe
jmp
cld
dec
repnz
add
in
jmp
mov
out
pop
int
adc
incl
outsb
sub
js
aaa
xor
daa
cmp
out
mov
pop
inc
ja
adc
leave
scas
pop
mov
sbb
xchg
cmp
in
out
sbb
xor
out
ds
divl
dec
xor
cmp
xchg
pop
push
lods
repnz
in
dec
pop
sbb
sbb
mov
insl
mov
dec
popa
sahf
dec
call
insl
stos
mov
mov
lret
repz
push
das
scas
sub
pop
bt
cwtl
jp
mov
subl
rol
ljmp
leave
scas
xor
push
fs
inc
imul
or
or
ja
in
repz
sbb
xchg
repnz
and
hlt
pop
repz
inc
cltd
in
cmp
daa
std
xchg
iret
push
out
or
cmp
jmp
mov
sub
mov
leave
jmp
push
add
inc
ljmp
stos
push
mov
leave
xchg
cli
call
shrb
fmull
lcall
fsubs
mov
xchg
and
arpl
jp
loop
sub
sub
xchg
jp
mov
fisttpl
push
pop
jge
sbb
push
aas
fsubs
adc
mov
leave
call
sahf
mov
iret
lods
inc
imul
add
out
add
movsb
xor
push
bound
add
repz
mov
out
dec
clc
nop
fucomp
lret
sub
or
std
xchg
sbb
aam
xlat
les
push
xor
mov
pop
mov
lds
cmp
or
mov
lcall
shrb
shl
mov
daa
test
insl
pop
dec
cwtl
adc
fs
ja
and
or
and
insb
iret
xor
lret
in
jmp
test
mov
lret
inc
jmp
or
pop
loope
dec
cmpsl
pop
outsl
nop
leave
inc
loopne
cmp
stc
cmpsl
lods
rclb
scas
xchg
mov
outsl
mov
popf
mov
pop
push
gs
xor
push
shlb
mov
or
pop
xchg
movsl
test
out
adc
mov
jmp
adc
stos
jno
sbb
mov
add
imul
std
fs
test
sub
inc
cmp
ficomps
push
andb
jns
dec
push
sub
and
shl
dec
sti
cmp
mov
repz
cmc
inc
pop
ret
imul
outsl
mov
jl
fldl
jl
bound
ret
je
lods
add
mov
dec
inc
adc
xor
jbe
adc
jbe
mov
xor
rcrb
cmp
out
xchg
xor
lods
push
aam
ret
mov
leave
cltd
mov
dec
mov
xor
lahf
in
clc
lret
testl
and
dec
out
xchg
and
mov
mov
mov
out
sub
xor
mov
bound
ret
lock
xor
lock
dec
pop
fwait
cwtl
insl
lret
clc
xchg
leave
mov
dec
push
inc
cmp
repz
mov
mov
sub
pop
cmpsl
sbb
add
stos
push
or
inc
out
and
sub
icebp
lds
in
lea
sub
imul
int
stos
imull
mov
aad
inc
imul
jecxz
jge
dec
movsl
mov
push
mov
jmp
scas
icebp
data16
out
pop
xchg
jbe
jnp
leave
push
into
pop
sbb
mov
notrack
test
ret
xchg
std
fs
es
xchg
hlt
mov
dec
test
scas
call
imul
sbb
and
dec
or
dec
cmp
sti
inc
mov
adc
jge
jecxz
fs
andl
ret
adc
cmp
fcoms
or
gs
cmp
mov
scas
push
push
stos
repz
daa
sub
mov
je
test
int3
cmp
xor
ds
push
jbe
sbbl
jne
stos
fdivrp
and
lock
push
jno
cmp
sub
mov
or
inc
xchg
push
push
dec
ds
or
loopne
or
aam
repz
roll
mov
jmp
rorl
jnp
into
bound
ljmp
shll
jmp
icebp
jp
and
jae
mov
sarb
mov
add
hlt
ret
jmp
aas
mov
lret
inc
dec
adc
jne
xchg
daa
pop
inc
sti
std
and
sub
movsl
cmp
leave
roll
out
adc
outsb
test
ja
xchg
arpl
jns
test
and
lea
mov
movsl
in
cli
loop
lcall
add
outsb
ljmp
test
and
test
sub
out
jl
subb
roll
cmp
sahf
push
pop
in
dec
rorl
loopne
je
sbb
inc
test
int3
mov
popf
cmp
pop
inc
add
addb
xchg
stos
adc
addl
cmp
mov
push
adc
data16
sub
jl
sbb
movd
push
mov
push
lock
inc
and
xor
test
inc
popf
data16
and
mov
sub
add
jle
fisubrl
jl
ja
cmpsl
bound
xchg
loopne
mov
jno
sbb
push
fcmove
adc
or
and
push
push
xor
pop
out
inc
ret
por
xchg
scas
jbe
std
inc
outsb
mov
js
fs
fnsave
xchg
pusha
mov
xor
daa
xchg
push
sub
push
lret
mov
cmc
push
fbld
pop
xchg
int
sbbb
mov
inc
add
jae
gs
pusha
clc
jmp
sub
or
mov
int3
dec
lods
ret
and
xchg
pop
push
sbb
insl
fsubp
jb
pop
lret
lahf
aam
stos
test
mov
inc
adc
rcll
jno
jge
jl
mov
xchg
iret
nop
sub
add
and
xchg
xchg
push
insl
dec
mov
or
mov
xlat
mov
jbe
xchg
arpl
in
in
xchg
push
push
mov
adc
mov
test
sub
push
imul
insl
mov
sbb
jmp
xor
adc
cmpsb
push
imul
and
popf
call
xchg
ja
xchg
iret
in
cmp
les
dec
js
stc
jns
jo
jecxz
xchg
mov
rorl
mov
stos
mov
jge
aam
dec
mov
loop
and
jle
movsl
fistl
lods
clc
daa
mov
hlt
orb
dec
mov
mov
jmp
jge
cmp
sbb
pusha
clc
jns
push
mov
repz
xor
leave
cs
pop
xchg
loope
aam
aad
ret
xchg
push
inc
jae
int
fwait
icebp
xor
sbb
in
push
js
mov
dec
loope
mov
sbb
in
inc
jmp
push
and
mov
imul
icebp
dec
int
imul
push
pop
ds
dec
pop
insl
mov
out
in
mov
xchg
test
dec
mov
hlt
lods
leave
cmpsb
andb
popa
fcmove
stc
and
push
nop
adc
bound
fsubl
mov
sbb
es
sub
mov
mov
xor
imul
sbb
aad
imul
scas
sbb
push
pop
and
leave
xchg
shlb
lret
in
push
mov
mull
mov
and
in
lods
xor
push
mov
pop
xor
jp
mov
fsub
gs
gs
cli
xchg
shrb
int3
nop
js
cmp
adc
ret
pop
mov
aas
cmp
jecxz
rcrl
mov
cmc
stos
sbb
roll
add
in
mov
rorb
jecxz
cmp
ss
icebp
dec
pushf
lahf
divb
fcos
xor
mov
add
or
das
cmc
push
sbb
cmpsb
incb
push
push
cmp
int
out
cmpsb
and
adc
divb
sub
int3
xchg
dec
lcall
clc
sbb
push
adc
outsl
ljmp
and
mov
mov
test
cmp
or
add
pop
loop
inc
sbb
cs
shl
in
flds
inc
jmp
push
rcrl
sbb
inc
popa
addb
inc
icebp
test
sub
add
lret
cmp
cmpsb
push
mov
and
cmp
test
and
popf
mov
cmp
outsb
xchg
cmp
inc
or
cmp
cltd
mov
paddusb
jl
xchg
mov
inc
inc
and
push
cmp
add
jmp
cli
inc
gs
lock
fistps
mov
push
das
shl
mov
cli
repz
jno
sub
orl
and
or
add
push
mov
arpl
inc
or
xlat
pop
jmp
cld
and
cmp
push
adc
data16
sub
nop
dec
js
push
mov
inc
sbb
inc
and
or
in
lds
cmp
test
mov
bound
mov
sbb
lea
stos
jp
xchg
and
add
jne
xor
push
inc
in
and
push
jl
push
mov
movsl
popa
mov
pop
jle
xchg
aaa
sub
pop
mov
mov
mov
sar
cmp
fwait
push
add
sbbb
lods
in
and
jecxz
xchg
ret
and
fwait
pop
out
pop
or
pushf
jp
test
and
shlb
repz
daa
or
sub
mov
xchg
movsl
sarb
jns
mov
push
addb
xchg
js
xchg
and
sub
and
jns
gs
mov
sarb
int3
mov
filds
or
jae
jp
add
cmp
push
enter
ljmp
shll
and
pop
and
rcrb
sbb
scas
jp
into
add
cld
add
inc
sbbl
cmpsl
inc
mov
lea
test
push
das
out
push
cmpsl
adc
scas
push
popa
mov
in
ljmp
xchg
mov
sti
fucomp
das
xorl
stos
adc
in
aam
or
mov
add
in
div
mov
iret
dec
xorl
or
inc
jo
lods
clc
add
push
clc
or
or
push
jmp
push
inc
data16
and
add
or
pop
cs
cmp
xor
mul
fwait
push
vpand
mov
mov
xlat
clc
add
cmp
jbe
lods
mov
cmpb
dec
cmp
scas
das
loop
pop
push
sbb
aam
sbb
inc
gs
mov
mov
test
ja
imul
mov
push
div
add
rcl
jbe
pop
shr
repnz
popa
popl
pop
xlat
ds
sbb
xchg
or
mov
push
pusha
xchg
test
scas
test
jbe
mov
xor
inc
jecxz
jge
sbb
xor
xchg
xor
or
movsl
testb
clc
xchg
adc
cmp
cmp
enter
loopne
adc
xchg
sahf
push
sub
fisubrl
dec
inc
fwait
std
mov
dec
dec
jae
popf
std
dec
lahf
mov
sub
adc
mov
dec
cli
inc
and
ret
cmp
mov
add
loopne
mov
test
dec
adc
insb
pop
outsb
push
cmc
sub
in
pop
xchg
pusha
xor
mov
push
mov
push
insl
iret
cmp
ds
mov
lock
shll
pop
push
cmpsb
iret
mov
adc
pop
jp
popa
mov
addl
js
push
xchg
loopne
out
sub
js
imul
rclb
mov
mov
sahf
xchg
adc
dec
adc
ljmp
mov
shrb
push
inc
jl
sahf
sub
pop
loop
test
jnp
pop
hlt
mov
lds
add
aaa
mov
jl
js
lret
test
test
push
inc
cmpsb
lods
cmpsb
aam
incl
or
cs
cmp
xor
shrl
jecxz
add
out
jne
repz
cmp
push
int
jmp
sub
cmc
addl
sbb
in
gs
and
mov
in
mov
jge
rcrb
data16
aam
inc
xchg
fists
mov
ret
jp
fidivs
push
fnstsw
pop
lock
out
push
sbb
sbb
adc
in
les
xchg
pop
xlat
insl
xchg
mov
xlat
fs
lods
popf
movsb
pushf
aad
dec
lea
clc
imul
rorl
ror
mov
cmp
adc
inc
ja
sbbl
cmp
insl
sub
lahf
or
shll
mov
jbe
lods
mull
cmp
mov
xchg
inc
insl
mov
shrl
xchg
push
popf
push
or
cmp
pop
les
ljmp
pop
outsb
aaa
cmp
jno
or
out
mov
adc
test
sbb
icebp
push
inc
test
jns
test
mov
je
or
data16
jmp
insb
push
ud1
test
xchg
xor
or
inc
ja
or
or
xlat
sub
mov
push
pop
lods
adc
out
andl
loop
xchg
fwait
cmp
and
cmp
rcpps
jae
xor
int
pop
lock
sbb
orb
hlt
add
dec
push
pop
icebp
adc
dec
aam
adc
std
pop
mov
decl
inc
mov
and
ret
pop
call
mov
sub
nop
add
movsl
sarb
fistps
push
pop
insl
test
push
inc
cmp
xchg
arpl
enter
cmp
loop
inc
push
imul
ss
add
movsl
fmull
imul
dec
cmp
test
loopne
jno
stc
mov
outsl
mov
mov
fists
and
xchg
and
jmp
xchg
pushf
jbe
loope
xchg
jge
inc
inc
jl
jno
call
outsl
cmp
js
orb
imul
jne
jg
sti
push
cmovbe
loopne
rolb
ret
mov
inc
into
xchg
lods
push
mov
xchg
cmp
push
cmp
test
mov
pop
in
lret
jg
std
inc
inc
stos
popf
in
adc
rorb
fstpt
ja
hlt
mov
mov
adc
les
mov
pop
or
sti
cli
xor
enter
pushf
fstps
adc
pushf
divl
insb
dec
inc
pop
mov
pop
arpl
add
scas
xor
jge
ljmp
cld
and
andl
js
adc
dec
ds
stos
ret
jbe
cmpsl
xchg
jl
fwait
test
jb
es
out
movsl
test
add
fisttpl
aad
in
jg
mov
inc
fsubr
loope
ja
xchg
ja
inc
mov
rcll
cs
pushf
push
mov
mov
sub
pop
sub
push
sarl
fmull
dec
hlt
mov
mov
stos
and
jnp
mov
cld
sub
sub
pop
movsb
lret
movsb
inc
icebp
lock
cmc
fbld
lret
xchg
push
mov
out
cwtl
push
das
nop
pop
or
dec
pop
imul
outsl
inc
test
push
andb
pushf
notb
shl
fldl
dec
shr
push
mov
sahf
fcmovnb
out
loopne
imul
enter
or
xchg
mov
and
mov
in
xor
jp
push
sbb
into
divl
jno
cmp
sbbl
fcomps
shll
adc
lock
daa
xorl
lret
test
xchg
stc
dec
test
add
mov
std
imul
mov
mov
xor
daa
movsl
add
call
push
xor
push
push
repnz
es
add
add
aad
adc
outsl
inc
lods
sbb
pop
pop
mov
dec
adc
fs
lahf
lcall
lock
repnz
adc
pop
repnz
xchg
push
pop
pushf
mov
dec
enter
enter
push
push
xchg
xchg
repz
xor
in
jmp
clc
fcomip
aad
test
test
fs
bound
push
clc
cltd
pop
pop
sbb
mov
and
dec
ja
lcall
inc
xchg
cmp
sbb
ljmp
sub
jb
cltd
fwait
sahf
mov
scas
mov
enter
jnp
stos
enter
jbe
xor
out
mov
movsb
bound
push
fidivrl
or
inc
cmp
out
lahf
sub
mov
xchg
pop
scas
pusha
mov
std
mov
das
and
or
dec
xchg
jg
out
jle
in
dec
wrmsr
cmp
bound
into
js
sarb
fsubs
arpl
lock
sbb
adc
add
out
mov
adc
mov
imul
lea
out
add
dec
test
out
mov
clc
push
dec
sbb
test
cmp
push
fnsave
sbb
sub
in
lods
adc
push
dec
lahf
jns
out
jns
mov
movsb
mov
xchg
sar
sbb
rolb
mov
packsswb
insl
enter
jle
fstps
jnp
ret
gs
xlat
xchg
cmp
insb
cwtl
or
add
pushl
or
repz
cmc
imull
test
out
xchg
push
mov
sub
les
mov
inc
or
gs
cltd
mov
mov
test
push
sbb
and
inc
cmp
pop
clc
jge
test
out
int
or
in
jge
mov
push
jne
jge
push
call
xchg
push
out
stc
push
mov
pop
lods
push
orb
cmp
das
cmp
imul
dec
sub
sbb
mov
mov
cmp
mov
das
fidivrl
mov
je
movsl
xchg
das
repz
sub
scas
pop
stc
adc
fildl
shr
mov
mov
cltd
fsubrs
cmc
fcoms
test
sub
mov
mov
fdivrs
mov
sub
and
jge
jl
es
sbb
iret
cmpl
ja
fidivl
inc
stos
add
cmp
cmpsl
sub
xchg
dec
add
push
insl
adc
arpl
sbb
cmp
push
push
sbb
in
push
mov
loopne
out
inc
add
inc
scas
jns
or
and
icebp
pop
xor
lods
add
pusha
sub
call
xor
scas
and
cwtl
lea
fsub
xor
or
mov
cli
loopne
insb
push
push
pop
iret
fnstcw
mov
cmp
inc
cmpsl
mov
imul
insb
fcmovnbe
jb
push
stc
pushf
mov
je
mov
push
push
iret
pop
jbe
push
pop
adc
pop
push
mov
xchg
xchg
clc
outsl
lods
incb
push
or
cmp
std
stos
xchg
push
cltd
imul
mov
cld
enter
shl
hlt
ss
fs
and
jns
lret
mov
mov
mov
hlt
inc
sbb
sub
ja
mov
sarb
jle
aam
pop
lret
xchg
jecxz
test
jo
out
inc
xchg
and
leave
xchg
add
cmp
hlt
ds
xor
repz
mov
popa
jnp
cmp
jle
push
mov
mov
sti
or
xchg
inc
daa
mov
pop
mov
aad
and
add
sbb
jl
inc
mov
jbe
jle
out
inc
data16
jne
rolb
xchg
xchg
cmpsl
pop
mov
jno
push
pop
out
cmpb
mov
xchg
enter
or
les
mov
je
shlb
push
or
mov
adc
and
int
stos
subb
clc
mov
dec
cmp
pop
pusha
add
or
addr16
push
or
arpl
ret
adc
pop
lahf
sub
sub
inc
outsb
sub
lock
adc
and
neg
out
ficompl
ja
push
out
mov
cmp
dec
xlat
repz
sub
and
sub
cmpsl
jp
sbb
adc
xor
sarl
mov
aam
addb
orl
inc
or
xchg
jne
cmp
cmc
xlat
ljmp
test
mov
imull
mov
push
fldcw
xchg
jl
inc
int3
aam
lret
icebp
in
gs
scas
or
jno
add
or
call
shll
test
lahf
test
and
movsl
pop
xchg
jg
clc
sbb
mov
lock
js
fnsave
shl
and
rcr
iret
mov
push
add
arpl
inc
mov
adc
shlb
imul
cltd
stc
in
int3
aas
nop
cltd
out
std
xor
imul
jns
ret
ss
andb
add
cmp
mov
mov
add
stos
pop
push
and
ljmp
or
sbbl
xor
fcomi
and
fisttpl
pop
cli
sbb
ret
dec
adc
xchg
sar
leave
xor
gs
xor
mov
pop
inc
jg
push
sub
outsl
mov
aad
jne
lret
sbb
mov
xchg
rcll
in
jge
and
insl
jne
in
mov
outsb
adc
dec
aas
ret
lea
mov
cmp
pop
movsb
mov
jo
mov
sbb
popf
or
or
inc
std
mov
popa
cmp
fadd
jo
data16
rclb
ficompl
mov
popf
cmp
fsubp
fwait
mov
lahf
pop
pop
jnp
sub
loopne
rcrl
lahf
xor
jg
loope
rcr
icebp
negl
or
sarl
mov
fdivs
enter
shl
das
sbb
imul
roll
lret
adc
sub
mov
sub
jae
cmp
jne
mull
mov
ret
mov
mov
cs
inc
mov
jb
or
xor
pop
cmp
jb
ret
addr16
mov
dec
inc
jns
dec
sbb
fsubs
lret
sysret
stos
jg
aad
cmp
mov
int3
pop
out
cmp
movsb
push
sbb
dec
mov
dec
icebp
lock
jmp
add
mov
fsin
xor
pop
subb
or
push
pop
fcomps
pop
adc
jo
lret
fisubrl
pop
pcmpeqb
cmp
aas
push
and
cmpsb
std
ret
cwtl
sbb
mov
outsb
repz
and
lret
cmp
call
inc
and
int
pop
popa
call
jecxz
mov
and
cld
mov
fnstsw
push
into
insl
dec
xchg
pop
fwait
sbb
xchg
nop
add
hlt
stos
jmp
pop
adc
shrb
sti
icebp
and
faddl
xchg
inc
das
loop
dec
js
xchg
or
mov
shrl
fldt
loopne
sti
inc
and
mov
mov
ret
pop
pop
nop
jmp
call
into
or
imul
jb
test
test
sar
inc
mov
movsl
inc
sahf
pushw
xor
jge
push
out
out
xor
fadds
push
xor
fdivl
push
lods
test
or
push
hlt
and
push
sahf
aas
sbb
push
negb
loop
adc
shl
adc
add
loope
xor
pop
ds
ds
xchg
pusha
pop
cmp
sub
sub
push
push
bound
repnz
jecxz
lods
jge
fbld
daa
daa
mov
xchg
leave
dec
test
and
movsb
cmp
aad
inc
nop
cmc
jbe
in
inc
cli
dec
mov
fstpl
and
sahf
stos
lds
push
pop
sbb
mov
test
scas
push
stos
xor
mov
loope
and
int3
pop
xchg
and
aad
aaa
stos
or
mov
cmp
jecxz
inc
aas
add
push
hlt
pusha
shlb
clc
pop
mov
insb
imul
adc
pop
idivl
jp
adc
bound
or
jo
in
cltd
sub
ja
jle
xor
pushf
dec
test
scas
xor
cmc
jo
inc
pop
lods
inc
sub
imul
shll
push
std
xor
in
sar
mov
add
inc
daa
cmpl
dec
movsl
mov
aam
cmp
fdivrs
fisubl
jge
les
loopne
popa
je
cwtl
bound
jnp
imul
xchg
mov
fucomi
sbbb
jecxz
dec
jns
or
lods
sbb
repz
aad
jno
insl
out
jb
popa
push
repz
in
ss
xor
pop
sahf
jmp
xchg
sbb
fisttps
es
cmp
mov
mov
jge
dec
or
xor
jp
les
and
clc
imul
fidivrl
stos
cs
in
cmp
mov
enter
xor
sub
mov
jae
sub
pop
push
mull
stc
inc
push
scas
xchg
sbb
fbld
fcoml
xor
jle
jmp
inc
push
jecxz
loopne
xchg
dec
pop
imul
jns
call
enter
jnp
shll
imul
icebp
enter
sbb
dec
sbb
xchg
add
push
xchg
in
cltd
lock
aam
dec
pop
inc
int
rdmsr
je
mov
out
lret
loope
and
pop
fsubr
frstor
and
lock
cltd
lea
add
cmp
idiv
inc
fwait
stc
sub
mov
pop
sti
mov
mov
sbbl
lock
adc
fadds
out
add
dec
add
cmpsb
sbb
dec
pop
dec
mov
fisubrs
dec
lcall
add
out
mov
test
inc
test
mov
ja
fdivrp
ds
sbbl
xor
cmp
xchg
push
dec
fnstcw
pusha
nop
aam
xor
movl
shll
mov
jne
mov
jmp
mov
loop
cwtl
mov
pushf
scas
pop
mulb
or
mov
mov
insl
pusha
mov
sahf
mov
scas
inc
dec
adc
adc
mov
sub
cs
adc
out
jne
fistpll
inc
fs
lods
add
out
out
shll
lods
mov
adc
dec
mov
push
and
into
lret
lds
cs
pop
dec
popf
clc
jo
mov
pop
mov
fstps
shr
loop
rcrb
sbbb
push
iret
imul
add
in
int3
pop
pop
fldt
mov
jge
xchg
and
inc
stos
dec
pop
mov
push
adcb
out
repz
in
push
mov
cltd
notl
jnp
dec
push
pop
adc
and
fidivl
sarl
cmp
mov
iret
cmp
inc
lret
ss
mov
xchg
ss
cmp
stos
mov
jno
imul
sub
dec
mov
mov
xchg
and
adc
pop
sti
jns
inc
cs
push
adc
mov
insb
cmp
jbe
jle
enter
xor
mov
enter
call
addr16
subb
ss
adc
cmpl
sbb
and
fsubrs
es
js
cld
lea
nop
xor
rcll
or
push
mov
sysenter
mov
jnp
mov
dec
push
xchg
pusha
aaa
pop
neg
test
push
enter
push
mov
cmp
shrl
pop
fwait
cmp
bound
ds
mov
addr16
stc
shl
cmp
cmp
jno
xlat
jecxz
fcoml
sub
gs
push
dec
adc
pop
test
jmp
outsl
ljmp
xchg
jecxz
push
enter
dec
scas
pop
cmpsl
cmpl
popf
test
roll
mov
ss
or
adc
xor
adc
notb
inc
mov
out
mov
jbe
and
pop
push
out
pop
jge
mov
mov
mov
repnz
leave
lcall
mov
pushf
or
add
fsubrl
ficoms
outsb
mov
stos
aaa
adc
mov
mov
nop
adc
push
xchg
mov
addr16
cs
dec
or
mov
aaa
adc
in
movsb
add
mov
cmpb
push
mov
pop
push
jo
js
leave
out
out
ja
loopne
dec
sub
arpl
icebp
fistps
add
mov
mov
sub
gs
cmp
pop
imul
sbb
loopne
enter
int3
lods
mov
loopne
mov
jle
inc
and
das
scas
or
jge
xor
insb
fwait
inc
loope
call
fimuls
push
enter
inc
mov
cmc
ja
xchg
leave
bound
scas
mov
or
sub
push
arpl
and
xchg
lods
clc
out
mov
aad
test
xchg
inc
shlb
sahf
fdivrl
test
scas
ja
js
filds
cmp
aad
mov
add
sub
test
dec
ss
and
xchg
cmpsb
sub
orb
loope
in
push
icebp
add
and
test
dec
sbb
add
bound
jp
divl
iret
xor
pop
subb
dec
dec
push
dec
ret
dec
out
mov
push
sahf
shl
sub
cmc
push
into
mov
inc
inc
mov
dec
sbb
ret
sbb
jecxz
cmp
mov
mov
adc
xchg
xor
hlt
ret
imul
ret
inc
outsl
fistpll
push
shl
cmpsl
loopne
add
and
or
fdivr
imul
pop
movsb
in
scas
aas
add
jno
push
cmp
dec
sub
push
sarb
cmpsb
in
cmp
jecxz
fisttpl
mov
push
and
shl
sbb
inc
push
pusha
mov
xchg
int3
sub
mov
rcrl
cwtl
and
or
or
mov
pop
ds
mov
sub
inc
popf
mov
add
add
mov
inc
jae
sbb
frstpm(287
cld
add
sarl
inc
pop
sahf
mov
mov
xor
loopne
ds
sbb
movq
mov
popf
repz
pop
imul
push
pusha
mov
mov
shl
movsl
js
or
call
out
xchg
lcall
xchg
add
fisubrs
ljmp
jbe
adc
cmp
iret
sbb
add
mov
mov
adc
xchg
xor
xor
jp
xor
lea
sbb
mov
test
pop
repnz
jb
mov
or
push
popf
pop
in
loop
fiaddl
cwtl
push
xchg
xor
ss
mov
adc
shr
mov
and
add
push
sbb
inc
popa
push
jne
fwait
scas
jne
or
mov
and
aad
cs
int3
add
jge
pop
aam
mov
out
das
jo
push
jno
or
iret
and
mov
push
ljmp
test
daa
fisttpl
jbe
push
mov
ja
push
nop
pop
jno
pusha
ret
or
add
int3
jmp
push
mov
fimull
daa
int3
adc
sarl
leave
daa
out
andl
mov
lods
into
sahf
or
push
lods
es
inc
sub
je
fs
xor
or
imul
xor
sahf
fdivr
aam
xchg
sbb
mulb
mov
pop
dec
scas
add
or
lahf
loopne
shll
pop
test
fdiv
popf
loopne
jle
outsb
hlt
inc
or
scas
out
mov
lods
fwait
int3
loop
ja
mov
add
cmpl
mov
lret
imul
xor
inc
dec
ja
bound
xchg
cli
push
fcom
pop
push
test
js
mov
mov
lods
and
lds
or
inc
rcr
je
iret
push
stc
dec
adc
push
mov
in
mov
pop
mov
push
pop
mov
cwtl
rol
scas
stos
loopne
sar
je
popf
dec
push
aam
insl
mov
std
inc
sub
fcoms
add
or
lret
mov
xchg
sub
stos
pop
or
sbb
xchg
mov
in
ds
rcrl
dec
dec
movsl
mov
push
je
in
stos
jmp
lret
loope
outsl
adcl
rol
sub
out
loop
xor
repz
lahf
sub
xlat
push
xor
mov
popa
sbb
push
adc
insl
cld
fadd
cmc
gs
adc
mov
jp
xor
pop
fisubl
push
and
pop
mov
add
movsb
fldl
push
jae
xchg
mov
repnz
push
inc
lret
xchg
lea
xlat
xchg
push
or
dec
pop
loop
mov
stos
pushf
movsl
js
add
sbb
jecxz
add
fdivp
inc
sbb
dec
xchg
adc
inc
dec
cmpb
and
and
mov
mov
dec
mov
rcrb
jge
dec
je
loopne
sbb
dec
rclb
push
xor
imul
cmp
jl
cltd
mov
push
iret
ret
sub
stos
daa
fstl
cmc
movsl
or
push
xchg
sub
into
out
sub
or
test
jns
adcb
in
and
out
cmp
mov
sub
mov
outsb
jmp
mov
mov
xchg
cmp
sarb
sbbl
cmpb
into
aad
and
rep
lcall
stc
sti
call
mov
mov
test
add
mov
or
jg
jb
xchg
testl
adc
test
and
push
out
cmp
ja
inc
in
sbb
jne
shr
xchg
push
jns
inc
aaa
je
jmp
pop
sbb
sbb
adc
arpl
pusha
test
imul
jnp
fbld
into
stos
repz
subb
jne
ljmp
or
mov
ret
and
ret
pushf
inc
jno
into
insb
pop
and
jb
push
inc
xor
sbb
push
add
or
aam
cli
sub
push
jle
jno
sub
ret
cmp
cmp
pop
sub
or
loop
or
fwait
cld
add
imul
lcall
cmp
mov
fs
in
inc
mov
dec
test
addl
int3
inc
std
pop
cmp
cmpsb
mov
and
push
mov
into
ja
out
adcl
je
xor
call
cmp
bound
test
lods
fsubl
cmpl
je
pop
repnz
mov
lea
and
lock
in
mov
add
dec
pop
jnp
cld
clc
fwait
ja
imul
lods
mov
sbb
push
shrb
inc
ret
sbbl
inc
ret
stos
push
lret
popw
mov
call
jecxz
inc
xchg
stc
sbb
lahf
push
pop
xchg
outsb
scas
repnz
jmp
bound
ret
mov
mov
addr16
divb
and
add
mov
mov
dec
push
and
or
xchg
and
jp
xlat
fcomp
push
lods
or
idivb
mov
out
adc
adc
outsb
inc
push
pop
insb
insl
xchg
movsb
shr
out
cs
and
push
ret
sub
mov
pop
jle
in
mov
mov
call
pop
xchg
xor
sbb
lret
into
mov
leave
push
xor
cwtl
nop
add
shrl
aad
enter
xchg
mov
pusha
mov
jo
stc
sbb
ror
imul
js,pn
pusha
notl
xchg
xchg
mov
jmp
jne
ja
cli
fiaddl
xchg
push
or
fldenv
mov
aam
ss
icebp
inc
outsb
rcrl
add
cli
jle
adc
cmp
push
mov
dec
test
mov
cli
dec
pop
add
and
xchg
jbe
flds
dec
loop
out
pop
pop
and
dec
std
cld
inc
jne
xchg
arpl
mov
and
scas
push
and
jle
rorb
int3
inc
ds
aad
dec
repnz
jg
mov
ds
fisubrs
lock
shrl
mov
mov
add
pushf
mov
fldenv
push
add
popf
add
xchg
decl
sbb
cmp
cmp
out
mov
popa
xchg
das
fcmovnb
pop
push
sub
push
stc
imul
jae
repnz
lretw
adc
xchg
inc
addr16
xor
dec
insb
cld
enter
jne
negl
lods
pop
or
out
mov
or
dec
sbbb
int
clc
test
movsl
fldenv
inc
aaa
mov
lret
pop
fwait
or
adcl
push
sahf
in
cmp
or
or
and
mov
repz
pop
cmp
jg
mov
mov
jl
je
repnz
xchg
pop
pop
adcl
loopne
aaa
xchg
repnz
pop
cltd
xchg
orb
mov
adc
in
xor
ja
pop
mov
jno
push
in
mov
inc
sub
push
stc
test
inc
testl
stos
shl
adc
or
cwtl
mov
inc
push
sub
cmpsl
mov
test
push
push
and
push
daa
imul
repz
pop
jle
popa
cmp
mov
movsb
pushf
and
mov
in
out
inc
mov
lock
or
adc
leave
sbb
jl
fwait
int
iret
out
xchg
aam
popa
fisubrs
sub
jg
mov
dec
cmpsb
das
add
loop
and
in
lcall
mov
mov
jmp
fsubs
and
sbb
xchg
xor
mov
in
jecxz
push
lods
lahf
adc
out
xchg
pop
fwait
insb
gs
and
orb
ljmp
mov
ljmp
shrl
std
jl
nop
mov
adc
shr
lock
leave
mov
inc
cmpb
adc
sbbb
imul
xchg
outsl
insl
pop
inc
cwtl
iret
pop
cmpsb
sub
pop
lret
cmp
push
jle
jle
mov
or
pop
mov
pop
cmp
cmp
in
aas
cs
pop
das
inc
insl
sub
lods
lret
ds
daa
divb
lds
cmp
loop
sub
mov
scas
in
mov
mov
sti
or
lcall
fdivl
mov
fldl
call
lods
xchg
ret
mov
pop
fsts
xchg
int
loop
sub
rorb
jmp
je
mov
dec
jmp
dec
sbb
inc
sbb
adc
cmp
push
testl
inc
repz
les
xorl
xchg
sub
mov
cmp
into
outsl
push
mov
ret
pop
xchg
test
cmpsb
mov
aas
daa
xor
mov
jge
sarl
push
iret
push
push
pop
xchg
ret
inc
insw
mov
xor
cmc
push
in
fwait
dec
loop
roll
cmp
and
push
movsb
aaa
test
inc
xor
jl
mov
push
adc
and
movsb
cmp
mov
cld
jl
pop
xchg
jp
add
std
pushf
lea
pop
ljmp
in
cmp
sub
adc
cmpsl
jns
adcb
cli
je
ja
shlb
push
mov
xor
lcall
mov
and
dec
pop
icebp
fsubs
inc
xchg
pushf
xor
pop
outsl
popa
test
push
adc
cs
dec
xchg
pushf
cmp
mov
movd
mov
pop
cmp
push
cmc
lds
lods
lods
dec
xchg
std
fldenv
mov
lea
pop
cs
xor
jl
mov
inc
popa
fnstcw
and
xor
xchg
push
loope
insl
movsl
sub
push
push
jmp
dec
sbb
mov
out
insl
sbb
aas
loope
imul
add
push
test
stos
jbe
mov
outsl
cmpsl
or
push
out
scas
dec
adc
outsl
daa
mov
and
lea
or
push
mov
das
cmp
inc
and
dec
pop
loop
mov
and
data16
adc
jns
xor
cmp
les
dec
mov
lods
movsb
mov
mov
lahf
push
lods
xor
orb
rcr
dec
push
popl
inc
or
xor
aas
fisubs
mov
mov
lods
sti
test
or
jns
xor
pop
inc
lock
repnz
mov
push
ljmp
jle
xor
rorb
pop
aas
mov
loopne
mov
ret
loopne
push
cmp
shr
mov
and
pop
pop
push
cwtl
sbb
test
popf
pop
adc
dec
movsb
jo
lret
fidivrl
cltd
xchg
out
dec
push
enter
mov
push
repnz
cltd
scas
dec
daa
cmpsb
out
in
xchg
mov
add
and
jg
pop
dec
mov
push
std
inc
mov
or
cs
idivb
xchg
xor
sub
push
hlt
and
test
addl
aaa
enter
and
mov
dec
mov
negl
aas
push
or
rol
mov
xchg
jmp
cmp
jecxz
popf
ret
call
mov
imul
sub
xchg
xchg
mov
incl
mov
insb
fs
rcll
cmpsb
shl
and
pop
mov
adc
mov
xchg
ficompl
gs
add
ror
sub
sub
pop
adc
cltd
xchg
add
sti
arpl
jne
pop
scas
adc
push
aaa
mov
lods
rolb
xor
mov
mov
and
add
cli
cld
cmp
andb
and
mov
mov
addl
push
or
gs
xor
mov
aaa
xor
cmc
jnp
test
jbe
xchg
movsb
test
xchg
leave
dec
out
pop
addr16
dec
das
or
iret
mov
or
fdiv
insb
push
icebp
fdivrl
xchg
dec
jns,pt
pop
or
or
fcmovnbe
or
pop
mov
push
mov
sub
push
sub
jne,pt
push
xchg
sbb
pop
icebp
cmp
addr16
pop
int3
sbb
sub
jne
ja
cmp
fdiv
dec
ds
ljmp
dec
push
lock
add
arpl
nop
ret
sbb
inc
lock
loop
insb
inc
outsl
ret
xchg
stc
rolb
popf
add
stos
adc
mov
fisubl
sub
push
fisttpl
pusha
dec
mov
push
push
xchg
in
add
cmpsb
add
mov
js
int3
inc
sbb
mov
outsl
cmp
addb
repnz
lret
leave
mov
mov
frndint
xchg
inc
test
dec
jg
or
and
cmpsb
or
ja
push
xor
mov
jecxz
test
enter
add
dec
dec
enter
aad
jns
or
lahf
pop
lods
dec
inc
stc
jle
lods
push
stos
jmp
mov
sub
sbb
je
jp
in
clc
dec
fnstsw
sub
cmc
push
xlat
inc
fcmovnbe
mov
add
bnd
lods
push
ds
pop
popa
in
sub
pop
mov
cmp
xor
xchg
sbbl
pop
daa
dec
out
cwtl
xor
leave
outsb
jg
mov
pop
out
sahf
and
dec
fimull
inc
add
idivb
incb
ja
mov
cmp
mov
in
ja
jne
push
stos
jnp
mov
mov
adc
cmp
xchg
dec
mov
scas
add
lods
out
push
mov
pusha
lret
mov
sub
movsl
push
cmp
loop
fwait
lods
das
adc
sbb
add
sbb
and
dec
lods
in
lret
filds
and
mov
addb
stos
add
mov
push
stos
andl
add
lods
or
cmpsl
shrl
sahf
lock
jmp
cmpsb
cmp
and
sub
lods
add
mov
nop
lods
loop
mov
cli
movsl
jno
sahf
jl
js
mov
and
mov
mov
mov
sarl
push
mov
jecxz
xlat
jns
out
sbb
movsl
dec
movsl
cmp
jne
test
out
jmp
mov
stos
ret
cs
je
cmpsl
pop
and
mov
lahf
ja
repnz
loop
jp
dec
ret
mov
cmp
sbb
adc
sub
mov
sarb
stos
les
scas
pop
ja
vcvtpd2psx
stc
in
push
out
scas
addr16
addr16
mov
mov
les
add
hlt
mov
xchg
js
sarl
pusha
mov
rcl
std
fcmovu
insb
pop
pop
push
xchg
xor
fldt
inc
mov
icebp
or
cmp
into
cld
mov
loopne
int3
xchg
pop
je
shll
dec
insb
maskmovq
int3
add
mov
jg
movsb
push
inc
insl
fucom
sub
push
mov
ret
lcall
test
cs
cli
pop
les
scas
shrl
xor
movsb
insl
lods
jns
mov
pop
je
sti
cli
mov
jne
adc
subl
mov
dec
scas
les
mov
and
adcl
or
jne
pop
dec
lret
shll
cmp
mov
fcom
in
or
fildl
push
enter
cli
mov
fsubrl
arpl
shll
mov
push
mov
push
and
jb
loop
mov
pop
pop
ffreep
xchg
jecxz
push
push
sub
mov
stc
sub
lds
arpl
add
and
popa
add
es
out
aad
fwait
add
sbb
sbb
mov
mov
imul
xor
mov
repnz
cli
mov
adc
test
mov
jns
movl
mov
jb
xchg
test
add
mov
shll
inc
orb
lcall
add
cmp
out
xchg
dec
xchg
pop
dec
mul
push
jo
lock
insb
test
fcoms
push
lods
pop
insl
sbb
cwtl
push
pop
cwtl
mov
mov
sub
push
cmp
mov
jb
inc
dec
sbbb
mov
fisttpll
fidivl
sahf
cmpsl
mov
sbb
popa
jmp
ret
sbb
xor
stc
cmp
and
clc
loop
xchg
ret
out
cmc
data16
adc
mov
insb
test
inc
and
dec
ds
jmp
adc
cmp
leave
mov
pcmpeqb
sbb
dec
inc
and
mov
xor
pop
inc
sbb
cmp
leave
and
jo
jbe
lahf
fildll
add
sbb
shll
pop
into
sub
popa
push
xchg
mov
out
xchg
lahf
sub
rol
or
sbb
jno
dec
dec
pop
jno
jmp
daa
in
and
icebp
pop
into
mov
stos
xlat
jle,pn
popf
inc
std
out
je
pop
jge
insb
fwait
aam
cmp
jbe
pop
add
xor
or
xchg
and
mov
xchg
jbe
inc
sarl
andb
sar
xchg
out
sub
loope
mov
popf
orl
loopne
jl
test
cmp
movsl
adc
xor
cmp
rorl
pop
xor
mov
lock
push
loopne
je
es
out
cli
add
mov
test
cwtl
jl
stc
adcl
testl
imul
mov
icebp
and
jno
ret
pop
enter
cmp
sbb
xor
dec
push
js
into
js
push
lea
xchg
xchg
add
add
jmp
test
pop
mov
jmp
aam
aas
inc
repnz
pushf
mov
xor
out
orb
ds
dec
mov
in
push
add
push
mov
push
inc
jns
or
cmp
js
call
cmp
inc
ud1
lods
leave
add
jbe
mov
dec
arpl
arpl
inc
jns
test
loope
mov
ljmp
and
or
inc
push
cltd
jmp
into
cmp
xchg
sbb
mov
sub
movsl
cli
insl
push
pop
xor
outsl
out
rcll
dec
sbb
inc
pop
out
lahf
popa
xor
or
in
or
fistl
sbb
mov
inc
pop
xor
mov
adc
xor
sbb
jb
ret
clc
in
les
push
imul
mov
nop
imul
mov
stos
popf
scas
xorl
pop
fwait
push
dec
lock
std
cmp
adc
shr
stc
int
dec
push
dec
push
dec
push
pop
wbinvd
pop
data16
cltd
stos
iret
cmp
je
cs
mov
pop
sarb
pushl
aaa
out
addr16
mov
inc
shrl
mov
popa
in
inc
js
aas
stos
lcall
jge
hlt
mov
and
mov
adc
fmul
scas
aam
jl
or
xchg
sub
mov
pop
or
jle
ret
shl
mov
ss
pop
mov
xchg
call
cmp
ror
pop
icebp
dec
lahf
jo
mov
adc
and
fstps
rclb
and
mov
fcmove
lock
aam
popa
lahf
push
xchg
dec
dec
push
inc
scas
or
xchg
mov
fstpl
pop
rolb
xchg
or
outsl
imul
aad
dec
int3
call
mov
imul
pop
scas
cmp
das
ficomps
shlb
sbb
sbb
cmpsb
mov
adc
test
jbe
mov
ds
pop
mov
xchg
or
das
int3
xor
and
mov
clc
mov
jg
popa
out
jecxz
imul
xor
inc
push
sbb
xchg
movsl
jnp
dec
dec
lods
mov
in
push
lahf
popf
ret
out
sbb
xor
mov
call
jno
jae
bound
dec
mov
dec
cmpsl
mov
leave
jbe
cmp
xchg
xor
push
fimuls
sub
leave
dec
jbe
mov
inc
sub
pop
xchg
cwtl
test
cmp
add
faddl
add
aad
stos
int
nop
pop
mov
cs
push
cmc
or
std
xorl
mov
mov
mov
cmp
rorl
inc
hlt
inc
ret
mov
outsl
dec
push
rol
nop
or
mov
or
leave
and
and
or
movsl
push
or
cwtl
mov
or
dec
inc
lret
leave
adc
sti
jnp
stos
adc
sbb
out
jle
cmp
cli
mov
push
cmovle
ret
adc
dec
push
sbb
push
jp
pop
xchg
cmpsl
in
les
push
sbb
xchg
fnstcw
fistpll
pop
ljmp
add
sahf
push
call
xchg
mov
mov
movsl
iret
add
stos
cmpsb
xor
mov
insl
aas
dec
jge
test
and
iret
scas
add
jo
pop
out
in
cmc
lods
jne
push
dec
ja
sub
or
je
dec
inc
cmp
loopne
stc
pop
and
mov
jnp
xchg
mov
push
cmp
ja
insb
push
ffree
add
dec
adc
pop
test
push
sbb
insb
je
leave
lds
adc
stos
into
lock
jns
enter
push
or
lds
push
push
in
popf
push
lahf
jnp
ret
aaa
xor
dec
test
jns
jmp
dec
push
cmp
jo
das
mul
inc
cltd
sub
xchg
push
in
sub
rolb
fiaddl
xorb
testl
add
shl
or
das
add
and
mov
fldenv
popl
xchg
in
cmp
test
sbb
and
sub
leave
jo
xchg
popa
scas
mov
fdivrs
jle
sbb
rclb
xor
pop
jne
jle
int
jg
dec
leave
mov
and
or
rorl
jne
psubw
mov
and
xchg
mov
fisubl
sahf
aaa
inc
inc
mov
gs
dec
and
push
in
xor
int
add
xchg
lcall
dec
dec
pushf
jb
out
outsb
dec
sbb
mov
mov
xor
int
pop
mov
xor
jp
mov
loop
stc
insl
xchg
pop
mov
inc
push
lods
mov
je
test
rcl
aaa
out
mov
enter
repnz
add
or
mov
push
push
xchg
sti
cmp
imul
jne
bound
mov
out
dec
out
inc
push
jns
repz
test
dec
sub
add
repnz
sub
aam
mov
test
mov
leave
testl
or
incl
push
jbe
sub
mov
pop
in
outsl
ret
cmp
imul
jl
inc
std
or
in
xor
loop
sub
pop
adc
or
xchg
mov
popa
inc
dec
xchg
imul
fiaddl
sub
pop
add
testl
rcrl
das
gs
popf
and
inc
lret
sbb
or
shrb
jne
cmp
jmp
daa
xchg
pop
pop
mov
jg
je
sbb
pop
cltd
push
cltd
fdivs
mov
insl
into
rolb
mov
mov
scas
popf
std
push
push
jecxz
xchg
test
js
rclb
out
xlat
fwait
and
jge
add
rcll
dec
cltd
loopne
inc
push
mov
add
mov
dec
inc
in
popf
xchg
jb
iret
mov
subb
xchg
dec
insl
outsb
cmp
stc
xor
adc
loope
ss
ror
jl
adc
inc
loope
push
es
mov
cmp
adc
dec
int3
sbb
outsl
repz
ja
xchg
fs
push
lock
outsb
jg
add
pop
in
movsb
cmp
lock
ror
loopne
pop
shlb
andb
cltd
sbb
xorl
pusha
cmpsl
pop
hlt
xor
loope
fmull
andb
jb
cs
rdpmc
lea
xchg
sub
pop
leave
movsl
jno
fidivrl
cmp
push
cld
lret
adcb
jg
cli
adc
add
add
jmp
cmp
push
push
lock
jnp
int3
daa
sahf
loopne
or
inc
mov
jb,pn
cmpsb
cli
and
jb
das
pop
mov
call
imul
push
pop
gs
mov
aam
mov
and
dec
sub
dec
mov
mov
call
or
cli
movsb
jecxz
outsb
pusha
dec
inc
mov
sarb
adc
cld
fiadds
or
fmul
frstor
addr16
xchg
sub
arpl
mov
sti
aam
jg
lret
insl
les
leave
sbb
or
imul
jecxz
mov
cld
or
fdivl
out
push
cli
sbb
mov
xor
add
repnz
cmc
add
stos
fdivr
xor
cli
ds
xchg
scas
sub
dec
xchg
sub
xor
fstpt
dec
inc
xchg
mov
inc
rcrl
leave
xorl
iret
pop
cmc
push
cli
hlt
pop
jmp
sbb
popf
stc
push
inc
push
bound
test
popa
sub
and
stos
mov
pop
add
dec
and
mov
jge
ret
pop
daa
pop
insb
lret
loopne
sbb
or
jl
ds
nop
inc
loope
and
mov
stos
pop
pusha
enter
outsl
adc
mov
sbb
test
xor
mov
add
ficompl
repnz
pop
in
push
les
aad
adc
xchg
test
push
test
jne
rcrb
and
sbb
mov
dec
sub
jbe
or
cmp
push
push
mov
jmp
jmp
adc
lds
adcl
mov
mov
aad
mov
scas
arpl
xchg
pop
xor
pop
scas
mov
pop
sub
int3
mov
sbb
push
cmpsb
out
lret
sub
imul
push
leave
sti
push
xchg
nop
dec
sbb
leave
stc
push
std
ret
fcoml
sub
push
jno
mov
pop
mov
dec
in
push
dec
cld
rcrl
daa
in
pop
inc
xchg
movl
icebp
icebp
and
mov
orl
cltd
movsl
mov
jge
inc
xchg
icebp
adc
ficompl
push
push
mov
shll
fidivl
lcall
and
pop
int
int
into
das
inc
icebp
and
cmp
lock
xor
pop
lds
shll
mov
cwtl
or
fwait
lea
lock
insl
and
lea
aaa
cmp
adc
insb
pop
pop
notb
and
mov
cmp
or
push
cmp
pop
stos
dec
pop
lahf
loopne
out
daa
and
fbld
or
inc
jp
mov
lret
es
out
mov
out
mov
sbb
push
xchg
jle
mov
cmpb
push
and
hlt
das
fistpll
cmp
mov
and
and
pop
inc
dec
daa
in
add
jnp
adc
mov
mov
adc
pop
outsb
add
cmpsb
rcll
mov
dec
jne
xor
xchg
add
ret
xor
dec
and
fdivr
dec
lods
pop
shr
sub
and
mov
and
pause
fldl2e
push
and
xchg
pop
in
loopne
test
inc
adc
sbb
sub
rclb
add
idivb
add
scas
sub
mov
dec
push
sahf
fldcw
roll
stos
inc
ret
adcb
mov
data16
sub
jl
jbe
stos
sahf
push
js
xchg
jmp
push
rcll
inc
mov
add
jne
jmp
sub
rorl
sub
out
or
fisttpl
jno
mov
mov
xor
jl
pop
mov
mov
cwtl
les
loop
mov
or
cld
jnp
sub
popl
sbb
mov
roll
lcall
xor
add
inc
mov
fildll
cmpsl
push
das
nop
push
out
pop
xor
popa
cmpsl
aam
leave
pop
sahf
mov
pop
push
sub
aaa
push
push
dec
jae
movsl
in
or
adc
jge
jle
dec
inc
jnp
ljmp
lock
cmpb
xor
imul
mov
push
xchg
test
ljmp
mov
sti
xchg
in
leave
imul
fmull
xorl
clc
adc
pminsw
hlt
into
fisttpl
lret
stos
std
mov
mov
pusha
ret
pop
xchg
lret
bound
loopne
gs
in
cld
inc
mov
lret
andb
sub
add
mov
out
xor
dec
mov
cs
lret
xchg
add
xor
lahf
dec
lret
out
pusha
jecxz
jnp
sub
pop
int
dec
test
xor
jle
jno
jge
enter
popf
hlt
mov
mov
or
mov
in
sbb
sub
xchg
add
dec
jo
jl
repz
in
movsb
pop
xchg
fisttpll
faddl
cli
or
cmp
fcomi
push
jae
repnz
and
cmpsl
pushl
adc
out
in
sbb
mov
lods
mov
dec
shl
es
cmp
push
push
dec
addr16
orl
pop
out
adc
add
ret
xor
into
mov
test
stc
mov
add
je
dec
dec
jl
jge
sbb
mov
jb
outsb
or
adc
dec
daa
ss
pop
in
out
stc
sti
jmp
adc
sub
pop
outsb
jno
mov
test
call
sub
add
add
jmp
ljmp
xchg
jl
mov
pop
lret
xchg
daa
push
scas
inc
xor
outsb
sub
push
fwait
add
and
fstl
lock
mov
ret
in
add
repz
push
jl
fwait
loope
mov
es
sbb
out
jnp
fcomp
mov
pop
int
jo
popf
std
shlb
jo
repz
movsb
xchg
push
add
mov
cmc
jle
inc
and
cmp
dec
xchg
mov
fldcw
inc
xchg
xor
and
loop
dec
or
addr16
mov
mov
push
pop
mov
sbb
pop
mov
ss
aad
rcr
inc
js
or
mov
add
clc
dec
aaa
cmpsb
fbld
sbb
cmp
push
sub
xchg
jb
cmpsl
pop
hlt
push
lahf
aas
push
mov
adc
imul
bound
or
xor
xchg
cmpsb
hlt
add
test
addr16
iret
jo
or
ss
mov
dec
mov
mov
pop
xor
mov
sti
mov
sbb
addr16
and
ret
insl
xchg
int
or
aaa
into
sti
mov
out
vdivss
sahf
mov
jnp
ret
mov
clc
and
xor
adc
xchg
pop
in
inc
out
jns
jno
inc
push
pop
dec
cltd
pop
xchg
pop
rolb
in
jne
jne
push
sti
ret
mov
and
fs
jnp
jecxz
fldenv
out
imul
ret
jecxz
inc
sub
ror
aad
sarb
std
push
pop
mov
in
lret
pop
dec
movsl
xchg
pop
imul
push
jp
cmp
inc
outsb
mov
mov
arpl
mov
inc
repz
leave
rorb
faddp
xor
rcll
inc
ret
jbe
mov
xchg
aaa
das
pop
leave
mov
jo
stos
mov
fstpt
test
or
mov
push
outsb
pusha
sub
inc
sbb
addr16
mov
and
push
or
dec
outsb
out
outsl
mov
pop
xchg
mov
pushf
or
push
lods
shll
push
hlt
and
inc
cmc
ret
out
stc
repz
dec
pop
sahf
cmp
cmpsb
dec
xor
mov
das
aas
xchg
rcrb
push
shll
js
pushf
mov
imul
push
inc
test
adc
inc
jne
lds
jle
mov
cwtl
out
and
sub
push
push
pop
jae
rcrl
sbb
mov
pop
cmpsb
xchg
dec
mov
cltd
mov
aam
push
lock
dec
sub
iret
push
cmp
xchg
dec
pop
dec
in
lret
sub
cs
xor
mov
mov
loope
pop
pop
mov
ror
insl
push
insb
adc
sbb
inc
xor
mov
mov
sbb
mov
orb
mov
aaa
jo
xchg
inc
mov
jno
out
mov
inc
sbbl
add
xor
xor
fimuls
xor
js
and
mov
push
mov
push
aaa
stos
lret
push
jo
pop
insb
test
mov
cs
leave
mov
and
incb
or
mov
loopne
mov
out
pushf
inc
pop
cmp
mov
cmpsl
jb
cltd
shrb
pop
test
mov
push
mov
outsb
pop
sub
cmpsl
enter
dec
outsb
jb
clc
int3
hlt
jmp
jae
les
or
sub
add
xor
or
cs
pop
dec
jp
je
adc
pop
dec
or
xor
das
ffree
mov
mov
scas
push
ret
fdivrl
fistps
adc
jbe
stc
jbe
mov
dec
and
test
ret
cmp
popf
sahf
push
jl
rolb
mov
push
fnsave
cmpsl
pop
push
nop
ss
pop
push
repnz
adc
mov
xor
out
in
fldl
push
inc
xchg
sbb
js
pop
iret
insb
lea
xchg
push
pop
mov
pop
in
ret
fmuls
and
or
add
inc
push
mov
out
clc
scas
cmp
aas
fidivrs
push
or
outsb
std
test
in
inc
jae
sbb
mov
jnp
sbb
out
repnz
rclb
stos
add
xor
addr16
imul
xor
je
jb
iret
sub
ret
outsb
bound
cmpsl
mov
cmpsl
mov
jge
add
test
xlat
or
push
outsl
lods
icebp
inc
push
stos
lods
loopne
mov
lods
lret
out
rclb
ja
add
ja
sbb
inc
int3
cmpb
fld
add
sub
pop
shlb
mov
xchg
add
mov
adc
and
ds
nop
inc
mov
dec
mov
repz
sti
fldcw
and
idivl
mov
pop
and
xor
sbb
fst
fs
das
sub
addb
pushf
stos
sub
mov
lcall
jo
das
sub
mov
sub
push
inc
dec
sbb
push
xorl
jge
test
js
xchg
cmp
lds
cld
pop
leave
fwait
cmpsb
and
jecxz
ret
add
xlat
dec
lods
lods
rol
out
cmp
pushf
push
das
lret
mov
dec
mov
add
pop
push
mov
rclb
push
lcall
mov
pop
inc
inc
jns
lea
adc
cli
jle
jnp
fldl
lcall
lods
ret
and
lods
sub
adc
pop
lcall
jle
and
jns
sub
pop
pop
dec
add
das
mov
push
lods
mov
cmp
adc
divb
repnz
sbbl
mov
mov
imul
fs
cmp
cmp
nop
inc
jno
adc
xchg
or
popa
rcrl
les
sub
sbb
sbbb
ffree
je
jecxz
jo
and
and
mov
aad
daa
test
mov
ret
icebp
mov
shll
mov
and
lods
ss
rolb
dec
cld
stos
negb
loopne
scas
push
pop
inc
jns
lods
stos
hlt
mov
pop
cmp
test
sub
xor
mov
dec
outsb
mov
lock
ret
add
dec
xor
ja
cwtl
dec
mov
and
jge
dec
dec
rclb
add
inc
dec
stos
loop
fmull
idivl
leave
ljmp
sarb
and
pop
aaa
cltd
in
pop
cmp
mov
cli
mov
jb
sbb
lahf
ljmp
imul
insb
paddusb
call
or
add
ret
inc
pusha
pop
jp
jecxz
stos
jle
ljmp
xor
dec
loop
mov
rcrb
cltd
cmp
dec
dec
mov
jg
jbe
mov
mov
adc
cltd
sarl
data16
adc
sub
or
adc
cmp
sbb
lods
or
imull
lock
fdivrp
fcmovnb
adc
mov
enter
repz
or
lcall
fistl
sbb
adc
mov
dec
jns
sub
lret
jmp
push
or
pusha
dec
inc
dec
movsl
sar
imul
cmp
in
mov
cli
and
or
sti
pop
aam
mov
cmpb
in
adc
jno
xchg
adc
xchg
inc
pop
sbb
pop
in
call
inc
js
mov
popf
aaa
fisubrs
es
mov
jle
fcomps
xlat
cs
mov
ljmp
push
clc
xchg
xlat
loop
dec
mov
mov
pop
repz
sub
mov
jnp
nop
das
sub
push
sub
and
xor
scas
in
xchg
dec
jno
xchg
pop
push
mov
fidivs
cwtl
pop
push
leave
in
lret
je
leave
repnz
jp
roll
lahf
push
sarl
sahf
jmp
in
int3
jg
inc
push
mov
jno
lret
notl
sbb
jno
fnstcw
gs
adc
rcl
dec
mov
or
and
jb
lret
fnsave
pop
or
push
xchg
pushl
push
push
aam
leave
mov
pop
imul
call
sbb
push
lods
mov
push
push
xor
scas
dec
and
and
adc
add
push
fidivl
loop
xor
xchg
shll
mov
cmp
add
xchg
xchg
lods
add
push
sub
dec
call
sbb
sarl
xchg
mov
shr
jecxz
push
mov
out
aad
mov
movsl
repnz
cltd
push
cmp
in
lods
jp
push
leave
or
push
dec
les
js
dec
jo
jg
or
xchg
xor
fwait
repz
add
lds
popa
xor
push
popf
xchg
insb
jae
sbb
pushf
dec
xchg
mov
dec
test
jmp
enterw
cli
fucomp
sbb
or
fsts
scas
xor
les
in
insl
xorl
mov
repz
pusha
fwait
pop
movswl
or
sete
loop
sbb
loope
sbb
pop
jo
aam
push
jecxz
sti
mov
add
dec
enter
int
leave
xorl
fsubr
adc
sarl
jo
xor
das
aam
inc
es
imul
fisubs
pop
xor
rcrb
inc
xchg
rorl
mov
fisubrl
jle
mov
mov
bound
in
or
aad
inc
lcall
cli
rcrb
test
lea
jne
repz
outsl
sub
jbe
mov
inc
xchg
pop
mov
sub
dec
lahf
stos
movsl
fs
jno
std
fadd
jb
mov
enter
inc
setbe
fadds
cmp
int
mov
dec
cltd
mov
pop
or
lahf
int3
sbb
addl
roll
add
lds
popw
add
lret
divl
xchg
lods
jae
adc
rcr
add
je
mov
out
xor
mov
icebp
push
mov
sbb
xchg
vmwrite
jge
and
mov
outsb
push
xchg
insl
fcomp
and
outsb
and
cli
test
psadbw
jne
lock
aad
addb
into
je
xchg
pop
mov
cwtl
sahf
sub
aas
adc
xor
fs
daa
mov
mov
outsb
into
sbb
divl
and
enter
hlt
loope
jbe
andl
mov
mov
sarl
jb
inc
dec
add
push
pop
into
ror
test
mov
xchg
add
xchg
int3
lret
push
nop
in
cmp
outsb
inc
adc
fnsave
add
cs
lods
cwtl
clc
cmp
jnp
jae
iret
fcmovbe
movsl
push
sub
flds
dec
sub
cmc
sbb
movsl
test
loop
mov
movsb
in
adc
je
bound
inc
lds
dec
lds
jmp
shlb
jns
mov
jae
sbb
pop
jbe
jno
clc
jae
cmp
hlt
xchg
pop
hlt
sbb
xchg
aaa
loop
lds
adc
rcl
push
daa
sub
leave
mov
push
in
cmpsl
or
jns
movsl
sbb
dec
or
pop
cmpsl
in
jmp
inc
lret
in
hlt
mov
jbe
mov
mov
sub
test
ror
xor
sarb
dec
dec
cwtl
cmc
dec
pop
mov
sub
ja
pop
imul
push
inc
pop
pop
aaa
lea
mov
fiadds
add
cltd
sbb
ljmp
pop
and
xchg
mov
lods
out
sahf
add
insb
inc
xchg
mov
aam
rol
jle
xor
icebp
mov
dec
std
mov
xchg
enter
mov
inc
mov
movsb
xor
jno
fs
jae
pop
movsb
push
mov
push
in
insl
inc
es
sbb
clc
adc
pop
les
dec
loope
enter
jnp
mov
ljmp
inc
adc
lret
ja
lret
lock
dec
fdivrl
fcmovne
pop
setle
ret
dec
dec
mov
jge
mov
jne
in
xor
jbe
adc
shlb
cmp
andb
cmp
sbb
mov
loop
cs
ficoms
xor
imul
jl
in
lock
outsb
shlb
popa
rcrb
nop
or
mov
sbb
xor
push
sbb
sub
sub
aas
cmp
push
pop
shlb
mov
cmpl
ret
jl
icebp
sarl
lds
push
pop
cmc
jl
push
subl
cmp
clc
pop
in
loopne
test
lret
lcall
mov
jno
divb
mov
mov
lahf
xor
xlat
pop
lret
inc
sbb
inc
fwait
pusha
mov
mov
into
mov
insl
stos
enter
and
and
adc
mov
data16
lea
jg
push
stc
scas
test
add
lods
dec
iret
fld
mov
xchg
or
movsb
sub
add
or
mov
aad
in
pop
or
imul
jecxz
out
jne
add
frstor
test
int3
movsl
popf
ds
inc
arpl
pop
test
mov
fisttps
jecxz
mov
push
xchg
ja
rclb
in
leave
aad
in
push
jo
sub
cmp
lock
mov
xor
lret
std
aas
pusha
cmpsl
lahf
sbb
cmp
in
lds
cmp
ja
int
out
test
outsl
sbb
ja
addr16
inc
mov
fbstp
and
pop
xor
jp
shl
movsb
imul
sub
mov
jge
dec
lcall
push
pop
or
das
cld
push
add
adc
shlb
sub
test
roll
dec
mov
repnz
repnz
lods
inc
dec
pop
sub
int
leave
or
xchg
jge
cmc
xor
push
sti
pop
dec
cltd
push
push
jmp
vpslld
mov
daa
mov
inc
xor
push
sbb
and
xchg
out
sbb
xchg
test
mov
push
mov
add
scas
pop
pop
fiadds
inc
sbb
mov
sub
pop
sahf
jb
paddq
sbb
pop
in
mov
xchg
je
mov
addr16
push
mov
mov
int3
repnz
cmp
inc
enter
lea
addr16
stc
ret
pop
mov
in
push
daa
arpl
push
fstpt
adc
adc
or
inc
je
mov
xor
popf
jno
mov
sbb
cltd
fs
push
fdivrl
cmpsb
repnz
mov
and
pop
outsl
jno
icebp
inc
jb
orb
movsb
fnsave
pop
insb
add
stc
xchg
in
pop
pop
mov
inc
sti
xor
enter
dec
pop
adc
inc
add
mov
lea
popa
insl
lret
push
fwait
sarb
xchg
jg
mov
lods
or
mov
pop
pop
jecxz
dec
cmp
push
in
daa
fs
bound
lret
repnz
cmp
xchg
stc
pop
divl
decl
xlat
mov
test
pop
cmp
or
cs
adc
js
mov
pop
push
sbb
insb
jle
cmpsl
mov
jle
cmp
aaa
jns
loope
push
mov
roll
daa
gs
and
cwtl
inc
adc
aam
jge
push
sbb
ret
and
fucom
jp
mov
jl
enter
int3
test
addr16
jno
push
btc
add
pop
and
jne
adc
aad
rorb
addl
in
xor
scas
mov
shrl
test
jo
push
or
cmp
adc
mov
jae
mov
xor
inc
inc
push
adc
pop
sahf
aam
inc
outsb
loope
xchg
mov
repz
ds
clc
mov
xlat
mov
aam
loope
inc
popa
iret
push
sub
and
in
jns
sub
jg
jge
push
jo
dec
cld
adc
mov
add
lret
mov
fsub
dec
rcll
push
xchg
pop
arpl
gs
mov
sub
pop
cli
scas
fistpl
and
out
push
mov
orl
cmp
dec
sub
ret
std
mov
jnp
faddl
rorb
arpl
mov
fs
xor
push
bound
das
movl
add
mov
data16
and
popf
push
sbb
sti
inc
jno
mov
rol
test
dec
jns
sub
cmp
jo
dec
dec
and
push
jbe
mov
inc
xor
xor
lret
test
or
inc
pushf
ss
lret
mov
mov
fcoml
mov
scas
sti
imul
dec
fdivl
repz
dec
sub
xchg
inc
adc
push
add
and
push
pop
and
sub
push
popf
dec
shll
cmpsl
pop
inc
lahf
ret
sub
jg
daa
push
pop
jb
xchg
add
fldenv
pop
rolb
dec
mov
xor
outsl
test
loope
loope
pop
movsb
fldl
std
rcrb
mov
movsl
pop
roll
mov
xor
aad
out
div
in
fldcw
xor
pop
cmp
dec
mov
ret
jecxz
inc
mov
sub
xor
cmp
std
push
call
dec
push
mov
xchg
paddd
mov
mov
shl
xor
push
loopne
xchg
lret
lock
sub
cmp
pushf
enter
into
push
jno
jmp
add
sbb
vmaxss
test
push
cs
cs
in
movb
xlat
jo
push
dec
ljmp
out
mov
int3
inc
adc
xor
or
ret
sbb
jmp
dec
std
push
lock
jl
lods
inc
jecxz
jp
add
test
adc
lcall
xchg
xchg
inc
test
sbb
dec
push
in
sbb
les
in
sub
dec
push
sbb
scas
add
call
or
in
pop
and
mov
cltd
push
push
dec
jns
mov
pop
aam
ja
mov
and
popa
xchg
out
cld
out
iret
dec
imul
xchg
lock
bound
popf
push
call
pushf
js
repz
aam
push
cmp
loop
xchg
popa
pop
not
xchg
stos
jg
in
sbb
rcrb
fsubrl
jg
cmpsl
dec
out
outsb
mov
sub
and
sbb
test
in
inc
imul
mov
leave
pusha
inc
movsl
push
pop
fmulp
mov
roll
lahf
and
push
mov
mov
jmp
sub
das
mov
mov
addb
mov
addr16
or
pop
adc
adc
scas
arpl
inc
lret
cmpsb
mov
pop
pop
icebp
push
mov
je
mov
inc
mov
sbb
mov
and
es
insb
sbb
mov
adc
sbb
mov
shlb
iret
movsb
jnp
sub
mov
aas
stc
xchg
ret
mov
cmp
repz
jne
sub
pop
inc
je
out
cmc
push
daa
ficoml
lret
inc
lods
ljmp
mov
cld
out
out
insl
cli
cmc
cmp
pop
fwait
mov
mov
repnz
out
or
fdivl
repz
and
inc
lock
jb
pop
fisubl
fists
fcoml
mov
mov
mov
ds
mov
xor
cli
rcrb
bound
xchg
mov
xlat
shl
mov
addr16
mov
jmp
mov
mov
aam
adc
inc
inc
mov
ja
inc
stos
test
test
fisubrs
clc
ret
xchg
inc
xlat
jae
mov
xchg
push
mov
jne
xor
roll
negl
mov
addr16
pop
pop
mov
or
fstp
cmp
or
int3
push
test
aaa
sbb
orb
arpl
adc
pop
add
mov
adc
dec
stc
ficompl
insl
int
movntq
out
test
sbb
inc
outsb
jg
ror
test
jg
jmp
call
sbb
les
cmpsb
pop
imul
scas
mov
insl
mov
sub
movsb
xor
insb
cmp
in
sub
mov
xchg
repz
aad
push
mov
push
filds
pusha
mov
fmuls
push
lret
test
mov
lock
stc
test
xor
popf
in
cmp
and
mov
ret
push
stos
xor
hlt
push
xor
insb
or
test
int
out
cld
icebp
rorl
movsb
mov
add
jl
lea
xchg
fisttpll
sub
into
xor
jecxz
jns
aas
pop
or
pop
in
and
fisubrs
cltd
xorl
scas
pop
pop
mov
les
pusha
cld
push
cmp
jle
popf
xchg
mov
fdivrp
mov
and
sub
subb
scas
loope
in
test
cmp
into
xor
sbb
push
xchg
pop
fcom
inc
inc
fs
and
insl
jne
icebp
lods
push
add
fidivl
sub
rolb
add
fcmovnu
lcall
xor
shrb
push
dec
out
add
adc
xchg
mov
ror
xchg
leave
rclb
into
pushf
ret
add
cmp
scas
jp
jle
mov
jb
xchg
dec
in
xor
lret
mov
sbb
daa
nop
mov
psubd
mov
int
mov
cmc
push
or
push
inc
jecxz
adc
out
dec
movsb
fs
lock
mov
jns
rolb
ja
fnstenv
out
push
push
in
enter
test
movsb
cmp
andl
out
mov
dec
xchg
fiaddl
and
and
fnsave
ret
les
into
jno
add
jno
int
inc
movsb
sti
jecxz,pt
in
icebp
cmp
dec
les
shlb
cmp
fistps
fiadds
popf
push
lahf
or
mov
pop
push
cmp
clc
mov
jg
sub
xor
mulb
adc
and
loop
mov
sbb
imull
cwtl
add
ljmp
adc
std
loopne
push
sbb
lahf
pop
unpcklps
cli
pop
je
fisubrl
stos
rorb
sub
push
inc
sub
xchg
stc
push
xchg
fucom
and
add
mov
sub
mov
aaa
mov
lds
inc
adc
scas
push
movsl
aad
dec
popa
sbb
dec
sbb
insl
mov
pop
int
adc
hlt
movsb
sahf
dec
inc
lahf
mov
pop
or
outsl
in
std
inc
jne
fidivl
sti
repnz
mov
or
inc
adc
imul
cwtl
lret
lret
sub
popf
addr16
cmp
mov
mov
xor
or
aaa
inc
movsb
inc
loopne
mov
jmp
out
sub
push
popf
clc
add
pusha
mov
pop
lahf
xchg
pop
mov
push
sti
xor
add
push
push
out
imull
adc
mov
xchg
popa
cmc
and
stos
out
into
mov
cmp
incb
or
pop
ljmp
sub
mov
pop
mov
inc
dec
and
sbb
jg
mov
outsl
popa
cmp
cli
scas
loop
mov
jp
inc
cmp
leave
push
test
xchg
popa
dec
test
int3
roll
mov
sbb
mov
psubusb
xor
sub
cmp
sarb
pop
loopne
pop
divl
jg
stos
push
shll
sbb
sub
in
jae
pop
mov
outsl
dec
sub
test
mov
inc
mov
lahf
mov
xchg
pop
adc
leave
and
dec
add
daa
mov
and
aas
out
movsl
xor
ljmp
lcall
loope
int3
push
dec
nop
in
jecxz
mov
mov
pop
test
inc
xor
push
ljmp
push
xchg
popa
std
sub
leave
nop
loope
inc
int3
movsl
inc
cmp
pop
cmp
lret
outsl
lods
xchg
repnz
xchg
std
push
xchg
xchg
ja
and
rcrb
sbb
sbb
jmp
xor
sbb
xlat
gs
push
adc
aas
scas
negb
in
sub
int
bound
add
and
cmp
fdivs
inc
idivb
cmpsl
cmp
pop
in
jb
loop
sbb
cmp
ror
sub
mov
lods
out
xchg
scas
rcrb
mov
icebp
push
cld
mov
or
cmpsb
xchg
mov
sub
hlt
add
xor
ficompl
mov
ds
stc
push
js
lods
mov
fnstsw
pusha
jnp
hlt
push
or
movsb
aas
sub
loop
fbld
imul
lret
ja
pushf
sub
jb
inc
je
add
xor
cs
xchg
mov
call
repnz
sbb
push
nopl
inc
and
leave
sub
iret
pop
mov
push
adc
mov
fisttpll
sub
dec
adc
xchg
and
inc
out
pop
xchg
sarl
adc
daa
sahf
scas
in
mov
push
and
xchg
xchg
pop
andl
imulb
cmp
sti
adc
ret
cmp
xor
js
mov
test
lock
inc
int3
lea
jmp
sub
mov
rolb
aad
adc
in
mov
fdivs
shr
in
jge
pop
mov
mov
and
outsl
push
xor
push
mov
jo
cmpsb
in
pop
inc
pop
pop
mov
adc
dec
fnsave
pop
mov
inc
jnp
pop
cmp
fcoms
fs
into
adc
mov
idivl
enter
lods
inc
scas
outsb
repnz
bound
in
adc
dec
jl
push
nop
les
movsb
pop
jo
xlat
aaa
jb
daa
fs
mov
xchg
adc
lods
cltd
push
lods
pop
mov
cltd
fistl
xor
out
fadds
push
xchg
jns
push
sti
pop
mov
xor
imul
rorb
inc
fmull
bt
inc
ja
xchg
lret
popf
pop
cmp
jl
ds
and
mov
loope
or
ficomps
fcoml
xchg
cmpsl
xchg
test
push
mov
jmp
js
subl
loop
test
xchg
out
ret
and
mov
scas
xor
mov
sub
negb
fildll
ljmp
stos
fistl
xchg
arpl
loope
xchg
mov
mov
lret
jns
cmp
mov
dec
mov
cltd
dec
mov
shrb
mov
xor
mov
stos
mov
pusha
push
sub
xor
cmc
pop
push
icebp
inc
jne
mov
cld
gs
and
and
pop
cmp
mov
stc
push
stos
mov
and
and
filds
xchg
inc
or
scas
and
punpckhdq
fsts
fs
daa
push
jg
pop
cwtl
packsswb
aaa
shrl
mov
outsb
scas
mov
jbe
xor
cmpsb
or
fldt
test
movsb
sbbb
sbb
mov
sbb
mov
enter
lahf
repz
push
and
cs
hlt
mov
movsb
lret
idivl
dec
mov
std
aaa
lret
fwait
jnp
sti
lcall
aam
and
jp
rcl
xor
movsl
nop
jmp
movsb
xchg
jecxz
ja
xlat
pushf
cmp
jns
sahf
dec
adc
outsl
xchg
in
sbb
mov
xor
xchg
test
pop
outsl
jg
mov
add
or
adc
subb
mov
cmpb
aad
inc
gs
out
sahf
rcl
divb
out
vmovsldup
sub
push
pusha
mov
ja
aas
adc
adc
or
xor
add
sbb
pop
push
add
mov
push
cmc
mov
and
bound
xlat
cmpsl
aaa
sub
sbb
adc
push
adc
cld
and
inc
stos
rorl
cli
lods
dec
pop
mov
addl
shrl
inc
xchg
repnz
addl
daa
cmpsl
in
out
sahf
mov
cmpsl
jbe
inc
lock
aas
in
and
and
or
call
jecxz
dec
stc
shr
sub
jb
lcall
clc
ss
lret
xchg
adc
test
int3
inc
xor
scas
iret
cmp
in
std
hlt
bound
das
jecxz
fnstcw
fcoms
lods
outsb
jae
lret
int3
fcmove
lds
cltd
push
in
in
push
lock
pop
fucomip
push
jno
add
testb
mov
or
bound
xlat
dec
ret
leave
leave
push
ljmp
add
loopne
pop
dec
gs
imul
cmc
mov
lock
push
or
dec
ret
mov
out
iret
jne
adc
outsl
pop
imull
push
mov
cmp
loop
pop
fcompl
inc
bound
sub
enter
sti
cmp
jb
dec
rcrl
cli
push
mov
pop
mov
inc
cmp
mov
adc
jmp
mov
int3
std
loopne
add
cmp
aad
lock
imul
add
jg
xchg
imul
repz
stos
sti
inc
movsl
enter
push
mov
aam
pop
cmp
lcall
orl
or
sti
loope
pop
or
xchg
mov
xor
test
dec
loope
cld
dec
xor
daa
mov
push
cmc
inc
xchg
mov
out
js
sbb
lea
and
sti
outsb
aaa
jnp
iret
push
mov
sub
cmp
cltd
mov
add
nop
adcb
sub
repnz
and
je
pushl
es
push
cmpsl
or
sarl
test
cmp
mov
mov
aas
push
outsb
mov
stos
or
repz
and
xchg
xor
ja
shll
aas
dec
movsb
mov
ret
in
mov
add
sbb
xchg
jo
lahf
lret
mov
jmp
call
mov
sbb
lret
dec
notrack
mov
das
mulb
les
add
ficompl
imul
push
idivl
adc
aam
mov
or
ds
pusha
jg
xchg
push
push
mov
push
test
mov
jae
inc
scas
cmp
stos
addl
les
and
jecxz
sub
sbb
cld
xchg
test
xor
stos
ret
nop
decl
lds
ss
data16
dec
and
xchg
js
test
pushf
lret
mov
stos
in
sub
sub
cltd
pop
imul
sar
gs
mov
sarl
enter
pop
jae
ret
nop
add
outsb
cli
push
pop
aaa
dec
adcl
int3
movsb
or
cld
mov
sub
pop
stos
jg
xor
push
dec
sti
cltd
cmp
pop
dec
negl
ss
test
inc
xchg
mov
roll
das
fisubl
jecxz
add
push
nop
jb
lret
iret
lcall
lahf
xor
int3
leave
adc
sbb
les
test
lods
mov
and
mov
imul
scas
adc
mov
enter
cmp
xchg
sub
or
push
dec
and
std
jne
imulb
movl
sbb
repnz
pop
pop
outsl
lock
cli
into
aam
jmp
push
cli
pop
pop
inc
and
and
mov
scas
in
sbb
adcb
movb
bound
ds
int
inc
add
bound
cwtl
je
adc
std
clc
adc
stc
mov
pushf
jg
mov
test
pop
push
aam
rorl
rcrb
jmp
scas
nop
nop
shlb
or
cld
call
add
adc
jns
or
inc
mov
pusha
pusha
pop
push
out
xchg
mov
std
es
mov
sub
push
out
aad
cmpsb
enter
lea
cmp
stos
cmp
lds
fisttpll
iret
adc
xchg
mov
test
loop
adc
iret
daa
xor
xchg
stc
mov
push
inc
das
mov
fbld
xor
pusha
imul
mov
lods
add
scas
dec
and
sarl
imul
cmp
and
cmpsb
adc
aaa
pop
mov
jle
jbe
sub
sub
pushf
jle
xor
or
rorl
lea
lds
roll
leave
adc
mov
pushf
cmpsl
sbb
subb
imull
mov
test
call
mov
xchg
scas
adc
inc
insb
bound
nopl
pop
in
or
mov
icebp
lods
cmpsb
lcall
jge
sbb
ds
pop
inc
pop
push
push
in
jnp
pop
sbb
lret
test
jb
ret
mov
mov
push
inc
cmc
cmpsb
test
mov
jnp
inc
arpl
cmp
rclb
mov
cs
jmp
xchg
out
in
shlb
xchg
mov
int3
std
daa
jne
push
xchg
mov
pop
xor
lods
add
sub
push
inc
mov
in
xchg
cmpsl
mov
sbb
icebp
mov
into
stc
xchg
adc
cmp
loope
in
mov
push
popa
aad
daa
sbb
notl
test
hlt
cmpsl
inc
cmp
xchg
ret
loop
xchg
lret
rcrb
pop
jb
sahf
pusha
test
loop
clc
test
xchg
movsl
stc
push
and
mov
mov
mov
in
pop
cmp
js
adc
outsl
push
dec
outsb
pusha
xchg
mov
clc
cltd
pop
pop
xchg
mov
fs
rorl
pop
xchg
inc
jnp
mov
movsl
fcomip
or
xchg
rcl
fisttpll
cmp
sbb
shld
add
ret
inc
imul
mov
adcb
out
cmc
clc
fimull
hlt
adc
pop
push
jmp
aad
add
test
pop
pop
icebp
push
mov
jle
and
insb
in
enter
sahf
sub
push
insb
lcall
in
popa
test
push
into
decb
shlb
or
sbb
in
jecxz
in
call
add
arpl
jbe
jne
pop
mulb
jno
scas
add
inc
es
shld
mov
jnp
out
into
push
test
dec
cmp
movsb
rcll
and
lods
mov
dec
fbstp
sub
rcr
insb
cld
sbb
aad
dec
aam
aad
mov
jo
mov
fdivs
nop
mov
pushf
cmc
cld
and
fdivs
or
pop
sahf
hlt
in
mov
int
sbb
inc
dec
call
mov
out
mov
sahf
addl
dec
enter
sbb
lret
loopne
fcoml
inc
test
enter
movsl
lea
imul
mov
popf
xor
je
inc
loop
das
xchg
fcmovnb
jp
push
jl
je
sbb
mov
ficoms
into
pop
inc
lock
xor
cli
inc
in
push
add
sti
es
adc
ljmp
xchg
push
iret
xchg
sahf
mov
cld
bound
xor
push
scas
dec
inc
filds
iret
xor
xchg
test
xlat
or
sarb
lret
lahf
push
scas
ret
mov
fnstenv
pop
push
ss
inc
push
fisttps
test
push
outsl
xchg
lea
sbb
movb
and
es
dec
test
lds
test
ffree
ss
ret
jecxz
mov
jge
jo
pop
fbstp
mov
pop
push
shlb
sbb
ret
hlt
adc
sub
loopne
cmp
in
or
adc
pop
cmpsb
mov
push
jbe
mov
push
sub
cmpsl
sbb
jg
out
sub
adc
adc
loope
cmp
push
ss
adc
push
inc
adc
mov
add
sbb
sbb
movsl
jno
jnp
dec
or
jbe
xchg
sub
cmc
mov
and
pop
or
cmp
xchg
xor
inc
push
inc
loope
mov
adc
data16
sub
jmp
add
pop
xlat
and
int3
xlat
mov
and
enter
adc
and
mov
test
xor
sbb
clc
shll
stos
movsb
add
add
inc
xchg
inc
test
and
adc
aaa
dec
cmp
mov
aas
adc
ret
shrl
xchg
mov
iret
dec
mov
test
bound
rol
jg
lret
adc
imul
adc
add
xchg
add
push
cmp
cs
push
cwtl
inc
fsubl
lods
je
lods
mov
mov
jl
push
adc
pop
in
dec
pavgw
negl
xor
or
pop
and
test
dec
outsl
cmp
xchg
xlat
arpl
pop
sbb
mov
les
imul
and
jnp
repz
mov
nop
mov
sti
inc
xor
inc
cli
imul
scas
not
loope
or
ds
stos
cmp
mov
mov
adc
dec
arpl
daa
out
cwtl
dec
sub
sub
mov
add
shrl
rol
xchg
dec
leave
sub
mov
jnp
jb
loope
mov
push
pop
push
sbb
out
lret
icebp
aas
mov
sbb
mov
loop
pop
sbb
pushf
mov
pop
push
setnp
pop
pushf
jne
add
lcall
jno
xor
pop
lahf
dec
or
or
xor
hlt
push
or
movsb
cmp
lcall
adc
xlat
jmp
arpl
inc
inc
rcl
inc
fcompl
jb
mov
and
jno
ja
fimull
sbb
or
mov
jg
out
outsb
cwtl
lods
stos
adc
cld
movsb
inc
jo
or
adc
movsb
and
inc
jecxz
imul
ljmp
orl
sbb
adc
fists
or
ds
sub
outsb
subl
leave
fildll
mov
int
ret
jp
test
test
shrb
sub
outsl
and
test
out
out
movsb
sbb
mov
pop
aas
popa
sbb
pop
pop
daa
fdiv
mov
mov
cli
xor
pop
cltd
or
jbe
sub
adc
push
adc
outsl
shll
jo
pusha
or
lock
les
mov
ret
inc
inc
push
sahf
xlat
add
lret
dec
pop
cmpsb
and
sbb
aaa
out
lcall
daa
xchg
out
add
inc
loopne
cmp
outsb
or
cmpsb
inc
rcll
push
mov
jo
and
adc
push
and
or
scas
push
cli
xor
xchg
xchg
fists
mov
orl
lahf
mov
rorb
pusha
imul
mov
cmp
ret
and
outsb
test
sbb
dec
and
jnp
sub
das
mov
xor
iret
imul
jbe
out
add
cs
lcall
mov
out
sbb
sub
xchg
notl
mov
push
push
iret
pop
jae
lods
movsl
outsl
pop
sub
test
clc
adc
pop
add
adc
in
shl
mov
clc
add
inc
into
cmp
jle
push
pushf
and
dec
cmc
mul
lea
or
and
mov
sub
sub
sbb
ds
imul
divb
call
insl
or
mov
add
clc
and
pop
lds
aaa
and
and
sub
movsl
andb
popa
sbb
addr16
jo
mov
pop
fwait
jae
cld
sub
or
das
inc
xchg
pop
addb
and
and
clc
les
out
bound
aam
xchg
loopne
xchg
adc
sar
jae
je
xorb
cmpsl
inc
roll
cli
daa
es
int3
loop
nop
adc
popa
lcall
mov
insb
mov
int3
stos
ds
mov
insl
daa
mov
outsb
xor
jmp
and
dec
or
fstpl
xchg
push
cli
fmull
fcmove
mov
xchg
push
push
hlt
outsl
or
push
in
or
inc
addr16
pop
and
push
lahf
cmp
and
popf
cwtl
jno
fiaddl
and
adc
sbb
enter
test
pop
fnsave
jbe
pop
jno
xchg
pop
iret
pushl
adc
mov
icebp
and
cwtl
lcall
cmp
mov
aam
cwtl
pushf
lcall
outsl
dec
dec
sbb
sub
sub
mov
shlb
aaa
mov
or
call
leave
pop
jbe
cmp
pushf
out
mov
mov
mov
mov
inc
add
pop
stos
xor
sub
cmp
stos
push
loope
and
adcb
dec
stos
dec
loopne
loopne
xchg
aam
mov
aam
fists
cmc
stos
xor
lods
cli
jne
push
je
jmp
xor
fs
and
sub
lods
xchg
mov
cmp
jno
loope
sti
fwait
lds
pop
cli
pop
mov
inc
mov
cmp
sbb
call
cltd
mov
add
jbe
cmpsl
pop
mov
push
xor
dec
lahf
ret
cltd
divl
arpl
push
xor
out
mov
int3
sti
mov
call
ret
fdivrl
cmp
lret
jg
pop
fxch
pop
cmc
sub
sarl
jmp
frstpm(287
cmpsl
sbb
push
scas
adc
outsl
imul
cmp
fmull
loopne
push
push
out
icebp
cli
push
imul
pop
pop
push
icebp
or
ds
jp
ficoml
push
mov
jle
fildll
inc
cmpsl
dec
cli
mov
pop
jl
push
fcoms
movb
pop
jle
xor
hlt
aaa
arpl
mov
lret
xchg
cmpsl
ds
push
or
and
mov
lods
rcrl
xchg
mov
sbb
ja
cmp
roll
in
repnz
mov
lret
ficomps
loop
shl
inc
popf
in
push
sahf
cmpsb
xor
cmp
adc
jmp
ret
ljmp
push
dec
jo
daa
fldt
xchg
xchg
stos
fildll
cmp
xor
into
sub
mov
jp
andb
push
cmpsb
loopnew
js
cmp
fmull
mov
pop
movsb
inc
pushf
hlt
outsl
je
imul
add
sub
lea
add
adc
mov
add
addb
xchg
loopne
and
aaa
sbb
sti
sbb
xlat
ret
mov
das
cwtd
xchg
cs
xor
sub
jnp
xor
pusha
jge
cmp
frstor
xchg
dec
mov
push
int3
fcmove
inc
sbb
test
insb
testl
and
std
dec
dec
inc
pinsrw
sub
loopne
or
leave
aad
sub
outsb
jnp
or
mov
xorb
fcmove
xchg
mov
aas
out
arpl
cwtl
mov
or
add
mov
mov
ret
pop
jno
xor
push
in
dec
push
incb
test
mov
addr16
popa
xchg
sbb
push
push
mov
add
rolb
cmp
cmpsb
push
push
and
mov
pop
inc
or
jb
mov
jge
or
rol
adc
es
pop
orb
add
out
sbb
mov
arpl
daa
imul
jle
sub
out
add
mov
jbe
rcrl
push
daa
lods
inc
fbld
or
ret
lea
mov
popa
sarl
push
xor
jmp
cmpsl
pop
test
jecxz
out
mov
test
jge,pn
pusha
mov
out
xor
je
cmc
lea
and
mov
jl
rclb
adcl
jne
in
add
sub
push
sub
lods
in
pop
jb
mov
rorl
mov
pop
aad
jp
movsb
mov
and
popa
popa
xor
sub
pop
addr16
sti
rcrb
dec
cmc
sub
jne
push
movsl
dec
shrb
sbb
xor
mov
fildl
iret
dec
push
cmp
std
inc
dec
stos
adc
push
add
push
popa
call
nop
ss
dec
ds
hlt
subb
jnp
push
test
cwtl
push
inc
push
xor
mov
daa
ljmp
adc
or
push
pop
mov
mov
mov
enter
movsb
push
cltd
push
lods
and
les
repnz
fdivl
pop
or
sti
jg
lahf
in
clc
dec
push
pop
jl
aam
xorl
xor
jl
sbb
fs
and
push
jmp
inc
ljmp
fnstsw
mov
mov
rolb
push
sub
dec
xchg
cltd
push
xor
jg
cmp
pusha
inc
lret
clc
mov
xchg
test
imul
sar
inc
or
gs
cmc
add
cmp
fdivrl
dec
mov
dec
mov
dec
inc
rorl
cmpsb
mov
int
xchg
outsb
xor
adcl
leave
and
loopne
sub
fldt
into
rclb
call
sbb
xchg
ret
popf
lahf
adc
push
mov
dec
ljmp
xor
sahf
ss
addr16
sti
inc
aaa
out
mov
les
es
or
idivb
clc
jp
mov
mov
mov
test
jne
fisttpl
push
jmp
fsubrl
inc
enter
decb
movsl
enter
add
ss
in
jb
xchg
ja
cmp
lret
loopne
lahf
repz
sbb
and
sub
push
add
cmp
dec
jb
push
outsl
les
jbe
sub
jb
adc
int
dec
pop
push
ret
lock
imul
push
insb
dec
imul
xchg
in
sar
xchg
adc
in
mov
mov
ja
sub
add
dec
inc
gs
gs
daa
and
sub
lret
xor
out
and
mov
mov
jns
shrl
ret
fstpt
repnz
mov
shrb
add
dec
dec
and
jnp
mov
iret
aam
ja
mov
add
push
aam
xor
jbe
fxch
sub
inc
sbb
popa
mov
stos
inc
sbb
and
cmc
mov
mov
js
xchg
cmc
xor
pop
mov
icebp
loop
icebp
mov
cmpsl
xchg
push
ret
xor
mov
push
sbb
push
xchg
pushf
jmp
arpl
inc
shl
andl
imul
aas
out
push
push
add
adc
jno
xchg
xchg
mov
idivl
frstor
jne
iret
mov
in
add
cwtl
sti
inc
sbb
jno
psraw
fmull
lea
mov
xchg
lock
jnp
rolb
cmp
mov
sbb
jg
popf
push
mov
scas
add
dec
scas
push
lods
xor
mov
mov
sbb
int
fdivrs
xchg
jne
sbb
insl
scas
xchg
pop
jge
sbb
in
pop
push
or
and
xor
xlat
cmp
jo
test
inc
cmpsl
ret
jno
cmp
push
pop
addr16
xor
bound
mov
dec
fwait
xor
int3
push
xor
or
sub
mov
loopne
lds
mov
data16
adc
cltd
addr16
jne
data16
popf
bound
leave
in
cltd
je
pop
loopne
imul
mov
imul
test
push
pop
mov
js
mov
xchg
add
stos
xchg
repz
std
xchg
mov
cs
inc
cwtl
mov
xchg
add
push
xlat
scas
cmp
add
mov
cmpsb
imul
jle
adc
dec
scas
jge
or
hlt
das
dec
or
sub
pop
sub
or
out
test
jp
xlat
sarb
lods
sti
test
mov
ja
mov
sbb
daa
inc
int
frstor
dec
test
stos
and
leave
xor
sbb
xchg
xor
push
cmpb
movsl
jne
insl
es
ja
push
sbb
movsl
call
xor
inc
mov
xchg
mov
stos
repnz
and
pop
mov
aaa
je
jbe
jecxz
loop
pop
das
imul
out
shlb
bound
push
mov
cmp
mov
pusha
xor
stc
or
hlt
jo
cs
add
adc
nop
lret
ret
inc
mov
cmp
or
leave
push
out
xor
cltd
daa
sbb
cmp
pop
xchg
or
and
push
cwtl
mov
mov
popf
sub
add
ret
push
or
pop
lret
lods
lret
aad
jns
xchg
sarl
lret
or
push
pop
in
xchg
pop
out
add
jle
push
cld
mov
imul
sub
cwtl
add
mov
pusha
iret
cltd
sub
out
pop
roll
add
xchg
push
adc
xchg
fsubrl
fistpl
test
or
outsl
or
mov
clc
mov
jmp
mov
lcall
adc
xchg
fildll
push
inc
pop
out
shlb
push
es
fnstenv
pop
into
ret
dec
loope
mov
dec
out
cld
inc
jns
push
cmp
dec
fwait
xchg
sbb
icebp
stos
or
mov
ficomps
fs
ret
sbb
stc
cmp
test
pop
or
and
push
xchg
sub
scas
lret
mov
inc
cmp
repz
inc
int3
and
jg
sbb
pop
js
pop
xchg
mov
sub
and
and
fistpl
test
and
test
or
fdiv
popf
and
or
stos
fwait
lahf
or
or
ljmp
jmp
fsubrs
stos
ds
fildll
lock
call
addr16
and
mov
mov
mov
arpl
dec
incb
sub
popf
mov
pop
pop
push
lods
lods
stos
in
inc
rorl
mov
add
pop
and
sub
popf
pop
jecxz
fwait
xchg
popa
mov
add
inc
or
or
pop
mov
bound
fstpl
dec
mov
and
out
loop
sahf
mov
mov
ret
or
aad
push
cli
mov
addr16
rolb
mov
push
test
and
mov
aas
inc
cmp
cmp
and
cld
add
mov
enter
mov
xchg
fdivrs
adc
outsb
adc
pusha
daa
cmp
jb
add
dec
or
cmp
xchg
lock
sub
mov
into
adc
jle
xor
in
negb
nop
repnz
sbb
add
in
stos
ljmp
std
jae
xlat
push
sti
inc
xchg
jecxz
rcrl
adc
pop
test
jmp
and
sarb
cmpsb
push
xchg
shrb
push
cmp
popf
mov
jg
inc
sub
push
xchg
mov
mov
mov
jecxz
aaa
loope
or
lcallw
jbe
add
lods
cmpb
jge
jnp
jg
xor
xchg
ret
loopne
clc
jp
jg
mov
fs
bound
mov
outsb
xor
fisubs
loopne
pop
inc
dec
out
insl
sbb
movsb
btrl
in
ljmp
jmp
sbb
push
inc
rorl
push
lea
test
clc
outsb
loope
xchg
addb
mov
cmp
imul
rcll
sub
mov
std
push
cmp
pop
mov
sbb
lds
lcall
ret
sub
sarb
popa
cmp
fadds
and
push
mov
mov
push
xor
mov
mov
stos
cmp
pop
push
test
push
cwtl
and
je
jmp
cmpsb
cmpsb
fs
adc
mov
sti
xchg
test
arpl
mov
adc
aam
pop
mov
pusha
les
in
scas
ja
movsb
pop
mov
inc
imul
test
add
lahf
insl
or
push
fidivs
pop
cs
stos
add
test
scas
jecxz
sbb
rcl
add
mov
add
fsub
inc
daa
call
ficoml
fnstsw
or
stos
adc
aaa
test
push
aaa
add
cltd
dec
fs
dec
or
adc
xor
add
pop
lret
jge
imul
bound
cs
push
inc
inc
adc
jns
addl
clc
sarl
lret
push
ss
into
dec
xchg
push
popf
adc
int3
jecxz
outsb
add
or
test
jmp
cmp
jo
push
lahf
outsb
out
adc
jae
dec
mov
scas
fldcw
cli
lea
dec
push
movsb
jno
bound
fiaddl
in
push
sbb
test
fimuls
repz
xor
fstps
call
adc
js
or
ror
push
jge
test
adcb
adc
sub
out
cmpsb
pop
pop
rclb
fisttpll
imul
mov
or
jp
pop
leave
mov
push
cmp
add
daa
or
jnp
pop
mov
lock
dec
andl
mov
loope
cs
loope
push
das
test
lret
sub
jae
lahf
movsb
sub
pop
inc
shrb
popa
jnp
mov
fnsave
and
xor
ss
or
and
popa
xor
cmpb
lret
push
std
daa
cwtl
inc
pop
xchg
push
fwait
mov
test
push
mov
bound
outsl
push
xchg
pop
or
cmpsb
popf
sbb
out
cmp
shrl
in
jp
iret
test
cli
pop
mov
inc
sub
popf
and
mov
lea
xchg
pusha
adc
sti
push
es
rcrl
out
sub
or
sub
imul
push
cmp
xor
bound
clc
repz
aad
jge
leave
ja
dec
out
adc
pop
in
dec
pop
and
iret
cmp
jmp
bound
andb
cld
in
cwtl
arpl
jle
in
mov
push
jbe
xchg
not
lret
jae
test
xlat
repz
jecxz,pn
test
mov
mov
xchg
mov
fs
aas
push
rcll
push
or
inc
cwtl
into
mov
mov
sbb
xor
es
scas
ret
lret
pop
nop
ja
lret
add
fistl
aaa
xchg
push
fisttpl
movsl
insl
dec
push
mov
call
mov
xorb
fidivrl
clc
add
int
sub
inc
loopne
into
ja
in
mov
sub
pop
mov
cmp
mov
cs
jb
outsb
and
mov
fbstp
or
push
dec
pop
fsubrs
lcall
data16
es
out
mov
aas
adc
orb
push
dec
js
mov
mov
shll
jno
fsubs
outsl
das
fs
lcall
sarl
imul
mov
clc
fildl
jge
es
int3
ss
add
mov
push
mov
push
test
mov
test
popf
mov
in
fsubr
mov
movsb
cmp
mov
ss
mov
icebp
lea
out
mov
fisttpl
dec
xchg
sub
dec
inc
rolb
pop
sub
divb
pop
adcl
movups
into
lcall
sbb
sbb
ss
mov
add
filds
jge
out
lds
or
xor
jae
adc
call
push
sbb
dec
cwtl
fistpll
cs
rorl
lret
adc
sbb
std
outsb
inc
xchg
fwait
in
sbb
out
jns
dec
pop
pop
in
in
mov
cwtl
cmp
cmpsb
mov
jg
imul
cmc
js
in
shr
vmread
cmpsl
add
insl
lock
pop
pop
add
or
scas
in
aam
scas
or
inc
adc
out
and
in
jecxz
cmpb
and
imul
cmc
pop
cmp
push
xor
cmpsl
das
incl
push
push
xor
cli
aam
xchg
dec
rcr
daa
repnz
and
inc
ljmp
mov
cmp
ret
jb
cmc
push
lock
xchg
popa
lcall
xor
xor
or
mov
imul
mov
test
mov
xchg
sbb
xor
pop
mov
or
int3
or
mov
adc
scas
and
push
orb
inc
xor
imul
inc
out
fs
outsl
insl
cltd
mov
jmp
shll
les
arpl
fadds
je
inc
or
je
pop
arpl
ja
mov
sbb
push
adc
test
cmp
fbstp
imul
pop
mov
ljmp
mov
je
dec
mov
cld
add
stc
loope
popa
adc
loop
sti
pop
mov
sub
push
jl
hlt
mov
adc
nop
cltd
mov
sbb
inc
push
pusha
mov
xorl
jl
xchg
jne
sar
jns
pop
cs
stc
enter
dec
xchg
push
pop
lret
inc
push
int
mov
insl
push
sub
lcall
adc
outsl
adc
xor
and
sbb
mov
loopne
pop
ja
cmp
xor
inc
or
cmpsb
scas
rcrb
inc
sub
xchg
inc
rcrl
dec
xor
pop
test
pushf
lret
cmp
cmp
sbb
cmp
mov
and
mov
sub
lods
mov
jge
cwtl
jns
inc
sbb
push
jb
nop
icebp
push
enter
sub
cmp
imul
iret
pop
jmp
jo
push
sarb
mov
into
inc
cli
add
push
inc
mov
jecxz
mov
es
cmp
loope
or
sbb
jp
shrl
jecxz
pusha
or
popf
or
inc
pop
adc
aaa
in
push
xchg
adc
fiaddl
pop
into
mov
mov
jbe
scas
inc
mov
mov
adcb
push
xchg
call
out
fs
pop
sub
enter
repnz
dec
dec
addb
sub
push
or
loop
mull
mov
pop
pop
mov
sbb
pop
sub
adc
imul
decb
mov
repnz
aad
std
roll
mov
daa
lahf
dec
jecxz
inc
xchg
test
dec
dec
enter
sub
dec
lods
lock
les
in
and
push
or
dec
xchg
adc
jge
das
int
xchg
or
jns
stos
dec
call
pop
enter
test
sbb
or
dec
sub
filds
dec
adc
cmp
lock
imul
ja
sti
jmp
nop
outsl
std
xchg
lret
mov
cmc
cmpl
out
cmp
fimuls
xchg
mov
outsl
test
mov
divb
stos
out
adc
pop
outsb
or
mov
fwait
mov
inc
scas
xchg
pop
sub
add
or
ja
je
rclb
xchg
adc
std
push
or
pop
sbb
xor
aam
mov
or
mov
xchg
mov
repnz
movsb
scas
mov
jp
and
pop
mov
outsb
cmpsl
jne
xchg
pop
push
push
pusha
shrb
mov
aam
fidivl
mov
push
adc
lret
cmp
push
ja
and
mov
or
lahf
mov
pop
fucomi
mov
fstps
dec
push
mov
scas
push
dec
lods
lods
mov
xchg
nop
test
ret
pop
rcll
in
fldt
pop
ss
cmp
lds
xor
cmc
inc
push
and
mov
les
fmuls
xchg
add
insl
in
pop
push
sbb
cli
in
pop
cmc
lds
add
out
and
sub
jle
sahf
push
mov
sti
in
inc
dec
dec
lock
out
sub
scas
jne
adc
ja
out
fisubs
and
mov
cmpsb
mov
lahf
dec
pop
gs
mov
xor
xchg
enter
popa
insb
push
fcomps
in
mov
push
mov
xor
push
mov
nop
cwtl
push
daa
out
adc
sub
mov
adc
jmp
fisubl
xor
daa
repz
xor
mov
fdivs
cmpsl
add
jp
out
dec
imul
xor
insl
lds
outsl
iret
add
jb
les
add
imul
repnz
xlat
lcall
out
daa
push
pop
mov
pop
sahf
and
std
push
fadd
imul
in
pop
cs
fistl
xchg
fucomi
movsl
cmc
push
dec
jb
adc
pusha
push
xor
fdivl
fnstcw
and
xchg
mov
lret
sbb
div
cmp
rolb
insb
aas
popl
lea
in
aad
loop
or
jbe
dec
sbb
xchg
das
arpl
fdiv
shrl
icebp
xchg
inc
insb
cmp
das
stos
bnd
paddd
cltd
sub
mov
push
mov
sti
lcall
mov
sti
idiv
add
add
jo
fs
sbb
fists
sub
outsl
add
fsub
test
jg
inc
int3
add
pop
xor
lea
mov
inc
lds
repnz
xor
ljmp
aad
jbe
ss
nop
ljmp
imul
and
or
les
or
xchg
and
add
jmp
adc
mov
dec
pop
or
sub
push
movsl
sbb
les
insb
dec
xchg
cmp
lret
repnz
scas
cmc
inc
inc
sahf
and
adc
xchg
icebp
jg
mov
mov
ret
inc
pop
leave
or
pop
aam
in
outsb
shlb
mov
mov
xor
ss
fbld
cmc
scas
int
fcompl
test
popa
adc
pop
and
inc
ja
sub
xchg
dec
and
ds
mov
lea
sbb
mov
jne
mov
pop
xchg
or
popl
nop
adc
fidivl
adc
dec
xchg
cmp
in
filds
loopne
scas
imul
pop
push
push
pop
aaa
dec
dec
dec
leave
aam
ss
jb
aas
push
arpl
into
enter
adc
gs
jp
push
mov
lock
jbe
repz
dec
gs
into
sub
adc
stc
cmp
rcl
addr16
cltd
rcl
or
inc
mov
cmp
sti
dec
fs
imul
rolb
insb
push
nop
xchg
xchg
xor
mov
jl
xchg
lret
push
inc
mov
sti
lea
test
mov
pop
sub
fcmovbe
xor
in
or
jb
data16
fiaddl
cmp
adc
pusha
cmp
sub
jnp
repz
mov
pop
call
mov
pop
mov
pop
dec
push
dec
out
fistl
fsubp
cli
xor
lock
adc
push
jmp
cmp
mov
xor
mov
clc
push
cmpsb
adc
daa
mov
loopne
scas
pop
jp
cltd
mov
lods
addr16
dec
andl
fbstp
sbb
dec
ds
test
lock
adc
sahf
mov
push
xchg
add
or
arpl
mov
pusha
jb
jne
pop
in
cmpl
into
adc
mov
xor
out
loopne
xchg
loop
mov
sub
imul
dec
repz
stos
iret
ret
loopne
and
or
adc
sub
mov
mov
dec
cmp
cmp
push
mov
out
sbb
imul
enter
out
rcll
push
mov
imul
rcrl
cmp
out
mov
mov
mov
aad
mov
sbb
cmpl
mov
sar
outsl
and
sub
xchg
adc
jb
push
filds
mov
lret
xor
inc
jmp
push
xchg
mov
int
jmp
into
mov
loop
or
pop
in
scas
mov
sbb
add
pop
xchg
fadds
imul
cmp
and
jne
cmp
in
adc
out
outsb
int3
pushf
clc
dec
mov
cmpb
jb
push
jbe
cmp
or
imul
stc
dec
cmp
ds
push
pop
inc
leave
outsl
cmp
ficomps
inc
cmp
mov
test
pop
lret
cmp
pop
out
cmp
movl
enter
or
sub
imul
aaa
ljmp
xor
xor
cmp
mov
ss
repnz
inc
xchg
fistpll
shrl
dec
jge
lret
pop
cmp
pop
out
mov
arpl
add
mov
push
add
add
xorb
pop
sub
push
jmp
out
sbb
push
movsb
sbb
xor
loopne
and
nop
pop
sub
data16
test
mov
les
shll
fs
sub
icebp
scas
psubb
dec
xor
js
dec
pop
adc
and
dec
adc
cmp
movsb
in
cli
adc
mov
div
jns
xor
mov
imul
mov
jmp
ret
imul
outsl
cmp
scas
inc
fs
cmpsl
shrl
hlt
pop
sar
pop
std
ffreep
pop
sub
pop
pop
imul
shll
call
or
lret
mov
dec
mov
pop
std
popa
adc
add
sub
jmp
int3
push
sub
ljmp
xor
dec
or
or
scas
push
ljmp
xchg
pop
xchg
mov
sbb
lea
xchg
jge
add
das
int
and
pop
call
cmpsb
xor
push
pushf
jno
in
roll
cmp
inc
mov
dec
jb
mov
addr16
sub
add
dec
lret
or
jb
inc
shrl
sub
pusha
sahf
cmp
mov
sbb
jae
clc
je
xchg
pusha
fisubl
and
cmc
inc
and
adc
lret
mov
pop
subb
cmp
sub
mov
jne
shll
mov
daa
and
imul
cmp
adc
cmp
mov
pop
orl
repnz
push
in
ror
xchg
push
mov
push
mov
cmp
mov
push
dec
clc
jl
cmp
ret
sub
jge
mov
adc
jl
mov
cmp
adc
pop
aas
lcall
jmp
int
pop
cmpsl
incb
push
fwait
add
aas
stos
push
mov
push
xchg
dec
xor
loope
xlat
add
adc
adc
popf
std
cli
sbb
jne
jb
rorl
lds
outsb
push
xchg
movsl
push
xor
cmp
mov
rcr
xchg
mov
jb
dec
sub
mov
push
xchg
pop
dec
test
arpl
cmpsl
xlat
stos
sub
mov
sarb
push
xor
cmpl
out
ficoml
push
dec
xor
daa
js
inc
sub
inc
mov
sub
mov
xor
aas
pop
enter
insb
outsl
or
ret
pushf
sub
sub
cmc
mov
push
jle
mov
dec
imulb
ret
sbb
inc
adc
dec
dec
test
sti
repnz
imul
loope
das
mov
pop
pop
lods
push
push
testl
lods
cli
jns
push
aad
into
pop
roll
jnp
into
out
adc
ja
sub
cltd
cmpsb
mov
push
subl
xor
jbe
mov
cmpsb
popa
sub
xchg
out
into
push
mov
xchg
push
pop
ljmp
pushf
mov
mov
mov
into
les
jns
and
das
and
hlt
or
lods
cltd
pop
cld
or
xchg
pop
push
sarl
inc
insb
jb
int
add
subl
xor
mov
insl
push
xlat
dec
dec
xchg
jno
lods
je
xchg
mov
sbb
pushf
and
push
push
xchg
stos
sbb
jb
pop
push
das
loop
sbb
jge
test
cmp
sub
cmp
inc
cs
xorl
enter
sahf
and
popf
sbb
fnstenv
jg
mov
and
cmp
xchg
adc
xor
mov
push
mov
adc
push
inc
lods
lods
pop
movsl
into
shlb
jno
cwtl
sbb
sbb
dec
sub
jbe
xchg
mov
cmpsb
cli
push
adc
fwait
add
and
sub
mov
sahf
pop
lret
out
mov
test
popa
mov
dec
cmpsl
dec
push
fs
and
sbb
dec
xchg
mov
mov
adc
mov
mov
sub
sbb
test
js
sbb
mov
fstl
and
push
js
add
sbb
sub
aas
ffree
dec
test
out
incb
mov
cmpsl
xchg
outsl
cli
adc
mov
pop
mov
and
les
pushf
cld
out
lods
push
pop
out
mov
rcl
xchg
cmp
push
xor
mov
inc
push
test
push
fiaddl
dec
into
hlt
lods
call
je
inc
andl
icebp
lea
jp
mov
jmp
rcll
data16
sbb
or
mov
mov
or
fwait
aam
in
jo
test
push
xchg
mov
jae
jmp
or
mov
cld
orb
sub
jg
movsb
add
std
arpl
adc
xor
cmp
jb
add
ja
cwtl
in
in
imul
xchg
and
mov
mov
addr16
add
mov
clc
sbb
mov
dec
or
aaa
jp
gs
lcall
insl
scas
orl
mov
pop
adc
cmp
xor
shlb
and
scas
sub
aaa
pop
xchg
pop
cltd
dec
dec
jmp
push
pop
add
sub
xchg
lds
mov
mov
stos
add
inc
in
mov
push
lds
mov
jb
sbb
xchg
iret
sub
sub
sub
jg
pop
xor
pusha
insl
test
mull
ret
inc
or
hlt
mov
mov
loopne
popf
and
or
add
jecxz
xor
inc
popa
lock
repnz
cld
pop
xchg
inc
xchg
dec
cmp
movsb
outsl
or
jne
clc
insb
add
cwtl
jbe
es
jo
fiadds
shll
aad
lret
movsb
lds
or
push
lret
and
shl
into
push
cli
leave
cmpsb
cs
fcomps
jo
sbb
stc
pop
mov
mov
xor
bound
test
mov
inc
or
push
leave
mov
fistps
sub
mov
sbb
stc
fcmovb
push
stos
scas
mov
movsl
lcall
or
mov
sub
inc
orl
fistps
aaa
cmp
in
pop
and
clc
jbe
je
push
dec
mov
mov
inc
adc
jl
stos
loope
rorl
in
sbb
dec
sbb
int
or
rclb
xsha1
cmpsb
int
es
push
jg
sbb
sub
adc
repnz
cmpsl
je
fucomip
cmp
cmp
lock
mov
sbb
or
loop
cmp
xchg
jmp
cmp
pop
adc
pop
jo
ficoml
es
aam
mov
pop
mov
push
sbb
ret
mov
and
xchg
test
lods
cs
mov
mov
orl
leave
repz
cmp
push
jns
repnz
add
inc
mov
push
jo
and
push
mov
cld
mov
test
and
inc
add
imull
add
pop
push
popf
or
addr16
cltd
mov
ljmp
fdivl
mov
sub
adc
icebp
push
xchg
pop
dec
pop
mov
ret
mov
stos
out
sub
repz
stos
or
lds
mov
stc
jb
pop
inc
les
aaa
jo
imul
add
out
add
push
test
mov
mov
cmp
jnp
push
js
sub
fistpl
adc
mov
sbb
das
cmpsl
dec
fstpl
mov
stos
arpl
mov
inc
mov
or
and
clc
push
push
add
xchg
push
cmp
lahf
jno
mov
xor
ja
mov
inc
xchg
xchg
out
movsl
cmpsb
push
xchg
sub
rcrb
pop
jmp
out
inc
or
jle
jg
fistps
jne
jle
mov
xor
push
push
int
dec
scas
dec
add
in
xchg
cmp
inc
loope
jge
cmp
jne
hlt
das
and
outsl
sub
push
mov
es
add
and
imul
pop
fstpt
adc
mov
sub
rcrl
sbb
push
cmpsb
adc
push
mov
mov
or
xor
rcr
and
cmp
pushf
dec
mov
imul
in
sbb
dec
mov
pop
cmpsl
xor
jl
pop
fiaddl
xchg
pop
mov
lods
aam
and
cmp
pop
pop
push
push
inc
movsl
xorl
and
mov
inc
jmp
jl
push
sbb
enter
movsb
out
les
fdivp
leave
or
sub
test
icebp
mov
je
adc
adc
lret
lods
cmc
pop
pop
pop
test
push
mov
dec
push
mov
in
lock
aam
inc
gs
fldcw
xchg
xchg
std
cmp
cmp
dec
rolb
inc
out
lods
mov
lods
inc
cli
inc
xor
dec
popf
mov
mov
fs
pslld
fisubrl
jecxz
cltd
jb
xor
inc
mov
jmp
js
sarb
stos
jge
fistpll
inc
add
jae
jecxz
jne
and
cmp
arpl
in
aas
pop
dec
mov
fdivs
xor
push
mov
and
adc
push
pop
push
ljmp
and
das
les
test
and
arpl
mov
cmp
movsb
les
ja
aaa
xor
or
mov
sub
jecxz
out
sub
fcmovb
cwtl
adc
scas
inc
push
dec
jmp
into
orl
sub
loopne
inc
into
in
je
out
jg
outsl
jge
cmc
fists
or
les
sbb
xor
mov
add
rcrl
aam
or
mov
movsl
sbb
mov
rcrb
mov
in
cmpsl
rcll
jp
fcomps
std
addr16
mov
cmp
dec
aaa
mov
xor
xor
imul
imul
push
inc
inc
jle
jnp
xchg
push
aad
out
sti
and
mov
cld
test
and
pusha
adcl
fcoml
xchg
pop
scas
sbb
jbe
or
aad
inc
rorl
std
scas
call
adc
pop
jae
das
and
inc
clc
sbb
sti
xchg
jl
cli
jno
fsubrl
mov
and
push
shrb
lcall
mov
int3
jb
lcall
mov
jle
and
inc
push
decl
dec
jne
add
aam
add
in
addb
mov
jb
lea
and
mov
fstpl
sub
out
adc
loop
movsb
mov
xchg
cld
cmpb
or
mov
shlb
lods
xchg
mov
or
mov
sbb
or
outsb
mov
lea
mov
aas
sub
xor
sub
test
mov
sbb
fistpl
dec
fsubs
mov
add
stc
enter
adc
cmp
or
mov
mov
aas
inc
push
idivb
idivl
fwait
out
lods
dec
pop
mov
sub
cmp
xchg
pusha
or
pop
out
jecxz
shl
cli
add
scas
mov
jnp
and
subb
dec
outsl
ja
jmp
les
aaa
xchg
fidivrl
addr16
arpl
inc
push
dec
sbb
sti
push
dec
mov
xlat
dec
pop
mov
fidivl
dec
xor
lods
sarb
dec
push
lock
out
nop
loope
xor
pop
rorl
pop
push
popf
scas
movsb
or
xor
ret
jb
jns
ret
push
fildll
cmp
xor
popf
add
ljmp
jno
ss
ljmp
sub
outsb
or
std
outsl
shrl
out
adcb
int
out
inc
xlat
test
xchg
imul
adc
aas
repnz
and
xor
xchg
pop
test
repz
popa
stos
and
repz
push
ds
dec
cmpsb
sub
fldcw
loopne
cltd
test
lcall
sub
loopne
mov
lahf
insl
push
fildll
jno
in
cld
sbb
ss
leave
jmp
out
xchg
mov
daa
xor
adc
jne
or
adc
pop
out
movsb
jmp
je
dec
ds
out
aam
mov
rcrb
fwait
xorl
dec
fsubrl
jne
and
or
pop
cli
jno
mov
mov
sub
dec
cmpsb
enter
sbb
mov
sti
gs
int
pop
pusha
mov
dec
xchg
cmp
sbb
push
and
stos
jmp
mov
iret
mov
mov
out
loopne
ret
icebp
jb
test
push
mov
testl
and
call
jl
and
mov
sbb
sbb
jne
mov
cmp
mov
cmp
jae
or
jnp
jmp
and
mov
push
js
into
fcmovu
xchg
sahf
xchg
push
jne
roll
std
and
xchg
jg
push
ja,pn
stc
leave
push
or
xor
inc
sub
mov
sbb
test
cld
nop
popf
xor
xor
push
fmul
push
cs
dec
mov
fnstsw
jmp
jmp
leave
dec
sub
imul
xor
adc
xchg
dec
mov
std
fstpt
and
pop
adc
imul
bound
jmp
cli
pop
in
lahf
mov
jle
ret
dec
sub
nop
jge
in
pop
sub
daa
repz
mov
lods
jg
xchg
rcrb
outsl
xchg
fsts
daa
mov
imul
cmpl
jg
es
sub
je
insb
icebp
push
sub
jns
mov
clc
test
sbb
inc
xchg
ret
push
and
lahf
cli
xchg
scas
dec
sub
cmp
pop
jb
cli
call
or
je
mov
pop
daa
shl
adc
or
imul
xchg
cmp
int3
mov
in
pop
out
enter
ds
cmpsb
out
xor
fsubl
xchg
lcall
dec
fidivs
in
lcall
dec
cmp
cmpsl
xor
adc
cli
aaa
jmp
imulb
cltd
in
insb
xor
jle
xchg
lds
std
lods
out
insl
ror
gs
int3
lcall
outsb
jmp
mov
jle
mov
leave
and
pop
test
loop
lahf
xchg
dec
outsl
cmpsb
daa
jecxz
xchg
jge
pop
jo
loopne
xor
mov
dec
mov
adc
lcall
cwtl
xchg
adc
and
aam
mov
inc
out
cmp
pop
and
int3
sub
rcll
fistl
aad
dec
nop
fwait
inc
shl
xchg
or
pop
mov
fwait
pop
xor
xor
loope
sub
cmp
lcall
inc
pop
ds
ja
dec
lret
nop
sbb
je
and
sbb
shld
test
cltd
sahf
xor
xor
sbb
or
into
loop
movsl
cs
mov
insb
jge
xor
dec
int
sbbl
movsb
adc
add
lock
add
jne
pop
inc
inc
orl
shlb
lods
insl
lcall
ja
lea
mov
or
adc
stos
nop
fmull
aad
fdivs
orb
dec
inc
aad
xor
fsubl
cmp
xlat
push
rcll
cmp
and
cld
mov
sbbl
sub
int
fildl
divb
mov
xor
shrl
ds
pop
mov
mov
imul
aas
scas
sub
test
std
data16
outsl
clc
adc
push
fbstp
adc
sub
icebp
cmpsl
inc
jp
aad
adc
mov
push
ficoms
addr16
mov
xchg
adcl
mov
mov
aad
xor
lds
sti
ret
jmp
add
push
clc
aaa
push
adc
pusha
dec
je
adc
jp
mov
mov
xchg
ja
pop
scas
and
add
and
leave
cmp
pop
mov
insl
jne
ret
mov
xlat
in
pusha
lods
sbb
popf
mov
sbb
loope
jbe
test
lods
jp
movsl
push
fwait
add
jo
mov
mov
jo
push
cmpsb
mov
pop
out
pop
inc
jg
data16
lret
stos
addr16
mov
mov
pop
mov
scas
cmp
xchg
pop
dec
and
sti
outsb
jne
push
cmpsb
mov
sbb
mov
fldl
mov
or
faddl
mov
jb
sub
xchg
push
xchg
inc
out
xchg
and
mov
iret
vpackuswb
xlat
lods
jbe
das
pop
cmp
loop
pop
mov
rorb
mov
and
int
or
test
jnp
and
sub
add
mov
int
pushf
sbb
dec
mov
lea
push
adc
stc
mov
dec
fwait
clc
int
cmpsb
in
cwtl
add
or
outsb
xchg
sahf
xor
push
mov
scas
jnp
fnstcw
mov
pop
test
in
in
std
dec
mov
mov
imul
jle
xor
out
jb
addr16
lods
mov
std
jne
push
daa
push
add
andl
mov
jle
sub
sbb
outsl
rcl
ljmp
add
or
mov
daa
push
add
lods
andb
sbb
dec
insl
mov
ds
push
data16
mov
cltd
movsb
dec
insb
es
jge,pn
pop
pop
xchg
cmpsb
cs
add
cld
jle
outsb
mov
or
mov
xchg
scas
inc
daa
and
fcmovb
jg
push
push
lods
push
mov
lea
push
dec
mov
lcall
shll
leave
test
das
andl
pop
jno
rol
imul
das
xchg
clc
push
push
push
test
in
fildll
push
or
jnp
iret
xchg
push
sahf
add
ds
push
and
inc
xor
push
or
fcomp
cld
adc
stos
out
mov
add
stc
jo
std
popa
xor
mov
dec
inc
or
pop
daa
insl
and
mov
test
stc
punpckhdq
mov
dec
cmp
mov
dec
insl
xchg
std
ss
or
mov
loop
adcb
pop
lahf
cld
inc
and
and
decl
lret
cmpsl
push
es
jmp
sbb
test
cld
leave
mov
adc
pop
mov
cltd
inc
ficoml
push
mov
xor
pop
or
mov
mov
test
aad
rolb
movsl
lock
movsb
xor
shrl
lret
inc
test
and
nop
int3
push
add
test
inc
data16
push
nop
lods
insl
or
add
pop
inc
ja
xor
push
add
jo
sbb
repnz
les
outsl
in
loop
js
or
add
xchg
dec
neg
je
mov
pop
jl
jns
movsb
fnstenv
lds
test
scas
int
mov
push
in
out
mov
jae
andb
cwtl
inc
rcrb
cmp
and
xchg
dec
mov
inc
test
fidivrl
in
mov
data16
pop
into
push
and
testl
les
bound
xchg
pushf
dec
dec
sarb
bound
pop
movsb
or
outsb
push
mov
cmp
or
and
xor
addr16
add
mov
idivl
fcomi
mov
xchg
outsb
sub
pop
sbb
iret
inc
dec
jl
pop
pop
push
dec
movsb
fadds
shrl
push
mov
cmpsl
jae
sub
dec
loop
push
push
adc
cld
inc
and
pusha
jg
xchg
jle
adc
sub
dec
dec
jnp
and
push
xchg
push
adc
jge
mov
xchg
and
jle
push
lcall
cmp
pop
sti
mov
adc
jne
leave
pop
test
mov
test
mov
dec
dec
cmp
sub
cmp
sbb
lods
jnp
daa
in
fstpl
push
sbb
loopne
jmp
xchg
roll
lea
fdivrs
mov
mov
ljmp
ss
test
lret
add
test
mov
mov
dec
insl
mov
or
jb
test
and
jle
adc
loopne
cmp
out
adc
jne,pn
fldl2t
pop
or
shrl
mov
or
push
mov
les
mov
lods
lods
and
cmp
inc
shlb
bound
orl
cmpsb
aam
inc
hlt
shrl
call
jo
xchg
mov
mov
mov
inc
pop
ja,pn
inc
mov
pushl
adc
push
fidivrs
pop
mov
cld
shrl
test
addr16
test
add
inc
in
popf
jge
inc
and
and
rol
cmp
jecxz
pop
dec
jge
rcr
fs
mov
jmp
dec
clc
inc
insl
sbb
jbe
lahf
jbe
in
sub
out
adc
pop
mov
mov
arpl
daa
xor
inc
inc
xchg
stos
push
cmp
sub
andl
cmp
gs
mov
mov
roll
dec
sub
outsb
ds
add
test
notl
cmp
js
test
rorl
ret
mov
insb
bound
insb
lock
nop
imul
fwait
cmpxchg
push
and
out
cmp
or
pop
dec
pop
lds
fisubl
add
xlat
scas
in
lods
clc
cld
sbb
dec
pop
pop
sti
outsl
fistpll
mov
sbb
adc
fmul
pusha
orl
mov
mov
add
jl
pop
fstl
dec
ds
testl
jb
fisubrl
mov
sti
inc
iret
popa
sarl
cli
mov
mov
loopne
leave
or
mov
jp
jge
xor
test
cmpsb
std
cmp
rorl
cmp
add
movsl
std
hlt
mov
xor
es
test
aam
mov
add
xlat
fnstcw
add
outsb
cmp
je
stos
cmc
inc
mov
dec
sub
mov
adc
jo
sbbl
or
rorb
lea
xchg
xor
dec
clc
dec
pop
dec
outsl
aam
bound
lea
xorb
sub
or
enter
out
repz
jecxz
flds
aad
pop
inc
fbstp
test
icebp
dec
add
pop
fisttpl
outsb
cwtl
or
hlt
rol
push
negl
shlb
xchg
test
jno
mov
bnd
and
loope
shl
les
aam
sub
popa
test
add
cvtdq2ps
cltd
mov
inc
dec
ljmp
cmc
into
fsubrs
xor
stc
sbb
jmp
pop
fstps
and
outsl
push
cmp
sub
xchg
xchg
xchg
jp
cs
stos
dec
sub
ret
out
out
jmp
stos
xorb
cmp
movsw
xorb
push
pop
lret
mov
rol
out
pop
mov
fwait
pop
push
and
add
ss
mov
ljmp
push
repnz
cmc
cs
sub
push
add
in
in
repnz
insb
mov
dec
xor
js
inc
sbb
push
push
in
xorb
pop
mov
inc
repz
shlb
add
imul
ret
lods
fcoml
sahf
xchg
dec
cmpsl
sub
dec
outsb
call
fsubrl
xor
lahf
loopne
xor
dec
push
push
jp
lret
jg
add
push
int3
or
mov
mov
mov
and
cs
movsb
popf
in
cmpsl
hlt
jnp
je
fdivrl
jnp
jmp
daa
xchg
daa
out
imul
out
mov
cmpsb
adc
mov
pop
mov
jge
push
pop
add
sub
sub
xor
or
sub
test
push
leave
push
aam
or
dec
int
cld
jecxz
mov
lea
mov
out
arpl
inc
stos
pop
popa
dec
js
and
loopne
mov
pop
add
push
jns
and
pop
fistps
push
loop
pop
mov
sbb
xor
mov
lahf
fs
jns
scas
inc
popa
dec
aad
push
arpl
jnp
jno
dec
add
std
xchg
es
in
push
pop
in
jne
dec
mov
cld
or
dec
fs
in
nop
jmp
mov
adc
mov
cmp
stos
lahf
scas
sti
orl
pop
mov
and
push
xor
add
jo
int
xor
inc
sbb
int3
aam
push
std
pop
ret
nop
cmp
aas
popf
inc
daa
lret
movsb
orl
sub
stc
pop
add
and
aaa
call
push
dec
shlb
aam
fisubrl
fidivrs
and
gs
cmpb
mov
adc
clc
mov
jg
pop
clc
dec
insl
nop
out
lret
test
push
pop
add
repz
mov
aam
repz
jg
nop
nop
and
int3
mov
lret
sub
gs
fs
or
sub
in
and
loopne
icebp
jmp
je
inc
pop
fldt
lods
insl
sbb
and
mov
jae
push
dec
data16
out
adcb
jns
mov
cmpsl
cmp
rorb
lds
pusha
jb
popf
push
dec
ss
mov
dec
test
push
mov
hlt
mov
mov
inc
mov
fstpt
mov
shlb
jne
arpl
int3
in
cmp
sahf
cmpsb
push
ja
iret
out
fucomip
stos
mov
sbb
xor
cmp
pop
or
lret
lods
inc
ds
xor
imul
cs
jge
cmp
lods
out
daa
outsb
jne
loop
dec
lret
mov
push
fildll
arpl
lods
xor
test
sub
mov
lods
cmp
xlat
stc
pop
xchg
xlat
outsl
cmc
cwtl
jg
mov
pop
cs
lret
mov
mov
jmp
pusha
push
xchg
stc
jg
lahf
hlt
into
mov
xchg
loopne
lock
loope
imul
out
repz
push
add
adc
add
or
mov
mov
aaa
ret
xchg
push
cmp
sbb
pop
fwait
sub
in
mov
lret
stos
pop
cmp
add
or
aas
mov
adc
scas
jno
stos
mov
mov
out
pop
rol
pop
dec
lods
jle
dec
dec
lcall
push
jg
stc
xchg
jno
neg
cmp
add
ret
addr16
adc
in
es
mov
mov
dec
pop
sub
scas
ljmp
fcompl
cmp
insb
div
mov
sub
mov
mov
jbe
aaa
lahf
mov
shl
or
mov
push
in
cmp
pop
fwait
mov
add
adc
leave
dec
ficoms
hlt
lods
nop
pusha
mov
xorl
imul
jmp
cld
inc
and
aaa
in
mov
imul
andl
xchg
in
pop
cmp
movsl
cltd
int3
dec
cmp
sub
insl
int3
mov
dec
mov
sub
fdivr
fwait
je
and
xlat
sbb
xor
cmpsl
mov
adc
xlat
sqrtps
shlb
sbb
or
icebp
repz
mov
dec
cmp
jmp
xor
push
std
xchg
scas
inc
outsl
fcmovnb
movsl
sbb
mov
loopne
add
and
jnp
xchg
and
mov
js
mov
loopne
jbe
scas
fidivs
push
in
mov
jg
inc
sub
add
pusha
mov
jbe
push
push
cmp
sbb
out
and
mov
mov
xchg
stos
arpl
cs
dec
sbb
pop
lcall
and
jo
sub
out
mov
push
xchg
out
push
cmp
test
test
xor
jmp
push
adc
stos
push
xchg
iret
pusha
inc
jb
outsb
int
cld
cmp
pop
in
rcrb
cmp
aam
pushf
jp
xor
shrb
sbb
or
xlat
in
pop
mov
pushf
sbb
pop
and
lods
jle
and
mov
gs
jp
add
lds
pop
push
cltd
out
call
mov
ja
testl
jne
in
mov
push
sub
mov
cmp
icebp
and
call
ljmp
xchg
pushf
pop
leave
adc
cmp
push
fs
xor
add
adc
add
or
add
call
loopne
cmp
pop
pop
fisubrl
inc
jecxz
bound
adc
and
hlt
imul
adc
push
sub
stc
mov
jg
jne
jp
lods
adc
add
add
stos
faddp
pop
clc
shrb
xor
int3
je
push
mov
fisubs
adc
loopne
movsl
adc
adc
imul
or
xchg
leave
pop
cmp
scas
mov
xor
push
inc
and
lahf
divl
cwtl
pop
cwtl
and
into
dec
addr16
mov
jnp
add
call
pop
mov
pop
les
push
cld
xor
test
test
or
in
aad
pop
cli
and
push
jbe
test
lock
fildll
mov
mov
std
ds
nop
in
mov
push
lods
pop
je
loope
insb
inc
cmp
jmp
cmp
inc
cmp
fs
sub
cmp
jp
stos
cmpsl
out
jb
into
mov
sbb
xchg
dec
sbb
xchg
repnz
fnsave
sub
sub
adc
mov
xchg
push
dec
push
out
pop
gs
cmp
test
pushf
out
adc
lea
std
test
pcmpgtw
pop
mov
mov
scas
add
xchg
lods
xor
lds
pusha
out
es
lods
mov
insl
cli
jp
andb
fmull
add
dec
pop
call
push
test
rcrb
and
insb
pop
add
lods
daa
lds
inc
popf
dec
data16
cmpsb
sahf
mov
imul
aam
mov
scas
sub
mov
lea
push
xchg
dec
popa
push
stos
sub
js
aas
or
fisubrs
shrl
test
cltd
mov
dec
inc
loope
fdiv
push
mov
cmp
push
subb
fstp
test
cmp
les
jge
out
sbb
pop
ja
cli
clc
fildll
add
jo
lcall
push
outsb
mov
cmp
adc
in
sbb
int3
xor
enter
test
std
xor
sbb
sbb
and
les
out
lcall
shrb
jp
pop
mov
divps
in
sub
popa
pop
dec
mov
int
push
xor
jmp
je
cmp
sbb
ret
jae
push
nop
pushf
call
loop
push
push
cmp
adc
test
aad
dec
jle
jbe
or
popa
aam
cmpsb
pop
outsb
repnz
popl
sbb
cwtl
dec
xchg
in
mov
test
shlb
xor
or
jnp
les
sub
cwtl
xchg
mov
and
xchg
pop
fwait
push
js
add
or
xlat
mov
pop
jns
push
dec
andb
mov
sub
mov
push
cld
leave
ss
in
test
cmp
xchg
adc
mov
andl
push
sbb
mov
mov
mov
push
jecxz
pop
cld
jbe
cmc
enter
dec
pop
jecxz
shrl
jb
insl
sub
sbb
in
fcmovb
in
icebp
sbb
dec
mov
fs
call
cmp
rorl
add
enter
cmp
push
call
bound
stc
push
clc
insl
jae
pop
lret
inc
cli
dec
sbb
aam
insb
arpl
imul
outsl
dec
out
inc
sub
mov
add
dec
iret
dec
imull
mov
inc
lds
xchg
int3
jne
iret
addr16
mov
cmp
mov
adc
jg
pop
push
xchg
inc
mov
jns
ljmp
push
outsb
pop
cmp
push
mov
mov
cmp
inc
out
stos
imul
cmc
push
subl
test
xchg
cs
cmpsl
repz
mov
push
xchg
mov
pop
andb
jne
and
lret
xor
scas
jle
cs
inc
nop
cmc
push
push
pushf
push
xor
and
adc
mov
jmp
sbb
cld
mov
insb
dec
mov
sub
push
mov
xchg
sub
ja
scas
mul
xchg
sub
adc
xchg
fs
cmp
data16
jnp
lcall
fidivs
js
mov
push
inc
pushf
xchg
scas
inc
mov
jno
xor
aad
stc
fistps
shlb
dec
xchg
mov
aaa
xor
sub
xchg
imul
outsb
mov
outsb
mov
test
dec
mov
les
add
mov
xchg
popa
dec
daa
fcos
dec
mov
jne
cmp
lock
fldcw
je
mov
sti
sbbl
push
jnp,pt
aaa
cmpsb
push
loopne
stos
or
roll
lods
mov
test
push
cmp
mov
into
or
sub
cli
jmp
cmpb
ljmp
lsl
or
sti
popf
fdivrl
cmpb
add
pop
out
lahf
jmp
pop
adc
adc
pop
sbb
xchg
inc
sbb
mov
add
iret
jl
xor
or
js
sarb
fsubrs
push
sbb
cli
fsubrl
lea
aas
and
mov
or
dec
in
stos
cmp
popf
les
loope
leave
movsl
dec
mov
fwait
xchg
std
xor
sahf
jns
outsl
repz
mov
dec
out
lods
popa
cmp
ret
sub
and
pop
pop
mull
dec
fidivs
xchg
es
push
push
sar
or
int
adc
das
call
cmc
xchg
jbe
mov
sbb
addb
fcmovnu
jecxz
enter
pushw
out
add
cmp
dec
mov
mov
inc
in
into
out
inc
nop
inc
loope
adc
cmpsl
push
setb
and
xlat
cmp
outsb
lahf
dec
dec
aaa
mov
fimuls
cmp
push
fldenv
ret
adc
add
lret
or
addr16
mov
stc
sbb
aam
mov
xor
pop
adc
out
xchg
test
mov
xchg
xchg
mov
in
mov
mov
shll
data16
cmp
push
cmp
push
jle
dec
mov
jns
inc
ljmp
xchg
add
enter
fisubl
lcall
pop
cli
mov
leave
js
je
fsubrs
stos
mov
mov
jo
cmp
test
mov
mov
pop
ss
mov
or
xor
sub
mov
add
mov
out
push
sahf
sti
lahf
inc
mov
add
or
xlat
cmp
jmp
adc
ja
icebp
add
mov
test
push
jne
imul
iret
jo
pop
bound
hlt
adc
inc
sti
call
mov
daa
or
push
cmc
cld
stc
push
ret
sub
pop
mov
fcompl
xchg
jno
jle
adc
mov
lods
scas
int
fdivs
mov
pop
cmp
stos
mov
punpckldq
js
into
xchg
dec
in
push
dec
cmp
pop
fsub
cmp
negb
jne
mov
leave
mov
lahf
cwtl
int3
mov
inc
mov
pop
inc
mov
jp
cmp
mov
test
jl
mov
mov
xor
sub
or
mov
push
fistl
mov
addb
sbb
add
or
loop
enter
push
les
or
std
mov
ficomps
loope
pop
mov
adc
pop
add
repnz
mov
push
sub
stos
mov
xchg
stc
in
fidivl
mov
fmull
inc
stos
pop
sahf
cmp
push
push
xchg
pushf
lods
add
in
and
insb
push
push
push
cmpsb
sub
cmpsb
lret
addr16
cmp
cld
xchg
scas
rorb
mov
mov
and
adc
or
inc
mov
and
xor
shlb
inc
es
vhsubps
cmpsl
mov
push
fwait
loopne
out
pusha
ret
stos
cmp
rorl
leave
cmp
push
shrl
or
test
aad
scas
iret
sbb
add
js
sub
test
pushf
repnz
imul
dec
jo
pop
xchg
subl
fdivs
ja
cmc
cmp
fs
or
dec
add
pop
movsb
sbb
xor
imul
mov
stos
shrb
fstpl
aam
clc
xor
push
test
and
icebp
push
adc
push
mov
and
bound
and
sub
sub
ficomps
js
js
jecxz
dec
sbb
ljmp
dec
lods
xchg
jo
cmp
insl
and
stos
pop
jecxz
cmp
sbb
jmp
mov
cmpsb
js
mov
mov
int
lds
push
jge
push
incl
popa
adc
js
mov
sbb
flds
and
cs
add
icebp
sti
lods
sbb
mov
aad
push
dec
inc
mov
adc
mov
ljmp
fistps
mov
ja
jecxz
jmp
mov
in
cmpsl
imul
pop
leave
pop
pop
jl
aaa
adc
dec
jecxz
jl
popa
mov
cmpsb
mov
xchg
rol
xor
push
dec
sarl
mov
bts
push
mov
pop
mov
adc
xchg
mov
fsubrl
ss
and
dec
sub
adc
mov
out
xchg
bound
in
lcall
adc
or
mov
stc
add
xchg
push
cmp
flds
push
ljmp
adc
lret
in
xor
mov
dec
mov
push
pop
xor
mov
or
sbb
push
mov
xorl
adc
cmp
adc
lahf
mov
out
ss
lcall
adc
mov
roll
sub
pop
pop
pop
out
inc
adc
rcrb
and
xchg
dec
cmpsb
jge
sbb
mov
push
xor
add
xlat
das
das
fstps
jne
inc
sti
rclb
sbb
iret
or
nop
inc
inc
add
lds
pavgw
jne
pop
pop
pop
jmp
repnz
popa
push
int3
pop
enter
leave
shl
mov
lock
notb
mov
sarl
cmp
pop
mov
mov
call
jb
pusha
pop
mov
test
pop
mov
fldcw
cmpsl
and
mov
stos
and
or
xchg
sbb
mov
arpl
sbb
add
mov
lods
mov
enter
mov
imul
push
cmp
scas
xor
and
pop
ret
dec
dec
jecxz
push
mov
aad
aaa
data16
inc
das
jbe
jge
inc
mov
je
dec
dec
push
pop
and
es
rorl
mov
std
push
mov
add
outsl
jb
loope
mov
mov
xor
imul
xchg
sub
outsl
cmpsl
ja
jae
stos
fnsave
mov
pop
xchg
imul
mov
dec
mov
xchg
sbb
in
in
sub
adc
pop
fisttpll
cwtl
xor
adc
pop
xor
dec
push
xor
inc
mov
test
add
mov
pop
ss
arpl
push
jb
push
and
mov
shl
dec
xchg
ja
mov
icebp
lds
lods
lcall
add
pop
dec
add
pop
adc
pop
or
ret
outsl
mov
stc
push
ret
test
stos
cli
cmp
cmp
int3
mov
pop
imul
sub
mov
mov
sub
cmp
mov
rcr
aad
xchg
xchg
push
js
adc
push
jg
lahf
in
popa
outsb
test
sub
push
or
push
push
ret
cmp
pop
add
inc
adc
fdivl
sbb
cwtl
xchg
lds
scas
out
mov
sub
pop
cltd
sbb
mov
and
push
js
mulb
jl
mov
pop
ret
inc
mov
mov
fucom
and
pop
xchg
sarl
mov
mov
or
loopne
xlat
mov
fisttpll
mov
hlt
cs
lret
push
std
xor
mov
mov
loope
iret
lods
aam
or
insl
outsl
mov
jnp
inc
enter
test
jnp
add
int
or
vmulsd
imull
cli
push
adc
mov
pop
inc
ficoms
mov
dec
outsl
inc
lea
inc
inc
lcall
enter
inc
ss
jp
add
sub
dec
test
loop
lahf
xchg
movsl
mull
fs
dec
sbb
xchg
or
cltd
dec
adc
dec
int
sub
or
mov
ss
nop
aaa
loop
dec
lret
std
mov
in
aam
inc
inc
ss
xorl
lret
xchg
push
sbb
fistps
cmp
cli
outsl
fwait
imul
mov
dec
testb
mov
mov
dec
cmpsl
imul
pop
rcll
xchg
jns
lcall
mov
xchg
int3
stos
lahf
dec
mov
daa
push
lods
and
pop
fs
shlb
stos
aam
jle
mov
mov
cmp
subb
mov
jecxz
push
daa
pop
mov
dec
addl
and
push
stc
mov
in
sbb
dec
in
outsb
clc
out
jb
xchg
add
bound
lods
popf
loop
iret
lock
pop
out
call
sbb
jo
adc
daa
pop
std
xor
ds
cli
push
rcr
es
pusha
xchg
and
jno
les
loopne
lret
adc
mov
mov
add
adc
sti
and
imul
mov
int
scas
mov
sbb
out
lods
lods
mov
aaa
push
mov
inc
fwait
mov
divb
addr16
mov
pop
stc
test
pop
push
sbb
sub
lret
pop
or
stc
in
cmp
xchg
xor
push
and
and
fs
xor
xor
push
fisubs
jne
mov
push
push
mov
cwtl
or
pop
mov
out
inc
xor
mov
imul
inc
gs
fsubr
xchg
pusha
pop
shrl
dec
icebp
les
std
ret
sbb
cld
jmp
jmp
adc
xchg
jne
mov
ja
xor
not
popf
cmc
fmull
and
insl
ljmp
negl
sub
out
daa
jno
mov
stc
jecxz
sub
sub
fnstsw
inc
and
mov
dec
fcmovu
xor
mov
aad
js
mov
andb
adc
jecxz
movb
push
ja
cmp
dec
outsb
sub
iret
cltd
adc
push
fcoms
scas
out
sub
sbb
daa
idivb
xor
arpl
sbb
sahf
xchg
dec
dec
add
cld
imulb
and
arpl
or
mov
pop
sub
bound
xor
mov
sbb
xor
fnstenv
sti
cmc
cmc
mov
fmull
les
test
cmc
gs
add
push
push
outsl
jp
fisubrl
mull
push
dec
lods
movsl
dec
mov
pop
jo
es
mov
jns
mov
jne
xor
fcompl
adc
or
pusha
addr16
adc
fldcw
push
jns
scas
push
mov
les
popl
mov
enter
mov
jmp
test
dec
scas
pop
cwtl
loop
push
xor
pop
inc
push
js
cli
xchg
and
jmp
dec
add
mov
ret
and
sbb
enter
repz
add
jp
adc
lds
lds
push
mov
sbb
fnstsw
jl
sub
cmp
push
xor
cs
lock
dec
add
jl
cmp
adc
aam
ja
sbb
sub
dec
cwtl
test
xchg
xchg
scas
push
test
xchg
add
dec
inc
pop
sub
push
mov
aam
mov
sub
adc
je
push
std
mov
sbb
lock
xchg
mov
fwait
dec
jae
add
mov
jmp
sarl
pushl
int
jae
jmp
add
adc
bnd
cli
cmp
repnz
push
mov
adc
mov
mov
cld
test
jp
push
enter
add
adc
jae
jae
push
cmp
pop
cmpb
adc
dec
and
adc
xacquire
ret
shrb
cli
inc
jno
pop
cmc
stos
sbb
xchg
push
aam
addl
cmp
mov
aas
pop
jns
jo
cs
cmpsl
arpl
cmpsl
jle
pop
cmp
or
jnp
mov
ljmp
adc
cmpsl
sub
out
incl
cmpsl
cld
pop
bound
push
dec
jecxz
mov
lds
nop
loope
lret
or
cmp
mov
in
es
orl
daa
fildll
jmp
jle
scas
sbb
cmp
jg
adc
jnp
xor
lea
dec
faddl
lock
cmp
lea
push
sbb
cs
in
aam
fmull
mov
dec
or
sub
popf
sub
sbb
or
outsb
jae
and
fisubs
sahf
cmp
stos
add
ja
pop
fdivr
fdivl
pop
sbb
jmp
inc
frstor
xor
sub
jnp
pop
outsl
rolb
xchg
jmp
xchg
mov
test
gs
adc
test
push
leave
sbb
fildll
xchg
pop
lahf
roll
push
add
divb
push
inc
push
ss
int3
inc
mov
cmp
lcall
dec
jle
insb
negb
scas
mov
addr16
xchg
push
push
mov
mov
push
hlt
adc
adc
and
adc
mov
sub
lods
mov
cs
sbb
mov
adc
cwtl
rcrb
incb
insl
xor
inc
loope
popa
das
mov
pop
outsl
push
roll
sub
es
or
sbb
sti
addr16
bound
inc
mov
push
jl
sbb
dec
and
movl
mov
fimull
and
arpl
test
scas
mov
sarl
mov
mov
aaa
jecxz
sbb
loope
fstpt
jae
sub
jnp
std
and
cmp
cwtl
jmp
aas
in
imul
in
sti
add
mov
ja
leave
jns
scas
mov
push
push
jmp
jns
hlt
jae
jmp
ret
stc
or
sbb
fcoms
subb
sar
lods
push
sahf
mov
xor
sti
jmp
aas
jge
cmp
mov
fld1
dec
fwait
mov
jge
cmp
arpl
push
fisubl
inc
jns
or
in
mov
out
mov
xor
sarb
iret
hlt
cmp
or
and
rolb
popf
xchg
stc
push
cmp
ja
mov
jo
dec
xchg
mul
pushf
sbb
mov
push
mov
movsb
mov
dec
inc
lcall
aad
sarw
push
dec
cmp
push
ds
pop
call
pusha
insl
xchg
pop
dec
pop
push
or
sub
fstp
imul
mov
cmp
push
mov
inc
call
cmp
cmpl
sbb
mov
adc
xchg
mov
divl
sbb
addr16
sub
push
pop
loope
stos
test
jno
mov
add
fs
mov
jmp
mov
push
and
jp
cmp
loopne
sub
enter
aas
jl
cmp
sub
imul
sarb
mov
cwtl
pop
mov
dec
jg
cmc
mov
stos
mov
xor
mov
mov
sub
sbb
add
cmp
add
xor
xchg
sub
into
loop
mov
mov
scas
test
cmpsl
movsb
sbb
test
dec
sbbl
daa
xlat
aaa
ja
xchg
and
pop
mov
lds
andl
xlat
add
sahf
mov
mov
repnz
lods
xor
push
out
push
push
add
das
cs
icebp
aas
inc
or
adcl
adc
icebp
sub
in
repz
sbb
das
mov
mov
adc
cmp
cwtl
pushf
jo
cmpsb
xchg
sbb
notb
mov
jmp
test
subb
pop
fsubrs
adc
mov
lds
clc
testb
push
dec
lds
in
jnp
jg
int
fwait
es
js
cwtl
sub
dec
push
inc
aas
sbb
insb
es
call
iret
ficoms
stos
lret
daa
mov
dec
adc
xor
lods
ret
push
bound
js
sbb
lock
push
xchg
dec
std
popf
cs
lcall
push
ss
test
test
mov
adc
sub
ret
inc
test
mov
cmp
insl
subl
pop
mov
jno
and
ja
jno
iret
mov
lds
dec
push
aas
std
cmpsl
jne
test
stc
sbb
push
fstps
rep
xchg
dec
sub
out
add
xchg
jle
sbb
jo
ljmp
adc
movsb
sarb
clc
sbb
mov
mov
sub
cli
fcom
not
cmp
xchg
jmp
cmp
into
cmp
push
xchg
and
out
xchg
dec
mov
and
shl
int
repz
pop
cmpsb
pop
ja
mov
sahf
stc
nop
loope
xchg
xor
sub
pop
mulb
lods
gs
and
sub
xchg
fsubs
fldt
and
arpl
inc
ds
dec
lcall
aad
dec
repnz
in
fs
andb
mov
in
mov
jbe
mov
xchg
mov
test
pop
cld
push
jl
add
or
push
xor
or
test
push
jb
push
adc
cli
add
jecxz
ret
xor
lea
pop
jg
and
lcall
ss
ret
test
mov
adc
xchg
xchg
loopne
jmp
xchg
and
cmpsl
insl
mov
pop
bound
pop
mov
movsb
fiaddl
jge
adc
into
mov
fsubp
loop
and
jne
xor
xor
sub
push
sub
sti
out
pop
and
test
sbb
bsf
xchg
xchg
jl
cmp
pop
test
mov
inc
pop
pop
mov
mov
push
sub
addr16
aad
divb
jmp
xlat
les
lods
jne
dec
int
adc
mov
flds
iret
subb
mov
test
clc
sub
into
pop
leave
imul
jae
rclb
pusha
ss
fsts
push
push
pop
pop
shlb
lds
movsb
pop
and
out
inc
add
mov
inc
mov
mov
push
rcl
clc
jmp
push
push
push
movsb
loope
test
push
dec
and
test
xchg
xor
pop
jbe
ucomiss
popa
and
int
xchg
fdivrs
sbb
aad
arpl
push
movsl
jbe
cmp
push
push
out
outsl
enter
jmp
je
xor
jmp
inc
sbb
test
imul
bound
pop
add
adc
xor
fistpl
or
adc
xchg
sbb
mov
faddl
ja
test
cmpsb
inc
sbb
and
mov
and
mulb
ror
adc
imul
mull
aaa
sti
pop
mov
call
fmull
out
lds
cmp
rorl
mov
and
xchg
pop
out
mov
jmp
cld
jns
mov
sarl
loope
push
jbe
test
add
mov
and
addr16
sbb
adc
bound
adc
pop
adc
mov
lahf
xchg
pop
jl
mov
push
clc
lods
sub
add
daa
xlat
sub
andb
xor
xchg
in
mov
xchg
lds
push
mov
out
push
int
xor
pop
mov
imul
pop
pushl
inc
loopne
jne
jo
mov
jmp
iret
mov
shrb
ljmp
scas
push
movsb
mov
cmp
daa
and
inc
sub
ror
pop
dec
pop
cld
test
dec
adc
into
clc
sub
stos
xchg
out
pop
jge
jnp
pop
stos
daa
add
and
inc
adc
push
xchg
sub
cmc
orl
loope
push
addr16
xchg
jp
xchg
aam
dec
daa
mov
sub
push
nop
mov
xor
lock
pop
pop
dec
repz
and
mov
push
xchg
jnp
adc
out
xor
mov
inc
outsb
fwait
mov
and
sbb
mov
cmp
enter
dec
scas
sub
mov
in
shlb
dec
cltd
sub
cs
xor
ds
mov
mov
outsb
or
imul
sub
push
dec
cs
and
jns
mov
pushf
roll
lods
mov
mov
cmp
xchg
loop
test
pop
out
jb
jg
cld
int
xchg
sarb
add
mov
flds
jb
gs
jne
or
mov
mov
pusha
jno
scas
std
pusha
mov
es
pop
mov
out
push
sbb
rclb
and
xchg
push
fwait
xchg
sti
xrelease
daa
jecxz
add
aam
pop
das
jne
mov
inc
in
ljmp
negb
add
jno
pop
insl
rorl
pop
push
mov
lea
mov
jno
ficoms
mov
mov
mov
xlat
lcall
lret
icebp
xchg
jnp
int
mov
stos
xor
mull
jae
daa
sbb
les
jne
jns
dec
jbe
add
and
out
push
iret
or
fwait
pop
lock
out
aam
mov
insb
xchg
xchg
out
jle
ret
fisubl
sbb
dec
inc
mov
std
inc
mov
mov
mov
imul
inc
data16
and
and
and
bound
stos
mov
inc
iret
add
rolb
and
mov
jmp
imul
test
mov
pop
rorb
cs
addb
stos
ret
mov
mov
add
mov
stos
test
insl
xlat
cmc
ja
dec
push
scas
popf
cld
fidivs
and
dec
shlb
or
add
mov
mov
shr
mov
fbstp
inc
xchg
stos
repz
ja
aad
lret
adc
inc
lret
adc
adc
rorb
leave
repz
js
imul
stos
mov
cmp
stc
frstor
add
cmp
xor
and
xchg
jmp
xchg
adc
pop
mov
dec
outsl
mul
cmp
call
inc
dec
inc
mull
lea
ret
outsb
pop
pop
bound
loope
or
jae
test
inc
xchg
std
xchg
ss
imul
fs
adc
mov
daa
dec
jnp
mov
mov
jno
mov
jns
inc
test
lahf
sti
xchg
pop
xor
xchg
or
push
inc
mulb
pop
mov
sub
cltd
xchg
popf
add
shll
mov
into
sub
jle
mov
stos
in
pop
cmp
inc
xchg
lret
stos
les
repz
fwait
mov
jge
mov
mov
aam
cwtl
loope
cli
jmp
mov
jns
xchg
pop
das
lods
xor
dec
rorl
inc
mov
out
push
and
push
call
pop
dec
testb
pop
mov
sub
xchg
popa
aad
mov
mov
jle
in
leave
sbb
scas
mov
xchg
icebp
or
xor
push
fwait
add
or
pop
inc
sbb
xor
sarb
xor
xchg
sub
stos
mov
jmp
mov
jo
repz
sub
je
in
int
in
xor
xor
shrb
movsl
pop
imul
add
test
gs
xchg
xor
fdivs
test
cli
inc
sti
jp
test
lret
push
mov
push
stos
xchg
insb
inc
lret
lds
jbe
jbe
xor
sbb
adc
fs
pop
cmp
out
sub
out
pop
test
mov
add
fs
xor
pop
add
mov
into
popw
je
cmpsb
jnp
shll
sbb
mov
lea
iret
mov
test
mov
jge
iret
push
jno
popa
cmp
xor
loope
in
testl
lahf
unpckhps
adc
insb
idivl
out
inc
xor
stos
loop
sbb
and
jnp
add
ret
pop
jne
mov
pop
leave
pop
sub
lcall
xor
jno
xchg
cmp
js
sahf
xchg
addr16
les
mov
or
or
add
xchg
xchg
js
add
xchg
cmpsl
dec
imul
jns
les
push
sbb
pop
cld
test
ret
sti
aad
dec
das
lods
mov
gs
popf
sarl
xchg
mov
mov
shll
fidivs
repz
int3
push
xlat
popf
adc
xor
mov
push
xadd
or
pop
psubsw
cmc
das
pop
bound
sbb
mov
jnp
divl
pop
aas
lret
jl
inc
pop
xchg
outsl
mov
scas
scas
in
insb
sub
and
xor
test
inc
xchg
push
popa
sarl
mov
mov
lock
sub
mov
insb
iret
or
js
out
loopne
jp
mov
xchg
fbstp
ds
mov
fisttps
div
fists
sbb
test
jle
test
xchg
mov
xor
movsl
mov
xor
pop
aas
adc
mov
xor
into
mov
ret
and
bound
scas
and
xlat
or
loope
adc
ret
ret
enter
add
cmpsb
repz
mov
xchg
pop
lea
add
fldenv
sar
ljmp
jae
xchg
xchg
je
adcl
dec
and
cmp
xorb
mov
push
jb
hlt
ljmp
cmp
dec
mov
int3
fsubp
xchg
std
out
rcll
sub
std
out
pop
cld
fsubrl
sbb
xor
mov
lret
jb
out
divl
jne
rolb
mov
scas
sub
lret
mov
fistps
fsubl
test
orl
lahf
repz
sbb
and
inc
lcall
int3
sub
jl
sub
call
cmpsb
addr16
jbe
cltd
fsubrs
xchg
jecxz
stos
sub
fildl
jg
aam
shlb
cmpsb
pop
or
xchg
lock
sub
sub
sub
daa
push
loop
les
pusha
in
push
out
negb
push
sub
pop
mov
xchg
leave
xchg
iret
lret
sub
das
inc
inc
pop
add
sbb
adc
outsb
pop
mov
xchg
jp
clc
mov
lea
popf
inc
shrl
xchg
loope
das
insl
mov
adc
push
ret
pop
jno
sub
fwait
ljmp
out
test
lods
cs
in
cltd
fidivrs
out
or
push
mov
sbb
dec
scas
push
mov
pop
mov
outsl
cmpsb
xchg
aaa
aad
loopne
push
rcl
add
sub
roll
call
rcrl
jno
imulb
and
add
mov
mov
movsl
mov
pop
mov
aas
cmp
outsl
mov
xorb
divb
andb
pushf
rol
cli
push
in
mov
xor
inc
sub
sbb
jl
in
xor
sahf
or
lods
outsb
out
in
dec
pusha
stos
inc
add
xchg
aam
xlat
and
out
inc
cmc
mov
ljmp
inc
dec
in
inc
cmp
xchg
mov
mov
in
mov
popa
inc
inc
je
add
repnz
cmp
xchg
and
shll
aam
stos
or
mov
insl
xor
les
pop
pop
insb
xor
mov
idivb
mov
mov
je
ret
jno
repnz
cmpsl
inc
popa
adc
xchg
lret
xor
lcall
out
jb
jl
movsl
sbb
sti
mov
mov
jge
and
flds
inc
mov
rcl
inc
mov
bound
sbb
rorl
xor
aad
xor
call
sub
xchg
mov
add
pop
adc
popf
xchg
fbstp
pop
push
push
dec
dec
mov
jmp
mov
xor
je
pop
cmpsb
sbb
mov
lods
ja
cmpsb
stos
stc
cmp
in
and
xor
lcall
lret
add
mov
jne
shll
lock
sbb
subb
icebp
fimull
mov
jb
cmp
adc
ret
fldcw
push
jb
fstps
sbb
adcl
mov
in
push
int3
nop
xchg
rolb
sbb
xor
ljmp
divl
jo
es
loope
sbbl
jl
daa
adc
cli
scas
mov
or
notl
push
adc
out
pop
sbb
and
movsl
les
fldl
rorb
xlat
insl
cmp
shrl
mov
add
pop
cmpsb
xchg
add
inc
or
insl
iret
fnstcw
mov
adc
xchg
fcoms
xchg
xor
push
popf
mov
xor
outsb
push
mov
pop
jo
add
andb
inc
int
stos
popf
xor
mov
wrmsr
xchg
inc
mov
out
xor
sbb
leave
cmp
push
nop
sbb
mov
mov
mov
adc
sarl
pop
dec
adc
add
roll
es
add
cmpsl
pop
insl
sbb
or
jo
pop
xor
cltd
js
ret
mov
pop
test
cmp
mov
mov
inc
push
ja
movsb
and
ror
push
push
mov
sbb
ljmp
add
jle
idiv
sbb
jp
ss
mov
xor
xchg
ljmp
mov
jge
mov
lret
and
in
test
cmp
sbb
sub
jmp
jae
push
nop
add
mov
mov
rcrl
scas
xor
popa
mov
mov
test
enter
mov
push
imulb
or
pop
cmp
xor
lods
inc
push
pop
sbb
xor
shlb
dec
repz
inc
daa
jmp
mov
jb
cmpsb
add
outsl
pop
mov
ss
add
pop
rorl
add
addr16
lcall
inc
add
inc
sbb
aam
jae
lock
xchg
xchg
adc
test
sbb
das
pusha
pop
xchg
std
sar
jge
or
fcoms
and
movsl
cmpsl
out
insb
cmc
jg
in
cmp
xchg
iret
call
sub
or
mov
jecxz
pop
rcll
jmp
cltd
mov
dec
movsb
ss
add
pop
aam
inc
dec
push
jo
imul
pushf
and
jg
add
mov
pusha
pop
xor
cmp
mov
dec
aad
xor
lahf
es
hlt
scas
insl
jp
inc
mov
cld
sub
pop
adc
xor
sbb
punpckldq
xchg
shld
jmp
and
add
aas
xor
xchg
ficomps
ficomps
and
push
push
mov
jmp
dec
jl
or
lods
pop
adc
int3
lahf
dec
scas
mov
out
and
loopne
adc
lods
push
push
inc
rol
lods
sub
mov
cmpl
imul
cmp
std
add
std
out
cmp
lds
ds
add
inc
in
jmp
sbb
mov
xor
and
jmp
push
dec
aad
push
pop
sub
mov
or
mov
and
repz
loopne
fnstenv
xlat
lret
inc
movb
push
push
push
or
or
mov
sbb
inc
into
push
jmp
into
ficomps
pop
mov
arpl
and
xor
pop
jnp
inc
mull
popa
jecxz
adc
fwait
jecxz
pushf
mov
jb
jne
inc
jl
ljmp
push
arpl
add
popf
lea
dec
int
push
lds
test
loopne
jp
mov
lods
mov
and
cld
fsubrs
shr
stos
jl
adc
inc
mov
loop
xchg
inc
inc
push
add
add
cmp
sbb
adc
scas
test
mov
movsb
rcr
pushf
mov
push
xor
outsl
and
test
lret
push
mov
mov
xchg
into
enter
pusha
test
xlat
cmp
mov
sub
adc
imul
cwtl
filds
jl
pop
sbb
cmpsl
xchg
mov
or
mov
adc
sub
movsl
pop
outsl
fisubl
mov
fsubs
mov
icebp
fstpl
mov
arpl
out
mov
outsb
adc
popf
in
repnz
push
cmp
mov
mov
aad
lret
jmp
shll
stc
lods
mov
and
fadds
dec
cmp
adc
xor
cmp
and
movsb
int
inc
sub
adc
or
dec
sub
std
sub
adc
push
scas
push
add
lods
pop
xor
push
dec
xchg
imul
pop
push
add
in
cltd
pop
fwait
stc
cmp
mov
loop
xchg
std
jmp
ror
cmp
cmpsl
mov
movl
pop
hlt
jno
push
call
jg
fldcw
out
xor
xor
js
sub
fnstenvs
lret
loopne
mov
jecxz
scas
aam
mov
sub
xor
cli
xlat
addr16
ret
pushf
or
sub
and
pop
dec
mov
push
dec
les
arpl
adc
iret
gs
push
lea
mov
jg
pop
lcall
into
std
aas
mov
jo
subb
cli
xor
push
data16
jae
push
adc
jg
les
outsb
clc
sub
hlt
adc
ja
pop
xor
stos
repnz
int
fsubr
inc
sub
mov
das
xchg
jo
and
frstor
dec
fwait
cmp
xchg
fcomp
test
inc
das
mov
jle
in
dec
sbb
xchg
pop
mov
outsl
add
jecxz
aaa
add
es
jo
cmp
xchg
shrl
inc
stc
push
or
push
add
repz
and
sub
pop
push
out
andb
mov
push
pushf
mov
dec
mov
aaa
cli
daa
imul
add
mov
add
inc
mov
sub
cmpsl
stc
mov
jns
cli
insl
popa
add
mov
addl
mov
inc
ds
std
xor
cmp
or
cmp
stc
sbb
mov
pop
cltd
in
pop
das
icebp
adcl
pop
mov
add
daa
xor
mov
inc
push
loopne
mov
lret
mov
inc
aas
mov
inc
imul
mov
enter
push
push
xchg
jmp
inc
mov
imul
loop
xor
lds
sbb
pop
pop
inc
notl
cmp
fistpl
dec
sub
mov
push
out
mov
mov
dec
pop
xor
aad
fadds
xchg
xchg
pop
aam
icebp
sbb
popa
aas
pop
in
addr16
add
jl
sbb
gs
xchg
cltd
push
clc
sbb
in
sub
add
xchg
outsb
push
inc
adc
xchg
outsl
cld
movsb
jns
pushf
jns
cmc
and
adc
pop
push
lret
xchg
out
ljmp
pop
outsb
mov
cli
push
int
pop
fcmovnbe
sbb
jno
in
push
and
pop
jo
out
jp
jp
inc
pop
push
mov
fdivrp
and
push
enter
pop
sub
or
pop
pop
cs
ds
std
sub
lret
mov
data16
mov
enter
pusha
pop
bound
inc
mov
test
mov
ret
mov
dec
sbb
push
push
jae
mov
pusha
iret
repz
xor
insl
mov
sub
inc
pusha
lds
or
movd
or
div
inc
aam
adc
pushf
dec
fistpl
pushf
in
inc
mov
push
stc
pop
lea
mov
and
repnz
jmp
fcomi
mov
idivb
ret
test
fcompl
lret
xor
sahf
lods
outsl
dec
xor
sbb
and
out
out
in
loope
bound
mov
or
cmc
adc
mov
aad
xchg
out
cmp
imul
scas
or
js
clc
out
test
jnp
add
jae
pusha
daa
cmp
xor
loopne
inc
xchg
mov
popf
ret
hlt
mov
push
jmp
and
and
nop
mov
je
xchg
stos
and
in
mov
in
jg
xorl
pop
sbb
icebp
dec
inc
aaa
movsl
sti
pop
jo
loope
rclb
fsubrl
hlt
pop
sub
sbbb
fisubl
inc
or
push
add
jno
sbbl
nop
stc
mov
jo
push
lahf
pop
inc
mov
cmp
pop
adc
enter
test
jne
cmc
scas
leave
add
cmpsl
lret
adc
cmp
push
pop
cmp
and
inc
push
jge
pop
adc
mov
out
sub
test
test
sbb
add
push
mov
and
push
imul
mov
cmp
add
push
insl
mov
pusha
sbb
or
or
stc
ror
add
and
mov
sbb
arpl
lret
rorl
inc
xchg
fisubs
das
dec
call
adc
xlat
pop
stos
cmp
dec
mov
lods
fldl2t
push
dec
mov
xchg
in
movsb
outsb
inc
sbb
inc
xorb
sub
cltd
mov
daa
movsb
lods
test
push
jb
push
or
test
pushf
les
xchg
sbb
fs
jo
out
jecxz
xchg
lods
movsl
fstps
mov
imul
jo
out
jnp
cmpsl
mov
mov
mov
into
ret
xor
sbb
jns
and
stos
das
out
cmp
dec
mov
pop
jne
xchg
pop
mov
movl
lahf
scas
je
scas
inc
lret
inc
adc
xor
adc
sti
xchg
jo
or
lcall
mul
mov
icebp
pop
ud1
inc
in
int
mov
movsl
ja
mov
or
sbb
enter
mov
cli
push
push
aam
loopne
in
shrb
push
cmc
jmp
in
test
dec
scas
cs
sbb
xor
push
dec
popa
cmp
and
enter
xchg
adc
xchg
jne
movsb
lret
inc
push
cmp
sub
arpl
cli
mov
movsl
mov
cmpsl
jo
adcb
xor
rolb
push
cmp
and
jge
stos
outsl
xchg
push
cmp
or
repz
push
dec
sbb
cltd
lahf
mov
and
movl
insl
fadds
add
pop
cmp
xlat
push
mov
xor
es
jae
lods
fsts
xchg
push
sbb
aad
inc
cmp
mov
out
sti
cmp
push
inc
ss
push
jp
enter
mov
mov
and
adc
adc
cmp
cmp
sbb
xchg
repz
out
popa
or
outsb
fs
clc
lret
jmp
idivb
cli
pusha
aaa
sub
cmp
xor
sub
mov
jl
sahf
rolb
push
xchg
inc
daa
sbb
mov
adc
repnz
shll
xlat
sti
push
adc
adc
xchg
add
add
out
and
cmp
push
cmp
into
dec
xchg
les
pop
hlt
ds
xor
pop
jl
daa
addr16
mov
pushf
shl
push
jecxz
lea
popf
push
add
ror
mov
and
test
or
mov
dec
adc
in
mov
andb
enter
out
les
daa
je
cmp
mov
mov
jl
push
imul
in
xor
inc
adc
mov
pushf
or
add
mov
hlt
mov
xchg
mov
inc
fxch
repz
xor
fdivrl
movsb
fistpll
fs
ds
addl
mov
stos
xchg
notb
dec
loope
js
cmp
das
cmp
xchg
mov
ret
pop
fldenv
movsb
cmp
loope
cltd
jl
sub
pop
cli
ds
stos
addr16
mov
lock
or
outsl
notl
mov
or
cmp
daa
pop
or
in
cwtl
sub
leave
xor
movsb
pop
rcrb
lds
and
testw
pop
jle
push
ficompl
jne
mov
inc
in
add
lcall
jne
xor
push
pop
mov
jns
addr16
xchg
cmp
fwait
mov
cltd
jg
cld
in
das
jmp
lahf
aas
jmp
call
leave
lcall
and
ljmp
sub
jno
fsubrs
gs
loop
xor
pop
scas
ja
inc
sbb
xor
insl
notb
sub
sbb
in
lret
xchg
pop
sub
bound
nop
xchg
shrb
push
push
mov
adc
jnp
movsl
jno
fs
test
add
sarl
fdivl
popf
loope
add
mov
imul
inc
test
ret
les
sub
or
add
mov
sahf
mov
mov
add
imull
loopne
sub
pop
insb
push
or
mov
fistl
pop
pop
pop
mov
cld
in
mov
and
jo
sub
pop
mov
ljmp
mov
je
iret
jmp
dec
xchg
cmp
daa
push
or
dec
loop
sub
xchg
enter
insb
or
movsl
fisttps
std
sub
shrl
je
pop
mov
fprem
aaa
mov
test
cmp
cltd
out
jle
mov
lock
adc
and
xchg
dec
push
push
sub
negl
or
cmpsl
xor
inc
or
mov
or
leavew
sbb
add
fnstenv
pop
cmp
addl
mov
aaa
mov
pop
and
adc
daa
lods
sti
jno
pop
xlat
popf
dec
fdivl
jp
mulps
stos
lcall
out
adc
cld
push
lahf
cld
pop
idivb
add
adc
fnstcw
xlat
sbb
jo
ret
and
dec
jns
sub
dec
je
popf
jmp
rcll
sbb
mov
xor
pop
mov
pushw
adc
xchg
sub
jp
dec
xchg
idivb
or
je
cmp
xchg
jne
push
pusha
rcl
inc
add
inc
jle
cmp
pusha
sarb
add
stos
inc
and
test
pusha
mov
hlt
xchg
je
test
int3
stos
pop
ja
mov
jle
ret
jge
fidivl
cmpsl
mov
or
faddl
insl
je
cld
jb
push
cmpsl
aaa
jnp
test
inc
push
sub
roll
adc
or
es
push
or
push
pop
and
lahf
movl
lock
or
das
les
mov
sbb
test
out
mov
in
out
mov
pop
in
shrb
inc
jle
cmpsb
dec
mov
stc
and
xor
int3
or
push
adc
or
dec
adcb
mov
lret
gs
cli
xchg
scas
sbbl
add
add
popf
outsb
das
jbe
xchg
push
or
scas
icebp
ret
jp
mov
addr16
cmpsb
dec
push
into
push
add
cmpb
inc
inc
jns
ja
or
jo
das
jle
insl
mov
push
ds
in
add
leave
test
js
int3
mov
and
mov
push
stos
jne
imul
sarl
ljmp
add
lret
xor
sarl
outsb
ret
mov
dec
or
insb
or
in
and
jb
ja
xchg
stos
int3
inc
icebp
test
mov
sti
sbb
add
dec
jbe
mov
sub
lods
cmp
mov
inc
arpl
int
push
pop
in
cmp
xchg
test
xlat
mov
ja
fists
int3
fs
lods
jno
add
stos
mov
mov
pop
pop
push
mov
fisttps
xor
sbb
pusha
in
jae
cmp
dec
mov
jne
aas
inc
imul
lock
or
adc
notl
repnz
test
fldenv
fs
cmpsl
ret
test
jmp
insb
cwtl
clc
mov
mov
or
bnd
sbb
cs
sub
push
loopne
test
adc
lock
nop
fwait
ljmp
sub
and
popa
in
cmp
inc
pop
inc
je
jl
inc
pop
mov
roll
in
js
daa
test
sbb
pop
aam
push
mov
dec
mov
loope
dec
xchg
dec
sub
jmp
pusha
jmp
loopne
inc
adc
bound
cmpsl
addr16
dec
xchg
fs
xchg
out
pop
push
xchg
and
mov
cwtl
notb
cwtl
jecxz
xor
mov
test
pop
cmpsl
rolb
mov
jne
push
mov
shlb
mov
xchg
fcmovbe
pop
int3
lret
push
push
pusha
test
mov
push
xorb
repz
mov
adc
lock
inc
pop
dec
aaa
inc
lret
test
sbb
jmp
add
daa
sub
dec
push
out
mov
inc
sbb
nop
fdivr
out
sbb
push
pop
dec
in
loop
out
stc
mov
push
jle
data16
cmp
shl
push
inc
cmp
inc
sub
pop
mov
jns
or
into
popf
inc
loop
lahf
push
mov
into
test
mov
enter
cmp
movsb
dec
insb
xchg
fs
jmpw
inc
stos
sub
push
cmp
sub
cmp
mov
mov
clc
pop
repz
iret
cmp
std
aad
iret
jp
and
or
sbbb
push
inc
push
sub
inc
movsb
in
lahf
dec
stc
lcall
in
mov
adc
and
sbb
pop
add
mov
testb
ja
ret
cmp
add
cmp
xor
add
push
fwait
lods
ret
repz
and
test
sbb
mov
add
fidivrl
push
cwtl
adc
or
add
pop
mov
jbe
movsb
inc
mov
je
cmp
in
mov
mov
cmp
das
sub
fcomps
xor
dec
aaa
movsb
gs
int
pop
cmp
lret
adcl
ja
xor
leave
sub
cli
xchg
cmpsb
daa
dec
hlt
sbb
imul
pop
fsubr
or
aas
cmpsb
xchg
out
mov
jne
int3
mov
inc
push
outsl
mov
das
lock
mov
dec
mov
ficoms
or
xchg
pop
cmp
scas
dec
mov
sub
lods
outsl
push
jmp
in
insl
or
sub
fwait
stc
repz
xchg
mov
inc
dec
adc
loope
subl
xchg
and
adc
push
push
cmp
cli
add
add
push
mov
cmp
or
shll
or
ss
mov
imull
sub
sub
or
cld
out
inc
mov
fldl
push
sbb
out
jno
cmp
movb
adcb
inc
int3
jae
mov
popa
aas
xor
lods
mov
insb
sbb
cmp
fs
mov
sub
lods
outsb
cmp
xlat
dec
faddl
or
mov
das
sub
mov
adc
inc
inc
mov
jnp
inc
sub
inc
cltd
fimull
and
xchg
xchg
push
xchg
dec
mov
insl
xchg
mov
cmp
dec
repnz
fsts
xlat
mov
push
movsl
push
fwait
push
arpl
mov
out
xchg
clc
bound
popa
fidivl
stos
ror
inc
lret
adcb
xor
mov
jae
fimull
cmp
sub
fisubs
and
pop
push
ds
lahf
inc
jbe
mov
dec
pop
sbb
mov
xchg
or
out
ds
lea
fwait
fwait
push
and
cmpsl
ja
sbb
outsb
daa
push
xchg
xchg
xchg
jl
orb
cmp
jae
mov
lds
xor
das
cwtl
enter
dec
popf
dec
leave
mov
push
xlat
ret
sub
inc
sarb
loopne
jp
cli
adc
add
mov
push
jmp
andl
mov
and
pop
mov
repnz
icebp
and
sub
loopne
jl
je
mov
fldl
inc
aaa
or
fcompl
jnp
lds
push
or
push
adc
shlb
inc
mov
cmc
xchg
jg
jae
lahf
sub
stos
test
call
test
push
stos
pop
insl
sti
sub
or
test
hlt
and
xchg
and
sub
mulb
pushf
les
lret
psubsb
sbb
cltd
ljmp
jo
mov
daa
mov
gs
cmp
add
gs
xchg
aaa
adc
sub
mov
cmp
ljmp
push
jb
test
stc
fchs
mov
inc
test
jle
les
addl
mov
insb
aaa
fs
ret
push
jmp
mov
adc
lcall
insl
test
enter
xchg
mov
les
aaa
pop
enter
xor
ds
addr16
ficoms
in
pop
xchg
shr
pop
addl
jg
notb
out
dec
mov
jb
nop
cwtl
xchg
cmc
sbb
fisubrs
add
psubusb
pop
xorb
pop
shlb
mov
inc
mov
and
push
mov
andb
pop
call
movsb
pop
xchg
lahf
jne
movsb
daa
mov
sbb
add
inc
lcall
xchg
jl
pop
dec
out
icebp
cltd
fildl
pop
lock
pushl
addl
xchg
pop
xor
xchg
lds
mull
mov
stos
pop
push
stos
mov
not
lea
add
and
aaa
pop
sub
add
dec
cmp
pushf
pusha
scas
adc
pop
shl
test
nop
dec
add
mov
mul
addr16
ss
add
repnz
ret
rep
mov
jno
adc
pushf
sbb
arpl
or
fcmovnb
popa
pop
cmp
hlt
xchg
mov
mov
arpl
push
into
loop
xor
mov
adc
sub
ffreep
aam
call
ljmp
hlt
out
inc
inc
imul
insb
sub
and
sub
sub
inc
aam
or
xchg
pusha
adc
fnstenv
jns
sbb
dec
xchg
jns
xorl
lds
and
mov
push
push
pop
sub
cmp
js
and
clc
cmp
js
test
mov
pop
mov
sub
data16
mov
cmp
popf
testb
add
mov
dec
stos
into
mov
mov
inc
movsb
and
fdivs
stos
jecxz
je
fstp
or
out
fnstcw
hlt
leave
or
insb
sbb
cmp
outsb
loop
mov
leave
and
fwait
repz
xchg
adc
movntq
out
loopne
popf
and
sub
repnz
into
cld
cmp
pop
mov
test
inc
cmpsb
sbbl
add
fnstcw
push
inc
inc
call
xor
push
sub
dec
sub
inc
lea
mov
mov
test
add
dec
mov
loop
and
lds
loop
adcl
sub
sbb
or
jns
mov
lds
xor
call
sbb
outsl
mov
mov
jns
lods
push
inc
xlat
sub
xchg
rcll
mov
mov
mov
ljmp
cmp
lds
jns
imul
mov
xor
mov
das
cmp
cmp
cmp
sbb
rcr
subb
jnp
cli
pop
adc
push
xlat
pop
jp
push
mov
in
test
cmpsl
jae
lds
lds
add
icebp
xor
lret
and
sahf
sbb
int3
dec
popf
jmp
lcall
lret
scas
sar
sbb
test
push
adc
xor
inc
insb
mov
jle
cmpsb
inc
or
pop
push
jno
sub
cltd
sbb
mov
jmp
hlt
cmp
pop
fcoms
pop
lret
mov
mov
pop
sti
xlat
fidivl
addb
popl
sub
push
or
cld
jns
adc
cmpsb
int3
inc
mov
jb
xor
movsl
iret
adc
pop
arpl
xor
loopne
outsb
push
or
clc
nop
imul
jmp
dec
add
ja
mov
pop
sub
sti
pusha
mov
fists
or
jnp
dec
mov
arpl
push
push
sar
adc
hlt
popf
dec
adc
pop
sub
mov
mov
out
scas
or
mov
jmp
push
popf
mov
mov
adc
inc
test
push
mov
in
jecxz
adc
dec
pushf
bound
movb
xchg
shrl
mov
push
jne
fistps
leave
cli
sbb
lds
je
sbb
cmc
call
aaa
orl
push
mov
aam
mov
push
add
int
outsl
mov
mov
mov
cmp
jmp
jecxz
jo
bound
adc
mov
les
int
sbb
gs
rorb
fidivl
push
sti
adc
movsl
mov
dec
out
mov
mov
jnp
pop
sub
push
inc
pop
mov
xor
orl
inc
mov
neg
cmpsb
out
inc
push
sarl
lret
jb
cmp
arpl
mov
pop
pop
out
into
mov
mov
fstpl
add
test
sub
push
xlat
push
mov
xor
aas
push
fidivrl
dec
cmpsb
call
cmc
fwait
cmp
inc
mov
fwait
and
and
or
int
stos
push
and
pop
cmp
dec
ret
fs
sub
adc
movsl
inc
cmp
les
int
xor
pushf
sbb
out
push
xchg
pop
cmp
std
scas
fstl
aam
lcall
adc
sti
and
push
inc
mov
xchg
add
in
jge
inc
xor
push
aaa
arpl
fcoms
stos
lock
ss
mov
mov
dec
mov
mov
cmp
mov
add
xchg
jo
loopne
xchg
lea
jl
ds
in
roll
xor
xor
psubsw
inc
les
inc
sti
pop
push
lret
test
gs
xchg
xchg
shl
jnp
add
fisttpll
dec
leave
mov
popa
or
insb
adc
movsb
jae
test
out
popf
push
inc
adc
out
daa
cmc
xor
into
orl
pop
fiadds
bound
adc
movsl
push
mov
rolb
inc
inc
mov
jl
add
outsl
mov
mov
fnstsw
inc
insl
sub
push
pushf
add
ds
and
scas
lret
in
scas
dec
xorl
xchg
fstps
inc
push
dec
or
dec
js
cmpsl
das
sbb
sbb
iret
out
xor
mov
or
je
adc
sub
add
mov
mov
orl
sub
inc
push
lea
ljmp
mov
adc
and
mov
aam
xchg
aas
and
dec
clc
dec
insb
mov
test
or
cmpsl
mov
in
out
sbb
xchg
aad
dec
scas
or
scas
mov
push
adc
sbb
sti
mov
inc
add
mov
inc
lods
or
pop
cmp
inc
sub
pop
push
das
or
mov
lahf
jbe
ficomps
sti
dec
xor
test
roll
or
out
dec
cs
cmp
jle
cmp
sbb
enter
insb
ret
test
dec
jo
sbb
or
pop
sti
pop
in
mov
sbb
scas
sbb
outsb
push
and
add
push
leave
mov
insl
mov
xor
dec
rcpps
stos
fndisi(8087
out
xor
sbb
bound
std
add
hlt
fisubrl
add
sbbb
lcall
push
lcall
xor
hlt
inc
push
inc
shll
and
xor
lea
push
mov
in
xchg
inc
sub
sbb
pop
fldenv
or
subb
stc
fdivrl
fsts
mov
pop
jp
out
xlat
das
lahf
lahf
arpl
jae
aam
add
mov
dec
dec
jns
inc
loope
jl
push
jmp
and
ret
aaa
dec
out
pop
and
dec
call
das
enter
jo
out
arpl
jmp
cmp
out
lret
sahf
repz
out
out
push
xchg
test
push
jnp
jle
xor
std
lcall
imul
popf
fwait
out
cmpsb
cmp
adc
xchg
test
sbb
fidivrl
mov
into
jp
je
and
adc
test
scas
fisttpll
out
stos
xchg
orl
iret
mov
pop
xor
push
lods
pop
mov
cli
clc
mov
cltd
cmp
or
adc
mov
or
jge
mov
mov
xchg
inc
jae
jmp
xor
sarl
pop
jmp
and
mov
and
fstpt
lcall
jns
loope
shlb
jnp
push
and
push
jl
cmpsl
shll
pop
mov
or
arpl
bound
dec
mov
jno
jo
sub
inc
int3
mov
cli
popf
jnp
scas
ja
mov
test
xchg
sub
push
mov
pop
lods
jae
jbe
adc
incb
inc
pop
dec
push
gs
in
mov
inc
pop
jne
clc
cltd
rolb
std
pop
popa
mov
mov
rcrb
imul
add
lea
dec
adc
loopne,pn
cmc
fdivrs
jns
mov
sub
dec
xor
lods
sbb
imul
nop
pop
push
push
stc
stos
mov
cmpsb
xor
cmp
dec
pop
xchg
or
lock
adc
aam
pushf
cltd
pop
cmp
dec
xchg
inc
xchg
mov
fmull
loope
pop
sbb
out
or
pop
in
mov
jge
mov
mov
aam
pop
test
cmp
add
int
pop
fcmovbe
dec
inc
int
push
jae
mov
add
aaa
into
addl
add
mov
xchg
lcall
push
cmp
test
fldcw
jmp
adc
lahf
dec
jnp
data16
sbb
sahf
xor
clc
sbb
lds
les
rorb
mov
add
xchg
pop
cmp
xchg
inc
ds
cmp
movsl
lret
repz
mov
or
ret
call
mov
stc
and
cmp
sub
mov
xchg
mov
int3
ficoml
or
xor
push
xchg
mov
mov
mov
aad
mov
sbb
push
or
imulb
ret
jns
push
scas
xor
mov
fmul
xor
je
loop
fmul
cli
add
scas
xlat
pop
adc
jle
scas
or
inc
mov
test
and
adc
pusha
sub
jbe
sub
cltd
cmp
je
and
jge
mov
es
aas
inc
in
mov
ffree
adc
adcb
mov
ljmp
jge
mov
mov
mov
repnz
scas
push
inc
ds
test
adc
xchg
adc
push
test
mov
add
cmp
or
dec
stos
jae
lahf
mov
dec
xchg
je
inc
pop
adc
aaa
insb
scas
in
rclb
inc
cs
mov
push
pop
and
in
incl
insl
sbb
lea
fsts
call
ret
lods
fadds
stos
cmp
cwtl
jmp
loop
inc
mov
push
mov
and
pop
out
out
xchg
cmc
movsl
scas
pop
dec
add
lods
and
imull
shrb
lret
popa
lcall
dec
into
xor
cmc
xchg
dec
sbb
call
inc
cli
out
sbb
cs
out
and
inc
inc
scas
loop
xor
test
addr16
fneni(8087
inc
xchg
stos
lods
push
pop
sbb
pushf
xor
pop
mov
cmp
push
inc
xchg
add
loop
hlt
push
or
mov
fdivrl
fwait
adc
push
push
clc
out
xor
inc
sub
dec
je
inc
in
cld
sub
jle
push
imul
movsb
pmullw
xchg
pop
mov
pop
xchg
jle
sbbl
xchg
cli
aad
lea
leave
rcr
pop
pop
movsb
sub
pop
mov
add
test
addr16
and
fadds
fdiv
in
mov
inc
aas
push
outsb
insl
mov
int3
mov
movsb
dec
xchg
jecxz
mov
adc
ret
fmul
popa
jb
mov
pop
mov
sbb
enter
ljmp
and
aas
notrack
dec
pop
dec
ret
or
shr
jle
std
ja
pop
or
push
xor
icebp
mov
ja
sub
sahf
push
pop
xor
cmpsl
insb
lods
mov
inc
and
ds
dec
test
sub
fistps
in
mov
stos
xor
ja
ret
sarb
mov
dec
test
loope
inc
ljmp
sbb
xor
mov
cs
sbb
test
push
or
mov
push
into
pop
repnz
xchg
xchg
mov
scas
out
lret
add
mov
loopne
stos
lcall
mov
pushf
fdivr
xor
lock
ds
lock
roll
adc
or
std
test
mov
pop
aaa
jne
xor
shll
sub
mov
outsl
fsubp
sub
ret
lods
std
cld
imul
push
sbb
sbb
cmp
das
mov
inc
mov
fsubrs
inc
add
inc
jmp
mov
push
cmovle
stc
xchg
stos
ss
popf
into
stos
test
pushf
rorl
pop
fdivs
cwtl
mov
jno
push
mov
mov
and
mov
sbb
xchg
cmp
and
repnz
rcll
cmp
cmc
mov
push
test
pusha
add
in
push
xchg
push
and
add
inc
and
inc
pop
pop
mov
or
push
adc
push
test
push
push
stos
mov
stos
dec
or
call
mov
std
push
xchg
adc
or
ja
ja
psrad
or
xor
pop
stc
inc
jle
cmp
jge
cmpb
or
fildl
insb
adcb
nop
push
mov
fisubrs
dec
jecxz
pop
repz
cmp
sarl
mov
clc
cli
daa
clc
imul
mov
push
xchg
hlt
icebp
xchg
pop
xor
je
lea
mov
daa
mov
cmpsl
sub
lret
imul
xor
ja
arpl
adc
js
lahf
xchg
jo
cmp
ja
or
xor
dec
mov
xlat
popf
mov
lcall
sbb
mov
jecxz
call
gs
push
aam
orb
jbe
inc
push
dec
mov
cltd
mov
or
subb
push
in
ss
js
jg
int
xchg
pop
xlat
mov
pop
dec
mov
cmp
and
fildll
pop
inc
push
adc
out
pop
imul
cmp
mov
dec
out
adc
shll
out
mov
iret
cmp
push
mov
mov
mov
dec
ror
mov
add
xchg
in
add
popf
wrmsr
xor
stc
or
aaa
adc
xor
addb
add
cmpsb
cmp
repnz
fistl
sbb
inc
mov
ss
fsub
mov
xchg
aaa
bound
scas
lds
int3
icebp
ret
inc
pop
lods
leave
dec
test
sbb
cltd
xor
mov
sub
in
jl
dec
adc
or
dec
loope
loope
sbb
pop
sbb
je
mov
sti
clc
mov
mul
sbb
adc
loopne
adc
into
rclb
dec
dec
sbb
mov
or
out
test
not
outsb
imul
or
daa
mov
orl
int
aas
mov
pushf
xchg
out
ret
arpl
gs
cli
mov
stc
in
clc
and
call
mov
inc
inc
xor
call
push
out
rcrb
sub
ljmp
addr16
out
jge
lahf
out
lods
cmp
jg
xor
ljmp
fnsave
adc
mov
xchg
jne
sti
and
ljmp
nop
jns
in
repnz
pop
sbb
jmp
fsubrs
hlt
iret
repz
xchg
jno
scas
xor
cmp
mov
outsb
cmc
imul
push
add
sbb
clc
fimull
xchg
inc
jl
rorb
xor
in
pop
xchg
adc
or
mov
inc
inc
push
addb
ja
push
inc
mov
push
or
mov
enter
inc
adc
setno
jmp
inc
xchg
push
xor
scas
inc
lea
and
jnp
jno
ss
add
jns
cli
xchg
pop
mov
test
mov
xchg
adc
js
shr
or
push
mov
stos
and
mov
mov
out
xor
jno
cmpsl
imul
cmp
lds
push
mov
inc
add
movsl
out
in
add
enter
cmp
mov
loop
fdivrl
nop
icebp
mov
mov
vshufps
sbb
and
ret
inc
lret
into
and
ss
loopne
aas
std
arpl
pop
das
dec
sub
pop
lock
mov
pop
stos
fdivrs
scas
shrb
mov
lret
mov
mov
add
jnp
ljmp
imul
jno
std
push
je
xor
aaa
lcallw
mov
or
sbb
ss
scas
jle
pop
jge
sarb
sti
push
aas
pop
hlt
mov
xchg
jle
cmpsl
jp
pop
xchg
pusha
les
icebp
fistl
lock
jbe
jno
int
aam
popf
fmuls
sub
movsb
sub
mov
orl
jle
add
data16
adc
jae
cmp
inc
cs
nop
and
into
mov
inc
stos
pop
sbb
test
push
inc
es
inc
push
jae
mov
push
rcrl
aad
push
int
cmc
aaa
ja
iret
dec
mov
mov
push
sti
loop
sahf
ja
add
in
push
lods
mov
lods
test
xchg
mov
sub
dec
sbb
test
xlat
movsb
loopne
gs
adc
sahf
test
and
xchg
or
test
sti
mov
push
xor
pop
sub
cmpsb
add
or
lods
popf
pop
int3
xchg
pop
pushf
sbb
jbe
cmpsb
sub
mov
iret
insb
dec
mov
sarl
xor
jb
int
mov
aas
adc
or
push
jmp
xchg
lea
mov
not
hlt
int3
lods
pusha
jbe
mov
mov
std
movsb
jge
jp
dec
jg
add
gs
xchg
jno
in
lods
shlb
mov
icebp
aam
push
into
pop
xchg
out
and
xor
popf
or
pusha
js
and
and
and
xlat
pop
mov
aaa
xchg
mov
aad
mov
and
aaa
cmp
lret
inc
pop
dec
stos
scas
sub
sub
mull
test
repz
stc
leave
dec
frstor
int
stc
movsl
in
inc
lahf
dec
sbb
sub
iret
mov
adc
push
jmp
push
psubd
sbb
push
jne
xchg
sub
cmp
hlt
ja
lods
xor
pop
out
dec
inc
orb
arpl
jae
scas
xor
and
dec
daa
in
dec
fbld
in
mov
inc
popl
cmp
mov
mov
insb
jnp
cmpsl
notb
cli
inc
xor
xchg
pop
sub
mov
jecxz
int3
popa
mov
or
sarl
movsl
sbb
je
mov
int3
lods
cs
jns
lcall
addr16
dec
daa
pop
ljmp
addr16
pusha
mov
or
mov
mov
dec
or
lret
push
add
das
gs
popf
ret
jbe
cld
int3
dec
cmc
xlat
aas
jns
cmpsb
rol
lret
mov
jbe
movsl
cltd
jg
jge
dec
repz
push
jae
xor
sbb
jno
cltd
pop
xchg
mov
sub
in
pop
hlt
xchg
push
mov
popf
sub
xchg
jnp
jmp
les
sbb
in
fsubrl
cmp
rcrb
daa
xor
and
jmp
and
jle
push
mov
mov
and
sahf
mov
cmp
xchg
loop
push
xor
push
loope
jge
xor
or
in
repz
jno
jp
sbb
or
hlt
int3
cmpsl
sahf
clc
les
xchg
xchg
jl
jg
loop
in
scas
mov
mov
dec
rcll
mov
stc
or
mov
mov
test
cmp
sbb
test
aas
notb
lock
imul
fidivrs
in
mov
enter
lahf
mov
or
push
imul
cld
pop
inc
mov
push
ret
inc
or
jp
mov
push
mov
outsb
incl
xor
lock
push
lcall
mov
pop
test
sbb
cmpsl
es
adc
mov
pop
pop
cmpsb
mov
aad
repnz
add
ret
inc
aam
ds
pop
push
stc
decb
enter
jmp
mov
flds
adc
icebp
xchg
xchg
sub
icebp
cld
repnz
and
lahf
idivb
cmc
test
jne
push
dec
ror
stos
sbb
xlat
in
add
inc
fimull
push
data16
sbb
and
push
push
and
and
adc
jp
jae
mov
sbb
xchg
or
dec
dec
popa
lcall
xorb
iret
xchg
fidivrs
test
sbb
outsb
sbb
fidivs
or
mov
fnstcw
pop
add
arpl
sub
or
push
add
add
js
ret
dec
and
sub
dec
add
jns
push
aam
mov
jns
mov
sbbl
push
js
xchg
fnstsw
iret
sub
popa
loop
cmp
in
in
test
fdivl
sub
stos
pop
pop
xchg
push
pop
mov
fmulp
mov
in
popa
pop
lahf
xchg
mov
ret
popf
xor
inc
xchg
js
add
test
push
aaa
inc
dec
outsl
mov
jg
dec
dec
iret
or
mov
stc
adc
cmpsb
ljmp
or
jnp
out
mov
loop
imul
lea
sbb
mov
and
inc
lock
ret
fiadds
push
repz
pop
cmc
cmpb
lahf
insb
gs
mov
add
xor
push
stc
mov
sahf
mov
add
pop
cmp
in
lcall
and
xchg
test
int
out
fsubrl
xchg
in
pusha
repnz
test
jno
je
dec
or
lock
mov
lock
push
inc
fidivs
vmovntdq
lret
mov
das
movsl
mov
adc
in
cmp
pop
adc
mov
or
dec
add
or
mov
mov
adc
fdivrl
xchg
aaa
fiaddl
mov
out
imul
mov
sub
stc
ja
out
enter
xchg
mov
inc
inc
xlat
dec
jl
rcrb
int
or
sar
in
dec
sub
xchg
lods
lods
push
cltd
mov
out
cmp
xchg
scas
jno,pn
mov
mov
mov
mov
lea
mov
loope
mov
into
inc
sub
sub
and
lcall
pop
imul
push
add
mov
dec
aad
adc
or
xchg
fidivrl
in
dec
movsl
test
jmp
in
xchg
mov
add
movsb
xor
push
xchg
xlat
inc
fwait
mov
pop
sahf
cmp
les
jle
test
adc
and
in
loopne
movsl
sti
mov
cmp
ficoms
mov
repnz
sahf
mov
cmp
xchg
es
cltd
or
in
and
mov
mov
aas
stos
mov
mov
mov
stos
imul
mov
test
mov
adc
stos
decl
das
and
lret
xor
fsubl
sahf
inc
or
dec
add
add
subb
jbe
lock
mov
lret
aas
inc
xchg
pop
arpl
jmp
pop
push
inc
pushf
push
sti
push
mov
xchg
loopne
sub
add
push
ficoml
repnz
insl
rcrl
inc
push
xchg
faddl
sti
bound
int
fidivl
test
aas
fwait
shrl
xchg
mov
fstps
jne
std
jnp
jo
hlt
sub
pop
mov
xchg
inc
mov
add
inc
lods
dec
cmpsb
int3
mov
iret
je
loope
rorb
jo
and
lret
and
pop
stc
iret
aam
lcall
xor
push
aam
pop
in
int3
inc
inc
inc
pop
frstor
sahf
ret
movsl
and
test
lea
lock
call
inc
pop
push
xchg
dec
xchg
std
pop
fwait
out
in
popa
cmp
add
pusha
leave
pop
sbb
sub
cmp
bound
dec
in
outsl
sbb
inc
push
adcb
mov
adc
lods
push
mov
enter
frstor
movsl
cmp
pushf
loop
mov
sub
dec
popf
ss
fcompl
jns
sbbb
jo
jecxz
lods
cmc
lcall
rcr
sbb
insl
popa
lret
adc
cmp
xchg
mulb
cmp
lret
dec
pop
test
punpckhdq
xchg
aam
and
adc
outsl
mov
test
aad
jg
mov
mov
icebp
lods
stc
cmp
scas
test
in
in
and
adc
xor
mov
js
test
dec
loopne
inc
cld
jbe
cmp
mov
add
gs
cltd
sub
stc
subb
pop
sub
xlat
ja
sub
dec
jae
fdivrs
and
ja
mov
outsl
jp
push
dec
movsb
mov
test
xorl
dec
lret
sbb
imul
or
jmp
dec
sahf
in
inc
and
stos
int3
mov
aam
inc
and
xchg
xor
adc
fistpll
jns
in
lods
fstl
cltd
pop
ljmp
clc
jle
dec
mov
lods
mov
mov
cmpsl
push
jle
rcll
loope
mov
add
mov
jb
pop
cmpsb
in
jmp
ss
and
or
pop
mov
bound
lods
adc
lret
lcall
popa
adc
inc
jg
cmp
mov
fsubrl
and
jno
popa
inc
push
mov
test
and
pop
sti
or
fadd
fs
insb
sbb
nop
repnz
ja
xor
adc
push
clc
cs
lahf
xlat
sti
lahf
mov
mov
cmc
std
xchg
jns
or
out
int3
movsb
sbb
mov
push
and
xor
sub
xchg
pop
adc
push
sub
outsb
int3
pop
pop
js
xor
lahf
testl
push
lock
mov
xchg
bound
or
dec
addr16
aas
shrb
mov
movsl
dec
or
test
mov
pop
int3
mov
pop
inc
rcll
mov
ltr
ret
or
and
aaa
mov
inc
pop
cmpsb
enter
mov
mov
data16
stc
jl
mov
sar
push
and
cld
roll
fisubrs
mov
pop
jne
xor
or
add
mov
lcall
xchg
sub
insl
xchg
mov
xchg
outsb
or
clc
cli
lret
mov
jecxz
xchg
mov
or
and
mov
nop
jg
and
shll
cmp
mov
out
pop
aam
into
add
movsb
xchg
cmpsb
push
stos
lock
inc
sarl
lret
std
fsubrp
add
stos
mov
cs
adc
push
adc
data16
mov
inc
into
push
shlb
out
ja
push
mov
ja
fildl
jbe
xchg
pop
add
add
or
fcoml
xchg
jecxz
roll
xchg
subl
xchg
fsts
in
push
adc
jo
xor
fsubl
jl
inc
mov
xchg
xor
inc
jle
out
nop
and
aaa
inc
jnp
cwtl
pusha
cs
adc
jle
cltd
mov
test
cs
fildll
push
mov
or
fs
sbb
data16
les
les
or
pop
stc
inc
mov
xchg
dec
fidivrl
push
jb
arpl
stos
dec
popf
push
lret
mov
scas
out
sbb
mov
xchg
sbb
jne
jno
adc
pusha
mov
std
add
inc
jb
gs
stos
enter
push
int
ffree
sbb
xchg
mov
sar
test
inc
adc
xchg
stos
inc
pop
ds
icebp
xchg
mov
lods
stos
shl
int3
dec
jle
pop
arpl
xor
xchg
add
ret
notb
and
lret
test
push
ja
cmp
cmpsb
adc
xorl
js
dec
lods
stos
popa
aad
cs
inc
xchg
movsb
mov
out
pop
int3
notb
inc
repz
cmc
sub
call
push
push
pop
or
arpl
inc
mov
or
sub
add
std
jg
mov
aad
sub
push
lds
fisubrl
lds
subl
pop
fistl
cmc
shl
hlt
pop
sarb
popa
add
es
cwtl
mov
arpl
inc
dec
jo
sbb
daa
cmp
popa
pop
lahf
gs
es
jmp
xchg
cmp
push
and
pop
xchg
pushf
push
mov
dec
xchg
cmp
pop
jno
xlat
push
pop
mov
add
inc
push
cmp
and
cmpsb
popa
xchg
push
lea
cs
sub
hlt
std
test
inc
ljmp
mov
xchg
lds
repz
and
pop
adc
fidivrl
mov
mov
lea
lahf
enter
aad
inc
ret
pop
fstpt
movsb
mov
or
mov
lods
fstpt
pextrw
fdivs
xchg
call
popa
mov
mov
xor
add
fidivrs
sbb
mov
cli
adc
adc
dec
mov
adc
shl
dec
inc
jae
cmp
jb
cmc
mov
gs
mov
pop
in
pop
pushf
loop
sub
cs
cmp
in
or
sahf
lea
std
and
pop
data16
outsb
add
subb
dec
popl
lea
sti
mov
mov
ljmp
repz
cmpsl
and
cli
xor
cmp
sbb
or
les
pop
pop
xchg
jae
stos
cmp
sub
movsb
mov
int
int
aaa
push
mov
daa
cli
cld
cmpsl
mov
aas
loope
lret
push
fiadds
mov
dec
fbld
mov
mov
data16
cmp
pop
enter
lods
inc
dec
cmc
mov
in
out
outsl
out
and
sbb
cmpsb
xor
xlat
aad
xchg
sbb
push
pop
xchg
jg
test
dec
jns
mov
int
inc
addr16
push
and
mov
mov
add
cmpsl
and
pop
ret
out
cmp
in
iret
mov
add
pop
cli
adc
xor
pop
push
pop
and
dec
aaa
or
mov
popa
out
xchg
jecxz
dec
stos
scas
pop
ret
ds
pop
lods
add
repnz
adc
lcall
mov
xor
and
mov
dec
bound
imul
ss
mov
jmp
sub
jb
mov
and
sarl
pop
xlat
sbb
push
jge
or
pop
sub
add
cmp
cmp
lea
sbb
lods
mov
sbb
add
mov
int3
out
pop
and
fwait
mov
fidivrs
lock
or
stos
ljmp
mov
fdivs
or
sti
fcmovu
ss
inc
clc
popf
xchg
pop
mov
daa
or
push
mov
adc
jmp
pop
stc
sti
rolb
sbb
fadds
test
mov
insb
inc
jbe
dec
inc
arpl
imull
ret
pusha
xor
dec
adc
adc
or
push
stos
dec
inc
sbbl
imul
bswap
loop
pop
fsubrs
cmc
xchg
js
cmp
mov
arpl
push
dec
mov
sub
dec
sub
push
xor
fnstenv
scas
mov
gs
push
pushf
jo
add
sbb
hlt
cmp
push
mov
out
inc
rorl
mov
bound
dec
cmc
stc
cmc
addb
add
rcr
xlat
xchg
xor
xor
int
mov
pushf
xchg
cmp
shlb
mov
sbb
mov
xchg
out
cmp
inc
movsb
mov
ret
lahf
xlat
xlat
jge
fsts
add
aam
ja
xor
jge
es
popf
loope
jo
adc
push
cwtl
mov
jmp
add
adc
mov
das
pop
sbbl
daa
sar
mov
and
or
xchg
shlb
jns
lods
xor
sub
xor
mov
pop
arpl
vpmadcswd
sub
cs
jle
fwait
adc
sbb
push
out
push
mov
out
sbb
add
out
call
pop
cmpsl
jbe
jg
and
xchg
outsb
cvtps2pi
fmull
in
jo
lock
jg
mov
dec
into
jo
daa
sarl
sub
xor
movsb
sbb
jmp
dec
xor
ds
sub
jmp
pop
xor
outsl
cmpsb
push
cwtl
test
add
lcall
push
fbstp
mov
aad
mov
dec
movsb
mov
test
subb
jmp
fs
faddl
add
outsb
add
mov
lcall
ss
scas
cmp
dec
out
filds
mov
cmpsl
fisubrs
add
fadds
adc
push
dec
sbb
adc
das
xor
jo
call
movsb
mov
mov
sbb
xor
lcall
fsubl
pop
insl
mov
pop
cmp
or
cld
cmp
out
call
push
mov
ret
mov
cmp
hlt
dec
int
sub
test
and
pop
fs
push
aas
cmp
lock
es
inc
cwtl
dec
fucomi
idivb
outsl
mov
inc
push
xor
xchg
aam
lret
sub
xchg
sbb
movsl
sub
out
and
mov
fnsave
and
pop
adc
mov
shrb
push
push
outsl
push
mov
les
mov
movl
jecxz
call
push
sbb
out
and
stos
imul
test
and
push
xor
outsb
lahf
adc
jp
xchg
mov
and
sbb
cmpsl
sbb
add
jp
xchg
and
scas
pop
push
enter
xor
call
sub
stos
ja
mov
inc
cmp
push
cmp
fisttps
aas
gs
jnp
pop
jnp
popa
addr16
inc
hlt
dec
push
cmc
fldenv
and
paddq
popf
jo
call
xor
jnp
add
ret
stos
adc
lahf
xor
stos
push
jne
mov
imul
stos
or
xchg
cmc
dec
xchg
fldl
out
aad
jp
pop
fsts
mov
sbb
cmp
jle
test
push
fucomip
add
or
hlt
jo
jbe
fstpt
dec
movsl
inc
cmc
out
aaa
in
jl
cmpsl
pop
xor
or
jb
jg
fs
push
mov
pop
sbb
push
es
aas
xor
leave
xchg
cs
out
scas
ds
dec
mov
dec
ss
push
scas
push
sub
fisttpl
pop
mov
stos
das
mov
adc
cltd
pop
sub
xor
xchg
lret
inc
inc
add
icebp
xor
jno
add
jnp
pop
cli
movsb
mov
jo
repz
shlb
fisubrs
cmp
lods
cmp
insl
int
sbb
dec
cmp
xchg
jl
sbb
out
sti
subb
lcall
dec
icebp
sbb
jmp
movsl
aaa
testb
gs
mov
dec
ss
in
nop
pop
shlb
idivb
ret
shll
sub
push
es
jne
jb
pop
arpl
dec
and
dec
lcall
fildl
dec
or
test
fdivp
fldenv
jne
aad
test
sub
cli
adc
stc
das
loope
jle
and
mov
push
stos
mov
jecxz
fisubrl
xor
jbe
lods
rorb
xorl
cmc
icebp
or
push
inc
xchg
idiv
addr16
cli
add
push
pop
sub
add
dec
loop
div
mov
and
push
push
pop
sbb
out
sbb
adc
pushf
or
pop
enter
xchg
ret
sbb
mov
xor
pop
test
test
fsub
inc
popa
iret
xor
icebp
add
dec
mov
xorb
xor
in
popf
adc
or
hlt
or
pop
shl
sti
jmp
jecxz
inc
inc
pop
sub
aas
fwait
jmp
out
out
call
mov
nop
clc
push
inc
xchg
pusha
leave
push
lea
mov
dec
mov
test
mov
outsb
sahf
cmp
icebp
sub
test
les
ja
in
push
add
pop
cmpl
pop
loope
jo
xor
mov
cmp
insl
insl
xchg
fwait
or
sbb
jo
pop
add
or
rcrl
js
mov
or
push
cmp
cmp
enter
and
xchg
sub
lret
ss
mov
bound
inc
pop
pop
scas
sbb
aas
or
dec
into
jo
mov
pop
subl
loop
xchg
mov
loope
adc
add
mov
or
fs
and
popa
out
mov
test
ljmp
lea
sarb
mov
cmp
mov
sub
cmp
dec
add
mov
in
add
cmp
lock
cwtl
idivl
ja
aaa
mov
ficoms
push
jge,pn
pop
adc
sub
outsb
add
inc
movsb
and
jno,pt
jl
jge,pt
lock
sub
fsubp
xchg
stos
jne,pt
dec
inc
pop
jge
les
mov
push
dec
imul
and
jnp
out
sbb
xchg
cs
pop
sub
lds
jg
test
or
cs
shr
mov
ret
or
adc
pop
mov
pop
push
arpl
mov
loope
ds
aas
shl
lods
sti
fidivrs
or
sub
push
push
sbb
ljmp
inc
pop
cli
xchg
mov
cmp
mov
outsb
test
lcall
inc
mov
scas
nopl
jg
das
jo
sub
mov
add
pop
and
pop
jge
push
mov
inc
test
adc
inc
notb
addr16
pop
orl
stc
adc
pop
mov
jp
fldl
and
sbb
sbb
xor
sahf
push
push
aaa
inc
pop
xor
sahf
mov
outsb
aas
push
popf
jae
lods
cmp
xchg
pop
pop
push
add
pop
fnstenv
fdivrs
adc
mov
fistps
dec
sub
int3
add
stc
mov
adc
dec
or
add
jne
call
mov
add
fistl
into
jmp
test
in
xchg
xor
clc
outsb
or
adcb
jg
xchg
dec
mov
sbb
out
ret
sub
mov
cmpsl
fstpl
ss
iret
lods
enter
inc
mov
mov
gs
xchg
in
ljmp
pop
nop
sbb
out
sahf
push
mov
cmove
mov
push
in
xor
mov
enter
pop
xchg
jmp
inc
lahf
mov
mov
imul
xor
sub
nop
mov
das
pushf
lret
stc
pop
pop
call
shll
pop
mull
shrb
std
add
or
jns
push
pushf
mov
icebp
jo
add
ret
mov
sbb
hlt
in
cmc
add
adc
xchg
push
jl
sub
in
testb
dec
cltd
lds
xchg
out
sbb
pop
xchg
mov
pusha
icebp
cs
cmpsb
in
clc
ljmp
xlat
lret
pop
nop
xor
ljmp
adc
mov
push
inc
push
notl
pop
sar
sbb
push
push
push
add
lods
int
mov
stos
test
shrb
mov
xchg
push
inc
xor
stos
lds
mov
das
mov
cvtpi2ps
leave
push
cmpb
or
cmpsb
jno
leave
and
sub
decl
loope
and
imul
in
and
sub
je
mov
int
xchg
mov
sub
xor
jae
xchg
hlt
leave
sbb
or
xchg
test
push
add
cmp
roll
mov
xor
sbbl
jmp
xchg
mov
pop
pushf
out
and
cli
add
shrl
mov
sub
mov
and
fcoml
lea
inc
jns
cmp
inc
outsl
std
jbe
out
hlt
imul
xor
rolb
jnp
push
xor
jb
sahf
popf
adc
pop
or
mov
scas
out
dec
push
pop
sbb
aad
shr
xchg
xchg
mov
mov
mov
pusha
xchg
jo
les
pop
jnp
cltd
pop
daa
push
loop
mov
sbb
mov
xchg
fildl
add
idivb
stc
or
dec
jae
push
ss
negb
sbb
or
aaa
outsb
xor
subl
imul
dec
push
lods
arpl
xchg
pushf
xchg
xor
cmp
pop
cmp
add
jno
push
xlat
std
add
std
dec
mov
icebp
sahf
jecxz
gs
xorl
fdivs
jmp
lea
shll
call
outsb
xor
sbb
push
inc
or
cmp
sbb
push
cmp
push
fildl
mov
add
out
imul
and
mov
mov
pop
mov
out
pop
out
and
jbe
aad
les
dec
popa
idivb
cmp
jbe
je
sbbb
inc
ret
add
addr16
data16
xor
add
or
sbb
scas
bound
mov
roll
dec
inc
arpl
in
inc
and
pop
lods
out
je
pushf
iret
push
sub
mov
lds
dec
add
and
test
not
mov
ss
fidivl
xchg
jnp
lcall
pop
mov
push
inc
scas
push
das
xchg
pop
ljmp
loope
push
test
add
in
mov
outsl
imull
mov
cmp
inc
jg
push
jns
inc
shll
cmpl
testb
inc
and
stos
or
and
lcall
adc
mov
and
sbb
mov
pop
aas
xorb
xorb
or
mov
cmp
mov
sub
pop
xchg
or
sub
push
mov
out
call
jae
and
rcrl
pop
sub
int3
mov
mov
adc
enter
cmpsl
push
pushf
outsl
xchg
out
cltd
sub
repnz
mov
push
mov
mov
cwtl
test
sbb
fwait
dec
pop
xor
shlb
dec
test
negl
arpl
inc
dec
in
jns
jl
sub
mov
xor
lods
sar
movsl
out
fidivrl
clc
push
stos
adc
cmc
sbb
ret
sahf
out
mov
stos
mov
andb
in
pushf
shrb
mov
inc
sti
jae
test
jp
add
cmpb
loope
sub
xchg
les
fucomi
ret
dec
sarl
ds
cwtl
sbb
insl
push
pop
cmp
aas
jns
mov
es
sub
pop
lcall
mov
xor
jge
lahf
cld
adc
decb
mov
ret
and
je
dec
mov
int3
scas
loopne
nop
aad
and
in
jmp
cmp
daa
xchg
cld
or
xchg
pushf
cmp
adcb
pushf
mov
jne
adc
enter
push
mov
dec
cmc
add
and
fbld
in
inc
insb
xchg
lds
push
sahf
and
mov
cmp
jp
sub
sub
idivl
push
add
ds
mov
xchg
jecxz
dec
cmpsb
dec
daa
lret
jb
cmp
incl
cmp
imul
jp
ret
pop
scas
shrl
in
mov
cmp
out
xchg
outsl
fistl
xchg
xchg
mov
mov
popf
push
mov
xor
sbb
rorb
dec
cmp
xor
pop
aas
inc
add
push
aad
cmp
cmp
jecxz
cmp
pop
fcomp
and
sub
xor
sub
mov
int
lret
lcall
out
int3
adc
adc
push
scas
adc
xchg
movsl
mov
mov
movsb
mov
dec
inc
dec
inc
push
mov
pop
push
lcall
adc
adc
cli
jle
adc
adc
pop
shlb
mov
push
xchg
pop
loopne
loop
mov
xor
out
ljmp
jae
bnd
gs
xor
sub
popf
les
adcl
jbe
and
push
lods
outsb
cmpl
stc
js
jns
xor
fld
xchg
dec
xchg
std
data16
and
dec
jae
not
dec
inc
mov
pop
xchg
arpl
xor
cmp
roll
and
pop
cld
adc
in
push
sbb
sub
lods
mov
loopne
mov
rclb
test
inc
in
mov
and
imul
xchg
adc
fldcw
mov
stc
cmp
stos
dec
or
cmp
pop
add
insl
xchg
cmp
das
adc
inc
add
pop
jo
inc
pop
scas
push
sub
sarl
aas
adc
inc
dec
mov
lods
in
push
or
mov
jle
test
mov
jp
adc
jl
fpatan
mov
test
and
cs
aad
dec
hlt
mov
add
xor
jp
ret
jge
out
jo
sbb
scas
mov
jle
xor
ret
push
fs
adc
aam
xchg
lock
dec
push
lods
jno
lock
fwait
push
lods
and
notb
or
nop
shll
mov
sbb
cmp
call
adc
inc
ss
cmp
idivl
sbb
cmpsb
or
xor
test
movsb
sub
push
sahf
and
cmp
lock
hlt
rcrb
lcall
inc
pop
popa
jno
push
in
or
out
lahf
cmpsl
or
insb
push
jl
pop
scas
jns
sbb
fstl
push
inc
lret
fs
mov
cmpsb
out
xor
rorl
std
ret
dec
out
idivb
push
pusha
push
sbb
fsts
incb
cmpsb
push
loopne
jl
cmp
cmpsl
mov
loopne
push
pop
and
rcll
test
inc
iret
rclb
jb
fcoms
push
lcall
push
push
and
fisubrs
add
ficompl
mov
ja
mov
cs
mov
pop
lcall
jecxz
sbb
dec
or
xchg
jp
pop
and
or
push
sub
cmp
push
enter
cli
xchg
adc
mov
push
sub
stos
inc
hlt
out
sbb
lds
cmp
inc
loope
dec
adc
push
sidtl
pop
sub
pop
dec
jbe
and
adc
stos
js
test
loope
add
and
pop
sbb
add
pop
jnp
test
jbe
aam
into
popf
clc
dec
or
mov
repz
or
inc
add
jno
test
inc
cmp
cwtl
mov
test
rorb
int
loop
xlat
dec
jg
int3
adc
adc
mov
out
mov
mov
std
xchg
jl
out
push
cmp
dec
out
mov
lcall
jle
push
cmp
add
aad
test
ja
inc
lahf
lcall
pop
movsl
sarl
movsb
lret
std
mov
jbe
lods
or
xchg
jl
adcb
shrl
push
xchg
push
sbb
ds
cmpsb
cwtl
test
sbb
mov
add
sahf
mov
jge
mov
dec
dec
ret
cmc
mov
imul
int
test
mov
leave
xchg
xor
inc
in
or
sub
mov
sub
outsb
pop
fbstp
into
or
fildl
xchg
repnz
test
jg
imul
iret
andb
jnp
add
dec
add
pop
push
stos
sbb
push
into
int
pop
out
dec
jne
test
xchg
call
inc
outsl
mov
lods
lods
les
sbb
jge
xchg
and
test
out
lret
fs
aad
mov
call
sahf
movsl
jle
or
or
outsl
mov
icebp
mov
mov
out
pop
mov
bound
push
push
sahf
push
aaa
int
or
sub
mov
nop
xchg
jle
push
mov
out
into
aaa
push
xlat
movsl
fisubl
shlb
dec
iret
jg
xchg
std
cmp
fcomi
scas
ficoms
popa
add
adc
scas
inc
loope
dec
and
cmp
aad
or
lret
mov
dec
inc
adc
cld
cmp
jae
bound
pop
jns
cmp
mov
and
sbb
lods
and
jnp
push
push
pop
pop
sbb
stos
mov
pop
push
mov
jl
out
push
push
xchg
loop
std
xchg
mov
stc
dec
cmp
mov
cmp
enter
fcoml
scas
or
jns
xor
push
sti
in
mov
inc
shr
int3
add
hlt
es
imul
rcll
popf
cld
push
sub
enter
lret
or
fs
lret
es
mov
scas
or
push
mov
mov
add
cltd
mov
in
sbb
or
loopne
inc
mov
inc
mov
popf
adc
fwait
in
outsl
sbb
jg
lods
sbb
add
jo
lds
insl
out
pop
inc
jnp
dec
je
push
loopne
inc
xchg
mov
pop
mov
or
pop
cmp
xor
int3
imull
cmp
and
xchg
mov
cmp
push
ds
fbstp
loope
push
push
ret
sub
test
xchg
or
pop
mov
arpl
or
std
aam
adc
int3
or
fcompl
cmp
sub
into
and
mov
mov
push
jmp
add
cmp
int
aad
int3
ljmp
gs
pop
adc
xor
push
push
shl
stos
sub
sbb
pop
xor
lods
cmpl
addl
aas
push
pop
jge
pop
sub
dec
mov
data16
mov
dec
or
js
js
xchg
nop
or
loopne
aas
push
pusha
pop
push
push
mov
push
xlat
mulb
into
and
mov
pushf
pusha
pusha
aas
test
out
xor
out
ja
rcrb
insl
pop
rcr
jle
xchg
inc
jmp
dec
cmp
mov
adc
dec
jmp
mov
ljmp
push
mov
add
jle
icebp
inc
mov
push
mov
mov
push
movsl
shrb
bound
clc
xchg
pop
ljmp
mov
and
imull
shlb
test
mov
or
inc
bound
and
mov
leave
icebp
loop
ficompl
jno
push
add
jo
jns
or
leave
pop
in
jg
dec
pop
stos
test
test
mov
cwtl
rcrb
cmp
cmp
dec
cwtl
stos
js
mov
push
dec
adc
inc
fs
mov
mov
xchg
mov
pop
arpl
and
jmp
fwait
mov
and
je
mov
jecxz
sub
pushf
ss
inc
adc
loop
sub
in
lahf
arpl
pop
int
out
inc
sbb
jae
in
dec
add
into
sbb
inc
adc
cwtl
bound
hlt
aaa
sub
popl
scas
mov
push
pushf
in
push
cmpb
cmpsl
lret
in
jb
dec
fld
pop
test
rclb
mov
movsl
mov
sbb
sub
mov
stos
inc
push
mov
cmpsl
or
movsb
jp
add
mov
sbbl
jbe
and
aam
push
push
fwait
mov
mov
ret
xchg
and
or
dec
setnp
mov
mov
push
pop
scas
hlt
shll
and
xchg
xchg
mov
or
cli
pop
xor
xchg
std
mov
btc
sub
lock
adc
push
adc
loopne
pop
mov
add
or
push
adc
clc
and
cmp
fmuls
mov
pop
fsubs
stos
sub
out
nop
cmpl
jp
andb
das
or
mov
pop
mov
cmc
or
jne
xchg
fld
push
incl
fildll
adc
insb
push
push
mov
pop
push
cmp
dec
xchg
push
jecxz
push
mov
push
dec
push
insl
inc
jbe
mov
mov
je
ret
push
xor
dec
insb
enter
pop
into
stos
mov
jg
xchg
fidivl
ja
shrl
cmp
jne
dec
sub
mov
push
adc
ss
jae
test
mov
stc
sub
in
sarb
out
push
xchg
lock
movsl
sarb
ljmp
inc
inc
lcall
cs
ljmp
inc
push
test
mov
dec
inc
jmp
out
jae
aaa
jle
xchg
dec
cld
sub
lea
ja
call
int3
out
daa
lret
out
stos
inc
mov
or
clc
push
pop
aam
mov
xchg
shl
add
sahf
dec
or
daa
nop
enter
mov
lret
sub
subb
xor
int
jecxz
je
test
sub
xchg
inc
int
aas
into
nop
sub
mov
jno
hlt
inc
loop
xor
cld
dec
push
cmpsl
xchg
lahf
jae
dec
xchg
pop
cs
cmp
scas
ja
es
shll
mov
lahf
shlb
adc
ja
inc
inc
rcll
cli
inc
insb
jge
loop
test
popa
pop
dec
push
and
lods
mov
repnz
push
loope
cmp
mov
inc
mov
pop
mov
mov
test
add
mov
cmp
ss
pop
push
jo
mov
jnp
ja
shrb
out
add
inc
imul
sbb
lods
pop
movsl
dec
adc
or
loopne
inc
pop
jmp
jecxz
jae
sbb
loopne
test
stos
insl
pop
pop
sub
dec
nop
lods
xchg
cli
push
and
add
mov
sbb
divb
jge
out
outsl
sub
pushf
das
mov
mov
pop
loopne
in
inc
js
and
and
insb
dec
and
bswap
adc
lock
mov
dec
add
sti
test
insl
pop
jnp
int3
outsb
sub
cmpsb
adc
lea
faddl
sub
mov
sub
sbb
insl
lahf
cmc
shrl
aam
and
sbb
pushf
push
or
ljmp
ss
cld
repnz
int3
jecxz
dec
sbb
push
cmp
cltd
shr
add
dec
xchg
outsl
loop
dec
inc
or
fstl
outsb
ds
sub
jno
in
lds
sbb
pushf
push
mov
adc
jl
xchg
xchg
dec
enter
pushf
add
xor
jbe
addl
mov
jecxz
es
or
enter
xchg
jp
addr16
xchg
jecxz
jo
mov
cli
pop
mov
sbb
or
or
popf
mov
fdivl
push
add
repz
mov
push
add
add
and
into
push
arpl
rolb
lds
aad
jmp
js
cmp
imul
nop
jp
daa
jle
mov
out
cli
seto
push
lret
push
gs
pop
mov
cmpb
pop
mov
into
jmp
fwait
jbe
sbb
add
pop
cli
xchg
popf
shll
negb
fsub
das
subl
sbb
adc
inc
mov
aam
add
sti
addr16
sbb
pop
loop
lret
je
pop
adc
adc
or
popa
cli
movsb
movsl
jbe
push
mov
arpl
aam
lret
shll
add
or
jmp
repnz
xor
mov
sbb
pop
mov
cmpsl
push
hlt
inc
popf
or
shl
add
insl
xor
mov
rorl
inc
mov
mov
sahf
adc
sub
jge
mov
test
movsb
add
dec
gs
xor
jo
enter
lahf
jl
rorb
or
or
outsl
mov
clc
shll
iret
mov
stos
pushf
and
js
jmp
sbb
jg
xor
and
pop
jae
fstl
stos
lds
xor
out
jge
mov
int3
sub
xchg
jae
pop
stos
jae
pop
push
sub
push
adc
xlat
pop
pop
inc
in
xchg
adc
inc
pop
std
sub
xor
cmp
mov
aad
xchg
lock
insb
lcall
pop
leave
mov
fsubrl
jo
sub
pop
mov
lock
mov
subl
sub
and
mov
and
jo
shrb
sbb
jb
inc
test
inc
xor
push
inc
or
ret
dec
aam
sbb
fdivrs
cmpsl
in
mov
xchg
es
out
roll
outsb
mov
pusha
push
or
lods
popa
or
jg
jnp
jl
movsb
gs
ret
addr16
jmp
jecxz
cmp
xor
cwtl
cltd
cmc
mov
mov
push
adc
cmp
lock
lods
jmp
pop
inc
push
add
push
push
cs
mov
dec
xchg
in
and
add
loop
fistl
mov
inc
lret
cmp
mov
pop
mov
jne
add
xor
sbb
xor
setp
mov
dec
int
jl
sub
jmp
jo
jl
mov
dec
adc
xlat
pop
pusha
addl
cwtl
mov
sub
xlat
ss
push
sbb
arpl
xor
mov
in
inc
push
ret
popa
pop
adc
xor
mov
mov
mov
cs
shlb
inc
add
outsb
stc
adc
loope
hlt
or
pop
repz
xchg
jl
pop
bound
vmread
or
mov
push
out
imul
dec
dec
xor
dec
in
sub
jbe
pushf
dec
dec
xor
and
int3
sti
sbb
sbb
scas
sbb
pop
mov
mov
pop
cmp
nop
adc
mov
stc
mov
jo
push
fisttpl
push
leave
mov
add
mov
sub
daa
push
pcmpeqd
bound
std
cmp
es
sbb
xor
inc
xchg
popa
pop
rorb
jae
out
mov
cmc
rcl
movsl
jo
decb
cltd
ja
aaa
mov
and
pushf
lods
xchg
cmc
rorb
push
aas
push
jno
mov
dec
push
or
ret
jp
push
iret
test
jecxz
in
test
je
sub
roll
fst
lea
jge
push
mov
lds
call
lret
in
mov
jb
xchg
flds
and
sti
sub
push
cmpb
xor
aaa
testl
jnp
jl
mov
pmuludq
mov
es
outsb
and
sub
dec
repnz
cmp
loop
stos
and
and
in
shrb
mov
or
or
rcl
lahf
xchg
and
sbb
dec
cmpsl
ss
inc
subb
or
dec
jge
pop
repz
fs
mov
movsl
stos
jge
sbb
addl
test
or
inc
xchg
mov
mov
dec
loopne
aad
pop
jmp
add
jno
jecxz
sub
fisttps
fnstenv
and
mov
es
shll
mov
dec
cmp
or
inc
and
lods
outsb
sbb
adc
pop
or
leave
cmp
addr16
sbb
mov
js
mov
jnp
mov
loop
mov
jno
or
fwait
dec
mulb
jmp
imul
add
mov
dec
sub
push
sub
in
scas
sbb
loope
stc
add
inc
and
loopne
add
sub
jno
int
lock
das
xchg
xchg
push
inc
cmp
lock
sbb
shrl
pop
dec
pop
cs
push
loopne
xchg
xchg
mov
or
fmull
inc
pop
mov
and
dec
out
insb
cmp
scas
push
in
popl
outsl
or
dec
and
mull
out
xchg
imul
nop
test
xor
out
xchg
pop
jmp
or
or
push
testb
inc
or
insb
pop
adc
addr16
push
xchg
jnp
push
ret
mov
xor
mov
dec
or
xchg
hlt
notl
dec
gs
pop
sub
inc
push
push
insb
push
rcll
addr16
pop
add
mov
nop
or
cld
fldt
jns
or
jle
dec
xor
sbb
push
arpl
test
cs
movsb
mov
sub
push
inc
icebp
jle
push
xlat
es
aas
cmpsb
in
cmp
push
jmp
and
fwait
and
mov
mov
inc
cwtl
je
cmp
dec
test
aad
push
jbe
jne
xor
fsubp
movsl
jg
inc
cltd
jecxz
ss
inc
mov
add
mull
test
xor
nop
vmwrite
out
call
jbe
orl
inc
lea
icebp
jbe
lock
rcll
lahf
push
add
and
sti
mov
loopne
movsb
cli
popa
pop
jo
icebp
je
and
mov
ss
cli
push
dec
in
jb
pop
mov
pop
mov
dec
lods
cwtl
lods
jnp
out
cli
add
sub
cmp
push
jle
movsb
es
pop
nop
popa
mov
cmp
jns
mov
sti
lahf
jge
push
xor
sub
adc
jle
inc
inc
mov
decb
stos
jae
adc
jne
jl
jbe
xchg
xor
push
or
lahf
dec
cs
mov
dec
sbb
inc
fdiv
js
stc
sarb
in
pushf
outsb
mov
call
clc
sbb
mov
pop
inc
xchg
lea
sahf
dec
inc
cmp
sbb
sub
lret
mov
ja
mov
out
push
xchg
mov
loopne
int
pusha
insb
pop
cmpsb
dec
dec
jo
xchg
clc
jb
jne
sahf
inc
push
lcall
test
hlt
cmp
adc
pop
or
push
mov
push
in
sbb
test
les
pop
cmpsl
lods
cmpsb
inc
sub
out
xlat
jecxz
jae
inc
cmp
fdivrs
adc
xor
hlt
sub
xor
repz
push
jmp
in
aaa
fwait
pop
xchg
sub
xchg
lock
sub
mov
and
cmp
xor
popf
in
dec
arpl
scas
cmpsb
scas
mov
xor
pushf
std
fwait
push
xchg
lcall
xchg
orb
in
xchg
jge
inc
cli
aam
or
adc
pop
cmpsl
xor
lods
int
aad
dec
addr16
jg
jbe
fmull
into
nop
push
div
pop
mov
jg
cmpsb
aam
sbbb
adc
sbb
push
and
cmc
xlat
adc
sbb
cwtl
sbb
or
out
adc
aam
push
test
sbb
push
cmp
adc
leave
push
mov
out
adc
mov
dec
sti
in
and
mov
shlb
scas
scas
or
imul
fnstsw
gs
das
into
lcall
iret
mov
push
fcomps
add
push
jae
mov
cmp
push
je
mov
rorb
mov
idivb
add
das
push
lock
pop
xor
lea
ficoml
aad
xlat
dec
jbe
inc
push
icebp
fdivs
fsub
cmp
pushf
fdivr
cmp
mov
xchg
fdivr
icebp
repnz
cmp
push
and
or
mov
sub
lret
cmp
icebp
pusha
and
mov
push
jle
inc
loope
jp
aam
addr16
mov
decl
sbb
out
cmp
sub
or
mov
xchg
jne
sub
js
jle
push
mov
push
loopne
cmc
sub
pop
mov
out
imul
xchg
out
sbb
lods
add
push
hlt
cmp
xor
adc
ljmp
mov
or
mov
add
mov
inc
jo
cmpb
mov
push
mov
mov
xor
cmp
jp
ret
mov
sbb
mov
push
pop
or
aas
sub
mov
jno
ss
jge
or
mov
mov
dec
push
js
fstpl
cmp
or
sbb
mov
test
mov
xor
sbb
in
in
jb
inc
ja
mov
cltd
pop
in
fsubl
fs
les
mov
ds
gs
orb
jl
pop
push
inc
dec
test
adcb
or
repz
fisubl
jne
and
cmp
in
jmp
int3
mov
or
daa
sub
jmp
dec
pushf
xor
fwait
stos
xchg
loop
xor
test
sbb
lret
call
dec
into
dec
stc
add
adc
mov
cmp
xchg
f2xm1
sbb
inc
mov
add
lea
pop
mov
cmp
lcall
ja
popa
jbe
cmp
movsb
and
les
and
or
xor
cmp
std
sar
or
clc
xchg
shl
mov
inc
js
xor
cmp
insl
insb
scas
push
cmp
lods
dec
popa
dec
out
js
jb
les
mov
sahf
push
mov
orb
dec
popf
push
sti
fdiv
push
std
xchg
lods
push
fsubs
push
aas
cmp
xchg
rclb
pop
loopne
js
xchg
ds
dec
and
or
and
test
ja
sbb
lea
mov
pop
mov
mov
aam
xchg
mov
sbb
in
push
mov
pushf
jno
inc
and
dec
out
fidivrl
dec
daa
into
lea
jnp
int3
mov
insl
inc
test
rol
bound
cmp
jg
movb
imul
sbb
xlat
add
inc
ja
test
sbb
jmp
call
or
push
mov
mov
add
popf
sub
ja
mov
and
jne
repz
mov
and
adc
or
jb
pusha
imul
repz
addr16
jecxz
jmp
sub
cmpsb
mov
js
xor
das
push
cmpsb
in
xchg
stos
pop
add
pop
jo
dec
pusha
movaps
subb
sbb
out
pop
mov
cwtl
movsb
aam
sbb
push
or
imul
fs
negl
insb
and
adc
outsb
dec
mov
mov
and
lods
pop
stos
rclb
push
sbb
repz
daa
mov
xchg
inc
inc
fisubrl
ds
sbb
jl
sbb
dec
shr
or
mov
sbb
fnop
sub
jge
ja
cmp
rcrl
jb
pop
inc
aad
jb
pushf
lods
jecxz
aad
andb
adc
xchg
jle
jne
rol
inc
sbb
movsl
pop
fs
fnstenv
lods
movsb
mov
mov
movups
mov
add
cwtl
js
paddsb
pop
mov
add
sub
sbb
icebp
xchg
pusha
fcomps
cmp
cmc
mov
cmp
imul
push
push
or
mov
scas
pop
aaa
lods
and
jmp
movsl
lods
lds
aam
insl
loop
fwait
xchg
xor
lea
jmp
shrl
inc
loop
mov
dec
and
mov
jecxz
mov
or
cmc
adc
pusha
xor
fstpl
cmc
mov
fadds
gs
scas
pop
scas
in
xchg
icebp
call
js
arpl
sub
pushf
ret
xor
xor
int3
fildll
push
push
and
aas
sbb
xchg
add
cli
insb
jmp
outsb
dec
add
lahf
shlb
sbb
sub
or
xor
out
pop
jecxz
or
jmp
in
pop
lcall
adc
ror
dec
push
or
pop
cvtdq2ps
popa
insl
push
test
pop
pop
pop
adc
jae
push
repnz
push
imul
pop
xor
mov
loope
dec
add
add
sbb
ss
cwtl
aad
movsl
sbb
adc
cmp
aad
aad
adc
inc
pop
and
lock
mov
xchg
movsl
in
and
push
fcompl
loop
and
ret
mov
sub
fcompl
xchg
mov
pushf
cmpb
sub
stos
int
in
lods
movsl
ja
cmp
mov
pusha
aam
inc
adc
jge
lods
or
push
aam
movsl
or
rcrl
mov
sub
jb
shl
iret
pop
stos
gs
in
pop
jae
jae
or
xchg
pop
clc
add
sub
hlt
mov
mov
sahf
mov
fwait
jbe
rcr
mov
daa
int
xchg
insl
pop
outsl
cmpsl
lods
add
adc
gs
cmp
cmpsb
sub
into
adc
sub
fnstsw
sub
cmc
fbstp
lods
movsl
cmp
ja
aad
sbb
lret
test
dec
mov
in
mov
push
or
cwtl
sbb
lock
shr
xlat
pop
js
dec
fcompl
int
and
jno
jns
mov
scas
ss
nop
lods
mov
shl
pop
cmp
pop
cmp
mov
cld
mov
in
aaa
push
adcl
pop
cmp
in
imul
mov
inc
stc
mov
cmpsl
sub
cmp
or
pop
cmp
out
bound
add
xor
sarl
ret
cmp
rcrb
std
into
cwtl
data16
sbb
inc
loopne
pop
jl
test
fisubs
icebp
mov
cmc
sbb
outsb
mov
ds
out
sbb
cmp
and
imul
mov
popa
pop
in
xor
inc
or
shll
xchg
stos
jecxz
pop
and
pop
lret
xchg
xchg
mov
les
and
jmp
cli
mov
les
js
inc
insb
xchg
sub
mov
inc
mov
mov
aas
sbb
ret
jp
and
adc
rcl
in
lahf
sub
pop
mov
stos
push
test
loopne
sub
adc
sarb
and
mov
leave
sub
jl
jmp
jl
add
dec
loop
imul
in
and
inc
cltd
mov
or
cmp
push
pcmpgtb
fisubl
sarb
mov
test
push
mov
mov
inc
adc
imull
mov
mov
fwait
pushf
inc
push
jle
std
cli
mov
jmp
xchg
leave
add
lahf
dec
aad
cli
mov
add
movsb
push
xchg
test
add
sub
lret
xor
mov
xchg
js
sbb
inc
jmp
sbb
lret
aas
pop
iret
cmpsb
mov
out
inc
mov
mov
test
insb
dec
cltd
fnstcw
xor
add
fwait
inc
inc
mov
aad
xchg
loopne
sti
daa
sbbl
xchg
dec
pushf
dec
add
addr16
lret
push
or
mov
pop
push
jo
jle
loope
lods
lock
loope
loop
or
sar
cmp
pop
and
mov
sbb
icebp
sub
into
jmp
rcrb
std
fwait
sti
popf
sbb
push
out
push
das
in
clc
add
xor
imul
test
jbe
pop
shrl
dec
in
xchg
lock
enter
xor
xchg
cmp
add
data16
or
stos
rorb
div
jg
jb
mov
sbb
fimuls
inc
addr16
mov
scas
dec
movsl
movsb
xchg
out
sub
outsb
repz
push
and
inc
push
mov
push
test
sub
xchg
cwtl
inc
in
mov
inc
mov
cmp
sti
popa
mov
sub
adcb
mov
aam
or
into
adc
push
pop
push
inc
cmpl
stos
test
jo
out
lahf
xchg
mov
daa
into
repnz
cmp
xlat
sti
ljmp
insl
mov
jnp
dec
je
mov
jb
or
mov
mov
mov
sub
mov
dec
into
cmpsl
mov
ljmp
xchg
fnstenv
stos
bound
dec
jns
fwait
mov
adcb
mov
inc
cmp
inc
in
out
adc
fmuls
add
ds
fidivl
lret
leave
or
or
xchg
jg
hlt
dec
push
out
inc
in
mov
scas
push
repz
cli
jg
xchg
cmp
mov
test
fdivp
cld
add
dec
dec
mov
lods
ret
cli
and
xlat
jo
mov
cwtl
inc
gs
test
push
or
ds
push
aaa
popf
and
outsb
lds
adc
and
rorb
jbe
jle
xchg
mov
into
fs
mov
sbb
fldcw
out
lods
dec
arpl
fcompl
insl
fisubrs
jecxz
imul
out
or
cmc
mov
in
adc
iret
fnstsw
jne
and
dec
push
cmc
push
push
je
mov
pusha
adc
hlt
push
loope
jge
mov
stos
xchg
outsb
aas
mov
adc
cli
or
cmp
or
test
pop
imul
mov
sbb
mov
hlt
int3
dec
fisttpll
outsb
jo
dec
ss
adc
enter
js
cmp
ret
xchg
dec
lods
fs
cmp
mov
addr16
ljmp
shrl
cmp
movsl
jle
mov
fcoms
add
dec
frstor
or
sub
aas
shlb
pop
lods
imul
imul
pop
jge
xor
sbb
jne
mov
pop
mov
and
test
jmp
ljmp
sarb
xor
sbb
push
call
xor
stc
fcompl
scas
sub
xchg
lods
pop
xor
mov
jcxz
dec
pushf
inc
xor
inc
mov
sub
xchg
push
fldt
fadds
inc
cmc
sub
sbb
lods
mov
fadd
dec
add
sti
add
mov
inc
mov
jno
imul
std
dec
aam
pop
jae
lcall
stos
sub
inc
rolb
pop
rcll
out
add
jecxz
fdivrp
push
inc
and
fistl
cmc
and
addr16
cmp
lret
int3
inc
mov
inc
pop
jb
cmp
or
xor
enter
adc
ret
test
and
push
in
call
mov
sub
and
hlt
popa
xchg
cmp
cmp
jo
popf
test
nop
mov
out
repz
loop
inc
fwait
push
les
ds
cli
iret
xchg
stos
xor
or
jno
popf
stc
leave
out
push
aas
aaa
shrb
out
mov
imul
xor
in
imul
cmp
push
lea
subb
jnp
negb
pop
add
test
pop
push
pop
ret
xchg
lea
mov
adc
adc
imul
in
mov
add
adc
xchg
cmpl
adc
mov
jb
mov
fldl
xchg
cld
mov
enter
cmpsl
dec
aad
scas
ret
sub
popa
stos
inc
xlat
jecxz
and
cmovs
jmp
pop
into
cmp
shrb
jle
dec
jge
fwait
and
mov
inc
xchg
rcrb
pop
bound
sub
cmp
test
adc
sbb
inc
jb
adc
or
pop
fwait
or
or
mov
sti
scas
lods
or
push
sahf
inc
rorl
shl
enter
xor
in
outsb
mov
mov
stc
or
sahf
in
inc
jb
xchg
or
jns
adc
idivl
add
pop
push
mov
cs
pushf
shl
jle
mov
fdivrl
mov
rcrl
xchg
dec
mov
mov
daa
dec
xor
daa
dec
aaa
cmc
lods
aaa
cmp
in
arpl
push
lret
ficoml
ret
mov
push
fists
lret
lock
cmp
loop
mov
jg
xchg
and
mov
or
cld
cld
push
jmp
add
stos
in
fists
jmp
cmp
dec
sub
xor
shl
into
mov
mov
lret
mov
jbe
inc
mov
push
repnz
inc
xchg
lret
mov
add
xor
pop
into
rorb
imul
lret
push
jp
and
or
lahf
mov
mov
push
jmp
lcall
insl
out
lret
add
xchg
imul
mov
and
mov
test
cmp
jmp
mov
mov
dec
mov
adc
sbb
add
sbb
inc
shr
or
pop
dec
xchg
mov
dec
fbld
bound
mov
lds
stc
fwait
insl
aas
xchg
into
lret
push
das
out
mov
mov
sahf
inc
mov
inc
jmp
or
cs
insl
shrl
pop
fisttpll
mov
shrl
das
jne
xchg
jns
daa
inc
arpl
adc
add
sahf
aam
add
sbb
push
jno
jl
fildl
notl
cltd
push
repz
push
shlb
pop
jbe
jb
ljmp
pusha
into
pusha
cmp
shrl
cmp
or
pop
rorb
cld
xchg
int3
addr16
ja
push
iret
xlat
jae
ret
sbb
lahf
pop
push
jnp
push
xor
jns
lock
cld
cltd
shlb
xor
jbe
jmp
push
cmp
jae
loop
inc
or
popf
dec
or
xchg
dec
aam
xor
pop
adc
pushl
mov
xchg
mov
pushf
mov
mov
div
ds
popf
mov
cltd
popa
in
inc
jp
fadds
adc
xor
push
shl
lock
dec
out
mov
cmp
mov
scas
and
js
jne
add
leave
cmp
fdivrl
ja
push
addr16
in
dec
cmp
inc
mov
cmp
mov
imul
push
dec
add
fsub
push
mov
aas
sbb
out
xor
pop
ds
or
sub
and
lods
in
xchg
xor
add
dec
push
jp
mov
std
push
pop
pop
cmpsb
push
int3
jae
clc
lods
sub
fabs
in
clc
mov
stos
mov
push
jne
push
ja
jl
push
mov
dec
into
xchg
inc
sub
mov
jecxz
dec
es
add
mov
hlt
mov
in
and
lcall
sbb
xor
leave
xchg
lahf
dec
dec
add
clc
xlat
hlt
mov
mov
insl
and
je
dec
lea
lret
js
cmpsl
aam
or
loope
ljmp
rcl
into
sti
sub
repnz
mov
insl
test
lret
mov
loopne
ficoms
cmpsl
xchg
mov
in
push
fsubr
aam
out
xor
cmp
outsl
xchg
icebp
push
pop
fisubrs
rol
push
mov
mov
fstp
mov
jle
push
out
add
push
xor
aam
jbe
into
and
nop
popf
es
cmpsb
data16
push
pusha
push
mov
mov
ja
pop
into
addr16
mov
pusha
sub
jle
xchg
mov
data16
mov
clc
fs
mov
or
mov
adc
cmp
or
xchg
les
inc
adc
fidivl
data16
jb
inc
je
lock
cmp
leave
hlt
fstps
mov
mov
sub
leave
dec
mov
add
lret
lret
mov
push
aaa
repnz
sbb
add
xchg
pop
insl
inc
xchg
xor
dec
clc
push
sub
jo
in
adc
insl
xchg
push
cmp
leave
xchg
push
mov
pop
mov
push
dec
fcompl
and
stc
and
std
add
cmp
dec
dec
mov
mov
fdivrl
bound
jnp
add
jl
jo
fldenv
stos
xchg
jae
mov
popa
xor
and
ret
aas
and
ss
sbb
mov
xor
popa
addb
add
ret
ja
or
xor
aaa
push
sub
jge
repz
pop
mov
fiaddl
aad
push
or
pop
test
xor
dec
cmpsl
cli
jmp
mov
inc
test
arpl
adc
iret
fstpl
fwait
jmp
push
sbb
inc
mov
pusha
scas
mov
insl
push
cmc
nop
test
sbb
in
test
and
adc
xchg
dec
insl
ret
shll
inc
mov
mov
or
xor
and
pop
jl
jg
icebp
out
in
push
shr
mov
xchg
mov
adc
pop
mov
jbe
loop
lahf
aam
ja
push
std
ljmp
pushl
dec
jne
mov
stos
xor
orl
or
ljmp
or
and
fwait
lods
jl
lret
sbb
imul
fwait
jp
push
jl
jle
ja
sub
push
mov
xor
dec
and
mull
push
adc
in
mov
xchg
jae
sbb
mov
mov
xchg
mov
cmc
daa
inc
xor
inc
add
test
mov
jmp
hlt
cs
pop
cwtl
dec
loopne
mov
syscall
aam
and
fwait
lcall
dec
adc
insl
jle
mov
dec
pop
push
xchg
and
cmc
fimuls
jge
mov
movsb
adc
fcoms
xor
imul
mov
add
decb
inc
mov
mov
and
out
fwait
aas
pop
mov
icebp
in
mov
movsl
push
adc
pop
subb
add
sbb
jae
subb
pop
sbb
add
out
sub
lret
pop
lahf
cwtl
push
add
test
pop
pusha
in
mov
dec
and
mov
test
stos
inc
jnp
mov
cmp
aad
and
mov
insl
xor
jb
mov
jb
mov
mov
addr16
iret
mov
dec
dec
rolb
mov
pusha
pop
iret
mov
testl
xor
sbb
xchg
and
mov
pop
loop,pn
test
jno
pop
into
cmp
dec
inc
sbb
adc
xor
mov
jg
mov
iret
aaa
or
push
cmc
push
push
and
pop
push
mov
push
movb
cmc
jno
mov
sti
negl
mov
rcrb
stos
data16
jg
fcmovnb
popa
mov
add
mov
insl
jge
in
jb
and
xlat
scas
xor
lahf
cmp
mov
adc
stos
inc
xor
sbb
push
ficoml
mov
fistl
add
lock
aaa
inc
in
inc
or
sbb
je
mov
in
jp
cmc
cmp
insl
xchg
inc
sbb
and
inc
testb
sub
bound
sub
add
loope
cmp
cwtl
mov
out
iret
inc
inc
add
xchg
xor
outsl
ret
dec
mov
dec
push
sahf
mov
faddl
pop
ds
out
shrl
xchg
push
ss
mov
and
dec
mulb
jl
xorl
inc
hlt
and
push
mov
jae
int3
sbb
cli
sbb
mov
mov
test
xchg
sub
mov
xor
daa
add
adc
xchg
xor
or
lret
fisubrs
or
std
loope
out
clc
lods
loopne
dec
push
test
push
and
adc
rcrb
push
cmp
out
jne
in
pop
sbb
fs
cmp
sub
iret
xor
divb
sbb
into
int
jl
movb
movsl
sbb
lcall
xchg
jg
and
dec
loope
jns
fucomp
push
sbbb
jl
mov
xchg
jp
loope
ficompl
shl
aas
lods
in
push
ret
push
xor
xor
add
in
fsub
jae
mov
jae
cmpl
dec
dec
loope
int
and
jae
sbb
inc
imul
mov
jmp
inc
adc
in
sbb
mov
outsb
popf
add
div
jbe
push
add
outsl
testb
arpl
leave
vmread
stos
adc
mov
imul
adc
in
push
addr16
adc
out
and
ljmp
test
sbb
int3
jmp
inc
mov
test
out
arpl
cmp
insb
mov
sbb
negl
pop
fstpt
xchg
sti
push
inc
mov
adc
mov
sub
shll
aaa
xlat
jns
mov
cmpl
or
cmp
loopne
mov
and
mov
jl
push
mov
jne
and
or
aam
lock
inc
sbb
sub
mov
fwait
sarl
scas
aad
mov
js
jae
jle
dec
and
xchg
mov
enter
jae
cmp
sub
mov
inc
stc
aaa
inc
xlat
xor
or
or
negb
cmpsb
add
mov
ret
loopne
fstpl
cmpsl
adc
loope
inc
mov
fsubrp
push
cmovs
int3
xor
and
mov
divb
adc
cli
and
fs
pusha
movsb
out
sub
mov
push
push
pusha
cmp
jmp
adc
sub
xchg
enter
mov
mov
or
jg
push
mov
cmp
movsb
push
sub
cltd
sarl
sub
mov
sahf
mov
or
lods
aam
jecxz
xor
mov
add
adc
or
clc
ljmp
mov
mov
int
scas
jb
or
pop
loopne
or
pop
push
jg
pop
lret
aaa
push
cmp
push
and
stos
test
mov
arpl
push
cld
cmp
adc
adc
loopne
in
ljmp
ljmp
mov
dec
dec
mov
dec
jle
push
lods
out
xor
test
scas
cmp
stos
lret
ret
and
imulb
push
jge
mov
stc
lods
out
std
pminub
or
sbb
xor
repz
ljmp
adc
jp
xchg
aas
jmp
in
js
jbe
clc
ja
into
xchg
dec
shrl
sub
vpmulhw
sbb
enter
sbb
xor
xor
sub
xchg
lcall
sbb
jo
imull
addr16
push
jae
in
test
ljmp
inc
ss
cmc
and
jmp
pusha
mov
jb
jne
in
rcll
shl
lock
add
jbe
hlt
xlat
out
adc
sbb
and
pop
lods
popa
ret
push
loop
out
or
test
pusha
inc
filds
pop
jge
ret
mov
outsl
cs
push
cwtl
nop
fwait
adc
movsl
or
fmul
and
inc
cmp
mov
mov
cld
fstpt
je
outsb
inc
and
pop
out
dec
jno
lock
jnp
shl
mov
sbb
xor
push
outsl
mov
mov
orl
sbb
bound
or
add
shlb
cmp
jae
sbb
addr16
xlat
sub
mov
fdivrl
sub
lahf
pop
ret
cmpsl
mov
xchg
mov
shll
add
or
inc
xchg
cwtl
jnp
mov
mov
xchg
mov
mov
lods
js
pop
push
add
xor
mov
data16
jmp
inc
cmpsl
dec
xchg
pop
inc
stos
xchg
addr16
insl
sub
inc
shl
sarb
jb
inc
dec
data16
xchg
xor
adc
xchg
fadds
les
cli
jb
mov
jno
mov
inc
lret
cltd
addl
xchg
test
movb
shll
pop
cmp
pushf
cmp
outsl
mov
pop
psubsb
jg
fimuls
push
in
pop
arpl
nop
jge
pop
call
push
mov
sarb
mov
cmp
push
mov
adc
mov
mov
dec
or
inc
clc
mov
ljmp
test
popa
inc
les
adc
xchg
xchg
cmp
adc
out
enter
mov
in
mov
adc
push
mov
mov
sbb
mov
ljmp
out
fidivs
icebp
mov
sti
testl
cld
sub
and
mov
daa
ret
test
out
adc
int
out
fs
std
rol
int3
mov
mov
std
addr16
clc
enter
movsl
jbe
sbb
leave
out
gs
jl,pn
scas
push
hlt
xchg
xchg
popf
cmp
popl
xchg
cmp
pop
pop
lds
daa
mov
cmp
and
pusha
in
jmp
mov
sahf
pushf
mov
cld
adc
arpl
icebp
sbb
inc
sti
xor
insl
add
xchg
cmp
rcr
or
outsl
add
in
push
call
adc
out
push
ret
out
stos
sbb
cwtl
out
add
stos
pop
pusha
pop
dec
sbb
xchg
mov
mov
hlt
imul
adc
stc
sti
xlat
jg
ficomps
daa
pop
sub
pop
aas
cli
jns
inc
mov
out
add
mov
jmp
stc
pop
sti
dec
cmc
pop
inc
cmpsb
dec
sbbl
mov
adc
and
popa
jge
jns
sbb
and
aad
fidivl
sub
int
je
sub
insl
icebp
push
outsb
fsubrl
pop
xchg
ret
lock
in
fxch
loope
data16
in
jae
stos
gs
leave
push
mov
insb
test
repz
mov
push
popf
sbb
push
dec
add
xor
je
filds
daa
stos
adc
adc
mov
iret
enter
fistpl
nop
mov
adc
pushf
or
dec
xor
lods
mov
adc
cmp
popa
mov
mov
push
pop
test
mov
popa
aaa
cmpsl
lret
or
outsb
push
js
mov
push
pop
imul
daa
jecxz
jnp
mov
aas
xchg
jb
loop
cmpsb
jmp
clc
lret
add
and
ret
sub
mov
or
xchg
fs
sbb
sti
mov
sahf
div
xor
sbb
movsl
popf
inc
addr16
jo
jbe
push
cld
jns
ret
outsb
movsl
sbb
jle
dec
or
inc
das
cwtl
shl
adc
aas
movsl
mov
pop
lods
shrl
fmuls
lcall
mov
int3
mov
cltd
sub
push
mov
test
enter
cli
bound
imull
in
mov
test
cmc
or
mov
pop
mov
aad
mov
arpl
outsl
cld
insl
leave
aaa
fs
arpl
jecxz
mov
fisttpll
stos
lret
rcr
ja
das
jle
mov
jge
cmpsl
xchg
in
sahf
mov
iret
stos
and
arpl
enter
or
test
movb
adc
addr16
push
arpl
mov
arpl
jbe
int3
mov
popa
cmp
insb
inc
and
out
inc
xlat
jl
inc
xchg
fnsave
mov
lcall
pop
mov
mov
fs
lahf
or
in
int
adc
mov
out
adc
jae
outsb
add
gs
pop
hlt
mov
iret
or
arpl
xchg
pop
mov
loop
dec
push
mov
sub
adc
ja
push
ds
pop
jnp
add
sti
lock
enter
push
out
xchg
nop
adc
rorl
ljmp
lahf
cwtl
jg
sbb
mov
sti
icebp
out
and
mov
out
push
stos
jae
cmp
movsb
push
rorb
xchg
and
jmp
xchg
pop
jp
sbb
repnz
cmp
push
aad
mov
mov
adc
mov
insl
test
jp
xor
rol
sub
ss
fists
jl
and
imul
mov
pop
notb
test
testb
sub
xchg
or
pop
mov
mov
into
inc
pushf
xlat
sub
mov
and
rorl
jbe,pt
xchg
xchg
add
jae
loope
jbe
movsb
jmp
insb
sub
hlt
mov
or
dec
xor
rcr
dec
jp
add
jo
mov
dec
mov
inc
mov
xchg
cmp
xchg
pop
pop
xchg
adc
xorl
adc
inc
cmp
push
int3
loop
jp
gs
sti
add
cwtl
jbe
pop
enter
inc
mov
addb
or
test
add
cmp
out
lock
ret
iret
xor
mov
xor
repz
add
lods
pushf
push
cmc
cwtl
push
mov
cmp
mov
mov
aam
mov
push
jno
cmp
adc
xchg
pop
out
cli
addr16
loop
out
and
jecxz
inc
and
movsl
repnz
add
or
lahf
jp
mov
xchg
mov
popf
andl
cmp
rolb
cmp
adc
mov
popa
cmp
mov
dec
fwait
xor
push
mov
cmp
in
xchg
dec
and
daa
mov
loop
cmp
jne
jbe
iret
call
hlt
call
rcl
cmp
xor
mov
int3
dec
loop
mov
iret
jo
mov
mov
adc
inc
test
repnz
into
fdivrs
or
lret
orl
scas
sbb
xlat
shrl
frstor
inc
inc
push
push
cld
xor
push
xor
and
sbb
lahf
pop
mov
and
push
clc
sub
rol
push
aad
cmp
lcall
aaa
pusha
pusha
push
jns
xchg
lret
jmp
repnz
out
jae
rol
sbb
push
int
mov
cld
inc
pop
xor
pop
push
sti
mov
pop
mov
rcll
xlat
push
pop
dec
loop
ret
insb
aam
cmp
jmp
pop
inc
cmp
cltd
gs
bound
repnz
sbb
xor
enter
rcrb
xor
sub
jmp
lret
shrl
and
movsb
sbb
mov
pop
pop
lds
sub
or
shlb
jno
ja
xchg
dec
pop
pusha
or
fcomi
mov
inc
add
or
pusha
jnp
sti
mov
inc
fimuls
jb
sub
mov
mov
add
cmpsl
shrb
push
adc
or
ss
sahf
jg
out
dec
or
pop
or
mov
inc
push
pop
dec
in
ret
into
cltd
adc
mov
xchg
dec
sbb
and
xlat
push
jle
je
in
jb
addr16
pop
cmp
ljmp
dec
clc
mov
push
ffree
xor
xchg
mov
repz
mov
decl
add
aam
loope
je
in
pop
insb
fmuls
jecxz
ret
shr
fwait
jg
mov
imul
ror
xor
sbb
mov
mov
sahf
dec
xchg
and
sub
cli
mov
cs
lret
fs
and
test
js
frstor
cli
lea
mov
mov
cwtl
cs
add
repz
xorl
decb
xor
push
shrb
loopne
inc
sub
mov
ds
outsl
mov
sub
push
dec
out
mov
jl
jmp
xchg
lea
xor
nop
dec
je
mov
and
adc
adc
jo
fbld
mov
sub
mov
mov
adc
dec
dec
call
cmpsb
jne
nop
xor
or
cmp
inc
jle
jns
and
mov
cmp
push
ret
mov
mov
popa
aam
and
adc
jb
pop
fwait
jp
flds
jp
jne
cltd
clc
movsl
popa
clc
fcompl
mov
jmp
divb
add
shlb
inc
outsl
popa
sbb
mov
mov
add
push
or
sbb
dec
mov
push
push
cs
or
add
sahf
xchg
or
nop
sub
leave
or
cmp
addr16
adc
push
mov
popa
xor
cwtl
add
xchg
std
push
jb
out
imul
fwait
cmp
and
into
fadd
xchg
fcomi
and
leave
or
out
and
lods
jo
add
inc
les
push
hlt
or
adc
test
outsl
inc
pop
xor
outsl
cs
ret
lock
cmp
jge
lcall
xor
fsubr
inc
inc
mov
sarb
lahf
xor
cld
daa
mov
push
jle
aad
pop
xchg
xor
jg
mov
aas
sbb
or
les
cli
dec
sbb
inc
or
cmp
je
fwait
xor
and
inc
mov
cmpsl
cmp
or
push
push
or
pushf
scas
add
xchg
cmp
and
out
loope
lret
scas
jmp
rorl
inc
push
adc
adc
push
dec
das
xor
popf
add
lcall
mov
hlt
jecxz
xor
pop
cmpl
lahf
mov
mov
cltd
mov
cwtl
flds
addl
add
and
aad
dec
push
or
mov
or
cmc
cltd
ds
rorl
mov
pop
cmp
mov
outsl
mov
push
push
cmp
sub
jmp
loop
loop
imul
cmp
push
fcoml
js
jp
ljmp
call
mov
ljmp
addr16
mov
aas
jecxz
cmp
and
add
jae
movups
and
int3
dec
int3
movsl
adc
loope
mov
sbbl
xor
ret
lcall
je
pop
pop
mov
fadd
dec
and
cmpsb
outsb
sbb
push
xchg
xor
jns
loope
out
cli
inc
data16
adc
cltd
scas
aad
push
jno
pushl
push
popa
pop
out
adcl
pop
add
lcall
loop
mov
iret
shlb
or
adc
xchg
sbb
nop
sbb
mov
adc
icebp
xchg
nop
jg
mov
daa
in
ss
or
pop
mov
ljmp
int3
outsl
cmpsb
and
lock
jnp
aad
cltd
test
shrl
int
iret
jbe
loopne
rcl
dec
movsl
or
dec
dec
pop
mov
adc
mov
mov
divps
cld
push
push
push
cmp
mov
xor
xor
cmp
imul
pop
push
xchg
and
cltd
ljmp
xchg
lds
sbb
sub
xlat
jne
xchg
iret
jp
xchg
xor
sbb
aad
iret
cmp
xchg
out
hlt
mov
mov
into
and
mov
jnp
mov
pop
ljmp
cmp
or
xlat
inc
push
xchg
cwtl
subl
xchg
and
or
std
lods
idivl
sbb
shl
test
cmpsl
dec
mov
loop
outsl
push
sti
mov
cmp
repnz
rcrb
push
sbb
add
sbb
ret
cli
xor
enter
dec
push
sbb
rcrl
mov
mov
add
mov
outsl
xchg
orl
test
cmp
push
ficoms
push
shll
or
mov
pop
aaa
dec
aas
sbb
je
outsb
jb
mov
xor
pop
mov
xor
adc
xchg
sbb
sbb
cmp
pop
fiaddl
fisubl
mov
push
notb
cli
cltd
push
mov
and
push
inc
imull
rclb
dec
out
and
sbbb
jl
out
iret
add
stc
insb
mov
andb
or
jg
hlt
aam
mov
dec
xchg
cmpl
fiadds
dec
stos
sbb
neg
adc
and
ja
jno
cld
pop
mov
mov
mov
mov
dec
push
xor
mov
mov
pop
movhps
adc
push
mov
add
sar
cmp
push
mov
jae
dec
cs
mov
jl
inc
data16
sbb
je
mov
mov
aam
inc
stos
mov
push
movl
xchg
cmp
and
fidivrl
popf
addb
js
dec
jp
ret
rorl
in
push
insb
sahf
jg
jns
or
sti
sbb
sub
in
jge
cmp
jo
arpl
dec
xorl
pushf
dec
test
add
pop
mov
adc
dec
sub
push
cltd
sbb
sbb
pop
psubw
and
xchg
out
cmp
fucomp
mov
ja
fsubr
sub
xchg
rcrl
push
sbb
or
test
inc
push
ljmp
lret
ja
sti
lret
mov
mov
mov
mov
push
test
mov
sarl
cs
or
sbb
jbe
cmp
vmovhps
sub
test
pusha
fdivl
lods
mov
popa
or
mov
je
dec
or
sub
mov
outsb
std
xchg
mov
insb
xor
cmp
mov
movsb
push
and
inc
mov
stc
cmp
movsl
pop
lcall
lods
leave
lret
inc
out
test
leave
stos
xchg
rcr
push
insl
ret
in
das
loopne
test
sub
mov
dec
loop
js
adc
mulb
adcl
push
out
mov
mov
inc
jae
pop
out
fwait
dec
add
cmp
lds
ret
rcr
inc
test
pop
call
xchg
mov
sahf
aam
xchg
test
imul
call
push
inc
xchg
flds
fbld
mov
inc
adc
arpl
js
mov
mov
adc
mov
jns
sub
jmp
jbe
push
push
jbe
xchg
movl
add
cwtl
push
test
inc
jmp
or
sbb
bound
rolb
xor
cmpb
push
add
push
xor
popa
dec
mov
ret
jae
lahf
sbb
faddp
add
stc
sub
mov
cltd
jmp
ret
sub
pushf
push
rcrb
sti
sbb
jno
push
sub
es
std
mov
and
out
in
les
jbe
jl
es
shrl
insb
jb
xchg
mov
inc
and
mov
add
fldenv
and
cltd
mov
in
mov
sbb
fdivs
jmp
adc
je
push
dec
aaa
adc
imul
pop
outsb
mov
repnz
xlat
xchg
mov
fstps
and
movsl
push
mov
int
cmpl
cli
mov
mov
jp
out
pusha
popa
inc
pop
insb
arpl
cltd
xor
mov
inc
cltd
popa
cwtl
dec
data16
int
cltd
mov
into
fldl
jbe
je
cmp
mov
mov
rclb
or
shrl
imul
sahf
hlt
fdivrs
jns
fs
repnz
pop
inc
sarl
into
cmpsl
sahf
test
cmp
hlt
pop
nop
push
movsl
cwtd
push
lret
mov
idivl
in
arpl
sti
flds
ljmp
inc
rorl
xor
daa
mov
dec
outsb
ret
jo
mov
cmpl
sbb
loop
mov
jns
mov
lret
incl
cld
jg
sti
jmp
dec
jl
lcall
jbe
popf
lahf
jbe
sub
sbb
mov
ss
mov
inc
gs
adc
rep
cli
fstps
push
loop
imul
neg
push
dec
insl
insl
std
aad
pop
push
add
dec
sbb
in
mov
push
stc
inc
call
push
sub
insb
pop
adc
jne
lret
outsl
xor
shll
and
xchg
ret
jbe
pop
push
je
add
insb
inc
add
cli
fwait
pop
fcoms
enter
add
cli
outsb
dec
popa
push
call
js
cmc
xchg
pop
notb
jnp
lea
xorb
cld
pop
mov
adcl
xlat
mov
out
cld
push
ret
mov
mov
add
push
jle
ret
jns
jecxz
jno
push
mov
leave
shll
ret
xchg
push
jb
dec
shll
inc
ja
outsl
insl
mov
std
ss
dec
jmp
xchg
clc
lods
pop
movl
push
push
sub
in
inc
lea
or
cwtl
shll
sbb
pushf
ffreep
sbb
int
push
scas
jle
xor
decl
imul
fldl
add
jle
jl
mov
cmp
pushf
inc
stos
add
jne
xchg
jnp
int3
xlat
jne
mov
insl
inc
cs
cli
fs
repnz
mov
ret
push
in
lahf
test
shlb
clc
sub
and
and
cmp
test
sbb
stc
repnz
lahf
jb
out
inc
cs
push
lcall
adc
xor
cmp
cmovae
nop
mov
rcrl
mov
je
push
mov
cmpsl
sbb
adc
cmp
ljmp
cli
mov
jo
je
es
imul
push
mov
shlb
cmp
sbb
mov
jmp
jnp
mov
cmp
jg
mov
jae
adc
in
mov
daa
fwait
cs
add
jnp
movsb
push
add
sarb
push
std
inc
jecxz
push
cli
js
hlt
sbb
mov
lds
shlb
cmp
cltd
dec
mov
dec
sti
out
adc
jae
mov
pop
pop
pop
lods
push
mov
pop
ds
mov
jne
xchg
scas
cmp
sbb
addl
loop
andl
bound
adc
inc
pushf
pop
rcl
inc
xchg
inc
or
jmp
and
scas
lcall
jne
or
or
out
add
or
pushf
out
push
test
jo
xor
in
or
sub
lcall
push
dec
sbb
push
xorl
dec
push
out
adc
xor
iret
sbbb
jbe
xchg
je
outsl
sub
adc
xor
scas
pop
insl
dec
lcall
or
test
aad
popa
mov
fdiv
or
lcall
pop
add
and
push
ss
ljmp
call
leave
pop
mov
les
mov
sbb
cmp
jmp
arpl
mov
rcrl
arpl
aas
mov
sub
out
cmp
pop
and
into
rorl
test
sbb
movsb
mov
lods
mov
lea
imul
xor
sub
cmpsl
fldt
mov
lahf
mov
xchg
shrb
jecxz
mov
or
lods
or
push
dec
sub
jae
xchg
cmp
xchg
jo
idivb
lods
pushw
jo
ret
pop
stos
fildll
ficoms
fildll
xor
ljmp
sbb
lret
lock
stos
inc
mov
adc
xor
jl
pusha
mov
cli
dec
stos
mov
jg
mov
out
cmp
aas
mov
aas
pop
mov
inc
aas
fdivrs
inc
out
es
inc
cmp
adc
lcall
and
fs
cmpsl
hlt
pop
sbb
push
mov
sbb
push
mov
add
in
xchg
test
aaa
cs
iret
pop
push
fldl
mov
aam
xor
in
lcall
pop
aaa
test
push
pop
rolb
movsb
sbb
fidivrs
shl
pop
push
sbb
lret
cli
adc
cwtl
dec
push
or
out
jmp
fdivrs
lahf
sarl
cmp
dec
dec
insb
and
push
in
pop
lahf
fsubl
mov
sahf
std
mov
cmp
inc
movb
and
das
jmp
xchg
push
jns
cmp
adc
scas
sbb
pop
inc
stos
push
repnz
lcall
xchg
fwait
xchg
hlt
subl
sbb
inc
ret
movsb
sub
cmc
or
xchg
ret
addr16
cmp
test
in
xchg
mov
loop
out
bound
dec
inc
cld
addr16
fidivs
inc
inc
mov
mov
sbb
mov
popa
xchg
loope
mov
jecxz
inc
xor
mov
bound
jae
stc
cli
lea
ret
pop
pop
test
hlt
stos
lock
xchg
mov
nop
push
icebp
jg
rcl
add
fldcw
popf
lods
inc
fcompl
mov
or
sub
fcoml
inc
mov
fsubs
in
loope
inc
add
int
int3
mov
out
lcall
jge
pusha
lods
cwtl
rclb
pushf
push
fs
xor
cmp
pop
scas
push
lea
inc
xchg
arpl
and
jne
test
dec
or
pop
arpl
mov
cmp
cmp
stos
int3
pop
imul
push
xor
pop
ss
dec
iret
mov
jmp
xchg
sbb
sbb
cmp
lock
jae
cmp
and
mov
mov
sub
cmpsl
mov
mov
cmp
xchg
push
fwait
inc
jmp
jb
lea
popa
sarb
mov
pusha
sbb
push
xchg
push
mov
xorb
fdivs
add
pop
jp
push
jle
xor
or
das
loopne
or
jns
cmc
lods
mov
xchg
push
sbb
push
mov
xchg
mov
test
subb
iret
adc
enter
cmpb
jg
clc
insb
movsl
lock
adc
cmp
adc
dec
sub
stc
fucom
cs
movl
inc
mov
pop
js
inc
roll
sub
sbbb
fxch
adc
sti
xor
mov
into
pop
shlb
xor
ljmp
pop
cmp
push
mov
push
mov
dec
fldenv
fs
and
mulb
adcb
ss
shrl
mov
in
outsl
dec
dec
mov
xchg
filds
inc
dec
mov
jns
in
dec
in
leave
imul
add
cs
nop
cmc
ret
pop
pop
or
test
or
dec
rcll
sub
and
push
cs
scas
daa
cmp
adc
xchg
orb
jnp
fistl
jg
movsl
pop
pop
outsb
cltd
cmpsb
inc
sarb
aad
popf
mov
and
frstor
xor
popa
sub
movsl
and
xchg
outsl
out
fstps
addl
ljmp
xor
fadds
ja
push
jbe
push
xor
push
or
pusha
bound
int3
pop
in
xchg
push
movsb
in
cmp
cld
mov
fbstp
in
fisttpll
dec
jp
iret
jle
sbb
aas
mov
lea
pop
ret
mov
xor
xorb
fdivrs
xchg
cwtl
jnp
or
push
cmc
in
sbb
inc
loope
add
outsb
shll
hlt
into
enter
or
stos
loope
mov
fadds
ret
jnp
daa
gs
icebp
ret
sub
xchg
scas
pop
push
xchg
lds
push
xor
dec
and
push
nop
push
inc
add
shrb
xor
leave
lahf
ret
subl
xchg
pop
fldcw
testb
xor
lods
push
inc
nop
movsl
lds
ss
mov
repnz
sti
lea
push
repz
adc
xchg
in
outsb
or
nopl
lea
sbb
pop
adc
push
ss
mov
fdivrl
repnz
inc
pop
nop
dec
jns
sar
xor
or
scas
jae
dec
sub
sub
aas
add
insl
stos
jo
mull
fstl
faddp
inc
cmp
stc
inc
cli
push
clc
lods
icebp
mov
jae
adc
sub
sub
movsb
jns
call
ss
dec
sub
add
and
jp
fstps
leave
pop
inc
cli
lret
inc
imul
mov
and
xchg
xchg
lret
pop
insb
dec
shlb
mov
in
pushf
loop
sub
ljmp
js
mov
cwtl
not
inc
shrl
lock
sbb
pop
jbe
mov
adc
pop
std
lret
xor
test
mov
xchg
adc
aad
adc
lock
xchg
sti
ficoms
mov
int3
shlb
mov
nop
mov
sbb
push
cmpsb
dec
out
sub
lock
and
cmp
add
push
add
and
ja
and
dec
loope
ficompl
push
xchg
push
or
pop
lods
stos
and
sbb
dec
or
sub
enter
pop
cli
jmp
lods
push
sub
pop
add
lea
and
loopne
xchg
add
shl
mov
push
out
das
lods
hlt
sbb
jb
sbb
subps
cmp
push
enter
idiv
ljmp
pop
stc
xor
rcrb
stos
inc
fisttps
adc
in
push
mov
loop
pop
out
ret
incb
xlat
or
jns
out
cmp
lahf
fwait
pop
out
inc
scas
jg
adc
rclb
sar
lock
or
icebp
cmp
and
loop
mov
sub
jecxz
addb
jp
cmp
stc
dec
xor
xor
push
int3
mov
cwtl
into
mov
mov
jecxz
insl
je
pop
mov
out
inc
mov
in
add
test
xchg
cmpsb
adc
cltd
rol
in
mov
lgs
mov
mov
test
lods
rorb
pop
xlat
test
cmc
cmpsl
mov
shrb
sub
rorl
je
add
adc
pop
imul
jo
jg
dec
in
inc
pop
gs
sbb
xchg
sub
mov
daa
ja
xorb
psrlq
inc
sarb
roll
cmpsb
rclb
jbe
dec
test
xchg
or
sbb
cmp
push
imul
push
mov
icebp
dec
jns
mov
inc
sbb
or
dec
dec
add
push
int3
loop
cmp
movsb
rcrl
lds
jg
fimull
data16
aas
int3
hlt
fimuls
mov
out
inc
dec
push
push
hlt
xchg
int
fcoml
or
adc
das
out
jge
pushl
mov
xor
fnsetpm(287
xor
scas
addb
rcrl
jle
xor
stos
mov
out
xor
push
popa
pop
xchg
or
push
adc
pop
scas
std
push
mov
fstps
inc
dec
sbb
push
imull
lcall
ds
jg
mov
xor
pop
in
les
sub
ficompl
fsubs
pop
imul
jle
je
pop
jo
and
stos
pop
sub
xor
xor
hlt
cs
mov
movsl
repz
mov
mov
dec
push
arpl
int3
mov
dec
mov
cmp
xor
mov
pusha
enter
inc
mov
jbe
lcall
imul
and
ret
sarb
mov
mov
mov
daa
xor
push
inc
sarl
mov
dec
idivl
mov
loop
inc
cs
pop
scas
test
les
lods
aas
fstl
xchg
push
xor
pop
insb
push
xchg
mov
outsb
jae
pop
test
pop
push
cmp
xchg
loope
inc
adc
fisubs
add
cltd
into
shrb
int
mov
push
das
daa
cltd
cwtl
lods
jl,pt
mov
xchg
push
jae
inc
daa
loop
push
sbb
lret
adc
cld
sbb
andl
xor
add
faddl
stos
divb
inc
aad
neg
cmpsl
gs
cli
xor
inc
pop
mov
xor
push
scas
pop
adc
loope
bound
daa
mov
jge
xchg
in
je
adc
ret
repz
mov
push
dec
out
sbb
or
jbe
fldenv
push
test
clc
addr16
sbb
add
jp
sti
aam
pop
and
hlt
arpl
bound
inc
test
sub
test
or
daa
or
xorl
popf
adc
jecxz
out
xchg
mov
stos
mov
pop
pop
daa
xchg
mov
fsin
push
sbb
sub
cltd
ljmp
fcompl
cwtl
or
mov
rolb
ljmp
inc
aam
xor
faddl
and
cli
test
jp
jge
push
xor
mov
cmp
stos
or
mov
mov
adc
or
sub
jns
cmp
shrb
sti
out
lds
repnz
sbb
test
mov
xchg
lcall
xlat
dec
inc
es
outsb
push
pop
mov
call
lods
pop
cltd
data16
dec
lret
and
jge
pop
pop
icebp
jl
pusha
ret
int3
xchg
xchg
insb
mov
pusha
out
jns
in
add
stos
mov
jae
mov
rcrl
mov
iret
aam
cmp
push
roll
je
push
pop
lcall
hlt
filds
test
cmp
push
inc
inc
xor
dec
shlb
and
xor
add
rolb
fisubrs
fwait
js
add
js
cmp
aas
cmp
xor
lds
loop
shr
mov
sbb
pop
sbb
mov
in
push
dec
loope
xchg
cmp
xchg
cld
arpl
roll
dec
xchg
push
push
stc
cmp
jmp
xor
aaa
in
outsb
cmp
push
or
bound
int
pop
fldt
or
pop
pusha
xchg
adc
mov
push
jl
test
js
leave
out
push
hlt
sub
jl
pop
fisubs
leave
cmpsl
cmp
fidivl
pushf
jb
in
jmp
jge
cmp
cld
hlt
nop
fmull
fdivrp
fbstp
ljmp
repz
out
fidivl
add
push
xor
pusha
lret
out
mov
mov
and
push
fwait
sbb
and
hlt
cmp
jmp
jns
in
lcall
lcall
js
push
pop
dec
sahf
shlb
repz
jbe
nop
xchg
test
sub
in
add
pop
adc
mov
pop
and
add
push
push
sahf
cmpb
fs
push
daa
xor
mov
or
pusha
je
imul
pop
imul
push
xor
fstpt
cmp
dec
testb
jecxz
dec
fsubrl
dec
test
or
mov
xchg
insl
sbb
jns
iret
sub
jge
test
fwait
shrl
arpl
test
out
test
push
cld
add
popa
cmp
sbb
loop
push
mov
push
hlt
cld
popf
mov
andl
ja
xor
or
sahf
xor
ds
clc
mov
jno
push
fists
dec
cmp
mov
enter
jb
sbb
pop
stos
in
and
shlb
mov
ja
arpl
jae
or
push
pushf
push
inc
dec
mov
outsl
jg
add
mov
xor
add
mov
pop
inc
xor
inc
and
lret
js
and
push
sbb
adc
scas
sti
add
notb
sbb
pop
aad
fcmovne
mov
test
add
rcrb
inc
sbbl
mov
mov
loopne
shrl
mov
xchg
inc
adc
jecxz
mov
sbb
mov
pop
int3
iret
ds
mov
fidivl
ja
or
testb
pop
fsubrl
in
push
adc
ljmp
inc
stos
ret
fldt
ret
mov
outsb
pop
pushf
sbb
repnz
mov
jae
push
inc
xchg
ljmp
pop
ss
int
mov
cmp
xor
pop
mov
jle
sub
sub
jne
xchg
adc
jb
jmp
or
std
testl
loope
mov
xor
aaa
cltd
fstps
outsb
rcl
scas
pusha
ret
jno
xchg
je
push
fsubr
cmc
fchs
outsb
mov
test
pop
int3
or
xchg
jbe
movsb
fistl
addr16
lods
sub
and
mov
sbb
sti
jbe
insb
nop
mov
movsb
je
rolb
or
hlt
xor
loopne
popf
pop
outsb
pusha
push
sub
xor
pushf
clc
dec
adc
or
xor
repnz
xchg
out
ror
inc
sahf
push
dec
inc
inc
xchg
xor
adc
or
pop
sbb
stc
xor
mov
fdivrl
push
add
cmc
cmpsl
sahf
test
sbb
xchg
mov
movsb
sub
cmp
enter
fldenv
add
pop
mov
loop
pop
xchg
cli
in
js
mov
sarl
nop
mov
iret
xor
cs
lock
rcl
push
mov
push
and
sub
push
ljmp
les
gs
lret
mov
iret
cmp
fs
push
xor
mov
in
xor
push
and
scas
mov
mov
jne
jbe
jmp
mov
adc
test
mov
scas
aas
xchg
lock
cmpsb
xchg
push
or
jmp
fcompl
mov
adc
adc
test
adc
sbb
pusha
jecxz
outsb
and
xor
sbb
or
add
inc
loop
scas
std
xchg
pop
adc
shr
pop
inc
dec
test
cld
cmp
lret
jae
push
lret
fwait
les
push
aad
adc
in
cmpsb
add
gs
xor
jge
mov
push
adc
aaa
xor
addr16
lcall
cmp
ret
inc
mov
orl
repnz
xchg
sbb
sahf
xchg
mov
push
mov
jae
xor
adc
cmp
dec
dec
popf
jle
les
inc
or
add
push
push
ret
aam
push
dec
and
jge
mov
xchg
shl
jmp
sbb
pusha
xchg
push
mov
loope
idivb
dec
add
xchg
mov
xor
ja
out
stos
cmp
repz
sub
cs
mov
or
addr16
cld
mov
inc
cmp
into
sub
imul
adc
lds
into
in
and
in
push
icebp
rclb
enter
into
cli
popf
popa
out
pop
cmp
shlb
push
imull
adc
dec
or
add
jae
adcb
xchg
and
aad
stos
adc
lahf
cld
std
imul
stc
jb
dec
push
daa
fbstp
enter
xchg
xchg
pusha
shl
pop
mov
cmp
ss
das
popf
adc
dec
xchg
jecxz
aad
mov
test
xchg
fstpl
imul
in
jb
push
add
ret
sub
lret
insl
push
aas
xchg
jns
inc
call
scas
pop
xor
push
mov
jnp
pop
xchg
sti
js
subb
add
rcll
testl
inc
pushf
cmp
jnp
jns
and
mov
pop
xor
cmp
cmp
in
lret
inc
imul
mov
inc
popf
xchg
jmp
sub
in
setl
dec
lcall
inc
dec
test
jg
dec
push
and
sahf
aam
mov
xchg
stc
xchg
fistpll
loopne
sbb
jae
jno
ret
pop
cmpl
xor
mov
jo
shl
pop
mov
sub
jb
mov
lcall
jns
mov
sbb
mov
sub
cmpsl
jg
jecxz
and
jmp
inc
cld
or
pop
push
cmpsl
or
xchg
sbb
dec
rclb
lret
inc
xor
enter
outsb
jne
out
pop
ds
mov
ss
xchg
sbb
mov
add
cmp
icebp
push
insl
jno
cmp
push
bound
lahf
scas
add
adc
xchg
movsb
das
sarl
inc
cmc
ret
cmp
rolb
push
cmp
adc
popa
sub
jnp
fs
scas
movsl
roll
pop
jl
ss
mov
pushf
pop
mov
shl
shlb
pop
jne
ret
cmp
inc
cld
not
jns
or
pusha
cli
mov
xchg
je
xor
mov
outsl
addr16
jo
loopne
lock
int
dec
fiadds
and
cmp
out
sti
lahf
stc
and
pop
popf
jne
fiaddl
pop
sbb
inc
cmc
mov
add
cmp
or
lret
psubusw
dec
out
cmp
and
sub
iret
insb
mov
jb
pop
pop
cmpsb
mov
das
push
or
test
loop
xchg
xchg
push
mov
in
test
and
add
cmp
and
cmpsl
test
xchg
das
and
pusha
arpl
and
cld
xchg
sub
fwait
add
cli
lock
pop
pop
sahf
inc
and
rorl
fcoms
adc
push
std
push
push
xor
mov
xor
out
push
jge
pop
inc
lods
in
andb
cmc
into
rorb
sar
jge
inc
in
adc
inc
push
ljmp
aaa
and
xchg
xchg
cmp
arpl
int
jge
dec
push
jns
xchg
adc
hlt
jns
and
jb
pop
xor
clc
daa
imul
dec
in
jecxz
push
imul
and
testl
pop
in
and
mov
fisubrl
sar
sahf
hlt
push
push
mov
ljmp
fstl
mov
out
sub
in
iret
push
nop
in
mov
pop
pop
cld
jecxz
sbb
or
in
jp
xchg
xchg
xchg
or
shlb
in
loope
lahf
mov
sbb
sarl
xchg
neg
adc
std
jns
cmpb
arpl
adcb
pusha
mov
imul
mov
mov
add
inc
cmpb
cmpsl
adc
add
scas
je
fnstsw
aad
mov
cmp
shll
cmp
cs
push
aad
fnstcw
out
ljmp
ss
shrb
scas
es
sbb
jo
in
sbb
repnz
inc
mov
adc
dec
fistpll
bound
pop
dec
lcall
push
call
jno
repnz
or
inc
mov
jne
mov
aaa
add
push
xor
inc
jne
push
adc
mov
in
mov
ret
fcomps
sub
mov
jno
jge
loop
inc
popf
std
andl
jmp
xor
dec
aam
cli
pushf
xchg
fwait
xor
and
cld
out
ds
in
popl
pushf
cmpsl
pusha
or
lock
jb
imull
inc
adc
je
fsubrl
shrb
add
xchg
sub
nop
jp
jmp
xchg
scas
jle
in
cli
pushf
mov
fnstenv
cli
xchg
cli
fisubs
cwtl
adc
dec
jmp
es
jb
imul
pushf
sbb
stc
movsb
shl
fldl2t
jge
call
mov
inc
mov
iret
or
jno
cli
mov
insb
aas
mov
pop
jb
mov
or
imul
je
pop
cmpsb
sub
add
in
stos
dec
in
leave
mov
jge
mov
dec
into
lds
in
and
mov
in
dec
push
push
push
jno
cltd
icebp
fcmovb
pop
adc
std
xor
scas
push
jcxz
push
ss
pop
sub
adc
lods
lds
and
shll
add
mov
pop
leave
and
fstpl
lds
lret
test
mov
dec
imul
and
add
and
sbb
sub
sbb
inc
jb
mov
cmp
lds
jmp
sub
lea
inc
test
negb
fcompl
adc
add
sbb
mov
test
sub
mov
scas
add
push
shr
sbb
lea
adc
add
out
insl
jp
and
js
mov
jl
xor
call
or
adc
scas
mulb
adc
movsl
cmc
f2xm1
gs
cmpsl
push
in
and
dec
cmp
cmpsl
data16
aaa
movsb
in
clc
les
pop
fdivrs
cmp
pop
fabs
lods
mull
xchg
and
cmp
and
fldl
xor
dec
outsl
sbb
inc
loopne
or
dec
xor
std
punpckhdq
jo
imul
adc
std
jns
mov
or
lea
pop
and
or
push
add
xchg
leave
int3
test
cmp
aaa
sub
push
shl
push
add
mov
cmp
cmpsb
lds
sub
adc
pop
lods
dec
push
xchg
xchg
pop
fmuls
push
inc
jne
mov
in
stos
lret
jo
inc
aas
dec
and
pop
dec
or
cmpb
addr16
rol
cwtl
aam
jmp
inc
push
add
in
or
push
pop
repz
int3
in
mov
lret
jmp
js
sub
xor
adc
xor
add
jmp
or
mov
inc
pop
arpl
aaa
in
mov
shlb
cs
pop
push
sbb
mov
in
inc
insl
lods
xor
adc
mov
loop
adc
dec
stos
pop
fiaddl
cmpsl
lcall
nop
test
dec
pop
push
lds
or
fisubrl
pop
iret
cmpsb
cmpsl
xchg
inc
mov
xlat
lcall
mov
das
or
jmp
pop
call
and
mov
push
enter
mov
aad
lea
je
push
cmp
stos
mov
fimull
push
int3
push
fcmovbe
cltd
mov
add
sbb
fcom
mov
cwtl
fldt
cmp
mov
int
sbb
mov
test
aaa
inc
call
insb
push
fcmovb
xchg
aam
daa
xchg
sub
add
add
jae
cmp
or
ret
popl
je
cmp
jle
pop
aaa
adc
pop
mov
mov
mov
xor
mov
das
push
sub
and
xchg
xchg
sub
rcrb
in
aad
xchg
lock
push
out
insb
lretw
fiaddl
pop
pop
jne
aad
lahf
sbb
cmovg
aam
pop
popa
lret
dec
popf
jne
mov
push
dec
add
shll
imul
pop
jne
push
ret
lock
add
xor
cmp
xor
ljmp
pop
test
pushf
xor
lahf
sub
stc
jns
push
bound
add
int3
in
push
lahf
mov
cmp
cld
xchg
fs
addr16
add
push
xchg
sub
mov
aaa
cmp
mov
ljmp
pop
sbb
mov
subb
enter
ja
das
cmp
jecxz
jne
jne
mov
sbb
dec
ret
adc
je
pop
and
dec
gs
loope
pop
xchg
popf
cltd
test
push
push
mov
sbb
adc
adcb
mov
iret
cs
fisubrl
into
inc
xor
push
into
call
test
sbb
cltd
or
pop
data16
filds
pop
dec
cmpsl
push
mov
or
call
and
xor
js
das
pop
adc
jge
popa
inc
in
out
mov
xlat
xor
add
pop
loop
mov
push
in
leave
xchg
ret
cwtl
adc
fildl
xor
pop
inc
nop
dec
insl
cmpsl
cmp
mov
gs
mov
sub
jae
fldcw
shlb
cmpl
lahf
imul
push
add
lret
sbb
fildl
pop
or
sub
lods
aad
inc
mov
scas
mov
movsb
or
jbe
lcall
dec
and
push
cmpsl
lods
jge
cltd
adc
pop
cld
xchg
mov
or
xor
or
js
jae
int3
xor
and
dec
test
ja
xchg
stc
adc
lret
xlat
push
mov
xor
adc
imul
clc
lea
iret
jmp
loop
add
xchg
dec
jecxz
pop
test
xor
ret
sub
pop
mov
test
pop
cltd
popa
xchg
loope
pushf
or
in
scas
test
mov
mov
movb
push
in
clc
cs
es
mov
mull
dec
enter
mov
push
cld
mov
pop
fwait
stc
aam
jbe
push
cmp
or
pusha
lock
fwait
sub
pusha
push
pop
nop
scas
inc
inc
jae
mov
jns
jnp
pop
out
add
sbbb
inc
mov
mov
xchg
sub
inc
loope
loopne
pop
pop
fidivrs
sahf
es
xor
shrl
mov
fs
fdivrp
outsl
mov
repnz
jnp
mov
sbb
jne
fs
into
mov
stos
daa
push
xorl
jp
and
ds
and
mov
scas
jle
loope
add
pop
pop
aad
bound
sbb
or
addr16
sbb
ficoms
es
leave
mov
std
ret
ss
sbb
inc
mov
and
mov
fisubrl
movsl
or
mov
dec
dec
lock
or
lods
or
fsub
shrb
push
test
jmp
xor
jp
xchg
mov
lcall
fcoml
rolb
add
jmp
in
jo
negb
cmpsb
iret
jl
push
out
mov
xor
lods
leave
je
inc
outsl
shl
mulb
test
push
shlb
test
in
loop
and
aam
insl
jns
aaa
ret
rolb
or
rolb
xorb
cmc
push
lahf
jnp
pop
cmpsb
scas
ss
jmp
sub
pop
scas
clc
jbe
movsb
mov
ds
cmp
cmpb
xchg
adc
push
test
inc
stos
scas
stos
push
add
push
add
cs
or
push
test
ljmp
push
and
mov
mov
scas
push
lret
pop
stc
imul
xchg
mov
call
fcmovne
out
push
cmp
lret
mov
sub
testb
adcb
sbb
int3
es
sbb
pop
and
lcall
lock
mov
jo
out
mov
xchg
inc
out
ljmp
push
fsubl
and
rcl
out
jg
in
aaa
push
or
shl
xchg
fwait
es
or
push
add
mov
add
push
xchg
out
pop
jae
inc
mov
pop
dec
loopne
sbb
xchg
dec
ljmp
jb
sbb
out
cli
clc
xchg
adcb
rorl
lcall
adc
mov
jg
mov
data16
ss
addr16
jp
out
jo
add
call
xchg
mov
mov
sbb
cmp
jmp
jbe
dec
pop
insb
das
mov
dec
mov
jbe
jo
jb
sbb
pop
dec
subb
cmpsb
xor
je
push
dec
int
sbb
lcall
lea
mov
mov
fadds
test
icebp
insl
jbe
mov
add
out
cmp
xchg
movsl
dec
push
mov
cwtl
clc
dec
cltd
les
push
lea
fdiv
mov
xor
and
ret
test
test
xchg
scas
push
daa
cmp
out
jmp
mov
popa
popa
mov
ffreep
sub
sbb
imul
push
subb
and
hlt
xchg
cmp
out
sub
dec
adc
jg
movsb
mov
pop
mov
int
xchg
sarl
push
add
add
mov
inc
hlt
leave
push
jecxz
mov
arpl
aad
mov
ret
aaa
mov
hlt
bound
lock
aaa
adc
movsb
rorb
sarb
mov
lods
add
test
roll
dec
ss
das
dec
scas
orb
adc
sarl
rcll
xor
fiaddl
sub
aaa
inc
xor
rcll
and
out
rolb
mov
adc
in
mov
pop
xchg
aaa
push
rorl
ret
lods
jne
addr16
adc
sbb
pop
sub
in
xchg
dec
scas
inc
inc
lret
mov
in
mov
stc
int3
mov
xor
dec
or
cmpsb
mov
shlb
fwait
mov
ret
icebp
into
clc
sub
clc
fwait
pop
add
pusha
push
dec
cmp
xor
mov
and
shlb
add
aam
pop
adc
xorl
xor
xchg
inc
in
lock
mov
mov
inc
stos
dec
and
cli
es
mov
mov
in
mov
sbb
adcb
dec
sbb
mov
jnp
daa
add
aaa
or
mov
mov
xchg
inc
and
dec
xchg
push
xchg
leave
popf
sub
out
fisubl
and
iret
pop
jbe
lea
movl
pop
cmpb
imul
jl
ja
push
sub
xchg
adc
mov
cltd
or
or
cltd
movsl
sub
rcrb
out
or
repnz
jp
mov
pop
add
sbb
cmp
movsb
mov
enter
or
shr
sarb
mov
out
outsb
les
mov
int
jp
aam
jp
and
lods
hlt
mov
push
or
pop
mov
push
push
xor
pop
jne
push
mov
mov
adc
ret
mov
insb
out
xor
jp
jg
scas
xlat
rolb
fmull
jb
cmp
push
cmc
mov
fcoms
jo
addl
mov
mov
jns,pn
dec
fsubs
sbb
into
fcmovnbe
pushf
les
ret
dec
ret
sbb
mov
inc
cmp
mov
jae
adc
xchg
sbb
sbb
jo
and
pop
sbb
add
idiv
out
fdivr
adc
adc
loop
or
test
mov
ja
mulb
iret
std
pop
fwait
aas
insb
push
cmpb
mov
or
imul
mov
and
dec
mov
call
sbb
mov
mov
mov
mov
lahf
jmp
lcall
xchg
push
push
pusha
inc
jmp
mov
inc
bnd
cltd
sub
out
int
enter
xchg
sbb
rol
mov
out
test
addl
pop
ret
push
push
test
pop
adc
fidivl
js
lock
push
mov
rorb
scas
call
pop
aam
cmpsb
sbbb
and
lock
aad
pop
imul
mov
adc
inc
dec
sub
repnz
dec
pop
in
stos
les
popa
cmpsb
stos
xchg
addl
xchg
aas
jg
mov
out
cmp
jg
pop
dec
dec
sbb
test
adc
icebp
xchg
fwait
push
cwtl
jne
cmp
and
xchg
hlt
repz
add
xchg
insb
cmovno
rol
in
jg
push
out
fs
fstl
adc
dec
in
leave
jg
das
cmc
test
scas
outsl
or
loop
cltd
mov
mov
xor
clc
cltd
push
inc
cmp
outsl
daa
cmp
fwait
arpl
and
clc
add
and
mov
nop
pop
dec
sbb
icebp
add
lods
pop
lods
aas
aad
ret
sbb
jb
imul
lods
and
sub
add
inc
or
outsl
fdiv
jmp
and
bound
mov
cmp
push
and
daa
cli
cmp
mov
insl
rorb
xchg
out
ljmp
es
jge
movsl
mov
and
and
cmp
adc
loopne
fcomps
jle
push
mov
jge
js
aam
mov
jno
xchg
test
ss
aaa
repnz
divl
pop
jecxz
mov
jmp
push
ljmp
leave
ret
sub
popa
js
pop
cli
out
pop
dec
add
daa
test
call
push
mov
or
mov
mov
xlat
mov
cltd
jle
mov
mov
mov
stos
jmp
jp
pop
xor
iret
cwtl
mov
ret
sar
outsl
lock
shrb
push
jmp
xchg
pop
jne
daa
enter
jge
mov
stc
leave
and
lret
pop
ret
xchg
mov
test
or
faddl
push
mulb
daa
pop
mov
xor
mov
aaa
pop
mov
mov
mov
aam
cwtl
in
arpl
fnsave
dec
or
loope
scas
inc
mov
push
mov
in
xor
mov
cmp
jl
pop
rorl
sbb
stos
and
daa
das
les
sbb
ret
push
fwait
arpl
sub
mov
xor
daa
mov
inc
or
push
pop
jl
mov
outsb
xchg
imul
shr
and
xlat
aas
test
aaa
stos
push
fildl
adc
cltd
dec
mov
repnz
push
sub
cwtl
push
jo
mov
sub
rcll
sti
push
sahf
mov
sbb
sbb
sbb
imul
push
mov
lea
popf
loop
shlb
aas
xor
and
stc
mov
sbb
sbb
popf
sub
dec
int3
lret
cmp
std
std
inc
into
xor
jp
ret
jecxz
sub
push
mov
mov
and
mov
inc
cmp
mov
shr
jb
filds
stc
jne
divb
rcll
fwait
add
cmp
ds
pop
cmc
mov
mov
xor
xlat
cmpsl
scas
jecxz
mov
mov
dec
mov
enter
inc
stc
pmullw
xor
xchg
adc
jmp
sbb
sub
jnp,pt
push
mov
inc
ja
aam
into
test
inc
and
push
sti
cmp
dec
jns
or
cld
sub
in
adc
dec
test
bound
in
int
dec
mov
out
std
pop
xlat
add
lret
inc
xchg
push
adc
sub
jp
icebp
or
sub
jmp
out
jnp
sbb
cltd
or
icebp
out
and
add
lods
pusha
adc
xchg
push
decl
loope
add
arpl
gs
add
cmp
cld
cmc
cld
call
cmpsb
jl
push
icebp
mov
or
cmpsl
inc
icebp
in
sub
sbb
popf
or
sub
and
sub
xor
dec
mov
filds
pusha
adc
and
rorl
mov
insl
fs
adc
lret
xor
shl
push
in
or
cltd
clc
sbb
fincstp
mov
jecxz
adc
sub
pop
dec
iret
stos
inc
in
loop
sub
sbb
inc
cwtl
inc
cld
pusha
outsl
and
in
and
xor
inc
dec
push
mov
push
lods
xor
mov
imul
jle
dec
rcrb
push
into
xchg
mov
mov
mov
stos
test
dec
xorl
dec
insl
call
and
jns
jbe
clc
mov
jno
aad
or
insl
xor
pop
mov
out
lock
mov
and
jb
fiadds
mov
pop
pop
mov
inc
inc
lds
pusha
ja
shl
mov
rorb
push
imul
xorb
stc
cld
seta
mov
ret
rcl
push
dec
icebp
sub
aam
mov
rolb
pop
dec
imul
or
and
sub
rorb
pop
pop
mov
push
fs
cmp
and
and
mov
in
sub
in
lock
dec
add
sbb
aaa
loopne
jb
jle
mov
pop
dec
xchg
adc
rclb
mov
mov
xor
mov
call
push
in
add
jno
cmc
jge
cmpsb
and
pop
fxtract
or
insl
mov
dec
lret
leave
out
mov
pop
mov
movsb
addr16
scas
ljmp
pop
xchg
mov
popf
jb
out
xchg
test
js
mov
fmull
in
scas
in
mov
push
imul
sbb
int
stc
imul
mov
repnz
sbb
fisttps
lea
mov
ja
add
adc
push
pushf
sahf
mov
std
mov
sbb
repnz
or
fdivs
sbb
outsb
insb
pop
ret
movsb
scas
shlb
adcl
subb
stos
sub
jne
pop
sub
inc
pop
xor
inc
test
mov
imul
cwtl
call
arpl
imul
sbb
jne
sub
sub
stc
sub
mov
sahf
jnp
cs
push
push
jecxz
lahf
pop
enter
jl
adc
mov
das
dec
out
sti
xor
daa
insb
daa
lods
push
lahf
jge
adc
and
inc
sub
mov
push
aaa
pusha
int3
mov
fidivl
and
in
shr
es
es
mov
ret
pusha
dec
int
or
pop
fcoml
repnz
mul
fiaddl
out
mov
fidivrl
out
fimuls
call
lret
packssdw
push
icebp
lcall
pusha
push
mov
mov
inc
jbe
js
pop
lods
outsb
sub
clc
lea
in
pop
dec
cwtl
hlt
mov
stos
inc
inc
jne
repnz
sbb
rcrb
jno
jbe
dec
xchg
mov
sahf
int3
hlt
icebp
sub
lret
sub
test
sbb
xor
nop
rcrb
add
mov
push
rclb
push
inc
clc
push
add
push
cmp
aam
cltd
adc
lea
xchg
jmp
sbb
xor
adc
adc
mov
or
sbb
cmpsb
pop
jne
add
cmp
and
outsl
loop
and
pop
inc
cmc
arpl
clc
pushf
nop
sub
ds
jno
out
xor
xchg
dec
jb
adc
loopne
cmc
sub
mov
fdiv
lret
pop
pop
loope
and
enter
orb
xrelease
xchg
cmpl
add
push
push
xor
sarl
cmpl
es
fidivrs
mov
xor
movsl
std
add
imul
hlt
arpl
mov
hlt
sbb
stc
mov
iret
test
stc
sbb
xlat
or
mov
insb
mov
into
jge
out
mov
mov
sbb
pop
sbb
xchg
cmp
xchg
jp
out
and
adc
push
addb
sbbb
cld
xor
push
mov
push
data16
movsb
mov
mov
fcomps
insl
daa
or
jmp
and
dec
mov
out
ja
jmp
insl
and
je
rcr
fnstsw
push
ss
sbb
or
jle
pop
xor
dec
mov
cmpb
push
mov
cmp
fucompp
pushf
pop
mov
inc
or
repnz
call
fdivl
mov
mov
inc
xor
dec
iret
mov
int
ds
test
inc
pusha
and
movsl
cmc
std
mov
sbb
bound
pop
jmp
inc
fnstcw
sub
ja
mov
push
dec
ds
out
addr16
dec
mov
subb
sbb
inc
jo
xor
je
insl
sbbb
cmc
mov
jl
sbb
popf
stos
mov
shrl
or
pop
pop
push
pushf
jbe
mov
hlt
pop
mov
inc
ljmp
jg
add
push
jb
jnp
arpl
addr16
addr16
ja
mov
fsubl
in
popa
xor
sub
das
lock
movsl
mov
add
out
pop
out
fisttpl
cli
into
mov
cmp
jmp
jl
pusha
sar
mov
inc
xor
cld
jno
fiaddl
xor
xlat
push
adc
and
popf
sbbl
kmovw
and
inc
popa
push
inc
rcrb
adc
mov
stos
adc
cmp
cwtl
das
mov
out
adc
mov
je
and
das
ds
test
lcall
add
adc
xchg
aaa
fadd
lods
add
xor
out
cmpsb
daa
aas
cmp
int
daa
lea
xchg
pushf
sub
fcom
ret
pop
fdivrp
cli
adc
aas
mov
aas
loope
jg
inc
ret
call
inc
sahf
int
nop
lcall
fistpll
aad
add
clc
push
ss
sbb
loope
repz
jle
cmp
pop
push
push
stc
lcall
and
add
das
out
ud2
iret
jecxz
cmpsb
cmp
mov
jns
and
enter
or
mov
in
sbb
shrb
clc
jg
in
outsb
es
jg
mov
popf
jle
mov
loopne
inc
andl
sbb
mov
xchg
fwait
sahf
pop
int
inc
sbb
and
dec
push
or
cmp
mov
popa
mov
xor
hlt
inc
and
rorl
or
jecxz
cmc
rcrl
adc
iret
dec
mov
sbb
sub
mov
xor
push
in
sarb
aas
stc
jp
push
mov
jnp
mov
sub
pop
mov
sti
add
clc
and
das
push
inc
cmpsb
fs
inc
inc
xchg
shlb
mov
leave
mov
sahf
ficompl
fwait
js
cs
jb
cli
add
jnp
shrb
scas
sarl
push
or
rorb
mov
sub
sub
outsb
fists
sub
adc
dec
add
cmpsb
push
adc
mov
add
mov
pusha
inc
lret
mov
ret
push
mov
and
andl
rolb
jns
inc
add
mov
aad
mov
jbe
adc
inc
test
mov
adcl
js
add
in
fwait
sub
add
xor
pop
push
inc
lock
jp
lds
int3
add
js
jbe
add
push
std
push
lds
inc
cmpsb
sub
je
fsubrs
dec
pop
loopne
jne
les
add
jp
or
aaa
jno
scas
js
xchg
xlat
pop
mov
lock
int3
jbe
xlat
loope
icebp
cli
enter
push
dec
pop
adc
xchg
lods
fisttps
mov
jns
popa
mov
and
add
into
jbe
push
dec
xchg
mov
in
or
int3
mov
popa
jp
int3
sub
insb
jno
push
or
inc
pop
add
ljmp
mov
cmp
stc
cmpsb
xchg
mov
mov
add
hlt
ljmp
mov
pop
fucomip
and
mov
iret
inc
jb
adc
inc
adc
popa
xor
outsb
mov
loopne
sub
pop
out
sbb
fisttps
cs
lods
repnz
cmp
mov
lret
push
dec
sub
lret
xchg
fs
xchg
lods
in
sub
int
pop
cmp
push
xorb
jae
and
shrl
leave
mov
ficompl
adc
or
push
jae
lock
pop
andl
mov
mov
dec
adc
xchg
jecxz
mov
xor
inc
out
call
stos
sbbb
fcmovnbe
cmp
jp
mov
test
cltd
jo
jo
icebp
cmp
lds
push
pop
jno
in
pop
pop
inc
mov
cmp
iret
inc
pop
repz
cmp
mov
mov
mov
xchg
mov
lcallw
xor
int
mov
inc
cmp
jg
cmpsb
mov
or
push
mov
add
push
or
mov
sbb
xchg
loop
inc
inc
shrl
rcr
cmp
push
add
ror
std
adc
adc
int3
xchg
cmp
jmp
and
fs
pop
mov
std
xor
adc
fstpt
rclb
call
mov
aad
and
mov
xchg
mov
adc
ret
dec
into
loop
mov
test
cwtl
dec
push
stc
out
hlt
imul
aas
aad
and
pop
jp
pop
test
dec
xor
insl
out
lcall
pop
mov
xchg
dec
jne
popa
pop
mov
cs
push
subb
std
xchg
mov
xchg
sub
iret
add
repz
xchg
dec
cltd
or
or
or
pop
lret
add
js
or
sub
loopne
cwtl
cwtl
mov
movsl
mov
jle
mov
inc
add
loopne
iret
std
adc
add
dec
fisubl
das
test
pop
mov
mov
inc
inc
and
fnstenv
repnz
push
push
add
sbb
jne
and
cld
pop
aas
jae
fdivl
push
mov
and
adc
cltd
ss
mov
jbe
mov
imul
mov
inc
out
popa
lock
adc
ret
outsb
push
jbe
mov
inc
pop
xchg
adc
shlb
sbb
add
lds
jbe
mov
cmp
mov
cmpsl
mov
and
mov
movsb
or
cli
pusha
data16
mov
daa
scas
dec
repz
xorb
addb
dec
fisubs
and
shlb
mov
cmp
push
in
xor
inc
cmp
push
cmp
movsb
push
mov
push
pop
arpl
xor
inc
xor
jmp
movsb
cmpl
pop
pop
xchg
sbbb
dec
push
nop
leave
addr16
jp
xorl
cmp
xchg
ret
sbb
push
sbb
inc
aas
jle
cld
lret
sub
test
clc
or
mov
loop
inc
lds
mov
fwait
push
mov
inc
xchg
and
xchg
leave
fbstp
push
jns
xchg
fmull
ljmp
gs
rcl
mov
add
je
cltd
loop
stos
inc
xchg
mov
or
loop
fidivl
jnp
jnp
and
mov
shl
inc
out
mov
ffree
insb
sbb
arpl
roll
push
xor
jbe
pop
mov
and
mov
sbb
fdiv
popa
and
mov
mov
dec
bound
mov
icebp
mov
sti
push
popa
mov
nop
sbb
idivl
xor
lret
pop
xchg
mov
enter
rol
sbb
mov
or
xor
add
push
push
ss
pop
jecxz
int
filds
adcl
scas
pop
jge
js
push
mov
jp
jge
sub
add
mov
push
ljmp
mov
mov
imul
dec
lcall
mov
or
push
inc
inc
or
xchg
xor
jne
mov
roll
int
jg
push
mov
dec
aas
test
movsb
sti
imul
push
mov
fildll
xlat
push
in
xchg
jnp
jbe
imul
mov
sbb
inc
pop
and
test
in
outsb
loopne
addl
rolb
je
sub
jne
xchg
sub
mov
fistl
xchg
in
loope,pt
and
mov
fsubr
cmp
ss
mov
test
sub
xchg
push
mov
pop
xor
xchg
jl
mov
int3
popf
inc
out
orb
mov
mov
dec
sbb
stos
xlat
insb
adc
sub
ds
adc
scas
mov
fs
fcmove
sbb
mov
pop
in
sbb
jecxz
in
sbb
lods
leave
iret
ds
es
push
lahf
data16
sbb
popf
bound
scas
in
dec
jecxz
add
jae
jb
inc
xchg
mov
mov
ret
inc
xchg
mov
and
imul
popa
fbstp
add
cmpsl
movsb
push
fimuls
leave
inc
jnp
ret
add
in
or
das
das
imul
into
daa
mov
aas
leave
lret
xchg
inc
andb
aas
fisubrs
sub
cmp
fnstsw
pop
out
cmpsb
loopne
js
sbbl
cmp
xchg
fadd
mov
int3
adc
jl
pop
notl
and
fwait
adc
or
push
jl
roll
or
popf
mov
icebp
xchg
out
mov
inc
push
ljmp
sbbb
mul
dec
dec
int3
lds
pop
inc
cwtl
testb
sub
xchg
cmp
aaa
or
xchg
in
imul
add
sub
xchg
push
pop
xchg
je
push
sbb
lds
sbb
mov
mov
movsb
loope
aad
mov
jne
mov
push
push
and
test
fisubs
and
popa
frstor
mov
in
pop
test
dec
jle
mov
out
ljmp
mov
scas
mov
push
sbb
subl
dec
add
ds
leave
pop
imul
addl
sahf
in
dec
outsl
stos
pusha
lea
imul
mov
bnd
sub
cmpsl
adc
push
mov
pop
cmp
aam
test
insb
push
sahf
push
jbe
sbb
gs
and
sbb
mov
jg
cmp
push
xor
xor
and
inc
jge
pop
and
frstor
arpl
addb
push
cwtl
xor
xchg
pop
jnp
lods
in
or
sub
pop
mov
enter
jge
popa
leave
xor
pop
sub
scas
lret
popa
outsb
cmp
and
in
mov
mov
cmp
inc
pop
sub
icebp
pop
sub
jns
dec
push
testb
push
loope
nop
iret
dec
inc
or
sub
xor
movsb
shrb
cld
fistpl
cmc
or
xor
mov
adc
or
and
into
sbbl
fnstenv
ss
cmp
orb
jp
and
mov
dec
aam
inc
dec
stos
sti
and
cmpsl
mov
call
add
mov
fistpll
and
inc
sar
cwtl
mov
pop
xchg
xchg
mov
out
sbb
xchg
xor
mov
pushw
add
aad
pushf
imul
lcall
cld
fsubp
push
push
add
adc
mov
cmpsl
mov
out
iret
inc
lods
push
push
add
orl
xchg
sub
movsb
cmp
icebp
push
xlat
sub
jno
lea
ds
sub
jle
jmp
jle
sbb
shrb
jecxz
adcb
sbb
adc
or
jecxz
inc
mov
mov
sub
adc
push
cli
sbb
dec
inc
stc
lods
icebp
jecxz
les
dec
mov
mov
mov
arpl
enter
fsubrs
push
das
jg
push
cmc
adc
popa
push
and
sub
test
fnsave
fnstcw
push
movsl
mov
jl
jnp
cmp
push
and
es
scas
mov
jg
movsb
ljmp
jo
stos
push
testl
lds
daa
popf
mov
or
xchg
dec
push
shrl
xor
mov
pop
aas
sub
jmp
and
push
lds
pop
xchg
pusha
cmp
or
jle
sub
popf
mov
adc
mov
imul
rcrb
dec
lock
sub
sub
inc
shl
sub
ljmp
mov
stos
sub
pop
push
ret
aad
push
sbb
adc
mov
dec
adc
loope
push
jecxz
popf
jns
les
fdivr
sub
int
sbb
out
adc
pop
mov
fstpt
push
mov
xchg
add
js
call
cwtl
lea
add
jns
push
ficoms
cmp
cmp
adc
into
inc
pop
sarl
lahf
fistpll
aad
mov
cmc
dec
sarl
mov
lods
xor
inc
aas
subl
cmpsb
jmp
popa
loope
pop
xchg
cmpsl
sub
fstpl
daa
add
rorb
sbb
and
mov
sbb
cmpsb
adc
inc
push
lock
mov
shlb
jp
pop
fldt
cwtl
xor
dec
call
adc
pop
in
or
call
inc
mov
fcoms
pop
jl
pop
rol
aad
xchg
pop
jno
cli
xchg
fisttps
mov
jl
test
andb
fxch
pop
lods
das
jmp
aaa
or
add
test
jle
mov
dec
ret
cmp
and
push
mov
jo
lds
in
movb
nop
fwait
scas
das
sub
lret
mov
pop
jle
mov
notb
les
fisubrs
leave
pop
sti
ljmp
ret
loopne
insl
adc
ljmp
sub
xor
fimuls
testl
sub
int3
fbld
jp
jo
mov
sbb
mov
mov
jnp
sti
rorl
mov
sub
rcrb
and
les
shlb
xchg
inc
mov
test
fsts
jmp
sbb
mov
in
add
mov
pop
add
push
lahf
std
inc
repnz
adc
cmc
popf
cmpsl
into
rcll
int3
push
sahf
xor
fidivrl
fmuls
in
iret
int
mov
xchg
xor
jecxz
sub
sbb
cmpsl
aaa
fucom
xchg
pop
sbb
fisubs
aad
sbb
mov
and
rolb
xchg
mov
add
pop
push
in
out
outsb
pop
mov
mov
bound
dec
xchg
lock
ljmp
jns
loope
outsl
mov
pop
loopne
xlat
imul
pop
inc
push
sub
mov
cwtl
sub
cmp
add
cli
stos
and
xchg
sbb
shlb
push
pop
push
sbb
in
add
push
iret
rolb
push
sbb
aas
cli
adc
into
add
add
dec
test
inc
push
pop
xchg
call
pop
das
xchg
in
pop
ja
push
lea
cli
aad
leave
mov
push
inc
push
int
mov
cmp
movsb
add
jae
jp
cmpsl
xchg
push
sbb
xor
sub
scas
pop
loope
sbb
sbb
fwait
and
mov
add
shr
je
stos
out
daa
mov
xchg
mov
mov
push
inc
xor
add
loop
fadds
test
and
jnp
addr16
dec
push
ja
leave
and
cmc
ja
inc
ret
cmp
mov
or
leave
cli
sbb
pop
fiadds
add
imul
sbb
les
imul
mov
and
das
push
lea
cmp
gs
test
shll
mov
dec
out
aam
xor
jns
push
or
in
arpl
adc
cwtl
dec
test
in
or
in
jno
and
adc
scas
push
fildll
jo
sub
jns
inc
mov
add
dec
push
stos
insb
mov
jle
mov
push
mov
jae
fcoms
call
in
sahf
sbb
inc
and
cmp
adc
xor
dec
scas
pop
xchg
mov
popf
jecxz
scas
cli
xchg
notl
aas
adc
add
push
pushf
shrb
movl
add
rcr
je
add
mov
mov
dec
push
pop
fdiv
adc
loop
cmp
mov
inc
sub
pop
mov
insl
xchg
insl
lret
addr16
sbb
mov
jb
aaa
outsb
inc
lods
xor
lock
mov
cmpsb
push
sub
iret
push
or
push
push
lea
or
pop
pop
cmp
pop
adc
enter
add
lcall
fistl
lret
pusha
add
in
add
pop
out
inc
repnz
and
lock
out
mov
clc
test
mov
push
push
dec
pop
push
pop
sub
into
movsb
test
xchg
jge
enter
fnsave
mov
sarl
mov
cwtl
daa
push
fbld
imul
or
outsl
mov
cld
mov
test
es
test
subl
mov
scas
movsb
fiadds
movsb
icebp
push
xor
hlt
inc
imul
cmc
js
dec
lret
sub
inc
lods
repnz
ja
out
mov
in
pop
adc
pop
in
dec
test
mov
stos
mov
test
add
or
fcmovu
push
int
add
mov
sbb
dec
loope
fimuls
cltd
push
mov
les
dec
in
sahf
push
enter
mov
test
cld
rorb
je
pop
inc
aaa
loope
and
fpatan
adc
enter
sahf
pop
imul
lret
cpuid
mov
push
xchg
jnp
bound
cli
in
mov
cmp
push
inc
cmp
xchg
cmc
mov
mov
or
push
testl
xor
push
add
mov
rol
in
es
fwait
xchg
js
vmread
shlb
mov
add
scas
bound
mov
es
out
push
xchg
sbb
pop
into
inc
mov
dec
mov
in
xchg
push
cwtl
push
xchg
xor
inc
xchg
sub
lret
mov
out
cmp
pop
loop
scas
adc
dec
hlt
out
sbb
jmp
cmp
xchg
pusha
imul
cmp
ss
xor
lock
sbb
lock
add
mov
and
dec
cmp
sbb
push
mov
xor
xchg
xlat
cmp
add
pop
cmc
es
mov
scas
push
fimuls
mov
mov
ret
frstor
lods
pushf
xor
insb
divl
inc
push
int
sub
cmp
push
pop
loope
inc
aaa
and
xor
fbld
push
lret
lea
inc
and
pop
mov
icebp
in
mov
xor
sub
outsl
popa
popf
push
sbb
test
out
push
mov
imul
xor
mov
pop
and
addr16
or
mov
push
push
loopne
xor
mov
dec
cmp
pavgb
mov
test
pop
and
xor
std
cmp
leave
or
rclb
inc
movsl
cmp
jg
mov
push
out
push
or
inc
lret
add
fwait
movlps
push
mov
les
mov
test
mov
dec
into
cltd
mov
into
cwtl
dec
ds
lock
popf
add
jl
cmp
addl
nop
cltd
pop
clc
mov
push
adc
rol
enter
dec
push
subb
outsl
inc
jne
paddw
lahf
dec
jp
cmp
push
xchg
mov
cmpsl
repz
repz
add
fs
icebp
in
jp
mov
test
jb
jmp
pop
les
xchg
shrl
push
dec
xchg
imul
push
int3
push
cwtl
mov
lcall
in
sbb
pop
addr16
sbb
sahf
fbstp
call
leave
push
push
jnp
jbe
lret
push
lahf
sbb
stc
int
push
lods
adc
cmp
ret
and
or
cmpsl
outsb
movsl
scas
ljmp
scas
or
lret
sub
pop
mov
sahf
jecxz
bound
push
bound
push
cwtl
movsl
in
adc
js
sub
fidivrs
pushf
push
cltd
cltd
fneni(8087
ss
mov
push
sbb
mov
inc
mull
jg
mov
ds
cmp
shrl
stos
xchg
movsl
sahf
sub
inc
dec
sarb
addb
cmp
or
aad
cmp
std
dec
inc
adc
ret
jmp
cmp
xor
add
fbld
popf
test
add
jmp
and
mov
decb
sbb
add
mov
push
mov
or
inc
nop
loop
pop
loop
iret
pop
xchg
rol
jl
xchg
xor
adc
mov
and
in
dec
lea
cltd
mov
sbb
inc
jbe
cmp
aad
mov
xchg
pop
sti
stos
push
pop
xchg
adc
mov
dec
shll
mov
adc
add
mov
bound
pushf
outsl
and
test
jbe
xchg
pusha
mov
je
cld
pop
inc
xchg
inc
mov
movsb
push
lds
rcrl
jo
arpl
mov
adc
adc
jae
mov
xchg
lock
cmp
pop
aas
in
imul
aaa
cmpsl
pop
pop
dec
xchg
sbb
or
jecxz
ljmp
mov
and
and
xchg
sbb
add
push
mov
sbb
jns
mov
mov
stc
in
or
sbb
pop
jecxz
clc
add
out
outsb
fists
iret
xchg
imul
sbb
dec
repz
pop
xor
cld
stos
mov
inc
sub
cwtl
scas
and
mov
sbb
push
jno
mov
fwait
add
xor
adc
ffreep
cmpsb
pusha
cmpsb
pmulhw
sbb
xor
mov
cs
loope
mov
dec
push
das
sysret
std
add
call
cli
movsl
push
mov
push
and
cmp
mov
and
arpl
pop
push
or
jmp
push
test
aaa
push
xlat
fidivrs
das
hlt
push
pop
and
decb
popf
das
pop
subb
jo
in
inc
xchg
int
mov
stos
test
pop
sbb
sbb
mov
fadds
in
arpl
jmp
call
movb
inc
iret
cmp
pusha
sub
push
mov
mov
sbb
fnsave
jae
data16
stos
push
mov
push
and
inc
stos
aas
xchg
out
mov
daa
mov
jmp
mov
mov
rclb
mov
jl
or
jb
xchg
dec
or
fcmovb
insl
dec
fidivrl
outsb
xchg
or
popa
push
notl
out
jnp
mov
into
dec
cmp
inc
mov
in
into
sbb
outsb
xchg
lret
add
jmp
shrb
scas
xchg
or
xchg
into
mov
or
xchg
lods
in
popf
jno
and
jnp
sahf
pop
stos
stc
adc
sbb
add
pop
push
cmpsl
xlat
ret
adc
inc
xor
hlt
shrb
rcr
imul
add
or
mov
mov
movsb
fisubs
cmp
out
dec
repnz
cli
call
movsl
sar
add
inc
cld
call
mov
mov
outsb
cmc
xor
fdivrl
inc
jnp
push
push
insl
sbb
pop
xchg
stos
mov
inc
xor
sub
sbb
pop
mov
mov
jecxz
sbb
pop
pop
sbb
push
lods
mov
dec
sbb
outsb
je
repz
adc
push
push
add
lcall
fnstenv
lahf
mov
lcall
push
inc
in
lods
fsubl
and
enter
dec
cmp
xor
mov
xor
sar
popa
mov
mov
cwtl
inc
jne
pusha
dec
jge
pushf
xchg
loopne
or
cmp
push
jge
iret
or
jno
sub
call
fs
sbb
pop
mov
les
xchg
xchg
stos
pop
test
gs
mov
loope
mov
pop
inc
push
cmp
aad
push
cmpsl
pop
imul
mov
sub
rcr
repnz
ffree
add
jbe
test
sbb
jmp
imul
mov
xorb
rcrl
pop
mov
add
inc
cmp
sti
jmp
ds
loop
out
sub
mov
dec
xchg
sub
xchg
xchg
cli
push
in
lods
fwait
sbb
pop
out
mov
pop
fwait
add
lcall
jg
adc
sar
lock
mov
inc
xchg
pop
sbb
stos
ljmp
mov
pop
mov
loope
in
inc
out
test
xchg
call
jp
xlat
or
ss
lds
jnp
mov
jmp
bound
cld
rorl
sub
out
lahf
or
outsb
cmp
rorb
aaa
inc
lret
mov
push
pop
mov
jecxz
pop
mov
fcoml
or
pop
test
sbb
jbe
and
cwtl
ds
loope
inc
pop
mov
daa
inc
xchg
lods
pop
sub
loop
jae
das
push
out
std
xchg
insl
stc
jae
dec
js
push
lds
and
addl
call
sub
sub
xor
les
push
addr16
dec
mov
sbb
mov
adc
enter
xchg
jle
xchg
aam
mov
inc
std
mov
dec
fidivl
or
push
inc
rorb
imul
xchg
movsl
or
imul
sub
movsl
out
imul
stc
sti
push
out
insb
pop
dec
or
xor
mov
add
push
clc
je
push
in
bound
and
dec
adc
aad
jg
mov
mov
gs
and
cmp
loopne
and
nop
jo
out
pop
test
subl
sti
push
lds
push
add
ds
jb
mov
dec
out
jbe
xchg
mov
sub
sbb
lret
scas
test
shr
push
fnstcw
mov
lcall
pop
mov
cmpsb
xchg
shrb
gs
or
inc
cld
ljmp
iret
xlat
mov
mov
int
movsl
imul
adc
xor
and
xlat
jbe
sti
sbb
jb
mov
dec
repz
xchg
dec
add
fdiv
ret
fidivrs
adc
in
enter
insl
popf
loope
call
into
ret
xor
loop
xchg
inc
leave
testl
out
lret
pop
jecxz
dec
shlb
jno
imul
mov
jmp
push
mov
mov
scas
ret
or
rclb
dec
sarb
dec
adc
dec
add
sti
in
aas
rorb
push
mov
add
mov
push
roll
fistl
fmuls
popa
sub
stos
mov
fsubr
inc
addr16
shl
sub
ja
cmp
and
orb
enter
int
nop
xor
sti
in
fstps
insb
push
mov
lods
cld
into
lcall
mov
dec
inc
mov
fnstcw
mov
adc
xchg
dec
in
into
sarb
xchg
xchg
lods
lock
gs
adc
scas
push
cmc
ja
stos
scas
cltd
icebp
xchg
sbb
inc
inc
gs
mov
xlat
sbb
fmul
push
das
adc
enter
pop
or
push
push
pusha
jb
inc
fs
pop
in
xchg
insl
dec
xchg
and
bndstx
cltd
adc
adc
adc
movsb
or
push
xor
dec
mov
movsl
mov
cmp
mov
dec
addr16
orb
jb
ja
mov
push
test
sahf
adc
push
sbb
scas
inc
loopne
leave
and
push
push
dec
pusha
and
fnstenvs
dec
xchg
fwait
enter
ficoml
into
sti
add
pop
in
mov
dec
or
and
fidivrs
popa
out
ljmp
jno
ss
inc
inc
subb
inc
loopne
cmc
movsl
pmaddwd
mov
dec
inc
adc
aas
rcll
push
jp
xor
jne
scas
cmp
scas
repz
cs
jo
mov
sub
adc
mov
lret
fdivl
jp
shufps
out
cmp
or
out
sarl
adc
push
mulb
jge
mov
xor
loopne
in
xchg
cmp
jle
int3
sbb
mov
inc
mov
mov
push
sub
and
jle
jmp
adc
addl
bound
push
insl
jae
and
xor
xor
int
pusha
sbb
mov
fdivl
daa
pop
repz
lcall
outsl
in
fisttpl
inc
hlt
pop
incb
dec
xchg
pop
mov
ss
out
dec
inc
add
fdivrl
in
xchg
shlb
adc
jno
ss
subb
push
pushf
rolb
stc
xor
out
inc
in
push
xor
xor
inc
cwtl
ds
hlt
mov
pop
cmp
dec
xchg
mov
mov
adc
lock
push
and
and
movl
xchg
dec
outsl
subl
mov
outsb
cmp
inc
adc
mov
test
std
popf
sbb
aaa
aad
mov
add
sbbb
mov
adc
cmp
mov
aam
cmp
mov
dec
outsl
xchg
out
pop
loope
sti
pushf
mov
aam
mov
repz
dec
insb
mov
push
mov
sub
jp
dec
mov
lahf
add
test
mov
pop
out
jle
mov
inc
jno
test
es
fisubrl
decb
call
adc
dec
fsubrp
cmp
xchg
sub
ss
mov
test
mov
jbe
xor
mov
add
incb
lods
lods
xchg
insb
add
lds
or
jbe
pop
call
mov
mov
jae
cmpsl
in
xor
or
sub
out
pop
dec
fmull
or
imul
ja
outsl
sarl
mov
imul
sbb
adc
fistps
and
js
subb
inc
mov
mov
dec
cmp
repnz
je
pop
jp
sti
jg
and
mov
sub
mov
shlb
repnz
add
cmpsb
mov
pop
inc
pop
pop
xchg
fldt
xchg
idiv
popa
adc
xor
add
bound
jge
mov
notb
push
pop
test
add
jae
lock
jp
sbb
mov
sub
shrb
sti
mov
mov
jns
pop
cmp
test
cmp
out
jo
cwtl
and
stc
or
xchg
cmc
inc
lret
xor
add
mov
pushf
fisttpll
in
sbb
mov
pop
mov
push
cmp
insl
xlat
adc
jge
sbb
bound
xchg
mov
xchg
pusha
cmp
jge
out
insb
sbb
add
adc
sub
jl
lods
jg
cmpsl
and
leave
pusha
cltd
push
cmpl
sub
insb
mov
jo
push
mov
mov
sahf
out
imul
out
std
ds
and
sbb
das
fwait
push
push
sub
cwtl
sbb
fwait
lea
fisubrs
lods
lahf
xor
lods
mov
aad
push
dec
ja
dec
jns
adc
int
pop
adc
call
shll
cmc
movsl
clc
hlt
loope
and
inc
ljmp
cmp
sub
pop
mov
je
cmc
mov
or
xchg
scas
dec
xlat
insb
cmp
mov
add
les
xchg
roll
arpl
lods
mov
inc
enter
ds
imul
lar
push
into
sub
sahf
push
sarl
fldl
jnp
test
mov
mov
pop
clc
test
pushf
adc
shll
and
pop
out
mov
cmc
mov
test
sub
rcrl
xor
or
mov
cmpsb
cwtl
out
or
xchg
adc
enter
ficompl
add
lock
mov
dec
inc
fcoml
fnclex
scas
imul
iret
sbb
out
fwait
jl
test
xor
cmpb
and
andl
xlat
enter
sub
jp
adc
jl
mov
in
shrl
in
jnp
test
or
cmp
nop
test
mov
inc
pop
and
movsl
movsl
and
mov
out
repz
sahf
mov
dec
daa
add
pop
cmp
mov
mov
sub
imul
aas
jns
fdivs
jbe
test
adc
fstpl
rcrl
jno
and
shlb
push
stos
xor
or
sahf
fistpll
mov
clc
and
mov
xor
lcall
pop
fisubl
lret
jo
inc
sbb
fdivl
inc
and
and
scas
xor
movsb
aas
in
mov
add
mov
clc
and
movnti
inc
cmp
stos
rolb
mov
lea
pop
cmc
push
out
inc
xor
xor
cmp
push
xchg
out
dec
imul
push
je
pop
dec
sub
fistps
jg
dec
fwait
xchg
pop
mov
dec
sbb
xchg
push
imul
push
pop
movsb
dec
sub
mov
sbb
into
cmp
outsl
stc
cmc
adc
movsl
in
movsb
cmc
div
mov
movsb
mov
xor
jbe
fisubrs
mov
sar
pop
into
add
popa
nop
fiadds
or
popa
pusha
push
mov
xchg
or
sub
nop
clc
push
fldpi
pop
mov
add
or
or
pop
jo
add
adc
mov
jne
xchg
mov
movsb
arpl
cmp
xlat
sub
fistpl
adc
inc
or
lret
lock
and
cmc
div
mov
and
clc
jge
fildll
adc
cmp
mov
stos
jmp
popa
push
push
pop
mov
out
jmp
cmp
mov
stc
and
iret
ja
fs
ss
xchg
sbb
inc
pop
sub
pusha
sub
repz
repnz
je
sbb
decb
and
mov
lock
test
and
aaa
cmp
movsb
sub
jmp
dec
fcmovne
xchg
out
xchg
outsl
adc
lahf
push
jb
dec
jl
add
adc
out
enter
popf
pop
xor
push
mov
pusha
mov
nopl
out
push
out
and
sub
jge
in
sub
lods
jne
iret
stos
sbb
mov
push
rolb
test
out
lds
lods
aas
xor
inc
iret
mov
fwait
push
ss
pop
stos
pusha
pop
pusha
lods
mov
in
ljmp
mov
push
cli
sub
je
inc
mov
subb
jb
mov
push
adc
push
pop
dec
and
gs
mov
cmpsl
popa
sub
jns
xchg
sub
mov
pushf
pushf
xor
jno
in
inc
fadd
ss
int3
xor
loope
inc
shll
xor
ja
ljmp
pop
arpl
mov
in
ljmp
aam
inc
iret
in
mov
daa
mov
sub
sub
loopne
mov
mov
add
js
inc
fistps
shll
lret
popf
pop
into
call
es
test
push
leave
mov
or
lahf
sub
xor
dec
nop
scas
mov
mov
scas
in
rclb
inc
shrl
rcrb
push
insb
cmova
mov
aas
cmp
cld
cmp
js
mov
mov
cmp
mov
xchg
xacquire
cmp
xchg
lods
xchg
or
in
inc
or
cli
jnp
in
hlt
sbb
lahf
sub
sub
push
shr
mov
and
push
pop
insb
pop
mov
mov
jge
push
jne
mov
lret
addb
dec
cltd
and
mov
in
int3
mov
dec
movsb
cmpsb
mov
scas
roll
adc
add
push
jae
push
jp
out
test
sbb
sbb
mov
cmp
dec
cmp
jnp
mov
mov
xor
add
jno
push
mov
nop
sti
test
ja
sub
pop
lahf
mov
stos
adc
scas
movsb
fdivrs
in
push
in
pop
dec
stos
sub
mov
cld
xor
ror
ret
push
mov
and
jae
clc
adc
and
lods
and
in
xor
xchg
mov
in
mov
push
jl
push
loop
mov
jb
mov
cmp
and
lret
mov
mov
cmc
sbbl
push
sbb
mov
ret
cmp
sbbl
std
mov
sbb
imul
inc
sti
mov
sbb
push
dec
repnz
test
repnz
scas
cmp
je
sub
inc
jecxz
mov
and
or
fsubl
test
jo
les
aad
faddl
int
mov
ret
loop
cmp
xor
push
xlat
das
push
repnz
aaa
lds
test
push
fadd
cmc
test
fsubrs
fistpll
and
andb
fimull
dec
jp
insb
or
sti
pop
inc
push
ljmp
mov
repnz
int
push
sub
inc
xor
pop
xor
and
or
dec
rcrb
mov
shlb
insb
jecxz
mov
daa
xor
pop
mov
stos
sbb
fsubl
stos
jbe
dec
cmpsl
test
pop
call
in
jge
adc
and
lock
adc
orl
fsubrl
mov
adc
pushf
jnp
jg
je
sbb
mov
enter
dec
cld
and
in
iret
pusha
es
arpl
cld
xor
insl
add
pop
imul
fiadds
pushf
jae
jne
mov
test
or
xchg
dec
cmp
push
enter
in
jae
aas
mov
sbb
into
xor
int3
xchg
xchg
pop
jns
fidivrs
int
push
dec
mov
cwtl
xchg
jge
push
sahf
xchg
rcrl
push
xchg
and
in
add
push
icebp
jmp
inc
mov
inc
mov
sbb
mov
mov
loope
dec
nop
mov
icebp
pop
mov
int
jbe
imul
inc
xchg
dec
mov
and
test
add
and
inc
sbb
mov
adcl
int
jecxz
mov
cmp
jmp
test
pop
mov
lcall
xchg
mov
adc
popa
cs
das
push
stos
sti
js
mov
pushf
sbb
dec
xlat
pop
pop
daa
lods
mov
cmp
dec
dec
idiv
pop
dec
cltd
pop
inc
jge
mov
adc
xchg
pop
sbb
lock
insb
pop
sub
mov
xchg
mov
addr16
popf
push
inc
insl
cmp
test
xor
mov
xchg
push
ljmp
mov
jl
xor
insl
ficomps
lods
mov
xchg
in
sysexit
clc
hlt
lods
cmp
mov
mov
imul
lahf
jne
push
fisttpll
clc
lds
fiaddl
add
rcrb
xor
and
jmp
push
dec
jp
ljmp
sbb
test
and
sbb
lret
cld
xor
leave
lock
mov
repnz
call
fidivs
inc
lcall
xor
mov
mov
lret
mov
movsl
push
cmc
movl
ficompl
test
leave
icebp
and
mov
lret
sub
mov
mov
les
enter
enter
clc
ret
in
popf
cmc
inc
cs
pusha
dec
push
lcall
adc
stos
jne
mov
out
out
aad
bound
xor
sub
lds
filds
in
mov
outsb
andl
jecxz
sub
add
mov
insl
xor
add
jg
sbb
in
mov
mov
mov
sbb
insl
dec
pop
push
inc
sub
cmp
add
faddl
push
loope
les
mov
adc
xor
fnstsw
xchg
std
adc
sbb
push
int3
insb
shll
fstps
xor
push
or
cwtl
push
mov
and
or
stos
xchg
mov
xchg
jbe
xchg
sbb
cmp
imul
pop
mov
lock
js
in
or
sbb
stos
in
mov
imul
mov
data16
lret
add
ds
adc
cli
je
fsubs
jo
mov
stc
mov
inc
ficoml
popa
mov
mov
adc
iret
mov
or
sbb
loope
and
cmp
call
clc
sub
push
add
cmpb
add
inc
pop
pop
sbbl
lods
jecxz
popf
sti
inc
or
movsb
stos
inc
xchg
jne
mov
jecxz
add
adcb
push
cmp
cli
mov
sarb
mov
lock
in
xchg
jl
cmpsl
int
jecxz
and
mov
sbb
mov
cli
sbb
xchg
test
popl
je
dec
pop
add
psrad
pop
and
pop
and
pop
sbb
sbbl
out
bsf
and
bound
inc
jbe
mov
int3
cli
movl
lock
das
stc
or
in
cmp
mov
sbb
andl
data16
sbb
xchg
sti
and
cmp
mov
mov
scas
xchg
mov
push
xor
lahf
jo
fdivrl
push
aad
js
inc
mov
imul
and
xchg
mov
mov
loopne
push
cwtl
pop
push
aad
jmp
or
cmp
xchg
push
sbb
push
xor
cmp
or
push
adc
je
fildl
insb
aaa
cmp
dec
cmp
and
push
mov
test
pop
sbb
andb
arpl
xchg
fsubs
movsl
inc
icebp
sub
dec
and
clc
xor
xchg
pusha
push
ja
test
xchg
js
leave
pop
cmp
inc
cmpsb
adc
insb
fsubp
flds
cmp
and
pop
add
cmpsb
sahf
pop
in
mov
or
call
cmp
insb
sbb
inc
sub
jns
cmp
fidivs
adc
jnp
jle
fildl
inc
rcrl
mov
popa
sbbb
loop
dec
lcall
and
sub
mov
jae
mov
gs
push
inc
into
popf
pop
loop
xchg
push
aam
jge
pop
ljmp
add
cmp
cmpsl
pop
mov
mov
pop
mov
cld
cwtl
lcall
pop
xchg
cmp
mov
pop
dec
fdivr
mov
mov
orl
and
mov
movsl
ss
push
lds
mov
or
fisttpl
std
movsb
mov
ljmp
sbb
add
shl
pop
mov
cwtl
stos
add
mov
pop
mov
cmp
fimull
mov
add
fsubl
es
popf
neg
insl
cmp
jmp
mov
fldt
xor
adc
loope
cmp
sbb
dec
xchg
shrl
sahf
cld
cld
mov
or
fimuls
int3
fisubs
inc
outsl
push
incb
jle
cwtl
or
push
js
lahf
push
cli
dec
test
pop
jl
xor
flds
gs
mov
mov
and
inc
mov
or
mov
adc
testb
add
sub
repnz
pop
push
jae
test
out
test
push
mov
cmp
xchg
test
cmp
and
aad
cmp
push
cwtl
push
cmc
ret
mov
in
cmp
dec
xor
es
pop
outsb
stos
insb
jle
sti
adc
pop
sti
in
xor
add
push
xor
lahf
mov
ljmp
mov
ret
mov
mov
sbb
pop
fndisi(8087
fnstcw
std
dec
pop
cmp
adc
fadd
imul
loop
ret
dec
pop
orb
cld
push
repz
jno
gs
sub
int
mov
adc
pop
addr16
jbe
and
xor
imul
das
jecxz
sbb
out
scas
mov
xchg
add
outsl
inc
test
push
or
pop
add
cmpsl
in
in
aaa
adc
mov
mov
dec
pavgw
xchg
faddl
mov
jo
push
inc
cmp
or
and
dec
xchg
adcl
mov
jmp
repz
lcall
pop
ljmp
cmc
lds
jge
mov
enter
mov
add
push
scas
mov
sbb
rcrb
andb
sub
inc
push
lcall
mov
mov
insl
ret
popf
imulb
daa
dec
jmp
sbb
mov
and
loope
ret
pusha
inc
std
sbb
stos
dec
dec
sbb
repz
inc
pusha
mov
rcrb
inc
sbb
test
and
pop
pop
push
inc
xchg
test
mov
adc
cli
ret
outsb
adc
push
lock
sarb
and
adc
xchg
mov
cmp
pusha
cmpsb
pop
mov
test
pop
lcall
mov
xchg
outsl
xor
inc
push
popa
xchg
sub
dec
arpl
daa
cmp
fimull
inc
rcrb
fstpt
movsb
idivb
mov
outsl
or
hlt
cmp
dec
pop
adc
cmp
insb
pop
or
cmp
dec
jo
pop
aaa
icebp
aad
fmulp
cmp
movsl
push
pop
in
inc
mov
inc
frstor
stos
push
dec
xor
mov
lods
push
jns
mov
sub
in
xchg
out
mov
sub
or
jo
ja
stos
or
icebp
iret
or
loop
sbb
outsl
pop
test
fs
xlat
lcall
lret
xchg
in
enter
or
or
sub
insb
xor
inc
mov
popa
cmpsl
es
lret
cwtl
out
mov
and
jmp
sbb
adc
pop
mov
mov
sub
push
stos
jmp
outsl
daa
xchg
stc
in
fwait
and
repnz
pop
shrb
add
fstps
xchg
cmp
cwtl
push
cmp
lods
adc
inc
push
imul
aaa
dec
sub
addr16
pop
sti
inc
into
jo
insl
xor
fcom
imul
lods
pop
loop
jp
jle
mov
mov
repnz
cmpsl
loopne
mov
es
out
jo
fld1
movsb
inc
pop
stc
add
xchg
movsl
in
add
ljmp
mov
das
cmp
dec
cs
and
xor
sub
fcmovb
dec
icebp
out
clc
and
sub
jno
scas
sbb
popa
icebp
ret
fisttpll
into
pop
loop
and
lret
orl
or
dec
dec
mov
call
call
popa
sub
es
out
mov
cs
add
or
test
ljmp
push
daa
cmp
xchg
or
hlt
inc
scas
dec
pop
pusha
jecxz
mov
sub
jle
aaa
mov
insb
mov
fbld
lret
ja
sub
xor
sub
or
test
sbb
or
or
out
test
xchg
sub
stos
mov
cmp
clc
mov
xor
mov
ficompl
ss
sub
psrlq
xor
sbb
int3
add
shlb
dec
imul
sub
mov
xchg
lea
jle
xlat
xor
imul
outsl
inc
pop
mov
xor
xchg
adc
cmpb
lds
mov
cmp
fdivrs
pop
cmp
inc
adcb
shll
adc
iret
pop
fisttpll
dec
shrl
or
andnps
pop
sbb
lea
cwtl
stc
dec
ja
pop
adc
fstps
adc
stc
ss
sti
xchg
add
notb
ret
push
lods
inc
stos
adc
sarl
test
dec
adc
sbb
sub
jo
fdivrl
in
in
sarb
repnz
xchg
scas
mov
shll
out
cwtl
push
mov
popf
popa
or
insl
add
daa
lods
inc
fimull
pop
sbb
mov
inc
mov
frstor
lds
insb
nop
mov
mov
in
movsb
adc
mov
and
mov
cwtl
inc
jp
sbb
mov
fwait
xor
pop
fmulp
sbb
jne
mov
push
repz
js
in
xchg
mov
popa
fcoms
adc
inc
daa
leave
sbb
cmp
fnstenv
and
inc
rcll
aad
scas
lahf
dec
push
sahf
jne
aad
dec
fwait
scas
inc
pop
xlat
fldcw
xchg
cmpl
fsub
xor
inc
mov
rcll
sub
mov
push
clc
and
mov
shl
cld
xchg
sub
pop
outsl
jbe
mov
mov
push
cmp
or
adc
jo
push
sbb
les
into
orl
xor
pop
push
fwait
push
pusha
xchg
in
xorps
arpl
fidivs
cwtl
and
mov
mov
push
loope
pop
rcrb
mov
aad
inc
pop
fwait
in
jnp
and
pop
int
or
lds
stos
pop
xor
mov
rclb
dec
je
adc
xchg
inc
and
sbb
fabs
test
roll
aad
adc
decl
sub
pop
adc
les
stc
dec
xchg
push
jae
test
and
adc
lods
sbb
movsb
stos
out
xchg
out
jns
lods
hlt
arpl
in
hlt
subb
push
mov
jbe
outsl
addr16
rcrb
lock
imul
in
pop
loopne
sbb
cmp
cmp
mov
cmc
push
lods
jle
mov
lret
inc
in
pop
add
push
cmp
aaa
stos
jmp
mov
jge
push
stos
mov
and
or
out
push
jmp
mov
mov
sbb
adcl
fs
mov
or
fnstenv
or
inc
mov
push
mov
pop
add
mov
inc
mov
cli
loope
sbb
mov
xchg
imul
lea
cmp
mov
sbb
loope
xchg
test
pop
stos
loopne
ds
pop
leave
pop
cli
cmp
jg
xchg
xchg
insl
les
int
popa
push
dec
ljmp
in
loope
sbb
push
scas
and
ret
lods
das
push
cmp
dec
ds
and
adc
cmovae
dec
mov
leave
pusha
jne
mov
es
lret
dec
inc
jns
xchg
dec
lods
ret
test
mov
aam
lahf
jle
test
mov
dec
out
pop
mov
lea
lods
ret
push
add
xchg
xchg
sub
mov
pop
daa
sbb
ss
fists
or
lods
xorl
fwait
je
in
push
repz
adc
mov
inc
push
shll
or
mov
push
fcomps
pushf
test
mov
cli
test
movsl
adc
test
xlat
aam
add
rclb
decb
scas
mov
ficoms
lret
push
jl
and
add
push
and
xchg
fdivrl
xor
lcall
fists
pop
bound
and
repz
call
mov
iret
fs
lea
mov
pushl
jp
in
aaa
in
and
inc
cwtl
add
push
stc
xchg
add
jno
mov
lcall
outsb
cmp
aaa
mov
in
or
lock
jmp
dec
or
mov
inc
xor
mov
add
sub
lods
adc
cmpsb
mov
clc
out
cmpsl
pop
pop
pushf
hlt
and
pop
jle
movsl
mov
push
dec
xor
xchg
mov
xchg
cwtl
fmul
sub
arpl
xchg
mov
sti
outsl
dec
das
fimull
pushf
aam
mov
mov
scas
pop
jg
sub
adc
in
mov
out
fs
inc
and
lahf
and
mov
pop
fnstcw
fdivs
sub
cltd
dec
xor
adc
jp
sbbb
repnz
mov
cmp
out
sbb
inc
aad
xor
mov
cld
lds
mov
fs
in
lahf
pusha
cmc
rorl
lret
dec
test
fnstsw
pusha
push
leave
cmp
std
loop
mov
test
ret
adc
add
bound
and
insb
jns
cli
mov
push
mov
pop
das
and
ss
enter
loopne
mov
enter
int
mov
ds
add
adc
pop
and
inc
idivl
or
addl
jns
enter
push
dec
xor
cmpb
sbb
push
add
dec
cmp
pop
sub
daa
sbbb
outsb
mov
inc
sbb
add
xchg
pop
js
ret
cs
fcmovnb
loopne
jbe
xchg
push
sarl
and
stos
mov
push
cs
pop
sub
lret
mov
insl
or
daa
dec
mov
push
or
mov
cltd
push
insb
add
out
les
mov
mov
bound
cli
test
orb
pop
add
sbb
dec
pop
aas
nop
cmp
cmc
ret
inc
int
aad
add
push
jb
mov
or
je
scas
push
pop
push
hlt
add
testb
lds
mov
jbe
inc
or
push
sbb
scas
scas
dec
lods
rcl
sbb
in
mov
xor
fstpl
pop
and
mov
mov
decl
jl
mov
jp
xchg
xor
mov
or
sbb
lods
sar
or
cmp
xchg
loop
jnp
test
aas
sti
arpl
into
mov
add
and
test
xchg
mov
lahf
out
lods
lods
sbbl
lods
xor
xchg
lahf
lods
out
insb
xor
cmc
push
mov
push
push
inc
push
mov
pushf
jb
rcll
int
mov
stos
mov
fstps
fcomp
jne
andl
mov
dec
or
cld
xchg
pop
shld
adc
adc
mov
inc
lds
xchg
sahf
rcr
rcr
lcall
aam
dec
fxch
imulb
shlb
jbe
mov
fiaddl
out
divb
pusha
leave
mov
xchg
adc
enter
icebp
mov
pop
sbb
xor
test
insl
fcomip
imul
mov
add
xor
sub
dec
shlb
aam
dec
sbb
push
add
testl
xor
shrb
mov
fdivrp
dec
adc
cmp
dec
sub
nop
outsb
jnp
xor
mov
mov
jge
test
xchg
mov
pop
mov
mov
fisttps
ret
pushf
imul
adc
std
in
xchg
loop
xorl
dec
xorl
test
pop
dec
test
cwtl
cmp
jp
xor
mov
loop
sti
movsl
dec
mov
push
or
cmc
das
jmp
sbb
negb
pusha
mov
popa
add
lods
pop
sub
repz
out
das
sub
enter
stc
mov
addl
call
mov
mov
lods
push
mov
dec
add
xchg
pop
imul
out
cmp
inc
adc
push
adcb
xchg
mov
mov
mov
loop
mov
dec
mov
mov
or
xchg
inc
lea
fwait
test
push
ss
fs
jb
andl
loopne
dec
repz
fcompl
add
cld
scas
cli
pop
add
jle
shrb
sbb
adc
sbb
cmp
call
das
ljmp
push
ds
mov
sarl
mov
or
scas
push
sbb
mov
pop
stc
add
cmp
xor
and
mov
mov
push
dec
cs
pop
inc
bound
lahf
rcr
shll
fcomps
es
mov
mov
add
push
pop
fiaddl
enter
and
adc
add
jno
fcomps
mov
jne
xor
push
and
das
andl
enter
loopne
sub
inc
nop
popf
dec
test
std
push
dec
cmp
cmp
popa
xchg
adc
jne
cmpsb
das
inc
adc
js
imul
adc
outsb
jne
push
xor
js
cwtl
bound
addr16
sbb
adc
adcb
repz
sbb
mov
scas
adc
dec
std
mov
mov
shlb
add
ja
lods
pop
ljmp
mov
mov
or
inc
loop
popa
jne
inc
sbb
xchg
xchg
mov
cld
push
inc
outsb
pop
and
rorl
mov
mov
xor
cmpsl
xor
xlat
mov
lock
jns
subb
fdivl
push
leave
pop
jmp
gs
in
and
fdivs
repnz
push
test
dec
mov
xor
loopne
sbb
push
push
mov
xor
lret
mov
fistl
sub
pushf
mov
mov
mov
sahf
orl
push
and
jo
sbb
cs
add
in
jmp
jl
or
mov
daa
xchg
cmpsb
xchg
out
in
pop
bound
aas
pop
add
cwtl
jne
cli
mov
inc
pop
push
or
pop
inc
ret
loope
cwtl
loop
mov
jl
sbb
out
data16
loopne
sbb
pop
stos
fwait
and
xchg
mov
lock
ret
in
test
mov
lock
fdivp
int3
pop
repnz
test
sti
jae
jle
sub
loope
stc
xchg
dec
dec
push
xor
sti
push
call
pop
cmp
mov
mov
call
cmp
rcrl
jg
xor
shlb
hlt
xchg
jle
or
imul
sti
je
aaa
fldl
or
iret
jb
sbb
pop
mov
adc
insl
lock
dec
lret
gs
xor
mov
cmpsb
dec
mov
les
xlat
jl
mov
test
frstor
dec
stc
leave
cmpsl
inc
arpl
loop
rorb
sbb
fmulp
pop
pop
xor
pop
pop
add
scas
sub
sub
dec
push
imul
dec
adc
in
push
cmpb
fnsave
cltd
push
dec
cmp
jg
jecxz
jae
push
push
mov
inc
cmc
enter
call
icebp
fmul
sbb
mov
cmp
outsl
test
fildll
dec
out
sub
mov
or
popf
fsubrl
int
mov
cmp
adc
push
andl
add
iret
stc
and
sub
mov
pop
ret
xchg
pop
sub
inc
or
inc
outsb
subl
add
lret
cmpsl
je
orb
dec
outsb
jge
sbb
push
and
pop
cmp
mov
push
lods
xchg
scas
dec
in
cmp
repnz
adc
mov
cmp
jno
lock
mov
xchg
cwtl
cmp
sub
imul
cmp
js
fstpl
lds
popa
inc
xchg
cld
stos
cmp
jno
outsl
iret
xchg
pop
fs
incb
bound
cltd
pop
cmp
and
js
pusha
mov
jecxz
cmpsb
leave
jmp
scas
cmp
mov
mov
sbbl
adc
xchg
mov
and
adc
icebp
icebp
dec
sub
mov
decl
pushf
sub
loope
in
dec
xchg
cmp
out
jne
push
or
repnz
sub
and
je
sbb
insb
fiaddl
cmp
pop
push
fbstp
hlt
fadd
sti
jg
insl
arpl
mov
or
add
and
mov
out
addr16
add
dec
mov
jp,pn
mov
pop
out
faddl
lcall
mov
sbb
push
pop
fs
jecxz
push
push
lret
pop
cmp
mov
pop
lock
lret
call
mull
mov
xlat
outsl
icebp
lea
hlt
xor
jnp
sti
jae
jl
ja
mov
push
sbb
jo
fwait
jecxz
arpl
sbb
mov
popa
ret
xlat
add
inc
into
fimull
cld
pusha
negb
push
out
mov
push
cltd
arpl
pop
sbb
sub
inc
inc
mov
stc
out
inc
test
cmp
adc
insl
fistl
mov
sub
lods
ret
out
int3
sub
leave
mov
hlt
push
imul
xchg
nop
xchg
out
dec
xor
sarb
jge
mov
lret
lret
roll
shrb
mov
pop
movsb
sbb
rcrl
dec
popa
jbe
xchg
add
push
xchg
ds
pandn
cltd
fstpt
jno
ror
mov
mov
test
fnstenv
lret
shll
lods
fiaddl
fwait
call
fldl
push
mov
out
mov
ss
stos
xchg
push
bound
in
xchg
lods
adc
aam
fisubl
int
ss
ja
inc
or
xchg
xchg
arpl
shrb
enter
mov
mov
jmp
sub
sti
adc
inc
rcr
pop
add
test
lds
mov
xor
mov
and
inc
je
dec
mov
lods
jp
dec
cmp
lock
jae
or
arpl
fistl
xchg
push
mov
insl
pushf
push
call
repnz
clc
sub
daa
pop
test
cs
pop
clc
arpl
ret
shll
leave
xor
add
mov
xor
movsl
pop
lods
in
sti
adcb
testb
gs
mov
test
rcrl
shrb
ljmp
jecxz
sbb
pop
or
jnp
je
push
and
or
mov
gs
div
sbb
aas
and
pop
add
push
push
roll
adc
rolb
cmp
mov
dec
stos
push
mov
movsb
push
test
add
iret
mov
scas
aad
and
jle
sub
pop
jle
lahf
pop
ja
mov
cmc
or
or
stos
ljmp
mov
inc
mov
xchg
jns
xchg
shlb
data16
mov
sbb
je
xor
push
pop
mov
bound
dec
std
sub
xchg
ret
rol
inc
mov
enter
mov
jb
xor
outsb
ljmp
pusha
xchg
jo
cld
pop
sahf
add
mov
jg
ret
fistpl
inc
lds
pop
out
cmpsb
fistl
gs
cmp
sbb
push
sarl
cltd
and
cmpsb
imul
outsl
mov
sub
dec
std
ror
dec
in
rcll
aaa
xchg
xlat
cmp
shl
mov
mov
movsb
cmpsl
xchg
xor
call
ficoms
cmpsb
popa
adc
push
pop
loop
or
lahf
ljmp
daa
jl
xor
jbe
add
mov
jmp
inc
call
jg
adc
mov
and
out
adc
xor
inc
mov
add
cmpsb
or
cld
mov
mov
xlat
outsl
push
int
cmp
test
sbb
gs
jne
out
mov
ret
pop
add
cmpsb
jae
mov
dec
xchg
mov
mov
or
push
test
mov
stos
ret
cltd
lea
pop
inc
sbb
std
iret
dec
leave
mov
dec
std
aad
imul
mov
mov
sbb
adc
push
sbb
sub
loopne
out
pop
int3
pop
ror
imul
jecxz
dec
pop
imul
mov
aas
outsl
xchg
push
mov
xor
testb
aad
inc
inc
icebp
mov
jns
shll
pop
out
push
rolb
ret
sbb
nop
sub
cmp
xchg
in
std
test
int
sub
jmp
arpl
dec
imul
push
aaa
enter
adc
jae
lahf
hlt
das
in
mov
das
and
imul
fnstsw
shlb
nop
fwait
pop
in
inc
cld
fld
bound
push
xchg
sub
sbb
mov
mov
scas
nop
or
mov
jb
enter
dec
jae
pushf
test
mov
fs
mov
dec
and
dec
or
testb
sub
mov
cmp
add
test
les
add
xor
or
jp
clc
jl
lods
sbb
fisttpll
mov
call
int3
ja
push
pop
cld
mov
stos
sub
ret
movl
pop
add
test
pusha
or
fldl
addr16
out
jo
push
dec
mov
notl
sub
and
adc
int
popf
cmc
sub
call
pop
xor
sbbb
cmp
into
inc
push
push
addr16
in
sub
add
sbb
sbb
inc
xor
xchg
jbe
or
popa
jge
sub
je
scas
js
fisubrl
nop
stos
dec
call
es
loop
adc
xchg
xlat
xchg
mov
sbb
add
jg
mov
push
inc
popf
xchg
popl
cmc
jl
mov
xchg
push
dec
push
mov
push
dec
jg
ljmp
push
cmp
je
andb
enter
xlat
sub
ret
outsl
sbb
or
std
and
stos
mov
and
jnp,pn
flds
icebp
mov
push
xor
mov
cmp
hlt
pushf
fdivl
mov
ss
lahf
test
push
imul
movsb
jmp
ret
dec
cmpl
enter
shll
sbb
outsb
dec
rcll
loope
mov
int
mov
push
in
cmp
dec
or
fstpt
sub
pusha
pop
sbb
add
cs
xor
es
mov
cmp
adc
push
fsubl
or
clc
mov
or
or
push
imul
mul
adc
cmc
adc
xchg
shrl
inc
adc
aas
mov
lahf
es
into
add
in
xor
mov
mov
movl
ror
adc
add
cmp
inc
es
mov
mov
mov
pop
and
and
jnp
adc
mov
push
cmpsb
out
sbb
cld
stc
push
addr16
fbld
mov
sbb
and
xchg
or
lock
fcomps
ljmp
int
add
lcall
jns
inc
js
fstpl
dec
loope
add
jne
cmc
into
pop
mov
push
and
mov
ret
mov
je
in
sbb
in
pop
adc
xchg
jne
mov
in
push
loope
icebp
das
mov
push
xchg
jle
in
sbb
sbb
pop
lock
xlat
and
scas
lods
and
mov
cwtl
mov
add
fmull
lods
inc
pop
mov
call
cli
in
or
sahf
xorb
xor
fisttpl
loopne
mov
outsb
inc
fmull
fnstsw
loopne
dec
sbb
xor
add
push
ss
pop
cwtl
cmpsl
shll
pop
icebp
lods
addr16
fdivs
pop
push
fisttpll
cli
inc
cmpsb
inc
lods
adc
mov
adc
xor
imul
inc
jb
or
add
fwait
push
lods
js
int3
and
pop
xchg
mov
out
gs
jge
mov
leave
jno
sbb
add
dec
lock
sbb
push
pop
push
das
xchg
xor
xchg
lods
cmp
jp
test
xchg
mov
push
push
popf
loop
mov
sbb
leave
loopne
ja
cmpsl
loopne,pn
pop
in
shlb
mov
push
cwtl
sub
xorb
fcmovb
pop
outsb
cmp
add
pop
aas
enter
jne
add
mov
sbb
lahf
pop
jg
std
inc
sarb
mov
xchg
jo
mov
ficoms
jmp
pop
aas
mov
popa
and
sbb
push
jge
sbb
add
xchg
xor
dec
sbb
push
cmpsb
out
inc
lock
sub
enter
pushf
adc
cmp
imul
lret
je
shrb
lock
inc
jge
in
jle
sbb
out
gs
js
dec
lds
pop
arpl
push
mov
inc
mov
lods
jmp
cs
popf
loop
adc
push
jae
sub
lret
fs
daa
jmp
push
fimull
sub
repz
inc
rorb
leave
mov
cli
mov
sub
bound
mov
loopne
cli
lcall
xchg
mov
ss
aas
xchg
or
push
mull
mov
lret
inc
rcrb
add
push
xchg
add
aam
mov
xor
shrl
subps
mov
rcr
lahf
les
mov
std
jl
mov
mov
cmpsl
push
fisttpl
cmc
mov
lods
add
mov
push
pop
jno
adc
sbb
mov
pop
jge
xor
mov
loope
dec
sti
addr16
test
lods
cmp
pop
pop
jle
cmpsb
or
and
xlat
push
fucomip
popa
jmp
inc
mov
or
xchg
mov
out
out
iret
mov
pusha
pop
mov
xchg
xchg
sbb
xchg
dec
inc
arpl
adcb
cmp
inc
sub
test
popa
pop
mov
or
cwtl
or
stc
or
pop
insb
fisubl
in
and
repnz
cli
ja
gs
loop
lcall
jbe
test
fwait
mov
xchg
sbb
mov
insb
push
add
sbb
push
push
push
xchg
inc
add
jnp
cmpsl
adc
sbb
cmp
dec
ja
cmpsl
mov
or
repnz
or
ret
lcall
aaa
insl
sbb
jmp
xchg
insb
pop
cmp
insb
xchg
fwait
insb
sbb
mov
mov
cld
inc
ret
cmc
push
adc
mov
sbb
fsubl
cld
in
adc
xor
stc
add
adc
xor
bound
mov
sub
cwtl
xor
je
loopne
jbe
cmpsl
cmp
sahf
inc
in
test
shll
inc
dec
fisttpl
sbb
or
push
shll
outsl
scas
std
daa
bound
scas
push
pop
push
adc
iret
insb
sbb
ss
dec
pop
mov
std
cmp
fstl
jl
add
in
mov
fisttps
int
and
cmp
pop
mov
xlat
sbb
adc
adc
out
inc
popa
cmp
cmp
stc
pop
or
inc
jnp
out
outsb
xchg
jbe
mov
pop
sbb
push
in
mov
dec
clc
gs
or
aad
push
js
pushf
out
and
xor
inc
lret
in
test
jbe
cltd
hlt
sub
rclb
cmpsb
or
inc
aam
xor
dec
mov
jae
outsb
mov
rol
add
cmp
inc
lahf
or
cmp
sub
add
mov
and
enter
shlb
out
add
adc
inc
insb
xchg
mov
je
push
or
and
dec
int3
test
outsl
adc
int
add
and
mov
imul
hlt
int
std
jns
xchg
xor
idiv
pop
xor
fwait
insb
mov
stos
or
dec
add
sbb
dec
xchg
out
shll
addr16
ljmp
data16
xchg
popl
bound
sbb
jne
outsl
aad
mov
pop
add
xor
into
xchg
jnp
loope
stc
dec
jg
add
or
test
cmc
shll
jmp
inc
jbe
ret
sub
xchg
add
and
mov
lcall
imul
pop
mov
enter
mov
xchg
mov
enter
jne
mov
lret
pop
xchg
incl
jnp
ja
push
mov
das
add
jo
scas
mov
adc
dec
or
hlt
mov
hlt
loopne
mov
out
in
flds
stos
je
adc
rorb
mov
shl
dec
mov
subb
cmp
out
fdiv
sub
inc
pop
xchg
lret
mov
push
push
dec
rcl
jmp
and
mov
mov
mov
and
dec
sbb
jo
adc
popa
cld
outsb
xchg
pop
lds
xchg
dec
lahf
mov
jle
mov
inc
jmp
add
sub
xchg
xor
push
das
outsl
jns
frstor
addl
popl
les
jnp
cmp
jb
sub
pushf
pop
mov
int
push
cmp
lods
mov
mov
notb
ret
or
dec
movsb
xchg
gs
cli
js
xchg
into
mov
iret
out
push
bound
inc
arpl
mov
into
xchg
fwait
mov
mov
or
jae
loopne
addr16
popf
btc
push
sbb
adc
loop
sub
pop
pop
inc
rcl
fcmovnb
add
cli
dec
pshufw
sub
mov
int3
jne
xor
fnsave
push
dec
lahf
mov
sbb
mov
fstl
sub
add
stc
fstpt
mov
cmpsb
push
lret
les
lahf
mov
sub
ss
add
cmp
jmp
mov
xchg
push
mov
insb
sahf
loopne
jb
leave
mov
cs
addr16
inc
inc
out
jae
mov
dec
dec
cltd
push
mov
cli
sbb
or
vpunpckldq
sbb
dec
test
loop
aam
mov
dec
idivl
lahf
test
ret
mov
xchg
out
adc
add
xchg
notl
push
cmpb
jle
mov
cmc
lods
pop
daa
cmp
lcall
mov
enter
xor
addr16
add
leave
out
add
sahf
add
pop
addr16
sbb
sbb
loope
sahf
arpl
fs
fdivs
int3
mov
or
and
mov
rcrl
aas
dec
lcall
dec
add
shl
cld
ret
popf
xchg
ret
sbb
popf
xchg
xchg
cmpsl
pop
inc
nop
outsl
sub
rcr
xorb
sbb
mov
xchg
dec
out
sbb
push
gs
dec
mov
xchg
xchg
cltd
or
hlt
dec
fnstcw
adc
jg
arpl
sub
pop
test
mov
sbb
cwtl
push
inc
xchg
jae
popf
cs
scas
jp
out
inc
lea
push
es
add
int
sti
ja
xchg
sub
mov
xchg
and
je
push
jb
pop
sub
scas
orb
imull
addl
push
or
dec
sbb
ja
adc
mov
adc
and
roll
push
mov
ds
sbb
mov
mov
pop
es
sub
mov
mov
sbb
mov
pmulhuw
mov
aad
mov
fldenv
or
dec
out
xor
adcl
or
xchg
nop
dec
ds
clc
adc
imul
fstp
aad
mov
stos
mov
lcall
fimuls
enter
sub
inc
or
in
fidivs
mov
or
xchg
inc
in
fistps
ret
jmp
mov
xchg
ret
roll
sub
hlt
inc
sti
adc
popa
cwtl
mov
out
int3
es
mov
clc
mov
outsb
jp
imul
adc
dec
imul
push
adc
adc
push
pop
lock
iret
push
mov
xchg
mov
mov
xlat
fldenv
pop
add
or
cmpsb
flds
mov
aaa
adc
fcmovnbe
xor
or
and
iret
mov
sbb
inc
inc
cwtl
stc
aam
adc
ret
mov
cwtl
out
jle
cmp
inc
push
enter
dec
or
jae
mov
ficoml
add
es
mov
ficomps
sbb
int3
clc
nop
mov
les
sub
into
pop
mov
pop
in
xchg
jns
and
xchg
mov
add
jle
xor
jns
xor
or
imul
mov
mov
mov
pop
insl
popl
loop
pusha
ss
fcoml
sbb
and
push
pop
testl
jmp
pop
pusha
test
pop
loope
inc
nop
std
sbb
push
pop
daa
push
pop
lea
ror
pop
jg
iret
jnp
aam
add
xor
test
sbb
rcll
add
push
cmp
mov
int3
xlat
adc
xor
sti
in
jns
arpl
rcrb
mov
outsb
popf
outsl
into
mov
int
adcb
jl
insb
xchg
movsb
je
inc
sti
divl
lods
inc
dec
data16
aas
inc
mov
sbb
int3
jg
push
mov
jmp
xchg
adc
movsl
roll
mov
mov
push
mov
shlb
jecxz
lds
jg
call
mov
xchg
inc
les
jbe
test
loope
mov
mov
xchg
mov
inc
aam
mov
mov
mov
push
addr16
adc
ljmp
mov
mov
test
dec
jecxz
div
mov
cmpsb
test
or
jle
ficoml
xor
pop
or
stc
jge
sbb
or
dec
mov
pop
stos
adc
mov
ja
inc
jg
xor
fucom
addr16
std
aad
mov
ret
mov
push
pushf
popa
aad
int
adc
adc
int3
or
stos
push
pop
aad
movsb
in
xor
adc
aam
mov
mov
test
dec
pop
jge
roll
xchg
out
insl
or
mov
rolb
xor
js
push
das
sub
cld
or
mov
js
inc
orb
inc
test
jbe
leave
cmovb
add
mov
out
ficoml
adc
xchg
sub
dec
sbb
lcall
adc
fs
jle
pop
imul
fcoms
mov
in
lods
aad
or
cmp
shrb
adc
in
xchg
mov
mov
or
mov
push
inc
aam
cmpsl
and
fs
cmc
pushf
ss
icebp
jp
inc
loopne
and
pop
push
mov
inc
mov
mov
mov
lret
inc
repnz
mov
mov
fldt
movsl
lock
xlat
fldl
dec
movsl
fstpt
or
cs
addl
test
lods
test
and
mov
neg
int
insb
ljmp
inc
lock
sbb
cmpsl
jl
push
inc
or
lods
scas
jns
testl
mov
dec
xor
loop
mov
sti
mov
sub
mov
hlt
mov
adc
aam
les
out
jbe
cmp
jmp
hlt
xchg
lret
and
sbb
jbe
mov
mov
mov
mov
pop
mov
call
or
mov
mov
leave
mov
sbb
jl
cli
insl
rorl
int3
pop
mov
dec
call
mov
clc
mov
push
andb
push
xchg
imul
sbb
orb
inc
ja
imul
jg
xchg
mov
dec
xor
enter
pop
gs
add
pushf
in
mov
push
pop
cmp
inc
loope
out
inc
addl
sub
subl
addr16
loopne
mov
mull
and
jb
xchg
fdivrs
cmp
pushf
jnp
or
push
rcrb
cmpsl
mov
subl
arpl
cmpsl
push
push
insl
sub
cltd
shr
bound
cmp
push
push
push
in
inc
xchg
rcll
mov
call
jge
stc
sub
sbb
push
lret
xchg
push
jnp
sbb
pop
sti
test
test
push
rolb
inc
adc
lds
imul
in
pop
jnp
in
ss
inc
xor
sbb
push
into
push
dec
aad
sub
aas
aad
pop
inc
outsb
pop
test
fs
jge
pop
xlat
js
sub
jecxz
push
mov
cmove
test
sub
int
jge
xchg
aaa
pop
dec
push
sahf
ret
jle
lahf
jae
push
pop
push
iretw
dec
add
jb
loop
mov
repz
push
fnstenv
sbb
mov
popf
daa
mov
stos
sti
push
xor
dec
inc
popf
xor
jno
sub
sbb
mov
and
push
popf
xchg
mov
ret
adc
icebp
sub
in
fidivrs
cmc
sbb
adc
inc
jge
nop
nop
xchg
jmp
test
sbb
xchg
push
pusha
mov
cmp
inc
lods
mov
and
sbb
and
dec
in
call
push
and
pop
sbb
fisubl
iret
test
sarl
inc
jno
sbbb
and
dec
lea
mov
test
jmp
push
mov
sti
sbb
inc
mov
imul
cmp
add
add
dec
mov
add
pop
stos
cltd
mov
mov
imul
das
add
pop
ss
xchg
lahf
fbstp
mov
fsubrs
mov
cmp
mov
lret
push
lahf
out
xchg
je
pop
cmpsl
jns
iret
inc
dec
and
jmp
jecxz
push
fwait
push
adc
xor
imul
mov
mov
lods
push
pop
xchg
xchg
push
jmp
push
ds
lahf
scas
jg
push
imul
or
inc
push
out
add
sub
test
jg
pop
loop
mov
movsb
scas
push
aas
mov
mov
test
cmp
jns
jge
add
bound
add
imul
cmpb
and
aad
cmp
and
dec
clc
xor
push
fsubrs
and
dec
xchg
inc
scas
xchg
imul
lcall
aad
adcb
bound
std
pop
fwait
jns
jb
repz
and
push
testb
xor
or
arpl
lea
push
sub
xchg
add
notb
lret
cmp
mov
imul
push
xchg
movb
insl
mov
xor
mov
dec
scas
cmp
icebp
les
xchg
sub
call
or
mov
imul
js
aaa
sbb
cmp
and
xchg
push
mov
divl
loop
iret
cld
xchg
movsb
and
in
and
clc
xlat
mov
mov
jno
xlat
cmp
push
rorl
sahf
pop
pushf
inc
adc
adc
add
sbb
ljmp
cmp
je
push
cmp
sahf
ljmp
pop
push
ss
xor
roll
divl
sub
xchg
std
xchg
mov
icebp
pop
push
mov
ja
pop
stos
sbbl
pop
add
std
xor
push
push
ret
mov
fdivr
jae
shll
and
mov
cltd
mov
test
lret
jns
inc
pop
es
std
arpl
inc
nop
fnstcw
loopne
gs
dec
mov
movsl
scas
mov
aas
icebp
jbe
test
cli
mov
icebp
ret
mov
mov
push
xor
mov
insl
in
mov
add
daa
xchg
xchg
fists
sbb
pop
xchg
add
ljmp
adcl
mov
push
cwtl
arpl
jae
push
or
jecxz
das
fmuls
ds
aam
pop
ds
popa
dec
or
leave
mov
add
in
std
push
lcall
jmp
add
test
jl
adc
clc
cli
dec
pop
data16
jle
stc
inc
loope
jns
shll
sub
mov
test
sub
xor
dec
cmp
inc
dec
mov
leave
cmp
dec
mov
push
frstor
pop
lret
outsb
cmp
call
mov
sbb
cmp
mov
adc
and
dec
jns
ret
sub
fdivrs
jno
sbb
dec
gs
xor
jo
cmpb
stos
mov
leave
dec
cmp
rcr
or
lock
ret
sbb
fldenv
push
test
test
sbb
dec
fcom
test
inc
xchg
loope
pop
pop
push
inc
pop
fstp
adc
xchg
mov
jb
cmp
outsb
mov
movsb
movsb
mov
adcl
add
pop
outsl
lahf
pop
cmp
push
int3
jnp
jecxz
pop
dec
mov
xchg
dec
lcall
shll
stos
mov
pop
add
std
decb
call
cltd
pushf
in
out
xor
out
stc
mov
push
je
stos
sbb
sbb
in
push
lretw
sub
or
push
push
push
xchg
fcmovnb
divb
sahf
insb
xor
ja
adc
movsl
outsl
fcoms
dec
iret
std
not
sub
jbe
movntps
add
sub
mov
in
imul
ja
push
movaps
jp
sbb
push
cmpsb
sub
cmp
pop
jle
sub
into
in
mov
inc
daa
in
mov
aas
mov
rol
pop
mov
xlat
outsb
movsl
and
mov
mov
mov
fldenv
xor
dec
int
push
xor
pop
jae
sbb
add
aas
cmpsb
das
mov
push
orl
rcll
repz
sub
adc
pop
push
in
and
xchg
dec
nop
inc
and
and
test
notb
scas
xchg
sbb
pushf
add
sub
divl
aad
add
out
adc
sti
lahf
inc
addl
jae
mov
adc
push
sbb
sub
mov
or
dec
jns
out
adc
aas
ret
xor
or
dec
mov
sti
data16
cmp
pop
iret
or
in
cmp
dec
inc
test
push
add
daa
les
and
jno
or
xchg
subl
xor
test
and
inc
sub
sbb
sbb
push
data16
mov
int3
jb
into
mov
jae
std
or
out
int
arpl
cmpsb
push
xchg
mov
mov
int3
aas
cli
push
sub
and
into
and
and
push
sub
mov
outsl
xchg
sub
arpl
sti
aam
push
inc
cmp
loopne
push
jae
xlat
mov
aas
jmp
sbb
stos
mov
neg
lret
xor
popf
pop
push
push
fidivl
or
int3
loope
sbb
mov
jne
pop
loop
jecxz
push
push
stc
cmp
mov
rep
pushf
sbb
pop
sbb
pop
cmp
out
mov
dec
sub
lock
sub
mov
mov
ja
pop
sbb
xor
sahf
inc
sub
sub
roll
pop
jno
adc
loope
int3
sbb
pop
push
jns
stos
pop
dec
ret
mov
dec
sub
jns
mov
push
and
test
xor
inc
xchg
fcoms
imul
lods
ljmp
push
into
jno
mov
gs
nop
or
sti
sub
dec
adc
xchg
nop
mov
dec
in
icebp
mov
pop
sub
pop
out
int
ret
pushf
adc
jecxz
repnz
pop
cmpsb
dec
xchg
lods
push
jbe
stos
and
aad
ret
gs
addr16
fildl
sbb
into
lret
inc
rclb
out
mov
divl
and
add
push
sbb
cmc
in
xchg
inc
iret
dec
ds
mov
pop
push
cmp
lods
or
cmp
sarl
and
mov
aad
imul
or
loop
sbb
rorl
or
int3
es
sbb
adc
mov
push
xchg
pop
loopne
popf
adc
adc
stos
add
mov
int
push
inc
jno
ficomps
cmpsl
cmp
fs
into
sub
shrl
push
or
push
dec
and
sub
ds
mov
daa
jmp
push
sub
xchg
aaa
jmp
add
sub
sub
mov
mov
out
fdivl
mov
dec
pop
and
dec
in
test
out
or
lods
xor
mov
cmp
inc
cli
les
lods
add
mov
ljmp
push
jne
xchg
sbb
mov
sub
push
add
in
icebp
jne
xchg
pop
xchg
sub
addb
pop
cmp
push
aad
dec
dec
jmp
jns
mov
das
icebp
shrb
sbb
popf
lods
adc
xchg
jmp
test
test
pop
mov
fcmovnu
sub
jmp
neg
add
inc
push
inc
adc
push
sbb
mov
xor
adc
outsl
lret
sbb
pusha
push
push
pop
shlb
mov
inc
cmp
jmp
call
out
imul
xchg
adcl
jp
adcb
xchg
mov
sti
mov
mov
xor
inc
mov
gs
mov
leave
dec
rcrb
jne
outsb
shll
popf
xor
jecxz
lods
jg
inc
cmc
dec
adc
std
stos
or
inc
pop
add
mov
sbb
and
cwtl
les
pop
les
xor
out
mov
repz
push
out
iret
gs
orb
xchg
sub
dec
fistpl
rolb
or
dec
movsl
push
sub
xlat
push
pop
insb
loop
xor
jge
mov
and
mov
andl
mov
andps
pop
jmp
and
cltd
jecxz
push
mov
cmpsb
emms
clc
js
js
inc
int3
adc
flds
xchg
cmpb
push
shl
je
cli
push
push
mov
test
xlat
jne
mov
jno
jb
dec
push
mov
std
inc
mov
inc
insb
sub
push
faddl
dec
adc
xchg
dec
mov
xchg
ljmp
ljmp
ret
mov
or
sbbb
sbb
enter
push
bnd
jl
sub
insl
sub
ja
xchg
jg
fstpl
mov
and
int
push
mov
lea
cmp
enter
inc
dec
xchg
insb
xchg
dec
inc
mov
outsb
xor
iret
push
lret
jne
sarb
insb
or
push
not
sbb
push
bound
jmp
push
std
cmc
cwtl
or
adc
sub
push
aas
in
add
outsb
lcall
stc
and
pop
int
scas
add
or
mov
add
xchg
ret
jae
jmp
push
or
cmpb
mov
xchg
loopne
sbb
pop
repz
imul
negb
jns
jecxz
pop
push
push
push
cmp
cmp
sub
sbb
and
addl
jge
cmp
imul
sub
into
stc
movsb
pop
mov
xor
mov
into
mov
movsl
in
sub
repnz
xor
aas
cli
ficoml
sbb
leave
lea
adc
bound
sub
dec
ja
add
popa
mov
xchg
je
jge
cwtl
mov
add
jbe
pop
mov
mov
repz
adc
gs
scas
or
aas
pop
fisttps
shrl
lahf
sub
lods
mov
js
es
or
idivl
mov
cmp
mov
ljmp
pusha
sub
jle
pop
icebp
arpl
sub
sbb
pop
mov
lahf
mov
scas
jne
out
dec
adc
jmp
scas
push
jne
xchg
ds
mov
test
adcl
js
add
adc
cmc
data16
push
xor
rcll
out
int3
loopne
dec
pop
lods
cmp
jg
fisttps
cmp
jnp
js
push
sbb
and
cmpsl
sarb
or
or
jl
dec
ds
out
jg
push
inc
cwtl
dec
stc
fisubrs
andb
mov
sub
mov
cvtdq2ps
out
fsubrs
adc
jbe
dec
lcall
mov
mov
mov
pushl
or
out
add
dec
xchg
push
iret
int
cltd
cmc
or
rorb
cmpsl
adc
add
jg
lds
mov
or
sbb
je
inc
jl
fs
mov
mov
out
jae
pop
fiadds
jmp
scas
jge
das
cmp
mov
dec
je
clc
lods
cltd
movsb
pushf
jge
sub
popf
stc
adc
inc
pop
pop
and
sub
icebp
jmp
mov
mov
ljmp
pusha
fidivl
in
call
imul
in
rclb
enter
pop
shl
fdivl
mov
or
push
cmp
notl
mov
and
loope
add
shll
fstpl
arpl
sahf
push
sbb
dec
std
ljmp
xchg
rcrl
cmovge
rclb
iret
shll
push
out
dec
aad
loop
mov
push
das
push
ja
jle
push
and
dec
add
repz
mov
cmp
add
mov
pop
in
jp
fwait
addl
pop
dec
cmp
outsl
sub
pop
arpl
stos
add
inc
xor
sbb
enter
add
shr
xor
mov
dec
out
inc
inc
sub
add
jo
stos
in
sarb
movsl
call
fidivl
rcrb
mov
xchg
shrb
mov
pusha
pop
test
pop
mov
xor
jae
xor
sarl
jmp
scas
pusha
sbb
cwtl
ror
ret
aas
sbbb
mov
iret
mov
or
cmp
jo
cmpsb
xchg
fldl
adc
adc
xchg
clc
xchg
mov
adc
mov
push
das
fldcw
ja
ja
jb
adc
xchg
jp
sub
cmc
movsl
hlt
xor
mov
je
mov
sub
pop
int3
push
cmp
int
rorl
loop
lods
xchg
or
xchg
pop
sub
into
mov
or
jae
loopne
ds
dec
sub
js
adc
jl
psrlq
pop
jns
int3
das
in
into
sbb
repnz
mov
sbb
popa
fdiv
dec
push
sti
cmp
adc
movsb
outsb
imul
xchg
daa
sub
outsl
sbb
jb
jne
dec
or
call
xchg
add
xchg
mov
ss
sub
xchg
data16
add
push
inc
push
fbstp
pop
xchg
popa
push
jle
cli
dec
mov
sbb
inc
rcrl
sbb
movsb
cs
cmp
sub
mov
xor
mov
xor
and
or
push
das
cmp
sub
inc
test
mov
nop
popa
stos
or
mov
inc
ret
or
and
sub
mov
lds
lcall
sbbl
data16
bound
jne
inc
add
inc
fldenv
mov
ds
push
pcmpgtd
lods
xchg
test
and
xor
cmpb
cmp
pop
xchg
mov
mov
fisubrs
dec
pop
xor
pop
pop
jb
lds
mov
ljmp
repz
ss
or
orl
pop
sub
je
lret
mov
adc
or
inc
adc
shlb
rcr
addl
xor
dec
stc
mov
pop
jle
jb
mov
pop
ret
ljmp
shlb
pushf
jle
sub
mov
jae
loope
call
inc
dec
jbe
out
pop
int3
mov
into
or
lock
or
enter
jb
aad
inc
pop
addl
daa
sub
dec
pop
xchg
inc
jge
xor
mov
xor
int3
inc
push
inc
push
xchg
pop
push
inc
es
sub
cmp
cmp
jecxz
add
scas
adc
xor
iret
push
mov
inc
and
aam
fyl2x
aam
rcll
xchg
dec
sub
mov
xor
dec
pop
sti
add
lods
mov
scas
popf
cmp
sbb
inc
mov
call
jmp
xor
mov
sahf
add
mov
jl
xor
mov
sub
push
lds
sbb
loopne
orb
xchg
pop
lret
shlb
sub
push
fbld
and
aam
jno
xchg
mov
test
imul
xchg
sbbb
addr16
je
mov
dec
jge
jmp
in
sti
adc
mov
xor
in
inc
ror
dec
lods
push
pop
mov
jl
jae
cs
arpl
mov
dec
mov
repz
rolb
push
or
jns
mov
fbstp
xchg
cmp
imul
mov
bound
and
xor
pushf
push
gs
cli
fidivl
cmp
daa
inc
sub
shrd
xor
sbbl
loopne
mov
outsl
shrl
inc
inc
test
or
xchg
xchg
mov
scas
int3
fists
stos
in
insl
pop
jnp
xor
addr16
pop
xchg
lock
in
pop
cltd
cli
add
inc
aaa
cmc
pop
xchg
out
stos
das
lds
pop
inc
iret
jle
incb
int
mov
sbb
cli
inc
movsl
pop
add
pop
inc
push
add
push
push
daa
ficoml
or
fisttpl
and
sbb
dec
and
cmc
push
sub
sbb
nop
add
in
xor
sbb
fstpl
or
call
or
push
aas
addr16
mov
sub
pop
loopne
pop
add
cmp
cmp
pusha
mov
in
or
sahf
pop
mov
adc
test
fs
fisubs
cmp
fdivl
push
cld
push
jg
dec
mov
push
and
xchg
jmp
jne
imul
movsb
cmp
inc
std
mov
pop
lret
pop
xor
xor
out
dec
mov
mov
mov
pushf
or
adc
or
popf
push
lret
and
xchg
loopne
icebp
adc
jge
inc
js
out
roll
sarb
out
mov
jmp
mov
pushf
and
jle
mov
add
rcll
popf
xor
fisubrl
cmp
mov
jle
jns
jae
hlt
repz
mov
xchg
inc
icebp
fisttps
and
xchg
add
testb
mov
testb
lret
sub
xor
and
xchg
leave
sbb
xchg
cwtl
mov
ret
dec
mov
test
cwtl
cmpsl
dec
loope
negb
and
aad
adc
stos
add
cmp
imul
inc
pushf
das
push
or
mov
je
es
push
push
ret
enter
mov
xchg
and
incl
mov
clc
cmp
cli
insb
xchg
movsb
push
inc
add
sub
inc
addr16
add
xchg
push
inc
push
pop
iret
into
mov
jo
cmp
add
xor
xor
fcos
lds
or
ret
or
xchg
jl
test
add
mov
mov
movsl
xor
push
add
test
dec
inc
jle
insl
mov
jbe
push
or
mov
cltd
add
cmc
shlb
xor
out
adc
cltd
ljmp
pushf
outsl
jns
add
fcmovnu
push
sub
jg
sub
mov
out
nop
jno
xlat
or
sub
jb
nop
push
xor
or
inc
pop
aad
negl
int
aad
inc
push
ja
mov
fldt
sarb
cmc
add
sub
mov
inc
sahf
das
pop
imull
aad
cs
ds
mov
in
clc
mov
pop
sbb
ja
xchg
stos
add
lods
je
xchg
mov
add
test
fs
jae
or
cmp
dec
push
dec
fnsetpm(287
or
mov
inc
fs
jne
lret
xchg
pop
lock
scas
xor
and
push
xlat
dec
mov
mov
jmp
mov
jle
dec
arpl
sub
sub
xor
pop
sbb
icebp
jbe
popf
cmp
and
gs
mov
mov
add
mov
dec
addr16
daa
xor
jo
jb
xchg
xchg
sbb
arpl
sahf
clc
xchg
sub
jb
mov
adc
ljmp
rol
cmp
in
adcl
pop
movsb
push
cld
mov
pop
pop
pop
cwtl
enter
or
mov
fwait
test
sub
xchg
cli
pop
mov
test
outsb
inc
out
ds
scas
arpl
aas
cwtl
loope
mov
jnp
rcl
repz
mov
bound
dec
mov
sbb
sbb
or
xor
and
mov
fmuls
frstor
mov
pop
inc
jl
and
fildll
loope
cmp
nop
fnstsw
rcl
repnz
push
bound
movsl
lahf
outsl
test
xchg
or
and
xor
pop
je
jl
push
sbb
int3
cmp
movsl
adc
int3
stos
xchg
or
xchg
mov
or
ljmp
mov
push
fisttpll
mov
ret
das
rclb
andl
sbb
push
and
fs
lods
ljmp
lcall
push
xorb
push
mov
push
cmp
mov
push
mov
in
cs
cmp
adc
outsb
lods
adc
push
lret
loopne
fnstenv
insl
cltd
scas
sbb
sub
cmp
lret
movsl
lock
fisubs
xchg
aaa
getsec
adc
sbb
clc
les
jl,pt
stos
fdivrs
into
sti
mov
xchg
adc
cwtl
insl
dec
or
clc
cwtl
inc
addb
xchg
in
xchg
xor
sbb
push
call
pop
sbb
adc
rcr
test
scas
movsb
jmp
xlat
mov
and
jb
mov
and
andb
xor
sbb
in
lods
or
mov
or
and
push
stos
mov
mov
cli
inc
sub
inc
jb
jo
aam
push
or
adc
lahf
shll
lods
xchg
pusha
ds
xchg
sbb
and
xor
cmp
jmp
pop
add
xor
push
mov
dec
add
adc
xchg
add
push
out
mov
pop
mov
cmp
test
sub
fcmovbe
cmpsl
aad
sbb
inc
in
int3
movsl
mov
sub
out
mov
inc
cmp
push
jbe
sbb
roll
dec
clc
jae
out
inc
cltd
ja
fwait
test
rolb
mov
je
push
jne
push
pop
lds
jle
cld
pop
jbe
xchg
ljmp
cmc
bound
and
adc
fwait
xlat
lods
repz
stos
and
jg
das
push
push
aad
dec
mov
icebp
xchg
pop
std
call
aam
adc
mov
pop
insl
xor
test
jge
mov
lods
add
dec
mov
push
gs
aad
jb
jp
cmpb
dec
std
fldenv
cmp
push
aaa
push
sub
push
rclb
inc
ret
inc
mov
pop
dec
ja
add
add
jl
jmp
cmp
aad
jmp
repnz
push
adc
enter
mov
pushf
scas
jns
mov
or
jle
xor
mov
sbb
cmp
gs
ja
aad
mov
push
push
sub
cmp
adc
call
inc
adc
leave
lea
xchg
xor
xor
gs
mov
pop
jo
mov
les
fisubl
mov
aad
repnz
mov
mov
push
jg
adc
mov
std
xchg
sub
pop
movsl
dec
pop
scas
psubq
outsb
scas
and
sub
out
and
or
jae
xchg
cmpsb
push
sub
daa
sub
mov
addr16
mov
adc
in
xchg
iret
in
dec
pop
ror
outsb
fists
frstor
add
lods
or
sbb
inc
push
dec
movsl
jle
mov
repnz
push
push
and
stos
lret
fnsave
shrb
or
mov
mov
push
iret
jle
shll
xchg
inc
fistps
jb
xchg
cmpsb
call
ss
out
addr16
jl
jge
cs
mov
inc
loopne
mov
mov
lcall
push
je
call
notb
push
imull
mov
mov
hlt
jg
pop
push
sub
jb
pop
and
shll
fld
call
dec
loope
mov
jge
mov
lea
rolb
ret
test
popf
movsb
xor
sub
xor
sbb
mov
jge
pop
lcall
xchg
push
jae
lds
mov
cld
lock
and
cmp
out
dec
fldenv
in
lea
cmp
jge
add
aam
sub
mov
scas
test
loope
add
fadds
xor
fyl2xp1
xchg
popf
popf
fsts
mov
mov
add
dec
outsb
lea
mov
ret
mov
mov
stc
add
mov
mov
les
and
xchg
add
mov
cltd
neg
pop
out
out
xor
mov
jo
cmp
ficoml
pushf
xor
sbb
rclb
mov
xor
fistps
jae
cmp
rorl
insb
test
push
inc
mov
sbb
test
mov
outsb
fadd
adcl
insl
xchg
xor
ljmp
mov
fldenv
shrb
add
or
jne
sub
repz
shrb
mov
lods
std
adc
jo
fs
cmpb
pop
push
cmpsl
outsb
enter
adc
rcll
fdivrl
ja
or
aas
jg
sbb
cltd
pop
mov
or
das
stc
xchg
sub
les
cmp
fmuls
jecxz
mov
cwtl
pop
mov
loope
dec
das
mov
out
call
jmp
fidivrl
in
repz
hlt
mov
dec
mov
lret
cmp
test
and
test
stos
mov
push
add
call
fisttps
movsb
pop
cmp
jb
cmc
mov
pop
cmpsl
movsb
ds
mov
lret
cmp
divb
adc
in
xchg
testl
pop
mov
hlt
ja
mov
sub
dec
in
fidivrs
push
pop
pop
cltd
aas
mov
mov
rolb
xchg
or
cld
jmp
push
hlt
inc
adc
idivl
xchg
stos
add
jno
ljmp
fwait
push
mov
lcall
loop
jbe
outsl
or
das
dec
mov
jge
lcall
jb
mov
repnz
fcoms
or
and
sbb
pop
cmp
or
dec
mov
inc
mov
or
inc
pop
lea
aas
outsl
xor
rcl
mov
cmc
sti
out
or
add
mov
adc
fwait
ds
pop
mov
in
or
jle
test
out
inc
movsb
sarl
push
jo
or
push
push
pop
inc
or
and
adc
loopne
aas
aas
fdiv
push
mov
mov
xlat
int
push
shl
mov
add
lods
mulb
fisttps
push
xchg
mov
mov
sti
mov
xor
loop
popf
mov
xor
dec
xor
pop
mov
andb
inc
mov
mov
jbe
mov
dec
fwait
roll
lods
insb
inc
int3
popf
jbe
mov
mov
mov
or
or
roll
dec
sbb
sub
inc
ja
add
mov
inc
das
adc
and
in
stos
int3
mov
add
orb
mov
in
nopl
mov
fwait
add
dec
or
push
insb
sbb
cs
pop
hlt
adcl
fwait
ret
inc
xlat
and
outsb
shll
jne
xor
push
mov
in
pop
cmp
or
jns
mov
cld
push
adc
addr16
jnp
jbe
mov
fldcw
xchg
imul
jmp
add
xor
inc
xor
jge
xor
arpl
ja
or
movsb
fcomp
test
sub
stos
or
xor
movsl
int3
movsl
inc
mov
cmp
mov
xchg
ja
cmp
rorl
aaa
jae
pop
or
pop
or
loope
ljmp
pop
fdivrp
adc
leave
xchg
out
ud0
push
push
in
xchg
sbb
add
add
mov
enter
pop
dec
mov
test
pop
push
sbb
push
stos
lret
je
sub
leave
adc
ljmp
ret
dec
jb
lds
pop
std
mov
in
popa
inc
jmp
and
test
sub
pop
sbb
mov
adc
push
sti
mov
cli
movsl
cld
mov
xchg
int3
insl
fwait
inc
ds
mov
sub
sbb
xchg
test
rcll
mov
outsl
mull
inc
imul
imul
into
out
pop
jne
fbstp
fwait
push
or
jnp
mov
fiaddl
add
fistl
in
outsl
cmpb
cmpb
xchg
ja
sbb
scas
mov
enter
rcll
cmpsb
das
xor
das
sbb
fwait
mov
out
jno
cli
inc
jns
sbb
mov
loopne
pop
pop
faddl
adc
out
int3
out
lret
pop
iret
inc
jns
push
movsl
iret
xchg
push
cmpsb
divl
movsb
out
mov
mov
pop
insb
mov
pop
fcmovu
or
lahf
and
dec
sub
mov
push
inc
sbb
stos
cltd
mov
jae
xor
inc
dec
pop
fs
inc
sbb
lret
aam
mov
int3
jl
dec
inc
pop
mov
pusha
push
dec
outsl
imul
mov
inc
inc
jne
add
lods
inc
hlt
rcrb
fs
lds
jae
mov
fwait
mov
xor
inc
cmc
pop
sbb
hlt
and
sbbb
ficoms
mov
mov
stos
sub
inc
sub
addr16
test
js
icebp
cld
and
data16
in
ds
arpl
popa
cwtl
jbe
int3
mov
jae
cs
pop
scas
dec
cmp
bound
dec
cmp
or
sbb
fimuls
push
dec
dec
sub
inc
cmc
loopne
js
mov
add
add
imul
jge
push
sbb
cmp
jp
add
add
dec
mov
out
xchg
and
xor
out
or
inc
adcb
inc
icebp
out
adc
pop
xor
repz
scas
es
xchg
or
inc
int3
in
fisubs
test
xchg
jmp
std
xchg
mov
mov
fs
js
lock
and
jbe
rcrl
adc
push
ja
inc
xor
in
sub
sbb
clc
inc
fiadds
sahf
add
jmp
sbb
dec
xor
mov
inc
and
out
sahf
popf
mov
test
sbb
push
imul
xor
call
jne
rcr
fisubl
dec
pushf
cli
into
jmp
cmp
xchg
inc
jecxz
or
out
push
dec
rcll
pop
imul
pop
adc
or
xlat
and
aaa
movsb
fcmovnbe
jle
in
test
test
dec
lret
jb
outsl
sbb
shlb
sbb
imul
jae
ds
pop
addr16
mov
lods
lahf
addr16
xor
lods
xor
inc
pop
adc
fistl
hlt
stos
shll
jb
loope
cmpsb
out
test
cmp
mov
sub
mov
in
jle
call
pop
add
call
cs
adc
rcl
pop
leave
es
mov
loope
insl
jecxz
into
mov
add
leave
mov
cmpsl
jae
and
cli
jg
in
lods
fstpl
sub
in
fbstp
sub
or
mov
and
sbb
cli
daa
xor
pop
mov
ret
mov
jecxz
arpl
fldcw
movsl
orb
insl
inc
icebp
mov
pop
ret
je
mov
mov
jmp
jo
xor
stc
push
sub
inc
fbstp
lahf
xchg
push
inc
pop
cmp
scas
or
fcomip
and
xor
decl
jb
inc
fwait
pop
sti
sub
mov
cmpl
sbb
ffree
dec
xor
mov
test
cli
lock
xor
push
fldt
mov
push
shlb
fwait
mov
adc
mov
add
pop
sbb
imul
and
pop
jmp
add
cwtl
fs
test
adc
insb
push
sbb
cltd
push
or
jl
xor
repnz
imul
gs
insb
loop
leave
gs
push
sub
cmp
jne
push
js
fdivr
fs
cmpsl
mov
jmp
xchg
stos
sbb
in
xchg
aam
int
sarl
stos
lea
das
sub
popf
out
mov
hlt
inc
jp
xchg
pushf
xor
sub
xchg
notb
sub
push
pop
cmp
sbb
push
cmpsb
dec
mov
jg
sub
push
fs
mov
cltd
movsb
sbb
test
push
scas
cwtl
cs
jecxz
cs
das
shll
xchg
insb
mov
push
inc
push
cmp
cmp
dec
stc
mov
gs
test
inc
int
and
sti
cmp
push
xchg
jle
test
pop
pop
sti
push
jb
pop
insl
inc
pop
mov
push
mov
push
leave
add
dec
jo
cmc
lods
shll
out
int
lea
dec
cmp
push
jp
xchg
or
imul
mov
cmc
mov
jbe
aam
adc
mov
popf
cmpsb
or
popf
outsb
hlt
mov
and
dec
enter
pushf
sub
add
jae
jbe
lods
xor
out
and
ja
adc
cmp
inc
sub
movsb
ret
add
and
or
or
or
dec
push
les
mov
leave
mov
pop
sbb
mov
out
pop
mul
mov
cmp
ljmp
ss
daa
daa
dec
mov
or
pop
aas
add
int
and
push
jne
jb
and
frstor
ss
scas
in
sahf
cli
movsb
arpl
out
and
int3
sbb
stc
mov
cmc
mov
adc
dec
call
inc
nop
push
addr16
mov
and
aas
and
sahf
clc
mov
xchg
fbstp
mov
push
in
imul
jmp
int
scas
lock
push
repnz
sahf
lea
xchg
pop
cmp
sbb
subl
cmpsl
out
icebp
popa
mov
popa
fsts
mov
iret
and
and
xchg
mov
fisubrl
aaa
mov
jmp
arpl
jmp
iret
jne
xchg
icebp
cmp
xorl
cmp
inc
shll
in
push
add
push
aas
ljmp
xor
pushf
dec
push
pusha
push
or
xchg
shll
mov
std
lcall
push
xchg
push
aas
pop
leave
pushf
clc
sti
dec
bound
and
pop
or
fs
cmp
pusha
test
out
lahf
sahf
ds
mov
es
sub
xchg
cmp
flds
push
cmp
mov
dec
jmp
dec
mov
lock
push
or
fcom
insl
dec
push
daa
add
cmp
testb
cmp
or
out
dec
seta
repz
cmp
pusha
inc
pop
pop
iret
push
nop
testl
pavgw
add
xor
xchg
inc
xchg
sbb
mov
or
lods
wbinvd
jecxz
push
data16
xchg
out
inc
jae
push
std
and
inc
cmpsl
mov
js
loop
mov
dec
ja
dec
adc
imul
pop
push
mov
cmp
in
insb
jne
in
outsb
and
dec
inc
xor
cmp
mov
and
mov
sub
xchg
add
cmpsb
pusha
adc
popf
xchg
lcall
filds
mov
cmp
or
dec
insl
nop
scas
in
lods
jmp
mov
iret
daa
jo
cli
dec
mov
adc
insl
fistpll
push
imul
popf
mov
mov
popa
insb
mov
adc
and
shrb
adc
xor
js
aas
stos
jg
ss
rcrb
mov
push
and
jle
in
insl
dec
gs
jo
nop
dec
scas
adc
data16
rcrl
xchg
ljmp
mov
pop
loopne
in
or
mov
push
fadds
fstps
push
pop
jns
mov
add
xor
inc
negl
xorb
mov
dec
add
mov
jecxz
loop
inc
xchg
fs
std
jo
popa
notb
out
call
add
aad
sti
mov
rcl
lahf
into
data16
aas
or
stos
sbb
insl
mov
add
xchg
lods
in
fadds
pusha
rcrl
scas
pop
fwait
inc
aam
ljmp
into
je
xor
lods
inc
sub
cmp
adc
jo
fmul
scas
dec
loop
mov
clc
or
or
cmp
lods
inc
incb
roll
sub
and
and
fiaddl
xor
push
daa
stc
fildl
sbb
push
adc
jno
cld
jno
pop
add
fwait
xchg
mov
dec
dec
inc
inc
lds
jo
jb
inc
cmpsl
test
dec
push
in
jae
shll
sbb
push
mov
int
mov
enter
push
push
pop
push
leave
cmp
js
jg
and
out
xor
adc
lods
mov
test
jle
fsubs
jns
push
movsb
ret
fcmovne
sahf
mov
movsl
xchg
rol
push
out
idivb
dec
das
add
jl
in
mov
lretw
int3
xchg
xlat
cmp
in
mov
not
mov
push
or
test
inc
xor
pusha
push
push
das
sub
mov
js
xchg
test
sahf
mov
orl
sarl
int
inc
mov
imul
mov
lods
cmp
repz
scas
cmpsb
or
outsl
xlat
int3
jo
test
mov
aam
outsl
scas
inc
stos
out
mov
lcall
lcall
push
scas
pop
fistpll
out
mov
fstl
adc
jge
push
lock
sti
hlt
ficoms
inc
dec
mov
hlt
pop
mov
add
add
mov
sarb
outsb
pop
sbb
cmp
pop
push
mov
repnz
lds
aaa
sub
sub
ret
lret
ja
adc
testb
insb
popf
rcrl
in
or
pop
mov
mov
outsb
andb
sahf
insb
jbe
xchg
cltd
mov
push
rcll
scas
in
cmc
sub
add
xor
cmpb
shlb
imul
neg
addr16
das
addl
and
pop
sbb
add
rcrb
push
mov
lea
gs
push
inc
push
out
sbb
mov
xor
cltd
cmpsl
pop
jmp
jmp
out
inc
fstpl
xchg
pop
cmc
sub
xor
in
jmp
cs
jle
int3
sti
mov
or
pop
add
jae
sbb
rorb
xor
xchg
pop
cmpsw
sub
nop
es
xchg
xor
or
cmpsl
jbe
jge
shrb
cmpsb
sbb
int3
sarb
pop
stos
pop
lods
cmp
and
dec
std
fsub
fcompl
lods
or
ret
fs
jbe
add
call
lock
mov
dec
shrb
ja
cs
insb
adc
push
cmp
scas
in
jns
loopne
test
in
or
xor
test
pop
lcall
lock
add
pop
cmp
in
insl
push
hlt
out
push
iret
push
push
cltd
int
or
mov
mov
or
mov
pop
aam
cmp
mov
call
sbb
and
mov
in
jge
pop
jo
cmp
or
pop
enter
adc
das
mov
js
or
leave
mov
sarl
cmp
cmp
fs
dec
test
std
mov
adc
in
pop
aad
dec
dec
incl
cmpsl
outsl
fwait
rcl
aas
outsb
sti
mov
daa
cmp
fbstp
shlb
cmp
push
pushf
out
fists
xor
mov
sub
mov
pusha
popa
mov
and
add
inc
cs
aam
and
dec
fstpt
pop
cmp
sbb
gs
aam
adc
mov
in
mov
mov
leave
sub
int3
dec
sub
add
jbe
lcall
es
pop
cld
insb
jl
add
push
mov
jne
ror
aam
mov
cmp
ret
aaa
jle
lods
test
aas
cmp
fdivs
fcom
pop
loop
mov
mov
pop
inc
fcmovnb
imul
int3
push
loopne
push
aam
out
imul
sbb
in
pusha
lret
cwtl
cltd
xor
in
nop
insb
leave
mov
mov
cld
push
mov
lret
nop
pop
mov
gs
jmp
add
cmp
and
data16
leave
push
stc
loope
mov
mov
inc
lret
int
jne
push
rolb
fsubs
mov
jbe
add
mov
addr16
insb
sbb
adc
xchg
mov
leave
mov
push
mov
add
cmp
or
lret
fs
das
icebp
popf
loope
loope
and
cs
iret
or
hlt
ficompl
mov
cs
dec
pop
mov
xchg
sbb
enter
or
mov
xor
aaa
enter
scas
pop
xor
jns
shl
nop
mov
repnz
hlt
scas
lcall
gs
loop
sti
iret
xor
inc
cmp
in
jg
sub
sbb
jae
xor
jg
stos
inc
je
cwtl
sarb
ss
mov
add
and
fcoms
sti
mov
mov
movsl
aas
push
sti
lds
jo
xchg
out
mov
dec
pop
pop
enter
and
mov
sub
mov
out
jno
ret
out
iret
adcl
xchg
or
jle
shll
in
inc
add
fsubrl
or
test
and
xchg
loop
add
fwait
loop
jmp
xchg
inc
pop
repz
pop
lods
and
xor
sti
shll
lcall
mov
adc
or
cmp
out
mov
faddp
or
cmp
cmp
xchg
scas
pop
pop
mov
dec
jmp
cld
into
pop
cmpsb
fcompl
pop
popf
addr16
mov
out
out
lret
repz
das
mov
pop
jns
dec
enter
and
ljmp
push
js
add
and
jge
xor
std
pop
mov
fs
jg
rsqrtps
lock
outsl
pusha
dec
jo
add
sbb
add
aas
int
scas
mov
xchg
or
adc
inc
mov
adc
jo
mov
pop
xchg
ret
pushf
repnz
testb
daa
or
outsb
in
or
push
push
roll
dec
pusha
scas
inc
pop
leave
jns
movsl
imul
lock
lock
sub
add
mov
fwait
add
insb
xchg
mov
mov
ss
dec
lock
fimuls
sbb
xor
test
pop
lods
mov
push
lcall
out
cmp
mov
pop
subl
mov
int3
icebp
int3
add
jecxz
mov
fdivrl
imul
cmp
mov
jo
jp
xchg
scas
cmp
ss
sbb
mov
xchg
fcoml
call
in
xchg
dec
add
inc
outsl
lock
sbb
push
test
js
sub
movsb
sbb
mov
js
push
dec
or
call
jns
cmpsb
insb
shlb
push
stc
js
sub
in
mov
sbb
push
mov
fcoms
dec
dec
inc
loope
mov
lods
inc
dec
sahf
jne
insb
mov
push
adc
jmp
adc
shrl
xchg
xchg
sub
dec
nop
rolb
dec
loop
jecxz
aam
cmc
rcl
mov
loop
hlt
sbb
dec
inc
dec
mov
mov
or
pusha
movl
jg
jl
shll
xlat
and
out
jnp
filds
repz
sti
mov
push
pop
jo
out
test
fcmovbe
cs
int3
out
sub
push
xchg
out
or
inc
subb
sbb
mov
clc
leave
pop
xchg
ljmp
cltd
fmull
repnz
shrl
push
loop
movsb
pop
sub
xor
and
in
add
jl
xchg
mov
andl
adc
mov
stos
movb
int
cli
push
int
popf
negb
pop
sub
or
loopne
mov
dec
or
pushf
sbb
cmp
movsl
inc
sbb
jno
xor
mov
or
stos
into
popa
sarl
pop
sub
test
scas
mov
and
cmc
push
loope
xchg
xor
negl
xor
out
and
sar
sub
repz
jge
pop
mov
rorl
jge
mov
dec
add
test
push
xor
movsb
stos
and
pop
in
aad
fcmove
or
dec
test
sub
xor
loope
icebp
xchg
sti
cwtl
push
in
cmp
lahf
jecxz
mov
jae
xchg
xchg
loope
xor
fisubl
jnp
xlat
imul
cmc
out
add
les
cmpsb
push
stc
add
mov
out
rcrl
xchg
cltd
mov
adc
das
shlb
lcall
xor
dec
cmp
addr16
fisttpll
les
dec
les
decl
pop
push
pop
scas
lds
jge
push
add
and
nop
push
test
es
mov
gs
and
negl
stc
in
sub
cld
sub
cltd
xchg
push
enter
test
adc
adc
sub
inc
cli
sbb
and
test
fisttpll
lods
mov
test
aam
sarb
mov
xor
ja
test
mov
add
ja
xor
testl
jecxz
test
pop
pop
daa
ror
loope
xchg
cmp
outsb
dec
or
sbb
test
mov
cmp
lds
cmp
mov
or
xchg
in
stos
sbb
roll
outsb
int
add
lock
in
lahf
xchg
mov
dec
iret
mov
jmp
or
scas
and
fstp
push
std
loopne
cmp
movsl
cli
inc
das
mov
pop
lock
hlt
jl
decb
mov
mov
push
mov
lret
jmp
ds
scas
adc
xchg
pop
cli
or
or
mov
jb
cs
loop
fldenv
lock
or
out
mov
shrb
sahf
inc
sub
es
mov
sub
scas
and
clc
xchg
std
jo
mov
inc
dec
or
shlb
stos
lea
int3
pop
andb
xor
xchg
xor
cmpsl
xchg
stos
push
xor
test
xchg
data16
into
in
lods
aas
scas
jno
xchg
fcom
clc
mov
add
call
pop
nop
pusha
xor
dec
test
cmpsl
xor
xchg
loope
scas
int3
hlt
fld
ss
sbbb
mov
adc
dec
ret
int3
jbe
or
push
mov
jae
das
ffreep
pop
fdivrs
sub
cmp
mov
clc
icebp
addr16
lods
aad
pop
mov
insl
lret
inc
mov
popa
mov
mov
loope
loope
popa
and
test
jb
mov
int3
ficoms
or
mov
daa
mov
out
fs
maxps
push
movsl
pop
add
dec
dec
add
paddusb
fstpl
fmuls
sbb
pop
cmc
or
mov
sub
daa
add
daa
cltd
lret
adc
popf
andb
jbe
jns
cmpsb
xor
mov
cmpsl
cmpsl
mov
or
int3
adc
mov
jnp
out
rcl
pushf
stos
jl
pop
jbe
cmp
lock
and
aas
sarb
cmp
push
or
aam
xchg
mov
cmpsb
dec
cltd
mov
mov
push
mov
pop
and
insb
xor
int3
into
and
add
mov
mov
cmc
movb
gs
imul
lret
jecxz
xor
jecxz
daa
outsl
mov
insl
add
push
mov
arpl
cmc
jo
bt
std
mov
or
inc
daa
js
repz
mov
xchg
call
divb
mov
leave
imul
or
mov
movsb
clc
cltd
int3
sub
in
divl
push
into
inc
adc
inc
sbb
xchg
add
or
lods
and
roll
add
jecxz
push
push
push
fidivs
aaa
loop
repz
mov
or
jmp
push
fs
sub
stc
xchg
xchg
jbe
mov
or
mov
and
xor
outsb
pop
out
mov
idivl
scas
std
push
gs
loope
mov
xor
mov
pop
sbb
cmp
lahf
loope
mov
pop
and
ret
lock
mov
adc
jmp
jp
or
sbb
test
je
mov
pop
insb
jb
xchg
shrb
add
dec
push
out
ret
mov
jl
mov
jle
adc
into
stc
adcb
inc
movsb
xchg
mov
jbe
mov
outsb
inc
push
cmpsl
jns
xchg
fistps
lahf
add
outsl
add
in
lret
fwait
cmpl
sub
cmpb
nop
test
xchg
mov
mov
lcall
ret
jmpw
in
xor
repnz
stc
push
mov
fistps
lds
insb
lret
fs
dec
and
mov
dec
mov
jne
mov
dec
decl
cmc
mov
jnp
xchg
mov
imul
push
ljmp
cli
jg
sbb
xor
adc
int3
inc
fidivrs
xchg
or
fmuls
es
aam
roll
arpl
adc
sahf
lcall
pop
hlt
lods
andb
adc
fcompl
test
test
lahf
shrl
jmp
out
aam
push
movsb
stos
dec
pop
jnp
fs
mov
xchg
xchg
xchg
sti
pop
push
sahf
fldl
nop
inc
sbb
mov
jns
push
mov
imull
bound
cmp
in
and
and
xchg
das
or
adc
mov
in
stos
movsl
fwait
push
xor
lahf
outsb
loopne
lcall
clc
roll
pop
movsb
fldenv
cmc
fsubs
mov
mov
inc
push
andb
push
and
fwait
mov
pop
leave
add
or
test
inc
xlat
test
add
add
and
mov
rcr
sbb
mov
xor
jg
js
dec
lcall
mov
outsb
cmpsb
imul
aaa
je
adc
ret
xor
outsb
mov
pop
shl
sub
stos
stc
sti
mov
fildl
adc
and
je
lahf
pop
jno
call
push
lock
push
arpl
jmp
ret
push
sbb
fldenv
cmp
sti
mov
pop
ljmp
sbb
cmp
mov
xchg
mov
or
inc
push
loope
xor
push
and
fildll
pop
cmp
pop
mov
in
inc
pop
cwtl
fimuls
push
je
mov
lret
fcoms
cmp
movsl
jl
aam
in
test
sti
cmp
jp
dec
data16
jl
lcall
jecxz
inc
add
adc
xor
imul
mov
add
add
fmuls
inc
and
cmp
pop
test
xchg
stos
outsb
insl
xor
imul
push
jp
and
mov
in
mov
cli
cmp
xor
xor
xchg
test
adc
push
cmp
and
adc
sbb
sub
xchg
outsb
inc
jne
je
xor
pop
outsb
outsl
mov
add
cmp
xchg
push
cmp
shl
lret
mov
sarb
lcall
push
fcoml
push
test
maskmovq
pop
mov
jp
or
ficoms
rcr
and
or
dec
clc
cld
aaa
int
in
pop
into
out
cld
test
sbb
pop
dec
dec
pop
movsl
ds
mov
fimull
sbb
lcall
iret
int3
lods
bswap
fsubrp
sub
addl
push
rcrb
hlt
daa
imul
inc
stc
in
adc
loopne
jae
out
in
cltd
fsubrs
xor
gs
aam
pop
cltd
mov
pop
pusha
xlat
je
cwtl
add
insl
jo
test
and
jl
or
inc
cmc
gs
out
lods
add
sub
test
pop
pop
mov
fsts
adc
stos
xor
jle
fcompl
je
pop
push
aam
add
fidivl
stos
mov
ret
rorb
dec
fadds
aad
inc
imul
shrb
out
cmp
pop
cmp
lods
rcrl
movsl
int3
or
xor
cmp
or
icebp
sti
test
addr16
dec
std
push
jne
pop
rorb
push
fwait
xchg
push
lahf
mov
enter
outsb
jne
rclb
cmp
xorb
mov
mov
pop
xchg
enter
movsb
sub
imul
dec
aaa
shlb
push
popf
push
dec
or
lret
or
leave
lds
fisubrl
xor
movsl
scas
outsl
push
dec
push
sbb
or
and
sub
mov
pusha
sti
inc
xorl
add
jp
addl
rorb
test
out
rcr
arpl
push
add
inc
mov
push
adc
out
lock
push
movsl
push
mov
or
pop
sub
xor
jne
mov
xchg
xchg
cld
iret
shl
sub
mov
jbe
dec
mov
add
pop
scas
xor
mov
xlat
test
mov
xchg
outsl
adc
test
data16
pop
xchg
test
lods
movsb
daa
dec
aad
test
loop
inc
jbe
notb
sub
mov
jb
inc
dec
enter
out
pop
mov
sub
into
or
pop
sti
push
xchg
dec
sbb
imulb
dec
dec
into
mov
xchg
hlt
xchg
pop
dec
mov
add
push
into
adc
add
ds
cmc
push
shl
inc
add
gs
sub
jnp
loopne
and
mov
jmp
mov
mov
inc
adc
push
loopne
sbb
dec
mov
loope
negl
cld
adc
test
push
inc
lret
push
jbe
aam
mov
cmpsb
loope
cmp
push
jmp
cmp
movsl
and
popf
xchg
mov
mov
rolb
push
xchg
lods
inc
in
lods
daa
scas
lods
xchg
out
pop
dec
outsb
or
seto
adc
inc
add
inc
push
stos
into
imul
jae
fisubs
lea
pop
xorl
pushf
bound
shlb
out
or
add
push
or
add
pop
and
mov
movsb
fld
and
mov
push
outsb
add
lods
scas
jae
enter
inc
sub
inc
mov
jp
mov
push
fists
adc
and
dec
cmpsb
adc
push
add
pop
insb
jae
jns
or
pop
out
add
fwait
xchg
push
mov
leave
faddl
loopne
pushf
and
xor
push
lahf
sub
adc
notl
orl
dec
mov
ds
inc
or
aas
or
xor
cmp
push
iret
sbb
imul
push
mov
jl
sub
loopne
cli
cmpsb
mov
out
popl
mov
imul
push
test
scas
xchg
push
aas
int3
xlat
and
scas
xchg
aam
aad
fprem1
lock
outsl
adc
outsl
inc
add
test
mov
in
movsb
xor
jno
int3
ja
xchg
gs
sub
fisttpl
enter
fwait
cld
mov
arpl
cmp
das
cmp
add
pop
sarb
loopne
xchg
test
mov
stos
es
add
xchg
ret
sub
cmp
movsl
lods
mov
mov
outsb
dec
lcall
adc
mov
mov
loopne,pn
imul
sahf
scas
mov
imul
jmp
scas
cs
cld
les
ss
jae
sarb
sbb
unpckhps
out
push
lods
ret
cmpsl
ds
cmp
xchg
adcb
adc
add
cld
decb
repnz
push
push
mov
cmpsb
test
sbb
pop
mov
and
sbb
sahf
mov
mov
in
cli
xchg
in
xchg
movsl
push
out
adc
inc
loope
std
out
sbb
dec
and
sbb
pop
xchg
xor
int3
and
test
or
loope
add
ret
icebp
jle
cmpsl
mov
lret
sbb
jle
lcall
inc
loopne
cmp
int
mov
imul
mov
xor
icebp
inc
in
out
jmp
add
mov
ljmp
sub
xor
push
cmp
jmp
aad
push
pop
inc
int
xor
dec
adc
pushf
aaa
jbe
sbbl
aas
fdiv
xchg
and
jnp
dec
insb
cmp
lods
xor
xor
jl
add
mov
dec
jmp
inc
pop
and
incl
push
js
or
mov
mov
pop
push
rclb
cld
repz
cs
jmp
inc
pushf
cli
add
pop
push
and
xor
jbe
jns
loopne
aas
lea
fwait
movsl
push
sub
xor
pop
out
xorb
out
and
fldt
int3
divl
push
mov
sahf
lea
add
jmp
push
and
dec
pop
cltd
sahf
or
clc
outsb
pop
daa
inc
daa
lret
xor
lret
xchg
mov
and
gs
data16
fldt
xor
jbe
push
cli
sbb
aas
pop
mov
sub
sbb
dec
or
mov
sub
or
js
xchg
iret
and
imul
or
movsb
mov
jp
mov
or
mov
test
mov
xchg
stc
inc
in
mov
dec
stos
fwait
fwait
mov
lret
cltd
mov
sbb
cmp
cltd
test
aam
mov
incb
divl
mov
mov
pop
les
pop
cmp
aad
or
dec
in
mov
sub
test
add
and
cmp
enter
dec
push
scas
psubusb
icebp
add
inc
bound
jp
pop
iret
lock
out
lods
push
and
sbb
insb
ret
pop
and
xchg
call
addl
inc
mov
push
popf
cmp
xchg
in
lock
out
push
je
hlt
push
sbb
out
pop
repnz
iret
rorl
out
jl
sbb
jg
das
ja
cli
jbe
xor
dec
jno
ficompl
mov
add
sti
dec
sahf
cmp
sub
std
int
mov
or
cmp
cmp
in
pop
ja
pop
lret
jle
jecxz
sbb
mov
pop
push
loop
add
xorb
clc
cld
xchg
xchg
div
iret
cmp
xchg
cmp
sahf
imul
movsb
scas
adc
push
shlb
adc
or
jns
das
ret
adc
bnd
cld
or
popa
pop
inc
icebp
inc
add
out
push
mov
push
push
nop
imul
xor
mov
outsb
dec
jmp
mov
in
icebp
sub
jns
aam
mov
test
adc
add
arpl
mov
xchg
pop
lods
pushf
cmp
xchg
pop
rclb
movsb
jns
in
cli
push
xor
mov
iret
mov
fsts
adc
xor
pusha
pop
pop
xchg
mov
mov
jnp
iret
push
hlt
subl
or
out
mov
pop
and
rol
out
inc
jns
sub
cmp
adc
jle
mov
push
mov
mov
sbb
pop
pop
xchg
push
pop
rolb
pop
pop
dec
or
push
adc
fwait
fwait
pusha
aaa
out
pop
xor
xor
je
adc
push
and
mov
and
cwtl
xor
mov
les
jnp
adc
xchg
sub
or
orb
fmuls
scas
mov
scas
mov
jno
out
pop
icebp
jne
inc
jb
imul
inc
pop
adc
sahf
mov
jp
out
push
inc
or
test
mov
jecxz
push
into
add
push
insl
add
mov
out
xor
test
daa
push
in
cmc
push
xchg
mov
bound
rcl
test
inc
rolb
cmp
xlat
push
and
pop
loopne
in
sbb
mov
inc
cwtl
lods
aam
cmp
xchg
cmp
jge
and
or
and
push
sub
jecxz
inc
dec
or
outsb
lret
xchg
ja
sub
push
stc
sbb
enter
das
orl
mov
cmpsb
and
push
mov
cmp
sub
cltd
int3
aam
mov
insb
inc
pop
jmp
push
scas
stc
hlt
adc
lods
movsl
ficompl
push
mov
ja
or
xchg
xor
pop
movsl
sbb
in
dec
pop
filds
incb
inc
add
or
adc
je
std
xor
pop
push
cmp
adc
pushw
out
jbe
xlat
sbb
ja
insb
aas
jae
lcall
mov
xlat
iret
imul
mov
sub
mov
icebp
mov
cmp
sub
and
fsubrs
jp
aam
imulb
xchg
push
pop
sbb
jnp
pop
bound
in
in
out
xchg
rcrl
fxch
and
rcl
jo
int
push
cmp
std
mov
mov
xor
cwtl
or
mov
stc
push
dec
xchg
push
rorb
jne
push
cld
xchg
vmovq
and
loope
or
ljmp
or
mov
rcll
and
call
push
in
daa
xor
push
js
xchg
dec
std
sub
jecxz
rorl
mov
lret
inc
pop
inc
cmp
popa
sbb
into
or
jae
mov
add
and
lret
jmp
jb
push
jne
cmpsb
aam
jmp
mov
fisubl
xchg
test
mov
sbb
pop
test
inc
adc
mov
popa
fcmovbe
lahf
inc
push
stos
push
daa
in
aas
push
pop
cli
xchg
daa
sbb
fdivr
mov
push
scas
ljmp
lret
inc
push
movsb
mov
push
jae
ror
lods
cmp
and
test
dec
xchg
push
mov
ja
es
mov
shrb
gs
xchg
cmp
les
jbe
mov
dec
sbb
dec
dec
adc
outsb
xorb
push
outsl
mov
mov
xor
std
dec
xchg
mov
sti
cmp
in
je
pushf
jle
in
loope
mov
pop
adc
daa
fnstsw
insb
or
adc
faddl
inc
adc
dec
or
nop
call
xchg
xor
enter
mov
mov
dec
adc
push
out
mov
cmp
fstpl
mov
insl
loopne
mov
push
jl
cmp
push
data16
pop
cmp
sub
les
ror
lods
lds
stc
adc
insl
sub
cmp
outsl
inc
adc
and
sub
fisubrl
lret
dec
ret
ret
pop
call
push
aas
mov
mov
test
inc
std
pushf
scas
fnstenv
cwtl
insb
cmpsb
pusha
mov
popf
nop
push
xchg
loopne
push
mov
cmpsb
mov
pop
mov
repnz
pop
rcl
and
rcrb
stos
andb
daa
push
dec
fdivs
test
dec
pop
lods
lods
sti
mov
dec
loopne
dec
divl
into
xor
scas
out
imul
hlt
mov
int3
fldcw
enter
rorb
and
sarb
push
in
cmp
jle
jne
fiaddl
sub
lods
add
mov
jb
mov
dec
jmp
inc
and
outsl
repnz
xchg
cmp
inc
lret
bound
popf
pushf
rcrl
sti
jp
bound
adc
xor
hlt
push
sub
dec
inc
push
mov
neg
stc
cmp
push
xlat
adc
std
movsb
jmp
pop
mov
cs
mov
stc
sbb
add
sbb
cmpsl
xchg
dec
inc
jle
popf
sahf
mov
aad
arpl
rcl
jo
clc
xorl
sarb
imul
jg
inc
add
adc
jl
lock
cmp
mov
adc
sub
xor
aam
sbb
scas
fbstp
inc
xlat
lea
sbb
or
in
addr16
jae
mov
lea
inc
mov
bound
aam
pusha
dec
lods
jecxz
or
imul
test
leave
or
mov
push
dec
out
aaa
jbe
lahf
jp
loop
dec
cmp
rorb
test
ds
push
hlt
and
in
in
fstps
adc
push
sub
mov
outsb
jo
mov
insb
aam
or
mov
test
adc
sbb
cmp
lcall
loope
add
rcl
pop
adcb
popa
aas
mov
or
sahf
ret
js
mov
add
jb
mov
xor
and
pop
pop
push
loope
sub
dec
cmpsl
lea
sti
cld
scas
ror
cmp
cmpsb
gs
std
lahf
mov
pop
xchg
and
or
lds
push
stos
dec
loopne
inc
stc
xlat
inc
movsl
or
sub
lods
or
push
in
sbb
sti
daa
in
push
aad
test
mov
imul
bound
push
push
mov
ret
in
adc
jne
jle,pn
pop
xor
xchg
dec
adcl
imul
ret
std
pop
sbb
jl
cmp
lods
popf
adc
into
cmp
adc
sbb
adc
test
sbb
mov
shlb
out
popf
mov
or
les
mov
xor
fcmovu
andl
xor
ret
jge
and
enter
add
jno
stos
pop
out
jnp
dec
mov
adc
and
xchg
jb
iret
stos
out
xorb
xor
popa
adc
push
cmp
cmp
mov
sub
cltd
insb
pusha
imul
stos
lock
sbb
in
in
rorb
cmp
nop
outsb
gs
mov
mov
les
cmp
ficomps
aad
or
sub
dec
push
mov
aaa
mov
enter
mov
inc
xlat
xchg
mov
xchg
push
mov
inc
xorl
mov
jo
pop
test
inc
or
jge
int
xchg
sub
mov
pushf
push
sbb
test
cmp
xchg
jp
ror
sub
jp
add
pop
pop
lcall
or
inc
mov
mov
mov
mov
pop
mov
cmp
dec
pop
test
out
add
mov
test
sub
leave
call
jb
inc
cmc
in
ret
sub
pop
sti
adc
sub
arpl
pop
out
mov
rorb
sbb
cmp
lods
fidivl
in
mov
inc
adc
je
in
loopne
icebp
mull
cmp
cmp
ret
gs
inc
test
stos
push
lea
pmulhw
dec
jle
ret
fists
xchg
test
outsb
sti
push
push
add
or
jg
pop
mov
mov
clc
hlt
scas
push
mov
pop
scas
sbb
or
dec
das
insl
cld
pop
mov
cmpsb
cli
push
lret
bound
inc
lea
sbbb
jo
fs
inc
sbb
test
mov
iret
jae
mov
lret
add
fdivl
pop
repz
outsl
xlat
out
push
scas
mov
test
push
xchg
dec
mov
lret
out
lock
fsubr
jb
inc
mov
scas
out
rcrl
icebp
leave
jbe
mov
nop
popf
repnz
and
adc
sub
jo
loope
add
aad
lods
jbe
add
pop
mov
ret
mov
sbb
mov
push
pop
mov
push
mov
jmp
and
dec
cmp
int3
stos
push
inc
clc
ret
push
push
clc
aas
dec
mov
sbb
das
mov
or
lahf
push
scas
xor
aaa
gs
pop
xchg
push
push
rolb
mov
inc
jbe
je
sub
insl
mov
outsb
clc
xchg
sub
jmp
out
cmp
mov
sub
fisttpll
test
push
ffree
test
pop
adc
into
xor
data16
icebp
std
mov
loopne
insb
jge
fwait
mov
adc
mov
cmc
and
negb
leave
mov
jbe
mov
shlb
jno
mov
addb
in
into
ljmp
or
ret
out
mov
fbstp
jnp
lret
push
jecxz
or
out
xor
iret
mov
out
scas
int3
shl
add
out
mov
lret
dec
dec
pop
mov
xchg
sub
jl
jae
sbb
ljmp
mov
push
xchg
roll
loope
pop
fadds
clc
jle
movb
add
ret
call
xor
pop
call
mov
in
push
arpl
fisttps
xor
add
popf
lea
stos
daa
sarb
dec
xchg
mov
arpl
shlb
daa
mov
subb
jp
ret
in
add
xlat
push
mov
pop
mov
je
push
adc
or
sub
sbb
lods
push
pop
std
shrb
xor
xor
mov
leave
cmp
pusha
xor
push
cmp
xor
test
adc
aam
cmp
inc
scas
das
push
xchg
mov
jns
iret
cmp
es
lock
dec
dec
mov
bound
inc
dec
dec
gs
xchg
ss
iret
inc
jg
negl
xor
mov
cmp
iret
mov
shlb
or
js
shll
loop
xchg
adc
test
mov
sbb
jo
movsb
push
xchg
dec
stos
sbb
pop
ljmp
mov
bswap
test
mov
sbb
mov
iret
bnd
cmpsl
cmp
pop
jnp
xchg
bound
mov
jno
mov
lods
add
sub
and
jbe
stc
pop
lods
mov
push
movsl
pop
sbb
xchg
jmp
jecxz
cmpsl
dec
pop
pop
mov
test
push
mov
in
roll
out
xor
push
mov
xor
xchg
adc
fistl
xor
in
or
mov
jo
inc
adc
sub
in
out
push
cwtl
rcr
gs
mov
cmpsl
mov
cmp
adc
stc
test
je
jns
lods
stos
mov
xor
sub
or
fadds
mov
cmp
test
lcall
ret
xchg
push
xchg
pop
scas
lods
jl
mov
dec
outsb
fbstp
dec
sbb
std
fwait
jmp
mov
dec
mov
lahf
push
add
bound
repz
hlt
and
or
pop
pop
push
mov
addr16
js
xor
mov
leave
mov
adc
popf
scas
fisubrs
jb
popa
leave
inc
lock
and
add
pop
rcr
enterw
adcb
jge
pop
add
and
mov
push
xlat
lods
sbb
mov
inc
adc
idivb
pop
pop
dec
cmp
xchg
aaa
rorl
nop
lret
fsubs
push
adc
push
or
lods
cmp
add
lods
sbb
fmull
int3
into
sahf
add
in
sbb
mov
insl
pop
rcl
pop
pop
orl
out
mov
int3
scas
mov
cmp
adc
mov
pushf
aam
fsts
out
adc
sti
je
ret
mov
sub
sub
sahf
cmc
jae
pop
jecxz
in
scas
push
mov
or
outsl
test
adc
add
or
dec
subb
sbb
repnz
adc
dec
icebp
cwtl
and
or
jl
fisubl
dec
test
cmc
cmp
in
test
adc
xchg
sahf
mov
fwait
in
xchg
jl
lods
pushf
add
mov
call
jne
pop
cs
xor
js
sahf
fdivrs
lret
inc
cmp
movlps
hlt
adc
sub
sbb
push
mov
cld
test
dec
aas
ret
or
sarl
rcrl
and
aad
hlt
ret
sub
jp
add
mov
mov
sbb
xchg
ljmp
jb
pop
mov
xchg
add
mov
pop
mov
xorl
nop
mov
sbb
lods
and
mov
mov
inc
ror
movsb
jbe
fstl
push
fildll
cmpsb
in
out
inc
jg
loop
dec
fisubs
jecxz
sahf
repz
sub
xchg
in
in
adc
jl
xchg
and
pop
mov
dec
mov
lock
aam
or
cmp
cmp
pop
add
adc
negl
xor
adc
push
idivl
sahf
cs
shrl
es
mov
fidivl
pop
leave
cmpsb
mov
test
gs
mov
jp
adc
cmc
pop
and
sarl
mov
or
dec
ror
mov
cmp
adc
in
cmp
pop
pop
push
insl
cmpsl
jbe
imul
int
scas
cltd
cmp
in
inc
outsb
ljmp
jge
xchg
lea
jno
test
xchg
jno
out
daa
jge
sub
leave
jmp
sub
subb
or
bound
adc
data16
pop
cli
lcall
pop
sti
dec
adc
dec
jle
mov
add
push
das
xlat
out
test
js
aad
jmp
lds
lods
mov
adc
push
lret
push
lcall
test
out
div
jbe
into
insb
shrl
cli
lahf
mov
andl
fmull
movsl
sub
mov
sar
rol
into
rcl
fsubrl
les
xchg
hlt
mov
cld
push
jge
xor
ss
add
xor
push
add
pop
rorl
or
mov
mov
push
stos
xchg
data16
mov
int3
cmpsb
fisubrs
lods
lds
shlb
mov
or
mov
pop
insl
jmp
js
pop
addr16
aad
xchg
aas
das
mov
out
inc
xor
mov
and
loopne
and
mov
fisubrs
add
sti
add
cmp
sub
movmskps
mov
in
pop
adc
lods
cli
scas
xchg
pusha
lock
je
int3
mov
dec
mov
mov
add
inc
fsubrl
push
andb
rcrb
jg
sub
movsb
fcompl
mov
cli
xchg
enter
das
push
pop
rcl
sub
push
mov
out
cmpsl
js
and
jl
loopne
inc
fdivrl
pusha
lcall
outsb
pushf
and
jns
inc
es
cmpsb
les
mov
icebp
insl
into
jp
push
out
cmp
mov
mov
pop
xor
xor
inc
adc
xor
inc
xor
ficoms
or
adc
dec
ljmp
and
lahf
scas
add
rcll
jns
aaa
movsl
in
mov
pop
cwtl
lret
sahf
pop
jne
pop
inc
ret
mov
push
inc
lret
aad
inc
adc
pop
insl
cmp
and
jg
scas
js
fwait
rclb
inc
cli
and
mov
inc
enter
hlt
in
inc
addr16
mov
and
lea
cs
adc
mov
xchg
dec
adc
out
mov
sbb
sbb
flds
ljmp
inc
ja
fmull
xor
std
mov
cs
shll
cmp
sti
mov
sub
xor
shll
inc
scas
xchg
dec
push
ficompl
pop
dec
and
lahf
jb
lea
outsl
inc
push
ret
rcrl
jo
out
ss
dec
scas
push
sub
leave
jge
mov
jmp
into
dec
shrl
lret
out
add
movl
bound
mov
mov
add
xchg
stc
insb
mov
push
inc
lcall
or
lock
sbbb
or
inc
cmp
mov
mov
cs
ret
daa
aad
jno
cmpsb
lea
movsb
dec
sub
js
inc
xchg
xchg
mull
flds
add
pusha
shl
jns
leave
push
out
push
jno
jmp
push
sub
sbb
pop
out
in
mov
dec
lods
hlt
jge
sahf
insb
xchg
xor
and
cmp
or
sbb
mov
inc
pop
jle
xor
outsb
popa
movq
jae
imul
cmpsb
repz
jp
jbe
inc
aaa
icebp
mov
hlt
mov
dec
fcom
aaa
add
and
xchg
or
and
mov
add
test
push
arpl
add
jns
gs
nop
cli
pop
movsl
in
ss
add
cmpsl
addr16
xor
mov
ficoml
lods
inc
sub
data16
sub
sbb
sbbl
xchg
push
mov
ror
call
fst
inc
movsl
aas
scas
iret
lods
dec
negl
push
das
mov
mov
mov
cmp
nop
or
in
mov
sahf
and
inc
push
add
or
mov
add
sub
in
ret
add
insl
add
jne
shl
into
xor
cltd
dec
fnclex
jo
cwtl
lret
cmp
xor
aad
dec
mov
daa
adc
test
fs
jnp
inc
sub
mov
movsb
out
push
insb
add
mov
push
xchg
push
adcl
jno
inc
xchg
push
movsb
pop
inc
inc
add
cmp
unpckhps
stc
add
bound
rcll
push
cli
push
add
bound
into
out
dec
cmp
leave
pushf
fnstsw
dec
or
jo
jle
pop
xchg
inc
inc
mov
pop
pushf
xchg
jb
jno
or
rol
add
movsl
jg
mov
sbb
push
or
dec
pop
pop
jl
arpl
sti
push
notb
popf
mov
xor
imul
push
sub
repnz
mov
rcr
mov
ljmp
mov
cltd
xorl
repnz
jle
cmp
xor
testl
inc
jb
insl
push
and
inc
stos
clc
es
mov
xchg
int
scas
mov
adc
cmp
fwait
sub
jbe
mov
pusha
jnp
or
xchg
dec
xchg
lret
cmp
aad
pop
xor
jb
push
dec
jae
sahf
xchg
xadd
and
mov
clc
and
inc
or
inc
pop
cmp
popl
mov
in
rcll
ljmp
inc
push
bound
test
outsb
and
cltd
aaa
sub
xchg
xchg
xchg
stc
xor
sub
mov
mov
mov
test
mov
or
orb
lcall
cld
push
out
es
adc
xchg
mov
out
pop
pusha
adc
shlb
mov
ret
and
imul
adc
sarb
out
mov
pop
stc
fstl
nop
jns
xor
insb
xchg
sub
loope
aam
mov
test
push
sub
lds
jbe
and
mov
inc
call
aaa
and
repz
arpl
arpl
in
mov
call
pop
mov
mov
test
xchg
add
test
sbb
pusha
loopne
cmpsb
or
fdivl
call
push
std
jle
sbb
in
std
fucomp
sub
and
test
movsb
stos
mov
js
dec
or
jns
xor
idiv
xlat
fwait
mov
notb
cmp
ja
aad
mov
push
aad
addr16
andl
jp
sbb
repnz
cwtl
adc
dec
and
out
lods
pop
orb
insb
out
test
fisubl
movsb
or
cltd
rolb
data16
int3
sbb
cltd
xchg
cmpsb
sbb
es
popl
add
jbe
dec
add
add
lcall
cmc
addb
push
fs
ret
push
fildl
ss
nop
dec
cmp
mov
jbe
lret
xchg
mov
and
fildll
imul
pop
dec
xchg
cltd
push
fstl
and
fsubrl
lock
lods
mov
rcrl
jb
push
add
in
aaa
xchg
cli
test
iret
pop
xchg
cli
sahf
ja
test
inc
mov
aad
popf
jl
outsb
sbb
push
jmp
jno
push
call
xchg
pop
cmc
sbb
hlt
popa
imul
mov
inc
adc
adc
push
adc
push
test
sub
and
jmp
notb
es
in
or
or
ret
insb
test
aam
xchg
mov
adc
cvtdq2ps
lods
cmp
jnp
nop
push
fwait
jecxz
mov
frstor
pop
xor
mov
iret
mov
fcompp
cmp
out
sub
clc
sbb
fcomps
aam
xor
loope
addl
push
js
enter
xchg
xchg
xchg
idiv
scas
mov
pop
rcrl
lds
orl
push
mov
and
sahf
cmpsb
jecxz
xchg
lret
pop
push
mov
cmc
pop
movsl
sub
sbb
pop
mov
test
js
mov
sub
mov
xor
mov
mov
xor
mov
in
sbb
lcall
jecxz
xchg
lods
jo,pn
insb
incl
add
cmpsl
mov
xor
aad
sub
scas
push
pop
lret
lcall
mov
jnp
xlat
ljmp
fsub
lcall
ljmp
daa
or
mov
jp
and
cmp
or
add
mov
push
ss
pop
gs
or
orb
jg
xchg
ja
dec
mov
xchg
or
mov
bound
mov
hlt
sbb
mov
mov
fdivrl
iret
inc
or
add
sbb
in
cld
pop
fimull
test
inc
aad
mov
dec
stos
sahf
insb
mov
pop
rorl
leave
xchg
dec
or
mov
xor
add
sub
sbb
and
rorb
aas
imul
arpl
mov
out
sub
jo
xchg
dec
mov
mov
xor
dec
out
sbb
not
jle
lods
imul
push
test
sbb
add
test
out
jno
rolb
add
mov
sahf
pusha
pop
outsl
inc
ds
sahf
adcb
xor
call
dec
mov
cltd
cmc
fcmovnb
xorb
inc
out
mov
lock
push
arpl
cmp
mov
movsl
xor
div
push
jae
cwtl
add
cwtl
jmp
mov
je
inc
gs
mov
pop
std
dec
adc
adc
xchg
cli
or
call
add
sbb
mov
add
xor
cmp
lret
add
loope
or
dec
jl
push
hlt
scas
push
dec
dec
in
clc
pop
sub
mov
sbb
movsb
xor
push
add
dec
sbb
imul
push
push
or
push
xchg
mov
jb
mov
mov
idivb
repz
ljmp
std
or
ds
test
iret
push
lea
out
cmp
sbb
mov
inc
xor
xor
jb
ror
xor
xchg
pop
stos
add
gs
pushf
arpl
or
mov
fsubrl
rcr
scas
in
bound
push
xchg
cmpsl
aaa
in
lret
xor
movsl
sbb
test
and
push
out
popf
cmpsb
xor
xor
das
imul
dec
mov
pusha
ljmp
aaa
pop
xchg
icebp
es
mov
into
idivl
cld
mov
mov
pop
fs
sbb
xor
gs
inc
or
and
jae
arpl
leave
xchg
call
divb
jae
and
out
imul
rorb
cmp
out
add
sbb
ret
pop
repz
loope
les
lahf
pusha
fcompl
add
cmp
negb
cmp
jne
fwait
add
lret
std
inc
add
and
pop
gs
outsb
pop
mov
sub
xor
add
mov
pop
xor
das
or
mov
pusha
mov
addr16
dec
mov
mov
dec
or
and
lea
lods
in
add
mov
nop
cmp
jmp
inc
xchg
aad
sti
adc
pop
in
jb
movsb
rol
jecxz
cmp
test
lcall
pop
cmc
subl
jle
aaa
shll
dec
cltd
movsl
rcl
add
adc
jp
mov
ret
pushl
jnp
and
xor
mov
int3
dec
les
lods
jbe
call
sbb
movsl
mov
mov
mov
jns
das
test
imul
push
sub
clc
mov
pop
sub
sub
dec
ficomps
ds
into
in
mov
push
inc
xchg
dec
test
in
mov
insl
fwait
cmp
mov
in
jno
add
jns
pop
mov
sub
lahf
mov
sbb
loope
fwait
and
add
lods
adc
push
or
cmp
enter
das
xor
xor
push
fildll
and
sub
sbb
mov
sbb
daa
cli
fisubrs
pop
push
mov
aad
jno
pop
mov
mov
adc
shlb
mov
mov
mov
out
in
mov
adc
mov
inc
in
mov
hlt
cmp
ljmp
incl
mov
cmpsl
sub
int
repz
test
or
test
inc
les
cwtl
jo
or
push
dec
mov
rcr
sub
sub
test
lret
sar
push
mov
dec
and
and
inc
out
aam
and
push
rcr
cmpsl
pop
cmp
cltd
ja
push
inc
aas
push
aam
int
and
test
ret
xor
int3
cmc
mov
idivl
cmp
lds
negl
sahf
rcll
cmpsl
gs
mov
pop
jo
cmpsl
ljmp
bound
xlat
es
and
push
repnz
sub
cmp
inc
sbb
adc
aad
fcoms
dec
fcoml
rorl
nop
sbb
aam
mov
dec
lcall
es
xchg
popf
adc
xor
movsl
or
test
mov
inc
mov
js
mov
adc
jno
lods
fstps
cltd
push
add
xlat
dec
pop
cmp
icebp
lods
and
ret
in
pop
ss
dec
inc
xchg
xchg
call
roll
and
cmp
ljmp
mov
xor
pop
loope
dec
insb
fildll
fcompp
inc
or
add
sahf
dec
push
je
ds
ljmp
loope
push
fcoms
adc
push
test
lret
pop
in
xor
pop
sub
cmp
mov
dec
lcall
enter
sub
icebp
ds
jno
mov
push
jbe
das
dec
lock
adc
mov
in
jp
psrad
dec
daa
sbb
sahf
hlt
pop
shll
dec
mov
stos
jno
into
add
and
mov
fdivrs
mov
fcmovb
icebp
fldcw
mov
xor
pop
xor
and
lret
mov
out
rol
gs
jno
mov
lea
insb
cmp
pop
sahf
or
dec
and
fs
lret
fcomps
adc
fmuls
cwtl
iret
jmp
test
xchg
lea
xchg
mov
mov
les
or
cwtl
stos
push
cli
jb
push
in
aaa
xorl
fdiv
mov
cwtl
cmp
aaa
mov
pushf
cmc
jmp
xchg
add
jle
js
pop
pop
push
or
jne
ljmp
cwtl
cmp
pop
push
lods
in
sub
pop
mov
push
cmp
cld
ss
clc
push
and
test
fnstsw
jl
ds
jne
cli
add
cmp
or
push
in
sahf
jo
xchg
inc
mov
pushf
pop
pusha
fldcw
mov
pusha
jle
rcll
jl
loope
test
mov
or
mov
or
inc
rcrb
mov
rolb
sub
stc
dec
and
inc
pushf
jns
xorl
add
ret
nop
jle
add
jmp
jnp
xor
aam
fisubl
repnz
lds
cltd
xchg
jno
out
pop
or
fdivl
or
fildll
cmp
cwtl
pop
sub
xchg
jp
xor
xchg
and
clc
sbb
sub
test
pop
sub
add
or
mov
pop
cmp
xchg
cli
shrl
push
stos
mov
xchg
inc
mov
add
mov
rolb
ret
push
mov
rorl
mov
test
insl
gs
xchg
sbb
gs
loopne
out
sbb
arpl
xor
daa
or
sbb
xchg
push
sbb
mov
outsl
dec
aad
and
into
mov
mov
mov
es
cmp
aam
xchg
pop
xchg
or
sub
leave
pop
adc
repz
jno
inc
inc
xchg
pushf
mov
push
jae
mov
mov
xchg
lds
mov
iret
mov
dec
nop
mov
aad
pop
mov
xlat
dec
cmpsb
mov
test
inc
cmp
inc
jge
loop
daa
aaa
arpl
or
jb
cli
stc
sbb
xchg
push
mov
lret
lods
sahf
out
aad
mov
icebp
sbb
jnp
adc
push
leave
mov
mov
loope
bound
cmp
and
scas
cli
call
imul
pop
dec
inc
sbb
ja
inc
mov
test
xchg
hlt
repnz
stos
std
jg
push
push
push
lds
mov
sub
imul
in
pusha
icebp
int3
xchg
add
mov
mov
scas
mov
inc
jge
fsubrs
cld
flds
push
mov
lock
lds
adc
and
test
inc
adcl
ss
cmp
dec
rorb
cmpsl
jbe,pt
jnp
fwait
lretw
push
testb
jp
adc
xor
add
mov
out
rcr
or
inc
pusha
cli
push
or
mov
mov
fdivl
sbb
dec
inc
cmp
inc
fidivrl
jnp
insl
pop
cmp
mov
cmp
mov
jnp
add
push
in
and
insl
and
add
jb
lret
or
jns
xchg
leave
scas
sbb
loope
dec
mov
fcompl
iret
jae
jne
loop
std
loopne
test
adc
imul
sbb
movsl
xchg
push
or
cmp
clc
lcall
push
cmpsl
adc
sub
lds
arpl
cs
out
daa
ss
inc
mov
loopne
test
icebp
mov
mov
outsl
and
mov
add
pop
icebp
popf
cwtl
cwtl
enter
loop
popa
xor
push
mov
insb
cmpsl
mov
xchg
mov
dec
adc
stos
push
xchg
aad
outsb
pop
pop
mov
sub
insl
mov
fcoml
outsb
aas
sbb
and
xor
jns
es
adc
pop
xchg
xor
sti
mov
rclb
cwtl
popa
cmp
xor
das
pop
mov
inc
movsb
push
stos
inc
ror
mov
jmp
xchg
cmpsb
adc
subb
fdiv
inc
push
movsb
xchg
les
hlt
and
jp
or
subb
imul
cmpb
mov
add
iret
jle
cmp
out
arpl
jle
mov
ret
dec
pushf
rcr
popa
and
mov
jmp
push
or
popa
dec
and
xchg
jle
nop
lods
inc
xchg
shl
jno
adc
push
cmpsl
push
mov
or
fists
repz
cwtl
fisubs
xor
movsb
pop
and
jmp
pop
or
les
fisttps
and
pop
loopne
push
ret
pop
dec
or
sbb
xor
and
pop
pop
into
inc
cmp
mov
mov
test
dec
out
test
cmp
push
add
dec
pop
loop
mov
jne
test
cmp
jb
movb
sbb
lods
add
repnz
push
jmp
hlt
or
insb
xor
mov
std
es
push
inc
xor
icebp
aam
mov
pop
lahf
xchg
xchg
or
outsl
dec
in
icebp
jecxz
cmp
mov
push
roll
outsb
add
mov
mov
mov
inc
or
mov
mov
xchg
enter
shrb
push
into
mov
jo
sbb
add
pushf
outsb
jo
mov
dec
lds
mov
jo
and
inc
fdivrs
pop
sbb
mov
mov
inc
loopne
lods
sbb
pop
mov
push
js
push
mov
xor
xor
int3
out
sar
cmp
fmull
fisttpll
frstor
into
xchg
mov
das
adc
mov
push
incb
inc
into
fs
lds
sti
mov
outsb
pop
popaw
jle
adcl
sbb
pop
ss
in
das
cmc
je
movsl
popf
sbb
outsb
inc
jp
sub
stos
jge
jb
pop
aaa
sbb
mov
adcb
xorps
cltd
je
xchg
push
inc
push
xlat
pop
cs
mov
insl
ss
sahf
xor
hlt
js
popa
arpl
daa
stos
ret
xor
in
or
push
outsl
dec
xor
enter
and
out
das
in
or
je
jmp
loope
lret
mov
sub
bndstx
movsl
inc
inc
popf
mov
xor
and
push
jmp
aaa
cmp
jp
movsb
loop
xor
xchg
outsb
cli
push
ret
sbb
ljmp
jl
mov
clc
ret
xor
movsl
popf
sub
repz
xchg
xchg
pop
in
lcall
imul
fwait
push
jge
adc
in
jne
arpl
sub
cmp
loope
jae
daa
sbb
pop
mov
sbb
inc
jmp
aas
insb
rolb
daa
lods
call
stc
jne
xchg
cmp
dec
shll
mov
push
cmpsw
sti
clc
push
cmp
imul
xchg
and
mov
into
inc
cmp
mov
shll
pushf
jbe
push
pop
jb
xchg
and
dec
or
pushf
mov
popa
and
xor
test
repnz
jecxz
js
fimull
push
fwait
les
mov
rclb
pusha
push
ljmp
aaa
int
xchg
cmp
sub
cmp
adc
xorb
add
cltd
mov
dec
mov
pop
mov
loope
test
adc
lret
ss
dec
sbb
fucomi
insl
sub
push
jb
sub
add
push
inc
mov
scas
int
int
sub
and
add
xchg
int3
pop
xchg
and
fistps
jmp
xchg
insb
fisubrl
addb
xlat
push
in
subl
enter
iret
jno
xchg
pop
imul
cmp
int3
adc
test
mov
into
push
ror
inc
loopne
jge
mov
pop
icebp
aas
call
aam
jnp
adc
xor
push
xor
insl
cmpsl
icebp
or
pop
xchg
fidivs
cmp
mov
ret
std
aas
sti
sbb
jae
sub
jns
mov
push
jo
fsubrl
push
lea
lds
add
sbb
and
or
mov
stos
clc
mov
push
lods
jge
lds
or
pop
arpl
add
inc
jp
xchg
cmp
push
sub
sarb
std
out
out
scas
mov
mov
dec
xorb
leave
xlat
stc
pop
xchg
out
cs
push
cmpsb
push
push
sub
bound
clc
leave
jg,pt
push
adcb
insl
shll
dec
sbb
push
and
and
test
outsl
push
aad
jl
imul
dec
cli
push
rcll
xchg
pop
xchg
push
sbbl
aad
es
inc
sbb
inc
test
and
stos
stos
rclb
jp
sub
lcall
jnp
adc
mov
or
mov
push
lcall
in
pop
loope
mov
sub
lret
scas
or
fsubrl
or
pop
insb
dec
cmp
adc
cltd
and
jae
aad
jno
and
cmp
movsb
adc
xchg
xlat
gs
loop
in
insl
lock
push
sbb
pop
push
hlt
ret
add
jge
sti
out
add
fldt
outsl
cmp
jne
cwtl
xor
inc
mov
jo
cmc
lret
mov
je
or
xchg
iret
call
jg
mov
cmpsl
daa
inc
xchg
in
add
into
cmc
lods
sub
xlat
mov
negb
push
xor
add
movsb
mov
adc
cmc
or
cli
in
andl
jae
dec
jecxz
cli
stos
pop
xor
fstl
and
xchg
jnp
push
pop
mov
dec
mov
cmp
jae
sbb
pop
dec
ret
js
xor
fisubl
stc
js
outsl
pop
pop
or
cmp
fidivl
int3
add
adc
mov
leave
sbb
adc
xchg
inc
lcall
lcall
ud2
stos
jp
outsb
insl
or
jo
sub
cmpb
xchg
and
inc
mov
push
data16
sbb
xchg
iret
in
dec
xor
insl
cld
dec
push
lret
dec
sbb
scas
mov
insl
mov
in
or
cmp
cmpsl
push
jbe
or
loopne
mov
inc
out
jnp
mov
pop
jnp
dec
fs
mov
stos
into
mov
fwait
push
lea
int
sbb
jg
loop
dec
cmpsl
mov
aam
rcrl
int
lods
fdivr
iret
pop
adc
sub
hlt
mov
sbb
sub
push
movl
dec
mov
aam
add
and
sbb
imul
inc
loope
sbb
add
out
lods
out
push
cmp
jp
hlt
sbb
cmp
fldt
out
addl
aad
insl
or
popa
cmp
mov
cwtl
push
push
mull
xchg
and
lahf
dec
cmp
pop
scas
addr16
sbb
mov
pop
add
mov
pop
enter
xor
fistps
cmpl
mov
sub
ss
sbb
out
xor
xlat
cmp
pushf
sub
inc
dec
insb
push
sub
cwtl
pushf
stos
mov
dec
push
rcrl
scas
imul
out
mov
xor
xor
jmp
inc
pop
mov
or
pop
sahf
inc
inc
cld
add
or
cmc
lcall
out
sbb
nop
cwtl
rcrl
cmpsl
je
mov
xchg
cmc
or
sub
sbb
pop
imul
jmp
test
test
or
lret
mov
mov
fisttps
push
cmpsl
cmpb
mov
jecxz
jns
fwait
inc
xchg
shlb
mov
les
xchg
push
jecxz
imul
nop
outsb
bound
mov
lret
inc
daa
inc
jnp
pop
add
cld
dec
lea
pop
loop
dec
and
je
xor
xor
dec
cmc
call
xchg
aam
pop
dec
lret
dec
jns
cmp
dec
mov
mov
fcoml
and
jle
dec
negl
inc
xchg
push
dec
aas
cmpsl
push
and
inc
lods
sbb
jp
sbb
dec
int
rcrl
xchg
sub
push
dec
arpl
dec
mov
outsb
adc
mov
into
mov
test
push
repnz
inc
add
insb
test
fs
ret
in
adc
xor
stc
dec
push
loopne
push
ror
xchg
or
movsl
jge
sti
testl
lret
cs
in
sub
stos
fidivrs
leave
call
xchg
push
fistps
clc
xor
cs
sub
xchg
leave
mov
adc
cmp
lcall
jo
jne
sub
sbb
pop
icebp
outsb
pop
sub
iret
xor
fs
out
les
sbb
adcb
xor
mov
inc
mov
call
into
leave
fisubrl
repz
fsubrs
or
and
cli
mov
iret
insl
clc
gs
mov
jns
mov
lcall
rclb
rcrb
ficompl
xor
int
lret
gs
mov
arpl
cmpsl
mov
lds
pushf
mov
out
sahf
mulb
enter
jle
rcrl
repnz
imul
into
loope
pop
push
inc
sbb
dec
sub
fadd
jbe
mov
cmp
data16
lret
cs
and
cltd
dec
add
mov
push
jmp
or
push
xchg
push
or
or
jge
add
in
adc
int3
jge
cltd
lods
jo
jp
dec
adc
scas
ds
call
fxch
xchg
push
les
lret
add
dec
pop
loop
xor
sub
sub
cmp
xor
jge
push
pop
out
scas
adc
inc
xor
sbb
jmp
fdivl
enter
movsl
lcall
arpl
cmp
dec
inc
adc
cmpsb
adc
testb
negl
fimuls
out
mull
ret
andl
jbe
adc
fidivs
xor
adc
cld
in
sub
rcl
in
sbb
nop
inc
adc
nop
fbstp
mov
ja
mull
sbb
in
fwait
test
mov
pop
push
fdivl
mov
cmp
loope
cmp
or
frstor
stc
andl
cmc
inc
push
shlb
shl
dec
movsb
jmp
out
add
jns
mov
cmpsb
iret
stos
jb,pn
push
adc
mov
inc
loopne
or
push
pushf
test
fdivl
inc
mov
loope
test
jmp
lret
cmp
jmp
ljmp
jnp
aaa
jmp
shll
aam
jb
dec
push
imull
and
pop
cmp
test
push
sub
inc
bound
pusha
fisubl
pop
mov
and
cmp
mov
test
jmp
add
popf
adc
push
fistps
mov
jb
leave
mov
dec
push
pavgw
shlb
sbb
and
imul
pop
mov
xchg
xor
mov
xor
push
jg
inc
lret
xor
ds
inc
daa
mov
jecxz
enter
notl
add
out
cmp
sti
cltd
ljmp
lret
ss
rcrb
aam
cmp
cltd
lods
vpmacsdql
sbb
stos
dec
das
scas
cltd
sbb
push
lret
cltd
sub
nop
jg
roll
cmpsl
inc
imul
jae
test
jecxz
fisttpll
hlt
xlat
fwait
ss
out
jno
cwtl
push
sub
arpl
sbb
pop
fildll
xor
sbb
ss
mov
jno
or
pop
and
add
sbbl
mov
push
jo
add
pop
xor
scas
arpl
push
in
jb
rcll
test
lret
sub
bound
cmpsl
aad
add
sbb
rep
adc
dec
int3
sbb
jbe
in
cmpsl
inc
outsl
dec
adc
jmp
or
insb
nop
pop
dec
scas
add
inc
imul
std
arpl
in
aaa
sahf
ja
mov
xchg
cmp
lods
jae
push
jmp
pop
icebp
jl
cmp
add
xor
inc
and
addr16
jge
sbb
jno
fwait
sarl
aaa
cltd
adc
xchg
loopne
lea
js
push
sahf
fwait
js
rclb
push
jle
xchg
adc
arpl
stos
jo
push
imul
sub
cmp
lock
pop
lock
fdiv
rolb
xor
daa
add
dec
fmuls
and
insb
rolb
arpl
out
rcrb
pop
ret
inc
dec
cmp
jmp
mov
pop
pop
jge
imul
loope
mov
pop
dec
test
pusha
mov
add
mov
or
int3
jae
leave
inc
mov
mov
mov
push
ficoms
cmpsl
xor
sub
xchg
sbb
ss
sub
jg
xchg
fcoml
inc
std
loop
mov
jl
mov
push
mov
popf
hlt
sbb
jecxz
cmp
pop
andb
add
mov
pop
daa
mov
sbb
std
pop
cmpsl
test
cltd
add
fwait
pop
mov
mov
inc
ret
mov
mov
rorb
sbb
das
mov
dec
xor
lock
jb
sbb
sub
xchg
stc
mov
mov
in
dec
push
and
xchg
loopne
enter
test
cmp
ficomps
sbb
and
ja
sbb
loope
pop
test
es
push
pop
lcall
pop
adc
xchg
xchg
arpl
test
aas
xchg
push
cmp
ljmp
mov
and
jne
scas
iret
ds
inc
cmc
pop
ss
jae
xchg
jle
popa
sahf
sahf
ret
push
popa
dec
fxch
fcmovne
or
jl
into
adc
loope
mov
and
fwait
mov
push
xlat
sbb
cwtl
sub
sahf
xchg
arpl
ficomps
std
sbb
int3
pop
repz
mov
cld
jp
xchg
mov
sahf
pushfw
add
cmpsb
icebp
push
mov
push
ss
mov
jno
lods
sub
and
hlt
lods
enter
inc
loop
rcll
lods
pop
loope
mov
imul
movsl
les
pop
aam
adc
adc
sub
mov
mov
pop
sub
movsl
rorl
jbe
in
lcall
insl
arpl
xor
xchg
cmp
sub
lds
xor
sub
lret
lcall
mov
or
jmp
dec
xor
pop
add
push
fcmovne
mov
rorb
pop
gs
stos
sbb
in
sub
loope
mov
sbb
cmpsl
adc
jge
js
pop
leave
loope
xor
call
cmp
fsubl
adc
imul
pusha
sub
int3
lret
add
daa
dec
repz
sbb
loope,pt
fiadds
and
pop
jae
pushf
cli
scas
mov
xchg
push
rcr
popa
and
fwait
jmp
rorl
loop
sahf
in
rclb
or
and
pop
inc
bound
rclb
jle
test
andb
xchg
lret
movsb
ja
inc
dec
dec
mov
cld
mov
inc
or
dec
push
inc
in
or
cmp
xor
push
lea
lods
cli
cmpb
mov
xchg
aad
fisubrl
mov
js
push
enter
ds
sub
and
and
cmc
mov
mov
pop
mov
xchg
xor
fwait
lds
mov
fnstsw
push
cltd
add
pop
jno
ret
push
adc
cwtl
dec
or
in
mov
dec
jbe
dec
push
xchg
add
push
pop
xchg
enter
test
fisubrs
cmp
or
test
dec
pop
test
lock
and
xor
push
into
sbb
jmp
mov
pop
inc
lahf
pop
jecxz
aam
inc
imul
or
lcall
pop
sub
movsb
cld
push
lcall
test
into
incb
scas
sahf
cmpl
or
jae
dec
icebp
mov
pop
inc
sbb
jns
sahf
fsubs
lret
aam
sbb
or
pop
push
out
jmp
loop
lret
jo
mov
movsl
into
xor
mov
mov
mov
and
out
mov
sti
out
or
loop
pop
fsubs
push
xchg
loop
cmp
sub
jno
mov
ret
lret
adc
incb
out
and
rcrl
addr16
inc
notb
jne
adc
pop
outsl
xorb
lea
push
in
out
xor
andl
inc
and
fwait
je
ret
push
xchg
pushf
cmp
cmp
cmpsl
cmpsl
sbb
xchg
fwait
jge
pop
shrb
subl
loop
out
cmc
ror
mov
movsl
mov
test
dec
pop
sbb
sbb
mov
xchg
mov
test
push
pop
cmc
mov
jecxz
dec
mov
inc
fwait
sbbl
imul
cmp
cmc
mov
test
add
add
mov
or
mov
outsb
push
inc
iret
in
xchg
add
mov
lods
scas
jle
in
lods
inc
cmpl
adc
lcall
sub
cmpsl
sub
data16
dec
icebp
aas
adc
pop
xchg
ja
imul
or
lcall
or
adc
xor
cld
in
aad
mov
sub
sbb
and
sti
lods
shll
call
aam
addl
mov
or
xchg
outsl
cltd
lret
push
mov
mov
dec
mov
pop
aas
add
and
cmp
lret
jl
push
adc
xchg
jae
scas
cwtl
mov
call
inc
sahf
xor
adc
cmp
and
sahf
ja
push
dec
mov
dec
or
jae
pop
jle
mov
add
aas
mov
test
add
pop
stos
leave
dec
ffreep
iret
enter
movsb
pop
mov
cmp
push
xchg
push
int
add
jno
cmp
xorb
fisttpl
and
mov
adc
mov
mov
popf
rcll
pop
loop
lods
dec
cmpsb
jno
jecxz
repnz
push
sbb
neg
xchg
jns
pop
inc
cmp
call
int3
mov
mov
inc
fistpl
and
jp
arpl
bound
jg
ja
add
stos
push
rolb
dec
jne
shll
push
xchg
popf
js
adc
jnp
lret
mov
pop
rcl
inc
cmp
bound
clc
in
sub
aam
fimull
sbb
xor
scas
popa
lods
addl
test
dec
test
ret
jecxz
xor
or
dec
or
dec
or
gs
jge
pusha
push
add
xchg
enter
sub
int
cmovo
and
in
inc
icebp
loope
adc
xchg
cwtl
cmpsl
adc
jbe
ficomps
aas
push
scas
loope
outsb
lahf
gs
cmp
add
sarl
push
or
jle
loopne
and
lea
xchg
lods
testb
xchg
icebp
fbstp
push
or
repz
dec
push
push
outsb
insl
sub
inc
stos
clc
andb
cmp
and
or
inc
cmp
mov
inc
stc
cltd
dec
jae
cli
and
xor
mov
pop
es
insb
fistpll
push
inc
inc
or
std
pop
leave
idiv
add
into
data16
jbe
mov
cld
xchg
test
daa
je
adc
inc
int3
xchg
ds
push
mov
sbb
dec
lret
icebp
pop
xchg
fldt
push
ds
mov
cs
push
ret
dec
jmp
sahf
in
imul
cmp
dec
enter
push
sub
or
mov
ds
lock
mov
push
push
dec
and
repz
push
sarl
cli
lahf
imul
inc
push
xchg
or
mov
loope
es
jg
fcomps
ret
mov
lock
push
cmp
push
pop
stc
mov
dec
pushf
push
test
jp
dec
adc
scas
mov
insl
adc
sti
mull
cld
adc
mov
ljmp
add
and
pop
mov
mov
jg
mov
jge
push
jns
push
xor
les
sub
add
fs
xor
mov
sbb
fstpl
js
dec
or
cmp
mov
jmp
mov
xchg
test
mov
xor
clc
imulb
int
mov
aaa
in
push
dec
frstpm(287
ja
cmp
cs
mov
fcoml
adc
jl
pop
pop
xor
ds
rol
cmp
das
xor
pop
dec
addr16
jb
stos
ret
fs
mov
push
and
mov
lea
pop
ss
dec
nop
ret
int3
fstpl
cmp
lea
jns
ret
mov
inc
lock
test
adc
add
push
jb
hlt
out
outsb
or
leave
jno
cmpsb
das
mov
out
xchg
imul
cmp
jecxz
inc
fstps
fisttps
adc
icebp
xchg
pop
or
mov
int3
int
mov
sahf
pusha
cmp
push
aam
shll
repz
out
test
es
clc
fstpl
or
jecxz
mov
inc
test
xchg
sbb
sub
fstl
movsl
hlt
out
add
insl
sbbl
pop
loope
xor
push
mov
pop
mov
in
mov
pop
inc
imul
cmpl
rol
mov
cli
push
jns
int
icebp
inc
cld
fimuls
test
mov
popl
adc
mov
sub
sub
leave
loopne
imul
and
push
icebp
xchg
mov
and
jmp
push
push
mov
call
das
dec
add
outsl
in
pop
cmp
dec
xor
dec
mov
int3
cmp
mov
rclb
push
and
push
xor
test
xor
fwait
test
pop
gs
stos
ljmp
mov
aam
dec
adc
jno
loop
mov
xchg
sbb
jnp
mov
jns
dec
shrl
repnz
lret
mov
outsl
mov
fidivrs
test
dec
inc
pop
and
xlat
xchg
fistl
xor
ljmp
clc
push
jne
fiadds
jmp
shr
insb
adcb
sbb
mov
cltd
mov
movsb
jbe
push
inc
popl
xchg
arpl
outsb
dec
mov
add
adc
leave
mov
push
sbb
inc
add
jae
jmp
pop
mov
jne
int
fucomp
aam
jnp
or
popf
enter
fmuls
add
lods
pusha
mov
mov
pop
xor
cld
pop
adc
mov
push
lret
mov
lock
sub
sub
aas
roll
add
mov
ljmp
xor
mov
adc
test
repnz
aaa
lods
inc
gs
lea
insl
mov
in
pop
testb
and
jp
cmpsl
jmp
popf
fisubrs
dec
mov
jl
push
xchg
push
adc
pop
pop
mov
xor
adc
mov
pop
arpl
jb
dec
push
lcall
test
and
xchg
mov
in
sbb
lahf
mov
ror
sbb
jecxz
adc
lret
pop
push
dec
pop
das
sbb
pop
xchg
jl
pop
popa
sub
out
fmuls
mov
cwtl
cmp
jbe
mov
mov
aaa
fucomi
sbb
cmp
push
sbb
test
scas
jno,pn
mov
lods
jmp
cld
sbb
fists
stc
nop
xlat
icebp
jle
cld
cmpsl
or
test
jnp
movsb
nop
sub
mov
in
add
bnd
repz
or
xchg
mov
dec
or
and
mov
popf
jno
in
mov
or
lods
pop
push
stos
int
stos
pop
in
mov
cmp
in
mov
jecxz
mov
les
je
or
adcl
popa
popf
cmpsb
jg
in
loope
sub
lcall
xchg
loop
popf
push
add
and
lods
shll
sub
jnp
jae
push
pusha
lahf
aam
jno
or
mov
fidivrs
jno
incb
imulb
stos
inc
nop
fildll
mov
cmp
cmpsb
out
add
jl
dec
out
mov
dec
mov
add
test
mull
lds
je
cltd
inc
cmpsl
push
lahf
and
andl
pushf
test
mov
adc
mov
lock
sbb
or
iret
xchg
adcb
pop
cld
mov
sbbl
aad
cmp
add
xchg
sub
pop
clc
lds
aam
and
dec
std
mov
ljmp
jge
sub
dec
popf
and
jge
inc
cmp
xor
popa
push
xor
imul
rorb
fdivrl
insl
fidivrs
lret
inc
jge
rol
movsl
outsl
hlt
sbb
xor
cmc
mov
push
rcr
lods
clc
int3
and
test
std
jb
push
xchg
icebp
popf
mov
fidivs
stos
sub
shlb
jp
mov
jnp
inc
mov
lods
push
cwtl
add
mov
mov
xchg
fistps
pop
shrb
sub
aad
loopne
inc
sub
int3
xchg
hlt
adcb
inc
repnz
push
lock
and
and
mov
bound
xor
leave
movsb
ss
movsb
push
adc
cmp
xchg
cmp
movsb
xor
dec
push
jg
inc
cmp
jmp
pop
shlb
out
xchg
jmp
adc
or
xchg
mov
sub
ja
pop
mov
cmp
cmp
loop
pop
mov
test
mov
int
inc
xchg
fadd
inc
xchg
mov
int3
jbe
out
sbb
cltd
icebp
and
push
inc
ds
or
mov
stc
rorb
out
xchg
loop
test
pop
pop
mov
out
mov
outsb
xchg
test
xchg
fs
cmp
jno
push
outsb
push
push
mov
sbb
adc
rcrb
pusha
inc
out
xor
mov
mov
das
sbb
adc
adc
aad
data16
inc
repz
sub
push
and
pop
aad
negl
push
push
inc
xchg
scas
xchg
jns
mov
mov
cltd
in
jb
jle
clc
jp
cmp
or
pop
or
pop
pop
popl
inc
movsb
xlat
or
sbb
arpl
jns
int3
lret
pop
jle
mov
push
mov
push
nop
xor
pop
sub
pop
loop
mov
loop
xchg
imul
fdivrl
flds
sub
ds
pop
jp
pop
jmp
and
push
pop
xchg
dec
dec
or
or
xor
jmp
mov
sahf
ficoms
or
sbb
sbb
mov
cmpsl
push
sub
cs
ds
sahf
das
orb
lret
inc
popa
cltd
push
fidivs
js
mov
aaa
mov
lea
imul
inc
jbe
repz
pop
or
xchg
out
je
add
lcall
call
push
inc
insb
mov
nop
jmp
fsub
jbe
xlat
sbb
hlt
inc
pop
stos
lret
loopne
dec
lods
fdivs
stos
mov
bound
xor
mov
aas
es
mov
outsl
out
xchg
sub
push
rorb
jnp
sbb
xor
push
sub
mov
pop
or
mulb
ret
loopne
pushf
xor
adc
aad
scas
jmp
fdivrl
inc
fistps
xchg
add
fs
xchg
push
stos
sbb
xchg
setns
in
mov
subb
fs
hlt
adcl
les
lods
jge
pop
ja
inc
pop
add
and
mov
mov
test
pop
xlat
jo
push
mov
sbb
fstps
jecxz
cmp
sarb
pop
daa
mov
and
enter
sub
pop
leave
cli
aam
in
enter
sbb
pop
or
sbbl
jnp
or
rol
mov
push
orb
stos
cmp
int
jl
fiaddl
inc
into
or
out
mov
cmp
mov
in
outsl
add
adc
xchg
filds
jge
pushf
cwtl
shr
adcb
cmpsl
mov
dec
sub
inc
add
mov
xchg
xor
jge
dec
aaa
inc
pushf
push
jl
sub
lea
rcrb
mov
mov
fisubrs
stos
js
cmpsl
sub
andl
mov
add
fcmovbe
xor
and
popa
inc
jb
push
mov
or
jae
jge
test
sub
or
insb
imul
jmp
addb
push
cs
arpl
xor
or
jne
pusha
lods
imul
arpl
into
dec
out
out
dec
lock
aad
xor
xchg
imull
outsb
aad
or
mov
or
cmp
movsb
pop
mov
jno
sbb
shl
cmp
lahf
mov
loopne
mov
hlt
cmpb
inc
jmp
jae
sub
xor
inc
sub
dec
push
jnp
enter
push
mov
sbb
incb
jns
mov
sbb
push
fsts
push
or
xlat
jp
pusha
movsb
jno
push
scas
lds
mov
sahf
into
mull
push
adc
loope
push
push
mov
xor
cmp
xchg
adc
mov
fidivrl
jg
cmp
sub
jle
cli
mov
out
mov
adc
scas
sbb
mov
sub
and
xor
stos
mov
scas
push
out
je
or
inc
call
mov
fiadds
push
mov
jnp
imul
adcb
rcr
sbb
jmp
test
insb
pop
pop
pop
adc
cmp
mov
pusha
pushf
adc
arpl
push
rclb
imul
out
sbb
fs
xchg
adc
xchg
jp
adc
jmp
fsubs
pushl
jg
adc
std
dec
mov
cmpsl
gs
aad
enter
inc
dec
pop
bound
negb
imul
cmpsl
ds
loope
cltd
cmp
fcoml
cltd
sub
in
mov
bound
enter
test
sub
xor
ret
inc
fucom
lret
pusha
sub
mov
add
mov
and
cmp
loope
pop
fsubr
mov
popa
dec
xor
movsb
sbb
arpl
dec
dec
loop
mov
cmp
mov
xlat
insb
leave
and
jae
in
mov
jnp
jge
push
jne
cmpsl
push
push
loop
mov
push
or
inc
loope
scas
roll
rcl
push
fcmovnu
ss
loopne
and
jae
and
or
fstp
jbe
sbb
lods
mov
mov
nop
push
mov
mov
fwait
popf
bound
sbbl
jp
inc
pop
add
mov
adc
dec
inc
cmpsb
in
arpl
mov
shlb
and
addl
cli
jg
sti
movsb
sbb
sub
push
sub
dec
inc
adc
notl
mov
fidivs
add
mov
or
icebp
push
cwtl
test
xor
nop
popa
mov
mov
push
sbb
push
and
adcl
and
fdiv
jnp
cltd
push
xchg
inc
stc
imul
xchg
push
or
aaa
das
pop
cmpsl
adc
add
inc
mov
and
lods
xlat
aad
fistl
mov
adc
into
xlat
jnp
xchg
popa
cltd
mov
mov
mov
shrl
mov
mov
inc
pop
in
imul
jecxz
lds
out
push
add
jno
xchg
adc
ds
lret
into
cmpsb
out
mov
jmp
mov
mov
add
and
inc
push
sahf
hlt
in
pop
in
jmp
je
rcrb
inc
and
and
leave
inc
popf
fistpll
addr16
mov
jecxz
xchg
adc
lods
sbb
sarb
clc
test
in
cmp
addl
aaa
sbb
dec
inc
push
pop
inc
or
sbb
mov
jge
enter
cli
dec
jle
xchg
ljmp
aam
adc
mov
push
fstpl
lcall
and
inc
mov
fstl
adc
fcomps
jge
cmp
pop
pop
icebp
add
jb
mov
je
cmp
xchg
lds
loope
fisubs
rcl
push
and
push
mov
ja
adcb
jg
add
pop
and
lock
or
inc
es
mov
add
push
lds
mov
sub
in
mov
repz
imul
push
mov
divl
pop
jl
xchg
jns
stc
pop
outsl
and
cli
push
jns
jnp
fwait
pop
dec
add
mov
inc
cwtl
icebp
jp
imul
xor
mov
int3
mov
adc
lret
or
pop
mov
hlt
fistpl
popa
jg
in
das
mov
sahf
cmp
je
jnp
addl
xor
push
xor
xchg
mov
jmp
push
repnz
pop
loopne
sub
fwait
scas
jbe
mov
pop
sbb
loope
or
ds
push
push
mov
xor
fists
in
mov
movsl
add
fs
outsb
ret
push
pop
inc
stc
mov
test
je
notl
xlat
fwait
mov
pop
pop
pop
lea
pop
repnz
sub
jp
dec
pop
mov
jae
pushf
andl
test
mov
jo
xchg
xchg
push
cwtl
lods
jg
fldt
lods
test
mov
ret
inc
lds
mov
das
call
mov
pusha
push
imul
daa
xchg
add
push
jnp
mov
cwtl
xchg
outsl
stc
dec
jb
out
sub
sbb
adc
lods
addr16
add
sti
adc
pop
dec
and
lods
test
imul
pop
jecxz
ret
mov
sub
ficomps
cltd
cmp
cmpsb
jns
repz
pop
das
in
les
xchg
push
sub
push
rcll
outsb
addl
inc
fidivl
fistpl
fstpt
sub
sub
push
popf
adc
push
clc
add
jmp
jo
nop
imul
es
mov
jbe
sahf
inc
and
test
xor
test
in
mov
sub
xor
dec
pop
js
pop
mov
lock
out
shrb
cmp
in
mov
inc
test
xchg
bnd
dec
mov
push
and
out
test
xchg
xchg
popa
jg
out
fisubrl
or
out
aaa
pop
dec
nop
test
sbb
into
pop
scas
mov
fs
data16
inc
mov
mov
mov
arpl
add
mov
jnp
add
and
jo
jecxz
fiaddl
leave
rorb
xchg
inc
lods
insl
xchg
push
inc
jb
cmc
push
mov
mov
cmpl
push
add
andb
repnz
xor
fisttpll
lods
outsb
sahf
inc
stos
fsub
dec
or
adc
lock
mov
cs
ss
add
mov
mov
mov
push
xchg
sbbb
sbb
dec
repnz
push
add
outsb
xchg
cli
and
lahf
xor
mov
repz
add
inc
ss
mov
mov
out
clc
je
mov
rcll
fidivs
mov
out
sub
cmp
addb
cmp
pushf
add
and
lea
jl
cmc
nop
mov
cmovae
fisttps
nop
cmp
mov
push
sbb
mov
jge
popf
je
lret
add
ja
js
shrb
fcmovb
jmp
adc
add
mov
xchg
out
jg
push
cmp
jp
xchg
outsl
sbb
mov
movsl
jl
jle
mov
mov
aad
push
sarl
icebp
dec
jecxz
and
aad
daa
or
mov
shlb
scas
xchg
cmovp
clc
hlt
fs
mov
jecxz
adc
in
aam
pop
xchg
xor
xor
sub
aas
adc
fsubp
jp
push
arpl
mov
push
pushf
outsb
out
insb
pop
ds
addb
jo
aas
mov
xchg
fdivs
loopne
cmpsl
lcall
or
mov
nop
pop
sub
inc
sub
pop
pop
out
xor
mov
mov
sbb
div
out
xchg
sub
popf
insb
add
and
negb
enter
xchg
shll
lods
lret
push
cmp
mov
adc
jge
orl
lods
mov
ret
popf
inc
xchg
fcoml
imull
mov
pusha
nop
pushf
sahf
or
sti
add
gs
ret
fbld
lock
jge
xlat
popf
xchg
jp
decl
divl
enter
pop
mov
xlat
jns
mov
jge
cld
sub
lret
pop
and
xchg
xor
call
insb
jle
dec
dec
cwtl
xor
sbb
dec
sub
inc
jbe
imul
and
mov
cmpsl
test
xchg
inc
flds
lods
mov
pusha
lret
mov
dec
mov
mov
lret
xchg
add
fmull
testb
jge
test
icebp
gs
andl
xchg
lcall
fsubs
sub
pop
aam
aas
jmp
les
test
sbb
lock
ds
mov
in
xchg
sar
gs
mov
insb
jae
lods
jmp
repnz
mov
leave
lods
in
mov
ret
inc
clc
and
imul
cwtl
xchg
out
push
jae
push
sub
ret
leave
lods
ljmp
push
insl
scas
push
aaa
inc
mov
nop
jmp
cmp
cmpsb
xchg
nop
stc
sbb
push
fdivs
loop
in
pop
xchg
dec
dec
data16
lcall
lret
add
xchg
jo
pop
stos
jmp
push
mov
and
mov
lods
mov
loope
leave
sar
mov
mov
pushf
in
jg
jecxz
scas
orl
lock
repz
add
jp
inc
test
loopne
cmp
test
adc
push
int
clc
cld
add
loop
inc
iret
xor
sti
or
push
sti
mov
scas
dec
or
xchg
cmp
scas
mov
and
enter
jge
cmpsl
jnp
pop
in
test
sti
mov
gs
jne
test
daa
push
addr16
into
das
nop
cwtl
lods
and
fnstcw
dec
cmpsl
mov
cmc
out
inc
aam
lds
insl
rorb
in
inc
mov
int
cmp
adc
rcrb
sbb
leave
sbb
jp
insb
push
daa
xchg
add
inc
fadd
lds
jle
sub
mov
inc
sbb
sbb
dec
pop
jae
xor
add
aaa
daa
mov
aad
leave
subl
movb
push
sub
in
pop
imul
mov
add
insl
shlb
roll
test
andl
in
inc
ror
pop
out
lret
sub
lds
insl
daa
aaa
cmp
push
shll
sbb
cmp
scas
pop
movsb
lcall
adc
push
xlat
aaa
adc
fld
push
dec
repz
adc
jb
cli
pushf
gs
scas
push
xlat
and
in
les
in
jle
and
mov
adc
mov
je
jecxz
mov
mov
fwait
mov
fidivrl
sub
mov
mov
out
rcrl
aas
in
xchg
inc
xchg
add
test
xchg
sar
lcall
dec
sub
or
sahf
pop
outsb
jl
mov
stc
daa
mov
insl
xor
mov
shll
or
add
scas
and
dec
jp
and
adc
scas
ret
push
repnz
adc
orl
dec
sbb
xchg
push
enter
call
stos
sub
xchg
cltd
jp
sub
cli
xchg
pop
xor
jmp
mov
add
test
pop
in
insb
xchg
out
sbb
dec
sub
cmpsl
jl
dec
loope
gs
les
ret
and
dec
sarb
inc
out
xchg
mov
cli
mov
test
jmp
or
lret
pop
push
jge
hlt
hlt
daa
mov
addr16
out
fwait
dec
ret
jecxz
cmp
xchg
adc
sbb
insl
jmp
xchg
loope
inc
push
aaa
aas
movsl
out
and
pop
xorb
pop
sub
outsl
and
lret
dec
fcmovne
mov
sbb
stos
pusha
repnz
sti
mov
mov
test
sub
into
xor
push
inc
push
roll
xor
dec
add
sahf
sub
xor
sar
mov
xchg
rclb
xor
push
test
or
nop
xlat
notl
sbb
das
dec
mov
call
fsts
notl
sub
push
je
rolb
imul
incl
leave
loop
or
shlb
cmpsl
pusha
jp
outsl
ss
or
repnz
cltd
jns,pn
fmull
push
dec
ret
dec
cmp
mov
loop
ljmp
lahf
das
mov
sbb
es
mov
test
dec
dec
jmp
push
imul
ret
xor
mov
jmp
mov
or
inc
mov
or
mov
insb
movsl
or
cmp
rorl
push
jno
fstpt
push
test
pop
and
cwtl
mov
lods
rcll
push
out
fidivs
andb
stos
pop
xor
xor
mov
ja
dec
sbbb
mov
dec
jne
sub
aam
xchg
inc
rorb
shll
jo
cmp
add
or
jae
ret
movsl
int3
lods
popa
pop
jl
rclb
cltd
pop
cltd
in
sbb
jge
pop
lcall
dec
xchg
cs
mov
and
mov
cmpb
out
xor
sbb
lret
outsb
jg
push
fbld
js
sub
cli
push
mov
das
clc
sbb
out
shrb
mulb
jno
rcll
push
push
sbb
loopne
push
icebp
cwtl
jge
in
in
mov
shrb
push
sub
mov
mov
dec
xchg
and
gs
addb
xor
loope
or
cmp
jns
mov
les
loopne
dec
les
andb
mov
insl
dec
xchg
mov
outsb
inc
jp
lcall
jmp
fld
jae
pop
or
repnz
notb
lret
sub
cmpsl
xchg
sbb
and
gs
jo
adc
inc
adc
je
adc
filds
ja
ficompl
sbb
add
shll
inc
filds
dec
outsb
jne,pt
push
mov
mov
pop
daa
fsubrs
fcoml
popf
push
pop
hlt
sbb
lret
sbb
out
loopne
push
mov
cmpsb
mov
sbb
mov
push
inc
sub
insb
pop
pushf
adc
out
popf
dec
xor
orl
cs
adc
nop
sbb
js
jmp
jmp
and
in
pop
int
jmp
pop
push
cld
cs
mov
lret
int
xor
adc
add
vpackuswb
loope
jnp
add
push
dec
mov
into
insb
xchg
lds
sub
lret
test
jne
pop
fstpt
divb
dec
jge
lahf
ret
mov
and
popa
icebp
sub
hlt
ret
enter
std
fnstsw
shll
push
jmp
inc
mov
scas
int3
push
out
xor
test
sub
cmpsb
shl
jo
and
call
fs
lcall
mov
shl
rcll
and
mov
xchg
xchg
pushf
shrd
pop
pop
aas
add
jmp
in
jge
hlt
push
int3
int3
cmp
sub
cmpsb
mov
addr16
cmpsb
mov
push
pop
sbb
xchg
inc
in
icebp
pop
sub
sbb
pusha
clc
xchg
sub
or
lahf
lods
jg
dec
fwait
and
jae
sub
sbb
adc
lret
out
rcl
sarb
pop
ret
je
daa
push
in
pop
fsubr
inc
push
push
out
lcall
int3
dec
fldt
lret
out
add
mov
adc
movsl
addr16
cmp
push
pop
push
sbb
pop
int3
fadds
and
xchg
and
imul
mov
imul
xchg
repnz
scas
test
dec
mov
shr
jmp
bswap
adc
cmp
push
xor
scas
arpl
add
cltd
adc
int3
pop
fs
sti
pop
dec
mov
int
cmpsb
sbb
stos
adc
stc
push
pop
jmp
adc
rcrl
scas
push
orb
or
mov
js
gs
mov
mov
sub
call
dec
inc
mov
add
rcrb
stos
imul
inc
clc
inc
jle
ret
cmp
into
xchg
add
fadds
and
out
or
mov
push
aaa
xchg
inc
fisttpll
outsl
add
push
xor
cli
pop
cli
aaa
xchg
stos
out
xchg
xchg
aam
adc
push
outsl
or
sub
and
es
std
and
inc
cld
cmp
cmp
sub
loop
or
pop
mov
idivb
imul
xchg
or
xchg
cmp
ss
jmp
mov
xor
aas
fsubrp
outsb
pusha
jns
mov
out
mov
pop
es
mov
cmp
inc
sbb
push
inc
rcl
popf
jmp
bound
dec
mov
and
cwtl
mulb
push
mov
xchg
mov
frstor
adc
leave
scas
movsb
and
add
or
dec
xchg
mov
jle
test
das
inc
sbb
fsubp
fisubl
call
js
sub
aad
hlt
add
cmp
aam
fists
or
add
mov
push
pusha
xor
and
dec
lea
repnz
clts
aas
mov
push
jge
jp
in
addl
lcall
mov
in
cmp
lcall
incl
cltd
mov
mov
xchg
test
int3
adcb
dec
in
mov
pop
arpl
arpl
sbb
mov
mov
int
push
movsl
xchg
inc
or
and
xchg
or
sbb
push
mov
jecxz
mov
xchg
xorl
outsl
push
mov
popf
inc
ret
lcall
mov
aaa
jl
cli
inc
sub
mov
inc
lcall
jp
sub
jle
imul
sub
or
insb
mov
cmp
or
clc
insb
pop
daa
mov
cltd
inc
mov
cmpl
ja
fiaddl
inc
xchg
je
mov
sub
push
out
outsb
adcl
cmp
adc
pop
lret
fdivr
mov
mov
lret
fwait
and
fisubl
jg
adc
mov
add
inc
orl
cmp
int3
dec
sahf
test
in
insb
enter
shrb
add
inc
push
fs
pop
cltd
or
shll
pusha
leave
popa
jecxz
fimuls
pop
cmp
add
cmpsl
fiadds
fwait
jmp
xchg
mov
clc
leave
push
pop
popa
sub
sbb
leave
adc
inc
icebp
push
dec
pop
lds
movsb
mov
cwtl
xchg
insb
jg
rcrl
pusha
pop
lcall
hlt
dec
or
xor
and
jae
dec
ja
in
popa
adc
sbb
jae
or
jnp
js
inc
adcl
repz
sar
out
fwait
sub
sbb
and
sub
sub
add
push
shrl
popf
inc
mov
inc
movsb
stc
outsb
sar
mov
inc
pop
imul
sub
stos
jns
into
cmpsl
cmpsl
outsb
push
js
mov
fwait
iret
ljmp
jmp
pusha
gs
mov
or
loop
test
das
mov
cmp
add
inc
call
sahf
xlat
xor
call
rcrl
jg
les
lret
mov
mov
sub
jecxz
rcrb
loope
fmull
lea
push
fucom
jno
sub
es
sub
ja
scas
adc
jae
mov
test
push
jmp
and
loop
add
orb
push
inc
sbb
fcmovb
fldl
ficoml
jb
test
call
push
or
fistps
push
js
inc
cltd
push
cmp
test
mov
sub
imul
ds
xor
add
imul
push
inc
neg
loopne
cwtl
test
jge
fucomi
jecxz
or
or
mov
mov
test
iret
mov
jge
and
jno
add
push
jne
shrb
mov
mov
jns
pop
das
sahf
pop
enter
xchg
pop
push
rcll
push
pop
mov
push
jecxz
inc
gs
xchg
sub
out
xchg
inc
xor
mov
mov
stc
dec
lods
adcb
mov
fmuls
xor
jecxz
adcl
test
dec
std
imul
fimull
jmp
xchg
push
mov
add
jno
sub
pop
aam
pop
scas
jl
xchg
xor
sahf
lock
xchg
popf
sub
adc
mov
fisttpl
cld
push
xor
lcall
loope
sbb
cwtl
cmp
add
fiaddl
daa
stc
loop
sub
xorl
sbb
xor
or
mov
fists
cmp
outsb
inc
mov
jne
fstpl
sbb
push
fadd
xchg
test
pop
sarl
cwtl
repz
jmp
inc
aad
pusha
or
outsb
mov
mov
imul
jecxz
in
push
outsl
xchg
aad
fsts
fisubl
mov
push
sub
sub
xchg
mov
sbbb
inc
lea
xor
xchg
adc
and
mov
sub
sbb
mov
ret
dec
mov
push
fstl
mov
adc
ficoms
xchg
lret
xchg
jns
hlt
sub
sub
cmp
leave
sub
sbb
inc
nop
mov
lods
jnp
sub
or
repz
sbb
fcmovnbe
xlat
sbb
and
mov
and
xchg
xchg
cmpsl
stos
repz
insb
out
lods
inc
ffree
in
mov
push
enter
cmp
dec
mov
dec
lcall
jne
push
jmp
inc
rolb
stc
scas
pop
sbb
pop
gs
outsb
insb
xor
rep
inc
mov
or
cmc
xor
fisubs
mov
mov
mov
test
mov
push
pshufw
lea
sarb
add
mov
jl
pop
add
loope
cmc
ret
xchg
cltd
hlt
addb
mov
repz
push
fsub
mov
mov
adc
rcrb
add
int
lahf
mov
push
ja
add
out
sub
sbbl
lds
mov
mov
enter
shl
mov
nop
push
shl
sub
and
xchg
mov
push
popa
inc
pop
inc
inc
push
fbld
adc
push
mov
maxps
shlb
dec
push
lock
imul
lcall
mov
incb
lcall
sete
and
xor
mov
aas
dec
out
jnp
faddp
iret
jbe
or
jg
and
es
sbb
shll
pushl
jmp
jae
pop
adc
and
jge
movsl
std
push
push
pop
push
daa
enter
inc
mov
cwtl
mov
test
mov
mov
mov
jbe
or
sub
xchg
or
lds
sub
cmc
mov
or
mov
mov
decb
inc
clc
ror
mov
iret
sub
sbb
cltd
jns
mov
cmpsb
shrb
adc
inc
sti
and
mov
sbb
jae
inc
cmp
cmp
push
movsb
sub
or
mov
jecxz
push
cmpl
sahf
push
sbb
cmc
add
popl
fildl
adc
test
mov
stc
and
scas
xchg
cmp
ss
xor
sub
ja
in
pop
popa
push
jbe
mov
fcomps
xchg
cld
icebp
mov
ljmp
lods
std
cli
jb
adc
mov
leave
aaa
mov
dec
add
js
lahf
mov
lret
lahf
ds
ror
faddl
mov
dec
jns
sub
enter
testb
andl
outsb
das
cmp
sub
mov
pop
ror
mov
mov
ds
insl
aam
subl
xchg
std
clc
and
lock
mov
sub
in
inc
jl
push
sbb
cli
fists
call
insb
dec
inc
orb
pop
mov
xor
stos
cmp
in
shlb
dec
cmpsb
add
loope
xor
ret
loop
lods
mov
jbe
and
inc
fisttpl
xchg
push
pop
push
cmpsl
push
mov
cwtl
dec
imul
enter
iret
jg
add
in
inc
mov
adc
lock
push
pop
add
mov
hlt
push
bound
push
add
ret
xlat
jae
cmp
mov
fwait
push
pushf
clc
and
pop
mov
ret
hlt
jne
mov
mov
mov
clc
nop
in
shrb
loope
mov
pop
push
rcll
pop
mov
mov
aam
mov
pushf
sbb
cli
aaa
sub
inc
sbb
cmc
mov
cmp
iret
movsl
adc
inc
dec
shrb
cltd
out
and
loope
sti
cmpb
adc
add
out
mulb
push
pop
movsb
nop
in
scas
mov
push
movsb
je
sti
imul
push
push
imul
sub
loope
lods
dec
fsubl
sbb
or
into
int
arpl
mov
push
add
cs
imul
or
mov
addr16
int3
mov
test
sub
xlat
orl
mov
movsb
loop
ds
xchg
add
stc
or
mov
jmp
ja
fisubrl
jns
gs
or
xchg
pop
dec
lahf
aad
sarb
lret
ja
mov
mov
movsl
cmp
inc
cs
cmpsl
xor
xchg
movsb
adc
mov
jnp
imul
ljmp
cltd
rol
in
mov
dec
push
mov
insb
xchg
movsl
iret
mov
cmp
mov
ljmp
mov
shlb
imul
aam
dec
popa
scas
test
or
dec
sub
arpl
push
inc
jge
test
filds
orb
inc
ret
mov
adc
mov
sub
mov
mov
xchg
pop
jmp
aas
sub
pop
push
push
or
add
outsb
je
jmp
jb
and
mov
in
push
add
ja
mov
jecxz
cltd
or
jno
in
mov
in
out
mov
adc
call
aaa
jo
and
jno
cmp
dec
mov
sub
or
mov
je
mov
adc
leave
xchg
out
arpl
add
cli
push
xor
je
xchg
shr
sti
pusha
insb
mov
add
mov
push
adc
test
out
and
xor
and
lods
pop
mov
mov
and
mov
xchg
sbb
xchg
mov
mov
xchg
aas
and
pop
subb
mov
xchg
lea
mov
pop
cltd
clc
cs
jg
fldl
pop
and
sbb
bound
push
add
cmp
cmp
lods
mov
mov
mov
inc
repnz
jae
xor
aas
fmull
scas
sub
ja
dec
js
ljmp
and
xor
scas
cs
push
pusha
sub
push
mul
sti
stos
xchg
enter
out
adc
aad
lods
lcall
and
out
mov
xchg
sbb
xchg
fisubrs
cmpsb
call
push
mov
sub
mov
cltd
inc
bound
mov
enter
sbb
daa
pop
jecxz
enter
adc
outsb
js
xorb
cmp
pop
inc
dec
mov
sbb
inc
and
sbb
xor
arpl
repnz
movsl
lods
pusha
or
xchg
jb
iret
or
or
test
les
ret
xchg
add
jbe
insl
lahf
push
sbb
pop
and
mov
lcall
add
scas
out
sbb
push
sar
xor
loop
aaa
movsl
loopne
int3
cmc
xchg
jno
jb
cmp
inc
inc
add
shrl
or
cmp
ficompl
pop
aaa
popl
and
mov
enter
repnz
rcrl
nop
jmp
insb
jb
movsl
in
inc
sub
mov
popf
xor
ret
mov
popa
lods
push
xchg
je
lock
shr
cmp
push
mov
fwait
jbe
dec
outsb
daa
sub
mov
xor
imul
and
popa
std
pop
cmpsl
push
enter
jb
aam
lods
jae
fisttpl
pop
popf
aaa
test
jne
insb
push
out
inc
int3
adc
xchg
cld
sub
mov
jmp
cld
sub
daa
sbb
jmp
push
pop
inc
mov
sbb
add
insb
int
int
mov
shlb
cli
fisttpll
adc
pop
shrb
iret
cmpsl
insl
fldz
imul
jbe
lods
and
les
or
aaa
cmp
in
test
pop
cmpsl
sbb
xorb
fcoml
in
pusha
fsts
into
adc
lds
int3
adc
add
cmc
inc
frstor
loopne
loopne
sub
mov
fwait
stc
mov
mov
xor
sub
xor
push
lods
dec
js
sti
mov
push
shll
int
movsb
jecxz
nop
add
roll
add
push
mov
add
adc
mov
stos
test
cwtl
dec
daa
push
imul
movsb
js
arpl
ja
lock
fadds
movsb
cwtl
xor
xor
ds
xor
ljmp
daa
lea
lret
and
mov
negl
mov
fs
lock
cld
ds
add
imul
mov
pop
sub
adc
jnp
loope
inc
fcomi
mov
dec
mov
pop
decl
lds
mov
inc
mov
mov
inc
pop
cmp
dec
pop
or
cmp
xchg
jecxz
mov
inc
out
inc
xor
jne
add
cld
sbb
into
ret
into
mov
ss
fstpt
and
cwtl
popw
ss
cmp
and
loopne
dec
xchg
movsl
add
lods
xlat
imul
outsb
push
pop
xchg
mov
sti
arpl
aam
add
cltd
adc
jno
mov
out
stos
sbb
aam
push
out
mov
test
mov
jmp
pop
cli
mov
sbb
dec
js
push
lods
add
push
mov
ret
sbb
push
lock
mov
jbe
test
or
xor
loopne
add
lcall
add
cmpsl
inc
inc
and
imul
cwtl
and
mov
mov
push
lods
test
lods
sub
or
push
lret
ja
cmp
xor
stc
pop
pop
pop
lds
std
cwtl
inc
cmpsl
data16
movsb
push
pop
xor
imul
dec
ret
mov
out
jne
loopne
pop
sti
ljmp
inc
shll
add
cmpsl
sub
sbb
test
add
mov
icebp
rcrl
lea
imul
add
pushf
sbb
loopne
add
adc
frstor
adc
dec
lock
push
je
jnp
sub
add
mov
push
fisubrs
or
ret
insl
or
lods
pop
in
push
push
sti
mov
std
sbb
les
sbb
or
out
icebp
and
sbb
jge
test
jnp
jp
divb
mov
pop
out
adcl
jno
scas
xor
imul
test
out
mov
push
jmp
sbb
gs
call
sbb
sub
fisttpll
lahf
mov
add
cltd
pusha
jno
xor
sub
push
lods
call
push
dec
ds
clc
add
leave
xor
xchg
in
adc
push
stos
aam
push
repz
lret
xchg
fidivrs
dec
rolb
xchg
je
or
jg
in
aaa
ja
sbb
outsb
repz
xor
es
xor
jmp
xchg
or
mov
loop
in
sahf
in
mov
stos
lret
sti
arpl
add
mov
fistl
mov
sbb
dec
jg
pushf
add
dec
fisubrs
xor
dec
ds
xor
inc
inc
xchg
xchg
pop
es
sbb
cmp
nop
cwtl
or
addr16
mov
lcall
or
inc
dec
mov
aas
jg
adc
enter
push
movsb
jle
pop
ret
movsb
xchg
xor
jmp
push
xor
pop
sbb
pop
ds
dec
shr
or
std
jbe
inc
fcmovnu
inc
xor
ja
xchg
jle
xchg
cld
cwtl
sub
mov
xor
imull
jb,pn
repnz
popa
mov
inc
lea
xor
fcmovbe
pop
stos
rcrl
je
ret
inc
adc
xchg
data16
dec
push
sti
pop
call
xchg
jb
xchg
in
sub
fidivrl
inc
pop
push
cwtl
or
xchg
in
dec
jp
sbb
inc
and
ret
cmp
pop
test
mov
pop
sub
mov
insb
inc
test
fs
mov
fstps
jb
pop
ret
xor
pop
in
loopne
and
pop
adc
test
or
mov
xor
jp
fmul
rcrl
push
sbb
pusha
mov
mov
mov
insb
ja
xchg
push
mov
aam
xchg
movsb
xor
mov
jae
sub
xlat
cwtl
dec
mov
mov
test
cmp
xacquire
push
das
mov
pusha
or
sub
jne
push
lock
scas
fadds
scas
mov
imul
scas
xchg
pop
loope
mov
cmp
test
gs
pop
pop
outsb
subb
push
movsl
push
pop
rolb
loopne
push
imul
sbb
cmp
or
addr16
push
repz
mov
sti
jns
dec
push
xchg
pop
add
in
test
add
sub
out
mov
add
or
js
cltd
inc
inc
cmpsl
leave
addb
adc
lahf
dec
cltd
cmpsb
cli
jge
les
repnz
pop
mov
push
loop
mov
int3
sarl
jnp
int3
mov
or
fsubl
clc
out
mov
pop
push
data16
dec
into
jecxz
mov
dec
mov
mov
clc
pop
daa
xor
mov
sub
push
fisubrl
or
dec
test
lcall
or
lods
fistps
test
dec
push
inc
add
es
or
cmpl
lds
fld
hlt
mov
out
mov
cmp
jns
pop
dec
sbb
subl
pop
jg
and
stos
cmpsl
cmp
fimull
sub
jae
push
fmull
pop
pop
ss
add
nop
push
jmp
negl
mov
xchg
nop
popa
data16
push
out
xor
mov
pop
add
mov
fists
sbb
cmc
cli
lret
inc
cmp
xchg
xlat
andl
aad
icebp
mov
test
pop
pop
dec
mov
jge
loopne
aas
fnstcw
pop
pop
xchg
gs
xchg
filds
test
sub
mov
add
flds
sbb
stos
adc
aam
ret
movsb
mov
xor
cmp
pop
out
lcall
xor
lret
cli
push
cmp
inc
sahf
stos
pop
cmpb
imul
cltd
in
push
dec
mov
jg
cmp
sahf
popf
or
push
nop
and
cmp
adc
add
int3
cmp
adc
and
inc
xor
iret
test
cwtl
dec
pop
cld
pushf
mov
cmp
fildl
jae
mov
cmp
pop
dec
hlt
daa
adcl
imul
dec
ret
movsl
xlat
ja
xor
fwait
in
pushf
push
arpl
sub
or
mov
lods
cs
pop
rcll
push
mov
loopne
rol
add
cmp
pop
insl
jae
mov
notb
xchg
pop
movzwl
sub
je
or
adc
insb
outsb
jle
mov
dec
stos
xor
xor
fwait
add
pop
mov
cwtl
sti
jb
dec
pusha
sti
lret
cwtl
in
fwait
xchg
out
iret
cltd
pop
sbb
pop
leave
add
adc
xlat
cmc
xchg
cld
mov
int
pushf
add
add
iret
xchg
or
dec
xchg
pop
aad
cmc
movl
or
scas
dec
repnz
ficompl
loop
mov
pop
pop
mov
bound
out
add
pop
adc
dec
pop
fucom
inc
xchg
pop
out
jg
jo
hlt
adc
out
std
add
jp
sub
test
push
fisttpl
pushf
aaa
in
out
xchg
rcr
or
push
pop
add
and
in
rcrl
sub
js
shlb
mov
push
testl
xchg
push
leave
cmp
pop
mov
mov
jge
addr16
push
cld
xor
data16
test
push
or
rorl
sbb
fsubrs
sti
imul
inc
xchg
int
push
dec
out
lret
lcall
sub
xor
mov
sbb
sbb
shl
push
push
mov
pusha
popf
xchg
cmp
dec
or
xchg
xor
mov
rsm
add
add
dec
mov
mov
std
je
ds
pop
movsl
push
pop
jecxz
and
scas
push
mov
daa
movsb
jmp
loope
stc
xor
pop
in
ljmp
add
sarb
dec
push
adc
push
inc
pop
push
in
movsl
push
icebp
jl
addb
push
push
lock
inc
mov
pushf
dec
iret
sub
arpl
xor
cmpsb
xor
in
mov
dec
pop
adc
dec
cmpsb
leave
int3
dec
negl
mov
cmc
sbb
jnp
push
cmpxchg8b
mov
jno
sub
jp
adc
and
out
xor
adc
cmp
jmp
lcall
leave
lock
das
dec
sbb
sub
into
inc
cmpsb
aad
stc
fistps
int
mov
add
sbb
int3
psraw
bound
lahf
sub
mov
mov
cld
inc
xor
ds
fsubl
shl
sbb
int3
lcall
or
xchg
push
test
rclb
loope
sahf
lcall
mov
ja
mov
adc
push
sbbl
out
fldenv
push
inc
jecxz
pop
enter
adc
sbb
js
int
jp
dec
xor
popf
jle
pop
xchg
lahf
cmp
or
loopne
sub
adc
lret
jle
movsb
cmpsb
jg
cmp
mulb
jmp
lcall
jnp
xchg
jmp
mov
frstor
cmp
int3
add
inc
push
leave
jbe
cs
sar
setbe
mov
dec
pop
movsl
or
dec
icebp
psrad
add
je
pusha
xor
inc
xor
cmp
movsl
cmpsl
sbb
inc
dec
mov
pop
insb
daa
aaa
std
mov
fs
clc
test
jl
insl
lods
mov
int
pop
add
in
sar
pop
pop
jge
xchg
inc
mov
xchg
mov
and
mov
insl
xor
stos
sub
fidivrs
scas
data16
leave
add
sub
dec
ss
fildll
stos
int3
adc
jb
and
mov
call
stos
or
cmpsl
inc
cmpsb
mov
ret
mov
pop
jl
add
popf
push
and
xchg
jle
inc
push
popf
jle
mov
inc
mov
adc
aaa
lcall
lods
das
sub
test
outsb
xor
xor
idivb
cld
fidivl
dec
lret
push
inc
stos
stos
imul
fisttpll
xor
pop
mov
aas
fwait
jp
stos
hlt
sub
repnz
lea
in
orl
or
mov
and
outsb
mov
mov
lcall
in
jl
pusha
leave
jns
xor
mov
decl
icebp
and
add
pop
cmpl
fdivs
int
aad
subb
neg
push
in
jle
sub
cmp
mov
in
insl
repz
insl
lods
jne
cld
in
ret
inc
push
movsb
popf
ljmp
andb
inc
inc
and
cmp
xchg
imul
iret
sbb
or
inc
dec
loope
frstor
in
clc
lock
jb
insl
ret
push
mov
loop
mov
or
sbb
mov
pusha
fs
push
fistl
int3
dec
in
adc
inc
add
push
jmp
repnz
mov
lods
js
fildll
mov
mov
shrb
sahf
divl
jbe
jb
shrl
enter
dec
mov
inc
sub
idiv
fwait
push
push
adc
scas
sub
es
and
notl
std
and
dec
pop
scas
push
dec
daa
add
push
push
xchg
out
mov
pop
pop
pop
fimull
arpl
mov
shlb
xchg
popf
cltd
mov
sub
or
jp
xchg
or
jae
leave
imul
imul
aad
bound
jbe
jge
mov
jo
xchg
xor
enter
xchg
adc
leavew
faddl
mov
int3
addr16
mov
push
sbb
orb
mov
cmp
insl
sti
pop
jo
or
jl
sbbb
and
pop
jne
loope
ja
adc
push
mov
lock
mov
mov
lret
popa
xor
sbb
jmp
push
cmp
mov
inc
out
fucompp
shll
lods
fwait
mov
cmp
mov
xchg
pop
or
mov
adc
lea
fimull
js
sti
and
pop
sti
jbe
xlat
mov
in
inc
add
pop
scas
imul
sbb
or
ljmp
not
mov
push
cmp
hlt
pop
xor
or
adc
scas
push
mov
sbb
test
xchg
mov
pop
loop
jecxz
and
adc
iret
fsubrl
imull
pop
sahf
je
jb
or
pop
hlt
push
push
mov
enter
push
and
fisttpll
loop
and
aas
mov
out
pop
insb
dec
shrl
or
mov
data16
adc
add
xchg
shll
sub
inc
xor
insl
mov
popa
lcall
orl
adc
xor
scas
cmpsl
rorb
popa
test
xchg
in
mov
push
xor
sti
movsb
sub
sbb
lret
inc
out
jnp
call
into
inc
mov
adc
jno
xchg
or
mov
repnz
int3
ret
jnp
in
add
add
iret
sub
push
jge
loope
mov
sub
sub
jmp
add
in
adc
or
sbb
dec
cmp
sarb
xchg
mov
mov
dec
jmp
rorb
outsl
repz
les
mov
popa
push
inc
int
add
iret
add
orb
push
mov
mov
pop
loopne
push
inc
jno
push
push
test
incl
gs
inc
in
dec
fbld
mov
movl
test
sub
inc
xchg
lock
mov
pop
jne
inc
push
pop
xor
adc
mov
data16
subb
mov
pop
bnd
das
push
sti
outsb
sbb
movb
inc
cmovb
pop
mov
xor
xlat
out
sbb
dec
pop
mov
mov
mov
stc
or
mov
jns
push
insl
dec
mov
xor
movsb
cmp
mov
in
cs
mov
fsubs
cmp
imul
or
xor
lcall
push
xor
inc
jo
lahf
push
into
adc
enter
dec
in
mov
mov
jno
jo
push
cmpsb
jbe
pop
sahf
fidivs
aas
lret
xchg
push
mov
inc
xor
dec
push
mov
popl
mov
or
cmp
sub
cmp
ds
and
or
loopne
out
jno
mov
mov
jne
dec
sarl
push
stos
inc
mov
fmuls
xchg
cmp
subl
inc
cmp
dec
je
sbb
sub
repz
xor
test
xlat
cmpsl
push
lods
jmp
repnz
mov
inc
shll
or
and
int
ret
and
mov
iret
lods
jns
xor
lds
fsts
ret
fmull
mov
loope
int
pop
stos
push
and
iret
sbb
orl
es
leave
xchg
insb
mov
mov
mov
mov
and
test
xchg
and
leave
pop
subl
mov
mov
das
scas
test
or
subl
sbb
push
add
pop
xor
xchg
ret
pop
orb
fscale
sahf
cmp
cmp
xor
adc
sub
ret
in
push
inc
lcall
cmp
xor
test
iret
int
test
lds
jb
cmc
sar
jecxz
mov
mov
mov
mov
mov
les
lret
shlb
arpl
dec
fwait
cmp
and
roll
inc
sbb
call
push
arpl
cmp
sarl
xor
jl
push
mov
xchg
mov
scas
scas
int3
and
jne
push
xor
insb
xchg
outsb
mov
je
mov
xchg
jg
imul
adc
fistpl
fs
sub
jp
push
jecxz
sbb
imul
sti
and
and
push
lret
lcall
fisttpll
movsl
xchg
xchg
lahf
lods
mov
lret
pop
loope
stos
adc
push
lods
xorb
sub
fwait
xor
sysenter
adc
jecxz
repz
xchg
cmpsl
and
sub
or
sub
xor
insl
push
test
sub
mov
arpl
xchg
pop
icebp
scas
pop
sub
jecxz
test
outsb
xchg
mov
xchg
xor
js
stos
pop
push
ljmp
and
imul
pushf
jns
lahf
movsb
mov
lret
repnz
jo
mov
pop
movsl
leave
inc
sub
adc
jnp
pop
cmp
lock
push
push
sbb
xlat
lcall
stc
lahf
jne
mov
xchg
sub
mov
subl
imulb
scas
inc
in
cmp
add
inc
lret
sbb
shlb
arpl
or
mov
inc
loop
dec
mov
nop
ss
sbb
stc
push
repz
mov
shlb
xchg
push
dec
dec
loop
mov
xchg
inc
scas
lock
fdivrl
shlb
dec
xor
dec
xor
xchg
add
pop
xor
insb
add
es
mov
js
icebp
cmc
mov
icebp
fisubs
sub
jno
lahf
inc
decl
mov
mov
push
in
xchg
xor
push
into
adc
add
jmp
xor
adcl
adc
je
sbb
cmp
cmp
push
gs
repz
mov
push
mov
lret
imul
call
add
imul
inc
xor
fdivrs
ljmp
cmp
insl
rorb
mov
loopne
push
mov
mov
pop
sahf
pop
bound
loop
por
jmp
test
adc
mov
jno
adc
popa
fwait
push
dec
addl
xchg
sub
arpl
pop
and
insb
hlt
scas
inc
add
rcll
adcl
scas
imul
dec
in
inc
icebp
inc
dec
cmp
xorl
rclb
adc
xchg
mov
xor
sbb
jbe
or
sti
lret
aam
out
pop
imul
jo
push
aam
inc
dec
add
repz
cld
mov
mov
out
test
aaa
jle
xor
cmpsl
or
push
outsl
outsl
pop
pop
stos
outsb
or
testl
lods
fstpt
xlat
cli
stc
pushf
nop
jp
movsl
mov
xchg
mov
inc
mov
mov
mov
les
pushf
loop
sbb
pop
mov
pusha
or
sbb
jge
inc
lock
ljmp
aam
or
and
xor
adc
pop
mov
into
inc
push
into
dec
mov
mov
adc
add
dec
xor
fucomi
inc
iret
insl
lds
lcall
imul
aad
or
addl
je
aas
repnz
int3
sbb
inc
fsubl
dec
inc
fnstcw
dec
sub
xchg
dec
lods
mov
lds
dec
sub
pop
cli
nop
push
xor
sub
mov
or
scas
arpl
sub
mov
ljmp
fidivl
mov
out
int
push
xor
xor
in
mov
or
addr16
adc
pop
je
mov
sbb
dec
sahf
xorb
sub
fs
stc
and
jae
into
cld
out
sub
lcall
scas
adc
data16
mov
out
pop
and
ds
out
xchg
popf
aam
mov
pop
lcall
and
bound
mov
mov
loopne
cmp
xchg
js
inc
out
cmp
fiadds
sub
mov
cmp
adc
xor
adc
idivb
testl
addr16
test
negb
jl,pn
mov
mov
sub
or
ret
sbb
iret
dec
xchg
lea
cwtl
lcall
dec
mov
bound
in
jo
mov
lock
mull
xchg
and
shl
cmp
fwait
adc
dec
mov
sbb
or
or
divb
outsb
xchg
nop
sub
sub
push
push
mov
xchg
push
dec
or
out
insl
adcl
popf
pop
xor
into
add
inc
mov
outsb
into
xor
xchg
cmp
adc
mov
movsl
mov
jge
addr16
jnp
stos
or
addb
jle
addr16
cmp
inc
data16
lock
adc
arpl
and
cltd
hlt
mov
sbb
add
enter
add
sub
icebp
mov
call
call
cld
inc
jmp
cld
dec
inc
inc
addr16
sbb
pop
lods
mov
sbb
xchg
cmpsb
icebp
or
sbb
xchg
pushf
stc
loop
orl
xchg
dec
int
lea
mov
adc
mov
dec
inc
push
dec
add
loope
sbb
push
aam
jle
push
scas
stos
add
lcall
pop
sub
js
mov
adc
xor
mov
mov
adc
lahf
add
lcall
or
push
ja
adc
and
push
loopne
mov
sbb
inc
sub
jmp
out
xchg
push
add
adc
rolb
faddl
lahf
int
xchg
pop
shrb
mov
xchg
sti
sub
test
jmp
pop
je
add
dec
imul
push
jmp
shr
jae
sub
daa
es
or
fdivp
je
mov
out
cmc
fists
in
push
adc
push
and
rolb
fiaddl
dec
fwait
insb
or
mov
jne,pt
inc
mov
cmp
aaa
push
sbb
mov
out
pop
mov
sbb
popf
dec
das
cmp
mov
mov
imul
jmp
outsb
add
orb
push
ja
adc
jg
pushf
cmp
stos
scas
pushf
jbe
sbb
add
mov
fldln2
cs
sti
inc
cmpsb
dec
cli
and
inc
sbb
les
mov
rcrb
sbb
mov
mov
mov
dec
mov
jecxz
pop
lods
in
data16
xchg
ss
in
or
popa
ds
addl
cs
pop
lahf
xchg
in
lods
test
lock
push
stos
popf
nop
sub
repnz
mov
shll
push
pop
sub
pop
in
push
rorb
test
les
in
cmc
jbe
lret
test
rorl
popa
sub
push
in
jecxz
pop
pop
in
int3
icebp
jl
adc
mov
fisubl
arpl
sbb
iret
jae
sbb
mov
push
dec
jmp
jo
sti
scas
subb
ljmp
fdivrp
fidivs
sbbb
cmc
lcall
mov
xor
iret
loop
mov
test
dec
jg
fnstenv
push
mov
aaa
je
and
adc
movsb
icebp
lea
mov
xchg
push
jb
xchg
xchg
adc
and
es
shlb
pusha
xchg
mov
mov
pop
mov
add
mov
sbb
or
lcall
loop
jo
inc
popa
jns
mov
mov
arpl
fisttpl
movsl
cmp
cwtl
push
adc
arpl
mov
inc
shl
jb
mov
mov
ss
sti
sbb
mov
jbe
xchg
rclb
iret
aad
pop
stos
je
shll
jmp
push
pop
icebp
jns
sbb
iret
lret
xor
or
push
lret
out
and
adc
jge
inc
daa
xchg
cmc
addb
int3
daa
xlat
andb
pushf
and
xor
cltd
add
je
mov
sub
sbb
jnp
leave
pop
adc
inc
aaa
loopne
pusha
jp
inc
pop
pushf
fsub
mov
jae
fdivrs
test
pop
adc
loope
or
dec
insl
inc
xor
xor
iret
cmp
subb
mov
mov
or
stc
add
dec
cmc
sarb
fwait
adc
hlt
jae
out
fbstp
repz
xor
dec
rolb
iret
inc
pop
lock
push
mov
repz
add
push
popa
ss
bound
push
push
push
lret
js
cmpsb
xor
push
push
loope
or
fisubrl
adc
or
xor
xor
scas
sbb
or
mov
je
xchg
mov
push
scas
jbe
mov
pushf
sub
fdivl
dec
pop
aas
cld
add
loop
mov
data16
sbb
lret
dec
adc
fnstsw
push
test
ljmp
jg
aad
repz
xchg
in
imul
sub
xchg
test
mov
inc
sbb
sub
pop
cmp
pop
rcr
sarl
adc
xchg
fmul
pop
js
mov
cmc
jmp
or
out
xor
enter
cltd
sti
jno
mov
ljmp
imul
jmp
cmp
and
stos
and
sub
mov
dec
sbb
rcll
jp
jae
mov
test
mov
in
decl
sub
sub
sbb
lret
pop
lods
lds
rcrb
xchg
push
add
cs
push
push
push
imul
loopne
je
loop
jb
add
movsl
mov
cli
cmp
sbb
fs
scas
int
push
push
outsl
insb
xchg
cmp
cmp
mov
pop
xchg
pop
adc
lret
imull
arpl
dec
adc
inc
fucom
add
nop
mov
aam
and
cmp
xor
clc
scas
aam
stos
call
jmp
cmp
jno
pop
test
jecxz
inc
pop
mov
mov
int3
test
cmp
xor
adc
int3
imul
repnz
cs
push
popa
stos
push
inc
xor
xchg
mov
push
ja
sbb
push
sarl
dec
pusha
xchg
cltd
js
sbb
pop
xchg
sti
shll
int
cmp
push
cmpsb
jp
sub
fidivl
sub
pop
out
jns
or
decb
jbe
es
pop
push
iret
add
sub
fs
add
mov
cwtl
outsl
sahf
cli
out
xchg
add
fstl
inc
jg
mov
pop
dec
pop
cmpl
repz
pop
push
rep
or
jecxz
push
dec
pushf
mov
fwait
scas
xchg
or
and
sahf
imul
popl
sbb
jb
xchg
pop
and
imul
dec
insl
loop
outsb
pushf
add
int3
sub
push
inc
mov
sub
leave
mov
ds
mov
out
insl
ja
xor
pop
pop
mov
test
inc
out
outsb
movsb
in
inc
inc
cmp
incl
lahf
sub
push
jg
push
xor
lock
jl
inc
les
gs
push
fistl
or
xor
lds
mov
jns
or
cmp
aas
pop
cmpsl
cltd
push
dec
and
int3
test
push
call
jmp
mov
add
and
leave
cmpsl
cs
rcrb
xchg
mov
push
adc
insl
insb
mov
cwtl
xchg
jmp
test
add
jb
loopne,pn
jae
sarl
mov
dec
jle
repnz
fmull
loopne
mov
cli
adc
pushf
xor
in
loop
add
fs
mov
sahf
or
push
mov
xchg
loop
and
lcall
inc
mov
mov
push
cmp
hlt
push
adc
mov
lds
es
out
lods
inc
js
mov
dec
inc
xor
movsl
cmp
das
in
sbb
popa
scas
push
jno
pop
test
dec
sbb
aaa
scas
inc
lea
das
mov
into
in
neg
in
movsl
push
scas
dec
sub
jle
dec
sbb
mov
sub
pop
adc
dec
and
daa
pop
mov
mov
roll
ficomps
imul
dec
and
sub
push
imul
sbbl
je
leave
mov
lahf
std
dec
mov
add
cmp
push
jnp
add
mov
aas
pop
or
dec
mov
and
push
sub
adc
mov
push
xor
adc
enter
xor
inc
mov
rcl
pop
inc
xor
rcr
repz
jns
mov
les
xor
sbb
jecxz
or
and
lahf
xlat
lea
mov
outsb
icebp
xchg
inc
fisubrl
sarl
sbb
sub
fisttpl
loop
pop
adc
add
sbbb
data16
decb
enter
data16
sbb
je
test
add
add
and
fistl
bswap
pushf
xchg
push
ss
leave
push
sahf
outsl
popf
dec
mov
inc
jl
in
aam
ds
sar
xchg
pop
imul
mov
pop
or
insl
cmp
pop
add
enter
test
loopne
outsl
cltd
js
scas
inc
fcmovnu
adc
mov
ret
es
gs
mov
xor
into
xlat
loop
add
dec
mov
ds
fimull
ja
test
cmp
fisubs
out
out
sbb
dec
xor
sub
push
clc
fwait
push
jns
add
pop
mov
fdiv
gs
je
divl
arpl
mov
dec
insb
jp
inc
call
lahf
insl
xchg
xlat
inc
dec
gs
dec
fst
mov
or
out
lret
rclb
xchg
fcoms
popa
cltd
aam
out
mov
cltd
rorb
ds
push
inc
out
sbb
dec
sti
dec
popa
add
mov
cmp
shrl
lock
dec
ss
jae
addr16
pop
or
cld
out
xchg
push
fstpt
sub
int3
mov
jb
rcl
fsubp
dec
mov
push
jmp
aad
mov
js
loopne
fs
mov
sarb
xchg
mov
or
mov
rolb
add
mov
pop
insl
out
int
rorl
sub
shll
ja
rorb
lods
movsl
mov
fisttpll
mov
fcoml
jl
sub
popa
xor
jno
adcl
inc
inc
lds
arpl
dec
mov
or
pusha
aad
roll
mov
push
pop
je
sbb
lds
dec
sbb
mov
icebp
mov
test
jp
and
add
jl
out
out
adc
clc
sub
loope
sbb
pop
repz
mov
pop
pop
xor
mov
mov
pop
pop
les
jmp
cwtl
jle
mov
outsl
call
cmc
aam
loope
pushf
nop
dec
mov
add
nop
sub
imul
mov
sbb
or
rcll
in
pop
fcmovnbe
popa
in
lds
mov
inc
lcall
sbb
mov
jge
test
repz
push
pop
dec
mov
cli
stos
jmp
mov
or
stc
lahf
inc
lds
int3
fld
loop
mov
cmp
test
pop
iret
ret
jnp
push
adc
sub
sub
push
aad
outsb
jmp
stc
out
pop
or
xlat
xor
rolb
jl
mov
insl
jmp
xor
jmp
sbb
ret
cmp
jbe
std
or
xchg
pop
jae
sbb
lcall
mov
and
mov
mov
or
sub
scas
push
pop
inc
fisttpl
pop
scas
push
xor
lock
pusha
cmp
imul
mov
cmp
dec
inc
test
sub
sahf
js
mov
xchg
jb
fcoml
or
mov
aam
dec
cmp
bound
cmp
jns
orb
xchg
les
scas
sbb
stos
push
fcom
repz
cmp
std
inc
and
das
jo
mov
mov
jle
sti
sti
ljmp
ds
imul
pop
cwtl
cmp
jl
aaa
rol
mov
lods
in
and
out
repz
mov
jecxz
mov
js
push
jle
sub
out
roll
mov
jecxz
jle
mov
outsb
cmpsl
cmp
xchg
ljmp
popa
mov
movsl
sub
mov
pop
xlat
xchg
mov
lahf
xchg
pop
leave
pop
mov
repnz
or
addl
xor
lods
fildl
dec
mov
cli
mov
add
cmpsb
dec
mov
repnz
jl
jle
popa
loope
mov
bound
jns
fsqrt
in
xor
cmp
lods
std
add
arpl
nop
jmp
jns
jno
imul
or
hlt
sub
pop
das
mov
jp
lahf
jl
out
shll
dec
xchg
or
daa
mov
icebp
clc
pop
mov
pop
mov
xor
outsl
push
adc
xchg
addr16
fcompl
cli
andb
or
sub
adc
in
mov
insb
repz
addr16
addr16
sarb
and
jl
add
flds
mov
sbb
ret
jb
inc
pop
push
inc
mov
mov
dec
xchg
bound
sbb
push
je
mov
in
les
andb
sub
fdivrs
loop
cmpsb
in
sbb
fs
pop
sbb
push
mov
cmc
sub
cs
outsb
addb
stos
pop
jno
pusha
cltd
jl
push
mov
lods
or
int
inc
dec
cmp
leave
ret
aam
cmc
rcrb
dec
and
xchg
jge
rol
lock
outsb
test
push
jo
mov
js
out
call
ds
cmp
loope
xchg
shl
sub
sbb
xchg
stos
inc
fisubs
sbb
sbb
push
jg
sub
fcmovu
hlt
pop
out
js
or
sub
je
aaa
lods
sbb
stos
or
arpl
cmpsb
xchg
inc
add
pop
divb
repnz
xchg
leave
sar
test
jg
gs
je
cwtl
lock
sbb
jmp
jae
popf
mov
stos
sbb
cmp
add
jmp
out
cmp
pop
xchg
popl
cmp
and
int3
ror
xchg
jmp
mov
pop
lahf
cwtl
xchg
cmp
lods
xlat
or
inc
fs
jns
jb
lret
jo
pop
mov
andb
cmp
sbb
mov
imul
dec
jb
in
nop
add
dec
jecxz
cs
inc
cli
lret
stc
sahf
mov
in
xchg
cs
inc
sbb
jae
pop
nop
sbb
int
push
xor
in
outsl
test
fcomi
fimull
fsubl
cmpsl
pop
mov
xor
mov
add
or
pop
ja
fstl
bound
or
andb
lret
jmp
cmp
pop
in
fs
adc
jb
mov
in
or
mov
hlt
jecxz
stc
lret
push
aaa
into
call
pop
in
xlat
xchg
lret
mov
cmp
mov
stc
mov
mov
mov
enter
ljmp
ljmp
test
lret
sub
jl
rcll
dec
add
add
shlb
xchg
mov
ss
xor
push
jo
dec
sbb
push
insb
sahf
mov
push
ja
or
mov
out
push
stos
xchg
scas
mov
add
jns
or
pop
and
inc
jns
mov
sub
out
push
into
sbb
sbb
addr16
aas
movsl
stc
sti
dec
mov
fistps
movlps
pop
int3
mov
insl
xchg
pop
loope
dec
dec
push
dec
in
mov
push
aaa
outsl
cmp
nop
into
and
imul
jnp
jns
mov
ja
inc
or
cmpsl
sbb
fsubs
lods
scas
fwait
xchg
mov
sub
stos
or
add
jecxz
ss
jp
fistpll
inc
lahf
push
push
adc
xlat
sbb
out
jmp
xor
jg
and
push
jl
sbb
push
test
jne
push
mov
bound
and
rorl
mov
inc
xor
mov
xor
incb
push
xchg
mov
call
or
adc
jl
insl
cmovnp
out
sbb
and
sub
not
int3
and
fwait
or
push
test
ficompl
sbbl
arpl
or
inc
sub
movsl
ret
mov
dec
adc
sub
or
popf
subl
paddsb
mov
mov
dec
adc
pop
daa
out
cmp
popa
pop
cmc
mov
shl
std
push
lea
xchg
inc
ds
dec
push
pop
mov
adc
adc
jp
mov
bnd
mov
mov
and
xor
fiaddl
jge
das
arpl
push
daa
outsb
mov
mov
jge
pop
cmp
add
xchg
mov
mov
loopne
xchg
push
sahf
dec
sti
addr16
mov
xchg
push
pavgb
cmp
stc
movsb
dec
rcll
and
je
pop
mov
mov
mov
arpl
int3
cmp
mov
push
or
lahf
jae
in
dec
inc
xchg
inc
stos
jl
inc
call
adc
testb
jecxz
fnstenv
lahf
lret
fildl
jge
xlat
inc
icebp
dec
lods
orl
sar
jb
jle
cmc
pop
jno
jno
stos
or
ss
sub
scas
dec
dec
jo
out
jp
cli
inc
xchg
mov
fstpt
fstps
shrb
sbb
jo
fisubs
or
loop
xor
push
fdivrl
cltd
mov
push
jge
dec
mov
pop
sbb
test
push
aam
lret
nop
xor
inc
add
ja
mov
jno
push
fisubrs
sbb
xor
arpl
push
aad
push
dec
xchg
daa
in
mov
movsl
xor
lret
out
mov
pushf
push
pop
mov
jnp
fs
cmpsl
outsb
sub
xchg
jns
sub
push
jb
dec
push
int
int
add
xor
dec
adc
or
dec
cltd
xor
mov
sub
mov
sbb
mov
push
pop
leave
out
bound
inc
inc
ret
test
aaa
ret
adc
gs
outsb
mov
fistps
popf
in
stos
enter
cmp
arpl
add
push
jecxz
xchg
ds
push
shll
out
stos
sub
add
adc
addb
cld
add
enter
sub
mov
add
jae
dec
sbb
cmp
subl
inc
or
jae
and
push
subl
fwait
xchg
push
bound
xchg
arpl
sbb
mov
mov
or
insb
push
cmpsb
xor
in
inc
push
in
push
and
shll
cmp
add
test
lea
mov
insl
mov
rorl
pop
ja
lods
and
xchg
mov
std
push
jle
xor
jne
xor
mov
sbb
stos
or
fwait
movq
clc
or
outsl
rorb
lock
les
push
cmp
shl
pop
jae
pop
adc
xchg
xchg
pushf
dec
aas
jg
mov
jecxz
fcomp
add
push
adc
pop
cmpsb
imul
shr
scas
jo
std
xchg
dec
mov
mov
insl
int
pop
test
and
jb
xor
insl
int
xor
pop
mov
jnp
ret
push
cmp
add
pop
sbb
mov
insb
add
and
push
mov
into
fidivl
scas
in
int3
or
in
inc
dec
pushf
jbe
sub
in
fbstp
movsb
dec
pop
mov
enter
hlt
fmulp
mov
out
fstpt
xchg
cwtl
fcom
xor
jb
jns
ret
add
push
clc
and
lds
cmp
dec
out
outsb
add
imul
dec
lret
pop
fisubrl
clc
jl
xchg
dec
nop
mov
andl
ljmp
mov
loop
push
push
sbb
js
out
pop
or
add
mov
inc
push
les
adc
loop
sbb
rolb
movl
dec
cld
icebp
dec
cs
movsb
pushf
inc
outsb
push
jp
scas
cs
inc
mov
cmp
loopne
stos
inc
mov
xchg
adc
sub
xchg
pop
in
notb
in
pop
mov
es
xor
xor
loope
out
inc
in
jecxz
xor
outsl
xchg
decl
call
mov
pusha
push
jo
ds
push
and
jecxz
pop
ljmp
in
cmp
push
aaa
jnp
in
addr16
sbb
mov
pop
and
cld
loope
xor
or
int3
in
clc
iret
icebp
xchg
outsb
jo
jecxz
and
xchg
inc
gs
mov
and
out
insb
mov
fs
cmpsl
dec
jnp
cli
mov
xchg
rclb
and
lea
mov
shll
cmp
stos
rolb
pop
xor
mov
add
inc
stos
inc
mov
rorb
int3
ret
pop
cmpsl
push
mov
mov
test
fs
out
xor
outsl
pop
mov
data16
pop
mov
push
and
sbb
insb
sbb
xchg
icebp
fst
inc
inc
jmp
add
pop
ljmp
pop
or
mov
or
push
pop
add
in
in
int3
lret
or
pop
lea
jge
popa
out
enter
ja
lahf
sarl
adc
mov
or
aam
cmp
cmp
pop
call
mov
imul
dec
adc
add
jl
mov
ror
inc
pop
lea
ljmp
xchg
dec
xchg
mov
mov
int
fdivr
mov
jle
mov
hlt
adc
flds
dec
jmp
test
lahf
push
xchg
and
jbe
push
push
or
pushl
xor
mov
inc
xor
xor
sub
mov
cs
mov
inc
es
xchg
or
lret
sti
fldcw
ret
pop
cmpsl
outsl
xchg
mov
sub
inc
xor
in
cmp
pop
push
inc
in
lods
rcll
mov
icebp
mov
cmc
add
imul
mov
xchg
rorl
xor
mov
out
sar
outsb
ficomps
lds
mov
ja
test
popf
pop
es
dec
inc
scas
mov
sarl
or
or
inc
test
clc
mov
push
mov
xlat
push
and
out
pushf
adc
cmpsl
ret
mov
out
lret
xchg
paddw
pop
gs
pushf
mov
add
aaa
adc
pop
movsl
mov
inc
loopne
les
xchg
into
mov
mov
xchg
repz
sbb
es
lahf
aam
jnp
fcoms
and
jl
mov
push
fsubl
xchg
fcoml
testl
scas
add
mov
sbb
xor
insb
loop
fucom
or
add
popf
add
rolb
icebp
push
insl
enter
sub
test
lds
jo
pop
add
mov
and
fucomp
adc
adcl
ja
jg
enter
sub
cmp
xor
gs
test
inc
les
daa
scas
jno
fldenv
mov
gs
rsm
loopne
jae
and
cmp
inc
mov
in
aad
mov
or
iret
push
leave
mov
inc
scas
adc
aaa
mov
in
hlt
pushf
mov
xor
cmp
sub
stos
push
pop
lods
mov
in
fildl
push
repz
cmp
sub
popa
sbb
ljmp
lcall
pushf
sar
mov
and
mov
mov
ds
xor
icebp
cmpsb
dec
mov
xlat
ljmp
test
fwait
aas
shlb
mov
or
pop
cltd
das
sbb
inc
xlat
push
and
fwait
sub
pusha
lock
les
xor
jg
fwait
ja
stos
js
aaa
pop
add
in
ds
jae
mov
push
or
pop
call
lods
cmpsb
shrl
andb
in
and
pusha
fbstp
cli
cmp
push
jmp
rcrb
push
lret
pop
and
xchg
cmp
cld
mov
out
cmp
imul
push
cmpl
ss
cmc
cmpsl
mov
sbb
or
ret
in
xchg
mov
push
enter
add
adcb
mov
in
mov
lods
out
mov
inc
cmp
xor
jb
lea
test
push
and
cli
cs
mov
cmp
sar
sub
rcrl
je
cwtl
xor
push
imul
addb
pop
hlt
mov
test
pop
notl
imul
pop
mov
pop
cmpb
xor
stos
push
and
xchg
aaa
je
pop
in
jns
mov
xchg
shl
and
movsb
jae
mov
push
and
mul
es
inc
pop
leave
andl
in
sub
pop
dec
push
imul
jne
add
inc
arpl
popa
fsts
dec
dec
adc
sbb
cmp
mov
mov
aaa
xchg
cwtl
xchg
sub
mov
cmp
call
notb
jle
xor
sbb
mov
movsl
sub
pushf
pop
loopne
in
arpl
and
xchg
dec
jmp
xchg
test
pop
push
and
out
push
mov
pusha
cmpl
and
subl
add
pslld
movsl
jnp
mov
pop
pusha
add
repz
movsl
sbbl
mov
cmpb
aas
adc
filds
stos
dec
or
rorb
mov
ljmp
pop
mov
int3
es
negl
mov
add
inc
cli
adc
call
nop
cmp
jae
jnp
pusha
xchg
or
dec
fisubl
fstpl
les
mov
sub
dec
jge
inc
or
dec
lods
arpl
ja
mov
pop
mov
dec
cmp
ret
mov
xchg
cltd
out
jge
sub
mov
xchg
mov
fisttpll
jmp
sub
or
fidivrl
cmp
fwait
adc
out
xchg
push
sub
mov
mov
push
mov
sti
int3
pop
sbbb
lret
negl
mov
push
cld
rorl
mov
sub
xor
inc
movsl
out
outsb
rolb
iret
clc
cmp
int3
out
push
fisubl
mov
pushw
mov
mov
fdivrl
mov
lcall
je
or
aaa
imul
pop
xlat
daa
mov
icebp
lods
pusha
mov
mov
and
dec
push
xchg
leave
jp
xor
lcall
subb
mov
mov
repnz
cmc
mov
popa
vmovapd
fisubl
or
cltd
push
mov
mov
lock
int
movsl
xchg
mov
pop
scas
imul
frstor
mov
mov
ret
mov
fsts
xchg
fiadds
jb
and
xor
clc
in
or
stos
mov
and
test
lret
mov
out
aaa
mov
popa
or
adc
repz
enter
fstpl
inc
popf
xchg
xor
pop
push
mov
sbb
push
fisubl
aas
sub
pop
inc
int3
loopne
sbbl
pop
lock
fld
adc
mov
adc
inc
inc
dec
adc
pop
leave
mov
daa
outsb
mov
xlat
es
mov
jg
mov
add
insl
adc
push
sbb
push
xchg
loopne
mov
bnd
pop
xchg
and
xchg
adc
xchg
cmp
lea
iret
mov
dec
aas
shll
sbb
pusha
inc
mov
sbb
add
lret
je
mov
ds
hlt
sbb
pop
and
sbb
test
lret
cmp
xchg
pop
jnp
dec
xchg
sarl
lahf
ret
jno
dec
cli
xchg
sbb
je
rorb
adc
sbb
call
ret
jl
add
mov
push
lahf
cmc
mov
dec
enter
and
push
or
push
pop
push
bound
cmp
add
dec
cld
outsb
sub
loope
nop
pop
mov
aas
mov
fisubrs
test
sub
arpl
test
inc
out
rorl
repnz
arpl
cli
enter
fsts
test
pmulhw
dec
xchg
ret
fadd
insb
fwait
add
mov
jle,pt
inc
cwtl
push
pop
mov
dec
stos
fsubrl
inc
lret
mov
push
xor
mov
dec
jle
movsb
movsl
sbb
int3
sbb
or
ret
out
xor
push
fnstcw
mov
shll
adc
mov
dec
lods
repz
sahf
mov
lea
in
inc
dec
cmp
btc
enter
jg
dec
ret
mov
xor
enter
xor
add
outsl
imul
cmc
nop
into
out
enter
test
fdivl
aam
movsb
ret
shl
cmp
mov
gs
or
lea
fiadds
pop
data16
in
imul
mov
adcb
push
jbe
bound
loopne
dec
sub
lods
nop
fbld
scas
ds
int
jg
fisttpll
dec
mov
mov
jnp
out
add
pushf
mov
xor
out
dec
jnp
xchg
es
dec
sub
movsl
push
mov
sahf
mov
movsb
and
ja
ret
fstpt
cmp
scas
mov
ficoms
out
movl
outsl
xchg
mov
iret
test
lods
cltd
sarb
adc
or
sbb
pusha
out
mov
jp
xor
fstl
xchg
xchg
add
icebp
fsubl
out
mov
mov
mov
xchg
inc
jmp
xor
inc
cs
or
mov
out
sti
push
mov
out
sub
mov
int
addr16
sbb
pop
xchg
dec
lock
int
jb
fistps
fisttpl
inc
test
inc
rorb
xchg
adc
scas
cmp
xlat
cmp
adc
xchg
sub
and
aas
jo
lock
loope
mov
std
sti
in
mov
cmp
stc
testb
cmpsl
in
call
iret
aaa
lds
dec
xor
outsl
add
testb
dec
add
out
push
inc
imul
movsl
je
or
xchg
lock
pop
outsb
pop
mov
daa
movsb
jl
xchg
ffreep
lcall
aaa
packsswb
out
sbb
sbb
adc
in
imul
mov
mov
dec
test
mov
xchg
adc
dec
jo
repz
inc
fs
insl
ficomps
aas
sbb
xlat
clc
ret
push
lods
xor
dec
adc
and
das
push
mov
sbb
mov
sbb
jae
inc
and
out
mov
sbb
push
movsl
in
mov
insl
cld
add
xchg
test
cmp
mov
push
addr16
inc
lods
fbld
push
adc
fcoml
ljmp
cmpsl
push
test
push
mov
inc
mov
and
push
jge
inc
cmp
and
sub
xor
mov
sub
test
cld
fdivrl
fs
push
stos
cmp
sbb
inc
outsb
lahf
roll
movsl
push
cmp
sub
rcr
add
and
scas
pop
inc
lea
shrl
fisubl
jns
or
mov
std
push
js
lahf
scas
insl
bound
js
loop
fsubrs
or
push
outsl
adc
dec
xchg
fadds
xor
pop
ja
repnz
sub
push
xor
ret
adc
jl
pushf
xchg
add
stc
sub
pop
gs
addl
stc
sbbl
stc
nop
bound
ss
xchg
pop
inc
pop
pusha
in
popf
iret
int
out
stos
and
icebp
rcr
cli
adc
stos
ret
xchg
xor
sub
jnp
and
xor
jmp
inc
cmpsl
inc
mov
lea
inc
loop
cmp
cmp
aas
nop
add
mov
sub
ja
sub
sbb
xchg
sar
mov
pop
dec
lea
icebp
inc
or
and
stos
adc
arpl
pop
mov
push
add
mov
xchg
jo
fbstp
pop
cltd
pushf
push
popf
inc
int
push
adc
mov
pop
mov
test
outsl
test
rcrb
int3
cli
push
fisubs
dec
fdivrl
loop
insl
out
fs
push
inc
jmp
fdivrs
pop
mov
jns
lods
adc
ljmp
push
sbb
ret
std
addl
out
xchg
jns
mov
inc
lcall
pop
jecxz
stos
out
je
arpl
add
jne
xchg
cmpsb
or
jo
adc
test
aad
pop
lret
lcall
sbb
jmp
inc
push
dec
mov
sbb
repnz
frstor
push
lock
sbb
pop
stc
sub
jb
in
adc
dec
and
lods
out
lahf
es
repz
lret
scas
dec
lret
push
xor
mov
adc
out
fmulp
lret
gs
daa
inc
dec
scas
popa
cs
int3
pop
cmp
and
or
jne
shlb
dec
xchg
stos
jmp
xchg
cmp
and
jne
inc
dec
leave
sbb
mov
inc
and
shll
aas
dec
dec
aad
jns
xchg
mov
testb
in
imul
rorb
dec
pop
push
cmp
test
or
mov
lods
test
inc
stos
push
loope
sbb
fimull
jne
ret
xor
aam
sbb
test
loope
xor
add
add
pop
jno
jle
sub
and
mov
outsb
das
add
fiaddl
jge
popf
lea
jle
add
popa
mov
cmpsl
jp
pop
push
cltd
add
mov
and
push
jmp
fstpl
lea
xor
inc
adc
jle
stc
mov
or
xor
sub
outsb
nop
fs
ret
sub
push
popa
pop
pop
xor
lods
cs
add
mov
movsb
test
jp
mov
cmp
dec
popl
push
cmp
int
xchg
inc
mov
ss
xchg
push
jecxz
aaa
testb
and
repnz
pusha
dec
mov
mov
inc
lret
sub
shlb
movsb
jns
rclb
fs
sbb
push
mov
mov
mov
call
es
sub
aam
int
mov
into
mov
jecxz
ret
addr16
xchg
xlat
test
mov
pusha
inc
mov
rorl
stos
and
xchg
ret
and
add
push
lret
rorl
jle
inc
aad
push
cmp
scas
push
mov
mov
lahf
adc
out
rol
aad
xchg
lret
imul
adc
xchg
or
and
push
dec
stc
or
ret
sub
sarb
adc
pop
ret
push
fildl
xchg
fs
cmp
mov
mov
adc
sub
out
or
pop
cmp
shll
sub
push
fnstenv
and
fisttps
mov
mov
cltd
es
xlat
and
pop
mov
pusha
nop
push
int3
xchg
mov
and
mov
sub
cmp
jge
mov
jl
in
and
and
xchg
pop
xor
sub
imul
mov
cmp
xchg
in
sti
cld
mov
cltd
cmpsb
hlt
addr16
xlat
cmpsl
rcrb
dec
push
orb
push
inc
cmpsl
lods
mov
leave
push
frstor
sbb
mov
mov
push
pop
test
pop
pop
dec
cmp
and
pop
xchg
jmp
cmc
out
pop
xor
andl
add
fisubrs
jl
popa
mov
decb
pop
leave
dec
jecxz
repnz
cmp
sbb
popa
mov
lcall
cmpb
mov
fsubp
sarb
clc
divl
jbe
shlb
sub
popa
ljmp
xchg
xchg
adc
cwtl
inc
std
repz
cmpsl
mov
movsl
lcall
mov
test
shl
fcmovnbe
and
sub
xor
sub
ret
sub
sub
cmc
push
mov
pop
jne
xchg
into
pop
ss
subl
mov
pop
inc
xor
xchg
fwait
jno
jg
aas
mov
loope
lahf
ficoms
in
sub
std
or
push
repnz
fisttpl
mov
fiadds
arpl
adc
sahf
mov
cwtl
movsb
aaa
sbb
pop
or
cs
dec
pushf
rolb
adc
add
icebp
test
data16
jno
je
stc
pop
cmpl
xchg
and
add
xchg
push
xor
movsb
xchg
jne
inc
push
jle
pop
inc
daa
jecxz
push
pop
mov
test
dec
cmp
pop
add
in
call
data16
rolb
mov
ds
arpl
pop
std
push
test
jl
jbe
shrb
xor
mov
sbb
inc
dec
inc
cmp
out
es
leave
aaa
sbb
sub
pushf
mov
xchg
inc
icebp
ds
outsb
pop
adc
shll
cltd
roll
iret
in
rcl
leave
push
mov
mov
mov
jg
imull
test
cmpsb
or
cmc
sub
mov
ret
arpl
jmp
xor
js
into
aam
lahf
jg
jg
flds
dec
insl
add
mov
and
lods
scas
scas
rcrb
sbb
cmpsl
ss
fsubs
imul
sbb
and
adc
rep
outsb
sub
cmp
addr16
loopne
inc
arpl
icebp
cmp
js
and
push
mov
mov
imul
lret
mov
test
outsb
push
xchg
addb
pop
outsl
mov
sahf
and
push
or
push
divl
pop
inc
push
clc
arpl
pop
daa
rcll
cmove
int3
inc
test
sti
imul
insl
jmp
mov
inc
and
insb
ret
mov
push
jecxz
popa
sti
mov
es
and
out
popa
mov
add
test
inc
mov
cmp
fpatan
jne
sti
arpl
mov
leave
or
mov
sbb
pop
sub
sub
call
ret
inc
sbb
insb
and
mov
imul
jg
dec
icebp
mov
push
pop
cld
ret
dec
stos
inc
iret
cmp
in
push
add
mov
mov
push
or
or
pop
jle
mov
jb
xor
inc
iret
daa
lcall
cmp
das
push
mov
adc
mov
outsl
cmc
cltd
or
mov
loope
sbb
pop
cli
mov
das
push
inc
mov
jp
sbb
in
mov
repz
jnp
push
mov
leave
cwtl
xor
sub
hlt
inc
mov
sbb
addb
dec
or
loopne
push
ljmp
xor
js
sbb
mov
test
into
mov
ljmp
sbb
inc
mov
out
mov
ss
mov
fidivl
mov
aam
cmp
js
or
add
insb
xchg
bndldx
mov
loope
adc
xor
call
lret
pop
sub
ret
pop
mov
add
movsb
movsb
jne
lods
lret
mov
sub
push
cmp
add
xchg
cs
mov
dec
mov
add
adc
cmp
out
pop
pop
jo
enter
mov
mov
sub
gs
mov
pop
push
or
arpl
mov
test
cmpsb
mov
jmp
jbe
cltd
bound
loop
fldcw
push
xor
adc
sbb
adcl
sbb
outsl
bsr
push
pop
popa
shr
or
inc
adc
cld
lcall
jo
xchg
and
sarl
insl
call
les
and
mov
jmp
inc
movsb
push
mov
mov
jecxz
push
dec
jae
cmpsl
xor
push
jg
sub
dec
rorb
cmpsb
iret
movsl
addr16
sbb
lcall
jb
faddl
idiv
outsl
insl
int
loopne
sub
ret
push
repnz
cmp
enter
dec
repz
mov
cmp
lahf
mov
cmp
pop
call
call
mov
dec
xchg
jge
sub
insl
and
mov
xchg
sub
rorl
and
test
in
mov
dec
mov
outsl
fdivs
xchg
adc
aam
sahf
movsl
js
sbb
stos
test
or
push
aad
fisttpl
sti
incl
jecxz
jp
jnp
clc
xor
or
jle
sub
fdivs
inc
mov
jmp
push
sbb
pop
into
stc
fwait
xchg
nop
sbb
mov
js
add
sbb
cmp
mov
das
pop
loopne
cs
lock
sub
push
push
jl
stos
loope
iret
jne
push
pop
jmp
inc
jbe
fldt
jle
andl
dec
push
or
lds
out
push
add
mov
jns
pop
inc
jmp
je
mov
add
sub
stos
orl
pop
hlt
adc
inc
bound
pop
xor
cmp
pushf
repz
lcall
xchg
mov
and
les
jb
pop
xor
mov
jge
or
push
jecxz
mov
fdivs
bound
pushf
mov
rorb
mov
sarb
cmp
mov
pusha
jl
cld
fsubl
lret
fndisi(8087
call
jns
or
fsubrp
movsl
fwait
mov
mov
inc
sbb
adc
cmp
inc
fmuls
push
pop
fcoml
lea
add
test
cmp
mov
popa
int3
xor
outsb
adc
mov
inc
mov
into
mov
inc
dec
cmpsb
push
pushl
push
lcall
aaa
inc
xor
mov
jp
dec
mov
je
mov
mov
arpl
jl
push
inc
cmp
fucom
cltd
push
imul
pop
fwait
arpl
inc
adc
clc
idivl
adc
jle
or
mov
addl
jae
or
cltd
add
jae
fisttpl
fadds
inc
orb
cmc
rorl
bound
mov
lahf
loope
xchg
xchg
push
jge
aad
xorb
les
and
xchg
fwait
add
cmovnp
xchg
xor
mov
fs
add
out
bound
add
movsb
add
addl
test
jne
test
push
push
imul
into
mov
out
mov
cmp
xor
mov
loopne
pop
aaa
stos
inc
fsubrs
mov
jmp
rcrb
mov
scas
sub
loopne
cmp
add
or
cmp
inc
jnp
cltd
push
dec
std
pop
aas
cmpsw
or
push
mov
sub
call
and
mov
adc
pop
rorl
pushf
add
outsl
xchg
cs
push
sub
sub
cld
sti
daa
mov
js
jp
sbb
pop
jle
cmpsb
pop
push
jnp
bound
aad
jae
pop
faddp
sub
cmc
adc
scas
sahf
ret
pop
adc
push
or
popf
mov
daa
add
jb
cmpsb
push
ret
lds
inc
inc
adc
adc
sbb
or
xchg
stos
push
xor
push
nop
xchg
cmp
sbb
mov
xor
into
in
out
pop
pop
sub
lret
jo
les
ret
clc
cmp
stos
fcom
out
pop
sub
mov
es
movsl
std
arpl
adc
xchg
pop
xor
fiaddl
dec
xor
sub
test
stos
mov
lock
inc
ljmp
pushf
insl
in
sub
int
inc
pop
push
inc
cli
cli
push
outsb
daa
imul
add
xor
sahf
push
mov
jecxz
in
cmp
out
loope
ljmp
sbb
push
pop
mov
aam
lret
imul
out
push
push
push
sub
ficoms
repnz
xor
fistpl
daa
mov
adc
loope
insl
js
outsl
mov
lods
jp
test
inc
and
stos
pop
mov
add
mov
pusha
sbb
dec
daa
xor
adc
outsl
mov
out
ja
pop
jb
pop
lds
mov
ret
xchg
shufpd
mov
rorb
xchg
fcoml
cmpsb
inc
mov
ja
frstor
mov
pop
push
ss
pop
lahf
xlat
subb
stos
popf
mov
ret
push
repz
mov
and
adc
push
imul
dec
gs
hlt
jae
je
shr
cmpsl
or
and
les
jp
push
int3
pop
aam
int
cwtl
xor
adc
pop
mov
pop
iret
repnz
and
dec
adc
lahf
adc
inc
push
jle
ret
push
popf
inc
pop
enter
jb
sahf
sbb
cmp
out
sbb
xchg
xor
xor
adc
push
xlat
scas
sbb
aaa
sub
dec
ds
movsb
mov
cmp
jne
jne
cltd
cmp
into
popa
enter
pop
into
lahf
jle
mov
je
push
mov
pop
cmc
xchg
movsb
lret
cmc
loope
dec
pop
into
or
mov
ja
ret
in
outsb
xchg
and
ret
std
jmp
mov
dec
fcmovnb
xor
mov
dec
mov
addr16
mov
jae
and
scas
dec
pop
xor
lret
fwait
mov
repnz
lcall
bswap
in
push
cs
shl
dec
insb
dec
pop
jno
xchg
pop
lea
xor
push
mov
cltd
popf
int3
mov
ret
stos
adc
movsl
pop
bound
test
mov
sar
ss
jge
dec
adc
cltd
rcrb
sbb
xchg
push
js
ret
movsb
mov
rcll
out
xchg
cli
sub
push
push
or
push
cmpsl
outsl
add
andb
push
out
push
sub
jp
test
cli
adc
imulb
cmp
sbb
js
fdivs
pop
push
add
pusha
mov
add
sar
sub
inc
lock
pushf
lods
test
in
pop
cmp
xchg
fldcw
xchg
adc
adcl
mov
mov
jmp
lds
mov
jnp
out
imul
and
in
repz
pop
mov
jle
ret
call
lock
mov
sbb
addb
lcall
pop
daa
push
out
iret
in
into
into
aam
lea
icebp
xchg
mov
mov
jmp
or
xchg
pop
push
arpl
push
testl
lret
inc
or
xchg
jecxz
bound
dec
in
xchg
fdivl
jp
cld
mov
pop
jmp
daa
adc
shll
fwait
cmc
mov
mov
push
lret
out
stos
scas
fcomp
call
adc
and
cmp
jp
cwtl
push
adc
clc
cltd
sbb
in
or
add
daa
mov
push
push
push
mov
cmp
repz
aas
lock
dec
mov
mov
out
scas
mov
sub
adc
add
sbb
dec
lock
xchg
mov
pop
mov
inc
cmp
mov
xchg
push
jge
add
xor
stc
fsts
and
sti
mov
imul
push
or
and
shrl
aas
pushf
fcomps
xchg
bound
fidivrs
adc
ja
mov
jno
mov
int3
cmpsl
push
push
scas
jmp
mov
jns
cmpsl
inc
add
test
inc
pop
divl
jge
das
std
mov
push
in
mov
jb
mov
stos
sub
jae
mov
cwtl
movsl
jmp
int
or
popa
inc
stos
or
jp
ss
xor
inc
sub
scas
scas
lock
enter
pop
and
xchg
fcmovb
loope
push
stc
shll
mov
mov
inc
push
mov
scas
repnz
mov
cli
lea
push
sub
in
push
add
sahf
inc
movsb
xchg
not
or
sub
and
iret
push
sahf
sbb
out
out
lcall
pusha
pop
pop
gs
push
iret
push
mov
xlat
shlb
push
fucomip
loopne
mov
add
call
icebp
xor
aaa
pop
in
inc
sbb
or
subb
push
not
pop
inc
pop
ss
data16
add
jge
lcall
and
mov
stc
lahf
jmp
mov
fiadds
adc
mov
gs
aas
repz
loop
and
sbbb
mov
ret
stos
mov
out
mov
or
xchg
insb
dec
adc
cmp
jb
mov
pop
push
arpl
mov
fwait
inc
mul
push
int3
pop
xchg
aad
jbe
fbstp
mov
ds
mov
data16
or
cmpsl
enter
xlat
sahf
add
shll
std
test
add
test
jge
cli
sbb
mov
int3
inc
mov
adc
aam
push
data16
mov
mov
mov
test
or
fdivr
cld
stc
mov
push
out
out
sub
sub
adc
xchg
xchg
and
jno
push
fmuls
rcr
add
mov
pop
mov
es
lret
push
movsb
std
sbb
push
imul
mov
ja
fcoml
iret
pop
and
jae
mov
mov
xor
ds
inc
leavew
mov
inc
xorl
cltd
movswl
test
fwait
aaa
mov
jne
push
fcomps
clc
mov
inc
arpl
popa
mov
les
mov
fwait
cmp
dec
rep
xor
mov
jl
lea
imul
sbb
mov
subb
stc
insl
mov
int3
js
jns
pop
lods
shlb
and
add
fimuls
sbb
test
push
divl
push
dec
imul
into
in
icebp
fucom
adc
scas
fdivrs
xchg
sub
imull
arpl
sbbl
je
out
pop
jg
inc
or
orb
mov
ljmp
cli
mov
dec
inc
push
sbb
aas
rolb
ja
fstpt
fcompl
xor
cld
pop
adc
adc
sbb
repz
and
sbb
fcoms
in
sub
stos
out
push
lock
mov
or
dec
enter
cmp
adc
call
and
add
mov
std
rorl
sbb
out
or
fwait
es
xor
dec
lahf
cmpl
lahf
xchg
jnp
rcrb
dec
add
int
dec
cltd
xor
xchg
inc
cld
pop
pop
mov
cli
loop
popf
jp
push
cwtl
ror
jb
repz
inc
add
in
cmp
shll
hlt
inc
sbb
sub
and
cmp
push
dec
jge
or
and
enter
jge
icebp
push
push
dec
push
xlat
pushf
popa
inc
pop
push
into
add
adc
out
pop
arpl
mulb
fidivrs
sub
and
sbb
leave
xor
std
ja
xlat
dec
in
in
or
scas
push
xorb
es
mov
jl
add
adc
mov
mov
fisttps
xor
lods
push
arpl
loopne
jmp
mov
or
fstpl
in
ja
and
adc
scas
adc
push
sub
push
aas
cmp
call
shl
fsubl
push
mov
push
movsb
negl
xchg
sbb
xlat
inc
icebp
add
mov
fstl
dec
xchg
sbb
mov
leave
sbb
mov
and
push
daa
fsts
insl
sub
in
outsb
cltd
sbb
jl
and
lahf
cld
lret
mov
cmpsl
mov
lret
mov
jne
ficoml
and
popa
lods
cmp
das
add
mov
mov
les
mov
test
fidivrl
sub
fbld
out
pop
pop
mov
push
cli
inc
int3
fldenv
dec
test
int
sbb
fistps
into
lahf
mov
inc
dec
push
je
repnz
fsts
mov
jnp
test
cmp
in
mov
std
jmp
sbb
jns
nop
and
pop
subb
stc
mov
cmp
xor
sbb
sbb
mov
pop
fwait
scas
jo
stos
cmp
mov
cs
in
sahf
jge
notb
in
or
or
pop
pop
dec
mov
or
mov
dec
sbb
mov
adc
in
pusha
dec
or
add
je
dec
scas
xor
add
cmp
ss
icebp
mov
fbstp
inc
pop
pop
pop
mov
mov
add
mov
dec
loope
push
push
push
fmull
fs
cmp
and
sbb
inc
in
xor
cmp
cmpsl
out
mov
nop
loope
xchg
lret
sarb
push
mov
inc
loopne
sub
add
out
ja
lahf
mov
fwait
add
repnz
mov
push
out
adc
cwtl
sbb
dec
add
cmpsb
dec
int3
inc
pop
sahf
fistpll
push
mov
fs
pushf
sbb
fndisi(8087
test
pop
cltd
dec
inc
xchg
xchg
in
sets
jecxz
mov
adcl
arpl
xchg
xor
adc
push
sbb
mov
and
pop
insl
out
int3
clc
repnz
push
jmp
pop
fstl
testl
js
xchg
shll
js
pop
xor
sbb
adc
imul
and
and
cmp
xchg
sbb
out
pop
adc
int
into
nop
cwtl
pop
xchg
jle
rcll
mov
decl
sub
or
mov
adcb
adc
loopne
and
mov
hlt
sub
out
push
pop
sbb
or
rorl
les
rcrb
push
and
and
mov
adc
push
mov
push
jb
dec
mov
adc
in
adc
inc
xchg
push
dec
cltd
add
mov
pusha
jle
in
enter
sbb
and
lock
xor
jp
jb
insl
lahf
andb
aam
mov
fisubs
cmp
aam
test
inc
js
leave
in
push
xchg
adc
nop
xadd
outsb
fistpl
subb
out
mov
sbb
jmp
scas
mov
inc
dec
fdivrs
imul
xor
roll
movsb
mulb
push
inc
xlat
mov
add
dec
sti
jge
leave
cltd
lret
fists
stos
add
push
stc
inc
mov
roll
test
adc
sbb
and
mov
pop
dec
cmp
jle
fiadds
fidivrl
or
xchg
add
jae
push
mov
daa
xchg
fimuls
imul
repnz
dec
sbbb
sub
push
and
insl
out
aad
xor
les
mov
mov
ljmp
mov
pop
jne
inc
lahf
push
lds
mov
push
jo
lahf
lcall
cmp
aas
addl
xchg
sub
xor
fsubl
mov
mov
ljmp
std
fdivrl
arpl
into
out
or
mov
or
sbb
mov
clc
mov
ss
push
in
sub
lds
sbb
push
mov
js
lahf
mov
or
mov
into
and
mov
pop
mov
jle
mov
cmpl
inc
pop
aaa
nop
rcr
sub
jb
dec
dec
stos
sbbb
adc
adc
les
add
push
sbb
inc
pop
push
push
repz
push
dec
push
subb
lret
xchg
sbb
push
mov
inc
xor
dec
inc
pop
inc
sbb
call
inc
sub
into
jle
sbb
add
dec
out
mov
stos
or
fists
mov
xor
lret
add
in
push
gs
dec
push
mov
xor
sub
mov
sbb
and
imul
push
daa
lret
cmp
stos
hlt
mov
enter
sub
cmpsb
enter
lea
into
xchg
movsl
arpl
xor
push
xchg
cmp
and
mov
and
iret
adc
lea
out
xchg
inc
mov
inc
xor
pop
jnp
mov
add
push
mov
scas
out
aaa
outsl
and
sbb
jo
stos
std
stc
scas
scas
mov
sub
outsb
scas
pop
lcall
icebp
daa
cmp
imull
pop
push
adc
xchg
cltd
sub
mov
testb
sbb
scas
jno
sub
push
sti
loopne
fidivl
loop
jnp
add
test
mov
xor
push
adc
test
test
ljmp
fs
stc
stos
pushl
or
mov
inc
mov
add
aad
inc
sbb
sahf
icebp
xchg
mov
add
popa
insl
mov
and
dec
or
sarl
push
iret
insb
mov
cmp
cmp
lea
jnp
shl
inc
clc
and
mov
into
nop
mov
jp
les
call
iret
adc
aam
std
pop
dec
adc
push
test
shlb
pop
mov
popf
jo
adc
add
pop
mov
mov
inc
test
sbb
cmp
inc
sub
add
mov
cwtl
ja
ljmp
outsb
orl
clc
fs
sub
out
adc
mov
or
popa
sub
leave
das
jne
cmp
hlt
inc
lock
fistl
sub
pop
popa
add
cmc
mov
in
hlt
movsb
mov
sub
sahf
cltd
adc
int3
shll
push
in
fsubl
fisttps
pop
dec
push
jnp
fisttpl
jmp
and
pop
call
jmp
in
sub
mov
lret
rcll
js
addr16
ret
inc
mov
pop
test
and
sub
or
lds
imul
cmpsl
movsl
movsl
inc
mov
cwtl
sub
jg
movsb
fs
in
sbb
mov
jno
mov
rclb
ret
ljmp
or
push
test
jb
cld
xchg
in
hlt
sub
pop
fcompl
jg
jnp
pop
push
std
stos
mov
into
aaa
xchg
adc
jne
mov
movsb
add
scas
push
adc
mov
sbb
insl
pop
inc
sbb
mov
jg
dec
cltd
in
das
data16
into
mov
sub
push
mov
test
fldl
test
decl
loop
cmc
and
jmp
pop
push
pop
leave
xchg
das
icebp
mov
pop
push
movb
or
cwtl
or
jge
test
adc
sbb
aad
jbe
aas
push
daa
dec
and
repz
in
add
outsl
push
or
or
nop
adc
inc
loop
and
aam
push
add
push
imul
mov
out
jbe
sbb
pop
xchg
ret
xor
mov
add
dec
xchg
inc
push
jl
cltd
mov
or
test
push
insl
mov
subl
lock
add
nop
pop
xlat
ljmp
popa
cmpsb
dec
cwtl
mov
add
lock
xor
ja
cld
aaa
dec
out
adc
adc
jmp
fs
jecxz
add
lock
xor
pushl
xor
fs
inc
adc
xor
mov
fldz
or
or
ficompl
mov
inc
outsb
adc
lds
test
repnz
cli
cmp
aad
jl
dec
bound
repnz
test
mov
testl
xor
rolb
and
cmpsl
cmpsb
sub
pop
mov
es
inc
dec
dec
fwait
mov
das
or
sti
mov
jle
jecxz
mov
andl
mov
imul
das
push
ret
cwtl
roll
or
inc
cmp
cmp
and
inc
mov
push
inc
cmp
insb
mov
iret
iret
popf
inc
pop
mov
fmul
fwait
xchg
bound
push
adc
ret
dec
pxor
mov
inc
or
aad
fimuls
out
xor
or
or
inc
loope
cmpsl
pop
cltd
xchg
push
jecxz
aaa
mov
mov
rolb
inc
nop
mov
push
ffree
pop
popf
cld
icebp
mov
lahf
test
mov
mov
pop
icebp
les
gs
inc
divl
or
cltd
cmc
insb
es
outsb
cmp
in
in
shll
cmc
loop
ljmp
clc
pusha
dec
mov
cmp
lret
adc
mov
iret
fbld
xchg
adc
fucom
movsl
imul
lds
cmp
push
xchg
or
cmp
add
inc
imul
push
pusha
iret
repz
fwait
pop
mov
pop
push
sub
nop
hlt
push
mov
or
sahf
push
scas
inc
or
push
in
push
sub
fistps
aas
xchg
stos
pop
daa
xchg
adc
sub
push
or
fcmovu
icebp
pop
sub
aad
mov
je
inc
nop
xchg
stos
cmp
mov
sub
fstps
xchg
jo
sar
dec
jnp
cmp
add
jno
and
arpl
out
xchg
dec
jge
sbb
inc
es
pop
repz
cmpsl
les
call
xchg
sub
mov
test
mov
ret
push
cmp
repz
sti
es
stos
push
or
sub
shll
cmc
fisttps
sbb
xor
adc
mov
cmpb
mov
lahf
ret
cmp
lods
cmpsb
ljmp
insl
jge
inc
ret
add
call
cmc
xchg
lret
mov
push
enter
and
mov
pop
daa
or
mov
ret
mov
sbb
aaa
fimull
xor
add
idivb
imul
dec
jecxz
or
mov
into
xor
popa
pop
mov
lret
jl
pop
dec
les
stos
jae
inc
mov
movsl
push
or
clc
cs
pop
pop
int
adc
outsb
pop
xor
jnp
and
imul
sub
mov
lods
lock
insl
mov
imul
in
inc
and
mov
pop
es
lods
pop
mov
shlb
lcall
mov
std
mov
fwait
mov
pop
cmp
call
mov
je
sti
pop
jmp
jmp
dec
xor
jl
mov
dec
or
sub
fisttpll
insl
jae
lods
fsubs
add
dec
repnz
dec
mov
adc
cltd
inc
les
fcoms
lods
push
push
adc
add
aas
adc
xchg
mov
arpl
sub
testl
push
sahf
push
add
outsb
hlt
mov
dec
in
fisttpll
add
sbb
lds
pop
adc
mov
fsubl
shlb
push
test
inc
mov
jns
cli
adc
cwtl
scas
sarl
iret
sub
lret
ljmp
pop
jne
dec
pop
inc
pop
cmpsb
test
je
out
bound
sub
pop
ljmp
mov
call
jle
or
movsb
pusha
add
mov
and
insl
mov
pushf
es
ss
mov
sarl
adc
and
xor
fsts
sbb
es
xor
xorl
pusha
mov
test
shl
cmp
xchg
sbb
mov
sbb
outsb
ja
jge
mov
daa
sub
jg
js
cmp
nop
mov
roll
and
dec
lcall
movl
into
loope
jno
test
sub
hlt
sbb
mov
lods
jne
mov
and
push
clc
add
xor
repz
sarb
sbbb
out
cs
scas
aas
dec
sub
push
rclb
sar
pop
ret
jp
jg
jmp
mov
mov
xor
dec
cmp
in
fisubl
push
loope
in
pop
cs
in
outsl
cli
pushf
rol
xchg
lret
sahf
mov
addl
sbb
nop
add
add
fsubp
pop
testl
jmp
aad
cmp
pop
mov
cmp
in
arpl
lods
lret
outsl
int3
mov
lahf
scas
sbb
test
mov
fadds
pop
cmpsl
push
cli
xchg
and
enter
or
dec
pop
loopne
dec
js
aaa
xor
je
hlt
dec
aaa
fimuls
inc
in
mov
jge
inc
test
xlat
stos
mov
ss
add
es
xchg
stc
push
out
add
lea
mov
dec
adc
inc
fstpt
fildll
in
jmp
das
add
mov
sbb
pushf
mov
adc
pusha
or
icebp
xchg
test
in
shrl
mov
push
dec
cmp
test
pop
push
sarb
aam
push
into
bnd
mov
cmp
jmp
loop
xorl
cmp
push
adc
mov
outsb
pop
addr16
or
mov
and
jp
das
cltd
sbb
sbb
mov
and
mov
sti
cmp
dec
mov
cmp
push
jle
andb
rcr
jle
mov
push
sub
lcall
xchg
arpl
adc
add
inc
lods
aam
mov
pushf
cmp
and
jns
ds
sbb
sub
cli
clc
repz
out
pop
cmp
or
mov
jb
iret
fdiv
mov
es
popf
cs
insl
sarl
push
pop
jbe
jmp
dec
ljmp
push
fldl
adc
mov
es
mov
mov
mov
or
xchg
adc
mov
jge
int3
xor
cmp
or
add
pop
pop
mov
sbb
out
popf
sub
testl
xor
aas
mov
aas
insb
rorl
mov
sbbl
dec
jb
repz
shrb
jge
xlat
scas
push
or
mov
inc
or
imul
fnstsw
mov
flds
rorl
pop
out
in
cmp
bound
xor
or
sysret
jnp
mov
jmp
dec
dec
outsl
push
sti
pop
mov
add
mov
mov
mov
rcr
xchg
fistl
jbe
pusha
mov
adc
sbbb
lds
mov
sti
xor
stc
pop
dec
lcall
mov
or
sub
jae
pop
mov
test
lret
pop
sub
imul
and
mov
mov
sbb
xor
or
xchg
test
xor
out
call
push
add
scas
mov
jae
jnp
xchg
sbb
jb
cmp
mov
pop
sbb
dec
cmp
or
fcomi
push
push
xchg
push
mov
cltd
dec
outsl
imul
in
mov
je
incl
movsb
sbb
mov
pop
xlat
fsubs
fdivrl
pop
push
sub
push
pop
jg
jb
das
call
adc
jo
repz
xchg
in
push
mov
mov
loopne
es
push
aas
out
movsb
pop
or
push
out
xchg
jp
and
ljmp
dec
outsb
mov
orl
pop
ja
mov
cmp
xchg
pop
clc
dec
pop
cwtl
sub
mov
inc
fidivl
fwait
add
stos
inc
mov
add
and
jns
push
ficoms
adc
xor
cwtl
add
movlps
movsl
xchg
dec
or
daa
xchg
mov
lods
sbb
pop
fdivr
dec
call
and
sub
sti
add
fiadds
inc
add
mov
ret
test
pushf
adc
adcb
cwtl
pop
xchg
jp
ds
in
js
into
adcb
popa
cmc
inc
push
pop
pop
xchg
adc
cli
inc
ds
int
pusha
sbb
ljmp
cmp
dec
std
pop
mov
shrb
lret
cmp
lods
cmpsb
in
jge
roll
loopne
pop
dec
adc
sti
xlat
mov
daa
sti
mov
addr16
cmc
fsubr
out
div
mov
aam
mov
out
and
add
xchg
push
inc
cmp
mov
xor
inc
mov
aam
div
cld
and
iret
hlt
int
inc
mov
push
sbb
lds
dec
push
sbb
stc
mov
sbb
imul
jns
mov
add
push
xchg
gs
jae
or
movl
clc
cmpsb
loopne
leave
pop
pop
jle
ret
dec
jbe
dec
inc
addr16
pusha
sbb
or
and
mov
repz
rolb
adc
lahf
ss
and
and
mov
mov
rcrb
jne
jne
xchg
fimuls
cmpsb
xor
mov
bound
dec
movhps
add
into
std
shlb
test
push
inc
in
in
dec
dec
cs
pop
int
sti
jecxz
push
cmpsb
mov
adc
in
sub
dec
jbe
pop
test
push
pushf
mov
aas
stos
or
fldcw
rolb
mov
or
ficoml
xorb
test
leave
jns
push
or
mov
and
ficoml
pop
mov
sub
inc
popa
adc
mov
sbb
xor
push
dec
mov
mov
cmp
jge
pop
jae
jmpw
lea
pop
cmp
pop
fdivrs
jmp
and
insb
ficoml
scas
inc
mov
xchg
xchg
clc
test
test
pop
out
adc
xor
nop
pusha
pop
sarl
xchg
fadds
mov
popl
mov
in
fnsave
add
test
sbb
jo
aad
mov
loop
add
or
jle
cmpsl
cmpsb
shrb
imul
cmc
jbe
cmp
fisttps
clc
idiv
je
inc
das
lret
xor
cmc
dec
inc
pop
mov
mov
inc
inc
repz
movsl
sti
test
cmpsl
adc
xor
pop
pop
xchg
daa
and
sub
add
shrb
fimull
ficomps
test
xchg
sub
mov
inc
comiss
push
ret
ljmp
sub
je
into
cmp
out
je
push
testb
cvtpi2ps
je
sbb
jecxz
push
std
jns
out
mov
aaa
add
push
cmp
jmp
cmpsb
jp
stc
jl
pop
daa
jbe
arpl
lcall
xchg
aaa
push
cwtl
jnp
scas
sub
mov
mov
aad
inc
jnp
cmp
movsb
inc
test
mov
inc
testb
insb
mov
scas
in
adc
and
aam
cs
in
popf
testb
fistpll
aam
cmp
out
mov
xchg
call
fwait
xchg
and
inc
push
adc
les
addr16
mov
jne
imul
adc
add
pop
xchg
dec
push
push
sub
callw
inc
dec
pop
mov
adcl
lds
add
lods
mov
popl
pop
dec
mov
aaa
pop
cmp
fdivs
or
out
fisubl
xor
cltd
lcall
xchg
xor
inc
xor
or
xchg
dec
xor
adcl
sti
rol
jp
test
movsb
mov
bound
fisttpl
lret
push
xchg
scas
mov
pop
mov
insb
fidivs
call
xchg
ret
scas
and
std
pop
push
adc
fs
sub
adc
leave
dec
in
int3
xor
sbb
dec
outsl
mov
sbb
and
jg
inc
inc
sub
pop
outsl
cld
push
mov
dec
jecxz
jg
mov
mov
or
xchg
lods
ret
addb
dec
dec
add
mov
rclb
jmp
xchg
mov
push
push
sarl
imull
movsl
add
xor
sti
into
sbb
insl
js
jle
out
jno
pop
mov
mov
or
sub
or
sbbl
cld
mov
pusha
test
cmpsl
jno
mov
mov
out
add
cmpsl
push
outsb
xchg
mov
and
mov
aad
fmull
fdivrs
rorl
pop
jge
and
js
cmp
scas
jbe
add
fs
repz
subl
outsl
sahf
mov
icebp
jns
shlb
cmp
adc
loop
mov
scas
stos
in
and
adc
add
sub
sbb
mov
or
jecxz
leave
mov
movsb
cmp
popf
and
std
fisubrl
ljmp
pop
fcmovbe
xor
sahf
cmp
cmp
repnz
ds
rcr
jae
in
std
and
adc
xchg
loopne
or
xor
add
push
rolb
subl
dec
adc
rcrl
mov
cmpsb
in
inc
pop
mov
pop
inc
pop
push
mov
or
mov
cmp
imul
mov
cmp
pop
mov
lock
push
pusha
stc
shlb
jecxz
sub
stos
sti
xchg
pushf
push
cmp
mov
add
fcom
cmp
lahf
cmp
gs
cli
test
jl
sub
jnp
clc
inc
insb
lock
lock
popa
xchg
dec
cli
push
mov
and
ret
lock
out
orb
sti
cmpsb
das
xchg
ror
aam
push
aaa
aad
and
stos
mov
scas
aaa
inc
mov
inc
hlt
js
std
adc
iret
or
sar
jg
jns
mov
xor
xchg
push
out
mov
ficoms
dec
ss
pop
add
ss
inc
xchg
idivl
repz
loop
xchg
pop
xor
add
add
les
dec
aam
call
mov
mov
push
xchg
mov
adc
xor
inc
adc
adc
inc
ss
inc
mov
insl
sbbb
mov
jle
jne
mov
movl
pop
cmc
imul
dec
aam
out
stos
and
mov
dec
subb
lods
lods
jne
push
je
ret
cmp
icebp
sub
stos
jg
or
dec
ljmp
mov
sub
pop
mov
out
pop
std
pop
cmp
mov
xchg
dec
xchg
pushl
or
push
das
mov
push
ja
add
lret
xor
jbe
inc
add
outsl
xchg
push
add
cmp
inc
sub
cltd
mov
or
dec
sub
jnp
xchg
mov
dec
sub
xlat
push
arpl
scas
xchg
mov
pop
dec
or
inc
push
icebp
fdivl
add
lahf
dec
ss
xchg
xchg
push
dec
fwait
xchg
sbb
int
in
test
out
jl
pop
frstor
ds
hlt
or
sarl
aas
jp
cli
lea
push
aaa
clc
int
mov
testb
icebp
pop
add
adc
pop
mov
aas
mov
pop
add
jbe
gs
test
adc
xchg
push
outsb
xchg
jno
imul
js
test
xchg
sbb
vmovlpd
test
ja
sub
sub
sub
or
mov
jno
push
subl
in
adc
lods
xor
popa
iret
add
dec
xchg
in
jle
adc
sbb
pop
mov
popa
ss
adc
je
repnz
and
dec
xor
filds
bound
daa
xor
mov
jl
test
cmp
nop
call
cmp
stos
cs
xor
or
adc
xchg
push
cmp
in
xor
sbbl
pop
jg
icebp
push
movsb
inc
sahf
inc
add
cltd
inc
jbe
leave
sub
imul
jmp
fldcw
cmp
outsl
adc
rcl
xorl
mov
int
push
mov
add
add
cmc
icebp
in
dec
jbe
sbb
push
aas
jno
cs
jae
mov
lock
stos
sti
or
and
and
push
repnz
cmp
out
cmpsl
or
fsts
or
mov
cwtl
jp
mov
loop
inc
sbb
ljmp
mov
xchg
fadd
jge
xchg
fwait
out
cmp
outsb
xor
das
in
insb
fwait
lock
test
cltd
das
mov
xchg
loope
jnp
popa
mov
adc
lock
push
or
arpl
mov
adc
cmc
inc
repnz
ds
push
jle
cmp
cmpsb
mov
bound
xchg
lret
push
test
and
hlt
lea
addr16
cmp
jne
in
lds
sub
dec
mov
fistpll
and
lcall
sbb
or
scas
mov
pop
push
test
imul
or
adc
aad
jo
xchg
push
notb
jle
lea
gs
lock
sti
pop
imull
mov
inc
les
adc
or
lcall
and
in
adc
jae
out
aad
jle
add
test
mov
sub
std
bound
js
inc
and
xor
cmp
push
cmpsl
add
hlt
in
mov
scas
pop
lret
sbb
jp
sub
adc
adc
add
leave
mov
sub
xchg
pop
jo
xchg
adc
in
mov
sub
jecxz
movb
pop
mov
xchg
fs
test
andb
aam
mov
movsb
cmc
lret
or
adc
pushf
or
hlt
sahf
sub
je
dec
aad
test
aam
sub
xor
sbb
mov
dec
movsb
inc
push
mov
or
or
popf
mov
movsl
daa
cmpsb
je
mov
shll
shrd
leave
pop
mov
sbb
mov
pop
cld
jle
ret
sbb
data16
sbb
and
push
je
adc
fiaddl
in
adc
aaa
push
in
mov
dec
xchg
mov
mov
test
fldcw
cmpsb
test
dec
push
jge
push
push
mov
push
xor
movsl
sbb
es
fsubl
loopne
push
fidivs
repz
stos
shrb
fs
outsb
mov
dec
jb
lcall
lret
pushl
mov
push
scas
mov
adc
dec
mov
int
pop
adc
dec
mov
or
bound
dec
fimuls
adc
push
es
sbb
jmp
xchg
xchg
xor
dec
sub
dec
jl
push
mov
and
in
stos
rol
out
push
cltd
lods
adc
mov
cmp
rclb
mov
jno
loopne
fsubs
mov
sarl
cmp
fsubs
js
movsl
loope
movsb
pusha
jmp
cltd
lcall
adc
sub
fdivl
dec
fadds
pop
push
sbb
add
fdivl
lock
mov
xchg
int
fnstenv
mov
cmp
and
push
idivl
mov
push
or
adc
je
mov
xchg
sbb
mov
cld
insb
clc
fistpl
shlb
pop
cmpsb
sbb
or
inc
std
jbe
sub
fsub
outsl
cmp
cmpsl
movzbl
hlt
sub
add
pop
xchg
mov
xorl
mov
outsb
xchg
imull
pushw
cmc
sub
and
pusha
lret
pop
dec
test
lret
inc
xor
mov
nop
aad
fmuls
popa
jnp
jb
push
psubd
mov
jg
cmpsb
push
pop
test
or
mov
jg
flds
push
cmc
xorl
push
mov
shl
mov
lret
hlt
push
fildll
movsb
sti
pop
jp
xor
pop
in
xor
sahf
jb
dec
xchg
data16
not
inc
cwtl
int3
les
pop
or
pop
outsl
pushf
repnz
xchg
jno
add
rcrl
add
clc
pop
mov
lods
xorl
mov
insl
xor
sub
or
push
inc
mov
shlb
and
cwtl
and
dec
fwait
pop
mov
push
sbb
jb
jmp
mov
loopne
imul
fidivrs
inc
sub
lahf
mov
daa
lods
imul
cwtl
sbb
nop
sub
mov
pop
xchg
test
jmp
xchg
push
shr
stos
jcxz
js
xchg
xchg
push
jp
or
add
sub
outsb
stc
jp
cmp
pusha
mov
add
cmp
shlb
dec
int3
pop
lahf
pop
in
sub
xchg
lock
out
dec
leave
clc
in
clc
sbb
mov
or
pop
add
dec
fadd
inc
cmp
mov
or
mov
sbb
je
or
push
add
xchg
xchg
test
sub
lods
jl
fs
pushf
pushf
ds
adc
jle
or
add
mov
add
pop
and
rcrl
dec
jnp
pop
cmc
push
xchg
jnp
stc
movsl
sti
dec
dec
mov
add
xor
iret
mov
mov
nop
cmpl
push
sbb
sbb
insb
fdivp
std
cli
fimuls
in
or
iret
fcomps
inc
inc
andb
inc
outsl
lock
shlb
scas
sub
jmp
les
lret
mov
mov
push
mov
xchg
inc
movsb
and
sbb
sbb
dec
pop
inc
inc
ret
popl
adc
popf
adc
or
ss
mov
int
mov
les
xlat
sbb
push
sub
ljmp
lock
loope
pop
adc
jp
cwtl
inc
orb
add
add
pop
je
fists
xor
push
call
xchg
mov
imul
sti
int3
fmull
pusha
testl
cmc
out
pop
lcall
iret
or
mov
imul
mov
push
push
repnz
outsl
movsb
fcomip
popa
push
imulb
cltd
ja
jno
mov
in
lcall
jge
pause
or
sub
outsb
xor
dec
ljmp
stos
insb
outsl
fsts
pop
mov
sti
push
movsb
mov
bound
movsb
cmpsl
ficoml
inc
inc
pop
mov
imul
xchg
add
xchg
lret
imul
mov
fbld
in
ret
mov
xor
int
mov
sbb
call
stos
ret
xor
cmp
movl
xlat
and
dec
sahf
adc
add
pop
icebp
idivl
cli
mov
jge
lahf
int3
inc
hlt
iret
jne
fmulp
cli
mov
mov
jno
popf
int3
ret
add
cmp
lahf
xor
je
pop
test
mov
and
push
jbe
jge
cmp
insb
pop
stc
pushf
or
ret
cmp
push
lcall
pop
fs
mov
rol
das
dec
aad
in
mov
out
loopne
cwtl
cmp
mov
or
int
incb
xchg
push
das
imul
ret
in
movsl
pop
push
jmp
or
fldl2t
bound
push
push
mov
mov
xor
xlat
jle
push
jp
mov
jno
sub
push
fcomps
push
rcll
adc
push
mov
mov
das
pop
mov
and
push
mov
and
cmpsb
inc
push
pop
in
pop
movsl
mov
sub
dec
cs
mov
jbe
ficomps
ret
lret
inc
pop
dec
pop
insl
mov
movsl
data16
arpl
fcmovb
mov
aad
jne
xchg
sbb
stc
and
mov
lret
or
push
mov
adc
sub
shlb
popa
and
cli
push
dec
xor
sti
arpl
ret
icebp
jae
sahf
adc
sbb
lods
lock
fcoms
in
gs
lods
mov
test
xchg
mov
popf
jp
loop
mov
push
outsl
xlat
lods
and
movsl
mov
fsubr
or
in
mov
jbe
cmpsl
mov
cltd
out
cmp
lcall
xchg
sahf
and
cli
fcomp
mov
fbld
add
pop
jg
jge
lea
add
int3
or
js
xchg
mov
stos
cmp
sbb
out
mov
cmc
test
sbb
add
shl
dec
add
push
scas
stc
fiaddl
movl
and
mov
jmp
and
mov
pop
hlt
rorl
loope
rep
adc
cmp
sub
add
sbb
repz
xchg
mov
gs
xor
dec
jl
pop
test
mov
cmpsl
lea
in
dec
sbb
or
iret
or
je
mov
xorl
cmp
push
dec
jle
iret
push
jmp
aaa
and
add
adc
repz
aad
sub
loope
ljmp
fcmovnu
mov
aaa
ja
cmp
popf
xchg
add
dec
popa
dec
lret
mov
jge
pop
mov
nop
cmp
mov
pop
fsubrl
adc
jg
fnstenv
loope
mov
mov
push
es
sub
inc
lds
roll
pop
pop
dec
mov
push
ljmp
push
gs
imulb
pop
mov
inc
fldenv
sti
adc
rcll
push
inc
out
jno
jle
or
nop
xchg
push
decb
and
icebp
sub
clc
mov
pop
rorb
aam
add
mov
xchg
dec
jl
xor
pop
or
lds
sbb
test
mov
inc
dec
mov
mov
pop
jg
movsb
xchg
sbb
mov
fstp
jns
iret
and
adc
ret
xor
ret
jbe
push
jl
cmpsb
lret
imul
xchg
sbb
push
lcall
jp
pop
sahf
mov
adc
jne
sbb
insb
xchg
adc
lods
mov
das
leave
mov
cmp
nop
sbb
ss
mov
lret
push
mov
add
stos
in
mov
mov
daa
das
sbb
mov
cmp
pusha
loopne
out
sub
std
cmpsb
popf
mov
data16
add
test
stos
inc
add
pop
and
jbe
mov
fsts
addr16
jbe
aam
cmp
loop
loope
cmpb
xchg
mov
pop
push
xchg
jl
push
aad
divl
loop
jle
cwtl
repz
lods
pusha
aas
mov
xchg
cwtl
test
xor
and
roll
aam
test
fstl
or
push
add
mov
jns
and
jecxz
shl
gs
push
sbb
inc
sbb
push
and
popf
sahf
adc
dec
or
dec
pop
xor
into
mov
xchg
jge
out
xor
push
xchg
popa
xchg
pop
stc
inc
pop
sub
lcall
push
cs
arpl
cmpb
aas
push
sub
push
mov
and
and
jmp
xlat
add
stos
arpl
sbb
push
in
lods
aam
adc
hlt
data16
cmp
cld
out
pop
arpl
icebp
mulps
es
sti
mov
pop
pop
mov
mov
jl
in
mov
sti
out
push
cs
inc
or
int
fidivl
jno
lods
pop
sbb
outsb
and
mov
adc
vorpd
inc
xchg
inc
jp
std
dec
addb
jae
sbb
xor
dec
or
pop
imul
aam
adc
push
push
push
gs
lods
adcl
dec
jo
add
and
je
adc
push
add
and
jbe
mov
inc
push
dec
aad
mov
fwait
int3
xchg
outsl
aas
sbb
mov
cmp
push
sbb
fs
jg
js
adc
add
dec
pop
shr
andb
mov
ret
adc
sub
nop
out
pop
scas
les
imul
jg
cs
in
jg
xchg
adc
xor
jo
or
imul
shlb
mov
ss
lcall
dec
mov
mov
cmp
or
cmp
mov
adc
aas
jnp
mov
lods
in
dec
sub
cmc
adc
inc
cmp
jmp
push
or
insl
fs
mov
push
xchg
inc
lret
adcl
jmp
or
pop
xchg
daa
mov
mov
cmp
add
jns
shl
loopne
pop
xor
out
inc
mov
fs
jp
mov
cmc
xor
adc
mov
fsubrl
jg
popa
aaa
add
adc
pop
notl
pop
test
mov
scas
and
sub
and
xchg
nop
and
push
imul
lahf
mov
sub
outsl
enter
rol
or
pop
dec
arpl
scas
jb
dec
shlb
fcomps
andb
test
std
arpl
pop
popf
or
leave
mov
test
lock
push
and
push
cmp
jp
xlat
add
call
adcw
and
and
test
les
out
pop
xchg
roll
pusha
aam
or
cltd
adc
arpl
mov
dec
fstpl
negb
jg
int3
adc
dec
cmp
cmpsl
cmp
mov
mov
mov
sub
sti
out
jae
rorb
ja
arpl
pop
std
call
ja
or
fidivrs
and
pop
xchg
testl
insb
pusha
ret
cs
push
rcll
out
sarl
sti
mov
stc
enter
xchg
dec
xor
fists
sarl
xor
adc
xor
test
mov
push
pop
or
fiadds
sub
data16
lret
mov
ret
rcrl
push
dec
mov
xor
xchg
jecxz
mov
test
push
mov
mov
adc
nop
mov
push
out
push
iret
cmp
dec
ret
jg
xor
adc
pop
clc
mov
push
cmp
pushf
pop
xchg
mov
jecxz
das
in
push
mov
int3
out
lcall
xchg
push
mov
out
lds
fsts
jbe
jmp
pop
repz
lods
jnp
jmp
and
aaa
frstor
cmp
pop
sub
test
aas
xlat
out
adc
mov
je
dec
lahf
jbe
mov
mov
arpl
pop
or
idivb
adcb
enter
dec
jnp
xchg
adc
xchg
push
scas
std
mov
or
pop
inc
das
push
les
ret
data16
fisttpl
divb
mov
lret
xchg
adc
cs
stos
test
out
jle
or
mov
sub
pusha
movsl
std
int3
sbb
sti
xchg
jmp
and
xchg
and
addr16
mov
mov
ret
stc
stc
stos
xlat
idivb
ret
xor
enter
insb
into
lahf
cmp
sub
imul
and
out
jmp
pop
addr16
push
cmp
mov
sahf
or
adc
jmp
jg
stos
dec
popa
lcall
gs
jg
cmpb
fisttpl
mov
shrb
sbb
sbb
enter
lods
xchg
add
sbb
insb
jae
xchg
lcall
push
subb
and
sub
sbb
sub
push
mov
movsl
push
sbb
pushf
xor
inc
jnp
sbb
xchg
mov
call
dec
xor
inc
movups
jge
fmull
sahf
pop
xor
cmpsb
and
jae
daa
daa
lahf
mov
cmc
ret
adc
lret
loopne
lods
xor
inc
jae
mov
push
or
ss
imul
mov
adc
ficompl
fwait
inc
or
out
mov
stos
mov
cmp
and
aad
sbb
mov
insb
lret
testl
push
jo
inc
push
icebp
and
mov
adc
xchg
lods
and
jl
cmp
xchg
inc
fcmovne
mov
shl
pushf
mov
sar
cmp
in
shl
push
mov
dec
mov
ss
xchg
mov
jb
lahf
sarb
and
jl
pusha
xchg
sahf
jns
cmp
dec
dec
mov
mov
int3
addb
lret
notl
mov
mov
xchg
mov
sbb
pop
mov
xor
outsb
xchg
fs
pop
cmp
inc
jbe
movsb
sbb
icebp
xor
mov
push
stc
mov
cs
cmp
or
nop
das
cmc
fdivl
xor
fcmovnbe
divb
movsb
enter
jecxz
cmpsb
add
inc
inc
loopne
jnp
xor
mov
fstl
shl
fdivp
mov
push
mov
sub
dec
dec
mov
add
pop
sahf
ret
out
xor
xor
adc
emms
mov
or
pop
mov
xor
jl
das
jmp
mov
jecxz
das
jne
inc
adc
cmp
inc
jmp
aaa
jge
mov
jb
ljmp
pop
pop
add
mov
mov
outsl
movsb
hlt
stos
call
imul
mov
push
jno
adc
cmp
outsl
cmpsb
jo
fwait
inc
mov
jo
push
dec
adc
or
sbb
jp
neg
cmp
sub
adc
sub
sahf
aaa
jl
addb
sbb
movsb
jp
mov
loop
cmp
cmp
sub
push
out
cmp
out
mov
mov
cmc
cs
in
or
inc
scas
mov
adc
mov
movsb
popf
test
adc
lcall
pop
imul
test
test
and
cmc
imul
popf
adc
pushf
sub
rorl
sbb
dec
std
lods
jne
sbb
addl
push
sbb
xchg
pushf
and
and
shll
or
js
pop
adcl
repz
fs
push
stos
cmp
stos
test
data16
ljmp
movaps
aam
pop
adc
push
into
stos
push
inc
pop
or
mov
ret
jge
jo
imul
sub
pop
into
clc
cmp
sbb
xchg
lods
movsl
mov
push
xchg
mov
mov
mov
add
arpl
jnp
or
xor
or
faddl
pop
rcr
cmpxchg
mov
mov
xchg
faddp
mull
xor
cmp
int
push
outsl
rcll
add
cmp
movsl
xchg
ficomps
sbb
xchg
push
jle
xor
pop
shll
cmp
insb
or
lret
out
sub
jge
lret
loop
push
push
lods
jmp
add
enter
mov
idivl
cmp
shr
xor
mov
stos
push
add
mov
mov
ljmp
mov
test
lds
or
scas
adc
sbb
out
pop
xor
pop
lahf
shlb
loope
lock
pop
leave
lcall
subl
insb
rorb
daa
arpl
shrl
push
in
pop
add
xchg
gs
in
loopne
outsb
xor
dec
rcrl
xchg
xor
cmpl
cmpsl
sub
xchg
cmpsb
test
rcrb
pop
xchg
adcb
lret
xorb
flds
imul
lds
mov
mov
mov
inc
fistpll
and
rcrl
sbb
xor
ljmp
cmp
mov
xor
cmp
jle
push
push
sbb
movsb
pop
xchg
gs
fiaddl
insb
ret
push
push
cmp
fwait
and
bound
test
xchg
push
inc
shlb
mov
pushl
mov
xchg
repnz
sub
das
lret
push
fildl
aad
fnstsw
inc
lods
inc
mov
add
mov
cmp
xor
dec
insb
jb
sbbb
lret
add
fs
xchg
aad
ja
lods
dec
fucomip
shll
mov
movsl
jmp
movsb
add
ror
sub
or
fwait
out
xchg
icebp
xchg
insl
cmova
xchg
sub
xlat
rolb
lds
cwtl
in
add
aas
outsb
jne
or
push
jmp
and
mov
imul
fsubs
lcall
aam
jbe
repnz
add
jns
imul
adc
outsb
adc
lock
hlt
lcall
mov
pop
nop
lret
adc
adc
loope
jo
mov
imul
mov
inc
pavgb
sbb
dec
mov
sti
call
js
sub
and
out
cmpl
add
mov
shll
int
adc
push
lds
sbb
sti
jnp
pop
adc
add
sub
cmp
rolb
push
or
nop
or
call
inc
inc
or
inc
loopne
xor
dec
int
mov
xchg
sbb
repz
ss
call
rcrl
dec
bound
lcall
sbb
enter
ss
xor
sub
pushf
inc
cmpsb
arpl
outsl
lcall
cmp
cltd
and
sbb
fidivs
pop
jo
cli
sbb
sub
je
in
sub
mov
mov
pop
push
les
jno
adc
mov
insl
mov
popl
cld
cmp
sbb
adc
dec
lahf
dec
push
ljmp
mov
in
imul
lds
dec
push
dec
lret
pop
imul
bound
push
fistl
cli
insb
in
loopne
fwait
icebp
imul
xchg
adc
repnz
add
je
xchg
sbb
sarb
xlat
push
mov
mov
adc
faddp
in
adc
jl
fisttpll
jb
jle
inc
pop
sbb
fwait
adc
cmc
fdivrl
push
mov
mov
lret
cs
add
add
aam
jb
popa
mov
sbb
loopne
adc
push
push
sbb
cmp
lret
test
mov
stos
mov
mov
mov
enter
fwait
fwait
jbe
push
jecxz
fisttps
dec
mov
sub
jle
mov
add
ret
test
ja
outsl
push
inc
push
fcmove
mov
pop
mov
sbb
loop
dec
push
lock
adc
sarl
fdivrl
in
pop
adc
or
mov
and
ds
shlb
sti
and
mov
cmpsl
mov
xchg
xchg
push
jmp
mov
mov
jbe
xchg
xor
xlat
jge
xchg
xchg
mov
xor
adc
jbe
inc
push
stos
mov
sub
ss
pop
mov
in
pusha
dec
negb
inc
roll
mov
aas
mov
ficompl
in
fbld
pop
lods
mov
xchg
sub
lods
push
push
js
mov
fisubrs
mov
inc
push
and
xchg
xchg
addl
pop
int
inc
cmp
sub
aaa
push
insl
pop
insb
pusha
sbbl
mov
mov
add
xor
insb
in
sahf
mov
in
notb
push
inc
or
arpl
jne
mov
mov
inc
mov
outsb
add
jo
inc
mov
in
inc
pop
push
sbb
xchg
lds
ds
adc
js
xor
xor
dec
imul
push
push
jp
mov
into
sub
sbb
rcrb
stos
push
xlat
sbb
js
inc
inc
or
lret
push
jle
add
push
lds
adc
shl
ret
jno
xlat
out
or
data16
out
hlt
sub
out
test
lret
cmpsl
pushl
mov
int
adc
dec
xor
pusha
add
notb
jge
pop
fstps
stc
pop
mov
jle
mov
jno
and
rorl
mov
shlb
mov
scas
mov
lds
leave
daa
jmp
fs
pop
dec
dec
adc
loope
push
aad
in
adc
inc
and
mov
sub
aam
mov
inc
int
jno
imul
add
fimull
rclb
or
out
mov
and
cwtl
xchg
arpl
xor
inc
dec
sahf
jns
sbbl
mov
and
mov
adcb
adc
cmp
or
xor
ds
mov
sahf
imull
shrb
sub
fwait
repnz
add
jecxz,pn
xchg
jle
iret
sarb
sub
stos
fcmovb
mov
mov
shll
cmp
test
cmpsl
jmp
mov
notl
mov
mov
mov
decb
inc
jmp
push
pusha
push
push
sbbb
fwait
xor
sub
inc
mov
ds
decb
push
xor
test
in
repnz
jae
and
out
push
ret
cmp
lahf
addl
loopne
add
mov
movsb
adc
aaa
or
mov
cltd
cmp
mov
xor
cltd
int
or
mov
inc
rcl
xor
pop
lret
int3
mov
arpl
daa
inc
push
push
pop
test
jl
dec
mov
or
loopne
sbbl
pop
sbb
adc
nop
popfw
cli
mov
adc
mov
mov
int3
pop
loopne
je
outsl
jb
sub
cmp
pop
lods
dec
movsl
sub
shlb
cmp
xchg
rorl
cmc
jle
mov
iret
xchg
sbb
xorb
addr16
add
inc
xor
mov
or
mov
xor
pop
leave
mov
test
jge
add
adc
cmp
jp
cmp
and
out
push
xchg
int
add
imulb
adc
cmp
jbe
hlt
outsl
inc
test
cld
scas
rcr
adc
aam
add
fsubrl
cltd
mov
hlt
push
pushf
mov
arpl
or
add
add
fisttps
nop
dec
mov
pop
jno
dec
add
add
push
push
or
sub
jmp
movsb
dec
xchg
mov
push
jbe
xchg
repnz
adc
lods
out
fbld
pop
rcrl
test
xchg
scas
xor
leave
sarb
xor
sbb
and
xor
out
inc
push
fadd
insl
shlb
jbe
sbb
push
pop
js
subb
test
ffreep
xor
in
jecxz
ret
data16
inc
add
mov
in
nop
push
lret
or
and
dec
stos
movlps
or
imul
pop
add
lods
xor
lahf
jbe
pop
fsub
dec
mov
repz
inc
lcall
add
jo
dec
push
xchg
in
aam
test
and
jp
add
pushf
pop
sti
cmpsl
out
ljmp
clc
inc
sub
js
repz
sbb
lret
adc
dec
stc
mov
ds
mov
jb
xor
mov
inc
jb
test
mov
imul
mov
cmpsb
jnp
es
sbb
into
sub
adc
adc
or
ljmp
mov
fcomps
test
dec
dec
dec
daa
inc
sub
mov
dec
repnz
xor
aas
lds
jno
pop
xchg
shr
cmpsb
inc
jns
out
cld
cmp
jae
divb
cmp
inc
js
ja
outsl
xlat
mov
cmpsb
pop
ljmp
pop
int
call
push
cs
in
xor
nop
mov
inc
jge
sub
fcmovne
pop
xchg
pop
imul
fldt
pop
scas
push
push
outsl
jne
ds
in
push
mov
je
andb
test
xchg
sub
sub
lods
push
xor
add
das
rcrb
mov
std
cld
lret
push
daa
mov
mov
and
sti
adc
and
cmp
lods
inc
jne
xor
icebp
jno
mov
inc
out
dec
fdivp
std
add
cmc
movl
jae
add
outsb
cltd
cwtl
mov
jmp
ss
push
add
popf
lea
push
cmp
arpl
cmp
mov
jb
fstpl
nop
ds
inc
mov
and
stos
sub
fidivrl
inc
mov
adc
cltd
adc
jmp
mov
inc
push
stc
mov
fmull
les
inc
fs
fdiv
sub
aas
rclb
sbb
xchg
xchg
and
testb
fwait
sahf
adc
cmpsl
test
inc
add
sbb
imul
inc
ret
das
pop
test
add
ds
dec
fsubs
inc
jns
adc
xor
lret
mov
adc
mov
enter
xchg
pop
in
push
dec
leave
shll
stos
jo
mov
lods
mov
xchg
fisttpl
repz
mov
add
pop
add
lret
mov
mov
push
notl
add
mov
inc
dec
add
jle,pn
loope
push
rclb
mov
mov
jl
cli
mov
cmp
aad
fisttpll
ds
push
aas
inc
mov
cmp
cltd
or
jns
movl
cmp
insb
push
xchg
cmp
out
mov
adc
xchg
subl
arpl
leave
xor
cmpsl
xchg
jne
sub
insl
jnp
sahf
repnz
inc
xchg
stos
sbb
lods
test
mov
jmp
jl
repnz
jmp
pop
cmp
pushf
add
je
pop
dec
cmp
sahf
divl
roll
ret
and
mov
xchg
imul
dec
pop
xor
jbe
or
dec
mov
fwait
push
call
inc
addl
int
cmp
insl
sbb
inc
pop
add
mov
xor
sbb
add
int3
fisttpll
scas
push
lret
mov
in
pop
mov
movsl
repz
sub
and
push
fisubl
xchg
loop
pop
adc
ret
jmp
mov
rclb
mov
cmc
mov
int
aad
in
stos
insb
cmovae
stos
mov
adc
test
in
mov
jne
dec
mov
loope
and
cli
dec
cmp
inc
pop
setne
mov
sbb
mov
xchg
or
mov
adc
hlt
dec
loop
test
mov
jg
mov
jge
mov
or
fwait
popf
mov
dec
mov
lret
push
ret
sub
push
jnp
shrl
cmp
dec
lcall
lahf
bound
sub
sub
leave
mov
add
mov
mov
ja
mov
test
lcall
mov
xor
mov
adc
push
in
dec
ss
cmp
aaa
mov
adc
inc
dec
pusha
push
jmp
popf
ja
repz
mov
leave
sti
test
lahf
rclb
in
pop
aaa
into
jecxz
cld
mov
push
push
dec
pop
jle
call
jmp
mov
cli
sarl
loope
into
push
sub
insl
cmp
outsl
std
out
iret
ja
push
aaa
add
dec
out
ja
aad
sub
sarl
loopne
sub
ret
cmp
subb
stc
dec
pop
add
inc
pop
addb
and
push
sahf
cltd
rcll
and
adc
cwtl
in
and
cli
mov
dec
cmp
push
jmp
test
lods
sub
and
xchg
in
xchg
insl
sahf
lcall
add
push
cmp
out
stc
js
insl
nop
or
push
or
ljmp
out
adc
cld
mov
xchg
mov
popf
jns
int3
test
test
mov
iret
cli
in
xchg
int3
adc
push
pop
pop
icebp
adc
add
sub
add
jmp
mov
pop
je
xchg
jmp
xor
ss
inc
imul
fadds
inc
push
das
adc
sub
or
out
dec
mov
cmp
mov
sbb
xchg
js
adc
movsl
cmp
inc
lret
aas
ja
outsl
shlb
and
int
inc
inc
lahf
sub
jbe
jb
sbb
jns
popa
cmp
inc
or
dec
in
rcll
sbb
pop
adc
mov
fbstp
fldl
cltd
popf
mov
sub
fadd
xlat
out
sti
sbb
fnstcw
in
or
into
cmp
pop
enter
mov
in
xrelease
xor
pop
cmp
or
dec
fsin
jecxz
aad
cmpsl
sub
or
pop
imul
test
xor
jmp
int3
out
add
sub
xchg
idiv
rorb
push
les
ljmp
push
cltd
dec
repnz
xor
xor
imul
lods
jmp
mov
xchg
xchg
fs
imul
push
mov
stos
push
iret
xor
fstpl
sub
imul
and
orl
pop
sub
and
stos
jp
out
je
je
imul
mov
mov
adc
andl
hlt
gs
jp
lods
jge
outsb
inc
sbb
mov
push
mov
out
fsubrs
pop
out
pop
jle
es
fcmovnb
mov
in
cmp
mov
leave
and
mov
nop
pop
mov
notl
mov
xor
movsb
xor
lock
movsl
mov
andl
pop
ljmp
cltd
fisubl
jo
shrl
jo
gs
andl
mov
dec
mov
inc
call
std
insb
sbb
pusha
mov
mov
arpl
push
mov
mov
sub
sbb
sbb
or
mov
enter
inc
mov
ret
ret
loope
icebp
rol
test
sub
lods
and
xchg
lods
xchg
loop
std
repnz
or
push
lds
cs
sub
xchg
inc
in
add
pop
cld
push
add
inc
mov
add
sbb
rcl
sub
enter
aam
push
sub
inc
add
xchg
and
mov
mov
lret
xor
xor
mov
pop
movb
stos
cmp
jno
fidivrl
out
jae
clc
loop
out
stos
xchg
leave
imul
push
mov
adc
ret
insl
cmpb
out
or
test
xchg
arpl
cwtl
sbb
mov
icebp
je
mov
adc
fcomip
inc
jo
add
sbb
xor
lock
push
xchg
fildll
loopne
insb
mov
cmc
lods
inc
cmp
and
xor
xor
adc
movsl
pop
inc
out
movsb
test
pop
jmp
ficompl
xchg
xchg
xchg
adc
into
xchg
mov
fmull
push
xor
lods
xor
lea
xor
push
or
or
mov
aas
adc
and
ss
sub
and
push
mov
sarb
lods
dec
add
fsubr
addb
lods
or
popa
ljmp
mov
mov
aas
push
cld
pop
fs
push
add
or
fistpl
xchg
mull
scas
push
mov
in
testb
ss
aaa
or
fnstcw
rcrl
lods
cmpsl
sub
mov
arpl
pop
fiadds
cmp
clc
add
or
pop
xchg
out
popf
cmpl
or
in
loop
xchg
push
popa
out
idivb
push
xchg
mov
mov
add
neg
mov
mov
jo
or
add
fiaddl
imul
pop
fcomps
mov
stc
inc
cwtl
xchg
dec
mov
mov
cvtdq2ps
adc
sbb
pop
jnp
test
pop
pushf
loop
sub
sub
repz
lret
jno
and
xor
enter
mov
repz
jmp
data16
xchg
push
test
jge
dec
xchg
xor
mov
sbb
mov
xorl
lret
fidivs
add
bound
push
test
mov
and
popa
mov
test
pop
jbe
dec
jb
sarl
sahf
out
jae
mov
adc
cltd
ret
inc
mov
push
fisttps
xchg
test
test
int3
aad
stc
imul
ret
cmpl
push
cmpsl
mov
pop
push
push
xchg
jnp
rcr
bound
ljmp
mov
fwait
int3
fsubrs
testb
xor
popa
dec
mov
sbb
loope
or
mov
xor
cmp
lods
jmp
jnp
push
xchg
mov
and
or
leave
in
and
mov
shl
fdivrs
cmpsl
sbb
ret
cs
cmp
int
pop
xlat
sahf
mov
add
pop
pop
shl
cmp
mov
fwait
hlt
lret
insb
xchg
mov
or
fbstp
in
das
push
jbe
insl
cmc
xlat
mov
adc
sarl
inc
lea
and
jbe
cli
mov
xrelease
lock
sbb
lods
adc
dec
fistpl
dec
dec
sub
lods
add
stc
ljmp
pop
shll
jle
push
stc
pop
incl
xorb
inc
add
cs
pavgb
in
ret
loope
sub
insb
rorl
imul
icebp
cmp
cmp
pop
jns
hlt
lods
loop
sub
es
out
sbb
push
mov
vaddsubpd
addr16
pop
and
mov
cltd
xor
xchg
xchg
jne
and
pop
leave
adc
inc
pop
fisubs
das
aad
les
sub
mov
scas
sub
mull
push
push
or
data16
sarl
mov
pop
mov
push
jmp
int3
cmp
xchg
add
repnz
andl
test
xchg
adc
jne
and
mov
adc
jb
sti
mov
dec
sbb
cmpsl
mov
aaa
and
out
mov
and
fwait
arpl
jns
sbb
inc
shrb
dec
pop
mov
subl
mov
xlat
imul
cmp
add
cli
jae
xchg
pop
mov
shrl
xor
adc
push
mov
sub
out
ljmp
in
pop
sbb
jno
lea
repz
scas
inc
cmp
fwait
add
cmp
mov
inc
sbb
dec
sub
cmp
pop
push
push
loop
out
ds
jno
cli
sbbl
outsb
roll
ret
sbb
cmc
je
nop
out
jo
cmpl
lahf
in
mov
add
pop
or
xchg
pop
rclb
idiv
out
or
add
es
push
scas
lret
stc
jns
push
fisubl
out
jge
lock
jae
cmc
push
negl
add
pusha
lods
pop
jnp
mov
mov
lods
lret
pop
shrb
clc
xor
clc
dec
xchg
jmp
fadds
inc
add
jge
pop
rorb
or
push
lds
mov
fisttpll
jne
jnp
adc
jb
test
cwtl
mov
sbb
mov
push
or
jmp
dec
and
xchg
stos
out
aad
ret
adcl
pop
push
push
lea
sbb
dec
out
stos
cmp
mov
addr16
mov
call
add
cltd
or
outsl
cmp
ret
inc
or
faddl
ja
jecxz
movsb
fcompl
push
sbb
and
movsb
jae
sbb
mov
dec
test
lock
mov
cmp
adc
shlb
or
faddl
repz
jne
cld
scas
cs
add
arpl
iret
fs
push
sbb
sbb
mov
lea
aam
pushf
shrb
xchg
data16
mov
inc
aas
pop
cmp
mov
jg
jb
lcall
pop
mov
int3
cmpsb
cltd
cmp
icebp
mov
mov
cmp
push
sbb
rolb
pop
lret
or
sbb
arpl
push
inc
cmp
pop
test
cmc
or
pop
push
dec
xchg
fnstcw
insl
push
jnp
daa
lock
ds
das
mov
pop
pusha
mov
adc
dec
mov
pop
mov
mov
cmp
pushl
xchg
pusha
add
cmp
inc
jae
rorb
std
icebp
or
add
jmpw
push
in
addr16
pop
jg
out
mov
adc
pop
lods
push
add
cmp
int3
mov
push
or
mov
push
pop
mov
mov
cmp
mov
stos
pop
pop
outsl
fistps
adcl
xchg
notb
dec
cmc
jmp
sbb
cmp
ds
inc
push
push
adc
cmp
cmp
movsl
mov
js
lret
shlb
mov
sbb
enter
push
cmpsl
push
mov
inc
movnti
and
push
movsb
cmp
ret
fucomi
and
xchg
cld
stos
pop
dec
iret
rcrb
pushf
lea
lods
lock
pushf
mov
cs
pop
cmpb
add
dec
inc
dec
fisubl
inc
xchg
outsl
mov
test
in
xor
test
xchg
inc
adc
inc
insb
scas
inc
divb
aam
adc
mov
jnp
bound
mov
pop
adc
inc
or
inc
or
cwtl
cmp
movsl
rol
or
jp
imul
data16
rcr
imul
daa
je
jae
data16
in
mov
sti
shl
push
or
pop
cmpsb
cltd
enter
xor
pop
iret
and
pop
ficomps
ljmp
xchg
es
pop
lods
sbb
imul
sub
and
lahf
jno
ret
mov
aad
lcall
pop
pop
mov
push
aaa
adc
pop
inc
sbb
imul
in
clc
stc
xor
jo
push
daa
push
xchg
jnp
and
int
push
test
fildll
les
nop
loopne
cli
int3
and
rol
push
and
lret
arpl
rorb
sub
xor
or
icebp
pop
push
cwtl
pop
or
add
arpl
cmp
mov
out
subb
fwait
fwait
cmpsl
out
loope
push
test
fbstp
pushf
aad
mul
push
push
mov
sub
test
and
nop
jmp
aaa
mov
pusha
out
sahf
or
lods
orb
mov
mulsd
cmp
loopne
pushf
xor
push
xor
mov
add
mov
pop
mov
in
or
mov
pop
test
push
xor
ljmp
movsl
cmp
popa
mov
cmp
xchg
stc
fs
xor
int3
rcrl
adc
adc
push
or
or
pop
inc
sbb
stos
in
jnp
or
loope
notl
fimuls
adc
push
std
in
sarl
call
add
pop
push
inc
jge
or
decl
bound
pop
fwait
and
jle
ficoml
or
dec
loop
sahf
mov
jge
mov
js
pop
cmp
lds
jle
out
std
stos
pop
or
and
add
test
fdivr
mov
rorl
mov
xor
std
xchg
push
mov
cltd
xor
jo
adc
xlat
jg
push
rcrb
dec
dec
or
adc
jae
and
pmaxub
xor
inc
fstpt
test
icebp
jne
shl
stos
in
mov
dec
mov
rolb
imul
or
dec
add
test
xorb
lock
and
mov
int
push
mov
xor
test
fadd
push
jb
sub
sbb
mov
enter
pop
mov
inc
pushf
ljmp
xchg
mov
jmp
mov
out
and
int3
movsb
xor
jo
xor
das
push
pop
sbb
outsl
xchg
xchg
clc
sti
loopne
arpl
shll
push
xchg
out
pop
popa
sbb
xchg
jno
cltd
stos
cmp
lds
push
sbb
pop
fdivp
addr16
cs
fbld
gs
aam
pop
nop
jmp
or
xchg
enter
pop
sbb
push
insb
rolb
outsl
arpl
mov
movsb
inc
hlt
ret
inc
mov
js
andb
sti
and
pop
cmc
mov
pop
into
xor
sbb
mov
or
inc
movsl
ds
dec
addr16
cwtl
mov
mov
out
fcom
xlat
aam
shrl
dec
into
cltd
hlt
dec
imul
popa
pop
inc
aaa
inc
xchg
push
sbb
out
mov
push
ss
shlb
loope
testb
icebp
fs
ljmp
aad
ja
fs
add
mov
mov
pop
imul
pop
mov
test
cmp
call
daa
jl
dec
sub
mov
mov
or
loope
sbb
push
jp
jg
test
push
lea
or
icebp
std
or
enter
cmc
mov
je
jb
test
outsb
popf
sub
xlat
rolb
loop
and
test
jns
or
push
pushf
adc
cmp
sti
cs
jbe
iret
add
add
xchg
pop
cmp
nop
and
imul
daa
lret
xor
aam
adc
daa
fs
adc
add
jge
add
es
cld
outsb
test
mov
test
xor
push
mov
lea
mov
testb
out
ffree
bsf
pop
mov
mov
lock
ja
jle
cld
nop
jge
inc
ds
mov
cmp
stc
addl
xor
mov
cltd
ret
arpl
lret
nop
push
test
cmpsl
in
lea
sbb
sub
xor
out
cltd
xor
test
repnz
int
out
sub
insl
std
sahf
gs
outsb
cld
push
mov
cs
pop
imull
int
je
or
rcrb
and
outsb
push
dec
pop
hlt
add
sub
push
outsl
rcr
or
jmp
add
mov
inc
add
adc
cwtl
gs
fidivrs
xchg
loope
insb
insl
dec
inc
jle
xchg
shlb
out
mov
push
fnstsw
outsl
ret
sub
psubq
lds
pop
sbbl
xchg
lods
imul
mov
ja
scas
jl
int3
add
aam
into
mov
and
xchg
cld
fprem1
sub
pop
xchg
jg
aad
push
jb
pop
or
push
pusha
pop
lcall
call
cmp
add
ds
adc
adc
out
xor
js
shr
inc
pop
xchg
pop
pop
jl
and
shr
bswap
out
sbb
add
xchg
sti
pop
scas
ss
fs
loop
push
inc
jno
movb
lcall
dec
cltd
pushf
adc
sti
movsb
idivb
das
xorl
push
enter
inc
cmpsl
jle
xchg
pop
and
add
pop
cmp
xchg
test
xchg
fimuls
xor
fxch
push
adc
mov
lds
push
cmp
sbb
mov
push
loopne
cmp
out
nop
sub
xchg
iret
mov
out
sbb
jbe
and
fbld
xchg
popf
addr16
ss
out
mov
ljmp
sbb
das
push
arpl
hlt
rcrl
mov
clc
xor
push
cli
iret
jne
or
int3
frstor
stos
adc
push
fucomi
cltd
dec
inc
pop
or
leave
scas
mov
in
add
sbb
imul
aam
mov
inc
adc
std
add
test
inc
movsl
mov
pop
shl
cmc
shrl
mov
mov
sbb
nop
or
xchg
jg
pop
shlb
ja
dec
stos
filds
int
xchg
xchg
pop
dec
cmpsl
jns
das
pop
test
add
mov
fnsave
inc
xchg
ss
loop
mov
jmp
in
outsb
pop
or
or
mov
mov
mov
es
push
jbe
dec
jno
iret
cmpsb
push
xor
mov
test
mov
or
stos
movl
xchg
outsl
fidivl
sub
cli
in
jecxz
inc
dec
rep
sub
adc
jecxz
idivl
inc
in
pop
dec
mov
inc
js
mov
dec
je
xchg
mov
daa
ja
outsb
cmp
pop
aaa
jl
pop
fsubs
mov
lcall
mov
pop
cmp
fadds
icebp
push
subl
dec
dec
jb
cld
test
pop
ss
imul
mov
notl
xchg
inc
mov
insb
pop
push
jb
jbe
bound
rcr
dec
jo
testb
push
and
xchg
nop
hlt
mov
cmp
mov
pop
enter
cltd
imul
push
aas
or
mov
jmp
fcom
daa
push
xchg
mov
sub
shr
mov
loope
mov
aam
iret
mov
es
out
inc
jno
inc
in
mov
pop
push
scas
mov
mov
xor
mov
add
cmp
cmp
xlat
les
lret
test
sub
and
out
xchg
jmp
std
inc
aad
iret
pop
fadd
mov
adc
stos
pushf
shrb
push
in
popf
jmp
cmp
xchg
pop
and
jp
rorb
cltd
mov
add
popf
jno
ret
mov
mov
fldt
pop
sar
fdivs
lcall
outsb
in
adc
push
cld
mov
pop
mov
mov
lods
cli
adc
adc
scas
stos
fdivrl
cmpsl
push
sub
fstp
inc
mov
mov
ljmp
dec
adc
dec
ja
inc
call
shrl
cmp
cld
adc
imul
xlat
data16
mov
in
scas
in
call
and
adc
sub
aaa
in
push
add
lret
adc
cmpsl
jp
aaa
mov
add
lcall
sbb
or
rolb
xchg
sti
cmp
cmp
call
repz
stos
mov
or
mov
dec
mov
mov
adc
das
movb
pop
aaa
in
jo
push
aas
fstp
and
loope
mov
imul
leave
loop
leave
int
dec
fs
mov
or
pop
fisttps
xchg
daa
cwtl
mov
out
push
fbld
sbb
push
push
push
dec
lahf
rolb
jle
leave
sbb
dec
jno
pop
loope
js
mov
sarl
sub
addl
cltd
stos
loopne
add
cli
jne
imul
mov
and
mov
sahf
push
mov
cld
mov
test
jb
stc
ja
jmp
fiaddl
jae
cmp
push
push
loope
xchg
aad
pop
mov
sub
pop
inc
jbe
psllw
xchg
mov
jae
enter
rclb
cmp
aas
rcrb
dec
pushf
sahf
in
mov
fidivl
lcall
inc
fwait
pop
cmpsb
sarb
and
dec
pop
js
cmp
movsb
mov
out
mov
popf
xchg
pop
cmp
cmp
stos
imul
gs
xchg
sub
aaa
or
mov
sub
push
mov
int3
sahf
add
inc
das
jo
or
sbb
out
or
movsl
movsb
testl
sub
adc
fbstp
cmc
sbb
dec
jg
stc
push
test
mov
push
icebp
pop
inc
ret
jge
test
mov
and
jp
dec
sti
loop
outsl
push
add
sub
xchg
dec
lods
adc
rorb
mov
js
loopne
jl
or
fnstenv
imul
xor
sbb
pop
sbb
js
push
adc
lret
push
or
lea
mov
pop
mov
push
es
cmpsb
or
sti
out
cmp
ss
cmp
dec
loop
aaa
in
mov
imul
jo
mov
insb
pop
push
aad
cmp
or
sbb
xchg
mov
fnstcw
jmp
ffreep
call
jae
pop
add
inc
xor
sti
sbbl
out
add
xor
call
mov
int
call
sahf
fistl
add
or
cmp
add
push
enter
jle
pop
hlt
or
jbe
jno
add
dec
jg
mov
sbb
fsubrl
adc
inc
pop
in
leave
testb
lea
jbe
and
lcall
fdivs
dec
ds
dec
cwtl
lock
cmpsl
int
push
les
int
jae
pop
add
mov
mov
dec
push
mov
pop
pop
imul
stos
push
mov
mov
mov
pop
movsl
insl
cmp
jns
stos
adc
adc
fnstenv
jb
adc
mov
sub
das
fwait
jno
inc
fistpll
pop
push
sarl
jns
xor
mov
push
cs
xchg
mov
lcall
cmc
repz
push
jns
lea
pop
in
addb
pop
dec
fists
cmp
pop
add
mov
int3
mov
mov
add
pop
adc
gs
in
dec
cs
mov
mov
inc
fnstenv
add
lret
push
fistps
or
test
aam
ja
pop
xchg
ss
ds
mov
nop
iret
mov
jecxz
jb
xlat
xchg
pusha
into
cs
or
lret
jb
out
pop
aaa
xchg
test
push
push
aad
xchg
lods
dec
or
out
ds
dec
adc
sub
out
ss
fcoml
lcall
andl
xchg
inc
pop
or
stos
push
xchg
mov
andl
dec
test
pop
and
int
mov
fwait
scas
or
adcl
lahf
xchg
push
orb
fildll
pushl
or
jp
sub
leave
outsb
xlat
pop
jns
fstl
popa
push
lods
sub
xchg
mov
shrl
xor
popf
nop
cmpb
mov
je
jg
cmp
test
inc
push
fwait
xchg
dec
loop
cmp
xchg
pusha
les
dec
push
mov
mov
sub
ljmp
mov
xchg
dec
xor
inc
aas
sbb
into
mov
sti
dec
inc
jns
shl
aas
jns
add
mov
jo
lock
fisttps
xchg
jb
test
xor
sub
adc
push
scas
repz
bnd
mov
mov
rcr
dec
mov
mov
ret
daa
sub
inc
push
arpl
nop
mov
js
stos
les
aaa
in
lret
and
inc
adc
mov
mov
mov
hlt
jl
mov
sbb
sar
mov
cmpsl
pop
xchg
sub
outsb
out
sbb
cs
in
mov
test
sbb
js
jmp
fisttpl
inc
out
mov
sti
test
repz
inc
outsb
fnstsw
loope
and
imul
cmc
shll
jp
pop
jo
push
xchg
jns
dec
aas
icebp
mov
test
or
mov
jno
xchg
dec
out
shr
adc
adc
aad
xor
sbb
xor
popa
fwait
ret
mov
adc
test
je
negb
fldcw
or
push
xchg
fistpl
ljmp
andl
push
xor
add
out
pusha
or
mov
sti
les
hlt
dec
jge
xchg
xor
cmp
mov
movsl
bound
add
sti
inc
sub
stos
in
add
lods
hlt
sbb
or
std
jmp
data16
repz
clc
iret
push
dec
mov
aad
mov
xchg
push
clc
sub
push
in
cli
mov
lahf
and
mov
imul
ss
sti
and
aad
loop
test
and
jne
inc
pop
dec
mov
sub
jnp
push
scas
jb
mov
push
xchg
and
iret
and
sub
maskmovq
mull
xlat
fsubrs
mov
sub
nop
add
sbb
add
shlb
in
and
imul
push
cld
movsb
xor
fldt
mov
nop
orb
insl
scas
xchg
decl
jo
xchg
xchg
popa
stos
mov
mov
pop
mov
push
std
push
lods
jl
sub
jne
adcl
pop
inc
lret
dec
movsb
or
dec
clc
adc
jmp
std
xchg
ret
mov
lock
cmp
mov
in
icebp
cli
sarl
fs
pushf
mov
mov
je
inc
lahf
int
push
out
enter
adc
and
in
add
jecxz
adc
jo
jb
cmp
sbb
sbb
ss
insb
xor
lret
jg
mov
ss
inc
pusha
lock
movsl
adcl
sub
xchg
or
cmp
popf
and
lret
sarl
shlb
inc
inc
mov
sub
push
dec
bound
movsb
push
adc
sbb
lods
enter
fstl
pop
imulb
push
adc
cld
lret
cmp
popf
out
push
xchg
and
movsl
lret
loope
fiadds
push
dec
sbb
fisubl
mov
cmp
mov
xor
stos
and
andl
rclb
fisubrs
mov
mov
movsb
out
and
mov
mov
inc
and
push
into
sub
mov
pop
mov
mov
push
shl
mov
and
xchg
push
mov
aas
cmpsl
orl
push
test
push
mov
mov
shlb
ja
cmpsb
mov
or
sahf
cmp
je
je
cmp
mov
sbb
and
js
xchg
xchg
out
scas
mov
aam
xchg
or
testl
scas
push
fisubl
jmp
push
cmp
dec
divl
cmp
pop
mov
sbb
xorl
leave
lock
or
icebp
aad
test
enter
push
je
jo
enter
dec
mov
lahf
ja
shlb
data16
pop
cltd
xor
pop
shrl
push
sbb
fldl
sbb
mov
inc
mov
jnp
xlat
lods
push
in
or
pop
inc
cwtl
inc
sub
mov
jb
and
mov
cmp
out
loop
mov
sbb
xor
jge
mov
clc
mov
mov
push
inc
scas
inc
fincstp
loopne
loop
lcall
rcll
adc
cmp
arpl
fdiv
movsb
dec
and
cs
orb
cwtl
lea
shlb
add
test
pushf
dec
mov
inc
jp
out
add
and
mov
pop
flds
xor
xor
fdivs
pop
push
popf
mov
sbb
or
lds
xor
cmpb
cwtl
aas
inc
jo
or
popa
mov
in
pop
std
mov
jmp
filds
push
lods
pop
mov
adc
dec
adc
lahf
nop
adc
push
out
insb
sbb
orl
stos
inc
and
add
movsb
rcll
inc
pop
cmp
leave
pop
jp
inc
lods
dec
dec
sub
arpl
jae
jecxz
mov
pop
pop
enter
test
cmp
cmp
iret
mov
mov
cmp
fsts
ds
add
cmp
or
xchg
dec
cmc
movsl
outsl
cmp
push
inc
test
cwtl
jno
push
sbb
jae
cld
xor
jp
das
mov
sbb
mov
add
fs
sbb
add
sti
test
fsubl
ret
data16
inc
push
and
xor
cmp
inc
fsts
leave
ret
sbb
ret
gs
outsb
loop
sbb
mov
mov
mov
fstpl
sub
fwait
pop
xor
push
xchg
mov
jmp
xlat
in
push
aam
mov
jmp
pop
xchg
sub
out
lods
push
sub
nop
cmp
adc
jle
ret
data16
mov
test
imul
fcom
insl
and
or
cmp
push
cwtl
sbb
stc
jne
pop
jp
imul
hlt
add
aaa
xchg
dec
xchg
in
shl
lahf
fistpll
dec
aas
repz
movsb
and
mov
and
jmp
mov
dec
pop
sub
or
mov
call
js
xlat
and
lcall
leave
cld
adc
cmp
xor
fimuls
add
sbb
push
dec
sub
jl
repnz
insb
je
jle
shlb
xor
mov
test
push
mov
loopne
sti
dec
or
pop
inc
jns
enter
lods
dec
pop
addl
pop
out
dec
je
popa
mov
push
sar
out
jb
shrl
push
dec
inc
insl
pop
pop
add
mov
popa
sub
pop
testl
dec
gs
pop
and
in
je
fmuls
sbb
and
mov
sub
ja
rcrb
or
push
std
add
xor
in
and
stos
sbb
push
cwtl
jb
xor
out
fdivl
mov
push
in
or
sbb
pop
xchg
mov
inc
mov
imul
sbb
adc
in
aam
adc
push
mov
testb
cwtl
mov
scas
aad
shlb
es
std
xor
test
and
fcmovne
cmp
pop
jbe
inc
and
dec
xchg
inc
inc
jns
lods
sahf
fs
cld
repnz
mov
inc
mov
in
lea
dec
inc
inc
sub
jne
addr16
mov
pusha
rcrl
int
mov
pop
mov
adc
push
shll
dec
test
sbb
sbb
pusha
cs
in
mov
fwait
jno
lea
mov
pop
add
sub
jnp
sbb
and
test
testl
push
jle
outsb
or
xchg
jg
cmp
jne
add
dec
dec
mov
jge
cmp
cmpsl
mov
push
xor
push
fistpl
sbb
cwtl
imul
jbe
cmp
inc
cwtl
inc
mov
sahf
fcomps
scas
pop
jge
dec
scas
sbb
add
imul
mov
inc
sub
push
repz
test
push
js,pn
lcall
movsb
jl,pn
and
cmpsb
xor
cmp
and
jmp
and
rcrl
leave
add
loop
mov
enter
loope
bound
movsb
sbb
stos
sub
fisubs
stos
andb
outsl
jo
rcll
xor
sub
inc
xor
mov
sbb
es
ljmp
arpl
cmp
lahf
push
xchg
pushf
popa
jb
popa
in
push
enter
sbb
imulb
leave
or
jns
lods
xor
jns
sbb
xchg
mov
insb
mov
jmp
xchg
js
cmp
or
adcb
enter
adc
adc
jl
mov
inc
xchg
mov
test
inc
jg
jns
cmpsb
bound
pop
adc
add
leave
add
pop
mov
addr16
subb
fcmovne
jl
xchg
xchg
inc
ljmp
add
pop
cwtl
out
jl
test
inc
stc
and
mov
sub
pusha
push
out
xchg
mov
clc
lds
jge
orb
cmpsl
dec
jg
je
and
fidivs
mov
js
xchg
jge
xchg
xchg
stc
mov
test
aas
fs
jecxz
in
enter
inc
stos
dec
les
lock
rorl
iret
jp
inc
jle
lds
mov
push
mov
into
jnp,pt
jg
jb
push
xor
jne
cmp
popf
xchg
pop
lods
inc
out
lcall
or
push
push
shll
dec
dec
arpl
or
push
hlt
inc
push
fmuls
sahf
data16
mov
sbb
xchg
stc
xchg
mov
fsubrs
add
xchg
jle
mov
pop
dec
cwtl
les
cmp
dec
dec
lahf
mov
ret
lock
and
lcall
or
dec
orl
xchg
dec
notb
jnp
xlat
test
lcall
in
dec
jbe
ret
cmp
sub
sbb
cltd
leave
cli
cmp
sbb
jno
mov
push
lea
rcrb
and
pop
pop
xchg
jb
imul
dec
jno
mov
xchg
cmp
and
push
test
cmp
adc
int
hlt
aaa
pop
and
cmc
sub
jo
mov
jno
xor
imul
lea
cmp
pop
xor
stc
clc
inc
jns
out
mov
mul
or
mov
out
testb
roll
imul
dec
mov
xchg
insl
mov
icebp
sahf
sbb
mov
stos
cmp
mov
jnp
add
data16
dec
adc
ljmp
movsb
xchg
xchg
push
xchg
mov
rcl
sbb
mov
cwtl
add
jp
pcmpeqd
and
jecxz
dec
xorb
dec
and
pop
push
or
mov
mov
scas
mov
add
sbb
push
cli
imull
in
jns
mov
daa
add
mov
and
cld
adc
mov
hlt
pop
sahf
jle
in
sarl
sahf
sub
jle
cmp
nop
or
lahf
inc
jecxz
dec
mov
lret
out
push
mov
push
jl
pop
icebp
sub
clc
mov
push
ss
mov
ret
dec
ja
into
sahf
push
mov
out
repz
fwait
lahf
aaa
fstpl
inc
xchg
sbb
pushf
mov
xor
inc
cmc
sbb
es
cltd
rcll
test
adc
adc
sbb
inc
iret
ljmp
xchg
stos
in
aaa
inc
jb
push
jmp
jmp
xlat
or
rol
mov
fidivrs
mov
imul
mov
lret
sti
imul
xor
fcomp
mov
dec
and
mov
xchg
and
mov
dec
mov
clc
xchg
xchg
xor
xchg
mov
movups
daa
mov
cmpsb
adc
aam
mov
push
je
mov
js
rcrl
sbb
loopne
xor
jns
jne
cmp
xor
push
repz
gs
mov
pop
hlt
xchg
aam
fnstsw
ror
bnd
mov
movsl
or
bound
stos
jb
cmpsl
push
add
gs
lods
jecxz
adc
scas
out
dec
imulb
jmp
jae
pusha
sbb
inc
jne
imul
mov
dec
push
int3
pop
mov
mul
scas
adc
xchg
stos
sbb
xor
pop
and
xchg
fcoms
stc
mov
xchg
mov
cmp
xchg
cmc
dec
mov
cltd
fistps
mov
lods
mov
pusha
dec
out
xor
mov
xchg
test
adc
or
iret
imul
pop
ret
pop
rclb
inc
imul
lahf
mov
sub
adc
sbb
fildl
fs
pop
push
xor
fs
cld
pop
mov
mov
lock
daa
or
hlt
outsl
mov
cwtl
fwait
mov
add
sbb
stos
adc
and
incb
and
mov
mov
out
push
and
mov
lret
adc
sbb
int3
enter
insb
jne
sbb
xchg
ret
aas
das
fs
pop
jle
lret
pop
push
xor
js
inc
es
pop
lea
and
imul
push
inc
cmp
xchg
ret
sbb
sbb
jo
or
pop
or
cld
sbb
lods
mov
jmp
mov
dec
adcb
imul
xor
sbb
mov
addr16
sbbb
adc
cmp
push
xchg
mov
or
sbb
sbb
inc
das
and
xor
mov
sbb
jmp
adc
mov
aas
or
daa
jl
pop
and
movsl
and
mov
movsl
push
pusha
xor
outsl
dec
xor
mov
and
bound
jg
pop
xchg
mov
jae
jmp
push
mov
filds
sub
sub
mov
jne
xchg
fsts
inc
stos
jmp
test
sahf
xchg
icebp
adc
cmp
push
leave
movsb
pop
cmp
and
jg
call
and
daa
mov
mov
jnp
push
test
shlb
cmpsl
imul
lods
jg
sbb
lret
mov
mov
loope
jp
sub
mov
jg
fmul
xor
dec
cli
inc
pop
icebp
or
sbb
sbb
jl
mov
xor
jmp
in
adc
push
pop
xor
xchg
lods
sub
push
dec
or
outsl
jecxz
sbbb
fimuls
jle
hlt
cmpsb
stos
jecxz
mov
ret
stos
imul
pusha
xchg
test
mov
daa
or
sarb
dec
std
pop
jp
cmp
loop
jge
pop
cwtl
test
aas
imul
inc
add
fwait
mov
push
lea
jnp
in
shlb
push
insb
xchg
cs
test
push
pusha
loope
xor
adcl
scas
hlt
jae
popl
mov
pop
jbe
cwtl
iret
and
push
addr16
jno
repnz
fwait
mull
add
aaa
and
or
insb
scas
std
or
fildl
xchg
lcall
jns
mov
nop
andl
in
cld
fwait
enter
aaa
mov
enter
xchg
inc
jp
lret
arpl
jae,pt
enter
cmp
aas
sub
and
fimuls
test
out
lret
jge
mov
jmp
inc
jmp
jp
jmp
fbld
or
sbb
cld
mov
fsubl
dec
jae
in
hlt
sub
cmp
xor
cmp
mov
mov
lea
test
arpl
aam
mov
and
notb
jl
cmpsb
or
out
cltd
mov
add
lcall
or
subl
jmp
js
daa
icebp
pop
mov
fcoml
lods
xchg
cmp
repz
movsl
mov
cmp
dec
lret
dec
lret
jb
sub
movsb
or
inc
cli
test
jmp
and
fdivrl
jg
pop
lret
xlat
add
adc
cmp
dec
popa
pop
pop
dec
lds
mov
cmp
fwait
sub
in
fisubrs
xchg
loope
lea
inc
rorb
loop
jb
sub
in
orl
es
adc
mov
adc
pop
mov
out
sub
fldt
cmp
ja
lret
aad
into
xchg
push
pop
ds
loopne
in
shr
push
loop
pop
adc
mov
pop
dec
pop
inc
cmp
xchg
lods
xchg
icebp
jb
stc
int
enter
fstpt
jp
cwtl
in
adc
push
push
data16
jmp
sbb
push
repnz
out
push
fnstcw
cld
jl
xchg
pushf
lret
outsl
mov
pop
imul
lcall
mov
notl
fisttpl
inc
cs
cmp
out
xor
push
push
das
or
out
jnp
arpl
and
add
aaa
mov
repz
shrl
fcmovne
push
or
pushl
cmp
push
add
sub
pop
adc
xchg
hlt
jae
test
pop
rcl
and
out
movsl
xchg
pusha
fmuls
adc
cmp
inc
jb
jmp
mov
movsl
movsl
cld
mov
cmpsb
cld
outsl
xchg
les
sbb
orl
cmp
sub
cwtl
stos
pop
jae
test
cmp
loopne
call
sub
ljmp
ret
or
mov
pop
subb
lret
jb
mov
or
push
lmsw
mov
or
mov
mov
mov
int
pop
in
mov
mov
sbb
and
push
dec
lock
jl
mov
popf
sub
jnp
test
add
mov
mov
push
and
add
sarb
imul
shrl
mov
imull
imul
adc
cmp
cld
icebp
push
test
push
xchg
lds
dec
out
lods
jmp
push
add
sbb
push
loop
pop
iret
stc
mulb
das
jp
mov
leave
sahf
mov
call
inc
mov
inc
aas
mov
outsb
mov
dec
ds
xor
fdivrl
xor
jp
jp
stc
jne
push
jns
mov
mov
ljmp
outsb
and
int
dec
ss
mov
push
xlat
fildl
lahf
add
hlt
adc
mov
inc
jmp
pop
inc
jne
shll
test
ds
sub
inc
push
shlb
jae
jne
outsb
push
jp
cltd
cwtl
add
out
je
mov
icebp
mov
adc
adcb
testl
ljmp
das
sbb
cmc
arpl
decb
and
ds
mov
sub
test
push
addb
addb
scas
call
xchg
in
sbb
sbb
sub
push
sbb
push
sub
mov
push
or
dec
sub
xchg
push
std
fwait
sbb
xor
repnz
movsl
and
xchg
cli
adc
aas
jno
jg
xchg
sarb
pop
xchg
add
push
xchg
mov
mov
or
out
mov
inc
jmp
lahf
push
pop
xor
ja
cmp
cmp
out
xor
fdivl
dec
sub
adc
jae
mov
inc
add
repnz
push
imulb
shll
loopne
stos
inc
mov
popa
addr16
xchg
pop
cmp
adc
mov
nop
xor
fldl
ret
out
fimuls
in
arpl
inc
pop
inc
rcr
lcall
loopne
inc
das
fisubrs
fsts
fisttps
and
les
dec
inc
les
out
cltd
jmp
push
dec
mov
mov
ficoms
loopne
jle
push
out
insl
and
adc
mov
pushf
push
sar
mov
popa
fucomi
or
fidivl
ss
cs
lcall
std
and
addl
cld
xor
fdivrl
sub
in
rol
push
stos
xchg
leave
bound
clc
mov
incb
mov
loope
mov
and
stos
popa
in
idivb
sub
push
and
add
mov
jle
nop
fs
test
cmp
xchg
ret
sahf
jno
andb
mov
mov
push
out
fadds
pop
ficoms
inc
lock
mov
jo
lock
pop
loope
imul
sbb
or
sbb
mov
sahf
fcmovb
sbbb
cmp
sbb
fldcw
cmp
mov
cld
xor
cltd
in
jno
addr16
mov
les
push
mov
mov
repnz
std
loope
jb
fldcw
and
pop
rorl
test
jne
xchg
jae
push
jg
cmpsb
cmp
sbb
or
cld
test
insb
loop
mov
and
dec
sbb
xchg
jbe
xchg
pop
push
mov
mov
addr16
jbe
fs
mov
insl
aam
bound
pop
dec
xor
and
sbb
aad
sbb
lahf
fbstp
aam
rclb
jp
lea
add
popa
mov
xlat
imul
mov
clc
ja
or
mov
jmp
divl
cmp
or
xor
push
daa
push
push
mov
dec
pop
mov
cmpsl
dec
and
jb
or
xor
movsl
xorl
mov
push
pop
mov
cmp
push
push
js
adc
push
loop
xchg
test
jle
adc
out
fiaddl
icebp
pop
fcomps
cmpsb
mov
inc
cmp
lods
dec
cld
loope
xor
adc
std
pusha
mov
cmp
shll
daa
icebp
in
loopne
out
mov
pusha
aam
sub
call
or
dec
pop
ds
pop
in
pushf
pop
out
push
stos
push
xchg
xchg
cmp
aad
xor
mov
in
push
imul
sub
dec
push
call
pop
stc
repz
xor
test
repz
jb
enter
fxch
inc
cwtl
dec
xor
gs
inc
enter
add
xor
push
stc
xchg
adcl
and
loopne
call
add
iret
adc
sub
faddl
mov
mov
int3
leave
cs
lea
jno
pop
sub
sbb
jle
lods
jmp
or
test
jmp
sub
mov
les
push
cmp
pop
lret
push
mov
int
mov
enter
inc
pushf
add
sarb
mov
sub
push
cltd
add
scas
ret
or
adc
movsl
xor
cmp
sbb
int
mov
xor
ja
sub
outsb
push
xor
mov
fistps
daa
test
adc
pop
fcmove
cmpsb
sarl
js
push
jecxz
mov
dec
mov
iret
push
xorb
xlat
xor
sbb
push
push
mov
das
xchg
push
pop
jno
jecxz
mov
icebp
xor
iret
sbb
sbb
and
pop
mov
inc
gs
xchg
cmp
in
adc
repz
outsb
mov
add
iret
nop
vmovdqa
xlat
arpl
and
push
inc
jae
mov
stos
push
sub
fldt
idivb
adc
leave
dec
pop
ds
aaa
xchg
sbb
add
cmp
cli
inc
aas
dec
insb
cmove
fcoml
sub
push
lcall
sbb
sti
aaa
lret
addr16
push
outsl
xchg
fbstp
mov
push
sub
ret
aaa
mov
push
xor
int3
inc
icebp
push
and
ret
lret
ja
sub
xor
mov
fcmovnbe
push
sub
sbb
cltd
jb
mov
push
push
cmc
add
daa
adc
out
dec
aaa
fsubrs
jb
xchg
pop
xchg
mov
mov
pop
xor
popa
pop
or
les
and
movsb
ret
call
mov
ret
inc
aam
add
lock
stos
jge
jle
into
jge
mulb
jecxz
push
pop
mov
out
xchg
and
dec
outsb
dec
mov
mov
lock
bound
jbe
mov
mov
xchg
xchg
js
out
out
rcr
xor
es
add
push
and
inc
rcrb
loopne
fisubs
push
push
adc
jl
mov
xchg
cltd
out
mov
lahf
insb
xchg
imul
adc
movd
sbb
in
in
insl
pop
mov
jecxz
outsl
push
mov
popf
mov
aaa
test
cs
lret
aad
ja
cmpsb
test
aas
enter
movsb
mov
aam
pop
sub
jbe
mov
ficoms
pusha
ret
aaa
hlt
push
lret
inc
add
nop
in
aas
push
ss
dec
scas
arpl
and
int3
stos
jae
cld
dec
xchg
mov
fucomi
push
mov
stos
lret
mov
push
pusha
std
sbb
cmp
fsts
jl
lret
shll
lds
in
mov
aam
jle
sahf
push
jno
jno
stc
pusha
inc
add
and
aam
pop
int3
bound
arpl
and
out
sub
inc
push
mov
stc
lock
orl
or
pop
pop
cmc
inc
xor
cmp
out
cmc
jno
jmp
or
arpl
or
xchg
imul
insb
xlat
or
sbb
imul
jno
jnp
inc
mov
pushf
cs
popf
fs
pop
jno
adc
cmp
in
dec
and
cld
or
stc
dec
jp
mov
pop
lods
or
jmp
and
loop
inc
mov
jo
cmp
insb
rcrl
jnp
sbb
aas
mov
nop
xor
stos
mov
xorl
out
mov
cmc
pushf
jle
test
push
sti
push
in
dec
psubusb
jbe
mov
sub
pop
dec
rorl
pop
push
xchg
push
mov
stos
mov
xor
pop
sti
add
push
sbbb
shr
fs
jnp
inc
test
cmp
loopne
push
mov
rcrl
dec
subb
test
stos
jb
mov
add
dec
fs
xor
fmull
imul
sub
jg
sbb
push
mov
notl
jmp
mov
mov
in
pop
andl
adc
ljmp
pop
add
mov
pop
cltd
mov
lret
sub
sbb
push
call
sub
test
mov
lahf
imulb
aaa
push
push
mov
fidivs
loope
repz
stc
pop
lods
and
cmp
lea
pop
xchg
out
mov
repnz
int
sub
ds
add
int
mov
jp
inc
mov
aaa
push
aam
adc
xchg
scas
xchg
cli
sbb
xchg
add
movsl
adc
dec
xchg
adc
pcmpgtw
jb
inc
or
es
push
pusha
sbb
and
mov
and
xchg
cwtl
leave
pop
adc
add
pop
adc
adc
test
call
les
les
loopne
mov
sbb
or
loop
push
mov
adc
rolb
add
jmp
adc
clc
lods
pushf
push
fwait
gs
or
sub
incl
dec
ja
test
and
cmp
pushf
sahf
push
sub
push
pop
push
pop
clc
push
jg
sti
sbb
sub
je
inc
rcrl
mov
mov
pop
inc
test
xor
or
inc
ret
lcall
cwtl
jnp
pop
jmp
outsl
cmp
int3
aam
pushf
push
sbbb
fwait
shll
adc
loope
bound
rcrl
mov
negb
pop
cmp
in
push
in
jne
repz
shr
addb
or
out
fdivl
hlt
jb
or
daa
or
cmpsb
pop
xchg
movsl
cwtl
cmp
inc
mov
in
cmovp
pop
sbb
adc
lahf
or
or
inc
cmc
push
jl
sub
xchg
mull
mov
jl
adc
insb
adc
or
mov
push
xor
xor
test
insl
inc
aad
shrb
outsl
xchg
jp
cmpsb
push
aas
fnstcw
adc
push
xchg
sub
dec
xchg
mov
out
jmp
lock
std
inc
pop
int3
test
add
sub
mov
test
into
in
mov
lret
mov
cmp
xor
mov
jo
jns
mov
and
dec
movsb
mov
push
out
pop
sbb
ja
push
sarb
rcr
ja
jp
test
lods
xchg
test
cmp
push
test
rol
mov
xor
pop
mov
pop
pop
lcall
mov
data16
inc
push
test
testb
gs
mov
shll
lahf
xor
das
sub
lods
and
pop
or
push
dec
inc
cmp
gs
push
orl
or
js
jns
fimuls
sub
push
js
test
pop
cmp
ja
jg
or
subb
rcl
test
xor
jno
imull
push
cvtpi2ps
call
mov
das
xchg
xchg
xchg
pop
stos
sti
test
in
inc
arpl
mov
and
xchg
dec
xor
ss
hlt
mov
pop
jne
jmp
push
js
out
cmp
pop
mov
nop
in
dec
in
in
out
push
jo
je
icebp
paddsw
lods
rorl
push
pop
fisubrs
mov
mov
adc
mov
mov
dec
dec
xchg
aaa
push
jne
mov
sbb
mov
lock
lock
dec
sub
inc
testl
adc
adc
mov
pop
jo
push
push
cmp
push
andb
js
cmpsb
out
xor
lods
rcr
cmp
push
mov
icebp
dec
xchg
movsl
jb
lea
sbb
sub
xor
adc
imul
es
xchg
jnp
sar
mov
fisubrs
xchg
or
aaa
jge
mov
jae
lahf
and
mov
pop
adc
mov
or
xor
sarb
ffree
ret
inc
mov
push
jno
out
movsb
xor
in
pop
mov
fstpt
out
pop
and
mov
mov
cmp
jnp
stc
cmp
sbb
fdivrp
fwait
test
adc
or
and
adcw
fidivs
loopne
mov
sbb
or
lret
repnz
and
push
mov
xchg
mov
jmp
lret
sub
or
sub
xorl
jbe
icebp
gs
push
fst
repnz
lock
out
aaa
daa
mov
leave
int
push
int
je
dec
popf
bound
push
pop
xchg
push
add
int
jae
push
inc
mov
cmp
mov
push
mov
jl
lods
cmp
jg
xchg
out
push
inc
icebp
imul
sbb
sub
in
push
imul
nop
roll
jecxz
cmp
adc
out
fistl
adc
les
adc
out
and
mov
mov
adc
icebp
push
js
xlat
cmp
or
mov
outsb
inc
in
sti
push
lret
mov
negb
stos
dec
or
scas
cs
fists
dec
jl
fdivrs
push
pop
xor
stc
sbb
jbe
scas
setl
inc
bound
dec
repz
adc
inc
cmpsb
mov
mov
adcb
arpl
out
js
aam
sub
lods
cmpsb
cli
sub
out
pushl
sbbl
adc
fiadds
addr16
das
mov
out
pop
lcall
jnp
xchg
inc
push
and
pop
mov
and
sub
test
jl
fbstp
lods
leave
enter
xorl
xchg
call
mov
roll
xchg
mov
cmp
mov
rorb
sub
add
pop
loope
adc
jno
scas
arpl
jno
aam
mov
lock
lahf
pop
jno
test
mov
sahf
cmp
push
cmp
lods
mov
and
aas
jbe
jno
stos
icebp
iret
sbb
rorl
jmp
rol
jp
imul
shlb
sbb
fimuls
mov
mov
popa
pop
fnstcw
nopl
arpl
push
dec
lea
enter
outsl
or
or
scas
repz
push
xchg
ret
fnstsw
iret
in
push
icebp
sub
pop
pop
lcall
call
cmp
outsl
fistpll
in
jno
cmp
xchg
jg
add
inc
out
push
mov
data16
notb
push
outsb
neg
mov
jp
movsb
pusha
subb
xlat
cmc
or
imul
mov
or
inc
movsl
mov
jecxz
in
es
xchg
mov
js
xchg
xor
movsl
insl
and
cmc
jo
mov
sbb
icebp
mov
rcll
adc
pop
sub
ja,pn
mov
loope
lret
out
jp
xchg
aad
or
fisubrl
sub
cwtl
lret
dec
jge
fbstp
std
test
pop
lahf
and
cmp
jns
mov
jecxz
rorb
xor
ret
in
in
pop
push
add
cld
lret
lds
jbe
es
std
and
test
movsb
xor
cmp
push
mov
std
cmc
dec
in
mov
fsub
jo
das
and
pop
and
addr16
ja
mov
scas
xchg
push
aam
mov
testl
push
push
xchg
jno
cld
dec
int
movsb
je
mov
mov
xlat
gs
mov
movsb
pop
cmpsl
sar
mov
negl
outsb
xchg
leave
and
gs
jmp
push
rol
adc
or
xchg
dec
xor
pop
cmp
cmp
out
dec
ret
roll
push
shl
fwait
cmp
bound
sti
pop
call
or
inc
jge
dec
mov
scas
das
push
sbb
cmp
jns
idivl
in
fcompl
push
clc
pop
andl
cmp
call
sub
mov
or
divb
pop
mov
cmp
xchg
adc
cmp
ja
push
mov
adc
rcr
rcrl
or
jae
dec
cmpsb
or
nop
das
ja
xor
mov
xor
rep
repz
je
xor
sti
mov
cmp
insl
enter
je
cmp
mov
mov
push
lret
push
mov
sbb
and
sub
jecxz
stc
inc
inc
mov
mov
testl
xlat
pop
ja
mov
xchg
jno
es
mov
bnd
jp
push
leave
mov
in
xchg
adc
jo
or
lcall
mov
mov
gs
in
daa
pop
lret
push
cwtl
push
and
std
jns
xchg
pop
shrb
add
cmp
insl
inc
dec
sbb
ficoml
add
mov
shl
jge
jp
mov
aam
lret
out
fisubrs
pop
xor
popa
or
pop
popa
sub
ret
fwait
mov
cmpsb
repnz
jae
int
lret
xchg
pushl
sbb
mov
xor
mov
mov
adc
jbe
test
xchg
mov
mov
and
gs
xchg
lods
or
imul
popa
mov
les
addr16
testl
adc
sbb
subb
addr16
mov
mov
push
es
cltd
rorl
jnp
dec
mov
jnp
ljmp
ficomps
repnz
fists
int
push
mov
ret
dec
xor
add
out
pop
bound
mov
pop
push
jl
sub
mov
cltd
out
mov
out
dec
jns
mov
addr16
lods
jge
sbb
sahf
out
adc
mov
mov
mov
xchg
je
sub
lcall
jmp
ljmp
insb
jno
xlat
mov
xor
insl
mov
xor
enter
out
cmc
xor
divb
jbe
hlt
jne
lds
movl
xor
loope
int3
dec
repz
popa
fsubr
enter
scas
push
icebp
or
test
orb
movsl
or
pop
sub
neg
and
sub
in
repnz
mov
and
sbb
js
fsubs
jg
or
add
dec
sub
ds
xchg
mov
sub
jmp
jne
imul
mov
sub
and
out
in
and
leave
aas
jg
subl
into
push
test
or
mov
xor
cmpsl
ret
and
cmp
ds
inc
adc
dec
mov
imul
xchg
jns
sbb
adc
jmp
pop
add
pop
stos
rcrl
lock
pop
clc
xor
jp
sbb
rol
les
adcb
std
fstps
push
dec
cmp
mov
ss
sti
xlat
and
lods
sub
xor
mov
ficomps
aas
mov
clc
sar
add
dec
and
inc
call
lds
xchg
loope
lods
mov
mov
les
pushf
ds
xchg
stc
lcall
pop
sbb
xor
push
fisttpll
mov
push
sbb
mov
shl
sub
test
mov
inc
sti
mov
xchg
mov
mov
or
cmpsl
sub
mov
repnz
sbb
fildl
std
pop
sub
imul
insb
and
inc
fsubp
das
xchg
adc
mov
adc
mov
pop
shlb
dec
fildll
mov
fcomip
mov
xchg
mov
jno
lea
mov
xchg
lahf
rcrl
ja
mov
daa
leave
sub
sti
jl
das
mov
inc
push
aaa
cmp
test
cmpl
push
lods
sbb
mov
js
or
mov
lret
mov
fldenv
xchg
mov
mov
leave
and
or
shlb
sti
stos
cmp
add
fnsave
mov
out
cld
inc
mov
jo
lods
push
mov
cmp
in
jo
orb
and
call
sahf
clc
out
push
pop
jmp
gs
arpl
sti
fwait
js
lahf
adc
lret
add
insb
adc
push
inc
out
lea
inc
or
cld
ss
ljmp
cmp
push
cwtl
das
sbb
and
and
in
int
int3
xor
orl
lock
jns
mov
shlb
insl
and
ret
jecxz
aad
lret
inc
in
frstor
lods
shl
push
dec
xchg
stc
lods
enter
imul
in
cmp
outsb
jo
in
fcoml
jp
xchg
jno
test
pop
push
fdivrl
mov
aaa
and
mov
sahf
xchg
mov
jecxz
inc
dec
lock
xchg
fldl
xchg
pop
jmp
xor
fistpl
xchg
jno
call
inc
cmp
cmp
push
xor
jno
call
push
push
and
push
xor
xchg
inc
out
sub
arpl
mov
xchg
push
fdiv
jno
call
jle
sbb
and
inc
jg
testb
arpl
push
xor
jg
out
push
mov
mov
xchg
mov
mov
cmp
stc
add
test
xor
jnp
dec
xlat
cmc
mov
and
sahf
divl
repnz
and
xor
or
mov
insb
test
sbb
inc
stos
lahf
rcrl
adc
out
pusha
sub
sub
loopne
enter
push
adc
imul
incb
sub
outsb
scas
push
xchg
fcoml
mov
aaa
cmpsb
pop
xor
xlat
xchg
dec
inc
or
cmpsl
jb
xchg
ret
lock
dec
ror
sbbb
xor
and
hlt
lods
or
cmpsl
push
dec
inc
dec
mov
push
shll
pop
in
push
mov
test
test
mov
fcomps
jl
adcb
lret
ret
dec
pop
int
mov
nop
adc
add
cmp
enter
mov
addl
fnsave
lahf
dec
xchg
inc
jl
and
sbb
lret
movsb
pop
dec
add
add
adc
push
jl
pop
movl
shrl
push
notb
cmp
xor
mov
push
rclb
or
js
sbb
cli
enter
out
popa
jae
into
fstp
leave
mov
cmp
lret
mov
and
or
mov
cmp
sub
pop
dec
gs
cmpsb
lret
push
stos
ljmp
je
insl
dec
enter
jo
xor
in
lahf
dec
decb
testb
lahf
mov
jl
cmpb
pop
xorl
es
lret
cli
mov
mov
and
push
push
and
mov
xlat
add
stc
iret
or
insl
jmp
lahf
sbb
subb
fdivrs
push
stc
fsubr
in
jp
out
in
lret
stos
jp
cld
add
loopne
rcrl
arpl
cmp
cmp
mov
test
ljmp
adc
out
jbe
push
xchg
aaa
inc
inc
cltd
xchg
sub
cmp
idivb
repnz
or
sbb
add
adc
icebp
rcl
jo
arpl
fwait
cmpsl
cld
pop
pusha
mov
cmp
xchg
and
rcr
dec
sbb
jle
mov
push
aam
pusha
repz
xor
arpl
test
std
dec
add
arpl
sahf
xor
push
xchg
sarb
mov
seta
sub
insl
fidivrs
jb
ret
sub
test
ljmp
mov
pop
ffree
push
add
pop
dec
xor
or
and
cld
jle
pop
icebp
adc
xor
push
sub
mov
test
ficomps
sub
nop
pop
orl
xchg
xor
orb
push
lret
mov
ljmp
xor
rorb
fdivrs
and
push
outsl
dec
lods
push
out
repz
mov
inc
loopne
out
addl
outsl
mov
pop
cmpb
add
pop
mov
sub
jecxz
mov
aad
nop
dec
add
xor
adc
sub
inc
dec
js
ret
and
rcrl
int3
in
adc
xor
cld
movsb
mov
clc
shrl
pop
sbbb
cmp
pop
mov
push
loopne
add
xchg
cli
dec
sbb
mov
int
sbb
andb
mov
pop
or
add
imul
mov
add
into
inc
pop
inc
dec
or
cltd
in
sbb
sbb
frstor
lahf
cmp
int3
sbb
fldl
in
lods
adc
mov
dec
lock
add
int3
pop
outsb
outsl
lret
cltd
pop
adc
jnp
lret
dec
dec
xor
call
test
pop
push
lds
sbb
adc
pop
sub
popl
push
sti
sti
xor
add
dec
mov
jmp
jb
sahf
cmp
cltd
repz
icebp
mov
repz
ret
jl
adc
add
repnz
mov
scas
mov
sub
mov
dec
adc
imul
push
adc
adc
mov
lock
call
xchg
sub
scas
leave
mov
ret
pop
dec
ret
push
in
in
inc
out
outsb
inc
arpl
xor
sbb
cmc
pushf
andl
push
jne
jno
mov
mul
push
mov
mov
das
adc
sub
jb
cld
rcrb
pushf
call
sti
lretw
xchg
lods
jne
add
mov
jl
loope
out
pop
or
dec
mov
ret
sub
call
mov
lods
jle
mov
dec
lret
es
mov
jmp
inc
mov
xchg
mov
ret
add
push
cs
jp
mov
sbb
dec
clc
adcl
mov
fwait
push
sub
outsl
push
enter
sbb
scas
out
scas
sub
xchg
sbb
mov
dec
mov
sub
add
mov
jbe
cmpsb
movsl
push
pop
pop
inc
call
shlb
jnp
and
xchg
adc
inc
nop
out
pop
jae
mov
inc
int
dec
add
ljmp
loopne
loop
add
jge
hlt
lret
hlt
mov
jl
outsl
es
test
addl
cmp
in
or
bound
out
dec
xor
add
out
in
jle
stos
dec
dec
sub
jecxz
pop
lock
cltd
gs
pop
add
enter
dec
loopne
add
push
pop
jbe
xchg
sbb
push
imul
leave
mov
or
or
cld
pusha
cmc
repz
out
add
jns
adc
or
inc
ret
xchg
int
push
inc
mov
mov
fnstenv
xchg
xor
test
add
push
pop
outsl
outsb
inc
loop
mov
adc
jl
adcb
push
ds
mov
inc
adc
add
push
shl
imul
sbb
mov
push
pop
or
mov
jno
std
sarl
iret
int3
hlt
mov
inc
adc
stos
add
sarb
sti
jbe
arpl
movsl
xor
adc
out
xchg
hlt
inc
jbe
push
stc
sbb
sub
jge
pop
pop
out
loopne
mov
out
test
repz
mov
icebp
cmp
cmp
pop
xchg
test
jecxz
sub
test
xchg
movsl
push
sub
pop
loopne
into
mov
ret
sub
sub
pop
test
sub
or
cmp
stc
fsubl
fmuls
fwait
not
fistpll
sub
sub
lods
or
enter
xor
jbe
inc
icebp
pop
sbb
push
jnp
dec
sar
mov
popl
adc
test
or
dec
in
out
ss
test
loopne
push
into
lcall
push
movsb
sahf
jg
push
popf
cmc
mov
xor
or
xchg
test
lahf
ja
push
imul
inc
xor
shrb
leave
movsl
mov
mov
mov
pop
jno
shll
ss
cmpsl
je
lahf
pop
push
rcl
cmp
and
sub
loop
mov
sbb
mov
out
push
sub
or
aas
cmpsl
adc
repz
in
mov
pop
adc
xlat
xor
mov
cli
fstl
andl
push
xor
pop
dec
cmc
jnp
sub
dec
movsb
xor
and
push
mov
xor
shlb
cs
cwtl
fisubl
mov
adc
mov
inc
cmp
std
pusha
in
dec
cmp
sbb
cmp
stc
jo
stc
inc
pop
and
test
pop
stc
lods
mov
push
test
jl
popf
mov
popa
mov
jl
mov
jecxz
cmp
into
jb
pusha
jmp
lock
je
fld
jno
xor
pop
adc
inc
fucom
xlat
loop
ds
mov
sbb
loop
pushf
cli
xor
sub
call
ss
jp
cli
cmpsb
lds
mov
cmp
test
mov
lret
xchg
daa
pop
adc
or
mov
imul
push
xchg
iret
icebp
mov
sbb
jp
jmp
push
pop
pop
out
dec
cli
test
popa
adc
dec
imulb
dec
cld
or
aas
xchg
mov
mov
jle
orl
pop
sbb
scas
mov
xlat
lock
push
popa
sbb
ja
or
xorl
mov
clc
leave
pushf
jb
xor
or
adc
cmpsl
sbb
push
jbe
out
test
pop
insb
out
out
repnz
pop
repz
out
out
mov
cmp
add
adc
xchg
ja
xchg
mov
out
xor
and
ljmp
pop
fldl
test
out
mov
pop
dec
and
dec
imul
es
inc
cmp
adc
mov
lahf
adc
push
inc
jnp
inc
and
notb
mov
repz
rol
xor
sub
xchg
ss
xchg
inc
icebp
jbe
arpl
hlt
xor
scas
repz
or
jno
ret
mov
mov
xor
lahf
or
xchg
push
roll
push
repz
enter
push
decb
dec
mov
das
fistl
cmp
nop
jno
mov
or
mov
pop
ja
mov
repnz
add
mov
xchg
aad
fbld
std
mov
insl
inc
repnz
jl
repnz
mov
rclb
pusha
sti
mov
repnz
repz
inc
adc
push
xor
mov
jnp
or
inc
dec
inc
mov
loop
ftst
cmpsl
in
xchg
push
or
mov
jmp
shrb
inc
sub
leave
dec
pop
mov
aaa
dec
mov
adc
inc
pop
lcall
pushf
fidivl
pop
add
faddl
fmull
fstps
mov
dec
dec
lcall
sub
mov
enter
jmp
out
sarb
or
into
aaa
cmp
mov
fcmovne
movsl
inc
dec
popl
cli
and
sub
push
into
mov
adc
dec
jo
ret
adc
stos
lods
sti
mov
add
aaa
xchg
repnz
fxch
dec
and
cmp
lret
sbbl
cmp
arpl
xchg
or
neg
into
popa
xchg
xor
arpl
addr16
xor
push
push
fisttpll
or
mov
mov
xchg
ss
push
mov
je
inc
sbb
fstps
mul
lcall
xchg
test
mov
ficoml
sub
in
mov
jne
mov
arpl
sub
or
mov
inc
pop
je
loope
add
cmp
pusha
mov
mov
fsubs
dec
enter
notl
push
dec
sub
or
out
inc
bound
iret
das
aad
mov
push
test
mov
cmovge
lahf
or
xlat
fcmovne
js
aas
int
and
cwtl
xor
je
ret
cli
jmp
cmpl
mov
in
xor
sbb
fwait
out
es
jmp
cmpb
nop
mov
lahf
jecxz
add
jbe
mov
mov
aam
fists
dec
mov
jae
or
sbb
sbb
std
adc
ss
rolb
je
pop
jae
push
ljmp
xchg
xor
in
jno
and
aam
out
sub
push
mov
cmpsl
sub
add
sbb
cli
out
lea
arpl
or
pop
stos
sub
gs
xor
push
push
pop
xchg
push
icebp
outsl
add
mov
and
test
sub
iret
imul
and
inc
repz
je
jecxz
outsl
insb
popf
cltd
pop
jne
push
fnstenv
shll
push
out
xchg
add
pop
and
sahf
inc
jp
add
paddusw
ss
push
pusha
inc
push
adc
add
mov
mov
inc
pop
rol
lcall
dec
xor
xchg
xor
adc
stos
pop
out
push
fisttps
push
sbb
out
enter
pop
shlb
dec
adc
pop
mov
in
or
cmp
xchg
dec
dec
jp
cmp
stc
enter
adc
mov
push
mov
mov
imul
sahf
inc
rclb
pop
sub
add
xchg
fistps
xlat
hlt
mov
inc
adc
imul
jg
cmovno
inc
push
jmp
mov
out
xor
or
add
insl
mov
daa
xlat
mov
xchg
push
es
iret
push
mov
sbb
jnp
mov
mov
cmp
idiv
jle
enter
push
adc
mov
ljmp
or
stc
bound
mov
cli
cld
push
mov
push
mov
jne
je
and
or
dec
or
mov
inc
out
rcll
and
ds
repz
enter
add
push
push
ljmp
imull
sbb
incb
cmpsb
inc
test
es
xchg
loope
and
sbb
push
xor
sbb
inc
in
jmp
nop
push
in
pop
push
mov
lret
out
call
aaa
mov
cmp
xor
add
lcall
sti
stos
cmpsl
cmp
dec
push
mov
push
imul
loopne
leave
aam
adc
xchg
aad
data16
mov
mov
in
aaa
jo
push
imul
mov
mov
out
jp
push
rcrb
fldt
lods
xchg
mov
mov
ljmp
cld
push
outsl
js
mov
incl
cmp
pop
insl
sbb
or
leave
and
aad
clc
jecxz
orb
push
mov
push
in
adc
dec
fists
inc
insb
fucomi
lock
sbbl
pop
add
icebp
inc
in
fsubrs
add
fsubl
xchg
popf
adc
mov
cwtl
rol
mov
push
lahf
cld
out
movhps
loope
rclb
or
out
insl
test
inc
pop
das
push
daa
ret
add
jmp
cmp
or
xor
inc
cmp
sub
push
jbe
les
cltd
aaa
sbb
iret
fldl
daa
jge
xlat
cmp
inc
iret
mov
sbb
movsb
xor
mov
mov
sbb
sbb
icebp
sub
sub
push
sbbl
xchg
or
jmp
sti
aaa
push
shlb
out
pop
les
lds
test
inc
mov
pop
fstl
notl
aam
dec
sub
int3
fadds
xchg
jo
sub
mov
leave
xchg
and
push
test
xlat
mov
or
push
lret
lock
jno
inc
test
pop
out
lods
mov
insl
fnstenv
test
outsb
addb
and
lahf
repnz
xor
scas
mov
adc
or
addb
sub
in
sahf
movsb
mov
and
jp
push
and
and
sti
push
scas
lcall
mov
ja
add
add
cmpb
in
insl
jns
adc
divb
es
ds
aas
inc
out
jge
in
and
or
jge
adc
adc
fs
and
jae
dec
cmp
xor
mov
aas
arpl
popa
xchg
shrd
fldl
push
mov
and
arpl
cmpb
xchg
in
fsubrs
jns
ret
leave
dec
outsb
sub
push
or
out
mov
repz
dec
sub
dec
sub
dec
std
pop
jns
ds
pusha
inc
fs
mov
push
enter
add
outsl
imul
shll
sbbb
xchg
mov
jp
lahf
in
xor
ljmp
popa
sub
inc
push
lods
inc
inc
cmp
push
jo
ret
loop
mov
and
mov
xchg
xor
cwtl
push
pop
lds
xor
mov
sbb
jecxz
dec
push
stos
add
dec
ret
adc
outsb
or
cs
xchg
jo
out
push
sub
adc
lret
xlat
popa
movb
mov
loop
mov
test
nop
jge
jle
adc
push
mov
jg
jae
add
pop
int3
push
mov
pusha
cmp
out
xlat
insb
xor
repnz
mov
popf
or
mov
inc
xor
push
mov
pop
pop
les
xchg
popa
pop
jl
outsl
xor
sbb
imul
popf
repz
bound
call
call
shll
pop
sar
cmp
push
ss
test
cmp
jmp
fmulp
test
pop
dec
out
imull
loopne
dec
or
test
repz
sbb
adc
jae
push
iret
xor
outsb
nop
test
cltd
js
imul
fidivrs
jno
into
adc
push
xor
xchg
lea
iret
xor
in
inc
pusha
pop
and
xchg
cmp
andl
sbb
in
mov
and
ss
cld
lods
test
fwait
pop
adc
lea
lds
ret
jp
cmp
lea
pop
fidivrl
push
arpl
mov
aad
adc
imulb
cwtl
jge
mov
mov
in
dec
and
xor
lcall
popf
inc
adc
cmp
mov
gs
mov
xchg
xchg
mov
mov
test
dec
lcall
and
fidivrl
stos
rcll
lret
xchg
jl
hlt
test
xchg
add
add
xor
scas
dec
lods
xlat
cmpb
iret
adc
jnp
or
cmc
test
mov
sub
pop
mov
mov
movsl
jle
sbb
or
lods
cmc
lds
out
pop
and
cmp
out
xlat
add
mov
mov
arpl
outsb
cmpsb
mov
fs
lret
sti
xchg
pop
stc
and
mov
fsts
mov
adc
enter
mov
orl
mov
dec
add
pop
push
jns
jmp
arpl
fnstenv
and
mov
cmp
adc
inc
mov
adc
callw
xchg
or
add
sub
sbb
jno
rcrb
scas
sub
sti
out
sbb
sub
inc
jno
jg
pop
or
mov
xchg
xchg
fadd
lods
mov
mov
add
cmp
cmp
lcall
gs
lods
call
repz
cltd
movsb
mov
rcrl
and
sbb
fcmovnu
incl
or
adc
cmpsb
sti
ret
hlt
dec
std
dec
pop
cmp
int3
mov
or
cmp
dec
jmp
stos
jnp
mov
ss
sahf
leave
aad
stos
inc
cmp
inc
and
test
in
and
js
ss
rep
sub
push
inc
les
in
ss
sbb
sti
testl
sub
stos
or
inc
bound
repnz
mov
inc
mov
pusha
xor
cmp
and
add
mov
pop
gs
dec
push
pusha
movsl
sti
or
lds
mov
inc
rorb
inc
sub
cmp
lods
or
pop
andb
rorb
mov
test
or
fmull
sub
sub
test
in
les
xchg
xor
decl
cmp
mov
sub
insl
push
fstpt
sbb
loop
mov
add
push
lret
push
sahf
scas
test
adc
addr16
imul
xchg
xor
out
adc
test
lret
mov
cli
jp
cmp
jb
inc
aad
add
and
mov
jp
fnstenv
jl
sbb
push
nop
xor
pop
dec
lea
call
mov
std
sbb
fdivrl
shrb
setp
sti
lock
test
fs
xchg
mov
jb
int
dec
adc
lds
popf
leave
jae
test
xor
inc
mov
movsb
mov
jb
mov
inc
add
loopne
es
out
dec
or
lahf
mov
aad
sub
push
and
mov
sbb
xorl
jp
sbb
inc
pop
loopne
leave
xchg
test
mov
fsincos
hlt
mov
sahf
test
fnstenv
pusha
lea
xor
outsb
push
testl
or
pop
mov
cmp
test
xchg
sbb
cmp
andb
test
sub
mov
mov
adc
adc
xor
sahf
cltd
sbb
fistpl
xchg
scas
pop
hlt
and
js
xor
sbb
ret
leave
inc
loopne
pop
cmp
into
fisttps
lret
shrb
push
cs
cmp
xchg
in
xorl
mov
pushl
adc
popw
pop
xchg
imul
pop
sub
sbb
imull
inc
shl
jb
jg
pushf
leave
pop
and
pop
into
cltd
mov
mov
ss
pop
sbb
jns
es
aaa
mov
push
lahf
in
int
sbb
outsl
int3
loope
push
dec
mov
subb
in
mov
std
sbb
fs
sub
mov
std
cmp
out
jnp
sub
imul
add
sbb
jno
lret
xchg
out
or
mov
out
ret
sti
loopne
inc
mov
jp
dec
scas
pushf
daa
ljmp
leave
insl
hlt
or
xor
dec
cmp
loop
leave
sub
inc
insb
hlt
sbb
pop
inc
and
adc
inc
push
xchg
or
dec
mov
repnz
sbb
int3
stc
mov
test
movsl
movsl
jl
or
pusha
or
iret
jecxz
add
inc
push
dec
push
dec
mov
lret
loopne
out
mov
clc
gs
mul
aas
push
pop
sti
hlt
rclb
in
cmp
mov
xchg
pop
xbegin
pop
sbb
popf
mov
movsb
cli
fstpl
mov
jp
call
pop
jge
dec
add
cmpb
add
jl
mov
push
pop
call
stos
adc
push
push
xor
xor
stos
jp
loope
inc
leave
ljmp
mov
xchg
in
sbb
out
dec
fiadds
sahf
rolb
cld
mov
js
rcll
add
mov
sbb
shll
push
mov
xchg
inc
or
popf
fwait
adc
mov
xchg
mov
sbb
jb
test
dec
sbb
movsl
insl
and
or
pop
dec
cmpl
ret
loope
leave
add
ret
cmp
and
outsl
pushf
mov
cmp
hlt
mov
mov
mov
les
push
push
xchg
mov
inc
mov
repz
mov
jo
inc
lahf
pop
repnz
daa
mov
pop
inc
mov
cmp
mov
insb
adcl
fsubs
fwait
decb
test
repnz
xchg
pop
adc
inc
push
and
mov
ss
push
mov
insb
shr
mov
div
add
cmpsl
rolb
ret
test
cmc
sbb
jnp
outsl
mov
push
stos
lcall
lcall
adc
pop
pop
dec
movsl
cmpb
out
inc
push
in
mov
ds
addr16
fidivrl
push
add
inc
jae
and
jmp
mov
aam
aad
fisubrl
lcall
ret
push
mov
dec
in
test
cld
mov
int3
cmp
gs
adc
das
jg
leave
inc
outsl
and
movb
ret
xchg
fnstenv
mov
fidivl
sbb
inc
sbb
add
or
sbb
test
push
jns
lods
and
stos
ret
add
dec
je
stos
pcmpeqw
jns
dec
in
mov
in
mov
imulb
mov
inc
mov
test
and
cmp
dec
mov
daa
lret
sti
mov
push
jae
movsl
pop
sbb
mov
ret
xor
inc
std
es
or
mov
sub
jmp
jl
add
into
cmp
pushf
jmp
imul
addr16
insb
cltd
nop
fnsetpm(287
sub
ss
addr16
and
and
and
push
dec
dec
jl
dec
fisttps
stos
push
push
jns
inc
ret
or
test
xchg
stos
xor
call
pop
xchg
ds
xor
test
insl
jg
mov
orl
gs
cltd
shrb
push
pop
sbb
cli
ret
push
outsb
fmul
ljmp
les
mov
push
sbb
mov
in
push
pusha
cmp
xor
repz
mov
xor
add
test
jae
stos
mov
or
loope
mov
pop
dec
cwtl
mov
push
and
sub
adc
xlat
fdiv
cmp
out
xor
and
add
daa
sbb
les
pop
mov
test
inc
mov
mov
sub
testl
lret
lock
pop
icebp
clc
arpl
aam
popa
pshufw
mov
int
sbbl
adcb
mov
cmp
mov
mov
lods
or
out
inc
aad
mov
int
push
push
push
pop
or
lds
shrl
pop
or
push
ja
sbb
and
jl
xor
hlt
cmp
out
mov
dec
sbb
push
sbb
or
or
out
pop
call
and
mov
mov
cmp
fucomip
jg
and
cmp
in
jno
fdiv
insl
or
dec
shlb
pop
imull
xchg
in
cmp
mov
or
dec
xchg
fcmove
add
std
rclb
add
cld
pop
and
shrl
pop
add
cmp
sub
test
sub
sbb
jl
fs
test
sub
int
lahf
lcall
add
mov
pushf
out
inc
and
data16
cli
fcoml
mov
mov
cmpsb
mov
sub
push
outsl
cmc
push
cwtl
std
sub
or
push
jl
xor
sbb
outsb
pop
shrb
adc
and
mov
mov
int3
push
xor
mov
outsl
loop
cmp
les
out
push
ja
mov
push
fdivs
daa
in
faddl
lret
popa
sub
sbb
je
fwait
out
aam
loope
lcall
in
lods
add
stos
je
or
mov
out
js
imul
lock
dec
shll
push
dec
inc
push
repz
inc
imul
xchg
ficoms
rcl
dec
inc
fs
jl
ret
cmpsl
lret
aas
push
popa
xor
add
aas
dec
or
fwait
xor
jo
lds
and
and
inc
dec
aad
cmp
mov
les
ss
stos
dec
or
cmp
in
and
adc
jg
lea
enter
sub
cmp
xor
xchg
test
mov
popa
fstpt
ret
movsw
or
inc
les
push
test
add
mov
add
pop
jg
mov
rcrb
mov
insl
in
sbbl
sbb
ret
mov
rolb
sbb
test
in
fwait
jbe
stos
test
ss
cmp
es
imulb
inc
lds
mov
imul
ja
movsb
sub
or
jbe
fiadds
idiv
add
mov
pop
iret
jno
sbb
add
push
imul
inc
out
rclb
pop
bound
shll
mov
mov
sbb
shl
faddl
add
mov
mov
push
and
movsb
xor
out
and
int
pop
in
ss
shll
inc
mov
inc
cmp
dec
shll
mov
mov
and
outsl
add
cmp
aaa
dec
lret
into
inc
mov
nop
subl
aad
sbb
es
call
mov
inc
ret
jno
push
dec
adc
adc
pop
mov
aam
ds
pushf
dec
sub
mov
cmp
inc
cmpb
in
jmp
gs
cmpsl
cmp
aam
jle
inc
mov
add
sub
adc
scas
scas
mov
pushf
pop
dec
lret
adc
enter
mov
fisubl
cmp
out
aad
adc
data16
hlt
lods
and
enter
push
fdivrl
and
or
stos
xchg
dec
nop
push
aam
rcl
pop
test
sub
push
insl
jmp
xchg
cltd
pop
insl
mov
jecxz
and
or
negb
dec
inc
push
pop
ret
xlat
scas
jecxz
mov
xchg
mov
rorl
xor
or
test
clc
or
ss
inc
bound
dec
popw
or
out
cmp
in
add
hlt
xchg
jg
sbb
mov
shll
push
aam
mov
cmp
out
je
cltd
or
sub
mov
push
jnp
cmp
lock
push
in
js
bound
roll
orl
sub
jae
js
lds
inc
pop
xlat
inc
movsl
and
xor
mov
jnp
xchg
test
jbe
out
stos
stc
aaa
push
cld
adc
add
leave
incl
jle
xor
aaa
mov
fistpl
dec
insl
mov
test
cs
mov
inc
sahf
mov
jb
inc
inc
add
into
movsl
add
dec
or
mov
rolb
stos
js
icebp
pop
je
fstpl
cwtl
mov
nop
lods
pop
mov
inc
cmpsb
sub
push
lcall
hlt
aas
ficoms
lret
incl
out
orl
in
fadds
mov
js
push
int3
pop
aam
shl
xor
imull
adc
add
test
scas
xor
ficoml
lcall
fisubrl
sbb
and
movsl
mov
jnp
push
jo
pop
dec
ja
or
mov
mov
hlt
mov
push
pop
sbb
add
out
ds
test
pop
cmpsl
jbe
int
cmc
mov
add
mov
scas
lods
sub
daa
pop
imull
imul
cmc
aas
mov
dec
insl
stos
adc
fwait
lods
mov
pop
pushf
lock
xchg
lds
fisttpll
dec
dec
push
shl
xchg
push
push
daa
dec
cmp
sarl
pushf
jb
dec
and
jb
mov
xchg
inc
fmulp
lret
outsl
xor
pop
fmul
cmp
or
ja
mov
lods
inc
sarl
pop
mov
mov
aam
fists
and
sub
and
push
ret
fstp
ds
iret
dec
sahf
cmp
data16
shll
or
or
stos
sub
add
jp
loopne
cmp
icebp
push
scas
test
add
lods
jmp
mov
stc
pop
fstpl
mov
cltd
aas
rorb
repz
mov
xor
cltd
pop
push
push
pop
mov
imul
dec
fisubrl
ret
sub
lods
lds
dec
lret
push
push
inc
mov
out
inc
inc
cmpsl
xor
sub
bswap
shlb
mov
into
cmpsl
es
arpl
cmp
jb
jl
imul
ljmp
enter
inc
mov
or
mov
clc
dec
mov
pop
hlt
sbb
test
mov
sub
pusha
outsl
inc
xchg
add
pop
lret
sbb
and
cli
stc
arpl
jg
call
sub
dec
sarl
inc
idivl
out
aas
stos
adc
push
gs
jecxz
jnp
sbb
shr
movsl
mov
mov
cmp
add
ja
scas
ret
jns
je
lahf
sub
insb
mov
lea
js
lods
data16
jmp
cmp
call
dec
pop
jnp
mov
mov
mov
push
repz
fwait
jmp
dec
adc
gs
jbe
call
test
xor
adc
repnz
in
cs
rcrl
ret
mov
or
jle
addl
push
dec
and
aaa
jnp
adc
jp
jle
mov
inc
push
movsl
or
mov
xchg
mov
mov
mov
dec
ret
lret
outsb
jae
mov
or
sbb
jnp
dec
outsb
enter
and
add
mov
sub
aas
mov
and
cmc
insb
sub
xchg
dec
into
aam
fwait
or
faddp
fimull
or
test
outsb
fwait
xor
loopne
das
and
pop
nop
inc
sub
cld
and
pop
mov
fimull
xchg
int
or
sbb
cmp
xchg
push
inc
nop
sub
scas
and
and
les
dec
and
inc
pop
in
push
mov
sti
xor
inc
icebp
ss
insb
loope
movsl
icebp
add
pop
mov
cmovge
adc
int
xchg
push
mov
pusha
ret
enter
jbe
xlat
jg
aas
call
sbb
pushf
rol
sbb
fistpll
mov
repnz
rcrb
cwtl
cli
xor
in
dec
and
push
jg
idivl
bound
data16
loope
negl
cmp
push
jno
push
sub
mov
sti
icebp
jb
or
test
xchg
xchg
sbb
ret
adc
inc
lock
xor
lret
jg
inc
pop
fsubl
insb
cmpsl
xchg
cmp
leave
adc
lock
push
stos
adc
mov
xchg
push
xchg
enter
pop
xchg
test
pop
sbb
xor
jb
ja
pop
mov
jge
enter
jae
adc
mov
mov
add
inc
add
ficomps
push
mov
dec
pop
add
xchg
insb
mov
pop
scas
ret
insb
mov
shll
lock
into
insb
cmp
sahf
xor
data16
pop
mov
icebp
pop
xchg
iret
add
rep
jnp
jp
sbb
cmp
fcompl
and
jb
int3
xor
inc
cmpsb
test
shr
dec
xor
mov
dec
adc
mov
mov
clc
adc
das
xchg
out
sub
decb
sub
ljmp
popa
imul
and
je
xchg
stc
cmpsl
sub
dec
ds
outsb
movsl
add
xor
fbstp
mov
cmpsl
repnz
notl
das
or
arpl
or
dec
out
push
imul
sahf
nopl
ret
inc
push
xchg
adc
and
scas
cld
push
dec
ret
cmp
inc
cmp
addb
les
nop
test
dec
dec
gs
or
rol
dec
dec
das
mov
dec
mov
dec
mov
add
lock
push
les
mov
push
inc
addl
add
in
fs
fmul
imul
mov
jae
andb
xor
cli
pop
test
and
sub
lahf
xor
orb
out
jb
push
add
gs
mov
inc
sti
pop
jmp
out
pushf
mov
pop
inc
adc
add
out
jno
stos
popf
fidivs
fcomip
cld
sti
mov
js
enter
data16
cli
lds
pop
or
dec
rcrl
in
adc
pop
enter
dec
call
lods
cli
outsl
jne
sub
push
pop
mov
or
cmp
leave
mov
mov
xor
fwait
push
dec
fwait
hlt
insl
lock
cmp
loope
dec
jg
sbb
in
adc
adc
scas
cli
xchg
xchg
call
mov
test
mov
jl
test
xchg
out
jne
cmc
lcall
faddl
addr16
xor
cmp
xchg
nop
ret
or
test
push
out
adc
imul
insl
imul
sub
push
mov
xlat
and
push
mov
push
insb
adc
stc
mov
sub
adc
imul
and
xlat
jle
stos
lcall
cld
nop
add
dec
subl
mov
fldl
testb
stc
inc
sub
into
xor
push
push
sbb
ffreep
or
ret
fildl
mov
or
pop
ss
push
imul
mov
add
mov
sti
cmpsb
xchg
out
cmp
daa
pop
pop
cmpsl
inc
bound
pop
popf
nop
jae
scas
or
and
sbb
jbe
mov
pause
push
jecxz
sahf
adc
das
ds
add
or
mov
or
andnps
xchg
push
jb
sbb
mov
mov
or
xor
add
jmp
call
push
adc
nop
std
jno
leave
dec
jbe
iret
cltd
iret
cmp
pop
sbb
pop
in
add
in
nop
rorl
inc
icebp
add
xchg
stos
es
sub
push
jb
in
ljmp
fnstcw
cmc
std
pop
mov
sbb
xor
cmp
cli
jge
clc
ja
mov
mov
push
imul
rorb
movsb
daa
in
ja
popa
mov
mov
jo,pn
test
xchg
lds
xchg
mov
or
shl
push
mov
sarb
cli
xor
jl
data16
movsb
fcomps
cmp
cmp
xor
scas
push
mov
subl
sbb
dec
dec
ljmp
popa
inc
loop
insl
jae
or
add
std
das
out
rcll
test
popf
adc
xchg
push
mov
ja
sbb
dec
iret
mov
add
or
pop
lds
inc
and
push
dec
or
stos
xor
mov
int
pop
mov
xchg
cwtl
pop
sub
es
xchg
test
andl
cmp
aaa
aaa
pop
fwait
adc
add
add
xchg
call
push
subb
xor
push
pop
scas
dec
dec
push
lahf
lret
xorl
sub
pop
push
cli
sbb
jmp
sbb
jg
fmul
leave
push
ljmp
mov
jo
jo
rcrl
jge
dec
mov
jl
out
pop
jb
dec
or
push
xchg
add
cs
push
insl
jno
xlat
mov
or
xchg
dec
sub
inc
orl
mov
inc
push
or
mov
pop
cs
jle
std
bound
inc
mov
jle
mov
loop
scas
or
mov
sahf
in
or
mov
adc
out
scas
inc
mov
cmc
inc
or
xchg
pop
xor
arpl
cmp
pop
dec
pop
lret
add
into
mov
mov
pop
shrl
out
out
das
in
insl
lahf
xchg
add
fs
imul
xor
daa
lahf
and
inc
push
xchg
lods
xor
mov
ret
sbb
pushf
add
adc
sbb
sub
inc
jbe
lock
and
in
fnsave
popa
jmp
stos
jno
dec
js
jl
xor
das
int
out
test
dec
xchg
pusha
jecxz
jle
adc
out
inc
insb
add
and
call
mov
pop
mov
push
add
int3
imul
mov
std
mov
pop
lods
rorl
fsubr
sbb
bnd
cmp
stos
xor
adcb
add
sti
xor
push
inc
add
pushf
sbb
test
lods
jmp
jae
lock
psrld
cmp
sub
and
dec
mov
hlt
pop
lock
lods
dec
imul
icebp
andl
shrb
icebp
fimuls
mov
pop
jg
jo
jns
inc
adc
popa
jnp
je
mov
clc
stos
mov
fs
sub
test
cs
test
pop
sub
outsl
js
lret
or
jge
shrb
jmp
sbb
inc
jg
jecxz
push
mov
or
test
ljmp
in
in
mov
fstps
int3
lret
xchg
push
lds
lock
lods
cmp
inc
mov
lcall
mov
xchg
lea
xor
and
adc
decl
popf
pop
and
stc
clc
mov
jb
int3
rcrb
cmpsb
add
dec
imul
dec
aam
and
push
mov
bound
xchg
nop
jecxz
add
xchg
push
sub
jmp
sub
lock
mov
xchg
mov
pop
push
or
out
imul
ret
fsubp
xor
push
lock
xor
adc
push
and
rcl
std
pusha
pop
or
mov
leave
pop
addl
xchg
jb
fcmovne
xor
or
xchg
xchg
mov
fimuls
cmp
mov
int3
inc
mov
ret
inc
mov
loope
and
pop
pop
int
cli
push
aas
push
arpl
jbe
jle
mov
dec
pop
xchg
jo
mov
sub
pop
out
dec
cld
mov
jae
jg
inc
scas
call
shlb
cmpsl
mov
out
push
pushl
xor
inc
loope
mov
cmpsb
xor
testl
dec
or
imull
sub
xchg
cmpsb
lret
mov
in
push
add
push
sub
loop
mov
lcall
aas
mov
dec
push
hlt
les
sbbb
push
cmp
mov
sub
popa
leave
xchg
in
gs
fisubrl
lock
jmp
notb
shll
test
adc
jae
mov
loopne
dec
lret
sub
cld
mov
xchg
push
fld
mov
jg
mov
jp
inc
outsl
cmp
adc
out
dec
mov
xchg
cltd
aaa
lods
iret
pop
or
sahf
cmc
xchg
imul
adc
fnsave
orl
outsb
mov
inc
push
leave
xor
ds
inc
jle
cmp
insb
pop
dec
je
jecxz
loop,pt
outsb
mov
push
scas
sub
andb
and
cmc
xchg
popa
push
lret
das
jge
fwait
and
jns
adc
pop
loopne
mov
add
push
mov
pop
hlt
xchg
sar
pop
xchg
jns
add
and
pop
cmp
not
pushf
jle
fcompl
insb
jb
cwtl
mov
jne
sbb
popa
imul
lret
std
inc
rorb
ror
pop
sub
xchg
push
fwait
mov
and
mov
das
xchg
fisubs
cs
fadds
hlt
out
aas
ljmp
loopne
adc
cltd
lahf
mov
xorb
jo
inc
cld
into
cld
sbb
pop
inc
es
mov
ljmp
lea
pop
push
add
jns
dec
sbb
es
sbbb
lods
rorl
push
out
jge
dec
mov
sbb
mov
mov
andl
outsl
xor
lea
imulb
ret
sbb
push
mov
in
jge
cmp
clc
mov
test
pop
test
mov
fimull
nop
sarb
sub
mov
push
rcll
into
lods
cmp
dec
or
or
test
lret
xorb
or
data16
andb
iret
pop
mov
cmpsl
mov
mov
cmp
rorl
mov
fidivs
cmpsl
sub
add
add
xchg
stos
adc
pop
iret
into
movsl
dec
sub
and
adc
xchg
movsb
inc
aaa
aaa
into
stos
mov
ds
mov
fwait
adc
test
xor
test
aas
inc
jl
ret
adc
mov
bound
imull
hlt
inc
jecxz
push
mov
push
dec
mov
push
out
jle
insb
not
mov
ss
movb
fcmovb
add
repz
and
dec
sub
mov
jbe
pop
mov
movsb
add
jnp
push
ljmp
and
cs
out
test
enter
test
std
lea
loopne
dec
rcrb
push
test
repnz
in
int
daa
loop
data16
mov
xchg
nop
and
mov
or
call
sbb
mov
ret
xlat
push
sbb
push
cmp
sahf
pop
inc
xor
dec
out
mov
mov
jb
push
pop
sub
cmp
mov
in
fiaddl
jno
and
stos
and
ss
call
incb
ror
lods
lret
jp
mov
xor
or
add
pop
push
dec
mov
pop
dec
xor
insb
into
stc
stos
pop
jecxz
cld
adc
ss
mov
mov
cwtl
cli
adc
je
pop
cmp
jg
dec
and
adc
ljmp
ds
dec
popf
pop
and
jne
andl
out
in
popa
xchg
sti
push
jle
jecxz
mov
inc
mov
rcr
inc
inc
mov
mov
aam
push
mov
xlat
push
cmpsb
fists
adc
cmp
pushf
adc
fisubrs
pop
sbbb
subl
test
mov
pop
into
and
cli
jno
jo
je
idiv
gs
mov
call
xor
pop
fwait
aam
dec
arpl
and
push
jmp
xor
jge
add
int
jb
addr16
sbb
jp
push
xor
push
cli
ss
dec
xchg
jns
es
imul
mov
dec
lock
sbb
push
xchg
test
inc
adc
out
lock
movsl
cmc
lock
mov
pusha
mov
iret
test
xchg
inc
inc
jl
jl
xlat
mov
push
xchg
nop
into
les
push
dec
xor
jbe
scas
jb
mov
addl
dec
adc
xor
xchg
adc
sub
or
es
enter
movsb
aad
sti
push
or
push
arpl
loopne
fwait
pop
xor
gs
add
imul
bound
jns
outsb
das
cmp
fcomip
ret
xchg
sub
mov
cmp
andl
int
insl
mov
xchg
test
pop
pop
xchg
test
das
sub
dec
adc
push
je
push
bound
mov
push
add
pop
inc
fldl
and
mulb
int
pop
sub
fs
pop
pop
sbb
xchg
pop
test
lret
rorl
jbe
push
in
scas
push
pcmpgtw
dec
pop
int
insb
mov
subb
sbb
ja
movsb
mov
mov
xor
cmp
xchg
fadds
mov
or
fsubr
push
adc
ljmp
inc
sbb
js
orl
int3
cli
cmpl
sbb
pop
cmp
lret
push
xor
xchg
pushf
adc
lahf
fsubrs
ss
outsb
jno
stc
movsb
add
inc
inc
fadds
flds
or
imul
adc
dec
fs
mov
push
shrb
out
cli
mov
jl
iret
dec
stc
clc
sbb
and
negb
stc
cli
or
ret
insb
test
sub
in
pop
adc
inc
sub
push
mov
or
adc
mov
jae
popf
jbe
adc
sub
les
repnz
or
aas
cmp
xchg
inc
adc
fs
pop
push
int
iret
sbb
push
inc
fldenv
xor
mov
pop
insl
setl
add
push
ds
sub
orb
mov
push
jmp
lock
ret
in
rcll
sbb
lret
sbb
imul
and
inc
mov
inc
sahf
pop
shld
aad
cmp
xchg
push
sub
mov
push
jno
mov
aas
pop
mov
lahf
dec
call
or
cltd
outsb
pop
xchg
mov
hlt
or
ror
mov
movsb
fsub
hlt
or
xchg
imul
fildll
add
push
cltd
repz
out
movsl
rcrb
mov
jl
loopne
jg
or
subl
lahf
jle
outsl
and
popa
jmp
sub
cld
cmp
cmp
push
lods
dec
sub
aad
or
rclb
cmp
xor
addb
lds
out
les
lock
fwait
add
jp
adc
adc
out
pop
jnp
out
adc
add
push
cli
jnp
in
xor
ja
shl
sbb
jg
or
cwtl
popa
int3
xor
insl
and
adc
stos
cld
fidivl
sbb
pop
cmp
push
ret
jno,pn
xchg
push
mov
pop
mov
int
jns
mov
xor
in
movsl
cmpsb
mov
aad
sub
add
into
ja
pop
stc
fmulp
ja
or
or
idiv
jge
addr16
mov
icebp
cmp
inc
gs
adc
decl
mul
roll
push
aam
pusha
pop
fstp
sarl
mov
fs
inc
pop
sbb
jno
stc
pop
sbb
loop
lea
addr16
push
adc
mov
loope
ja
negb
aam
jl
or
add
loopne
adc
sub
adc
in
xchg
jno
jo
mov
clc
pminsw
add
cmp
xchg
jno
xchg
aas
out
in
mov
int3
outsl
lock
arpl
mov
iret
and
outsl
dec
fcomps
sahf
jp
lods
jmp
pop
sub
adc
adc
sbb
pop
inc
inc
mov
push
mov
inc
sub
data16
pop
cmp
inc
mov
loope
sbb
xchg
dec
xor
rclb
add
aaa
cs
pop
ror
or
aad
cmp
repz
dec
add
xor
das
mov
dec
enter
cmp
sub
movsl
mov
push
repnz
mov
sub
xor
mov
test
adc
xlat
cmp
mov
or
test
lds
test
subl
dec
into
mov
adc
fs
xchg
jmp
add
adc
xchg
mov
push
lret
jne
imul
push
pop
sbb
mov
insl
or
fisubs
nop
lods
js
lea
outsb
push
mov
iret
or
mov
mov
fs
or
jle
lcall
insl
and
mov
int
imul
fxch
jl
mov
mov
sub
mov
or
divb
lcall
xchg
ret
aaa
sbb
inc
cmp
mov
loopne
ss
in
stc
xchg
push
push
inc
out
mov
stos
int3
jg
cmp
lods
xchg
inc
dec
or
xor
xchg
jbe
cld
dec
daa
mov
cmpsb
pop
sub
jecxz
ret
inc
cmpl
hlt
sbb
jge
out
sub
adc
and
xor
lock
push
pop
les
and
mov
inc
xchg
pop
test
mov
and
cmp
insl
rcrb
xchg
pop
repnz
subb
jnp
jle
sbb
mov
sbb
loopne
shr
daa
xchg
jno
push
lret
add
arpl
mov
xor
fidivrs
push
dec
js
push
or
ficomps
sbb
mov
popa
cltd
dec
bound
and
dec
sti
movsb
add
and
add
mov
fcoml
add
fstpl
xor
or
jp
aam
fwait
aaa
mov
sub
rorb
in
mov
test
out
je
ja
scas
dec
mov
psadbw
fstl
mov
je
stos
outsb
adc
pop
ret
mov
mov
les
rep
jno
jg
out
pop
mov
and
push
orl
cmc
xchg
jle
nopl
xorb
adc
andl
aam
rorb
sbb
sbb
cmp
mov
gs
push
loope
jecxz
add
and
hlt
iret
cmpsb
and
add
mov
jbe
mov
mov
loop
cs
cmp
mov
mov
enter
scas
push
dec
arpl
int3
call
lds
sarl
inc
and
in
xor
and
lcall
fimuls
lods
pop
jne
mov
cmc
movsl
test
rcll
jp
mov
jmp
sbb
imul
push
syscall
cmc
mov
sbbb
mov
dec
hlt
and
mov
daa
outsb
test
xchg
sub
loop
dec
sub
lret
inc
inc
ss
cmp
push
or
push
jns
mov
push
jecxz
sbb
jmp
rclb
sbb
push
pop
leave
xor
cwtl
or
adc
add
jmp
or
ret
call
outsb
movsw
jnp
mov
sub
mov
pop
insb
dec
mov
cmc
dec
cmp
repz
fistl
and
or
pop
ljmp
sbb
dec
mov
int
jp
jl
sbb
icebp
cli
rcrl
hlt
mov
or
inc
xor
sti
roll
ljmp
std
lahf
pop
out
cltd
cmp
popa
loopne
jle
in
sti
adc
int
jp
mov
sub
xor
es
ret
clc
jp
cs
mov
ja
out
cmp
shrb
popf
dec
and
push
dec
popf
jnp
out
jne
cwtl
scas
mov
pop
jo
cmp
ret
lret
in
lock
push
lods
stos
mov
jne
lret
or
xor
gs
movsl
or
push
movsl
push
lock
lds
add
fstps
adc
lret
subl
loop
add
dec
popa
ss
pop
iret
test
pop
or
test
jecxz
add
xor
xchg
sbb
aam
dec
loope
repnz
into
inc
jo
dec
jne
xchg
out
aam
jno
sahf
pop
xchg
cld
dec
sbb
pop
inc
adc
adc
das
mov
popa
aam
jmp
inc
insl
xchg
cltd
jae
pop
xchg
in
mov
or
add
popf
inc
sub
inc
call
les
add
loope
repnz
add
hlt
sbb
sub
inc
push
ljmp
or
pop
ss
jns
ss
into
add
data16
cmp
mov
adc
scas
movsl
xchg
push
mov
movsb
xchg
add
mov
rorb
push
aas
iret
or
xchg
mov
mov
push
inc
lock
sbb
in
testl
out
repnz
adcb
jbe
or
subl
popf
cmp
jge
inc
dec
loopne
icebp
sub
repnz
dec
mov
jae
inc
mulb
mov
xchg
cmp
stc
mov
mov
mov
mov
lods
stos
shlb
xchg
in
je
pop
sti
jbe
adc
xchg
jb
pop
and
push
je
push
adc
push
add
in
sub
pop
mov
lds
fld
and
fxch
xchg
jbe
insb
out
testb
push
xchg
sub
add
dec
lcall
mov
popa
xchg
sbb
mov
push
rclb
mov
pop
repnz
inc
mov
negb
mov
pop
fistpll
scas
push
add
or
out
outsb
dec
jnp
daa
lock
mov
dec
mov
scas
push
mov
mov
je
push
inc
mov
js
jae
test
mov
insl
jp
push
sub
adc
pop
adc
xchg
pop
dec
sub
pop
imul
lret
je
add
rcr
dec
sub
icebp
in
add
sub
ret
push
rorl
push
xchg
lock
dec
cmpb
xor
out
adc
mov
xchg
test
jae
lods
cmp
xor
cmpsl
or
sbb
cwtl
and
cwtl
repz
mov
pop
pushf
mov
mov
dec
je
fimuls
xchg
add
fdivl
mov
mov
loope
adc
inc
jg
inc
add
dec
add
cs
pop
dec
and
mov
xor
lock
xor
mov
int3
xchg
arpl
ret
roll
and
adc
adc
adc
call
mov
mov
xchg
fdivr
js
scas
test
push
mov
xchg
sub
loopne
cmc
mov
mov
push
mov
cmc
push
xchg
cmpsl
dec
les
pop
mov
dec
mov
mov
adc
aad
inc
mov
rorl
jns
cs
ret
and
mov
pop
imul
movl
and
lods
in
xor
push
daa
sub
fstl
sbb
dec
sub
rcr
pop
sbb
mov
std
notl
inc
xor
punpckldq
pop
xchg
dec
bound
adc
and
in
inc
fistpll
jg
aad
subl
lea
mov
cltd
cli
fs
push
push
xchg
xor
lahf
sahf
jno
std
inc
cmp
sub
inc
cwtl
mov
ljmp
test
cmpsb
mov
dec
out
xchg
mov
test
jae
xchg
iret
push
lahf
dec
call
out
ljmp
sahf
mov
mov
xchg
or
push
pop
xor
fnstenv
int
ret
xchg
xor
fcoml
test
flds
sbb
mov
aas
repz
notl
dec
push
stc
fcoms
mov
pop
dec
idivb
lock
pop
aam
int
inc
mov
insb
xchg
stc
inc
sub
xchg
into
test
scas
inc
cwtl
rcl
xor
inc
rep
outsl
dec
jne,pn
push
and
and
imul
nop
je
pop
pushl
pop
adc
aaa
leave
cltd
ja
xorl
in
add
test
inc
imul
fwait
xchg
stos
cltd
aam
fcmovbe
negl
dec
xor
adc
mov
or
mov
and
movsl
jl
in
fildl
and
jp
shlb
repz
mov
mov
cmp
mov
push
xor
push
sarb
add
popf
and
ret
dec
jnp
testb
lods
push
cmp
pop
xor
pop
jl
into
cli
xchg
mov
xchg
leave
pop
inc
xlat
pusha
pop
inc
rclb
push
or
sub
inc
adc
cwtl
push
insl
das
jnp
jbe
popa
jne
ljmp
or
pop
adc
mov
mov
jecxz
sub
fsubrs
adc
shlb
xchg
mov
push
xchg
jecxz
sub
push
shll
sbb
stos
pop
nop
push
jmp
add
push
call
pusha
adc
jl
sub
mov
xlat
fcompl
adc
adc
fstpt
out
mov
inc
lret
jmp
int3
mov
mov
jno
jno
pop
sbb
push
pop
aam
xor
sbb
xor
mov
pop
mov
mov
jo
rolb
mov
cmp
cli
js
std
ljmp
addr16
es
mov
inc
out
cld
xchg
lods
test
out
mov
mov
flds
popf
lods
jne
and
rcl
add
jmp
sbb
push
push
mov
dec
add
cs
mov
imul
dec
scas
repnz
dec
push
out
cld
jp
sbb
mov
pop
movsb
push
xor
xchg
lock
mov
add
test
or
jmp
shlb
aaa
outsl
xchg
in
dec
lahf
add
icebp
popf
mov
std
push
ret
lea
fistpll
pop
scas
movb
outsl
inc
mov
dec
jbe
movsl
push
push
pop
and
and
xor
mov
mov
mov
sbb
fnsave
adc
cmp
sub
sub
pop
adc
xchg
lret
lods
jno
xorb
mov
repz
into
test
adc
shrl
hlt
fbstp
pop
iret
fnsave
xor
js
or
dec
add
js
test
push
adc
adc
cltd
xchg
xchg
cld
jns
push
test
sub
push
rcl
test
or
test
mov
insl
movsl
dec
scas
jg
pop
mov
xor
stc
aam
xchg
push
push
dec
andl
hlt
negb
or
push
or
cli
sub
mov
sub
repz
adc
cmp
adc
sbb
aaa
dec
push
adc
gs
in
je
incb
stos
sahf
mov
stc
and
and
lret
xchg
cmc
add
fwait
jle
rep
mov
jl
xor
xchg
pop
jno
dec
aam
movsl
mov
jno
mov
inc
xor
std
xlat
in
lods
xor
push
jnp
pop
insb
stos
jmp
jle
xchg
popa
pushf
mov
cld
sbb
ret
cs
iret
data16
mov
aam
jns
mov
aas
mov
push
mov
lret
push
lock
jno
out
mov
out
xchg
icebp
and
mov
ljmp
fcmovne
inc
jns
popaw
pop
lahf
hlt
test
and
xor
repnz
ljmp
pushf
pop
out
mov
cmp
mov
repnz
leave
cmp
adc
add
in
jmp
pop
je
addr16
push
test
ss
adc
bound
rcrl
leave
decl
dec
jbe
xchg
movsb
jae
ficomps
dec
and
scas
pop
jge
outsl
fwait
inc
pop
into
xor
sub
and
and
lock
into
pop
out
mov
xchg
push
aas
mov
enter
cmp
cwtl
xchg
jmp
shll
inc
cwtl
pop
sbb
and
pop
push
push
pop
mov
out
lahf
xor
mov
lods
int3
or
cltd
pop
and
cs
pop
cltd
xchg
cwtl
outsl
and
xor
loop
xchg
pop
dec
rcl
and
cmp
adc
out
and
lea
and
movsb
clc
stos
mov
add
pop
out
iret
pop
mov
loope
jns
gs
mov
inc
add
mov
roll
fldenv
dec
rcrb
aas
icebp
dec
or
cmp
ds
das
jge
inc
mov
mov
add
add
mov
mov
repnz
inc
inc
pop
ret
int
jo
mov
testb
cmpsb
repz
cltd
mov
fidivl
enter
pop
out
inc
add
addb
xchg
push
jno
xchg
inc
subb
stos
into
add
fildl
cltd
ret
mov
mov
mov
dec
and
fimull
sub
add
lock
pop
or
cmp
daa
pop
insb
push
std
outsl
inc
dec
mov
inc
fnstenv
xor
push
dec
out
fwait
mov
ja
pop
cltd
pusha
mov
dec
js
xchg
test
mov
stos
push
add
add
adc
xor
dec
dec
nop
jmp
aad
inc
iret
daa
pop
popa
xchg
jo
into
cmpsl
loop
pop
cmpsl
jecxz
out
addl
mov
jl
je
fucomi
out
mov
dec
das
adcb
lock
nop
xchg
cmp
popf
fildll
jmp
push
pop
pop
shlb
mov
dec
insb
bound
movsb
shll
inc
in
jp
xchg
push
pop
out
orl
lods
mov
jno
jae
xor
mov
cwtl
into
xchg
popf
out
aas
aad
add
pop
aas
jne
ss
out
add
cmc
jbe
fiaddl
jb
mov
cli
iret
mov
cmp
idivl
ds
or
stc
shrb
lea
clc
je
rolb
aad
inc
cmp
mov
pop
mov
fsubs
xchg
jecxz
lea
sbb
lcall
mov
pop
addr16
mov
out
sarb
xlat
bound
out
adc
mov
adc
mov
or
mov
mov
push
xchg
push
dec
xor
sti
iret
mov
mov
and
js
sbb
scas
pop
rcr
sub
jmp
add
clc
pop
addr16
dec
jno
or
cmp
mov
neg
iret
mov
in
pop
adc
int3
adc
mov
jmp
cmp
push
add
stos
ror
cs
fidivrl
clc
mov
cpuid
aad
pop
pushf
xchg
adc
call
jno
ret
lret
popa
dec
jns
pop
sar
pop
lret
mov
ret
es
fs
jecxz
jbe
mov
xchg
push
sbb
in
mov
mov
push
fiaddl
or
out
and
push
pop
jns
sub
dec
out
test
mov
pop
adc
mov
test
enter
popf
push
iret
jne
daa
mov
pop
mov
mov
test
lret
in
ljmp
or
cmp
cmp
cli
inc
flds
cmpsb
inc
in
dec
imul
out
inc
pop
inc
dec
sub
mov
inc
aas
stos
mov
and
repz
inc
pop
push
or
insl
pop
mov
xchg
cmp
sbb
jno
movsb
adc
mov
sti
test
dec
sti
js
popf
imul
xor
push
cmp
mov
pop
cli
cwtl
mov
pop
shr
ljmp
in
loop
mov
cmp
dec
in
xchg
push
lahf
push
dec
ljmp
sub
and
das
dec
test
or
jge
jno
aas
mov
cmp
mov
jge
mov
sahf
rcr
gs
sbb
push
into
insl
mov
popf
mov
fbstp
inc
sub
adc
movb
push
inc
xchg
fs
jecxz
outsb
sbb
aad
jae
int
dec
dec
push
cmp
movsb
fisubs
in
and
pusha
pop
es
loope
inc
mov
movsl
inc
pop
push
push
cs
or
sahf
enter
aas
outsb
xchg
and
rcrl
ficoms
push
fdivs
cli
jno
in
cmp
popf
pop
xor
nop
xchg
dec
enter
test
mov
cmp
sbbb
pusha
in
lret
sub
shl
lods
out
sub
inc
nop
sub
xor
in
or
xchg
imul
push
pusha
cmpsb
add
xlat
adc
nop
push
push
xchg
sbb
cld
push
push
xor
test
insb
sbb
push
in
rcr
jle
sahf
mov
adc
test
ljmp
and
imul
xchg
dec
loop
cltd
or
je
add
xor
xor
sub
in
vpshufhw
mov
pop
or
imul
jns
bnd
movsb
fsubrl
sti
out
clc
cwtl
dec
bnd
in
rcl
and
mov
and
cmp
mov
popl
test
jge
outsl
int3
imul
xchg
xchg
xchg
stc
push
jmp
dec
mov
cmp
lahf
and
insb
call
jnp
mov
xor
movsb
mov
cwtl
lock
cmpsl
xchg
shlb
cmp
dec
mov
cmc
dec
push
js
loope
mov
or
js
sub
cmovb
pop
and
sbb
pop
sbb
mov
enter
repz
mov
bound
imul
notb
mov
test
jns
jne
inc
mov
jmp
lds
cmp
cmc
into
mov
jp
out
push
push
flds
cmp
mov
xchg
ja
or
incb
insl
mov
and
testl
mov
popf
filds
jp
adc
stos
in
or
sub
sbb
popa
xor
rclb
inc
push
jmp
leave
or
lds
decl
mov
sub
les
test
push
xchg
inc
mov
enter
jb
jmp
and
hlt
pop
shlb
sbb
and
push
add
test
xor
adc
jae
cld
out
mov
xor
jnp
xlat
add
push
xlat
sbb
popa
je
outsl
mov
aas
dec
cmp
pop
xchg
mov
inc
sbb
mov
test
mov
xchg
cli
icebp
hlt
popf
mov
inc
cltd
cmp
push
adcl
cltd
add
sub
ret
fdivs
push
xor
jae
out
lahf
add
scas
xor
lahf
sbb
add
push
dec
pop
mov
test
pop
inc
xchg
sbb
sarb
pop
add
insl
cmp
lea
dec
push
push
add
negl
arpl
dec
iret
pop
ss
jae
sbb
rorl
jae
and
rcll
xchg
sbb
repz
mov
out
sub
add
jne
xor
roll
jmp
cltd
adc
popf
iret
cmpb
loope
sbb
fldt
jle
scas
shr
xchg
xor
mov
jl
mov
mov
mov
loope
jge
and
addr16
out
loope
dec
push
pop
into
rorb
out
mov
pushf
add
jae
or
pop
push
jg
pop
cmc
add
addr16
xorl
stc
mov
sti
pushf
test
dec
lcall
es
stc
dec
das
dec
mov
ret
mov
mov
movsb
fwait
inc
mov
xchg
insb
push
cmp
mov
mov
dec
jmp
dec
jmp
and
lods
repnz
or
jns
adc
and
in
pop
push
xor
pop
add
jge
in
xchg
pop
in
adc
call
pop
cld
shrb
jle
out
sub
mov
inc
sbb
movsl
and
mov
and
jns
test
movsl
adc
fistpl
nop
imul
lods
test
lahf
js
into
jge
mov
cmp
pop
mov
pop
mov
xlat
orb
mov
or
or
ja
icebp
nop
stc
inc
rorl
cld
sbb
pusha
inc
in
sbb
pop
xchg
int
roll
movsl
cmp
lods
es
imull
imul
xchg
jnp
cmp
aad
xor
jg
in
mov
jo
sarb
notb
sbb
les
adc
lahf
lcall
xor
and
xor
inc
mov
xchg
lcall
or
sbb
int
shl
jmp
lods
xor
mov
dec
pusha
push
sub
push
push
pop
cmp
lea
jmp
add
test
and
adc
add
pop
fs
sub
mov
sti
popf
mov
pop
call
sbb
inc
dec
cmc
sub
insl
divl
outsb
lods
in
or
sub
pusha
hlt
dec
or
cmc
cwtl
fistps
jg
aaa
or
jmp
outsl
bound
sbb
or
xchg
mov
lock
jns
fcoml
aam
xor
mov
insl
xorb
ja
sbb
mov
push
pusha
ret
out
jge
push
aas
iret
jb
mov
mov
popa
dec
inc
leave
cwtl
jo
in
mov
cmp
sub
jp
lcall
sahf
jp
cwtl
mov
add
jle
lds
in
out
shl
jle
sub
std
push
incl
movsb
stc
scas
std
jle
aam
inc
xchg
cwtl
sbb
push
sbb
sbb
jge
mov
fwait
inc
push
xor
cmpsl
aad
outsl
jbe,pn
sub
xchg
xor
xor
int
xchg
lods
adc
lea
jecxz
sbb
popf
outsb
std
addl
ret
jp
in
aas
ret
int
repnz
mov
mov
jg
sbb
push
out
stc
pop
cwtl
dec
mov
pop
ret
xchg
scas
mov
and
movsl
fdivs
movsb
dec
jnp
mov
dec
in
and
jno
jmp
lret
jno
add
push
push
sub
stos
inc
negb
fimull
mov
int3
lds
fists
cmpsb
cmpl
mov
dec
lock
pop
mov
lods
sahf
push
mov
xor
xor
pop
jnp
ficoms
aas
in
repnz
adc
inc
outsb
inc
add
daa
mov
and
mov
jg
es
aad
lret
jmp
cmp
inc
ret
mov
in
cmc
xor
mov
mov
jb
outsl
inc
testb
mov
jg
loope
push
mov
es
cmp
hlt
jecxz
lea
mov
xchg
icebp
xor
mov
sahf
cmp
jg
movsl
mov
cli
sar
mov
loope
push
dec
jmp
sbb
sbb
cmp
adc
add
fists
test
roll
xor
mov
shll
push
mov
dec
and
sbb
inc
test
loope
sub
mov
lret
adc
inc
insb
in
or
xchg
test
enter
xchg
inc
mov
xor
stos
or
push
jo
fidivrs
aam
inc
into
sahf
ret
into
inc
shlb
dec
push
adc
and
imul
ret
cmp
lahf
rep
divb
out
push
inc
or
mov
pop
divb
jb
lea
in
sti
lods
sbb
movsb
pop
cmp
outsb
pop
movsb
push
jns
inc
jecxz
bound
addl
iret
aad
adc
enter
leave
dec
xchg
xor
cmc
push
jl
push
xchg
dec
lret
sub
sti
fwait
sbb
shrl
lods
ror
cmpsl
push
push
je
rcrb
daa
std
mov
test
or
push
pushf
out
mov
movsb
arpl
les
fidivrl
pop
mov
les
jno,pn
add
pop
mov
loopne
cmp
push
shll
mov
sahf
mov
xor
mov
les
pop
cmp
mov
ja
lock
push
outsb
scas
pop
xchg
enter
enter
mov
jae
add
jnp
lret
test
adc
mov
mov
iret
cmp
or
out
xchg
icebp
loop
cld
incl
mov
cmpsb
pop
jecxz
jl
dec
fidivs
movsl
push
lahf
pop
pop
cmp
pop
xor
aam
mov
addb
mov
jb
loop
and
and
inc
xorb
mov
add
loope
in
js
jmp
xor
out
mov
mov
test
das
jmp
stc
les
and
and
sbb
int
gs
pop
and
shl
mov
idivl
stos
push
add
sarl
sub
out
mov
inc
pop
xchg
adc
mov
sti
push
push
xchg
aas
and
adc
mov
cmp
jecxz
xor
lcall
sub
xchg
sub
sbb
sbb
sbb
pushf
lods
fwait
sbb
dec
or
sbb
inc
inc
inc
scas
ret
pop
add
xchg
frstors
xor
insb
sbb
mov
icebp
in
lods
repz
mov
das
lea
repnz
test
outsb
les
bound
test
mov
mov
js
pop
jb
or
or
mov
xor
daa
cs
int
cmp
stc
xstore-rng
cmpsl
sbb
mov
pop
into
jae
repz
out
std
out
js
fstps
pop
lock
shll
xchg
rcrb
and
popf
pop
sub
bound
addr16
rorl
sbb
movsb
mov
add
lds
fdivrl
cmp
mov
pop
loop
and
jns
xchg
cmp
repnz
push
iret
push
jmp
loopne
test
lcall
mov
ss
xchg
mov
sbb
mov
jecxz
inc
in
mov
mov
inc
xchg
add
out
sbb
or
push
push
addr16
test
lods
loop
xchg
sbb
into
adc
xor
or
lds
std
loopne
sub
movsl
sub
mov
call
push
inc
push
out
and
jge
pop
cmpsl
jecxz
inc
inc
push
sarl
nop
xchg
andl
push
repnz
sub
add
cmc
mov
cltd
add
mov
fisubrs
dec
jnp
shlb
int
cli
es
push
enter
cmp
and
xchg
mov
fldl
outsb
inc
mov
out
enter
imul
add
sbb
and
jmp
dec
addr16
subb
enter
jbe
xor
jmp
ss
xor
shlb
mov
pop
and
sub
mov
cmp
adc
pop
out
xor
lret
stc
mov
adcl
jae
cmpsl
lahf
pop
mov
negl
aam
into
sbb
inc
jg
fnstcw
pop
rcll
jo
lcall
popa
sub
fsubl
dec
xor
dec
inc
mov
in
fisubl
jmp
icebp
jno
cmp
push
inc
adc
nop
daa
fbld
bound
xor
fbstp
adc
or
and
push
bound
std
ljmp
lret
imul
out
lret
lea
test
jns
cmc
test
jp
rclb
xor
arpl
mov
push
aaa
push
lret
dec
push
in
or
mov
or
test
popf
ficomps
movsb
lds
dec
mov
mov
adcl
test
cmpsl
inc
jno
add
jb
cmp
jb
or
stos
jns
push
and
fwait
pop
scas
mov
adc
ljmp
daa
cmp
mov
aas
jle
adc
mov
mov
add
pop
pop
cmpsl
and
mov
in
int
inc
push
and
insb
add
jl
cmp
and
cmp
or
pop
test
mov
mov
fidivl
fiadds
push
xchg
xchg
out
arpl
in
pop
in
push
ljmp
aam
mov
xchg
or
sub
test
mov
movsb
adc
lods
out
adc
loope
sbb
div
xchg
stos
sub
andl
cmpsl
push
mov
xchg
lcall
js
je
jbe
xor
sbb
inc
jle
ja
cli
push
adc
add
std
inc
add
iret
cmpsb
push
mov
outsb
jp
shl
pop
mov
mov
jnp
and
test
jg
mov
ds
mov
inc
fidivs
mov
mov
mul
cmp
inc
test
and
dec
push
imul
or
and
sbb
aaa
mov
leave
or
sub
addr16
add
cs
pop
push
mov
in
xor
stos
mov
in
sbb
pop
rclb
mov
mov
inc
mov
mov
mov
sub
scas
lods
pop
cmp
cld
pushf
sahf
inc
ret
ss
mov
mov
mov
inc
gs
or
adc
push
popf
sbb
pop
mov
fistl
sbb
js
sti
nop
int3
or
into
inc
mov
or
jl
mov
jle
repz
mov
sub
lahf
sub
shl
test
and
mov
jp
mov
out
and
dec
xchg
xlat
sub
data16
or
clc
inc
sahf
popf
aad
jbe
cmp
ret
mov
mov
jp
mov
adc
sbb
jae
push
add
adc
jbe
lods
and
enter
lret
movsl
loopne
add
daa
int3
fisttpll
arpl
adc
pop
pop
cli
gs
push
daa
and
push
mov
shlb
jle
dec
aam
ds
imul
ss
popa
push
dec
add
inc
addl
inc
aad
mov
cmp
mov
in
pop
lock
add
and
aas
sub
cmpsb
daa
mov
stos
mov
push
call
ret
stos
cmp
push
enter
cmp
add
fbld
add
pop
xor
sbb
push
std
inc
inc
ficoms
in
hlt
out
adc
pop
lcall
js
sbb
mov
loopne
cmp
push
xchg
add
cmp
scas
stos
dec
mov
cli
dec
pop
out
sub
idivb
inc
out
sub
xor
out
jo
adc
add
push
es
out
sti
test
cmpl
dec
jecxz
es
incl
les
push
sub
mov
fstps
jo
push
addb
jae
lds
je
dec
pop
cmpsl
test
add
jmp
cwtl
adc
or
mov
fisttpl
pop
dec
loop
push
out
imul
mov
pop
outsb
out
jg
xchg
out
mov
sahf
sbb
outsl
inc
bound
jmp
lcall
jbe
movsb
sahf
push
arpl
xchg
test
cmc
jne
jns
repnz
and
stos
cs
mov
lock
pop
or
stos
lods
jo
jecxz
xor
rcrl
arpl
test
push
outsl
lret
mov
aaa
or
cmp
aaa
mov
nop
fdivs
dec
mov
pop
fwait
cmc
scas
jb
ret
aaa
mov
in
inc
loop
inc
fisubrl
ret
and
mov
mov
mov
jo
or
inc
cmpsb
fcomps
or
les
in
jmp
in
leave
xor
imul
cltd
loop
mov
test
add
push
adc
dec
jg
hlt
pop
adc
ficoms
sub
jae
mov
scas
andb
cmp
mov
in
shlb
test
mov
out
jne
aaa
insb
mov
adc
nop
cltd
outsl
pop
mov
fistpl
pop
in
cmpsl
inc
int3
push
jp
roll
shl
sahf
add
test
repz
cmp
sti
aas
scas
jb
push
std
inc
enter
fnstcw
pop
mov
movsb
sub
mov
andb
lret
pop
cmp
jecxz
cmpl
sbb
out
frstor
adc
or
pop
jnp
in
adc
add
loop
push
stos
pop
push
hlt
div
std
or
mov
arpl
arpl
xor
inc
mov
jmp
fstpl
mov
outsb
push
loope
rol
inc
adc
mov
je
int3
outsl
adc
cmpl
xor
sub
data16
out
xchg
sbb
dec
test
ds
imul
arpl
clc
xor
lods
cmpsb
push
push
idivl
push
adc
push
outsl
xor
loop
loop
mov
mov
cmp
ljmp
shlb
push
xor
iret
cwtl
xor
ficomps
addr16
or
lock
mov
fsubrs
out
psubw
lock
push
pop
icebp
adc
sub
dec
aas
sbb
leave
lea
mov
mov
lret
push
cmpl
fsubrl
aad
xchg
es
mov
call
insl
idivl
pop
sub
fwait
sbb
push
mov
aad
aaa
and
mov
sbbb
aad
stos
scas
fs
unpckhps
imul
sub
pop
js
mov
test
fs
shrl
test
mov
xchg
cltd
enter
mov
jle
sbb
int3
xchg
ret
int
add
lret
sub
stos
pop
scas
sub
leave
dec
xor
scas
loopne
sbb
lret
mov
je
cmpsb
roll
mov
push
std
mov
shrl
or
xor
dec
push
outsb
fistpll
hlt
aad
lea
jl
and
pop
lods
sbb
sarl
and
aaa
xor
test
add
dec
dec
cmc
fsubr
sub
cltd
mull
mov
cmpsb
out
mov
and
add
lods
andb
push
xchg
sub
imul
ja
outsl
stos
mov
add
pop
xlat
mov
lahf
aam
and
jns
rol
pop
mov
xchg
ret
aaa
pop
fnstenv
fwait
aas
enter
xchg
icebp
sbb
or
mov
jge
int3
int
sbb
lahf
pop
gs
push
cmpsb
xchg
lods
rcll
cmp
inc
pop
xchg
sub
pop
add
sub
mov
fldl
inc
sbb
ficoms
orl
ljmp
pop
sbb
icebp
imul
add
jbe
jl
enter
sub
mov
jbe
int
arpl
lret
js
pop
adc
pop
and
cmpsl
sub
aaa
aam
subl
and
mov
pop
lds
xlat
push
ja
cmpl
js
ret
fs
rolb
lods
outsb
in
cmc
cmp
lock
xchg
sub
rorl
int
cmp
pushl
lret
push
mov
add
lock
sbb
mov
out
mov
adcl
leave
movsb
popf
divl
mov
fldt
xchg
xchg
js
sahf
shrl
mov
sub
mov
push
adc
sbb
adc
cmp
hlt
aam
add
aad
test
enter
sub
popl
pop
leave
mov
aad
adc
test
dec
lock
jo
pop
aas
push
mov
nop
rcrl
pop
in
and
mov
lods
jns
adc
xor
adc
in
inc
adc
andb
loopne
and
mov
jne
cmp
jl
dec
popf
jb
shl
in
in
cmp
xchg
hlt
pop
sub
nop
jbe
aad
jle
ja
mov
pop
lret
xchg
add
fsubr
call
lds
cwtl
fimull
mov
in
js
or
sub
jle
fsubrl
inc
fadd
dec
xorl
or
js
jnp
leave
out
insb
jge
inc
mov
pop
bswap
lds
stc
adc
movsb
cmp
add
and
sub
cwtl
cli
inc
mov
inc
cmc
imul
sub
insl
into
int
aam
sbb
push
popa
in
filds
shlb
or
or
lea
fistpll
sbb
pop
inc
cmp
pop
lret
addr16
xor
cmc
sub
pusha
push
sub
pop
lret
mov
aad
stc
in
popf
fimull
fucomi
out
pop
loope
shlb
clc
dec
jns
mov
and
mov
shlb
inc
into
mov
jns
add
test
and
popl
pushl
gs
inc
das
lea
cmc
arpl
arpl
jmp
jo
lods
lret
mov
push
xor
test
mov
loopne,pn
and
popf
jnp
cmpl
adc
adc
test
mov
xchg
dec
ret
popa
cmc
out
ss
repnz
xor
outsb
leave
xor
add
mov
sbb
xor
inc
call
add
dec
insb
lock
cmp
testl
mov
xchg
dec
jecxz
stos
das
and
cmc
jmp
in
jg
mov
mov
fwait
sbb
das
cmpsb
scas
pop
push
mov
lcall
in
lock
cmpsb
sti
push
push
inc
ret
mov
jno
hlt
aad
mov
lcall
jo
or
decb
cmc
std
pop
xor
test
out
sarl
repnz
xchg
in
popa
add
mov
ss
push
mov
loope
fisubrs
mov
cmp
fmuls
xor
sub
dec
es
lret
mov
imul
sti
and
lsl
test
mov
sub
out
in
xor
lea
not
cltd
and
xchg
sub
repnz
into
add
mov
movsl
in
test
jl
inc
cltd
ret
sahf
cltd
or
in
jg
xchg
aam
testb
push
adc
mov
mov
das
pop
inc
or
shll
fsubs
mov
test
xlat
hlt
pop
add
lds
fdiv
sub
xchg
icebp
arpl
lret
rcr
or
cmc
fwait
out
cmpsb
mov
xchg
je
gs
mov
fidivrl
mov
addr16
pop
scas
mov
subl
adc
lock
and
adc
clc
sar
lcall
add
lea
pop
das
stos
rclb
push
jecxz
xor
fadd
sbb
les
xchg
dec
loopne
pop
aas
int
jnp
cmp
int
js
xchg
int3
cmp
jg
sub
aam
xor
es
adc
dec
mov
insl
jecxz
notl
push
pop
mov
popa
cmpsl
sub
mov
sub
insl
int3
leave
fstpl
sbb
xor
cli
jns
cltd
popa
loop
enter
test
mov
adc
mov
mov
sub
mov
sub
in
push
mov
sti
fadds
adc
sbb
inc
mov
xor
je
add
pop
pop
mov
inc
arpl
jp
xchg
or
fldt
shrb
dec
xor
sahf
imul
mov
sbb
addr16
jne
jbe
add
sub
jb
adc
pop
ds
loopne
test
leave
stos
sbb
ja
jae
inc
out
insl
sbb
fists
xor
in
or
leave
push
push
out
ja
mov
lret
test
dec
loopne
jle
mov
push
arpl
inc
inc
inc
jbe
scas
aad
push
xor
jp
sti
xchg
aad
gs
and
cltd
fiadds
push
lret
lock
push
pop
pusha
out
addr16
cmp
cltd
lods
orl
fisubl
das
and
dec
dec
sub
mov
in
xor
ret
cmp
xor
or
xchg
or
push
int
sub
out
fcmovb
mov
outsb
adc
mov
adcb
inc
fidivl
mov
sbb
mov
mov
pushf
cltd
out
movsb
repz
in
sti
push
test
xor
pop
rcr
jo
dec
or
subl
sbb
adc
jg
xchg
out
lcall
push
cmp
or
sarl
and
in
or
mov
or
push
fsubs
cmpsb
mov
and
mov
cld
push
imul
or
mov
sahf
cs
pop
imul
mov
aaa
sti
cs
push
push
push
add
and
jb
dec
xlat
or
call
adc
out
lahf
xor
mov
movsb
add
les
mov
out
sbb
sbb
cmpsb
outsb
daa
mov
adc
xchg
sarb
dec
in
cmpsl
pop
mov
mov
inc
sbb
cmc
popa
and
aad
jnp
shll
jge
jecxz
mov
ret
jns
cs
sbb
mov
pop
js
sarb
in
xor
add
outsb
mov
cmp
adc
or
outsb
xchg
in
pminsw
cmp
daa
inc
mov
dec
mov
and
sub
dec
int
pop
xchg
cmp
scas
sbb
mov
cli
dec
dec
test
loopne
lcall
xchg
enterw
mov
dec
je
int3
sbb
xchg
pop
mov
aas
adc
push
repnz
lock
cli
rcl
js
call
xchg
and
adc
xchg
out
mov
in
add
mov
clc
adc
sarl
sub
xor
add
fwait
and
or
mov
arpl
gs
lcall
in
ds
jp
stos
pusha
outsl
or
cmp
mov
push
sbb
adcb
loopne
std
pop
xchg
popf
dec
sub
add
jbe
cmp
inc
je
ret
jecxz
or
loope
push
pusha
in
mov
and
rcrl
out
sbb
insb
jp
jle
mov
dec
add
inc
xor
jbe
in
mov
call
out
add
sbb
fs
ret
mov
jno
jbe
stos
pop
add
scas
aas
inc
xchg
inc
xor
or
jmp
jnp
lret
mov
fcom
sti
call
xchg
sub
test
in
aaa
cmp
lds
inc
dec
sub
enter
insl
out
mov
imul
cmpl
jp
push
mov
call
or
dec
lock
inc
out
push
enter
popf
cmc
mov
jb
inc
cwtl
cmp
in
addr16
adc
cld
and
inc
fcoml
mov
lahf
jl
hlt
lock
stos
push
push
es
and
adc
pop
push
dec
jno
dec
push
mov
std
sub
js
sub
or
int
pop
aam
arpl
mov
adc
pop
out
sub
sub
sbbb
enter
mov
shll
pop
add
inc
call
add
add
inc
mov
pop
outsl
loop
fdivl
xchg
andb
pusha
cmpsb
pushf
inc
in
mov
mov
adc
ret
repz
push
jp
dec
ss
mov
rorl
lcall
push
rolb
popa
adc
push
bnd
or
inc
push
pop
shlb
sbb
or
scas
leave
xchg
in
mov
dec
add
shrl
movsb
imul
jnp
jns
repnz
movsb
arpl
aam
inc
insb
inc
loop
xchg
cmp
mov
dec
insl
xor
pop
aam
xchg
push
xchg
mov
loop
nop
shll
ja
fwait
pop
je
sub
dec
ret
cld
sbb
mov
sub
fistpl
cmpsb
bound
mov
push
arpl
or
in
cli
stc
cld
xchg
xchg
pop
aad
cwtl
lods
test
cmpsl
inc
jno
and
jle
mov
pop
addr16
xchg
cmp
dec
aaa
lcall
pushf
cwtl
sub
icebp
sub
mov
xlat
push
shl
lock
inc
insl
sti
push
mov
iret
add
xchg
push
jbe
aad
sbb
push
ss
xchg
cli
loop
inc
lods
add
fcmovnb
or
out
mov
pop
xchg
shr
cmp
xchg
sub
js
lds
out
jae
pop
dec
fidivrl
and
les
test
rcrb
cld
scas
out
lret
push
aad
enter
popf
pop
jae
pop
mov
or
daa
int3
sub
fistpll
cmc
xchg
nop
jae
iret
fadd
jle
enter
mov
xchg
sub
pop
push
cld
jb
mov
imul
sbb
xchg
adc
jg
push
les
inc
jne
adc
pop
ja
or
dec
cmp
push
nop
mov
and
popf
dec
adc
in
mov
add
mov
lock
ds
notb
mov
scas
sub
jmp
inc
test
lret
dec
add
xchg
cs
add
adc
inc
ljmp
xchg
repz
imul
adc
mov
mov
mov
inc
mov
jg
rclb
loope
sti
out
or
sub
ljmp
adc
das
sbb
pop
movsl
fsubrl
mov
pop
pop
adc
inc
fs
std
sti
das
sub
repz
pop
rcr
dec
iret
pop
dec
jp
loopne
push
movsl
stos
dec
loop
push
mov
movsb
or
or
sub
fisubrs
test
push
clc
inc
mov
pop
fmuls
jge
mov
mov
and
push
mov
shl
xor
sub
insb
outsb
mov
fisubrs
lret
or
out
sbb
mov
xlat
xchg
add
fsubrs
call
cmp
cld
push
pop
add
cmc
pop
xor
pop
xchg
lock
sbb
mov
and
push
jne
sub
sti
xchg
sbb
push
bound
cmp
fstpl
shrb
ret
shlb
lret
cwtl
ret
je
cld
mov
aad
and
push
push
xchg
movsb
hlt
daa
add
mov
adcl
add
filds
sbb
adc
jge
cmp
jno
push
lret
pop
cli
loopne
inc
lods
mov
mov
cli
js
dec
add
icebp
pop
xor
sbb
enter
movl
test
cld
jne
cmp
xor
out
sbb
mov
push
addr16
fstpl
in
add
and
ret
btc
fsubrs
inc
in
lods
cmpsl
movb
mov
popf
stc
enter
lods
out
sub
push
xchg
ret
mov
push
dec
les
mov
mov
decl
mov
addr16
or
popa
jg
cs
xor
mov
js
cmpsl
cmp
insb
fimuls
sbb
js
jge
inc
sub
mov
out
int
inc
sbb
jo
inc
aas
addl
xor
sti
push
lock
cltd
mov
cli
sub
insl
rcrl
lods
and
ss
out
push
daa
xor
ffree
cmp
xchg
add
add
inc
gs
icebp
fsubrp
es
sub
loopne
push
daa
cli
ret
inc
leave
loopne
testl
into
adc
decl
sub
in
data16
pop
xchg
mov
fistpl
dec
push
mov
pusha
daa
mov
in
push
pop
std
hlt
push
xchg
mov
lcall
cmp
mov
jmp
pop
push
jge
addr16
push
jno
mov
leave
xchg
push
cwtl
dec
shl
jne
fdivrs
test
into
sub
or
insl
mov
jo
idiv
mov
stc
mov
enter
jns
fsubr
sub
leave
cld
in
push
xor
push
loop
push
and
adc
xchg
out
add
or
lret
jb
xor
fisubrl
inc
mov
lea
pop
loope
arpl
jecxz
std
aaa
dec
out
xchg
push
mov
sub
sbb
add
sahf
and
jge
pop
or
fimull
fwait
mov
stos
imul
cld
mov
mov
push
or
je
pop
sub
mov
cmp
scas
lahf
outsl
lret
push
out
jle
data16
and
xor
jb
nop
jecxz
fcomps
cmp
mov
or
sbb
dec
lea
ds
jb
mov
loopne
pushf
jbe
pop
dec
dec
iret
gs
addr16
pop
ljmp
pmulhw
push
stos
or
ds
pop
xchg
jns
adc
cld
inc
xor
add
stos
inc
sahf
std
xor
pop
mov
call
adc
mov
adc
pop
inc
rcrb
xor
xchg
dec
rcll
jl
fdivrl
loopne
sar
jb
inc
push
pop
les
fs
jnp
sub
cmp
mov
xchg
jbe
rcl
stc
ret
fnstsw
in
cltd
lds
dec
mov
push
cli
sbb
xchg
xor
dec
mov
lock
insb
mov
jg
loope
adc
int
sbb
xorl
out
fldl
pop
jns
pop
jle
aam
repz
mov
and
jge
cmpsb
mov
outsl
stos
pop
mov
popa
push
fsubp
push
aad
and
clc
mov
cmp
push
in
and
lahf
sub
mov
and
push
out
scas
movsb
pusha
movups
ficoms
ficomps
fsubr
xchg
fdivrl
xchg
enter
jbe
or
or
pusha
lods
pop
aaa
rcl
and
dec
ss
fbstp
fnstenv
and
inc
xchg
stc
aam
dec
mov
lods
mov
pop
nop
sub
xor
jb
test
mov
jmp
xor
nop
ret
or
xchg
push
push
imul
lods
pop
js
push
mov
mov
loopne
dec
pop
xlat
jg
sbb
ficompl
lds
insb
lock
xchg
xchg
stos
add
mov
ret
ds
pop
sbb
jb
ret
push
es
shlb
jge
cli
xchg
or
inc
cld
inc
popl
adc
cmp
fisubrs
int
btc
addr16
fidivl
mov
inc
pop
aam
sbb
push
aad
push
jnp
jg
pop
lods
jp
adc
jae
add
in
mov
jecxz
aas
push
sub
adc
aaa
cmp
push
push
aad
push
inc
push
test
lods
cmp
push
jnp
insl
or
call
pushf
mov
mov
mov
aad
and
leave
cwtl
push
push
mov
shl
sbb
das
inc
movsb
aas
fidivl
mov
sbb
outsl
daa
inc
and
adc
sub
fcomp
cmpsb
sub
pop
mov
cmp
cmp
xor
movsl
and
inc
out
sbb
add
cmp
push
ja
mov
and
ret
test
sub
repz
add
es
lcall
jbe
cltd
xor
fistl
pop
cld
test
mov
pop
ljmp
sbbb
jmp
and
add
scas
push
les
push
sahf
jae
les
les
pop
bound
sti
loope
int3
pop
sub
push
xchg
sub
mov
leave
add
sbb
lahf
sub
mov
mov
fbstp
ret
shlb
jl
mov
lods
mov
push
push
adc
jmp
xchg
adc
sub
sahf
notl
and
mov
notl
jne
mov
pop
sub
push
repnz
dec
push
xchg
add
pop
jmp
nop
mov
out
int3
cmp
fcoms
rcr
inc
fldt
int3
mov
lods
jnp
lahf
xchg
sbb
inc
mov
out
pop
jns
fs
cli
mov
pop
scas
pushf
jne
stos
sti
push
orl
mov
push
data16
sbb
aam
mov
jns
fidivrl
push
xor
add
sbb
adc
jbe
popf
sahf
popf
jecxz
xchg
sub
ret
jbe
pop
call
cwtl
mov
ret
fiadds
and
mov
lahf
pop
fwait
pusha
insb
jmp
mov
mov
dec
jae
adc
adc
cld
mov
add
pop
add
add
add
mov
mov
and
mov
cmp
call
jbe
test
pop
add
testb
pusha
add
jp
xor
dec
sbb
outsb
jnp
push
adc
xor
pop
js
mov
fidivl
mov
push
fimull
xchg
out
dec
aaa
add
jns
pop
mov
aaa
cwtl
sbb
loop
mov
push
pop
xchg
xor
scas
ljmp
or
push
loopne
repz
in
shl
mov
mov
mov
out
xor
jo
mov
cmp
lock
inc
rcl
jbe
in
mov
in
fiaddl
ja
inc
xchg
xchg
xchg
xor
inc
cmpsl
dec
xor
push
cmc
lahf
pop
ja
aad
lahf
ret
jae
ss
flds
inc
cwtl
and
jnp
dec
lea
sbb
ljmp
push
insb
jb
xchg
out
cltd
inc
leave
adc
push
xor
test
pop
inc
add
pop
xor
sbb
cmp
clc
ret
cmp
ss
sti
loop
arpl
les
sub
sbb
movsl
ss
outsb
decb
fisubrs
call
mov
movl
sahf
repnz
pop
mov
aaa
pop
jle
arpl
mov
cltd
jno
ficoml
lods
jnp
fcmovnbe
push
adc
aam
sarl
push
movsb
lret
cmp
fnstenv
mov
js
lahf
lods
add
insb
add
jne
aas
sti
sarb
pop
repz
iret
loop
insb
lret
in
or
loope
insb
mov
adc
popf
mov
imul
leave
mov
into
mul
mov
sbb
inc
mov
or
xchg
incl
jg
lret
in
dec
xchg
mov
iret
lock
xchg
jecxz
pushf
inc
xor
ret
orl
ljmp
je
sbb
and
sbb
stos
fs
adc
adc
and
lea
and
data16
or
daa
out
lahf
adc
xchg
or
add
sbb
mov
xchg
push
sub
sbb
jae
inc
lret
ss
jbe
pop
sub
outsb
loop
insl
pop
cld
out
jmp
out
jecxz
cltd
mov
xchg
decl
sub
dec
jbe
es
sbb
addr16
mov
ret
jge
add
sbbb
pop
mov
rcr
loope
pop
jg
dec
inc
cmp
mov
out
dec
bound
or
cmp
jmp
mov
dec
cwtl
int
gs
push
je
mov
pop
xor
sbb
inc
dec
xchg
andb
pop
or
or
stos
nop
lods
pop
mov
dec
push
addb
lret
lcall
xchg
xor
jns
leave
mov
push
dec
push
fsubs
rorb
mov
js
pop
pop
pop
inc
pop
cmc
xor
insb
sahf
pop
imul
xchg
bound
bound
mov
sub
neg
rclb
mov
stc
xor
test
rolb
push
pushf
das
out
aam
sub
fisubl
loop
mov
outsl
fcmove
dec
mov
imul
pop
scas
inc
mov
pop
xchg
lods
arpl
nop
add
cwtl
push
iret
sahf
sbb
les
or
lds
mov
sub
mov
arpl
push
push
mov
and
mov
adc
add
mov
dec
mov
push
adc
scas
pop
jbe
insb
sub
add
movb
xor
push
fdivrs
std
divl
or
iret
xchg
stc
mov
lcall
xchg
sbb
sahf
xlat
loope
push
repz
ret
clc
cmp
or
mulb
sub
jmp
mov
jmp
cwtl
push
pop
inc
pop
inc
jmp
mov
arpl
ret
rclb
sbb
push
dec
call
lods
lds
movl
sbb
mov
push
jmp
add
pop
mov
mov
aam
fcompl
js
ret
pop
ss
hlt
inc
rolb
cmp
ret
movsl
adc
sbb
xchg
fists
dec
or
lcall
mov
cmp
mov
ja
mov
xchg
aaa
xor
ss
sbb
mov
push
dec
pusha
insb
ds
dec
pavgw
fincstp
sbb
xor
add
inc
and
and
jge
test
idivb
push
std
fildl
mov
jp
out
int
cmpl
mov
fstps
aaa
or
push
push
out
sbb
pop
dec
cmc
mov
jmp
cltd
sbb
and
inc
andl
lods
xchg
iret
lea
test
or
das
adc
outsl
sub
pop
add
xor
push
add
lods
xlat
cmp
mov
iret
ficoml
fcmovnb
mov
xchg
arpl
test
cmp
mov
test
hlt
scas
fbld
ds
mov
jnp
shrl
ljmp
dec
aas
push
loopne
cmp
cmp
les
fadds
fcomps
mov
push
shlb
mov
mov
jbe
push
lret
xor
in
in
scas
pop
or
adc
dec
fsubrl
ficomps
sub
mov
add
inc
add
sbb
xchg
add
or
das
int3
repnz
adc
xchg
pop
sbb
or
jae
cmpsl
cli
add
inc
movsb
gs
xor
and
jno
jbe
pop
andb
outsb
aad
inc
push
add
popf
cmp
es
jae
sahf
repnz
ss
leave
in
scas
cmp
xor
and
add
int3
adc
loopne
jecxz
mov
rclb
sub
repnz
es
mov
in
cmp
inc
mov
or
jl
clc
hlt
out
push
mov
pop
mov
adc
call
popa
push
xorl
imul
dec
hlt
outsl
clc
imul
mov
loop
push
lret
push
into
xor
mov
in
lods
cmp
ret
into
jne
pushf
pop
mov
mov
inc
push
adc
jmp
jl
sbb
or
adc
inc
loope
fisttpl
stos
out
jmp
mov
mov
clc
enter
dec
punpckhbw
mov
pop
rcrb
rclb
lret
xor
dec
pop
add
sahf
mov
push
jo
int
lea
cs
cwtl
cmp
adc
fistpll
cld
or
xchg
stos
cmpb
add
shrl
push
inc
jp
add
push
pusha
js
pop
outsb
fdivrl
rol
es
add
bound
lcall
testb
sbb
jecxz
iret
cwtl
push
push
jecxz
jns
and
mov
and
push
mov
jb
cmp
mov
pop
sub
fsubs
mov
pop
jns
sub
fnsave
in
inc
outsb
test
mov
fcomps
sahf
jae
dec
sbb
aam
test
hlt
outsl
out
cmpsb
lahf
leave
xchg
dec
mov
xor
imul
push
mov
and
movsb
mull
inc
pop
xchg
mov
nop
sbb
push
aad
or
outsb
rorb
test
sub
pop
leave
test
fsubl
loopne
addr16
cmp
pusha
mull
popa
out
out
bound
das
or
mov
mov
cwtl
dec
jp
inc
je
sbb
out
addr16
push
lcall
loopne
out
xor
sbb
mov
insb
lcall
inc
subl
data16
lret
push
sbb
sub
movl
dec
sbb
or
add
xor
in
pop
mov
push
dec
loope
fcomp
imulb
mov
jmp
rclb
or
xchg
imul
jmp
into
xchg
mov
notb
or
out
lods
mov
test
mov
repnz
leave
sahf
jmp
fwait
jno
insl
jbe
xchg
ficoms
sbb
lcall
stc
scas
testb
ret
fstl
xor
dec
ror
lea
cmpsb
mov
inc
das
sti
aaa
addr16
ljmp
mov
sbb
sub
insb
jae
incb
cmpsl
add
adc
adc
sbb
ret
nop
push
dec
sahf
xchg
or
cmp
cmp
xor
imul
aam
insl
jb
cli
mov
jmp
sub
test
lds
push
fisubl
add
and
inc
cmc
cmpb
leave
adc
add
jae
lea
fldt
or
cmpsb
scas
pushf
fists
cmpsb
lret
pop
xchg
adc
xchg
out
out
std
fadd
xor
sarl
jnp
dec
scas
aad
push
dec
enter
shl
pop
enter
and
cld
sub
dec
pop
test
mov
inc
in
cltd
cltd
cli
mov
cmp
sahf
and
loope
sbb
cwtl
test
ret
jle
repnz
xor
lock
cmp
cltd
out
jns
push
inc
push
mov
mov
pop
mov
jnp
int3
xor
popf
sahf
jmp
add
rcrb
jge
mul
add
imul
stos
test
inc
xor
add
mov
sar
std
lea
dec
and
xchg
add
jns
bound
mov
cmpsb
xor
mov
lock
sbb
cmp
mov
push
hlt
in
nop
inc
inc
rep
loop
addr16
out
imul
mov
stc
ds
es
mov
pop
xchg
lret
pop
out
sbb
lret
enter
loopne
nop
mov
mov
sub
jb
mov
dec
add
pushf
cmc
movsl
xchg
or
xorl
inc
adc
add
add
dec
cmp
insl
test
xorl
imul
loope
or
lds
mov
test
jae
cmp
mov
outsb
push
mov
ret
or
xor
inc
nop
push
inc
movsb
lock
popa
in
xchg
dec
and
inc
jae
mov
mov
dec
or
out
dec
cwtl
xchg
mov
cmpsl
jo
jns
cld
std
mov
dec
jmp
js
mov
xlat
push
dec
mov
cmp
add
cmpsl
icebp
mov
sbb
daa
jmp
inc
iret
into
enter
sbb
cmp
cli
sub
cwtl
inc
and
lahf
mov
pop
pop
jecxz
mov
shll
or
jle
cmp
es
shufps
adc
fdivrl
mov
loope
sbb
jbe
dec
repnz
adc
into
pop
mov
ds
test
pop
popf
mov
daa
int3
inc
xchg
xchg
pop
adc
outsb
mov
je
rcr
mov
push
mov
inc
mov
and
xchg
sub
push
mov
movsb
push
inc
sbb
jns
jae
icebp
sub
cmpl
pop
insl
jae
lret
adc
xchg
adc
stos
scas
pop
ss
mov
jmp
cwtl
mov
mov
stos
inc
and
add
mov
dec
fiaddl
cmpsl
adc
arpl
test
add
mov
testb
mov
or
cmpl
mov
dec
in
add
adc
imul
mov
ss
and
xchg
push
popf
iret
jg
sub
dec
insl
stos
icebp
gs
stos
jg
loop
dec
bound
jno
loope
mov
cmp
xchg
clc
sbb
pushf
mov
repnz
inc
inc
sub
adc
sarb
stc
stc
cmp
add
jle
sahf
outsb
inc
jle
lret
sbb
mov
lcall
mov
fistl
dec
iret
push
mov
sti
test
mov
and
jnp
sbb
push
sbb
imul
adc
xchg
clc
je
lock
mov
push
icebp
out
test
push
jge
xor
std
je
out
sub
jecxz
imul
sarl
dec
into
in
les
das
jge
mov
imul
stos
xor
neg
mov
loopne
movsb
cs
xchg
push
lock
mov
arpl
nop
loopne
or
int
fwait
imul
popf
sub
jmp
jno
pop
test
sahf
cmp
sarb
popa
aaa
mov
out
mov
repz
push
sbb
sbb
cmp
daa
inc
sbb
stc
enter
lea
dec
mov
mov
cmp
aad
mov
add
sarb
call
push
push
fwait
repnz
xor
ficompl
mov
mov
icebp
and
fcmovnu
incb
add
adc
jns
and
adc
cmc
fldt
mov
jo
mov
loopne
cmp
dec
mov
xchg
mov
icebp
es
lds
mov
pop
dec
enter
ret
mov
mov
seta
push
push
xor
lret
in
mov
add
dec
pop
cld
cli
fbstp
mov
sahf
mov
inc
dec
rsm
or
rcll
pop
lods
dec
aam
push
inc
fldcw
test
divl
pop
mov
addr16
les
push
xchg
sub
shrl
xchg
cmp
cmp
pop
xor
in
stos
inc
cmp
je
dec
lcall
adc
pop
and
in
xor
push
fcoml
mov
push
lods
jmp
push
dec
out
fists
push
adc
cmp
jecxz
sbb
loope
dec
push
adc
pop
call
addr16
leave
xchg
add
pop
aaa
jb
rcrb
sbb
sub
test
jle
sbb
mov
repz
in
imul
jno
and
das
xchg
cmp
rolb
js
sbb
jno
push
lods
add
shrl
push
jecxz
rcl
fs
mov
or
mov
adc
xchg
shr
scas
in
lock
clc
dec
lea
push
xchg
lcall
mov
mov
hlt
stos
lods
outsb
jmp
lock
mov
xorb
xorl
mull
inc
push
add
cmp
aam
mov
mov
daa
enter
cmpsl
test
lock
in
or
inc
test
sbb
xor
mov
es
sub
xor
pop
fdivs
add
push
scas
lret
testl
push
jecxz
or
orb
mov
push
mov
mov
je
test
daa
cmp
ret
mov
add
sar
jp
jle
inc
and
xchg
mov
sbb
push
adc
stos
pop
jp
adc
jmp
cmp
push
adc
arpl
pop
adc
push
enter
mov
mov
std
sub
cmp
push
dec
iret
mov
xlat
lods
in
outsl
pop
inc
sub
cmpl
in
adc
daa
aas
lahf
and
cmp
in
mov
jp
xlat
out
pop
push
jae
inc
sub
push
decl
cmpsl
mov
insl
push
jnp
frstor
mov
push
pop
jno
test
xchg
imul
cld
sarl
xchg
popf
inc
loope
jae
hlt
cmp
mov
andb
xchg
sbb
lds
sub
sbbl
jb
shll
ljmp
daa
dec
pusha
nop
xchg
push
dec
pop
pop
sbb
es
bnd
mov
jecxz
inc
push
push
leave
lahf
popf
jne
scas
sti
push
and
mov
and
adc
xchg
rolb
lahf
or
fnstsw
or
cmpl
cli
outsl
shl
xor
lcall
rcrb
mov
sub
jo
call
xchg
or
push
add
fdivrl
sub
cmpsb
mov
andl
jnp
dec
pop
ficoml
testb
sbb
pop
cmpsb
mov
jno
push
cmpsl
in
ds
arpl
mov
ret
dec
std
rorl
out
xor
neg
inc
and
jbe
push
fcoms
dec
shll
dec
sub
mov
sbb
repz
mov
mov
pop
popa
cmp
call
sub
or
arpl
cld
and
jo
sahf
sbb
mov
inc
stos
ja
data16
in
ss
dec
push
je
or
js
jmp
ret
inc
push
cmp
inc
xchg
adc
cmp
mov
and
out
repz
ficoms
insl
dec
imul
mov
mov
test
hlt
adcb
lods
addr16
mov
test
jbe
and
jl
fsubs
test
aam
fidivs
pop
pop
jg
and
cs
lahf
or
push
ljmp
lcall
call
push
mov
and
cmp
cmp
adc
xor
ds
fwait
out
add
cli
cmp
pop
adc
imul
cmp
mov
cs
xchg
ret
addr16
or
sti
sahf
test
sbb
or
push
and
or
xchg
lods
xchg
shrl
jbe
mov
shlb
aaa
xor
dec
ficompl
lahf
test
fidivs
pushf
jmp
sbb
stc
jo
cmp
enter
out
stc
scas
xorl
jb
xor
inc
out
cwtl
push
sar
mov
and
adc
test
xchg
xor
mov
mov
clc
pop
das
lahf
fs
mov
sub
inc
and
cs
and
mov
scas
cld
pushf
je
clc
mov
adcb
cmp
inc
fdivl
mov
in
xchg
xchg
sub
inc
bound
cmp
push
data16
in
cmc
jns
xchg
cli
jnp
dec
mov
aad
xchg
mov
rcr
sbb
jecxz
outsl
out
add
iret
jns
adc
dec
lods
xchg
add
sub
xchg
push
hlt
jg
ret
push
jge
fsubs
out
push
pop
jbe
dec
fnstcw
out
rcr
push
cmpsb
jmp
aam
rorb
in
cmp
divb
movsb
fidivrs
ds
ds
add
mov
vgetmantsd
lret
mov
pop
mov
sarl
add
lea
xor
lahf
sbb
movsb
mov
std
add
xlat
imul
shrb
pop
pop
sub
fsts
cmp
mov
out
nop
out
sahf
pop
pop
pop
mov
adc
sub
push
insl
and
mov
jg
jmp
cmp
arpl
xchg
mov
cli
testl
stc
shl
jo
outsb
jae
xchg
mov
rcrb
cmp
pop
xchg
add
lcall
out
sar
xor
mov
fstl
push
adc
jne
fdivrl
fistpl
xor
int3
dec
or
mov
ja
sub
or
lods
in
ds
leave
ss
push
dec
ret
fsubl
pop
mov
bnd
insl
enter
push
in
loope
leave
cltd
sub
push
adc
mov
xor
imul
sub
jbe
xor
dec
inc
jge
mov
and
movsb
lock
lcall
and
std
xchg
cmp
shlb
hlt
xchg
ret
nop
mov
cld
jp
mov
cli
lahf
mov
lret
ret
fs
mov
and
sub
sbb
xor
or
leave
fidivs
push
call
icebp
out
adc
jl
shrb
and
faddl
in
dec
push
or
callw
idivl
dec
xchg
jecxz
outsb
int
daa
cmp
fiadds
imul
mov
jno
pop
xchg
outsl
mov
mov
pusha
jbe
fdivrl
cmp
jg
or
sub
int3
sub
cwtl
sub
arpl
sub
in
inc
dec
and
fisttpll
mov
fcomip
mov
fs
repz
pop
out
rcl
scas
pop
cmp
mov
fildll
adc
clc
push
cmpsl
mov
jbe
mov
jo
fsubr
mov
xchg
dec
bound
cmp
and
test
sub
push
popf
mov
pop
mov
fmul
mov
adc
and
add
add
in
pop
cs
xor
sub
orl
cli
ss
repnz
arpl
xor
mov
mov
enter
in
xor
or
push
add
cmpsl
mov
and
lods
sbb
and
mov
data16
sub
mov
mov
fidivs
ds
pop
pop
mov
aam
fucompp
sbb
icebp
jbe
push
push
mov
out
clc
dec
mov
xchg
sbb
in
dec
fidivs
add
mov
pusha
xchg
cmp
mov
or
ds
mov
dec
arpl
sbb
push
add
lret
inc
or
scas
adc
std
fsubrl
adc
cwtl
lock
rorb
shrl
scas
sub
xor
aaa
dec
in
xchg
inc
lret
sub
mov
xchg
out
inc
ja
cs
in
cmp
xchg
mov
sub
pop
mov
aad
xchg
movsb
jno
scas
mov
xchg
push
scas
loop
daa
ret
aam
mov
fdivrl
int3
mov
clc
insl
subw
insl
lcall
inc
mov
pop
vcvtss2sd
out
mov
loope
pop
shr
int3
mov
pop
jae
push
jecxz
out
jns
pop
addr16
pop
cmp
loopne
and
bound
pop
add
das
xor
call
sub
adcl
add
jno
sub
shll
adc
lock
sahf
in
in
push
fcoms
sbb
outsb
push
mov
into
add
jl
dec
inc
stc
xorl
imul
aaa
sub
add
dec
mov
mov
rorb
sbb
out
jmp
jo
imul
pop
ret
dec
mov
out
lcall
mov
rclb
mov
mov
dec
mov
mov
mov
out
imul
popa
jp
push
out
mov
stos
mov
sbb
push
pushf
jb
cs
pop
pop
es
xchg
pop
into
rclb
out
fisttpl
mov
or
push
pop
jmp
movsb
clc
bound
aam
addr16
and
imul
inc
mov
mov
add
add
aaa
inc
or
xor
fwait
sbb
cmp
clc
iret
mov
ds
addl
rcrl
bound
sahf
cli
cs
adc
jl
icebp
insl
mov
or
lds
rolb
orb
pop
repnz
add
loope
addb
add
push
lret
dec
iret
int
xchg
lret
lds
sahf
jae
inc
sbb
inc
in
and
rcll
and
test
cmpsl
cmpsb
jge
mov
mov
ja
jne
shrb
and
imul
xorl
mov
imul
rcrl
xchg
add
xchg
inc
nop
repz
rol
cmp
jnp
and
sub
ret
xor
adc
push
into
aam
xchg
pop
pop
es
cli
jecxz
dec
pop
xchg
dec
jle
xor
cs
jp
dec
idivb
and
push
mov
cmp
imul
lods
sbb
or
dec
mov
fs
std
cltd
cwtl
lret
adc
in
fwait
pop
sub
lcall
out
test
repz
and
daa
je
push
pop
fidivrl
pop
xchg
and
lret
aas
js
and
pop
push
popf
inc
ja
sti
addr16
ret
inc
inc
pop
sub
jp
add
adc
testb
sbb
into
cltd
lret
cmp
data16
test
enter
xor
pop
scas
rol
adc
mov
sub
andb
sbb
push
jge
test
mov
in
fsubrs
and
ret
xchg
ret
adc
pop
pop
jbe
jno
sbb
cmp
inc
mov
cltd
fwait
push
js
lea
rcrl
scas
insb
sub
in
or
mov
shl
nop
bound
fs
and
pop
pop
or
xor
loop
js
in
scas
cmpsl
xchg
pop
daa
clc
jmp
mov
nop
sbb
jmp
test
cltd
pop
nop
out
shrb
addb
cmp
adc
mov
push
jne
push
inc
jmp
test
adc
push
inc
pop
sub
dec
sub
xchg
mov
ror
lock
jge
out
and
dec
sub
jge
sub
push
lea
inc
into
aaa
imul
jmp
aaa
lret
jne
movsb
push
cmp
adc
lahf
add
test
cmc
mov
insl
add
cmp
inc
dec
movsb
pop
pop
dec
lahf
aas
pop
das
mov
xchg
mov
cmpsb
mov
jne
and
mov
test
push
mov
jl
inc
mov
call
das
sbb
adc
inc
lret
jb
xchg
paddw
and
cmp
push
inc
mov
das
sub
pop
out
out
push
mov
into
ja
sarb
out
lea
push
jg
add
imul
pop
mov
es
popa
jb
stc
mov
cld
in
mov
jae
adc
sti
nop
xchg
andb
xor
xorb
iret
adc
js
dec
andb
jae
cmp
and
in
push
movsb
sub
filds
xor
ljmp
inc
cmpsl
loopne
sub
dec
mov
adc
ja
mov
icebp
hlt
mov
in
pop
outsl
jl
es
imul
inc
fiaddl
push
ja
repz
lods
sbb
and
bound
and
jl
pop
lds
mov
loope
cmp
cmc
ljmp
jmp
and
push
push
mov
imul
mov
fwait
xchg
cltd
or
daa
sarb
mov
jge
push
sbb
and
xchg
pop
and
cwtl
out
mov
sub
sub
adc
sbb
stos
test
movsl
imul
xchg
push
adcl
jge
cmp
and
or
lret
inc
cmp
ljmp
add
push
sbb
das
imul
dec
test
rorb
inc
lods
xchg
or
in
mov
sub
add
loopne
cwtl
cmp
pop
and
and
mov
pushf
and
cltd
sahf
xor
aam
inc
test
sbb
out
add
mov
jp
pop
sti
cltd
test
lcall
mov
mov
daa
pushf
clc
fisttps
jmp
fistpll
sahf
scas
fwait
imul
xchg
inc
inc
in
std
imul
adc
fisubs
sbb
stc
sbb
jp
mov
dec
push
mov
bnd
fldl2e
xor
mov
jmp
push
push
ret
add
xchg
cs
or
xor
jmp
adc
imul
push
je
cmp
xchg
pop
lahf
lahf
push
jnp
or
std
push
add
movsb
and
pusha
gs
lret
mov
push
cs
push
outsb
lock
xor
into
fdivl
and
mov
push
push
cli
shrb
push
push
roll
jge
inc
outsl
jne
dec
lock
les
push
ficoms
loop
xor
mov
roll
jnp
lret
repnz
repz
mov
lock
fcoms
push
and
ret
je
call
out
imul
pop
adc
jg
das
cmp
test
addr16
inc
or
mov
and
iret
fimull
or
mov
mov
push
sbb
cmp
sub
aad
aas
or
dec
push
pop
fmull
xchg
out
mov
push
test
insb
mov
lcall
or
in
aad
cli
sbb
or
daa
mov
mov
adc
sbb
and
or
mov
adc
pop
adc
bound
pop
mov
hlt
cmp
pop
out
sbb
negb
inc
adc
pop
cmc
xlat
sbb
in
xchg
jne
mov
jmp
lret
clc
ret
mov
jae
ret
pushf
es
mov
jo
xchg
js
dec
inc
add
popl
jecxz
push
xchg
xchg
dec
or
test
and
popa
jo
stc
shrb
sahf
pusha
in
pop
xor
dec
sub
mov
push
xchg
xlat
add
ret
push
sbbb
lahf
inc
mov
in
daa
cvtps2pd
loop
shll
mov
addr16
push
mov
dec
pop
neg
in
xacquire
xchg
cld
push
loopne
cmp
jae
push
and
adc
out
mov
ss
pop
fistl
push
mov
push
mov
pop
aas
push
pushf
sub
mov
fdivs
push
mov
mov
pop
push
shrl
cmpsb
les
outsl
faddl
out
iret
jo
stc
cltd
aas
int3
insb
cmc
pop
fmull
inc
call
hlt
loope
lods
mov
stos
mov
outsl
insl
aam
inc
xlat
sbb
adc
je
out
rcr
cmpsb
pop
pop
ljmp
sbb
in
iret
bound
add
fcoms
push
pop
cmpb
lcall
cmp
repnz
icebp
pop
push
addr16
adc
rcrb
cld
mov
icebp
out
xor
out
pushf
mov
nop
mov
dec
or
fstpt
xorb
ret
testb
bound
cld
sbb
mov
scas
adc
stos
mov
ror
pop
mov
fprem1
push
jbe
lret
shl
and
lret
out
inc
stc
pop
lret
pop
rcrb
dec
cmp
rorb
adc
aam
shlb
and
in
repnz
mov
push
frstor
xlat
andb
jns
and
sub
pop
in
mov
dec
daa
pop
ret
icebp
mov
fsubr
push
push
bound
dec
xchg
fadds
stc
pop
in
pop
mov
mov
xchg
loopne
aam
cmp
push
test
cmp
xchg
sbb
xchg
mov
inc
mov
ret
mov
ja
cli
pop
sbb
ja
mov
mov
dec
shr
add
push
jge
cmc
mov
cmpsl
xor
sbb
xchg
mov
ds
or
inc
adc
fcomps
shr
cli
jge
insl
lret
mov
hlt
inc
mov
add
pop
dec
repz
std
push
sub
mov
std
pop
notb
sbb
insl
aad
xor
add
or
sahf
jo
xchg
andl
add
xor
jae
and
mov
fdivrp
cmpl
xor
outsb
cmp
cmpsb
jo
incl
cmp
pop
mov
dec
xchg
addr16
or
and
xchg
icebp
mov
sbb
adc
sub
dec
cld
dec
jmp
push
xlat
push
mov
and
enter
xchg
stos
imul
mov
test
std
sbb
mov
pusha
add
aas
sub
das
push
push
rclb
cmp
push
xlat
cwtl
in
out
mov
push
and
xchg
mov
stos
xorb
inc
xchg
add
iret
sub
cmp
scas
call
dec
lea
jo
in
mov
cmp
js
aas
aam
add
mov
xchg
data16
ja
push
in
cmpsl
xor
sub
mov
pop
ljmp
or
xchg
jb
mov
push
lahf
mov
dec
xchg
mov
repnz
jecxz
test
xor
sub
adc
mov
jle
insb
jl
add
mov
gs
pusha
adc
add
in
out
xlat
jp
lock
and
ror
test
pusha
mov
jbe
sti
pop
rorl
push
lods
and
out
nop
sti
sbb
sbb
push
je
cwtl
pop
fwait
cmp
js
jno
push
jmp
dec
push
cmpsl
and
sbb
or
addl
cmp
mov
lds
jmp
mov
jnp
mov
ficompl
jmp
imul
inc
dec
and
aaa
pop
mov
cli
fsub
push
repnz
cmp
inc
fildll
sbb
cmp
xor
enter
scas
pop
dec
aaa
pop
jg
sbb
add
xor
push
out
jge
sub
clc
iret
inc
repz
jp
pop
mov
cmp
push
lret
mov
pop
inc
inc
push
repnz
in
xchg
mov
adc
jb
cmp
pop
leave
push
cmpsl
repnz
dec
inc
and
mov
pop
aaa
fsubr
sub
xchg
add
mov
sub
xorb
popa
iret
cmp
adc
loop
out
adc
cld
cmp
stos
mov
ja
push
jp
insb
roll
loope
inc
inc
daa
jmp
adc
mov
cltd
or
cmp
aas
popa
mov
lock
inc
stos
mov
push
xor
scas
mov
mov
test
lea
adc
es
push
xor
and
mov
mov
mov
stos
sbb
or
cmp
and
cmpb
fs
bound
pop
std
fsubr
or
xor
popf
lea
jg
push
mov
and
movsl
and
pop
add
mov
or
out
mov
or
mov
ljmp
rorl
nop
xlat
lcall
fiaddl
add
insl
jmp
and
add
ss
movsl
nop
push
stos
repnz
jmp
aaa
lds
mov
xchg
mov
lods
cmp
and
and
out
cmp
cs
mov
pop
movsb
shll
addr16
je
shll
inc
outsl
daa
ljmp
stos
lahf
pop
loopne
cmc
push
call
sub
fwait
stos
cmp
sti
fs
fadds
pop
cwtl
mov
out
mov
aam
frstor
icebp
fstl
lea
into
cmp
mov
outsb
or
ja
push
outsl
push
xor
mov
add
mov
call
add
sub
jne
xchg
int3
cwtl
ret
push
xor
js
divl
push
out
int3
sub
imul
popl
mov
mov
jbe
add
ret
adc
mov
orl
fwait
or
cwtl
jmp
fcmovnb
jbe
mov
dec
dec
add
push
pop
jb
clc
sti
fs
pop
cltd
inc
xchg
popf
fcmovnu
mov
insb
xchg
pop
test
rclb
jecxz
movsb
or
lods
cmpsb
pushf
mov
cmp
or
fmuls
add
loopne
adc
pop
dec
rcl
mov
mov
fcoml
fs
and
loope
inc
push
lea
pop
cmp
mov
jge
push
xchg
in
dec
mov
and
aad
lds
sbb
adc
ljmp
lock
mov
imul
pop
ja
jbe
clc
adcb
lret
sub
sub
cmp
cmp
xchg
push
js
movsb
add
mov
shlb
jg
mov
dec
or
and
or
mov
fwait
push
mov
add
std
mov
dec
mov
nop
rorb
pop
es
mov
inc
xchg
aam
jmp
testl
add
and
xlat
lds
stc
enter
adc
xor
add
dec
pop
mov
sub
hlt
sbb
test
and
andl
mov
data16
idivl
xor
lret
and
dec
out
mov
inc
push
sub
dec
jb
rolb
adc
scas
xchg
lret
shlb
lret
adc
popf
add
or
ds
and
enter
xchg
mov
mov
mov
imul
push
mul
xorl
adc
fldt
xchg
ja
sbb
pushf
and
and
insb
mov
addl
lods
popf
lock
mov
sbb
lret
rol
out
aas
jno
ret
mov
scas
pop
push
add
clc
xchg
in
sbb
and
push
les
loop
lret
cmpl
ret
lret
jle
gs
mov
add
fcompl
xchg
sbb
popf
movsl
rep
lds
cmp
lds
les
or
in
ret
cld
fildll
lea
cld
jecxz
or
fcompl
sub
cld
psubusw
inc
xchg
and
aad
ja
adc
cmpsl
mov
sub
xor
cltd
push
and
jmp
dec
add
xchg
mov
pusha
hlt
scas
ja
mov
in
jecxz
js
pushf
cmc
add
push
push
push
mov
mov
ficoms
push
jbe
jge
sti
mov
dec
sub
cld
fwait
add
sub
adc
adc
jp
mov
push
cmc
aaa
inc
mov
sub
mov
and
out
xor
scas
mov
es
inc
cwtl
push
cmp
daa
loopne
sbb
shrl
xlat
lahf
sub
sahf
jno
jp
pushf
jg
sbb
sarl
sbb
out
lock
dec
and
sbb
in
dec
push
jl
pushf
mov
ds
ss
push
pop
pop
cmp
enter
push
cltd
add
rcrb
jmp
call
jb
add
arpl
in
idivl
or
mov
cwtl
adc
mov
movsb
in
shlb
dec
mov
out
sarl
call
outsb
int3
xlat
rcl
fcomps
shlb
leave
jge
popa
cmp
addr16
jns
cmc
push
dec
sarl
pop
fsubl
fdivrl
ret
insl
adc
add
imul
mov
mov
sub
enter
shlb
inc
or
mov
insl
xchg
mov
aam
testb
fimull
mov
lret
les
fs
out
add
sub
cmpsb
fildl
fldt
filds
icebp
repnz
jecxz
lock
cwtl
outsb
sub
hlt
cmc
cltd
daa
jno
flds
xchg
ror
sbb
aam
movsl
xor
sbb
pushf
repnz
scas
gs
mov
ds
or
cmpsl
jae
stos
xor
adc
dec
xchg
lods
in
loop
gs
push
sub
pop
lds
lea
testl
xchg
adc
lods
push
icebp
and
jg
dec
jecxz
adc
dec
sub
out
rcl
outsl
pop
out
pop
sbb
jno
in
sbb
adc
inc
sub
ret
shl
dec
ret
dec
xlat
sub
pushf
sbb
sbb
or
inc
or
push
arpl
icebp
ljmp
stos
in
jo
dec
mov
add
imull
mov
push
arpl
enter
pop
call
inc
xor
add
loop
scas
mov
lods
rol
clc
mov
fcompl
inc
xchg
jno
shlb
cmp
fsubp
push
rcrb
dec
mov
frstor
dec
mov
mov
adc
hlt
cmp
mov
or
xorb
adc
das
cmpsl
sbb
cmc
jl
and
ljmp
bnd
pop
xchg
mov
mov
in
adc
sbb
js
fiadds
push
icebp
jle
outsb
aas
pushf
sbb
xchg
mov
iret
xor
sti
lods
cld
mov
jg
inc
test
push
pushf
mov
mov
add
rorb
cld
inc
mov
xor
mov
cmp
lods
outsb
pop
jp
stos
in
sub
pop
std
pop
push
add
minps
push
psrad
or
repz
in
nop
fsubrs
cmp
cld
fisubs
dec
adc
xchg
jo
mov
xchg
popa
xor
stc
adc
push
daa
lcall
xor
dec
hlt
data16
mov
paddusw
add
sbb
mov
jmp
imul
adc
or
stos
or
es
push
xchg
icebp
movl
repz
bound
cltd
mov
gs
cmp
dec
sti
or
imul
xchg
dec
sarl
mov
gs
enter
or
cltd
and
or
fdiv
pop
maskmovq
mull
pop
push
pop
addr16
pop
lret
or
ja
jl
rcr
xchg
cwtl
scas
push
mov
addr16
iret
sub
hlt
xor
push
dec
dec
popf
or
jb
push
fstp
cmpsl
ljmp
js
sarb
loope
testb
mov
jb
cwtl
test
and
push
or
loop
in
or
dec
pop
scas
es
sarb
icebp
cltd
and
aam
stos
mov
add
outsb
test
xor
cmpb
add
fstpt
jge
inc
stos
fwait
mov
call
mov
jg
pusha
inc
push
mov
cmp
jl
pop
fstpl
xlat
pop
in
test
insl
sbb
xchg
or
scas
sbb
loope,pt
es
shll
sub
jmp
add
xchg
shl
or
xlat
inc
lea
sahf
fisubs
add
cmp
mov
inc
pop
mov
imul
mov
imul
xor
jecxz
xchg
cmc
sub
shrb
gs
ret
lahf
and
pop
mov
cs
and
movsb
scas
cmp
or
push
cmpsb
dec
sti
adc
and
in
aam
out
mov
icebp
movsb
lods
mov
mov
pusha
sub
cmp
js
jmp
fwait
gs
jb
les
bound
jmp
daa
pop
or
xchg
je
mov
jo
aaa
clc
dec
or
xor
daa
les
add
pop
push
ret
or
aam
mov
ret
mov
loop
push
xlat
imul
push
sub
mov
imul
dec
adc
and
int3
or
aaa
lahf
std
sahf
add
lock
outsb
push
mov
sub
dec
nop
shll
push
xchg
daa
aad
test
adc
jae
addr16
jo
fisubrs
xor
xchg
repz
enter
mov
aam
insl
mov
pop
or
leave
add
enter
out
jb
in
addr16
ja
push
fs
xchg
cmp
push
fidivl
pop
aaa
imul
adc
aas
mov
clc
dec
xchg
scas
icebp
or
sbb
xlat
mov
xor
sbb
adcb
adc
ljmp
push
pop
dec
push
stc
popf
or
imul
jbe
jp
push
add
es
shll
repnz
repnz
dec
stc
leave
dec
xor
xchg
fildll
rol
outsl
fildl
jmp
xor
and
jp
dec
jle
mov
fdivs
loope
ret
dec
inc
outsb
mov
mulb
daa
pop
rorb
sarl
mov
mov
inc
ss
sub
push
test
xor
jl
push
fsubl
sub
aaa
outsl
lea
jae
mov
xchg
dec
pop
fsubl
rcll
or
or
inc
cwtl
jbe
mov
jae
sahf
mov
sbb
inc
arpl
xor
mov
ds
int
or
clc
aad
shll
aas
ja
dec
cs
pusha
mov
sahf
imul
push
into
sahf
cs
fwait
gs
dec
ds
aas
in
jecxz
mov
in
inc
mov
cwtl
out
jl
bound
stos
sbb
pop
push
and
mov
adc
xor
lcall
jmp
addr16
fldenv
stos
cwtl
xchg
jb
lock
xor
xor
sub
inc
fisttpll
xor
add
repz
jge
pop
flds
in
in
mov
out
es
adc
imul
push
notl
jo
mov
shlb
adc
nop
push
xor
mov
repz
pop
rorl
xchg
imul
jmp
gs
mov
xor
xchg
dec
fwait
pop
sarb
xchg
repnz
popf
lods
scas
pusha
fcomps
into
xchg
and
lcall
mov
jmp
sub
stc
mov
scas
lret
popf
xchg
nop
movsb
js
stos
test
lods
xlat
lahf
inc
dec
sbb
test
pop
push
out
cmpsb
stos
mov
jae
popa
rcll
aas
shll
addr16
or
imul
loope
jnp
mov
mov
cmpsb
fiaddl
mov
adc
cmc
shl
shl
sti
mov
jmp
or
fisubs
mov
scas
mov
mov
pop
mov
xchg
dec
std
mov
dec
rorb
pop
test
lret
lahf
jg
push
sub
or
in
jne
mov
sub
xchg
in
fmull
ja
and
ret
out
or
es
leave
fmul
fidivrl
jge
leave
add
jge
pusha
mov
push
or
cmpsb
call
add
cmp
mov
pushf
cmp
inc
andb
std
or
sbbb
inc
mov
pop
mov
xor
cmp
cmp
cmp
push
pop
jp
addb
movsl
hlt
outsl
mov
mov
pop
push
aaa
jp
and
arpl
sub
gs
inc
xor
cwtl
sarl
mov
rcrb
rorb
je
jge
mov
in
inc
add
sbb
dec
or
jns
daa
ret
mov
push
leave
or
rol
mov
out
sbb
ror
inc
stos
loope
jo
inc
je
cmp
movb
js
push
push
add
xor
and
adc
cmpsb
fmuls
loop
or
testb
das
out
fs
push
adc
subl
aas
cltd
repz
js
sub
jb
pop
inc
cmp
loopne
push
push
lds
pop
rol
sub
inc
aaa
xchg
fdivrs
sahf
adc
cmp
xor
mov
aam
pusha
ss
clc
xor
cmp
movsl
fiadds
out
imulb
icebp
in
orl
cmp
push
rsm
jnp
adc
insl
divb
iret
sbb
xchg
gs
or
out
iret
sar
adc
push
lds
jnp
dec
popa
loope
adc
in
pop
and
sahf
ljmp
leave
mov
ss
mov
mov
cld
mov
mov
adc
jno
sub
lahf
inc
mov
ficomps
and
cli
orb
into
cmp
sbb
pop
das
fchs
in
imul
stc
push
jb
cmpsb
cli
push
cwtl
test
mov
jb
nop
adc
jno
xchg
xchg
icebp
lret
push
sub
bound
mov
iret
jb
aas
rcl
je
xchg
stos
dec
inc
fbstp
xor
int
cld
mov
push
daa
jecxz
sbb
cmp
pop
js
std
mov
xor
inc
lret
xchg
lcall
in
lret
push
and
test
fimull
ret
repnz
imul
into
scas
inc
push
lock
and
fwait
test
push
xchg
adc
cmp
clc
bound
cwtl
popa
subb
pop
or
insl
lret
shrb
stos
iret
int
mov
ret
jb
pop
pop
jnp
scas
cmp
mov
sarb
inc
iret
daa
sbb
leave
sub
jl
daa
rcl
sbb
add
pusha
adc
jbe
shlb
inc
or
hlt
mov
imul
inc
or
decl
addr16
mov
mov
and
jp
lods
dec
loop
and
pop
rorl
clc
pop
loopne
mov
xchg
mov
aam
nop
mov
out
pop
icebp
mov
ja
adc
cld
hlt
imul
cmp
lds
xor
icebp
or
mov
and
outsb
leave
ja
arpl
sbb
rcrb
pop
lahf
pop
push
ret
mov
divb
cwtl
dec
lds
cmp
xchg
sbb
fwait
sbb
sub
mov
mov
xchg
jbe
push
push
push
pusha
xlat
loopne
sahf
andb
cmpsb
mov
add
xor
jne
xchg
gs
shl
clc
add
and
adc
or
fsts
add
jg
jb
stos
imul
sarb
xlat
imul
sbb
into
sub
or
adcb
and
int3
out
call
enter
jns
inc
mov
mov
fidivrl
loopne
pop
in
dec
pop
pop
scas
inc
inc
clc
rcrl
leave
fcompl
aam
aas
xchg
sub
jbe
sub
ljmp
in
add
add
loope
dec
test
add
xor
stc
pop
jns
gs
pop
and
add
cwtl
jbe
call
test
push
and
mov
mov
rcll
xor
push
jbe
lcall
ljmp
out
insl
pushf
insb
mov
clc
gs
insb
sub
sahf
enter
jnp
aam
jmp
mov
sbb
adc
pop
jnp
mov
hlt
lods
xor
inc
push
xchg
sub
mov
mov
test
insb
add
pop
cmc
push
inc
jno
xchg
test
jg
cmc
cmpsl
lcall
pop
or
jl
xlat
stc
dec
cmp
push
outsl
sub
stos
adc
cli
ljmp
filds
loopne
bound
cmp
je
inc
push
and
stos
cli
adc
loop
vrsqrtps
xchg
add
jge
pop
and
scas
scas
mov
popa
into
cmp
cmp
sbb
bound
call
sbb
cmp
mov
sub
xchg
nop
mov
ds
xor
jmp
hlt
cs
lahf
rcrl
out
mov
jae
mov
cli
aas
mov
outsb
jg
lods
push
pop
push
ss
cld
push
rcrl
dec
jae
push
dec
ret
add
or
or
fwait
jecxz
fisubs
push
cs
pop
sub
cmc
mov
jae
cmpsl
inc
pop
notl
shrb
and
add
sbb
lret
pop
push
cmp
mov
repnz
adc
push
ficompl
jge
mov
pusha
es
push
shl
adc
imul
xchg
sub
xchg
ret
aaa
pushf
shl
sub
inc
test
jae
cmpsb
xchg
es
add
xor
imul
pop
sub
jne
mov
inc
jo
dec
dec
fld
fsubrs
aad
rorb
sti
xor
pop
test
xchg
lret
push
dec
lea
test
or
jbe
ret
adc
in
push
divl
jno
jnp
std
and
cld
mov
lods
mov
cld
mov
cltd
push
lcall
ds
pop
icebp
jge
ja
in
and
pop
adc
test
adc
xchg
repz
xchg
lcall
sbb
pop
sbb
test
inc
add
data16
jb
subb
push
dec
or
pop
push
std
xchg
frstor
fldenv
lcall
mov
out
pop
iret
push
mov
ret
or
shlb
ja
xchg
in
cmc
inc
fdivs
dec
std
jl
test
pop
in
pop
shlb
or
pop
stc
push
gs
mov
sub
jnp
push
add
sub
pop
pop
lahf
adcb
pop
mov
xchg
js
lcall
inc
adc
and
jecxz
cld
xlat
jge
jg
push
cmp
lcall
add
in
hlt
adc
adc
nop
cmp
das
adc
mov
call
cmp
push
jmp
sub
imul
mov
loop
mov
sub
push
xchg
lret
jmp
dec
call
mov
mov
mov
ror
cs
fcmove
inc
sub
cmp
insb
xchg
fdivp
and
lea
fsts
jg
adc
mov
and
sub
jg
inc
mul
mov
inc
loop
xor
jecxz
push
call
in
js
aad
mov
push
mul
shll
in
mov
movsb
fcoms
cmp
sub
push
sbb
adc
jmp
mov
sub
das
xchg
dec
mov
sbb
into
cltd
jge
mov
mov
out
ja
faddl
sbb
addb
pop
dec
mov
sbb
mov
sub
dec
pop
and
xchg
out
jb
mov
xchg
xchg
sub
leave
call
mov
repnz
fcompl
add
insl
push
jg
fnsave
push
inc
popf
pushf
fnstenv
jbe
pop
lcall
mov
insl
jl
pop
jb
adc
adc
sub
jge
inc
cmpsl
je
xchg
pop
js
dec
outsl
sbb
daa
movsb
sub
dec
loopne
cmp
stc
mov
mov
add
xor
insb
add
rorl
fdivrl
or
xchg
call
xor
pusha
sbb
hlt
mov
jge
mov
inc
in
cli
sub
bound
int
or
jae
rorb
nop
jo
ss
scas
mov
xchg
xchg
pop
les
mov
inc
insb
push
lock
xor
fs
int
push
mov
jecxz
jbe
adc
or
jb
sbb
or
shlb
lret
sbb
mov
cmp
in
out
cltd
add
mov
adc
icebp
xor
jo
sub
xchg
add
fistpl
stc
mov
ds
testl
bound
lea
aaa
sahf
or
popf
jmp
pop
or
pop
int
xlat
scas
mov
add
and
je
fs
mov
xchg
inc
ror
fisubs
insb
sub
mov
ret
adc
aaa
cmp
fcomi
adc
mov
shlb
fimull
or
sub
ja
popa
data16
mov
stos
inc
int
repz
mov
jmp
push
or
jb
vpshab
mov
dec
push
jae
sbbl
or
lcall
fcmovb
add
push
cli
sbb
in
inc
pop
mov
ret
fidivs
int
mov
fistpll
pop
pop
cmp
mov
jnp
and
or
out
lret
adc
and
imul
lea
xchg
stc
repz
insl
mov
dec
imul
add
and
ret
push
loope
mov
dec
mov
les
fnstcw
adc
add
xchg
andl
lods
mov
cmp
pop
jp
hlt
fcoml
and
int3
mov
lds
and
xor
dec
cmpsb
fcomps
idivl
or
jne
filds
xchg
fnsave
andb
sbb
adc
cmp
ficomps
mov
pop
ret
data16
push
es
pop
push
lods
pop
ret
inc
and
sub
fdivs
out
xchg
sbb
insl
sti
loopne
jno
mov
ficoml
pop
stc
adc
mov
cwtl
sub
and
insl
sbbb
out
scas
mov
adc
cmp
sub
into
jbe
mov
mov
pop
dec
jmp
cli
jecxz
xlat
test
adc
popa
and
pextrw
stos
aam
loopne
iret
push
fdivs
bound
decb
adc
repnz
jo
inc
jge
sbb
pushf
popf
std
jo
por
mov
lahf
pop
inc
cltd
arpl
sub
and
jae
push
clc
xchg
das
adc
loop
pop
mov
mov
int3
xchg
out
mov
mov
fisubl
inc
hlt
dec
add
dec
rcr
and
mov
sbb
and
xchg
jno
das
mov
mov
mov
xor
ds
dec
ljmp
sti
adc
aaa
and
cli
imul
mov
push
aaa
pop
fiaddl
out
or
push
imulb
mov
fistpl
jp
lock
stos
jl
sub
adc
stos
lcall
mov
xor
hlt
push
pmaxsw
xchg
mov
scas
inc
incb
ljmp
mov
mov
xlat
std
sub
lahf
push
add
dec
lahf
inc
cmp
popf
out
std
cmp
xchg
mov
aad
push
call
pop
je
xchg
in
nop
mov
rorb
popa
clc
inc
xchg
jne
aad
add
dec
mov
mov
stos
test
pop
aaa
fsub
add
cwtl
sub
cmpsl
cmp
inc
in
xorb
pop
pop
jne
fwait
mov
jmp
movsl
jmp
xlat
lahf
xchg
mov
adc
dec
mov
dec
orl
mov
popa
in
or
aad
add
pop
add
dec
cmp
xchg
in
shll
andl
in
sub
xchg
insb
sub
cs
mov
cld
shlb
add
mov
cwtl
pop
andl
xchg
loope
inc
xchg
insl
sub
cmp
test
cmp
pushf
decb
inc
push
mov
daa
xlat
cs
jno
pushf
cmp
fidivrs
jae
neg
scas
sbbb
jge
sbb
pop
dec
and
in
icebp
sub
test
mov
scas
scas
mov
and
ret
xchg
mov
sub
nop
sbb
push
mov
xchg
cmc
fadd
js
out
mov
popf
cwtl
push
push
adc
mov
jp
je
repz
pop
jle
fstl
and
out
jmp
jl
jbe
dec
sub
adc
gs
repz
push
insb
jge
mov
push
repz
cmpsb
sub
neg
loope
mov
int3
pop
cmpsb
cmp
adc
je
cmp
int
ds
movsb
cmp
dec
adc
jge
and
icebp
stc
stos
daa
mov
xor
daa
mov
adc
out
data16
hlt
lret
xor
std
repz
pop
nop
push
bound
pand
jmp
cld
mov
sub
xlat
mov
fimuls
xchg
inc
in
xor
popf
pusha
vhaddps
xor
push
scas
aam
shrb
outsl
movsl
mov
mov
in
mov
jae
in
mov
jns
popa
fsts
mov
jae
sub
jno
or
cmp
int
sbb
sub
inc
js
xchg
ss
push
or
sbb
push
repz
xor
cmc
push
mov
fistl
jno
push
sbbl
loope
sub
jmp
cltd
mov
mov
inc
push
sub
push
or
mov
fstpt
inc
popa
sbb
fisttpl
into
pushf
lret
adcl
cwtl
icebp
jnp
lahf
nop
nop
or
and
addl
fwait
jmp
addb
mov
push
pop
pop
and
pop
mov
sbb
push
lret
add
test
and
adc
les
dec
inc
jle
mov
je
js
js
arpl
test
dec
je
adc
add
jp
or
aas
pusha
into
mov
mov
and
or
mov
ljmp
dec
insl
es
sub
adc
cmp
pushf
pop
jmp
aam
pop
in
cltd
repz
into
mov
cmp
adc
les
xchg
jns
hlt
xor
mov
xor
call
movsb
xchg
add
outsb
cs
sbb
mov
ret
cmp
mov
mov
imul
subl
dec
scas
dec
jnp
push
lahf
jecxz
mov
or
and
ljmp
scas
jp
lods
loop
int3
add
mov
bound
inc
test
and
adc
inc
rol
in
idivb
inc
sub
dec
enter
out
xchg
mov
pop
mov
push
aaa
jnp
lods
jns
pop
sub
mov
and
jae
aam
sub
pop
ljmp
jle
roll
dec
push
mull
popf
test
adc
jp
jno
nop
jg
int
shll
ljmp
push
mov
mov
inc
in
or
jne
or
fadds
and
int
popf
add
leave
add
cld
pop
jbe
rcrb
iret
dec
add
fsts
inc
cmp
adc
jae,pt
shrl
je
pop
int3
or
xlat
mov
leave
jbe
sbb
lea
out
fdivrs
out
fsubs
cwtl
mov
jge
inc
inc
mov
scas
shl
jnp
xchg
jl
out
adc
out
xchg
cmpsl
aad
and
pusha
mov
xchg
inc
push
in
ljmp
ss
pop
jae
repz
into
mov
sti
arpl
fstl
jmp
or
in
sbb
sbb
cmp
xchg
mov
andb
cmp
lahf
ds
sbb
push
jmp
adc
add
shl
or
push
xor
cmp
push
pusha
xchg
mov
xor
out
pop
pop
in
inc
in
adcb
test
jbe
xchg
pop
nop
dec
ds
jmp
aad
dec
or
cld
dec
xchg
mov
and
xchg
lock
xor
shll
dec
hlt
out
les
popf
incl
imul
jmp
cmpsb
mov
mov
loop
xchg
inc
mov
sahf
nop
loope
popa
mov
cwtl
xor
cmp
cmc
sub
rorl
pop
std
jg
ds
mov
xchg
shlb
aaa
fstl
ja
rcrl
sbb
lds
dec
cmpsl
pop
jecxz
int
or
dec
sub
mov
in
in
andl
mov
pop
bound
mov
mov
jns
cmp
andl
inc
add
push
je
add
dec
sbb
decb
inc
pop
stos
inc
scas
add
push
ret
xor
lds
pop
in
call
sub
cmpsb
lea
mov
inc
inc
or
ds
fldenv
stos
jmp
xor
adc
aam
sub
lock
test
fdivr
clc
adc
xchg
ret
jecxz
sub
sub
sub
das
push
dec
jno
movsl
test
mov
mov
ds
hlt
lods
mov
inc
mov
xor
movd
movsb
mov
mov
lret
lock
hlt
pusha
adc
cmp
jl
adc
mov
add
xor
jns
lods
loop
mov
lods
sbb
fucom
aas
push
dec
call
mov
jp
fstpt
lock
mov
test
and
xchg
cwtl
mov
gs
out
pop
push
test
push
idivl
insb
or
sbb
pop
daa
add
dec
mov
xchg
xchg
sub
jno
mov
sti
xchg
mov
xchg
das
jg
and
jge
mov
pop
mov
movsb
push
notb
int
mov
imul
sub
jge
add
inc
cli
lods
sbb
fisubl
push
stos
adc
mull
or
adcl
xchg
dec
sahf
sbb
and
mov
pop
xor
cmc
shrb
adc
ss
mov
das
add
cmp
lea
pop
mov
fwait
addr16
adc
cwtl
mov
mov
and
xchg
mov
adc
or
fcom
andb
sub
mov
outsl
nop
push
dec
cld
jo
push
jge
rcrb
mov
cmpsl
cld
and
push
xchg
adc
jno
mov
jae
filds
mov
ljmp
outsl
add
sti
push
add
pop
into
daa
pop
repz
cld
out
sub
nop
pop
addb
das
fisttpl
ficomps
js
push
and
sub
nop
je
pop
mov
push
movb
pushf
movsl
stos
push
insb
cwtl
cmpb
fs
mov
mov
pop
jns
sarl
jmp
mov
push
out
enter
dec
jns
sarl
dec
and
mov
xchg
test
dec
mov
jg
mov
add
pop
call
mov
mov
sbb
or
xor
dec
fisttps
cli
adc
inc
sbb
sbb
xchg
and
and
jae
xchg
and
das
push
jo
sub
push
mov
pop
movsl
lret
pop
sbb
sub
jne
jo
sbb
div
jb
dec
in
aas
sub
jae
clc
push
js
mov
push
xchg
int
pop
adc
in
push
adc
loop
pop
sub
mov
lea
les
mov
or
bound
add
das
repz
mov
cmpsl
mov
xor
push
in
stos
test
pop
mov
jmp
lret
addb
push
mov
aam
or
sub
cmc
int3
in
adc
in
xchg
lret
mov
repnz
shrl
mov
call
add
insb
sti
lcall
aad
std
notb
arpl
lds
add
jnp
xor
xchg
dec
jg
fbstp
inc
idivl
into
pop
fwait
xchg
add
pop
lds
aaa
lock
subb
sarb
add
sarb
lcall
cmp
jns
call
push
push
mov
xchg
mov
shlb
mov
aas
aas
shlb
popf
out
icebp
lcall
jns
or
addr16
scas
gs
repz
add
and
inc
mov
jl
imul
in
jno
imul
shrl
aad
mov
stc
into
pop
sbb
sbb
in
jmp
rol
mov
push
es
dec
stos
cltd
into
mov
outsl
cmp
and
shlb
cmpsb
sub
cwtl
decl
push
and
lds
daa
cmp
mov
and
test
insl
stos
loope
inc
adc
cmpsb
mov
ret
jnp
add
popf
ret
and
jl
xor
cltd
shl
pop
aas
rcl
sti
movsl
lock
jecxz
adc
enter
pop
loope
fdivr
push
and
xor
test
or
xor
stos
mov
jecxz
dec
xor
cmpb
xor
scas
in
mov
enter
cmp
shrl
jb
jg
adc
ret
icebp
dec
sbb
mov
je
mov
fs
emms
inc
insb
jle
stos
push
add
addr16
out
sbb
inc
ret
pop
test
scas
add
jg
mov
mov
loope
sbb
cmp
repz
bnd
pop
sub
test
cmpsb
push
leave
cmp
cli
dec
jo
lods
push
inc
add
in
xor
dec
cld
fldt
jmp
or
jne
cmpsl
stc
pop
jl
and
test
jae
fidivl
and
scas
inc
out
cmp
add
dec
mov
cmp
cli
adc
xchg
sbb
push
loope
fs
mov
out
or
popf
cmpl
and
mov
test
xor
mov
sub
mov
pop
imul
inc
pop
and
sub
mov
test
mov
add
xor
xor
push
mov
sahf
mov
push
insb
xor
dec
push
std
rcll
out
jp
mov
jmp
xchg
push
test
fcompl
nop
insl
push
dec
cs
sbb
arpl
sub
hlt
mov
fildll
add
xchg
inc
cltd
cmp
xor
pop
cmp
data16
push
popf
mov
jno
lahf
and
daa
xchg
push
lds
leave
and
push
xor
ljmp
sub
xchg
fucom
std
loopne
push
lods
xor
aaa
mov
cmp
enter
xor
push
in
dec
insb
imul
mov
lcall
xchg
sub
out
ret
lret
xor
movsl
pop
and
mov
out
and
call
and
sub
inc
fidivrl
dec
mov
xlat
movsl
xlat
and
and
xor
xor
adc
xrelease
into
add
movsb
cmp
mov
push
mov
pop
cmp
pusha
stos
fstpt
mov
aaa
addr16
lds
push
cmpsl
lds
fldln2
stos
pop
movsb
mov
mov
shll
loopne
xor
test
add
add
adc
fdivrp
test
adc
je
add
cmp
js
sub
arpl
dec
cmc
jno
gs
imul
cmc
adc
in
inc
test
imul
dec
aas
loope
cmp
aas
ja
mov
fldenv
or
popf
mov
test
ljmp
or
fwait
sbb
adc
add
xchg
add
pop
mov
leave
ds
dec
mov
sbb
mov
je
mov
push
clc
iret
negb
inc
sahf
in
inc
dec
cmpl
or
mov
iret
pop
lea
push
stos
and
dec
xchg
adc
jp
adc
shlb
jge
cmpsb
call
shll
stc
test
xchg
mov
push
and
push
inc
pop
push
cmp
outsb
jnp
imul
inc
jle
cmp
cld
mov
push
stos
addr16
cmpsb
push
push
and
ret
dec
xchg
inc
lods
aad
fnstsw
into
std
dec
iret
adc
shlb
daa
sbb
xchg
int3
lods
scas
sub
xor
and
daa
push
imul
push
outsb
negl
mov
shl
rcrl
je
pusha
lret
pop
inc
data16
roll
test
xor
sub
dec
sub
jns
cmp
push
jnp
add
repz
dec
addl
fisubrs
mov
push
mov
sahf
cltd
test
addr16
pop
ss
fcmovnbe
inc
shlb
ror
push
mov
jl
sub
xor
stos
incb
movsl
adc
int3
mov
or
pop
cmpb
mov
fwait
ljmp
stc
in
fistpl
fldz
xchg
test
inc
push
outsl
xor
inc
fnstenv
add
adc
sub
stos
outsl
lahf
mov
jl
mov
notb
mov
pop
ret
mov
xor
mov
jmp
js
jbe
jge
push
cmp
dec
out
outsb
add
fisttpl
icebp
es
sbb
cmc
divb
dec
sbb
inc
jno
xor
call
pop
popf
cli
mov
dec
add
dec
lods
and
int3
adc
test
adc
jne
push
inc
popa
lds
sbb
pusha
push
stos
jbe
pop
cwtl
jne
lods
setge
pop
test
aaa
addr16
mov
sbb
add
add
adcl
sub
in
mov
dec
adcl
cmpsb
testl
int
test
in
pushf
cld
int3
adc
cmpl
int3
loop
rorl
insb
popa
sbb
vmaxpd
xor
in
mov
sub
jmp
pop
lahf
das
cmc
mov
pop
jne
bound
fsubs
adc
aad
cmp
lahf
pop
mov
cmp
call
jo,pt
push
or
lret
inc
push
sub
movb
outsl
pop
xchg
test
mov
ds
adc
sbb
jge
mov
add
and
inc
mov
aas
mov
push
popf
mov
cltd
xor
faddl
test
xor
into
push
pop
scas
popa
xchg
lods
int3
adc
mov
shl
outsl
add
loop
inc
pop
in
lahf
or
pusha
jb
lcall
dec
fistpll
sbb
push
xchg
aas
dec
jbe
jecxz
add
add
lods
mov
pop
xchg
into
shl
je
sub
jb
ljmp
sub
push
push
adc
and
sbb
lret
and
nop
flds
adc
popf
out
inc
xlat
jns
adc
and
adc
inc
jmp
add
hlt
and
in
or
dec
adc
sub
xorb
jbe
mov
dec
jno
leave
xor
imul
dec
out
fcomps
outsl
pusha
sbb
icebp
test
jne
fstl
xchg
repz
js
outsb
inc
out
rcrl
xor
adc
in
test
mov
mov
sbb
pop
sti
pop
pop
xchg
push
and
ret
inc
xchg
and
mov
inc
mov
and
out
mov
sub
ss
cld
dec
mov
loope
mov
lret
test
xchg
ja
adc
mov
sbb
push
xchg
leave
pop
int
dec
xchg
pop
mulb
mov
sbb
inc
cmpsb
cmp
cwtl
adc
push
in
or
jns
test
add
popa
ret
and
mov
sbb
xor
cwtl
hlt
shrb
jne
in
dec
jl
xchg
pop
or
out
lods
jno
mov
std
push
mov
jbe
faddl
or
dec
ja
adcl
cltd
push
js
lock
push
mov
jge
push
flds
in
sahf
les
movsl
into
add
inc
xor
xor
pushf
sbb
xchg
lret
out
jae
fwait
adc
hlt
ret
idivb
shr
mov
cmp
xchg
lds
mov
test
xor
jmp
rcll
ss
jae
das
mov
cli
popf
mov
outsb
pop
jge
xor
sbb
inc
test
roll
clc
xor
dec
xor
jecxz
push
inc
dec
pop
pop
jp
sbb
addr16
pop
arpl
jo
xchg
or
push
or
jl
call
lahf
loope
js
setg
sub
cld
xchg
jo
rcrb
xchg
jge
jnp
sbb
lds
out
cmc
fs
xchg
and
dec
sbb
in
test
sbb
mov
test
pop
xor
mov
imul
cmp
inc
lea
mov
or
xor
and
mov
push
stos
popa
int3
int3
pop
out
xchg
cltd
movsb
dec
movsb
cwtl
fs
lods
mov
cmp
mov
mov
in
mov
sub
in
faddl
sbb
add
popa
pop
xor
lock
hlt
int3
in
stos
inc
xlat
xor
cli
jb
jno
rorl
scas
xchg
pop
push
repz
or
mov
sub
aad
inc
hlt
bound
mov
dec
adc
jl
jne
push
inc
pop
or
dec
and
push
or
jb
jmp
or
mov
icebp
cmc
inc
or
add
inc
xchg
sub
cmp
or
mov
mov
or
imul
sub
rcr
mov
ret
jecxz
js
jecxz
out
out
pop
push
xor
pop
cltd
xor
out
fistpl
inc
sub
imul
pop
popa
sbb
popf
xor
xlat
lcall
adc
mov
scas
cmp
in
sub
mov
dec
lods
mov
cltd
dec
hlt
jo
pop
orb
jb
dec
aad
xor
mov
scas
mov
cltd
dec
cli
pusha
dec
and
push
jecxz
adc
push
xchg
scas
scas
aas
testb
pop
das
adc
sbb
or
mov
push
cmpsl
ljmp
test
cmp
mov
push
cmp
xchg
adc
loopne
loop
subl
jg
loop
xor
add
push
test
mov
push
popa
fadd
xchg
push
movq
enter
pop
sti
popf
cli
loope
jle
inc
pop
add
xchg
daa
inc
mov
xchg
xchg
mov
iret
mov
outsb
ja
out
shrb
xchg
fdivrl
xchg
lahf
jle
loop
jno
pop
mov
les
sub
hlt
inc
enter
js
mov
xor
push
add
mov
dec
xchg
inc
iret
cld
sbb
enter
dec
sbb
cli
fs
fstps
lahf
lods
adc
sbb
inc
and
lods
cli
cmc
xlat
pushf
repnz
push
mov
dec
jmp
loopne
dec
cmp
cmp
push
std
dec
fists
int3
std
in
cmp
dec
cmp
sbb
daa
cld
int3
push
push
pop
mov
stos
leave
in
pop
aam
inc
dec
ss
cmp
xchg
pusha
aam
mov
int
cltd
les
jnp
test
xchg
testl
push
clc
mov
andl
xchg
sbb
mov
outsl
fdecstp
mov
xchg
out
popa
and
mov
in
xor
fmull
int
pop
cmp
icebp
xor
xor
xchg
and
adc
lods
in
rclb
out
or
and
sub
dec
xor
dec
ds
fwait
and
enter
sbb
mov
mov
sub
adc
lds
and
inc
pop
dec
ja
or
sub
pusha
and
mov
xchg
cmp
jle
pop
lret
xlat
out
rclb
lret
cmc
not
sbb
push
negl
test
cli
int3
sub
dec
pop
stos
loop
out
out
loope
add
inc
push
push
aam
popa
fdivrl
adc
sbb
mov
mov
aaa
adcl
popa
ljmp
fwait
aam
sub
xchg
call
dec
pop
hlt
or
mov
and
sbb
rorb
adc
or
add
test
sbb
mov
mov
fcmovnu
cvtpi2ps
test
insb
fs
push
pop
dec
dec
sbb
sub
inc
cmp
out
scas
jg
push
int
adc
dec
xor
xlat
jecxz
pusha
sub
fwait
push
rcll
call
shlb
cmp
sbb
aas
mov
test
enter
jmp
jno
fdiv
lret
aam
les
call
pop
jne
mov
adc
lahf
mov
inc
jnp
cs
call
adc
lret
xchg
jo
dec
hlt
aaa
push
into
push
arpl
sti
dec
jo
bound
outsl
fidivl
stc
cmp
adc
into
test
outsb
dec
pop
mov
inc
or
js
dec
jmp
push
sti
outsl
adc
push
xlat
mov
clc
xchg
std
push
clc
jle
cmp
loope
mov
push
daa
mov
and
and
mov
mov
xchg
cmp
fsubrs
and
call
mov
lods
add
add
adc
movsb
cmp
sub
sti
dec
push
repnz
mov
cmpsl
mov
popa
xadd
enter
fidivs
pop
cmpsl
jle
mov
pop
aaa
test
js
jae
dec
out
sub
xor
les
ljmp
lods
pop
jp
fidivrs
stos
cmp
cmpsl
and
sbb
mov
cmp
xchg
push
nop
mov
outsb
sbb
lods
jg
cmp
scas
jmp
jbe
fisttps
xor
or
or
inc
mov
mov
ficoms
mov
ja
test
das
adc
and
dec
aaa
mov
mov
ljmp
aam
lahf
mov
sub
stos
andl
mov
loopne
insb
sub
repz
xchg
sbb
ja
jge
out
pop
fstpt
nop
cmc
push
fucomp
xchg
jnp
lods
inc
aad
add
cwtl
aad
rorb
push
push
out
popa
lea
jmp
aad
int3
or
inc
in
mov
popf
mov
jl
in
mov
sti
lea
aas
call
xchg
pushw
mulb
cs
mov
push
loope
dec
dec
dec
xor
ret
outsl
fcoml
xchg
add
sbb
pop
add
mov
jg
in
push
jg
mov
or
xchg
mov
stos
fwait
jae
xchg
pop
sub
mov
rcll
lods
adc
sbb
adc
call
test
out
push
xor
loope
and
adc
shr
stos
repz
bound
outsb
mov
push
xor
jbe
mov
xchg
sahf
leave
faddl
nop
in
mov
jo
aas
pop
in
fwait
jns
jno
or
push
ss
mov
cld
in
pop
jns
or
movsb
rolb
dec
mov
in
popa
jns
sub
mov
pushf
call
mov
cmc
fwait
sub
mov
push
push
inc
and
push
mov
incb
loop
enter
sahf
jmp
sahf
mov
sbb
out
jp
ds
adc
cs
test
sub
std
cmp
pop
movsb
cwtl
xor
add
cmp
xlat
adc
bound
ret
xchg
sarl
or
cltd
adc
cmp
inc
push
jo
sbb
daa
pop
lock
aaa
popa
jmp
fidivrl
into
dec
lahf
sub
inc
jecxz
inc
push
cmpsl
into
rclb
xor
bnd
mov
inc
aas
test
scas
pop
and
cmp
push
or
daa
hlt
pop
iret
and
mov
loope
add
push
xor
leave
aaa
sbb
mov
rsm
mov
and
adc
cmc
fnstcw
fwait
jp
pop
ds
push
mov
mov
in
add
dec
pop
addb
or
dec
stos
loope
add
in
cmpsl
pop
dec
test
std
inc
cmp
mov
data16
icebp
addr16
mov
into
mov
xor
adc
mov
je
es
loop
fsts
gs
jecxz
les
xor
xchg
int
and
lret
cmp
pop
stc
add
stos
into
inc
lret
mov
lcall
push
scas
sbb
sbb
cmp
das
popf
lahf
cltd
stos
xchg
cmp
lret
sub
adc
mov
repz
lahf
fwait
in
cli
shll
xchg
push
adc
jo
jnp
mov
or
mov
int
jle
aas
or
jmp
dec
add
jp
dec
loopne
les
and
icebp
dec
adc
jg
adc
mov
std
or
push
mov
int
push
cld
dec
ss
mov
aas
xor
mov
int3
sbb
xlat
dec
dec
jl
arpl
loopne
dec
jle
jo
add
adc
aaa
dec
cmp
je
push
xor
addr16
sub
pop
jg
not
pushf
and
mov
cmp
mov
sahf
ret
fmuls
mov
mov
adc
adc
dec
sbb
scas
or
in
stos
outsl
bound
lea
fsubrl
pop
out
shr
stc
or
add
arpl
jbe
pand
lock
cmp
movsb
loope
mov
aad
lods
mov
fnstsw
add
mov
lret
jmp
aaa
imul
inc
clc
cmpb
test
scas
fdiv
cmp
adc
cmp
leave
sbb
xchg
int
mov
xor
dec
mov
imul
pop
mov
ficoms
repnz
cmp
mov
popa
inc
jns
xlat
push
lcall
ret
jecxz
adc
pusha
xlat
xchg
in
or
fsubrl
iret
insl
loope
xchg
loop
cmpsl
fistl
xchg
sbb
sbb
ret
loopne
adc
pop
mov
inc
cmpsl
lcall
mov
cmpsl
rclb
loopne
in
jbe
int3
or
add
pop
and
sub
push
mov
adc
punpcklbw
jae
fistpl
mov
cltd
jae
and
jno
sbb
and
in
ss
je
push
lods
bound
pop
add
mov
shlb
ret
shl
scas
inc
ficoml
mov
cmp
or
inc
fisubrs
cmp
stos
cld
cltd
int
in
push
mov
or
pop
out
icebp
or
sub
movsl
dec
test
jns
cld
and
inc
orl
cltd
push
rcll
xchg
sahf
xchg
dec
mov
cmpl
das
leave
cli
xor
enter
xor
pushf
mov
cmp
or
dec
fcompl
and
jle
add
popa
dec
test
dec
mov
xchg
mov
jne
out
dec
or
jns
les
jae
jmp
shrl
incb
rclb
sub
ret
xor
sbb
shrb
mov
in
xor
mov
mov
cmp
jno
cwtl
jle
or
cltd
xor
add
stos
lcall
fnstcw
mov
addr16
mov
fs
test
das
aam
into
ljmp
call
mov
sub
sahf
xchg
or
int3
pop
push
pop
mov
xchg
add
push
adc
mov
jl
add
pushf
scas
mov
rolb
pop
idivb
sti
in
inc
movsb
imul
hlt
dec
adc
add
cltd
stos
push
outsl
aad
dec
out
sarb
outsl
adc
sarl
inc
out
xorb
adc
sbb
nop
xor
mov
fstpt
out
jb
add
cmc
jp
ja
sub
sbbl
dec
sti
push
fucomi
icebp
cli
jecxz,pt
rclb
add
xchg
or
pop
outsb
cld
jnp
popf
sbb
add
mov
mov
jl
mov
cwtl
cmc
dec
mov
clc
xchg
push
dec
movsb
jo
fmul
push
mov
imul
lcall
push
push
mov
ja
cmp
pushf
push
xor
filds
mov
xchg
dec
cmp
cmc
cmc
dec
and
fsubs
cmpsb
lcall
inc
xor
add
pop
repz
loope
xor
jb
cmp
push
ret
imul
scas
push
es
xchg
or
pop
cmovg
clc
popf
fmuls
pop
ficoml
inc
jnp
push
rcll
shll
stos
inc
addr16
std
jmp
call
xchg
cmpsl
fs
ret
fidivrs
and
loopne
xor
in
jg
or
enter
repz
pop
daa
loopne
mov
addr16
lcall
cmp
push
sub
cmpb
push
mov
adc
jno
loopne
xchg
es
or
pop
dec
mov
das
daa
test
jg
std
andb
push
xchg
insl
cmp
es
mov
out
movsb
jns
cmp
xlat
test
mov
pushfw
mov
ret
pushf
cmp
dec
mov
ds
dec
mov
repnz
inc
mov
jg
pop
xor
add
pop
arpl
add
xchg
sub
lret
jae
xor
cmp
and
pushf
add
lahf
push
or
sti
inc
aaa
std
mov
imul
cli
shrb
aad
movsl
in
sub
addr16
push
icebp
cwtl
and
add
dec
inc
inc
xchg
jge
add
repnz
mov
fsubl
cwtl
rcrl
gs
push
aam
andb
cmp
lds
fbld
adc
arpl
lods
in
mov
and
jge
mov
jp
shlb
adc
adc
lods
ret
enter
sbb
and
pop
bound
xchg
push
inc
push
lret
test
sub
sub
or
pop
fldcw
xchg
mov
cmp
mov
cmp
adc
nop
dec
hlt
cmp
outsl
xor
lds
xchg
aam
cmp
std
out
pop
mov
cmp
xchg
xor
sbbl
mov
imul
clc
cmpsl
sub
lret
dec
sbb
or
jo
clc
mov
lods
pop
jmp
hlt
adc
xor
lds
sbb
push
mov
mov
xor
nop
add
push
shrl
ss
test
sub
inc
test
out
dec
add
push
push
jge
mov
das
shlb
pop
pop
jge,pt
xchg
jo
inc
lret
cltd
loop
adcl
scas
jecxz
pop
mov
or
mov
and
or
mov
pusha
cmp
and
cwtl
mov
jns
mov
push
repnz
dec
push
bound
cli
jo
pop
or
shrb
aaa
and
pop
mov
sahf
pop
pop
lds
gs
cmc
pop
add
scas
cmc
adc
mov
fildl
or
imul
push
mov
add
adc
hlt
aas
orl
jg
or
sbb
pop
subb
das
mov
cs
mov
js
aam
inc
push
fs
xlat
mov
xchg
inc
jecxz
repz
shrb
lods
mov
mov
in
lret
push
clc
leave
mov
xchg
dec
mov
fstp
inc
sbb
in
jge
inc
mov
dec
mov
add
loopne
int3
hlt
inc
push
sbb
xlat
sub
fstpl
mov
push
mov
fcomps
loop
adc
jp
adc
sub
sbb
aas
icebp
fdivrs
dec
arpl
mov
push
inc
or
mov
cmp
sti
xchg
push
mov
or
sub
sub
jb
mov
icebp
mov
and
mov
and
mov
push
or
outsb
sbb
jge
adc
or
dec
mov
test
daa
or
cmpsl
push
fsubrl
das
out
fwait
dec
popf
or
sub
push
lods
std
lds
rcrl
push
mov
fcompl
mov
fadds
dec
sbb
cli
inc
ja,pt
std
ds
je
and
pop
fwait
or
ret
mov
in
scas
pop
lods
pop
cmp
and
test
stos
add
xchg
xor
int3
test
xor
ret
jl
dec
add
int3
subb
out
xchg
out
fdivs
fstl
cmp
dec
fidivrs
jmp
cltd
jmp
jle
lahf
jl
sahf
outsl
jbe
test
jae
sbb
xchg
into
push
sbb
mov
orb
push
shlb
cltd
loop
push
push
rcrl
sub
test
std
inc
clc
stos
push
lods
or
jno
sbb
ss
sub
std
push
push
push
jle
sarl
bound
jg
negb
cmp
jbe
add
cmp
outsb
and
ljmp
pop
push
into
jae
dec
in
test
jns
push
xchg
test
in
or
and
jge
imul
sahf
adc
fadds
and
fld
loopne
enter
pop
xor
mov
and
insb
jl
mov
inc
dec
push
mov
xchg
andl
rcll
sub
in
cltd
xorb
aam
add
jne
mov
rolb
pop
mov
dec
lds
cld
loopne
mov
xchg
jp
mov
jl
test
pop
pop
jno
mov
mov
xchg
mov
push
inc
mov
mov
clc
inc
push
testl
inc
sbb
mov
push
mov
inc
adc
xor
mov
or
and
cmc
popa
pop
fwait
mov
cwtl
arpl
cmp
iret
call
outsl
leave
ss
adc
bound
mov
orb
cmpl
inc
outsl
in
js
lods
fcomp
jno
xor
jge
or
add
add
xlat
lds
addr16
dec
leave
cmpsb
pushf
jb
jmp
inc
inc
xchg
cli
icebp
ret
daa
sbb
loopne
ds
pop
push
test
andl
jg
insl
fiadds
scas
push
mov
xlat
loop
fimuls
push
lock
loope
loop
xlat
insb
mov
mov
mov
adc
roll
std
and
mov
gs
or
or
flds
lahf
and
inc
inc
insl
sti
adc
sbb
sub
es
iret
xchg
mov
fiaddl
insl
push
inc
adc
pop
adc
fdivrl
sbb
stos
mov
push
test
aad
popf
nop
ja
mov
gs
lock
pop
sbbb
inc
repnz
mov
cmpsl
mov
push
lret
add
xchg
add
mov
sub
xor
pop
sbb
jg
cs
adcb
loop
cmp
ficompl
xor
or
push
js
push
push
and
int3
jbe
mov
cmpb
out
imul
inc
rcrb
sub
dec
shll
out
mov
adc
mov
leave
hlt
and
mov
adc
jb
js
jbe
ljmp
mov
arpl
push
mov
leave
cmpsl
mov
mov
hlt
stc
lret
push
jp
cmp
rcrb
pop
xor
jge
cmpb
mov
pop
fstl
daa
es
pop
jns
enter
lods
mov
data16
data16
int
mov
aam
xchg
test
outsb
add
shll
sbb
inc
addr16
sti
lret
out
scas
int3
sbb
and
mov
mov
inc
jmp
fwait
add
mov
pop
xchg
cltd
js
mov
xor
xchg
adc
inc
or
fnsave
jne
adc
cmp
pop
cltd
lret
inc
jmp
sub
icebp
scas
sbb
pop
or
sub
adc
inc
add
mov
add
cli
pop
pop
or
in
popa
sbb
leave
mov
add
dec
mov
mov
fsubl
adc
pop
outsl
push
notb
mov
gs
jmp
jo
into
inc
pusha
ret
jne
xchg
pushf
mov
fisttpl
in
xor
add
adc
lds
insb
lea
dec
sub
not
or
aad
mov
ss
lods
hlt
adc
enter
in
pop
daa
add
dec
inc
paddusb
sub
fiadds
je
adc
int3
popl
pushf
aaa
xor
aas
stos
sbb
loopne
sub
push
jg
andb
mov
insb
lret
mov
loopne
mov
rcr
pop
inc
mov
jl
mov
lcall
movsb
aad
movsl
add
aas
mov
lds
pop
in
push
jp
jae
leave
dec
cmc
test
into
mov
std
pop
push
or
push
sahf
aad
or
add
mov
aaa
or
in
outsb
stos
scas
shl
sub
jns
imul
jecxz
jne
sub
sub
aas
add
lret
add
push
jne
insb
jmp
push
cmp
pop
js
test
fbld
out
ja
pop
mov
out
add
jne
stos
mov
xchg
scas
add
cmp
movl
adc
jmp
test
ss
and
push
enter
sbb
xor
rorl
int3
mov
repz
jl
inc
shll
jg
fldenv
lea
xchg
mov
out
pop
loop
jne
push
sub
scas
imul
xlat
loop
xlat
test
or
imul
outsl
jge
sub
mov
mov
mov
xor
into
jle
xor
stos
inc
sbb
or
and
fs
jbe
push
jl
xchg
mov
mov
mov
dec
popf
and
push
fwait
mov
push
pop
dec
lods
push
mov
insl
aad
pop
test
mov
dec
lods
cmp
stc
movsl
mov
pop
inc
jo
movsl
iret
mov
sub
and
inc
push
daa
mov
sbb
les
jmp
in
jbe
stos
repz
jnp
jle
daa
adc
pop
xchg
sbb
pushf
and
js
sub
scas
daa
inc
jle
xor
in
scas
call
and
out
or
dec
mov
fsubrl
inc
push
mov
jle
enter
pop
mov
xor
mov
pusha
mov
and
jns
test
mov
push
cwtl
sbb
pop
pop
sbb
dec
in
sar
pop
mov
bound
iret
fstl
sti
dec
into
sbb
ds
jle
ret
es
cmp
mov
clc
mov
push
push
push
xchg
loope
pop
cmp
jne
fidivrl
add
cmp
push
in
mov
popf
outsb
mov
mov
mov
das
lds
leave
sarb
icebp
repnz
cmp
fs
xorb
jbe
cmc
sbb
mov
out
fnstcw
xchg
adc
adc
cld
and
xor
loope
mov
sub
popa
shr
add
xchg
ds
hlt
test
leave
push
mov
pop
cmc
imul
cmc
rol
adc
or
sbb
mov
mov
dec
xchg
mov
dec
call
in
nop
cld
das
mov
repz
enter
leave
mov
int
and
fsubl
jl
cwtl
loopne
or
imul
ja
int3
in
inc
dec
mov
mov
test
aam
bound
sub
or
push
stc
ret
adc
or
sbb
push
push
les
movsb
lcall
and
jl
repnz
das
mov
adc
fwait
adc
push
push
dec
xor
xor
es
cmp
mov
movsl
cmpsb
sub
out
fsubrs
aas
or
sbb
adc
jbe
jnp
ljmp
mov
jmp
mov
cmp
ficompl
lods
loope
mov
xor
es
scas
bound
inc
lods
lock
pop
les
imul
leave
fcomip
push
adc
push
mov
fimuls
add
cltd
scas
mov
jl
pop
and
ret
insl
in
sbb
shll
aas
push
ret
push
cmpsl
gs
and
mov
cmp
inc
mov
sub
adc
das
movsl
or
pop
push
in
cmpsl
cwtl
xor
cmpsl
lret
icebp
dec
mov
mov
cmp
decb
or
test
cmp
adcb
sahf
leave
cmp
push
cmp
shrb
mov
sahf
dec
xchg
pop
and
cld
and
mov
mov
jno
adc
aas
int3
xchg
pushf
xor
or
mov
or
pop
or
push
mov
sti
mov
int3
scas
mov
push
clc
lea
cmp
movsl
je
adc
dec
mov
push
cmc
cmpsl
xor
inc
dec
add
xorb
xchg
jge
xlat
adcl
jne
out
sbb
xor
mov
pop
lahf
movsl
xor
mov
out
cmp
adcb
inc
mov
fnsave
or
pop
xor
jo
mov
mov
mov
dec
xchg
das
pop
adc
gs
test
test
leave
lret
iret
ja
enter
mov
pop
lahf
vsubsd
nop
pop
xchg
lret
fsubl
out
test
mov
sahf
push
int3
xchg
test
int
bound
mov
daa
lret
jns
ret
push
pop
xlat
rcrl
push
ja
adc
adc
icebp
mov
aas
inc
stc
lcall
shrb
ret
fs
sub
sbb
mov
and
jae
repnz
or
ret
ret
daa
cmc
xchg
arpl
shrb
jnp
push
out
repz
test
mov
repz
loopne
test
les
loop
jb
pop
adc
inc
sahf
add
cwtl
dec
lods
fcompl
xchg
xchg
ret
jecxz
ror
pop
mov
mov
sbb
out
pop
sub
sbb
sar
fmull
movsb
lods
es
mov
push
in
popa
mov
iret
test
dec
jae
out
xorl
or
sub
and
lock
xor
and
adc
sub
cmp
sub
lods
push
mov
and
leave
or
and
lea
xchg
sbb
mov
lahf
mov
xor
jmp
pop
or
mov
dec
and
adc
call
fs
mov
add
mov
stos
mov
cmpsb
dec
jl
int3
gs
sub
loopne
jle
cli
push
stos
mov
mov
dec
rcrb
push
jno
sarb
xor
or
mov
dec
mov
sub
insb
mov
int3
ljmp
cmp
xor
daa
pop
jae
mov
pop
cmp
in
inc
scas
bound
add
push
mov
out
pop
adc
xor
aam
in
ss
je
setns
pop
jl
icebp
sub
lret
aad
push
dec
mov
xchg
mov
pop
sub
sub
push
fcmovbe
fstl
inc
popf
mov
xor
xor
pop
pop
jmp
xchg
and
push
call
mov
mov
adc
lods
mov
les
xor
push
nop
dec
iret
fists
adc
int
pop
movsb
xchg
and
jae
xchg
mov
push
add
fsub
mov
lock
inc
out
test
cmp
imul
and
cmpsb
mov
mov
pop
pop
xor
cmp
clc
shrb
cwtl
jge
rcr
pop
mov
add
inc
mov
int3
mov
and
add
mov
mov
adc
push
jbe
or
xchg
fiadds
gs
in
mov
idivl
or
inc
push
insl
jecxz
ja
xor
mov
cwtl
rorl
mov
jns
cmp
xchg
adc
aas
rcrb
xor
dec
sbb
cmp
and
mov
lahf
iret
xchg
or
jo
xchg
aam
jl
xchg
int3
xor
sbb
add
lds
imul
ljmp
repz
ss
mov
rcr
and
stos
xchg
sbb
xor
mov
lock
adc
inc
cmp
ljmp
test
xor
mov
jg
xchg
push
fisubs
lret
and
mov
xlat
jns
es
orb
fwait
loope
dec
dec
push
dec
int
pop
mov
mov
or
push
loopne
or
jo
icebp
inc
cmp
daa
mulb
inc
mov
cli
adc
dec
test
faddl
cwtl
mov
decb
xor
fwait
sti
aaa
mov
ljmp
pop
xchg
fsubs
int3
and
jge
dec
dec
xor
test
psllq
aad
push
inc
inc
icebp
push
mov
out
lods
lahf
movsl
xor
cli
and
xorl
lret
dec
pop
cmp
pop
shrb
sbb
ficoml
and
repnz
loopnew
pusha
sahf
mov
int
jno
pop
xchg
sbb
or
jno
adc
mov
push
sbb
leave
mov
sub
jbe
in
mov
into
sarb
fistpll
outsb
jle
sub
jp
hlt
lea
xchg
scas
mov
jo
push
inc
adc
cmp
imulb
aaa
pop
cmp
pop
int3
cmpsl
push
push
clc
call
arpl
sub
ljmp
ljmp
xchg
mov
nop
xlat
sbb
cli
xor
push
ficompl
or
mov
and
pop
fxch
das
aam
xlat
and
fdivl
je
loopne
push
pushf
popa
call
and
in
dec
pop
and
push
inc
sbb
dec
dec
loopne
and
aaa
push
mov
mov
inc
movsb
mov
jnp
mov
xchg
test
lret
clc
push
bound
xchg
mov
sbb
and
push
mov
ds
cld
scas
rcl
push
lods
dec
sahf
aas
adc
mov
mov
shll
push
cmp
jp
inc
mov
pop
and
outsb
popf
ficoms
lds
or
mov
sub
rcrl
sub
sub
adc
jge,pn
shlb
popf
out
push
push
dec
or
lcall
xchg
jle
push
jnp
xchg
jmp
jle
pop
movsb
lods
add
int
sub
cmp
test
mov
sbb
lret
mov
jp
push
insb
and
pop
fadd
inc
mov
cmp
sub
mov
in
inc
push
pop
cltd
jae
inc
inc
or
cmc
pop
mov
fsubs
dec
or
imull
mov
xchg
jg
out
shll
cmp
xchg
imul
or
ret
stos
mov
pop
addr16
mov
pushf
xchg
std
mov
aas
xchg
mov
pop
jns
mov
pop
addr16
sub
mov
adcb
jle
add
loopne
mov
ficoml
pushf
cmpsb
ret
test
sub
jnp
inc
cmp
sarl
or
or
dec
add
jnp
jne
in
cli
aam
adc
cmp
les
mov
xchg
mov
lock
mov
sti
in
adc
scas
or
pop
sub
lock
call
mov
dec
lret
dec
jg
stos
jge
repz
gs
lret
fbstp
cmpsl
mov
popa
jg
xchg
ja
push
dec
cmp
test
add
push
test
xchg
sbb
decl
adc
inc
mov
out
or
lods
loope
jnp
xor
xchg
adc
mov
sbb
adc
mov
push
mov
push
mov
add
aas
xchg
xchg
scas
scas
aaa
test
inc
pop
leave
sbb
mov
das
ret
inc
popa
out
or
or
fbld
ret
icebp
pop
fdivl
adc
nop
lret
jl
movsl
cld
add
sbb
out
call
hlt
lods
mov
lock
mov
xchg
mov
outsl
inc
pop
adcb
dec
sub
sub
adc
push
mov
xor
sbb
pop
adc
sbb
icebp
popa
jg
xor
enter
adc
popa
cmp
pop
insl
out
int3
push
cs
push
pop
ds
and
int
lds
ljmp
fistps
data16
mov
jns
lret
jmp
out
test
lock
in
mov
in
out
pop
sub
pop
movsb
mov
xchg
movsl
mov
sti
mov
mov
pop
popa
add
push
xor
jns
push
xchg
or
arpl
in
adc
mov
sub
ss
dec
imul
xor
or
add
jmp
clc
out
cmpl
cmc
cltd
cli
mov
jp
out
es
push
add
out
fldenv
xorl
call
mov
inc
les
test
add
sub
dec
mov
mov
stos
fwait
sahf
mov
shl
arpl
out
cmc
push
loopne
loope
lods
add
pop
sti
bound
push
pop
ljmp
ljmp
in
repz
mov
push
add
push
cltd
dec
cmp
clc
insl
push
ds
lea
xchg
pop
and
out
iret
sbb
fiadds
cmp
and
add
jo
sbbl
lret
jp
fs
push
xchg
cmpsl
mov
data16
sub
mov
mov
mov
fidivrs
jnp
subb
lods
lcall
jecxz
jecxz
mov
sub
or
add
jo
lret
insb
in
cltd
lcall
dec
out
mov
dec
fldcw
stc
out
inc
sub
or
adc
scas
test
test
sahf
into
test
rclb
sbb
mov
lcall
mov
push
clc
outsb
xor
int
mov
pop
add
je
aam
xchg
ret
fdivrs
loop
cli
pop
lret
dec
mov
notb
jmp
xchg
adc
rcll
in
mov
and
stos
les
lea
ret
out
das
ret
sub
iret
sahf
adc
push
inc
or
pop
pop
cmpl
inc
cmp
imul
repnz
xor
bound
insl
pop
mov
jns
push
loop
xor
add
jp
push
push
ljmp
cs
mov
push
sbb
push
insl
loope
adc
xor
fs
jmp
stos
imul
popf
cmpsl
lcall
movl
faddl
cmp
movq
push
imul
ds
mov
lcall
mov
int
fcoms
mov
push
or
jne
inc
mov
cltd
cmp
sbb
stos
bound
jo
cmp
adc
adc
cli
push
shl
and
jmp
fwait
sti
push
incl
adc
addb
rcr
sub
fdivs
or
aas
adc
repnz
into
pop
or
scas
sub
xchg
sub
pop
inc
sti
call
stc
jge
push
adcl
cli
mov
cmpsl
adc
push
jae
jbe
fwait
dec
sub
sub
adc
jo
push
mov
mov
ljmp
fbstp
mov
mov
lret
lods
ret
xor
inc
cmp
fldln2
dec
and
clc
fs
aaa
outsl
and
loopne
mov
cmp
pop
int
lods
xchg
dec
push
cs
testl
test
mov
or
ds
scas
imul
sbb
lea
inc
add
imul
out
mov
and
aad
and
je
sub
into
sbb
les
movsl
fldt
popa
mov
dec
cltd
xor
sub
iret
xchg
inc
aad
test
fsubs
xor
nop
decb
add
imul
jbe
push
xor
xchg
into
daa
pop
cmpsb
jae
mov
dec
das
sahf
dec
out
js
lahf
sub
xor
in
xchg
cmp
xchg
adc
push
sbb
bound
jecxz
jno
inc
jno
cmp
mov
ficompl
movsl
test
jo
call
xor
adc
in
out
xchg
add
push
inc
imul
mov
xor
ds
jb
je
jle
jb
fdivrl
or
jnp
add
mov
stos
or
xchg
ja
loope
sti
imul
jb
loope
push
mov
sub
mov
mov
fisttpll
add
int
fisttpl
dec
outsb
data16
add
mov
lock
mov
and
nop
jp
mov
arpl
icebp
sti
pop
insl
test
add
jbe
mov
rcl
lret
mov
in
cmp
stc
push
stos
mov
out
imul
imul
inc
push
cmp
sbb
movsl
es
rolb
and
or
mov
cmp
sub
cmp
adc
mov
xchg
insl
cmp
fdiv
lds
inc
adc
or
repz
cmc
fcoml
jb
icebp
addl
shr
pop
jb
mov
imul
scas
jp
jge
arpl
mov
ljmp
mov
ds
or
pop
push
inc
xor
add
inc
inc
lret
lods
hlt
push
outsb
sub
stos
or
cs
adcb
pushf
lret
push
popa
inc
add
aaa
int3
and
jl
cmp
inc
sbb
out
jmp
imul
push
mov
and
arpl
imul
mov
mov
push
pop
scas
mov
sub
pushf
push
jne
sbb
jns
les
rorl
lds
mov
incb
gs
mov
bound
ret
cmp
sub
adc
mov
cld
ret
stos
mov
ret
les
sbb
imul
xchg
pop
jle
xor
cmp
push
inc
aad
hlt
dec
xor
jecxz
mov
push
push
cmc
fdiv
lea
aaa
lock
iret
mov
pop
and
push
test
cmpsb
movsb
enter
shll
jge
jg,pt
roll
lret
adc
ret
sub
xchg
jle
sbb
pop
stos
pop
mov
fs
push
fwait
inc
push
sbb
sub
loopne
mov
in
xor
cmp
testb
and
add
outsl
jbe
inc
pop
sub
adc
cld
mov
aam
lret
sti
shrl
push
movsl
mov
xor
xchg
out
push
mov
daa
mov
jmp
sti
testl
test
rorl
add
sar
mov
adc
mov
clc
add
add
stc
pop
jge
lahf
mov
xor
pop
xchg
stos
or
inc
pop
mov
jge
xor
stos
insl
lret
std
pop
int
push
lds
sbb
cmc
nop
adc
inc
inc
inc
stos
add
jo
xor
add
enter
je
mov
lret
xchg
lds
rorb
xor
pop
xchg
ja
out
add
xchg
cli
xor
push
jp
lret
xor
mov
in
add
jmp
mov
mov
inc
push
int
movsb
in
push
ljmp
outsb
lock
lock
divb
ds
js
arpl
cli
cmp
lcall
sbb
xchg
inc
nop
sbb
les
les
fldcw
and
sbb
imul
mov
or
subl
ljmp
adcb
xchg
bnd
xor
adc
inc
mov
dec
leave
arpl
sarb
adc
adcb
cld
adc
call
push
xlat
push
inc
sub
frndint
lahf
fstp
jns
push
int3
cmpsb
lds
sub
sub
jp
cmpsb
dec
jns
lahf
stos
cmp
and
rolb
add
jb
and
out
cmp
mov
pop
repz
and
outsl
pop
or
or
outsl
sahf
into
push
aam
adc
or
imul
ret
jno
sbb
mov
jns
into
adc
dec
cli
rcl
cmp
dec
subb
fdivrp
in
mov
call
adc
xchg
imul
sti
out
mov
push
sub
test
fcomp
or
mov
insl
dec
mov
dec
fs
push
xchg
loopne
or
insl
fsubs
fwait
xor
mov
jno
ret
mov
cmp
jp
mov
adc
cwtl
test
std
clc
sbb
mov
sbb
or
mov
pop
inc
cmp
mov
push
mov
mov
movsl
adc
fwait
in
pop
push
test
stc
mov
sbb
mov
out
add
adc
hlt
sbb
call
xchg
notl
cli
mov
cmp
sub
add
cli
mov
subb
mov
cmpsb
ret
cmp
inc
cld
adc
rorb
gs
jne
imul
mov
shl
test
inc
shl
push
dec
repz
ret
xchg
outsl
movsb
mov
in
ljmp
mov
iret
loopne
insb
ljmp
mov
adc
xor
arpl
aad
adc
xor
in
or
int3
inc
in
outsb
test
mov
xor
push
mov
jle
xlat
push
andl
movsl
int3
loopne
outsl
fs
adc
test
mov
fstpl
jecxz
iret
cmpsb
popa
cmpsb
das
mov
scas
dec
test
adc
faddp
mov
fsts
and
jle
and
cmp
lret
call
int
pop
mov
fistpl
push
jmp
in
add
dec
push
xor
mov
sub
popa
ss
fiadds
sbb
movsb
in
imulb
adc
in
mov
popf
adc
xchg
add
in
mov
pop
addr16
faddp
jp
mov
cmpsb
movsl
xor
inc
fsubl
call
scas
dec
xor
fdivrs
adc
andb
lds
push
sti
add
jmp
xor
mov
aad
adc
shll
out
adc
popf
xchg
into
pop
add
adc
jnp
call
xor
sbb
loope
pop
inc
jl
nop
sbb
jne
jp
mov
ljmp
dec
xor
popa
loopne
push
loopne
lahf
mov
push
cmp
lret
jae
sbb
shlb
inc
jge
push
push
cmp
int
or
push
test
xchg
je
and
in
add
jg
mov
popa
xchg
call
enter
cmp
pop
cltd
std
lea
aaa
push
into
xchg
push
pushf
in
inc
xor
adc
in
mov
pop
movsl
lret
mov
pop
lds
shl
test
cmp
xor
enter
subl
stos
scas
adc
imul
fisubrl
cmp
popa
in
and
enter
xor
push
dec
adc
clc
leave
fistpll
cmpsb
into
pop
jbe
in
sbb
mov
or
imul
add
xchg
mov
mov
xor
sbb
xor
hlt
xchg
movsb
or
xchg
inc
pop
push
pop
inc
inc
xor
lods
sbb
out
mov
fwait
das
mov
pop
mov
or
xchg
loope
test
mov
adc
jb
jge
push
adc
out
scas
dec
and
out
mov
enter
movsl
dec
pop
fcmovb
lods
cmpsb
das
jp
out
sbb
jnp
repnz
pop
mov
cmp
cmp
adc
dec
mov
add
daa
inc
das
mov
cmp
sbb
mov
shl
sahf
iret
cmp
arpl
and
and
cmpsb
push
inc
jecxz
fs
fisttps
lods
enter
push
mov
les
test
push
add
cmp
test
repz
and
stc
mov
fiadds
mov
xor
aaa
pop
pop
and
adc
aas
scas
jne
dec
mov
cmp
cmpsb
imul
ficoms
out
cltd
jb
sub
mov
adc
xchg
test
xor
pop
imul
add
lods
mov
push
test
xchg
pop
sub
sbb
in
jno
add
cmp
adc
out
mov
dec
test
ret
add
repnz
bound
mov
outsb
dec
shll
add
cmp
pop
movsb
les
fistps
addr16
lahf
xchg
mov
je
sub
test
sub
jae
ds
add
das
push
xor
jns
lahf
add
sahf
cwtl
push
stc
dec
adc
jmp
push
aaa
cmpb
cmp
int
xchg
sbb
pop
xchg
adc
lahf
or
jno
mov
int
push
and
cwtl
test
cmp
std
or
repnz
stc
xchg
pop
ficoms
mov
fcmove
inc
or
xchg
movsb
test
xchg
daa
adc
inc
enter
xor
and
jbe
mov
dec
adc
mov
or
inc
and
lods
insb
sub
jle
xchg
add
push
repz
scas
outsl
xchg
addr16
or
sbb
ss
xlat
test
jb
dec
cmp
mov
shr
scas
inc
imul
rclb
stos
addr16
or
sbb
daa
in
jae
or
jecxz
xchg
cmp
jl
orb
sbb
push
mov
clc
repz
loope
jnp
popa
mov
and
das
test
stos
movsl
ss
popa
add
pop
sti
leave
mov
subb
out
mov
addl
mov
lcall
sub
jecxz
nop
sbb
push
and
cmc
insb
mov
lock
jne
rcl
inc
xor
xchg
mov
dec
pop
aam
push
testb
rcrl
mov
in
out
ljmp
inc
hlt
incl
mov
sub
push
cmp
sub
fstpt
mov
cmp
pop
test
mov
mov
push
adc
jg
fisubrl
jecxz
pop
je
xchg
orb
add
les
hlt
jae
cmp
aaa
cmp
arpl
jno
mov
adc
lret
or
pop
xor
push
movsl
push
jmp
ret
dec
push
mov
jbe
xor
add
mov
call
xchg
pop
dec
nop
test
xchg
push
icebp
push
dec
lods
push
lock
mov
mov
cmp
mov
jle
mov
in
xor
mov
cmpsl
cmp
push
push
test
mov
push
rclb
outsl
xchg
loop
jno
lret
mov
adc
pushf
stos
or
mov
xchg
lret
mov
dec
inc
jp
and
cmp
or
xor
in
ret
lahf
adc
cwtl
ja
inc
push
dec
addr16
rcrl
add
orb
das
mov
arpl
sub
dec
xchg
ja
add
int3
fsubl
cs
js
mov
fdiv
or
andb
dec
jb
xor
lahf
inc
xor
je
clc
aaa
adc
cmp
add
inc
sar
xor
xchg
xor
mov
sub
cwtl
sbb
test
fisttps
mov
les
in
sahf
int
pop
sahf
xchg
adc
leave
stc
xchg
call
mov
lahf
push
lods
aad
jns
ds
xchg
bound
popa
mov
outsl
cmp
out
bnd
mov
jb
pop
pop
xor
cmp
into
push
inc
fmull
xor
aaa
cwtl
adc
cmp
iret
adc
jle
mov
rcrl
add
push
mov
xchg
roll
dec
pop
xchg
lahf
dec
dec
sbb
jb
adc
jno
xchg
pop
mov
cmp
and
mov
pop
ds
jo
mov
fiaddl
enter
cvtps2pi
mov
rcl
enter
es
daa
mov
cli
lcall
mov
cmpsl
cmp
xchg
mov
dec
cmpsl
ffree
sbb
push
out
fwait
dec
xchg
mov
add
mov
int
inc
jo
mov
xchg
clc
mov
push
ss
clc
arpl
add
xchg
pop
mov
mov
push
sbb
or
mov
ja
sub
pop
rolb
mov
add
addr16
push
out
repnz
push
push
mov
jne
imul
mov
mov
mov
xlat
inc
push
mov
das
addb
and
and
push
or
xchg
out
inc
ret
dec
xor
int3
sub
cmp
lods
aad
jp
push
outsb
sbb
xor
out
mov
out
inc
dec
or
movb
cmp
scas
sti
lret
xchg
mov
in
fcomps
and
pop
mov
dec
mov
sti
mov
imul
nop
int
or
cmp
loopne
sbb
jno
testl
int3
outsl
mov
add
outsl
stc
xchg
xchg
and
mov
fmul
adc
inc
mov
or
das
pop
into
mov
pushf
rclb
or
test
fs
or
xor
imul
lods
clc
pop
jbe
mov
out
xchg
gs
cli
je
mov
ja
add
xchg
sbb
in
cli
sbb
xlat
pop
or
clc
xor
cmp
in
mov
shlb
or
pop
add
push
sub
leave
js
pop
out
xor
test
ss
inc
sub
or
popf
clc
sbb
jl
imul
in
mov
arpl
adc
mov
xchg
or
or
lock
adc
xor
leave
inc
cmp
repz
jle
xchg
or
mov
mov
outsb
push
outsb
push
leave
add
jge
iret
addr16
mov
cli
mov
insl
mov
sub
push
inc
fdiv
ds
lock
xchg
call
dec
push
jg
jge
movsl
jb
imul
and
mov
or
xchg
nop
xchg
dec
imull
inc
jmp
add
data16
sbb
es
sub
xchg
mov
push
sbb
stc
jno
mov
mov
mov
fcmovu
daa
jo
sub
mov
cli
aam
test
xor
cmp
cmp
cmp
push
je
ficoml
push
nop
pop
idiv
popa
pop
sub
loope
jge
push
push
es
daa
cmpsb
fcoml
add
xorb
sbb
xchg
daa
pop
jecxz
xor
jb
sahf
inc
mov
nop
aas
mov
in
inc
xor
mov
pop
push
pop
pop
repnz
jecxz
ja
add
popa
lds
out
dec
and
xchg
cld
or
mov
or
shll
in
stc
push
cltd
cmp
in
xor
enter
lret
pop
je
stos
push
ret
mov
inc
daa
ret
xlat
mov
mov
notl
jl
add
inc
inc
push
dec
mov
pop
pop
adc
adc
out
ljmp
inc
in
or
jo
test
hlt
stos
inc
cs
pop
fidivrl
lcall
mov
mov
push
mov
and
insb
and
push
xchg
xchg
jb
mov
pop
pop
or
xor
daa
rolb
cmp
or
movsb
out
repnz
mov
aad
nop
mov
pop
sub
rolb
mov
addr16
fidivl
mov
repz
and
shr
inc
fbld
inc
rorb
mov
inc
enter
in
xchg
jne
xor
les
adc
mov
filds
cmp
movsb
mov
mov
repnz
fbld
fidivs
loope
fstps
call
sbb
xorb
jle
push
adc
out
ljmp
mov
incl
mov
lods
xchg
movsb
cmp
mov
sti
pop
ds
fwait
mov
mov
out
mov
fldl
cmpsb
xor
sbb
xor
sbb
sub
shl
mov
xchg
cmp
push
xor
push
push
cmp
shl
xlat
jne
test
push
shlb
pop
lods
xor
and
or
outsl
xor
or
mov
mov
mov
jo
shl
or
mov
and
cmp
cli
out
add
or
inc
mov
push
mov
xchg
addr16
clc
ret
or
sarl
outsl
scas
hlt
addr16
fstpl
push
enter
fcoml
negl
ja
sbb
pushf
data16
adc
pusha
sub
xchg
pop
insl
add
popa
aaa
cmpsb
mov
gs
cmpsb
mov
mov
leave
mov
dec
nop
mov
nop
pop
ret
mov
notb
jge
xchg
push
cmp
adc
movsb
lods
add
fwait
sti
lret
lret
jecxz
lods
sub
int
fimuls
clc
mov
ja
mov
pop
push
xor
adc
mov
divb
ds
popa
push
xor
or
test
shrb
addl
mov
push
xor
pop
cwtl
push
cmc
inc
adc
jb
icebp
cmpsl
in
mov
popa
scas
enter
and
add
cmpl
fiaddl
es
leave
sub
sub
test
sbb
iret
dec
imul
and
pop
in
outsl
ret
test
jae
test
outsl
dec
xchg
add
cli
mov
test
idivb
std
cmp
fcmovnbe
inc
test
jle
pop
jmp
rorb
ja
test
or
jo
and
in
in
out
test
insl
xor
nop
out
jecxz
cmp
enter
mov
cmp
sub
add
mov
sub
add
inc
jle
inc
jae
add
push
mov
lea
jns
lret
jnp
pop
add
or
lret
cmp
test
and
mov
jle
aaa
stos
lahf
aaa
push
sahf
and
stc
pop
jge
and
adc
jge
cli
jno
into
xchg
xchg
mov
sarl
or
fs
ds
out
and
dec
inc
fwait
mov
call
sub
push
cs
xchg
int3
fmulp
dec
test
push
jno
cmp
push
jae
push
mov
xchg
orb
stos
cld
out
xor
jl
mov
dec
and
adc
fwait
xor
inc
mov
cmp
roll
xor
dec
xchg
adc
out
data16
push
jmp
xor
or
inc
and
dec
fld
mov
mov
sub
in
cli
mov
inc
sbb
pop
aam
xor
pop
repnz
adc
imul
ds
jp
ficoml
add
stos
jns
insb
mov
lock
ja
mov
xchg
stos
sub
xlat
es
xor
push
es
xchg
inc
loop
jge
mov
mov
mov
js
cmp
or
daa
jge
ja
push
cmpsl
sub
outsb
insb
and
push
js
xor
xchg
mov
popf
pop
xchg
test
mov
cmc
fdivrl
inc
psubd
int
sbb
push
rcl
dec
push
stc
iret
aam
iret
push
mov
cld
cmpsl
sbb
fcomps
jg
or
ljmp
popa
iret
call
jb
mov
mov
pop
sbb
xor
sub
into
lcall
jl
inc
rcll
test
jnp
repnz
das
cld
daa
cmp
rep
insl
into
leave
xor
je
mov
jb
or
push
repz
sbb
mov
and
popf
call
mov
iret
pop
js
lods
sbb
mov
lea
cmp
mov
setae
and
insb
add
outsl
pop
dec
mov
mov
jle
lock
dec
data16
cmp
sub
repnz
push
imul
insb
sub
lret
imul
aad
out
pop
cmpsl
lcall
std
lret
cmp
pushw
cmp
mov
jne
or
adc
mov
mov
gs
daa
pop
popf
sbbb
mov
pop
testb
lods
test
cmpsl
pop
xchg
jbe
or
push
jp
int
pusha
push
cmc
mov
lea
iret
cmp
in
bound
push
cmp
cld
bound
mov
in
mov
mov
mov
cld
mov
loop
popf
cmp
jp
mov
jge
pop
xor
addr16
sbb
sub
push
dec
and
fst
cmpl
out
pop
sub
sti
inc
push
movsl
andl
mov
or
jnp
mov
sbb
iret
xlat
hlt
fbld
outsl
cs
cli
push
jne
lods
mov
pop
leave
ror
mov
gs
xor
jmp
sbbb
dec
std
sbb
mov
pusha
scas
dec
imul
sbb
inc
inc
or
mov
jecxz
xchg
lock
mov
je
ljmp
push
xchg
cmp
inc
jo
rcr
jno
pop
cmp
sbb
mov
iret
sub
pushf
dec
jnp
mov
jmp
into
dec
out
sub
je
jae
dec
xor
andl
inc
cmp
and
loopne
push
ds
pop
inc
mov
movsl
sbb
je
push
scas
dec
xor
inc
addl
jne
test
push
dec
add
inc
sbb
in
mov
dec
roll
xor
push
hlt
andl
jae
les
adc
daa
nop
xor
jb
jbe
add
xorb
mov
and
in
mov
mov
xchg
inc
jo
js
jno
in
fidivrl
cmp
push
outsl
xor
inc
out
jl
pop
mov
addb
and
xor
dec
fcompl
cmp
pop
fistpl
inc
dec
test
mov
movsb
pushf
inc
pop
pop
movb
mov
outsl
stos
mov
mov
mov
lods
shrb
cmp
pop
add
stc
xor
ss
inc
mov
lcall
pusha
lods
lock
adc
in
cmp
loop
sti
shlb
pop
loopne
out
hlt
dec
inc
or
sti
jle
shr
cld
jg
test
sub
ljmp
fsubl
shll
fmull
or
adc
mov
ja
mov
mov
movsl
or
push
cmp
sbb
stos
adc
adc
bound
insl
jae
clc
and
xor
or
test
jge
aad
int3
popf
pop
out
adc
mov
or
adc
mov
cmp
push
cli
or
sub
fadd
aad
sub
mov
mov
dec
jmp
rcrl
rclb
stc
or
add
lret
mov
test
lret
pop
decl
repnz
lret
jns
mov
lds
adc
sbbb
pop
movsl
sub
icebp
and
jbe
inc
popl
add
lahf
add
aaa
loopne
pxor
jo
shll
hlt
lea
out
testl
xor
adc
xor
sbb
push
inc
dec
leave
test
cld
loop
stc
inc
xchg
cmp
sub
sbb
mov
and
cmpsb
rcll
xchg
shll
or
mov
adc
repnz
fs
add
xor
push
jg
ret
push
mov
mov
aad
outsb
or
xor
xchg
xchg
mov
adc
in
scas
inc
lret
leave
je
das
sbb
cs
gs
popa
jb
hlt
faddl
xor
std
pop
push
sbb
push
frstor
pop
out
icebp
jo
pusha
mov
and
sub
sub
jae
push
pop
jb
or
enter
adc
stos
xchg
pop
in
fnstsw
fwait
rorb
out
ja
dec
fisttpl
das
fistpll
pop
xchg
mov
fwait
inc
orl
xor
mov
lcall
cli
pop
sbb
cmpsl
adc
in
int3
es
sub
imul
cmpsb
imul
sub
aam
nop
inc
sbb
xchg
and
lret
movsb
cmpsl
mov
cli
fdivrs
call
add
cld
mov
into
lahf
adc
xor
fisubl
fiadds
lock
xchg
shll
adc
add
negb
out
icebp
adcb
jl
aas
lcallw
cmp
cmc
cmc
pop
cmpsb
push
out
ffree
leave
stc
ljmp
imul
xchg
dec
out
mov
cmp
jmp
adc
sub
xchg
nop
stos
fistl
insb
sbb
xor
icebp
popf
fadds
enter
or
lods
pop
pushf
lock
push
xchg
add
cmp
repnz
mov
jae
lock
push
xor
pop
jo
push
jno
push
ret
lret
rcll
outsb
push
cmp
mov
cmp
adc
popf
sti
xchg
jbe
fadd
dec
mov
sub
rolb
add
xchg
shll
insb
sbb
mov
xchg
sbb
dec
sbb
xor
int
jo
jg
push
push
push
inc
adc
mov
shrl
into
sbb
sub
jno
xchg
and
lret
mov
shr
and
pop
repnz
ret
das
fstpt
popf
sub
dec
in
dec
cwtl
outsb
add
jne
daa
subl
push
cli
fldl
insl
add
lods
mov
jo
test
mov
aad
cmp
lcall
rcll
and
push
mov
mov
xchg
jp
cmpl
cmpsb
cmp
aas
add
or
stos
fs
stc
add
sti
cmp
cmc
lea
mov
sahf
mov
cs
enter
dec
insl
aas
pop
push
sahf
lods
in
jmp
mov
sbb
lods
jp
js
iret
mov
mov
adc
xchg
sub
ds
adcl
mov
mov
xorl
shl
daa
test
xchg
stc
clc
ret
jae
dec
push
in
cmp
test
mov
mov
cltd
cmpsb
ret
push
data16
cmp
cmp
lret
jecxz
int
jle
pop
repz
xor
mov
pop
insl
add
test
add
dec
inc
daa
into
lahf
sbb
jae
xchg
sbb
mov
lods
outsl
pop
pop
rorb
std
xor
sbb
jecxz
pop
jo
push
lds
in
push
movsl
das
pop
inc
nop
adcl
aad
push
sub
jo
test
cld
mov
pop
jg
adc
jge
fsts
cwtl
pop
test
and
pop
lret
cmpsl
pop
mov
aas
mov
adc
std
lcall
ret
mov
or
loopne
iret
pop
push
into
push
mov
xor
pop
ret
adc
lock
mov
mov
flds
adc
jne
shl
dec
sbb
and
mov
sub
gs
dec
jmp
lcall
lds
ret
in
sub
jmp
xor
cmpsb
pop
mov
stos
lahf
push
mov
xchg
jnp
add
imull
sub
icebp
xorb
sub
sub
shll
lds
or
mov
cmp
jnp
fidivrs
pop
repz
xlat
ret
ret
clc
fwait
psubusw
test
es
pop
inc
or
sub
adc
scas
int3
cmpsl
push
add
aam
xor
in
adc
jae
aaa
jge
mov
out
add
ss
or
or
push
cltd
cltd
stos
in
jmp
cltd
dec
scas
ss
out
mov
lods
loope
repnz
adc
jns
imul
int
daa
add
faddl
outsb
fistl
adc
add
and
adc
imul
call
shlb
dec
loop
inc
cmc
call
jp
enter
shlb
dec
ret
test
push
dec
jmp
jmp
sub
xchg
fs
or
jo
adc
pop
sub
push
jecxz
leave
lret
sbb
xchg
jbe
xor
adc
mov
out
mov
repz
jmp
je
pop
fnsave
out
or
repz
sub
mov
arpl
adc
adc
jbe
mov
xor
cmpsb
push
mov
shlb
iret
mov
test
fsts
jl
or
xor
nop
fadds
dec
mov
out
fidivrl
ss
sbb
push
dec
fidivl
inc
inc
in
or
and
sub
push
mov
popa
sub
popf
dec
mov
inc
lock
mov
xchg
fiadds
jnp
sub
mov
dec
out
loope
pop
out
test
scas
mov
test
jle
jae
sar
cltd
clc
divb
add
dec
aam
lock
lods
push
out
xchg
rcrb
ss
and
js
in
and
cmp
icebp
outsb
pop
pop
add
jl
je
dec
lahf
lods
cld
je
xchg
in
iret
mov
imul
gs
ljmp
sahf
fstp
mov
in
ja
addr16
lcall
adc
mov
adc
xchg
jbe
addr16
mov
js
scas
xor
pop
ret
ret
dec
shufps
pop
lds
adc
sbb
pushf
mov
enter
xchg
pop
out
out
add
out
push
mov
je
imul
out
jae
movsb
mov
inc
out
out
add
clc
mov
sub
sub
lock
push
sbb
mov
push
mov
push
jecxz
decb
aas
in
pop
dec
sbb
dec
mov
cmpsb
in
push
xor
ret
out
gs
and
cmpl
adc
test
push
push
repz
and
shll
push
push
movsl
aas
sahf
jge
pop
sahf
inc
xlat
arpl
mov
push
cmp
jmp
sub
pop
aad
xchg
stos
cltd
mov
mov
lods
add
jns
inc
adc
mov
mov
loop
mov
mov
jge
mov
and
in
aad
lock
or
adc
shr
lods
push
repnz
ret
jmp
insl
sbb
mov
imul
jp
sbb
mov
xchg
sbbl
stc
pushf
fs
and
cmp
or
xchg
icebp
adc
xor
pushf
mov
mov
popa
adc
stos
pop
outsb
sub
mov
add
ja
mov
sbb
frstor
jecxz
loopne
push
adc
and
dec
dec
pop
mov
pop
dec
imul
stos
bound
cltd
mov
push
xchg
xchg
and
pop
xor
js
adc
jge
test
sub
push
jae
push
loopne
je
add
dec
daa
aam
dec
test
mov
cmc
repnz
movsl
sbb
sbb
xchg
shl
cmp
adc
dec
ficoms
mov
cmp
lods
cmpsb
pop
icebp
adc
shll
jmp
fldenv
scas
arpl
mov
cmp
fld
dec
and
jae
jae
or
jno
out
and
ret
jge
mov
or
in
xor
and
push
pop
add
out
mov
mov
out
xchg
sub
cmpsl
xchg
sbb
push
in
enter
push
pop
pop
loopne
sub
das
pushf
call
jae
add
repz
fstpt
pop
xorb
inc
jmp
dec
aas
push
add
cmp
shrl
lea
dec
outsb
adc
fcmove
call
mov
cmp
bound
xlat
add
mov
hlt
xchg
pop
test
mov
dec
int
jnp
icebp
sbb
jno
mov
ret
test
mov
gs
sub
cmp
mov
add
jp
jno
imul
fcoml
lods
lea
sub
mov
add
rorl
rcr
arpl
jno
arpl
mov
and
cltd
sbb
inc
aas
fildl
pop
and
push
adc
or
mov
cmpsb
xchg
lods
in
jp
loope
rolb
jp
gs
dec
mov
out
jno
mov
push
mov
out
or
in
call
mov
jb
ja
es
les
popa
sbb
dec
jbe
adc
or
rcrb
xor
les
jbe
lahf
ljmp
pop
pushl
aad
sub
aad
cmp
test
sub
lds
adc
enter
andl
lods
cmpb
fistpll
movsl
aam
or
cltd
shl
movsl
data16
pop
cmp
dec
push
fldenv
pop
cmp
inc
mov
mov
mov
jb
add
cld
js
data16
shrb
shrb
push
jecxz
jge
push
add
in
adc
push
lock
add
and
hlt
dec
dec
ret
arpl
mov
xchg
stos
cmp
jo
sbb
pop
mov
outsb
xlat
push
std
in
xchg
add
jle
jns
push
hlt
sub
sub
xchg
push
adc
ret
lea
xchg
xor
shr
repz
movsl
lods
les
movsl
sbb
sub
jecxz
xor
jae
adc
inc
add
clc
mov
imul
arpl
aas
lds
push
push
mov
in
js
xchg
or
lcall
cmp
stos
mov
shrb
mov
mov
lcall
mov
xchg
scas
dec
jecxz
mov
sahf
cmp
repz
xchg
pop
jle
test
push
xchg
xchg
std
lahf
shlb
sub
cmc
xchg
or
xor
stc
test
and
loop
jge
cmpsb
push
pusha
lahf
add
push
mov
sarb
jae
mov
pop
jg,pn
scas
or
xchg
ror
jecxz
sti
pop
fmul
adc
push
stc
aaa
scas
mov
sbb
pop
and
or
fs
notb
mov
js
xor
cmp
mov
jg
pop
int
jo
xchg
mov
cwtl
push
pop
gs
iret
inc
add
lods
lods
cli
je
sbb
out
mov
imul
cmp
imul
jne
mov
or
sub
add
pop
adc
popa
leave
je
sbb
sub
lods
push
mov
xchg
cmpb
cli
jge
jle
push
movsb
dec
ljmp
test
add
sbb
pop
push
aam
pop
fs
and
in
cli
jb
js
xor
push
jmp
push
add
pop
roll
jb
icebp
push
sarl
into
mov
xchg
clc
push
add
jecxz
nop
ds
gs
cmp
push
daa
fdivrs
mov
sahf
push
test
incl
add
ljmp
ror
add
pusha
mov
lock
xlat
jns
cmp
dec
iret
jle
lea
enter
jnp
push
outsl
pop
xchg
mov
fimull
fsubrs
mov
jbe
jge
cwtl
cwtl
mov
in
movsl
stc
call
insb
scas
fsts
cwtl
loope
ret
enter
sbb
mov
xor
mov
inc
jo
inc
xchg
mov
and
lcall
jbe
sub
jns
pop
sub
out
cmp
dec
mov
in
sbb
push
ss
popf
sbb
and
cmp
in
dec
fists
sub
fwait
ja
push
jae
stos
lea
outsl
cmpl
pop
in
fs
mov
mov
add
mov
test
dec
cmp
rol
xchg
scas
push
or
enter
shr
xor
push
jbe
xchg
mov
enterw
dec
lret
add
mov
adc
les
ret
jg
mov
test
orb
sbb
mov
test
scas
mov
shrl
icebp
rcl
sbb
push
mov
xor
pop
sub
inc
pop
cmp
and
insb
in
test
rclb
mov
mov
insl
sbb
scas
add
mov
out
daa
jg
mov
sub
ret
cltd
xchg
inc
add
outsl
jo
xchg
pop
xchg
jbe
pop
jno
roll
and
adc
lret
std
xchg
jl
fstl
adc
adc
and
mov
cmp
pop
out
and
imul
out
and
xlat
mov
leave
subb
push
out
sbb
sub
push
imul
and
push
inc
cs
dec
cmp
pop
sub
pop
jge
push
or
lahf
ret
pop
add
sub
jmp
fiadds
addr16
and
push
loop
cmp
and
cltd
orl
test
inc
sub
jmp
mov
lock
sub
sub
jp
adc
and
test
ret
xorl
jnp
jge
aaa
and
adc
jge
icebp
xchg
push
push
pop
ja
dec
xchg
push
lahf
aam
xor
add
sahf
push
addr16
mov
inc
fmull
cli
imul
xlat
fildl
out
ds
and
sub
cld
inc
xchg
xor
cs
xchg
xchg
jmp
add
lahf
cmp
dec
test
imul
enter
add
add
std
pop
je
pop
xchg
js
jnp
and
sub
iret
mov
ds
inc
dec
or
sbb
leave
push
fstpt
mov
movsl
nop
mov
leave
jae
lds
dec
lcall
mov
movsl
push
inc
pop
in
mov
loopne
and
and
sti
inc
mov
add
push
add
cs
movsl
add
test
and
or
mov
cmp
push
pop
lds
mov
xchg
sbb
sahf
pop
int
push
cltd
pop
jmp
test
mov
pop
xchg
push
rorl
push
fsubrs
pushf
or
je
add
or
dec
mov
adc
sub
pop
pushf
nop
jnp
data16
sub
cmpsb
adc
loope
sti
add
push
rcrl
loope
jl
sbb
je
rcll
cmp
xchg
jnp
ljmp
loop
out
insb
jno
push
sahf
test
sbb
adc
add
xchg
pop
inc
mov
mov
cmpsb
nop
sarl
lods
scas
dec
or
mov
iret
mov
jno
mov
ds
pop
mov
push
jmp
mov
mulps
xor
out
and
hlt
add
js
dec
and
mov
scas
and
cli
add
push
xlat
pop
sub
adc
push
mov
push
sub
push
adc
mov
cmp
out
pusha
jl
jg
dec
dec
mov
cmp
imul
ss
xchg
and
scas
pop
ja
push
sub
and
sbb
mov
inc
cmp
test
sbb
divb
xchg
dec
aas
mov
jbe
sbb
leave
js
test
pop
push
or
xor
addr16
test
dec
sub
test
add
loope
sbb
or
fwait
or
rorl
mov
cmp
pusha
adc
lds
andl
add
shl
int
jecxz
mov
push
in
sbb
jnp
push
push
insl
xor
dec
xor
jo
outsb
popa
xchg
inc
xchg
movsl
pusha
adcl
in
stc
mull
es
mov
and
adcl
or
roll
cmc
mov
jmp
ret
aad
cmp
repnz
ja
iret
aas
clc
inc
push
mov
movsl
sub
pop
js
cmc
data16
and
pop
adc
adc
pusha
mov
dec
xor
inc
xor
sub
popa
mov
scas
negb
out
int3
sbb
cmp
sub
cmp
lods
mov
jmp
cld
push
pusha
mov
in
cs
orb
std
mov
test
aas
movaps
xchg
push
pop
inc
fdivs
lret
int
xchg
cmp
mov
sbb
cmp
stos
leave
ror
mov
push
cmc
mov
sub
mov
push
adc
mov
out
std
divl
push
addr16
and
inc
mov
lods
sub
push
push
xchg
push
cs
xchg
mov
lods
cwtl
mov
mov
cmp
mov
les
and
aas
stos
pop
cmp
movsl
dec
cltd
es
push
sub
adc
jb
xchg
add
in
aaa
cli
inc
dec
add
jp
ret
mov
cltd
jp,pt
cwtl
jnp
pop
push
push
or
mov
push
adc
les
scas
lahf
cli
arpl
xchg
lea
xchg
lret
xchg
test
inc
push
mov
mov
lods
sahf
inc
add
pop
and
scas
xchg
data16
jge
lds
leave
sub
cmc
sbb
xchg
cmp
ror
push
mov
push
out
popa
js
insb
sbb
clc
insb
shrb
jne
push
icebp
or
or
pop
inc
pop
dec
inc
inc
sbb
xchg
pop
and
mov
jbe
lods
and
lahf
sub
mov
mov
push
adc
mov
data16
cs
bts
cmc
lock
mov
gs
stc
rcll
add
test
xchg
ljmp
dec
mov
mov
mul
cltd
xorl
jb
in
ret
fs
dec
insb
icebp
dec
jns
inc
jnp
fsub
pop
or
push
mov
icebp
inc
leave
add
cmp
mov
sbb
add
stos
outsb
cmpsb
inc
mov
mov
or
mov
jge
dec
fcmovnu
xor
shll
jg
daa
mov
pop
cwtl
ficoms
ja
adc
pop
pop
mov
adc
jbe
and
sub
push
jle
add
fimull
cmp
push
icebp
in
mov
rcr
add
cmc
mov
daa
jo
or
loope
call
cmp
std
outsl
loop
push
add
outsb
cmpsb
sarb
sbb
or
inc
push
mov
and
scas
inc
subl
xchg
pop
sbb
leave
push
mov
mov
nop
jbe
cli
inc
push
push
mov
aam
sbb
out
imulb
nop
mov
outsl
push
cmp
jp
repnz
sub
xchg
pop
jmp
pop
enter
push
dec
test
cmp
push
xchg
cmp
out
pusha
fs
jecxz
or
pop
movsb
sub
lea
pop
test
aam
pop
pop
sbb
pop
popa
cmp
jnp
popa
adc
mov
mov
call
lahf
mov
int3
test
cmp
jbe
call
cmpsl
mov
xchg
inc
stos
push
insl
cld
int
inc
shrb
cmp
ds
or
jmp
cmp
rorl
push
jecxz
inc
mov
xchg
adc
and
mov
addr16
outsl
pushl
leave
push
std
pop
pop
pop
xchg
dec
add
xchg
int3
xchg
cmp
scas
dec
fstps
cmp
addr16
insb
idivb
adc
jg
jno
lahf
mov
fsub
jge
and
test
popf
or
sbb
adc
leave
dec
cmp
mov
or
push
or
rolb
cmp
sti
stos
mov
jge
cli
mov
cmp
push
add
and
push
cmp
outsl
jp
adc
ss
dec
std
bound
scas
pop
push
scas
movb
and
xor
dec
sbb
xor
xchg
popl
in
repnz
fcompl
xchg
sahf
jl
pop
inc
out
cmpsb
sarb
push
lret
and
jbe
xchg
jmp
hlt
mov
jne
mov
insb
hlt
inc
inc
fs
cmp
push
aas
add
dec
xchg
movsl
add
in
jne
cltd
push
mov
inc
mov
pop
repnz
pop
repz
lods
add
pop
xor
jg
xchg
lcall
mov
jp
mov
pop
jge
fst
adc
and
movsb
inc
add
jge
cmp
iret
push
cmpsb
rorl
sbb
rcrl
test
call
jb
repnz
stc
mov
inc
fsts
fsubl
xor
addr16
push
daa
dec
fsubrs
xor
lods
lcall
lods
ret
cmp
and
jnp
push
or
add
movsl
add
jmp
in
roll
das
dec
repz
xor
fmuls
and
pop
xor
and
fcmovnb
or
jno
jns
ret
pop
xor
ss
mov
std
cmpsl
jae
adc
stos
add
mov
push
sahf
xor
mov
mov
inc
mov
push
pop
jmp
sub
mov
pop
imul
cs
sbb
in
int
lret
cwtl
pmulhuw
xchg
jno
and
or
rcrb
xorl
into
fwait
mov
mov
or
xchg
inc
stos
jb
in
scas
fsubs
cmp
test
jp
lcall
mov
fsubs
dec
xor
and
hlt
adc
add
xchg
pop
fisttpl
push
sub
test
jo
xor
mov
testb
mov
cmp
fdivs
divl
popa
jge
cltd
stc
xor
jne
adc
arpl
mov
push
mov
fcmovbe
rolb
or
sub
divl
testb
sahf
jno
inc
idivb
iret
imul
pushf
xor
out
xchg
in
bound
push
push
sub
scas
mov
sbb
and
push
lock
pop
bnd
mov
fisttpll
xchg
movsb
sub
pushf
outsl
push
sub
jb
and
sub
jle
mov
aam
addb
popa
lock
pusha
repz
push
div
push
mov
test
and
pop
pop
mov
lods
addr16
xchg
mov
mov
mov
ljmp
orb
or
mov
push
out
dec
mov
mov
lods
add
xor
in
out
mov
notb
mov
jo
aam
faddp
sub
xchg
fisubs
les
stc
jg
mov
pop
fnstenv
jle
in
xchg
mov
loope
leave
pop
mov
sbb
jns
sarl
pop
cmp
xchg
aad
jp
test
push
inc
inc
out
push
jno
pop
add
rolb
xchg
mov
daa
and
pop
js
rolb
mov
sti
ret
push
mov
jne
jle
outsl
lret
shrl
or
minps
jns
outsb
movsl
sub
inc
gs
cmp
lods
in
inc
cmp
jbe
test
sub
push
add
in
filds
in
popf
mov
and
xor
imul
sbb
loopne
aam
arpl
cmp
sub
dec
xor
and
shl
movsl
lods
outsb
sub
ss
das
in
mov
ja
add
mov
in
gs
aad
loope
or
cmpsl
mov
rolb
sub
jmp
cmpsl
push
mov
push
add
mov
dec
movsl
in
and
sub
pop
and
fstps
ret
dec
jb
aaa
hlt
adc
fsubs
aad
sti
mov
test
hlt
shrb
sub
fisubrl
test
push
pushf
jg
mov
or
mov
lds
pop
in
loopne
fs
out
cli
mov
insb
dec
int3
imul
subb
sbb
xor
and
das
in
sbb
in
cmpsl
mull
cmp
fistps
mov
push
push
mov
bound
mov
out
pusha
in
pop
stos
fists
pop
ljmp
dec
lret
mov
xor
or
pop
or
ret
lcall
ficoml
popa
pop
add
repnz
pop
into
out
jmp
fmuls
and
sub
jo
movsl
jp
arpl
pushf
rcl
adc
out
hlt
insb
xchg
iret
inc
out
aad
jl
inc
aas
in
inc
fs
test
outsb
lods
push
xor
xor
lcall
xchg
test
shr
or
fiaddl
pop
sbb
repnz
and
mov
and
sbb
aaa
gs
in
mov
sub
cltd
in
add
cmc
cmp
iret
aas
mov
xchg
int3
leave
push
adc
testl
outsb
add
fs
cmp
pop
inc
jle
arpl
fxch
inc
adc
cmpsb
lret
xor
arpl
jmp
rolb
adc
rolb
cmp
lea
sub
jbe
int
int
hlt
sub
mov
cmp
imul
or
orl
dec
aad
inc
cmc
call
jge
popa
out
xchg
ficoml
enter
mov
inc
push
pop
cltd
sbb
movsb
aam
daa
and
in
je
and
fistps
pusha
rclb
stos
adc
and
lds
xor
pop
xlat
mov
inc
fstl
imulb
add
inc
outsl
lret
shll
jne
add
sub
or
pop
dec
inc
cld
jnp
pop
int
pop
mov
mov
ucomiss
insl
daa
sub
and
cmp
pop
jge
dec
cmc
into
pusha
out
icebp
movsb
sub
sbb
mov
jae
push
loope
push
fsts
dec
jnp
xor
cs
adc
clc
cs
rolb
inc
adc
adc
or
repnz
push
jp
mov
jge
fsub
es
shlb
mov
pushf
add
inc
and
negb
mov
jb
dec
or
push
andl
ljmp
jns
ds
pop
push
notb
cltd
jmp
fisttpl
push
sbb
xchg
inc
jl
adc
fsubr
inc
xchg
mov
je
es
cmp
cmp
ss
nop
add
dec
ljmp
je
scas
and
nop
data16
dec
inc
loope
xor
testl
out
test
and
movsb
or
lds
push
sub
push
inc
mov
push
jns
xchg
cwtl
icebp
jg
or
xor
jecxz
cltd
or
outsb
dec
ljmp
add
fs
jle
mov
sbb
dec
loopne
test
and
jp
or
mov
adc
pop
in
stos
xchg
ja
mov
ficompl
sti
mov
sbb
or
xor
cmp
inc
mov
inc
jae
call
mov
or
xchg
sbb
push
mov
leave
test
lods
ss
cmp
scas
pop
cld
jp
push
ljmp
xchg
mov
mov
lock
sub
xchg
jmp
shlb
sbb
fisttpll
test
ret
test
in
test
into
pusha
jge
cmp
mov
pop
cld
push
sub
push
xor
and
aad
jb
pop
fs
fiaddl
loopne
lcall
push
loope
adc
lods
dec
cmp
adc
aas
xchg
mov
and
mov
jmp
and
pop
jp
out
icebp
sub
sbb
jbe
pop
dec
dec
mov
sub
jmp
cmp
pop
or
out
sbb
push
lea
test
loop
out
push
add
rorb
xchg
adc
test
aam
jecxz
add
inc
cmp
outsb
lods
xor
icebp
pushf
iret
movsl
sub
imul
fbld
sub
and
loope
mull
lret
jno
cmp
sbbl
mov
xchg
mov
add
adcb
and
into
sub
pop
test
xor
aam
pushf
rcrl
hlt
pop
adc
sbb
icebp
sbb
in
jmp
or
dec
inc
jmp
push
sub
push
add
cs
jne
mov
popf
fstps
pop
das
adc
add
out
dec
test
sub
cmc
mov
in
lret
and
mov
mov
popf
into
pop
std
fstl
push
ficoml
mov
sbb
call
xlat
push
pop
pop
out
mov
xorl
out
cli
mov
jbe
in
cltd
in
shll
in
push
jle
pop
push
inc
pop
jg
ret
xor
cwtl
mov
mov
lea
pop
in
bound
xor
gs
imul
xchg
test
outsb
push
hlt
insb
ljmp
jle
pop
std
dec
sbb
insl
push
es
cmpb
mov
aaa
bnd
fwait
mov
icebp
aad
and
subb
jno
add
addr16
pop
cmp
sbb
jno
xor
mov
mov
xor
loope
xchg
imul
adc
push
in
pop
mov
adc
aas
adc
loope
les
ss
popf
push
out
pop
cld
stos
and
mov
jl
sahf
sbb
add
sbb
lods
bound
into
faddp
push
mov
ret
popa
lea
test
scas
adc
add
xor
mov
fwait
mov
sub
mov
mov
scas
push
xchg
push
xchg
popl
data16
push
cmp
sub
out
dec
inc
mov
or
xchg
out
aas
aaa
jne
pop
add
mov
mov
mov
jmp
std
inc
lods
cmpsb
adc
pop
daa
add
jae
cmp
or
xchg
pop
or
mov
pop
out
aad
jmp
out
or
and
pop
pop
cli
cld
sub
push
xchg
test
es
pop
jo
pushf
je
mov
inc
add
nop
jne
mov
cli
mov
scas
cmp
xor
adc
inc
or
dec
jg
scas
fdecstp
mov
xchg
jp
mov
push
sub
push
aad
nop
lock
scas
movsl
stos
lret
ss
and
pop
jle
gs
aad
xchg
inc
jmp
fdivrl
push
daa
sbb
aaa
sub
pop
add
adc
ds
repz
and
adc
insb
lret
dec
push
sbb
mov
mov
inc
stc
or
cmpb
ds
aad
das
and
std
jecxz
dec
cmp
push
sbb
sar
or
pop
out
lods
mov
push
pushf
or
add
mov
push
or
insb
pop
lds
jne
out
pop
xchg
dec
mov
jle
cmp
mov
jns
retw
idivb
lds
mov
hlt
or
adc
xchg
sub
test
pusha
jne
js
popa
sub
aam
xlat
into
arpl
xchg
push
cmpsl
adc
and
push
push
imul
dec
adc
jno
and
mov
push
push
xorl
and
mov
fidivl
pop
sbb
xor
adc
mov
push
pop
movsl
add
test
stos
leave
xor
cmpsb
pop
mov
adc
loope
movb
or
inc
lret
shll
ret
iret
das
cmp
sbb
mov
int3
enter
movsl
cs
rorl
std
nop
stos
xchg
sub
jne
jle
les
or
int
andb
jbe
sbb
dec
mov
or
loopne
cmpl
adc
lcall
fmul
xchg
and
cmp
push
fsts
in
out
addr16
rol
cmp
xchg
popf
or
hlt
jae
nop
es
and
pushf
adc
test
mov
fwait
mov
pop
xor
sbb
sbb
jp
insb
jbe
xchg
test
dec
lods
sub
shrl
mov
mov
pop
dec
out
xchg
es
fcmove
movsl
add
adc
xchg
jno
mov
push
push
add
sbb
cmp
jp
dec
addr16
aam
and
int3
ss
test
pcmpeqw
cwtl
mov
fdivp
mov
inc
popf
push
popa
and
pop
push
mov
cwtl
popa
shrb
mov
lahf
rol
das
ja
xor
outsb
aaa
mov
icebp
xor
sahf
sbbb
or
mov
loopne
fnsetpm(287
push
push
add
cmp
adc
mov
les
stc
std
inc
mov
sbb
pusha
mov
ds
push
test
clc
mov
and
stos
scas
pop
scas
scas
loopne
and
pop
sub
mov
add
jmp
decb
cmovb
or
sbb
mov
shl
sub
dec
sbb
jb
fdivs
fwait
mov
cmp
orb
fldt
les
inc
mov
data16
lods
scas
dec
and
movsb
xor
push
or
lea
pop
xor
mov
jmp
call
lcall
xchg
push
adc
inc
popl
xor
push
dec
pop
mov
rorb
fwait
leave
jg
mov
das
mov
jbe
arpl
loop
push
and
cmp
or
mov
popf
pop
roll
rcr
dec
in
adc
or
bsr
stos
fbld
subl
outsl
repnz
dec
and
xor
cmp
stos
cmp
pop
das
push
cs
in
test
mov
aam
xor
in
into
sub
in
mov
add
inc
push
arpl
movb
xchg
ret
sub
fwait
xor
dec
mov
xchg
jl
out
sub
mov
out
std
ret
fsubs
push
mov
mov
hlt
std
fidivl
dec
call
test
adc
gs
xchg
je
fistl
push
jmp
icebp
jae
jne
inc
ds
cmp
add
or
enter
inc
adc
xlat
adc
jecxz
std
xchg
jno
sahf
aad
xchg
mov
cmp
outsl
test
out
out
call
aad
ja
pusha
cmpsb
call
mov
cmpsl
iret
pop
adc
sub
pop
xor
mov
and
xchg
ret
aad
jno
add
imul
xchg
jl
cmp
pop
dec
adc
into
mov
sub
add
mov
je
aad
xchg
test
or
adc
insl
mov
inc
lods
data16
pop
or
cmpsl
sub
addb
shll
mov
xor
cli
push
inc
inc
aaa
mov
xchg
mov
stos
mov
lods
test
shrb
jecxz
and
pop
fcmovbe
mov
test
mov
ja
pushf
sbb
cmpsb
inc
xchg
jmp
test
xor
and
dec
inc
and
jl
stc
mov
jp
and
cmc
arpl
xchg
mov
std
sbb
cltd
mov
mov
cwtl
mov
ret
add
std
insl
ljmp
sub
stos
jo
arpl
mov
popa
jg
shl
jo
mov
mov
sub
je
push
ficomps
mov
lret
imul
int
add
adc
lock
add
mov
std
out
outsb
and
cmp
sbb
test
in
int3
std
jg
mov
xor
sbb
test
clc
out
jo
inc
cli
mov
cmc
jo
test
mov
clc
inc
xlat
movsl
movsl
mov
iret
dec
adc
push
sub
sub
jge
insl
sub
push
add
scas
push
sbb
pop
add
mov
mov
stos
stc
sbb
dec
add
pusha
hlt
pop
push
outsl
shrl
mov
es
loop
pop
cs
mov
in
or
mov
sbb
and
sbb
sbb
pusha
ret
pop
or
repz
sbb
and
lea
push
arpl
sbb
push
cmp
loope
sub
and
scas
adc
inc
rep
push
ds
ds
test
fidivl
xchg
cmp
mov
mov
cltd
push
cmp
ss
in
sahf
xchg
insl
pop
inc
jbe
sahf
fs
inc
fmuls
cmc
lods
xchg
inc
lock
popa
dec
jae
mov
clc
xchg
imul
fwait
xor
jo
adc
add
push
pop
test
ficomps
div
icebp
inc
clc
inc
dec
loope
aaa
inc
clc
js
mov
dec
decl
inc
cmp
cmp
adc
cld
imul
or
incl
fwait
mov
daa
sub
jbe
jbe
test
mov
dec
shr
jae
push
jmp
xchg
mov
add
sbb
lods
mov
dec
jo
andb
into
xchg
pop
xor
fsubl
xlat
test
pop
les
and
stc
jg
jae
scas
cmp
repnz
ljmp
mov
pushf
and
mov
ss
pop
lret
xchg
jg
outsl
jne
dec
xchg
xor
mov
std
xor
mov
out
mov
push
pop
xchg
or
adc
fistps
in
loope
mov
fisttpl
sbb
fwait
sarl
push
out
fistl
lret
daa
movsb
push
imul
out
rcrb
jp
scas
jg
xchg
inc
clc
mov
dec
dec
ljmp
cs
out
jge
fsubr
jae
jle
fisttpll
testb
popf
lahf
roll
cmpsb
mov
ret
rcrb
and
add
gs
mov
push
lret
sarb
xchg
cwtl
hlt
sbb
sti
xchg
and
in
or
dec
sub
jo
in
aas
sti
andl
shrb
sahf
xchg
loop
cmc
fwait
inc
sub
push
call
fldenv
and
enter
mulb
push
je
cmpsl
pop
lods
test
pop
sbb
or
hlt
daa
sub
inc
pop
mov
push
jbe
outsb
divl
sbb
cs
fmuls
xor
stc
pop
loop
xor
dec
enter
mov
jb
inc
jl
cmc
pop
mov
loopne
imul
jle
sub
xchg
stos
imul
test
les
or
jo
ret
mov
fstp
punpcklbw
loop
movsl
jno
adcb
jnp
out
aaa
test
xchg
jo
lcall
dec
xor
xchg
jp
into
jg
stc
in
xor
in
cmp
jns
and
inc
pop
sbb
or
mov
adc
dec
cld
leave
or
stc
and
daa
cli
mov
cmpsb
popf
push
mov
loope
or
dec
stc
xor
arpl
mov
adcl
or
loopne
jb
gs
and
sti
jb
adc
mov
xor
in
loopne
popf
les
and
fidivrs
and
mov
mov
hlt
loope
lret
roll
cs
aaa
or
jbe
cwtl
or
cli
js
and
cltd
out
adcl
or
sub
out
mov
cmp
aam
pop
jmp
mov
leave
xor
loope
sbb
xchg
xchg
cmpsl
cmpsl
jns
test
js
push
in
pop
add
aaa
mov
xchg
call
lret
push
jp
add
cmc
mov
mov
xor
imul
std
mov
fbld
shlb
addb
sbb
cmp
shl
minps
jne
sbb
pop
mov
cli
orl
push
push
xchg
and
stos
mov
test
rcrb
jnp
cmp
mov
pop
cwtl
cmpsb
cmp
mov
fwait
pusha
and
rcrl
mov
push
jae
jo
loop
repnz
ret
cmp
mov
sbb
adc
inc
xor
xor
push
xor
aaa
sub
in
aas
and
mov
xlat
clc
stos
fidivrs
pushf
mov
jg
or
cmp
sub
lcall
xchg
jp
xchg
aam
shll
ret
jne
sub
test
out
push
pop
lods
push
sub
cmp
pop
mov
sar
pushf
jmp
movb
xchg
std
and
mov
std
xor
gs
mov
test
cmp
and
jns
jo
sbb
cld
shrl
or
pop
popa
out
dec
push
fstps
jmp
xchg
sbb
or
dec
and
cmpsl
stc
mov
add
fsts
adc
cwtl
adc
cmp
xchg
lahf
roll
or
cmp
sbb
stc
push
dec
inc
dec
outsl
lods
adc
add
jno
xor
inc
insl
leave
push
pop
dec
ret
or
and
sbbb
or
hlt
mov
icebp
push
jge
pop
cmp
pop
xchg
pop
sbb
aam
and
pop
scas
lret
cmp
daa
dec
aam
rcrl
push
and
cmp
popf
rcll
ss
es
and
xchg
leave
dec
popf
js
sub
aas
pop
popa
sub
pop
punpckldq
imul
push
cmp
mov
jg
sub
dec
mov
out
arpl
fdivl
cld
jl
scas
or
mov
cs
nop
sub
cli
jnp
loope
aam
stos
ret
arpl
dec
push
int3
xor
xor
movsb
xchg
mov
push
inc
mov
xor
mov
fs
scas
je
xlat
repnz
lret
out
ret
mov
pushf
mov
or
out
stc
inc
int
mov
lcall
mov
push
mov
adc
mov
mov
hlt
cmp
call
push
xlat
xlat
sub
push
push
and
mov
cmp
aaa
cmp
push
mov
jns
loop
sub
adc
jp
lods
xchg
cmp
mov
inc
lcall
sahf
inc
adc
add
mov
sbb
in
fdiv
mov
out
test
repnz
lcall
lcall
fnsave
xlat
and
lods
bound
dec
push
lods
enter
test
xchg
jo
cmp
xor
lock
scas
push
leave
test
pop
xor
icebp
push
dec
outsb
gs
and
cmpsb
mov
mov
add
sub
mov
add
dec
popa
sti
fcmovne
mov
sub
test
pusha
dec
cmp
and
sbb
mov
out
dec
stos
stc
stos
popf
addr16
adc
test
jae
jb
in
cmp
jns
in
fwait
and
add
lcall
push
push
call
in
add
rolb
cmp
sub
and
and
in
test
push
sti
pop
cmpsb
xchg
lret
pushf
rcr
mulb
and
lock
fdivrl
xor
adc
mov
stos
movl
shl
xchg
les
and
pop
cmp
imul
xor
sub
mov
std
rorl
adc
mov
mov
mov
fcoml
mov
sti
jbe
stc
repz
stos
adc
icebp
out
adc
enter
xchg
or
popa
fidivs
ja
mov
cmp
inc
es
xor
je
cmpsb
sti
cmpsl
in
movsl
lock
mov
or
in
pop
push
scas
fidivrs
and
or
mov
test
aad
std
ret
repnz
lahf
cmp
lods
enter
jae
mov
adc
loop
test
push
pop
adc
aad
insb
in
les
mov
mov
adc
jge
and
jecxz
aad
es
add
cmc
xchg
fdivrl
daa
push
and
and
inc
dec
lds
jo
inc
lcall
jno
fldcw
dec
js
xchg
pop
mov
dec
orl
sub
lds
mov
sbb
push
popa
xchg
and
repz
adc
xor
jmp
or
jecxz
out
cmp
repnz
inc
in
and
sub
test
xor
lret
scas
push
sub
mov
jbe
nop
xor
cmp
les
adc
add
jle
dec
lea
mov
call
test
xchg
cmp
inc
mov
stos
sbb
xchg
adcb
sub
lret
daa
pusha
cld
cwtl
jns
push
mov
into
pop
fstps
loope
les
lods
inc
inc
shll
data16
xchg
xchg
ret
sbbb
mov
pushf
adc
pop
in
test
cmp
add
mov
inc
sub
pop
lret
lods
pop
mov
pop
or
daa
mov
push
push
aad
push
dec
pop
jecxz
dec
sub
andb
jnp
imul
popa
enter
mov
cmp
popf
aad
les
cmpsl
in
and
ficoml
dec
mov
inc
loopne
jge
cmpsl
stos
pop
adc
lea
ret
inc
fsubrp
add
jg,pn
fildl
bound
adc
mov
adc
fwait
sub
fisttpll
daa
aas
jle
mov
push
push
paddb
or
adc
or
rorb
push
repnz
ret
add
xchg
inc
mov
mov
and
insl
xor
addb
mov
das
push
push
jmp
pop
mov
enter
mov
loopne
cmpsl
jg
out
mov
sbb
std
das
mov
outsl
pusha
loope
outsb
les
sahf
add
jne
mov
pop
subb
dec
cld
shr
jnp
out
dec
mov
sub
sbb
add
cltd
ret
xor
bound
cmp
push
ljmp
inc
sbb
pop
sti
push
fimull
lea
mov
movsb
cmp
cld
mov
sbb
ss
aas
fildll
jne
cmp
int3
and
push
sub
fdivrl
jmp
add
bound
inc
test
stc
xor
and
xchg
sub
mov
lods
movsl
in
leave
das
sub
icebp
inc
movsl
popa
fnstsw
lahf
lods
add
insl
inc
sub
scas
push
clc
inc
mulb
call
hlt
sub
adc
adc
data16
scas
push
sbb
push
dec
push
bound
inc
das
dec
pop
mov
pop
push
or
mov
pop
hlt
imul
xor
xchg
popf
mov
sub
ds
addr16
dec
fnsave
cltd
out
mov
mov
ljmp
idivl
cmpsb
and
fcom
jb
cmpsb
pop
jne
out
movsb
mov
mov
in
orb
mov
pop
xor
mov
fs
xchg
add
jae
xchg
test
or
cmp
xchg
cs
enter
shll
lock
mov
mov
rorb
sbb
jae
dec
arpl
scas
fnsave
in
push
lret
lock
xor
sarb
mov
inc
sub
fdivrl
mov
hlt
and
pop
dec
push
push
daa
daa
sub
mov
data16
pop
or
test
pop
push
push
inc
nop
outsb
cwtl
pmulhw
sbb
jnp
in
jg
fcmove
pop
int3
int
leave
out
pop
adc
int
jae
mov
adc
aas
popf
pop
and
mov
xchg
xor
jl
clc
xchg
jb
and
pop
int
mov
stos
repnz
fisttpl
bound
cs
aas
cmc
mov
mov
cli
xorl
es
ljmp
fadds
sub
or
outsb
scas
fwait
jae
xchg
push
ret
jmp
cs
cmc
sub
mov
pop
push
fildll
ret
add
loopne
xor
or
repnz
jnp
or
outsb
push
mov
jae
adc
aas
xor
pop
lea
fadd
scas
push
loope
clc
pushf
push
inc
xor
inc
pushfw
adc
pop
lods
or
call
and
jle
sbb
repnz
mov
jae
push
clc
lock
rep
xchg
jge
imul
fldenv
into
adc
repnz
into
movsl
inc
subb
cs
fistl
lds
mov
and
push
cmpsb
scas
fidivrs
out
pusha
ljmp
loope
arpl
inc
mov
pop
lods
rorl
negl
sub
mov
push
repnz
je
pop
or
popa
test
dec
fucomi
shrl
clc
aad
mov
rorl
and
push
xor
mov
ljmp
dec
cmp
mov
inc
mov
ret
mov
pop
sub
fsubs
push
adc
jbe
xchg
push
movl
cmp
sub
xor
cltd
nop
push
jmp
fldenv
mov
outsb
xor
mov
dec
mov
aam
push
pusha
inc
adc
nop
stos
sbb
push
aad
push
mov
test
repz
mov
pop
fcomps
add
mov
pop
jecxz
push
lock
shrl
dec
movsb
mov
push
mov
add
sub
jle
pop
push
inc
jns
pop
popa
add
movsb
int3
lahf
or
ds
cmc
cmpb
mov
and
popf
mov
cmp
pop
xor
pop
popa
cmp
cmp
clc
mov
pop
mov
imul
lret
xchg
sub
adc
aad
scas
adc
cmpsb
addl
push
sbb
cld
mov
jle
xor
sub
test
xor
dec
xor
jmp
xchg
arpl
loopne
mulb
inc
sub
aaa
mov
lahf
rcrb
pop
rcr
mov
pop
mov
adc
fnstcw
sahf
cmpsb
and
inc
pop
xchg
inc
add
jp
push
repz
dec
sahf
add
dec
sbb
pop
xor
push
subl
in
push
xchg
test
sbb
inc
int3
or
mov
call
push
scas
push
xchg
or
insl
adc
adc
lea
jbe
push
jb
cmp
pop
push
adc
ret
xchg
ret
outsb
push
cmpsb
xor
cmp
xor
mov
movsl
xchg
cli
or
pop
cmpl
loopne
adc
mov
fstpl
in
push
push
xchg
sub
ds
push
fwait
and
inc
sahf
popa
inc
or
adc
sub
repz
xorl
ficomps
gs
aam
repz
outsb
mov
repz
jge
ret
loopne
mov
mov
cld
sbb
je
jecxz
or
adcl
int3
and
push
xchg
mov
jno
shrb
out
aam
dec
aad
and
sbb
sti
repz
cwtl
movsl
andl
clc
pop
in
nop
repnz
aas
das
mov
scas
mov
mov
push
add
mov
mov
sub
xchg
adc
out
mov
or
xchg
xor
lea
pop
mov
pushf
xchg
jle
int
mov
sub
cmpsl
setae
push
fsubl
mov
lods
mov
adc
int
data16
pop
outsl
push
and
insb
cmp
xor
mov
xor
lahf
xlat
lds
out
clc
fcomps
dec
adc
jecxz
ljmp
push
jb
cli
add
fcmovu
pop
bound
sarl
mov
push
dec
pop
cld
cmp
push
lea
dec
dec
xor
mov
je
icebp
or
mov
push
jp
lods
inc
jnp
mov
adc
fldl
ret
cmp
sbb
adc
mov
xchg
xor
pop
stos
fwait
test
push
bound
loopne
pop
in
daa
scas
dec
outsb
fsubs
iret
stc
int3
adc
push
adc
sbb
loop
scas
cmc
xor
insl
xchg
cmpsb
es
inc
dec
das
out
cs
lcall
fdivrp
mov
push
xor
orb
or
outsl
lea
push
xor
inc
push
mov
fisubrl
pusha
xor
test
push
or
mov
xor
std
adc
ds
mov
or
lret
js
pop
cmpsb
scas
aas
pushf
aaa
lds
rcll
cmp
les
adc
imul
clc
pop
mov
jns
test
push
add
clc
xchg
roll
loop
xchg
mov
lcall
xchg
xor
xor
imul
out
ds
jge
aas
cmp
xchg
fcmovb
mull
lods
xchg
mov
ret
sub
rcr
adc
mov
mov
jne
mov
sub
or
cltd
mov
mov
add
pushf
dec
ss
jl
enter
dec
stos
adc
xor
in
xchg
clc
inc
std
cmc
lret
mov
jmp
mov
in
insb
or
fsubr
mov
test
mov
xor
pop
es
fsubl
insb
loopne
jb
mov
xor
imul
mov
nop
xor
xchg
mov
cwtl
lods
push
xlat
arpl
insb
divl
dec
xchg
fdiv
push
lret
pop
scas
jnp
call
das
test
ja
inc
lods
fs
idivb
sarl
out
aam
lgs
push
xor
inc
fs
push
mov
pushf
cmp
jecxz
movsb
push
shrb
push
jmp
mov
cmc
lret
stos
jl
add
jnp
mov
fbld
cmpsl
daa
sub
cltd
pop
pusha
je
sarl
insl
xor
add
xlat
push
leave
int3
negb
push
jmp
inc
outsb
push
or
cmp
adc
daa
aad
dec
movsl
mov
push
shll
jl
mov
icebp
in
dec
icebp
xor
sbb
ret
sbb
fstl
mov
push
test
inc
cmp
xchg
xchg
xchg
movsb
lock
leave
push
lret
rclb
and
inc
fmull
sub
rcrl
sub
outsb
push
std
mov
shr
mov
pusha
les
inc
mov
imul
orb
in
nop
cmp
mov
pop
ret
add
fwait
dec
pop
pop
imul
jle
imul
pop
and
dec
or
jp
fdivl
es
sbb
out
pop
pop
test
mov
mov
add
pop
test
enter
imul
stc
loopne
call
js
jo
sub
xor
cmpsb
ja
xchg
and
mov
mov
xchg
or
mov
xchg
xor
sbb
movsb
adc
sbb
xor
rcl
add
aaa
sahf
in
out
inc
xchg
mov
push
jmp
dec
dec
data16
lret
xor
leave
sub
pop
inc
push
cmpsl
add
es
jbe
stc
jo
test
addr16
addr16
cmpl
cmc
jecxz
or
rcrl
sbb
int3
cmp
shrb
mov
xorl
fiadds
xor
lock
es
jae
dec
jo
loope
lcall
or
jb
stos
divb
cmp
fsubl
xchg
and
movl
aas
xchg
and
sahf
pop
xchg
rorl
aas
sti
mov
mov
sbb
mov
xchg
addr16
mov
dec
mov
jne
inc
mov
cmp
ret
jecxz
shlb
push
shrb
repnz
lret
ds
jne
add
jmp
je
or
jp
cld
mov
or
mov
stos
xor
add
iret
xchg
sti
pop
mov
rcr
mov
add
pop
inc
in
in
add
jmp
jle
cmp
or
xchg
add
xchg
cmp
push
aam
xchg
aaa
jnp
daa
xchg
cmp
cmp
bound
mov
lock
ret
test
fisubs
repz
cli
lret
test
pop
iret
mov
xchg
mov
pop
imul
sbb
loop
or
adc
add
inc
stos
cld
mov
rcrl
inc
cltd
lock
mov
and
in
imul
mov
into
mov
and
stos
cmp
ljmp
mov
test
mov
xor
lods
jae
push
ds
psllq
nop
sbb
je
mov
sar
sbb
fstps
or
jo
xor
pushf
fcoml
das
xchg
test
test
fdivr
xor
mov
dec
mov
xlat
es
imul
mov
add
pop
push
icebp
ret
outsl
jno
and
push
insb
or
add
mov
inc
jmp
mov
xor
scas
nop
popf
push
out
dec
sbb
test
inc
pop
add
lret
leave
pop
in
pop
dec
adc
repz
pop
mov
icebp
out
dec
ret
jecxz
daa
cmpsl
fsubrl
push
pushf
mov
ror
in
aad
pop
sub
std
xchg
lods
pop
push
cmp
mov
jne
inc
out
mov
mov
divb
or
mov
adc
in
jge
gs
inc
xor
ret
push
jae
faddp
out
out
inc
enter
and
adc
dec
xor
mov
cld
cmpsl
mov
int
sbb
jo
scas
mov
fs
jge
sahf
sbb
lahf
test
icebp
sub
mov
xchg
sub
sbb
inc
ja
ja
xchg
push
inc
push
pushf
cmp
xchg
adcl
lods
xchg
pusha
jno
mov
adc
cld
mov
push
xchg
mov
add
mov
cmpsl
inc
pop
loopne
arpl
rorb
faddl
push
lcall
dec
push
jp
rol
mov
or
rolb
fiaddl
ss
imul
mov
popf
int3
aam
pop
mul
and
xchg
inc
lds
repnz
sbb
call
pop
aaa
dec
sarl
cmp
cmpsb
arpl
outsb
and
inc
inc
xchg
pop
or
out
add
mov
pop
jno
test
pop
in
dec
or
test
sbb
out
mov
mov
xchg
clc
imul
inc
inc
fisubl
lret
aam
pop
cmp
mov
cmp
and
sbb
pop
jo
fs
int
rolb
loopne,pn
lret
cltd
les
outsl
pop
jecxz
xchg
fwait
jle
cmpsb
xchg
icebp
loope
ficoml
dec
mov
or
test
dec
inc
cmc
sarb
dec
enter
add
ljmp
fnstsw
push
inc
ret
jb
repz
pop
fwait
and
rcr
rep
xor
pop
dec
shlb
sbb
adcb
mov
jbe
or
test
add
xchg
sbb
cmpb
mov
in
add
outsl
mov
jp
popf
sub
cmp
jbe
sbb
jmp
ret
adc
adc
pop
jb
in
hlt
or
fisubs
ret
jae
xor
sub
and
add
xchg
pusha
fs
rclb
adcb
leave
icebp
push
xor
int
mov
mov
push
aaa
sub
push
and
cwtl
stc
andl
lret
fadd
sub
pop
add
pop
enter
xchg
xchg
std
jp
fwait
daa
loopne
mov
push
push
lea
add
mov
popa
mov
and
sbb
xchg
pop
adc
jno
dec
lret
push
and
repnz
mov
push
lock
js
push
fs
out
ret
xor
rolb
cwtl
inc
shll
subl
pop
and
test
sub
repnz
push
fstps
fmull
imul
lods
jge
sub
push
adc
pop
and
add
or
loop
xchg
mov
dec
mov
add
movl
cmp
fs
inc
fimuls
outsb
ficoml
pushf
mov
mulb
clc
cmp
pop
movsb
add
test
test
sbb
jg
mov
hlt
dec
shl
dec
push
cmp
and
lods
jae
sbb
nop
cmp
mov
aaa
mov
and
mov
xlat
push
mov
xor
xor
not
mov
dec
in
mov
fisttpll
adc
clc
pop
cli
stc
notl
add
loope
cs
xchg
and
dec
jecxz
aad
mov
and
adc
stos
pop
push
push
pushf
jge
les
push
stos
xchg
lods
std
lret
and
add
cmpb
cmp
add
dec
mov
xchg
imul
ljmp
jae
clc
repz
fldenv
stos
idivl
mov
scas
mov
ljmp
into
push
lock
jbe
fistl
dec
jnp
adc
xchg
sub
call
frstor
cmpsb
hlt
push
mov
xor
xchg
iret
int
mov
xchg
cmp
les
pop
icebp
mov
popf
sbb
pop
sub
fwait
or
sahf
adc
cmpsb
adcl
incb
xlat
clc
or
mov
les
imul
sbb
push
sahf
xchg
add
jno
scas
iret
xor
sbbb
dec
enter
imul
push
pop
xor
std
and
inc
push
in
testb
and
sarl
inc
stc
sbb
mov
pop
fists
cmpb
stos
adc
cmp
cwtl
cmp
fs
jae
add
sbb
jge
jmp
cmp
mov
jp
xchg
inc
addr16
and
out
rcl
test
cltd
into
inc
mov
pop
pop
adc
inc
mov
jp
or
ret
fsubr
push
aaa
popf
pop
or
subb
push
jle
imul
fistpll
hlt
xchg
push
mov
jne
adc
dec
push
mov
imul
dec
mov
mov
mov
pop
add
in
pop
inc
mov
cld
mov
mov
or
adc
cmp
push
imul
call
lcall
and
sbb
in
jb
vpcmpeqb
popa
inc
push
push
scas
clc
ljmp
adc
xor
sbb
pop
addr16
loopne
xor
out
rcr
push
dec
add
push
lahf
adc
pop
out
inc
mov
mulb
push
test
mov
in
stos
aad
ret
mov
js
rcr
or
cmp
xchg
in
popa
lret
and
cld
rclb
divb
hlt
inc
mov
jge
xchg
enter
test
daa
xchg
dec
adc
insb
cmp
or
iret
and
push
dec
ja
idivb
cmpsl
sub
stos
cmp
aad
imul
call
insl
dec
filds
cmp
mov
pop
cmpsb
push
into
outsl
cmp
mov
xchg
fcoms
test
insb
fnstenv
test
xchg
es
andl
cs
jp
push
cltd
jl
ret
inc
mov
pop
inc
mov
lock
push
jle
shlb
or
out
xlat
cmpsb
add
jbe
mov
xchg
or
pop
mov
ret
addr16
adc
hlt
mov
jns
lea
push
icebp
and
cmp
add
out
push
push
cmp
loope
push
enter
roll
add
lock
cmp
jp
mov
out
or
adc
cld
mov
add
leave
out
aas
mov
pop
pop
ss
mov
lahf
pop
push
fs
sub
imul
mov
jle
or
jno
or
in
js
fiadds
sub
jp
stos
js
inc
sub
mov
lahf
push
xchg
mov
mov
mov
clc
in
data16
loop
in
jns
jo
gs
and
pop
hlt
mov
outsb
mov
mov
dec
std
pop
loopne
mov
adc
inc
outsl
rcll
cmp
add
dec
fldenv
or
xor
or
mov
bound
xor
xor
cmp
mov
cmp
pop
mov
rcrb
out
test
daa
push
in
mov
xchg
ljmp
std
add
popa
aaa
cmp
xchg
dec
dec
inc
add
lret
roll
popa
mov
mov
jbe
outsb
es
pop
adc
mov
loope
and
loopne
dec
dec
sbb
dec
mov
lret
pushf
rcll
dec
repnz
sarl
cmp
test
out
dec
adc
dec
mov
mov
mov
pop
sub
rcll
icebp
adc
jl
mov
lret
dec
cmp
dec
push
sub
pop
mov
mov
and
mov
jo
movsb
das
xorb
xor
mov
mov
jae
loope
mov
es
frstor
stos
mov
inc
out
inc
mov
inc
js
test
test
stc
adc
fists
shlb
sbb
hlt
adc
mov
cmp
lahf
add
inc
fsubrl
xchg
push
addr16
mov
sbb
xor
bound
addr16
fnsave
aad
sahf
jl
fiaddl
shlb
mov
mov
call
fsubl
std
out
insb
rcr
vmovss
push
and
jne
jo
ffree
sarb
pop
mov
into
mov
std
icebp
das
je
addl
mov
test
jb
inc
and
mov
cltd
cmp
sub
jns
pushf
ss
xor
push
clc
cmp
xlat
mov
bound
mov
jmp
js
shl
rorb
adc
lods
add
push
shlb
outsb
sti
mov
enter
fisttps
repz
pop
push
sbbl
xchg
push
in
mov
stc
or
seta
cmp
jmp
xlat
adc
pusha
inc
dec
jg
push
out
sub
and
sub
cmp
mov
lods
lcall
hlt
je
mov
test
neg
or
fninit
pop
andb
cmp
shll
imul
fldenv
mov
fistps
dec
inc
cmp
out
dec
iret
mov
cmpsl
add
jmp
jl
add
pop
adc
ss
into
fisttpll
mov
imul
and
out
ss
xchg
mov
jne
jmp
shlb
stos
jg
xor
xchg
jo
cmc
cmp
out
mov
lcall
xchg
dec
lds
push
test
add
leave
push
mov
lds
std
adc
xor
jo
sub
pop
add
pop
dec
jns
xchg
clc
lret
and
sub
mov
add
push
cmp
lret
pop
loop
imul
repnz
mov
or
push
adc
out
lock
scas
xchg
mov
push
das
xor
xor
fcoms
adc
dec
mov
sti
out
lods
popf
lret
push
mov
popa
hlt
insl
jno
movsb
xor
stc
jno
shll
addb
int3
scas
xchg
scas
sbb
xlat
bound
pushf
or
mov
popl
xchg
in
adc
lret
lret
mov
jge
sbb
adc
push
mov
xchg
es
and
stos
xor
and
fsts
push
dec
mov
ds
es
jbe
jo
pop
lea
pop
jo
pop
fsubrl
mov
adc
or
fnsave
fdivrl
inc
cmp
sti
mov
fs
xor
add
int3
pop
push
enter
out
and
xor
and
lcall
or
test
addb
mov
adc
sbb
lock
push
inc
xor
push
sbb
imull
movsb
push
rcrb
sbb
movsb
inc
adc
adc
pushf
mov
xchg
xchg
xchg
inc
fwait
in
push
mov
jmp
mov
mov
and
sar
xchg
arpl
sub
push
fmul
xor
mov
insl
push
xor
movsb
mov
shl
clc
popa
in
ror
cmp
loopne
ret
adc
xor
out
lret
cmp
push
fwait
js
lret
pop
xchg
lods
adc
mov
xor
in
std
insl
test
or
ja
out
dec
mov
ljmp
cmp
mov
pushf
cmc
sub
pop
ljmp
ret
cmpb
and
clc
test
cmp
pop
test
hlt
sub
test
xchg
sti
inc
pop
and
inc
and
mov
icebp
adc
ds
js
push
ss
xchg
add
cmp
pop
ljmp
add
push
fadds
out
sbb
cmpsl
push
cltd
icebp
add
addr16
sar
out
ror
cs
out
addr16
and
add
xchg
arpl
jae
adc
fs
neg
and
or
aam
mov
xchg
std
mov
add
popf
push
pop
inc
repz
or
push
in
cld
jge,pn
jmp
inc
test
imul
les
fnstsw
insb
ss
insl
outsb
out
or
push
loop
ret
andl
movsb
cmpsb
sarb
test
imul
jle
mov
sub
movl
loope
outsb
lcall
xchg
imul
nop
mov
dec
inc
pop
int3
mov
push
cld
cmc
loopne
and
pushf
jge
adc
pop
scas
jbe
and
mov
adc
xor
fnstcw
xchg
rcrb
push
notl
inc
pop
sub
daa
pop
std
push
pop
fdivrs
sti
loope
lcall
mov
xor
jle
inc
loope
data16
and
iret
xchg
lock
or
pop
stos
negb
lret
cmp
pop
mov
into
aas
mov
cmp
cmc
xor
pop
jl
lock
jbe
outsb
popf
sbb
and
fwait
aam
fildl
jle
outsb
testl
mov
mov
shll
mov
and
pushf
push
insb
lods
daa
mov
in
movsl
mov
pop
mov
dec
adcb
pop
or
cli
mov
fcomp
mov
lret
or
add
pushf
pop
push
insb
mov
mov
arpl
mov
test
popl
stos
outsl
sub
push
repnz
je
mov
xor
push
jne
inc
push
das
mov
repnz
cmpsb
and
jo
jecxz
add
mov
inc
push
jae
mov
scas
sbbl
incb
insl
push
add
push
loope
subb
loop
xchg
push
out
mov
gs
aas
lret
pop
jl
jbe
and
fsts
xor
aam
test
loope
add
sbb
jbe
popa
push
jno
pusha
dec
hlt
cmpsb
mov
inc
pop
aad
add
pop
xor
cmpsb
cmpsl
push
and
or
ret
stos
sub
leave
pop
lock
cli
aas
add
push
mov
ds
sbb
sbb
xor
mov
mov
jl
jb
out
pop
or
pop
jno
xor
les
fistpll
enter
movsl
mov
outsb
jle
imul
bound
test
aad
jp
data16
iret
pop
dec
in
pop
inc
lret
es
icebp
jge
loop
outsb
sub
pop
push
jg
cwtl
jecxz
jmp
jecxz
in
imul
pushf
cmpb
or
fldl
jmp
jl
ret
mov
inc
push
mov
int
push
call
mov
clc
mov
shl
cmp
jmp
pushf
test
sub
clc
mov
push
sbb
fsubrl
cmpsb
dec
mov
cs
push
mov
lret
mov
pop
or
push
stos
pop
xor
mov
or
xor
pop
pop
dec
mov
idivl
cld
and
jecxz
loop
inc
test
mov
pop
lods
neg
lret
sbb
call
add
adc
sti
dec
data16
cmpsw
out
jecxz
sub
or
and
cmp
xchg
ds
mov
out
iret
sub
or
cs
jbe
mov
fldcw
sub
pmulhw
and
adc
mov
enter
or
js
movsl
nop
out
pop
jmp
fildll
fdivl
shrl
jl
xor
test
mov
pop
jb
fwait
jno
mov
fmull
popa
test
adcl
call
mov
sub
jno
inc
out
subb
rorb
pop
pop
addr16
mov
xchg
js
rcrl
mov
imul
sub
pop
pop
fistpll
xchg
adc
mov
and
fisubl
dec
jns
push
pop
cs
aaa
pop
add
inc
push
mov
mov
inc
xchg
icebp
iret
dec
sbb
add
jne
push
xor
xchg
inc
xor
int
test
jno
inc
add
enter
pop
icebp
jp
jae
pusha
lret
inc
adc
pop
sub
inc
cwtl
jbe
scas
negb
inc
popf
out
sub
dec
fcoms
mov
call
inc
push
adc
fucom
int
sbb
jecxz
cld
cltd
sub
add
dec
push
out
mov
inc
mov
lret
push
or
xor
jl
jle
mov
rcll
cmp
pushf
cmp
mov
jo
ficoms
push
push
xor
scas
arpl
mov
adc
adc
icebp
jne
and
mov
ficoms
pop
push
pop
leave
stc
jnp
pusha
js
aam
out
push
stos
pop
jecxz
or
ret
fistpll
lahf
xchg
popf
add
jg
ja
movsl
and
ficoms
cli
int
jns
cli
in
xor
mov
and
jge
push
add
sbb
dec
out
mov
xor
push
test
mov
mov
cltd
sbb
arpl
push
push
xchg
xchg
test
loopne
xchg
mov
ljmp
ss
add
ret
out
clc
stos
leave
cmpb
sbb
sbb
out
lret
sub
shl
mov
out
adc
mov
in
not
loope
lock
inc
jnp
mov
or
xchg
adc
or
lods
inc
rol
cli
leave
mov
mov
sub
pop
imul
stos
lret
stc
aas
pushf
mov
aam
xchg
adc
cltd
dec
lods
ret
sbb
inc
sub
clc
in
int3
xchg
jae
rol
dec
into
or
cli
stos
mov
xchg
sub
popa
or
sub
cs
cmp
inc
push
in
add
adc
addb
and
mov
or
aam
leave
sbb
push
mov
cmp
mov
push
ss
jecxz
xchg
addb
popf
filds
jp
inc
mov
nop
sub
dec
mov
sbb
pop
repz
in
clc
inc
dec
filds
xchg
repz
pop
sbb
into
sbb
xor
incl
adc
inc
mov
and
jb
cs
and
xor
sub
add
ss
adc
fcoms
pop
scas
stos
pop
xor
dec
mov
mov
mov
shll
nop
mul
add
icebp
pop
push
bound
aam
imul
popf
fld
fptan
pop
fdivrl
shl
cmpsb
cmp
mov
int
and
lods
loop
pop
add
push
arpl
outsl
and
push
push
push
bound
push
cltd
xor
ror
adc
lea
mov
pop
pop
nop
pop
insl
pandn
jg
push
push
and
test
fidivs
mov
or
pushf
xor
out
dec
sbbb
arpl
xor
imul
aad
addl
fstp
sti
pop
stos
scas
mov
es
ja
mov
shrb
mov
adc
cmp
jge
xor
xchg
sbb
imul
mov
iret
int3
adc
xchg
sti
movsl
cmpsb
mov
aam
mov
xor
in
mov
jge
xor
fldl
dec
sbb
pop
mov
inc
in
adc
pop
push
or
xchg
les
jmp
mov
add
int3
fsub
movsl
int3
jp
add
aaa
push
jg
add
sub
hlt
insb
out
dec
sub
movsb
shll
dec
cmp
xchg
int
in
rolb
xor
imul
lods
idivl
pop
ret
add
mov
and
fimuls
mov
lcall
lahf
adc
or
pop
push
lret
xchg
pop
jb
fsubrs
push
adc
xchg
and
push
push
inc
into
rcrb
ss
hlt
divb
test
dec
add
jle
xor
stc
test
aaa
add
aam
inc
repnz
repnz
push
mov
cmp
arpl
test
push
fs
or
and
or
xor
xchg
xchg
push
shr
or
cmp
rorb
mov
mov
imul
dec
bsr
push
movb
inc
inc
sbb
fstpt
jb,pn
fisubs
adc
movsl
je
mov
xor
aas
cwtl
jb
or
fwait
or
inc
sub
adc
lret
xchg
decl
stos
ficoms
pop
mov
cmp
ret
xchg
cmp
fcomps
sahf
mov
mov
int3
pop
sbb
jne
pop
mov
adc
push
mov
jg
scas
jp
aad
add
loop
xchg
nop
into
pop
jmp
sub
repnz
mov
xor
mov
imul
mov
cmc
push
rcrl
cmp
push
imul
dec
or
enter
mov
sbb
jecxz
xor
mov
push
mov
js
stc
pop
sub
rclb
inc
mov
lahf
das
cmp
aaa
mov
xchg
xchg
mov
jbe
jne,pn
mov
sbb
xchg
xchg
movsb
mov
pushf
push
out
jmp
xchg
cmp
and
mov
sub
decb
addl
push
xorl
inc
pop
mov
jno
xor
add
jne
jge
sub
pop
dec
inc
and
test
jmp
or
sarb
imul
test
pop
xchg
jo
cmp
and
movsb
ja
mov
sub
mov
test
cli
mov
jne
mov
test
bound
outsb
ficomps
scas
sbbb
sub
pusha
js
lret
pop
cmpsb
inc
clc
loop
mov
leave
adc
jge
fwait
pop
cmp
notb
stos
pop
mov
xchg
inc
mov
mov
mov
add
xor
call
aaa
fs
test
loop
inc
leave
or
dec
mov
mov
cmp
loope
iret
lods
sub
cld
xor
mov
push
les
aas
mov
xor
repz
enter
mov
inc
pushf
push
ffreep
testb
sub
incb
mov
pusha
mov
sub
jp
daa
or
int
adc
lret
add
push
in
hlt
dec
push
sub
arpl
addr16
lahf
data16
jle
lcall
inc
push
nop
mov
mov
push
nop
pop
nop
lcall
adc
addr16
aad
rcr
push
je
mov
pusha
mov
pop
pushf
fildll
movhps
cmp
scas
xor
lods
clc
jl
neg
fs
add
fnstsw
jbe
pop
cli
pushf
xchg
fadds
orb
xchg
int
in
xchg
inc
xchg
lock
add
and
leave
mov
test
sub
xchg
movl
fs
fwait
cmp
jle
push
pop
ret
js
lahf
inc
test
iret
adc
stos
mov
sbb
xor
movsb
xor
dec
idivl
outsl
fs
xor
xchg
lods
mov
cmp
out
mov
jge
mov
repnz
push
pop
iret
cmp
in
or
inc
sub
shlb
mov
bnd
es
ss
mov
out
outsb
jecxz
ror
or
jge
sub
mov
jnp
dec
sti
insl
notl
loopne
mov
mov
mov
push
adc
divb
in
push
loopne
adc
inc
cmp
inc
dec
pusha
fsts
lods
bound
mov
cwtl
int
sbb
jmp
xchg
cmp
mov
add
sub
scas
xchg
stc
scas
push
mov
xor
cmp
rorb
out
out
ss
frstor
inc
icebp
inc
xor
loope
int
adc
jmp
mov
and
push
and
inc
scas
inc
inc
leave
call
push
xchg
mov
mov
test
xchg
ret
jp
xor
aam
adc
out
dec
jecxz
in
sub
lds
aas
js
les
mov
inc
dec
pop
push
jp
aas
or
pushf
test
mov
jmp
inc
jne
pop
mov
stos
and
dec
and
mov
pop
and
jo
and
pop
dec
subb
xor
scas
outsl
test
or
fstpt
inc
out
fistpl
mov
sub
and
int3
inc
lahf
rcrb
movsb
cmp
xchg
mov
xor
or
call
xor
jne
fwait
sub
addr16
jnp
jmp
adc
loopne
sub
xchg
cmpsl
and
inc
dec
lcall
das
add
push
stc
inc
mov
jmp
aam
js
cmpsb
cmp
mov
pusha
cwtl
adc
ss
outsb
and
xchg
stos
jle
jmp
pop
adc
leave
pusha
cwtl
ja
xor
pop
push
inc
sbb
pop
aam
mov
test
popf
jl
mov
or
shr
fdivrs
xchg
push
cli
sub
into
adc
add
jle
f2xm1
add
ljmp
adc
fsts
jbe
xor
cltd
ljmp
clc
push
gs
movsl
nop
mov
pop
adcl
mov
sbb
xchg
test
dec
inc
dec
sbb
stos
inc
mov
cld
or
adc
movsb
adc
sar
lret
push
stos
out
ljmp
aam
bound
test
inc
push
ds
fwait
xor
push
xchg
ret
out
mov
insl
xchg
mov
pop
outsl
push
lods
shlb
adc
pop
cmp
js
cltd
roll
cld
ficoml
jns
int
clc
icebp
mov
pushf
adc
sbb
add
rclb
lock
lods
dec
scas
icebp
mov
test
imul
sarb
idivl
sbb
cmpsl
movl
jns
pop
adc
bound
adc
mov
or
stos
adc
jg
sub
lret
xor
out
add
push
lods
gs
add
push
fcom
ficomps
or
addb
push
xor
add
pop
push
jmp
ret
or
push
enter
xchg
pusha
mov
add
adc
push
sub
aad
push
inc
mov
dec
rcll
xor
insl
xchg
sti
mov
iret
push
add
lods
pop
adc
addr16
pop
fldt
lret
cmpsb
filds
or
or
int3
mov
sub
and
dec
sar
idiv
cmp
xchg
dec
aaa
test
fwait
pushf
add
pop
std
and
movsl
stc
mov
lahf
add
mov
inc
pop
cwtl
mov
mov
shlb
in
je
iret
test
loop
mov
std
sub
cmp
loopne
loop
arpl
mov
arpl
mov
inc
push
data16
icebp
xchg
andb
out
test
cmp
mov
cli
adc
sub
sub
cmpl
pop
cltd
cwtl
and
int
push
inc
add
hlt
inc
dec
sub
xlat
sub
aad
xchg
icebp
sub
fs
std
adc
inc
ficoml
aad
mov
out
push
repnz
cmpsl
fisubs
mov
inc
jns
fstl
mov
test
out
dec
hlt
dec
insl
add
aaa
jb
pop
outsb
dec
xchg
xchg
mov
mov
xor
stos
ja
cmp
aam
xchg
call
out
lock
outsb
lods
inc
ds
clc
adc
out
shl
in
push
ljmp
test
xchg
std
stos
outsl
add
mov
push
jg
cs
cs
fs
jae
push
ss
adc
sbb
xchg
lcall
mov
sti
pop
shrl
push
add
xor
ljmp
mov
fldt
movsl
sbb
fldcw
lea
in
pop
sub
dec
mov
inc
jb
sbb
sub
aad
jns
xchg
add
das
shrb
adc
xor
lock
push
xchg
clc
xchg
push
xchg
xor
stos
pusha
cmpsl
add
outsb
push
push
out
inc
loop
mov
xor
sbb
cmpsl
stos
push
sbb
adc
dec
sub
cld
dec
test
cmp
insl
jns
xchg
sub
movsl
subb
mov
nop
or
popf
mov
inc
jle
inc
adc
xchg
inc
ret
sahf
sarb
pusha
adc
mov
mov
sbb
js
sbbb
cld
orb
mov
or
lret
int3
aas
psubb
out
or
lock
inc
movsb
inc
dec
add
popa
cmp
push
aad
lock
xor
ficoms
or
or
lods
shrb
xchg
jp
sub
xchg
cs
dec
sbb
sahf
xchg
leave
add
int3
scas
popa
cmp
push
ss
xchg
jo
and
mov
inc
push
and
mov
movb
pop
xor
jb
test
sti
pushf
mull
and
dec
mov
iret
test
dec
cltd
out
lock
insl
add
fstpl
hlt
push
add
push
xchg
cmp
xchg
das
aam
jle
push
and
xor
adc
inc
adc
pop
or
stos
sbb
je
gs
enter
or
and
push
enter
ljmp
fistps
imul
push
ret
add
jnp
sbb
sbbb
rolb
xchg
popf
sbb
ret
call
lahf
fs
xor
lds
mov
ja
pop
sbb
add
and
stc
or
loop
add
fwait
shrb
push
shl
ljmp
mov
mov
push
int3
popf
lahf
lahf
cmp
pop
jp
sarb
dec
push
cpuid
mov
arpl
enter
lods
outsl
xchg
sbb
xchg
hlt
stos
pop
mov
mov
mov
and
into
rclb
out
shrl
xchg
push
xorl
cmp
lods
ja
cltd
pop
lock
out
aaa
aaa
mov
lds
and
in
cmp
es
shrl
bound
sbb
pusha
mov
dec
push
inc
lea
sbb
scas
dec
and
mov
dec
inc
cmp
mov
mov
xor
xchg
xor
divl
test
xlat
or
cmp
cmp
sarb
out
mov
sbb
mov
fsubl
mov
mov
testl
fmuls
jp
xchg
fnstsw
test
out
pop
sub
inc
mov
push
push
push
mov
pushf
add
add
ret
icebp
fisubs
int
xchg
lahf
xor
iret
and
rorb
inc
xchg
push
imull
sub
pop
aaa
sti
in
push
jecxz
imul
pop
test
cmp
adc
lcall
cmpsb
and
pusha
mov
dec
mov
btl
inc
jno
dec
clc
pop
scas
enter
out
lcall
push
push
and
mov
ret
scas
xlat
cmc
inc
sarb
inc
xchg
or
jmp
cmp
idivl
xchg
bound
add
pop
fs
pop
scas
xchg
loopne
xor
shlb
js,pt
mov
insl
push
fldt
out
adc
cmp
fnsave
jg
addb
std
repz
inc
add
std
andl
or
mov
cmp
inc
in
in
leave
sub
je
fwait
sbb
pushf
mov
push
cmp
fucomi
jle
jl
out
mov
mov
ja
rorl
das
mov
cmc
add
adcl
sbb
and
lea
and
cli
mov
cmpsw
xchg
sbb
sbbl
cmc
flds
jnp
or
das
adc
ds
das
and
xor
dec
mov
cmp
sbb
dec
add
mov
dec
pop
fisubs
dec
int
les
testb
sub
cmpl
add
jmp
popf
daa
lahf
aam
aam
insl
out
pop
es
fldcw
mov
mov
repz
inc
cmpsb
in
hlt
pop
es
xchg
jge
mov
in
hlt
jnp
sbb
push
sahf
into
pop
cli
test
push
inc
pop
jno
mov
or
clc
fmull
pushf
sbbl
dec
xlat
scas
in
out
push
sahf
mov
pusha
push
sbb
int3
mov
pop
xchg
add
int
mov
mov
jbe
test
sti
cmp
loop
out
loope
cmp
daa
loopne
cld
cmp
mov
fldenv
push
jb
outsl
ljmp
in
ljmp
nop
mov
mov
mov
or
hlt
mov
jnp
sbb
push
fbld
ja
cmp
pop
mov
add
mov
fstps
daa
addr16
loop
dec
popf
push
idivb
hlt
push
xchg
xchg
or
cld
mov
lret
lret
adc
icebp
jns
mov
outsb
in
mov
enter
fsubs
inc
out
pusha
nop
cld
int3
test
xlat
les
sarl
push
fneni(8087
fbstp
or
or
cmc
in
aaa
dec
ss
dec
push
shll
pop
sarb
adc
add
dec
push
mov
stos
repz
mov
adc
or
es
pop
adc
loop
pop
and
roll
repz
cmc
cmp
mov
or
jo
add
push
ljmp
sti
loopne
pop
ficomps
test
cltd
mov
dec
test
bound
movsl
loopne
sar
inc
inc
mov
lds
test
leave
pushf
jb
rorb
andb
mov
int3
dec
enter
push
mov
lahf
fisubrs
or
push
fmull
add
cmp
and
fiaddl
xchg
in
add
cmp
movsl
mov
pusha
into
mov
out
stos
and
stos
mov
insb
and
mov
xor
mov
jge
adc
and
sub
dec
sub
repnz
inc
mulb
movsl
adc
xor
inc
arpl
jns
repnz
jnp
lds
xor
ds
repnz
jne
lahf
xor
orl
xchg
int
cmp
or
ret
fildl
lock
aaa
or
sbbb
stos
dec
cwtl
cmp
test
call
sub
sbb
sbb
dec
int
sti
mov
or
push
lods
and
pop
sbb
ja
sti
adc
or
adc
xchg
in
ss
out
pop
cmpsb
adcl
inc
mov
jg
std
mov
jne
pop
pop
pop
push
mov
mov
and
sbb
inc
xchg
inc
fs
sbb
std
xchg
out
cmp
push
xchg
popa
pop
lret
repnz
fstpl
int3
mov
shl
inc
sbb
je
jle
add
int
dec
cmp
arpl
testb
add
dec
mov
cs
and
lahf
jo
jno
xor
test
insb
ljmp
sbb
in
mov
jecxz
mov
push
sbbb
insb
aam
adc
xor
fildl
cmpl
mov
ret
xor
mov
push
push
cmp
push
push
mov
addr16
cmp
lds
shll
add
jbe
jbe
fwait
adc
mov
cmp
xchg
mov
jbe
pop
out
test
xchg
cmp
xchg
aad
add
and
and
inc
pop
out
stc
clc
push
or
mov
push
aaa
daa
stos
cltd
ror
or
mov
sub
inc
cld
or
stos
arpl
and
out
lds
scas
incb
xor
mov
and
repnz
push
popl
mov
add
jmp
popl
scas
pusha
adc
cwtl
outsb
adc
mov
mov
int
sub
push
mov
stc
mov
out
iret
sbb
adc
mov
add
imul
mov
out
mov
repz
icebp
jg
inc
stc
or
movsl
xlat
loope
push
imulb
mov
inc
pop
mov
push
inc
xor
clc
hlt
sbb
xchg
fwait
and
enter
fildll
movsl
sub
fldenv
lahf
xchg
inc
pop
mov
bound
adc
into
pop
dec
test
push
or
fs
cmpsb
add
ds
out
fistps
dec
or
jns
mov
in
add
mov
aad
sti
lods
rorb
fs
shll
shl
fnstsw
cmpsl
push
in
mov
mov
inc
cmp
pop
scas
imul
jle,pn
stos
mov
inc
sbb
js
mov
stos
outsb
fiaddl
idiv
jno
shll
cs
mov
cmp
pop
adc
out
mov
fucomp
and
mov
mov
or
loope
and
pushf
int
jb
popa
jg
lods
fidivrs
inc
jno
push
pushf
mov
lret
xchg
dec
sti
mov
cld
mov
jno
xlat
repz
lcall
dec
out
cmp
mov
xchg
int3
sub
push
mov
sbb
pop
xlat
sbbl
jns
xchg
inc
mov
pop
cli
outsl
arpl
sbb
stos
dec
sbb
or
adc
xor
test
push
adc
outsl
cmp
out
jecxz
jns
cli
xchg
add
mov
inc
dec
mov
mov
pop
push
dec
jns
sbb
movsl
cmpsl
ret
cwtl
dec
xor
push
das
outsb
inc
lods
xchg
mov
out
imulb
mov
lret
aam
sbb
jnp
ss
inc
fmuls
cmp
aas
push
xor
js
fnstsw
rolb
push
fucomip
mov
scas
iret
ds
ss
sbb
in
insb
mov
out
sub
and
loope
jmp
add
repz
hlt
mov
cmp
pop
pop
fwait
inc
jg
daa
xchg
or
mov
out
movsl
out
iret
add
cwtl
sbb
scas
push
inc
scas
gs
popa
hlt
jge
test
shl
testb
adc
mov
add
xchg
movsl
in
dec
and
sbb
sbb
scas
adc
int3
xor
loopne
test
std
cltd
mov
push
sarb
out
adc
pop
in
arpl
andl
jnp
xor
lret
addb
enter
mov
dec
inc
inc
jno
cmp
std
sbb
out
aas
div
cs
in
cld
je
call
mov
inc
ret
pop
pop
inc
pusha
test
or
pop
mov
push
mov
push
bound
jbe
gs
sbb
and
jne
in
shrb
mov
dec
cmpsb
and
ja
test
xor
sbb
fadds
rorl
sar
mov
jle
out
or
pop
push
ds
jne
in
lret
sub
mov
cmp
mov
add
outsl
pop
cmpsb
xor
in
lret
loopne
push
fwait
ja
scas
mov
mov
or
sbb
dec
aaa
data16
mov
lock
cmp
push
or
pop
jno
sub
mov
cmp
sub
mov
sbb
xorb
xchg
ret
fidivl
mov
in
or
lock
ret
pop
std
popf
add
xchg
push
jmp
add
decl
or
push
popa
adc
out
xchg
xchg
pusha
jno
push
inc
jmp
rcrl
insl
lret
sbb
push
outsl
mov
jmp
fistpl
push
fadds
sub
mov
cmc
cli
mov
dec
mov
mov
xchg
fdivl
stos
push
stos
fsubl
ja
xor
pop
adc
push
add
xor
notl
aas
adc
inc
mov
iret
ret
sbb
fstpt
mov
xchg
mov
pop
adc
aaa
mov
mov
mov
addr16
jl
shrb
stos
xchg
out
pop
sub
mov
sub
push
rol
test
pop
outsl
push
add
arpl
clc
enter
dec
push
mov
dec
and
sar
fwait
into
mov
xchg
cmp
cltd
cmp
outsl
pop
push
and
or
pop
cmp
and
aam
push
addr16
or
jbe
mov
jmp
and
mov
cmpsb
mov
fcoml
mov
cmp
lds
push
cli
jge
ja
cmp
enter
mov
rcrb
fwait
cmp
outsb
ja
rcrb
sbb
mov
adc
fadds
cmp
stos
mov
add
xor
cmpsb
loop
cmp
aas
dec
pop
jns
jmp
push
loopne
mov
dec
jo
in
cs
stc
mulb
int
ror
mov
pop
leave
fidivl
fdivs
fistl
dec
je
mov
and
push
fwait
lods
inc
lock
int3
sub
dec
xchg
cli
imul
xor
lret
lods
mov
stc
pushf
into
ror
mov
js
pop
add
adc
mov
orl
mov
imul
push
xor
mov
das
rcrb
loop
push
adc
inc
fcmovbe
imul
mov
loopne
ljmp
pop
fidivl
mov
neg
push
pop
mov
pop
cmc
cmpsb
pop
dec
sbb
or
mov
fdiv
and
cmpsl
sub
adc
fsts
ja
mov
shll
ud2
aaa
lret
pop
pushf
out
push
add
daa
lods
ja
xor
mov
xor
fsincos
insl
inc
lahf
adc
push
xor
out
mov
adc
cltd
pusha
fs
adc
into
dec
das
mov
jp
out
push
xchg
fnstcw
push
cld
mov
mov
and
inc
scas
cmp
je
push
subb
push
inc
sbb
cmp
aad
popf
xchg
nop
dec
mov
mov
xlat
pop
bound
mov
mov
pop
stos
ret
sub
jnp
cmp
xor
dec
scas
xchg
test
ret
push
gs
mov
pop
xchg
popf
sbb
jnp
xchg
lahf
mov
push
and
sbb
xor
ljmp
push
dec
mov
out
popf
sbb
insb
divb
push
test
lods
push
sarb
sti
xor
lds
addr16
mov
push
mov
sbb
fiadds
inc
out
imul
mov
mov
mov
ljmp
push
iret
add
nop
mov
sbb
daa
arpl
stos
fidivl
mov
jnp
imul
shrb
mov
dec
outsb
mov
data16
lcall
mov
stos
xor
jp
jmp
jbe
jne
loop
cmpsb
iret
cltd
push
inc
std
cmc
mov
adc
mov
loop
loope
pop
pop
mov
sbbb
add
shr
mov
jns
adc
das
xchg
aad
mov
test
lea
and
imul
cmpsl
adc
cmp
jno
ss
loopne
mov
fnstenv
or
sub
out
or
fdivl
outsl
adcl
jge
jle
test
adc
icebp
outsb
out
inc
jb
push
lret
imul
sub
sub
add
sbb
fisubs
popa
push
ret
movsl
notb
cs
adc
dec
pop
inc
aad
jb
ret
jmp
ror
push
movsb
push
mov
mov
ds
sahf
loop
and
test
inc
fisttpl
inc
gs
push
jmp
push
es
test
aas
lcall
xor
in
lea
xchg
inc
dec
inc
pushf
and
mov
icebp
inc
adc
popa
xor
enter
aas
mov
push
mov
add
addr16
and
mul
jmp
lea
pop
cmpl
imul
jns
jae
fidivrs
aam
jecxz
lcall
pop
in
cmpsb
add
sub
cmc
clc
pop
xchg
push
ret
xchg
pop
and
sub
add
jae
adc
scas
dec
test
xchg
cld
sbb
leave
fsubs
int3
hlt
mov
sub
xor
movsl
inc
mov
roll
sbb
outsl
sbb
sarl
addr16
cltd
xchg
push
fildl
cmpb
push
rcll
inc
mov
call
pusha
cwtl
lods
push
loopne
icebp
sbb
ds
repz
pop
jae
inc
dec
inc
hlt
fbld
fistpl
push
mov
sub
xchg
sub
xor
xchg
adc
or
dec
dec
fisubrl
jns
cmc
ljmp
and
push
andb
cmp
movsl
imul
gs
jl
inc
cld
in
pop
mov
cs
pop
repnz
mov
mov
mov
cmc
mov
inc
push
call
ja
sub
sub
outsl
je
aad
loope
mov
sub
adc
push
inc
fldcw
xchg
ss
xchg
outsb
into
lret
xchg
push
aaa
pop
out
mov
pop
sti
dec
rcl
outsl
jmp
sub
sub
nop
fs
push
bound
xor
jg
push
loopne
add
jp
and
popf
mov
mov
add
xlat
sbb
jb
je
add
ljmpw
sub
repnz
inc
jns
shll
xor
popf
ficomps
push
aad
inc
jo
imul
adc
adcl
mov
sbb
mov
idivb
add
nop
xor
mov
in
and
inc
sbbb
mov
cmp
or
call
repnz
arpl
adc
xchg
inc
inc
test
int
shll
stos
rcrl
add
pop
xchg
jmp
outsl
leave
adc
pop
jns
mov
sar
inc
pop
hlt
gs
dec
cld
cli
mov
sti
push
and
jno
add
jmp
and
cli
das
mov
inc
dec
mov
pop
jbe
mov
xchg
xchg
xchg
mov
loope
pop
sarb
in
push
jbe
pop
push
mov
or
push
stos
xlat
mov
ljmp
scas
pop
sti
dec
add
jmp
lret
cmp
iret
sar
inc
ja
jmp
or
stc
xlat
aad
daa
and
notl
mov
mov
into
inc
hlt
fcmovnbe
fidivrs
js
adc
in
mov
xlat
push
or
sbb
fldenv
mov
dec
add
mov
into
fs
adc
or
cmpb
pusha
je
push
cmc
ds
insl
popf
jbe
bound
stc
jno
stos
sub
push
mov
lret
add
fcom
push
mov
andl
mov
movsb
in
cmp
mov
mov
data16
xor
lods
or
lods
cmpsl
cmp
pop
divl
scas
pop
imul
inc
sub
push
imul
and
cmp
fs
xor
push
add
adc
push
popf
xchg
mov
sarb
pushf
mov
data16
mov
mov
jnp
ret
adc
out
sbbb
dec
mov
mov
mov
xlat
xor
ds
jae
inc
add
pop
jbe
push
mov
cmp
mov
arpl
adc
in
dec
add
in
xchg
dec
gs
cmp
popf
fldt
fwait
lea
jmp
in
aad
cmp
shrl
ss
mov
in
sbb
out
js
mov
test
sbb
fcmovbe
pop
ja
xor
test
incb
dec
cmp
cmp
clc
push
xchg
add
movl
imul
mov
xor
xor
mov
and
daa
push
inc
push
pop
iret
popf
popa
cmp
and
or
cmp
adc
inc
mov
out
mov
xor
cmp
xor
fistpl
or
mov
roll
aaa
pushf
dec
lahf
fwait
insl
fmuls
arpl
pushf
sbb
call
je
dec
cwtl
cs
or
pop
stos
or
add
mov
add
push
sub
cld
mov
in
add
xchg
sarl
dec
add
cmpsb
arpl
mov
icebp
hlt
sbb
std
icebp
out
test
mov
pop
insb
ret
adc
ljmp
sub
jmp
adc
fildll
stos
cmp
cmp
cld
ss
ds
sub
or
cld
fnstcw
in
insl
fisttpll
movsb
popa
imul
adc
aaa
ljmp
dec
sub
inc
shrl
stos
sbb
and
test
xchg
mov
ret
daa
repz
inc
js
push
ficoml
jge
insl
ds
pop
xor
movsb
lahf
ljmp
movups
les
xchg
adc
outsl
mov
icebp
jecxz
sub
out
in
test
fadd
ljmp
popa
xor
lds
jge
outsl
dec
je
xchg
pushf
lock
sysexit
testb
sbb
push
adc
push
loop
sub
mov
mov
icebp
sarb
hlt
adc
jl,pt
dec
inc
les
mov
ret
cltd
loop
es
jl
notl
sub
push
leave
xor
mov
mov
mov
movsb
add
fadds
arpl
push
iret
cmp
xchg
mov
loopne
pop
adc
repnz
push
xor
insb
xchg
icebp
imul
jnp
push
std
ljmp
mov
lds
sub
imul
mov
mov
push
jbe
push
pop
push
sbb
sub
int3
cmp
and
psubd
into
xchg
jb
jns
icebp
ljmp
gs
cmp
mov
or
ret
lahf
jns
cmp
gs
jmp
dec
jae
int
pop
xor
inc
adcl
dec
push
pop
pushf
inc
aam
sub
mov
stos
outsl
aas
lock
int
mov
push
aaa
pavgw
add
scas
mov
adc
push
sub
jmp
pop
shrl
shlb
mov
cli
fstl
arpl
pop
loop
jge
mov
mov
sahf
mov
pop
decl
ss
scas
sub
lret
test
je
sarl
js
xor
movsb
cmpsl
das
add
sarb
fucom
mov
or
sub
rcrb
rcrl
push
adc
hlt
addb
pop
lds
pop
sub
int3
dec
push
std
repz
pop
mov
sub
inc
pop
jge
add
addl
addl
push
jo
sarb
pop
push
loope
bound
fnsave
mov
outsb
cli
cltd
rcl
jp
sub
jg
mov
out
add
mov
mov
cltd
mov
mov
loope
std
jne
mov
lock
mov
dec
add
push
adc
enter
xchg
aas
push
and
test
mov
out
leave
xchg
test
pop
xor
dec
or
xchg
insl
leave
adc
shr
lcall
lods
or
movsl
inc
lret
jmp
ficoml
and
lea
jl
out
mov
inc
mov
xchg
cmp
cmpsb
cld
js
cmp
out
popf
fsubl
into
stos
xor
out
pop
mov
fisubrs
xchg
adc
cwtl
in
xchg
add
in
mov
mov
outsb
lods
push
imul
xchg
and
xchg
dec
xchg
repz
movsb
shrb
xchg
cmp
jl
pushf
push
scas
adc
or
iret
cmp
sub
inc
push
filds
sub
sbb
addr16
lods
stos
and
xlat
in
push
mov
int
cmp
cwtl
xor
sub
icebp
ret
fimull
into
mov
mov
inc
jbe
inc
les
pop
push
dec
int
notb
adc
add
lock
add
pop
int3
out
les
mov
scas
xor
scas
popa
or
fstpl
arpl
xor
jnp
push
mov
stos
mov
gs
xor
dec
mov
xchg
adc
push
sub
xorb
cli
mov
mov
inc
push
mov
jns
pushf
mov
bt
xchg
ficoml
mov
aam
push
fsub
adcb
bound
mov
lret
pushf
push
add
loopne
roll
daa
cli
fcoml
xor
cmpsb
repnz
xchg
pop
xor
es
int3
movsl
jecxz
sbb
pusha
and
sub
movsl
adc
insl
fcoml
cmp
icebp
jmp
jp
cmp
add
rcl
ljmp
in
adc
addr16
cwtl
sub
cmc
pop
xor
adc
xor
repnz
out
clc
jb
cmc
pop
ret
mull
adc
cmp
clc
hlt
xchg
or
push
pushf
lret
vpunpckldq
shlb
cmp
jg
xchg
cmp
ja
jbe
das
pop
sub
push
loop
mov
icebp
out
test
fbld
adc
aas
mov
mov
hlt
pop
push
xchg
out
std
insl
in
scas
pusha
cltd
or
and
mov
push
repz
rorb
lds
fstpt
movsl
adc
out
adc
aam
add
testl
popf
scas
nop
mov
mov
bound
jmp
inc
cmp
mov
xchg
enterw
xchg
dec
repz
addr16
mov
mov
std
mov
leave
repz
or
push
fld
push
push
jns
add
in
insl
nop
cmp
mov
jle
push
ljmp
aad
and
lcall
pop
inc
lock
fists
cmp
daa
inc
testl
cmc
sbb
mov
pushf
mov
or
xorb
out
cmpsb
outsl
popf
lret
scas
ljmp
imulb
scas
dec
jp
mov
push
bound
dec
sarb
and
pop
mov
cmp
push
shlb
fmul
mov
inc
leave
mov
jb
xor
push
jge
icebp
push
ds
test
cmp
mov
shlb
inc
stos
shrb
xchg
popf
adc
and
push
mov
cs
sbb
inc
js
mov
mov
ljmp
ret
sub
je
fdivrs
push
adc
fstpl
cmpb
arpl
xchg
mov
push
movsl
mov
js
mov
in
sbbl
mov
inc
adc
lock
xchg
jnp
int3
inc
mov
mov
dec
or
mov
inc
orl
push
test
scas
popf
fcompl
test
imul
adc
mov
rcll
xor
into
xchg
idiv
cld
shlb
aam
ret
scas
xor
or
xlat
xor
mov
push
xchg
loopne
xchg
jns
fsubl
mov
dec
jb
ret
fisubrs
jmp
adc
cltd
adc
adc
inc
push
adc
movsl
push
sbbl
enter
fbld
and
cltd
lock
pop
and
into
sti
dec
or
daa
in
fdiv
mov
add
cmp
or
loop
shl
sbb
jno
dec
fildl
xchg
xorl
mov
nop
lahf
adc
bswap
sub
xor
repz
stc
clc
jo
xchg
xchg
sbb
cmp
cwtl
inc
dec
das
inc
jbe
in
arpl
ja
daa
stos
lcall
inc
xchg
int
push
push
mov
mov
mov
add
push
hlt
mov
sub
data16
fildl
sti
jg
enter
lods
jl
bound
mov
into
and
loop
rorl
mov
pop
ljmp
sbb
xlat
lds
test
nop
mov
repnz
incb
sub
adc
bound
push
inc
mov
mov
pusha
pop
in
sbb
outsb
mov
aaa
outsl
xchg
inc
adc
jg
jle
insb
in
xchg
es
dec
xlat
fnstsw
in
add
mov
xor
insb
cmp
push
stc
xor
sbb
nop
jb
dec
dec
imul
lods
cmp
ss
dec
sbb
inc
ljmp
das
cld
mov
xor
mov
add
add
cmp
mov
sub
xchg
pop
and
add
pop
push
and
xchg
mov
lock
jp
rorb
and
in
and
fisubs
popa
pusha
fimuls
leave
jp
adc
sbb
push
mov
fxch
sbb
pop
inc
daa
adc
sub
repz
jp
xor
xor
sub
scas
aam
sub
stc
cmp
scas
pusha
inc
or
clc
sbb
into
int3
lret
ret
movsl
push
movsb
in
addr16
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
ret
sub
push
mov
test
fwait
adc
fnsave
data16
dec
add
call
fwait
pop
xorl
adcl
ret
or
mov
cli
fwait
mov
insl
fnstcw
adc
dec
fnstenv
mov
sub
int3
je
fwait
cmp
test
fiaddl
sbb
rorl
cs
xor
xlat
loop
cmpsl
inc
or
push
out
scas
xchg
incb
mov
test
mov
int3
xchg
xor
jmp
sbb
push
cmp
movb
fsubl
cmc
dec
or
xor
cs
lret
stos
or
xchg
dec
mov
test
and
imul
pop
test
inc
inc
adcl
and
adc
pusha
sbb
in
adcl
mov
lock
xlat
int
js
sarl
mov
out
in
mov
or
mov
ds
inc
dec
or
add
xchg
shll
aas
bound
mov
cmp
js
bound
push
lods
inc
loopne
add
adc
push
pop
mov
icebp
movsb
xchg
std
movsb
ficoms
mov
cmpsl
cmp
loopne
pop
adc
lock
inc
lds
or
loopne
mov
es
dec
adc
inc
xchg
insb
loope
call
inc
lods
mov
bound
mov
pop
lahf
xor
fstpt
and
sbb
mov
popf
lcall
test
mov
adc
or
sbb
cmp
lods
dec
out
jge
sub
and
andb
clc
mov
jo
fldl
mov
movsb
xchg
push
out
mov
add
shlb
cmp
data16
fimull
inc
jae
jg
ret
imul
lcall
adc
stos
jecxz
fsubr
fs
insl
or
mov
xor
push
je
stc
dec
les
xchg
pop
fdivp
test
push
pop
push
lea
pop
decb
std
test
decb
mov
aaa
insl
je
adc
insb
add
pop
idivb
outsl
faddp
in
xlat
scas
jecxz
cmp
fcmovne
jle
sbb
imul
clc
mov
idivl
dec
xorb
mov
addl
mov
mov
xor
sbb
fwait
mov
in
imul
cmp
cmc
movsl
xor
icebp
jns
call
dec
mov
lods
aaa
jl
mov
adc
pop
ds
pop
lea
int
daa
push
add
flds
sbb
dec
xor
pop
sbb
mov
or
sbb
notb
and
out
in
test
rcll
and
dec
enter
cli
lret
je
jg
pop
into
cmp
popf
jb
sahf
movsb
stos
lock
shll
cmp
pusha
test
cltd
sar
into
xor
jns
imul
dec
cltd
cmp
je
add
dec
xor
sub
fisubs
push
add
push
rcl
xchg
and
push
cs
jo
nop
dec
xor
sahf
test
adc
jmp
inc
popa
je
pop
lcall
fsubl
sbb
pop
cli
jmp
and
inc
push
dec
ss
mov
cmp
loopne
pop
in
or
xchg
or
jo
dec
shll
cmp
xchg
std
mov
jb
push
insl
cmc
test
or
dec
jecxz
cmp
push
jmp
bound
cwtl
in
dec
insb
mov
xor
iret
pop
pop
pushf
aam
ret
inc
xchg
sbb
lea
mov
mov
mov
movsw
or
or
mov
sete
mov
test
sbb
inc
cmc
clc
xchg
jae
inc
add
xor
in
sahf
xlat
fcompl
aad
add
lret
cmpsb
mov
stc
roll
xlat
popf
jno
addr16
cmp
rclb
int
sub
jmp
addr16
xor
dec
inc
mov
cmc
pop
dec
int
pavgb
dec
jge
ss
in
hlt
adc
and
sbb
xchg
test
das
into
mov
cli
int
cmp
or
fucom
and
jl
stos
sbb
call
je
push
pop
fwait
xchg
dec
mov
js
ds
inc
cmpsl
or
pop
int3
push
xor
mov
pushf
pop
mov
xchg
scas
stos
push
lahf
mov
pushf
hlt
aad
jecxz
out
lods
cld
cmc
enter
and
jbe
cs
jmp
jnp
sti
lock
loop
shl
cmp
jnp
mov
cmp
int3
sbb
inc
sbb
xlat
flds
and
addb
loopne
xchg
pusha
xor
dec
dec
jge
cmp
shlb
pop
rcrb
cs
xlat
mov
adc
outsb
xchg
pop
and
inc
ud2
mov
inc
int
lea
inc
cld
pop
and
jmp
pusha
je
jl
mov
fisttpll
pusha
mov
pop
adc
pop
cs
inc
xchg
nop
jge
jge
gs
cmpsl
hlt
jp
push
sub
and
test
test
test
or
dec
test
mov
outsl
add
popa
aaa
fstpt
push
cli
jmp
testb
imul
jmp
add
xchg
scas
push
cmp
fsubl
dec
inc
xchg
test
mov
pop
cmp
xchg
xor
lds
ret
sbb
xor
mov
jg
aaa
lock
xchg
aas
add
fwait
mov
test
lcall
and
push
cmp
lods
out
mov
mov
jecxz
jnp
dec
and
stos
cltd
into
jb
sbb
sbb
fldl
daa
cmp
and
push
xchg
mov
push
lods
enter
idivl
jg
and
adc
fmull
xor
arpl
scas
pusha
jae
sbb
lods
cld
aam
and
mov
in
xchg
dec
cmpsl
pop
push
mov
sub
stos
stos
jge
pop
outsb
add
ret
add
enter
xchg
shll
lcall
enter
jne
xchg
dec
icebp
cmc
int
cmp
cs
inc
cmp
ret
and
fstpt
sbb
pop
lahf
loope
lea
jecxz
mov
dec
inc
mov
lods
loopne
push
sub
add
cmpsb
sbb
adc
outsl
dec
inc
ret
jmp
sbb
mov
pop
in
pop
test
int3
jae
sahf
mov
and
dec
xchg
out
dec
push
push
mov
popa
pop
scas
xor
movsl
jno
cmpsl
xor
ret
enter
adc
sbb
push
cli
mov
sarb
push
cs
pushf
fadds
inc
aad
inc
in
xchg
inc
popf
inc
jb
insl
push
sbb
outsb
stc
cmp
push
lea
movsl
mov
sub
cmpsb
mov
int3
push
roll
add
lods
icebp
cwtl
je
cwtl
imul
add
and
jno
test
inc
fcomps
inc
test
mull
cmp
btr
mov
stos
rclb
notl
jnp
xchg
fstpl
xor
cmc
jecxz
loopne
pop
test
mov
sar
stos
and
pop
adc
sub
cltd
int3
jp
mov
fs
cmp
jecxz
inc
mov
cmc
inc
cli
inc
xor
sub
int3
in
aam
scas
sub
xchg
je
cmp
add
push
or
insb
js
xchg
faddl
push
cmp
xchg
jnp
enter
xor
nop
mov
and
sti
fists
mov
mov
stc
mov
arpl
loop
lods
mov
daa
and
pop
fidivrs
push
add
xchg
icebp
sub
es
mov
adc
ret
xor
ret
sahf
hlt
jl
lret
push
aam
xchg
aaa
inc
inc
rcrl
into
out
aaa
dec
in
xor
xchg
add
test
cs
mov
and
sbb
or
sbb
hlt
xchg
mov
and
popa
or
sub
xchg
es
fsubrs
jns
inc
pop
jge
ds
xor
mov
cmpsl
hlt
xchg
xchg
cmpl
sahf
in
xchg
sub
push
cmp
lret
xchg
fs
sbb
dec
jmp
fdivs
mov
hlt
sti
jle
fcomp
imul
push
mov
mov
icebp
xor
les
lret
adc
mov
lea
and
std
cmp
xchg
lds
iret
shl
ficoms
dec
sbb
jmp
mov
mov
leave
push
sbb
cwtl
jle
push
xor
xlat
lret
cmp
add
loop
loopne
lahf
or
cmp
mov
data16
pop
in
lods
mov
test
inc
dec
lret
pop
xchg
push
mov
sub
cli
sub
mov
mov
jecxz
mov
lret
loope
popf
insl
lds
xchg
rcll
loopne
inc
pop
int3
incb
and
pop
jbe
cmp
bound
into
jp
push
inc
and
add
xlat
mov
mov
jno
pop
inc
ss
sbb
js
aam
into
mov
lea
pop
xchg
or
fidivrs
push
xchg
aam
sti
leave
addr16
xchg
popa
insb
call
ljmp
pop
or
mov
push
imul
sub
pushf
sbb
sub
and
dec
aaa
cmc
adc
js
mov
or
cmp
divb
iret
int3
add
push
enter
lds
pop
dec
pop
gs
das
mov
add
cwtl
movsb
lods
sub
je
push
insb
cmc
icebp
ja
xchg
ret
cmpsl
lret
sub
mov
test
negb
lds
xlat
mov
fs
fldt
out
lcall
add
lea
lock
mov
sub
loop
inc
inc
sub
inc
push
inc
cmp
pusha
leave
push
push
lods
push
hlt
fisttpll
shl
int3
jp
dec
test
adc
rorb
xchg
cld
int3
outsb
pop
cmpsb
loopne
dec
enter
or
jle
repz
mov
push
push
test
inc
leave
lods
leave
adc
jmp
iret
mov
in
mov
mov
fdiv
mov
mov
push
push
lret
cmpsb
pusha
movb
call
cmp
push
xor
movsb
sub
pushf
cwtl
sbb
mov
pop
aas
adc
shrb
cmpb
into
rorb
test
mov
push
jbe
sub
or
stos
imul
les
xchg
and
leave
adc
lcall
icebp
jmp
push
xchg
call
adc
mov
incl
addr16
cmp
pop
adc
push
or
mov
and
adc
jb
mov
pusha
dec
lock
shll
gs
add
mov
cmp
push
push
cld
mov
jmp
ret
scas
aad
mov
sub
clc
lds
testb
sub
pop
insb
scas
js
mov
decb
jb
jae
jle
cmp
repz
xor
pop
insb
jno
mov
xlat
or
stc
push
int3
dec
rorl
arpl
xchg
pop
mov
jnp
and
pop
push
bound
fdiv
add
jnp
adc
loopne
pop
test
or
filds
xchg
mov
dec
les
dec
cmpb
add
xor
xor
push
xchg
inc
rolb
adc
mov
mov
in
mov
add
icebp
add
and
mov
insl
stos
push
cmp
jo
andb
sub
daa
add
mov
or
out
or
rcll
rolb
fidivs
data16
in
shlb
cmp
inc
or
inc
out
cmp
faddp
imul
sbb
mov
jo
test
or
lcall
push
adc
mov
push
out
sbb
dec
adc
das
and
jecxz
pop
loop
pusha
out
mov
push
xchg
ficomps
ret
pop
dec
push
mov
shlw
lahf
pop
jl
jns
pop
xor
sbb
mov
sub
inc
or
dec
ret
iret
daa
push
popa
inc
ficompl
jg
popf
lods
mov
xor
fistpl
popl
mov
adc
sbb
lcall
jle
pusha
ljmp
jp
outsb
dec
inc
jbe
or
mov
arpl
jg
dec
mov
call
sub
fstpt
lcall
iret
mov
in
inc
add
xlat
cltd
iret
loop
shll
adc
fwait
pop
add
xchg
rclb
mov
out
fs
push
scas
jo
xchg
mov
push
and
cmc
cli
mov
leave
rcll
jmp
cld
dec
dec
jmp
lret
jnp
push
call
jmp
loopne
or
and
mov
push
lea
movsb
push
testl
in
call
push
loop
aam
es
mov
fwait
adc
stos
int3
pop
mov
push
adc
out
sarl
mov
inc
xchg
dec
cmc
aad
dec
insl
sub
cmpsb
xchg
xchg
arpl
sbb
sub
lds
mov
and
lods
add
pushf
repz
xlat
inc
xchg
nop
pop
call
aas
push
arpl
loopne
cmp
push
data16
sub
xchg
movsl
mov
int
ret
cli
fisubrs
pop
and
xchg
or
outsl
or
rolb
adc
adcb
gs
xchg
add
mov
and
stc
ja
push
repz
sub
pop
and
cmp
push
aas
int3
jl
outsl
pop
sub
lods
cmp
lods
in
enter
dec
enter
xchg
mov
and
adc
daa
mov
shl
popf
cli
and
push
out
pop
mov
into
call
stos
xor
cmp
fldt
leave
or
bswap
pop
push
movsb
repz
pop
pop
mov
sub
xorb
in
lock
lods
mov
je
mov
add
pop
jne
in
movsl
mov
xor
xchg
bound
imul
sbb
loopne
aam
cmc
leave
sbb
mov
sbb
jle
sbb
stos
push
imul
not
mov
add
adc
fstpt
pop
ss
daa
scas
nop
pop
xchg
mov
insl
xchg
jl
std
xor
jecxz
jecxz
call
repnz
xchg
jecxz
cmp
out
inc
or
stos
outsb
jl
sub
ret
inc
adc
std
incl
mov
pop
mov
mov
pop
out
sub
ret
data16
pop
mov
push
push
int3
ja
xchg
lret
or
mov
jns
jbe
pop
sbb
xor
das
ljmp
idivb
and
iret
iret
push
inc
loope
mov
xchg
jecxz
insb
test
fwait
lds
sti
add
rol
mov
repz
inc
xor
mov
mov
push
push
test
xor
daa
mov
dec
and
add
sub
in
sbb
xchg
gs
mov
aam
sbb
and
leave
pop
fwait
mov
nop
into
sti
jge
adc
sbb
xchg
sbb
lret
jae
add
cmp
mov
mov
mov
mov
pop
insb
sti
or
xchg
push
into
push
out
enter
push
jno
mov
push
or
add
in
xor
int
hlt
pop
or
es
adc
mov
xchg
popa
das
imul
fildll
out
popa
mov
mov
sbb
mov
test
xor
pop
popf
test
add
ljmp
push
add
hlt
cmpsb
out
pop
insl
fadds
push
cmp
lods
lock
push
pop
mov
cwtl
add
rcll
je
inc
jne
jge
je
adc
cmpsb
ret
inc
movsl
call
loopne
or
xor
push
mov
xchg
adc
dec
inc
rcrl
add
or
cmp
faddp
decl
xchg
sahf
cwtl
adc
fwait
movsb
ds
test
ret
jae
int3
mov
shrb
and
pop
sbb
or
lods
popf
jg
jo
and
dec
bound
rep
xor
int
bound
fxam
adc
sbb
cli
int
nop
nop
xor
mov
test
pushf
stc
sahf
pop
insb
push
subl
aas
leave
add
adc
dec
jnp
adc
loope
xlat
jno
sub
mov
push
dec
xor
xor
sub
adc
je
and
cmc
dec
mov
xchg
xchg
push
sub
adc
repnz
out
sub
outsb
xchg
adc
jle
xor
insb
daa
xorl
pop
stos
push
pop
clc
xor
xlat
cmpsb
sbb
adc
xchg
sub
mov
lods
xchg
pop
daa
and
and
iret
sahf
jnp
popf
pop
movsl
dec
jbe
lahf
adc
sbb
xchg
xchg
ljmp
adc
arpl
mov
jbe
pop
movsl
das
dec
pusha
cmpsl
push
push
and
push
test
mov
mov
in
jmp
pushf
jo
mov
jge
rclb
sub
cmp
ret
or
push
xchg
popf
push
stos
xor
lahf
rcll
lret
std
data16
xchg
dec
push
mov
outsb
jl
jns
arpl
shlb
lret
mov
in
arpl
mov
subb
lock
or
add
cmp
mov
ds
push
outsb
rorl
cmpsb
mov
mov
add
mul
xor
lcall
lods
lcall
mov
push
arpl
mov
imul
jns
cli
cli
cmp
push
sub
mov
or
inc
cwtl
js
xchg
stc
fisubs
jne
inc
push
add
fldcw
push
stos
lea
cmp
mov
test
dec
jnp
loope
add
push
inc
and
cwtl
cmp
mov
ficomps
in
xchg
xchg
sub
and
jno
push
pop
push
clc
popf
movsl
hlt
mov
mov
aaa
jnp
cltd
cmpsl
icebp
cli
les
adc
ss
repnz
sbb
xchg
jge
in
out
mov
cmc
std
lret
mov
sahf
mov
out
jge
push
gs
and
addr16
dec
aas
push
mov
iret
xor
dec
ret
rolb
cmc
rclb
ljmp
adc
push
mov
rcll
lret
mov
faddl
scas
test
push
mov
bnd
adc
shlb
push
testb
dec
loopne
mov
jl
test
insb
js
leave
jecxz,pn
pop
push
pop
std
or
jae
addr16
frstor
push
mov
add
inc
sbb
mov
inc
scas
lods
js
je
adc
push
xor
and
jp
sbb
cmpsb
cmp
add
aad
push
mov
or
xor
sub
or
int3
sti
leave
mov
lea
mov
adc
scas
pushf
mov
andl
inc
cmp
popa
mov
push
fwait
xchg
ret
or
cmpb
pop
repz
fs
pop
xorl
insb
cli
add
lods
scas
xchg
cmp
in
xchg
cmpsl
mov
insb
mov
icebp
out
movsl
frstor
inc
rorb
shr
lods
sahf
cld
fildl
push
add
and
sub
mov
or
xchg
push
jb
push
adc
jge
jp
scas
dec
loop
dec
fwait
or
xchg
lahf
cli
mov
xchg
mov
aad
shlb
mov
vmovshdup
out
lds
adc
sbb
jnp
lcall
mov
sub
cmpb
loopew
lcall
enter
out
xchg
mov
gs
push
xor
fmull
jae
ret
aad
dec
enter
pop
fdivs
adc
ljmp
shrl
inc
daa
dec
xchg
jae
std
xchg
sti
hlt
mov
jne
sub
dec
cltd
add
fsubrl
test
movsb
mov
add
ret
movsl
pop
dec
jge
aam
sub
out
fs
sbb
imul
insb
shrl
dec
cmc
xchg
sahf
cmovae
lahf
push
push
mov
lret
sub
lods
mov
push
and
jp
int
pop
jg
out
push
stos
jbe
in
cmp
pop
and
cmpsl
fisubs
jo
mov
inc
inc
in
pop
inc
jnp
test
sub
repz
pop
fucomip
mov
out
jnp
mov
xchg
pop
setne
das
add
mov
sbb
mov
cmp
test
bound
mov
jbe
pop
jae
daa
mov
andl
fs
jmp
push
scas
cmp
sbb
iret
inc
and
push
fistpl
xor
lea
mov
test
mov
bound
pop
outsl
mov
cld
xchg
add
cltd
arpl
adc
cmpsb
push
xchg
mov
jge
mov
addr16
inc
call
sub
rcr
sbb
jle
stc
mov
mov
jno
out
mov
sbb
jge
jl
xchg
mov
imul
bound
mov
mov
adc
insb
adc
out
push
ret
and
inc
cmp
scas
cld
fsubrs
jecxz
push
mov
jg
inc
push
xor
jb
pop
push
aad
fsubrl
sub
push
push
icebp
jmp
daa
sahf
enter
fimuls
sub
adcb
push
dec
mov
imul
in
push
orb
sub
or
stos
xlat
clc
or
push
into
stc
jnp
mov
fs
sahf
xor
scas
jbe
mov
inc
ffree
out
fdivrp
test
jae
push
dec
push
pop
inc
cwtl
inc
push
and
sub
mov
jo
clc
jae
mov
or
xchg
sub
std
fsts
lods
xor
dec
jmp
mov
arpl
es
js
lods
or
loope
sub
flds
cmpsl
pop
mov
inc
cmp
inc
int
jnp
push
clc
dec
arpl
push
test
mov
push
std
fsubrs
rol
lret
lahf
cld
ss
insl
fbld
or
push
sbb
lds
data16
mov
daa
lds
push
imul
popf
cwtl
incl
arpl
adc
mov
jl
es
or
and
push
or
jo
add
lcall
xchg
push
mov
inc
adc
xchg
out
loope
xchg
cmp
insb
sub
xchg
pushf
mov
into
add
rcrl
xor
rcrb
subl
stos
and
and
imul
dec
enter
ret
adc
jbe
inc
and
in
xor
sbb
insb
scas
push
sub
jge
and
add
xor
out
adcb
mulb
or
sbb
rol
lcall
ret
lea
daa
xchg
jp
pop
cmp
daa
mulb
jl
cmp
mov
jb
test
mov
sub
idiv
into
test
push
ret
fwait
sbb
fnstenv
int3
mov
fimuls
and
mov
movsl
scas
into
push
mov
outsb
push
pop
rorl
sub
pop
shlb
shlb
push
jnp
push
jecxz
mov
arpl
xor
in
int
adc
lret
dec
lret
and
mov
stc
test
inc
and
mov
mov
inc
pushf
std
pandn
push
jno
mov
mov
shr
iret
xchg
and
int
mov
in
sub
clc
inc
int
jecxz
cmp
shrl
std
insl
cmp
jnp
adc
xchg
xchg
push
xor
jl
mov
mov
aas
pop
xchg
pop
pop
orb
pop
mov
mov
aas
aas
add
daa
adc
fstpl
loopne
sbb
jp
std
jo
mov
adc
icebp
inc
lds
cmp
push
nop
inc
dec
paddsw
xchg
imul
sub
adcb
ja
cmpb
scas
clc
and
dec
lret
popa
adc
aad
leave
push
push
out
arpl
xlat
jg
add
fdivrp
sahf
popa
lcall
mov
mov
es
int
jne
jb
xchg
inc
mov
clc
rep
pop
dec
adc
cld
sahf
ret
xchg
sub
imulb
mov
mov
in
xrelease
push
inc
mov
sbb
mov
cwtl
xchg
js
mov
shlb
aad
or
xor
pop
das
jns
shl
in
pop
loope
push
jp
fnsave
fimull
aaa
mov
jmp
xor
pop
mov
outsl
lds
sub
adc
loop
mov
dec
mov
push
mov
and
sar
or
mov
inc
add
mov
popa
hlt
and
sub
sarl
or
ds
adc
ret
sub
jne,pt
xor
popa
hlt
in
pop
movb
xor
sub
aam
jns
mov
ss
add
insl
or
push
jg
cwtl
ljmp
call
push
and
pop
mov
hlt
jae
and
lcall
or
in
mov
inc
mov
adc
vpshuflw
xchg
cmpsb
add
shr
mov
lret
or
push
fisttps
fxch
adc
push
aad
jae
cmp
into
enter
dec
xor
ficompl
xchg
sbb
mov
jp
jle
incb
addb
mov
xor
jmp
loope
rol
inc
pop
xor
dec
dec
xchg
lea
iret
les
repnz
int
pop
mov
push
out
lahf
imul
xor
mov
es
dec
sbb
icebp
mov
cmpsb
pop
xchg
mov
cld
lahf
or
outsb
pop
pop
test
sub
icebp
add
or
in
sub
cmp
pop
mov
pop
notl
imul
fstl
in
inc
adc
or
mov
adc
dec
rcll
out
in
pop
cmp
push
les
xor
and
jge
adc
dec
mov
dec
xchg
fidivrl
aam
pusha
sub
mov
in
stos
andb
dec
xor
xor
arpl
dec
sti
punpcklbw
fsubrl
lret
mov
cwtl
mov
out
sti
movsl
mov
outsl
jne
push
loope
inc
adc
bound
push
cltd
xchg
sbb
test
rol
dec
push
mov
dec
sub
fwait
mov
inc
ds
arpl
iret
movsb
dec
sub
and
imul
ret
sub
out
cwtl
outsb
divb
ror
sub
dec
lea
adc
jle
scas
dec
mov
sub
mov
jmp
pop
loopne
or
mov
push
shrl
pop
imul
fucom
xchg
lods
pop
aaa
mov
lret
sbb
movsb
pop
and
test
movsb
mov
cs
cmp
mov
icebp
sbb
sbb
jp
es
loop
adc
andl
or
push
repz
test
pop
jo
shrl
sbb
pop
bswap
repnz
call
cmp
xor
les
lret
mov
mov
out
loopne
ja
lret
lret
mov
push
lcall
out
sbbl
scas
lahf
aas
call
mov
jno
xchg
call
test
and
or
sub
lret
xor
push
push
mov
subb
hlt
xchg
mov
fdivl
xchg
pop
std
shll
lods
mov
ja
mulb
mov
cli
rolb
mov
sti
pop
test
es
jle
cmpsb
cmp
mov
mov
cmpsb
pop
or
int3
icebp
fimull
jns
shrl
adc
in
mov
lcall
push
adc
mull
popa
mov
push
xor
mov
inc
add
mov
mov
add
xchg
adc
ja
pop
sub
mov
aaa
inc
aas
jmp
xor
add
lea
shlb
cmp
mov
mov
shrb
mov
leave
jg
sbb
jmp
leave
gs
aam
jno
int
adc
add
adc
ss
xchg
mov
lret
add
jne
dec
cmp
or
sbb
hlt
cli
mov
stc
in
stc
mov
jne
add
dec
test
cmp
or
rorb
shrl
sub
sbb
loopne
jmp
cmpsb
jmp
mov
into
sbb
bound
xchg
mov
fwait
lods
call
fists
mov
xchg
pop
test
jge
inc
pushf
adc
filds
push
adc
adc
cmp
push
lcall
aaa
cltd
add
dec
pop
stc
sbb
call
sahf
sahf
mov
add
daa
rcll
xlat
xor
bound
aas
push
xor
push
outsl
mov
out
inc
loop
sub
push
lcall
add
jo
push
lods
xor
jecxz
daa
sub
gs
or
cmc
and
daa
jbe
or
xchg
xor
add
dec
sbb
lock
pop
push
outsb
pop
xchg
int
inc
mov
jmp
repnz
jae
add
cmp
fnsave
mov
pop
pushf
nop
mov
jmp
pop
arpl
xchg
subl
pop
lcall
fnstsw
xlat
push
cmp
lods
lods
xchg
inc
leave
sub
mov
shlb
fidivs
mov
inc
out
sub
aas
int3
lcall
push
leave
and
pusha
sbb
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
jo
jbe
lods
dec
jbe
dec
mov
