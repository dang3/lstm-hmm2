push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
push
call
sub
neg
sbb
inc
ret
push
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
xor
lea
mov
xor
jmp
test
jne
cmp
jle
lea
mov
sub
mov
add
roll
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
xor
pop
pop
ret
push
mov
push
call
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
push
push
push
mov
push
push
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
andl
andl
push
push
push
call
movl
jmp
xor
inc
ret
mov
movl
movl
cmpl
je
push
push
call
cmp
jne
mov
mov
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
push
call
cmp
jne
movl
jmp
andl
cmpl
je
push
push
push
call
mov
mov
and
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
add
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
push
call
push
call
mov
mov
add
add
mov
mov
mov
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
push
push
pushl
push
call
add
mov
mov
push
call
leave
ret
int3
int3
int3
nop
sub
int3
int3
int3
int3
int3
int3
neg
jmp
or
or
or
push
daa
into
mov
sbb
pop
pop
les
add
pop
or
stos
mov
ja
aad
fldt
cwtl
jo
stos
outsb
sbb
cmpsb
jne
je
jnp
pop
inc
mov
pcmpgtw
test
loope
je
cmp
insl
cld
add
xchg
or
sarl
jb
daa
std
fwait
jns
loopne
xchg
addb
fs
frstor
in
pushf
push
add
cmpsb
pop
add
adc
xor
dec
addr16
push
xchg
mov
aas
stos
negl
fnstsw
sbb
stc
aad
mov
add
cmp
jge
mov
sub
cmpb
pop
lods
inc
mov
jmp
add
ror
rcll
repz
xchg
rep
inc
xchg
cwtl
jle
cmpsl
pop
in
add
mov
mov
mov
into
cpuid
scas
scas
enter
mov
xchg
mov
adc
or
inc
sub
and
push
dec
xor
fadds
insl
dec
pop
mov
push
in
push
jge
in
push
out
mov
clc
stos
outsb
xor
xchg
addr16
mov
movlps
jecxz
repnz
lock
das
dec
cli
pop
sbb
es
iret
sub
fisubrl
mov
push
mov
jge
cmpsb
xchg
jl
stos
mov
xlat
and
cli
int3
int
push
pusha
mov
inc
sti
dec
inc
hlt
xor
push
ret
div
imul
sbb
lods
insl
dec
jp
or
testb
mov
loopne
ficoml
pop
and
cwtl
imul
in
sub
cli
dec
lea
iret
push
test
aad
or
or
fdivp
push
std
leave
pop
bound
in
push
lock
daa
in
inc
rol
dec
leave
arpl
ljmp
xchg
fwait
sbb
add
pop
adc
pop
sbb
movsb
xor
cmpsl
cmc
or
sti
xor
mov
jno
addr16
xor
lret
pusha
mov
es
mov
push
das
xchg
ret
iret
mov
or
jne
push
adc
into
add
cmc
mov
fmull
scas
cmc
inc
in
mov
gs
test
xor
pop
jg
ret
aaa
fiadds
sbb
mov
popf
lcall
push
and
mov
mov
aam
aad
mov
orl
pusha
pop
orb
xchg
xor
orl
lds
lahf
mov
adc
shrl
dec
or
shll
xor
aad
mov
add
xchg
push
out
cld
push
jecxz
push
loop
adc
in
adc
addr16
pop
mov
adc
sarl
dec
inc
pop
pop
int
loopne
mov
les
xchg
xchg
dec
cmp
sub
add
mov
mov
add
push
add
rorl
inc
sbb
cmp
xchg
outsl
xor
lret
push
fs
data16
jmp
fildl
iret
aad
or
lahf
push
mov
test
mov
in
stos
sarb
and
jnp
les
sti
aam
sub
mov
xor
xorb
push
lahf
nop
or
xor
push
sbb
mov
outsb
pop
jmp
test
and
sbb
in
mov
xchg
les
outsb
rolb
jg
jb
test
mov
mov
adc
iret
push
mov
and
hlt
subb
test
in
lods
mov
sub
les
insl
inc
dec
jge
test
or
movsb
ret
imulb
dec
and
sub
rolb
sub
fnstenv
sbb
jg
push
loopne
das
das
dec
test
loopne
loop,pt
push
arpl
fsubrl
inc
aaa
fwait
jns
pop
push
and
adc
push
add
pop
ss
add
pop
mov
jle
outsb
iret
movsl
mov
in
inc
hlt
cmp
movsb
or
cmpsl
stos
mov
cs
jle
ret
les
adc
xchg
int
mov
xchg
and
aaa
push
dec
push
cmpsl
les
or
mov
cmpsb
popf
popa
mov
sbb
cltd
movsb
repnz
cltd
xor
ljmp
dec
loop
pop
cmpsl
xor
xchg
arpl
inc
or
jl
add
je
shll
bound
scas
ret
into
mov
adc
sbb
dec
xorb
mov
push
pop
cmp
cmp
xchg
test
hlt
fisubrs
ret
sub
out
repz
and
cmpsb
mov
or
arpl
jb
pop
test
aam
adc
je
jae
andl
jl
popf
xchg
sbb
dec
mov
loopne
call
push
ljmp
sbb
mov
es
inc
inc
test
loope
inc
mov
into
jo
dec
pop
jne
adc
icebp
xor
fisubl
lock
push
dec
outsl
pop
ss
sti
cmpsb
mov
adc
out
subl
dec
xlat
mov
lods
ss
push
popf
aaa
dec
flds
add
sub
imul
movb
subb
push
xor
mov
iret
lods
out
xor
ds
push
fwait
rorb
cmp
push
mov
mov
movsl
jbe
je
scas
pop
std
dec
out
and
push
xchg
mov
fbstp
mov
jmp
or
push
cmp
jg
mov
rcr
cmp
mov
push
push
mov
sbb
and
aam
push
cmc
xor
or
imul
jno
xor
popa
adc
cmp
cmp
cmp
add
sbb
call
mov
xor
out
sub
cmp
mov
pop
into
sbb
decl
pusha
ret
xor
sbb
dec
sub
add
in
or
jnp
pop
add
popa
sahf
stc
lock
mov
jo
daa
xchg
fs
leave
inc
sbbb
xchg
inc
add
sub
sbb
jecxz
xchg
dec
xchg
in
mov
test
cmpsb
mov
fxch
xlat
xor
int
iret
das
mov
inc
inc
jne
je
jb
jp
xor
daa
jns
adc
iret
jne
sub
add
cmp
mov
lea
je
cld
or
mov
inc
mov
outsl
xor
fstl
addr16
lock
mov
punpckldq
push
mov
lret
and
call
outsb
cltd
mov
or
xor
dec
leave
adc
pop
mov
mov
in
push
or
js
lcall
inc
xchg
in
mov
ret
lea
repnz
mov
mov
jecxz
push
loope
adc
pop
hlt
je
cltd
xchg
data16
inc
adc
sub
outsb
cwtl
xor
shll
pushf
push
movsl
and
pusha
xor
lret
inc
and
fwait
xor
rcll
aaa
adc
xchg
dec
fwait
ret
loopne
mov
repz
jecxz
mov
cmc
inc
test
aam
push
xchg
jl
cmp
das
pop
inc
movsb
xchg
xchg
push
cltd
mov
xchg
testl
or
mov
cmpsl
lods
js
add
and
push
outsb
adc
shll
and
jp
pop
mov
fwait
mov
rcrb
or
mov
aam
sbb
dec
mov
xchg
jb
mov
jle
fimull
sbb
dec
push
loope
push
sbb
mov
rclb
pop
add
fcoml
or
sub
inc
jb
xor
cmpb
lods
gs
dec
icebp
cmp
xor
and
inc
mov
insl
sbb
in
xor
push
aas
pop
or
ja
adc
push
adc
lret
cltd
scas
inc
push
xor
jb
repz
mov
add
loope
sbbl
aad
je
adc
sub
int3
ja
jge
aad
arpl
ficoml
insl
fidivs
imul
jmp
and
mov
xchg
addps
or
add
ja
getsec
and
and
or
arpl
mov
ja
adc
xchg
shrl
xchg
lods
fcomip
enter
inc
jo
gs
jmp
pushf
inc
xor
loope
idivb
jecxz
xchg
xchg
std
lds
adc
dec
orl
mov
sbb
xchg
aas
call
cmpsl
mov
inc
adc
or
inc
ja
ds
icebp
js
or
push
pop
outsb
or
bound
mulb
xorb
sahf
das
xchg
push
movsl
fsts
enter
es
out
aad
mov
dec
pushf
nop
clc
sar
push
sub
add
cmp
push
testb
sahf
cli
incl
sahf
js
inc
pusha
mull
inc
jb
outsb
movsl
lock
cmp
cmp
lret
push
push
jl
popa
sbb
fmul
add
cmpl
cmp
cmc
or
xchg
sbb
ret
lea
sub
or
shrl
and
fidivl
jae
cwtl
jns
sbb
es
repz
pop
dec
orb
aaa
sbb
hlt
pop
jae
jp
sub
mov
dec
push
rcrb
pop
sti
jns
mov
jl
or
pusha
insl
mov
shrb
inc
pop
xchg
inc
inc
jl
xabort
inc
push
mov
outsl
dec
mov
pop
pop
mov
sbb
or
mov
mov
pop
or
test
push
sbb
cmc
jle
jbe
pusha
loopne
cs
mov
xor
scas
lret
sub
sti
in
mov
mov
fs
add
pop
jnp
test
mov
outsb
adc
xchg
mov
frstor
jo
push
mov
pusha
pop
out
jg
mov
pop
cmpsl
sub
pcmpgtb
and
sbb
iret
scas
sub
xlat
sbb
enter
and
test
cmpl
fstpt
aad
xchg
push
in
lret
leave
cli
and
stos
push
testb
xor
out
movl
ljmp
das
xchg
jne
and
mov
jl
and
inc
adc
lea
jbe
stos
ds
into
int
jle
xor
cmc
jp
mov
xchg
pushf
insl
or
hlt
jb
or
mov
idivb
mov
adc
pop
insb
ret
jne
arpl
in
xor
addr16
je
xchg
adc
mov
pop
fnstenv
mov
mov
or
sahf
addl
repnz
test
movsb
into
xchg
repnz
push
and
iret
mov
cs
ds
and
push
lea
push
in
push
loopne
popf
adc
in
push
test
stos
ffreep
xchg
lea
test
fisubrs
or
mov
rcl
dec
mov
adc
add
aad
in
fnstsw
aas
dec
enter
jno,pn
icebp
cltd
pop
in
lods
xlat
dec
int3
sarb
pop
fldt
mov
mov
sahf
ja
lcall
fs
fdivrl
xchg
stos
xlat
push
ret
sub
push
push
mov
mov
fwait
cmp
mov
repnz
inc
inc
jne
sbb
shll
loope
insl
sub
das
out
jge
in
movsl
int
or
fcoml
mov
add
push
fdivrs
add
dec
pop
dec
mov
rcll
inc
inc
cmc
push
cli
out
pop
fsubs
adc
pop
mov
pop
jo
data16
mov
pop
paddsw
arpl
lret
add
dec
in
insl
lods
insb
jg
mov
push
mov
inc
jae
addr16
daa
or
push
pusha
call
ja
enter
or
mov
mov
fildll
cmpsl
fistl
js
and
inc
sbb
test
mov
int3
out
cwtl
pop
inc
sub
ficompl
mov
sbb
xchg
jle
loop
sbb
xor
xor
pop
je
call
lret
lret
sbb
mov
dec
mov
test
and
push
adc
data16
lods
imul
leave
sbb
cmp
and
mov
pop
imul
out
arpl
gs
popa
rcl
add
cmp
mov
shlb
ret
xrelease
sub
jp
int
stc
sbb
adc
add
push
pop
pushf
mov
push
int3
aad
adc
mov
sub
leave
push
push
loope
or
mov
cmp
pushf
orl
fcomps
sbb
sub
roll
and
mov
inc
inc
cmp
insl
xchg
out
mov
out
icebp
mov
xchg
and
and
jmp
adc
dec
into
xor
xor
jne
popa
test
mov
cmpsb
cwtl
cmpsb
call
aad
int
cmp
test
or
push
or
add
cmp
or
or
mov
mov
movsb
mov
arpl
mov
sbb
jbe
pusha
inc
sub
arpl
push
mov
stos
cmp
xchg
lahf
push
adc
test
sub
fs
lret
js
push
pop
add
ret
rcll
cmpsl
mov
cmp
jbe
ja
cmp
loope
mov
mov
mov
ja
fwait
mov
xchg
cmc
shrb
or
or
sub
popf
xchg
xchg
jecxz
inc
xor
into
daa
test
mov
out
fcmovnbe
or
int3
mov
cltd
push
subl
xor
add
scas
int3
xchg
and
lret
imul
sarb
and
push
out
test
stc
jge
sbb
push
push
ret
leave
ds
adc
sub
cmp
mov
cmp
mov
clc
add
sub
pop
mov
divb
std
adc
cmp
xlat
scas
mov
xchg
aam
adc
adc
or
push
roll
mov
inc
les
mov
inc
xchg
jle
xlat
push
out
or
aaa
lret
xor
ror
lret
dec
inc
add
out
lods
jb
inc
cltd
cli
pusha
daa
sub
mov
mov
add
xor
push
inc
cmp
xchg
sahf
stc
jge
lcall
or
pop
pusha
push
fcomip
pop
push
hlt
xchg
and
mov
mov
iret
test
imull
jnp
xlat
mov
jne
pop
mov
and
cmp
mov
xor
bound
adc
lds
pop
pusha
mov
pusha
aaa
in
dec
inc
push
pop
adc
iret
cmpsl
mov
inc
or
push
call
sti
aad
cs
lret
mov
enter
adc
add
ja
jmp
in
pop
dec
xor
dec
mov
packsswb
js
jb
mov
pusha
cmpb
adc
pop
fiadds
test
test
xor
jg
stc
mov
hlt
or
or
jmp
add
mov
aam
mov
dec
rorb
sbb
pushf
jmp
fsubs
mov
xchg
hlt
jno
mov
stc
cvtps2pi
push
cmpl
andl
out
insb
and
jae
cli
push
and
and
dec
lret
cmpsb
inc
pop
nop
mov
mov
jae
push
cmpsb
mov
dec
xchg
dec
pop
imul
loop
cmc
mov
adc
pop
push
popa
hlt
add
xchg
in
cmp
jne
xchg
mov
outsl
xchg
adc
sub
jae
cmc
push
adc
iret
pop
fbld
sbb
pop
xor
testl
pop
test
push
sarb
xchg
loop
xor
movsl
pop
lret
or
call
repnz
pusha
dec
push
mov
pop
mov
add
xor
pop
jne
push
sbb
cmp
pop
or
xchg
aad
clc
ret
jne
lea
push
inc
jbe
cli
sbb
cwtl
rclb
pop
jl
mov
lea
jb
pop
js
repz
inc
xchg
in
xlat
xor
dec
xchg
fxch
jbe
pop
in
adc
mov
jae
lds
push
push
push
xlat
sti
loop
addr16
and
repnz
adc
in
mov
push
xchg
daa
and
jno
std
jl
pop
inc
cltd
int
test
mov
adc
push
push
push
xor
call
jae
mov
inc
or
outsl
in
test
xchg
and
divl
popf
cwtl
inc
sub
lds
arpl
sbb
mov
sarl
jecxz
push
mov
jae
out
mov
mov
and
jge
daa
jns
push
mov
adc
jg
dec
mov
jmp
xchg
fcompl
fadd
adc
wrmsr
repnz
inc
mov
test
mov
and
xchg
lds
xor
popf
jp
or
xchg
in
lret
mov
pop
es
fsubl
fs
sub
mov
sub
push
call
in
mov
shrb
lcall
out
cmpsb
pop
test
aaa
xchg
xor
adc
jge
dec
mov
cmp
xor
sub
mov
adc
lret
push
jge
xlat
and
iret
push
sbb
pop
cmpsb
pop
xchg
subb
inc
lret
add
fwait
in
test
sbb
mov
push
cs
lds
jb
adc
dec
mov
int
jnp
enter
xor
es
popf
pop
pop
mov
xor
xchg
int3
mov
std
sarb
cmp
sub
adc
out
mov
ja
cmpl
jmp
pop
cli
mov
inc
jp
arpl
incl
inc
adcl
sub
jecxz
pop
mov
movsl
and
pop
dec
sbb
pop
pop
adc
mov
xchg
sub
xchg
sbb
push
nop
aas
xor
divl
in
dec
cwtl
iret
and
sarb
cmp
and
dec
lods
int3
or
cmp
ljmp
jp
loopne
adc
push
outsb
xor
inc
jne
sbb
jge
mov
xchg
pop
mov
lock
int
call
jle
in
push
outsl
into
fildl
sub
xor
mov
in
icebp
sub
and
sbb
sub
sub
les
mov
sbb
mov
leave
fildl
scas
mov
les
adc
or
scas
int3
idivl
xor
or
cmp
pop
cmp
and
mov
cmc
and
xchg
sub
dec
ja
out
xor
into
aam
mov
les
jne
sbb
nop
int
bound
pop
pop
sub
in
jb
insb
mov
jae
fiadds
lock
aam
cmp
aas
mov
inc
movsb
pop
mov
cs
mov
lock
cmp
andl
mov
daa
cmp
jo
jb
push
xchg
cli
and
insb
iret
or
pop
pop
cmp
in
push
or
mov
adc
nop
or
jmp
adc
aam
stos
pop
aad
sbb
movsl
inc
adc
jo
dec
dec
cmpsl
imul
adc
jns
push
inc
sub
out
sbb
push
sti
jp
push
rcrb
pop
pusha
inc
mov
ret
dec
repnz
jge
sbb
push
add
push
icebp
faddl
cs
mov
cmp
inc
and
cmpsb
loopne
imul
mov
adcl
pushf
mov
dec
sub
call
push
aaa
add
jns
loope
cli
in
nop
pop
iret
xchg
rorl
xchg
or
lods
sbb
inc
mov
popf
cmp
and
ret
xor
mov
cmpsb
fsts
pop
jg
pop
push
cld
fimull
xchg
sti
popf
xsavec
js
sbb
pop
pusha
outsl
mov
popf
push
sub
movsb
insl
cs
jne
in
cwtl
push
add
rcl
inc
dec
out
mov
mov
int
fsubrl
test
bound
or
movsl
les
jne
xchg
sub
imul
mov
rol
and
cmp
sub
jae
mov
inc
cmp
xlat
jb
ret
jne
xchg
mov
lret
repz
lods
and
or
inc
jg
sbbb
lahf
sub
pop
sub
sbb
sbb
xorb
das
loop
and
adc
aas
xchg
out
add
insb
imull
lcall
dec
nop
add
mov
js
push
sbb
mov
mov
repz
mov
xchg
hlt
cmp
dec
mov
aad
push
pusha
outsb
dec
cmp
pop
insl
test
jnp
sbb
add
inc
sbb
mov
mov
shrb
mov
jne
cltd
adcl
cmp
mov
std
in
cmpb
movsl
or
fldt
into
mov
inc
aad
dec
xchg
lahf
js
lea
fstps
mov
out
adc
fidivrs
cli
imul
xor
push
repnz
inc
cmpsb
out
adc
inc
xor
mov
addr16
lds
jmp
sub
xchg
ljmp
mov
aas
outsl
leave
dec
push
orb
cmc
xlat
int3
inc
cmpsb
xchg
icebp
lret
fiaddl
test
mov
test
dec
lea
sbb
add
inc
clc
inc
xor
jmp
out
add
or
test
imul
lods
bound
dec
hlt
adc
jns
les
xchg
mov
aas
dec
jg
mov
fs
aad
sub
pop
mov
adc
inc
dec
stos
insb
push
xor
es
push
jo
mov
pop
inc
das
push
sub
ror
ljmp
xchg
lods
in
mov
cmp
insb
fsubrs
les
mov
imul
xor
pop
mov
mov
add
mov
jl
inc
fldcw
or
pushf
aad
add
fildl
ss
mov
pushf
imul
sbb
repnz
dec
adc
push
outsl
cli
sub
out
fsubrs
int3
add
push
dec
add
inc
dec
pop
pop
jnp
fiaddl
push
ror
dec
jp
insl
pop
insb
jnp
ficompl
mov
outsl
test
dec
aaa
add
mov
jl
ss
insl
leave
jp
add
mov
jecxz
rcl
pop
pop
popl
or
enter
cli
sbb
dec
pusha
xor
fstps
mov
mov
sub
sbb
js,pt
add
dec
cld
loopne
insb
clc
cmp
enter
mov
adc
cli
fists
flds
repz
mov
call
push
test
cmp
jecxz
mov
les
cltd
loopne
mov
mov
repnz
hlt
and
jle
fidivrl
sbb
push
or
jmp
int3
pop
das
nop
add
out
jne
sub
cmp
adc
pop
fadds
cmp
rolb
into
cld
push
jbe
xor
push
leave
adc
push
lcall
adc
jne
je
jbe
xchg
cli
push
pop
mov
pop
mov
push
lret
mov
movsl
push
mov
cmp
popf
push
test
xchg
add
or
cld
xchg
add
imul
push
xlat
mov
ljmp
and
push
sarl
addr16
pushf
jb
movsl
adc
movsl
adc
fsts
lret
push
or
or
enter
call
outsb
xchg
jno
xchg
repnz
shrl
cltd
rolb
add
xchg
aaa
cltd
mov
cmp
stc
and
jle
or
push
adc
insb
push
xlat
inc
mov
sbb
push
add
mov
mov
fwait
xchg
xchg
fsubs
cs
cltd
int
mov
sub
fsts
mov
inc
and
pushf
push
sub
lods
mov
mov
aad
or
js
push
jge
push
sbb
mov
lret
xor
xchg
jno
mov
pop
jo
in
cs
xchg
push
adc
ret
imul
lods
sbb
mov
pop
xor
push
pop
mov
andl
jb
divb
ret
cmp
subl
cmp
mov
dec
jns
arpl
js
scas
xchg
push
mov
and
addr16
data16
rclb
push
addr16
andl
pop
jnp
add
leave
aam
mov
cmp
jge
xor
add
sub
aam
test
bound
sahf
popf
fcomps
xor
pop
pop
xchg
cmpb
xlat
sahf
in
imulb
nop
pushf
xchg
loopne
push
std
xor
cmc
popa
int
lcall
ficoml
add
push
adc
lret
outsb
ret
inc
sub
pop
ds
fistps
push
xchg
inc
aad
lahf
inc
jge
and
or
into
mov
inc
out
pop
add
sbb
push
test
mov
xchg
iret
shl
imul
sub
inc
xor
in
mov
test
test
js
and
push
ja
mov
or
push
aas
cmp
adcb
jne
dec
cmp
ja
add
lods
jg
add
inc
pop
sbb
in
lret
aaa
sbb
and
iret
inc
fnstsw
or
loop
push
rcl
cmc
sbb
mov
xchg
gs
pop
pop
sbb
sbb
repnz
fsubrl
mov
and
idivb
and
in
jp,pn
push
ficompl
lret
or
into
inc
std
jno
aas
and
call
in
popf
push
push
mov
mov
outsl
jnp
xchg
test
push
mov
dec
lcall
sbb
push
ljmp
jle
or
lret
in
out
outsb
ret
and
jle
stos
mov
pop
popf
das
xor
rol
cs
es
dec
fldl
inc
repnz
mov
and
push
sti
mov
sbb
xchg
sbb
sbbb
pop
sbb
out
adc
pop
cmpsl
adc
mov
sub
pop
fsubrp
insl
jl
mov
jns
mov
cmp
ss
lds
aaa
adcb
cmc
out
mov
loopne
xchg
lds
mov
in
mov
xchg
sbb
pop
adc
and
pop
fisttpl
and
jmp
xchg
push
dec
dec
xor
fst
shlb
pop
fcomp
cmp
movsl
clc
rcl
add
sarl
loope
xor
loop
gs
lcall
fcoml
xor
sbbl
clc
push
jp
rcrb
sbb
jecxz
jmp
fwait
pop
push
xor
inc
jecxz
sti
mov
scas
ficoms
fs
adc
xlat
pusha
fistpl
pop
mov
cmpsb
xchg
je
push
jnp
scas
daa
pop
mov
loop
les
jnp
dec
int3
sbb
push
adcb
sub
and
add
icebp
stos
ljmp
loop
mov
mov
js
add
mov
xor
aam
icebp
loopne
mov
scas
dec
lea
in
pop
add
pop
mov
rcrl
fcoml
xchg
imul
shrl
sbb
jl
xchg
jmp
and
aas
jo
push
sub
and
cs
pop
test
sbb
mov
sbb
xor
loope
pushf
imul
orl
mov
or
adcl
push
or
outsl
divb
xor
jp
pop
pop
movsl
dec
inc
aas
ljmp
push
mov
mov
sti
sub
insb
pop
ret
xchg
mov
adc
mov
mov
inc
pushf
inc
or
loopne
cmp
into
mov
or
in
lcall
ficompl
push
mov
push
cmpl
ds
cmp
in
out
stos
xchg
mov
push
dec
movsb
lahf
inc
lahf
or
push
xlat
into
mov
push
jb
ds
aad
jb
arpl
push
adc
into
stos
cld
mov
sub
test
push
mov
sub
mov
out
jp
xchg
jge
scas
add
xchg
and
loopne
dec
or
int3
adc
xlat
xchg
daa
stos
sbb
xchg
or
cmpsb
lahf
nop
subl
cs
cmp
mov
movsl
cmp
pop
dec
adc
and
nop
mov
add
test
enter
arpl
lcall
mov
dec
scas
sbbl
mov
jno
leave
add
adc
sub
sbb
rclb
xlat
in
lods
add
jmp
inc
sbb
add
out
cld
bswap
sub
dec
movsl
loope
xchg
clc
xchg
jbe
lcall
ds
in
jl
inc
cmp
or
lahf
xchg
mov
aam
pop
loopne
loopne
pop
adc
in
or
jp
stc
push
mov
push
adc
pop
pop
lcall
loop
pop
scas
xchg
rolb
ror
inc
jb
sbbl
add
push
fstpt
in
loopne
aad
mov
cltd
push
push
out
subb
cmp
adc
lods
movsb
push
jp
adc
aad
mov
fistps
lahf
dec
inc
mov
xorl
jo
into
fcoml
xor
bound
xor
fisttps
sub
xchg
call
sub
inc
test
lcall
add
pop
xor
js
jmp
test
jae
sbb
sub
mov
xchg
xlat
inc
es
pop
cmp
sub
fists
pop
push
jecxz
shl
call
es
cmc
stos
loope
xchg
add
adc
push
or
lods
and
pop
outsl
add
inc
in
lds
fiadds
push
mov
pop
mov
adc
in
jp
sbb
mov
mov
das
test
mov
mulb
pop
inc
jle
out
add
inc
fidivrs
sub
call
and
jo
add
xchg
into
cmp
int
inc
mov
and
or
daa
lods
iret
cmc
addr16
pop
icebp
filds
push
fcomps
xchg
mov
scas
cmp
roll
call
jl
and
negb
mov
dec
popl
adc
inc
arpl
arpl
cwtl
fs
push
mov
rorb
cli
jbe
notl
call
push
lock
jo
lcall
push
push
jne
jl
hlt
jns
adc
shll
mov
push
adc
jae
adc
pop
jae
aam
pushl
add
pushf
cmp
and
xor
and
inc
pop
xchg
xlat
dec
or
clc
rcl
das
jl
add
cmp
fistl
stc
sub
mov
jne
pop
mov
adc
out
sahf
test
dec
insl
les
inc
adc
fdivl
dec
gs
push
lods
inc
out
daa
push
xor
mov
sbb
nop
daa
data16
and
cltd
pop
or
out
mov
scas
push
aam
pop
arpl
iret
sbb
and
push
fistl
mov
add
or
scas
ret
lahf
mov
dec
add
cmpb
stc
and
and
fisubs
fcomps
int3
pop
ss
or
mov
add
or
aam
jne
xlat
jl
insl
cmp
mov
jnp
jbe
sub
pop
push
jle
mov
test
lods
cld
or
cs
aad
imul
pop
inc
or
dec
adc
call
sysret
popf
mov
pop
loop
mov
jo
mov
in
pop
jb
test
scas
jle
in
pop
es
jg
mov
sbb
outsl
sbb
out
mov
andl
out
outsb
pop
test
cmpsl
lret
dec
cmp
xchg
or
xchg
push
aad
stc
mov
add
fsubl
dec
test
adc
test
mov
pop
dec
pushf
outsb
cmpsb
mov
push
fs
jl
testb
mov
shlb
jl
dec
push
inc
adc
xlat
in
ss
stos
xor
jmp
sub
cmc
std
addr16
jnp
inc
outsw
fildl
arpl
push
ljmp
pop
xchg
daa
xchg
sub
ret
or
or
rcl
xchg
or
lods
enter
in
fmuls
leave
in
repz
or
stos
add
aaa
mov
pop
jecxz
dec
push
adc
and
xor
mov
sub
sbb
lock
jne
push
adcb
rep
mov
push
jbe
shrl
jae
mov
xchg
cmp
jo
in
lret
mov
or
fdivs
std
mov
jmp
jne
mov
mov
pop
aam
or
xchg
mov
pop
fwait
add
fcomps
sahf
pop
xor
in
popf
add
je
xor
cwtl
mov
jnp
mov
pop
mov
and
in
jno
fstps
inc
jle
adc
or
loopne
fstpl
in
add
outsl
or
xchg
sub
imul
jecxz
je
addb
out
push
lock
daa
outsl
sbb
aas
jne
mov
dec
stos
xlat
cmp
addr16
push
cli
insl
xor
enter
test
and
push
mov
stos
repnz
xchg
cmp
cltd
lcall
jno
and
inc
hlt
mov
pop
fwait
icebp
sub
add
icebp
xchg
aad
dec
mov
imul
stc
mov
cmpsb
pop
sti
xor
fbstp
mov
jne
pop
test
xor
rolb
pop
jo
or
sub
lock
lods
js
repnz
in
mov
popf
or
leave
addl
pop
fsubl
mov
adc
push
out
es
jp
in
into
rorl
pop
inc
ja
fistl
cmp
aad
inc
mov
outsl
xor
push
out
fldt
out
xor
popa
inc
jne
in
cli
mov
inc
cltd
cwtl
stos
insl
add
cmp
sbb
sub
inc
inc
jmp
and
cwtl
cmp
jle
or
mov
ja
inc
pop
mov
mov
mov
add
andb
mov
lahf
xor
dec
xchg
adc
or
xchg
pop
ljmp
pop
ja
or
lds
lcall
divl
or
stos
sbb
mov
rorb
inc
mov
mov
fs
sbb
lock
push
outsb
and
sub
testb
jg
cmp
push
inc
dec
enter
dec
test
idivl
adcb
aad
iret
fbstp
lods
push
in
and
jnp
lods
lock
mov
push
in
dec
and
leave
xor
maskmovq
notl
mov
iret
and
xor
rclb
popf
fists
pop
cmp
add
idivb
jae
addr16
or
movsb
mov
xchg
movsl
dec
mov
mov
in
les
jne
fs
out
push
xchg
mov
cwtl
ja
sbb
inc
pop
jb
and
mov
in
addr16
out
xor
jge
inc
mov
sbb
pop
push
lret
lods
je
or
lea
shrb
sti
mov
jmp
je
lret
loop
dec
test
aad
sbb
lock
pop
inc
cmp
ja
mov
mov
mov
leave
divb
cmp
mov
in
cmpsb
test
incl
xchg
stc
xchg
icebp
jno
popa
jb
jp
jns
or
dec
adc
cmp
repz
inc
push
push
jns
dec
xchg
xchg
fistl
and
jne
adc
lcall
or
xchg
mov
mov
xchg
adc
rclb
mov
and
lds
fstps
inc
test
imul
decb
js
jl
pushf
jbe
xchg
mov
icebp
add
in
repz
cmp
cld
xchg
push
sub
xor
adc
stos
cli
mov
push
inc
fidivrs
push
mov
imul
add
ret
into
stc
xchg
adc
sarl
bound
inc
pop
jp
das
adc
out
jns
inc
xor
add
aad
test
jle
sub
mov
sub
push
xor
rcrl
and
push
adc
adc
dec
mov
cli
mov
scas
pusha
rcl
dec
pop
jns
test
inc
jbe
push
sbb
xor
mov
cli
lods
pop
xchg
ret
or
mov
xchg
in
adc
mov
mov
xchg
negb
fs
mov
sti
push
sbb
nop
xor
mov
mov
cmc
or
pop
sub
push
push
fwait
jmp
push
enter
jb
imul
add
gs
sbb
cmc
iret
imul
fidivrs
push
xchg
push
ret
jne
push
lcall
cmc
inc
mov
push
fsubr
mov
push
jo
xchg
dec
cmpsb
push
cmpsb
out
sub
jg
mov
sahf
mov
or
out
rcrl
push
cmp
push
nop
cmpsb
sbb
adc
sbb
fmuls
mov
imul
mov
add
mov
add
cmp
cli
xor
cld
mov
lret
mov
jo
out
add
fnstcw
outsl
rorl
or
xchg
aas
fcoms
aam
jbe
xchg
sbb
out
out
inc
jmp
iret
pop
out
stos
jmp
dec
in
sub
add
pusha
lods
mov
rcrl
jle
xchg
xor
jmp
int3
and
mov
mov
fstps
mov
push
stos
cmp
mov
pop
add
lret
dec
cwtl
push
or
push
xor
stos
add
mov
scas
push
sub
adc
imul
push
cmpb
or
shlb
aas
aam
loop
mov
sub
enter
stos
sub
jne
lods
repnz
in
sbb
and
ror
addr16
mov
inc
loop
dec
sub
idivl
pop
out
inc
int3
adcb
dec
and
out
aad
lock
push
push
lds
sbb
in
mov
insl
adc
ret
ds
test
inc
mov
pusha
dec
xchg
mov
adc
repz
mov
mov
popf
cmp
push
jnp
mov
leave
pusha
push
clc
jp
aas
fisubrl
xchg
xchg
adcl
stos
mov
mov
mov
lea
and
xchg
pop
xchg
cmp
jnp
cmpsb
outsl
inc
adc
jecxz
pop
jns
es
sub
jns
shrb
sbb
pop
dec
pop
pop
fidivl
cmp
pop
and
mov
and
and
cmp
out
cwtl
sarb
lods
xchg
or
clc
dec
stc
inc
xor
pop
cs
mov
mov
inc
pop
in
arpl
and
and
and
sub
rcl
push
repz
pop
call
cmc
add
scas
mov
adc
popf
icebp
fcoml
inc
adc
loop
mov
pop
sub
jae
loope
dec
add
xor
mov
pop
repz
inc
cmp
sub
lods
inc
mov
mov
mov
sub
mov
xlat
aas
clc
lcall
icebp
repz
stos
loopne,pt
dec
jo
pop
mov
lock
pop
outsl
adcl
mov
aam
add
add
adc
mov
fcomps
sbb
and
ljmp
adc
or
out
shrl
xchg
js
mov
lahf
jge
sub
push
mov
ds
mov
and
in
add
sbb
jo
and
shr
add
test
rorl
les
lret
insb
test
test
and
popa
mov
adc
jmp
cwtl
xchg
in
add
insl
mov
fcoms
inc
xor
sbb
out
fcomps
push
adc
pop
or
xor
sbb
daa
xchg
add
cmp
or
loopne
mov
dec
test
outsb
push
adc
jo
push
jo
push
rclb
mov
mov
mov
adc
repz
out
lods
fwait
mov
jp
test
scas
jo
cwtl
repnz
mov
scas
xchg
mov
gs
push
sbb
pop
xchg
ss
loope
jmp
mov
mov
test
xchg
leave
ds
and
xchg
aad
jae
lods
ss
scas
pop
fcoml
imulb
mov
fisttpll
lret
cmpsl
adc
ds
aas
jmp
cmp
jecxz
leave
mov
push
mov
inc
decl
insb
inc
sub
push
mov
mov
test
mov
cmp
inc
mov
push
mov
rcr
out
fistpll
cmp
notl
das
aad
iret
lods
xor
jnp
mov
push
outsb
ret
out
xchg
leave
sbb
dec
push
adc
std
fistps
fmull
in
fwait
dec
push
add
dec
push
bound
add
pop
inc
inc
faddp
sub
shrl
push
cmpsl
pop
gs
pusha
mov
or
imul
adc
adc
jge
clc
push
daa
je
in
or
mov
push
movsl
lods
inc
pop
push
push
icebp
fwait
adc
adc
test
push
add
sub
xor
test
jb
dec
lret
mov
dec
mov
test
push
lds
pop
push
gs
out
das
cltd
jnp
cmp
incl
orl
fldl2t
lods
cwtl
cwtl
jae
insl
mov
popa
ret
cmpsl
in
add
xchg
cmp
shlb
pop
incl
mov
lret
cli
int3
je
mov
pop
into
mov
ja
mov
push
xchg
mov
in
fsubs
lods
jae
xor
popa
cmp
loopne
stos
xchg
mov
divb
sub
mov
jno
insl
mov
pusha
or
push
iret
cld
xchg
or
inc
jae
es
jbe
cmc
dec
xor
mov
adc
sbbb
or
xor
push
inc
sbb
push
test
repnz
jecxz
sub
out
fdivrs
pop
mov
sbb
mov
sub
dec
xchg
and
clc
or
arpl
adc
dec
sbb
cmc
cmp
daa
pushf
loop
adc
mov
xchg
loop
jg
cmp
repz
mov
nop
jno
daa
jge
pushf
inc
repz
outsb
or
xor
lods
lock
and
push
add
lahf
xchg
loopne
adc
insl
testb
mov
xchg
sub
xor
sub
out
add
clc
aaa
and
mov
jle
inc
test
repnz
jo
jne
int
stos
jg
cmpb
sbb
jecxz
or
cwtl
pusha
aad
sarb
flds
movsb
adc
push
jmp
shrl
pop
jne
mov
cmp
or
fwait
push
popf
int
test
popf
pop
pop
jno
shll
mov
push
adc
daa
xor
outsb
hlt
imull
into
std
mov
je
ss
icebp
ret
mov
ljmp
xchg
pushf
mov
imulb
jl
jecxz
sbb
aam
fisttpll
lods
inc
popf
push
xor
call
pop
insl
xchg
icebp
pop
pop
sbb
dec
lcall
es
insb
mov
pop
fwait
xchg
or
pop
xchg
mov
sbb
lret
test
pop
testb
jmp
ret
dec
mov
jb
bound
inc
mov
cmp
dec
insl
cwtl
jne
jno
and
jns
lods
mov
add
add
inc
mov
mov
cmp
popa
leave
insl
push
xchg
dec
je
jge
sub
loope
stos
jne
adc
sbb
and
aas
sub
enter
dec
sub
inc
das
aam
lcall
lds
fs
inc
shrl
push
outsb
loope
add
ljmp
into
out
push
jmp
je
cmp
inc
push
addl
sbb
in
mov
insb
test
mov
ljmp
ret
daa
pop
sbb
mov
mov
rorl
outsb
adc
pusha
inc
dec
cmpsl
sarb
lahf
xchg
repnz
cmpsl
addb
and
ret
and
xor
movsb
pusha
xor
mov
mov
mov
nop
mov
cmpsl
cmp
xor
xlat
jecxz
cmc
pop
or
ljmp
repnz
loopne
and
pop
cmp
dec
divl
ds
in
mov
xor
pop
sbb
jbe
into
pop
mov
cmpsb
pop
loopne
dec
jbe
xchg
out
pop
cmp
mov
in
mov
enter
clc
mov
ror
into
les
push
clc
jo
mov
ret
test
or
jns
movsl
sahf
aad
dec
sbb
cmpsl
sti
jns
adc
jmp
inc
mov
mov
jb
xchg
pop
and
idivl
mov
rcr
mov
dec
mov
imul
mov
push
pop
incb
jmp
test
xlat
inc
push
adc
in
lret
ljmp
out
and
mov
pusha
test
push
and
sub
dec
and
jmp
xchg
dec
lret
fsubs
push
jge
gs
test
into
cld
dec
pop
or
mov
enter
ja
pop
sbb
adc
xor
repz
sbb
insl
nop
and
push
nop
push
loope
sbb
mov
dec
aas
mov
out
test
pop
sub
outsb
cmp
pusha
mov
jo
cwtl
and
test
mov
dec
adc
xchg
jb
jecxz
cmpl
cmpsl
call
movsl
push
jp
jmp
pop
xor
cmpsl
lods
out
inc
and
jbe
push
dec
pop
ret
xor
adc
mov
vfmadd231pd
cmpsl
hlt
mov
lret
push
pop
xor
lds
and
add
sub
mov
out
pushl
pop
mov
int3
sub
adcl
leave
and
test
nop
inc
mov
gs
clc
sub
enter
cmp
mov
std
cli
out
lret
int3
aas
repz
jae
aam
dec
pop
adc
or
cltd
mov
and
adc
int3
jo
aam
push
imul
shll
mov
out
lock
add
cmp
xchg
jmp
je
lds
mov
mov
push
fwait
cmc
mov
testl
out
rclb
addb
mov
mov
lds
push
int3
pop
sub
les
sub
jb
inc
mov
mov
pop
pop
cmp
movsb
outsb
cmc
popa
push
aas
sub
xor
outsb
mov
sbb
xchg
pop
push
clc
jo
test
pop
inc
cmpsl
inc
inc
add
xchg
sti
testl
push
rcrb
add
lock
scas
cmp
jge
and
aam
iret
cltd
mov
scas
insb
adc
adc
xchg
xchg
xor
or
jmp
dec
rcl
sub
dec
lcall
hlt
adc
xchg
gs
dec
stos
xor
ja
sbb
incb
out
adc
mov
adc
dec
loope
inc
lock
mov
fiaddl
xor
and
jg
jo
inc
cld
call
or
xor
imull
add
repz
jmp
mov
movsb
mov
pop
adc
and
push
sub
mov
sbb
cmp
sub
les
jns
xchg
xor
scas
sub
add
push
inc
and
out
mov
xchg
cwtl
or
mov
sbb
clc
insl
jno
mov
push
push
xchg
push
test
push
jne
mov
aas
hlt
and
pop
cmpsl
inc
int
sarl
ret
mov
add
add
mov
xchg
outsl
addr16
inc
mov
pusha
sub
inc
push
jge
pop
xchg
mov
shlb
dec
lds
add
xorb
daa
xor
mov
pop
cli
sbb
int3
add
stc
cmp
dec
aam
fisubrs
xchg
bound
mov
aaa
cwtl
lock
push
mov
or
push
lahf
mov
outsl
dec
mov
mov
mulb
ljmp
add
test
push
iret
lds
push
xchg
and
mov
jb
scas
jmp
pushf
leave
jg
fildl
data16
mov
adc
cmp
xor
aaa
gs
jl
cmpl
fistpl
jno
mov
xor
xchg
test
out
testl
clc
sbb
push
ja
sub
nop
inc
mov
outsl
fs
sbb
inc
sarb
pop
add
push
std
das
mov
mov
mov
push
dec
dec
push
loopne
jns
cmp
mov
add
and
and
sbb
adc
out
orb
pusha
add
scas
out
xor
loopne
sahf
xor
inc
inc
add
jle
add
xor
rcrb
push
add
mov
mov
mov
xchg
xor
push
cld
stos
mov
addr16
xor
push
cs
and
push
push
and
maxps
fdivs
cwtl
in
cli
ja
das
dec
cmp
inc
dec
mov
xor
dec
push
dec
and
pop
ret
fstl
mov
cmc
imul
ljmp
cwtl
or
add
outsl
mov
jae
sbb
mov
xchg
pop
jbe
addr16
ja
imul
fnstsw
pop
and
shlb
pop
mov
lock
xchg
dec
pandn
mov
sbb
test
insb
in
xchg
repnz
insl
dec
sbb
cmp
stos
lret
shll
jno
test
in
inc
cmc
inc
insl
aam
cwtl
mov
fstl
shll
jnp
rolb
or
lock
js
jo
jmp
sub
aad
out
sti
cmpsb
cmp
into
mov
dec
cmp
dec
insb
test
das
nop
std
pusha
addr16
ret
js
leave
xor
adc
inc
push
ficomps
mov
cmp
push
push
push
out
adc
and
xor
xchg
sbb
ret
mov
push
cmpsl
xor
and
push
insl
rcll
mov
test
pop
ficoms
popf
stc
test
pop
add
jge
and
sbb
aaa
leave
icebp
out
xchg
shlb
or
push
rcrl
push
adcl
lcall
xchg
mov
ret
out
jle
les
push
dec
test
shl
fs
ret
mov
repnz
xchg
enter
out
or
add
adc
dec
and
repz
xlat
aad
insb
cmpsl
dec
int3
cli
pop
mov
insb
mov
stos
mov
xor
leave
xchg
sub
mov
jmp
out
or
jle
cmpsb
xchg
into
lahf
aad
dec
adc
lods
mov
mov
fcmovnb
outsb
out
stc
add
pop
add
daa
or
jno
jnp
fwait
clc
add
insl
xchg
dec
jbe
push
xchg
popl
lret
in
mov
xor
pusha
or
js
xor
cmp
mov
inc
addr16
sarl
fidivrs
and
arpl
and
addl
fwait
pop
and
fwait
pop
gs
scas
pop
and
aam
dec
pusha
cmp
inc
fnsave
mov
inc
out
stc
sbb
xchg
es
xchg
aam
add
inc
inc
jo
sbb
xchg
dec
adc
fwait
mov
xchg
lock
jae
dec
inc
test
push
pop
popa
leave
jo
subl
sbb
xchg
pusha
mov
jno
inc
into
sahf
xchg
dec
adc
out
push
subb
scas
div
pop
pop
cmp
add
fidivrl
mov
mov
int3
mov
stc
jne
xlat
pop
roll
aas
into
mov
iret
cmp
movsl
ljmp
jl
jne
mov
inc
dec
add
inc
or
lea
add
pop
loopne
or
inc
push
pop
cli
pop
int3
pushf
mov
scas
fdivr
lea
add
jns
push
loopne
fdiv
stc
pusha
lods
push
cmp
shlb
add
xchg
mov
jne
fiaddl
rclb
push
cmp
call
dec
jge
cmp
call
cld
adcl
in
or
cwtl
sbb
mov
stc
push
or
inc
dec
mov
sub
add
fidivs
jns
push
mov
xchg
add
or
push
and
xchg
pop
enter
call
insb
stc
popf
pop
mov
push
mov
sbbl
mov
loopne
int3
inc
xchg
dec
inc
ljmp
frstor
lock
cmp
cwtl
adc
lret
xchg
gs
data16
fsubs
or
jmp
shrb
cs
rclb
loopne
into
jb
push
add
enter
sub
loopne
jl
mov
out
xor
outsl
add
sti
sub
jle
lcall
dec
jne
jnp
repnz
lock
cs
lods
pop
pusha
sbb
cmp
mov
cmpsb
mov
cmp
mov
rolb
addl
adc
xor
push
das
aas
sub
negb
xor
dec
imul
jns
orl
jge
stos
mov
sarb
lods
lret
cmpsb
sbb
sub
clc
fdivs
mov
cmpsl
or
out
pusha
dec
das
nop
daa
repz
mov
fists
mov
pcmpeqw
adc
out
shr
in
lds
mov
pop
inc
and
mov
cmpl
jmp
adc
out
add
test
adc
incb
test
fidivrl
lods
add
scas
push
lret
mov
dec
pop
aad
pop
mov
mov
pop
fwait
je
stc
cli
movsl
das
jl
fs
test
ds
cmp
gs
loope
mov
xchg
lods
dec
push
push
sbb
inc
xor
xchg
out
dec
jne
add
scas
or
pop
xchg
loope
pop
sahf
sbb
out
mov
push
cli
test
inc
cld
cmp
push
mov
std
rcr
jbe
popa
inc
pop
lret
dec
stc
ret
jl
cmpb
daa
jb
sbb
push
fwait
stos
jg
adc
out
inc
dec
clc
les
dec
adc
out
add
inc
fucomp
push
dec
sub
xor
jl
bound
pop
repz
lods
or
dec
cmc
mov
mov
ljmp
dec
dec
push
movsl
mov
dec
mov
mov
fadds
mov
loopne
xor
movsl
jl
in
push
and
mov
pop
imul
pusha
push
pop
push
and
shlb
rolb
aaa
movsl
call
ss
jmp
push
fs
sti
jp
mov
out
das
add
mov
sbb
sarl
stc
mov
int
std
jl
push
xchg
xchg
cli
sbb
fnstenv
xchg
or
or
jmp
loope
ljmp
jp
jns
pushf
dec
jg
jb
jne
test
and
shlb
cmp
dec
inc
lahf
push
jle
out
push
nop
mov
stos
pop
out
jecxz
inc
cmp
out
std
jecxz
pop
mov
push
dec
shlb
add
sub
jb
aas
mov
sbb
stos
and
lods
pop
ds
test
cli
out
lods
jae
lods
cmp
ljmp
pop
inc
mov
mov
mov
ds
call
outsb
icebp
cmc
fists
add
lds
pop
jge
in
pop
pop
outsb
sub
pop
ret
dec
arpl
jp
imul
cmp
imul
cmp
push
and
push
dec
gs
cmp
cli
sbb
push
pop
xor
and
sbb
insl
pop
xchg
mov
and
ljmp
aad
xchg
rorb
xchg
andb
bound
xchg
stc
mov
mov
gs
int3
pop
push
loopne
push
int
adc
push
push
shrb
jp
push
stc
jecxz
mov
imul
scas
inc
xlat
mov
sti
mov
inc
add
and
or
popa
insl
cmp
pop
cmp
push
xorl
push
ror
shlb
sub
sub
push
mov
mov
fwait
test
xchg
add
adc
in
xlat
push
push
sbbl
or
xor
popf
fwait
cmp
pop
adc
mov
std
out
cmp
loopne
rolb
push
fcompl
or
push
lock
daa
std
sub
xchg
imul
xor
or
push
scas
test
push
cmp
pop
enter
rcr
test
dec
aad
data16
sbb
jb
ss
arpl
add
mov
icebp
mov
int
stos
xchg
call
pushf
cmp
and
adc
imul
mov
cmp
sub
popa
xchg
mov
fistpll
pop
sub
lods
je
lcall
lods
ss
cmpsb
jg
loop
outsb
leave
lret
xchg
dec
sub
dec
stos
and
xor
mov
dec
mov
push
mov
fxch
sub
and
mov
idiv
or
test
adc
dec
bound
pop
push
jecxz
xor
jmp
inc
xor
dec
mov
push
push
and
incb
fsubs
mov
dec
mov
or
sbb
xlat
stos
inc
int
sbb
ret
in
add
jae
adc
nop
jo
and
pop
mov
adc
pusha
push
xlat
adc
ss
sub
jge
jmp
in
pusha
add
sbb
xor
xchg
add
mov
clc
negl
mov
aad
pop
dec
icebp
adc
and
lret
test
lea
out
fdivl
fwait
pop
jbe
out
fiadds
pop
sbb
pop
inc
repz
sbb
fisttpl
test
hlt
inc
stos
clc
jp
adc
add
gs
movsl
sarb
iret
hlt
je
setb
sub
mov
icebp
adc
adc
jbe
fdivl
ljmp
push
rcll
sub
sbbl
cmp
aad
lcall
mov
jmp
pop
ret
pop
mov
je
ret
pop
sbb
and
or
lods
mov
pop
ja
or
inc
rorl
xor
pop
or
inc
movsl
je
sub
dec
inc
mov
xchg
outsl
xor
pop
loop
jg
fcompl
bound
jbe
add
xchg
and
fs
bound
out
push
insb
jne
jae
mov
inc
fstpl
lods
inc
shll
inc
in
push
add
rcrb
pushf
rcrl
jecxz
icebp
jo
push
shlb
into
cs
xchg
addb
mov
aas
jnp
call
sbb
out
dec
std
dec
xchg
push
and
add
loop
sub
inc
push
jns
sub
add
in
cmp
aas
cld
dec
mov
xchg
popf
sub
xor
das
xor
mov
mov
dec
inc
sub
jae
xlat
sub
and
cmp
loopne
or
lods
stos
add
jmp
adc
je
or
xor
lret
aad
jmp
adc
dec
cmc
lods
push
mov
adc
das
mov
and
imul
lock
es
pop
push
jg
arpl
cltd
nop
test
iret
int
xor
xor
mov
pop
cmp
out
insl
or
ds
xchg
sbb
shrb
adc
scas
push
dec
stc
dec
das
orl
mov
fcoml
ret
out
iret
into
xchg
and
aaa
mov
xor
xor
add
cmp
xlat
popa
lcall
testb
and
push
and
repnz
pop
inc
inc
sahf
push
sbb
movsb
push
cmp
push
and
lods
dec
dec
mov
lret
pop
jl
or
ja
push
cmp
hlt
ret
mov
hlt
mov
js
cmp
imul
xor
vpmulhrsw
pop
lret
mov
adc
fcom
pop
jg
sti
popa
dec
inc
idivb
jmp
rorl
lea
shll
ds
insl
outsl
subb
sbb
ja
mov
push
mov
sti
jp
mov
xor
les
sub
xchg
lock
lods
fwait
and
movsl
repz
cwtl
cmp
fcoml
jo
cli
test
cmp
sarl
icebp
xchg
lods
adc
int
inc
xor
insl
cmpsb
sarl
lods
and
dec
mov
movsl
adc
mov
mov
or
mov
dec
mov
xchg
xchg
mov
int
cmp
and
or
dec
xlat
in
add
push
sub
mov
xchg
jecxz
fisttpl
movsl
cld
lea
mov
push
or
mov
mov
inc
iret
adc
sub
lea
and
dec
push
push
or
adc
inc
push
sbb
inc
fcmovnbe
cmp
stos
mov
ds
dec
sarl
xor
loop
repnz
adc
ret
imul
in
mov
daa
addr16
pop
test
loope
stos
inc
sar
enter
or
sub
push
loopne
mov
insb
ret
sbb
fisubl
fnstsw
mov
jno
sbb
push
inc
push
in
lea
xlat
bound
ljmp
push
jp
popa
js
sub
sbbb
mov
adc
in
inc
add
mov
hlt
rorl
xchg
sahf
les
dec
mov
test
jmp
out
fcoml
and
sbbl
sbb
bound
inc
mov
sahf
cli
stos
push
cmp
dec
pop
adc
fmull
dec
mov
xchg
cmpb
ss
or
pushf
fcmovnb
out
lahf
pop
fimuls
sahf
and
xor
jmp
test
test
sbb
adc
insl
dec
or
out
add
dec
loopne
loop
cmpsl
dec
in
xor
test
xchg
inc
clc
push
xchg
push
pop
xchg
pop
sahf
jo
push
add
int
sub
outsb
mov
nop
nop
frstor
loopne
dec
sbb
xchg
xchg
rorl
ficompl
idivl
sbb
ret
or
sub
or
loope
movsl
xlat
js
sub
dec
inc
mov
sbbl
pop
and
lods
adc
cli
and
sti
mov
inc
in
fisubrl
push
data16
mov
ficompl
mov
lretw
mov
sbb
inc
sti
stc
push
les
loopne
jp
ljmp
out
icebp
jno
loop
sbb
xchg
loope
xor
movsb
int
pop
pop
add
aas
cmp
scas
pop
xchg
lds
nop
rcrl
jmp
into
cmpsw
test
cmpsb
cmpsb
xor
out
sbb
jecxz
and
loopne
jg
pop
mov
or
movups
int3
scas
fisubrs
imul
shlb
cmp
pop
scas
fwait
cltd
cmp
lret
loop
cltd
lods
lds
adc
sti
not
dec
movsb
add
dec
push
inc
jbe
mov
data16
pop
test
fsubs
jae
jl
aas
lods
ja
stos
sub
mov
rolb
stc
sbb
out
lret
add
lea
and
loop
into
mov
push
mov
pop
ficoml
notl
adc
icebp
mov
and
ja
inc
push
mov
adc
pop
enter
push
pusha
sub
popf
sbb
mov
lods
jo
adc
add
push
into
pop
sbb
sbb
mov
rclb
or
maskmovq
notl
push
and
push
pop
or
sti
inc
es
xlat
cmp
mov
pop
and
jae
xchg
aam
sbb
outsb
stos
cltd
mov
push
or
jne
sarb
pop
pushf
xchg
xchg
jge
or
dec
push
xor
xlat
cltd
push
push
mov
lret
mov
jl
aas
les
repz
mov
xchg
pminsw
dec
xchg
hlt
addr16
lods
push
push
or
pop
mov
and
in
cmp
adc
jp
mov
into
xchg
dec
mov
dec
cld
push
fldenv
xor
jg
in
mov
or
scas
popl
xor
push
pop
aas
loopne
jae
dec
out
out
adcb
sbb
add
adc
shll
xchg
xchg
pushf
cwtl
movsl
pop
pop
ljmp
mov
inc
push
out
adcb
dec
xor
into
insl
inc
sahf
mov
sbb
pusha
push
dec
gs
test
mov
push
fcoml
sbb
iret
aas
mov
sbb
dec
or
les
es
hlt
dec
mov
sbb
adc
dec
cmc
test
inc
into
call
inc
and
mov
pusha
pushf
pop
cmc
and
loope
dec
mov
lcall
popa
and
imul
daa
dec
push
and
cmc
xchg
mov
arpl
scas
iret
outsb
adc
pop
js
dec
pop
or
roll
cmp
adc
sbb
cmpsb
inc
js
ret
pop
adc
mov
inc
jnp
gs
add
xor
jbe
mov
leave
jg
xchg
sbb
xor
adc
and
cmp
out
std
les
fildl
and
cltd
push
cmp
loop
pop
adc
fsubs
inc
int
filds
scas
insb
cmc
jg
and
pop
sub
adc
loope
inc
and
insl
pop
push
jbe
dec
sbb
pop
clc
ret
sub
jle
and
jo
inc
sbb
fwait
fs
sbb
js
scas
push
and
inc
imul
cmp
jecxz
test
jbe
fsubrs
not
and
call
scas
pop
xor
mov
pop
lcall
fbstp
addr16
in
popf
mov
addr16
mov
dec
adc
lds
mov
imul
mov
push
xor
cmpsb
movsb
jno
fucom
insb
paddq
shll
jmp
or
movsb
scas
pop
lret
add
inc
ret
sbb
es
scas
sbb
jns
into
push
lahf
test
and
js
dec
fistpll
xchg
outsb
pop
shll
or
pop
and
imul
test
mov
and
sub
jmp
push
xchg
adc
shrl
pop
jno
adc
dec
sub
ss
sbb
lods
add
mov
enter
pop
push
ja
cwtl
lds
outsl
ret
xchg
in
jno
jae
xlat
cmpsb
out
ret
mov
inc
push
loope
insl
mov
jnp
das
mov
imul
stc
sbb
icebp
inc
stc
addb
imulb
dec
jbe
jnp
push
lret
xor
out
and
dec
mov
imull
mov
and
js
dec
dec
loop
out
scas
shrl
int
inc
jecxz
test
fs
hlt
gs
repnz
fmull
stc
push
add
addr16
aad
xor
int3
mov
int3
push
push
jae
das
cmpsl
or
push
rorb
inc
aaa
mov
ss
push
enter
mov
mov
outsl
das
pop
jp
xor
mov
test
inc
fcmovne
adc
mov
insl
gs
cmc
dec
je
cpuid
cmp
cli
pusha
repz
data16
adc
inc
adc
and
popf
addb
mov
fwait
or
insl
mov
dec
fcompl
enter
fstp
enter
pop
and
mov
sbbb
lds
sub
add
pop
lock
mov
shll
stc
mov
push
jl
mov
and
inc
bound
fdiv
push
movsl
jno
and
in
inc
mov
dec
mov
cmp
ret
cs
fldenv
push
pop
out
add
in
ret
ds
test
das
in
lods
out
idivl
cmpsb
cmp
shl
dec
imul
test
add
xchg
into
mov
sub
por
mov
daa
cmp
mov
sub
in
bound
xchg
in
xchg
sub
ss
sar
xor
sbb
pop
cmpsl
mov
les
jmp
mov
and
insb
fsts
pop
push
scas
rorl
sub
ficoml
sar
mov
gs
test
jnp
lock
pushf
push
shlb
sbb
mov
orl
mov
push
xor
jg
dec
jle
imul
nop
enter
std
sub
sub
sub
pop
jl
inc
in
xor
ss
movb
das
out
xor
mov
dec
test
out
xchg
push
xchg
inc
loope
mov
insl
lock
xchg
mov
mov
arpl
jl
movzwl
push
and
popf
or
stos
insb
mov
mov
adc
adc
dec
ficomps
add
mov
ja
sub
in
mov
stos
jl
mov
pop
test
repnz
loop
xor
aam
pop
jmp
cmpsb
in
lret
cld
neg
sahf
mov
aas
dec
mov
jecxz
xchg
enter
cli
nop
sbb
xchg
jecxz
xchg
jl
mov
mov
clc
cmp
or
test
lret
cmc
mov
push
gs
outsl
andb
repz
js
aad
dec
mov
dec
rol
fs
out
sarb
cmp
cmpxchg
jo
pop
or
popa
jbe
ffreep
fsubs
pop
mov
xchg
jo
mov
cmp
push
repz
sub
pop
lods
and
cmp
jb
mov
cltd
jmp
xor
or
outsl
int
data16
mov
push
cwtl
data16
scas
mov
ja
and
stos
pop
or
je
pop
push
int3
push
int3
dec
outsb
cli
loopne
lahf
or
frstor
test
and
lods
in
je
inc
mov
insb
mov
jle
sbb
pop
movsl
mov
repnz
push
xchg
call
sbbb
push
mov
cmpsl
jbe
mov
fwait
rorb
fsubl
iret
adc
cld
sbb
mov
add
add
pop
movsl
ljmp
hlt
jmp
lods
mov
sub
cmpb
arpl
imul
push
arpl
xchg
out
inc
xchg
cmp
jno
fistl
xlat
mov
mov
jg
pop
dec
push
push
jl
fisttpl
adc
or
xchg
outsl
dec
or
pusha
inc
xor
or
adcl
pop
jecxz
repz
cld
pop
and
popf
sbbl
jge
xchg
dec
xchg
inc
mov
fisubrs
in
cmpb
sbb
loop
ss
xor
sbb
and
cli
sbb
jb
ret
jno
out
mov
jmp
arpl
push
mov
mov
cmp
sub
xor
or
sub
push
xor
sub
out
cli
mov
insl
dec
popf
test
xchg
sbb
loope
lret
dec
sub
loope
sbb
add
arpl
and
les
popa
fldl
inc
add
xlat
cmpsb
lret
test
jne
iret
sti
fistps
fmull
mov
mov
ljmp
imul
and
mov
ror
mov
pop
sbb
scas
sbb
dec
cmc
aas
mov
iret
xchg
fnstcw
mov
aam
jl
scas
inc
stos
adc
imul
mov
inc
xor
jmp
into
inc
adcb
fimull
jno
and
pop
gs
jnp
inc
mov
xor
mull
xor
insl
push
or
shlb
xchg
xchg
push
js
shll
sbb
aas
cmp
push
iret
pop
push
or
lcall
push
jae
outsb
arpl
jnp
push
cli
cmc
hlt
dec
dec
xor
cld
ret
or
sahf
arpl
mov
or
sbb
cld
push
dec
push
add
dec
dec
xorb
jae
aad
sbb
int3
cs
in
je
pop
insl
add
scas
mov
shlb
in
pop
jno
std
dec
popf
push
inc
sar
rorl
mov
stos
inc
jle
jge
pop
loopne
imul
stos
jae
pop
and
push
test
inc
fs
push
dec
dec
sbb
iret
xor
shl
aaa
fcompl
movsb
lds
xlat
insl
inc
sub
pop
psubb
add
dec
mov
adc
loop
daa
xchg
fcompl
shrb
adc
cwtl
or
sbb
adc
pop
aas
dec
jb
fisttps
sub
mov
loope
or
xlat
pop
mov
into
mov
and
jno
cld
sub
adc
cmp
dec
mov
repz
and
or
add
arpl
xchg
cmp
dec
push
jg
jo
pusha
clc
or
lret
fwait
push
and
mov
sub
or
sbb
add
pushf
cs
insl
aaa
push
mov
add
arpl
sub
push
pop
cli
sbb
fists
pusha
daa
hlt
push
and
push
in
addr16
in
es
push
nop
mov
cmp
nop
xor
loop
xorl
sub
stc
cmp
adc
fmulp
adc
pop
pusha
add
inc
add
fldcw
inc
xchg
sbb
int
push
out
fmuls
mov
js
jle
lcall
out
jo
add
cs
adc
sub
push
ljmp
in
inc
inc
pop
lret
cmpsl
das
lds
sbb
jae
or
or
loop
xor
sbb
test
pop
pop
or
scas
fdivrs
cmc
push
insl
lahf
xor
sar
mov
xor
js
sbb
add
mov
aam
dec
or
jecxz
xchg
psubq
add
xor
and
out
lret
icebp
mov
test
inc
imul
test
mov
or
call
xchg
jbe
jae
sbb
dec
inc
and
or
jmp
icebp
push
out
cmp
push
mov
mov
add
push
lods
mov
and
inc
cwtl
mov
jnp
test
xchg
aaa
clc
mov
fimull
mov
negl
fwait
xor
sub
mov
out
andl
adc
or
add
dec
int3
mov
scas
lea
out
mov
adc
jmp
cld
push
pop
test
mov
daa
bound
and
mov
repz
adc
aad
in
add
pop
mov
jecxz
sahf
inc
rorl
cmp
out
inc
iret
push
sbb
dec
pop
jae
add
insb
test
mov
and
jb,pn
mov
clc
xchg
ret
xor
stos
scas
inc
cwtl
sub
mov
sbb
lret
mov
test
cltd
fcomp
fwait
mov
inc
sub
in
sub
mov
cmp
jmp
scas
cli
xor
push
add
add
dec
push
sti
inc
imul
movsl
out
jle
call
pop
fistpll
lds
aaa
in
outsb
test
shrl
imul
jge
enter
xor
jp
push
insl
jge
and
test
and
dec
jp
flds
xor
xor
test
and
loop
mov
lods
pop
out
sub
sub
jp
test
cmp
lods
fstpt
mov
or
mov
sub
gs
fidivs
mov
je
stos
pop
ficoms
dec
add
pop
xor
daa
add
add
xchg
mov
test
mov
cli
add
pop
xor
sub
xchg
cmp
cmpsl
iret
mov
mov
mov
aad
sub
cmp
fildll
mov
rcl
or
jno
mov
aam
cmpb
movsl
push
in
sub
stc
fsts
dec
ds
mov
xor
in
lea
xchg
adc
lea
sub
out
orb
jns
jb
pushf
nop
or
and
xor
cmpsb
mov
cmp
sbb
lcall
push
jae
int
test
mov
ret
sbb
rcrb
and
std
pusha
sbb
ds
and
xorb
pusha
pop
out
jns
or
mov
and
adc
cmpsl
mov
lods
push
insb
dec
shl
out
dec
dec
stos
push
xchg
dec
in
jbe
sti
push
mov
aaa
inc
cmp
pop
movsl
jnp
and
xchg
fldt
jmp
test
js
and
cs
es
scas
lock
mov
mov
xor
jb
pop
aam
fsubrs
sbb
pushf
lret
aad
add
inc
mov
js
das
rcrl
icebp
movsb
mov
add
test
jl
lea
imul
xchg
pop
or
fcomps
cmp
stc
das
rol
push
shrb
sbb
mov
or
xor
mov
and
xchg
inc
push
in
jb
cmp
jbe,pn
adc
ljmp
inc
aaa
das
aas
xchg
mov
add
sahf
or
je
push
in
subb
mov
add
aas
ljmp
rcrb
je
add
cmpsb
jl
adc
mov
imul
cli
xchg
add
loopne
mov
xchg
jae
stos
xchg
xor
sbb
loope
jp
sub
pop
xor
jo
adc
xchg
aam
jno
into
cmc
pushf
les
mov
cli
add
push
stc
aad
dec
cmpsb
jo
xor
out
jo
arpl
inc
out
and
jne
outsl
sub
add
fimull
jae
mulb
xchg
cltd
mov
push
add
mov
out
sahf
and
mov
insb
bound
adcl
enter
mov
rcrl
mov
jecxz
xchg
sub
pop
or
jae
aaa
cmpsb
ret
neg
xorl
jp
clc
push
sub
jl
call
into
ja,pt
ss
dec
add
push
leave
out
cli
cmp
mov
and
mov
orb
aad
jecxz
add
xchg
push
sbb
mov
adc
fs
mov
popf
xor
and
shl
call
add
sub
sub
call
pop
mov
jecxz
xchg
cmp
mov
jg
bound
cld
daa
ficompl
mov
ss
lcall
sbb
xchg
je
movsl
adc
lea
xchg
cmp
decb
add
and
ss
xor
adc
aas
test
shlb
cmp
popf
sti
je
sub
rcll
shll
adc
and
ljmp
loop
aas
inc
lea
mov
xchg
xchg
or
ja
fisubrs
push
push
mov
add
hlt
inc
in
and
shlb
push
addr16
inc
jb
sti
sub
xor
dec
xchg
enter
data16
sbb
and
sti
sbb
mov
les
insb
aaa
and
xor
inc
andl
aaa
gs
pushf
and
fwait
into
jp
sub
movsl
or
push
mov
adc
jle
cmpsl
cmp
lret
xor
sbb
xchg
mov
aaa
addr16
testb
int
mov
mov
es
cmpsl
dec
sti
in
addb
inc
lcall
in
or
icebp
divl
dec
inc
fnstcw
rcrb
mov
aaa
push
movsb
jbe
sbbl
out
or
scas
cmp
push
outsb
pop
pushf
inc
cmp
test
jae
or
stc
enter
stc
xchg
xor
fincstp
test
lahf
rcrl
cmp
test
sbb
in
fimuls
add
and
shll
cltd
jl
daa
std
xchg
out
pop
inc
outsl
xor
push
xchg
mov
dec
adc
inc
add
mov
or
sbb
in
cmp
loopne
repz
xchg
jbe
shll
mov
add
test
push
mov
xor
cmp
xor
in
adc
and
mov
xor
xor
xchg
or
mov
ret
fwait
into
inc
outsl
cmp
fsubl
mov
sahf
mov
xlat
mov
cmp
in
das
xchg
int3
and
scas
or
fdivrl
push
and
push
jle
jbe
iret
mov
pusha
mov
hlt
xchg
add
xlat
sarl
arpl
jno
shrl
jne
stc
mov
pusha
add
xchg
or
mov
and
in
out
pop
cmc
cmp
sahf
repz
inc
notl
or
popa
popf
mov
enter
push
mov
inc
imul
push
stc
js
xchg
cld
mov
rcrb
daa
jno
dec
and
ret
in
dec
pop
or
cmpsb
test
in
mov
rcll
inc
dec
jp
sbb
es
xor
mov
fcom
pop
shll
dec
sub
cmp
or
flds
or
shll
pop
pop
push
or
inc
addr16
ss
jns
sarl
in
lock
int3
into
bound
jl
add
lret
push
mov
outsb
add
cmp
lcall
xchg
int
dec
jl
sub
xchg
mov
ss
jb
adc
adc
fisubrs
pop
or
jl
mov
push
jecxz
sub
jmp
sub
and
and
xor
in
add
dec
push
cmpl
mov
loop
mov
mov
jo
and
jge
mulb
adc
adc
sahf
in
dec
andl
mov
lds
jnp
jecxz
xor
add
inc
add
or
ret
or
aas
fs
add
sub
lahf
movsb
xchg
mov
jl
icebp
fildll
mov
fucomi
or
cs
add
sarl
mov
lods
cmp
xchg
das
test
sbb
psubd
cwtl
xor
pushf
push
push
clts
jns
adc
adc
ljmp
xorb
incb
dec
push
lock
pop
adc
mov
in
adc
jo
inc
add
inc
mov
sub
cmp
jg
lock
jle
pop
cltd
xchg
outsl
negl
ljmp
test
xor
lcall
popf
mov
icebp
inc
cmp
bound
scas
imul
xchg
rcl
xor
sbb
xor
repnz
mov
xchg
out
xor
orb
or
adc
jge
push
mov
fs
cmp
push
jge
adc
pop
iret
out
lea
xchg
cmp
jne
aaa
push
test
cmpb
jp
push
xchg
add
pop
call
into
arpl
sbb
popa
pop
loop
in
pop
div
mov
iret
push
lock
loop
mov
cli
ss
int3
data16
dec
jnp
inc
adc
ds
leave
adc
push
mov
and
les
roll
int3
mov
lds
cmp
hlt
mov
or
sti
cmpsl
mov
ljmp
add
pushf
jbe
mov
xchg
hlt
addr16
imul
cltd
jae
sbb
testl
icebp
pushf
dec
movsb
hlt
and
push
mov
fisubl
xor
fwait
pushf
mov
dec
mov
xor
mov
xchg
dec
loopne
pushf
sbb
int3
push
mov
cs
push
negb
xor
mov
lahf
fninit
mov
mov
sub
dec
push
aas
mov
mov
xor
cmpsl
mov
es
add
inc
in
call
loop
xchg
jmp
add
je
mov
add
push
ss
test
pop
xor
push
addb
jmp
jl
lahf
mov
mov
push
out
addl
call
dec
dec
fbld
cs
mov
xchg
push
ficoms
shll
push
xor
sub
xor
xchg
xchg
shrb
std
cmp
fisubs
sub
into
out
xchg
ja
mov
imul
fisttpl
rclb
out
and
adc
inc
cltd
lahf
imul
add
fsubr
xchg
add
js
dec
mov
adc
cmpsl
icebp
sbb
lret
imul
mov
add
mov
pop
cltd
imul
add
pop
xlat
gs
ss
jne
fisubrs
cmp
mov
mov
mov
jmp
or
negl
subl
insb
xor
xchg
test
jecxz
loop
sub
mov
mov
and
and
jns
push
inc
or
jnp
sbb
mov
lahf
cmp
fimull
pop
lea
enter
and
and
int
repnz
and
mov
popf
mov
jnp
into
inc
test
lcall
push
mov
jl
cmpsl
aad
stos
mov
mov
push
xchg
push
adc
incl
jae
or
jno
push
ffreep
aaa
rcrb
mov
sub
mov
lret
and
cmp
out
push
cmp
pushf
jbe
inc
jne
cwtl
mov
and
clc
bound
cmp
in
adc
rorl
and
into
mov
scas
ftst
je
add
or
adc
ja
js
mov
xchg
jns
sub
cvtps2pd
mov
mov
imul
inc
fnsave
aam
mov
jnp
pushf
mov
call
cwtl
jnp
jl
add
dec
inc
or
sahf
sbb
xchg
lcall
xor
pop
mov
lea
into
mov
adc
loope
push
mov
cmp
xchg
lea
inc
jp
dec
dec
or
ds
je
insl
int
test
xor
in
in
pop
fstpl
aad
sti
es
xor
in
cmpsl
popf
testl
mov
lock
inc
testl
or
cwtl
mov
push
lahf
add
cmp
xchg
fs
add
jp
or
push
or
add
xor
ficompl
aad
cld
out
xchg
lret
sbb
loope
mov
cmp
stos
in
add
pusha
add
cltd
mov
mov
jns
lahf
jne
xchg
or
cmp
aad
add
xor
lods
adc
ds
cmp
out
xchg
pusha
popl
pop
xlat
std
stos
xor
xor
int3
jmp
lcall
jp
data16
data16
and
in
sub
sub
das
mov
fs
xchg
pop
loopne
addr16
dec
data16
xchg
push
sbb
hlt
jb
loopne
insb
lcall
je
out
cmp
mov
por
fs
push
inc
dec
lods
mov
into
add
cwtl
jg
in
adc
ss
fsubrs
mov
and
out
nop
fiadds
add
and
lods
test
pop
or
push
inc
cmc
shl
ret
repz
mov
add
int
outsl
fcomi
aam
ret
inc
rorl
fucomp
scas
mov
push
mulb
enter
xor
ret
push
sbb
popa
jo
adc
sbb
out
lds
aad
insb
cmp
pop
xchg
insb
int3
movsb
add
and
jmp
push
inc
out
pop
or
mov
add
out
inc
ljmp
jg
dec
push
stos
xlat
and
stc
fpatan
shl
cmc
dec
sub
and
and
in
dec
push
movsl
cmp
mov
loop
notb
push
add
push
loopne
aaa
push
dec
ret
clc
cmp
repz
mov
imul
mov
xor
and
shlb
scas
popa
psubsw
inc
fs
stos
and
pop
xchg
xchg
mov
out
pop
ss
scas
and
cmp
mov
lcall
jae
js
lods
cwtl
jae
mov
xchg
cli
fbld
pop
sub
pop
push
mov
mov
in
loope
mov
sbb
mov
sbbl
int3
dec
jge
nop
xor
mov
cmp
and
inc
push
xchg
push
nop
lods
sbb
aam
test
mov
sub
fs
dec
popf
mov
add
or
dec
ja
cmp
lahf
xlat
sbb
in
test
aad
scas
mov
inc
cmp
mov
orb
fisttpll
sub
loope
push
std
ficomps
inc
lret
shll
test
mov
inc
hlt
jp
push
dec
dec
dec
push
push
hlt
insl
scas
or
push
sbb
cltd
add
cmp
adc
scas
adc
call
arpl
inc
mov
popf
in
data16
sbb
lahf
push
out
inc
in
in
cmpsb
inc
mov
stos
push
std
fstps
cmpsb
mov
popa
pop
mov
jl
stos
cs
xlat
inc
aam
adc
inc
xchg
daa
sbb
dec
push
rcll
ja
and
add
xchg
outsl
push
jbe
lods
push
lahf
dec
shll
inc
or
rclb
dec
or
dec
cmp
sarb
push
nop
inc
sti
dec
aas
in
faddl
cmp
and
jb
dec
out
or
mov
sub
fdiv
jl
dec
xor
lret
adc
and
xchg
or
pop
clc
ret
cwtl
scas
ss
lea
daa
or
xchg
or
xor
cld
xchg
sbb
cli
stos
sub
lock
sub
fsubrl
loopne
mov
pusha
push
pop
xor
das
pop
lret
les
push
addb
cmpsl
xor
outsb
out
and
scas
pusha
cwtl
cmpl
ja
mov
adc
repnz
out
cmc
xchg
lgdtl
mov
arpl
subb
jle
cmp
jmp
push
popa
int
lods
xor
in
xchg
arpl
mov
sub
loop
loopne
dec
add
and
das
and
data16
push
scas
scas
inc
cmp
test
fcmovne
aas
int3
repz
mov
adc
iret
add
ds
fistl
mov
mov
xor
xor
or
mov
push
inc
inc
sahf
push
daa
aas
sub
jns
jbe,pt
sub
loope
mov
mov
xchg
cli
xchg
mov
pop
mov
xor
or
aaa
out
jle
dec
mov
enter
fldcw
sbb
mov
mov
dec
ret
mov
dec
cmpsb
sub
sub
mov
push
add
inc
adc
dec
pop
cmc
mov
in
aam
orl
mov
ds
icebp
cmp
sti
pop
sbb
cmp
int3
xchg
ljmp
aaa
cmp
sub
pop
sti
xor
jl
and
cmp
jp
stos
lea
std
popf
loope
ss
mov
call
dec
and
pop
jno
dec
stos
orb
arpl
push
pushf
scas
scas
sahf
jmp
aam
scas
fisttps
and
pop
int
rcrl
iret
mov
imul
sbb
outsl
out
sub
push
sbb
xor
xchg
xchg
jb
sbb
pop
add
imul
xchg
pusha
push
into
cmp
add
sbb
aam
xchg
pop
mov
jne
inc
mov
roll
jbe
pushf
xchg
cmp
sbb
add
jge
lahf
and
dec
testl
ja
sbb
add
pop
out
mov
outsb
clc
mov
and
fcomp
adc
ret
cmp
dec
adc
out
outsb
fcoms
pop
xchg
mov
push
xchg
scas
dec
sub
jl
cmp
pop
clc
loope
ds
fbstp
popa
cwtl
sbb
mov
fldenv
jp
cmc
cmp
je
cmp
lcall
mov
nop
add
xor
nop
movsb
out
pop
fwait
leave
out
mov
and
inc
and
sub
das
sar
pop
inc
lahf
sbb
sbb
dec
aas
js
inc
popa
push
pop
pop
adc
mov
js
adc
push
loopne
pop
jmp
outsb
cmp
dec
cmc
sub
negb
lahf
and
mov
aas
xorl
cld
out
dec
pop
cli
test
fisubs
dec
ja
nop
shl
dec
jmp
dec
xchg
sub
adc
push
test
xchg
pop
lahf
jl
mov
inc
out
testb
jmp
mov
fimull
out
cmp
mov
xor
add
in
lock
fisttpll
stc
xchg
outsl
rclb
jecxz
mov
or
mov
loop
jge
lods
incb
or
cmovo
ret
test
dec
pop
pop
mov
jns
jno
cmp
mov
xchg
movsb
lods
or
daa
add
test
push
mov
dec
in
pop
rolb
lods
shll
mov
xchg
fs
mov
lods
add
push
lods
lcall
jp
out
jbe
ss
in
incl
cmp
sbb
das
pop
sub
repnz
cmovbe
jo
mov
sbb
int3
mov
jp
sbb
xchg
ret
jg
jne
inc
ret
cmpsb
fsts
ret
popl
lds
cwtl
adc
jl
fildll
insl
mov
add
out
mov
dec
sub
pop
dec
mov
aad
repnz
mov
xchg
sub
xchg
cmp
cltd
bound
jmp
mov
xor
fnsave
jns
and
pop
loop
repz
pop
inc
add
mov
mov
push
arpl
ss
insl
mov
adc
mov
xorb
std
fnsave
out
lods
aad
and
les
mov
xchg
es
pop
push
aad
push
aad
dec
cmpsb
sub
rcll
fmull
mov
mov
dec
imul
or
dec
and
sub
dec
adc
pop
sbb
arpl
adc
nop
fnstenv
mov
in
push
xor
push
push
xor
sbb
xchg
daa
mov
ret
popf
cmp
cmp
xorb
mov
inc
mov
stc
ror
dec
lock
xchg
call
cmp
xchg
ss
jb
sub
insl
push
repz
or
jns
out
pop
das
ss
popf
cmp
jge
and
sub
jns
rcll
and
outsb
icebp
sub
pop
mov
push
aas
leave
dec
add
leave
insl
mov
fincstp
cmp
fwait
add
fadds
cmp
push
icebp
ja
cmp
cmp
nop
lcall
dec
xor
idivl
push
mov
lcall
rol
lea
test
sub
add
and
js
mov
mov
rcl
jg
in
and
inc
jo
outsb
sahf
xchg
fistpll
in
andps
or
movsb
sbb
call
cltd
jae
lret
test
cld
mov
and
mov
jnp
fsubr
movsb
xlat
dec
mov
mov
inc
cmpb
std
out
mov
fsubp
les
mov
mov
push
inc
adc
cmp
enter
pop
jle
add
mov
mov
or
sbb
cmpl
xchg
test
daa
add
daa
mov
jne
negb
sbb
pusha
outsb
add
and
cmp
jbe
adc
fucom
xchg
fs
in
mov
xchg
ficoml
dec
sub
inc
insl
inc
out
cmp
sbbb
lret
jg
xor
cs
mov
cwtl
cs
aas
aam
in
movsl
scas
xor
daa
enter
les
dec
dec
sbb
cmpsl
in
mov
xchg
std
je
jb
xchg
mov
adc
lret
mov
fs
mov
test
push
jne,pt
pusha
cmp
adc
ja
sub
xchg
fsubl
inc
or
pop
adc
sub
dec
out
loop
jge
push
pusha
lock
js
add
lods
mov
fisttpll
test
out
mov
fcmovu
jo
mov
adc
testl
lcall
pushf
and
xchg
gs
repnz
xor
mov
and
dec
std
mov
rcll
jb
jns
pop
movsb
cmp
pop
sbb
popf
jb
cmc
jg
dec
push
and
loop
mov
sbb
mov
mov
mov
dec
xor
imul
jecxz
stos
push
repnz
add
fidivrs
mov
fcmovbe
int3
mov
js
enter
cmpsl
sub
inc
out
mov
ficompl
mov
bnd
cmp
or
fiadds
xor
jmp
add
and
lcall
shll
in
lret
ljmp
leave
and
dec
ds
jg
leave
xchg
cld
stos
leave
mov
mov
mov
enter
ret
cmpsl
or
lahf
push
sub
out
aam
mov
mov
in
ds
mov
in
cmpsb
and
and
int
xor
dec
jg
nop
dec
ljmp
arpl
pop
std
xor
xchg
lea
jo
pop
adc
test
push
dec
dec
and
jne
fsubs
xor
mov
pop
xchg
sub
mov
mov
leave
je
dec
cmp
cmc
in
lcall
jne
out
mov
call
add
jne
dec
ffreep
repnz
push
pop
ljmp
scas
inc
mov
mov
xchg
and
or
sub
loop,pt
fdivrl
xchg
push
add
and
jmp
in
add
xor
inc
sub
decl
mov
aaa
imul
cli
test
cmpsb
sub
mov
mov
lods
sbb
mov
daa
lods
lock
push
push
add
flds
sti
mov
std
bnd
dec
adc
imul
mov
inc
jns
sbb
gs
addb
adc
mov
cltd
add
scas
mov
stos
xor
outsb
stc
pop
mov
xor
movsl
cs
mov
adc
inc
xchg
pop
inc
out
decl
jp
mov
mov
sbb
push
enter
insb
or
sub
mov
nop
sbb
push
mov
cmp
or
pusha
movb
fistps
outsb
mov
cli
fidivl
and
jnp
insl
lods
xor
mov
xchg
mov
pop
out
or
or
xor
popf
pusha
pop
or
ss
adc
jb
int
or
test
sbb
orl
jo
or
or
in
dec
shlb
push
or
out
insl
out
xor
aas
xchg
xchg
dec
jecxz
ss
test
sbb
mov
xchg
cli
xor
or
insl
or
shr
jl
cltd
repz
inc
lret
and
test
test
jecxz
adc
and
jo
into
out
sub
repz
addr16
aaa
lea
sub
lods
adc
call
stc
sub
push
mov
add
int
scas
xor
loop
mov
and
and
aam
cmpsl
cmp
sbb
aam
sub
cwtl
mov
popa
jge
push
aad
cli
pop
pop
ret
in
push
push
das
in
add
add
dec
jg
out
insl
sbb
push
mov
test
shll
stc
addr16
aaa
loope
gs
das
movsl
dec
mov
cmpb
add
jmp
loope
loope
mov
adc
add
enter
xchg
fdivl
data16
lea
enter
fisubrl
shlb
cmp
out
lcall
cld
dec
out
mov
push
cmc
cmp
cld
leave
mov
leave
cmp
or
jo
call
xor
mov
loop
cmpsl
les
xor
and
fists
sbb
xor
dec
sti
into
std
jno
lret
inc
and
lcall
pusha
jne
push
std
and
sbb
mov
test
xor
push
jne
adc
popa
sub
insl
add
lcall
xchg
loopne
test
je
mov
mov
xchg
pop
and
jp
shlb
insb
mov
sti
pop
or
pop
out
cld
out
adc
and
or
adc
icebp
ljmp
je
xchg
sarl
dec
inc
push
dec
popf
add
pop
inc
repnz
aas
mov
lock
int
shlb
sub
adc
rol
pop
cmp
adc
push
and
ja
pusha
mov
scas
daa
fdivs
sbb
dec
leave
mov
push
push
fstp
push
xor
push
fisubrs
jne
cmpl
cli
push
add
mov
jae
addb
or
push
and
movsl
adc
sarb
fwait
int
mov
je
xlat
cmpsb
mov
add
out
push
adc
push
or
or
sahf
mov
pop
mov
leave
mov
test
dec
insl
jb
xor
adc
or
push
out
ret
xchg
dec
fdivs
add
aaa
mov
or
arpl
adc
scas
ss
cmp
lods
mov
dec
mov
mov
mov
ror
sub
inc
int
add
sbb
pusha
fiadds
cmp
fs
and
dec
cmp
ja
adc
inc
jecxz
inc
test
insb
pop
jmp
xor
loop
push
xchg
push
rcrl
and
jns
push
cs
dec
xchg
jmp
fbld
mov
mov
test
ret
xor
fidivrl
xor
xor
jp
pop
fcmove
xchg
jecxz
sbb
insl
jl
mov
mov
pop
fsubl
xor
adc
and
rorb
imul
int
pop
adc
push
inc
pop
insb
fbld
sbb
fisubrl
faddl
into
es
mov
ret
pop
jb
mov
mov
mov
mov
push
loop
sbb
mov
and
sub
mov
dec
mov
inc
data16
sbb
sub
push
add
inc
clc
mov
decl
add
push
leave
out
add
add
push
lret
adc
adc
outsb
and
call
mov
lea
push
cs
jnp
and
jp
and
mov
idivb
jnp
xor
loopne
mov
sbb
sub
hlt
lds
ja
jge
mov
and
ficomps
jbe
ljmp
iret
push
into
jne
pop
cmp
push
dec
mov
jno
add
loopne
loope
js
sti
lock
rolb
repnz
hlt
pop
jmp
jmp
ljmp
mov
mov
sub
push
xor
pop
fwait
aad
repz
inc
pop
pop
pcmpgtw
or
adc
roll
lret
out
xchg
push
push
mov
jo
pop
jmp
jae
cmp
push
push
and
pop
in
xor
repz
enter
loopne
mov
xor
dec
add
inc
cmp
and
loop
adc
dec
or
push
dec
insb
inc
jmp
mov
and
jg
hlt
cwtl
add
xor
dec
ja
xchg
push
jp
adc
cmpb
and
aad
add
gs
or
inc
es
push
lock
shll
fwait
mov
loopne
gs
add
mov
ret
scas
out
and
push
add
nop
sub
aaa
sarl
testb
stos
jns
pop
mov
pop
mov
cmp
out
jle
jmp
sub
mov
into
mov
addr16
lock
lret
pop
sbb
aaa
cmpsl
or
fisubrl
mov
add
leave
fidivs
lock
fdivl
xor
sub
cltd
adc
aaa
mov
and
jnp
lods
adc
cmpsl
add
lcall
inc
add
add
xchg
sub
pop
ret
arpl
mov
mov
push
inc
jl
cli
xchg
cmp
adc
fsubrs
jb
cmpsl
or
push
cwtl
mov
movl
addr16
push
xor
int3
jge
sbb
scas
lcall
and
mov
addr16
pop
ret
lahf
pop
lds
mov
lret
orb
mov
and
mov
sub
and
cmp
daa
xchg
negl
mov
scas
call
dec
test
inc
arpl
mov
mov
or
loope
sbb
loope
bound
movsl
xchg
cmc
mov
sbb
xor
mov
imul
or
scas
mov
loop
inc
jl
pop
pop
mov
jns
xor
jno
sbb
mov
xchg
cmc
inc
dec
jmp
inc
mov
call
inc
hlt
mov
mov
mov
test
mov
push
jp
loope
popa
push
pop
sti
sahf
rclb
fmull
and
rolb
movsl
popf
sub
in
dec
push
imul
and
je
push
fistpll
xchg
loopne
mov
jb
in
sbb
dec
pop
adc
mov
sub
call
test
mov
xor
outsb
out
in
xor
adc
rcrb
pop
enter
sti
jmp
push
cmc
add
push
mov
fmulp
imul
orb
test
xchg
push
in
dec
adc
lret
inc
pop
pushf
mov
out
mov
fsubp
addr16
pusha
loopne
insl
nop
inc
push
ljmp
pop
rcl
pop
jb
xor
sbb
cmp
shlb
add
imul
xchg
push
scas
jo
or
mov
jbe
pop
ds
imull
add
clc
jb
std
xchg
add
xor
cmp
clc
aas
fwait
aaa
loope
ss
aam
sahf
dec
xchg
dec
cmp
scas
sbb
adc
xchg
cltd
scas
test
ss
xchg
push
inc
dec
test
mov
std
lcall
xor
jno
add
enter
enter
subb
pop
and
push
fs
adc
xor
mov
xchg
and
dec
in
hlt
stc
cmpsb
aaa
cltd
scas
add
xchg
inc
adc
imul
cltd
pop
add
fistpl
int
cmp
inc
push
inc
insb
das
or
dec
push
bound
cwtl
push
pop
test
out
data16
fldenv
sub
sub
xor
jmp
pop
pop
ret
pop
fwait
movsb
cmp
int3
mov
in
or
inc
popa
sub
jmp
test
das
pushf
jl
test
push
repnz
or
cmp
mov
fldl
and
cltd
push
xor
ss
inc
iret
mov
popf
test
mov
aaa
test
lods
outsb
add
imul
in
sbb
cli
fnsave
daa
notl
xchg
int3
fsubrs
push
test
leave
mov
push
fs
subb
popa
and
insl
push
les
lods
sub
fcomi
shl
mov
add
icebp
ljmp
lret
sti
iret
sub
aad
cs
xor
aam
icebp
imul
push
jecxz
add
ret
cli
aad
in
popa
sbb
add
call
test
jp
jg
in
xor
pop
jp
pop
fcomps
adc
dec
sarl
dec
ror
dec
outsl
into
add
imul
add
sbb
lock
in
sub
inc
jae
pop
and
lock
scas
jl
xchg
loop
pop
sub
sbb
dec
ja
mov
push
push
mov
ss
out
shll
jb
sbb
in
push
add
imul
or
add
pop
push
mov
sbb
inc
xchg
add
mov
test
lea
push
fsubr
repz
gs
push
mulb
out
xchg
in
mov
mov
dec
aas
jnp
sti
dec
cs
add
imul
jmp
push
pop
dec
adc
push
cli
push
rclb
out
adc
sbb
cmc
pop
sbb
rol
add
test
loope
xor
xchg
out
xchg
lahf
mov
fstps
gs
xor
jo
dec
in
jecxz
in
add
mov
dec
push
repnz
or
mov
push
pop
jno
dec
push
mov
pop
xorb
gs
and
icebp
mov
jo
out
cmp
inc
dec
xor
inc
adc
push
gs
sbb
ret
mov
lcall
mov
xchg
inc
adcl
movsl
daa
cmp
mov
dec
and
jo
adc
sti
bound
daa
cmpsl
jns
inc
hlt
push
pop
popf
sub
push
jle
pop
inc
pusha
iret
push
pusha
pusha
push
aas
iret
movsl
sub
jns
jge
pop
mov
cmp
mov
int3
cmp
sbb
jns
inc
fisubl
test
fbld
mov
out
pop
popa
adc
subl
dec
mov
cmp
push
mov
mov
dec
imul
mov
cmp
lods
aas
gs
and
nop
xor
aam
popf
das
hlt
mov
lcall
xor
sub
push
push
jmp
dec
rclb
xchg
add
roll
jp
mov
or
or
popf
ds
inc
lret
pop
je
jle
pop
ret
cld
movsl
sbb
sub
adc
inc
mov
push
jl
iret
outsb
loopne
loop
adc
mov
cmpsb
rcrb
mov
inc
mov
sub
aaa
push
pop
andb
aam
ret
xchg
lods
shr
imul
sbb
mov
shr
mov
xor
popa
popf
sub
nop
push
inc
mov
sti
and
imul
sub
not
lea
mov
or
jb
cltd
ja
and
lods
repnz
sbb
les
dec
inc
mov
faddl
mov
sub
add
test
dec
adc
loope
sub
jae
and
insb
push
pop
dec
mov
mov
mov
scas
xor
pushf
cmpsb
jmp
mov
sahf
mov
or
hlt
ds
in
jp
enter
or
or
add
cld
add
sahf
push
mov
mov
idiv
js
out
mov
fisubl
xchg
push
xchg
xchg
pop
push
dec
testl
daa
addb
mov
sub
xchg
pushf
addr16
xor
sbb
push
imul
test
nop
ret
xor
xor
sahf
cmpsb
aad
or
mov
icebp
inc
dec
xlat
push
sub
and
or
xchg
add
jbe
adc
out
repnz
loopne
pop
add
mov
andl
inc
inc
adc
push
mov
mov
sub
outsb
add
leave
pop
dec
mov
cltd
testl
xor
arpl
mov
xchg
jb
dec
scas
fcoml
adc
xor
cmpsl
enter
fmulp
add
adc
lea
fisubs
insl
mov
inc
sbb
inc
lahf
jae
nop
dec
shlb
repnz
test
mov
push
xor
mov
sti
jg
sub
sbb
lret
in
and
xor
imul
addb
pop
pop
das
dec
stos
jbe
pop
idivb
jmp
pop
scas
adc
xor
xchg
xor
out
out
ds
jae
jnp
cmpsb
roll
mov
mov
inc
pop
sti
xchg
sbb
push
push
cmpsl
scas
loop
xchg
push
inc
test
scas
pop
push
and
dec
leave
cmpsb
xor
sub
outsl
ljmp
jbe
dec
iret
adcl
popa
fcoml
jns
fwait
clc
xor
icebp
push
pop
xchg
sbb
fidivrs
ret
insb
push
fwait
mov
repz
movsb
mov
mov
testb
cltd
or
xor
add
rol
or
shlb
hlt
or
adc
push
std
jle
jle
jg
fidivs
mov
mov
xlat
add
dec
sbb
cltd
stos
mov
cld
test
sub
cmc
jbe
push
adc
xor
setge
mov
cmpsl
mov
or
lds
xchg
fisttpl
mov
push
in
fildll
icebp
insl
mov
fimuls
lcall
cmpsl
push
stos
leave
cmp
cltd
hlt
lods
mov
mov
imul
mov
insl
cwtl
inc
ret
sbb
xlat
in
cmp
push
jnp
jo
clc
les
fs
xchg
sti
pop
fildll
cs
sarb
sub
fisttps
rol
adc
sbb
dec
sub
aad
xor
outsl
bound
leave
popa
cld
jmp
jno
mov
adc
or
outsb
sub
pop
adc
ja
xor
jno
inc
dec
mov
pop
or
dec
xchg
and
inc
xor
dec
cli
ret
sub
out
sub
mov
ret
mov
out
or
rep
dec
mov
inc
cmp
pop
cmc
cli
icebp
loopne
rcll
jl
repnz
fwait
jmp
cmp
push
ljmp
xchg
jmp
adc
pop
testb
aam
xchg
mov
aaa
mov
jmp
aam
lock
sub
pop
lcall
or
xchg
sbb
in
addl
ja
pop
sub
stc
sbb
cmp
mov
mov
pop
bound
subb
adc
call
pop
cmc
xor
or
sbb
mov
mov
lret
cs
setl
enter
mov
push
add
push
outsl
addr16
test
out
jb
pop
cmp
daa
mov
push
mov
push
fistps
stos
cmc
push
rorb
push
out
lcall
jb
jp
popa
dec
or
test
dec
sub
cld
jae
jbe
fwait
xor
xor
enter
js
jle
add
push
xchg
es
fsubrl
mov
popf
cmp
test
ret
pusha
cld
dec
cld
gs
mov
lods
push
pop
mov
mov
test
in
xchg
xchg
out
jg
cltd
pop
test
mov
jecxz
ret
inc
and
stos
inc
add
cmpsl
mov
xchg
lds
mov
aam
hlt
push
cmp
and
push
xor
mov
insb
test
mov
mov
sub
mov
addr16
pushf
pop
and
int
test
out
imul
sahf
fistl
adcl
daa
gs
adc
inc
push
inc
and
and
fmull
sub
mov
in
nop
js
ficoml
xorl
mov
popf
sbb
pop
fmul
lret
or
sub
test
or
pop
dec
mov
mov
sub
imul
mov
adc
push
xor
jecxz
cmp
iret
jnp
sub
leave
jecxz
sub
mov
xor
sti
adc
loop
incl
cld
lock
cmp
sbbl
jp
mov
scas
cwtl
rcll
loope
lods
or
xchg
lahf
lea
xor
lock
dec
imul
ljmp
mov
inc
hlt
inc
shlb
xor
loop
mov
popf
leave
test
xor
roll
jae
repz
shll
sbb
inc
sbb
mov
jns
shrl
mov
rorb
lret
into
jns
xchg
inc
push
addb
mov
dec
les
xchg
je
gs
inc
or
adc
hlt
mov
insl
pop
push
test
or
dec
sahf
sbb
xlat
xchg
cmp
or
cltd
sub
je
bndstx
ja
loope
mov
loope
cmp
adc
sbb
push
fidivs
cmpsl
push
cmp
jmp
xor
sub
fs
popf
out
in
stos
jp
popf
dec
ja
mov
and
dec
pop
push
imul
std
daa
mov
fsubl
insb
scas
sub
sbb
rcr
jo
dec
aaa
std
dec
jg
fists
xor
xchg
mov
xor
lret
sti
xchg
lock
fsubrl
pop
and
sbb
or
push
outsl
dec
and
xchg
sbb
xor
mov
int
gs
popf
inc
dec
jb
je
js
in
pushf
idivl
pop
inc
sahf
fs
add
push
push
cmp
data16
mov
adcl
jnp
sarl
leave
js
push
add
xchg
xor
jl
insb
inc
fidivrs
add
test
sub
push
sbb
jmp
sbb
int
popl
push
jb
loope
jns
ja
or
sub
cmp
xchg
and
fwait
int
dec
push
mov
adc
out
fmul
xlat
push
dec
cmp
imul
jne
insl
push
and
outsl
scas
cwtl
jp
inc
fcoms
jge
in
or
cmp
nop
add
lods
lret
push
enter
sbb
adc
mov
adc
fldt
add
inc
xor
fnstsw
les
or
sub
stos
jmp
hlt
xchg
and
in
aaa
sbb
jg
or
xchg
xchg
or
pop
out
or
xor
sbb
xor
lret
pop
lret
sub
or
sbb
adc
sub
iret
loope
int
frstor
dec
push
imul
inc
adc
jg
sbb
mov
mov
sbb
aad
pop
mov
sarb
add
jo
fimull
fs
add
mov
mov
outsb
cltd
fnsave
scas
rorb
adcb
stc
adc
xchg
sub
xor
pop
xchg
iret
sub
mov
inc
fwait
stos
loop
aas
or
add
jmp
outsb
lods
fstpl
push
push
dec
iret
imul
outsl
lea
rorl
je
out
add
loope
scas
xor
jle
movsb
mov
or
mov
rcl
aas
adc
outsl
xor
mov
jns
pop
lods
in
int3
lods
ljmp
xor
cwtl
push
fstpl
addr16
sub
iret
std
call
push
mov
cs
inc
fsts
push
cmp
add
aaa
sahf
mov
xor
shrb
in
or
jle
fistpll
sbb
mov
lods
sbb
test
cmp
xchg
or
rorl
cmc
mov
aaa
sub
push
ljmp
push
sub
adc
add
push
mov
add
mov
or
mul
aam
les
out
call
jnp,pt
mov
ss
pushf
call
inc
repz
lahf
cs
push
addr16
inc
sub
incb
inc
mov
mov
mov
pop
mov
sub
hlt
xor
jnp
int3
shlb
out
arpl
inc
jne
test
cs
in
ficoms
mov
stos
ret
or
movb
push
xlat
pop
ja
mov
es
pop
and
add
or
jge
ljmp
int3
bound
pop
cmp
icebp
popf
push
not
mov
inc
dec
push
dec
and
outsl
int
pop
fwait
stc
cld
fldenv
aas
mov
push
push
mov
xchg
jo
jl
ds
push
cmp
aaa
fs
imul
jo
dec
shrl
inc
cmpsb
stos
dec
push
mov
fiadds
and
icebp
cli
jecxz
test
mov
pushw
mov
stc
lods
push
lods
cmp
fidivl
inc
mov
pop
sub
cs
ds
or
push
test
or
xchg
jb
fwait
mov
mulb
sbb
mov
pop
addb
and
je
inc
sbb
jae
mov
sub
pop
jmp
and
mov
stos
xchg
xchg
xor
addl
xor
add
lds
lahf
sahf
inc
mov
lods
mov
mov
dec
cmp
lea
push
movsb
push
push
idivl
pop
mov
dec
push
add
dec
imul
sub
in
mov
adc
sub
mov
inc
sbb
loope
xchg
dec
add
inc
mov
push
int3
push
sbb
pop
push
imulb
cmp
shll
xchg
subl
push
lods
dec
jmp
add
adc
outsb
out
into
push
and
add
mov
jle
sub
inc
or
and
jle
fstps
adc
sub
mov
push
out
add
inc
ljmp
and
inc
daa
add
out
xchg
lea
mov
lcall
idivb
push
idivl
lock
data16
cmp
test
and
inc
mov
xor
jecxz
sti
ret
lret
out
sub
sub
sbb
stos
fucomip
fnstcw
mov
sbb
or
xchg
cs
scas
ret
and
adc
imul
mov
arpl
inc
mov
out
xchg
adc
mov
adcl
pop
mov
imul
es
lea
cmp
std
add
jno
jne
lods
cs
pop
xchg
lret
add
xchg
sbb
pop
mov
mov
add
xor
pop
inc
sub
shll
sub
add
lock
ja
mov
icebp
jl
data16
add
in
dec
movsb
movsb
xchg
mov
stos
sbb
cmp
out
inc
cli
or
mov
add
jns
arpl
mov
iret
add
mov
ret
lods
jle
mov
mov
testb
adcb
subb
cli
lea
ss
adc
mov
pushf
push
scas
inc
int3
idivb
out
inc
filds
cmpsl
test
loope
es
or
lret
mov
loope
icebp
das
add
popf
push
je
ljmp
out
imul
lcall
insl
das
arpl
mov
xor
jnp
add
push
fs
push
cmp
rorl
add
add
subl
add
lods
pushf
xor
outsb
push
sbb
int
dec
xchg
jl,pn
repnz
dec
fcmove
scas
scas
popf
lods
push
insb
cmp
js
or
xor
pop
pop
pop
mov
sbb
push
xchg
xchg
cmp
jnp
sti
test
cmp
negb
cwtl
add
jns
ja
pusha
nop
mov
jg
add
inc
subl
bound
adc
ret
pop
inc
cmpsb
lea
and
sti
xchg
mov
rcll
xor
and
aaa
std
push
call
rcll
fstl
sbb
mov
out
dec
jbe
call
xchg
and
add
jns
cld
pusha
in
push
inc
roll
push
jns
dec
dec
jno
jo
out
pop
jae
inc
cli
mov
sbb
data16
loopne
sub
sub
xor
js
les
daa
inc
aaa
rolb
fwait
int3
cmp
mov
pop
xor
xchg
insl
dec
xor
pop
mov
fwait
icebp
sub
insl
mov
data16
sti
cmpsl
arpl
rcr
data16
sub
mov
mov
popa
jns
gs
push
mov
mov
add
add
mov
mov
fildl
arpl
int3
mul
fiaddl
jno
clc
cmpsl
fisubrl
sub
inc
sub
push
and
fnstsw
push
push
ds
fdivl
jne
mov
inc
dec
out
sub
mov
popa
dec
dec
dec
jg
ljmp
je
cmp
xchg
mov
push
xchg
cmpsl
hlt
imul
clc
test
xchg
mov
pusha
mov
stos
sti
mov
stos
push
sub
test
jb
dec
pop
xlat
fdivs
or
push
add
pop
push
pop
imul
gs
jecxz
xchg
je
pop
pop
cmpsb
dec
xor
xchg
out
loope
shll
pop
inc
jns
pop
fnstcw
jge
lock
test
push
lea
ljmp
inc
inc
out
xchg
out
ljmp
out
cld
test
cmp
mov
cmp
std
add
cltd
jle
aas
stos
ss
or
fnsave
arpl
adc
xor
cltd
adc
in
pushf
xchg
das
cmc
adc
aam
mov
jl
pop
mov
bound
bound
sub
fildll
push
shrb
into
mov
stc
mov
aad
ss
fistpl
clc
int
fidivrl
sub
or
imul
sub
mov
imul
xchg
cwtl
pop
ja
sbb
lock
jno
jge,pn
mov
inc
out
test
cmp
inc
es
out
cld
in
and
adc
clc
sbb
dec
xchg
xchg
lahf
jl
sbb
mov
jmp
xor
xor
pusha
push
shll
mov
mov
jo
cs
push
shr
lds
or
push
fwait
ds
inc
mov
mov
outsb
fs
lods
xor
mov
sbbl
adc
sbb
out
push
and
pop
jge
pop
dec
jp
subb
sbb
ljmp
rol
movsb
movsb
push
add
pusha
pop
aam
cmp
add
iret
xchg
or
sti
scas
das
xchg
dec
add
push
mov
inc
and
loop
jge
and
xchg
shl
push
jb
adcb
jo
cmp
movsb
xchg
add
inc
hlt
adc
adc
jecxz
xor
and
aas
cmpsl
jge
in
pop
out
lahf
aad
pusha
mov
fisubl
imul
dec
test
mov
andb
xlat
ds
int3
or
xchg
daa
push
and
cmp
cltd
movsb
xchg
loope
mov
pushf
pop
mov
xor
fmulp
cld
and
add
aad
push
xchg
in
pop
cltd
or
flds
pop
xlat
mov
in
add
addr16
ficoml
sbb
mov
mov
pop
cmp
les
enter
in
sarl
fiaddl
mov
xchg
and
inc
repz
adc
out
aad
cmp
shr
mov
jle
loope
pop
pop
outsb
adc
adc
jae
adc
daa
js
scas
push
or
fs
dec
xchg
jg
mov
and
xor
sub
mov
scas
sub
pop
inc
xorl
int3
loopne
shlb
mov
sbb
cmp
cmp
loop
push
push
outsl
pop
sbb
pop
std
jmp
mov
cwtl
movsb
rcll
shlb
add
shlb
xchg
fst
cwtl
lock
push
dec
xor
push
or
pop
sbb
sbb
pop
ljmp
dec
xchg
call
lahf
in
cwtl
xor
out
sub
lahf
fisubrl
repnz
orb
pop
je
xchg
rcrb
popl
movsl
sbb
mov
cmpsb
sub
stos
mov
insb
jp
pop
enter
mov
faddl
xchg
mov
dec
ss
mov
fcompl
ja
loop
outsl
movsl
and
push
mov
push
push
insl
hlt
fadd
or
fs
movsb
mov
loope
or
sbb
in
sbb
pop
sbb
into
out
or
scas
es
ss
jno
sub
ss
iret
adc
pop
cmp
pop
jp
and
pop
test
jecxz
mov
xchg
fisubl
push
mov
loopne
fistps
pop
sarl
and
xchg
xor
sub
stc
stos
adc
jle
leave
out
push
stos
movsl
enter
mov
cli
test
fstpl
cmc
pop
jle
fwait
rcll
add
sbb
lahf
xchg
mov
loopne
ret
push
std
xchg
jo
icebp
add
rcrl
pop
pop
pushf
lea
sbb
int
lea
das
xchg
dec
push
fdivrs
aaa
imul
test
pop
stos
push
cwtl
jle
int
xor
xchg
mov
mov
dec
xchg
lea
mov
cmpsb
fnstenv
mov
xchg
insl
or
push
mov
arpl
or
ret
mov
jecxz
les
pushf
ficompl
pop
cmp
movl
movsl
cmp
iret
cmpps
cmp
or
leave
push
nop
pop
add
dec
mov
notb
xor
test
or
mov
mov
fidivrs
les
and
sub
je
leave
enter
adc
mov
push
dec
xchg
cld
and
and
xor
xchg
loope
mov
push
jbe
loop
rorl
fcoms
inc
sti
je,pt
loop
add
cmc
icebp
ljmp
mov
subl
xchg
mov
fcomps
push
sbb
cmpsb
in
rep
sti
lahf
pop
icebp
testb
xor
jo
insl
dec
rolb
imul
pop
and
pop
push
test
dec
roll
scas
idiv
xor
cmp
ret
inc
fst
mov
inc
cmp
or
loopne
pushf
mov
jge
or
cmp
enter
ljmp
inc
and
sbb
out
ja
insb
fsts
popa
imul
outsb
cmp
into
lods
loopne
xor
jno
mov
push
mov
adc
lds
or
cmpb
inc
pop
std
js
xor
insl
xlat
sbb
lahf
xor
daa
scas
adcb
das
push
push
xchg
and
popf
data16
push
test
data16
xchg
add
negb
xor
adc
movsb
xor
mov
jnp
mov
cwtl
cwtl
jo
repnz
cmp
lret
aam
push
pop
dec
push
aam
xchg
daa
loope
mov
sub
xchg
dec
push
sbb
fnstenv
sub
rcll
pushf
jp
lea
lcall
and
movb
pusha
jge
sbb
mov
lds
fmuls
add
inc
sub
daa
cwtl
mov
cmp
fucom
into
lods
mov
and
lock
fidivs
fmuls
add
iret
sbbl
mov
les
pop
enter
shlb
out
mov
mov
cmpsb
enter
pushl
jb
jbe
rclb
sbb
sbb
dec
cmpsl
pop
xor
mov
mov
add
xchg
bound
cmp
int
jge
pop
daa
in
pop
outsl
insl
ljmp
dec
push
or
pop
arpl
sub
jg
inc
lds
push
dec
out
fisubl
push
pop
in
rol
scas
fsubl
lahf
xchg
cmp
cmp
and
fisttps
mov
sbb
arpl
jnp
push
mov
shl
imul
inc
shrb
mov
jecxz
xchg
out
xchg
sub
sti
mov
mov
in
cmpsl
aas
or
sbb
loop
mov
xchg
dec
sahf
fnstcw
inc
push
in
lock
cltd
cs
mov
xchg
cld
icebp
xchg
xor
or
mov
sub
int3
adc
push
and
idivb
jge
in
sub
das
stc
pop
cmp
out
rcl
and
leave
mov
adc
xchg
sub
mov
fldcw
pop
fsubrs
mov
mov
mov
dec
push
add
inc
push
and
and
adcb
ret
inc
push
push
scas
jmp
dec
jne
sub
sub
out
lcall
push
mov
iret
xchg
in
jns
xor
shll
or
jecxz
dec
arpl
loope
movsl
in
and
into
repz
or
mov
out
outsl
cmpsb
xor
xchg
addr16
sbb
mov
inc
scas
xor
and
pop
outsl
loopne
or
test
fcmovnb
xchg
pop
ljmp
daa
stos
push
out
ret
sahf
push
lock
lcall
mov
mov
jne
push
sarl
pop
dec
sbb
cmp
dec
sub
jmp
push
out
in
mov
popl
or
lahf
push
or
or
jb
stos
jge
sbb
lret
jmp
push
lret
mov
mov
lods
nop
out
add
scas
xor
jbe
sub
imul
dec
call
or
fs
inc
lret
adc
rorl
inc
in
add
in
lock
clc
aam
js
dec
fdivr
cmp
xor
mov
rcrb
sbb
fdivl
add
dec
mov
fldcw
sub
sbb
mov
lret
mov
mov
arpl
mov
cld
mov
pop
dec
mov
lock
mov
aam
cmpb
icebp
add
mov
fcoml
cmp
xor
add
mov
push
cmp
lahf
mov
adc
cmpsb
lret
xor
test
adc
out
mov
repz
cmpb
test
sub
push
adc
push
xor
orb
jnp
sub
dec
ss
mov
divb
out
add
mov
icebp
sub
rcrb
push
pop
ds
lds
sbb
mov
jno
nop
enter
ljmp
sti
int
shll
dec
push
sbb
cmp
jae
jp
pop
push
bound
hlt
insl
mov
sbb
les
dec
and
push
lock
in
sahf
add
mov
pushf
xor
mov
jns
fildll
cmp
sub
pop
cli
and
mov
lock
ja
xchg
xor
arpl
push
push
dec
push
call
es
sbb
sub
jne
mull
std
xor
cmpl
orps
das
adc
imul
add
rorl
or
imul
inc
imul
movb
mov
xchg
push
loop
call
cmp
popf
inc
adc
pop
std
call
imul
xlat
lds
call
out
sahf
or
push
add
std
adc
adcl
dec
push
xchg
xchg
nopl
add
in
xchg
scas
lret
mov
pop
call
imul
stos
inc
adc
in
mov
cmpsb
clc
jl
pusha
cltd
add
pop
pop
ds
negb
pop
ljmp
mov
imul
gs
hlt
push
and
and
iret
data16
cmp
push
sub
cmp
cmp
fstps
xchg
pop
sbb
enter
popf
push
push
adc
dec
jl
test
test
xchg
fisubs
movsb
xchg
fisttps
rcll
sub
mov
sub
cmp
shrl
jns
outsb
jmp
into
xor
cmp
bound
movsb
fsubl
push
fisttps
frstor
in
idiv
mov
jle
cmp
mov
sub
dec
fisttpl
addr16
cwtl
shrl
in
pusha
or
es
jmp
xchg
push
sbb
mov
jns
out
mov
push
and
xchg
xor
sbb
jno
cld
sub
inc
add
push
pop
loopne
sti
movsb
pop
or
loopne
mov
pop
cmp
ljmp
push
xchg
add
pushf
push
pop
mov
adc
xchg
mov
sahf
jo
xlat
cs
sahf
ret
sahf
aas
repz
xor
and
dec
pop
je
mulb
scas
int
xchg
sub
outsl
repnz
into
ljmp
and
and
ss
cmp
les
loopne
aas
imul
aam
cs
jmp
fstpl
inc
mov
pushf
add
popf
add
push
xchg
jo
cmp
nop
mov
jecxz
lods
xchg
push
in
inc
inc
clc
cmp
inc
sbbl
sub
shrb
mov
adc
out
sub
xchg
and
bound
jbe
add
pop
mov
fldcw
xchg
adc
subl
jmp
cmpsb
mov
sub
arpl
jae
popa
pushf
cmpsb
out
pop
mov
jmp
or
sub
add
mov
and
fnstcw
inc
mov
dec
mov
das
push
pop
cltd
outsl
xor
sbb
push
out
stc
sbb
std
aas
fsub
ret
xlat
subb
cmp
aad
and
pop
fidivl
xor
cld
mov
cmp
fstl
inc
jae
mov
mov
es
add
inc
call
mov
test
push
mov
lods
mov
or
push
xor
movl
cld
sub
cld
adc
pop
add
push
mov
jecxz
push
mov
out
lret
or
es
js
jae
cmpsb
rclb
push
pop
aad
ljmp
sub
cmp
mov
and
clc
xor
pushl
jns
cmc
ret
loop
test
cmc
pop
pop
dec
push
ret
lcall
jno
cmp
cmp
rcrb
test
inc
dec
or
mov
xor
adc
in
pushf
mov
fdivrp
ljmp
dec
outsl
inc
push
int3
aas
aam
add
mov
fstl
and
or
xchg
call
jnp
aad
enter
lahf
popa
jnp
fdivl
or
test
or
and
mov
outsl
pop
cmp
pop
inc
and
push
addb
clc
shll
sbb
aas
mov
fwait
jle
pusha
pop
and
iret
call
xchg
sub
adc
orb
fcmovne
add
jmp
lahf
sub
push
out
and
cmp
aam
sti
jl
movsb
jb
aad
dec
pushf
mov
int3
mov
mov
add
push
or
pop
cmp
sti
js
sbb
clc
mov
cwtl
je
sub
pushf
or
aam
inc
int
add
push
jmp
lea
dec
imul
hlt
xor
cwtl
outsb
scas
aas
popa
dec
mov
adc
dec
xchg
out
in
mov
add
mov
pop
jb
lret
lahf
cmp
lret
popf
sbb
jge
adc
add
enter
std
mov
and
pop
pop
sub
xchg
push
cmp
dec
xchg
cmp
sbb
insb
pop
sbb
jmp
in
xchg
pop
jl
stc
hlt
adc
mov
bnd
data16
cmpsl
xchg
push
loope,pn
leave
arpl
jno
pop
mov
xor
and
mov
push
subb
fs
push
fsubs
adc
int
push
sub
mov
pop
shlb
push
mov
sbb
shlb
mov
andb
negl
hlt
sub
jecxz
lock
adc
rcrl
mov
xlat
add
int3
testb
mov
sbb
lods
jne
push
or
and
xchg
fisubs
mov
mov
pushf
add
sub
int3
dec
and
xor
jg
mov
push
pop
pop
xor
cmc
mov
insb
inc
rclb
mov
mov
lret
adc
pusha
xor
test
rclb
sbb
stc
fcmove
push
inc
lds
mov
xchg
jge
insl
xchg
cwtl
scas
test
fsubp
std
cwtl
mov
push
push
mov
popf
xchg
pop
xchg
mov
fiaddl
push
push
dec
pop
jnp
cld
adc
nop
daa
adc
jg
cmp
cmp
popf
icebp
shlb
push
push
movsl
ret
dec
cmp
lret
out
push
inc
xchg
lods
jl
cli
or
lret
mov
jmp
scas
into
ret
into
out
add
jecxz
sbb
add
cwtl
icebp
loop
movsl
or
addb
popa
hlt
inc
arpl
add
adc
leave
lcall
rclb
mov
push
out
fidivl
aaa
sarb
xchg
out
in
sbb
les
imul
ficomps
aad
pop
inc
in
add
call
cltd
cmp
lcall
fistpll
mov
aam
cmp
insl
cli
jmp
mov
sbb
addr16
or
loop
xchg
pop
es
sar
orb
pop
or
sbb
or
lahf
cmpsb
test
cld
lret
xor
push
inc
xor
js
pushf
adc
adc
pop
repz
int3
jae
or
dec
mov
dec
xor
sub
mov
mov
lds
dec
pop
mov
add
xor
adc
mov
lds
lahf
xor
mov
cmpsl
test
fisubl
fsts
nop
or
aad
xor
pusha
push
adc
aad
inc
pop
sub
rorl
insl
adc
call
rcrl
repnz
mov
inc
pop
daa
add
lret
cs
fcmovu
xchg
inc
pop
adcb
mov
xchg
sbb
sbb
sbbl
xchg
ljmp
mov
cmp
jb
cmp
cmp
data16
fcmovne
and
imul
lods
das
inc
lahf
sti
es
mov
add
movsl
add
jmp
orb
mov
jnp
int
pop
jne
jecxz
push
in
loope
push
sbb
push
cmp
add
cmpsb
div
sub
mov
xor
pop
dec
adc
jbe
or
andl
cwtl
and
mov
jnp
mov
pop
push
sub
xchg
inc
leave
mov
test
or
pusha
movsl
jg
mov
popf
and
xor
inc
inc
mov
stc
aad
mov
sbb
xor
mov
cmpb
sbbb
add
pop
clc
hlt
paddusw
cmpsb
cmpsb
or
std
lods
inc
popf
nop
xor
mov
pop
push
push
xor
enter
jno
inc
call
dec
pop
nop
push
cli
and
jle
xchg
add
shl
test
adc
ficomps
jmp
js
mov
into
mul
and
push
fwait
push
loope,pn
ret
jo
cmc
cli
loop
mov
jno
imul
dec
sti
leave
xchg
jmp
imul
fmull
xchg
ss
xchg
xchg
inc
daa
addb
in
nop
jle
push
loope
cmp
sbb
jle
adc
pop
pusha
dec
cmp
xor
xchg
hlt
out
aam
lcall
lods
lds
mov
mov
and
add
mov
push
xor
mov
les
ret
das
jae
mov
and
adc
lods
loope
sbb
jmp
dec
out
dec
inc
sbb
movsl
jne
rorl
push
push
in
push
xor
sub
add
dec
add
mov
mov
and
sub
add
xchg
sahf
inc
jl
mov
jecxz
xchg
ud2
xchg
scas
lock
and
jb
inc
pop
lcall
dec
fstl
cmp
andl
lcall
add
cmpsl
xchg
mov
inc
sub
mov
rcll
gs
pop
shlb
pop
sub
cmp
xor
popa
stos
inc
push
dec
das
lret
cmpsl
addb
repz
fcoml
cmp
js
sbb
ficomps
or
inc
push
pop
lret
movsl
mov
and
add
mov
adc
je
in
mov
scas
pop
dec
sbbb
adcb
mov
push
rolb
stos
popa
pusha
sbbb
sbb
mov
aaa
nop
es
scas
inc
test
pop
insl
fistpl
lret
add
or
mov
mov
mov
popa
jb
loopne
lods
mov
outsl
es
inc
lahf
xchg
test
dec
xchg
jl
dec
andl
jnp
ret
inc
std
stos
mov
xchg
pop
sbb
add
and
lcall
jno
scas
pop
add
ret
outsl
inc
les
mov
and
mov
loope
add
filds
sbb
sahf
add
cmp
and
cs
xor
test
rorb
and
repnz
mov
push
jnp
add
mov
adc
sub
sbb
mov
add
mov
or
push
jns
scas
xor
loop,pn
les
frstor
dec
add
movsb
jg
inc
clc
sbbb
fs
or
pop
xor
ja
dec
mov
adc
sti
inc
jae
leave
adc
pop
sub
int3
mov
add
nop
mov
inc
lods
and
loopne
mov
hlt
cmp
cmpl
rorl
or
clc
es
jg
pushf
inc
adc
mov
loope
outsl
mov
stos
icebp
adcl
cmp
xor
mov
jecxz
mov
sub
mov
in
nop
lret
pusha
je
xor
xchg
fs
sbb
pop
fstps
xchg
mov
repnz
in
xor
outsb
test
or
int
outsl
push
pop
roll
sbb
cwtl
mov
dec
push
bound
push
inc
push
and
sub
idivb
in
out
syscall
push
mov
cld
pop
popa
les
mov
arpl
and
aas
out
aad
lods
lahf
es
xorb
xor
insb
mov
add
and
xor
cmp
pop
nop
inc
sub
xchg
mov
xor
cmp
sub
clc
xorl
out
outsb
xorb
lock
mov
arpl
jo
ja
xchg
je
add
jnp
lods
rcll
pop
and
adcl
add
xor
out
test
jg
fwait
aad
inc
lds
lcall
cwtl
testb
inc
test
cmpsl
popa
sub
sbb
mov
mov
movsl
jae
into
dec
es
mov
mov
aad
mov
ljmp
push
or
xchg
xchg
push
add
das
cmp
mov
pusha
out
adc
dec
xor
imul
mov
jp
pop
xor
jg
lods
jge
popa
xor
xlat
xor
sub
idiv
lret
inc
or
call
pop
inc
mov
jbe
rorb
inc
leave
sti
aad
in
out
ret
push
push
lea
arpl
push
mov
cmp
mov
and
out
jecxz
shll
mov
repz
pop
inc
out
in
mov
aas
aam
popa
les
inc
adc
sub
andb
addr16
mov
add
dec
out
mov
and
lock
call
in
push
push
test
mov
or
stos
and
xchg
fisubs
outsb
in
sarl
repz
cmp
in
vmovmskps
mov
imul
push
in
cmp
pop
jge
gs
cltd
add
xlat
xor
pop
xchg
xchg
adc
gs
fistps
mov
fimull
dec
xchg
pop
ljmp
sub
jno
das
xlat
cmp
push
jnp
dec
ret
cmpsb
and
add
imul
sbb
pop
fldcw
add
incb
push
dec
je
cmp
loop
aam
or
stos
xchg
xor
jp
enter
iret
fadds
mov
push
or
nop
mov
push
les
hlt
stos
push
iret
roll
cmp
or
dec
loop
cmpsl
and
jl
test
cmp
stos
sub
jne
jnp
mov
pop
pop
jns
lea
clc
adc
rcr
add
jno
cli
das
or
xor
mov
mov
sub
push
xor
push
lods
andb
in
call
jne
into
shrl
popf
xor
xor
and
sahf
cs
push
repnz
in
mov
and
push
xor
icebp
clc
fnstcw
loopne
inc
das
and
push
sar
xchg
mov
subb
inc
push
mov
icebp
fwait
dec
mov
xchg
jae
popa
fidivrl
fcmovu
mov
mov
bound
mov
sbb
setbe
jp
xchg
fwait
mov
out
cmp
mov
outsl
outsl
push
pop
xorl
xor
pop
in
sbb
ret
les
scas
mov
fcmovne
push
xorb
iret
sub
or
pop
clc
jle
lcall
add
jb
push
orl
cmpsb
hlt
aas
add
pushf
lcall
push
nop
lods
out
rolb
loop
or
repz
dec
lods
sbb
mov
loopne,pn
sti
push
lcall
dec
scas
loope
add
mov
jl
push
dec
cltd
jmp
andl
movsb
es
mov
jns
jle
out
sub
loope
xchg
mov
pop
jg
xchg
mov
add
inc
lds
subl
sbb
add
js
sbb
jo
scas
js
neg
cwtl
jmp
jns
cmp
and
popa
dec
scas
fidivl
arpl
repnz
cmpsb
lods
push
jle
mov
push
incl
lret
cmpsb
fcompl
sub
imul
cli
out
dec
jmp
repnz
or
shrl
ja
sbb
js
stos
stos
cmpsl
xchg
jmp
mov
cmpsb
repnz
mov
call
mov
inc
stos
dec
xchg
and
push
pusha
push
sbb
inc
adc
movsb
movsl
sahf
enter
inc
gs
ja
pop
jmp
cltd
cmp
stc
ror
fisubl
jmp
imul
shr
test
push
dec
scas
xor
outsl
adc
jnp
pop
push
mov
mov
dec
inc
and
inc
paddsb
fildl
mov
push
push
mov
sub
xor
loop
fcomps
test
mov
or
xchg
jecxz
push
jecxz
add
dec
fisubl
cmp
dec
push
das
andb
ds
jp
and
data16
inc
and
sub
shlb
cmp
xor
clc
popa
sub
pop
daa
inc
xor
scas
gs
stc
rcll
clc
jbe
lds
mov
stc
dec
jle
jg
jg
or
or
inc
lods
mov
les
mov
jmp
mov
bound
std
add
xchg
jge
push
cltd
xchg
sub
inc
adc
xchg
jne
push
inc
popf
mov
pop
ror
shrl
int3
out
adc
cmpsb
insb
inc
lcall
pop
ljmp
inc
inc
pop
xor
jg
pop
test
xor
jno
pushf
ss
in
add
call
and
and
pop
mov
mov
mov
popf
mov
pushf
incb
pop
pop
jne
fadd
jne
rcll
in
ljmp
loope
lret
scas
jno
adc
call
inc
movsl
inc
dec
fbld
xor
adc
mov
pop
push
xor
dec
mov
mov
push
in
jl
add
push
loopne
sub
pop
fwait
iret
daa
pop
out
sub
sbb
jb
shll
mov
push
push
imul
push
jne
std
ret
fsts
mov
sbb
xchg
mulb
jo
in
out
scas
jp
lret
das
dec
cmp
push
lcall
dec
push
not
dec
enter
cwtl
daa
outsb
pop
mov
pop
movsb
jb
mov
addb
sbb
hlt
or
ljmp
and
je
and
mov
pop
mov
fs
xlat
add
push
pop
les
add
lea
mov
cmp
scas
sbbb
push
pop
loope
dec
fstl
movsl
jae
mov
daa
pop
cmp
mov
loopne
loope
adc
mov
mov
dec
data16
int3
xor
shll
vpmulhw
gs
jb
arpl
inc
cld
dec
ss
rorl
sbb
jno
test
sbb
outsl
sub
aad
call
daa
leave
sahf
cli
mull
es
push
jmp
inc
push
xchg
sub
mov
scas
test
test
adc
add
cmc
test
mov
movsl
jle
ret
out
int
lret
aas
inc
push
sbb
roll
jno
stos
insb
xchg
cli
movsl
jbe
mov
mov
sbb
sub
adc
mov
movsb
in
gs
cli
notl
decb
and
cmc
fcoms
or
fs
pop
dec
inc
imul
shll
mov
jne
ret
rcl
cmp
inc
jae
mov
and
adc
ds
dec
pop
ret
push
pop
scas
loopne
ja
popa
jl
fistl
sub
push
data16
xchg
js
adc
jno,pt
lds
cmpsb
add
test
ret
jo
push
push
call
pop
xorl
push
cmp
cmpsb
subb
insl
xor
out
dec
mov
arpl
imul
sti
lahf
or
add
xchg
mov
xchg
mov
imul
push
jp
ljmp
cmp
sbb
jmp
dec
test
add
jno
imul
les
cmp
adc
repz
ficomps
das
mov
dec
mov
push
shrb
mov
mov
push
mov
pop
push
sti
add
mov
push
addl
sbb
lods
inc
lcall
hlt
leave
call
inc
sahf
inc
push
aas
addr16
cltd
mov
add
dec
cwtl
or
rcll
mov
fmulp
loop
cs
push
jne
je
leave
inc
inc
popf
outsl
xor
xchg
in
cli
push
iret
leave
in
xchg
addr16
inc
hlt
jmp
rcr
lret
xor
cmp
push
mov
lahf
flds
sti
xchg
add
push
jl
mov
inc
out
mov
add
xchg
shll
sbb
mov
fs
push
aad
cmp
cmp
fisubrs
sbb
aaa
jae
sbbb
nop
test
pop
jecxz
aas
cmp
and
sub
loop
push
sbb
mov
data16
cmp
and
fisubrs
add
mov
push
cmpsb
xchg
in
cmp
rorl
push
cmp
sarl
in
pop
cmpb
popf
ja
pop
or
mov
xchg
ja
ds
out
push
mov
rorl
fcmovbe
in
std
rcll
pop
es
sarl
push
rcrb
stc
xchg
repz
hlt
cmc
mov
leave
jnp
xchg
inc
adc
ret
loope
dec
cmp
test
loopne
mov
push
add
stos
jne
jns
pop
push
push
mov
adc
pop
cmc
xchg
hlt
add
sub
cmpsl
cmp
jecxz
jg
mov
je
jecxz
jne
test
out
add
testl
popa
inc
aad
stos
data16
cmp
lcall
dec
jmp
rorl
adc
push
add
push
sub
mov
add
push
testl
sbbl
sti
sbb
cmc
arpl
adc
mov
pop
lret
sarl
loope
mov
ja
jno
or
fcoml
cmc
inc
sbbb
mov
jae
cmpb
xchg
rolb
xor
movsb
inc
push
aad
add
mov
xchg
mov
mov
leave
mov
bound
outsb
push
data16
subl
cmc
test
in
and
jns
adc
sbb
aas
dec
xchg
outsb
mov
scas
fs
int
xchg
xchg
lods
les
ljmp
out
pop
test
jae
xchg
bound
in
push
mov
mov
jno
dec
jp
adc
aad
inc
or
cmp
sbb
out
sbb
rcl
pop
xor
fisttpll
pop
insl
mov
mov
inc
insb
stos
cltd
xor
inc
jp
cmc
popl
add
add
sbb
mov
stos
lahf
pop
lea
fildl
inc
sahf
sbb
cmp
sbb
cmpb
push
add
bnd
cmp
insb
xchg
imul
push
xor
jl
ret
xor
inc
add
mov
lock
mov
out
out
test
sub
or
sbb
jo
sti
mov
pop
clc
jnp
jno
pop
mov
mov
sti
cli
cmpsl
xor
dec
out
daa
jns
sub
std
je
jae
mov
test
flds
mov
or
fists
dec
imul
jmp
jg
subl
cmp
flds
sbbl
sbb
pop
cmp
ja
lcall
test
lock
stos
leave
test
test
jae
mov
pop
and
push
movsl
dec
jbe
dec
pop
xchg
es
aad
dec
push
adc
cltd
sbb
xchg
sub
sub
iret
or
add
ja
lods
inc
adc
sbb
cltd
repz
xor
dec
bound
hlt
sti
dec
test
cltd
pop
pop
xor
add
call
push
xchg
xor
push
mov
jbe
daa
outsb
outsl
xor
shl
fisttpll
fcoms
out
mov
pusha
or
mov
and
icebp
push
jo
stos
call
mov
adc
aad
leave
cld
dec
sbb
xor
shlb
flds
or
cmc
repz
in
movsb
loope
push
mov
sub
xchg
test
out
out
stc
inc
jbe
cmp
adc
loopne
xor
int3
pop
loop
outsb
int3
xlat
dec
lods
mov
pop
push
cwtl
and
arpl
fldenv
jecxz
add
fmuls
imul
pop
cmp
sub
xorb
sbb
std
faddl
add
aam
cwtl
sub
xchg
movsb
jecxz
add
adc
or
lret
pavgb
push
cwtl
or
pop
dec
fcompl
sub
insb
cmpsb
cmpsb
add
inc
push
mov
pop
out
inc
xchg
insl
leave
xor
ret
js
fwait
pushf
cmp
jle
or
pusha
pop
mov
and
ret
dec
and
aaa
rcrb
xor
loope
insl
std
jo
lret
js
cmp
jne
rcl
test
jg
push
mov
lahf
xchg
sbb
mov
movsb
movsl
hlt
inc
das
push
or
lcall
xlat
scas
into
mov
addl
inc
iret
mov
jae
gs
loope
stos
pop
mov
mov
out
cmp
push
and
or
or
fs
bound
sbb
cwtl
lock
xorl
lret
sub
adcb
fmuls
add
and
pop
insb
sbb
cmpsl
or
call
add
sbb
cmp
jne
cli
sub
add
mov
or
xor
in
mov
pop
cmp
rorl
test
sbb
xor
xor
push
sti
adc
nop
lods
dec
push
dec
pop
xchg
xchg
push
xchg
pop
adc
xchg
rcr
jb
xchg
jge
add
pop
inc
cld
mov
xchg
push
push
lcall
fs
out
push
mov
test
mov
test
iret
add
int
push
jbe
data16
xor
jb
test
push
xchg
add
mov
mov
lock
cmp
mov
xor
jge
lcall
lods
cmp
and
mov
mov
lods
inc
xchg
jmp
sbb
pushf
jbe
fdivr
imul
lds
cmp
int
cmpsl
push
fxch
or
jge
cmpsb
shrb
xchg
jp
sub
sub
sub
enter
jle
mulb
in
jne
mov
icebp
fnsave
and
data16
lret
sbb
out
jns
imul
movsl
lret
leave
cwtl
xchg
dec
aaa
cli
fbstp
lea
cmp
ds
mov
jle
stos
add
pushl
rcrb
stos
lock
ret
repnz
movb
addr16
insl
add
xor
inc
xchg
jmp
scas
push
xlat
add
sbb
mov
mov
repz
pop
ret
or
sub
aas
movl
pop
aam
fs
rorb
pop
fsubrs
fnstsw
xchg
push
cmp
sub
ret
lds
ss
jg
cwtl
xchg
dec
xchg
inc
test
sbbl
pmuludq
fdivl
fbstp
movsl
sti
imul
sub
or
dec
mov
out
scas
or
out
aas
and
into
fnsave
add
ds
cmc
and
cli
lahf
dec
mov
jge
call
mov
pop
daa
dec
fwait
or
push
mov
int
and
mov
adc
cwtl
lahf
dec
movsl
fisttpl
imul
cwtl
leave
add
sahf
imul
popf
cmp
aad
les
incl
inc
jns
jmp
jnp
imul
bound
sbb
stos
mov
out
fisubl
mov
xor
lcall
out
lahf
scas
jmp
stos
int
cmpb
mov
pop
sti
push
sbb
stos
add
in
cmpsb
xchg
mov
xchg
sub
add
iret
pop
outsb
cmp
mov
movsl
js
loopne
xchg
ss
xor
or
xchg
mov
test
jmp
inc
inc
mov
cltd
jge
xchg
into
out
rorb
daa
xor
mov
pusha
fldenv
cld
mov
pusha
shrl
push
pminsw
jecxz
sub
pop
inc
cwtl
xchg
roll
pop
lahf
or
push
imulb
mov
daa
les
mov
fcmovbe
arpl
lret
adc
scas
aam
inc
push
ja
lods
pop
adc
sub
ret
add
cwtl
pop
je
aas
dec
enter
fcmovbe
pushl
cmp
arpl
jae
sub
inc
mov
xchg
and
mov
cmc
repnz
in
cmp
cmp
ljmp
pop
into
push
xchg
jnp
mov
std
sbb
enter
adc
adc
add
fnstenv
fcompl
aam
cli
and
cmp
adc
std
xchg
add
or
cltd
repz
cs
dec
shll
pop
cmp
int3
jns
into
sbb
scas
filds
push
push
dec
ja
aad
in
mov
stos
mov
sub
sbb
or
adc
pushf
dec
push
fcomp
iret
inc
cltd
int3
or
int
cltd
popl
sub
fisttpl
test
pop
add
addr16
fchs
imul
pop
les
cs
mov
ret
clc
leave
fdivrs
loope
mov
or
inc
push
int3
in
mov
cmpb
mov
pop
shlb
repz
ss
lods
xchg
mov
test
das
insb
sahf
xor
stc
mov
les
add
push
inc
shrb
mov
jne
xor
dec
inc
xchg
mov
stos
int3
pop
aas
push
xchg
cli
adc
daa
cmp
data16
dec
shlb
out
pop
scas
daa
aam
lahf
and
mov
pop
push
imul
pop
insb
push
inc
fcmovnu
lahf
lea
xor
stos
jp
pop
aas
pusha
mov
xchg
pop
pop
or
push
push
jno
or
cmp
and
js
in
mov
add
and
in
push
push
adc
mov
mov
push
hlt
jnp
inc
push
cmpsb
mov
pop
cld
inc
aad
roll
and
mov
rcrl
insb
repnz
sahf
mov
cmpsl
jb
mov
and
dec
sti
push
sti
or
packuswb
fwait
pop
ret
cmp
adc
xchg
pop
xchg
mov
pop
dec
js
jg
sbb
shll
and
or
int3
fs
or
mov
shl
hlt
mov
mov
push
cmp
push
mov
jae
jbe
call
out
ss
adc
pop
dec
icebp
push
mov
mov
loope
call
lock
pop
mov
mov
xlat
dec
in
sbb
into
aam
enter
xor
jge
cld
jle
lock
cmc
in
jb
add
dec
sub
daa
xor
int
or
mov
mov
call
mov
add
aam
adc
insb
nop
pop
aas
adc
mulb
mov
std
jl
sahf
inc
mov
mov
outsl
pop
push
lds
loop
iret
jno
jne
jae
daa
pop
mov
lret
push
jge
inc
adc
js
jno
or
add
into
pushf
xor
pop
test
xchg
scas
push
pusha
pop
dec
jp
icebp
in
cs
incl
loopne
mov
mov
push
cmpl
test
in
jae
push
jnp
imull
mov
enter
mov
cmpsl
xor
shlb
fiaddl
jb
pop
mov
pop
dec
fdivrl
and
lock
cmp
rol
push
xor
push
enter
pop
inc
lods
sub
add
mov
push
sahf
adc
loopne
out
aad
in
pop
cwtl
popf
mov
sub
out
popa
sbb
fisttps
xchg
or
lahf
sub
ds
inc
je
xchg
mov
pusha
xchg
pop
das
sti
mov
in
mov
xchg
push
jae
jecxz
mov
xchg
out
mov
out
dec
sbb
insb
test
mov
xchg
icebp
adc
shll
shll
push
addl
mov
jnp
xorps
mov
cmovo
sub
inc
ss
xchg
cmp
mov
addl
aad
in
and
dec
rorl
push
ss
push
mov
dec
mov
test
std
les
stos
jnp
idivb
imul
outsb
dec
icebp
jb
mov
dec
sbb
adc
xchg
mov
fstpt
xor
inc
aas
xlat
enter
aad
mov
rcrb
loopne
sbb
negl
mov
xor
insb
pop
aad
int3
into
sub
xchg
mov
jno
inc
or
lea
jg
lea
adc
ja
mov
cmpsb
cmp
insl
and
pusha
push
addr16
lock
mov
shlb
pop
rorb
and
dec
xlat
jno
push
cmpsb
lock
div
sbb
sub
or
cmp
add
xchg
cmp
arpl
clc
jbe
ret
cmpsb
lock
pop
cwtl
jno
jp
push
stos
outsl
pop
adc
stos
lcall
fcompl
ss
mov
inc
fwait
shlb
cmp
popf
xchg
arpl
enter
lret
vpsrld
pop
inc
faddl
sti
pop
cmpl
cli
xchg
cmp
xor
xor
scas
fwait
lret
pusha
adc
pop
fcomps
xor
cmp
pop
aad
iret
xor
cmp
jle
out
xor
cmp
test
inc
or
sub
fmulp
pop
mov
outsb
sbb
je
push
aaa
fwait
sub
cmp
lea
scas
shl
out
mov
movsl
sub
pop
adc
pop
je
and
push
scas
xorb
sbb
clc
subb
sub
mov
mov
cmp
fwait
mov
mov
cmpsl
sbb
xchg
sbb
dec
ficoms
fsubrs
outsl
sub
or
movsl
stos
cs
inc
jbe
jg
sub
inc
ja
xchg
out
push
cmp
push
test
cld
mov
inc
jecxz
outsl
cli
das
movl
lcall
jge
xlat
sbb
jmp
inc
push
adc
xor
push
mov
lret
jae
lods
sub
in
popa
and
push
stc
mov
pushl
cmpsl
cs
mov
adc
mov
and
sbb
xchg
out
hlt
lret
fs
jmp
pop
cwtl
xchg
aad
sarl
stc
andb
sti
cmp
outsb
and
fcomps
xchg
daa
lea
push
jecxz
iret
movsb
fwait
ja
xor
sub
aas
mov
push
leave
mov
into
push
mov
push
iret
ja
and
shll
ret
enter
xchg
inc
aas
mov
fisubl
vmovaps
xchg
ds
xor
mov
imul
pop
sbb
fdiv
insb
insb
jecxz
adc
popf
push
les
push
dec
pushw
add
hlt
mov
bound
sarb
xor
xor
pusha
and
sub
clc
loope
std
lods
out
stc
int3
loop
call
out
test
push
xor
mov
hlt
xor
js
dec
aaa
mov
aaa
and
cmp
xchg
aam
sub
add
inc
or
call
adc
xchg
scas
rorl
push
jbe
push
loopne
sbb
cmp
fisubrl
aad
mov
sub
leave
cmp
ror
xchg
sub
ljmp
sbbl
imull
dec
cmpsb
push
fdivs
es
inc
fdivrs
dec
lret
rcrl
dec
fmuls
mov
insl
sahf
cmp
es
pushf
ja
cwtl
cld
cmp
bound
mov
ja
push
out
fnstsw
bound
sar
int
pop
mov
sbb
in
add
int
mov
jle
inc
xchg
pop
stos
sub
push
not
xor
xor
shlb
fsts
jmp
sub
sub
lret
out
insl
out
shl
das
adc
lret
jb
out
hlt
push
dec
inc
movsb
nop
pop
dec
mov
shl
mov
in
andb
or
push
dec
push
sbb
test
adc
enter
adc
mov
nop
pop
movsb
lret
inc
insb
test
shr
or
lret
addr16
sbb
xor
scas
inc
insl
push
pop
xor
out
adc
fwait
push
mov
mov
pop
lds
jecxz
cmpsb
jae
pushf
or
adcl
stos
clc
cltd
jmp
and
push
dec
dec
sahf
xor
dec
jmp
xor
push
add
orl
or
mov
jp
inc
pshufw
cwtl
movsb
in
leave
out
outsl
inc
repz
outsb
cwtl
repz
fwait
pusha
mov
dec
rorb
cltd
mov
insl
sub
adc
imul
mov
fnstcw
dec
xor
cwtd
jge
ret
js
cmc
add
and
ljmp
aas
mov
es
mov
into
sub
add
js
daa
ret
and
mov
and
es
insb
and
mov
cmp
loope
xchg
cmp
loopne
hlt
sbb
int3
adc
loope
mov
xchg
xor
push
and
jp
mov
pop
lahf
je
lods
mov
movsl
dec
les
jl
sub
push
popf
clc
xor
out
mov
daa
out
ficoms
push
xchg
mov
pop
jo
sbb
dec
xlat
rol
sarb
mov
loope
add
cs
inc
xchg
xchg
xchg
xlat
fldcw
in
jg
cmp
clc
movb
and
lcall
xor
push
sahf
lret
inc
imull
std
into
fsub
dec
insb
push
cmp
std
mov
add
cmpsl
inc
es
push
sbb
sub
push
cmp
add
mov
cmpsl
stc
push
pop
jmp
push
sarb
lock
gs
jo
pop
push
jecxz
jbe
push
jp
aad
movsb
mov
xchg
shrb
dec
dec
dec
xor
push
and
jp
dec
aad
ljmp
jns
inc
out
and
xchg
addr16
ret
dec
mov
test
int3
rep
repnz
mov
cmp
insb
xchg
jp
dec
push
sub
test
loopne
pop
xchg
jb
loop
in
in
nop
jnp
dec
aad
sub
in
fwait
cmp
outsb
iret
jns
stc
push
or
lcall
pop
xchg
push
gs
pop
stos
je
les
leave
jl
dec
add
loopne
cmp
pop
mov
sub
or
lock
and
sub
fsub
xor
aaa
mov
xchg
jmp
imul
dec
dec
cmpsb
popf
xchg
cli
fs
pop
pop
lret
lea
int3
fcmove
jg
cmp
outsl
pand
adc
stos
jae
mov
in
pop
push
cmp
mov
and
cwtl
jbe
arpl
dec
in
test
dec
xlat
adc
or
pop
mov
imul
jo
inc
or
jae
dec
rcl
pop
ret
inc
add
cmp
lcall
inc
dec
sub
sahf
stos
mov
mov
cmpb
and
fwait
data16
lret
or
cwtl
test
xchg
push
sub
adcl
pop
inc
dec
xchg
xchg
test
push
mov
xorb
popa
aas
rcrb
mov
mov
out
bound
aam
cmp
test
push
or
jecxz,pn
fsts
add
insb
xchg
xor
or
or
pop
jbe
loope
nop
insl
and
lods
mov
les
roll
nop
add
call
push
cmc
sub
pop
cmp
or
aad
cmp
repz
mov
jmp
jmp
or
push
sub
call
test
sub
mov
push
jg
cmpl
shlb
mov
cmpsl
call
xchg
lods
mov
add
sti
mov
dec
jl
pop
cmc
test
mov
cli
pop
loopne
push
lret
imul
push
mov
repz
nop
cmc
cmc
push
pop
fs
bound
xor
push
cmp
add
into
xor
push
das
mov
jbe
pop
mov
mov
xlat
out
pop
call
mov
repz
mov
int3
adc
daa
add
lock
scas
mov
jge
pop
cmc
inc
adc
add
inc
sub
inc
mov
mov
cmp
cmpsl
test
xchg
rclb
aaa
adc
inc
pop
lret
rorb
fiaddl
push
lcall
popf
and
push
jns
jns
shrl
pop
pop
mov
mov
test
test
outsl
lods
les
pop
int3
sbb
xchg
sti
xchg
enter
aad
test
pop
addb
jno
stos
repnz
pop
xchg
mov
push
and
mov
inc
insl
lds
std
sbb
jmp
push
pop
aad
xor
and
fistpll
das
ds
cmpsb
fyl2x
call
shlb
dec
mov
rclb
loopne
iret
test
enter
mov
std
xchg
sahf
dec
int3
pop
cmpsb
scas
popf
inc
push
mov
rol
jns
clc
cmp
or
mov
dec
out
imul
mov
insl
xor
shl
pop
cmp
lea
iret
cmp
push
inc
and
sub
adc
add
pop
adc
loop
push
sti
mov
daa
adc
repz
xor
and
pop
mov
cli
sahf
mov
sbb
and
pop
in
sbb
cmp
cmp
cwtl
lss
mov
aam
bnd
and
jl
jg
lret
xchg
mov
lds
movsl
enter
adc
jo
xchg
sarl
sub
test
call
ljmp
add
ret
and
ret
testb
in
cmp
jbe
mov
sarb
mov
push
in
or
imul
sub
fisubs
xor
pop
sbbb
cmp
ret
insb
bnd
cmpl
testb
sarl
push
jo
data16
xchg
dec
jle
and
jecxz
pop
arpl
std
mov
jnp
and
mov
into
add
cmp
outsl
arpl
lds
repnz
aam
cmp
adc
jbe
jno
jns
aad
clc
inc
stos
insl
jno
push
add
cmpsb
mov
leave
adc
xchg
clc
loope
jmp
sbb
clc
sub
mov
dec
data16
lret
jge
aad
enter
jge
lods
in
into
aam
jmp
les
dec
jp
lret
aaa
inc
loop
cmp
lret
xchg
lret
mov
imull
mov
subb
ret
data16
leave
into
mov
rolb
mov
jmp
ret
fs
xor
insb
push
xor
jl
xor
icebp
js
add
fcoml
mov
sbb
sbb
pop
push
movsl
cmpb
and
jae
lret
std
cld
sub
ret
and
and
lods
fwait
add
rcr
mov
repnz
adc
les
fiadds
fsubrs
je
xchg
xor
xor
cmc
ljmp
subl
xor
iret
fisttpll
sub
lods
mov
ficoms
sbb
pop
sub
fldenv
inc
push
xlat
repz
inc
mov
out
jge
shll
and
test
stos
cs
or
fwait
mov
addl
movl
lods
mov
iret
add
jle
mov
inc
jae
jge
mov
popa
pop
lock
fmulp
leave
mov
push
sbb
pushf
cmp
add
sarb
mov
or
fisubs
xchg
add
andb
shld
and
fists
or
push
das
stos
call
xor
sub
jl
insl
gs
sub
sub
mov
fisttps
outsl
movsb
xorl
ss
and
out
xchg
fs
xchg
mov
push
jg
pusha
jmp
movb
int
hlt
test
cmpsb
mov
push
cltd
int3
sub
xor
notl
jo
hlt
mov
adc
adc
mov
cmp
das
ja
lret
dec
pop
mov
test
add
lret
out
clc
or
mov
aam
xchg
loop
or
mov
repz
mov
jl
loope
inc
cli
cwtl
ret
mov
insl
mov
xchg
ror
stc
push
push
lret
fs
xchg
mov
aas
cmpl
cld
inc
sbbb
pop
jle
mov
aad
and
pop
lret
jle
xlat
insb
shll
in
or
inc
lahf
mov
or
jmp
sub
bound
insl
push
cmp
ret
cmpsb
cmp
js
insl
aaa
andl
bound
iret
aam
pushf
xor
dec
fidivrs
dec
leave
lret
push
cmp
mov
push
jecxz
cwtl
cmp
adc
cmc
divl
xchg
inc
sub
frstpm(287
mov
fldt
pop
dec
push
out
inc
inc
outsb
sarb
xorb
pop
shrb
test
pop
out
vmovupd
outsl
xchg
out
scas
cli
fwait
cld
mov
movsb
jns
pusha
mov
mov
cmp
mov
cmp
pop
add
inc
std
inc
hlt
das
xchg
cmc
mov
xchg
mov
pop
fld
mov
xchg
mov
mov
mov
sub
mov
cmp
in
aam
lock
dec
clc
inc
jb
and
sub
xacquire
cmp
jne
xor
xlat
mov
mov
and
dec
sub
arpl
std
jo
or
push
inc
int3
adc
mov
repnz
sbb
in
fimuls
scas
xor
inc
push
jmp
dec
add
inc
jnp
faddl
jmp
gs
pop
add
ljmp
push
add
fdivrl
cltd
add
xchg
fnsave
subb
ljmp
jl
jle
test
js
aad
lret
xor
and
negl
ja
add
ds
or
pop
stos
pop
pop
cltd
push
push
jo
cwtl
aas
insl
in
pushf
jbe
test
inc
xor
mov
int
cmpsb
jne
nop
lret
or
jo
in
cmp
jecxz
popa
push
daa
xor
pop
int3
jge
jecxz
adc
sbb
sbb
out
xor
lods
sub
xlat
les
fsubs
loopne
stos
mov
js
mov
adc
jp
push
mov
test
mov
or
xchg
or
lahf
adc
push
sbb
loope
cmpsl
jmp
adc
lods
mov
jno
mov
dec
int
and
pop
movsb
sbb
ja
pop
sbb
notb
imul
lods
test
std
fs
mov
shr
dec
or
sarl
inc
aas
xor
ret
dec
aaa
add
or
adc
ficomps
out
insb
or
ret
xor
push
call
pop
add
ljmp
xchg
cmp
out
cwtl
mov
mov
cltd
divl
sub
xchg
mov
push
cltd
movsb
bound
aad
testb
mov
push
int3
dec
dec
rolb
popa
mov
dec
je
mov
aam
add
decb
pop
movsb
xor
xchg
mov
xchg
cs
xchg
stos
pop
mov
das
popa
sub
mov
loopne
pop
jbe
mov
lret
jb
in
mull
jns
mov
into
push
lods
das
inc
ss
mov
mov
jno
jnp
and
xor
and
xchg
xchg
aas
shl
jbe
cmpsb
adc
orb
in
sti
xchg
inc
and
aam
add
sub
sub
daa
cmp
inc
mov
cli
jnp
cltd
push
pop
push
push
jns
xchg
pop
out
cmpsb
jg
xor
mov
movsb
mov
jno
rorl
fisttps
popf
test
dec
jge
pop
jg
push
jns
cmp
fildll
int
in
ja
adc
ljmp
imul
dec
in
push
jns
add
mov
cmp
shll
mov
js
push
pop
adc
outsl
sub
mov
cld
mov
adc
das
scas
pop
and
mov
movsb
sbb
sub
sbb
jno
xchg
pusha
mov
mov
cmp
add
in
cli
cmpsl
cltd
int3
mov
js
jmp
pop
pusha
out
icebp
jmp
lock
and
or
mov
pusha
mov
pop
adc
flds
in
ret
lods
hlt
stos
sbbl
imul
nop
pop
jb
mov
stc
je
mov
lds
xchg
jmp
repz
mov
xchg
ss
dec
add
mov
sahf
push
push
push
or
ficoms
jo
and
iret
movl
pop
mov
jp
inc
dec
mov
add
jp
aas
mov
mov
ret
aaa
pop
jae,pt
mov
jns
ljmp
sub
mov
sub
lods
xor
fsubr
in
mov
js
push
dec
cmp
pop
add
dec
dec
mov
outsb
cmc
clc
std
roll
mov
pop
inc
mov
mov
lret
sub
stos
cld
test
fisubrl
loopne
push
mov
add
sbbl
pop
ja
xor
mov
mov
lock
lcall
adc
dec
jge
insb
lret
sub
jge
addb
rcrl
sub
lahf
repnz
sub
xchg
inc
ret
enter
mov
xor
jo
dec
pop
cli
sbb
loop
mov
addr16
clc
inc
cmpsb
add
sbb
add
imul
or
inc
inc
nop
enter
out
jmp
xor
addr16
mov
jns
sbb
cli
ljmp
xchg
iret
insl
arpl
leave
lock
pop
subb
addl
xchg
xchg
xor
popa
dec
xor
cwtl
xchg
imul
into
xor
and
mov
mov
pop
pop
js
adc
mov
psubusw
loope
subb
stc
and
pop
and
imul
ss
jb
mov
pop
xorl
sti
mov
add
shl
in
add
mov
jae
dec
fcmovne
jmp
nop
inc
and
in
loopne
aam
icebp
aam
test
lock
jmp
add
add
mov
push
aam
cs
repz
mov
add
cld
outsl
push
mov
iret
shll
scas
jne
jae
sub
mov
repnz
std
sbb
pop
push
push
rcr
inc
iret
push
push
or
pop
leave
mov
mov
push
sub
sbb
add
xchg
js
ljmp
test
dec
jg
cmpsl
xchg
jp
pop
addr16
inc
jg
add
inc
jbe
inc
xchg
test
sub
hlt
adc
test
ds
sub
cmpsl
pop
filds
mulb
aam
scas
sub
lcall
mov
xchg
inc
jb
lods
push
pushl
ja
or
test
mov
lods
push
fisubrl
dec
aas
repz
push
les
ja
fistpl
mov
add
dec
mov
xchg
dec
push
jmp
adc
xchg
adc
and
outsb
push
pop
lahf
mov
pop
inc
leave
fisttps
loopne
pop
mov
xchg
or
pop
xchg
jg
mov
adc
cmpsb
inc
mov
jp
jo
movsb
lea
lcall
sbb
push
xlat
inc
call
scas
lret
dec
xlat
push
inc
cmpsb
xchg
jae
mov
out
mov
adc
push
xchg
push
ficompl
test
popf
rcll
dec
aam
cmc
lods
and
pop
fistps
fcoml
pop
mov
sub
arpl
cltd
and
cs
scas
add
popa
xchg
out
in
push
and
movsb
fwait
jecxz
sbb
adc
jae
aas
or
xor
jns
and
xor
out
mov
xorl
jge
dec
xchg
int3
test
shl
dec
fs
push
lock
rclb
push
inc
sbb
xchg
add
cmpb
sarl
and
cmp
dec
jns
or
inc
and
out
cmpsl
je
dec
lret
mov
add
imul
pop
pop
inc
pushf
sbb
or
xlat
movsb
xor
dec
cmp
sub
repnz
repnz
test
xchg
jg
and
add
mov
sub
or
dec
std
mov
mov
je
xor
xchg
xchg
push
imul
int
mov
mov
dec
lods
push
push
jns
add
scas
fwait
es
dec
jmp
adc
mul
pop
dec
iret
mov
and
sub
fsts
out
sub
lds
add
in
test
jno
cmpsl
sbb
push
movsb
mov
dec
lock
call
pop
mov
dec
icebp
ljmp
adc
out
adc
in
mov
mov
mov
sbb
lea
cmp
fdivrl
jle
outsl
jnp
mov
js
lods
fs
or
in
sti
shlb
jmp
sub
xor
es
test
imul
imul
in
out
xchg
sbb
and
xchg
int
cmc
clc
incb
scas
adc
mov
leave
dec
xchg
cmpb
call
xchg
outsb
dec
adc
xchg
cmp
out
cltd
jecxz
pop
jle
test
sbb
sub
mov
jne
leave
xchg
loope
out
dec
rcl
and
repnz
mov
mov
icebp
loopne
sahf
scas
sbb
push
movsb
pop
lea
sbb
int
shlb
sub
in
add
sbb
adc
xchg
lods
shr
cmp
jecxz
fildl
add
je
idivl
out
jp
pop
sarl
lods
jbe
pop
cmp
movsb
mov
pop
jbe
adc
ljmp
jge
arpl
sbb
push
loope
xchg
sbb
cmpl
shll
push
mov
fistl
jg
ds
xchg
orl
cld
outsl
pop
mov
fxtract
lret
dec
imul
nop
inc
mull
test
ds
insl
stos
hlt
lods
scas
sbb
in
jge
and
mov
adc
loop
adc
mov
sbb
xchg
jle
ret
dec
push
imul
stos
insl
in
adc
icebp
arpl
or
sbb
sti
call
inc
imul
bound
fst
fimuls
xchg
mov
adc
lret
jbe
xchg
or
in
stc
test
mov
push
mov
mov
data16
test
pop
xchg
loopne
push
sbb
das
add
arpl
mov
cld
and
pop
das
adc
mov
stos
xor
mov
insl
nop
xor
mov
mov
cs
into
ds
push
pop
lock
addr16
pop
mov
sarl
xchg
sar
ficomps
test
nop
jb
mov
clc
ja
out
sbb
pop
jo
add
cmp
cmp
movsb
dec
dec
mov
cmp
adc
xchg
bnd
mov
loop
out
or
ljmp
or
push
pop
adc
inc
mov
in
in
and
lods
adc
sub
fsubs
pop
adc
and
adc
xor
es
mov
xor
call
sub
xchg
pop
shll
data16
add
inc
fiadds
negb
inc
hlt
jno
ret
js
fcoml
cmp
in
test
test
fimuls
loop
dec
xchg
out
inc
dec
mov
push
dec
xorb
bound
xchg
es
jp
mov
pop
cmp
xchg
mov
js
cs
xchg
bound
pop
aaa
or
lods
das
aam
xor
jmp
pop
xor
dec
loopne
call
cmc
enter
jbe
cltd
mov
fsts
mov
or
ficoml
int3
sub
sub
add
in
mov
fstpl
adc
addb
inc
xchg
test
imul
test
imul
or
mov
sbb
cld
dec
push
mov
push
push
ret
push
lds
mov
cmp
lods
xor
dec
dec
inc
lret
jne
int
hlt
lods
idiv
pop
cmp
ret
cs
mov
ljmp
lret
add
pop
lret
add
cmpsl
and
shl
xchg
mov
ret
xor
adc
fwait
mov
icebp
aad
mov
add
jg
pop
sub
and
leave
xchg
lds
jno
ret
pop
incb
pop
sub
ret
hlt
jno
mov
jg
pop
lahf
add
add
leave
int
dec
dec
ljmp
sbb
mov
cwtl
fldt
lahf
pop
rcl
fbstp
xchg
mov
mov
ficompl
loopne
pushf
decl
call
and
lock
mov
arpl
pop
in
add
mov
jecxz
add
push
xchg
mov
ds
add
sbb
cwtl
xor
fdivr
mov
add
mov
loop
inc
xlat
sub
movsw
je
adc
jecxz
icebp
out
test
stos
iret
dec
pop
xorb
dec
xor
push
aaa
sub
in
mov
dec
gs
xor
adc
add
iret
mov
xlat
xchg
scas
fiaddl
pop
xor
cld
mov
sbb
mov
lock
test
inc
xchg
repnz
pop
sbb
or
pop
lds
inc
sbb
mov
adc
sbb
add
xchg
push
ficompl
dec
imul
lds
hlt
or
fstp
es
rcr
add
pop
and
adc
mov
mov
stc
cmp
inc
cmp
xchg
inc
iret
ja
xor
rol
add
cmpl
bound
add
jge
test
push
xor
mov
in
out
jb
enter
xlat
jbe
xchg
jbe
mov
sub
inc
test
repz
jns
aad
insl
pushf
fldcw
sbb
xchg
loopne
and
add
rcl
es
dec
dec
and
imul
jge
shl
call
sbb
cli
out
mov
dec
cmp
pop
add
cmpsb
xchg
jo
sbb
mov
and
pop
or
in
xorb
sub
mov
xchg
fisttps
push
aam
dec
or
xor
jge
xor
fldenv
pop
sbb
dec
push
rcrl
jle
mov
mov
dec
sub
mov
xchg
push
repz
dec
mov
repnz
adc
insb
lea
mov
mov
sbb
push
mov
cmp
push
aam
fstps
xor
ljmp
sub
pop
ljmp
xor
icebp
pop
mov
out
sbb
sarb
in
dec
lea
and
jnp
dec
adc
addl
call
sub
mov
arpl
je
xor
push
cwtl
repnz
push
out
fisubs
rolb
cld
icebp
add
fbld
xchg
je
int
xlat
test
adc
mov
lret
test
pop
mov
fcompl
int
adcb
mov
add
lods
mov
repnz
push
xor
mov
mov
icebp
cs
mov
out
cmp
jno
xor
jecxz
add
mov
popa
pop
mov
cltd
pop
add
mov
dec
or
pushf
xor
iret
iret
andl
add
cmp
inc
jl
mov
cmp
je
js
cs
sbb
adc
fsub
push
pushf
cmpsb
cs
out
lret
xchg
or
inc
or
sar
sti
cwtl
pushf
jae
cmp
loopne
push
mov
or
lcall
jbe
inc
mov
or
fistps
adc
rcll
sub
xor
inc
pop
pop
lods
enter
repnz
xor
mov
aas
clc
rcrb
adc
call
add
imul
push
testb
inc
sub
sar
inc
sub
adc
nop
testl
fadds
icebp
popa
call
sub
pop
stos
in
pop
jae
sbb
fimull
rcrl
cld
pop
sahf
not
inc
xchg
xchg
outsb
mov
add
aaa
test
cmp
out
fnstsw
repz
sub
jbe
xlat
mov
fisttps
mov
or
je
and
fcoms
enter
xor
hlt
inc
popa
adc
sub
test
mov
mov
jbe
lahf
cmpsb
out
cli
out
popa
add
jle
dec
lock
in
out
roll
scas
adc
insl
ret
jecxz
push
xchg
jp
loop
shrb
cmc
imul
xlat
or
int
or
imul
cmp
push
insl
loop
cli
sub
push
leave
sbb
out
roll
les
sbb
jne
rorb
dec
sbb
xor
pusha
cmp
add
repz
inc
ljmp
mov
add
or
push
add
test
jnp
mov
pop
sub
gs
lods
cs
push
mov
test
lock
iret
cmp
cltd
xchg
xor
mov
adc
push
adc
jle
xor
stos
cmpsb
jge
daa
lds
pushf
cmpsl
sbb
mov
fmul
inc
fiadds
xor
out
or
outsb
movzwl
dec
and
ljmp
xor
fcmovnb
adc
mov
xlat
jle
jb
adc
sti
pop
pusha
stos
mov
mov
roll
mov
cli
addl
inc
imul
inc
in
push
bound
lods
int
movsb
push
sar
div
pop
lret
shll
xor
cwtl
gs
popa
pop
incb
cmpsw
cmp
pop
dec
idivb
imul
imul
fst
mov
pusha
push
ret
xchg
inc
pop
add
push
mov
int
xorb
test
xchg
in
xchg
sbb
jno
lret
push
repnz
dec
loopne
pushf
in
notb
hlt
adc
ss
push
or
sub
mov
xchg
sbb
push
test
xor
add
mov
popa
fisubl
scas
cmp
gs
ret
dec
fisttpll
int3
sbb
lahf
dec
mov
stos
das
sbb
or
adc
jecxz
in
mov
push
jnp
and
rcll
bound
pop
inc
jbe
sub
into
sahf
or
sub
lock
jns
jbe
dec
xchg
scas
das
cmp
add
test
mov
arpl
mov
cmp
test
stos
mov
adc
call
pop
rcll
in
fcmovnu
dec
mov
xchg
shll
test
sub
push
lods
lahf
push
pop
mov
lcall
adc
popa
pop
pop
out
jns
stos
popf
pop
lock
pop
int
sub
lea
inc
or
test
fs
sbb
inc
ret
mov
sub
sbbb
imul
shll
jecxz
lods
scas
cli
push
xor
stos
pop
lea
lds
xlat
push
and
outsl
adc
jp
fbld
stc
pop
dec
mov
xor
push
xor
test
push
cld
movsl
jae
mov
loopne
and
lds
inc
sete
mov
repnz
sbb
cmp
xlat
lods
inc
jno
jne
pop
mov
xorl
mov
push
sarl
sub
xchg
cmp
test
jge
cld
push
dec
gs
adc
sti
inc
in
xor
pop
cwtl
inc
xor
cmp
rorl
inc
pop
aam
ljmp
scas
sub
hlt
and
jge
js
cltd
out
mov
mov
lock
repz
lea
jnp
jno
push
pop
jne
rorb
test
push
lahf
adc
cwtl
arpl
ret
and
out
add
test
jp
pop
fsqrt
jmp
lea
pop
loopne
dec
inc
addr16
mov
outsb
dec
in
insb
push
cwtl
mov
sbb
std
movsl
xchg
jnp
mov
cli
push
dec
cmp
inc
fcoms
rcr
dec
mov
or
push
jp
add
cmpsb
mov
lea
pop
jge
mov
add
dec
cmp
data16
sub
pop
and
test
add
iret
mov
leave
popf
mulb
xor
mov
or
mov
arpl
mov
sbb
add
push
stos
pop
jle
out
nop
and
mov
je
sub
mov
sub
mov
add
jne
call
jl
and
call
mov
xchg
inc
and
orb
mov
cmc
js
les
mov
fildll
add
call
ja
jnp
adc
adcb
mov
cmp
rclb
ret
iret
icebp
adc
xor
test
pop
or
inc
dec
call
sahf
in
xchg
ja
dec
pop
dec
xchg
and
aam
ds
cli
movsb
push
pop
inc
iret
add
push
fidivl
xchg
and
xlat
xor
imul
mov
out
mov
jns
push
sbb
aam
fidivl
dec
shll
jg
push
je
shlb
shrl
lods
mov
or
ss
lds
ljmp
add
sbb
pushf
jge
jecxz
push
aaa
sbb
les
mov
in
xchg
sub
test
push
sbb
jbe
add
stos
bnd
xchg
js
nop
mov
or
jl
adc
xorl
inc
mov
cmp
aam
aam
sbb
aad
out
mov
loope
jl
pusha
pop
xor
pop
mov
or
add
movsl
xor
aas
test
les
mov
insb
lea
mov
sub
mov
mov
mov
jb
cmp
ret
cmp
scas
cmp
pop
pop
lcall
repnz
cmpsb
mov
int
pusha
out
dec
fisubs
lret
imul
push
or
cltd
pusha
ss
pop
out
push
orl
cmp
mov
lcall
loop
sbb
icebp
jno
lahf
pop
cmc
mov
push
ret
add
or
xchg
lcall
push
loop
inc
fsubrs
rol
pop
loopne
xchg
cmp
and
mov
cmpsl
or
ljmp
mov
aad
dec
out
add
rcr
ljmp
and
cltd
mov
fstpl
filds
sbb
pop
lds
and
sahf
movsb
jbe
dec
out
inc
mov
test
addl
pusha
stc
jmp
into
addr16
test
dec
inc
pop
ss
fs
movsb
arpl
negb
das
incb
or
push
xlat
mov
icebp
mov
mov
inc
push
push
fs
and
fcompl
mov
js
sti
mov
hlt
inc
add
sub
in
das
mov
cltd
cmpsb
adc
mov
lock
pop
pushl
xchg
shlb
mov
push
or
lcall
test
aaa
mov
lret
repnz
shrb
leave
pop
loope
dec
aad
js
cli
jns
mov
lcall
fmul
push
xor
pop
in
mov
outsl
sub
sbb
jmp
fdivrp
test
push
sbb
add
dec
sub
nop
pop
rcll
adc
mov
cmp
sarb
int
pop
push
daa
add
cmpsl
sbb
test
push
sbb
sahf
mov
xor
pop
xorl
in
fsts
or
in
les
sbb
iret
adc
mov
enter
sbb
sub
roll
jp
les
pop
xlat
push
bound
daa
jbe
jl
rcll
add
mov
lea
test
fwait
push
mov
adc
dec
notb
orb
sbb
add
push
adc
adc
cld
add
in
inc
push
inc
ret
lods
fiadds
ja
mov
sbb
inc
mov
call
int
jns
dec
out
rol
inc
popf
and
add
lret
push
push
jnp
or
out
inc
pop
shlb
push
xchg
and
pushf
and
sub
hlt
and
fs
xchg
ss
sbb
or
ret
call
rorb
cmp
push
xchg
lods
imul
ljmp
jl
ret
aad
sbb
or
dec
stos
jo
pop
xor
adc
cmp
popf
cmc
test
inc
pop
xor
dec
or
sub
dec
rorb
mov
test
mov
movl
loope
xchg
push
sbb
icebp
inc
xchg
sub
stos
inc
sbb
mov
dec
daa
daa
push
or
pushf
inc
push
aam
test
cmpl
cmp
fcmovu
xchg
push
hlt
rcr
dec
pop
or
cli
mov
enter
mov
call
mov
adc
sbb
push
das
inc
loope
sbb
jo
xchg
mov
and
xor
shlb
add
js
xor
int3
std
xchg
ror
stos
cld
enter
fstl
mov
lret
mov
bound
xchg
cmpsl
dec
fwait
and
push
fadds
movsb
pusha
jecxz
mov
leave
cld
xchg
sub
cs
pop
push
ljmp
sub
out
push
and
sarb
mov
xor
dec
jae
testb
push
mov
imul
popa
mov
cltd
imul
and
dec
push
sbb
sub
lret
adc
dec
mov
rorl
imul
mov
idiv
push
call
mov
jne
mov
mov
mov
ret
bound
repnz
shr
and
adc
add
jmp
sbb
jno
jmp
rclb
dec
or
mov
jae
push
adc
aas
out
mov
ds
push
sahf
out
push
fisttpll
cwtl
xor
jle
lret
pusha
jp
sarl
jae
call
push
pop
adcb
loope
jecxz
outsl
mov
cmp
add
push
lret
sti
int3
nop
hlt
mov
push
scas
lret
mov
stos
pusha
mov
into
dec
xor
out
mov
mov
or
mov
lea
movsb
sbb
push
es
push
adc
aad
push
push
fld
lret
addr16
push
in
sbb
mov
sub
fstpl
mov
add
cmp
add
jb
ficompl
repz
sbb
pop
jb
in
inc
pop
mov
loopne,pn
or
outsl
bound
loopne
lret
xlat
mov
or
fisttps
frstor
lods
in
dec
dec
icebp
dec
js
push
fimuls
sub
pop
cltd
icebp
jge
stos
cmp
clc
in
ret
jle
insb
cmc
lods
add
mov
cmpsl
cmp
popf
mov
cmp
cld
lahf
jmp
push
add
iret
cmp
fadds
ljmp
or
cmpsb
pusha
out
fisubrs
jmp
and
pop
enter
cmpb
test
cmp
add
lods
in
push
push
adc
out
mov
inc
gs
jbe
popf
cmc
gs
lret
inc
sahf
mov
xchg
das
push
inc
cld
mov
jl
xchg
sub
sarb
ja
lock
xchg
test
mov
daa
jp
lahf
inc
ja
mov
sbb
notl
bound
movsl
xor
xor
jne
jmp
test
xchg
imul
cmp
imul
mov
pop
nop
leave
pop
add
leave
rcr
inc
sti
mov
popa
jb,pn
leave
gs
fisttps
fstpt
nop
das
add
sub
mov
mov
sahf
outsl
cwtl
and
xor
push
lds
jbe
cmp
mov
pop
cld
test
pop
stos
movsb
loope
icebp
push
outsb
push
je
shr
inc
inc
jae
and
dec
xchg
outsb
and
ret
cld
push
sahf
inc
jb
push
clc
pushf
daa
repnz
aad
rcll
mov
data16
lcall
lahf
aas
lock
xchg
xchg
sbb
adc
cmp
add
dec
lcall
pop
aas
mov
mov
mov
das
in
ja
add
ret
jo
pop
add
aaa
jge
in
mov
xchg
mov
push
jmp
inc
inc
sbb
fwait
mov
nop
pop
lret
adc
push
imul
sbb
out
cmpsb
loope
mov
and
cltd
mov
popf
lahf
push
sub
leave
pushf
loopne
dec
jle
jbe
sub
xchg
js
js
xor
xchg
fwait
push
xchg
into
in
lods
sbb
dec
adc
sbb
dec
jb
clc
xor
addl
stc
add
lea
jae
fwait
cmpsb
dec
fwait
and
or
ffreep
pop
inc
testl
and
in
mov
rcrb
pusha
mov
vpcmpeqb
sbb
sbb
mov
ja
rorb
xchg
inc
sahf
pop
mov
xchg
movsl
daa
add
jae
push
and
mov
pop
lret
pop
jnp
xchg
mov
stc
fldenv
ret
nop
xchg
and
inc
pop
fistl
mov
pop
add
jmp
ljmp
push
sbb
imul
shll
and
or
dec
cmp
fs
aaa
jno
dec
mov
nop
sbb
loope
and
cltd
mov
ljmp
js
add
cmpsl
cmp
dec
xchg
add
push
outsl
mov
mov
push
imul
andl
sub
aad
dec
cwtl
adc
icebp
xchg
outsl
addr16
cmp
lret
mov
lahf
pushf
int
fldcw
dec
out
mov
add
cmp
sarb
dec
jge
mov
add
pop
adc
push
jle
sahf
pushf
xchg
fidivl
add
adc
out
xchg
lret
xor
add
xchg
ror
push
sti
call
jl
lahf
cli
aas
frstor
or
dec
call
aam
orb
jmp
add
jnp
daa
scas
comiss
pop
add
sub
mov
dec
orl
out
outsl
cmp
movsl
push
jae
dec
adc
adc
push
pop
push
mov
and
repz
adc
nop
or
inc
inc
cmpsb
scas
imul
cltd
push
fstl
mov
xor
mov
push
mov
out
mov
pop
jge
adc
call
and
outsl
sbb
mov
pop
dec
inc
nop
adc
lods
sub
xchg
mov
insb
hlt
cmpsb
mov
je
fcomp
stos
mov
adc
pop
adc
pop
cmp
es
mov
shl
add
or
pshufw
pop
leave
shl
dec
pushl
fistpl
cmp
or
pushf
sbb
mov
es
xor
lock
aad
mov
or
call
rcll
gs
notl
outsb
movsl
adc
mov
push
xchg
gs
popf
mov
pop
push
cwtl
cltd
jle
jnp
jbe
or
sbb
lods
mov
out
pop
sbb
outsb
sbb
mov
sarl
push
or
jnp
cmp
or
lcall
push
mov
stos
mov
inc
je
rcl
or
and
and
ret
shrl
cltd
and
stos
jns
in
xchg
bound
nop
lods
imulb
insb
adc
adc
popf
add
aam
inc
sub
xor
mov
repz
popa
cld
test
imul
imul
subb
mov
adc
pop
out
or
xor
jg
pop
or
clc
pop
cmp
mov
in
movsb
sbb
xorb
lahf
push
adc
sbb
mov
jp
leave
fdivrs
nop
aas
xor
mov
xchg
and
dec
sbb
pop
inc
lret
fstl
xchg
pop
je
pop
jbe
jecxz
and
or
pop
test
test
jmp
sbb
inc
push
push
call
push
int3
adc
jge
dec
and
dec
pop
sti
cmp
xchg
dec
xor
loope
xor
inc
mov
pop
ret
jnp
int
xchg
or
mov
clc
sub
mov
or
pop
xor
add
mov
jne
int3
push
mov
pusha
mov
lret
cmp
xchg
cltd
add
orl
mov
loop
xor
xlat
cmp
std
fsubrs
jge
jbe
mov
xor
jl
test
sti
fdivs
repz
inc
xchg
mov
shl
clc
pop
notl
shl
leave
imul
lock
mov
aam
sub
cmp
and
xchg
add
test
xchg
jecxz
es
dec
rorb
in
mov
aaa
popf
adc
add
sarb
aam
in
sub
sbb
jbe
pop
mov
dec
cmp
loope
sub
fs
or
mov
pop
jns
xchg
cmp
and
sahf
in
mov
lds
xchg
dec
imul
xor
in
add
dec
out
nop
push
adcl
lods
imul
xchg
repz
inc
bound
dec
lea
sti
sarb
in
sbb
push
dec
jmp
cmpsb
dec
outsb
xchg
testb
lds
pushf
or
divl
xchg
mov
in
adc
insb
imul
mov
nop
data16
xchg
and
into
into
faddp
test
popl
add
sbb
daa
mov
jg
cld
cmp
cmp
push
icebp
dec
daa
sub
or
xchg
jae
xchg
push
mov
jbe
andb
popa
mov
aam
dec
push
shll
push
dec
adc
les
mov
cmp
leave
mov
or
sbb
cmp
push
xlat
js
jo
jbe
add
jmp
rcrl
mov
cld
xchg
hlt
loope
test
into
icebp
mov
out
adc
dec
stos
enter
inc
inc
mov
xor
xchg
dec
out
lahf
pushl
sarl
jge
mov
loopne
ljmp
xchg
test
push
popf
push
cli
sub
gs
shrl
mov
adc
lods
sarl
jg
mov
or
loopne
fcoml
push
test
insb
sbb
std
notl
adc
les
push
jg
stos
sub
jo
inc
stos
test
xchg
push
push
rolb
add
xchg
mov
sub
mov
cmpl
add
xor
ljmp
inc
lret
dec
sti
mov
mov
push
iret
test
loopne
shrb
sub
scas
mov
stc
cmpsl
icebp
ret
pop
inc
subl
add
jns
inc
xor
nop
fstps
fmull
insl
and
mov
loop
sbb
xchg
loopne
aam
ja
mov
jns
sbb
out
dec
ja
enter
cli
mov
out
sub
les
or
ficoml
cs
cmp
adc
scas
add
out
cmp
pop
inc
lods
mov
fists
les
mov
add
xchg
jo
mov
jg
lcall
adc
mov
in
aaa
mov
push
sub
mov
gs
pop
orl
gs
fstpt
imul
pop
push
add
xor
xor
fcoml
es
stc
in
pop
push
nop
inc
pop
pop
push
lahf
pop
cmp
xor
inc
mov
mov
addb
sbb
push
cmp
es
push
adc
in
sub
pop
ds
aas
jo
dec
xor
mov
stos
popa
rorb
jge
sub
fildl
ljmp
fsubrl
lahf
popa
push
ret
mov
lds
mov
gs
mov
lods
icebp
adc
jbe
imul
cmp
in
sbb
cmp
dec
inc
xor
test
lods
jp
dec
pop
leave
mov
mov
clc
xchg
mov
orl
imul
in
mov
push
and
arpl
and
sub
arpl
into
aas
mov
repz
xor
fimuls
jmp
test
cltd
std
dec
iret
jmp
cmc
dec
mov
stc
add
sbb
pop
xchg
cmpsb
add
or
inc
ss
je
rcr
bound
les
out
lahf
scas
lret
orl
sub
inc
mov
pop
in
cmp
aam
sbb
jae
mov
lock
addr16
pop
mov
mov
repnz
insb
or
xor
fbstp
orl
or
lret
ret
aas
mov
fs
dec
xchg
imul
cmp
lods
loop
mov
push
mov
mov
jp
jp
int
pusha
jp
repz
pop
add
jno
out
xor
data16
aad
ret
je
xor
lods
cltd
loope
jl
ficompl
movl
inc
lods
and
int3
gs
add
mov
in
div
sub
pop
dec
pop
in
inc
adc
adc
cmc
add
insl
sbb
mov
mov
xlat
sub
in
dec
jle
into
cltd
xlat
inc
and
jg
add
lea
cmp
lahf
and
pop
shll
inc
arpl
or
rcrl
test
pop
fidivrl
ret
std
sahf
mov
fisttpl
out
mov
and
sarb
sub
or
ret
into
das
xchg
imul
std
pop
jp
pop
dec
sub
pop
into
and
xor
test
jge
loopne
les
mov
fcomi
rcrl
mov
stc
cmp
jbe
xchg
inc
xorl
mov
lds
fwait
sbb
inc
stc
gs
loop
insl
xlat
fstpt
xchg
and
sbbl
jne
jp
sbb
je
push
adc
int
mov
cmp
jge
sbb
xor
dec
inc
adc
in
push
or
mov
ss
jnp
xchg
mov
les
xor
jno
add
adc
shll
adc
fnstenv
and
xlat
jmp
icebp
mov
dec
rcll
mov
xor
stos
xchg
adc
mov
xchg
xorb
pusha
enter
or
repz
cmp
pop
add
repz
test
sbb
adc
sub
and
cmpb
mov
inc
mov
loope
andb
mov
ret
xchg
negl
movsb
imul
dec
or
push
jne
into
or
jae
frstor
xor
jnp
in
dec
insb
subb
mov
adc
mov
std
sub
add
adc
rcrl
in
lods
dec
pop
pop
repz
pushf
ljmp
and
decb
sbb
or
xchg
sar
and
sub
adc
mov
shlb
jl
outsl
adc
pushf
sub
out
mov
rcrb
sbb
sti
or
jno
out
sbb
xor
push
pop
iret
jae
inc
dec
lcall
shlb
leave
lahf
rcl
pop
dec
push
addr16
out
add
mov
fdivp
aas
negb
cli
leave
jno
ret
mov
xchg
movsb
add
in
xor
cmpsl
loope
push
sbb
pushf
sti
push
mov
lods
imul
adc
push
xchg
pop
dec
sub
jl
sub
orb
mov
stc
jmp
mov
jbe
pop
or
jbe
mov
sti
pop
jns
jl
daa
paddusw
fildll
out
xchg
or
xor
outsl
mov
add
dec
outsb
pushf
mov
inc
and
lods
pop
push
dec
mul
in
mov
test
adc
rorl
repnz
das
mov
in
mov
add
mov
lds
dec
movsb
push
mov
dec
sbb
pop
notl
pop
xor
outsl
mov
iret
lcall
repz
fxch
sub
or
ficomps
add
mov
sub
push
xor
push
xor
xchg
pushf
int
xchg
sbb
lock
or
sub
addr16
inc
call
std
inc
mov
jo
dec
repz
cmp
ret
jl
mov
aaa
leave
andnps
xor
scas
out
lock
pop
push
jb
mov
iret
iret
pop
cltd
fsub
pop
add
mov
in
mov
mov
outsl
xchg
lods
mov
jl
bnd
and
data16
js
ljmp
pop
stos
cmp
std
inc
inc
fnstcw
sahf
sahf
push
mov
sbb
add
dec
xor
jnp
mov
cmpsl
lahf
and
subl
mov
popf
or
stc
xchg
cmp
mov
dec
push
mov
sbb
fldl
lods
pop
loop
pop
mov
aam
xchg
sbb
ljmp
pop
push
in
js
cltd
cmc
fwait
and
test
orl
mov
or
jae
adc
push
outsl
loop
adc
or
push
cmp
call
pop
pusha
pop
icebp
jmp
jns
cmp
or
pop
push
arpl
into
push
or
mov
adc
xchg
in
pusha
dec
shlb
cmpsb
js
add
movsb
lods
and
cmpsl
imul
pop
or
cmp
scas
test
xor
fcmovnb
mov
sbb
jge,pt
add
ldmxcsr
int
fidivs
lcall
or
cmp
push
gs
adc
andl
js
or
insl
test
push
push
in
mov
loopne
mov
subl
stos
or
callw
add
movsl
mov
add
adc
xchg
pop
add
rcl
fwait
xor
inc
cwtl
cmpb
ds
fstpl
mov
jmp
mov
pop
fildll
dec
mov
lea
orl
mov
xchg
pop
cmp
mov
pop
rclb
pop
adc
pop
sbb
xor
jne
lahf
int3
repz
push
cli
jae
mov
dec
push
adc
mov
lods
test
enter
pop
dec
dec
imul
and
inc
jbe
mov
dec
mov
nop
jge
fsts
fcomps
negb
pop
mov
jp
gs
push
ss
es
xlat
icebp
sub
fisubs
gs
int
jb
ret
push
lods
xor
mov
dec
pop
jb
pop
jmp
adc
sub
cmp
mov
jmp
aas
push
push
outsb
notl
loope
sbb
sub
fdivl
sub
sbb
xchg
adc
ds
lea
out
push
fnop
push
push
push
stc
pusha
in
les
jg
dec
and
cmpsb
mov
aam
scas
dec
add
je
sahf
insl
push
enter
insl
mov
ja
mov
test
mov
dec
das
movsl
inc
add
mov
shrb
pop
mov
push
or
dec
call
xchg
stos
mov
out
pop
mov
fstcw
addl
mov
loope
and
imul
mov
in
push
xor
fisubl
cs
out
or
leave
jne
adc
inc
jb
and
push
pop
cmp
and
or
jg
and
cmc
push
cmpsb
sub
add
push
test
scas
pop
add
push
jp
jo
xlat
popa
fisubl
push
push
test
ss
test
adc
xor
cmp
fistpl
jge
mov
add
and
andb
movsl
xchg
loope
cmp
xchg
xchg
ffree
outsl
or
xor
int3
lahf
xor
sahf
rorl
or
mov
data16
or
xchg
inc
push
pop
xor
xor
pusha
ljmp
add
fs
adc
lock
pop
dec
adc
bound
push
mov
and
or
shrl
negb
mov
push
push
xchg
xchg
negb
push
xorb
add
in
and
rcll
cmp
dec
adc
pop
cmc
cmp
or
dec
sub
push
add
add
lahf
mov
aad
fbstp
xor
or
mov
xlat
movsl
adc
mov
outsl
cs
insl
shrb
je
jns
dec
adc
jno
push
jecxz
insl
jmp
jnp
mov
push
inc
addr16
and
sub
mov
push
xor
pop
scas
pop
pop
fcmovnbe
mov
cmc
adc
lcall
dec
mov
sbb
sbb
fisubrs
adc
cmp
push
lcall
lcall
icebp
insl
incb
rclb
mov
stos
jmp
sub
and
xchg
push
mov
sub
sub
pop
cmpsb
ret
pmovmskb
imulb
and
nop
sbb
dec
pop
mov
add
or
push
adc
pushf
in
jbe
push
and
fadd
dec
cmc
int3
dec
dec
enter
scas
cs
mov
das
das
fwait
aaa
add
pop
leave
mov
fimuls
push
mov
outsb
dec
xor
pop
fwait
mov
sub
adc
dec
push
dec
daa
xchg
out
test
jo
ja
rolb
pop
test
andb
lahf
pop
subl
mov
or
push
push
test
iret
mov
inc
cwtl
ds
ljmp
in
das
popf
repnz
ja
decb
aaa
xor
sbb
cmpsb
dec
ja
enter
sub
insb
cld
mov
pop
mov
sbb
adc
mov
adc
xchg
daa
aad
jae
icebp
mov
xchg
stc
cmpsb
xchg
pop
xchg
mov
xchg
jno
sub
enter
inc
shlb
rclb
and
scas
sub
jne
dec
pushf
mov
lods
mov
jg
inc
xchg
or
mov
dec
jmp
cmp
and
lret
jo
jne
jo
sbb
pop
cmp
mov
cwtl
sti
push
jb
arpl
lret
fidivrs
sti
enter
ror
std
insl
or
sub
in
popa
jmp
mov
xchg
dec
test
in
repz
ja
or
add
jl
pop
imul
mov
dec
jmp
sti
inc
inc
cwtl
idiv
test
jmp
cmp
icebp
pop
pop
repz
or
or
dec
mov
mov
out
icebp
adcb
mov
xor
xchg
mov
in
test
dec
shr
and
fs
movsl
pop
xor
ja
cmp
adc
or
dec
add
call
icebp
sarl
bound
repnz
pushf
jb
xchg
cld
ror
cwtl
add
sti
pop
iret
mov
cmpsb
xchg
dec
and
pushf
or
or
push
sbb
loopne
xchg
push
or
sub
xchg
stos
xchg
jns
and
mov
movsl
xchg
shrl
dec
push
shrb
add
scas
mov
sub
mov
lock
testb
sti
cli
int
scas
test
stc
ds
sbb
test
sbb
fsts
bound
aad
inc
leave
mov
loop
cmpsl
xchg
and
int
dec
fldt
inc
xchg
sahf
sub
pusha
push
call
push
bound
inc
mov
das
inc
mov
cmp
and
push
xor
fcmovu
addr16
mov
or
fbstp
ret
or
ss
add
aaa
mov
in
outsb
xor
cli
aam
push
rclb
sbb
pop
sbb
outsb
jg
sbb
jmp
jmp
shl
and
add
shr
mov
loopne
push
int3
ror
aas
das
mov
lods
push
xchg
rolb
or
subb
call
and
pop
lock
std
out
jbe
movl
pop
sti
rcrl
shr
dec
rcrb
test
das
stos
inc
add
gs
shll
cmpsl
xchg
xchg
push
repnz
pop
jns
repz
mov
sbb
shll
shll
cmpsl
mov
mov
or
jge
call
cltd
and
push
push
push
push
leave
sbb
subl
xchg
jp
xchg
sti
push
xchg
jnp
adc
ss
mov
fdivrs
out
lcall
cmp
pop
xor
dec
inc
sbb
cs
cld
jecxz
in
shll
incb
sub
dec
jg
xchg
xlat
test
sahf
sahf
jecxz
mov
fdivr
and
xor
sahf
mov
gs
ljmp
sbb
push
js
pop
sbb
push
nop
fdiv
imul
mov
imul
stos
vandps
cltd
cmpsl
dec
fadds
xlat
cmp
pop
scas
and
dec
dec
jmp
les
pop
pop
xchg
xor
inc
test
sbb
xchg
in
in
pop
adc
jp
mov
mov
sar
pop
outsl
mov
mov
out
pusha
das
push
div
ljmp
inc
pop
push
orb
stos
pop
dec
lds
popf
xchg
dec
mov
imulb
cmp
cmp
cs
cmp
lds
fmuls
lret
jl
push
sub
lods
pushf
push
pop
jg
lods
cmp
xchg
mov
lds
xchg
mov
mov
mov
and
int
stos
xor
dec
insb
cmpsb
pop
mov
pop
cmpsl
leave
imul
inc
cmpsb
aas
jnp
lods
cmp
dec
dec
jno
dec
pop
arpl
push
ja
adc
inc
ret
dec
mov
fildl
in
mov
nop
jae
in
lea
jmp
pop
test
ret
insb
enter
jne
in
mov
xlat
dec
mov
sbb
popf
andb
push
sbb
xchg
mov
xorl
gs
or
adc
fidivrl
add
aad
pop
xchg
aam
ret
and
add
lds
ficompl
test
xchg
test
add
xor
dec
dec
cmc
xchg
fisttps
mov
pushl
ja
cmp
xlat
ja
sbb
cmp
in
movl
clc
lcall
lret
sbb
xchg
rcrl
adc
loopne
sub
push
aas
inc
dec
mov
movsl
inc
insl
xor
jbe
arpl
cmp
jmp
dec
outsb
push
or
mov
mov
sub
test
insl
dec
lret
std
cmpsb
pop
or
int3
dec
and
mov
imul
lods
repnz
int3
out
and
push
xor
mov
xchg
mov
test
sahf
dec
fmull
call
and
lds
cmp
negb
add
leave
cwtl
ret
sub
inc
imul
push
mov
xchg
aas
pushf
and
xchg
cmc
cmova
inc
icebp
dec
adc
inc
popf
das
shrb
es
or
lods
jbe
out
test
xchg
mov
stc
xchg
inc
push
push
sub
jb
xchg
xor
cmp
fstl
sbb
lretw
mov
call
ds
mov
stc
xor
pop
jne
lods
inc
sub
or
cmp
cmc
adc
push
jge
lea
sbbl
xchg
dec
adc
and
test
fwait
push
lea
dec
pop
sarb
sub
jmp
dec
fisubrl
pop
add
lods
inc
insl
scas
sbb
add
mov
fwait
jp
xlat
test
sub
mov
test
pop
or
repz
jae
push
imul
xchg
leave
addr16
add
inc
shll
dec
jle
dec
mov
fistps
out
push
popf
inc
push
mov
cmpsl
and
mov
inc
lock
push
lcall
in
cwtl
inc
in
dec
out
imul
sub
sahf
inc
add
push
adc
scas
frstor
dec
sub
into
cld
mov
fisubl
dec
fwait
repnz
je
popa
pop
sti
mov
ret
xorb
or
mov
lods
movsb
and
neg
arpl
aam
aad
jecxz
push
cld
push
adc
sub
jnp
and
stos
or
mov
cmp
into
in
lret
insl
push
out
sbb
iret
pop
push
lods
jns
xor
scas
popf
inc
sbbl
cld
lahf
mov
loop
mov
cmp
mov
lods
pop
adc
adc
cmpb
inc
sar
lock
sbb
iret
inc
out
jb
enter
es
pusha
lret
inc
mov
add
cmp
or
adc
adc
push
scas
xchg
inc
outsb
repz
add
pop
lcall
or
int3
jp
aad
jg
ljmp
inc
pop
stc
ret
adc
cmpsb
mov
shlb
imul
jno
sahf
jns
jg
mov
rclb
xchg
ror
mov
xchg
jle
xchg
packssdw
jmp
mov
xchg
gs
and
cmpsb
inc
xor
das
mov
outsl
pop
push
pop
out
sahf
repnz
cli
or
lods
movsb
int
xor
jne
ret
popf
mov
dec
dec
push
cwtl
orb
jbe
testl
adc
mov
ret
sbb
mov
cmp
push
icebp
frstor
fstps
push
cmp
out
cmp
rcll
scas
push
mov
dec
and
dec
int3
bound
and
add
mov
adc
pop
mov
jns
adc
mov
sahf
movsl
sti
pop
ljmp
add
sub
test
add
aad
in
aam
cli
xor
and
out
or
out
sbb
cmpsb
fnstenv
ss
inc
loope
sub
iret
jb
popa
jbe
and
xchg
push
or
sub
loop
xor
add
int3
das
dec
mov
push
rol
mov
out
push
jne
xor
repz
push
loope
loope
add
pop
sub
push
mov
mov
xchg
gs
rclb
loope
dec
xchg
les
movl
and
pop
ret
push
jne
sbb
adc
pop
stc
sbb
lret
cmp
shlb
in
fdivrl
in
mov
adc
cwtl
aas
ja
fldenv
and
dec
shl
sahf
aad
lcall
jb
push
into
fs
cwtl
or
call
push
add
inc
jns
or
adc
shl
mov
je
in
xchg
add
fnstenv
pop
push
dec
xlat
es
inc
dec
and
repz
adc
dec
xchg
push
lock
sbb
ljmp
popa
lcall
mov
jne
mov
into
push
push
mov
lahf
aas
aaa
or
adc
rorl
sbb
lods
xchg
xchg
shrl
mov
popa
add
xor
mov
fst
in
iret
inc
rclb
mov
add
push
data16
rcrb
cld
inc
sbb
cmp
sbb
hlt
sarl
push
mov
pop
jl
push
in
xor
aaa
mov
popa
push
xchg
enter
fiadds
cmpsl
cli
add
dec
stc
stos
mov
stos
xor
jnp
roll
aas
rcl
int
decb
ja
or
lods
sub
jbe
push
movsl
dec
xor
in
push
subb
addb
cmp
pop
xor
data16
out
pusha
ja
lret
pop
jl
mov
jmp
xor
popa
or
pop
les
add
sti
int
mov
push
lods
aas
sbb
icebp
into
repz
jmp
test
cmpsb
pop
clc
das
mov
jle
stos
sbb
and
out
arpl
shrb
inc
pop
sbb
lahf
mov
xor
cmp
sti
mov
mov
and
jne
enter
push
mov
sbb
imul
push
popa
out
hlt
push
or
std
mov
lods
leave
push
adc
push
mov
inc
sbb
jbe
lahf
jns
popf
jno
les
or
jmp
addb
jecxz
jl
mov
or
insl
push
mov
xchg
xchg
insb
dec
dec
dec
mov
mov
fldl
ficoml
cs
popa
mov
rcll
add
dec
pushf
scas
pop
jmp
test
push
cmp
rep
mov
mov
in
ds
adc
in
adc
mov
fnstsw
push
mov
inc
mov
inc
sub
sub
push
dec
rcr
or
push
lahf
cmpl
sti
outsl
add
jne
jle
ss
lret
pop
aas
std
add
into
popf
mov
movl
xlat
jg
inc
imul
dec
mov
std
cmp
stos
push
subb
jecxz
mov
sub
cmp
je
sbb
shld
mov
hlt
ret
jo
fs
movsb
aad
addb
fidivs
mov
push
std
sbb
pushf
ja
mov
mov
sahf
insb
loope
cmpsl
sub
sub
push
or
cmp
int3
push
popf
xchg
loop
fildll
cli
xor
dec
sbb
or
enter
in
jmp
inc
scas
dec
jns
jl
mov
mov
dec
jl
xor
in
xlat
mov
fiaddl
loop
into
xchg
dec
cmp
mov
aaa
push
data16
lret
or
inc
arpl
mov
fiadds
movsb
xchg
dec
rorb
push
inc
negb
pop
mov
push
jecxz
movsb
sahf
fiadds
and
sti
adc
insb
pop
inc
shlb
filds
sbb
and
mull
outsl
push
pop
out
fidivs
fcmovb
lock
add
xor
push
testl
out
loopne
or
cli
fidivrs
out
fisttpl
cmc
stos
inc
adc
clc
xchg
and
insb
jne
mov
fstpt
mov
pushf
sbb
imul
rol
inc
lahf
je
mov
int3
ficomps
xlat
jns
push
sti
sub
pop
inc
imul
or
push
rorl
imul
xchg
adc
dec
xchg
arpl
in
lock
jno
pop
pop
push
sahf
pop
lds
sbb
jae
or
rclb
movsl
xchg
mov
xor
in
jo
adc
mov
mov
adc
cmp
sub
es
scas
sub
push
dec
or
mov
xor
jne
xchg
lods
mov
loope
in
pop
dec
gs
mov
and
pop
mov
mov
aas
push
mov
cld
push
mov
enter
add
fsubrs
push
or
push
jp
cmp
cld
inc
test
scas
clc
jp
pop
dec
push
hlt
outsb
mov
lds
inc
xchg
xchg
out
dec
push
ss
mov
and
scas
mov
push
sub
ljmp
sbb
imul
inc
jge
pop
pop
adc
jbe
pop
inc
cld
js
outsl
dec
out
test
outsl
push
xchg
add
outsl
push
mov
xor
sub
shl
lds
shrl
and
add
aad
cmpsb
arpl
xor
rcll
icebp
sbb
ret
arpl
clc
fimull
es
add
and
je
pop
mov
fsubl
adc
int3
xchg
in
pushf
cmpsb
xlat
pop
mov
adc
jl
scas
jb
mov
pop
nop
pop
xchg
xor
les
xchg
adc
lock
sub
jbe
pop
push
mov
lcall
aad
jne
jmp
dec
aam
mov
xor
sbb
adc
sbb
cwtl
int3
mov
push
out
fcmovbe
adc
insl
movsb
decl
in
pop
pop
orb
inc
jl
insl
fadd
mull
aam
mov
mov
and
mov
adc
pop
andb
test
dec
push
jae
scas
psubsw
lret
mov
sti
cmpsl
mov
and
mov
in
sbb
sbb
dec
cmp
jecxz
push
xor
lcall
popf
in
ret
cmp
lret
xchg
pop
addl
inc
push
xor
roll
jo
aas
insl
add
std
andl
add
mov
outsb
jnp
fcoml
clc
das
add
push
das
xor
inc
cmpsl
ficompl
fwait
sub
mov
dec
push
cli
jbe
stc
push
jae
pop
inc
subb
fcom
pop
movsb
insb
cld
inc
imul
repz
xchg
or
push
es
out
cmp
ds
fildl
leave
ljmp
dec
dec
inc
out
scas
mov
fistl
into
pop
add
cli
inc
cs
push
jmp
mov
stos
xchg
or
push
lds
sbb
inc
insb
sub
ljmp
push
mov
push
out
mov
stos
cmpsl
rcll
ss
sbb
mov
pop
mov
ds
jno
test
mov
mov
adc
jns
fsubs
add
lcall
push
xchg
pop
clc
push
in
aad
vpmacssdql
push
fists
js
sub
iret
lods
xchg
insl
add
loope
mov
or
scas
movl
dec
cmp
in
inc
cmp
lahf
nop
mov
sub
mov
outsb
sbb
push
aad
add
mov
inc
sti
dec
add
and
fnstenv
mov
cmp
sbb
and
test
add
add
ret
adc
vmread
popa
push
cs
movsb
das
movsb
leave
test
clc
fwait
in
nop
push
sbb
xchg
pop
lods
mov
mov
push
aaa
sub
sub
mov
add
cs
mov
mov
fnstcw
push
sub
inc
fimull
rcl
push
test
into
inc
mov
in
mulb
mov
ja
inc
push
call
rcll
pop
mov
xchg
mov
xor
mov
cmpsb
leave
and
add
aas
push
out
mov
fincstp
mov
jl
mov
ret
cmp
add
pop
sub
and
or
fisttpll
dec
iret
cmp
sub
in
mov
inc
daa
mov
push
andl
sub
and
mov
mov
xor
fstl
gs
fadds
out
jns
aam
push
mov
xor
push
mov
or
lock
mov
sub
lods
sbb
mov
pusha
sti
ds
out
fadd
xor
in
test
pop
enter
mov
sahf
cmp
shlb
call
stc
out
movsl
dec
add
sarl
outsb
inc
mov
fstpt
lcall
push
push
push
rcl
jb
sti
stc
mov
out
mov
dec
xor
addr16
repz
sub
or
dec
cmp
incb
xchg
addr16
sbb
fdivl
in
das
or
paddb
push
dec
mov
es
addr16
cmc
sbb
test
sbb
loopne
aaa
sbb
add
movsb
xchg
arpl
daa
jp
push
imul
movq
xchg
add
int3
aaa
movb
fsts
insl
popa
push
and
push
mov
jae
daa
inc
lret
pop
inc
lock
sbbb
inc
jno
mov
fwait
jns
dec
cmp
or
pusha
pop
mov
aam
sub
lret
sbb
xchg
mov
xor
adc
mov
cmp
stos
or
xchg
dec
pop
mov
mov
movsb
and
in
jecxz
cltd
imul
movsb
pusha
sbb
add
pop
adc
je
and
test
cmpl
stc
test
mov
test
daa
das
fstpt
cmc
popa
imul
and
and
inc
adc
orl
lret
es
sbb
or
dec
gs
test
jno
jle
nop
js
dec
in
ja
dec
jns
stc
xchg
sbb
inc
push
je
add
dec
jl
mov
cmpsb
or
lods
push
xor
mov
cmp
fnsave
adc
out
callw
xchg
xorb
add
pusha
pop
mov
jno
addr16
repnz
lcall
or
or
lcallw
popa
inc
jbe
hlt
imul
lcall
sbb
pop
dec
xchg
cmp
or
add
push
pop
xor
mov
mov
pop
arpl
lcall
pop
aad
mov
js
imul
out
lahf
roll
push
ficoms
jns
jp
cmp
xor
or
mov
stc
cli
sbbl
cmp
sbb
shlb
xor
cmp
mov
sub
or
out
lret
rcrl
or
mov
cmp
movsl
push
dec
xorl
pop
mov
mov
std
rcrl
aas
mov
addr16
lahf
mov
dec
jne
stos
ss
addr16
test
push
repnz
xchg
inc
outsb
loopne
out
xchg
inc
in
test
fcoml
cmp
sub
sbb
jo
xchg
add
pop
leave
jecxz
pop
loopne
and
cltd
add
imul
mov
mov
in
loope
jo
dec
cmc
fidivl
jecxz
adc
enter
pop
adc
cwtl
push
push
popa
and
pop
rep
mov
inc
xor
mov
push
jl
clc
sbb
in
sub
daa
ljmp
daa
inc
cs
add
xchg
mov
mov
mov
xchg
sarb
mov
mov
mov
xchg
test
xchg
pop
and
in
shr
jl
out
nop
pop
mov
sub
enter
cltd
pop
xlat
fprem
inc
in
test
pushf
cmc
inc
divl
rep
arpl
cmp
or
fists
adc
xor
hlt
xor
sar
dec
lcall
loope
sbb
jns
jb
fwait
rcl
aad
push
sub
add
cld
aad
xchg
pop
push
and
pop
mov
popa
pop
js
sbb
jp
xor
mov
cmp
enter
into
xchg
xor
add
test
lea
in
outsl
rcr
popf
ret
imull
cld
cmp
jecxz
out
pusha
call
mov
popf
push
lea
jg
or
pop
add
ja
sub
addr16
sahf
xchg
divl
cmp
or
ja
cmpsl
addb
fistpl
loopne
mov
es
mov
in
xorl
out
add
cmp
subb
mov
pop
xor
outsb
pop
and
into
popa
cmp
jbe
pop
outsl
jecxz
jae
xor
dec
xchg
shll
xchg
mov
hlt
push
enter
pop
bound
movsb
paddb
cmc
jbe
loopne
lret
and
jg
test
dec
insb
cmpsl
mov
sbb
push
mov
xchg
cmp
sbb
in
repz
or
test
jp
das
push
pop
xchg
xor
das
push
and
jb
push
in
data16
pop
and
pop
and
lock
jge
xchg
mov
mov
add
mov
jg
push
lret
mov
repz
mov
fldcw
das
cmp
sub
xchg
and
popa
rorl
sub
jae
aam
lea
adc
pop
add
cmpsb
pop
sub
xchg
xchg
cltd
in
adc
cmp
in
mov
push
sub
push
test
mov
std
andl
cmp
scas
es
xor
ret
fstpl
cmp
cli
pop
lahf
adc
push
adc
mov
add
stos
decb
xor
fwait
std
pop
lods
ljmp
xchg
sti
fisttps
andb
pop
mov
lods
popa
lret
fmull
inc
push
cmc
lret
and
jae
dec
ds
rorb
sbb
jne
xor
or
xchg
add
sbb
push
pop
ffreep
fdivl
or
mov
xchg
pop
lret
pop
fildll
or
cmp
fsub
in
arpl
popa
repz
icebp
popa
cmp
mov
push
test
outsl
push
inc
or
cmc
pop
loope
pop
aaa
jne
enter
push
inc
call
outsl
sub
xor
addl
dec
mov
in
insb
ficoml
pop
sub
cmpsl
sub
inc
dec
aam
inc
jmp
roll
jg
mov
or
push
ja
jp
cs
mov
sub
fdivl
dec
sarl
int3
sahf
fs
out
xchg
xchg
push
pop
outsl
out
adc
mov
in
movsb
iret
and
dec
lock
pop
movsl
xor
in
test
mov
xchg
sub
in
xchg
aam
sub
mov
mov
pop
fimuls
shrl
sahf
int3
push
loop
pop
into
or
cmp
jg
test
cld
loope
hlt
icebp
jne
js
dec
inc
xor
sahf
pop
jnp
daa
popf
sub
sub
imul
scas
enter
xor
divl
iret
push
xchg
and
fs
movb
push
jo
cwtl
stc
pop
mov
mov
lock
dec
and
adc
ds
sub
mov
aas
mov
jmp
lcall
les
sbb
mov
push
aam
clc
cld
pop
int
inc
dec
push
add
adc
sti
add
cmpsb
lock
xlat
cltd
add
pushf
fistps
mov
jne
inc
lret
push
sti
fwait
clc
jle
and
cmpsb
scas
aas
lds
mov
lds
cmc
in
jle
and
out
add
xchg
into
fwait
movl
cmpsb
test
dec
popf
xor
outsl
adcb
ja
inc
inc
sbb
fdivl
adc
das
pop
add
cmp
ja
dec
xor
clc
insl
ljmp
cli
cmp
mov
arpl
dec
dec
fdivl
sarb
fdivl
pop
sahf
mov
xor
mov
fisubrl
stc
sti
jecxz
repnz
add
orb
cmp
scas
push
mov
push
in
stos
push
cmpsl
imulb
sahf
inc
mov
fwait
or
int
or
lods
xchg
and
test
aas
pop
into
int
add
mov
ja
movb
pop
xchg
mov
out
les
pop
and
cmp
xchg
inc
mov
jo
out
add
je
push
xor
jge
out
dec
outsl
in
mov
cmpsl
jl
out
xlat
dec
ljmp
pop
dec
add
and
stc
push
add
adc
das
mov
dec
sahf
jno
sbb
add
icebp
jae
sbb
mov
mov
fdivrl
or
scas
and
and
jnp
cmp
or
push
mov
push
sbb
ret
jge
jnp
and
lret
or
out
sub
cmpsl
inc
out
push
cmpsb
aas
jns
push
adc
inc
scas
jle
or
mov
or
inc
fadds
dec
sbb
pop
push
or
fdivp
xor
add
or
inc
mov
call
cltd
stos
or
cs
shll
loopne
xchg
xchg
test
and
out
ds
push
popf
rcr
push
push
mov
mov
xchg
in
push
fs
arpl
pushf
scas
push
mov
push
mov
lret
movsb
xor
out
sti
xor
xlat
pop
mov
imul
sub
mov
lds
mov
bound
notb
push
dec
mov
in
aas
push
add
je
lcall
ret
fptan
addl
in
or
shr
loopne
clc
mov
mov
in
mov
dec
gs
cld
cli
mov
pop
xchg
xchg
mov
xlat
aad
add
out
xor
je
das
test
hlt
stos
cmc
mov
ficoms
adc
sbb
testl
cmp
xchg
into
add
lock
mov
mov
aaa
mov
sbb
fwait
fwait
xchg
adc
push
arpl
inc
leave
jno
mov
mov
mov
movsl
cmp
cli
scas
lods
cld
incl
jo
lcall
fsts
add
test
movsb
jne
in
fcomip
das
xor
mov
pop
js
mov
outsl
mov
into
jle
add
sti
rcll
stos
inc
inc
cmp
int
push
clc
imul
test
adc
xchg
nop
xchg
sub
lock
adc
rcrl
insb
pushf
pop
sbb
test
xor
xlat
movb
and
dec
sbb
adcl
js
faddp
cmp
xchg
jmp
mov
sbb
push
rcrb
inc
push
fmull
std
icebp
adc
fidivrl
aas
sub
inc
fs
stos
adc
xlat
out
ja
cs
movsb
adc
push
push
inc
dec
insb
mov
scas
xchg
xchg
jae
loopne
fisttps
xor
jp
sbb
mov
inc
cmp
cmp
andb
push
xchg
fwait
les
fstps
pop
sbb
out
jno
ljmp
rcr
and
in
js
jne
data16
out
dec
rcll
lock
add
push
sub
add
inc
adc
in
lret
cmpxchg
add
arpl
jecxz
xor
push
imul
rolb
sbb
pop
dec
out
dec
pop
jno
xchg
xchg
fmuls
push
pushf
stc
dec
mov
les
icebp
mov
xchg
pop
je
jnp
push
mov
imul
ljmp
lods
jno
fiaddl
fmuls
faddl
push
jle
pop
cmp
in
sahf
pop
mov
add
xlat
mov
pop
sub
into
push
mov
jp
add
in
jo
dec
sbb
pop
xchg
mov
add
cld
repz
nop
dec
dec
sbb
shlb
mov
cmp
movlps
jo
ja
jp
test
cmp
mov
push
cmp
and
jg
testb
mov
jb
aad
jnp
jmp
into
cmpb
ljmp
jno
pop
lret
sbb
xor
xchg
popa
pop
rcll
pop
pop
cmp
ror
pop
adc
out
cmpsl
and
dec
arpl
inc
sub
xchg
jns
lods
test
xchg
sahf
adc
mov
xchg
cmpl
enter
adc
inc
cs
jbe
inc
test
cs
arpl
je
inc
pop
bound
fldcw
clc
lock
adc
jmp
xchg
hlt
std
repz
cmp
addr16
into
dec
pop
insb
addb
lahf
gs
jge
jno
inc
cmpsl
and
imul
xchg
test
leave
xchg
iret
fadd
and
shlb
inc
inc
in
fs
and
dec
fnsave
rcr
xor
push
inc
sahf
test
std
std
or
xchg
jo
int3
aas
sti
xchg
lret
inc
adc
adc
xorb
lock
mov
pop
ret
pop
adc
mov
lret
add
push
inc
inc
mov
dec
xchg
mov
cmp
jge
cmpsl
mov
mov
mov
jl
iret
inc
add
mov
outsb
add
add
sarb
lods
sbb
sbbb
xchg
pop
add
movsl
or
loopne
push
push
and
test
scas
and
mov
push
stos
arpl
mov
rorb
mov
and
mov
cs
ljmp
int
jle
lcall
mov
push
psubsw
bound
lock
adc
stos
imul
mov
push
xor
xor
movsb
jns
out
add
add
mov
insl
pop
aas
orl
mov
or
arpl
mov
incb
daa
and
add
ret
int3
push
lret
adc
fnstenv
add
into
fwait
in
cld
and
push
shlb
mov
push
adc
mov
sbb
xchg
clc
enter
aas
mov
test
scas
xchg
rcll
lods
inc
cwtl
sarb
xor
xor
mov
pop
push
loop
xchg
insl
xor
lock
or
sbb
lret
fbstp
call
addb
add
stc
mov
test
jo
dec
movsl
inc
xor
dec
xchg
dec
loope
movsl
ret
loop
jno
mov
cmp
test
add
push
or
fistpll
dec
dec
mov
out
mov
pushf
xchg
jae
or
lods
aad
mul
jnp
jmp
pusha
push
lret
stc
dec
aas
inc
out
ja,pn
jns
nop
xchg
mov
push
xchg
scas
jbe
pop
repz
cmpsb
insl
cmc
dec
inc
iret
arpl
gs
add
nop
adc
es
push
addr16
out
sbb
arpl
loope
add
or
sbb
fisttps
inc
mov
icebp
lods
idiv
ret
in
jns
and
jge
sub
cmp
jae
xchg
sub
mov
call
out
xchg
cmp
mov
sub
or
pusha
xchg
mov
or
daa
popa
mov
push
sbb
mov
scas
stc
mov
mov
dec
movsb
add
mov
or
pop
shll
les
inc
loopne
cmp
dec
iret
aas
fldl
push
js
in
cli
pop
sub
pop
mov
and
push
sub
or
sbb
push
stos
and
mov
sub
inc
mov
xchg
aam
or
fldl2t
mov
push
mov
stos
adc
repnz
imul
push
sub
shl
das
fdivr
cmp
pop
dec
insl
stos
cmpsb
loope
movsl
pop
sub
dec
pop
xchg
adc
aaa
lcall
inc
cwtl
mov
adc
dec
arpl
cli
mov
pop
mov
xor
cmp
rorl
adc
movsb
cltd
mov
imul
mov
shll
jmp
repnz
shlb
fwait
and
jmp
mov
lret
int
xchg
orl
and
cmp
or
daa
xchg
sti
mov
lods
loopne
push
mov
movsl
add
or
jo
icebp
jmp
mov
jmp
arpl
addr16
movsl
imul
in
testb
out
int
test
outsl
roll
adc
iret
dec
xchg
cmc
ret
sbb
ret
aas
sub
outsb
scas
mov
data16
sub
sbb
andl
mov
cmp
mov
lods
test
xor
xchg
insl
sub
mov
jge
jl
stos
or
sub
inc
cmp
inc
notb
jge
sbb
xchg
dec
mov
or
push
dec
movsb
mov
inc
std
insb
insl
mov
test
mov
pop
les
sbb
sub
pop
inc
sub
pop
xor
insb
jge
imul
ret
int
cmp
lds
jae
cmp
mov
mov
pop
sub
pop
call
mov
or
adc
aam
xlat
dec
cltd
or
push
cmp
jmpw
adc
and
xchg
adc
adc
insb
insl
add
nop
rclb
push
jmp
mov
inc
and
add
or
clc
or
xor
lea
push
es
pop
inc
cltd
sbb
scas
outsl
lods
fldcw
cmp
jno
dec
rorb
xchg
push
mov
jl
dec
scas
fwait
aas
cmpb
inc
loope
aad
fisubs
std
xchg
adc
cmp
pop
mov
and
push
xor
adc
dec
ffree
push
dec
sbb
push
rcll
out
mov
scas
into
rcr
mov
mov
push
dec
inc
in
jo
jle
stos
shrb
stos
push
out
stc
fs
ja
inc
or
and
xor
movsb
cmp
pop
sub
mov
and
add
loop
daa
popa
mov
out
push
pop
mov
mov
xor
jno
xchg
int
or
adc
dec
cmp
incl
push
iret
sti
adc
sub
imul
int
add
mov
in
push
ja
stos
or
mov
mov
daa
mov
mov
cmp
dec
mov
js
jp
sub
sbb
ret
lahf
lods
adc
push
mov
data16
mov
aas
adc
cmp
inc
sarb
and
or
stos
sub
call
cmp
or
mov
jo
pop
sbb
xlat
mov
addl
jnp
bound
inc
outsl
mov
popf
xchg
cmp
dec
mov
enter
inc
mov
je
call
rorl
xor
popa
mov
sub
mov
mov
cwtl
adc
out
sub
mov
mov
mov
jge
popf
pop
ret
sbb
ss
int
dec
test
or
xor
fbld
push
jl
jp
xor
xor
inc
stc
mov
adc
or
stos
push
xchg
xor
inc
push
test
add
mov
cmp
cli
cmp
dec
push
inc
and
or
gs
in
addr16
push
fists
push
imul
mov
xor
outsb
dec
inc
out
mov
cmpsb
imul
push
inc
sub
mov
addr16
arpl
bound
pop
ret
bound
into
lods
fildll
aaa
filds
jl
rclb
in
xchg
ja
bound
fsubrs
adc
ficoml
fnstsw
cltd
in
andb
adc
mov
or
adc
iret
test
lods
adcl
push
mov
mov
sti
push
stos
xlat
jo
enter
cmp
jmp
cmp
xorb
push
addr16
movsb
dec
bound
sbbb
pop
mov
dec
jno
call
inc
cli
cmp
jp
imul
mov
or
cli
mov
fdivrs
xchg
ds
shr
fst
out
adc
mov
sbb
cli
addr16
popf
call
rorb
popa
sub
mov
pushf
mov
or
pop
mov
jns
push
dec
adc
or
inc
jnp
les
sub
sahf
out
aad
rep
dec
jp
jmp
enter
add
shl
and
shrl
mov
push
inc
fiadds
shrl
idivl
pop
test
clc
ss
invd
mov
mull
adc
fimuls
test
mov
loopne
cmp
fiaddl
in
cmpsb
insl
xor
push
mov
cmp
jmp
xchg
sti
ja
add
sub
loope
cmpsl
sbb
out
jmp
or
cmpb
test
or
inc
inc
lds
ret
lods
adc
insl
jno
and
jns
adc
gs
je
ret
ficoms
rolb
mov
cmp
mov
push
les
jo
iret
adc
je
xor
fnstsw
mov
movsb
pop
mov
pushf
fsub
test
push
mov
mov
aas
cli
mov
xor
xchg
xchg
mov
or
psubd
mov
jge
push
or
xchg
lcall
jge
cmp
fstp
aad
mov
mov
xchg
mov
xchg
mov
into
mov
pop
sbb
inc
xor
jmp
push
mov
sub
pop
xchg
xor
aam
and
mov
pop
lock
add
pop
jg
test
sbb
jns
mov
loopne
outsl
fwait
inc
cmc
aad
mov
sbb
dec
add
fisubl
add
les
mov
arpl
fimull
push
repnz
jg
cld
dec
sub
shr
mov
mov
stos
lods
mov
sbb
dec
stos
mov
in
dec
cld
popf
sti
push
push
push
lret
add
inc
mov
cmpb
movsl
shlb
or
xor
mov
sub
idivb
adc
movsl
xlat
mov
pop
inc
sub
filds
xchg
sub
lods
pushf
ret
addr16
sbb
mov
sub
mov
loope
pop
add
fidivl
adc
adcl
imul
sub
notl
jecxz
arpl
loope
add
addb
pop
jle
movsb
bound
mov
xchg
test
push
sbb
cli
mov
sbb
lods
js
repnz
mov
std
push
sbb
xor
inc
fmull
out
out
cmp
test
push
daa
in
mov
xor
mov
das
subb
jp
dec
jmp
pop
mov
mov
fcmovnb
cs
aam
icebp
push
orb
loopne
xorl
stos
leave
sbbl
repnz
push
pop
mov
mov
pop
stc
repnz
ds
xor
je
mov
into
xor
fadd
insb
pop
and
inc
xor
dec
inc
or
das
ja
jne
push
pop
xchg
and
xor
sbb
insb
jg
es
or
stc
mulb
fst
mov
jb
jae
push
popf
cmpsb
movsl
notl
sbb
xor
add
xor
cmp
int
push
sub
add
sarb
std
es
xchg
jo
nop
shlb
or
inc
test
test
mov
in
or
rcr
adc
roll
xchg
fdivs
enter
lds
loope
adc
mov
and
data16
loopne
out
daa
stc
and
xor
imul
push
or
out
and
cmp
lahf
sub
sub
mov
and
out
pop
in
dec
mov
lret
add
xor
mov
scas
inc
in
scas
shr
ljmp
push
and
mov
xor
push
push
mov
dec
fwait
movsb
popa
pop
push
cmp
xor
jg
push
xor
lahf
sbb
cmpsb
pop
mov
mov
dec
repnz
call
push
jns
lods
repnz
xchg
xchg
movsb
ficompl
dec
mov
add
decl
cmp
xor
lods
roll
fmul
dec
fmuls
int
mov
mov
ficompl
sbb
sbb
mov
push
cmovge
or
mov
xorl
pop
or
xchg
repnz
push
pop
je
xor
jmp
jge
add
mov
mov
loopne
pop
stc
xor
into
ret
cli
es
push
cmpsl
shrb
into
mov
jb
out
or
pop
xchg
adc
cmpsl
mov
sti
test
adc
sub
mul
push
add
push
xchg
inc
xchg
mov
dec
xor
aam
add
mov
cmp
inc
jp
jecxz
jmp
jl
scas
aas
pushf
ja
enter
aaa
push
jl
inc
pop
int
mov
jo
shr
popf
mov
cwtl
shlb
or
xchg
inc
sub
imul
lds
push
push
gs
cmpsl
test
pop
xor
js
mov
jne
jp
pop
arpl
ljmp
lods
cmovnp
mov
push
xlat
mov
and
dec
add
cmp
mov
xchg
lret
sbb
rolb
mov
sub
mov
int
push
vpsubq
jo
push
xor
and
imul
andl
cli
or
mov
lret
mov
insl
pop
icebp
cmp
and
das
or
out
sbb
dec
fisttpll
xor
out
and
aad
fdivrl
std
xlat
aaa
maskmovq
mull
push
or
adc
fisttps
push
push
add
or
push
mov
push
push
jge
xlat
dec
dec
les
cmp
rorb
xchg
jmp
add
push
fwait
ja
sbb
pop
xchg
adc
jns
lcall
shrl
in
int3
int3
push
push
pop
mov
outsl
movsb
mov
push
and
sbb
push
pop
mov
cwtl
push
cmc
and
stc
pushf
das
sti
add
pop
xor
xchg
rcll
lret
inc
xchg
mov
sar
icebp
enter
rorb
std
mov
callw
xor
xchg
jmp
push
jmp
xchg
inc
jp
das
je
cmp
rorl
pushf
and
mov
out
jno
out
inc
mov
push
mov
jg
or
popf
es
stos
fwait
and
jo
add
test
cli
cmp
sbb
xchg
push
div
inc
or
jecxz
mov
pusha
and
pop
fbstp
add
or
test
int
aas
and
ljmp
loop
jae
rcl
xor
push
push
cwtl
mov
nop
les
add
orl
jns
push
add
cltd
sbb
gs
nop
mov
jns
fnstcw
cld
dec
ret
sub
mov
xchg
cld
and
inc
inc
imul
cmp
mov
xchg
outsl
cmpsb
add
rcl
inc
adc
dec
rorl
push
fisubrl
cs
xor
inc
outsb
push
mov
rclb
flds
mov
out
sti
xor
ss
sub
jge
pop
sbb
sub
fcom
fstpl
into
xor
push
or
loope
scas
das
adc
pop
xchg
xchg
push
rolb
loop
mov
repnz
lahf
rolb
test
imul
imul
jb
mov
sbb
outsb
adc
cld
mov
mov
and
push
jg
mov
popa
adc
mov
push
xor
mov
addr16
push
jp
sub
cmp
nop
lret
push
mov
mov
aam
fisubrl
sbb
sti
cmp
mov
cmp
xchg
mov
pop
push
pop
int3
ss
xchg
shrb
push
les
decb
jb
jno
sarb
sbb
lods
imull
icebp
jp
test
sub
add
xchg
or
ljmp
pop
jno
cmp
and
ret
sbb
pop
dec
sti
addl
aad
aas
enter
popa
aas
hlt
insl
jae
adc
mov
cmpsl
pop
xchg
test
fstpt
repnz
adc
mov
pop
mov
mov
jb
xchg
bound
sbb
or
cmp
cs
xor
jmp
dec
push
sub
stos
outsl
mov
pop
fisttpl
clc
stos
jae
sbb
or
adc
xchg
cmpsb
mov
add
test
mov
fisttpll
or
mov
mov
cmc
lock
mov
insl
pop
pusha
pop
jp
or
fsubl
int3
les
cmpsb
dec
outsb
sbb
rcl
nop
lock
loop
enter
lods
mov
mov
jge
fldlg2
stos
and
aad
inc
mov
rorb
gs
xchg
jle
ja
mov
imul
addr16
call
jmp
es
mov
adc
xor
jg
xchg
std
insl
repz
nop
cmp
and
push
std
jl
lea
lock
and
cli
imul
push
adc
fmuls
mov
enter
pop
pop
xchg
loop
outsb
and
pusha
add
lcall
push
cmp
adc
addr16
add
pop
xchg
js
xor
pop
dec
dec
cltd
push
movsb
rclb
mov
xchg
dec
add
cs
dec
or
enter
aam
xor
push
icebp
jns
cli
push
jbe
in
cs
jmp
adc
out
mov
dec
movsb
push
xor
add
clc
mov
in
nop
mov
and
xchg
ja
inc
mov
mov
xchg
subl
aam
or
ss
jbe
jne
leave
mov
imul
sbb
xchg
mov
sti
frstor
sbb
mov
push
clc
xchg
in
cmc
test
loopne
xor
cmpsl
enter
xor
cmp
into
pop
sub
sub
mov
aas
xor
imul
out
xor
enter
jns
push
pop
add
rorl
popl
scas
vmwrite
pop
xchg
pop
and
xchg
fildll
xchg
fwait
sub
data16
test
jge
inc
cmp
fwait
push
mov
out
out
icebp
dec
lock
pop
imul
sbb
ret
xchg
jle
dec
fdiv
mov
mov
int
sub
mov
imul
call
cmp
adc
push
loopne
ljmp
and
sahf
out
rorb
push
jle
incb
mov
aas
or
test
ds
insb
repz
ss
lahf
xor
xor
mov
cmp
jl
repz
jns
mov
xchg
sub
xlat
mov
add
cmp
xchg
push
dec
xor
xchg
sbb
adc
mov
mov
xchg
bound
push
dec
int3
xor
in
ds
mov
inc
push
inc
hlt
adc
dec
fsubrp
jp
shl
mov
or
roll
and
sbb
ffree
xchg
mov
mov
adc
push
mov
cmpsb
pop
scas
cmp
cwtl
inc
adc
daa
aam
call
leave
gs
jb
push
data16
rolb
cmpsl
push
mov
dec
insl
pop
mov
cli
push
xor
push
dec
mov
dec
ss
insb
out
cld
cmc
or
imul
out
into
sbb
in
stos
sti
dec
or
sbb
in
fwait
mov
fldcw
sub
pop
outsl
mov
push
pop
into
test
pop
sbb
enter
and
jbe
testl
and
ret
sub
or
insl
inc
and
js
mov
and
call
scas
mov
sub
jne
lret
repz
cmp
cmpsl
mov
fistpll
add
mov
notb
and
pop
and
mov
daa
insb
mov
and
inc
and
in
push
ret
xor
xchg
sti
aam
punpcklbw
push
sbb
cmp
sbb
mov
jge
xor
fmuls
add
xchg
pop
xchg
push
rolb
stc
insb
adc
cwtl
iret
movsb
mov
data16
outsl
loop
sti
xor
mov
jnp
mov
xchg
movsb
or
jp
jnp
shll
movsb
and
adc
mov
xchg
jo
push
inc
pop
sbb
fists
out
in
add
or
faddl
push
xchg
add
sbb
in
inc
int
push
lret
xchg
sub
jne
cmp
jne
xor
leave
punpckldq
repnz
idivb
inc
ss
lods
cmp
jnp
rcl
pop
repnz
fcoms
ret
hlt
aam
xchg
addr16
faddl
test
pop
in
xchg
pop
push
mov
cltd
or
mov
imul
fiadds
int
call
pop
inc
insl
dec
sbb
ret
out
sbbb
cmp
jbe
or
nop
nop
scas
ret
or
cmpb
in
xor
or
sbb
cs
shrl
push
std
subb
roll
inc
scas
add
mull
pop
addr16
ret
fldcw
jno
push
lods
int
pop
ret
outsb
jne
mov
imul
movl
dec
sbb
sbb
inc
fnsave
insb
nop
outsb
push
jp
and
gs
mov
cmpl
and
inc
cmp
insb
enter
jg
xor
jmp
push
lock
cmp
mov
push
ret
mov
out
mov
mov
in
xor
test
movsl
test
rcl
push
cmc
mov
fwait
es
sahf
push
push
lds
mov
ja
cmc
je
push
mov
pop
cmp
clc
mov
call
or
jbe
push
loop
dec
cmp
jo
pusha
mov
pop
lcall
sub
mov
dec
push
ret
dec
in
aad
adc
jecxz
or
pop
jae
mov
jb
and
std
push
dec
adc
int3
hlt
xor
push
jae
in
lcall
int3
xor
inc
xchg
xlat
out
sti
add
or
movsl
int3
dec
outsb
popa
mov
push
inc
xchg
sub
movl
test
ss
mov
and
mov
call
jmp
scas
inc
int
inc
mov
inc
fbstp
sbb
xchg
mov
adc
stos
push
movsb
rorl
sbb
pop
sbb
jecxz
pop
outsl
popf
push
jge
mov
mov
outsl
gs
fdivs
aas
cmc
es
roll
and
test
dec
dec
scas
push
or
and
push
push
jl
xchg
in
fisubl
int
out
push
aam
pop
fnstsw
mov
cmp
fistpl
jo
clc
test
jo
adc
sub
cmp
aam
popf
int3
push
frstor
sahf
in
mov
sub
loop
jae
mov
push
sbb
inc
jmp
lds
andb
jle
add
dec
add
and
push
cmp
repz
jbe
add
mov
add
aam
mov
or
imul
div
or
pop
jg
cmp
sbb
sbb
adc
sub
arpl
mov
pop
jns
lret
inc
sub
mov
jno
adc
fnsave
mov
pop
xor
jns
push
mov
or
pushf
adcb
popa
mov
insl
sub
sub
sub
cmp
jl
or
stc
inc
mov
pusha
movsb
and
jno
add
fcomp
mov
pcmpeqb
xor
or
sub
push
out
out
inc
mov
xor
pop
pop
dec
es
jp
cmc
lea
pop
or
add
pop
outsb
nop
shll
sahf
push
or
das
xchg
bound
shll
mov
outsl
loop
xchg
jno
js
pop
aam
leave
rep
bound
mov
movsb
inc
xor
dec
adc
mov
mov
add
xchg
xor
jp
pop
adc
mov
sub
cmp
inc
mov
mov
lea
or
and
push
mov
mov
sub
adc
sub
lret
sub
in
test
dec
ret
aas
enter
mov
movsb
jns
mov
sti
push
sub
xor
out
sbb
push
stos
sub
add
cmp
das
inc
imul
sub
lods
mov
pop
push
lea
scas
mov
repz
or
jnp
or
mov
into
mov
pop
sbb
movq
or
inc
and
add
mov
adc
mov
shll
xor
push
mov
add
rcrb
pushf
mov
dec
jmp
xchg
push
adc
add
mov
pushf
fsub
sbb
xchg
push
aam
dec
push
sub
aaa
cmp
sbb
js
push
mov
std
test
mov
mov
test
loopne
mov
dec
mov
add
incl
scas
fisubrs
loopne
aad
cs
mov
pop
add
xchg
cltd
push
mov
movb
mov
repz
fcoms
outsl
call
xor
inc
push
int
add
sbb
jb
dec
lock
in
mov
pop
or
inc
insl
shlb
sarl
lock
jecxz
out
mov
lea
sbb
lcall
inc
sub
fisubl
adc
adc
sbb
mov
scas
icebp
cmpsl
xchg
or
sti
je
xchg
das
xor
popa
pop
and
inc
ret
jg
xchg
iret
fdivr
stc
inc
and
mov
ds
xor
fisubs
sub
xchg
pop
jns
push
and
cmpsl
and
js
jg
rorb
test
pop
mov
and
push
inc
inc
ret
push
or
adc
inc
cli
aad
repnz
out
andl
aam
or
out
rclb
xchg
and
fidivs
call
pop
xor
fstpl
push
dec
mov
ja
or
ja
adc
jae
push
mov
std
arpl
pop
into
mov
sarl
out
push
ljmp
fucom
lahf
dec
cmp
rcll
lds
jp
dec
mov
push
add
ds
push
movsb
jl
dec
sti
in
repnz
inc
mov
popl
test
and
mov
push
dec
cs
xchg
daa
xor
cmp
shll
adc
mov
add
add
push
jge
pop
sub
cmp
push
in
int
cmp
enter
pushf
js
pop
push
inc
outsb
inc
and
pop
and
mov
subb
movb
push
pop
xchg
mov
sub
push
rclb
and
insl
rclb
in
fs
adc
jmp
outsl
aaa
mov
and
cltd
lods
aad
ljmp
mov
sarb
inc
mov
xchg
inc
mov
shlb
jmp
sbb
jmp
mov
out
or
and
les
xchg
ret
sub
outsb
pop
cmc
lock
lods
dec
mov
mov
and
arpl
fadds
clc
mov
mov
pop
shlb
cmp
mov
dec
cmpsl
insb
push
sbb
rolb
xchg
pop
jnp
add
inc
mov
enter
add
mov
fiaddl
xor
ljmp
cmp
mov
or
or
jns
inc
iret
sahf
sub
jg
mov
dec
jle
dec
sti
loopne
xor
dec
adc
xor
dec
out
insl
ljmp
pusha
lcall
xor
faddl
test
imul
test
test
mov
mov
ficompl
mov
lock
push
add
js
sahf
lret
test
and
pop
jae
fdivl
outsb
jp
stos
stos
ds
cmp
imul
add
fisubl
iret
jl
loopne
lea
es
mov
push
xor
aaa
fisubrs
ds
mov
push
mov
ja
push
inc
push
fbstp
add
incl
jmp
push
and
out
and
sbbb
mov
int3
mov
rorb
call
out
rolb
mov
xor
ss
mov
push
sbb
ds
xchg
popf
fucomp
jge
add
mov
lcall
cmp
das
fisttps
mov
mov
ja
mov
xlat
jns
rolb
dec
push
ficoms
dec
cmpsl
movsb
pop
xchg
insl
jns
mov
or
add
lods
sbb
shlb
pop
mov
ljmp
xchg
cmp
insl
and
jge
dec
cmp
lret
imul
xchg
int3
push
shrb
adc
cmp
pop
les
inc
shr
repz
movsb
ds
sar
les
xchg
mov
jecxz
mov
ds
popf
mov
test
lock
sub
shlb
push
xchg
sbb
fidivs
cld
cmp
and
incl
lret
push
sub
movsb
push
add
jno
adc
xchg
push
movsb
mov
cltd
data16
scas
xor
xlat
or
ret
shlb
dec
cwtl
pop
mov
shrl
test
repnz
or
imul
aam
fmuls
push
mov
in
outsl
cwtl
popf
xchg
add
inc
inc
mov
cmp
dec
sbb
das
sbb
and
fsubp
pop
and
inc
out
jno
fdiv
or
mov
stos
das
dec
lock
loope
mov
cs
fldenv
xchg
push
add
dec
dec
mov
add
mov
out
mov
jo
sti
and
icebp
enter
ror
insl
dec
xor
arpl
ret
iret
jns
jmp
andb
jnp
clc
pop
lret
test
dec
pusha
adc
in
fidivrs
jg
pop
out
es
imul
movsl
lahf
add
xchg
inc
shl
into
sub
mov
inc
pop
inc
jno
xor
jno
std
into
in
xor
pushf
mov
les
aas
and
testl
push
cli
sbbb
ret
xchg
jge
ljmp
and
xchg
leave
inc
push
in
jg
push
push
roll
imul
stos
iret
jmp
popf
push
xor
ds
xchg
mov
rcrl
stc
mov
xabort
jecxz
lret
cld
and
jge
mov
xor
mov
mov
incl
pop
adc
sti
fisttpll
jbe
cmc
jl
lcall
push
stos
sbb
repnz
push
subb
loopne
arpl
lods
mov
adc
mulb
in
out
fwait
lea
lahf
xchg
or
aad
xor
mov
int
cmp
sti
ucomiss
subl
outsl
jmp
subl
xlat
in
push
sbb
ss
test
out
mov
rol
repnz
xor
pop
ret
jo
lods
and
pop
add
pop
mov
jl
sbb
test
sbb
sbb
sub
pop
mov
xchg
sub
das
mov
sub
add
mov
aad
cmpsb
loopne
cmp
outsb
pusha
add
mov
sub
and
sbb
stos
test
xor
mov
and
arpl
or
jno
xchg
or
pop
cmp
cmpsb
shrb
mov
xor
dec
hlt
inc
sub
mov
movsw
xchg
mov
mov
pop
mov
inc
insb
pop
scas
pop
or
flds
cmp
mov
ljmp
push
aam
push
lahf
jl
xchg
mov
mov
shlb
mov
jo
inc
inc
imul
sti
adc
mov
out
call
mov
xor
xchg
cmp
lods
ja,pn
mov
dec
arpl
and
in
inc
lret
lret
out
outsl
mov
pop
push
pop
push
rcrb
and
ret
cmp
nop
adc
mov
mov
xchg
stc
je
jl
add
push
das
cmp
sub
js
dec
rorw
sbb
cmp
gs
xchg
sbb
dec
mov
inc
or
xor
lahf
flds
jb
and
imul
push
mov
icebp
nop
cmp
push
and
inc
mov
xchg
dec
stos
mov
adc
sub
imul
std
std
mov
mov
pushf
mov
divl
adcb
sbb
test
push
negb
sub
mov
or
dec
mov
imul
lret
in
mov
add
jae
sbb
fnstcw
in
dec
test
out
ret
nop
mov
adc
out
fs
mov
out
or
push
sub
fs
incb
mov
sub
or
rcrb
pushf
sti
mov
lods
dec
jb
pop
mov
or
shll
cmp
out
out
lods
test
dec
xor
adc
add
mov
daa
clc
fistl
lock
push
sub
andb
adc
std
cmpsl
scas
sbb
mov
add
lods
into
and
je
dec
ss
loopne
imul
test
sahf
push
pusha
scas
dec
mov
or
fnsave
sbb
sti
pop
mov
lea
sub
pop
jae
loope
sub
inc
add
xor
dec
mov
cmpsb
mov
stos
push
test
in
pop
arpl
das
jmp
out
orb
in
shlb
aad
cmp
loopne
xor
subl
sbb
push
mov
push
repnz
outsb
std
outsl
aas
rolb
lret
out
push
insl
cld
push
wrmsr
out
jg
std
xor
cli
inc
lret
push
test
sub
push
test
sbb
out
movsl
add
adc
jbe
dec
cmc
sbb
rcrb
test
rorb
push
sbb
hlt
stos
pop
movsb
and
and
jecxz
sbb
or
out
and
mov
dec
or
fdivrl
cmp
test
cs
add
dec
scas
shl
or
jne
mov
pop
addr16
movsb
xchg
dec
lret
call
stos
bound
sbbl
rcrl
or
dec
icebp
xchg
adc
addr16
add
jle
jge
or
push
mov
add
int3
push
lahf
leave
hlt
mov
jo
inc
adc
lret
dec
test
push
push
subb
push
jns
mov
cmpsl
test
jbe
jg
mov
subb
mov
ret
inc
add
jae
jbe
adc
push
sbb
add
lcall
push
lret
sub
rcrb
pop
mov
out
addb
jae
dec
icebp
jnp
out
pop
adc
mov
cmp
push
ja
mov
call
pushf
arpl
cmpsb
or
cmpsl
mov
stos
sub
cmp
out
les
adc
push
in
mov
mov
insl
test
sahf
jbe
sub
and
pop
stos
subb
sub
sbb
pusha
repz
lret
xchg
bound
cmp
lar
div
xchg
sub
dec
mov
xchg
cld
jl
push
insb
cmp
jg
xchg
in
add
loop
mov
inc
cmp
pop
sub
xor
pushl
cld
rcrb
jnp
push
push
mov
mov
inc
and
push
mov
xchg
clc
cmpsb
int
mov
pop
je
adc
xor
mov
mov
push
xor
cmp
movsb
fnsave
adc
fs
fmull
jg
and
jmp
pop
inc
mov
adc
sbb
out
leave
and
sub
clc
inc
cs
push
es
mov
and
rcrl
outsl
out
adc
shrb
dec
cs
test
or
cmp
std
test
mov
pop
dec
inc
push
aas
xor
xor
addr16
xchg
inc
cwtl
sbb
push
pop
test
cmp
aad
pop
stc
mov
add
cs
sub
es
jle
sbb
fwait
push
xor
dec
push
loop
xlat
pop
mov
jno
cmp
inc
dec
scas
sbb
push
dec
xchg
dec
movsb
repz
add
sbb
jb
cs
stc
jge
faddl
jno
daa
loop
cltd
in
rsm
lock
jbe
jb
inc
test
inc
push
inc
push
int3
push
fldt
xor
cmp
mov
addl
inc
ds
mov
push
dec
cmpsb
inc
or
stos
sbb
mov
mov
rcrb
inc
mov
push
push
cmc
xor
push
push
js
shlb
and
addr16
pop
inc
aad
in
cli
roll
icebp
stc
lods
mov
xchg
js
add
add
imul
add
pop
xor
sbb
jne
fistpll
cmp
ficoml
mov
popa
sysexit
fimull
mov
daa
ljmp
out
adc
cld
hlt
cmp
and
jg
sub
test
adc
xchg
mov
shlb
push
sbb
pop
jge
xchg
adc
repnz
and
and
in
jmp
loopne
mov
push
jae
sub
lock
mov
push
push
dec
in
or
sbb
fimull
mov
cmc
call
and
pop
mov
pop
dec
aam
addr16
gs
and
scas
ja
cmc
in
stc
mov
adc
pop
outsb
sarl
int3
xchg
test
in
cwtl
sarb
jmp
push
ja
outsl
loopne
loope
outsl
inc
shl
iret
xlat
pop
push
jns
repnz
insb
ss
xchg
push
xchg
aam
cmp
mov
pop
pusha
inc
ret
fidivrl
cmpsl
sub
out
shr
ret
push
xlat
cmp
repz
cmpsl
rol
fadds
movsb
and
loopne
repz
loopne
xor
shlb
push
or
aaa
das
fcompl
xchg
jbe
jmp
inc
pop
mov
xchg
push
xor
leave
jbe
mov
idivl
pop
or
cmpsl
adc
out
loop
rol
ds
rcll
xlat
and
push
mov
jnp
int3
fistl
imul
out
int
clc
sbb
loop
stc
pop
addl
sub
xlat
fmul
push
mov
test
rolb
gs
mulb
pop
out
sbb
add
dec
inc
pusha
aas
clc
in
xor
aam
sbb
cmpl
cmpsl
jne
adc
or
mov
out
pop
fwait
mov
lods
fdivr
push
repnz
mov
push
lods
imul
iret
loope
adc
subl
mov
mov
fucomip
sbbb
subb
dec
ja
test
sbb
mov
arpl
lods
insb
scas
pop
test
sbb
and
mov
fisubrs
pop
fstpt
mov
int3
jge
push
push
aad
mov
mov
adc
jle
imul
out
adc
lds
loop
xor
pop
loop
iret
das
mov
xchg
mov
iret
mov
jo
mov
mov
ss
faddl
mov
xor
xor
inc
add
cld
enter
sub
out
shll
xor
fbld
mov
inc
jo
lds
outsl
jae
int
pop
lret
xchg
cmpl
out
fwait
jnp
fwait
push
push
enter
sbb
insb
jne
fsubs
and
shlb
leave
jae
adc
int3
popf
and
or
mov
test
leave
pop
call
xor
sahf
add
data16
gs
push
int3
mov
jno
cli
clc
repnz
iret
adc
mov
xchg
xchg
lcall
mov
lea
btc
stos
cmpsb
add
pop
xor
push
fmuls
adc
jb
mov
cwtl
int
jecxz
push
push
pop
sarb
dec
rolb
outsb
mov
insb
and
stc
push
cmp
dec
aam
lods
mov
jle
jp
in
ret
jg
fisubs
push
fildll
ror
and
sbb
pushf
sub
sub
dec
and
in
adc
xor
or
inc
xor
adc
incb
insb
pop
pop
jnp
int
mov
out
dec
and
and
push
rorb
cmpsb
nop
or
push
push
lock
in
sub
andb
pop
stos
test
and
icebp
addr16
pop
and
movsl
repnz
int
cld
mov
add
xor
push
nop
lock
aam
xchg
das
push
push
sbb
je
in
cld
cmp
sub
mov
fisubrl
and
fidivrs
imul
jle
xchg
adc
xchg
ljmp
jb
in
arpl
repz
les
pop
mov
fisubrs
dec
hlt
orl
bound
cli
or
aam
sbb
ja
orb
adc
leave
aam
js
jmp
mov
mov
mov
rolb
mov
inc
out
fisubrl
push
rol
pop
int
inc
adc
push
vpaddd
cmp
mov
daa
mov
mov
ficomps
imul
sbb
test
jecxz
dec
adcb
mov
dec
sbb
cwtl
jne
mov
out
push
lock
pushf
das
aad
dec
mov
inc
out
out
dec
addl
xchg
cwtl
adc
aad
in
cmp
ljmp
adc
sub
add
movsb
insl
cmpsb
jmp
add
jp
cmpsb
cld
pop
push
jns
lret
in
fdivp
xor
out
out
xchg
in
push
mov
mov
or
sbb
jnp
adc
cmpsl
pop
mov
inc
lea
add
xchg
das
xor
jnp
lret
and
mov
fwait
popf
mov
aad
daa
stos
pop
xor
call
inc
arpl
jbe
ret
lcall
xchg
push
mov
push
pop
inc
dec
cli
ret
movsb
fsubrs
jbe
sbb
andl
sbb
lock
sbb
xchg
addr16
add
push
xchg
out
or
movsl
xchg
dec
adc
jb
scas
push
in
push
rclb
insl
jge
fcoms
and
daa
repz
mov
mov
in
cmp
lds
shlb
or
stos
mov
add
jno
pop
sub
cmpsb
sti
in
mov
out
cmp
loope
sti
mov
icebp
psrlq
pop
testl
test
test
fs
imul
cmp
mov
adc
repz
xor
adc
mov
add
lea
in
mov
sbb
movsb
shrl
jns
push
in
stos
xchg
cmp
add
bound
pop
addr16
cwtl
inc
mov
push
pushf
lea
inc
adc
inc
mov
rorl
add
out
xchg
pop
je
push
and
addr16
or
out
add
aaa
fidivrs
mov
or
push
arpl
cli
addl
mov
xor
mov
leave
jo
add
movsb
movsb
push
outsb
add
push
sbb
add
mov
leave
cmpsl
jbe
xlat
sub
lds
call
repz
jne
pop
lret
pop
rorb
xor
xor
insl
jle
dec
dec
sarb
shr
ss
adc
mov
aaa
sarb
in
lcall
enter
out
push
jg
adc
mov
sub
xchg
sbb
xchg
leave
jno
insb
loopne
shll
cmp
fidivs
jb
mov
jl
out
sbb
jnp
jmp
xorl
pop
out
inc
mov
fisubs
sbbb
sar
in
xchg
mov
jbe
mov
jo
jge
rcrb
sub
mov
cmc
inc
movb
adc
push
cmpsb
jbe
clc
addr16
out
imul
mov
inc
jbe
jno
dec
push
test
mov
mov
and
sti
mov
mov
push
int3
imul
daa
data16
jnp
xor
jl
pusha
mov
data16
iret
xchg
mov
lds
lds
add
lods
push
push
or
mul
push
inc
xchg
xchg
sbb
jnp
in
xor
roll
xor
repnz
sar
push
clc
rolb
mov
lods
or
mov
sbb
sbb
xorl
mov
sub
and
fadd
sti
std
inc
xchg
jecxz
xchg
mov
pop
sbb
mov
sbb
inc
mov
jmp
ja
cmp
xchg
addr16
xorb
aad
push
add
mov
clc
xchg
outsl
mov
dec
sahf
mov
push
sbb
jae
addr16
mov
aas
mov
jmp
add
dec
push
stos
pusha
pushf
push
fdivrp
mov
jl
adc
scas
out
stos
sub
shll
cwtl
fdivs
outsl
out
test
idivl
dec
cmpsb
xor
stos
mov
jae
xor
insl
and
sub
mov
mov
add
xor
cmp
aas
mov
aas
lods
int
call
ret
xor
and
and
js
jg
adc
mov
xchg
dec
cmc
rcrb
dec
ss
sbb
cltd
jb
push
mov
clc
dec
sarl
mov
fsts
push
jl
fldenv
iret
dec
sti
push
mov
fs
into
xlat
js
push
sub
mov
pop
lcall
jno
sbb
cmc
adc
inc
mov
pop
push
hlt
pop
fdivp
hlt
cmp
iret
mov
loop
fldl
das
sub
pop
xor
xchg
jecxz
lret
or
cltd
mov
int3
or
test
inc
sub
pushf
jecxz
mulb
popf
mov
add
adc
add
push
xchg
cmpsb
sbbb
cwtl
mov
rorl
scas
adcb
mov
dec
cmp
cmp
sub
fnstcw
jmp
repz
ret
stos
test
sbb
mov
rolb
xchg
and
xchg
clc
sbb
ja
xor
loope
sbb
pusha
mov
and
mov
inc
lret
xchg
mov
push
shrb
lds
inc
imul
xchg
pop
dec
shlb
add
add
test
scas
xchg
das
rcl
pushf
sbb
unpcklps
sbb
iret
daa
cli
mov
mov
fdivrs
fmul
pop
clc
dec
and
and
xchg
shlb
or
test
xor
mov
add
lret
pop
jp
dec
dec
dec
outsl
pop
movsb
fisttps
mov
inc
push
mov
ret
adc
dec
nop
iret
idivb
xchg
mov
fistl
pop
or
jns
movsl
popf
int3
push
pop
aaa
in
xchg
pop
arpl
mov
mov
dec
insb
lcall
or
or
mov
mov
into
movl
hlt
and
lret
inc
push
jecxz
ficomps
sbbl
sahf
mov
std
sbb
cld
mov
push
les
adc
pop
dec
push
loopne
xor
adc
xchg
sub
call
cmp
flds
addl
push
push
aam
into
fsubl
dec
push
jmp
es
inc
hlt
insb
lods
mov
push
jg
rcll
test
sbb
cld
outsl
lahf
mov
cmp
and
push
push
mov
stc
imul
cmp
mov
mov
ret
sbb
xchg
pop
test
shlb
sar
ret
sub
shrb
ss
add
pop
lret
mov
rorl
mov
popf
in
mov
stos
dec
cltd
inc
int3
push
inc
mov
les
pop
push
in
mov
mov
lock
sbb
test
aaa
xchg
call
jne
ljmp
push
sbb
sbb
sbb
dec
pop
les
hlt
daa
jle
mov
das
jmp
scas
inc
cld
mov
in
aas
fidivrs
sti
pop
fisttpl
jb
inc
std
arpl
lret
fwait
loopne
dec
xchg
xchg
push
xchg
pop
out
mov
adcl
or
jno
pop
or
or
jmp
or
loopne
xchg
les
and
mov
sub
mov
xor
fiaddl
and
pop
xchg
dec
add
lret
pusha
pushf
xchg
pop
adc
dec
adc
cmc
mov
out
dec
int3
xor
push
jp
fstpt
repnz
sbb
inc
push
daa
adc
inc
mov
mov
pop
pusha
pop
xchg
push
aad
call
cmc
mov
fcomp
cltd
and
clc
push
iret
cmp
xchg
loope
mov
pop
fisubs
and
andb
xchg
int
mov
push
repnz
xchg
fwait
xor
aas
cmpl
les
and
pop
dec
or
and
adc
jg
jecxz
fldenv
fisubrs
dec
push
and
frstor
stos
cld
add
cs
pop
adc
sti
stc
xor
jle
test
xor
fincstp
xor
xor
dec
cmpsl
daa
xor
jle
mov
mov
cmp
inc
dec
daa
addl
mov
ficompl
xor
xchg
jl
jecxz
daa
nop
add
sub
dec
pop
inc
pop
inc
or
push
jae
cld
xor
adc
shl
rclb
notb
imul
cmp
mov
adc
int3
test
inc
adc
push
adc
cmp
jb
aam
andl
cli
dec
pop
fldt
test
mov
fisubrs
pop
mov
aad
repz
mov
daa
dec
mov
in
push
sub
xor
xor
insb
call
add
mov
in
xchg
xchg
sub
enter
adc
sbb
and
mov
std
xchg
push
and
cwtl
push
lds
movsl
cmp
icebp
fsubrs
cmc
fsubp
adc
fnstsw
clc
mov
dec
xchg
add
loop
dec
cmc
mov
cmp
sub
and
xchg
lahf
xchg
add
out
mov
adcb
push
mov
inc
xlat
sahf
iret
push
add
add
pushf
jecxz
enter
cwtl
inc
aaa
dec
or
pushf
test
jl
imul
dec
jecxz
jle
dec
jmp
movsl
aad
mov
inc
xchg
or
daa
push
loop
shrl
pop
int
inc
fmulp
mov
hlt
or
or
inc
sbb
out
das
dec
bound
dec
dec
push
hlt
mov
adc
dec
mov
pop
imul
outsw
shl
in
adc
leave
lret
push
jne
inc
leave
aaa
ds
ficoms
faddl
and
and
xor
daa
sbb
loopne
cmp
imul
daa
imul
or
adc
loopne
lahf
mov
xlat
push
cwtl
jns
cmp
jno
pop
arpl
jmp
shr
bound
pop
and
int3
stos
lret
inc
daa
aam
outsb
push
jp
pop
inc
xchg
add
or
push
insl
dec
push
pinsrw
aaa
fstpt
repnz
mov
scas
xor
std
pop
pop
stos
jns
test
and
xor
lcall
mov
xchg
xchg
fs
ret
stos
mov
mov
dec
mov
jbe
fiaddl
sub
pop
data16
pop
add
lods
imul
mov
repz
xchg
xor
cmp
xor
push
in
ds
push
repnz
js
jbe
mov
add
js
pop
nop
mov
jo
ja
fildll
push
and
stos
ljmp
fsubp
stc
jmp
sub
or
stos
sbb
pop
mov
fsts
pusha
cmp
mov
dec
xor
xor
sbb
or
xor
xor
mov
jns
adc
inc
mov
shlb
out
mov
mov
ss
pop
cmpsb
dec
inc
lods
sbb
or
mov
and
lods
sbb
adc
in
mov
ror
sbbl
es
mov
enter
xlat
out
xchg
fadd
out
cwtl
jns
and
and
fs
jg
mov
xor
sub
or
mov
sbb
out
notb
and
mov
aad
out
je
in
hlt
shll
push
push
inc
int3
mov
mov
jbe
ret
icebp
sti
jecxz
pop
push
or
jle
cmc
pop
xor
push
dec
jo
callw
into
mov
leave
inc
pop
xchg
mov
adc
mov
stos
js
outsl
jmp
repz
out
jmp
and
adc
shl
imul
loop
mov
sbb
mov
xchg
cmp
mov
lret
mov
sub
mov
imul
mov
inc
jo
sbb
fsub
mov
popf
shrl
or
jle
fsubl
push
scas
sub
and
sarl
out
xchg
add
ficoms
std
fcmovbe
hlt
inc
rorb
push
lea
mov
xchg
insb
cwtl
mov
pushf
sub
mov
mov
jnp
imul
pop
cmp
movsl
sbb
jae
jae
in
sbb
in
mov
inc
sub
adc
popf
jns
adc
jge
js
mov
pop
mov
fadds
sub
shrl
push
ds
inc
loopne
lds
cmp
mov
inc
es
jbe
push
add
adc
lods
iret
shl
mov
aad
add
ret
jae
xchg
push
rcr
test
lret
movsl
mov
std
clc
sub
cwtl
pop
outsb
dec
insb
push
out
in
mov
adc
lock
outsl
cmpsl
push
bts
jb
sbb
aas
lea
jl
inc
loope
movsb
inc
ret
lds
fs
sbb
jae
jno
lahf
mov
out
lods
push
add
shl
jl
ljmp
sbb
ss
jbe
add
pusha
idivb
cmp
push
lods
lret
lods
xor
mov
loopne
cmp
cmp
ss
mov
push
jo
rcrb
out
jae
repz
stos
out
mov
push
jno
pop
imul
cmpsl
adc
cmp
push
mov
dec
mov
in
cmp
or
aad
sub
pop
jle
xor
scas
pop
xor
or
inc
push
out
scas
call
std
fsts
ret
dec
fcomps
fistps
add
leave
jae
jl
push
mov
test
cli
inc
jmp
mov
mov
adc
jnp
out
mov
mov
mov
pop
pop
scas
hlt
out
sbb
insl
bound
or
lret
push
cmp
cltd
xor
loope
adc
add
add
jmp
cmpsb
xor
inc
inc
cmp
adc
std
scas
mov
daa
fiaddl
cwtl
stc
jge
mov
xchg
jp
mov
push
xchg
dec
das
mov
and
lcall
mov
mov
cmp
cmc
mov
pushf
mov
pop
jmp
test
inc
std
pop
sbb
arpl
jno
movsl
pop
gs
fs
add
mov
inc
push
cmpsl
xor
lods
in
ljmp
jae
jnp
dec
rorl
enter
jns
cli
add
das
imul
jmp
mov
mov
or
sbb
mov
adc
push
fwait
inc
loop
add
jle
adc
inc
sar
xor
filds
sti
xchg
mov
add
fcomps
sub
test
inc
cwtl
or
movsl
sub
cmp
into
icebp
xchg
xchg
aam
pop
cmp
stos
pop
xor
xchg
test
add
lock
fsubl
cwtl
enter
loop
cmp
cli
sub
gs
cmc
cmp
icebp
jb
lret
insl
stc
shlb
cmc
push
test
aaa
loope
xor
push
repz
mov
faddp
dec
add
cwtl
push
or
jg
scas
addb
push
pop
adc
inc
xlat
mov
aad
inc
jne
mov
xchg
lds
shlb
cmp
xchg
sti
out
mov
hlt
iret
mov
adc
xorb
popf
lods
or
mov
cli
add
testl
cltd
cwtl
push
addr16
addr16
push
out
jb
sbb
iret
push
ljmp
and
lcall
mov
icebp
clc
dec
xor
mov
adc
gs
xchg
out
push
adc
movsb
and
inc
repnz
shlb
loopne
loop
sbb
mov
lods
xor
pop
jnp
loop
cmp
and
push
test
mov
mov
repnz
xor
inc
push
mov
in
inc
shll
mov
inc
lret
cmpsb
out
mov
dec
sub
add
and
movsl
aad
dec
or
add
loopne
lret
cwtl
scas
mov
adc
jnp
pop
std
mov
mov
mov
cmc
cmpl
and
cmpsl
nop
test
mov
aas
ret
lea
les
in
push
mov
xor
ds
xchg
add
pop
adc
movsb
fbld
mov
adc
xlat
lock
andb
pop
in
mov
leave
call
loop
xchg
loopne
faddp
cmp
test
flds
xor
adcb
in
call
mov
jg
jecxz
push
outsl
mov
xchg
lds
and
xor
xor
dec
push
and
xor
cmp
cmp
rolb
mov
jl
loope
int
ret
mov
xchg
jns
ret
rolb
and
inc
mov
jge
mov
cmp
mov
in
mov
dec
cmp
insl
push
mov
and
aaa
sbb
ret
sub
and
out
adc
inc
and
push
imul
lret
sub
lea
lea
cmc
sub
sub
in
pop
or
and
ss
add
daa
dec
mov
or
lods
mov
insb
fmul
mov
aas
fbstp
push
xchg
mov
jecxz
sub
bound
jmp
push
sub
mov
imul
xchg
pop
push
mov
inc
pop
sub
jns
xchg
addr16
push
sbb
ds
imul
inc
test
sbb
sub
pop
daa
jnp
insl
rorb
mov
mov
scas
xor
pop
or
dec
xchg
outsb
dec
pushl
outsl
mov
dec
stos
xor
mov
arpl
push
int
mov
push
mov
lahf
and
add
sbb
sub
mov
adc
xchg
hlt
jo
enter
jecxz
nop
repz
pop
loopne
xor
testl
stos
in
add
repnz
nop
insb
cmp
rorl
bound
and
arpl
sarb
xlat
add
nop
mov
xor
mov
jns
in
xor
push
jecxz
mov
fisttpll
cs
out
aas
fisttpl
repz
jbe
imul
dec
mov
sarl
scas
popf
sbb
scas
cmp
xor
adc
int
sub
movsl
mov
sbb
enter
dec
xor
jp
add
adc
aas
shll
sub
add
and
test
jb
inc
hlt
pushf
je
and
dec
mov
cmpsl
or
jne
mov
fcmovnbe
test
jo,pt
mov
jge
clc
fstl
adc
mov
call
xchg
sbb
cmc
jb
jne
adc
inc
movsl
lods
outsl
mov
out
xor
push
ss
inc
cmpb
mov
mov
xchg
dec
mov
pop
insl
mov
dec
jg
lds
inc
inc
xchg
add
enter
movsb
sub
aad
pushf
rcr
mov
repz
add
lea
mov
das
stos
add
je
mov
and
pop
sub
push
jae
mov
not
pusha
outsl
test
cld
or
mov
lds
xchg
mov
cwtl
stos
mov
jbe
push
les
jo
xchg
fildl
in
inc
push
pushf
cmp
arpl
or
repz
loopne
push
xchg
mov
lcall
jno
mov
mov
aad
and
cmpsb
insb
sbb
xchg
mov
jbe
mov
pop
push
or
lock
mov
outsl
mov
pop
mov
mov
ds
hlt
cmp
push
stos
mov
data16
jp
jne
popa
test
out
popf
sbb
mov
repnz
jmp
add
outsb
sbb
int
inc
and
pop
push
pushf
add
mov
and
cmp
mov
mov
out
sbb
in
fwait
and
rorb
mov
dec
xchg
ret
mov
add
fwait
add
push
incl
out
shrl
sbb
outsl
dec
stos
fucomp
push
repnz
push
mov
add
seto
or
cmp
repnz
insl
add
pop
mov
popf
das
sub
imul
cmpsl
jmp
xor
add
ret
push
test
fsubrl
push
xor
dec
push
rolb
sbb
xor
pop
sub
xor
mulb
adc
jmp
inc
xchg
lock
cmp
repnz
mov
add
ret
popf
pushf
cmp
inc
movsb
dec
std
insb
out
push
push
shl
aad
getsec
lahf
push
fisttps
inc
aam
repz
lds
push
dec
movsb
jns
test
movsl
arpl
cmp
or
fsts
dec
xor
aas
inc
cmp
test
cli
leave
lcall
lcall
loop
sar
jl
fstpt
sub
into
cmc
fsubs
mov
loop
repz
frstor
leave
xchg
pop
lods
arpl
pop
es
xchg
and
ljmp
jmp
mov
loopne
mov
mov
andl
pop
sbb
fwait
mov
out
sti
dec
jbe
dec
inc
xorb
fisttpl
dec
xlat
inc
or
clc
push
cs
sti
dec
xchg
popa
mov
cmp
stc
inc
jle
dec
shl
insb
push
cld
test
inc
mov
jnp
fisubs
jg
idivl
xor
test
pop
scas
jne
xor
sahf
dec
sti
test
and
mov
and
cmp
lds
les
fildl
cmp
and
or
lea
push
outsb
adc
lret
and
in
jae
mov
dec
pop
rcrl
leave
bound
enter
std
in
fnstsw
inc
rclb
ret
dec
fwait
add
mov
jmp
lds
outsl
mov
jecxz
leave
cmp
popa
mov
rclb
xchg
mov
jg
push
adc
jle
cmp
pop
or
pop
mov
leave
lods
jg
and
inc
inc
pop
push
add
xchg
xor
ror
scas
pop
jle
xchg
xor
mov
jmp
push
xchg
arpl
or
jmp
insl
add
mov
jno
and
add
xorb
jae
pop
dec
ret
lock
and
ret
jno
stos
fdivl
xchg
test
movsl
xlat
inc
subb
adc
ficoml
int3
addb
rcll
adc
out
and
add
call
ja
outsl
je
popa
into
popa
cmpl
insl
cmp
sahf
shll
lds
xchg
sbb
into
sub
push
dec
inc
mov
pop
cmp
lcall
jecxz
pop
ret
leave
mov
test
ljmp
xchg
sbb
arpl
js
dec
pop
xchg
push
add
inc
loop
pushf
push
sbb
movsb
cmpsb
popf
and
mov
leave
daa
mov
in
imul
ret
adc
and
in
or
jo
notb
add
add
cwtl
sub
test
out
add
and
dec
out
add
out
rcrb
push
mov
enter
fisttpl
mov
pop
xor
leave
mov
jmp
test
mov
lods
push
cli
push
pop
arpl
inc
jb
shl
and
hlt
cmp
cwtl
and
pop
sub
fisubs
mov
call
sbb
push
sbb
inc
sbb
push
xchg
jno
es
adc
aam
xchg
stc
dec
mov
popf
or
in
ljmp
jmp
lret
leave
and
add
jbe
sbb
xchg
test
inc
mov
mov
cltd
push
je
insl
pop
cmp
inc
lods
pop
test
mov
sub
in
or
mov
mov
mov
inc
inc
loopne
mov
test
fldenv
mov
fldt
push
xchg
adc
pop
pop
or
jae
in
xchg
mov
push
adc
adc
cmc
movl
mov
lahf
cmc
mov
repnz
or
addr16
addr16
xchg
mov
dec
test
mov
sub
mov
jg
sbb
fsubs
mov
pop
add
dec
hlt
fists
and
mov
cmp
xchg
jnp
aam
push
xchg
add
mov
mov
aas
mov
rclb
add
sbb
mov
das
mul
int
xchg
lahf
iret
movsl
xchg
mov
xchg
jmp
push
push
jp
cmp
outsl
adc
fsubs
sbb
dec
dec
cmp
es
aaa
sub
loopne,pt
leave
jle
lods
sub
dec
daa
or
cltd
add
or
fcompl
arpl
cli
push
push
in
xchg
addr16
dec
sbb
in
ffreep
fstps
push
test
outsl
xchg
xchg
out
sub
repz
cmp
dec
dec
push
cwtl
mov
xchg
pop
push
push
into
or
nop
aas
jno
pop
aaa
mov
sbb
test
dec
fucomip
std
cli
xor
je
lret
movsb
lock
push
hlt
imul
out
in
or
mov
lret
mov
scas
adc
inc
aam
sbb
and
jnp
scas
mov
and
lret
pop
fildl
notl
cltd
fs
int3
pushf
push
subl
push
push
arpl
pusha
sbb
mov
cmpxchg8b
and
cmp
mov
inc
popf
mov
inc
aam
hlt
adc
mov
xlat
dec
pusha
cmp
xchg
lcall
scas
cmpb
cwtl
pop
out
jle
cmp
sbb
mov
fimuls
cmp
or
xchg
fwait
pushf
adc
lret
arpl
imul
jmp
push
xchg
je
pop
addb
xchg
lds
out
aam
jg
push
inc
pop
jle
push
test
into
jp
adc
les
pop
jmp
call
les
fwait
out
sbb
mov
cmc
js
jo
out
or
inc
pop
pop
out
rorb
add
sbb
cmpsl
cmp
xor
jb
out
and
dec
pop
mov
xchg
sub
shll
mov
iret
push
xor
mov
cld
les
inc
mov
jnp
aaa
push
lahf
push
mov
repz
mov
mov
mov
push
or
mov
addr16
cli
stos
mov
xchg
add
mov
cmp
jmp
div
pop
sbb
ja
add
mov
and
sbb
mov
addr16
xchg
pusha
mov
ds
and
loope
shrb
fdivs
pop
push
push
xchg
inc
ffreep
stc
lea
scas
out
or
xor
mov
push
adc
pop
cmp
mov
ss
aam
aaa
dec
int
bound
test
ja
cld
addb
sub
or
rcll
sub
jno
rcr
xchg
pop
jne
aas
pop
pop
stos
subl
inc
and
push
and
lret
adc
dec
das
fmuls
cmpsb
push
cmp
sub
leave
sbb
push
lcall
jecxz
mov
fcmove
ja
nop
out
lahf
and
imul
inc
jp
scas
shrl
mov
shl
and
fisubrl
xchg
lret
sahf
or
fs
push
imul
pop
mov
test
popf
mov
aaa
mov
sub
xchg
aaa
mov
and
std
mov
adc
jb
loope
jle
dec
push
cmp
inc
jge
outsb
mov
xor
stos
pop
and
mov
imul
jge
mov
jbe
hlt
mov
pop
sub
add
kmovw
jecxz,pn
leave
sbb
mov
ja,pn
sub
insl
pop
andb
cmpsl
mov
pop
adc
ljmp
mov
and
hlt
lock
mov
sub
arpl
mov
adc
pop
ret
sub
test
or
cli
test
sbb
sbb
or
leave
sub
leave
inc
mov
mov
add
add
add
push
rcrl
imul
mov
xchg
inc
movsb
jge
repnz
xor
les
mov
rcl
pop
rolb
cld
pop
stos
sahf
mov
xchg
callw
jnp
dec
insl
cmp
cltd
push
mov
dec
gs
or
ss
pusha
fucomp
aas
push
outsb
pop
mov
imul
sbb
xor
push
and
mov
call
jecxz
stos
lock
lcall
mov
sarl
in
pop
ljmp
int
xchg
fmull
pusha
cli
bound
dec
mov
imul
push
fdivrs
bound
rolb
mov
out
leave
outsb
push
in
push
icebp
cwtl
add
fimuls
scas
pop
adc
in
gs
scas
add
dec
xchg
push
jge
pop
mov
sub
inc
movsb
cmpsb
inc
in
inc
add
lock
xchg
sub
es
fdivrl
and
sbb
je
jbe
push
sarb
add
out
iret
and
xchg
mov
lret
outsl
fldcw
out
data16
add
adc
cmp
cmp
popa
lret
inc
bound
add
lcall
lods
scas
cwtl
adc
call
fcos
imul
or
imul
push
es
mov
addr16
xlat
jbe
cmp
cmp
xchg
mulb
loope
int
add
cld
dec
pushf
sahf
dec
aad
adc
lock
out
sub
bound
movsl
jnp
inc
ret
mov
movsb
mov
test
xchg
adc
push
pop
and
pop
adc
movsl
imull
je
addb
pop
sar
push
cmp
pusha
out
xor
xlat
mov
adc
fabs
jge
add
outsl
push
adc
mov
shrd
or
insb
mov
loopw
mov
pop
out
into
dec
jmp
lahf
jno
jno
pusha
mov
inc
pop
mov
and
repz
hlt
or
lret
std
push
jo
lock
arpl
sub
mov
and
in
cwtl
sub
dec
shlb
adc
push
rcr
mov
insl
sti
clc
clc
jecxz
adc
cltd
xor
mov
shrb
punpckhwd
aaa
out
jb
adc
mov
push
cmp
pop
out
or
in
sahf
cld
push
push
pop
loopne
xchg
andb
push
inc
or
sub
xchg
jmp
icebp
ljmp
mov
mov
xchg
clc
and
adc
mov
or
cld
cmpsb
add
jp
stc
xor
dec
sar
test
mov
dec
test
jmp
idivl
or
ss
cs
pop
decb
jmp
mov
and
aas
jp
int3
pop
push
mov
xor
inc
pop
jmp
push
hlt
sub
rclb
push
pop
sbb
or
movsl
ds
cmc
in
mov
push
dec
adc
sti
mov
dec
pop
mov
dec
testb
sarb
mov
pop
icebp
lods
fsubrp
mov
lock
pop
mov
inc
push
aas
fnsaves
std
adc
hlt
and
fdivl
arpl
push
lds
in
adc
mov
sub
ds
inc
fnstsw
pop
mov
dec
subb
cmp
sbb
fcomi
mov
leave
in
adc
in
enter
mov
or
or
and
push
inc
icebp
dec
or
sbb
push
das
dec
call
xchg
mov
push
adc
scas
mov
pop
sbb
es
lea
enter
jp
jb
stos
pop
pop
lods
lea
fistps
mov
das
cs
cltd
clc
ror
push
xor
jg
mov
cmp
fisubl
xchg
sbb
inc
cmp
cmp
cmc
cmp
test
add
sub
ret
outsl
inc
fsubl
xchg
test
cld
add
inc
clc
jle
xchg
jo
pusha
adc
dec
imul
sub
call
push
test
dec
lcall
fldcw
rorl
dec
xor
add
in
negb
mov
push
jg
test
push
mov
mov
jno
shl
lds
jg
outsl
pop
inc
and
adc
sub
jmp
and
sti
add
mul
cmp
loop
cmpsb
in
or
cld
mov
popa
test
ja
icebp
repz
ret
out
filds
xchg
repnz
inc
mov
popf
mov
je
ficompl
pop
mov
sbb
cmc
jmp
xchg
ds
jne
push
push
mov
add
in
cmp
pop
inc
add
cmp
aad
push
ret
adc
xor
jl
pusha
cmp
movsb
nop
dec
or
fisttpll
push
sbb
icebp
add
lea
hlt
fsubs
jae
stos
cmp
xchg
jmp
adc
test
test
mov
xor
jb
cmpsl
push
test
test
dec
test
mov
pop
loopne
scas
clc
adc
sub
movb
mov
push
lret
jmp
add
mov
inc
pop
and
in
cmp
mov
or
jno
movsl
das
loopne
bound
cmp
cld
push
push
adc
or
inc
mov
leave
add
sub
shrl
ret
mov
in
cli
dec
in
push
cld
and
test
push
or
fstpl
inc
notl
in
push
test
and
aas
pop
push
cld
dec
jne
hlt
es
testb
stos
adc
add
add
xor
ss
pop
ljmp
lods
cmpsb
cmp
jno
stos
rorb
in
cld
jp
repnz
mov
xchg
add
push
xchg
das
pop
jne
push
lock
outsb
dec
neg
fs
cs
pop
jns
lods
mov
jp
cmc
cltd
cmp
push
and
inc
and
test
lods
repnz
fldenv
dec
outsl
jo
sub
dec
outsl
pop
sub
mov
movsb
stos
lret
jecxz
loopne
dec
lds
rcll
xchg
or
xchg
pop
andl
popa
sub
or
and
mov
aam
mov
loopne
idivl
nop
adc
or
mov
xor
xchg
fildl
stos
es
or
in
leave
addl
repnz
ret
loop
lods
add
inc
cmp
ja
inc
add
stos
dec
out
jbe
out
outsb
std
sub
xor
fists
leave
shlb
mov
sbb
and
pop
in
dec
or
aad
cli
shll
cmc
dec
mov
mov
xchg
lret
addb
fldl
stos
inc
loopne
mov
pop
mov
pop
sbb
in
pop
bound
arpl
jbe
xchg
mov
lahf
xchg
inc
sbb
push
movb
jmp
push
std
mov
sbb
dec
lret
xor
test
lahf
mov
pusha
cltd
cmc
repnz
out
sbb
inc
ds
or
push
lods
mov
push
rorb
cmp
xor
mov
lret
iret
lret
jmp
push
push
push
adc
nop
adc
lock
push
sar
mov
cmpsl
out
cld
shrl
sub
iret
or
or
push
pop
nop
mov
ljmp
dec
pusha
mov
xchg
dec
dec
gs
sub
roll
fldl
shl
mov
in
movsb
sbb
and
fcom
lock
negl
mov
push
ret
push
lods
sub
mov
sbb
mov
xchg
in
cmp
push
hlt
mov
xor
add
fs
repnz
dec
ja
out
call
scas
mov
sub
jg
add
sbb
push
clc
xchg
xor
and
xor
push
fstl
cmpsb
pop
test
call
shr
jb
add
add
and
fwait
js
das
xor
negb
daa
cwtl
idivl
mov
xor
jp
mov
cld
dec
add
jbe
cmp
leave
fucom
pop
lret
cmpsl
lret
pop
cmp
rorl
mov
adc
lds
ja
test
pop
dec
pop
mov
lret
and
adc
xchg
mov
dec
add
movsb
pop
mov
add
clc
adc
stos
fcoms
pop
xchg
fisttpll
loope
cmp
stc
jo
or
in
push
sbbb
mov
mov
movsl
cmp
adcb
jl
xchg
icebp
inc
outsb
jmp
lret
test
jns
and
push
aad
add
das
push
xchg
or
out
fsubrl
push
icebp
or
hlt
leave
cmp
test
movsl
cmp
aaa
fldt
sbb
test
lret
fs
mov
lcall
mov
fs
shll
pop
adc
pop
mov
add
dec
sar
fucom
scas
dec
add
hlt
ficoms
xchg
ret
adc
and
pop
cli
jnp
pop
xchg
outsl
rcl
daa
push
push
out
sbb
jbe
dec
shrb
mov
pop
cltd
les
cmp
pop
iret
adc
ljmp
add
aaa
stc
mov
sub
mov
xor
andl
sub
mov
jp
xor
sub
xchg
jge
fsubs
lds
pop
or
jb
sbbl
mov
dec
in
lret
mov
mov
cltd
and
cs
sub
xchg
pop
mov
and
jno
jae
push
push
test
cmp
iret
xor
rcll
lcall
out
imul
mov
mov
into
mov
inc
loop
push
inc
enter
insb
xchg
mov
or
into
mov
xchg
dec
or
cli
xchg
mov
loope
test
aas
jg
das
push
mull
mov
ja
lds
jle
cmpsl
in
repz
sbb
ds
sub
push
sub
cmpsl
shr
inc
cli
stc
inc
ljmp
xchg
andl
rolb
ja
jle
fildll
jp
mov
rcrl
lods
movsb
stos
int
mov
gs
iret
pop
fnsave
sub
subb
sbb
cwtl
lret
nop
fisubl
ret
es
outsb
dec
push
adc
cmc
push
push
dec
inc
cmp
xchg
repz
hlt
xchg
mov
cmp
jae
pop
jg
jecxz
xadd
adc
cmp
call
cltd
mov
mov
xchg
lahf
scas
add
xchg
stos
hlt
xchg
jmp
sahf
decl
jecxz
mov
out
xchg
aaa
dec
mov
add
lret
mov
cmp
nop
loope
icebp
jp
inc
cmp
dec
inc
xchg
jnp
dec
pusha
repz
mov
xor
and
ficoms
mov
cmpsb
es
xlat
inc
xor
xlat
mov
shll
jae
out
shl
into
incl
dec
scas
inc
adc
sbb
mov
arpl
insl
cmp
or
jns
sarb
mov
pop
mov
arpl
xchg
fbstp
pop
call
xchg
fcmovne
insl
out
jmp
inc
sbbb
roll
mov
stos
daa
in
fs
ljmp
dec
or
xor
inc
adc
mov
daa
fimuls
and
test
arpl
out
shll
loope
add
inc
push
lcall
ret
adc
xor
and
sbb
pop
ret
jmp
and
jl
push
dec
dec
xorb
fstpl
mov
push
into
jge
and
lods
sub
outsl
aaa
addb
roll
fadds
movsl
test
jl
dec
sbb
add
inc
out
cmp
push
aas
cs
iret
js
inc
sub
inc
leave
out
and
inc
jl
cmp
xchg
das
movsb
push
lods
jb
sub
insb
stos
scas
leave
shl
add
lods
popa
sbb
cmp
int3
andb
sub
xchg
dec
lret
fimuls
repnz
mov
mov
pusha
out
jno
mov
dec
mov
lods
dec
inc
dec
sub
add
ds
cmp
icebp
jne
add
gs
ds
scas
xchg
push
int3
jecxz
inc
pop
ljmp
les
mov
xor
ret
aas
pop
xchg
adc
ljmp
hlt
js
out
cld
lea
pop
lds
in
jbe
mov
and
add
push
pop
flds
andb
leave
xchg
dec
mov
push
sub
adc
lret
jo
movb
hlt
loope
lcall
notl
ss
mov
sar
mov
dec
mov
scas
xor
pop
sub
ret
push
lea
pop
cmp
scas
and
mov
adc
scas
lea
mov
jg
cld
sbb
fdivrp
outsb
or
sbb
or
lcall
sub
hlt
loop
rcrb
in
cmp
popa
and
lock
ss
mov
mull
scas
fidivrl
movsl
call
insb
flds
je
and
test
lret
mov
pop
clc
hlt
xchg
out
jp
js
cltd
or
and
ret
popa
fidivl
mov
or
ss
jo
into
xor
adc
out
jp
jnp
call
or
sbb
repz
imul
dec
inc
mov
adc
jmp
mov
xchg
xor
mov
faddp
cmpsb
xchg
lds
gs
mov
daa
lods
dec
sub
mov
mov
mov
mov
iret
push
out
fdivrs
rcrl
inc
mov
lret
arpl
pop
cltd
rcll
fists
test
js
push
mov
scas
imul
lods
or
sbbl
sbb
into
es
js
je
and
imul
or
ret
mov
push
idivb
push
fwait
sbb
sub
leave
mov
push
scas
jmp
scas
push
cmpsl
loop
sbb
jbe
push
iret
addr16
shrb
and
dec
stos
jnp
sbb
inc
lods
flds
pop
mov
jo
ret
push
outsb
test
dec
cmpb
push
fnsave
lods
sub
pop
out
dec
and
mov
add
scas
jp
jecxz
scas
pop
push
cmp
mov
dec
dec
enter
ret
xchg
hlt
gs
fiaddl
mov
ss
or
rcrb
cwtl
xor
dec
or
mov
mov
cs
adcb
mov
fstpl
stos
ljmp
adcl
nop
movsb
std
add
mov
mov
or
push
fcoms
fisttps
jns
mull
jae
jle
mov
stos
sub
cmp
nop
jp
fistps
sub
pop
adc
popf
repz
cmp
jl
inc
ret
outsl
clc
and
jns
pop
inc
stos
mov
lods
int3
repnz
inc
add
xor
stc
mov
ss
test
cmp
xlat
in
mov
dec
or
jne
xchg
aad
rcrb
andb
insb
pop
xchg
sub
mov
adc
fcomps
test
mov
mov
pop
xor
sub
loop
jl
outsb
adc
xor
aam
jno
xchg
int
adc
or
outsb
lock
xor
push
sti
movb
sub
sti
adc
push
shlb
push
or
inc
add
mov
fs
adc
mov
loopne
outsb
fisubl
xchg
or
sahf
sub
pop
jg
pop
jp
sbb
pop
xor
pop
jle
js
lret
or
adcl
mov
pop
das
dec
out
decl
xor
sbb
xlat
cmpsb
in
je
shr
sub
dec
add
test
sub
lret
and
les
dec
sub
mov
pop
and
and
jbe
fisttpll
pop
test
call
mov
test
xor
add
push
ljmp
inc
rclb
adc
lock
xlat
sti
mov
in
pop
xchg
lcall
imull
push
xchg
cmc
cld
stos
sbb
inc
cwtl
mov
xor
cli
test
jp
push
cmp
repz
dec
push
test
add
popa
sbb
es
loope
mov
cmpsb
fistl
or
nop
aaa
test
sbb
push
es
dec
xchg
cld
cltd
xchg
lods
jno
jne
fdivp
icebp
or
xor
jmp
stos
cmp
fwait
sbb
out
mov
nop
sahf
cli
in
mov
divb
xor
xchg
or
inc
mov
dec
scas
stc
adc
xor
push
inc
test
fiadds
aad
sti
jl
mov
sub
or
mov
and
xchg
xchg
cmp
shll
sarl
mov
pop
cmc
xchg
sti
dec
xchg
rcrl
jg
add
pop
or
dec
adc
mov
and
cli
adc
lea
adc
movsb
mov
repz
mov
xor
fs
cltd
jae
orl
shll
repz
insl
outsb
cmp
out
mov
dec
push
outsl
xchg
mov
inc
or
jmp
xchg
std
stos
adc
aas
ret
jnp
data16
fmull
and
call
xchg
inc
inc
pusha
pop
push
jmp
push
mov
sbbl
jge
pop
fnstsw
add
and
cs
sub
adc
in
or
fcmovne
fwait
lods
sbb
adc
mov
adc
pop
push
aaa
inc
adc
test
dec
and
fdivrl
push
ss
mov
loopne
pop
scas
sbb
and
pop
cmp
push
movsl
fldcw
icebp
sahf
test
inc
push
mov
adc
imul
lcall
in
aaa
fdivs
xchg
fstpt
adc
pop
in
xchg
andb
lods
je
sahf
ficomps
ss
loopne
jle
fimuls
scas
xor
ret
or
mov
jae
xchg
scas
sahf
setge
dec
fwait
pusha
pop
mov
adc
jmp
cwtl
leave
test
adc
je
pushf
jae
sub
aaa
cmp
adc
rol
sbb
add
xchg
or
mov
sub
loopne
push
or
xchg
bound
aas
push
sbb
or
push
jnp
popl
lds
mov
pop
shrl
sub
or
out
movsl
out
xor
lea
mov
or
add
daa
cmp
cli
daa
xor
push
jmp
lock
daa
jae
mov
call
js
push
lcall
icebp
repnz
insl
cmp
fisubs
sbb
mov
push
ret
cmp
icebp
mov
mov
pushf
push
inc
fwait
out
xor
in
aam
xchg
outsb
das
vmovntps
fwait
lcall
popf
lret
int3
jmp
jmp
adc
pop
and
fsubp
ds
push
jl
push
dec
sub
mov
addr16
xchg
pop
push
aam
inc
lahf
cmp
sub
pop
mov
fsubs
xor
xor
lahf
das
in
icebp
dec
je
and
adc
fwait
xor
or
xchg
test
sbb
pop
clc
lock
push
jne
adc
imul
and
ret
xchg
test
mov
push
movsl
cli
mov
and
sahf
lods
add
addl
gs
dec
test
pop
sub
push
out
dec
adc
loope
mov
arpl
pop
andb
ds
fcoms
add
iret
sbb
pop
pop
dec
ss
mov
push
add
add
push
cltd
pop
stc
add
dec
cmp
aaa
mov
mov
clc
push
fdivr
out
xor
mov
aad
icebp
jne
fmuls
int
andl
inc
movsl
and
xchg
cmp
addl
mov
inc
sbb
into
add
xor
lds
test
jne
clc
aaa
mov
stos
ret
xchg
adc
fwait
mov
xchg
inc
imull
mov
adc
xchg
mov
cwtl
cmp
jo
mov
loopne
mov
enter
lock
out
orl
sub
push
push
testb
lret
xchg
push
jle
cmp
sub
rcl
test
in
imul
mov
xchg
dec
sbb
bound
stc
dec
arpl
loopne
mov
cmpsl
mov
enter
and
push
mov
jg
and
xor
xor
test
and
mov
das
subl
xor
stos
cli
push
not
arpl
daa
jmp
aad
dec
add
jl
test
or
sbb
ret
iret
loop
insb
xchg
dec
sub
cli
sbb
adc
and
jae
repnz
out
or
leave
fs
sarb
test
dec
push
enter
add
out
push
pushw
punpcklbw
push
scas
xchg
dec
mov
mov
jmp
sbb
push
lds
mov
sbb
lret
add
mov
hlt
add
push
aaa
push
xchg
scas
or
inc
les
jne
mov
xchg
adc
pop
cmp
testl
lods
scas
les
stc
out
stc
sub
in
loope
mov
and
popa
rclb
sbb
mov
out
adc
mov
test
push
push
mov
cmp
ret
cmp
sbb
mov
loopne
and
sahf
mov
lret
xlat
lret
sub
and
add
aaa
movsl
cmp
je
xor
enter
inc
das
adc
xchg
push
lock
pop
push
rolb
dec
popa
pushf
popa
xlat
leave
push
sbb
xchg
sbb
fs
jnp
pop
fucomi
pusha
loop
add
jmp
int3
push
scas
icebp
xchg
mov
and
sub
rclb
xchg
popl
les
mov
xchg
jae
stos
lods
lcall
xor
icebp
fstpl
and
cmp
out
cmc
xchg
ljmp
dec
rcrl
lea
mov
out
inc
mov
repz
mov
pop
cmpsb
push
mov
lahf
push
dec
push
push
test
cmpsb
cmp
in
lock
adc
jmp
adc
pushf
inc
and
ljmp
push
and
fdivrp
ja
pop
mov
sbb
out
in
adc
xchg
sbb
movb
jp
sbb
dec
jle
jbe
stos
or
pop
xor
aaa
fidivl
lret
cmp
mov
or
mov
lods
pop
sbb
pop
gs
negl
adc
call
mov
lds
aad
mov
inc
jns
cld
add
xor
hlt
inc
icebp
xor
mov
xor
adc
pop
in
cmp
int3
pop
sub
stos
inc
mov
mov
negb
enter
xchg
cmp
add
mov
movsb
xchg
xchg
inc
push
sub
sub
adc
or
xor
out
mov
cs
into
sar
sub
xlat
test
out
push
in
leave
jb
gs
jp
in
or
cmp
push
shlb
mov
mov
loope
jne
push
filds
js
dec
sub
ret
sub
sahf
std
add
into
ds
jns
imulb
pop
xor
sbb
aas
lcall
insb
cmp
pop
test
pop
inc
mov
jmp
pop
orb
and
push
add
mov
adc
popf
test
scas
out
daa
lea
pop
cmp
mov
cwtl
std
call
bound
push
sub
jae
adc
adc
jge
adc
mov
inc
sahf
add
mov
cltd
scas
in
sbb
push
dec
loop
leave
sbb
xlat
mov
pop
mov
adc
popf
jo
sub
cmp
and
lahf
mov
insl
cli
icebp
sbb
cmp
stos
pop
ret
dec
push
push
iret
fidivs
pop
fucomi
push
and
mov
mov
or
or
mov
dec
sbb
imull
or
adc
dec
std
inc
xor
cli
xor
xchg
push
fcompl
pop
mov
fst
push
mov
add
jge
lret
push
shlb
sub
mov
shlb
push
sarb
xor
repz
sub
push
pusha
cmp
int3
lds
rol
cmp
orl
and
imul
jbe
int
iret
rol
test
xchg
insb
dec
and
jecxz
cmpl
cmpsl
cs
fists
jns
jae
cmp
pop
jle
cmc
fbstp
int3
mov
or
push
or
call
ljmp
pushf
shlb
adc
sbb
rcl
inc
std
adcl
pop
mov
dec
movsl
lahf
bound
jbe
sbb
jnp
sub
xchg
mov
movb
andl
in
insl
in
mov
test
inc
enter
mov
cmpsl
pop
lcall
pop
mov
push
pop
nop
push
push
xchg
nop
add
nop
xchg
jo
mov
push
or
nop
imul
sbb
fstps
push
jp
pushf
stos
push
stc
mov
inc
in
repz
out
dec
mov
leave
jno
test
sbb
xor
lods
adcb
ds
add
pusha
js
mov
ss
enter
mov
sbb
mov
call
cwtl
sahf
mov
xor
insl
gs
ret
pop
mov
sar
psllq
out
adc
jb
jmp
cltd
push
pop
sub
aas
cmp
xchg
mov
cmp
adc
xor
push
shrb
roll
lock
popf
fdivs
lea
xor
cwtl
sti
pop
xchg
andl
ret
or
pop
jnp
push
jge
jg
movsl
mov
cmp
fdivr
fildl
imul
mov
in
dec
lret
push
xchg
out
xchg
test
shr
cmp
cmpsb
fistpl
cmp
cmp
or
xchg
fwait
and
push
mov
pop
xchg
stos
or
or
imulb
xchg
outsl
shlb
lret
fdivrl
cmp
in
ljmp
popf
and
je
movsb
pop
test
out
xchg
and
or
lcall
test
add
shrb
push
fadd
decl
add
imul
cmpsb
into
lds
mov
sbb
xchg
rclb
lret
mov
pop
push
imul
frstor
int3
enter
lahf
xor
xor
adc
or
out
into
shl
in
jbe
jo
sub
jmp
cmp
mov
js
inc
ret
jbe
shr
push
xlat
jno
cs
inc
xchg
rorb
cld
push
or
jae
and
cli
mov
out
cld
rcrl
addr16
add
mov
test
mov
inc
pop
sub
sub
sub
cmpsb
adc
xchg
push
lret
lods
inc
xchg
loop
fists
std
repz
xchg
roll
cwtl
pusha
ljmp
test
xlat
adc
jo
sub
fs
aad
test
test
or
mov
inc
dec
popa
and
dec
push
mov
sub
pop
icebp
lret
jp
ds
pop
arpl
push
repnz
inc
cmpsl
gs
out
fistl
cmpsb
out
jno
mov
ja
test
inc
loop
repz
outsl
mov
adc
jno
fistps
adc
in
and
inc
sub
ret
push
xor
cmpsl
jmp
xchg
sbb
xchg
ss
hlt
mov
dec
scas
test
xchg
movsb
out
shll
sarl
push
or
push
dec
and
repnz
and
mov
pushf
xor
stos
int
aam
movsl
adc
popa
adc
daa
js
mov
ret
adc
movsl
data16
dec
xchg
out
outsl
sarb
fldl
pop
orl
mov
pop
cmp
xchg
add
sbb
jl
das
scas
nop
ret
dec
stos
imul
push
xor
fdiv
xor
dec
iret
jbe
popf
clc
pusha
call
out
out
test
fcmovnb
xchg
rol
xchg
rorl
or
lods
int
cmp
or
add
dec
test
dec
sahf
popa
dec
push
push
and
test
andb
movsb
push
faddl
pop
add
mov
adc
and
mov
ds
cmp
in
push
adc
add
push
test
es
mov
xchg
testl
mov
jns
popa
pop
xchg
stc
push
sub
popf
inc
sub
rorl
sbb
jmp
imul
daa
jb
jo
dec
fildll
loopne
fldl
xchg
push
inc
add
repnz
lret
jns
scas
xchg
sti
jle
add
pop
cwtl
dec
adc
aam
pop
inc
cmpl
adc
pop
and
mov
pop
xchg
dec
div
inc
shlb
or
pop
lods
cs
or
or
out
shll
push
xor
rcrb
jl
out
lock
xchg
sub
dec
dec
fdiv
adc
mov
aas
dec
gs
enter
je
jne
iret
test
or
sub
pop
test
sti
pop
or
in
add
pop
pop
or
mov
or
mov
xchg
stos
mov
test
in
in
xchg
mov
pop
xchg
sbb
jo
dec
sub
mov
ja,pn
repz
push
pop
xor
cmp
sub
mov
in
or
insb
lods
data16
mov
lds
cmp
addr16
jo
jge
call
lcall
push
jl
popf
je
pop
mov
mov
fsubrs
aas
sbbl
inc
push
fs
xchg
xchg
daa
ja
mov
sbb
test
jp
mov
js
xor
and
mov
pop
mov
sub
mov
or
pop
mov
jns
mov
mov
inc
fdivrs
adc
jbe
lret
xorl
or
jne
or
rcll
xor
mov
add
cmp
fdivrs
orl
pop
es
cmp
add
mov
or
fstpl
mov
inc
lcall
jns
xchg
into
and
aad
inc
daa
rclb
or
or
cld
sub
popf
inc
cmp
incb
shlb
pop
es
pop
icebp
or
pusha
inc
jmp
sub
shrb
aaa
bound
stc
mov
aaa
sbb
and
inc
cltd
push
inc
fistpll
add
mov
in
ljmp
pop
fcmovnb
mov
dec
loope
out
lds
xlat
cli
mov
cwtl
ret
inc
arpl
fsubrs
imull
add
pop
inc
leave
mov
mull
fidivl
push
dec
aad
dec
aad
dec
stos
inc
push
iret
xor
push
and
gs
add
xchg
xlat
jae
push
mov
aad
data16
mov
shlb
sti
fnsave
cmovo
cmp
repz
loopne
data16
es
mov
cmpsl
aas
enter
inc
add
mov
xchg
push
jo
cli
fs
add
scas
cli
repnz
ret
rorb
jg
stc
jnp
repnz
nop
ret
xchg
pop
lock
push
lcall
jns
xchg
pop
dec
jo
add
call
mov
jb
ret
cmp
cmp
int3
mov
sarb
mov
shll
mov
xchg
into
rclb
cltd
repz
adcb
lods
sbbl
aas
sub
inc
outsl
xchg
xor
dec
test
adc
xchg
xchg
sarl
mov
pop
sub
sub
dec
inc
int
shrb
leave
insl
into
add
add
push
ret
xchg
lret
adc
pop
pop
xor
cmpsl
adc
out
xchg
mov
jns
jnp
test
pop
mov
push
movsb
ja
fwait
mov
into
mov
and
cld
stos
das
adc
sub
xor
lods
and
mov
mov
outsb
adc
cs
mov
push
xchg
fwait
data16
sbb
adc
insb
hlt
iret
into
ljmp
test
mov
add
pushf
mov
ret
stos
add
xchg
adc
or
jo
outsb
lret
sub
cmc
pop
inc
cmp
nop
testl
mov
cmp
jne
push
out
call
ljmp
jnp
add
int
shll
add
pop
aam
pop
xchg
push
test
stos
js
bound
incb
ret
xlat
jae
inc
cmc
scas
cmp
repnz
testl
fs
jbe
pop
sbb
shll
mov
or
iret
rolb
or
stos
fcomip
pop
iret
dec
or
data16
imulb
mov
push
jl
outsl
repz
cmp
movsl
sbb
adc
fwait
daa
mov
dec
jnp
cmp
jl
jo
jno
fisttpll
mov
cmp
adc
push
bound
dec
mov
jb
and
and
cmp
jle
jecxz
mov
adc
add
mov
xchg
iret
inc
cli
in
xor
or
mov
in
fistpll
mov
sub
pop
addr16
pop
xor
stos
or
lret
cmp
push
mov
mov
push
pop
xchg
sbb
sbb
adc
pop
push
lcall
outsb
into
sub
mov
std
add
dec
lds
imul
test
inc
inc
jg
stc
mov
add
inc
movb
leave
stos
dec
inc
aas
popf
rolb
dec
push
idivb
fidivl
fidivs
adc
repnz
push
movl
pop
xchg
adcb
insb
inc
pop
dec
jne
cwtl
and
adc
mov
loope
pop
cmp
add
cs
leave
adc
test
test
nop
sbb
aam
shlb
xor
push
daa
jecxz
gs
fucomi
into
jns
int3
lret
mov
and
sti
xor
jmp
jae
sbb
je
jg
mov
mov
lahf
mov
adc
js
mov
fucomp
stos
sar
adc
adc
mov
sub
jbe
stos
jne
sti
xchg
mov
inc
xchg
mov
pop
sub
fwait
push
loop
lods
push
push
pop
push
mov
ret
out
and
xchg
leave
pop
loop
outsl
iret
and
cmp
pop
sbbb
aad
lcall
stos
les
cmpsl
pop
jp
mov
jecxz
add
lds
aas
sub
leave
add
inc
push
jns
lods
adc
jmp
xchg
cltd
mov
cmp
dec
scas
push
pop
xchg
adc
arpl
scas
push
inc
shrl
mov
es
add
repnz
pop
test
lods
aas
out
leave
int3
sbb
dec
push
push
ficoml
push
push
fwait
pop
jl
sarb
jne
dec
add
out
inc
push
jle
aam
leave
scas
pop
cmc
addb
lcall
push
inc
dec
mov
add
cmp
popa
popa
push
hlt
mov
cmc
jbe
add
jle
push
insb
cmp
sahf
sti
add
out
dec
mov
lret
test
or
fs
scas
sub
outsb
mov
pop
imul
ret
push
out
dec
dec
aaa
push
and
cmp
mov
pop
or
mov
fs
push
cmpsb
pop
xchg
jnp
push
lret
push
xor
addr16
jns
inc
pop
adc
mov
jg
out
es
sbb
test
pusha
inc
xor
sbb
add
xchg
jl
jp
mov
in
rcrl
clc
cli
mov
pusha
mov
or
cmp
out
cmp
xchg
pop
orb
jge
stos
aas
add
jmp
xlat
enter
ret
jo
add
inc
jg
test
xchg
mov
gs
sbb
loope
sbb
cmc
adc
sub
dec
and
js
movsl
pop
outsl
add
jge
xchg
rorl
jbe
push
mov
xlat
mov
pop
pop
xor
aad
cmp
arpl
stos
lods
addr16
jns
dec
clc
into
mov
push
aas
movsl
in
out
push
lcall
into
add
mov
or
xchg
and
repz
mov
mov
cmp
fnstsw
inc
jg
lock
sbb
dec
sbb
pop
add
iret
aam
push
shr
fnstenv
repnz
mov
loop
gs
push
cmpsb
sahf
mov
inc
inc
movsl
repz
dec
hlt
jo
ficoml
sub
dec
mov
fists
stc
mov
movsb
insl
ds
inc
fs
push
es
rcl
les
sub
mov
push
fdivr
test
pop
loopne
inc
dec
je
push
sbb
mov
icebp
sub
cmp
sarb
stos
adc
mov
div
std
inc
in
out
out
cwtl
cmpsl
xchg
in
mov
arpl
push
mov
in
xchg
add
fidivrl
loope
test
sbb
pop
mov
jmp
mov
cwtl
mov
test
lahf
dec
add
dec
daa
nop
push
inc
mov
clc
jge
jnp
dec
addl
adc
mov
sbb
mov
scas
xchg
xor
movsb
mov
das
lret
in
jne
je
cmp
xchg
push
pop
test
push
sbb
pop
or
lahf
mov
push
add
ja
push
leave
fs
xchg
adc
push
mov
mov
das
inc
loop
sub
jbe
fisubrs
ja
fisttps
repz
xchg
icebp
sub
movswl
add
or
push
jo
jnp
pop
daa
pop
inc
cs
idivb
das
mov
pop
jmp
lods
sub
jmp
fists
addb
mov
dec
adc
sbb
cld
or
cld
in
mov
js
in
push
pop
mov
loope
loope
mov
addr16
pusha
push
jl
lret
mov
pop
out
add
ds
mov
and
movsb
sbb
ret
out
hlt
fwait
mov
sahf
xlat
inc
mov
xchg
rclb
ficompl
jnp
incb
xchg
cmc
dec
inc
add
pop
add
add
mov
inc
inc
push
sbb
adc
jl
cmp
add
cmp
subl
cmp
into
or
pop
xchg
mov
lret
es
mov
mov
mov
xor
pop
arpl
insl
pop
mov
stc
xchg
sub
and
movsb
fcomps
repz
xor
fsubrp
mov
aas
aas
cmc
insb
mov
lods
xchg
in
mov
adc
movsb
jp
mov
jo
ljmp
mov
cmp
and
fwait
leave
mov
mov
mov
sbb
xor
add
loopne
or
mov
cwtl
loop
xchg
push
in
std
xchg
xor
and
mov
insl
add
test
cmpl
std
and
add
mov
gs
jo
lret
inc
xchg
cmp
push
adc
cmp
or
sarl
outsb
pop
jnp
sub
xlat
jmp
mov
cld
cmpsb
sahf
arpl
inc
jbe
jb
jp
adc
push
stos
cmp
bound
push
das
and
xor
add
dec
test
push
sub
pushl
out
or
das
xor
push
out
xchg
pushf
jmp
cli
jo
das
test
cld
xchg
idivl
rcl
lods
cli
cld
imul
lret
mov
bound
adc
sti
or
call
pusha
sbb
xchg
mov
xor
int
push
dec
pop
cwtl
into
or
or
dec
dec
mov
inc
fcoml
les
adc
ds
push
incl
lods
jecxz
push
mov
outsb
jmp
mov
dec
adc
orl
mov
jbe
dec
xor
lret
fwait
jl
aaa
orl
shr
scas
orb
dec
nop
out
sbb
jbe
jno
sub
lds
mov
cmp
test
push
jns
aas
inc
adc
sbb
iret
sbb
or
inc
mov
jmp
dec
or
repz
std
mov
mov
jns
mov
out
cltd
xor
jbe
inc
sub
push
mov
mov
xchg
and
imul
leave
lea
mov
xor
add
std
xchg
xchg
xchg
aas
test
addr16
testb
fmull
add
cmp
add
das
jae
push
hlt
push
pop
sbb
sbb
orb
movsl
inc
iret
ret
enter
fwait
xor
clc
add
sub
cmpsl
lcall
jo
repnz
mov
pop
mov
dec
jo
sbb
xchg
rorl
lock
jge
inc
in
cmp
and
outsb
pop
cmp
push
push
sbb
dec
mov
fdivs
mov
std
or
xor
inc
pop
or
pop
mov
or
or
scas
imul
xchg
pop
jmp
push
test
test
out
cmpsb
dec
js
ja
mov
std
push
mov
ljmp
mov
ret
adc
add
mov
leave
inc
mov
push
js
bound
stos
loope
into
movsl
mov
ret
jecxz
inc
xchg
sub
xchg
es
rolb
les
shlb
cmp
mov
mov
push
and
fcmovnb
ljmp
cmpsb
icebp
mov
xorl
pop
or
and
lock
int3
cmp
aam
adc
cld
dec
addl
jo
sub
dec
inc
lret
test
adc
pop
cmpxchg8b
lret
mov
push
loopne
sub
out
andl
xor
leave
fidivrl
mov
sbb
ret
out
xor
dec
frstor
xor
pusha
ret
sbb
loope
outsl
test
cli
push
or
xchg
sub
mov
cltd
movsb
xor
mov
xor
mov
shr
shlb
sbb
xchg
sbb
mov
mov
add
test
fistl
mov
or
mov
pop
lds
sub
lret
inc
loopne
jg
in
push
cmp
mov
sbb
inc
push
fimuls
push
push
adcb
idivb
daa
add
sarb
xchg
add
jmp
inc
inc
pop
mov
ret
sbb
cld
in
test
adc
or
mov
out
jne
lahf
pop
icebp
mov
fisubrs
jbe
shlb
sbb
dec
mov
cli
dec
mov
test
pop
test
jne
ljmp
sub
add
inc
push
test
jp
xor
xor
out
insb
inc
int3
sub
push
mov
jle
daa
mov
aaa
mov
inc
adc
ljmp
push
daa
and
inc
cmp
ljmp
mov
and
mov
mov
and
inc
leave
add
cmp
test
xchg
xchg
or
or
in
dec
push
jbe
pop
mov
test
sbb
push
addr16
movsb
mov
xchg
push
lret
cmp
pushf
push
cmp
fists
and
pop
xchg
pop
inc
mov
out
arpl
mov
fsubr
sub
mov
mov
lcall
test
jne
imul
mov
iret
test
push
fsts
mov
add
out
inc
jbe
sbb
repnz
or
nop
xchg
pop
rol
cmp
xchg
lods
loopne
call
stos
cmc
mov
push
mov
lock
lock
cwtl
fcomps
or
mov
hlt
adc
xlat
push
sti
inc
pop
cmp
ljmp
sub
mov
mov
dec
out
je
pop
sbb
addr16
xchg
outsb
orb
pop
mov
shlb
xchg
inc
out
mov
lods
inc
adc
scas
repnz
mov
icebp
scas
and
jnp
push
mov
test
ror
rorl
je
clc
or
cmp
rcr
stos
leave
mov
push
inc
inc
sub
sahf
mov
xchg
xchg
ret
xor
andl
sbb
ss
test
rcrb
scas
mov
push
pop
cmpsb
mov
flds
adc
sti
imul
aas
ljmp
imul
inc
iret
bound
mov
ja
rcrb
aas
mov
add
fs
in
out
rorb
pop
dec
cmp
push
lods
mov
lahf
mov
or
push
xchg
sub
inc
xchg
out
jge
test
ds
pushf
dec
in
test
jecxz
cmp
dec
call
fidivl
into
mov
mov
call
mov
lcall
lahf
pop
incb
sarb
daa
enter
popa
sbbl
fnstsw
shll
out
leave
sti
mov
fwait
mov
sub
jae
into
mov
cltd
jbe
pop
pop
shlb
dec
sbb
xor
outsb
outsl
in
icebp
lahf
dec
pop
test
int
fists
pop
xchg
pop
inc
std
stos
mov
sti
xchg
xlat
xchg
stc
clc
push
pop
int
mov
hlt
add
hlt
cld
jle
in
mov
rcrl
loop
xchg
jg
fisttps
pop
dec
idivb
sbb
outsl
dec
mov
xchg
xchg
pop
roll
out
sarl
mov
mov
outsb
push
shll
stos
jmp
pop
lret
xor
sub
pop
and
adc
cmp
push
ss
loopne
jo
pop
sub
out
jne
fnstcw
hlt
jnp
and
pop
dec
push
dec
out
out
in
xchg
jbe
cmc
mov
loop
cli
jns
sub
dec
fwait
sbb
mulb
xchg
adc
jmp
mov
push
movzwl
push
pop
sub
cmp
add
sbb
xchg
jmp
aad
outsb
sahf
and
iret
out
cmp
xorb
jne
insl
mov
sbb
bound
sbb
xor
sbb
or
jo
daa
rcrb
test
dec
push
mov
mov
ja
scas
rolb
mov
daa
jbe
sbb
sbb
stc
add
sub
out
push
xchg
cli
test
leave
popf
not
cmp
sti
scas
mov
lds
das
mov
pop
mov
stc
adc
iret
xor
fidivs
daa
stc
adc
cmp
jg
adc
mov
in
dec
dec
and
cmp
mov
loope
adc
and
pop
jl
loopne
rcrl
pop
sub
aaa
hlt
cmp
xor
jmp
xor
inc
call
xchg
push
add
shll
dec
inc
mov
sub
or
arpl
mov
mov
ficompl
sub
adc
filds
mov
adc
xchg
pop
int3
xchg
pop
cmpsb
daa
mov
mov
xor
xchg
fstpt
fwait
lods
pop
mov
insb
pop
aaa
aam
add
fldcw
xor
fcompl
jp
push
and
cs
cmp
mov
int
or
movsl
mov
push
xor
mov
rclb
mov
ds
mov
cmp
jno
mov
dec
xor
jae
push
daa
cmp
rcrl
and
inc
cmpsb
dec
pop
scas
cli
arpl
inc
jne
lods
fidivs
or
mov
cld
fmuls
or
cmp
push
sub
filds
mov
mov
aaa
add
lret
je
inc
stos
roll
mov
adc
stos
rorl
cmp
test
dec
lods
pop
xchg
mov
dec
out
lahf
in
and
dec
pop
shll
int3
gs
push
lahf
pop
imul
subl
sub
mov
pop
jge
mov
sub
mov
mov
jge,pt
mov
ret
stc
gs
adc
js
mov
add
test
xchg
out
outsl
mov
pop
xor
or
jo
lret
mov
lds
repnz
cltd
leave
lahf
jnp
clc
ljmp
jb
in
add
ja
push
daa
jle
jnp
pop
lock
decb
enter
xchg
ss
jecxz
scas
xor
dec
loopne
test
stos
pop
imul
xor
pop
push
xchg
in
xchg
lcall
push
push
xchg
out
in
jbe
add
jge
lret
mov
xchg
adc
inc
or
fucomip
dec
test
dec
sub
pop
dec
inc
add
adc
and
pushf
adc
jl
enter
push
repnz
inc
adc
mov
out
icebp
rol
movsb
addr16
sbb
rcrl
test
cmp
xchg
mov
into
cmp
dec
adc
je
or
xlat
inc
mov
push
jns
push
pop
int
int
xchg
fs
xor
jae
add
sti
mov
aas
pop
adc
mov
push
daa
je
cltd
sub
xchg
in
daa
xor
jge
inc
jns
xchg
sub
subb
mov
add
addr16
dec
push
mov
adcb
push
pop
loop
out
loop
enter
xor
std
fldenv
mov
sub
add
add
jne
leave
cmpsl
xchg
pop
pop
xchg
adc
pop
cld
cmp
loop
lods
push
mov
mov
inc
jge
xchg
pop
into
xchg
dec
mov
cltd
or
mov
jmp
jle
clc
stos
push
sahf
inc
clc
adc
push
shrb
cmp
mov
mov
lret
xor
scas
je
push
cmp
sti
cmp
leave
pop
out
and
ljmpw
cmp
mov
jbe
je
or
inc
dec
xchg
mov
jae
adc
and
imul
inc
test
push
mov
adc
lock
inc
ret
sub
pop
xchg
std
push
and
fdivs
jge
fs
out
movsb
mov
mov
outsb
es
ret
sti
and
inc
pop
mov
movsl
cs
orl
mov
lock
push
lods
or
lods
and
and
xchg
sub
insb
das
jns
movsl
std
jno
or
les
pop
test
jb
mov
pop
dec
arpl
scas
push
or
loop
cmp
cwtl
xchg
outsl
cs
push
sti
xchg
jg
andb
sub
mov
push
xor
in
adc
dec
mov
sbb
inc
mov
mov
dec
stc
jg
ja
dec
push
into
jb
jmp
stc
popf
sub
incb
mov
xchg
stc
cli
mov
xchg
xchg
stos
es
sub
add
sar
es
adc
and
cmpsb
std
out
fisubrl
into
mov
aaa
movsl
sbb
fs
lret
and
int
jmp
iret
or
fs
and
mov
ja
adc
mov
inc
dec
loop
mov
push
inc
aaa
xor
icebp
sub
push
jnp
xchg
pop
les
subl
inc
js
dec
mov
dec
arpl
lds
push
jmp
or
icebp
pop
jp
mov
mov
jnp
mull
mov
add
in
loop
pop
push
lahf
mov
fs
mov
dec
lahf
jne
fisubs
icebp
ret
pop
stc
xor
adc
cwtl
cmp
or
xchg
mov
xor
sbb
mov
xor
ja
movups
jecxz,pt
ds
mov
jno
lcall
imulb
test
dec
pop
cmp
or
out
lea
mov
push
jge
ds
lret
adc
jge
divl
fucomi
js
jnp
push
repnz
insb
jmp
insb
adc
pop
xchg
add
mov
adc
movsb
shrl
push
aam
mov
jp
aas
shll
mov
cs
insl
loop
sub
sub
sub
rcr
pushf
jl
loop
icebp
jnp
into
inc
imul
xchg
mov
inc
and
pop
in
lds
sbb
jnp
xrelease
aad
dec
push
jne
mov
xchg
jp
inc
js
cmp
or
mov
aam
lret
lahf
insb
arpl
mov
loop
mov
sbb
dec
idivb
push
jns
pop
or
sub
aad
pushf
mov
test
loope
movsl
inc
cmp
xchg
fidivl
adc
and
push
sti
xor
movb
stos
add
push
test
mov
pushf
sbb
add
xchg
rcl
pop
jecxz
dec
mov
lea
ja
mov
rorb
push
movsb
or
cld
jae
fidivrs
sbb
cli
std
iret
push
faddl
loope
jg
sbb
in
lea
mov
xor
pop
lcall
mov
push
xor
xlat
jmp
xchg
adc
in
test
lock
fmuls
xchg
push
loop
cmp
push
jne
fsubs
dec
lock
mov
mov
lret
jns
mov
mov
in
jno
xor
inc
jno
adc
xor
mov
or
cmpsb
repnz
in
mov
fildll
jp
pusha
shlb
ror
test
popf
xchg
xor
cwtl
int
adc
test
ficoml
and
pop
mov
in
dec
mov
inc
cld
loopne
outsl
mov
test
adc
fimuls
or
push
movsl
bound
mov
or
push
adc
ss
and
cmc
test
adc
mov
push
add
cli
mov
sub
js
jge
outsb
sub
pop
adc
and
jns
in
pusha
push
nop
movsb
sbb
mov
xor
xchg
pop
lea
fisubrs
mov
xchg
dec
or
test
outsl
inc
shll
dec
inc
shlb
sbb
fwait
mov
sbb
cmp
jae
add
mov
xchg
cmc
idiv
push
adc
sbb
xchg
lahf
scas
sub
in
push
fcoml
dec
mov
sbbb
dec
jo
enter
mov
mov
push
pop
mov
pop
and
sub
add
imul
pusha
loope
std
mov
sub
push
mov
push
xchg
push
mov
lea
inc
mov
les
inc
dec
xchg
or
dec
xchg
cmp
in
addr16
sbb
push
test
push
cmc
and
mov
movsl
lahf
cmp
aaa
daa
mov
aad
jl
adc
inc
xchg
ljmp
mov
mov
add
jl
jo
xchg
lock
sbb
iret
daa
pop
movb
pop
jo
mov
cmp
lea
loope
xchg
adcb
push
jmp
cmp
push
or
stc
cmpsl
into
add
pop
jg
std
sub
cmp
add
psrad
loopne
mov
push
movsl
add
pop
out
jo
pop
js
in
sub
aas
mov
jmp
nop
pop
js
jo
imul
adc
pop
cmp
push
loopne
dec
mov
cltd
push
pop
daa
inc
scas
pop
mov
inc
jle
or
mov
adc
jge
mov
pusha
push
dec
sub
icebp
fucomi
gs
ror
pop
dec
fcmovne
jae
test
fcmovu
lock
into
movsl
fisttpll
sti
je
clc
cmp
stos
div
cmp
inc
and
sti
adc
lods
call
or
mov
ret
push
mov
lcall
mov
pop
pop
test
adc
fs
push
jo
ficompl
imul
mov
xchg
dec
add
cs
pop
cli
dec
ss
mov
add
enter
push
jge
xor
dec
cmp
test
je
std
aaa
push
pop
fs
cmc
and
or
cmp
lret
aad
sub
mov
inc
out
into
cmp
mov
or
insl
incl
test
imul
xchg
ret
adc
insb
insb
jle
and
and
movsl
in
lahf
lds
mov
into
dec
sbb
jge
push
xchg
mov
dec
hlt
js
add
pushf
into
mov
out
or
lret
jo
dec
inc
mov
std
incl
jns
enter
cwtl
movsb
mov
mov
repnz
sbb
jns
cmp
outsl
jnp
js
jb
insb
inc
mov
sbb
cmp
mov
add
jge
bound
popa
push
out
and
leave
xchg
in
push
int3
sub
push
pop
xor
outsb
aam
sbb
jg
push
pop
lods
jo
ss
cmp
push
mull
jmp
push
sbb
sub
sub
mov
test
scas
addr16
sbb
cmp
pushf
mov
sub
repnz
mov
fsubr
orl
out
pop
testb
jmp
cmp
daa
push
lret
fwait
enter
fcoms
pop
scas
or
sbb
jae
cmp
dec
inc
movsb
cmc
inc
repz
mov
sbb
lds
sub
je
or
int
das
xchg
sti
shlb
and
fidivl
sub
add
mov
xor
jb
cltd
adc
pop
cmc
jnp
inc
jno
push
and
xor
mov
js
in
xor
loopne
insl
push
push
popf
dec
push
push
cmc
sahf
xor
sbb
test
inc
out
xchg
xchg
fnstcw
lods
cmp
out
or
pop
bound
daa
inc
mov
mov
ds
pop
inc
jp
in
add
neg
hlt
dec
jg
out
fistl
dec
sub
xor
or
add
mov
pop
dec
loopne
sbbl
add
xor
mulb
imull
push
repnz
and
add
lret
adc
rolb
xor
jg
fbld
inc
in
fld
mov
lods
jl
subb
add
inc
pop
pop
in
jmp
stos
gs
jge
add
lock
or
pop
lcall
adc
imull
add
mov
ljmp
cmpsb
xchg
out
popf
mov
icebp
lock
outsb
xchg
rcrb
pop
in
clc
cltd
stos
gs
inc
stc
aam
xchg
cs
scas
push
mov
ljmp
fwait
jge
ret
xor
std
mov
inc
fwait
test
test
divl
sar
add
or
sbb
popa
lock
add
dec
xor
mov
rorl
mov
sbb
push
fbld
adc
imul
inc
fisubrl
mov
popf
insb
fstl
and
sbb
repz
or
push
add
and
leave
in
popa
jl
mov
aam
sbb
call
arpl
in
repz
leave
sahf
fistpl
aas
push
jge
dec
lret
sbb
sahf
push
stc
mov
adc
addb
es
jne
adc
push
cmp
ja
xlat
movsb
sbb
dec
jle
mov
dec
mov
cwtl
push
out
push
int
or
movb
rcl
pop
lds
dec
arpl
jbe
cmpsb
jecxz
into
idivl
adc
loope
aas
push
out
hlt
mov
add
dec
cwtl
xchg
lret
dec
xor
stos
xchg
add
in
cmp
fdivr
mov
jae
xorb
push
sbb
sbb
add
xlat
pop
call
pusha
add
test
clc
rorl
out
daa
inc
lds
mov
or
lods
repnz
sub
mov
movsb
jnp
add
divb
pop
mov
dec
popl
lahf
cmp
push
sahf
push
cmp
aad
inc
sbb
lock
mov
popf
jp
gs
inc
in
stos
jno
test
add
mov
outsb
popl
adc
dec
das
int
mov
xchg
jnp
fiaddl
jae
mov
cmp
sub
idivb
aam
add
cwtl
mov
ret
into
mov
jle
shll
lahf
daa
jae
mov
pop
cmpsl
dec
mov
notl
sti
jl
push
data16
sbb
mov
fmuls
pop
roll
inc
cli
pushf
movsb
adc
popa
or
xchg
stc
ss
mov
mov
push
dec
adc
fsubrp
and
mov
hlt
or
scas
mov
pop
pusha
mov
sub
stos
mov
push
push
lret
int
pop
ret
mov
or
out
test
popf
push
mov
test
adc
jecxz
inc
ljmp
inc
fbstp
adc
push
movsb
lods
movsl
fidivrs
sbb
in
xchg
hlt
push
mov
repnz
xchg
dec
xchg
pop
cmova
jb
dec
icebp
or
sbb
mov
add
rcll
xchg
and
sub
imul
add
dec
call
add
sub
shr
sub
adc
jb
ret
adc
push
in
lret
fistps
mov
push
sbb
or
sbb
pop
push
test
jne
mov
in
pushf
fistpll
mov
sbb
addr16
js
pop
in
icebp
xchg
shrb
adc
add
sbb
push
dec
mov
push
inc
push
adc
or
daa
in
jmp
mov
sahf
or
popf
cmp
pop
jo
cli
das
arpl
mov
ficomps
mov
imul
outsl
pop
icebp
out
dec
mov
rcr
in
pop
jo
jg
sbb
mov
xor
pop
or
xchg
and
lret
jae
lret
std
fimull
cmpsb
push
push
daa
inc
imul
call
adc
popa
mov
pusha
loopne
dec
in
incb
sub
add
ja
mov
fnsave
sbb
fwait
arpl
dec
stc
inc
mov
mov
add
popl
std
inc
jno
adc
scas
popf
dec
ror
sub
outsl
and
jle
daa
in
dec
xchg
mov
mov
xchg
push
push
and
dec
jne
mov
stos
in
push
jp
cmp
testb
mov
shrb
jb
shl
jl
sarb
mov
fistpl
mov
fmul
xchg
cmpsb
lods
and
inc
fadds
das
inc
sub
ret
pushf
sub
mov
jp
dec
or
mov
push
aaa
sbb
lods
xor
sbb
scas
xor
cwtl
imul
jo
xor
or
aaa
cli
aas
or
add
pop
das
mov
arpl
std
sub
leave
mov
sbb
and
stos
test
stos
and
sub
cmp
dec
jbe
xchg
insl
mov
push
push
mov
ret
leave
sbb
jp
lcall
adc
loop
xchg
testl
jns
sbb
or
fbld
dec
int
sbb
fs
adc
jne
xor
jge
fs
pop
push
push
data16
xor
jbe
or
scas
pop
cmp
sbb
and
jle
add
inc
and
pop
repnz
and
add
sbb
cmp
jne
rcrl
sahf
jnp
insl
lret
mov
jmp
or
adc
aam
push
sbb
hlt
lahf
sbb
inc
lahf
mov
pop
mov
push
mov
adc
loop
shll
xchg
mov
bound
pushf
mov
dec
loope
lret
sbb
gs
cmp
mov
bound
sbb
cmp
fwait
or
pop
xchg
adc
lahf
test
repz
fldt
sub
xor
mov
push
xchg
ret
fadd
lock
mov
jb
rclb
int3
pop
push
mov
in
sti
inc
mov
add
mov
out
push
jae
lds
pop
lods
sar
sbb
in
das
sbb
xchg
push
shl
xlat
cwtl
and
cmpsb
fucom
mov
fcoms
push
xor
jb
sti
push
in
jns
bnd
mov
add
push
sarb
jb
rcrb
or
push
clc
adc
lret
sub
adc
xor
push
inc
pop
rorb
das
mov
mov
sbb
push
lret
cld
push
popf
add
mov
jmp
push
inc
rorb
aad
xchg
out
pop
cmp
aam
xchg
dec
mov
or
mov
daa
loope
lahf
les
cwtl
add
sub
fsubs
jmp
adc
lcall
sub
outsl
push
in
loopne
sub
inc
test
test
inc
cli
dec
inc
out
sbb
xchg
xchg
sbb
and
push
in
mov
pop
jbe
or
ret
push
pop
gs
shl
insl
jae
jns
bound
sub
xchg
cmp
mov
pop
test
out
jp
stc
mov
test
std
inc
imul
add
cltd
pop
idiv
out
lock
bound
gs
push
fisttps
nop
cmpl
stos
iret
cmp
or
shll
add
pop
cmpsb
pop
push
ficoms
out
adc
and
push
mov
mov
or
adc
sbb
inc
sbb
mov
ss
enter
jp
pushf
scas
roll
sub
mov
sub
mov
movsl
lcall
int3
icebp
pop
sub
fmul
sub
aaa
mov
mov
mov
arpl
dec
cwtl
ljmp
dec
mov
mov
add
add
ret
add
push
xor
fs
cmp
xchg
or
mov
sti
xor
pop
jo
daa
pop
mov
pop
repz
lods
cltd
test
xchg
and
xlat
push
js
jl
popa
sbb
shll
xchg
jae
movsl
or
in
cs
in
jle
cmp
jg
push
movsl
sub
push
iret
lock
ficomps
mov
roll
lcall
clc
mov
mov
sbb
enter
or
nop
jmp
xor
mov
sbb
mov
test
mov
loop
iret
aam
negl
mov
pop
xchg
call
cltd
add
repz
fstps
add
jo
push
ret
das
and
inc
push
shl
xchg
pusha
jns
outsl
mov
cmpsl
adc
sub
popa
es
xorl
lret
cs
rcll
inc
sbb
xchg
mov
les
shlb
sbb
pop
loope
mov
and
jle
and
lds
inc
xor
sbb
sub
pop
dec
in
inc
dec
inc
mov
mov
lea
andl
mov
loop
pop
dec
cmp
call
or
daa
lahf
ja
or
test
push
jge
mov
in
fisttps
ds
ficoml
mov
xchg
jne
out
mov
pcmpgtw
das
testb
sarl
nop
js
stc
sbb
loopne
bnd
lds
cmpsl
or
divl
data16
in
sbb
pushf
sbb
push
xchg
into
mov
sti
inc
jp
jo
mov
adc
add
cli
adc
fwait
fsubl
test
test
sbb
sbb
adc
inc
push
gs
aad
fadds
mov
loop
stc
mov
jno
or
scas
dec
mov
setle
enter
std
pusha
push
xchg
jp
jge
cmc
addr16
in
dec
add
mov
sbb
dec
sbb
aad
sbb
outsl
pop
fistl
add
mov
lods
stc
scas
fistps
jecxz
xor
xchg
cmp
adc
ret
stos
incl
lahf
and
inc
add
jns
and
mov
scas
or
lar
push
sub
les
mov
jne
or
les
xor
leave
and
out
leave
push
leave
shrb
seto
dec
sbb
add
lret
xchg
mov
pop
inc
mov
pop
mov
sbb
dec
mov
sbb
or
jl
dec
pop
shlb
fdivrp
gs
lcall
lahf
sub
js
cmpsb
add
push
inc
sub
in
pop
xor
test
testl
or
add
int
popa
mov
mov
inc
add
mov
inc
hlt
dec
pop
les
cs
xchg
mov
sub
loop
mov
inc
sub
sub
xchg
scas
xchg
ficompl
cmpsl
sbb
out
mov
test
xchg
adc
push
jnp
mov
push
stc
cmp
jb
mov
cmp
mov
cmpsl
mov
negb
or
loopne
in
sub
or
push
jae
push
sbb
sub
pop
dec
inc
xlat
test
fwait
add
push
push
sbb
mov
ljmp
or
roll
out
int
dec
mov
jecxz
sbb
dec
pop
sbb
ret
inc
test
xchg
xchg
test
div
sbb
xchg
in
cmp
cmp
mov
mov
xchg
aam
cs
cmpsl
lcall
pop
pusha
pop
icebp
xchg
inc
jecxz
cmc
push
stc
mov
push
or
sub
rcl
and
dec
mov
pop
movsl
addr16
ret
xchg
aad
inc
adc
pusha
mov
andl
outsb
jnp
dec
pop
sbb
sub
sbb
test
dec
jb
jno
loope
gs
outsb
lret
vpmaxub
sbbb
inc
mov
push
pop
arpl
and
popf
mov
xchg
int3
or
shl
jae
in
xlat
inc
pop
pop
scas
out
hlt
jae
add
in
and
cmp
jbe
divl
inc
push
test
insb
test
imul
inc
xchg
or
loope
and
fildl
mov
adc
inc
push
ljmp
jne
sub
sbb
mov
vorpd
mov
push
mov
adc
or
loopne
add
test
fldenv
sbb
sbb
sarb
jl
paddusb
out
imul
xchg
xchg
dec
pop
pushf
mov
aam
leave
sub
fcomps
iret
push
mov
scas
mov
xchg
push
movsb
sbb
fimull
dec
scas
jecxz
cwtl
fisubl
outsb
add
lahf
xchg
ja
pop
outsl
jne
lods
adc
pop
xchg
mov
dec
xor
mov
xchg
leave
mov
test
leave
adcl
imul
jae
lods
std
mov
int3
jecxz
aas
inc
stos
jg
mov
and
cmc
jno
xchg
cmp
jns
mov
notb
test
add
dec
in
pop
xor
pop
mov
iret
dec
inc
dec
pusha
push
and
xor
cmp
xchg
cmpsb
or
cmp
mov
shrb
int3
sub
xor
mov
outsl
cmpsl
stc
outsl
ja
cli
gs
pop
arpl
mov
pop
orb
mov
mov
stos
lret
enter
xchg
xchg
leave
filds
pushf
xor
repnz
sub
dec
test
arpl
ror
inc
into
sbb
fsubrs
repz
sub
pop
fsubl
add
jbe
ret
inc
sahf
js
pop
rcrl
inc
inc
and
fnsave
pop
fcos
test
jmp
push
outsb
inc
sub
cltd
scas
cmpsb
add
sbb
punpckldq
pop
adc
push
out
pop
lds
adc
fistl
std
gs
xchg
dec
outsb
mov
push
sti
sbb
fbstp
and
call
adcb
fadds
push
out
adc
sbbb
xchg
adc
push
add
cwtl
push
pusha
loopne
add
mov
mov
jle
jno
leave
in
jle
xchg
test
inc
xchg
rcll
add
test
mov
mov
xor
pop
push
inc
jle
jns
in
sbb
and
shl
fcoml
sbb
clc
push
add
sbbb
add
pop
int
dec
rep
push
ja
add
es
in
lds
or
hlt
xor
jo
js
adc
mov
sbb
movsb
std
fidivl
in
jo
mov
mov
out
push
push
or
jne
mov
fistl
stc
jl
pop
ja
iret
jnp
dec
sbb
pop
test
lock
push
push
pop
lcall
setle
fdivrs
xlat
add
mov
int
cmp
js
push
pop
xchg
sub
pushf
aam
push
cmc
add
daa
stc
mov
aas
xchg
mov
pop
mov
rclb
inc
and
or
scas
cwtl
mov
cltd
ja
push
xlat
aas
dec
iret
adc
add
push
adc
sbb
je
mov
mov
xchg
pushf
stc
andb
adc
xor
rclb
pop
xchg
mov
cmp
call
jle
out
test
pushf
adc
mov
dec
or
or
dec
jb
nop
xchg
pop
int
fildll
dec
sbb
inc
xchg
repz
test
out
daa
movsl
lar
cmpl
lock
pushl
jnp
mov
lock
fnstenv
ljmp
mov
and
shrb
mov
mov
out
lods
sbb
fidivrl
jnp
in
mov
rcrl
arpl
or
xlat
std
lret
mov
pop
or
in
inc
inc
cmp
cli
test
das
add
addr16
mov
iret
mov
in
fucomp
rcl
fdivr
mov
mov
stos
sbb
cmpl
aas
pop
stos
jnp
popf
inc
sub
test
xor
fbstp
in
notb
mov
fldt
sbb
hlt
loope
outsb
inc
sahf
push
mov
clc
lret
and
out
add
sahf
add
out
loopne
cmpsl
jno
xor
sbb
rol
cmp
push
int
lea
subb
repnz
pop
sub
insl
ja
add
aaa
dec
cs
mov
pop
mov
cs
mov
adc
dec
scas
mov
in
jo
in
clc
rorl
lods
mov
loopne
std
bound
push
sbb
mov
inc
mov
sar
ss
nop
scas
push
pop
lods
imul
stos
out
arpl
mov
and
mov
jecxz
lahf
insl
loopne
sbbb
addr16
xchg
out
popf
or
pop
push
jbe
pop
push
popf
imul
je
and
xchg
clc
lahf
insl
inc
testl
mov
test
add
lret
cmp
addr16
js
ljmp
stos
push
lcall
add
push
sbb
push
adc
xchg
flds
insl
cmp
adc
cld
mov
jo
fstpl
add
mov
movntq
out
arpl
rcll
cmpsl
orb
adc
sarb
xchg
das
xor
cltd
mov
cmpsb
xlat
jb
adcb
test
mov
icebp
lock
xchg
jno
fisubrs
cwtl
out
lahf
call
xor
popa
fwait
int3
push
je
lds
into
inc
orl
xchg
mov
xchg
mov
pusha
sbb
mov
add
cmp
mov
push
xchg
push
xor
es
mov
rolb
xchg
outsl
push
fcmovu
pop
out
fistps
push
mov
jno
xor
clc
sub
rol
mov
jno
xor
jae
int3
inc
inc
xchg
ss
xor
fisubrl
fsubrp
inc
inc
roll
fmul
xor
xchg
mov
rcrl
xor
dec
lahf
add
adc
jl
cmpsl
cmc
out
lcall
or
push
or
sbb
mov
xor
push
sbb
push
jle
popa
xor
push
add
xlat
mov
push
pop
ficoml
insb
scas
bound
add
ficomps
sub
adc
mov
pop
jbe
test
and
xchg
fs
pop
push
out
repnz
or
dec
push
fstl
mov
mov
sahf
dec
repnz
inc
aam
mov
adc
scas
repz
inc
xchg
les
xchg
shll
mov
xor
inc
rolb
dec
and
aam
or
mov
cwtl
dec
cmp
adc
jns
stos
subl
loope
fwait
scas
pop
clc
outsl
repnz
int
mov
mov
dec
jle
or
addr16
sbb
dec
sti
push
outsb
and
mov
test
add
xorb
aam
xor
mov
push
mov
cmc
std
cmp
add
jne
mov
and
popa
test
sub
aam
inc
adc
lods
dec
imul
xchg
fnsave
fsubrp
out
ret
sbb
inc
mov
mov
into
push
pushf
das
inc
fucomp
xchg
push
shrl
pop
inc
adc
sub
xchg
dec
leave
daa
out
xchg
fsubrl
ret
repz
xchg
push
dec
pop
js
sbb
push
loope
inc
das
jle
sahf
mov
popa
outsl
push
jg
std
sahf
xchg
sub
cmpsb
cmp
arpl
and
loopne
stos
jl
arpl
sbbb
cli
push
mov
xchg
test
push
mov
and
push
sahf
hlt
jns
and
sbb
mov
mov
xchg
add
push
push
adc
push
pushf
or
ds
nop
dec
sbb
mov
enter
mov
out
push
scas
xchg
xlat
and
inc
sub
shl
jb
mov
inc
call
adc
inc
mov
inc
icebp
imul
mov
out
jg
mov
adc
adc
imul
out
xchg
insb
idivb
pop
aaa
jne
popf
pop
jns
pop
adc
fildl
xchg
push
push
sub
outsl
push
mov
lods
jae
out
inc
xor
jge
add
in
cwtl
adc
hlt
mov
enter
cmp
and
lods
mov
scas
xor
mov
or
scas
mov
pop
mov
pop
lahf
sahf
repnz
in
test
nop
xlat
or
out
adc
scas
adc
sub
or
adc
test
sbb
pop
mov
lea
add
xor
data16
dec
xor
push
movsl
jle
xorl
mov
lret
dec
and
orl
xchg
jnp
neg
xchg
and
xor
cwtl
add
es
lret
loope
add
xor
adc
xchg
lahf
xchg
inc
xor
push
pop
inc
mov
sbb
in
stc
shrl
imul
and
lods
pop
mov
repnz
idivl
rdpmc
pop
ss
icebp
sbb
data16
cwtl
push
lds
pop
mov
dec
cltd
push
xchg
orl
or
or
and
mov
out
mov
mov
out
sub
pushl
cs
cwtl
and
shll
fldenv
push
cld
dec
xlat
sbb
shl
add
or
xchg
cwtl
push
filds
fs
or
inc
add
add
xchg
pop
jecxz
push
lcall
iret
xchg
add
test
out
int3
int3
cld
push
dec
daa
xchg
xchg
pop
insl
inc
cli
imul
add
cmpsb
test
dec
xor
dec
push
cmp
sub
mov
test
daa
aas
cltd
sarb
sub
jno
out
ljmp
pop
add
adc
add
bound
and
sub
inc
lea
daa
sahf
mov
mov
xlat
sbb
popa
out
stc
mov
xchg
lds
adc
dec
out
out
adc
xchg
pop
out
dec
outsb
mov
xchg
testb
adc
je
sub
cltd
mov
pop
push
out
fisubrs
inc
std
bound
cmp
jb
xchg
ficompl
test
adc
or
jne
adc
xsha1
cmpsb
mov
sub
jecxz
imul
subb
dec
and
stc
repz
sub
insl
xchg
mov
pop
cmp
dec
jp
lcall
imul
loope
scas
test
insl
cmpsb
sub
mov
xor
sbb
lods
cmp
ret
xor
sahf
cmc
jmp
adc
sub
mov
inc
cmp
in
xor
mov
mov
insb
jns
sarb
add
adc
stos
gs
stc
jno
call
jnp
sub
inc
mov
pop
aas
ja
idivl
dec
mov
xchg
pushf
mov
pop
insl
mov
inc
mov
push
adc
ficoms
cmc
lds
xchg
dec
or
test
mov
mov
dec
or
sbb
je
testb
aas
mov
inc
mov
lods
clc
cmp
xchg
cmp
lods
fidivrl
sub
std
iret
in
sbb
loopne
jno
std
mov
dec
aas
addr16
lcall
test
xor
test
pop
mov
xchg
vmovups
ja
sub
shll
icebp
loop
mov
jae
pop
insl
ja
pusha
dec
sete
cmc
dec
pop
push
out
push
in
inc
scas
sub
pusha
pop
std
mov
pop
jl
xchg
dec
xchg
push
aas
sub
scas
xchg
arpl
aad
jns
push
pushf
mov
dec
pop
and
iret
mov
push
sbb
inc
movsb
mov
sti
lods
pop
movsb
out
mov
dec
ja
test
iret
sub
pmaxub
xchg
mov
sub
xchg
sbb
das
jns
sub
jg
imul
out
sti
cld
cltd
mov
out
dec
imul
mov
negb
mov
add
pop
ret
jo
push
xchg
jmp
shl
mov
mov
aad
mov
mov
mov
push
xchg
mov
cmp
cmp
xchg
mov
fcomps
pop
sbb
mov
sti
scas
enter
lods
sarb
add
test
sub
mov
ret
cmpsb
cli
lods
mov
les
popf
hlt
sti
jmp
push
test
mov
xchg
mov
insl
loopne
repz
dec
pushf
clc
jae
ret
pop
mov
xchg
sahf
add
test
pop
hlt
jle
insl
pop
jno
es
inc
and
cwtl
mov
popa
xchg
mov
arpl
add
out
mov
pop
out
inc
jle
or
shrb
mov
xor
testl
daa
dec
shlb
dec
jno
pop
inc
adc
cmpsl
push
push
push
push
sbb
mov
mov
pop
aad
jmp
mov
icebp
testl
shlb
adc
ja
js
push
mov
test
sub
call
ds
int3
inc
xlat
loop
sub
dec
xor
lret
ror
punpckhdq
or
xor
stc
arpl
je
jae
sub
jg
rcll
mov
dec
pop
jmp
andb
pop
int3
fildll
mov
dec
mov
rcrl
push
enter
and
xor
movsl
xchg
int3
popf
and
sbb
rclb
mov
fistl
mov
fdiv
jg
lcall
out
lods
dec
pop
inc
sub
imul
inc
jmp
loope
je
add
aam
xchg
xchg
in
repz
or
aad
mov
aas
sbb
xor
pusha
imul
pop
je
inc
test
insl
mov
push
out
mov
call
jae
cmp
pusha
icebp
adc
xchg
mov
sub
sbb
int3
dec
inc
sbb
xor
cmc
dec
and
imul
jmp
push
leave
imul
adc
dec
cltd
mov
movsl
lahf
push
and
xlat
in
mov
mov
mov
jp
repz
and
or
mov
push
push
ljmp
mov
sub
div
push
xor
addr16
mov
xor
jmp
fimuls
data16
xchg
sbbl
adc
xchg
adc
lds
fcmovbe
xor
sbb
mov
call
lahf
xchg
roll
lods
dec
inc
addb
pop
inc
call
ret
stos
lea
jmp
aas
cmp
push
adcb
mov
in
bound
add
cmp
pushf
fwait
div
arpl
faddl
sar
stos
push
fdiv
pop
or
jnp
pushf
movsb
stos
mov
dec
lods
inc
shr
subl
lods
inc
gs
sbb
mov
pushf
stos
xor
out
jo
arpl
mov
jne
loopne
out
movsb
and
fs
mov
and
mov
fadds
jl
insl
mov
aas
push
sti
mov
aad
jne
xor
inc
int
mov
adc
or
insl
mov
int3
cld
jmp
ret
or
mov
popf
cmp
add
push
cmp
je
ds
inc
faddl
insl
inc
imul
jmp
add
aad
adc
push
push
and
jbe
cld
shl
imul
push
pop
pop
inc
jg
out
jbe
fmuls
mov
sub
add
popa
cltd
adcb
in
or
icebp
roll
flds
xchg
pop
adc
xchg
cmp
cmp
pop
fwait
enter
or
es
pop
mov
mov
sub
es
loope
mov
push
aad
adcl
sbbl
mov
xor
movsl
or
xchg
subb
sti
mov
sbb
add
or
mov
xor
ss
cmpsl
jl
icebp
jge
sbb
in
push
and
pop
out
mov
pop
data16
xchg
or
sub
jp
ret
es
push
pop
mov
sarl
mov
int
xchg
adc
lret
aam
pusha
add
lds
in
fists
and
and
in
add
jno
or
jmp
rorb
adc
cld
adc
sbb
shll
in
fs
pcmpeqw
stos
popa
cmp
inc
in
jae
gs
xor
shl
popf
and
jp
test
mov
pop
outsl
jo
adc
and
xchg
mov
push
mov
mov
iret
jmp
out
and
fwait
push
or
rcll
sbb
pop
mov
push
aam
pop
int3
pop
xchg
pop
gs
or
cmpl
cmp
sub
and
aas
iret
inc
push
icebp
push
add
mov
pop
dec
push
cmp
push
sub
lock
xchg
stos
xchg
xchg
dec
cmp
pop
push
les
dec
loop
jo
ss
lcall
mov
movsb
shlb
shrb
and
xor
arpl
enter
rclb
aaa
mov
push
xchg
cmp
add
dec
mov
push
loope,pn
fadd
cltd
cli
sub
test
mov
pop
inc
test
sub
sub
lcall
fidivs
and
cmpsl
insl
pop
xchg
shll
je
bound
push
dec
pop
leave
test
popf
inc
xchg
shr
loopne
rclb
mov
and
and
lods
push
insl
jmp
xor
pop
jbe
sbb
inc
shll
push
sbb
popf
dec
mov
mov
icebp
lcall
pop
mov
xor
aam
mulb
and
xchg
shll
cld
cmpsl
jge
mov
jmp
adc
movsb
xorl
xchg
imul
xchg
mov
bound
ja
sbb
jl
add
ret
and
mov
mov
js
cltd
push
inc
fdivl
imull
and
jp
adc
xlat
push
sub
push
les
hlt
aam
push
push
push
sahf
dec
xchg
push
inc
jge
cmp
out
shl
jle
jge
lcall
adc
data16
popa
push
fistpl
movsb
call
and
rorl
add
push
cld
mov
call
xchg
and
movsl
inc
push
cltd
xorl
nop
mov
and
mov
dec
push
and
daa
repnz
adc
pop
push
pmulhw
fcomip
in
jae
stos
sub
adc
push
xor
mov
pxor
cmc
mov
ret
jl
lret
stos
cmp
stc
mov
lods
es
imul
add
sub
imul
xchg
jmp
jns
aaa
jg
sub
loop
loopne
mov
push
adcb
fpatan
jno
addr16
pop
inc
repz
add
xor
daa
mov
mov
andb
inc
mov
inc
lret
inc
imul
stos
mov
inc
fs
cmpsl
jae
xor
gs
ja
pushf
ficoms
roll
push
outsl
mov
push
inc
xor
lret
sbb
sbbl
fstpt
outsl
stos
jp
dec
dec
inc
add
xchg
cmp
mov
insb
pusha
les
stc
loopne
ja
hlt
enter
push
pop
roll
pushf
mov
insb
mov
arpl
pop
shr
add
push
sahf
mov
inc
dec
ljmp
js
lret
mov
sub
xor
popf
or
mov
neg
push
js
jp
das
pop
jle
lods
lret
clc
shr
out
mov
cs
es
out
mov
adc
push
mov
imul
das
ret
and
cmp
and
inc
push
je
sub
lret
fs
and
mov
out
mov
aas
push
lret
adc
sbb
sub
sub
aas
mov
push
xor
data16
das
ds
inc
push
or
jae
push
mov
inc
dec
inc
addr16
add
mov
lahf
ffree
jmp
xor
push
gs
test
mov
sub
mov
das
lods
aas
and
inc
std
jno
mov
stos
out
subl
repz
sub
adc
int3
dec
dec
cmp
test
push
xchg
mov
adc
sbb
outsl
pop
jl
pop
jno
sbb
leave
or
pop
in
test
xchg
call
push
or
scas
fsubrs
xor
push
in
insl
cmp
cltd
pop
dec
mov
sub
jns
mov
add
subb
dec
jecxz
fildll
ss
mov
pop
lret
dec
mov
push
stos
aas
fwait
dec
push
push
push
add
pop
into
sbb
scas
fdivl
sbb
xor
pop
dec
jno
fbstp
pop
lods
std
xor
mov
and
rorb
ret
pop
aaa
push
push
enter
cmp
add
lret
push
pushf
mov
mov
stos
pop
jge
adc
mov
cmpsl
pushf
push
sbbl
xchg
pop
jl
push
cmpsl
add
cmpl
mov
gs
aaa
and
dec
add
mov
aas
loop
loop
add
mov
pop
addr16
lods
std
cmp
and
daa
jg
mov
aas
adc
cld
mov
jb
adc
mov
in
mov
jbe
lret
xchg
insb
jmp
imul
push
push
inc
mov
inc
popa
jmp
imul
movsb
inc
daa
insb
test
mov
pop
push
dec
jne
mov
int3
fs
das
pusha
std
mov
mov
pop
push
push
and
fmuls
les
loope
xchg
cwtl
pushf
and
loope
jecxz
fwait
enter
test
and
daa
push
enter
testb
js
pop
sub
ljmp
arpl
fadds
sbb
aas
mov
jl
push
or
xor
enter
dec
ficoms
mov
aaa
xchg
dec
inc
xchg
aaa
dec
mov
movsb
loopne
inc
jecxz
and
cmpsl
xor
lods
aam
lods
cwtl
jo
lea
dec
out
xor
jg
pushf
shlb
mov
adc
loop
js
mov
push
cmp
popa
push
inc
adcb
inc
xchg
pop
movsl
adc
mov
ljmp
hlt
ret
shrl
arpl
inc
sbb
clc
decb
xchg
pop
xchg
and
push
add
ljmp
ret
or
mov
test
cmp
mov
and
fstl
push
dec
or
lods
cmp
in
pop
sbb
mov
xchg
shlb
push
add
hlt
pop
mov
negb
sbb
hlt
lahf
mov
sbb
stos
xchg
sub
mov
arpl
and
ficoml
fwait
and
rorb
or
pop
fwait
xor
xchg
lods
adc
push
test
pop
mov
outsb
shl
add
adc
hlt
insl
shr
mov
mov
push
cmp
bound
test
sbb
jp
pop
in
ret
cmp
jne
push
iret
lds
add
pop
sahf
ret
or
pop
leave
lods
or
shrl
dec
rolb
inc
imul
mov
sub
and
cmpb
and
jl
add
fcomip
push
add
lock
dec
test
jnp
jo
sti
pop
push
push
add
fisubrl
outsl
out
hlt
pop
int3
sbb
ds
aas
or
sbb
jns
cltd
push
pop
push
sub
and
adc
mov
push
push
cmp
xchg
pop
pop
mov
fildll
xchg
pop
int3
pop
push
push
push
adc
ja
xchg
dec
cmp
leave
out
adc
dec
or
hlt
jno
jns
xor
adc
jae
sahf
push
rcrl
mov
mov
push
out
ss
jmp
dec
out
xchg
mov
sahf
insl
mov
in
std
sbb
hlt
outsb
into
cmp
gs
mov
ror
jae
repz
les
mov
aaa
bound
push
push
sub
jne
mov
push
adc
stc
fnsave
xchg
mov
test
sub
aas
cmpsb
dec
adc
rorl
aaa
ljmp
pop
cs
add
ret
mov
cmc
or
sbb
mov
out
loope
pop
dec
sub
mov
insl
scas
push
or
push
push
sub
mov
jb
ja
ds
adc
incl
push
jbe
pop
mov
pop
mov
in
imul
add
out
mov
addr16
add
lret
ds
dec
out
nop
pop
pushf
mov
lods
pop
leave
xchg
hlt
sub
fwait
jmp
lret
sbb
jle
test
adc
clc
sub
fdivrl
mov
sbb
or
addr16
sub
fiadds
fisubs
jns
inc
mov
cmp
or
daa
ja
lret
xchg
ja
sub
test
lock
roll
fs
je
mov
mov
outsl
dec
popa
adc
pop
repz
cmp
ds
push
and
std
push
addr16
pop
ret
insb
mov
out
cmc
mov
jb
xor
mov
mov
insl
aas
sub
leave
push
dec
inc
scas
fsubrs
clc
scas
int
lock
push
mov
out
inc
jo
aaa
lret
mov
mov
aad
mov
shlb
aas
jb
int
shll
pushf
leave
ds
pusha
mov
xor
jno
mov
test
lret
add
iret
mov
sbb
dec
lret
iret
fadds
mov
loope
and
test
mov
push
addr16
test
mov
sarb
sti
int3
cmc
and
pop
js
xchg
ss
pop
jmp
clc
push
jp
sub
jb
xchg
cmp
inc
repz
inc
lea
adc
orl
jecxz
inc
push
mov
hlt
cld
sbb
scas
push
adc
inc
push
dec
mov
sub
pop
nop
add
push
popf
rclb
jbe
xor
jno
push
mov
dec
pusha
jae
movb
flds
cmc
popa
rol
cld
sbb
xor
ja
cmp
out
enter
jl
add
xchg
jo
pop
cmpsb
test
mov
push
mov
mov
ss
mov
das
cmp
in
push
jb
pop
rclb
ja
push
leave
and
pop
mov
pusha
cmp
mov
dec
ret
mov
js
dec
je
push
add
pushf
daa
gs
idivl
sub
sbb
xchg
pusha
clc
jp
stos
jns
jp
pop
lcall
out
mov
mov
ljmp
pop
xor
sbb
jo
jl
lods
inc
out
mov
lcall
jb
cltd
add
sub
popa
popf
jo
rclb
pusha
pusha
fisubl
cmpsl
je
push
cmp
pop
inc
mov
fadds
jp
fsub
lock
sub
cld
push
xor
int
scas
jecxz
mov
pop
xchg
jg
push
xchg
mov
test
push
outsl
push
dec
mov
jne
sbb
mov
fwait
icebp
sbb
adc
sbb
mov
ja
out
mov
and
mov
pop
push
pop
outsl
or
cwtl
scas
mov
pop
push
pop
mov
cmc
lds
xchg
dec
dec
xor
jae
addb
mov
lret
repz
push
xchg
cmp
sub
jns
or
je
inc
sbb
ds
mov
das
repz
fistps
je
mov
rorl
xchg
mov
test
addl
pop
jo
mov
pop
testb
lret
and
scas
or
mov
nop
mov
dec
aas
jl
das
and
add
cltd
push
scas
xchg
hlt
nop
xchg
xor
inc
xchg
fiadds
scas
dec
xchg
inc
and
sub
inc
mov
or
mov
jle
cs
int3
fdivs
and
insb
pop
dec
in
movsb
and
sbb
lea
xor
push
out
cmp
dec
imul
xchg
shrl
test
push
ss
mov
jo
add
pop
mov
hlt
cmp
aaa
push
cwtl
out
mov
cs
mov
cli
add
mov
mov
cmpb
jge
outsl
xor
sbb
add
daa
adc
add
dec
pop
adc
sahf
mov
outsb
pop
mov
js
jae
sub
int
adc
pop
sarl
cmc
test
mov
push
dec
jae
mov
scas
sub
bound
dec
rcll
lcall
jo
jge
push
aas
mov
repz
cmp
and
inc
std
cmp
add
gs
cmpsl
cmpps
jb
es
dec
and
ljmp
outsb
mov
push
pop
xchg
push
add
jle
cmpl
pushl
or
mov
push
cltd
pop
or
loop
test
dec
int3
jnp
imul
cmp
inc
pop
movb
aaa
push
das
cmpsb
aad
stos
iret
mov
into
add
inc
pop
cmp
ja
js
insl
dec
adc
addl
fistpl
mov
popf
movsb
xor
int
xor
xchg
mov
sbb
mov
stos
jo
push
inc
repz
outsl
mov
mov
push
int
aas
cltd
sub
mov
xor
sbb
in
cmp
data16
fcomps
repnz
lods
dec
shlb
stos
mov
dec
push
lret
cli
or
ja
mov
or
lret
lds
test
rcrl
mov
cwtl
xchg
imulb
adcb
mov
and
push
mov
inc
scas
popa
aam
daa
sarb
mov
pop
dec
cmp
out
movsl
adc
stos
aaa
dec
lret
pushf
push
mov
test
sub
mov
pop
jnp
adc
jo
std
popa
cmp
and
or
neg
dec
lidtl
xor
xchg
cwtl
or
inc
mov
inc
xchg
xor
cmp
push
add
cmp
aas
add
cmp
adc
pop
lods
ja
cld
mov
jl
xlat
sbb
xchg
scas
je
pop
add
sub
or
xor
pop
fbld
lock
or
loopne
jne
and
or
icebp
or
jo
cmp
popf
adc
cmp
lahf
lea
and
push
addl
jecxz
push
cld
adc
les
jb
pop
sub
xchg
es
adc
sub
xlat
xchg
aas
cmp
test
and
push
push
scas
sbb
push
adc
jne
insl
dec
imul
stos
out
sbb
lods
xor
clc
jae
mov
out
mov
and
jmp
pop
stc
insb
jg
push
inc
test
jmp
mov
mov
pusha
mov
pop
or
pop
sub
xchg
lods
inc
insl
sub
xchg
add
fldl
add
push
mov
and
sahf
daa
fmuls
outsb
inc
je
pop
mov
call
loopne
arpl
scas
aam
cmp
jl
jmp
repnz
lahf
inc
jb
and
sti
mov
aam
mov
pop
and
sbb
jo
push
push
dec
dec
inc
adc
int3
add
xchg
gs
test
mov
clc
mov
add
ret
mov
push
scas
xchg
xor
mov
mov
and
dec
addb
cli
std
shlb
int3
sub
repnz
mov
jnp
jmp
fwait
cmc
jne
daa
lods
xchg
push
andl
inc
rolb
lock
push
insb
ds
ds
outsb
adc
jbe
sbb
insb
ljmp
sub
lret
pushf
int
clc
sbb
stc
inc
loopne
inc
pushf
je
stos
loope
jmp
mul
push
adc
push
and
shl
cltd
add
loope
jnp
lock
fcomip
int
jge
push
adc
and
les
mov
es
addb
mov
into
cmpsb
push
inc
jecxz
pop
mov
jl
aad
stos
mov
idivb
out
pop
sub
xor
mov
cmp
push
das
sarb
xchg
dec
fdivs
andl
fnstcw
cmp
stos
fmull
data16
add
sbb
or
fnstenv
jnp
aas
cltd
pop
sub
sahf
dec
mov
and
mov
push
inc
stos
xchg
adc
push
xor
push
aam
add
pop
mulps
jmp
test
aas
cmpsl
push
dec
das
jle
or
fldcw
sbb
hlt
insb
dec
pop
or
jl
add
and
mov
or
sub
mov
jne
dec
and
add
push
sbb
sbbb
push
cmc
xchg
push
or
sub
push
test
shl
jle
sahf
loope
insb
cmpsl
ja
xor
xchg
das
pop
push
mov
mov
scas
and
cld
iret
or
test
sahf
cmp
push
aad
int3
outsb
int
cltd
je
mov
adc
fldl
insb
and
pop
cmc
lods
or
es
cmp
daa
out
hlt
xchg
movsb
cltd
push
mov
insb
imul
scas
pop
inc
mov
popf
push
push
aaa
inc
gs
in
sbb
loop
addb
inc
js
js
aam
dec
mov
lahf
push
pop
adc
or
cmp
or
idivb
sbbb
mov
inc
xor
lock
mov
lods
stc
xchg
mov
push
rcrl
pop
out
cmp
adc
inc
movsl
sti
in
sahf
je
pushf
cltd
mov
pushf
je
push
insb
dec
outsb
loopne
adc
fwait
inc
push
mov
iret
js
fwait
sub
xchg
adcb
or
mov
push
inc
mov
and
inc
xor
scas
mov
mov
xlat
jb
mov
mov
cltd
adc
add
mov
loopne
xchg
cltd
rcrb
rcrl
xchg
sub
ret
cmc
fistps
ret
xlat
sub
mov
jge
mov
mov
add
and
cli
int
inc
xchg
daa
mov
xchg
enter
add
jbe
les
add
or
push
jge
adc
and
lcall
sub
adc
push
mulb
js
std
shl
adc
jecxz
pop
cmc
jp
aaa
in
adc
push
mov
stc
push
adc
imul
cmp
xor
mov
push
xor
push
pop
enter
std
or
jge
imul
or
dec
int3
xchg
scas
mov
dec
insb
pop
pop
mov
jae
cmp
sbb
es
push
dec
data16
xchg
xchg
sahf
clc
add
lods
clc
lret
sub
pop
cmp
stos
pop
xchg
vmread
add
xchg
mov
xor
andl
jmp
fsubp
sbb
mov
mov
xchg
sbb
addb
fs
shlb
fs
je
mov
mov
iret
pop
pop
mov
mov
movsl
lahf
xchg
jns
test
xor
xlat
mov
and
ss
lcall
sahf
sub
pop
lret
pop
nop
inc
aas
mov
add
arpl
cli
xor
les
jp
push
rcrl
mov
rorl
paddusb
pushl
mov
movb
jg
add
divl
into
rcl
pusha
stc
ja
out
sub
loope
add
repnz
scas
sbb
push
movsl
das
inc
xadd
xor
xor
mov
adc
popa
dec
outsb
outsb
mov
mov
gs
cmp
imul
push
psubq
rep
sub
lret
sub
int
push
pop
mov
cwtl
mov
or
xor
cmp
fnsave
sub
sarb
pop
stc
mov
cmpsl
aad
leave
sti
daa
push
sahf
rcrl
pop
mov
stos
and
mov
inc
fists
lret
int3
or
div
or
dec
js
in
popf
pop
daa
lea
adc
cmp
repz
sbb
fsubrs
add
je
bound
push
pop
xchg
nop
shl
mov
sub
aaa
lea
xchg
jno
shll
or
jle
sbb
add
int3
dec
pop
fldenv
xchg
ja
xor
adc
mov
xor
cmc
movsb
xor
add
push
jnp
unpcklps
and
xor
cmp
xor
je
dec
cmp
cltd
xor
mov
ja
jp
and
mov
mov
scas
pop
lret
jg
sbb
icebp
mov
sar
in
fcoml
push
hlt
shr
scas
dec
test
mov
ret
cltd
inc
aas
out
or
push
clc
pop
in
das
mov
or
addr16
jg
add
int3
loopne
stc
or
cmp
xchg
arpl
sub
or
add
mov
mov
sbb
add
jae
cltd
mov
test
in
push
aam
fsubl
ja
push
pop
leave
xchg
push
xchg
jp
fadds
loop
pop
xor
dec
mov
pop
outsl
jl
mov
js
jmp
jg
jno
or
xor
jle
dec
push
or
sub
adc
jne
jecxz
push
push
xchg
movb
imul
repz
out
or
rcll
fmul
xchg
popa
out
mov
mov
inc
testb
ja
push
sbb
inc
lock
int3
fsubrs
mov
sub
add
add
aad
mov
xchg
mov
dec
or
pop
xchg
sub
mov
mov
repz
mov
notl
cmp
mulb
xchg
xchg
sbb
adc
jle
or
and
add
push
push
insl
popf
dec
rorb
out
mov
xchg
out
push
stc
sub
aaa
xchg
inc
mov
jp
sub
cmp
call
inc
xor
ja
stc
jns
push
push
mov
xor
jo
rcr
and
push
inc
and
in
je
imulb
enter
lods
in
rcll
xchg
adc
fwait
lea
cmp
sub
xor
sub
dec
xchg
sti
movsl
xlat
push
inc
dec
sub
stc
sub
fistps
push
dec
outsl
call
jp
nop
ds
add
jecxz
xchg
stc
push
jge
cmp
cmpsb
jmp
lcall
test
inc
fwait
mov
test
push
divl
fucomp
hlt
loope
sbb
outsb
pop
stc
mov
loopne
sbb
xchg
movl
stos
mov
inc
ret
loope
sub
icebp
fwait
mov
xor
lret
sbb
dec
cs
pop
je
in
movsl
mov
inc
mov
cs
loop
fidivl
add
pop
mov
sbb
xchg
lock
imul
jns
bound
lds
push
es
jae
outsl
xor
popf
rorb
mov
xchg
shll
sbb
adcb
subl
or
add
xorl
aas
inc
dec
cmpsb
pop
mov
or
in
cli
je
or
cwtl
and
out
rorl
or
dec
aaa
into
xor
xchg
mov
push
je
imull
inc
icebp
popf
xor
sbbb
dec
mov
mov
adc
popl
clc
sub
mov
cmp
andb
xor
xchg
inc
and
and
lahf
lds
pop
xor
lds
jl
xorl
inc
in
xchg
and
xchg
push
insb
push
mov
push
addl
push
int
icebp
jb
movsb
xchg
rcl
mov
mov
cwtl
add
test
mov
inc
lret
cmpl
stc
out
cld
nop
sub
mov
xchg
xor
sub
sbb
xchg
cmc
inc
sahf
sbb
pop
push
or
mov
insb
xor
push
jne
cmpl
call
out
mov
cmc
jg
sbb
sub
loopne
pop
lods
mov
insl
lcall
jl
inc
popf
hlt
cltd
icebp
sbb
push
popa
das
pop
xor
jg
in
out
sbb
push
out
push
in
inc
cmp
cmp
imul
cmp
jnp
mov
inc
push
orb
idivl
cltd
dec
pop
xor
shl
ret
clc
dec
cli
xlat
sub
push
sbb
cli
scas
adc
in
jne
addl
sbb
mov
aad
push
jns
sub
outsl
fadd
push
mov
mov
push
mov
adc
jle
insl
jg
insb
inc
fs
test
je
and
test
clc
xchg
cmc
mov
xchg
shr
add
jmp
sbb
out
mov
jmp
jae
push
adc
pop
push
shll
outsl
adc
dec
loop
mov
mov
cltd
add
rcrb
push
stos
push
inc
psraw
insb
sub
test
jge
jno
inc
stos
add
mov
addl
push
mov
push
sti
decb
cmp
ja
shlb
add
ret
pop
sbb
inc
cmp
cld
loope
rcrb
icebp
sub
test
and
jae
gs
movsb
cmc
outsb
sarl
jb
cmp
out
push
or
dec
cmp
xchg
repnz
ljmp
or
pusha
add
daa
es
sbb
repnz
imull
out
xchg
fldt
dec
push
call
mov
iret
push
fistl
repnz
rclb
or
ret
std
test
and
mov
bound
and
cmp
call
loopne
aas
lcall
ss
adcb
ficomps
xchg
lea
lock
sarl
imul
xchg
push
pop
inc
pop
xor
lds
lock
mov
fisttpll
sarb
cli
das
mov
scas
psubq
add
dec
fs
in
inc
dec
icebp
inc
movsb
subb
ds
negl
pop
pop
xor
pop
and
pop
cmp
data16
loop
push
jnp
jle
mov
jnp
sub
testb
sub
gs
divb
fsubr
test
add
jmp
cmp
cs
ret
xlat
mov
push
xchg
fldcw
adc
and
ja
ja
mov
jbe
gs
fsubr
sub
mov
pop
mov
rolb
jo
out
scas
fisubrs
push
xchg
xchg
jnp
push
pop
cmpsl
icebp
xor
or
mov
daa
dec
jp
add
jbe
mov
ss
lahf
mov
sub
lret
mov
pop
movsb
insb
pop
arpl
fstl
es
jnp
lods
mov
cmp
fwait
cmpsl
lea
pop
jmp
lret
or
xor
lds
into
mov
shr
pop
push
and
mov
pop
add
mov
or
mov
xor
mov
sbb
jl
fadd
cmp
xchg
pop
jae
jle
mov
push
mov
pop
push
sub
push
test
xchg
stos
in
fwait
aam
xor
mov
sub
cmp
stc
mov
push
imul
pop
lret
xor
stos
ret
insl
xchg
test
push
pop
lahf
in
icebp
push
les
jns
add
fcmovnb
stc
mov
mov
jae
push
adc
push
mov
dec
out
push
neg
ret
in
lods
out
nop
dec
or
jl
mov
push
push
incl
nop
cwtl
and
popa
lods
jle
ja
xor
mov
shl
jne
and
add
dec
mov
add
flds
mov
aam
addb
shlb
xchg
je
push
sahf
fnstcw
inc
test
lret
stc
dec
arpl
mov
loope
popf
out
imul
lcall
add
xor
cmpsb
fistpl
or
adc
mov
fs
pop
or
fnstsw
jo
xor
ljmp
out
lods
cmpsb
dec
and
and
dec
push
aas
sub
jae
jb
scas
sbb
stc
shr
rorl
out
push
imul
pushf
movsl
xchg
mov
adc
mov
addr16
add
xor
push
sub
pop
add
mov
stos
repz
out
add
jle
das
ja
xchg
mov
filds
adc
inc
inc
je
add
inc
xor
xor
sub
cmp
iret
int3
in
add
sub
xchg
mov
fnstcw
outsl
dec
pop
xchg
sbb
les
loop
lcall
stc
inc
sub
jge
jae
or
popa
push
lods
bound
orb
adc
or
xchg
push
xchg
bnd
mov
out
xor
add
mov
pop
lcall
pop
cmc
and
xchg
cld
pushf
mov
mov
imul
stos
mov
sub
sbb
loop
xchg
mov
xchg
sbb
negb
fwait
push
mov
jnp
jmp
pushf
dec
aad
push
adc
xchg
pushf
dec
mov
stc
ss
sbb
jp
inc
int
dec
add
xchg
pop
pop
jns
and
cmp
rorb
cmp
aaa
add
inc
adc
xchg
or
pop
and
push
int3
pop
or
xchg
stos
push
bound
push
mov
ffreep
add
dec
test
loop
ret
test
add
js
jne
dec
dec
mov
int3
dec
sbbl
mov
rcrb
ds
mov
mov
and
mov
push
mov
xor
ss
jb
cmp
cwtl
mov
scas
scas
dec
inc
and
mov
cwtl
mov
or
movl
pusha
pop
scas
jle,pn
xor
sbb
imul
cmc
add
and
les
sahf
dec
fcoml
imull
inc
out
xchg
dec
mov
adc
leave
mov
mov
mov
loopne
lods
in
lret
sbb
sbb
xor
adc
es
imul
mov
les
lea
push
push
movsb
scas
cld
xchg
fsubrs
xor
jae
mov
fidivl
popf
pushf
out
add
pminsw
mov
rclb
or
add
pop
mov
cld
aam
dec
add
push
mov
xor
mov
dec
pushf
jbe
inc
bound
std
mov
sahf
pop
dec
lahf
mov
je
pop
add
push
pop
mov
pop
or
jne
jns
pushf
fisubrl
mov
adc
movsb
mov
mov
enter
adc
jl
pushf
xchg
sub
fwait
andl
add
enter
in
les
aaa
fst
xlat
or
add
jns
mov
shl
mov
leave
lods
xor
nop
add
test
or
xor
ds
pop
fxch
ds
insl
jg
adc
out
jle
lds
aaa
xor
jge
out
jmp
movsb
add
mov
mov
imul
lods
loope
mov
xchg
mov
sub
xchg
mov
idiv
ljmp
repnz
in
jecxz
fbld
mov
shr
pusha
loop
mov
outsb
push
fs
xor
mov
out
pop
or
lcall
sbb
inc
hlt
inc
mov
sbb
pop
aam
pop
pop
inc
daa
mov
and
mov
sub
sbb
fdiv
dec
fists
mov
jb
cli
les
pop
lock
adc
push
hlt
jle
dec
jp
pop
roll
sub
xor
out
pop
sbb
cmpl
aad
aas
pop
dec
jo
and
jne
das
daa
mov
shll
or
cmp
sub
jbe
gs
ds
inc
or
fwait
in
dec
imul
loopne
int3
push
rcr
addr16
xor
sub
cmpsl
xabort
or
push
or
or
loope
xor
and
sahf
mov
cmc
call
out
jne
fs
adc
mov
cs
and
mov
loope
outsl
jnp
notb
jae
mov
fcmovnbe
pusha
sub
out
sahf
mov
adc
lods
jae
or
andl
mov
lds
out
sub
lret
lahf
push
subl
xorl
sti
cmpsb
lods
leave
jbe
in
ret
inc
addr16
jg
cs
lds
movl
jno
repnz
xlat
xor
sahf
stos
push
push
push
sbb
mov
stc
int3
stos
and
addl
mov
test
popf
scas
dec
adc
xor
mov
out
int
bts
loope
mov
iret
mov
sub
mov
fcoms
cld
inc
test
and
rol
xor
stc
adc
mov
pop
int3
xor
enter
and
jmp
lahf
rcr
pusha
mov
call
cs
scas
or
movsb
jae
sub
fstl
jbe
pop
inc
mov
sbb
shll
add
in
mov
and
sub
cmpps
int
pop
fisubl
nop
imul
pop
daa
lods
mov
mov
sahf
cmpsb
or
dec
insb
and
out
mov
adc
sub
pop
or
dec
sahf
mov
scas
sbb
mov
ja
loope
test
cltd
adc
shrb
and
push
pop
push
test
iret
xor
dec
dec
push
sbb
sbb
sub
and
jg
add
notl
inc
rcll
mov
xacquire
arpl
dec
mov
test
sub
adc
fbld
adc
adc
loope
inc
xchg
stos
cli
movsl
subb
adc
mov
popa
jmp
or
jmp
jno
test
inc
push
add
adc
shl
push
pop
loop
inc
fwait
cwtl
pop
or
shrb
jnp
mov
movsl
pop
int
add
adc
sbb
xor
outsl
js
jno
mov
mov
pop
imul
sbb
and
mov
aas
test
sbb
xlat
and
jg
cltd
jbe
fcmove
cmp
dec
jl
cltd
lds
inc
mov
cltd
sbb
std
arpl
fsubs
push
and
mov
iret
or
dec
mov
lret
ss
add
lock
js
addr16
outsb
or
movsl
imulb
jge
lods
pusha
les
or
or
adc
sbb
jmp
push
sub
adc
sbb
fwait
roll
lock
stc
dec
into
cmp
idivl
and
aaa
add
xor
ror
test
mov
inc
mov
mov
adc
insb
inc
cmpsb
int3
test
lahf
orl
pop
xor
sbb
sbb
sti
inc
cmp
mov
popf
jg
lea
gs
cmp
and
aas
add
dec
add
dec
and
mov
addr16
addl
xor
test
fisttpll
scas
adc
push
shr
cmp
jbe
pop
mov
cmp
jl
xor
sub
push
xchg
je
adcl
xor
sub
mov
or
lahf
pop
dec
mov
gs
sub
xchg
pop
xchg
cld
push
jb
in
or
mov
pushf
test
xchg
push
jmp
loope
ret
out
pop
xchg
pop
test
mov
sbb
test
dec
fwait
pop
jo
es
dec
cwtl
movb
xor
xor
add
and
cltd
out
int3
test
call
push
movsl
sarb
sahf
aas
daa
subl
hlt
and
cmp
enter
dec
or
and
enter
xlat
xchg
lret
pop
aad
pop
aad
sbb
jg
xchg
bnd
pushf
cld
and
lock
xchg
mov
out
aad
mov
enter
add
mov
inc
int3
xchg
data16
inc
push
adc
inc
aad
sbb
sub
jbe
inc
mov
in
inc
aam
mov
fcompl
inc
inc
stc
xorb
imul
hlt
fwait
enter
mov
jnp
iret
ss
xchg
xor
jbe
imul
fldl
out
cmpsl
jnp
jnp,pt
pushf
cmp
sub
mov
bound
das
inc
popa
mov
rcl
insb
pushf
pop
jnp
or
loope
loope
push
jae
inc
imul
inc
pushf
daa
pushf
ret
movsb
push
pop
pop
mov
pop
sarl
xor
sbb
imul
mov
xchg
js
int3
pusha
lea
cmpsl
stos
adcb
jmp
adc
inc
cmp
or
decl
mov
outsl
mov
xor
inc
mov
mov
clc
pop
cmp
cld
test
jl
pop
loop
sbb
pop
sbb
les
leave
mov
out
add
fstl
lcall
mov
mov
fs
out
enter
aad
fsubrs
mov
pop
sahf
outsl
cmp
mov
imul
cwtl
rcl
aam
jne
xchg
or
test
clc
shlb
cli
ljmp
add
sti
aas
add
and
nop
jns
ss
mov
xchg
mov
enter
clc
lahf
fisubrs
dec
into
cmp
cld
nop
xor
cmp
or
rolb
popf
xchg
ja
add
in
int3
push
xchg
lock
mov
fsubrl
mov
cmp
fadds
test
pop
cmp
shll
and
ja
push
xlat
mov
jmp
mov
cmp
cmp
into
std
sahf
repz
jnp
addr16
bound
or
jns
or
adc
in
aaa
or
mov
jmp
lds
into
adc
sub
fsubrp
xor
fnstsw
xor
leave
cmp
sahf
rcrl
fwait
cs
and
outsl
dec
insl
sbb
out
inc
jae
add
aad
add
insl
jno
sub
xorb
pop
arpl
sbb
call
pop
mov
adc
dec
sub
scas
xorl
sahf
xchg
movzwl
movsb
dec
pop
jle
in
sbb
pop
mov
xor
enter
jecxz
repz
into
je
inc
xchg
jns
dec
push
out
and
jnp
jl,pt
and
popf
mov
sbb
mov
insb
ss
shlb
mov
shl
push
push
push
scas
adc
mov
inc
pop
push
xor
xor
in
cwtl
cmp
sub
cs
test
lea
test
mov
out
inc
mov
and
test
sbb
push
ja
jmp
mov
stos
fnsave
xor
cmp
mov
in
add
pop
je
pushf
cmpb
call
cmp
cs
ja
add
mov
pop
push
push
dec
sbb
test
pop
dec
fldz
adc
imul
jl
jno
xor
inc
outsl
das
shl
fs
fcoml
test
xchg
xchg
js
movb
les
mov
adc
dec
pusha
or
and
popa
xor
dec
fxch
imul
adc
or
pushf
xchg
adc
jmp
call
imul
mov
push
and
adc
cmp
or
cmp
adc
es
and
mov
stos
popa
cmp
pop
cmpsl
aaa
fwait
or
push
outsl
cmpl
or
mov
out
shlb
std
xchg
mov
out
xchg
lods
cmp
cmpsb
sti
cmp
shll
sub
loop
xor
mov
pop
xorb
je
sbb
rcl
sub
hlt
lods
pusha
aas
xchg
dec
enter
repz
dec
jno
jb
lret
inc
pop
and
push
xchg
mov
push
ljmp
or
pushf
outsl
cmpl
sub
cwtl
arpl
popf
push
mov
int
mov
cltd
or
add
pop
ss
shl
mov
rsqrtps
and
lret
notl
inc
pop
push
divl
dec
out
scas
movsl
cmp
jnp
xor
push
xor
add
nop
gs
xor
pop
sub
cmp
clc
mov
ds
or
sub
adc
dec
xor
mov
pushf
jo
popl
mov
rep
lret
decl
adc
mov
mov
leave
cltd
or
jg
push
in
loopne
popf
jle
subb
and
cmpsb
repz
stc
stos
cwtl
mov
movl
or
mov
push
je
lret
push
imul
push
int
jae
int3
push
jo
lods
ja
mov
scas
mov
les
testb
lahf
mov
pop
les
pop
or
pushf
daa
mov
sub
pop
repnz
in
andb
add
xor
cmc
div
loopne,pt
fiaddl
xchg
flds
push
mov
stc
sub
lods
xchg
xchg
jmp
mov
ljmp
mov
cwtl
xlat
repz
addr16
ss
imul
inc
loope
hlt
addr16
test
stos
pop
jl
add
inc
fists
ret
ljmp
xor
xlat
test
cs
js
aas
test
ss
fisubl
mov
fldl
push
sub
orl
fmuls
cmp
jp
dec
test
stos
push
sub
shlb
fwait
cmp
mov
inc
push
pusha
push
mov
and
mov
aaa
shl
jl
sub
cmpb
jno
leave
lock
lret
sbb
and
in
cltd
cli
ret
jns
and
pop
mov
mov
xchg
sbb
push
lcall
mov
mov
jl
mov
lcall
cmp
jl
out
or
mov
cli
push
pop
jno
cmpsb
fistpll
cmpsb
inc
inc
test
fadds
and
push
rcr
push
jno
add
xchg
push
sahf
jo
stc
mov
adc
push
xor
sub
sbb
pop
adc
sub
mov
shll
xchg
in
cmpsb
adc
mov
sbb
lock
loopne
pop
int3
aaa
mov
jecxz
dec
arpl
cmpb
cmp
jnp
jns
orb
xchg
test
popa
stos
out
subl
or
jns
mov
lret
movsb
or
sbb
push
aas
add
ds
or
adc
fdivs
cmpsb
xchg
add
bnd
sahf
mov
mull
arpl
lcall
call
cmp
imul
in
cwtl
orb
or
mov
scas
mov
out
sbb
test
jmp
lcall
and
rcrl
xchg
sub
popa
inc
out
mov
mov
or
fmulp
inc
dec
outsl
mov
xor
xchg
mov
fnstcw
xlat
scas
jg
and
gs
sbbb
mov
jle
and
jns
pop
sub
mov
fs
mov
mov
mov
ret
sbb
rcll
push
xchg
sbb
cmp
popa
icebp
push
jmp
and
push
in
mov
dec
repnz
push
add
xor
push
dec
pusha
fld
shll
stos
mov
das
cmc
fisttpl
or
daa
sub
pop
in
in
push
inc
lret
cmp
pushl
push
push
std
cmpsb
sub
ficoms
mov
push
inc
es
cwtl
jns
mov
in
rcl
clc
scas
mov
mov
shll
std
or
mov
mov
jg
int
das
sub
jbe
lods
testl
or
sbb
xchg
sbb
out
push
cltd
aas
je
insl
jbe
aad
jns
sub
pop
out
mov
xlat
mov
push
push
sub
mov
push
push
test
les
add
incb
lods
mov
subb
push
shll
test
int
add
lahf
test
pop
es
testl
lock
imul
cld
daa
dec
or
jb
call
jp
in
shll
mov
out
adc
mov
xchg
in
adc
icebp
xor
inc
js
scas
jnp
xchg
mov
test
mov
jnp
and
inc
cmp
js
xchg
xor
insb
sub
daa
stos
stos
pop
ja
xchg
scas
pop
xchg
into
sub
jbe
cmc
mov
push
pop
shl
hlt
cmp
xchg
xor
push
lret
int
fucomp
shll
sub
aas
imull
aad
or
loop
inc
mov
cld
add
pop
mov
dec
cmp
or
mov
imul
push
test
subl
mov
rcrl
add
daa
test
rcrl
cltd
movsb
daa
mov
cmp
or
add
movsl
adc
inc
pop
in
dec
push
loopne
jae
ret
and
and
int
movsb
inc
mov
mov
rclb
inc
imul
mov
jnp
or
insb
hlt
enter
lds
push
sbb
jb
mov
xor
iret
jg
scas
jg
jo
shrl
negl
divb
cmp
popa
fstp
add
fsubl
mov
out
mov
xchg
lock
cld
sub
cmpsl
sarb
add
push
mov
dec
fldcw
lods
inc
pop
stos
inc
adc
test
shll
add
filds
aam
pop
outsb
das
mov
push
dec
stos
fsubrp
mov
nop
lods
out
in
adcb
ja
fstpt
pop
js
test
sub
or
int
jg
stos
push
mov
adc
mov
cli
loop
daa
int
pop
aam
xor
test
or
mov
idivl
xor
popf
mov
or
xchg
popa
add
in
insb
adcb
pushf
lret
cmc
push
clc
fs
adc
xchg
aaa
cmp
dec
push
je
stc
dec
hlt
mov
mov
std
pushl
xchg
aas
shrb
nop
fidivs
imul
data16
push
jnp
divb
push
fdivs
stos
pop
sub
pop
shl
outsl
loopne
add
dec
dec
cli
push
mov
and
ljmp
mov
test
idivb
sti
inc
repz
dec
sub
aas
adc
mov
pop
pop
mov
mov
mov
lea
lds
jmp
mov
sub
xchg
xor
xchg
jge
cmp
sar
and
cld
ret
iret
cmc
push
push
push
jae
stos
mov
sub
dec
aaa
mov
inc
mov
jb
aam
ror
nop
rcrl
ret
sbb
daa
aad
incl
inc
outsb
xor
sbb
pop
and
push
push
xchg
mov
ss
xchg
xchg
dec
jle
divb
and
mov
xor
jno
dec
stos
pop
sub
sub
cld
push
mov
push
adc
adc
sbb
aas
arpl
dec
imul
mov
push
hlt
mov
jno
mov
push
loope
cmp
pop
dec
lea
stos
jb
xor
cltd
daa
push
and
pop
out
push
ret
in
ljmp
pop
inc
adcb
pusha
in
mov
aaa
lods
inc
insl
xor
sub
mov
pop
enter
retw
sbb
in
filds
and
cmp
xor
add
add
rcll
or
repnz
mov
rolb
ficomps
push
pusha
jae
imul
insl
addr16
dec
rclb
cmp
adc
scas
fcompp
lret
lret
scas
scas
sahf
loopne
pop
es
sbb
testb
push
loopne
or
mov
scas
imul
jne
dec
cmc
and
xchg
icebp
scas
daa
hlt
repnz
sti
jecxz
cmp
das
xor
mov
arpl
jg
jae
push
mov
jmp
xlat
sbb
repz
dec
shrl
xor
jo
rolb
rcrl
xor
fisttps
inc
out
dec
mov
jecxz
shll
popa
dec
adc
push
idivb
cli
imul
enter
lds
lea
mov
mov
mov
xchg
out
pop
mov
insl
cmpsb
add
call
cwtl
add
add
jmp
stc
jno
push
sub
nop
ja
fwait
adc
out
xchg
xor
xor
rcrb
js
sub
mov
pop
cwtl
imul
movsb
sbb
into
cmpsb
mov
pop
sbb
jl
xchg
and
sbb
cmp
rolb
ficomps
sub
sub
inc
aaa
add
mov
sbb
mov
notb
leave
sub
xchg
xchg
sbb
lods
fldt
pop
movsb
dec
fidivs
hlt
imulb
jmp
rolb
push
mov
outsl
xor
stos
pop
pop
xchg
jle
test
jnp
push
aas
aam
sbb
xlat
ss
push
dec
push
repnz
stc
cmp
in
dec
mov
in
pop
xchg
pop
les
xor
or
mov
add
cmc
mov
outsb
adc
jne
xor
inc
movsl
xchg
lcall
push
loop
je
lea
in
pop
inc
test
outsl
mov
int3
mov
js
stos
fisubs
add
jo
pop
ds
pop
xchg
adc
imull
sbb
adc
adc
fcomip
adc
loopne
clc
mov
decb
or
mov
dec
jo
fildll
mov
cwtl
leave
vpmacssww
lret
push
pushf
ror
cmpsb
mov
jg
out
iret
or
fwait
and
xchg
or
push
mov
push
daa
push
iret
jae
sbb
testl
aas
lock
and
fs
shrb
es
stos
push
mov
loopne
out
in
ss
push
pushf
fisubs
jne
xor
or
jecxz
xchg
mov
ds
cld
mov
mov
adc
mov
sub
pop
stc
jle
popa
inc
or
test
sbb
xor
xchg
mov
cwtl
dec
in
xchg
aad
leave
xor
push
mov
mov
pop
dec
stc
mov
rorb
dec
bound
mov
jle
sbb
fwait
or
cmp
cwtl
mov
in
cmp
leave
sahf
sub
jo
push
sub
call
stos
inc
pop
sbb
ljmp
mov
mov
xor
xchg
jne
lods
xor
adc
xchg
cmp
aas
sahf
pop
jo
jmp
cmp
popa
cmp
aad
xor
add
push
or
mov
dec
sub
ffreep
or
lcall
loop
mov
mov
jle
dec
js
cmp
dec
cs
mov
or
xor
push
fs
lds
xchg
movsb
roll
mov
js
lret
sti
pop
fimull
out
lcall
lea
pop
jmp
add
add
mov
adc
mov
lods
push
repz
out
adc
aam
in
sti
mov
lock
pop
fs
xchg
mov
jl
imull
inc
scas
inc
call
xchg
fnstsw
mov
mov
and
sub
adc
push
xchg
aaa
movsl
call
pop
pushf
in
rcll
xchg
jno
iret
xor
push
fsubl
scas
stos
in
movsb
and
inc
xchg
rcrl
movsl
jne
pop
pop
pop
sbb
neg
xchg
stos
sbb
sub
cld
pop
testl
xchg
call
repnz
jae
and
cmp
test
inc
loope
dec
push
je
in
jo
shll
aam
adcl
jb
int3
xchg
out
repnz
pop
or
adc
cmpb
loope
iret
jl
mov
lcall
or
adc
sahf
adc
jge
mov
jp
mov
pushf
ljmp
dec
sbb
test
xchg
xchg
add
rorl
inc
daa
push
pop
sub
mov
xchg
cmc
rcll
popl
lock
sbb
jle
fnstcw
mov
ret
mov
sbb
shlb
xor
daa
fiaddl
mov
push
ljmp
add
fnsave
cmp
sbb
inc
pushf
loop
add
mov
inc
into
nop
jns
push
test
push
push
lea
arpl
lods
sub
and
sub
gs
outsl
cmp
stos
pop
xchg
call
cmp
mov
jne
stos
and
addr16
arpl
sbb
lock
cwtl
push
lret
push
pop
add
jmp
in
inc
sbb
cmp
ljmp
mov
rcrb
pop
adc
loopne
push
pop
lea
std
xor
and
or
pop
aaa
push
mov
icebp
sub
mov
xchg
sahf
adc
jno
aad
sbb
enter
fldt
call
mov
and
or
adcb
pop
jl
aad
adc
mov
mov
jp
dec
fistps
or
test
or
mov
loop
shlb
inc
subb
pushl
stc
in
in
mov
xchg
mov
sti
mov
mov
in
sub
popf
mov
aad
cmp
mov
xchg
fscale
js
das
int3
push
insl
pop
test
push
lea
xchg
push
mov
jae
sbb
outsl
mov
add
or
imul
jns
test
fucom
jg
data16
pop
lret
test
sub
ss
fs
xor
pop
ss
adc
add
aad
lea
popa
cmp
pushf
push
jp
js
jbe
and
loope
and
cwtl
adc
hlt
jp
imul
sahf
sbb
or
fnsave
pushf
addr16
pop
stc
and
push
loop
jae
in
adc
std
adc
xchg
cmp
and
mov
xchg
cmpsl
cli
push
shl
mov
and
pop
inc
xor
outsl
and
xchg
jne
mov
fimull
aad
and
sub
movsb
movsl
push
add
sbb
adcb
adc
adc
push
jl
inc
xor
sub
aad
xor
xchg
fs
aam
sub
cmp
lock
jmp
cmp
or
cmp
mov
js
pop
xor
popa
adc
incl
push
cwtl
sbb
arpl
lahf
mov
xor
rcrl
stos
dec
mov
aad
outsb
les
lods
sarb
outsb
inc
ds
mov
fimuls
push
jecxz
mov
jmp
inc
cmp
xchg
rol
mov
push
loop
subb
test
rorb
stos
ret
dec
xchg
xchg
fnclex
lods
sbb
dec
push
in
mov
and
call
and
pop
mov
push
jl
loope
lret
mov
and
xor
cmpsl
or
cmp
dec
das
fisttpll
jno
push
push
sahf
mov
and
rorb
mov
out
mov
push
fistl
or
dec
jmp
inc
cmp
push
repnz
scas
or
aas
mov
cs
inc
mov
mov
lret
inc
ret
ret
xchg
es
imul
imul
cmp
je
cmp
imul
sub
push
rorl
andb
or
inc
stos
xor
pushf
stc
inc
imul
push
jo
sbb
in
leave
fnstenv
mov
imul
ret
inc
xor
sahf
popa
dec
sbb
xchg
mov
jne
sbb
ss
lret
dec
push
pushf
jge
add
out
scas
jl
and
lods
cs
cs
lcall
lret
mov
jl
pop
popf
or
jle
ss
sarb
adc
xor
xor
cmpsb
scas
popf
outsb
rcrb
xchg
imul
mov
pusha
xor
and
mov
movsl
or
outsl
sub
inc
cwtl
mov
lods
mov
sti
movsl
shl
xor
clc
push
fdivs
ds
inc
jb
dec
mov
pop
dec
mov
fmul
aad
push
mov
mov
daa
adc
lcall
dec
lods
mov
movsb
fidivrs
mov
pusha
cmp
jb
inc
push
jle
cmp
je
cmp
push
jno
cmpb
leave
aaa
js
jg
test
mov
addr16
fsubrs
inc
pop
xchg
mov
dec
out
in
or
adc
pop
popf
shlb
mov
xchg
enter
cmpsl
jnp
bound
mov
push
mov
cmp
mov
dec
aad
jecxz
xchg
xchg
xchg
inc
aas
cmp
clc
dec
in
mov
lahf
jl
cmp
bound
dec
dec
sbb
hlt
cmp
rol
je
sahf
iret
adc
sub
jl
pop
dec
in
pushf
inc
cmp
sbb
push
mov
mov
out
fs
add
mov
mov
cli
jo
ljmp
test
xor
frstor
push
pop
mov
xchg
stc
in
aas
test
inc
adc
in
mov
cwtl
lcall
push
xor
mov
aam
cmp
push
and
add
jo
pop
insb
or
lods
test
ljmp
pop
icebp
push
dec
cmp
xor
mov
mov
std
scas
mov
fldlg2
sbb
stos
xlat
add
aad
push
les
mov
and
push
out
lahf
lret
loope
pop
push
aaa
dec
adc
lock
jp
fidivl
push
cmp
dec
mov
rcrb
push
mov
out
cmp
add
stc
mov
fucomp
cmc
push
cmp
imul
push
loop
xchg
fs
mov
pop
aas
cmp
lahf
push
inc
jbe
dec
ljmp
cwtl
mov
pop
jmp
add
pop
and
push
mov
sub
imul
push
sbb
test
inc
dec
stos
dec
sbb
mov
ljmp
cmc
shlb
jae
ficompl
fsubrp
pop
pop
mov
dec
lret
clc
xchg
cmp
es
adc
lds
and
call
cmp
cmp
cwtl
fdivl
arpl
movb
aas
xchg
cmp
jl
mov
pop
daa
pop
test
sub
xor
loope
popa
xchg
repnz
jle
inc
scas
mov
sub
aaa
pop
out
jecxz
mov
xchg
mov
dec
aad
cs
pushf
in
mov
js
xchg
jge
rcrl
jno
in
push
inc
ss
or
pop
mov
sub
pop
icebp
call
mov
jb
mov
mov
out
mov
movsb
jbe
call
add
idiv
mov
xchg
sbb
add
add
pop
jecxz
fsub
inc
dec
arpl
dec
sbb
int3
inc
leave
aaa
adc
and
int
mov
aas
dec
scas
sub
lahf
cmc
movsb
sub
inc
sahf
and
xchg
scas
xor
cmp
mov
adc
xor
flds
pop
inc
cmpsl
inc
mov
xchg
lret
mov
scas
cltd
inc
sub
and
xchg
ss
or
cmp
xchg
shll
xor
ds
push
jmp
insb
int
notb
push
dec
call
jg
push
push
mov
inc
leave
jno
pop
lds
out
adc
stos
pop
xor
gs
movsb
push
or
xchg
test
movsw
push
test
add
and
fildll
loopne
cmp
xor
jb
cmp
inc
cmpsb
add
mov
xlat
mov
add
xchg
mov
dec
mov
jecxz
add
jbe
aaa
jmp
jne
push
popf
and
jo
ja
lahf
xchg
popf
sub
or
adc
dec
stc
sub
rcrl
mov
movsb
shrl
sbb
psrlw
test
jg
popf
shrl
shl
loop
outsl
popa
push
and
insb
xchg
mov
fidivrl
cmpsl
push
inc
fstl
push
xor
mov
ret
aad
aas
and
jg
loopne
pop
filds
out
insb
iret
ret
jne
jae
mov
jns
pop
pushf
mov
push
jp
call
stos
adc
jmp
clc
call
divl
dec
sub
clc
dec
xor
push
mov
icebp
cmpsl
and
loop
sub
outsl
xchg
addr16
outsl
or
repz
rcrb
lds
cmp
mov
fnstsw
movsb
rcll
pop
push
dec
cmpsb
dec
lock
js
sub
xor
fistl
loopne
jmp
lahf
mov
mov
shll
repnz
sub
xor
add
daa
sub
xlat
mov
mov
jmp
mov
add
jb
mov
ret
sarb
loop
or
test
cwtl
inc
int3
out
sub
lahf
mov
mov
mov
and
pop
jne
movsb
add
scas
call
push
out
rcrl
mov
sub
add
bound
mov
pusha
je
fs
sahf
push
xor
idivl
xchg
ret
mov
shrl
mov
inc
push
xchg
mov
imul
sbb
jp
jb
dec
mov
xchg
xor
inc
lds
insb
xchg
and
pusha
push
add
dec
and
inc
aaa
gs
dec
sbb
add
cmp
sub
push
into
push
push
and
fiadds
mov
or
lods
jmp
jecxz
push
sbb
lods
loopne
cmp
lahf
xchg
add
stos
sub
sarb
test
push
test
imul
test
xchg
shrb
xor
sbb
andb
inc
and
mov
sahf
imul
mov
pop
imul
hlt
inc
dec
xchg
mov
lock
dec
inc
gs
mov
arpl
mov
popf
iret
sahf
fnstcw
mov
sbbb
imul
jno
idivl
jno
movsl
xchg
data16
out
mov
cmp
xchg
sbb
js
mov
and
sub
mov
add
dec
shll
ret
xchg
andl
cli
or
lock
aaa
aad
cltd
jnp
or
push
mov
ffree
mov
jge
mov
aad
adc
pop
jno
arpl
std
bound
fcompl
std
adc
and
in
mov
outsl
inc
es
ficoms
mov
scas
ja
adc
mov
adc
mov
hlt
dec
mov
or
pop
jae
das
popf
add
pop
out
adc
add
cmpsb
pop
adc
push
in
out
and
shl
mov
test
mov
popf
sti
psubsb
or
xor
cmpsb
js
aas
xchg
mov
imul
mov
xor
or
movsl
xchg
push
popf
daa
nop
cmpsl
adc
jnp
shll
stos
push
or
push
and
and
jo
js
repz
loope
insb
push
lds
dec
insb
xchg
repnz
add
mov
ss
fwait
xor
test
or
shll
into
sub
scas
cs
daa
movsl
add
fstp
pop
adc
lret
pop
mov
adc
aam
in
loopne
mov
cmpsl
pop
mov
cmp
sbb
imul
sbb
fists
jge
shrb
popa
mov
jno
xchg
enter
jb
push
xlat
aaa
mov
and
insl
movsb
xor
push
call
mov
ficomps
inc
mov
sub
jb
or
ds
push
push
icebp
push
out
and
cltd
lock
call
rorl
aad
xchg
add
sbb
hlt
sbb
fmuls
xor
mov
call
push
fadds
dec
cwtl
jl
cmc
fisubrl
testb
cmp
mov
add
inc
pop
aam
mov
int
mov
sbb
dec
lock
aaa
loope
mov
push
call
loopne
mov
addr16
push
dec
adc
orl
sbb
mov
fucomp
popa
push
push
pop
jp
pop
pop
sbb
xchg
xchg
pop
pop
adc
jg
out
or
popf
mov
pop
fisttpl
sub
sbb
sarb
push
mov
and
int
cmp
jne
mov
add
imul
mull
into
fucomip
bswap
adcb
fs
cmp
mov
dec
mov
fistpl
xchg
adc
repnz
push
jp
imulb
daa
xor
mov
enter
or
in
mov
addr16
inc
pop
popa
mov
inc
jl
pop
push
fistl
dec
xchg
sub
in
ljmp
les
or
cmp
sahf
test
cmpsb
arpl
ss
stos
xor
ljmp
inc
adc
sub
ss
jle
int3
repz
xor
clc
sbb
popl
clc
push
iret
sub
je
adc
in
push
mov
leave
mov
jnp
mov
popa
pop
and
orb
sbb
mov
outsl
stos
jge
cmp
cmc
leave
or
lahf
mov
jae
mov
clc
loop
sub
popf
testb
inc
or
sbb
or
push
pop
cmpb
xchg
add
dec
cltd
addr16
cmp
inc
scas
dec
mov
das
xor
cmp
mov
cltd
out
cmp
or
pop
rcll
xchg
mov
or
mov
adc
nop
dec
fidivrs
cwtl
imul
imul
data16
mov
mov
sub
js
mov
cmp
sbb
mov
inc
cmp
sbb
sub
sahf
popf
jge
pop
aaa
jnp
push
cmp
or
arpl
out
mov
test
xor
les
cs
mov
sbb
ret
bound
pop
aam
bound
orb
mov
fs
ffree
mov
iret
data16
movsl
xchg
sub
or
imul
push
lock
sub
leave
rcrb
push
pop
sbb
stos
mov
cmp
fdivs
sbb
lds
mov
pop
dec
or
ret
mov
cmp
out
push
xor
pop
loopne
jb
inc
test
xchg
popf
mov
push
lds
dec
adc
xchg
adc
add
test
push
xchg
mov
clc
stos
in
imul
ja
repnz
jle
cmc
mov
pop
iret
negb
jno
jge
repnz
insb
in
cmc
mov
out
data16
or
dec
subl
add
lods
mulb
inc
jo
loopne
dec
push
inc
cmp
cmp
in
add
sahf
aas
ret
fistpl
mov
loop
fcmovb
or
lahf
das
ds
mov
inc
push
roll
xchg
cwtl
mov
das
mov
lret
mov
sub
arpl
xor
pop
repz
stc
mov
cld
invd
test
aad
sbb
hlt
lods
lods
mov
jmp
in
push
and
cld
pop
or
repz
fadds
clc
lods
mov
aam
add
dec
test
std
movsb
lock
in
push
out
sub
pop
repz
int3
inc
int3
pop
jge
jp
idivb
out
int
cli
lods
sub
mov
insl
push
or
dec
pop
mov
xor
imul
mov
xchg
or
fs
movsl
out
leave
dec
test
test
in
popf
push
mov
mov
sbb
int
sub
ds
daa
sub
fnsave
movsb
sub
testl
scas
mov
je
lahf
and
aam
pusha
bound
cmp
not
xchg
jno
jns
jb
push
inc
lcall
popa
mov
out
cld
dec
test
push
sub
das
aam
jge
cltd
jecxz
popa
sbb
sti
std
in
ret
dec
and
pop
dec
push
xchg
push
fcompl
mov
lcall
push
ja
movb
inc
leave
cmp
stos
mov
pop
popa
nop
fisubl
add
sub
sub
adc
neg
orb
sbb
es
xor
dec
xor
pop
push
cmp
lret
jge
mov
dec
mov
fdivs
int3
jg
sub
xorb
test
lcall
jmp
and
push
dec
push
sbb
mov
out
jnp
sahf
jo
sarl
lret
lret
sub
cmpsb
jne
cltd
jo
out
lds
sub
insl
jae
cld
cli
adc
jl
repz
mov
ret
ss
aas
push
lcall
dec
gs
test
mov
enter
cld
mov
js
mov
dec
lock
sub
pop
mov
xchg
xor
data16
les
pop
mov
xlat
cltd
pop
fldt
int3
cli
cwtl
cld
mov
or
lahf
sbb
lcall
fimull
movsl
cmp
fsin
in
xorb
sbbl
cmpsl
ja
mov
mov
sub
shr
sub
leave
jno
pushl
lret
nop
stos
cs
mov
punpckhdq
and
stc
and
cmp
push
cmp
jl
pop
lahf
or
lea
aad
cmpsl
fwait
and
mov
loop,pt
js
jns
mov
shl
push
inc
repnz
jle
sbb
jecxz
pop
fsubrs
push
lret
xor
mov
add
add
lods
loope
and
push
in
mov
mov
fisttpll
les
inc
or
andb
repz
xchg
inc
test
mov
out
mov
fildll
cwtl
mov
mov
mov
adc
fsubp
pop
pop
dec
fs
push
out
repnz
iret
fsubl
add
lret
xor
popf
xchg
rolb
das
cli
mov
sub
dec
movsb
movsl
loope
xchg
scas
xor
into
out
inc
inc
sbb
jo
pop
or
cs
fmuls
add
shl
sti
shl
sub
popa
loope
mov
sub
mov
outsb
test
xlat
inc
cmpsl
jl
fbstp
pusha
and
dec
lret
inc
insl
lcall
imulb
fcompl
loopne
daa
mov
scas
ja
xchg
test
push
cmpsb
sbb
test
cwtl
out
mov
es
xor
or
int
mov
dec
fists
jge
sub
mov
pop
ss
enter
jmp
jno
jnp
ficomps
mov
pop
xchg
ret
mov
xor
pop
pop
fscale
enter
std
pop
add
rcll
jo
sbb
push
scas
xchg
mov
xor
popf
filds
insb
mov
or
cmp
pop
mov
movmskps
jmp
cmp
rcrl
sbb
clc
inc
adcb
out
xor
push
mov
and
jbe
leave
test
mov
pop
cmp
aam
stos
icebp
jb
pop
fsts
les
fcoms
xorl
jne
mov
cmpsl
pop
sbb
mov
mov
xchg
xchg
push
lods
push
pushf
shll
pop
into
loop
inc
cmp
outsb
dec
or
mov
push
ja
cli
into
andl
mov
loope
mov
push
cmp
xchg
mov
mov
jmp
fs
mov
cmpl
xchg
push
stc
and
enter
adc
jg
dec
repz
push
mov
gs
repz
mov
cmc
pop
push
adc
jb
inc
test
add
lret
stos
out
xchg
nop
scas
inc
lahf
scas
xor
push
sub
sahf
or
push
pushf
mov
pop
jp
push
push
mov
scas
icebp
xor
cmp
push
popa
mov
js
mov
push
push
jne
sub
inc
jne
insl
mov
dec
sbb
fnstcw
and
dec
add
sub
jo
cmpsl
loop
lret
add
push
syscall
xchg
test
stos
cmpsb
ja
xor
cmp
xchg
pop
frstor
mov
clc
movsb
cmpsb
dec
insl
push
and
lret
xor
testl
mov
mov
out
mov
jle
out
mov
mov
dec
lds
or
push
out
lock
pop
idivb
jg
dec
test
js
fcomp
pop
fadd
dec
ss
sub
pop
test
mov
loop
es
jp
xchg
jle
adc
push
in
or
add
dec
cmc
sub
subb
loop
jo
jmp
pop
inc
lea
movsb
lods
je
xchg
sbb
xchg
inc
push
push
shrl
je
mov
adc
inc
xor
sbb
xor
cmp
lods
mov
divl
enter
dec
sbb
out
daa
adc
mov
jecxz
stos
fsubr
sahf
mov
jb
stos
push
bound
mov
in
jb
sbbl
pop
in
mov
add
cld
iret
ret
pusha
shrl
adcl
sbb
xchg
cltd
mov
enter
nop
inc
xchg
icebp
inc
imul
adc
push
nop
adc
jbe
aam
sub
fdivl
call
movb
jge
or
mov
lds
xchg
jle
popa
dec
aam
and
jns
iret
sbb
mov
cwtl
mov
push
xchg
stc
xchg
pusha
fdivs
in
daa
loope
jb
or
sub
and
notb
cmpsb
cmpsb
push
push
adc
cmp
mov
cwtl
jb
adc
into
xchg
test
jno
cmp
call
xor
jmp
lea
sub
push
andl
mov
lret
lds
pop
jbe
sub
sbb
inc
lds
or
stos
or
daa
add
ljmp
test
inc
pop
les
xchg
lods
rcrb
shrb
push
inc
mov
stc
mov
out
push
push
nop
xchg
icebp
mov
cmpsl
filds
aaa
bound
push
lahf
dec
jo
or
imulb
arpl
aaa
dec
sarl
inc
enter
mov
xchg
jl
orl
cli
cmpl
xor
push
add
pop
add
mov
pop
cmp
pop
scas
shrb
lcall
sub
pop
mov
and
fistpl
and
mov
lret
cs
divb
mov
sub
mov
push
stos
cmpsb
jo
jne
xor
nop
inc
bound
mov
xchg
pop
fsubp
adc
icebp
fwait
ret
rcll
push
sahf
fidivs
mov
push
rcrl
xchg
in
or
xchg
test
push
inc
lahf
dec
jae
adc
xor
into
leave
sbb
dec
lcall
cs
xor
dec
xchg
sar
loopne
push
andb
mov
out
mov
adc
inc
push
mov
stc
lret
xchg
fisttpll
and
pop
movsb
loope
mov
cmpsb
dec
mov
jl
icebp
jl
sub
pushf
cmp
loopne
fwait
stc
daa
and
ds
push
inc
test
xchg
dec
sub
pop
cmp
imul
lds
mov
movsb
fldenv
xchg
rcr
sbb
int
sbb
add
xchg
push
in
js,pn
aaa
mov
cmpl
ja
icebp
sub
daa
mov
jp
or
adc
push
jecxz
dec
pusha
ds
push
dec
add
or
ja
mov
popf
lret
out
stc
dec
push
xchg
lret
pop
fadd
lret
test
cltd
jmp
popf
stos
out
mov
mov
pop
pop
outsl
sahf
mov
xor
pop
cmpsl
mov
cli
jecxz
dec
pop
ljmp
inc
ficomps
fsubs
in
adc
mov
test
subb
inc
cmp
aad
or
jg
test
outsl
adc
xchg
in
adc
jle
inc
dec
movsl
fstps
push
pop
mov
xor
xchg
pop
int3
stc
adc
or
mov
sbb
jl
mov
out
mov
call
cld
pop
mov
add
adc
pop
inc
or
outsl
data16
ret
cmpsl
xchg
inc
movsb
cli
js
pop
test
cmpsl
gs
sahf
lret
ret
mov
xchg
push
push
gs
loope
adc
jge
imul
std
sub
sub
lret
je
push
jle
loopne
ret
xchg
insl
jmp
xacquire
sbb
jmp
imul
jmp
push
mov
cmp
ffree
adc
shlb
aas
int3
sbb
outsl
jno
outsb
pop
shr
xchg
inc
jbe
test
mov
push
mov
or
cmp
fmulp
lcall
and
cmp
faddp
int3
xor
das
xchg
insb
cmp
jnp
jmp
repnz
ljmp
add
fwait
cmpb
cwtl
sbb
xor
and
addl
mov
adc
fstpt
cmp
xor
pop
cs
xchg
jne
and
repnz
dec
adc
subb
mov
push
fistl
dec
jnp
es
xor
pop
jae
mov
mov
lret
gs
ret
and
inc
lret
mov
xor
lret
inc
and
mov
xor
sbbl
jno
mov
xchg
xor
movsl
sbb
insb
mov
sbb
fldenv
sahf
xchg
xchg
mov
sub
into
and
mov
push
xor
cmp
repz
xchg
arpl
inc
mov
ja
push
pop
into
mov
aaa
sbb
fldt
leave
inc
add
sbb
out
movsb
add
jno
jbe
loope
pop
lods
es
lea
aas
fdivrl
or
or
cwtl
jbe
sub
inc
xor
mov
sarl
mov
mov
mov
dec
ds
jno
jae
add
leave
call
iret
cmp
mov
clc
adc
jp
or
pop
sub
xchg
dec
mov
sub
inc
sbb
jl
sub
in
lahf
cmp
out
pop
dec
jno
jb
dec
pop
loopne
dec
stos
rcll
leave
jmp
cmpsb
pushf
and
aad
sub
stos
jnp,pt
insb
data16
jbe
push
cmpsl
inc
cmp
mov
add
cmc
add
cld
jb
mov
pop
das
into
jp
cs
mov
loop
fucomip
cld
ret
add
adc
lds
mov
xchg
fs
xchg
cwtl
into
xchg
sbb
out
fcmovnu
cmp
jmp
test
sahf
imull
xchg
sbb
jmp
mov
mov
pop
jo
mov
test
jmp
jno
lret
cltd
xlat
mov
ret
pop
mov
inc
jmp
es
ror
sbb
pop
adc
mov
jae
and
into
pop
xchg
cmp
stc
mov
aam
int3
out
test
cmp
jmp
dec
fsubrs
mov
mov
mul
inc
xlat
mov
xchg
xor
addl
push
cwtl
mov
subl
leave
dec
test
popf
cmp
gs
nop
add
jle
jp
ljmp
mov
jl
movsl
dec
sub
xchg
sub
and
dec
lock
cmpsb
jge
test
adc
arpl
outsl
icebp
cmp
lahf
jbe
stos
lcall
or
in
mov
lret
jmp
aad
mov
movsb
addl
leave
push
cli
dec
es
push
adc
pop
pavgw
lahf
arpl
icebp
pop
add
roll
and
nop
inc
shlb
cs
outsb
out
dec
mov
cmp
and
cmp
mov
push
mov
jmp
into
fs
out
in
push
xor
ja
push
inc
xor
fsubrl
add
jg
lods
aas
out
push
mov
sti
or
add
insb
push
mov
or
push
mov
mov
cmpsb
cli
jo
mov
bound
imul
push
mov
lret
cmp
fiadds
pop
aas
shlb
lock
repnz
mov
mov
shrl
out
imull
jbe
repnz
lcall
or
loopne
inc
je
dec
incb
rolb
adc
punpckldq
xor
cwtl
lea
fdivrs
xchg
fisttps
imul
cmp
pop
inc
lret
push
push
and
jg
push
decb
iret
scas
push
mov
fcmovnb
cmpsb
ret
iret
divb
movsl
cs
sbb
sbb
lods
adc
lahf
xor
lcall
mov
pop
push
xchg
xor
adc
pop
add
inc
mov
out
sub
push
push
ljmp
cmp
mov
pop
and
inc
dec
mov
xor
js
and
jl
inc
xchg
jge
push
cwtl
mov
sahf
addr16
int
push
add
xor
cmp
nopl
dec
iret
mov
orb
jl
movsb
test
or
adc
sub
enter
jmp
mov
push
adc
cmpsb
aas
pop
ret
xchg
pop
jmp
and
leave
or
adc
dec
loop
xchg
pop
adc
inc
pop
add
in
jno
mov
nop
pop
imul
add
cwtl
cmc
test
fsubr
mov
in
in
cs
adc
mov
push
repnz
inc
shrb
jae
insl
aad
mov
aaa
sbb
fistpll
lcall
shl
popf
cwtl
or
rorl
jns
inc
push
ss
ret
hlt
ds
pop
enter
mov
orl
jns
fimull
add
fcmovnb
cmp
aam
rclb
push
in
aad
ret
nop
js
push
lahf
mov
add
mov
jle
xchg
loopne
daa
mov
pop
fucomi
scas
adc
cmp
push
jp
mov
xchg
fwait
inc
fstpt
movsb
cld
xor
jg
sbb
add
idivb
out
and
xor
push
jmp
jo
addr16
fcmovbe
jno
sub
loopne
pop
adc
es
sbb
pop
xor
cmp
popa
xor
inc
les
hlt
jbe
divl
repz
scas
xchg
imul
imul
div
les
or
rcl
dec
in
mov
out
xor
test
push
dec
cmp
movsb
sbb
test
or
jno
lret
ja
adc
iret
negl
add
add
ret
or
cmp
decb
inc
or
add
lret
push
repnz
std
dec
imul
cmp
fwait
xchg
cmp
add
sbb
push
mov
dec
xor
pop
push
pusha
out
out
shrb
popf
scas
out
aam
pop
das
mov
daa
add
pop
or
sub
mov
loopne
and
jb
cmp
bound
inc
xchg
pusha
push
addr16
sub
xor
dec
lods
dec
ret
add
cli
xchg
mov
iret
cmp
fstl
mov
jp
js
mov
into
scas
xchg
xor
mov
movsl
cmp
imul
lcall
sub
mov
and
xor
add
cmp
pop
pushl
jae
rcrb
mov
cmpsb
sahf
pop
jle
mov
call
xor
mov
shlb
jecxz
mov
nop
adc
inc
arpl
popf
pop
sahf
sbb
lahf
das
inc
cmpsl
add
ss
push
add
hlt
insb
imul
in
movsb
mov
aam
dec
jns
jb
dec
jmp
pop
pop
jl
rcrb
xor
or
push
iret
lea
push
aad
xchg
and
lahf
popf
inc
cwtl
sub
daa
pop
mov
addb
bnd
rorl
xor
imull
out
aad
aad
add
std
xlat
sbb
jae
sub
mov
flds
xor
adc
movsb
push
clc
add
inc
dec
outsb
arpl
or
in
cmp
daa
lret
inc
ret
pushf
pop
test
nop
jl
xor
and
pop
pop
lds
sub
out
ljmp
dec
push
aad
loope
fistpl
sbb
push
imul
daa
inc
mov
mov
insb
and
add
lcall
data16
data16
fsubl
imul
cmp
scas
test
and
jnp
inc
mov
ret
mov
pop
push
pop
mov
in
push
repz
insb
insb
sub
dec
xor
enter
mov
or
cld
sub
xchg
xchg
mov
test
and
cmp
xlat
push
aaa
push
mov
push
nop
js
mov
sbb
pop
inc
jle
or
inc
mov
jmp
mov
add
fistps
push
sub
mov
in
adcb
outsl
testl
mov
sub
inc
sub
pop
xchg
or
inc
mov
mov
outsb
lods
in
aas
or
les
js
mov
mov
fwait
lods
dec
or
in
popa
sbb
mov
insl
or
imul
sbb
movsl
bnd
mov
xor
daa
jmp
or
cmpsl
add
enter
out
lret
lahf
push
adc
inc
push
cmp
out
rcl
jae
lods
daa
cmp
xor
mov
bswap
jg
pop
push
call
pop
pop
xchg
or
jg
dec
add
ljmp
popa
mov
loope
or
add
mov
sbb
sub
mov
xor
test
pop
sbb
cmp
loop
xchg
scas
arpl
add
je
in
ret
sbb
orl
fwait
cmp
adc
pop
sub
cld
cmp
mov
ljmp
push
cwtl
inc
and
lcall
popf
jge
jg
cli
into
and
cmpsl
mov
push
ljmp
and
imul
sahf
or
fstps
test
mov
sub
stos
mov
jl
sbb
jae
sub
loop
shll
dec
cwtl
shlb
enter
call
call
insb
insb
cmp
dec
outsb
das
js
lock
inc
mov
xchg
fsubrl
jne
inc
mov
cmp
mull
test
out
xchg
mov
mov
movsl
mov
and
and
mull
in
enter
icebp
fcoml
or
sbb
stos
and
push
insl
cli
xchg
lret
cmpsb
and
cmp
aam
pop
jae
pop
mov
into
hlt
mov
cmpsl
pop
inc
inc
cmpsb
lcall
es
nop
xchg
and
movsb
push
popa
repnz
or
sbb
push
leave
loope
mov
mov
imul
pop
leave
cmpl
mov
dec
ss
add
adc
sub
cmp
fistl
clc
mov
push
mov
jp
dec
hlt
mov
arpl
lahf
sub
rolb
sub
jb
mov
xchg
push
fldcw
mov
loop
or
mov
xor
daa
idivl
jmp
test
pop
clc
xchg
push
ljmp
push
mov
push
xor
sti
xchg
dec
mov
xchg
adc
bound
mov
pop
in
adc
mov
das
and
add
pop
test
xchg
enter
movsb
jg
cltd
xchg
mov
add
and
mov
out
cld
pop
ljmp
popf
jmp
jecxz
loopne
outsb
jo
ud2
pop
jmp
insl
add
xchg
mov
mov
movsb
fimuls
out
test
cmp
sub
cmpsb
icebp
jo
and
or
xchg
lcall
out
shrl
ss
mov
clc
sub
fs
dec
mov
mov
cwtl
popa
das
pop
cmp
addr16
fnstcw
lods
daa
jecxz
xchg
mov
outsl
nop
dec
ss
lret
and
aas
inc
sub
mov
adc
mov
mov
xchg
pop
pop
mov
stos
add
addl
cwtl
xor
jne
mov
jae
push
xor
sbb
and
pop
mov
pop
orb
mov
mov
xchg
repnz
loopne
imulb
ficoml
inc
mov
inc
lret
cmpsl
sbb
ljmp
pushf
dec
dec
jp
jmp
push
lea
fmuls
outsl
je
add
testl
sub
jl
ret
insb
mov
jl
pop
test
mov
scas
stc
in
dec
xchg
mov
mov
sti
xchg
jmp
dec
cld
rcrb
mov
push
neg
jae
xchg
mov
mov
test
push
sbb
aaa
mov
es
pop
lret
scas
scas
xor
push
cmp
mov
cmpsb
fwait
lods
and
mov
inc
lods
add
imul
int3
lahf
subb
inc
out
scas
mov
sahf
imul
or
adc
xor
lods
fisubrl
js
xor
scas
in
call
xchg
push
cmp
xchg
adc
insb
out
mov
stc
in
enter
mov
jmp
xchg
mov
and
push
mov
icebp
aam
clc
popf
lea
test
mul
ret
stos
cli
mov
mov
imul
bound
push
clc
fsubr
sub
test
mov
sbb
bound
xor
add
adc
cmp
mov
arpl
jmp
inc
arpl
inc
mov
scas
nop
idivl
lahf
add
push
or
sbb
adc
enter
fs
mov
xchg
int
gs
sbb
or
je
xchg
sbb
cwtl
or
adc
pop
inc
imul
inc
mov
ja
push
push
add
xchg
outsb
repz
or
push
fidivl
adc
mov
push
sub
inc
pop
addr16
jnp
cmp
stos
rolb
jo
ljmp
mov
xchg
gs
divb
adc
push
arpl
cli
sub
push
lods
dec
bound
jg
lcall
hlt
ret
je
mov
and
mov
ret
fnsave
push
push
push
addb
bound
inc
movsl
sti
push
clc
mov
pusha
scas
dec
cs
push
add
push
jne
sbb
mov
mov
push
pushf
jmp
mov
pop
inc
jmp
sti
enter
mov
stc
push
pop
cmp
push
or
loope
xor
cli
pop
testb
ja
mov
imul
out
movsl
add
out
xor
inc
out
mov
add
sbb
mov
adc
out
lock
lds
ljmpw
sbb
fs
test
mov
fs
in
es
mov
std
jle
aam
pushw
sbb
rcll
or
repnz
push
inc
push
sahf
jo
inc
jle
and
pop
sarb
xchg
out
pop
movsb
rcrb
pop
lcall
out
das
sahf
sahf
dec
fwait
or
and
lods
pop
jo
and
lods
adc
add
aam
xor
clc
push
mov
js
into
or
jg
sbb
push
incl
mov
mov
jmp
mov
inc
insb
pushf
sbb
lret
sub
dec
xor
pop
je
ja
ja
xchg
test
aas
loope
xor
ja
cs
sub
adc
out
nop
jo
add
pop
push
out
stos
sub
rcl
fs
cmp
daa
dec
sub
rorl
jg
push
adc
push
mov
jg
movsl
sbb
dec
push
sub
mov
sbb
orb
out
jns
xchg
mov
cld
stos
add
int
shrb
sbb
int3
aaa
pop
hlt
xchg
jmp
loopne
xchg
sbb
sub
mov
leave
dec
sbb
ret
test
shr
pop
leave
and
pop
pop
icebp
or
addr16
jbe
and
jb
inc
adc
xchg
fsubr
arpl
mov
stos
out
xor
xor
dec
and
shr
jl
xchg
jae
out
inc
stos
daa
xor
test
inc
subb
sub
dec
and
xlat
pop
mov
test
jno
push
in
test
cmc
xchg
scas
xor
cmpsl
sbb
clc
imul
mov
daa
mov
cmp
or
pop
repz
adc
int3
loope
call
fst
xor
psubsw
jp
rcl
je
xor
mov
sahf
and
pushf
dec
leave
xchg
movsb
sarb
rclb
xor
cs
fiadds
fdivs
in
lods
leave
jns
ss
cmp
push
aam
adc
pop
cs
xchg
rcrl
sbb
pop
add
mov
rcr
mov
movups
ja
data16
and
jl
adc
stos
xchg
cld
jns
leave
dec
jo
movsl
mov
repnz
mov
rcrb
fwait
sbb
test
pop
out
mov
call
sbbl
loope
rorb
je
outsb
xchg
mov
rcrb
xorl
or
gs
xor
adc
lahf
adc
pop
or
or
ljmp
adc
icebp
or
addr16
call
sahf
mov
ja
mov
mov
out
push
jo
push
sbb
out
sti
stos
sub
dec
xor
push
dec
jle
push
mov
inc
mov
lret
inc
jbe
sbb
pop
push
sbbb
mov
jmp
sbb
dec
mov
int3
fimuls
mov
pop
jne
into
es
pop
pop
mov
repz
pop
add
and
mov
fisttpll
mov
cld
std
dec
xor
adc
adc
nop
pop
std
or
movsl
mov
pop
add
dec
call
inc
mov
sub
and
mov
push
arpl
jae
dec
sbbb
push
sub
loopne
or
mov
enter
pop
sbb
idivl
cmpsb
fwait
int
cli
mov
outsl
lahf
pop
inc
inc
push
mov
addl
and
push
in
fs
sub
xchg
mov
xlat
mov
add
loop
push
push
dec
sub
mov
cltd
xchg
addr16
mov
rcr
adc
sub
cmp
out
clc
popf
mov
pop
sub
jbe
add
cmp
xor
mov
sub
je
out
xor
enter
xor
xlat
js
mov
stos
mov
mov
je
jmp
add
jmp
scas
arpl
mov
xor
xchg
or
inc
sbb
jae
aad
adc
inc
outsl
repz
mov
and
dec
movsl
ds
pop
fldcw
mov
inc
cmp
inc
std
sub
inc
xchg
addr16
jge
rclb
mov
mov
mov
incl
fadd
stos
loop
push
test
das
jp
cltd
ljmp
xchg
sbb
js
cli
sub
cmp
cld
fmulp
and
test
insl
mov
arpl
cmp
mov
cmp
vpacksswb
iret
cmp
mov
bound
daa
add
es
xchg
mov
cltd
mov
or
movb
cwtl
push
call
int3
inc
jnp
jge
aas
scas
mov
insl
cmp
sbb
dec
jg
cwtl
arpl
or
test
les
les
cmp
lods
ret
cli
cwtl
data16
mov
add
mov
dec
fcmovnbe
leave
and
in
pop
mov
adc
sbb
mov
arpl
fcoms
inc
shrl
lahf
push
bound
cmpsb
les
fdivrl
sub
mov
cwtl
das
out
or
std
loopne
lods
pop
mov
cmp
and
xchg
and
lahf
and
repnz
sahf
pop
sar
jecxz
enter
dec
orl
push
popa
jecxz
loop
sti
xlat
lock
adc
stos
mov
pop
frstor
flds
inc
data16
lret
jae
lcall
test
bound
xlat
inc
aaa
cmp
mov
lods
popf
push
iret
cmp
sbb
gs
push
test
mov
ret
sub
adc
jecxz
inc
jbe
aaa
xor
fistl
sub
data16
mov
mov
test
arpl
mov
and
ret
aad
leave
stos
icebp
fsubrs
cmp
xor
insl
subb
clc
into
loop
pop
int
cld
nop
mov
inc
mov
add
es
mov
jbe
aaa
insb
sbb
insb
mov
add
test
inc
fs
mov
gs
bound
mov
mov
pop
add
push
mov
xchg
xchg
daa
xchg
push
nop
jle
jp
test
lret
movb
mov
add
mov
cwtl
ss
je
push
push
mov
lock
mov
fdivp
bt
arpl
sbb
lahf
or
aaa
iret
movl
push
int
outsb
bound
xchg
in
and
cmp
jnp
pop
and
dec
xchg
in
in
xor
stos
addr16
mov
leave
jbe
daa
sub
sub
fstl
or
arpl
lea
sub
inc
xor
push
cld
xchg
loope
mov
inc
fadds
inc
in
mov
push
jl
shlb
mov
fsubrl
dec
out
mov
scas
adc
outsl
pop
jo
fmuls
sbb
mov
data16
addr16
insb
or
cltd
pop
mov
cli
xor
mov
xchg
mov
ret
add
pop
popl
lret
pusha
jne
das
sub
ja
in
mov
cmp
out
add
inc
clc
mov
mov
sub
cmp
push
js
inc
movsb
sub
ret
ret
or
mov
cwtl
pop
mov
in
jne
jl
mov
sub
add
cmpsb
sti
mov
or
add
out
mov
cmp
std
test
out
mov
repnz
pop
les
add
or
insl
mov
clc
fsubs
lahf
dec
xor
lret
push
dec
cli
icebp
lock
mov
jns
sub
cmp
je
jnp
inc
jge
or
add
je
xor
sub
lret
mov
test
push
pusha
pop
mov
mov
not
and
das
cmp
pusha
loope
test
sahf
sbbl
ljmp
jnp
dec
jecxz
cmp
in
gs
clc
push
mov
mov
loopne
sbb
or
pop
test
cli
lods
and
mov
test
out
dec
scas
push
movsl
scas
mov
out
inc
fsubr
scas
cmc
sub
xlat
inc
in
out
mov
adc
sarl
adc
imul
sub
lahf
aas
mov
pop
das
and
adc
mov
add
mov
aam
add
fisttpll
adc
lods
xchg
adc
sbb
jge
shll
cli
test
pop
icebp
push
setg
or
ret
leave
mov
and
or
outsb
xchg
xor
xchg
pushf
push
or
cmpsl
jne
or
mov
cwtl
sbb
mov
sbb
cli
hlt
pushf
sub
pop
shll
push
sbb
push
cmp
xchg
loope
dec
mov
aas
cmpsb
lds
adc
cmp
cmp
inc
mov
insl
pop
out
push
popa
ret
mov
stos
outsl
shlb
jne
sbb
out
ljmp
popa
daa
lea
cltd
les
repnz
jmp
cmp
sbb
stc
sarl
add
or
pop
fnstenv
mov
out
add
fistpl
in
cmpsl
add
and
ret
lret
std
setge
test
sbb
roll
lcall
sub
inc
and
test
adc
lea
sub
orb
int3
test
cmp
jecxz
xchg
out
pop
add
mov
sahf
int
pusha
out
sub
scas
aas
add
or
fwait
sbb
fisttpll
jae
jne
sbb
pop
lock
sub
arpl
mov
jo
sub
adc
cmp
shll
outsb
repnz
inc
into
sub
call
add
imul
outsb
leave
cmp
orb
jmp
inc
mov
std
and
insl
lahf
pop
sub
daa
rcr
mov
mov
aam
dec
outsb
xlat
mov
dec
cwtl
push
xor
mov
push
mov
pop
hlt
push
jl
pop
ss
mov
pop
inc
orl
lea
sar
mov
arpl
shrb
cmp
jecxz
rcll
push
movsb
or
mov
xchg
xor
int3
pop
jle
jp
es
or
and
int3
pop
lret
cmp
fdivl
or
cli
push
mov
xchg
ret
dec
and
mov
lea
negl
add
mov
outsb
sbb
xchg
mov
mov
sahf
and
push
dec
sub
add
lcall
mov
pop
shl
hlt
sub
stc
js
rcrb
mov
push
rcr
jbe
shl
cmp
push
pop
mov
dec
fimuls
ret
js
cmp
sub
xchg
mov
mov
int3
pusha
aas
fyl2xp1
cmpsb
push
sub
popa
xor
push
in
sbb
or
les
jecxz
jle
lods
loope
push
inc
ret
in
sarb
flds
sbb
mov
adc
mov
out
xlat
inc
xor
xchg
enter
add
or
jb
inc
mov
in
cs
ror
out
sbb
loopne
sub
in
inc
gs
add
aaa
add
sbbl
std
dec
insb
inc
adc
xor
adc
stos
ret
fistl
addr16
roll
hlt
inc
sti
cltd
push
aas
xchg
mov
or
sahf
shlb
icebp
push
fmuls
xor
inc
ficomps
or
ficoml
inc
aas
sbb
stos
mov
mov
sub
movsb
xchg
jmp
mov
movsl
lods
je
mov
adc
or
xchg
pop
jns
mov
push
add
loopne
mov
fucomip
jae
int
je
xchg
sub
push
loop
mov
mov
inc
xor
clc
addb
sahf
insb
add
cmpl
jl
and
sbb
insl
mov
push
xlat
sub
pop
scas
popf
addl
xchg
mov
ret
loop
bound
fucomip
or
loope
xchg
pop
mov
pop
test
dec
packuswb
and
push
add
cwtl
fsubrs
jae
stos
and
sub
lea
icebp
aaa
xor
dec
int3
or
or
push
subb
in
arpl
and
test
imul
bound
add
ret
jmp
repz
adc
rcr
adc
add
cmp
jge
mov
mov
fstpl
test
and
jle
xor
retw
mov
mov
xlat
pop
inc
jmp
sub
js
adc
js
xlat
and
in
xchg
pusha
and
faddp
aaa
jb
shlb
push
sub
xlat
out
xchg
mov
mov
mov
and
inc
lock
ret
lock
insb
sub
cltd
jns
lret
sbb
cwtl
pushf
divb
inc
jne
scas
ds
ss
mov
loop
imul
push
mov
cmp
push
test
outsl
inc
rcrb
cmpsl
and
call
mov
adc
cli
ficompl
xchg
js
xor
mov
ret
int3
lods
mov
cmp
int
push
adc
pop
fnstsw
mov
mov
sbb
push
jmp
and
push
jmp
pop
dec
bound
and
inc
dec
inc
repnz
cmpsb
sub
push
ljmp
leave
in
push
jge
pop
rcl
or
frstor
int
xchg
or
std
mov
in
repz
mov
ds
test
dec
pop
clc
inc
push
jno
sub
pop
push
faddl
dec
adc
inc
xchg
iret
ja
xor
in
dec
push
mov
inc
icebp
dec
loope
fwait
scas
pop
in
and
movntq
jmp
fsubrl
ja
pop
and
les
aam
and
mov
push
push
mov
add
xchg
or
iret
jge
pop
inc
dec
lods
cmpsl
push
cmp
mov
lahf
fidivrl
loopne
push
add
pushf
push
addr16
push
inc
jl
lods
lahf
and
popf
in
lahf
aam
xor
movsl
xchg
out
or
jg
jmp
inc
inc
push
push
ds
loop
push
jmp
cltd
push
outsb
xchg
or
sbb
out
lock
jecxz
int
outsl
inc
jl
lret
or
ffreep
aas
push
mov
push
push
insl
push
sub
sti
leave
lds
inc
xor
inc
pushf
int
jns
push
push
xchg
and
push
or
dec
out
dec
call
out
xor
jne
push
in
jo
imul
push
push
mov
addr16
or
push
addr16
lret
inc
mov
jmp
out
mov
or
or
fs
cwtl
sbb
repz
sarb
mov
test
subb
xchg
jg
dec
add
out
adc
orb
in
shll
cmp
jae
rol
adc
push
js
insb
fstpl
lods
xchg
pop
add
push
push
int
cs
xlat
cld
out
xorb
add
arpl
stos
mov
lock
int
cli
pop
popa
div
insl
adc
aaa
mov
or
sahf
push
aas
mov
inc
test
aam
pop
sbb
cwtl
push
or
pop
pop
pop
stos
jl
xchg
mov
lock
and
outsb
out
mov
dec
in
xchg
popf
pop
mov
mov
xlat
cwtl
ret
xor
inc
fwait
mov
cwtl
popf
xor
jae
or
cs
sbbl
mov
loope
ds
iret
cs
push
ret
jge
xor
adc
pop
imul
cmp
shrl
xchg
mov
pop
push
xlat
inc
xor
mov
sahf
cmc
jbe
out
dec
outsb
jge
insl
dec
xchg
iret
mov
ret
test
loope
aaa
popa
sub
cmp
test
pop
decb
mov
or
daa
xchg
aad
mov
cmc
ficoml
jno
gs
mov
loop
fs
iret
aas
jmp
mov
cmp
pop
loopne
jle
fs
jp
sub
and
lcall
cmp
scas
xchg
aam
adc
sub
mov
aad
dec
loop
pushf
pop
sarb
cmp
stc
xchg
inc
cltd
sub
ret
ss
lret
std
mov
dec
testb
loope
pop
pusha
iret
cld
addr16
rol
sahf
les
int
xchg
fwait
stos
loopne
sbb
mov
shl
jl
bound
lock
adc
xor
mov
outsl
fsubr
pop
xor
xor
enter
push
mov
mov
jne
mov
loope
scas
or
arpl
mov
inc
push
data16
mov
cltd
imul
aad
xlat
push
xchg
or
pop
mov
sbb
sti
test
and
pushf
sbb
adc
frstor
repz
mov
jmp
je
lret
inc
dec
sti
sub
sub
shlb
mov
sbb
jno
pop
cmp
push
lock
loop
push
mov
cli
mov
cld
mov
mov
mov
addb
push
popa
insb
push
cmp
mov
and
jp
ret
inc
sahf
mov
filds
xor
inc
aam
pushf
idivb
pop
jb
add
jmp
das
or
lret
std
outsb
ret
lcall
inc
mov
ret
adc
in
outsl
xor
aaa
fnstsw
xchg
fs
jne
test
orl
mov
imul
sbb
push
out
nop
mov
xchg
xlat
out
push
xor
arpl
rcrl
stos
pop
mov
mov
stos
sbb
xchg
mov
mov
jbe
stos
and
test
sbb
cmp
cmpsl
movsl
jbe,pn
loop
in
mov
mov
addr16
int
inc
pop
adc
ret
sti
adc
fldcw
mov
arpl
mov
jae
xchg
xchg
cmc
ss
aam
jl
mov
iret
inc
enter
mov
pushf
push
xor
rclb
jno,pt
jbe
and
out
sti
xor
pop
jb
cwtl
das
shlb
and
lcall
mov
cmpb
ds
repnz
add
sub
sub
popa
iret
lock
out
xor
xor
lds
cld
xchg
fs
cltd
inc
or
adc
out
dec
loope
movsl
std
pop
mov
call
adc
pusha
cmp
jl
add
mov
aad
xchg
push
cli
adc
xchg
xchg
iret
addr16
push
outsl
cmp
aas
inc
mov
mov
xchg
mov
cmp
mov
sarb
fdivs
loope
mov
mov
mov
cmp
mov
int3
inc
push
xchg
pop
mov
jbe
push
call
out
adc
mov
jp
sbb
ja
push
add
add
rcll
xchg
fidivs
inc
jge
and
add
mov
cmp
in
das
stc
mov
jl
ret
test
pop
pop
push
sti
in
das
pusha
jb
xchg
push
loope
pushf
pop
lds
mov
inc
jmp
sub
sub
sbb
jmp
cmp
dec
jl
and
mov
loope
jno
mov
jmp
loopne
repnz
xchg
xchg
jecxz
test
aad
pop
push
lds
insb
int3
fcompl
test
and
aad
xor
xor
mov
mov
lock
mov
push
mov
mov
out
pop
test
or
pop
imul
add
iret
out
inc
jns
sub
arpl
fs
mov
push
insb
fs
add
adc
pop
mov
les
or
push
sub
xor
jp
sbb
sahf
add
mov
aad
int
jge
test
aam
inc
scas
mov
call
lds
push
test
inc
jmp
mov
jo
test
js
mov
bound
dec
test
mov
negb
sar
cltd
sbb
out
or
sub
jns
lods
loopne
push
idiv
jbe
xchg
jecxz
push
push
scas
outsb
sbb
insb
push
pop
je
dec
lret
jb
jae
or
xchg
lret
xchg
fdivl
lahf
scas
xchg
ret
mov
out
dec
pop
lret
fsubl
shll
jne
fstp
shlb
xor
arpl
mov
lret
sub
hlt
int3
ret
call
imul
push
outsl
and
adc
lcall
repz
test
sti
aam
jle
sbb
cs
in
or
sub
and
push
dec
stos
fsubr
add
movsl
dec
ljmp
inc
orl
jmp
adc
ds
push
scas
xor
or
push
cmpsb
out
clc
mov
sub
les
aam
pop
pop
pusha
mov
mov
lret
jns
push
inc
sub
push
in
out
push
push
adc
fisubrs
leave
add
js
imul
cmpsl
sub
cmp
push
push
or
aaa
imul
rcrl
jmp
sbb
cmpsl
mov
jne
sarl
repnz
jmp
addr16
mov
aam
xchg
jl
push
lds
pop
insl
nop
jae
stc
jp
push
push
imulb
cmpsl
jo
xchg
cmc
cmp
fcomps
push
inc
je
popf
xchg
rorb
repnz
sbb
sub
jne
negl
cwtl
loop
cld
mov
mov
pop
sahf
cmpsl
pop
movsb
push
xchg
sub
ficoms
xor
jp
decb
or
fidivl
jnp
jmp
adc
repz
adc
mov
daa
xchg
cmp
hlt
test
adc
movsl
js
mov
aad
movsb
pop
cmpsl
jp
cmp
push
test
xor
scas
xorb
movsb
fwait
ss
test
sarb
push
jns
jns
arpl
push
jmp
adc
gs
enter
rcr
imul
pop
jns
push
inc
or
test
fsubl
mov
ret
xchg
es
jecxz
sbb
adc
lret
mov
nop
popf
inc
adc
jo
aaa
push
dec
inc
sbb
xchg
popf
adc
lcall
call
cmp
aam
in
clc
mov
xor
jp
cld
dec
and
in
stos
lcall
jns
push
lds
leave
add
stos
stos
loop
out
push
das
movsl
adc
push
in
out
repnz
mov
sbb
sbb
sbb
and
rcrl
pop
ds
hlt
xor
dec
adc
pop
inc
push
push
sub
jecxz
sbb
mov
test
sub
imul
or
xlat
or
enter
or
cmpsl
incb
fistpll
push
out
imul
packsswb
push
jne
dec
mov
xchg
xor
aam
pop
out
in
and
imul
clc
push
pop
and
push
lcall
xor
mov
xchg
testl
xor
xor
push
seto
push
sbb
add
or
movsl
out
dec
dec
mov
popf
dec
add
mov
sub
dec
cmpsl
mov
negb
jecxz
cmp
mov
call
sub
inc
sbb
ja
mov
in
orl
sar
repz
jg
inc
incl
mov
leave
xor
arpl
and
sub
shl
aad
xchg
xor
xchg
movsb
dec
ror
addr16
loop
ret
push
lock
add
sub
pop
subb
lahf
or
mov
sbb
xorb
in
imul
or
int3
in
js
fdivr
in
push
jp
pop
cmp
xchg
push
lret
stos
in
subb
push
imul
fnstsw
mov
xor
sbb
adc
mov
xchg
aaa
inc
push
adc
shl
sub
lods
mov
fidivrs
jmp
in
push
out
fdivr
fwait
dec
and
int3
xor
scas
lcall
xchg
jb
xor
test
cmpsl
dec
cwtl
dec
into
ds
xor
stos
mov
ljmp
int3
loopne
out
jp
testl
popf
insb
sub
testl
push
es
lods
push
jmp
jge
sbb
and
mov
cmp
or
les
inc
es
push
sub
nop
lea
pop
and
pop
dec
fwait
sub
sub
lret
fisttpl
gs
dec
mov
jmp
pop
fwait
icebp
jnp
gs
ljmp
inc
fwait
push
push
lock
and
jp
xchg
into
cmp
dec
cs
sub
add
dec
andb
ljmp
ficompl
mov
push
rcll
xor
outsb
dec
and
cmp
mov
push
outsb
xor
mov
xor
add
mov
sbb
testb
push
pop
aas
aam
js
dec
fcom
pop
sbb
mov
arpl
divb
xor
mov
in
in
mov
lahf
mov
test
test
mov
add
inc
lods
dec
xor
xchg
gs
pop
lahf
dec
add
mov
lcall
popf
cmpsl
arpl
je
ret
pop
or
dec
insb
jmp
mov
lock
movsb
push
ja
push
imul
jbe
fs
jb
or
mov
in
shrl
dec
mov
out
or
js
lods
inc
inc
in
pop
dec
test
cmp
mov
xchg
mov
cltd
mov
addr16
mov
ret
mull
lcall
sbb
insl
adc
jp
inc
sub
mov
adc
dec
es
cmpsl
sbb
cmp
mov
mov
lcall
cmp
fists
pop
add
cmp
inc
addl
in
pop
and
arpl
adc
jle
inc
pop
mov
ss
jl
mov
mov
mov
call
add
adc
mov
pop
cmpsb
push
rcrb
xchg
add
dec
rcll
stos
xchg
out
push
xor
test
pop
popl
addb
fildl
imul
xchg
dec
es
insb
mov
stos
mov
sbb
dec
dec
xor
inc
pop
adc
inc
jp
into
mov
cmp
inc
std
dec
add
push
imul
aaa
push
icebp
fisttpl
jecxz
sub
xchg
lret
push
negl
push
cld
les
fidivs
lea
push
ffree
and
les
mov
das
in
fidivs
in
repnz
and
int3
adc
pushf
mov
ja
and
pusha
jmp
jae
pop
sub
jge
jo
jno
lds
xor
jns
ret
pop
movsl
add
jecxz
push
dec
sbb
xchg
dec
cmp
testl
dec
stc
xchg
jae
sbb
push
push
sbb
xchg
mov
jle
test
jnp
cmp
jb
outsl
gs
jge
lcall
jne
mov
add
aad
leave
jae
aas
cmp
adc
scas
pop
cmp
and
fdivrl
mov
adc
sub
push
mov
inc
dec
jecxz
int
sbb
push
or
inc
adc
fmul
ds
mov
addr16
add
or
add
inc
xchg
out
cli
inc
cmpl
fisubrs
mov
jmp
test
inc
sub
in
pop
aaa
popa
push
std
pushf
hlt
push
jae
dec
and
cwtl
pop
inc
push
mov
rcrb
fdiv
test
movsb
xor
lcall
or
fisubl
mov
jns
xchg
scas
icebp
lock
pop
adc
jbe
cli
push
rcl
pop
dec
jno
out
inc
or
xchg
adc
mov
adc
fmull
nop
xor
daa
push
test
or
neg
push
aas
jno
aam
scas
or
int
mov
std
inc
pop
or
cmp
js
daa
iret
fmuls
pop
mov
sbb
mov
push
in
rcrb
push
cmp
add
inc
or
mov
es
sbb
mov
arpl
sbb
jge
jg
insl
mov
fisttpl
mov
jnp
sbb
mov
dec
and
push
pop
pusha
outsl
push
data16
daa
mov
arpl
push
mov
push
push
daa
sbb
add
js
cmpsl
call
sub
mov
mov
outsb
fildll
xchg
ja
stc
inc
scas
push
mov
xchg
jl
pop
outsl
das
ja
adc
in
push
pusha
das
cmp
pushf
xor
xchg
shll
xor
mov
sbb
icebp
xor
mov
hlt
jg
adc
test
cmpsb
or
sub
lods
jp
scas
dec
pop
push
cld
add
mov
dec
pop
mov
sub
les
jecxz
mov
or
xchg
cmp
imul
int
rcrb
mov
cmpsl
mov
add
inc
ljmp
out
jecxz
fdivs
in
in
mov
std
je
stos
sbb
in
sbb
popa
data16
das
out
push
pop
xchg
fwait
and
call
ja
out
loop
add
ljmp
or
rcrb
cwtl
fwait
outsl
adc
mov
cmc
xchg
push
lods
cltd
into
popf
push
cltd
incl
dec
mov
pop
pop
pop
out
add
faddl
cs
iret
mov
adc
jl
fsubl
stos
or
cmp
mov
mov
mov
or
jg
ljmp
jo
sbb
das
data16
or
adc
clc
sub
push
adc
in
push
jmp
daa
rcl
mull
filds
sbb
pop
test
cltd
pop
pop
mov
xor
mul
push
push
and
jne
out
jne
ret
or
rolb
cwtl
pop
add
cmp
ret
add
add
dec
movsl
sbb
subl
push
or
cmp
scas
lea
inc
mov
fildl
pop
add
cld
lahf
cwtl
xlat
dec
push
movsl
mov
mov
inc
cmpsb
pop
jbe
push
icebp
aad
xor
mov
scas
pop
mov
jae
cmc
push
adc
adc
pusha
mov
pop
outsl
lods
imul
pusha
lahf
das
xor
mov
mov
dec
lock
mov
test
inc
mov
and
jl
out
mov
pop
add
and
cld
dec
lret
cmc
adc
out
push
ss
sbb
and
or
std
mov
cmpsb
sub
fisttps
push
lods
adc
dec
popf
roll
and
adc
cmp
lods
mov
pop
mov
cmp
mov
pusha
sub
adc
daa
xchg
mov
xor
loop
push
jbe
mov
repz
jg
ds
push
lcall
xchg
lret
mov
xchg
popa
xor
jns
xchg
push
and
jbe
imul
jb,pn
clc
inc
xorb
cmp
mov
call
xchg
adc
in
addl
repnz
or
sub
xlat
daa
mov
mov
js
jae
jle
xor
sub
mov
std
test
and
in
push
cmp
cmp
push
mov
aam
data16
dec
pushl
jb
adc
mov
and
push
jg
push
and
adc
mov
jmp
stc
hlt
lret
mov
lahf
push
dec
movsb
ss
xor
push
mov
and
test
mov
lahf
jecxz,pt
mov
pop
xor
sahf
mov
addb
add
add
rcll
je
sarb
cwtl
pushf
repnz
mov
xchg
rcrl
pop
dec
mov
pop
stos
sub
mov
jmp
mov
push
lret
inc
stos
or
mov
sti
push
es
cs
lods
lret
es
fmull
sbb
cmp
ss
push
bound
xor
push
pop
xchg
call
pusha
pop
pop
movsb
cmpsb
nop
mov
fsubrs
adc
ljmp
insb
mov
lods
gs
dec
ljmp
in
shlb
bound
js
pushf
pushf
cmp
xor
lret
push
sarl
and
sub
mov
sbb
jno
xchg
and
mov
loopne
lods
dec
push
add
pop
jns
lea
repnz
jbe
add
add
insl
xchg
pop
loope
fildll
xchg
je
push
sbb
repnz
xor
xor
cld
fldl
roll
hlt
ja
mov
repz
xchg
adc
jne
fldenv
sbb
sti
and
mov
out
push
pushf
mov
in
nop
xchg
fwait
xchg
sbbl
mov
dec
dec
pusha
sbb
push
stos
inc
or
movsl
pusha
push
mov
cmp
movsb
cli
repz
ret
les
test
dec
cmc
sahf
outsl
mov
inc
ja
mov
pop
popf
int
sub
je
mov
mov
out
incb
jmp
mov
out
fists
cmp
jecxz
push
mov
bound
pushf
xor
sub
jmp
sub
cld
insl
or
insb
fdivrl
arpl
outsb
add
mov
mov
add
jno
imul
ret
jo
mov
cmpsl
int
mov
cs
xor
out
icebp
aam
sub
xor
and
and
xchg
and
mov
lret
imul
movsl
push
mov
jmp
in
int3
add
scas
add
or
mov
and
testl
sbb
dec
jle
jb
dec
bound
or
mov
es
xchg
xchg
ljmp
into
sbb
push
mov
jo
movsb
cmpl
ja
xor
je
mov
xchg
xchg
in
jne
sahf
mov
fsubp
xchg
push
incl
push
stos
jle
cli
xor
mov
xor
sub
pop
and
add
mov
mov
rcl
mov
in
mov
pop
rclb
sti
mov
add
jno
sbb
nop
lock
mov
mov
adcl
mov
xchg
gs
mov
decb
inc
stos
out
push
sub
cmc
sti
int3
orl
jb
mov
or
inc
adc
jbe
dec
jecxz
pop
je
sub
jae
mov
fcoml
ja
cs
and
pop
lds
clc
es
jecxz
ja
add
push
lea
arpl
mov
outsb
pop
push
ret
adc
enter
out
pop
std
ljmp
sbb
lret
aaa
fwait
jne
mov
jge
scas
push
dec
aas
stos
clc
ja
scas
push
mov
lods
fisttps
cli
int
cltd
jge
inc
and
dec
pop
rorb
lcall
mov
js
mov
dec
jne
scas
mov
inc
int3
or
inc
aam
push
adc
aad
sahf
mov
cmpsl
cld
shrl
cltd
sahf
jno
loop
outsb
jne
adc
arpl
ret
push
and
gs
lods
ljmp
outsb
lret
xor
jns
es
jne
jne
mov
mov
inc
addr16
or
dec
test
mov
mov
pop
mov
enter
sbb
test
cmpsl
xchg
insb
adc
pop
or
sbb
sub
inc
addl
mov
aad
pop
cwtl
insb
add
in
push
push
pop
and
jns
call
mov
jo
test
or
ja,pt
lock
and
jle
mov
jecxz
aad
cld
mov
mov
and
adc
jg
jmp
loope
lcall
lahf
xchg
mov
ljmp
js
mov
insb
add
int
mov
lock
fisubl
cmp
push
mov
cmp
cmp
jnp
pushf
and
das
stos
mov
fisttpll
sar
cwtl
lret
push
icebp
and
xchg
jmp
xchg
push
xchg
ja
add
out
sub
lock
outsb
mov
daa
push
xchg
pop
mov
mov
push
add
xor
mov
sub
dec
mov
out
inc
push
in
xor
pop
aaa
enter
bound
or
call
cmp
test
add
and
mov
inc
cmp
out
outsb
xor
nop
inc
xchg
inc
pop
bound
imul
enter
test
dec
or
aas
mov
xlat
fcoml
adc
mov
ret
add
loope
jmp
push
mov
or
inc
or
ja
push
push
aaa
jle
add
cs
or
push
or
xchg
xor
movsb
sub
je
jmp
loopne
push
lahf
mov
pop
push
pop
add
daa
repz
stc
jle
sbb
loop
sti
jbe
sub
jg
pop
scas
pop
lock
arpl
outsl
lahf
aad
jnp
sub
or
jg
xor
mov
daa
lods
sahf
cwtl
mov
or
inc
fisubrl
int3
cmp
and
mov
jp
fildl
mov
dec
shlb
fwait
xor
xor
ds
subb
jg
add
ljmp
push
das
nop
mov
xchg
jo
stos
into
outsl
cs
push
sub
xchg
cwtl
xchg
mov
popf
and
mov
mov
sub
mov
sti
jo
cld
push
cltd
dec
mov
mov
jge
mov
das
gs
iret
and
sub
lds
mov
pop
sbb
outsl
xor
divps
dec
call
jne
pop
and
ljmp
test
mov
popf
shlb
adc
orl
idivl
movsb
fbstp
cwtl
lcall
inc
andb
das
sbb
enter
shrb
std
les
xlat
xchg
in
mov
adc
sarl
std
cmc
or
mov
or
dec
lock
dec
mov
cld
dec
xchg
fwait
adc
in
xor
push
sbb
pusha
xor
shll
jo
inc
inc
add
mov
adc
test
test
out
test
dec
add
push
test
outsb
loop
je
or
ljmp
and
mov
js
iret
pop
rep
clc
xor
mov
jecxz
dec
movsl
rcrl
inc
adc
sti
dec
jae
dec
sbb
lods
sbb
inc
xchg
mov
jle
adc
inc
or
stos
sbb
inc
pushf
inc
jg
add
xlat
out
fsts
mov
orl
adc
shlb
cmp
insl
jb
cli
jns
mov
aaa
dec
mov
fistpl
pop
jbe
leave
clc
in
in
pop
cli
sub
sbb
daa
xor
fisubrs
into
aam
testl
lret
push
fwait
push
iret
jnp
insl
bound
das
loopne
adc
mov
nop
dec
or
pop
and
in
jo
dec
sub
sahf
jns
jne
popf
sub
inc
test
popa
movb
sti
cmp
hlt
cmpsl
xor
mov
lahf
stc
sub
neg
lods
mov
mov
xchg
in
dec
repz
lds
jbe
sub
movsbl
xchg
jno
add
idiv
mov
xchg
imul
test
sbb
insl
pushf
cmpsl
addb
push
fcompl
scas
mov
fildl
cmpsb
dec
xchg
fstps
inc
daa
sub
lds
push
and
mov
mov
aad
and
leave
pop
adc
ja
mov
dec
mov
loop
dec
add
push
jb
sbb
jl
xor
lcall
imulb
ffree
xlat
push
add
sbb
sbb
std
jg
loope
fstp
mov
cmp
or
cli
lds
in
cwtl
jns
test
mov
xlat
jno
xchg
add
dec
popf
push
pop
jns
lock
xor
loop
test
xor
ja
or
and
neg
pop
loop
pop
and
dec
jg
lds
aas
mov
pop
fs
mov
or
int3
in
sbb
lock
data16
stos
mov
xchg
xchg
mov
fwait
subb
xchg
stc
push
fs
mov
imul
sub
shr
mov
in
cmp
aas
fsubrs
negb
adc
add
inc
mov
divl
stos
daa
and
inc
and
ja
cs
push
stos
and
dec
mov
jnp
sub
addr16
lret
js
mov
pop
xchg
daa
xor
adc
out
add
sub
insl
js
fldl
jo
out
jp
mov
mov
cmp
dec
ret
orb
mov
and
and
xchg
pushf
push
mov
dec
add
sub
outsb
enter
jns
mov
lea
lcall
jmp
sahf
mov
xor
loop
add
int
cmp
fcoml
in
sbb
xor
mov
mov
es
lods
add
test
push
inc
idivb
push
inc
in
dec
mov
insb
sbb
aaa
and
push
xchg
adc
fmuls
jnp
adc
dec
mov
cwtl
push
lret
lcall
mov
pop
xor
out
std
pop
push
in
pop
push
jno
dec
mov
cmp
adc
ficomps
lret
sbb
imul
pop
int3
xor
fistps
add
daa
aad
ja
mov
in
stos
mov
inc
out
mov
lods
xorb
inc
in
adc
add
cmpsb
and
das
je
add
push
pushl
imull
test
sahf
fbstp
cmp
leave
daa
ja
test
sbb
inc
adcl
sbb
jmp
push
addr16
inc
dec
fucom
or
add
daa
cwtl
fwait
mov
bnd
add
sbb
imul
adc
dec
mov
mov
jo
lods
pop
cmp
subb
xchg
push
push
push
jl
xchg
lcall
jae
push
out
daa
push
and
sbb
cmpsb
icebp
clc
insb
push
jo
mov
rcll
loop
movsb
or
stos
push
scas
adcl
mov
xlat
push
or
dec
jae
in
jae
out
xchg
and
cltd
addl
outsb
jge
mov
push
add
loopne
push
jns
pop
cmc
cmp
fisubrs
adc
pop
mov
push
ljmp
jbe
repnz
mov
xchg
fsubrs
pop
jne
cmp
push
inc
cmp
or
outsl
fcompl
ljmp
pop
nop
popf
ss
stc
lock
dec
popf
aas
pop
cli
stos
lret
push
in
ljmp
pop
mov
push
mov
leave
xchg
int3
psubusw
vhsubpd
ss
cmpb
imull
dec
sub
xor
aad
imul
mov
out
add
fimuls
je
test
mov
aam
aam
push
adc
out
pop
fisttpll
mov
push
mov
les
data16
sarb
int3
mov
mov
inc
cmp
stos
pop
loopne
dec
xchg
push
adc
xor
ret
or
xchg
inc
push
test
aaa
je
cmp
dec
and
xlat
repz
out
rolb
jns
push
ja
scas
out
mov
inc
pop
pop
cmp
inc
cwtl
gs
pop
cmpsb
lahf
xor
ds
popf
cvtps2pd
cmp
ret
sbb
and
test
mov
pop
lock
nop
and
ficomps
out
and
adc
inc
pop
test
shl
add
hlt
cmp
lods
test
in
jg
or
ret
scas
pushf
mov
and
inc
in
adcb
mov
jle
jmp
push
out
xor
cmp
sbb
mov
mov
lcall
sub
shr
pop
dec
into
or
in
mov
xor
fnsave
add
mov
xlat
data16
jge
adc
negl
jl
or
out
inc
mov
setp
sbb
sti
dec
repnz
stc
adc
mov
test
and
add
mov
mov
scas
dec
add
push
js
adc
bound
mov
add
sti
xor
imul
inc
fxam
push
aaa
xchg
aad
inc
push
test
sub
lods
pop
lcall
stos
aam
sti
call
mov
sub
and
leave
jmp
nop
test
dec
xor
stos
add
sub
lcall
movsl
pop
xchg
shl
fcoms
inc
lret
jle
adc
mov
in
push
cmp
mul
push
and
out
icebp
enter
scas
iret
jno
loope
inc
dec
and
sbb
or
pushf
test
es
mov
popa
xchg
adc
mov
dec
jmp
out
ss
rorl
mov
xchg
sahf
in
lcall
xlat
loope
xor
dec
in
cltd
mov
mov
loop
xchg
fcmovnu
cmp
test
lock
hlt
loopne
stos
ljmp
ret
repz
pop
ss
ja
adc
rcl
cmp
imull
int
and
jno
xor
push
mov
out
sbb
push
sbb
nop
es
jl
in
lods
movsl
shll
sub
push
xchg
pop
pop
mov
ss
jp
xchg
mov
scas
sub
ja
lods
js
cld
xor
rcrb
xchg
es
xor
jl
push
push
xor
test
cmc
and
repz
mov
sti
lahf
jo
push
xchg
add
shll
nop
les
lcall
push
jnp
imul
loop
in
pop
js
xor
fndisi(8087
mov
mov
dec
jp
mov
and
adcl
push
mov
dec
lahf
push
mov
mov
inc
testb
bndstx
mov
lcall
push
fsubr
stc
out
or
mov
push
push
aam
mov
dec
xor
int3
sar
in
add
cmp
stos
xlat
and
repz
xchg
pop
cmp
jge
sub
mov
pop
movsb
rcr
scas
ja
in
loope
fwait
cmp
push
out
cmc
lods
int
xchg
sbb
movl
scas
vpunpcklwd
das
xor
jp
adc
xor
nop
sbb
std
gs
stos
cltd
jge
mov
js
test
movsb
push
mov
es
fsubrl
fimuls
jbe
add
in
daa
mov
shlb
mov
repz
shll
xor
jnp
cltd
popa
sub
aam
xchg
pop
push
call
leave
and
fcomp
clc
movsl
jge
jns
inc
add
lds
loopne
mov
dec
mov
mov
fsts
lahf
jmp
loope
into
fs
sbb
sub
pop
pop
mov
jo
stos
mov
jg
repnz
das
pusha
xor
aaa
loopne
mov
out
push
cmpsl
dec
pop
or
sbb
jmp
jp,pn
std
cmp
imul
jb
imul
out
cmpsl
fldl
cmp
shlb
jle
lds
push
icebp
push
in
cmp
mov
cwtl
decl
mov
movsl
push
mov
jle
rcll
stos
rclb
cwtl
push
push
sub
lahf
inc
icebp
in
into
sub
sbb
add
xor
call
push
mov
pop
into
fs
fnstsw
rcll
shrb
cmpsb
sub
popf
add
hlt
fnstenv
sbbb
sub
adc
jle
mov
repnz
ss
nop
hlt
shll
mov
hlt
push
sub
lea
fidivl
xor
loope
mov
jecxz
jg
fistl
add
push
mov
out
mov
call
xor
push
outsb
jmp
jae
dec
stos
mov
pop
adc
inc
lahf
int
jecxz
insb
pop
call
fwait
sbb
fcomps
pop
stos
or
mov
cmc
lods
cmp
pushf
aam
pop
xor
xchg
sahf
add
aam
lock
jmp
jge
mov
movl
xchg
loope
ret
add
mov
loopne
ret
nop
mov
leave
jb
mov
daa
xor
imul
lret
pop
lcall
sbb
and
mov
push
jnp
data16
jae
mov
repz
sbb
int
mov
jg
adc
push
add
inc
mov
pop
lods
mov
jge
test
int3
fiadds
adc
lret
shlb
sbb
ret
aad
sbb
pop
into
iret
xlat
mov
or
sbb
int
or
add
fcmovnu
lcall
push
mov
call
ss
xchg
mov
icebp
lret
cmpsb
scas
mov
cmpb
mov
sub
mov
aad
mov
sbb
cmpl
iret
push
add
je
roll
cmp
fstl
inc
push
push
push
gs
test
pop
add
sarb
clc
mov
mov
out
cmp
adc
mov
dec
popf
or
push
divb
ret
push
psrld
das
fiaddl
jle
xor
cmovo
int3
cmp
inc
into
mov
pop
fwait
and
nop
mov
fnstsw
push
bound
mov
lcall
inc
in
push
out
dec
ret
imul
dec
push
fs
aam
stos
cwtl
ficoml
xchg
movsb
jno
inc
jl
popf
in
xlat
mov
pop
repz
push
lea
arpl
push
adc
aad
jns
repz
iret
lret
imul
jge
arpl
inc
sub
lea
fstps
mov
mov
lock
fwait
dec
xor
dec
test
mov
es
push
and
push
jns
sti
in
repz
cli
mov
daa
pop
inc
or
ljmp
lea
jecxz
jle
ss
ja
scas
dec
xor
test
inc
cmovo
sub
sub
xchg
inc
xchg
sarb
sub
mov
or
cmpsb
cmp
popf
loopne
mov
stos
mov
outsb
imul
dec
dec
sub
xor
pop
lahf
inc
and
out
add
xchg
lds
aam
and
cs
mov
or
shrb
mov
aam
jle
or
add
jl
imul
mov
rcl
loopne
test
fcompp
dec
jp
vxorps
fucomi
or
arpl
cmpsb
and
aaa
subl
pop
loopne
push
xchg
xor
lock
leave
orl
ss
or
dec
dec
push
push
rcll
roll
das
sbb
jp
test
test
mov
lods
and
mov
mov
fcom
push
in
fstpt
mov
pop
dec
add
sbbl
sbb
mov
push
addr16
jae
mov
sbb
outsb
mov
test
inc
popa
pop
call
jbe
hlt
xor
fistpll
mull
or
mov
push
test
cmp
fadd
jmp
nop
push
or
mov
xchg
push
or
xchg
mov
in
jne
pop
mov
addr16
mov
stc
insb
std
cmp
sub
sbb
and
cmc
cmp
add
les
inc
mov
cmp
jnp
dec
mov
aad
push
in
cltd
ror
outsb
jle
adc
push
into
jmp
sbb
rcr
sbb
sub
dec
inc
push
push
sti
lret
adc
ret
add
jp
stc
lods
adc
cmp
jle
clc
scas
daa
js
mov
or
loopne
je
mov
dec
sbbl
xorl
clc
enter
push
movsl
push
stc
lret
xor
mov
daa
xor
adc
and
mov
dec
or
cmp
xchg
bound
xor
pop
adc
cmpsb
sbb
aas
es
adcb
mov
in
pop
jnp
cmc
sub
sbb
daa
decb
mov
aam
bound
push
hlt
xchg
xchg
pop
pushaw
out
cmp
es
adc
and
xor
cld
jno
test
bound
xchg
popf
and
cmp
ja
inc
fdivs
movsb
pop
cli
mov
jg
cltd
insb
dec
jb
pop
rorl
ds
or
pop
lcall
adc
out
gs
mov
int3
and
aas
pop
icebp
push
push
add
inc
jns
adc
jle
std
or
cltd
inc
orl
dec
js
push
pop
sub
mov
or
and
pop
dec
and
xlat
mov
sub
jg
cwtl
ret
push
dec
inc
in
aaa
stos
mov
rolb
sti
inc
xor
xor
vcmppd
and
add
sbb
and
push
outsl
sub
ljmp
xchg
mov
pop
mov
imul
popa
inc
cmp
mov
cmpsb
cmp
call
mov
jmp
loope
xlat
inc
sub
mov
fcmovnu
call
dec
add
hlt
sbb
mov
jge
cmp
pushf
loopne
loope
loopne
lcall
push
pusha
arpl
adc
insb
dec
cltd
push
jge
cs
push
insb
and
test
test
sbb
test
or
mov
pop
adc
mov
in
lds
out
jns
test
daa
pop
dec
leave
and
imul
mov
das
cmpsl
fnstenv
insb
pop
xadd
jo
xorl
jmp
ss
popf
jg
add
push
pop
bound
movsb
shrb
dec
rep
ret
sarb
cs
mov
push
mov
push
and
js
cmp
mov
int
roll
fstl
xorb
lret
fcoms
push
roll
jae
into
xchg
inc
push
bound
mov
add
inc
mov
mov
lods
adc
jbe
jbe
xor
mov
or
fwait
push
mov
xchg
loop
add
dec
pop
pop
inc
inc
decl
std
gs
loope
loopne
psubw
pop
fwait
in
adc
into
cmpb
pop
negl
mov
movsl
and
push
jp
xor
mov
push
and
lea
dec
hlt
or
popf
jmp
or
sahf
inc
cwtl
rclb
pop
add
arpl
fisttpll
mov
cld
push
push
adc
sub
mov
inc
xchg
push
dec
pop
imul
mov
in
je
int
xlat
mov
cmpb
sti
mov
lret
push
dec
aam
in
sub
out
in
and
push
fiaddl
stos
lcall
adc
pop
lret
lea
aad
out
sbb
repnz
mov
jg
ss
cmp
jnp
cltd
scas
subb
cs
inc
inc
aad
xor
in
and
cwtl
cmp
cltd
les
sub
shll
lea
cmp
lahf
stos
clc
loope
pushf
jo
or
outsl
shll
add
int
rcrb
mov
mov
xchg
stc
mov
and
pop
ret
mov
cltd
or
daa
sbbl
sub
mov
sub
mov
push
jns
fstl
repz
aad
lret
out
inc
iret
mov
push
xlat
dec
lcall
adc
test
jns
fiadds
mov
mov
shrl
inc
adcb
inc
enter
bound
or
or
or
sbb
push
aad
mov
stos
mov
lock
mov
push
ja
lcall
fcompl
pop
into
icebp
ja
sbb
mov
daa
and
dec
leave
add
and
xorl
insl
data16
js
xor
jl
mov
loope
or
mov
mov
adc
pop
cmp
fsubrl
sub
mov
stos
pop
push
lret
mov
sub
je
push
mov
sarb
add
icebp
jle
sub
fstpt
mov
imul
fisubs
cmp
push
test
inc
or
mov
mov
in
mov
inc
mov
test
mov
dec
xor
hlt
mov
inc
aad
fwait
or
out
xchg
jb
out
pop
mov
mov
lahf
pushf
and
test
inc
test
xor
jo
xchg
pusha
jae
sub
in
loope
and
test
into
xchg
in
fdivrl
fs
pop
aad
cmpl
add
das
and
stc
lods
pop
testl
dec
insb
popf
mov
popa
js
jo
je
xchg
repz
xchg
add
mull
ret
cmp
movsb
cs
mov
in
hlt
lret
pop
cmp
pop
or
cmp
andb
mov
insl
enter
xchg
stos
mov
xor
inc
and
xor
hlt
xor
test
sarl
push
push
fildll
adc
out
nop
lock
imul
mov
int3
mov
and
bound
pop
cwtl
xchg
cmp
loop
out
dec
mov
lret
sahf
sbb
add
stos
xor
push
add
sbb
pop
push
icebp
loope
jno
pop
cld
out
push
stc
pop
mov
cmpsl
nop
xchg
jb
add
xchg
test
inc
inc
pushl
or
pop
or
mov
xchg
ds
sub
mov
jno
lret
adc
es
adc
xchg
std
and
push
add
test
xchg
lea
movsl
fisubrs
push
jge
test
cmp
cli
push
loope
or
jne
push
rolb
jle
imul
in
cmc
ss
mov
jns
cwtl
mov
jecxz
fstps
cld
enter
jns
sbb
loop
sbb
lods
or
nop
xchg
loopne
cmpsb
stc
pop
popa
jno
push
call
sub
mov
test
jecxz
sbb
or
fwait
mov
xchg
cli
test
ret
xchg
mov
lcall
inc
cmp
pop
mov
add
insl
jbe
dec
std
mov
mov
push
mov
pop
dec
dec
bound
cmp
in
clc
gs
call
and
xchg
push
adc
cmp
and
mov
dec
jg
cmp
popa
or
bound
push
ret
or
insl
fwait
adc
mov
dec
enter
push
mov
push
and
aad
gs
movsl
sbb
dec
outsl
xor
adcb
cmpl
stc
pop
out
xchg
lret
and
dec
lret
xchg
jl
inc
in
out
aad
flds
xor
and
add
push
roll
fwait
fs
xor
arpl
icebp
jne
cmpsl
adc
jg
scas
xor
rcrl
jmp
and
mov
ljmp
push
adcl
movsl
and
cmpb
xlat
adc
mov
xchg
inc
mov
movsb
cmp
inc
aaa
jbe
ficoml
and
inc
mov
lea
or
adc
inc
add
rcll
or
xchg
pop
xor
gs
repz
xchg
push
scas
pop
sbbb
push
jg
cli
lea
cmpsl
out
sbb
xor
bound
xor
inc
pop
scas
or
jle
cmp
and
testb
jge
cmpsl
and
movsb
cmc
mov
test
testb
icebp
nop
mov
cmpl
jns
or
mov
dec
mov
add
mov
out
nop
inc
dec
mov
jnp
and
fldenv
fidivrl
cmp
pop
js
mov
imul
gs
out
jno
xlat
cmp
repnz
clc
lret
mov
cmp
jne
outsl
mov
xchg
shlb
enter
mov
stos
push
repz
fldenv
cmp
aas
xor
shrl
rcl
cmp
int3
push
outsl
scas
xor
inc
cltd
pop
sub
fs
jge
lds
test
adc
and
in
add
cmc
test
pop
and
push
jmp
cmp
sahf
movsb
add
mov
xchg
or
inc
enter
sbb
inc
and
add
and
or
popf
ret
mov
mov
inc
inc
dec
cmp
sbb
ljmp
xchg
or
dec
out
mov
sub
out
ljmp
hlt
dec
cmpsb
insb
sbb
out
stc
xchg
in
pop
sbb
adc
xchg
fcmovb
cmc
push
add
idivb
fists
lods
pop
dec
pop
adc
cmp
adc
mov
test
shr
sbb
mov
lcall
repnz
inc
adc
and
ss
scas
push
loop
repz
lods
scas
cwtl
int
divb
push
sub
mov
outsb
out
int3
adc
scas
mov
hlt
adc
test
jle
or
rol
or
push
xor
xor
push
lods
arpl
aam
xor
sbb
push
inc
popa
test
mov
xchg
iret
in
fisubrl
mov
xchg
pop
scas
xor
push
sbbb
lahf
orb
mov
sub
aad
cmpsb
test
jb
pushf
xchg
push
mov
xor
test
sub
push
jnp
ror
fnstsw
adc
sbb
push
or
out
negb
xchg
jo
scas
add
xor
ror
or
mov
addr16
fidivrs
mov
sbb
mov
cld
fnstsw
or
js
push
mov
jmp
roll
decb
stos
sub
movntps
add
setbe
inc
call
xor
insb
iret
jae
inc
push
pushf
or
xchg
mov
lea
jbe
data16
out
jae
mov
fsubl
rcl
js
arpl
cmp
rolb
in
xorb
in
sarl
jmp
lea
sbb
inc
cli
iret
repz
iret
jno
pop
jecxz
push
mov
int3
jp
mov
add
outsb
pop
icebp
sub
call
mov
lret
imul
lock
in
xchg
mov
lret
push
mov
cmp
pop
sbb
mov
sbb
dec
cld
xchg
jns
nop
cmp
stc
out
outsb
pop
dec
rcll
or
hlt
and
push
out
shrl
lock
fmulp
fistps
push
fcompl
imul
lock
jne
loopne
add
xor
gs
mov
cmp
mov
popf
into
fs
jle
arpl
lods
mov
and
mov
inc
dec
lahf
and
popf
mov
inc
aam
mov
scas
testb
stos
xchg
ret
or
lea
mov
call
mov
inc
adc
nop
sahf
sarl
call
sahf
adc
xor
jb
xchg
mov
fidivl
imul
mov
and
add
divb
insl
or
sahf
cmpsb
ss
dec
clc
dec
xchg
outsl
mov
stos
mov
cmpl
sahf
test
sbb
pop
mov
push
ret
adc
mov
enter
popa
daa
pop
stc
insl
ficoml
fisubs
fimull
sbb
dec
or
shl
or
pop
add
mov
in
in
xchg
push
and
inc
iret
dec
push
mov
pushf
xor
dec
in
sub
xchg
jp
pop
in
xchg
test
call
out
xor
jo
mov
rcrl
arpl
test
pop
ret
jl
cli
in
js
dec
lea
jb
leave
arpl
aas
sub
lock
mov
sbb
faddl
pop
xor
xor
dec
xor
popa
mov
aaa
fmull
dec
fwait
mov
mov
sti
xlat
lsl
and
add
push
mov
cwtl
pop
pop
mov
lret
pop
aam
clc
add
cmpsl
dec
cmp
xchg
add
outsb
or
xchg
adc
test
cmc
int
aam
ja
sub
adc
push
imul
jnp
aas
and
xor
repz
adc
leave
shr
scas
sbb
cwtl
xchg
push
mov
inc
inc
pop
pop
push
pop
pop
xor
xor
xchg
out
mov
jne
cmp
daa
insb
cmpsl
mov
pop
gs
das
clc
lods
xlat
imul
and
test
and
stc
jecxz
movsb
jle
sbb
sbb
imulb
add
dec
clc
outsb
jnp
inc
cmp
repnz
push
orb
cmpsb
cwtl
jbe
pop
sbb
stc
sub
sbb
hlt
loopne
imul
and
push
add
xlat
or
mov
int
aaa
je
sub
sub
mov
and
adc
icebp
inc
lods
mov
leave
dec
push
mul
daa
mov
pop
jb
jg
je
testb
js
xor
add
nop
push
adc
mov
aad
inc
out
inc
cmp
jno
mov
sbb
bound
push
add
lcall
mov
sti
sarl
dec
dec
lds
sbb
fwait
add
mov
cmp
sub
ficomps
and
jge
stc
shl
lock
and
jmp
lahf
mov
xchg
out
mov
pop
fmul
je
mov
jno
int
mov
jle
xor
fsubl
add
pop
aam
loopne
in
test
and
xchg
pushf
pop
and
or
push
xchg
pop
jle
pusha
outsb
addr16
imul
fcoms
cmp
mov
sub
mov
fsts
out
push
arpl
pop
sub
rcll
stos
xchg
js
mov
mov
test
dec
data16
adc
mov
out
pop
orl
mov
or
cmp
push
or
mov
sbb
aam
mov
inc
and
pop
and
and
sbb
ret
mov
push
fs
ret
test
cmpsb
outsb
test
dec
pushf
pop
cld
mov
roll
ds
sahf
in
or
mov
pop
sbb
dec
lcall
cmp
movsl
adc
or
cmp
mov
inc
imul
ss
les
inc
dec
push
sti
mov
sarl
and
fsts
mov
stos
push
sub
idiv
dec
mov
mov
xchg
cmc
push
into
imul
dec
inc
inc
cmp
push
jnp
lds
mov
pushf
push
les
mov
lret
pop
stos
xchg
icebp
jl
aaa
popf
int
jnp
mov
jnp
push
add
xor
pushf
pop
sar
dec
arpl
shrl
std
add
sub
dec
lcall
inc
adc
fistl
add
jmp
sbb
into
xchg
sub
mov
mov
sub
repz
inc
test
into
fucomi
jle
sub
es
or
dec
mov
jle
xor
fsubrl
or
push
cmp
ja
lahf
fiaddl
inc
mov
xchg
scas
jae
push
test
adc
jnp
or
in
sub
orb
gs
push
out
pop
lods
add
shl
mov
push
in
mov
es
xchg
popa
pop
jo
sub
call
insl
push
jb
dec
push
dec
lcall
dec
cmc
shll
and
jg
sti
pop
jae
and
frstor
ret
data16
add
imul
adc
adc
mov
outsl
xchg
adc
scas
lods
dec
mov
jbe
adc
cs
pop
push
sbb
loopne
pop
or
mov
dec
jo
ja
mov
mov
out
add
stos
decl
cmp
in
in
mov
mov
inc
data16
ljmp
dec
iret
jo
push
enter
xlat
out
orl
xchg
ljmp
dec
mov
jg
cmp
adc
bound
sbb
jmp
test
pop
xor
ret
daa
push
pop
add
jnp
out
inc
mov
jns
stos
cmp
add
loope
mov
jnp
jg
loop
push
popa
int3
cwtl
push
dec
mov
cli
mov
cmp
int3
push
imul
iret
adc
mov
add
adc
add
bound
movsb
cmp
and
push
movsl
xchg
sti
xor
mov
into
pusha
lea
rcl
enter
in
adc
out
test
sub
dec
and
out
dec
rorl
jmp
inc
xor
lret
jle
push
or
sbb
jns
cmp
jmp
mov
and
adc
xor
xor
ja
inc
xor
test
enter
and
lahf
int3
and
cltd
movsb
lods
in
xor
jo
pop
addl
xchg
mov
insb
lds
xchg
std
adc
cltd
xor
push
push
sti
mov
out
jg,pn
mov
and
cmpsl
loop
push
mov
aad
mov
sahf
shll
scas
cld
imul
orb
mov
pop
xchg
jae
movsb
jno
jbe
push
pop
xor
mov
mov
sahf
cwtl
pop
adc
mov
movsl
jl
inc
xchg
hlt
cmp
sub
sub
adc
cli
hlt
das
aas
divb
inc
and
xchg
ret
mov
stos
bound
rorb
lods
and
push
sub
jo
rolb
dec
ja
lret
rcl
mov
pushf
mulb
jne
pop
mov
mov
and
dec
rorl
cmp
mov
cmpsl
out
lock
adcb
cld
cmc
and
mov
stos
sub
or
lods
jle
mov
mov
out
iret
out
cwtl
jmp
movsb
sub
je
in
inc
add
jle
bound
les
cmpsl
inc
cmp
arpl
divb
mov
fcompl
cmp
adc
aas
aad
mov
movsb
xor
mov
add
insl
lods
adc
cmp
outsb
or
add
pusha
pop
or
movsl
nop
ret
mov
push
lret
int3
inc
ja
jl
push
ljmp
lods
pop
pop
mov
int3
jb
out
aam
mov
arpl
stos
fisttps
hlt
bound
dec
lods
loopne
andl
push
pop
addr16
stc
dec
popf
jne
pop
loop
sub
pop
adc
mov
or
lret
add
movsl
push
xlat
push
adc
push
loop
out
pop
stos
xchg
dec
xchg
jmp
icebp
shll
dec
ss
mov
push
pushl
lds
popf
fdivl
lock
enter
or
xor
decb
fst
sbb
out
clc
shrl
in
sub
xor
lock
adc
mov
xchg
add
out
pop
fdivrl
in
mov
ss
out
mov
mov
cmpsl
in
call
cwtl
loopne
and
mov
jnp
or
xor
inc
dec
sahf
popa
sbb
xor
in
mov
fisttpl
enter
inc
out
jl
sub
sahf
test
inc
stc
sbb
out
in
and
push
sub
repz
mov
mov
adc
add
inc
pop
dec
jp
dec
mov
jmp
dec
aas
das
push
jecxz
mov
mov
mov
mov
xchg
imul
into
dec
or
cwtl
loopne
es
push
cmpsl
mov
push
aaa
pop
loope
pop
nop
and
push
jmp
pop
push
jae
out
pop
and
add
in
add
push
push
push
dec
push
or
cmp
pop
jle
jecxz
or
subb
lea
dec
inc
mov
pushl
adc
push
es
adc
xchg
jp
push
mov
mov
outsl
fbld
jbe
mov
mov
int
scas
outsb
sbbb
push
std
or
sbb
nop
movsb
fidivs
fnsetpm(287
cltd
fwait
mov
loope
stc
gs
mov
ljmp
and
xchg
aaa
lret
daa
inc
loope
mov
test
mov
lahf
jno
fadds
test
pop
mov
mov
fisubrl
adc
mov
jae
mov
mov
std
adc
sub
cltd
testl
daa
montmul
cmpsb
inc
and
lahf
xchg
fcomps
or
and
jl
movsb
push
stos
jne
and
cmp
xchg
ficomps
and
mov
pop
and
repz
not
loopne
xchg
pop
xlat
neg
xchg
xchg
cld
add
pop
mov
and
lock
enter
rcll
in
leave
mov
cld
mov
aaa
es
mov
adc
pop
in
mov
jae
dec
stos
inc
aad
ficomps
popa
scas
cmc
lock
push
jle
fisubs
bswap
lret
add
gs
shl
imul
lret
cmp
dec
adc
les
or
scas
popa
xor
loopne
xchg
adc
in
daa
and
lret
out
and
int
cmp
lock
sbb
pop
mov
mov
mov
movsb
or
into
xchg
jno
clc
dec
lods
pop
or
dec
nop
cwtl
mov
mov
push
cmp
push
cmp
sbb
adc
or
cmc
jo
pop
mov
xor
sub
mov
jnp
das
mov
clc
mov
imul
xor
or
loop
cwtl
test
xlat
add
mov
adc
fldt
xchg
bound
es
movsb
movsl
xor
jo
jns
nop
jl
orl
pop
roll
test
jecxz
movzbl
pushf
sbb
inc
adc
jl
aaa
int3
inc
xor
test
xor
int3
dec
cmp
sub
sbb
test
sbb
aaa
loop
and
loope
adc
shr
adc
inc
rorb
add
push
xor
fsub
and
pop
push
inc
shrl
push
int
popf
cmp
fistpll
sbb
sbb
adc
sub
jno
cmp
ret
mov
rolb
les
stos
dec
push
push
test
lds
add
inc
orl
mov
fimuls
or
or
loopne
xor
fidivrs
into
lea
fisubl
cltd
adc
dec
lret
jg
or
int
fldenv
enter
jne
cli
pop
mov
repz
ljmp
sub
mov
rcll
sbb
inc
ds
dec
jge
push
enter
rcr
fistpl
addl
pop
in
cwtl
or
iret
fisttpl
and
hlt
aad
lret
add
mov
sub
xlat
pop
stos
pushf
jae
inc
jnp
loope
cltd
sbb
sbb
fnsave
dec
loop
push
cmp
test
in
pop
adc
fdivp
sbb
pop
sub
adc
push
lods
fisttps
xchg
sub
pop
jno
cmp
and
int3
cmc
sub
mov
xchg
sub
mov
mov
adc
adc
xchg
in
push
jae
inc
mull
inc
jb
mov
mov
push
cmp
shll
pop
aam
popa
pop
push
popa
test
leave
add
push
push
jne
dec
pop
or
mov
cmp
test
cmp
xor
call
and
loope
addr16
stos
push
adc
sub
and
les
nop
jge
or
iret
pop
cs
pop
xor
pop
jnp
jbe
ficompl
jbe
cmp
adc
or
pop
sub
cmpb
bound
adc
int
sbb
fistl
xchg
jne
mov
adc
adc
add
pop
add
vpmaxub
cwtl
pop
popl
mov
out
sub
addr16
pop
adc
push
add
andl
mov
outsl
adc
mov
pushf
incl
sbb
mov
fadd
fwait
lea
test
imul
xor
insl
pop
imul
imul
inc
mov
fwait
nop
stc
fidivs
fsubl
in
fdivrp
dec
jmp
jp
or
out
inc
es
rclb
add
scas
fnsave
lea
jle
or
frstpm(287
mov
test
or
cld
sub
das
push
fdivrs
jbe
jne
or
out
rorb
idivl
in
arpl
dec
popa
mov
dec
dec
int
push
jl
mov
or
in
out
in
dec
neg
jmp
adc
adc
jns
push
test
fcmovb
cmp
sbb
test
xchg
std
nop
or
outsb
aas
cmp
stos
push
test
test
rol
jecxz
jae
mov
leave
push
sbb
in
fwait
dec
mov
insb
dec
push
push
and
fimuls
lds
cmp
ficompl
push
pop
aaa
mov
xchg
pop
adcl
dec
sub
je
pop
js
pop
add
inc
cmp
loopne
out
call
lret
inc
aad
adc
mov
clc
inc
sub
cwtl
ja
cld
sub
clc
pop
xchg
jno
insl
mov
jg
jmp
lds
inc
aad
add
mov
push
lds
mov
bnd
outsb
aad
xchg
pop
dec
push
mov
decb
mov
inc
repz
jns
pop
ja
push
push
mov
sub
imulb
pop
and
fstl
xchg
shrb
pop
outsl
pop
es
roll
call
add
subl
xor
jne
xor
inc
mov
sbb
mov
fs
sbb
xchg
lods
insb
insl
push
sbb
fs
adc
mov
and
clc
ss
xchg
pop
int
sbb
add
cmpsl
ret
mov
mov
jmp
out
adc
lock
mov
ja
xchg
cmp
pop
or
packsswb
or
hlt
and
jne
sti
jno
aaa
pop
pop
lock
push
pop
cld
cmp
test
pusha
aam
in
jge
xor
data16
push
jmp
push
test
sbb
stos
jb
mov
stos
cmp
mov
add
inc
in
push
into
pusha
xchg
scas
jmp
negb
loop
je
aad
mov
pop
pop
or
mov
lods
jbe
data16
sub
ret
addr16
add
into
push
loope
sbb
mov
call
adc
xchg
pusha
insb
mov
test
orl
stos
inc
fs
insl
mov
cmp
xchg
in
jno
sub
dec
cli
mov
int3
inc
cmp
outsl
aas
cmpsb
int3
and
jne
lahf
mov
arpl
adc
test
mov
mov
pop
test
push
in
jae
jno
nop
iret
mov
mov
and
lods
dec
bound
adc
or
fstpt
mov
xor
lods
jno
adc
popf
in
mov
mov
sbb
adc
xchg
je
mov
imul
ljmp
fucomi
or
loop
mov
cwtl
sbb
gs
dec
xlat
pop
lcall
sub
and
fwait
aas
inc
pop
push
mov
ja
or
dec
stos
mov
outsl
or
std
xor
jp
push
cmp
lock
loop
addr16
mov
sbb
xlat
andb
cmp
inc
test
repz
scas
and
loopne
adc
imul
mov
sbb
and
cs
in
push
cmp
xchg
or
push
push
jle
mov
mov
sbb
daa
test
jmp
lock
mov
xchg
mov
dec
shl
jnp
clc
push
push
mov
xor
mov
mov
ds
dec
enter
dec
jecxz
pop
sti
mov
pop
push
imul
xchg
push
outsb
jmp
imul
repz
lcall
fwait
pop
loop
pop
inc
shl
dec
xor
jmp
jbe
push
stos
jl
push
fs
mov
pop
sarl
cmp
arpl
pop
jne
xor
adc
push
sbb
lahf
jo
sbb
push
sub
adc
sbb
push
shrb
lock
xchg
into
into
sbb
cmp
cs
inc
negb
push
cmp
testl
ja
cmp
pop
jae
cmp
xchg
repz
testl
pop
in
inc
cmp
mov
movsb
add
inc
lds
jecxz
scas
mov
inc
mov
lods
pusha
jmp
hlt
in
jecxz
xchg
lods
mov
movsl
jl
in
mov
and
jmp
addl
cmpsb
out
or
dec
and
xor
rcr
lret
jbe
test
mov
jbe
jns
push
sub
pop
testl
and
loopne
push
cmp
xlat
stos
xor
mov
fs
pusha
mov
imul
adc
cmpl
rclb
test
jecxz
push
je
lret
ficoml
push
les
mov
andl
movsl
xchg
cwtl
sbb
jns
push
sbb
dec
inc
xchg
out
cli
mov
push
sti
loope
dec
out
lret
or
mov
and
test
loop
push
outsb
scas
push
aad
repnz
xchg
lea
push
inc
mov
add
arpl
lcall
aas
in
jle
dec
xchg
int3
xor
jle
stos
loop
lods
adc
mov
or
push
jl
mov
push
aam
jb
push
aad
or
lret
test
movb
out
jl
xlat
jo
jecxz
aad
insb
in
push
xor
cmp
xor
jecxz
out
sub
aam
mov
nop
xor
sbbb
outsb
sbb
push
and
mov
sbb
mov
adc
cmp
pop
faddl
imul
xchg
jl
aam
pop
in
nop
dec
add
mov
clc
arpl
fisttps
xchg
and
pop
nop
xor
outsl
dec
or
inc
test
mov
test
hlt
lock
cli
divb
clc
push
push
es
scas
mov
sbb
frstor
pop
mov
jae
xchg
test
inc
movsb
cltd
xchg
xchg
push
lret
popf
or
cmpsb
dec
mov
fs
cwtl
shl
mov
orl
popf
pop
out
pop
out
xor
in
popl
mov
inc
xchg
cmp
or
outsl
or
arpl
lods
and
sbb
xchg
sub
xor
icebp
test
pop
xchg
clc
popa
fmul
xchg
divb
push
xor
sbb
sub
inc
cmp
pop
cltd
jge
mov
iret
jb
cwtl
dec
mov
aaa
or
push
cs
push
mov
sti
lea
adc
cmc
xor
test
popf
into
stos
mov
sbb
test
mov
xchg
pop
aam
push
add
inc
scas
jl
out
pop
jp
outsb
xchg
add
push
pop
rcl
aam
lds
adc
leave
out
mov
int
pop
mov
ja
mov
mov
lahf
repz
adc
aam
lret
stc
adc
push
mov
aaa
test
sub
stos
xchg
xchg
stc
inc
mov
mov
jp
mov
mov
jge
fidivs
xchg
rorl
hlt
inc
inc
sub
in
add
or
cltd
xchg
test
push
xor
mov
sbb
inc
mov
lcall
jp
push
rcr
pushf
lods
push
ret
scas
jmp
out
shlb
sbb
or
xor
ja
daa
aas
xchg
mov
lds
ror
inc
xor
in
sti
sti
nop
out
adc
adc
lea
loopne
das
inc
rorl
mov
push
jecxz
push
cmp
jno
xchg
sbb
mov
popf
cmp
dec
and
sbb
and
icebp
icebp
xchg
fdivrp
xchg
rcrl
es
loop
adc
dec
int3
jge
gs
jo
or
mov
into
in
repz
adc
sbb
test
mov
mov
mov
add
scas
icebp
mov
xlat
clc
push
ret
jbe
dec
popa
lock
mov
daa
in
in
xchg
test
push
cld
into
mov
jp
add
pop
test
aaa
int3
lds
loope
push
arpl
and
in
jecxz
rcr
or
rolb
movsl
js
mov
sbb
sbb
sbb
pavgb
or
pop
das
sti
ret
mov
mov
aaa
push
jne
mov
loop
fsubrs
pop
and
lods
xor
sbb
jb
sbbl
xor
jmp
iret
testl
push
insb
dec
cmp
xor
mov
adc
out
sahf
or
push
push
add
sbb
mov
add
cmp
mov
dec
push
xor
pop
hlt
jl
xchg
mov
ss
xchg
mov
ret
fwait
dec
dec
std
mov
mov
out
ret
fildll
pop
fcmovne
dec
jae
cwtl
jbe
sbb
pop
pop
xor
push
push
rcr
lock
jg
mov
mov
push
aad
mov
mov
cmp
repz
jmp
sar
inc
aad
jne
jl
sub
es
cmp
sbb
or
jb
sbb
int
xchg
cwtl
loopne
sahf
and
iret
jns
inc
stc
dec
push
adc
pusha
dec
sbb
fs
inc
adc
push
out
push
xchg
fsubrs
ret
rorb
mov
xor
pop
ja
add
popf
sub
mov
in
pop
add
bound
xor
mov
cltd
rcll
fiaddl
push
outsb
xor
test
inc
cwtl
xor
das
pop
cwtl
js
sti
xchg
fldl
std
std
push
sub
cwtl
sbb
subb
jno
sbb
push
jp
mov
mov
dec
jg
leave
scas
loopne
xor
inc
jle
fldenv
pusha
mov
testb
cmpb
addr16
int
fcomi
cmp
roll
adc
sub
pushf
sbb
ss
sbb
loopne
pop
inc
cmpl
mov
push
inc
jle
dec
and
call
js
out
and
dec
pause
es
leave
xor
popa
insb
xchg
mov
sti
xchg
stc
popf
xchg
xor
ret
aaa
add
lea
jp
xchg
sub
add
add
movsl
pop
scas
aas
int
xchg
out
xor
bnd
std
jo
pop
loopne
pushf
nop
xchg
pop
cmc
xchg
jns
icebp
mov
in
je
add
xchg
jns
loopne
popa
loop
push
cld
out
out
dec
lods
mov
or
sbb
sbb
pop
jle
in
xor
mov
sbbb
fildl
and
sbb
xor
lock
pop
in
imul
push
jge
push
mov
subl
enter
in
cmpb
loope
pop
shlb
leave
popf
ret
mov
fnstenv
mov
jns
xor
inc
mov
shrb
popf
lahf
sub
in
loop
loop
fisubrs
aam
cltd
mov
imul
cs
inc
cmp
int
dec
lahf
or
dec
pop
lods
and
aas
lds
stos
mov
ljmp
jb
push
add
mov
xchg
outsb
pusha
flds
aad
lea
xor
push
sub
pop
shr
jno
jp
and
cld
lds
mov
sbb
std
ret
in
sahf
xor
sbb
jecxz
jno
xchg
sbb
test
dec
test
mov
inc
lret
pop
and
adc
test
sub
mov
xor
mov
into
cmp
arpl
push
fildll
stos
lret
sub
jle
cltd
adc
push
push
add
test
rcrl
pop
push
xor
mov
mov
add
outsb
mov
fs
add
negb
pop
fistl
in
lret
neg
xor
lret
nop
ja
pop
movsl
mov
cld
mov
and
xor
aas
data16
or
push
mov
push
sbb
cmpsl
cmp
mov
add
loopne
dec
xchg
test
pushf
jle
jmp
mov
hlt
cmpsl
mov
arpl
cs
idivl
jge
aam
inc
jne
insl
loopne
jbe
inc
jmp
jo
push
in
shlb
inc
mov
sbb
ror
lret
dec
jno
sub
sub
dec
dec
jns
sub
dec
aaa
in
mov
and
add
cs
mov
aad
mov
push
pop
ret
jmp
decl
dec
cmp
adc
sbb
or
cmp
js
repz
pop
fdiv
test
cs
inc
sbb
into
or
mov
pop
add
cltd
mov
add
js
cmp
shll
jmp
dec
pop
insl
mov
enter
push
fdivrs
inc
pop
jne
cmp
sub
scas
in
pop
pop
dec
fcoms
repz
jle
lock
cld
or
fldenv
xor
pop
jp
xchg
xor
cmp
jns
call
js
ja
push
std
add
ffree
cmp
jae
xchg
adc
dec
inc
in
jns
mov
jbe
push
fildl
cmp
or
fcoms
dec
jo
stos
pop
pop
cmp
ret
pushf
jae
gs
jo
mov
adc
outsb
mov
in
jp
mov
fmull
in
lcall
or
cwtl
mov
cmp
sbb
repnz
cmp
push
or
fimuls
add
fldl
xchg
adc
sbb
fsubrl
mov
xchg
orl
in
cmpl
xchg
cmp
mov
add
mov
sahf
mov
movsl
in
cmp
xorps
out
mov
fdivrs
xchg
aam
mov
enter
outsb
inc
pop
cwtl
dec
push
xchg
dec
mov
pop
xor
mov
cltd
cmp
push
push
and
cltd
pop
mov
mov
jne
mov
mov
imul
shlb
mov
add
pusha
adc
push
stos
int3
je
mov
aam
aad
loopne
pop
adc
dec
xor
imul
call
sbb
inc
jecxz
pusha
shrl
stos
clc
dec
out
mov
or
push
insl
out
mov
into
mov
mov
inc
aam
cli
xlat
gs
adc
sub
les
pop
loop
fstpt
and
dec
rorl
inc
cmp
cmp
jle
mov
shll
insb
test
insl
mov
loopne
inc
xor
adc
insb
sub
dec
mov
jo
repnz
fiaddl
xchg
outsb
mov
fidivrs
mov
fwait
mov
cmp
fwait
test
out
in
mov
out
xchg
ds
outsl
into
insb
cld
jno
shll
push
cmp
cwtl
leave
adc
ljmp
cld
mov
inc
ret
push
xchg
mov
mov
dec
add
out
xchg
loopne
cmp
pop
adc
jbe
mov
push
sbb
int
mov
mov
repz
out
cmp
cmp
pushf
outsb
ljmp
pop
push
fistpl
or
jo
and
xchg
jb
lds
rcl
lock
mov
sahf
or
out
in
out
arpl
scas
je
hlt
cmpsl
lret
inc
loop
mov
inc
sub
push
sbb
rclb
out
inc
loopne
incb
cmp
movswl
aas
mov
or
mov
and
jle
icebp
fs
icebp
pushf
inc
mov
jmp
jecxz
sbb
enter
aad
or
aas
loope
pop
fcmove
in
pop
int
jb
jmp
addr16
lret
scas
int
add
addb
test
xor
clc
adc
cmpsb
add
xchg
push
dec
xor
or
cwtl
push
icebp
hlt
pop
sbb
fsubrl
aas
mov
popa
call
lahf
and
push
aaa
cmpsb
les
sub
repnz
cmp
and
push
cmpsl
fprem
mov
push
mov
loop
in
sub
andb
lods
divl
and
push
xor
add
outsl
adc
push
stc
nop
add
and
jmp
pop
xor
ficoms
fwait
inc
mov
loope
adc
dec
in
out
mov
sbb
dec
adc
je
out
add
pop
sub
sub
lods
adc
jne
cmp
ljmp
mov
push
or
pop
inc
movsb
scas
push
or
and
nop
push
cmp
je
shrb
or
movsl
mov
testb
jbe
imul
dec
dec
cli
adc
movsb
shll
into
or
shrl
mov
jbe
sub
cmp
loope
sbb
stos
or
pop
xchg
mov
loopne
sarb
fcomip
loopne
adc
inc
scas
fsubl
adc
mov
test
sbb
rsqrtps
subl
and
lahf
and
or
pop
dec
add
mov
jp
stos
xchg
push
out
stos
mul
mov
enter
or
fcoml
push
or
mov
cld
xor
repnz
add
aad
mov
iret
stos
les
pop
int3
sub
mov
jbe
and
jl
dec
shlb
mov
cmp
inc
jle
lcall
jecxz
pop
push
pop
inc
dec
xor
pushl
loopne
lds
data16
cmpsb
add
pop
push
scas
das
fwait
stos
mov
int
loop
mov
dec
dec
je
sbb
fisubrs
jne
sub
in
in
jns
add
sti
cs
inc
or
inc
push
and
push
and
sahf
dec
mov
fmull
sbb
ret
jmp
mov
jns
cld
pop
xor
jne
push
loope
pushf
mov
pop
xor
mov
dec
fwait
mov
sbbl
sti
mov
jo
notl
je
jne
adc
dec
nop
or
subl
loope
andb
jecxz
xchg
icebp
ja
and
lock
xor
icebp
push
sub
mov
stc
adc
enter
jle
in
jb
dec
push
lea
sahf
mov
into
dec
push
xchg
jns
in
mov
push
cmc
into
pop
dec
mov
rcrl
sbb
cmp
cmp
enter
mov
aaa
data16
in
inc
adc
out
arpl
cmc
adc
or
jne
mov
ret
sub
and
push
insl
testl
shlb
mov
ja
ficoml
add
sub
movsb
pop
movsl
mov
cmpsl
pop
push
sub
jg
xor
mov
data16
sbb
add
dec
cmpsl
lret
fiaddl
dec
icebp
jge
int
mov
in
lods
xor
mov
loopne
or
outsl
jo
mov
sub
mov
sahf
sahf
out
lret
jno
inc
mov
std
lahf
daa
dec
sbb
fs
pop
adc
and
sub
xchg
leave
aaa
aas
test
cwtl
sarl
mov
hlt
fwait
dec
sbb
test
xchg
push
dec
fwait
cmp
cwtl
jge
jnp
xchg
imul
dec
pushf
jae
cmp
sub
outsb
filds
cmpsl
aam
ret
xchg
roll
je
adc
sub
sub
shl
movsb
mov
in
bound
aas
fstps
push
push
mov
in
mov
push
push
adc
sub
push
push
jl
inc
pop
je
xchg
mov
or
inc
js
push
ss
mov
cld
or
push
pusha
xor
or
mov
paddusw
rclb
stc
scas
xchg
cltd
fistps
pop
fsts
repz
xchg
xor
mov
jecxz
mov
test
data16
faddp
cmpsl
in
add
add
xchg
sbb
mov
insl
loopne
repnz
ret
mov
push
mov
or
jnp
scas
xchg
sub
ljmp
inc
testl
stos
mov
sbb
imul
dec
or
test
xchg
or
adc
psubsw
mov
andb
cltd
adc
test
push
and
xor
jge
popa
push
repnz
les
adc
jle
ds
pusha
mov
inc
sar
add
xchg
ret
lock
ret
ljmp
mov
xorl
fs
mov
outsb
cwtl
mov
pop
pusha
jno
jne
inc
push
je
cld
out
sbb
cmp
jo
xor
out
loop
sbb
adcl
pop
ljmp
and
jmp
xchg
dec
jne
repz
sub
inc
movsl
xor
es
adc
aas
jmp
inc
pop
leave
push
pushf
and
fcoms
aad
stc
jmp
inc
xor
cmpsb
mov
push
sbb
pusha
stos
out
dec
scas
imul
sub
xchg
jns
cmp
outsl
stos
stc
movsl
mov
adc
insl
dec
imul
mulb
data16
add
mov
mov
pop
pop
xchg
fs
test
cmpsb
inc
jnp
ret
out
fnstsw
fdivrp
mov
sub
rolb
jl
test
aam
pop
cs
lret
cmp
xor
stc
dec
and
inc
in
push
popf
jns
jne
adcl
adc
xchg
or
mov
push
mulps
leave
cmpsb
sbb
addr16
loope
xchg
fsubrp
sub
cmpsb
jmp
outsl
inc
mov
xor
jle
pop
popf
ucomiss
je
inc
pop
es
mul
ljmp
or
pop
push
in
mov
jmp
movsl
sbb
pushf
xchg
mov
mov
dec
in
das
cs
not
lods
movb
sahf
xchg
pop
andl
or
inc
cmp
aad
inc
dec
cmp
sub
in
ret
popa
mov
fadds
aas
add
ret
mov
shll
out
jg
mov
hlt
sti
adc
sub
cmc
mov
ror
test
sbb
mov
repz
pop
dec
xor
sbb
add
test
add
adc
movsl
cs
sbb
jno
out
pop
add
mov
or
push
inc
aam
push
mov
xor
xchg
mov
add
pop
xchg
dec
pop
mov
dec
mov
loope
pop
punpckhwd
jns
int
int
jg
add
sbb
sub
test
xchg
andb
lods
fsubl
mov
icebp
scas
sti
sbb
negl
int
loope
ja
and
scas
js
and
testb
cmp
sub
ret
push
mov
push
mov
jns
cmp
xor
push
mov
fcom
mov
nop
ds
xchg
sub
int3
mov
loope
ja
pushf
xchg
outsl
xchg
movsl
loop
test
imul
inc
ret
mov
inc
dec
mov
mov
sbb
inc
jno
shrl
push
cmpsb
xchg
mov
add
pop
xor
jbe
mov
cmp
fcmovnb
pop
idiv
lods
or
jg
or
test
iret
adc
sbb
and
mov
and
jae
jae
xchg
xchg
fsubr
push
int
bound
out
sub
push
in
sbb
in
jnp
xchg
add
int3
add
cwtl
mov
cmpb
or
mov
mov
shrl
stc
rol
sti
pop
fcmovbe
adc
jmp
ret
xchg
lods
jbe
mov
dec
lret
in
mov
aad
and
and
cmp
out
mov
add
push
stos
repnz
xlat
bnd
imul
xchg
push
fcoms
mull
stos
xchg
cmp
jmp
jp
lods
pop
test
dec
and
mov
add
inc
push
sub
inc
xor
cmp
sahf
pop
inc
sub
ret
pop
popa
jns
push
scas
xchg
stos
sub
jge
mov
jmp
xchg
mov
or
ror
xlat
popa
jmp
jge
fidivrl
lock
fmuls
xor
pop
inc
push
xor
xor
mov
popf
xchg
aam
xlat
stc
adc
leave
cwtl
cmpsb
cmp
dec
jl
stc
sub
xor
cmp
pop
add
aaa
xchg
stos
popa
mov
dec
sub
sbb
ret
outsl
mov
addr16
lahf
add
cmp
or
fisttpl
negl
aam
js
mov
xor
cmp
mov
mov
lret
adc
fs
mov
jns
xchg
lcall
arpl
mov
jmp
mov
xor
or
pop
push
sbb
jge
lea
cmpb
sbb
cli
cltd
dec
push
mov
jecxz
mov
pop
adc
loop
fucom
gs
mov
xorl
je
cmc
pop
lcall
pop
add
mov
test
fldl
in
jae
lods
jns
dec
andb
mov
scas
sub
jns
mov
adc
mov
and
pop
rcrb
push
pop
jo
xchg
and
mov
push
dec
ja
jne
rorb
rcrb
inc
adc
jmp
movsl
ret
cmp
gs
cmp
jbe
pop
jne
push
outsl
imulb
icebp
mov
and
js
mov
enter
rorb
inc
jo
mov
sbb
fwait
in
mov
push
xor
mov
sub
push
jns
mov
add
loop
out
and
dec
insb
jecxz
out
xor
or
mov
jns
fs
enter
and
testb
pop
repz
mov
fst
push
cltd
insl
push
sub
xor
lea
inc
insl
cli
push
cli
sbb
or
or
push
test
test
ljmp
sbb
shll
mov
loop
jg
aas
pop
mov
pop
sub
sti
int3
roll
ret
adc
es
push
pop
clc
repz
cmc
adcb
cld
gs
adc
mov
lahf
out
pop
inc
mov
je
dec
fists
cld
cmp
aam
rcrb
and
cwtl
shlb
jne
lret
insb
aas
cmpsb
ja
mov
outsl
xchg
cmp
xchg
mov
xor
frstor
push
dec
popa
push
fistpl
aad
ja
push
inc
popf
inc
loopne
mov
sbb
xor
fnstcw
movsb
push
xor
lods
cmpsb
mov
repnz
push
push
adc
lock
jno
rcr
stc
sbb
adcl
xchg
dec
mov
int
jne
enter
cmc
inc
push
push
fwait
mov
adcl
push
cmp
push
or
sub
movsl
enter
mov
shrl
lahf
xchg
fdivl
data16
out
push
or
jg
ss
repnz
jl
mov
mov
adc
lea
movsl
movsl
arpl
jge
out
lret
sbb
inc
pusha
mov
daa
movsl
or
scas
ss
call
xor
dec
xchg
cmp
push
pop
stos
mov
push
shl
jecxz
push
dec
pop
and
mov
sub
mov
fcomip
lret
xor
sahf
or
mov
pushf
dec
sahf
push
lea
mov
mov
inc
xor
or
test
mov
frstor
ss
mov
stos
cli
or
repnz
insb
jns
add
xchg
or
inc
xchg
cmpsl
sti
mov
loope
cmc
bound
cmpsl
das
xchg
out
mov
jno
push
loope
sbb
pop
test
cmp
popl
or
std
jle
fisubrl
test
adc
repnz
sub
and
mov
ja
push
xor
out
mov
repnz
xor
cmp
pop
cmc
out
xchg
mov
mov
xchg
add
outsl
mov
cmpsl
shrl
sbb
pop
iret
adc
aad
jnp
sti
cmp
mov
pop
repnz
into
sbb
clc
add
in
mov
mov
aad
leave
nop
xor
iret
imul
add
scas
outsl
loope
in
sbbb
jno
stos
mov
jne
arpl
jmp
out
lcall
jle
jnp
imull
pop
xor
or
cmp
sbb
int3
es
xor
in
xchg
and
xor
mov
mov
mov
sub
fdiv
mov
into
shlb
mov
dec
jmp
push
jg
rcr
fnsave
shlb
insl
adc
out
addr16
cli
push
jbe
sbb
ljmp
icebp
sub
pop
add
jecxz
aas
pusha
cltd
popf
popf
cmpsl
fadd
aam
pop
fcompl
dec
mov
mov
mov
cli
test
dec
testb
nop
pop
mov
mov
test
xor
inc
in
mov
add
xor
inc
in
jecxz
pop
shrb
xor
test
mov
imul
sarb
ljmp
es
adc
xchg
mov
xchg
ss
dec
or
push
cmp
call
xchg
std
dec
mov
cwtl
into
mov
mov
inc
out
mov
loopne
adc
out
insb
sub
pop
test
mov
push
mov
jno
scas
clc
jg
in
pop
xor
out
aad
xor
mov
fidivrs
sub
andb
ss
push
sti
and
cmp
mov
test
ret
jle
out
xor
fs
push
cmp
lock
popf
xor
dec
push
lea
je
repz
ds
jbe
sbb
nop
stos
or
jle
dec
lock
cld
adc
rcrb
pop
shr
xchg
sub
cmp
adcb
xor
lds
out
les
xor
cmp
fstpl
std
gs
xlat
cmp
cmpsb
clc
ds
test
andl
adc
jmp
rcrl
loope
adc
xor
rolb
or
push
jns
imul
sub
mov
adc
arpl
stos
arpl
jmp
mov
movsl
cmc
xchg
adc
inc
lret
push
pusha
dec
test
aad
or
and
mov
sbb
mov
fmuls
inc
mov
adc
sar
enter
mov
jecxz
mov
repnz
sbb
xchg
scas
jg
push
rcrl
xchg
in
outsl
xlat
daa
mov
stos
inc
out
jb
ds
addr16
cwtl
mov
jecxz
pop
sub
xor
cli
adc
cli
add
pop
pushf
into
adc
push
leave
in
mov
int3
add
addr16
decb
out
pop
aas
es
xor
push
dec
pusha
or
add
imul
lahf
mov
outsl
sahf
xchg
addb
mov
add
test
cmp
jp
mov
push
dec
std
pop
scas
mov
mov
mov
inc
cltd
cs
test
addb
stos
pop
inc
mov
push
mov
data16
roll
xchg
cmpsb
xchg
cmpsb
cwtl
lods
test
in
in
stos
cmp
mov
lods
xlat
pop
push
xor
push
in
ja
in
sbb
fucomi
cli
cmc
stos
aad
popa
lods
mov
push
mov
xlat
cmpsb
out
mov
ljmp
mov
call
jno
out
mov
and
push
jle
mov
into
imul
rcrb
add
rcrb
xor
add
dec
and
mov
mov
mov
nop
shll
and
fnstsw
xor
call
pop
in
sbb
mov
pop
rcrl
lahf
rcll
rol
stos
imul
or
push
into
pop
pop
and
adc
pop
notb
and
xor
jno
pop
insb
incb
push
ss
int
ret
jge
mov
in
pop
leave
sbb
add
mov
jecxz
les
popf
mov
ljmp
or
out
dec
add
sbb
and
dec
mov
xor
rcrl
inc
mov
pop
or
aaa
mov
mov
and
lcall
mov
fwait
jge
ret
imul
pop
incl
mov
pop
inc
lcall
insb
push
jecxz
int3
aam
sbb
fwait
pop
jle
pop
adc
inc
push
mov
xor
and
addr16
addr16
mov
sub
aam
jno
cmp
push
dec
add
pushf
insb
sub
push
pop
call
xor
xchg
jmp
xor
das
xor
in
jns
pop
aad
lods
sub
jne
ss
xlat
xchg
push
sub
scas
pop
pop
ficomps
jmp
ja
cli
pop
sub
into
pop
xchg
xchg
adc
xor
aad
mov
aas
xor
mov
cmpsb
cmp
sub
or
cld
or
pop
pop
scas
mov
lea
or
call
sbb
jle
jne
int3
cmp
xchg
inc
mov
imul
sbb
cmp
and
mov
fs
ljmp
adc
push
dec
icebp
call
inc
pusha
xchg
push
rorl
dec
xchg
mov
fs
pop
aas
in
cmp
add
dec
sysenter
pop
out
add
mov
xchg
test
or
push
cmp
mov
cmp
add
lock
outsb
or
xor
fmull
std
icebp
adc
mov
cli
jle
shlb
scas
inc
push
out
sub
adc
mov
add
fsubrp
les
fs
fs
clc
push
lcall
push
ja
stos
push
mov
test
inc
dec
out
inc
repz
cwtl
push
in
xchg
fwait
hlt
mov
xchg
push
add
sbb
cmpsb
rolb
sbb
stos
ret
or
sub
mov
mov
sarl
cmpsl
cltd
jo
sahf
movsb
ljmp
xchg
or
sub
dec
jecxz
mov
add
inc
mov
psubb
mov
jge
jmp
mov
je
andl
sbb
sbb
les
adc
fcos
int
out
mov
into
jle
nop
repz
lcall
sarl
shlb
sti
gs
add
sub
or
fwait
inc
outsb
xor
push
in
push
mov
jo
pop
lret
test
pop
mov
cld
jo
inc
xor
push
stos
cli
or
and
cmp
outsl
cmp
icebp
mov
fcompl
nop
sbb
ljmp
sub
sahf
push
xchg
es
sbb
dec
ret
xchg
pushf
push
hlt
fimuls
outsb
ja
lret
adc
scas
fwait
icebp
rcll
mov
mov
fisubrl
mov
int
out
out
sub
inc
idivl
jmp
mov
jg
shlb
sub
and
cmp
pop
xchg
cmp
stc
movsl
sbb
and
add
repnz
adc
pop
orb
filds
lcall
xor
stos
dec
arpl
xchg
push
clc
xchg
xchg
push
out
and
fnclex
insb
jb
pop
sti
mov
fcoms
rcl
mov
sbb
add
leave
adc
jge
fildll
movl
cmpsb
mov
das
mov
test
fildl
in
das
mov
cltd
loope
xlat
jmp
imul
inc
xor
aas
mov
rcrb
pop
mov
pop
mov
sub
dec
ror
cmp
insb
dec
loopne
pop
and
mov
lock
addr16
cwtl
mov
mov
or
pop
jg
sbb
fistpll
xor
pop
imul
or
repnz
cmpsl
xchg
enter
sub
pop
pushf
pop
push
xorl
cmp
push
add
push
stos
mov
inc
inc
add
aam
cmc
mov
sbb
cmp
lret
pop
stos
push
fiaddl
push
out
xchg
ss
imul
xor
xor
sbb
iret
icebp
mov
push
inc
cmp
mov
xchg
mov
mov
stos
push
and
cltd
add
outsl
push
not
lret
in
mov
rolb
fadds
mov
sub
push
jae
pop
mov
mov
shrl
gs
loop
test
push
mov
cmp
mov
lods
or
pop
addb
sub
cld
cmpsl
addr16
mov
loopne
push
aam
jmp
hlt
arpl
add
sarl
mov
jne
hlt
mov
xor
or
mov
fistps
and
mov
inc
lods
lods
jge
and
int
ficomps
xor
fstl
jmp
mov
jbe
scas
into
fwait
popa
or
fidivs
pop
add
mov
mov
loope
add
sbb
xchg
gs
jp
in
sub
mov
push
pusha
sub
clc
or
sbb
sub
test
fmulp
push
pusha
push
jne
adc
mov
call
pop
testl
or
adc
and
out
test
lods
std
into
fadds
fsts
test
sbb
push
pop
xlat
push
loopne
or
push
push
push
ds
lods
icebp
popa
and
xchg
inc
shll
dec
xchg
mov
or
push
jb
xchg
xchg
pop
scas
psraw
jnp
xor
cld
out
notl
fldenv
imul
adc
xchg
pop
push
popf
xlat
test
icebp
outsb
sub
test
int
sarb
jb
addr16
jecxz
repz
test
xlat
jecxz
bound
push
iret
cmp
sub
and
jmp
pop
xor
inc
leave
jae
xchg
xchg
push
jno
mov
cli
xor
pop
push
lock
test
xor
popf
in
cli
popf
cmc
pop
mov
cmpsl
adc
cli
xlat
jge
stos
pusha
ja
xor
adc
mov
stc
jmp
mov
sub
sub
mov
pusha
imul
jo
fbld
dec
or
xchg
jmp
xor
aam
add
push
jb
sbb
jp
jbe
mov
stos
loop
leave
add
jmp
test
cld
adc
fs
cld
pop
cmp
call
ret
js
or
imul
rsm
inc
sub
int
fnstsw
or
icebp
add
mov
and
movsl
sti
scas
and
inc
int
lcall
mov
fld
shlb
xchg
mov
dec
mov
stos
sbb
jp
das
out
mov
pop
jmp
and
repnz
mov
inc
add
fstl
and
adc
pop
insb
enter
fcoml
scas
cwtl
enter
stc
ret
fcomip
pushf
movsl
scas
frstor
outsb
mov
and
dec
sarb
arpl
test
cmc
xchg
rcrb
sbb
negl
sub
or
iret
jge
dec
jae
push
adc
stc
mov
ffreep
shlb
pop
fninit
lgs
lahf
cmp
outsb
and
jmp
fidivl
dec
sub
push
and
imul
mov
int
mov
mov
je
les
out
and
fldl
ds
push
push
mov
js
inc
ror
std
test
push
cmp
sub
add
test
sti
push
push
sbb
pop
repz
push
lea
pop
or
lahf
repnz
mov
cmpsl
hlt
sbb
jnp
mov
fs
xor
std
and
xchg
sahf
xchg
adcb
pusha
leave
sbb
fs
pop
rorl
xlat
jmp
inc
loopne
push
and
jbe
pop
adc
shl
xchg
lock
jns
fs
aad
push
pop
xor
mov
xchg
mov
inc
lahf
cmp
jg
mov
and
mov
xchg
enter
cld
in
int3
and
mov
jno
dec
adc
mov
adc
xchg
xor
orb
push
hlt
test
pop
clc
or
cmp
mov
daa
cmpsl
imul
jne
inc
fcoml
or
daa
sub
jb
mov
pop
push
sahf
cmp
adc
and
cmpsb
cld
std
adcb
pop
in
scas
fldl
mov
pop
jp
clc
and
outsb
add
cmp
add
and
cmp
mov
add
mov
xchg
fdivs
rcrb
faddl
push
cmp
nop
je
inc
inc
sbb
push
mov
jb
cmc
movsl
stc
cmp
dec
rcrb
addr16
adc
cmp
dec
jb
jno
movsl
gs
add
subb
mov
mov
fcoml
aas
or
out
or
mov
std
aaa
out
fistl
loopne
hlt
nop
xchg
stos
sub
cwtl
shrb
push
mov
add
jecxz
testl
mov
mov
sahf
decl
cmp
cmpsb
adc
out
pop
or
jno
data16
xchg
or
cwtl
push
dec
jbe
and
movsl
pop
stos
adc
sbb
mov
je
dec
and
and
xchg
dec
mov
or
loope
jle
mov
push
scas
mov
xlat
mov
and
dec
jg
mov
inc
aaa
ss
repz
lahf
test
je
fwait
cmp
jne
shlb
movsl
mov
js
repnz
pop
or
aad
or
push
dec
and
aas
popa
xor
call
sbb
test
cmp
xor
pop
insb
nop
mov
xchg
jne
movl
cmpsb
ds
dec
mov
testl
dec
lahf
dec
or
jb
call
mov
cmc
push
fistl
lcall
ds
enter
loop
loop
shll
cltd
inc
lds
or
ret
jbe
daa
movsl
xchg
stos
mov
cwtl
movsl
gs
lahf
mov
repnz
push
xchg
stos
cmp
fldt
and
nop
subb
lret
ds
xchg
push
mov
inc
les
or
pop
lret
xchg
lea
mov
pop
leave
mov
mov
inc
nopl
lret
mov
sub
mov
call
stos
push
xor
push
cmc
mov
adc
cmp
lret
xchg
add
fs
das
mov
xlat
xlat
lret
xchg
jne
dec
sarb
nop
or
in
add
fimull
mov
mov
push
les
jb
pop
jl
loop
jne
inc
push
xor
les
aam
fidivl
cmp
into
jmp
jmp
dec
pushf
nop
mov
xor
repnz
mov
pop
mov
sbb
add
jle
lret
and
icebp
dec
aad
or
call
test
ds
addb
in
sti
lret
ds
dec
repnz
scas
fldcw
lock
xchg
push
stos
inc
xchg
xchg
jp
or
adc
dec
popa
or
cmp
mov
adc
dec
pop
cmp
cltd
fists
jp
mov
jno
xor
inc
mov
jo
sbb
xchg
inc
hlt
and
xor
sbb
xlat
xor
pop
or
push
mov
cmpsl
cmpsb
or
in
jmp
sbb
out
stos
push
xor
loop
daa
test
jmp
xlat
insl
fnstcw
or
cmp
iret
add
adc
sub
sbb
nop
jecxz
mov
xchg
stos
mov
ja
mov
dec
adc
int3
imul
sub
xor
cmp
dec
or
test
add
or
into
adc
fsubr
push
add
jmp
mov
xchg
push
cmp
js
xchg
jmp
inc
icebp
mov
inc
mov
sti
jmp
pop
ret
and
or
and
cwtl
in
pop
pusha
cmp
mov
jns
loope
pop
int
cmp
call
iret
cs
sub
dec
in
shl
ficoms
sti
push
or
fsubs
cmpsb
rorb
adc
leave
push
jle
dec
push
arpl
mov
sub
mov
je
add
ja
jns
pop
cmp
stc
mov
lahf
fwait
or
inc
cmp
les
and
lcall
ret
loopne
aaa
dec
sub
cld
mov
dec
cbtw
pusha
repz
mov
ficomps
mov
scas
lock
imul
aam
xor
aam
lcall
sub
stos
add
pop
outsl
add
shll
add
jo
lods
adc
mov
adc
movsl
into
int
aam
lock
sbbb
pop
and
dec
pop
push
dec
test
xor
mov
jp
mov
ja
dec
sub
dec
aad
lods
fcoml
xor
jecxz
cs
jnp
xlat
sbb
enter
xchg
pop
or
jge
les
xchg
and
mull
dec
jns
lret
in
jge
xchg
xchg
dec
lods
push
scas
sub
adc
testb
pop
test
loop
sti
mov
push
movsl
push
and
adc
daa
jno
aas
mov
aad
test
out
inc
jle
insl
xchg
mov
inc
stos
push
movsb
add
or
adc
fisubl
jae
stc
mov
fisubrs
jbe
mov
clc
add
inc
imul
fistl
imul
leave
sub
bound
xorb
mov
mov
daa
mov
in
mov
out
mov
xor
xchg
sub
cwtl
lods
adc
pushf
in
adc
insb
adc
jns
test
in
repz
lods
sahf
not
inc
pop
sbb
repz
fnstsw
inc
dec
xchg
int
xor
das
pusha
xor
jl
pop
mov
fisubrl
outsl
mov
jle
and
outsl
ret
mov
or
sbb
jnp
xor
ss
icebp
iret
sub
jnp
adc
push
mov
or
push
lea
lea
lock
ja
xchg
add
dec
cmp
xchg
mov
mov
les
out
xor
pop
xchg
cmp
cmp
ja
stos
sar
jp
jb
dec
add
xchg
mov
or
ljmp
cmp
push
inc
xchg
dec
mov
xor
sub
mov
sub
stc
shlb
xor
adc
xchg
or
test
jo
loop
pusha
add
mov
aas
dec
push
lahf
jmp
movb
test
in
in
pushf
inc
inc
cmp
imul
mov
cmp
dec
pushl
push
mov
xor
xchg
cmp
sub
out
push
xchg
and
fbld
fsts
cmp
xchg
test
sub
shl
out
pop
cmp
jecxz
jge
xor
fisttps
mov
cmp
add
xchg
jnp
int3
cmpb
lods
sarl
jb,pt
lds
pop
mulb
insb
mov
out
lgs
leave
scas
test
add
int
pop
xchg
mov
push
push
cmc
or
mov
push
sbb
icebp
cmc
mov
ljmp
je
repz
sub
insb
cwtl
test
mov
sub
arpl
rcrl
add
mov
lahf
mull
pop
popl
call
imul
push
imul
arpl
and
xadd
cltd
rol
ds
loop
inc
out
mov
rol
add
lret
scas
rolb
lock
pop
push
int
stos
add
pop
les
cmp
lcall
xchg
inc
push
hlt
push
cwtl
repz
adc
decb
mov
dec
fwait
mov
int3
cli
mov
cmpsb
ret
or
push
xchg
pop
mov
lret
cmp
jl
fstl
inc
rcl
jns
pushf
mov
pop
scas
pop
lds
sti
int
pop
pop
pop
xor
std
sbb
push
ljmp
shrb
jmp
mov
cltd
mov
aaa
adc
stos
stos
in
in
mov
lods
ljmp
inc
mov
sub
xchg
xchg
cltd
jmp
and
jae
or
xchg
inc
popa
incl
in
mov
mov
and
imul
imul
hlt
repz
and
or
sub
into
inc
data16
mov
add
pop
xchg
mov
or
in
fndisi(8087
shlb
out
jbe
out
dec
inc
xchg
movsb
push
ss
inc
mov
jo
divl
dec
test
cmpsl
push
add
xchg
or
pusha
repz
jmp
in
pop
cmp
sbb
lret
add
mov
out
sarb
pop
clc
or
xor
cmpb
adc
mov
ret
out
inc
es
mov
fsub
arpl
sub
xchg
stos
add
pop
jp
stos
or
lea
mov
add
lds
mov
mov
push
and
popf
movsl
mov
in
sbb
lock
mov
add
lds
shld
pop
add
cmpsl
sahf
lea
testb
sbb
fiadds
cld
pop
cmp
push
dec
cli
clc
pop
out
mov
xor
data16
xchg
push
dec
test
mov
ficoml
adc
or
imul
mov
mov
int
mov
mov
xor
jnp
sti
lret
jmp
inc
cs
jl
ja
call
mov
pusha
test
and
dec
cs
lods
add
xor
js
jb
cmc
push
lods
and
scas
mov
adcb
mov
cmp
sub
mov
xor
mov
xchg
ds
in
jmp
push
push
aad
and
push
mov
sbb
add
ljmp
daa
add
mov
mov
ss
mov
or
das
flds
popl
mov
mov
inc
es
inc
pop
mov
lahf
repnz
ja
cmpl
loope
jmp
pop
hlt
mov
jns
popa
sub
adc
out
arpl
jns
imul
dec
dec
cmpsl
push
push
nop
xchg
push
and
mov
fsubrs
and
adc
js
loopne
xlat
test
mov
xchg
data16
out
daa
xchg
mov
xchg
and
sarl
inc
xor
xchg
inc
fdivs
adc
lret
sbb
or
xchg
sbbb
jb
mov
cmp
das
cs
dec
push
sbb
fisttpll
nopl
push
cmp
push
or
inc
pop
out
jns
adc
xchg
mov
adc
cld
dec
jo
mov
and
rolb
in
mull
faddl
in
inc
pop
add
out
sub
mov
mov
das
adc
jbe
jnp
test
out
inc
add
lods
pop
sbb
adc
dec
push
cmpsb
xor
cld
inc
mov
push
inc
loope
rcrb
popf
pop
push
rcll
test
push
xchg
adc
mov
mov
shlb
jnp
into
push
dec
add
rcr
push
add
daa
aas
sub
adc
jae
and
push
fadd
cld
sub
and
xchg
xor
jns
insl
outsb
icebp
push
sarl
push
pop
movsl
add
fisubrs
push
popa
inc
out
sub
mov
insl
push
adc
out
sbb
scas
jo
dec
mov
outsl
pop
shlb
outsl
rsqrtps
leave
push
and
pusha
sbb
jbe
pushf
add
push
mov
xchg
add
pop
bound
mov
lret
mov
imul
mov
sti
inc
push
dec
ret
pop
int3
xchg
lret
cmpsl
scas
inc
cli
popa
outsl
adc
sub
loope
xchg
out
and
int3
fldt
jae
addr16
test
inc
inc
or
mov
lret
push
in
orb
mov
fnstsw
or
mov
dec
ja
xor
sbb
cmpl
lds
aas
sub
mov
stc
xor
je
lods
popa
sahf
cli
inc
shll
popa
dec
inc
and
std
lds
or
fmul
sbb
out
ljmp
cmc
into
adc
add
push
mov
sub
int
shrb
popa
or
pop
aas
int
ret
arpl
outsl
mov
jp
inc
pop
enter
sbb
repz
push
jne
inc
lcall
push
fs
cmp
pop
movsb
rcrl
jle
dec
in
dec
outsl
mov
xchg
int3
lods
lahf
leave
int
test
sbb
fwait
push
into
sahf
cmp
push
cmp
in
daa
pop
aam
sbb
std
inc
sahf
out
cmp
stc
push
arpl
pop
jne
stc
jle
pop
mov
call
mov
xor
push
push
iret
push
scas
cmp
push
popf
nop
ss
mov
imul
add
ret
rorl
mov
pop
pushf
push
jge
adc
jns
pop
std
ss
inc
xor
daa
in
test
jo
fstp
xchg
fidivl
out
loop
cld
mov
inc
in
mov
arpl
test
dec
sbb
or
cmpsb
in
out
push
aad
test
jb
inc
aas
mov
cs
jb
mov
push
xor
adc
mov
lahf
xor
addl
test
cmp
mov
dec
adc
popf
sbb
inc
ljmp
push
inc
add
pop
xchg
imul
scas
pop
into
push
inc
inc
mov
mov
pop
pusha
insl
xchg
js
jb
inc
fcmovu
jge
aaa
dec
inc
scas
ljmp
inc
inc
pop
out
movsl
jnp
jbe
iret
imul
roll
pop
popf
hlt
mov
and
jle
xlat
pop
sbb
insb
push
ss
cs
xchg
sub
jg
call
in
clc
dec
outsl
sub
jae
pop
adc
mov
mov
mov
jle
and
xchg
dec
xor
jmp
div
rcll
in
addl
pop
popa
or
push
jle
or
pop
add
adc
loopne
inc
cld
xchg
cmp
sbb
xchg
stos
jne
adc
sub
js
jnp
mov
mov
mov
vpcmpeqw
xlat
xor
fidivs
testl
or
mov
gs
test
pushf
sti
xor
sbb
pop
sbb
ss
xor
and
jmp
nop
add
stos
cmpsl
dec
out
push
ja
jne
fistps
push
and
sarl
jb
cmp
xchg
out
mov
pop
lcall
out
xor
mov
mov
fwait
cmp
inc
sbb
xchg
push
mov
in
leave
sbbb
cmpsb
inc
stc
sub
cwtl
jns
leave
pop
adc
sbb
arpl
sub
xchg
sbb
mov
mov
mov
arpl
pushf
shlb
ret
fsubrl
js
test
dec
sub
jo
aaa
xchg
bound
jne
int3
lret
push
int
pop
fisttpll
jne
mov
jle
or
adc
pushf
sbb
pop
sbb
pop
jne
imul
cmpsb
daa
jnp
pushf
cmp
inc
cmp
addr16
sbb
pop
or
inc
int
mov
pop
repnz
sub
xchg
add
cmp
test
xchg
push
mov
pop
sbb
push
andb
xor
sub
arpl
scas
repnz
fwait
jmp
pop
lahf
mov
push
repnz
add
or
sbb
jle
cmpsb
and
pop
cmp
lret
cmp
lds
shrb
aas
push
inc
push
inc
adc
movsb
jge
jns
sbb
lods
mov
or
testb
insl
mov
filds
xchg
dec
xchg
and
test
xor
scas
popa
or
pop
dec
out
rcrb
sahf
inc
rcl
push
xchg
stos
in
lods
sarb
cltd
xor
ja
push
dec
mov
dec
pop
jo
add
test
xchg
stos
cmp
add
sarb
loop,pn
push
inc
xor
pop
dec
das
mov
pop
sbb
aad
mov
or
jno
and
dec
sti
repz
aam
inc
adc
adc
mov
add
xor
fiaddl
jecxz
xchg
mov
imul
in
std
sub
enter
or
in
insl
add
inc
pusha
push
push
test
add
sub
add
cwtl
mov
cld
or
es
sbb
pop
int3
and
std
inc
in
cltd
xor
pop
test
outsb
sub
dec
adc
cmpl
lock
inc
cs
ds
enter
cltd
aas
das
repz
cmp
cmpsb
xorl
dec
or
out
inc
loope
cmpsb
pmaxub
jge
add
insb
cmpsb
jecxz
push
addr16
outsb
adc
cmp
or
inc
dec
subb
and
xor
or
jae
aad
xor
pop
adc
pop
jne
clc
or
mov
dec
cmpsl
add
repz
mov
in
sub
ja
jb
pop
jo
dec
pop
sbb
les
out
push
xchg
test
mov
jnp
xor
mov
das
or
push
dec
and
in
sbb
sub
push
scas
pop
adc
fwait
cmpsl
xor
cmp
push
jno
or
add
mov
insl
in
mov
popf
inc
enter
mov
call
cmp
leave
xchg
cmp
mov
popf
andb
push
push
repz
in
roll
popf
repz
push
xchg
pop
lea
cmpsl
fcmovnb
movsb
cmp
pop
enter
push
fdivs
aaa
push
inc
aas
sub
and
cmp
rorl
adc
addb
ror
jbe
jmp
mov
push
fs
loope
fcoms
adc
imul
shlb
popa
sbb
movsb
cmpsb
xor
pop
or
jmp
inc
cltd
mov
add
movsl
loope
enter
pop
mov
or
roll
test
sahf
xchg
or
cmpsl
mov
std
stc
push
inc
fnstsw
mov
mov
jg
pop
mov
sahf
inc
lret
mov
fs
sti
sub
mov
jns
fwait
mov
mull
rcl
pop
mov
pop
das
inc
fisubs
xchg
mov
and
dec
pop
xor
andb
sti
jne
push
cmp
pop
sbb
jae
aas
negl
mov
mov
inc
sub
mov
sub
pop
shll
imul
lret
jle
in
and
pop
addb
fisttps
cmp
dec
jnp
scas
shll
jnp
popa
sub
je
mov
or
test
stc
cmp
inc
cld
or
fst
push
fistpll
pop
lods
roll
rorl
xor
mov
int3
xchg
gs
add
push
outsb
mov
sbb
fcmovnbe
add
and
jp
testl
sub
push
jmp
add
and
stos
movsb
xor
sbb
aam
mulb
iret
inc
xlat
mov
inc
pop
aaa
jmp
inc
inc
lret
mov
dec
imul
ds
pop
lea
mov
xchg
nop
aam
mov
mov
xchg
fisubs
adc
in
cmp
ljmp
xor
sbb
mov
dec
aad
cltd
inc
pop
sbb
mov
sarl
int3
pushf
mov
call
dec
loope
dec
and
mov
sbb
xchg
popf
pop
pop
shrb
popa
adc
inc
mov
pusha
cmp
sub
pop
daa
inc
lods
pop
sub
cmp
iret
xor
mov
movsb
jnp
inc
insb
pop
stos
jo
and
xchg
inc
dec
bound
lahf
subb
movaps
sbb
mov
sub
pop
jne
ds
cmp
push
je
aas
or
aas
cld
lcall
lock
add
pop
js
xchg
or
jo
insb
lods
mov
je
jne
xchg
call
clc
xor
rcr
fucom
jle
mov
sub
jmp
add
rclb
das
rclb
test
xchg
sub
repnz
push
ljmp
mov
loope
xchg
push
test
scas
jns
cwtl
movups
add
jp
mov
mov
pop
data16
jp
rcrb
pop
into
fwait
lahf
adc
and
dec
add
xchg
into
jle
shrw
jb
cwtl
add
out
out
mov
lock
aas
fcmovb
xchg
aad
xor
push
adc
lock
dec
clc
push
jno
lods
bound
fldenv
mov
xlat
push
repz
adc
aaa
adc
out
jbe
xchg
xchg
fcoml
lcall
xor
sti
sarb
mov
ss
int3
adc
ficompl
xor
sbb
add
test
out
jnp
movsl
leave
repz
lods
bound
clc
shl
mov
insb
push
fidivrl
out
pop
xchg
jle
adc
cmp
mov
je
push
out
cmpsl
mov
mov
lret
data16
jo
mov
in
jno
int
test
dec
dec
outsb
xor
es
add
inc
and
lcall
push
mov
inc
icebp
sbb
rorl
cmp
add
xchg
fwait
xorl
inc
fwait
lcall
repnz
addr16
in
jp
out
cmp
test
cltd
adc
ljmp
sti
inc
push
jmp
and
dec
jg
inc
insb
sub
jp
dec
repnz
add
xlat
cltd
xor
mov
mov
cwtl
sbb
or
push
rclb
leave
mov
jo
inc
in
pop
cmp
dec
call
mov
jp
push
test
xor
outsb
negl
pop
pop
arpl
dec
stc
and
adcb
pop
adc
je
imul
dec
xor
push
mov
lods
sub
jmp
pushf
add
int
push
insl
jecxz
push
xlat
pushf
and
loope
dec
lcall
imul
lret
dec
sbb
mov
inc
ljmp
icebp
mov
dec
or
cmp
cs
mov
scas
mov
rorb
test
insb
jo
xor
and
rcr
dec
xchg
jnp
aas
push
imul
ss
and
xchg
test
stos
aaa
dec
ja
mov
and
inc
leave
xor
inc
lock
sub
jo
mov
dec
jo
inc
cmp
mov
push
ds
push
add
outsl
pop
into
dec
stos
xchg
xchg
aaa
inc
inc
fisubl
call
je
cmp
leave
jg
mov
lods
fnsave
jnp
in
je
and
cmpsl
into
ja
xchg
test
cmp
inc
loopne
jle
or
stos
jmp
sbb
xor
or
mov
and
jg
or
inc
cmp
jle
fwait
or
imul
arpl
jle
daa
jg
push
lahf
inc
hlt
adc
jae
mov
sub
push
inc
or
cmp
fisubs
xchg
imul
xchg
roll
and
dec
out
es
and
int3
fnstcw
lcall
push
out
cmp
aas
mov
fisubs
add
scas
push
jae
les
ror
imul
adcb
ljmp
movsb
insb
and
out
pushf
add
fidivs
rcrb
movsl
or
rcl
add
pusha
push
fs
stc
sbb
lods
js
inc
insl
inc
inc
mov
fiaddl
repz
inc
xor
mov
pushf
pop
out
and
cmp
inc
pop
call
divb
enter
push
std
sbb
xor
and
or
aas
repnz
push
and
sbb
mov
in
adc
push
mov
or
sub
out
sbb
push
xor
dec
incl
adc
jae
dec
daa
add
jae
enter
or
rcrl
enter
inc
inc
out
push
push
inc
cltd
xor
or
push
xchg
mov
xor
xchg
repz
outsl
cld
jb
dec
test
aaa
cltd
jle
fistl
dec
push
test
test
lods
pop
hlt
rcll
push
xchg
add
pop
cmc
mov
les
dec
sarl
lcall
push
and
jns
frstor
lcall
jl
mov
cmp
sahf
mov
inc
jns
mov
cli
in
loopne
sub
test
jg
adc
mov
je
adc
cmpsb
loope
xchg
cmpsl
inc
push
push
mov
dec
inc
push
push
pushf
clc
rcl
mov
mov
in
lret
icebp
ja
sbb
movsb
movsb
daa
mov
sub
add
sbb
cltd
nop
aad
and
dec
insb
mov
nop
inc
pop
out
lret
sti
cmp
lock
add
jl
mov
imul
cwtl
shrl
and
xchg
cmp
notl
push
sbb
jle
int
mov
inc
shrl
mov
dec
ss
movsb
ret
lret
sub
pop
mov
movsb
mov
in
data16
orl
repz
push
out
stos
scas
inc
pusha
pop
scas
cmp
add
sub
push
push
mov
jne
and
mov
fstl
or
arpl
mov
mul
addb
lock
aad
push
adc
daa
cs
mov
pcmpgtw
data16
mov
dec
cltd
inc
mov
fcmove
pop
insl
or
insb
imul
cs
sbb
pop
es
xor
mov
push
fadd
or
sbb
and
sbb
daa
xor
xchg
test
mov
icebp
inc
xorl
cli
lcall
add
rorb
mov
or
cli
cmp
inc
jecxz
das
jmp
xchg
jno
test
notl
cmp
sbb
cmp
inc
push
dec
mov
loop
sbb
repz
or
pop
fcoml
ret
cwtl
sbb
dec
pop
cmp
lret
cld
inc
mov
inc
mov
out
leave
push
setp
lret
es
mov
xor
fucomip
inc
xor
lods
xchg
aam
sbb
mov
fdivrs
fsubs
iret
and
and
cmpsb
int3
jge
sete
cmp
ret
inc
add
add
stos
inc
push
cwtl
inc
mov
mov
sub
mov
sub
pop
in
sub
shll
mov
mov
insb
movsl
push
imul
jle
out
lock
push
pop
pop
fs
sarb
adc
xchg
hlt
bndstx
sbb
push
push
xlat
nop
or
dec
xchg
popl
pop
jp
call
jno
outsl
lret
aad
or
jge
mov
adc
jge
cld
or
lahf
dec
push
mov
sbb
mov
xor
cmp
aam
pop
adc
sbb
jnp
mov
push
je
lret
hlt
gs
stc
mov
pop
inc
fs
or
add
cmp
cmp
lret
adc
ja
cwtl
cmp
mul
sbb
jno
aam
sub
es
rcll
mov
xchg
jg
xor
inc
int3
push
fsub
mov
std
mov
cld
cwtl
pop
imul
test
push
push
fistps
loop
push
jo
in
clc
dec
adc
xchg
lcall
push
fcoms
jecxz
jo
mov
and
insl
sub
mov
in
dec
loopne
push
and
xor
jl
lret
mov
xchg
movsl
mov
pushf
xchg
scas
ss
mov
repz
pop
pop
test
jl
mov
inc
imul
div
cli
in
jmp
and
xchg
aaa
xchg
pop
nop
fs
jg
rdseed
call
ret
lahf
dec
mov
test
mov
stos
add
imul
or
cs
mov
mov
jne
jmp
xchg
xchg
jb
mov
pop
inc
add
fldcw
cmp
inc
jmp
or
adc
inc
and
pop
push
pop
dec
mov
push
and
call
pop
push
cmp
sbb
stos
inc
jg
mov
xor
cmp
cs
mov
pop
sbb
mov
jmp
mov
dec
push
stos
mov
int3
aam
subl
fld
xchg
push
sbb
repnz
hlt
and
std
and
pusha
adc
scas
cmpsb
shrb
mov
stc
inc
out
insl
pop
data16
flds
pusha
call
mov
or
mov
enter
pmaddwd
cmp
lret
inc
pop
mov
je
pusha
hlt
test
lock
int
rcl
fsub
lahf
std
out
mov
cmpl
xlat
scas
cmpsl
test
idivb
add
mov
clc
dec
or
loopne
imul
insl
pusha
xor
leave
dec
mov
xchg
test
jl
inc
xchg
jnp
test
xor
add
push
cltd
fidivs
and
loop
sub
push
jg
shr
divb
aad
xor
xchg
lahf
int
jo
cld
iret
notl
loope
jmp
and
sub
ljmp
stc
mov
add
out
aad
jne
mov
xchg
hlt
out
ljmp
das
jge
or
icebp
mov
sarb
cmpsb
int3
xor
push
or
push
ret
pushf
loop
add
test
cmp
xor
outsb
cwtl
lahf
push
mov
lods
mov
sub
aaa
sub
lahf
add
sub
lcall
clc
push
and
pusha
clc
cmpsl
in
pop
and
dec
loope
test
stos
out
std
test
aas
mov
dec
fs
cmpl
daa
pop
add
test
mov
fstpl
sbb
xor
xchg
pop
outsl
je
test
jno
fwait
fs
adcl
pop
or
js
sub
push
popa
fs
out
mov
arpl
mov
imul
enter
lret
inc
xor
xor
sbb
clc
cltd
ds
addr16
les
push
mov
cli
mov
imul
movsl
pop
outsb
lea
adc
es
xor
int3
hlt
jmp
or
xor
popf
pop
mov
add
lcall
jg
shl
sbb
xor
data16
ss
push
mov
fldcw
adc
mov
mov
and
iret
mov
gs
adc
mov
cltd
inc
lock
mov
jle
xor
mov
into
mov
test
cmc
imul
clc
fdivl
and
jb
test
jle
imul
mov
jb
data16
enter
int3
fdivs
movsb
pop
mov
jp
push
out
call
or
arpl
pop
mov
lahf
pop
cmp
jmp
int3
inc
sar
or
push
pusha
cmp
ja
jno
shl
and
add
fdivs
or
addr16
jge
cmc
mov
pop
ficoms
xchg
ficoml
inc
inc
adc
cmpsl
push
dec
iret
aas
shlb
shll
dec
rcrl
lret
mov
push
mov
push
pop
cmp
or
push
outsb
mov
ret
xorb
adc
lods
lea
cltd
dec
scas
cmc
cmp
mov
inc
pusha
xchg
jne
mov
pop
push
pop
movsb
or
stc
sub
sbb
pop
in
sub
stos
aaa
lods
sahf
xchg
xor
dec
loop
mov
icebp
cmp
fimuls
lea
out
pop
mov
xor
cmp
insl
mov
cmp
cmp
lcall
add
and
stc
hlt
mov
out
test
aam
xchg
arpl
inc
sbb
pop
fisttps
rorl
test
push
pop
popf
pop
mov
mov
pop
push
cmpsl
and
dec
jno
inc
adc
test
mov
outsb
sub
aaa
pop
iret
subb
lods
mov
imul
xor
mov
cmp
push
mov
inc
mov
mov
jecxz
adc
xchg
int3
insl
cmpps
cmpsb
stc
imul
jb
mov
bound
enter
dec
flds
dec
push
je
push
movsl
add
sbb
add
dec
cmp
rclb
mov
jg
loopne
pop
int
xchg
lret
ss
and
sbbl
sbb
sahf
aas
adc
mov
int
loope
roll
cmpsl
in
int3
fwait
mov
and
popf
inc
pushf
test
iret
rcrl
outsl
jg
shlb
hlt
push
data16
sbb
lds
leave
pop
sbb
ret
xor
pop
sbb
xor
jns
ljmp
addl
out
gs
leave
xor
add
je
cmp
xchg
or
frstor
mov
mov
rcrl
sub
push
je
inc
sbb
jns
pop
xchg
lcall
fadds
cmpl
xchg
jbe
shl
shr
out
mov
jns
in
pop
stc
xchg
sub
cmp
insb
rcll
gs
je
ud1
gs
or
push
dec
fnstenv
sbb
pop
push
pop
jne
push
int3
or
xchg
insl
aaa
mov
add
imul
xchg
outsb
push
sbb
loope
sbb
xchg
data16
divl
jg
popf
scas
das
scas
pop
ret
jbe
stos
mov
cld
dec
rcrb
bound
and
arpl
rcl
cltd
cmp
movsl
stos
lock
test
enter
cld
in
into
xchg
pop
mov
push
xor
aam
gs
dec
add
xor
xchg
dec
lahf
mov
std
dec
hlt
pop
into
lret
dec
cwtl
cmpsl
jecxz
popa
outsb
push
cmp
cltd
adcb
out
cmp
faddl
icebp
or
fcom
into
gs
cld
pop
fidivl
rorl
leave
jns
push
adc
xorb
mov
fmull
mov
out
insl
cs
add
lds
data16
fidivrl
sti
push
outsb
dec
jecxz
inc
ja
out
iret
test
push
push
sahf
push
sbb
adc
adc
out
xchg
mulb
ljmp
sbb
mov
mov
loop
movsl
test
shlb
mov
popa
cmp
sub
aam
call
int
pop
xor
push
xchg
jo
sub
jae
mov
and
lea
mov
sub
cltd
adc
lock
into
lods
lret
mov
daa
test
sti
add
ljmp
rorb
mov
jl
rcrl
iret
and
jge
mov
push
fwait
mov
pop
push
pop
cmpsl
pop
mov
xor
mov
lods
movsl
and
test
mov
jg
loopne
jp
lods
push
rcl
movsb
xchg
test
adc
es
mov
aam
adc
xor
adc
mov
add
jmp
xor
ljmp
cmp
adc
dec
add
mov
inc
adcb
rcrl
cmc
dec
movsb
mov
dec
leave
pop
pop
das
lock
jg
fdivrl
ljmp
in
sbbb
in
lods
inc
mov
test
sub
lahf
fsubl
test
test
push
xor
inc
imul
inc
xor
jns
pop
outsb
mov
nop
xchg
ret
or
leave
aaa
pop
test
subb
pop
insl
rorb
leave
nopl
mov
mov
adc
sahf
out
push
das
gs
mulb
jo
push
imul
and
jmp
jo
adc
push
and
imul
mov
js
cmp
xchg
and
outsb
mov
xor
adcb
and
and
xchg
inc
pop
push
aam
push
js
xor
pushf
nop
stos
cli
lods
in
repz
xchg
stos
add
xchg
mov
in
push
fsubr
push
mov
fldenv
jg
jbe
add
push
xchg
ret
addr16
or
cwtl
cmpsl
in
push
cmp
lea
lods
test
xlat
lods
iret
in
ret
into
adc
jnp
dec
inc
xchg
imul
jge
pop
sub
push
lds
cmc
and
test
fs
adc
pop
sti
xor
xchg
xchg
adc
ret
xchg
jg
pop
je
shrb
cld
inc
addb
sbb
adc
jmp
daa
sahf
mov
fs
jno
cs
jbe
jns
mov
push
xchg
in
sub
xchg
fstl
pop
add
repz
sub
outsb
loop
bound
and
adc
add
and
ss
cmpsb
in
int3
lcall
popf
cs
fsubl
rcr
push
xchg
ds
subl
lds
xchg
inc
cmp
mov
cs
and
push
mov
inc
sbb
cli
stos
stos
mov
mulb
jecxz
ret
addb
daa
lret
add
aaa
xchg
xchg
in
shlb
and
jnp
xchg
stos
loope
pop
sub
cli
xor
aam
in
js
aas
pushf
dec
imul
shl
jmp
or
push
add
outsb
pusha
lcall
clc
lea
bound
call
fcmovbe
inc
outsb
and
add
push
mov
xchg
jmp
mov
clc
xor
cwtl
inc
or
xchg
in
hlt
jecxz
xor
pushf
sti
mov
repnz
push
jno
shrb
aas
sub
cmp
mov
icebp
cmpl
popf
and
jne
sbb
cmp
clc
loopne
sub
sub
pop
das
scas
jnp
xchg
pop
lods
addr16
xchg
inc
xor
jg
hlt
int3
mov
dec
jl
test
xor
mov
jmp
pop
mov
mov
stc
out
jbe
test
in
aam
cmp
pop
imul
xlat
or
push
getsec
lret
aas
and
lahf
cmp
add
shlb
xchg
lods
mov
cmp
mov
dec
xlat
inc
movsb
or
out
sub
pop
pop
decl
xchg
or
and
out
xorb
mov
mov
iret
dec
adc
call
aam
jb
and
je
pop
lea
rolb
fiadds
ficompl
xchg
mov
in
adc
jecxz
xor
mov
int
fsts
mov
pop
jge
push
mov
cmp
hlt
pop
mov
jl
sarb
cltd
cmp
bound
mov
add
aad
insl
insl
jo
clc
jge
mov
sbb
ljmp
xchg
sbb
jge
jo
adc
ret
pushf
cli
xor
sub
jno
pop
cmp
rcl
andb
jmp
stos
rcrb
mov
loop
mov
fstpt
mov
dec
das
inc
sub
cmp
push
and
push
jmp
mov
testl
aam
dec
sbb
cwtl
adc
sub
push
mov
mov
jmp
add
ljmp
fdivl
xlat
dec
cmpsl
inc
add
sbb
sbb
aam
sarb
icebp
pushf
cmpsb
cmp
xchg
inc
and
aad
frstor
sbb
pop
leave
gs
cli
insb
insb
pusha
aad
or
add
or
into
add
inc
add
cmc
aaa
xlat
sti
adc
ljmp
loop
inc
clc
lods
leave
push
xor
cli
mov
mov
mov
and
mov
leave
cmp
cmc
cwtl
mov
aad
or
dec
ja
dec
cld
shll
lea
call
loopne
jnp
xor
movsl
push
rcrb
imull
aas
loope
lds
mov
mov
pop
fisttpl
pusha
aaa
pusha
loope,pt
push
inc
fnstcw
test
mov
pop
and
cmp
rcrl
lahf
insb
push
push
pusha
jl
ss
adc
out
push
mov
xor
or
mov
dec
adc
inc
mov
mov
or
daa
mov
pop
fcomps
xchg
scas
dec
popf
pop
pop
cld
mov
and
lods
pop
inc
je
outsb
dec
pop
fstpt
sub
adc
gs
jmp
movsl
int3
sub
jge
push
inc
aaa
mov
dec
jmp
lahf
das
or
cmpsb
cli
lds
aad
push
push
or
sbb
cmp
cli
mov
imul
movsb
jp
sub
adc
pop
jnp
movsb
scas
insl
jns
xchg
aaa
dec
aad
dec
ret
fs
lahf
fiadds
xor
scas
and
outsl
gs
jmp
clc
add
stc
test
bound
jae
push
fistps
mov
xor
pushw
jne
mov
pusha
lret
outsl
movsl
xchg
int3
pop
sbb
movsl
mov
pop
pop
in
js
adc
repnz
xor
scas
dec
std
les
sub
inc
das
jo
lret
sbb
adc
stos
cld
pop
out
nop
mov
and
mov
fnstcw
cmp
jns
xor
leave
mov
shl
cmp
inc
fiaddl
dec
jle
jle
subl
jbe
pop
mov
push
sbb
pextrw
andb
lds
loope
lods
das
repnz
addr16
jnp
ret
lods
bnd
xor
jp
test
enter
ss
dec
idiv
scas
xchg
xlat
sub
mov
test
sub
cmp
push
add
add
sub
dec
movzwl
adc
bound
pop
ds
mov
pop
mov
sub
sbb
rcl
sbb
xor
jne
adc
mov
jae
pop
ffree
das
pushf
mov
orb
mov
mov
imul
enter
pop
roll
sbb
jle
sbb
add
stos
mov
shr
push
test
mov
loopne
cmc
popa
subb
aad
xchg
insb
mov
adc
je
mov
sbb
add
cmpsb
pop
aam
es
dec
inc
fistpll
cld
movsl
shlb
fcomip
cmp
scas
dec
adc
ds
repnz
int
dec
into
bound
add
and
loopne
stos
adc
pop
and
sub
fwait
pusha
ss
mov
ss
xchg
aaa
push
jge
adc
sub
push
xor
outsl
or
push
and
out
out
push
lret
inc
cwtl
repz
push
dec
out
stos
push
pop
lock
loope
push
aaa
cmp
out
xchg
sbb
xor
das
clc
jno
dec
cmp
and
cltd
add
push
insb
cli
jp
jl
imul
sub
arpl
inc
inc
scas
ds
cmc
fdivrl
xor
mov
movsb
dec
push
pop
and
and
pop
orl
xchg
dec
mov
jmp
mov
into
test
pop
out
aad
pop
cmp
adc
cli
call
es
or
dec
or
sub
or
dec
sahf
push
mov
popa
jne
out
jae
lahf
mov
pop
push
popa
pop
adc
mov
call
xor
add
std
mov
dec
imul
sub
xchg
jp
into
lahf
mov
cmp
and
jg
jle
jmp
or
jnp
inc
repnz
aad
hlt
cli
repnz
cmpsb
inc
or
push
mov
push
xor
xor
test
pushl
xor
xor
mov
aaa
lock
lahf
loopne
scas
mov
lret
lock
scas
lret
jbe
lock
jge
push
rcrb
adc
in
test
imul
icebp
mov
adc
into
or
push
loopne
dec
ss
fldenv
shlb
addr16
or
dec
pop
aad
out
mov
lods
lret
push
add
sbb
sub
ret
ss
push
stc
mov
or
dec
in
dec
sbb
mul
out
push
pop
imul
xlat
pop
sbb
inc
aas
xchg
inc
arpl
movsb
sbb
sbb
jle
xchg
adc
ss
xchg
in
dec
ret
dec
mov
mov
jnp
or
int
add
xor
nop
xor
sbb
stos
push
call
xchg
popf
sahf
hlt
sbb
mov
outsl
in
fdivs
jae
mov
jns
add
subb
mov
enter
repz
adc
adc
dec
push
xchg
clc
mov
sub
cltd
mov
outsb
or
or
cmp
add
fwait
xchg
imul
sub
shlb
arpl
repz
movsb
hlt
hlt
xor
jnp
ret
add
out
pusha
pop
push
pop
pop
pop
enter
inc
and
sub
mov
pop
mov
lds
aaa
mov
mov
mov
insb
daa
sub
iret
inc
lods
imul
or
xchg
inc
cs
lcall
sbb
cld
add
out
mov
lock
cli
or
scas
xchg
cwtl
cwtl
ret
pop
clc
lcall
inc
jo
pushf
dec
cmp
sbb
hlt
sbb
jl
adc
aam
sub
loop
xlat
push
pop
cmc
and
andl
jne
in
ds
scas
adc
adc
repz
ljmp
je
in
mov
dec
dec
aas
ret
cmp
sbb
ret
mov
mov
popa
aad
jnp
cltd
rolb
sub
ret
xchg
sarl
push
xchg
sbb
pop
inc
ret
jl
mov
clc
xchg
stc
inc
jae
bound
mov
repnz
inc
insb
fwait
pop
ljmp
mov
jecxz
push
filds
movsb
jmp
xchg
sub
xlat
jle
inc
and
shlb
outsb
in
ljmp
cmp
dec
jle
mov
xchg
xchg
mov
popf
pushf
cmpps
push
sbb
dec
xchg
hlt
mov
jmp
mov
int
cmpsb
loope
mov
cmpsl
into
andb
or
mov
inc
push
orb
std
xchg
jbe
insb
icebp
ret
sbb
movl
andl
dec
sub
dec
out
mov
push
jmp
push
or
pop
dec
xchg
inc
outsl
gs
icebp
sbb
push
loopne
and
in
dec
inc
xchg
xchg
inc
xor
and
dec
cmp
push
data16
faddl
dec
inc
pop
aas
je
insb
adc
mov
stos
lods
mov
push
pop
push
push
mov
pop
cmpsb
idiv
mov
frstor
xor
in
jae
xchg
inc
sti
pop
xchg
fdivl
sbb
and
lods
in
fisubl
fnstcw
and
mov
repnz
inc
push
jg
bound
call
cmp
inc
push
call
push
sarb
sub
je
xor
out
mov
mov
mov
push
iret
push
jg
jnp
add
jb
js
btc
add
adc
sub
push
pop
push
arpl
test
lds
repz
mov
adcl
adc
cmpsb
js
into
dec
loopne
push
ficomps
cmp
sbb
in
enter
xor
scas
dec
fmull
adc
xchg
pop
cmpsb
jo
xchg
adc
mov
bound
mov
int
jge
test
push
imul
mov
pop
push
imul
xchg
lods
add
aas
or
loop
inc
ja
jns
cmp
jg
xorl
pop
cs
outsl
pop
leave
dec
lods
in
imul
lods
js
mov
jge
mov
push
adc
jbe
mov
jmp
lahf
cltd
mulb
push
scas
cld
pop
cwtl
in
insl
jae
mov
mov
inc
pop
test
pop
mov
xchg
push
cli
roll
mov
inc
fwait
cmc
mov
enter
movsl
js
push
mov
shll
and
cli
into
in
int3
mov
add
push
xchg
cmpb
xchg
mov
mov
decb
cmp
movsl
lret
pop
add
dec
daa
jl
pop
sub
or
push
adc
mov
jmp
cmc
loope
sbb
jbe
out
dec
in
mov
pop
repz
lret
sub
jmp
sub
xchg
repz
loope
std
pop
or
dec
js
call
adc
sub
ja
jns
jae
scas
push
hlt
add
into
jb
and
insb
icebp
sti
cli
dec
pop
and
pop
sti
js
test
pop
push
insb
ss
test
lds
or
mov
fwait
mov
test
sarl
and
push
and
xor
ficoms
adc
rclb
mov
mov
ljmp
sub
pop
sbb
xchg
push
cmp
jl
mov
iret
ljmp
test
jns
fdivrl
fstpl
dec
sub
mov
aaa
xchg
ss
mov
into
shll
mov
xchg
push
inc
pop
xchg
mov
jno
into
fadds
mov
sbb
push
sub
imull
sbb
outsb
xchg
loope,pt
andl
add
mov
jl
push
jl
or
pop
add
cmc
outsb
mov
cvtdq2ps
jmp
sbb
fnstenv
imull
int3
sarb
hlt
mov
or
ss
adc
inc
cmpsb
inc
sub
adc
hlt
pop
push
popf
cltd
push
mov
push
fidivrs
fcoms
insb
iret
cmp
mov
stos
jecxz
aam
inc
dec
pop
orb
cmpsb
notl
dec
jp
fsubrl
xor
mov
jne,pn
xchg
adc
push
out
xchg
fnstenv
jns
cwtl
inc
cmp
lea
cmc
push
sahf
lds
add
jle
inc
dec
dec
mov
jmp
lds
orl
fwait
das
stos
pusha
jmp
jecxz
adc
and
mov
mov
insb
pop
and
icebp
test
cli
mov
adc
adc
xor
lahf
xor
dec
push
mov
push
inc
sarb
or
fucomip
movsb
inc
sbb
data16
scas
ret
repnz
sbb
testl
ret
filds
jge
pop
xor
ljmp
popa
jecxz
mov
jecxz
jg
push
fsubl
inc
pop
mov
loop
jo
xor
into
aaa
imul
aad
add
lds
subb
and
daa
pushf
xchg
lret
dec
sahf
push
mov
cltd
lahf
or
mov
push
mov
cli
scas
insb
dec
add
insb
fiadds
sbb
dec
and
ret
pop
notb
andb
in
pop
and
xchg
outsl
mov
mov
xchg
test
loopne
pop
xchg
aas
es
mov
jmp
adc
ljmp
cwtl
lcall
adc
sbb
es
repz
bound
shlb
pop
dec
fbstp
mov
data16
movups
shrl
test
push
pop
push
std
mov
push
lret
mov
arpl
out
cmpsb
mov
jbe
scas
and
mov
mov
mov
push
adc
add
imulb
dec
fwait
shll
les
pop
data16
cli
sub
push
sbb
inc
jmp
gs
stos
jo
jmp
inc
incb
std
cmp
test
push
mov
es
bound
jbe
hlt
mov
push
lock
or
adc
das
pop
shll
pop
dec
ljmp
xorb
loope
jecxz
pop
and
pop
hlt
shlb
push
pop
cmpl
jp
sti
popf
aad
bound
rolb
push
out
fcomps
fisubl
push
call
add
xchg
mov
adc
dec
fstl
dec
jo
adc
fisttps
mov
mov
clc
aad
pop
stos
aas
xor
adc
xchg
cmpsb
ret
scas
dec
push
mov
sarb
jae
test
mov
mov
stos
jno
loopne
jg
out
or
movsb
add
xor
loopne
dec
les
inc
mov
fadd
add
imull
lret
push
data16
and
shl
fistps
repnz
cmp
pop
pop
in
ss
jae
adc
popw
add
insb
out
jne
sti
or
pop
pop
pop
shlb
add
sub
xchg
imul
lcall
cmp
adc
pop
mov
loopne
pop
ret
add
jg
jno
jecxz
fs
sbb
int3
sub
xor
push
mov
pop
inc
dec
jecxz
xchg
and
jl
jecxz
cmp
sbb
xchg
repz
addr16
leave
popf
cld
add
jmp
or
or
test
mov
cmp
sti
in
cmpsb
popf
sbb
jns
jecxz
mov
xchg
xchg
xchg
rol
cmpsb
cli
rolb
push
cmp
daa
jne
fdivl
popl
in
push
mov
mov
ljmp
push
stos
push
push
xor
aas
jns
cmp
in
scas
mov
testl
ret
rcrb
lret
adc
es
jmp
test
pop
xlat
into
jge
push
push
cmp
inc
test
sar
je
int
mov
or
sbb
xchg
and
jae,pt
xor
jmp
jecxz
imull
lds
jns
in
mov
enter
bnd
and
sti
xchg
lret
push
aad
ds
idivl
fs
adcl
rolb
call
adc
imul
push
dec
mov
out
adc
xchg
and
sahf
add
mov
adc
ffreep
out
dec
pop
add
mov
test
lahf
add
push
test
jbe
jmp
imul
or
add
test
movsl
pop
popa
pusha
jmp
mov
movq
mov
jmp
ljmp
add
push
insl
mov
sbb
adc
xor
ret
mov
inc
add
fimull
jne
and
scas
hlt
add
lahf
cmc
in
ja
jmp
pop
into
sub
icebp
jmp
sbb
shrl
add
sti
inc
dec
pop
adc
into
in
add
mov
movb
sbb
fcompp
inc
pop
aas
ss
sti
inc
movsl
adc
loop
sub
mov
or
mov
shl
push
mov
stos
sbb
adc
mov
movswl
push
out
xor
inc
ljmp
jle
mov
lahf
pop
and
mov
sarl
inc
xlat
jmp
sbb
in
and
add
arpl
and
ret
cli
arpl
mov
arpl
dec
lahf
mov
ljmp
iret
adc
clc
imul
ret
insb
iret
or
jle
or
mov
adcl
sub
clc
jno
test
les
stc
add
pop
aad
add
dec
and
push
cld
push
sbb
inc
outsb
sub
mov
std
pop
rcr
arpl
std
pop
jo
xchg
pop
mov
mov
sub
xchg
jnp
outsb
ljmp
and
mov
or
scas
fcoml
xchg
push
ss
mov
arpl
push
mov
jge
in
iret
fdecstp
push
sbb
call
pushf
push
cmp
roll
je
push
imul
rcrb
and
mov
sub
icebp
cmp
out
cli
iret
and
push
dec
pop
leave
sub
and
xchg
add
jge
gs
add
push
cmp
and
test
jmp
lcall
lea
or
push
mov
ja
jge
insb
xor
icebp
iret
neg
and
and
popa
lret
hlt
push
mov
jno
lret
mov
int3
incl
jbe
and
leave
add
mov
cs
jmp
cmpl
sbb
and
adc
add
nop
ret
out
push
gs
loop
je
sub
lods
fldt
mov
sub
cld
movsl
sbb
cmpsl
lcall
adc
jbe
cwtl
sbb
ret
or
lock
shll
inc
jecxz
mov
es
sbb
cs
imul
lea
cwtl
movsl
push
rcrl
fsts
pop
mov
push
mov
popa
xchg
leave
cwtl
mov
xchg
mov
lods
mov
cltd
stc
dec
add
lods
sbb
bnd
xlat
rcrl
or
lret
je
addr16
rorl
pop
mov
adc
lret
add
jge
mov
rcrl
dec
sarl
dec
pop
push
xor
lahf
lock
mov
push
mov
dec
push
cmp
push
ds
in
scas
js
mov
scas
or
fs
pminub
mov
sbb
outsb
jmp
mov
xor
mov
ja
movb
mov
insb
lret
add
lds
xchg
pop
mov
mov
mov
sbb
sbb
xchg
adc
mov
sub
ret
ljmp
mov
arpl
scas
add
xchg
jbe
add
out
jno
les
xor
ss
sub
sbb
lods
out
outsb
bound
cmc
jo
sub
jnp
inc
mov
ss
stos
es
sub
jge
cld
test
imul
bound
sbb
out
dec
lahf
cld
repz
fstps
ja
sub
mov
subl
and
into
push
fmull
jnp
pop
mov
ret
jmp
dec
imul
pop
aas
insl
sysexit
clc
ljmp
nop
mov
sbb
jb
clc
aam
inc
pop
xor
add
add
loopne
mov
cmp
add
jo
sbb
outsl
mov
mov
fisttpll
aaa
int3
outsb
sbb
cmpsl
xchg
add
add
ret
sub
ret
adc
pop
jb
shlb
and
cmp
adc
rcl
addr16
int3
and
lea
sub
iret
inc
das
mov
fcompl
mov
adc
xchg
call
cmc
cwtl
lret
adc
mov
in
es
cmp
and
sbb
lret
fstps
fldt
xor
push
test
mov
push
mov
cli
mov
loope
pop
fdivrl
lock
lret
sub
out
mov
inc
icebp
pop
mov
enter
mov
jb
adc
in
clc
inc
push
and
sbb
push
add
les
aad
push
and
in
pop
dec
in
insb
es
adcb
push
jns
into
ja
mov
adc
pushf
imul
cmp
mov
dec
add
xchg
jno
xlat
xlat
mov
int3
test
jno
out
xor
push
sub
sti
mov
sub
std
call
jo
test
pop
mov
ret
int3
sbb
out
inc
fsub
xor
aad
int
sub
jecxz
jbe
aas
mov
sbb
fldl
mov
lgs
dec
jge
loop
add
add
mov
push
fdivl
push
and
push
sbb
add
testl
fwait
bound
dec
push
push
and
rolb
add
push
xchg
test
loope
cs
fsubr
leave
cmp
jg
test
rcll
ljmp
repnz
xor
cmp
popl
insb
push
or
mov
adc
mov
cwtl
enter
pop
ds
int3
jbe
aaa
pop
and
add
push
xchg
je
mov
sub
mov
pop
sub
inc
inc
push
pop
mov
negl
cltd
and
sub
test
idiv
adc
ds
mov
rolb
fs
sarb
call
adcl
pop
out
adc
jns
sub
jp
xchg
hlt
fbld
aad
mov
add
jne
jne
loop
push
and
pusha
ss
aas
mov
cltd
cvttps2pi
in
in
testl
or
and
dec
pop
jp
imul
or
imul
lea
loopne
sbb
in
es
jns
dec
gs
insl
inc
sbb
pusha
dec
pop
adcb
scas
inc
add
leave
movsl
push
dec
pop
mov
xor
add
dec
pushl
cmp
or
enter
aas
sbb
call
adc
and
test
rclb
dec
push
fcoms
jb
es
flds
inc
sub
shll
jecxz
jle
dec
sbb
adc
daa
and
mov
enter
adc
mov
out
stos
pop
jno
out
ljmp
cmc
fidivrl
das
dec
loop
enter
daa
adcl
push
arpl
stos
inc
mov
push
ficoms
scas
and
bound
pop
test
push
test
sub
jo
or
xor
sti
mov
aaa
jb
aas
sbb
iret
xor
mov
orl
pop
stc
mov
and
ja
pop
shlb
sub
loope
shlb
and
xchg
add
pop
adc
push
daa
pop
cmpl
mov
push
testl
cmp
ret
movl
inc
repz
sbb
xlat
jns
xor
jnp
add
cwtl
xchg
push
mov
mov
dec
inc
cmpsb
pop
xchg
push
adc
adc
lea
sti
repz
xchg
lahf
inc
pop
jmp
test
dec
dec
dec
push
hlt
sbb
mov
aas
ljmp
mov
lock
ret
aaa
ficoml
xor
stos
push
fdiv
mov
and
cs
popa
aam
xchg
mov
add
loope
pop
imul
xchg
mov
mov
js
in
pop
pop
popf
sti
out
jbe
jle
mov
leave
les
movsb
add
int3
jno
daa
inc
popa
and
sti
ficoml
stc
xchg
lahf
notb
jge
testl
push
popa
nop
or
xchg
push
cmp
shlb
or
hlt
pop
xor
or
enter
loop
dec
mov
xchg
or
sub
outsl
iret
add
push
lahf
inc
out
mov
mov
stos
sbb
fcomps
movsl
add
aaa
ret
jns
push
push
xchg
adc
cli
or
orb
fistl
int
daa
dec
imul
mov
pop
jge
xor
inc
sub
ja
and
stos
jg
inc
jbe
pop
clc
xor
adc
xorl
cmp
push
push
xchg
jle
out
outsb
cmp
dec
sti
push
sbb
and
jecxz
xchg
mov
aaa
mov
mov
cmp
xor
notb
lcall
call
sub
movsl
and
pop
std
popa
inc
out
xchg
pop
fimull
mov
iret
mov
out
and
cmpsl
jl
ret
test
clc
fucomp
xor
sbb
leave
push
mov
dec
aas
adc
xchg
out
push
sbb
jbe
test
push
clc
xor
int3
insb
cld
push
add
out
xor
movsl
xchg
aad
jnp
das
loope
xor
andb
in
and
in
test
fsubs
out
or
lods
mov
in
or
inc
add
lret
adc
or
out
roll
cwtl
cld
ds
testl
mov
xor
cmp
pop
cmc
or
int3
repz
inc
lahf
insb
push
or
fs
xor
or
xor
push
fldt
lret
push
icebp
imul
cvttps2pi
inc
lock
fidivl
fmuls
lcall
out
out
mov
lret
push
insb
mov
iret
lcall
sbbb
jo
cmpsl
aaa
enter
out
cmpsl
shll
mov
popf
jg
sahf
fwait
dec
mov
and
sar
sub
pop
mov
leave
add
mov
adc
add
sti
lahf
lods
xchg
pop
lock
lds
xchg
cwtl
cmpsl
or
mov
ja
xchg
lods
inc
aam
insl
stos
icebp
push
mov
fcom
repnz
cwtl
fimuls
ds
ja
pop
pop
adc
inc
jo
ja
jecxz
in
gs
push
lods
mov
jmp
mov
add
push
adcl
or
inc
inc
in
mov
or
fcomps
stc
repnz
ss
addr16
shll
lds
out
mov
sbb
mov
or
xor
xor
das
sti
push
in
out
sub
jne
ljmp
jnp
pop
push
sbb
sbb
inc
fimuls
aaa
fld
mov
xchg
bound
adc
dec
mov
cmp
cmp
mov
push
ret
sub
aaa
pop
pushl
imul
push
cli
movl
imul
inc
aam
xorb
add
and
aam
movsb
sbb
add
int3
adc
pop
adc
mov
shrl
adc
cwtl
movsb
lahf
xchg
lea
sbb
push
aaa
dec
dec
pop
mov
adc
add
sub
add
jmp
int3
pop
pop
fs
lea
iret
add
jns
push
scas
pop
pop
pop
inc
dec
outsl
lahf
leave
aas
or
push
mov
jle
pop
and
imul
push
loopne
xchg
ja
mov
or
std
ficoml
js
mov
outsl
cmp
push
testb
cmp
gs
out
sbb
sub
flds
mov
and
lock
dec
xchg
aas
les
xchg
aaa
jecxz
dec
jmp
cmp
sub
pop
das
mov
cmc
jmp
cmp
pop
cmc
push
inc
es
push
stos
sbb
aad
lods
testl
cmpsb
adc
xchg
das
loopne
popa
xor
bound
xchg
test
sbb
pop
xor
add
jb
mov
cwtl
popf
and
gs
pop
lds
inc
xchg
ret
add
dec
jno
dec
outsb
add
dec
fcomip
mov
mov
xor
xor
cmp
jge
and
push
xor
jle
jecxz
outsb
and
cld
xor
adc
jae
arpl
xchg
mov
std
xchg
andl
ret
xchg
test
jg
xor
adc
jns
xchg
cmp
sub
lock
mov
xor
ljmp
into
inc
cmpsl
inc
sbb
jle
add
lea
cmpsb
push
cmpsb
xchg
inc
pop
pop
jge
lret
repz
ljmp
mov
jmp
out
daa
cmpsl
push
add
arpl
aas
add
mov
dec
pop
int3
repz
icebp
sub
adc
jns
jbe
cli
cltd
xchg
mov
dec
lods
mov
xchg
mov
jne
xchg
bound
jne
xor
jae
nop
xor
test
cwtl
dec
sub
repnz
dec
popf
xlat
pop
test
jp
or
mov
rclb
or
push
jle
add
adc
gs
test
inc
fistpll
aas
je
cwtl
movsb
dec
mov
clc
and
or
mov
dec
add
jge
sub
push
loop
ds
dec
pop
lcall
jb
shll
jg
cli
test
xor
lahf
inc
iret
or
pop
lds
mov
aas
inc
icebp
add
push
mov
mov
pcmpeqd
imul
js
sbbl
lcall
add
ljmp
jbe
test
out
mov
es
cmpsl
lods
repnz
std
test
bound
into
mov
cmp
jne
pop
lock
ljmp
push
in
push
aas
sbb
sbb
das
jns
leave
addr16
aad
je
stc
lods
mov
xor
test
mov
js
inc
imull
in
lock
cmc
add
out
inc
xchg
in
dec
or
les
mov
jno
jo
or
pop
cs
in
data16
arpl
stos
pushf
inc
xor
loope
jge
mov
cmp
jne
pop
mov
in
imul
push
fs
jp
lea
ja
lret
cmp
adc
xchg
jmp
add
es
adc
movsb
cmp
nop
dec
movsb
insl
out
mov
jo
ret
xchg
xor
les
imul
jg
xchg
mov
push
add
sub
add
push
in
leave
pop
jns
scas
imul
repnz
adc
dec
hlt
adc
push
fadds
aaa
mov
push
repz
in
cmp
xchg
add
add
or
pop
mov
ret
arpl
aas
adc
add
mov
fisttpl
gs
push
and
add
and
daa
pop
dec
jle
rorb
jne
ss
dec
sbb
insl
sbbb
sti
xor
inc
imul
jnp
inc
inc
pushl
pop
jge
mov
xor
push
int3
fists
xchg
repz
ss
lock
pop
orl
pop
jl
lds
mov
aad
cmovne
adc
add
test
data16
xchg
sbb
or
cmpsl
sbb
pusha
cmpsl
enter
lods
mov
inc
add
sub
jbe
int3
and
into
push
mov
ret
mov
leave
jle
sbb
psadbw
sbbb
testl
push
cmpxchg
pop
sti
and
cmc
movsb
jne
loop
aad
cwtl
int
fimull
shrb
cmpsb
into
inc
pop
push
or
enter
add
ds
jmp
pop
sti
ljmp
xchg
xor
cwtl
inc
add
and
into
push
pop
push
pop
dec
pop
je
addl
xchg
repnz
ret
mov
pop
pusha
jns
lds
sbb
inc
cmpsl
cmp
or
xchg
pop
mov
mov
popa
ljmp
xchg
inc
pop
and
lret
mov
dec
push
clc
add
pop
push
hlt
pop
std
cld
rcrb
xchg
fistps
jbe
rcrb
in
and
lock
pop
dec
xchg
sub
xchg
imul
xlat
mov
mov
cs
iret
inc
fnstcw
push
ss
mov
lcall
pop
mov
loop
rorl
pop
fidivrs
sub
das
rol
mov
sbb
frstor
mov
mov
push
cmpsb
xchg
xchg
jmp
das
fs
pop
adc
pop
sbb
into
data16
add
cmp
inc
inc
clc
dec
nop
inc
hlt
out
cmp
dec
pop
add
rcl
inc
adc
decl
adc
inc
and
cmpsb
lea
mov
in
test
push
cld
fldenv
test
jle
sbbl
mov
pop
mov
stc
adcl
fidivl
add
stc
loope
adc
loope
add
dec
or
ds
inc
add
ret
xorl
push
xchg
loopne
push
imulb
and
in
int3
loope
sbb
mov
repz
jle
jl
jg
enter
push
jne
shlb
enter
push
cs
mov
inc
inc
test
call
push
loopne
sbb
pop
nop
lds
pop
xor
sub
es
pop
cli
fmuls
nop
jge
push
lock
ss
or
insl
mov
pop
or
imul
iret
ljmp
cmpsl
push
or
cmp
stos
push
popf
popa
mov
movups
add
cmp
mov
shl
call
jge
icebp
or
sub
dec
into
xchg
cmp
and
adc
cmp
mov
pusha
cmp
xchg
xor
cwtl
dec
cmp
jo
pop
dec
iret
pop
mov
add
leave
mov
in
push
pop
pop
popa
push
das
mov
ljmp
cmp
xor
mov
and
inc
dec
cmpsl
mov
cmp
lods
hlt
aas
je
les
ja
sub
or
push
dec
xchg
pop
cmp
aaa
push
mov
sbb
dec
aad
cmc
mov
jmp
xchg
mov
push
stc
and
js
daa
mov
and
lcall
shl
fstpl
mov
inc
add
mov
xor
fdivrs
cwtl
fldl
mov
aas
out
pop
stc
aad
orb
push
aas
pop
cmp
iret
dec
add
adc
and
fists
jae
movswl
mov
ret
push
sbb
add
repz
test
mov
out
and
sbb
dec
add
cmp
addl
adc
jge
movsl
adc
icebp
and
mov
pop
popf
cli
es
mov
jmp
cld
scas
stos
cwtl
ljmp
mov
sub
cmp
clc
xor
xor
adc
sbb
test
mov
xor
mov
xor
imul
pop
testb
inc
hlt
lret
fdivrs
jmp
mov
jb
jp
gs
push
xor
in
fninit
sbb
sti
test
adc
push
cmp
outsb
fadd
push
sbb
std
push
pusha
and
jmp
bnd
mov
popf
sub
dec
pop
cmp
mov
decl
dec
cmp
int
adc
out
lds
xor
mov
out
ficoml
insb
jbe
in
popl
loop
mov
push
adc
js
pop
movswl
cwtl
sarl
xor
clc
std
and
jmp
fdivs
lods
xchg
mov
nop
aas
push
jmp
inc
cmp
rorl
xor
ljmp
mov
mov
out
pop
cs
push
test
data16
push
mov
and
or
cltd
add
xchg
jle
sub
ljmp
mov
daa
les
lret
pop
xorb
add
adc
dec
xchg
inc
cli
fidivl
ljmp
cmpl
add
fistps
enter
jae
lret
not
lahf
push
cmc
jno
or
scas
test
scas
out
enter
and
xor
test
xor
pusha
push
push
iret
orl
dec
shll
mov
mov
adc
mov
xchg
mov
aad
loopne
insl
int
bound
cmpsl
mov
into
outsb
and
int
imul
cmpsl
aas
add
loopne
addr16
int3
lahf
and
or
je
popf
pushf
fs
aad
test
mov
dec
push
gs
leave
leave
test
jo
dec
sbb
cwtl
push
cmp
adc
test
push
mov
imul
in
inc
xchg
sbb
je
lods
sbb
cmpsb
pop
in
xchg
fldenv
imul
and
cmpsl
call
pop
rcr
rorb
cmpsb
cmp
adc
subl
popf
cmp
enter
lcall
add
cld
dec
or
jge
sahf
idivb
mov
test
inc
xor
adc
ret
push
ja
jecxz
cli
sbb
jg
test
movsl
sahf
pop
dec
inc
mov
xor
fsubl
pop
in
clc
dec
jne
loop
push
sub
lock
es
gs
or
cli
shrb
sbb
xchg
inc
add
test
cmp
lret
inc
pop
dec
pusha
jmp
push
in
outsb
and
inc
std
sbb
adc
pop
out
push
xor
cmp
out
and
mov
in
sub
fcomp
inc
dec
mov
push
ret
in
jecxz
jmp
fdivs
dec
sub
ds
cli
sbb
mov
sbb
insb
push
aas
ret
inc
ljmp
jne
add
and
test
and
cmpsl
gs
and
movsb
stc
push
mov
xchg
movsl
xchg
aam
xor
jle
fldl
aad
out
shlb
mov
inc
aad
jnp
sub
dec
jo
nop
repnz
in
imul
neg
dec
adc
std
mov
out
xlat
mov
mov
ljmp
push
xor
aam
xchg
in
hlt
or
frstor
sub
pop
pusha
loop
pushf
push
insl
mov
pop
and
dec
loope
les
mov
jne
pop
shrl
xchg
jmp
je
or
int3
add
mov
mov
and
pop
fldenv
pminub
cmp
unpcklps
sbb
xchg
and
loope
xlat
xchg
jp
fistps
mov
cmp
push
fwait
inc
pop
iret
add
jge
adc
adc
push
movsb
adc
call
imul
pop
enter
sarl
testl
ds
out
or
cmp
xor
stos
rorl
movsb
cmp
fcomps
pop
cli
int
sub
sbb
xor
xorb
dec
adc
outsb
ret
sub
and
or
loopew
sbb
sahf
mov
gs
shrl
cli
pop
push
rcll
out
and
inc
push
pop
xor
scas
inc
shrl
test
addr16
sbb
and
pop
popa
push
outsl
jg
xor
jb
push
jle
scas
xor
shll
jecxz
xor
fimuls
mov
jmp
mov
movsb
sti
cmpl
mov
aaa
mov
pusha
insb
out
adc
int
or
bound
ret
outsl
cmp
inc
in
out
out
es
jns
dec
frstor
int
pusha
rcrb
inc
data16
pop
dec
sub
addr16
sub
cmpsl
pop
pop
gs
nopl
inc
lcall
pop
mov
or
arpl
inc
sbb
push
addr16
xchg
cltd
je
push
orb
xlat
mov
lcall
inc
sub
loope
aas
sahf
inc
pop
jp
testl
subb
and
rcrl
bound
jno
in
or
loop
js
sub
in
mov
ret
sbb
add
inc
sub
out
pop
icebp
add
push
shll
inc
pop
daa
push
add
inc
shrl
jo
stc
push
jnp
test
shrl
jecxz
or
inc
cmp
mov
mov
jne
int3
fildl
pop
stc
sbb
push
xchg
and
add
xchg
out
sbb
push
addb
dec
movsl
xchg
mov
dec
addr16
and
mov
jg
xor
shrl
jo
sti
mov
sub
sub
jge
xchg
jo
dec
inc
in
sub
into
insb
add
addr16
cwtl
mov
mov
add
add
push
cli
in
xchg
inc
aam
inc
jmp
sahf
popf
inc
fs
aas
jmp
jp
sub
aam
and
or
cmpb
mov
mov
jp
mov
push
and
lret
mov
adcb
or
adc
adc
add
mov
test
or
mov
or
ja
push
jae
dec
loopne
int
xchg
xor
ror
jle
in
call
divl
push
cmp
mov
fs
aas
es
mov
pop
cmc
mov
sbb
out
mov
push
jecxz
sub
adc
pop
insb
loop
clc
pop
shrl
dec
out
and
dec
add
dec
ljmp
jle
mov
inc
incl
push
fwait
pop
scas
mov
jg
rcrb
mov
cmp
inc
xlat
inc
mov
inc
xor
pop
ret
ss
cs
cmc
sub
movsb
cld
repnz
sub
sbb
sub
movsl
mov
movsl
outsb
push
outsb
in
dec
dec
mov
adc
dec
adc
ss
mov
push
repnz
jmp
jp
data16
andb
dec
stos
xor
jg
rorb
subb
shlb
mov
inc
std
lcall
in
out
outsb
mov
push
jb
xor
dec
in
pusha
push
outsb
sub
mov
jmp
jb
dec
fdivrl
sub
aad
aad
iret
xchg
test
cmp
aam
scas
mull
jns
xchg
in
add
cmc
int
mov
out
push
jge
xchg
dec
enter
jne
ja
xchg
out
xorb
pop
in
mov
jg
addb
cmpl
add
movsb
movsb
aas
ja
push
sbb
cmp
adc
inc
test
and
push
pop
iret
ds
fscale
imul
xor
and
insl
inc
sbb
cmp
push
cld
xor
fdivrs
movb
sbb
pushf
mov
xchg
cltd
fs
neg
and
sahf
mov
dec
pop
adc
xor
and
mov
fcmove
push
pop
test
mov
inc
in
pop
mov
sbb
pop
dec
das
mov
jmp
stos
mov
pop
aas
ret
push
mov
daa
sub
xchg
mov
sbb
repz
sub
adc
enter
out
dec
mov
mov
pop
shlb
flds
les
mov
xchg
xchg
jl
xchg
and
out
mov
mov
call
jns
xor
or
dec
iret
ret
cld
hlt
fidivrs
jle
mov
movsb
mov
sbb
push
imul
pop
push
or
xor
fldcw
jb
fstp
out
xor
lcall
pop
out
clc
or
test
sbb
cmp
bnd
adc
aas
enter
shl
das
ret
push
sub
jb
ret
pop
cltd
lock
mov
xchg
inc
pop
add
xchg
jns
sbb
or
icebp
or
sahf
cmp
jns
pop
loopne
pop
add
pop
sub
ret
jmp
lcall
push
push
jae
dec
mov
mov
stc
in
xchg
loop
imul
sub
fldl
fstpl
xchg
pop
pop
sub
sbb
cmp
cmc
popa
xlat
cli
push
push
mull
cmp
subb
jle
sub
test
mov
inc
push
addl
sub
popa
mov
roll
enter
shll
out
inc
aas
loopne
push
mov
cmp
jp
hlt
popf
imulb
popf
or
fcompl
cmp
jne
aaa
faddp
or
nop
data16
insl
dec
push
push
les
leave
mov
mov
movsl
and
pop
std
xorl
scas
outsb
xor
fnstenv
jecxz
testl
out
lods
mov
addr16
js
jne
push
dec
mov
xchg
popa
mov
sbb
out
add
or
xor
push
sbbb
aas
test
push
lahf
lods
mov
insl
inc
add
push
mov
ds
int
inc
out
jno
lahf
loopne
nop
adc
aam
jo
psllw
repz
mov
sub
jp
shl
cmp
xchg
sub
mov
fwait
je
decb
data16
and
inc
inc
mov
sub
shlb
mov
xor
pop
aaa
ffree
adc
pop
inc
in
jge
sub
fwait
in
shrb
cmp
jl
mov
call
add
or
and
push
mov
pop
ss
or
nop
sahf
or
test
push
mov
xlat
lea
pop
cmp
arpl
cli
xor
stos
lcall
mov
inc
xchg
shlb
mov
jnp
mov
movsb
sub
cmc
jmp
imul
fmuls
cltd
lahf
mov
fists
xor
push
and
cmp
xchg
mov
sbb
xchg
test
std
mov
mov
ficomps
insl
lea
mov
roll
mov
xchg
sbb
adc
std
xor
test
lods
dec
lods
shrl
add
dec
das
in
lahf
decl
out
pushf
cld
loop
stos
imull
icebp
insb
pop
sub
adc
test
pop
flds
test
mov
pusha
jge
pop
inc
loopne
pusha
loopne,pn
adc
into
adc
movsl
or
jmp
push
pop
push
gs
stc
lahf
mov
jae
xor
test
jp
pop
add
test
adc
fldt
add
test
or
into
popa
mov
inc
mov
mov
lahf
cli
xorl
xor
cli
je
lods
pop
out
scas
lret
sbb
adc
cmp
sbb
dec
fucom
cmp
mov
test
movsl
test
cmpb
push
push
and
lock
add
xor
and
jecxz
mov
xchg
sub
mov
jg
and
mov
adc
in
dec
adc
or
gs
daa
jg
push
xor
insl
aas
adc
xchg
push
movsb
jl
adc
push
xor
mov
add
xchg
xchg
adc
cmp
mov
dec
pop
out
and
push
mov
insb
bound
test
mov
or
pusha
call
add
and
inc
lock
icebp
hlt
lret
xlat
adc
sbb
cmpb
out
pop
pop
adc
jmp
add
mov
push
loope
or
xor
jne
lea
mov
ljmp
inc
in
lds
or
push
ret
adc
hlt
mulb
cmc
pop
aaa
and
outsl
std
jb
pop
sarb
cmp
jg
add
or
pop
mov
mov
int
dec
push
pop
cmp
in
dec
out
push
insb
pop
inc
xor
int3
popf
insl
sbb
rolb
mov
in
lcall
cld
movsl
fadd
inc
sbbl
mov
cmp
inc
addb
jg
cs
dec
adc
divl
push
pop
xor
or
dec
lahf
push
pop
add
pop
sub
je
sub
cmpsl
test
sub
cmpsb
jmp
sub
das
jge
push
adc
mov
cmc
or
pop
mov
add
das
pop
je
cli
inc
push
cwtl
rorl
aam
lret
shlb
ret
in
xchg
sub
pop
cmp
dec
dec
push
repz
or
fs
imul
jne
test
lea
lcall
pop
stos
lahf
jbe
mov
adc
cltd
add
mov
in
test
sbb
fwait
adc
out
xchg
xchg
mov
scas
pop
js
ret
and
mov
pushf
cmp
fldcw
mov
mov
out
push
cmpsb
mov
arpl
and
iret
out
daa
notl
dec
xchg
pop
es
inc
fisubs
dec
pop
adc
popf
fildll
ficompl
push
xchg
in
cwtl
call
shlb
fld
xor
and
push
xchg
nop
and
les
out
xor
push
add
arpl
fwait
mov
shll
faddp
cmp
push
inc
push
arpl
fcompl
cwtl
outsb
xchg
sub
add
cli
adc
cmp
lea
scas
jmp
mov
ret
or
bound
adc
pop
repnz
push
jp
les
fcomps
mov
push
xchg
les
sbb
push
push
lret
pusha
pop
push
and
or
or
or
xchg
pop
lock
xchg
imul
adc
dec
push
scas
aad
aam
sub
pop
mov
dec
fcoms
or
pop
xor
in
dec
pop
lahf
jecxz
sbbb
lcall
rolb
inc
dec
jp
cli
pop
sbb
imul
sbb
outsb
cmp
mov
lds
pop
jp
je
jl
mov
lahf
push
or
icebp
mov
inc
rclb
gs
mov
ds
dec
sub
or
adc
out
add
mov
lea
gs
daa
jmp
sarl
fidivrs
or
in
scas
pop
nop
in
shrb
cmp
push
xchg
fbld
icebp
lods
xchg
mov
aam
adc
in
incb
icebp
lea
xchg
adc
loope
rorl
popl
leave
mov
shrb
lcall
leave
scas
lahf
data16
out
adc
xor
cmpsl
rcrb
mov
out
aaa
xchg
stc
xchg
mov
dec
sbb
push
test
das
stc
lret
cmp
test
or
mov
push
mov
mov
pop
cmp
add
jp
stos
sbb
into
pop
jmp
nop
pop
inc
movl
lret
popa
aad
cltd
lods
inc
fisttpll
xchg
inc
mov
stc
fsub
cmp
scas
fistl
or
outsl
adc
cmp
imul
sbb
mov
iret
testl
xor
and
inc
pop
mov
push
bound
test
mov
jae
mov
and
out
or
mov
cltd
rcrl
xchg
push
add
cmpsb
enter
dec
adc
lret
adc
aad
clc
xchg
sbb
xchg
sub
enter
nop
cs
add
add
stc
lods
jge
hlt
push
clc
mov
stc
jg
mov
sti
leave
dec
cmp
loope
sub
pop
inc
mov
push
loop
cmp
ss
outsb
lcall
dec
jmp
xor
ja
pop
mov
inc
mov
lahf
push
out
cld
inc
xchg
xlat
pop
mov
lahf
mov
into
jo
or
xor
mov
jne
jg
roll
fwait
pop
adc
idivb
stos
out
inc
push
mov
iret
lret
fsubl
inc
int
pop
lret
push
stc
or
jecxz
and
push
adc
inc
xor
add
sti
pop
das
adc
or
aas
cltd
ja
ss
imul
mov
push
jge
rcl
cmp
cmp
je
sbb
push
mov
pusha
call
cmp
jb
mov
insl
imul
pop
cmp
inc
inc
addb
cmpl
loope
out
push
movsb
xchg
shl
push
popf
mov
addr16
fstps
jb
mov
xor
cmpsb
mov
adc
fisubrs
shlb
jae
cmp
dec
sti
adc
pop
fnstsw
aaa
adcb
xchg
jae
mov
cli
push
fisttpll
and
testl
xchg
inc
add
pop
lcall
lods
or
inc
dec
push
out
sub
dec
test
pop
jp
sub
inc
imul
outsb
int
fdivrp
push
jecxz
sbb
repz
pop
dec
sbb
daa
outsl
out
sahf
shll
lahf
pop
cwtl
outsb
popf
outsl
fmull
pop
xchg
sahf
popa
insb
sbb
sahf
cmp
xor
cltd
xor
ljmp
mov
aad
mov
pop
sub
mov
jno
fsubrs
shr
cltd
mov
or
xor
xor
outsb
inc
stos
rcrb
loope
push
jbe
jl
loopne
cmp
sbb
pop
out
or
ds
loope
sub
xlat
ss
xchg
je
out
add
add
xchg
mov
jo
mov
andl
mov
xchg
in
and
test
test
test
aad
inc
xor
sbb
inc
mov
add
xchg
insb
je
fisubs
xchg
adc
subl
xchg
repnz
dec
cmp
mov
xlat
fisttpll
test
dec
lea
iret
sahf
add
push
inc
movsb
sbb
jmp
xor
inc
cmp
fbld
mov
push
xchg
cmp
mov
xchg
and
or
jl
xchg
mov
push
push
and
jne
mov
sub
and
or
lock
mov
imul
popa
adc
frstor
push
ja
cmp
fadd
orl
push
add
sub
adc
jg
xchg
mov
jp
ljmp
xchg
and
test
mov
aaa
mov
adc
test
mov
repnz
scas
jle
xor
mov
push
outsl
mov
sbb
push
push
mov
nop
sbbl
fiaddl
aas
inc
bound
pop
xchg
jo
popa
das
ds
sbb
mov
lock
bound
push
pushf
push
mov
inc
movsb
in
jbe
outsb
pop
std
push
jmp
pop
jge
stc
cmp
rol
inc
ljmp
adc
or
movsb
add
or
inc
dec
mov
rcrb
rclb
adcb
cmp
pop
cltd
fimull
dec
pop
sub
movsl
push
jno
push
or
movsb
cltd
xlat
sbb
jae
inc
mov
xchg
ret
cltd
mov
daa
lods
aad
ret
test
jmp
in
flds
in
imul
sbb
imul
jne
repnz
jb
and
movsl
xchg
test
das
cmp
jmp
mov
or
adcb
sub
popf
inc
hlt
jae
inc
push
xor
mov
mov
jmp
xchg
push
movsb
fwait
inc
inc
cmp
pop
xorb
xchg
in
jmp
sbb
sub
cmp
lret
filds
and
incb
sbb
mov
mov
jns
inc
cmp
test
out
mov
rcr
gs
push
test
aad
negl
mov
cmp
or
cmp
testl
mov
scas
int3
test
and
adc
sbb
arpl
push
cmc
cmp
mov
mov
rorb
je
inc
xor
cs
mov
fdivrs
mov
sti
test
jmp
mov
cs
xor
jg
or
test
test
adc
mov
daa
out
cmp
cmp
inc
inc
mov
add
inc
push
sbb
es
or
inc
jb
push
subb
fsub
les
sbb
add
or
adc
aaa
clc
pop
cmc
lret
fcmovbe
adc
mov
call
call
add
inc
jae
addr16
cmp
dec
adc
inc
cli
mov
sahf
lea
inc
adc
imul
mov
pop
lret
jge
push
xor
and
sbb
repnz
xchg
mov
jmp
adc
push
icebp
cltd
and
insb
pop
cmp
iret
xchg
mov
cld
xchg
xor
jl
xchg
cli
int
mov
xchg
in
and
mov
shrl
xor
mov
add
test
pop
add
popf
jb
insb
in
mov
or
jecxz
sbb
inc
mov
push
mov
out
cltd
sub
lds
fsubs
push
mov
or
fildl
imul
cmp
movsb
sub
mov
mov
cli
inc
jg
mov
push
cmpl
pop
aas
adc
push
lahf
sub
or
out
or
out
jne
in
std
fcoml
push
cmp
push
ss
adc
sbb
imul
mov
sub
xchg
pop
int3
dec
mov
pop
and
add
lret
or
test
xor
loope
or
lret
int3
nop
pop
enter
in
loop
ror
pop
inc
jbe
cmpsb
mov
fs
adc
push
xor
mov
mov
aam
dec
shll
rcr
cmpsl
gs
mov
pusha
fildll
mov
ja
sub
out
pop
xor
xchg
jne
rcrb
je
inc
shlb
adc
imul
mov
test
shrl
pop
loopne
outsb
push
es
stos
in
dec
or
lea
loop
cmpl
enter
inc
xchg
gs
cmp
lods
jae
sub
insb
in
jecxz
out
adc
scas
pusha
scas
mov
aas
inc
nop
and
dec
mov
icebp
mov
shr
cmp
scas
xor
pop
mov
lret
or
dec
push
aas
inc
sub
mov
sahf
adc
dec
mov
adc
pop
jmp
mov
andb
pop
pusha
rcrl
mov
leave
push
lock
les
jmp
std
in
cwtl
outsb
mov
jne
mov
cmp
repz
rorb
test
xchg
imul
jns
xchg
je
push
push
xor
push
add
lahf
incl
lret
popf
dec
ljmp
inc
mov
sarb
inc
sti
mov
lock
into
xchg
sbb
repz
mov
mov
je
hlt
rorb
adc
add
jg
pop
popa
fcomps
mov
dec
in
or
enter
enter
jae
sbb
jle
xchg
push
mov
int3
mov
adc
lods
js
sbb
or
sub
adc
mov
dec
sahf
jbe
add
jns
cmp
ds
daa
sub
je
push
cltd
loope
or
loop
push
imul
aam
sbb
push
mov
popa
xchg
jg
xor
adc
sbb
sub
sbb
rcll
cmp
loope
lret
jo
ret
mov
inc
shl
ja
out
inc
rorl
fiaddl
clc
mov
mov
std
or
cltd
inc
or
add
sbb
pop
fcoml
cmp
mov
sbb
adc
stos
sub
icebp
cmp
fwait
xchg
xchg
inc
mov
and
mov
pop
js
cmp
inc
imul
jo
cmpsl
inc
add
dec
sti
outsl
mov
sbb
leave
in
lods
out
movsb
cmp
in
orb
addr16
cli
into
jge
dec
inc
cltd
aad
stc
adc
ficomps
jns
cmpsb
cld
dec
lahf
mov
pop
mov
and
cmp
xor
pushf
mov
repnz
and
lahf
imul
das
push
mov
cld
add
push
cmp
push
xchg
and
lret
mov
movsb
mov
jae
xchg
cmp
cmovl
bound
dec
scas
mov
sub
pcmpgtb
lahf
fcmovu
arpl
xor
jne
insl
jb
jo
stc
mov
cmp
das
xor
loopne
xchg
lock
mov
out
pushf
sbb
and
and
cmp
rcl
je
push
inc
jb
jle
sub
jae
xchg
mov
adcb
inc
jge
ret
mov
stc
push
fcmovb
sub
jmp
mov
stc
mov
mov
inc
cmpsb
pop
fdivrl
xor
fldcw
pusha
cmp
pop
dec
pop
mov
jo
pop
mov
mov
arpl
sbb
mov
mov
push
loop
outsb
jle
cwtl
xchg
int3
les
sub
movb
in
sbb
push
jae
xor
sahf
add
fidivs
mov
fsubrs
inc
das
lret
sti
in
jns
sbbl
mov
push
and
jbe
dec
sub
cmp
fidivrs
fxam
pop
lret
test
pop
dec
inc
xor
cmp
aaa
or
cmpb
xor
nop
subl
jae
or
out
or
or
insl
xor
lds
lea
adc
and
lahf
or
std
adc
jl
push
inc
imul
in
aam
lods
xchg
stc
sbb
outsl
cwtl
sbb
sbbl
nop
and
push
ds
dec
cli
or
into
ror
cmpsb
pop
andl
pop
into
pop
push
fld
stos
inc
jno
iret
add
test
push
lea
dec
or
cmp
mov
mov
cmpsb
stos
lea
dec
cmpsl
xor
ret
movsl
aas
add
cmp
push
sub
xchg
mov
pop
lret
sub
sbb
push
or
sub
sub
std
loopne
inc
outsl
jp
or
stos
mov
jecxz
mov
int
dec
repnz
inc
in
cmp
sub
add
lock
in
mov
repz
test
add
add
les
int
jl
xor
fcoml
mov
inc
push
inc
fldl
dec
or
test
in
pop
xlat
in
or
lds
fiadds
fisttpl
in
and
int3
or
sub
or
xchg
imul
scas
stos
sti
es
adc
mov
shrd
pop
and
jecxz
dec
fdivl
movsb
fs
xor
xlat
insb
mov
pop
inc
gs
xchg
ficomps
js
fwait
mov
adc
mov
rorb
pop
popa
aam
push
or
adc
loope
je
xlat
dec
mov
ja
and
andl
shrb
pop
icebp
in
jno
fs
jl
loope
inc
insb
sarb
enter
pop
sbb
popa
jecxz
stos
mov
mov
xor
cli
sub
ret
iret
lea
pop
scas
or
and
mov
adc
mov
lcall
sahf
aam
fwait
sub
daa
push
mov
inc
sahf
sub
xchg
mov
pop
ret
xchg
sub
lea
pop
iret
pushf
inc
and
addl
push
clc
xchg
mov
pop
fdivs
or
cmp
cmp
lcall
shll
gs
xor
lret
mov
cmp
or
or
shrl
mov
mov
pop
add
test
fstp
std
add
nop
xorl
mov
call
or
cwtl
addl
test
lahf
scas
adc
fiadds
push
das
adc
or
mov
pop
scas
mov
jo
lret
mov
jns
call
dec
sbb
xor
push
data16
std
push
add
push
imul
aaa
lods
ljmp
mov
icebp
push
xchg
push
popl
jnp
insl
sbb
loop
xchg
jle
nop
scas
mov
rcrb
ret
ljmp
lock
cmp
sbbb
sbb
mov
rorl
les
mov
mov
push
mov
mov
scas
push
push
addr16
clc
outsl
adcl
sarl
fisubrl
arpl
idiv
jge
mov
inc
add
cltd
ds
push
bound
sbb
repnz
fbstp
or
inc
or
lock
clc
aad
pop
sbb
adcb
adc
push
shll
xor
push
pop
xor
mov
xchg
test
cmc
xor
lds
sub
jecxz
pop
sbb
jmp
cmp
stos
dec
test
adc
cmpsb
xchg
mov
adc
adc
faddl
outsl
pop
cs
sbb
outsl
adc
lahf
rol
mov
push
lret
or
inc
mov
jae
jns
outsb
sub
mov
mov
xorb
sub
or
int3
insl
mov
add
pop
movsl
cmp
pop
pop
les
pop
sbb
mov
loop
into
mov
test
imul
jg
and
jns
nop
out
cmp
mov
jae
adc
mov
fsubrl
sbb
jns
xchg
cmpsw
xor
xchg
sbb
test
lods
lahf
sub
add
enter
jno
mov
in
aas
in
shr
mov
fwait
push
lret
mov
mov
loop
lahf
mov
movsb
lret
lock
in
push
pusha
js
inc
lods
jb
push
cmp
shlb
xlat
aas
jge
stos
xchg
mov
xchg
ja
pop
rorb
jo
mov
mov
ret
jle
call
lods
or
xchg
rolb
mov
cltd
sub
dec
push
addl
sbb
mov
mov
add
rcrb
mov
adc
jle
inc
test
out
jl
push
xchg
push
mov
sub
lcall
jne
rorb
jno
pop
lock
mov
xchg
mov
sub
add
int
jb
int3
push
add
and
sbbl
cli
test
pop
test
cmp
cmp
xor
cwtl
jge
daa
mov
std
pop
mov
mov
add
mov
push
je
jns
dec
and
adc
mov
add
ljmp
or
xchg
cmp
pop
adc
sub
movsb
mov
or
mov
test
enter
adc
jecxz
and
inc
mov
mov
mov
jnp
adc
xchg
sub
out
outsb
inc
inc
adc
sbb
push
lods
push
dec
imul
aam
hlt
jl
mov
cmp
inc
sbb
pusha
cwtl
in
int
out
and
rorb
pop
aaa
cmpsb
adc
in
pop
dec
fsts
adc
xchg
fdivrl
rcrl
xchg
js
rol
sahf
aad
mov
int3
add
jbe
outsl
in
hlt
jb
xor
fisubrl
push
mov
sbb
ljmp
imul
fildl
adc
scas
daa
insb
push
test
scas
aaa
inc
mov
out
in
adc
in
add
jne
push
push
jns
out
mov
xor
gs
cmp
push
adc
negl
test
xlat
adc
iret
lret
or
aad
ljmp
and
bound
and
jecxz
cwtl
sarl
mov
pop
int
jge
mov
shll
jle
loope
sbb
jno
sub
adc
mov
imul
xchg
cmp
xchg
call
mov
inc
fwait
mov
fdivrs
cs
nop
cmp
dec
repnz
mov
sbb
and
aas
push
es
aas
repz
mov
enter
mov
dec
inc
mov
test
insl
xchg
mov
pusha
mov
shl
inc
push
dec
mov
repz
pop
loope
jb
and
jl
sub
xlat
cmpsl
hlt
arpl
mov
mov
ljmp
lods
ja
xchg
bound
mul
adc
out
adc
loop,pt
inc
mov
pop
iret
xchg
jne
inc
pop
jbe
mov
clc
sub
test
mov
aam
hlt
pop
cmp
xchg
test
ljmp
out
or
test
roll
fs
je
add
mov
pop
fadds
dec
mov
pop
xor
adc
inc
cs
mov
push
pushl
adc
pop
aaa
pop
aam
push
mov
dec
add
inc
xchg
lock
mov
or
test
inc
mov
cmp
lea
popf
test
sbb
cwtl
sub
and
movsb
decl
sahf
repz
pop
cmpsb
and
ret
jg
lcall
mov
inc
aad
adc
push
dec
nop
bound
sub
outsb
shrl
mov
add
jnp
adc
push
cli
pop
pop
mov
je
test
mov
rcr
hlt
push
sbb
fs
pop
mov
int
pop
jecxz
xor
pop
in
add
cmp
imul
ficoml
push
dec
dec
or
pop
scas
jle
jg
lock
pop
cwtl
inc
xor
stos
pop
mull
or
idiv
adc
and
insl
movl
stc
cmpsb
sbb
push
mov
out
add
fadd
cmp
fidivs
js
outsb
fnsave
inc
int3
das
in
mov
rep
ss
add
pop
fisttps
mov
push
arpl
nop
cmp
mov
scas
stos
sahf
jo
mov
icebp
xchg
inc
xor
mov
push
mov
cwtl
hlt
std
xchg
insl
into
mov
dec
push
push
scas
lret
mov
pop
mov
inc
rorl
or
mov
insb
scas
cmp
pmaxub
cmpsl
lock
add
ficoml
push
mov
mov
sub
lret
je
lret
rcll
shl
fistl
xlat
jg
push
sub
dec
movsb
jp
pusha
in
sbb
lods
clc
jmp
test
add
pushl
or
fcmovnu
and
and
int3
jne
mov
mov
mov
mov
add
sub
or
cmp
xchg
cwtl
push
lcall
rolb
movb
xor
mov
pop
loopne
push
sbb
push
out
adc
push
inc
sbb
pop
xor
xlat
jne
xor
xchg
xor
pop
hlt
sub
mov
sbb
mov
fwait
cltd
or
popf
mov
movsb
mov
int3
mov
dec
aas
out
aas
push
or
add
sbb
arpl
addl
push
push
sub
jmp
std
lahf
inc
pop
mov
inc
or
aad
pushf
push
mov
push
jb
dec
adc
roll
mov
xchg
rclb
test
js,pn
mov
mov
dec
lods
jecxz
jnp
jo
movl
xchg
in
test
test
sbb
jl
loope,pn
insb
loop
pop
xor
loopne
int3
es
jne
aam
mov
test
shl
xchg
inc
call
in
pop
jne
add
xchg
and
xor
mov
mov
fcmovne
movsb
push
jae
inc
cmpsl
cld
pop
pushf
lret
insb
pslld
mov
fsubl
lods
mov
dec
mov
or
xchg
cs
ljmp
dec
xor
pop
enter
in
pusha
cmp
sbb
das
add
icebp
adc
icebp
bound
push
mov
repnz
insb
adc
bound
sarb
sub
nop
and
xchg
ja
aas
and
jp
add
push
stc
pushf
outsb
pop
xchg
pop
jle
and
out
lcall
mov
mov
push
and
bound
pop
xor
cmp
fldl
movsl
shll
push
push
sbb
lock
pop
jge
xor
aam
out
jl
sbb
dec
mov
sub
xor
mov
sub
fcoml
push
add
loope
or
stos
pop
clc
popa
pop
jp
aam
sub
xor
int
lods
xor
sub
and
dec
mov
fistpll
repnz
lds
push
push
imul
sahf
mov
cmp
jb
cmpsb
push
mov
push
xor
dec
xor
inc
xchg
sahf
sbb
xlat
push
xor
aam
loopne
push
mov
mov
mov
mov
in
aaa
into
pop
jmp
jle
inc
push
inc
bound
subl
inc
pop
pushf
scas
mov
call
or
pop
jnp
inc
xchg
mov
mov
adc
in
aaa
ret
inc
fdivs
xor
dec
aam
cmp
mov
adc
xor
call
mov
xlat
adc
mov
fwait
add
imul
aaa
sahf
insl
jg
mov
ret
pop
ret
dec
pop
xor
push
add
jg
xor
push
xchg
fiaddl
cld
insb
or
int
loope
jp
insb
xchg
or
lods
sub
movsb
cs
subb
sahf
dec
jle
shrl
pop
xlat
sahf
xchg
xchg
or
mov
sbb
mov
dec
testl
lahf
lret
xlat
das
add
and
pop
push
std
add
popa
outsb
popf
stos
inc
andl
push
mov
ds
jno
mov
js
das
xchg
cmp
mov
imul
jecxz
xchg
pop
add
pop
adc
shll
fnstenv
mov
push
mov
mov
add
scas
mov
hlt
mov
pop
lcall
in
xchg
sub
xor
cmp
xchg
ficompl
xor
cwtl
int3
movsb
inc
inc
mov
inc
addb
loope
cld
xlat
mov
pop
scas
xchg
jl
xchg
push
std
out
frstor
inc
nop
jl
out
mov
outsb
dec
jns
xchg
mov
cmc
loopne
in
adc
cwtl
dec
mov
outsb
pop
into
call
in
imul
in
jo
cli
iret
jmp
xchg
add
inc
mov
lcall
mov
mov
and
pop
idivb
fucomp
push
adc
in
xor
dec
lahf
stc
jnp
inc
insb
stc
dec
das
sbb
dec
imul
sub
fildll
fwait
lret
jg
adc
cmp
shrb
mov
dec
nop
and
icebp
cmp
xchg
mov
pop
mov
cmp
mov
dec
or
int
xchg
pop
sub
arpl
ljmp
mov
in
mov
xor
jns
ds
dec
addb
mov
push
enter
and
fldt
fdivl
scas
test
jnp
je
out
cmp
push
mov
jecxz
lahf
pushf
sarl
jb
jnp
lret
pop
scas
repz
jnp
pop
xchg
pop
loopne
pop
push
mov
xchg
lock
std
subb
das
mov
or
add
jl
test
int
scas
iret
sub
stos
loope
jno
stos
cmpsl
mov
cmp
subl
lods
ss
xchg
jbe
xor
mov
pop
xchg
cmp
and
test
aad
stc
inc
mov
xlat
rclb
add
jns
push
jl
adc
and
jg
lock
push
and
and
dec
and
or
inc
js
ret
xlat
jle
pushf
xor
cmc
inc
sbb
push
lods
and
or
lret
fdivrs
and
inc
sbb
out
sbb
mov
aaa
jmp
loop
lcall
in
mov
add
inc
mov
in
test
lahf
add
out
or
add
mov
sbb
xor
dec
dec
sbb
je
leave
bound
in
aam
stos
and
cmp
je
pusha
shll
dec
jb
or
adc
pop
jmp
sub
mov
ret
mov
pop
lahf
out
xor
aad
push
jnp
movsl
mov
call
sub
int
test
jp
cltd
stos
dec
add
dec
xchg
jnp
aaa
out
sbb
or
lret
jge
mov
js
inc
popa
les
iret
dec
dec
test
xchg
push
daa
jo
pusha
jnp
pop
pusha
pusha
jmp
xchg
sub
pop
ret
je
push
xor
ja
dec
sub
movsl
test
rcrb
inc
call
or
leave
dec
pop
sbb
sar
lret
daa
stos
mov
jae
es
push
in
adc
lea
sbb
sub
outsl
ficomps
enter
bound
jb
les
daa
loope
mov
sbb
ret
mov
insb
and
aaa
jnp
enter
dec
xlat
and
or
cmp
inc
iret
rep
mov
xchg
sahf
fldenv
jmp
dec
cmp
add
test
roll
pusha
and
lret
and
adc
loopne
mov
addr16
pop
popf
and
adc
popa
xor
mov
rcrl
bound
je
int
xor
lret
push
lods
out
jno
push
mov
jle
cmp
pop
outsl
mov
aas
sub
jl
fcomps
cmp
jg
lcall
inc
inc
jecxz
mov
iret
inc
ret
psllq
imul
push
pop
xchg
inc
fstps
loop
xorl
inc
or
and
cmpsb
aaa
enter
sbb
sub
lods
pop
xor
bound
or
xor
out
jno
sub
mov
push
test
push
fists
add
imull
lahf
add
mov
mov
pop
out
cli
test
sbb
xor
inc
icebp
loop
mov
dec
stos
adc
out
pop
mov
int3
shll
iret
inc
lcall
rol
movsb
inc
pop
sbb
imul
test
xchg
dec
andl
ror
aas
xchg
out
push
ret
sbb
popa
xchg
insb
xor
test
clc
out
or
inc
jae
and
pop
fstps
repnz
outsl
mov
xchg
stos
fwait
cwtl
popf
sbb
out
icebp
out
outsl
mov
lods
inc
lahf
sti
adc
out
cmp
lcall
pop
or
push
sub
push
inc
or
aaa
std
lahf
cmp
loopne
xor
jmp
inc
and
dec
ret
js
and
ja
adc
clc
or
pop
jle
imul
sbb
push
jae
push
xchg
sbbl
sub
mov
xchg
xchg
into
sub
push
cmovb
loope
fidivs
loopne
sti
pop
mov
adc
out
cmpsl
lcall
cld
mov
push
sbb
add
add
jbe
outsb
push
adcb
gs
dec
or
iret
cmpsb
or
aas
test
cmp
sub
test
and
arpl
push
aas
insb
dec
push
in
add
ja
mov
bound
cmp
dec
or
fbstp
push
faddp
cs
adc
shl
xchg
sbb
pop
jle
pop
dec
lock
jecxz
rcrl
push
jecxz
test
inc
int
sbb
in
or
dec
mov
stos
addl
jmp
mov
int3
in
push
jmp
imul
mov
arpl
xchg
outsb
fildl
lcall
mov
nop
mov
loop
sub
lods
mov
fimull
xchg
and
xor
cmc
adc
pusha
cmpsl
jmp
sbb
cmp
and
loope
lea
mov
cmpsl
aad
push
decl
push
bound
das
out
cmp
iret
jns
push
sti
dec
popf
add
clc
sbb
push
jl
jge
pop
add
cmpsb
insb
xlat
xchg
in
popf
mov
jbe
stc
jnp
aam
loope
push
push
mov
cld
loopne
mov
or
jae
pop
int
testb
mov
xor
gs
shlb
cmp
pop
popf
cs
jge
push
push
pushf
lods
clc
insb
ds
add
lds
mov
out
dec
jnp
mov
mov
movsb
cmpsl
cwtl
loop
movsl
or
jmp
mov
cmp
cltd
shlb
push
push
push
enter
incl
mov
sbb
add
cmpb
sbb
mov
aaa
imul
repnz
fstp
sahf
or
cs
mov
ret
mov
pop
gs
movsl
sub
stc
scas
js
cmp
sbbb
sbb
ss
adc
pusha
push
pushf
rcrb
xchg
js
js
scas
fisttpll
out
stos
push
adc
push
pop
and
push
inc
scas
aam
test
jne
mov
add
fdivrp
inc
push
fldl
xor
das
jnp
push
stos
sbb
ud1
aas
and
sbb
pop
xchg
mov
mov
fcmovnu
fisttpll
add
xchg
pop
pop
outsb
mov
ljmp
mov
movsl
mov
gs
test
outsl
push
sarb
imul
popa
rol
mov
enter
cmp
popa
cs
pop
mull
push
mov
adc
and
aaa
mov
leave
repz
push
mov
and
rorl
loop
cs
data16
mov
cwtl
adc
jl
mov
mov
test
cmp
add
push
in
loop
push
scas
sbb
sbb
stos
nop
sub
jne
pushf
and
call
sub
iret
mov
out
loopne
aaa
ss
jb
dec
sub
xlat
mov
ficoml
lea
cs
lea
mov
sbb
fistps
add
cmp
adc
cli
adc
sbb
mov
mov
or
jne
aas
add
xchg
lret
jne
stos
out
fisubrs
mov
and
xchg
loopne
push
xchg
inc
cmp
push
inc
jbe
stos
cld
enter
ds
out
int3
adc
sbb
fnstsw
push
icebp
pop
pop
jl
lcall
xchg
fwait
adc
aaa
inc
bound
sbb
daa
ja
aad
jmp
and
sahf
mov
pop
or
pop
mov
mov
in
cmc
movsl
pop
lock
scas
mov
xor
mov
aad
dec
mov
sub
fstl
cmp
fildl
sbb
sbb
jp
or
lods
mov
pop
adc
sti
pushw
std
sarb
jecxz
movsb
rcll
adc
jecxz,pn
sbb
inc
xor
das
add
hlt
inc
xor
adc
sub
adc
xlat
mov
xchg
mov
push
jecxz
cmpsb
jnp
fwait
ret
cmp
inc
sub
inc
jbe
pop
loope
sbb
mov
pop
arpl
mov
mov
mov
xchg
adc
sarl
mov
rclb
shrb
mov
das
es
xchg
mov
cmp
sbb
stos
mov
dec
cmp
outsb
sub
xlat
and
enter
jge
cld
inc
mov
dec
mov
fiadds
xlat
lock
shr
outsb
es
fimuls
pop
inc
mov
and
mov
pop
push
and
inc
mov
mov
lahf
es
popa
add
sti
cmp
dec
dec
pop
push
call
cmp
bound
orb
xor
mov
jmp
dec
inc
idivb
dec
sub
ds
mov
dec
jp
aas
push
sbb
lret
xlat
in
adc
fisubs
cmp
cmp
fdivl
cmc
push
repnz
loope
andb
mov
push
sub
stos
shl
mov
xchg
or
ret
xchg
loop
imul
nop
ficoms
xor
fwait
xor
outsb
cmp
cmp
xchg
test
mov
and
xchg
arpl
out
push
jne
mov
fldcw
xor
fwait
stos
push
cmc
stc
icebp
or
gs
cwtl
mov
mov
push
repnz
xchg
inc
push
nop
xor
mov
js
xchg
ret
lods
jne
lds
mov
popf
mov
cmp
jle
shll
inc
scas
lds
ret
fsubl
loope
sub
mov
inc
and
imul
adc
adc
or
mov
xchg
sbb
lea
jge
and
and
and
jne
adcl
pop
out
cs
inc
dec
sub
push
mov
mov
jg
xchg
dec
mov
push
fbld
cltd
addr16
xchg
jmp
mov
or
and
hlt
jmp
dec
jecxz
jge
adc
das
clc
iret
sbb
mov
fdivrl
bound
pop
pop
dec
inc
leave
popa
sbb
cmp
xor
scas
mov
mov
js
mov
sahf
xor
fistpll
cltd
cmpsb
mov
stc
and
xor
pop
movsl
imul
push
xor
jmp
cmp
iret
ljmp
xor
xchg
andl
fadds
xchg
push
iret
dec
xor
mov
out
add
shr
loop
and
pop
sbbl
enter
jmp
rorl
in
xchg
xchg
loope
push
aad
sub
or
xchg
dec
dec
ljmp
xor
adc
rcll
pop
sub
adc
push
sub
jge
cs
in
push
inc
push
push
scas
hlt
push
jg
mov
mov
adc
add
pop
mov
loop
mov
pusha
aaa
cltd
jnp
fildl
push
je
adcl
adc
addr16
inc
rcrl
test
sub
gs
mov
mov
push
pop
out
mov
mov
jecxz
enter
add
add
inc
ss
aam
div
mov
mov
mov
mov
mov
aas
negl
push
fstpt
jecxz
jmp
loop
cmp
inc
movsb
ret
jge
sub
xor
dec
add
dec
xchg
add
or
stc
out
mov
testb
inc
mov
rolb
cmc
iret
lahf
and
push
ss
adc
pop
cmpsl
push
push
cmp
cmpsl
jo
lcall
gs
xor
popa
adc
popl
push
xchg
mov
int3
sub
mov
hlt
sbbb
or
hlt
inc
inc
lahf
clc
loope
pop
xor
sbb
mov
test
into
xorb
mov
jbe
in
gs
roll
and
cmp
xor
sahf
es
sub
popa
dec
call
xchg
ficoml
lret
mov
aas
xor
cmc
add
jo
and
push
or
pop
bound
testb
pop
ja
ret
scas
pop
push
outsl
and
mov
fnstcw
mov
and
push
jnp
xor
jnp
mov
movsb
and
mov
mov
cmp
jmp
sbb
sbb
ja
or
popl
in
adc
scas
cwtl
fcomip
es
mov
pop
fmul
ss
aad
daa
mov
jge
jno
or
cltd
xchg
aad
idivl
add
js
jge
cmp
dec
cmpsl
in
scas
mov
jle
jp
ja
into
insl
pop
dec
cmp
lahf
xor
inc
add
cli
insb
sub
cmpsl
inc
mov
mov
push
cld
adc
ljmp
lret
pop
jne
mov
test
sub
mov
adc
or
cmp
push
insl
aaa
mov
out
fstpl
mov
scas
lret
mov
mov
push
int
xchg
sbb
xor
popa
xchg
pop
xchg
cmovbe
addr16
pop
push
outsb
push
sub
int3
inc
icebp
jnp
adc
mov
sub
shl
mov
jecxz
mov
enter
jle
push
add
dec
inc
repz
sbb
stos
lock
leave
cmp
push
add
movsb
pop
or
push
lcall
lret
leave
lods
jno
movsl
in
jg
adc
cmp
pop
pop
addr16
sub
mov
es
shlb
loop
xor
adc
sbb
jbe
sub
lock
lods
push
jae
mov
repz
mov
ret
cli
inc
dec
mov
jl
cmp
jae
mov
xchg
icebp
adc
jnp
fcomp
inc
cmp
jmp
xchg
push
and
cmp
ds
scas
mov
cmp
loope
sbb
cwtl
test
and
or
and
xor
jl
inc
mov
adc
iret
dec
inc
push
push
push
jb
inc
bswap
outsl
out
dec
pop
pop
jecxz
jno
push
xchg
mov
inc
ret
fisubs
inc
wbinvd
aas
iret
out
xlat
jns
inc
outsl
sub
addb
aas
xchg
adc
out
and
leave
shlb
mov
xor
sbb
mov
mov
mov
jb
push
dec
push
xor
sub
in
inc
inc
adc
add
cmp
cmp
xor
adc
out
jno
addb
sub
adc
lock
or
mov
jle
daa
lods
aam
imul
faddl
sbb
movsl
fcomps
test
xor
lock
test
cwtl
int
lods
lea
dec
sub
std
enter
mov
dec
pop
andb
jne
bound
popa
shll
lcall
xchg
jp
fs
and
mov
adc
fs
push
mov
push
repnz
cmp
popf
cmp
sub
mov
dec
sub
jne
lcall
sbb
jmp
outsb
and
insl
cmp
and
int3
das
mov
cmpl
jns
and
popa
rcll
adcb
sbb
fdivrl
push
aad
je
fildl
stc
and
jecxz
or
pop
dec
imul
out
cli
loop
xorb
and
pop
jne
lret
jne
in
insb
cmp
rcr
sbb
lock
inc
mov
test
sub
popl
ss
xor
jae
pop
dec
icebp
xchg
sti
dec
add
mov
int
fwait
arpl
popa
nop
adc
cmp
cmp
xchg
stos
sub
sahf
insb
mov
loope
iret
shrl
in
add
addr16
jmp
dec
xor
push
jns
mov
in
test
add
ss
loope
xchg
ret
mov
cmpsb
pop
mov
iret
push
adc
icebp
insb
pop
jbe
aaa
sbb
imul
dec
hlt
jecxz
jo
pop
mov
dec
inc
int3
pop
jnp
adc
and
cmpb
outsl
dec
push
aas
jo
sub
lods
int3
push
js
mov
nop
rclb
maxps
aaa
jbe
push
xchg
stos
js
fisubrs
int3
xor
dec
xor
sub
imul
jne
cli
push
fimull
push
or
sbb
movsb
rcrb
icebp
dec
pop
jae
push
inc
jge
outsb
out
jne
out
into
outsl
push
mov
pop
movsb
xor
mov
psubw
jp
mov
adc
loop
mov
gs
jo
xchg
test
push
fisubs
ret
sti
es
arpl
pop
xchg
inc
xorb
into
jnp
aaa
sti
scas
jnp
mov
in
sbb
mov
sbb
clc
in
and
or
mov
or
int3
sub
shll
add
insl
add
les
ret
mov
ss
or
test
dec
lcall
add
stc
push
adc
stos
pop
cli
jns
mov
and
mov
mov
ljmp
fistpll
je
into
fnstsw
jl
out
fucom
stc
jns
mov
insl
push
nop
jmp
out
pop
push
or
cmp
scas
in
data16
js
fmuls
mov
popa
jb
lds
xchg
lahf
das
cwtl
pusha
mov
inc
inc
sbb
ja
inc
stos
inc
sub
jae
aaa
lds
cs
jl
ja
lock
cli
push
push
mov
pop
rol
add
push
ja
mov
mov
mov
push
rcrb
jnp
popa
and
neg
arpl
bound
es
mov
adcl
xlat
sbb
movsl
je
or
adc
mov
addr16
inc
movsl
repz
cmp
xor
push
xor
daa
ja
movsl
jae
subb
sbb
xlat
clc
mov
or
arpl
mov
push
or
movb
jecxz
sub
fsubrs
sub
jge
mov
pop
divl
bound
leave
sub
ret
std
jle,pn
clc
xchg
push
inc
cmpsl
into
subl
xchg
js
mull
nop
push
div
push
sbb
fcmovbe
lcall
sahf
hlt
in
dec
pop
sbb
sbb
aad
pop
inc
je
mov
jbe
jbe
xor
sbb
inc
adc
hlt
cmp
out
call
add
mov
cmp
lods
push
jmp
fcoms
sub
mov
push
pop
leave
int3
add
mov
jns
cmpsl
mov
pop
dec
arpl
out
cmp
jp
movsl
fwait
iret
insb
cli
inc
mov
mov
dec
xor
imul
push
push
stc
or
pop
sub
adc
mov
pop
rcrl
cmp
pop
aam
dec
cmp
outsb
enter
fcmovnb
or
xor
xor
and
mov
fildll
daa
ds
xchg
leave
mov
inc
sbb
sbb
mov
dec
mov
cmc
inc
xor
or
add
xchg
daa
enter
icebp
xchg
fisttpl
sbb
mov
out
mov
push
dec
pop
pop
push
add
mov
aad
xor
sbb
jl
inc
mov
jmp
or
repz
icebp
add
sub
hlt
push
flds
cmp
ret
ljmp
dec
cld
inc
inc
mov
jno
pop
aad
push
or
sub
and
jnp
mov
aad
shll
pop
dec
icebp
sub
mov
mov
or
xchg
xchg
push
shr
clc
jae
dec
fmull
aad
rorl
mov
out
loopne
xlat
in
and
icebp
xchg
lret
cwtl
outsl
rorb
cs
cmp
push
adc
popf
fistpll
and
hlt
cli
add
ja
in
xlat
pop
cmp
lock
lahf
or
bndldx
and
inc
mov
xor
mov
mov
les
pop
sub
rclb
sbb
jbe
push
and
mov
push
push
mov
enter
mov
pop
jg
loopne
or
push
repz
int3
cmp
test
js
fldt
mov
insb
loopne
sbb
jne
sarb
adc
and
mov
pop
jns
sbb
add
cmp
cmp
out
pop
mov
cs
lahf
cmp
aas
pushf
jbe
pop
leave
inc
or
cmp
outsl
push
or
je
mov
xor
out
push
inc
jns
mov
fistpl
cmp
sub
ss
mov
inc
test
mov
adc
mov
pop
cmpsb
aas
inc
or
roll
xchg
jae
out
push
clc
movb
push
add
adc
xchg
or
icebp
sub
xlat
xchg
mov
stos
jbe
push
mov
xor
nopl
pusha
insb
mov
scas
out
cli
add
cmpsb
mov
popf
sub
sub
cli
mov
fistpl
jl
adc
jne
imul
jmp
out
jne
aaa
pop
call
fisttpl
fwait
or
cltd
xchg
add
sbb
mov
data16
mov
pop
movsb
push
fcmovne
sti
adc
lcall
pop
and
int3
mov
inc
shl
xorb
outsl
fcomps
pop
xor
push
es
inc
or
adc
scas
jns
test
dec
mov
jl
fstp
fdivr
lret
or
jne
aad
cmp
imul
test
enter
and
dec
cmpsl
inc
xlat
sbb
andl
inc
mov
push
mov
xor
pop
cmp
loop
mov
bound
sbb
sub
mov
add
sbb
ror
je
xor
push
xor
arpl
orl
cmp
sbbb
pop
add
pop
ja
repz
push
push
mov
scas
bound
lea
in
sbb
sub
jno
pop
pop
mov
or
out
xor
pop
cmp
mov
mov
mov
dec
js
out
push
and
mov
bound
in
lret
hlt
and
fsub
or
movsl
and
push
aaa
pop
adc
cltd
lods
sbb
pusha
push
mov
mov
outsb
mov
push
lcall
fistl
push
jbe
fiadds
and
sub
pop
pop
push
ljmp
pusha
aad
jg
and
mov
add
rcll
xchg
adc
jbe
out
cmp
lcall
lret
mov
xchg
cmpsl
pop
stos
lock
or
mov
push
js
push
lods
cmp
jns
fnstcw
and
outsl
dec
fcoms
add
push
in
sub
jle
les
sub
add
push
inc
mov
lds
pop
scas
add
adc
cmp
popa
imulb
mov
lahf
sub
fwait
xor
in
popf
repnz
pusha
leave
push
int3
and
push
jae
adcb
mov
push
das
das
dec
rclb
inc
filds
rol
shll
sub
ret
dec
mov
insl
sub
iret
push
mov
jns
jbe
jp
int
cmp
add
xchg
mull
push
mov
sar
xor
cltd
jae
in
lcall
adc
mov
scas
clc
and
sbb
xchg
leave
dec
jmp
iret
adc
add
xor
jo
subl
xor
mov
sub
fistl
sub
cwtl
pusha
sbb
push
jns
mov
and
pop
pop
mov
cmp
call
xchg
dec
cmc
mov
sbb
mov
push
xchg
pop
ljmp
scas
lods
fs
out
ljmp
xchg
dec
test
or
scas
or
je
cmc
pop
lods
add
lds
sahf
aam
sub
pop
jmp
xchg
jno
rorb
call
fstps
add
push
push
pop
sbb
nop
lahf
jle
sub
sbb
push
int
cmpsb
jns
inc
xchg
das
test
in
imul
scas
mov
es
loopne
mov
mov
testl
inc
mov
mov
aas
mov
mov
stc
pop
arpl
cli
xor
push
jmp
lods
xchg
std
sub
ljmp
shll
loope
fisubl
xchg
jne
loopne
dec
cmpsb
cmp
and
or
adc
mov
dec
xor
mov
mov
or
movsl
sub
call
xchg
pop
lods
mov
ljmp
cmpsb
lret
pop
mov
mov
push
stos
pop
mov
mov
in
pop
xchg
xor
repnz
test
add
out
pop
fneni(8087
pusha
movsb
push
or
or
add
and
decl
adc
cmpsb
dec
jecxz
sub
jle
jne
lea
pop
aad
mov
andl
into
dec
push
pop
imul
or
cmpsl
imul
jmp
int3
aam
in
xchg
adc
testb
mov
mov
xchg
sub
mov
or
sbb
in
adc
lds
sbb
test
test
add
push
jne
lret
push
sbb
xchg
pop
js
push
sbb
and
cmp
jb
jge
mov
inc
fcoms
push
lcall
ret
fcompl
test
gs
push
push
mov
jmp
cli
pop
inc
bound
aad
stos
loope
jp
out
aad
pop
cmp
mov
add
popf
mov
js
popf
lcall
add
push
add
fidivl
and
cmp
pushl
lret
cmpl
push
stc
or
inc
mov
in
mov
rep
cs
loope
fsubrp
or
ret
hlt
pop
inc
fucomp
test
neg
xchg
iret
xchg
mov
popa
xchg
aam
fcoml
cwtl
jg,pt
pop
xor
cli
pop
jecxz
push
pop
adc
aad
insb
dec
outsb
mov
pop
fistps
add
fbstp
dec
mov
or
int
jl
js
loope
and
push
xchg
lods
das
mov
data16
into
jl
nop
stos
push
add
scas
or
xor
xor
es
sub
mov
into
stos
pop
xchg
xchg
cmp
cmp
hlt
sbb
or
adc
aam
or
add
mov
stos
movsl
and
mov
adc
popf
xor
jo
lock
dec
in
ss
add
and
push
inc
shll
out
test
pop
and
cmp
sub
test
xchg
jp,pt
dec
ljmp
test
dec
ja
or
push
mov
xchg
inc
fsubrs
mov
push
and
in
jbe
xchg
pop
gs
jns
pop
int3
cmpsl
icebp
mov
mov
loopne
inc
movsb
inc
jo
xor
into
pop
sahf
adc
mov
lods
dec
mov
push
cs
in
in
xchg
aaa
int
ljmp
jno
sub
fnsave
jnp
js
rcll
mov
nop
and
and
and
jnp
xchg
push
call
or
test
add
xchg
fstpl
shlb
mov
xchg
sub
mov
cmpsb
mov
jbe
xchg
push
pop
negl
sub
mov
test
xchg
sti
dec
aam
xchg
fisttpll
mov
mov
sub
mov
in
add
mov
int
ret
arpl
cmp
adc
xchg
and
cmp
loop,pn
mov
pop
andb
outsl
add
mov
sub
inc
push
aas
roll
mov
xlat
dec
mov
fisubrs
je
sub
inc
test
cli
pop
ret
inc
mov
add
loope
mov
clc
rorb
mov
les
cmpsl
inc
xchg
mov
dec
jbe
movsl
inc
mov
xlat
aad
inc
rclb
loope
stos
sub
in
fnstenv
in
gs
scas
or
xchg
aas
adc
push
mov
scas
cmpsb
add
and
popa
aaa
jecxz
cmp
fs
imull
dec
mov
leave
sbb
testl
nop
jae
out
inc
sti
pusha
jl
inc
aas
dec
stc
pop
xorb
icebp
lret
add
sbb
jnp
fstpt
bound
mov
push
xlat
int3
xchg
fdivs
es
pop
ljmp
add
adcb
jno
mov
adc
mov
add
in
repnz
mov
rclb
or
stos
popf
add
ret
mov
sub
mov
jmp
adc
std
mov
lods
lock
jl
cwtl
or
imul
sub
mov
sbb
cld
sub
lcall
or
aas
fwait
dec
ret
pushf
movsl
adc
aad
cmpb
outsb
add
sarl
pop
lods
idiv
or
push
cmp
push
loope
nop
sbb
iret
stc
jmp
sbb
mov
ret
sbb
inc
push
push
std
jmp
push
inc
adc
jbe
ss
pushf
dec
push
jns
cmp
mov
cmp
and
jnp
sub
das
jb
popf
or
sbb
or
jbe
sub
pop
mov
fwait
jne
mov
fidivl
sbb
loopne
push
sahf
or
mov
mov
adc
aam
adc
lcall
sbb
inc
mov
not
cli
jecxz
jae
pop
or
outsl
xorb
test
pop
mov
or
add
mov
icebp
fmuls
ret
rorb
or
imul
and
mov
std
icebp
sarb
lahf
mov
imul
test
and
mov
cs
pop
push
ja
cwtl
or
in
jno
ret
mov
lock
loope
push
jmp
or
xor
mov
scas
or
mov
and
push
lods
lret
lahf
jle
or
and
cmp
push
lock
js
mov
fsubl
push
mov
sahf
mov
mov
dec
xchg
shrb
cmp
inc
add
test
fninit
pop
adc
sbb
push
aas
ficoms
mov
adc
gs
or
imul
imul
notb
mov
outsb
sub
andl
mov
shlb
pop
stc
push
cwtl
sub
sahf
call
push
xlat
daa
stc
jp
jmp
mov
jl
icebp
cld
adc
negl
int3
push
cmp
add
mov
cld
out
pop
cltd
loopne
repnz
int
sub
pop
xor
scas
decl
inc
xchg
lret
or
in
lret
xor
mov
mov
jno
loope
rclb
sub
in
cmp
push
aad
mov
jg
inc
mov
cltd
pop
in
popf
cmp
xorb
daa
je
cmpsl
int
scas
cli
xchg
cmp
dec
jp
inc
popf
bound
aam
fiaddl
jno
push
orl
or
adc
insl
cli
fimuls
cmp
or
jb
int
pop
scas
cmp
inc
mov
movb
adc
push
pop
testl
adc
jb
mov
ja
xchg
outsb
lahf
mov
ss
mov
and
sub
sbb
je
loopne
sub
test
push
mov
add
bound
mov
and
and
mov
fadd
sub
fadds
mov
dec
and
or
add
add
jle
push
push
dec
insl
pushf
jbe
or
or
add
or
mov
inc
imul
test
dec
sbbb
arpl
les
repnz
push
push
mov
and
call
insb
xchg
lret
lret
outsb
iret
inc
or
cmc
nop
sbb
cs
fidivrl
imul
clc
mov
mov
pop
sbb
dec
sti
sub
jmp
jno
sub
pushf
xchg
movsb
push
jbe
sub
and
mov
cmpl
ret
loop
xlat
cmpb
orl
jns
sahf
mov
rep
int3
fadds
add
jne
inc
ss
test
insl
lret
adc
xorl
fcmovnu
enter
pop
lret
sbb
fdivp
adc
jno
sarl
push
lahf
jecxz
inc
xor
out
cs
pop
inc
lea
xor
gs
fildl
sub
shrl
jns
adc
and
xor
mov
mov
mov
mov
xchg
shr
lds
cli
fcoml
sub
roll
std
roll
bswap
inc
cwtl
popa
in
jmp
andb
adc
and
lcall
fmul
push
icebp
sbb
dec
push
mov
cli
mov
and
sub
sbb
pushf
ja
out
in
and
pusha
fcmovu
insl
inc
push
mov
loope
mov
bound
lods
mov
fiadds
enter
push
lods
call
les
and
lods
sub
pop
mov
jbe
pop
aad
lcall
int3
mov
inc
push
cli
icebp
lahf
int3
xchg
mov
idivl
xchg
mov
lods
es
ficomps
sbb
xor
lahf
gs
adc
nop
sub
add
inc
mov
addb
dec
push
je
jnp
int
sbb
xchg
jns
xor
faddl
xchg
enter
push
dec
adc
enter
lods
xchg
ret
repnz
or
jg
lcall
arpl
sub
xchg
lea
push
pop
incl
cmp
pop
lret
std
cmc
inc
sub
mov
cmp
incb
sbb
dec
popa
cs
inc
jae
sbb
scas
leave
xchg
mov
movsl
mov
cmpsl
repz
xchg
imul
cld
test
test
cli
add
cmc
push
int3
jl
outsb
leave
pop
mov
jnp
sub
add
adcb
faddl
mov
addb
ret
mov
mov
jge
loope
out
cmpsb
aam
dec
test
and
cli
repz
aam
dec
gs
mov
xchg
jnp
insl
cltd
sub
or
lds
jne
lds
adc
jae
jno
mov
cli
cmp
fstp
stc
aaa
sbb
xor
lods
sbb
imul
adc
test
cmp
sub
inc
cmpsl
fcompl
ljmp
dec
hlt
es
in
jne
push
fdiv
and
call
mov
rorl
imul
inc
rclb
call
pop
jecxz
lahf
inc
out
movsb
pop
dec
stc
mov
push
inc
dec
test
arpl
mov
inc
mov
aaa
cmp
cmpsb
fcmove
mov
sub
loope
in
sub
lods
dec
jnp
into
dec
jg
and
jecxz
mov
adc
testb
push
mov
push
pushf
inc
test
push
das
jbe
pushf
push
lret
lock
aaa
inc
adc
dec
aad
in
jmp
push
dec
pushf
mov
mov
sti
cmp
sbb
inc
jbe
into
adc
loopne
push
xchg
rorb
repz
xchg
mov
mov
xor
inc
into
pop
lahf
mov
je
movsl
pop
or
mov
pusha
adc
adcl
int3
mov
add
fildll
mov
add
insl
insb
or
outsb
loope
mov
out
xchg
ret
loope
adc
sub
push
test
bound
jb
orb
lock
cmp
sub
insb
pop
negl
xchg
jecxz
cltd
xchg
adc
test
sbbl
fmuls
ja
out
iret
or
pop
inc
and
ss
sahf
cmc
test
xchg
incb
sbb
iret
xor
jnp
cmp
sub
pop
xchg
xor
cli
aas
mov
les
rcrb
sahf
loopne
aad
repz
mov
pop
xor
sbb
lea
cmp
data16
pop
arpl
jmp
cmp
cmp
call
inc
adc
enter
dec
xchg
lret
or
lods
hlt
cmp
jle
mov
mov
nop
aas
gs
push
jnp
lret
repnz
xor
mov
ja
pusha
fs
sub
inc
xor
sbb
mov
test
xchg
cmp
xor
mov
pmullw
addl
mov
sti
repz
cmp
jmp
lods
pop
jecxz
mov
sub
sbb
inc
xor
enter
pop
or
mov
xlat
adc
mov
outsb
loop
add
xchg
lret
into
push
es
outsb
sbb
loope
xlat
rcr
lret
xor
push
mov
stos
test
xchg
xor
orb
lret
shrl
sub
add
jle
sbb
ret
into
fbld
cmp
rorb
push
ret
cmp
movsb
test
repnz
loop
sahf
sub
adcl
cltd
inc
fldcw
push
cmpsb
xchg
ss
mov
sub
loope
and
xor
test
movsb
cmp
mov
xor
test
pop
addl
repnz
out
mov
ja
pop
add
adc
movsl
push
lcall
popa
incl
and
popf
or
fidivs
pop
jb
roll
sbb
call
xchg
add
inc
push
adc
ficoml
sub
inc
push
or
mov
mov
adc
pop
lcall
mov
xor
cmp
inc
inc
xchg
scas
test
mov
in
dec
std
lock
add
pop
int
mov
xlat
addr16
loop
and
or
daa
movsb
imull
pop
test
xchg
in
jae
orb
xchg
sub
push
lahf
sub
pop
cwtl
icebp
mov
mov
xor
xchg
mov
xor
xor
push
adc
and
out
inc
mov
nop
insl
ds
and
cmp
sub
lods
adc
sbb
inc
mov
movsb
shl
ret
pop
push
fwait
push
loop
jnp
scas
loope
dec
out
mov
mov
fxch
dec
push
mov
sub
jb
cld
cs
or
mov
aad
xor
pop
in
mov
dec
ret
outsb
or
xor
shll
mov
dec
das
xor
iret
dec
cltd
push
cmp
inc
sub
inc
adc
inc
out
jle
cmp
and
inc
inc
cwtl
hlt
movsb
push
jnp
push
add
or
xchg
inc
std
loop
arpl
shlb
cld
scas
movsb
jae
push
and
lods
mov
cmpsb
and
lret
dec
sbb
jle
or
in
push
imul
stos
es
ret
shlb
sbb
stos
in
ret
dec
ljmp
lods
xchg
fildl
shl
out
adc
inc
push
push
jg
test
jl
push
enter
icebp
add
sub
sbb
mov
sub
dec
sbb
in
add
push
pop
and
clc
mov
push
jno
xchg
div
jne
xor
pusha
je
lods
aad
rclb
addr16
dec
mov
lret
xchg
jmp
sub
mov
nop
test
jns
pop
push
push
lcall
outsb
push
add
xchg
int
jb
sub
dec
bound
ja
xchg
clc
loopne
rcl
jns
mov
cmp
pop
jge
add
aaa
in
push
scas
push
arpl
fincstp
jne
or
xor
ret
je
cmp
mov
cmp
jns
sbb
in
xlat
adc
xor
in
gs
lret
or
sbb
lcall
cmp
in
mov
mul
push
cmp
aad
pop
stos
adc
js
aas
xor
insb
leave
outsb
jl
mov
aaa
cld
repnz
xchg
or
cmp
out
and
sahf
cs
enter
stos
jl
clc
or
adc
xor
or
aam
push
fsts
ret
nop
pop
lds
jns
and
test
jbe
popa
adc
dec
adc
leave
dec
or
dec
or
fdivs
addr16
in
int3
push
popf
lcall
out
aad
cmp
push
xlat
xor
ret
imul
fildl
icebp
cld
inc
popa
sub
addr16
dec
imul
sub
push
daa
cmp
cmp
je,pt
test
jg
pusha
pop
nop
xlat
scas
sbb
icebp
adc
nop
cmc
stos
mov
scas
sbb
pop
scas
adc
xor
inc
xchg
push
js
xor
iret
out
ret
mov
pop
jecxz
adc
push
sbb
mov
test
aam
fistpl
pop
xchg
inc
iret
dec
js
sbb
dec
mov
fisttpll
fwait
pop
mov
orb
inc
out
mov
shrb
push
push
cmp
jp
sbb
insb
rolb
fldenv
add
push
std
and
fcmovnb
mov
loopne
pop
stos
ret
fisubrs
imul
mov
pop
xchg
and
xchg
nop
aas
ljmp
sub
shl
and
push
sub
ret
push
loope
popa
outsb
lock
jno
jno
fs
ret
xchg
cwtl
gs
lea
cli
mov
sub
jmp
and
mov
pop
push
jmp
mov
inc
jmp
lods
mov
jp
inc
and
jecxz
shll
adc
push
popa
outsb
repnz
inc
lcall
or
add
int3
addr16
jnp
aaa
push
mov
pop
dec
pusha
jne
rcl
add
das
push
and
lret
sbb
add
aad
push
es
hlt
fdivl
adc
ss
inc
cmp
adc
add
jmp
out
test
xchg
mov
jnp
cmpsl
mov
xchg
mov
sub
mov
mov
pop
jno
into
add
leave
stos
xor
loop
bound
ret
test
push
stos
testl
scas
jge
sbb
inc
shll
sbb
mov
adc
arpl
gs
push
and
inc
sub
dec
aam
mov
push
stos
jl
lea
enter
xchg
adc
mov
or
sub
add
jnp
lods
loop
ret
bound
push
fcomp
pushf
frstor
push
or
nop
mov
stc
sbb
xchg
xchg
mov
mov
add
call
jae
stos
pop
xor
mov
add
mov
inc
mov
xchg
or
rorl
sub
in
push
pop
add
ret
dec
lcall
fs
inc
bound
xor
iret
xor
and
sub
pop
xchg
imul
or
rcll
pusha
mov
mov
scas
jecxz
push
and
cmp
std
or
lock
daa
add
inc
lcall
aaa
jmp
fadds
into
cli
sbb
test
das
xor
push
mov
pop
cmp
add
jo
sub
test
dec
cmp
push
leave
dec
sarl
adc
rcll
rcr
sbb
push
pop
mov
fs
cmpsb
jl
aaa
enter
dec
ss
hlt
fnsave
in
sub
sbb
fwait
mov
cmpsb
mov
cmp
call
ss
dec
pushf
aas
mov
jne
dec
loop
js
fisubl
push
xchg
in
ss
in
pop
cs
out
scas
sbb
nop
ljmp
jnp
xor
add
push
sub
push
mov
jnp
out
adc
lock
nop
fcmovnb
das
jae
shlb
int
and
mov
pop
lods
sub
ds
xor
fldenv
cmp
add
in
dec
hlt
adc
push
scas
pop
lret
add
ss
xor
push
xor
push
sub
xchg
xchg
push
sbb
dec
lret
in
pop
mov
in
aas
pop
or
fnstsw
inc
and
inc
test
pop
xchg
xor
cmp
push
push
mov
mov
and
lahf
test
imul
inc
mov
or
xchg
cmp
dec
sub
mov
push
mov
scas
pop
xchg
cwtl
fwait
nop
or
mov
sarb
push
ljmp
ja
mov
rclb
loopne
jle
dec
nop
cld
adc
mov
xor
push
pop
sahf
pusha
add
mov
pop
pop
jl
jnp
mov
inc
int
xor
hlt
jmp
add
sbb
jbe
mov
std
lret
mov
dec
dec
jmp
js,pn
lahf
lds
jne
add
movsb
sti
cmp
out
inc
aaa
mov
sahf
fimuls
sbb
pop
mov
mov
ds
repz
jbe
ficomps
sbb
stos
cmp
in
pop
pushf
mov
or
mov
jl
cmp
inc
jle
jle
mov
sbb
sbbl
mov
mov
les
pop
lock
pop
jecxz
xor
aad
data16
mov
cld
xchg
lahf
sti
push
lahf
xlat
xchg
sti
dec
lahf
shrb
gs
pop
fisubrl
xchg
js
les
xchg
pop
aad
mov
push
aaa
push
or
or
imul
pop
filds
mov
pop
les
clc
cltd
loop
mov
xor
rol
movsl
popa
repnz
fldl
push
push
lret
roll
dec
add
or
mov
pop
jmp
es
lret
adc
cmp
mov
sub
aaa
rcrb
divl
and
adc
hlt
jle
and
fisubs
decb
pop
loope
jg
cmpsl
fidivrs
pop
dec
push
roll
pusha
adc
leave
inc
and
mov
and
xchg
dec
sbb
scas
orl
mov
aad
pop
lret
or
repz
ds
mov
repnz
xchg
mov
mov
mov
movsl
lahf
scas
shll
dec
clc
or
xlat
mov
addr16
sbbb
push
sahf
cli
jge
sbb
jle
fs
cmpsb
sub
repnz
fcoml
icebp
or
nop
loopne
mov
sub
sub
sub
xlat
addb
mov
test
pop
ret
aas
sbb
jns
adc
movsl
fadds
lea
xor
jmp
icebp
sahf
in
je
sub
popf
xor
add
lahf
test
push
stos
std
sti
lea
insb
vmovdqa
jno
and
out
xchg
dec
pop
cs
xor
hlt
scas
add
les
cmp
cmp
cmp
repnz
mov
fcompl
pusha
test
xchg
shrl
inc
sbb
or
sbb
jecxz
jns
fmuls
and
mov
mov
xor
xchg
aaa
sbb
icebp
lods
out
orb
in
xchg
loope
and
sahf
lret
and
call
insb
rclb
inc
adc
jp
out
pop
inc
push
inc
mov
mov
mov
xlat
xchg
lods
test
movsb
mov
mov
out
push
hlt
movsb
arpl
fdivrl
pop
movsl
lcall
loop
pop
shl
mov
rcrl
jo
jl
ret
clc
ljmp
mov
roll
sbb
aaa
rolb
inc
mov
cmp
adc
jecxz
subb
leave
js
mov
pop
jle
mov
cmpsl
mov
daa
dec
movb
pop
out
in
fnsave
jb
idivb
fldl
sub
and
fstps
mov
arpl
mov
xchg
repz
call
imul
std
or
xor
jnp
or
jp
pop
dec
in
adc
jae
and
xor
pop
pop
cwtl
stos
adc
mov
xor
xchg
repnz
cs
cmp
xchg
jae
sahf
cmp
insl
mov
in
xchg
hlt
shlb
jne
add
fsubr
adc
in
push
push
fmull
push
xchg
hlt
jmp
push
add
out
sbb
inc
xchg
jg
data16
call
adc
and
or
inc
pop
mov
mov
xchg
sbb
iret
mov
mov
inc
jbe
push
in
into
sbb
and
and
xchg
push
iret
xchg
mov
scas
mov
test
inc
pop
add
divl
cmp
bound
lock
mov
inc
in
mov
mov
roll
lret
and
and
lea
movsl
js
aas
dec
dec
popf
in
lds
stos
xor
add
xchg
enter
push
inc
setg
add
decb
pop
adc
cmpsl
imul
sti
pop
xchg
jle
pop
pushf
mov
ja
sbb
mov
xchg
icebp
int
push
or
jg
rorl
mov
sahf
sub
loopne
cld
or
into
sbb
stos
inc
push
dec
inc
in
inc
mov
mov
sahf
add
test
cmp
sti
cli
xor
in
mov
push
aas
jae
jns
jns
scas
dec
pop
rcrb
xchg
pop
add
lret
data16
or
setp
aaa
push
negb
xor
and
insl
lods
sbb
jp
daa
mov
jmp
fildl
mov
lahf
push
mov
add
cmp
int
or
cmc
mov
lds
mov
cwtl
and
aas
mov
jb
je
leave
popf
xchg
add
out
xor
push
xchg
pop
cli
in
data16
push
push
xlat
in
out
leave
adc
cs
bound
mov
mov
test
jbe
gs
test
insb
cld
push
jo
out
mov
xchg
lods
stos
jbe
sti
negb
sub
popa
ror
dec
imul
mov
lea
dec
adc
or
push
jmp
movsb
das
jb
xchg
popa
mov
xor
movsl
and
incl
xor
or
dec
cld
sbb
add
int3
test
jge
aaa
or
dec
inc
lahf
cs
mov
rcrb
mov
pop
pop
icebp
adc
xor
icebp
mov
mov
jo
fisubrl
pop
in
test
arpl
xor
rcl
enter
add
mov
or
cmp
add
jl
rcrl
je
mov
dec
mov
out
enter
aam
cli
fistps
movsl
ret
mov
mov
cltd
pop
mov
sub
fcmove
in
cmpsl
push
xchg
adc
mov
push
dec
and
movsl
xchg
mov
out
into
adc
movsl
cli
mov
int3
or
dec
add
imul
addr16
add
jg
push
lret
cld
mov
push
sub
xchg
hlt
jle
mov
sbb
push
pop
push
sub
ret
je
add
mov
cli
fsubr
add
and
pop
xchg
mov
cmp
stc
adc
xor
or
scas
fwait
enter
or
ljmp
lea
xor
pop
xor
cs
push
stos
mov
sub
cmp
mov
cwtl
xor
frstor
push
in
fnsetpm(287
insb
inc
repz
jecxz
stos
rclb
in
jb
in
dec
lods
adc
insl
xchg
ror
add
insb
mull
mov
mov
dec
push
sbb
jecxz
pusha
ret
out
fistps
and
mov
mov
shlb
aad
out
dec
popf
outsl
inc
inc
and
and
adc
cmp
push
and
inc
and
add
xor
mov
mov
adc
inc
les
mov
out
sub
hlt
rcrb
out
push
in
adc
adc
xchg
adc
mov
dec
ret
cwtl
and
jecxz
rcll
and
pop
cs
fidivrs
mov
daa
mov
sub
lcall
mov
push
lcall
mov
arpl
pusha
lcall
inc
dec
roll
out
sub
das
dec
cmp
nop
repz
xchg
adc
cs
movsl
shll
jno
out
icebp
gs
xchg
aad
xchg
mov
sbb
cltd
lcall
mov
mov
pop
dec
sbb
popfw
in
pop
dec
and
pop
mov
neg
fadd
addr16
push
push
mov
adc
fsubrs
mov
fsincos
scas
icebp
rdmsr
lock
or
mov
scas
cmpb
stos
and
xor
inc
outsl
sahf
lds
pop
js
aaa
ret
and
daa
adc
jns
add
xor
jno
lcall
adc
lock
and
scas
pusha
roll
aaa
das
lea
mov
jae
pusha
mov
into
sahf
inc
dec
arpl
int3
mov
add
mov
test
xlat
repz
ss
das
sbb
rorb
push
mov
sub
mov
sahf
push
push
pop
add
cmp
fincstp
fadd
decl
test
add
xor
push
rcrl
add
mul
mov
mov
mov
xlat
cs
jle
test
push
js
mov
jg
repnz
mov
dec
and
in
xor
insl
push
ljmp
mov
inc
adc
nop
cmp
mov
test
pop
inc
sbb
jmp
dec
cmpsb
xchg
adc
push
sbb
pop
in
jecxz
mov
lcall
rorl
popa
neg
push
leave
lret
ljmp
dec
adc
cli
dec
scas
and
jl
jns
jo
imul
jmp
shlb
clc
inc
rcrl
lds
loope
mov
or
push
pop
mov
dec
add
inc
stos
ss
fwait
rcll
mov
mov
add
xchg
pop
xor
test
inc
mov
pop
xchg
stos
inc
jbe
mov
stos
leave
fsubs
xchg
loop
loope
mov
mov
mov
inc
sbb
xor
insl
fisubrs
lods
cli
cmc
dec
mov
mov
mov
or
adc
ret
or
sbb
adc
add
lret
cld
shrb
nop
mov
or
rol
loopne
adc
ja
mov
xor
outsl
lds
jo
jne
pop
mov
bound
ja
shl
in
pop
addr16
ljmp
addr16
ret
call
sbb
cmp
mov
lahf
push
loope
daa
pop
push
mov
dec
xchg
and
loope
scas
mov
pop
sti
lcall
hlt
fwait
pushf
repz
fsubs
out
push
mov
adc
insl
jns
xor
dec
out
in
pop
jp
sub
daa
add
dec
sti
lcall
jnp
cmp
lcall
outsl
enter
or
dec
lret
jns
ss
sub
aas
out
sahf
push
sahf
push
dec
or
cltd
cltd
sbb
sbb
in
movsb
and
mov
sbb
sarl
stos
hlt
sbb
mulb
out
mov
add
xchg
out
scas
xchg
js
mov
jns
jmp
into
sub
cmp
pop
mov
subb
pop
push
je
push
rcl
push
dec
mov
mov
and
add
fadds
int
aam
inc
inc
mov
mov
inc
xor
call
inc
mov
data16
jne
test
add
mov
rcrb
push
or
cmpsl
bsf
jne
loope
fiadds
lret
leave
or
jbe
arpl
gs
sub
inc
jne
adcb
add
ret
sbb
xchg
pop
jle
push
cmp
scas
xor
adc
push
movsb
xchg
jno
push
push
imul
inc
pusha
fidivrs
xchg
push
nop
dec
vpmaxsw
call
sbb
arpl
sub
int3
mul
mov
jnp
mov
pop
jmp
cmpsl
dec
ds
pop
clc
cltd
subl
pop
mov
add
or
mov
loope
jle
repz
mov
hlt
dec
or
push
mov
cltd
imul
xchg
add
into
xchg
push
insb
shlb
xorb
daa
cmp
inc
sub
ss
in
scas
or
aas
shrb
inc
xor
jnp
add
mov
es
int
cs
int3
aam
cld
mov
je
dec
ror
imul
or
in
addb
jecxz
loop
push
or
fisttps
xchg
lret
and
clc
add
stos
movsb
add
insl
jecxz
fs
cmp
cltd
repz
mov
pop
and
mov
xor
jecxz
daa
mov
lods
int3
addr16
and
cmp
pop
mov
push
adc
das
pop
enter
pop
out
inc
scas
iret
mov
out
mov
fldenv
shll
pushf
jp
dec
cmp
loope
popa
jecxz
lds
dec
cld
out
ret
imul
mov
loope
ds
push
mov
sub
jns
xor
adc
fcmovnbe
mov
std
xor
add
stc
es
jle
iret
icebp
into
mov
fs
mov
sbb
std
stos
inc
push
cmp
dec
inc
add
adc
ljmp
mov
sub
xor
loop
xchg
jo
jge
xchg
mov
or
push
jmp
pop
xor
dec
scas
mov
lahf
mov
repz
mov
fisubrs
aaa
fistpll
xor
ret
bound
jg
pop
pop
xchg
cmpsb
jns
cmp
xchg
jb
leave
imulb
add
mov
pop
push
mov
fcmovbe
test
cld
ss
cmpl
ss
inc
adc
inc
dec
mov
cs
add
add
cmp
pop
or
sahf
xor
mov
xchg
add
in
bound
and
jo
mov
imul
aad
add
decl
dec
jo
cmp
pop
cld
loop
mov
mov
imul
call
test
ret
xlat
in
dec
mov
and
lea
addb
add
ljmp
and
hlt
cmp
push
in
test
test
sub
mov
fisubrs
dec
jno
pop
or
out
movsl
jno
scas
cmp
pop
test
push
sub
mov
cmpsl
jp
pop
adc
dec
inc
add
pop
sbb
mov
push
hlt
adc
jg
xor
in
test
fnstcw
pop
std
mov
jbe
mov
std
pop
in
cltd
stc
mov
jmp
in
mov
es
test
lcall
aad
lds
sub
add
ja
mov
mov
rolb
sahf
mov
fimuls
adc
mov
cli
or
data16
dec
xor
mov
xchg
mov
cltd
jl
mov
mov
push
adc
xchg
cmp
xchg
inc
repz
jo
inc
imul
mov
stos
or
xor
mov
adc
sti
push
add
add
adc
mov
dec
insl
pushf
or
jns
adc
or
loope
jp
scas
sbb
paddusb
stos
mov
add
mov
aaa
ss
lcall
mov
add
ficomps
dec
imul
inc
fsubr
cmp
mov
les
pushf
pop
push
je
lock
add
pop
sub
pop
ret
push
insl
xchg
fstpl
add
cmp
andnps
push
push
dec
jae
adc
stos
fsubl
jecxz
clts
pop
test
shlb
lods
mov
idivb
aad
jp
test
cmpl
and
adc
jnp
test
hlt
jb
and
mov
ss
sub
and
jnp
arpl
aas
mov
clc
cmpsb
outsb
dec
or
xchg
popf
xor
adc
insl
int
jnp
mov
bound
xchg
mov
add
ss
loope
bound
sbb
xor
jo
pop
mov
loope
dec
repz
aam
sub
lcall
or
fmuls
out
scas
push
fisubrs
addl
sub
aas
testb
fstl
inc
lcall
pop
xor
and
test
jbe
lret
in
fsubrs
xor
mov
pop
mov
lret
mov
clc
outsl
les
pop
cmp
ffreep
mov
mov
mov
push
add
ficoml
inc
push
mov
imul
xor
sti
and
pop
arpl
addr16
push
cmc
std
arpl
addr16
fsubrs
ds
jae
dec
xorl
push
jg
inc
push
push
xor
push
gs
out
ja
gs
sbb
dec
fdivs
dec
clc
int3
sub
add
sbb
mov
pop
aas
pop
and
mov
pop
inc
mov
enter
inc
and
das
add
jae
shll
pop
mov
and
in
xchg
or
shll
iret
add
lds
lods
dec
pop
cmp
sub
xchg
icebp
or
outsb
and
cmp
push
gs
into
daa
mov
loopne
cs
clc
sar
rcll
pop
arpl
in
sbb
mov
lds
jl
bound
sbb
gs
icebp
loop
adc
adc
subb
jne,pn
cld
addr16
mov
sar
xchg
dec
dec
std
xor
adc
addr16
ljmp
pop
and
lods
xorb
xchg
add
jle
inc
aam
sbb
and
mov
sub
shlb
sub
and
popa
xchg
mov
lret
add
out
mov
in
fwait
add
dec
add
setge
mov
nop
sub
ljmp
sbb
lock
stc
out
mov
in
adc
sub
repnz
dec
int3
mov
and
das
dec
jg
jl
test
adc
popa
je
jo
stc
notl
dec
ret
mov
mov
jmp
aam
or
leave
xchg
pop
call
mov
jb
inc
and
inc
mov
jns
ret
pop
mov
loopne
push
dec
xchg
mov
dec
sbb
andb
and
xchg
jbe
int3
pop
test
mov
push
mov
in
fiadds
and
mov
push
inc
push
ja
stc
shrl
sbb
cmp
adc
stos
ret
inc
add
mov
and
pop
push
sarb
lds
and
sub
xchg
sbb
pop
loope
dec
ds
mov
iret
rcrl
mov
outsb
leave
push
arpl
dec
pusha
bound
stc
or
push
pusha
sub
lock
addr16
popf
in
sbb
jns
imul
add
jbe
rol
mov
inc
xor
call
xchg
mov
sbb
nop
aad
mov
into
lea
stos
mov
inc
fcoms
push
push
sub
sub
dec
sbb
xchg
sbb
push
jno
mov
xchg
pop
cltd
inc
or
dec
in
repz
pop
or
and
not
aam
sbb
adc
inc
cmp
in
testl
jns
sbb
add
pop
mov
xchg
jecxz
push
repnz
out
into
inc
cli
aaa
jnp
cmp
ds
mov
dec
outsb
leave
pop
aaa
je
mov
out
mov
ret
rol
and
mov
out
jle
cmp
sbb
aam
jecxz
ror
push
add
pop
xchg
inc
sbb
push
add
jae
jo
aas
mov
repz
jg
gs
add
popa
aaa
scas
jge
icebp
cmp
cmp
cld
jmp
adc
mov
ffree
inc
dec
push
sbb
out
inc
jns
add
pusha
push
les
xchg
pop
stc
or
imul
jg
sarb
mov
mov
jle
clc
in
mov
shlb
pop
pushf
xchg
shrb
cmp
in
cli
xchg
lcall
ficoms
pop
mov
push
sbb
mov
mov
fcomi
sbb
add
or
and
cwtl
push
gs
mov
out
jne
pop
pop
inc
adc
sysexit
testl
imul
and
jnp
lds
and
pop
adc
mov
jns
xor
das
jb
push
ljmp
les
xor
insb
cwtl
repnz
jns
add
pop
pop
sbb
push
pop
jae
daa
xlat
ja
data16
mov
jns
fs
daa
repnz
jnp
or
push
add
movsl
mov
call
inc
xor
sub
dec
ss
aaa
mov
leave
jge
pop
lds
inc
outsb
dec
dec
stos
sub
loopne
cmp
insb
pop
int
jecxz
mov
jge
jbe
xor
mov
cmpsl
lods
xor
jg
gs
mov
in
xorl
shll
mov
out
pop
mov
mov
fstpl
sub
sub
push
mov
ss
fidivl
inc
mov
push
movsb
imul
dec
lock
aad
push
nop
js
addr16
pop
mov
sarl
out
inc
xor
dec
rorl
jl
dec
sbb
jb
mov
xchg
cmp
icebp
stc
outsl
push
clc
adc
xchg
xchg
dec
ja
xchg
pushf
aaa
nop
and
push
xor
fistl
adcl
cmp
inc
inc
in
popa
icebp
xchg
loope
mov
cltd
pop
xor
jnp
adc
xchg
ret
ficoml
popa
xchg
test
and
jno
cwtl
and
mov
decl
xchg
and
jle
sbb
add
shrl
adc
pop
xor
jb
stc
sbb
mov
fchs
sub
int
insb
outsb
inc
or
es
add
mov
cmp
testb
mov
sbb
xchg
fcomp
xor
vpcmpeqb
dec
repz
in
stos
cmp
push
push
popa
dec
xor
sub
rolb
aas
mov
xor
xchg
pop
lock
fsubs
add
es
sti
mov
adc
dec
mov
mov
cltd
jp
adc
or
mov
lods
xchg
aam
in
pop
imul
inc
add
fistpl
outsb
out
fnsave
mov
dec
xchg
insb
add
inc
inc
add
addr16
push
insl
out
cmp
add
jnp
push
add
cmp
clc
cmc
pusha
das
fwait
or
rolb
pop
lds
shlb
repnz
pop
das
loop
dec
pop
int
cmp
mov
mov
adc
test
push
fildll
mov
es
or
aad
sub
subb
js
imul
inc
xlat
andl
xor
xor
xor
in
jnp
jge
nop
mov
pop
das
mov
out
cli
xor
mov
xchg
or
mov
jge
mov
mov
mov
jnp
xor
cmp
clc
and
push
ret
sbb
dec
mov
adc
into
adc
or
pushf
xor
cmpsb
mov
inc
or
das
or
hlt
jns
bound
sub
lahf
movb
mov
lret
mov
inc
js
data16
popa
scas
xor
fdivs
pop
jmp
ret
jbe
jge
lcall
mov
mov
jle
push
int3
lcall
int3
repz
gs
jb
cltd
inc
movsl
adc
cs
mov
pop
mov
mov
xor
insl
dec
fadds
addr16
movsl
fnstenv
jae
push
cmp
addb
pop
xor
add
dec
lods
in
cltd
mov
push
mov
mov
xlat
cmp
mov
les
mov
cmp
inc
leave
call
gs
sbb
push
cwtl
icebp
push
or
movl
mov
jno
ss
andl
push
adc
shr
jb
mov
leave
std
negb
insl
jo
insb
lods
insb
pop
pop
lret
ss
xchg
out
icebp
xor
andb
jns
sahf
test
call
xlat
aaa
sub
shl
inc
fs
mov
enter
xchg
push
popf
push
pop
repz
popf
mov
cmc
rol
xchg
xchg
arpl
cs
push
mov
mov
sub
subb
out
aad
mov
out
fsts
popa
mov
cs
pop
sub
aad
mov
sub
fcompl
xchg
dec
jo
loopne
xchg
scas
pop
lods
inc
mov
insb
add
scas
fs
sub
outsl
jp
mov
cwtl
fs
dec
pop
lret
mov
xchg
pop
mov
shl
xchg
sub
xor
cmp
pop
xlat
imulb
inc
fdivrl
mov
push
jl
dec
or
xchg
ja
jb
push
cmp
das
jnp
jb
fbstp
push
push
xlat
mov
mov
push
jl
lea
cli
push
test
loopne
sub
test
sahf
push
loope
adc
in
test
mov
and
sbb
loop
dec
lea
xchg
jno
mov
outsl
add
mov
inc
xchg
test
addl
addr16
sub
sub
add
and
cmp
xchg
add
add
sub
mov
je
jmp
fimull
xor
pop
rorb
rorb
xlat
js
xchg
lcall
dec
scas
jno
xchg
cmp
mov
xor
mov
inc
je
lret
stos
and
xchg
fstpt
les
repz
xchg
movsb
pop
push
rcll
adc
adc
mov
mov
fcmovnu
dec
xor
into
mov
mov
xlat
inc
das
jns
xchg
gs
pminsw
lea
imul
arpl
xor
icebp
sbb
push
scas
lcall
adc
push
push
pop
push
xchg
xchg
sub
xchg
xlat
mov
xchg
xchg
rcrl
mov
bound
mov
pop
xorl
push
mov
addr16
push
adc
sbbl
sti
sub
les
push
jae
xor
add
xchg
mov
cmpsb
jbe
pusha
ud1
pusha
fdiv
stos
js
loop
daa
repz
pop
inc
or
and
dec
jne
repnz
out
xchg
jp
daa
jne
test
sbb
mov
sub
ret
mov
adc
adc
push
cmp
dec
das
mov
mov
sahf
mov
je
adcb
xor
add
cmp
dec
mov
divl
mov
cli
pop
popa
inc
push
xorb
lea
shrl
mov
clc
add
xchg
out
pop
out
rorb
jns
stos
test
addl
cmp
clc
iret
clc
and
stos
sbb
arpl
xchg
pop
mov
das
mov
push
jnp
jmp
cmp
cmp
jmp
dec
mov
fldenv
mov
popa
mov
icebp
jmp
std
inc
in
in
ds
pushf
mov
pop
push
mov
or
jb
bound
loope
mov
dec
and
loopne
jge
dec
xor
pusha
mov
xor
and
push
xlat
dec
and
repnz
repz
loope
mov
add
movsl
hlt
ret
mov
scas
xlat
xor
scas
push
ret
xlat
cmp
call
xchg
mov
popa
es
mov
push
add
out
mov
add
or
sbb
mov
push
ret
test
mov
add
fidivrs
jne
popf
fsubrp
push
popa
inc
push
aaa
jg
je
xchg
in
sbb
repz
repnz
sbb
jge
push
lods
imul
inc
pop
hlt
inc
loope
xchg
inc
sbb
pop
mov
lret
mov
mov
jg
cmp
xlat
mov
push
mov
sub
int
sbb
lock
shrb
ljmp
adc
mov
xor
cli
cmp
jmp
add
lds
xchg
aas
nop
or
jo
pop
mov
dec
in
repz
cmpxchg
inc
adc
mov
mov
std
cmp
xchg
cmpsl
push
mov
mov
bound
cmc
xor
sbb
xlat
xor
in
stos
push
pop
sbb
enter
cmc
cmp
clc
loopne
xchg
jo
push
xor
fs
mov
add
mov
jmp
inc
mov
int
addl
cmp
jne
arpl
cmpsb
inc
test
lahf
mov
pusha
or
jge
ret
pop
aas
mov
shlb
in
nop
lret
fsubrs
xor
push
cmpsb
in
stc
stos
in
inc
cmp
mov
jae
rcll
aaa
aas
push
and
testb
jmp
cld
mov
sbb
push
mov
inc
es
mov
mulps
gs
stc
inc
xchg
ror
lea
test
das
add
mov
lahf
imul
jecxz
pop
adc
pushf
sarl
aas
aaa
sub
inc
pop
sti
mov
lea
push
or
ss
mov
mov
mov
in
cmc
sahf
cmp
ja
rcll
scas
or
or
test
xorl
aaa
cmpsb
in
std
jp
inc
fwait
xchg
sub
add
jecxz
out
jne
or
or
jle
mov
cmc
xchg
cwtl
jo
mov
xor
scas
jbe
std
imul
out
je
jle
aaa
jmp
xor
xor
movsb
mov
xlat
pusha
pop
jbe
shll
leave
insb
adc
inc
adc
js
xor
adc
xor
pop
inc
pushf
jne
mov
mov
sub
jp
xchg
dec
shll
cmpsb
xor
add
adc
jmp
loopne
sbb
pop
scas
sbb
push
xor
xor
sub
mov
xor
insb
cltd
movsl
pusha
cmpb
movsb
hlt
movsb
mov
dec
inc
mov
push
pop
les
lret
pop
cmp
sbb
pusha
mov
xchg
cld
jnp
adc
dec
push
push
loope
sbb
mov
enter
push
adc
popa
lea
mov
xchg
in
pop
leave
xlat
ds
push
lret
loop
imulb
pop
sbb
std
ss
mov
lods
in
aaa
dec
decb
mov
mov
add
jnp
jmp
and
push
cwtl
sbb
dec
test
dec
pop
ss
aaa
jne
rclb
stc
xor
pop
jmp
fdivrl
inc
xor
dec
sub
mov
adc
pop
mov
fwait
inc
push
pop
lahf
repz
mov
in
je
cmp
nop
ds
sbbl
scas
mov
ljmp
or
and
in
negb
icebp
jno
cmp
xchg
cmp
arpl
dec
cmp
lods
lods
sti
mov
mov
xchg
inc
cmc
adc
xor
jb
mov
inc
jp
sbb
add
divb
or
bound
jbe
test
jge
popa
inc
dec
push
gs
jbe
mov
push
add
mov
xor
loopne
jecxz
or
mov
dec
xchg
jle
fnstsw
mov
dec
dec
pop
dec
pop
pop
mov
jmp
fdivrl
dec
scas
and
mov
imul
push
cltd
mov
and
repz
adc
ds
mov
xor
push
mov
mov
mov
repz
jle
cmc
push
rcr
aam
jnp
and
xor
dec
inc
xchg
dec
push
xchg
lret
mov
push
mov
sbb
push
jbe
and
jnp
rorl
add
mov
sbb
and
movb
sahf
stc
xor
repz
stc
lcall
mov
ret
int
cmp
je
pop
js
fnstcw
ljmp
lea
pusha
loop
ss
shlb
sahf
lods
xor
push
or
sub
adc
ja
fdivrl
pop
aas
movsl
popa
pop
push
mov
xchg
fstl
sahf
rolb
std
lahf
out
adc
ljmp
xchg
or
inc
dec
jg
mov
inc
hlt
leave
pop
or
fiadds
mov
arpl
test
mov
sti
dec
or
xchg
sti
imulb
sahf
xchg
repnz
pop
jecxz
jg
push
leave
pop
pop
mov
outsl
lock
push
or
clc
jo
addr16
and
into
mov
stc
or
filds
ret
sbbb
stc
dec
inc
lds
xchg
ss
rol
shlb
xchg
arpl
pop
test
pop
mov
xchg
xchg
insl
lcall
data16
sti
pop
inc
xchg
xchg
add
xchg
jns
data16
and
insl
cmp
stos
mov
addl
fnsave
jg
mov
icebp
aaa
orl
mov
imul
xchg
cmovg
xor
aas
arpl
mov
in
mov
fs
out
lock
and
xor
jnp
mov
dec
sbb
jmp
in
pop
rcll
mov
fisttpl
and
std
stc
fcomp
mov
test
jp
xor
test
fistpll
ja
jmp
mov
cmp
cltd
mov
fadds
lock
int
enter
or
std
inc
add
lret
les
dec
ja
mov
adc
loopne
icebp
pop
pop
dec
push
aam
icebp
setp
mov
outsb
lods
int3
mov
aad
push
rorl
mov
aaa
lods
inc
call
mov
push
push
popf
xchg
aad
pop
xchg
cmp
jns
cmpsl
pop
repnz
and
xchg
xor
jle
add
ds
sti
mov
push
mov
jb
andl
in
push
dec
or
sbb
xor
adc
stos
cmp
dec
scas
into
hlt
mov
cli
xor
push
cmp
and
mov
scas
int
sbb
sahf
inc
insb
xlat
xchg
inc
daa
xchg
cli
push
jbe
std
daa
lea
nop
ss
data16
mov
ds
sbb
pop
scas
insb
fcompl
jb
cmc
adc
cmpb
jae
test
jb
das
xchg
jbe
jae
jmp
dec
or
xchg
ret
icebp
and
or
les
sbb
loopne
pushf
mov
or
xchg
xchg
pop
push
push
sbb
outsl
and
lcall
stc
mov
mov
jecxz
mov
jmp
mov
cmc
sbb
stos
hlt
add
je
orl
xor
test
nop
inc
faddl
imul
std
cld
fiadds
inc
mov
inc
sar
dec
sti
daa
jg
gs
ficompl
lahf
ret
mov
das
dec
mov
gs
adc
aad
int
loopne
cmc
ficomps
inc
jge
sub
aam
mov
sub
arpl
pop
int
or
insb
test
repz
fcmovu
xor
lods
dec
std
inc
fstpt
sub
push
and
jle
mov
fcompl
pusha
dec
enter
les
lock
popa
out
roll
pop
xchg
sti
call
int
das
movl
ds
mov
orl
xor
xor
daa
pop
lcall
dec
fbld
add
fildll
test
or
fbstp
dec
jne
stos
inc
or
in
push
cmpsl
xchg
std
dec
fisubl
dec
lods
mov
xor
aad
sub
stos
movsl
sbb
lods
mov
mov
jnp
call
inc
es
ljmp
aad
push
lahf
xchg
add
jmp
outsb
out
gs
je
sbb
xorl
scas
sub
adc
lods
ffree
fs
or
jno
or
leave
mov
out
xor
push
rolb
mov
sub
mov
lods
mov
jbe
call
sub
add
notb
pop
pop
push
fnstenv
cltd
mov
jo
lods
les
les
lea
pop
cmp
lds
xor
cld
add
dec
out
xlat
ljmp
mov
push
sbb
and
adc
xchg
data16
mov
mov
das
fsubrl
sub
in
mov
shr
fists
sub
sti
push
push
in
pusha
or
bound
fwait
jb
jno
inc
stc
pop
icebp
outsb
ja
js
in
rcrl
add
out
out
out
rcr
jp
pop
scas
pop
cmp
in
imul
dec
xchg
mov
adc
mov
aas
mov
cmp
xchg
sar
shr
cmp
mov
or
out
iret
inc
xchg
cmpsl
xor
jmp
or
imul
js
mov
fs
pop
cmp
push
inc
jmp
pop
inc
jge
jnp
popf
or
mov
and
mov
or
adc
push
in
mov
sahf
add
dec
outsb
cli
xor
ja,pt
mov
out
jb
add
incl
cs
and
xor
or
int
pop
test
inc
and
jl
gs
inc
jl
es
cmp
lds
xchg
in
add
fisubrs
sub
push
arpl
push
aam
dec
cmp
out
aam
arpl
lret
cmp
jecxz
adc
rcl
mov
or
mov
inc
popa
sub
push
jns
xor
ret
repz
vzeroupper
leave
mov
fwait
cmpl
daa
fs
repnz
adc
lret
popa
nop
insl
inc
xlat
call
orl
inc
fisubrl
push
clc
and
loopne
insb
or
in
bound
andb
push
std
mov
xchg
into
gs
icebp
xorb
xor
jp
pop
jbe
dec
jbe
pop
fsubp
out
jp
inc
ja
mov
test
ja
cs
stos
jg
and
mov
sbb
fstps
jbe
mov
adc
xchg
clc
sub
add
dec
push
gs
out
cmpsl
cli
scas
mov
mov
mov
inc
mov
fisubrs
xchg
inc
icebp
daa
push
aad
xor
pop
mov
jne
mov
dec
xlat
lds
ss
mov
sub
frstor
jnp
add
fisubl
jnp
sbb
push
jl
or
add
or
push
gs
pop
cmp
mov
subb
sub
pushf
push
cmp
push
add
jecxz
inc
add
mov
dec
mov
loop
and
pop
add
gs
jp
int
jno
test
js
leave
and
std
adc
fstps
mov
dec
call
fcmovnu
or
mov
orb
jle
ljmp
pop
lods
dec
cli
sub
mov
lock
jno
xchg
lret
loop
lret
out
push
outsl
pop
mov
cli
les
jmp
xor
fincstp
das
ljmp
push
das
sbb
pop
jmp
push
hlt
fwait
cmp
push
push
xor
cld
test
pop
lcall
inc
pusha
pop
and
clc
mov
loope
imul
sbb
cmpsb
call
mov
repnz
and
adc
insb
push
inc
and
jns
imul
test
bound
sbb
mov
and
mov
leave
leave
les
and
adc
lods
outsl
daa
and
shl
dec
fnsave
movsl
mov
xchg
fwait
sbb
jns
xor
xchg
sbb
aaa
cmpsl
sti
jne
icebp
in
push
shl
jb
xor
mov
pop
add
in
cld
std
pop
mov
lcall
push
sub
sbb
add
cmp
das
popf
inc
cmpsb
push
sub
xchg
pop
push
xchg
dec
repz
shr
fs
push
rolb
lock
sub
pop
mov
ds
shll
jbe
pop
mov
lock
xchg
mov
and
push
xchg
inc
jmp
mov
adc
in
aam
sar
xchg
mov
mov
popa
inc
mov
loop
mov
cltd
dec
cld
divb
je
jne
sub
and
xor
outsb
adc
shll
adc
sti
xchg
add
xor
push
es
mov
sbb
xrelease
subb
push
mov
shll
out
fstpl
test
sub
scas
dec
inc
ret
call
lret
daa
movsl
sub
xchg
sbb
out
andl
ljmp
mov
je
insb
mov
xchg
dec
jge
mov
test
xchg
shr
fdivrl
imul
ret
add
xchg
inc
sbb
cmp
sbb
in
mov
sti
loope
fildll
test
fstenv
xchg
dec
lret
mov
js
and
mov
cs
jne
pop
mov
mov
add
ds
out
stos
in
mov
mov
mov
sbb
inc
fists
pop
mov
mov
bound
xor
sbb
cmp
fs
pop
jp
xorl
fs
int
jbe
shl
cmp
pop
fcomip
pop
or
les
jae
stos
inc
imul
into
dec
mov
xor
pushf
xorl
add
lea
and
mov
sarl
test
fstpt
pushl
push
push
arpl
lods
sub
pop
int
sbb
shll
arpl
pop
js
jle
imul
lods
sbb
jb
mov
in
jbe
xchg
mov
mov
iret
inc
jo
sbb
dec
dec
inc
shrl
inc
sbb
mov
push
pop
xchg
mov
mov
inc
inc
sub
add
roll
gs
inc
loop
scas
sti
dec
xor
fnstenv
shrl
fldenv
shl
xchg
xchg
aam
or
fsubs
lcall
inc
push
out
mov
scas
out
sub
dec
dec
lea
mov
shrb
fadd
sub
stos
inc
jno
mov
roll
adc
mov
lcall
mov
and
xchg
add
fimuls
stos
xchg
popa
mov
dec
dec
lods
mov
push
sub
push
mov
or
andl
test
dec
xor
and
pop
push
dec
adc
lock
mov
inc
pop
popf
out
mov
enter
push
or
aaa
test
daa
insl
call
push
pop
les
push
xchg
std
loop
mov
xlat
fwait
stc
inc
and
out
into
rolb
mov
js
add
fsubrp
or
mov
xor
sti
loopne,pt
lret
or
add
mov
aas
mov
pop
jo
jno
popf
push
mov
enter
lea
pop
shl
and
mov
pop
cmp
add
sarb
jne
mov
in
in
loop
das
das
cmp
push
pop
dec
or
nop
insl
jge
iret
inc
xchg
movsl
dec
and
sbb
mov
cmp
je
rorb
jno
sub
add
cwtl
dec
mov
mov
push
pop
xor
pop
sub
hlt
dec
add
loopne
xor
pop
sar
push
js
les
push
fnstsw
lods
pop
mov
dec
mov
scas
mov
sub
into
jp
lods
enter
shll
and
iret
cmp
sbb
outsb
dec
ja
xorb
push
faddp
dec
jb
xor
jbe
mov
or
js
adc
sbb
lds
push
adc
fdivs
ret
pop
jmp
cmp
cmovno
xchg
add
aaa
cs
ficoml
stc
mov
and
inc
call
jl
addr16
jle
divl
hlt
cmp
pusha
movsb
mov
frstor
popa
sbb
repz
mov
je
push
or
test
push
sqrtps
jo
bound
sbb
lds
cltd
xchg
sub
sub
fdivs
pop
cmp
mov
dec
mov
out
pop
xlat
stos
adc
mov
xchg
pushf
cwtl
sarl
ffree
sti
jmp
leave
push
add
adc
cmpsb
jns
add
shlb
fdivp
test
lock
fists
mov
sarl
sarb
ret
subb
sub
cmp
dec
mov
outsb
arpl
loope
or
sti
insl
jo
aad
sbb
les
mov
mov
roll
lock
in
rclb
mov
cwtl
scas
mov
stc
inc
pop
stc
pop
xor
clc
rcrb
and
ret
jmp
mov
inc
add
adc
popa
icebp
jno
or
push
push
pop
leave
ds
js
fcomp
inc
add
je
dec
mov
or
or
xor
push
jo
les
stc
andl
jl
sbb
pop
sub
pushf
mov
fwait
mov
or
in
mov
int3
push
mov
std
jne
adc
inc
movsb
test
push
test
mov
inc
mov
not
jl
aas
popf
xchg
leave
inc
jae
push
icebp
jge
mov
lcall
xchg
fldt
push
and
sub
push
je
notrack
xor
lock
in
cmp
jo
imul
or
add
mov
test
daa
aas
inc
mov
push
shl
mov
imul
ror
dec
and
out
sub
test
mov
pop
inc
jne
fnstenv
lahf
inc
lret
mov
jp
xor
dec
int3
lea
stc
pop
fs
fsincos
add
lods
scas
and
insb
add
faddl
inc
ret
mov
jo
cmp
xchg
jnp
rorl
fs
faddl
dec
or
call
or
mov
mov
pop
out
xchg
mov
push
push
xchg
jno
into
lahf
push
jo
loopne
add
std
pop
test
mov
popf
repz
adc
int
cmp
xor
mov
xor
inc
add
std
inc
mov
sub
cmp
icebp
faddl
int3
and
mov
xchg
out
sbb
clc
pop
outsl
stos
sbb
repz
adc
add
dec
shl
mov
inc
cmpsl
cwtl
mov
fs
lret
pop
fdivr
ffree
lahf
fucomip
or
loopne
sbb
loope
add
fdivl
jmp
add
pushf
lahf
xlat
add
cmp
mov
stos
hlt
sbb
xor
cmpl
xchg
out
jg
push
clc
mov
dec
mov
insl
push
cmp
sub
xchg
dec
ficompl
testl
adc
mov
call
movsl
jle
sub
shr
cmc
movsb
js
out
jae
mov
daa
mov
addr16
cmc
inc
mov
cltd
loop
cwtl
jb
xchg
repnz
pushf
and
fcoms
cmp
and
xchg
cld
lret
addr16
jae
adcb
add
stos
cwtl
dec
push
xchg
push
jge
cmpsb
in
jbe
lods
mov
cs
popf
add
jo
repz
sub
mov
push
cmpsb
inc
xor
pop
es
cli
lahf
in
dec
sbb
cwtl
mov
mov
test
rcrb
stos
fwait
xor
xor
mov
decl
inc
sahf
out
inc
call
enter
pop
jmp
pop
fwait
sub
add
push
cmp
and
stos
adc
ljmp
jmp
cmpsl
movsl
sub
iret
pusha
inc
aad
cmpsl
mov
repz
and
mov
out
jb
or
sbb
and
dec
pusha
or
mov
out
imul
xchg
movsl
push
cmpsb
pop
adc
dec
xor
inc
xchg
pop
sbb
cmpsb
sbb
cmp
outsl
jmp
cltd
jmp
jo
popf
ds
aas
lret
xchg
pop
xor
cmpsb
mov
mov
sbb
sub
cmp
out
cld
aas
jbe
push
xchg
xor
lret
xchg
stc
rorl
sbb
xor
rorb
aam
inc
lret
cmp
in
ds
stos
add
and
jge
mov
dec
mov
jmp
add
mov
sbb
clc
dec
shll
aaa
cmp
xchg
popf
stos
add
mov
push
lods
jne
cltd
fwait
xlat
stos
dec
loope
lea
fiadds
cmc
insl
lret
mov
cwtl
or
push
xor
addl
mov
xchg
dec
loop
mov
fisubs
mov
cltd
fisubs
shrl
jae
imul
add
push
mov
dec
mov
bound
push
add
aaa
pop
decb
mov
sti
adc
int3
stos
jmp
mov
inc
popa
xchg
jmp
cli
push
jbe
cmpsl
push
cmpsl
cmc
jbe
bnd
or
push
dec
lods
cmc
movsl
adc
fwait
mov
sbb
pop
subl
out
ret
pop
into
pop
xchg
fsubs
push
loopne
inc
mov
and
xchg
loope
imul
aam
insl
dec
inc
dec
icebp
lea
sarb
pop
add
das
adc
adc
jg
pop
xor
pop
sub
push
or
lods
imul
add
scas
and
push
clc
es
daa
jecxz
or
mov
dec
bound
aaa
jno
das
data16
lret
fcoml
in
lret
sarb
test
xlat
test
mov
dec
sahf
cmp
add
ss
std
lock
xorb
inc
fstpt
jae
jle
fadd
dec
les
and
mov
aam
push
pusha
push
xlat
popa
inc
or
and
fimuls
and
leave
dec
mov
push
fsubl
cmp
cmp
mov
aas
sub
sahf
push
into
sub
mov
pusha
testl
pop
shlb
mov
fldcw
or
add
lret
sub
jns
adc
loopne
sub
fcoml
inc
mov
mov
addr16
nop
jns
and
or
push
fbstp
or
out
cmp
sbb
fimull
cmp
adcl
in
and
cmpsl
nop
idivb
xor
repz
and
movsb
mov
or
adc
mov
jno
scas
inc
ds
mov
icebp
jp
pop
scas
inc
push
out
mov
or
out
clc
pushf
aaa
jbe
lods
lea
clc
sub
push
xchg
dec
hlt
push
sbb
movsb
cs
pop
push
push
sub
and
lret
push
push
outsb
or
adc
fiadds
xor
sbb
dec
js
dec
mov
adc
add
rclb
xor
lods
aad
cmp
push
inc
cmpsl
lds
push
cmpl
outsb
test
fildll
sub
and
mull
mov
out
xchg
dec
mov
repnz
jns
jno
push
fsubrp
outsb
pop
pop
cmp
loopne
sub
dec
stc
leavew
ljmp
and
in
and
mov
in
dec
addr16
nop
add
add
add
daa
sbb
cmpsl
pand
mov
addr16
fistpl
xor
inc
loop
or
sahf
mov
cmp
jae
and
jl
sarl
cmp
or
and
mov
icebp
test
mov
mov
xchg
sbb
test
cmc
dec
jne
aaa
mov
seta
outsb
dec
xchg
sub
pusha
stos
pop
dec
pop
jge
insl
mov
stos
pop
or
sti
out
cld
mov
imul
out
aas
or
js
mov
je
repnz
mov
inc
add
sbb
mov
adc
push
cmp
ret
mov
cmpsb
imul
mov
addr16
inc
fldt
dec
gs
adc
pusha
inc
push
jo
int
sti
shlb
xchg
jbe
icebp
test
daa
sbb
scas
mov
in
dec
mov
xchg
popa
pop
sub
sub
aam
jl
mov
into
test
cmp
xchg
fildl
cmc
mov
adc
pop
arpl
in
mov
lods
clc
jg
jp
and
retw
push
outsl
mov
jecxz
add
stos
push
push
sahf
neg
rcl
or
lret
fisubrl
ds
outsl
ja
ret
pop
adc
mov
aas
test
push
ficompl
mov
stos
xchg
push
or
aam
ljmp
fwait
dec
adc
in
lret
nop
mov
lock
fildl
pop
hlt
pop
std
add
jecxz
and
data16
lcall
leave
enter
loope
mov
cld
lds
mov
in
adc
inc
jle
aam
or
pop
lret
sub
cmp
lea
mov
mov
cmp
xchg
push
jecxz
psrlq
adc
mov
in
lret
lea
jo
jbe
add
cltd
xor
push
add
repz
in
jbe
movsb
fmuls
sbb
jmp
cmp
outsl
xchg
enter
pop
sbb
cmp
inc
xchg
adc
icebp
les
imul
jg
jne
clc
sbb
sub
inc
or
cmp
add
mov
and
dec
mov
std
add
imul
cwtl
fisttpll
test
pusha
cltd
pop
stos
xor
mov
mov
add
addl
xchg
js
push
push
add
jae
icebp
dec
mov
dec
or
mov
or
enter
loop
push
outsb
insb
in
loope
push
mov
dec
inc
mov
and
sbb
sub
inc
lods
mov
cs
sbb
push
adc
xchg
movsl
xchg
jge
mov
aad
outsl
mov
xchg
arpl
mov
rcll
imulb
push
lods
jnp
cmp
mov
xchg
lock
mov
xor
in
push
push
imul
fiadds
shrb
sahf
push
jb
rcl
in
push
add
cltd
sbb
inc
and
and
xchg
add
mov
mov
clc
xor
dec
mov
xor
mov
scas
adc
mov
adc
fcomps
mov
cmpsb
lds
mov
incb
push
fcoms
or
imul
pop
sbb
add
cmp
addr16
out
in
movsl
aad
and
sbb
loopne
sub
roll
inc
or
in
xor
xchg
dec
popa
xchg
jmp
or
in
and
pop
rorl
loopne
push
dec
ds
daa
adc
jmp
hlt
cmp
stc
fsubs
popa
mov
sub
add
jl
test
ret
jae
stos
call
jns
xor
aam
enter
insl
test
push
mov
or
add
xchg
pop
loopne
add
sbb
popa
mov
push
and
repnz
push
dec
mov
push
mov
lods
repnz
mov
push
movsl
aas
and
sub
aas
cld
outsl
imul
negb
stos
adc
imul
loop
lds
or
dec
sahf
pop
data16
fisubrl
imul
xchg
imul
inc
cmc
jnp
insl
dec
ss
int3
mov
add
mov
imul
mov
or
push
je
jl
lea
das
pop
ret
in
pusha
ret
push
in
mov
jne
stos
icebp
pop
xor
jnp
test
loopne
adc
sbb
sbb
pop
out
sbb
or
scas
pop
or
fisttpll
aaa
insb
pop
lahf
inc
pushf
cld
jp
imul
mov
cmc
outsb
out
dec
int3
iret
pop
mov
jmp
xor
jnp
lods
mov
xchg
decb
push
jp
mov
inc
jle
jle
jp
mov
dec
dec
sub
adc
sti
outsb
test
ret
mov
dec
push
cs
pop
push
inc
cmpsl
insl
aaa
clc
sub
jb
idivl
jmp
inc
mov
adc
adc
cs
ret
cmpsb
aad
lret
addr16
and
loop
xor
scas
pop
adcl
jge
xor
sahf
lcall
fstpl
and
les
or
fsubr
push
push
mov
call
repz
add
lahf
push
mov
sub
pop
repnz
xchg
push
adc
adc
or
loope
mov
cmp
xchg
mov
mov
cmp
negl
jo
and
mov
aas
pop
mov
decl
aad
out
or
xchg
xchg
mov
lods
mov
xchg
cmp
loopne
popa
inc
sbb
xchg
call
jle
adc
push
leave
int3
ss
ret
outsb
and
rcrl
out
test
mov
sub
test
lcall
call
adc
test
push
in
inc
pop
lret
mov
and
or
loope
movl
iret
sahf
sbb
sub
xchg
orb
call
xchg
adc
xchg
jl
iret
mov
leave
or
repnz
xchg
ret
out
push
ret
and
add
fcmove
imul
or
out
ja
shlb
dec
adc
movsb
mov
test
pop
xor
push
jmp
jecxz
inc
adc
xchg
xchg
out
arpl
push
xor
adc
mov
sub
icebp
sti
inc
push
icebp
gs
mov
rorl
xchg
sarl
pop
xchg
push
lar
bsf
mov
lods
cmpsl
test
out
ljmp
jno
into
test
bnd
pop
jno
into
icebp
and
and
and
mov
jg
inc
popa
jnp
push
decb
adc
cs
dec
loope
push
or
int3
xchg
movsl
dec
jae
sbb
jle
icebp
add
push
test
mov
arpl
push
notb
adc
in
test
push
sub
les
fwait
cmpsl
jmp
push
shlb
in
jae
enter
mov
loope
push
fstpl
cmp
sahf
int3
push
xchg
fiadds
aad
inc
xchg
cmpsb
inc
insl
inc
or
movsl
fmul
push
mov
mov
xlat
mov
jb
sarb
mov
lock
pop
push
shlb
repnz
mov
cmpsb
mov
dec
add
mov
dec
add
aas
pop
call
fcompl
mov
add
adc
mov
outsb
and
and
loopne
fsubrl
cmpsl
sbb
fdivs
sub
mov
push
cmp
inc
ficoml
inc
pop
add
push
nop
out
iret
mov
mov
jp
xor
adc
jge
fdiv
sahf
lods
in
mov
subl
push
or
scas
cmp
rorb
mov
xchg
out
mov
ficoms
push
cmp
jns
fnstcw
mov
bound
or
add
mov
fbld
push
xchg
pop
aaa
ss
cltd
movntq
sub
cld
push
xlat
aam
sub
xchg
adc
fs
xlat
mov
xor
push
fsubp
push
pop
adcl
arpl
push
out
shlb
xchg
fwait
loop
aaa
mov
jl
xlat
call
dec
sub
outsl
movsl
aad
sahf
adc
push
ds
cmp
jmp
push
mov
cmp
pusha
mov
sbb
inc
adc
clc
push
dec
jbe
lods
cmp
mov
loopne
inc
jp
xor
jmp
sub
popf
lret
fucom
out
jno
dec
xchg
and
or
jae
sub
in
fcoms
add
sub
pop
sub
pop
pop
mov
inc
pop
in
xchg
push
sbb
movsb
dec
aaa
lods
pop
sbb
stos
inc
std
pop
in
sbb
data16
leave
and
jge
xchg
inc
mov
jmp
movsb
imul
push
dec
dec
enter
int3
cs
sbb
xor
negb
jge
repz
movsl
xor
dec
or
int3
pusha
nop
mov
sub
test
stc
imul
jno
pop
popa
dec
shrl
jle
jmp
int3
test
push
test
aam
enter
in
inc
mov
dec
adc
inc
lcall
insl
mov
outsb
pop
das
xor
jmp
jo
repz
pop
jmp
std
cmp
cmp
xchg
popf
negb
ds
sbb
xlat
and
jle
and
sti
fidivs
lcall
jb
imul
dec
sbb
mov
xchg
sbb
inc
push
xor
adc
rcrb
xchg
xchg
fisubrs
mov
lcall
sub
and
cld
jo
call
insb
adc
out
fistpll
out
mov
inc
js
jle
push
sub
jge
int
push
scas
jnp
sub
iret
pop
enter
les
ss
jnp
pop
into
jge
add
jo
adc
add
xchg
dec
sbb
lret
jae
mov
test
outsl
jne
push
mov
arpl
pop
mov
in
cltd
test
adc
pop
sub
xor
popa
push
dec
inc
add
and
leave
rolb
leave
push
fnsave
mov
scas
push
mov
popf
lahf
mov
mov
loop
cwtl
repnz
sub
cli
xor
add
aad
xor
xchg
lahf
and
dec
sbb
out
cmc
jp
pop
insb
adc
sub
in
stc
push
pushw
ret
stos
das
push
mov
outsl
imul
dec
jae
sbb
inc
es
cmp
mov
push
mov
jl
call
xor
dec
dec
shl
and
jb
pusha
inc
int
adc
and
in
sub
push
push
jbe
les
xor
incb
insb
shll
scas
stos
or
xchg
insl
bound
add
push
popa
mov
sar
icebp
xchg
dec
clc
gs
dec
je
mov
mov
fwait
arpl
stos
ret
cmp
fimuls
jle
dec
add
aaa
dec
mov
mov
mov
aad
push
sbb
push
repz
ljmp
nop
sti
cmp
lods
pop
sahf
jmp
xor
js
cmp
or
cmp
xor
xor
data16
or
adc
mull
sub
movsl
mov
inc
pop
sbb
data16
stos
scas
int3
cmp
dec
hlt
push
in
push
imul
push
mov
int
mov
bound
ljmp
sub
xor
repz
jg
add
mov
jge
jo
iret
and
push
loop
arpl
and
add
pop
out
push
adc
enter
push
or
mov
mov
jecxz
adc
js
and
adc
dec
mov
call
mov
mov
shll
ret
push
push
dec
push
adc
fisubs
or
mov
shrb
test
outsb
xchg
lret
xor
shrl
jb
stos
cltd
mov
test
or
sub
test
dec
ja
cmp
std
add
push
sub
test
in
xchg
jbe
int3
adc
rcrb
xchg
push
cmp
mov
loope
jl
cmp
jl
sbb
mov
dec
mov
push
dec
stos
aam
sahf
xchg
pusha
out
push
enter
add
xchg
cwtl
loop
out
mov
fnsave
test
or
push
push
xchg
adc
popf
jle
ret
add
and
xor
das
popf
stos
jns
fsts
sub
add
fs
mulb
jmp
cli
xor
mov
pop
or
mov
mov
fadd
std
repnz
shrb
push
movsl
sub
mov
js
rorb
fs
aas
mov
inc
cmp
xor
das
mov
inc
mov
dec
mov
push
pop
cmp
fmuls
leave
mov
and
push
dec
outsb
insb
into
jmp
inc
and
imul
hlt
mov
shll
inc
sbb
stos
aas
cwtl
mov
shl
mov
adc
lock
adc
jge
xorl
frstor
cmpsb
dec
mov
inc
mov
scas
je
pop
dec
jle
inc
xchg
scas
loope
xlat
jbe
jge
xlat
jp
or
popa
xor
and
push
jns
cmpsb
mov
mov
jp
adc
lret
out
pop
jl
xchg
mov
int3
shll
push
cmpsl
mov
repz
and
testl
mov
or
movsl
xor
stos
mov
out
verr
push
stos
sub
pop
sub
inc
cmp
xlat
and
gs
in
sahf
push
add
dec
lds
adc
xchg
loop
lock
and
jecxz
mov
cs
das
inc
add
inc
cmc
sahf
pushf
xchg
sbb
jne
int
dec
aas
popf
imul
push
inc
out
iret
les
movsb
jnp
xchg
mov
xor
imul
pop
outsl
jno
add
inc
jne
mov
or
jmp
jle
pop
xchg
push
or
in
popa
lods
outsb
dec
imul
repnz
pop
rorl
sti
lret
push
pop
adc
les
add
mov
or
inc
xchg
dec
or
adc
and
int
or
decb
insl
mov
test
testl
jns
jecxz
orb
or
subl
dec
cmc
mov
in
sub
jns
mov
addl
cmpl
inc
mov
sub
dec
xchg
pop
in
arpl
ret
and
sub
imul
xor
int3
cltd
xor
dec
arpl
inc
gs
mov
pushf
pop
test
adc
mov
sbb
in
push
mov
add
inc
and
inc
dec
lcall
xchg
mov
js
xchg
push
je
sbbl
fmulp
or
adcl
xor
xlat
adc
popa
mov
mov
cmp
push
lea
test
jno
mov
jle
mov
push
sub
movsl
stc
pop
loop
test
loop
gs
pushf
push
sub
pop
cmp
orl
ficompl
push
mov
mov
xor
xchg
mov
stc
loopne
lock
xor
ret
adc
pop
loopne
test
sti
test
mull
imul
cli
pop
aaa
fwait
inc
pop
adc
gs
mov
adc
out
push
les
sbb
xor
cvtps2pi
fldenv
les
mov
in
xchg
push
jmp
mov
ds
mov
inc
fcompl
mov
or
movl
cld
add
inc
int3
sbb
mov
clc
sub
cwtl
xchg
push
and
add
inc
push
mov
mov
inc
push
ljmp
rclb
adc
adc
mov
aam
mov
test
pushf
and
aam
add
in
out
pop
pop
xor
ljmp
test
push
sub
cmp
pushf
test
xor
xchg
add
cmp
lods
pop
adc
jne
pextrw
stos
pusha
out
adc
adc
mov
lret
add
cwtl
and
leave
add
push
mov
mov
adc
iret
dec
outsl
repz
cmp
and
lock
movsl
or
cmc
notl
mov
nop
imul
mov
popf
and
add
popa
push
gs
push
mov
mov
outsb
aaa
push
pop
xlat
mov
xchg
cmpsb
or
leave
pop
xchg
fildll
dec
iret
sbb
sub
cmp
xchg
jmp
iret
fcomps
repnz
add
inc
xchg
dec
fcoms
aad
add
cmp
lret
push
cmp
adc
in
movlps
lock
sbb
and
dec
lds
lea
fcmove
cmp
sbb
push
cmpb
xchg
mov
into
sbb
pop
xchg
rcrb
movsb
daa
jmp
mov
mov
ljmp
lret
popf
jne
mov
lea
js
loopne
push
jle
and
lods
jmp
sbb
cmc
xor
cwtl
inc
adc
in
xchg
xchg
cmpsb
cmp
push
loopne
sub
icebp
adc
mov
inc
test
das
jo
pop
push
pop
iret
out
fildll
cmovs
lds
xchg
cmc
or
jns
cmc
scas
jmp
mov
adcl
jnp
jmp
rolb
push
cmp
sahf
add
cwtl
cs
mov
add
jge
lds
jg
aad
mov
inc
cmpsb
aad
xchg
mov
sarb
and
stos
testl
xchg
sub
add
cmp
test
lea
mov
mov
pop
cmc
sub
mov
popf
mov
xchg
and
movsb
rolb
mov
and
mov
dec
mov
out
mov
popf
sbb
mov
cmpsl
pushf
jmp
pop
ss
test
adc
dec
add
pop
test
mov
shlb
cwtl
xchg
inc
je
stc
fdivrp
mov
mov
addr16
ret
sub
mov
sahf
sub
mov
sbb
sbb
lret
push
das
out
test
test
dec
iret
scas
roll
jle
popf
mov
or
aad
cmp
cmp
sarl
lahf
dec
dec
or
cmc
fwait
jmp
scas
dec
lock
dec
push
ret
call
fstl
xchg
dec
mov
cmovge
mov
push
jae
push
jb
in
je
pop
loopne
push
pop
gs
mov
mov
add
popf
addl
dec
add
fnstenv
imul
divb
aad
cmc
insl
mov
bound
inc
js
jns
mov
push
icebp
sarl
iret
clc
adc
stc
xchg
imull
subl
loop
mov
push
nop
xchg
roll
add
jo
pop
inc
fstpl
out
cmp
push
std
cltd
cltd
cmp
repz
or
inc
dec
test
out
dec
xchg
call
mov
cmp
adc
js
arpl
sbb
or
in
jbe
fs
xchg
mov
and
cmpsb
testb
in
mov
jmp
sub
loope,pt
sahf
inc
jge
and
call
jg
gs
shl
push
inc
call
nop
inc
pop
outsb
ret
mov
fisubl
int
lret
repnz
sub
push
mov
dec
rcrb
punpckhwd
cld
outsb
imul
decl
shlb
sbb
iret
mov
adc
mov
cmp
insl
psubsb
orb
test
sbb
shrl
and
sarb
mov
mov
les
or
cs
cltd
mov
cmp
scas
out
and
mov
movsl
js
daa
mov
movsl
inc
dec
stos
mov
or
xor
push
scas
fsubrs
push
and
cmp
add
adc
scas
loop
andl
shrb
sbb
jbe
pop
insb
pop
int3
sub
add
fistl
push
call
fwait
jbe
fildll
insb
mull
jl
mov
cmp
fsubl
lret
mov
push
call
and
jle
leave
cmp
lret
cmp
shrb
pop
cmp
xchg
sbb
xchg
jge
push
addr16
dec
addl
or
arpl
jle
movsl
push
ljmp
daa
dec
mov
int3
les
les
aad
pop
mov
jbe
aaa
mov
outsb
push
out
and
pop
loope
push
jno
mov
insb
jge
es
and
sub
or
in
sbb
mov
mov
pop
cmp
push
sub
cmp
mov
xchg
push
scas
in
outsb
pop
in
or
jae
xchg
movsl
nop
add
push
dec
lret
push
adc
outsb
dec
cld
imul
cwtl
inc
and
mov
subl
test
mov
outsl
in
fidivrl
xchg
rcrb
repnz
roll
mov
xlat
shlb
and
cmp
push
loope
sbb
adc
mov
popw
ja
mov
mov
mov
roll
mov
incl
sbb
push
mov
push
addr16
clc
or
dec
mov
or
sub
fwait
jns
mov
out
xor
fs
les
cmc
xchg
cwtl
xor
fisttpl
fidivl
pop
cmp
and
mov
sub
int
sub
xor
pop
mov
xchg
lods
sub
pop
stos
pop
pop
xchg
or
inc
push
mov
push
add
stos
es
pop
cld
push
pop
mov
shrb
subl
or
xor
pusha
les
dec
lea
jne
cmp
lds
xchg
pop
push
repnz
mov
ljmp
add
push
fisttps
mov
in
jo
jns
in
arpl
jp
or
lret
enter
mov
pop
xor
call
dec
xor
je
popf
inc
mov
fiaddl
xor
hlt
jmp
movsl
cmp
xchg
and
jg
push
mov
pop
addr16
mov
jl
fisubrs
les
mov
or
movsb
shlb
cmp
mov
les
dec
mov
pop
into
or
mov
lahf
or
lods
pop
ja
mov
add
test
ljmp
xlat
fdivs
inc
xorl
xchg
inc
jns
popf
sbbb
or
loopne
jp
ret
push
loopne
clc
lods
popa
jmp
stc
inc
icebp
push
rclb
inc
add
mov
cmp
ds
inc
imul
in
aad
sub
xor
or
xchg
mov
out
inc
lods
jne
push
add
imul
jecxz
cli
xchg
inc
xor
inc
daa
je
mov
sub
das
fstpl
aaa
add
in
je
pop
xor
mov
lods
and
jo
xchg
jecxz
js
jbe
andb
out
lret
adcb
outsl
out
call
mov
jecxz
popf
and
adc
ficoml
jns
sbb
cmp
jp
fs
or
mov
rcrb
pop
or
xchg
cld
mov
cmp
xor
repz
notb
pop
and
fucompp
out
js
imul
fisubs
push
int
into
pushf
pop
sub
mov
aam
jne
mov
movsl
push
in
test
sbb
lods
cs
in
loop
xchg
push
push
push
popa
iret
push
cmpsl
adc
adc
loop
movsb
movb
ds
xor
stos
pop
seto
jns
popa
clc
in
arpl
imul
or
cmp
mov
les
daa
or
in
jp
ja
sarb
lods
mov
push
xor
xchg
gs
imul
pusha
cmp
out
push
aad
xchg
cmpb
push
leave
subb
out
xor
out
xchg
dec
stc
stos
inc
addr16
sbb
cmp
cmp
sub
mov
cmpsb
dec
lcall
lret
ja
leave
andb
mov
xor
shll
pop
xchg
jmp
jle
pushl
add
xlat
pop
mov
xor
dec
mov
sahf
sbbb
mov
shlb
add
dec
xor
adc
mov
add
js
out
push
repz
ljmp
jo
std
and
loopne
lock
adc
sbb
and
ljmp
sbb
icebp
push
ret
mov
and
xchg
jae
js
ss
pusha
xorl
idivb
test
divb
icebp
js
jmp
outsl
add
shlb
jo,pn
dec
test
rcll
cmp
push
mov
je
pop
loopne
xor
jecxz
xor
stc
loop
xor
iret
push
jl
imul
loopne
mov
jmp
cmpsl
jp
or
int
outsb
xchg
in
test
mov
fnstenv
imul
stos
pop
lods
dec
cltd
pop
cmp
loop
dec
and
notl
xlat
test
addr16
jns
pop
in
lods
lahf
jp
push
and
lea
frstor
or
ftst
cmpsl
jae
adc
test
lea
fnstenv
mov
mov
pop
inc
sub
lret
cli
lret
cmp
and
or
cli
leave
mov
and
sbb
or
out
add
fs
jecxz
jo
xchg
pop
inc
lds
lret
sub
and
stos
pop
sub
or
dec
jg
xchg
pop
lea
loopne
add
rorl
movb
or
jmp
je
int3
mov
ljmp
movsb
push
outsb
ret
iret
cltd
mov
cmc
out
js
pop
jb
bound
and
addr16
outsb
xchg
mov
jmp
into
daa
xor
test
lret
jmp
ja
sbbb
fldt
das
cmpsb
movsl
xor
jo
add
aaa
das
jp
in
or
cmpsb
outsb
adc
fwait
aam
xor
adc
daa
xchg
fwait
push
add
inc
or
jg
jge
test
sti
outsb
in
daa
popa
xor
test
xchg
aaa
inc
les
jl
mov
leave
test
neg
inc
stos
or
dec
iret
mov
pop
orl
test
xchg
lods
decl
push
jae
pop
in
xchg
out
xchg
and
ret
es
mov
sbb
adc
data16
sbb
test
popf
jl
cmc
lock
mov
xor
lods
dec
push
aas
add
cmp
xorl
adc
cmp
popf
push
add
and
mov
imul
pop
push
sub
xor
xor
mov
jecxz
sbb
or
inc
enter
mov
ret
pop
inc
sbb
arpl
sub
enter
mov
adc
or
test
dec
jle
je
fcoms
push
mov
sbb
pop
scas
cmp
cmp
nop
xlat
xchg
rolb
pop
popa
sub
jg
out
pop
in
inc
scas
inc
mov
mov
mov
in
adc
pushl
loope
aaa
or
in
outsl
icebp
sbb
push
xor
roll
mov
out
test
pop
fistl
push
sub
cli
pop
add
push
add
dec
push
jle
cld
test
adc
mov
icebp
cmpsb
sub
lret
jmp
cli
fistl
cmp
sbb
lret
out
popa
jl
fwait
or
sub
xchg
sahf
inc
and
mov
adc
inc
in
xchg
dec
outsl
test
data16
pop
sub
out
cld
sbb
cmp
or
shrl
and
stc
enter
testl
jae
adc
fsubrs
loope
cwtl
cmp
pop
xchg
insb
fstpl
jae
add
dec
movsb
sti
adc
subb
xchg
testb
inc
pop
in
inc
cmc
pop
inc
mov
sbb
repnz
jmp
or
das
hlt
and
imul
push
out
ds
imul
jmp
loope
insb
shl
xor
in
push
sbb
or
jmp
add
pop
idivl
adc
push
into
inc
sahf
xchg
outsl
nop
push
sub
xor
mov
fsts
sbb
mov
sub
es
mov
adc
notb
repz
xchg
shrl
push
subb
mov
mov
mov
jp
xchg
fmuls
mov
cmpsb
call
bnd
loop
mov
cmpsl
iret
sub
mov
pop
push
lret
ljmp
mov
mov
adc
mov
aas
mov
lods
jle
push
fldcw
repz
popa
sub
jbe
xchg
andl
ror
mov
insb
jo
push
popf
repz
fisubrs
inc
pop
xor
push
out
pusha
shr
xor
adc
push
mov
popf
push
inc
mov
cmc
pop
inc
fdivrp
and
add
xlat
test
mov
cmp
adc
cmpsb
mov
adc
sbb
mov
mov
jne
push
and
jg
jbe
xor
push
push
int3
inc
les
mov
data16
in
fwait
addb
imul
mov
sub
scas
sbb
sub
mov
leave
pop
push
mov
jp
subb
xchg
and
lods
sub
lret
jae
or
insb
nop
cmpsb
aad
mov
das
mov
fsub
xor
fistpl
cmp
sbb
mov
loope
xchg
inc
cmp
cmp
pop
je
and
dec
and
rol
cltd
and
wbinvd
dec
cmp
lock
stos
aaa
pop
jne
jge
inc
mov
cmc
mov
pop
xor
add
aaa
jle
mov
scas
aaa
pop
sub
xchg
movsl
jne
dec
mov
mov
sbb
inc
xor
jne
mov
xorb
xchg
adc
rcrb
lret
ret
push
jns
loop
or
jns
aam
gs
inc
fdivr
jp
addl
scas
inc
test
ret
addr16
push
das
pop
jb
cmp
pop
int3
add
and
repnz
push
pop
inc
mov
add
stos
out
icebp
sub
mov
movsl
mov
ja
mov
cmp
fstpt
sbbb
les
mov
pop
ret
stos
into
pop
inc
cmpb
lods
les
push
cmpsb
in
bound
inc
test
adc
add
push
dec
outsl
test
inc
les
cmp
ret
fstpl
scas
cmpsb
pushf
aad
in
leave
in
cmpsl
cmp
pop
clc
mov
mov
lods
sub
sti
inc
enter
jns
mov
mov
mov
jge
pop
cmp
movb
int3
das
xchg
pop
xchg
xor
sub
and
sub
mov
sbb
stos
nop
sar
cmp
dec
inc
aad
aaa
inc
aas
leave
cmpl
mov
xchg
push
inc
popf
inc
mov
outsl
dec
mov
icebp
add
mov
mov
sbb
fsubl
aaa
dec
jmp
and
fstl
ret
arpl
mov
lcall
mov
mov
aaa
mov
xor
pop
dec
in
mov
pop
dec
inc
pop
cmp
and
addb
or
inc
mov
dec
cwtl
ret
add
jns
popf
int3
cmp
shr
pushf
xchg
lods
inc
mov
xor
inc
insb
lahf
ja
outsl
int
sbb
int3
dec
jo
xor
ja
ds
ljmp
pusha
jecxz
or
xlat
jbe
xchg
test
jecxz
xchg
nop
mov
mov
std
dec
outsb
xchg
or
or
loop
mov
js
sbb
xchg
mov
ljmp
dec
lods
or
xor
dec
arpl
popf
xchg
call
imul
add
jge
sbb
or
cmp
insl
xor
push
push
mov
insb
rcr
or
or
sub
arpl
popa
mov
jecxz
mov
fs
sti
inc
es
mov
xchg
mov
ret
and
loope
adcb
or
fimuls
fisubl
ret
das
insl
xchg
or
mov
gs
int
int
xor
and
stos
arpl
test
xorb
or
popa
sbb
movsl
mov
jae
inc
test
pop
lret
aas
call
rol
pushf
pop
push
cmp
cmpl
xor
pop
mov
inc
aad
jnp
push
sub
outsb
fisttps
push
xchg
xchg
or
xchg
aas
xor
add
add
sbb
andl
mov
out
rcll
dec
mul
dec
mov
into
sbb
jns
push
jl
sub
jb
lahf
dec
subb
clc
orb
xchg
or
lahf
iret
inc
pop
push
cmp
jg
pop
rcr
ficomps
push
xchg
add
jns
lods
fstl
or
sarb
and
cmp
in
xchg
jl
ss
std
and
sub
or
jnp
arpl
dec
shlb
cltd
mov
pop
stos
mov
mov
pop
push
mov
in
out
xchg
push
xor
pop
xor
push
dec
cmc
lret
pusha
sbb
xlat
out
pop
arpl
dec
inc
xchg
mov
rcl
adc
rclb
imul
insl
pop
data16
mov
mov
lahf
inc
aas
test
and
sbb
push
aaa
adc
pushf
mov
inc
gs
mov
mov
out
mov
or
push
push
addr16
mov
adc
and
in
shlb
jnp
jns
nop
push
inc
jne
xchg
mov
xchg
shll
pop
sub
ds
sub
stos
add
sti
out
adc
mov
push
mov
or
out
fnstcw
or
cmp
pop
cltd
pusha
popf
into
shrb
cmp
mul
push
jbe
adc
gs
lahf
add
mov
out
cld
add
mov
and
popf
out
push
xchg
aad
in
lret
jg
jno
daa
push
aad
std
into
cmp
lahf
stos
and
xchg
xor
or
inc
xor
out
or
xchg
jmp
mov
movb
and
add
les
push
and
out
inc
xor
xlat
mov
add
bts
jge
into
mov
xchg
inc
iret
cmp
test
addr16
or
xchg
sbbb
nop
stos
loopne
sbb
lock
mov
and
pop
test
xchg
decl
sub
rclb
int3
cmpsl
add
xor
pop
dec
push
lds
js
mov
ret
sub
inc
out
out
pop
ret
jae
mov
icebp
sbb
loopne
imul
xchg
or
add
or
iret
adc
push
pop
out
mov
adc
push
sbb
test
cmpsb
xor
test
push
jo
jns
stc
lret
pushf
lcall
cmp
in
call
jg
insb
stc
inc
and
sub
xchg
in
or
repnz
jnp
inc
inc
ret
xchg
fldcw
dec
push
xor
or
add
popa
ret
sbb
loop
push
addb
sar
decb
inc
pushl
aad
dec
push
call
lods
and
stos
into
cld
mov
cmpsb
lods
pop
sub
push
cmp
movsb
inc
aas
jns
dec
sahf
jns
and
xchg
mov
fldl
je
or
cmpl
test
cmpsl
shlb
push
stos
adc
xor
push
push
dec
rcll
inc
push
xchg
bound
inc
clc
xchg
jae
sbb
pop
push
shlb
mov
sub
and
push
cmp
or
push
jo
ss
push
and
ret
lea
lods
jl
xchg
scas
out
inc
aaa
or
faddp
cmp
mov
pushf
dec
das
push
dec
mov
jbe
ljmp
scas
xorb
xchg
or
and
insl
jp
jecxz
shrb
rorb
ficoms
stc
ret
iret
cmpsb
leave
les
and
loope
insl
outsb
jecxz
pop
adc
adc
xor
dec
push
int3
cld
push
jnp
test
sbb
mov
stc
ds
mov
add
stc
in
mov
std
dec
pop
xor
in
test
ds
and
mov
das
cmp
stc
cmpsb
xchg
pop
fsubs
inc
push
push
pop
pop
cmc
aad
mov
sub
aad
push
or
push
mov
pop
cltd
lret
add
pop
jb
or
push
mov
ljmp
ss
mov
fs
stc
pop
pop
xor
fists
in
cli
inc
cmpsl
sub
pop
jmp
xor
push
ret
into
fisttpll
sarb
mov
fs
jns
and
or
mov
mov
int3
mov
jbe
pop
imul
mov
adc
mov
inc
and
jp
mov
add
nop
hlt
sbb
push
mov
or
lea
sahf
inc
xchg
idiv
aas
mov
and
pushf
mov
ss
cmp
inc
out
dec
push
mov
and
sar
push
mov
fidivrl
or
mov
pusha
in
das
push
enter
or
mov
xchg
popf
sbb
and
inc
stos
inc
cmp
mov
stc
sbb
mov
test
outsl
cmp
xor
pop
or
mov
mov
sti
or
cmp
inc
jg
xchg
xor
dec
repz
xor
scas
lods
neg
jno
daa
mov
or
sub
cmp
test
xchg
cmp
push
mov
aam
arpl
pop
scas
sub
push
fsubrl
andl
outsb
andl
cmp
pop
je
push
in
xlat
daa
imull
mov
mov
lcall
lock
fisubrl
cmp
pop
pop
sub
into
sub
pop
xchg
push
sbb
fisubrs
add
fs
mov
xchg
fisttpl
push
pop
or
add
shlb
ret
lds
in
inc
rorl
or
ret
ja
xor
fcmovne
mov
sub
jnp
divl
divl
or
jns
mov
jg
sub
jp
pushf
pop
push
enter
mov
jmp
ds
xchg
js
inc
or
aas
lret
ret
movzbl
sub
pushf
aas
or
jb
scas
or
test
xor
movsl
mov
or
inc
inc
or
xor
aas
cwtl
mov
jg
sbb
lcall
pop
push
xchg
ljmp
movsl
ror
mov
add
out
cmpsb
jb
fists
test
mov
call
shll
adc
int3
in
outsb
dec
mov
ds
add
cwtl
xor
mov
mov
sbb
pushf
ret
lret
sbb
inc
mov
test
fsts
inc
or
mov
mov
push
or
and
in
push
pop
scas
jmp
sbb
mov
jae
cs
movsb
sbb
insb
test
pop
outsl
arpl
jbe
movl
fwait
push
mov
mov
mov
cli
add
and
mov
mov
xchg
adc
enter
sti
adc
push
fistpll
push
lock
int3
sub
sbb
daa
fwait
and
repnz
mov
test
adc
pop
inc
outsl
movsl
or
push
div
cs
insb
dec
add
pop
add
sti
insb
mov
popf
and
out
popf
push
mov
cmp
add
push
dec
inc
loop
push
xchg
jns
or
xor
jo
nop
aaa
add
dec
scas
sub
jbe
xchg
popf
xchg
rorb
inc
in
mov
dec
push
hlt
push
jge
add
icebp
loop
lret
dec
test
adc
ss
cli
push
push
test
in
int3
lods
imul
inc
in
push
and
xor
sbb
jnp
sbb
test
in
ss
adc
bound
and
pop
jmp
sbb
insb
out
aas
into
fisttpl
movsl
adc
lahf
dec
fmul
rclb
inc
arpl
mov
and
test
pop
fcmovbe
jg
push
mov
loope
int
inc
ss
jmp
iret
mov
ljmp
sub
sti
cmc
push
andl
push
sarl
test
xor
mov
pop
hlt
call
ret
push
xchg
jnp
fwait
andl
cmp
and
pushf
inc
cwtl
mov
mov
sbb
js
sub
pop
in
js
push
lea
dec
or
pushf
inc
push
test
lahf
or
jb
mov
cmp
aad
sbb
inc
cmp
orb
xchg
mov
pop
inc
push
pop
shll
sahf
loopne
add
repz
test
mov
enter
dec
push
push
stos
adc
mov
enter
dec
sbb
aam
cmp
cmpl
mov
lods
idivb
dec
inc
mov
pop
pop
cmp
dec
sub
and
push
fsubs
adc
imul
adc
ret
inc
mov
adc
test
sub
mov
scas
addb
iret
faddl
ljmp
adc
adc
mov
push
pop
loope
cli
lcall
sub
cltd
cmp
out
mov
out
fsub
fadds
xchg
inc
movsb
fcoms
pop
cmpsl
lock
cwtl
ljmp
in
mov
repnz
sub
mov
adc
inc
pop
jne
leave
pushf
int3
nop
ljmp
loopne
in
inc
mov
inc
std
mov
jl
mov
pop
movsb
jo
add
test
cli
inc
xlat
dec
inc
xchg
lea
daa
jo
int
and
or
shlb
inc
out
shl
inc
loop
loop
aaa
insl
mov
xchg
notl
jle
or
cld
lcall
imul
adc
test
xor
push
pop
xchg
mov
xor
and
sarb
lret
jns
arpl
lea
pop
adc
and
ret
jp
or
out
pop
jmp
push
stos
enter
lods
dec
sub
add
rcll
xchg
jno
fs
xor
cmpsb
jl
pop
int
cmp
xchg
dec
sarl
and
sub
repz
push
inc
orl
and
mov
repnz
subb
ss
mov
xchg
aad
or
es
movsb
lods
jg
jl
pop
and
mov
mov
shll
rorb
and
pop
xadd
add
mov
mov
fucom
pop
lds
insb
push
nop
fcoms
pop
jg
xchg
loope
push
ret
mov
push
gs
mov
xor
aas
inc
icebp
mov
fildll
in
push
cmpsb
push
nop
mov
sbb
loope
lods
aaa
popf
dec
jg
pop
jl
jge
push
xchg
push
and
cwtl
mov
xor
add
cli
sub
pop
je
cmp
cli
pop
mov
lea
addr16
out
mov
fadds
xor
sbb
stc
or
call
rolb
mov
jl
mov
cltd
or
lods
ja
sahf
add
lret
sbb
mov
inc
aaa
jns
push
leave
andl
xor
dec
insb
pushf
subl
stos
or
dec
sub
sub
dec
cmc
inc
js
xor
and
mov
outsl
jle
push
xlat
in
pop
jae
jmp
xchg
inc
aam
pop
sbb
push
push
sarb
fs
leave
sub
inc
cs
insb
jmp
stc
push
rcrb
iret
xchg
cli
out
stos
jae
lret
inc
jno
inc
popa
test
ret
or
test
xchg
pop
out
daa
inc
subl
jg
cs
ljmp
and
lret
imul
mov
push
leave
incl
lods
inc
dec
jg
lret
adc
enter
jb
idiv
jl
jmp
mov
jne
mov
push
xchg
jae
dec
sbb
pop
divb
icebp
insl
add
xchg
add
mov
xchg
inc
xchg
push
fdiv
outsl
mov
adc
and
adc
repnz
jp
lcall
push
shlb
push
outsl
dec
mov
xchg
dec
lea
xor
mov
sbb
pushfw
in
or
insb
mov
mov
and
mov
movsb
push
jno
dec
sbb
fwait
test
push
xor
mov
stos
inc
mov
add
mov
dec
ror
pop
cltd
push
movsl
bswap
sbb
fistpll
insl
outsl
inc
and
pop
or
xlat
pop
xor
dec
xchg
pop
mov
dec
jle
data16
hlt
mov
loop
push
xchg
xor
cli
lods
int3
add
int
pop
push
aaa
xor
lods
add
jb
aas
dec
inc
mov
jns
mov
inc
sarl
push
ret
loop
iret
add
or
js
lahf
inc
repnz
daa
and
jle
fadd
scas
in
daa
cmp
mov
mov
in
jnp
push
fsubs
sbb
lods
jmp
add
out
mov
les
call
cli
cmp
mov
jnp
push
or
mov
xor
hlt
int3
lods
rcrl
and
push
pop
pop
push
sub
xor
cmp
mov
les
push
jge
mov
add
mov
nop
jmp
icebp
or
fcompp
adc
cmpsb
cmpsl
ficompl
pop
dec
call
mov
enter
dec
adc
shr
push
inc
mov
push
ds
mov
add
xchg
lret
xor
or
cli
push
xor
sub
and
ja
out
mov
fcmovnb
or
sahf
shl
xchg
jle
adc
xchg
xor
xlat
jno
pop
dec
or
inc
push
cmp
dec
push
je
jp
and
lods
in
mov
xchg
cmpsb
mov
std
pop
es
and
push
sbb
jmp
xor
jns
loop
dec
jae
add
aad
fisubl
inc
fisubs
insb
ret
pop
push
and
cld
loope
jb
jecxz
shr
jo
inc
xchg
xor
mov
mov
sbb
xlat
stos
sub
jl
outsb
lcall
xlat
ret
sbb
mov
xchg
add
aad
mov
sar
in
lahf
and
packsswb
stos
or
test
mov
je
xchg
out
dec
adc
enter
push
dec
ljmp
in
pop
sub
and
pop
out
ljmp
adc
les
in
pushf
mov
dec
cmpsl
mov
cmp
pushf
or
jle
mov
xchg
imul
jg
int3
cmp
and
sbb
sub
mov
jo
leave
pop
adc
addb
fwait
jbe
popf
sti
flds
xchg
xor
jle
cs
shr
push
aaa
std
es
lahf
jnp
pop
mov
fisttpll
movsl
dec
xlat
jle
insb
jecxz
adc
or
fbld
add
mov
fsts
aas
jnp
jmp
jecxz
xchg
pop
andl
mov
lcall
rolb
into
mov
scas
sub
add
push
pusha
sub
pop
fwait
cmc
or
cltd
out
test
dec
or
fnstcw
push
jmp
es
call
jp
sbb
sbb
fistpl
mov
clc
sub
insb
mov
xchg
aas
out
test
xchg
ss
and
fisttpl
adc
rcl
inc
in
adc
movb
sub
push
jmp
xchg
ret
inc
jns
int3
call
lcall
or
ficomps
addr16
rcrl
lock
cmp
adc
int
lcall
xchg
push
and
stc
rcrl
cmp
sub
mov
adc
in
andl
ja
and
repnz
mov
aam
mov
pushf
divb
vpcmpeqw
jecxz
mov
push
das
jbe
xlat
mov
lahf
push
xchg
sarb
std
cmp
adc
cmp
mov
adc
jmp
aam
add
push
adc
cltd
in
fstpt
aas
stos
out
popa
repnz
dec
lahf
xchg
lretw
cmp
in
xchg
pop
mov
add
orb
mov
and
fdivl
mov
push
xor
stc
aas
dec
push
sbb
mov
mov
mov
loop
dec
out
shll
sbbl
push
mov
adc
mov
dec
mov
inc
add
push
or
fcmove
aad
or
sbb
test
jne
out
sub
into
or
nop
push
outsb
rcll
cmp
nop
fmul
jb
cmp
shl
pop
and
lret
jo
aas
cmp
stc
stos
jle
lods
mov
stos
fnstenv
mov
les
jo
ss
xchg
sub
out
and
movsb
lahf
pusha
lods
loop
cwtl
push
mov
icebp
push
jnp
xchg
clc
sbb
inc
scas
jle
fcomp
mov
fdiv
mov
or
xor
or
cmpsb
stos
lds
loopne
xchg
adc
int
pop
dec
add
popf
push
call
insl
mov
lods
sub
and
mov
jo
ret
pop
lods
push
dec
shrb
mov
mov
sarl
sbb
jg
jo
inc
fdivs
push
xor
sbb
mov
rcrb
xor
loop
test
insl
cmp
push
inc
jge
jb
mov
scas
pop
stc
jne
xchg
pop
leavew
push
movsb
and
push
rcll
inc
xchg
add
and
mov
cmp
aad
dec
and
out
pop
mov
adc
jmp
sbb
sub
cmp
add
xlat
int3
fs
sbbb
cmc
pop
mov
push
das
mov
xor
out
fldt
addr16
push
push
sub
test
jg
imul
xlat
jl
xchg
lea
add
jns
icebp
ljmp
mov
into
sub
pop
jecxz
test
jne
hlt
jnp
jmp
imul
push
lret
sub
jae
jmp
shl
pcmpeqd
ret
jne
xlat
push
shlb
inc
gs
bound
xchg
xchg
test
xor
jg
dec
jmpw
lcall
or
sub
cld
test
aas
rclb
leave
shrl
xchg
cmc
adcb
aas
lods
push
inc
inc
and
enter
incb
push
lret
push
addr16
jle
outsb
jns
jne
jbe
outsb
and
jl
in
frstor
fistpl
sbb
inc
insl
outsb
ljmp
pop
xor
push
xor
or
and
adc
cld
pop
push
jg
cmp
sbb
sahf
int
stc
popa
mov
or
adc
and
adc
cmp
mov
lods
int3
ja
sti
mov
and
inc
out
push
and
gs
ret
push
shll
in
imul
hlt
push
pop
jae
sbb
out
movl
stos
gs
push
es
mov
jmp
idiv
leave
xchg
xor
aas
xor
mov
pop
jo
pop
sbb
add
xchg
out
push
iret
or
aam
stc
dec
into
pop
fstps
mov
pushl
xchg
mov
mov
in
sti
insb
imul
dec
test
bound
std
pop
push
testl
loop
dec
bswap
mov
or
xchg
push
sarl
mov
xchg
movsb
test
push
cmc
div
aas
ss
sub
or
pushf
aaa
adc
adc
fstpl
jne
jle
cmp
pop
push
fstpt
mov
mov
cmc
rolb
fs
out
fstpt
sahf
cmp
ret
sbb
lds
je
aad
ljmp
xorl
call
test
leave
imul
xchg
xor
mov
fbstp
and
aam
popf
add
enter
into
ds
inc
lret
xchg
dec
mov
in
jae
mov
inc
mov
pop
or
leave
pop
jne
dec
mov
mov
adc
lock
dec
push
or
lods
dec
lret
fdivrs
imul
inc
add
sub
pop
sbb
pop
jne
mov
shl
or
faddp
mov
test
adc
fldl
roll
in
cltd
sub
stos
ja
out
rcrl
out
jnp
int
mov
dec
adc
rcr
xor
xchg
loopne
or
shl
cli
add
sbb
dec
in
xor
push
out
dec
jb
test
mov
pop
pop
ss
icebp
xor
jp
push
pop
lods
and
in
xchg
jge
or
sbb
pop
mov
xchg
jmp
pop
pop
xchg
rcrl
inc
add
pop
mov
mov
jae
fstl
ljmp
icebp
dec
outsl
jp
es
dec
sbb
mov
mov
mov
imulb
fisubl
or
daa
mov
sbb
subl
pushf
jne
movsl
mov
dec
inc
dec
cmc
incb
movl
adc
lcall
int
xchg
jbe
and
jecxz
xchg
sahf
lret
mov
mov
in
scas
adc
and
pop
jae
pop
int
mov
mov
inc
xor
add
inc
mov
jmp
scas
lret
testl
jnp
cli
loopne
repnz
fisubl
sbb
stos
add
push
imul
push
push
push
xchg
adc
pop
mov
mov
mov
fcoml
stc
xor
hlt
sub
cwtl
mov
cmp
out
nop
or
out
and
test
shrb
mov
pop
stc
or
sub
jnp
aaa
insl
ret
mov
jno
sub
jbe
push
pusha
adc
pop
push
test
imul
add
insl
adc
cs
inc
test
or
add
sbb
lcall
cmp
dec
std
insl
mov
jb
xchg
xchg
push
mov
iret
mov
mov
jp
xlat
xor
pop
idivb
in
sahf
jmp
aam
out
xchg
aas
mov
ja
jo
out
mov
mov
mov
mov
xchg
clc
shlb
fdiv
sbb
test
jae
out
inc
pop
lds
arpl
push
inc
push
push
into
sub
xchg
cmpsb
inc
lret
mov
mov
popf
pop
pop
addb
clc
or
push
inc
outsb
sub
in
into
lds
mov
dec
jb
inc
mov
jmp
into
iret
jb
or
xchg
xchg
ds
or
jecxz
lods
fsubrs
inc
cmp
stos
xchg
mov
pop
in
mov
xchg
cmp
dec
sbb
jmp
mov
cli
sbb
aas
fistpl
or
cli
loopne
or
sbb
rcl
aad
jle
jne
sub
or
lret
leave
bound
out
in
les
das
nop
fwait
push
fistpl
je
bound
vunpcklps
int
sbb
jno
lock
sbb
ljmp
xchg
sbb
lock
lcall
jle
push
add
hlt
cwtl
rcrl
xor
sahf
scas
sub
call
push
push
pop
mov
out
add
mov
test
jmp
jo
bound
out
sbb
mov
push
push
jmp
rorl
jo
stos
cmp
jmp
xchg
mov
aad
mov
cmc
and
push
xchg
mov
fldenv
out
and
jge
and
or
cmp
lret
aad
mov
xchg
hlt
rcrb
or
ss
sbb
cli
test
into
mov
rcll
sbb
stc
gs
lret
fdivrs
outsb
fstps
ret
jl
scas
or
cwtl
pop
sub
push
inc
loope
insl
mov
or
inc
pop
fptan
or
gs
inc
test
dec
xchg
sbb
xchg
mov
in
iret
mov
adc
xchg
pop
shll
ret
stos
mov
iret
aas
cmp
mov
scas
hlt
xchg
pop
ljmp
mov
add
sub
mov
shrl
fbstp
sti
test
nop
test
hlt
xlat
cmp
mov
sahf
jecxz
subb
inc
movsb
jecxz
or
xlat
xor
clc
push
fsubrl
sti
inc
mov
bound
loope
test
dec
mov
sbbl
mov
sbb
pushf
lcall
add
push
xor
xchg
xchg
pop
in
pcmpeqd
inc
ljmp
ret
pusha
or
dec
jecxz
or
in
xchg
mov
shlb
imul
movsb
imul
outsl
xlat
int
and
popf
sahf
movsb
jmp
fstpt
movsb
ficoms
or
mov
aam
pusha
rorb
and
call
aaa
cmp
cwtl
cmp
cltd
inc
clc
xchg
and
push
mov
fiaddl
test
or
or
ret
xor
popa
xchg
xor
sbb
dec
fxam
ret
rcrb
push
jl
adc
sub
ret
push
push
or
in
adc
js
cs
cmp
les
sub
ss
dec
pop
mov
cmp
jg
loop
adc
sbbb
lods
push
loope
xchg
xor
stos
fldcw
or
icebp
pop
ficompl
stos
daa
jmp
jg
pop
jmp
and
orl
inc
or
cld
movsb
and
arpl
ret
mov
adc
je
adc
dec
insl
push
jg
inc
push
shll
inc
push
testl
adc
outsl
inc
xchg
inc
dec
aas
addr16
cs
lds
xchg
and
jmp
xorb
mov
enter
inc
push
insl
imulb
xor
push
out
push
jbe
push
lret
push
stc
pop
cmpsl
fs
mov
insl
enter
in
mov
pop
mov
enter
inc
jmp
fsubl
cmp
out
pop
or
add
xchg
and
mulps
sbb
push
inc
mov
add
sub
imul
xchg
xchg
mov
ja
mov
out
add
int3
lock
push
mov
cmp
call
sub
pop
pusha
roll
roll
enter
in
pop
push
push
aad
dec
mulb
jne
icebp
add
and
imul
pop
flds
in
aas
stos
inc
inc
pmulhuw
lret
and
xlat
pop
loop
inc
repz
rcl
inc
enter
imul
xchg
lahf
jae
push
fcoml
and
cld
sti
inc
insl
out
mov
dec
stos
fimuls
leave
jb
aas
mov
sbb
mov
loop
ds
dec
cmp
jmp
add
inc
icebp
outsl
inc
mov
lcall
imul
lds
dec
mov
clc
xor
mov
push
xor
mov
aas
movsl
or
arpl
push
hlt
mov
pushf
xchg
sbb
stos
rorb
rclb
xchg
insl
enter
push
int
cmp
mov
lcall
test
enter
xor
bound
fldl
rorl
pop
jne
dec
das
push
in
ljmp
movsb
jno
add
cli
sub
cmp
orl
push
imul
gs
xlat
fildll
sub
sbb
jns
lds
xor
sub
lret
inc
dec
loopne
sahf
je
es
cld
xchg
mov
shr
mov
jp
lods
orl
push
out
pop
jp
mov
jg
je
movsb
or
je
fwait
mov
xchg
pop
loopne
in
sbb
test
mov
pop
xchg
jne
fcom
cmp
je
or
test
xchg
jbe
cli
cli
cmp
out
sbb
test
push
outsl
movsl
dec
add
xor
dec
hlt
dec
inc
aad
loop
sub
iret
xchg
push
lcall
cmp
ret
sahf
xchg
push
bound
fldl
jmp
fdivrp
loopne
ret
bnd
pusha
jnp
sahf
das
pop
pop
pop
jle
arpl
add
push
jb
mov
cld
add
mov
ss
jnp,pt
lock
cli
int3
xchg
jmp
fnsave
and
pop
xor
sub
insb
fstpl
sub
mov
and
cmp
jle
xor
dec
and
jns
or
xor
stos
cmpsl
sti
sahf
cwtl
lahf
js
test
movsb
push
pushf
and
xchg
je
into
adcb
out
into
sbbb
lds
lea
inc
lds
icebp
int3
cwtl
push
sub
outsl
int3
ljmp
pop
mov
inc
or
xchg
cld
pop
dec
dec
dec
cmp
std
mov
mov
adc
cmp
pop
popf
in
mov
and
mov
movsl
imul
cmp
orl
shrb
jae
mov
lret
out
movsb
sahf
mov
lds
mov
out
cltd
adc
push
lcall
mov
xchg
dec
push
aaa
mov
mov
fcomi
pop
and
cmpsb
sub
test
pop
nop
inc
xchg
sbb
popa
nop
cmpl
push
push
pop
adc
jno
sbb
mov
sbb
mov
add
xchg
jle
flds
cmpsl
jnp
movsb
add
in
pop
aad
xchg
orb
clc
push
cmpsb
xor
aam
dec
ljmp
addr16
js
clc
dec
cwtl
sub
pop
or
add
push
mov
adc
pop
lret
mov
inc
add
xor
std
or
hlt
xor
pushl
inc
adc
cmp
sub
adc
or
fimuls
xchg
loopne
clc
mov
sub
jg
rcrb
push
pop
outsb
xor
sub
movsl
aam
or
add
cmp
insl
sub
repz
lea
imul
xor
mov
jg
mov
add
scas
popf
enter
push
adc
std
scas
cmc
mov
hlt
inc
add
push
ror
lds
and
xor
jne
pop
push
je
test
call
popf
cmp
bound
push
push
sbbb
loopne
in
cmp
inc
dec
fidivl
lock
loope
pop
add
test
sti
aam
and
push
das
inc
jecxz
cmp
in
dec
cli
jbe
push
add
push
adc
cmp
arpl
xor
scas
dec
enter
or
mov
ljmp
add
or
movl
pop
xorb
hlt
out
adcl
imul
rclb
jne
fcompl
popa
mov
aaa
pop
loop
jecxz
xor
cmp
xchg
ja
inc
jge
in
push
or
sbb
imul
pushf
cmpsb
cmp
leave
and
sub
pop
dec
mov
adc
jns
dec
and
mov
lock
pop
cmp
cmp
xor
or
add
cwtl
fdivs
cmp
cmp
push
mov
lcall
ja
or
bound
mov
shll
arpl
jmp
sbb
mov
push
fisttps
push
int
leave
inc
jb
mov
mov
jmp
pusha
mov
jno
idivl
daa
cmpsl
icebp
mov
pop
jecxz
mov
sbb
addr16
out
and
out
lods
sbbb
rcl
fwait
push
test
jp
mov
lcall
aaa
xlat
dec
mov
fucomi
cmp
das
movsl
and
orl
fisttpll
scas
and
cs
push
mov
dec
push
dec
and
inc
jno
lods
arpl
mov
xchg
xchg
pushf
mov
sahf
imul
leave
pushf
pop
int
mov
or
stc
std
shrl
push
aam
adc
int3
push
inc
pop
lcall
loopne
mov
xchg
movsl
out
out
mov
dec
out
pop
in
lcall
int3
cmp
into
lret
push
pop
lock
in
loop
sbb
pusha
push
pop
loope
or
jnp
jmp
imul
fisubrl
dec
adc
addr16
imul
into
fsubl
inc
test
cwtl
es
addb
jmp
aad
mov
mov
loop
mov
mov
call
inc
or
int
ficoml
pop
lods
int
lods
sbb
enter
ret
sbb
int
dec
xor
pop
or
add
xor
addr16
mov
push
add
inc
aas
adc
and
mov
jo
cmpb
jo
sbb
nop
popf
negb
and
push
rorb
push
adc
shlb
sbb
and
dec
jl
test
sbb
popf
pop
xlat
inc
mov
cld
push
mov
roll
dec
mov
or
lock
jmp
inc
aaa
xlat
push
mov
push
mov
mov
imul
stos
cli
or
and
adc
ret
adc
shlb
pop
add
push
ficompl
mov
fcoml
mov
inc
jae
jo
add
and
or
bound
jne
insl
test
sbb
hlt
sbb
lock
sbb
mov
pop
push
jo
jae
fidivs
adc
ds
sub
pop
iret
adc
clc
fdivr
shr
cmpsb
insl
inc
and
lock
push
mov
out
push
add
addl
and
adc
pusha
lret
mov
mov
jmp
fsubr
ja
adc
sbbl
inc
jge
insl
xchg
repz
sbb
mov
or
cmpsl
rorb
test
out
jle
ja
popaw
filds
faddl
jp
push
out
xchg
in
fdivs
pusha
mov
in
shll
cmp
jbe
adc
shr
pop
insb
sub
pop
shll
aas
adc
xor
ljmp
mov
mov
inc
inc
mov
push
sub
jecxz
hlt
aas
jg
xchg
push
popf
ret
mov
std
pop
sub
pop
test
stc
int
and
rcrl
sbb
dec
sahf
leave
jno
mov
lods
fnsave
jmp
out
rcr
xchg
or
lret
mov
cmpsl
jbe
push
cmc
std
and
lds
cmp
jo
jno
jne
sub
lods
mov
stos
fisttpll
jle
bound
std
fidivs
ds
dec
add
jo
or
sbb
rcl
jne
loopne
ficoml
and
and
test
pop
dec
sarl
xor
and
adc
iret
and
insb
and
inc
test
sub
imul
mov
in
cmp
addl
mov
lea
test
loopne
es
fldl
ficoms
int
popf
in
adc
ret
jmp
movsb
fwait
mov
sub
data16
or
iret
xor
xor
gs
popa
adcl
xlat
out
or
push
add
fsubl
sbb
adc
dec
xor
xor
mov
ljmp
cmp
fistpll
outsl
imul
pop
ja
adcl
test
stos
arpl
or
jae
sbb
movsb
testl
push
jae
shll
scas
mov
pop
cmc
rclb
les
sbb
xchg
jmp
aam
ds
pop
mov
inc
addl
lahf
sbb
movsb
lret
dec
loopne
aas
decb
jae
loopne
fisubrs
lret
pop
add
xor
int
outsl
test
jb
ret
adc
and
fbld
pop
daa
test
and
out
jns
flds
add
cli
jnp
sahf
mov
cmp
mov
call
test
mov
paddd
jl
rol
aam
lret
je
jns
adc
mov
pop
int3
add
out
mov
mov
and
sub
jecxz
es
std
ja
cmpsl
lods
add
out
mov
or
subb
je
leave
sub
xchg
xchg
or
dec
mov
jp
add
ja
and
and
adc
add
xor
mov
add
xlat
sbb
adc
fstl
mov
call
loope
or
add
lods
push
add
jl
push
jp
nop
adcb
cmpsb
add
into
out
push
mov
cmp
lret
push
adc
or
insb
or
shrb
push
push
add
fsubr
mov
push
jmp
mov
pushf
add
pop
push
ret
flds
mov
mov
xchg
add
pop
repnz
nop
mov
push
leave
loope
nop
nop
push
adc
pop
data16
repz
flds
fiadds
push
call
mov
scas
mov
inc
popf
add
add
push
push
pop
jge
lods
nop
push
pop
std
cmp
ja
cld
inc
fidivrs
fiaddl
out
outsl
fsubp
jne
out
pop
repz
data16
scas
sbb
fisubrs
scas
mov
xchg
int
push
pop
xor
dec
out
cmp
lds
and
neg
sbb
movsl
pop
pop
pop
fstps
add
mov
jge
push
mov
adc
sub
test
push
leave
es
ja
stos
scas
cmp
xor
lret
cmp
xchg
rcl
ss
xor
xor
sahf
pop
fstl
sub
int3
in
test
into
roll
cld
pusha
add
pop
jg
mov
inc
pushf
ja
or
aam
or
cwtl
es
stc
push
nop
or
cmc
ss
ss
leave
fdivl
mov
pop
cs
aaa
mov
out
mov
xorb
and
ffree
pop
add
js
jno
loop
dec
sbb
or
mov
mov
fnstcw
mov
push
sahf
imul
mov
arpl
mov
ds
xor
or
jnp
xor
xor
mov
bound
xchg
sahf
lods
pop
or
enter
xchg
or
ds
cmp
lret
in
xchg
pop
sub
lcall
mov
mov
popf
mov
mov
pop
stos
insb
xor
cmp
jp
mov
xor
ja,pn
fwait
adc
aam
mov
adc
fnsave
mov
push
mov
xchg
push
cmp
test
fisttpl
scas
cmp
iret
jb
cmp
test
mov
sub
fwait
imul
fildl
xor
sub
xchg
jnp
pop
ficoml
outsb
sbb
push
fistpll
pop
ljmp
push
gs
aad
cmpsl
in
out
fnstenv
repz
mov
jle
imul
ss
leave
sub
dec
mov
in
jae
mov
pushaw
fcoml
cmp
xchg
push
mov
sbb
sarl
sbb
xchg
mov
or
addb
cmp
cltd
lret
adc
jnp
mov
test
pushf
jge
imul
add
mov
cmp
das
cmp
add
pop
mov
addb
xlat
out
dec
ja
test
stos
cmpsl
fbstp
dec
loop
lahf
mulps
in
cmp
sbb
lret
add
cmp
out
jne
sub
cmpsl
pop
mov
mov
sar
scas
mov
cmpb
or
sti
sbb
jae
lds
mov
fmul
or
xchg
xor
outsl
ljmp
push
add
push
add
fcmovnb
cmpsb
jl
shlb
cmp
xor
mov
adc
inc
cmc
ljmp
ljmp
sahf
adc
inc
scas
hlt
mov
adcb
dec
jle
sbb
and
add
lea
fadd
ret
ds
cmp
les
ret
into
push
out
stos
and
mov
jmp
adc
mov
je
fidivl
in
push
loope
jae
jp
aam
jbe
or
xchg
xor
loope
pop
aaa
xor
pop
clc
add
jecxz
pushf
cwtl
push
inc
rolb
stos
or
dec
add
loope
mov
out
xchg
jp
cmpsl
int
and
ror
cmc
mov
daa
and
add
lret
sbb
mov
xchg
dec
fists
rcrl
xchg
fisttpll
cmpsb
xchg
iret
jbe
cmp
jae
pop
jecxz
cmp
mov
fidivrs
dec
js
jbe
insb
mov
inc
mull
sbb
pop
mov
dec
xchg
or
fnstsw
lret
adc
sub
es
movl
dec
ficomps
pushf
out
aam
mov
dec
int3
cli
aas
ret
mov
testl
sbb
jbe
jns
mov
sub
popa
je
jo
xor
sbb
test
xchg
lcall
push
fisttpll
inc
ret
jne
lods
enter
xchg
mov
flds
das
cmp
lahf
popf
js
add
das
push
aad
daa
enter
sahf
jbe
gs
loope
jb
repnz
push
cs
lret
js
adcl
mov
cmp
stc
sahf
push
add
sub
out
jo
int3
mov
sbb
cmpl
or
jb
pop
mov
les
lods
rcll
pushf
xlat
aas
cli
push
je
movsb
in
int3
xchg
fdivrs
jnp
repnz
dec
int3
jbe
and
ret
lea
sub
icebp
inc
andl
xor
mov
cmp
mov
sub
leave
jne
mov
jno
xchg
push
int3
insl
xchg
pop
mov
fisttps
pop
lea
inc
adcb
add
orl
aaa
xchg
inc
jl
adc
add
push
jns
jbe
subb
mov
call
mov
int3
fwait
xchg
mov
push
es
mov
push
out
jp
push
xchg
mov
mov
sbb
cmp
out
mov
iret
aas
jmp
xchg
inc
andps
cmp
js
dec
cld
hlt
jno
fistps
mov
insb
jb
shll
movsl
dec
dec
mov
xlat
xchg
sbb
js
decl
daa
mov
dec
add
mov
dec
sbb
cwtl
dec
mov
or
inc
dec
clc
xchg
inc
out
jle
add
mov
jp
cmp
gs
iret
add
sbb
int3
test
mov
inc
inc
push
loopne
push
das
cltd
mov
add
ljmp
movsb
orl
push
cld
addr16
inc
clc
sti
fs
lods
out
cmp
or
clc
jecxz
inc
adc
cli
lret
roll
pop
jns
aad
jge
lret
dec
ret
inc
dec
dec
rcrl
pushf
jmp
dec
adc
das
adc
and
repz
sbb
nop
jb
pop
ds
sub
bound
lret
fdivr
xor
xlat
stos
aad
repnz
sbb
sahf
loopne
shlb
loope
test
sbb
lds
icebp
test
mov
test
sbb
inc
add
jnp
mov
aam
aaa
add
and
sub
mov
push
imul
mov
fistpl
scas
int3
in
jns
pop
insl
shrl
and
inc
jns
pop
in
xchg
lahf
ud0
aad
mov
sub
fildll
cli
hlt
testl
sbb
adc
mov
mov
pop
shlb
xorb
jae
push
push
mov
add
shll
fldcw
cld
or
out
imul
cmp
scas
stos
adc
cli
test
mov
fwait
and
dec
mov
or
sub
stos
stos
mov
adc
push
pushf
rcll
sti
push
jns
sbb
cld
and
cmpsb
pop
loopne
int
outsb
and
xchg
aam
xlat
add
movsb
pop
in
or
mov
sbb
or
mov
in
inc
xchg
mov
add
dec
lret
mov
lods
fldl
ljmp
pop
pop
mov
out
push
xchg
test
subb
outsl
call
hlt
mov
mov
in
add
sbb
mov
imul
mov
sub
adc
negl
cmpsb
cli
and
mov
aam
inc
cmp
mov
sbb
loope
add
aad
lods
jmp
pop
push
sbb
or
push
push
cltd
aas
in
lret
iret
pushf
faddp
insl
insl
ret
popf
and
inc
addr16
push
sbb
sti
dec
xor
stc
jmp
int
popa
or
ljmp
stos
adc
add
pop
arpl
ret
and
cmpsl
push
pop
sbb
xchg
dec
sub
mov
test
push
insb
jb
stos
sbb
pop
push
popf
pop
jecxz
inc
sub
out
lcall
push
add
dec
sarb
cli
jno
mov
into
or
sub
mov
scas
flds
test
test
mov
adc
sbb
in
in
push
sbb
std
xor
mov
mov
adc
xchg
and
mov
push
push
xchg
xchg
cmp
and
pushf
mov
cmc
mov
adc
ss
jecxz
stc
xchg
add
in
rcr
push
popa
sub
inc
jae
sar
pusha
in
sbb
sub
data16
mov
mov
out
stos
fisubrs
jae
enter
lds
jns
daa
xchg
pop
inc
lds
fdivr
stc
ret
call
hlt
cmp
mov
aaa
in
pop
sar
pop
repz
repz
inc
repz
scas
mov
aad
rclb
and
fcoms
xor
xor
cmp
pushf
mov
fs
cmpsl
inc
sbb
shll
dec
inc
mov
inc
xchg
xor
jle
das
stos
out
fnstcw
sub
mov
call
and
jbe
leave
jae
insb
call
cmp
in
aam
outsb
cwtl
inc
adc
xor
movsl
sbb
insb
push
rcll
or
ret
dec
mov
xchg
and
lds
popf
dec
push
shr
pop
jle
and
shrl
jp
mov
outsb
insl
in
xor
inc
in
sbb
imul
inc
pop
push
je
cmpsb
aas
mov
and
mov
inc
flds
int
dec
mov
mov
repz
adc
dec
lods
xrelease
or
pushf
add
aad
sub
les
lahf
mov
rcrl
inc
pop
aaa
pop
andl
stc
clc
jns
push
repnz
adc
mov
mov
xor
mov
add
sbb
push
repz
dec
ds
cmp
lods
dec
repz
lret
fldcw
repnz
cmp
pop
clc
push
push
push
pop
cmp
icebp
aam
popa
into
in
ja
cmp
dec
push
cli
jne
add
xchg
xchg
pushf
int3
data16
ja
mov
jl
mov
lods
add
xor
pop
and
xchg
mov
sub
inc
insb
andl
push
dec
or
lgs
data16
xor
cmpsl
iret
add
loope
jmp
xchg
jne
dec
mov
test
fnsave
mov
pop
mov
aam
mov
in
in
call
loop
cmp
les
sub
int
and
xchg
mov
fsubl
in
xchg
mov
mov
js
orl
jmp
mov
jno
push
jmp
push
dec
jmp
loopne
ret
add
cmp
mov
in
xchg
jb
jp
out
fwait
ret
or
ficoms
repz
popf
mov
xor
in
popa
pop
mov
lods
push
add
and
out
test
pop
add
int3
lahf
xchg
fwait
sub
stos
or
push
in
pop
pop
mov
js
sbb
pop
faddp
mov
xor
jle
rol
rorl
pop
adc
pop
cltd
in
mov
push
bound
inc
bound
inc
push
ficomps
fiaddl
dec
icebp
cmp
das
mov
cmpsb
fstpl
xlat
jg
in
xchg
push
mov
test
push
or
pop
mov
adc
mov
or
js
cmp
subb
insl
xchg
pop
push
mov
push
xor
dec
inc
test
adc
test
jbe
aaa
jecxz
push
mov
loope
xlat
or
inc
scas
ftst
cmpsb
in
in
fsubl
out
jnp
dec
jecxz
push
fadd
scas
movsb
mov
out
pop
add
fsubs
sub
int3
cs
lods
adc
xchg
nop
push
ljmp
shrl
ret
enter
cmpsl
imul
mov
mov
iret
int3
ds
and
into
stos
loopnew
and
push
ficomps
xlat
xor
xor
inc
push
daa
and
xor
or
jmp
bound
sbb
jo
dec
mov
cs
iret
rcr
or
xchg
call
loop
cs
and
mov
lds
mov
iret
push
xchg
push
dec
mov
inc
lds
xchg
sti
stos
push
inc
pop
mov
xor
movsl
loop
xchg
ljmp
cltd
mov
cmpsl
cli
mov
mov
out
push
lds
mov
rcrb
ret
and
pop
jbe
inc
fdivs
add
push
sahf
and
scas
jp
fidivl
xor
insb
add
ret
jl
mov
mov
adc
dec
lret
addr16
xor
jae
lods
mov
cmp
adc
adc
fmul
dec
rolb
fidivs
nop
lods
iret
and
mov
ficoms
pop
and
mov
push
inc
jae
enter
mov
hlt
jns
jp
or
fwait
lret
std
mov
pop
sarl
rcr
and
or
lock
int3
adc
mov
bswap
pop
xchg
mov
jbe
gs
daa
bound
loope
das
es
rcrb
dec
int
pop
ret
movsl
xchg
mov
rolb
pop
ss
xchg
push
rorb
ds
mov
dec
mov
fmuls
mov
pop
cmpsl
adc
arpl
into
arpl
loope
jns
adc
sahf
iret
adc
test
int
xchg
cld
outsb
adc
dec
push
les
sub
lods
xchg
les
popf
xchg
movsl
jmp
dec
es
ret
dec
lahf
in
in
add
add
insb
test
std
sbb
in
sbb
mov
ret
adc
dec
inc
xchg
cli
hlt
stos
mov
xor
add
sbb
inc
push
and
insl
mov
mov
push
sbb
add
rcrb
dec
xchg
sub
xor
add
or
stc
fidivrs
push
movsl
mov
pushf
jmp
jecxz
sbb
mov
arpl
fs
mov
jge
sbb
and
xchg
mov
mov
pop
cmpb
scas
mov
test
rcl
scas
ret
pop
stos
test
out
sub
mov
jecxz
xchg
push
adc
enter
mov
xor
xchg
add
int
cmp
loopne
test
inc
and
jbe
stos
sbb
divb
aad
fidivl
mov
loopne
dec
cmp
pop
jle
cltd
and
jg
push
call
pushl
loopne
xlat
push
out
sbb
xor
imul
je
xchg
test
lret
outsl
inc
je
inc
insb
addr16
into
push
adc
mov
fnstsw
int3
jbe
adc
stc
xor
adc
or
cmp
jp
push
sbb
and
std
xlat
scas
lahf
or
jle
leave
adc
out
adc
cmpsb
xchg
add
mov
je
or
jnp
sbbl
out
rorb
adc
inc
cmc
stos
adc
sub
sub
or
jl
inc
pusha
cmpsb
jne
jb
lcall
mov
lcall
xor
int3
cmc
sub
jb
cs
inc
int
sbb
add
aaa
fisubl
imul
dec
fidivrs
adc
sbb
push
xchg
fucomi
fwait
aam
out
pop
pop
cltd
shrb
cld
lea
lret
push
hlt
subl
into
lods
aaa
push
in
cs
inc
xchg
call
test
in
adc
gs
cmpsl
pop
jg
jmp
popa
es
mov
and
mov
jle
adc
sub
jae
add
xchg
xchg
cli
mov
push
jbe
inc
xlat
mov
sarl
mov
mov
mov
mov
and
jl
xlat
mov
jle
dec
xchg
mov
lds
ret
mov
cmp
adc
cmc
inc
loop
in
out
js
fwait
lds
ret
push
xlat
jle
sbb
outsl
jmp
cmp
das
sti
ds
mov
mov
fimull
dec
jbe
or
in
mov
cmc
pop
fistpl
fidivrl
adc
int3
sti
xor
mov
imul
mov
adc
mov
sbb
xor
nop
shr
pusha
dec
add
call
sbb
gs
add
sub
adc
test
test
xorl
push
cmp
mov
mov
int3
mov
cltd
not
pop
or
in
lahf
xor
push
dec
cmpsb
inc
nop
aam
adc
add
jl
in
pop
xchg
sbb
pop
xchg
cmp
aas
mov
popa
inc
push
ficompl
xchg
cmp
insb
ret
sbb
xor
xchg
mov
and
nop
adc
and
pop
and
mov
xchg
xchg
mov
neg
cmp
add
lea
mov
idivl
mov
int3
loope
pushf
test
insl
push
push
sub
notb
push
push
or
pop
mov
sub
or
test
or
roll
pop
fbld
pushf
or
pop
adc
pusha
and
cltd
push
arpl
gs
jmp
shlb
imul
gs
xchg
cmp
clc
jp
inc
out
inc
and
mov
sahf
jle
rcl
sub
xchg
loopne
push
stc
or
xchg
sbb
or
add
mov
icebp
out
fldcw
and
cmp
outsb
in
sub
add
and
stc
in
clc
jnp
or
push
dec
xor
push
mov
mov
adc
add
mov
and
imul
lock
lcall
pop
mov
pushf
int3
xor
mov
imul
mov
shrl
repz
sahf
push
pop
adc
jns
push
shlb
mov
inc
sbb
lret
push
fwait
andl
xchg
mov
xchg
pavgw
cli
idivb
jle
stos
push
push
sti
repnz
cltd
pop
repz
cmp
add
cwtl
or
push
inc
mov
sub
sub
and
mov
sbb
popa
xchg
jbe
adc
sar
jbe
add
push
sub
lea
adc
jae
lock
andl
clc
push
stos
xchg
or
inc
jne
rol
ja
adc
icebp
loopne
aas
jb
jg
push
sub
cmp
fisttps
xor
and
stos
scas
pop
push
pop
jg
out
adc
dec
cld
add
out
pushf
imul
jg
pop
mov
jp
cmp
mov
inc
int
mov
rcl
cmp
xor
popa
scas
cmp
popa
sub
mov
popf
mov
sbb
or
dec
or
fdivl
cmp
jns
and
ficoms
in
lahf
or
push
or
adc
cmp
dec
jns
bound
lods
xchg
in
sub
mov
mov
pushf
mov
sbb
or
loopne
or
fisubrs
add
test
mov
jno
or
adc
and
out
addr16
outsb
fstpt
add
pop
je
or
cs
cmp
mov
test
ljmp
loop
pop
leave
jne
pop
mov
test
repnz
test
xchg
incl
push
cmp
or
dec
xlat
mov
clc
iret
out
ss
xchg
jbe
cmpsb
mov
or
int
push
sarl
xchg
arpl
dec
ret
xor
push
push
jge
repnz
rolb
mov
inc
out
adc
xchg
or
sub
jne
mov
xor
lds
cmpsb
pop
pop
xchg
into
cmp
lret
iret
cld
xchg
pop
ja
jbe
or
jb
mov
push
push
add
add
dec
mov
and
mov
das
add
dec
pop
or
lret
mov
mov
cmp
adc
mov
cmp
sbb
add
push
add
fldt
fdivrs
nop
jg
mov
xor
push
loope
push
test
js
or
ss
and
subl
and
cmpsb
adc
ss
jbe
jb
mov
jae
jnp
adc
stos
mov
mov
sub
nop
ljmp
movsl
lret
rorl
push
or
mov
mov
sahf
push
dec
insb
lods
mov
xlat
orl
movsb
mov
sbb
mov
xchg
je
aas
aam
es
stc
and
xor
in
cmpsb
outsb
inc
pop
pop
xlat
sbb
into
jg
movsl
sub
pop
xchg
inc
mov
int
mov
fildl
imul
adc
out
adc
mov
fimuls
aad
pop
push
ret
xchg
test
inc
mov
cmp
pop
into
arpl
pop
imul
pop
notl
cli
jl
or
outsb
mov
dec
mov
cltd
rclb
mov
gs
xor
rolb
loopne
nop
imul
mov
dec
lret
adc
popa
dec
and
mov
or
ror
dec
mov
add
jmp
jle
inc
inc
pop
and
mov
dec
in
lods
clc
daa
in
add
cltd
idivb
push
popa
cmpb
add
cmp
push
or
add
lret
out
inc
xchg
sub
mov
gs
jp
hlt
mov
mov
jae
jo
les
mov
lock
cmp
mov
shlb
mov
mov
adc
call
lods
ror
push
fwait
mov
fwait
mov
fcmove
into
out
mov
sub
jp
in
lea
or
dec
insl
sbb
or
mov
adc
pop
dec
or
ret
movsb
add
sub
add
cmpsb
dec
repz
xchg
sub
roll
push
inc
adc
outsl
stos
xor
adc
ret
jge
mov
nop
das
pop
repz
mov
and
fwait
dec
sub
roll
jnp
pop
call
cmc
inc
push
mov
sbb
sub
mov
daa
sub
inc
or
scas
aaa
dec
push
mov
out
test
insb
les
mov
lahf
mov
adc
adc
push
in
xor
dec
outsl
sub
cmp
xor
push
movsb
movsb
jp
hlt
insb
xchg
sub
scas
sbb
pop
push
jo
stos
andb
adc
adc
ret
imul
popa
inc
ja
and
pop
stc
xchg
frstor
call
mov
aad
jbe
sahf
imul
sahf
scas
pop
stos
add
cmp
cmp
outsb
loope
inc
enter
jne
in
push
ret
push
lods
out
push
jl
xchg
aas
push
push
fmul
stos
loope
leave
lds
insl
inc
sub
int
ret
call
dec
push
dec
xor
fldt
sbb
xchg
sbb
xor
and
imul
iret
cmp
cmc
pop
aaa
movsb
cmp
inc
mov
push
bt
fidivl
es
ljmp
fwait
adc
sub
inc
aad
or
test
sbb
cmp
and
movsl
out
sbb
loop
js
mov
pop
aaa
cmpb
and
inc
das
pop
nop
jns
inc
ss
pusha
pop
jmp
movsb
into
adc
mov
rorb
sub
ja
gs
xchg
das
stos
out
out
stc
sbb
dec
jp
inc
aas
xchg
out
mov
sub
out
jne
mov
fs
std
lcall
rcrl
mov
inc
ret
add
mov
inc
negl
pop
scas
mov
icebp
js
fildll
sbb
or
cmp
aad
xchg
test
mov
icebp
xchg
pushf
std
dec
or
in
outsb
cmpsb
adc
cmp
mov
ret
jmp
clc
ljmp
je
sub
pop
adc
lock
xchg
mov
popa
pushf
cmp
add
jp
xchg
sti
add
mov
add
je
sbb
movsb
sbb
cmp
ja
pop
cmp
and
push
aam
shll
xchg
push
lcall
mov
mov
xchg
mov
roll
icebp
pop
mov
mov
dec
inc
gs
repnz
mov
rorb
fdivr
in
lahf
mov
mov
sbb
xlat
inc
dec
jbe
mov
je
lahf
or
ja
scas
ds
out
mov
xor
shll
jno
test
nop
out
lds
dec
clc
inc
dec
mov
mov
jle
cwtl
lahf
rol
js
testl
movb
push
adc
push
gs
fcompl
lods
js
push
adc
sar
sbb
inc
pop
fld
inc
add
cmp
lcall
sahf
jp
push
jl
loopne
push
dec
out
pushf
cmp
mov
dec
daa
sbb
mov
jecxz
lcall
rep
out
pop
adc
in
xor
out
and
test
mov
mov
jl
pop
lahf
sbb
pop
or
cltd
shll
push
sbb
cmc
mov
inc
dec
and
jnp
insb
mov
mov
inc
mov
fisttps
aam
sub
push
and
pop
lods
bound
add
fwait
pusha
or
jb
mov
loope
pop
les
push
orl
sbb
movsb
add
lahf
and
sbb
mull
mov
stos
lods
jl
xchg
adc
negb
aam
jmp
xor
rcll
jne
mov
loope
xchg
dec
inc
dec
lods
out
adc
push
stos
pop
sub
popf
pop
insl
xor
dec
push
sbb
xchg
cltd
cmp
bound
or
in
leave
sbbb
in
fs
in
sub
sarl
loop
in
dec
xchg
adc
stc
cpuid
mov
incb
sub
mov
mov
in
sub
imull
in
rclb
loope
xchg
stos
add
sub
sub
movsl
in
outsb
mov
loop
out
out
push
rcrl
push
aaa
jbe
push
pop
adc
stos
fisttpll
ljmp
and
push
push
cltd
rcrb
fnstsw
nop
and
jg
xchg
jge
and
insl
bound
pushf
lret
cmpb
jno
and
les
dec
daa
lods
mov
or
dec
and
sbb
popf
fisttpl
add
fisubrl
push
aad
mov
cltd
ja
fcoms
xor
sub
mov
pusha
sub
jno
sbb
push
mov
out
add
call
out
mov
lahf
leave
test
mov
lock
add
into
xchg
sahf
test
test
push
mov
negl
adc
mov
fwait
mov
aas
mov
add
and
and
jmp
sub
jb
inc
insb
ret
bound
xchg
mov
pusha
test
mov
push
pushf
mov
xchg
cmpb
sbb
xchg
cmpsl
and
cs
fidivl
loope
adc
cmp
xlat
add
cmc
outsl
inc
icebp
xchg
outsl
sti
hlt
jp
aaa
mov
inc
mov
ss
mov
jae
xor
idivl
add
fdivrs
mov
call
adc
ss
mov
out
or
mov
or
sub
scas
loopne
inc
sub
enter
cmc
icebp
shrl
pop
in
cmp
cld
push
pop
or
fldenv
sahf
pop
cmp
test
hlt
xorb
dec
pop
cmp
cli
shlb
or
and
data16
push
aad
icebp
pop
sbb
or
mov
xchg
dec
pushf
decl
out
les
sub
xor
roll
cwtl
hlt
aas
shll
out
insl
scas
faddl
sarb
mov
in
and
xchg
iret
sub
jp
add
add
mov
dec
push
cs
out
call
scas
adc
push
in
mov
lds
sub
in
in
mov
inc
inc
jbe
jp
mov
mov
mov
cwtl
into
iret
sti
ret
ret
clc
aas
push
inc
std
xchg
mov
lcall
lret
mov
mov
sti
sbb
scas
mov
mov
and
adc
cmp
jb
mov
sub
jp
mov
or
cwtl
ds
mov
lds
mov
sbb
jmp
out
rcl
pop
pop
dec
dec
xchg
mov
test
test
dec
jl
pushw
aam
jmp
push
sbb
jb
or
std
or
xchg
lock
jns
orb
mov
jmp
xor
and
sbb
lcall
and
out
lods
mov
and
es
and
inc
data16
mov
mov
std
xlat
adc
push
pop
pushf
cmp
sub
pop
jo
xor
mov
sti
inc
push
clc
out
jmp
or
and
jns
xchg
test
xlat
popa
xchg
cmp
dec
dec
xchg
sbb
loope
aam
jns
jb
xchg
ja
xor
cmp
push
mov
addr16
pushf
pop
icebp
ret
sub
mov
cmp
js
testl
cmpsl
jne
rol
pushf
mov
lods
sbb
jl
cmp
add
and
jp
sbb
add
outsb
into
jg
stos
add
lods
hlt
mov
cmp
out
testb
push
push
je
sub
std
mov
sbbb
cmp
es
test
mov
adc
mov
or
popf
mov
inc
into
cwtl
mov
loopne
cmp
inc
push
loope
pop
and
pushf
aaa
and
push
add
ret
dec
xchg
ljmp
pop
jp
inc
jns
push
and
testb
ja
add
sub
mov
and
or
xchg
sbb
and
orl
stos
adc
sti
addr16
jne
xor
loop
loop
sbb
and
xchg
inc
cwtl
stos
sti
jle
std
jae
inc
cmp
sarl
push
adc
push
cmpsl
pop
lods
lahf
ljmp
fwait
sbb
dec
mov
xor
iret
sub
cmpsl
pop
mov
cmc
add
gs
popa
popa
dec
mov
mov
pop
mov
jnp
aas
clc
mul
into
les
aaa
insb
push
iret
push
mov
adcl
enter
mov
cmp
loopne
lret
das
sbbl
faddl
cmp
jl
jg
xlat
push
mov
cmp
inc
jae
call
int3
mov
sub
ret
mov
add
stc
icebp
fwait
mov
out
fldl
ret
xor
sub
or
clc
not
push
xchg
jnp
out
sub
je
dec
inc
inc
dec
mov
push
sbb
inc
add
test
ja
jl
jle
loop
cwtl
cmp
hlt
pop
cmp
cs
out
sub
mov
dec
in
inc
aaa
sahf
and
dec
xor
inc
or
imul
sub
ja
jl
addr16
mov
inc
les
and
lret
cli
pop
mov
mov
mov
add
add
dec
out
cmp
hlt
inc
add
pop
lret
out
das
cmp
int3
aaa
mov
lahf
pop
mov
popa
jecxz
out
lds
loope
movsl
sbb
xchg
in
jecxz
jno
ds
mov
pop
push
cmpl
cmp
push
enter
push
inc
xor
inc
sti
or
in
xchg
sbb
je
xchg
pushf
sti
gs
fcomps
cmp
lret
or
sbb
pop
sub
lahf
test
cmp
rcll
pusha
cwtl
mov
mov
int
fldenv
aas
fs
or
cmp
int3
adc
xor
xchg
push
cs
mov
push
sub
push
sbb
xor
jne
adc
mov
xor
pop
divl
adc
clc
adc
stos
cs
cmpsl
jle
sub
jns
or
sbb
sub
xchg
push
sbb
movl
sti
mov
or
out
daa
iret
adc
jge
lock
xchg
shlb
popf
cmp
mov
notl
shl
pop
xchg
stos
shll
in
inc
in
sahf
or
jge
call
popf
or
cltd
push
mov
gs
dec
adc
ss
sub
insl
dec
add
gs
mov
and
idiv
mov
xchg
insl
enter
sbb
inc
stc
into
out
mov
xchg
add
inc
jne
adc
jmp
cmp
pop
ret
xchg
fsubl
inc
ds
inc
dec
jmp
ds
add
std
dec
mov
jge
push
jno
mov
lcall
mov
popf
lock
call
mov
jl
cmpb
or
dec
or
and
mov
xchg
or
jl
rcr
test
movsb
roll
and
xor
and
jo
push
jo
mov
fstl
das
inc
push
adc
in
fistps
aas
mov
decl
pop
call
and
jp
gs
out
dec
sbbl
xchg
push
mov
add
pusha
add
ficompl
push
jb
xchg
mov
adc
lds
int3
mov
add
aas
pop
push
cmc
or
aaa
jmp
push
stos
insb
pop
inc
push
pop
add
fnsave
adc
stos
sbbl
shrb
or
jecxz
mov
mov
test
dec
pop
xor
push
xchg
test
in
sti
lds
pushf
dec
icebp
cmp
mov
inc
push
dec
pop
rcrl
fld
sbb
insl
cmp
cmpl
dec
or
outsl
insl
sub
adc
mov
add
insb
dec
test
mov
roll
adc
icebp
cmpsl
fsub
pushf
cmc
lcall
loop
adc
cmpsl
add
fists
inc
lret
mov
bound
gs
into
out
fcoms
xor
outsb
retw
pushf
adc
add
pop
add
cli
pusha
idivb
pop
push
push
mov
pop
shlb
push
lcall
jae
push
cmpsb
mov
adc
push
inc
pop
dec
push
jp
pop
lods
mov
xchg
mov
outsl
pop
fnstsw
sub
and
sub
and
stos
and
mov
jle
mov
out
sub
test
mov
jo
mov
imul
and
pop
sub
aam
mov
dec
xor
in
or
ficomps
fstl
jl
je
repz
sbb
adc
es
repz
push
mov
lcall
xor
xor
nop
add
cmp
and
notl
inc
test
push
pop
test
mov
ds
outsl
xor
fistps
jnp
dec
mov
or
test
aas
xchg
test
sbb
scas
push
sub
js
sbb
sbb
sub
push
mov
loope
cld
out
or
arpl
pop
mov
les
jnp
sub
mov
lea
shll
or
cmpsl
test
inc
cmp
popl
fdivrl
mov
cmp
cmp
adc
pop
ss
cmpsl
mov
xchg
cmp
mov
mov
ja
mov
add
and
pop
lahf
out
movsb
pop
sti
icebp
xor
add
or
and
out
sub
lock
test
dec
jnp
andl
or
outsl
push
rcr
dec
cld
lods
push
ss
cmc
mov
jp
mov
inc
outsb
lods
repnz
or
movsl
jmp
mov
mov
push
loop
jne
add
ljmp
mov
mov
cmovbe
les
out
test
out
in
int
sarb
cmp
mov
fisttps
popf
dec
cmove
jle
jo
cmp
popf
lods
inc
mulb
shll
hlt
dec
cltd
add
push
or
outsl
sub
sbb
adc
or
or
mov
or
ljmp
xchg
scas
jg
je
sub
mov
subb
xchg
push
inc
lods
adc
jnp
stc
push
dec
inc
xorl
test
or
shll
ljmp
stos
loopne
fidivrs
imul
js
mov
js
jno
mov
jmp
sub
cld
insl
pop
cltd
xor
push
mov
mov
jmp
adc
mull
cmp
js
clc
xchg
xlat
movsl
mov
aad
nop
out
data16
dec
pushf
test
mov
add
ds
lods
subb
and
and
mov
shlb
xchg
sar
mov
jae
addl
ja
and
fcoml
and
cwtl
add
mov
repnz
int3
aam
lods
jp
outsb
push
sbb
ds
addl
notb
stos
leave
in
mov
faddl
je
movl
adc
lcall
ja
sbb
sub
jns
ret
push
stc
test
lret
xchg
pop
jle
and
mov
lret
and
pop
loop
dec
nop
sti
sbbb
sbb
mov
pop
or
roll
rcrb
fisubrs
lret
mov
pushf
dec
sbb
stos
in
jbe
movsb
mov
push
inc
hlt
loopne
cmc
sbb
mov
pop
enter
mov
filds
jmp
icebp
nop
test
pop
out
jno
push
mov
insl
mov
or
adc
xor
pop
mov
stc
or
imul
lods
insb
xlat
sub
rcl
shrl
jbe
xor
adc
add
lcall
bnd
in
xor
mov
sub
inc
sub
insb
cli
pop
or
mov
push
sahf
pop
push
dec
push
mov
loope
mov
xchg
rorl
ficoms
in
cmp
lret
inc
sbb
lods
insl
push
pop
in
roll
lea
mov
shrl
pop
mov
jbe
jg
aas
outsl
imul
hlt
inc
cmp
push
and
pop
sbb
out
add
and
dec
jp
cmp
xchg
ret
setg
jecxz
mov
ret
cli
sti
lcall
lds
inc
jo
dec
scas
insb
inc
cmp
pop
cld
mov
insb
jae
and
dec
sbb
sub
push
cld
je
add
int3
test
add
mov
les
icebp
add
std
sub
imull
mov
push
xlat
xchg
xchg
mov
imul
mov
or
stos
je
fidivrl
push
sbb
pop
jns
pop
mov
lahf
xchg
imul
jg
jp
pop
neg
pushf
imul
xor
out
and
subb
xchg
out
mov
fistps
inc
stc
push
pop
or
das
out
js
cmc
pop
insl
jge
push
icebp
js
pusha
sbb
ds
loop
pop
pop
pop
mov
push
mov
push
enter
pop
stos
mov
loop
sarb
or
push
inc
xchg
addb
idiv
jecxz
jb
scas
mov
int
jb
xlat
test
mov
fadd
xor
cmovs
jno
ja
std
jo
fiadds
jbe
aaa
lcall
es
dec
sub
sub
pop
negl
inc
push
shl
add
mov
inc
xchg
arpl
ret
lock
into
jmp
xchg
movsl
add
lcall
loopne
stc
in
xchg
mov
inc
cmpsb
sub
push
movsb
sbb
cmp
frstor
aas
jmp
nop
pop
add
sahf
mov
xor
sub
xchg
fidivrs
pop
jns
movsl
cmp
push
mov
in
out
dec
inc
mov
lock
fbld
dec
into
lea
mov
scas
jbe
or
push
insl
adc
insl
outsl
xchg
pop
lahf
mov
cmp
jle
mov
lahf
in
call
loope
pop
or
push
push
arpl
clc
sbb
shrb
inc
js
stc
fsubp
mov
sbb
cmp
shr
mov
cltd
push
mov
mov
cld
shlb
mov
lret
or
stos
fnsave
xor
data16
in
jge
sahf
pop
and
push
pop
push
and
xor
jne
call
inc
out
cltd
ret
adc
jle
pop
test
lret
mov
push
lods
dec
mov
push
pusha
movsl
jns
cmpsl
xchg
sbb
rorw
mov
sub
cmp
lock
xchg
insl
in
movsw
mov
inc
adc
push
out
push
scas
inc
loopne
psadbw
xchg
adcl
add
adc
inc
sub
cld
bnd
in
add
popa
mov
fidivrs
xor
mov
mov
movsb
push
push
pop
popf
fs
pusha
mov
sbb
into
xchg
data16
xchg
test
movsl
push
iret
or
mov
ljmp
jp
cmp
scas
stos
fidivl
push
jp
fwait
in
fildll
lods
push
xchg
lea
xor
or
pop
loop
divl
push
fs
out
inc
ja
sbb
inc
out
insl
outsb
fimuls
out
stos
fimull
jge
adc
imul
inc
sub
pushf
dec
stc
adc
mov
stos
fcomip
cmp
clc
stos
cmpsl
in
testl
jg
push
inc
cmpsb
sahf
mov
or
testl
xchg
pop
lock
sahf
scas
adc
rcrl
in
or
jno
sar
stos
rcll
mov
das
or
sbb
adc
test
lret
bound
dec
sub
cwtl
imul
movsb
cwtl
insb
aas
xor
add
pop
adc
xor
cmp
mov
ljmp
hlt
dec
les
xchg
mov
mov
or
push
dec
bound
shrb
push
lret
ja
imul
xchg
lcall
outsb
enter
ds
sbb
jl
js
mov
shlb
aaa
shrb
and
push
or
or
in
addr16
push
pop
les
sbb
sub
push
mov
sarb
mov
cli
push
nop
pop
pop
filds
jmp
mov
xor
inc
mov
lock
push
es
mov
xchg
in
xchg
cs
mov
das
data16
fcmovnb
push
push
xor
ret
aam
fists
mov
fmul
pop
dec
xor
ja
dec
ja
mov
push
cs
lcall
fwait
sub
and
cmc
sar
or
fs
dec
iret
or
js
arpl
aas
and
push
or
clc
mov
aaa
gs
pushf
sub
mov
gs
mov
and
inc
cmc
int3
inc
and
sub
loop
dec
data16
mov
jle
lret
adc
outsl
pop
jp
pop
lds
xor
lods
xchg
jl
jmp
inc
dec
xor
and
sub
notl
repz
int
mov
jge
addb
cmp
or
mov
or
fldt
and
add
push
pushf
pop
pusha
xchg
out
lahf
dec
cmp
push
push
sarb
adc
sbb
cld
pop
cs
xorb
cmp
xor
out
sbb
shrb
push
add
jmp
lock
push
push
dec
cmp
in
rcl
popl
inc
test
sahf
cmp
mov
ficoml
lock
fbstp
std
stos
test
lcall
adc
in
cwtl
je
push
jns
lret
jmp
dec
ja
inc
sbb
fistl
mov
jo
jnp
mov
push
movsl
daa
pushf
dec
dec
inc
stc
jbe
data16
jo
lds
fisttpll
jge
shl
add
outsb
into
push
pop
mov
mov
leave
pop
ja
xchg
rclb
mov
pop
add
mov
inc
mov
call
mov
dec
icebp
pushf
xor
jp
xchg
pop
insl
push
sbb
ss
mov
and
inc
fwait
mov
dec
dec
popa
or
sbb
lock
int3
add
lods
mov
adc
jecxz
stc
clc
sbbl
std
xor
sbb
cmp
movb
inc
lcall
lods
pop
repz
pusha
add
mov
cli
bound
push
aas
xchg
mov
mov
jmp
out
shrl
pop
lcall
roll
fistpll
das
push
rcrl
aas
pop
jae
or
jmp
mov
pop
out
xchg
mov
insb
push
insb
rcrl
scas
cltd
gs
lahf
sbb
pusha
iret
xchg
cmc
pop
bound
xor
addb
sbb
sbb
stc
mov
pop
ja
ret
ljmp
std
and
mov
push
nop
in
inc
add
mov
push
inc
pop
sbb
xchg
rorb
adcb
out
cs
cmp
push
sbb
and
fimuls
add
lret
add
mov
or
jne
test
push
aas
jl
push
sbb
ja
mov
hlt
and
lds
or
icebp
add
cmp
jecxz
les
popf
sbb
sub
data16
and
mov
mov
sbb
sub
xor
jae
dec
sub
ss
pop
icebp
outsl
dec
and
inc
mov
cmp
mov
mov
imul
xor
xor
pop
jo
imul
mov
cmpsl
scas
mov
outsl
fisttpl
inc
pop
lahf
arpl
mov
imul
jg
xor
das
lods
push
cmp
sub
push
lea
jo
xchg
pop
push
loop
xchg
out
push
pop
imull
ds
cmp
and
pop
or
xor
mov
inc
mov
call
adc
data16
mov
out
mov
test
push
insb
cmp
cmp
fs
repnz
dec
cmp
add
mov
nop
ja
in
mov
jge
sarl
mov
lds
dec
inc
inc
iret
push
aam
push
jns
cld
insb
out
popl
or
pusha
dec
jns
sbb
lahf
int3
cwtl
adc
jl
mov
fs
cmp
ret
popa
mov
fimull
cmc
jne
push
cmp
mov
aad
rolb
or
std
into
jbe
xorl
pop
scas
mov
fidivrl
das
les
jg
pop
dec
push
xchg
pop
lock
sbb
pop
jmp
push
dec
bound
pop
inc
js
mov
iret
push
jmp
mov
scas
cltd
sbb
add
dec
and
add
adc
sub
push
out
je
lea
dec
dec
inc
cmp
inc
mov
xchg
mov
add
add
jb
enter
mov
jg
sbb
icebp
dec
in
xor
mov
and
and
ja
rcll
pop
sub
mov
in
in
ja
xor
cmpsb
aas
movsb
ljmp
sti
je
push
in
add
outsb
inc
push
mov
jmp
pop
mov
push
mov
xchg
mov
out
push
popf
in
test
rcr
mov
cld
mov
outsl
xchg
sub
enter
negb
incl
cmp
mov
pop
pop
mov
adc
int
ret
out
mov
pop
test
rcrb
jae
aad
shl
add
mov
das
rolb
mov
inc
nop
jb
frstor
xor
lahf
sahf
popa
loopne
xorl
fwait
inc
sbb
out
mov
xchg
subl
fidivrs
jns
cmp
addr16
scas
xor
jne
adc
repnz
addr16
or
cmp
xor
sbb
push
fdiv
sbb
lods
les
sbb
jno
sub
cmp
outsb
stc
and
and
mov
inc
or
repz
push
cld
or
push
push
hlt
sbb
mov
xchg
es
pop
das
sub
mulb
inc
add
lods
xchg
lods
jp
push
and
fnstsw
mov
scas
int3
jbe
jmp
inc
cmpsb
das
push
int3
mov
mov
mov
mov
sbbl
addr16
jne
push
movsl
dec
in
jns
movsl
ret
sbb
jle
push
adc
ljmp
mov
fistps
add
add
and
inc
mov
cmpsb
dec
dec
xchg
or
int3
leave
sbb
mov
mull
xchg
push
mov
andb
insl
bound
add
gs
in
shlb
pop
pop
stos
push
fchs
nop
add
shll
sahf
mov
mov
jo
out
and
pop
jbe
outsl
mov
pop
or
ret
jbe
mov
nop
xchg
mov
ret
push
cmp
jne
out
lock
push
xor
dec
inc
mov
adc
push
lret
adc
fs
and
jno
push
lret
stos
mov
int
sbbl
inc
mov
cs
xor
dec
std
mov
clc
int3
lock
out
inc
scas
movsl
fstp
repz
inc
mov
roll
mov
and
inc
or
mov
and
call
pushf
sbb
and
and
das
lea
popf
sbb
inc
add
pshufw
int3
ret
insb
cmc
imul
or
dec
loopne
bound
jp
loopne
scas
dec
jecxz
pop
and
iret
pop
fcomps
or
xchg
iret
push
mov
loope
push
addl
xchg
push
dec
imul
push
leave
std
xchg
enter
push
popf
bound
pop
sahf
jno
or
push
pushf
sub
adc
jecxz
mov
xor
and
das
xlat
or
sbb
imul
sub
cltd
push
ljmp
sbbl
idiv
out
jns
mov
test
dec
adc
subb
sub
inc
push
lret
mov
adc
scas
xchg
mov
int
add
xchg
in
mov
dec
adc
in
fucomp
add
push
fldenv
push
add
adc
push
pop
out
add
sub
or
jo
fstps
sti
dec
call
mov
mov
ret
test
aaa
lahf
ret
add
int3
xchg
cmp
ljmp
push
jle
scas
lahf
jae
mov
ja
add
mov
arpl
lea
stos
add
aam
cmp
and
pop
imul
sub
shufps
mov
dec
add
loope
pop
shll
ror
or
bound
out
xor
sti
mov
jl
ss
aaa
aas
push
insl
jmp
aad
insl
jg
popa
cmp
jno
loope
leave
xchg
or
dec
dec
mov
test
push
dec
jns
mov
xor
mov
bsr
ds
push
notl
push
sub
sub
adc
xchg
xor
rol
popa
aas
fldcw
scas
out
lods
pop
xchg
push
inc
dec
pop
icebp
jb
or
fmull
ds
leave
inc
mov
cmpsl
sbb
and
push
cwtl
xchg
rclb
pop
inc
into
lahf
aam
cmovae
testl
sub
push
das
jb
cmc
inc
imul
sub
inc
cmp
popf
sub
jp
sub
sahf
inc
pop
sbb
inc
push
aad
rclb
mov
addr16
in
cli
fdivr
test
xchg
in
pusha
jp
sbb
xor
inc
dec
mov
aaa
xchg
aam
xchg
out
push
imul
cmp
pop
sub
or
sbbl
sub
pop
repnz
dec
mov
nop
rclb
push
pop
xchg
or
cld
jecxz
xchg
out
sub
sub
push
outsl
fisubl
jecxz
jp
adc
fcomps
cs
or
rcrb
cmc
rcl
scas
aaa
adc
cli
pusha
test
xor
push
cmpsb
ss
mov
inc
and
icebp
loope
ljmp
movsl
xor
sub
lds
push
insl
or
in
sbbl
or
mov
cwtl
not
pop
dec
lea
stos
cmpl
xorl
mov
push
push
push
arpl
jp
shrl
xlat
arpl
int3
jae
imul
mov
dec
jae
lods
jg
orb
fs
aas
lahf
lds
push
pop
aad
inc
jns
fistpll
sti
xchg
mov
ret
pop
xlat
loop
jnp
sbb
inc
mov
je
adc
mov
call
xchg
sbb
pop
setle
and
pop
push
pop
mov
repnz
jbe
fcmovnu
or
inc
es
imul
mov
shlb
ret
in
movsl
add
cmpsb
movsl
pop
push
jno
xor
testl
fcoms
jb
ret
es
push
adc
and
lahf
lahf
push
push
aas
repz
push
ficompl
aaa
popf
or
and
adc
mov
xchg
int
stos
lea
fxch
push
add
jg
mov
pushf
fadds
jg
xchg
fnsave
push
sbb
sahf
sbb
xor
xor
mov
clc
jp
das
pop
jae
xor
out
loope
push
pusha
and
cmp
pop
aad
subl
cmp
out
cli
cltd
lods
pop
jo
sbb
sbb
jns
xor
popf
ss
hlt
jbe
inc
stos
sti
xor
add
shlb
sahf
ds
out
in
lret
pop
push
push
push
sbb
push
mov
cmp
fbstp
outsb
adc
xchg
inc
inc
push
and
inc
add
xor
adc
les
mov
pop
dec
mov
xor
pop
mov
scas
xchg
rcrb
aad
jnp
ss
imul
sarb
xchg
mov
push
in
mov
mov
or
aad
inc
or
fdivrs
lahf
jg
xor
shlb
inc
das
lods
xor
decl
xor
cmp
stos
mov
xor
adc
jb
sub
inc
jns
pop
pop
es
sub
jle
xchg
pop
fdivp
dec
adc
sbb
pop
adc
js
in
ds
dec
flds
dec
jo
adc
loope
movsb
test
inc
int3
in
mov
int
ja
das
fisttpll
mov
stos
sub
cmp
lret
push
xchg
ljmp
mov
cs
rorl
lahf
mov
fcomps
and
lret
push
mov
or
xlat
adc
fisubl
lret
cmp
cltd
adc
and
xor
mov
movsb
adcb
lock
aam
sub
cld
xchg
inc
aas
inc
push
nop
sbb
into
std
stos
mov
push
subb
pop
jb
sti
xlat
sub
sub
mov
shl
shr
lahf
mov
fmul
shrb
jecxz
clc
pop
push
mov
jmp
mov
push
push
int3
outsw
xchg
testb
lahf
divb
pop
in
sahf
stos
mov
xor
pop
sbb
xor
sti
and
in
sahf
movsb
je
mov
stos
bound
jnp
fisubrs
dec
out
sub
adcb
pop
jne
clc
daa
jb
js
adc
lcall
mov
and
aad
and
ds
dec
dec
gs
out
cld
out
ret
cmpl
insl
mov
pop
int3
sub
sbb
in
mov
pusha
sub
outsl
fisttpll
push
movsl
pop
fwait
cmp
adc
test
lds
mov
cmpsl
jecxz
test
mov
pop
cmc
das
shlb
pop
lahf
jecxz
inc
dec
pop
xchg
jmp
subb
and
pop
and
mov
sarb
jmp
push
sub
push
push
aad
fiaddl
adcb
sub
adc
inc
out
xor
popa
popa
je
ficoms
inc
add
xor
dec
jae
or
xchg
mov
and
inc
push
movsl
or
in
push
and
iret
rcrb
pop
dec
rorb
int
sub
xchg
pop
inc
push
xchg
sub
push
sbb
push
add
mov
jp
scas
fimull
push
rcll
sub
stos
out
jmp
movsb
mov
lods
and
inc
aad
ret
mov
mov
add
jb
cmp
mov
add
mov
mov
xchg
add
cmp
adc
mov
and
test
inc
popf
cwtl
sbb
xor
cmc
ja
cmp
or
fsubl
jns
nop
sub
dec
jle
or
mov
pop
jp
pop
push
inc
adc
mov
or
adc
mov
jo
mov
test
pop
jno
inc
popa
movsl
sub
push
shlb
xlat
adc
xchg
xchg
fidivrs
repnz
cli
pop
or
sbb
or
jbe
cmpsb
or
cmp
andl
das
cmp
in
out
enter
adc
sbb
mov
adc
cmp
xchg
pop
or
ja
lods
mov
in
xlat
lcall
in
inc
ja
test
mov
jmp
inc
cmpsl
repz
fcomps
insl
jg
fnstenv
pop
aaa
dec
pop
in
sub
les
out
xor
movsl
inc
sub
scas
lds
cmp
push
in
dec
lea
jge
std
lret
jnp
mov
shlb
daa
in
lcall
sub
mov
cmp
stc
les
insb
decl
test
dec
popa
jp
fisttps
ja
fcoms
and
adc
addr16
ja
aaa
mov
repnz
and
add
and
negb
push
inc
sub
add
cli
testl
insb
cmc
adc
fcoml
imul
xchg
jns
out
mov
mov
icebp
stos
lea
mov
add
jge
pop
sbb
push
imul
push
out
add
shlb
fldenv
add
push
adc
and
ror
pop
or
adcb
and
dec
mov
mov
test
pop
insb
fdivs
push
fmulp
fwait
add
sar
fsubl
faddl
stos
and
mov
push
jge
push
mov
mov
add
sub
xchg
aaa
pusha
mov
add
cmp
mov
popf
fwait
jp
aaa
outsb
lea
jne
test
mov
dec
leave
sub
jnp
adc
cmc
leave
xor
inc
mov
pop
out
fdivl
cmpsl
out
in
cs
nop
mov
xchg
xor
push
sbb
shrl
cmp
xchg
push
ret
sbb
addr16
cmp
out
cwtl
aam
into
cmpsb
fcoms
mov
cs
cmc
int3
xchg
imul
mov
jmp
and
rcll
sub
sub
add
subl
mov
push
daa
or
pop
push
or
xchg
callw
int
jnp
gs
lahf
repnz
stc
and
pop
adc
xchg
mov
fiaddl
jle
and
xor
or
and
out
test
popa
lods
pop
sahf
loopne
jne
and
xchg
imul
jae
int3
js
sbb
hlt
xor
mov
insb
mov
jae
inc
and
scas
je
xor
push
push
icebp
into
xchg
das
js
inc
pusha
ret
pop
dec
dec
or
sbb
jnp
das
or
test
xchg
fdivl
enter
stos
cmp
addb
dec
mov
sbb
and
int3
lea
lds
xchg
jg
lea
push
lods
pop
fs
out
stc
clc
movsl
aam
mov
rcrb
outsl
add
jno
dec
mov
mov
dec
mov
mov
mov
outsb
add
ljmp
cmp
sbb
mov
mov
aas
frstor
pop
or
xor
xchg
push
sbb
sbbl
sub
mov
push
pop
dec
mov
mov
push
cmp
mov
xor
cmp
push
aam
mov
push
mov
adc
inc
cli
jns
cwtl
repz
pop
lcall
repz
xchg
neg
or
add
daa
call
movsb
xchg
shrb
fwait
orl
inc
out
pushf
adc
add
xor
data16
mov
lds
push
call
sbb
lea
aaa
xor
das
lahf
test
add
xor
or
arpl
mov
mov
or
sti
or
sbb
mov
mov
mov
mov
mov
aaa
jns
test
xchg
lret
cmp
mov
pushf
cmp
or
mov
xchg
sbb
dec
scas
fisubl
leave
sub
jnp
push
add
rorl
in
pop
dec
sahf
or
adc
icebp
xchg
orb
lret
sbb
jno
sbbb
mov
adc
and
mov
inc
hlt
xor
lods
cmpsl
les
push
xlat
xchg
xor
test
mov
addr16
sub
jl
gs
xor
bound
shlb
jne
ret
lds
or
test
sbb
push
daa
test
add
insb
out
addps
xor
mov
or
adc
out
mov
adc
jae
cmp
imul
orb
cmp
pop
test
push
fldl
and
mov
xor
inc
mov
fisttps
push
lock
std
xlat
sbb
ret
mov
fldt
sahf
xor
es
inc
xor
fs
scas
out
mov
mov
jg
add
fnstcw
cmp
cltd
add
ja
dec
test
add
sub
xchg
ds
mov
in
dec
js
mov
lods
push
push
xor
sarb
jnp
pop
enter
sti
fsubp
inc
je
cltd
jns
xchg
jo
mov
dec
dec
imul
outsl
mov
push
inc
leave
add
in
cmc
sub
aad
lea
fisubrl
dec
dec
adc
ficoml
sbb
dec
imul
pop
cmp
cmp
jmp
inc
mov
in
cmp
das
cld
push
adc
cltd
outsl
fwait
ja
mov
popa
stc
scas
or
es
int3
test
pop
test
cmp
movsb
shll
mov
insl
adc
rorl
ss
dec
decl
ljmp
test
pop
mov
sti
xchg
popa
dec
outsb
cmp
and
fldt
dec
aaa
lea
jae
lock
push
push
sbb
loopne
stos
jns
push
mov
jge
sub
add
xchg
inc
imul
xchg
mov
imul
push
mov
jmp
aam
ljmp
xchg
mov
stos
cmpb
fldenv
movsb
scas
sbb
lea
outsl
popa
add
push
push
js
lock
push
xchg
imul
or
push
jle
dec
sub
shl
shl
pop
sub
popa
mov
pop
mov
or
popa
add
repnz
call
test
fadds
dec
mov
vprotq
scas
mov
cmp
jmp
dec
inc
negl
ret
xchg
imul
js
in
mov
push
test
mov
popf
test
fisttpll
lea
xlat
fcom
or
sub
push
insb
repnz
test
cwtl
rorb
inc
mov
sub
jne
xchg
jnp
cmpsb
in
jbe
dec
mov
push
enter
sbb
add
jo
add
test
jp
nop
movsb
xor
stos
fmul
or
cmpsb
sbb
imul
sbb
lock
adc
pop
dec
sti
addr16
hlt
add
xor
orb
add
inc
cwtl
mov
test
inc
jo
pop
xor
cltd
lcall
adc
inc
aad
jmp
pop
pushf
adc
xor
lahf
fdivl
out
arpl
lock
jge
jl
fsubs
jmp
xchg
pop
mov
add
mov
dec
loopne
cmp
jecxz
dec
mov
and
jge
int
pop
lahf
push
mov
cli
imul
jae
push
pop
ret
push
stos
push
int
pop
nop
mov
xor
ds
stos
fwait
and
sbb
push
mov
pop
push
out
mov
pusha
and
lock
and
inc
pop
out
fildl
daa
mov
fnsave
mov
fcmovnbe
xchg
sub
test
sbb
nop
je
dec
iret
mov
rcll
lds
push
rorb
cmpsl
xor
mov
ficomps
jmp
or
cmpb
push
and
aam
stc
arpl
add
ret
cmpsb
cwtl
es
lods
mov
mov
shll
bound
fcoml
ja
insl
jg
adcb
shlb
xchg
mov
cmp
aad
lods
xlat
dec
push
jge
mov
fwait
js
mov
adc
add
in
or
fisubl
cwtl
xor
sub
pop
cmpsb
sbb
in
jl
ja
adc
pop
addps
fsubl
adc
iret
into
pop
jnp
div
ds
xor
jl
lods
or
mov
cli
jg
add
cmp
fimuls
mov
or
dec
jge
repnz
data16
in
cltd
adc
das
dec
pop
inc
and
and
dec
loop
mov
fsubr
jns
cmpsb
xchg
cld
or
aad
repnz
mov
push
dec
jo
cmp
mov
xor
adc
lods
adc
jmp
mov
mov
inc
dec
xor
mov
std
test
adc
int3
jmp
or
scas
or
jae
ret
lea
mov
imul
mov
imul
outsb
adc
in
loope
and
inc
jp
das
cmp
mov
jne
sbb
jb
fiaddl
jnp
rcl
push
xchg
arpl
cmp
mov
cmp
notb
lret
rorl
inc
in
fildl
xlat
jecxz
popf
cmp
aam
scas
fsubr
jne
push
pop
or
iret
fsubp
js
rolb
loop
sub
lea
dec
pop
frstor
movsl
xchg
mov
nop
gs
in
ret
mov
add
sub
jns
sarl
mov
sub
cmp
fiadds
rolb
nop
dec
sub
test
xchg
gs
popa
shl
in
mov
jecxz
sub
or
dec
push
pop
mov
dec
sub
sub
mov
push
hlt
add
adcb
push
sti
inc
adc
mov
cmpsl
stos
in
add
sub
dec
cmp
test
dec
out
test
or
pop
jmp
std
cli
stos
or
jnp
in
and
pop
lock
add
adc
shll
aad
pop
xchg
add
outsl
push
jmp
ja
push
pop
cs
outsb
xchg
jl
or
sbb
sahf
sub
mov
loop
call
jbe
and
push
inc
inc
pop
push
fwait
dec
int3
icebp
rcrl
jmp
adc
nop
icebp
mov
dec
mov
dec
arpl
pop
pop
in
data16
call
mov
int3
repnz
aad
cltd
ds
and
sbbb
out
lock
imul
lcall
fwait
shl
xchg
mov
add
cwtl
jbe
fldt
shll
sub
jle
xor
xchg
pop
cs
sub
sub
rol
add
mov
dec
sarb
lret
cmp
cmp
dec
repz
bsf
jmp
test
loop
mov
fstpt
add
jae
out
fwait
loop
sub
dec
push
dec
push
sbb
outsb
test
mov
fcmove
lret
pusha
nop
shll
fistps
jns
xor
sub
add
cmpsl
jg
cmp
insl
insl
sub
and
fnstsw
out
adc
call
std
fstpt
cmp
xor
out
pop
inc
or
add
dec
xchg
cmc
xchg
sahf
enter
repz
sub
lcall
rol
xchg
std
xchg
cwtl
jge
inc
sbb
pop
mov
sub
jle
cmp
sub
or
inc
mov
cmp
cmp
mov
mov
mov
xchg
inc
aad
aas
adc
pop
cmp
popf
popl
sub
jmp
sti
in
aas
xchg
push
dec
or
pusha
mov
icebp
push
imul
xor
dec
dec
pop
jo
pop
test
adc
cmp
imul
pusha
popf
xor
adc
int3
insb
fistl
jge
cmpl
idiv
and
or
mov
test
aad
mov
mov
in
hlt
jno
mov
nop
out
iret
cmc
les
adc
cmp
shlb
or
cltd
insb
mov
stos
dec
movsb
mov
jo
sti
add
lcall
faddl
jae
sbb
xchg
sbb
mull
imul
cmp
jmp
icebp
and
or
pop
mov
lret
xorb
scas
or
mov
test
jae
and
pushf
sub
pusha
jg
aam
add
jmp
mov
lock
mov
inc
int3
sub
lcall
xchg
mov
adc
inc
scas
rol
lock
pop
push
cmp
rcll
or
push
sub
inc
add
addb
clc
xchg
shlb
out
xor
lfs
rclb
mov
dec
inc
mov
xor
pop
mov
mov
jecxz
sub
std
and
xor
icebp
testb
mov
jne
loop
cmp
outsl
sub
sbb
mov
or
iret
push
xchg
lret
imull
inc
leave
iret
add
icebp
lret
lock
jns
push
rcrb
insb
insl
cmp
mov
sub
xchg
xchg
push
repnz
movsb
and
out
push
push
or
scas
insl
clc
les
dec
lock
hlt
push
xchg
xor
jle
es
jg
outsl
orl
push
mov
push
inc
xor
xor
xor
sarb
mov
pop
adc
nop
mov
imul
cmp
in
push
mov
nop
inc
and
das
or
xchg
decb
lods
ds
push
test
pop
data16
sahf
adc
out
jne
push
dec
movsb
sub
repz
and
sub
inc
andb
lcall
cmp
add
hlt
jae
jnp
jp
lahf
or
repnz
cld
pop
or
shrl
arpl
xchg
data16
stc
out
xchg
iret
sbb
inc
test
or
push
push
xchg
pop
fmuls
adc
stos
js
xlat
sti
outsl
lret
insb
mov
out
nop
in
xchg
add
xchg
insb
es
jns
std
incl
add
adc
ret
sahf
sarb
jle
lahf
dec
imul
cmp
dec
incl
adc
dec
inc
es
jns
inc
mov
cld
pop
int3
inc
js
mov
push
repnz
adc
xchg
aam
and
cmpsl
test
mov
clc
or
adc
and
orl
loop
nop
test
mov
adc
dec
dec
std
ja
sahf
pop
std
test
mov
mov
test
scas
test
jb
out
loope
jmp
pusha
cwtl
and
rclb
cli
pop
cmp
add
pop
mov
mov
bound
and
xchg
clc
push
xrelease
xchg
or
inc
repz
sub
arpl
jno
jecxz
sbb
push
cmp
je
xchg
sahf
movsb
dec
cltd
shrl
fadd
pop
push
pop
jecxz
stos
lret
lock
cmp
push
cmp
in
sub
scas
loopne
jp
std
mov
repz
pusha
insb
dec
and
sahf
mov
and
scas
rolb
adc
jnp
jecxz
add
lods
pop
sbb
cs
mov
adc
lods
xor
mov
ret
dec
push
in
imul
and
push
adc
dec
lret
mov
clc
inc
fisubl
and
push
inc
pop
mov
push
and
xchg
sub
and
mov
ret
icebp
xor
dec
fisttps
aad
jo
dec
push
push
cmp
xchg
sbb
add
lds
decl
push
insb
fistpll
int
and
ljmp
jno
cmp
enter
adc
jae
pop
mov
xchg
pop
add
pop
xlat
jb
jle
dec
xchg
in
push
inc
xor
mov
mov
aaa
sub
outsb
push
sub
jae
sbb
out
movsl
xor
pop
in
pop
insb
inc
inc
add
dec
js
and
or
es
int3
pop
and
sbb
ljmp
sbb
out
push
jecxz
imul
out
mov
lcall
mov
in
jnp
ret
sahf
push
aam
inc
mov
add
repz
adc
dec
aad
mov
pcmpeqb
pop
push
arpl
clc
mov
popa
jbe
fdivp
inc
lods
mov
pusha
add
mov
dec
iret
xchg
rol
sahf
psubsw
call
xchg
cmp
cmp
jns
rcpps
sub
xchg
jnp
jecxz
outsb
jno
cli
xchg
mov
sbb
stos
setnp
js
inc
inc
xlat
shrl
call
repnz
std
adc
xchg
ljmp
aaa
fidivrl
les
fs
adc
popa
scas
jo
insb
ljmp
sbb
loope
loope
std
sti
sti
insb
cli
dec
jo
xor
push
push
xchg
shl
mov
daa
mov
mov
pop
mov
mov
sub
push
aas
inc
mov
jl
push
icebp
mov
test
vpsrlw
push
add
adc
insl
push
mov
ja
and
mov
sub
incl
clc
push
sbb
jae
inc
lret
cs
mov
inc
int3
adcb
in
iret
rcr
pop
and
movsb
xlat
imul
jnp
pop
fisttps
xchg
ss
and
mov
xchg
js
push
mov
sub
jb
jnp
mov
push
mov
rcr
cmpsb
test
mov
je
xchg
inc
push
ret
scas
outsl
shl
push
rcrl
lds
cwtl
jp
bound
fucom
sbb
add
mov
fadd
fwait
xchg
jecxz
mov
in
fcomps
cmp
pop
rorb
iret
add
iret
jo
sti
lock
int
adc
fcompl
or
xor
dec
jmp
insb
adc
dec
sbb
inc
cmp
mov
int
add
or
and
addps
sti
in
xorl
push
and
or
and
es
cmp
or
rcr
inc
xchg
ja
cmpsb
mov
popf
mov
sbb
dec
push
pop
imul
inc
mov
jl
lock
mov
pushf
sbb
mov
mov
data16
jo
lea
inc
sbb
gs
jbe
sbb
xchg
xor
arpl
in
jmp
subl
mov
and
cmp
adc
test
xor
int3
insb
xor
fwait
aad
test
mov
into
fistpl
inc
mov
mov
cmc
mov
mov
fs
mov
movsl
hlt
inc
push
jno
mov
sub
adc
loope
push
pop
inc
mov
and
loopne
jno
sarb
push
out
sbb
or
jecxz,pt
imulb
cmc
push
lret
cmpsb
mov
mov
adc
adc
sub
jno
xor
fs
inc
icebp
mov
fwait
jo
jmp
mov
fistpll
mov
xchg
xlat
test
mov
jb
dec
data16
popa
dec
add
iret
sub
dec
mov
inc
jns
dec
dec
push
lret
xchg
fmuls
sbb
iret
sti
scas
add
fdivrl
out
adc
sbb
lcall
addr16
insl
xor
in
lcall
push
std
outsb
fildl
sbb
movsl
ss
into
mov
rolb
rolb
out
loopne
icebp
cwtl
mov
mov
data16
mov
push
push
sub
enter
pop
leave
jl
pop
shll
leave
and
adc
outsb
loop
push
mov
pop
lods
in
adc
rolb
xchg
mov
sbb
ljmp
mov
and
stc
cs
daa
xchg
psllq
pop
shll
inc
jo
cmp
lods
adc
repnz
rcrb
mov
xor
aam
xchg
sub
jbe
mov
ds
sbb
sarl
mov
ljmp
lret
mov
insb
pop
mov
cli
and
dec
into
xor
push
add
push
fists
mov
jge
sti
mov
inc
xorl
pop
enter
sbb
mov
push
lcall
pop
cmpsb
mov
ds
stc
sbb
test
pop
mov
and
pop
decl
cwtl
xor
in
or
add
inc
mov
fnstenv
push
push
dec
pop
mov
adcl
cmp
popf
pop
adc
enter
add
nop
pop
mov
pop
into
push
push
push
sub
cld
stos
and
dec
inc
push
sub
add
fsubrs
inc
mov
or
push
jnp
cmc
add
mov
push
out
pusha
jne
xor
scas
mov
mov
movsb
jle
cwtl
je
hlt
and
test
imul
sub
pusha
mov
sub
ss
mov
test
outsb
fisubs
inc
out
popf
jns
sub
jae
mov
int
pop
aad
pop
imul
mov
pushf
ficoml
outsb
adc
icebp
pop
test
or
lret
jbe
xor
rclb
lret
push
inc
xlat
jo
inc
lea
jg
mov
dec
ja
ror
add
sub
jle
sti
ljmp
out
fsubl
in
add
std
lcall
xchg
mulb
mov
jae
inc
jbe
jo
fdivrs
imul
mov
inc
add
push
inc
in
bound
inc
inc
outsb
push
xor
in
push
and
cwtl
add
mov
fst
daa
cmp
rorl
or
adc
inc
sub
jb
dec
insl
mov
clc
int
dec
pop
pusha
aad
scas
into
pop
sub
and
and
or
cmp
cmpsb
arpl
loope
idivb
repz
mov
mov
cs
cmp
movsl
adc
sub
loop
rcpps
fsincos
iret
mov
out
or
jns
sub
add
in
mov
cmc
push
data16
fstps
jno
jne
jno
cmp
mov
jmp
lds
jp
mov
mov
in
dec
imul
fcompl
push
inc
in
mov
loopne
sbb
adc
testl
pushf
leave
sub
mov
ds
out
xor
inc
popl
and
jns
mov
aam
xchg
imul
cs
in
out
out
dec
cmp
ret
mov
pop
cs
inc
mov
lock
dec
cmp
je
sub
cmc
jle
ret
pop
jne
sbb
inc
out
testb
xchg
xchg
test
daa
cmp
js
fildll
fwait
sub
jns
dec
fwait
ja
pop
xchg
xlat
adc
out
ret
fmull
adc
inc
dec
and
fimull
mov
mov
stc
sbb
dec
xor
dec
add
xchg
in
sbb
mov
ja
cli
mov
pop
adc
mov
ret
out
sub
inc
js
and
cmp
out
jnp
and
roll
sbb
mov
es
mov
pushf
fcoms
popf
add
movsl
mov
push
pop
mov
xor
hlt
xor
jne
cs
adc
jbe
mov
sarb
push
mov
cwtl
aaa
pop
and
inc
data16
stc
pushf
jle
and
inc
hlt
das
jno
xchg
pusha
jnp
ja
int3
jl
mov
out
inc
jb
push
add
testb
stos
xor
inc
decb
add
xchg
je
cmc
rorl
push
sub
mov
gs
mov
dec
je
loope
mov
mov
inc
std
and
push
sub
xchg
lret
mov
jle
inc
push
xchg
pushf
mov
push
test
fwait
lods
sbb
pop
std
ljmp
pushf
loop
lock
cmpsl
insl
mov
and
xor
lea
std
les
push
xorb
test
cli
outsb
jge
insb
cltd
jmp
jae
push
movsb
and
daa
push
jp
xchg
dec
dec
test
push
mov
mov
rolb
rcll
jp
and
mov
sbb
dec
in
cmpsl
lea
lret
cs
dec
add
addr16
mov
mov
lea
cmp
mov
xchg
adc
pop
add
in
dec
add
mov
push
loope
xchg
sub
jmp
push
or
loope
push
fwait
and
mov
jo
icebp
mov
jbe
icebp
sbb
pop
or
sbb
jl
xorb
mov
scas
push
cmc
mov
push
movsb
cmp
js
mov
lret
push
arpl
stos
xor
subl
lods
jae
mov
push
pop
notl
xchg
xchg
out
out
je
cli
movsl
sbb
and
adc
into
andl
gs
pop
ljmp
lods
outsb
mov
sbb
or
lret
or
jo
jp,pn
cmc
out
mov
sub
mov
lods
pslld
into
lds
aam
add
stos
dec
mov
gs
mov
push
xor
mul
xor
mov
pop
dec
into
push
call
mov
push
xchg
jge
push
dec
out
iret
sub
das
push
mov
scas
jmp
lret
popa
cltd
setg
jbe
ds
scas
cmp
mov
movsb
pop
outsb
popf
ss
add
popf
sub
lahf
adc
incb
fs
into
or
sub
push
and
mov
xlat
pcmpeqb
jge
inc
lret
leave
push
test
add
sub
xor
aaa
fld
fcoms
jbe
sub
ss
jne
add
aaa
ret
nop
cld
mov
bound
xor
sub
push
xchg
add
mov
stos
add
nop
push
cmpsb
jne
test
lretw
cmpsl
fdivl
dec
leave
fidivl
out
jae
lahf
and
mov
lcall
lret
in
in
mov
mov
and
mov
mov
xchg
dec
jecxz
lahf
into
jno
push
fisttpll
aas
jbe
mov
int3
xchg
inc
sarl
xchg
test
push
inc
jbe
xchg
sbb
outsb
and
inc
in
arpl
adc
inc
xchg
mov
add
mov
xchg
jae
cmp
scas
lods
inc
cmp
jnp
test
pop
mov
cwtl
loop
icebp
add
jne
add
ret
jl
add
sti
call
movsb
and
dec
repz
or
push
insl
or
stc
stos
popl
js
jle
adc
outsl
xlat
add
shll
push
nop
and
push
rcrl
xor
or
lret
adc
dec
adc
add
fsubl
loopne
lret
mov
sbb
cmp
fildl
mov
xchg
test
lcall
or
push
lcall
fildl
jp
add
cmpps
push
aas
out
jnp
lret
xchg
arpl
mov
mov
hlt
push
repnz
or
fsts
inc
mov
add
lock
divb
aas
cli
popf
inc
lret
mov
sbb
jae
jnp
jmp
mov
add
out
das
ja
or
push
enter
mov
fdivs
sbb
xchg
pop
jp,pn
movsl
mov
sbb
pop
pop
mov
cmp
jnp
shll
ret
arpl
imul
jge
lret
jns
or
shl
std
jmp
leave
jge
xor
xorb
dec
pop
jnp
sub
cmp
rcrb
shll
jecxz
imul
and
repnz
jg
push
pop
jmp
imul
dec
pop
dec
mov
outsl
popf
iret
and
shl
jg
add
popa
xchg
sbb
or
jecxz
or
shrl
cmpsl
imul
or
fldcw
mov
cmp
aad
pop
xor
and
clc
cltd
pop
imul
mov
jge
jp
jbe
add
pop
push
std
jo
movsb
mov
push
dec
mov
movsb
and
mov
jae
rorl
sbb
pop
lahf
mov
xchg
and
sbb
mov
adc
xor
loopne
jne
mov
and
ficoms
adc
pusha
imul
cmc
xor
mov
or
jno,pt
pop
cmp
mov
cmp
imul
nop
jmp
inc
rcrb
cmp
es
mov
roll
adc
jle
dec
lret
shl
inc
fistl
xchg
mov
lret
loop
data16
mov
popf
ss
arpl
adc
hlt
cmpsb
jle
outsl
subb
cmp
jl
jnp
inc
pop
jnp
mov
add
stc
fs
mov
sub
push
out
pusha
mov
xchg
add
jp
add
ds
ljmp
push
xor
or
cwtl
pop
in
outsb
dec
push
cmp
lret
jns
sbb
loop
cltd
adc
push
ljmp
mov
jle
xlat
addr16
iret
mov
mov
fisttpl
inc
mov
sbb
cltd
ds
pop
aaa
mov
les
pop
pop
aaa
jmp
iret
fisttps
add
int3
fbld
cmpsl
and
adc
bound
in
mov
cmpsb
add
add
xor
outsb
jo
loop
jbe
addl
daa
mov
lods
and
mov
std
ja
jg
flds
dec
sub
aas
mov
insl
scas
or
dec
jge
or
stos
mov
cmp
cltd
add
inc
adc
mov
lcall
aas
cmc
jle
popf
inc
popf
push
or
lods
popf
inc
and
les
push
jns
int
imul
push
push
jp
jg
xchg
and
sbbl
fiadds
int3
sub
inc
loopne
mov
decb
fs
and
stos
repz
sub
lds
pop
inc
inc
xchg
sbb
and
ret
daa
cmp
fidivs
push
cmpsb
xchg
jb
arpl
arpl
mov
rclb
dec
xor
xchg
scas
clc
pop
dec
dec
push
cmp
sub
inc
out
xor
shlb
inc
and
lds
fiadds
jae
adc
ss
push
aad
pop
dec
sbb
ficoms
pop
inc
pop
or
repnz
add
fldcw
cmp
pop
gs
adc
or
jns
pop
cmpsb
pop
int3
sub
out
std
pop
enter
lea
or
xchg
pop
xchg
mov
aad
dec
push
popl
mov
sahf
cmpsl
adc
push
inc
fsubrs
test
mov
mov
enter
popf
rcr
jbe
dec
mov
add
or
sub
cmp
mov
stc
and
aad
fmuls
xchg
xchg
outsb
xchg
arpl
dec
mov
cmc
mov
out
stos
repz
xor
pop
push
imul
add
mov
xchg
cmp
imul
pop
mov
shl
loope
or
jnp
sub
pop
pop
adc
ret
pop
jmp
sti
movsb
aad
sbb
jbe
pop
rcr
test
pop
xor
jg
xlat
mov
fldt
fcompl
push
dec
and
int3
and
push
mov
jne
sub
mov
mov
lds
test
pushf
enter
sarl
in
jnp
cmp
or
push
xchg
testb
les
lret
mov
pop
jle
movl
fs
clc
pop
xlat
sti
add
pop
jns
loop
icebp
cmp
mov
jne
pop
orb
pop
mov
xor
stc
sbb
loope
adc
inc
xor
and
rorl
movl
mov
xchg
mov
lods
negl
mov
jge
ret
push
add
mov
mov
sub
shll
popa
call
out
add
popa
loope
cmp
pop
popa
cmc
in
sub
imul
xor
pop
shll
das
xchg
cmpsl
mov
sub
xor
iret
inc
gs
mov
fucomp
dec
frstpm(287
push
add
pop
pop
add
sbb
jnp
cli
sbb
pop
bound
mov
mov
push
or
push
sbb
lea
repz
fsts
arpl
stos
out
jecxz
mov
fsubr
outsb
fs
aam
dec
pop
lods
lret
cmpsl
fistl
mov
add
or
ret
dec
out
mov
int3
sbb
cmpl
adc
dec
pop
xchg
imul
jo
fcmovnbe
pop
mov
in
insl
inc
mov
jl
addl
lret
orl
cmp
sub
lcall
jns
ljmp
into
rcl
pop
and
scas
dec
stos
shlb
and
insl
inc
push
addr16
mov
repz
adc
mov
adc
or
or
push
daa
enter
div
jp
dec
xor
xchg
sahf
xor
out
lods
popf
es
xchg
out
mov
or
xor
std
or
dec
jp
mov
in
push
sub
mov
fst
xchg
shrb
cmp
pop
jg
test
sbb
jne
test
dec
leave
jecxz
sbb
sbb
enter
and
jbe
xchg
mov
lea
mov
push
xlat
sub
inc
sub
enter
xlat
sahf
insb
imul
std
movsb
test
call
lock
iret
xchg
jne
fwait
inc
hlt
push
mov
dec
std
cmpsb
in
subb
leave
lret
pop
mov
and
xchg
cltd
push
xchg
xor
in
or
adc
in
pop
jl
cs
fst
jbe
mov
out
mov
or
mov
mov
and
sub
jle
out
iret
lods
adc
stc
jne
data16
mov
aas
lods
cmpsl
faddl
push
mov
xor
pop
call
push
mov
pop
push
push
xchg
cmp
rcrb
mov
sbb
or
mov
jle
mov
push
and
arpl
push
pop
jbe
mov
or
nop
pushf
push
sub
xchg
daa
pop
ret
push
mov
pop
push
popa
insl
lahf
add
and
outsl
cmpsb
push
cmp
mov
xchg
call
add
push
stos
imul
pop
incb
sub
dec
xchg
repnz
cmc
std
incb
scas
fstp
sub
add
dec
ficomps
add
add
sbb
xor
ret
jmp
jmp
call
shr
cs
xchg
ficomps
add
inc
push
lret
stc
nop
xor
test
push
data16
cmpxchg
or
test
test
ret
mov
or
dec
loop
xor
dec
mov
and
fld
add
push
xor
loopne
loope
mov
mov
mov
fmul
aas
push
cmpsl
jne
push
movsb
icebp
jne
popf
mov
ja
daa
outsl
push
adc
jmp
leave
inc
sub
ret
pop
neg
popf
mov
adc
adc
and
stos
xor
scas
lock
out
fidivs
stos
or
shr
loop
xor
lret
mov
out
xchg
shlb
in
out
imul
das
xchg
adc
scas
das
ja
in
mov
mov
mov
and
pop
mov
mov
fcoms
pop
decl
daa
rcrb
inc
dec
dec
jae
sub
add
imul
out
push
bound
insb
scas
inc
lock
mov
pop
mov
lret
push
jle
sub
and
daa
lea
jns
cwtl
mov
dec
pushf
mov
inc
sahf
or
lea
out
xor
mov
movb
outsb
cmp
mov
ds
sub
or
cmp
pop
add
and
call
pop
je
mov
test
sbb
mov
jne
rcll
movsl
je
ret
jp
test
or
push
pop
mov
lods
cmc
nop
aad
push
ret
dec
jge
jne
pop
xlat
inc
mov
mov
mov
dec
lea
lret
add
adc
addl
fbstp
aas
ja
cmp
fstps
pop
sub
cmp
xchg
pop
lret
and
data16
notb
mov
mov
pop
lea
sbb
inc
xor
jl
xor
sahf
fsubs
adc
mov
jae
or
fmull
lea
sub
xchg
add
add
xor
rolb
insb
movsb
and
lcall
sti
pop
jecxz
xchg
push
sub
stos
push
inc
iret
shl
and
fdivrp
and
mov
sub
out
inc
xchg
cmc
ja
movsb
fadd
in
mov
repnz
mov
push
xor
je
imul
stc
pop
es
das
pop
pop
push
arpl
addr16
vandnps
adc
mov
fs
sar
orl
mov
movsl
aaa
imulb
stos
sbbl
dec
repnz
pop
enter
aam
ret
and
dec
cmpsb
inc
loopne
or
movsl
sbb
pop
mov
cmp
push
jbe
loope
ret
movsb
mov
imul
fidivs
jae
push
inc
mov
pop
sub
fldcw
cmp
mov
fisubs
nop
testl
sti
push
mov
shr
mov
pop
add
push
fwait
js
loop
imul
add
or
add
addr16
sub
or
jmp
out
mov
or
pop
or
mov
ret
or
into
add
inc
outsb
sub
call
rcrb
fdivr
lock
adc
mov
xlat
inc
jbe
pop
xor
jns
imul
mov
popa
cmc
jnp
stos
mov
rcl
xchg
cwtl
ljmp
call
xlat
mov
repz
fistpll
or
icebp
jecxz
out
jg
mov
sub
arpl
mov
xor
jg
repz
fistps
data16
or
mov
or
inc
sbb
bound
mov
shlb
out
mov
fcmovbe
out
mov
pushl
xchg
mov
xor
pop
in
sbb
dec
mov
lods
fs
fmul
dec
imull
jnp
lods
mov
pop
jecxz
test
testb
pop
add
xchg
and
xor
test
xor
add
inc
sarb
dec
sbb
setp
test
push
dec
hlt
movl
pop
fisttps
les
lret
push
cltd
mov
icebp
xor
push
ret
push
jno
inc
aaa
push
sub
adc
test
fwait
push
xor
popa
add
xchg
xchg
jmp
scas
ss
lahf
insb
and
mov
hlt
mov
inc
cltd
sbb
sub
loopne
test
cmpsl
push
repnz
dec
call
push
cmpsl
dec
dec
movsl
sbb
gs
and
sbb
lret
lds
loop
roll
sub
jg
push
ss
push
sub
lret
repz
mov
pop
xorb
lret
incb
mov
mov
and
push
lods
sti
enter
mov
test
jbe
aaa
xchg
std
bound
inc
sub
aaa
fimuls
inc
jns
cwtl
dec
inc
sbb
lds
cmp
ja
and
cmp
jo
adc
in
fisubs
fdivl
popa
rorb
fistpl
fwait
sti
addl
or
pop
cmp
movsl
add
push
mov
xlat
dec
ljmp
es
push
cs
bound
fidivl
cmp
lret
xor
in
xor
inc
push
jb
fwait
pop
mov
hlt
pop
sbb
int
sbb
cmc
jl
mov
fcomp
fnstcw
icebp
jmp
into
mov
pop
mov
mov
imul
pop
out
imul
std
aas
ja
rorb
movl
test
xor
ror
cs
cltd
inc
add
daa
nop
mov
and
arpl
dec
fs
or
jnp
sub
lahf
cmpsl
xchg
lods
dec
fs
mov
and
insl
out
jne
push
pop
or
int
sbb
int3
or
push
mov
dec
fnstenv
pop
pop
js
sub
add
sub
in
cmpsb
lock
lcall
dec
dec
jmp
mov
imul
mov
add
and
or
push
jl
data16
pop
adc
sub
cmp
test
repz
add
bound
jp
add
shr
jge
dec
popa
fiadds
loop
lods
jo
les
bound
adc
out
out
push
mov
dec
out
ljmp
call
sub
iret
xor
sub
ret
jnp
cmp
xor
fsubr
stos
dec
pushf
sbb
sub
mov
xchg
fucomi
mov
loop
pop
xchg
mov
xchg
mov
in
cmp
mov
insl
repnz
pop
arpl
ret
cli
clc
xor
and
les
loopne
push
xor
jle
pop
clc
push
loope
xchg
xchg
xlat
sbb
mov
sahf
pop
or
xchg
je
jecxz
lret
insl
mov
stc
add
jne
lds
push
or
and
inc
dec
hlt
fidivs
mov
and
or
ss
ficompl
repnz
or
sbb
xorl
fwait
jle
ds
add
dec
sub
jmp
xrelease
mov
cmc
daa
movsl
popl
sub
rep
movsb
sub
mov
test
dec
into
icebp
push
xor
scas
jbe
es
mov
fidivs
mov
lds
iret
stos
sub
rcr
subl
add
jae
ret
inc
push
mov
into
js
movsb
pop
bound
repnz
stos
aaa
inc
jns
rol
ret
adc
mov
incb
dec
push
mov
jne
cs
sub
inc
xor
push
sub
addr16
xchg
enter
and
fnstcw
out
or
fdiv
call
repnz
ljmp
mov
jp
repz
lods
mov
test
pushf
fadds
mov
imul
mov
loop
out
jno
popa
movsb
fimull
call
rorb
insl
lcall
push
adc
mov
ja
mov
xchg
test
insb
les
or
mov
ljmp
mov
cmpsl
xor
iret
das
pop
cmpb
jbe
pop
xlat
cmp
das
out
push
xor
in
movsb
add
push
rcl
arpl
mov
inc
jp
pop
bt
int3
xchg
popa
lds
adc
andl
div
dec
arpl
cmp
test
scas
sarb
shrl
inc
mov
insl
imul
les
cmpl
outsb
dec
hlt
movsb
pop
xor
lock
mov
ss
in
push
lahf
cmc
jle
cli
adc
lock
sub
sti
jns
add
dec
jo
in
cli
mov
decl
pop
and
mov
and
icebp
sub
sar
lea
outsl
dec
xor
fisubl
mov
inc
xor
jecxz
mov
stos
add
test
out
cli
sbb
jns
jbe
mov
sbb
dec
je
je
int3
push
mov
mov
in
test
sahf
bnd
dec
mov
pusha
addr16
cs
scas
out
mov
sbb
lea
sti
pop
outsl
nop
pusha
lock
dec
and
fimuls
movsb
push
shrb
stos
out
fiaddl
std
sahf
push
mov
stc
ja
shlb
pop
fidivl
aas
mov
jns
cmp
adc
jg
insb
pusha
sbb
jg
mov
inc
rcl
ficoml
movsl
or
jne
sub
subb
push
xorl
popa
xlat
mov
push
xchg
inc
repnz
xchg
or
pop
jl
sbb
daa
cmpsb
mov
cmp
cmp
in
mov
mov
addr16
stos
pusha
jle
enter
mov
out
insb
dec
push
cltd
and
in
pop
mov
inc
cs
xor
sub
stc
inc
jno
ficoms
add
adc
xchg
inc
les
enter
pop
call
sbb
mov
fisttpll
mov
stos
aaa
subb
adcl
fdivrs
inc
les
shrl
pop
dec
push
mov
rorb
pusha
inc
or
rclb
in
and
vunpcklps
cwtl
mov
insb
vpshad
dec
ss
adc
pop
pusha
dec
add
cmp
cmp
dec
and
daa
pop
andl
xor
or
jl
or
sti
fldcw
cmp
dec
ljmp
sbb
or
out
dec
mov
rolb
jnp
inc
adc
add
cmp
mov
jbe
jno
lods
mov
movsl
stc
stc
pop
push
jp
enter
movsl
cmp
or
xchg
cmp
test
hlt
sti
add
sbb
out
icebp
fisttpll
ss
int3
or
dec
aas
mov
rclb
mov
cmp
cli
pop
or
mov
into
jmp
outsl
clc
sbb
rcrb
mov
adc
in
jmp
ffreep
movsb
gs
mov
push
mov
xchg
repnz
mov
pusha
jo
int
fwait
jns
add
sti
xchg
mov
sti
mov
scas
push
into
cmp
xchg
ds
sbb
jns
or
lret
test
sub
aad
jo
mov
mov
add
xchg
inc
add
shll
jge
cmpsb
dec
dec
mov
hlt
push
or
mov
shlb
outsb
cmpsl
xchg
cmp
cmp
orb
imul
outsl
mov
and
push
insb
gs
push
cmpsl
mov
adc
lret
pop
popa
jne
enter
pop
lods
push
jecxz
out
fmul
mov
inc
arpl
fidivl
jp
pop
je
inc
mov
jbe
push
dec
mov
mov
gs
jne
out
clc
dec
or
addr16
sarl
loopne
leave
bound
sti
lret
or
test
inc
out
pop
outsb
and
xchg
inc
xchg
sbb
mov
scas
adc
rcll
pop
aaa
rcrb
cmp
cmp
xor
add
fsubs
lret
pop
and
add
jl
outsl
sub
test
pop
push
inc
mov
loopne
inc
out
clc
pusha
mov
lods
not
sbb
ss
xlat
aaa
dec
in
add
pop
push
cmp
or
pop
leave
xlat
and
das
fdivr
fnstenv
add
inc
aad
add
jbe
into
cltd
repnz
pop
mov
pop
add
daa
xor
pop
inc
sub
mov
cmpl
pop
pop
mov
aad
cmp
xchg
mov
cwtl
aaa
jb
cwtl
fsubl
pop
jbe
lcall
jb
inc
dec
jp
cld
push
ret
fs
mov
imul
or
and
repz
sub
or
sub
aas
sub
push
call
sbb
mov
jl
mov
dec
hlt
ja
lock
jp
in
daa
xor
fcmovnbe
sarl
cmpsb
orl
fdivl
dec
push
imul
stc
fldt
inc
or
sbb
push
mov
add
pop
outsl
mov
dec
xorb
inc
out
shr
dec
or
and
nop
or
mov
xchg
push
xlat
jbe
rcl
sub
add
xchg
fistps
lea
xlat
inc
les
push
sub
sbb
aas
mov
xor
xor
shll
cmp
in
leave
xor
cmpsb
bound
clc
sub
push
inc
push
jmp
sahf
cmp
outsl
cmp
inc
jne
dec
sbb
insl
and
push
aam
add
pushf
push
fisttps
aam
adc
idivl
aam
aam
jle
adc
out
mov
jns
jmp
push
and
ret
das
fiadds
xchg
dec
adc
mov
sub
std
cmp
sbb
movsb
repnz
pop
push
cmp
loopne,pn
mov
or
xchg
mov
test
nop
pop
mov
jge
push
mov
cmpsb
ss
scas
and
lret
mov
xchg
aas
mov
mov
mov
jno
cmpsl
or
mov
jb
pop
movsb
mov
push
iret
dec
xchg
rclb
scas
push
mov
bound
movsl
mov
dec
test
add
sahf
or
scas
and
pop
push
or
sbb
mov
xchg
popl
xchg
xor
scas
mov
das
adc
cwtl
mov
and
lret
cmpsl
gs
imull
cmpsl
mov
mov
loop
adc
add
pop
test
push
sub
andb
mov
and
scas
scas
inc
mov
push
jne
mov
dec
mov
test
push
dec
xor
lret
cli
xor
je
scas
mov
adc
xchg
adc
xor
fdivl
add
inc
push
push
push
add
mov
ds
push
mov
xchg
adc
sub
nop
lcall
test
and
in
jnp
sbb
callw
push
xchg
scas
or
in
pop
dec
mov
enter
lret
std
mov
ss
fistpl
xor
dec
rol
jae
fisubrl
mov
pop
fwait
mov
lcall
jg
xchg
pop
push
dec
and
adc
and
addb
test
shlb
cmp
out
pop
cltd
pop
and
or
test
or
inc
rep
out
inc
aam
icebp
sbb
xor
fildl
sti
mov
leave
adc
lcall
cmpsl
cmp
mov
adc
jecxz
bnd
outsb
loop
ret
sbbb
ljmp
pushf
stos
mov
mov
cmp
add
jg
shll
sbb
es
xor
shlb
iret
insl
ret
cmp
dec
mov
mov
test
clc
ds
sub
mov
imul
cmp
add
mov
add
sti
jle
mov
cmp
inc
sub
pop
or
ret
les
lcall
int
dec
fistpll
lds
pop
jp
daa
out
dec
popf
and
mov
fs
xor
nop
jge
fcomps
stos
inc
fisubrs
push
aam
in
stos
popf
loopne
lret
test
call
xchg
out
div
icebp
push
adc
into
mov
cmpsl
xchg
into
xchg
js
aaa
sub
in
cld
fsub
lods
rorl
sbb
jbe
enter
mov
stos
std
mov
in
add
gs
pop
jp
repz
je
insl
ret
popa
imul
int3
push
shr
loop
adc
jnp
adc
push
fildl
ficoms
lret
out
es
add
lahf
test
jmp
add
inc
cmpsb
mov
es
cli
les
and
gs
or
push
inc
lea
lcall
fucom
xchg
add
jae
push
das
cmove
xor
int3
or
repz
jmp
test
add
mov
shll
ja
xchg
das
fadd
and
xor
cmpsb
adc
sub
jle
xor
imul
in
xor
rolb
in
out
lea
push
mov
sbb
lods
dec
insl
inc
jl
outsl
out
daa
test
xchg
test
mov
rorb
push
or
in
pop
in
test
mov
push
push
mov
sbb
sub
aad
xchg
mov
cmpsb
mov
adc
pop
sti
xchg
ret
in
push
adc
fnstsw
xorb
out
hlt
pop
dec
dec
adc
push
mov
test
les
mov
fmull
lret
cltd
pop
add
rcll
arpl
fdivr
mov
inc
stos
cmp
faddl
add
sti
pop
stc
push
filds
inc
jns
xor
aas
sub
pop
push
aas
in
movsb
test
xor
jne
lret
shlb
adc
and
iret
out
adc
cmpsb
aaa
scas
cmp
mov
inc
stos
pop
add
je
xor
sti
fldt
ficompl
jns
or
cmp
or
cmpsl
sub
inc
pop
mov
add
push
push
les
xor
dec
loopne
js
cmp
loop
lods
xchg
mov
sar
pop
seto
mov
mov
lea
adc
pop
or
add
enter
lock
ljmp
in
jg
add
out
pop
cmp
fs
scas
test
sahf
bound
push
dec
push
inc
outsb
loope
jno
jecxz
dec
es
dec
mov
jns
sub
pop
in
jbe
inc
xor
add
repnz
and
adc
adc
sub
rcr
clc
bound
xor
mov
movsb
dec
and
into
add
jns
loop
cmc
jbe
in
dec
imul
xor
inc
mov
push
xchg
setae
xor
aam
movsb
lcall
movsl
in
xchg
pop
mov
imul
bound
inc
and
rcll
lahf
push
xchg
add
test
gs
cltd
stc
sbb
sahf
adc
dec
test
mov
arpl
push
or
aaa
clc
mov
loop
xor
daa
cmp
repnz
inc
jle
mov
pop
jp
je
in
rclb
and
jb
nop
pop
std
stos
test
mov
jmp
data16
cmp
inc
adc
xor
or
mov
mov
int
call
fs
into
pop
jnp
inc
inc
in
pop
jp
shrb
lock
jmp
mov
or
movsb
inc
sbb
lcall
pop
scas
xchg
push
dec
xchg
mov
mov
in
sub
xchg
int3
add
xchg
shrb
cmp
je
xor
dec
cs
fwait
popa
xor
icebp
pop
popa
push
in
xchg
pop
shlb
cmp
mulb
ljmp
inc
pop
sbbb
jmp
fucomp
push
sahf
mov
jo
add
call
popa
fsubl
pop
in
inc
loop
divb
mov
mov
jle
mov
in
pop
lea
cld
sbb
push
divl
jmp
pop
xlat
cli
roll
add
int3
rclb
sahf
pop
sub
xor
mov
lret
popf
xchg
in
pusha
pop
mov
lods
push
fstp
inc
decl
and
dec
adc
sti
bound
fcompl
lods
add
and
cmp
stc
jb
jmp
mov
cli
mov
arpl
roll
hlt
in
in
jns
jg
enter
arpl
add
push
rcrb
jg
sbbb
sbb
insl
add
pop
in
or
or
xlat
push
jl
xor
bound
shl
add
cld
mov
adc
dec
clc
mov
test
sbb
movsb
fimull
adc
dec
aas
popa
add
add
push
cmp
add
and
loope
push
cmpsl
push
push
jae
mov
mov
addr16
aad
push
out
je
pop
sbb
add
popf
icebp
inc
cmp
xlat
out
cmp
and
inc
push
sar
dec
mov
cs
out
dec
or
inc
jg
fnstcw
lock
sbbb
jo
in
sahf
jbe
pop
popf
cli
or
inc
hlt
adc
pop
shlb
add
push
or
cmc
in
cmp
rcrl
lret
addb
jp
and
repz
insb
or
sti
dec
movsb
cmp
pop
das
hlt
in
pop
leave
mov
sbb
sub
and
popf
nop
out
push
fiaddl
jmp
push
lock
cmp
imul
pop
lea
mov
jle
jmp
arpl
push
xor
adc
push
test
push
adc
push
daa
insb
test
movsb
mov
dec
loopne
enter
fdiv
mov
xor
movl
insb
outsl
or
sbbb
and
lret
icebp
leave
and
and
pop
and
movsl
jecxz
or
inc
notb
aam
jnp
push
xchg
pop
and
sbb
rcr
hlt
jmp
xchg
dec
repnz
pushf
add
add
mov
lods
stc
cs
jns
rol
xchg
ret
inc
ret
pop
into
push
xor
add
push
out
mov
dec
xlat
mov
cmp
inc
pop
sbbb
dec
outsl
push
cmp
scas
and
test
xchg
dec
mov
mov
or
mov
inc
sub
mov
das
xor
pop
sbb
aad
or
add
lds
mov
add
clc
fadds
mov
push
and
fnstenv
hlt
flds
push
dec
adc
outsl
or
es
adc
jmp
shlb
emms
jne
add
dec
xchg
pop
adc
push
dec
or
aas
lea
jno
sbb
and
cli
push
mov
xchg
add
insl
imul
aam
inc
repz
movsb
xor
insl
sub
pop
scas
push
not
rcl
insl
fstpt
jp
inc
clc
repnz
xor
neg
cmp
mov
les
ficompl
aam
pop
mov
in
inc
sbb
jle
cmp
sbb
andl
mov
adc
cs
dec
clc
cli
and
leave
dec
inc
xchg
inc
les
sbb
inc
push
adc
mov
or
push
mov
pop
iret
fimuls
arpl
mov
jmp
stos
add
sbb
pop
mov
inc
dec
pop
outsb
pop
xor
mov
sbb
inc
xlat
test
in
fbstp
out
das
loope
and
cwtl
pushf
popf
push
push
lret
out
scas
arpl
scas
in
jge
inc
out
xchg
mov
cmp
and
rclb
popl
add
jle
shlb
data16
mov
mov
mov
aas
popf
and
lock
and
arpl
andl
and
cwtl
sub
je
adc
push
and
inc
ret
push
push
out
mov
fsts
test
add
dec
xor
int
cmp
out
sti
dec
mov
inc
adc
mov
and
int
mov
repz
xor
xchg
push
jle
adc
add
mov
outsl
and
jg
ss
pop
hlt
lret
or
fs
arpl
push
cld
hlt
xlat
mov
mov
mov
dec
mov
inc
push
icebp
inc
repz
mov
xchg
sti
inc
push
insb
or
mov
pop
ret
shlb
jge
data16
fildl
ret
jge
lcall
lock
sbb
movb
test
cld
lock
or
out
add
mov
inc
test
add
push
sarb
popa
mov
mov
idivb
xchg
mov
out
adc
push
fsubl
stos
imul
xchg
cltd
pushf
call
aas
jmp
mov
js
notl
ds
adc
je
xchg
or
dec
aam
aad
sub
clc
xlat
sub
ds
xorb
sbb
dec
test
dec
imul
out
and
jmp
mov
lds
mov
push
mov
imull
pop
or
stc
stos
flds
mov
dec
cmp
mov
cltd
add
sub
push
add
dec
test
sbb
xchg
mov
incb
stos
lds
dec
pop
and
adc
sub
mov
dec
mov
xchg
call
push
pop
sbb
or
test
dec
aaa
repnz
test
push
mov
and
jmp
add
mov
mov
test
enter
mov
mov
adc
int
inc
xchg
out
in
aas
cmp
hlt
ficoms
xor
mov
jns
xlat
stos
shlb
loopne
das
pop
add
aaa
aas
and
jecxz
leave
lods
sub
mov
lods
and
adc
jae
in
xor
or
iret
outsl
push
js
mov
imul
hlt
int3
mov
movsl
mov
lea
mov
sbb
add
or
stos
mov
loop
xor
nop
sub
mov
inc
jo
mov
mov
sub
cld
cmpsb
or
and
stos
sbbb
mov
in
push
sub
xchg
popf
ds
mov
add
lds
call
mov
repz
dec
insl
xor
xchg
jns
inc
je
sbb
xchg
mov
inc
addl
jge
pushf
outsl
std
adc
ljmp
aad
sar
lret
in
sub
jns
test
nop
sub
jae
cltd
lret
hlt
inc
roll
lock
sti
cmp
xor
cltd
lret
sbb
pop
or
test
mov
add
push
sti
stos
pop
jae
sub
mov
cmp
cmp
jge
xor
pop
in
scas
mov
iret
out
bound
cmpl
fcomps
jne
scas
mov
push
push
dec
pop
loopne
hlt
cmp
adc
add
fs
mov
adc
jge
nop
xlat
je
stos
and
je
mov
insb
jns
incb
pop
stc
sub
shr
jle
mov
jp
dec
xchg
or
mov
dec
sub
cmc
xor
pop
add
js
sbb
and
mov
imul
push
cmp
ret
dec
fcomip
in
scas
subl
rclb
xor
cmp
or
icebp
and
fcompl
push
repnz
jns
mov
lods
mov
movsb
or
nop
inc
inc
sub
adc
sbb
popf
jns
mov
dec
mov
decl
arpl
xchg
jno
shl
das
pop
mov
fneni(8087
sbb
stos
cmpsb
repnz
adc
sbb
xchg
shrb
or
push
push
ss
lock
adc
sarb
test
xor
aas
outsb
jbe
inc
call
sbb
scas
sbb
lods
mov
dec
mov
outsl
xchg
cmp
pop
ljmp
addr16
and
cmp
mov
imul
cmp
add
fadds
xchg
aas
je
insl
sub
cmp
shll
stos
push
data16
inc
pop
and
push
jae
cmp
sbb
ja
pop
add
cld
push
mov
fisttps
adcb
push
in
imul
fadds
mov
jp
add
aad
or
or
fistps
and
push
cmpl
inc
notb
sahf
xchg
mov
jb
adc
cwtl
inc
out
dec
fwait
scas
mov
orb
lods
bound
roll
mov
pop
push
vmaskmovdqu
fincstp
test
fdivrs
push
xor
aad
cmp
popa
sub
test
sbb
out
sbb
fwait
lret
dec
push
push
filds
lods
aas
je
sbb
sbb
xchg
add
xchg
inc
jp
xchg
stc
lret
stos
xchg
jnp
fdivrs
in
shll
add
pop
insl
stc
jnp
dec
push
xchg
es
fimuls
scas
or
cmp
or
inc
rclb
and
jne
push
adc
out
sbb
pop
sub
xor
loopne
jge
adc
fdivrl
scas
js
pop
nop
mov
xchg
mov
repnz
in
dec
sbb
dec
xchg
push
mov
xor
lcall
dec
pop
lods
je
dec
andb
push
pop
lahf
pop
inc
iret
scas
sub
sbb
je
cmp
jp
mov
xchg
adc
or
mov
test
jnp
pusha
xchg
pop
xor
lods
mulb
shlb
in
dec
cwtl
xchg
sub
mov
mov
xor
enter
pushf
ret
sti
cmp
cltd
lcall
loop
ret
nop
xlat
jnp
mov
stc
or
outsb
xchg
xchg
jmp
pop
and
repz
xor
sub
pop
or
dec
sub
int
pop
loope
cmc
mov
clc
in
out
push
cmp
mov
orb
xchg
pop
jecxz
push
es
or
std
imul
xchg
mov
mov
and
jae
aas
rcrl
test
and
sbb
push
jl
sub
mov
push
ss
add
fstpt
std
or
jecxz
jecxz
adc
or
sqrtps
into
rolb
adc
andb
jge
stc
add
fcompl
sti
and
push
fistpl
das
mov
stos
push
inc
ffree
and
mov
sahf
dec
shr
ds
push
pop
and
iret
loopne
cmp
cltd
pusha
mov
fwait
xor
push
mov
mov
ror
add
jnp
fs
xchg
insl
mov
cld
sahf
add
int3
lret
adc
mov
mov
lret
div
aad
in
repz
or
pop
call
imul
xchg
sub
out
mov
cmp
adc
test
cli
mov
xchg
jl
jns
lahf
mul
idiv
imul
cwtl
jae
cld
xchg
mov
jmp
call
or
mov
loopne
lea
fstpt
cli
dec
inc
insb
lcall
daa
sarb
mov
or
sbb
lea
sbb
pushf
xchg
and
movsl
push
mov
jl
xchg
andb
test
jmp
mov
lea
mov
mov
xchg
push
push
pop
lret
lcall
test
mov
mov
add
push
push
fdivrs
xor
sbb
mov
cmc
cltd
bound
pop
jbe
jp
jo
mov
adcl
scas
jp
test
jl
int3
fs
je
fisubs
sub
stos
in
cmpsb
in
dec
adc
push
test
pop
and
cmp
rcr
xor
jo
xor
xchg
sub
les
bound
sbb
pop
inc
test
cmp
nop
inc
cmc
adc
test
stc
lock
mov
jnp
loope
mov
into
scas
imul
pop
pop
enter
jae
mov
mov
lock
mov
jne
xchg
pop
sbb
fs
fstpt
outsl
mov
dec
sarb
sbb
cmp
sub
jle
rcrb
mov
jo
jo
jno
xor
mov
xchg
inc
sub
lock
adc
pop
fistpll
add
inc
das
sahf
ds
xchg
fdivrs
pop
into
test
push
and
add
xchg
imul
lods
mov
adcb
outsb
mov
scas
sarl
jns
fucom
out
cmp
stos
sbb
sbb
sub
les
inc
pusha
nop
mov
push
push
push
xlat
pop
in
jae
sbb
jo
dec
iret
daa
xor
mov
cmc
popf
cltd
shr
push
inc
popa
outsb
enter
push
add
ds
push
lock
xchg
stc
call
enter
jg
pop
sbb
sbb
or
ljmp
adc
sub
pop
and
popa
sub
sbb
dec
pop
push
mov
imul
fsubrl
rclb
movl
dec
lea
jo
lods
call
add
fiaddl
push
loopne
xchg
inc
movsl
and
movsl
insb
jl
inc
xor
fadds
imul
xchg
ret
cltd
sub
and
cli
shlb
lods
adc
mov
sub
insl
mov
inc
out
jno
or
out
in
or
xchg
cmp
mov
jmp
add
pusha
dec
jecxz
cmc
and
mov
add
mov
popa
cmp
stos
jge
lds
sub
mov
in
jecxz
adc
cltd
push
das
sahf
mov
jno,pn
pop
orl
adc
inc
mov
addr16
les
mov
pop
inc
sub
push
testl
insb
push
fsubrl
scas
jl
xor
fdivl
jae
pop
sarb
inc
test
jnp
lcall
xor
push
mov
pop
xchg
in
dec
inc
add
test
movsb
jb
inc
nop
pop
lods
lret
dec
cli
and
inc
sub
rcrb
imul
or
or
insl
sub
sbb
loopne
jl
mov
and
call
pusha
js
lds
bound
leave
scas
mov
insb
rclb
ja
inc
imul
aas
cmp
xor
sub
das
mov
rorl
xor
adc
fcompl
dec
cli
xchg
push
ss
popf
xchg
cmp
adc
xor
ds
pop
sbb
lret
mov
pop
in
sbb
pop
std
insl
mov
test
xor
fcmovbe
addl
mov
out
mov
dec
mov
jne
jl
addl
lret
loope
scas
es
add
and
fiaddl
xor
cli
jb
movsl
or
inc
add
addl
push
outsl
mov
inc
ja,pt
sbb
cmp
sbbw
pop
push
sbb
stc
faddl
mov
jge
pop
cmp
add
cmpsl
outsb
jl
mov
fsts
jno
test
mov
adcl
movsl
ljmp
dec
cld
cmp
loop
lahf
ja
lock
stos
add
fcomp
mov
adc
stos
imul
test
xor
jae
pop
cli
inc
lret
pop
add
dec
les
jge
and
ret
notb
and
cltd
test
mov
lahf
jle
pop
xchg
push
hlt
sub
add
fcoml
xor
test
and
or
pop
pop
push
int
mov
adc
test
out
jmp
notb
adc
add
mov
out
sub
addr16
mov
aam
mov
js
jno
sub
inc
cwtl
popl
cli
test
pop
lret
sbb
sub
xor
sbb
inc
fldcw
and
and
mov
sbb
ljmp
fsubl
scas
in
adc
dec
add
jb
pusha
mov
mov
inc
cld
mov
js
dec
xchg
dec
sub
inc
push
fimuls
adcl
in
cmp
stc
cwtl
mov
push
mov
mov
mov
mov
cli
pop
mov
push
mov
lds
mov
ds
sub
and
xchg
sub
inc
out
dec
push
mov
enter
push
push
nop
fcomp
pop
lock
pop
push
inc
decb
mov
fcomi
in
dec
pop
cmp
and
inc
dec
comiss
mov
lock
push
out
pop
xchg
xchg
sub
inc
xor
push
in
jo
movsl
mov
aad
movsb
cmp
jne
mov
mov
fbstp
jae
inc
cmp
and
lods
push
sbb
cmpsb
mov
je
andb
push
in
or
xor
mov
popa
rcll
mov
pop
push
cs
popa
pop
sub
cmp
xor
incb
sub
pop
pop
mov
mov
or
mov
push
push
in
movsb
aaa
out
jp
scas
pop
xlat
fmul
outsb
shl
jns
cmp
push
adc
enter
and
popa
push
sub
in
repnz
xor
mov
mov
sbb
push
mov
sti
fwait
adc
add
popa
mov
cli
xchg
xchg
imul
ret
fists
pop
jmp
inc
jae
gs
aaa
hlt
jnp
sub
fs
call
out
aas
cmpsl
fstps
js
int3
jnp
sbb
lret
dec
loopne
cmpsl
sti
add
and
cltd
add
fisttpll
fxam
out
xor
adc
cltd
bnd
fwait
popf
push
push
jmp
cs
mov
jecxz
dec
imul
in
cmp
ret
imul
cld
repnz
scas
data16
xchg
push
aam
push
mov
ret
mov
add
rsqrtps
clc
test
xchg
mov
pop
bound
out
xchg
cwtl
inc
rcrl
xchg
mov
rcl
mov
add
daa
push
gs
and
sub
pop
xchg
inc
leave
adc
or
movsl
mov
cmp
das
inc
and
rcrl
jge
adc
add
cmp
ret
push
leave
ret
ret
bnd
fisubrl
add
xor
sbb
cmc
cwtl
daa
adc
repnz
pop
test
cmp
sub
push
mov
jae
push
push
push
aad
jmp
xor
lods
mov
add
pop
rorb
and
dec
cmpsl
dec
dec
inc
outsb
bound
pop
xorl
xchg
or
inc
push
js
clc
cwtl
xor
in
leave
je
mov
mov
push
test
jp
das
pushf
movl
adc
pop
in
pop
jp
int3
xlat
adc
pop
ja
push
push
mov
ret
jl
xchg
into
push
fbld
cmp
sub
js
cmp
add
inc
outsb
mov
dec
or
fsubs
mov
lahf
adc
sbb
inc
pop
je
mov
adc
cmp
dec
xor
ret
scas
or
rcll
xchg
sub
sbb
mov
cmpsl
insb
xchg
inc
push
insb
adc
cmc
xchg
mov
or
test
mov
ja
adc
dec
jne,pn
cmpsl
call
stos
adc
mov
loope
and
adc
out
push
aas
cwtl
pop
loopne
lods
inc
mov
and
inc
out
insb
sbb
fadd
jg
xlat
sub
pop
xchg
cmp
xchg
std
add
cld
mov
xchg
call
lock
mov
add
dec
cmp
lock
cmp
pop
dec
je
add
mov
sahf
add
aas
or
enter
sbb
jle
push
mov
sarl
aas
xchg
and
push
sbb
push
into
sbb
jecxz
or
mov
aad
scas
sbb
cmp
jg
xchg
push
dec
iret
ss
imull
cmp
aad
out
or
push
test
fiadds
stos
sbb
repnz
fdivl
adc
stos
mov
sbb
mov
mov
ja
push
xchg
movsl
cmp
xor
mov
cmp
xchg
cmpsb
in
lds
and
outsb
pushf
push
fwait
jbe
int3
jno
int
xlat
nop
into
pop
fldt
ret
mov
data16
test
out
cmpsb
mov
mov
clc
sar
pop
jno
stos
ret
lret
out
frstor
test
mov
fstpt
and
push
mov
imul
ret
dec
and
shlb
mov
xor
mov
lret
xor
out
ss
add
mov
mov
shlb
test
fisttpl
leave
mov
mov
adc
mov
push
jle
and
mov
pop
jae
arpl
mov
out
jl
xor
mov
mov
enter
test
call
ljmp
test
xor
es
in
scas
int3
ja
jmp
daa
sub
movb
fs
pop
lock
idivl
fwait
pop
sarb
inc
or
add
data16
into
loope
mov
mov
cwtl
loop
fcoml
and
bound
jl
jp
jae
mov
push
jl
push
add
jae
daa
sbb
sti
fisttps
mov
pop
mov
addr16
or
call
ret
or
mov
aad
sahf
mov
inc
pop
mov
xchg
es
add
int3
call
shrb
pop
or
lahf
adc
or
pop
inc
cmp
mov
jmp
sbb
test
js
xchg
fnstsw
mov
roll
adc
push
in
rorl
lret
into
lret
lret
aaa
inc
fidivrl
sub
or
fwait
xlat
push
je
add
xchg
subb
aad
ljmp
xchg
xchg
jns
cs
daa
sbb
mov
sub
inc
int3
in
xchg
mov
adc
inc
push
mov
fstl
mov
xor
pushf
adcb
and
sub
cmp
xor
push
fmuls
leave
push
call
stos
push
inc
cmovno
std
or
mov
in
lea
cmp
xchg
cmp
mov
or
aaa
daa
js
lahf
sub
or
push
lds
xchg
adc
insb
fucom
outsl
pop
movsl
add
popf
pop
shlb
inc
jle
daa
cmp
test
add
lock
adc
mov
add
mov
imul
lahf
aam
lds
aas
div
sbb
mov
fldcw
jne
sbb
test
rcrl
fstps
xchg
pop
idiv
mull
inc
loope
les
jg
cmpb
add
mov
mov
test
mov
mov
aad
mov
push
add
push
add
cmp
scas
mov
ud1
cmp
insb
sbb
imul
and
sbb
fadd
push
ss
push
inc
iret
out
ja
and
sti
fcoms
mov
ficomps
sub
outsl
xor
cmp
add
add
pop
xor
push
xchg
aad
clc
addr16
add
dec
lret
add
or
loope
fisttpll
adc
loop
dec
push
push
outsl
pop
sbb
addr16
imul
mov
xor
inc
ss
andb
xchg
push
loopne
mov
shll
int
mov
ret
jo
aam
sub
mov
fwait
inc
andl
addl
push
jl
gs
out
push
sbb
test
sbb
adc
js
pop
xlat
movd
addr16
test
cmp
adc
pop
mov
push
les
mov
mov
int
inc
in
loop
cwtl
add
xor
fs
add
xor
cs
ja
btr
pop
pop
ret
push
and
aam
inc
ja
mov
pop
add
dec
lret
xchg
jbe
les
and
scas
sbb
add
push
and
les
loopne
jmp
ret
imul
xchg
sub
ss
insl
clc
shrl
in
mov
fidivrl
xor
push
pushl
outsl
or
adc
lods
js
icebp
xchg
dec
add
test
cs
push
pop
gs
jmp
sub
adc
sub
mov
and
cmpsl
dec
in
or
shlb
add
ljmp
lcall
shr
dec
mov
jle
sub
pop
shlb
push
or
or
dec
cltd
lock
out
stc
jbe
mov
sti
xchg
jns
leave
dec
in
and
and
lods
pop
int
push
push
mov
bound
sub
fcomps
push
in
cmp
xchg
adc
xchg
cmp
bnd
in
inc
push
or
testl
sub
fldcw
mov
in
imul
xchg
lea
scas
mov
out
pop
pop
xchg
cwtl
adc
movsb
jmp
pop
dec
xchg
xor
out
mov
repz
cmc
pop
cli
jle
xlat
mov
cmpsl
adc
mov
in
out
rcrb
les
mov
pop
lea
std
inc
or
mov
jns
sub
xor
stos
insl
arpl
push
and
pop
lcall
ds
nop
pop
add
push
pop
pop
movsb
jp
mov
popf
in
mov
mov
mov
cltd
shll
inc
xlat
push
divl
and
mov
push
das
mov
jl
or
popa
sbb
gs
mov
or
shl
push
sahf
int
adc
hlt
pop
push
addr16
cwtl
fildl
in
imul
pop
xchg
xor
xchg
sub
adcl
dec
ret
dec
sarb
xchg
aaa
loopne
dec
mov
sti
sub
cmpsl
les
dec
xchg
test
jl
push
pop
push
and
repz
test
mov
stc
out
dec
cmpb
mulb
sbb
push
sub
adc
fucomip
addr16
xor
sub
inc
pushl
in
inc
push
mov
cmp
test
int3
and
stos
test
jbe
inc
add
dec
daa
xchg
stos
arpl
jne
mov
loopne
fwait
mov
lds
pop
stc
dec
mov
icebp
das
je
xchg
xchg
or
sub
push
push
sbbb
in
in
xor
imul
jge
je
mov
rol
lret
pusha
push
notb
rclb
inc
dec
push
mov
mov
push
leave
aad
in
or
pop
outsb
imul
int
xchg
out
gs
and
scas
xor
xorb
adc
cwtl
dec
cmpsl
fistpl
test
add
add
fdivl
xchg
dec
dec
inc
add
push
call
adc
cli
pop
mov
test
test
dec
or
push
iret
xor
pop
mov
dec
insb
xchg
out
dec
pushf
dec
mov
mov
faddl
add
imul
cmpsl
pop
repnz
rcl
cmp
popa
pop
iret
repz
xor
mov
insl
xor
sbb
sub
dec
cmp
data16
mov
lods
ds
stos
cmp
mov
sahf
jns
xchg
loopne
xchg
jnp
iret
mov
and
imul
mov
xor
clc
rorl
lds
clc
mov
xchg
pop
je
aas
cwtl
push
adc
cmp
sbb
jg
or
jno
loop
cld
rolb
mov
xor
stos
lea
scas
pop
cmc
in
lods
test
test
nop
movb
in
fidivl
pop
mov
push
std
stos
dec
sbb
stos
mov
int
pop
mov
cmp
fcmovb
clc
adc
shrl
jno
mov
pop
pop
and
jb
roll
jmp
inc
lea
imul
iret
fmul
iret
jge
mov
iret
mov
mov
loopne
fsubrs
sub
lods
pop
insl
push
mov
int
subl
mov
int3
jge
pop
mov
and
add
outsl
insl
inc
or
xchg
es
mov
sahf
xchg
mov
ds
mov
cli
inc
mov
add
aaa
lods
jl
sub
add
gs
les
pop
cltd
aaa
pop
sbb
mov
add
mov
sub
ja
jmp
ds
xor
pop
fmulp
cmp
xor
shrl
fs
inc
repz
mov
leave
mov
dec
je
repnz
add
pop
aad
pushl
gs
and
fistpll
and
mov
cmp
and
xchg
stc
stc
or
popf
sbb
jl
sub
mov
jnp
cmpb
cmpsb
mov
hlt
ds
repnz
lcall
pop
pop
in
inc
jo
jo
dec
jge
clc
cmc
push
push
or
jge
pop
clc
cmp
loop
cli
imul
xor
test
or
mov
jbe
jle
cmp
test
sub
cmp
popa
pop
insl
adc
pushf
jbe
fsubrs
adc
fwait
aaa
das
adc
lods
cmp
dec
fisttps
mov
cltd
mov
int
scas
fnstcw
sub
mov
iret
push
and
and
xlat
pushf
adc
jp
jns
xor
insb
adc
cmp
inc
test
adc
push
cwtl
mov
pop
popf
and
loopne
idivb
jmp
push
fistpl
jmp
repnz
dec
pop
or
dec
je
cmp
xchg
lods
push
sbb
mov
jo
out
add
cmp
aam
loop
jle
inc
pop
mov
pop
hlt
loope
fdiv
ret
inc
and
sbb
mov
test
bound
jae
xor
sub
rolb
dec
mov
imul
idiv
test
bound
int3
sub
test
imul
insb
cmc
lret
pop
xchg
mov
sub
cmp
cmp
xor
inc
mov
mov
mov
ret
mov
das
xchg
ss
sub
dec
lds
jl
stos
dec
mov
rcrl
sub
stc
inc
adc
inc
xchg
into
fninit
mov
xchg
loop
inc
movsl
arpl
pop
bound
div
and
mov
scas
insb
in
hlt
clc
mov
or
inc
ljmp
push
inc
add
cmc
and
popf
sub
stc
out
repz
aam
aad
xchg
fisttps
mov
cmp
sbb
and
les
cmp
loop
xchg
add
push
imul
add
pop
lods
add
outsb
call
mov
sahf
jge
xchg
xor
test
add
shl
jp
push
fnstsw
fmull
fidivl
sbb
test
out
fdivs
fcom
bound
pop
dec
cmc
bnd
mov
out
loope
push
pushf
or
mov
dec
imul
mov
fcom
add
xor
adc
mov
inc
popa
scas
cmp
daa
nop
inc
mov
xor
jb
mov
ja
mov
pop
mov
xchg
scas
fiadds
jg
mov
lds
hlt
js
jns
pop
fldl
lods
divl
xchg
xchg
outsl
out
call
cli
xchg
jle
mov
xchg
test
mov
add
or
adc
sub
adc
sbb
cltd
mul
popf
pop
in
push
into
add
repz
cmovae
rcr
xor
ret
test
xor
and
arpl
xlat
pushf
xchg
pop
lds
ret
and
push
mov
xchg
sub
jnp
sbb
and
loop
push
sub
aam
test
sbb
inc
sbbb
or
or
mov
adc
push
mov
adc
stc
pop
pop
int
pop
sub
jbe
out
faddl
lahf
jb
cmp
mov
arpl
mov
mov
jg
sub
cmp
jg
jae
das
mov
sbb
inc
fmull
ljmp
clc
cmpsl
or
and
cmc
sub
fdiv
mov
sub
adc
adc
xor
scas
outsb
cmp
jge
sbb
ss
into
clc
stos
out
xchg
mov
push
fistpl
sbb
repnz
pop
fdivr
iret
xor
pop
lea
sub
jg
lock
jo
mov
pop
pop
dec
xchg
aas
insb
cmp
jg
add
fadds
pop
ljmp
push
test
cmpsb
lahf
pop
cli
jge
movsl
leave
lock
int3
mov
fstps
js
lcall
je
in
fisubs
inc
inc
xchg
adc
outsl
mov
stos
fists
pop
mov
pop
andl
std
cmp
jl
jbe
xor
cs
fildl
cmp
ja
aam
enter
inc
lahf
jnp
mov
addr16
jle
std
lcall
aam
bnd
repnz
dec
add
scas
in
clc
mov
fistpl
fbstp
push
inc
push
mov
xorl
mov
enter
subb
mov
fstl
jge
mov
push
sbb
mov
cmp
cwtl
sub
mov
xor
loope
outsb
cmp
xor
mov
push
je
cmp
jp
push
das
std
sub
jno
sub
call
inc
jecxz
cmp
subl
ret
jo
cmc
decb
testb
mov
jp
out
dec
and
popa
cltd
and
aas
sub
sub
mov
and
scas
shll
mov
movsl
mov
mov
jbe
and
xchg
lods
rorl
mov
leave
out
sbbb
leave
or
lock
mov
sbb
and
xlat
adc
push
pop
ror
mov
adc
add
testl
xchg
adc
aas
mov
lods
shl
jns
movsb
cmpsb
aad
les
mov
sub
scas
imul
mov
outsb
push
push
call
popa
sbb
outsb
lret
lods
mov
pop
jb
in
icebp
sbb
mov
jle
mov
xor
mov
dec
test
cld
mov
xor
lock
xor
and
jmp
and
adc
call
add
adc
sbb
push
jg
pop
cmc
mov
stos
push
int3
cmp
enter
cmp
pusha
lahf
cmp
xor
or
in
or
fwait
xor
in
stos
arpl
push
and
mov
rcll
adc
fsts
sar
cmc
shrl
rcll
stos
or
fistpll
xchg
arpl
push
jno
aam
arpl
inc
std
scas
xor
out
dec
loope
in
or
int3
dec
ret
push
push
push
pop
and
mov
jmp
sahf
push
cmp
mov
pop
sub
jns
dec
call
sub
jge
loop
inc
or
pop
xor
lods
jb
scas
aas
ss
add
cmp
pop
pop
adc
add
int
call
push
pop
jnp
mov
int3
and
add
adc
inc
push
fisubrs
sub
stos
mov
ja
jecxz
repnz
cmpsl
xlat
test
in
icebp
data16
sbb
ss
push
and
mov
add
into
aam
xchg
pop
shrb
adc
sub
hlt
mov
push
data16
add
push
mov
dec
or
fst
fs
aam
sti
cli
addl
pop
sbb
sub
stos
stos
js
or
xor
xchg
test
push
rclb
or
inc
jns
cmpsb
sahf
mov
lret
push
jno
outsl
and
int3
pushf
mov
jo
dec
fcomip
fcmovbe
sbb
gs
or
out
xor
xchg
sbb
push
mov
dec
in
add
roll
add
out
in
imul
jl
adc
adc
lret
mov
or
sarb
sahf
fistps
mov
fcoml
subb
insb
and
mov
add
cmpl
bnd
outsb
xchg
fimull
stos
cmp
rolb
pop
mov
adc
inc
mov
imul
lret
mov
ljmp
bound
dec
xchg
fmuls
scas
mov
cmp
pusha
mov
out
scas
mov
push
adc
or
add
pop
sub
inc
inc
mov
add
push
add
jmp
jo
jb
fldl
test
ret
mov
adcb
push
xorl
add
icebp
add
dec
add
cmp
out
push
jmp
inc
jno
js,pn
arpl
add
divb
inc
xchg
outsb
cmp
out
push
adcl
inc
icebp
mov
push
lea
ret
pop
ja
clc
mov
pusha
add
les
cmpsb
sarb
fsubs
lcall
nop
ret
adc
stc
mov
mov
dec
cld
inc
ds
mov
inc
hlt
out
push
psrad
ljmp
aad
and
jo
in
pop
xchg
sahf
dec
jnp
pushf
jno
mov
roll
fmulp
scas
jno
int3
push
sarb
orl
sub
sbb
xchg
jnp
shrl
mov
in
les
mov
sub
jno
lret
aad
ss
lds
or
orb
add
pop
dec
mov
jge
push
sub
adc
int3
xchg
divb
cmpsb
enter
cli
dec
pop
add
push
les
or
pop
cmpsb
dec
pop
xchg
imul
inc
nop
lret
gs
xor
int3
lods
cmp
fmul
xor
imul
pop
xchg
fs
out
cwtl
loope
add
adc
sub
or
xchg
insl
xlat
outsb
icebp
fsts
jle
cmp
call
out
jb
sub
lcall
jge
jb
mov
repnz
sub
aad
inc
sub
das
shrb
push
pop
push
inc
or
sti
scas
jne
jnp
int3
adc
add
out
cltd
dec
ffreep
cmp
adc
dec
jge
sbb
hlt
mov
je
cmpsl
and
daa
sbb
mov
lock
mov
sti
icebp
cwtl
ret
sub
popf
das
push
mov
xchg
in
inc
test
lret
push
mov
outsb
cs
test
mov
pop
in
cs
lcall
out
sahf
xchg
jo
or
add
inc
add
aam
jb
insl
sbb
loopne
xchg
insb
movsb
xor
out
pop
cmc
aam
ja
dec
jns
pop
cmp
shl
fdivs
jl
pop
dec
adc
push
xlat
movsl
fisubs
scas
mov
mov
sbb
jno
aad
push
xchg
sbb
enter
mov
imul
mov
aas
cmp
fsubs
sub
adc
fs
rol
pushf
negl
pop
test
xchg
push
jne
fcoml
js
pop
push
fmull
and
cmp
xchg
and
xlat
lods
and
je
hlt
add
testb
push
mov
rcrb
mov
mov
arpl
cmp
aaa
pop
xchg
sbb
and
fisubl
inc
idivb
in
jbe
cmp
das
jl
stos
in
push
mov
inc
and
push
aas
cmp
add
mov
lock
fnstsw
adc
push
mov
jbe
repnz
pusha
ljmp
dec
les
in
mov
xchg
xor
or
and
shll
popa
inc
mov
cmp
cmpsb
gs
ja
jmp
mov
popf
lret
push
push
shrl
or
fistps
sbb
mov
in
mov
dec
add
xor
jb
push
rcrb
xchg
push
jae
nop
jo
inc
and
inc
orl
jno
push
add
dec
out
stos
stos
out
push
and
push
enter
add
popa
imull
sarb
nop
movsb
inc
xor
out
out
pop
stc
pusha
dec
xchg
scas
jns
fsubrs
xchg
insl
adc
mov
or
rcll
in
xchg
cmp
pop
cmp
and
push
inc
repz
repz
das
fsubrs
inc
inc
leave
dec
loopne
lret
std
mov
sbb
pop
dec
rcll
jmp
mov
xor
inc
fs
shll
idivb
lret
cwtl
fwait
push
shll
or
cli
jg
xchg
jl
cld
pop
imul
mov
sub
push
push
stc
adc
adc
mov
sbb
lret
arpl
rcll
mov
push
leave
das
int3
lds
sub
jg
dec
aas
or
pop
push
out
mov
shrb
leave
loop
adc
mov
or
lcall
hlt
arpl
stos
rorb
filds
enter
push
sarl
mov
repnz
adc
adc
xchg
cmp
cltd
in
movsb
xor
neg
adc
fldt
cmc
movsb
sub
daa
mov
imul
mov
mov
mov
cwtl
adc
ljmp
mov
adc
or
mov
pop
xchg
cwtl
int
ss
in
sub
fs
push
cltd
jle
xor
jae
cld
insl
pop
imul
mov
aaa
insb
arpl
adc
dec
push
lods
arpl
xorb
lret
mov
rcr
movsb
js
mov
inc
mov
call
out
or
pop
fidivrl
push
mov
xchg
cmp
mov
int3
je
mov
movups
jne
mul
jno
jle
dec
and
es
add
ret
test
cli
or
jp
rep
std
fistpl
mov
popf
cmp
cmc
push
and
mov
sub
sbb
xor
imul
mov
mov
ds
stc
pop
cmp
test
leave
mov
add
jle
push
js
mov
mov
jne
push
push
cmpsb
rorb
add
sub
popa
mov
xor
fistpl
stos
jae
push
add
mov
fcomp
sub
fldcw
call
scas
out
mov
int
add
jne
cmpsl
xchg
add
cld
adc
inc
call
in
cmp
test
mov
je
xchg
mull
sbb
xor
gs
xlat
xor
sti
pop
jae
jnp
jbe
inc
jno
test
lret
cmc
push
dec
das
ficoml
sbb
mov
adc
repnz
std
mov
cli
xchg
hlt
inc
jle
jmp
cli
or
int3
bts
mov
xchg
pushf
mov
hlt
andb
dec
pop
cmovo
lock
out
push
mov
xor
dec
orb
outsl
sbb
mov
xchg
jmp
jae
mov
in
bound
mov
mov
add
inc
mov
test
mov
fstps
xchg
addr16
test
pop
xor
push
lahf
in
cmp
lret
jp
fistpll
sub
sbb
jl
addr16
or
aad
add
addr16
sti
loope
xor
jns
pop
rcr
sahf
xchg
into
mov
int
inc
mov
pusha
xchg
xor
lret
aaa
clc
mov
loope
mov
les
push
adc
cmp
bound
outsb
lret
cli
push
push
push
jp
in
fists
pop
jmp
lods
js
fisttpll
leave
lock
out
loop
ret
jbe
push
ds
outsl
xchg
cmp
sbb
jne
jb
dec
fdivs
es
cmp
push
push
fisubl
divb
xor
xchg
cmp
mov
xchg
add
mov
fwait
imul
cmp
nop
movsb
fimuls
cmp
jno
and
cmpsb
arpl
or
push
stc
inc
sbb
lahf
icebp
aad
shr
lcall
push
icebp
dec
jecxz
mov
xchg
push
xorb
xchg
add
fistl
insb
adc
adc
call
shrb
or
push
pop
test
push
cli
dec
cmpsb
pop
jb
dec
add
setb
dec
rorl
insl
and
or
add
call
subl
adc
arpl
loop
cwtl
xor
dec
mov
fwait
int
push
and
sub
aas
mov
aaa
fcoml
sub
ljmp
pushf
in
mov
out
xchg
das
adc
lret
jbe
cmp
adc
push
mov
push
les
xchg
jae
leave
mov
fmuls
rcrl
mov
mov
popf
cmp
das
sub
enter
movsl
jge
xor
loop
mov
xorl
out
hlt
mov
lahf
mov
xorl
bound
test
cli
frstor
cld
push
clc
jne,pt
jmp
ds
cmpsb
xchg
mov
lea
adc
mov
fwait
xchg
stos
stos
insb
adc
and
xchg
xchg
fstps
xor
xlat
mov
fnsave
xor
nop
sbb
and
pop
int3
mov
dec
jo
and
fucompp
xor
pushf
and
pop
sub
and
mov
dec
mov
push
sti
lds
sub
sti
push
out
cli
aas
imul
in
pop
insb
cld
gs
add
jae
mov
push
loope
dec
movsl
movsb
mov
xchg
addl
adc
ljmp
fcomip
jmp
loopne
nop
mov
scas
pop
mov
mov
add
pop
push
ret
xchg
repnz
inc
pop
adc
lock
sbb
sub
lds
inc
mul
lahf
movl
lea
jmp
or
dec
dec
inc
aad
xchg
mov
mov
lods
shl
xchg
ljmp
fsubrl
adc
repz
dec
push
aad
out
pusha
subl
cmp
mov
cmp
xchg
add
xchg
ja
cmp
fcomi
int3
lods
cld
pop
push
and
ja
jmp
in
pop
mov
dec
aam
rcl
scas
or
cs
jno
xor
inc
sub
or
jle
fldl
xor
insl
jge
mov
inc
sbb
ljmp
cs
mov
popa
jg,pt
mov
mov
dec
mov
inc
push
xor
lods
dec
fildll
dec
or
inc
jbe
in
out
out
lcall
inc
test
mov
leave
push
movsl
inc
add
mov
jge
xchg
adc
inc
mov
mov
cmpsl
xchg
scas
aad
mov
and
xor
ret
jo
mov
lock
scas
or
repz
mov
cltd
je
into
add
rol
daa
sub
lcall
cmpsb
cli
jl
xor
icebp
lods
cmp
inc
sub
jae
sarl
and
add
and
lret
pushf
mov
dec
orb
or
lcall
aam
sub
sahf
mov
sbb
out
and
jno
mov
or
ficoms
stos
out
inc
pusha
bound
lret
jle
repz
add
fwait
lret
rcrb
jb
and
sub
cmp
lret
mov
xchg
pop
mov
inc
imul
mov
pop
add
xchg
pop
icebp
mov
jp
les
in
jo
test
adc
test
je
xrelease
jnp
movsl
dec
outsl
or
stos
in
daa
lret
sub
pop
or
movsl
pop
shrb
call
clc
rorb
pop
subl
pop
in
push
scas
or
cltd
mov
fidivrs
fsts
jbe
ficoml
sbb
xchg
sub
int
orl
mov
ja
imul
pusha
ljmp
fcompl
test
adc
pushf
fidivl
xchg
fcomp
repz
ret
add
sbb
stos
dec
inc
mov
popa
jmp
jb
xor
sti
or
cmc
cmpsl
inc
mov
fistps
clc
loope
out
nop
mov
rcl
je
aad
std
lret
mov
es
push
fs
mov
sbb
rcrl
sub
shl
out
jae
decl
push
pop
shll
mov
jecxz
inc
jle
mov
lock
dec
xor
jle
xchg
xchg
jmp
or
js
mov
faddl
ret
mov
xor
fcmovb
xchg
push
push
sbb
cmp
or
pop
cli
movmskps
negl
cmp
ret
add
insb
aas
lea
rcr
fmuls
and
adc
call
out
xchg
daa
fisubrl
adc
ret
imul
push
xchg
xor
lahf
fadd
pop
fs
shl
cmp
pop
or
sub
sar
enter
add
imul
sub
lds
push
cmp
jmp
movb
call
and
call
inc
lcall
ds
fistps
inc
mov
sbb
add
inc
lods
lods
das
jnp
mov
es
stos
inc
loopnew
push
movsb
mov
add
lea
sti
jo
cld
xchg
push
inc
mov
fsubrl
mov
in
out
inc
gs
push
jo
cmp
mov
cltd
or
ficomps
sarl
inc
addr16
jmp
push
imul
jecxz
add
fisubl
movsl
loope
loopne
pop
mov
ss
mov
sub
bound
data16
and
mov
inc
add
call
es
imul
lcall
cmp
xor
xor
fiaddl
xchg
dec
jnp
lahf
or
add
xchg
fidivrl
jecxz
shl
inc
xor
fists
insb
pop
repz
dec
ret
rol
sahf
push
sbb
pop
lahf
fwait
aas
xchg
es
or
sub
xor
sub
push
sub
fistl
inc
fs
lcall
xchg
add
clc
mov
mov
insl
push
dec
push
fsubr
jp,pn
in
in
xchg
mov
or
xchg
mov
adc
push
mov
push
push
mov
push
and
loop
cli
add
fs
iret
adc
stos
pand
loope
divb
mov
mov
pushf
mov
hlt
out
stos
sub
inc
dec
sub
cmp
lock
or
scas
sbb
dec
dec
int
xchg
fldl2t
jne
adc
jbe
jb
jne
push
in
pusha
adc
jmp
push
shlb
mov
mov
popa
enter
pop
cmpsb
mov
aam
loop
outsb
push
les
add
shrb
push
mov
scas
pop
movsl
mov
cmp
mov
cmp
sbbl
mov
pushf
inc
sarb
imul
insb
ja
xchg
xchg
loope
out
pop
push
mov
fucom
lds
mov
cmp
test
cli
aam
add
ljmp
std
push
pop
mov
addr16
scas
xor
jg
stos
and
push
mov
push
sub
add
repnz
dec
cmp
push
je
jg
loope
push
roll
xor
xchg
push
insl
jnp
mov
lds
out
cmp
dec
adc
aas
mov
loope
fldenv
sar
and
dec
xchg
cmp
daa
pushf
out
cmc
jl
sub
jbe
dec
pop
aam
ret
roll
aaa
shll
test
push
inc
das
popf
inc
mov
sbb
icebp
loopne
shlb
mov
lods
pop
je
das
cmpsb
sub
je
cmp
inc
and
mov
jmp
mov
hlt
imul
or
clc
dec
pusha
fidivrl
stos
mov
push
jns
xchg
mov
cwtl
or
adc
into
xor
jmp
push
dec
mov
ljmp
stos
movb
ret
xchg
push
xchg
fbld
rolb
popa
dec
sub
jge
fdivrl
rol
nop
out
xchg
and
iret
dec
add
dec
imul
pop
mov
ret
jb
mov
fadds
popa
xchg
and
inc
leave
test
mov
mov
push
sub
repnz
nop
pop
cs
les
pop
add
stc
jge
shrb
dec
frstor
xor
push
xor
xchg
push
pop
mov
fdivl
imul
lods
sarl
cmp
rcrb
dec
mov
mov
nop
ret
cmpsl
mov
cmpsl
fisttpll
dec
aaa
mov
cmp
jo
cmp
cld
inc
mov
out
scas
or
adc
and
add
cltd
ja
mov
cli
and
scas
rcrb
or
mov
jne
in
cmp
adc
jle
cmp
mov
sub
pop
mov
mov
sbb
iret
jnp
aam
push
mov
jno
fwait
xor
lds
dec
adc
add
inc
cmc
xchg
adc
daa
popf
in
mov
adc
jb
adc
cmp
pop
aas
xor
into
lret
loopne
lcall
fdivrl
sub
xor
pop
add
pop
pop
jbe
and
mov
dec
in
ja
mov
outsb
in
nop
lret
push
xor
gs
cmpb
mov
fildl
cwtl
test
dec
cmp
clc
push
in
shl
fsubr
xor
fimull
dec
fs
scas
stc
sarl
mov
dec
ror
je
xchg
xor
sahf
mov
adc
ret
repz
fisubl
mov
inc
mov
das
xlat
pop
aad
stos
jg
mov
hlt
movsb
imul
jp
jp
sub
fisubl
mov
loope
test
sbb
inc
adc
and
in
test
dec
jg
mov
loope
mov
in
mov
out
data16
sbb
jmp
inc
shr
out
gs
or
out
or
ja
inc
jge
add
jmp
and
int
pop
int3
pop
sub
cmp
or
cmp
ret
mov
ja
cltd
inc
pop
fs
aaa
cmc
push
jo
pop
int
arpl
test
xchg
vmread
cli
xchg
adc
lcall
movsb
adc
sub
dec
popa
inc
lods
or
leave
pushf
adc
popa
cmc
pop
jns
jmp
mov
ja
loope
inc
mov
enter
je
popa
lods
sub
orl
sbb
dec
push
inc
jp
movsb
or
xchg
sub
jl
out
fists
shr
divl
mov
fistps
cmp
xchg
loope
xor
js
mov
cs
mov
dec
inc
or
ret
mov
or
xor
divb
loope
mov
bound
subb
aad
lret
ljmp
je
sbb
nop
add
std
cmp
scas
xchg
out
icebp
lea
sub
daa
xor
addr16
stos
daa
shll
add
xchg
lds
pop
sarl
push
not
orl
test
ret
fsubrs
in
sub
hlt
cmc
popa
faddl
mov
adc
or
ljmp
xor
or
push
xchg
dec
push
fistpl
xchg
outsl
push
push
xchg
dec
fimull
out
or
add
add
jp
int
sbb
mov
xlat
pop
in
mov
jno
imul
add
inc
lea
and
jnp
cmc
out
orb
sbb
test
cmpsb
jae
mov
inc
xor
into
adc
std
add
mov
and
adc
je
and
mov
push
pop
mov
lret
inc
and
out
adc
dec
sub
xor
mov
dec
outsl
std
xor
sti
or
daa
xor
cmp
pop
jnp
xchg
and
mov
xor
in
mov
push
inc
or
shl
int3
mov
enter
pop
in
cmp
aas
scas
out
push
hlt
inc
mov
or
push
aaa
dec
or
addr16
je
jp
sbb
and
push
les
scas
vpacksswb
sub
int
adc
push
jae
pusha
out
mov
sbb
movsb
inc
adc
jmp
sahf
cmp
mov
pop
aas
xchg
jb
dec
sbb
adc
xor
hlt
adc
sbb
movsl
pusha
dec
negl
cmc
and
shl
loop
push
xor
xchg
mov
sub
xor
add
pop
addr16
xchg
scas
push
js
jns
enter
daa
iret
inc
add
jmp
mov
and
push
lea
sub
test
cmp
jmp
out
aad
mov
adc
aas
add
and
or
xchg
sub
rorb
test
jb
sbb
sub
or
mov
in
ficoml
or
lods
ss
cmpsl
xor
push
xchg
ljmp
push
mov
icebp
mov
dec
add
psrlw
int
push
in
inc
out
decl
mov
and
stos
jns
adc
cmp
popa
in
jo
jl
call
dec
dec
lods
inc
shrl
pop
xchg
mov
mov
dec
pop
std
clc
pop
stos
sbb
dec
pop
dec
ffree
jbe
cltd
rorb
mov
sub
testb
sarl
fs
dec
test
add
aad
sti
in
scas
inc
or
loopne
fst
inc
push
inc
and
dec
cmp
fnstsw
xor
lods
push
add
ja
lods
push
jno
jge
icebp
lret
mov
push
pop
mov
sarl
enter
stc
sbb
aad
dec
mov
dec
dec
out
xor
sub
loop
jl
int3
ficompl
in
sbbb
xor
iret
sub
jp
imul
and
pop
fadd
aam
ret
jb
lret
add
add
fidivl
jno
jb
lret
loopne
pop
dec
jns
aam
and
cmpl
push
xchg
inc
or
sub
sub
pop
popf
popa
js
and
add
pop
jne
dec
aam
mov
mov
pop
push
mov
mov
roll
fcmove
dec
sub
ljmp
mov
out
push
pop
or
nop
in
or
cli
jns
test
or
xchg
mov
mov
frstor
add
cmp
push
push
fnstcw
xor
scas
adc
clc
out
insl
je
and
neg
or
lods
or
and
mov
iret
aam
loope
push
jmp
or
xor
sbb
leave
fisttpl
popa
xor
mov
xchg
out
or
out
add
pop
ficoms
dec
test
enter
cltd
jl
outsb
dec
inc
scas
or
in
sbb
outsl
shlb
mov
push
dec
push
xchg
add
lock
cmp
inc
int
mov
mov
pop
aaa
xchg
xchg
outsl
lcall
xchg
push
leave
loope
cwtl
cli
inc
sub
out
ss
imul
and
data16
and
push
scas
add
in
test
insl
pop
ss
cli
popa
or
outsb
vunpckhps
dec
cmpsl
push
and
add
aad
mov
mov
jmp
xchg
pop
xchg
adc
inc
lods
scas
sbb
mov
push
in
and
xchg
sub
sub
mov
enter
pop
xchg
cmp
ljmp
push
lahf
sub
stos
and
mov
lret
add
add
inc
js
jge
xchg
jnp
fstp
add
xchg
mov
mov
fwait
or
or
mov
imul
test
fildll
call
add
push
dec
inc
pop
enter
xor
sub
into
clc
loopne
shl
fnstenv
mov
sub
mov
ljmp
negb
test
fisubrl
and
sub
sbb
adc
insl
xor
sbb
lods
das
dec
sbb
xchg
cld
cmp
add
in
dec
rorb
adc
sbb
adc
xlat
ficoml
or
pop
adc
addl
sbb
xchg
jl
inc
xchg
mov
jl
sbb
int
icebp
and
gs
lods
xchg
sub
dec
call
jb
adc
or
sbb
xlat
jge
leave
imul
mov
orb
ljmp
cmp
loop
jmp
push
icebp
mov
xchg
cmp
roll
shlb
adc
lret
inc
xchg
xor
gs
cmc
inc
xor
aas
outsb
ja
stos
sarb
mov
mov
and
repnz
mov
leave
stos
push
mov
out
sti
inc
popl
and
dec
inc
xchg
push
cmp
fcoms
rorl
push
push
or
shll
dec
sub
leave
cmp
out
dec
fcomps
fistps
out
cwtl
hlt
aas
mov
jo
sbb
mov
subb
jle
xchg
pushf
sub
xchg
test
enter
push
inc
sbbl
sar
lret
push
mov
popl
lret
repnz
lcall
jnp
inc
sbb
pop
jle
arpl
jne
lret
outsb
cmpsb
into
xor
jae
xor
inc
fs
cltd
fistl
fnstsw
mov
hlt
push
jmp
pushf
fcomps
rcr
cltd
sbb
leave
sbb
mov
ljmp
ds
rorl
pop
je
sub
xor
out
mov
pop
ljmp
inc
dec
int
rcr
dec
fnsave
rorl
stc
dec
fldl
jnp
subl
andl
inc
rcll
stc
imul
mov
cld
jecxz
add
push
popa
push
cmp
fisttpl
pop
inc
mov
mov
pop
incb
or
mov
add
fbld
inc
mov
lret
mov
es
mov
cltd
mov
getsec
lret
or
mov
fisubrs
inc
adc
out
jae
fistl
xchg
inc
sbb
xchg
dec
jno
or
pusha
adc
sbb
bound
xchg
jp
std
mov
rcrl
pop
jg
fstpl
mov
push
mov
mov
inc
mov
jo
fdivrs
loopne
sub
loope
add
shll
sti
out
sti
push
popa
inc
call
imul
jne
cmc
xor
sub
arpl
inc
mov
jecxz
cld
push
rcr
jmp
lret
cltd
lcall
fcmovu
pop
outsb
push
push
dec
add
adc
and
dec
mov
iret
jnp
stos
outsl
mov
ss
mov
sub
jg
mov
dec
mov
mov
xor
je
push
or
ljmp
test
fisubrs
mov
lea
dec
mov
orl
mov
mov
mov
rcl
out
stos
dec
fsubp
lock
movsb
test
imul
cmpsl
es
xchg
cmpsb
mov
mov
cwtl
scas
dec
ret
aad
pop
movsl
arpl
sbb
pop
mov
xor
cmpsb
mov
push
adc
call
fistl
pop
shlb
xor
push
pop
cli
or
jb
rcrl
fs
mov
dec
repz
sbb
adc
cmp
and
or
inc
fs
out
mov
clc
test
popf
fstpl
or
test
dec
out
rol
cmc
xor
stos
mov
push
repnz
in
leave
insl
pop
mov
aas
insb
xchg
fcoml
jl
pop
add
ss
mov
mov
mov
xor
mov
add
cmp
cld
cmpsl
sbb
in
mov
inc
xor
cmpsb
mov
aad
push
in
cltd
icebp
outsb
sti
mov
jbe
or
mov
pushf
cs
mov
aas
jg
push
test
jge
pop
enter
roll
jge
rcr
jns
iret
aaa
adc
rcrb
lods
test
inc
add
sbb
sar
inc
dec
mov
fmul
push
outsl
add
hlt
sbb
imul
cmpl
mov
or
sarl
mov
and
cs
xor
arpl
movsb
bswap
cmp
pop
stos
add
sbb
sbb
pop
ffreep
movsl
xor
mov
mov
negl
mov
add
pop
cmc
shl
lods
and
mov
inc
je
dec
pop
jae
arpl
add
mov
cmp
mov
aaa
loope
loope
loopne
mul
loop
and
xchg
inc
cmp
or
mov
mov
dec
fidivs
jecxz
fcomps
repnz
je
add
and
and
mov
lret
addb
fld
cltd
xchg
rorl
test
pop
pop
mov
jmp
repnz
lods
ret
fcom
aad
adc
or
mov
aam
sub
jge
add
in
and
push
cmpsb
cmp
ret
jb
scas
and
push
loope
int
xchg
shll
lock
xchg
dec
aam
mov
sub
adc
ret
xchg
inc
pop
in
aam
mov
pusha
xor
mov
js
or
ds
xor
mov
mov
xor
jne
in
daa
stos
loop
xor
out
xlat
enter
push
ljmp
notb
out
xor
sbb
pop
scas
dec
xlat
adc
gs
into
xor
push
pop
pop
dec
sub
mov
ffree
mov
push
add
and
xchg
push
dec
mov
push
mov
dec
iret
hlt
fwait
outsb
gs
into
xchg
aad
add
addl
dec
repz
fucomip
iret
aad
xchg
push
cmp
loop
push
filds
jno
insl
xor
jg
dec
fstpt
ret
loopne
daa
cmp
mov
into
sub
add
imul
repz
fstps
jle
sub
xchg
fidivl
movsb
push
imul
fidivs
pushf
loop
popa
sub
insb
loopne
jge
add
movsl
popf
shl
add
mov
mov
jp
push
sbb
mov
xlat
repz
mov
push
jbe
mov
shr
lahf
pusha
rolb
cmp
scas
sti
loopne
cs
loop
mov
daa
push
aad
arpl
in
mov
mov
movsl
fdivp
imul
inc
clc
cmpsl
inc
inc
lret
in
xor
popa
call
arpl
into
imul
adc
mov
pushf
mov
inc
sbb
data16
add
in
sbb
add
ret
out
into
sub
pop
hlt
jns
ljmp
cli
mov
insb
imull
lret
xchg
aas
insl
adc
in
ficomps
push
cmp
mov
or
and
ret
pop
in
xchg
ds
lret
xor
sub
loope
fs
aad
addb
js
rcrl
cmpsb
sbb
lahf
mov
jnp
push
sbb
fistps
aaa
mov
ds
inc
mov
rcrl
pop
sub
or
outsl
xlat
sub
enter
ljmp
icebp
dec
jns
add
inc
rorl
mov
inc
fmul
mov
jge
ss
ret
xchg
test
pop
dec
jbe
pop
mov
xlat
call
add
xchg
xchg
in
xor
xchg
imul
lods
pop
push
in
mov
sub
dec
push
push
jg
jo
lock
or
xor
jno
or
and
push
fidivrs
mov
adc
cmp
push
xchg
jmp
mov
cs
lret
clc
pop
repnz
dec
shlb
jo
daa
scas
jo
pop
and
sti
sbb
in
cmp
adc
push
cmp
add
inc
jge
mov
xor
sbb
sub
jmp
push
jecxz
dec
mov
cs
scas
sbb
cmp
shll
loopne
in
loop
push
xlat
mov
cmc
adc
aad
pop
mov
rcl
jno
pop
push
and
fnstcw
mov
jno
adc
adc
nop
pop
pop
cli
imul
or
std
test
mov
aam
mov
fistpl
shlb
dec
pushf
mov
testb
jnp
adc
xor
xchg
jg
jl
adc
dec
xor
out
mov
xor
je
push
enter
xchg
setb
hlt
enter
aas
mov
imul
arpl
stos
mov
cltd
mov
mov
test
sbb
gs
sub
cmp
xchg
cld
or
jne
popf
jo
push
add
ficoml
or
xchg
mov
lods
mov
add
sub
xchg
push
sbb
popf
imul
inc
cmp
adc
or
push
stos
or
xchg
push
add
inc
pop
mov
jmp
xchg
std
xor
rclb
adc
cli
flds
sbb
jns
into
shrl
js
jecxz
pop
mov
add
jnp
xchg
add
jl
add
or
ss
adcb
les
out
stos
rclb
sbb
push
jne
in
jle
xlat
xchg
scas
gs
jo
decb
ja
xchg
pop
sbb
mov
mov
xchg
cmc
cmp
test
push
pushf
add
fbld
fbstp
cmp
mov
aad
cmp
std
adc
scas
insb
pop
push
jo
jne,pn
stos
add
adc
cli
nop
sub
sbb
cmp
adc
cld
test
mov
push
or
popa
dec
sahf
rcl
out
fdiv
jne
or
repnz
ljmp
adc
inc
mov
mov
mov
push
jp
sbb
mov
push
dec
test
xlat
mov
fiadds
jbe
lret
push
adc
enter
jo
xchg
jge
jecxz
jne
test
leave
sbb
cmp
jae
nop
daa
and
mov
cmp
adc
daa
cmp
pop
lret
insl
loopne
inc
popa
dec
jmp
sarl
iret
inc
cwtl
or
sbb
mov
int3
push
mov
inc
fnstcw
xor
frstor
ret
jge
mov
add
push
lcall
out
mov
loope
jns
jb
cmp
dec
lea
lea
xor
inc
ret
mov
xor
inc
clc
jnp
dec
out
sbb
loopne
ret
out
fdivs
mov
inc
cmp
cli
sbb
shr
andl
divl
sub
jae
in
sahf
sbb
clc
ljmp
arpl
jp
frstor
xor
lock
loop
test
sub
inc
mov
fwait
std
insb
bound
sbb
sub
xor
aad
cmova
les
cmp
shrl
mov
xor
nop
mov
or
repnz
dec
inc
adc
inc
cmpsl
add
push
or
mov
dec
stc
and
push
inc
js
movsb
sarb
lahf
push
stos
lea
aaa
in
repnz
push
icebp
push
xor
sbb
imul
jo
mov
xor
stos
fisubrs
cld
scas
cmp
pop
ret
mov
jb
inc
cmp
push
mov
sarb
pop
jecxz
mov
push
pop
movl
movsb
or
xchg
mov
dec
add
test
pop
xchg
mov
leave
cmp
into
movsb
in
out
js
rcll
rorl
repnz
jg
adc
das
push
xor
movsb
add
mov
stos
test
sbb
jnp
jno
lock
push
cmp
in
jno
mov
mov
ret
fstl
loopne
inc
lret
cld
pop
imul
adc
push
ret
or
xchg
mov
xchg
imul
js
xchg
cli
mov
mov
into
ja
test
fstl
push
loope
aad
popa
js
pop
int
out
in
and
loopne
cmpsb
dec
push
or
xchg
dec
mov
xchg
xor
shr
cmp
or
out
out
xchg
mov
pop
xchg
and
and
ds
call
jle
shlb
dec
outsb
std
add
jl
cmp
push
outsl
lods
add
mov
dec
scas
add
jae
sbb
repnz
mov
add
or
loopne
dec
sbb
cmpsb
js
stos
xor
and
loop
xchg
cwtl
fadds
lock
in
ja
mov
das
and
rcrb
push
inc
push
mov
aam
sbb
jmp
xchg
mov
push
fadds
xor
in
mov
pop
psubsb
rcl
rep
addb
ds
add
shl
aam
push
dec
xor
das
cmp
popa
addr16
es
aam
add
movb
aam
sbbl
pusha
adc
repz
insb
int3
das
lret
imul
jmp
and
adc
div
enter
repz
jne
pop
test
cmp
and
lcall
mov
cli
push
fmuls
push
pushf
test
xchg
test
mov
mov
jb
sbb
cmp
imul
roll
add
xor
loop
subps
dec
out
add
imul
dec
mov
push
mov
adc
shlb
push
xchg
xor
outsb
cmp
inc
mov
lods
ficomps
xor
cbtw
js
sbb
cmp
out
ret
ret
out
push
sbb
insb
xchg
iret
rcl
imul
cli
ljmp
inc
lds
sub
sbb
sbb
into
xor
sbb
adc
repnz
sub
lret
push
jmp
lods
test
push
imul
sbb
xor
mov
shlb
sbbb
mov
leave
push
pusha
cmpsb
hlt
movsl
mov
lock
rolb
sub
fcoml
or
mov
pop
stc
cs
pop
pop
xchg
cmp
in
push
xor
ja
xchg
ja
xchg
jle
imul
scas
mov
push
xchg
xlat
or
adc
insl
icebp
sbb
pop
movsb
aas
or
test
mov
aad
lds
xor
cmp
arpl
fildll
xor
mov
outsb
sub
add
mov
inc
jle
cli
arpl
xor
add
add
mov
shrb
pop
add
pop
sub
cmp
pop
mov
adc
dec
popf
xlat
push
scas
int
push
adc
and
jle
mov
adcl
pop
inc
cmpsb
jnp
pushf
sbb
aas
cmp
mov
mov
pop
dec
cmc
jbe
push
test
add
sub
adc
das
inc
fsubrs
jge
je
lret
lea
inc
aas
pop
jg
jae
xor
cmc
jle
int
andb
idivl
sbb
push
push
outsb
scas
push
dec
enter
test
call
lidtl
sbb
adc
movsb
and
dec
fmul
sub
mov
add
les
stos
add
xor
mov
out
jo
and
xchg
int3
gs
mov
repnz
test
sbb
sub
sub
mov
add
out
arpl
iret
xchg
cmc
mov
mov
jne
js
aaa
mov
xchg
aam
stc
adc
jmp
mov
sub
jl
fiaddl
repnz
push
ljmp
std
inc
xor
fwait
inc
jne
mov
mov
cwtl
xchg
mov
inc
loopne
sahf
shll
push
and
add
repnz
test
pop
sub
fnstenv
out
mov
loop
rol
xchg
mov
mov
add
imul
hlt
mov
cli
cmp
pop
arpl
sub
sbb
in
cmp
xchg
mov
or
pop
int3
loopne
dec
xchg
sahf
pop
push
int3
pop
mov
hlt
loope
sbb
lcall
in
push
cld
add
arpl
inc
mov
call
bound
movsb
xchg
and
inc
xor
adc
adc
push
or
and
push
sub
cli
sbb
je
pop
imul
sahf
cld
into
and
mov
pop
push
mov
dec
in
jo
in
push
dec
out
xchg
fadds
fucom
pop
jmp
inc
push
jge
popf
add
lret
xchg
pop
js
in
mov
sbbl
push
xchg
add
test
add
out
jne
sar
jns
xchg
or
mov
ret
orl
ret
mov
xor
insb
jle
stos
dec
sub
int3
add
lret
xchg
stc
subl
lahf
mov
dec
adcb
leave
inc
rcl
in
xor
pand
mov
sub
pop
add
sbb
push
pushf
testb
cmp
sub
lret
inc
or
stos
sbb
inc
push
pop
mov
mov
jmp
scas
adc
sbb
iret
or
xchg
enter
int
push
cltd
loopne
xor
iret
lods
movsb
xchg
cmp
mov
and
jp
int
fsubp
loopne
mov
sub
call
in
int3
push
aas
or
add
fsubl
push
inc
lods
repz
inc
sti
cpuid
dec
mov
fistpll
fisubl
in
sub
nop
xor
leave
lock
loopne
dec
ds
rcll
popa
lods
mov
mov
or
pop
rcrb
fdivrs
inc
push
popa
push
fwait
sahf
add
shrb
xor
mov
push
cmp
lret
fcmovnb
into
jmp
sub
idivl
push
aas
xchg
xchg
popf
or
and
fmuls
cli
scas
lock
or
or
inc
cmpsb
inc
adc
adc
shll
add
push
cmc
or
add
lock
out
gs
int
jo
fwait
sbb
popf
push
jns
jb
push
pop
aas
adc
lods
xchg
pop
ja
lea
addr16
jge,pn
inc
lea
xor
les
scas
jno
and
push
xor
daa
cmp
leave
cltd
lea
rclb
insl
cmp
mov
xchg
rcrb
jb
repz
or
mov
das
inc
push
sub
and
or
cli
lock
jns
loopne
sub
or
mov
jecxz
mov
popf
stos
inc
xchg
jp
jnp
push
imulb
hlt
sarl
xor
or
ljmp
rcll
shr
and
test
inc
idivb
xchg
or
mov
mov
nop
fsubp
sbb
adc
xchg
sub
cmp
int3
sbb
add
ret
sub
add
cli
jb
jno
scas
mov
sub
and
cmp
and
and
push
arpl
cwtl
orl
hlt
shrb
aad
adc
mov
adc
sub
cmc
jbe
jecxz
insl
test
repnz
dec
jle
enter
pop
mov
test
les
fidivrs
je
adc
and
mov
rcrl
das
sub
jno,pn
into
sub
cltd
imul
inc
scas
out
xchg
mov
add
jge
and
xor
fwait
aaa
cli
add
sub
add
jle
push
arpl
inc
mov
pop
mov
jae
lret
call
rcr
and
mov
cld
push
fimuls
xchg
out
push
inc
adcb
lahf
add
fistl
xchg
imul
mov
dec
dec
push
loopne
aam
sub
ja
adc
mov
dec
pop
jbe
fwait
orb
pop
les
lea
js
scas
adc
lods
repnz
mov
or
jle
fmuls
inc
push
sarb
push
cwtl
xor
gs
mov
leave
pop
shlb
mov
sub
mov
push
inc
lock
jnp
inc
mov
into
into
ret
fsubrl
pop
ss
pop
ret
pop
adc
aam
add
test
popf
lret
mov
push
add
add
mov
mov
lods
and
movsl
jp
icebp
dec
mov
sbb
push
sbb
xorb
xor
cs
or
mov
testl
int
in
jae
shll
ljmp
stos
int
sub
dec
je
test
xchg
mov
jno
lock
jbe
sbb
jp
or
xor
ss
idivl
in
fwait
int3
mov
fsubrs
add
sbb
push
pusha
xchg
mov
ficomps
xor
mulb
cld
nopl
xchg
or
mov
mov
adc
push
sbb
push
mov
pop
jg
dec
jecxz
lahf
call
je
jo
mov
repz
dec
int3
mov
jle
fs
adc
lds
imul
xor
pop
dec
movsl
fcoms
push
mov
inc
mov
push
stos
addr16
insb
addl
fsubl
ret
mov
imul
mov
push
test
aas
mov
pop
push
movsb
lods
fldt
imul
aad
jns
pop
aas
movsl
loope
pusha
inc
sahf
add
imul
or
ret
stc
sarb
stc
aaa
enter
lea
ret
pop
add
icebp
sub
into
lret
jne
cmp
adc
sub
aam
mov
loop
fs
movsb
clc
mov
dec
push
outsl
pop
inc
xor
mulb
test
push
test
jnp
idiv
clc
adc
notl
jmp
js
and
add
jp
jg
sub
fsubs
or
enter
xor
sbb
cmp
fistps
in
cmp
ret
fwait
in
dec
or
and
cli
pop
cltd
xor
jns
shl
out
imul
sub
call
insb
add
sti
push
xchg
repnz
shrl
pop
jge
lret
dec
adc
sub
add
test
lods
mov
cmp
xor
and
inc
and
fsubl
xchg
cmpsl
ja
inc
imul
jo
pop
negb
push
cmpsb
cs
jecxz
in
cmpb
push
outsl
cmpsl
add
out
add
cmp
mov
xor
jecxz
cmc
mov
fisubl
mov
sbbb
aam
xor
pusha
inc
adcl
pop
test
daa
xor
mov
shr
push
mov
push
ja
cmp
cmpsl
inc
mov
pop
sbb
jnp
iret
lea
and
lret
push
in
xor
xlat
nop
cmp
js
adc
mov
pop
xchg
fiadds
test
mov
mov
mov
jne
xchg
mov
mov
push
mov
inc
mov
sub
and
pop
sahf
insl
out
std
push
xor
cmpsb
mov
mov
and
mov
mov
and
fistpl
lret
xor
inc
mov
mov
ljmp
sub
jne
movsl
add
addr16
push
xchg
mov
pop
inc
addr16
sub
out
pop
scas
sahf
or
sbb
cli
dec
or
push
jno
imul
push
sbb
sbb
add
cmp
in
mov
in
mov
add
mov
xor
mov
cli
push
aaa
aam
pop
sub
push
push
sub
push
sub
leave
pop
adc
mov
inc
xor
mov
insl
sti
xor
push
xor
push
nop
int3
sub
mov
lret
adc
mov
fsts
cmp
xor
inc
and
shl
icebp
into
sbb
xor
mull
jae
adc
add
icebp
pop
xchg
out
cmp
and
cmp
cmp
inc
push
out
pop
test
scas
out
lea
call
icebp
or
xor
ja
add
mov
dec
add
push
jl
sbb
cmc
pop
and
cmp
xchg
adc
shll
pop
cmpsb
es
cmp
pop
fists
xchg
xchg
add
lret
test
mov
aas
aad
push
mov
push
push
popa
jbe
mov
cld
test
mov
pop
call
and
in
mov
imul
push
jnp
stos
aad
xlat
es
xor
mov
icebp
pop
addr16
hlt
loop
xchg
xchg
aaa
sbb
cmpsl
fisttpl
lds
in
pop
shlb
xor
xchg
mov
cmpl
mov
adc
mov
mov
sarb
popa
xlat
adc
popf
adc
and
nop
adc
inc
sbb
imul
mov
shrl
mov
fwait
std
fisttps
adc
xorl
ljmp
test
push
dec
jno
sbb
ret
into
jmp
or
sbb
ja
inc
xor
jge
cmp
inc
or
xor
push
xchg
lahf
mov
sarb
add
xchg
mov
cmc
pop
stc
in
repz
dec
push
test
mov
fcmovnbe
dec
sbb
xorb
movsl
push
and
fnstenv
or
inc
sbb
jno
mov
adc
jb
sahf
pop
idivl
int
jnp
mov
in
mov
jle
xchg
jle
adc
clc
vpmovsxdq
jo
aaa
pop
in
je
add
lds
adc
sbb
jmp
and
jmp
mov
mov
fdivrl
lea
stos
jno
and
outsb
out
bound
xchg
dec
push
push
cmpsl
mov
aaa
push
mov
sbb
xor
andl
jo
mov
push
xchg
repz
sub
pop
pop
icebp
loope
mov
mov
cmp
pop
adc
movsb
push
addr16
popa
sbb
add
mov
xlat
andb
jo
xchg
mov
cmp
arpl
jmp
xchg
push
fstp
adc
add
push
inc
popa
add
fnsave
cmp
mov
in
cmp
push
rcl
lret
cwtl
push
repz
jg
out
mov
add
and
js
fisttpl
dec
dec
push
bound
pop
ficomps
mov
jbe
fcmovnb
jmp
lds
adcb
mov
push
mov
das
adcb
cmp
xchg
pop
rcrb
pop
mov
xchg
inc
mov
jbe
ljmp
pop
mov
iret
jbe
sub
xchg
stos
pop
test
push
aam
xchg
jmp
std
dec
ret
mov
stos
cmpsb
inc
mov
add
ljmp
jno
jbe
gs
lret
cmp
add
or
arpl
and
cmp
movsl
fcomp
jno
add
stc
lods
ljmp
cltd
mov
and
je
cmpsb
push
sbb
mov
ds
lods
mov
rclb
lahf
mov
ret
scas
das
fisubrs
ljmp
in
cld
dec
jae
adc
mov
out
sub
jg
notb
push
shlb
shlb
imul
pop
inc
dec
fwait
aaa
notb
add
inc
lea
es
out
nop
and
cmp
pop
mov
push
imul
jle
sub
in
out
iret
inc
or
testl
lds
mov
jae
jge
cmp
xor
cmp
cmp
loopne
mov
mov
mov
cmp
mov
cmp
jecxz
lods
adc
push
add
or
fcoml
stc
lcall
jmp
mov
fisttpll
dec
fbld
ljmp
add
cs
sbb
pop
push
test
enter
mov
push
lock
xchg
imul
jg
fnstsw
imul
daa
ljmp
push
dec
xor
cmpsl
inc
inc
push
push
dec
mov
add
loop
flds
imul
cmpsl
flds
mov
and
movb
test
insl
push
mov
cmp
xchg
pop
es
add
int3
int3
sbb
jecxz
outsb
jmp
sahf
aam
xchg
fdivl
in
mov
xor
mov
cwtl
sub
jecxz
imul
pop
outsl
test
adc
rclb
das
mov
es
cltd
imul
fnstsw
adc
negl
xlat
jle,pn
cs
stos
mov
sbb
cmp
push
movsb
pop
adc
clc
jae
popf
push
adc
mov
cmpsl
lea
dec
pop
repnz
fwait
add
popf
dec
push
mov
popf
add
mov
ljmp
pop
imul
jle
test
rorb
shll
pop
push
pop
movsb
sub
jb
adc
xor
push
das
mov
xor
pop
shll
push
mov
decb
stos
cmpsl
orb
push
adc
jbe
push
xor
fbstp
and
repnz
xorl
out
loope
filds
and
push
pop
mov
movups
fldenv
cmp
cli
shlb
pop
lret
cmp
pop
xor
inc
dec
adc
sbbb
mov
or
and
xchg
adc
or
jne
xor
das
cpuid
and
pop
scas
push
xor
test
add
lahf
add
push
pusha
jmp
repz
div
xchg
mov
xlat
and
xor
sarl
loopne
std
data16
in
push
rcr
es
lds
sub
insl
mov
mov
pusha
mov
repz
ret
cmp
lret
push
fwait
push
dec
add
sarl
pop
enter
xchg
test
jne
shl
add
xchg
sti
adc
repnz
aam
inc
or
fcompp
jg
in
cs
cmc
push
push
addr16
xchg
push
xchg
cmp
xchg
or
jae
jns
nop
loope
movl
push
pop
out
jle
hlt
sahf
or
or
xchg
mov
in
or
and
gs
fidivl
dec
loope
pusha
ja
xor
mov
xor
push
leave
cwtl
cltd
mov
xor
xchg
rcll
inc
xor
rcrb
jmp
jno
pop
jecxz
jbe
or
jmp
or
icebp
mov
in
dec
cmp
pop
mov
push
sub
sbb
cmp
dec
hlt
scas
loope
adc
mov
test
or
xchg
jmp
stc
pushf
mov
add
jbe
les
es
fidivrl
lods
mov
mov
loopne
lea
inc
les
fidivs
cmpsb
mov
mov
mov
push
cmp
enter
imul
out
pusha
or
or
jle
push
loope
xlat
mov
fldlg2
push
push
hlt
cmpb
cli
andb
std
sub
testl
pop
pushf
cmpb
push
sbb
or
push
lahf
fidivrs
xor
adc
out
xchg
std
sub
mov
sub
std
jb
inc
data16
icebp
in
les
call
cli
xor
nop
insb
dec
inc
in
mov
and
mov
je
arpl
mov
xor
xchg
pop
push
aas
sbb
lods
jbe
inc
aad
pop
xor
inc
lds
shrb
data16
mov
mov
cmc
ficoms
jns
ljmp
lahf
and
sub
aam
xchg
mov
pop
pop
cmp
lods
pop
ret
insb
gs
push
cmp
pop
sub
push
mov
jge
mov
jno
dec
rorl
scas
inc
insl
enter
mov
jb
mov
push
add
push
add
inc
sti
imul
aaa
dec
push
xor
cmp
sub
or
aaa
jp
jo
jg
sub
pop
das
lahf
loopne
jge
jl
cltd
or
push
pop
pop
xor
sbb
in
pop
arpl
clc
xchg
mov
cltd
add
out
sbb
adc
push
pop
push
bound
sti
loopne
xor
stc
sub
loop
nop
outsl
sbb
jecxz
jge
aas
dec
addr16
jo
lret
mov
sbbl
mov
and
dec
mov
or
jns
scas
lock
and
mov
add
jae
jl
dec
jle
jne
aad
mov
sarb
jae
inc
bound
jo
fistpll
sbb
push
dec
mov
ret
sbb
cltd
mov
mull
adc
addr16
mov
je
cmp
jb
add
jo
push
icebp
test
js
jnp
lret
mov
daa
cmp
inc
mov
sub
lret
aas
xchg
xchg
scas
sub
mov
cli
and
xor
stos
push
out
in
lahf
lds
test
andb
inc
xor
pushf
mov
rclb
push
mov
sbb
or
cld
imul
pop
and
and
in
cmp
rorl
mov
out
insb
iret
push
sub
sub
pop
scas
xchg
cmp
loope
cmpsb
cs
sti
jns
sbb
mov
movd
push
enter
insb
or
cmp
adc
scas
push
ret
cmp
add
adc
push
fdivrs
xor
je
stc
pop
dec
pop
fsubr
jg
inc
adc
stc
out
repnz
nop
push
js
out
lock
and
push
mov
cld
inc
subb
sub
lock
sbb
test
pop
leave
fisubs
xchg
fwait
push
pusha
lods
fidivrs
in
and
cmpsb
jne
leave
and
adc
sbb
jns
mov
sbbl
dec
sub
inc
sbb
shll
pop
sub
mov
mov
mov
test
and
outsb
shll
mov
inc
adc
sub
sti
cmp
mov
fbstp
jmp
xchg
cs
inc
xchg
fcompl
cwtl
push
cwtl
and
adc
inc
push
in
adc
mov
add
or
cli
fsubr
sub
add
fwait
sub
pop
sub
jnp
stos
jae
aad
pop
mov
dec
jmp
jae
mov
stos
sub
mov
std
sbb
jne
std
stos
sub
into
add
clc
and
pop
les
fisttpl
out
cltd
push
pop
fcmovnu
inc
mov
dec
mov
hlt
push
imul
xchg
inc
mov
fildl
jle
repz
shr
repz
jecxz
inc
hlt
dec
ss
ja
push
dec
aas
lahf
adc
lret
mov
jo
add
inc
out
sub
cmp
sbb
mov
push
pop
cmpsb
push
call
push
mov
lods
push
mov
aad
fs
dec
xor
mov
adc
sub
das
aas
test
pop
xchg
dec
mov
mov
mov
mov
cmp
cmpl
mov
shlb
or
clc
mov
sahf
incl
imul
shlb
mov
jle
adc
sub
inc
xchg
cltd
lcall
push
ficomps
lea
xchg
ljmp
or
mov
jae
cmpsb
repz
add
add
dec
cmp
loopne
ds
scas
and
cwtl
rcll
sbbb
ficoml
push
fdivp
and
and
pop
ret
jge
inc
rclb
ret
pop
dec
andl
cli
in
pop
push
cmp
shr
xor
hlt
mov
dec
push
imul
xchg
jne
push
jl
stc
inc
stos
dec
mov
pop
shll
inc
fs
sarb
repnz
mov
rclb
jg
aam
aaa
dec
aaa
pop
dec
or
ror
nop
xchg
xchg
fidivrs
fisubrl
add
arpl
push
or
and
cltd
mov
fs
adc
inc
lock
jns
ret
aaa
out
jb
adc
nop
add
jb
inc
gs
into
fistpl
fpatan
dec
and
test
mov
mov
cli
cltd
outsb
lods
call
sbb
test
rorl
cltd
sub
les
cmp
jbe
sbbb
loope
mov
out
lods
imul
mov
and
dec
scas
sbb
xlat
pop
pop
pop
pop
mov
sbbb
push
sahf
daa
cld
aam
cs
std
jle
das
mov
xchg
in
divb
stc
xor
or
bound
jno
xchg
adc
dec
pop
rcl
pushf
clc
repz
jne
ret
imulb
dec
xchg
sub
stos
fdivs
loop
sahf
fstpl
inc
popl
arpl
out
out
mov
jne
roll
out
stc
decl
push
xchg
jmp
pop
cmp
lods
daa
add
cmc
aas
movsb
pop
orb
pop
lahf
sarb
pusha
fadd
out
lods
inc
jg
ds
xor
sbb
cmp
sti
ljmp
xchg
pop
sbb
cli
outsb
add
out
dec
bound
pushf
xchg
mov
sub
int
pop
jge
inc
push
sbb
cltd
push
outsl
xchg
arpl
pusha
inc
lea
fsub
pushf
fsts
icebp
xor
cmp
leave
in
ja
adc
cmp
jmp
inc
inc
sub
stc
mov
cmovo
jl
test
mov
fdivrs
mov
cmpsl
rolb
pusha
fsubrl
xor
inc
sub
sbb
adc
iret
pop
mov
fnstenv
sbb
es
and
dec
mov
xchg
data16
xchg
dec
subl
fcmove
test
pop
dec
push
in
sub
mov
fwait
push
mov
pop
sub
cli
mov
jle
dec
cmp
insb
inc
pusha
dec
imul
xchg
out
xchg
xor
push
lahf
cmc
jecxz
xchg
fisubrs
andb
jb
nop
sub
push
mov
popa
imulb
and
mov
pmulhuw
dec
mov
jle
clc
fldt
cld
mov
cmp
imul
push
stc
lods
jbe
outsb
addb
xchg
fiaddl
lret
popf
ret
cmpsl
iret
or
add
das
inc
into
ss
rclb
cmpsb
push
test
pop
mov
mov
in
outsb
das
xchg
out
or
cmp
push
movsl
lret
mov
inc
sahf
test
rclb
push
rol
cs
mov
sub
mov
jo
jl
int3
push
mov
fidivrl
jge
divl
inc
inc
stos
ljmp
insb
cmpsl
fs
jne
mov
repz
sub
adc
or
and
test
arpl
dec
je
pusha
ja
pop
in
test
mov
xor
fabs
or
popf
call
pop
pop
test
sbb
hlt
fcomi
cli
inc
movsl
negl
jb
xor
sbb
ret
mov
das
ret
and
int3
adc
sub
and
sbb
jae
iret
loopne
int
cmpsb
popf
call
mov
fwait
sub
iret
sub
lret
loope
scas
adc
sub
adc
cmp
push
cmpsb
push
dec
gs
push
mov
and
and
lret
inc
lock
mov
call
mov
dec
orb
jp
popf
or
push
and
daa
and
fs
jbe
push
lret
ficoms
notb
rorb
out
loopne
jae
jecxz
faddl
jno
incl
xchg
aad
fcomp
daa
cwtl
js
sub
hlt
pushf
jbe
je
loopne
pop
add
stos
and
jnp
mov
mov
mov
fwait
lock
nop
ljmp
movsl
bound
pop
lock
push
out
data16
mov
movl
sub
rcrb
push
int
rolb
pop
sbb
xchg
push
cltd
jecxz
xchg
xchg
mov
adc
push
jg
pop
add
out
loopne
decb
mov
xchg
int
mov
jecxz
ficompl
inc
enter
mov
arpl
push
dec
adc
fimull
mov
inc
loop
adc
into
fsubl
js
insl
cmp
mov
inc
mov
push
xchg
mov
dec
test
adc
rcrl
jecxz
cmp
jecxz
pop
cmpsb
push
mul
fs
jns
and
jnp
inc
test
test
jg
rcr
fmul
std
xchg
or
cmp
popf
in
adc
es
mov
movsb
sbb
sarl
in
dec
imul
mov
jb
and
cli
test
add
cmp
dec
xchg
movsl
cli
pop
inc
stos
and
dec
lods
repz
push
mov
iret
inc
inc
mov
cmpsl
lret
xchg
ret
int3
and
push
add
add
in
js
inc
push
sahf
sti
daa
ret
dec
add
popf
cmc
leave
sarl
mov
and
push
cmp
mov
cmc
in
in
adc
sbb
int3
push
iret
jp
cmp
subl
dec
jle
mov
sti
pop
jae
mov
cld
mov
pop
push
jns
and
sub
icebp
lock
rolb
cmp
test
sahf
pop
aaa
cmpb
int
fidivl
test
mov
lock
xor
xlat
fistps
rcrb
push
jge
js
cmpsl
push
dec
sti
push
insl
xor
pop
fsubp
sbb
out
xor
shrb
ficomps
pop
lods
les
pop
cmp
fiaddl
pop
fdiv
inc
bsf
jae
and
aas
sbb
icebp
ss
push
adc
repz
xchg
and
mov
test
lcall
xor
shl
mov
sbb
je
push
jp
cmp
jl
test
icebp
jge
insl
jne
mov
xor
inc
or
sahf
out
xor
das
push
push
xor
mov
std
shrb
jb
mov
dec
inc
pop
xor
push
add
pop
sub
jo
stos
stc
int
stc
pusha
lret
es
sub
xor
divb
imul
outsb
int
clc
and
adc
imul
dec
shll
jp
mov
test
push
int
cs
clc
inc
lahf
and
test
in
jge
aaa
or
mov
push
push
js
mov
imul
outsb
mov
dec
xlat
movl
imul
sbb
shlb
xor
sahf
movsl
aas
stos
mov
test
popa
out
or
ds
push
je
jae
daa
xor
enter
sbb
aad
mov
out
sbb
fwait
sub
imul
pushf
fisubs
or
insl
enter
adc
mov
lods
and
xor
mov
test
in
fistps
mov
into
xchg
and
out
out
pop
ljmp
pushf
inc
outsb
sub
jns
mov
push
xor
push
insb
fwait
addb
out
bswap
stc
aaa
fstps
enter
jae
shrl
adc
subb
dec
subl
fnsave
dec
ror
mov
pop
add
pusha
repnz
lods
int
cmc
and
ss
inc
mov
imul
testb
data16
outsl
aam
lods
dec
inc
add
add
mov
xor
leave
aaa
cli
cltd
in
imul
sub
pop
xchg
dec
dec
push
dec
addr16
mov
es
sahf
ret
outsb
sti
ficomps
insl
jnp
inc
sub
insb
in
loop
loop
push
cltd
push
jg
jecxz
push
inc
jecxz
push
cmp
push
cmp
xor
adc
xor
arpl
out
icebp
push
hlt
cmp
xchg
popf
xchg
jg
arpl
add
insl
aam
into
sub
shll
or
push
push
pop
je
pop
push
or
add
lahf
ljmp
xchg
or
shll
mov
sub
scas
mov
cmpsb
loope
dec
ja
sti
cmp
cmp
imul
ja
les
test
xchg
xchg
inc
jp
or
push
negb
out
adc
pop
adc
jnp
pop
repz
adc
outsb
and
lock
lahf
lret
mov
std
es
and
std
daa
and
insb
pushf
or
cmpsb
ret
or
xchg
xor
add
fisttps
jecxz
jp
adc
push
or
sub
sbb
pop
xor
mov
sbb
xchg
add
es
insl
movsl
mov
xchg
push
inc
jnp
call
out
call
adc
gs
cmc
cmpsl
mov
and
mov
rorb
mulb
es
arpl
in
cmp
push
pop
xor
jl
mov
sbb
pop
dec
mov
xlat
enter
or
push
inc
dec
sub
cmp
andb
not
inc
mov
dec
ds
push
push
or
pop
repz
dec
dec
test
repz
sbb
stos
inc
mov
pop
aas
or
mov
jmp
inc
daa
sbb
fwait
shrb
icebp
xchg
mov
xor
dec
xlat
outsb
xchg
cwtl
sbb
jecxz
lea
fbld
adc
xchg
les
push
sbb
imul
cmp
jg
dec
das
push
enter
mov
icebp
pop
inc
pop
adcb
int
inc
mov
pop
xchg
push
inc
shlb
mov
jle
and
mov
add
dec
pop
nop
aaa
cmp
lods
or
sbb
mov
add
shrb
xor
into
dec
cmp
cmpsl
pop
aaa
pop
xor
pushf
insl
cwtl
mov
sbb
fdivrs
sbb
ja
test
aam
inc
test
lret
dec
gs
sub
cwtl
stos
sub
sarb
cld
imul
push
mov
pop
push
loop
adc
mov
mov
lods
cmpsl
sub
add
push
or
and
adc
inc
inc
jecxz
xchg
push
sbb
push
dec
std
ret
test
test
dec
add
popf
daa
sbb
mov
outsl
in
call
and
aam
xchg
sahf
enter
push
push
gs
loop
loopne
mov
sub
mov
not
mov
add
push
xor
pop
jo
mov
notl
popf
xchg
lahf
nop
pop
sarl
or
cli
xor
cltd
pusha
inc
fcmovb
fstps
push
loop
mov
xor
mov
and
dec
cmpb
test
push
add
stos
push
lcall
out
xchg
and
xchg
xchg
jno
xor
mov
in
pop
adc
adc
popa
je
sub
sbb
gs
jl
and
push
cmpsb
lcall
cmpsl
push
adc
test
rorl
inc
in
pop
jbe
jge
lret
lds
imul
jg
scas
xchg
out
mov
pop
mov
lea
lods
jne
scas
xchg
sbb
aad
enter
popf
xlat
and
adc
movsl
and
ret
rolb
enter
es
cwtl
xchg
jge
jnp
or
sti
jo
shlb
cmp
sub
add
xor
outsb
xchg
cwtl
pop
adcl
lods
outsb
xchg
or
jo,pn
mov
pop
jno
imulb
and
jae
lds
hlt
leave
push
pop
cmp
cmpsl
leave
lods
xchg
push
das
push
fdivl
daa
sbb
inc
pop
les
imul
xchg
pop
xor
pusha
xchg
adc
jge
xacquire
pusha
push
push
cmc
add
pop
jg
jmp
mov
and
enter
pop
cld
std
mov
push
outsl
pushf
xor
dec
aam
inc
dec
mov
pop
lret
inc
scas
clc
pop
sbb
in
sub
je
lahf
mov
mov
adc
add
lds
es
imul
aad
jmp
jbe
xor
jno
sub
mov
pushf
pusha
adc
dec
sub
aas
dec
into
sub
test
or
sti
out
jl
xchg
fildll
cmc
lret
xchg
arpl
adc
jns
or
rorb
inc
jae
pop
cmc
dec
test
sbb
arpl
clc
lock
or
scas
iret
jne
jbe
sbb
lret
insb
jge
imull
fwait
and
int3
jo
inc
fbld
mov
int3
cmp
aam
adc
xlat
popf
nop
sahf
adc
jl
jnp
pop
cmp
shl
scas
sbb
cld
mov
imul
arpl
add
xchg
xchg
dec
aam
mov
and
inc
orb
hlt
xchg
sti
iret
jp
push
lret
roll
pop
mov
push
xor
stos
mov
push
mov
lea
scas
xchg
ret
xchg
jae
sub
aam
jne
push
jmp
hlt
jo
in
orb
pushf
hlt
pop
xchg
mov
mov
rol
mov
jl
push
and
pushf
adc
xchg
jno
cmp
fimull
int3
mov
dec
test
sbb
inc
add
jnp
cs
divb
fs
loope
mov
cmp
cltd
stos
test
jb
xchg
fs
aam
pushw
or
and
test
ret
es
test
ret
pop
push
sbb
inc
movsl
fmuls
mov
cmp
sub
xchg
or
repnz
insb
sbb
ja
jmp
jmp
jns
cmp
adc
sahf
mov
mov
call
add
fstps
fisubrl
xchg
mov
dec
dec
xchg
jg
shll
sbb
shrl
dec
loope
into
sub
inc
push
into
in
sbb
xor
cmp
lcall
xchg
aaa
subl
cld
push
inc
adc
insb
jp
jecxz
or
addl
sbb
mov
jmp
push
and
sub
out
mov
mov
sub
pop
stos
jp
leave
stos
adc
lock
insb
shl
pop
sbb
mov
push
cli
mov
je
jae
lods
imul
enter
mov
or
mov
inc
inc
call
movsb
xchg
pop
mov
lods
sbb
mov
cmp
das
out
and
pop
xchg
push
repz
mov
fmull
jne
jnp
and
jmp
cmpb
stos
jmp
test
rorb
jge
data16
xchg
mov
insb
ror
cmpsb
fsubp
xor
iret
ja
insb
cltd
adc
out
lret
hlt
adc
push
add
shlb
pop
nop
and
and
and
int3
lods
xor
add
cs
cmp
cs
jg
add
fadds
adc
xchg
sub
fisubrl
negl
aad
fisubs
push
jmp
gs
sbb
add
xchg
sub
cltd
in
imul
out
and
pop
lods
sub
into
push
subl
dec
sbbb
mov
and
xor
cmp
push
xor
inc
push
jl
dec
mov
test
xchg
mov
mov
aad
xor
fsts
sub
test
jmp
lcall
mov
push
mov
sarl
pop
bound
rcrb
sub
popf
lock
add
scas
pop
mov
push
xor
mov
movsb
stc
add
mov
out
js
cmpsl
sub
push
jo
rep
int3
sbb
cs
inc
movsb
inc
dec
rcll
push
lock
sub
mov
jmp
xor
sub
in
push
and
and
movmskps
inc
sar
aad
mov
lods
fcomi
stos
shll
scas
aaa
push
xchg
popf
push
lods
lods
push
mov
mov
repz
sti
repz
daa
mov
clc
sbb
out
mov
and
mov
xor
outsl
frstor
adc
test
or
fs
inc
stc
pop
pop
ja
popf
mov
add
sbb
shll
out
or
dec
movsl
mov
jmp
push
fnstenv
mov
mov
leave
ret
lahf
imul
imul
jbe
xor
or
inc
fwait
sbb
js
dec
sbb
fucom
mov
sarb
add
stc
xrelease
cmp
xchg
and
fcoms
mov
cld
inc
loope
jg
lcall
loopne,pt
loopne
dec
push
and
mov
push
mov
int
inc
or
dec
test
xor
xchg
dec
jp
int3
sbb
into
mov
adc
pop
hlt
inc
adc
imul
mov
mov
jg
test
sarb
inc
outsb
shll
daa
mov
cmp
pop
adc
repz
out
outsl
mov
stc
push
cmp
movsl
and
bound
xor
xchg
sti
lock
jp
sbb
xor
adc
sbbb
repnz
out
inc
mov
insb
add
or
aaa
push
out
int
and
lea
sub
jge
mov
int3
xor
cmc
in
push
cmp
xchg
sbb
add
pop
int
mov
cmp
pop
lods
mov
inc
sahf
push
mov
lods
xchg
lea
xchg
jae
mov
fcomp
in
scas
xchg
ret
or
push
mov
jo
clc
dec
add
stos
rol
xor
inc
ja
cli
and
push
out
iret
cmp
ds
mov
cmc
xor
inc
mov
cwtl
ret
mov
cmc
loop
inc
add
mov
stos
adc
jmp
cmp
dec
sub
cmp
cmp
cmc
repnz
or
aam
sub
mov
pop
lea
leave
mov
in
jb
or
lcall
jns
fs
pop
call
push
and
pop
dec
cmpsl
cmp
pop
jo
inc
imul
and
add
imul
jl
les
xlat
lock
cmp
sbb
inc
negl
inc
nop
mov
cmp
jnp
iret
jecxz
jl
sti
xor
fwait
popf
sbbb
ret
int3
inc
pop
clc
xor
fs
outsl
xchg
add
mov
jae
sahf
adc
pop
jle
pusha
shll
sub
addr16
or
hlt
xchg
mov
ljmp
out
movsb
and
push
lahf
mov
ficoms
and
sbb
xor
fs
mov
lea
ret
push
ds
xchg
lock
in
jmp
add
popl
sahf
xchg
cli
addl
out
mov
mov
aas
adc
imul
inc
roll
fistpll
fsts
dec
sahf
fucomp
xor
aad
mov
mov
jecxz
imul
mov
mov
into
push
test
iret
cmp
ja
lahf
xchg
hlt
and
cmp
inc
sub
enter
pop
inc
sub
mov
je
xor
mov
decb
addl
inc
aaa
pop
inc
fwait
xchg
repz
inc
cmp
cmpb
mov
sub
pushf
aad
pop
push
pop
adc
clc
imul
push
fldenv
imul
aad
dec
push
adc
ds
adc
sub
stos
or
gs
xor
push
sar
les
xor
and
fs
out
dec
movsl
push
add
ret
adc
mov
mov
ja
sbb
aas
mov
xbegin
add
pop
inc
lret
sbb
dec
cli
pop
flds
sbb
scas
jbe
gs
fisubl
add
xor
sub
insl
mov
dec
push
mov
test
inc
inc
push
mov
repnz
rol
out
cwtl
lods
in
mov
nop
xchg
lahf
xor
sbb
in
adc
hlt
jo
sbb
and
mov
pop
or
mov
push
jae
and
movsl
adc
gs
and
cmpsb
mov
mov
dec
rep
adc
insb
stos
ret
popa
in
fidivrs
push
sbbl
mull
mov
mov
insl
or
mov
bound
arpl
in
xor
data16
cmpsb
cmp
or
shl
insb
jecxz
mov
sbb
sbb
test
inc
out
lods
shlb
shll
je
cmp
stc
lret
add
rcrb
dec
loop
inc
pop
frstor
add
in
mov
out
inc
inc
sahf
jns
jbe
fnstcw
inc
push
sbb
or
push
and
dec
jge
or
xchg
pop
xchg
loope
fldenv
mov
and
and
pushf
jp
jbe
out
jge
fcmovnu
cld
in
dec
xchg
loope
mov
push
in
jge
and
mov
outsb
insl
and
jnp
push
in
add
jmp
sub
rorb
movsl
dec
mov
test
pop
pop
test
xor
mov
pusha
adc
mov
push
push
sahf
into
push
adc
mov
jne
pop
xchg
lea
ja
aam
outsl
jb
enter
lods
inc
fnsave
pop
in
mov
push
scas
jl
aam
mov
and
mov
inc
dec
push
sub
scas
jne
jp
sbb
or
pop
jl
lret
pop
jle
add
ljmp
mov
lods
inc
sub
sahf
mov
out
adc
or
cmp
call
lods
or
outsl
aad
iret
push
dec
cmpsb
rcrb
xchg
mov
cmp
sbb
jmp
gs
inc
xchg
adc
mov
push
inc
ljmp
test
pop
insb
jl
sbb
dec
out
pop
call
inc
clc
sub
out
cmp
push
lds
xor
cmp
lods
mov
jns
lods
lret
push
add
fdivl
xor
cmpsb
jg
xchg
push
test
pop
push
fisubs
out
out
cmp
jecxz
add
in
dec
sbb
aam
mov
xor
imul
sahf
outsl
js
popa
add
popf
pop
sahf
xchg
push
dec
shlb
popf
mov
mov
std
enter
clc
mov
insl
cld
xchg
ljmp
ja
mov
mov
addr16
jp
push
fs
pop
add
pop
mov
jne
ficomps
movsb
in
popf
cmp
dec
fsubl
decb
cmp
or
iret
pop
mov
gs
sub
mov
jns
js
out
cs
sub
fst
lcall
aam
jb
fsubs
dec
lock
jbe
fbstp
int
in
cwtl
sbb
mov
mov
jbe
fcomps
addr16
xor
mov
inc
cmp
and
xlat
lahf
lods
sub
jbe
fnstcw
cli
push
les
xchg
sub
xchg
insb
add
cltd
dec
fcomps
xor
lcall
sbb
jmp
adc
hlt
shlb
fidivrl
mov
mov
int
mov
mov
fwait
imul
add
fsubs
inc
dec
mov
mov
cwtl
fimuls
push
adc
inc
mov
ret
mov
sub
sbb
mov
adc
bndstx
and
mov
sub
push
insb
daa
les
adcb
adc
mov
enter
lods
cmp
push
and
inc
daa
xor
push
and
ds
mov
loopne
or
cmp
adc
mov
pop
sbbb
sbbb
stc
or
add
xor
push
inc
pop
in
insb
ror
jne
addr16
xchg
add
test
divl
fimuls
xor
stos
xor
jecxz
enter
outsb
jne
or
sti
mov
je
loop
test
pusha
mov
add
push
clc
jns
ljmp
cmp
in
ljmp
jno
dec
and
cmp
pop
shl
sti
mov
js
movsl
add
sub
addb
ja
sbb
inc
xchg
and
js
sarl
inc
mov
mov
cmp
mov
adc
shlb
mov
jae
xchg
test
out
mov
mov
lds
pop
cmpsl
daa
int
mulb
sub
pop
or
mull
push
test
shlb
mov
das
cmp
cmp
inc
ja
addr16
xor
jns
pop
popa
cmp
add
sbb
adc
rcrl
sbb
jmp
xor
stos
sub
jmp
pusha
inc
fmull
ljmp
les
cmp
mov
jg
test
jg
dec
fisttps
cmp
std
push
xchg
out
stos
xchg
jge
in
lcall
push
hlt
dec
imul
hlt
aas
mov
ret
adc
sbb
lret
test
outsl
leave
adc
push
ss
pushf
mov
mov
sub
jle
dec
rorb
dec
add
movsl
mov
and
lods
mov
add
scas
fisubrs
fbstp
xchg
sub
sub
cmp
pop
push
fs
orl
popa
mov
sbb
rep
add
mov
dec
jl
into
jbe
orl
stc
adc
rcll
ficoml
push
push
mov
mov
lret
mov
cwtl
adc
pop
out
push
pop
test
and
sti
aad
push
int
adc
cs
or
push
mov
add
jns
jnp
repnz
push
int3
inc
cmp
dec
aas
inc
cmp
ja
inc
dec
xchg
es
arpl
adc
mov
sbb
and
fadd
jbe
movd
imul
pushf
mov
shrl
inc
es
stos
scas
out
jb
in
xchg
xchg
pushf
xchg
and
jge
sti
mov
aas
pop
inc
stos
sbb
jp
push
out
jbe
movsl
imulb
mov
mov
mov
pushf
rolb
hlt
add
loopne
jb
cld
lret
adcb
push
ja
xor
popa
or
out
sbb
sahf
hlt
cwtl
roll
mov
mov
popf
push
pop
rorl
rol
sub
insl
cmp
pop
outsb
sub
xlat
xchg
shll
push
dec
fwait
repnz
cmp
pop
pop
aad
insb
and
jl
xor
mov
pop
mov
lea
rol
cmp
mov
sbb
inc
and
cmpsl
cmp
and
fucomi
cli
rcrb
les
ffree
cmp
mov
int
mov
inc
cmp
lods
test
mov
jo
jmp
insl
lods
jg
inc
sbb
mov
sbb
addl
inc
cmp
nop
mov
cld
jae
xor
ror
js
test
mov
clc
fimull
mov
sub
and
dec
push
xchg
xor
cld
inc
mov
xchg
pop
mov
push
rcll
lods
into
aam
sahf
pop
push
sar
push
inc
insb
ret
rolb
sarb
push
subl
popf
insl
cwtl
stc
jecxz
and
push
pop
fucomi
and
xchg
inc
bound
jp
mov
jmp
sub
xchg
jg
pushf
repnz
xor
and
aaa
mov
xor
jb
add
cmp
int
adc
xchg
inc
imul
fidivrl
cmp
lock
imul
sub
pop
or
jne
or
inc
inc
popa
mov
pop
fwait
pop
int3
fbld
pop
ret
test
push
xchg
cmp
incb
mov
repnz
mov
loop
notb
xchg
and
mov
loopne
sub
jns
inc
sub
cmpsb
int3
stos
ljmp
sti
adc
cli
fstps
inc
in
imul
mov
imul
ret
in
std
push
jmp
push
jb
sub
mov
ficomps
mov
lods
mov
pop
pop
xor
sub
inc
in
shl
int
cmp
enter
cmp
xchg
insl
cmp
shrl
add
mov
jns
in
subl
arpl
rorl
iret
rorb
lcall
fwait
mov
std
rolb
daa
push
ss
or
mov
cmp
mov
test
je
pop
mov
movsb
ret
repz
xchg
jae
xor
mov
inc
hlt
fsts
pop
pusha
push
popa
jp
push
sbb
fdivrs
jle
repnz
cwtl
mov
xor
fimull
test
lods
jo
fs
popa
mov
insb
fwait
push
push
cmp
lret
adc
add
rol
pop
sbb
cmp
jmp
mov
push
inc
inc
pushf
push
shr
adc
cmp
movq2dq
cltd
xor
js
jne
jmp
mov
divps
mov
add
dec
lods
mov
dec
cmp
push
es
shlb
adc
fwait
lds
js
das
ret
mov
das
fldl
jbe
adc
jns
mov
loop
mov
sbb
aam
sub
sub
mov
repz
shlb
lds
nop
lods
xchg
pop
mov
loop
enter
adcl
inc
subb
inc
mov
outsl
hlt
push
adc
mov
scas
push
mov
mov
orl
out
jno
scas
mov
inc
ret
ja
xchg
add
mov
bound
xor
scas
mov
mov
pop
inc
movsl
mov
sub
scas
adc
adc
popa
cmp
push
ja
sbb
ret
and
mov
and
fwait
loope
sub
and
imul
mov
dec
arpl
mov
xchg
add
stos
sbb
adc
dec
mov
jnp
jbe
cmp
aam
xchg
pop
add
in
cmp
inc
adc
cmc
out
xor
jl
test
inc
fs
pop
jge
dec
cwtl
into
inc
loop
sub
xchg
out
lcall
hlt
outsl
test
xchg
sub
fs
fstps
mov
mov
sbb
aas
lods
call
ffree
xor
cld
push
shlb
jns,pt
xor
mov
mov
inc
mov
dec
lret
mov
add
jbe
xor
sub
xchg
aam
out
stos
or
cltd
insl
movsb
jns
clc
or
push
imull
mov
jo
sbb
push
fcomps
outsb
cld
sarl
out
outsl
pop
jp
mov
jp
fwait
packsswb
mov
cmp
xchg
mov
ficoml
xchg
test
imul
jns
sarl
jp
pop
pop
mov
and
push
int3
or
ljmp
out
lret
xchg
test
jmp
pop
or
jnp
xchg
xorl
add
insb
fs
aas
sub
shll
jmp
push
call
repnz
xor
push
sub
xchg
inc
mov
jbe
or
rcrl
add
jb
repz
sbb
mov
rol
shlb
adc
mov
or
cld
sub
aam
dec
gs
es
fnstcw
adc
fdivrs
jbe
shlb
test
shr
neg
sbb
dec
sub
xor
sti
mov
out
adc
sub
xchg
orb
xchg
int3
enter
in
cmpsb
push
int
cld
jge
cli
xor
je
inc
jmp
call
and
pop
neg
sbb
inc
movsl
xchg
in
fsts
out
or
gs
cltd
jp
jns
xchg
int3
pop
mov
or
inc
push
push
loop
jno,pn
xchg
adc
push
lret
leave
add
je
pop
xchg
fimuls
fbld
jecxz
inc
mov
xchg
ficompl
xchg
outsb
mov
mov
push
aaa
lds
rcrb
mov
push
push
pop
mov
in
dec
xor
fdivrl
int
mov
adc
xchg
sbb
imul
xor
stc
mov
cmp
in
xlat
sti
jo
inc
pusha
daa
add
mov
ret
pop
mov
pop
lea
pop
xor
adc
inc
stc
sbb
scas
or
ret
cld
scas
sarl
int
pop
adc
cltd
cmp
inc
orb
into
mov
sub
sbb
add
mov
and
mov
inc
xchg
pop
xor
mov
scas
leave
pop
xor
mov
inc
pop
or
mov
call
cmc
dec
xchg
lcall
cld
pop
inc
adc
sub
les
clc
cwtl
push
call
adc
add
inc
mov
out
add
ljmp
sub
ljmp
inc
lods
mulb
imul
sbb
push
sbb
pop
push
lods
mov
leave
cmc
ja
sub
xchg
in
aam
cld
gs
lea
mov
inc
mov
outsl
push
push
xor
mov
ja
lret
movsb
and
jno
inc
pop
gs
jge
pop
mov
mov
xchg
cwtl
add
icebp
enter
jb
mov
orl
pop
clc
adc
cwtl
mov
test
andb
rcl
jp
xchg
stc
jle
stc
push
and
sub
adc
adc
test
cs
pop
call
repnz
movsb
int3
adc
ja
fwait
jmp
inc
sbb
sub
je
ficomps
inc
inc
ret
mov
imul
jo
xchg
jmp
sub
sub
ret
xchg
inc
imul
xchg
adc
insl
into
pop
ret
jl
pushf
pusha
inc
mov
ret
inc
xchg
jno
mov
call
insb
inc
sbb
aas
cmp
pop
enter
push
mov
mov
sbb
and
cmp
popf
inc
inc
data16
mov
scas
jle
fs
pusha
push
mov
sbb
xchg
in
test
xchg
mov
xchg
pop
fmul
cmp
add
add
lret
adc
add
sbb
dec
inc
xor
int
push
inc
out
push
mov
jne
and
sbb
dec
xchg
sub
inc
fimuls
aam
cmp
lcall
aam
adc
and
fcmovnu
mov
push
repnz
push
clc
cmp
subb
mov
jle
scas
jno
sub
inc
inc
aaa
and
repnz
daa
xchg
das
push
dec
inc
into
xchg
cmp
arpl
cmp
movsb
lock
inc
dec
jp
dec
fistpll
test
loop
mov
pushf
jo
je
movsb
cmpsl
pop
mov
sbb
les
mov
sbb
in
fisttps
mov
int3
into
data16
cld
mov
test
mov
xlat
out
mov
cmp
ret
shr
mov
lea
outsb
lods
cwtl
inc
nop
ja
mov
adc
jne
insl
or
pop
dec
repz
dec
loope
movsl
dec
jns
hlt
arpl
inc
insb
pop
fidivl
ret
test
dec
dec
dec
cld
push
cwtl
data16
seta
mov
xchg
jbe
movsl
mov
mov
lods
xor
inc
arpl
cli
loop
dec
ljmp
ds
inc
mov
cld
push
jp
fsubrl
jle
xor
adc
movsl
mov
pusha
push
jns
sbb
jmp
fstpl
push
push
sarb
movsl
dec
and
add
or
and
int
push
mov
inc
push
cmpl
lock
dec
aaa
cmpsl
sbb
mov
je
adc
dec
mov
dec
sbb
or
fidivrs
inc
orl
jmp
and
cmp
dec
subl
inc
jne
std
xchg
jae
jp
cltd
push
mov
mov
insb
cs
aam
nop
cmp
sbb
jne
adc
sti
mov
push
in
mov
push
repz
das
test
rcr
jae
and
cmpsl
mov
jl
in
rclb
fildl
pop
jle
sbb
mov
in
lock
sbb
iret
add
mov
mov
clc
push
pusha
mov
mov
xchg
pop
cmc
add
inc
ja
cmpsl
sbb
into
ret
decl
fmulp
xor
dec
lahf
jns
in
lods
decl
aaa
mov
sahf
addb
popf
push
push
pusha
inc
test
fidivl
test
fstpt
jbe
rcrl
imul
mov
xor
lahf
ljmp
cmp
sar
sub
fwait
imul
rcrl
and
test
and
jae
mov
adcb
xchg
push
push
jmp
jno
mov
sbb
pop
or
mov
shll
daa
sbb
test
addr16
and
stc
out
mov
lahf
les
lock
jl
xor
icebp
or
je
lods
mov
fisttpll
mov
jle
cmpsb
push
xchg
dec
jne
js
or
xchg
faddl
ljmp
xlat
jae
imul
int3
arpl
pop
bound
rorb
adc
and
push
or
and
mulb
xchg
or
jbe,pt
jns
jg
addr16
and
push
arpl
out
jg
dec
repz
fs
adc
ret
outsl
rorb
loop
jge
or
loop
int3
sbb
cmp
sub
in
lret
adc
mov
aaa
in
cmp
jl
xor
dec
repz
jo
jb
pop
fwait
cmp
sub
and
or
mov
jne
repnz
pop
and
loope
js
jnp
bound
or
fldcw
pop
add
test
mov
cmp
es
hlt
push
test
sbb
mov
xor
inc
sub
push
loop
mov
adc
xlat
xor
repnz
xchg
mov
sbb
insb
or
xor
or
enter
lret
gs
lds
pop
outsb
sbb
jo
xchg
adc
popa
mov
xchg
mov
rcrb
ss
dec
and
ss
faddl
ret
jb
dec
inc
in
das
adc
sub
and
pop
lods
xor
cli
gs
dec
add
add
rcr
add
mov
imul
add
fwait
inc
xchg
fdivrs
jmp
call
sbb
jle
xchg
cmp
inc
int
movsl
jns
or
outsl
icebp
shufps
ds
jecxz
lods
push
cld
jb
loopne
xor
inc
int3
mul
fscale
jecxz
inc
cmpb
dec
loopne
inc
mov
pop
in
std
mov
jno
jbe
push
addl
jne
and
cmpsl
bound
cmp
movsb
enter
lods
shlb
mov
inc
xor
jno
mov
sbb
inc
sbb
popa
xor
aam
stc
adc
aaa
push
daa
je
sbb
add
jae
and
inc
enter
cmpsb
pop
cmc
xchg
pop
sbb
add
jae
sub
dec
dec
lret
pop
stos
out
bound
test
mov
pusha
push
xchg
lock
gs
mov
dec
and
rdpmc
lea
stc
inc
mov
fs
xchg
daa
add
xorl
lods
movsb
inc
shl
cmpsl
cs
cmp
pusha
int
push
es
push
lds
push
mov
lret
mov
inc
cmpl
shll
xor
lahf
cmp
xor
mov
push
fdiv
mov
mov
or
and
xor
dec
insl
and
sahf
push
cmpsb
out
lea
cs
scas
xchg
mov
rorl
push
out
jmp
mov
ret
aas
xor
pushf
imul
mov
arpl
xor
add
fstps
and
and
add
stos
or
push
or
jg
inc
pop
jmp
cmpsl
dec
xchg
into
mov
add
outsl
pop
aas
jp
lods
add
xchg
sar
stos
das
scas
push
xchg
adc
fs
mov
test
push
popf
les
mov
pop
xor
sbb
xor
adc
outsl
into
icebp
shll
xor
aas
push
mov
aas
add
jno
inc
push
sub
lret
mov
push
inc
sbb
and
jnp
lret
adc
pop
inc
leave
aaa
out
push
cltd
sub
loope
test
pop
add
and
jmp
pushf
inc
enter
lods
pop
fnsave
inc
push
dec
out
xor
or
out
pop
push
jno
mov
or
pop
jl
cwtl
fs
sub
scas
pusha
daa
dec
adc
inc
bound
add
or
fists
shrb
or
pusha
mov
jns
hlt
dec
cmc
leave
jae
aas
loope
mov
mov
xchg
lock
push
push
jbe
xchg
xor
push
mov
cmp
sahf
add
clc
ret
das
sub
pushf
test
pop
hlt
and
mov
jnp
jo
mov
shr
shll
sub
inc
add
or
push
aam
test
js
push
jne
add
add
pop
lds
lret
sbb
jae
aaa
call
cmpsb
cltd
daa
cmc
movsb
lea
jae
pop
xorb
outsb
mov
incl
in
aas
cmpsl
ret
push
jl
mov
push
ss
mov
fsubrl
outsb
cltd
jno
hlt
cld
mov
mov
movsb
xor
xor
test
mov
jl
jge
inc
and
je
ds
or
orl
adc
pop
adc
or
loope
xchg
dec
pop
pop
push
divb
push
imul
mov
dec
sbb
push
iret
leave
jp
xchg
inc
sbb
fistpl
cli
aaa
mov
mov
popa
insl
sbb
lods
and
cmpsb
jle
dec
jnp
cmp
es
mov
sbb
imul
sbb
jmp
jecxz
fcomps
add
dec
out
lds
stos
cmpsb
cmpsl
out
sbb
sarb
adc
cmp
ds
or
shrl
inc
mov
jge
sub
arpl
shrb
in
dec
cmp
pop
mov
xchg
sti
cmc
mov
ljmp
aaa
in
mov
fldt
cmp
add
hlt
xchg
pop
std
or
sahf
inc
xor
mov
mov
sbb
imul
sub
shrb
js
pop
mull
scas
push
lahf
add
out
lods
push
inc
ljmp
push
mov
or
adc
popa
xchg
push
mov
cli
movsl
jg
pop
pop
sbb
xchg
mov
cli
jns
stc
xchg
fwait
and
or
int
inc
js
nop
jp
jl
add
push
sysret
jmp
sbb
jnp
shlb
enter
add
xchg
push
orb
pop
sub
test
pop
fmull
loop
jl
cmp
scas
in
dec
mov
push
loop
insb
leave
fnstcw
dec
xor
jmp
into
xor
rorb
lret
inc
testl
fstpl
push
and
jecxz
imul
rolb
jne
fists
jg
add
mov
ret
and
es
pop
lahf
dec
stc
inc
push
ret
out
aas
and
sub
popa
inc
jg
add
sti
pop
push
push
mov
xchg
rol
adc
aaa
push
insl
popa
into
pop
dec
jno
imul
aam
cmpsb
loope
and
aam
shrl
pop
jbe
out
cltd
inc
mov
mov
and
mov
add
and
test
dec
icebp
mov
add
cltd
adc
rcrb
add
inc
xchg
push
lcall
aas
push
inc
fldenv
vmovsldup
call
lods
ja
les
mov
rcrb
pop
sbb
cmpsb
cmp
mov
ljmp
shll
das
cltd
mov
out
and
cmp
xor
jb
sbbl
stos
scas
out
int
popa
mov
jecxz
mov
sub
xor
pop
ds
movsl
imul
sub
pop
adc
inc
jge
stos
jne
dec
or
pop
lret
jl
xchg
sub
roll
pop
push
in
pop
pop
inc
mov
test
lret
add
xchg
das
fstpt
or
rclb
loop
inc
test
adc
xchg
xor
jge
clc
popa
xchg
xchg
inc
jae
push
imul
daa
movsb
mov
mov
call
or
ja
pusha
mov
lock
mov
jo
mov
js
dec
cmp
rorl
popl
dec
insb
inc
mov
cmp
pop
sub
je
jae
mov
inc
rcrl
mov
iret
mov
mov
push
xchg
in
and
add
inc
mov
cmpsb
fwait
test
sbb
mov
or
lret
xor
dec
xor
adc
mov
pop
pop
xor
mov
mov
and
out
mov
in
into
imul
push
push
dec
aaa
xchg
mov
bound
push
jbe
sbb
inc
in
and
ljmp
ss
in
enter
test
mov
xor
lret
outsb
mov
push
mov
push
mov
dec
xchg
cld
dec
test
jns
and
adc
inc
js
pop
push
in
mov
cmc
push
cmpsl
jmp
add
imul
xchg
stos
mov
xchg
in
or
aad
mov
mov
cmp
push
dec
in
ss
jecxz
fisubl
dec
dec
out
xorl
nop
sarl
push
in
lods
test
fs
loopne
push
in
xor
addr16
cld
sbb
test
pop
orb
mov
fimull
adc
outsb
mov
loope
ss
cs
gs
std
js
cmp
dec
xchg
xlat
or
leave
cs
punpckhwd
mov
das
aad
insb
lahf
shlb
lret
pop
xchg
cmp
adc
and
or
mov
jbe
mov
jle
mov
add
xor
xchg
incb
bound
jg
rorb
repz
or
hlt
jnp
push
push
dec
cmp
lahf
jbe
sbb
sub
dec
inc
sbb
dec
inc
mov
and
or
push
stc
pop
cmpsl
aam
xor
xor
inc
leave
jmp
sub
mov
add
pushf
rorb
mov
adcb
inc
sub
ljmp
mov
pop
sti
xchg
fnstsw
cmpsb
add
xchg
dec
push
adc
jns
cmc
lcall
jo
jns
push
loope
aam
pop
shr
dec
push
dec
cs
jne
sbb
cmp
out
inc
inc
cli
cmp
lods
sub
scas
addb
lcall
mov
fimull
testb
sarb
xchg
sbb
jnp
push
sahf
add
cmp
ds
jbe
lahf
jns
outsb
fwait
dec
cmp
or
dec
sahf
call
push
jns
push
int3
inc
std
cmp
xchg
cltd
js
loop
ljmp
jo
and
dec
mov
cmp
sub
sbb
daa
in
mov
push
gs
bound
ljmp
xor
mov
push
loopnew
andl
int3
jp
jl
xor
mov
pop
mov
sub
xor
xor
mov
movsl
iret
pushf
icebp
lret
add
xchg
jns
inc
ss
jae
mov
add
ss
mov
inc
lret
push
jg
sub
test
dec
jge
add
or
dec
adc
imul
leave
fdivl
xor
hlt
xchg
inc
and
sbb
inc
enter
xchg
sbb
loope
sub
repnz
mov
xor
imul
adc
clc
addr16
dec
jge
aas
dec
lcall
jl
mov
les
fimuls
sbb
aam
fcmovne
outsl
pushw
or
sbb
aas
mov
or
sbb
xor
add
in
xchg
lds
sbb
scas
mov
lcall
mov
mov
jo
mov
mov
cltd
lea
test
out
ret
and
adc
repnz
lock
xor
insb
xchg
or
gs
arpl
sub
rcrl
aas
adc
call
mov
cmp
inc
pop
xchg
pop
mov
sub
ds
adc
xchg
bound
faddp
add
test
sbb
pop
stos
or
icebp
jge
dec
in
js
cwtl
mov
adc
repnz
and
lods
push
mov
or
jge
fists
idiv
sbb
sbb
fsubrl
insb
std
or
sbb
add
lock
adc
mov
add
stos
ja
scas
notl
mov
or
sub
xor
hlt
ret
xor
xchg
sbb
aam
mov
push
mov
dec
xchg
cmc
in
ret
inc
insl
and
sti
add
xor
or
mov
jo
out
cmp
idiv
pop
fbstp
pop
pop
cltd
ss
lret
add
int3
lods
pop
mov
pop
aad
sub
dec
xchg
lea
les
jecxz
lock
mov
testl
mov
cmp
or
mov
sub
cmp
adc
sbb
jo
clc
dec
dec
sbb
pusha
xchg
jge
inc
cmp
or
pop
out
push
inc
jmp
add
or
mov
xor
outsb
test
cltd
xchg
ret
push
and
xor
jp
jo
pop
pop
xor
cmpsb
pusha
aas
cmp
mov
andb
push
jb
push
xor
lahf
scas
mov
cmp
fwait
mov
ja
cmpsb
jnp
ss
stc
orl
ja
aaa
imul
addl
popa
fldl
sbb
push
push
adc
sbb
inc
jno
int
ret
jle
and
ss
pop
push
std
jbe
sbb
add
sahf
and
scas
shrb
and
push
in
dec
xor
stc
cmp
adc
add
push
adc
xor
mov
mov
stos
mov
mov
pop
xchg
call
in
std
jmp
sti
aam
dec
jp
mov
xor
insb
push
xor
mov
sbb
ret
scas
inc
ret
cmp
mov
cmp
adc
nop
repz
add
ljmp
fsubrl
jnp
js
ljmp
sahf
xchg
pop
gs
aaa
pop
xlat
add
movsl
mul
test
mov
out
inc
in
dec
xlat
in
mov
fadd
dec
and
cwtl
lcall
lret
es
adc
int
inc
lret
mov
cmp
dec
bound
cld
mov
mov
dec
cmp
ret
in
or
mov
leave
mov
xor
or
inc
xchg
inc
sahf
mov
jo
call
leave
and
and
sbb
and
test
scas
sarb
jb
jbe
imul
popa
jl
xor
jg
movsl
push
je
sbb
nop
jl
push
fdivl
dec
mov
jno
in
test
sbb
push
mov
sti
xor
movsb
subl
ss
ja
jne,pn
ljmp
stc
pop
lock
aad
adc
gs
popf
js
popf
mov
std
cld
inc
movsb
loope
cs
fidivl
or
mov
cmpsl
lds
sbb
outsb
lret
push
cmp
cmp
repz
loopne
shl
mov
decl
sbb
xchg
outsl
push
inc
aas
addl
insl
push
sbb
xchg
dec
jo,pn
mov
push
or
jns
mov
sbb
in
mov
fisttpl
sub
or
fsubs
mov
adc
outsb
mov
call
xor
push
push
lcall
jne
clc
adc
fbld
push
mov
iret
out
cmp
and
sub
repnz
dec
push
cmp
ljmp
push
sbb
and
pop
shr
pop
mov
and
mov
jne
mov
xchg
sbb
jbe
dec
cmpsb
add
mov
xchg
test
sbb
cmp
aas
pop
inc
test
mov
jmp
hlt
xchg
adc
cmc
hlt
adc
cmp
loope
cwtl
cmp
mov
outsl
out
call
add
mov
popl
nop
xor
test
insl
ja
jmp
sub
adc
aas
jnp
push
icebp
fistl
pop
mov
xchg
fistpll
les
cmpsb
add
adc
cmp
loopne
nop
or
pop
lods
mov
mov
dec
jmp
ljmp
push
pusha
testl
pop
push
in
mov
mov
sti
sbb
push
int3
sti
sub
pop
lods
pop
xlat
sbb
fidivs
scas
lea
iret
ret
hlt
inc
test
test
das
mov
je
mov
xor
scas
movsl
clc
jecxz
push
fwait
jae
mov
rcrl
add
jb
or
push
mov
mov
int3
clc
push
and
sub
adc
sbb
out
cltd
test
cltd
loope
pushl
and
sbb
mov
je
test
leave
sbb
sub
dec
dec
cmpsl
adc
dec
xor
add
roll
arpl
cltd
leave
lock
int3
sarb
insb
mov
sub
outsb
int3
jae
test
aam
adc
dec
test
mov
nop
push
push
pop
mov
adc
push
inc
adc
cwtl
int3
pop
incl
pop
xor
sbb
mov
push
cltd
shrb
mov
xchg
ss
mov
add
testb
add
push
xchg
mov
xchg
jb
jb
sbb
in
sbb
dec
pop
arpl
repnz
mov
cmp
lahf
cltd
jecxz
scas
rcrl
sbb
lea
xchg
mov
and
push
in
popf
sub
push
adc
cli
cltd
cmp
lret
adc
cmpsb
mov
sbbb
mov
lcall
dec
cmp
cmp
jg
cmp
in
cmp
dec
das
in
cmp
jle
jle
mov
jmp
inc
pushf
inc
adc
jno
xchg
mov
jp
lock
mulb
lea
mul
popa
dec
stos
lea
mov
int3
inc
or
push
test
arpl
push
mov
sbb
inc
enter
xchg
fwait
xor
movsb
sti
dec
icebp
push
push
mov
lret
mov
jg
cmp
mov
sbb
pop
fistpll
nop
repz
sub
iret
jmp
testl
fsubp
mov
or
jp
mov
cmp
inc
adc
adc
pop
fs
xor
shrl
call
push
imul
popl
add
cmc
ljmp
sub
cmp
fs
mov
mov
or
or
mov
fldenv
mov
add
in
scas
lods
lock
fcmovbe
loope
and
pop
adc
and
das
xchg
push
mov
fmul
test
arpl
in
lret
js
xor
and
push
xchg
and
rcrl
in
mov
imul
jbe
test
adc
sub
xchg
stos
std
xchg
mov
mov
xchg
xchg
cmp
scas
push
cmp
pop
jns
cwtl
mov
fcomps
cmpsl
sbb
sti
fnstenv
sti
js
fisubrl
or
add
scas
lahf
imul
sub
jle
incb
or
jns
mov
dec
int
mov
ss
xor
sub
mov
insb
mov
or
lahf
add
ficoml
ljmp
ffreep
out
add
stos
cmpsl
iret
sub
sbb
and
xor
mov
add
movsb
xor
mov
xchg
imul
mov
xor
xor
stos
repz
mov
and
sub
das
ffreep
adc
dec
lret
lret
push
jbe
jl
imul
jl
sub
int3
or
adc
push
andl
pusha
repnz
and
ror
stos
lods
addr16
insl
pop
imul
aas
pop
cmc
pusha
jge
fistpl
inc
iret
xchg
and
shrb
std
loop
jle
or
dec
scas
sbb
ficoms
mov
in
lahf
in
sbb
sahf
add
sahf
dec
jge
stos
insl
mov
sbb
movsl
imul
ds
mov
xor
xchg
dec
aam
xor
arpl
and
daa
inc
lret
pop
push
xchg
mov
div
push
ret
push
dec
push
mov
mov
ljmp
nop
mov
sbb
or
enter
ds
stc
jmp
mov
add
mov
cmp
cmp
add
jp
aaa
pop
cltd
xchg
inc
sti
add
and
arpl
mov
loope
push
test
mov
jns
mov
add
mov
inc
jnp
rorb
sbb
popf
dec
mov
rcr
and
iret
adc
jb
sub
pusha
divb
inc
or
clc
cmp
sti
jmp
out
sbb
push
jecxz
mov
mov
xchg
push
inc
rorl
xchg
inc
jl
gs
int
repnz
nop
sub
sbb
cwtl
iret
pusha
les
push
mov
jecxz
jecxz
lret
subl
xchg
jl
adcl
jp
add
sub
pop
pop
dec
and
js
ret
test
test
and
adc
ljmp
inc
adc
lret
loope
cmp
or
aaa
cli
stc
pop
sbb
pop
das
push
aaa
xchg
xor
jo
repz
cmpsb
pop
lods
pop
and
repnz
out
movsb
jbe
iret
push
dec
lock
cwtl
and
in
cmp
imul
xor
scas
xchg
out
and
test
rolb
je
test
cmp
xchg
jo
sbb
mov
cmp
xchg
inc
insb
push
push
aad
add
loop
mov
sub
push
movsb
je
bound
mov
push
sub
pop
in
mov
lock
rdtsc
fdivl
cmp
aam
ret
push
sub
scas
jecxz
cmpsb
push
outsb
mov
insl
pop
int
in
pop
test
and
enter
jnp
inc
ret
pop
rorb
lcall
xor
sub
mov
mov
out
ret
xchg
pop
mov
and
xlat
mov
pop
imul
out
adc
rolb
inc
idivl
push
lret
lea
aam
test
je
pushf
orl
pop
loope
lret
shll
aas
sbb
movsl
mov
jl
jle
loop
lret
jno
xor
xchg
mov
mov
mov
mov
pop
repnz
sbb
push
jmp
lcall
or
dec
fcmovnu
fwait
mov
popf
jae
mov
inc
cmp
sbb
shrb
repz
inc
pop
stc
inc
fcomip
fdivl
or
cmp
lods
imul
inc
cmpsl
repz
mov
mov
jno
cwtl
ds
jge
fisubrl
pop
call
add
mov
push
icebp
inc
ret
std
jg
inc
pusha
xchg
dec
push
mov
add
call
push
push
cmp
in
std
lods
popa
xor
push
arpl
xchg
lods
aam
xor
stc
aam
cmp
pop
out
sub
pushl
jmp
dec
mov
cmc
jnp
xor
add
mov
je
in
xchg
sti
xchg
or
lock
repnz
jne
mov
loop
adc
pop
jl
push
imul
pop
mov
es
loope
sbb
cmpsb
loop
test
loop
aam
pop
out
jns
sahf
pop
inc
push
sbb
dec
roll
xchg
inc
imul
test
sub
cmp
push
push
jnp
add
pusha
dec
rolb
xchg
mov
cmpsb
das
pand
ss
into
mov
pop
std
mov
decb
das
cmp
jecxz
push
cmp
mov
jns
inc
testl
cwtl
cwtl
ret
popf
orl
imul
jmp
adc
in
sub
outsb
pop
cmp
fisttps
popa
idivb
and
mov
xlat
leave
adc
inc
and
cmp
xor
pop
inc
xchg
ds
mov
test
std
pop
push
cltd
push
xchg
cmp
dec
mov
cmp
fisttpll
loop
pop
push
push
aas
sbb
push
xorb
dec
mov
lods
pop
stos
xor
add
add
in
pop
fmul
jb
add
enter
jle
out
es
pop
mov
jge
adc
fistl
mov
imul
push
jp
jnp
stc
push
stos
xor
mov
dec
xor
test
inc
or
fistpll
or
and
sub
add
enter
test
and
cmp
adc
das
push
jl
cwtl
fidivl
adc
mov
push
out
aad
pop
jno
adcb
mov
fcmovnbe
and
js
jae
jae
in
dec
out
adc
loop
mov
inc
adc
out
iret
push
inc
mov
xor
lock
mov
or
mull
lea
sbb
cmp
adc
push
mov
jl
insl
fisubs
mov
gs
out
pop
fistpll
data16
faddp
out
push
testl
loope
mov
fisttps
sbb
mov
imul
test
sbb
push
fs
int
dec
lods
xchg
pop
pushf
loope
mov
xchg
lds
cltd
daa
pop
pushf
mov
adc
xor
push
lcall
lret
pop
jae
shrb
mov
mov
cwtl
add
jno
mov
out
mov
fldcw
mov
pusha
fsub
shll
pusha
stos
pop
add
xchg
addl
aaa
or
sub
jle
cmpsl
pop
dec
sub
and
mov
or
cmp
jle
and
xor
xchg
mov
or
xchg
add
or
cmp
out
or
add
jl
sti
hlt
and
jb
pop
mov
lods
mov
lahf
mov
fldt
addl
sahf
pusha
mov
mov
or
pop
mov
cli
xchg
xor
negl
push
push
pop
mov
xor
push
scas
push
rorb
fimuls
push
sbb
pusha
je
fildl
in
push
push
mov
fldcw
mov
out
sub
fwait
jne
test
push
nop
pop
mov
cmp
cmp
arpl
fmul
adc
xchg
nop
sbb
pop
call
daa
in
pop
cs
mov
push
in
add
pop
or
les
roll
push
enter
lret
ja
shl
iret
mov
movl
test
pusha
mov
orl
das
lock
pushf
xorb
lods
repnz
idivl
gs
adc
in
pop
aas
popf
outsl
mov
mov
jge
das
mov
jg
cmc
mov
xor
push
xchg
loopne
add
and
sub
lea
mov
dec
mov
cmc
aam
loope
repz
and
icebp
or
mov
jl
shl
roll
in
test
sti
push
rclb
jo
mov
mov
sub
loop
sbb
test
int
out
mov
ljmp
add
mov
fiaddl
cli
add
mov
mov
cmpl
enter
mov
dec
out
add
movsl
mov
aam
mov
scas
ds
cwtl
push
pop
ds
stos
insl
subb
adc
lahf
testl
pusha
xchg
pusha
mov
sbb
xchg
shll
shlb
sub
frstor
xor
xchg
mov
fyl2x
add
xchg
mov
data16
add
push
cmp
scas
int
stos
add
aad
adc
leave
and
push
shlb
negl
leave
cmp
jle
dec
clc
or
dec
adc
aaa
ret
inc
enter
add
mov
imul
inc
movsl
push
test
repz
aaa
push
das
mov
js
inc
or
mov
push
dec
stc
into
mov
sbb
fidivs
repnz
aas
clc
icebp
jns
lcall
inc
repz
cld
push
test
pop
push
push
cmp
call
pop
jae
rcr
sbb
mov
imul
lea
rclb
or
ljmp
ja
inc
push
divb
push
cmp
pop
push
mov
cmp
mov
cmpb
je
cmp
xor
xchg
das
xor
insl
fxch
sbb
data16
shlb
enter
pop
addl
sbb
repz
lds
daa
mov
jle
xchg
lahf
mov
mov
pop
out
inc
inc
cmp
pop
inc
lcall
cmc
mov
fisttps
pop
movsb
pop
clc
js
iret
pop
inc
mov
mov
inc
push
rcrb
loopne
repz
lret
addr16
test
add
mov
mov
es
fisubrl
pop
add
jne
rcll
xchg
int
pop
dec
cmp
das
push
inc
je
roll
push
jnp
jmp
sub
sub
aad
pop
mov
imul
push
popf
mov
pop
shrb
mov
dec
bound
xor
stc
aam
lea
add
sbb
aam
adc
aas
add
mov
iret
push
add
mov
cmp
xor
pop
push
jle
aas
bound
subl
push
js
lret
push
adc
jnp
sbb
dec
sarb
aas
cmc
xlat
insb
mov
test
loope
cltd
popf
sbb
adc
clc
push
mov
push
ds
outsl
sub
pop
push
fs
dec
das
sti
xchg
repnz
rcl
mov
xchg
cmp
ds
push
aas
pop
add
mov
insb
sub
xchg
pop
out
dec
and
adc
mov
das
jecxz
push
sbb
mov
out
push
and
push
loop
leave
loope
mov
adc
cmpsb
js
mov
jne
cmp
or
in
jecxz
mov
loopne
push
mov
and
cmp
jge
lret
xor
mov
insb
push
jae
sub
and
mov
dec
lret
lahf
mov
nop
pusha
rorw
xchg
out
mov
addr16
test
xor
sahf
dec
sub
loopne
out
int
sarl
popa
jp
xor
adc
out
pop
in
and
add
ret
or
lods
mov
pushf
push
dec
std
mov
int
and
adc
insb
sbb
cmp
iret
adc
mov
and
xchg
std
mov
sub
cwtl
fstl
es
popa
mov
lret
add
cli
popf
mov
xchg
and
mov
rol
mov
fldcw
pop
aam
ljmp
and
jle
add
cmc
les
add
adc
mov
jge
dec
test
mov
imul
adc
adc
sub
movl
lods
in
push
inc
pop
adc
pop
test
mov
sbb
mov
lea
out
push
mov
xor
add
push
cmp
pop
mov
mov
mov
pop
jae
in
mov
fsts
dec
jg
mov
mov
mov
in
pop
inc
mov
xor
xor
rcrl
jns
test
mov
cmpsl
js
mov
daa
inc
mov
push
jmp
and
inc
out
sub
push
ret
cmp
fmuls
test
les
int3
mov
cmp
fucomip
out
sub
cli
arpl
mov
xchg
sbb
push
dec
andb
jp
dec
cltd
or
jle,pt
lods
xchg
inc
jp
js
rolb
packsswb
hlt
jns
xchg
test
lret
popf
out
sub
ret
int
ret
push
out
xchg
sub
lahf
mov
mov
jb
push
push
test
jp
push
push
andl
sub
cmp
roll
aam
mov
mov
mov
negb
in
and
repz
sbb
std
mov
cmp
xchg
cmpsb
push
ljmp
imul
xchg
in
pop
sbb
inc
pop
ja
and
dec
sub
jne
jns
sbb
les
adc
fs
scas
enter
dec
inc
xchg
pop
xchg
mov
aam
mov
das
sub
cmp
out
adc
mov
cmpsb
push
adc
jno
add
ljmp
inc
mov
ret
js
nop
out
out
pop
add
push
xor
pop
into
push
std
push
dec
inc
cmpsb
je
loopne
xchg
mov
fimull
stos
adc
mov
cmp
jns
or
pop
adc
and
sahf
dec
push
fs
add
pushf
or
insl
mov
mov
insb
jae
sbb
adc
loope
fldl
icebp
xor
mov
cmp
test
sahf
std
and
sbbl
jp
in
or
dec
sbb
jl
and
fs
and
bound
repz
loopne
lods
stc
repnz
inc
jo
pop
cli
aam
jp
hlt
ret
dec
jb
jmp
loope
stos
adc
sti
mov
stos
stos
sbb
push
dec
test
jp
pop
cld
mov
es
adc
daa
and
mov
repz
or
daa
jl
mov
mov
and
push
jge
imul
shlb
fsubr
mov
stos
mov
add
push
cmpsl
dec
loop
mov
add
stos
mov
inc
inc
js
divl
int3
push
cmpsb
imul
xchg
sub
fs
cmp
gs
jno
hlt
push
ljmp
aam
mov
sbb
add
mov
pop
xor
movsb
pop
push
mov
dec
imul
in
fistps
cli
add
pcmpgtb
rolb
xor
push
or
lahf
mov
int3
add
fcompl
cmpl
cwtl
adc
rorb
out
int3
mov
inc
inc
xchg
in
imul
xor
mov
xchg
mov
jne
ret
in
fiadds
xor
jns
sbb
stos
hlt
fdivr
fwait
lea
iret
cwtl
lods
loopne
xchg
sbb
insb
mov
lahf
mov
out
push
fcomp
sub
jmp
insl
scas
aad
lret
cmp
push
int3
int3
dec
fldenv
insl
loope
insl
scas
loop
xlat
mov
mov
jle
xor
sub
xchg
mov
sub
jae
and
ret
cmpb
dec
pushf
adc
jp
sub
sahf
cld
jge
sub
out
imul
out
iret
jecxz
sbb
in
cli
pop
pop
out
punpcklbw
movsl
dec
mov
sahf
bound
out
sbbb
push
mov
fidivrs
dec
mov
push
cltd
add
xchg
cli
push
mov
je
loopne
xchg
loope
add
push
cmp
popa
cs
je
sbb
fldt
mov
bound
xchg
int3
fiadds
repz
leave
push
push
xlat
push
int3
fldenv
aaa
pop
icebp
mov
movsl
jge
aam
sub
test
clc
shll
int
roll
adc
repnz
add
mov
jne
std
popf
inc
loopne
sti
out
sub
insl
cmp
loope
lret
sub
stc
bound
xacquire
add
mov
insl
xchg
mov
aaa
push
out
push
push
sub
pop
inc
and
add
inc
mov
cmc
xor
into
popa
gs
stos
jmp
inc
lahf
jle
xlat
pop
lods
pop
xchg
negl
add
ljmp
test
sbb
imul
inc
xor
adc
mov
into
cmpsl
push
mov
xchg
inc
in
pushl
mov
stc
fildl
mov
pop
jle
imul
popf
out
sbb
pop
loope
repnz
loopne
stos
gs
sub
icebp
xor
jg
cwtl
arpl
loopne
push
sub
and
xchg
xor
inc
rcl
data16
sbb
mov
mov
mov
dec
scas
lret
mov
daa
cmp
mov
gs
jae
and
adc
rcrb
jnp
fiaddl
push
sub
jo
xchg
inc
xchg
dec
cmp
call
add
jg
loop
rcrl
ret
mov
mov
xor
push
das
neg
je
cmpsb
push
push
jns
imul
or
sti
mov
ret
cmovbe
pop
jne
push
sub
lds
mov
add
push
pop
xor
test
movsl
movsb
fs
mov
dec
popa
inc
ds
jl
mov
sbb
mov
adc
add
jmp
or
xchg
sub
add
inc
jle
push
cs
pop
cwtl
mov
ret
cwtl
test
dec
pop
mov
in
mov
aam
in
out
gs
xchg
sarb
xchg
cmpsb
sbbl
sub
inc
and
aas
inc
test
push
mov
mov
mov
jmp
and
xchg
dec
xor
xorb
jg
loope
mov
xor
in
jne
pop
pop
jae
loope
push
xchg
mov
xchg
dec
sub
cli
jecxz
lock
and
xchg
pop
xchg
inc
les
and
stos
je
aam
test
push
arpl
insb
fbstp
inc
mov
dec
fmul
add
enter
fwait
jl
jecxz
mov
dec
push
jecxz
jecxz
lret
pusha
dec
sbb
mov
pop
sbb
pop
mov
pop
push
and
lds
imul
push
and
lea
jl
imul
adc
mov
jle
sbb
addl
or
scas
and
xchg
fldt
sbb
ds
or
dec
or
jl
mov
test
repnz
fmuls
inc
inc
jbe
sbb
pop
push
cltd
adc
inc
add
lret
lret
int3
sub
call
into
sub
popf
sti
fisttpl
sbb
lock
adc
clc
push
mov
hlt
fcmovnbe
nop
les
sbb
cmp
stos
mov
xchg
stc
movl
jb
cmc
lods
pop
mov
sti
scas
stos
pop
push
sbb
sbb
arpl
arpl
xchg
sbb
jge
fwait
add
xor
inc
sub
cmp
adc
fs
cmp
movsl
xor
sbb
testl
fnstcw
mov
cltd
loopne
mov
fsubrp
sbb
pushf
pop
in
js
scas
aad
or
add
jne
pop
mov
ja
idivl
ljmp
and
lds
jnp
mov
out
adc
scas
cmc
and
or
pop
inc
mov
stos
and
fwait
pusha
and
stc
shll
push
stc
stos
xchg
cwtl
popa
leave
xchg
or
mov
xlat
mov
movsl
jne
aaa
push
clc
cmp
repz
stos
rcr
popa
fnstenv
imul
xchg
inc
stos
push
cmc
sarb
sub
stos
std
das
mov
lcall
scas
mov
mov
jge
mov
cmpsb
fidivrl
call
std
mov
fiaddl
add
insl
xor
hlt
lahf
inc
outsl
xchg
push
mov
daa
pop
in
xor
push
jbe
xor
xor
dec
popf
loope
loopne
push
movsb
and
sbb
mov
icebp
or
mov
ja
pop
rcll
sbb
ds
jnp
ret
sub
out
jmp
hlt
inc
leave
pop
cmpsb
mov
sbb
add
stos
pop
enter
xchg
lods
mov
out
jns
sbbl
clc
xchg
repnz
fsubl
jae
mov
aam
pop
jns
mov
push
imul
cmpsl
and
fwait
rolb
dec
fisubl
xchg
clc
add
rcrl
add
inc
mov
sub
aaa
stc
xchg
insl
add
fcomi
fwait
mov
mov
dec
mov
loopne
jp
inc
cmpsb
cmc
popf
xchg
or
mov
mov
push
rclb
sbb
jae
cli
inc
ja
sahf
pop
jl
vdivsd
xor
testb
aas
push
inc
in
out
mov
ljmp
inc
add
ret
out
cmpsb
shlb
sbb
and
scas
fst
in
cs
add
sub
lods
mov
fimuls
xchg
cltd
fidivl
sahf
push
lcall
cmp
lods
xor
xor
pop
or
divb
adc
adc
loopne
les
fs
lret
icebp
jl
jb
nop
enter
pop
pop
rclb
bnd
fnstsw
js
push
jno
jbe
cli
sti
adc
out
add
cwtl
ret
inc
cmp
js
inc
enter
sub
sahf
mov
cmpsl
cmp
cmp
fisttps
mov
insb
fdivp
enter
cmp
cmp
xchg
mov
outsl
das
je
xchg
push
shrb
ret
mov
into
imul
js
out
ss
subb
iret
aaa
jecxz
cmpsl
push
scas
enter
fcompl
jle
mov
pushf
push
cmp
int
and
jl
fsubl
sub
dec
xchg
out
mov
jo
fnstenv
or
and
mov
enter
inc
stos
in
mov
pop
adc
rdpmc
jnp
adc
adc
dec
pop
ret
lock
lods
imul
jge
xchg
or
push
dec
je
loope
aam
jecxz
gs
repnz
mov
mov
jo
mov
sarl
pop
inc
jnp
stos
test
sti
xchg
data16
add
mov
orl
into
jecxz
leave
dec
jbe
test
pop
mov
sbb
adc
and
pop
in
mov
inc
mov
mov
and
imul
or
pop
in
dec
out
xor
jns
or
xchg
aad
std
push
mov
loope
jmp
jecxz
call
dec
pop
rorb
in
sub
inc
add
mov
inc
sub
ljmp
push
xorb
repnz
icebp
xlat
ret
or
ret
mov
or
ds
xor
inc
sub
adc
js
lret
add
sbb
cmp
mov
movsb
clc
imulb
dec
sbb
xchg
pop
cmpsl
in
loopne
jmp
test
or
arpl
dec
cmp
inc
fwait
test
add
and
cmp
cmp
repz
adc
inc
gs
xchg
rclb
xor
dec
stc
std
shr
iret
mov
jg
inc
ret
movsb
sbb
sahf
outsl
test
mov
test
or
pop
adc
out
pusha
fdivrs
sbb
cmc
sub
sub
test
loop
mov
lds
lods
ds
dec
inc
outsb
std
fists
testl
sbb
jmp
add
inc
out
roll
mov
dec
lea
out
pop
add
or
mov
imul
push
out
sar
insb
add
imul
push
mov
ss
lods
adc
sub
fs
sbb
je
popa
mov
je
and
or
mov
out
sbb
and
rcrl
jnp
aam
rorb
xor
mov
sub
rcll
push
inc
jle
push
add
jne
pop
lcall
popf
push
mov
insl
shrb
out
sub
mov
cmpsl
insb
jp
cmp
stc
divl
pop
and
pop
pop
out
mov
dec
in
jp
ss
insl
out
out
mov
scas
lret
int3
sarb
std
aaa
ficoms
xchg
xor
in
ja
cwtl
cmp
sub
xor
roll
repnz
cmp
mov
popa
inc
cmp
aaa
pop
xlat
dec
mov
iret
or
fistps
cli
mov
mov
lcall
mov
ja
gs
enter
movl
or
mov
dec
adc
xchg
push
stc
ret
xchg
stos
sbb
or
xchg
dec
popf
clc
pop
mov
adc
in
popa
test
add
xor
movsl
popf
inc
and
fidivrs
cmp
push
add
push
lret
pop
dec
xchg
pop
sbb
jmp
into
out
jle
adc
hlt
push
push
xor
pop
inc
xchg
repz
loop
xlat
adc
or
sbb
xorl
jge
jmp
sub
imul
shlb
stos
ljmp
and
sti
into
sub
pop
xor
pop
test
dec
fisubrs
cmpsb
mov
in
dec
dec
and
pop
pop
inc
adcl
testl
xchg
dec
push
or
xacquire
push
mov
cmpsl
stos
inc
xor
stos
cmp
cltd
jne,pt
xor
icebp
cmp
lods
pop
jg
sbb
push
sub
sub
add
sub
or
inc
add
or
stos
push
add
incb
sbb
out
clc
sub
pop
push
enter
es
xchg
pop
scas
daa
mov
push
vxorps
movsl
insl
sahf
xor
out
popf
ret
fldt
push
sbb
rcrb
or
mov
jnp
mov
fidivl
or
repz
pop
mov
fwait
mov
push
jecxz
jmp
sbb
dec
inc
push
jb
push
outsb
and
lock
lock
ja
add
bound
and
push
jno
xchg
inc
out
mov
stc
insb
ljmp
mov
xchg
dec
popa
inc
lcall
mov
mov
iret
xchg
pop
les
xchg
pop
dec
jg
rcr
cmpl
sti
ficomps
mov
dec
adcb
cmp
xor
test
fcmovnbe
mov
pushf
fbstp
sti
adc
mov
rcrb
inc
cmp
mov
dec
and
inc
repnz
cld
fdivrs
pop
push
cmp
add
movsw
jle
jbe
add
mov
or
jge
push
cltd
icebp
cmp
pop
into
and
movsl
mov
jl
aam
jmp
pop
jecxz
fiaddl
movsl
xchg
push
lock
sbb
inc
lds
stos
in
mov
and
push
or
test
popf
orl
test
jno
movsl
outsb
test
popf
fs
fcmovnb
mov
sbb
js
add
ja
clc
inc
leave
and
inc
shll
movsl
roll
add
add
xchg
lods
idiv
xor
fidivs
sbb
dec
jns
mulb
jecxz
pop
mov
add
jae
fdiv
xlat
sbb
movsb
shll
and
ficompl
icebp
mov
jb
fstpl
pushf
pop
pusha
mov
and
mov
xchg
shrb
mov
inc
add
mov
std
cmp
add
jno
push
sahf
lcall
lret
mov
dec
sbb
mov
mov
nop
push
dec
psubsb
out
es
inc
or
rclb
loopne
test
sub
and
fstp
cmp
mull
in
pop
mov
mov
gs
ja
mov
arpl
inc
inc
imul
and
mov
xchg
cld
or
sbbl
xor
dec
jno
mov
xor
adc
inc
sbb
ficoms
mov
cwtl
std
mov
test
lds
addr16
push
mov
xchg
std
frstor
subb
ds
and
aad
sub
gs
adc
add
ja
and
rclb
aad
xor
fwait
mov
fisubl
dec
ds
gs
loope
push
scas
pop
pusha
mov
pop
xor
loop
add
int
xor
jne
aam
adc
scas
ss
lock
mov
sub
cli
jl
scas
mov
or
push
jno
mov
insb
xlat
lret
data16
divl
cmp
mov
in
nop
mov
gs
lds
fbld
jno
inc
outsl
and
jmp
lcall
das
mov
insb
rol
cmpsl
xchg
sbb
push
movsl
mov
fiadds
mov
stc
mov
lock
cmp
lods
and
in
repz
inc
cmp
sti
in
mov
or
cld
inc
ss
pop
dec
sbb
dec
mov
inc
xchg
rcll
pop
aaa
jmp
cmp
pop
gs
inc
sub
and
mov
lret
into
fwait
pop
scas
xchg
mov
dec
or
test
iret
mov
imul
stos
cld
in
xchg
test
push
and
loopne
dec
xchg
scas
fnstenv
push
in
push
lods
mov
rorl
bound
rorl
xchg
adc
stc
dec
test
push
inc
dec
popa
mov
mov
mov
lahf
pushf
adc
fmulp
jne
imul
sbb
imul
andl
dec
xchg
aas
adc
pop
inc
xor
dec
jb
push
cmp
lods
das
dec
jle
int3
xlat
xor
sub
add
sarl
dec
inc
dec
adc
dec
or
in
cmp
inc
testb
add
test
mov
inc
and
rol
xchg
jno
cs
mov
sbb
loope
leave
mov
je
aas
adc
cmp
push
ss
sub
jecxz
adc
add
ficomps
inc
in
cmp
fistpll
inc
add
mov
pop
sahf
jnp
pop
pop
and
popf
push
adc
bound
or
mov
xchg
stc
cmp
lock
mov
mov
sbb
inc
adc
pushf
adc
test
mov
fsubs
cmp
sub
push
add
xor
adc
icebp
movsl
stc
rcrb
subb
in
imul
fistps
scas
popf
dec
stos
ficoms
mov
and
popa
xchg
ljmp
loop
sub
fbstp
dec
in
addr16
and
sub
push
cmpsl
cmpsl
ficompl
push
mov
leave
and
cmc
jnp
push
sbb
ret
jp
lret
sahf
jp
jp
out
xlat
pop
mov
mov
std
ljmp
xchg
push
pop
jp
mov
cmpsl
push
lea
ret
mov
lcall
mov
leave
jmp
push
aas
lds
inc
add
mov
insb
jle
xchg
call
jp
inc
add
sub
cmp
inc
test
push
inc
sar
jnp
fimull
dec
pop
lea
jmp
jle
outsl
mov
in
loope
jne
sbb
or
imul
scas
fs
pop
aaa
push
xor
push
mov
sbb
aas
repz
fs
faddl
mov
test
mov
mov
insb
test
mov
cs
fistps
mov
add
ljmp
and
popa
mov
push
test
ljmp
lods
push
rclb
pop
fldenv
push
loopne
inc
dec
in
js
in
pop
in
leave
mov
add
in
jle
or
gs
stc
pop
pop
stos
mov
cmpsb
xchg
push
lret
dec
dec
scas
aaa
sbb
jecxz
mov
dec
iret
stc
popf
jle
bound
mov
pop
pop
xor
adc
es
sbb
rolb
addr16
add
jge,pt
jl
inc
adc
lods
push
jae
jg
add
sbb
loope
push
pop
test
add
mov
aas
lret
mov
mov
pop
call
out
push
shll
adc
add
jnp
pop
and
mov
gs
and
inc
mov
push
pop
and
rclb
push
xchg
cmpsb
jo
lahf
dec
imul
nop
xor
shll
mulb
inc
cmc
arpl
or
loope
jg
mov
dec
cmp
jmp
notl
cmpsb
loopne
mov
adc
add
push
xor
bound
pop
repz
js
dec
dec
mov
sti
and
icebp
call
pop
insl
es
ret
gs
sub
dec
out
inc
xchg
add
and
in
call
push
sub
hlt
mov
mov
dec
int
lds
sahf
out
popf
aad
je
dec
pop
mov
movsb
cli
xor
jnp
mov
inc
xor
in
push
pop
cwtl
jb
fucom
shlb
divl
in
faddp
adc
filds
cli
adc
inc
pop
cli
add
jmp
pop
rclb
test
test
pushf
xchg
jp
inc
test
fwait
and
mov
inc
mov
ljmp
xchg
sbb
fcoml
pusha
mov
jp
test
enter
mov
inc
aad
push
out
mov
mov
call
fsts
add
cltd
mov
jecxz
pop
add
insb
gs
jecxz
cltd
and
xor
test
stos
dec
decl
add
enter
dec
int3
xor
leave
dec
sbb
xchg
ljmp
sbb
dec
imul
sarb
sub
aas
inc
gs
inc
pop
mov
into
data16
mov
test
bndstx
fstpt
xor
inc
dec
xor
xor
sbb
dec
push
xor
loop
fimull
out
inc
sub
mov
sbb
insb
xor
jl
jg
and
inc
lock
mov
jne
setne
popa
fisttpll
cld
sarl
testb
add
scas
fsubl
push
xlat
and
les
sbb
sbb
mov
cltd
lods
repz
sbb
pop
fmulp
out
fisttps
push
inc
dec
inc
ss
mov
das
mov
xor
outsb
dec
sbb
push
sub
mov
dec
aad
lock
clc
push
add
or
insb
roll
iret
add
dec
aaa
xlat
mov
add
pop
jnp
pop
enter
aas
and
stos
and
mov
shlb
scas
jns
mov
jbe
mov
int
cli
pop
dec
jo
or
enter
xor
ret
pop
movsl
cmp
jns
jp
movsl
inc
rcll
daa
push
dec
adc
scas
mov
jg
call
hlt
fimull
test
pop
cvtps2pi
cmp
aad
push
sbb
pop
mov
int3
out
sbb
mov
cmp
rclb
or
sub
add
mov
test
xchg
aad
pop
repnz
cmp
hlt
movsl
jecxz
dec
xchg
sti
pop
adc
add
dec
and
xor
imull
clc
jae
lea
xchg
push
mov
add
jo
xor
add
sub
movsb
push
push
jne
mov
hlt
or
bnd
sbb
addr16
jecxz
jnp
stos
cld
lcall
adc
lahf
sbb
cmpb
and
gs
out
and
jbe
in
mov
insb
adc
shll
jmp
and
in
xchg
push
loope
push
mov
cmpsb
push
sub
sti
std
int3
push
aaa
fstpl
cs
jne
fidivl
adc
xchg
aad
js
jge
jae
inc
adc
add
push
or
sahf
mov
ds
and
sub
sub
mov
orb
jle
out
or
mov
test
cmp
dec
bound
fidivrl
mov
popf
sbb
mov
sbb
insl
pop
andl
into
xor
or
data16
outsl
or
mov
mov
lret
in
jo
jl
sub
imul
ss
stc
sbb
and
jns
cmc
or
push
sbbb
in
push
push
add
lahf
popa
insb
test
cld
das
mov
xor
jo
sti
ret
lret
stos
sbb
rorb
enter
int
xchg
inc
test
dec
xchg
adc
xchg
push
mov
sbb
ret
inc
std
jnp
or
js
mov
push
xor
sub
sub
ret
sbb
cmp
outsb
es
adc
ss
dec
pop
aam
ss
pushf
ret
retw
insb
jb
mov
loope
add
pusha
cmc
or
ret
push
cld
aaa
jecxz
xor
mov
sub
add
and
loop
push
mov
fstp
xchg
test
inc
push
pop
and
jl
xchg
pop
mov
sbb
lods
adc
jp
test
icebp
adc
test
dec
dec
inc
cmp
mov
fildl
and
lods
test
dec
fwait
xchg
clc
inc
fxch
push
xchg
mov
xchg
daa
shrb
mov
popf
mov
add
lahf
loopne
mov
insl
shll
sbb
std
push
fcmovu
pusha
pop
imul
push
mov
mov
out
mov
fisubrs
and
push
xchg
cmc
dec
mov
sti
loopne
clc
cli
push
clc
incb
pop
inc
test
in
cli
mov
sbbb
pop
sub
mov
xchg
adc
jecxz
ja
fildl
or
push
icebp
lods
dec
in
sahf
add
insb
scas
mov
aam
mov
cli
cmpsb
sarb
mov
std
and
mov
xchg
stos
add
cli
or
ljmp
rcrb
imul
negb
cli
xchg
mov
aad
jae
push
jle
pop
add
leave
movb
sub
fistl
pop
dec
xchg
std
jb
inc
mov
call
pop
add
sub
cmc
push
push
mov
or
lds
decl
stos
and
dec
paddq
fsubrs
xor
lahf
fsqrt
mov
insl
fistpl
cmpl
jo
js
imul
jo
sub
mov
loopne
cmpsb
pusha
dec
aam
jae
lds
lahf
pop
aam
lret
in
xor
mov
ljmp
inc
cwtl
mov
xor
mov
dec
mov
jl
stos
sbb
sbb
jno
lahf
pop
pop
jae
insb
inc
lret
jne
pop
gs
notl
cmc
lret
xchg
dec
sbb
scas
fldenv
mov
cmp
cmp
pop
push
jb
pop
dec
aam
fbld
sarl
icebp
imul
bound
jae
sahf
popa
push
icebp
test
cld
jmp
jo
mov
adc
mov
xor
mov
pop
cmp
inc
mov
dec
leave
popf
and
mov
stos
inc
js
xchg
lret
sahf
cmp
lds
rcrb
test
add
mov
xchg
adc
sub
stc
lods
aad
ss
scas
ret
loop
jo
pusha
jmp
stc
mov
scas
hlt
mov
add
addr16
jnp
shll
test
adc
out
cmp
sub
xchg
sub
out
rcrl
rorb
mov
roll
repz
inc
dec
jmp
cmp
in
test
and
sbb
sub
es
xor
and
rclb
or
nop
je
sti
stos
inc
push
std
pusha
shll
sbb
loope
pop
fistpll
bound
lret
loop
loop
or
and
xchg
aam
inc
jnp
jp
push
mov
dec
xor
inc
xchg
xchg
js
add
fmul
xchg
push
test
xor
in
jp
iret
das
fisttpl
shl
cmpsl
mov
sub
dec
or
pop
xor
icebp
loopne
add
bound
push
inc
js
imul
jae
repz
sub
outsb
mov
or
dec
mov
mov
scas
pop
mov
lahf
mov
jo
data16
cmp
lea
cs
mov
cld
or
mov
mov
push
ror
mov
xchg
xor
pop
insb
cwtl
and
mov
dec
test
sbb
inc
push
xchg
or
pop
cmp
popl
in
xchg
inc
push
pop
cmpsl
mov
sbb
pop
inc
jp
adc
and
mov
mov
cmp
shll
sub
xchg
fiadds
mov
cmp
outsb
cs
imul
cmpsl
lods
sub
mov
pop
mov
push
jb
dec
sbb
icebp
xchg
pop
imull
mov
mov
lods
or
or
jo
mulb
in
adc
jo
aam
push
mov
xor
out
pop
movsl
xchg
clc
jbe
mov
mov
sarb
rolb
lods
jmp
push
inc
je
jl
xor
jo
lock
mov
inc
mov
and
dec
jo
add
sub
loopne
call
inc
mov
hlt
mov
push
popf
xchg
pop
sub
iret
jae
mov
icebp
std
leave
ss
cmpsl
jne
push
jl
imul
das
add
mov
dec
inc
dec
push
ret
jnp
sbb
lods
mov
cmp
divb
mov
mov
push
in
aas
stos
jns
fisubs
outsb
test
fidivs
mov
repz
push
push
or
pop
pop
dec
sahf
mov
and
jge
xchg
cmp
pop
cmpsl
inc
mov
mov
jno
sub
pop
mov
mov
inc
ret
add
call
insb
mov
adc
xor
sar
push
int3
sub
push
sti
xor
movsl
ds
inc
cmpsb
push
add
leave
and
xchg
push
xor
jbe
mov
fwait
clc
fwait
adc
sbb
jp
lock
ja
dec
fs
cli
fstl
gs
in
pop
ret
push
mov
repz
enter
xchg
xchg
dec
fnstcw
xchg
sub
aam
ds
aam
js
cmp
and
in
repnz
lock
popa
mov
in
adc
in
push
inc
int3
out
push
dec
test
add
pop
sub
lea
push
push
sub
outsl
out
mov
insb
fbld
add
mov
loop
loop
frstor
icebp
push
mov
push
pop
mov
int3
cwtl
mov
jge
or
in
js
cmp
mov
out
stos
lcall
gs
xor
std
jno
mov
popa
lret
push
or
mov
ds
shlb
idivl
adc
dec
rol
test
inc
movsb
stos
lock
mov
sub
or
lds
cmp
test
inc
mov
inc
cld
lret
pop
sub
or
push
cltd
dec
arpl
mov
insb
out
or
inc
pop
cmp
push
add
lret
pop
add
lods
jno
sbb
and
hlt
pop
pusha
stos
fcom
jb
dec
adc
mov
add
scas
jbe
mov
fildll
sub
fcmovu
add
mov
aam
loop
jo
pop
mov
mov
in
iret
push
adc
sub
mov
pop
fs
pop
insl
xorb
or
and
shrb
jge
ret
rclb
jo
xor
loop
sahf
pop
cmpsb
pop
test
jb
pusha
inc
push
mov
xchg
mov
int
ret
xchg
loopne
inc
dec
stos
fldt
sub
mov
push
xchg
scas
inc
ljmp
into
mov
xchg
sbb
add
roll
inc
inc
shl
sub
jmp
jg
fmull
mov
jae
xor
xchg
mov
aaa
aaa
push
fmul
xchg
push
out
iret
out
add
insb
inc
sahf
ret
dec
ja
xchg
popl
fsubl
outsb
jle
mov
sub
out
push
and
dec
loopne
test
dec
jnp
pop
jno
adc
pop
test
add
dec
mov
roll
aam
jp
adc
and
inc
xor
adc
lret
cmp
sub
outsb
aam
rcrb
jns
mov
fidivl
mov
lret
cmp
movsb
adc
lds
mov
das
popa
mov
test
inc
and
xchg
mov
pop
sbb
jp
dec
ljmp
and
pop
xchg
dec
pusha
adc
adc
add
lods
xchg
ljmp
jne
pop
enter
inc
iret
hlt
add
add
stos
xlat
arpl
xor
arpl
mov
into
pushf
dec
lods
repz
aas
mov
pop
das
sbb
sub
fstpt
and
jno
into
mov
ret
xor
sub
inc
movsl
push
mov
jae
push
pop
fwait
sarb
jge
out
and
sub
add
pop
sub
pop
mov
adc
and
inc
loope
sbb
sbb
movsl
jmp
xlat
test
insb
pop
cld
dec
loopne
mov
rclb
xchg
lock
mov
xchg
out
ja
jbe
inc
notl
repnz
enter
rcrb
cmp
sub
xchg
es
fmull
andl
mov
cs
cmp
cmp
mov
divb
xchg
addr16
ja
sbbl
shll
pop
maxps
mov
aad
and
test
repnz
add
pop
js
jb
out
minps
orl
dec
or
push
dec
xchg
test
xchg
jmp
xlat
dec
mov
idiv
and
ret
clc
aad
clc
pop
xor
sarb
pop
fs
fnstenv
repnz
or
enter
pop
rcr
jmp
add
sbb
and
cmp
and
add
sub
je
into
xor
add
int3
mov
cmc
mov
fisubl
icebp
jl
mov
mov
sub
push
jl
mov
leave
add
jne
fwait
js
fs
push
js,pt
pop
call
lret
iret
add
mov
enter
xchg
gs
hlt
push
xor
popf
cs
icebp
or
dec
int3
mov
inc
mov
mov
pushf
lcall
or
sbb
xchg
cwtl
inc
pop
out
int3
lret
repz
mov
je
clc
inc
ret
inc
scas
lcall
jp
bound
mov
fnstsw
mov
cmp
clc
mov
in
pop
ja
pop
mov
ficomps
mov
ss
xor
xchg
pop
push
fmuls
jge
add
scas
sub
hlt
divl
pop
movsl
pop
lds
das
idivb
mov
xchg
cs
mov
std
bound
cmp
shll
stos
pushf
movsl
xor
inc
add
mov
mov
sbbb
xchg
mov
in
test
mov
daa
ljmp
leave
pop
jo
xor
mov
dec
cmp
mov
mov
mov
jp
mov
ret
aad
movsb
hlt
xor
xchg
adc
data16
mov
lcall
loopne
mov
fs
shll
or
or
testl
je
xor
mov
push
adc
in
xor
je
mov
push
inc
inc
js
dec
add
cmp
xor
jge
cmp
roll
inc
jmp
fdivrl
arpl
bound
inc
test
pop
std
mov
inc
mov
pop
cltd
out
jg
sub
mov
scas
scas
cmp
dec
repz
movsb
jle
mov
mov
jbe
and
fsubl
mov
sbb
xchg
xchg
in
insl
aas
mov
pop
xchg
adc
xchg
fildll
jp
gs
shlb
outsb
and
mov
repnz
andb
scas
in
mov
jecxz
jns
xor
rcrb
je
jle
xor
jbe
test
loop
pop
in
cmp
sbbb
dec
push
iret
pop
cmp
sbb
in
mov
xor
frstor
sub
sbb
test
xor
repz
cmp
cmp
mov
bound
testb
jecxz
call
pop
jmp
sahf
lret
pop
jmp
mov
cmpsb
rol
movsl
jne
adc
mov
pop
dec
push
and
inc
mov
aaa
ds
fistpll
xlat
sub
arpl
cli
jg
pop
inc
cmp
and
fiadds
xchg
add
dec
xchg
mov
add
ret
jl
sub
push
lahf
jmp
icebp
divl
sbb
xchg
pushf
cli
arpl
popa
aaa
js
jp
out
mov
dec
xchg
cmc
in
xchg
adc
setns
jl
sub
sti
sbb
call
sub
xchg
cli
inc
inc
and
cmp
popa
jae
mov
mov
fdiv
push
lcall
stc
mov
sbb
xorl
pushf
in
fldl
lret
lods
loop
mov
lret
sub
add
pop
fiadds
test
mov
cmp
dec
daa
movsb
cmp
push
leave
pop
imul
push
cmp
and
push
out
in
repnz
sub
icebp
sbb
inc
or
bnd
xchg
pop
adc
mov
out
lea
lods
aaa
or
pop
sti
scas
and
std
xor
pop
ja
mov
xchg
sub
and
sub
lret
mov
lods
icebp
mov
mov
out
les
outsb
xorb
mov
ljmp
add
push
in
scas
xor
mov
loope
popa
inc
add
pop
aam
inc
inc
push
imul
xor
push
fwait
or
xor
mov
cmpsb
push
pushf
int
xor
sub
cs
mov
inc
movl
or
hlt
jle
mov
ljmp
addr16
jl
add
out
int3
lret
fistps
jbe
out
mov
pop
hlt
inc
shrl
rorl
sahf
sarb
pusha
pop
jne
lock
ror
pop
sbb
mov
je
cmp
popl
xor
lcall
in
xchg
mov
sub
sbb
in
mov
movsb
jge
dec
pop
mov
out
cmc
xchg
fwait
stos
lcall
mov
flds
jecxz,pn
test
mov
sbb
lret
aad
int
jecxz
aaa
rorb
test
xor
push
mov
sahf
cmp
pop
add
jl
aaa
loop
dec
fsubs
imulb
stos
int
or
call
out
imul
pop
std
push
add
or
and
js
and
fdivrl
fstps
inc
or
pop
outsb
addr16
pusha
push
jp
je
test
pop
add
pop
popf
mov
xchg
cmp
add
roll
lock
sbb
hlt
dec
test
push
cmp
scas
nop
nop
push
add
push
sbb
stc
inc
stos
mov
pop
inc
mov
pop
sub
jns
mov
popa
adc
aam
in
lods
dec
bound
iret
jb
out
xor
adc
into
xlat
dec
xlat
dec
insb
movsl
out
push
aas
xabort
repz
mov
jb
pop
xor
mov
rcrl
cmp
int
ja
xchg
sub
sub
jno
repz
fdivs
jae
fmul
sub
xchg
xchg
mov
sahf
jbe
mov
sbb
lret
pusha
outsl
sbb
push
loop
jnp
adc
pop
fwait
in
sarb
pop
push
leave
decl
out
xchg
xchg
iret
mov
dec
push
or
aam
or
popa
imul
int3
or
cmp
pop
dec
xchg
std
mov
fmull
dec
nop
shrl
js
leave
lahf
das
mov
notb
punpcklwd
adc
fdivrp
add
mov
icebp
pop
out
fcomps
push
pop
pop
sahf
lea
inc
cmpsb
sbb
movq
push
testb
stc
add
ja
faddl
xchg
add
in
nop
shll
cmc
lods
jnp
stos
mov
mov
jle
push
cmp
aam
xor
and
inc
jg
xor
scas
dec
pop
dec
mov
test
push
cmp
cmp
sbb
and
pop
scas
fwait
adc
int
pushf
cli
rclb
push
cmc
icebp
in
or
mov
ret
xchg
paddq
mov
sub
cmpsl
adc
sahf
out
roll
jge
jae
scas
les
fdivrp
and
iret
scas
push
mov
stc
or
adc
jecxz
mov
mov
stos
mov
ds
mov
dec
dec
cmpsl
push
mov
rol
xchg
js
inc
aaa
fucomp
cld
iret
cltd
movsl
rcrl
pop
mov
sbb
gs
mov
sbb
ss
hlt
lds
xchg
js
inc
hlt
mov
aas
adc
aad
inc
mov
addr16
push
and
sbb
mov
adc
push
cli
ret
sbb
in
ljmp
dec
test
shrl
scas
std
mov
inc
jae
int3
lcall
imul
inc
mov
xchg
mov
imul
xor
gs
inc
and
loopne
push
mov
cmpsb
lret
ljmp
inc
mov
jge
fsts
sub
xor
loopne
pop
cltd
add
inc
dec
sbb
lret
add
cmp
cmp
add
mov
xchg
pop
push
lahf
imul
xor
mov
mov
adc
lcall
in
mov
into
sub
sbb
stc
es
enter
es
mov
adc
call
jb
pop
aaa
in
rcl
ss
push
or
inc
or
dec
clc
sbb
adc
or
mov
call
or
mov
pop
test
xchg
test
dec
xchg
jns
pop
cmp
jae
and
in
out
and
out
popf
in
pop
push
bound
cmp
outsb
mov
cltd
or
sahf
aam
int3
lods
in
in
and
xchg
add
push
hlt
das
rcll
flds
lcall
out
call
mov
add
cltd
jae
push
add
push
jge
mov
xor
daa
test
adc
js
cmp
xchg
cld
dec
dec
adc
mov
add
mov
add
repnz
jno
adc
sbb
xchg
bswap
xchg
addr16
xor
clc
jae
sbb
dec
lret
xchg
add
movsl
push
shll
dec
int
or
xchg
daa
sub
jns
push
adc
dec
pop
fcoms
mov
cmp
add
mov
movb
iret
notb
cmc
pop
adc
dec
dec
push
add
xchg
ja
repnz
leave
leave
mov
inc
mov
sbb
mov
sti
jmp
out
bound
or
mov
test
pop
or
push
mov
out
xchg
pop
out
xor
cmpsl
test
cmp
fbstp
testb
adc
push
or
ss
into
adc
pop
leave
loopne
add
pop
repz
jmp
je
insb
inc
shr
test
jae
inc
jl
mov
add
je
les
inc
iret
iret
pmulhuw
testl
fnsave
push
pop
in
push
ss
enter
or
and
lds
fimuls
movsb
das
aam
sub
pop
sbb
stos
out
or
dec
cmpsl
mov
adc
jmp
dec
cltd
xchg
sbb
es
cs
pop
imul
outsl
cmc
pop
push
mov
mov
lods
daa
hlt
xchg
inc
sub
push
test
mov
push
aaa
dec
call
pop
aas
addr16
popa
gs
xchg
lods
mov
stc
push
adc
push
shlb
inc
push
pop
dec
xor
dec
into
inc
call
add
insb
and
cli
es
sbb
cmpb
in
mov
push
cwtl
aam
vpackssdw
lcall
and
scas
mov
sub
out
es
ds
js
inc
imul
iret
ljmp
ret
pop
not
sbb
lret
std
adc
icebp
adc
jno
movsb
mov
push
popa
aas
pop
int
jg
daa
sbb
jno
loop
ljmp
les
mov
lea
pop
jno
jge
sahf
imul
mov
insl
cmpsl
inc
xor
push
jns
in
mov
mov
call
cmp
loopne
shrl
inc
je
pushf
push
fs
hlt
xor
mov
test
pushf
out
inc
or
sbb
aad
xchg
in
inc
jmp
mov
insb
inc
aas
xchg
adc
inc
xlat
fcomi
into
push
sbb
mov
add
push
scas
jo
aaa
lock
push
imul
dec
loop
fsubrs
stos
iret
cmp
xor
mov
nop
cmp
nop
push
inc
mov
add
mov
dec
shll
inc
mov
std
jne
add
call
stc
shrl
movl
hlt
scas
adc
popf
test
addr16
ja
jnp
aas
lcall
mov
call
mov
dec
jp
mov
xchg
iret
xlat
jl
or
xchg
addr16
incb
pop
dec
mov
les
out
lods
xor
fsubs
insb
movsb
popf
jne
xor
and
and
cmp
insl
adc
into
fiadds
pop
movsb
add
mov
push
pusha
push
push
cltd
and
jb
xchg
repnz
or
or
jns
icebp
cwtl
das
pop
out
jnp
inc
pusha
stos
or
stos
xor
mov
xchg
jne
and
sbbb
dec
rcrl
aas
xchg
popf
cmp
mov
or
jge
push
lods
add
loope
cltd
ja
scas
je
sbb
lds
aad
pop
popf
cmp
sub
dec
pop
sub
xor
shlb
fcmovnb
pop
cmc
insb
out
loop
inc
pop
or
ja
imul
jmp
mov
push
outsb
inc
cmp
jp
test
adc
test
dec
dec
int
pop
lods
mov
lds
movsb
popl
xlat
lahf
insb
shrl
sub
mov
mov
pop
icebp
aas
into
cli
loope
sub
ret
xor
pop
sahf
push
mov
jmp
ljmp
icebp
cmp
or
stos
cli
rcrl
xlat
lcall
push
repz
dec
fldt
inc
pop
call
imul
sbb
mov
xchg
sbb
and
js
dec
dec
or
enter
xchg
xchg
mov
lods
lods
mov
adc
pop
jg
int
int3
jmp
sbb
lret
call
lods
xchg
push
loope
add
push
cmp
fwait
and
ljmp
mov
mov
pop
fcmovne
mov
outsb
mov
push
in
or
mov
xor
add
sete
lds
ret
xor
mov
add
cmp
jae
scas
es
cmc
ret
jmp
cmp
jne
jle
push
push
dec
idivb
loope
enter
xchg
sbb
fsubs
xor
dec
and
sub
xchg
dec
pop
xchg
ds
testb
in
aaa
mov
xor
lds
jae
push
imul
mov
ficomps
mov
adc
pop
cmp
dec
jbe
in
fmull
jnp
mov
popf
or
fstpl
sbb
adc
add
movsl
iret
sbb
add
adc
xor
lea
sub
orl
xchg
fisttps
push
into
sub
xchg
mov
or
dec
add
sbb
mov
loope
lds
jecxz
shlb
std
in
cmp
and
ja
aas
push
inc
insb
insl
loopne
push
stos
fcomip
cmpps
imull
cmp
ds
ret
fdivrl
out
fimuls
mov
mov
xor
xchg
jbe
xor
lods
mov
ds
adc
sub
dec
or
dec
into
lds
adc
imul
pushl
push
das
pushf
mov
inc
cmp
mov
outsl
xor
in
outsl
nop
sbb
leave
sbb
fs
cwtl
push
lods
fwait
mov
shrl
daa
loop
pop
jge
mov
xorb
sti
bound
cs
jecxz
pop
fstps
mov
lcall
andnps
jbe
fimull
push
cmp
mov
outsl
sysenter
bound
cmp
adc
pop
mov
jns,pn
in
mov
cld
add
shlb
int
sbb
mov
scas
pushf
movsl
jno
testb
push
dec
leave
push
xlat
test
call
rcr
pop
lahf
daa
leave
mov
sarl
cld
imul
cmp
xchg
cmp
xor
scas
std
std
mov
rorb
pop
sub
add
lods
fwait
adc
mov
call
mov
or
pop
ret
inc
push
jbe
inc
xchg
push
sti
mov
push
jne
pop
lods
dec
push
test
scas
jecxz
cmp
mov
pop
rclb
add
mov
adc
stos
inc
sub
pushf
push
gs
sbb
sbb
or
sbb
dec
xchg
push
pop
cs
imul
push
jns
js
icebp
sub
movsb
mov
repnz
ds
cld
mov
das
mulb
aaa
push
dec
insl
xor
fistl
mov
push
imul
pop
repz
loop
push
pushf
jg
out
setnp
addl
loopne
mov
das
shrl
mov
movsb
jnp
fsubrs
mov
rcll
out
cmpsb
xor
iret
push
mov
jae
pop
xor
fildll
pop
rcr
rorb
xchg
inc
inc
outsb
xchg
dec
mov
scas
icebp
jmp
ja
out
mov
js
das
push
cmp
push
fsubr
out
in
add
sub
adc
loop
mov
fsubs
ja
pop
add
stos
xor
fiaddl
push
fisubl
mov
push
insb
cs
fiaddl
divl
or
ret
dec
repz
mov
loope
and
pop
or
xchg
sbb
sub
sub
enter
pop
xchg
jae
push
cmp
addb
or
adc
sbb
pop
data16
push
mov
and
shlb
push
sub
repz
cmp
xchg
loopne
sub
mov
mov
aad
xchg
fs
jbe
lods
lods
xlat
sub
arpl
and
fwait
sub
hlt
jge
inc
movsb
push
mov
mov
enter
inc
inc
xchg
xor
cmp
push
in
pop
pusha
into
lret
rol
push
loop
and
lods
ficoms
scas
int3
outsl
cmp
inc
pusha
aaa
or
adc
and
jbe
lock
mov
gs
jbe
dec
call
test
sub
std
or
fwait
xor
popa
inc
jecxz
push
or
cs
adc
lret
int3
insl
in
idiv
dec
testl
repz
cmp
sti
xchg
and
pop
inc
test
mov
fwait
out
add
popa
enter
xor
inc
adc
aaa
int
xchg
adc
cli
enter
mov
leave
into
push
cmp
or
mov
jne
jb
arpl
jp
push
dec
jmp
lret
push
or
or
cmpsb
aam
push
int3
enter
mov
mov
movsl
jge
out
cmc
sahf
test
pusha
mov
jb
ss
iret
mov
mov
jno
dec
jle
mov
lods
les
daa
outsb
cmc
xor
gs
punpckhwd
xchg
lds
cmpl
lea
outsb
or
bnd
rcl
mov
psrld
insl
xchg
imul
mov
pusha
add
dec
sahf
jbe
pop
leave
mov
jp
or
sub
or
flds
mov
bound
movsl
jmp
adc
test
in
inc
inc
nop
stc
adc
dec
outsb
add
dec
add
sub
mov
fstsw
mov
adc
sub
shl
push
push
int3
lret
cmp
adc
and
cltd
es
jo
int3
mov
cmc
in
xor
jae
out
mov
int
je
jg
fdivl
jnp
mov
in
fldcw
xchg
cmp
fs
jle
mov
insl
imul
add
sub
jbe
les
mov
mov
push
lahf
shll
pop
pusha
cli
and
jns
repnz
pusha
imul
xchg
mov
inc
les
pop
dec
cmp
mov
jnp
cmp
sub
xor
sbb
cld
jno
sarl
add
imul
adc
lret
push
inc
fwait
push
or
fstl
add
push
repnz
mov
mov
out
repz
push
xchg
dec
push
jg
or
jbe
or
sbb
test
dec
mov
jmp
jp
imul
sub
adc
jne
or
push
pop
mov
xchg
xchg
ret
push
dec
daa
adc
and
inc
xchg
enter
scas
fdivl
xchg
movsl
pop
mov
cmpl
gs
mull
pop
stc
stos
cs
sub
xchg
sbbl
cwtl
xchg
daa
btr
in
fcoms
das
or
mov
hlt
cld
loope
pushf
subb
xchg
and
mov
add
pop
ja
aaa
loopne
mov
test
mov
jle
aad
add
jmp
cmp
es
test
sahf
dec
push
jne
mov
test
sub
adc
mov
xchg
in
clc
push
adc
dec
lock
mov
adc
std
dec
imul
sub
out
nop
dec
addb
and
insb
push
movsl
das
xlat
mov
adc
sub
into
push
mov
cmp
push
in
or
inc
xor
out
in
xchg
ja
xchg
filds
or
or
mov
out
pop
xor
std
pop
andb
jecxz
std
xor
pop
rcll
sub
sbb
movsb
into
and
test
or
sub
or
pop
fildl
fcomi
mov
hlt
int3
insl
daa
mov
pop
dec
pusha
add
fildl
decl
movsl
dec
dec
ret
dec
mov
dec
push
jb
loope
xchg
push
mov
stc
push
jge
push
push
adc
aam
pusha
out
jecxz
sbb
fildll
les
imul
stos
add
mov
iret
jb
dec
inc
mov
mov
sbb
mov
push
stc
jnp
mov
gs
test
and
cmp
pusha
sub
pop
add
xchg
int3
jbe
jl
pop
aam
clc
fstpt
fnsave
lods
jae
xchg
sahf
lods
inc
nopl
cmp
push
fisttpll
xchg
roll
out
xchg
or
add
out
xchg
push
pop
cmp
or
frstor
in
pusha
fwait
push
rolb
jge
in
test
lea
pop
sub
pusha
jecxz
je
xchg
dec
sub
push
or
dec
std
push
ret
lock
daa
dec
iret
xchg
inc
and
xchg
push
js
and
outsl
lds
sbb
pop
push
daa
push
and
cmp
adc
dec
frstor
xlat
xchg
sbbb
mov
aam
jge
subb
dec
adc
repnz
sbb
jmp
and
cmc
inc
outsl
int3
push
fs
xor
pop
pop
push
popf
sbb
push
roll
arpl
cltd
scas
mov
push
cltd
stos
sbb
add
pusha
divb
lahf
mov
mov
cmpsl
aad
jae
push
insb
std
leave
jnp
out
in
jbe
cwtl
insb
fnsave
fnsave
mov
aaa
push
sar
les
negl
adc
push
sub
call
es
call
fistpl
test
fidivrs
mov
les
mov
cmc
icebp
and
cmp
sbb
add
jp
or
daa
inc
dec
add
ss
data16
mov
pop
aaa
jae
add
out
lods
push
rcll
cld
ds
pushf
mov
das
jg
scas
pop
sub
sti
das
dec
ret
icebp
and
popl
rcll
dec
and
mov
adc
scas
mov
push
xorl
and
cmc
arpl
fwait
cmp
in
fnstenv
pop
test
jbe
addr16
inc
out
sbb
mov
faddl
cmp
jmp
leave
ret
imul
add
pop
daa
scas
cmp
ror
lock
and
test
xchg
sub
int3
lret
sub
inc
ds
inc
xor
mov
xchg
dec
dec
ds
je
fidivs
xchg
add
cwtl
sahf
cmp
push
popf
cltd
stos
stos
jno
mov
lods
adc
inc
sub
push
jecxz
dec
cmp
lret
sub
ds
jbe
mov
xlat
stos
jo
push
and
int
jge
int3
sub
pushf
imul
adc
data16
inc
push
loopne
sub
loop
push
insl
xor
scas
jp
or
dec
and
enter
in
gs
push
incb
add
sbb
clc
aad
mov
and
sub
sbb
je
cli
pop
sbb
sub
aam
jg
stos
ja
int3
lea
mov
dec
lods
push
jmp
adc
pop
jno
sbb
dec
popa
into
push
fcmovne
xchg
add
mov
xor
adc
push
pop
cmp
cmp
sub
adc
add
push
pop
bound
rcll
push
sub
test
mov
loope
loope
xchg
popa
cmpsb
dec
ret
test
and
das
bound
inc
pop
testl
add
inc
fcmovbe
push
pop
push
jno
in
in
jecxz
pop
cs
inc
inc
push
jecxz
movsb
sarb
and
add
stc
sub
inc
xorb
dec
xor
mov
rcrb
lcall
sbb
divb
nop
popa
in
sahf
push
xor
pop
push
add
test
ljmp
mov
clc
shl
enter
in
push
sbb
add
xor
mov
xor
or
and
ja
add
jmp
jbe
jne
ljmp
adc
aas
fdivl
mov
cmp
ret
inc
sbb
sub
pop
aam
bound
popa
cli
lea
insl
mov
pusha
rcrl
stos
mov
pushf
pushf
pop
mov
cmp
repz
inc
cmp
scas
jecxz
ficoms
fisubrs
test
stc
inc
or
push
pushf
out
mov
movsb
stos
fidivl
lss
mov
mov
xchg
das
adc
cli
test
std
mov
ds
popf
test
dec
inc
xchg
xor
rcl
fistps
inc
test
adc
push
mov
stos
mov
loopne
shlb
or
xor
mov
ss
mul
inc
fmul
aad
ret
outsb
mov
insb
imull
lods
jg
jg
push
daa
sbb
sbb
cmp
jp
js
imul
pusha
lods
mov
loop
ljmp
rcrl
xchg
pusha
je
je
stc
mov
mov
int
into
or
into
pusha
lahf
dec
jo
jmp
inc
out
and
dec
shr
das
popa
mov
cli
dec
divl
sbb
xor
or
or
out
mov
scas
lret
inc
push
sarb
xchg
jb
in
inc
fsubrs
sub
lds
repnz
cmc
ss
pop
xchg
and
pop
int3
push
arpl
lods
in
dec
stc
lret
mov
lret
stos
mov
sub
xor
adc
sbb
hlt
mov
and
addr16
inc
mov
icebp
rclb
ds
jo
sbb
inc
in
xchg
out
shl
gs
jb
bound
adc
mov
mov
mov
xor
mov
adc
stos
call
daa
or
faddl
fsts
test
bound
jecxz
jecxz
push
je
lret
sbb
sti
xchg
mov
rcr
adc
mov
fnsave
ds
scas
adc
addr16
jecxz
test
push
imul
popa
cmp
repz
jle
adc
test
pop
out
add
pop
loop
pop
das
sub
gs
loopne
adc
fisubrl
mov
popf
xor
fsubrp
ficompl
inc
push
add
mov
mov
sub
sub
mov
cmpl
test
lret
notl
inc
jb
and
sahf
test
push
and
data16
cs
pop
sahf
repnz
mov
and
stos
sub
std
or
xchg
push
mov
push
test
loopne
aas
push
dec
jno
xchg
jge
subl
lret
test
and
stc
fs
sub
xchg
jno
jb
inc
sbb
sub
lods
incb
aam
sbb
mov
jg
loope
decb
aaa
push
pushf
rcrl
mov
lods
sub
aam
pushf
push
adc
and
pop
push
loop
cli
cmp
movl
fldt
pop
test
sbb
int
pop
inc
cwtl
ja
lea
scas
and
aaa
sbb
xor
std
jmp
mov
inc
push
shll
ffreep
ljmp
stc
dec
pop
cld
in
cmc
cs
add
mov
jge
mov
fwait
mov
jnp
fsubrs
jb
pop
scas
mov
iret
les
test
lea
jnp
out
mov
jnp
lods
ds
xor
ljmpw
mov
fwait
pop
xchg
pop
push
adc
testl
mov
mov
or
pop
cmpl
xchg
vphaddubd
and
pop
adc
movl
aaa
aad
sar
mov
mov
mov
scas
fistl
lret
ja
add
std
cmp
push
and
push
mov
sbb
arpl
dec
mov
addr16
mov
sbb
jbe
jecxz
lds
js
dec
or
fldenv
xchg
inc
popf
pop
inc
out
scas
jmp
sub
iret
test
xorl
inc
mov
push
in
add
pop
jb
push
cwtl
xchg
mov
int3
out
add
outsw
and
outsb
pop
hlt
xchg
lock
dec
sub
push
push
popf
mov
lea
inc
out
fdivrs
xlat
xor
xchg
enter
nop
and
xchg
xor
and
aam
pop
mov
jbe
mov
mov
negl
mov
repz
ficoms
in
push
lods
jecxz
bound
jns
daa
jl
xor
cltd
enter
in
into
sbb
ret
xchg
xchg
add
adc
je
fstps
cmc
fcomi
and
cmp
popa
pop
bswap
imul
enter
rcl
mov
adc
jmp
jns
lret
mov
sub
push
jb
andl
fcmovnbe
cmpsl
dec
fstps
call
out
inc
adc
in
cmc
dec
fldl
xlat
add
sub
bound
add
outsl
sub
mov
in
movl
ss
xchg
xor
loop
ljmp
mov
icebp
fcmove
fildll
in
test
cmp
movsb
add
outsl
sbb
inc
add
cld
jg
inc
call
push
dec
icebp
pusha
test
inc
inc
or
jno
ret
add
lcall
fldl
imul
fiadds
xchg
jne
mov
mov
xor
mov
insl
adc
cmp
icebp
mov
sbb
pop
pusha
lret
or
xor
test
push
dec
push
mov
dec
cmp
adc
mov
pop
pop
sub
out
outsb
mov
pushf
lret
dec
mov
dec
jg
ds
adc
lods
cwtl
or
icebp
cmp
int3
sub
pop
loop
and
mov
mov
jb
insb
inc
fwait
jmp
in
sarb
int3
lret
dec
imul
aas
repnz
leave
inc
repz
xchg
das
in
mov
ljmp
inc
out
jecxz
and
add
cmp
je
inc
cli
sub
xchg
inc
push
fsubs
or
ljmp
and
es
mov
or
stos
in
inc
and
cltd
int
push
addr16
cmpb
enter
pop
aas
stos
in
add
int3
sub
dec
ljmpw
push
scas
mov
adc
rcll
xchg
xchg
xchg
mov
mov
stc
mov
movl
pop
jg
pop
lcall
in
bound
aaa
lock
dec
gs
out
cmpsb
dec
filds
data16
jg
nop
jmp
push
inc
push
push
popa
int3
jb
ret
push
inc
fwait
jl
in
insb
bound
lea
adc
or
dec
push
jle
cmp
xchg
sbb
cli
push
outsb
add
pop
data16
jmp
icebp
sub
loope
or
ret
fs
or
and
mov
mov
jmp
sbb
dec
cmpsl
hlt
imul
cld
call
shll
cmp
and
dec
mov
sub
cltd
sbb
popa
xchg
lret
out
das
lods
xchg
sub
inc
dec
add
loopne
mov
xchg
sub
das
push
lds
in
and
data16
dec
push
cli
or
daa
clc
jo
movsb
repnz
aaa
jmp
push
add
push
sub
and
repz
push
inc
push
jns
mov
popa
dec
xchg
arpl
lahf
mov
inc
push
outsb
jnp
dec
sbb
int3
xlat
mov
fdiv
imul
fucomi
or
and
inc
dec
inc
adc
cmp
fstpt
cmp
or
push
out
xchg
mov
add
mov
mov
push
pop
roll
mov
scas
js
sti
adc
les
add
insl
jnp
nop
adc
mov
mov
pop
jo
outsl
aad
sbb
divb
sub
fistps
pop
push
jmp
je
xchg
out
sbb
or
xchg
aad
lret
popa
dec
popa
sbb
clc
add
inc
hlt
inc
lods
jo
pushf
sub
pop
mov
fsubrs
and
into
xlat
mov
mov
ljmp
out
mov
roll
es
popa
push
add
and
movsb
xor
in
clc
sbb
sub
xlat
mov
hlt
mov
stos
lret
mov
xor
sahf
je
mov
outsl
lods
fstpl
push
rorl
dec
sarl
xorb
cs
stc
mov
stos
sbb
pop
std
xchg
xor
mov
shll
jmp
sar
add
and
and
fisubrl
shrl
cld
xor
cmp
or
pop
push
scas
repz
pop
cmp
stc
cs
push
in
mov
cmp
scas
or
and
sarl
mov
inc
stos
sub
std
sbb
mov
dec
mov
sub
ja
mov
lds
fmull
sub
and
int3
lock
jb
lods
lods
xchg
dec
or
jl
push
or
iret
or
sub
loopne
and
push
xor
in
subb
imul
pop
out
push
mov
call
mov
jle
shlb
push
imul
faddl
cmc
sbb
pop
dec
aas
sbb
jle
fld
mov
shrb
dec
inc
stos
or
mov
adc
int3
mov
and
mov
ficoml
pop
mov
push
jge
push
or
rcll
fnsave
imul
sub
jg
jmp
lcall
xchg
sahf
pusha
movsl
jmp
mov
repz
mov
add
movsb
cmpsl
jp
sub
push
sub
push
ds
cli
addr16
hlt
sbb
cmpsb
insb
mov
sbb
mov
xchg
dec
out
test
pop
lret
cs
inc
ficomps
lods
cwtl
fcompl
mulb
in
out
aam
push
push
enter
in
std
jnp
push
adc
mov
or
mov
jne
mov
mov
mov
mov
mov
mov
push
aad
mov
add
jl
clc
lret
cmpsb
mov
fcomps
mov
in
xor
mov
mov
xor
push
inc
push
jmp
enter
loope,pt
pop
dec
fnstcw
lret
lock
push
and
jne,pt
stos
clc
cmp
mov
inc
fwait
test
out
sub
nop
and
iret
cli
jae
movsl
jb
dec
mov
stos
cmc
bound
or
xchg
xchg
jne
and
pop
outsl
and
inc
jl
insl
addr16
incl
sub
jg
push
cmp
in
pushf
push
mov
cltd
add
sub
mov
add
je
rcrl
inc
out
and
pop
push
jae
cmpsb
sbb
mov
jb
mov
lret
outsb
sub
or
push
jne
fbstp
fsubrl
adc
push
pop
dec
sbb
sub
hlt
jmp
mull
and
fnstsw
xor
xlat
mov
pop
jo
jne
push
xchg
lret
xor
and
into
jb
pop
popa
stc
lcall
fcmove
sub
sahf
xor
out
pop
or
add
dec
add
pusha
cmp
lret
dec
push
sbb
add
jne
fdivl
pop
idivl
adc
add
int
dec
jl
iret
mov
test
xchg
dec
frstor
cld
cmp
dec
inc
int
sub
xchg
adc
pusha
fists
mov
mov
cmp
add
mov
sub
jo
shll
sbb
or
sbb
daa
stos
stc
lcall
sub
scas
scas
out
sub
xor
add
inc
mov
dec
test
and
jo
outsl
std
push
hlt
sbbb
pop
mov
int
add
jge
icebp
adc
stos
aad
mov
inc
aad
div
mov
in
icebp
xchg
lods
mov
inc
in
pop
lods
ds
loopne
mov
lods
push
jns
negl
pusha
lock
gs
xchg
mov
mov
mov
aaa
test
or
sbb
call
sarl
adc
add
jae
and
fidivl
push
std
fwait
pop
andl
aad
cmpsb
aam
rorl
jno
mov
fistpl
mov
xchg
jle
mov
xchg
cmp
jmp
adc
push
fnstcw
jne
test
fcoml
jmp
fsubl
cmp
scas
rcrb
sub
cltd
add
add
push
test
aad
ljmp
mov
test
bound
xlat
arpl
mov
out
fldenv
in
out
and
stos
sbb
xchg
cmp
pop
jb
out
lds
dec
adc
jnp
jb
mov
jle
ficoml
jb
dec
mov
mov
aaa
inc
inc
jns
arpl
mov
dec
cmpsb
mov
cmp
dec
ss
xchg
sbb
adc
mov
out
movsb
fisubl
divl
rolb
sub
push
ret
adc
ret
inc
mov
insl
mov
es
jle
adc
fsubrl
pop
fcomps
loop
dec
jo
jno
cltd
or
jo
aas
pop
push
inc
jg
cmpl
cmp
sbb
jne
in
and
or
push
inc
nop
lahf
in
out
jle
lret
sub
jns
mov
ja
jmp
out
sbb
xchg
push
inc
pop
cmp
div
push
fucomip
xchg
jmp
push
dec
cli
sbb
imul
ljmp
mov
lret
cli
and
mov
or
or
scas
in
cmp
inc
inc
xor
in
mov
dec
addl
out
pushf
mov
and
or
in
cmpsb
mov
shrl
sub
arpl
mov
add
leave
cmpsl
sbb
lock
push
in
aad
jp
push
jp
test
push
mov
mov
xchg
test
sahf
xchg
push
push
repz
sbb
mov
jne
jo
shl
inc
jne
movsl
xor
and
cmpsb
movsl
mov
push
jp
mov
dec
xor
lock
jo
sbb
mov
sbb
sbb
push
adc
je
sub
inc
xchg
xchg
out
cli
mov
push
loop
dec
lods
mov
mov
hlt
aaa
fwait
dec
popa
outsb
sbb
jb
js
sahf
jl
pop
dec
divl
mov
inc
push
cmp
cmp
xor
leave
or
and
mov
dec
and
shrb
js
adcb
add
arpl
mov
test
add
sbb
inc
test
and
mov
pusha
add
lods
or
xlat
ficoms
mov
sub
add
xchg
dec
xchg
leave
dec
xchg
push
jno
rcl
fwait
lret
fisubrs
xchg
pop
lods
ss
inc
sbb
sbb
jae
xor
mov
sub
mov
cwtl
test
out
shll
sbb
incb
out
lock
ljmp
pop
insl
pop
inc
push
negb
pop
push
mov
cmc
or
xor
insl
xchg
or
sbb
out
outsl
pop
fcomip
fwait
jmp
leave
dec
clc
sti
pop
mov
jno
dec
mov
movsl
test
mov
add
mov
shlb
cmp
rcll
cmp
andb
ficompl
les
cmp
xor
push
stc
ret
jb
inc
das
icebp
lock
xlat
jno
arpl
add
pop
sbb
idivl
aas
cltd
pop
and
out
test
movsl
scas
lds
push
loopne
pop
mov
outsl
fildl
fnsave
loope
or
xchg
or
mov
fwait
adc
jno
jo
mov
dec
and
adc
jg
and
aad
lods
clc
sub
mov
cmpsb
imul
mov
lock
and
test
push
inc
sub
mov
lret
inc
xchg
shlb
push
insb
inc
enter
fmull
enter
add
jg
aas
ret
adc
loope
mov
push
shr
int
dec
test
mov
out
xchg
repz
popf
push
push
out
loop
movsl
push
in
scas
shll
movsb
shr
sub
in
jne
aam
cmpsl
jbe
jmp
add
repnz
es
xchg
xor
fmuls
sub
stc
pusha
dec
lock
xchg
js
aaa
push
outsb
push
js
mov
dec
xor
mov
hlt
leave
cmp
add
test
jb
adc
push
add
sbbl
mov
notl
sub
and
cltd
outsl
arpl
lahf
mov
mov
sbb
rorb
adc
sub
ret
pop
ficoms
cmp
inc
cmp
sub
call
and
push
out
inc
fsub
and
ss
rolb
jns
push
lds
adc
jg
rcrb
out
add
fildll
lods
xchg
loop
sahf
mov
mov
sbb
mov
sub
dec
je
cmp
sti
ljmp
icebp
leave
adc
pop
fsincos
push
cmp
add
mov
call
je
lock
mov
or
pop
repnz
adc
cmpl
and
cmp
push
xchg
jae
testl
xchg
pop
cmpsb
push
xchg
in
and
jge
adc
js
mov
lock
add
mov
icebp
add
iret
sub
sbb
dec
add
aad
sub
lret
adc
cmpsl
outsb
je
fimuls
push
mov
sub
lahf
std
xchg
cmpsb
out
stos
ficoms
push
add
mov
dec
js,pn
lret
sbb
dec
rorb
repz
arpl
movsb
int
mov
fldl
inc
js
add
inc
lcall
dec
ret
push
mov
cmp
and
repz
std
dec
add
dec
ret
nop
pop
ret
mov
aam
lret
arpl
imul
pop
in
inc
fnstcw
xor
inc
push
lods
xchg
mov
pop
inc
dec
enter
mov
stos
rol
pop
mov
fsubrl
xor
aam
repnz
jl
divb
or
dec
xchg
xchg
inc
mov
cmpsb
addr16
xor
aas
pop
inc
xchg
aas
jnp
shl
fsts
mov
push
iret
fcmovnbe
lcall
rol
test
xchg
rcrl
outsl
push
inc
cli
icebp
out
cmc
dec
mov
loopne
rcrb
add
in
pusha
test
cmp
push
test
rcrb
pop
ljmp
pop
adc
jae
or
xor
cmp
mov
dec
cmpsb
inc
lcall
push
push
in
stos
or
pushf
lds
pop
or
mov
jb
push
inc
out
cmpsl
add
imul
adc
push
ret
jle
inc
sbb
sbb
out
lods
mov
xor
mov
xor
xchg
jmp
neg
call
aaa
adc
adc
les
lcall
rcll
repz
outsl
inc
test
icebp
frstor
dec
int3
nop
mov
ficoms
mov
xor
pop
sbb
add
fisubrl
pop
mov
cmc
imul
ja
cmpsl
push
mov
or
jae
cmp
jl
mov
fst
mov
cltd
pop
inc
sahf
mov
lods
jge
loope
mov
shl
mov
mov
rcll
les
jbe
pop
lcall
jb
jae
or
jl
pop
out
ja
movsb
nop
xchg
dec
mov
jp
ret
movsl
inc
pop
mov
test
pusha
dec
sarl
pop
fucomip
inc
mov
hlt
push
call
iret
filds
fcoms
leave
jb
or
pop
mov
fnstenv
adc
push
cli
repz
scas
stos
jbe
jns
stos
jge
mov
cld
icebp
outsl
mov
or
or
loop
xchg
jns
and
gs
sub
sbb
addl
push
imul
cli
sub
insb
mov
mov
in
leave
jo
push
stc
pop
mov
mov
xchg
dec
aam
arpl
push
bound
mov
lahf
xchg
and
mov
lods
js
pop
lds
or
and
testb
gs
test
movsb
push
mov
vcvtps2dq
out
dec
frstor
shrl
mov
stos
imul
xchg
repz
loope
gs
ljmp
mov
sahf
lock
adc
movsl
xchg
dec
mov
sbb
or
adc
adc
ljmp
adc
clc
cmp
mov
cmpsl
addr16
and
shl
and
les
sub
xchg
xorb
pop
mov
out
nop
movsb
mov
or
stos
xchg
adc
mov
mov
jno
or
push
cltd
pop
mov
sbb
sbbl
in
mov
or
jmp
hlt
loope
es
ss
xchg
pop
or
and
xor
movsl
loope
cmp
enter
in
std
or
add
arpl
imul
inc
out
addb
std
push
fnstsw
lcall
sbb
xchg
outsl
adc
dec
inc
stc
add
jb
std
mov
cmp
push
cmp
lret
mov
fmuls
cmp
push
push
setns
dec
int3
pushf
jno
add
cwtl
mov
adc
mov
xchg
les
xlat
jnp
sbb
mov
mov
das
sub
js
lods
cwtl
sub
cmp
xor
shlb
out
loopne
mov
push
mov
mov
rolb
mov
add
jecxz
js
mov
dec
loop
jmp
outsb
subb
mov
push
fucom
lods
push
adc
scas
lds
jmp
and
ret
mov
mov
inc
sub
sbb
rolb
rorb
push
cltd
xchg
int3
loopne
aaa
add
and
jb
adc
mov
dec
mov
jp
sarb
stc
xchg
aad
and
xorl
inc
test
aas
mov
lret
test
shl
fimull
inc
push
jle
xor
jns
in
cmp
sub
mov
xor
aaa
mov
cmc
cmp
jno
andb
jo
push
cwtl
je
mov
cmp
mov
pop
lods
nop
pop
xchg
imul
xchg
adc
inc
shll
mov
les
aaa
add
pop
adc
sub
les
lods
mov
sub
xchg
lock
cld
xlat
insl
icebp
add
pop
nop
jbe
xchg
and
xchg
sti
outsl
dec
cltd
jns
dec
mov
or
mov
inc
mov
popa
ficoms
pop
pusha
dec
fidivs
and
adc
ret
jp
stos
jno
xchg
inc
popf
or
or
jmp
in
insb
mov
lret
cmc
std
setnp
dec
iret
xchg
and
insb
shlb
ficoml
or
add
fwait
pushf
add
cmpsb
sbb
std
mov
cmc
iret
movsb
xchg
fwait
imul
movsb
mov
mov
pop
inc
pushf
ja
cs
lods
cmp
adc
cmpsb
int
jl
movsb
push
stc
sub
mov
repnz
std
sbb
push
sarb
inc
mov
xchg
scas
xor
xchg
cltd
mov
sbb
add
iret
mov
cmp
je
sbb
out
lcall
insb
imul
mov
ftst
pop
stos
sbb
or
out
adc
or
jno
push
pop
xchg
fisttpl
cli
es
out
push
faddl
sarl
cmc
lods
jbe
or
mov
push
push
cmpsb
scas
mov
insb
cmpsl
push
sub
xchg
push
dec
mov
pop
and
mov
sub
jne
mov
movsb
in
and
icebp
sub
cwtl
sahf
xchg
push
jo
jmp
in
mov
fbld
jae
mov
adc
daa
sarb
add
jle
add
test
push
out
inc
lret
xor
mov
mov
pop
popa
repz
jmp
fisttpl
mov
xchg
jns
jnp
cmp
mov
sbb
inc
cmp
sbb
jne
mov
dec
jl
subb
mov
pop
or
adc
call
sbb
mov
cs
cld
inc
cli
mov
cmc
mov
rclb
aaa
testl
faddl
xchg
jge
test
inc
sahf
inc
xchg
mov
cs
jmp
adc
mov
mov
aam
xor
scas
cmp
add
cmc
aaa
hlt
ljmp
jb
pop
inc
jnp
inc
push
sub
or
push
jns
daa
sahf
sti
mov
and
lds
addb
mov
push
xor
jns
scas
sub
sub
imul
shr
addr16
in
jmp
jo
dec
ss
mov
push
imul
add
scas
loop
lret
stos
gs
dec
inc
ret
push
leave
mov
mov
xchg
push
dec
out
xchg
dec
jbe
data16
push
test
mov
sbb
dec
dec
jl
fdiv
inc
cmp
add
aaa
test
xchg
push
test
add
cmp
inc
add
and
mov
sub
xor
loop
push
mov
adc
mov
sub
je
mov
pushf
mov
jmp
xor
push
xor
xor
cwtl
mov
data16
pop
mov
popf
mov
das
pop
mov
jg
adc
sbb
enter
or
dec
testb
fmull
repnz
xchg
movsb
dec
lcall
fnstsw
sbb
popf
push
add
int
xlat
sub
dec
sbbb
mov
lret
fs
mov
mov
pop
fs
add
sub
sub
inc
xor
xchg
and
pusha
mov
and
jmp
xchg
in
imul
in
rorl
push
lret
pushf
add
xchg
push
xor
ds
dec
sar
and
fistpll
sbb
sub
dec
ficoml
push
fadd
test
jnp
stc
xor
push
lret
inc
cmp
jg
inc
xor
in
xorb
xor
cmp
sub
cmpsl
mov
sti
lods
or
pop
leave
mov
cmp
sar
pop
out
jns
xchg
inc
test
pushl
daa
xchg
add
test
push
scas
cld
mov
aaa
pop
jge
mov
mov
loopne
hlt
subb
inc
jno
shll
pushf
fwait
dec
sbb
popf
mov
and
ss
je
mov
jmp
push
popa
adc
xchg
and
test
aad
rcr
gs
and
adc
fmulp
sbb
hlt
xor
fs
scas
push
sar
daa
jno
mov
push
out
dec
pop
push
pop
in
sbb
pop
adc
xor
xor
mov
ret
mov
mov
ud0
scas
push
adc
pop
inc
loop
ret
mov
inc
lods
xor
popa
arpl
cmpsl
scas
lock
mov
adc
pusha
sbb
aam
repnz
pop
push
imul
mov
jns
lods
push
dec
pop
cmp
enter
cli
sbb
lea
addr16
xor
dec
inc
fdivr
push
and
or
sar
push
insl
fsubs
cmp
int
test
sbb
mov
je
fisubl
aas
cmp
and
js
add
jno
mov
in
sub
rol
jecxz
ds
out
mov
mov
test
mov
add
cmp
mov
mov
adc
jnp
cmp
xor
fisubrl
mov
or
iret
ds
nop
dec
shl
ja
jae
mov
idiv
sub
push
shrb
rorl
lcall
fs
dec
clc
dec
mov
stos
lea
sti
lock
addr16
inc
mov
adc
mov
mov
and
insl
push
or
lds
sbb
push
mov
popf
jecxz
inc
and
sarl
dec
scas
jmp
adc
pop
loopne
scas
es
mov
addb
lret
insl
add
insl
jecxz
sub
mov
movsl
out
jmp
xlat
xor
pushf
mov
and
test
icebp
lret
mov
inc
dec
push
cltd
sahf
push
or
adc
mov
pop
sub
mov
fimuls
pop
jo
lcall
sbb
pop
dec
inc
pusha
or
cmp
add
push
stc
cmc
sar
sbb
jo
addr16
or
sbb
mov
in
in
cli
xor
mov
xchg
xchg
jo
xchg
sbb
outsl
mov
loopne
jbe
fnstenv
outsb
jnp
push
jp
movsl
mov
jl
push
and
inc
and
out
push
cmp
push
push
shlb
push
negl
fbstp
pop
mov
and
add
loop
adc
cltd
bswap
mov
das
call
scas
stc
pop
xor
out
pop
mov
daa
sub
dec
rol
mov
xchg
in
leave
pushf
mov
lds
push
push
insb
mov
mov
pop
jecxz
bound
mov
dec
mov
sbb
fsubrl
mov
loopne
imul
addb
adc
mov
jl
pop
shlb
xchg
in
jl
out
push
loope
icebp
xchg
mov
subl
lret
in
jge
mov
sbb
cmp
fisubs
js
ret
movsl
mov
bound
insb
fs
jb
jmp
mov
ja
adc
nop
pushl
xchg
jge
pop
cmpsl
add
mov
test
push
loopne
cltd
out
xchg
dec
enter
mov
hlt
dec
and
pop
or
push
inc
loope
movsl
or
cmpsb
jl
mov
sub
lahf
mov
xorb
sub
and
out
fldt
or
fsubrl
sbbb
or
cmp
dec
setbe
adc
daa
addr16
test
mov
cmp
jno
dec
mov
loop
jp
adc
push
xor
scas
int3
mov
aam
jge
addr16
scas
int3
and
jmp
ret
ficoml
xchg
ret
outsl
pop
shll
fiaddl
testl
mov
outsw
or
or
mov
xor
int
sti
cmp
rol
loope
jmp
sub
rorl
iret
jp
in
push
daa
push
mov
not
fbstp
xor
stos
insb
cld
fidivrl
in
push
pop
movsb
inc
add
xchg
stos
sbb
addr16
scas
aas
fsts
das
ljmp
mov
adcl
enter
xchg
push
ficomps
insl
and
dec
inc
mov
add
jg
mov
xchg
jns
mov
mov
or
movsb
addr16
lret
push
push
aad
mov
cmpsb
dec
jbe
clc
or
mov
cld
jo
xor
sub
roll
mov
out
push
pop
sub
add
lock
loope
inc
xchg
loope
stos
mov
dec
xor
push
sahf
loopne
inc
or
and
cmpsb
les
mov
xchg
fiadds
jb
ret
cmp
pop
adc
mov
dec
fdiv
or
bound
mov
les
fildll
addb
ljmp
leave
outsl
js
jae
push
jno
lcall
rcll
outsb
in
out
pop
adc
outsb
xchg
mov
ret
iret
push
and
add
jo
lods
sbb
push
js
lret
imul
enter
inc
and
outsl
lea
jae
data16
outsb
cmp
jge
lea
ja
sub
test
clc
jns
outsb
mov
data16
and
pop
sub
mov
lahf
pextrw
pop
mov
andb
sbb
lods
add
outsl
jne
popf
movsb
add
movsl
das
push
pop
pop
out
sbb
fisttpll
sbb
xor
jge
fisubrs
in
mov
insl
mov
jb
sahf
inc
and
hlt
cmpsl
cmp
inc
outsl
cmp
call
jge
shlb
icebp
pop
cmp
or
jo
ret
dec
push
mov
les
sub
sbb
cmp
mov
sub
or
movsb
dec
mov
inc
dec
dec
stos
xlat
shlb
fdivrl
push
loopne
push
flds
rcr
stos
cmp
mov
dec
mov
jne
jl
mov
inc
mov
shr
lcall
jne
push
sub
inc
fsub
xchg
xchg
dec
loope
and
fisubs
dec
pop
fcompl
loopne
aaa
ficoml
mov
cld
fcmove
xchg
nop
stos
and
out
push
mov
xchg
insl
add
xor
sbb
dec
mov
clc
lock
xchg
mov
pop
iret
loope
xor
or
sbb
cld
loopne
cld
inc
inc
xorb
inc
or
mov
test
adc
ds
push
test
dec
mov
lahf
leave
inc
cli
xor
and
cltd
mov
inc
test
or
decl
xlat
push
xchg
pop
fwait
dec
mov
pop
das
or
mov
int3
and
cli
mov
nop
ds
mov
jmp
ficompl
test
repnz
pop
mov
cmp
in
xlat
mov
jg
pop
mov
cmp
xchg
mov
xor
sub
push
insl
mov
clc
adc
imul
add
lock
inc
mov
std
add
and
xchg
adc
jns
xlat
rorb
cmp
daa
shll
in
in
pop
xchg
add
xor
xchg
adc
xor
push
sbb
loopne
adc
insb
in
out
test
ret
test
fcmovnu
push
lret
adc
pop
cmpsl
sbb
call
out
cmpsl
sbb
xchg
sub
cmpl
out
divl
jns
cmp
push
filds
cmp
xchg
jo
imul
test
xor
test
mov
add
mov
arpl
into
je
roll
cmpsb
call
jmp
jae
jl
push
fstps
add
lds
fbstp
lcall
pop
mov
lcall
add
les
mov
dec
fsubs
fisttpl
inc
lret
sbb
lcall
mov
mov
imul
ret
inc
nop
cld
mov
mov
pop
imul
dec
mov
mov
test
enter
sbb
jbe
pop
sahf
ret
nop
mov
in
hlt
adc
cmp
inc
pop
xchg
push
adc
ficomps
mov
xor
repnz
adc
adc
pop
lods
dec
push
enter
push
loop
sub
sarl
xor
mov
xchg
or
mov
pop
in
aaa
inc
rclb
ficompl
jl
mov
mov
or
jecxz
rorl
mov
arpl
lods
mov
or
call
jmp
adc
rcll
fisubs
dec
cmp
xchg
xor
rolb
imul
xchg
fstl
rcll
add
iret
mov
sub
push
mov
lahf
daa
int3
daa
add
outsb
mov
loope
dec
jg
cmc
test
mov
into
xchg
sbb
mov
jecxz
adc
out
loopne
pop
rcr
jmp
dec
ss
mov
sub
inc
test
mov
in
aaa
lret
arpl
daa
in
push
fcomps
fildll
adc
imul
sbb
pop
je
and
xchg
push
leave
push
mov
data16
testb
repz
or
stos
jae
inc
xchg
cmp
imul
jns
adc
add
xor
lcall
ret
nop
fadds
jb
dec
dec
pop
push
add
push
xchg
arpl
dec
fldcw
shll
cmp
lret
movzwl
push
add
or
mov
lret
icebp
bswap
dec
mov
push
scas
jle
add
cmpsl
jnp
jne
mov
shr
scas
cld
xor
add
add
mov
push
push
push
mov
ja
ja
push
stos
pop
pop
shrl
cmp
out
fs
dec
ds
into
sub
pushf
pushf
xchg
adc
shlb
dec
int3
popa
das
repz
movsl
scas
cmpsb
cmpsl
scas
rol
imull
xchg
mov
shll
bnd
rcrb
stc
and
lods
inc
lret
xor
in
sbb
xchg
sbbl
xchg
push
sarb
aas
pop
addr16
xchg
mov
sub
jecxz
lds
sbb
sbb
dec
mov
daa
xlat
xchg
inc
shlb
xor
cmc
adcb
push
add
enter
in
mov
push
daa
and
mov
popa
jmp
andb
iret
clc
stos
fldenv
mov
loopne
push
outsb
sbb
and
sub
mov
std
fs
mov
mov
roll
cmp
aam
out
pop
inc
fistps
adc
clc
push
xchg
jg
jle
jg
scas
ds
ja
or
and
mov
popa
dec
int3
addl
movsl
mov
and
mov
stc
xchg
insb
cltd
out
loopne
sahf
push
scas
mov
out
pop
cmp
clc
jne
jae
cmc
pop
cmp
pushf
pop
int
mov
int
mov
js
fcomip
inc
sbb
xor
sbb
lods
dec
bound
sarb
or
sti
out
jmp
out
fs
mov
adc
sub
bound
sbb
pop
jle
cld
add
out
push
out
jne
divl
flds
sbb
mov
pusha
inc
repnz
xchg
leave
push
and
pop
or
jb
adc
pop
insb
pushf
add
cmc
repz
inc
mov
mov
scas
pop
lahf
int
enter
sub
movsl
or
mov
fcmovu
lret
xchg
es
add
mov
sub
test
sbb
adc
insl
cmp
or
cld
push
jl
push
mov
fst
pop
data16
jecxz
cmp
outsb
mov
mov
or
cli
adc
int
out
inc
loope
jg
test
jmp
das
outsl
mov
dec
mov
int3
fwait
pop
fsts
fs
lock
in
inc
adc
enter
and
mov
jne
cmp
arpl
inc
andb
nop
pushl
mull
add
es
es
sub
jno
cmpsw
fwait
icebp
out
push
adc
stos
fwait
inc
mulb
xchg
jle
adc
adc
sbb
xor
in
sbb
mov
xchg
jle
mov
pop
frstor
sbb
push
clts
mov
mov
xor
in
add
or
inc
std
mov
movsl
jno
loop
sbb
movl
repnz
int
and
repz
das
mov
es
repz
and
adc
aaa
clc
mov
fcoml
stc
rcrl
or
cmp
push
fsubrl
loope
shrb
sub
scas
cmp
mov
lds
add
int
jg
icebp
pop
jns
pop
aas
repz
sahf
xchg
sub
mov
and
repz
dec
dec
loope
popf
arpl
xor
add
mov
push
jnp
xchg
sub
jecxz
or
jmp
movsb
pop
movsb
mov
sbb
sahf
mov
mov
push
fs
push
dec
mov
andb
jmp
push
mov
sahf
push
out
fbld
jmp
jecxz
and
jnp
xor
mov
scas
pop
and
imul
leave
out
pop
clc
repz
mov
add
ret
mov
aaa
sbb
push
jb
cmp
inc
xor
std
lcall
repnz
leave
dec
shl
test
push
dec
in
filds
inc
lods
add
jb
lcall
xorb
jmp
sbb
orb
jbe
movsb
mov
js
and
icebp
sub
fsubrs
cmp
push
insb
mov
adc
cmpsb
inc
or
imul
push
mov
mov
movsb
add
cmc
imul
and
outsl
cmp
shll
push
adc
sbb
fistpl
imul
xchg
pop
daa
push
or
std
xlat
or
dec
jmp
pop
aam
sub
inc
pop
dec
popf
cs
pop
cld
shll
pushf
je
dec
aaa
fsubl
mov
cmpsb
loope
cs
insb
pop
pop
xchg
jne
xor
push
shrl
sbb
pop
mov
into
pushf
adc
lret
jp
lret
popl
jbe
push
jecxz
mov
in
sbb
imul
mov
gs
mov
push
inc
sbb
push
les
dec
xlat
add
test
sbb
push
out
mov
xor
pop
loope
dec
icebp
sbb
lret
fwait
jns
cmpsl
int
xchg
pop
inc
cmpsb
rorl
sub
xor
rorb
mov
pop
das
pop
sbb
insl
adcb
cmp
mov
mov
dec
xchg
test
out
dec
sub
ret
xchg
fdivrs
inc
sbb
orb
push
pop
inc
pop
add
mov
rclb
sbb
mov
sbbb
data16
mov
nop
dec
shl
sbb
mov
xchg
adc
addr16
lods
and
stos
into
imul
into
jno
in
stos
bound
loopne
push
adc
mov
dec
inc
popf
jp
aad
mov
aas
dec
fldt
pminsw
xchg
and
stos
adc
mov
pop
mov
mov
pop
jae
ficoml
jns
jae
jmp
cli
push
xchg
js
mov
ud1
data16
dec
lods
mov
test
inc
test
in
pop
pusha
push
mov
adc
adcb
ret
aaa
addr16
push
repnz
cltd
cli
cmp
insb
sub
es
shll
clc
ja
stos
pushf
push
add
or
daa
and
imul
push
sub
dec
mov
mov
mov
repz
mov
nop
pop
ss
xlat
popf
dec
outsl
lcall
test
cli
mov
and
int
add
inc
hlt
out
gs
mov
mov
push
je
stc
sbb
xchg
lock
xor
incl
sbb
push
lea
mov
out
shll
mov
scas
push
aad
add
lret
xchg
std
sub
adc
testl
push
xchg
out
sbb
xchg
cmpsl
xor
loope
adc
shrb
lea
sub
daa
cmpsl
incb
fcompl
jns
ljmp
sbb
add
xchg
dec
aam
xlat
out
dec
mov
aam
loop
ljmp
lret
test
and
cs
fnsave
test
je
jbe
es
push
and
mov
les
das
loope
aam
mov
xlat
ja
jbe
cltd
clc
leave
movsb
test
fildl
adc
cmpsb
xlat
in
lret
push
ret
inc
rorl
stos
aaa
mov
loop
mov
dec
jns
lret
xorl
lret
gs
mov
mov
or
repz
xor
push
lods
jo
and
das
fisubrl
ja
xor
pop
sbb
fisttpll
mov
repz
dec
sub
out
test
out
xlat
in
dec
in
push
push
adc
push
and
jo
popf
dec
dec
dec
cli
fimuls
xor
push
je
cmp
pop
imul
inc
movsl
cmp
xchg
jge
mov
push
pop
and
add
mov
lock
adc
into
iret
loope
rcll
or
add
jmp
sub
scas
roll
imul
fimull
sub
push
jecxz
mull
adc
inc
stos
push
cmpsb
call
ss
sub
sti
sub
sti
push
cmpsb
ret
fistps
in
lret
and
cwtl
xchg
fwait
mov
mov
pop
sbb
pop
jecxz
or
jg
lea
addr16
stos
test
cltd
fwait
loopne
faddp
add
add
push
dec
mov
shll
leave
lods
sub
mov
mov
ss
push
sarl
xor
mov
cltd
dec
pop
dec
and
xchg
lahf
mov
inc
add
inc
push
adc
add
sub
sub
call
push
mov
sbb
jns
je
inc
icebp
fnstcw
movsb
add
pushf
nop
fdivrs
out
test
imul
push
mov
xor
xchg
pop
in
es
and
dec
mov
xchg
in
enter
or
movsl
in
push
mov
orb
sbb
xchg
cmp
incb
mov
addl
adc
adc
sub
into
pusha
call
fisubrs
hlt
pop
cmpb
cmp
mov
mov
push
fistps
es
sub
cmp
ja
in
add
std
jl
push
imul
push
stos
imul
popf
pusha
dec
in
loope
cmp
xchg
daa
fisubl
sbb
popf
pop
add
je
jecxz
andl
mov
mov
repz
sub
pop
push
nop
cmpsl
inc
xchg
repz
in
jb
icebp
lods
bound
call
push
or
ret
cmp
pop
fistps
movsb
pop
and
push
adc
gs
ret
cmpl
and
fs
rcrb
popa
arpl
movsb
aaa
fwait
insb
ljmp
test
xor
or
pop
or
loop
dec
push
adc
adc
dec
clc
lahf
fs
loop
dec
sbb
add
out
ret
in
pop
jmp
fsubrl
sub
lret
push
scas
pop
test
lods
push
pop
popf
mov
dec
xchg
xor
pop
and
jmp
mov
dec
cmp
pop
das
or
ja
jp
mov
adc
or
cmp
and
inc
jmp
sub
cmpsl
test
sub
xchg
inc
pop
scas
dec
mov
jg
mov
lret
push
js
push
mov
arpl
ret
mov
mov
add
dec
cli
scas
pop
lret
scas
jmp
addb
and
sub
clc
mov
or
call
cmp
pop
adc
mov
lods
mov
out
cmp
fcomps
xorb
roll
je
sbb
call
and
cmp
mov
je
add
xor
and
fidivl
in
and
mov
cld
sbb
sahf
xchg
jo
or
add
int
mov
pop
pop
mov
dec
dec
cli
jmp
mov
dec
jle
push
dec
pop
lods
sub
insl
add
and
icebp
dec
jecxz
cs
jl
clc
jbe
jl
sub
and
push
roll
call
cli
outsb
in
mov
sbb
lods
sbb
xchg
add
jnp
inc
adc
in
sbb
aad
lock
lock
pusha
loopne
or
and
ss
xchg
mov
fstpt
inc
sbb
sub
mov
mov
gs
push
inc
pop
push
and
jae
pop
out
rolb
shlb
and
in
mov
cmp
push
and
and
in
fwait
mov
scas
inc
fistpll
pop
es
mov
xchg
pusha
incl
sub
icebp
sbb
jl
and
xor
imul
mov
loope
pop
loopne
adc
fs
pop
das
mov
sub
inc
daa
sbb
clc
lret
push
mov
fsts
sbb
pop
mov
and
outsb
sub
les
jae
mov
stc
aam
jno
fcomp
scas
or
cmpsb
scas
sub
lcall
cmpsb
ficomps
lret
mov
jp
sti
clc
div
add
pop
insb
adc
adc
pop
stc
lahf
shlb
xchg
and
jecxz
mov
and
scas
pop
movsb
pop
xchg
icebp
or
mov
push
test
adc
mov
negb
int
add
leave
in
sub
add
xchg
out
rcll
push
popf
pop
pop
lret
xabort
or
or
mov
cwtl
sub
jo
call
daa
lcall
cmc
ret
push
mov
fnsave
lahf
inc
sub
mov
aaa
gs
jp
fildll
sbb
xchg
jnp
or
jmp
cmpsb
out
mov
into
testb
not
xchg
mov
aaa
outsl
mov
or
push
mov
inc
inc
xor
call
mov
repz
push
outsb
mov
js
add
xchg
test
jp
in
mov
rorl
mov
movsb
add
push
pop
pop
adc
pop
pop
adc
movsl
xchg
dec
dec
add
dec
jge
push
push
fisttpl
and
jne
xchg
imul
enter
fdiv
pusha
mov
pop
or
insb
mov
inc
push
je
push
push
dec
dec
push
sub
xor
and
outsl
idivl
aad
mov
adc
fcmovu
inc
xchg
pop
mov
jge
push
fbstp
jmp
mov
imul
lcall
xlat
call
pop
push
cmc
jns
inc
add
in
or
or
in
pop
dec
fildl
shl
ds
fdivrs
flds
mov
or
mov
aad
push
mov
push
adc
loopne
mov
je
sbb
cld
imul
ss
mov
stos
repnz
add
jbe
call
push
rolb
shlb
les
inc
dec
in
inc
cmp
aaa
mov
in
sti
iret
push
sbb
imul
test
cs
lahf
in
movsb
jge
daa
inc
pop
pop
adc
daa
cmpsl
orl
inc
xchg
sti
mov
xchg
idivl
push
ds
jbe
aam
jge
inc
or
mov
pusha
mov
cwtl
xchg
inc
adc
andl
les
mov
mov
sub
push
cmpb
pushf
popf
mov
push
lods
pop
or
dec
popf
and
xor
test
inc
pop
jb
xchg
ja
cmp
cld
imul
sub
mov
jmp
jmp
aaa
jmp
cmp
jp
xor
cmovne
sarb
adc
push
adc
sbb
das
jno
inc
xchg
fisubl
sbb
enter
jmp
and
loope
adc
or
xor
jmp
dec
int3
cltd
dec
lahf
lds
cmpsb
xchg
leave
rcll
adc
aas
stos
jge
cli
xchg
jecxz
xor
push
jnp
sbb
mov
bound
and
scas
cmp
cwtl
cli
andb
or
in
cs
xor
mov
push
dec
cs
in
mov
xchg
or
and
fs
fistps
and
enter
cmc
cmp
mov
mov
mov
jns
sub
push
ret
xor
test
fildl
shl
or
and
xor
cmp
icebp
enter
jl
and
adc
pop
sbb
inc
jle
adc
cmp
push
ja
out
mov
aas
jo
xchg
mov
out
jl
push
stos
and
jg
push
push
push
jl
repz
mov
pop
jmp
or
xchg
push
out
outsl
sbb
xorb
std
stos
jbe
jle
std
mov
lods
in
mov
test
fimuls
into
stos
xor
arpl
ret
cmp
inc
stos
dec
in
cmp
jbe
mov
sub
xor
lahf
imul
les
dec
push
in
sarb
inc
cmp
and
pushf
pop
fcom
mov
and
popa
push
cltd
dec
out
mov
sbb
xchg
es
addl
sbb
cmp
mov
clc
dec
lods
cwtl
leave
pop
push
aas
inc
mov
pop
sbb
addr16
push
inc
aas
cmp
or
fnstsw
push
push
dec
insl
stos
int
sbb
rcrb
xchg
cmpsb
xor
mov
roll
lods
mov
sti
out
jg
jg
jo
add
loopne
jecxz
cmpsb
push
ficomps
ja
and
sbb
stc
pop
out
or
repz
xor
mov
or
sbb
leave
mov
sti
shrb
xor
mov
push
xor
cs
lods
popa
or
push
jbe
repz
sarl
out
xchg
push
dec
add
dec
test
cmp
mov
ret
dec
xchg
fisubrl
and
jb
leave
sub
lods
outsb
jno
pop
scas
cmpsl
lret
loope
cwtl
leave
out
daa
out
test
rorl
ret
test
push
into
push
shlb
inc
mov
pop
js
adc
shrb
mov
pop
cs
testl
lock
jno
movl
jle
arpl
xchg
jmp
lods
pop
cmpsl
shll
movsl
mov
jae
in
mov
jle
dec
and
xor
dec
xchg
iret
aad
sbb
insb
notb
mov
cld
cmp
jp
ljmp
xor
lock
cmp
push
mov
cmp
cmp
add
mov
test
test
sub
and
aam
aaa
sbb
xchg
pop
dec
xchg
push
jno
lahf
mov
jno
int
jo
idiv
mov
mov
inc
fcompl
mov
cld
mov
mov
dec
and
or
or
das
addr16
insb
sub
sub
inc
call
jns
movsl
xlat
push
test
sub
mov
ja
xor
test
aam
or
xor
gs
jae
adc
dec
xchg
add
cmp
xchg
addr16
pop
jmp
push
fidivrs
dec
sub
bound
adc
fistl
push
ss
insl
cs
aas
int
cwtl
cmc
mov
mov
xchg
repz
aaa
js
stos
lcall
push
jo
popa
or
pop
jo
pushf
mov
pop
pusha
gs
cmp
outsb
mov
inc
dec
sbb
daa
loop
sbb
xchg
jmp
out
daa
pop
test
sbb
push
rcl
xor
in
sub
mov
daa
scas
xchg
fwait
mov
dec
inc
mov
xchg
int3
xchg
fs
in
cmc
les
adc
xor
lods
xchg
clc
fwait
adc
cmpb
adcl
or
sub
mov
xchg
adc
or
bswap
ja
pop
mov
and
ficoms
in
mov
movsb
cmpl
cmp
pop
outsb
xor
jle
jge
push
sub
and
inc
fidivs
testb
inc
fdivr
out
mov
jmp
fidivl
fidivs
imul
jno
dec
jns
pop
shlb
pusha
cli
mov
scas
ja
mov
test
mov
add
inc
mov
xor
jge
xor
jbe
test
adc
inc
ret
loope
lcall
sub
jecxz
xor
inc
jecxz
jge
mov
fcmovb
stc
loope
cmp
aaa
xor
int3
xor
call
xor
jo
and
mov
sbb
sub
jne
cli
cwtl
jne
mov
push
mov
fldcw
pop
and
pop
pop
mov
xor
data16
lds
add
xor
fs
aaa
mov
jg
aas
and
mov
xchg
xchg
push
cmpsb
cmpsb
pop
xor
adc
dec
mov
adcl
mov
daa
xchg
out
sub
ss
adc
add
inc
pop
sbb
push
das
fwait
push
decb
jge
rcrb
mov
pop
int
bswap
mov
inc
pop
sbb
mov
push
inc
loop
ror
mov
shll
dec
mov
int3
mov
mov
push
js
mov
jb
jnp
test
insb
adc
clc
fidivs
lret
and
mov
std
rorb
mov
jae
mov
push
sbb
inc
test
popa
lds
jne
and
cwtl
jbe
cmp
repz
xchg
dec
cmp
pop
neg
stos
push
shlb
mov
add
xor
adc
loopne
test
mov
shrb
fisubl
cwtl
inc
shll
cwtl
sub
subl
mov
xchg
and
adc
and
mov
and
test
mov
dec
les
xor
mov
stc
mov
jecxz
enter
mov
push
xchg
addl
xchg
out
repnz
ja
movsb
sbb
sub
mov
sbb
out
nop
scas
lods
mov
dec
adcl
daa
pause
iret
fwait
cmp
cmp
call
jmp
in
int
pop
sahf
inc
sahf
rcll
fcmovne
pop
imul
dec
xchg
pop
mov
push
fmull
shrl
fsubr
push
pop
call
jge
pop
cmpsl
std
fsts
sbb
lods
push
jp
dec
pop
adc
leave
sbbl
sub
aad
push
movsb
sub
jge
stos
xor
xor
pop
test
frstor
xor
add
pop
call
je
lret
jle
les
jp
jbe
cwtl
inc
rcrb
push
sub
insb
inc
adc
sbb
push
or
cmp
dec
dec
jns
dec
xchg
inc
or
mov
aam
push
stos
jo
fists
lods
mov
fdivrs
aas
stos
xor
in
pop
sub
imul
mov
dec
sub
mov
insl
xor
adc
in
pushf
fimuls
sbb
mov
lods
or
cmp
cmp
adc
sbb
loope
pop
cmc
scas
outsl
adc
out
in
xlat
pop
mov
sbb
cli
addl
mov
xchg
mov
roll
in
test
cwtl
cmpsb
xchg
xchg
outsl
mov
sbb
xchg
pop
fisttpll
das
xor
adc
aaa
loop
jg
stos
lods
push
in
subl
outsb
int3
dec
cld
mov
jle
dec
mov
rcl
mov
xchg
dec
cmp
xchg
into
sbb
clc
test
jp
xchg
sbb
aam
es
arpl
and
enter
sub
mov
jne
sub
lods
adc
out
mov
xlat
cmpsb
xchg
shlb
jmp
mov
loopne
sbb
adc
icebp
daa
addr16
lret
ret
xchg
inc
in
icebp
mov
lds
cmc
addl
aad
arpl
adcl
cs
jo
dec
cmp
enter
dec
shll
outsb
pop
cmp
outsb
jle
movsl
sub
mov
and
cmpsl
xchg
cmp
sbb
out
xor
mov
fists
mov
int3
hlt
sub
insb
inc
scas
dec
fsubs
ficompl
mov
lahf
xlat
das
push
inc
sti
dec
mov
push
test
pop
std
push
cltd
push
in
and
lea
push
add
push
popf
pop
jne
xchg
sbb
dec
mov
pop
push
int3
jge
sbb
enter
add
notb
cmp
mov
ret
insl
mov
sub
or
rorb
and
pushf
sbb
fsub
lret
push
cli
lret
mov
aam
aad
sarl
in
faddl
push
pop
test
mov
cmpsl
or
fildl
pop
xor
jg
pop
fs
xor
enter
pop
test
es
dec
mov
cs
pop
ret
ds
push
repnz
repz
and
pop
cmp
jge
pop
fcomi
jmp
fwait
mov
sarl
dec
insl
cmp
addr16
push
addr16
out
and
cltd
sbb
pop
fists
sbb
or
push
out
mov
or
adc
mov
mov
push
mov
mov
mov
nop
mov
out
test
dec
pop
cmpsb
dec
mov
shll
push
and
ret
xor
mov
hlt
cmp
mov
or
sub
push
or
daa
pop
cmp
or
inc
ret
ror
outsl
adc
test
add
fwait
ja
jecxz
mov
cli
sbb
popa
or
push
push
mov
out
xor
outsb
push
sbb
insb
cmc
or
lock
bound
pushf
js
fisubrl
pop
outsl
jmp
sbb
mov
shrb
lods
jae
push
nop
dec
scas
pop
aas
mov
xor
mov
shll
and
test
in
jnp
add
sub
xchg
data16
and
pop
mov
aaa
jl
lds
inc
mov
sbb
mov
mov
or
mov
test
adc
jo
in
push
aad
mov
pusha
ficoml
lea
add
je
push
les
in
out
inc
std
xchg
rol
in
cld
pop
mov
in
mov
loop
mov
outsb
pop
loopne
push
xchg
inc
pop
add
push
xchg
mov
jno
sub
mov
les
mov
in
shlb
les
jmp
fsubrs
sbbl
mov
ret
loopne
das
cmc
aam
add
insb
cmp
jo
icebp
cmpsl
lods
cmp
sahf
es
pop
push
and
int3
push
or
loopne
adc
call
or
mov
shl
jecxz
popf
xor
aad
nop
fsubrp
test
leave
mov
jo
enter
inc
or
pop
daa
xchg
mov
cs
xchg
std
push
popf
inc
neg
js
cmp
popa
sti
es
push
cli
pop
insl
out
mov
cmp
fst
stos
xchg
andb
mov
xchg
in
jb
jns
sub
dec
add
push
mov
push
ljmp
rorb
mov
xor
or
sbb
lahf
sbb
addr16
jl
data16
shlb
pop
lret
cmp
jp
jl
mov
xchg
rcrl
xchg
mov
cmp
std
insl
into
pop
push
pusha
mov
scas
xchg
aad
insb
jno
ljmp
imulb
jb,pt
add
push
pop
mov
ljmp
add
leave
and
add
iret
mov
int
sbb
add
or
add
add
pusha
icebp
add
in
adc
decb
mov
xchg
or
mov
xor
sarl
cli
cmp
imul
js
mov
mov
add
out
int3
mov
xor
add
fiaddl
fidivs
inc
icebp
or
iret
mov
iret
mov
fs
lods
add
stc
in
mulb
test
xchg
fadd
imul
ljmp
call
xchg
adc
idiv
mov
mov
cld
mov
add
pop
mov
dec
jl
fs
push
cmp
push
jp
adc
sbb
sbb
lahf
mov
xor
or
das
shrb
sbb
push
inc
xchg
shl
lret
stos
cwtl
push
mov
cmp
lods
test
enter
push
lods
add
sub
fs
mov
inc
xchg
add
mov
pushf
or
dec
loopne
stc
jmp
xlat
aaa
lcall
pop
mov
xor
gs
popa
sti
cmp
or
mov
movsl
and
stos
clc
scas
mov
fldcw
pop
stos
fstpl
cmc
dec
or
jno
or
repnz
pop
adc
jnp
imul
out
dec
cmp
sub
mov
shrb
cmp
lods
lods
outsb
or
ljmp
aas
cmp
leave
mov
add
adc
test
push
xor
cli
cmp
inc
les
xor
xchg
mov
inc
imul
test
inc
inc
sub
mov
mov
ss
cld
cmp
arpl
insb
jne
push
lods
nop
nop
sub
xor
sbb
imul
xchg
arpl
sar
mov
dec
mov
mov
popf
aad
sahf
add
in
out
inc
addb
popa
ja
popf
ficoms
xchg
les
or
inc
outsl
push
push
int
or
adc
push
jae
in
mov
aaa
data16
mov
cmp
xor
jge
mov
dec
cli
fisubrs
cmc
fucomi
adc
jle
pop
scas
mov
scas
pop
stc
jb
cs
movb
movsb
cmp
adcl
gs
and
sub
outsb
adc
cmp
cmc
jl
test
inc
cli
push
xchg
icebp
in
test
in
add
mov
in
insl
xor
test
movsl
repnz
pop
test
jcxz
fs
mov
daa
inc
rolb
repnz
jbe
mov
rcl
dec
sub
push
mov
cmp
sarb
mov
sbb
sub
imul
add
cli
je
cmp
out
xchg
shl
ret
data16
mov
roll
aam
sub
imul
frstor
xchg
sbb
insb
lret
xorb
jecxz
lcall
cmp
cld
shrb
xchg
arpl
xchg
cmpsl
aad
xchg
dec
xchg
dec
adc
fld
push
xor
rorb
fs
inc
sti
add
ret
lcall
das
push
out
lea
mov
je
push
cli
adc
call
leave
mov
or
cmp
push
mov
fldenv
sub
ds
sti
and
xlat
mov
clc
rclb
rorb
popf
xor
adc
dec
loopne
adc
sub
test
jle
and
jecxz
sub
seta
cltd
jnp
cltd
jge
lods
or
fadds
orb
movsl
icebp
cwtl
sub
aas
aas
cwtl
repz
notb
cltd
lock
and
mov
jae
cld
scas
sbb
fucomip
mov
or
loop
rclb
add
or
enter
jge
into
insl
and
fldt
jecxz
adc
dec
adc
adc
repz
cli
sbb
fs
stc
and
in
rcll
dec
add
into
cs
jge
pop
in
sbb
sbb
cs
push
rcll
cmp
mov
sbb
mov
fnstsw
inc
pop
jl
xchg
enter
jns
aas
notl
adc
nop
aam
imul
mov
jl
cmp
jae
add
loop
adc
dec
out
dec
subb
xor
adc
mov
or
xchg
hlt
cltd
in
mov
cmp
inc
mov
imul
rcrb
in
mov
mov
je
ficoms
mov
test
iret
push
fs
inc
mov
aam
outsl
mov
je
out
enter
cs
lea
and
mov
and
mov
popf
push
mov
test
push
mov
mov
add
in
sbb
push
push
lret
push
imul
inc
insl
push
aad
in
push
iret
xor
lods
fdivrl
insl
cmp
js
addr16
xchg
pop
hlt
sbb
adc
ljmp
mov
in
mov
mov
shlb
daa
push
pop
jp
or
mov
push
inc
aas
xchg
xor
push
sub
popa
add
fsubs
ret
mov
cltd
xor
cld
jnp
jnp
lods
inc
cmp
sub
pop
pusha
aaa
xor
int3
stos
sub
scas
iret
icebp
stc
lret
jp
mov
mov
in
dec
xchg
into
and
fsts
xor
add
cmpsl
inc
lds
cld
adc
xchg
lahf
sub
shrb
pop
and
mov
fadd
and
lods
mov
inc
push
and
lock
sub
sub
xorb
mov
and
repz
out
cltd
jae
inc
sbb
dec
arpl
cli
pusha
stos
and
incb
shll
bound
fisubrs
xor
addb
fldenv
xchg
mov
add
pushf
or
lods
in
into
mov
dec
ss
adc
and
pop
imul
dec
pop
movsl
mov
xchg
pushf
outsb
xchg
dec
cmp
add
xor
xchg
mov
call
fistpl
out
pop
xchg
cmpsl
cltd
cmp
lcall
std
cli
dec
inc
xorl
xlat
aas
test
stos
cli
or
into
mov
xor
aaa
pop
shlb
dec
xor
sahf
cs
sub
dec
sbb
mov
out
mov
and
dec
sbb
iret
jb
sbb
imul
mov
or
insl
fiaddl
or
test
into
add
sbb
or
sub
hlt
jno
cmpsb
xor
rcrl
pop
inc
imul
shrl
push
lret
cmp
sbb
out
cmp
or
iret
pop
dec
pop
sbb
push
int3
mov
incb
out
cmp
and
out
mov
adc
insl
jle
icebp
pop
shrb
in
pop
popa
es
jns
ret
jge
loop
mov
xlat
popf
das
loop
push
xchg
push
outsb
and
xor
fidivl
sti
lds
es
cmpsb
mov
jne
mov
cmc
mov
mov
push
inc
scas
inc
ret
ds
add
inc
sub
or
cmpsb
sub
push
push
insl
or
pusha
les
cmp
ljmp
decl
jecxz
aad
imul
cmc
lods
mov
sub
test
mov
or
sub
enter
xor
sub
outsl
and
jmp
xchg
sti
and
aam
jb
xchg
ljmp
test
jno
aam
adc
dec
jmp
call
jl
sti
dec
jmp
in
jl
jnp
aam
imul
sbb
mov
push
inc
pop
mov
das
mov
lds
xchg
mov
out
je
dec
cmp
rorl
mov
repz
rcrb
pusha
enter
mov
imul
pop
imul
sbb
icebp
inc
insb
roll
dec
xor
es
in
or
cwtl
aad
bound
sahf
int
iret
out
jge
iret
cmp
iret
and
or
mov
xchg
and
pushf
in
mov
sarb
lds
in
and
mov
adc
mov
sbb
xchg
negl
shlb
stos
sbb
add
mov
dec
negl
mov
outsb
mov
xchg
out
gs
pop
adc
gs
mov
adc
cmp
sub
adc
aad
lcall
in
addb
fwait
pop
nop
ret
add
ret
lret
cmp
adc
sub
push
mov
mov
add
mov
push
mulb
mov
dec
adc
push
pop
call
es
in
gs
adc
inc
push
jmp
sub
mov
add
xor
inc
cmp
mov
call
xorl
lods
and
adc
push
jno
loope
int3
shl
out
jb
test
test
jecxz
xchg
mov
int3
divl
mov
xchg
adcb
mov
adc
ffree
xor
mov
leave
test
mov
data16
xor
xor
hlt
scas
mov
pop
push
mov
std
popf
inc
sbb
movsl
test
push
cmp
cmp
cmp
mov
repnz
cli
add
lret
sbb
frstor
adc
xor
jnp
cmc
shrb
push
sbb
jo
sbb
push
js
mov
add
adc
xchg
loopne
xlat
xchg
out
mov
sahf
jle
cmc
testb
data16
and
outsb
dec
dec
cmp
dec
jge
sbb
ss
mov
es
jnp
negl
imul
push
push
mov
mov
enter
scas
loope
js
jmp
xchg
fs
aad
mov
push
pusha
out
ljmp
js
or
mov
aaa
mov
adc
fimull
ljmp
push
cli
pushf
push
jg
cmpsb
push
add
movsl
in
mov
add
or
enter
and
pop
xchg
mov
mov
repz
and
cmp
jno
lahf
cmp
sbbb
jnp
cmp
addr16
sub
scas
or
data16
fcompl
imul
cltd
ja
jb
call
add
adc
inc
jnp
fdivs
scas
or
add
fistl
mov
push
shrb
jmp
insl
clc
test
push
mov
nop
ja
add
movsl
lods
xchg
mov
test
xchg
mov
xchg
ret
adcl
sub
repz
les
mov
mov
sub
das
cmp
imul
adc
lcall
sbb
insb
pop
insb
and
sub
mov
bound
cmc
inc
movsl
fnstcw
test
pop
rcrl
pushf
fistps
out
out
pusha
mov
setle
mov
cwtl
pop
pop
or
mov
stos
cmp
cli
nop
cmp
subl
and
xlat
repnz
cmpsl
lods
repnz
outsl
sub
test
aam
mov
out
xchg
jp
jg
enter
gs
jmp
pop
ficompl
xor
ror
das
push
cmpsl
mov
testb
adc
rolb
mov
andl
cmp
loope
inc
test
ss
outsb
cmp
lret
pop
mov
pop
cmpsl
sbbl
stos
lds
or
cltd
and
cmpsl
out
xchg
lds
mov
enter
das
xor
pop
jae
adc
jbe
push
mov
int
push
pop
pop
mov
addl
test
push
pop
cltd
jle
das
cli
andb
fdivs
mov
push
sub
sbb
cmc
pop
bound
mov
mov
sub
xor
jnp
mov
jmp
and
nop
in
out
mov
out
aam
gs
lods
dec
call
sub
fsts
push
push
les
shll
bound
je
dec
pop
mov
jns
mov
mov
xor
sub
adc
jecxz
test
fsubr
aas
fcoml
imul
sbb
jmp
imull
pop
mov
xorl
xchg
xchg
pop
push
mov
iret
mov
shr
push
aam
clc
pop
enter
push
or
fwait
cmpsl
mov
mov
inc
xchg
push
icebp
pushf
push
insb
cltd
repnz
push
adc
daa
mov
into
hlt
mov
fildl
adc
scas
rorl
inc
divb
movsb
ret
push
mov
lods
jge
lahf
mov
pusha
push
or
add
xchg
jne
add
mov
hlt
mov
adc
daa
stc
cmp
fsubs
gs
and
xchg
nop
xor
mov
roll
pop
or
cltd
push
jge
clc
je
jno
ror
xor
mov
test
enter
out
fwait
test
fmull
pop
xchg
mov
pop
pop
add
add
jmp
push
xchg
push
je
out
add
cs
mov
clc
dec
xchg
in
push
popf
repnz
and
mov
xchg
xchg
je
xlat
ret
adc
addl
mov
cmc
mov
xchg
jne
lea
push
xchg
xor
jnp
add
ja
dec
loop
inc
bound
push
lahf
pop
in
or
test
and
in
lea
push
xchg
adc
inc
ret
insl
mov
jle
je
xchg
lods
aad
sub
pop
pushf
dec
cmp
inc
sbb
xchg
pop
inc
pop
adc
frstor
cmp
mov
dec
mov
sarb
jne
rcrl
pop
aad
bound
jle
pop
mov
roll
loop
outsb
iret
fnsave
cmp
push
sbb
inc
stos
popa
sbb
lahf
das
or
enter
stos
push
pop
or
mov
and
fadd
test
mov
les
push
jbe
rorl
rcll
ret
test
ffreep
xor
cmpsl
stc
jne
xor
stc
iret
pop
cmpsl
adc
js
cmpsl
cmp
mov
mov
lcall
test
mov
sub
jmp
mov
push
in
ftst
xchg
fdivrl
jnp
sub
repz
jmp
into
sbb
and
push
pop
pushf
or
and
dec
leave
push
mov
in
jecxz
dec
out
or
jp
add
sqrtps
bound
or
cs
call
cmpsl
sbb
cmpsl
push
lods
pop
pop
out
xor
cmp
dec
fcoms
rclb
add
cmp
bound
mov
add
shlb
push
test
std
negb
setge
mov
ljmp
fs
insb
cli
xorl
inc
sub
shll
add
outsl
adc
test
xchg
cmp
add
cmp
mov
xlat
jecxz
imul
add
lea
or
jne
xchg
ja
push
leave
addr16
xchg
pop
jo
lods
roll
jp
xor
and
cmp
inc
repnz
les
xchg
adc
sub
mov
jl
or
add
cmpsb
xor
xchg
fadd
ret
fwait
cmc
adc
adc
mov
sti
inc
rcr
fldt
loope
adc
jbe
ds
pop
mov
sub
or
jp
inc
xor
xor
mov
pop
sub
push
mov
aas
add
push
cmpsb
aas
sub
cmp
cmp
jb
xchg
jp
nop
push
push
cmp
xchg
jg
shrb
rorl
mov
sub
hlt
divl
mov
xchg
addr16
or
stos
inc
fwait
ret
mov
inc
lds
mov
addr16
loop
lret
popf
into
pop
push
jns
fmulp
push
or
sbb
and
sub
jne
xchg
mov
jmp
sub
decb
jge
rsqrtps
notb
mov
loope
inc
xchg
or
rcrl
fmuls
lds
jl
aas
std
push
jns
cmp
pop
add
add
insb
or
out
movsb
ja
in
inc
mov
js
xchg
nop
sbb
jp
push
movsb
adc
mov
adc
push
mov
mov
out
jae
xchg
idivb
arpl
mov
dec
daa
iret
add
leave
cmp
add
jl
lods
mov
ffreep
nop
cli
xchg
cltd
push
xchg
jge
xor
cwtl
lock
mov
xor
cltd
add
mov
lahf
adc
add
adc
imul
pop
or
data16
pop
xchg
shll
scas
pop
jmp
and
mov
and
and
fistps
bound
or
addr16
xchg
or
loop
add
xchg
cmpsl
xchg
movsb
sub
das
loopne
jne
pop
sub
adc
mov
jo
jp
and
test
ficomps
sbb
cmp
adc
sub
out
loope
push
movb
mov
imul
in
push
notb
cmc
jg
cmp
sub
in
xor
sub
insl
ja,pt
cmpsl
sub
test
rorb
xor
pop
jno
cld
fwait
ljmp
and
dec
xlat
pop
aad
aam
rcll
pop
loopne
sbb
lret
pop
xchg
testl
add
inc
jp
mov
movl
xchg
loope
rcl
or
jg
and
add
and
mov
stc
cmp
test
push
mov
dec
fxtract
xchg
mov
dec
dec
rcrl
xor
cli
mov
andb
dec
and
outsl
lcall
xor
je
sub
and
jl
pop
mov
mov
orl
fimull
and
inc
push
mov
jmp
mov
sbb
daa
or
aam
fldcw
lret
jecxz
mov
pushf
mov
sbb
fneni(8087
sbb
adc
push
and
and
popa
scas
inc
cmc
aaa
jmp
dec
sbb
aam
inc
xor
mov
ret
push
jnp
aad
or
mov
loope
pop
sbb
jmp
dec
insb
outsl
xor
push
mov
fs
cmpsb
nop
into
push
jle
sbb
enter
stos
fcoml
pop
pop
lcall
jp
inc
jl
jno
pop
jle
es
mov
add
jge
mov
inc
and
or
dec
or
rclb
imul
sbb
adc
jnp
sti
movsb
out
or
add
jmp
rcrl
sbb
cmp
test
fwait
nop
arpl
lcall
stos
cmp
push
or
imul
inc
shrl
mov
addr16
loope
repnz
nop
pop
mov
cmc
dec
pushf
xchg
idiv
mov
push
mov
or
loope
inc
popf
test
mov
pushf
fsubs
dec
xor
cmp
js
cmovle
jl
mov
pop
sbb
bound
push
in
mov
pop
pop
xchg
outsl
setno
out
sahf
es
cmpsl
cmp
testb
mov
out
push
xchg
into
imul
out
sub
sbb
pop
adcl
add
shrb
mov
jmp
cs
mov
sbb
pop
into
push
movswl
push
mov
dec
adc
mov
sbb
sbb
push
and
loope
sarb
push
xorl
xor
data16
dec
aad
fcmovu
or
push
ficompl
into
arpl
inc
fiadds
rcll
mov
xor
pop
xchg
dec
cmp
push
push
xor
icebp
push
jmp
test
xchg
insb
in
mov
jns
jnp
mov
adc
sti
aad
outsl
mov
imul
in
insb
xor
xor
pop
xlat
imul
mov
adc
dec
mulb
sbb
in
and
das
aas
jae
shlb
insl
pushf
inc
lods
push
inc
loopne
add
xor
movsb
ja
stos
cwtl
jo
orb
sub
mov
sub
or
and
mov
js
fisttps
jno
pop
cmp
mov
movsb
sbb
mov
push
sbb
xchg
add
push
scas
rcr
push
shl
adc
jge
into
lea
xchg
or
inc
or
sub
lahf
je
adc
push
leave
mov
pop
ret
loopne
fwait
out
fsts
push
cltd
or
jns
ja
sbb
pop
xlat
mov
or
cmp
xchg
stc
mov
inc
xor
or
pop
pop
lret
lret
out
call
je
fcmovu
cmp
es
fcmove
mov
jns
xor
xor
aam
xchg
lcall
sbb
mov
movsb
out
fsubs
rorl
xchg
popa
jns
aam
and
mov
push
jg
imul
cltd
xor
add
pop
outsl
push
fwait
xchg
in
jae
es
cmp
das
cmpsb
ja
xor
push
sbb
call
adc
daa
inc
pop
sub
sub
in
push
xchg
in
adc
in
mov
loopne
cmp
cltd
ja
out
lock
mov
xchg
adc
fstps
leave
push
mov
inc
lcall
outsb
ret
jmp
xchg
inc
in
in
movsb
es
jb
aad
sub
mov
enter
add
mov
rolb
testl
jnp
jbe
sub
fnstenv
lea
outsb
sbb
movsb
xor
fistps
inc
insl
js
mov
in
andb
mov
push
jmp
cld
cli
out
sbb
xchg
sub
imul
jbe
mov
pop
ret
gs
fwait
std
and
push
mov
pop
sbb
pusha
loop,pt
sbb
sbb
fdivl
frstor
push
jecxz
mov
pop
and
xchg
pop
jne
nop
sub
or
add
pop
bound
inc
lea
fcom
inc
jne
xor
sbb
push
lods
mov
insb
lea
lcall
cmpsl
aad
xchg
xchg
hlt
cmp
mov
dec
pop
mov
pop
mov
imul
add
adc
aad
jb
xor
popa
ss
nop
loope
mov
stos
dec
sbb
and
dec
rcl
pop
mov
pop
jo
mov
or
fldcw
push
add
enter
out
xchg
pop
mov
ds
mov
xor
in
rcll
pop
je
movsb
cmpsl
int3
addr16
sbb
inc
push
int
push
test
or
cmp
sub
clc
inc
jp
push
insl
jge
test
or
cmp
xor
in
imul
cmp
jp
adc
sub
mov
enter
ficompl
test
cmp
lods
cld
dec
or
add
in
cwtl
mov
sbb
cmp
lock
or
testb
and
mov
test
pop
pop
or
add
pop
out
dec
mov
mov
mov
and
sub
push
sub
dec
imul
mov
push
imul
xorl
mov
mov
dec
xor
btc
push
pop
xchg
lret
into
dec
inc
test
roll
push
scas
sbb
enter
mov
dec
dec
in
outsb
cli
scas
outsb
sub
pop
xor
xchg
pop
mov
sbb
es
adc
notb
xchg
int
gs
sub
adc
notl
and
ss
or
rcl
hlt
ret
inc
or
int
xorb
rclb
rcrb
jge
addr16
mov
out
mov
inc
add
pop
sbb
adc
js
mov
cmp
xor
xchg
cmc
push
cld
rolb
gs
fisubrs
iret
mov
dec
ja
sub
sbb
cmp
addr16
xlat
popf
sub
subl
daa
pop
add
inc
xchg
xchg
imul
cmc
mov
aas
lods
fimull
out
repnz
test
cmpsl
inc
cmp
adc
popf
mov
xchg
cmp
sar
mov
sbb
push
add
inc
mov
iret
pop
aam
mov
jg
or
mov
sub
int3
aaa
push
jg
mov
pop
sbb
repz
shlb
xor
das
jmp
mov
stos
push
std
pop
fldenv
mov
out
inc
mov
lahf
nop
add
sahf
sbb
adcb
pusha
stc
mov
add
mov
inc
mull
sub
fs
inc
inc
sbb
std
lods
subl
in
add
sub
imul
out
insb
popf
aad
add
ret
xchg
subl
jnp
xlat
mov
sub
jecxz
cmpsl
sbb
lret
loop
test
aas
shlb
jmp
adc
fidivl
jp
and
call
sub
call
cmp
sbb
movsb
jne
cmp
pop
xor
pushf
dec
mov
jp
jmp
pushf
xchg
adc
mov
jno
adc
pop
dec
test
xchg
aas
add
xchg
loop
insl
xchg
stos
adc
add
les
sbb
fs
ffree
stos
jae
adc
inc
cld
imul
xor
clc
imul
cmpb
or
inc
adc
adc
mov
pop
xchg
push
push
mov
aaa
cmpl
cld
out
popa
add
arpl
test
pop
faddl
mov
and
push
dec
xchg
cmp
inc
aad
lcall
pop
xor
mov
push
test
dec
aad
mov
fisubs
jns
xchg
push
mov
adc
dec
daa
adc
test
inc
jmp
pop
push
mov
out
mov
lds
sbb
sbb
or
mov
sbb
rcl
popf
pop
add
inc
mov
mov
test
test
adc
addr16
push
clc
and
leave
mov
sub
mov
ja,pt
mov
fisttpl
jo
lods
cwtl
rcr
mov
mul
daa
int3
jg
xlat
xchg
and
mov
pop
dec
or
popa
gs
inc
sbb
or
mov
sbb
xor
or
imul
xor
dec
xor
in
jbe
push
sbb
ss
dec
jae
push
sbb
bswap
inc
push
fistpl
jecxz
fidivrs
jmp
dec
xchg
cmpsb
dec
xchg
fcoml
mov
lods
pop
sub
lcall
mov
daa
jg
sub
fildl
mov
arpl
scas
jo
fistpll
js
inc
mov
mov
add
insl
jo,pt
and
pop
sahf
xor
inc
loopne
mov
sahf
fsubrp
add
lcall
lahf
insl
shll
cli
insl
jnp
cmp
mov
stos
les
outsb
mov
lcall
dec
out
das
mov
cmp
push
mov
xor
scas
pop
jmp
lea
cmpsb
into
xchg
cmc
push
div
idivb
add
xor
fs
mov
les
shll
stc
sbb
stos
pop
cld
add
add
data16
and
sbb
mov
es
insl
inc
sub
push
jmp
popf
xlat
aas
mov
mov
fisubl
jge
push
cs
cmpsb
pop
push
add
in
and
pop
inc
aaa
add
sub
ja
mov
rcrb
mov
mov
or
stos
jns
sbb
les
mov
push
jmp
out
lahf
cmp
les
out
cmp
loop
aas
int
repnz
mov
insl
pop
test
mov
mov
out
daa
mov
inc
add
fwait
aaa
sub
cltd
imul
test
cld
imul
mov
stos
cwtl
mov
pop
and
int3
cs
and
stc
gs
std
or
push
inc
and
loope
in
jecxz
mov
cli
aaa
adc
es
in
jmp
and
xorb
push
shll
mov
sub
fmul
mov
inc
mov
inc
mov
shrl
int3
vpunpckhbw
push
inc
in
or
clc
cmpsl
adc
push
mov
cltd
ret
xchg
push
ljmp
sub
pop
daa
and
shlb
shl
push
dec
adc
mov
push
dec
je
push
test
push
inc
pushl
pop
mov
pop
or
popa
lcall
rcr
push
loopne
imul
shrb
mov
icebp
mov
mov
aas
xor
adc
repz
mov
sbb
ljmp
shlb
outsl
add
inc
repnz
fistpll
rolb
fdivrs
fiadds
adc
popf
in
pop
add
jl
inc
test
and
sbb
push
out
js
jbe
adc
into
jne
add
xchg
inc
sub
pop
add
xor
sub
mov
shll
push
mov
sahf
jp
push
adc
sbb
out
inc
and
dec
pop
pop
orb
orl
xchg
idivb
dec
mov
roll
out
mov
jns
bound
test
mov
pushf
add
xor
cld
icebp
and
out
pop
and
leave
fwait
orl
push
push
mov
push
jb
mov
js,pn
in
inc
pop
mov
lret
int3
lret
cmpsl
lods
mov
loopne
faddl
mov
mov
mov
jmp
jns
or
into
xchg
mov
aaa
enter
cmc
sbb
fcoms
xor
xchg
jmp
sbb
fidivrs
rclb
xor
jl
and
lret
dec
push
pop
insb
xlat
mov
rorb
mov
xchg
inc
fnstenv
xor
inc
xor
loop
push
movl
ds
roll
pushf
xor
push
pop
mov
push
imul
pop
int3
dec
add
fcmovbe
or
test
mov
adc
test
insb
leave
icebp
test
mov
xchg
mov
or
sub
add
sub
mov
jmp
out
mov
xor
jg
sub
movsl
lods
fidivs
pop
ljmp
cld
or
fisttps
sub
adc
pop
out
movsl
jmp
pusha
idiv
fwait
imul
or
jae
in
jbe
lea
mov
lods
mov
stos
ds
sahf
loopne
sub
xchg
xchg
dec
push
and
imul
pushl
mov
dec
jg
fldl
xor
jmp
sub
mov
mov
pop
scas
cli
mov
push
test
xor
and
add
lret
negl
mov
daa
jl
mov
aam
cltd
repz
pop
inc
fistpll
popf
and
inc
fdiv
fsub
repz
mov
dec
push
ljmp
jne
xor
pop
movsl
enter
arpl
in
mov
orb
push
push
mov
inc
std
push
mov
sbb
pop
add
repnz
rolb
push
dec
out
sbb
push
add
rcll
test
in
dec
sti
mov
or
sahf
push
ljmp
mov
pushf
jg
push
dec
pusha
testb
jle
bound
or
mov
movsl
inc
mov
jg
pop
addl
stos
add
into
loopne
jl
xlat
mov
and
sub
imulb
lods
adc
sub
stc
dec
shrb
shl
stos
jne
push
dec
cli
test
inc
mov
fs
inc
int3
ss
cmp
cmp
push
cmp
pop
cs
push
and
mov
sub
insl
or
scas
jmp
sbb
imul
mov
jl
insl
cmp
lahf
push
push
lock
negb
cmpsl
sub
mov
arpl
repnz
in
fdivp
mov
xchg
dec
dec
dec
std
mov
mov
scas
mov
out
test
dec
mov
lods
xchg
mov
mov
out
jae
popf
push
repz
or
ficomps
xor
subb
or
and
xor
push
adc
push
push
xor
push
xor
sbb
adc
insl
scas
inc
gs
push
lcall
xchg
dec
scas
fwait
test
jo
jecxz
push
sarb
mov
dec
sti
adc
repz
pop
dec
outsb
sbb
xor
mov
add
scas
icebp
sti
mov
mov
mov
adc
dec
sub
test
inc
ret
or
test
and
xor
imul
adc
js
out
hlt
cmp
arpl
lahf
addl
cmc
fcmovb
incl
jl
imul
aas
sbb
mov
or
jbe
inc
outsl
mov
mov
bound
les
cltd
or
shll
push
fmull
push
lods
loop
mov
repnz
dec
jnp
adc
cmp
int
call
gs
mov
jns
xlat
push
push
pushf
adc
jno
push
pop
sbb
je
outsl
outsl
mov
out
fwait
into
add
pusha
xor
pop
and
mov
mov
int
bound
xchg
jmp
inc
jge
arpl
aaa
dec
out
sub
or
dec
jmp
or
shll
or
xchg
xor
mov
popa
in
add
push
dec
mov
inc
test
icebp
xor
leave
mov
and
mov
loop
cltd
movsb
add
sahf
enter
mul
mov
fsts
std
addl
cmp
stc
cwtl
pop
inc
aam
dec
xchg
sahf
jae
push
xchg
xlat
push
mov
les
mov
arpl
sub
mov
inc
inc
add
pop
orb
cmpl
cmp
jns
lret
fildl
ljmp
stos
xor
dec
mov
hlt
sub
out
popa
fcompl
xchg
nop
aam
jecxz
jp
add
mov
out
lock
adc
mov
sarl
mov
leave
cmp
enter
inc
lret
xor
scas
push
ss
repz
and
shrb
aad
out
scas
mov
cmp
scas
and
push
mov
push
loope
jge
dec
test
adc
sub
test
sarb
ja
push
mov
test
pop
stos
repnz
dec
aaa
jnp
loopne
push
add
jmp
je
dec
addr16
aam
pusha
or
out
mov
loopne
adc
ret
push
insl
push
js
sbb
repz
aas
es
mov
sarb
xchg
dec
pop
jne
mov
ja
cmc
xor
fcoml
out
mov
sbb
outsl
out
adc
out
int3
mov
stos
bound
out
hlt
shll
ds
scas
clc
test
push
je
dec
dec
shl
rorl
push
outsl
adc
cmpsl
andb
jge
movsl
push
pop
mov
xchg
insl
lret
shlb
sbb
daa
int
icebp
aam
aas
inc
lock
and
pop
dec
and
sub
jno
mov
sbb
iret
add
mov
ret
pusha
push
or
lahf
das
lea
fnstsw
test
fwait
outsl
xchg
mov
cmovno
push
add
fs
mov
jne
sub
jl
push
mov
fisubs
mov
mov
sbb
cli
xchg
adc
mov
iret
ljmp
cmp
add
cmc
cli
ret
mov
xchg
pop
mov
in
movsl
and
jnp
roll
lock
repz
xor
dec
andl
sti
adc
mov
xor
mov
xor
andb
stos
xchg
xlat
sbb
jg
incl
xchg
or
idivb
mov
mov
xchg
fistps
xor
daa
pusha
xchg
mov
xor
sub
fldl
cltd
rcrb
xlat
dec
or
cmpsl
fsincos
clc
sub
or
ja
rcrb
or
jb
sbbb
adc
sub
out
sub
lret
sub
jge
adc
daa
push
dec
jg
push
inc
lret
insb
jbe
xor
pop
and
dec
lods
mov
jne
adc
and
cli
iret
aaa
jae
lret
popa
enter
les
stos
in
test
loope
mov
imul
sbb
mulb
jns
xchg
or
lahf
sbb
push
xor
add
jmp
in
pop
jnp
orb
aas
leave
adc
das
or
fldenv
shl
out
out
mov
lds
sbb
dec
cmpl
adc
dec
iret
adc
xchg
lods
jno
xor
mov
in
out
aaa
pusha
xchg
inc
mov
loop
push
mov
movsl
popl
jmp
sub
dec
mov
into
or
adc
dec
mov
iret
inc
dec
and
push
lcall
adc
orl
jbe
lock
dec
loopne
ss
sbb
mov
test
dec
fistl
testb
inc
mov
cmp
xor
fstpt
push
cmp
inc
lock
jmp
pop
dec
leave
lea
pop
rorb
popf
imul
mov
or
sti
mov
mov
pushf
jle
js
sub
sub
or
and
mov
in
dec
cli
ss
fcmove
mov
sub
je
or
xor
jge
push
lds
xchg
and
dec
movsb
enter
mov
ss
testb
iret
call
push
les
xchg
pop
movups
xchg
in
xchg
ret
mov
or
xor
test
dec
aaa
xchg
cli
cmp
dec
xor
mov
dec
ja
sbb
push
inc
adc
imul
xor
mov
sub
jbe
push
ret
push
int3
out
shlb
dec
inc
testb
lea
stos
iret
mov
cmp
cmp
jae
inc
xchg
add
dec
arpl
popa
jns
scas
mov
fdivrs
and
add
je
sub
rolb
es
movsb
fs
lahf
xor
and
jae
cmpl
inc
or
div
add
push
push
mov
ljmp
push
push
test
idivb
outsb
fstps
ficomps
adc
adc
xchg
int3
inc
inc
sahf
sbb
cld
jno
fcomi
pop
xor
cli
mov
xchg
lods
adc
das
sub
ror
cmpsl
xor
adc
leave
pushw
leave
es
mov
rcr
pop
inc
jne
jne
xchg
xchg
addr16
mov
sbb
xchg
jp
mov
leave
push
mov
or
fidivl
outsb
mov
neg
mov
out
pop
loope
fnclex
add
test
dec
xchg
in
dec
gs
clc
fnstcw
sahf
pop
sbb
int3
aad
rol
fistps
mov
and
ds
int
pop
cmp
jns
imul
loope
clc
push
cmp
dec
sbb
ljmp
ret
pop
sub
push
cmp
stc
out
outsl
cld
dec
jmp
daa
jg
dec
pop
jg
dec
call
inc
popa
jns
xor
je
sbb
and
insl
fldl
cmpsl
lcall
cmpsb
xor
hlt
jb
xchg
inc
xchg
xchg
push
into
test
pusha
fcmovb
inc
and
mov
fneni(8087
add
shrb
jae
movsb
in
xor
imul
xor
xor
aas
push
mov
xor
push
ss
loope
add
jo
push
xchg
dec
into
lods
call
add
lahf
mov
repz
mov
cmc
jno
mov
adc
js
fisttpl
stos
push
enter
fsub
push
fnstsw
enter
test
fs
mov
in
enter
jl
outsb
fwait
sbb
cmp
cmp
int3
dec
xchg
test
test
xor
test
xchg
imul
sub
in
clc
or
popa
push
mov
sti
leave
fstpt
sub
dec
stos
ss
or
aas
push
mov
bound
xchg
maxps
int
pushf
ret
cmpsl
or
jae
mov
mov
adcl
test
andl
lret
pop
iret
int
push
fstl
insb
fistl
xor
jle
push
add
ret
dec
inc
add
pop
scas
mov
mov
push
ffree
lret
in
mov
rcrb
sub
sahf
sbb
mov
xchg
dec
jmp
scas
sti
subb
jle
or
xor
addr16
add
aad
add
sti
ss
lock
fistl
mov
and
lds
cmp
xor
pop
jmp
inc
pop
cwtl
push
mov
mov
or
sub
ret
lock
dec
rcl
xlat
iret
dec
cmpsb
jl
adc
out
cmpl
lods
fdivrp
or
cmc
xor
jecxz
stc
sub
pop
adc
in
and
sbb
sahf
inc
sbb
inc
push
mov
sti
stc
adc
fwait
adc
hlt
mov
std
xchg
xor
and
rorl
jge
lret
xchg
fstpt
pop
inc
sbb
pop
sbb
jnp
mov
add
sarl
negb
in
mov
outsl
cwtl
gs
and
mov
jno
xchg
xor
jbe
insl
xor
popa
mov
jb
push
inc
mov
xor
std
push
iret
adc
and
push
lods
aam
push
push
fcmove
insb
xor
adc
test
lahf
xor
sbb
jmp
fwait
es
fdivp
fildl
je
clc
fwait
call
pop
popf
mov
in
out
in
out
add
dec
test
test
mov
xchg
movl
icebp
pop
pop
mov
add
mov
sbbl
mov
inc
scas
pop
pop
arpl
in
xchg
add
ret
fnstsw
mov
stos
pop
popf
cmp
mov
push
mov
mov
fsubrl
pushf
jne
popa
cmp
xchg
cli
push
dec
in
xchg
int3
cmc
aam
pop
push
and
sbb
psubusw
sub
jge
into
popa
in
aad
mov
popa
test
jne
or
repz
mov
stos
mov
dec
cs
cmp
cltd
mov
sub
imul
addr16
ds
and
test
in
mov
in
mov
inc
dec
outsl
xchg
lcall
push
xor
mov
into
das
lock
sbb
or
dec
iret
xor
loop
and
adcl
jle
pop
inc
aad
dec
and
push
pop
dec
jmp
adc
addr16
cli
divps
xlat
out
add
in
mov
in
inc
cmp
aaa
xor
sub
inc
lret
pop
ror
or
mov
pop
xor
or
inc
mov
subl
andb
mov
pop
sbb
xchg
sahf
stos
xor
sub
dec
pushf
jnp
push
call
sub
mov
fwait
add
and
fbld
in
mov
cwtl
add
add
popa
sub
mov
data16
int
add
sbb
aaa
cmp
pop
aaa
or
push
and
jnp
dec
push
xor
push
aam
sub
fwait
mov
push
xorb
cmc
in
call
out
sub
sub
imull
cwtl
lods
xor
cld
jnp
loop
push
jle,pt
sarb
add
mov
push
adc
push
jns
fisubl
mov
dec
mov
mov
imul
mov
data16
fidivrs
lret
in
inc
or
push
sti
lock
dec
mov
ja
or
lret
mov
sub
dec
sub
sti
xchg
repz
mov
movsb
fidivrs
pusha
mov
push
pop
ficompl
es
push
jb
rol
mov
std
inc
add
or
in
cmp
bound
cmp
std
addr16
xor
sbbb
lods
mov
pop
psadbw
sub
xchg
clc
out
lcall
lahf
push
mov
push
xchg
add
or
or
lcall
loopne
sbb
jo
ljmp
sbb
in
xlat
lret
ret
mov
cwtl
push
push
jns
mov
xor
lds
test
lret
xchg
out
insb
fbld
cmp
pop
pop
ljmp
dec
xchg
xchg
adc
fucomip
inc
lea
push
lods
cmp
fiaddl
or
inc
sti
cli
add
mov
outsb
sbbb
insl
adc
test
pop
push
dec
enter
scas
loop
sub
cmpl
cmp
mov
popf
inc
mov
jg
sbb
lret
lret
test
mov
lock
jg
aad
cltd
cmpsb
mov
jnp
jecxz
mov
int
sub
sbb
or
popa
xchg
arpl
imul
ja
js
pushf
fsubrp
xchg
lret
jbe
push
push
pop
mov
cwtl
fwait
xchg
popf
jg
shl
mov
stos
fistps
adc
scas
mov
or
movsl
mov
les
out
mov
push
call
fdivl
les
pusha
xor
mov
xchg
mov
jmp
ret
std
mov
inc
jnp
mov
rolb
sbb
mov
push
mov
pop
sub
dec
mov
fsubrl
idivl
adc
or
xor
mov
mov
ss
dec
stos
dec
pop
push
push
cmpsl
shll
mov
pop
xchg
jp
dec
fbld
sti
cs
xlat
mov
add
popf
lcall
sbb
ret
push
sbb
test
push
or
fistpl
xor
test
sub
dec
cmpsl
lds
fisubrs
push
nop
mov
scas
popf
loop
dec
popa
fistl
dec
into
jo
scas
lock
jmp
cwtl
or
test
jns
enter
imul
fsubr
fs
cli
cmpsl
fnstenv
add
jae
je
rolb
into
test
sti
out
mov
cmc
in
stos
ret
inc
and
addl
mov
aas
daa
rorl
idivb
xor
je
ja
popa
fsub
loopne
jb
cmp
cmp
or
push
dec
pushf
imulb
icebp
ficomps
clc
rcll
adc
lock
aas
mov
repnz
ret
mov
shll
lea
cmp
adc
lods
sbb
int
ja
fsubrl
rcl
or
push
xchg
out
push
jno
cmp
push
or
jp
in
sti
jbe
dec
in
pop
cmp
out
adc
mov
dec
pop
les
sub
test
test
inc
pop
movsb
fisubrs
test
xchg
negl
lret
mov
andb
add
fidivl
icebp
or
xchg
pop
les
fcoms
fwait
rcrl
mov
fldl
and
mov
dec
xchg
adc
push
aam
mov
loopne
lret
jne
pop
mov
adc
gs
pop
leave
dec
hlt
and
cmpsl
popf
xorl
push
mov
popf
push
nop
scas
xor
js
jno
jns
or
jge
cmp
push
xor
orb
arpl
shll
cmc
jecxz
inc
repz
outsb
mov
push
mov
inc
pop
sub
stos
rep
dec
fimuls
cld
stos
movsl
cmp
cwtl
push
xchg
jb
ret
dec
ja
test
sarl
add
xor
cli
addb
stc
out
sub
xchg
cmp
push
es
decb
pop
cmc
movsl
jae
imul
sub
sub
pop
lahf
dec
jb
jecxz
add
mov
shlb
test
mov
pop
push
sub
ret
divb
sub
or
mov
jg
mov
mov
xchg
xchg
add
mov
daa
in
sbb
ds
ja
xchg
jp
in
dec
cwtl
adcb
std
pop
and
icebp
and
out
stos
add
add
sub
fidivrs
int3
jae
mov
xchg
and
aad
pop
sub
xchg
jg
xchg
pop
outsl
mov
cmp
aaa
lcallw
inc
into
lahf
loope
jae
int
mov
mov
cli
movb
mov
sbb
xor
out
xor
cmpsl
push
xchg
repnz
loopne
into
fsubrs
xchg
mov
sbb
js
imul
pop
cmp
adc
cli
fdivr
adc
pop
nop
std
cmpsl
pusha
sub
gs
cmp
cmp
jbe
ret
out
mov
in
inc
xchg
ljmp
mov
pop
xor
fimuls
push
stc
push
mov
xor
mov
add
or
or
push
dec
xor
push
fbld
sbb
push
mov
in
repz
push
cld
mov
or
pop
or
sar
xor
pop
cmp
call
aas
repnz
adcb
jmp
push
jne
adc
inc
loope
xchg
push
out
ret
pop
dec
mov
jl
out
mov
xor
mov
mov
push
push
jnp
ret
cwtl
outsl
cwtl
dec
mov
lds
or
lret
inc
mov
fimuls
xchg
lea
or
lret
out
in
push
loope
mov
and
sub
mov
xor
mov
jl
and
arpl
orl
lds
decl
or
int3
mov
out
xor
mov
lahf
jae
icebp
aaa
pushf
popf
andl
sahf
dec
lods
inc
mov
fldenv
mov
sti
dec
mov
bound
pop
aam
push
mov
jbe
and
mov
lcall
sub
ficomps
mov
add
les
fsub
je
cmp
lret
test
subl
nop
jp
mov
jmp
fnstsw
repz
movsb
sub
mov
sub
pop
movsb
mov
or
push
fcompl
test
push
xor
xchg
and
mov
cmp
xchg
cld
test
bound
mov
fs
mov
xchg
enter
insb
jge
lret
stos
jle
lods
mov
fwait
imul
mov
sahf
push
or
xchg
xor
addr16
ljmp
mov
icebp
adc
push
lret
data16
ja
aad
jp
mov
iret
and
cmp
popa
xor
lahf
mov
mov
out
inc
adcb
pop
adc
pop
jb
adc
jl
push
imul
sub
test
mov
mov
mov
xchg
cld
pop
lock
loop
xchg
inc
jp
mov
inc
idivl
mov
cmp
das
fldenv
insb
and
lods
lods
adc
dec
outsb
inc
mov
mov
mov
cmp
mov
out
jae
testb
cmpsl
adc
es
dec
pop
jnp
bound
das
and
stos
fs
mov
cmpl
decb
sub
xor
xchg
xchg
out
inc
push
jl
repnz
sbb
leave
fistps
fsubr
ljmp
mov
inc
sub
ss
das
jbe
test
ror
mov
shrl
cmc
cmp
fdivl
push
xor
xchg
jge
push
sub
inc
adc
enter
mov
hlt
mov
push
cmp
loopne
xchg
stos
cmp
xcrypt-cfb
dec
mov
inc
adc
xchg
inc
movsl
je
test
addr16
lock
cmc
mov
mov
add
outsl
dec
pushf
ret
ret
pushf
xor
or
daa
sub
cmp
mov
jne
fsubl
scas
jo
cmc
inc
imul
ficoml
push
sub
ja
xor
lahf
sbbl
sub
into
fcomp
mov
test
xor
sbb
shll
cmp
aam
imul
cmp
fdivr
out
fdivrs
push
inc
mov
sbb
xlat
jmp
jp
add
lds
pop
xchg
fistps
mov
sbb
shlb
repnz
and
test
imul
inc
adc
cli
out
mov
or
mov
fs
fwait
rcrl
jb
push
add
adc
mov
adc
iret
mov
mov
mov
ja
sub
cmc
ljmp
mov
add
shll
fdivrs
mov
pop
leave
fs
cmpsb
jnp
es
jmp
fisttps
jb
add
stos
push
xchg
ja
jmp
into
lahf
sbb
jns
inc
call
mov
scas
inc
fprem
imul
cld
loopne
dec
divb
and
out
sarl
repz
or
lds
jp
negl
arpl
jbe
push
in
cmp
daa
jg
stc
popa
insl
lcall
cmc
inc
arpl
mov
jp
stc
shlb
adc
hlt
or
mov
mov
das
repnz
sbb
xor
dec
repnz
sub
subb
xchg
shrl
adc
js
std
sarb
dec
jne
and
jmp
sahf
mov
popf
cmpsb
jns
inc
mov
inc
loop
add
insl
mov
sbb
fmuls
das
sbb
or
sbb
adc
lahf
xchg
jb
into
outsb
dec
in
rcrb
mov
stc
xchg
jecxz
repnz
jge
mov
inc
jmp
int3
inc
or
xlat
mov
adc
fisubrs
dec
push
insl
std
inc
fimull
cmp
jge
fistpl
mov
add
xorl
outsl
mov
adc
test
add
mov
std
push
in
cli
cmpsb
in
clc
test
xchg
inc
and
jno
xor
pop
adc
outsl
dec
rol
push
dec
push
dec
sub
add
and
leave
aaa
lret
clc
in
orb
mov
dec
xor
shlb
xor
popa
shl
push
movsb
jmp
imul
adc
mov
stos
hlt
inc
cmpsb
inc
jo
test
addl
add
jbe
rcrl
mov
jne
adc
cmp
int3
inc
ds
adc
or
cmp
mov
pusha
std
fdiv
add
add
testl
stos
adc
mov
in
lcall
aaa
lret
adcb
sahf
push
cltd
stc
inc
jno
in
adc
pop
sub
dec
movsb
mov
loope
jbe
inc
and
cmp
out
jmp
mov
in
push
in
out
pop
inc
testb
frstor
cmp
push
ds
jp
lret
lods
pop
je
icebp
fldcw
fnstenv
jge
and
jmp
mov
ja
ret
xor
mov
cld
mov
loop
fnsave
add
popl
xchg
cmpsb
ja
lock
mov
jle
jne
bound
sub
pop
rorb
mov
push
cmp
jle
mov
xchg
sub
jo
pop
cmp
xor
xchg
jo
push
arpl
clc
cmc
pop
pop
adc
inc
fsubrs
mov
add
add
lret
sub
in
out
jae
xor
mov
dec
push
mov
cmpsl
jne
xor
rcll
xor
mov
out
xor
push
sbb
test
lods
je
push
incl
adc
jl
jmp
fisttpll
inc
add
lds
xchg
repz
mov
jne
les
add
nop
bts
mov
mov
push
and
mov
movsb
lret
mov
cmp
sub
and
movsl
lret
or
cmc
lcall
adc
sbb
ja
enter
test
mov
arpl
hlt
jb
sti
xor
or
inc
cmp
aas
push
mov
cltd
or
or
push
popf
fdivrl
jmp
movsl
lea
inc
jae
hlt
imul
and
mov
dec
je
dec
mov
add
sub
sarl
imul
cld
lret
add
xchg
insb
push
std
fisttpll
cmp
shlb
mov
xchg
ret
mov
sbb
fwait
xchg
clc
xor
mov
add
js
jecxz
xchg
repz
fcomi
mov
jo
mov
xchg
aad
jo
push
mov
mov
adc
out
pop
cmc
add
cmp
mov
jmp
dec
inc
and
loopne
or
dec
add
enter
repz
mov
scas
pop
xchg
sahf
and
xor
jecxz
popa
int3
cmp
add
out
xor
and
jl
call
or
push
add
dec
loopew
out
adc
jae
mov
add
dec
repnz
clc
repnz
fs
clc
add
test
jbe
jno,pt
push
mov
jae
adc
test
pushf
mov
test
push
jno
enter
mov
scas
mov
xor
nop
mov
inc
aas
fbstp
adc
test
cmp
jge
jg
sahf
push
leave
cmc
aad
lea
outsb
mov
loope
out
xchg
aaa
sbb
sub
pop
dec
add
imul
cld
fisubrs
es
and
adc
fnstcw
repz
sub
pop
into
push
sub
dec
xchg
inc
subb
adc
mov
fcomps
mov
int
cwtl
imul
addr16
rol
or
ljmp
mov
cwtl
inc
mov
ljmp
adc
adc
jg
mov
mov
pop
cwtl
jle
clc
testl
add
jecxz
mov
imul
testl
sub
pop
xor
inc
pop
ljmp
rcl
inc
cmpsl
mov
movsb
xor
mov
mov
insb
xor
jl
out
test
add
scas
adc
ret
mov
pop
out
pop
jecxz
lret
shlb
and
test
mov
mov
out
popf
or
lcall
les
and
fwait
cmp
fidivrl
adc
sarl
aaa
inc
jae
stos
loopne
movsb
outsl
add
and
movsl
fmuls
ret
cmp
aas
xchg
sarl
addl
icebp
push
xchg
cmp
xchg
push
or
out
nop
jns
bound
jb
mov
shlb
andl
jo
adc
outsl
add
push
gs
sub
imul
int
sbb
loop
push
pop
mov
aaa
xor
mov
or
cmp
pop
call
cmp
bound
das
sbb
aad
cmp
push
add
and
orb
push
insb
dec
mov
jge
jecxz
lret
jnp
mov
bound
adc
mov
lods
jmp
jbe
cmp
or
loope
insl
sbb
je
xchg
fists
out
imul
aam
daa
push
popf
mov
inc
jl
and
sti
xor
push
pushf
les
nop
mov
ja
outsb
mov
adc
jnp
aam
pop
sub
pusha
push
jo
xchg
subl
and
xor
outsb
sbb
lods
push
cmpsb
dec
paddsb
fildl
popf
iret
cmpsl
mov
push
cmp
xor
add
sub
in
pop
mov
sbb
or
pop
pop
movsb
xor
xor
pop
cmpsb
aas
fxch
es
shlb
int
xchg
movsb
jo
roll
pop
push
adc
sub
insl
leave
sti
rol
loop
in
mov
jl
add
push
icebp
cmp
adc
mov
ret
mov
bound
adc
sbb
jbe
adc
stos
xchg
mov
jno
sbb
mov
jge
shrl
ja
outsb
cwtl
ret
lret
and
xchg
aaa
xor
stc
lret
xlat
cmp
dec
std
sub
dec
lret
int3
aas
out
pushf
repnz
pop
adc
scas
divb
xor
jge
push
daa
fiaddl
pcmpeqb
mov
dec
pop
mov
adc
push
jg
pop
inc
pop
sbb
scas
loopne
cli
fistpll
and
mov
cmp
leave
jmp
push
sbb
lret
mov
push
rcl
cltd
mov
pop
sbb
push
sub
or
mov
leave
inc
nop
arpl
sub
adcb
les
and
les
loope
push
pop
jne
xor
cmpsl
test
and
mov
leave
sahf
push
cmp
popa
push
arpl
xor
inc
roll
lea
insb
mov
and
add
mov
cltd
mov
pop
pusha
ret
cwtl
push
std
inc
fbld
lods
popa
fwait
in
cmpsb
add
fcmovnbe
out
xchg
pusha
add
mov
jle
xor
mov
stos
mov
rcrl
and
dec
enter
aad
lds
test
les
dec
or
pusha
cmpb
jg
mov
cmpsl
and
pop
xor
cmp
lds
or
sbb
ljmp
push
sbb
adc
scas
cmp
adc
ljmp
jbe
sti
adc
mov
inc
jo
ss
sub
cmp
inc
es
fsubs
pop
pop
dec
std
jle
inc
push
repnz
test
push
into
fidivrs
fisubrl
imulb
cmpsb
ret
mov
in
mov
jp
add
movsb
pushf
int
iret
es
inc
adc
in
adc
add
cmp
je
xchg
fidivl
std
push
scas
nop
pop
jmp
ret
xor
mov
leave
testl
daa
out
lods
insl
add
inc
mov
loope
and
sbb
les
iret
mov
repz
ret
cmp
test
xchg
mov
mov
adc
scas
push
aad
inc
inc
lcall
jns
xor
cld
push
inc
or
sbb
and
popw
test
cmc
dec
test
ja
stos
dec
nop
xor
arpl
cmpsl
cmpsl
pusha
xor
cmpsb
mov
xchg
jne
sahf
push
sbb
out
jno
jnp
xchg
inc
out
mov
out
xchg
xor
cmp
sbb
jmp
sub
sbb
sub
gs
and
mov
mov
pusha
cmpl
cmpsl
mov
mov
addr16
fprem
paddd
test
lret
addb
jg
out
xchg
es
xchg
cmp
inc
shll
int
and
scas
clc
aad
jp
fisubs
lds
pop
mov
add
addb
scas
leave
add
sub
push
cmp
in
mov
jns
cmpsb
inc
jne
and
leave
in
repz
push
xchg
outsb
lds
jle
sub
sahf
in
sub
divl
bnd
jg
jp
les
cltd
dec
add
jmp
mov
jmp
lds
test
sbb
lock
lahf
insb
ss
out
add
shrl
dec
or
popf
mov
insl
sbb
pop
mov
dec
mov
loope
xchg
inc
js
push
lea
repz
cld
idivl
jp
push
cmp
les
sbb
inc
jmp
add
shrb
jg
pop
dec
out
movsb
mov
aad
or
xchg
scas
dec
repz
pop
inc
test
mov
outsb
pop
xchg
mov
sub
mov
fistps
fwait
int
push
push
push
dec
int3
xchg
xlat
xchg
dec
fwait
cmp
mov
repz
mov
icebp
pushf
xchg
loop
insl
std
subb
ret
loopne
cs
cmp
xchg
ss
cltd
push
cmp
mov
inc
loop
fcmovb
mov
ja
add
shll
leave
jne
pop
cmpsl
push
push
test
ret
pop
push
mov
insb
aad
loope
insl
and
stos
lods
ds
popa
xchg
dec
push
cmpsl
in
fdiv
dec
in
xor
add
jb
dec
push
ret
loopne
aaa
jae
loope
cmp
jge
dec
push
push
adcl
sub
xchg
lret
sbb
or
pop
loopne
cmp
lods
fsubrl
and
push
add
ds
inc
mov
fisubrs
ret
aas
lods
mov
push
enter
or
ret
push
mov
movsl
lcall
sti
xor
andl
lcall
mov
cmp
js
or
loopne
sub
lahf
fs
cmp
in
cs
arpl
mov
mov
jg
xchg
and
mov
shl
inc
rclb
fnstcw
ds
push
sarb
stos
es
inc
iret
xor
dec
sar
ror
lds
icebp
xchg
imul
push
cmp
xchg
add
imul
xor
pop
mov
leave
test
push
aas
adc
rorl
pop
pop
xchg
and
jo
mov
mov
mov
and
popa
dec
push
fsubrl
push
aam
mov
push
push
aas
and
lret
push
cmpsl
cmpb
jle
pushf
addb
cmovs
enter
adc
je
das
push
push
fincstp
pop
incl
roll
xlat
mov
push
pusha
test
sub
dec
sti
dec
enter
xor
cwtl
adc
mov
into
out
sahf
dec
hlt
out
sbb
daa
inc
mov
dec
push
pop
enter
xor
movsl
enter
lret
popa
mov
xor
pop
bound
dec
shll
gs
mov
pop
subl
sub
mov
cwtl
push
sbb
fcmove
push
xor
inc
scas
dec
pop
push
jmp
xor
inc
imul
adc
inc
iret
bound
jbe
outsb
and
xchg
push
mov
push
mov
movsl
push
mov
xchg
ds
out
dec
mov
mov
ja
repnz
xorb
into
mov
push
cwtl
push
in
adc
jo
pop
jp
adc
pop
sub
sbb
aaa
imull
jb
movb
arpl
cs
mov
icebp
mull
fwait
cltd
adc
je
push
lret
movsb
aaa
dec
out
stc
int3
and
adc
jle
adc
shr
adc
test
sbb
inc
inc
or
cmc
mov
clc
push
mov
loopne
mov
stos
cmp
cltd
ds
lock
js
dec
sbb
lock
or
fwait
sub
int3
pop
es
bound
test
inc
jne
shll
inc
inc
imul
mov
shrb
out
in
lds
sub
lds
gs
mov
mov
cld
mov
std
leave
test
imul
or
jecxz
dec
pop
std
xchg
pop
stos
pop
loop
mov
popa
js
adc
sub
inc
xchg
pop
fisubrs
fists
or
xchg
divl
mov
cmp
push
scas
sub
push
cmp
push
push
pusha
xchg
cld
jbe
iret
popf
fisttpll
adc
jl
cld
add
jmp
mov
js
inc
aas
in
cmc
sbb
push
xor
or
subl
adc
cmc
ja
sbb
push
dec
call
jg
inc
sub
dec
add
loope
ror
enter
add
arpl
or
or
inc
lock
add
xor
daa
push
fstl
add
scas
or
push
outsb
add
scas
nop
pop
push
and
cmp
test
adc
pop
mov
les
sbb
fldt
dec
and
or
out
cmp
dec
xor
inc
sub
push
pop
stc
dec
fs
stc
and
hlt
roll
dec
add
test
mov
lods
je
dec
or
inc
je
or
sbb
cmpsl
jne
ss
fcompl
gs
fimuls
push
sub
in
jb
inc
mov
pop
push
jmp
movsl
inc
es
ljmp
mov
aas
lret
ficoml
movsl
mov
push
fs
leave
mull
pop
bound
sbb
cmpb
pop
lea
icebp
mov
dec
and
out
nop
dec
sbb
pop
mov
inc
aam
mov
sbb
fwait
orb
les
cmp
int3
sub
mov
out
sarb
scas
sub
repz
xor
xor
cmp
xchg
xchg
movb
mov
adc
aas
dec
inc
xor
cli
inc
cltd
and
outsb
push
mov
aad
push
mov
dec
int3
mov
and
sub
pop
imul
rcr
xchg
push
xchg
lock
dec
shll
int3
fcmovbe
outsl
mov
iret
popw
mov
sbb
xchg
push
or
mov
shlb
and
add
cmpl
repz
and
lret
lret
mov
icebp
ret
test
mov
ja
jbe
pop
mov
imul
repnz
sarl
mov
inc
in
movsl
adc
xchg
cmpl
cli
insl
mov
in
lock
rcr
rep
in
jns
adc
or
arpl
test
fdivrs
sbb
mov
mov
lock
push
pop
inc
push
rcrl
scas
cltd
shlb
cld
cli
lods
aad
push
pop
pushf
jge
cmp
movsb
gs
mov
sbb
loopne
ret
xchg
mov
gs
jns
in
jae
mov
repz
lock
lock
repnz
repz
nop
xor
sbb
xchg
mov
cmpsb
jae
sbb
out
sbb
add
test
lcall
xchg
sub
das
nop
pop
lock
imul
cmpsl
dec
mov
or
int
lea
pop
aaa
pushf
push
jns
mov
cmp
clc
push
jnp
sbbl
test
pop
je
mul
mov
jmp
xor
pop
lcall
xor
je
xchg
inc
or
mov
mulb
mov
mov
xor
add
lods
mov
cli
adc
pop
jge
add
sbb
ss
pop
and
push
and
xchg
or
push
insb
dec
leave
pop
add
mov
push
ficoms
cmpsb
in
push
jecxz
mov
push
mov
jo
mov
mov
mov
or
outsb
mov
lock
xchg
aas
mov
data16
jne
xchg
jge
add
xor
mov
mov
lret
loope
js
cs
push
aas
les
adc
lret
jmp
lcall
mov
insl
xor
adc
dec
aas
in
lea
lock
lds
lds
imul
mov
cmp
ss
addr16
es
add
stos
push
dec
mov
xor
in
sub
sahf
ret
and
lahf
notb
enter
pop
xchg
test
daa
lcall
jl
or
out
fisttpll
xor
or
pusha
jmp
pushf
push
push
push
fcoml
bnd
jge
sti
dec
imul
sbb
dec
cmp
add
and
inc
add
push
push
xchg
mov
xchg
stc
lods
inc
shll
jp
xchg
and
push
roll
xchg
push
mov
mov
xchg
adc
add
ret
out
jmp
jl
int3
pop
int3
es
shl
mov
shl
imul
mov
fwait
addr16
lock
or
popa
mov
jge
jo
mov
scas
push
iret
dec
fisubrl
cli
and
dec
mov
mov
inc
sbb
stos
inc
icebp
rolb
lods
inc
pop
xlat
ja
aad
loope
mov
sub
mov
pop
push
push
or
jae
dec
sub
xor
sub
xchg
xor
pop
mov
dec
movsb
jge
outsb
xchg
inc
fdivrs
je
nop
into
sub
push
and
or
push
outsl
ret
pop
and
lcall
ljmp
cmp
fidivs
jns
and
hlt
mov
dec
aaa
andps
imul
imul
sbbb
fdivl
cwtl
dec
popf
popf
pop
xchg
inc
in
aam
sub
xchg
pop
mov
cmc
mov
scas
sbb
lret
pop
inc
pop
in
push
rol
arpl
add
add
mov
out
pop
fxch
insl
pop
dec
popf
inc
sbb
jne
dec
lahf
pushf
push
out
fisubrs
xor
jnp
mov
and
jno
mov
loopne
sbb
push
sahf
call
loop
les
fdivl
in
fwait
sub
ja
iret
xor
les
mov
push
inc
mov
aas
xchg
out
and
arpl
inc
jbe
imul
fwait
cltd
lods
inc
movsl
test
outsl
xor
andb
jae
push
int
int3
sbb
scas
adc
cwtl
sub
mov
and
or
cli
jecxz
in
add
mov
and
test
cmpsl
cmc
jns
inc
xchg
mov
jl
xchg
mov
mov
sbb
add
cli
rorl
xchg
mov
sti
jno
or
push
mov
adc
test
pop
fcmovne
shll
xchg
sbb
dec
repnz
leave
pop
dec
inc
jecxz
jge
jne
mov
pop
movsb
lret
jp
fsub
sub
jbe
sbb
mov
push
jne
push
lcall
sbb
daa
ljmp
sahf
neg
mov
lods
jb
scas
cmp
pop
mov
pop
inc
push
jo
jne
shl
or
sbb
enterw
notb
mov
xor
outsl
addr16
loopne
mov
mov
cld
xor
test
test
add
shrl
cmpsl
iret
adcb
gs
push
sbb
dec
dec
in
out
testl
xchg
and
jge
fsubs
lea
cmp
push
nop
mov
mov
insl
mov
outsb
xor
cmp
sub
cmpsb
inc
insb
xchg
xor
dec
paddb
xchg
and
stos
mov
cli
cmp
scas
mov
sub
jae
adc
push
xor
xchg
push
pop
mov
jo
sub
sub
dec
lods
and
pop
aam
and
leave
mov
inc
jle
insl
lahf
movsl
aam
mov
pop
clc
push
loope
cli
call
pop
pusha
sub
dec
mov
pusha
sbb
pusha
fmuls
stc
ret
lret
dec
cmpsb
jbe
ret
fwait
sub
repz
xor
pop
pop
cld
cmpsb
adcb
lret
lcall
mov
outsb
clc
pop
or
call
sbb
negl
xor
cmpsl
arpl
xlat
scas
jnp
jnp
mov
sub
xor
and
test
xchg
xlat
sbb
push
mov
xchg
out
outsb
imul
mov
call
das
notl
add
pop
pop
and
push
or
push
inc
inc
adcb
ds
inc
fiadds
rorl
sbb
cmp
xchg
sbb
call
mov
cs
push
dec
es
mov
imul
and
mov
inc
pop
out
int3
pop
push
fdivrs
das
add
push
push
mov
in
push
sti
mov
jbe
sbb
ljmp
and
and
push
shrl
and
jl
std
cmp
shrb
fcoml
sub
adc
scas
int3
mov
and
roll
pop
sbb
inc
aaa
cmp
lds
lock
adcl
sti
cltd
ficoml
lret
test
mov
pop
pop
inc
jge
clc
push
cltd
shlb
add
sbb
icebp
pusha
inc
jne
cmp
mov
add
arpl
popa
js
mov
int
loop
add
test
mov
cmpsl
add
and
insb
popl
or
sbb
cli
inc
sub
lahf
sub
adc
jo
and
movsl
leave
adc
adc
cld
ret
sub
addr16
dec
xchg
out
adc
mov
shl
les
push
push
jmp
fsubrs
xor
sbb
mov
sub
pop
movsl
popf
roll
loopne
orb
cli
std
xor
add
out
shrl
or
fcomps
push
push
jne
rolb
nop
cmp
fnstcw
rolb
pop
pushf
ljmp
mov
cwtl
rclb
clc
add
xor
dec
push
pushl
mov
imul
lock
outsb
xchg
mov
fistl
adc
pop
xor
rorb
jbe
out
and
out
arpl
push
and
and
fwait
push
dec
imul
shl
idiv
das
movsl
jno,pn
mov
mov
cmp
inc
pop
mov
jo
jmp
jmp
add
les
repz
add
fldt
fwait
int3
sub
dec
pop
jae
movsl
lods
out
jb
test
jmp
adc
mov
lahf
outsb
lahf
test
jae
adc
or
ret
push
inc
adc
mov
inc
mov
mov
jg
and
jo
push
gs
scas
test
stos
rorb
lea
movsb
or
sub
jp
dec
fwait
jecxz
or
insl
lret
jge
repnz
std
incb
pop
test
loope
and
and
in
jle
inc
mov
mov
std
mov
repnz
sti
ja
sarb
iret
mov
adc
pushf
cmpsl
cld
in
in
shr
jne
dec
sub
ja
cmc
mov
push
sbb
push
and
idivl
add
icebp
mov
aam
mov
sub
add
push
inc
or
ficompl
stos
in
and
addb
imul
xor
sub
cwtl
cmpb
loope
mov
aas
mov
icebp
sbb
adc
js
out
add
and
movb
neg
xorb
test
into
pop
adc
ja
cmpsl
das
mov
cli
push
inc
outsb
pop
mov
dec
outsb
cmp
add
xlat
push
les
inc
xchg
and
dec
inc
push
sbb
int3
adc
lea
sbb
cmpsl
daa
and
fwait
inc
push
jns,pt
or
lret
jmp
mov
mov
fcoms
or
jg
mov
push
nop
lret
sti
mov
fstl
out
or
in
add
stos
mov
les
mov
in
xor
mov
adc
push
xor
lock
loopne
cmc
into
add
lods
mov
add
dec
xchg
faddp
mov
push
or
pop
bound
push
lods
gs
pop
enter
cmp
repz
ljmp
fidivl
pop
sbb
xchg
sub
jl
fsubrl
push
out
cs
add
std
loopne
int3
and
gs
sbb
pop
incl
iret
adc
mov
in
pushf
daa
stc
fs
mov
or
xchg
lock
or
hlt
sub
call
aaa
loopne
loopne
fcomp
das
pop
lret
fmull
jae
cmp
cmp
cmp
sbb
or
into
das
rclb
into
and
loope
xchg
in
mov
xor
cwtl
adc
aas
adc
cmp
xor
sbbl
dec
cld
mov
rcl
popa
push
cmpsl
push
add
sti
jmp
int
inc
lret
jns
dec
int3
jmp
sbb
shrl
mov
or
lea
sbb
adc
sbb
test
insl
inc
jecxz
mov
xlat
add
ret
mov
into
sbb
jmp
dec
es
xor
int3
in
adcl
pushf
add
in
cmc
les
sub
mov
in
psubw
adc
ljmp
jo
enter
pop
test
mov
mov
mov
sub
leave
cmc
shrl
lea
mov
pop
push
or
cwtl
and
mov
in
addr16
or
xchg
pop
mov
sub
aaa
dec
mov
stos
jmp
jge
adc
mov
push
mov
and
outsl
sbb
fisubrs
arpl
sbb
push
inc
or
fdivrp
sub
jl
fsubrs
incb
lock
push
jl
xor
inc
adc
in
in
stc
push
gs
cmp
inc
and
push
mov
mov
jmp
jge
mov
inc
orl
sub
or
arpl
imul
arpl
mov
inc
andl
outsl
sbb
js
lds
push
in
and
inc
sub
out
jbe
xor
std
stos
xchg
xor
adc
jnp
repnz
inc
ds
jmp
cmp
adc
pop
lds
aam
or
in
cmp
lods
rorl
xor
cmp
popa
shrl
add
jae
mulb
xchg
pushf
mov
cmp
jbe
insl
out
inc
fsubrs
popa
add
hlt
dec
out
js
adc
jmp
idivl
jne
sub
ds
aad
into
xchg
mov
jle
mov
aaa
repz
or
xchg
sbb
fs
pop
xlat
push
push
loopne
cld
jge
call
push
push
push
daa
xchg
cmp
xchg
ret
adc
dec
add
int3
push
or
mov
call
mov
stc
ret
je
push
push
xchg
fildl
ljmp
sbb
mov
add
mov
push
push
test
push
jmp
repz
test
ret
je
mov
sub
loop
or
andb
lock
call
adc
sarb
sbb
in
lods
adc
pop
fmul
dec
stos
sbb
ss
call
inc
mov
mov
jp
mov
popf
cmp
ret
cmp
loope
jg
sahf
and
inc
xlat
mov
adc
push
gs
xchg
xor
push
cmc
xor
jb
adc
mov
push
enter
rorl
sbb
dec
adc
or
xlat
test
inc
pop
push
adc
or
push
sar
fwait
mov
ja
sub
in
pop
push
es
cli
lret
movsl
sub
and
sub
inc
les
pop
or
mov
fcmovne
dec
test
jae
out
xor
and
out
mov
cmpsb
repnz
out
add
xchg
cmpsb
sbb
sub
je
jg
xchg
xchg
lods
pop
ds
outsb
cld
or
cs
shrb
jno
xchg
test
loope
lock
dec
dec
jmp
dec
stos
xchg
nop
xchg
cmp
pop
mov
sub
jl
adc
dec
xchg
rclb
xchg
insl
addb
inc
stos
das
pminub
movsb
mov
jp
stos
adc
mov
sub
test
pushf
mov
nop
imul
sbb
inc
cmp
sub
cmp
ljmp
jnp
push
jp
cmpb
cwtl
push
and
push
xor
pop
insb
lock
in
shl
sub
dec
xchg
sub
es
nop
lret
leave
sub
and
inc
sbb
pop
pop
add
les
mov
or
and
cmp
ss
out
std
shll
cmp
and
popf
sbb
int3
mov
popf
jmp
jge
jnp
add
or
push
dec
cmp
lcall
add
ss
icebp
jbe
mov
push
test
loope
dec
or
int
dec
adc
sub
and
sbb
cmp
js
cmpsl
inc
push
push
add
enter
in
rcll
cli
ds
or
add
insb
jmp
mov
lds
mov
inc
xchg
cmpsb
shl
xchg
jecxz
mov
loop
dec
jmp
xchg
pop
inc
xor
pop
mov
icebp
and
sub
orb
mov
ljmp
stos
out
jnp
rclb
cmp
mov
enter
push
xchg
outsb
roll
xchg
loopne
sub
cmpsb
push
dec
add
mov
stos
pop
push
mov
mov
cmp
imul
inc
subl
std
mov
inc
pop
push
adc
push
fdivr
shlb
and
lods
jmp
shrb
pop
dec
rcrl
fstps
fdivl
addr16
je
and
addr16
inc
nop
sub
loop
jecxz
cld
stos
xor
mov
out
push
mov
roll
xor
add
aad
sub
gs
fsts
sbb
cwtl
sub
lea
cmp
iret
sbb
mul
push
add
fnstsw
and
xor
mov
jg
cmp
cli
pop
leave
sub
inc
jcxz
sub
xchg
cmp
sbb
movsb
fwait
push
jnp
shll
outsl
aaa
nop
repz
rcrl
ja
es
sbb
div
mov
cli
inc
cmp
and
fsubrs
dec
inc
or
test
test
andb
push
subb
pop
push
pop
arpl
inc
xchg
xchg
test
or
gs
xchg
pop
scas
push
or
imul
outsl
inc
sub
decl
ja
and
xchg
int
mov
add
jns
loopne
mov
jae
mov
fistpll
pop
scas
in
jns
cmp
aas
popa
add
push
mov
mov
mov
insl
lret
cmpsl
jecxz
movl
movsl
clc
ret
or
xor
inc
jnp
lret
sub
fistps
push
lret
fcmovnbe
lret
shlb
loopne
push
push
cmp
sub
inc
aam
adc
inc
lea
jp
scas
adc
fdivl
mov
insl
imul
push
rclb
or
out
in
fidivrs
out
fstl
fmull
lea
ljmp
jo
je
mov
sbbb
fdiv
fcmovnbe
dec
fisttpl
enter
mov
adcb
pop
xchg
dec
mov
test
mov
hlt
lahf
in
xchg
xchg
xor
adc
and
sub
aas
and
lods
xor
pushf
mov
mov
popa
pop
flds
into
out
movsb
repz
pushf
xchg
or
rol
inc
pop
leave
inc
inc
in
push
or
dec
mov
insw
inc
mov
push
pop
push
cltd
jmp
add
jb
pushl
jecxz
loop
subb
xor
push
xchg
fcomps
or
sub
mov
out
loopne
fcompl
lea
jge
lods
imul
ficoml
je
cmpsl
dec
pop
push
insb
jne
push
mov
xchg
popf
mov
les
aaa
jns
bound
insl
cmp
push
push
cmpsl
ds
in
outsl
pop
mov
pushf
loopne
mov
outsb
rcl
andl
jnp
hlt
dec
mov
sub
jmp
imul
lcall
out
dec
fwait
nop
pop
add
popf
cmc
pushf
es
mov
int3
sbb
cltd
js
nop
subb
stos
inc
movsb
dec
in
xchg
repz
loopne
scas
cmp
lret
pop
filds
movb
repz
std
shrl
pop
repz
sbb
or
xchg
pop
orl
je
mull
add
xchg
sub
lahf
shrl
nop
leave
jne
lret
sbb
mov
xor
add
jae
dec
rcll
push
pop
or
add
inc
sbb
jmp
or
adc
jno
push
inc
js
xchg
lea
stc
lods
insb
les
mov
loope
pop
imul
out
popa
mov
call
test
fwait
cmc
popa
push
leave
push
imul
push
insb
nop
inc
sbb
or
adc
or
xchg
inc
xchg
and
xchg
mov
rcrl
fadds
lods
xchg
clc
scas
jo
push
xor
sbb
mov
decl
loop
xchg
adc
mov
inc
jl
cltd
testb
xor
sub
lea
mov
cmpsl
popa
das
mov
test
and
mov
jl
loop
and
leave
fisttps
int
sti
fneni(8087
stos
jno
pop
adcl
and
xchg
testl
mov
lret
and
out
in
xor
fistpll
jmp
mov
ror
loopne
cmp
jbe
in
xchg
and
dec
adc
push
ljmp
mov
fldcw
sub
pop
je,pt
into
or
sbb
aam
insb
stos
negl
push
pop
push
or
inc
in
je
enter
or
xor
int
pop
pcmpeqb
sub
cwtl
push
rcrb
iret
dec
jbe
xchg
xchg
xchg
movsl
and
cmc
mov
dec
cmc
xor
mov
icebp
add
add
test
mov
loopne
std
inc
js
sbb
jno
incb
pop
adc
push
jge
movsb
push
mov
pushf
dec
in
jo
out
cmc
ret
mov
or
sahf
push
test
cld
add
pop
jbe
jb
push
lds
cmpsb
fs
inc
sub
sub
fcompl
ds
into
push
es
test
cmpsl
cltd
jns
int
pop
arpl
mov
pop
dec
cmpl
out
pop
adc
insb
mov
inc
inc
inc
addr16
mov
add
test
and
stc
jmp
sub
add
fsqrt
enter
dec
sbb
sub
or
or
orl
jmp
jne
cmp
pop
sub
pop
cmp
loop
iret
push
pop
mov
iret
jne
jo
pop
dec
xor
inc
cli
inc
gs
push
int3
dec
xor
mov
sarb
xor
push
and
jg
imul
jmp
sbb
inc
inc
add
js
mov
xor
loopne
mov
cmp
inc
dec
mov
adc
leave
adc
test
das
mov
push
mov
aam
ljmp
clc
sub
add
clc
dec
and
dec
mov
sub
pop
adc
xlat
lea
jle
popf
lahf
mov
pop
repz
inc
stos
dec
xchg
data16
out
stos
fnstsw
call
negl
sbb
in
fldcw
int
add
cmp
pop
scas
or
mov
nop
inc
test
mov
das
pop
cmp
sub
mov
jns
mov
xor
or
pusha
adc
dec
outsb
jmp
in
das
mov
leave
or
arpl
mov
repnz
das
outsl
int
or
add
ret
inc
out
shl
inc
inc
add
pop
daa
mov
fnstenv
mov
mov
loope
mov
or
xchg
inc
test
sub
clc
xlat
xchg
and
pop
out
pop
loope
fidivrs
mov
iret
and
repz
lahf
mov
pop
push
and
and
imul
adc
mov
sub
dec
int3
sbb
push
jmp
and
out
cmpsl
arpl
pop
adc
fwait
push
dec
aas
xor
stos
push
inc
aad
or
je
rcrb
daa
out
pop
xchg
mov
stc
jge
repnz
fdivl
cmp
scas
mov
xor
testb
rcrl
loop
stos
subb
pop
or
cld
test
and
mov
std
sbb
aaa
cs
ljmp
mov
xchg
push
pop
repz
inc
movsl
pop
push
cmp
jge
pop
aas
mov
sarb
cmp
add
and
imul
int3
add
and
push
std
push
leave
fs
jmp
subl
cmp
and
jbe
movsl
sub
mov
js
test
mov
add
sahf
inc
push
lret
and
in
fists
loop
pop
fcmovnbe
pop
in
sub
sbb
sbb
dec
cs
rcll
scas
inc
cmp
xchg
in
or
adc
mov
and
sbb
leave
jg
fisubl
adc
int3
sarl
shrl
adc
faddl
mov
adc
inc
pop
js
sub
orb
jg
test
stos
dec
cld
sub
popf
fwait
sub
and
mov
pop
cmp
cwtl
pop
sub
imul
pop
loop
nop
add
pusha
dec
push
nop
push
in
loopne
lret
sub
xor
dec
rcrl
sbb
std
mov
cmpsb
fsubl
or
rorb
cmpsl
sarl
push
or
mov
pop
rorb
lret
nop
xchg
mov
std
pop
test
or
movsb
stos
repnz
cltd
and
sub
xchg
mov
test
mov
dec
sub
scas
pop
and
scas
daa
dec
icebp
jmp
imul
pusha
mov
cmp
push
add
xchg
mov
inc
vxorps
stos
pop
add
sbb
add
adc
ror
sub
lds
push
aaa
push
int3
xchg
test
adc
orb
cli
mov
sbb
arpl
inc
les
sbb
lret
cmp
jne
xchg
push
ljmp
push
icebp
repnz
scas
add
ret
and
sub
pop
cltd
adc
and
in
xor
popf
mov
mov
mov
unpckhps
add
or
imul
jae
mov
xor
sti
ss
fimuls
je
movsb
nop
sub
xchg
jns
add
bound
mov
sbb
shld
and
rclb
icebp
xchg
add
test
push
pop
jecxz
repnz
jle
iret
add
cmpb
sub
xchg
jmp
xor
jno
cmp
sbb
test
and
lahf
data16
xor
mov
adc
shrb
loopne
pop
call
push
cli
dec
fbstp
adc
fcomps
or
call
inc
or
jns
mov
jae
mov
jmp
sub
mov
cmp
add
xor
stos
push
mov
add
cld
push
or
and
fstl
das
mov
into
add
gs
fistpll
inc
push
pushf
aaa
jmp
mov
test
jp
lock
jl
jmp
fistpl
inc
mov
cmp
or
ljmp
cmpsl
out
fcmove
jae
inc
mov
ss
mov
test
pop
jge
and
push
pop
xchg
movsb
test
xor
pop
notb
aad
mov
out
mov
mov
mov
out
cmpsb
xchg
mov
mov
add
ror
std
loopne
push
push
mov
pop
imull
lds
jne
lret
mov
inc
inc
mov
mov
xor
sbb
xchg
xchg
imul
sub
adc
lret
in
pop
or
or
inc
flds
mov
push
movsb
in
xchg
add
pop
cmp
cmp
lds
mov
adc
aaa
test
pop
and
pop
aam
mov
insl
fcmovu
jle
adc
xor
out
lds
cmpsl
xor
lods
negl
lret
pop
rcrb
clc
sbb
inc
jle
jmp
or
loopne,pt
and
push
pop
adc
aaa
clc
sbb
stos
in
mov
out
clc
test
fsubrs
pop
into
mov
pop
insl
push
js
in
mov
jb
fcomi
mov
jno
sub
pop
xlat
rcll
fiaddl
outsb
inc
es
jns
mov
iret
jbe
cmpsl
and
xor
sub
dec
int
cld
xchg
cmp
int3
popa
lret
mov
loopne
lret
cmp
fcmovnb
test
fbld
xchg
sub
into
and
in
into
pop
xchg
add
push
in
and
les
mov
dec
push
pop
dec
sub
roll
add
in
loopne
push
pop
xlat
mov
inc
movsb
xlat
push
scas
ds
xchg
lcall
adc
bound
or
fnstsw
xor
pop
mov
das
push
fimull
cmp
ds
imul
dec
add
cmp
int
mov
das
xchg
adc
xor
pop
pusha
push
andl
mov
ret
dec
and
lock
sbb
call
imul
fiaddl
adcl
cmp
in
dec
mov
mov
add
jmp
xchg
pop
xor
cmp
subb
pop
test
mov
mov
mov
cmp
je
jo
pop
lock
cmp
pusha
push
inc
xchg
jp
mov
lea
add
xchg
rol
pop
inc
std
mov
repnz
outsl
cmp
shll
jp
xchg
mov
rorb
andb
fsubrl
fadds
push
fistps
int
lcall
xlat
popa
cld
mov
cmp
es
add
mov
sbb
jge
xchg
fnstenv
cli
jnp
cmp
cltd
test
lock
mov
shrb
stc
or
cld
aas
loope
fistps
rorl
mov
lds
or
pop
inc
pop
fs
inc
rsqrtps
push
cmp
and
cmp
test
mov
xchg
cmpsl
pop
pop
push
arpl
add
mov
and
lods
mov
push
ds
scas
movsb
add
jae
inc
aam
decb
xchg
xor
and
adc
das
sti
sub
insl
icebp
gs
sub
jg
sbb
ret
mov
jb
mov
xor
int3
test
and
insl
push
les
sbb
pop
ficompl
pop
ret
sub
jp
rorb
sbb
ss
push
and
xchg
adc
xlat
fsubs
inc
cmp
jge
dec
roll
and
sbb
push
jns
mov
sub
in
bound
call
inc
xor
mov
fists
push
dec
cmp
adc
xor
inc
xchg
cmpsb
mov
fwait
pop
adc
xor
inc
out
ficompl
out
cmc
mov
mov
jg
popa
xor
loop
mov
sbb
and
sub
nop
shrb
jl
and
loopne
mov
lret
es
and
mov
pop
mov
data16
lcall
jmp
adc
xchg
sbb
push
cmp
inc
lea
ja
inc
in
sub
test
out
sub
repnz
and
inc
pop
inc
mov
gs
adcb
lods
ja
mov
sti
push
imul
das
imul
pop
daa
in
sbb
test
aas
sub
sub
add
xor
mov
pop
xchg
ss
loope
sarl
mov
inc
aad
imul
mov
xor
ljmp
sub
in
push
popa
dec
in
cs
sarb
jbe
inc
inc
mov
jmp
mov
lcall
xchg
pop
xchg
add
outsl
mov
lret
lds
mov
add
sub
push
mov
cld
pop
testb
loopne
lahf
popf
ss
bound
or
int
mov
hlt
decl
xorb
aaa
pop
xchg
outsb
lods
aam
out
or
dec
jns
jl
in
ret
jge
jb
aaa
xchg
repz
jmp
rorb
push
mull
dec
repz
dec
ret
pushf
insb
repnz
push
cmp
mov
sub
sub
call
fidivl
pop
movsl
jmp
ja
mov
push
fcompl
add
pop
sbb
adc
popa
lods
mov
lods
mov
jg
pusha
aas
je
inc
lods
lret
mov
inc
into
or
add
fmuls
inc
and
test
mov
xchg
fistl
xchg
pop
add
cmp
pop
call
inc
adc
mov
iret
lahf
mov
mov
jp
add
shl
xor
dec
xorb
adc
fnstsw
jecxz
mov
outsb
test
xor
and
sub
inc
jbe
dec
jb
test
mov
jmp
jo
and
adcb
jne
addl
cltd
lret
es
nop
mov
push
mov
or
xor
sbb
inc
sbb
ret
cmp
or
and
lret
popf
pop
ds
cmp
fisubrs
mov
test
test
mov
out
cld
arpl
sbb
pusha
sub
and
mov
scas
dec
cwtl
mov
loope
adc
leave
stc
cmc
js
pop
push
cwtl
xlat
adc
sbbb
cld
add
mov
mov
mov
add
scas
push
in
pop
gs
add
movsb
inc
inc
jo
push
xor
mov
in
jmp
mov
out
gs
leave
mov
pop
add
jg
xchg
sbbl
dec
mov
iret
out
incb
data16
fs
cltd
mov
ljmp
jbe
xor
pop
fldt
pop
pushf
and
adcb
sahf
cmc
lea
jbe
or
arpl
jmp
imul
dec
popf
lds
sar
adc
jbe
add
arpl
push
mov
sbb
ljmp
movsl
adc
cmp
dec
fs
cmp
pop
es
dec
mov
sbb
sahf
push
orl
pop
call
cs
lret
adc
outsb
and
pusha
fiadds
ret
xchg
and
mov
loopne
scas
jg
xchg
jno
addr16
stc
jle
pop
outsb
fcomip
movsl
leave
cmp
popf
ss
orb
inc
xchg
mov
loop
cmp
test
add
mov
lahf
pop
sub
xchg
mov
adc
rcrb
xchg
movl
jecxz
mov
sbb
std
push
lret
pop
lahf
ljmp
fmulp
pop
push
mov
xchg
in
push
xchg
ret
add
or
mov
add
push
sub
hlt
adc
std
jns
add
int
adc
push
pop
dec
scas
sub
push
out
call
add
mov
jp
push
in
xor
scas
jo
xchg
fcomps
jne
das
mov
dec
push
mov
rorl
pop
lds
mov
lock
sbb
test
xchg
mov
test
cmp
xlat
loope
out
jl
add
adc
sbb
mov
inc
jmp
mov
cs
int
ret
lret
dec
addb
push
icebp
jg
mov
push
jp
sbb
xor
dec
lahf
pop
rorl
outsl
rclb
lret
mov
push
or
ja
xor
add
mull
push
mov
imul
lret
mov
sbbl
shl
hlt
je
shll
push
je
and
enter
add
sbb
xor
push
sbb
popa
cmp
imul
inc
sbb
xor
dec
inc
jecxz
loop
pop
pusha
frstor
and
push
outsb
pop
sbb
inc
bound
mov
outsb
std
adc
inc
aaa
fwait
adc
inc
jae
jb
xor
outsb
sbb
fsub
push
add
jle
andl
xor
mov
mov
push
scas
dec
sub
insl
sub
arpl
jecxz
mov
push
sahf
fdivrs
fwait
push
leave
xchg
mov
int
inc
pushf
push
decl
insl
nop
or
dec
fcmovbe
aad
aam
loopne
stos
pop
loop
int
cli
clc
adc
cmp
add
mov
lods
mov
cmpsl
iret
jg
push
call
test
scas
mov
insl
inc
dec
mov
sbb
icebp
lss
push
sbb
ljmp
mov
xor
out
in
fwait
jl
dec
roll
cmpsl
mov
jbe
fsubrl
leave
and
xchg
iret
mov
xor
or
js
dec
outsl
sbbl
int
stos
es
jne
lret
xchg
scas
dec
or
testl
int
out
dec
orb
sbb
add
and
out
rolb
or
xorl
dec
add
cld
mov
sub
push
sbb
fistl
in
test
and
call
mov
rcll
cmp
sub
inc
mov
mov
ret
repnz
mov
xchg
pop
outsl
outsl
test
pop
or
inc
ljmp
mov
lahf
or
push
fwait
movb
dec
iret
outsl
movsb
dec
pusha
test
sbb
data16
cmc
push
xor
mov
or
jne
imul
out
xchg
dec
mov
notb
xchg
sti
fcomps
popf
inc
mov
jne
inc
lods
mov
sbb
add
fcomps
push
sahf
add
in
inc
test
leave
gs
or
insl
pop
cmp
mov
addr16
fwait
cmc
test
arpl
cld
mov
xor
pop
jns
push
mov
jb
out
xlat
cmc
jno
jns
repnz
sbb
and
xchg
cmc
je
push
sub
push
sbb
outsl
dec
lret
xor
cmpsb
pop
cwtl
sub
mov
pop
inc
cmp
test
jb
sub
xor
data16
cmp
mov
dec
cmp
or
and
pop
mov
out
int3
inc
imul
xlat
ret
mov
add
and
scas
lahf
pop
js
loop
mov
mov
in
leave
inc
push
pop
aas
push
mov
mov
insb
sbb
xor
shrl
pop
jp
aam
sub
jbe
fmull
ficompl
imul
push
mov
cmp
ret
push
push
add
push
mov
scas
or
jns
mov
test
ljmp
cmp
das
orl
push
cmp
movsl
mov
jl
push
adc
nop
xor
or
pop
inc
loopne
gs
int3
fwait
pop
inc
cmp
test
and
cmpsb
xor
inc
insb
cmp
jo
jo
inc
les
sbb
xor
mov
push
push
loop
push
leave
imul
dec
out
xor
aam
or
fidivrs
enter
jp
sbb
aas
repnz
cli
push
out
dec
sub
sbb
push
push
in
push
add
adc
rcll
pusha
test
gs
add
cmpsb
xor
pop
lods
cmp
push
and
mov
jns
mov
pop
mov
jp
xchg
in
mov
scas
cmp
rorl
and
popa
mov
icebp
outsb
mov
pop
xor
fisubrl
or
push
ja
xor
ja
fcmovnbe
ror
mov
jno
dec
or
mov
inc
pop
fldenv
call
and
ljmp
or
cmp
rcll
dec
xor
fcomi
jnp
dec
aaa
mov
fwait
sbb
sub
test
adc
xchg
inc
inc
inc
cmpsl
in
pushf
cmp
mov
jbe
ret
pusha
mov
icebp
out
lock
jl
cmp
push
mov
lcall
adc
mov
cvtpi2ps
mov
or
sahf
mov
fldl
scas
sub
cwtl
xor
mov
repnz
sub
xchg
leave
mov
mov
lods
cmp
push
cltd
push
loop
dec
xor
dec
jb
cwtl
call
cmp
fadds
aaa
je
adc
out
pop
or
sbb
jecxz
cmpsl
mov
sub
in
and
nop
mov
xchg
inc
cltd
leave
loopne
or
sahf
incb
add
aaa
add
dec
or
dec
loopne
repnz
mov
mov
fstpt
aad
inc
adc
int
sbb
popf
push
mov
mov
fcomps
xchg
aad
push
out
mov
add
jns
idiv
arpl
push
dec
cwtl
push
popf
push
or
insl
dec
sti
or
pop
mov
push
adc
adc
mov
xor
pop
xor
xchg
xor
test
fmull
adc
inc
ja
push
or
inc
int
fldl
mov
or
aad
aaa
subl
divl
ret
mov
mov
sbb
jae
inc
or
jnp
pop
mov
and
test
cmp
jne
popa
fwait
mov
mov
xlat
pop
loope
pop
jle
xchg
pop
adc
xchg
xor
lret
mov
int
mov
mov
push
xchg
jecxz
bound
jg
mov
adcl
push
scas
xchg
data16
dec
dec
cmpsb
test
inc
inc
into
insb
mov
popaw
setne
xor
dec
jge
mov
or
das
jno
mov
xchg
int3
sub
jecxz
sahf
dec
jecxz
cmc
push
scas
push
int3
sbb
in
jp
lods
mov
sub
jg
lret
out
mov
pusha
adc
stc
push
and
hlt
repnz
repz
test
aam
adc
clc
xchg
adc
lcall
mov
adc
jmp
sub
mov
imul
mov
jp
jge
loop
testb
mull
add
and
test
lds
or
in
pop
inc
and
mov
sub
js
and
add
stos
idivl
out
push
jns
xor
ret
cmp
js
fsubrs
dec
push
jl
mov
push
sti
nop
call
push
jle
sbb
lcall
scas
dec
jl
adc
mov
scas
jecxz
outsl
lods
jbe
sub
decl
pop
push
and
sub
loopne
xor
in
loopne
push
sti
mov
mov
and
inc
jge
jl
icebp
cmpsl
cmpsb
in
out
or
add
js
orb
mov
xchg
add
xchg
in
or
rcl
dec
sbb
inc
aad
push
mov
jae
popf
jae
fcmovne
rorb
or
xor
add
xor
dec
adc
shlb
iret
in
sbb
and
mov
and
sub
inc
shll
pop
into
sbb
sbb
dec
andl
add
inc
lahf
sarb
jb
jae
sahf
mov
pop
outsl
lods
insl
scas
ds
xlat
das
jbe
ds
xchg
icebp
les
push
push
inc
orb
cmp
inc
mulb
lods
mov
dec
inc
in
xor
push
call
int
adc
jge
rolb
or
xorb
scas
pop
add
fists
mov
rol
jno
inc
mov
inc
pop
mov
and
mov
test
mov
xor
xchg
dec
add
xor
pop
xor
sbb
xchg
mov
xchg
dec
cmpsb
jno
rorl
adc
imul
mov
cmp
ds
imulb
mov
sti
lcall
or
fisttps
and
fdiv
clc
cmp
and
sub
mov
orl
loop
push
and
andb
lcall
xchg
adc
add
mov
jl
mov
push
enter
and
sub
pop
inc
xor
jbe
enter
pop
xor
add
das
es
in
aaa
sub
sbb
mov
add
sbb
inc
cmpb
pop
call
insb
jecxz
add
jp
in
jo
arpl
insb
bound
dec
cltd
dec
pop
in
and
dec
fcmovbe
push
sub
ret
std
orl
cmp
inc
cli
lahf
imul
push
push
pop
push
and
and
mov
sbb
jge
jbe
xorb
and
gs
popa
or
xlat
mov
jb
cmp
lds
cltd
mov
push
pop
mov
pop
mov
pop
orl
jb
aad
xor
cmp
outsl
pop
ja
jp
loope
pusha
out
sub
clc
dec
rcrl
jge
sbb
scas
scas
or
rorl
pop
mov
js
js
mov
lods
roll
rcrl
xor
scas
mov
in
add
xchg
mov
testl
mov
int3
cmpsl
pop
xchg
aam
scas
dec
jae
add
xchg
cmp
loopne
imul
cmp
pop
sub
int3
mov
jge
sbb
mov
pop
pop
pop
push
or
xchg
xor
jae
aad
ret
mov
int3
push
sbb
test
mov
out
fcomip
hlt
add
arpl
cmp
xor
cmc
and
sbb
in
xor
and
or
pusha
sub
popf
adc
cmpsb
push
pushf
xor
lods
test
sti
pop
and
pushf
push
push
out
mov
or
xor
cmp
mov
adc
mov
sti
cmc
lea
and
dec
test
lcall
imul
add
fisubs
mov
into
mov
xchg
jp
scas
ret
dec
insl
sbb
mov
lock
test
fwait
cmp
fwait
push
xor
adc
jecxz
jne
stos
ret
cs
ret
jae
jno
faddl
push
push
ja
inc
nop
adc
sub
xor
push
movsb
jns
mov
lcall
pop
or
inc
mov
or
aad
xchg
fcmovnbe
mov
lret
cmpsl
mov
out
nop
add
movsb
or
movsb
je
inc
inc
out
mov
jnp
jns
pushf
scas
mov
rorb
mov
lcall
imul
add
out
cmp
push
mov
ror
cmpsl
mov
dec
cmp
mov
mov
mov
add
xchg
mov
cmc
pop
push
or
fstps
xchg
sub
cmp
jg
cld
mov
loop
notb
repz
xchg
fsts
test
push
or
adc
in
sbb
xchg
xchg
insl
cmc
pusha
and
lret
mov
movsb
jns
jl
lcall
push
test
cli
mov
xchg
jmp
mov
jno
movsb
dec
inc
push
pusha
repnz
icebp
sub
femms
mov
push
xor
lock
mov
push
pop
jmp
in
xor
xchg
xchg
or
loop
inc
xchg
insb
les
xchg
data16
loope
add
popf
testb
inc
xlat
call
cli
inc
out
std
fldl
std
inc
into
aad
mov
xchg
pushf
and
loopne
repnz
xor
test
add
jmp
mov
mov
xchg
cmp
sbb
call
inc
jl
sub
loopne
or
lret
insb
mull
les
jns
or
test
les
sbbb
inc
xor
mov
mov
sub
fwait
and
inc
stc
outsl
xchg
data16
test
and
pop
repz
or
jnp
loope
or
in
jg
pop
les
leave
cltd
mov
popl
sbbl
sub
mov
mov
push
test
fadd
xor
jns
arpl
and
xchg
xor
jecxz
fdivrl
xorb
sti
aam
cmp
lahf
mov
in
xchg
imul
mov
push
aaa
xor
xchg
stc
cmpsl
inc
fisttpl
xlat
adc
mov
mov
in
in
in
lcall
lds
ror
test
mov
pop
adc
xchg
push
mov
inc
fisubrs
mov
add
js
in
aam
dec
test
aas
outsl
xor
jge
adc
mov
mov
sahf
iret
pop
inc
mov
push
movsl
aad
nop
lock
movsl
sub
jg
int
in
add
mov
push
xchg
sbb
punpcklwd
jne
pop
sti
sub
cmc
inc
out
addr16
jmp
cwtl
out
pop
pop
add
das
mov
cmpsb
imul
mov
mov
divl
aaa
test
push
xor
pop
test
pop
mov
shr
lods
mov
mov
andb
rorb
movsb
inc
pop
jno
or
pushf
mov
mov
lcall
xor
and
dec
stos
aad
jl
fwait
sbb
mov
call
stos
adc
sub
in
or
mov
sub
cmpsb
inc
push
sbb
lahf
jecxz
shrl
leave
add
push
sbb
pop
jecxz
mov
or
mov
mov
jmp
aaa
fs
test
divb
movsb
cmpb
sbb
inc
sub
dec
jg
out
inc
lcall
adc
xor
shrb
fcmovnbe
mov
add
movsl
lret
inc
inc
and
jmp
xchg
and
jge
cmpsl
adcb
ret
xor
sub
es
cmc
mov
sub
jnp
inc
xor
jae
sbb
or
stos
dec
out
ret
pop
and
int
mov
jge
or
xor
in
mov
sub
enter
mov
mov
imul
cmpb
push
xchg
inc
push
sbb
xchg
xchg
dec
or
mov
mov
or
mov
mov
inc
outsl
std
xor
lock
mov
pop
inc
popf
jbe
lock
jp
inc
loopne
leave
lock
jo
dec
cmp
sbbb
cs
adc
xchg
dec
push
jb
mov
jg
inc
int
inc
adc
cmp
mov
ss
stc
sar
xchg
insb
shl
in
mov
scas
cmp
movsb
cmp
inc
push
popa
arpl
cs
shll
js
aaa
xchg
add
cli
and
xor
int
mov
es
xchg
jmp
popa
mov
xlat
mov
popf
dec
mov
lods
sbbl
fistpll
push
aam
cmp
subb
mov
nop
loope
gs
xchg
cmpl
movsl
jne
rorb
cwtl
xchg
cmpl
adc
cli
xchg
loopne
mov
inc
stos
das
mov
dec
lahf
imul
jmp
xchg
cmp
inc
xor
test
pop
jge
xchg
add
jmp
mov
sahf
pop
fisubl
stc
in
fsubs
cwtl
push
pop
fisttps
int3
xchg
stos
aad
sbb
mov
ja
gs
sar
out
dec
dec
sbb
loope
dec
dec
das
lcall
in
jmp
xlat
or
mov
je
xchg
mov
xor
cmp
aaa
fdivl
push
loop
sub
sbb
xchg
outsl
xlat
hlt
cld
arpl
mov
or
cmc
addr16
dec
lcall
inc
scas
inc
sarl
xchg
in
xchg
or
sbb
adc
mov
mov
jl
pop
push
scas
xor
or
jp
xor
fstpl
stc
ljmp
and
xlat
call
in
cmovge
cmpsb
aas
hlt
gs
and
adc
and
pop
pop
sub
cmp
ffree
shlb
jbe
sub
test
xchg
or
pusha
push
xchg
jge
pusha
and
pop
lea
addr16
rcrb
repnz
add
mov
inc
nop
xchg
pop
mov
test
sub
mov
lcall
xor
xor
sub
stos
cld
push
lds
pop
cs
sbb
mov
mov
lahf
cli
and
jg
adc
divl
imul
or
es
fisttps
rorb
push
cmp
ret
jmp
xlat
jge
and
and
mov
je
lods
lods
pop
outsl
ss
xchg
add
dec
or
dec
lods
popa
fstpt
push
icebp
orb
adc
fldenv
adc
jo
inc
call
sbb
inc
inc
ret
popa
push
fwait
hlt
fldcw
fndisi(8087
lret
sbb
jb
xor
and
pop
jno
mov
arpl
imul
dec
inc
mov
cmp
xchg
je
aam
jle
in
pushf
jge
sub
xchg
fildll
cmp
pop
push
cmp
fcmovb
pop
push
sub
iret
inc
cmpsl
nop
call
not
add
mov
inc
leave
push
mov
xchg
push
xor
shlb
aam
or
inc
mov
lock
xor
cmp
cmp
xchg
mov
push
mov
xchg
sbbl
lcall
repnz
pop
scas
lret
sbb
popa
ds
jge
je
fmull
pop
into
xor
adc
inc
cs
xlat
jae
or
pop
jo
and
repnz
stc
inc
les
mov
test
pop
cmc
shrl
add
xchg
lods
mov
outsl
outsb
xorb
pop
leave
jmp
rorl
add
mov
sbb
mov
xor
das
in
leave
or
mov
xchg
lahf
sbb
cmc
jb
or
inc
pop
xchg
lret
fbld
sub
jnp
add
outsl
cli
int
mov
les
and
push
push
sar
pushf
push
mov
out
test
test
cmc
inc
sti
xchg
fcompl
daa
mov
daa
inc
hlt
ja
mov
lock
and
call
adc
jp
xchg
fisttps
cmpsl
in
adc
dec
xchg
adc
xchg
or
sti
mov
mov
dec
insl
adc
xchg
adc
cmp
outsl
popf
imul
xor
int3
es
insl
mov
mov
leave
loope
adc
out
gs
scas
and
sub
enter
cmp
rcrb
mov
xchg
push
xor
xchg
mov
or
push
jecxz
into
sub
sahf
xchg
sbb
out
mov
jae
dec
scas
or
adc
xor
sti
int3
mov
sbb
sbb
aad
xor
popa
div
pop
push
fcoml
push
orl
shll
mov
or
in
xchg
push
stos
mov
mov
adc
push
je
sbb
push
mov
xchg
shrl
out
jb
mov
stc
or
add
movsl
into
ss
call
out
ss
push
add
xchg
lds
jl
inc
add
jae
loop
adcb
sub
sahf
or
les
aaa
mov
repnz
adc
mov
push
dec
push
loope
pop
pop
inc
adc
sbb
and
jno
mov
addb
into
cltd
mov
or
push
adc
adc
das
cmp
fbld
inc
repnz
cmp
adc
push
cmc
das
movsl
and
sti
push
xlat
pop
or
cmp
lret
stos
fcom
sub
in
mov
mov
sbb
cli
mov
loopne
imul
xchg
jo
pop
adc
add
adc
inc
fst
push
sbb
push
sub
xor
or
pop
mov
cli
imul
loopne
sbb
cmp
mov
fsubrp
mov
jns
sbb
fists
mov
sbb
bound
hlt
arpl
and
lock
jno
mov
into
cmpl
xor
add
test
pop
pop
adc
sub
scas
stc
xor
es
xor
loopne
inc
add
xlat
lea
mov
nop
mov
cmp
inc
fistpll
add
fstpt
pushf
ljmp
sbb
push
xor
sub
or
mov
std
inc
xchg
jne
les
mov
mov
test
shl
cmp
push
xor
mov
push
pusha
jne
enter
lods
inc
inc
mov
jbe
outsl
jle
cwtl
pusha
je
pop
loop
lea
and
and
int
pop
inc
test
sub
mov
mov
push
lret
dec
insl
ljmp
sar
outsb
loope
mov
mov
mov
js
es
outsl
cmc
fimuls
loopne
xchg
mov
mov
push
cmp
jg
fldenv
fnstenv
mov
gs
push
pushf
xchg
adc
addl
out
fs
mov
call
movsl
andl
loopne
pop
inc
mov
push
mov
xchg
mov
cwtl
sub
enter
xor
lds
cmc
sub
fwait
cmp
jno
enter
fldcw
push
push
inc
adc
lds
pop
or
mov
or
decl
dec
cmp
outsb
and
mov
push
loopne
andl
cld
push
stc
push
push
sub
arpl
lods
dec
stos
and
cld
push
arpl
push
int3
and
fcmovu
jmp
test
or
repnz
shlb
adc
dec
ret
stc
sub
mov
pop
push
stos
inc
lods
orl
dec
cli
xchg
dec
mov
cmp
jle
push
xchg
adc
ja
sbb
push
scas
pop
mov
mov
push
adc
sti
xor
sbb
out
dec
lods
orb
push
shrb
dec
xchg
outsb
insl
jns
lret
repz
adc
xor
xchg
jmp
data16
mov
testb
out
decb
cwtl
fisubrl
sbb
testl
sbb
mov
add
jb
lods
les
push
mov
movsl
adc
and
add
rcrb
hlt
sarl
call
imul
and
aas
lret
sahf
cwtl
insl
sarb
jmp
mov
and
inc
push
into
fcoml
adc
pusha
sbb
push
call
add
lahf
ffreep
cltd
jl
dec
lock
inc
push
daa
mov
in
and
iret
rorl
test
push
addb
loope
pusha
mov
shlb
rcrb
jecxz
jp
nop
mov
std
out
inc
push
pop
imul
test
pmulhw
sarl
xchg
mov
mov
or
sub
mov
push
fstl
lds
xor
cmpsl
mov
lahf
add
cwtl
call
pop
scas
xor
shl
cmp
mov
insb
fldl
ret
lods
and
adc
cmp
movl
int
lea
movsl
jns
pop
dec
and
xchg
daa
pop
mov
push
jbe
bswap
scas
rcrb
dec
sub
cli
scas
out
mov
loope
add
push
repz
jle
lahf
test
into
loope
pop
test
maskmovq
idivl
jmp
cmc
imul
dec
out
in
frstor
dec
out
in
int3
lock
lcall
inc
mov
insb
xchg
rcrb
and
pop
rol
pusha
popf
and
aam
outsl
sub
or
xlat
sub
addr16
popa
adc
les
adc
in
cmp
cmp
sar
loopne
cmc
mov
inc
int
scas
jne
jp
aam
addl
inc
push
testl
popf
cmp
popa
nop
pushf
fstpl
jecxz
hlt
scas
ret
xchg
pop
faddl
fwait
lods
sub
cmp
push
aas
add
or
mov
sub
leave
xor
xor
sub
or
shrb
test
inc
add
xchg
leave
cld
movaps
or
mov
imul
xchg
add
lahf
sbb
add
into
gs
jmp
loope
and
sarb
pop
arpl
adc
mov
mov
xchg
sub
in
test
pop
iret
rorb
dec
lahf
inc
jne
loope
sti
sub
ljmp
dec
xor
lods
addr16
das
mov
andb
lret
leave
out
push
sub
sbb
jns,pn
stos
test
not
dec
test
inc
movl
add
push
aad
lods
ds
in
gs
popa
xor
push
adc
jecxz
shll
dec
fwait
add
xchg
mov
andb
repnz
dec
or
test
outsb
cmp
and
addr16
xor
cmpsl
aad
push
add
mov
loopne
sahf
stc
sti
adc
out
mov
push
push
orl
and
test
bnd
out
jo
ror
scas
cmc
and
pop
sbb
add
popf
outsl
pop
jb
out
repnz
push
mov
xchg
insb
imul
mov
dec
push
push
mov
push
loope
add
pop
cwtl
pusha
mov
pop
lock
lods
nop
lock
sub
les
fnstenv
test
ss
pop
into
dec
sub
jecxz
cwtl
mov
mov
call
mov
xor
add
cmp
adc
pusha
push
pop
mov
popa
xor
or
jl
divl
or
enter
push
sbb
scas
xchg
hlt
std
xor
pop
lahf
in
sub
xor
fisubrl
sub
outsl
mov
adc
xor
adc
outsl
push
js
cmp
es
or
and
jno
inc
mov
shlb
stc
xorb
adc
rcrl
add
mov
sbb
std
mov
dec
xor
dec
stos
cmp
clc
push
mov
pop
xchg
cli
aam
mov
mov
push
mov
adc
les
je
test
cwtl
xor
and
xor
nop
sub
ss
sbb
in
andl
test
or
xchg
jp
pushf
fnstsw
dec
mov
mov
pop
es
es
and
stos
test
roll
sbb
test
and
scas
movsb
testl
gs
cli
loopne
call
lret
pop
adc
ljmp
push
inc
loop
inc
push
arpl
mov
lret
dec
fimull
fsubl
and
mov
cmpsl
fadd
jg
dec
or
xchg
inc
test
sbb
fcomi
insb
into
and
icebp
push
xor
or
mov
cmp
int
into
dec
xor
pop
dec
cmpsl
cmp
push
xchg
cwtl
lods
or
cmpsl
mov
mov
out
lock
shr
adc
imul
bound
jbe
sub
arpl
negl
icebp
mov
loope
cmp
add
xor
mov
fs
push
loop
pop
imul
mov
add
jecxz
pop
rcl
out
fs
es
push
xchg
shrd
xor
add
fwait
xchg
out
data16
add
xor
jbe
pop
rorl
je
push
sbb
cmp
sbb
jp
jmp
mov
xor
cmpsb
dec
jno
rorb
jmp
or
mov
push
arpl
sar
imul
add
ror
sarl
iret
das
inc
aam
xor
pop
inc
adc
and
or
in
out
mov
outsl
aas
xor
arpl
sub
mov
cltd
imul
jge
leave
add
scas
cmpsl
dec
out
cld
aas
faddl
mov
outsb
dec
bound
cwtl
inc
xchg
arpl
pop
jno
fiadds
sbb
lock
mov
iret
aad
cltd
push
push
dec
gs
adc
lcall
add
pop
mov
cmp
pmullw
loopne
jb
mov
mov
mov
cmp
push
cmc
loopne
stos
sub
ret
add
push
push
mov
stos
fmull
mov
adc
lods
xchg
and
sbb
pop
cmpsl
xor
inc
lahf
cwtl
push
push
jge
fdivrs
lock
push
lea
cld
jge
xor
dec
push
cmp
cli
ret
mov
out
out
xchg
inc
add
jns
test
and
rclb
sti
dec
cmpl
movsl
mov
sti
into
ljmp
sahf
fwait
insb
insb
pop
jno
mov
outsb
in
jnp
xchg
dec
pop
stos
xor
pop
sub
inc
imul
aam
sbb
cmp
in
xchg
fstps
gs
testl
je
fdivrl
in
cmpl
push
mov
aad
loop
jo
inc
lods
dec
mov
jp
mov
aaa
xchg
rorb
mov
imul
std
das
push
pop
sbb
pop
out
sub
mov
push
or
dec
cmp
std
inc
adc
pop
cmpsb
sub
jnp
mov
outsl
push
push
pop
dec
mov
mov
enter
pop
notl
les
jae
push
sub
scas
test
and
rorl
nop
push
xchg
jb
ss
xlat
xor
xor
jg
je
lahf
mov
add
in
pusha
sbb
pop
mov
jo
inc
sub
lret
xchg
xchg
int
pop
mov
mov
dec
and
xor
push
fldenv
xlat
xchg
pop
cmpsl
jl
pop
and
pop
int
adc
add
aaa
and
cmp
mov
and
js
dec
pop
sarb
lahf
in
xchg
outsb
test
std
and
or
and
repz
cld
cmp
add
cld
rol
es
and
push
jl
sbb
push
icebp
xlat
call
add
mov
hlt
lahf
hlt
jnp
sahf
sbb
js
cs
mov
dec
sub
iret
stos
in
cli
mov
jecxz
xor
xchg
outsl
mov
lds
xor
aas
mov
arpl
jge
jne
cli
enter
inc
xchg
fstpt
sbb
push
fwait
in
or
cmp
or
out
xchg
stos
cld
je
fsubrs
stc
or
es
pop
adc
fiaddl
sbbl
test
into
in
add
sti
in
test
sub
out
int
test
leave
icebp
add
jg
sbb
data16
xor
adc
lods
sub
dec
sbb
push
pop
ror
int3
add
stos
sub
aaa
mov
fiaddl
loop
push
inc
loope
rorl
in
popl
cmp
outsl
gs
or
jl
scas
inc
jnp
cltd
movsl
call
sbb
xor
sahf
rolb
std
push
pop
test
xor
jg
mov
movsl
mov
jecxz
sub
mov
movsl
fs
cmpsb
mov
fwait
lods
aas
mov
addl
cltd
movsl
inc
arpl
int
xchg
xchg
into
icebp
sub
pop
out
adc
and
mov
mov
mov
sarb
mov
gs
push
lock
mov
and
dec
orb
push
xchg
sbbb
xchg
loop
xor
mov
add
jge
fimuls
add
imul
sbb
add
fildl
sub
lret
push
out
and
inc
pop
pop
and
out
push
sti
push
rolb
negb
fmul
sbb
add
icebp
xchg
mov
js
push
dec
fsubs
cmp
outsb
in
fbld
and
mov
ja
push
mov
loop
jg
pop
jle
jns
jns
and
flds
out
jl
cmpsb
cs
in
loopne
ds
jp
pop
or
rolb
inc
xor
jecxz
imul
inc
or
data16
iret
sub
push
shr
jmp
clc
or
stos
mov
push
movsb
fidivrl
and
insl
inc
fcmovnu
push
add
fmull
ret
xchg
lds
mov
insb
dec
pop
lock
loop
sub
mov
ror
push
lods
ljmp
dec
ds
popf
sub
stos
cwtl
cmp
mov
cltd
jg
lret
iret
push
mov
jae
bound
fadd
outsl
mov
xor
mov
xchg
mov
and
in
fldl
inc
sbbb
dec
out
cmpsb
cmpsb
scas
loop
push
pop
xor
mov
enter
xor
out
mov
mov
scas
in
flds
mov
enter
mov
in
lds
lds
pushf
mov
xchg
inc
clc
dec
and
pop
inc
sbb
inc
lods
xor
sub
rcll
adc
enter
sub
sub
and
push
dec
subb
jg
cli
dec
arpl
dec
push
push
cmpsl
insl
gs
mov
iret
icebp
pushf
sbb
jno
ss
sbb
inc
xor
in
cmc
ret
test
faddl
mov
fadd
lret
xorb
jge
push
lods
mov
mov
or
movsl
jnp
daa
imul
sub
aaa
push
push
ret
or
sub
xchg
out
jae
mov
mov
mov
add
or
sub
test
hlt
add
inc
inc
pop
xor
and
mov
mov
pop
add
mov
cmp
jnp
cwtl
or
shlb
std
icebp
inc
xor
push
pop
mov
mov
cld
mov
lcall
jae
arpl
jl
cmc
add
sbb
popl
cmp
or
cmp
push
cltd
into
mov
or
mov
and
call
ror
mov
scas
xchg
and
mov
cmp
cli
mov
sahf
xchg
mov
pop
jle
dec
mov
sub
jae
mov
clc
or
pop
lods
aas
sbb
rcrl
or
push
js
mov
cli
sub
fwait
xor
sbb
sbb
mov
pop
test
inc
pusha
xchg
lods
loope
fbld
lcall
scas
pop
mov
icebp
mov
shlb
fmul
test
or
xor
negl
imul
fdiv
mov
mov
xor
lahf
insl
enter
xor
push
sbb
adc
popa
addr16
mov
in
insb
xchg
movb
int3
int3
pop
add
and
bound
shl
pop
scas
pop
push
push
insl
js
xchg
push
test
clc
mov
rolb
insl
fbld
and
into
or
loope
and
sbb
mov
scas
test
or
fs
lds
in
pop
mov
dec
into
or
jb
sbb
insb
sub
test
xchg
sbb
push
stos
xlat
xor
adc
aam
test
push
fsubs
insb
push
add
pop
pop
sbb
outsl
sub
push
jns
or
mov
pop
std
xchg
call
push
jge
jnp
dec
les
add
jl
jnp
push
dec
xchg
adc
lcall
loope
lcall
jl
ret
and
push
fwait
jle
je
divb
lods
jns
cmp
adc
add
popf
scas
add
xchg
rcr
in
sbb
jbe
in
xchg
jmp
fdiv
inc
and
sub
outsl
fistpll
insl
sbb
loopne
out
test
stos
movsl
repz
jge
dec
mov
and
bswap
mov
rolb
lds
leave
insb
mov
inc
mov
shll
outsb
es
sbb
xchg
mov
adc
or
xchg
clc
les
ret
aaa
mov
push
jge
cs
fwait
or
frstor
test
aas
adc
cltd
inc
sbb
or
je
fs
sub
xchg
loopne
repz
adc
filds
or
jne
pop
or
push
sti
mov
inc
mov
cmpsb
imul
push
push
mov
add
xchg
arpl
and
stos
daa
in
push
shlb
sbb
ret
inc
and
sub
xchg
in
aas
mov
xchg
ficoms
shlb
dec
xchg
or
test
and
movsl
fsts
and
push
pop
mov
mov
ljmp
sub
shlb
xchg
dec
mov
or
xorb
push
sub
push
push
mov
mov
aaa
subb
fstpt
dec
cmp
scas
cmpl
pop
divb
lock
arpl
or
mov
jl
js
lods
rolb
sarl
pop
imul
add
inc
inc
xchg
push
outsl
test
es
mov
imul
cltd
jp
mov
shl
inc
mov
clc
and
imulb
inc
cmc
loope
xlat
aad
mov
jl
in
adc
stos
scas
push
xchg
std
and
or
stc
je
add
add
repnz
fisttpll
cmp
lods
je
lahf
and
push
and
sbb
push
stos
sarl
loop
jg
push
cmp
jne
lcall
sub
pop
jecxz
rcr
imul
add
mov
call
popf
std
cmpsl
xchg
fidivl
scas
mov
iret
imul
inc
mov
test
push
or
mov
dec
adc
cwtl
jno
mov
das
lahf
mov
mov
mov
mov
mov
jae
mov
ljmp
lret
rorb
lret
push
push
adc
mov
push
fcoms
xchg
loop
test
aaa
cmp
imul
sti
inc
lea
rcl
popa
sti
ret
dec
add
out
push
sti
ds
or
hlt
dec
pop
pop
dec
adc
xlat
pop
mov
xchg
imul
insb
mov
cli
aaa
repz
ja
cmpsl
jo
mov
and
daa
test
in
push
pop
mov
adc
push
fwait
fs
out
icebp
addl
xchg
add
inc
push
into
repz
or
mov
push
popa
xor
dec
loop
xchg
cs
pop
lret
push
rcrl
test
mov
dec
mov
les
push
xchg
adc
xlat
ljmp
subl
and
dec
call
rcrl
add
pop
rclb
mov
sbb
jae
std
mov
or
or
add
cwtl
xor
sbb
and
xchg
jae
or
sub
dec
sbbb
dec
add
cmpl
loop
sti
repnz
bound
in
mov
push
lods
scas
ffreep
mov
test
sub
aaa
rcr
xor
js
out
xor
int3
and
pusha
push
cmp
cli
into
mov
or
das
xchg
test
cmp
pop
push
fnsave
mov
cmp
mov
jmp
cli
jb
icebp
std
pop
inc
cwtl
ficompl
hlt
call
xor
dec
subb
loopne
aaa
xlat
rorl
imul
mov
add
or
sub
ljmp
push
movl
sub
push
inc
clc
fisttpl
push
arpl
imul
adc
mov
ss
add
push
jmp
ljmp
sbbl
add
adc
andl
lds
scas
push
xor
mov
cmp
jp
adcb
and
inc
jge
push
jmp
add
mov
or
inc
das
in
stc
stos
lret
jmp
xchg
out
cmp
arpl
outsl
cmpsb
or
and
jo
or
add
mov
scas
jl
mov
lar
int
sbb
lcall
add
in
pop
inc
mov
mov
std
push
in
push
lcall
push
jecxz
jecxz
sbb
bound
mov
jne
leave
jne
ss
push
loop
pop
fcomi
xor
mov
mulps
push
sahf
int3
lahf
pop
adc
orb
mov
mov
inc
ds
jp
push
dec
mov
push
cmp
pop
cmp
inc
ss
loop
enter
xchg
lahf
fstl
cmp
rolb
lods
subb
js
inc
and
addb
sbb
icebp
xchg
les
cli
arpl
cmp
push
pop
scas
jecxz
xor
call
cmpsl
jne
iret
ret
jnp
pop
pop
xchg
dec
lods
jnp
dec
pop
mov
xchg
sbb
or
pop
cmp
movsl
stos
fildll
sbb
inc
rcrb
sbb
xchg
xor
mov
cld
lret
xchg
jle
cmpsb
mov
popf
and
mov
push
mov
xchg
stos
movsb
nop
fs
scas
imul
inc
mov
jecxz
jo
cmpsb
mov
mov
ds
in
xchg
call
scas
xchg
lahf
shll
sub
xchg
scas
jae
movsl
inc
ja
sbb
jl
sbb
mov
loope
sbb
xchg
cs
cmp
daa
inc
pop
or
cmp
mov
mov
mov
jo
aaa
mov
lret
inc
push
jne
out
dec
enter
push
pop
or
mov
sub
jb
orb
sahf
add
jns
es
iret
clc
pop
aas
mov
test
push
fst
xchg
aaa
mov
jecxz
int3
mov
mov
int3
xchg
push
imul
movsl
leave
xorb
out
dec
adc
addr16
push
push
inc
inc
filds
shll
fxam
xor
jecxz
fstpt
inc
repz
sahf
cwtl
repz
clc
xchg
lahf
stos
or
les
fldt
cwtl
dec
mov
pop
leave
xchg
xchg
mov
push
and
jmp
jnp
in
lods
mov
jg
push
mov
int3
push
and
sub
outsl
pop
insl
mov
loop
mov
je
and
xchg
pop
jg
sub
inc
mov
rolb
enter
cs
fsubs
movsb
sbb
sbb
xor
add
inc
xchg
jo
sub
cmp
jno
mov
test
mov
or
mov
jmp
lcall
into
shll
arpl
sahf
mov
pop
mov
inc
sub
xor
inc
and
push
adc
out
ljmp
ds
pop
fs
add
jg
dec
popa
mov
or
xchg
inc
cmpsb
and
xor
fadds
in
icebp
jbe
push
dec
push
inc
cltd
dec
mov
mov
mov
cltd
xchg
mov
je
insb
sub
dec
or
mov
pusha
jmp
sbb
pop
add
or
lahf
imul
stos
mov
es
inc
or
test
jge
push
lahf
inc
fxch
cmp
out
jo
add
mov
jecxz
sbb
push
sbb
push
add
cli
movsb
test
loope
fisubs
xchg
inc
dec
cmp
or
mov
and
in
add
fistpll
bound
and
and
adc
jge
jb
out
mov
xor
aam
in
jns
jo
dec
shll
ljmp
xchg
mov
jle
sbb
inc
test
add
pop
mov
inc
int3
icebp
out
add
ja
mov
pop
aad
and
je
push
xor
push
insl
dec
lds
mov
jmp
repz
push
int
pushf
mov
push
dec
xchg
xchg
cmc
jbe
inc
or
mov
and
sti
shll
dec
cmpsl
mov
mov
or
movsb
dec
fwait
cmpsb
insb
mov
pop
jmp
aaa
adc
cmpsl
xor
iret
insb
inc
mov
bound
mov
xchg
dec
ja
ss
lea
mov
sti
sarb
cmp
mov
sahf
rcll
fucomip
push
pop
outsb
pop
test
or
mov
ja
repnz
imul
sbb
mov
sti
in
jo
inc
aas
and
shlb
data16
imul
ljmp
mov
cli
imul
jmp
and
push
pusha
sti
mov
xchg
call
lret
xor
and
mov
in
mov
daa
mov
fdivrs
and
jg
das
sub
push
sub
push
shlb
dec
mov
hlt
or
sub
popa
fisubrl
or
pop
ljmp
out
sub
cmpsl
das
adc
mov
pop
and
jne
mov
insb
loope
or
rclb
les
std
aam
xchg
mov
mov
leave
fs
jnp
cmp
add
mov
loop
mov
lock
pop
stos
icebp
push
sbb
cmp
xchg
imul
inc
cwtl
ss
clc
pop
lret
mov
mov
call
dec
dec
push
cmp
dec
jno,pt
arpl
mov
std
mov
mov
sub
mul
adcb
push
jmp
jmp
pop
std
pop
out
mov
xor
js
xchg
jbe
dec
mov
mov
iret
and
out
mov
mov
xchg
mov
loope
stc
push
mov
mov
adc
rcll
jmp
loope
dec
scas
scas
pop
ret
sti
xor
or
jp
sbb
movsl
inc
cmp
insb
sbb
cmpsb
push
ljmp
loop
sahf
cs
xchg
mov
movsl
mov
in
je
addb
sub
jl
outsb
push
xor
mov
jae
push
insb
loope
cmc
dec
pop
mov
xlat
pop
mov
cmpsb
add
adc
cs
inc
jecxz
jl
xchg
mov
movsb
out
lea
adc
in
jo
sbb
inc
negl
mov
fistpll
dec
call
and
jnp
fmuls
dec
mov
xchg
mov
xor
mov
adc
fmulp
mov
mov
mov
pop
out
int3
sbb
xchg
sub
xlat
jns
lods
dec
popa
adc
jecxz
cli
mov
cmp
call
pop
or
ljmp
out
rorl
lods
rorb
das
je
hlt
add
cmpl
jecxz
mov
std
movsb
adc
adc
push
pop
lret
aas
je
jl
inc
xor
stc
out
insl
push
mov
adc
xchg
mov
in
test
sbb
xchg
adc
cmp
xor
pop
inc
test
push
leave
fdivrp
add
push
ja
fdiv
add
ret
cs
into
push
push
and
fdivl
repnz
idivb
mov
fwait
lahf
xchg
jno
pop
sub
pop
mov
imul
pop
sahf
loopne
xor
fildl
inc
stos
lret
mov
mov
inc
push
enter
cs
iret
and
ret
loopne,pt
lods
mov
and
sub
sbb
cs
aam
jnp
cmp
pop
clc
xor
push
jne
sub
jmp
inc
pop
fs
cld
in
loopne
add
scas
inc
push
out
jns
sahf
xchg
sti
pop
movsb
pushf
loope
dec
cmc
scas
into
in
xor
jno
out
sbb
dec
mov
pop
ds
jg
enter
mov
data16
iret
adc
into
xor
lahf
mov
mov
fmull
mov
mov
inc
test
sar
or
cmp
insb
leave
xchg
lcall
dec
xor
rorb
inc
div
iret
aas
mov
sub
call
aad
pop
mov
push
mov
cmp
push
inc
cltd
jge
lods
mov
xchg
int3
sbb
shl
fucomp
vphaddbd
cmpl
andb
ss
out
fneni(8087
push
js
pop
daa
pop
and
jnp
cmp
sbb
js
gs
jmp
shll
push
jae
out
call
push
jne
lods
sbb
fdivs
push
sub
ficomps
xor
imul
notl
push
xchg
and
xor
mov
or
and
out
ficompl
mov
mov
xchg
mov
ljmp
sub
lds
dec
test
iret
push
sbb
dec
aas
pop
xor
xor
dec
dec
lods
sbb
stos
cwtl
shll
dec
jle
ss
lcall
push
mov
test
add
rorl
pop
mov
or
fdivl
inc
cmp
cmp
xchg
or
mov
fists
shl
sbb
outsl
xchg
daa
ss
orl
dec
ret
jl
or
into
out
mov
or
cmpsl
mov
lods
and
mov
xchg
cmp
cmp
fmuls
add
testl
pop
sub
fs
or
lret
jnp
mov
push
mov
imul
adc
jmp
inc
inc
xor
pop
mov
pop
xchg
jno
adc
ds
mov
stos
popf
addr16
mov
outsb
ss
push
dec
imulb
jns
adc
popa
into
mov
mov
push
orb
data16
pusha
fsubl
push
movsb
xchg
negb
or
loop
in
pop
lods
inc
lret
fsubr
mov
loopne
insb
es
dec
rep
lods
sbb
lods
pushf
push
idiv
leave
cmp
insb
push
jnp
xor
inc
dec
pushf
xchg
rcll
pop
mov
mov
sub
dec
xor
das
xchg
cmp
sub
sahf
repz
out
imul
popf
jmp
or
shlb
mov
xchg
xchg
mov
push
dec
arpl
mov
pushf
push
cvtdq2ps
jl
imul
ljmp
in
imul
cmpb
sahf
ljmp
rolb
or
repz
cmp
inc
mov
clc
pop
fidivrl
loopne
cs
jae
mov
bound
imul
add
rorl
fisttps
pop
push
out
ljmp
adc
inc
lock
push
xchg
movsb
lcall
ficoml
sbb
xchg
pop
fisttpll
sub
roll
jmp
sbb
outsl
xchg
pop
or
jl
mov
or
lret
aam
push
jmp
jo
push
pop
dec
mov
sbbb
adc
xchg
push
loop
ljmp
adc
bound
sbb
mov
std
pop
mov
adc
lods
int
adc
sti
pop
pop
ficoml
aaa
mov
adcl
lret
enter
xchg
loop
cmc
cmc
mov
mov
sbb
adc
and
add
push
mov
mov
lods
xchg
outsl
push
addr16
adcl
aaa
mov
push
in
aas
test
ja
mov
push
loope
fs
mov
jno
jne
out
jl
push
inc
stos
scas
cmp
fs
std
mov
adc
inc
mov
push
push
and
pop
lods
mov
outsb
push
mov
or
adc
adc
ret
test
push
sub
pushf
mov
mov
or
pop
ja
sti
outsb
jle
je
dec
pop
xchg
inc
int3
in
push
ss
or
xchg
fsub
xor
xchg
pop
lds
movsb
sarb
mov
pushf
js
cmp
jmp
nop
test
stc
mov
insb
adc
movsl
ds
popl
punpckhwd
jnp
cli
icebp
fdivs
fdivl
jge
push
xor
ss
imul
xchg
add
jnp
push
lahf
pusha
in
push
xchg
and
jnp
mov
jecxz
inc
ds
dec
add
lds
adc
mov
pop
xchg
xorl
sbb
xor
adc
rorb
aaa
into
insl
sar
mov
xchg
mov
shlb
push
das
nop
movsl
dec
add
xor
into
dec
lcall
and
sub
xchg
or
clc
test
adc
jg
mov
mov
ficomps
sub
je
fstl
push
sbb
xchg
cmp
outsb
pusha
push
ja
push
sub
repnz
jne
sbb
or
jmp
mov
in
adcl
pushf
out
or
in
cmp
push
sbb
sbb
gs
xchg
stc
dec
cmp
jmp
pop
lahf
fs
cwtl
mov
mov
push
cmp
or
shll
and
int3
push
jb
pop
adc
negl
xorl
enter
insl
inc
inc
sbb
flds
mov
shlb
mov
mov
sbb
stos
sbb
inc
or
adc
or
mov
ja
jle
sbb
stos
cmp
ljmp
mov
inc
sub
xchg
adc
ljmp
ljmp
sbb
mov
outsb
cmpsb
ljmp
insb
stos
cmc
or
clc
hlt
sbb
loop
stc
popf
in
xchg
add
mov
push
push
and
outsl
inc
add
mov
int
push
adc
pop
int
adc
push
sti
ss
push
imul
lea
xchg
push
nop
inc
push
jge
out
sahf
mov
nop
mov
adc
movsl
lret
cltd
push
divb
xchg
into
dec
movsb
lods
or
js
aad
out
in
mov
in
mov
add
nop
les
arpl
ror
subb
mov
add
imul
testl
adc
inc
jl
add
sarb
movsl
out
mov
fiaddl
mov
pusha
lea
push
test
jp
ret
nop
mov
push
adcl
xchg
sarl
ljmp
mov
pop
out
popa
icebp
cs
dec
popf
push
add
sub
adc
and
add
pop
sbb
cs
add
sub
inc
pop
mov
cmp
xchg
inc
mov
dec
and
xor
adc
xchg
in
sbb
aas
sub
stc
jp
out
test
lock
mov
movsl
rcrl
dec
leave
cmp
inc
inc
in
shl
mov
sahf
sbb
mov
cmc
push
pop
xor
xlat
ja
or
mov
jecxz
aas
xor
add
nop
ficomps
popf
pop
pop
push
sub
cmp
lds
push
fistps
mov
xorb
or
test
inc
nop
or
xchg
cmp
js
jp
lds
test
mov
imul
dec
jmp
sub
fiadds
bound
std
cmpsl
mov
pop
stos
pop
sarb
jp
into
imul
mov
test
mov
cmc
nop
fdivs
sub
ljmp
or
or
imul
sarb
out
mov
fnstenv
jmp
pop
aad
fs
lods
pusha
sub
mov
inc
xchg
fucomip
xor
xor
mov
outsl
jno
ret
leave
or
leave
cmp
xchg
inc
aaa
leave
stos
out
add
repnz
jg
pop
mov
stos
inc
jno
push
icebp
sbb
pop
push
xchg
xor
jb
sbb
xchg
cmp
inc
hlt
push
dec
iret
fiaddl
out
inc
xchg
sbb
jmp
inc
fdiv
stos
pop
push
scas
sub
mov
fidivl
sbbl
xchg
push
inc
int3
cltd
pop
jns
pop
movsl
test
mov
arpl
sub
xchg
xor
jnp
nop
fwait
scas
xchg
xor
sbb
inc
xchg
pusha
cmp
and
push
xor
jb
mov
push
cld
sbb
mov
cs
add
or
xor
xchg
jb
pop
cld
filds
stos
std
cmpl
sub
mov
pop
xor
enter
rolb
xchg
jg
out
hlt
xchg
arpl
sub
pop
out
rorb
jp
scas
hlt
sbb
or
out
in
rcll
imul
inc
ret
sub
mov
push
push
push
cld
repnz
lds
lock
sbb
xchg
add
mov
test
cmp
jle
mov
fsubl
dec
in
int3
mov
dec
add
inc
push
fsub
scas
sub
jmp
int3
je
stos
je
arpl
adcl
mov
mov
pop
lods
xchg
fiaddl
lds
cld
inc
iret
cmp
or
and
les
push
imul
enter
jnp
mov
inc
dec
pop
sub
insl
insl
mov
lock
mov
jo
sar
inc
adcb
lods
add
mov
xor
and
leave
insl
xchg
icebp
testb
xchg
fcom
bound
add
addr16
mov
inc
leave
pop
fstp
sti
enter
add
stc
scas
xlat
cmpsl
mov
sbb
ds
stc
out
outsb
push
sub
jns
mov
and
or
daa
jne
xchg
push
ss
add
loop,pn
mov
call
or
xchg
es
jge
sub
xchg
sbb
sub
mov
jo
mov
jne
sub
pop
dec
mov
xchg
scas
and
repnz
and
js
test
mov
xchg
cmp
dec
mov
push
mov
ja
je
push
sarl
in
pop
fsubrl
lahf
mov
sub
xor
cs
movsl
add
out
lock
xchg
aaa
jno
dec
jno
ret
scas
mov
mov
dec
jge
enter
sarb
sub
add
cmp
mov
xor
loope
clc
mov
jge
mov
ss
loopne
testb
dec
mov
pop
jg
mov
inc
stc
adc
pusha
mov
outsl
out
out
out
jo
insb
enter
dec
push
cmp
dec
shlb
adc
popa
subb
pop
std
std
pop
xor
hlt
jno
jmp
or
xchg
adc
movsl
mov
push
or
cltd
mov
dec
pop
inc
arpl
loopne
lds
ficompl
lock
mov
xchg
and
sub
mov
mov
cmpsb
mov
repz
and
mulb
push
cmp
je
push
test
inc
jecxz
sbb
lahf
icebp
cwtl
adc
sub
mull
aas
and
dec
xchg
jb
into
fsub
popa
movsl
add
ljmp
aaa
sub
sbb
adc
popf
or
mov
cmc
stos
sahf
inc
mov
jp
notl
mov
dec
mov
jecxz
and
and
jge
push
sbb
push
mov
repz
xchg
ja
inc
jbe
dec
in
inc
adcb
push
cltd
cmpb
pop
adc
or
int
push
aad
inc
data16
add
jmp
xlat
adc
sbb
mov
push
mov
adc
dec
xchg
loop
cmp
into
adcb
xchg
push
loopne
adc
push
inc
cmc
mov
jne
not
adc
das
repnz
pushf
mov
mov
mov
mulb
inc
ror
adc
je
out
hlt
pop
push
sbb
lock
mov
rorl
fsts
lock
dec
xor
jecxz
lret
loope
dec
dec
add
inc
ret
push
mov
test
sbb
jle
add
or
mov
mov
addl
xchg
hlt
adc
hlt
xlat
or
sbb
gs
cmpsl
cmpsl
cmc
in
inc
jg
pusha
push
xlat
rcll
mov
sbb
lods
push
jl
jg
stos
cmp
sub
sub
scas
sarl
cmp
push
pushl
shrl
xchg
pop
mov
mov
leave
scas
fs
adc
nop
add
mov
add
mov
hlt
sub
insb
cmp
adc
pop
repz
xor
xchg
pop
mov
nop
and
mov
mov
mov
xchg
cmp
or
scas
xchg
stos
outsl
or
mov
out
push
push
adc
es
xchg
mov
shll
mov
inc
je,pt
cmp
mov
mov
jecxz
sbb
das
or
loope
adcl
int
inc
jmp
or
and
test
div
jl
ss
int3
call
mov
inc
or
xchg
mov
je
icebp
out
pop
int
cld
or
or
cmp
xor
mov
fcompl
add
ret
and
mov
fcmovbe
iretw
add
mov
lret
xor
mov
in
pop
add
mov
sbb
sub
stos
popf
hlt
inc
push
fldenv
sti
test
jnp
call
sub
out
sarl
push
clc
jb
lret
mov
aam
and
push
and
lods
call
mov
out
outsl
fisubl
sbb
lds
jns
int
ret
and
pop
cmc
in
mov
mov
pop
jle
jbe
pop
cmc
jb
mov
loope
in
xor
xor
je
mov
sbb
dec
and
cld
or
dec
push
push
pop
stc
cmpsl
addr16
mov
jno
sub
lahf
pop
fnstcw
dec
iret
imul
aad
pushf
push
sbb
jae
mov
pop
pop
push
push
nop
sar
dec
adc
adc
and
cmp
cmp
jp
fistps
mov
or
shl
cmp
or
mov
scas
xor
or
or
cltd
shlb
pushl
imul
ret
xchg
adcl
sbb
fcoms
adc
push
repnz
repnz
jnp
and
inc
sbb
inc
xchg
rorl
les
divl
jae
cwtl
push
mov
loop
sti
push
int3
jno
fldcw
gs
frstor
sub
movsl
mov
xchg
jnp,pn
inc
jbe
sahf
cmp
xchg
cmpsb
cmp
decb
add
fistpll
or
xchg
push
repz
sub
ficompl
icebp
mov
push
mov
cmc
out
dec
std
es
fcomps
sbb
out
jmp
pop
dec
mov
xorb
test
inc
cmp
in
jecxz
imul
out
pop
or
repz
xor
icebp
push
inc
adc
mov
or
push
imul
mov
sbb
std
jb
add
push
xchg
lcall
mov
je
lods
mov
lret
dec
flds
adc
xchg
fwait
mov
inc
inc
fucom
jp
das
pop
aad
icebp
mov
inc
mov
xchg
mov
repnz
mov
dec
adc
inc
mov
and
les
into
scas
sbb
push
cmp
jp
adc
ljmp
push
data16
mov
and
mov
sub
leave
inc
mov
sbb
xchg
cmpsl
mov
jge
push
jns
push
fnstenv
into
and
scas
cmpsb
je
sub
int3
ficompl
std
push
push
mov
mov
mov
test
add
aas
roll
cmpsb
jg
sub
aam
mov
lock
inc
xchg
xchg
jl
fs
fimuls
mov
ret
in
in
std
addr16
sub
ss
mov
pop
sbb
stc
imul
xor
sbb
or
call
jmp
movsb
add
in
aaa
test
lock
call
stc
jle
mov
push
add
mov
or
out
pop
imul
xor
and
mov
cmp
addps
leave
mov
aas
rcrb
dec
test
inc
or
or
aam
daa
xor
outsb
cs
push
jl
lret
testl
mov
sti
dec
movb
fmul
or
test
pop
xchg
cmpsl
and
mov
inc
pop
jb
sub
push
incb
push
dec
popa
and
shl
arpl
or
inc
repz
std
push
push
and
adc
int
pop
sbb
es
pop
fistpll
test
dec
push
or
lret
fiadds
push
dec
pop
push
insb
cmp
mov
in
bound
call
test
or
mov
inc
cs
sub
inc
fxam
lcall
mov
pop
lahf
add
mov
dec
arpl
push
jp
xor
mov
out
push
rcll
sub
jecxz
in
sarb
sub
ja
sbb
xchg
xchg
jns
or
std
mov
inc
dec
dec
mov
rclb
addr16
sahf
aam
add
popa
sbb
lods
fwait
sbb
jbe
jnp
stos
push
xchg
int
jbe
outsl
add
or
out
dec
repnz
pop
insl
jecxz
ret
jns
inc
cld
sub
xor
mov
sub
mov
sbb
jo
mov
xchg
lea
iret
jmp
push
adc
js
adc
inc
outsb
cmp
enter
xchg
mov
xchg
incb
and
jl
popf
ret
fsts
lcall
add
aas
mov
inc
push
adc
jb
test
aaa
testb
scas
nop
mov
push
nop
or
insb
cmpsb
and
xchg
rcrb
cmp
xchg
lahf
jmp
cmp
mov
dec
jecxz
xor
xchg
mov
test
fmull
push
jno
add
pop
jl
aaa
cmpsl
ja
cmpsl
mov
sahf
inc
clc
pop
sti
push
mov
push
rcrl
dec
cmovno
push
xchg
cmpb
fisubrl
iret
xlat
sbb
mov
enter
adc
out
ja
cmp
fsincos
jmp
sub
inc
push
ljmp
in
lahf
mov
add
adcl
cmp
outsl
fdivl
jmp
xchg
leave
xor
sub
xlat
and
xchg
stos
adc
sbb
dec
xchg
dec
fwait
adc
pop
push
cmpl
mov
ja
cmp
or
in
inc
mov
orl
shl
mov
in
loope
push
pop
or
test
aad
xchg
dec
add
out
cmpsb
mov
cmp
addr16
xor
cld
sbb
xchg
sub
mov
jno
and
idivb
mov
bound
jnp
in
push
cmp
in
in
sbb
pushf
sub
test
inc
mov
fstps
cmp
xchg
sti
popa
sbb
aaa
mov
sbb
aam
aaa
push
lahf
mov
lahf
inc
and
mov
gs
cvtps2pi
insl
xchg
adc
scas
mov
cltd
pusha
jecxz
add
jno
cmpsl
decl
movsl
js
push
out
or
mov
imul
cmovnp
xor
adc
out
cmp
adc
iret
in
pop
fcoml
lds
and
xchg
jl
jno
icebp
movsw
ret
dec
push
add
outsb
mov
cmc
mov
and
incl
sub
xchg
out
rolb
and
pop
mov
sub
incb
lahf
insl
nop
out
xor
repnz
bound
push
sbb
leave
push
cmp
jecxz
sbb
sub
ljmp
inc
mov
cmp
into
jb
iret
push
adc
xchg
mov
pop
mov
sub
cwtl
sub
adc
mov
decl
jp
subl
jns
rorb
out
cmp
ja
and
fxsave
bound
mov
mov
dec
cmp
outsl
adc
cmp
adc
and
inc
mov
pop
out
test
xor
xorb
ja
jnp
and
andl
sbb
je
std
shll
fadd
imul
cmpb
push
sbbl
xor
repnz
pop
inc
int3
fdivrs
sbb
dec
adc
mov
ja
dec
push
adc
pop
pusha
xchg
sbb
pusha
sub
adc
xor
and
div
pop
enter
sbb
out
dec
lods
mov
das
inc
cmp
ds
decl
and
sub
imul
cmp
loope
icebp
test
outsl
fnstenv
mov
sub
out
sub
or
xor
push
das
jp
mov
jmp
jbe
jg
clc
or
icebp
jno
jle
sbb
mov
or
movsb
and
sub
jmp
adc
cmp
dec
jp
les
pop
bound
mov
or
pop
pop
cmpsl
aad
mov
sbb
sub
aaa
xchg
int3
xor
dec
outsl
lock
lods
pusha
sbb
push
add
lods
incl
sti
mov
cmpsl
fcompl
cmp
std
mov
dec
pop
xor
stos
xchg
mov
xchg
scas
popa
add
sbb
mov
cmp
sbb
in
shll
sub
sub
incb
sub
addb
sbb
scas
cs
int
lock
push
popa
pushf
dec
insb
adc
cmp
adc
cmpb
dec
add
in
fstpt
fists
inc
lods
push
cs
mov
dec
jb
mov
mov
pop
add
lds
or
cmp
mov
sbb
ds
dec
dec
push
test
pusha
mov
addr16
pop
test
mov
adc
pop
fidivs
outsb
bound
mov
sub
stc
push
bound
in
fstpt
jbe
cmp
test
and
add
rcrl
cmp
xor
inc
insb
push
imul
idivl
enter
fsubp
aas
jo
add
pushf
add
mov
push
xchg
pop
xchg
ds
mov
mov
je
ret
or
ret
mov
pop
pusha
jmp
dec
sbb
mov
repz
popa
xlat
loop
fidivs
adc
ss
lret
sub
scas
rolb
divl
inc
mov
adc
pop
in
rcrb
sub
sub
jle
shrb
push
dec
popa
cs
js
fnstcw
jge
adc
or
in
mov
or
repnz
push
or
lret
sbb
lahf
dec
out
push
push
jns
and
iret
sbb
sbb
jle
insl
pop
jnp
bound
imul
in
fnsave
mov
sub
mov
push
push
jns
adc
cmp
xchg
xchg
mov
iret
cs
push
cli
mov
dec
cmp
fidivrl
popa
xlat
movsl
add
fildl
lret
cld
mov
lods
pop
enter
inc
hlt
ja
add
mov
lds
repz
mov
popa
mov
jb
mov
clc
push
sbb
imul
pushf
and
jle
push
outsb
mov
outsl
mov
push
mov
or
xchg
xor
out
inc
inc
clc
add
mov
and
out
jmp
stos
sbb
lcall
loop
pop
repnz
or
out
pop
push
or
out
xchg
mov
adc
jnp
xchg
inc
add
push
sarl
inc
das
scas
lret
test
loope
pop
pop
xor
into
mov
mov
or
adc
xor
bound
addl
shr
mov
pop
adc
or
faddl
rolb
jbe
loop
arpl
jmp
push
lock
fwait
pop
xor
cmpsl
ficoms
sbb
sbb
ljmp
mov
add
dec
stos
stos
subl
lret
add
pop
xchg
adc
ret
mov
lret
pop
pop
xlat
call
adc
mov
or
dec
inc
enter
push
shr
mov
test
xor
aaa
and
cli
shrl
dec
jmp
jne
ret
loop
lret
dec
sub
add
inc
clc
cmpsl
leave
daa
push
pop
xchg
js
cwtl
js
mov
pushf
ds
hlt
fucomp
aam
pop
aam
pop
jle
adc
lds
clc
daa
inc
jmp
pop
xchg
popf
test
cmp
les
sbb
rcrb
out
pop
ds
jg
push
lret
xchg
sub
mov
pop
sub
mov
not
in
loop
xchg
popa
xor
cmp
mov
xor
movsb
push
subb
add
fiadds
inc
loopne
test
or
mov
mov
rorb
jle
popa
dec
ljmp
push
or
push
add
loopne
push
jp
sub
addr16
fnstsw
xchg
cli
test
dec
mov
lock
scas
jb
push
hlt
jge
dec
scas
push
jmp
inc
inc
popa
sahf
sarl
push
jbe
xor
add
pop
adc
out
addr16
out
and
mov
inc
add
mov
outsl
xchg
mov
popf
mov
addr16
out
leave
and
cmp
lock
sub
pushf
push
add
jns
pop
inc
js
lods
xchg
fwait
cmp
pushf
mov
cwtl
es
mov
fldenv
lods
aad
dec
push
dec
inc
push
out
mov
xor
iret
pushf
aam
xchg
cmp
dec
xchg
adc
enter
pop
fs
daa
aaa
jo
int
and
movsl
pop
xchg
outsb
xor
xchg
bound
pop
adc
insl
sbb
sbb
lret
push
das
jns
loop
je
push
mov
lea
ds
mov
addb
cli
sti
sbb
ss
inc
xchg
xor
pop
cmp
add
ret
in
adc
mov
adc
jmp
adc
lahf
fcompl
leave
clc
adc
pop
dec
out
mov
jle
xchg
testl
adc
jg
cltd
loopne
xor
mov
ret
push
addr16
inc
les
dec
push
adc
scas
insl
outsb
pop
lds
push
setne
xchg
jmp
add
cmp
test
push
fs
jg
shrb
addr16
xor
negb
mov
jge
jno
js
xchg
sub
loopne
mov
movsl
lds
sbb
icebp
mov
push
mov
outsl
out
or
add
dec
pop
xchg
aas
and
or
adc
pushf
into
or
clc
pop
cmp
jle
jnp
int3
cmpsl
cmp
jbe
inc
add
out
int3
lret
cmp
mov
data16
xlat
or
jle
js
cmpsl
sub
fldenv
in
mov
and
sarl
pop
rorl
sub
mov
or
stos
cmp
stc
jnp
add
add
leave
mov
add
pop
stc
lret
andl
push
addr16
push
pop
and
lds
sub
lds
mov
adc
ds
loopne
shrb
lds
psraw
push
repnz
ret
fsts
cs
clc
add
sub
and
ss
sbb
xor
imul
aaa
dec
fistpl
and
jns
and
cmpsl
mov
push
or
shlb
jbe
pop
sahf
lea
push
fistps
cmp
and
cmpl
fisttpll
jns
outsl
loope
popa
sahf
fsubrl
xor
ljmp
push
cmp
fcomp
pop
push
je
and
pop
pop
mov
leave
inc
sub
call
in
adc
xor
mov
testb
orl
and
aas
and
sub
push
test
dec
jmp
inc
fisubl
pop
mov
stos
push
xchg
out
mov
mov
ja
jmp
aaa
adc
scas
mov
int3
test
adc
adc
rorl
sub
jl
decb
push
cmpb
push
aam
test
push
into
repz
bound
jge
test
xor
inc
dec
sbb
ss
mov
xchg
xchg
push
fwait
dec
imul
xchg
out
imul
adc
jle
jne
pop
sbb
mov
mov
into
or
fstpt
pushf
dec
push
xchg
mov
cwtl
sub
jge
xchg
hlt
cmp
hlt
dec
sbb
xchg
push
and
out
xlat
inc
or
bound
cld
je
xchg
mull
fcoms
mov
xor
sarl
mov
mov
les
mov
outsl
fwait
or
jnp
adc
aas
push
out
loopne
pop
fcmovnbe
int3
bound
scas
mov
dec
cld
fs
fs
loop
rol
xchg
es
js
or
jae
pop
mov
or
sbb
inc
dec
jo
mov
divb
mov
inc
mov
mov
mov
xor
in
sahf
inc
push
sub
xor
aaa
mov
and
sub
outsl
lret
push
mov
outsl
jmp
clc
or
out
sub
fidivs
fdivrl
arpl
xchg
mov
lods
addr16
jo
test
inc
test
addr16
paddq
repz
clc
mov
subl
add
fs
fnstcw
mov
movsl
insb
div
sub
pop
push
inc
pop
lcall
pop
pop
in
aad
mov
fsubrs
js
xor
xchg
push
movsl
xlat
mov
sbb
mov
gs
mov
out
push
or
inc
cli
pop
cmpsb
fsts
ret
cmp
movsl
lods
pusha
je
dec
inc
test
retw
adc
and
or
testb
inc
mov
mov
aaa
jbe
loope
and
out
icebp
mov
xor
mov
ja
les
cmp
fcoms
push
push
test
xor
outsl
dec
xor
sbb
sub
xchg
pushf
pop
cmp
jg
jnp
bound
inc
mov
or
or
lea
push
cmpsb
clc
mov
outsb
jmp
out
lret
mov
mov
out
push
mov
xchg
fisubrs
decb
sbb
or
cmp
es
imul
lock
xchg
mov
xchg
out
mov
in
loope
gs
mov
fmuls
push
mov
pop
mov
and
push
pop
pop
sbb
inc
pushf
movsl
or
cmpsl
sub
cmc
leave
jo
and
or
xchg
jnp
cmp
mov
add
aam
or
xchg
ja
pop
lds
in
adc
pop
jns
shr
fstpl
mov
cltd
lea
jmp
in
mov
sbb
cmp
cmpsl
pop
jbe
mov
in
ss
inc
jl
push
lahf
xchg
sti
in
repnz
cmp
test
ficomps
pop
orb
cmc
popf
les
adc
rcl
sub
mov
sbb
push
aas
insl
imul
mov
pop
mov
or
dec
or
mov
fmulp
jns
mov
cli
lret
loop
cmp
fdiv
jne
cltd
aas
inc
fsub
aad
cmp
jo
rol
lret
push
jb
and
outsl
in
inc
mov
and
dec
mov
jmp
mov
int
or
pop
scas
fimuls
add
subb
mov
fwait
mov
cmp
imul
xchg
je
pushf
sti
daa
xchg
test
adc
lock
fsubl
aad
pushf
ret
cmc
call
rclb
push
loop
xchg
mov
lret
sub
std
xor
test
sub
loop
inc
bndldx
cmp
fadds
cmpsl
bnd
imul
adc
loopne
ds
or
ss
scas
xchg
xchg
pop
es
imull
xor
lret
stc
pushf
sbbb
outsb
call
pop
sbb
jg
js
push
aas
mov
xchg
inc
and
repz
ret
enter
add
mov
xchg
cmp
leave
aam
fsubrs
jo
jg
arpl
xor
mov
jg
jmp
addl
notb
jns
mov
mov
int
rolb
add
out
pushf
ret
ret
inc
xchg
loop
cpuid
stos
sbb
rcr
js
xorl
inc
xchg
xor
shrl
test
mov
pop
cmp
in
and
pop
in
xor
mov
imul
gs
cmpsb
mov
xchg
push
jle
hlt
xchg
mov
pop
rclb
mov
mov
jnp
cmp
mov
adc
scas
hlt
cs
fptan
mov
test
fst
adc
mov
xchg
cmp
ret
mov
push
xchg
cmc
jle
cmp
adc
inc
in
repz
cmpsl
inc
gs
iret
jecxz
sub
pusha
sbb
add
outsb
into
mov
inc
pushf
ds
fs
insb
ret
lods
aaa
sbb
mov
leave
imul
jno
xchg
xchg
lods
stc
bound
into
idivl
dec
mov
mov
mov
das
daa
enter
clc
fwait
push
arpl
ljmp
adc
or
cmpsl
out
or
mov
and
repnz
hlt
sbb
test
outsb
sub
xchg
inc
jecxz
inc
movsb
rcll
mov
sub
push
int3
call
stc
adc
sbb
jns
in
adc
push
push
inc
mov
mov
lret
into
cmp
cmpsb
adc
inc
xchg
pop
push
and
or
add
xchg
and
dec
push
inc
pop
arpl
fmull
std
xor
call
jecxz
push
push
mov
mov
pxor
ja
mov
sub
add
mov
test
or
dec
cmpsl
test
roll
mov
addr16
gs
mov
jns
pop
out
jle
fbld
inc
add
stos
int3
shr
inc
dec
push
dec
mov
and
or
sti
mov
xchg
sbb
push
aas
sbb
xchg
into
loopne
lds
pop
lahf
mov
insl
xor
loope
mov
push
cmp
lcall
jge
mov
jmp
cmp
xchg
dec
and
shl
xlat
sahf
scas
subb
arpl
jmp
outsl
xchg
popa
xchg
hlt
scas
je
add
test
inc
into
ret
pop
int
mov
adc
gs
push
cmp
movsb
loope
test
loopne
cs
push
pop
and
jle
ja
in
rcll
in
icebp
jne
std
mov
in
lret
dec
insb
js
out
dec
insb
out
out
mov
add
ret
pushf
cmp
arpl
popa
pop
ljmp
push
or
sub
xchg
lds
and
das
into
or
or
or
sbb
pop
fsubs
stos
insl
jno
lahf
in
pop
cmpsb
lea
dec
popa
pop
inc
fistl
sub
pop
data16
ret
sbb
add
sbb
mov
sub
dec
inc
lods
lds
ret
or
seta
das
xor
inc
test
sbb
xor
pusha
mov
jg
adc
mov
jmp
and
mov
sti
jp
stc
enter
daa
jp
fldenv
int
popa
mov
add
test
jl
push
xchg
mov
cld
scas
sub
dec
subb
call
jnp
insb
iret
aaa
xor
fbld
ds
out
sub
mov
iret
scas
mov
adc
push
sarb
and
jl
adc
andl
ja
outsl
pop
dec
cmpsb
add
in
sar
call
inc
test
sahf
mov
xchg
insl
dec
mov
cmc
and
in
gs
mov
xor
stos
pop
and
inc
icebp
daa
hlt
mov
hlt
adc
sub
inc
xor
or
enter
adc
dec
leavew
jg
arpl
adc
push
cmp
dec
push
int3
xchg
mov
sbb
add
mov
jne
push
enter
xchg
or
daa
sbb
push
jg
pop
jmp
mov
fstpt
data16
ret
sub
cmpsl
sbb
les
fcmovb
mov
push
test
jae
cmp
enter
jecxz
pop
data16
test
cmp
mov
adc
sub
adc
sbb
pand
test
ljmp
inc
cmp
jne
xor
cmp
insl
lds
call
popa
inc
cmc
mov
in
mov
in
lods
cld
and
dec
call
push
sbb
js
cltd
adc
ret
inc
xor
xlat
jl
pushf
or
gs
mov
pop
cmc
and
mov
mov
test
test
pop
mov
clc
mov
jecxz
mov
inc
xchg
pusha
push
inc
sti
xchg
xor
push
inc
call
aas
prefetch
xor
lahf
gs
push
cld
ss
pop
je
andl
repz
sub
adc
mov
add
loopne
notb
out
xlat
add
xchg
testb
add
sahf
lods
and
addr16
mov
pop
lods
jne
fisubl
mov
movsb
and
subb
ficomps
jl
iret
push
pop
inc
sub
mov
push
repnz
cmpsl
cwtl
or
mov
pop
xor
jne
pushf
hlt
xor
shll
sbb
leave
xorl
arpl
pushf
pop
imulb
mov
sub
in
dec
ljmp
lcall
jle
pop
lods
mov
fwait
cmp
imul
and
fdivs
movzwl
call
push
test
and
je
dec
dec
mov
das
scas
insl
dec
push
sbb
mov
mov
mov
sub
call
mov
fidivrl
xor
in
repz
clc
insb
sahf
jge,pn
push
inc
cmc
test
ja
and
sti
ror
mov
daa
scas
xlat
pop
insb
cmpsb
div
sub
test
mov
and
pop
scas
bound
imul
aaa
imul
aaa
ljmp
sbb
stos
lahf
mov
and
xor
sub
push
iret
jmp
adc
and
mov
lcall
push
xchg
or
addr16
jp
push
test
push
pop
xor
imul
insb
imul
or
inc
add
mov
pop
leave
inc
or
mov
jge
mov
je
inc
sarb
lret
xchg
out
mov
sbb
dec
repnz
ret
jecxz
pop
jne
mov
popa
in
pop
imul
popf
sbb
int3
in
insb
dec
cmpsb
movsb
add
lock
xor
mov
lds
xchg
cltd
sub
ljmp
nop
insl
or
mov
sub
cmpsb
pusha
sbb
call
lret
push
sbb
or
imul
cs
out
mov
aaa
inc
mov
add
push
ds
es
shll
or
shll
adc
inc
xchg
pop
and
xchg
mov
in
pop
divl
and
sub
or
add
inc
bound
xor
add
jnp
pusha
fdiv
mov
insl
jne
mov
xchg
sub
cmpsb
add
dec
add
data16
aad
xchg
xlat
or
jmp
pop
cs
sbb
add
cmpsl
add
mov
xor
frstor
dec
or
scas
leave
push
or
xorb
pop
iret
aas
pushf
xchg
arpl
les
ss
ljmp
addr16
enter
xchg
cs
std
mov
lds
lahf
scas
jae
inc
cmp
mov
xchg
or
dec
js
mov
mov
popf
mov
and
shlb
or
imul
xor
sub
and
inc
je,pt
cmp
and
dec
mov
add
movsb
negl
fstpt
shll
cmp
dec
mov
mov
mov
les
jno
repz
ss
cli
add
dec
nop
jp
fs
aad
imul
out
dec
push
cmp
mov
aad
dec
cld
adc
pusha
dec
ret
pop
fwait
push
popa
cs
sahf
aam
xchg
lods
imul
int
xchg
aam
andb
push
adc
pop
mov
fldl
xor
jge
gs
xor
cmc
in
xchg
or
jbe
add
push
push
mov
sub
sbb
push
inc
xchg
loop
or
aad
mov
test
popf
xor
rcl
jp
lds
stos
dec
sub
nop
in
fwait
stos
mov
ljmp
jne
inc
sub
mov
lret
bound
dec
pop
shl
test
popa
js
xchg
fwait
xchg
cmp
dec
push
jne
xchg
sbb
ja
outsl
cwtl
jge
or
shrl
dec
shll
pop
add
dec
bnd
pop
push
popf
movsb
into
push
xchg
lret
mov
pop
sahf
sbb
adcb
ret
popa
sub
mov
push
std
adc
sti
jle
lock
movsb
popf
mov
mov
call
jl
popl
test
mov
testb
pop
xchg
xchg
xorl
movsb
addr16
mov
add
mov
aad
mov
inc
popa
sbb
inc
stos
idivb
in
and
clc
lods
sbb
push
sbb
in
push
push
or
xchg
sub
into
mov
lds
adc
mov
mov
loop
sub
and
imul
dec
mov
dec
mov
stc
iret
loop
pusha
dec
cs
sub
fdivrl
test
stos
pop
mov
int3
cmc
int
pop
push
ror
mov
lods
push
movsl
xchg
scas
mov
shll
outsl
int
stos
les
out
fisttpl
in
mov
pop
test
sbb
inc
out
pop
sahf
cmp
test
out
popf
imul
cmp
pop
cmp
test
sub
pop
adc
mov
xlat
sbb
sub
and
leave
lret
call
int
add
jo
in
push
inc
or
inc
mov
dec
lret
jb
stos
lret
xor
les
das
cmp
pusha
pop
mov
fdivs
and
out
cmp
cwtl
leave
mov
cmpsl
add
out
pop
movsl
or
andb
outsb
mov
into
imul
mov
xor
shrb
scas
arpl
push
dec
or
aad
mov
gs
test
fcompl
mov
hlt
scas
or
lock
in
imulb
xor
lods
stc
jo
inc
or
jp
pop
pop
push
scas
andl
in
push
xor
ds
cmpsl
lock
mov
andb
adcb
sbb
lock
push
mov
hlt
cmc
addr16
cmp
das
pop
push
mov
adc
aad
sub
pop
leave
dec
adc
movsl
lret
outsl
cs
jecxz
dec
and
jbe
andb
dec
imul
add
sahf
jbe
sbb
sbb
daa
addr16
jecxz
addb
fiadds
fs
xchg
sti
add
in
jnp
aam
pusha
sub
fisttps
pop
inc
xor
loopne
mov
cltd
push
dec
push
or
inc
shrl
pop
xchg
jae
roll
sti
add
dec
push
cmp
or
or
scas
mov
mov
push
jnp
das
jle
imul
push
dec
xchg
mov
sub
loopne
out
cmp
push
sbb
add
sarl
in
outsb
sbb
out
and
xchg
or
adc
add
popf
push
cmp
test
fistpl
lds
adc
mov
jecxz
leave
pop
pusha
jg
int3
loopne
out
mov
leave
xor
dec
dec
rorl
jae
jne
pop
push
pop
loope
jp
add
insl
jecxz
or
fidivrs
fidivrl
out
push
mov
ljmp
cli
sbb
mov
pushf
xchg
inc
mov
inc
je
push
in
aad
xor
xchg
pop
std
in
aaa
into
dec
fidivl
stos
shll
rclb
push
not
mov
inc
fbld
in
aad
sub
mov
test
cmp
mov
mov
scas
lea
rcll
dec
andl
add
add
sub
test
imul
sub
outsl
mov
add
or
mov
fisubrl
nop
push
cmpsb
fstpt
dec
aam
sbbb
or
push
xor
sub
jo
mov
pusha
or
mov
adc
rclb
jecxz
into
int
pop
push
imul
mov
sbb
gs
push
dec
xchg
call
adc
fst
je
dec
jno
cmc
ret
mov
and
daa
jg
iret
cmp
out
fmull
mov
out
fidivs
pop
fldcw
sbb
sub
and
dec
ljmp
shll
sarl
shrl
scas
inc
pop
or
or
pop
sbb
lods
gs
divl
xchg
push
es
sbb
and
or
insl
sbbl
xor
sbb
xchg
push
mov
outsb
ljmp
cmp
test
adc
incl
xchg
rol
adc
xchg
insl
xchg
fmul
mov
cmpb
fisttpl
jbe
jb
push
inc
jle
popf
mov
leave
sbb
xchg
xor
sub
lds
inc
inc
mov
les
std
jl
pushf
sbb
pop
mov
ret
pop
mov
gs
out
jmp
xor
or
cld
arpl
dec
xor
lret
cltd
sub
cmp
xchg
sarb
mov
sub
into
pop
gs
sub
inc
sub
lret
in
jmp
or
negl
addl
fists
sub
cmp
cs
stos
or
jmp
into
rcrl
jbe
nop
ret
jl
add
pop
idiv
mov
and
das
or
jno
xchg
xlat
adc
dec
push
sub
cmp
xchg
shll
xchg
pushf
inc
fdivs
je
pop
cmp
and
outsl
lret
int
imul
ds
mov
or
dec
xchg
jo
jle
fbld
jno
ljmp
dec
or
push
test
sbb
push
mov
mov
lods
pop
add
int3
repz
pop
test
push
mov
adc
push
cmp
cmp
sti
js
loop
hlt
fdivrl
hlt
dec
push
cmp
xchg
mov
lock
pop
imul
insl
test
test
push
mov
cmp
jmp
aad
push
push
je
test
dec
popa
mov
ja
mov
pop
fsts
lock
or
pop
sbb
loopne
loope
pushl
out
add
repnz
popa
fwait
mov
or
int
fmuls
scas
andb
add
sbb
mov
ret
jmp
hlt
rorl
in
and
es
sub
in
jnp
lret
mov
enter
bound
push
pop
sbb
add
fadds
or
imul
adc
movsl
jno
aam
push
and
fcoms
hlt
mov
cwtl
xlat
cmp
fadds
mov
les
mov
and
fmulp
or
mov
sbb
xor
aas
sbb
sbb
sti
pusha
push
dec
outsl
outsl
int3
mov
sub
stc
mov
jmp
push
push
dec
push
mov
fs
mov
pop
hlt
fisttps
hlt
outsb
push
push
add
xor
inc
sub
mov
addr16
int3
fwait
cltd
inc
xchg
jp
aad
sub
push
push
data16
or
xor
pop
mov
pop
aas
or
test
mov
popa
cmpsl
mov
loope
movhps
sahf
mov
call
popf
adc
dec
icebp
fs
arpl
in
sbb
mov
subl
clc
out
cmp
fidivs
lods
push
scas
mov
mov
dec
iret
outsb
mov
add
jo
pop
stos
cmp
lea
insl
jns
sub
sbb
sub
lds
add
jmp
and
dec
mov
inc
lret
fwait
sbb
shrb
adcb
orl
sbb
lahf
ss
cmc
add
pop
lcall
fcoms
inc
add
jecxz
aas
adcl
scas
xorb
sbb
enter
jbe
inc
pop
cmp
sbb
mov
addr16
sub
dec
push
dec
and
sbb
jge
add
inc
repz
jo
jo
adc
mov
xchg
mov
lret
xchg
mov
or
imul
stc
mov
xchg
arpl
fs
and
sbb
jecxz
jmp
pusha
jb
aad
aam
push
aas
xchg
stos
fistpl
add
jl
fcomps
cltd
mov
repnz
push
imul
xchg
aad
fildl
imul
nop
sub
push
lds
push
aas
jne
mov
cs
into
and
rorl
cmpsb
jns
mov
inc
inc
pop
in
jge
mov
jmp
lcall
dec
shlb
xor
cltd
call
sub
fnstcw
inc
dec
mov
cltd
loopne
add
hlt
loope
adc
mov
inc
add
add
test
inc
jo
das
pop
lcall
fadds
jno
xchg
cmp
push
or
fadds
loop
shlb
cmp
pop
stc
jnp
rorl
inc
jecxz
jne
sbb
sbb
out
cmpl
lcall
movsl
iret
pop
rcrl
mov
gs
dec
lahf
mov
push
pop
mov
xorb
push
scas
sarl
pop
mov
and
je
and
and
jb
cwtl
into
imul
xchg
jmp
or
xchg
push
stos
lock
and
jmp
pop
cmp
mov
xchg
inc
stos
mov
inc
inc
push
popa
das
push
out
sbb
adc
cmp
popf
add
jp
sahf
iret
rcl
add
jns
stos
ss
popa
xchg
retw
es
xor
dec
lret
ror
scas
cmp
rolb
push
repnz
test
xor
cmp
sub
sub
subl
push
adc
mov
mov
cmp
adc
pop
mov
adc
xchg
mov
and
lods
xor
lock
cmp
or
enter
push
sub
mov
lea
cmpsl
lea
data16
loope
lret
sbb
idivb
sub
sbb
js
xchg
inc
out
cltd
outsl
cltd
imul
ljmp
dec
xchg
adc
jecxz
scas
push
lea
push
adc
dec
push
repz
jmp
adc
push
div
fmulp
fs
rolb
and
fldcw
inc
das
push
cmp
stos
popa
mov
fdivrs
idivl
and
es
pop
jle
add
jl
andb
stos
push
jmp
xchg
sbbl
imul
lods
fimuls
loope
xor
cmp
or
jge
pop
add
roll
cmp
mov
sub
fmull
inc
lcall
das
jg
movsl
xor
stc
xchg
ds
inc
mov
movsb
sub
sti
data16
les
jp
lret
fistl
xor
iret
call
sbb
dec
cmpsb
ds
pop
inc
mov
mov
push
and
jns
dec
out
push
into
dec
cmp
jnp
lcall
sarb
xor
ja
subl
das
mov
inc
sbb
mull
stc
xor
sub
lret
cmc
shlb
lods
sub
int
jmp
arpl
sbb
dec
ja
mov
cltd
jl
adc
std
loope
sbb
lret
push
and
xchg
nop
or
jle
xlat
push
out
pop
push
test
aas
rcl
js
sar
jg
mov
xchg
or
aaa
fldl
adc
pop
scas
add
enter
loopne
iret
popa
cmp
neg
xchg
jge
and
insb
mov
pop
testl
xor
inc
pop
fiaddl
movsl
jecxz
or
push
pop
xor
inc
in
xor
test
ret
sbb
repz
into
stos
inc
mov
sub
xor
gs
cmp
repnz
stos
icebp
popf
mov
pop
fisubrs
push
pushf
push
pop
mov
rol
lret
xor
fwait
mov
cmp
xchg
pop
cmp
dec
in
xchg
daa
repz
or
imull
pop
mov
gs
pusha
sub
data16
into
jnp
push
sub
xchg
adc
pop
jmp
pop
nop
xchg
js
xchg
mov
loop
les
and
mov
cmp
je
xor
pop
cli
lcall
inc
dec
add
jmp
aaa
or
je
push
call
mov
cmpsl
gs
adc
outsb
xor
out
xlat
jae
js
xor
orl
bound
push
pop
pop
push
jecxz
mov
mov
jle
out
lret
lret
adc
dec
int
movsb
mov
out
jle
pop
mov
out
out
cmp
js
fisttpll
jecxz
aas
mov
fisubl
jge
add
int3
jmp
icebp
insb
shlb
add
mov
inc
aad
stc
mov
loopne
arpl
dec
out
jo
push
jae
mov
cmp
and
mov
mov
loop
mov
mov
popa
and
jp
pop
push
stos
xchg
mov
push
or
clc
stos
dec
add
dec
fwait
in
or
sbb
mov
mov
scas
lret
negb
dec
cmp
leave
jnp
and
cmc
inc
cmpsl
jmp
lods
je
sarl
inc
add
inc
xchg
stos
lcall
xor
mov
cmp
inc
repz
dec
aas
mov
cld
int
sbb
call
adc
xlat
xor
leave
push
inc
add
mov
mov
cmc
addr16
jbe
mov
outsl
add
lods
pop
cltd
pop
repz
rorl
jmp
pop
cmpsl
test
test
std
and
and
bound
loopne
sbb
xor
lret
add
or
xorl
pushf
popf
or
outsb
lahf
out
lock
imul
test
lahf
adc
adc
movsl
jp
scas
jle
sub
outsl
inc
sbb
jnp
cwtl
xchg
sub
addb
add
neg
lret
jne
xchg
cmp
jle
mov
das
loop
arpl
push
popf
mov
sbb
adc
mov
insl
adc
add
pop
xchg
add
jbe
scas
jp
repz
sub
iret
fadd
push
outsl
ja
sub
jne
into
in
lahf
fstps
lds
outsl
out
bndldx
sbb
outsl
jmp
xchg
test
out
into
mov
int
sub
xorb
ret
mov
push
and
xor
jmp
push
mov
lods
mov
xchg
mov
pop
rcll
push
outsl
sub
jne
aas
inc
inc
pop
mov
mov
pushf
pop
lds
jo
pop
mov
out
hlt
data16
pop
loop
cs
es
mov
and
lahf
mov
inc
mov
inc
imul
jae
ljmp
pop
movsb
push
movsl
fwait
xor
rcrb
shll
sbb
xchg
jecxz
push
stos
or
es
stos
push
and
imul
mov
dec
rorb
into
add
lahf
or
mov
outsl
out
popl
movsl
repz
pusha
xchg
lcall
xor
jecxz
pop
push
lea
pop
and
jae
imul
es
dec
sbb
sub
in
or
inc
jmp
lret
sbb
test
clc
sub
loopne
lods
aad
jne
gs
loop
mov
mov
add
cmp
cmp
inc
fcmovnb
pop
test
clc
lods
jne
adc
and
jg
call
in
xchg
test
ret
jne
inc
popa
jne
lret
push
cmp
pop
sahf
add
stos
jns
xlat
pusha
or
enter
icebp
ljmp
cwtl
filds
add
adc
mov
mull
in
fsts
fsubrl
pop
jecxz
mov
mov
cltd
shl
mov
js
popf
icebp
xchg
adcl
das
pop
into
cmp
jmp
daa
sbb
out
incl
daa
dec
mov
test
add
or
out
shll
pop
or
sbb
mov
sub
repz
jmp
lods
inc
jae
imul
loop
add
lock
filds
push
adc
mov
xor
xchg
fistps
adc
aad
mov
jge
push
pop
push
add
test
adc
lea
stos
aad
ret
inc
adc
mov
jp
shll
sbb
pop
arpl
aam
enter
int3
imul
adc
dec
movsb
mov
add
rcrb
int
stos
stc
imul
test
in
inc
xchg
jo
imul
fsubl
aad
lods
incb
lods
ret
leave
sbb
or
cs
jns
mov
imul
jg
fisubrs
adc
and
imul
mov
fcoms
fisttpll
daa
xchg
xor
mov
adc
xchg
lahf
mov
xchg
cmpsl
pop
sub
mov
cli
loopne
stos
ja
sbb
jl
iret
mov
sbb
test
cs
push
shlb
js
xchg
mov
movb
pop
push
iret
cmpsb
or
lret
subb
js
xor
add
mov
xchg
mov
mov
dec
pop
stc
push
shlb
or
lock
push
testl
adc
pop
sbb
pusha
adc
fwait
xor
jb
mov
insl
mov
pushl
mov
push
sbb
aas
fwait
pop
push
sub
div
cmp
push
das
mov
jl
notl
xor
mov
aas
stos
roll
or
negb
movsb
mov
xchg
and
inc
mov
pop
push
imul
add
data16
xchg
cltd
adc
jle
lods
lahf
add
cld
lahf
dec
dec
in
bound
mov
ret
lahf
lcall
addr16
sub
and
scas
adc
sti
xchg
lock
inc
test
dec
adc
xchg
jp
add
ret
dec
cmp
cmp
add
pop
cwtl
nop/reserved
pop
gs
and
or
mov
inc
xlat
jo
jp
cmp
dec
fwait
lods
loopne
lds
jecxz
xor
jmp
or
and
push
and
in
outsb
into
data16
test
int
aad
or
movsb
les
test
out
ds
add
iret
fdivrp
out
push
mov
negl
pop
sub
scas
or
enter
sub
and
gs
je
mov
jg
cmp
mov
sahf
jmp
jae
ja
sti
inc
aaa
sub
sbb
fwait
gs
sub
adc
add
fisttpll
cmp
test
stos
mov
sub
fsubr
aaa
les
enter
pop
les
mov
xor
xchg
mov
and
test
cli
enter
inc
addb
and
pushf
or
dec
insb
pop
cmc
jnp
adc
pop
cmc
popf
mov
adc
fsubrs
or
enter
sub
pushf
je
and
adc
movsl
fildl
jne
pcmpgtw
mov
mov
sub
iret
cmp
jne
push
dec
sbb
sub
cs
int3
sub
or
in
jmp
fisttps
repz
pop
mov
and
imul
outsb
setne
pop
xchg
out
add
test
lea
fidivrl
mov
xorl
mov
movb
mov
je
leave
das
pop
mov
xchg
popa
push
enter
jbe
add
mov
sub
mov
adc
jo
das
testl
pop
mov
fcmovnb
cwtl
pop
inc
xchg
mov
fwait
hlt
inc
lret
cli
sbb
mov
push
pop
decl
push
jg
sti
jmp
outsb
or
mov
mov
inc
xchg
fimull
in
sbb
inc
pop
push
inc
cmp
cmp
add
aam
stos
mov
pusha
mov
pop
sub
in
stos
scas
mov
jecxz
popa
sub
push
mov
push
fistps
out
inc
xchg
test
cmc
test
jno
sbb
xchg
decl
test
js
add
jb
ret
push
in
shrb
sub
sub
ss
add
fildl
pushf
inc
mov
decl
aas
xchg
sub
mov
in
in
xchg
jbe
adc
scas
add
xchg
push
scas
inc
mov
jne
push
aaa
sbb
dec
imul
fdivrl
mov
adc
dec
outsb
in
push
hlt
sub
addb
imul
daa
in
cmp
sub
sti
and
outsb
mov
fistps
add
idiv
inc
and
ret
add
xor
add
in
out
je
xor
cmp
mov
or
mov
push
stc
mov
ss
subl
jmp
iret
mov
iret
push
popa
jmp
fistpll
or
pusha
add
sbb
xlat
cltd
cmp
sbb
mov
jg
xor
out
cmp
add
mov
or
dec
loopne
out
dec
lea
sub
sar
or
push
movsb
imul
je
cmp
pop
gs
popf
jbe
mov
filds
shrl
cs
jge
jno
dec
lcall
int3
stos
push
mov
mov
out
mov
mov
add
mov
popa
fbstp
mov
mov
fucomp
adc
aad
adc
xor
sbb
lds
cmp
push
repnz
out
cmp
test
pusha
in
xor
and
push
mov
jle
sbb
push
sbb
jle
in
cmpsl
xchg
in
mov
sub
mov
imul
popf
inc
fdivrs
inc
xchg
leave
sarb
push
sbb
cmp
pop
and
data16
in
xchg
and
fistps
shll
cmp
inc
mov
or
cld
jecxz
or
icebp
mov
cmp
decl
cltd
cmp
push
stc
pop
sbb
cmp
jmp
mov
push
jae
dec
mov
xor
loopne
je
pop
fsts
into
shl
mov
mov
iret
es
and
and
mov
fs
out
cmp
mov
push
mov
insb
aaa
popa
jne
inc
pop
subb
push
mov
aaa
jb
lcall
popa
mov
lock
push
mov
not
pushf
mov
ss
cmp
sub
push
mov
cmp
cmpsb
decb
mov
jmp
sbb
jmp
movb
imull
es
lods
push
pop
stc
and
scas
mov
and
cmp
pop
out
mov
xchg
ja
cmp
jl
push
xorl
pop
jo
dec
ja
cmpsl
add
sarl
inc
in
pusha
lods
pop
jnp
dec
xorb
lahf
insb
outsl
imul
dec
or
je
orl
loopne
sub
in
jae
xlat
inc
icebp
pusha
es
es
xor
cmc
or
pop
sti
or
hlt
imul
cld
fbstp
nop
pop
aad
addr16
stos
arpl
insl
int3
cmp
enter
mov
pop
loop
rorb
sbb
in
outsb
dec
mov
and
xor
mov
cmp
sti
sub
aam
imul
adc
aad
rorb
out
pop
xchg
gs
mov
push
rclb
dec
cmpsl
jp
sbb
jne
sbb
mov
push
movsb
mov
adc
int
jbe
mov
sti
push
and
adc
into
in
lods
add
je
xor
dec
test
sbb
xlat
jnp
imul
adc
movsl
movsb
xor
fwait
lret
cwtl
cmp
push
rorb
loopne
xor
cmpsl
jbe
sub
in
ret
xor
xchg
jle
int3
sbb
fisubl
pop
ja
filds
mov
cmp
aas
aas
jmp
push
daa
ficoms
jle
enter
adc
das
fnstenv
cld
stos
pop
and
ret
xchg
dec
dec
pop
std
sbb
add
sbb
and
into
scas
cwtl
mov
fistl
arpl
or
in
fwait
sub
mov
decb
daa
inc
into
out
push
sti
push
mov
mov
add
xchg
stc
cmp
pop
idivb
xlat
inc
inc
scas
ds
xor
aam
or
xchg
sbb
adc
adc
xchg
jl
scas
or
dec
inc
bound
int
fs
mov
jecxz
pop
push
jp
ds
std
cmp
mov
mov
xor
push
inc
inc
ds
inc
sbb
cs
push
push
mov
xor
mov
les
adc
in
cmp
mov
flds
popa
icebp
push
arpl
cmp
jg
adc
cmc
push
aad
out
xor
cmpsb
mov
out
nop
pusha
leave
sub
in
and
xor
int
sub
xchg
outsl
pop
push
int
push
mov
jae
jnp
imul
sti
sahf
push
sub
mov
xchg
mov
cwtl
lret
mov
dec
scas
push
add
in
pop
push
inc
lret
adc
xchg
add
ret
mov
cmp
ficomps
faddp
iret
mull
jmp
fnsetpm(287
inc
push
adc
mov
pop
fnstcw
mov
dec
aaa
scas
sbb
mov
addr16
sub
popa
sbb
incl
jb
dec
setns
jp
addr16
xchg
les
js
xchg
sbbb
int3
sub
stc
jb
jl
push
and
lods
enter
stos
sbb
cwtl
repnz
mov
push
and
fistps
push
ret
mov
dec
pushf
dec
mov
mov
aad
into
mov
js
pop
dec
orb
dec
cs
push
pop
and
xchg
add
adc
in
push
fsubrs
push
mov
xor
es
movsl
popa
fxch
mov
sahf
adc
mov
icebp
sti
fcoms
push
ret
sbb
xchg
lods
mov
sar
and
mov
cmp
subl
fadds
scas
popa
fistpll
pop
outsb
das
jle
fidivl
xor
popa
adc
push
push
push
call
ljmp
in
fstpl
loope
sub
stc
or
insl
push
mov
mov
mov
repnz
adc
jge
jge
pop
rorl
scas
sbb
ja
push
or
movsl
sbb
lret
xorl
test
mov
cmc
lret
loop
ret
push
or
sub
les
and
jne
js
jno
mov
repz
jo
push
stos
jecxz
jb
sbb
jbe
and
test
jns
in
ret
mov
mov
jle
push
cmpsb
sub
cli
sbb
ret
jmp
or
lret
sub
and
cltd
mov
xchg
or
aaa
out
scas
roll
sub
daa
jae
lcall
hlt
pop
and
push
cltd
test
sbb
test
andb
jecxz
or
mov
aaa
jge
jecxz
push
aaa
sub
push
outsl
adc
and
fwait
push
fimuls
mov
pop
sbb
inc
and
push
scas
mov
xlat
in
mov
lds
pop
adcb
ljmp
js
push
sub
mov
test
and
outsb
jge
mov
stc
lods
cmp
movsl
fmuls
pop
dec
je
pop
mov
adc
dec
js
mov
xchg
stos
out
sti
gs
cmp
add
les
jno
int
sbb
shrb
mov
cld
mov
adc
push
in
fcompl
outsl
call
repnz
out
sti
std
xor
mov
xchg
jb
sbb
jmp
xchg
inc
idivl
mov
test
dec
imul
mov
pop
scas
dec
adc
push
jp
mov
lods
jg
inc
adc
and
js
sahf
icebp
push
or
mov
or
pop
popf
xchg
and
lret
xchg
lods
js
jge
or
mov
sbb
jo
movsb
add
int3
cmp
stos
push
add
cltd
ds
test
cmp
or
clc
lret
sub
jmp
push
aaa
lea
into
shrb
push
jle
xchg
add
sbb
mov
adc
inc
stos
mov
rcl
aas
inc
mov
fs
dec
push
es
add
pop
pop
js
inc
add
arpl
inc
pop
lock
shr
in
mov
fs
cli
cli
or
cmpsl
mov
int
aaa
jns
stos
inc
cmp
xchg
push
mov
or
into
fisubrs
dec
loop
aam
inc
out
pop
lret
and
add
outsl
pop
sbb
push
mov
mov
inc
pop
push
dec
xchg
ss
xchg
mov
les
movsl
pop
and
sbb
inc
hlt
std
and
ds
jns
mull
and
shl
les
test
xor
adc
outsb
pop
dec
xchg
sub
lock
push
lret
adc
or
dec
mov
faddl
data16
jge
test
iret
js
repnz
test
push
mov
arpl
jmp
imul
jl
idivl
mov
or
xor
xor
mov
jmp
pop
outsb
sub
out
adc
cmp
sti
sahf
sub
lahf
loop
cmp
sahf
sbb
jbe
adc
xlat
mov
loope
xchg
repz
test
ret
sub
stos
and
test
dec
push
or
push
testb
in
std
jle
jnp
or
or
and
mov
out
ljmp
in
rclb
dec
stos
add
lods
test
pop
ja
pop
sbb
push
sub
and
fsub
hlt
lcall
lea
daa
adc
pop
mov
cmovnp
lds
mov
lret
dec
cmpsb
add
mov
mov
adc
je
xor
leave
cmp
pop
scas
mov
es
mov
lcall
into
es
int3
in
addr16
push
imul
jns
sbb
xchg
call
and
jge
mov
sbb
jmp
fdivl
push
lahf
pop
fsubrl
sub
and
out
xchg
movsb
lods
fidivl
push
add
xor
clc
insl
stc
hlt
movsl
sbb
mov
test
dec
stos
sahf
testl
jp
lea
jge
lcall
jbe
dec
xor
lds
test
in
jmp
mov
shrl
push
fcompl
jge
fisttps
mov
outsl
fsub
jbe
into
test
adc
add
cli
add
adc
popa
mov
shrb
in
xor
fstpl
enter
leave
xor
ja
fsubs
data16
lods
cltd
xchg
out
cwtl
insl
xchg
xchg
dec
push
jecxz
mov
enter
into
mov
out
in
fimull
ds
jmp
out
ss
int
iret
adc
fs
cmc
push
sub
dec
shl
mov
subl
lods
sti
xor
xchg
sahf
sahf
adc
pop
pop
fistl
mov
test
pop
mov
or
data16
pop
fimull
jns
push
sar
hlt
movsb
loop
ds
mov
arpl
sub
mov
ja
stc
mov
push
adcl
or
mov
xlat
pusha
pop
mov
gs
clc
scas
pop
hlt
shrb
cmp
pop
shll
loopne
faddl
jno
dec
sub
jbe
push
jne
and
ja
movsb
jmp
mulb
sub
je
fidivrs
sahf
push
adc
mov
cmp
mov
out
call
sbb
adc
icebp
mov
pop
nop
add
jp
cmp
sub
fistl
xchg
mov
mov
jae
jp
mov
dec
pop
pop
and
and
lds
pop
outsb
mov
or
mov
mov
in
inc
sbb
xchg
xchg
jnp
pop
clc
lods
test
xchg
push
inc
fdivr
jbe,pn
add
push
xchg
enter
popl
xor
push
inc
lock
jb
jmp
mov
xor
movsb
xor
popa
sarl
call
cwtl
rcrb
cmp
dec
push
stos
mov
divb
inc
aam
outsl
int
lea
sub
shlb
sub
dec
sbb
enter
xchg
add
movsb
leave
jp
pop
jno
or
push
or
mov
ljmp
js
mov
ja
test
mov
mov
cmp
insb
js
sub
pop
stos
leave
mov
push
and
mov
and
mov
xor
sub
mov
xchg
scas
movups
fmull
ja
push
xor
repz
xchg
jmp
fcoml
cwtl
mov
mov
jmp
push
popf
in
jl
jp
lret
adc
hlt
sbb
pop
lret
mov
mov
dec
dec
xorb
mov
out
or
dec
insb
xor
pop
in
dec
daa
icebp
arpl
insb
cmp
fwait
jnp
sti
aaa
adc
pop
lods
and
push
je
lea
lock
mov
scas
imul
out
cs
scas
or
cmp
in
xor
inc
enter
out
hlt
sub
pop
inc
ds
xchg
pop
fildl
aaa
das
stc
pop
push
adc
ss
pop
mov
push
pop
adc
cmc
aad
in
fdivp
mov
push
sti
push
imul
adc
in
push
cli
xchg
jno
fimuls
in
shrb
jb
scas
add
dec
pushf
add
add
test
pop
pop
in
mov
sub
idivl
mov
jbe
in
aaa
or
loop
jne
pop
adcb
cmc
jne
sbb
cmpsb
pusha
adc
push
jae
out
jo
inc
pop
pusha
test
cmpsl
cmp
or
js
and
movsb
rcrb
add
shrb
int
sub
xchg
push
les
test
lds
xor
dec
and
sub
lods
data16
xchg
sub
sub
andb
pop
loop
addr16
xchg
inc
clc
cmp
stos
pop
test
add
out
pusha
and
ss
mov
mov
xchg
aas
add
xor
cmp
jae
mov
jo
pop
push
jle
sub
call
sub
clc
shrb
mov
hlt
mov
test
enter
xor
int3
test
loopne
lods
pop
fstps
jo
or
das
popa
mov
pop
loopne
rol
sub
inc
sbb
popa
in
jo
sbb
push
add
and
lock
test
out
jg
dec
test
or
out
in
leave
jno
sub
mov
dec
das
or
adc
inc
mov
sub
push
loope
cmpsb
repnz
jne
out
cltd
sbb
fnstcw
jl
dec
imul
repnz
stos
lea
add
pop
sbb
push
cmpl
or
push
repz
pop
cmc
jnp
rcll
and
sub
cwtl
cmpsb
xchg
xorl
sti
dec
test
adc
enter
stos
outsl
fimull
pop
inc
push
call
in
daa
ss
mov
cwtl
addl
sbb
int3
sub
test
popf
popf
add
inc
test
aad
pop
cmpl
adc
hlt
int
dec
pushf
rorl
dec
mov
fmull
fcompl
sub
jle
sub
int3
jmp
outsb
aam
aas
dec
outsl
sub
call
xlat
inc
xor
loope
mov
rorl
xor
sbb
popf
nop
mov
jl
inc
push
inc
adc
add
sti
xor
adc
fldcw
cli
jne
and
pop
mov
ret
insb
mov
xchg
dec
lret
pop
adc
pushf
jnp
test
or
mov
out
lods
fiaddl
lcall
mov
push
jg
loope
sbb
pusha
add
loope
mov
dec
aaa
jae
or
lea
sbb
addl
test
jb
out
dec
push
daa
mov
fistl
stos
xor
aas
ss
lcall
pop
idivb
movsl
cmp
loopne
ljmp
xor
outsl
mov
sbb
stos
fiaddl
insl
push
fcompl
movsl
inc
shlb
pop
push
dec
xor
sbb
jmp
cmp
shrl
inc
mov
hlt
or
mov
xchg
mov
data16
ficomps
xchg
enter
test
pop
sbb
add
mov
pop
cmp
pop
cmp
mov
mov
and
push
pop
outsl
fs
dec
jns
test
shlb
dec
pop
lea
adc
enter
popa
decl
push
jno
daa
lods
xchg
mov
rolb
push
mov
add
xor
scas
xor
xor
push
add
sarb
dec
jns
mov
fwait
mov
pop
xor
xor
jb
sub
std
cli
xlat
inc
dec
fldt
and
push
in
inc
sub
fcoml
sub
cld
loop
mov
jns
xor
cs
cwtl
addb
jb
adc
leave
xchg
jae
mov
mov
pop
addr16
subl
ss
mov
fstpt
pop
cmc
call
xchg
shll
mov
subb
icebp
test
lea
out
nop
repnz
mov
or
xor
loope
and
push
push
sahf
jmp
jg
insl
mov
test
sbb
shll
or
sub
xchg
rclb
lret
in
loopne
movsl
mov
scas
aam
add
pop
cmp
sahf
pushf
test
lods
pop
popa
aas
js
inc
ret
popa
adc
inc
jae
je
stos
adc
mov
enter
lcall
repz
punpckhbw
dec
mov
je
jp
jno
aad
lods
ja
shr
and
lock
pop
jge
loope
pop
imul
ret
cltd
repnz
adc
xchg
daa
or
stos
mov
jo
dec
lret
xchg
sbb
push
pop
dec
sub
arpl
imul
or
mov
popa
pushf
ds
adc
hlt
jg
fcmovnb
or
cld
and
push
leave
cmp
aam
in
lcall
dec
push
ljmp
loopne
ljmp
push
je
push
xor
inc
jmp
adc
inc
iret
xchg
add
mov
adc
les
dec
sbb
jle
leave
ds
lea
pop
mov
mov
fidivrl
cmc
stc
je
jmp
jmp
paddusw
mov
pop
sub
jbe
enter
movsb
stc
sbb
call
ror
fsubrs
pop
pop
arpl
sahf
fstpt
mov
or
cwtl
inc
pop
mov
or
lea
lahf
rorl
and
cmp
xchg
mov
push
cmc
push
xchg
je
into
fidivl
addr16
jb
in
cli
es
xor
inc
subb
push
lea
shll
fisubs
ret
jb
icebp
xchg
outsl
add
les
cmpsb
arpl
add
bound
or
mov
ljmp
xor
dec
les
cld
loopne
push
shrb
jbe
cmp
jle
insl
imul
test
add
xor
adc
mov
mov
lods
mov
ja
sbb
fimull
mov
cmc
clc
add
daa
mov
jae
or
adc
mov
mov
or
into
and
push
out
pop
jae
out
or
xchg
pop
xor
cmp
mov
leave
dec
and
inc
sbb
pop
sub
add
ss
cmp
cmp
scas
mov
mov
sub
sbb
mov
fwait
push
cmpsl
adc
les
push
xchg
rorb
cmpsb
in
or
dec
insb
jne
pop
pusha
jns
mov
dec
sbb
xlat
jne
adcl
push
cmpsb
mov
and
call
xchg
stos
mov
aas
clc
sub
adc
test
pop
lock
and
in
int3
into
int
xchg
es
push
xor
mov
les
jmp
sub
sbb
add
rorb
adc
in
dec
mov
xchg
mull
sub
mov
pushf
inc
insb
pop
inc
inc
sbb
int3
icebp
pop
sbb
xor
pop
fbstp
dec
fimull
into
jae
or
inc
das
cmp
rclb
shlb
int3
pop
loopew
xchg
into
mov
hlt
fwait
mov
rorl
enter
xor
push
jb
push
pop
das
mov
mov
shrb
daa
xor
push
jne
icebp
shrb
or
sub
rcll
adc
loopne
test
out
stos
cmp
mov
xchg
aas
test
push
pop
insb
jmp
jl
jbe
dec
arpl
dec
push
adc
adc
mov
mov
sbb
xorb
pusha
ja
dec
cwtl
mov
cmpsl
fwait
std
inc
iret
and
icebp
lret
pop
jb
stc
push
scas
scas
nop
ds
xor
pop
or
cmp
dec
pop
filds
push
xor
fs
pop
cmpsl
cmpsl
ror
loope
iret
cmp
call
push
insl
scas
jns
inc
pop
sahf
test
jne
jg
iret
pop
enter
push
aad
dec
cmpsb
imul
out
lds
mov
insb
loopne
jno
xor
lea
dec
jp
jp
push
sub
test
jo
sub
pop
xchg
sahf
cltd
ret
test
mov
push
mov
divl
sbb
cmp
adc
jp
mov
lcall
dec
mov
idivl
push
sarl
or
and
idivb
stos
popf
mov
xchg
aaa
into
xchg
ficoms
xor
outsb
xchg
sbb
sub
iret
jo
pop
sub
cmp
xor
cli
scas
inc
test
add
rclb
loope
ljmp
loope
pop
mov
jle
jno
rcrl
int3
jbe
add
mov
push
xlat
xlat
jo
mov
test
mov
iret
popl
stos
sbb
enter
inc
nop
enter
test
hlt
les
insb
adc
and
sbb
lcall
adc
cmp
jp
or
loop
mov
aam
shll
dec
or
imul
je
in
sbb
fldt
mov
adc
push
jmp
sub
sldt
or
mov
xchg
xchg
jg
pop
jbe
sub
pop
xor
loop
aaa
into
cmp
jge
adc
push
jle
xchg
outsl
pop
xchg
imulb
mov
sbb
insb
dec
dec
dec
jno
cld
sbb
push
add
sub
subl
into
mov
cmp
ret
cmpsb
xchg
add
pop
dec
or
and
or
ret
sbb
lcall
cmp
adc
pop
jae
pushf
mov
cmp
add
sub
sbb
int
pop
fildl
add
shr
sbb
adc
dec
jnp
jl
dec
or
mov
xor
test
and
cwtl
aad
cmp
es
mov
push
in
cli
dec
cmp
xor
lret
adc
les
mov
rolb
aam
idivb
or
jl
cwtl
cld
mov
gs
js
push
mov
pop
mov
mov
in
test
lods
hlt
inc
movsb
ficomps
out
in
xorl
cmpsl
movsl
adc
pop
add
jg
movsb
xor
popa
push
inc
in
aad
or
cltd
cmpl
cltd
psubusb
setl
mov
jno
inc
ja
cmc
xchg
mov
loopne
mov
cmp
push
cltd
pop
cmc
mov
cwtl
jns
xchg
adc
mov
in
add
cmpsl
fistl
or
insb
stos
inc
icebp
and
adc
and
cmp
pop
stos
mov
imull
fsubrl
or
cmpsb
fmuls
into
lds
cmc
xchg
shr
jnp
or
sbb
mov
js
sub
pop
xor
cmp
insb
iret
and
and
pusha
xchg
sti
mov
fdivrl
std
fistpl
sub
sbb
aas
mov
sti
xchg
inc
adcl
add
jo
push
mov
outsb
in
jno
jmp
mov
mov
push
popf
add
or
cmp
and
add
je
pop
aas
int
sub
sbbl
mov
lods
sub
out
int
in
call
out
fwait
sarw
inc
js
or
stos
mov
sar
and
push
scas
or
es
push
movd
dec
mov
push
fnstsw
cmp
fbld
ffree
mov
movsb
pushf
into
cmpsb
mov
or
push
mov
push
jp
cs
lock
cmpsb
popa
pop
sub
mov
out
lods
add
shrl
lret
ljmp
mov
testl
fwait
imul
inc
sub
repz
pop
sbb
das
test
xchg
in
aam
mov
test
scas
add
je
xchg
inc
jbe
mov
lahf
mov
insb
filds
inc
test
mov
insl
mov
sbb
mov
xor
pop
sbb
mov
xchg
xlat
cmp
push
aam
push
ljmp
pop
sub
xchg
xor
fucom
lock
jne
ljmp
or
adc
xchg
roll
mov
bound
inc
and
sar
repnz
mov
nop
push
or
outsb
push
jecxz
jge
and
js
mov
jp
icebp
das
mov
mov
mov
stos
push
jle
leave
les
fs
mov
mov
xchg
fists
mov
jecxz
jecxz
push
cmp
inc
xor
sub
fiaddl
inc
xor
push
jp
jge
xchg
out
pop
or
adc
cmpsl
sbb
lea
push
cmc
cmp
mov
or
cwtl
cmp
dec
in
push
test
pop
xchg
fdivs
cli
inc
sti
sarb
pop
and
jbe
ret
jg
push
negl
mov
sbb
es
push
cmpsb
add
mov
stos
and
xor
scas
jl
cs
inc
push
test
mov
je
jae
mov
xchg
jnp
mov
xlat
popf
xchg
bound
mov
mov
cmpsl
cmpsb
mov
nop
fwait
add
push
push
icebp
pop
pop
roll
mov
mov
lds
mov
add
xchg
adc
and
push
sub
negb
cmpsb
scas
aas
push
shl
mov
stos
inc
mov
cmp
fstl
sub
out
stos
lret
mov
cmp
and
push
pop
cld
out
je
pusha
pop
xchg
push
aam
cwtl
outsb
xlat
addr16
push
imul
jo
cmp
xor
xchg
and
int3
clc
into
xchg
push
test
stc
and
push
lea
in
mov
or
ficoml
cli
ret
push
mov
fs
gs
adc
sbb
rorb
sub
imul
xchg
mov
inc
lret
cmp
loopne
ror
lahf
in
mov
stc
int
or
add
push
sarl
call
sub
rcrb
sub
decb
jbe
pop
iret
ret
test
and
int
jl
dec
jle
rcll
and
sarl
inc
jecxz
xor
out
xchg
jb
lea
pop
fucom
fwait
cmp
sbb
fdiv
ret
test
pop
dec
push
jg
or
idivl
cld
add
scas
inc
cmp
cmp
dec
push
lds
lods
fisubrl
out
popa
push
push
push
xchg
ljmp
gs
mov
mov
xorl
lret
not
icebp
pop
sbb
in
ss
add
icebp
inc
pusha
leave
daa
jns
faddp
sbb
fbstp
mov
insl
addl
test
divb
dec
mov
leave
or
sub
int
dec
fsubl
push
push
xlat
data16
fcompl
pop
ss
rol
lret
data16
ret
adc
adc
mov
mov
mov
test
mov
sti
adcl
inc
mov
sub
add
sub
adc
cmp
ficoml
dec
pop
push
mov
push
fistl
push
sub
pop
into
repnz
pop
std
or
popf
fs
les
and
jg
imul
pop
test
add
stc
mov
lea
pushf
xchg
fcoms
mov
or
shl
loopne
dec
mov
rol
stos
popf
push
popa
and
add
inc
test
and
decl
sub
sbb
lods
mov
xchg
jne
lret
and
cmpsl
fbld
shll
sbb
mov
ret
arpl
dec
pop
jle
xor
xor
pop
mov
push
das
lods
xor
pusha
into
xchg
in
push
dec
dec
lcall
xchg
ret
dec
xor
shrl
xchg
xchg
js
ret
xchg
dec
fcmovnu
sbbl
mov
outsl
cmp
xchg
jbe
adc
lea
ret
lods
inc
repz
popf
aaa
push
mov
scas
movsb
adc
push
push
or
test
movsb
sub
jne
lahf
hlt
sahf
jnp
cltd
movsl
mov
cld
in
jnp
xor
xor
jo
and
mov
cmp
sbbb
jns
jp
dec
push
in
mov
pop
mov
mov
frstor
imul
scas
and
arpl
add
xor
pop
or
push
sahf
rcll
xchg
inc
mov
es
pop
mov
push
pop
pop
pop
insl
or
mov
imul
call
sbb
imul
push
and
lret
out
dec
scas
jg
ficoms
pop
fildl
mov
cmc
insb
cwtl
jmp
pop
fsubp
mov
cld
mov
push
jmp
cmpb
mov
lea
or
int3
adc
push
xor
sarb
int3
push
jmp
sub
push
in
cmp
nop
and
xor
fimuls
and
cmp
add
adc
ljmp
jmp
loope
xor
shrb
adc
out
sub
lahf
es
nop
into
imul
ljmp
sahf
add
nop
pop
sbb
fstpt
cmc
jbe
inc
sub
cmp
cmpsb
push
mov
push
push
aas
add
cmp
sbb
mov
outsl
adc
sbb
sarl
xor
out
and
outsl
out
dec
xor
push
je
popa
push
les
roll
addb
jge
aaa
jg
mov
pop
das
cmp
add
sub
sub
or
ret
push
sub
mov
cltd
out
arpl
jae,pn
aad
in
es
cmp
xor
imul
testb
lds
mov
xor
lahf
call
sbb
popf
imul
jns
mov
es
sub
sbb
pop
jmp
popf
fmulp
int3
push
dec
icebp
xor
xorb
jmp
sub
mov
sbb
sbb
inc
sbb
ret
js
fists
xchg
inc
scas
adc
pusha
dec
mov
ljmp
jecxz
xchg
ljmp
scas
lcall
mov
mov
or
or
add
xor
das
sub
out
add
jmp
shlb
cmc
rcl
scas
cmc
pop
outsl
jecxz
in
enter
fisubrl
movsl
push
ss
xchg
and
push
test
lret
jl
mov
jmp
pop
bound
leave
test
insb
int
inc
iret
xor
or
push
bound
lcall
lret
and
stos
test
mov
push
test
orl
add
repz
mov
xchg
inc
stc
inc
inc
insb
mov
mov
stos
xchg
sbb
pcmpgtd
int3
dec
test
repnz
cmp
push
sbb
enter
out
mov
repz
mov
dec
loop
jno
mov
mov
cmp
into
mov
cmpsl
call
add
loope
adc
out
pop
ss
mov
js
cmp
rol
fisubs
adc
lahf
repz
xchg
insb
push
lret
sub
mov
jns,pn
test
jnp
in
mov
mov
mov
add
jbe
roll
xor
pop
mov
pop
xchg
sub
cld
jbe
sub
sbb
fmulp
data16
jae
mov
adcb
sub
jbe
in
imul
sbb
fmull
xchg
iret
dec
sub
js
sbb
push
sub
imul
add
popa
sarb
cmpsl
notb
pop
stos
push
in
sti
cmpb
adc
mov
add
jecxz
das
int
xor
imul
lret
sbb
jnp
stos
fsub
push
xorb
push
pop
loope
or
rcr
mov
pop
cmp
push
adc
imul
cmp
aas
iret
inc
cmp
add
lds
xchg
mov
imull
in
mov
jle
mov
add
js
xor
jle
stc
xor
push
lods
jo
lcall
pusha
dec
xor
mov
and
pop
cli
mov
cmp
aaa
mov
test
inc
jae
enter
or
testl
or
leave
pop
out
pop
mov
add
scas
test
jne
xchg
popf
sbb
xchg
pop
push
cmpsb
xchg
adc
adc
mov
xchg
mov
pop
insl
mov
mov
gs
lods
sub
add
sbb
or
test
and
mov
sub
sbb
ljmp
jne
jp
popa
adc
pushf
in
pop
push
lods
aad
inc
jbe
mov
mov
sbb
fildll
sbb
stc
jle
adc
pop
out
cmp
xchg
push
stos
xchg
inc
pop
in
sbb
and
xchg
mov
cwtl
pop
jo
imul
jge
xor
dec
jecxz
fidivs
xchg
in
adc
and
add
push
popf
std
fisttpl
push
std
ret
mov
lret
enter
test
sahf
add
add
fxch
lds
push
insl
int
inc
inc
out
mov
jl
cmp
xor
movsl
cmpsb
hlt
loopne
jns
out
pop
cmp
fidivl
mov
cmp
jnp
sub
add
and
scas
mov
in
pop
dec
int
pop
adc
adc
xlat
push
ret
ja
xor
add
xor
sub
pop
add
movsl
jge
out
fistpl
icebp
add
or
adc
pop
jo
push
fsubl
pusha
loope
xor
jno
mov
ljmp
incl
pop
sbb
dec
jle
inc
inc
add
lret
ret
push
mov
xchg
push
fldl
dec
loop
mulb
fcoml
addr16
fdivl
mov
sub
adc
pop
inc
ds
fs
shlb
mov
das
leave
ja
loope
or
mov
sbb
sbb
xor
jns
int3
outsl
mov
push
push
sbb
or
addr16
and
add
mov
xor
mov
xchg
rorl
outsl
mov
jbe
loopne
push
mov
mov
ret
out
aad
fcmovnbe
aas
mov
call
push
and
aad
jns
add
mov
test
cmp
mov
nop
leave
inc
jae
mov
add
pop
pop
jmp
mov
jnp
cld
inc
shlb
xor
lret
ret
insl
mov
or
cmp
ds
fwait
xor
ja
test
call
and
xorb
aad
out
ljmp
push
sbb
adc
sub
aam
decb
dec
ds
ljmp
sti
movsb
sub
push
imul
das
cmovo
xor
shlb
lds
les
test
dec
push
cwtl
jne
xchg
in
imul
sub
dec
jbe
insb
xchg
jne
xor
fcmovne
divb
and
decl
push
pop
xchg
jne
in
mov
stc
ss
jg
cltd
fs
int3
push
add
xchg
jns
pop
in
cltd
ljmp
push
sahf
out
movzbl
or
add
std
hlt
cld
sub
add
xchg
nop
and
xchg
fidivl
fidivrl
les
pusha
inc
xchg
rol
scas
call
add
and
jnp
mov
loopne
sbb
int3
mov
pop
addr16
xchg
cmc
bound
cmp
test
or
lods
scas
inc
test
mov
push
jns
insl
inc
cmpsl
mov
adc
and
pop
dec
mov
loopew
inc
jmp
fs
inc
data16
and
push
fcom
sub
pop
cmp
stc
sbb
sbb
cmp
fisubl
cmp
sbb
pop
push
push
fwait
jecxz
and
or
inc
shrl
out
pop
fstpt
in
dec
lahf
add
mov
push
push
pop
dec
ss
ljmp
jl
lret
push
addr16
inc
andl
gs
in
cli
scas
jns
in
imul
rcr
cmp
insb
or
mov
jle
es
jecxz
xor
mov
push
mov
pop
les
xorb
and
frstor
mov
call
cs
out
sub
stos
ds
xchg
mov
dec
lods
jmp
popf
shll
fiaddl
pop
pop
call
push
mov
lcall
push
jb
lahf
pop
nop
cmp
ds
pop
push
sbb
mov
lods
mov
cmp
imul
shrl
inc
outsb
mov
sti
cmp
inc
sbb
mov
xor
add
xchg
pop
cmp
xchg
dec
test
outsl
push
aaa
les
je
or
cmp
insb
mov
cmp
orl
inc
or
bound
test
push
mov
push
adc
loope
and
out
arpl
cltd
shr
mov
fcoms
xor
sbb
xchg
cltd
mov
add
sbb
push
aam
inc
pop
mov
pushf
push
adc
mov
and
xchg
sub
popf
test
scas
scas
out
cmp
inc
subl
lret
mov
cmp
xchg
add
add
addr16
cmp
push
repnz
pusha
jmp
sti
and
xchg
into
sub
stos
test
aaa
adcb
xor
push
lcall
movsb
dec
mov
iret
sbbb
jbe
and
jae
add
and
mov
ret
ror
jne
inc
mov
daa
dec
stc
xlat
call
add
mov
daa
ret
rcrb
pop
dec
pop
cmp
push
dec
fisubrs
daa
sahf
cmp
cmp
fnstcw
xchg
sbb
pusha
ret
shlb
xor
popa
stc
cmovnp
push
add
sbb
nop
pop
cli
insb
out
xor
aas
rorl
lcall
jnp
push
cwtl
push
movsb
movsl
enter
fiaddl
push
sbb
xchg
data16
cmpsl
cmc
pusha
cmp
in
stc
aad
divb
fbstp
jle
push
das
pop
int
mov
cs
test
push
fmull
cli
out
push
fistpll
jle
popf
sbb
int3
shl
adc
lds
loop
shr
and
movsb
mov
int3
into
addr16
push
mov
inc
xchg
push
pop
fwait
push
add
dec
lods
mov
mov
ds
loopne
icebp
dec
scas
xorb
pop
pop
addr16
loopne
out
popf
sbb
xor
rclb
pop
or
sub
es
xor
push
mov
cmp
aas
mov
xchg
pusha
mov
sbb
adc
gs
xchg
clc
out
cmp
and
pop
ds
cmp
or
mov
adc
mov
dec
in
mov
popf
adc
xorps
jp
notl
sub
sub
les
hlt
nop
inc
je
mov
pop
fidivl
jb
push
sub
gs
add
ret
shll
cmp
into
dec
test
push
mov
out
push
sar
pusha
jnp
test
fcomps
xor
cmpb
gs
mov
dec
lea
arpl
pop
cld
leave
push
out
je
cmp
xchg
or
test
aad
ret
xchg
nopl
iret
mov
mov
lds
dec
imul
adc
cmc
push
inc
stos
divl
inc
movsb
xor
loop
dec
push
ret
into
jmp
ret
lea
loope
jo
or
dec
aaa
xor
nop
mov
mov
pusha
xchg
xor
mov
fwait
sbb
pop
int3
dec
jo
push
and
push
loop
push
hlt
pop
out
out
out
lahf
add
sub
data16
pop
ror
mov
cltd
push
in
cmp
cltd
test
add
dec
sbb
add
push
out
pop
testb
imul
mov
popa
aaa
loop
cmp
push
dec
jae
rcll
roll
sbb
movsb
push
jp
popf
stos
imul
push
inc
fsubrl
add
sub
sub
cmc
repz
movsb
push
dec
lcall
gs
in
inc
cltd
hlt
mov
and
mov
movsl
dec
mulb
sbb
push
pushf
cli
out
add
jbe
lcall
and
std
mov
sub
mov
pushf
jb
mov
inc
inc
sbb
add
das
dec
jle
mov
lods
out
es
cmpb
into
bound
sbb
push
push
inc
std
dec
jo
xchg
insb
jne
mov
dec
arpl
or
dec
jnp
insb
add
fcompl
or
pop
pop
jno
fidivrs
in
jmp
rcll
mov
pushf
and
push
xorl
push
push
les
pop
jecxz
and
adc
insl
mov
das
and
pop
loope
fwait
push
sub
push
push
xchg
mov
and
sahf
push
out
inc
jnp
scas
pop
loope
dec
aad
hlt
ret
in
testb
mov
cltd
mov
loopne
out
mov
addr16
std
and
cltd
push
enter
call
sub
or
mov
push
into
in
fucomip
dec
ljmp
sub
xchg
sbb
pop
repz
and
push
ss
xchg
in
cmp
cmp
add
ret
lcall
test
pop
testb
gs
sub
insb
cmpsb
pop
ror
popf
push
pushf
vpmulhuw
sub
hlt
mov
daa
dec
jl
es
jl
insl
mov
sub
push
mov
cmpsb
outsb
xchg
sub
fistpll
insb
mov
dec
jb
adc
out
lods
sahf
or
loop
or
adcb
add
lcall
fstpl
mov
orl
or
sbb
cmp
cld
das
add
mov
push
movsl
mov
fisubrl
hlt
scas
cld
out
scas
xor
pushf
adc
out
mov
pop
add
jl
xchg
popa
hlt
sub
mov
adc
pusha
inc
dec
xlat
mov
inc
outsb
pop
fdivrs
andb
pop
and
scas
jg
mov
dec
repz
fsubl
mov
jp
dec
int3
sub
push
popa
pop
and
xchg
out
xor
mov
sha256rnds2
and
out
jne
sub
mov
xchg
adc
and
fdivr
inc
ss
sar
call
dec
imul
sub
jo
sub
jecxz
add
movlhps
jne
or
lahf
pushf
mov
pop
shlb
mov
xchg
insb
jmp
push
test
push
mov
dec
and
inc
lods
inc
or
dec
hlt
dec
or
jnp
push
xor
inc
std
xchg
push
jmp
or
sahf
std
enter
sbb
mov
mov
jl
sub
lea
enter
cmp
jbe
or
mov
cmp
test
adc
mov
stos
cwtl
je
test
mov
mov
and
lret
xor
adc
and
idivb
call
daa
xor
in
test
sbb
outsb
jno
xchg
call
and
mov
adc
rolb
lock
adc
inc
mov
xchg
arpl
or
add
xchg
xchg
bound
sub
js
add
mov
jg
xchg
rclb
imulb
cmpsb
xor
mov
adc
inc
movsl
insl
adc
xor
cmp
push
leave
enter
jns
sbb
and
cltd
lret
mov
fisubl
mov
mov
mov
mov
inc
xor
cli
inc
out
dec
jmp
int3
dec
mov
xor
out
loopne
jl
in
in
imul
aas
inc
fucomip
jecxz
cmc
fdivrl
adc
imul
mov
sbb
xchg
cmpsb
movsb
adc
xchg
jmp
in
xchg
mov
sbb
xlat
cmpsb
jg
out
out
mov
push
ret
cmp
leave
push
adc
add
inc
cmc
negb
bound
fstl
cmp
fsubrs
int
cmovae
dec
lret
inc
adc
out
leave
aaa
pop
call
xchg
cmp
aam
xchg
out
pop
cltd
push
adc
je
imul
out
xor
mov
int
push
ret
dec
dec
or
add
jo
mov
clc
daa
in
insb
in
inc
jbe
lods
por
inc
push
and
sbbb
mov
or
outsl
nop
aad
ds
sbb
mov
loopne
xor
stos
inc
loop
xor
bound
xchg
lret
jo
out
mov
jnp
xchg
test
add
stos
mov
rcl
popl
or
dec
sbb
jno
xchg
mov
dec
dec
xor
ret
and
xchg
and
nop
sahf
repnz
fnstenv
std
mov
push
mov
repnz
ret
loope
mov
xchg
div
cmp
push
xor
mov
les
push
pusha
push
and
test
and
xchg
insl
rclb
mov
lock
std
jae
sbb
lret
es
xor
push
cmpsb
sbb
xor
pop
add
cmc
xchg
jge
sbb
push
das
sbb
mov
pop
pop
push
mov
dec
ljmp
push
mov
loope
addl
jl
inc
jbe
mov
mov
mov
add
adcl
push
cs
test
xor
jge
insb
inc
scas
add
mov
imul
mov
in
xor
cmp
sbbb
or
xlat
cmpsl
add
ret
dec
dec
mov
call
xchg
mov
jg
out
bound
dec
cmpsl
incl
out
int
jnp
outsl
pusha
mov
lds
and
in
fsqrt
mov
add
ret
popa
rorb
stos
testb
mov
dec
not
clc
ret
hlt
std
pop
ja
in
pop
push
push
sbb
adc
push
test
mov
mov
vrsqrtss
cmpsb
shl
xchg
lock
mov
call
add
sbb
fistpll
scas
aad
aaa
adc
in
pop
test
loope
insl
in
in
notl
jle
cpuid
iret
jl
sub
dec
mov
adc
leave
mov
push
jo
out
lret
nop
fwait
xchg
nop
fbld
orl
sub
cwtl
lods
aad
mov
xchg
sub
mov
xor
and
cmp
dec
lods
dec
inc
cld
sbb
pushf
stos
popa
push
sub
push
arpl
mov
add
jae
daa
frstor
mov
mov
dec
scas
mov
or
imul
mov
in
push
jne
inc
push
aas
jns
imul
xchg
xor
mov
lahf
je
daa
movsl
je
sbb
mov
mov
xor
push
mov
push
cmp
mov
pop
sub
ret
or
xor
inc
or
or
pop
pop
push
cmp
fwait
dec
loope
sarb
push
cmp
push
adc
dec
mov
jecxz
jne
xchg
aam
jecxz
insl
rcr
ds
pusha
roll
add
add
dec
sub
ficoms
jmp
sub
lds
mov
je
data16
push
decl
insl
scas
clc
sahf
mov
shll
enter
subb
mov
cmp
adc
shll
xlat
push
loop
and
lcall
shll
arpl
dec
jp
gs
add
jl
push
sub
rcl
pop
cli
jae
mov
jle
dec
in
mov
push
lcall
and
jle
pop
xchg
xchg
hlt
mov
cmp
jne
mov
out
fwait
pop
xchg
in
or
dec
sub
lcall
push
js
inc
sbb
inc
mov
push
jg
testl
inc
jg
cli
lret
push
fimuls
jle
mov
cld
test
dec
xchg
ds
mov
out
test
push
incb
pop
cmp
int3
and
jp
fisttps
mov
or
in
dec
dec
rolb
faddl
pop
addr16
pop
loopne
inc
or
aas
and
cmpb
les
mov
sar
cs
sti
pop
test
jecxz
clc
or
sub
testl
pusha
cmp
pop
out
xor
and
movntps
xchg
das
mov
lds
inc
fimull
addr16
mov
pop
or
jge
xor
test
adc
xchg
push
mov
or
out
push
or
jns
jecxz
ret
add
xlat
push
adc
sub
out
and
sbb
ret
ret
cld
jp
ljmp
outsl
bound
std
inc
sub
adc
and
sbb
shrl
jne
mov
repnz
ficoms
and
xor
std
push
add
ja
xor
addr16
std
lock
pop
repnz
fnsave
xchg
jecxz
loope
imul
mov
jle
lret
adc
mov
outsl
push
dec
addr16
mov
sbb
pop
fdivs
xor
mov
scas
lock
add
test
dec
xchg
clc
fsubl
xlat
test
js
add
jbe
in
popl
pop
fwait
pop
iret
cs
pop
icebp
or
lcall
daa
xchg
in
sub
xor
jge
insb
mov
adc
daa
dec
fldenv
xchg
mov
pop
mov
pop
sbb
sti
aad
rorb
daa
xor
xor
dec
push
fsubs
out
ljmp
sti
mov
scas
test
jns
push
test
inc
imul
push
jo
in
xchg
jne
add
mov
mov
addr16
fistpl
xchg
test
push
das
out
bound
push
loop
xchg
dec
imul
aam
pop
aad
sbb
js
fs
les
sti
adc
mov
rcr
jecxz
popf
mov
jbe
cmp
add
mov
cmp
or
xchg
pop
mov
arpl
add
or
test
imul
dec
add
mov
sub
loopne
xor
ja
adc
fistpl
xchg
scas
mov
adc
and
inc
je
sub
sbb
mov
mov
es
mov
push
clc
popf
repz
sub
int
lds
ret
lea
lret
jl
mov
xchg
loope
aam
push
mov
jbe
scas
pop
js
subl
adc
aam
nop
sub
sbb
and
pop
push
mov
pop
in
mov
lret
adc
mov
pop
cmp
into
cwtl
xabort
std
xchg
ds
ret
rorb
lcall
jp
stos
mov
rolb
mov
mov
sub
sub
mov
dec
repnz
inc
mov
aaa
cmp
enter
and
sub
pop
cwtl
mov
aam
andl
jmp
arpl
fs
stos
add
leave
cltd
xor
arpl
jo
xchg
subb
mov
cmp
pop
inc
mov
pop
pop
lock
dec
sub
shl
and
xor
ss
push
sbb
mov
pop
mov
xorps
scas
push
lret
mov
popa
inc
adc
out
fs
shll
pop
xor
notb
mov
push
cmc
sub
in
xchg
pop
imul
fstl
sti
aam
mov
add
xlat
imul
out
jp
mov
leave
push
xchg
popa
outsl
cmp
add
jno
cmc
sub
cmp
pop
cmp
fbld
pop
pusha
pop
stos
aam
lcall
stc
mov
fs
add
jge
dec
mov
in
loope
mov
xchg
or
test
adc
adc
sbb
add
cmp
into
test
add
loopne
popf
dec
fdivs
and
fwait
lods
repz
int3
mov
daa
stc
bound
push
fstl
dec
sahf
fldl
test
pop
dec
rcl
int
jmp
js
push
sahf
aam
xor
int
inc
ljmp
lods
dec
xchg
adc
mov
ja
das
sarb
adc
inc
or
out
leave
dec
adc
add
in
sub
add
inc
adc
xor
or
add
mov
and
pushl
divl
bound
stc
lahf
clc
jg
into
pusha
ret
push
xor
ret
ja
rclb
xor
mov
and
cld
shlb
sahf
inc
dec
dec
inc
pop
jae
mov
ds
daa
jp
mov
mov
mov
jne
fwait
jbe
push
inc
jae
adcl
mov
add
mov
xor
xor
int3
jp
out
mov
arpl
mov
test
or
faddl
testl
pop
adc
test
test
add
lret
jp
adc
mov
es
and
loopne
enter
cs
out
ss
cmpsl
popa
sub
sbb
ss
jae
loope
cmc
into
push
jg
subb
mov
dec
daa
dec
pop
out
mov
stos
pop
stc
xchg
popf
mov
adc
aad
mov
jne
add
push
sub
fstpl
stos
push
gs
xor
nop
cmp
lcall
ret
stc
pop
call
int3
xlat
xor
sbb
or
push
lcall
shl
test
arpl
add
fs
inc
add
add
or
adc
idivl
jbe
test
shlb
sbbl
jp
xor
mov
jge
mov
ljmp
and
xchg
mov
pop
subl
inc
adc
pop
lds
mov
mov
jb
mov
sti
mov
add
shl
cltd
test
bound
sbb
out
mov
cmp
adc
pop
xor
jns
mov
sarb
cmp
mulb
push
fwait
lea
xchg
inc
mov
jne
roll
cmp
mov
lret
or
lock
sahf
and
scas
mov
jo
int3
dec
push
jmp
add
das
jbe
sub
adc
push
push
dec
aam
xorl
pusha
pop
cmp
adc
dec
out
movsl
ror
shl
jl
sbb
rolb
push
sbb
jae
ss
fidivs
fld
decb
xor
pop
jle
sub
mov
mov
and
add
add
cwtl
cmp
lret
xchg
test
or
push
push
xchg
sub
cmp
dec
xor
loop
push
popf
testb
cmp
mov
pop
in
pop
mov
out
cmpsl
xor
jg
stos
icebp
and
adc
sbb
xor
push
ret
sub
xchg
insl
ficompl
mov
ja
outsb
repnz
repnz
fstpl
dec
rcll
push
cmp
xor
insl
push
mov
cli
dec
int
xchg
sub
pop
add
call
loopne
add
inc
pop
ds
ret
sub
sub
xchg
mov
jb
repz
xlat
cld
out
js
out
sbb
jbe
add
mov
pop
cmpsb
mov
lods
ljmp
outsb
shll
and
jecxz
lcall
out
notl
adc
xchg
xchg
pop
dec
or
test
repnz
mov
subb
ret
sub
rcr
or
and
mov
dec
shll
aaa
lret
mov
stc
jno
jne
jge
jmp
lea
shl
jecxz
mov
scas
mov
sbb
mov
fiadds
popa
movsb
cmp
and
neg
adc
jb
jmp
jae
dec
jno
into
xlat
rolb
jmp
xchg
daa
sub
movsb
jb
dec
aaa
insl
xchg
nop
mov
cmpb
cmp
mov
xchg
mov
stc
popa
ljmp
xor
or
ret
or
or
sub
dec
adc
mov
inc
loop
xchg
shlb
dec
out
sbb
pop
outsl
xor
imul
enter
imul
add
jl
mov
xchg
add
inc
int3
cmpsl
mov
add
jle
inc
cmpsl
cmp
sub
in
loopne
push
data16
mov
out
leave
and
mov
ja
fildl
xor
jo
loopne
fldenv
lahf
gs
xchg
adc
add
inc
add
mov
fwait
leave
scas
movsl
sbb
popf
cltd
mov
dec
aas
pop
push
xchg
cmp
les
cwtl
adc
cmp
xchg
loopne
or
cmp
xchg
out
into
ficompl
rcrl
mov
jno
outsb
push
movsl
push
test
mov
enter
push
lods
push
add
mov
dec
and
jnp
iret
dec
jle
xchg
mov
inc
jbe
sbbl
push
int
add
inc
adc
das
test
adc
mov
and
fisubrl
test
push
ret
fwait
inc
sub
lods
sub
or
repnz
daa
xchg
adcl
mov
shrb
into
enter
ss
mov
xor
add
out
in
inc
fimull
push
out
mov
jge
loope
cld
cwtl
daa
sub
inc
in
mov
out
in
cmc
and
mov
cs
lcall
cmp
jg
jno
or
lds
sbb
inc
xchg
cmpsb
out
int
ja
aam
repz
adc
xor
pusha
gs
inc
ret
data16
push
push
xor
jae
loopne
add
daa
pop
jne
push
inc
lock
xchg
xlat
mov
scas
pushf
rorl
ja
pop
cmpb
das
lahf
xchg
cmp
adc
fmuls
xlat
xor
mov
mulb
call
sub
loopne
pop
inc
subl
xor
push
and
mov
popf
in
or
lcall
mov
jge
xchg
loop
mov
push
or
adcb
shl
mov
sub
push
jecxz
testl
stos
mov
sahf
lods
scas
aad
xchg
mov
out
adc
xchg
cmpsb
bnd
xor
fs
sbb
incb
ss
xchg
mov
sub
and
insb
mov
push
push
out
lahf
shll
and
jae
out
inc
mov
stos
insl
xchg
dec
xchg
int3
push
jmp
lods
dec
add
ljmp
adc
xchg
xor
xchg
cmpsb
insl
fisubl
mov
add
xchg
filds
sahf
xor
scas
and
inc
leave
cmpsb
scas
push
push
sti
cld
adc
dec
add
sti
dec
inc
inc
pop
sub
sarl
loopne
cli
dec
call
out
adc
sub
out
xchg
mov
mov
xor
test
cmp
lods
mov
push
sbb
hlt
lods
mov
and
cltd
mov
mov
ja
outsl
pop
enter
push
mull
aaa
and
inc
insb
jecxz
inc
pop
fadds
mov
push
rcl
cmpsl
mov
xchg
push
push
movsb
and
mov
and
sbbl
or
adc
lea
cltd
pop
add
adc
paddd
aas
dec
ja
or
adc
ss
xchg
loop
cwtl
adc
sbbb
fisubrs
in
push
imul
mov
cmc
dec
daa
sahf
add
push
sbb
stos
test
loopne
mov
int3
aas
scas
mov
hlt
ljmp
scas
jecxz
aaa
adc
push
imul
arpl
add
imul
cmpsl
sub
sti
inc
cltd
inc
push
jle
push
xor
cwtl
mov
dec
jecxz
inc
add
adc
xor
mov
stos
shlb
jb
inc
xchg
jge
dec
out
into
sub
or
add
sahf
sti
cli
stos
cmpsl
inc
jnp
sbb
or
mov
jecxz
mov
inc
pop
dec
cmp
pushf
xor
add
pop
xchg
es
mov
pop
fildl
cmp
mov
push
addr16
movsb
mov
push
xor
jns
mov
enter
pusha
icebp
mov
mov
ja,pn
addr16
mov
addr16
xchg
mov
aad
rorb
xchg
nop
jnp
push
aad
bound
movsl
int
sub
xor
mov
xlat
out
or
andl
sahf
mov
or
and
in
sub
lds
push
dec
pop
mov
mov
rol
cltd
xchg
call
dec
or
stc
ds
cltd
insb
jge,pn
daa
cs
sbb
jp
mov
mov
jle
push
divb
lcall
sbb
adc
insl
lret
loope
xchg
data16
mov
daa
mov
stos
sti
out
mov
loope
inc
mov
jne
jno
xchg
mov
in
sub
popw
jl
repnz
add
push
stc
insb
dec
dec
adc
scas
dec
std
pop
dec
pop
xchg
lahf
xor
insb
and
sbb
mov
cmp
xlat
in
dec
mov
lahf
imul
mov
lods
push
mov
or
daa
jno
call
jo
fs
outsl
sbb
loop
inc
sarb
or
cltd
sbb
add
mov
nop
cmp
stc
xchg
jp
sub
inc
ljmp
mov
mov
sbbl
jae
neg
pop
ljmp
adc
xchg
jnp
call
push
loopne
xchg
sti
xor
add
std
iret
stos
jno
sbb
in
pop
adc
repnz
insl
ja
outsl
mov
or
sbbb
ds
xchg
hlt
arpl
sub
sbb
scas
shll
xchg
sar
subl
imul
mov
xchg
mov
mov
cmp
push
jmp
push
mov
outsb
jg
sbb
dec
outsb
in
cld
loope
or
jle
and
hlt
jo
fwait
decl
jg
push
jne
loop
push
adc
dec
cmpl
push
or
dec
incb
out
imul
fldenv
enter
popa
cmp
cwtl
addr16
jecxz
je
jno
sbb
xchg
xchg
cmp
decb
jno
dec
jae
out
hlt
add
cmp
leave
icebp
pop
enter
xchg
scas
dec
dec
pop
or
xchg
fisubrs
push
test
insl
pop
cmovg
push
dec
push
lds
iret
xchg
cltd
test
cli
movsl
pop
lret
jmp
lods
dec
xchg
int
or
xor
das
fldt
and
pop
sbb
inc
gs
mov
insb
pop
out
mov
shr
mov
les
jge
jecxz
fsubrs
scas
out
xchg
jp
and
mov
lds
mov
inc
add
xchg
enter
fwait
movsb
mov
out
gs
lea
or
popf
subl
mov
out
ss
lret
loope
scas
popf
mov
dec
aas
dec
pusha
and
int
std
push
or
lret
adc
and
lcall
fldl
aad
push
xor
sti
mov
pop
add
cmp
add
pop
dec
je
lahf
scas
test
jns
or
shl
insb
pop
mov
negb
and
les
cmp
add
adc
nop
mov
lock
test
xchg
jb
push
in
push
mov
out
push
and
testb
mov
enter
mov
jbe
test
xchg
fs
sub
cmp
xor
and
push
data16
icebp
xor
inc
xor
out
mov
xor
int3
push
loopne
inc
sub
lock
std
repz
pop
int3
frstor
sub
pop
fmull
loope
adc
adc
pop
aad
gs
jp
addr16
xchg
popa
lock
jl
insb
movsl
movsb
push
lods
outsb
add
cmpsb
clc
sbb
lods
cmp
loopne
pushf
nop
dec
hlt
sub
jo
out
mov
or
add
stos
push
movsb
xchg
adc
mov
mov
imulb
mov
jns
cli
mov
and
andl
add
cli
adc
jge
outsl
das
pop
and
add
xorb
adc
jns
iret
cli
outsb
jnp
loop
mov
cmp
xchg
in
sahf
cmpsb
fcompl
mov
sbb
inc
mov
sbb
out
in
jb
xor
insb
push
xor
fcom
mov
pop
xchg
push
loope
mov
add
negb
fcoms
jne
sti
pop
sub
or
stos
mov
mov
push
dec
sbb
mov
push
mov
dec
push
stos
push
add
push
mov
lods
scas
jge
or
hlt
aam
push
xchg
sahf
dec
fisubl
and
scas
dec
sahf
add
push
int
mov
sti
xor
outsl
out
movsb
mov
mov
jnp
cltd
cmp
lret
mov
mov
jae
das
jne
scas
mov
rclb
or
adc
sbb
bound
popa
int
shl
inc
cli
and
jb
andl
mov
xchg
inc
aaa
jno
dec
sub
inc
xchg
lods
sub
mov
inc
push
mov
movsl
roll
inc
fisttpll
or
dec
sub
insl
leave
lcall
lds
or
mov
push
je
in
mov
mov
lahf
outsb
lods
popf
imul
or
xlat
xchg
mov
inc
add
jg
push
mov
dec
xchg
mov
mov
mov
fistpll
je
and
and
mov
test
push
std
scas
syscall
test
es
call
test
xor
fldcw
sti
and
fidivrs
pusha
jae
cmpsb
lods
sub
mov
lahf
int3
jae
loope
imul
jp
push
arpl
in
push
subb
dec
mov
mov
jo
cmp
les
shlb
in
loopne
mov
fisubrl
inc
ficoml
testl
out
jmp
mov
lret
dec
fnsave
sub
shll
dec
leave
ret
out
lahf
loop
adc
into
out
dec
test
out
lds
xor
xchg
pop
imul
addr16
mov
sub
pop
xchg
lds
test
push
shll
dec
mov
cltd
or
bound
dec
mov
mov
mov
in
sarl
cld
mov
fadds
fucomip
dec
hlt
adc
ja
sahf
icebp
push
pop
cltd
movsb
sub
std
nop
cld
notl
xor
popa
dec
bound
mov
pop
and
call
test
test
mov
nop
or
mov
frstor
mov
sub
popa
js
movsl
cmp
aad
aas
scas
test
sahf
dec
jb
bound
xchg
push
lods
test
or
sub
fstpt
adc
ret
jmp
mov
add
and
adc
icebp
sbb
jg
and
cmpb
lock
xchg
adcl
fbstp
cmpsl
mov
pop
gs
aaa
sbbl
cmp
int3
out
mov
push
fistpl
lods
shll
ror
mov
test
dec
ret
ja
sbb
testl
mov
stc
lods
cmpb
ret
lcall
cmp
jl
loopne
sub
fsubl
ret
pushf
iret
mov
fwait
insb
shr
stos
add
and
mov
xor
subl
xor
cmp
pop
test
xlat
xchg
jae
cmp
push
mov
mov
adcb
in
jne
outsb
pop
push
jge
add
shll
fwait
outsb
and
dec
push
or
les
test
mov
pop
and
int3
add
shrl
cvttps2pi
subl
add
clc
lret
cmp
lret
cmpsb
add
mov
enter
push
jb
and
xor
lret
jb
fwait
dec
gs
jmp
dec
fldl
mov
jb
mov
loopne
mov
mov
push
lret
fistpll
mov
cmp
into
jl
out
mov
pop
outsb
and
inc
sbb
mov
ret
fwait
mov
lahf
mov
push
and
inc
inc
aas
lcall
sbb
sub
adc
hlt
pushf
sbb
ret
sbb
std
xchg
add
out
sub
repz
pop
xchg
cmp
cli
or
push
adc
aaa
ret
mov
or
adc
inc
push
adc
int
cmp
jne
push
fstpt
shr
cltd
sbb
and
lds
xor
xor
pop
dec
sbb
push
inc
and
enter
adc
push
aad
push
mov
nop
lcall
ficoml
fdivrs
mov
movsl
and
cs
nop
ret
xchg
insb
mov
mov
test
popa
push
jg
fstpl
xor
int3
xchg
fistps
jne
lret
in
iret
add
ret
js
repz
stos
adc
insb
sbb
sti
in
push
lahf
aad
push
inc
data16
pop
jb
pop
mov
mov
icebp
aaa
mov
cmc
out
and
push
xchg
jns
push
adc
push
fidivl
pusha
mov
xchg
push
ds
inc
inc
fcoms
inc
mov
mov
aam
popa
in
outsb
pop
pushf
mov
sti
mov
or
xor
push
mov
mov
lret
pusha
xor
jne
jecxz
fcmovb
rcll
cmp
sbb
mov
jbe
or
lods
cmp
cmpsb
das
int3
pushf
in
dec
rcll
movsb
jb
mov
cmpsb
push
fildll
stc
mov
movsb
loope
xchg
lret
and
cmp
cmp
mov
lea
das
fdivl
mov
mov
rclb
add
mov
cmpsb
sti
push
movsl
jbe
xor
loopne
mov
mov
push
or
sbb
sub
fmull
cmp
mov
inc
inc
mov
or
pop
cs
insl
pop
inc
bound
inc
loope
pop
jb
mov
sub
cmp
cmp
mov
sarl
fidivrs
fisttpl
add
dec
sti
add
inc
orl
andb
lock
jae
arpl
inc
pusha
xor
and
hlt
mov
pop
ja
or
test
sarl
repnz
pop
inc
sbb
lods
outsl
int
dec
cmpsb
sub
xchg
sbb
xchg
sbb
cmp
testl
or
fdivp
mov
pusha
imul
inc
in
push
mov
and
ret
xor
loopne
shlb
jo
and
cmpsl
push
stos
iret
les
fs
nop
pop
hlt
sbb
stos
into
mov
push
das
push
out
dec
mov
call
popa
pop
sbb
mov
mov
mov
cmc
pop
dec
adc
jecxz
inc
adc
aam
dec
mov
pusha
lret
pop
scas
test
test
in
sub
xchg
cmp
inc
push
pushf
push
xchg
cs
je
push
push
jno
mov
pop
cli
popa
sub
subl
adc
gs
cmc
mov
and
enter
xchg
mov
pop
adc
sub
jge
xchg
ds
icebp
jae
sbb
enter
andb
inc
fcmovnu
les
inc
popaw
adc
xchg
sbb
pop
inc
jb
ror
fdivrs
clc
bound
add
or
adc
int
xchg
lds
mov
push
aas
fnstenv
cmpsl
mov
cmpsl
pop
into
xchg
push
inc
mov
divl
dec
jbe
mov
adc
mov
lods
or
push
cltd
push
xchg
mov
xchg
fcomps
add
jge
jge
scas
loope
popf
arpl
lds
dec
data16
push
inc
sub
jns
stos
dec
popa
clc
mov
bound
mov
sti
fbld
xchg
and
sbb
push
cli
mov
inc
add
jae
mov
mov
or
in
enter
inc
jbe
int
int3
imul
mov
xorl
xor
mov
mov
rcr
cmp
lahf
cwtl
lds
cmp
add
adc
push
sub
cltd
or
and
mov
mov
out
shll
mov
xor
add
mov
mov
lcall
cmp
fimuls
arpl
sbb
ret
fldcw
inc
testl
outsl
mov
in
mov
lahf
mov
dec
sub
and
mov
dec
inc
inc
push
jge
inc
lods
xorb
or
mov
mov
xchg
mov
loop
test
push
cmpsl
lods
pop
cmpsl
mov
adc
push
dec
sbbb
call
in
out
jbe
push
jns
shll
in
lods
mov
in
mov
adc
push
lods
pop
adc
sahf
lret
sub
pop
mov
std
pop
fisttps
and
dec
mov
call
mov
pusha
arpl
call
lret
test
dec
pop
sub
pushf
inc
or
and
bound
sub
xchg
enter
je
iret
mov
sbb
mov
loop
lock
jnp
ja
and
and
popa
mov
test
clc
jl
pop
int3
shlb
mov
mov
daa
in
adc
clc
repz
mov
sti
fstpl
inc
call
lds
pop
mov
push
jp
call
push
xchg
push
inc
xlat
dec
push
std
push
mov
shl
pop
dec
xchg
outsb
mov
xor
adc
outsb
push
jae
push
enter
cmc
int
jo
ljmp
adc
fistpl
icebp
lret
push
adc
sub
and
and
dec
scas
or
lock
adc
imul
imul
xor
fs
outsl
sub
filds
xchg
cli
adc
repz
and
dec
sbb
mov
int3
jb
and
pop
mov
jo
cmc
out
pusha
mov
xchg
xchg
sub
in
mov
sbb
jl
std
mov
mov
stos
or
adc
push
ret
out
mov
pusha
fisttpll
dec
sbb
dec
mov
test
test
mov
mov
mov
push
loop
fsubrl
push
xor
rorl
sbb
mov
cmpb
adc
frstor
test
test
inc
lea
mov
mov
lds
imul
mov
cmp
fdivl
inc
imul
adc
inc
loope
sub
xlat
jae
out
mov
sahf
mov
outsb
jne
or
dec
pusha
jno
push
push
sbb
int
mov
popf
sbb
xchg
leave
jae
push
sahf
fsubs
cmp
mov
inc
mov
jo
mov
jne
in
xchg
fsubp
sbb
lret
shll
dec
cmp
out
pop
xchg
push
loopne
dec
movsl
into
jmp
fstl
test
jle
dec
aas
shll
push
inc
pop
pushf
push
lret
push
lods
xchg
xor
adc
cmpsl
cmp
adc
sub
dec
shrb
mov
aas
sbb
daa
jmp
and
add
dec
adc
sub
inc
push
inc
test
inc
sahf
xchg
mov
loopne
das
loope
subb
int
test
cmpsb
push
inc
insl
xchg
and
outsl
xchg
rorl
decl
cld
out
lods
cmp
xor
pop
add
cmp
mov
and
shlb
sub
jl
and
jns
clc
cmp
ja
test
inc
xchg
or
ds
std
sarl
das
pop
xchg
add
test
cltd
pop
sbb
fsubl
iret
ss
hlt
mov
outsb
test
jns
mov
mov
push
sti
add
mov
es
add
xchg
outsl
test
in
sub
add
aas
sub
repz
push
or
dec
mov
out
or
push
sub
rcl
std
jbe
aam
addr16
push
or
fwait
push
push
xchg
pop
lea
scas
rorb
popf
push
mov
loopne
data16
insl
pop
add
test
xchg
mov
aam
iret
dec
test
sbb
xor
xchg
and
out
out
sub
dec
xchg
add
sti
lahf
cmp
add
fidivl
xchg
in
xlat
pop
lahf
cltd
fimull
cmp
mov
dec
stos
mov
lds
lods
enter
push
mov
test
sbbl
cld
in
shll
lock
xchg
testb
int
and
pushf
sbb
cmc
xchg
pop
dec
dec
sahf
add
insl
push
aas
loope
sbb
jmp
sub
lods
jae
sbb
add
adc
pop
cmpl
ljmp
ja
jg
add
int3
fcmovb
mov
cmova
pusha
mov
pop
cmp
daa
xor
rolb
int
mov
movsb
ds
out
fwait
lcall
xor
dec
adc
mov
and
sbb
stos
ja
dec
or
jo
sbb
push
mov
mov
sub
jns
cwtl
mov
stos
jge
sbb
adc
scas
jbe
jb
jb
pop
mov
cmpb
loopne
xchg
in
jbe
mov
xchg
and
ret
add
ret
imull
mov
iret
cmp
inc
insl
inc
repz
loope
mov
enter
sub
inc
jge
inc
pop
sarb
das
stos
enter
out
ds
and
lret
cwtl
out
xchg
pop
jae
mov
push
dec
ljmp
mov
dec
inc
push
xor
mov
stos
hlt
xchg
lret
sbb
in
fsts
jnp
imul
fisubs
push
mov
out
shrl
or
pminub
push
mov
mov
xor
bnd
int3
lds
test
das
stos
adc
adc
adc
or
loope
xor
pop
cwtl
mov
cld
pop
std
mov
jnp
loop
sub
imul
imul
cmp
xchg
jb
scas
int3
pop
pop
fists
push
or
pop
shl
jle
jl
xor
popa
xchg
jp
xor
add
ficomps
pop
andl
jnp
lods
mov
or
rcr
lods
aad
pop
add
push
loop
and
xor
fistl
add
xor
sbb
mov
mov
jp
or
mov
push
fisubl
ret
jns
jne
popl
dec
aas
nop
pop
mov
pop
sbb
jnp
inc
sbb
inc
pop
retw
add
inc
shlb
xchg
popa
cli
cmc
ror
rcll
xchg
mov
shlb
movb
dec
pop
cmpsb
dec
jb
jg
inc
xor
je
pop
ficoml
add
cmp
sub
in
enter
aad
mov
popf
push
loop
call
scas
jp
stos
hlt
add
xor
fildll
pop
ret
mov
xchg
pushf
outsl
lahf
inc
sti
pop
mov
dec
xchg
xchg
sbb
mov
cmpb
mov
fnstcw
sub
push
enter
and
fucomip
aas
loop
or
mov
mov
insb
pop
lcall
inc
fildll
in
add
bound
adc
sub
ljmp
in
pop
pop
es
test
push
push
std
pop
iret
sub
add
cld
inc
repz
loope
and
pusha
lahf
dec
fisttps
pop
pop
mov
jnp
lods
rcl
shl
sbb
stc
aam
jmp
jb
jecxz
int
sbb
cli
mov
daa
out
dec
cltd
and
or
outsl
mov
outsl
call
inc
cmpsl
inc
fcmovne
sub
fwait
sbb
in
pop
negl
adc
xor
jle
push
sbb
gs
push
push
popf
jecxz
mov
sar
fstpt
and
push
inc
push
ret
adc
movsb
std
mov
sbb
cwtl
adc
dec
fucomp
xor
outsb
pop
dec
sbb
push
cmpb
sbb
test
fiaddl
mov
mov
jge
loope
insl
mov
sti
inc
cltd
inc
push
test
xchg
sbbl
jno
fisttpl
push
cwtl
aaa
pop
and
out
push
dec
and
fidivs
and
clc
inc
addr16
repz
or
mov
push
into
testl
sbb
inc
pop
dec
pop
in
into
arpl
pop
add
inc
dec
sub
jle
mov
mov
sbb
insl
pop
test
pop
add
and
push
cmp
dec
mov
push
pop
jp
faddl
mov
repz
loope
daa
mov
inc
scas
and
pop
mov
scas
repz
add
sub
loop
out
or
jmp
clc
mov
loopne
loop
mov
in
or
sub
xchg
push
cltd
iret
decl
fidivs
repnz
adc
push
leave
pop
ljmp
lods
or
int
roll
inc
mov
fsub
cmp
xor
and
outsl
push
adc
out
push
insb
lock
shrb
inc
int3
inc
jb
pop
or
xor
xchg
pop
dec
xchg
push
lods
fwait
push
loope
cmp
call
in
or
and
sbb
mov
xchg
vbroadcasti32x2
ret
pop
dec
push
orps
fst
add
pop
je
xchg
popa
movsl
pop
xor
dec
mov
mov
lret
mov
imul
adc
lods
xchg
xchg
add
add
cmp
fs
jns
mov
pop
mov
sbb
mov
xchg
mov
or
lock
inc
sub
stc
adcl
mov
xor
inc
test
repnz
nop
imul
shr
mov
shrl
or
mov
cwtl
scas
test
fs
pusha
jecxz
sbb
fdivl
insl
stc
ljmp
mov
loope
out
lret
loopne
inc
jp
push
jmp
mov
add
mov
mov
enter
gs
or
add
cmp
sub
in
mov
shlb
push
lods
shlb
xchg
fisttps
mov
xchg
xchg
cmp
cltd
cmp
mov
pop
jae
mov
inc
aad
sbb
jecxz
jb
sub
jge
mov
mov
jb
arpl
mov
icebp
mov
add
lods
or
dec
and
sbb
pop
mov
xor
mov
int3
add
mov
sub
inc
int3
jmp
ljmp
ljmp
mov
push
dec
mov
cmpsl
pop
aas
xor
add
xchg
mov
dec
mov
xchg
lods
pop
sub
fnstsw
sbbb
pop
inc
cmp
xchg
adc
jg
add
sti
rep
rcrl
das
fldcw
pop
outsb
test
inc
xchg
cmp
xchg
push
outsb
data16
dec
dec
pop
shlb
inc
mov
clc
imul
mov
ds
in
rclb
push
loopne
sub
pop
sti
push
sub
enter
sbb
mov
popf
pop
and
jns
or
add
add
sub
jbe
pop
mov
xor
jg
cmc
inc
pop
adc
popf
in
das
adc
and
movsl
jl
sti
loop
movsb
add
bound
jle
leave
addb
scas
mov
xchg
sti
xchg
adc
jmp
leave
jns
adc
mov
ja
mov
jge
je
subl
testl
bound
fnstenv
xlat
imul
fwait
dec
orl
aas
xchg
mov
sbb
sbb
pop
inc
xor
hlt
jp
xor
dec
add
cmpsl
inc
xor
adc
push
jle
fcoml
mov
or
leave
int3
mov
xchg
insl
test
ret
push
mov
dec
cltd
in
push
sbb
mov
mov
pop
add
lock
add
mov
pop
jecxz
ds
out
dec
xor
pop
into
and
inc
inc
hlt
push
leave
test
test
test
dec
sub
xchg
cmp
jl
flds
sti
sub
jle
out
mov
je
hlt
pop
inc
movb
imul
lret
add
fwait
push
dec
rorb
push
sti
iret
add
pop
push
xchg
int3
int3
adc
pop
insl
mov
inc
xchg
ljmp
movsb
lock
mov
shrl
decl
mov
roll
pop
stos
add
addr16
pop
inc
ljmp
test
jecxz
rcr
mov
icebp
dec
insl
add
fists
sbb
mov
fisubrl
or
stos
in
jae
mov
movsb
je
aam
movsl
xor
add
out
test
cmc
daa
pop
xchg
cmc
divb
or
insb
in
sub
dec
mov
inc
push
mov
aam
pop
or
fiadds
xorl
and
pop
jp
ljmp
pop
mov
cmpsb
stc
call
in
sbbl
cld
rcr
add
jae
lods
push
cmp
adc
mov
push
mov
fst
cli
ret
jae
xorb
std
pop
daa
cmc
pop
sti
std
sbb
ret
insb
sub
stc
sub
ss
scas
sarl
sti
pop
mov
pop
dec
push
jns
jge
mov
and
out
sbb
enter
and
xor
das
mov
mov
out
lock
insl
sub
sbb
sbb
sbb
insb
lea
lods
movsb
cmp
mov
cmp
out
and
xor
mov
sbb
push
inc
cmp
lret
sub
or
dec
jecxz
fcmovu
pop
inc
jl
mov
insb
movsb
mov
add
mov
repz
pop
loopne
mov
daa
call
in
cli
int
sahf
test
fcmovnbe
xchg
add
or
sbb
shll
push
ret
repnz
pop
dec
inc
sbb
faddl
jo
cmpsb
imul
lea
dec
jns
sbb
inc
movsl
test
shr
mov
lret
test
fistl
xchg
xor
inc
mov
mov
insb
adc
jecxz
in
pusha
mov
enter
cmp
gs
subl
jge
add
lea
sub
cmp
jo
les
xchg
sbb
leave
sub
int3
pushf
add
jmp
dec
push
fistps
sbb
test
pop
cltd
mov
dec
out
jecxz
es
ds
shll
dec
stc
jae
pop
mov
xor
test
xchg
divb
mov
jno
add
xchg
test
ja
call
std
jg
cltd
mov
push
mov
xor
ds
addb
cld
psubb
push
sub
fists
pop
mov
movsl
push
into
dec
shll
mov
pop
or
jmp
testl
std
loope
push
les
int3
outsl
sub
psllw
mulb
dec
outsb
sti
nop
jp
out
push
jb
rcll
shrb
lcall
mov
in
cmp
add
mov
repz
aad
lock
popw
test
mov
rdpmc
inc
jmp
pop
fldenv
inc
aas
inc
mov
int3
push
mov
inc
jmp
mov
mov
dec
mov
in
mov
aad
pop
shll
ja
daa
push
or
add
push
and
or
dec
xchg
jb
mov
xor
adc
cmp
push
outsl
imul
cmpsb
inc
push
sbb
xchg
mov
xor
insl
out
and
clc
lret
mov
mov
xchg
les
add
xor
jno
xchg
push
sarb
cmpsb
jno
fcompl
mov
fcomps
pop
cmp
jp
subl
mov
aas
sbb
jbe
cli
cmp
xor
pop
test
adc
fwait
imul
mov
sub
aam
cmp
adc
xor
js
push
je
xor
lock
pop
cmp
scas
xchg
cmpsb
sbb
adc
orl
push
pop
testb
popf
jmp
cli
cmp
cld
jp
jns
enter
mov
mov
xlat
mov
sbbl
pop
sbb
mov
insl
inc
and
xor
pop
int3
cltd
fcomps
out
and
in
jmp
and
pop
xor
ja
mov
mov
jo
push
xchg
or
sub
jno
pop
mov
jmp
jge
cmp
or
inc
rorb
jae
scas
sbb
aas
add
mov
cs
xor
inc
adc
mov
cmp
pop
pop
filds
sbb
pop
push
pusha
xlat
sub
icebp
dec
es
mov
push
sbb
leave
push
pushf
shll
insl
out
cli
xchg
sar
pop
testl
mov
lea
lea
in
inc
mov
cmp
ja
inc
js
inc
and
bound
fistps
push
lea
sub
loopne
sub
adc
jo
jl
xchg
test
dec
mov
gs
dec
and
dec
loop
cmc
scas
add
std
movsb
js
and
mov
mov
adc
ljmp
sti
aas
push
adc
xchg
pop
dec
lods
lahf
dec
loopne
cmpsb
ret
aad
fnsave
pop
add
inc
pop
rcrl
imul
mov
lret
mov
lret
push
cmpl
lods
sbb
bound
jbe
cltd
push
xchg
pop
subb
jge
std
outsb
mov
jae
dec
rcll
sti
or
scas
cmpsb
sbb
inc
adcb
mov
aad
imul
mov
mov
ljmp
jmp
cmp
mov
add
stos
cwtl
je
xchg
or
ss
sahf
subb
ret
iret
out
adc
push
xor
mov
jns
negb
xor
xchg
dec
xchg
or
bound
addb
add
push
inc
xchg
aam
pop
in
clc
stos
jne
cwtl
sub
lret
cmp
jnp
in
lahf
addb
aam
dec
das
arpl
orb
dec
pop
and
sub
mov
cs
ljmp
aas
mov
daa
mov
call
mov
add
xchg
int
pop
mov
fisttps
popa
mov
pop
aad
fchs
and
arpl
mov
sub
jg
sbb
push
dec
sub
aas
xor
mov
inc
test
lret
adc
add
mov
jnp
fdivrl
mov
in
mov
sbbb
fs
jle
xchg
dec
arpl
inc
mov
inc
mov
pop
hlt
inc
and
loopne
popf
dec
mov
mov
mov
jb,pn
xor
data16
push
in
inc
jae
lahf
mov
es
repnz
arpl
lahf
xor
es
add
stos
mov
push
aad
jecxz
rcll
pop
cmp
push
pop
lahf
ss
iret
aaa
fsin
pop
mov
pusha
out
movsb
pop
lret
add
xchg
and
in
adc
inc
and
movsb
push
mov
lret
mov
pop
xor
jno
sub
add
jnp
es
mov
out
pushf
sub
insb
inc
xchg
scas
mov
test
dec
jmp
nop
loope
dec
xor
filds
mov
jb
sbb
aam
xor
test
sarb
adc
adc
mov
clc
and
rcrb
das
movsb
jbe
push
add
cmpsl
enter
mov
mov
rol
mov
push
daa
addb
insb
cmp
pop
sub
stos
or
or
popf
into
int
add
mov
fiadds
adc
dec
and
xor
or
mov
pop
push
dec
push
rol
sub
lcall
or
notb
imul
stc
dec
es
and
add
mov
jbe
pop
and
mov
inc
jb
jl
bound
clc
push
mov
cltd
mov
je
cmpsl
mov
sub
addr16
and
in
cmp
sbb
rcrb
dec
mull
sbb
sub
out
sub
inc
inc
frstor
fistpll
cmp
sub
lea
pusha
out
scas
nop
ljmp
pusha
inc
jne
in
xchg
inc
jo
ficomps
or
xchg
es
xor
and
aam
mov
mov
nop
mov
sti
fdivr
pop
test
push
mov
add
adc
aaa
call
xchg
pop
lcall
popf
sub
add
and
push
xor
mov
orb
pop
push
push
sarb
jb
xchg
jg
inc
test
incl
xlat
ja
lcall
test
in
lret
mov
sbb
mov
inc
nop
cld
aam
jmp
lahf
stos
rcll
orb
loopne
iret
pushl
int3
std
xchg
fwait
mov
push
popa
loope
inc
cmp
dec
jle
rcr
mov
mov
push
xchg
shll
in
pushf
lret
and
shl
cmp
mov
fiadds
insl
test
repnz
mov
jl
std
mov
stos
sbb
mov
jg
test
push
add
sbb
call
nop
push
or
dec
jb
test
das
negb
jg
dec
dec
cmp
jg
push
sub
push
sahf
stc
or
xchg
xor
fstps
lea
dec
mov
aaa
std
mov
nop
mov
and
shlb
cmp
insb
stos
cmp
or
jl
push
dec
icebp
out
jmp
aad
fsubs
inc
das
repnz
out
lods
pop
imul
inc
adc
adc
push
mov
push
movsb
mov
cmp
adc
dec
or
test
scas
mov
or
sarb
cmpsl
clc
sbb
in
loopne
fucomp
jp
jbe
cmp
jmp
push
lea
cld
scas
jno
cmp
mov
in
sbb
xor
mov
lret
insb
scas
outsb
stos
xor
fsubl
test
rcrb
sub
daa
jmp
les
inc
data16
jb
add
mov
jge
mov
ret
mov
sbb
push
xchg
outsl
fimull
sub
gs
xor
inc
mov
sbb
pusha
mov
loopne
sub
ret
and
cltd
xor
xor
or
add
imul
inc
pop
ds
pop
push
test
sub
sti
gs
or
mov
dec
mov
add
scas
mov
sbb
aas
fnstsw
mov
ret
into
and
lods
lock
sti
or
push
into
leave
stos
test
movsb
icebp
jns
jbe
movsb
stos
ja
cmp
cmpsl
mov
pop
inc
push
mov
pop
mov
add
sub
mov
push
jp
insb
add
in
mov
jb
je
stos
sarl
xchg
and
sub
mov
xor
ror
and
jmp
xchg
out
sub
roll
mov
orb
mov
adcb
or
or
cltd
stos
iret
mov
ds
push
in
int
xchg
or
add
adc
inc
and
push
xchg
dec
and
outsb
sbb
xchg
mov
inc
shlb
inc
test
rcrl
xchg
rorb
dec
int3
add
leave
mov
jmp
loop
adc
dec
inc
xchg
add
shr
inc
ljmp
xor
add
dec
mov
pop
shrb
xor
movsb
lret
inc
jecxz
shll
cmp
loopne
jge
mov
lods
add
dec
adcb
and
test
out
push
cwtl
js
sbb
scas
mov
mov
ret
dec
pop
add
xlat
xchg
fsub
jecxz
imul
add
jnp
repnz
mov
pop
xchg
imul
xor
xchg
dec
inc
scas
xorl
cli
aaa
jo
test
ljmp
push
int
push
test
fwait
sub
call
jecxz
xchg
mov
repz
cmp
scas
sub
jg
shrb
sbb
jns
xchg
xchg
popa
enter
out
fs
fmulp
repnz
orb
jb
and
xchg
adc
xchg
xchg
outsb
filds
rolb
jle
inc
decb
roll
inc
shll
gs
insb
push
mov
movsl
bound
mov
sbb
jl
das
pop
mov
inc
mov
or
aaa
pop
adc
sbb
in
mov
sbb
inc
js
dec
stos
dec
jb
add
pop
call
xor
ljmp
notb
inc
xor
xchg
xchg
int
mov
mov
out
fstl
inc
lahf
fildl
cmp
cmpl
lds
fbld
fldt
bound
mov
mov
push
mov
mov
cmpsb
xchg
loope
lcall
sbb
mov
fwait
loope
sbb
repnz
imul
sbb
or
pusha
cwtl
add
das
scas
je
xor
test
xor
nop
jg
subb
lock
loop
pop
sbb
inc
icebp
mov
in
pop
aas
cwtl
inc
pop
pop
push
call
xchg
test
cmpsl
mov
mov
imul
xor
ss
or
mov
popf
dec
jbe
cld
fnstcw
std
insb
and
lret
mov
mov
repnz
mov
mov
lea
xor
repz
fcoml
sahf
jge
jae
insl
push
div
jg
cltd
xchg
or
fdivl
xchg
shlb
add
inc
arpl
xchg
lods
xor
int3
ror
enter
call
cli
scas
push
loope
adcl
sub
sbb
out
lea
cmp
sbb
push
cmp
mov
mov
inc
mov
fisubs
in
rcll
mov
pop
lret
xlat
or
pushf
adc
inc
dec
xor
sbb
mov
xchg
jmp
jne
or
or
loop
xchg
dec
jmp
imul
cmpsb
loope
stc
inc
and
cmc
inc
jle
jmp
loope
in
aas
in
push
pusha
je
mov
ret
insl
pushf
push
ret
jbe
iret
or
lret
xchg
repnz
lcall
or
nop
xor
scas
or
mov
jge
cmp
xorl
xor
xchg
and
sti
jle
xchg
mov
cmovbe
nop
push
inc
or
fcomps
test
lds
cmpb
mov
out
xchg
cmp
andb
enter
dec
jnp
stc
pop
sbb
adc
mov
adc
mov
das
dec
push
scas
cmp
outsl
test
mov
cltd
insl
fisubs
pop
dec
ror
push
decl
and
ds
xlat
sub
imul
push
sub
add
xlat
gs
imul
add
mov
sub
test
push
sbb
mov
mov
fidivl
xchg
repnz
icebp
push
addr16
xchg
int3
pop
dec
xchg
jnp
sar
jmp
imul
cmpl
cmpsb
xchg
xor
add
pusha
add
fs
lcall
xchg
xor
pushf
jae
pop
jo
stos
hlt
icebp
push
ss
adc
lcall
push
dec
in
cmp
xchg
xchg
call
lahf
iret
xchg
out
icebp
js
mov
cmp
cmp
sahf
pop
add
mov
orb
sbb
jo
pushf
cmpb
fst
stc
cli
stc
pop
leave
cwtl
clc
inc
xorl
cmp
xchg
mov
sbb
lret
les
cmc
add
test
push
xchg
cmp
xchg
vmovdqa
test
cs
xchg
pop
jge
lods
push
pop
in
std
add
clc
fld
dec
into
xor
push
lods
shlb
mov
mov
aam
je
jbe
aam
stos
icebp
lret
xchg
xchg
xlat
loope
adc
js
ret
and
inc
mov
inc
gs
in
dec
dec
lock
jne
jge
mov
inc
jecxz
sbb
insl
dec
shl
shrl
pusha
lret
loopne
pop
xchg
mov
addr16
pop
fldz
lahf
mov
sub
add
loop
aaa
jg
or
test
pop
sub
stos
into
aaa
in
or
daa
imul
jne
cwtl
into
testb
jno
inc
xchg
into
add
insl
in
sahf
jecxz
mov
sbb
fbld
ficoms
subl
aas
sbb
mov
out
sub
inc
aaa
adc
mov
repnz
repnz
cmp
stos
xchg
push
cmp
fcmovnbe
scas
mov
jo
sub
sbb
jns
jp
insb
add
and
out
enter
pop
out
and
dec
fistl
push
lds
andl
lods
stos
fldl
push
lds
adc
inc
popa
xchg
aaa
push
or
fcompl
idivb
in
int3
cwtl
add
sbbl
jmp
in
ret
adcb
fistpll
jnp
leave
lret
mov
push
jl
test
push
jmp
loope
psubusw
jae
popa
aas
mov
and
sub
or
add
add
aad
fistps
xlat
test
mov
dec
xchg
out
xor
mov
fbld
addb
push
fyl2x
call
andb
add
add
mov
sbb
out
popf
mov
add
or
mov
cmpsb
sbb
jbe
out
leave
cmpb
jmp
jmp
int
pop
dec
jb
mov
scas
mov
push
xchg
imul
cmp
ror
jbe
jne
or
lods
mov
jecxz
mov
cmpsb
int3
inc
lock
push
jnp
mov
or
add
mov
cld
repz
incl
loop
pusha
cs
pop
add
outsb
xchg
int3
xor
jb
stc
stos
lods
cmc
add
aam
lret
mov
adc
and
xchg
jo
and
mov
pop
adc
adc
shrb
data16
sar
ja
int
xchg
adc
inc
enter
scas
mov
and
adc
aas
inc
fsubs
andl
mov
jb
insl
jb
mov
mov
or
mov
inc
out
shrb
mov
xor
dec
xor
call
sub
fsub
in
xchg
hlt
adc
xor
mov
lret
cli
push
pop
jp
lret
testb
pop
sub
push
xor
adc
push
mov
test
fwait
mov
add
inc
ljmp
add
mov
xor
jp
movsl
roll
sbb
mov
cmp
fdiv
push
sahf
into
imul
imulb
sub
nop
pop
out
sahf
mov
sbb
jg
xchg
insb
into
push
push
insl
mov
mov
sbb
sar
mov
leave
inc
test
ss
gs
push
sbb
jge
mov
xor
int
icebp
xchg
cmpsl
cld
cmp
xlat
or
imul
aas
sbb
shlb
lods
sahf
jo
dec
xor
push
sbb
call
out
dec
or
sub
mov
fdivs
in
stos
push
aas
sbbb
test
gs
ds
sub
mov
pop
sub
mov
insl
je
mov
movsb
jg
jmp
mov
popa
sbb
mov
shr
sub
jns
add
fistpl
mov
sbbb
inc
add
rclb
test
or
int
jg
pop
lea
mov
cmp
push
xchg
and
inc
inc
rclb
subl
mov
pop
cmp
pextrw
cmpsl
pop
arpl
jns
arpl
into
jg
sbb
cwtl
push
xchg
pop
sbb
push
xor
jbe
add
mov
and
int3
mov
or
and
cmp
das
sbb
ret
xor
mov
rcrl
mov
aaa
jne
sub
pusha
mov
or
sub
dec
ds
das
test
out
cmp
in
dec
movsl
mov
xlat
stos
movsl
repnz
sub
sbb
pop
sub
icebp
scas
stos
mov
lahf
push
dec
data16
push
cmpsl
test
ret
out
jg
addb
bound
jp
dec
mov
jb
pop
pop
cmp
mov
xchg
scas
in
stos
mov
sub
mov
aam
insl
xchg
push
xlat
push
mov
push
in
mov
ljmp
insb
cli
ret
negl
xor
addr16
stc
stos
int
add
fsubs
jecxz
fisubrs
xor
or
pop
or
push
xchg
xor
in
je
inc
xlat
loope
addr16
out
pop
xchg
aad
xor
int
xchg
mov
push
and
pushl
lds
xchg
das
div
sub
sbb
sbb
jns
cmpsb
or
sbb
pop
cmp
or
or
sub
push
sub
adc
es
add
roll
imul
add
ret
add
sar
das
and
jo
aam
xor
imul
sub
std
aaa
dec
inc
test
cmp
rorl
pop
int3
das
ljmp
sub
dec
imul
ljmp
stos
int
add
sub
in
aam
push
add
fs
mov
sbb
mov
call
push
mov
mov
shll
dec
cmp
push
xchg
cmp
pop
fnsave
insl
daa
add
xchg
dec
or
xchg
les
or
xchg
xchg
mov
mov
ljmp
hlt
ja
adc
mov
lods
jo
int3
or
mov
sub
fcmovb
mov
push
stos
xchg
sbb
data16
ljmp
push
and
fstpl
fwait
cwtl
mov
lcall
out
push
fs
cwtl
jnp
xlat
add
and
and
jne
sub
das
lea
push
xchg
aam
jb
pusha
dec
inc
inc
add
je
in
cld
inc
xchg
clc
fcompl
xchg
xchg
and
dec
mov
xchg
popa
rcrb
inc
sbb
sbbb
push
lret
call
call
cltd
jne
ljmp
movsb
jg
push
dec
mov
add
rdpmc
dec
les
fcomp
xor
push
out
pop
sbb
mov
in
jbe
mov
mov
add
cmovs
lds
insl
add
cmp
dec
stos
push
jnp
xchg
rcrb
negl
mov
repz
hlt
xchg
aaa
mov
adc
inc
call
xor
push
or
add
xchg
dec
iret
xchg
popf
outsl
xor
sub
cli
cmp
fwait
cld
sub
roll
xor
imul
cli
xor
dec
fs
dec
adc
fldenv
lcall
sbb
mov
mov
cmc
faddl
div
cwtl
fstp
adc
mov
pop
mov
fcmovu
or
mov
pop
stc
insb
ja
adc
dec
idivl
push
add
dec
dec
xchg
sub
not
aas
sarl
and
sbb
xor
fisubs
clc
xchg
sub
mov
adcl
push
loop
adc
int3
out
enter
mov
cmp
into
xchg
lret
rorb
dec
stos
ficoms
cwtl
add
sbb
test
adc
mov
in
fwait
mov
mov
sub
mov
and
ret
jge
lds
jae
clc
ljmp
jne
or
mov
stos
das
ja
ret
jae,pn
movsb
out
ret
insl
cmpsb
fists
hlt
xor
and
mov
sbb
sbb
and
xchg
cwtl
aam
ret
xor
push
mov
mov
inc
out
xlat
xor
lret
ss
mov
pop
push
insl
inc
pushl
jno
mov
push
xor
mov
jbe
or
adc
aaa
mov
inc
adc
jnp
add
cs
jo
xor
mov
leave
lret
es
sbb
gs
leave
sub
and
sub
fs
imul
test
xor
cmpsb
mov
mov
cwtl
mov
repz
pusha
mov
seto
push
out
repz
sahf
xor
adc
and
cmp
jle
inc
ret
jno
sbb
leave
pop
outsb
inc
into
mov
cmp
shr
fs
in
notb
shrl
movsl
or
aam
test
inc
lds
sti
icebp
popf
mov
aam
or
mov
jg
push
fldl
dec
xchg
dec
jle
sub
loope
dec
and
lds
xorl
imul
sbb
bound
out
jle
inc
imul
orl
sbb
imulb
sub
or
mov
ljmp
mov
mov
in
sub
jmp
out
cmp
mov
or
mov
cli
push
inc
mov
test
hlt
mov
pop
mov
mov
fs
mov
and
test
rcll
orb
test
xchg
dec
push
ja
inc
xor
dec
stos
mov
ret
bound
cmp
pop
iret
shl
push
push
iret
add
lea
cli
push
popa
and
nop
jne
fs
xchg
aaa
pop
insl
inc
cmp
mov
stc
inc
into
ja
adc
pop
jo
mov
sub
pop
test
clc
pushf
stos
adc
test
add
scas
js
movsb
pop
or
ss
sti
sahf
xchg
rolb
scas
mov
daa
cmp
fcoms
repnz
es
push
icebp
gs
and
out
popa
call
out
xchg
fimuls
nop
push
pop
in
jge
xchg
js
jnp
cli
lea
dec
ljmp
push
jmp
push
add
shrb
imul
popf
mov
push
sahf
sub
mov
mov
leave
cmp
enter
push
test
sub
sub
dec
cwtl
mov
out
ss
push
stos
sub
lret
and
pop
cmp
mov
fcmovb
jg
sub
cmp
outsb
std
xor
insl
or
cwtl
sbb
movsb
pop
cmpsl
push
cmpsl
lahf
daa
pop
aas
fwait
adc
imul
cmp
fistpl
es
push
xor
add
jne
ljmp
subb
data16
jae
pop
std
lret
shlb
xor
push
fistpll
ja
dec
repnz
outsb
adc
mov
xchg
cmp
std
imul
jno
es
sbb
and
jle
jecxz
push
ljmp
sbb
loope
push
inc
push
ja
mov
xor
and
arpl
mov
insl
arpl
mov
clc
movsl
cmc
fst
cmpb
cltd
out
sahf
out
lahf
int
and
xchg
mov
and
inc
lahf
aam
aas
std
stos
test
lods
push
cmpsb
les
xchg
movsl
lret
rcrb
sarb
or
iret
jo
mov
and
lock
or
mov
js
fsubp
loopne
bound
dec
insl
sbb
xchg
cs
cmpsb
call
jo
outsl
sbb
jg
mov
bound
popa
test
mov
mov
dec
or
mov
mov
mov
js
jmp
push
jbe
iret
xchg
sbb
xchg
pop
xchg
addr16
sub
clc
leave
and
mov
mov
cmp
shrl
dec
insl
pushf
sbb
out
movsl
adc
test
ss
movsl
pop
fsubrp
sbb
dec
jecxz
sub
pop
mov
test
sbb
rol
lds
mov
mov
lcall
xorb
icebp
aad
jne
mov
dec
je
in
pop
mov
lret
lret
scas
gs
repz
push
insl
push
enter
fsubs
repz
les
add
in
and
hlt
cmp
cli
les
test
mov
inc
int3
cmp
mov
and
jne
repz
push
pop
clc
stos
fiaddl
adc
ret
sbb
pushf
xchg
cltd
fs
xor
lret
fwait
sbb
rcll
pushf
lret
pop
loop
das
cmp
cld
inc
int3
inc
sbb
clc
daa
not
clc
inc
xor
test
movsl
sub
mov
adc
pop
stos
repnz
jp
dec
sbb
jne
cli
aas
hlt
in
in
and
shll
stos
outsl
mov
ret
jl
xchg
ret
adc
in
out
fildll
inc
aas
sbb
jecxz
repz
cli
cwtl
jnp
fndisi(8087
mov
stos
push
cmp
sbb
ja
enter
mov
test
mov
or
lea
call
dec
pop
out
pop
ret
popa
shlb
jg
push
and
push
ret
clc
ror
pushf
push
xchg
add
push
push
mov
jo
jg
xchg
fisubrl
xor
in
pop
push
bound
and
sbb
lcall
sub
mov
cmp
or
fcoms
enter
jbe
popl
mov
les
push
mov
xchg
pop
sub
xchg
xchg
jecxz
ror
aas
xchg
movsl
gs
jmp
sbb
mov
out
in
out
movsl
mov
push
dec
pop
mov
shrb
fbld
lea
push
cmc
mov
xchg
sub
je
jns
aaa
xor
or
xor
add
mov
andb
jl
jp
mov
sarb
shlb
enter
imul
popf
arpl
pusha
ss
pushf
fdiv
pop
cmpsl
insb
scas
test
fcoms
inc
fdivrp
cltd
and
xor
jge
cmpsl
jae
bound
call
push
stc
xchg
xor
aam
popf
cmpsb
insl
punpckhdq
push
xchg
mov
mov
sbb
push
inc
stos
add
leave
lea
push
ret
push
roll
andb
pop
movsl
stos
jge
ss
xlat
push
sub
mov
call
fs
in
cmp
xor
push
dec
cmp
push
outsb
es
push
out
in
sti
cmp
pop
enter
movsb
pop
ret
mov
pop
pop
mov
push
in
stc
clc
lret
out
out
into
lret
xchg
sub
push
sub
pop
mov
divb
insl
sub
ret
in
and
sarb
icebp
fmuls
pushf
pop
daa
sbb
js
and
inc
pop
lods
and
movsb
cmp
xor
je
pusha
jl
arpl
cmp
sarb
outsb
xlat
push
fs
scas
popa
std
mov
inc
mov
inc
ja
test
pop
in
push
dec
mov
xor
jg
notl
add
stc
add
movsl
jne
lret
lock
sub
pop
mov
jnp
jp
add
dec
sub
xchg
ja
lret
stos
fidivrs
sbb
repnz
fsubrs
bound
aas
add
mov
int3
adc
xor
fnstenv
jecxz
int
inc
jnp
aaa
push
insb
push
into
cmpsl
mov
dec
negl
xor
sbb
mov
sbb
pop
cmp
jbe
lcall
jl
je
or
cmp
or
js
add
mov
loopne
and
xlat
clc
lret
daa
mov
les
popf
stc
dec
push
jo
mov
mov
xor
imul
jae
push
decl
sub
lahf
push
jp
fs
cmp
std
mov
daa
xlat
ss
jmp
dec
jge
add
mov
add
sti
or
and
xchg
in
movsl
and
inc
lret
lahf
push
popf
pop
push
pop
mov
aam
jl
filds
dec
out
shl
xchg
and
cli
andl
mov
mov
ffree
lahf
cmpsb
ljmp
dec
sbb
adc
pop
cmp
jge
lcall
mov
je
mov
xchg
sbb
roll
jae
push
jo
jmp
mov
adc
mov
dec
or
adcl
or
sbb
ds
xchg
xchg
xor
inc
push
dec
in
jmp
add
enter
ret
fs
lret
fidivrs
fmuls
push
inc
fcoms
push
cmp
repz
add
in
std
or
push
inc
aas
jne
in
xor
jae
mov
or
dec
xor
xchg
gs
mov
xlat
xchg
jbe
xchg
xorl
pop
and
jg
test
outsb
adc
inc
shlb
jno
std
jmp
inc
lods
loop
fldl
and
and
jns
mov
add
cmpsl
mov
inc
and
fcoms
add
dec
jnp
aad
ret
fildll
loop
cwtl
cmpsb
or
inc
cld
cmp
sarb
inc
mov
jg
das
jecxz
fwait
cmpsb
xlat
fxch
movl
or
xor
pop
imul
icebp
jecxz
cmpsb
lock
cmpsl
sbb
mov
inc
mov
dec
dec
sbb
aaa
mov
int
mov
add
mov
xor
push
add
popf
fxch
dec
ljmp
imul
and
sahf
into
lock
xchg
xor
mov
arpl
sub
in
es
push
pusha
mov
mov
loop
ss
pushf
mov
mov
das
dec
pop
add
lcall
sbb
mov
lret
xor
shlb
fcomi
lret
in
adc
mov
leave
mov
movsb
mov
in
jno
stos
xor
out
cs
xlat
sub
and
les
pop
sub
ss
clc
repz
mov
jle
loop
je
mov
mov
mov
nop
pop
ud1
dec
mov
insb
fldcw
je
out
cld
pop
cs
in
xchg
das
fld
mov
sbb
jb
cmp
dec
lcall
fmulp
lods
not
dec
xor
test
out
es
pop
sbb
nop
pop
xor
mov
dec
lcall
xor
in
sbbb
fimuls
add
xor
or
pop
xor
out
and
ljmp
inc
inc
ja
jb
jo
ficoml
cmp
pop
adc
cmovo
cltd
xchg
mov
xchg
push
pop
push
mov
dec
imul
jns
fimull
xor
sar
pop
and
leave
iret
jo
out
dec
pop
insl
shlb
clc
pop
out
mov
lds
arpl
mov
push
dec
iret
loope
jmp
mov
lret
testl
sahf
fcmovnu
add
call
jns
arpl
in
adc
mov
jb
sbb
test
cmp
pop
outsl
sahf
push
rcrl
pop
sub
jp
pop
cmp
or
adc
stos
std
cld
xchg
and
bound
das
dec
or
rorb
ss
fidivrl
sbb
mov
scas
adcl
imul
xlat
xlat
loopne
inc
shrl
sbb
lock
leave
fcompl
lds
sahf
add
movsl
pop
movsl
mov
repnz
jge
add
sbb
dec
loopne
shll
lods
es
bound
mov
roll
cli
leave
mov
and
pop
adc
lahf
dec
ficoms
out
dec
push
push
insl
or
xchg
stos
in
fdivr
rcl
cltd
fwait
inc
xchg
mov
xchg
push
jae
mov
mov
cmp
jl
xchg
jnp
outsl
mov
out
enter
sbb
sbb
push
xchg
and
mov
inc
sub
adc
cwtl
clc
insl
jo
cmp
imull
pusha
mov
into
cmp
idiv
mov
sbbl
mov
cmpb
pop
push
xchg
jns
or
out
pop
clc
push
xor
mov
jmp
test
shll
cmpsl
leave
mov
mov
mov
pusha
or
add
mov
push
test
mov
aam
mov
imul
mov
imul
cmp
sbb
pop
jmp
dec
dec
dec
pop
pop
and
cwtl
cmp
sbb
pop
jnp
sbb
movsb
pop
stc
fucomp
mov
std
test
add
add
aad
cmp
xchg
add
addb
std
loopne
sbb
popa
sbb
mov
xchg
adc
dec
push
push
xchg
mov
das
int
jp
sub
push
imul
stc
mov
aad
push
lods
in
int
sbb
clc
imul
xor
inc
and
int
jbe
cmp
fbstp
daa
mov
inc
scas
sarl
pop
xchg
lock
cmpsb
jnp
and
jbe
pop
xor
in
and
mov
and
mov
xchg
ret
les
into
adc
mov
inc
push
sub
xchg
les
nop
jg
mov
mov
ja
data16
fwait
dec
push
inc
lods
pop
pop
or
push
mull
and
dec
mov
das
dec
mov
mov
repnz
fcomip
xorl
popa
xor
xor
mulps
cmp
or
loop
mov
loopne
ficompl
aaa
sahf
cmp
xor
fimuls
in
lret
dec
sbb
sub
outsb
lods
mov
in
xchg
mov
fiadds
lret
inc
inc
fcoms
dec
lgs
and
mov
push
leave
fisubs
ja
adc
adc
pop
mov
inc
adc
inc
mov
nop
dec
cmp
subl
fwait
sub
cmp
push
je,pt
cmp
or
jmp
es
leave
lcall
and
cmpl
and
lret
out
xchg
lea
stc
inc
pop
sub
das
mov
jmp
lds
pop
movsl
call
sbb
adcl
cmpsl
adc
sbb
popa
push
lods
test
test
repnz
js
or
shll
imul
mov
repnz
aaa
aas
incl
in
ret
inc
ret
sbb
filds
shlb
stc
pop
xchg
push
mov
pop
mov
xor
dec
sbb
repz
mov
mov
push
out
xchg
sub
add
add
shlb
je
sbb
push
add
mov
scas
push
jl
in
add
cmp
or
xchg
cmpl
scas
insl
aad
adc
sahf
insl
dec
sbb
lea
int3
les
mov
push
or
arpl
dec
adc
mov
in
outsl
xor
popa
fwait
lds
dec
push
shrb
inc
push
adc
or
jecxz
mov
cmp
movsb
mov
sub
mov
sub
xor
insl
mov
inc
inc
xor
fldcw
inc
mov
mov
dec
cli
xor
inc
iret
pop
shl
out
and
inc
test
sub
dec
sub
pop
mov
sub
loope
dec
jns
clc
jae
push
push
icebp
iret
push
inc
hlt
neg
lret
push
push
clc
dec
je
scas
cmp
mov
into
push
sbb
sbb
dec
mov
nop
je
movsl
push
out
adc
mov
movsb
xchg
or
test
pop
jb
sbb
imul
push
jno
popa
jp
inc
jns
je
jo
stc
and
pop
xchg
ljmp
movsb
mov
xlat
fidivrs
adc
es
cmp
push
adc
or
enter
mov
mov
cs
push
arpl
jae
mov
divl
fcomps
call
mov
gs
mov
pop
pop
jns
mov
mov
lcall
cmp
jmp
dec
xor
inc
pusha
js
pop
icebp
movsb
mov
lods
xchg
shll
ss
je
mov
cmp
add
pop
sarb
sbb
mov
jmp
and
mov
sti
mov
xor
popa
pop
repz
dec
shrb
std
je
adc
addr16
push
leave
mov
mov
arpl
push
les
mov
repnz
shrb
dec
cli
fmuls
push
mov
jne
pop
cmp
mov
sarb
jbe
mov
cs
mov
int3
jp
int3
pop
aad
sub
mov
ret
scas
daa
jbe
sub
jp
cltd
ja
adc
testl
push
inc
ds
jecxz
shll
out
pusha
scas
jmp
sbb
pop
pop
or
loope
xchg
push
pop
pushl
imul
fists
pop
sub
movsb
sub
sub
stos
and
and
divb
and
sub
add
push
jl
dec
movsb
imul
xchg
into
xor
mov
pop
or
xchg
fcom
pop
fbstp
iret
imull
mov
dec
test
inc
test
adc
imul
xor
in
jmp
inc
cmp
pushf
ds
in
movsl
mov
jmp
movsl
pushf
sbb
add
inc
mov
je
das
xchg
loopne
popf
arpl
outsl
push
out
inc
xchg
sub
push
inc
fidivs
sbb
sahf
ret
cmc
je
into
sub
mov
in
inc
cmp
leave
dec
insb
aaa
pop
stos
fcompl
mov
cld
loopne
mov
and
add
cmp
inc
aam
and
cld
ljmp
out
inc
adc
repnz
xchg
xlat
adc
fldl2t
push
orl
pop
fimull
insl
jne
pop
icebp
add
cld
notl
rcll
mov
cmp
mov
dec
add
inc
jl
sub
ljmp
and
xchg
mov
and
cmc
mov
sbb
push
mov
scas
or
sub
cmp
sbb
mov
jl
push
mov
in
loope
pop
ret
int
in
outsl
pusha
popf
mov
mov
inc
fsubs
xor
ficoms
rcr
jae
xor
pushf
lods
inc
inc
pop
mov
jnp
push
push
aas
xchg
jle
fistpl
push
or
fiadds
inc
and
orb
cltd
decb
jle
jge
push
lcall
lods
sub
ret
stos
mov
shlb
test
fdivrs
push
enter
xor
pusha
add
bswap
mov
out
loop
sub
fwait
shr
shl
mov
jmp
stos
adc
ds
imul
cwtl
cs
push
jns
pushf
sbb
clc
pop
xor
sti
test
ljmp
xchg
in
test
loop
aas
sub
sbb
js
pop
xor
or
mov
icebp
xchg
sbb
push
push
inc
sub
xor
xor
jo
push
pop
lret
in
jecxz
leave
jns
sbb
jmp
enter
fcompl
jg
fstp
icebp
xor
sub
pop
add
jp
ljmp
sub
adc
push
aas
mov
inc
xchg
xchg
sbb
jp
push
repnz
outsb
dec
adc
xchg
push
cli
jns
fnstenv
ja
enter
arpl
sbb
push
mov
sub
sub
mov
jne
sti
out
sbb
loopne
dec
inc
xor
jb
outsb
xlat
sbb
xchg
cmp
in
cmp
mov
in
pop
push
jnp
xchg
inc
sub
jl
in
push
xchg
mov
lcall
shrl
adc
xor
dec
sarl
imul
jae
sbb
add
push
mov
or
shll
daa
adc
out
aas
sbb
cmp
mov
stc
cmp
and
xor
cmp
xor
js
mov
js
sbb
js
push
mov
idivb
call
pushl
bound
imul
lea
adc
in
lods
dec
sbb
adc
pop
xchg
sub
cmp
push
push
cmp
sbb
stos
aaa
std
cld
pop
jne
out
aas
inc
sbb
adc
and
scas
dec
std
pop
enter
insb
in
jns
mov
popf
ja
aas
lcall
icebp
std
mov
lea
lcall
inc
lret
mov
or
add
je
ret
and
push
mov
movsb
scas
call
dec
push
xchg
xchg
test
faddp
mov
dec
aad
push
adc
cmpsb
pop
daa
out
dec
hlt
lahf
outsl
push
lret
addr16
decl
sub
or
push
xchg
popf
jnp
out
fwait
lahf
ss
pop
mov
cld
push
ficompl
jle
test
mov
lods
lcall
jmp
in
sbb
fidivrl
hlt
shll
or
xor
xchg
push
sub
mov
test
aaa
mov
pop
xorl
dec
repnz
insb
cltd
ljmp
inc
push
pop
hlt
insl
leave
add
inc
sti
jge
popf
mov
jecxz
dec
sbbl
sbb
mov
cmp
jo
add
icebp
frstor
push
adc
or
mov
repnz
xchg
mov
ret
in
dec
je
xor
mov
lcall
dec
inc
pop
and
mov
scas
mov
sti
pop
sub
repnz
sbb
jle
xchg
or
xchg
stos
jg
std
fdivp
xor
push
dec
movb
loop
mov
fisubl
xchg
jnp
hlt
cmp
xchg
test
jns
pusha
add
repnz
sbb
fs
mov
mov
jno
sbb
inc
js
push
mov
pushw
jae
dec
mov
stos
out
pop
out
ss
int
dec
pop
xor
inc
pop
push
arpl
call
sbb
out
dec
add
add
rcll
dec
outsb
loopne
insl
cltd
jl
lcall
repnz
pop
daa
dec
mov
movb
out
call
mov
xor
jo
push
enter
je
shrb
scas
test
in
sub
outsl
movsb
in
push
fsubp
or
lea
je
inc
mov
test
add
cmp
adc
loope
outsl
in
lret
repz
fistps
inc
ss
stos
xchg
add
aaa
cmp
addb
aaa
push
cltd
frstor
xor
popa
and
je
addb
sbb
into
mov
mov
rol
adc
push
xchg
jns
xchg
mov
iret
out
bound
je
mov
xchg
xchg
rol
and
adc
or
sub
idiv
pop
adc
fistl
and
fwait
jns
in
sub
and
sbb
jb
cld
fcos
ja
cmp
sbb
add
loop
dec
fdivr
xchg
xor
sub
enter
clc
mov
addl
insb
popa
xor
int3
jl
dec
xor
xchg
dec
mov
rcrb
mov
xchg
rorl
add
dec
add
dec
jo
sti
cli
repz
sub
mov
fs
das
in
js
xor
add
dec
mov
or
xchg
xchg
push
jge
sub
push
loope
sub
in
sub
test
cmp
imul
ret
imul
jg
mov
fcoms
mov
shll
icebp
jae
dec
out
xor
add
fwait
mov
hlt
loop
lret
mov
push
ja
sti
inc
mov
xlat
or
xlat
inc
lds
jo
gs
jg
andb
scas
ss
jb
fdivrl
mov
xor
insl
push
jmp
arpl
imul
std
lods
call
cs
sub
cmp
mov
pop
xchg
xor
sub
mov
rcrb
sahf
mov
pop
jne
in
js
xor
xchg
lcall
or
sub
shll
mov
xchg
lahf
sub
lea
push
data16
jno
out
jl
test
sbb
mov
ja
mov
mov
movq
dec
lret
xor
pop
cmp
mov
sub
sti
mov
fmuls
nop
fildll
insl
test
dec
test
in
js
xor
pop
mov
dec
push
cmp
mov
push
dec
sub
popa
push
stc
jle
arpl
pop
sub
push
insl
insb
and
gs
mov
sub
outsb
mov
lods
dec
ss
pop
rcll
pop
aad
into
aam
adc
fwait
push
sub
movl
mov
fisubrs
dec
or
repz
rorl
xor
daa
add
inc
push
pop
js
lea
dec
rcrb
sbb
adc
popf
dec
incb
sub
add
je
push
sub
sub
ljmp
add
lcall
push
or
and
scas
or
ret
out
or
or
adcb
jb
pop
jmp
sub
mov
and
add
xor
imul
cmp
aad
lods
lock
in
rcl
or
jle
fidivrl
dec
sbb
aas
rol
cmpxchg
add
inc
shlb
or
xchg
and
adc
out
xchg
and
jns
std
mov
or
bound
and
pop
mov
mov
jae
lret
add
mov
sbb
ret
mov
adc
adc
ja
and
and
cmp
mov
jl
mov
add
xor
mov
fwait
in
inc
incl
mov
popf
fwait
shrl
mov
iret
add
sarb
xchg
sbb
ss
mov
subl
stc
mov
loopne
gs
mov
loop
fstl
ds
xor
inc
mov
add
mulb
push
dec
imul
insb
scas
xor
mov
sub
imulb
inc
mov
cltd
cmp
jge
cmpsl
fstps
lds
std
adc
insb
sbb
jbe
push
dec
ror
and
dec
enter
mov
std
sub
xorl
hlt
ret
mov
or
imul
mov
cs
pop
xchg
js
hlt
and
es
adc
repnz
mov
int
inc
or
adc
clc
subl
gs
xor
jmp
lahf
ja
pushf
cld
hlt
les
fdivs
sub
dec
or
fisubrl
fnstcw
sbb
jl
ret
ret
outsb
or
inc
fsubrl
loop
sbb
mov
cmp
dec
or
jmp
jno
ja
or
mov
push
xor
fsubs
mov
add
out
pop
scas
repnz
fisubrl
int
gs
mov
aas
push
cmp
sarb
inc
mov
lret
stos
imul
add
sbb
mov
cwtl
and
out
jb
outsb
dec
sbb
jmp
dec
mov
rcll
nop
clc
sbb
or
and
mov
jl
out
scas
movsl
sub
xor
loope
dec
mov
cmc
shl
insl
and
xor
jmp
mov
fs
xor
xor
add
mov
dec
movsb
popl
jbe
fstpt
data16
pop
movsb
int3
imul
shrl
fldenv
adc
sarb
inc
aaa
add
inc
mov
xchg
mov
sti
shlb
push
push
dec
ja
stos
fstps
ret
loop
es
std
mov
cmp
jno
jmp
xor
xchg
sub
xor
test
movsb
and
jecxz
lods
ret
sub
jns
aam
jae
in
imul
mov
add
out
jno
stos
cmp
mov
shlw
out
mov
sbb
cmp
adc
jns
stc
dec
call
outsb
sbb
pop
mov
ret
divl
xor
pushf
fdivrs
popf
xlat
add
fbstp
or
pop
movsb
ja
sarb
mov
or
mov
cs
mov
ficomps
in
popf
out
mov
mov
mov
or
adc
cmpb
or
mov
xor
stos
cli
je
sbb
add
out
aaa
push
test
or
out
popf
jmp
insl
ss
sbb
ret
popa
jp,pn
jnp
push
add
and
lods
xor
out
mov
cmp
ret
lds
xchg
scas
fldl
xorb
add
pusha
jmp
in
lods
jae
scas
aad
in
pusha
popa
ret
pop
in
adc
jge
scas
pop
out
fdivp
sub
hlt
stc
push
xor
inc
inc
xchg
lret
inc
movsb
rolb
scas
scas
jl
xor
cmp
nop
testl
aam
sub
call
cmp
stos
xchg
mov
in
ja
jb
call
cmp
jnp
xchg
sub
imul
scas
pop
outsb
dec
and
fcmovbe
shrb
dec
scas
fwait
xor
pop
xor
cld
mov
shl
into
mov
add
dec
dec
mov
fidivrs
jno
ljmp
sub
int
mov
mov
sbb
mov
jecxz
push
push
inc
cmp
jle
jge
inc
lods
movsl
loopne
jbe
sbb
in
pop
dec
xchg
jo
adc
mov
mov
cwtl
ret
sub
mov
lahf
bound
add
and
aam
js
fldenv
fistps
in
loopne
push
inc
push
push
lods
cmp
mov
mov
pop
scas
push
scas
js
lahf
dec
and
cmp
bound
in
dec
mov
divb
pop
cmp
cs
shll
or
sti
jbe
call
lea
pushf
sahf
je
mov
pop
lcall
add
push
stc
movsb
mov
push
cltd
mov
pop
fs
out
out
jne
repnz
scas
mov
mov
inc
aaa
ljmp
cmc
sbb
inc
cltd
mov
std
jp
pop
add
inc
imul
inc
out
pop
and
push
xor
flds
push
scas
lock
es
jmp
mul
mov
popf
jge
sahf
fisubrl
js
mov
pop
dec
je
mov
fisubs
sub
or
jne
push
cmp
inc
mov
jno
sbb
popa
inc
add
es
add
xor
xor
frstor
and
sahf
push
dec
int
fsubl
lods
ja
cmp
pop
cmp
jbe
lcall
push
cs
rol
add
pop
jns
xor
inc
inc
sbb
jb
sbb
cwtl
or
shll
push
aam
aam
and
in
xor
into
lahf
cli
sub
jecxz
pop
popl
int3
sbb
hlt
inc
je
insb
xchg
leave
in
adc
mov
push
in
fwait
out
adc
addr16
mov
leave
add
pop
test
mov
clc
das
outsb
mov
fiaddl
lcall
mov
aad
icebp
xor
in
pop
imul
nop
pop
pop
or
add
pop
shr
pop
adc
mov
scas
push
je
scas
rcll
or
sbb
cli
ret
and
cmpb
fcomip
test
in
add
push
bound
stc
mov
into
into
insb
mov
les
insb
cmp
sbb
cmp
add
es
xchg
cmc
je
push
inc
xchg
or
fldt
scas
fldl
ljmp
mov
mov
jo
jge
and
inc
pushf
cmc
push
cmp
and
jl
xchg
in
push
or
iret
mov
jns
cmp
aas
pop
adc
xchg
sti
cmp
dec
into
mov
jle
push
inc
jle
pop
jae
push
sti
outsb
pusha
fldl
mov
ljmp
xchg
xchg
mulb
int3
popf
push
idivl
xchg
loop
das
pushf
mov
add
adc
ret
xchg
rclb
xlat
dec
cs
inc
sbb
or
jecxz
in
loopne
ds
test
dec
lods
xchg
enter
test
into
pusha
xchg
repnz
mov
out
push
pop
sub
sub
push
arpl
stos
push
cmp
cmc
mov
mov
fsubs
xor
cmpsb
jecxz
mov
jg
adc
fdivs
hlt
adc
or
add
lds
jnp
xor
or
mov
fcmovnb
mov
js
sbb
dec
or
les
out
insb
test
std
es
cwtl
jl
sahf
js
add
das
popf
push
movsb
jp
aam
inc
lcall
or
sub
adc
xchg
jge
jo
adc
ret
adcb
jp
ss
test
cmp
add
adc
inc
add
mov
push
in
test
jb
pop
adc
sub
jmp
and
inc
iret
push
cs
push
or
push
gs
mov
pusha
sbb
clc
mov
xor
and
jne
dec
inc
je
popw
push
cld
mov
out
mov
scas
std
mov
adc
test
andb
lret
adc
sub
mov
cmp
ds
stc
imul
and
sbb
rolb
jo,pn
imul
sbb
push
nop
mov
jno
sbb
jae
lcall
mov
push
xchg
rclb
dec
cmp
xor
std
inc
push
sub
leave
push
mov
cltd
lret
adc
add
or
lds
cmpsl
mov
in
adc
sub
arpl
bound
cwtl
dec
xchg
sbb
xor
daa
pop
mov
scas
roll
test
decb
orl
mov
xchg
shll
mov
enter
mov
mov
cmpb
pop
xor
inc
cmp
jno
je
es
dec
xor
and
sti
and
out
testb
add
mov
pop
pop
inc
mov
sub
pop
jmp
push
dec
and
pop
push
mov
data16
cmpsl
cld
bnd
mov
scas
je
adc
xor
nop
xchg
jmp
mov
dec
jle
stos
sbb
and
es
xchg
imul
xchg
mov
lahf
or
mov
and
sbb
cmpsb
std
loopne
movsl
or
addr16
shl
push
enter
in
mov
loopne
and
aad
sbb
cmpsb
push
mov
cmp
mov
aaa
ret
fcoml
cwtl
or
rorb
lock
pop
inc
xor
pop
icebp
loope
scas
popa
dec
xor
shlb
jge
test
sahf
imul
pushf
ret
add
push
shr
std
sub
push
pop
setns
pusha
push
or
push
cmpsb
pusha
scas
sub
or
icebp
lahf
pop
rcrl
cltd
test
rclb
cmc
sub
stc
push
lea
add
std
test
ret
cmp
sub
jo
loopne
out
xchg
outsl
shrl
ret
loopne
xchg
in
sub
sbb
xchg
and
or
mov
mov
rep
sbb
rcrb
dec
rorb
lcall
dec
jns
gs
fidivrl
xchg
inc
inc
mov
adc
sbb
or
and
lcall
sub
in
xchg
push
jae
mov
jo
inc
ret
out
xorl
pop
mov
ret
movsl
stos
test
pop
jmp
pop
jo
mov
pop
enter
and
or
cmp
inc
mov
addb
xchg
fstpl
inc
sbbl
inc
mov
clc
jo
test
aas
dec
jg
jns
fs
pop
or
pushf
movsl
jnp
scas
loope
cs
xor
nop
scas
sub
jae
or
cmp
jo
mov
xchg
cmp
and
push
jo
mov
dec
jmp
addr16
aad
xlat
fldcw
std
stos
inc
out
sub
mov
inc
outsl
addl
mov
mov
aam
ja
dec
imul
out
sub
or
inc
mov
adc
mov
push
adc
lahf
push
popa
jno
lcall
sbb
popa
ss
adc
dec
fwait
adc
iret
addr16
sub
cmp
pop
insl
les
jns
mov
std
mov
sbb
nop
addr16
dec
or
and
add
xor
call
sti
lahf
dec
jmp
sbb
and
dec
ss
insl
pop
lods
test
shrb
icebp
or
dec
adc
push
xor
mov
sarb
rcll
xchg
testl
adc
sbb
test
mov
inc
lock
jae
addr16
and
imul
movsl
sarl
push
add
push
xor
pop
xchg
shl
push
or
push
or
mov
and
dec
mov
fbld
loopne
sbb
rcll
movsb
inc
pusha
push
dec
jne
mov
jne
cwtl
mov
mov
lret
adc
lret
shll
and
arpl
lahf
ja
shl
xor
cmpsb
jl
xchg
sbb
cmpsb
enter
xor
scas
and
clc
pop
pop
xchg
fmull
outsl
push
or
pop
mov
aad
nop
shrl
mov
mov
add
arpl
test
rclb
icebp
xor
es
ds
cmp
lock
xor
je
sbb
rorl
imul
dec
flds
xor
mov
lds
xor
sub
adc
xor
and
and
fs
mov
jecxz
shll
push
mov
adc
push
insb
sub
xchg
pop
mov
push
jae
cli
cli
lock
adc
sahf
mov
push
stos
fidivrs
sahf
lock
cmp
and
lahf
pop
test
jp
dec
scas
add
shll
and
pop
andl
push
jae
mov
jo
out
xchg
sub
pusha
dec
pop
aam
lret
add
sbb
filds
inc
inc
sbbl
inc
add
or
ret
int
add
pop
ljmp
insb
movsb
insb
popf
sbbb
mov
mov
jnp
test
iret
sub
sbb
lcall
sbb
add
neg
nop
push
mov
aaa
or
jno
ret
xor
adc
repnz
sbb
or
lds
mov
sub
mov
jbe
cltd
cli
std
cmpsb
dec
xor
adc
mov
gs
shlb
ret
xchg
push
jbe
outsl
push
push
cli
and
sbb
into
in
push
jg
ret
inc
cmp
mov
mov
mov
dec
std
out
pushf
or
push
sub
fdivrl
or
xor
pop
adc
cld
sub
test
and
mov
rcr
push
and
pop
cli
aad
pop
xchg
mov
fcoms
adc
icebp
pop
stc
xor
fwait
mov
push
sahf
mov
rclb
pop
jb
fcmovne
xor
stos
clc
mov
int
mov
jmp
fcomi
push
pop
testl
pop
int3
das
dec
cmp
popa
fisttpl
lret
adc
andb
into
je
jns
add
dec
out
mov
lock
movl
push
out
cli
fdivp
decl
jbe
test
mov
rol
out
int3
in
inc
mov
xor
cmc
mov
xor
shl
and
lcall
xor
inc
adc
jge
rcrl
jmp
in
jmp
daa
nop
adc
or
pop
cmp
jl
rol
mov
pop
lret
repz
stc
mov
mov
xor
sbb
xchg
dec
inc
or
inc
or
and
push
adc
sub
std
mov
push
and
lods
sbbb
adcl
pop
jp
setb
pop
pop
fmull
lret
jo
jp
lods
lods
mov
in
push
xor
xor
mov
jb
int3
sti
out
inc
xchg
pop
mov
in
mov
push
jbe
xchg
sub
pop
das
outsb
push
jne
pop
xor
psrlq
pusha
jae
bound
sbbb
xchg
push
pop
outsl
or
incb
stos
in
bound
leave
outsb
adc
rcl
repnz
adc
mov
out
aad
outsl
mov
shrl
int3
fsub
enter
mov
adc
xchg
lret
mov
jmp
rolb
xchg
sbb
mov
test
cmpsl
add
aaa
add
iret
xchg
out
push
xchg
jnp
adc
adc
inc
mov
lahf
adc
or
fwait
mov
cmc
mov
xchg
pop
mov
aam
movsb
jae
and
cltd
cmp
cmpsl
jp
sbb
jmp
push
xchg
fucomp
xor
fdivrp
push
pop
imul
xor
pop
or
add
aad
push
leave
add
mov
mov
push
loopne
je
stos
lahf
dec
cmp
adc
sbb
test
es
push
add
cmpl
dec
cli
pop
adc
jns
out
leave
test
pop
ja
ret
jbe
or
loopne
add
inc
int3
add
inc
not
sub
mov
sbb
gs
sbb
pop
pop
sub
in
mov
ret
fucom
and
loop
jo
ljmp
lock
adc
loope
test
rorl
jae
xchg
orl
arpl
incb
leave
cmc
jle
mov
fidivrl
dec
pop
push
mov
pop
mov
es
jp
scas
lds
dec
fwait
xchg
arpl
out
xchg
gs
ds
add
lds
rclb
shll
pushf
fwait
clc
mov
cmp
ss
mov
cld
ja
mov
mov
cli
mov
mov
sbb
xor
lahf
les
adc
and
loop
popa
sbb
lock
add
in
mov
rcll
mov
push
sub
pusha
add
xchg
add
outsb
das
cmp
mov
push
int3
pop
ficompl
sbb
aam
xchg
add
adc
jmp
lds
inc
xchg
jo
cmp
and
mov
xchg
jcxz
jg
sbb
out
cmp
lcall
inc
add
out
adc
jge
push
sub
popf
jns
mov
jbe
int3
xchg
cmp
rolb
shll
and
and
pop
test
or
scas
add
out
stos
mov
push
pop
pusha
lret
xchg
popf
aad
movsb
jb
cs
cmpsl
xchg
sbb
leave
jne
nop
inc
sbb
das
loop
out
add
and
out
xor
lret
pop
push
push
stos
fstl
pop
andl
dec
je
addb
data16
mov
and
rcrb
xchg
lea
jg
jge
jmp
or
sbb
out
add
int3
insb
add
iret
aad
stos
adc
inc
mov
adc
mov
stos
pop
call
or
mov
sub
pop
leave
fcomps
pop
cmp
add
cs
andb
cmp
or
inc
out
xchg
js
sahf
clc
movsl
pop
sbb
push
jno
xchg
adcb
dec
jge
mov
insl
icebp
inc
inc
ss
out
fidivrl
jle
stos
cltd
cwtl
push
xor
lods
xchg
pop
test
enter
mov
adc
repz
lds
imul
xor
mov
adc
jae
clc
fcomp
pop
fcmovb
adc
stos
lods
test
cmp
sahf
sub
xchg
xor
and
jecxz
adc
add
push
aaa
pop
inc
mulb
adc
sbb
add
mov
adc
test
add
test
mov
xor
out
dec
jl
push
pop
push
dec
mull
jmp
rorb
xor
inc
add
test
mov
nop
jmp
jecxz
aaa
jae
shlb
lds
inc
daa
inc
stc
jns
fnstenv
jno
addr16
loop
jmp
jmp
add
fisubl
mov
sub
and
xor
ret
xchg
lods
xor
xchg
ret
lods
ds
fisubl
mov
cmc
sbb
xor
popf
add
inc
aam
and
mov
dec
mov
dec
cwtl
imul
mov
and
cwtl
js
adc
in
jae,pt
inc
bound
aaa
add
loop
fldcw
push
cltd
push
sub
mov
cmp
xchg
sti
in
adc
push
mov
movsl
int3
add
cli
ret
push
inc
enter
jg
sub
daa
add
mov
call
jge
adc
ja
sti
push
xlat
sub
sbb
in
aaa
push
outsb
test
js
in
or
jo
fcmovb
lock
push
lea
notb
ja
pop
subb
pop
inc
pop
mov
and
sub
lret
aad
cs
cmp
scas
testl
sbb
add
popa
pop
mov
pop
fwait
cmp
jecxz
notl
pop
test
call
pop
cmc
jb
daa
es
cmpl
xchg
int3
clc
xchg
decl
rolb
out
loope
cmp
jg
or
jmp
xor
loop
and
lods
cld
nop
cli
inc
aad
cltd
insl
aas
xchg
dec
add
xchg
add
pop
sub
mov
adc
sbb
mov
pop
aaa
incb
pop
xchg
mov
popa
mov
and
jae
sub
push
mov
inc
push
inc
pop
lock
ficomps
daa
roll
bnd
mov
fisttpll
test
dec
fcoml
aaa
pop
add
shl
js
or
mov
push
mov
jle
inc
adc
paddusb
or
sub
sbb
jmp
insb
ret
xchg
lods
clc
test
bound
hlt
sbb
xchg
cmpb
daa
mov
sub
sarb
sub
stos
push
mov
push
mov
test
cmp
jbe
sbb
cmp
sahf
ljmp
xlat
adc
aas
push
lcall
push
cs
jno
jle
lcall
inc
sub
push
fcmovu
lret
mov
lods
adc
lret
mov
mov
adc
and
jb
inc
sub
fiaddl
data16
xchg
dec
and
push
pop
in
sub
in
push
out
jmp
ss
mov
gs
or
fwait
movsl
mov
pop
mov
imul
sbb
mov
lds
xchg
xchg
pop
test
mov
inc
and
add
add
cmp
sbb
repnz
call
in
mov
add
sub
lea
shll
inc
test
mov
dec
mov
jns
xchg
sub
xchg
cwtl
add
idivb
or
aam
je
stos
jnp
jnp
sti
inc
addr16
fcomp
pushf
int
call
test
sbb
pop
pop
or
popa
jnp
push
jmp
mov
or
push
or
cmp
loop
mov
dec
dec
mov
data16
test
sub
mov
lods
sbb
jl
dec
test
lea
xchg
sbb
lret
aam
xchg
call
repnz
out
cld
mov
les
push
jge
in
imul
sub
aad
je
push
mov
testl
jecxz
cmp
cmp
mov
sbb
push
insl
aaa
fldenv
stos
nop
fsub
js
jmp
xor
dec
sarb
sbbl
add
in
sbb
inc
push
cmp
fsubrl
clc
push
incl
add
fcoms
mov
push
cmpsl
data16
pushf
ljmp
sbb
or
movsb
cld
test
incb
jo
add
mov
mov
pop
js
or
lock
add
test
lss
pop
and
in
adc
fstpt
movsl
repz
or
addr16
fidivrs
adc
ret
dec
nop
and
dec
call
add
mov
dec
mov
call
imul
sub
rorl
xchg
sbb
add
or
pop
in
xorb
nop
sbb
movsb
or
fdivr
fstpt
push
pushf
int
fbstp
imulb
cs
jle
scas
stc
fcompl
nop
xor
or
hlt
push
add
bound
xchg
or
test
jg
xchg
push
dec
dec
sahf
into
rclb
sbb
cmp
xlat
inc
push
arpl
sub
in
sub
mov
mov
sub
loopne
mov
fidivs
inc
mov
fcmovnu
add
pushf
adcb
push
sahf
das
xchg
inc
mov
xchg
cltd
cmpsl
inc
leave
je
sbb
rclb
mov
add
inc
xor
add
mov
mov
dec
cmovp
mov
or
sbb
inc
dec
cmp
pop
in
xor
sub
mov
test
adc
mov
pop
mov
scas
adc
xchg
jb
rcll
push
push
dec
lods
movsl
jns
pop
sarl
test
pop
out
jbe
adc
push
xchg
xor
cmp
sbb
push
int
ja
aaa
mov
dec
sbb
ret
fwait
pop
dec
movsl
lock
and
sbb
sar
dec
imul
and
fistl
insb
iret
mov
hlt
jo
test
lds
cs
loope
inc
es
fidivs
mov
mov
hlt
daa
fidivs
mov
ja
ja
repnz
test
loopne
mov
and
or
and
scas
outsl
ret
inc
bound
je
pop
pop
into
mov
lods
xor
lret
shll
mov
jne
rep
fisttpll
add
out
cld
lea
decl
stos
int3
enter
push
and
inc
sbb
lods
fdivl
dec
scas
jmp
mov
lret
ss
push
jb
ljmp
sbb
jne
mov
loope
lods
mov
mov
sbb
sbb
push
mov
xchg
jo
xor
rcll
test
sbb
lock
dec
sbb
out
mov
pop
mov
or
arpl
fstpl
lea
repnz
pusha
int3
mov
or
insb
test
dec
add
js
or
mov
je
push
and
jns
pop
push
add
js
inc
xchg
pop
mov
cmc
push
jb
inc
or
and
ficomps
pop
lea
and
sti
sub
aad
dec
dec
orps
pop
inc
cmp
mov
ljmp
aaa
jae
and
cmpsb
xor
notl
idivb
and
mov
icebp
subl
pop
dec
adcb
insb
add
pop
jl
xchg
cmc
mov
enter
sub
jo
stc
push
sbb
and
mov
lahf
mov
cmp
ljmp
and
movsl
push
dec
cli
rcrl
aad
lea
jno
xor
mov
sub
and
dec
repz
push
sahf
dec
popa
orb
and
insl
sub
dec
test
test
imul
sub
fidivl
pop
daa
jne
arpl
push
pop
popa
pop
int3
jmp
adc
add
jnp
cltd
push
pop
das
xor
jl
pop
and
shlb
xor
sarb
adc
shll
ljmp
sbb
mov
cmpsb
cmovp
adc
imul
pop
mov
inc
xor
jg
hlt
xlat
hlt
pop
cmp
or
leave
ret
cmp
nop
loopne
or
imull
movl
jmp
adc
cmpsb
xchg
inc
aas
sub
xor
mov
xor
lcall
jge
adc
iret
pop
push
inc
outsb
loopne
int
xor
mov
insl
adcl
cld
xor
in
mov
mov
xlat
iret
pusha
and
dec
loopne
cwtl
into
out
out
xor
out
outsl
loop
in
or
push
jge
sub
and
loope
lret
movsb
inc
adcl
jle
cmc
fcomps
mov
je
int
xchg
out
jecxz
cmc
dec
jo
std
ficoms
push
cmp
xor
ja
mov
and
imul
roll
idiv
into
inc
in
pop
ret
add
cmpl
lds
or
pop
or
das
fnsave
pushf
gs
leave
fs
dec
movb
mov
call
loopne
sub
mov
jo
enter
jmp
into
inc
aad
mov
jge
repnz
pop
jle
jbe
mov
add
adc
dec
hlt
leave
iret
jnp
insl
or
out
jbe
or
or
mov
repnz
imull
and
call
dec
scas
fcomps
xchg
mov
shlb
fistpll
fsts
stc
scas
adc
pop
mov
push
dec
mov
insl
push
add
inc
push
pop
jecxz
jecxz
and
mov
fcomps
xor
bswap
clc
inc
jae
mov
push
repnz
push
cltd
stos
mov
mov
adc
test
mov
movsl
stc
add
mov
hlt
mov
mov
stos
jecxz
sar
or
xor
call
std
cmp
push
and
mov
enter
lret
lods
lock
jno
cmpsl
loope
sahf
mov
cmp
stos
xchg
ret
cmovb
stos
shll
ja
push
outsb
inc
cli
xchg
xor
jno
ret
popa
mov
stos
push
hlt
inc
xchg
jae
xor
ljmp
mov
jno
mov
aaa
inc
jecxz
lods
sti
jmp
imull
imul
fsubrl
incl
sbb
inc
enter
cltd
inc
xlat
sub
sbb
ficoms
pushf
mov
and
insb
clc
repz
int3
add
sub
mov
flds
lret
jb
in
repnz
cltd
mov
jnp
lods
aas
jle
mov
pop
cmp
push
arpl
inc
inc
xchg
jb
aaa
push
jae
ljmp
lds
lret
mov
inc
jl
sub
dec
scas
ret
iret
xor
jb
jnp
cwtl
pop
cmc
xor
js
fwait
jg
adc
jb
push
lock
lods
cmpsl
loopne
sbb
mov
lret
and
push
idivl
push
jbe
int3
hlt
cs
les
fwait
shll
scas
movsb
inc
out
jge
and
rcll
mov
aam
xlat
test
iret
pop
mov
adcb
divl
call
shrl
cmpsl
push
xlat
cmp
cmp
loope
popa
mov
mov
pop
jnp
and
movsw
mov
cwtl
call
ljmp
mov
fisttpll
cmpsl
cli
pop
push
dec
aaa
xchg
lret
add
or
insl
pusha
or
inc
sahf
insb
fisttpll
jmp
adc
adc
enter
cmp
or
jge
add
dec
pop
cld
out
loope
push
or
push
stc
fnstsw
leave
jp
mov
popf
gs
push
in
popa
or
add
add
cmp
add
mov
jo
daa
cmp
mov
jb
or
stos
jle
es
sub
dec
xchg
mov
fldenv
scas
les
popf
push
rclb
push
ficomps
xchg
mov
sbb
and
adc
lret
jmp
and
and
push
push
test
xchg
mov
cmp
sub
xor
ficomps
xchg
xchg
std
sti
pushf
push
pop
outsb
xchg
push
mov
repz
in
add
popa
dec
in
shlb
ljmp
les
ds
push
cwtl
lret
inc
loope
push
mov
jae
pop
and
std
jne
dec
sbb
pop
cltd
xchg
popa
int3
out
outsl
enter
inc
arpl
lds
adc
and
inc
add
adc
push
scas
icebp
in
mov
and
mov
mov
out
in
xchg
xchg
dec
jne
leave
mov
dec
lret
je
cmp
rorb
xchg
aas
push
lods
div
scas
sub
adc
ficompl
out
imul
test
jmp
repz
shrb
lods
dec
pop
adcb
jle
adc
pop
out
xlat
xor
mov
pushf
or
push
xor
cmp
inc
lahf
imul
lcall
or
sub
ljmp
mov
mov
loopne
sbb
fisttpl
adcl
and
jmp
fdivp
mov
leave
mov
nop
cwtl
hlt
into
rcrl
mov
cmpb
cmp
add
mov
fidivl
lods
test
cmp
sbb
xchg
out
mov
ror
mov
and
movb
call
leave
fwait
pushf
es
call
fnclex
sbb
xchg
ja
pusha
xchg
bound
mov
ljmp
mov
xchg
mov
sti
lods
cmp
shlb
lds
inc
rcrl
and
shl
pop
mov
cmp
inc
xor
std
js
xchg
push
xor
pop
je
jg
rorb
icebp
mov
and
xchg
movsl
mov
inc
js
pop
xchg
or
data16
out
out
xchg
push
ja
ss
out
dec
dec
sbb
ljmp
jp
dec
out
test
repnz
fidivrl
test
aaa
inc
push
enter
mov
add
aam
or
pushf
jp
out
mov
and
fldt
cmp
inc
push
das
lock
loop
adc
xorb
sub
mov
xlat
test
cmpsb
fistpll
cmpsb
insb
out
stc
adc
in
ja
leave
cmpl
lods
cmp
jno
cmpsl
dec
insb
push
or
test
mov
xchg
mov
push
adc
sub
push
dec
aad
fcmove
mov
or
mov
push
inc
fistpll
dec
sbb
push
jl
sub
sub
push
das
inc
fwait
pop
mov
adc
sbb
add
jl
jg
push
jecxz
jmp
mov
or
negb
addr16
pop
int3
xor
lcall
cmp
adc
shlb
gs
adc
inc
push
cmpsl
pushf
adc
fmuls
sbb
mov
imul
cmp
mov
xchg
push
mov
std
add
add
out
ja
pop
out
sbb
ja
push
inc
cmp
stos
fidivrs
ficompl
jge
in
mov
mov
loope
sbb
outsb
mov
outsl
bound
in
cmp
dec
das
insl
cmp
mov
xchg
or
mov
sub
inc
jecxz
add
fistpl
adc
adc
sbb
push
ret
jnp
pop
call
mov
lret
push
cltd
push
and
jno
xchg
roll
lock
mov
and
mov
dec
add
fdivrl
pop
popa
jl
out
cli
lcall
lcall
jns
scas
ljmp
adc
mov
xchg
pop
mov
jge
lods
xchg
xchg
dec
cltd
add
or
cmp
inc
pop
push
mov
mov
lods
lock
and
loopne
cmpsl
mov
pushf
mov
cs
mov
adc
jbe
pop
lods
add
movsl
pop
push
dec
flds
inc
pop
clc
sahf
pop
sahf
je
popa
test
sub
mov
mov
loope
call
lret
inc
xor
push
jne
clc
roll
jo
hlt
jno
mov
xlat
inc
or
jnp
xchg
xor
add
pop
imul
mov
test
aad
fisttps
sbb
add
push
xchg
dec
adc
idivl
outsl
or
data16
ja
xchg
mov
shlb
xorl
dec
ds
cltd
pusha
xchg
stos
jo
ljmp
mov
mov
popa
or
enter
int3
in
jne
icebp
push
fldenv
lock
addr16
mov
add
push
jge
fstpl
sbb
movsb
push
sbb
icebp
lea
mov
cld
inc
pop
stos
test
ds
aam
mov
popf
imul
push
mov
push
pop
call
cmpsl
bound
push
add
lea
stos
sub
rorb
pop
out
ljmp
arpl
fwait
mov
insb
lods
sbb
shrl
push
and
in
xor
adc
or
jno
daa
jbe
xchg
sub
jge
sbb
and
out
cmp
int3
jmp
ss
pop
dec
fsub
and
popf
pop
sub
icebp
push
inc
stos
inc
push
das
outsb
negb
mov
add
fwait
scas
pushf
xchg
aad
sub
add
mov
and
sbb
cmp
lret
or
test
cmpl
sub
insb
ja
push
mov
pop
push
xor
mov
imul
daa
leave
loope
dec
xor
xchg
out
loope
shl
es
cmpl
addr16
cltd
mov
xorps
add
in
sbb
pusha
lret
or
sbb
jno
push
push
adc
jb
sbb
xchg
jg
dec
jecxz
lds
mov
int
in
aaa
push
out
fldl
mov
or
cmc
fldz
dec
mov
stos
push
sbb
mov
adc
and
mov
iret
adc
jmp
pusha
adc
cmc
int
sbb
dec
push
jmp
mov
sub
xor
scas
pushf
dec
loope
or
outsb
nop
xchg
add
js
in
sbb
lret
jg
inc
mov
or
and
lea
ss
mov
bound
or
adc
leave
push
push
das
test
aaa
push
xor
inc
jns
jmp
mov
lcall
cmp
pop
popf
inc
lods
std
int
dec
pop
loope
mov
andl
out
fucomip
rcrl
mov
testb
adc
ljmp
mov
pop
gs
cltd
sub
cmp
repnz
repnz
xlat
or
icebp
xchg
or
jbe
lds
inc
push
cmp
lcall
out
jne
mov
jle
loope
push
xchg
clc
ja
pop
or
bnd
call
scas
sbb
xchg
push
mov
shll
push
jne
inc
xor
jb
in
subb
fmul
pop
fdivr
test
cwtl
and
mov
movsb
aas
lock
test
loopne
out
mov
xchg
jno
imul
into
sbb
lret
lcall
sarb
jo
push
jns
outsb
mov
jns
aam
mov
mov
out
xor
pop
popf
int3
lock
mov
in
jnp
rcrb
enter
mov
int
notb
int
add
sbb
jle
inc
cmp
xchg
mov
jno
je
mov
push
popf
and
or
mov
jg
inc
fsubrs
subb
into
fbstp
or
sub
or
jecxz
mov
loope
rorb
cs
xor
roll
mov
outsl
xor
ficomps
push
lods
mov
fs
push
ja
push
cmp
mov
push
sub
clc
outsb
outsl
out
add
xchg
adc
xlat
add
scas
sarl
iret
adc
dec
popf
and
lock
sbb
add
sbb
faddp
push
push
dec
popf
xor
jb
aaa
mov
xor
pop
lods
addl
dec
mov
inc
inc
jne
mov
or
jmp
into
mov
arpl
daa
xlat
push
push
int
push
fnstsw
jp
push
pop
shrl
ja
pop
jge
orl
push
sub
xchg
int3
sub
xchg
insb
cmp
testb
inc
pop
fldcw
rcrl
xor
cli
push
sti
mov
hlt
inc
sub
fwait
pop
cmpsl
cwtl
xor
sbb
and
push
call
scas
add
dec
lahf
pop
icebp
dec
clc
dec
rcrl
imul
in
mov
das
loopne
mov
decl
pushf
lret
pop
cmp
daa
mov
ret
pushf
mov
nop
mov
cmp
xchg
xchg
jbe
xlat
rcr
lret
pop
loop
jns
add
call
and
push
shrb
fbld
mov
fstl
sti
dec
or
jp
mov
adc
push
into
xchg
lcall
xor
add
lret
push
sti
add
das
pop
negb
jle
cmp
ja
add
into
sub
mov
inc
adc
xchg
add
mov
imul
sub
mov
sbb
fs
shrl
cmp
push
popa
addb
inc
mov
fists
test
mov
mov
inc
in
test
pop
pop
mov
stos
sub
nop
in
les
cld
xor
lcall
mov
movsb
adc
and
lret
xor
cld
cmp
mov
rorb
pop
les
inc
mov
xor
nop
pop
movsb
sub
rorl
rcr
bound
sbb
mov
sbb
mov
fwait
xlat
mov
std
lcall
inc
push
pop
loopne
fwait
adc
sbb
aaa
ja
fsubrs
and
sbb
inc
pop
clc
sub
inc
cmp
jecxz
shl
pop
mov
insb
nop
sbb
or
cmp
outsb
hlt
jle
aam
jl
jns
mulb
xchg
ss
cmpsl
jb
add
or
pop
sub
clc
in
sbbl
stos
xor
sbb
cltd
lock
push
leave
pusha
dec
mov
outsb
sbb
xchg
inc
dec
mov
push
ffreep
stc
sub
insb
insb
jg
xlat
lret
add
mov
pop
pop
dec
out
push
add
shrl
sbb
push
in
lock
fs
fldenv
and
cmp
insl
push
jmp
cmpsl
jb
pop
cmp
jbe
mov
leave
mov
hlt
push
sahf
out
lods
or
fcomps
lods
stos
xchg
pop
iret
jnp
xchg
jecxz
jecxz
movsl
test
jge
mov
sub
jne
and
stos
in
jl
cmp
jg
mov
mov
pop
dec
rcl
xor
sarl
mov
gs
ljmp
popa
into
dec
push
andb
push
adc
call
ja
fdivp
pop
cmp
das
xor
xor
push
push
push
data16
popl
or
mov
fwait
jno
dec
hlt
fucom
mov
lods
fwait
cmpsl
lods
leave
cmpsb
repnz
imul
dec
add
movsb
fdivrl
jne
lahf
pop
stc
cmpsl
sti
test
jns
push
mov
add
andl
shlb
bound
jmp
test
pminsw
jnp
notb
add
mov
mov
push
loopne
or
int3
stos
mov
enter
ret
ja
xor
frstor
sbb
fsubl
sbb
pop
xor
repnz
fucomip
enter
jl
add
out
dec
push
or
in
sub
adc
rcrb
cmpl
and
or
push
fistpll
cmp
sbb
cmpb
push
ljmp
cmp
out
or
pop
decl
fidivs
xchg
cwtl
mov
fldcw
daa
lock
mov
sbbb
cmp
addr16
jns
sbb
pushf
adc
popf
sarl
fld
js
subb
arpl
rclb
aad
test
scas
ss
xchg
test
cmp
bound
push
mov
and
sarb
xor
lahf
sub
aam
dec
addr16
sub
inc
addr16
mov
sbb
mov
xchg
pusha
js
dec
push
xor
out
test
push
mov
mov
xchg
mov
mov
leave
lock
mov
xor
jl
pop
lcall
xchg
push
sbb
and
lret
jnp
ds
sahf
push
hlt
out
loope
mov
xorb
sbb
mov
inc
shll
mov
xor
pop
test
cmp
xchg
or
mov
cwtl
stc
or
mov
adc
bound
xchg
xlat
negb
pop
fscale
pop
repnz
arpl
idiv
shrl
jg
into
scas
aaa
in
je
out
aam
ja
addl
out
pop
cs
xor
loopne,pt
mov
and
and
aas
xlat
pop
mov
out
lahf
push
rorl
imul
cmp
lods
shrb
or
mov
pop
xchg
push
push
loop
call
hlt
cmpsl
fisttps
cmovle
push
dec
inc
fs
hlt
cmpsl
repz
fwait
dec
aad
fadds
pop
mov
scas
or
push
in
lahf
dec
popf
fdivrl
loope
shlb
lea
sbb
push
pop
mov
pop
xchg
xchg
je
cli
sahf
aas
sub
mov
push
and
dec
fcoml
or
pop
sbb
adc
xchg
loope
mov
sub
jmp
jne
dec
mov
ficoms
jne
rcll
movsb
add
rcr
aaa
xor
arpl
js
and
movsb
ja
mov
sbb
aas
push
jmp
sub
pop
fldenv
sub
jge
leave
push
lock
insl
sub
aas
mov
xchg
pop
fnstcw
ss
jle
mov
insb
out
push
push
mov
gs
stos
dec
data16
das
in
ds
pop
out
pop
int
mov
andl
loope
in
leave
inc
cmp
pop
out
inc
jo
jns
in
pop
inc
sbb
mov
popa
icebp
fiaddl
push
xchg
loop
sahf
sbb
lea
sbbl
xchg
stos
push
and
sbb
xchg
lea
lahf
das
pop
rcrb
arpl
stc
mov
fsubs
and
inc
push
pop
test
sbb
sbb
mov
or
std
popf
push
mov
cmp
add
sub
add
or
call
nop
xchg
xlat
mov
xlat
inc
xchg
in
and
sti
push
das
nop
out
cmp
test
xor
xlat
imul
mov
inc
sbb
sar
xchg
dec
mov
aad
inc
ret
inc
addr16
pop
into
pop
test
fnstsw
fimull
shrl
in
push
add
mov
sub
dec
in
scas
ljmp
lods
and
jmp
mov
jb
mov
push
inc
cmp
sub
or
inc
mov
fldlg2
mov
add
jno
push
push
cld
jns
mov
lret
sarl
mov
mov
and
mov
test
sar
add
sbb
cli
shr
ja
xchg
stos
aad
enter
arpl
pop
jle
add
add
test
inc
mov
es
in
int3
pop
push
jo
xor
mov
xor
test
leave
jl
jg
add
pop
push
push
mov
xchg
jns
pusha
pop
sbb
jmp
gs
sbb
mov
add
or
dec
and
dec
lock
push
xchg
push
cmp
inc
sbb
xor
mov
jbe
jno
and
and
and
mov
test
repz
and
mov
notb
xor
sub
inc
sti
pusha
imul
das
and
aad
and
jp
movsl
pop
add
cmp
push
cmp
les
sub
pop
mov
adc
gs
negl
stos
dec
xchg
mov
cmc
mov
sbb
popf
mov
fstps
jle
mov
call
pop
mov
into
push
sbb
push
adc
out
mov
fwait
adc
dec
sarl
imul
or
sub
sbb
mov
jp
in
and
fildll
cmpsl
sahf
push
sarb
imul
add
dec
xchg
pusha
pop
lret
incl
mov
inc
pushf
hlt
mov
movsb
xor
aam
xor
jo
icebp
mov
inc
mov
clc
inc
dec
fs
cld
xlat
fstps
sub
sbbb
push
fucomp
lds
out
pop
testb
out
inc
mov
push
adc
pop
jne
jge
jl
mov
mov
add
xor
or
int3
mov
lea
adc
gs
jmp
jo
sbb
ficoml
sbb
hlt
ja
call
and
vpshrdvq
andl
cltd
clc
enter
in
xor
jno
sub
xchg
push
mov
jg
or
pop
dec
push
dec
loop
shlb
jmp
inc
push
xchg
mov
dec
pushf
lret
imul
sub
test
xchg
mov
inc
iret
imul
aad
fstpt
inc
sbb
mov
push
ret
lock
pop
adc
out
lret
mov
aam
mov
pop
push
frstor
jae
jmp
fimuls
adc
mov
mov
loopne
mov
imul
fdivr
std
pop
sahf
fidivrs
data16
pop
es
testl
sub
gs
and
cmp
jbe
lock
insb
dec
xor
fwait
mov
xorb
mov
inc
or
ret
popa
into
es
in
xor
adc
scas
pop
out
movsb
jecxz
adc
bound
ja
mov
sub
rcrb
fstpl
aaa
jl
mov
or
cmpsb
inc
mov
mov
int
mov
pop
ret
into
mov
shrb
dec
and
dec
lods
js
push
sub
jne
inc
popa
pop
cs
or
insl
lods
in
inc
mov
and
push
jge
sbb
into
fs
adc
ja
mov
sub
into
push
pop
jle
repz
fcmovne
and
mov
popf
dec
icebp
and
js
les
imul
jo
push
cmp
dec
repnz
int
mov
ds
cmp
xchg
jg
rcrb
adc
scas
cltd
xchg
cmpsl
jns
lock
push
into
inc
sub
xchg
iret
lods
mov
xchg
xor
xchg
cmp
mov
frstor
xchg
aaa
shlb
in
sbb
shl
mov
jmp
loope
clc
std
add
sbb
dec
roll
pop
pop
cs
dec
push
subb
pop
jg
inc
movsb
xlat
insb
mov
sahf
call
push
xor
sti
and
imul
pop
loope
fdivrs
daa
push
and
sbb
movsb
cld
inc
mov
call
sahf
das
pop
xchg
dec
adcl
inc
lds
xor
and
sub
ja
lods
adc
into
dec
lret
add
fwait
rcll
mov
repnz
mov
popa
mov
mov
cltd
jle
sbb
xor
sahf
imul
inc
push
inc
pop
add
sahf
mov
out
negl
jecxz
insl
inc
and
out
pop
mov
ret
mov
cmp
push
sti
dec
mov
lahf
xchg
icebp
aam
jae
cwtl
push
and
imul
cvtdq2ps
test
stos
and
test
test
imul
cmp
movsl
out
and
es
lea
lcall
pop
pop
rclb
dec
repz
pop
pmaxsw
sbb
scas
inc
insl
loope
push
xor
and
cltd
xchg
dec
sub
loop
sbb
push
outsl
stos
aad
jo
lods
in
in
xchg
sbb
mov
jmp
pop
lcall
les
push
xchg
pop
pop
sub
dec
add
adc
sbb
xchg
cmp
or
xor
push
ret
outsb
lods
out
inc
fisttpl
js
shrb
mov
cs
xorl
lds
cmpl
push
push
fwait
inc
ljmp
stos
and
ljmp
xchg
fisttpl
fcompl
aam
stos
cmp
ljmp
pushl
sbb
xchg
les
or
enter
sub
cmp
jns
sbb
push
fnstenv
loope
js
sbb
lods
pop
mov
cmc
jnp
or
mov
xlat
inc
fists
imul
stc
daa
pop
fs
or
xchg
data16
into
and
or
loop
xchg
ret
in
out
jb
outsb
add
repnz
mov
nop
movsb
xor
daa
pushf
pushf
add
xchg
pop
add
jmp
stos
sahf
mov
jge
push
push
dec
push
sub
adc
es
mov
add
xor
adc
xchg
nop
lock
dec
out
cmp
mov
sbb
mov
dec
vmovdqa
push
mov
andl
or
xchg
jns
pop
inc
mov
je
icebp
pop
push
mov
iret
test
mov
ret
leave
and
ss
mov
mov
loope
and
popf
jne
mov
pop
or
lcall
cmc
lock
inc
fwait
idivb
lock
andb
insl
ss
loopne
pop
dec
inc
or
rorl
dec
jo
stos
sbb
stc
lret
adc
jmp
fs
cmpsb
sti
inc
in
mov
push
rcrb
adc
adcb
mov
dec
fmull
loopne
inc
in
outsw
cs
push
cld
adc
jb
mov
mov
jno
dec
shrb
pusha
stos
pusha
xchg
lret
out
xchg
addb
sarl
xlat
je
bound
add
add
add
and
or
push
sub
push
mov
test
arpl
aas
xchg
insb
xor
mov
pop
or
jbe
cmpl
push
ds
dec
cmpb
jp
aaa
repz
pop
out
lds
addb
and
aas
pop
lods
inc
and
mov
sub
lock
mov
inc
dec
clc
push
pop
adc
adc
cmp
sub
pop
fnstsw
repnz
pushf
cmpl
movsl
adc
push
rcr
push
loope
clc
int
call
push
mov
imul
jae
dec
or
sti
and
adc
arpl
push
mov
and
lock
rolb
adc
les
stos
scas
fucom
mov
jbe
out
xchg
mov
enter
xor
dec
pop
popa
sub
adc
outsb
imul
clc
loop
incl
mov
std
sbb
aas
and
jnp
mov
cmp
dec
filds
stos
jne
jo
xchg
into
jmp
or
push
es
popa
js
push
pop
jbe
in
add
stos
lret
mov
jne
or
lea
jle
push
sahf
cmp
int
cmp
and
icebp
lahf
mov
and
mov
dec
cmpsl
orl
and
mov
xor
mov
and
inc
popa
mov
aaa
sub
and
insb
inc
fadds
add
cld
pop
hlt
dec
jns
lret
in
in
outsb
hlt
aaa
iret
jcxz
or
push
scas
cmpsl
jmp
cltd
pop
sahf
and
mov
mov
bound
cs
mov
jno
call
pop
push
aaa
inc
and
and
loope
push
push
clc
lds
mov
in
rcrl
dec
ds
mov
ja
pop
push
mov
pop
add
subl
lcall
ficompl
xor
mov
adc
mov
jo
jno
push
idivl
ljmp
xor
mov
fwait
popa
adc
mov
push
iret
push
cwtl
daa
pop
inc
loopne
or
loopne
adc
iret
mov
sub
scas
out
push
jo
fstpt
mov
inc
sbb
out
mov
cmp
mov
lods
dec
sti
push
into
sub
push
loop
leave
lahf
pop
int
mov
aad
cmpsb
mov
fmull
mov
mov
mov
xchg
mulb
dec
sub
pop
sub
mov
dec
adc
sub
daa
mov
sti
mov
sbb
jnp
or
stos
cmpl
out
cld
outsb
fwait
mov
jl
sbb
sub
loop
cmp
pop
cld
xor
pop
adc
xor
clc
mov
xor
sbb
push
je
push
sub
pusha
inc
out
and
aam
push
xor
in
test
add
sub
fildl
andl
out
sbb
ret
inc
test
mov
sbb
mov
pop
add
into
adcb
inc
push
cmp
dec
stos
mov
into
scas
sbb
add
jbe
jae
adc
xor
add
out
adc
inc
push
xchg
add
inc
ror
push
and
or
flds
lods
orb
pop
xchg
sbb
jmp
pop
shlb
into
sbbl
push
jb
xor
pushf
pushl
jecxz
or
in
sbb
add
mov
inc
xor
lea
add
repnz
xchg
mov
aaa
insb
jg
mov
int
pushf
imul
cli
dec
jo
shll
flds
xlat
pop
imul
lods
or
sub
jge
pop
jae
pop
push
inc
add
add
pop
add
push
sbb
cmp
fsubs
loope
addr16
dec
xchg
std
inc
jp
shr
sbb
add
sahf
lods
pop
adc
leave
mov
mov
pop
sti
scas
jb
or
test
lret
inc
mov
into
sarb
rcl
lea
dec
fcoml
mov
stos
in
lcall
nop
lea
xor
mov
pop
push
cmpsb
ss
xchg
inc
jbe
mov
in
cmc
xor
mov
sti
int
inc
movsb
inc
jns
lods
push
call
out
and
xchg
sub
repz
or
sbb
test
out
xor
clc
mov
sti
cmp
arpl
out
ret
loopne
jo
jb
xchg
popf
mov
iret
jo
pop
sub
inc
imul
subb
mov
sahf
sbb
nop
in
mov
xor
cli
push
xchg
push
cwtl
repnz
xorb
push
movb
sahf
inc
push
pushf
into
cmp
mov
addb
pop
arpl
sti
or
mov
fmull
dec
movsl
roll
aad
dec
enter
cmp
xchg
js
sub
add
cs
mov
out
mov
and
arpl
add
xchg
push
movsl
nop
icebp
and
push
xchg
pop
clc
inc
fimuls
sub
addr16
je
xchg
xlat
or
je
ret
push
pop
call
fisubrl
mov
scas
sub
xor
pop
ja
inc
out
ja
pop
and
cltd
lea
in
clc
cs
out
outsb
sub
outsb
add
inc
xchg
shl
xor
sub
inc
xlat
loope
mov
ljmp
pop
sub
pop
inc
sti
ljmp
add
mov
rorl
adc
daa
sub
in
ljmp
mov
jg
jecxz
push
sbb
pop
in
mov
jl
in
push
movsb
add
mov
jp
mov
mov
cmp
decl
mov
adc
outsl
xchg
les
pop
and
pop
jp
cmp
dec
aad
mov
xor
in
cmpsl
js
jg
or
and
add
mov
test
je
popa
push
mov
sbb
mov
jbe
dec
pop
push
out
sbb
add
clc
pop
hlt
lahf
inc
mov
leave
repz
test
pop
fiadds
loop
jo
mov
sahf
or
xchg
xchg
in
adcb
imul
adc
jp
scas
adc
and
rcll
daa
push
push
bound
or
out
xchg
or
int
clc
scas
cltd
inc
fdivrl
xchg
sti
xor
xor
inc
add
pusha
sbb
lds
rolb
xor
xor
adc
gs
inc
clc
or
mov
daa
mov
or
sbb
jo
lcall
ljmp
orl
icebp
fcmovnbe
xor
mov
dec
push
dec
imul
sub
loop
aaa
add
cmp
mov
out
mov
push
xlat
sbb
cs
andb
into
clc
scas
into
jl
jae
add
jecxz
daa
xor
dec
jmp
divl
mov
mov
pop
push
dec
movsb
cs
inc
cmp
inc
adc
pop
test
inc
pop
and
pop
bound
sbbb
mov
pop
enter
hlt
xchg
mov
xchg
mov
pushf
push
ds
or
into
sub
test
cmp
in
cmp
sti
scas
cmpsl
dec
jae
fcoms
sub
jmp
add
hlt
cmp
in
fistl
jmp
dec
xchg
imul
mov
adc
lea
cmc
xor
ljmp
inc
pusha
inc
mov
xor
mov
into
xor
and
addr16
pop
rcrb
jp
out
push
push
sub
sar
or
sbb
push
subl
cmpl
pop
pop
xchg
leave
xchg
lock
mov
or
or
inc
mov
pop
jno
xor
subl
dec
nop
ret
add
dec
push
and
mov
mov
js
adc
adc
xlat
mov
lods
cli
outsb
pop
outsb
mov
xchg
movb
xor
cmpsb
push
xor
or
push
mov
mov
test
loop
loope
negl
mov
pushf
xor
data16
icebp
xor
and
ret
cs
repnz
lret
sub
pop
fdivrs
mov
push
in
call
xchg
adc
decb
dec
pop
into
cld
stos
mov
in
loopne
push
sub
and
in
xchg
loop
inc
movl
fistpll
aas
mov
int
xor
test
enter
fiaddl
jecxz
sub
mov
data16
dec
pop
jle
in
filds
cmp
mov
es
outsb
push
scas
push
lods
and
hlt
fstp
xor
sub
dec
jmp
xor
cld
cmc
out
adc
out
jp
sub
fsubp
inc
sub
test
fstpl
jmp
sub
push
imul
addl
xchg
test
xchg
xor
lcall
mov
xchg
or
outsl
jnp
test
bound
test
push
and
lret
repz
popa
mov
les
lret
popf
popf
popf
sahf
stos
xchg
dec
push
adc
icebp
and
cmp
enter
aas
es
subb
pop
add
iret
dec
jp
out
adc
leave
lods
xchg
or
aad
add
js
inc
daa
call
je
imul
ret
scas
pushf
fistps
mov
aas
mov
push
imul
insb
and
divl
divb
jl
push
xor
orl
int3
push
mov
xchg
pop
jecxz
ljmp
aam
mov
jnp
lea
push
push
mov
fistpll
jns
xchg
mov
fsubrs
ds
cmp
push
cwtl
fstpt
lea
mov
cld
enter
dec
daa
push
jp
cmp
pop
xor
sbb
rclb
mov
jbe
mov
cmc
push
xchg
popf
mov
icebp
and
and
xchg
jg
out
ds
xor
fnstcw
or
inc
xchg
jo
jae
mov
cmp
in
push
adc
es
sub
inc
add
add
out
ret
or
movsb
adc
loope
pop
hlt
add
pop
adc
in
mov
stc
cs
adc
and
stos
and
out
int3
xchg
or
std
movsl
in
xor
cmc
ret
dec
out
movsl
push
call
sub
and
cmpsb
push
cmp
rolb
stos
sbb
sbb
mov
ret
mov
adc
les
push
nop
aaa
adc
and
cltd
dec
sar
mov
cmp
cmc
daa
fwait
add
lds
xor
jge
daa
pop
repnz
loop
outsl
dec
out
loop
lcall
imul
pop
dec
int
cmp
repz
clc
data16
test
aas
adc
mov
int3
and
aaa
xor
sbb
jl
out
mov
dec
ljmp
mov
mov
mov
shlb
addb
iret
shl
cmp
pop
add
notb
ret
movsl
mov
adc
mov
or
mov
cld
cmp
push
cmp
mov
incl
pop
add
xor
ret
pop
outsl
adc
movsl
fisttpl
mov
fs
xchg
dec
sub
clc
fidivrl
inc
sbb
imul
js
jg
shlb
imul
ret
stos
pop
push
cmpb
push
pushf
inc
addr16
cld
mov
jmp
xor
pop
xlat
add
inc
insl
das
lret
mov
mov
adc
jmp
push
sahf
aad
das
test
mov
loop
movsb
push
aaa
insb
fs
push
test
and
popa
jmp
push
xor
loope
cmp
mov
rcll
movsb
and
jl
adc
shlb
rorl
mov
mov
xchg
scas
cmp
xchg
xchg
in
out
add
mov
mov
sahf
es
lock
fidivs
leave
test
ret
sub
pop
sbb
sbbl
nop
mov
mov
sub
sbb
xchg
stos
xor
movsl
xor
adc
push
and
sbb
push
lret
inc
push
dec
clc
cld
add
insb
cli
or
orb
and
adc
loope
sbb
sbb
jecxz
orl
sub
ret
repnz
dec
jnp
inc
cmc
jl
cmp
sub
rorl
push
jg
cmp
xchg
into
or
testb
mov
movsb
jmp
out
vpmulhw
stos
push
pop
push
shl
adc
dec
popf
dec
fcmovu
stos
fs
or
or
lcall
mov
leave
adc
mov
pop
mov
dec
inc
test
int3
sbb
xor
iret
fisubrl
mov
xor
jae
jmp
xor
fmul
inc
xlat
bound
mov
loopne
jl
mov
xor
mov
jnp
pop
lea
push
test
cmp
daa
adc
xchg
iret
jo
inc
scas
pop
cld
cli
pop
add
inc
push
mov
and
sub
xor
or
ds
mov
jg
xor
test
mov
sub
sbb
aad
mov
scas
add
dec
popa
jecxz
call
idiv
ds
sub
mov
movsl
daa
mov
xchg
jns
cmpsl
dec
and
pop
and
rcll
pop
ja
push
data16
data16
or
das
fldenv
jb
cs
imul
mov
mov
sub
or
add
es
in
lahf
aam
xor
fs
inc
movsb
mov
inc
push
add
jns
imul
popa
hlt
fabs
and
dec
bound
jne
sti
enter
roll
mov
and
add
push
adc
popf
add
notb
imulb
xchg
add
scas
insb
pop
xchg
mov
mov
pop
push
inc
xchg
test
push
push
dec
mov
xchg
xchg
mov
add
aaa
pusha
in
pop
push
jne
jne
shrl
xchg
jp
mov
adc
jo
hlt
rcll
xor
inc
xchg
insl
cmpsb
and
shrl
adc
data16
push
imul
add
jno
sahf
mov
inc
ss
sub
pop
lret
push
aad
les
xor
mov
dec
sti
mov
shll
adc
jns
iret
adc
sub
outsl
cmpb
subl
add
aas
test
scas
repnz
sub
xor
xchg
stos
loopne
push
and
cmp
cli
add
clc
jg
pop
adc
test
int
enter
fsubs
inc
fstpt
pop
outsl
les
sub
dec
pop
cmp
and
cmp
repz
dec
int
mov
test
sar
mov
pop
notl
stc
sub
xor
cmp
test
loop
pop
pop
jl
icebp
mov
nop
shl
or
cvttps2pi
ljmp
loope
int3
scas
lret
mov
je
sbb
ror
mov
in
push
jg
jecxz
lcall
xchg
sar
mov
enter
stc
and
inc
pop
mov
pop
push
lods
pushf
out
mov
in
enter
out
lds
shll
shll
rcrl
lods
pop
mov
dec
leave
push
and
into
popa
dec
xchg
int3
lods
bound
scas
sub
sub
jle
xlat
je
cmp
xchg
pop
mov
pop
out
mov
pusha
xchg
mov
pop
pop
lea
les
sbb
pop
dec
adc
push
rep
jb
xchg
dec
add
scas
into
outsb
xor
test
push
addr16
ljmp
pop
cwtl
enter
inc
gs
pop
sahf
clc
imul
insb
mov
insl
xchg
mov
mov
jae
cmp
jnp
cmp
leave
adc
insb
and
push
jb
imul
fsubrl
sub
mov
jb
mov
cld
shrb
or
repz
xchg
push
jno
fsubl
sub
sub
lret
out
xchg
xchg
andb
stos
in
cmp
outsl
loop
das
mov
daa
cmp
neg
fadd
pop
xchg
mov
sbb
in
cld
dec
sbb
xchg
fldt
dec
int
js
sub
ror
addr16
and
inc
rclb
push
push
sbbb
and
sub
js
loope
or
and
mov
mul
mov
cmp
hlt
push
mov
mov
add
inc
sarl
pop
xchg
sahf
mov
sbb
int3
cmc
xor
sub
jp
jle
test
lds
insl
dec
pop
sahf
add
out
loop
insb
stc
jo
lret
xchg
and
cmp
loopne
dec
sbb
in
mov
int3
or
dec
cli
xchg
push
cmc
xchg
xchg
test
int3
mov
frstor
andb
mov
xor
dec
cli
cli
negb
fcompl
cmp
ds
xor
pushl
inc
jmp
lea
sub
inc
icebp
je
dec
outsl
or
loope
or
cwtl
mov
and
lret
pop
inc
mov
push
ds
push
xchg
sbb
pop
insl
into
out
xchg
jbe
jo
cltd
and
cmp
sub
jnp
sbb
add
adc
jl
shlb
or
and
add
data16
mov
sti
scas
outsb
dec
aas
outsb
push
xor
add
pop
rcl
lret
or
dec
in
xor
or
ljmp
or
adc
lock
push
les
in
push
mov
hlt
lea
dec
jge
out
out
add
fldcw
mov
iret
xchg
xor
xorl
stc
sti
dec
into
mov
ljmp
inc
mov
ror
stos
movsl
lcall
movsl
imull
push
push
push
add
pop
sbb
or
into
or
mov
scas
popl
fmul
push
xorl
sub
pop
es
clc
icebp
mov
decl
jle
inc
adc
daa
and
lcall
vmovupd
push
dec
lock
fidivs
imull
cmpsb
test
cmc
push
int3
cmp
xchg
lret
cmp
mov
mov
aaa
adc
shrl
js
adc
out
jmp
fcomi
mov
mov
cmp
hlt
or
movsb
or
push
insl
push
add
cwtl
imul
popfw
dec
mov
mov
into
out
and
sbb
hlt
aam
cmp
ret
mov
or
add
out
pop
or
sbb
cmp
out
shrl
jge
pop
mov
cmp
add
nop
mov
pop
insl
in
sar
mov
cli
data16
mov
fwait
clc
push
int
lahf
xchg
push
cmp
sbb
xchg
fstps
fcmovbe
xor
xchg
in
ja
inc
jmp
push
les
add
pop
cmc
jae
inc
xchg
mov
or
mov
xor
pop
xchg
inc
mov
sub
sub
pop
into
ret
das
and
xchg
fwait
jp
fwait
lea
jnp
in
jns
out
jmp
inc
loope
mov
bound
das
cmp
fldcw
inc
sbb
sub
and
mov
adc
mov
insb
push
addr16
inc
dec
sti
inc
rolb
jae
loope
int
xchg
adc
pushf
sbbl
sub
push
dec
shl
lret
test
aam
mov
mov
dec
add
inc
xchg
int3
pop
testb
insl
xor
dec
and
mov
sbb
sahf
dec
dec
aam
adc
add
jae
add
fnstsw
cmp
cmp
jno
dec
add
xor
outsl
sbb
lcall
pop
das
push
test
push
out
shrl
dec
insl
mov
mov
loope
call
adc
in
imul
aas
adc
mov
into
stos
lods
les
jl
adc
int3
test
sbb
sbb
cmc
call
xchg
and
scas
add
bound
repnz
in
lods
cld
or
lea
stos
jg
leave
dec
and
test
ret
idivl
adc
add
push
adc
lods
xchg
lock
js
or
daa
adc
add
lahf
sbb
das
lea
xchg
lret
xor
cltd
mov
mov
sbb
sub
outsl
add
jmp
jb
stos
add
fiaddl
lea
jmp
adc
fucom
jmp
pop
int3
rolb
mov
rol
cmp
xor
jbe
cmpsb
xchg
push
int3
xchg
pop
gs
cmp
mov
add
stos
cmpl
bound
push
dec
aas
push
push
jmp
arpl
adc
jl
insl
jle
cmp
sti
dec
sti
fisubs
mov
stc
arpl
inc
int
push
add
add
aas
in
xor
pop
add
xchg
rep
hlt
inc
std
loop
mov
or
rcr
add
add
fcmovnb
push
xchg
lock
or
xor
pop
sbb
jg
add
out
dec
cmp
repz
fdivrp
fsubrl
lods
hlt
jecxz
push
rorl
adc
adc
sub
mov
mov
mov
shl
jle
test
pop
outsb
xor
inc
insl
pop
sbb
out
movsl
sahf
mov
in
jnp
push
sub
jmp
or
mov
or
dec
pop
add
mov
sbb
ret
mov
outsb
lea
push
rclb
mov
clc
add
or
push
mov
mov
adc
mov
dec
jno
and
imul
insb
test
ret
pop
sub
dec
mov
roll
mov
xchg
add
xor
sahf
mov
push
sub
xor
inc
dec
xchg
pop
and
call
out
insb
adc
leave
ja
pop
loop
lds
jmp
jns
ret
adc
je
push
sub
insl
adc
leave
or
inc
insb
pop
inc
addr16
pop
lds
push
jmp
jae
sbb
pop
loop
inc
aad
pop
push
push
ficoml
popf
xchg
ret
imul
mov
es
and
xchg
mov
xchg
and
pop
cmp
xchg
inc
es
fwait
push
sub
push
and
int3
movsb
or
popa
rclb
push
repnz
call
repz
rcr
mov
lock
out
mov
stos
mov
stos
sub
sahf
test
dec
test
xchg
cwtl
jp
cmp
pop
xorb
jg
aas
std
inc
lret
nop
and
push
cmpsl
sub
xor
mov
out
and
mov
shlb
jle
insb
leave
mov
dec
fimull
push
sbb
push
xchg
cltd
mov
movsl
dec
insb
xchg
ss
pusha
adc
rcrb
in
add
push
shr
dec
cld
jno
or
gs
repnz
nop
mov
aad
dec
adc
jge
addr16
add
movsl
in
popa
pop
pushf
mov
jne
insb
push
insb
scas
pusha
push
xchg
add
insl
pop
mov
fisttpll
mov
sahf
lcall
jecxz
xchg
lods
aaa
xor
jae
push
jecxz
movsb
aam
xor
inc
mov
sub
adc
stc
jp
dec
rolb
pop
cmp
je
mov
inc
in
sub
sub
jp
les
sbb
mov
mov
fistps
jae
rclb
scas
insl
sub
xor
inc
dec
jl
fwait
xor
pop
xlat
xchg
orb
fnstenv
es
and
and
movsb
subb
pusha
mov
mov
cwtl
xchg
out
dec
sbb
insl
movsb
inc
adc
jp
lret
fs
pushf
adc
mov
add
fwait
ror
insl
adc
pop
cld
gs
mov
stos
mov
push
fstl
pop
dec
or
mov
pushf
sub
dec
jns
je
push
xchg
push
sub
fildl
bound
xlat
mov
push
out
sub
jmp
lea
dec
cld
lds
mov
pop
xor
clc
inc
mov
mov
lret
into
lds
xchg
sbb
or
mov
out
inc
xlat
aaa
sub
and
cs
jne
xchg
fwait
sbb
je
lahf
mov
xchg
xor
adc
add
mov
sub
mov
jmp
xorl
dec
pop
push
in
movsb
cmpsl
je
cmp
cwtl
lahf
test
sub
ja
add
add
add
xchg
xchg
ja
jle
xchg
inc
ss
cmp
cmp
out
push
inc
dec
rcll
mov
scas
add
outsl
push
jmp
shrl
and
jge
pusha
in
push
mov
dec
adc
xchg
cld
fstpt
lahf
xchg
lcall
push
sub
xlat
fdivrp
rclb
mov
clc
sub
cmp
ret
push
icebp
sbb
add
pop
pop
add
sbb
push
add
in
jmp
lcall
jno
ds
ret
jl
pop
sbb
fldt
in
lea
fsubrs
test
movsb
loope
js
je
jle
arpl
add
xor
mov
cmpsb
cmp
insb
cld
gs
mov
push
xor
push
sub
fsubp
sbb
and
fistpll
and
push
rorb
fcom
mov
into
adc
iret
popa
iret
int3
xor
dec
cmpsb
insl
es
dec
imul
sbb
xlat
cmc
fmuls
inc
test
pop
out
aam
popa
popa
mov
add
mov
loope
push
imul
into
xor
fidivl
lcall
mov
pop
mov
xor
xchg
pushf
inc
pushf
fwait
test
fs
arpl
lods
sbb
shll
ret
push
jl
inc
cmpsl
inc
in
cmpsb
push
pop
push
sti
mov
xchg
xor
push
bound
xor
xchg
sbb
mov
ja
movsb
test
fildl
push
leave
loop
lock
in
leave
addl
add
xchg
jns
dec
pushf
neg
xorb
cmp
and
mov
in
push
movsl
xchg
in
push
dec
les
movsl
aad
mov
js
push
mov
pop
inc
jge
cmp
std
jecxz
mov
cmp
jno
in
sbb
addr16
js
stc
fists
ja
lret
fcoms
cmpsb
repz
insl
sbb
xlat
mov
xchg
rol
test
xchg
mov
aam
sbb
fs
inc
sub
ret
and
pop
rolb
ret
dec
hlt
daa
lods
jne
repz
pusha
int3
iret
adc
fdivl
shll
jae
test
pop
repz
enter
dec
push
add
divl
leave
jns
jge
fcmovnbe
lret
insl
mov
jle
lods
dec
leave
aam
fucom
stos
addr16
dec
cmp
aad
bound
or
int3
loope
test
add
lds
fs
jo
xchg
mov
add
xchg
sbb
mov
mov
inc
jno
test
stc
mov
loop
sbb
jp
aad
std
pop
xor
insb
pop
lret
les
pop
and
pusha
ljmp
jp
sbb
ds
fs
cmpsl
mov
ret
xchg
rcll
into
mov
dec
jno
iret
adc
jg
jnp
out
test
xor
stc
stos
lcall
sbb
cmp
xchg
test
mov
insb
jp
shrl
test
pop
rclb
or
stos
mov
cmp
pop
mov
test
mov
in
cmpb
jmp
dec
repz
mov
push
ljmp
xchg
rcl
das
inc
repz
pop
xchg
insb
xor
jge
fdivrl
aaa
push
ja
jno
int3
mov
movsw
mov
sub
je
add
inc
xlat
push
hlt
sbb
in
mov
imul
iret
jo
lcall
mov
pop
sarb
test
sahf
aad
cmp
cmc
stos
mov
xor
ja
mov
mov
sbb
icebp
mov
nop
push
sbbb
jp
jp
and
sbb
mov
fdivl
fadds
and
imul
push
ret
mov
aas
mov
movsl
mov
ret
test
mov
sbb
pop
hlt
cltd
mov
lods
out
popf
xor
sbb
jp
fs
push
cs
inc
push
xchg
cmp
negb
dec
ds
pop
lods
movsb
inc
stos
mov
sbb
jmp
mov
lods
xchg
orb
loope
sbb
pop
clc
cli
mov
dec
mov
mov
xchg
cmp
and
out
mov
dec
popf
mov
int
stc
xchg
cmp
shl
xchg
cmc
push
push
sbb
ret
imulb
jle
jo
mov
mov
inc
aam
loopne
hlt
pop
jne
mov
mov
imul
push
call
mov
aad
js
inc
adc
imul
dec
aaa
movsb
jp
ja
loopne
and
pop
pop
sub
data16
nop
shrb
push
mov
mov
add
ds
jmp
in
sub
adc
js
push
ljmp
arpl
and
push
fisubrl
lods
std
nop
lods
jns
sbb
mov
push
imul
shrb
lret
inc
xchg
lods
xchg
test
mov
roll
or
cs
push
mov
mov
mov
outsl
adc
gs
subb
lods
decb
frstor
ficompl
mov
lea
jg
stos
jmp
mov
jecxz
movsb
sub
inc
out
test
loopne
pop
adc
test
push
add
push
or
sub
hlt
and
fldl
xor
or
mov
sub
dec
add
je
fwait
lods
jne
mov
sbb
loope
pop
movsl
pop
rol
movsb
insl
adc
xchg
int
xor
scas
inc
loopne
inc
adc
int3
push
xchg
pop
cmp
sub
mov
dec
fisttpll
sub
jno
push
call
shl
jge
or
jge
filds
jg
mov
push
daa
inc
jns
add
jo
mov
inc
and
cli
sub
out
test
imul
jne
rolb
xchg
sub
xor
xor
aam
inc
jl
pop
dec
jp
adc
adc
loopne
xchg
dec
in
jmp
xchg
xlat
cmovle
sbb
or
jbe
mov
std
mov
add
pop
fstpt
jecxz
nop
xchg
shrl
inc
cmp
iret
fistpl
leave
aam
xorl
inc
push
mov
sarl
mov
mov
aas
pop
push
rcll
scas
ror
or
daa
mov
ljmp
mov
inc
int3
jmp
xchg
inc
lret
addr16
sub
fwait
inc
inc
dec
arpl
rcll
out
inc
vunpcklps
in
adc
shrl
mov
jb
ds
inc
out
mov
dec
in
cmp
les
imul
mov
ljmp
mov
fsubp
sbb
aaa
out
pusha
pop
push
in
ljmp
dec
adc
es
sbb
in
xchg
xor
ja
mov
call
adc
stc
out
push
jl
int
inc
lods
movsl
lods
idiv
add
popf
call
sub
icebp
inc
cltd
adc
sbbb
dec
inc
add
outsl
scas
bound
mov
mov
add
ret
sbb
mov
xorb
fldenv
push
int
cmp
mov
test
ret
jl
sbb
out
stos
adc
push
call
pop
add
orl
push
xchg
pusha
jnp
sahf
mov
or
ret
xchg
leave
xor
imul
outsl
ds
and
mov
push
jle
pop
adc
fldcw
jle
push
push
mov
mov
or
cmp
je
fistl
scas
repnz
jne
dec
mov
fucomip
jns
add
stc
repz
pop
daa
lret
add
sub
fdivrl
dec
cmp
xchg
xor
in
stc
popa
gs
in
imul
fisubl
out
push
pop
jae
pop
outsb
mov
push
cwtl
sbb
and
out
sbb
adc
cwtl
jbe
into
imul
push
in
mov
mov
add
cld
hlt
fstl
push
or
sub
or
insb
scas
fistl
cmpsb
sub
addr16
lods
sbb
rol
scas
test
cwtl
mov
mov
pop
push
stos
push
mov
scas
enter
mov
fwait
mov
pop
insl
mov
hlt
mov
ficoml
xor
cmp
clc
movsl
addr16
popa
mov
sbb
sbb
in
cltd
cs
arpl
fdivs
inc
aad
sbb
fcmovbe
or
js
aam
fisttpll
push
or
sbb
xchg
clc
jno
mov
lock
fidivs
or
jl,pt
push
lods
aaa
dec
pop
or
jl
jle
or
pop
aad
xchg
mov
push
and
mov
je
add
insb
push
push
jle
js
ss
fs
dec
mov
shr
cmp
adc
sub
inc
mov
and
sahf
dec
add
ljmp
ja
scas
test
lahf
adc
or
insl
push
jno
xchg
data16
test
hlt
inc
sbb
mov
push
push
jle
and
adc
clc
push
or
xor
xchg
iret
adc
shlb
mov
sub
aas
stc
dec
mov
mov
arpl
and
inc
test
notb
cltd
out
aad
or
cmp
mov
pop
and
lods
ja
xchg
xchg
shlb
sub
xchg
call
add
popf
sub
add
jg
loop
adc
or
out
mov
loope
mov
add
jg
xchg
cmp
cmpsl
jns
inc
sbb
sahf
fdivl
add
xchg
or
cmpsb
xchg
cmc
movsb
jmp
pop
insl
pusha
or
cwtl
sbb
cmp
or
mov
xchg
pop
lock
cmpsl
iret
rolb
mov
mul
adcl
imul
in
outsl
mov
fists
in
sbb
or
rorl
rcrb
loop
fisttpll
xchg
icebp
dec
or
in
stos
mov
insl
test
xchg
push
adc
adc
in
out
fadd
jge
shlb
sub
imul
dec
pusha
stos
mov
xchg
lea
mov
les
movsl
iret
out
mov
popa
fwait
cmp
insl
cmpsl
and
sub
data16
and
ss
jge
mov
jge
mov
lea
nop
adc
aam
inc
stc
test
mov
incb
push
or
ljmp
ret
jbe
sub
adc
popf
pop
js
cmp
popa
pop
push
cld
ja
xor
mov
out
fsubrl
in
mov
mov
daa
out
adc
mov
and
ficompl
add
mov
lds
add
sub
out
mov
testl
data16
xor
lods
jmp
test
loop
jno
and
inc
ds
push
xchg
sub
xchg
ljmp
xor
bound
fldcw
pop
push
loopne
mov
lret
fwait
jle
pop
jmp
inc
aas
inc
movsb
sub
ffree
fisubl
out
sbb
cwtl
std
jnp
scas
or
lret
pop
push
lcall
sub
mov
in
repnz
mov
iret
lods
fcomi
mov
insb
add
imul
fisttps
cmpsb
clc
sbb
cli
out
fisttpll
rep
jl
mov
out
test
inc
and
cltd
xchg
add
pop
daa
hlt
add
jb
mov
jne
cmp
mov
xchg
add
pop
xlat
test
icebp
add
dec
jno
icebp
repz
mov
cmp
rclb
inc
jmp
sub
rcrl
mov
jl
and
sbb
rcl
fsts
lcall
lods
xor
into
jno
imul
mov
add
data16
imul
cwtl
movsb
cmpsl
popf
pop
inc
cmc
sbb
data16
outsb
adcb
pop
dec
dec
test
pop
inc
cs
push
daa
xor
xchg
and
push
mov
shll
fsts
add
rcll
dec
mov
inc
out
mov
imul
sbb
jge
imulb
sub
test
xor
xchg
aam
push
add
push
dec
dec
mov
gs
fs
dec
sbb
and
pop
in
je
ret
loope
xchg
push
js
loope
nop
push
lock
pop
sbb
ljmp
xor
xor
xchg
xor
lcall
push
or
test
dec
xchg
div
adc
test
lds
jo
pop
xor
std
jno
or
movsl
pushf
push
dec
mov
cmp
push
aas
xchg
adc
std
mov
mov
mov
je
mov
pop
xchg
aam
scas
xor
or
cmc
jge
test
mov
std
lahf
dec
ret
push
mov
xor
adc
loop
and
rcr
clc
and
in
and
cs
xchg
inc
sbb
jp
outsl
or
je
inc
int3
sbb
mov
cs
cli
out
out
stos
jnp
jle
out
insb
push
jae
and
packsswb
pop
jns
dec
or
mov
js
repz
sbb
out
add
ret
xor
test
fimull
jne
jo
in
push
lock
xchg
rorb
shll
add
rorl
sahf
js
xor
jge
sub
mov
xchg
xchg
test
adc
and
in
xor
and
or
adc
mov
daa
inc
mov
add
ror
lret
pminsw
fistl
mov
dec
inc
or
xor
and
iret
inc
push
pop
addb
inc
add
in
mov
adc
lret
fstpl
dec
icebp
call
xchg
arpl
jno
jp
imul
orl
std
push
lcall
scas
add
in
jmp
sub
pop
jp
mov
mov
fadds
out
loopne
lret
or
push
push
mov
pop
cmp
insb
or
cmp
pop
cmpsl
adc
dec
adc
jo
push
and
push
out
sbb
adc
fnsave
dec
insl
mov
or
repnz
subb
aad
fdivrp
push
dec
sbb
incb
lahf
loop
mov
pop
add
test
mov
aam
jg
out
dec
mov
jmp
mov
mov
push
cmc
mov
and
repnz
ss
xchg
pushl
fidivs
fistpl
std
insb
clc
repnz
lahf
je
jno
mov
out
push
xchg
inc
mov
pop
sbb
jmp
adc
and
mov
dec
adc
ss
lret
test
std
sarb
mov
sti
dec
in
xor
xlat
mov
hlt
mov
dec
test
mov
jb
pop
sub
xor
dec
test
out
adcb
cltd
fs
mov
mov
cmp
inc
addr16
iret
or
cmova
call
mov
jl
mov
add
or
das
adcb
fdivp
sarl
xlat
xchg
fs
psrad
iret
cmp
push
mov
push
add
fwait
push
daa
adc
lods
sub
outsb
lea
enter
mov
inc
pusha
ds
mov
push
xchg
js
push
fwait
jl
cli
inc
into
add
cmpsl
and
push
dec
stos
mov
jmp
je
out
jg
popf
loope
jmp
sbb
mov
cmp
arpl
into
mov
in
cmp
in
daa
addb
gs
jb
push
inc
sbb
int
and
or
and
imul
aam
or
ret
push
jne
paddusb
cmc
popf
sub
sbb
or
inc
lods
pop
add
insl
jg
jle
pop
push
enter
lods
mov
mov
cmp
jbe
outsb
push
sub
and
inc
add
cmp
sbb
push
das
movsl
mov
dec
xchg
inc
lods
outsb
add
push
jnp
jnp
das
add
sub
dec
pop
pop
fistpl
orl
push
rcrl
stc
pop
arpl
nop
filds
xor
hlt
aad
mov
mov
xor
cmpsl
scas
lret
jne
xchg
jp
adc
sub
sbb
mov
jb
adc
data16
das
stos
and
add
xchg
add
movsb
shrb
sti
cmp
pop
lods
cwtl
mov
mov
sbb
cli
xlat
lock
push
ss
hlt
dec
pop
and
lods
aam
mov
dec
sub
or
cs
call
ret
dec
daa
mov
inc
xchg
pop
stos
mov
pop
orl
push
pop
pop
scas
shrb
or
adc
inc
inc
jns
xor
outsb
adc
sub
jne
fidivl
jno
mov
lret
dec
ret
xor
sahf
inc
push
leave
mov
cmp
mov
fstpl
mov
and
loop
cmp
jns
push
cmpl
mov
mov
and
pushf
popf
jno
lods
enter
std
xchg
imul
mov
divl
jmp
int
pop
mov
loop
sahf
stos
sub
mov
xchg
push
jo
mov
sbb
sbb
push
pop
mov
aas
call
adc
loop
adc
sub
loopne
dec
decb
mov
mov
push
stos
cmp
jp
dec
aaa
mov
testb
aas
jp
cmp
leave
cmp
sub
mov
or
sbb
adc
ljmp
rorl
repz
and
add
ret
leave
adc
mov
sarl
and
int3
loope
popa
adc
das
repz
jno
add
pop
inc
out
mov
push
popa
dec
inc
xchg
ljmp
aaa
daa
movsl
pop
paddq
inc
push
adc
pop
das
loop
add
lret
divl
in
cmp
adc
or
push
mov
pusha
cs
push
push
stc
unpckhps
xchg
jp
or
call
push
aam
out
sbb
pop
data16
scas
es
mov
loopne
cmpsl
clc
rolb
jmp
xchg
mov
mov
test
pop
mov
addb
mov
ss
pop
dec
aaa
adc
sub
push
inc
fdiv
loopne
popa
lea
aad
aad
leave
add
ljmp
xchg
sahf
push
sbb
pushf
xchg
fstps
pop
lahf
lods
pop
aad
pop
xchg
int3
repz
jne
aaa
mov
ljmp
or
stc
orl
dec
lds
push
or
xlat
mov
hlt
mov
mov
aaa
mov
pop
and
push
fwait
test
lahf
sbb
out
mov
out
std
ljmp
sbb
jle
mov
imul
movsl
push
sub
sbb
add
jecxz
xchg
xlat
movsl
dec
cli
pop
lods
jb
xor
sar
jmp
int3
xor
stos
mov
js
stc
add
xchg
xor
in
mov
mov
cmp
ret
insb
and
xchg
push
pop
xor
xchg
minps
mov
into
arpl
xor
shr
inc
xor
mov
leave
test
inc
mov
int3
daa
fimull
mov
cltd
mov
imul
mov
push
cld
fdivrl
movsb
or
pop
xchg
cmp
out
dec
scas
jle
ror
inc
out
addr16
lret
pop
faddl
mov
dec
add
or
and
pushf
inc
clc
shrb
mov
dec
sbb
clc
dec
cmp
std
ret
and
jb
popw
jne
cmp
inc
and
jle
sbb
jl
adc
cmpsl
pop
shl
mov
in
lea
jns
call
std
mov
jb
data16
popf
cmp
cmp
sbb
xchg
xor
mov
push
xchg
stos
andl
stos
push
adc
and
mov
loopne
pop
and
jge
sub
test
out
inc
push
stc
dec
lret
xchg
and
sar
in
xchg
jne
sbb
cwtl
jg
xorl
mov
mov
pushf
push
pop
xchg
imul
fwait
sub
iret
into
mov
repz
or
mov
sahf
orb
dec
das
sbb
mov
xchg
out
lods
or
add
inc
sbb
push
pop
shll
sbb
jmp
ja
and
adc
stc
out
mov
mov
leave
jp
dec
cltd
lcall
xchg
cli
cmp
mov
cmp
jne
xchg
push
aad
inc
push
dec
adc
mov
cmp
cmc
sbb
push
ffreep
in
cltd
out
or
out
enter
stos
loop
aaa
and
xchg
push
dec
insb
mov
push
and
into
push
sar
mov
nop
pop
dec
and
pushf
xchg
jae
ljmp
popf
mov
and
outsb
stos
rolb
cli
cmp
jg
xlat
loope
push
shll
stc
inc
xlat
dec
push
xchg
and
mov
push
roll
jg
ds
jbe
and
ss
frstor
sub
loop
add
mov
adcb
or
mov
xchg
push
xor
pop
ja
or
xor
mov
jg
ss
dec
lret
scas
in
sub
sbb
js
xchg
gs
mov
dec
sbb
mov
pop
popa
movsl
in
xchg
clc
inc
bswap
pop
jo
cmp
ja
sbb
xchg
aas
and
adc
mov
mov
out
or
ja
scas
lahf
jns
sub
sti
dec
dec
loop
add
push
sub
movsl
sub
loope
xor
adc
orb
xchg
sub
sbb
jb
sbb
insb
mov
or
mov
jbe
cld
fldcw
push
jns
inc
jmp
sbb
or
xor
push
inc
das
nop
and
or
js
fistl
inc
sbb
lahf
mov
pop
es
jae
jb
cmpsb
sub
xor
mov
icebp
out
dec
cli
jns
inc
dec
out
outsl
aam
pop
mov
and
pop
nop
adc
lahf
sarl
cld
adc
jg
clc
xor
add
test
insl
mov
es
dec
leave
subl
xchg
les
sub
sub
sub
fcmovb
sbb
adc
xor
scas
ret
pop
mov
fsts
pusha
out
loopne
jge
push
popa
mov
pop
pop
out
jp
mov
mov
pop
fdivp
inc
ds
iret
rcr
lods
dec
push
ljmp
test
push
lds
fisubs
mov
push
push
jb
lret
adc
mov
mov
jecxz
add
jmp
mov
and
push
or
push
bound
scas
dec
and
xchg
shll
lret
repnz
sbb
fiaddl
inc
hlt
dec
into
add
jbe
push
insb
mov
mov
jae
lods
jle
sbb
dec
mov
mov
lahf
jmp
jns
popf
sbb
mov
in
rorb
call
mov
shlb
xchg
iret
lret
outsl
mov
outsb
imul
lret
add
lods
sahf
out
xor
mov
xor
rolb
xor
jnp
jae
test
mov
data16
cmp
push
addr16
sti
rorl
sub
sbb
push
in
pop
ljmp
mov
dec
cli
mov
add
mov
fdivrl
clc
or
sahf
pop
nop
loope
cmp
push
imul
add
mov
add
sbb
adc
add
inc
stos
xor
ss
jecxz
xchg
xor
lea
push
fisubrl
subl
lret
fisubrs
pop
sti
inc
mov
push
enter
xor
adc
dec
fcompl
iret
bound
add
sbb
inc
and
repz
gs
loop
cs
mov
pop
scas
jns
xchg
or
mov
push
rolb
jg
add
arpl
clc
pop
adc
loope
les
lret
adc
aas
sub
cmp
pop
out
jne
imul
or
fidivrl
in
rcrb
inc
add
dec
mov
dec
lods
mov
dec
or
xor
mov
fdivs
mov
cli
test
testl
ss
sbbb
pop
pop
imul
mov
pop
sub
jno
mov
gs
inc
cli
mov
xchg
orl
mov
fwait
aam
xchg
or
xlat
and
mov
xchg
in
lret
adc
add
icebp
push
jge
jb
enter
xor
out
int
sbbl
shll
cli
fldl
cmp
dec
adc
mov
inc
adc
in
xor
movsl
jge
push
mov
inc
mov
es
outsl
sub
adc
jg
enter
jecxz
inc
cld
sub
adc
repz
insb
aas
jl
push
pop
int3
imul
jp
dec
test
sub
inc
stos
cltd
push
dec
pop
sti
inc
push
inc
inc
pop
push
xchg
adc
cmpsl
or
mov
pop
test
fsubl
xchg
adc
ret
add
in
xchg
sti
repnz
dec
pop
fsubrl
mov
push
xchg
ret
cmp
xchg
add
cmp
mov
push
int
pop
rcl
jmp
call
in
adc
mov
jmp
iret
call
gs
leave
xchg
pop
dec
add
mov
and
jb
mov
mov
xchg
push
in
outsb
stos
push
mov
sbb
fcompl
bound
js
lret
fistl
add
or
ret
or
and
mov
inc
cmp
nop
push
pop
out
or
mov
cli
int3
lret
xlat
xor
imul
inc
mov
int
cmp
nop
sub
sbb
cmp
imul
adc
lahf
pop
je
sarb
popa
enter
mov
negb
sub
nop
xchg
or
xchg
xor
bound
adc
push
push
mov
sub
sub
xchg
jne
adc
cmp
jo
xchg
mov
add
retw
push
aas
mul
btc
leave
daa
lcall
and
mov
cmpb
clc
mov
xor
in
mov
in
ret
fisttpl
out
and
push
into
popa
xchg
pushf
inc
jnp
icebp
mov
adc
mov
mov
je
push
mov
loope
inc
pop
bound
inc
mov
popa
push
mov
and
hlt
inc
sub
shrl
popl
xchg
pop
mov
pop
xchg
call
imul
pop
push
xor
shll
in
fisttpll
cmp
cmp
pusha
test
test
stc
inc
jae
fdiv
sbb
adc
pop
dec
fidivrl
and
ja
lds
jp
aaa
cmp
add
addb
scas
push
enter
inc
or
pop
cmp
mov
shr
sub
mov
jb
cwtl
xor
icebp
jno
jo
mov
mov
jl
add
sub
push
jge
push
or
or
cld
xchg
xor
repz
je
test
test
pusha
lret
mov
mov
jae
movsb
insb
add
inc
cmpsl
cli
jmp
fildl
imul
ja
adc
fcmovu
cwtl
fadds
cltd
cmpsb
and
fildl
or
in
loope
mov
pop
aas
shrb
mov
jno
stc
pop
pop
aaa
or
enter
xlat
mov
push
xchg
out
mov
stc
loop
push
fsts
jns
pop
ja
add
sub
movsb
iret
movsl
push
shrl
loope
adcb
imul
out
sbb
push
jmp
cmp
rcrl
inc
fisubs
push
ja
push
popf
push
xchg
int3
stos
cmp
mov
lds
inc
leave
sbb
add
cmp
pop
stos
addl
and
sbb
xchg
mov
lock
test
xchg
and
sub
ja
popfw
aaa
or
push
or
inc
xor
stos
mov
bnd
dec
jb
fidivrl
aad
daa
mov
scas
xor
xchg
imul
scas
pop
add
les
xchg
ja
jl
pop
sarb
mov
dec
inc
hlt
lret
out
jg
nop
fmulp
lods
or
js
dec
in
or
aas
stc
in
fidivrl
lret
into
sub
sar
jne
sbb
inc
lret
mov
es
pop
fimuls
sbb
cmpsl
shl
xchg
enter
insb
call
jmp
addr16
test
jmp
jp
jge
cs
clc
jmp
jg
pushf
cmc
enter
ja
push
dec
arpl
popa
stos
mov
dec
ret
jmp
call
sub
push
stos
pop
push
ret
push
loope
pop
fwait
xchg
mov
mov
cmpsl
int3
mov
adc
test
lds
mov
jne
or
mov
lea
loope
xor
rcrb
fdiv
add
sbb
mov
fcmovu
in
mov
push
out
fsubrs
orl
loope
jp
in
xor
repz
insb
out
fcmovnu
mov
push
sbb
lret
xor
jle
sarl
inc
repnz
cmp
jle
or
ror
inc
push
and
and
andl
xchg
das
fs
fucompp
mov
mov
stos
sub
repz
movsl
les
dec
ret
sub
add
cmpsb
out
mov
push
rcrl
mov
shl
icebp
iret
mov
sbb
mov
sbb
push
push
inc
mov
adc
mov
jl
das
lods
adc
sub
xchg
pop
aas
out
shlb
push
ss
cmp
fisttps
cmp
pop
sub
add
dec
xchg
or
or
inc
fld
call
sbb
divl
sub
adc
movl
iret
mov
push
sub
iret
lea
adc
sub
sahf
popa
sub
shl
les
ljmp
sub
push
cmpl
mov
adc
mov
aaa
nop
push
sub
mov
rclb
hlt
sub
mov
sbb
xor
push
push
pop
sbb
xchg
push
and
mov
test
mov
shrb
movsl
cmp
lcall
les
daa
dec
pushf
adc
or
movsb
lds
mov
jle
clc
add
mov
and
fwait
push
es
sub
pop
ficomps
add
dec
bound
jae
lods
into
jne
call
test
adc
rolb
inc
dec
and
mov
pop
push
ja
mov
enter
cld
mov
xor
pop
add
mov
movsb
lret
ret
cld
jg
jns
int3
sub
loope
cmp
fidivs
mov
dec
jae
jmp
into
in
into
mov
ja
push
inc
mov
dec
roll
cmpsb
sarb
mov
out
addr16
push
mov
xchg
pop
dec
lret
sub
inc
and
mov
fcmovbe
ss
rcll
mov
adc
mov
pop
xchg
hlt
sub
mov
dec
ret
ja
or
push
adc
mov
arpl
mov
cli
fisttpll
and
inc
inc
and
repnz
push
jg
xchg
adc
pop
jmp
cmp
mov
push
push
les
fndisi(8087
add
mov
ds
std
mov
aas
addr16
lcall
push
mov
sbb
leave
xor
jns
cmc
xor
shrl
mov
cmc
fimull
mov
mov
dec
cmpsb
cmp
stos
jmp
dec
xchg
mov
imul
les
jecxz
push
sub
cli
inc
dec
adc
js
sbb
mulb
insb
jle
not
add
push
push
xchg
cmpsb
inc
and
jnp
pusha
inc
ljmp
orl
cmp
idivb
ret
xor
mov
mov
inc
sbb
cmc
sbb
jmp
lods
shll
lahf
cmp
imul
imul
mov
nop
mov
mov
adc
jo
adc
popa
xchg
xchg
and
xchg
inc
or
fadds
sub
xchg
mov
mov
stos
ss
mov
insl
inc
lcall
bound
cli
lods
cli
pop
gs
sbb
mulb
aam
xorl
sbb
rcrl
addr16
and
das
cmp
and
sbb
daa
je
pop
pop
arpl
mov
fsts
mov
pop
inc
into
xor
aam
cmp
or
dec
xchg
mov
out
mov
mov
mov
or
jno
movb
sbb
lcall
icebp
sbb
mov
mov
fld1
inc
inc
push
call
xor
push
mov
mov
out
idivl
nop
imul
sub
jmp
jg
xchg
and
pop
iret
leave
and
js
adc
fsts
rolb
movsb
out
add
jp
push
movsb
loop
insl
pop
out
ljmp
aaa
into
jns
aad
jnp
shll
icebp
xchg
out
cmpsb
mov
shll
jno
mov
sbb
sbb
cwtl
pop
int3
push
jge
lahf
into
cli
outsb
pusha
sbb
pop
mov
in
xchg
jl
push
pop
adc
insb
jecxz
fwait
add
ret
jne
cmp
out
in
fcoml
test
jl
imull
ja
repz
inc
dec
loop
adc
mov
ficompl
jecxz
gs
test
inc
xchg
cmp
jmp
adc
ficompl
add
pop
jno
push
out
and
fldenv
jp
push
push
inc
popf
pop
out
lahf
imul
hlt
popa
int3
outsb
sti
rorb
jb
mov
insl
pmullw
shll
imul
les
add
push
sbb
inc
fistps
test
mov
lcall
xor
ds
jns
xchg
inc
aas
xchg
in
pop
les
add
sbb
imul
sub
sbb
xchg
cmp
out
dec
sub
mov
in
cld
or
xor
sub
aam
into
sbbb
pop
push
cld
repz
jbe
insb
rorl
fwait
cmp
pop
lods
mov
pusha
or
out
and
adc
pop
mov
js
mov
fmull
add
sbb
sarl
test
xor
mov
shrb
adc
call
xchg
cmp
out
rorl
jnp
xchg
fs
repz
pushf
cmp
dec
lahf
jnp
inc
adc
int
into
cmp
adc
dec
mov
lods
pop
stos
mov
jge
xchg
and
dec
lret
out
ret
cmp
test
cltd
mov
insl
filds
xchg
cltd
mov
adc
or
push
cmp
adc
inc
push
jp
aaa
out
scas
insb
xchg
frstor
std
xlat
mov
int
add
mov
mov
push
cmp
mov
call
loop
rol
cmp
sub
dec
cmp
push
sti
cltd
lds
or
mov
xor
lahf
subb
and
dec
pop
push
push
arpl
xchg
fucomi
dec
arpl
inc
mov
or
sbb
pop
xchg
arpl
call
mov
lods
push
cmp
fs
cmp
jb
dec
int
adc
push
aaa
not
mov
aam
aad
fsubs
add
loop
adc
sbb
xorl
add
shll
mov
andl
imul
xlat
test
ret
decb
ror
pop
int3
les
popf
jmp
insb
xlat
mov
jl
mov
pop
aad
jb
out
cli
movsb
dec
adc
jbe
adc
mov
rcll
fildl
leave
pop
bound
fidivrs
aaa
lods
idivl
repnz
ret
ret
pop
cmp
and
test
leave
push
mov
in
mov
repz
in
pop
cld
cmpsb
xchg
enter
call
and
fidivs
inc
adc
xchg
cwtl
cs
test
pop
add
mov
push
xor
push
adc
and
es
int
sbb
daa
and
in
pop
pop
push
mov
out
mov
pop
inc
or
inc
push
jb
adc
lods
xor
ficompl
mov
and
pop
add
jg
pop
inc
sarb
xchg
outsb
xor
popf
aas
inc
hlt
mov
out
jno
pop
repz
jo
into
lock
mov
ss
dec
xchg
push
adc
push
xor
inc
rcl
jecxz
xchg
js
xlat
mov
push
mov
inc
mov
xchg
push
mov
int
imul
jg
xchg
outsb
mov
adc
jle
push
mov
pop
or
xor
popf
add
xchg
sti
dec
jmp
pop
adc
jl
ja
ljmp
sub
ret
ret
mov
push
mov
jp
sahf
add
loope
or
pop
xlat
stc
mul
fnstenv
xchg
leave
dec
and
sub
aam
stos
das
adc
jge
xchg
test
push
in
ret
jno
pop
imul
push
push
pop
aas
ss
nop
sbb
sahf
jnp
movsb
mov
pop
repnz
mov
adc
lahf
pop
add
es
arpl
xchg
push
or
and
mov
lret
lcall
repz
pop
daa
adc
mov
mov
lcall
imul
bound
mov
lret
or
jle
adc
pop
adc
xchg
int
clc
mov
jnp
and
enter
adc
mov
add
stc
pusha
mov
inc
ret
inc
test
sbb
lea
jmp
pop
jecxz
cli
addr16
pop
push
sub
mov
mov
push
insb
mov
mov
or
out
mov
je
sub
or
inc
lods
je
xchg
push
scas
clc
lods
lret
mov
nop
inc
cli
add
les
mov
pop
dec
in
mov
mov
scas
andb
push
and
mov
sub
pop
dec
sub
loope
cmp
xor
ret
xchg
mov
es
dec
test
mov
cli
call
or
add
cmp
sub
dec
push
jo
add
das
cld
jns
inc
mov
pop
stos
push
aam
jnp
mov
dec
push
jge
push
push
clc
jno
cmpsb
and
ljmp
test
sbbl
addr16
xor
outsb
sbbb
cmp
data16
xchg
fsubs
pop
sti
or
mov
stos
dec
add
adc
je
lret
adcb
test
in
das
sub
mov
aad
mov
push
faddl
mov
pushf
outsl
jecxz
jp
xor
pusha
sbbl
sbb
sar
out
repz
pop
push
mov
jnp
push
xchg
fwait
loop
daa
cmc
and
inc
push
add
pop
stc
xor
cwtl
ja
leave
pop
jl
and
cltd
movsl
mov
iret
adc
adc
adc
in
mov
rcrl
sbb
sbb
push
fcmovnbe
xlat
jecxz
cld
push
fidivrl
cmp
shlb
mov
mov
enter
sub
pop
mov
iret
pop
jp
pop
xor
out
xor
xchg
dec
cmp
dec
inc
jg
rcrb
pop
inc
cli
jae
out
sub
jl
hlt
addr16
xchg
sub
rcrl
sarl
adc
loopne
arpl
mov
mov
jnp
sub
imul
jmp
flds
jle
inc
ret
test
ret
dec
mov
imul
jmp
movsl
push
jl
data16
sbb
leave
or
ja
xor
call
arpl
cltd
cmp
fcmovnbe
xor
cmp
sarl
cmpsb
cmpsb
and
scas
loop
pusha
in
std
and
mov
test
out
xor
push
dec
xlat
dec
shll
shll
int
out
aas
mov
jp
xchg
and
jbe
sbbl
out
ret
and
adc
sub
fmull
push
pop
xchg
mov
adc
ds
nop
mov
and
adc
inc
inc
shlb
pop
inc
lods
and
xchg
shl
mov
sbb
fwait
cmp
sbb
fnstsw
lcall
popa
outsb
sub
les
pop
push
mov
aaa
jnp
jb
add
into
lcall
stc
fldenv
xor
cmp
sti
cmp
push
lcall
mov
and
lock
cmpsb
jnp
out
sbb
adc
cltd
ret
cld
cmp
mov
dec
gs
mov
mov
pop
lds
or
fsts
push
and
fsubrl
jno
sti
jb
push
push
pop
mov
and
lahf
inc
in
pop
insl
or
in
push
in
loop
int
cltd
movsl
loopne
xchg
add
lods
test
cmp
mov
mov
iret
push
cmp
xchg
dec
mov
int
xorl
jbe
cwtl
out
mov
inc
mov
hlt
sbb
add
jbe
popf
push
psubw
pop
ja
mov
xchg
mov
cs
cmp
data16
inc
mov
lea
push
inc
pusha
roll
vmwrite
pop
in
out
in
sub
icebp
push
push
ret
shrb
imul
mov
adc
dec
cmp
cmpsb
xor
sub
cmp
insl
pop
xor
cld
loopne
out
mov
and
pop
sbb
mov
in
add
cmp
leave
add
jns
shrl
mov
and
pop
mov
mov
add
iret
jle
fcom
push
mov
mov
sub
insb
scas
rcrl
fwait
jge
pusha
adc
adc
mov
mov
imul
push
mov
pop
pop
pusha
mov
push
mov
sarb
insb
in
push
je
rcll
pushf
out
call
mov
fadd
pop
mov
ljmp
fidivs
in
test
xchg
or
daa
mov
mov
sarl
testl
sub
mov
ret
and
fcomps
gs
loope
jns
mov
rclb
push
enter
bnd
mov
shrl
xor
xchg
sbb
add
inc
int
or
pushf
iret
out
push
or
cmpsb
pushf
std
std
pop
lods
dec
xchg
mov
in
pop
push
inc
jno
ficompl
into
arpl
rcrb
cmp
ss
out
xchg
cld
bound
mov
cwtl
icebp
lcall
cmp
aad
xorb
sub
adc
add
jg
nop
lahf
add
subl
push
or
inc
adc
fwait
push
int3
push
pop
test
dec
out
mov
call
sub
jmp
xchg
xchg
lret
subl
dec
lea
mov
xchg
repnz
or
sahf
in
incl
loope
mov
stc
adc
cltd
push
mov
mov
mov
sub
and
sub
sbb
sbbb
inc
dec
outsb
int
push
ja
dec
fwait
and
and
je
inc
leave
jno
jg
push
adc
jecxz
cwtl
getsec
rcll
stos
sbbb
xchg
push
cld
sub
ret
and
pop
xchg
xor
lea
insl
clc
mov
daa
out
mov
mov
and
pusha
fwait
sbb
cltd
test
and
ljmp
in
or
or
test
sbb
xchg
push
int3
push
and
cli
jp
and
cmp
mov
mov
test
pop
stos
xor
mov
cwtl
fsubl
orb
cmp
hlt
lds
lcall
gs
cli
jmp
dec
jne
leave
out
sbb
or
lea
popa
ljmp
jecxz
in
sbb
ret
mov
push
cwtl
es
cmp
pop
dec
pop
cmp
pop
pop
shr
sub
cmp
pop
mov
mov
ss
push
fwait
push
lcall
cmp
mov
in
cld
fbld
add
adc
adc
sbb
cmp
inc
std
sub
pushf
int3
push
test
mov
push
jle
in
xchg
mov
mov
dec
out
ficomps
in
and
movsl
popf
pop
es
push
pop
mov
movsl
stos
mov
mov
dec
add
lahf
pop
xchg
pusha
repnz
sub
add
push
jmp
or
mov
scas
rorl
clc
push
roll
ret
je
xchg
adc
lea
repnz
popf
test
lea
daa
mov
mov
xchg
fldt
mov
cmp
dec
jns
icebp
and
and
pop
mov
roll
inc
insb
cltd
mov
lods
mov
repnz
or
imul
fists
push
mov
inc
je
cmp
mov
xchg
pop
lret
ret
inc
stos
fmuls
fwait
push
shlb
xor
mov
xor
pop
pop
ja
lcall
scas
jmp
and
xor
sub
int3
inc
adc
push
sbb
loop
mov
popa
mov
pop
jne
in
push
cmp
in
fs
mov
xchg
sbb
mov
sarl
and
cwtl
adc
jle
enter
adc
call
rcrb
gs
lea
cmp
jmp
xchg
call
push
xor
jle
cmp
cmp
pop
sub
adc
fs
cmpsl
adc
pop
aaa
adc
xor
test
or
cltd
cmp
aad
and
jle
pop
push
loope
push
nop
fldcw
call
dec
inc
jg
out
repz
push
pushf
nop
scas
orb
add
mov
aaa
dec
mov
mov
faddl
fcmovb
dec
mov
push
adc
sbb
jnp
dec
rcr
fmulp
lahf
sbb
mov
jge
mov
push
dec
lret
negl
movsl
in
dec
lcall
popa
jp
int
add
dec
mov
decl
and
jge
das
xlat
test
js
push
fs
fldpi
enter
xchg
lods
cmp
adc
xchg
mov
adcb
cmp
push
popf
push
mov
add
fdivr
dec
inc
ja
jb
arpl
outsb
lds
into
jecxz
adc
pop
mov
mov
nop
push
pop
dec
lock
int3
loopne
mov
fcomps
in
insl
jecxz
stc
popl
sti
mov
scas
fmul
lock
mov
add
mov
cmc
cmp
cmp
sub
fisubrl
outsb
or
or
push
inc
xor
lock
fisttpl
rcrl
xor
xchg
and
loope
fistpl
mov
lock
sub
mov
int
sbb
or
sub
std
cltd
cmp
add
sub
pop
shl
dec
pusha
dec
inc
leave
dec
cmp
leave
enter
sbb
stc
cmp
fs
push
stos
inc
xchg
shll
rorb
inc
jno
adc
jb
sbb
jmp
jge
or
push
out
xorb
ljmp
sar
loop
stos
cmc
adc
shll
mov
loope
mov
sub
push
xchg
xor
clc
or
aas
mov
jge
adc
jbe
in
dec
push
mov
cmpsb
leave
add
sub
test
jg
shlb
int3
je
cmpl
rcrb
in
std
jl
cmpsl
xlat
es
push
cmp
cli
loopne
add
loop
andb
cmp
or
call
adc
jle
dec
inc
xor
into
and
loop
xchg
repz
push
dec
and
sahf
pop
xor
sub
movsb
xor
and
scas
pop
xor
cmp
jno
outsl
or
orb
mov
fsubs
pop
jl
mov
add
daa
inc
xchg
mov
pop
xchg
sbb
sub
mov
xorl
jle
mov
mov
jns
jl
out
popf
shlb
or
fisubl
cld
cmp
mov
mov
pop
and
icebp
ds
mov
arpl
je
movsb
mov
add
add
cmp
jl
dec
out
pop
mov
popf
pop
adc
push
cmp
iret
xor
femms
lock
and
xchg
testl
ds
sub
dec
xchg
cmp
idivl
mov
mov
rcll
movsb
fwait
or
lahf
loope
hlt
daa
dec
lcall
das
push
lret
lods
jecxz
adc
movsl
fwait
xor
lods
loopne
psubw
incb
xchg
xchg
iret
data16
mov
stos
jl
lock
js
pop
push
xor
push
jnp
repnz
ds
sbb
aas
shlb
cwtl
fsubrp
dec
mov
xchg
or
sub
xchg
mov
pop
cli
xor
push
sbb
and
rcl
mov
adc
cmc
mov
dec
fstpt
adc
repz
mov
push
test
inc
clc
out
hlt
arpl
cmp
sahf
ret
ja
cmp
repz
es
or
aaa
sti
jmp
push
mov
in
xchg
add
outsl
xor
mov
mov
mov
sbb
push
jno
lahf
int3
push
mov
loop
dec
jmp
popf
adc
and
push
and
pop
jno
and
inc
adc
aad
dec
inc
ficomps
or
adc
sub
jnp
aad
adc
jl
pop
dec
dec
sub
gs
jg
mov
fistl
mov
mov
xchg
jge
fwait
jecxz
addr16
lods
pop
cli
pop
out
fs
imul
mov
inc
aam
ret
mov
test
pushf
sbb
pop
sbb
aaa
and
jl
mov
hlt
fs
hlt
jne
rcll
enter
sub
mov
pop
pop
mov
lret
mov
mov
cwtl
test
imulb
daa
xchg
cmp
outsl
sbb
aad
stos
sub
adc
cwtl
inc
paddusw
sub
cmp
dec
int
cmp
das
or
call
movsb
out
pusha
cs
sbb
add
pusha
repz
imull
lods
sbb
push
incl
jle
insb
jmp
push
int
dec
enter
and
sub
jno
dec
push
test
xorl
in
mov
jl
sahf
scas
jbe
orl
movsb
loope
popa
movsb
aas
mov
pushf
in
cmp
mov
fcomps
mov
aaa
mov
fsubrl
shl
mov
ret
push
lock
push
xor
adc
stc
jae
shlb
cmc
pop
cmp
shrl
mov
pop
in
jo
std
dec
cwtl
push
arpl
cmpsl
mov
repnz
xor
pop
sbb
add
add
cmp
test
xchg
daa
push
xchg
je
pop
xchg
sub
test
push
sbb
adc
lods
aad
stc
loopne
push
inc
xchg
mov
shlb
xchg
sar
fmul
sbb
test
jmp
or
xchg
lahf
push
jne
inc
push
xchg
fmulp
scas
aad
jge
add
lcall
out
je
out
cmp
fldenv
movsl
sahf
dec
and
in
cmp
xchg
jmp
mov
repnz
jge
lea
mov
and
jnp
mov
test
pop
into
add
ds
lret
es
pop
repnz
pop
sbb
popf
mov
repz
mov
adc
jbe
push
leave
leave
fstpl
je
out
sbb
lret
ljmp
xchg
fstpl
jg
sahf
xchg
pop
pusha
mov
push
in
xchg
fisubrs
in
hlt
ret
ret
insb
pushf
mov
test
mov
jae
push
stos
popa
dec
lods
test
lret
mov
cmpsl
jle
inc
call
mov
data16
aas
mov
cs
daa
dec
jp
cmp
mov
mov
shrl
movb
push
shll
and
cmp
xor
bound
test
outsb
add
push
inc
cmpsl
add
mov
out
adc
jl
aam
push
mov
add
aas
movsb
mov
jns
mov
pop
push
push
sub
arpl
addr16
es
fcomps
jb
test
add
cmp
cmp
mov
pop
push
mov
out
push
dec
scas
enter
xchg
and
testb
mov
pop
dec
xor
xor
pop
xchg
loop
stc
mov
and
lods
lret
mov
sub
imul
fptan
fsts
mov
cmp
sti
inc
mov
jns
inc
pop
in
cmp
or
cmp
and
pop
add
jb
pop
pop
mov
inc
ret
add
push
subl
pop
loop
jo
je
out
out
inc
inc
popa
fstps
xchg
push
xor
test
dec
xor
cltd
bound
inc
imul
or
sbb
pop
lret
addl
cmpsb
jge
push
xor
mov
ss
inc
lcall
pop
mov
imull
pop
sbb
xor
fadd
push
repnz
insl
add
xorb
gs
mov
mov
sbbb
inc
mov
lahf
or
mov
add
fidivs
cmpsl
imul
repnz
adc
test
mov
or
mov
lret
cmp
mov
pop
inc
sbb
ret
mov
cmp
js
push
sub
testb
scas
repz
push
push
mov
inc
or
push
out
push
jecxz
push
mov
cmc
jbe
movsl
sub
push
mov
pop
sbb
fwait
out
sub
test
xchg
xor
sahf
jno
xor
jle
add
shlb
lcall
mov
sti
xchg
lahf
jge
mov
dec
fsubrs
sub
push
loop
pop
sbb
push
adc
jmp
insl
cld
cli
arpl
scas
shll
pop
cmp
fsubrl
jmp
cmp
arpl
cmp
rcll
out
lock
push
mov
in
out
test
insl
clc
enter
push
xlat
lret
and
lret
mov
xor
dec
or
outsb
xchg
add
fnstenv
lea
jp
arpl
adcl
in
jle
mov
cmpsb
daa
pushf
mov
mov
cltd
push
inc
dec
mov
sarl
mov
sub
and
mov
mov
rcl
inc
xchg
out
xchg
adc
pop
adc
jecxz
dec
inc
cwtl
out
jo
fstpl
mov
xor
or
cli
das
xchg
sbb
shl
mov
das
stc
es
and
in
out
jl
arpl
lock
pop
jge
clc
andb
mov
adcb
or
movsb
fsubr
fdivl
mov
das
ret
inc
repz
mov
pop
addb
ja
frstor
inc
inc
pushf
xchg
jl
enter
cmp
addr16
js
add
or
mov
sbb
jecxz
or
div
push
je
mov
push
js
pop
jbe
test
jg
jecxz
and
sub
xor
push
inc
sub
mov
test
mov
inc
leave
fisubrl
inc
lea
in
dec
push
xor
bound
sahf
cltd
sub
fs
das
or
xor
cld
xor
mov
or
notl
ja
in
mov
dec
lret
and
cmp
inc
sbb
pop
popa
jecxz
ret
pop
lods
test
lods
xor
pop
and
imul
lods
notl
lret
jnp
loop
lahf
and
addr16
scas
lods
imul
and
lahf
test
fs
stc
mov
sub
ja
xchg
iret
mov
xchg
lret
fisttps
sbb
ret
push
mov
mov
dec
mov
jbe
sti
mov
inc
movsl
or
out
lret
loop
rcll
jo
or
ret
jnp
mov
mov
jg
mov
in
push
fisttpl
inc
adc
xor
sub
in
push
lret
or
sbb
sbb
mov
mov
test
sub
jmp
mov
jbe
ret
adc
push
getsec
and
in
add
inc
adc
fwait
jmp
stos
faddl
sbb
es
lods
aam
adc
inc
inc
negb
sub
xchg
lods
pop
ret
in
cltd
add
shll
movl
popf
jg
call
mov
pop
pusha
test
cmp
fcmove
shrb
addb
mov
fadds
and
repz
movsb
mov
popa
mov
int3
xchg
cs
pop
mov
cwtl
fistps
and
inc
out
imul
in
xor
xchg
pusha
loopne
mov
pop
add
dec
mov
mov
adcl
sbb
jbe
in
jecxz
jmp
mov
cwtl
xchg
adc
rorb
nop
mov
add
push
jno
out
jns
stc
test
std
out
mov
mov
cmp
add
je
popf
lcall
aaa
arpl
lods
enter
push
int
adc
sub
mov
sbb
and
mov
dec
ljmp
in
aam
cmpsl
mov
sub
or
jne
dec
icebp
stc
fidivs
push
mov
std
jne
adc
pop
subb
jb
and
test
push
jnp
out
pop
movsb
loopne
loope
mov
sbb
fs
das
pop
pop
orb
loope
into
shr
lret
mov
mov
pusha
cmpsb
movsb
rcrb
fnsave
inc
out
and
arpl
imul
loopne
cwtl
push
ret
loop
movsl
push
and
mov
dec
leave
jmp
or
xchg
test
sahf
push
in
dec
mov
sbbl
sbb
into
or
enter
xchg
push
arpl
cltd
inc
mov
and
push
das
jno
lret
jp
mov
pushf
out
jmp
dec
xor
mov
and
fwait
ss
mov
les
in
sub
shrl
scas
adc
mov
lods
hlt
xchg
jp
push
imul
fwait
sub
test
adc
inc
and
and
xlat
pushf
in
ret
sbb
in
push
das
xlat
add
outsb
repz
xchg
dec
or
ret
ljmp
sbb
jp
pop
xchg
call
nop
and
repz
or
adc
dec
or
push
mov
push
and
insl
push
pop
push
dec
mov
loopne
orb
inc
sahf
mov
add
out
sbb
add
negl
dec
dec
push
pop
lret
nop
cld
mov
ja
lds
jmp
push
rcr
fs
lret
mov
sub
adc
pop
iret
cwtl
fs
ss
int3
cmp
sub
pop
ja
test
in
std
dec
inc
repnz
inc
adc
fidivrl
cmpsl
jbe
push
jle
out
xor
push
imul
out
repnz
dec
mov
fs
lcall
jle
xchg
stc
cmp
popa
xchg
aas
jne
roll
mov
mov
mov
ret
pushf
mov
inc
enter
scas
adc
inc
test
aas
mov
pop
adc
xor
in
cmp
test
mov
cmc
sbb
ja
mov
filds
es
cmp
add
jns
lcall
int
inc
aaa
je
or
shr
sbb
add
mov
cmp
and
inc
cmp
out
ficoml
dec
sbb
les
ret
outsb
movsl
xchg
js
sti
inc
inc
js
nop
sub
dec
cmp
xchg
orb
jg
or
inc
pop
aas
ret
aad
pop
popf
mov
adc
jb
push
test
rcrl
sbb
or
arpl
xor
cmp
sub
add
and
into
add
pushf
cs
sahf
stos
sbb
addr16
xchg
cmp
push
or
inc
cmp
mov
fwait
add
into
add
xchg
or
mov
lahf
mov
adc
xor
sub
mov
pcmpeqw
scas
jbe
and
sub
add
cmpsb
enter
xor
jecxz
and
das
andl
scas
mov
andb
add
adc
insb
lret
neg
aam
icebp
push
or
pop
popa
xchg
in
mov
testb
cld
inc
pop
dec
push
jne
mov
inc
xlat
icebp
inc
add
imul
popa
loope
xchg
mov
mov
jb
sbb
xchg
imul
and
dec
pop
les
cmp
fs
push
aam
mov
jne
adcb
pop
pop
and
idivl
push
push
sub
mov
sbb
lahf
jne
jae
xor
lock
xchg
idivb
aad
movsb
xchg
xor
movsl
add
mov
in
xor
fwait
push
pusha
push
in
adc
frstor
and
xor
push
jb
stos
jae
fstpt
sub
dec
inc
mulb
add
mov
icebp
div
jle
add
and
sarl
cmc
adc
add
mov
jb
mov
mov
lret
nop
faddl
out
inc
enter
sahf
gs
stc
cmpsb
clc
movsb
jg
sub
mov
in
push
adc
push
mov
or
movsb
lock
lcall
pop
mov
inc
stos
stc
dec
xchg
mov
and
and
mov
lock
dec
addr16
mov
stos
jb
aad
jmp
sub
jmp
icebp
or
cltd
ja
xchg
scas
jne
ja
mov
repnz
jmp
sbb
addr16
rorb
mov
mov
scas
or
das
sbb
push
jo
ret
in
and
pop
loop
adc
push
loop
stos
or
les
push
std
les
push
push
in
aad
dec
std
sub
test
es
adc
pop
ret
xchg
sbb
pop
ficoml
repz
fsubs
jecxz
test
insb
inc
push
popa
mov
call
sub
mov
enter
xchg
sub
mov
mov
mulb
cmp
fsubrl
xchg
jb
in
vpsrlq
jns
and
addb
incb
les
pop
std
pop
loop
data16
in
or
pop
sbb
ret
mov
and
jae
pop
call
xchg
stc
jae
push
push
cmp
mov
cs
mov
xchg
int
mov
jns
push
pop
mov
xorb
in
mov
mov
adc
pusha
pop
aam
inc
lret
xchg
jg
ret
in
push
dec
cmp
in
jo
stos
leave
popf
or
jle
outsl
add
add
cmp
out
push
push
sti
fisttpll
mov
cmp
and
imul
inc
push
out
aas
loope
and
xchg
dec
cwtl
aas
test
lahf
adc
lock
dec
in
rclb
mov
jb
mov
pop
fcmovnu
mov
repnz
testb
push
insl
and
dec
cmp
fbld
pop
mov
mov
pop
ret
in
sbb
adc
or
ja
cmpsl
std
cmp
clc
loopne
repnz
or
mov
mov
ret
mov
push
xorl
lods
mov
shr
xabort
ja
repnz
ja
repnz
jge
dec
cli
enter
outsl
jno
mov
out
cmp
mov
outsl
jne
push
mov
pop
dec
xchg
lods
sub
inc
push
mov
icebp
out
in
int3
xchg
daa
sbb
dec
push
push
mov
mov
inc
sub
xchg
pop
dec
add
iret
and
std
jmp
mov
in
push
nop
sub
imul
out
and
ret
adc
fldenv
arpl
lret
mov
mov
or
mov
daa
sbb
cwtl
int
pop
ret
sbb
lea
imul
inc
adc
std
mov
mov
xchg
outsb
add
cmpb
inc
ret
loope
dec
add
jno
jno
loopne
pop
aam
jnp
push
aam
pushf
push
outsb
jne
rcrb
int
aas
mov
clc
je
sbbl
dec
xchg
out
shrl
hlt
addr16
sub
sti
pop
or
shl
push
pop
lea
dec
fcomip
fcomp
cltd
cltd
dec
sbb
dec
into
mov
dec
mov
or
mov
mov
push
xchg
call
mov
fimuls
xor
addb
lods
cli
cmpsl
mov
fnstcw
sub
test
cmpb
mov
inc
add
mov
nop
jns
dec
addr16
popf
je
inc
lahf
je
xor
stos
aad
dec
fisttpll
xchg
icebp
mov
jo
ret
xor
test
sbb
sahf
pop
dec
repnz
or
sti
rol
je
push
dec
pop
into
mov
pop
mov
jno
push
aas
movsl
adc
ljmp
push
insl
scas
lret
push
jg
ja
dec
add
jecxz
sub
repnz
adc
loope
xchg
leave
in
add
fldcw
or
pushl
push
pushf
mov
mov
sbb
sub
cltd
loop
pop
icebp
popa
gs
mov
out
and
jo
mov
insb
ds
sbb
mov
add
fbld
jbe
xor
inc
lds
gs
jp
sarb
loopne
shrb
fbld
push
ds
sbb
push
pop
dec
lds
sbb
mov
stc
fidivl
push
dec
xchg
xchg
rcrb
inc
fadds
lods
addr16
popf
cmc
ss
xchg
aaa
lds
xchg
fimuls
mov
xchg
sbb
dec
inc
enter
out
lds
out
aaa
inc
mov
push
sti
mov
pop
pop
ja
in
js
pop
into
testl
push
xchg
cmp
sub
sub
mov
adc
pop
and
and
mov
out
sbb
push
sub
inc
in
sub
mov
lret
cli
pop
adc
rolb
jnp
push
fidivrs
out
inc
cmp
faddp
push
push
lea
xor
test
push
add
ljmp
test
sub
push
gs
or
insl
mov
divb
cmp
or
outsb
jns
mov
or
js
movsl
repnz
out
in
and
ret
jb
sub
pop
mov
or
add
lock
loope
push
movsb
xchg
pop
loopne
in
sbb
adc
clc
cmp
mov
jp
mov
mov
mov
jne
fwait
cli
push
out
xchg
adc
pop
int
push
pusha
test
dec
mov
test
testl
push
hlt
rorb
insl
shlb
loop
cltd
mov
xor
dec
pop
popa
ret
ret
pop
cld
xchg
sarl
fcompl
fisttpl
xchg
ljmp
push
int
fnsave
loope
test
stos
enter
jle
xchg
rolb
inc
ret
pop
fld
cld
mov
das
inc
sbb
and
imul
icebp
dec
lea
mov
lods
mov
push
in
fstpt
shll
mov
data16
outsb
mov
imulb
push
negb
push
xor
sbbl
jg
nop
push
jne
or
dec
lods
or
mov
std
vxorps
push
test
pop
insl
nop
dec
mov
and
or
sub
push
mov
loopne
jnp
fldt
std
dec
cmp
stos
scas
fucomi
cmp
mov
mov
insb
test
or
mov
dec
push
xchg
mov
sub
or
repz
or
fucomi
cmpsb
cmp
push
mov
jecxz
pop
mov
pop
sub
xor
sub
sub
scas
cld
aad
ret
inc
nop
add
mov
jle
pop
inc
loopne
sub
ss
xchg
sub
inc
call
pop
movsl
jecxz
mov
std
mov
jg
mov
adc
sub
jmp
xor
call
cmp
pop
dec
aam
gs
add
jl
mov
ja
and
sbb
or
lods
add
pop
mull
inc
sbbb
mov
dec
jae
cmp
stc
sub
fadd
ret
xchg
stos
or
loope
xor
xchg
jbe
ja
dec
fidivl
insl
jo
mov
dec
lea
js
filds
jp
inc
cmp
or
mov
leave
test
jmp
stc
ds
mov
in
push
movsb
cmp
mov
shll
orl
mov
cmp
fcmovnu
xor
movb
pop
fldt
pusha
ss
cmp
cli
repnz
popa
mov
sbb
xlat
fidivrs
push
or
mov
rorb
es
test
call
leave
dec
adc
pop
aam
xchg
ret
inc
sub
mov
enter
mov
arpl
inc
xor
dec
pop
inc
inc
push
xlat
cltd
test
add
daa
ds
jne
push
daa
cmpsb
adc
mov
mov
pusha
rcrl
lret
insl
outsb
jle
or
adc
push
jp
repz
aad
lods
leave
aam
adc
movsw
imul
adc
in
push
imul
or
in
add
scas
cmpsl
hlt
lret
fucomp
push
or
dec
jecxz
inc
idivl
enter
mov
dec
pop
add
clc
sbbb
jae
in
xchg
push
jecxz
repz
push
mov
push
or
cmp
inc
call
cmp
mov
adc
mov
imul
pop
outsb
inc
or
mov
and
ljmp
sub
sub
adc
ret
xchg
mov
xor
imul
out
mov
push
insl
shlb
xor
xor
dec
cmpsb
xor
imul
push
js
icebp
ss
xchg
out
pushw
xchg
add
mov
popa
dec
jecxz
pop
lea
push
inc
rorb
sub
cmp
add
xchg
add
mov
xor
leave
ret
scas
xor
jno
adc
lret
std
fisttps
adc
shlb
hlt
add
mov
imul
mov
fucomp
jb
xchg
test
popf
lret
cmpsl
outsb
sbbb
bnd
add
aad
mov
jg
or
clc
into
outsl
idivl
mov
dec
enter
out
push
mov
inc
or
and
jbe
stc
fs
imul
dec
add
push
jo
pop
shl
das
add
inc
add
mov
or
leave
out
fldcw
xchg
jmp
jl
add
out
outsb
popa
addr16
dec
int
push
or
daa
jmp
add
xchg
inc
sbb
pop
push
fdivrl
jnp
lock
aam
add
add
or
xor
xchg
mov
pop
mov
and
sbb
xchg
xchg
jno
fwait
cmp
ja
fdivl
mov
pop
into
sub
or
popa
mov
mov
shl
daa
ret
jnp
cmp
ret
fildll
clc
push
inc
insb
cmp
xchg
push
je
mov
icebp
push
push
lods
popf
addl
stos
out
mov
add
insb
xchg
add
sbb
out
icebp
dec
and
stc
in
lcall
mov
out
ror
lret
sbb
test
in
cmpsb
xchg
test
or
add
out
sbb
decl
inc
add
mov
sarb
push
outsb
pusha
stos
sub
movsb
xor
inc
cli
jmp
jle
loopne
adc
jno
xchg
cmpsl
mov
fistpl
imul
mov
pusha
mov
jecxz
and
xor
push
test
adc
mov
push
fldcw
int
divl
repnz
mov
out
xor
jmp
lods
leave
sub
mov
dec
mov
dec
adc
xchg
xchg
ret
push
ret
push
insb
push
xor
pop
addl
adc
add
push
xor
dec
pop
cmpsb
xchg
add
addr16
sbb
xor
mov
push
mov
pop
arpl
aas
sbb
mov
cmpb
lret
xchg
lods
mov
lret
outsl
roll
mov
jbe
push
inc
or
and
leave
cs
xchg
sub
cmpb
outsl
leave
sbb
or
add
in
xor
jo
ret
insb
sbb
xchg
rorl
lods
push
mov
xor
jmp
cmp
or
cmp
mov
sarl
or
popa
fdivr
sub
test
test
sbb
lcall
add
lcall
lcall
cmc
push
aaa
push
cmp
pushf
mov
loope
lcall
out
fildll
dec
cmp
xchg
inc
push
inc
into
pushf
xchg
xchg
gs
lods
stos
push
ret
cmp
jne
ss
iret
ud0
add
inc
cmc
shl
mov
dec
inc
pop
dec
aad
lds
fsubrs
subl
sub
and
sti
and
xchg
dec
sbbb
mov
int3
jno
stos
fdivrs
xchg
jbe
lret
and
cmp
out
je
and
pushf
jo
orl
sbb
pop
sbb
popa
mov
mov
dec
jmp
and
lret
outsb
push
cmp
lret
aad
fstl
inc
cmpsl
into
loop
cmp
int3
xor
repnz
div
xchg
mov
xor
sahf
push
popf
pop
mov
add
decl
mov
dec
cmp
sbb
cmp
ljmp
jle
sub
aas
xchg
push
xchg
imul
dec
icebp
adc
lea
call
incl
ret
scas
insl
decb
and
enter
push
sub
jle
or
mov
shrl
xchg
test
cld
mov
jge
fidivrl
xchg
inc
or
or
xchg
mov
xlat
mov
lret
aad
or
popf
popa
push
jecxz
push
popf
mov
push
out
lret
imul
mov
jbe
sub
pop
cmp
xchg
scas
out
inc
xchg
int3
jmp
sbbb
pop
xchg
scas
mov
pop
add
popf
mov
daa
into
shlb
inc
in
add
or
in
in
sbb
repz
cs
sti
mov
hlt
in
in
mov
decl
jg
mov
out
arpl
shr
and
cmp
and
or
cmp
lcall
test
ret
aaa
add
cmp
es
inc
inc
rcrb
sti
ljmp
popl
jns
mov
pop
decl
jb
xchg
ds
out
stos
add
lret
xchg
push
sub
loope
arpl
mov
scas
jbe
jl
inc
notb
inc
incl
mov
or
loope
push
and
mov
xor
sub
jge
and
inc
js
mov
xchg
divps
cmp
arpl
jp
mov
movsl
ljmp
cld
sbb
cmp
rcll
push
jne
dec
fbstp
jecxz
enter
aam
xchg
or
ja
fs
sbb
aaa
pop
pop
sarb
and
jecxz
sub
pop
pop
cmp
pop
bound
loop
mov
in
int
xchg
inc
std
test
aad
gs
lret
or
sbb
lret
aas
inc
inc
jle
ljmp
lahf
out
add
fimull
push
stos
xchg
cwtl
pusha
and
push
sub
mov
mov
push
inc
std
mov
shl
jge
fisttpll
push
dec
test
int3
dec
shll
fucomi
sbb
mov
fcomps
ds
mov
xchg
mov
cmp
cmp
mov
jp
push
sbb
idivl
add
aas
jmp
fcompl
inc
lods
mov
cltd
mov
adc
test
sub
jl
jp
add
jl
inc
mov
sub
pop
leave
lods
stos
rcl
mov
jecxz
mov
out
cmp
test
cwtl
xor
xor
dec
add
lret
fnstcw
push
jns
rorl
scas
lcall
call
mov
mov
xor
lock
jo
sub
fiadds
icebp
mov
xchg
pushf
mov
imul
or
inc
jo
pop
out
jne
movsb
xorl
mov
lea
push
lret
sub
and
xchg
lret
out
fsts
jle
test
test
popw
std
or
inc
adc
rorb
inc
mov
rolb
inc
in
les
bound
xor
shlb
inc
ja
pop
sarb
nop
jne
ret
mov
dec
nop
pusha
cmpsl
pop
add
lret
ficompl
pop
mov
jecxz
fwait
sbb
or
shrl
addb
inc
jg
sub
lea
rolb
loope
dec
in
pop
jo
pop
mov
call
fdivr
int
and
adc
cli
cmpsl
sbb
xchg
in
shlb
fdivrl
pop
imul
jg
inc
or
fsubrp
ss
mov
ljmp
mov
pushf
loopne
dec
rclb
and
xchg
lcall
sbb
jae
in
outsl
shll
mov
add
repnz
mov
push
inc
fcmovu
push
adc
pop
stos
adc
jmp
roll
addr16
xchg
mov
adc
fs
mov
fs
and
mov
fdivrs
sub
fldcw
sub
mov
mov
loopne
xchg
pop
int3
iret
and
or
cmp
inc
push
adc
lods
mul
xlat
incb
imul
out
jge
xlat
imul
jae
repz
cmp
mov
xchg
lret
jnp
sarb
cmp
mov
call
add
pop
push
xchg
mov
jle
outsl
je
out
mov
jns
in
xor
shll
aam
xchg
movsl
jo
jg
clc
push
and
lea
int3
mov
xchg
or
test
outsb
jb
leave
sbbb
cmp
dec
dec
dec
sub
je
jmp
push
and
and
push
dec
jg
mov
mov
mov
fildl
push
pop
incb
inc
in
aaa
push
cmp
push
scas
jnp
lds
push
xchg
cs
call
mov
xor
aad
ds
dec
dec
dec
pop
cmc
pusha
jg
adc
jns
pop
mov
test
adc
addr16
pushf
hlt
in
jb
push
stos
stc
fstl
sbb
push
scas
pushf
inc
sahf
sub
pop
adc
jl
cmp
mov
ja
pop
orb
enter
inc
insb
sbb
mov
and
mov
xor
sub
cld
jle
ds
jo
insl
xor
into
loopne
adc
sub
test
jg
jbe
jb
adc
mov
jb
adc
pop
data16
aaa
dec
pushf
negb
data16
and
loop
insl
dec
add
xchg
cwtl
fwait
jnp
add
inc
xchg
pop
fsubrs
lahf
ret
pop
imul
push
lret
push
xchg
scas
mul
shrb
and
pop
pop
aas
fisubl
xor
sub
sub
rorl
repz
sbb
cmp
xchg
push
push
pop
mov
lret
scas
pop
idivb
loopne
lret
adc
pop
out
in
out
cltd
or
inc
pop
out
push
cmpsb
cmpsb
adc
add
pop
test
and
cld
cs
inc
shrl
jns
imul
push
cs
and
mov
lretw
mov
adc
fisubs
xchg
jnp
mov
test
xchg
cli
sbbb
stos
mov
cmc
or
lret
daa
jle
or
popa
push
push
mov
adc
jge
cmpb
mov
push
push
cmp
add
xor
sbb
fs
out
add
cmp
cs
mov
push
xchg
call
aaa
or
pop
pop
movsb
jecxz
or
mov
pop
pop
icebp
loopne
dec
not
mov
daa
sbb
lahf
sbb
loope
sub
push
lret
push
popf
fs
lods
adc
xor
shll
xchg
lea
rclb
xorb
cmpsb
cmc
insb
loopew
fstps
les
mov
nop
sbb
mov
in
test
mov
jns
xor
inc
test
fistps
add
rcr
stos
jg
adc
scas
outsl
sub
xor
push
add
das
movsb
jb
push
scas
sbb
stos
orb
stos
cltd
cmp
int
push
fadd
mov
in
pop
aas
sub
pop
pushl
dec
mov
push
imul
sti
test
fisubs
mov
loope
cmpsl
outsl
pop
mov
push
enter
sbb
int
and
insl
out
pop
fisttpl
push
push
stc
sbb
mov
dec
ss
and
mov
fsqrt
ret
xchg
add
lahf
shl
fadd
xchg
pinsrw
jno
jmp
fcmovnb
sub
pop
pusha
dec
sbb
inc
test
jmp
repz
adc
scas
aad
js
push
lahf
testb
push
andb
sub
fs
shrl
add
sbb
xor
inc
and
popa
mov
cmp
lods
int
ja
scas
testb
scas
arpl
sbb
sahf
lahf
dec
sbb
mov
cltd
movsl
fsts
out
inc
and
les
mov
mov
inc
dec
dec
std
lcall
cli
jp
stos
cltd
sti
pushf
rcrl
cmpsl
loop
ss
push
xor
mov
rcrl
dec
jmp
push
mov
mov
jp
inc
rcll
movsl
pop
or
and
pop
cltd
mov
xchg
cs
sbb
mov
xchg
pop
inc
or
out
cld
pop
adc
daa
nop
xor
cmp
leave
xor
lret
push
ret
dec
push
pop
mov
fsubl
pop
aad
mov
ljmp
inc
dec
mov
outsl
push
loopne
daa
in
pop
scas
lods
lcall
pop
xor
popl
orl
ret
dec
or
shlb
dec
enter
dec
mov
lretw
xchg
push
inc
movsb
inc
lret
sub
cmpsb
nop
or
push
sub
lock
call
cmp
mov
inc
or
sub
and
add
pushf
jle
adcl
mov
xor
cmp
sub
daa
push
loopne
loopne
stc
cmpb
jg
not
rcll
rcrl
int
xor
xchg
ljmp
icebp
test
test
inc
adc
fists
cmp
pop
and
cmp
add
aas
outsb
fsubrl
ret
je
mov
leave
mov
fidivrl
mov
pusha
insl
mov
in
lods
dec
dec
mov
insl
sti
imul
jnp
push
mov
push
pop
sub
mov
cmpsb
cmpsl
or
add
loope
jle
inc
xor
mov
xchg
lcall
mov
dec
outsl
nop
or
rcll
ja
xor
test
cld
jno
jns
cmp
insb
inc
jns
shlb
add
inc
xor
mov
lea
and
or
mov
in
mov
rorb
lock
cmpsb
inc
shr
gs
cli
jge
add
mov
scas
mov
dec
cmpsl
mov
xchg
cmp
imul
fimull
sbb
nop
xchg
and
pop
push
outsb
pusha
mulb
dec
mov
pop
push
pop
push
jbe
or
sbb
js
cwtl
inc
jp
add
xor
adc
sub
mov
push
push
in
lds
inc
and
adc
dec
sti
addl
mov
ds
insb
movsb
xchg
lahf
sbb
data16
pminub
mov
pop
fwait
cwtl
mov
push
sbb
mov
lds
xor
jae
sbb
daa
subl
out
lock
xchg
xchg
sbb
jnp
mov
pop
shl
popa
mov
sub
and
adc
shlb
push
xor
call
int3
xchg
sbb
adc
jmp
xchg
push
rolb
rorb
push
adc
pop
xor
xor
xlat
popf
xor
add
cld
pop
jp
repnz
lea
lret
push
add
pop
loope
dec
mov
ds
stos
mov
test
outsl
mov
int
and
lcall
sti
enter
xchg
sarl
sbb
dec
call
xor
in
sbb
mov
test
fildll
in
sahf
aas
cmpsb
xor
or
iret
sahf
fsubp
iret
mov
aas
outsl
repnz
jb
test
cmp
mov
dec
test
ficoms
xchg
int
rolb
push
xor
jb
xor
pusha
aam
lcall
pop
sub
mov
dec
or
jne
insb
jle
inc
jno
xchg
pop
jnp
pop
scas
test
mov
pop
scas
in
rorb
ds
sbb
test
inc
jne
fisttpl
shlb
mov
stc
xor
mov
cmpsb
or
or
rolb
or
sub
ja
add
add
sub
pop
or
and
pop
pusha
out
aas
or
lea
cli
xchg
mov
jle
dec
lea
test
add
rolb
sub
add
cli
lock
dec
xchg
jmp
aaa
sbbl
int3
mov
or
inc
xchg
je
fstpl
mov
cmp
mov
mov
jmp
movsl
add
cmp
test
lods
imul
ficoms
aas
aad
xor
stc
xor
movl
out
add
pop
and
pop
mov
icebp
mov
rclb
out
call
insb
push
aad
pop
aam
sub
or
popf
fwait
mov
arpl
sub
cld
sub
inc
sub
ret
mov
mulb
mov
mov
lret
scas
cmp
dec
xchg
xchg
push
loop
pusha
jbe
outsl
mov
iret
lds
fisttps
ret
fldenv
sbb
arpl
jle
in
lcall
cld
pop
push
das
inc
insb
sbb
mov
jmp
inc
xor
rcl
stos
mov
fildll
fldenv
mov
hlt
mov
xchg
test
xchg
lea
lcall
push
and
leave
test
and
rcrb
mov
sub
mov
sub
pushl
xchg
adc
cmc
out
push
xchg
shrb
imul
lods
mov
mov
cmpsb
out
incb
cli
test
sti
aaa
insb
sti
icebp
les
or
jge
nop
in
jnp
add
dec
or
or
aas
xor
mov
mov
imul
cmc
mov
mov
mov
lods
dec
rorl
adc
stos
rorb
inc
ud0
sbb
xorl
adc
adc
cmp
mov
jno
and
gs
lods
or
icebp
jmp
push
rcrb
pop
or
and
iret
mov
mov
push
pop
std
push
lcall
fisubl
cmpsl
int
insb
xor
mulb
cmp
stos
stos
xchg
or
mov
xchg
sbb
rorl
fldl
push
sbb
add
lods
push
pop
cmp
pop
cltd
das
xor
cmp
movaps
push
push
cmc
movsb
and
lret
pushf
cmpl
cmp
iret
mov
or
cmpsl
nop
fsubrp
dec
and
popf
inc
xor
cs
loop
out
dec
sbb
xor
outsb
into
adcb
push
subb
cltd
sbb
sbb
mov
adc
imul
xor
inc
xor
inc
into
xchg
jecxz
mov
imul
mov
es
sti
je
mov
mov
and
pop
nop
adc
mov
mov
pusha
pop
ja
dec
adc
xor
jb
sub
arpl
cmp
xchg
hlt
insb
ja
sti
cs
sarl
cmpb
mov
pop
xor
test
pop
jecxz
xchg
mov
mov
cli
mov
add
jnp
jmp
in
insl
adc
or
mov
mov
mov
push
cltd
mov
fildll
roll
std
or
popa
cmp
int
mov
add
cs
xchg
push
jns
lcall
ret
jo
add
add
loopne
push
mov
std
ficomps
ja
push
cmovb
ret
cmp
add
or
addr16
or
hlt
mov
andb
push
popf
jmp
in
xchg
outsb
sahf
lret
or
mov
or
js
lret
adc
popa
or
pop
pop
jle
or
jmp
lcall
mov
mov
xchg
and
out
xor
mov
mov
divl
ljmp
popa
or
pop
out
xchg
cmp
loopne
mov
mov
in
jg
in
cltd
leave
inc
inc
xor
rorb
xchg
into
sbb
ret
inc
push
push
int3
movsb
negb
pop
mov
test
std
sbb
clc
or
and
imulb
popf
mov
xchg
push
addr16
lods
cmpsl
and
adc
and
xor
dec
mov
roll
out
fimull
sti
xchg
adc
andb
pop
nop
pop
imul
xor
es
mov
icebp
cmp
std
jns
push
jp,pn
mov
mov
stos
int3
repz
push
jns
iret
scas
daa
bound
xchg
lahf
in
jns
push
int
ss
popf
jb
mov
test
inc
jle
inc
nop
fbstp
sub
jg
aam
pop
in
mull
sub
shrb
cmp
cmp
add
insl
inc
sarl
ret
popa
xchg
fwait
lods
imul
stos
repnz
repz
xchg
pushf
add
testl
test
data16
inc
sbb
push
in
outsb
dec
inc
repz
into
mov
ret
ret
out
cmp
adc
call
mov
clc
push
sbb
roll
lds
loopne
out
repnz
jne
sub
xchg
lods
sbb
add
rorl
dec
push
scas
fs
and
xchg
or
jnp
ja
push
push
fdivl
fs
jbe
xchg
xor
imul
out
push
je
add
aaa
and
fiaddl
hlt
sbb
push
mov
out
sahf
loope
mov
mov
scas
mov
stos
xor
mov
fsubr
push
std
aam
add
call
push
std
cmp
xchg
je
ljmp
mov
bnd
fiaddl
dec
and
call
xchg
inc
lcall
mov
adc
dec
or
mov
xchg
imul
mov
sbb
mov
mov
cmp
pop
push
pop
mov
dec
xchg
mov
pop
jns
ucomiss
mov
movsl
outsl
or
mov
in
bound
add
cmp
add
mov
mov
sahf
adc
mov
in
negl
xchg
sbb
or
mov
enter
hlt
cld
lea
sub
data16
jb
adc
jp
push
mov
xor
xor
mov
sub
icebp
ja
pop
cltd
mull
cmpsl
dec
gs
cmc
frstor
sub
in
jns
ss
inc
xlat
dec
into
sbb
inc
movsl
test
and
mov
jg
jg
addr16
cmc
shll
mov
add
call
fstl
int
outsl
int
jg
and
in
movsb
push
mov
adc
jb
pop
mov
outsb
cmp
dec
xor
mov
inc
lock
sbb
lret
inc
sbbl
pop
inc
roll
push
fdivrp
mov
or
or
pushl
dec
pop
mov
inc
imul
in
cld
aaa
push
lret
insl
fwait
rolb
mov
xchg
pop
arpl
repz
xchg
push
push
mov
rcrl
mov
jns
dec
lods
ss
stos
cld
or
adc
sbb
adc
scas
imul
add
adc
push
aam
and
mov
sub
jbe
adc
push
je
push
cld
lock
lds
arpl
jg
je
cmc
stos
adc
je
inc
in
jbe
jg
leave
inc
jle
inc
cmpl
nop
push
push
dec
loopne
shl
loopne
push
call
dec
ret
notb
rolb
jge
cmc
bound
mov
xor
pop
stos
mov
pusha
pop
cld
jl
add
inc
cltd
shlb
arpl
add
mov
push
sar
or
dec
popa
aaa
outsb
jp
mov
mov
ljmp
lahf
aas
fisttps
pusha
in
mov
xor
jbe
mov
adc
ss
lds
lcall
xor
fwait
push
lods
push
ds
adc
fwait
jb
iret
cmp
adcl
in
mov
jno
faddl
adc
jns
sbb
and
mov
stos
jbe
and
xorb
adc
xchg
mov
test
sahf
cli
adc
push
lcall
aaa
xchg
popw
pop
or
jg
mov
outsl
jo
mov
pop
or
mov
pop
popf
adc
das
addl
xchg
mov
or
rcl
sub
inc
in
or
sarb
push
jp
pop
decb
xor
mov
aaa
hlt
and
test
xor
cli
dec
xchg
dec
add
stos
adc
fwait
mov
leave
sub
stos
gs
jb
stos
cmp
push
ret
jno
ljmp
mov
inc
dec
push
insb
mov
and
cwtl
aaa
popf
lret
xchg
sub
and
pop
or
jp
dec
aas
ljmp
xchg
in
or
adc
xchg
push
dec
nop
iret
jecxz
fsubrs
out
sbb
out
stc
xor
adc
push
jae
fsubp
enter
jl
jne
and
cmp
mov
push
aaa
daa
inc
scas
in
mov
aam
imul
xor
imul
icebp
movsl
jnp
loopne
mov
stos
repnz
mov
sub
rorb
add
outsb
out
sub
adc
imul
or
mov
sbb
mov
andb
gs
mov
xorl
jecxz
xchg
lahf
pop
jmp
pop
add
clc
aas
icebp
movsb
pushf
fiaddl
pop
in
add
push
or
loope
add
add
pop
inc
fnstsw
push
xor
add
clc
arpl
fucomip
imul
in
mov
xor
push
mov
mov
xchg
jo
in
imul
sti
arpl
jge
addr16
mov
add
mov
mov
and
fstl
add
ljmp
out
xchg
mov
shrb
xchg
popa
and
xor
jg
jmp
icebp
hlt
sub
enter
push
adc
inc
xchg
pusha
mov
jns
in
mov
into
bound
dec
pop
push
sbb
and
loopne
mov
ja
add
stos
test
mov
xchg
jo
cltd
sub
sahf
mov
loope
addr16
fcomi
cs
shrl
mov
or
inc
pop
psrlw
decl
loope
fiadds
inc
mov
in
pop
fs
sub
rclb
in
jne
mov
mov
int
frstor
out
call
mov
outsl
loopne
xchg
ret
adc
jmp
inc
jmp
and
insl
mov
inc
fdivs
and
pop
sbb
push
xchg
ss
or
cmp
pop
sbb
outsl
dec
in
rorb
xchg
bound
dec
mov
or
lcall
jp
inc
jb
xchg
mov
loop
push
pusha
mov
push
sarb
sub
ja
in
add
mov
and
idivb
addr16
xor
andb
movsb
adc
loopne
enter
sub
sbb
add
push
adc
movsb
add
insb
in
inc
push
sbb
xchg
fucomp
sbbl
mov
dec
xor
adc
add
movb
fs
xchg
int
jp
cmp
loop
lock
add
icebp
xor
inc
imul
jnp
xchg
pop
test
mov
ss
out
aam
dec
js
jnp
add
stc
insl
gs
cmovbe
pop
out
das
or
cmpsb
xorl
add
cltd
or
sbb
fisttps
mov
enter
xor
fisttpll
mov
insl
xorb
jle
mov
adc
pop
jnp
and
jle
jge
add
fs
add
or
pop
lret
aas
sbb
test
int
in
pop
pop
add
pusha
mov
hlt
mov
push
xor
xchg
pop
lods
or
cmpsl
lcallw
cmp
pop
xchg
mov
gs
test
mov
pop
daa
ss
or
mov
popa
jo
mov
mov
rcl
nop
xlat
in
negl
jl
pop
mov
cmp
mov
cmpsb
mov
cmp
xlat
lret
fdivs
lret
xchg
inc
cmpsl
inc
sbb
pop
fs
hlt
ret
imul
lods
mov
mov
loopne
cmp
pusha
xor
add
imul
imul
fldln2
xor
fiaddl
or
push
idivb
cmpsl
mov
leave
sub
cmp
push
xchg
rcll
xor
nop
cmp
or
lret
lds
mov
and
dec
adc
cmp
push
or
pushf
add
je
bound
or
inc
adc
mov
outsl
scas
cmp
or
add
int3
shl
repnz
insb
mov
outsl
mov
mov
loop
cmpsb
in
cld
mov
pop
enter
cmpsb
fwait
repz
jb
repz
iret
ret
push
bnd
jl
lret
ret
out
mov
lcall
repnz
sub
push
dec
in
mov
lock
mov
xchg
and
inc
push
sbbl
out
flds
imul
fwait
lock
data16
mov
dec
xor
rorb
mov
aad
int3
out
jmp
ljmp
push
ret
push
in
sbb
mov
das
movsb
rcr
bnd
aaa
dec
lds
in
xchg
jmp
sub
dec
adc
popa
pop
pop
cwtl
fldenv
jno
lock
cs
cmpb
or
outsb
mov
sbb
cld
subl
ds
mov
addr16
dec
jns
sub
daa
pop
ja
or
flds
mov
mov
pop
sub
call
mov
out
rorb
popa
and
es
and
test
dec
popf
and
ljmp
sub
adc
test
sub
cmp
pop
xchg
cli
scas
xchg
xor
outsl
jmp
sub
stos
cmpsb
rclb
or
arpl
imul
arpl
dec
mov
and
mov
lock
bound
addl
inc
mov
xor
mov
xchg
mov
mov
push
push
xchg
push
mov
sub
data16
jo
lahf
adc
xchg
and
sti
inc
adc
xor
lret
cmpsl
pushf
xor
test
fistl
aam
test
jle
xrelease
in
pushf
jmp
in
lock
xlat
mov
js
pop
push
push
insb
fisttpll
sbb
stc
sarl
pusha
inc
movsb
mov
xchg
add
mov
mov
popf
fwait
ret
dec
dec
out
aaa
int3
dec
add
jne
bound
xchg
jo
pop
movsb
xor
ss
pusha
insb
stos
mov
mov
or
add
lods
es
inc
gs
cmp
or
in
xor
in
pop
xchg
xor
add
jmp
stos
pop
jo
mov
mov
int
sub
test
xchg
pushl
mov
fidivs
xchg
shl
add
xor
fistpll
add
lret
adc
pop
ret
outsl
jl
test
fmull
sub
pop
xlat
test
rcr
das
ljmp
stc
cli
arpl
sub
scas
jne
jmp
dec
lea
sbb
lret
sub
xchg
sti
jbe
mov
repnz
sub
jl
into
sti
movsl
iret
sti
xor
stos
or
adc
loop
xor
push
push
xor
mov
pop
add
fimuls
or
sahf
add
and
lds
pop
jne
xchg
js
mov
inc
sub
pop
lea
mov
sti
adc
les
push
xchg
inc
mov
in
scas
lcall
aaa
int
jl
or
call
dec
mov
or
fwait
adc
loop
or
out
imul
push
fldcw
mov
add
ret
sub
add
push
lret
xor
pop
mov
es
pop
mov
andb
testl
decl
repnz
dec
cmpsb
xchg
loope
dec
loopne
sahf
leave
mov
pop
ret
pop
ret
and
dec
paddsb
lret
push
into
sub
dec
sbbb
lahf
rcl
mov
lahf
nopl
cmpsb
sub
cli
and
jmp
inc
mov
adc
outsb
sub
and
out
and
in
outsl
cwtl
cltd
xchg
xor
outsl
or
fmuls
mov
adc
or
bound
sub
data16
cmp
push
aad
out
xchg
shll
or
fwait
das
sbb
shlb
test
pusha
cwtl
cmp
aas
inc
clc
in
out
shl
pop
mov
aas
mov
add
mov
mov
loop
cltd
test
arpl
ret
mov
repnz
sar
and
daa
outsl
jle
push
sbb
add
pop
les
add
jmp
or
scas
test
mov
mov
in
fs
mov
sbb
and
sub
cmp
gs
mov
sub
mov
lcall
dec
mov
xchg
mov
movsl
xchg
jae
dec
sub
jg
int
inc
lret
stos
out
lret
sbb
cld
mov
dec
jnp
mov
ror
and
sbbb
xchg
pop
sub
lea
lock
inc
in
and
add
mov
xor
outsl
addl
push
sbb
pop
mov
pop
sbb
clc
inc
fwait
jge
adc
nop
es
addr16
js
adc
cmpsl
push
out
orl
cmp
adc
mov
or
mov
mov
jge
xor
loop
mov
sar
dec
in
or
loop
adc
sarl
mov
inc
mov
cmc
push
rcl
clc
add
xor
lcall
and
xor
orl
xchg
pop
pop
ret
loop
outsl
into
adc
les
into
arpl
fbld
cltd
call
out
scas
sbb
jb
fisubl
mov
movsb
xorb
call
int
mov
mov
out
xchg
shlb
mov
popf
cltd
hlt
ret
pop
ja
jbe
insb
pop
imul
pop
xor
and
push
pop
mov
fxch
sbb
or
dec
jl
mov
ljmp
xor
xlat
jns,pn
cmpsb
cmp
jl
mov
out
or
outsb
or
addr16
sbb
or
iret
ds
fbld
andb
in
or
mov
insb
sub
lds
push
cld
clts
sbb
pop
inc
stc
cmp
pop
and
movsb
mov
enter
jb
icebp
push
jno
adc
jbe
xchg
mov
jbe
add
cmp
xor
lods
jo
dec
packuswb
jno
push
xor
stos
dec
pop
jecxz
test
and
cmp
in
bnd
test
dec
cwtl
cmp
or
clc
cmp
imul
or
das
aas
mov
out
mov
sbb
or
xchg
in
test
xchg
add
pop
ljmp
shl
movsl
ljmp
stc
repnz
pop
push
xchg
lock
inc
bnd
outsl
mov
jecxz,pn
fimuls
ljmp
mov
jmp
jle
dec
out
psubd
int
inc
movsl
push
ret
mov
sbb
out
std
stos
cltd
mov
and
adc
cmc
lods
pop
mul
jle
sarb
push
push
shr
xor
fiaddl
and
cmpsl
lcall
sbb
cmp
inc
rcrb
mov
push
in
into
insb
pop
cmp
sbb
test
mov
in
push
adc
xchg
mov
ret
mov
pop
fldcw
cmp
pushf
add
fwait
jnp
push
cmp
mov
add
xchg
pop
mov
fildll
out
lahf
jbe
js
aas
push
mov
out
xchg
sub
mov
inc
outsb
add
loop
shrb
sbb
aaa
mov
mov
enter
int3
add
pop
mov
loop
mov
aam
xor
das
cwtl
jmp
mov
xchg
pop
cmp
adc
aam
inc
push
or
add
mov
jae
shrb
xlat
jmp
mov
js
xchg
inc
aad
push
push
mov
push
gs
rorl
dec
pop
sbb
lret
xchg
cmc
hlt
fcompl
xchg
lret
jge
hlt
and
das
push
or
scas
sbb
clc
bnd
call
stos
repnz
jns
loopne
add
fidivs
loop
mov
lods
mov
push
shl
test
push
js
nop
mov
or
push
roll
adc
xor
sbb
aaa
push
xchg
insl
mov
or
insb
mov
pop
push
or
dec
scas
jle
push
mov
mov
jbe
lret
test
jmp
and
aas
sbb
cld
add
popa
loopne
mov
xor
sbb
sbb
xchg
fwait
adc
orb
cmp
adc
fisttpll
mov
xlat
add
jmp
or
mov
sbb
test
in
xlat
jb
xor
inc
inc
dec
dec
sbb
dec
iret
push
add
and
cmp
xor
jl
cmpsb
stc
cmpsl
jge
sbb
add
xchg
add
mov
test
or
push
sahf
scas
ficomps
adc
push
setb
inc
mov
ds
push
adc
add
pusha
pop
mov
mov
fdiv
jbe
mov
mov
adc
test
fsubrs
or
repz
stc
mov
stc
loop
adc
jb
fwait
add
enter
stos
xchg
in
jecxz
cltd
or
jb
out
cltd
lcall
fidivrl
mov
fmull
sbb
mov
xchg
and
or
jb
inc
mov
pop
int3
fcmove
xchg
mov
sbb
addr16
sbb
in
addr16
pop
add
or
mov
sti
jle
adc
pop
mov
or
pop
shll
jae
jb
or
push
fisttpll
imul
je
mov
push
jo
dec
cmp
lods
shll
loop
icebp
fwait
mov
cltd
scas
xor
mov
sub
jns
addb
cmc
popf
xchg
insb
lret
insb
cmc
lret
inc
or
ret
xlat
aaa
movsl
fdivs
rcll
das
dec
int
mov
and
ret
pop
mov
pusha
xchg
icebp
pop
pop
incb
mov
into
or
push
pop
sbbb
jne
popa
lds
das
jns
lods
aad
cmp
mov
xchg
andb
leave
ret
xchg
mov
ficoml
mov
add
sub
mov
push
jo
push
insl
or
test
and
pop
test
jl
add
div
mov
leave
inc
push
push
push
mov
pop
movsl
mov
call
aas
aaa
leave
lahf
inc
fsub
add
inc
mov
sbb
add
lret
sub
mov
inc
sti
dec
xchg
repnz
sbb
push
inc
mov
jne
popf
mov
data16
xchg
mov
adc
xchg
sti
leave
mov
jecxz,pn
in
dec
inc
sub
sbb
orl
mov
movsl
cmc
push
popf
dec
mov
fldl
push
stc
inc
push
jno
stos
push
add
inc
test
dec
cmp
cli
popa
iret
sub
cmp
ficomps
test
push
sub
popf
add
insb
mov
pop
xor
lret
sub
xchg
jne
cmp
call
testb
xor
stc
jne
mov
sti
lds
cwtl
jmp
ljmp
mov
or
jbe
test
in
jbe
fcom
push
ficomps
push
xchg
shlb
pop
shlb
mov
sub
inc
jno
mov
add
outsb
stos
scas
pop
xor
cmpsb
sbb
pusha
call
ja
fisttps
repnz
adc
pop
stos
pop
dec
scas
enter
sbb
enter
roll
pop
jmp
and
xlat
lea
add
repnz
fiaddl
lret
push
mov
sti
shll
xchg
lret
icebp
aad
aas
repz
loopne
fisttps
je
ret
adc
dec
or
inc
sub
bnd
cltd
push
popa
dec
jbe
js
and
fnstcw
jb
add
sahf
stos
pop
bound
fidivs
mov
fnstsw
pop
xchg
mov
add
pop
jl
or
or
movsb
mov
mov
in
dec
imul
nop
add
dec
push
repnz
xchg
imul
xorb
inc
dec
jb
leave
out
data16
lahf
adc
xlat
or
cmp
sub
jl
inc
sbb
mov
xchg
stos
enter
sbb
imul
xchg
jge
scas
jbe
push
insl
xor
push
pop
test
fs
inc
inc
data16
fldcw
fmuls
bound
je
pop
and
xchg
test
dec
mov
xor
nop
fildl
gs
scas
push
xor
jnp
sub
lods
je
sbb
ret
add
jl
pop
and
cmp
sahf
sahf
cmp
aaa
mov
iret
loopne
sbb
inc
mov
insb
adc
movsb
cltd
pushf
rclb
enter
jnp
and
xchg
mov
xor
loop
cli
xor
outsl
dec
push
or
mov
mov
or
add
movsl
adc
sub
out
jp
pop
mov
and
cltd
aaa
leave
lods
lcall
push
mov
adc
pop
outsl
adc
dec
mov
jge
out
pop
dec
insb
cwtl
xchg
or
xchg
hlt
jbe
jne
mov
pop
ds
push
sub
sub
add
in
addr16
push
jnp
xchg
sub
out
mov
mov
shlb
jp
cmp
cmp
out
mov
lret
pop
sbb
or
xor
cmpsb
les
xchg
out
sub
adc
inc
int3
dec
push
push
jmp
jnp
mov
aaa
inc
xchg
mov
push
mov
lcall
ds
inc
mov
lret
daa
sti
repnz
push
push
sti
and
dec
cmc
jl,pt
mov
fwait
adc
add
cmp
or
pop
fstpt
mov
sbb
dec
gs
xchg
call
push
adc
lcall
pop
pop
cmp
push
mov
xchg
fucom
adc
or
shlb
adc
or
push
mov
pop
lret
into
mov
pop
jmp
dec
stos
push
addr16
push
call
mov
mov
sahf
xor
sbb
jne
in
or
mov
iret
sub
stos
dec
movsb
or
loop
fs
shlb
movsb
movsb
ss
push
jle
test
mov
aas
lods
mov
mov
call
ds
pop
negb
pop
and
incl
xchg
mov
push
ret
xchg
jne
inc
pop
or
and
cmpsb
das
mov
sbbl
int3
xchg
mov
adc
cmc
jle
push
mov
sarl
push
aad
xchg
repz
xchg
hlt
in
adc
icebp
sarb
fidivl
lods
jae
sbb
sub
in
cmove
xchg
daa
testb
fisubl
add
ret
mov
out
sti
push
push
icebp
and
addl
and
pushf
lods
sbb
pop
push
pop
movsl
push
popf
jb
mov
shrb
into
dec
xchg
fs
mov
jge
jae
mov
movsl
dec
in
jb
cmp
adc
mov
mov
inc
jl
inc
mov
shr
pop
or
gs
and
xor
aam
mov
pop
cmp
testb
xor
or
mov
sbb
xor
sahf
mov
fidivrl
out
fsts
test
iret
loopne
push
incl
mov
js
gs
pop
ss
add
into
fwait
cmpsb
pop
add
mov
ja
out
ficompl
mov
in
lret
adcl
cmp
jle
int
jle
dec
jo
adc
out
add
or
xor
xchg
call
mov
cltd
fcoml
pop
push
pop
sub
mov
or
aaa
dec
nop
mov
ja
cmpsl
push
mov
cli
mull
out
adc
pop
xchg
fs
mov
pop
adc
inc
jecxz
add
enter
in
pop
lods
xchg
sbb
fcomps
sarb
dec
jmp
push
sbb
leave
push
loope
int3
lods
xlat
cmp
dec
and
cmp
or
pushf
jbe
or
jecxz
inc
jno
fsincos
lret
insl
dec
and
ror
mov
aas
cmp
out
jo
xlat
outsb
ljmp
xchg
xchg
out
sub
push
mov
xchg
mov
lret
dec
fsts
sbb
fcoms
lret
cmc
les
inc
out
xor
inc
pop
fildll
jae
out
cmpsb
scas
or
js
and
pop
xchg
imul
popa
mov
aad
jo
mov
and
xor
cmp
inc
pusha
add
ljmp
inc
add
push
add
cli
mov
data16
jp
jo
loop
cmpsl
js
clc
sbb
pop
mov
ljmp
add
push
ret
adc
outsb
call
xor
inc
push
imul
pop
jmp
pop
movsb
fnstenv
fcmove
pop
addr16
mov
dec
inc
pop
ss
cmp
or
inc
add
mov
fs
dec
out
pop
sub
mov
js
rcrb
iret
bnd
adc
mov
push
jbe
outsb
scas
jmp
push
dec
ret
add
mov
xlat
or
or
stos
rcrb
jae,pn
and
mov
jb
cmpsb
popa
push
repnz
cmp
inc
pusha
scas
das
and
sbb
adc
cmp
jbe
das
and
repnz
into
jo
out
xor
dec
dec
mov
xlat
add
and
hlt
add
lds
outsl
and
and
push
stos
mov
aad
or
lcall
xchg
aad
repz
mov
cld
sub
and
push
mov
repnz
cli
pop
and
test
jge
scas
push
sahf
mov
scas
gs
sub
jg
shll
es
mov
xor
fwait
in
sarl
repnz
xchg
push
add
cli
fsts
sub
adc
imul
int
jno
cltd
testb
sbb
mov
mov
inc
sahf
pop
jp
add
jno
in
xchg
push
jns
ds
imul
icebp
mov
int
vorps
loopne
sahf
xor
inc
mov
hlt
mov
aas
das
ficompl
xor
sub
fnstsw
cmp
cs
pop
filds
imul
lock
or
leave
call
jnp
mov
xchg
test
jmp
stos
movsb
lahf
mov
or
insl
sarb
jp
mov
pop
cltd
jb
mov
mov
pop
aam
mov
aam
jecxz
cmp
dec
or
test
mov
inc
in
cmp
pop
pop
fcoml
inc
mov
sbb
mov
jne
lock
xor
pop
adc
add
out
fucom
and
push
fistps
adc
mov
mov
popf
mov
arpl
std
jae
arpl
les
sbb
inc
mov
je
add
mov
adc
jg
cmp
gs
mov
adc
loope
add
out
fcompl
mov
ds
pop
jecxz
lock
jno
js
mov
insb
testb
add
adc
stos
add
scas
dec
pop
adc
dec
ja
and
cmp
dec
icebp
push
testb
sub
call
jae
adc
inc
outsb
mov
lods
inc
addr16
jne
add
add
lea
cld
pushf
jbe
xor
out
sbb
sahf
lret
mov
xchg
loope
fwait
pop
ret
aad
cmp
dec
hlt
push
out
aam
mov
mov
pop
je
pop
push
xor
iret
cli
bound
aad
aad
stc
xchg
inc
dec
mov
dec
pusha
pop
jge
sub
xor
mov
add
push
pop
inc
push
jns
mov
pop
or
ljmp
jne
in
lock
ds
adc
xor
xchg
iret
dec
push
ss
jbe
inc
sub
mov
aam
jo
xor
outsl
cmpsb
and
daa
ss
mov
pop
mov
stos
ds
aas
iret
ds
xor
dec
outsb
jl
and
stos
push
fstp
cmpsb
cmp
xchg
shrl
fwait
es
iret
mov
jae
mov
cld
test
movsb
call
bound
imul
orl
out
in
sti
or
jne
test
pop
mov
xor
rcll
lods
and
inc
imul
iret
loop
data16
mov
pop
mov
push
xlat
jecxz
sbb
sbb
ljmp
mov
mov
xchg
sub
mov
call
sbb
pop
cmpsl
mov
xor
cmp
pop
bound
adc
in
inc
test
leave
mov
or
daa
lea
or
xor
test
cltd
pop
rorb
iret
aam
mov
xchg
ljmp
or
icebp
icebp
ljmp
out
js
aaa
xchg
and
sbb
js
shrb
movsl
test
sbb
xor
imul
inc
jp
cmpsl
adc
or
push
fsubrs
pop
daa
and
xchg
xchg
pop
daa
xor
imul
or
scas
dec
cmpsl
enter
pop
mov
adc
mov
hlt
sub
xchg
mov
jp
popa
sbb
rolb
xchg
dec
aad
in
enter
inc
in
adc
inc
negb
mov
fcos
xor
cmp
sbb
xchg
mov
in
in
jnp
or
xchg
scas
fld
dec
or
aaa
jnp
int
inc
and
lock
xlat
shrl
fimuls
push
sub
repz
or
jbe
sub
pop
movsl
aaa
lret
pop
shll
jae
lcall
sub
pop
cmp
cltd
pop
les
or
mov
sub
pop
gs
idivb
mov
adc
outsl
ljmp
inc
jns
xchg
fsubrs
fs
add
call
lock
push
ss
jge
test
dec
loop
std
fdivrl
sti
out
mov
sbb
or
jb
jne
push
jno
jns
sub
lock
cld
jb
dec
sarb
inc
test
and
jne
movsl
rcr
stos
mov
stc
adc
in
shr
dec
pop
aam
das
repnz
pop
out
out
stos
dec
inc
sbb
jnp
aaa
in
jmp
fldt
jae
mov
jle
mov
gs
jo
xor
sbb
pop
aaa
lret
add
xchg
xor
daa
stos
insl
std
add
xchg
ss
jo
push
fnstcw
push
jl
rorl
sub
add
dec
subl
add
cs
cli
fwait
js
xchg
mov
cmp
or
loopne
jmp
in
cmp
mov
addr16
addb
dec
movsl
xchg
mov
mov
mov
mov
adc
in
imul
lahf
adc
insl
sbb
daa
mov
adc
mov
cmpsb
ja
mov
jb
frstor
ret
dec
sub
out
in
mov
push
hlt
xchg
gs
pop
enter
or
fcomps
inc
inc
push
inc
aas
or
push
mov
in
pop
sub
test
out
pop
aam
aam
repz
sbbb
dec
cmc
shll
fstp
cmp
cmc
in
imul
and
or
mov
fisubs
test
call
insl
push
push
adc
and
jg
sub
inc
adc
xor
dec
orb
sbb
xor
les
add
iret
jge
andb
rclb
in
ret
sbb
mov
xchg
fidivs
add
mov
aad
push
mov
ret
xchg
mov
sbb
cmpsl
adc
add
cmpsb
push
stos
gs
xchg
sub
mov
jecxz
imul
cbtw
push
ret
lret
scas
repnz
pushf
fs
fldt
mov
es
mov
push
dec
mov
push
cltd
fdivr
fwait
adc
mov
hlt
push
repz
in
push
mov
std
les
and
push
fwait
sub
rcr
iret
lods
or
nop
int
and
out
xchg
mov
adc
stos
call
add
repnz
ret
rorb
aam
mov
add
mov
orb
daa
lods
andb
lock
fimull
mov
fiaddl
lods
adc
sub
popa
inc
test
and
stos
insb
inc
test
pop
cmp
lock
fprem1
insl
andb
cltd
imul
les
ds
mov
aaa
and
bound
cmp
or
mov
mov
test
push
rol
lret
and
addr16
loopne
fnstcw
push
xor
xor
or
xchg
ret
xchg
dec
add
hlt
subb
and
das
jns
add
push
aaa
adc
mov
aad
pop
fdivs
sbb
push
test
and
sub
push
sbb
fldt
mov
cli
inc
mov
mov
loop
mov
pop
fsubr
aaa
adc
jle
xchg
lods
negb
inc
ds
cltd
aas
mov
sti
xlat
in
dec
mov
lret
adc
sbbl
mov
jg
pop
mov
shld
push
cmpsl
xchg
out
push
stc
inc
lret
fdivs
mov
jg
push
sub
loop
sub
sbb
pop
nop
arpl
lods
sub
add
stos
inc
xor
jg
mov
mov
int
scas
cmpsb
push
outsb
cmp
xchg
xor
mov
pop
cmp
mov
xchg
cmp
imul
cmp
test
stos
xor
dec
test
inc
hlt
hlt
popl
cmpsl
mov
and
movsl
dec
push
xorl
xchg
push
aaa
mov
dec
cmp
clc
dec
xchg
fsubrl
or
lret
push
push
test
rcll
mov
js
sub
pusha
mov
arpl
cmp
push
push
arpl
call
mov
jmp
mov
data16
inc
scas
cmp
les
push
loop
xchg
mov
add
lahf
jbe
in
inc
xchg
aas
xchg
xor
call
pop
and
sbbl
testl
jb
mov
mov
aaa
loope
clc
shll
dec
dec
stc
pop
pop
xor
sub
push
inc
mov
aad
je
lret
cmpl
sbb
and
sub
adc
push
lods
aam
repz
inc
stos
loopne
add
pushf
into
in
mov
sub
fs
pop
inc
cmc
mov
cmpsb
cli
push
lcall
pop
arpl
iret
sub
mov
sbb
incl
cs
dec
jnp
lcall
ret
ret
mov
xorb
sub
cmp
dec
fidivrl
stos
fstps
inc
inc
or
sub
clc
push
push
stc
std
xchg
js
jle
push
cmp
pop
cmp
jbe
sub
mov
test
xchg
roll
jae
in
in
loopne
enter
insb
lret
or
xchg
cwtl
shll
loope
sbb
cmpsb
and
pop
ja
pop
mov
out
cmc
pop
dec
pop
and
jbe
fimull
mov
lods
jbe
adc
vpmadcsswd
mov
push
cmc
imul
jno
lcall
notl
jp
loope
ret
insl
mov
cmp
popa
and
dec
les
sbb
jge
dec
sbb
mov
int
movsl
dec
sbb
ss
cli
push
mov
fistl
int
arpl
into
jmp
pop
pop
push
andl
sbb
insb
add
pushf
into
ljmp
stos
int
adc
and
xor
add
movsb
fistpl
or
fsub
daa
mov
and
ret
arpl
sbb
or
pop
add
orl
lds
sbbb
pop
cwtl
ret
jp
daa
ja
loope
std
test
sti
jae
loop
add
test
hlt
mov
mov
push
lret
sbb
ror
xor
test
insl
mov
xor
test
lret
sbb
xchg
scas
xchg
dec
mov
or
test
lcall
sahf
mov
mov
popf
push
adc
fs
jo
icebp
daa
outsl
enter
fmul
and
dec
stos
int
orb
xor
adc
cmp
sbb
imul
test
out
fwait
rorb
in
jno
and
cmp
test
mov
imul
or
bound
addb
loop
hlt
xchg
and
sbb
mov
mov
dec
xchg
loope
jl
jg
mov
mov
pop
hlt
lret
scas
xchg
inc
xlat
ret
subb
xor
mov
jg
adc
cmp
sbb
cld
mov
enter
popl
xlat
inc
add
cltd
xor
cmp
popa
mov
mov
popf
or
decl
pop
xor
sbb
popa
sbb
test
inc
testl
cmp
lcall
dec
je
xchg
add
cmp
scas
and
les
push
xchg
push
daa
stc
inc
inc
fwait
xchg
fisubrl
pop
inc
sbb
insb
lahf
popf
int3
rcrl
shll
inc
cmp
lahf
les
repnz
inc
dec
mov
lea
adc
mov
jle
sbb
lds
sub
xchg
inc
ds
mov
adc
cmc
mov
std
or
ret
and
sbb
adc
scas
and
int
add
sbb
shl
aaa
fidivrl
xchg
xchg
cmp
jnp
leave
outsb
cwtl
shll
push
loopne
jbe
loope
adc
dec
sub
xchg
stos
imul
ss
push
xchg
xchg
jo
iret
gs
pop
popa
outsb
cs
out
adc
mov
fstpt
mov
outsl
inc
movsb
cmpsl
push
lock
pop
test
and
xchg
mov
cltd
pop
lret
cmp
mov
xchg
pop
mov
sub
test
shlb
aaa
sub
cld
mov
jb
pop
sub
iret
xor
mov
pop
inc
stos
xor
jno
hlt
xchg
out
mov
sbb
sub
jp
and
cltd
pop
call
mov
in
add
jecxz
adc
pop
es
outsl
loope
rcr
repz
cmc
jbe
push
mov
daa
jno
lock
jnp
add
in
or
inc
sub
pop
inc
scas
pop
lods
lock
adc
pop
scas
and
rcl
mov
or
and
jp
cmpsl
enter
sbb
mov
mov
loopne
and
cld
popf
ffree
je
dec
ja
push
sbb
inc
cmpsb
mov
popa
jl
xchg
insb
pop
js
mov
jle
xor
push
out
cmp
push
int3
out
sbb
cmp
sbb
adc
scas
test
and
int3
pop
stos
int3
and
fbstp
dec
negl
jnp
sub
jecxz
movsl
icebp
loop
push
hlt
testb
cmpb
fldenv
ret
mov
inc
cld
add
jne
cld
mov
jno
cwtl
dec
jmp
or
icebp
negl
mov
repnz
int3
out
push
mov
addr16
aad
adc
cmpsl
push
ljmp
cmp
push
shll
outsb
jl
clc
mov
adc
in
adc
inc
jle
insb
movsl
pop
cmp
and
add
js
adc
out
lret
push
shlb
into
adc
and
fidivs
push
ds
xchg
inc
es
dec
stc
mov
aad
or
jne
mov
movsl
popf
aad
bound
or
inc
mov
sbb
jo
pushf
sbb
mov
insl
and
out
mov
jno
aad
jno
imul
mov
jae
xlat
insl
mov
nop
lods
mov
xchg
xchg
adc
push
test
ljmp
imul
movsl
push
pop
in
ror
pop
xchg
jecxz
xchg
xchg
jb
mov
mov
push
adc
pop
test
push
inc
pop
adc
mov
mov
gs
sub
adc
mov
bnd
mov
stc
fistpll
insl
test
data16
loopne
pop
mov
repz
sub
mov
cmc
addl
shr
jle
call
mov
das
popa
sahf
call
push
sahf
mull
or
in
popf
lahf
fsubs
add
pop
xchg
ljmp
pop
sub
or
cmp
sub
push
lods
xchg
hlt
pop
inc
and
ds
mov
aam
adc
mov
test
inc
das
imul
sub
aad
dec
int
sub
mov
sub
es
xor
aad
cmp
pop
inc
xchg
mov
jge
cmpsl
dec
cmp
fxch
mov
xchg
test
fdivrl
bound
rol
addr16
aaa
xchg
mov
jg
or
dec
xor
out
lret
mov
pop
mov
aam
xchg
and
mov
cmp
jo
repz
add
mov
fs
movsl
adc
sbb
js
sbb
sub
test
pop
jmp
jmp
mov
loope
pop
aad
and
ret
pop
fs
xchg
je
test
jo
mov
icebp
jl
add
mov
daa
imul
stos
add
icebp
push
inc
jb
idivb
jge
push
or
push
inc
jbe
enter
sbb
imul
or
jb
mov
mov
iret
ja
push
xlat
jp
sbb
mov
repnz
cltd
inc
rcrl
sar
cmc
mov
shrb
mov
mov
mov
movsb
inc
incb
aaa
stos
dec
xor
mov
inc
inc
inc
jno
out
pop
pop
movsb
pop
sbb
iret
mov
aaa
lea
rcll
push
jmp
in
sahf
or
nop
ljmp
aaa
xor
jne
aad
out
and
repz
xchg
out
dec
or
mov
cmp
cli
outsb
ja
cmp
inc
dec
add
xchg
mov
ret
pop
adc
inc
mov
not
addr16
pop
int
lret
mov
lret
imul
aas
xor
fildl
or
jno
call
data16
out
imul
loop
les
cwtl
and
clc
cli
cmpsb
icebp
es
loopne
xchg
xor
push
dec
ret
xchg
sarb
sbb
popf
sbb
negb
jecxz
inc
mov
lret
dec
lret
cmpsb
pop
mov
xchg
rclb
mov
adc
hlt
aam
or
call
mov
lret
stos
clc
pop
xor
in
sbb
or
mov
adc
sbb
jmp
jno
lcall
mov
in
or
mov
ljmp
stc
imul
sub
shlb
push
lods
push
mov
enter
mov
mov
jle
push
fwait
out
in
jmp
call
ret
loope
cmpsl
xchg
rorl
jno
jne
pop
xor
pushf
sbb
in
dec
xor
jae
ret
jae
addb
inc
pop
mov
add
cli
mov
sub
leave
das
or
lock
std
cmp
jb
dec
popf
jmp
sub
mov
lahf
movsb
test
popa
sbb
push
or
push
lods
or
cmp
jnp
ljmp
xchg
repnz
in
push
jmp
je
and
pop
pop
mov
imul
push
ret
divb
or
push
mov
dec
xor
inc
sub
ss
test
sub
psubw
mov
test
and
pop
add
aas
fwait
insl
push
xor
lods
cltd
mov
cmp
cwtl
aam
insl
cmp
or
push
dec
push
stc
adc
inc
ja
pop
insl
call
enter
sbb
clc
and
sub
adc
das
enter
pop
mov
fdiv
sahf
icebp
cmc
xor
or
cmp
cwtl
push
inc
lahf
imul
xchg
shl
imul
jae
hlt
sub
lock
push
jo
jmp
loopne
sbb
imul
cmc
mov
jecxz
stos
sbb
enter
and
loope
mov
push
and
cli
add
ds
hlt
adc
das
shll
jnp
jne
cmp
rol
xchg
out
xchg
dec
arpl
nop
dec
gs
mov
mov
pop
xchg
cmpxchg
push
pop
add
adc
aam
leave
mov
push
loop
negl
dec
lret
push
xor
cs
icebp
shrb
es
inc
xor
scas
dec
out
les
jecxz
sbb
lock
adc
jbe
loop
in
xor
in
and
dec
fistps
in
mov
popa
idivb
mov
mov
movb
out
fdivs
cmp
cmp
inc
in
cltd
leave
mov
sub
sbb
sbb
jmp
mov
sahf
pcmpgtb
pop
cltd
js
xchg
jbe
data16
cli
sbb
out
leave
push
sub
inc
push
dec
xchg
int
dec
cmp
or
add
out
cmc
pop
add
inc
sbb
dec
jge
or
mov
enter
iret
jl
mov
mov
mov
and
mov
xor
call
in
mov
ljmp
xor
cmp
fsub
aam
test
add
xchg
add
add
scas
leave
xchg
in
cmp
mov
push
pop
xchg
mov
setnp
imul
dec
scas
fnstsw
xor
and
mov
mov
aam
fidivs
push
int
adc
dec
pop
jnp
std
repnz
pop
dec
aas
push
and
or
out
dec
data16
push
xchg
outsl
iret
inc
inc
xor
push
push
jae
mov
inc
out
or
sub
adc
push
sub
xor
aad
repz
pop
lahf
cli
xchg
xor
mov
xor
pop
jnp
pop
inc
cmp
jl
pushf
mov
repnz
scas
adc
push
stc
mov
nop
inc
mov
xor
xor
jmp
dec
xchg
repz
iret
int
enter
pop
inc
xchg
sbb
push
dec
or
xchg
ret
cli
mov
inc
scas
jmp
jae
push
add
inc
lret
jae
pop
mov
or
out
out
push
leave
or
bound
mov
jp
imul
and
mov
mov
sub
ficoms
mov
faddl
insb
dec
inc
xchg
into
add
mov
stos
mov
bnd
xchg
lcall
cmp
call
adc
dec
test
xchg
jl
int
xchg
dec
fwait
push
enter
fcoms
mov
sbb
xor
seta
scas
inc
xchg
push
cmp
mov
aas
repz
push
jnp
add
adc
mov
cmp
leave
or
or
les
aas
inc
hlt
xlat
not
ds
push
scas
add
mov
ljmp
push
mov
fcmovnu
push
add
sti
andl
decl
les
in
insl
imul
test
fs
pop
das
push
adc
mov
imul
cmpsl
lret
mov
data16
mov
shr
push
in
mov
inc
cmc
push
pop
popa
and
sahf
div
jns
xor
xchg
outsb
out
test
outsl
sub
popa
cmp
outsb
mov
push
push
test
jmp
cmp
mov
repz
dec
sbb
test
mov
fbstp
mov
fsubrl
inc
aad
test
pusha
push
cld
add
rol
push
sub
loopnew
fldl
in
mov
pop
lcall
ficoml
push
jb
jmp
cs
mov
ficoml
add
add
hlt
mov
fsubl
mov
jnp
in
incl
xchg
lret
ja
xchg
jge
mov
inc
rcrl
adcl
dec
std
cmc
push
shl
sbb
lods
adc
aas
add
popf
sbb
adc
xchg
dec
stc
sub
xor
and
cltd
and
pop
leave
mov
frstor
jae
sub
stos
jo
lcall
dec
aam
ret
lods
pop
adc
jbe
lods
and
dec
push
xchg
lret
clc
out
pop
mov
jge
ds
and
pop
inc
mov
iret
xchg
aas
jg
jmp
xchg
mov
in
hlt
adc
rcrb
dec
dec
xchg
shll
lcall
mov
dec
jno
xchg
add
and
les
rcll
add
popa
outsl
int
mov
pop
lret
mov
mov
imul
test
icebp
push
fucom
fildll
in
xor
inc
xchg
shl
xchg
adc
faddl
ss
sub
inc
pop
adc
aad
shlb
xor
or
mov
or
pop
dec
in
popf
dec
push
lock
jge
fs
sti
loope
imul
sub
or
and
pop
cmp
xor
inc
inc
mov
mov
stc
add
icebp
lea
mov
add
sbb
add
sub
sub
adc
or
pop
sub
addl
pop
mov
push
stc
mov
fstp
stos
fs
add
out
nop
inc
ss
sahf
icebp
cmc
ja
decl
test
mov
jle
and
add
aas
shrb
sbb
xchg
fs
push
adc
xchg
mov
sbb
jecxz
test
xlat
inc
add
or
cmp
jge
in
inc
test
jl
cli
nop
or
movb
cmpsb
stos
pop
in
jne
cwtl
fs
cltd
das
sbb
or
fimull
lcall
mov
mov
fs
xchg
call
popl
stos
cwtl
push
add
xor
add
cmpsl
jecxz
jnp
in
dec
inc
sbb
iret
xor
push
or
lcall
aam
push
sbb
fsub
es
arpl
cmp
dec
les
mov
fs
xchg
ljmp
pop
insl
popa
jl
sub
mov
dec
pop
adc
cli
test
div
mov
jecxz
fcmove
movhlps
mov
dec
in
gs
test
shll
scas
bound
les
sbb
rolb
or
scas
and
mov
pop
enter
aaa
ficompl
jns
push
arpl
dec
lds
ljmp
sbb
or
jge
enter
push
mov
loopne
mov
mov
fwait
sub
mov
push
pop
mov
lds
fnstenv
aad
neg
push
ss
out
lds
push
imul
in
push
mov
mov
dec
dec
push
int
lds
pop
mov
flds
shlb
fldt
adc
cmp
imul
dec
into
sarl
test
xchg
data16
adc
cwtl
xchg
cmp
and
jle
aas
outsb
lahf
test
test
pop
testb
cmp
sahf
adc
and
ret
bound
aam
jp
into
lock
add
sub
or
cmp
scas
rolb
jne
jecxz
inc
repz
push
jo
push
clc
add
dec
lods
add
imul
les
jmp
sub
xchg
aas
mov
shl
fcoms
add
or
or
jno
fdivl
add
sub
xchg
or
mov
xor
push
orl
je
adc
ret
dec
xlat
adc
fwait
bound
imul
xchg
inc
sti
mov
mov
xor
jp
xchg
xorl
push
xchg
test
xchg
cltd
repnz
push
sbb
dec
pop
aas
or
test
mov
pop
dec
pop
fisubl
push
test
adc
pop
cmp
xor
cmp
sti
std
ret
fldl
mov
jb
fisubrs
out
cmp
lahf
aam
sahf
jb
fpatan
cmc
in
outsl
sub
mov
fimuls
sub
or
pop
pop
dec
adc
mov
dec
call
iret
mov
sub
push
push
mov
lock
pop
out
bound
push
xchg
fwait
pop
adc
daa
enter
scas
cmpl
test
addr16
sub
lcall
enter
sub
and
lea
or
mov
jo
ds
push
icebp
pop
add
sbb
test
push
fadd
cmp
dec
add
inc
push
mov
decl
and
roll
add
imul
test
cmp
sbbl
test
adc
les
filds
inc
mov
ret
jle
sub
iret
ljmp
data16
add
jbe
cmp
mov
icebp
lret
pop
testl
inc
push
mov
mov
pop
cmc
push
imul
and
xchg
faddl
sbb
xor
faddl
pop
lds
lret
mov
mov
pusha
inc
jmp
incl
push
cmpsb
cmpb
or
mov
mov
outsl
repnz
adc
outsl
jge
outsl
push
pushf
jg
mov
pop
fadd
stos
sbb
scas
sbb
xor
sbb
dec
or
out
ljmp
shl
icebp
adc
nop
jo
arpl
mov
pop
pop
cs
adcl
xchg
in
std
mov
addb
fnstenv
incl
push
mov
inc
test
pop
cmpsl
inc
ja
mov
jp
mov
hlt
lret
xchg
aas
cmp
loop
sbb
fwait
leave
push
ja
das
pushf
pop
xadd
outsb
andl
loop
cld
ss
ds
stc
arpl
repnz
cmc
adc
and
lea
movb
push
mov
sub
mov
xchg
sti
push
xchg
xchg
pop
jns
and
ret
lret
or
test
xorl
pusha
push
mov
mov
pop
inc
mul
movsb
dec
sub
rorl
popf
mov
mov
mov
xchg
adc
daa
insl
and
stos
mov
xor
mov
imul
loopne
loope
sub
out
jbe
jb
cwtl
je
adc
fisttpl
shl
push
or
stc
and
aad
cmp
add
mov
int3
cld
icebp
push
sbb
lock
cmp
in
test
iret
sbb
hlt
sub
aad
mov
sbb
ror
mov
pop
adc
pushf
push
mov
or
xchg
inc
push
or
ret
test
mov
das
bound
lock
inc
push
jns
mov
lock
orl
icebp
insl
and
iret
fsts
mov
clc
loopne
push
mov
mov
inc
icebp
mov
mov
out
movsl
cli
lret
xchg
mov
in
sbb
lock
sarl
adc
xchg
inc
jg
sub
cmpsb
jmp
andl
mov
xorl
mov
jecxz
pusha
pop
add
out
jbe
inc
out
mov
sarl
dec
outsb
sub
mov
sbb
test
call
push
imul
in
lret
add
mov
repnz
add
ret
push
pushf
jae
mov
aaa
jb
cmc
dec
ret
cld
pop
rorb
or
ja
mov
pop
xchg
das
or
and
mov
and
cmp
fstps
daa
je
vdivss
imul
mov
js
in
shll
mov
and
sub
inc
push
stos
cmp
mov
sbb
js
push
or
mov
jae
sub
mov
adc
push
pop
bound
pop
inc
call
scas
sti
pusha
xor
addb
push
inc
dec
dec
out
cld
loop
fdiv
inc
mov
cmpsb
xor
out
and
jmp
stc
add
add
lods
sahf
sti
add
ss
fidivl
mov
xchg
mov
push
ja
inc
aad
inc
dec
inc
fimull
add
js
js
adc
jno
leave
pop
stos
adc
xchg
jmp
pop
adc
dec
fistpl
push
fnstsw
push
xchg
sub
pop
mov
adcb
add
movsb
mov
iret
into
push
cld
and
jmp
cmpsb
loopne
mov
rorl
iret
cmp
jecxz
dec
icebp
xchg
fs
jns
mov
enter
aam
ret
aam
dec
jb
push
fs
orb
out
mov
pop
aam
arpl
orb
jae
hlt
ja,pn
sub
scas
push
jb
cmp
mov
and
enter
js
xchg
mov
mov
xchg
mov
imul
push
cmpsl
icebp
push
paddsw
popf
gs
fisubrs
push
mov
out
repz
popa
xor
jmp
int3
call
add
adc
sub
jno
push
mov
sbb
mov
mov
push
leave
mov
mov
mov
pusha
xchg
shll
jno
xlat
xchg
pop
sahf
pop
enter
mov
stos
push
cmpsl
pushf
roll
std
stc
pop
cmp
inc
mov
mov
and
dec
xchg
imulb
pop
add
jns
jnp
sub
lcall
data16
ficoml
popf
fcompl
lds
add
jno
rolb
inc
add
test
lods
adc
mov
xor
fldenv
adc
jl
lock
test
in
jae
cmp
or
add
push
cltd
xchg
sub
inc
cmpsl
shl
push
loop
in
jne
sarl
lret
inc
push
aad
add
mov
cli
mov
sbb
push
decl
sub
repnz
or
add
fwait
je
or
mov
subl
mov
mov
jecxz
test
fldl
sub
mov
lret
push
cmc
out
and
dec
das
or
fcmove
popa
daa
data16
rclb
outsb
or
test
pop
addl
push
cmp
sahf
mov
xchg
cmc
sahf
lock
lret
js
out
inc
mov
sub
dec
or
push
mov
add
cmpsl
push
es
ja
jmp
jae
jmp
xchg
pop
xor
ret
jno
add
mov
lahf
sbb
lock
cs
xlat
test
xor
pop
hlt
sub
mov
cmpb
xor
sbb
inc
std
addr16
ss
sub
add
push
pop
addl
adcb
shll
daa
mov
pop
mov
pop
in
popa
or
lret
mov
or
mov
out
in
mov
mov
xor
test
jne
aas
jge
scas
sub
jecxz
sbb
inc
and
popf
in
fildl
cmpl
pop
push
mov
in
pop
out
push
pop
rcr
mov
mov
mov
lds
pop
inc
call
mov
dec
dec
icebp
lahf
push
jb
push
cmp
adc
leave
aad
or
xor
outsb
inc
mov
pop
mov
mov
mov
cmpsb
sti
in
mov
or
sub
sbb
jae
cli
popf
xchg
jb
aam
out
mov
or
iret
clc
inc
lock
cld
mov
add
stos
mov
sbb
xchg
je
imul
add
aas
imul
addr16
loopne
jg
push
loop
call
out
mov
or
std
add
jl
mov
neg
mov
push
push
and
roll
mov
push
mov
mov
cs
mov
aam
sahf
nop
ficoms
das
jb,pt
fistl
nop
out
aas
or
pop
adc
jo
cmp
fldt
imul
and
stos
dec
std
negb
mov
repz
leave
mov
in
bswap
inc
imul
mov
bswap
mov
push
sub
fwait
clc
test
push
repnz
dec
lahf
imul
jg
push
fstpt
adc
mov
out
ja
and
insl
push
mov
repz
fildl
call
pop
sbb
adc
ja
adc
push
push
ss
loopne
xor
sub
push
sti
jno
mov
rorl
stos
leave
cmc
xchg
mov
fwait
test
mov
enter
mov
pop
pop
cld
pop
shll
and
into
popf
cmp
test
gs
add
test
lds
jno
xor
cmp
adc
jle
aaa
jb
imull
test
xchg
popf
test
repnz
and
cmc
inc
int
mov
dec
mov
xchg
mov
inc
clc
push
fs
inc
inc
add
cmpsl
inc
nop
icebp
call
push
mov
mov
inc
lock
xor
jge
std
cmp
push
sbb
and
sub
jne
pop
ds
addr16
mov
gs
sbbb
frstor
fwait
aas
test
daa
cmpsb
out
sub
jge
dec
dec
pop
mov
push
dec
dec
dec
rcrb
cld
sub
jae
fnstenv
aas
push
scas
and
sub
cmpsb
and
rep
mov
cs
and
outsb
loopne
enter
jae
add
cmp
movsb
add
sub
push
xchg
mov
cltd
sub
and
movsl
push
pop
inc
push
fsubl
rcrl
scas
loopne
ret
push
add
lret
cmp
out
cmc
pop
dec
adc
in
shll
fwait
mov
pusha
outsb
jbe
pop
adc
add
sbb
push
xor
imul
scas
sbb
mov
xor
and
jmp
aaa
cmpsb
xchg
mov
push
adc
cltd
push
nop
push
inc
mov
push
adc
inc
push
inc
neg
fisubs
jne
mov
xchg
iret
jne
mov
xchg
popa
mov
sbb
push
xor
mov
stos
in
sub
add
and
loopne
out
int3
xchg
test
fnsave
push
notl
lcall
mov
jns
and
xor
sarb
jmp
les
or
jnp
repz
pop
jp
sahf
rcrb
pop
jp
adc
dec
shlb
out
jle
adc
jmp
push
xor
and
push
jae
xlat
adc
pop
mov
imul
ljmp
sub
mov
jg
xor
inc
add
push
mov
inc
inc
inc
shrb
into
mov
add
dec
mov
xchg
mov
push
jb
mov
push
jne
std
movsb
jns
dec
jns
rorl
decl
fstps
mov
dec
clc
ds
pop
pop
jl
ret
aas
or
bound
movsb
xor
pushf
out
pop
inc
out
add
dec
in
insb
sbb
pop
mov
xchg
mov
lea
into
inc
daa
push
pop
xor
add
gs
jbe
push
xchg
mov
iret
xchg
repz
fmul
sar
cwtl
xchg
push
inc
incl
or
xor
mov
xchg
fs
inc
jnp
cli
jno
xor
hlt
ss
add
xor
stos
add
cmp
cmp
in
cmp
mov
mov
stos
out
icebp
js
adc
in
mov
and
push
sbb
out
pushf
sub
xorl
fiaddl
cmc
xor
fadds
sti
push
hlt
xor
sub
popfw
cwtl
bound
cmp
cmp
fwait
fs
inc
push
mov
and
dec
ds
xor
int
loop
jl
or
les
mov
add
cmp
mov
cmc
orb
or
iret
pushf
sahf
add
adc
xor
fnstenv
aaa
scas
popa
ds
pop
scas
and
scas
test
negl
jbe
nop
and
push
fs
insl
roll
dec
lahf
mov
in
xor
stos
cmp
cmp
jnp
push
mov
mov
dec
sbb
and
jnp
mov
mov
pop
gs
or
inc
add
add
cwtl
inc
sub
xchg
ss
aaa
pop
mov
jne
outsl
sbb
stos
ja
mov
lods
or
pushf
fisttpl
fdivrl
std
pusha
rcl
icebp
pop
mov
mov
jbe
adc
mov
xor
loope
cmp
push
jo
jle
mov
inc
test
jecxz
int
jge
in
cmc
mov
xchg
mov
cmp
outsl
inc
loop
out
popf
sbb
or
jle
cmp
cmp
mov
movsb
and
mov
sbb
repz
adc
loopne
movsl
mov
xor
out
xchg
pop
inc
out
cmpsb
inc
jg
aaa
adc
into
es
jp
xchg
dec
addb
and
leave
mov
addb
pop
dec
insl
sbb
nop
imul
shl
gs
inc
sbb
in
test
pop
nop
mov
sbbl
jnp
jnp
push
adcb
lods
or
dec
rolb
lds
out
mov
shlb
pop
cli
roll
pusha
add
test
clc
mov
push
pop
sbb
pusha
and
in
ja
out
or
push
sbb
cmc
in
push
lretw
nop
fcmovu
cmovns
in
jmp
fisttpl
loop
inc
cmp
iret
jb
xchg
dec
imul
sub
cmp
jg
cmp
repz
sub
cmp
dec
int3
sbb
fwait
mov
sbbb
popa
in
aad
push
std
lahf
inc
xor
adcl
xor
push
add
adc
mov
dec
mov
in
mov
shlb
ja
outsb
push
rolb
push
sub
pop
outsl
dec
je
fimull
cmp
dec
mov
push
cmp
push
sbb
xor
jmp
mov
aas
sahf
in
lea
shrl
pop
scas
push
aam
xor
jno
mov
into
mov
mov
ret
pop
lahf
stc
and
insl
insb
imul
cs
push
fmull
or
or
mov
inc
push
lret
or
add
cltd
pop
mov
cmp
imul
dec
in
mov
jae
jg
insb
cmp
fwait
and
int3
push
jno
or
jns
in
out
mov
dec
xlat
xchg
dec
lret
das
shl
or
xlat
arpl
lahf
call
xor
mov
lahf
jno
pop
cmpsl
mov
pop
clc
pusha
insl
in
inc
inc
xchg
or
enter
xor
addl
xlat
mov
jb
xchg
mov
push
fmul
cmp
sub
pusha
ret
adc
popa
cmpsl
pinsrw
ss
test
out
jecxz
inc
pop
xchg
out
dec
movsb
rclb
adc
sbb
jns
aad
mov
mov
fidivl
or
mov
xor
mov
sub
sub
push
push
mov
dec
iret
xor
ret
or
sbbl
and
nop
cmp
movsl
pushf
and
pop
pop
mull
mov
dec
xor
xor
ds
rcr
jle
or
pop
call
xchg
dec
shll
mulb
in
out
inc
inc
push
xor
mov
dec
icebp
mov
test
ret
mov
or
xlat
les
sub
add
stc
out
add
and
daa
sub
xor
lcall
mov
pusha
add
mov
lret
les
xchg
sub
inc
pop
lods
add
and
fisubrs
add
cld
sub
xchg
jne
mov
mov
cli
pop
xor
in
imul
adc
cmp
inc
js
add
push
xor
adc
mov
insb
mov
xor
mov
mov
sti
loop
adc
insl
insl
mul
rolb
in
sub
stos
push
iret
dec
sub
mov
shl
or
add
sbb
cmp
or
pop
fstpl
movsb
cmp
jb
hlt
aam
xchg
cltd
adc
cmpsl
pushf
pop
sbb
popa
sahf
sub
and
adc
test
cmp
xchg
lret
mov
repz
subl
xchg
imul
inc
sti
or
std
push
and
cwtl
popf
outsb
test
rclb
pop
out
mov
xchg
lret
jb
repnz
les
scas
rcll
mov
push
ret
sbb
or
jo
jmp
imul
mov
mov
and
jns
test
ja
cmc
and
mov
push
lds
cmp
push
loop
dec
inc
sub
pop
and
andb
pop
dec
or
or
or
sbb
lds
call
push
roll
repz
jnp
cmp
cmp
leave
or
arpl
push
pop
scas
movsb
cmp
xchg
out
jge
inc
pusha
push
push
push
lret
pop
push
xchg
mov
in
movsb
push
jae
adc
sbb
lds
ja
ss
aam
pop
dec
push
jb
jmp
aas
inc
lret
ret
push
mov
inc
in
dec
cld
pushl
inc
ds
out
mov
jle
out
adc
dec
jae
sbb
mov
pop
in
cs
xor
sahf
or
adc
mov
push
add
sub
in
add
mov
sub
xor
add
insl
sub
sbb
jle
outsb
pop
repz
jg
push
jns
xor
ffree
fisttps
mov
dec
into
shrb
xor
loop
out
data16
call
scas
cmpsl
jae
xchg
jns
mov
mov
andl
cmp
lock
xchg
adc
add
inc
int
push
pusha
xor
xor
out
fadd
cmpsl
add
inc
mov
xchg
mov
jg
iret
xor
je
int
lods
sbb
loope
push
add
push
subl
popa
push
add
cmpsl
dec
jge
enter
pop
pop
mov
std
sti
cli
adc
xchg
lret
cmpsb
mov
icebp
aam
cltd
mov
iret
xor
idiv
ffree
inc
jle
mov
dec
fwait
lahf
bound
xchg
cmp
fisubrl
pop
jo
dec
enter
push
mov
decl
pop
sub
out
addr16
mov
test
mov
cmp
pop
jp
sarb
adc
shll
rorb
push
push
fwait
and
jae
inc
lock
cli
aaa
pop
jmp
data16
stc
sub
lds
scas
xor
in
rorl
cmp
fidivs
mov
shrb
in
in
xor
cmpsl
jecxz
cmp
je
pusha
out
pop
out
jno
lods
outsb
mov
pop
cwtl
lock
sti
mov
das
call
cwtl
rcrb
pop
call
or
mov
mov
sub
aaa
or
mov
imul
icebp
jg
sbb
xor
mov
adc
test
lods
gs
pop
adc
cmp
addb
movsb
test
sti
push
pop
mov
sbb
popf
fiaddl
cs
adcl
dec
xor
in
out
mov
lea
clc
gs
sub
std
inc
mov
sbb
out
add
fnstsw
push
leave
mov
xchg
imul
jo
rcrl
enter
arpl
test
jmp
xchg
add
neg
sti
jo
daa
and
push
push
orb
fs
out
mov
outsl
jae
dec
add
addr16
mov
lods
adc
testb
mov
movsb
shll
add
cmp
sbb
call
inc
mov
cld
xchg
loop
pop
adc
pop
cmp
cld
sti
fnstsw
inc
cwtl
jg
imul
ret
clc
fwait
or
repnz
cmp
add
pop
enter
mov
test
push
ret
out
dec
mov
xchg
adc
ret
aaa
jbe
mov
and
add
cmp
in
fs
xchg
fst
mov
cmpsl
dec
lea
inc
cmp
insb
and
fucomip
mov
jg
popf
daa
push
add
fwait
scas
jecxz
orb
mov
mov
mov
aaa
mov
push
aaa
dec
sbb
xchg
xchg
xchg
jecxz
hlt
or
addb
mov
cmp
sbb
cs
je
test
add
cmp
aad
push
pop
pop
mov
cmp
xchg
mov
dec
cmp
iret
cmp
sub
dec
inc
lods
sub
add
or
in
or
jnp
push
cmp
mov
dec
hlt
hlt
fldcw
dec
sub
jae
push
cwtl
test
lods
xchg
push
adcb
adc
into
lcall
ljmp
out
rclb
pop
push
sbb
xor
aaa
mov
adc
into
push
push
inc
insl
out
pushf
sbb
cmp
xor
push
adcb
fwait
es
and
fiadds
cwtl
xchg
jno
fwait
out
ret
sub
loope
mov
jmp
xorb
and
pop
jae
daa
sub
pop
jecxz
leave
add
cmp
test
inc
add
jb
adc
pop
adc
mov
jmp
sub
add
out
inc
jns
jmp
xlat
mov
jle
add
shlb
dec
popa
rcrl
mov
xchg
add
jne
pop
hlt
repz
adc
mov
insb
jnp
adc
cli
add
out
pop
inc
inc
popf
adc
pop
xchg
call
mov
adc
fsubrs
pop
adc
cmp
les
aas
cmp
jg
lahf
lret
cmc
or
dec
aam
and
xchg
xchg
movsl
das
orb
lds
sbb
scas
insb
stos
xchg
adc
mov
aam
cmc
sbb
mov
in
mov
in
jecxz
sub
movsl
push
fistl
fs
andb
dec
rcrl
fld1
loopne
rclb
leave
inc
dec
push
push
mov
jmp
xor
mov
or
divl
pop
dec
mov
inc
cmp
adc
cmp
inc
pop
push
outsl
sub
push
mov
arpl
dec
mov
icebp
cmc
divl
ds
pushf
in
insl
xchg
out
in
mov
cmp
lea
pop
je
cmpsb
cwtl
sub
ss
out
add
jb
loopne
jge
mov
xchg
inc
add
int
jmp
dec
push
ror
jbe
in
in
jnp
jo
pop
adc
mov
dec
inc
int3
mov
lods
mov
xchg
fcoms
movsl
sbb
mov
cwtl
out
jge
fiaddl
mov
in
aam
inc
xor
test
cld
test
ret
mov
mov
and
xchg
dec
xlat
insb
stos
shl
dec
orb
loope
and
dec
mov
test
dec
js
jbe
jle
mov
push
jmp
dec
out
out
imul
jl
inc
out
mov
mov
test
and
test
stos
add
gs
dec
out
mov
lahf
mov
aam
mov
aam
inc
and
in
mov
dec
jecxz
pop
ret
cmpsl
and
sbb
lret
xchg
mov
add
daa
push
js
jecxz
inc
inc
aam
cmp
sahf
xchg
mov
mov
dec
scas
jle
pop
xor
inc
loop
xchg
insb
inc
jg
mov
pop
jae
jg
sub
int
adc
das
rolb
pop
mov
fisubrs
aad
leave
jmp
cli
mov
mov
cmp
adc
aad
das
mov
inc
sbbl
xor
stos
adc
inc
cmpsl
and
pop
cmp
popf
enter
or
adc
js
mov
add
mov
arpl
scas
adc
lods
cmp
pop
xorb
call
or
dec
sbb
ret
add
add
les
mov
xorl
int3
jns
leave
pushf
xchg
and
shr
stos
arpl
out
sti
shrl
xlat
pop
fbld
ret
pop
lea
subl
sbb
mov
mov
stos
in
in
mov
dec
into
pusha
sbb
arpl
les
movsb
push
cmp
cmpsb
xchg
mov
popf
data16
dec
inc
push
mov
mov
iret
dec
lods
adc
lds
leave
cmp
aas
aas
loop
je
jge
imul
out
insl
jb
mov
cmp
pop
imul
dec
outsl
mov
pop
cli
ja
sbbb
mov
shrb
sbb
cmp
pop
xor
push
lock
and
xor
xor
dec
sbb
mov
ss
jns
sub
call
pop
fldcw
dec
jae
push
stos
cwtl
add
sbb
popa
mov
mov
stc
sub
pop
aad
jb
pop
inc
push
bound
out
sub
push
ror
ret
leave
mov
int3
dec
mov
and
sti
add
push
dec
lcall
adcb
lods
pop
lret
push
cmp
push
addl
mov
hlt
aaa
push
stc
les
cmpsb
fs
push
dec
mov
and
jecxz
xchg
mov
mov
hlt
movsl
std
sbb
gs
xchg
push
sbb
or
or
mov
xchg
jl
jns
nop
cmp
add
sbb
jge
sti
mov
lcall
daa
xchg
out
ljmp
mov
ret
or
sub
xlat
jg
negl
ds
xchg
loope
daa
jne
cs
dec
ret
xchg
fstps
cmp
lret
add
mov
dec
cmp
push
cmc
aad
js
inc
mov
filds
addr16
xchg
bnd
add
push
jo
data16
dec
xor
stc
and
frstor
in
dec
push
pshufw
shll
sbb
fwait
aaa
gs
sbb
pop
sub
push
jnp
pop
in
cmc
popa
scas
or
insb
insl
mov
loope
mov
pop
or
xor
ja
cli
jg
test
mov
adc
pop
cmp
pushf
mov
mov
fiaddl
imul
inc
jecxz
xor
pop
icebp
pushl
push
mov
add
incb
ss
jp
cmpsb
push
xchg
fbld
mov
imul
fwait
out
dec
inc
or
push
fdivl
jge
pop
scas
call
mov
scas
sub
in
inc
andl
in
jp
aas
cmp
popf
aaa
in
pop
pop
es
xchg
mov
sbb
scas
pop
xchg
xchg
and
dec
lods
inc
outsl
ja
pop
repz
stc
negb
lea
xor
mov
push
loopne
addr16
push
cmp
lahf
jp
cld
out
out
push
data16
add
ficompl
push
fmuls
mov
dec
mov
inc
mov
or
int
call
and
push
loop
mov
mov
ss
inc
movb
shr
sahf
lret
add
and
jp
cwtl
enter
jo
mov
idivl
clc
fcoml
xor
and
mov
scas
lret
cli
aam
and
add
ljmp
cmp
xor
mov
addr16
subb
stos
int3
iret
out
jg
fs
mov
addl
push
jbe,pt
scas
xchg
gs
stos
dec
mov
sub
mov
jg
adc
adc
ja
fwait
dec
cmpl
repnz
fbld
mov
lret
movsl
cmp
clc
jb
add
test
xchg
cwtl
nop
mov
aad
dec
cmpb
adc
push
mov
mov
mov
xor
lret
mov
xchg
js
outsl
mov
or
test
cmpsb
test
jle
stos
mov
ficoms
outsl
test
add
jb
or
sbb
sahf
push
pop
test
mov
les
adc
mov
xlat
out
mov
pop
stc
pop
data16
jo
xlat
dec
push
sub
inc
sahf
jecxz
mov
cmp
lahf
fwait
sub
cmp
sub
lahf
xchg
dec
xchg
stos
adc
jns
in
loop
sarb
rcll
int3
sub
std
dec
cltd
std
stos
adc
les
sbb
pop
shl
leave
fwait
rdrand
mov
bound
lret
cwtl
fists
bound
cmp
int3
ret
sahf
or
push
mov
mov
loope
and
push
loopne
aam
mov
mov
xchg
xlat
xor
add
rcrl
inc
out
mov
mov
xor
iret
sahf
sarl
scas
add
sub
sub
imul
call
xchg
pop
mov
mov
adc
inc
pop
mov
fs
pop
inc
add
jo
fs
push
stos
add
xor
mov
sub
out
fs
dec
jg
jge
pop
das
pop
iret
movb
xchg
cmp
insb
loopne
mov
popf
push
add
outsb
fimull
mov
roll
jp
cmp
pop
cmp
inc
insb
xor
ret
insl
add
mov
repz
add
sbb
jecxz
pop
push
xchg
lret
mov
fcomip
jb
push
inc
inc
mov
lahf
push
in
into
add
std
cmp
and
in
lcall
ljmp
out
cmp
adc
js
sbb
out
imul
xor
dec
adcb
pop
sub
push
mov
mov
mov
push
inc
and
push
push
lods
mov
pop
jg
sbbl
fsubs
sbb
mov
pop
mov
fwait
es
sub
test
pop
icebp
cli
push
push
adc
dec
sbb
cmp
mov
in
imul
cltd
cmpsl
aad
cs
adc
mov
dec
sub
int3
dec
in
cmpl
xor
cs
adc
cs
sub
push
add
push
lret
push
cmp
mov
incb
lahf
stos
cmc
mov
pop
shll
pop
and
pop
adc
out
enter
dec
lock
add
pop
stos
mov
jp
sbb
rcr
imul
jns
mov
xlat
xchg
psubb
ss
mov
and
popf
sbb
adc
sub
xchg
push
roll
mov
push
adc
out
aam
dec
dec
mov
xchg
dec
or
pop
adc
sbb
pusha
out
fwait
jne
xor
cmp
mov
pcmpeqw
cltd
fisubrl
pop
flds
and
jg
adc
leave
sti
rcrl
test
xor
insl
dec
in
mov
int3
pop
jo
mov
and
in
test
js
pop
lret
test
jns
jno
lock
ja
cmp
aas
push
push
mulb
jb
xor
aas
mov
sarl
xor
out
xchg
lcall
jp
lahf
es
and
dec
mov
aad
add
jl
dec
xor
insb
hlt
sbb
test
fldenv
cmp
pushf
testl
scas
cld
arpl
jbe
rol
sub
es
outsb
pop
pop
out
imul
pop
movsl
mov
mov
mov
scas
sub
je
adc
mov
lock
mov
sub
hlt
push
nop
test
iret
pop
lahf
lahf
adc
jae
outsb
mov
hlt
adc
mov
neg
mov
clc
jns
aad
xlat
mov
out
lret
ret
xor
lock
out
int
cwtl
jne
xchg
stos
mov
nop
pusha
ficoms
xchg
cmp
push
cli
repz
lea
lods
das
fnstenv
jno,pn
adc
rcr
mov
shlb
sbb
loop
fwait
and
gs
jge
push
push
jge
pushf
cltd
sbb
add
adc
inc
xlat
xchg
ret
vpackssdw
out
mov
mov
push
lods
or
mov
bound
out
movsl
dec
int
add
push
cmp
mov
mov
add
mov
mov
in
or
adc
mov
ret
jbe
xchg
repnz
jecxz
inc
cmp
ret
imul
in
sbb
popa
adc
pop
jns
dec
mov
cld
dec
cmp
fsubr
pop
incl
ret
dec
jo
dec
mov
insl
test
add
test
rolb
pop
mulb
mov
mov
sti
dec
jb
push
aas
cmp
imul
daa
das
rorb
push
jmp
mov
pushl
lahf
lods
in
nop
std
cmp
pop
and
cmp
fwait
aad
fwait
mov
cltd
fdivrl
fisubrl
push
add
sub
inc
lds
in
test
sbb
insb
inc
push
jmp
daa
clc
pop
outsl
cmp
daa
shrb
aaa
mov
repnz
jbe
ljmp
xor
lret
xor
addr16
mov
lcall
imul
dec
cwtl
dec
jecxz
inc
push
pusha
in
xor
pop
add
mov
sar
pop
jecxz
sbb
or
ss
xor
out
cmp
push
out
xor
add
adc
jnp
push
inc
out
aaa
inc
popa
nop
mov
mov
fwait
push
js
pop
xchg
jo
cs
pop
xor
push
lret
jb
test
jne
movsb
mov
ljmp
cmp
push
ret
faddp
lea
xchg
addr16
cmc
push
rcr
not
jecxz
pop
sti
pop
sbb
pop
mov
iret
aad
sarl
push
or
jmp
or
cmp
xchg
adc
and
movsb
pop
fsubs
fcmovnbe
xor
mov
sbbl
aas
sub
adc
les
sbb
loop
sub
xchg
pop
jnp
adc
enter
mov
jl,pt
nop
pusha
fcoml
js
in
pushl
into
push
or
daa
imul
and
rorl
icebp
jne
aad
test
push
cmp
mov
int3
jge
and
nop
ret
stos
push
add
mov
dec
arpl
pop
outsb
sub
sti
push
jne
shll
dec
or
orl
xchg
and
lds
shrl
mov
jne
xchg
lods
pop
sarb
pop
jecxz
cmpl
push
xlat
jnp,pt
enter
sbb
push
shl
jo
inc
sub
jge
adc
addl
xor
mov
ljmp
loopne
mov
jp
jne
in
dec
es
ret
lahf
pop
stos
mov
sub
xor
iret
aas
adc
push
je
adc
or
push
jae
pop
orl
jo
dec
sub
mov
add
fstps
cmp
mov
test
data16
push
push
fisubrs
xchg
addl
lret
pop
cmp
into
dec
mov
inc
mov
loopne
jnp
jne
mov
mov
pushf
push
int
sbb
popf
int
jmp
gs
ss
add
in
leave
outsl
xor
jle
sahf
jle
je
ljmp
jns
aas
cs
lods
add
stc
fistpl
aam
and
arpl
pushf
cli
sub
dec
dec
out
inc
or
in
mov
fs
xchg
das
push
pusha
push
mov
jl
jmp
mov
xchg
mov
fnsave
ds
mov
sbb
push
xchg
test
push
lcall
ficoml
push
lcall
in
aam
out
mov
add
lret
push
int3
insb
enter
js
je
dec
loopne
xor
push
xor
sbb
popa
cmpsb
fcmovne
and
add
je
mov
mov
addl
mov
or
sub
fdivrs
ja
addb
sarb
filds
adc
in
pop
lods
xchg
es
xlat
or
ret
hlt
data16
mov
dec
add
clc
repnz
lea
inc
shll
jbe
cmpsb
pop
aam
pop
cmpsb
imul
sub
add
fsubrl
and
adc
pop
inc
push
arpl
lods
mov
ja
cs
cmc
mov
push
xor
call
lret
and
mov
lods
lret
lea
popa
jnp
add
add
adc
cmp
pop
movsl
roll
scas
pushf
jnp
mov
fsubrp
outsb
sub
mov
test
sbb
jbe
icebp
aaa
cltd
lock
pop
into
cmpsb
dec
inc
les
xchg
aad
call
cltd
cwtl
jmp
and
mov
xor
idivl
jno
cmpsb
dec
outsl
sub
rcrb
push
aas
fmuls
scas
lds
push
jae
gs
mov
nop
imul
loope
sub
sbb
lods
repz
stc
add
and
aas
xor
lea
mov
sub
xchg
out
sbb
jmp
xchg
les
and
stos
push
add
push
mov
adc
cmp
subl
and
cmpsl
cmp
test
pop
cmpsl
mov
mov
stos
lods
mov
bound
movsl
int3
jb
xchg
mov
cs
inc
push
bound
mov
cs
xchg
lock
dec
out
pusha
sub
add
insl
adc
push
std
daa
mov
sbb
lods
and
in
xchg
sbb
ret
sub
mov
jge
iret
mov
mov
fidivs
jmp
ss
iret
rorl
ljmp
push
sub
shll
and
mov
fldcw
leave
ret
subb
rcr
xchg
or
adc
and
push
sbb
fdivs
dec
sahf
test
fs
out
or
push
xchg
push
sub
mov
loop
popa
or
jne
gs
and
adc
and
rclb
mov
inc
push
sub
shlb
pop
mov
pop
int3
pop
inc
xor
and
icebp
popa
mov
std
jnp
ret
lcall
and
cmp
mov
pushf
adc
repz
xchg
movsl
insb
mov
pop
or
rcrb
push
jg
xor
jl
pop
inc
repnz
insw
mov
shl
sub
inc
test
xchg
pop
in
nop
es
aaa
or
aam
aaa
shrl
aam
ds
xor
jno
sbb
test
inc
scas
mov
xor
stos
inc
outsb
mov
push
add
icebp
and
nop
rolb
nop
movsb
pushaw
cmp
cmpsb
movsb
hlt
mov
je
stos
cwtl
rorb
and
adc
xor
adc
std
add
dec
mov
pop
sbb
cmpsb
xchg
mov
scas
sbbb
push
fs
cmp
imull
stc
mov
imul
test
loop
pop
lcall
xor
int3
je
data16
mov
std
das
scas
mov
cs
pusha
mov
cltd
lds
js
adc
xchg
aam
testl
pop
xchg
movsl
push
jmp
scas
pop
sbb
sub
fstpt
and
mov
mov
jnp
mov
lahf
xchg
scas
adc
xor
add
push
mov
push
outsl
jle
test
cmpsb
inc
das
mov
divb
sahf
and
dec
push
fcmovnbe
jmp
adcb
inc
lahf
mov
inc
into
fisttpl
jp
pop
out
jecxz
mov
dec
iret
mov
jge
cld
mov
pop
sbb
sbb
div
sar
out
ja
cmpsl
lahf
jno
iret
shl
test
dec
std
mov
lods
pop
mov
lcall
push
add
shll
xlat
cmc
lods
and
push
test
fs
lea
add
js
mov
pusha
sbb
call
xchg
insl
sbb
jecxz
add
mov
or
neg
in
sub
cmc
cmp
in
push
aam
in
imul
mov
push
add
dec
dec
jg
cmpl
sub
aad
in
test
leave
jnp
jnp
adc
push
scas
int3
mov
mov
fwait
popa
iret
stc
fwait
push
loope
pop
mov
or
push
movsl
mov
in
ret
rorl
in
aad
leave
repnz
xchg
leave
mov
sbb
sbb
xchg
arpl
lea
push
movsw
icebp
sbb
mov
xor
jecxz
adc
popa
xor
aam
mov
jbe
incl
mov
mov
in
test
cwtl
sub
jo
adc
mov
and
sbb
push
orl
sahf
mov
mov
cmp
inc
adc
stc
lahf
shrd
fcomip
in
movsl
lret
test
mov
orb
push
dec
jl
std
inc
faddl
cmp
repnz
mov
push
cltd
repz
push
fistl
push
aaa
xor
mov
ret
jne
cltd
xchg
or
fs
dec
xor
mov
and
out
mov
xor
subl
lcall
push
fistpl
aad
adc
pop
mov
xchg
fdivrp
aas
into
cli
sahf
lock
xor
push
js
loop
loopne
adc
pop
dec
loop
stos
jno
in
fnstenv
frstor
jae
or
or
nop
xor
sub
xchg
xchg
push
push
pop
adc
fndisi(8087
movsb
inc
cmp
xlat
ss
cmp
enter
aaa
ds
push
mov
mov
pop
xor
or
jo
mov
lea
sub
sbb
test
cwtl
sbb
adc
xor
stos
pop
cmp
xor
loopne
xchg
lret
and
xchg
xorl
jno
mov
or
in
cmp
cmp
push
mov
in
jb
mov
movsb
aam
xchg
icebp
sbbb
cld
mov
out
dec
out
roll
hlt
addr16
insb
roll
adc
inc
cmp
jecxz
pop
dec
scas
into
or
stos
dec
adc
insl
aam
insl
js
fists
mov
cs
inc
mov
test
sub
out
mov
lret
add
dec
test
xchg
fdivrs
daa
mov
push
aam
inc
cmp
test
enter
imul
add
mov
xchg
sbb
mov
mov
inc
jecxz
icebp
mov
lahf
jns
scas
andb
int
ss
adc
mov
xchg
sub
lods
mov
or
icebp
and
mul
lea
pop
ss
das
bound
mov
iret
in
in
nop
imul
sbb
mov
xor
imul
mov
icebp
adc
pop
fidivrs
sub
push
mov
std
repnz
sbb
inc
adc
scas
lock
xor
inc
outsl
jp
adc
inc
jns
mov
ja
jecxz
cmc
cmp
jbe
pop
lods
js
push
add
pushf
and
sti
or
inc
cmp
sbb
dec
push
xchg
mov
movsb
jnp
fisubrs
aad
popa
jo
mov
mov
call
inc
repz
pop
sbb
insl
mov
icebp
ljmp
mov
mov
mov
lret
dec
fiaddl
bound
fistpll
or
or
ret
push
loop
xchg
shll
adcl
mov
or
xor
pop
out
data16
adc
or
iret
outsb
pop
mov
js
dec
test
js
pop
xorl
out
push
xchg
fldenv
lds
and
mov
xchg
outsb
lret
pop
and
sub
sti
jae
xchg
ljmp
add
pop
cmp
inc
orl
or
lret
outsb
mov
add
mov
popa
adc
lret
popa
stos
sbb
popa
sbb
mov
mov
int
xchg
sbb
push
outsl
pushf
data16
test
fmull
xchg
test
subb
cmc
aas
and
xchg
jo
inc
xlat
repnz
and
xorl
imul
gs
xchg
scas
dec
jbe
fisubs
jne
mov
fiaddl
push
mov
cmp
cmpsb
inc
test
ljmp
cltd
jmp
cmpsl
sub
jl
jb
sub
popf
add
adc
stos
mov
movsb
jno
cmpsl
popf
mov
inc
imul
mov
notb
sbb
or
int
and
aad
cmp
push
inc
push
jg
std
inc
std
cmp
dec
jle
and
scas
push
das
nop
xor
out
adc
add
test
push
jnp
scas
hlt
fldcw
mov
aas
or
in
cli
pop
outsb
cmp
xorl
pushf
mov
inc
shrl
push
inc
lss
jne
movsl
add
daa
sbb
mov
and
insl
pop
mov
add
jecxz
xor
pop
inc
or
js
movsl
dec
movsl
jp
in
shll
xchg
push
sbb
bound
xchg
sti
daa
test
xchg
es
cmp
mov
cli
adc
xchg
push
insb
mov
jl
sub
sub
pop
xchg
lahf
outsl
and
gs
out
pop
mov
mov
pop
push
insl
insl
mov
xchg
das
cmpsl
pop
push
addr16
daa
lds
int
sbb
mov
jg
cmp
push
popf
push
push
cmp
adc
push
sbb
jae
pop
pushf
add
sbb
data16
rclb
adc
cmp
insl
mov
sub
int
sub
nop
test
ja
mov
dec
dec
cmp
ret
imull
inc
cmpsl
inc
dec
mov
xor
rcll
fwait
stc
jmp
jp
pop
jne
mov
stc
sub
aad
cmpb
loope
ljmp
fmul
lahf
test
sbb
icebp
ljmp
add
shr
pop
test
sub
push
lods
int
movsl
sbb
cmp
imul
je
fwait
mov
andb
inc
jbe
push
mov
data16
sbb
and
jge
adc
test
xor
fnstcw
mov
arpl
enter
add
imul
fwait
lcall
adc
sbb
fisttpll
adc
addl
add
lahf
ja
lock
lret
adc
nop
pop
scas
std
push
add
outsl
shlb
movsl
dec
scas
mov
lret
pop
mov
shrl
icebp
push
cmp
lods
push
cmp
cmp
add
ja
std
arpl
pop
test
rorl
mov
aaa
push
add
and
popf
dec
push
cli
addr16
xor
xor
xor
xor
xor
xor
xor
jne
mov
push
clc
mov
or
dec
add
roll
inc
add
add
sbb
inc
sbb
sbb
int
jnp
jnp
fwait
or
jo
mov
mov
xor
jle
cmp
sub
jbe
dec
into
inc
stos
sbb
mov
shll
sub
sbb
push
cmp
repz
leave
fldenv
loop
adc
stos
dec
jmp
pop
push
fs
cmp
ret
dec
fiaddl
jo
or
push
sbb
cli
call
sub
stos
xchg
repz
orb
fldl
sbb
jecxz
hlt
loope
sbb
shrb
out
or
push
jbe
aad
xchg
data16
dec
loopne
sahf
inc
aas
mov
jg
push
lcall
sti
jecxz
ret
repnz
jne
std
pop
iret
jecxz
loop
push
or
ss
cmp
out
inc
dec
fldln2
nop
fmuls
movsb
cmpsb
lcall
inc
or
pop
inc
or
imul
dec
sub
and
cmpsb
mov
pop
in
jmp
mov
jbe
loope
mov
lcall
in
shll
in
mov
hlt
lock
je
sbb
mov
lcall
cmp
pop
push
aas
dec
add
loopne
mov
pop
lods
ficoml
and
pop
pop
mov
cwtl
or
daa
dec
dec
out
sub
jb
pop
in
movsl
movl
adc
test
fs
das
aas
sub
jb
and
pop
aad
cmp
mov
out
push
inc
mov
movsb
popa
in
pop
cmc
shll
iret
push
inc
mov
lea
xor
push
mov
stos
dec
inc
pop
xchg
sbb
xchg
or
push
and
dec
mov
fcomi
test
out
mov
cmp
pop
sar
mov
mov
gs
mov
adc
dec
lods
sub
xchg
hlt
adc
pop
js
adc
pop
je
mov
js
jp
jge
loope
mov
cmpsb
out
lcall
std
rcll
jl
ja
dec
fmuls
lcall
in
mov
popa
push
dec
push
cmpsb
or
inc
inc
push
pop
adc
in
ret
cmpsl
inc
out
xlat
addl
and
jmp
sub
cltd
out
mov
inc
imul
adc
xchg
sahf
icebp
cmp
sub
stos
or
fs
aaa
mov
inc
int3
ds
xor
insl
pop
icebp
inc
adc
popa
jns
jns
ret
fs
fdivrp
hlt
sahf
clc
fwait
sub
inc
xchg
nop
sahf
icebp
ja
in
subb
mov
fcmovnbe
loope
stos
and
sti
mov
test
lret
push
inc
bound
mov
push
jg
mov
hlt
or
cmpsl
ljmp
and
repz
xor
imul
push
mov
aaa
xor
and
jns
sub
xchg
lea
gs
push
cld
mov
xchg
pop
or
insb
adc
add
xor
xor
ja
insb
sti
outsb
push
push
movsl
jno
mov
mov
pop
pop
divb
mov
imul
push
adc
or
xor
or
addb
stos
setp
incl
stos
xorb
dec
es
pop
nop
xlat
es
mov
cmp
out
fnstsw
jecxz
sub
dec
scas
push
inc
sbb
adc
pop
adc
mov
dec
scas
rcrb
or
jmp
push
xchg
sarl
notb
bnd
mov
jae
add
lahf
mov
gs
imul
xchg
xor
xor
add
jbe
cmp
jle
mov
xchg
aam
fisubs
push
ret
loopne
push
add
dec
repz
in
mov
lret
fstpt
xchg
inc
mov
add
adc
in
aas
xor
in
ficompl
fiaddl
enterw
xchg
mov
lods
cmp
test
fstps
pop
mov
cli
lret
or
dec
hlt
and
adc
jae
loopne
pusha
int3
aad
in
xchg
pop
mov
fisubl
sahf
cmp
inc
push
je
arpl
std
fimull
cld
adc
testl
movsb
adc
pop
jg
cwtl
sbb
sbb
push
pop
cli
stc
call
xorb
lahf
jmp
jg
mov
fdivrs
mov
into
nop
dec
push
insl
mov
addr16
and
cmpsb
enter
mov
dec
or
push
test
dec
jno
or
and
mov
push
fs
clc
inc
cwtl
loop
lcall
add
cmc
std
lret
push
inc
icebp
mov
jp
pop
pusha
pop
in
cwtl
ljmp
sbbb
movb
or
sbb
ret
and
out
fucomip
push
dec
cmpsb
push
dec
xchg
lret
jns
jns
mov
dec
xor
mov
icebp
add
not
jae
jecxz
inc
pop
cmp
fcoml
cmpsb
mov
imul
xchg
mov
dec
inc
cmpsl
test
xchg
test
xor
rcll
add
mov
xor
lret
lock
repz
addps
ds
mov
fscale
ss
fnstsw
insl
jo
mov
jns
add
sub
lock
fnsave
pop
lea
faddl
out
daa
pop
into
test
push
lret
mov
jecxz
int3
popf
add
pop
mov
xchg
ljmp
and
in
insl
fsubl
mov
ret
aam
lea
mov
xchg
fstl
jbe
mov
pushw
jbe
cld
pop
pop
test
sahf
in
cmpb
sbb
inc
insl
jmp
and
mov
or
inc
or
clc
gs
push
xor
adc
arpl
mov
mov
cmc
into
aad
icebp
jge
mov
or
stc
je
inc
fsubs
pop
test
rcr
inc
inc
rcl
es
xorl
push
movsl
mov
insl
sbb
lcall
jnp
sarl
mov
jo
inc
mov
clc
xor
lods
aad
add
dec
sub
clc
ds
jmp
mov
seta
pop
icebp
dec
iret
inc
xor
lock
mov
adc
add
insb
popf
das
aaa
mov
pop
out
repz
pop
xchg
xchg
mov
call
loopne
mov
mov
pop
cld
sub
lods
pop
jns
push
dec
icebp
aas
daa
inc
sub
jo
xor
scas
insl
into
mov
xchg
jnp
xchg
test
push
loop
subl
in
scas
mov
sub
inc
ret
les
mov
pop
movd
inc
push
cmpsb
inc
xchg
sahf
pop
or
xchg
les
lds
and
int
inc
push
push
rcll
subb
jnp
mov
pop
xor
cmpsl
push
dec
out
mov
testl
aad
cmp
rclb
sub
push
jae
nop
push
sbb
add
pop
fs
iret
push
aam
lahf
or
mov
in
test
xor
dec
ds
cmp
lret
adc
xchg
jp
mov
test
sbb
fisttps
mov
pop
xor
popa
jg
xor
fcmovnbe
mov
xchg
mov
ret
sbb
mov
inc
sbb
pop
adc
sub
ss
adc
jmp
fs
inc
ss
lcall
lret
and
fcompl
movsb
imulb
arpl
dec
dec
xchg
push
repnz
nop
lret
dec
outsl
out
or
in
mov
lods
dec
adc
pop
lret
and
je
test
leave
cmpsb
fldl
jmp
out
jmp
bound
fisttpll
jecxz
clc
inc
addr16
cmp
push
xchg
hlt
fcmove
enter
sbb
and
popl
mov
sbb
push
jae
push
mov
test
sbb
loopne
daa
inc
and
jb
add
enter
jg
sbb
jl
jnp
pop
movsb
fiaddl
in
cmpsl
jb
push
arpl
sar
iret
insb
in
sbb
jmp
repz
mov
shll
pop
push
into
mov
mov
xlat
cmpsb
fisttpl
xchg
pop
xor
mov
add
mov
lock
sub
mov
dec
test
aad
pop
pushf
pop
pushf
sbb
jnp
aaa
sbb
lret
sbb
push
mov
out
mov
dec
cmp
cmp
mov
mov
in
aaa
clts
scas
sub
sub
cmp
pop
add
mov
cli
cmpsb
xchg
mov
hlt
repz
push
xor
stos
fwait
aad
mov
adc
pop
adc
sahf
push
jno
inc
cs
arpl
pop
addr16
pushf
call
faddl
rclb
pop
push
jbe
cmp
fdivrs
pusha
mov
dec
jno
call
inc
sahf
fiadds
das
push
xchg
cmp
out
jl
cmpsl
shll
mov
push
xchg
pop
fstps
ret
lds
hlt
pushf
popf
in
add
xchg
sahf
shrl
push
mov
inc
cmp
push
sbb
outsl
or
inc
adc
shl
les
cvtdq2ps
rcll
mov
mov
xor
and
fidivs
and
movsb
bnd
fistpl
fs
xor
sub
sub
sub
daa
xchg
or
sub
push
adc
xchg
iret
xchg
or
and
movsb
pushf
cmp
nop
insl
rcl
xchg
pop
sti
pop
pop
cmp
fnstcw
add
subl
jo
dec
cld
mov
push
cld
mov
fnstsw
icebp
bound
and
hlt
fisubl
adc
icebp
push
push
lods
inc
or
mov
inc
add
gs
jmp
ret
jns
mov
ja,pn
out
lret
mov
jg
sbb
lcall
mov
lret
push
jnp
adc
in
dec
xchg
idiv
flds
movsb
test
pop
sbb
pushf
push
lret
cwtl
lods
and
repz
in
outsl
jo
or
inc
push
aaa
xchg
fldl
popf
fsubl
sub
cs
sub
jle
add
push
mov
imul
push
ficoml
inc
test
rcrl
mov
push
fmull
push
cmp
jnp
mov
pusha
fldenv
bound
jg
mov
fdivrp
mov
xor
mov
push
jbe
cmp
andl
or
add
inc
in
push
xchg
dec
cmp
jne
cltd
adc
ficompl
and
adc
add
shr
mov
cmp
leave
xlat
fstp
pushw
hlt
jae
pop
ret
rol
xor
xchg
mov
sbb
mov
pop
cld
xorb
call
xor
mov
and
jae
add
lret
cmp
in
out
cmp
push
in
xor
cmp
push
cwtl
pushf
inc
dec
ficomps
pop
stc
jecxz
lret
sub
mov
jb
cwtl
push
in
push
test
lret
jge
inc
and
addb
xchg
dec
je
sbb
jg
or
in
fnsave
mov
out
ja
lods
mov
cld
push
add
adc
daa
adc
loopne
sub
inc
je
xchg
push
mov
scas
inc
imul
arpl
sub
push
aas
xchg
and
add
adc
mov
xchg
enter
or
or
inc
in
dec
andb
fs
mov
mov
xchg
mov
push
sub
mov
lods
cmp
inc
add
add
sbb
lcall
arpl
icebp
mov
fldcw
aaa
inc
loop
aam
test
mov
rorl
daa
out
push
daa
in
pop
test
dec
ljmp
cmp
pop
cltd
scas
into
out
mov
jne
subl
into
push
jmp
add
stos
fdivrl
mov
out
in
pushf
adc
mov
stos
insl
mov
nop
add
push
inc
mov
in
cmp
adc
mov
sbb
fwait
mov
mov
in
mov
imul
fwait
out
inc
lcall
push
pop
sub
movsb
push
push
fcompl
add
or
sarb
add
cmc
das
push
loope
in
sub
push
ret
mov
popl
xchg
outsl
fmul
push
je
jo
pop
pop
loop
xchg
subl
fisubrl
add
push
sub
push
rcll
outsl
mov
or
dec
das
and
cmp
push
mov
xor
or
inc
mov
lock
es
insb
adc
scas
cmp
mov
stos
adc
lret
adc
xchg
stos
int
mov
cltd
mov
xchg
pop
cmp
jns
fnstcw
and
xchg
imul
inc
loopne
jecxz
into
lret
das
sub
scas
test
cld
inc
sub
scas
dec
test
push
ret
es
cmp
lret
xlat
std
fldl
data16
dec
mov
out
pop
jle
cmp
mov
aaa
popf
pop
sub
out
pop
xchg
or
xor
inc
pop
int3
xchg
cmp
rcrb
lds
mov
push
aas
shrb
testl
ljmp
cmp
adc
in
fdivrs
cmp
mov
sub
xor
mov
aaa
xchg
mov
icebp
je
lods
adc
jp
sbb
daa
adc
aad
sub
adc
hlt
gs
mov
jg
jle
jne
sbb
sub
lcall
inc
pop
loop
call
call
push
and
aaa
sbb
es
xor
adc
sub
mov
test
ljmp
popa
lcall
add
inc
jne
xchg
sub
inc
in
push
mov
or
and
dec
imul
xlat
icebp
cmp
cld
mov
repz
aas
sti
add
inc
test
cmp
cmp
repnz
xchg
cmp
int3
push
pop
add
wrmsr
xchg
js
inc
dec
push
and
frstor
imul
repz
xor
and
fst
pop
xchg
mov
mov
xchg
xorl
cmpsl
jl
sub
jo
arpl
mov
lds
ljmp
pop
push
xorl
pushf
mov
aad
fistl
mov
dec
adc
jb
mov
loope
jle
loopne
mov
inc
pop
cltd
cmpsb
xchg
pop
fists
pop
mov
mov
fstpl
dec
pop
and
aad
mov
in
add
xor
out
add
mov
xor
lret
jg
aam
je
mov
push
push
push
cs
add
notl
les
inc
mov
xlat
xor
cwtl
stos
mov
cmp
pushf
or
fbstp
ss
jbe
jnp
inc
fcomps
push
jae
jle
fadds
ljmp
dec
xor
sub
lods
loope
sbb
jmp
loop
cli
dec
dec
sbb
inc
nop
icebp
pop
mov
cltd
xchg
inc
icebp
ja
adc
mov
xor
les
dec
fidivrl
push
pop
pop
insl
push
pop
pop
jo
jae
jge
push
push
dec
lahf
movsl
jl
int3
inc
sahf
push
jnp
mov
xor
popa
and
sub
push
iret
in
scas
mov
scas
jp
lcall
rol
movsl
arpl
adc
add
xchg
mov
in
or
movsl
push
pushf
cmp
pop
pop
int3
pop
mov
cmpb
mov
sahf
sub
and
sbb
stos
and
adc
enter
andl
pop
popa
mov
das
and
jbe
dec
repz
jp
mov
jnp
call
mov
mov
test
xor
fsubrs
adc
outsb
daa
lret
inc
add
lahf
rolb
sbb
paddusw
sbb
xchg
mov
fmuls
rcrb
adc
fiaddl
shll
inc
movsl
ret
sub
mov
dec
mov
andb
les
push
dec
mov
ss
xchg
add
hlt
push
push
adc
aas
mov
ss
fldenv
adc
pop
repz
lods
sub
ja
lret
lods
test
push
loopne
ret
or
mov
cmp
roll
add
xchg
or
mov
imul
cmpsl
ds
push
mov
nop
push
shlb
loope
out
lret
jmp
fidivrl
es
mov
mov
sbb
pop
push
pop
adc
fucomp
inc
jno
insl
sub
or
test
jl
stos
out
jp
test
and
push
adc
andl
outsl
orl
insl
outsb
jnp
or
fnstsw
jae
xchg
jg
mov
outsl
xor
outsb
ss
or
push
push
es
popl
loope
aas
aas
mov
xor
rcrb
addr16
xchg
fcomip
loope
in
adc
insb
mov
pshufw
int3
mov
outsb
pop
inc
mov
xchg
jnp
divb
clc
out
jecxz
filds
add
dec
sub
adc
mov
or
stos
xchg
sbb
insb
leave
pop
mov
cmp
and
arpl
ret
imul
fsubp
sub
pop
mov
stos
sbb
and
bound
pop
lret
xor
int
sbb
testl
insl
pop
repnz
xchg
cld
pop
or
mov
mov
mov
stos
aad
push
sbb
sbb
test
xor
push
add
jbe
addr16
ss
mov
cwtl
clc
test
ret
mov
cmp
mov
and
adc
lea
cmp
leave
int3
or
inc
dec
cmpsb
sahf
ret
dec
enter
insl
jecxz
push
in
hlt
mov
inc
dec
adc
or
ret
jo
mov
xchg
jge
sbb
aas
clc
clc
fs
add
xchg
fs
lret
dec
int
popf
sbb
xor
xor
movsl
sbb
scas
dec
out
aas
cld
notl
fldcw
add
fsubrl
in
pop
adc
scas
add
push
cmp
push
sbb
cmc
cmp
out
lret
and
cltd
pop
pop
inc
mull
iret
xchg
shrl
rclb
enter
test
adc
enterw
mov
inc
xchg
insb
enter
hlt
sub
xor
fadd
and
adc
xor
cmp
add
push
xchg
test
aad
das
mov
push
dec
sub
test
mov
mov
and
jno
insb
sbb
xchg
das
sbb
leave
rolb
sub
dec
lea
jnp
mov
addr16
es
movsl
fdivs
stos
and
pop
adc
fiadds
mov
ret
push
sarb
dec
mov
jmp
adc
pop
mulb
pop
iret
xchg
mov
inc
pand
iret
jbe
cmp
sbb
xor
pushf
pop
adc
pusha
mov
mov
in
push
mov
mov
inc
in
sbb
pop
mov
mov
outsl
daa
xchg
movsl
adc
pop
xchg
jne
jecxz
arpl
dec
addr16
enter
xorb
ret
adc
pop
sbb
adc
dec
std
mov
push
xor
das
jne
adcb
adc
cli
pushf
into
sbb
cmp
clc
lea
sahf
testl
pop
sub
fstl
add
pop
cmp
mov
loope
inc
jle
inc
test
fisubrl
push
inc
cmp
mov
fldcw
mov
inc
fdivr
xchg
dec
sub
dec
xchg
push
sbb
or
insb
call
mov
and
fsub
mov
popf
dec
push
lahf
loop
rolb
aaa
adc
inc
lods
fadd
or
cmpl
repnz
adc
fstpl
arpl
and
test
xchg
cmpsl
jge
mov
lds
mov
aaa
mulb
xchg
jns
ret
sbb
push
mov
lret
push
inc
in
int3
mov
fcoms
repz
fsubl
add
pop
xor
dec
jge
mov
push
or
push
out
inc
inc
int
or
inc
call
arpl
sub
mov
mov
aas
sahf
jg
leave
and
leave
lret
cmpsl
mov
ljmp
jp
mov
loop
test
adc
push
pop
fwait
add
int
push
addl
sbb
mov
lea
out
jno
mov
cs
decb
xor
mov
push
adc
fnstcw
pushf
jp
mov
ror
fistpl
mov
xor
pusha
notl
jae
inc
imul
je
sbb
jge
mov
cmp
imul
outsb
roll
test
mov
ja
test
and
rcll
jne
pop
daa
jnp
std
xchg
lock
stos
pushf
xlat
call
add
xor
shlb
fs
sbb
jmp
lock
cmp
push
push
mov
push
cs
mov
iret
sti
xchg
xor
jnp
dec
out
or
orl
lcall
adc
dec
movsb
pop
int
call
data16
or
scas
into
mov
out
adc
subl
lods
lods
or
push
leave
xor
and
or
push
arpl
mov
mov
push
nop
dec
into
daa
aad
mov
xor
jg
enter
or
sub
xor
or
dec
jge
shll
lcall
stos
loop
repnz
stos
pushf
imul
pushf
dec
stc
mov
imul
xchg
es
or
sub
mov
repz
mov
jg
rolb
fdivs
pop
jne
xchg
popf
mov
sbb
mov
rcll
add
aaa
mov
jge
dec
xor
xlat
sahf
fldl
pop
mov
imul
jmp
cmp
jbe
loopne
dec
sbb
out
in
pop
dec
out
mov
mov
movsb
and
popa
leave
or
iret
or
mov
test
fisubs
xchg
adc
or
mov
outsb
sbbb
aam
adc
mov
bound
mov
cmp
lcall
mov
out
sub
adc
xor
mov
mov
fcomps
mov
jne
cltd
loopne
nop
outsb
movsl
mov
fstpl
and
pop
inc
jg
in
or
mov
mov
loopne
mov
mov
mov
cmpsl
imul
mov
inc
sti
and
pop
clc
enter
adc
jp
push
adc
xchg
cli
adc
out
shr
push
fucompp
jno
mov
cmp
shlb
pop
sbb
jns
lahf
addl
test
mov
push
xor
stos
mov
pop
scas
inc
jno
test
sub
mov
loop
jnp
ss
jge
mov
jne
or
push
clc
mov
testl
jnp
mov
ret
out
jb
mov
xor
iret
ljmp
js
jo
xor
icebp
mov
jmp
lods
mov
das
or
cmpsl
leave
rclb
jne
push
mov
push
dec
sahf
mov
pop
test
out
and
add
push
add
ja
sub
sbb
fistps
xchg
cmp
add
adc
xor
or
jo
jo
sbb
call
cmc
add
cmp
and
xchg
ret
mov
mov
pop
outsl
pop
les
mov
push
fsubs
xor
adc
popa
rclb
dec
pop
mov
inc
pop
into
loop
xchg
loope
dec
mov
pop
xchg
aam
and
fstps
in
adc
xchg
xchg
jge
das
pop
enter
pop
inc
loop
xchg
jp
cmp
enter
dec
jp
stos
jne
mov
pop
cmp
ret
lods
outsl
outsb
rcr
cmp
adc
xor
mov
dec
in
add
push
fisubl
add
mov
dec
and
in
mov
pop
mov
push
cmovae
repnz
fnstcw
mov
sub
jae
xchg
les
mov
dec
pop
mov
push
fsubl
pop
sbb
outsl
mov
add
xchg
inc
neg
bound
dec
imul
cmpsb
adc
pop
out
pushf
pusha
sbb
rclb
data16
adc
xor
xchg
stos
inc
int
in
popf
es
add
xchg
mov
xchg
lahf
cmp
scas
pop
dec
or
out
loope
subb
xor
lods
test
mov
outsl
in
xchg
or
sub
icebp
inc
mov
dec
mov
sbb
int3
cmp
inc
sub
enter
lret
sub
lods
pop
cmpsb
pop
cld
divb
shrl
jge
leave
adc
mov
xor
lods
fnstenv
pop
xchg
nop
jno
test
lea
sbb
int3
push
jl
push
andb
orl
loope
lret
cmp
aas
jp
int3
pop
xorl
pusha
xchg
testb
popf
popf
and
cmp
or
add
sub
adc
xchg
mov
push
in
pop
jno
xchg
jnp
mov
pop
and
jp
mov
loope
xlat
fwait
bound
inc
adc
jbe
mov
jbe
outsb
mov
test
or
cmp
mov
fadds
mov
pop
inc
mov
push
jp
js
mov
xor
dec
xchg
ret
jns
movsb
sbb
and
hlt
lret
jae
insl
inc
mov
mov
leave
add
dec
mov
scas
ljmp
jno
adc
xchg
adc
push
dec
push
lods
and
loopne
dec
cmp
inc
or
in
jl
mov
iret
and
dec
jge
xor
mov
cmp
jmp
jp
dec
adcl
xchg
aaa
jecxz
xchg
jecxz
mov
int
add
fadds
cld
sbbl
and
insl
lahf
or
cld
lods
push
and
dec
mov
jmp
loop
cmp
outsb
into
popf
pop
inc
les
shll
in
shll
sbb
mov
sub
adc
lods
jge
lock
pop
and
out
and
jnp
sbb
hlt
aad
xor
mov
in
xlat
jecxz
inc
dec
dec
das
jb
loop
push
xchg
xlat
pop
mov
sbb
jl
popa
ja
cmc
push
sti
lahf
je
bnd
pop
or
inc
xchg
ret
popa
loop
stos
jbe
lods
cmp
sbb
jp
stos
adc
mov
aad
aad
subl
fwait
mov
ficomps
pop
push
inc
and
test
in
sub
fistps
jecxz
sbb
pop
jb
xchg
dec
xchg
adcb
repz
and
inc
jo
in
lret
imul
pusha
pop
aaa
dec
adc
lcall
enter
popf
addr16
xor
mov
sub
push
mov
inc
std
test
xchg
sbb
cmp
cli
loope
xor
clc
jmp
xor
dec
cmp
cltd
dec
hlt
mov
cs
das
push
mov
xchg
imul
je
in
xor
test
and
pop
xor
jg
mov
cmp
sbb
test
cmp
icebp
test
and
test
pop
daa
or
dec
shld
nop
push
jb
lods
scas
aas
pop
mov
lret
scas
js
popa
inc
rcrb
inc
jg
jl
mov
mov
test
adc
jle
mov
fisubs
nop
sbb
fildll
dec
pushl
sbb
shrb
cmp
adc
movsl
jne
pop
add
xchg
inc
cmp
dec
sub
inc
sbb
adc
sbb
mov
inc
xchg
ss
pusha
push
inc
jo
dec
jnp
pop
lret
ja
mov
loope
push
sahf
mov
cld
sub
repz
clc
mov
push
lods
ds
add
dec
xchg
loop
lds
subl
lock
das
int
mov
cmp
or
sub
cmovl
fwait
mov
imul
or
xor
sbb
mov
adc
xchg
in
cmp
xchg
aas
lret
imul
or
in
jl
jecxz
jbe
add
outsl
mov
sbb
iret
jecxz
adc
outsb
and
lea
scas
sbb
je
testb
dec
ret
inc
imul
adc
cli
dec
jnp
xchg
push
ljmp
scas
push
mov
loope
sub
mov
sbb
sti
sub
and
inc
out
add
inc
xorl
icebp
xchg
cmpsb
inc
dec
ds
and
jb
jecxz
jg
sahf
jne
cmp
bound
mov
insl
mov
lods
bt
mov
add
cmp
sbb
adc
fcoml
aam
sub
mov
jbe
mov
add
adc
mov
out
and
xchg
push
shrb
clc
mov
adc
mov
push
mov
and
pop
push
les
fwait
push
das
mov
add
jmp
mov
pop
inc
repz
cmp
inc
mov
mov
lcall
fwait
cmp
scas
sbb
js
mov
mov
cmp
or
adc
hlt
jne
shlb
xchg
pop
je
sbb
out
pop
push
mov
push
cwtl
out
xchg
faddl
push
sub
xchg
test
fcmove
jecxz
cmp
nop
push
sbb
jns
mov
jno
addr16
add
rol
jge
xlat
and
fdivs
popf
pop
cmpsl
mov
insb
lret
ljmp
ss
ja
cmpsb
inc
out
or
mov
sub
sub
int
mov
addb
pop
dec
pop
outsl
orb
add
das
push
pop
xor
pop
xor
cli
push
cltd
aad
add
test
and
pop
cltd
outsb
inc
add
mov
or
cmp
jne
jno
rorl
mov
repz
adc
repz
jnp
xchg
lret
ret
mov
ds
mov
mov
lods
jno
fisttpll
add
adc
test
mov
call
stos
ss
cltd
ss
pop
outsl
rcr
pop
cmp
adc
mov
sbbl
dec
adc
xlat
xchg
bound
xor
cltd
outsl
cmc
push
mov
push
xlat
imul
ljmp
add
dec
or
mov
mov
inc
cmp
hlt
insb
or
xor
insb
jbe
xor
or
xlat
cmpsl
les
in
cmp
cmc
pop
mov
sbb
jne
lds
je
dec
dec
pop
lahf
cmpsb
push
fimuls
ffreep
or
lea
inc
rcrl
stc
mov
or
mov
mov
pop
repnz
test
mov
ret
jns
imul
mov
sbb
mov
jae
and
inc
arpl
inc
sahf
or
popf
jl
mov
mov
add
push
mov
dec
cld
into
sub
push
psraw
sbb
pop
add
sub
loop
dec
inc
cmp
push
fdivl
shll
mov
mov
scas
into
mov
mov
orl
xchg
xor
in
mov
xchg
and
adc
sbb
test
xor
cli
dec
push
jl
cmp
into
mov
mov
mov
mov
in
xchg
fnsave
adc
or
incl
shlb
xchg
scas
ficomps
in
ret
imul
stc
rorb
jge
pop
inc
and
mov
dec
fcompp
ja
in
push
ljmp
jp
jno
mov
add
in
pop
arpl
sbb
int
ds
pop
or
and
or
std
jle
icebp
add
loope
xchg
loop
push
je
or
mov
cmp
movsb
cs
into
cltd
jecxz
addb
lock
test
in
loope
lret
aaa
and
push
hlt
lret
mov
cmpsl
es
add
iret
add
cmp
dec
mov
jne
cwtl
push
adcb
xchg
negb
popf
pusha
inc
mov
sbb
mov
or
add
pop
aas
cmp
jp
mov
mov
jmp
xor
and
push
lret
mov
test
pop
push
enter
popa
inc
or
mov
sub
rclb
push
add
jnp
jo
mov
or
xchg
jle
cli
cmpsb
push
xchg
pop
cmpsb
movsl
jle
test
inc
out
stos
dec
sub
cmp
jae
add
mov
adc
and
or
or
aaa
aas
rcl
mov
lcall
shrl
in
xchg
pop
jg
test
loope
sbbb
and
jmp
xchg
mov
loopne
and
cmp
push
dec
in
ljmp
lcall
cmp
addr16
rolb
pop
lock
movzbl
out
inc
stos
jle
adc
repz
hlt
add
fimuls
mov
inc
xchg
decl
xor
clc
or
xor
sub
ds
cmpsl
dec
out
stc
pop
add
scas
push
jne
cli
sub
ret
sub
shlb
in
push
stos
into
and
xor
jae
pop
insb
mov
dec
out
inc
or
mov
test
hlt
lahf
mov
cmp
mov
sub
shrb
mov
mov
in
add
cltd
mov
shlb
loope
pop
inc
js
pop
loope
lods
hlt
incl
call
push
outsl
orl
jmp
loope
jmp
rorb
cld
mov
inc
out
fdivl
add
cmpsb
mov
cltd
bnd
jp
out
push
and
cld
xchg
push
clc
inc
and
scas
or
xchg
outsl
loope
mov
sub
mov
test
jge
es
repz
jmp
shl
frstor
rorb
sbb
cmpsl
inc
leave
push
lds
add
cmp
mov
pop
cld
loopne
popf
mov
mov
inc
xor
test
pop
xchg
shl
mov
clc
sti
jns
and
and
jl
popf
push
call
es
mov
push
test
xchg
movsb
ss
loope
icebp
mov
outsl
jb
aam
push
pop
das
adc
aas
movsl
sbb
mov
sbb
inc
imul
cmpsb
call
sub
leave
insl
sbb
loope
pslld
das
rcrl
hlt
in
jl
jl
loopne
out
movsl
test
out
pop
imul
jae
fldt
dec
insl
xchg
and
mov
movsb
imul
sub
in
jnp
mov
negl
cmp
sub
stc
pop
inc
xchg
lcall
push
das
icebp
cmp
mov
jmp
mov
leave
sub
pushf
sbbl
mov
pop
xchg
dec
xor
cmpsb
push
mov
sub
cld
into
mov
or
xor
and
jecxz
scas
popa
inc
out
mov
scas
jg
or
sbb
adc
test
rclb
cmp
cmpsl
repnz
ja
inc
dec
jno
xor
or
popf
adc
idiv
scas
cmp
stos
sbb
mov
cmp
sub
xor
add
jmp
insb
sbb
cmpl
testl
mov
sbb
push
mov
popa
icebp
or
movsb
mov
jne
andb
mov
adc
and
adc
out
cs
dec
and
fsubr
cltd
adcb
ret
push
jno
or
insb
jl
mov
push
inc
dec
lret
fs
int3
dec
sub
lea
jno
cmp
gs
push
cmpsl
cmp
loopne
push
sbb
mov
cmp
xchg
frstor
dec
jno
in
aam
jl
mov
gs
mov
popa
sarl
pop
jecxz
arpl
and
mov
lahf
jg
cmpsl
mov
outsl
xor
stos
xchg
mov
loop
aad
je
pop
mov
lahf
cltd
out
jns
adc
jo
adc
lock
out
pop
push
add
loop
insb
movsb
out
mov
cmp
pop
jmp
mov
inc
xchg
jg
mov
xchg
xchg
and
and
mov
test
pushf
mov
jmp
movsl
nopl
cmp
adc
push
mov
xor
lds
and
adc
popf
test
js
ljmp
cli
idivl
lret
sub
xor
cld
inc
mov
add
lret
ljmp
push
mov
and
out
pop
lock
inc
or
stos
int
int
rol
cmp
sahf
cmp
in
mov
cmp
fiadds
add
arpl
xlat
shll
cmp
push
push
inc
sub
fsub
in
shll
popf
add
jl
cmp
js
repnz
jb
test
push
call
xchg
xchg
xchg
test
pushl
jle
aaa
sub
repnz
or
adc
pushf
mov
inc
pusha
pop
lock
pop
or
fwait
push
sahf
inc
mov
arpl
mov
or
dec
pusha
xchg
or
jne
popf
fnsave
mov
test
add
adc
cmpsl
jmp
dec
xor
xor
shl
sbb
test
cli
ret
test
sub
xchg
dec
loopne
int
rcrb
cld
xchg
adcl
orl
dec
push
cmp
adcb
adc
fadds
scas
jb
add
pop
pop
movsl
jnp
in
iret
repz
mov
jg
dec
pop
cltd
arpl
flds
pop
shlb
push
jo
das
adc
lds
ficompl
fisubs
in
mov
outsl
mov
fisttpll
mov
sbb
xor
or
xchg
dec
imul
test
cmp
add
not
cmp
inc
clc
cmc
in
test
insb
adc
xor
push
xchg
jnp
fsts
dec
push
mov
jle
sub
lret
lret
out
or
repnz
and
in
push
mov
lock
cmc
push
jmp
lods
test
in
or
cmp
mov
mov
mov
sbb
aad
mov
int3
jg
mov
jno
loope
pushl
fwait
lret
imulb
pop
test
js
pop
pop
imul
mov
push
movsb
std
filds
mov
insl
inc
dec
push
xor
dec
repz
rorb
xor
xchg
mov
testb
lods
dec
rcll
mov
aam
push
outsb
outsb
mov
push
pop
push
scas
jecxz
cmc
ljmp
sbb
lcall
push
cld
cmp
repz
sub
popa
fistps
add
or
xchg
dec
sub
mov
mov
mov
cmpsl
insb
push
jb
push
aam
in
xchg
sub
in
cmpsl
mov
jl
adc
iret
js
xor
int
and
pop
adc
xor
adc
sub
mov
cld
cltd
push
xchg
inc
pop
sar
mov
add
int
pop
push
pop
mov
jns,pn
inc
sbb
jno
pop
lods
sub
sbb
inc
xchg
jns
sub
sbb
cli
cli
mov
inc
addr16
fs
xchg
loop
adcl
push
push
ret
push
pop
loope
push
xor
stc
xchg
push
cld
repnz
out
in
jno
fildl
and
out
xchg
dec
insl
sub
test
out
stos
icebp
push
cmp
xor
mov
cmpsb
cltd
mov
iret
inc
mov
cld
sbbb
lods
pop
sub
cs
jg
pop
and
inc
xchg
xor
cmpsb
ret
imul
push
stos
and
cld
sbb
testb
inc
sub
cmc
imul
mov
xor
adc
mov
iret
leave
xor
mov
cmc
mov
js
mov
push
lock
dec
ds
add
dec
enter
jge
ret
or
into
and
xchg
roll
push
ljmp
cltd
rorb
fwait
lahf
mov
sub
mov
js
imulb
cmovp
pop
xor
add
mov
inc
ret
mov
and
repz
add
aad
sarl
inc
mov
jl
rorl
clc
add
cmpb
shll
or
iret
dec
lret
call
andl
or
mov
das
sbb
mov
mov
adc
push
or
xchg
dec
sbb
xchg
popf
add
mov
xchg
fwait
mov
mov
jge
inc
das
inc
pop
rcl
push
or
repnz
leave
mov
mov
adc
xlat
or
cmpb
mov
test
cmp
xchg
mov
jge
xchg
pop
adc
repnz
inc
add
adc
fsubs
fiaddl
outsl
fucomi
mov
inc
push
mov
inc
and
push
sub
test
mov
lea
stc
adc
jb
push
sub
inc
daa
cmp
and
xor
loope
dec
rcr
add
xlat
test
fdivrl
jl
mov
lock
or
stc
cmp
mov
push
pop
addb
imul
mov
popa
ljmp
fchs
out
inc
cltd
inc
mov
sbb
add
jge
stc
mov
enter
imul
xor
xchg
sbb
and
jp
arpl
mov
pusha
arpl
sbb
add
add
adc
fildll
int
push
daa
pop
pop
dec
ret
in
sbb
out
cs
inc
js
mov
bound
fucomp
das
aaa
pop
inc
stc
aaa
inc
cmp
imul
add
lds
adc
push
pop
or
rcll
cltd
adc
fwait
dec
jo,pt
push
inc
lds
mov
pop
insb
aad
and
add
sub
mov
pop
iret
xchg
mov
stos
out
enter
xor
inc
sbb
icebp
inc
xchg
pushf
fwait
xor
jb
pushf
test
mov
mov
sbb
fisubrs
sub
dec
dec
sbb
mov
xchg
lock
add
jl
inc
test
push
out
ret
xor
xchg
jle
pusha
adc
or
pusha
sbb
push
mov
out
pop
push
pop
or
cmc
je
scas
inc
sbb
lock
xor
lret
sbb
out
or
sti
cmp
pop
fwait
add
pop
pop
jns
inc
xchg
mov
sbb
sbb
adc
and
ds
pop
incl
inc
push
cmpsl
lcall
xor
insl
sbb
lods
test
js
add
testl
mov
sub
and
pop
mov
lahf
pop
pop
aas
call
jmp
movsb
xor
sub
jecxz
gs
adc
and
nop
xchg
ret
fisttps
cmp
out
xchg
adc
lods
or
and
mov
insb
mov
mov
vminps
mov
mov
fildl
inc
cmp
xor
jnp
xchg
jo
pop
lahf
add
xacquire
xorb
nop
fstl
cwtl
scas
push
sub
pop
fmull
cs
pushf
mov
jae
pushf
cli
movsl
mov
js
cmp
xor
adc
xor
shlb
sub
loopne
dec
sbb
orb
mov
call
sub
lret
mov
loopne
lahf
data16
hlt
int
jae
jmp
inc
jno
fcoms
nop
and
pop
or
xor
mov
pop
imull
inc
lods
pop
leave
inc
out
mov
negb
cmpl
les
jb
mov
imul
jle
push
push
jcxz
fucomip
jge
and
mov
xor
stos
sbb
shrb
test
mov
mov
gs
adc
push
mulb
imul
cmpsl
cld
idivl
in
sbbb
dec
cli
sbb
insb
sub
mov
sub
int
divl
xor
enter
fmuls
mov
shlb
jg
push
ficompl
jo
loope
xchg
xchg
sarl
stos
scas
leave
das
pop
xchg
sbb
shl
pop
dec
xchg
mov
mov
in
movsb
out
sbb
flds
out
pop
and
lcall
pushf
mov
iret
xchg
shll
mov
dec
jmp
mov
rcrl
and
repnz
aad
movsl
mov
aas
shll
pop
sbb
in
std
mov
jmp
xchg
mov
aad
lea
insb
xor
movups
xchg
loope
lret
add
adc
push
repnz
xor
dec
test
sbb
sub
add
xor
jns
sub
sub
sahf
imul
cmp
push
sbb
in
int3
sub
xchg
sbbl
cmpsb
outsl
inc
and
pop
adc
es
fs
shrb
jae
hlt
lahf
sub
cmp
aaa
mov
lea
xor
rcrw
jmp
int
or
lahf
clc
ffree
mov
loope
in
add
mov
xlat
in
or
push
popa
ljmp
mov
and
adc
stos
sbb
push
pop
movsb
ret
jecxz
icebp
cmp
adc
xchg
sub
and
push
fdiv
adc
icebp
push
daa
adc
mov
movsb
insl
fistpll
cmp
mov
add
adc
jp
and
mov
mov
cld
arpl
fldenv
inc
add
push
out
xchg
xor
call
xor
mov
mul
test
inc
adc
dec
pop
mov
inc
mov
adc
dec
sub
and
mov
hlt
test
lods
xorl
add
cli
mov
std
push
mov
adcl
pop
mov
out
pop
mov
inc
jp
xchg
lock
jle
push
clc
add
xor
inc
cld
push
jbe
sbb
sahf
out
sub
xor
mov
into
ret
dec
xor
aad
mov
je
xor
mov
sbb
dec
xor
imul
lahf
cmpsl
xchg
mov
rcll
inc
pop
sahf
fsts
iret
into
inc
outsl
mov
inc
xchg
pop
jmp
sahf
dec
xor
mov
cli
push
dec
pop
test
test
mov
mov
std
cmpb
add
inc
fwait
adc
mov
daa
pusha
pop
out
popf
push
lcall
mov
js
pop
hlt
mov
lret
push
mov
out
clc
insl
xor
std
mov
lods
inc
mov
pushf
addr16
inc
pop
add
rol
mov
xchg
mov
test
push
adc
jns
outsl
loop
adc
push
das
imul
mov
decl
call
int3
std
sbb
and
jmp
enter
adc
std
loope
cmp
pop
shlb
lret
jnp
sbb
or
in
mov
ds
sbb
sbb
or
cli
cs
push
mov
mov
iret
lods
lds
xchg
mov
frstpm(287
cmpsb
call
imul
mov
jg
xchg
lods
rol
rcr
xor
mov
push
adc
out
or
xor
ds
cld
mov
shll
ds
add
pop
inc
cmp
daa
bound
cmp
pop
andl
and
push
jae
adc
out
les
push
shrb
aas
mov
push
push
sbb
ljmp
mov
sbb
pop
or
test
push
cmp
jbe
sahf
xor
lahf
fwait
incb
aad
fcmovnbe
push
push
mov
lods
xchg
pop
dec
hlt
mov
loope,pt
lock
jmp
out
mov
add
pop
xchg
xor
dec
out
pop
insb
pop
lods
xor
mov
hlt
lock
divb
sub
std
and
sbb
das
push
dec
ds
cmp
pop
scas
sahf
and
adc
mov
aas
mov
fiaddl
jne
push
add
xor
repnz
sbb
insl
fldcw
pop
mov
mov
test
scas
cmpsl
test
and
or
jg
lret
cwtl
dec
cltd
sub
adc
out
dec
push
push
ss
cwtl
test
dec
inc
cmp
in
ss
mov
pop
xor
mov
jbe
clc
dec
sbb
pop
insl
jg
push
fimuls
je
in
addb
push
cld
push
mov
adc
mov
icebp
icebp
int
cmpb
inc
movsl
inc
dec
or
cmp
jge
pop
pop
fnclex
cwtl
test
push
xchg
xor
insl
es
out
fs
out
mov
js
dec
repnz
fmuls
mov
push
lahf
add
cmpsl
push
sti
rclb
dec
arpl
daa
pop
xchg
mov
mov
mov
stc
sarb
insl
leave
call
pop
mov
push
mov
outsl
cmp
add
clts
in
mov
cli
and
fs
cmp
jb
cltd
data16
stos
repz
jle
mov
js
fnstenv
out
ja
inc
scas
mov
mov
mov
fdivrs
xchg
fsubrp
mov
ds
roll
lcall
xchg
sbb
hlt
jb
inc
out
adc
pop
leave
test
mov
push
cli
mov
push
dec
scas
data16
subl
notl
into
and
push
jns
lret
aad
out
fwait
hlt
jo
shr
sub
stos
mov
mov
mov
lret
add
mov
sbb
jo
pop
push
or
int
xchg
ret
mov
rcll
cmp
subl
ja
xchg
outsb
decb
and
mov
cs
inc
pop
jb
fwait
ret
sub
test
mov
push
inc
es
push
xchg
filds
call
icebp
mov
inc
push
mov
out
cli
mov
aam
test
mov
sub
idivb
cmc
and
and
fisubs
pmaddwd
fistpll
stos
jp
mov
loopne
dec
int3
sub
in
or
inc
mov
movb
mov
das
movsl
inc
sbb
repz
sbb
and
xchg
int3
xor
mov
fdivrs
test
and
addr16
lret
xchg
or
popa
fsubrs
stc
adc
mov
jge
mov
scas
push
cmovb
sub
fsubp
cmp
mov
outsb
je
cli
add
add
mov
mov
jnp
in
pop
mov
xchg
lods
jle
or
inc
lds
xchg
stos
dec
lock
xchg
push
sbb
push
cmp
dec
pop
sub
dec
bound
shlb
rcrl
add
push
in
test
fwait
cmp
jb
popa
cwtl
jo
pop
mov
bound
repz
push
nop
pusha
add
or
fsubl
jg
movsb
and
pop
jnp
and
pop
push
icebp
push
popf
push
push
rolb
psrlw
jg
jae
jg
adc
adc
push
in
xor
arpl
inc
fisubl
pop
imul
sti
sbb
call
loopne
lock
cmp
inc
cmc
mov
sarl
fstps
mov
or
or
aam
push
icebp
add
je
ss
pop
ja
repz
add
mov
push
push
stc
enter
mov
sub
push
pop
iret
outsb
popf
cmc
repz
inc
inc
push
out
inc
scas
lret
lahf
xor
das
jnp
or
xchg
cmc
inc
mov
pop
sub
jns,pt
mov
rclb
pop
fwait
mov
or
and
and
aam
mov
sahf
mov
lret
dec
mov
stos
sbb
flds
sub
cmp
icebp
or
xor
sbb
andnps
lret
add
idivb
popa
cwtl
mov
xchg
sahf
out
xor
adc
sub
inc
pushf
ljmp
lahf
pushf
mov
loope
inc
enter
or
call
pop
popa
scas
mov
xor
arpl
and
and
insb
fisubl
sbb
cmp
xchg
inc
mov
cmp
call
mov
loopne
mov
fldl
arpl
lret
leave
jnp
add
call
shrb
jp
stos
xchg
push
dec
push
push
cmp
jle
jns
push
cmp
push
cmc
mov
push
add
inc
mov
bswap
fwait
sbb
lods
inc
js
adc
inc
and
adcl
dec
popa
stos
ljmp
push
shll
dec
cwtl
fsubp
cmp
in
aad
pop
add
cld
add
adc
inc
dec
scas
arpl
sbb
mov
add
aam
cmp
clc
xchg
mull
mov
dec
jg
cmp
ds
jp
sub
lea
cli
cs
cmc
push
sarl
pop
mov
adc
sub
stos
imul
mov
in
std
sbb
add
clc
stc
gs
testl
jbe
fs
mov
cmpsb
sahf
insb
xor
leave
cmc
mov
fsts
in
cltd
and
jb
jmp
outsl
lock
xor
fwait
xchg
in
adc
jg
int
dec
loope
cltd
loope,pt
xchg
out
mov
pop
mov
test
mov
outsl
sbbb
lods
adc
mull
jns
jg
xchg
jge
mov
push
addr16
xlat
cmp
fisttpll
es
mov
lds
mov
push
jb
add
ja
push
adc
add
mov
xor
push
aaa
lods
pop
mov
mov
push
mov
and
cmp
fisttpll
push
pop
dec
fs
and
mov
lds
add
jmp
mov
jnp,pn
test
adc
fstpt
imul
add
xorl
jae
mov
jg
xchg
scas
mov
test
mov
fisttpl
xchg
pop
sarb
std
out
xchg
cld
sbb
pushl
hlt
push
sbb
mov
nop
pop
shrl
aam
arpl
ds
pop
or
test
push
test
fstl
and
push
cmp
int3
add
xchg
or
ret
dec
cmp
mov
pop
jae
int3
faddl
pop
lds
dec
mov
mov
out
mov
fs
pop
push
aad
sbb
popa
cmp
xor
sti
cs
dec
shlb
insb
loope
popa
inc
pop
pop
lcall
lcall
nop
shrl
mov
inc
pop
test
push
cmp
inc
iret
aad
or
xchg
adc
fidivs
mov
adc
mov
mov
xchg
or
mulb
sbb
jg
aas
lea
pusha
insl
or
icebp
mov
rorb
adc
imul
inc
and
aas
imul
mov
dec
fucomip
adc
loop
mov
cld
call
mov
jp
into
and
and
jle
cmpb
push
cmovp
shll
pop
cs
ffree
ss
adc
loopne
sbb
aas
jl
add
push
cmp
inc
out
cmpl
out
repnz
pusha
mov
lods
dec
xor
xor
xor
cmpsl
push
mov
lea
imulb
adc
outsl
jmp
fldl
lret
jbe
in
js
inc
xor
sahf
pop
fnstenv
xorl
push
das
out
xor
lds
sub
jns
test
rcrl
and
pushf
push
les
out
mov
int
mov
ljmp
push
les
icebp
sub
ret
mov
call
jmp
dec
jb
dec
pop
sti
jmp
dec
movsl
dec
mov
leave
lahf
jge
repnz
jge
and
xor
jns
pushf
daa
in
mov
out
add
add
fucomip
pop
jns
sbb
mov
dec
sti
and
scas
add
mov
loope
pushf
jno
addr16
push
out
mov
out
or
mull
cmp
fidivs
or
dec
leave
inc
pop
xchg
nop
pop
push
in
imul
sub
sbbl
dec
mov
add
ret
jge
aam
jns
mov
pop
fnstsw
daa
pop
pop
and
loopne
lcall
les
xor
insb
jle
or
movsl
jne
mov
repnz
ja
xor
inc
push
inc
je
push
dec
dec
ja
pop
add
mov
sub
pop
fstl
ret
jbe
or
scas
sar
popaw
mov
test
add
lcall
outsb
jb
pusha
cmp
lahf
stc
add
sbb
ss
inc
fwait
scas
shlb
or
dec
lret
std
xor
push
and
and
popf
xor
push
icebp
push
jns
outsl
iret
aad
lock
mov
cmp
pop
inc
adc
std
test
cmp
shll
into
cs
mov
mov
cli
or
in
push
adc
cmpl
cmpb
cld
push
repz
hlt
mov
push
jnp
daa
cmp
pop
shl
rcrl
mov
aaa
imulb
adc
aaa
iret
push
and
and
scas
testl
rol
jp
pop
sbb
sub
xchg
xor
ficoms
ja
imul
or
mov
add
cwtl
jg
sub
hlt
push
jno
loopne
xor
ds
mov
xchg
bound
pop
rcrl
insb
cli
das
jg
xchg
sbb
enter
sub
nop
in
sti
lret
pop
stc
mov
dec
shll
or
add
and
xor
iret
xor
push
push
push
cmpsb
lods
xor
and
gs
arpl
js
cmp
push
jle
pop
out
pop
jmp
adc
or
push
lock
rep
mov
pop
sbb
ret
sub
xchg
sahf
ds
adc
rcrb
popf
lret
repnz
lcall
xchg
or
imul
movsb
rcll
adc
fsubs
popf
push
or
push
std
xchg
inc
pop
add
adcb
jge
sti
jnp
push
xchg
sbb
ds
jmp
inc
cmp
lock
mov
clc
outsb
out
add
mov
push
sbb
int
movsl
xor
or
xor
lret
push
rclb
fsubl
xor
adcl
fisubrs
imul
adc
mov
je
andl
mov
lret
movsl
ret
mov
cmp
xor
out
fstl
jb
adc
fdivr
and
dec
mov
xchg
adc
adc
xchg
lea
daa
test
or
inc
repz
dec
popf
iret
cld
mov
pop
les
imul
push
sarb
push
push
xor
dec
mov
xor
adc
daa
loop
xor
push
or
pop
or
or
mov
add
pop
std
jnp
sbb
fbld
movd
dec
pop
scas
mov
jne
lret
mov
add
int3
push
in
insl
subl
int3
jmp
aam
or
aaa
ret
ljmp
cli
adc
jle
xor
aas
in
mov
cmovg
or
or
jnp
cltd
add
dec
push
sar
shlb
mov
or
push
loope
in
sbb
outsb
dec
pop
push
inc
out
sbb
lock
push
push
pop
loopne
stc
inc
add
fwait
push
in
mov
or
not
and
lods
sub
lea
dec
sahf
rcl
and
enter
hlt
popa
mov
jno
notb
mov
cs
jae
sub
xor
adc
push
add
add
insl
fistpl
loop
test
cmpsl
push
dec
outsl
sbb
out
mov
mov
mov
add
xlat
add
cld
adc
push
dec
ret
cmp
dec
xchg
popf
jnp
fwait
push
imul
ljmp
cmp
jo
dec
ja
enter
sub
xor
fmull
inc
sub
fisttps
cmp
enter
mov
mov
adc
push
int
inc
or
ret
inc
fcomi
loope
loopne
iret
sbb
in
adc
xchg
in
movsb
lods
sahf
fsubs
dec
xorb
movntps
adc
adc
loop
div
leave
jb
in
test
outsb
cmp
decl
cmc
clc
xor
mov
mov
cmc
pop
iret
sbb
mov
xor
outsl
xchg
shlb
lret
pop
pavgw
xchg
sbb
daa
shrl
loop
push
fistps
cmp
or
mov
cmp
test
dec
adc
pop
dec
adc
and
aam
mov
sub
push
leave
subb
pop
xchg
ss
sbb
push
push
pushf
int3
push
jecxz
stos
or
cwtl
push
or
sub
pop
jl
cmp
inc
inc
rorb
lret
or
jl
popf
mov
sti
and
mov
enter
fwait
cmp
or
pop
stos
in
jge
gs
jns,pn
push
stos
sbb
aas
lcall
pop
mov
mov
dec
cmp
fsub
mov
pop
and
jmp
jbe
push
xor
lcall
adcl
xor
in
arpl
push
mov
xor
loopne
inc
sti
mov
ret
fbstp
push
mov
or
add
hlt
push
std
shrl
imul
pop
mov
or
or
mov
arpl
adc
xchg
dec
nop
jae
mov
and
data16
xchg
add
movsb
cmp
lret
xchg
gs
add
or
popa
pusha
and
jp
ss
jo
xchg
loope
jno
repnz
nop
jmp
fs
push
push
add
fldcw
fnstenv
sti
inc
ret
out
lcall
sbb
mov
adc
sbb
xchg
pushf
shrb
stos
ret
iret
mov
inc
out
loopne
jbe
xchg
push
mov
xor
stos
leave
shll
pop
in
int
add
or
inc
or
xchg
pop
mov
ret
cmpsb
fbstp
push
js
cld
mov
test
mov
stos
je
mov
jbe
ds
lods
in
in
mov
cmpb
les
mov
jle
hlt
push
ljmp
mov
adc
cmpb
insl
xor
into
gs
rcll
push
mov
pusha
jl
or
inc
and
xchg
cmp
movl
cmpsl
jbe
cmpsl
cmp
lock
hlt
cmp
loope
inc
mov
cmp
ret
cld
loop
lock
lds
inc
push
in
pop
in
push
fsubp
adc
hlt
mov
push
jno
test
or
cmp
mov
jp
dec
leave
mov
jns
not
push
out
pop
lods
enter
outsl
jns
int3
fisubrs
fdivl
mov
sahf
jae
test
push
inc
pushf
loop
jb
push
mov
jns
imul
dec
cmp
addr16
seta
push
ljmp
or
and
jbe
inc
push
xor
xorl
mov
push
adc
push
pop
cmpsl
mov
int
nop
iret
scas
push
fsubrl
xchg
lahf
pusha
add
sbb
loop
fisubrs
int
lods
test
push
mov
or
les
mov
push
popf
aad
push
sub
aas
mov
xchg
mov
add
je
dec
rorl
xchg
das
xchg
pop
ret
ds
sti
sbb
push
mov
lods
idivl
cld
fisubrs
test
sub
push
rcrl
push
cmpsl
scas
mov
sub
pop
xchg
popf
fucomip
in
sbb
lret
mov
cli
mov
or
pop
insl
mov
jb
sahf
aas
cwtl
rcl
sub
dec
stos
daa
inc
xchg
jl,pn
and
pop
lods
lcall
jecxz
rorb
lcall
sbb
sar
cmpsl
mov
adc
cwtl
inc
sbb
stos
inc
aam
in
sbb
test
loop
xlat
and
mov
enter
inc
mov
lds
jns
dec
jge
scas
rcr
jl
in
loope
xchg
pop
cmpb
insb
push
inc
push
lcall
int
das
pop
iret
gs
sbb
lock
movsb
clc
xchg
test
xchg
sub
mov
fucomp
add
mov
add
lods
xor
test
or
pop
or
mov
out
xor
xor
sub
mov
jb
shll
push
or
lret
sahf
and
std
popf
push
bound
std
in
sti
dec
aad
mov
pop
lds
movl
fninit
cs
xchg
xchg
pop
lret
pop
fadd
xchg
das
xor
sub
adc
in
pop
ss
adc
mov
sarb
jbe
sub
jnp
ret
xchg
adc
popf
dec
aad
je
mov
cmpl
into
xor
jmp
test
cltd
pop
test
repnz
out
loopne
fstps
or
mov
push
mov
lret
jo
lea
add
adc
mov
in
test
shr
cs
sbb
ds
sbb
outsl
jg
dec
mov
lds
push
cmp
xchg
imul
or
aas
lahf
imul
imul
lods
cld
sub
xor
push
adc
mov
lahf
xchg
dec
js
insb
mov
icebp
adc
add
out
lcall
pop
mov
fistpll
adc
insb
ja
andb
xor
aam
mov
leavew
mov
data16
or
out
mov
jmp
inc
pop
mov
fcmovnb
je
sbb
push
leave
sti
movsl
out
std
jmp
aad
mov
or
mul
xor
pop
in
daa
sbb
xlat
imul
test
sti
xchg
mov
dec
in
sub
inc
jne
inc
stos
xchg
lret
or
lock
pushf
push
or
mov
pop
mov
mov
and
push
jne
lahf
adc
adc
mov
stos
xchg
and
xor
int
mov
and
lods
push
pop
mov
out
out
pop
inc
repz
xor
or
jb
int
subb
decl
cli
mov
mov
outsb
xchg
add
scas
xlat
pop
in
xor
test
or
sahf
xchg
jns
cmp
insl
xchg
cld
sub
add
inc
mov
lcall
mov
pop
mov
fists
and
in
leave
addr16
xlat
jg
addr16
lcall
popw
dec
xchg
iret
ret
repnz
mov
fs
jg
sbb
stos
dec
push
fnstcw
cli
or
lea
cmp
push
sub
std
fwait
lar
addb
inc
jecxz
sti
inc
mov
add
lods
insl
mov
mov
mov
cld
enter
jecxz
jno
or
sbb
scas
pop
inc
push
mov
cmpsl
arpl
add
aad
inc
insb
aam
repz
arpl
add
mov
jno
rolb
push
mov
test
xchg
imul
sti
push
jb
xor
xlat
les
mov
les
pop
in
push
jne
pushf
cmp
data16
add
xlat
or
popa
inc
sti
sbb
mov
and
mov
adc
push
sub
es
loop
call
loopne
cmpl
fildl
jp
dec
shrw
cli
ret
inc
sbbl
or
xchg
xorl
or
ja
int
outsb
jmp
sub
cwtl
iret
scas
aaa
xor
dec
adc
lds
pop
xchg
jns
icebp
adc
jmp
pushl
inc
inc
xor
add
lahf
push
cltd
xchg
mov
mov
adc
inc
and
dec
pop
mov
and
and
ljmp
add
mov
inc
scas
push
push
shl
test
cmp
pop
push
fisttpll
dec
gs
stos
xor
fbld
mov
mov
fwait
test
loopne
outsl
mov
inc
jae
push
sub
pop
sub
jecxz
push
xlat
lret
outsl
adcb
push
xor
fwait
sbbb
outsb
push
dec
cmpsl
push
stos
push
sbb
popf
or
adc
sub
adc
mov
xchg
xchg
movsl
mov
lea
and
jns
mov
sbb
div
jnp,pt
push
pop
mov
jp
pop
in
jae
mov
ret
and
add
jne
test
loop
repz
es
mov
cmc
add
clc
xor
int3
sub
push
or
ret
cmp
pop
inc
dec
and
insb
insb
setge
gs
sub
xchg
std
jle
mov
xchg
icebp
mov
xor
imul
in
movsl
jp
fidivl
add
fcoml
mov
call
shl
nopl
or
jge
lock
xor
mov
mov
cmp
dec
pop
pop
mov
mov
xor
stc
push
mov
lcall
cmp
lret
dec
xchg
inc
aaa
jb
xor
lds
jl
sarl
insl
sbb
clc
xchg
popa
int3
push
dec
mov
fwait
and
je
xor
and
lods
packssdw
test
jecxz
adc
xchg
test
loopne
fs
xchg
dec
cmc
and
clc
cmp
xor
cltd
testb
push
push
test
test
stc
shll
outsb
push
loopne
pop
sub
xor
stos
jbe
mov
push
mov
dec
add
xchg
cs
and
add
push
repnz
jne
clc
sarl
mov
aad
adc
loope
and
subl
add
lahf
stos
fadds
pop
dec
xor
and
jge
shll
sub
xchg
and
ss
pusha
jecxz
push
pop
adc
inc
dec
dec
mov
mov
loop
pop
ja
fldl
mov
daa
cltd
adc
jns
xchg
fwait
rep
cmp
add
idivb
dec
idivl
pop
jmp
mov
jg
rolb
mov
sahf
push
subl
adc
outsb
ss
into
fs
xor
clc
push
and
in
scas
xor
mov
sbb
pusha
aad
fmuls
or
in
and
ret
push
addb
sub
dec
jnp
cs
mov
cwtl
mov
iret
push
jnp
jg
inc
inc
jns
mov
jp
mov
lahf
mov
test
imul
in
inc
jg
fiadds
decl
leave
bound
into
pop
add
loop
adc
mov
sub
mov
inc
mov
fistl
nop
sbb
xor
mov
into
iret
or
adc
loope
adc
pop
das
test
pushf
jne
cmp
mov
out
or
les
pop
mov
cmc
adc
xorps
arpl
outsb
in
add
add
or
xor
out
mov
shll
inc
addr16
out
xchg
mov
xor
mov
fwait
adc
push
mov
mov
in
lods
subl
out
push
sti
jb,pt
inc
mov
sbb
hlt
testb
shr
cmpl
cwtl
stc
mov
lods
ds
cmp
ja
dec
jecxz
ret
pop
push
popa
jle
jmp
popa
data16
addr16
jp
or
leave
adc
cmpsl
cmp
mov
add
fstpt
lea
cs
outsb
scas
imul
movsb
sub
push
dec
inc
or
arpl
dec
and
jge
popf
mov
xchg
ficoms
insl
imul
arpl
daa
add
dec
out
insl
lahf
jp
sub
push
push
or
xchg
xchg
rcrb
sub
loopne
and
cmp
popa
sbb
mov
jmp
fcoml
fldt
xlat
sahf
push
cmp
loop
adc
cmp
pop
scas
inc
push
push
adc
ret
sti
insb
dec
outsb
fs
sbb
jo
adc
pop
pop
add
pop
xchg
sti
ds
popa
scas
adc
movsb
xchg
lcall
or
mov
cmp
push
dec
pushf
aam
adc
jb
pop
popa
inc
repnz
int3
add
imul
ja
xor
shll
xor
xchg
pop
addr16
fbld
shlb
sbb
push
add
es
pop
aad
xor
mov
ds
mov
je
xchg
repz
pushf
dec
iret
adc
xchg
insb
fsubs
lds
inc
imul
dec
mov
mov
mov
xchg
out
sbb
pmaxub
and
pop
fstpl
push
in
outsb
adc
push
in
xlat
xchg
mov
cmp
pop
ss
xchg
xor
sbb
push
orl
dec
mov
test
clc
rcrb
imul
cmp
inc
dec
mov
popf
xor
xor
movsb
cltd
pinsrw
push
inc
fs
insb
sub
sbb
lods
jbe
in
push
es
xor
xchg
adc
ret
xchg
mov
sbb
das
in
dec
fimuls
jecxz
jo
mov
andb
xor
pop
or
rcl
cli
fwait
add
std
out
insb
push
mov
gs
fwait
mov
call
jecxz
dec
lcall
rcll
js
sbb
add
adc
or
aaa
jg
cmp
outsb
xlat
jb
pop
mov
cmpsl
stc
push
clc
inc
cmpsl
dec
sbb
or
and
pop
push
adc
inc
clc
jmp
sub
pop
mov
xor
hlt
and
icebp
fwait
sbb
or
aas
mov
add
loope
sar
out
fwait
or
inc
fimull
inc
lret
mov
inc
inc
ljmp
cmpsb
rorl
xor
scas
fidivrl
jnp
jle
call
dec
ss
fmull
inc
jmp
lahf
sbb
cmp
mov
dec
fdivs
popa
push
dec
pop
mov
xchg
and
push
sahf
and
in
rorb
data16
lret
scas
out
ss
mov
push
les
sub
dec
jl
mov
and
sub
repnz
and
xchg
cmp
cmp
fcoml
cmp
mov
sbb
fidivs
mov
ret
mov
dec
mov
and
jle
int3
or
mov
mov
rcrb
gs
popf
lret
xchg
test
pop
and
test
int3
mov
call
lods
rorl
dec
mov
push
sbb
or
jb
dec
out
sub
aas
testb
adc
and
push
cmp
sub
xchg
pop
lods
push
and
push
mov
in
test
aas
insl
fidivrs
push
shll
mov
xor
int3
aad
add
imul
cmpsb
outsl
leave
cmc
or
pop
dec
mov
enter
pop
std
scas
cwtl
addl
in
mov
enter
mov
es
pop
mov
neg
or
xchg
sub
sub
xchg
or
scas
das
shl
lret
test
jmp
fwait
jae
shlb
inc
bound
xchg
push
sbb
ja
mov
mov
daa
scas
ret
mov
test
cli
mov
insl
lea
cwtl
jns
or
inc
push
ret
repnz
insb
mov
hlt
or
inc
add
and
sbb
sbb
xchg
inc
ret
jg
shll
int
test
add
xor
enter
jl
or
fisubrs
iret
fmulp
or
adc
cmc
mov
pop
jne
and
ret
repz
pop
testb
lret
mov
es
push
xor
jae
mov
popa
xchg
loop
xchg
xchg
push
nop
cmp
and
hlt
add
int
mov
mov
fsubs
and
rcll
mov
lcall
xor
xor
jecxz
js
fildll
sbb
fldenv
ds
ja
popa
pusha
je
sti
andl
inc
rep
mov
xchg
push
fistl
leave
cmp
mov
jl
cli
cmp
sub
pop
shl
stc
xor
adc
push
fwait
sbb
inc
int
enter
inc
mov
fwait
das
sti
fs
in
sbb
inc
mov
test
rorl
sarl
and
ret
mov
pop
jb
sub
push
dec
shrb
icebp
pop
push
and
sahf
enter
cli
pushf
pop
pop
adc
mov
sub
mov
lcall
inc
and
popa
dec
jl
dec
shll
pop
inc
ljmp
sti
inc
sbb
movsb
loope
sbb
notb
mov
fiaddl
mov
rcl
mov
dec
testl
ljmp
dec
mov
cmp
lret
loopne
push
dec
out
int
pop
mov
lea
pusha
in
shrb
lock
push
out
mov
or
and
xchg
hlt
dec
adc
pop
or
aaa
mov
inc
scas
xlat
arpl
sahf
mov
push
jo
lea
sub
mov
mov
xor
add
loope
cs
xchg
mov
mov
nop
insb
jb
daa
gs
jle
xor
jmp
and
out
aas
fs
ljmp
xchg
adc
mov
and
insb
mov
movsb
insb
or
sub
imul
in
stos
add
mov
jp
outsb
call
jb
aas
xchg
roll
popf
push
hlt
aam
lods
mov
jge
test
and
add
popf
adc
fbstp
adc
cmp
clc
pop
push
aaa
xchg
mov
or
sbb
cmpl
mov
or
lcall
pop
or
ljmp
fcomps
rorl
loope
insb
xchg
stos
mov
jno
ljmp
lods
fsub
in
daa
inc
test
pop
dec
dec
jo
jo
mov
sbb
mov
jmp
pusha
in
stos
aas
out
push
mov
in
aam
sub
mov
xor
int3
push
lock
out
mov
jo
scas
or
jmp
data16
mov
xor
hlt
sub
shlb
push
iret
jg
push
les
rorl
xchg
add
and
adc
push
bound
xor
jge
js
call
add
pop
adc
sbb
fstpt
aas
shll
mov
pop
ret
push
addr16
cmpsb
lea
adc
pop
mov
mov
xor
ja
jge
pop
mov
push
pushf
lret
rcrb
mov
push
push
fnstenv
lock
mov
lods
add
shrb
insl
dec
dec
add
shld
jl,pt
xchg
cmp
bound
push
leave
jae
pop
xchg
or
adc
flds
leave
in
cmc
lock
test
add
into
xchg
mov
pop
mov
pop
mov
mov
ret
popf
pop
cmp
insb
insb
push
mov
das
fcompl
jmp
in
dec
test
loop
sarb
mov
add
out
jg
aas
dec
xchg
adc
cmp
or
lods
imul
test
jae
pop
loope
loope
add
outsl
sbb
or
mov
std
loope
aas
mov
fdivrs
lods
or
adc
and
mov
mov
ds
out
jo
mov
dec
push
dec
push
enter
sub
shll
into
cmp
es
cmpsl
cli
fdivrs
xor
push
jl
add
stc
faddl
jo
push
ja
pop
xchg
movsl
bnd
fistpll
daa
inc
repnz
leave
adc
pop
fbstp
inc
inc
ffreep
xchg
jg
aam
jo
sub
push
std
data16
or
xor
stos
mov
sbb
shrl
sub
push
inc
pop
adc
popa
int
cmpsl
add
xor
daa
adc
sahf
jae
cmp
lret
fistpl
and
test
jmp
inc
pop
xchg
pop
lret
and
ja
leave
xchg
jle
mulb
jecxz
mov
pop
lea
jmp
mov
idivl
mov
lea
hlt
and
mov
mov
pop
in
scas
mov
mul
popa
imul
andl
pop
jg
sarl
imul
jns
fld
in
jmp
cmp
jmp
mov
adc
jnp
mov
sbb
mov
add
enter
cmpl
adc
outsb
jg
jns
imul
pusha
in
add
inc
inc
mov
sbb
and
loop
and
repz
inc
sti
lahf
inc
int
aas
dec
out
push
mov
cs
std
addb
pusha
iret
push
test
mov
push
sbb
leave
out
js
rolb
inc
shrl
mov
sbb
and
mov
test
push
js
aad
shlb
in
push
int3
repnz
and
fisubs
mov
add
bound
decl
push
sub
sbb
fcompl
push
pop
stos
jns
loope
pop
push
rcll
cli
movsl
cmc
mov
sti
xchg
out
sbb
out
clc
enter
jnp
jnp
stc
xor
shrb
cmp
fwait
nop
movsl
cmpsb
add
inc
xlat
mov
jp
sahf
and
insb
out
add
sahf
into
inc
lcall
jb
sub
adc
and
loopne
and
loop
stc
inc
cmc
pop
test
ja
js
loopne
lahf
jo
ja
or
fucomi
jb
cmp
add
clc
push
or
pushf
shl
push
sti
decb
mov
or
out
fisttps
sbb
bound
cli
cmp
adc
cmpsb
das
int3
jbe
add
jmp
add
xor
lea
insl
jmp
xchg
popf
mov
repnz
test
push
fcomp
lcall
test
xchg
daa
xor
in
inc
stc
arpl
push
sbb
into
mov
test
into
shl
fs
repz
stos
insb
sbbb
jl
push
ficoms
xchg
cmp
jns
or
movsb
inc
mov
dec
add
sbb
add
faddl
xor
add
stos
mov
inc
in
mov
jl
addl
adc
cs
cs
pop
xor
aam
ficompl
stc
movsl
dec
std
push
lods
inc
hlt
gs
pop
cmpsb
lretw
jp
rorl
mov
shrb
cmpsl
cs
add
pop
movsl
out
lcall
xchg
pop
mov
rsqrtps
arpl
dec
lret
arpl
dec
mov
int
push
push
or
cmp
cwtl
cmp
lods
push
inc
dec
cmp
jmp
mov
rcrl
addr16
xor
mov
ja
pop
push
add
jg
stos
add
pusha
lret
xor
push
arpl
mov
push
test
aam
outsl
xchg
add
and
out
lret
inc
jnp
and
sbb
or
les
into
cli
add
sub
or
imul
mov
shlb
push
in
loope
add
cmp
mov
icebp
add
movb
mov
aam
and
in
movsl
adc
outsb
adc
stos
cmpsl
loopne
int3
test
ss
mov
mov
adc
pop
into
punpckhdq
jle
mov
jo
mov
subl
push
fidivs
test
inc
aad
cmpsb
test
pushf
idivb
xchg
push
aas
gs
jae
jmp
fldenv
add
sbbl
push
lcall
xor
add
lfs
daa
jp
sbb
dec
ret
pusha
into
clc
inc
mov
in
fcmovnbe
pop
lock
arpl
fwait
adc
shll
call
xchg
std
xchg
repz
movsl
dec
pop
insl
lods
les
lds
aad
negl
test
or
leave
test
adc
mov
lret
adc
subb
mov
lcall
js
jl
scas
cwtl
jp
fisttpll
add
clc
fisubrl
outsb
cmp
xor
push
mov
xchg
mov
pop
push
cltd
leave
pop
mov
out
icebp
or
fsubrs
rcll
loopne
push
pusha
leave
jae
sub
mov
inc
push
arpl
jecxz
aad
mov
inc
pop
pop
test
xchg
lods
push
mov
xor
std
sub
test
mov
pushf
stos
cmpsl
insb
dec
ss
filds
adc
lea
icebp
icebp
movsb
sahf
mov
fcoms
push
loopne
les
mov
mov
mov
popa
rorl
int3
sub
leave
jae
mov
inc
imul
insl
aas
incb
cmp
in
in
jo
ljmp
pop
cwtl
aad
add
fisubrl
data16
mov
icebp
mov
bound
lret
mov
jno
push
out
out
fstpt
mov
scas
sub
xchg
push
or
lret
sahf
sbb
xor
movsb
mov
lock
pushf
jb
neg
xchg
add
insb
sbb
outsl
xlat
xchg
dec
xor
out
jnp
adc
add
stos
call
pusha
push
mov
jb
add
jg
gs
aaa
lahf
call
jecxz
pop
cmpsl
stc
mov
xchg
out
fs
ret
pop
fistl
adc
mov
xchg
dec
or
xor
daa
push
and
insb
cltd
pop
mov
add
sub
add
mov
and
icebp
movsl
push
dec
movsl
jb
fimuls
lcall
sbb
aas
ds
mov
or
testl
and
test
ret
jecxz
adc
jp
jno
scas
pop
cli
cmc
jbe
ret
mov
pop
sub
fldcw
sub
and
xchg
inc
jg
shll
mov
pop
xor
xor
cmpsl
xor
cmp
mov
nop
dec
lahf
ret
mov
mov
loope
jo
loope
push
mov
sarl
out
pop
mov
iret
loop
cltd
mov
inc
addr16
mov
test
fs
dec
pop
cmp
outsb
inc
jecxz
in
outsb
xor
rcll
fsub
imul
cmp
dec
insl
add
jge
mov
inc
mov
lret
scas
adc
mov
pop
shll
in
cltd
mov
inc
dec
incl
sti
push
adc
es
cltd
les
imul
sub
es
fistl
and
jl
mov
lcall
mov
push
cmp
cmp
jo
das
sbb
scas
sbb
cmp
cli
cmpl
fsubr
dec
mov
sbb
out
aad
mov
lods
nop
imul
cmp
push
sub
inc
lret
cmpsl
or
pop
dec
ret
inc
xor
sub
inc
lock
rcrl
or
jmp
cmp
push
xchg
jnp
bnd
popa
sub
aas
inc
aas
insb
xchg
shl
jbe
xor
into
adc
sti
dec
inc
loopne
jno
cmpsb
jnp
hlt
sub
sbb
mov
xor
outsl
mov
lods
fsts
pop
daa
lahf
jle
push
cld
sarb
push
jbe
in
jae
fwait
or
out
push
test
sub
mov
pop
pop
cmp
mov
daa
push
xchg
pop
xor
mov
sbb
jge
call
pop
cmpb
add
stos
scas
mov
pusha
or
stc
mov
and
or
and
mov
push
or
daa
in
mov
and
orl
dec
pop
mov
daa
mov
adc
push
jmp
lret
insl
shll
outsl
xchg
inc
ret
dec
loopne
test
sub
add
stc
movsb
inc
push
inc
mov
lret
mov
jns
ja
data16
shll
and
mov
sbb
stos
dec
sbb
jb
ljmp
and
pop
jmp
mov
add
int3
or
jae
inc
xlat
adc
xchg
xor
jnp
jp
mov
jbe
loope
rorb
int
ret
test
add
dec
mov
fs
loop
mov
fwait
sbbl
xchg
push
jge
mov
xor
xchg
sbb
ljmp
cli
xchg
and
imul
fs
outsb
outsl
hlt
or
test
and
jne
xor
xchg
cmp
mov
lods
in
ja
faddl
and
xchg
push
je
int
jle
dec
sti
cmpsb
out
iret
out
aas
add
xchg
cmp
push
mov
pop
dec
stos
imul
jp
add
jg
sahf
cmp
aas
test
push
adc
sarb
mov
cmp
xor
aaa
ss
inc
fs
jp
iret
push
hlt
mov
mov
and
lea
jge
mov
pop
outsb
mov
sbb
fwait
jae
sub
fwait
inc
mov
mulb
mov
test
cmp
lock
ror
fimull
ja
add
cmp
lods
fildll
add
and
sub
fdivrl
sbb
or
int3
lea
cli
stos
mov
jp
inc
std
pop
add
or
mov
lock
sar
rcr
jmp
mov
inc
addr16
je
cltd
xor
in
push
out
rcrb
dec
xchg
sub
xor
add
in
pusha
nop
shr
pushf
jmp
jne
push
mov
loope
in
cmp
scas
push
pop
push
rcrl
inc
sbb
sbb
daa
test
cmp
dec
into
jnp
jmp
js
add
sbb
out
push
popa
daa
mov
fadds
xchg
inc
push
pop
adc
push
jl
ja
insl
das
cmp
xor
mov
add
mov
add
mov
incl
andb
ja
xchg
js
movsb
icebp
push
mov
enter
mov
adc
insl
das
cmp
xor
rorb
or
mov
outsl
inc
jne
adc
enter
shr
sbb
rolb
lods
in
lods
add
fisttps
popa
mov
sbbl
test
and
aas
inc
mov
adc
test
jns
sbb
sti
sbb
add
lahf
sbb
mov
inc
sarb
push
inc
mov
cmpsl
aad
je
leave
pop
push
xor
push
cmpb
push
dec
repz
shr
push
rol
call
push
daa
es
mov
loopne
mov
imul
ljmp
test
push
out
out
pop
dec
icebp
dec
fs
and
ret
into
sub
ja
or
dec
jg
pop
xchg
dec
xchg
and
imul
cs
push
mov
jge
add
lods
shlb
push
inc
sti
adc
push
cmpsl
popf
nop
cli
sub
or
sub
js
imul
repnz
sahf
bound
pop
and
push
bound
lods
fistpl
ss
fdivrl
adc
pop
aaa
pop
pop
jb
js
or
push
jo
xchg
mov
ja
adc
mov
jl
sub
fwait
in
sbb
xchg
aas
dec
pop
sbb
jne
sub
and
push
pop
movsl
dec
je
cmpsb
xchg
and
sbb
mulb
xchg
shr
fwait
adc
fiaddl
leave
rcll
outsl
leave
sbb
mov
les
sbb
sbbl
jle
arpl
dec
cld
or
xchg
or
out
push
fdivrp
add
data16
mov
ret
mov
adc
xchg
gs
add
dec
adc
mov
insl
add
scas
and
sbb
mov
mov
fimull
lods
nop
xor
das
mov
adc
fldcw
movsl
movsw
hlt
mov
jne
adc
sub
mov
jb
cltd
push
ret
xchg
lock
int3
and
cltd
cs
mov
pop
add
test
das
inc
sub
dec
lret
fcmovu
mov
dec
push
mov
adc
sbb
scas
mov
jmp
shlb
xorb
push
xor
sub
and
je
aam
pushf
ret
mov
push
xchg
hlt
xor
fwait
pop
mov
jb
or
xor
push
pop
inc
xchg
ret
ljmp
jne
push
into
aad
cmpsl
and
int
xor
test
fimuls
add
cmp
dec
cmpsb
outsb
insl
pusha
loopne
cmp
cmp
sbb
jge
add
and
or
inc
dec
in
into
xor
jp
sbb
into
add
test
and
dec
inc
mov
xchg
sub
out
mov
push
shr
add
jge
loopne
movsb
shr
dec
jne
dec
lret
mov
and
stc
notb
mov
xchg
inc
add
test
sbb
das
inc
sahf
inc
stos
xor
push
cmp
push
jg
mov
xor
dec
div
adc
inc
cmp
cmp
xchg
idivb
xchg
pop
sbbl
cld
cs
scas
dec
inc
cmp
ljmp
mov
dec
jns
dec
sub
add
repz
push
stos
jecxz
mov
add
call
fistpll
cld
js
out
fcomip
sub
push
mov
sub
push
cmp
and
sbb
gs
dec
jge
lret
cmp
lock
dec
mov
pop
xlat
repz
cmp
jle
add
sahf
cmp
xchg
pop
fwait
and
add
adc
xchg
xchg
imul
xchg
les
and
inc
in
inc
jno
cmp
iret
aad
testb
mov
push
mov
popf
cmp
loopne
dec
in
mov
pushf
stos
xchg
out
ljmp
fstp
push
cwtl
repz
iret
sti
cmp
mov
cwtl
jnp
lret
inc
not
sbb
xchg
mov
xor
ds
add
adc
sub
sbb
jge
push
test
addb
sbb
add
fxam
cmp
xor
mov
pop
test
in
iret
dec
ret
addr16
bound
xchg
arpl
push
test
fdivl
cmp
out
mov
pop
add
inc
jnp
and
push
adc
imul
dec
sub
inc
jecxz
mov
mov
inc
push
xchg
lea
xchg
enter
movsb
scas
lods
mov
jo
mov
adc
loopne
loopne
sbb
mov
push
jno
lcall
mov
pop
or
adc
pop
scas
xchg
fwait
lods
push
icebp
cli
data16
ficoms
lods
js
je
call
bound
dec
mov
leave
add
imul
sahf
int
outsb
imul
sub
iret
mov
push
dec
add
clc
es
aam
push
push
pop
inc
inc
jno
xor
stc
mov
inc
mov
xchg
cmpsb
xor
pop
cmp
pop
cmp
sar
adc
mov
xchg
mov
into
jg
adc
sti
in
bound
jl
dec
pop
jmp
nop
into
into
dec
xchg
stc
stos
lcall
adc
adc
mov
clc
aam
add
scas
xor
idivl
dec
mov
pusha
xor
test
jo
popf
mov
mov
mov
bound
inc
pop
xchg
repnz
icebp
and
mov
mov
push
jp
stos
mov
addb
dec
xchg
mov
scas
dec
jo
xchg
es
mov
mov
sti
sbb
mov
xor
sahf
out
adc
xor
cltd
fisttps
das
or
lods
and
mov
out
insb
or
mov
or
push
or
mov
jg
and
xor
lcall
xor
fdivs
mov
cmp
and
jmp
mov
fnstenv
mov
jmp
jne
xor
push
test
mov
xchg
sub
insl
push
mov
push
cmp
dec
push
loopne
pop
mov
out
inc
and
adc
pop
mov
xor
mov
rorl
mov
test
jge
jo
jp
push
mov
test
inc
jne
push
out
icebp
jbe
outsb
mov
pop
mov
mov
xchg
pop
enter
sahf
fs
andl
ret
ljmp
xor
mov
dec
lcall
aas
cmp
fsubrs
pop
sbb
mov
add
gs
cli
shlb
xchg
cmpsl
jp
ret
mov
lods
lea
xor
cmpsb
addr16
push
xor
mov
xor
iret
lock
xchg
jno
int3
push
push
jae
aas
in
aaa
jle
in
cmpsb
dec
ss
xchg
or
jno
xchg
shlb
test
int3
adc
jge
outsb
mov
mov
addr16
xchg
cmp
and
dec
pushf
adc
xchg
xchg
fs
mov
andl
fcmovbe
fcomp
sub
add
add
mov
mov
mov
fisubs
clc
mov
out
xchg
insb
mov
jg
fldt
fisubs
mov
adc
mov
addb
test
pop
adc
sbb
push
and
frstor
or
jp,pt
push
sarl
iret
push
sbb
shll
sbb
lcall
pop
enter
cmp
sti
insl
pop
mov
inc
mov
sbb
adc
ror
cmpsb
lds
fisttpl
out
xchg
jg
rolb
ljmp
push
aam
pop
adcl
fmull
jmp
les
ret
test
in
lret
inc
pop
bound
int
imul
jge
push
ja
jb
stos
jns
ret
das
loopne
cmpsl
test
cltd
fstpl
rorl
movsl
dec
rcr
add
inc
icebp
in
inc
pop
ret
std
add
xchg
and
pop
pop
add
into
loopne
popa
pop
into
fdivr
inc
inc
aam
dec
fwait
loop
push
fnstsw
mov
in
out
pop
inc
mov
push
or
out
cli
xchg
adc
std
imul
jp
testl
in
mov
pushf
fidivl
test
add
jg
inc
add
cmp
cmpsl
pop
pop
add
cmp
inc
xor
lcall
in
int3
verr
sub
insl
dec
jg
jle
pop
imul
sub
scas
aaa
add
je
mov
imul
lock
loopne
push
cmc
dec
adc
ret
mov
jle
loop
push
std
add
lea
push
dec
add
push
mov
pop
mov
push
mov
mov
addr16
jmp
aaa
xchg
mov
lcall
fldt
imul
fdivrs
dec
negb
les
mov
dec
push
aad
add
ss
std
cltd
adc
mov
jp
sbb
fs
popa
or
loop
adc
dec
fdivrl
cmpsb
xchg
iret
iret
loop
rclb
das
mov
repnz
mov
push
rcl
sbb
outsl
push
enter
movsb
cltd
shl
jp
sbb
sub
xor
iret
adc
sub
jg
in
push
add
dec
test
push
xchg
add
dec
cs
mov
fwait
mov
push
xor
sbb
mov
and
lods
adc
call
mov
aaa
mov
lahf
pusha
hlt
mov
adc
daa
fisubrl
iret
test
pop
push
mov
ja
loopne
ljmp
sbb
shlb
mov
xchg
stc
sbb
adc
jae
dec
push
add
and
xor
mov
jmp
cmpsl
jecxz
and
out
inc
sbb
mov
adc
push
cmp
imul
in
mov
fildll
pop
and
or
fcompl
sub
lahf
mov
sbb
lock
mov
jns
pusha
pop
jno
push
orb
scas
or
push
xor
push
stc
mov
cs
mov
sbb
lahf
dec
xchg
scas
and
dec
test
jns
bound
lret
mov
mov
push
cli
outsl
adc
pop
push
adc
or
dec
cmp
jl
dec
pop
dec
push
das
mov
in
pusha
sti
std
jo
negl
add
inc
ljmp
cli
pop
and
outsl
sub
sbb
xchg
push
shll
add
push
inc
lds
inc
ret
aad
clc
mov
sub
sub
outsb
pop
in
rcrl
inc
lods
sbb
mov
ret
addl
popf
repz
push
jnp
lods
add
inc
addr16
scas
sub
add
jnp
jle
mov
sbb
adc
ss
ret
pop
sbb
out
mov
xchg
fidivrl
push
jmp
push
sbb
or
loop
xorl
scas
lahf
lcall
xchg
push
adc
pop
inc
aas
in
iret
sub
cltd
mov
jp
add
lcall
xchg
dec
fstpl
lret
repnz
mov
ja
mov
sbb
out
ror
loope
ret
roll
loop
sbb
mov
stc
add
movb
mov
jo
pop
int3
inc
or
int3
dec
int
adc
pop
scas
insl
mov
or
stos
and
lods
inc
or
or
out
arpl
fnstenv
test
aam
test
das
mov
hlt
mov
adc
es
xchg
add
mov
dec
cmpsl
sbb
push
insb
add
aas
jae
dec
jle
rol
xchg
cmpl
lock
clc
pop
push
arpl
push
outsb
int3
mov
dec
cli
loopne
cmpsl
jmp
cltd
xor
cmpb
jg
jbe,pn
xor
loopne
lock
sub
jge
les
mov
outsl
push
loop
push
push
sbb
sarb
mov
or
ss
int3
inc
cmp
loope
jns
mov
xchg
aas
or
stos
pop
call
pop
loop
ret
divl
scas
xchg
out
dec
add
outsl
loope
sti
daa
outsl
int
mov
xlat
mov
cwtl
leave
xchg
cmp
xchg
test
xchg
pop
sbb
gs
ficomps
negb
xchg
inc
mov
stos
inc
lea
inc
dec
lds
lea
mov
push
imul
imul
mov
add
outsl
aaa
mov
out
xchg
and
frstor
dec
cmpsl
sbb
in
pop
adc
popa
rorb
cmp
push
pop
pop
lds
push
cmp
lahf
inc
sub
fwait
in
cmp
jl
inc
sub
js
stos
cmp
fiaddl
cld
stc
fcmovnu
imul
mov
mov
loopne
jmp
jmp
repz
cs
cmp
lods
jmp
sbb
and
cld
jge
xor
movsb
mov
outsb
sbb
cmpl
xchg
jb
jg
in
addr16
arpl
shll
sub
xor
sub
and
imul
or
add
inc
jne
cmp
repnz
push
pop
shrb
fs
xor
jg
ret
and
enter
mov
push
loope
addr16
fidivrl
pop
dec
scas
jl
xchg
in
and
or
and
outsb
inc
inc
mov
sti
lea
cli
jmp
sub
mov
inc
add
and
clc
xchg
xchg
add
jg
aam
xchg
aas
mov
xchg
jp
movsb
ret
mov
adc
std
cmp
pop
decb
sbbw
add
lods
testb
fnstcw
and
sbb
fiaddl
lds
jmp
sub
mov
aad
push
mov
addr16
adc
roll
inc
icebp
push
insb
pushf
mov
xchg
jle
xchg
sbb
into
adc
movsb
pop
test
push
inc
push
les
ret
test
or
in
mov
pop
push
int
and
dec
jmp
push
cmp
clc
es
pop
and
xchg
lods
pop
bound
add
cmp
sbb
dec
mov
aaa
inc
sbb
gs
and
fisttps
cmovs
scas
fwait
mov
adcb
xorl
hlt
test
add
stos
ficompl
scas
pop
mov
push
mov
mov
pop
in
imul
xor
and
enter
push
cmpsb
out
popa
xor
jns
js
fcomi
pop
fisttpl
ret
or
mov
mov
pop
popf
lds
stos
int
push
das
fisubl
imull
dec
xchg
stos
mov
movsb
sbb
sbb
sub
lds
fbstp
lcall
cmp
sarb
shlb
orl
mov
pop
not
sbb
imul
test
mov
jno
imul
sub
arpl
pop
iret
mov
loop
aas
mov
je
out
fnstcw
out
mov
ret
jmp
loop
mov
xchg
sahf
xchg
pop
add
pop
mov
hlt
xchg
into
stos
cmpsb
or
jmp
cld
dec
hlt
adc
pop
cltd
xchg
add
test
xor
jne
sub
jnp
pop
fadds
mov
lea
mov
jp
aas
pop
cmp
cmp
js
mov
outsb
test
mov
ret
sbb
repnz
push
xor
jg
jbe
testl
or
pop
cmp
push
cmpsl
shll
inc
nop
mov
inc
xchg
add
add
or
lods
popf
rcrl
mov
std
shll
mov
fisttps
andl
hlt
fisttpll
mov
sahf
or
out
mov
xor
out
jne,pt
jbe
aam
inc
insb
push
sbb
into
fwait
aas
scas
mov
inc
hlt
push
xchg
mov
or
push
pusha
push
cmp
mov
test
pop
lea
add
ficoms
adc
divl
push
pop
into
shrb
xchg
iret
and
insb
in
sbb
xor
out
ret
jmp
pop
fdivs
mov
lods
mov
xor
jbe
hlt
mov
scas
or
cmpsl
lret
test
cmp
sbb
xchg
popa
out
data16
test
insb
inc
js
lahf
add
or
pusha
scas
adc
xchg
pop
jecxz
ja
bound
mov
xor
inc
xor
mov
xchg
pop
scas
jo
arpl
cld
addr16
mov
sahf
sub
jbe
lods
lret
cmp
lock
push
xchg
pop
pop
cmp
pmaxub
sbb
stc
mov
sub
xor
test
out
add
push
push
mov
ss
mov
push
sub
jp
adc
pextrw
test
faddl
bound
out
xchg
cmpsl
sbb
xor
cvttps2pi
fucomp
daa
add
repnz
jge
shrb
xchg
push
jmp
cs
add
loop
je
loope
test
jg
stos
int
mov
sbb
mov
clc
push
pop
icebp
hlt
or
jno
inc
mov
popl
data16
jecxz
les
fidivrs
mov
rorl
mov
cltd
dec
js
push
pop
sbb
adc
int
jbe
sbb
cmc
rolb
int
not
xchg
arpl
mov
jne
js
xor
pop
sub
cwtl
aad
ret
fucomi
mov
popa
daa
pop
cmp
sbb
inc
xchg
test
and
mov
pushf
clc
xlat
int
jnp
sbb
fnsave
push
push
pop
dec
pop
mov
cli
addr16
adc
mov
pop
jecxz
mov
xor
mov
push
add
insb
nop
lcall
sub
repz
int3
add
movsb
add
ds
out
and
popa
add
shr
daa
fmulp
dec
in
lahf
and
inc
loop
jge
mov
stc
xchg
sub
sub
jecxz
jl
pop
ljmp
push
jl
xor
repnz
pop
mov
xchg
test
int3
sti
in
xchg
test
cmc
and
xchg
cltd
cmp
rolb
das
add
pop
cltd
leave
adc
imul
cltd
cmpsl
and
lods
adc
enter
sub
sbb
mov
outsl
cmp
sub
jp
adcl
arpl
je
cmp
mov
scas
mov
int3
inc
lods
imul
and
xchg
gs
inc
lea
gs
sbb
mov
push
out
ja
inc
mov
test
pop
inc
sub
adc
xor
imul
cmp
or
pop
xchg
push
shll
sbb
inc
imul
cltd
shrd
push
mov
imul
mov
xchg
jmp
mov
out
and
mov
xchg
scas
lahf
push
movsb
outsb
sahf
out
lds
mov
or
fisubrs
shlb
lea
fdivs
hlt
andl
cmpsb
adc
frstor
or
pop
push
notb
and
pop
cs
mov
inc
fucomip
std
imul
aaa
stos
inc
adc
adcb
imulb
call
arpl
push
addr16
cmp
in
and
aaa
adc
cmpsb
aam
lahf
loopne
mov
mov
imul
mov
sbb
jle
subb
cmc
cmp
xor
imul
pop
cltd
push
xchg
shrl
pop
mov
jo
or
dec
imul
inc
pop
mov
movsb
iret
dec
imulb
mov
fxam
cld
pop
mov
mov
sarb
or
xor
xchg
sub
push
mov
loope
out
add
pop
popf
sbb
adcl
mov
or
enter
inc
cmp
jo
push
ja
icebp
xchg
sahf
xor
mov
push
scas
mov
jg
in
cwtl
dec
fcompl
mov
lods
cld
movsb
mov
js
jo
pop
or
and
sahf
inc
sub
mov
push
adc
cmpsb
inc
add
pop
test
mov
inc
lea
sarb
outsb
cltd
les
in
push
in
adc
jle
jne
rolb
push
je
inc
cmp
fadds
xorb
add
sbb
jo
and
xchg
sbb
shl
je
insb
ljmp
rorl
push
cmp
test
repz
or
sub
push
aaa
xchg
daa
hlt
sti
or
stc
cmp
jge
push
aaa
adc
sbb
dec
mov
mov
or
lcall
decl
int
xor
stos
xchg
mov
cltd
mov
mov
inc
leave
cmp
cli
scas
pop
pushf
mov
inc
pop
mov
mov
shr
jnp
outsl
inc
sbb
or
push
xchg
xchg
jmp
inc
ret
call
push
sbb
add
and
daa
test
cmpsl
pop
lock
fildll
fbld
adcb
xor
pop
jb
cli
addb
sub
sahf
jl
mov
cmp
sbb
nop
fiadds
cli
lcall
push
popf
shlb
cmp
ds
rclb
outsb
popa
call
push
xchg
imul
imul
mov
shlb
fucom
mov
inc
sbb
jp
mov
xchg
lock
arpl
call
setne
movsl
das
xchg
in
repz
pop
sbbl
incl
or
scas
mov
enter
into
inc
call
mov
add
sbb
jne
or
adc
pop
pop
mov
lds
xchg
xor
pop
fwait
cmpsl
push
iret
push
xor
inc
lods
fadd
sahf
mov
mov
mov
cmp
and
or
int3
ret
mov
iret
cmc
js
movsl
cmpsb
lock
sbb
scas
mov
push
cs
push
sub
pop
dec
cli
jno
mov
rcl
icebp
in
jae
clc
addr16
pop
cli
jb
std
arpl
mov
jge
fcomps
mov
add
fidivs
popf
inc
in
gs
addr16
gs
push
xchg
or
add
popf
mov
or
roll
or
push
or
inc
lret
dec
add
push
fs
pop
idivl
mov
movsb
inc
bound
icebp
dec
pop
push
aaa
leave
jnp
jnp
fs
add
jae
and
test
mov
adc
les
jne
scas
adcl
test
jbe
daa
mov
roll
pop
pusha
mov
cld
push
mov
pushf
and
lret
enter
outsl
notl
inc
in
sbb
movsl
jmp
xchg
loopne
jg
sbb
mov
jge
movsl
andb
mov
jno
pushf
icebp
pop
mov
mov
cmp
lods
or
pop
mov
sbb
and
shlb
adc
mov
outsl
push
lahf
push
adc
hlt
add
mov
mov
sbb
mov
cld
or
sbbl
or
xchg
pop
mov
or
adc
mov
gs
loopne
jae
adc
mov
mov
pop
and
pop
cmp
push
adc
mov
sub
jb
xor
fsubs
lds
mov
cmp
sub
pushf
or
push
out
or
pop
in
inc
sbb
xor
sub
test
in
adc
cmc
ret
fidivrl
jg
out
outsl
fildl
nop
mov
mov
cltd
pushf
loop
sub
insb
out
fldcw
aaa
mov
sub
mov
outsl
bound
ds
orl
push
mov
test
sub
fsubrp
loopne
pop
outsl
sti
mov
or
mov
push
sub
and
outsl
or
mov
les
mov
jecxz
stos
dec
xchg
add
and
pop
loopne
mov
leave
aaa
enter
mov
das
add
in
and
out
inc
arpl
pop
popf
mov
repnz
mov
test
iret
std
scas
xchg
adc
into
jp
pushf
mov
into
dec
and
or
and
gs
xabort
push
data16
orl
xchg
jle
aam
das
sub
cmpsb
nop
jle
shrb
lret
pop
es
fidivl
ljmp
fdivrl
pop
std
xchg
inc
jo
jbe
jbe
addr16
sarb
mov
cmpb
nop
mov
dec
push
mov
insb
rorl
test
jb
mov
push
fbld
mov
xchg
jnp
mov
mov
jg
stos
pusha
push
inc
jo
xor
push
jnp
imul
popf
ds
stos
adc
pop
push
or
xor
jbe
dec
or
pop
sahf
push
test
int
fwait
mov
lret
fyl2xp1
insl
pop
pop
std
pushf
fmulp
lret
in
adc
dec
test
nop
or
and
lcall
push
sub
mov
adc
repz
xorb
adc
add
mov
adc
jecxz
mov
cmpsb
lock
lret
cmpsb
sbb
in
jb
rolb
cmp
jle
and
pop
pusha
mov
repnz
sbb
jmp
repz
cmpsb
inc
add
movsl
jge
cmp
fisubrl
aas
mov
push
fcmovnbe
adc
mov
add
lock
and
insb
mov
jns
je
and
dec
add
push
test
stos
lret
stc
daa
ss
mov
addr16
sub
mov
push
jg
stc
xchg
in
mov
out
mulb
jae
and
addr16
sub
insb
fisubs
lods
cli
push
movlps
mov
lods
or
add
lock
and
frstor
and
test
push
ljmp
xchg
mov
push
pop
stos
in
jle
push
inc
aas
rorl
fwait
mov
nop
dec
fistps
or
inc
push
push
mov
adc
into
movsb
cltd
pop
sbbl
pop
outsl
addr16
push
push
cmpsb
xorl
fs
cmpsb
cli
and
das
stos
xor
into
xlat
jbe
jle
icebp
mov
mov
sub
adc
adc
insl
test
mov
sub
dec
fcoms
unpcklps
add
xchg
ja
stc
cmc
pop
imul
dec
jp
cmp
imul
pop
pop
xorb
pop
aad
push
testl
in
cld
mov
and
sti
sub
xchg
mov
sub
jmp
je
int3
jmp
outsb
xchg
pop
push
jp
add
xchg
lret
sti
inc
mov
jnp
jge
or
lcall
lods
xchg
adc
dec
mov
push
mov
sti
jno
jb
dec
popa
pop
sub
imul
push
aad
ficompl
dec
popf
nop
pop
clc
out
push
pop
xor
aas
mov
inc
outsb
sbb
mov
push
jno
inc
sbb
rcr
fucomi
inc
lcall
mov
enter
invd
mov
push
jg
push
mov
push
je
sbb
jbe
out
sti
mov
insl
test
add
aam
int3
sbb
and
xchg
pop
cmp
pop
pop
mov
sub
push
cli
mov
add
imul
dec
sub
mov
xchg
mov
pop
ret
stc
les
pop
pop
mov
push
int3
sub
dec
xor
adc
mov
mov
or
cmp
adc
inc
lock
and
pusha
mov
rorl
pop
mov
ss
dec
and
push
pushf
mov
mov
lret
dec
shlb
adc
xlat
scas
xorb
dec
or
aam
mov
in
jle
sbb
pop
repz
add
pusha
out
sub
imulb
ret
hlt
out
adc
add
sub
fcompl
ss
pop
add
jecxz
int
fs
pop
mov
aaa
sarb
pop
push
int3
mov
ret
mov
sbb
cmp
sti
add
push
je
push
and
add
insb
int3
sub
je
jnp
lods
int3
xchg
or
rorl
fidivrl
or
mov
dec
mov
pop
cwtl
inc
adc
rolb
dec
add
pusha
jne
xlat
es
pop
mov
test
sbb
cmp
pop
adc
xchg
imul
add
xor
lds
inc
movlps
out
aas
and
dec
stc
mov
popa
xlat
dec
imul
push
xor
insb
push
cmp
movsl
or
push
sbb
push
out
fcmovbe
dec
movsl
xor
inc
mov
loop
or
into
daa
add
gs
inc
out
mov
out
jmp
stc
lahf
ficoml
mov
jbe
popl
and
in
ss
pusha
pop
add
and
and
or
push
pushf
dec
xchg
rol
mov
sbb
stos
sarl
jo
xchg
imul
cmp
add
jl
lcall
lock
inc
in
dec
mov
inc
and
repnz
mov
loopne
push
dec
sub
lret
mov
add
ret
fwait
cmp
fldl
pop
pop
and
lret
add
fisubrs
arpl
iret
xchg
push
cwtl
popa
adc
sti
pop
dec
jp
out
ss
lds
mov
and
outsb
mov
add
fwait
mov
aaa
lahf
mov
aaa
sub
sbb
xchg
mov
mov
pop
sbb
cmpsb
inc
idiv
push
xchg
jo
xchg
jmp
aam
cmpsb
dec
cmp
dec
xchg
out
out
sarl
mov
mov
push
cmp
lret
hlt
adc
xchg
sub
fiadds
into
dec
out
mov
arpl
iret
or
inc
jb
loop
pop
js
inc
ss
pop
lds
cs
ret
mov
adc
push
xchg
jae
xchg
pop
imul
inc
scas
inc
or
mov
test
xor
push
fs
icebp
imul
sahf
push
es
inc
mov
dec
dec
negb
push
outsb
cmpsb
and
inc
mov
jbe
adc
mov
dec
mov
mov
pop
push
aam
lret
push
imul
aad
pop
mov
cltd
shlb
into
in
pop
test
insb
int3
push
test
out
imul
mov
aam
out
mov
imul
lahf
mov
cmc
mov
lods
mov
jb
mov
mul
mov
rorb
jle
fiadds
dec
lahf
xchg
cmp
xor
push
das
mov
lods
dec
dec
dec
enter
push
das
insl
insb
xchg
dec
sub
or
popa
cmpsb
test
popa
adc
and
or
xchg
and
sbb
adc
gs
shrl
jae
insb
sub
mov
sub
cltd
divb
add
mov
bound
test
cmpsb
adc
ja
cli
inc
lods
cmpsl
ja
xor
pop
fcomps
leave
xor
and
mov
dec
lock
pop
cmp
shrl
dec
out
enter
in
fstpl
fisubrl
mov
fcmovbe
or
data16
sub
insb
sbb
mov
hlt
or
or
repz
inc
cs
mov
nop
or
subb
cmp
pop
mov
arpl
and
rcll
cmp
pop
lea
mov
out
push
jbe
js
testb
pop
cmp
psubw
imul
add
and
sbb
mov
mov
dec
rorl
shlb
sarl
repz
outsl
in
adc
push
mov
shll
insl
ljmp
rcrl
sub
or
aas
sub
out
xchg
mov
adcb
cwtl
rcr
push
lods
add
fs
push
mov
add
lds
mov
stos
jne
adc
jmp
push
jle
aad
mov
adc
pop
scas
mov
cs
aad
xor
movsb
cmp
cld
lret
dec
ljmp
add
xchg
sub
das
lret
popa
in
xchg
nop
stos
in
mov
mov
and
lret
test
and
sahf
inc
jecxz
aaa
lds
mov
shll
jp
add
sbb
mov
sbb
xor
inc
mov
scas
mov
inc
mov
mov
into
ret
dec
imul
into
dec
out
push
add
int3
inc
and
dec
rol
jnp
pop
mov
push
xchg
loope
cwtl
push
mull
sar
fstpt
int3
adc
out
fidivs
or
xchg
lret
ljmp
int3
pop
iret
push
pop
inc
dec
dec
add
int
test
lret
or
push
push
pop
xchg
jl
loopne
mov
movsl
loopne
push
inc
mov
daa
inc
cmc
sti
outsl
push
out
nop
ret
xor
add
cltd
jp
push
ret
pop
iret
xchg
or
sub
dec
or
cmpsb
mov
addr16
cltd
adc
and
es
js
xlat
pop
mov
fisubs
jno
subl
inc
mov
ror
xor
jbe
sub
popa
lea
aam
add
add
mov
lds
xchg
xchg
xchg
cwtl
xchg
mov
cltd
popa
pop
test
or
jb
std
mov
pop
jge
add
rolw
pop
push
add
inc
addr16
cmp
lcall
call
dec
xchg
mov
test
repnz
insl
test
iret
test
jl
ljmp
mov
inc
adc
mov
sbb
mov
ljmp
jne
xchg
orl
mov
jge
xchg
fcoms
mov
jmp
pop
sub
adc
jmp
add
hlt
test
repz
jge
push
mov
subb
fisubl
out
ret
cmp
dec
cmp
dec
rorb
mov
mov
insl
movl
cmpsb
mov
sbb
sub
and
or
arpl
cmpsb
jbe
cmp
inc
mov
call
daa
clc
push
and
adc
xchg
insl
push
dec
test
outsb
mov
pop
mov
mov
and
leave
pop
xlat
sub
mov
jbe
push
pop
sbb
inc
gs
gs
pushf
jb
xor
push
pop
inc
repnz
aaa
mov
mov
xor
mov
or
inc
sub
dec
dec
cmp
lret
loop
outsb
or
roll
int3
pop
pop
push
or
dec
dec
inc
in
sbb
inc
jbe
repz
pop
mov
lock
inc
jne
pop
adc
add
cld
mov
sbb
sbb
jmp
jg
or
sub
dec
dec
shufps
fwait
repnz
lahf
mov
movsb
adc
ja
dec
inc
pop
ret
jnp
out
frstor
movsb
push
sbb
in
and
jg
lds
inc
in
popa
or
mov
dec
arpl
lds
test
rclb
xor
dec
or
cmpsb
lret
gs
out
xor
stos
cld
push
mov
cmp
ja
int3
stc
ja
jns
dec
cmp
push
pop
cmp
push
std
xor
in
ds
mov
ja
xor
xor
stc
lahf
pinsrw
sti
lods
enter
or
cmp
xor
outsl
arpl
nop
ret
lock
sub
xor
mov
popa
scas
mov
dec
mov
pop
add
lahf
pop
mov
dec
push
shl
and
add
dec
sahf
cld
xchg
movsl
xor
add
popf
imul
std
rolb
in
cwtl
sub
sbb
mov
mov
push
mov
insl
ret
mov
sbb
adc
movsl
mov
test
cmp
or
sub
stos
add
xlat
xor
jns
aaa
pushl
ljmp
pop
dec
or
mov
rolb
lahf
and
add
push
andps
out
lret
push
mov
sub
xor
jbe
mov
test
les
and
sahf
sbb
push
pop
stos
jne
pop
sub
and
cs
and
or
xor
cmp
push
clc
mov
fincstp
imul
sub
icebp
mov
cmpl
fwait
decl
sbb
lahf
cmp
cmp
push
std
lock
inc
push
repnz
jnp
cmp
in
xor
dec
js
not
add
xchg
push
sub
add
xchg
cltd
sub
add
jp
push
std
jp
xchg
cmc
pushf
mov
les
aam
outsl
cmp
adc
aam
test
mov
or
lods
and
leave
and
mov
stos
nop
test
fldt
in
cmp
add
xchg
out
jge
out
popf
xlat
push
repz
fstp
dec
inc
dec
cmpsl
add
int
sbb
push
push
sub
leave
lea
mov
fisttpl
dec
xor
xchg
cmpsb
xor
movsb
into
lret
adc
popf
sbbb
cmc
jne
shll
jb
mov
aad
in
repz
push
in
add
fsubr
cltd
shlb
pop
jo
lahf
jnp
jl
or
rclb
outsl
mov
or
adc
sbb
cmp
add
cli
sbb
sub
inc
xchg
int
add
enter
lcall
pop
nop
stos
hlt
xchg
in
add
dec
mov
leave
push
test
mov
lret
sbb
popa
xlat
xor
sbb
je
iret
sti
or
loop
push
pop
movsl
xor
lret
pusha
fnstcw
cld
or
and
aas
push
andb
mov
clc
push
je
xchg
stos
mov
sub
out
out
mov
jbe
movsb
push
mov
orb
or
scas
adc
pop
insb
xchg
out
xchg
mov
mov
mov
adcb
or
pop
bound
gs
add
mov
outsb
dec
mov
sub
and
aam
dec
jmp
cmpsl
int3
or
dec
pop
pop
mov
lods
fnstsw
dec
daa
mov
iret
fwait
divps
cmp
shl
push
xor
sbb
sti
jns
aam
sbb
jns
pop
jbe
push
or
lea
cmpsl
lods
and
jnp
or
out
pop
sub
out
push
inc
push
out
popa
shlb
mov
pop
lahf
xor
xlat
in
pop
cmp
push
or
xchg
aas
xchg
or
sbb
enter
dec
sahf
sbb
stos
adc
xchg
out
pusha
dec
lfs
out
cli
aam
std
pop
add
shrl
jecxz
fisubs
lea
jl
nop
sbb
cmc
push
shl
notl
adc
and
aaa
cmp
xchg
aaa
sbb
aaa
inc
pop
mov
push
jne
daa
xor
test
mov
test
and
mov
enter
orl
mov
lods
lahf
mov
mov
xchg
jne
mov
mov
xor
enter
push
and
lcall
mov
jmp
lds
sti
test
jecxz
daa
in
adc
es
or
or
sub
add
or
cs
adc
outsl
into
xlat
xlat
inc
xor
jg
xor
mov
sbb
xor
dec
adc
sahf
jae
mov
xorl
pop
ret
jne
roll
dec
insb
repnz
aas
mov
cmp
shll
or
leave
aaa
call
mov
mov
push
insl
pop
rorb
sub
mov
lds
cmpsl
and
in
inc
lea
in
dec
jnp
shll
dec
les
mov
jle
and
out
cli
popa
xor
lods
cld
push
sbb
sub
adc
jne
fldl
mov
inc
or
imul
call
lods
adc
es
sahf
push
jo
xchg
or
sbb
rolb
stos
fs
sbb
and
in
inc
xor
inc
mov
pop
dec
adc
sbb
icebp
and
pop
scas
in
mov
add
stos
into
out
pop
dec
jecxz
arpl
jb
sub
sarl
loopne
xchg
inc
xor
sub
adc
aas
cltd
sahf
adc
sahf
lret
jns
xchg
sarl
test
out
and
ja
xchg
and
and
inc
and
mov
and
dec
dec
loope
lods
fwait
jmp
pop
mov
and
inc
xlat
std
xchg
inc
inc
insl
push
fistpl
out
mov
frstor
out
es
pop
cmp
mov
sub
call
sbb
roll
mov
incw
je
ret
enter
pop
fcmovu
inc
dec
pop
hlt
fs
mov
shr
push
or
inc
add
push
push
getsec
adc
movsl
insl
sbb
call
std
ror
xor
mov
add
scas
adcb
imul
stc
cltd
mov
sbb
in
or
in
pop
push
mov
shrl
cld
nop
mov
add
scas
mov
mov
dec
push
test
lahf
imul
andl
or
and
mov
jle
and
dec
cmp
mov
jmp
je
mov
icebp
repnz
lods
dec
push
inc
inc
xor
xchg
ljmp
es
adc
push
push
movsl
out
xchg
or
out
daa
xchg
sub
sub
daa
stos
jmp
ds
stc
mov
loope
dec
adc
mov
push
stos
aaa
repnz
lret
lcall
enter
insb
add
pop
fwait
pop
jnp
pop
ds
xchg
push
inc
sub
ljmp
lea
xchg
mov
mov
fwait
imul
lea
or
or
xchg
das
cmpsl
mov
inc
jmp
push
ror
out
adc
and
and
insb
xchg
pop
stc
icebp
aad
mov
fiaddl
adc
cld
push
push
dec
mov
shll
dec
sub
dec
addr16
les
sub
mov
xor
dec
test
add
cld
repnz
repnz
jno
xor
push
daa
push
insl
mov
adc
inc
call
test
leave
xlat
jae
ss
sahf
stos
mov
jo
cwtl
mov
std
aaa
mov
aaa
mov
xchg
ja
add
sbb
and
test
stc
leave
sar
sub
inc
inc
fisubl
cmp
pop
fdivrs
pop
push
adc
mov
pop
xchg
push
int
jo
pop
lcall
pop
push
cli
push
aam
inc
cwtl
negl
add
in
pop
ret
dec
adc
push
adc
cmp
and
xor
jge
mov
or
in
mov
or
rcl
mov
push
sti
shll
call
subb
fstp
sub
dec
movsb
test
clc
cmpsl
inc
mov
repnz
roll
lods
in
mov
stos
inc
pop
fadd
lds
sub
pushl
push
scas
divb
daa
insb
inc
lahf
lds
daa
addr16
inc
fsubrl
bound
push
std
inc
xlat
pop
cli
hlt
mov
dec
push
xchg
sub
ret
fmull
iret
xchg
inc
xor
adc
loop
fs
cltd
jecxz
mov
pop
sub
aas
push
inc
pusha
xchg
adc
jnp
push
xchg
cs
or
adc
ja
adc
leave
mov
mov
jo
pop
icebp
mov
mov
cltd
cli
ficoms
and
cli
mov
push
mov
push
ja
add
mov
jno
pop
lock
rcr
out
stos
push
mov
mov
jb
add
lock
add
lds
push
mov
in
push
cs
les
out
andb
pop
lcall
xchg
mov
cmp
cmp
out
js
mov
in
mov
pop
cmp
out
int3
xchg
inc
ficompl
stc
or
std
hlt
push
mov
xor
cmpsb
dec
cmp
stc
movsb
cmpsb
add
ss
insl
test
call
into
inc
fsubp
icebp
fwait
sub
lahf
sbb
mov
inc
pop
pop
adc
imul
push
roll
lret
xchg
sbb
loopne
jp
std
inc
std
jbe
dec
lods
repnz
add
ret
push
icebp
mov
add
jnp
sbb
jle
or
addl
jecxz
repnz
aaa
pushf
pushf
and
aad
addr16
xchg
xchg
in
inc
pop
fcomi
in
out
icebp
hlt
shl
in
jg
add
test
cmp
mov
mov
fs
mov
jp
adc
xlat
sub
xor
fisttps
pop
xchg
roll
repnz
sbb
xchg
sub
leave
and
out
pop
out
mov
sahf
sub
in
bound
clc
cltd
jnp
hlt
rcr
pop
in
xor
rorl
ret
mov
fisttps
mov
sub
aas
pop
pop
insl
and
push
fstl
xor
or
jge
jmp
xchg
pop
std
fimuls
addb
sub
dec
outsl
out
jno
mov
xor
cmpsb
lods
or
push
fwait
pop
mov
xchg
dec
xchg
mov
sub
xchg
sbb
iret
icebp
in
outsl
and
pop
jge
jle
cmpsl
mov
mov
mov
mov
idivl
mov
xor
stc
pop
jno
mov
fdivs
xchg
add
xorl
mov
sbb
rorl
out
push
add
adc
lods
jae
loopne
std
sbb
lods
xchg
xor
dec
adc
dec
fldt
cwtl
fs
ret
mov
pushf
cmp
cmc
cld
xor
xor
dec
mov
add
jne
in
shrb
mov
div
mov
push
push
and
jp
int3
xor
xchg
repz
cmpl
ja
lret
ret
popf
inc
push
mov
mov
sbb
rcrl
repz
cld
adc
xchg
inc
cmp
adc
inc
cmp
test
lea
or
inc
call
cmpsb
rcr
leave
mov
fmuls
jbe
lret
lret
cld
movsl
xor
push
inc
fisttps
adc
shl
jnp
push
push
inc
push
inc
dec
push
mov
jno
jne
cli
fsts
pop
ret
xor
test
sbb
pop
fdivrl
add
outsb
out
mov
cld
pop
into
call
lea
sbb
xor
loop
pop
adc
or
mov
out
cmp
push
xchg
clc
jmp
nop
shlb
adc
adc
xchg
cmp
icebp
jle
movsl
insb
cmc
lea
cmp
les
call
xor
sbb
clc
push
outsb
sbb
pop
pop
in
mov
test
jb
push
mov
cmp
and
mov
into
iret
and
pushf
loopne
xor
insl
mov
or
sbb
sbb
pusha
lret
sti
fmull
sti
jg
addb
test
cld
inc
out
cmp
and
sub
xchg
mov
sarb
lds
gs
cs
cmpsb
roll
sbb
mov
xor
popa
pop
sti
inc
fidivs
gs
loopne
out
pushf
insb
and
fcomps
mov
mov
cs
imul
add
sti
sahf
add
js
cmpsl
sti
xor
cs
sub
mov
arpl
jg
mov
sahf
enter
test
daa
insl
or
mov
mov
cld
testl
mov
repz
imul
cli
inc
mov
scas
insl
std
mov
and
sbb
popa
idivl
mov
jg
mov
sub
stos
sub
sub
mov
sub
pop
pushf
test
and
add
pop
xchg
pop
sarl
jb
sbb
fimull
mov
add
mov
arpl
cmp
mov
dec
cmp
imul
jecxz
xchg
xchg
icebp
cmp
outsb
imul
dec
lcall
pop
dec
xchg
push
jl
adc
ljmp
jmp
es
inc
sbb
and
sub
in
loopne
xor
repz
mov
iret
xchg
jge
jg
lea
pop
rcrl
out
or
mov
add
icebp
dec
fdivl
ds
pop
in
mov
mov
test
aad
sbb
and
inc
xchg
lock
inc
xlat
aaa
mov
xor
mov
lret
repnz
inc
idiv
xorl
adc
adc
or
lret
inc
push
arpl
scas
dec
daa
inc
shr
jp
pop
shlb
push
push
push
test
sub
test
cmp
outsl
jno
test
xor
and
fsubrl
mov
push
mov
mov
or
mov
lahf
sbb
loope
add
mov
jo
fidivrs
das
call
sub
in
loope
sbb
pop
xlat
scas
jle
addl
mov
enter
pop
mov
pushf
in
and
add
dec
xchg
sub
xor
adc
fildll
adc
lcall
in
jns
xchg
and
xchg
fdivrs
je
mov
jns
mov
ja
add
sub
and
cmp
adc
ret
imul
test
xor
repz
outsl
sub
cltd
movsl
aad
pop
mov
push
cmp
js
cmpb
sbb
mov
xor
push
arpl
pop
push
leave
push
cmpsl
lret
sbb
inc
cmp
cmp
dec
xlat
cs
insb
mov
rclb
scas
mov
xchg
stos
call
cmp
or
inc
lods
or
arpl
je
pop
xorl
pop
les
inc
movsl
out
dec
andl
push
xchg
fsts
sti
mov
ja
xorl
imul
dec
xchg
in
insb
dec
and
imul
movsb
mov
fstp
or
xchg
aas
scas
mov
push
addr16
das
and
push
or
fwait
mov
mov
adc
je
adc
je
jmp
iret
nop
movsb
cmc
das
dec
test
xlat
repz
lds
mov
pop
adc
mov
or
out
jl
pop
dec
shrb
sub
jmp
int
arpl
in
insl
jp
rcrl
xor
int3
into
inc
cmp
fucomp
and
movsb
xchg
push
shrl
dec
sbb
es
dec
int
jae
stos
in
addl
adc
in
mov
mov
xchg
mov
pop
clc
sub
mov
adc
adc
stos
shlb
add
sbb
mov
jp
lcall
add
js
xlat
mov
pop
push
lahf
lcall
jne
inc
push
xchg
sbb
movsl
xchg
xchg
daa
push
pop
cmp
xor
es
xor
cmp
and
xor
push
imul
ror
sub
push
xchg
adc
sub
fldl2e
add
pushf
ss
push
in
mov
pushf
xchg
sub
mov
fbld
xchg
inc
and
mov
daa
mov
ja
mov
in
movsb
mov
and
mov
popa
rolb
sub
sbb
cli
fistpll
push
adc
ret
out
add
pushf
aas
cmpsl
ret
mov
aas
lods
xor
out
cmp
test
or
pop
lret
mov
cltd
jecxz
addr16
xchg
mov
cmp
add
mov
pop
jns
and
scas
sub
cmpsb
stc
jp
jmp
jmp
add
adc
stos
push
sub
faddl
pop
arpl
loop
inc
sub
scas
outsl
sub
sbb
lret
jno
insl
and
bound
mov
aad
dec
push
fldl
aaa
and
repnz
or
nop
decl
into
or
aas
mov
iret
mov
add
mov
ljmp
sbb
scas
jle
ret
mov
test
or
adc
xor
bound
xchg
jae
int
bound
jmp
ss
adc
push
inc
test
inc
jl
xchg
lods
in
stos
data16
roll
inc
inc
test
mov
add
pop
xorl
movsl
xor
imul
cmp
xor
in
fstpl
push
pop
xchg
sub
dec
and
fwait
push
dec
jle
dec
in
scas
fucom
pop
jecxz
setp
jle
cmpsb
xchg
pop
adc
push
ficompl
ljmp
shrl
inc
add
je
jp
je
out
nop
lcall
fiaddl
pop
pop
iret
ljmp
out
notw
dec
jge
and
outsb
xor
pop
jae
rcrl
sub
dec
scas
sub
ljmp
mov
push
sbb
mov
test
xor
daa
in
xor
orb
add
nop
adc
sub
pop
sub
in
out
hlt
jno
dec
test
imul
lea
jle
or
pop
aas
mov
imul
shll
in
subb
inc
fdivs
and
xchg
push
cmp
adc
daa
dec
ss
sub
mov
lock
xchg
pusha
inc
mov
push
imul
nop
sbb
call
dec
fwait
and
xchg
add
adc
inc
push
insl
sbb
cmp
fcoms
push
jecxz
mov
cmp
fxch
in
sbb
in
xchg
xchg
or
jle
faddl
mov
dec
and
outsb
shlb
or
mov
cmc
add
cmc
sub
sbb
fsts
pop
mov
pop
adc
sbb
icebp
hlt
mov
sbb
and
rolb
faddl
stos
xchg
push
jl
dec
testl
enter
int3
push
push
adc
enter
cmc
repz
jbe
lds
sbbl
cmpsl
mov
int3
adc
and
jne
in
les
push
daa
add
or
aaa
loope
or
dec
iret
push
mov
outsl
mov
call
sti
cmp
shll
xchg
add
ret
inc
lods
or
push
push
cmpb
adc
iret
xchg
std
aaa
mov
xchg
inc
std
sub
or
cmpsb
inc
add
or
es
cmp
outsl
adc
in
or
sbb
push
mov
dec
sahf
jbe
xor
push
cmp
ja
cmp
lret
add
fdivl
fsubrs
test
outsl
mov
push
pop
popa
aad
sti
inc
aad
stos
pushl
xchg
inc
insb
frstor
lock
push
popf
lret
push
fsubp
inc
mov
enter
pop
out
lahf
mov
scas
dec
es
mov
fisttpll
int
push
jae
add
aam
in
lds
sub
nop
scas
movsl
in
icebp
jnp
arpl
xchg
sub
add
jno
cmpsl
xor
out
loopne
cmpsb
shll
cmp
call
push
cltd
lock
inc
jb
outsl
pop
rol
aas
outsl
or
dec
mov
cmpsl
and
stc
stos
jl
and
rorl
outsl
add
lods
sahf
imul
adc
out
shlb
ja
out
pop
inc
xchg
hlt
mov
and
push
pushf
add
cmp
push
stos
adc
cld
cmp
add
popf
dec
in
fwait
mov
gs
stc
pop
jns
xor
insb
xor
mov
adc
add
sbb
adc
push
pop
in
inc
ljmp
insl
sub
rolb
fldt
xor
shll
mov
fists
addr16
stos
and
lahf
iret
jmp
sar
inc
pop
popf
jecxz
dec
jb
shlb
jae
push
lcall
inc
mov
jns
mov
jbe
repnz
test
lahf
loop
fsts
ss
and
cmc
xor
add
stos
add
xchg
outsl
stos
adcb
jmp
das
mull
mov
pushf
fisttpl
orl
pushf
and
xchg
lret
jl
dec
jp
cmp
repnz
sub
cmp
cmc
es
in
mov
sti
cmp
push
or
stos
jae
ficoms
movzbl
sbb
pop
and
mov
sub
gs
lds
xchg
js
icebp
push
ja
jo
add
jnp
mov
aad
out
mov
in
pop
inc
dec
int3
adc
loop
fsts
sub
xor
daa
xor
and
cmp
mov
push
xchg
aaa
and
cltd
adc
mov
sub
cmp
cmp
iret
and
inc
dec
loope
add
cmp
pop
sahf
pop
and
mov
xor
lds
outsb
stc
sub
sub
sbb
pop
int
lock
icebp
push
add
adc
or
in
cmpsb
and
mov
add
aad
jbe
cmpsl
mov
stos
insb
mov
push
pop
movsb
mul
add
mov
sub
dec
or
add
daa
movsb
fdivrl
ret
into
ret
into
cmc
adc
mov
rol
js
or
cld
and
xchg
and
pop
out
sub
mov
mov
pushf
notb
push
outsb
fiaddl
enter
cmp
jge
lock
sbb
mov
iret
or
dec
jle
clc
outsl
xlat
add
lods
das
push
pop
adc
sub
mov
mov
ret
inc
lea
lods
in
pop
mov
les
adc
mov
adc
in
dec
cmp
stos
push
jl
sub
pusha
imul
sbb
dec
xchg
ljmp
sub
pop
push
inc
sbb
xchg
sar
jle
stc
xchg
mov
add
test
sub
jmp
adc
mov
sarb
cmp
pop
aaa
and
mov
in
jo
lret
imul
or
add
aad
push
mulb
inc
mov
stos
outsb
sbb
jecxz,pt
adc
adc
lds
sbb
loop
out
push
scas
mov
cmp
and
ret
mov
sub
nop
push
loopne
add
loopne
push
pusha
mov
stos
xchg
scas
add
xacquire
pop
pop
inc
mov
bound
test
adc
mov
test
mov
aam
sbb
inc
fldl
lea
mov
and
lahf
jnp
mov
jg,pn
and
rol
xchg
xchg
and
jp
sub
iret
call
pop
sar
pop
popf
loop
mov
adc
int
push
jle
insb
decl
mov
out
lea
mov
xlat
mov
jp
arpl
jge
inc
sbb
out
or
test
sbb
and
in
cmp
out
mov
push
push
test
or
cmpsl
dec
fimuls
flds
mov
test
xchg
sarl
push
pop
push
jecxz
cmp
rcl
mov
inc
or
roll
pop
lods
aad
stc
movsl
rorl
call
fwait
cmp
sub
mov
mov
push
inc
ss
mov
das
add
insl
js
test
dec
scas
es
mov
dec
pop
fstp
dec
sub
addb
popa
movsb
stos
div
fs
and
aas
xor
or
ret
out
lret
aas
pop
sbb
dec
inc
xchg
data16
mov
bound
push
andb
cli
add
jl
ffreep
gs
loope
dec
jmp
mov
push
popa
cmp
pop
ljmp
push
cmp
pop
cmc
test
push
fwait
ret
orl
xchg
imul
xor
mov
dec
add
scas
sub
imul
xchg
xchg
xchg
lds
cli
mov
sub
or
shrb
dec
xor
pop
push
sub
ja
inc
cmpb
pop
es
adc
inc
pop
repz
aaa
sub
xchg
shrl
mov
mov
mov
jp
int
mov
mov
hlt
add
sub
xchg
mov
ret
push
pusha
inc
les
pop
idiv
pop
add
fidivrs
push
xchg
jp
movsb
sahf
icebp
push
lcall
push
imul
pop
pop
fsubr
push
lea
cltd
fdivrl
fsubl
push
loopne
cmpsl
imul
cmp
push
outsb
mov
or
push
scas
xchg
and
fiadds
xor
pop
into
or
lods
insb
inc
push
into
fucomip
jbe
jbe
loope
mov
and
dec
mov
stos
testl
xor
mov
sub
movsl
in
add
arpl
sti
orl
stos
cld
ljmp
mov
loop
sbb
and
xor
out
xor
int
jns
int3
cmp
leave
cmp
add
fdiv
int3
sbb
or
ss
adc
cmpl
adc
outsb
out
sbb
pop
aaa
pop
in
shll
stos
pop
mov
sti
jbe
outsb
pop
rorb
sbb
mov
dec
fdivrp
js
testl
mov
loopne
and
stos
mov
cmp
fsubs
cld
fs
ret
push
call
mov
test
orb
ljmp
sbb
xchg
loop
pop
or
jmp
mov
out
aad
insl
rolb
or
aad
es
push
adc
ret
sbb
adc
add
add
or
test
in
ljmp
add
cmp
pop
shll
xor
xchg
xor
sub
mov
out
hlt
insl
xchg
stos
leave
cli
mov
mov
lahf
cmp
rorl
sarb
xchg
mov
adc
fsubrp
and
fiaddl
loopne
cmovle
es
xor
inc
and
jle
fimuls
or
push
pop
fildl
lret
push
jne
or
or
imul
aad
xor
cmp
pushf
ds
stc
es
sbbl
dec
pop
lahf
enter
adc
cmp
test
adc
cmp
fildll
jbe
jbe
andl
xchg
mov
sahf
add
clc
push
jb
dec
sbb
mov
adc
call
test
push
push
push
clc
jge
xchg
push
lcall
insb
mov
push
fstpl
push
dec
sahf
test
call
out
mov
mov
push
xchg
pushf
mov
adc
jp
cmp
fucomi
mov
aas
clc
mov
gs
and
adc
dec
push
fnstcw
popf
aam
jmp
jle
nop
lret
mov
mov
lods
data16
add
lret
loope
sub
pop
sbb
jecxz
stos
call
push
xchg
ja
xlat
mov
in
or
nop
and
sub
push
sbb
dec
int3
jo
push
negb
ja
pop
dec
push
lret
scas
adc
pop
adc
pushf
mov
sub
ljmp
dec
xchg
roll
and
bound
cmp
and
xchg
xchg
and
shr
mov
cmp
mov
and
paddd
ljmp
push
jb
xchg
xchg
mov
test
sti
pop
push
xchg
sbb
jecxz
add
leave
inc
jecxz
aas
nop
ret
mov
mov
cld
xor
popa
fcmovnb
sub
xchg
outsl
and
push
inc
in
out
das
stc
sub
cltd
idivb
sbb
inc
pop
mov
std
repnz
nop
jmp
xor
imul
dec
popf
fbstp
in
insb
dec
pop
dec
leave
subb
insl
inc
xor
pop
cmp
mov
mov
xchg
std
out
add
mov
aas
xchg
and
sub
jl
cltd
bound
rol
mov
xor
enter
repnz
mov
hlt
mov
mov
and
add
fxch
sub
push
jns
ficompl
ja
xchg
mov
jb
adc
pop
dec
imul
enter
mov
cmpsl
enter
sub
jae
aam
aad
in
and
mov
cmpsb
push
push
cwtl
shr
pushl
cmp
dec
jbe
sub
push
push
lcall
adc
cmc
scas
xchg
in
xorl
ficoml
add
decl
mov
jg
xchg
fwait
sub
pop
jg
xchg
fsincos
jne
or
test
inc
ja
mov
mov
inc
jle
lahf
mov
jecxz
int
adc
or
xorb
loop
push
ss
push
pop
pop
in
notb
mov
xchg
push
stos
xlat
ljmp
daa
mov
xorl
add
ret
jb
xor
js
js
push
jne
and
push
inc
stos
push
lods
stos
lcall
sar
pop
test
mov
data16
popa
mov
cmpb
repz
lock
loop
xchg
cmpsb
out
sbb
jne
lds
jbe
mov
popa
jmp
jmp
mov
push
or
push
push
js
adc
sbb
or
loopne
cmpsb
les
pop
or
inc
xor
mov
cmp
xor
rolb
loope
jno
insl
leave
sbb
repz
adc
xor
flds
mov
shrl
aaa
xchg
jno
and
imul
sbb
xchg
mov
lahf
jge
add
outsl
add
cmc
nop
dec
lret
jb
mov
push
mov
inc
lods
mov
push
sti
push
addr16
push
jno
stos
xlat
aad
rcll
outsb
xor
mov
jbe
sub
jnp
insl
adc
jne
fidivl
shl
adc
mov
fsubp
int
sbb
test
pop
clc
mov
lret
ret
push
push
cwtl
mov
mov
xchg
jle
xlat
or
out
ljmp
adc
pop
subb
add
cltd
xor
push
and
sbb
daa
outsb
fisttpl
adc
sub
adc
ja
push
sbb
mov
add
hlt
int3
mov
into
pusha
sub
jle
sbb
aad
mov
xchg
and
and
mov
jns
fstpl
out
mov
shll
call
sbb
mov
aam
filds
push
lret
call
jge
xchg
fisubrl
stos
mov
fidivs
jp
adcb
pop
aam
dec
movsl
js
fimull
imul
iret
inc
sub
or
dec
push
xor
add
mov
and
xchg
sbb
sbb
mov
push
insb
jbe
cwtl
jl
add
iret
rcl
jnp
jp
inc
adc
stos
xchg
push
cmp
add
mov
mov
or
lahf
subb
mov
push
sbb
inc
push
push
inc
sbbb
lret
and
inc
sbb
shlb
jecxz
mov
mov
jnp
sub
lods
mov
push
mov
xchg
sti
pop
push
dec
fmuls
data16
rorl
repz
add
data16
loop
mov
imul
int3
sbb
es
pop
lds
imul
fbld
outsl
out
imulb
fisttps
mov
or
pop
push
stos
and
out
pop
mov
pusha
lcall
nop
jmp
xor
xor
repz
or
test
movl
and
cmpsb
pop
data16
out
outsl
dec
or
xchg
sub
pop
jne
push
jb
bound
and
push
std
popa
cmp
cmpsb
sbb
fdivs
lahf
jne
jl
mov
addr16
fmuls
mov
out
loope
jnp
pop
cmp
xchg
loope
mov
inc
aaa
add
jbe
sbb
and
push
pop
sub
xor
sarl
daa
fistpl
and
mov
sti
adc
xchg
sti
inc
sbb
sbb
movl
repz
fidivrs
leave
into
jle
repz
sti
pop
inc
cs
and
jae
xchg
icebp
xchg
and
xor
jnp
and
xor
shlb
push
js
sub
sbb
pcmpeqw
ja
mov
in
push
mov
int3
ss
pop
cmp
mov
or
sub
insl
test
enter
cmc
fstpt
in
xchg
lcall
div
mov
inc
jl
push
inc
xor
or
dec
mov
inc
dec
cwtl
jecxz
ss
testb
or
or
xchg
std
outsl
jno
xor
add
inc
sbbb
sub
sub
pushf
cwtl
push
cld
xchg
jl
lods
fidivrl
cmp
lea
inc
pop
loope
cmpsb
push
lahf
lds
pop
or
lret
sub
repnz
push
scas
add
testl
aam
aaa
sbb
sub
push
cmp
add
into
notl
mov
pop
lods
mov
and
pop
jge
and
mov
aas
adc
test
mov
jl
pop
div
push
mov
testb
pop
stc
xor
dec
outsb
imul
xchg
or
scas
fcmovb
loope
adc
loopne
dec
or
adc
jp
cmp
stos
mov
ret
mov
ljmp
or
sub
dec
cmp
xchg
outsb
add
mov
mov
dec
jbe
sub
das
sbb
cmp
pop
adc
adc
andl
js
dec
push
jmp
add
cmp
or
pop
lds
test
popf
enter
js
insb
cmp
adc
notb
xor
cmpsl
cld
out
pop
int3
out
je
fsub
mov
ret
fisttpll
lahf
add
pop
mov
pop
adcb
fidivs
xchg
mov
iret
pop
in
dec
cwtl
in
das
cli
mov
xor
mov
xchg
dec
xchg
xor
dec
into
jbe
shlb
and
jg
ret
add
inc
sub
xor
cmpl
xor
mov
lds
jbe
arpl
bound
add
int3
jbe
xchg
sbb
and
push
jnp
cmp
adc
push
sbb
not
dec
fmuls
in
mov
andl
std
imul
test
and
mov
xchg
incl
sub
out
jge
and
and
lds
daa
dec
ret
add
pop
ss
mov
ffreep
arpl
sbb
imul
jae
add
xchg
repz
lods
mov
xor
js
mov
faddl
pop
das
lods
and
aas
adc
mov
or
xchg
adc
mov
add
cmp
rol
xlat
push
sbb
out
or
cmpl
psrld
cmp
mov
mov
mov
roll
pop
and
test
jne
test
ja
inc
js
mov
dec
adcl
rclb
subb
mov
rcll
ficomps
jg
jmp
lret
dec
cmpsb
mov
sub
mov
cmp
dec
nop
inc
andb
arpl
int3
and
sti
pop
inc
pusha
inc
je
sub
repz
ljmp
out
popa
movsl
mov
aad
adc
mov
or
push
push
jecxz
xchg
add
lea
jge
movsl
hlt
pop
or
fptan
push
fidivrs
jns
dec
push
push
fwait
int
popl
mov
pusha
aam
shr
xor
sbb
stos
jle
fidivl
xor
in
xchg
ljmp
mov
sbb
push
ja
push
ja
mov
and
jns
ds
shl
out
adc
scas
mov
xchg
xlat
mov
int3
dec
mov
xchg
rclb
cmpsl
inc
stos
imul
pop
out
cmp
loopne
pop
and
or
fsubrp
push
xchg
popf
fdivs
pop
dec
loopne
jno
adc
or
roll
adc
ja
inc
outsl
sub
cmpsl
lret
mov
jmp
sub
lahf
fidivs
movsl
cwtl
push
cmp
rolb
lds
rorb
in
test
sbb
inc
out
cli
or
insl
pop
popf
and
fldenv
cmp
mov
stos
cmp
test
in
out
jnp
adc
repz
in
test
cmp
mov
lods
sub
push
call
dec
test
xor
mov
mov
out
cmp
sbb
add
out
jnp
pop
in
imul
and
div
lock
sbb
stos
cmp
lcall
pop
adc
mov
std
hlt
mov
jmp
and
pushf
mov
popa
repz
out
jne
test
add
pop
mov
les
mov
push
ja
stos
mov
inc
xchg
adc
push
into
test
mov
add
mov
pop
arpl
cwtl
mov
arpl
jns
jge
out
jb
scas
push
sbb
jle
rcr
push
or
pop
in
xchg
in
and
mov
inc
sti
cwtl
pop
cmpsl
ss
into
mov
add
xchg
and
inc
or
add
inc
das
addb
dec
mov
jge
pop
sahf
je
icebp
add
adc
clc
adcb
enter
jae
or
insl
adc
shll
mov
jns
sbb
mov
imul
or
push
and
filds
mov
cs
inc
push
jne
adc
sbb
add
push
jmp
sub
fs
dec
iret
test
jns
inc
push
xor
cmp
outsl
mov
and
jp
sti
pop
data16
add
dec
push
sahf
shrl
leave
jbe
jl
cmp
add
xchg
imul
cmpl
jg
jg
xchg
sbb
and
cmp
arpl
mov
mov
mov
jae
out
out
popa
adc
int3
push
lcall
or
jle
fistpl
mov
mov
inc
lds
dec
andb
ja
xlat
cmpsb
inc
mov
fstl
cmc
jg
jmp
div
out
cmp
pushf
jo
or
dec
push
fbld
mov
fcomps
fs
ror
es
fucomip
movsb
jge
pop
hlt
out
sbb
jne
ds
and
ljmp
pop
xchg
dec
mov
daa
jg
or
hlt
test
inc
scas
push
pusha
sbb
fimuls
fdivrs
std
xor
mov
call
ret
outsb
movsb
mov
es
in
je
mov
fldcw
repnz
mov
cmpsl
inc
mov
repz
cmpsb
mov
lods
insl
sbbl
clc
pusha
cmc
int3
enter
fiaddl
insl
scas
or
mov
mov
push
leave
in
dec
and
mov
jbe
fcoms
lret
je
test
pop
testb
rol
pushf
add
pop
mov
imul
push
lds
sbb
mov
cmp
xchg
adc
mov
ljmp
sbb
push
aam
psraw
mov
loop
mov
adc
xchg
xor
mov
in
xor
shlb
cltd
inc
xchg
daa
cli
lcall
push
push
add
lret
test
jbe
and
sbb
add
sahf
sub
fs
sbb
lea
push
stos
mov
pop
dec
repz
inc
pop
addr16
into
dec
mov
jp
xchg
pop
out
add
notb
mov
aam
mov
inc
test
andl
movsb
jmp
out
out
repz
outsb
inc
aad
xor
mov
sub
push
lds
pop
xchg
dec
aaa
mov
push
outsb
and
mov
syscall
rolb
xor
lods
adc
insl
sbbl
loopne
jae
shlb
loopne
pop
mov
std
push
call
inc
xchg
fidivl
pop
cmpsb
adc
mov
dec
lahf
ja
jne
cli
out
xchg
daa
fldcw
mov
xor
mov
and
add
jmp
bndldx
xor
leave
gs
addr16
push
fs
sub
push
cltd
dec
add
cmp
inc
out
retw
je
jmp
jno
xor
int
pushf
inc
push
es
pusha
xchg
push
xchg
xor
cld
inc
mov
add
pushf
push
push
loope
push
leave
ds
jo
jbe
xchg
xor
roll
pop
mov
inc
popa
loopne
cld
pusha
call
mov
loop
fs
ret
aas
dec
test
adc
sbbb
jnp
mov
insl
dec
sarb
cmp
test
push
imul
mov
sbb
cmp
pusha
push
push
xchg
push
adc
test
pop
mov
sbb
movl
lds
mov
hlt
lods
push
loop
or
shl
in
shll
sbb
test
xor
and
sarb
gs
sbb
xchg
decl
xchg
arpl
stos
sti
sbb
int
hlt
dec
roll
add
push
nop
aam
mov
inc
mov
mov
pop
sbb
lret
orb
cmovle
fwait
sbbl
loope
add
cmp
call
sarb
dec
inc
pusha
jl
daa
pushf
cwtl
notl
xor
fstp
add
lods
imul
sbb
sbb
push
push
shll
sbb
jae
es
sti
jge
mov
inc
push
test
iret
into
test
dec
pop
push
push
iret
sbb
and
and
sbb
mov
ret
subl
sub
int
js
mov
ds
or
sbb
mov
mov
mov
ret
pop
xchg
stos
testb
inc
je
and
cmp
and
stos
pop
add
dec
dec
xor
sbb
push
shr
subb
jmp
jmp
pusha
xor
stos
pop
lahf
into
rorl
gs
loope
outsb
fldcw
ret
jno
inc
dec
jl
insl
xor
imul
and
in
cli
xor
gs
push
mov
ss
mov
scas
xchg
sbb
mov
and
jg
or
in
mov
pushf
nop
not
vmovdqu
test
mov
fimuls
cmc
jns
xchg
mov
pop
daa
mov
roll
jp
sub
bound
dec
sub
shrb
push
and
aam
movsl
push
in
sub
xchg
mov
insb
add
aas
sahf
inc
push
cmp
icebp
cmpsb
cmp
push
std
ret
xor
push
cld
cli
or
xchg
push
and
aam
sbbl
lahf
bnd
adc
mov
mov
in
mov
out
imul
pop
movsb
adc
inc
push
les
or
test
pop
mov
movsl
sub
into
ret
outsl
mov
lret
mov
std
shll
mov
jmp
rcr
dec
stos
lock
jl
dec
test
hlt
stc
mov
arpl
fucomip
lret
xchg
push
xchg
or
iret
inc
into
xchg
scas
test
stc
mov
mov
ja
push
adc
xchg
mov
ds
push
pop
xchg
or
sbb
adc
push
pop
inc
and
jg
clc
ja
sub
cmp
gs
mov
pop
lods
adc
into
xchg
sbb
mov
bound
enter
push
gs
incb
fcmovnb
je
shlw
movsl
cmp
scas
pop
jl
mov
lret
test
xor
xchg
push
ss
sahf
stos
mov
cmp
jae
loope
adc
notl
jg
pop
sti
sub
sub
or
test
adc
stos
dec
stos
ss
insb
cltd
sti
iret
mov
shll
xor
icebp
bound
outsl
insb
outsl
popa
stos
adc
cmp
inc
les
sbb
out
push
ss
ret
mov
xchg
hlt
orb
mov
cld
jl
test
and
lret
jmp
fdiv
sbb
pop
sti
test
test
dec
mov
leave
cs
imul
pop
xor
jbe
dec
sub
xchg
add
testb
or
mov
cmp
sarl
mov
icebp
cwtl
mov
ds
dec
hlt
clc
sbb
mov
aam
clc
out
sbb
sbb
push
dec
xchg
scas
movsb
outsb
notl
add
push
outsl
push
je
loop
cmpsb
or
jb
sbb
jge
rorl
ficoml
lea
into
inc
les
add
sarb
mov
lahf
out
cmp
cmp
mov
cs
and
cmc
mov
in
push
add
es
bound
mov
xchg
movsl
cmc
dec
xchg
mov
jns
call
ret
cmp
into
imul
pop
xchg
or
jno
nop
popa
ss
jne
xchg
cmp
push
add
xor
jge
inc
xor
in
jp
mov
or
shlb
xchg
push
push
aad
push
loope
outsl
adc
das
push
mov
mov
in
in
imulb
adc
and
loope
popa
sahf
sbb
inc
add
push
mov
fdivs
mov
inc
rolb
out
bound
fwait
push
pushf
adc
pop
es
test
cwtl
push
inc
push
lcall
das
jns
aas
movsl
aaa
xchg
stos
adc
inc
int
jle
pop
loope
icebp
jmp
stos
call
sti
jbe
sbb
and
push
xor
pop
lahf
mov
test
adc
lock
cli
mov
data16
iret
stos
pop
jmp
movsb
dec
out
lret
sti
adc
and
mov
mov
inc
mov
cmpsb
adc
aas
in
sbb
sbb
negl
mov
in
fsts
adc
pop
push
push
ja
inc
fs
in
jle
sub
jl
sub
or
addb
les
popa
out
lock
mov
mov
push
and
cmp
lret
jecxz
jge
and
data16
sub
ds
jmp
pop
leave
jmp
pushf
int3
aas
xor
out
lcall
popf
xchg
jecxz
call
inc
jecxz
pusha
mov
push
push
fldenv
jne
push
mov
cmpl
and
sub
je
and
aaa
xor
in
pushf
aaa
addr16
idiv
fcoml
stos
jmp
cmp
cwtl
dec
sbbl
daa
mov
insl
aas
push
pop
and
aaa
xchg
gs
xor
pop
or
mov
lock
pop
and
cmpl
add
add
cmc
int
sub
loop
inc
popaw
mov
sarl
rorb
mov
stc
add
xchg
or
sub
inc
xorl
xor
lret
xchg
cltd
mov
mov
les
mov
jb
insl
popf
or
pop
dec
imul
filds
outsb
insl
ficoms
xor
inc
sub
lock
ds
nopl
push
inc
stc
mov
push
mov
sub
fistpl
mov
push
test
mov
sbb
mov
and
aad
inc
pushf
pop
enter
out
leave
xchg
fnstenv
mov
mov
xchg
pop
aaa
lahf
dec
xchg
sar
inc
push
idiv
shlb
dec
pop
cmp
add
test
or
mov
inc
sub
sbb
xchg
shl
loop
mov
and
or
pop
fisubs
lods
cmp
into
out
sub
ret
into
add
inc
xchg
iret
stos
pushf
jl
das
cwtl
xchg
jae
ljmp
mov
inc
sub
imul
pop
jns
lock
cmp
sub
dec
out
push
imull
dec
push
inc
cmp
leave
push
dec
pop
adc
mov
jge
in
jmp
jne
push
sarl
cmpb
mov
cltd
mov
xchg
push
hlt
aad
xor
decb
xchg
xchg
jnp
xor
ja
dec
mov
rolb
je
hlt
mov
add
xchg
shrl
sub
cmc
jmp
testl
gs
xor
mov
jno
xchg
mov
xor
xrelease
xchg
in
add
pop
pop
enter
insl
hlt
ss
aam
add
mov
xor
mov
cmp
iret
cmpxchg
aam
xor
cs
mov
test
push
cmc
sbb
outsl
dec
inc
adc
ret
jne
jecxz
sub
or
dec
out
push
push
cmpsb
cmp
loopne
xchg
lret
sub
push
xchg
mov
inc
push
mov
mov
inc
filds
mov
clc
push
inc
popa
mov
push
outsb
sbb
add
ds
sarl
dec
or
fmuls
pop
sbb
cltd
fcompl
push
nop
or
arpl
rcrb
xorl
sti
pop
mov
pop
dec
arpl
lret
push
repz
negl
das
les
stos
lods
pop
pusha
xor
ja
add
iret
nop
cmp
push
sbb
je
and
jmp
sti
sub
ljmp
add
xchg
cmp
out
idivl
aaa
mov
ret
mov
push
mov
outsl
cmp
adc
loop
popf
add
sub
adcl
xor
rol
pop
loop
adcl
jae
clc
pop
insl
in
sbb
jne
jne
test
cwtl
sahf
jge
aas
mov
aaa
adc
jae
outsl
add
jmp
sbb
mov
popa
jp
mov
and
outsb
push
and
rclb
test
call
in
lea
xor
enter
cmovl
aaa
pop
jl
arpl
test
ret
jp
mov
rorl
dec
sti
push
mov
add
fcompl
mov
or
mov
fs
or
or
and
and
outsb
in
outsl
inc
cs
add
jg
xchg
xor
push
pop
mov
xchg
push
xor
clc
ret
xor
hlt
mov
cmc
subb
repz
pop
outsl
add
scas
popf
aam
bnd
fmuls
jp
jge
xor
mov
or
addr16
inc
test
pop
ret
and
xchg
mov
and
lods
fwait
loopne
rclb
hlt
ljmp
cltd
push
scas
es
addl
jp
insb
mov
dec
fisubrl
mov
in
xor
lret
stc
gs
sahf
lods
dec
in
push
dec
sub
loopne
xor
mov
push
and
xchg
popf
mov
test
frstor
jne
fidivrl
hlt
lret
scas
movsb
aaa
pop
adc
dec
js
mov
mov
pop
test
and
dec
test
xor
dec
enter
std
or
jbe
lret
ss
outsl
jg
inc
adc
sub
cmp
cmp
lcall
add
add
xor
das
ret
inc
cmp
lods
dec
ret
cmp
pop
iret
leave
mov
push
mov
mov
pop
cmp
cmp
fsubs
or
lcall
in
xchg
add
sbb
out
add
mov
xchg
push
stc
adc
mov
xchg
sbb
out
mov
cmp
jns
push
lods
mov
rcrb
lds
xchg
lock
cld
subl
sub
xchg
fnstenvs
inc
jb
je
cmp
jge
jmp
adc
mov
or
add
movsl
dec
fisubs
or
inc
xchg
insb
mov
inc
dec
sbb
xchg
mov
aad
lds
mov
out
mov
cltd
clc
add
xchg
sub
iret
imul
sub
loope
shl
jg
push
shll
push
dec
or
into
gs
leave
ret
movsl
mov
dec
push
cmp
loopne
pusha
jp
xchg
dec
loopne
push
out
push
mov
cmpsb
mov
add
test
mov
jns
lret
xor
sub
push
push
adc
push
shlb
mov
rcrl
div
aas
xchg
sbb
fs
and
bound
stos
push
dec
movsl
mov
mov
push
jnp
call
push
out
push
xchg
mov
shrl
jne
cld
sub
sbb
cwtl
pop
mov
hlt
mov
cld
sbb
adc
pusha
xlat
inc
push
sbb
mov
stos
nop
pop
lahf
movsl
mov
adc
cmp
add
xchg
nop
daa
xor
push
pop
mov
push
adc
ret
cmp
fsubl
pusha
and
sti
lcall
mov
outsl
add
pop
popf
pop
mov
sbb
sbb
sbb
fldl
push
inc
xchg
dec
pop
sub
or
popf
and
iret
lret
cmp
mov
dec
dec
adc
imul
fcomps
add
hlt
push
rclb
dec
sarl
cmp
push
sub
gs
jo
arpl
push
mov
xchg
rcrl
add
mov
sub
and
aaa
pop
mov
add
dec
push
hlt
jge
jo
ret
jnp
imul
inc
xchg
aad
inc
pop
pop
xchg
cmpsb
xor
shr
lahf
inc
adc
in
movsb
insl
inc
scas
dec
xor
icebp
ss
and
leave
jp
and
or
sub
outsl
jecxz
jne
das
mov
inc
cmpsb
cmp
or
nop
daa
mov
loopne
lret
sub
arpl
sbb
ficomps
rorl
mov
loop
dec
xor
lods
or
sar
movsl
pop
stos
iret
popf
popf
jnp
xchg
jge
inc
sub
mov
in
and
adc
repz
and
xor
xor
adc
call
outsb
pop
stos
pop
bnd
fiaddl
das
int
loop
roll
jmp
push
cmpsl
mov
mov
shlb
fisubrs
add
xchg
int
jle
loope,pt
ret
cmp
xor
and
lret
aad
sarb
pop
jo
neg
aaa
add
in
stos
int3
mov
push
and
jno
pop
fwait
mov
movsb
mov
push
push
setg
mov
insb
lea
add
xchg
rcrb
xchg
gs
fildll
push
movsl
add
sub
popf
sub
add
movsl
or
push
push
inc
inc
int
pop
or
nop
fbstp
jmp
push
imul
imul
mov
push
adc
and
mov
push
fildl
jmp
push
sbb
sahf
add
xchg
mov
adc
loope
dec
adc
xor
cmpsl
enter
xor
addl
sub
out
dec
mov
mov
leave
or
sub
and
adc
fcmovnbe
outsb
sbb
fcmovnbe
mov
adc
xor
mov
xor
push
xchg
and
add
push
dec
mov
or
push
cs
mov
xor
outsb
jb
out
in
pushf
imul
pushf
cltd
jb
xchg
jb
lahf
insl
jge
jae
xchg
pop
bound
ja
enter
in
mov
das
lods
jae
loope
pop
mov
in
sbb
push
testl
and
mov
add
aad
lea
pop
out
nop
daa
adc
or
adc
dec
and
adc
push
cld
push
insb
ror
repnz
fcomps
je
jle
pop
xchg
insl
and
adc
icebp
addl
out
cltd
testl
sub
das
mov
push
insb
xor
hlt
mov
push
lea
inc
pop
repz
xor
fwait
cmpsb
hlt
mov
or
fcoms
daa
cmp
jnp
mov
push
push
icebp
pop
mov
insb
aas
rcrl
xchg
adc
cmp
cmp
push
cmc
mov
bound
mov
and
or
dec
jbe
xlat
xchg
mov
jo
push
pop
mov
sub
push
xchg
add
adc
xchg
and
lahf
movsb
add
xchg
and
and
pop
and
cvtps2pi
mov
nop
fwait
ljmp
push
dec
sub
das
dec
jne
xchg
imul
push
and
jmp
pusha
add
lock
aas
inc
lock
insb
aam
xlat
add
or
adc
dec
or
fidivl
mov
ret
xor
je
pop
sub
push
ds
outsb
cwtl
or
pop
rcrb
inc
sbb
out
dec
inc
out
aam
test
std
mov
jne
js
into
loopne
cmp
push
aaa
shrl
or
into
cmp
jnp
jae
das
outsl
mov
ret
pop
xor
push
lret
pop
and
adc
loopne
movsb
and
mov
inc
ljmp
pmulhw
add
in
data16
cmovle
xor
incb
dec
mov
outsb
outsl
pusha
sti
lret
stos
dec
sub
xor
mov
fmuls
and
hlt
pop
jae
cwtl
ror
lcall
mov
movsb
in
and
aad
xchg
xchg
sbb
movsl
push
dec
lock
mov
dec
std
add
mov
jbe
push
xlat
leave
leave
add
js
ja
sbb
and
add
popf
xor
push
dec
and
push
rcrb
repz
sub
fdivr
xor
pop
push
ret
cmp
push
in
add
mov
adc
out
mov
popa
inc
into
aad
rcll
ss
inc
jecxz
jnp
adc
push
arpl
or
loopne
and
daa
pop
xchg
sbb
xchg
dec
sahf
mov
adc
movsl
cwtl
or
mov
sbb
push
mov
dec
aad
push
pushf
ret
add
popa
add
push
leave
mov
das
jns
xchg
outsb
iret
xor
adc
cwtl
outsb
cld
adc
les
mov
cld
xchg
fisttps
adc
inc
adc
les
inc
dec
sub
notb
jp
jp
movsb
movsl
or
shl
cmc
shlb
inc
xor
insl
in
orl
mov
dec
mov
xlat
pop
call
sbb
mov
in
ja
cwtl
fldl
mov
push
arpl
or
or
sub
popa
or
aam
rolb
sbb
sub
ljmp
les
aad
mov
inc
out
pop
mov
repz
bound
stos
xor
int3
add
xchg
adcb
repnz
and
rclb
mov
shrb
cmc
xchg
mov
pop
fwait
pop
lock
xor
fmul
loopne
sbb
idivb
sub
push
aaa
push
dec
sti
mov
adc
mov
jl
jge
fldl
pop
inc
sbb
lea
mov
aad
xchg
lret
cmc
mov
mov
in
mov
stos
ljmp
mov
push
imul
sbb
adc
xor
imul
xor
push
jge
add
push
cli
test
pop
mov
aam
xchg
or
adc
lret
icebp
pop
mov
into
lret
leave
add
xchg
pop
movsl
jb
push
mov
add
sahf
rorl
pop
pushf
jns
xchg
into
mov
adc
mov
hlt
loopne
mov
mov
ds
jb
int
in
into
xchg
aam
test
ljmp
pop
clc
jne
cmpsb
fidivrs
xlat
dec
add
mov
fmuls
push
in
adcl
fcoml
add
frndint
or
repnz
sub
mov
add
loopne
imul
xchg
je
sti
sbb
out
fistl
stc
adc
fstp
repz
fstps
dec
cmpb
mov
lcall
mov
mov
clc
lret
call
jmp
mov
xchg
jbe
mov
push
mov
sub
iret
cmp
ja
push
nop
or
lock
xor
test
aas
adc
push
sbb
or
mov
mov
mov
inc
jno
fcoml
in
jge
cvtpi2ps
mov
xor
mov
jge
cmpsl
xor
adc
ror
mov
sbb
in
sbb
loopne
push
mov
cmpsl
in
cmp
dec
mov
pusha
rorl
sub
xchg
lds
dec
xor
pop
push
mov
pop
cmpsl
push
jno
icebp
daa
xor
ljmp
lock
mov
sub
gs
sbb
sar
loope
ja
aam
in
pushf
xchg
mov
arpl
stos
lock
jno
mov
push
gs
movsb
loope
enter
cmp
aad
jecxz
ret
push
jp
outsb
iret
scas
mov
bound
mov
mov
js
cmp
loop
push
push
std
mov
xchg
mov
aas
mov
inc
inc
cmp
test
lcall
jg
in
add
sbb
ljmp
jmp
in
cmpsb
xchg
sti
popa
and
inc
nop
or
adc
int
jg
or
sub
adc
or
cmp
xchg
imul
loope
xor
sar
cmp
dec
xchg
and
hlt
icebp
pop
push
or
mov
bound
iret
cli
mov
lcall
divb
adc
rcll
ret
movsl
pop
pop
lea
idivb
dec
dec
dec
mov
andb
stos
add
dec
or
and
stos
adcb
orb
out
or
ficoml
mov
pop
lods
rolb
mov
lret
sub
dec
sub
cmp
flds
dec
dec
jmp
mov
xchg
lods
out
adc
lock
imul
pop
add
les
push
xchg
jnp
push
cmpsb
negb
jge
aam
pop
jmp
xchg
cmp
scas
mov
jo
inc
jmp
mov
xchg
into
in
clc
sbb
cmpsb
movsb
pop
rol
pop
ds
lock
adc
pop
xchg
pop
icebp
jl
pop
pop
fcom
inc
das
mov
xchg
bound
cs
pop
in
add
std
add
bound
xor
inc
repnz
pop
cwtl
rcl
xor
mov
loope
push
jnp
pop
push
mov
and
jb
rcl
xchg
xor
xchg
int3
pop
dec
xor
fwait
xor
out
or
xchg
xchg
xor
xor
mov
pop
pop
adc
lds
ja
sbbl
addr16
lock
cmp
cwtl
movsb
int3
add
adcb
sbb
mov
jb
movsl
xchg
and
sub
aam
test
sub
fwait
pusha
push
enter
dec
inc
in
sub
cmp
xor
fs
mov
int3
pop
mov
dec
mov
scas
jmp
insl
test
lock
stc
jg
lock
mov
dec
mov
fbld
lret
dec
mov
fwait
arpl
pop
cli
push
aad
out
xor
fs
icebp
cwtl
sub
jnp
mov
dec
js
das
pop
nop
cli
loope
mov
les
dec
inc
inc
cmp
and
call
xchg
inc
sbb
loope
jno
push
pop
add
call
inc
inc
shrl
jnp
test
cmp
jns
add
jmp
and
xchg
lret
ror
sbb
pop
cmpsb
pop
xlat
inc
fsubrp
repnz
push
adc
arpl
test
setp
jno
fcompl
cmp
stos
lcall
or
pop
xor
fstp
sbb
and
inc
lock
cmp
mov
cld
stos
jge
or
fs
sbb
enter
dec
test
imul
sbbl
out
xchg
ret
pop
mov
lret
add
xchg
clc
lcall
int3
sub
fs
leave
test
xor
or
jae
movsl
push
add
loop
jns
inc
sub
or
and
sub
aaa
sbb
pop
movsl
fildl
adc
or
push
xor
outsl
dec
ret
test
xor
adc
adc
sub
dec
dec
data16
or
imul
repz
xor
mov
pop
mov
imul
lods
pop
pop
repz
push
pusha
xor
cmp
adc
aad
xlat
pop
cmpsb
cmp
add
xchg
cmp
int
ds
adc
jg
jmp
jg
out
test
sub
push
jno
mov
mov
int
aad
insb
in
ja
or
and
imul
fcmovnb
das
int3
mov
rclb
ret
add
adc
int
and
jmp
xchg
repz
push
mov
enter
mov
sbb
dec
mov
setno
aas
pop
inc
cmc
dec
int
inc
cmp
test
add
xchg
xchg
js
xchg
mov
pop
outsl
outsl
sbb
scas
subb
out
ret
fwait
cmp
jne
psubsw
repnz
push
js
cli
subb
cs
inc
push
jl
mov
outsb
sahf
aaa
jne
mov
jle
rcll
leave
popf
dec
and
cmp
cmp
fwait
arpl
push
or
xacquire
frstor
addb
dec
mov
cmp
stc
push
add
out
popa
fwait
sbb
xchg
bound
test
in
and
jns
fnsave
pop
ljmp
push
or
test
in
adc
test
mov
negb
adc
cmp
push
incb
pop
test
pop
jl
notb
aam
push
dec
inc
mov
popa
mov
xchg
mov
cs
sbb
jbe
sub
and
pop
int3
pusha
and
pop
sbb
out
loope
ret
jge
daa
mov
subl
rcl
or
enter
mov
cmp
push
loopne
cmc
jno
ss
push
mov
pop
fsubs
or
cld
push
cmpl
stos
mov
push
pop
pop
add
cmpsb
imul
cmc
inc
aas
mov
lods
pop
aas
jbe
push
scas
push
xor
shrl
out
loop
mov
ret
lret
into
mov
rcr
js
push
xlat
bnd
and
mov
rcll
inc
aad
push
mov
roll
out
ja
in
sti
fsubs
aad
lods
test
inc
sti
lock
xchg
sbb
mov
loope
mov
inc
scas
xchg
mov
test
mov
lods
pushf
pop
jmp
stos
insl
jecxz
mov
movsl
inc
in
mov
xchg
push
or
div
not
inc
push
into
out
outsl
lahf
jb
pop
mov
mov
mov
pop
add
rcrb
pop
lea
jo
xchg
jle
shrb
iret
les
adcl
push
int3
pop
inc
push
rcll
adc
rcrl
or
les
aaa
aas
xchg
xchg
inc
test
sbb
pushf
or
xor
in
jne
test
std
sub
sub
push
jmp
pop
movsl
ficompl
inc
push
clc
pop
test
cmc
inc
mov
xor
mul
mov
ror
js
jg
call
xorb
and
mov
adc
push
lods
loope
adc
adc
bound
or
xor
or
mov
roll
push
das
push
sbbl
xchg
inc
xlat
push
adc
jp
fisttps
pop
push
jo
push
sahf
or
pop
pop
push
flds
leave
mov
push
xlat
and
add
cmp
adc
dec
mov
and
insl
mov
outsb
add
sbb
mov
test
xor
clc
push
cmpsl
push
fsubrl
mov
push
mov
faddp
jp
loop
shlb
dec
ss
pop
mov
fbld
insb
es
movsb
dec
in
xor
insb
cmp
out
data16
mov
imul
add
add
adc
lods
or
mov
decb
mov
fcmove
cmp
jo,pn
mov
popa
ror
lds
sub
cmp
fisubrl
and
cmp
shlb
or
into
sbb
or
push
in
xchg
mov
cmc
add
inc
rcr
mov
dec
sbbl
or
xchg
gs
jl
push
gs
andb
sub
loopne
pop
mov
add
call
mov
dec
mov
gs
mov
dec
jns
pop
push
pop
jge
inc
mov
push
inc
pop
int
and
add
xchg
fcomi
add
xlat
fdivl
test
xor
popf
adc
sub
in
adc
push
add
add
rcr
fnsave
dec
iret
pop
jne
lds
nop
fsubrp
aas
mov
sub
lea
in
xchg
mov
or
xchg
jp
sub
icebp
sahf
sub
jge
pop
pop
mov
jo
push
cmp
pop
jns
divl
add
cmp
les
mov
adc
jo
or
jb
and
aad
sbb
rcll
out
loop
inc
xlat
and
hlt
lahf
jg
sbb
mov
mov
sbb
fwait
cs
pop
sbb
sbb
push
movsl
decb
cltd
jae
add
shr
js
sub
jo
fiadds
jge
fldcw
ljmp
sub
inc
push
dec
xchg
xor
mov
sbb
dec
xor
lcall
popa
dec
cmpb
sub
jnp
rorb
in
jo
ret
or
add
aad
dec
rep
mov
stos
push
aam
repz
mov
mov
in
jge
sub
jb
pop
cmp
jae
cs
lods
inc
pushl
lods
xchg
jo
jl
jl
outsl
jg
aad
scas
adc
xchg
popf
es
xor
notb
in
movsl
fsts
imul
and
push
xchg
mov
test
testb
pop
add
jp
mov
fs
shl
adc
pop
enter
mov
push
lret
sbb
out
fsubs
pop
push
in
mov
mov
push
push
mov
or
inc
dec
int
jbe
or
mov
popa
out
repz
pop
ret
push
test
fsubrl
lret
adcb
and
jo
js
ret
arpl
cmp
dec
addr16
call
fimuls
pop
movsb
stos
jecxz
push
cmp
das
adc
add
jo
stc
popf
jecxz
mov
or
jecxz
jg
in
das
mov
sbb
dec
push
lea
xchg
xchg
and
rorb
mov
dec
jle
test
sbb
sub
out
shl
inc
adc
sbb
adcl
dec
lret
enter
lret
fstpt
sub
sub
push
xor
stos
ljmp
adc
mov
mov
dec
mov
ret
in
hlt
push
insl
cmpsb
mov
es
xchg
sub
test
idivl
dec
cmc
mov
fs
mov
xchg
xchg
movsb
cld
push
push
push
xchg
lret
xchg
fwait
push
pop
out
dec
push
xlat
and
mov
clc
mov
cmp
sub
cs
sub
mov
sub
subps
fldl
in
dec
adc
dec
pop
mov
idivl
jp
cmpsl
fistpl
repnz
call
dec
push
std
out
add
arpl
add
jle
sarl
nop
mov
jb
cltd
mov
fnstsw
mov
sbb
add
mov
or
cmp
pop
cmc
xor
lahf
idivl
fxch
pop
sbb
sbb
imul
ss
push
jl
fstl
push
dec
jl
cld
sbb
ds
outsl
pop
xchg
sbb
orl
test
popa
lcall
in
test
push
dec
inc
lods
aam
aaa
aam
mov
fistl
cmp
push
rorl
jecxz
add
int
xlat
mov
pop
inc
test
inc
fcmovnb
sub
fld
aas
jl,pn
fnstsw
cmp
and
and
xchg
cmp
mov
jp
dec
in
pop
xor
or
pop
sbb
rorb
pop
fsubrl
mov
dec
xchg
lretw
xchg
es
sahf
cmp
jae
jo
mov
jnp
jge
into
adc
add
leave
loopne
push
loope
sub
out
cmp
sbb
ret
mov
cmp
xor
cli
pop
jmp
clc
add
in
aad
xchg
cmp
fldl
out
jno
aam
dec
lock
inc
call
lods
sahf
dec
adc
xor
stos
dec
xchg
or
pop
inc
insl
or
sbb
jle
or
subb
push
mov
mov
push
cmc
cmc
aam
xchg
xchg
shll
daa
xchg
addl
cltd
iret
mov
imul
mov
or
sbbb
cmpsl
pop
xlat
in
mov
in
mov
test
popl
pop
mov
add
mov
pop
or
xor
movsl
sbb
push
aaa
hlt
adc
add
lret
cmp
mov
inc
mov
jbe
sbb
flds
push
pop
xchg
repz
inc
fcmove
mov
xor
or
mov
shl
in
pushf
call
pop
mov
ja
scas
popf
or
sub
jmp
inc
into
mov
mov
sti
lock
mov
push
xchg
sbbl
aas
decl
scas
outsb
jp
inc
sbb
dec
xor
repnz
push
stos
insb
mov
push
cs
cmp
inc
hlt
aas
jp
or
int
cmp
call
dec
out
xchg
into
xorb
pop
in
add
ja
xlat
inc
out
xchg
mov
xorl
stos
mov
adc
pop
adc
dec
mov
push
ret
mov
mov
js
cltd
sbb
adc
adc
mov
inc
mov
xchg
fdiv
cmp
in
xor
rcrl
push
and
in
fisubrs
shr
mov
mov
or
sbb
cli
inc
enter
sbb
dec
xor
pop
mov
aas
inc
xor
cwtl
push
fdiv
adc
jae
fs
sahf
cli
xchg
iret
cld
dec
scas
orl
add
lods
insl
mov
js,pn
inc
aam
inc
daa
cli
jnp
js
xor
cmp
mov
pop
mov
dec
shrb
fnsave
adc
mov
sub
sti
lea
stc
adc
hlt
push
add
imul
cs
xlat
adc
sbb
mov
sub
xor
shl
sti
cmp
xchg
xor
into
adc
sti
ds
xor
xchg
orb
inc
inc
bound
or
cli
or
xor
xchg
fildll
jne
mov
sbb
cltd
jnp
dec
outsl
iret
arpl
out
das
mov
pop
or
mov
movsl
mov
pop
fldt
lret
std
ja
leave
push
mov
cmpsb
test
push
xor
cmp
fadd
loop
lds
dec
pop
xchg
lea
orb
jno
lret
mov
push
nop
out
pop
dec
pop
mov
lea
jle
jmp
movsb
push
or
xor
subl
cmp
cltd
xor
leave
jle
sub
inc
fnstsw
dec
pop
jns
adc
inc
and
inc
add
push
sub
mov
sub
bound
cld
sub
mov
jne
out
mov
adc
mov
out
jl
pushf
push
add
out
pop
ds
pop
jno
push
je
in
add
into
popa
or
mov
xor
or
xchg
enter
push
sub
in
mov
xchg
xor
mov
test
aam
dec
ja
mov
cmp
popa
adc
popa
scas
pop
add
cmp
add
push
pop
ret
fsts
xor
adc
js
insb
iret
xchg
insb
jo
jmp
rcll
aad
shll
push
jno
sar
xchg
add
repz
rcrl
xor
daa
adcb
jbe
xchg
daa
stos
xchg
mov
testl
insl
cmp
add
int3
loopne
pop
lret
repnz
mov
enter
lds
dec
mov
sbb
fs
into
test
call
out
sbb
pop
dec
rsm
sar
jle
push
cmc
xor
outsb
mov
push
into
pop
or
adcb
ds
ret
outsl
mov
movsb
data16
mov
adcl
call
sub
cmp
ja
shll
ss
pop
xchg
cmpsl
adc
andb
push
fdivs
into
int
and
cwtl
notl
push
mov
or
std
or
and
pop
dec
xor
sbb
jne
xor
mov
pop
or
dec
addl
mov
xor
loope
es
cmp
aaa
inc
mov
pop
cltd
xor
cmp
sub
gs
jge
popa
jg
sbb
push
mov
cs
mov
ss
cmc
outsl
jg
mov
mov
xor
loopne
jecxz
push
sbb
sub
imul
sbb
pop
mov
adc
mov
sub
rcr
aas
imul
les
cmpsl
mov
xchg
sub
cmp
jle
lahf
call
mov
xchg
or
data16
jmp
popa
jbe
add
sub
push
sbb
mov
insb
add
imul
add
cmpsl
pop
push
fcomps
inc
out
add
mov
arpl
test
xor
push
inc
and
pop
push
and
xor
push
js
repz
adc
pushl
jp
inc
movsl
aam
les
rcll
or
movsb
adc
xlat
and
sbb
stos
or
mov
scas
fdivp
scas
jae
cli
cmpl
aaa
xor
in
iret
cmpsl
mov
test
pop
mov
vmovq
and
mov
rorl
push
lods
and
out
push
aad
sbb
enter
or
movsb
mov
popa
leave
in
pushf
test
add
ja
cmc
mov
inc
add
leave
mov
shrb
push
or
into
std
xor
cli
cli
or
or
mov
cmpsl
mov
pushf
jge
push
stc
notl
cmpsb
xchg
dec
test
in
fcomi
repz
fsts
or
and
push
arpl
in
std
dec
aaa
bound
out
add
sarb
lcall
test
mov
out
addr16
push
fs
add
inc
sbb
fs
sub
adc
push
mov
xchg
mov
mov
lcall
xchg
icebp
leave
or
icebp
rcrb
xor
mov
push
out
dec
shll
movsl
jne
test
cmp
xor
fcomi
inc
faddp
jb
xlat
inc
cmp
insl
pop
cmp
popa
sbb
stc
ds
push
mov
jl
into
dec
int
lret
movsl
nop/reserved
cmp
dec
xlat
add
jp
sbb
add
pop
test
lods
notb
ljmp
leave
addr16
mov
int
insb
xorl
loop
and
inc
xlat
lea
or
test
xlat
jnp
adcl
ljmp
popl
adc
enter
stos
push
pop
mov
cmp
push
loopne
in
pop
and
add
out
int
js
rorl
jecxz
cmpsl
add
in
sub
les
addr16
lods
mov
or
jge
xor
mov
push
jbe
and
aam
outsb
or
sti
enter
dec
lcall
jecxz
lahf
mov
lahf
jae
pop
or
mov
sbb
negl
orl
shll
ds
ret
mov
test
push
daa
insl
mov
fisubrl
popa
cmp
lock
loop
sub
out
lods
cmc
sub
adc
xor
sbb
jnp
dec
cli
lret
push
in
bound
mov
cli
nop
sbb
in
xchg
xor
mov
aad
leave
pop
or
xchg
push
scas
fstpt
or
dec
cmc
int
imul
imul
and
test
test
ds
inc
inc
gs
in
ret
in
push
sahf
xor
jge
sub
dec
and
leave
push
cmp
flds
rcrl
and
or
mov
sbb
sbb
mov
jbe
inc
arpl
dec
jl
sub
test
pushf
sbb
xor
fmul
lahf
sbb
add
mov
std
push
lret
popf
rolb
pop
ret
jae
jbe
cmp
js
jle
mov
push
xor
scas
mov
iret
add
push
add
popa
add
shrl
stos
iret
push
cld
pop
scas
mov
and
decl
push
sahf
lea
hlt
push
scas
stc
sub
mov
or
fs
fwait
dec
cmp
mov
test
jp
dec
mull
sub
jno
inc
jns
sub
xchg
pop
data16
push
lcall
cmp
xchg
fdivl
addr16
enter
sub
jge
int3
femms
jge
pushf
bound
add
movsl
lahf
out
and
lret
out
pop
add
iret
and
or
cmp
push
adc
in
jle
push
cmpsl
hlt
ret
mov
scas
mov
mov
mov
jne
ret
cmc
add
nop
mov
enter
repz
icebp
stc
or
out
jle
jne
dec
xor
lahf
sbb
jle
jb
xchg
mov
outsl
or
call
cmc
test
iret
sti
lea
cmpsb
cmp
ret
clc
sub
mov
outsl
les
sbb
fidivrs
cmp
mov
bound
or
out
sub
ret
fwait
lea
lea
add
imul
jb
pop
test
lea
mov
sahf
xor
test
inc
inc
fmuls
daa
pop
push
mov
leave
cwtl
stos
dec
mov
repnz
mov
mov
repnz
jmp
mov
hlt
ja
add
sbb
mov
call
dec
in
ss
enter
arpl
ljmp
jle
mov
stos
in
outsb
fiadds
ret
mov
push
mov
adc
adc
mov
push
xor
xchg
and
jmp
cvtps2pd
int3
mov
inc
and
cmp
shlb
pop
fwait
mov
cmpsl
sub
mov
adc
lds
cmp
testl
jl
movsb
arpl
push
mov
stos
scas
out
or
jns
imul
cmp
lods
adc
add
clc
mov
mov
inc
inc
ss
imul
cli
std
into
xor
sbb
jp
test
insb
pop
mov
insb
add
xor
or
test
jge
cmp
pop
scas
imul
jecxz
lcall
jbe
add
ffree
loope
fnsave
sbb
mov
adcl
enter
ret
jl
fadd
jmp
lret
cld
dec
xchg
sar
add
insl
sarl
lahf
int3
mov
fs
mov
mov
incl
popa
daa
sub
mov
je
xor
adc
test
stos
daa
test
in
dec
mov
sbb
sbb
push
aaa
and
lock
lea
lock
push
adc
into
inc
add
in
sub
stos
std
lea
or
adc
mov
inc
dec
or
sbb
add
push
pop
imul
aam
insl
leave
jl
push
repz
inc
sub
sub
or
test
inc
cmp
out
jmp
and
mov
mov
dec
push
lahf
cmc
daa
idiv
ret
push
mov
mov
mov
icebp
xchg
jbe
ror
push
sar
mov
or
and
out
mov
mov
xchg
pop
call
fadds
cmp
fs
xchg
mov
mov
cld
cmp
adc
nop
adc
pop
jecxz
inc
adc
ljmp
fwait
jbe
add
inc
out
push
push
mov
inc
mov
jl
inc
mov
sub
scas
or
mov
test
jl
inc
ficoml
or
or
and
or
addb
leave
push
xchg
xor
gs
jno
push
test
push
inc
add
in
shrb
mov
insb
and
xchg
sti
fs
mov
outsb
jne
add
and
pushf
mov
cli
mov
fnstsw
lar
lcall
sub
mov
cmc
incl
jnp
ret
outsb
jge
stos
cld
mov
push
mov
mov
pop
cwtl
test
cli
jl
and
sub
pop
add
inc
aad
out
and
cli
ljmp
pop
orb
loopne
subb
int
push
sbb
in
stos
cltd
test
inc
in
pop
xor
and
cli
loope
sbb
sbb
jmp
arpl
mov
fwait
leave
lret
rcrb
ret
push
leave
neg
xchg
bound
jns
inc
fisttpll
mov
push
push
push
sbb
push
popa
add
xor
out
int
sub
push
jle
loop
sbb
shrb
jg
stc
pushf
test
mov
clc
sub
cmp
outsl
xor
cs
mov
shlb
and
xor
sbb
xor
ja
pop
out
or
sub
cmp
repnz
push
in
push
or
and
inc
or
jb
xor
mov
add
lods
pop
out
cmp
out
dec
sub
xchg
bound
and
lods
adc
into
aas
imul
jnp
mov
data16
jb
mov
cmp
hlt
adc
and
mov
xchg
test
pop
xor
and
xchg
jo
in
mov
xchg
imul
jnp
push
add
movsl
jo
jbe
dec
and
inc
in
clc
xchg
mov
sbb
jl
mov
out
and
das
sbb
aaa
mov
into
popa
jg
pop
or
pmuludq
mov
sub
xchg
mov
ret
test
sbb
outsl
sbb
xlat
and
xchg
fbld
push
test
jecxz
in
enter
imul
xchg
mov
jbe
pop
push
mul
lahf
scas
fisubrl
mov
cmc
dec
cmp
cmp
push
lcall
pop
add
push
cli
cltd
sub
gs
push
pop
ja
in
fisubrl
dec
push
pop
lahf
push
xor
adc
push
add
or
pop
sahf
imul
mov
into
nop
lcall
pop
ja
lahf
cmp
sahf
test
jbe
mov
mov
pop
imul
fimull
dec
mov
movsb
or
mov
pusha
sub
mov
es
out
mov
lahf
cltd
lock
jge
xchg
movsl
mov
lret
mov
xchg
cmp
cmpsl
pop
sbb
loopne
dec
test
mov
push
lcall
adc
les
and
into
aas
add
adc
nop
lods
pop
xchg
pusha
mov
or
in
or
and
push
sub
mov
orb
mov
add
push
xor
add
mov
lahf
push
fadd
addr16
aas
adc
movsb
daa
lret
mov
mov
push
dec
iret
ficoms
or
push
push
push
hlt
add
inc
pop
imul
scas
xor
push
jns
jge
xchg
add
sub
adc
inc
or
popf
sbb
sbb
inc
adc
popa
xor
xlat
fnstenv
fcomp
ljmp
test
cmp
fs
lcall
inc
vxorpd
adc
leave
and
jmp
lcall
push
iret
jge
mov
je
insl
and
jnp
scas
add
negb
inc
movsl
aas
pusha
mov
push
stos
sbb
xlat
jo
imul
cmp
out
jp
pop
push
mov
cmp
push
stos
loopne
xchg
pop
xchg
push
clc
mov
adc
fstpt
pop
icebp
mov
stc
mov
ret
mov
sub
nop
hlt
push
add
cmp
in
jne
xor
jmp
lret
mov
bound
gs
aad
cmp
mov
push
insl
imul
or
pop
ficoml
add
cmp
adc
or
jmp
cmp
mov
cli
adc
add
repz
xor
adc
sub
dec
in
loope
arpl
in
and
jne
xchg
pop
stos
sub
xchg
in
sbb
fcmovb
dec
and
jo
xorl
jo
mov
inc
fisubrs
jp
pop
out
sbb
mov
bound
int
sub
push
cwtl
aam
sti
movsb
or
and
jecxz
movsl
jbe
and
cmc
pop
jge
stos
add
cwtl
pop
jae
je
lcall
mov
sub
xchg
bound
fcomp
insl
push
sbb
bound
jae
or
mov
fdivrl
fildl
sub
pop
insb
das
fisttpll
cmp
out
push
imul
dec
sub
into
adc
test
inc
mov
cmp
dec
xchg
notb
outsl
jne
xor
sbb
adc
pop
jp
stos
icebp
pop
push
mov
mov
pop
mov
shr
aaa
pop
pop
loop
sub
jns
stc
psadbw
rcrl
pop
jl
jb
test
ljmp
jns
ret
sub
and
mov
mov
and
out
lahf
or
in
daa
imul
xor
dec
xchg
sbb
jb
mov
jl
repnz
rcll
mov
int
jmp
lret
out
sbb
adc
push
in
add
push
fadd
xchg
mov
pop
lea
js
popf
repz
xchg
lret
fidivl
inc
xor
nop
sbb
adc
xchg
sbb
sbb
cmc
cmp
imul
adc
insb
add
cmp
lret
shll
dec
inc
push
pop
push
aas
xor
test
adc
push
sbb
inc
out
out
xchg
dec
lds
push
stc
sub
imul
mov
movsl
and
xor
dec
data16
into
ja
fcmovnbe
pop
insb
je
in
adc
adc
jl
jl
mov
sub
jno
cmp
stc
stos
or
jmp
out
mov
xchg
dec
es
data16
cmpsl
sub
mov
cmovge
jnp
shlb
aad
jbe
add
mov
or
push
adc
cmp
inc
xchg
and
xlat
or
cmpsl
lock
cmp
mov
aas
shrl
xor
es
push
xor
mov
ja
pop
inc
add
cmovno
cmp
add
andl
fdivs
and
int3
packuswb
sbb
out
out
jbe
pop
mov
mov
in
pop
imul
fwait
imul
test
cmp
xchg
xchg
fiadds
cltd
loopne
aaa
and
testb
adc
ficoml
and
inc
jecxz
and
cmp
sub
pushf
mov
fnstenv
shll
repnz
push
push
sub
lret
xchg
stc
push
add
jecxz
add
movsl
inc
js
adc
jo
out
insb
fs
adc
sbb
inc
jns
orl
in
mov
inc
sbb
and
mov
std
xor
push
pop
mov
lods
xchg
fucom
sub
movsb
sub
shll
or
adc
lret
mov
mov
popa
xchg
jmp
inc
mul
fistps
sbbl
movsl
ss
call
push
cmc
mov
insl
fisttpll
movzwl
ss
mov
push
jne
mov
pop
pop
int
call
sbb
lcall
jae
fists
mov
aas
jl
push
popa
inc
sub
lods
pop
or
jl
insb
xlat
popf
das
std
out
cld
in
mov
insb
jmp
dec
test
and
sahf
je
jb
or
scas
testl
jb
mov
push
in
xchg
insb
mov
in
inc
insl
sub
mov
and
aaa
lea
pop
and
sub
mov
scas
mov
fadds
mov
mov
out
aaa
outsb
push
cld
adcb
clc
loop
inc
hlt
push
push
das
popf
aam
mov
clc
cmp
jno
add
ss
lds
aaa
jbe
xor
bound
sub
sbb
adc
out
jl
cmp
pusha
testl
mov
xchg
loopne
cmpsl
add
pop
icebp
daa
scas
add
dec
js
pop
adc
sarb
imul
fwait
cmp
sti
cmp
mov
dec
and
or
dec
call
movsb
adc
cmp
pop
dec
xor
les
outsl
mov
popa
lock
mov
xchg
ja
sbb
std
xchg
repz
gs
gs
or
xchg
rorb
fs
popf
data16
inc
fldt
ja
mov
gs
rorb
clc
and
dec
adc
fildl
adc
xchg
jge
mov
out
test
or
sbb
push
shrb
dec
es
lcall
insb
jbe
popa
jl
inc
push
xchg
repz
mov
mov
mov
xchg
xor
iret
sub
icebp
aad
insb
or
cld
data16
jnp
sbb
dec
out
iret
outsb
lret
xor
mov
out
pop
movsb
and
push
sub
cmp
push
and
jg
push
sbb
aas
addb
test
hlt
xchg
dec
jne
push
pop
jns
lcall
cmp
mov
inc
scas
mov
outsb
mov
mov
xlat
push
movl
pop
and
in
push
pop
imul
mov
ss
mov
imul
cli
pushl
lcall
add
push
jbe
xor
fnstcw
mov
push
sub
rclb
pop
xor
flds
stos
push
inc
xchg
testl
cltd
push
mov
je
sbb
or
nop
inc
jg
mov
lahf
mov
inc
aaa
mov
mov
jle
push
repnz
jmp
lds
xlat
adc
rcrl
icebp
mov
inc
dec
inc
gs
fimull
rcrb
dec
in
cmc
jecxz
inc
loop
xchg
pusha
jbe
mov
sub
lods
out
mov
pop
imul
loope
nop
and
subl
aaa
neg
stos
mov
and
sbb
sbb
rcrl
mov
repz
les
lods
inc
test
ret
adc
pop
dec
jge
loop
int3
rol
cwtl
dec
lods
push
insb
outsb
dec
in
in
scas
cmp
shlb
xchg
mov
leave
test
add
and
push
xchg
aas
lret
mov
dec
shlb
lret
mov
sti
push
mov
or
add
sbb
loopne
mov
out
jns
adc
mulb
sti
inc
lods
stc
push
cmp
fdivrs
les
pop
mov
mov
sbbb
push
int3
cwtl
or
pop
push
adc
enter
cmpsb
dec
nop
call
dec
mulb
jne
fwait
cmpsl
std
sub
xorl
mov
call
cwtl
mov
sahf
rorb
scas
sbb
scas
sarl
cmp
aaa
dec
mov
std
push
and
mov
add
push
mov
pop
int
sbb
and
cmp
push
movsl
ss
dec
repz
dec
xor
repz
shrl
scas
repz
sahf
add
mov
cmc
jmp
in
lret
test
jg
into
push
fistps
cmp
andb
stos
mov
push
outsb
std
clc
stc
xor
lods
lcall
es
xor
imul
inc
pop
lods
jnp
fdivs
fstps
pusha
flds
imul
outsb
gs
sub
imulb
notl
adc
fdivl
ds
push
in
push
or
iret
mov
xlat
stc
cmp
and
sahf
mov
stc
push
mov
lcall
out
idivb
inc
mov
push
sbb
pop
sub
mov
ret
out
nop
lcall
stc
std
gs
es
xchg
hlt
adc
sarb
rclb
dec
std
adc
xor
mov
scas
and
inc
negb
nop
ss
sarb
fstl
addr16
inc
xchg
cmp
in
movsb
lods
mov
jb
pop
sbb
lahf
sbb
std
pop
xchg
adc
popf
adc
or
xor
mov
lahf
mov
cbtw
in
pop
mov
cld
fisttpll
lods
loopne
inc
or
in
mov
fistpll
andl
pop
mov
into
in
sbb
test
and
dec
add
hlt
or
lahf
rcl
scas
mov
jle
mov
popa
fiaddl
pop
jo
mov
adc
inc
and
mov
jge,pn
add
xor
repnz
sub
jb
test
push
aam
pop
sub
cmpsl
pop
lss
shr
jecxz
xor
out
cli
mov
out
sub
shrl
push
rcll
mov
imul
mov
repnz
shl
jle
repnz
mov
fldenv
bound
ds
xchg
stc
scas
cwtl
lcall
xor
aaa
push
adc
std
das
add
dec
std
dec
push
test
push
shr
out
fs
pop
iret
mov
popa
aad
out
mov
bound
loopne
call
lsl
sbb
add
dec
jo
push
cmp
paddd
aad
pop
jno
cmp
clc
xor
lahf
popa
pop
scas
cmp
xor
dec
inc
inc
or
adc
cmp
int
cmpsl
test
adc
sub
mov
jnp
pop
push
sub
jl
insb
es
aas
jecxz
dec
outsb
or
stos
lods
ret
pop
add
push
in
dec
mov
into
in
sahf
add
lds
mov
aad
iret
mov
rcl
push
aad
adc
cmp
sub
cmp
imul
lock
scas
fpatan
cmp
test
sub
ss
insb
roll
inc
and
jg
and
add
push
and
cs
dec
adc
ret
sub
sub
cs
mov
sbb
pop
mov
add
mov
dec
adc
push
mov
xlat
mov
push
loopne
movsl
mov
push
pusha
dec
pop
adc
or
push
daa
inc
jle
dec
sbb
pop
test
lea
pop
dec
xor
add
aas
dec
dec
jns
jmp
stos
sbb
adc
out
ret
xchg
movsb
das
or
ret
stos
mov
dec
xchg
and
loop
pop
jg
les
call
sub
sbb
sub
sub
js
xchg
test
and
cmp
das
adc
inc
jno
mov
lods
xchg
loopne
and
sbbb
clc
cmp
mov
and
dec
fucomp
push
fldcw
add
filds
dec
sbb
sbb
xor
gs
mov
or
daa
jmp
in
push
lods
loope
cld
jo
jmp
add
movsl
loop
push
in
push
add
dec
call
fbld
mov
xchg
jecxz
fs
and
xor
mov
jl
ret
lcall
outsl
pop
cld
xchg
sbb
jns
and
or
inc
sbb
adc
and
xor
mov
inc
xchg
mov
xlat
add
jbe
aad
fdivrl
push
cltd
mov
push
push
xchg
lods
pop
push
cmpsl
lock
push
jg
mov
icebp
jle
leave
mulb
jge
push
ljmp
pop
lret
out
pusha
sbb
mov
pop
xor
aam
cmp
jg
mov
xchg
xchg
sub
fildl
xor
pushf
not
dec
daa
push
mov
xchg
aas
insb
test
arpl
loopne
dec
insb
sti
nop
in
and
adc
inc
adc
pop
and
cmp
sbb
lea
in
mov
dec
sub
lock
out
cmp
popa
rcrb
push
fbstp
aam
cmpb
jae
mov
xor
js
jno
mov
push
repnz
out
sub
in
add
dec
cmc
inc
fisttps
inc
pop
cld
out
jno
bound
in
xor
push
les
add
xchg
in
bound
aas
inc
xlat
mov
sub
add
les
sbb
xor
mov
mov
cltd
dec
xchg
daa
or
push
jecxz
stc
and
dec
loop
movsb
iret
cmp
ja
je
clc
inc
and
out
pop
fsts
lahf
stos
je
adc
test
imul
lret
xchg
mov
leave
add
or
ljmp
addl
xchg
out
cmp
xchg
jl
mov
leave
xchg
sub
fnsave
jae
sbb
xor
inc
mov
push
gs
out
loop
adc
push
aam
shll
push
mov
inc
and
ja
cmp
and
mov
cmp
ret
jecxz
jnp
mov
cmp
outsl
sub
popa
out
jmp
pop
sbb
push
jmp
mov
jno
rolb
mov
xchg
fistpl
adc
jb
enter
xchg
cmp
clc
adc
sub
lds
mov
dec
mov
sub
push
imull
call
and
leave
sarb
inc
adc
add
imul
or
mov
stc
into
sarl
mov
les
xorl
mov
pandn
ficoml
cmp
adc
mov
insb
das
into
icebp
adcl
push
hlt
adc
add
or
test
adc
pop
push
scas
cmp
adcb
cmp
mov
inc
jno
insl
jb
mov
or
lods
lret
nop
push
mov
loopne
sbb
xlat
loope
sar
add
push
push
or
xor
notb
sbb
movsb
push
add
push
adc
sbb
loopne,pt
jo
scas
xor
xor
outsb
adc
aam
hlt
test
imul
inc
sub
dec
cmpsb
xor
imul
mov
pop
sbb
outsl
mov
xchg
cmp
rorl
fsts
imul
inc
xchg
fwait
mov
es
cmp
add
jl
outsb
outsb
icebp
lods
mov
nop
scas
clc
mov
out
mov
sti
mov
and
or
rorl
mov
mov
outsb
repnz
cmpb
fnsave
mov
add
pop
xor
push
push
insl
mov
ds
push
es
or
xchg
pop
jne
add
pop
loope
push
mov
movsb
pop
inc
mov
adc
adc
push
inc
jne
pop
cmp
push
int
fwait
popf
mov
xchg
in
mov
lea
ss
mov
xchg
in
and
inc
or
jl
cwtl
adc
ret
dec
inc
ljmp
out
add
nop
jns
int3
mov
sub
push
jecxz
or
inc
inc
shr
pop
out
jae
ljmp
add
subb
ret
lods
sub
inc
pushf
jbe
movsb
inc
jmp
dec
xchg
inc
negl
xchg
leave
dec
jle
jle
mov
mov
dec
inc
pushf
nop
mov
stos
jmp
xchg
mov
pushl
jae
arpl
or
orb
lods
and
ljmp
or
orl
mov
cmpsb
pop
add
out
push
in
pop
pop
push
jecxz
adc
pop
dec
jo
stc
add
xchg
ret
mov
notb
inc
sahf
push
dec
dec
mov
inc
pop
mov
sarl
mov
nop
in
bound
bound
push
mov
xor
call
subl
mov
add
mov
faddl
fcmovb
les
push
xchg
lahf
sbb
add
cmpsb
movsb
fcmovbe
inc
jo
inc
shl
sub
and
xor
leave
jnp
imul
cmc
outsb
cli
mov
cmp
sbb
push
push
cld
jg
sbb
je
cmc
test
enter
pop
mov
popf
pop
xchg
mov
sbb
dec
nop
xor
mov
test
or
scas
clc
pop
inc
xlat
outsl
sbb
js
insl
pop
aaa
fistpll
rcrb
movsl
lret
or
mov
pop
pop
xchg
lods
popf
lds
push
shlb
and
arpl
sbb
xchg
jl
shl
xchg
jl
cmp
push
pushf
ficomps
cmp
jp
cmp
cmpsl
jg
or
mov
dec
adc
repz
pop
inc
rcrb
lods
push
or
pop
inc
stos
sbb
mov
sub
hlt
xor
jge
aas
dec
dec
lock
popf
add
arpl
sbb
out
cmp
pushf
xorb
cs
mov
fs
movsl
cmpb
mov
add
mov
push
jmp
inc
ror
adc
fwait
adc
out
mov
xchg
lea
insl
nop
lret
cmpsb
jae
stos
arpl
nop
repnz
pop
out
jg
jp
subl
pop
push
push
fmul
imul
rol
mov
fs
out
push
scas
sbb
push
aas
push
imul
adc
sbb
ja
testl
in
aad
stos
in
cmpl
lahf
adc
push
adc
inc
xchg
pop
push
dec
imul
sub
in
jmp
out
mull
out
stos
mov
fildl
es
mov
push
scas
ja
jmp
xchg
lds
inc
xchg
adc
mov
bswap
pop
stos
pop
scas
leave
call
lock
xchg
shlb
pop
mov
dec
xchg
sub
push
xchg
ljmp
xchg
adc
fildll
mov
fisttpll
adc
in
leave
insl
lcall
lcall
mov
loop
fildl
fdivr
push
test
pop
mov
test
lahf
pop
divl
sub
add
sbb
add
mov
in
in
inc
sub
inc
inc
decb
jmp
sbb
loope
cmp
xor
sub
je
mov
jae
lret
dec
mov
sbb
jno
and
cmc
inc
push
movsb
fwait
hlt
sbb
xor
xor
arpl
popa
int3
mov
push
aad
sbb
xchg
aam
mov
shrb
inc
push
inc
mov
cli
sbb
mov
and
pop
flds
mov
jmp
stos
push
pop
xchg
pop
cmp
popa
jo
divb
iret
lret
enter
mov
dec
pop
sub
adc
push
inc
dec
fbld
lcall
inc
push
or
xchg
pushf
notl
inc
popf
pop
bound
xchg
jmp
fisubl
mov
aad
lea
stc
or
or
push
xorl
inc
mov
movsl
fidivl
movsb
mov
sbb
mov
pusha
add
lret
add
fwait
cmp
pop
push
mov
roll
in
sub
mov
rcrb
xchg
lret
sbb
adc
mov
arpl
xchg
add
xor
fwait
sahf
das
add
das
dec
fists
mov
xor
mov
xor
icebp
insl
jae
shr
ret
fmuls
adc
into
push
cmpb
add
sti
sbb
icebp
inc
mov
int
xor
xor
xor
mov
stos
inc
popa
cwtl
in
mov
and
fistps
mov
addr16
pop
js
in
mov
jbe
imul
cltd
mov
sub
cli
pusha
enter
jb
orl
add
and
cs
pop
fs
jecxz
test
je
mov
mov
push
rclb
leave
jae
cmp
sti
dec
popa
inc
xchg
pop
jle
popa
ret
xor
aad
in
jo
rcl
stc
stc
xchg
sub
mov
add
inc
jl
jnp
fdivrs
adc
rcll
inc
mov
cmp
push
scas
stos
or
mov
cld
insl
dec
and
mov
push
lea
cmpsl
cmc
test
xchg
cmc
dec
jbe
mov
mov
dec
andnps
sub
xor
inc
stos
xor
movsl
movsb
mov
and
or
mov
in
add
loopne
cmpl
cmpsb
mov
insb
repz
pop
cmc
negl
iret
sbb
shrl
pop
mov
push
rcl
add
loope
jle
test
js
cli
arpl
push
xor
or
sarl
hlt
jmp
repz
push
push
and
gs
mov
or
cmp
adc
xchg
mov
push
add
ljmp
aaa
hlt
sub
jae
jae
addb
push
dec
mov
push
hlt
cld
pop
nop
test
adc
jo
xlat
sbb
mov
inc
in
mov
or
out
cltd
pushf
nop
int
dec
cwtl
aas
xchg
inc
mov
xchg
adc
rcrb
dec
mov
cmpsb
daa
mov
add
mov
and
out
daa
mov
mov
sub
sub
xchg
add
mov
fstpt
test
inc
mov
xchg
cmpsl
push
push
cmc
ficompl
pop
jl
lahf
cmp
shr
xorl
je
mov
outsb
cmp
adc
out
iret
idivb
mov
into
stos
xor
stos
fcmovbe
dec
sub
mov
dec
fnstcw
and
mov
push
or
adc
cmp
data16
pop
rolb
daa
xchg
rorl
fwait
shl
push
rorl
lret
cwtl
enter
mov
into
sub
or
daa
or
stc
popa
int3
loop
adc
cmp
or
rcrb
add
add
enter
sub
int3
xor
jl
and
push
std
push
mov
nop
mov
and
in
call
cmpl
leave
jg
aas
inc
mov
cmp
pop
xchg
mov
pop
pop
pop
insb
cs
mov
pop
or
in
dec
adc
mov
or
mov
lcall
sbb
lock
in
pop
dec
leave
jp
push
push
movsb
add
jmp
pusha
sub
xor
ja
or
xchg
mov
mov
cs
xchg
dec
outsb
add
dec
rcr
sub
leave
pop
cmp
ficomps
daa
mov
jae
jnp
mov
clc
cmp
add
cmp
mov
cmp
xchg
sti
mov
pop
pop
mov
cld
and
movb
cmp
das
push
sub
in
add
mov
test
pop
std
ret
xor
pop
call
fisttps
lods
xchg
ljmp
jle
fidivrs
ja
or
fistpl
xor
addr16
int
mov
hlt
cmc
add
mov
mov
in
ret
dec
cmc
cmpsb
cmp
stos
sub
dec
je
xchg
inc
mov
in
scas
dec
push
les
mov
push
sti
xor
out
mov
mov
sub
jp
cmp
sub
sarb
and
mov
sub
mov
mov
inc
stos
ret
cmp
in
cwtl
pop
cmp
loope
inc
aad
orb
lock
add
ljmp
rcrl
mov
int3
push
aaa
or
jge
daa
jge
xor
mov
sub
cltd
sti
es
jns
mov
cmovnp
jno
das
out
sti
fisubs
lods
fidivl
lret
fadd
test
mov
inc
pop
shr
jmp
sbb
push
add
sub
xor
outsb
into
loopne
jle
sbb
mov
mov
dec
and
les
mov
mov
push
pop
out
mov
aaa
outsl
in
sbb
and
lcall
ret
xor
cli
inc
fsubl
repnz
xchg
jb
pop
aaa
and
mov
pop
loopne
stos
fstl
mov
xchg
mov
push
mov
and
or
ljmp
mov
data16
fwait
push
addl
jnp
fcomps
xor
mov
ljmp
das
loope
in
xor
inc
int3
or
dec
adc
push
daa
in
stos
sbb
int
mov
mov
sbb
cmpsl
in
popf
mov
jmp
jno
mov
push
add
xchg
xchg
push
add
and
shrl
mov
sub
jmp
and
rcll
movzbl
outsl
pop
inc
inc
outsb
jl
jb
or
mov
faddl
leave
jns
scas
cmpsl
insb
adc
cltd
mov
xchg
sysret
sbb
or
call
xchg
into
imul
cmp
dec
pop
cwtl
jmp
jmp
icebp
sub
sub
cmc
cmc
andb
add
lock
xor
pop
rclb
pushf
loope
lret
sub
pop
orl
popf
std
pop
and
push
jg
dec
adc
xchg
fsts
xchg
pop
jecxz
jnp
movsb
je
idivl
pop
cmp
clc
ret
jns
or
adc
mov
and
sbb
out
bound
fnstenv
mov
dec
rolb
ljmp
cltd
pop
adcb
pop
push
nop
mov
and
je
pop
out
into
xchg
xor
popa
mov
pop
nop
xor
sbb
pop
hlt
mov
cltd
jbe
cmpsb
xor
or
mov
fsubs
inc
inc
jl
subl
adc
dec
lds
mov
loop
movsb
mov
dec
add
repz
decb
dec
dec
mov
repnz
jmp
pop
fists
push
pop
orb
pop
push
into
lods
cld
int
adcb
dec
sbb
outsl
jmp
sub
sbb
add
pop
adc
sub
jp
stos
out
mov
and
dec
aas
fldt
push
jmp
lods
aaa
outsb
sbb
adc
mov
pop
or
xor
cli
mov
sbb
out
lods
cld
popf
icebp
and
ja
test
cmp
icebp
sbb
or
mov
frstor
cs
scas
inc
inc
push
xor
sbb
and
aad
out
xchg
inc
push
sub
jae
arpl
mov
data16
xchg
or
mov
mov
movsl
cmovp
jo
dec
xchg
int3
mov
in
je
jno
gs
fnstsw
pop
stos
and
out
out
adc
std
mulb
rcrb
loop
xchg
cmp
repnz
adc
rolb
inc
add
cmpsl
arpl
and
ljmp
loop
xor
pop
lcall
push
arpl
inc
fidivl
ss
lea
sarl
pop
mov
xchg
and
push
push
pop
ja
mov
jle
xlat
int3
js
pop
pop
lea
pop
sahf
int3
push
adc
mov
imull
adc
shll
stc
test
cmp
and
jle
fmuls
iret
dec
inc
sbb
aad
cmc
adc
xlat
dec
push
divb
xchg
nop
lea
cmp
in
pop
adc
sbb
into
ret
movb
dec
stos
dec
clc
dec
add
les
sahf
enter
inc
rorl
aam
lock
and
inc
sbb
sahf
add
or
dec
sbb
mov
fidivs
pop
cmp
push
aad
sbb
or
stos
and
insl
xchg
and
mov
and
xor
jae
fmul
jg
and
outsl
imul
inc
jle
add
scas
scas
and
mov
stos
or
mov
ss
notb
loope
add
std
shll
inc
pop
jbe
push
fucomi
sbb
mov
test
push
adc
fs
pcmpgtw
sub
aad
mov
cmp
add
movsl
sub
fwait
mov
inc
out
lds
pop
mov
adc
mov
sub
shr
xor
loop
mov
and
cli
sbbl
sub
fists
call
pop
mov
xchg
push
sti
gs
lret
loopne
and
stos
dec
fwait
xor
jnp
mov
mov
xchg
push
inc
cld
mov
dec
mov
les
xchg
jns
push
mov
xor
rorl
ret
into
inc
mov
xchg
addr16
jg
or
jns
mov
rcll
and
mul
outsb
adc
dec
adc
popf
pop
dec
inc
fisubrs
lahf
inc
cltd
testb
aam
call
sti
clc
add
adc
adc
sub
mov
add
lods
jl
inc
sub
test
mov
add
rorb
pop
mov
mov
into
cs
adc
mov
movsl
movsl
call
push
stos
push
pop
and
gs
jno
jnp
idiv
or
push
rclb
dec
jecxz
mov
fcmovnu
lret
xchg
aad
mov
and
pushl
insb
lods
pop
leave
ds
aaa
mov
and
lahf
scas
mov
into
rcll
std
fsubl
add
out
jae
mov
sti
pop
jmp
aad
fwait
pop
js
inc
aas
jns
ret
lods
mov
mov
mov
cs
xchg
cld
jne
add
repz
sbb
fistl
mov
xchg
orb
cwtl
dec
cmp
xor
dec
outsb
mov
sti
adcb
mov
push
fsubl
push
int
shrl
jb
scas
dec
test
mov
cmp
mov
push
adcb
inc
in
arpl
data16
pop
mov
push
les
roll
aad
ret
adcb
lret
je
call
insb
sub
sbb
lea
sub
lret
push
not
push
fcoml
ret
pop
cld
xor
mov
dec
xor
dec
lret
cld
pop
mov
jns
movsl
mov
push
adcb
movsb
in
mov
xchg
mov
mov
adc
sub
push
jo
adcl
mov
aas
xor
add
rcrl
add
xor
in
sbb
imul
clc
aaa
inc
cmp
hlt
jnp
xor
jecxz
in
test
movsb
adc
sub
pusha
js
jbe
shll
xor
dec
aad
cs
mov
pop
std
lods
or
and
fldl
mov
pushf
and
rcrb
loop
and
arpl
or
sub
push
in
loop
shrb
fsubrl
movsb
xor
sbb
cmp
inc
repz
jge
sarl
outsb
push
fwait
ljmp
sbb
and
cltd
push
test
cmp
pop
call
les
fwait
dec
fs
shr
push
pop
aad
in
pushf
outsw
and
and
push
mov
cltd
hlt
lds
lods
movsb
aaa
rcll
push
sub
cmp
adc
jo
incb
in
outsl
xor
test
enter
and
jle
loopne
setno
xchg
push
sbb
idivb
mov
mov
mov
hlt
cltd
repnz
jge
aaa
aam
sub
out
push
sub
mov
push
pop
and
leave
cmp
hlt
and
popf
aaa
mov
pop
test
mov
icebp
mov
xchg
pusha
sahf
rclb
sbb
inc
stos
xorb
jle
int3
mov
xor
mov
int3
pop
push
inc
or
pop
ljmp
scas
test
xchg
jb
pushf
jle
ja
mov
cmp
ja
popf
leave
fwait
and
cwtl
or
es
fisttpl
xchg
xchg
pop
fsubs
mov
xchg
out
xchg
arpl
scas
xchg
jmp
cmp
movsl
and
adc
inc
push
jg
push
outsl
push
popf
nop
and
jo
outsl
jmp
lret
fadd
cmp
cmc
rep
in
in
icebp
call
enter
mov
xchg
push
shll
pop
jmp
mov
jne
stc
pusha
imul
push
test
sub
add
xor
push
cmc
and
call
in
dec
cld
std
into
enter
fildll
cmp
inc
int3
mov
mov
aam
push
inc
cmpsb
pushf
jns
out
insb
push
nop
inc
xor
mov
fcmovb
aas
push
inc
xorb
push
push
xchg
ja
inc
into
mov
out
into
or
lcall
mov
add
out
xlat
pusha
mov
cmp
ja
push
or
jns
fadds
xchg
sub
sbb
andl
int
jnp
enter
dec
mov
push
je
add
jecxz
test
pop
xchg
xchg
inc
or
test
dec
rolb
jmp
sub
cmpsl
sahf
jno
push
or
lret
mov
sub
jmp
push
adc
rclb
aam
add
mov
sti
test
inc
mov
jg
jl
sub
cmp
add
push
add
and
andb
fwait
add
mov
pop
or
mov
jmp
jnp
cmp
add
rol
xchg
stos
in
mov
pop
cld
mov
fists
mov
jns
and
int
scas
fwait
mov
arpl
adc
lods
testb
xchg
movmskps
aam
stos
mov
repz
cmp
mov
inc
outsl
repnz
and
push
push
dec
xchg
push
xchg
or
mov
mov
addl
pop
mov
cmpsl
mov
iret
jo
idivb
sub
mov
add
comiss
xchg
mov
dec
inc
sub
sub
jbe
jnp
mov
xchg
push
mov
xchg
test
or
je
sti
insb
xchg
ss
cmp
cltd
test
popf
sub
inc
mov
push
inc
sbb
out
and
clc
push
dec
imul
sarb
aas
inc
fdivl
dec
mov
jp
mov
xchg
pusha
inc
dec
mov
mov
and
sbb
push
adc
fiaddl
xchg
and
push
lods
jno
data16
jnp
pushf
sahf
cmpsl
push
jo
test
add
sbb
lock
mov
jbe
repz
cli
lea
mov
push
cmp
pop
sbb
add
dec
arpl
jb
pop
xchg
dec
lret
pop
call
push
ret
fimuls
pop
mov
fists
pusha
sbb
or
jb
push
mov
mov
mov
pop
push
inc
pop
shll
xor
or
ror
xchg
imul
cmpsb
xchg
popf
pop
and
mov
fstps
clc
data16
dec
jnp
movsl
jecxz
lods
push
mov
push
pop
fcomps
lret
xchg
push
add
and
loopne
sbb
or
das
jl
mov
adc
push
aaa
and
push
sub
adc
sti
ret
dec
mulps
sub
mov
loop
inc
mov
adc
fidivrl
inc
adc
movsb
add
ror
pop
lcall
add
pop
loop
xor
scas
push
es
mov
ret
hlt
push
push
in
dec
scas
test
jmp
xchg
cmpsb
ja
push
mov
shll
enter
repnz
cli
outsb
in
fwait
in
fwait
lods
jl
xor
iret
and
jg
and
leave
jnp
lret
mov
mov
add
shr
aaa
repnz
popa
scas
sbb
push
outsb
imul
jg
out
ret
lret
insb
push
popa
jp
daa
repz
sbb
jb
pop
ja
jo
mov
mov
cmp
jmp
int
hlt
mov
daa
and
and
dec
nop
fcompl
rolb
jne
js
std
daa
lcall
lods
sbb
pop
mov
imul
movb
jns
stos
mov
adc
les
pop
adc
or
xor
shll
imul
xlat
inc
addr16
test
xchg
jge
adcl
sub
ficoms
xchg
fldcw
lret
je
ret
xor
scas
sub
xchg
out
inc
test
pop
pop
dec
leave
lock
pop
and
xor
repz
adc
pop
inc
test
sub
pushf
cmpsl
jnp
popa
add
mov
idivb
sbbl
jg
lods
scas
or
inc
push
add
mov
sbb
mov
sbb
and
jo
enter
and
xchg
cmc
mov
subl
sub
out
fildll
mov
ret
and
pop
sub
clc
pop
and
std
and
mov
adc
jl
and
sub
push
or
xchg
lcall
mov
outsb
faddl
add
push
push
dec
lods
and
mov
rclb
mov
repz
fcoml
popa
adc
fiaddl
jae
mov
xor
pushf
jle
and
pop
mov
aam
cmpsl
jle
lret
inc
insb
push
and
fdivl
mov
shlb
mov
dec
es
ds
xor
rcr
mov
jnp
stos
xor
push
ss
aas
pop
mov
cwtl
repnz
jae
mov
push
rolb
loop
cmp
out
push
outsl
fstl
ja
mov
pop
loope
xchg
jp
xchg
movsl
ds
mov
lock
mov
dec
aaa
fldenv
decl
in
in
movsl
clc
sub
hlt
test
rorl
loop
jl
imul
imul
pop
or
in
add
jae
dec
pop
cmc
mov
dec
int
push
cs
movsl
sbb
stos
out
xchg
mov
clc
jno
mov
adc
aam
adc
rcrl
mov
or
xabort
or
shlb
adc
cmp
cmpsb
test
outsb
push
push
mov
mov
pop
lcall
adc
out
xchg
call
xor
in
lret
add
jbe
xchg
imul
aam
pop
and
add
and
and
mov
xchg
mov
lods
xchg
push
cmpsb
xchg
pop
enter
fst
pushf
mov
in
rol
mov
cld
xor
inc
jno
push
pop
xchg
ud2
lods
sti
xlat
loop
pop
inc
inc
in
push
les
ficoms
std
outsl
pop
add
int3
mov
shl
lret
pushf
in
scas
ret
fadds
test
mov
or
pop
adc
push
ror
idiv
orl
cs
out
xchg
push
mov
in
mov
insl
jo
out
jns
scas
adc
xor
sub
shll
inc
mov
outsb
jno
ficoml
push
enter
xchg
push
clc
lret
add
xchg
inc
cmp
or
inc
loop
sbb
mov
adcl
lcall
push
jp
int3
mov
mov
minps
push
cmp
push
stos
rcrb
daa
add
dec
add
xchg
mov
stos
pop
sbb
sub
add
jl
cmp
xor
push
add
jge
pop
int3
push
sbb
mov
add
sbb
pop
nop
push
xchg
cs
dec
jp
outsl
sub
and
ret
push
movswl
mov
dec
xor
cmpb
icebp
xor
aas
cmp
jle
xchg
dec
pusha
insb
repnz
int3
cmp
push
lds
fdivl
loop
inc
pusha
out
mulb
sub
inc
jl
sbb
and
call
mov
push
mov
or
out
fdivrp
xor
push
shr
xchg
fnstcw
push
cs
aaa
test
push
inc
add
out
and
ret
push
add
push
insl
fisttpll
ret
inc
lcall
mov
push
insb
dec
test
jnp
movsb
cmpsb
and
in
xchg
scas
adc
lret
xor
jge
or
int
dec
xchg
jb
push
nop
and
aaa
sub
add
xchg
icebp
jbe
push
adc
pop
adc
jno
pusha
pop
shrb
dec
jp
lcall
xchg
stos
cwtl
mov
cwtl
adc
adc
mov
rolb
jp
sarb
fisubl
and
es
or
xor
sub
in
push
jecxz
push
xchg
mov
sbb
dec
imul
aas
and
or
dec
scas
imul
xchg
outsb
adc
jmp
sub
jno
in
jge
inc
subb
or
push
mov
pop
nop
iret
ja
mov
cmpsl
fldenv
cmp
pop
jmp
sahf
add
in
pop
test
jns
in
jb
add
loop
jns
movsb
rcrl
adc
in
mov
pop
or
mov
cwtl
js
jle
loope
dec
mov
aad
xorb
fwait
inc
ss
dec
fmuls
stc
or
lds
add
pop
jo
rclb
adc
jecxz
lret
arpl
xor
scas
stos
mov
jp
fisttpl
dec
cld
adc
inc
or
aam
mov
lret
cs
movsb
add
push
add
mov
dec
jmp
push
sbb
mov
sbb
int
push
add
jp
inc
test
cwtl
mov
les
cli
push
fwait
xor
lret
shlb
xchg
fwait
dec
add
mov
test
pop
inc
jne
jbe
in
mov
fs
inc
fbld
and
fwait
adc
cmpsb
call
xor
repz
push
or
or
jg
mov
fsubrl
push
cli
cmp
inc
imul
packuswb
dec
ret
adc
sarl
lds
pop
xchg
leave
lods
sub
jge
pop
dec
ds
out
dec
mov
mov
sub
das
fisttps
or
rolb
shlb
and
or
mov
push
jmp
sbb
das
sub
xor
std
and
stos
aad
mov
test
xor
arpl
andb
or
adc
add
insb
aaa
insl
cmp
outsl
in
lds
cmpsl
push
jne
push
rcrl
cmp
in
lcall
or
add
ret
iret
int3
outsb
pushf
cmp
mov
push
pop
dec
cld
or
scas
fistps
and
cmc
movsl
daa
sarl
inc
lret
pop
xchg
jns
lea
ficoml
pushf
insb
mov
xor
jge
lcall
xchg
xchg
adc
out
xchg
mul
mov
test
insb
dec
push
xlat
xchg
jnp
aaa
mov
push
loopne
out
int3
cli
icebp
add
rclb
sub
testb
pop
xchg
xchg
aam
xchg
je
add
cld
movsb
stos
push
loope
mov
xor
out
aas
pop
iret
jmp
insl
or
mov
add
nop
pop
inc
and
clc
xchg
dec
pop
insb
pop
cmc
mov
sbbb
cmc
push
or
hlt
mov
dec
out
inc
push
sbb
and
popf
lock
inc
mov
ficoml
mov
int
jmp
in
ds
or
ret
in
sbb
cld
pop
faddl
hlt
mov
xor
cmp
push
insb
jo
mov
jp
mov
sub
mov
movb
test
or
iret
mov
les
push
rorb
mov
jge
adc
int3
daa
or
rcrl
fisttpll
or
xchg
iret
fmull
mov
or
xor
sub
lret
xchg
call
cs
js
mov
push
js,pt
les
xchg
ss
daa
push
out
inc
shld
cld
mov
test
stos
xor
in
fdivs
rcll
xor
xchg
jge
or
sub
lds
mov
mov
lock
xor
mov
aam
stos
cli
mov
in
daa
and
jecxz
movsl
push
push
mov
mov
pop
inc
scas
ljmp
iret
pop
fcoml
scas
mov
aaa
dec
lret
jmp
mov
leave
xor
testb
movsb
mov
stc
jle
ss
mov
std
inc
inc
inc
in
cmpsb
shl
adc
loope
push
adc
xchg
mov
sbb
xchg
fs
movsb
and
sbb
loope
push
fists
pop
shr
dec
sub
jecxz
xorb
lahf
mov
xchg
imul
aaa
loope
into
xchg
xchg
inc
xchg
xchg
sbb
es
xchg
mov
xchg
pop
movsb
add
fs
lahf
xor
pusha
jbe
gs
dec
ret
push
push
pop
aaa
adcl
add
movsb
sbb
cmpb
or
je
movsl
nop
nop
outsl
xchg
jb
ljmp
jnp
into
sbb
and
push
dec
inc
or
and
pop
jns
mov
adc
imul
push
test
dec
xor
pop
mov
mov
js
jle
cld
and
mov
ss
mov
movsb
nop
sbb
inc
pop
pushf
repz
and
xor
test
jnp
fidivrs
ljmp
popa
xor
mov
aas
cmp
jecxz,pn
xchg
adc
out
test
dec
lea
mov
into
push
mov
adc
inc
insb
dec
test
jno
inc
stos
cld
aaa
sbb
sahf
les
jmp
push
sahf
pop
push
ja
das
bound
push
sub
nop
cs
fisubrl
pop
test
jg
jp
adc
xchg
dec
sbb
sbb
mov
cmp
gs
push
cbtw
cld
push
pop
add
cmp
xchg
add
xor
lds
push
xor
dec
movsb
jnp
sub
jno
pop
cli
outsb
aam
stos
sub
mov
inc
or
int
andl
arpl
and
orl
push
or
fisubs
mov
stc
std
inc
mov
clc
mov
int
shl
lret
inc
cli
cmp
subb
lods
push
mov
dec
hlt
stos
xchg
mov
xchg
test
jmp
push
dec
movsb
loope
imul
imul
mov
fildll
pop
jb
adc
jp
test
imul
xchg
xchg
mov
faddp
cmp
rcr
out
sub
dec
fldcw
arpl
push
negl
push
mov
popa
out
add
push
int
in
jecxz
inc
in
sub
sbb
add
and
sbb
shll
shll
lods
ss
pop
sub
popf
jae
rorl
add
mov
pop
xchg
inc
xorb
dec
dec
mov
push
pusha
mov
addr16
mov
inc
mov
scas
jg
shrl
jg
mov
mov
and
jo
lahf
mov
daa
cmp
fs
adc
popf
dec
out
mov
or
in
jno
js
jno
xchg
fucom
push
adc
lds
fdivrl
pop
xchg
pusha
pop
push
dec
lret
jb
cmpsl
js
sub
xor
xchg
call
adc
mov
dec
and
mov
xchg
cwtl
in
shlb
aaa
adc
dec
inc
int
mov
mov
sbb
testl
dec
sbb
fsubp
xor
repnz
lret
xchg
icebp
push
enter
push
in
adc
incb
mov
out
mov
adc
cmp
or
xor
xchg
dec
jmp
pop
or
cmp
push
mov
pop
pop
jmp
push
fsubl
cmpsl
cmp
cmc
iret
dec
pusha
sti
aas
xchg
sbb
add
push
xor
jl
callw
adc
sbb
pop
or
test
cmp
je
es
jbe
push
mov
push
int
cmc
sub
mov
push
fldenv
iret
repz
rol
ret
pop
pop
pop
repnz
rcrl
mov
lret
dec
mov
stos
hlt
ja
sub
ds
xor
inc
test
ljmp
lods
test
rorl
add
js
sub
push
inc
sub
xchg
xor
roll
fidivrs
xor
daa
cli
scas
sbb
jecxz
xchg
int3
test
into
mov
adc
adc
loope
inc
mov
loope
sti
push
cmpsl
mov
insb
pop
es
dec
mov
pop
dec
inc
js
dec
dec
push
inc
adc
push
popa
add
inc
mov
jmp
xchg
mov
xchg
or
xor
decb
mov
mov
or
popf
sbb
mov
adc
mov
pop
lea
pop
jb
mov
cmpsl
jl
and
leave
ja
daa
movsl
stos
arpl
mov
and
and
jnp
adc
outsb
or
mov
ss
enter
aaa
sbb
sahf
in
test
ret
sub
int
add
sbb
test
stc
les
ret
call
mov
lods
sahf
cwtl
jecxz
hlt
mov
and
lods
pop
or
inc
mov
mov
sbb
jns
inc
mov
pop
add
imul
mov
fildl
outsl
cmp
js
and
bound
and
mov
sub
pop
mov
icebp
cmp
mov
pop
add
mov
stos
cmpsb
jp
xchg
pushf
cmp
enter
xchg
pusha
sub
sti
arpl
in
jo
mov
add
es
pop
cmp
gs
addr16
iret
aad
mov
xchg
jo
lds
in
jae
fisubl
pop
test
mov
mov
daa
jb
insb
gs
mov
fldl
dec
sbb
testl
inc
jae
insl
out
sub
push
sbb
movsb
das
movsl
stc
imul
je
jecxz
dec
int
sbbl
jb
ret
rcrl
mov
dec
mov
or
fwait
ds
cmpsb
jno
pusha
adc
and
es
lret
sub
cli
jno
notb
pop
cmp
imul
add
nop
push
fimull
or
add
les
sbb
pop
cmp
das
inc
jo
hlt
mov
push
out
mov
and
lret
shr
inc
add
fwait
mov
addr16
int
cmp
jp
inc
push
insb
xor
sbb
lcall
xchg
push
xchg
inc
jp
in
mov
push
bound
mov
sahf
adc
adc
mov
xchg
orl
xchg
lret
orl
bound
adc
xor
and
lods
sub
cmc
sbbb
loop
test
clc
cmpsb
imul
push
push
push
gs
or
push
fsubl
or
cmp
push
sub
clc
xchg
repz
jae
ljmp
add
inc
rcl
mov
sahf
fsts
sahf
add
add
pushl
push
sbb
call
adc
push
lds
sbb
les
lahf
aad
fs
xorl
push
sbb
add
cli
test
xor
mov
sahf
cli
push
inc
data16
and
ja
dec
pop
sub
cmc
aad
push
jae
test
or
insb
cmpb
add
popf
mov
cmpsb
std
mov
add
jno
xchg
pop
xchg
mov
paddusw
in
shrb
lahf
cld
js
icebp
in
lds
cli
aam
pop
pusha
scas
xchg
scas
pop
out
js
test
lods
xchg
int3
add
loop
mov
test
cmp
mov
int3
add
pusha
push
out
push
jmp
stos
inc
jecxz
icebp
testb
jl
cli
push
ljmp
pop
sbb
xchg
fldcw
dec
push
cmc
sbb
jmp
pop
repnz
adc
cmc
dec
and
aam
aaa
loope
fwait
lret
sbb
addb
pop
mov
sahf
fs
mov
jmp
xchg
int3
fdivs
sbb
aas
daa
jbe
ficompl
mov
fwait
sbb
cmp
xchg
jg
je
inc
add
push
iret
cmc
mov
inc
jo
inc
push
sbb
mov
pop
cmp
out
add
bound
int
jecxz
jae
and
and
and
addr16
mov
cmpb
sbb
push
into
add
mov
loope
and
pop
jb
out
cwtl
mov
adc
rol
mov
js
push
add
leave
lret
pusha
outsb
aam
out
cmc
mov
test
hlt
xor
add
cli
cmpsl
mov
fsubrp
aam
icebp
notb
pop
ss
sahf
xchg
sub
jo
les
cmpl
mov
repz
jle
decb
or
mov
jmp
jp
push
cwtl
mov
cli
testb
jp
sti
pushf
inc
lcall
cmp
loope
adc
shlb
dec
ljmp
sbb
sbbl
dec
notb
scas
cmp
gs
pop
scas
aas
sub
pop
negl
or
sbb
flds
push
rorb
js
call
inc
loopne
cltd
xorl
arpl
int3
xchg
addr16
mov
push
adc
data16
insl
aam
cmpsb
in
aad
mov
repnz
inc
mov
sar
and
xor
xchg
and
lcall
push
repnz
adc
fistl
mov
arpl
dec
mov
pop
push
out
push
xchg
sbb
jle
mov
jae
ret
mov
lods
popa
mov
jmp
mov
lret
addb
dec
sub
mov
or
xor
call
rcll
jbe
dec
add
imul
pushf
xabort
popa
xor
lahf
daa
ja
cmp
mov
leave
xor
out
adc
sbb
mov
insb
add
test
dec
add
jne
push
mull
mov
out
xor
pusha
push
inc
iret
iret
xchg
xor
mov
ljmp
sbb
imul
dec
aaa
pushf
int
pop
rcrb
mov
icebp
fistps
clc
pop
popa
and
test
pop
lcall
daa
ss
jecxz
out
or
pop
les
mov
jns
add
add
mov
ret
into
inc
jecxz
sub
jmp
imulb
and
jp
insl
push
xchg
lret
lods
cmpsb
inc
xchg
das
jno
push
cwtl
lahf
pop
jg
ja
sbb
xchg
jae
xchg
adc
xor
bound
mov
in
repnz
or
dec
ljmp
push
shlb
andb
lret
ljmp
sbb
jne
les
rorl
idivl
xor
lods
mov
sbb
xor
jae
aaa
xor
jns
push
cmpsl
pop
mov
jno
jns
inc
ja
test
ret
mov
lea
fmuls
mov
pop
fs
je
mov
fdivrs
adc
inc
pop
sarl
push
jp
fisttpll
es
imul
dec
rolb
jnp
xor
std
movsl
lret
fwait
inc
push
dec
add
sbb
data16
pushf
imul
ficompl
jl
push
cld
xchg
and
ljmp
popf
test
jecxz
add
fisubrs
aas
add
aad
add
dec
pminub
fdivl
test
lods
jb
mov
jns
mov
jns
mov
je
les
mov
push
test
insb
orl
push
pop
sub
cmp
xchg
ret
pusha
scas
roll
lahf
into
xor
adc
int3
xor
push
fldenv
movsb
imul
pushf
out
mov
add
sbb
shrl
lods
push
clc
mov
lock
roll
or
jo
push
mov
test
dec
ja
cmpsb
shl
clc
pusha
mov
dec
jecxz
dec
adc
add
xchg
int
ja
inc
fwait
inc
xchg
sub
bnd
shl
mov
jno
xor
mov
sub
int
fists
jmp
jo
pop
in
icebp
es
push
add
in
sbb
jg
in
inc
jb
ljmp
iret
lahf
push
popa
add
push
add
adc
push
xor
setb
inc
sbb
xor
in
subb
xor
lds
adc
sbb
aas
jnp
sahf
sub
adc
jp
pusha
mov
dec
and
test
insl
pop
dec
test
and
mov
mov
or
jbe
mov
clc
int3
jnp
sub
sbb
pop
pop
pop
cmp
adc
je
inc
push
jo
xor
testl
pop
jecxz
fadds
mov
outsl
cmpsl
pop
cltd
push
push
ss
jecxz
mov
pop
loope
xchg
dec
lcall
mov
sti
ret
mov
cwtl
add
pop
or
pop
cwtl
sahf
test
test
and
adc
mov
mov
out
mov
cmp
sub
cltd
dec
add
mov
dec
leave
pop
jle
sbb
or
push
mov
scas
sub
out
sub
fimuls
xchg
push
shrl
aam
loopne
xchg
ret
sbb
mov
pop
out
ret
lea
mov
lahf
movsl
subl
bnd
mov
cmp
pop
inc
sub
and
push
or
int
call
cmp
pop
cmp
scas
lods
push
jmp
mov
jp
lods
mov
lods
notl
and
insb
cmp
and
clc
push
cmp
mov
fidivs
out
or
test
inc
inc
call
in
mov
ds
pushfw
test
xor
fwait
cmp
std
mov
push
daa
xor
movsl
cmpsl
shlb
call
add
mov
sub
mov
inc
mov
xchg
shlb
jp
sub
nop
in
cmpsl
cld
add
retw
pop
jecxz,pt
insl
dec
into
push
addr16
loopne,pt
cmp
popa
inc
mov
jb
lds
jae
jmp
sbbb
das
ss
mov
jecxz
mov
data16
sarl
inc
inc
jl
leave
mov
cmp
lea
cmp
push
lods
mov
dec
scas
into
int3
rcrl
sbb
xchg
jl
and
or
jg
daa
pop
bound
pusha
push
cmp
lock
xor
xor
shl
clc
sbb
in
loopne
neg
xchg
inc
sahf
jns
pop
arpl
push
xorl
jmp
and
jle
push
loop
or
sahf
dec
push
xchg
xchg
cmp
cmpl
push
je
js
pop
cmpsb
dec
cmpb
pop
mov
push
scas
psllw
adc
ljmp
pop
lahf
mov
add
inc
pop
insl
jns
mov
decl
filds
iret
mov
xchg
jp
cmp
dec
xorl
mov
sbb
imul
cmc
pusha
mov
xchg
lods
push
mov
sbb
nop
dec
dec
cltd
imul
in
adc
jb
xor
aas
push
aaa
outsb
pop
sub
sbb
or
jecxz
jle
add
sub
cmp
jo
jne
loop
popa
imul
adc
mov
ljmp
fdivs
dec
sbb
adc
pop
test
adc
je
out
lret
test
sbb
add
fstl
or
loope
scas
add
je
cmp
mov
xchg
jno
scas
mov
hlt
ror
xchg
cwtl
xor
cmp
imul
push
inc
das
pusha
mov
fidivrl
add
adc
xchg
mov
adc
jae
fs
adc
adc
fldln2
shll
adc
sub
out
sub
sahf
pop
jmp
jmp
fsub
jg
and
cmp
jns
or
adc
scas
mov
cmp
insb
rcll
scas
sti
pop
lcall
jmp
mov
dec
jge
sbb
adc
push
add
movsl
test
lret
insl
xchg
fmull
aaa
or
mov
divl
gs
push
repz
mov
add
je
jl
into
std
and
adc
dec
sbb
push
js
call
pop
shlb
pop
dec
xor
mov
adc
push
fs
pop
gs
and
pop
sbb
pop
inc
jmp
mov
add
outsb
sub
in
xor
inc
cmpsb
push
and
shll
vpunpcklbw
jmp
adc
jecxz
test
jae
jbe
outsb
call
ljmp
stos
pusha
mov
cmp
dec
xor
mov
scas
ficompl
dec
inc
or
add
jb
loope
add
sbb
imul
cmc
jns
adc
cmp
sbb
cld
fidivs
sahf
inc
mov
sti
arpl
mov
xlat
cmovp
divb
lea
push
jmp
std
pop
dec
mov
rep
js
inc
add
addr16
adc
fdivs
imul
int3
ja
jnp
and
add
loope
lds
ljmp
mov
addr16
lret
imul
mov
push
addb
insb
and
mov
lahf
sbb
or
add
out
leave
xor
leave
call
pop
and
mov
sar
sub
fadds
cmp
jp
test
adc
inc
frstor
adc
pop
stos
cwtl
jnp
mov
aad
mov
in
mov
add
test
pop
loopne
es
xchg
push
jnp
jb
std
ljmp
xlat
mov
adc
arpl
in
mov
mov
int
fmuls
fwait
out
lods
mov
jp
pop
xchg
mov
mov
out
add
insl
mov
test
add
mov
lods
sub
add
lret
and
js
mov
subl
adc
popa
test
sarl
lret
pop
dec
xor
mov
and
call
das
jnp
outsb
stos
daa
adc
pop
call
dec
adc
adc
rolb
cld
jnp
adc
arpl
jle
roll
lds
leave
mov
push
mov
dec
fs
cs
push
xor
mov
fs
outsl
cmpsl
sbb
sbb
test
cmp
into
mov
in
fwait
mov
mov
jl
or
pop
inc
and
test
pusha
inc
sub
lds
add
flds
lock
arpl
sub
inc
clc
jns
js
push
sbb
dec
push
push
xlat
cmp
daa
ficomps
pop
jb,pn
ret
dec
fldl
fiadds
mov
clc
cwtl
mov
sub
imul
mov
jle
xor
sub
test
xor
scas
and
adc
popa
fs
sub
add
pushf
mov
stos
dec
pop
popa
dec
mov
xor
imulb
div
push
aam
scas
movsl
inc
and
cmp
fsubs
pushf
out
cmp
push
cmp
jo
sbb
push
test
mov
enter
leave
cmp
pop
lcall
loop
test
sub
in
inc
ljmp
outsl
jmp
insl
pop
movsl
lds
or
cmp
mov
xchg
or
push
mov
out
add
mov
das
aas
cmp
push
lods
xchg
test
jp
inc
mov
xor
loop
pusha
ss
adc
jmp
mov
movsb
cwtl
pop
shlb
stos
pop
ljmp
or
mov
pop
or
xor
xorl
mov
dec
lea
dec
js
cli
fs
inc
insl
mov
jg
lcall
jg
mov
ja
mov
popf
es
mulps
out
cmp
mov
into
mov
dec
inc
mov
test
sbb
fnstcw
movsb
xchg
mov
cs
sbbb
fwait
jb
xchg
inc
cwtl
out
aad
push
addr16
fiadds
js
xchg
mov
aam
mov
jge
adc
call
out
pop
clc
scas
call
cld
imul
mov
adc
popf
lahf
sbb
scas
pop
cmc
stc
hlt
jno
pop
sub
fstpl
cmp
fdivs
push
ss
pxor
cs
movsb
mov
mov
dec
or
mov
je
adc
ret
lods
pop
or
call
sub
mov
pop
outsl
mov
xchg
or
mov
loopne
jo
mov
aas
lret
mov
sub
jle
and
test
mov
fsts
adc
popa
cmpsl
or
adcl
mov
mov
push
mov
xor
iret
into
cmpsl
popa
push
lea
xlat
jns
sub
test
addl
outsl
loope
add
cmp
hlt
pop
cmpsb
and
dec
sub
fs
cwtl
hlt
sbb
cmp
mov
lret
xchg
in
add
add
aam
out
dec
dec
stos
negb
repz
mov
and
enter
sbb
push
mov
out
insb
adc
xchg
cltd
mov
lods
xor
add
enter
mov
cmp
outsl
mov
es
adc
cmp
arpl
or
push
push
dec
xchg
lcall
sahf
add
cmp
adc
scas
xor
dec
daa
cmp
in
sub
out
xor
adc
out
xor
sub
xchg
repz
add
lock
lods
xchg
mov
call
nop
or
jg
cmc
lea
cld
pushf
gs
adc
inc
jo
outsb
dec
mov
cld
cmp
shll
aaa
test
daa
push
adc
ret
xchg
or
xchg
pop
sbb
pop
icebp
pop
jb
pushf
js
mov
ljmp
imulb
lods
call
aas
mov
push
push
insl
fsubl
push
cmc
cld
push
ja
aam
dec
dec
mov
fucom
mov
popa
enter
adc
into
andl
add
aad
loop
xchg
and
popw
arpl
jno
mov
mov
cmc
into
sub
or
and
mov
fwait
and
push
xchg
lods
mov
pop
jnp
aad
and
test
inc
push
or
sbb
ds
ss
mov
repnz
jecxz
mov
or
inc
js
shrb
int3
popa
gs
insl
and
and
stc
dec
cli
inc
jnp
pop
fisubrs
adc
adc
cs
xorl
add
xchg
sub
outsb
psraw
out
icebp
add
push
inc
jp
notl
sub
pop
je
rorl
adc
push
jne
push
or
push
and
scas
jbe
scas
jb
sbb
lahf
add
xor
pop
jo
ds
cld
loopne
mov
iret
sbb
xlat
jnp
jmp
pop
je
in
int
mov
mov
inc
fbld
mov
sbb
add
jecxz
je
cmc
jecxz
pop
dec
lock
clc
xchg
mov
aam
mov
rorl
test
pusha
dec
shlb
clc
xchg
pop
xchg
pop
jnp
lret
jle
fsubr
test
fmul
mov
cs
sbb
imul
pop
or
in
mov
into
xchg
outsb
test
pop
or
aaa
inc
lea
xor
das
mov
aad
aam
arpl
cwtl
sub
pop
jns
popa
lret
cmp
jno
cmp
subb
loopne
fidivl
xchg
jno
jb
ret
push
sub
fcoml
cltd
loopne
pushf
movsb
in
test
std
mov
pop
inc
insb
cmp
daa
pusha
daa
pop
mov
fcoms
out
gs
push
mov
out
push
cltd
sti
les
mov
imul
mov
adc
sub
or
sub
pop
subl
xchg
mov
mov
repz
fwait
xor
dec
in
daa
fidivs
jne
and
or
and
mov
int3
out
dec
push
push
add
xor
leave
pop
adc
dec
into
outsl
stos
xchg
jno
and
or
jmp
daa
arpl
outsl
cs
xchg
dec
xchg
inc
sub
dec
pop
ret
ret
imul
call
adc
or
stos
rcl
add
test
outsb
pop
push
sub
push
sbb
scas
inc
add
push
inc
rorl
and
mov
incb
in
pop
adc
insl
xchg
leave
rorb
mov
jmp
fisubrl
stc
aam
pop
adc
out
push
jle
shrl
rorb
lret
xor
fs
rcl
sub
jp
lahf
sub
fwait
imul
inc
mov
sbb
inc
mov
dec
push
pop
stc
sub
notl
pop
xchg
cs
fcoml
gs
xchg
lds
in
mov
jg
les
clc
cmp
add
pop
test
mov
pop
xchg
cmpsb
setnp
mov
in
cli
scas
sbb
fists
mov
jl
dec
mov
stos
push
mov
or
aam
lea
in
push
gs
push
sbb
xor
loope
dec
ds
push
and
xchg
xchg
push
push
filds
add
xor
outsb
pushf
leave
add
sub
lock
data16
xor
or
xor
xchg
jp
fdivl
ss
mov
daa
sub
sub
inc
lods
rcr
pop
ja
sub
daa
mov
mov
xor
mov
jp
add
movsb
mov
out
add
push
das
fistpll
sbb
xchg
add
daa
mov
into
add
cbtw
push
ret
lcall
stos
int3
mov
inc
cmc
sub
sbbl
in
xchg
lsl
imul
pop
mov
pop
mov
ljmp
mul
mov
int
mov
inc
or
in
lahf
lods
dec
sahf
cli
stos
cmp
dec
inc
and
std
loopne
mov
lods
out
lret
je
mov
outsb
pop
adc
lret
jbe
mov
and
jp
js
jg
xchg
fcompl
mov
cmpsl
push
jmp
scas
cmc
push
lret
push
int
pop
dec
cltd
or
xchg
sub
adc
jb
sbb
dec
stc
outsl
cmpsb
aad
out
andb
mov
dec
push
mov
les
int3
ds
lods
imul
lds
pop
stc
mov
addb
pop
int
icebp
push
mov
in
sub
adc
jecxz
clc
cld
in
mov
jo
fdivs
dec
push
ret
jo
repz
out
push
iret
pop
shll
fimuls
push
mov
xor
jge
std
xchg
js
lods
aad
rcrb
fcmovnbe
lock
test
pop
sub
sar
mov
dec
stos
ds
xchg
fcmovbe
adc
cmp
out
fstpt
and
mov
out
pminub
das
mov
jo
mov
xlat
sbb
xor
or
jmp
cwtl
pop
jle
pushf
out
movsb
fnstcw
pop
xor
mov
pop
out
addb
add
setl
pop
or
sbb
and
pop
pop
mul
xor
aam
jle
mov
push
stos
cld
fldenv
jno
stos
xchg
dec
ret
leave
test
or
and
and
aas
jb
outsb
jne
inc
and
mov
or
push
mov
push
xchg
mov
xor
in
scas
shll
sbb
std
adc
aad
jp
xchg
fcmove
scas
add
pop
and
push
nop
mov
in
xchg
lcall
sub
insb
push
cmc
push
mov
lcall
pop
pop
insl
xchg
mov
cli
gs
sbb
mov
pop
xorb
imul
popa
sbb
cltd
add
jecxz
jo
sbb
add
pop
mov
and
pop
popa
sub
add
xchg
jbe
jle
mov
mov
push
mov
xor
adc
jbe
mov
stos
lret
sbb
insb
mov
mov
pop
aad
pop
push
push
jle
bound
fdivrl
int
repnz
mov
fidivrs
push
sub
test
mov
rol
add
inc
sub
out
mov
xor
xchg
jbe
mov
xchg
in
pushf
mov
mov
cmc
stc
dec
xor
sbb
or
mov
shll
jno
mov
inc
xchg
sbbb
pop
jecxz
stos
outsb
lcall
push
or
cmpsl
or
cwtl
fcmovnb
fildll
push
pop
xlat
cmp
mov
aas
xor
and
loopne
leave
cld
mov
rolb
in
add
icebp
mov
mov
xchg
lock
ljmp
movsl
adc
xor
add
test
lea
and
xchg
lods
push
cmp
and
inc
mov
sahf
scas
mov
jge
ds
aas
iret
xor
outsl
sbb
gs
fcompl
or
jb
sbb
pop
notl
mov
das
sarb
fs
fildl
mov
pop
repz
mov
loopne
dec
sub
sti
stos
je
sarb
push
paddq
out
das
sbb
fwait
cli
je
adc
and
insb
inc
cmp
cli
popf
and
mov
loope
pop
out
or
fsts
je
scas
inc
js
inc
or
xor
movl
mov
sti
mov
hlt
xor
sbb
or
push
inc
mov
add
nop
test
push
push
adc
adc
test
mov
test
insb
add
pushf
sub
push
jns
mov
xchg
or
ljmp
imul
or
add
sbb
addr16
pop
mov
js
rorl
xor
sahf
jns
dec
gs
fs
mov
popl
jne
inc
sub
data16
lret
dec
jecxz
aas
bound
sub
fdivrl
js
daa
cmp
inc
mov
cltd
sahf
insl
mov
or
test
mov
mov
loopne
cmp
ret
inc
ljmp
jb
lret
addb
jg
loopne
cmc
xchg
add
inc
mov
sahf
mov
push
mov
mov
repz
out
mov
mov
pushf
pop
stos
imul
loopne
ret
jnp
xchg
jecxz
xor
cmp
jnp
loopne
mov
aas
jno
mov
fimull
cwtl
icebp
jo
sub
fwait
js
sbb
out
xor
mov
fadds
adc
adc
movl
dec
sub
rorl
add
and
je
mov
ret
xor
pop
mov
sub
stos
inc
xorb
dec
cltd
cmp
mov
sub
arpl
pop
ror
xlat
cmc
in
or
lret
lcall
in
jle
bnd
ficomps
mov
push
inc
pop
lahf
mov
lods
dec
sbb
cs
hlt
mov
pop
test
out
jge
pop
outsb
jne
les
mov
shrb
xchg
adc
add
insl
dec
cmp
lret
pop
addl
push
mov
push
fisubrs
movsb
sbb
sbb
mov
dec
and
rcrb
mov
xor
fstps
sbb
dec
pushf
fs
pop
popf
ljmp
jb
dec
and
xorb
jns
xchg
cmp
ljmp
inc
test
cltd
push
and
data16
add
inc
fmulp
pop
arpl
mov
jns
aad
mov
or
jl
jae
jecxz
inc
xor
and
ja
test
mov
jbe
or
mov
outsl
lea
sarl
loope
pop
addr16
stos
mov
sahf
int3
xchg
xchg
cmp
repz
out
int3
fldpi
rcrb
mov
jbe
mov
jbe
pop
das
cltd
insl
jp
mov
in
pop
lock
mull
lahf
mov
lds
es
push
cld
test
gs
cmp
add
jns
push
push
sub
xor
cmp
sub
notb
stos
or
stos
jle
cmc
xchg
leave
ss
sar
push
imul
mov
test
sbb
jmp
aad
mov
aaa
xchg
xchg
fs
or
or
sub
repz
aaa
and
add
cmp
sub
shll
mov
ja
test
xchg
rolb
sahf
scas
inc
inc
test
imul
test
movsl
lods
mov
or
xor
inc
pop
adc
clc
cltd
aad
mov
pop
out
into
fucomi
push
jno
ljmp
sbb
push
cmp
movl
cmp
inc
cmp
fisubs
adc
pop
jl
xchg
movsl
adcb
out
or
popl
cmpsl
xchg
dec
std
pop
repz
sbb
pop
jmp
jge
les
jg
cmp
pop
xor
jge
int
arpl
push
xchg
fidivrs
leave
dec
mov
sub
mov
mov
bound
mov
pop
hlt
or
icebp
mov
sarl
movsl
pop
push
push
mov
pop
into
lcall
addr16
mov
fcmovnb
adc
daa
dec
cwtl
cmp
jg
fldt
and
sbb
push
ss
and
cli
cmc
lods
sahf
mov
in
inc
in
mov
ret
jmp
imul
fistps
outsb
push
add
pop
cld
cmpl
mov
sbb
mov
in
or
inc
ja
int3
aas
pop
mov
sub
jbe
loopne
outsl
orl
cli
outsb
and
shlb
call
sub
jecxz
pop
adc
sti
enter
xorl
test
pop
cmc
hlt
sbb
test
cmovs
ljmp
cwtl
shll
test
rorb
add
add
and
test
std
cmp
sub
scas
loope
dec
push
jno
sub
ret
mov
jns
push
jbe
jle
jg
add
mov
aas
ss
mov
fwait
mov
mov
mov
jnp
out
stos
inc
scas
adc
mov
dec
xlat
inc
pop
rolb
into
adcl
mov
mov
or
pop
movsb
loope
mov
push
and
rorl
insb
adc
stc
cmpsl
aas
and
fisttpll
inc
aaa
xchg
shll
lret
imul
pop
mov
ljmp
xchg
jbe
out
popa
aam
sti
les
je
push
ds
nop
lods
stc
out
add
mov
clc
cld
out
mov
or
test
repz
mov
or
das
dec
mov
ffree
sbbb
dec
add
movsl
mov
iret
xchg
adc
cmpsb
pop
clc
loopne
inc
or
mov
mov
inc
test
and
loop
movsl
mov
inc
cmp
fdivrs
movsb
push
or
lds
out
dec
pop
repnz
sub
pop
pop
popa
add
inc
xchg
rcrl
xor
xor
mov
cmc
push
xlat
lret
incb
or
and
mov
adc
fiadds
cmp
push
and
mov
sarb
repz
and
adc
xor
insl
adc
es
sub
mov
out
add
in
pop
mov
adc
mov
lcall
iret
ret
sub
ror
push
pop
bound
cmc
cltd
jae
pop
add
aas
xor
repz
flds
adc
popa
out
ljmp
add
rcrl
out
xchg
in
xchg
sub
xchg
das
pop
rcrl
and
xor
push
icebp
sub
movsl
cmpsl
lea
mov
jae
xor
stc
dec
cmp
shll
adc
test
mov
leave
mov
flds
sbb
pushf
fsubrl
clc
scas
js
dec
pextrw
pop
mov
pushf
mov
jns
adc
pop
int3
scas
jne
fiadds
out
pop
pop
xchg
lahf
lret
call
pop
mov
push
outsb
repz
cmpsl
jp
mov
popf
adc
add
pop
cmpsb
je
ds
sub
in
dec
movsl
inc
mov
aaa
pop
fiaddl
dec
cmp
sbb
mov
add
and
insb
sbb
js
popa
mov
lret
cmp
lcall
fwait
insb
loop
adc
jge
mov
add
popa
lcallw
test
xor
push
push
dec
push
adc
es
cmp
fsubs
xchg
push
jle
int
xor
es
adc
lahf
mov
divl
mov
cmp
sbb
xchg
fiaddl
mov
in
push
ja
jecxz
lock
imul
sub
loope
dec
in
lret
sub
push
out
mov
or
pop
cli
jle
pop
push
jl
fisubl
repz
bound
cwtl
mov
push
jno
addr16
mov
lret
mov
sub
add
cmp
and
popf
mov
xchg
sub
xor
test
jge
mov
cli
mov
insl
cmp
sub
lock
cs
into
ja
rep
in
xchg
xor
pusha
push
sbb
int3
pop
pop
sti
jne
mov
and
daa
int3
xchg
xchg
and
lret
jle
std
test
out
jmp
enter
data16
xchg
dec
jge
ret
xchg
mov
lods
lahf
test
fimuls
es
jmp
incb
push
loopne
cmp
imul
or
aam
jo
mov
pop
cltd
mov
rolb
cli
push
in
mov
lods
push
test
hlt
sahf
jmp
push
xlat
shlb
imul
xor
fstps
dec
push
sub
mov
jmp
out
imul
xor
inc
mov
aam
and
mov
add
testb
insl
dec
shlb
ret
and
pushf
mov
sub
loop
dec
shlb
dec
imul
stc
movsl
enter
test
adc
xchg
pushf
call
roll
xor
rcrl
jo
inc
and
pop
int3
std
jno
stos
rolb
and
in
pop
sub
jnp
arpl
in
loop
push
ja
xor
into
iret
lods
mov
and
push
std
ljmp
repz
inc
xor
adc
or
xchg
lock
push
lret
cmp
hlt
lret
mov
stos
das
fnstcw
shrb
ja
mov
pop
mov
sub
fisttps
or
push
scas
xor
mov
push
inc
test
mov
or
push
pop
mov
push
pop
fcompl
mov
pop
fdivrp
outsb
fwait
xchg
jmp
loope
test
stos
out
loopne
and
addl
mov
repz
sub
jnp
mov
jns
sub
cld
fistl
stos
pop
outsl
xor
fmulp
lret
pop
sbb
sbb
ja
xor
mov
fstp
and
mov
lahf
adc
mov
cmpb
pop
jmp
pop
pop
jp
out
jo
daa
data16
pop
fwait
mov
xor
pushl
add
fidivl
loope
in
les
sub
fcomps
pop
pushf
nop
repnz
and
sarb
outsl
into
aad
in
pusha
add
mov
xor
and
cmp
mov
insl
adc
lahf
xchg
adc
psubusb
sar
test
pop
mov
sbb
les
mov
enter
jnp
inc
cmc
leave
jne
out
jge
testl
mov
push
xor
push
sbbl
add
or
popa
outsb
xor
ret
lcall
dec
mov
add
sbb
aaa
insb
push
imull
nop
xor
jg
popa
sbbb
scas
es
outsl
pmaxsw
mov
addr16
psrld
bswap
setne
xorl
test
xchg
and
add
imul
and
mov
sti
out
enter
rolb
inc
scas
adc
fsts
or
jae
jle
jle
movsb
cld
jp
cmp
iret
mov
pop
cmp
pop
insb
inc
jno
movsb
bound
out
and
jp
addr16
sub
dec
rolb
xchg
nop
adc
dec
sub
test
xor
jg
ljmp
adc
stos
inc
xchg
mov
or
cmpsb
push
outsl
inc
pop
decb
aad
pop
mov
ficomps
mov
inc
mov
cli
add
mov
push
pop
pcmpeqd
sub
out
adc
add
jl
inc
jmp
mov
push
or
sub
cmp
mov
mov
test
cld
xchg
ret
inc
or
sbb
jp
mov
xor
or
out
pop
inc
shlb
mov
or
mov
xchg
insl
shll
and
lret
inc
adc
dec
cmp
fsubrp
test
lea
outsb
fdivs
inc
cmp
xor
call
mov
and
inc
xor
xor
test
adc
mov
test
jae
dec
sub
xchg
jmp
insb
repz
rorb
jmp
cmp
das
aam
out
std
mov
xor
lds
pop
repz
mov
bnd
and
mov
xlat
mov
out
or
mov
push
in
adc
mov
sub
fcomi
jle
cltd
jecxz
adc
clc
in
rclb
mov
lret
pop
push
add
pop
jmp
clc
test
ret
mov
mov
inc
add
push
stc
repnz
inc
data16
sub
add
mov
xchg
adc
cltd
or
or
mov
and
mov
sbb
adc
push
add
add
fstpl
sbb
xor
jb
or
in
jl
mov
out
aaa
call
mov
popa
aam
jg
add
pop
xchg
outsb
or
in
pop
pop
add
cwtl
jp
sub
mov
mov
shrb
and
pop
into
rorl
movsl
lahf
sarb
and
xchg
sti
inc
hlt
adc
fwait
hlt
lds
das
lret
aad
stc
and
mov
jb
leave
out
dec
and
and
test
pushf
push
xor
xor
cmp
ja
imul
xor
popa
call
aam
pop
add
imul
mov
or
lea
xlat
cmp
or
lds
mov
xchg
add
jbe
fs
clc
and
shll
cmc
call
stc
push
add
sub
das
jle
into
sub
inc
pop
pop
adc
adc
repnz
adc
jle
adc
push
push
cs
sbb
dec
adc
cli
cmp
jl
and
icebp
mov
mov
testl
jb
push
pop
clc
inc
or
cltd
pop
or
or
fnsave
fisubrl
jb
push
dec
pop
inc
pop
cs
into
int
fs
inc
loope
jecxz
test
pop
jl
ret
lahf
mov
inc
aad
fcomp
sub
call
bound
pop
pop
push
test
jle
mov
fnstsw
xor
shlb
xor
xor
popa
cwtl
xor
cmp
inc
cmp
scas
and
push
xchg
dec
movsl
jb
addr16
out
and
pushf
jne
jns
pop
mov
pop
push
mov
mov
mov
mov
xchg
test
mov
std
rcrl
imulb
mov
adc
and
cmc
push
and
inc
icebp
cmp
pop
arpl
ficompl
xchg
sarl
rclb
or
jg
jnp
js
pop
dec
insl
xchg
jo
mov
mov
cli
lods
testb
ret
push
negb
xchg
cmp
insl
cmp
es
jl
add
pop
mov
hlt
loopne
push
and
dec
outsl
insb
mov
ret
push
mov
sahf
iret
inc
fcoml
subl
aad
into
ljmp
pop
push
shll
dec
je
mov
pop
mov
and
inc
cmpsl
sub
pop
jmp
dec
loope
popa
mov
inc
xchg
outsl
sbb
mov
mov
xor
pop
push
movsb
sbb
xchg
or
call
jl
xchg
push
bound
sub
repnz
xchg
sbb
inc
lods
out
xor
xchg
in
test
shrl
cmp
sti
pop
outsl
in
test
inc
enter
xchg
mov
xchg
sbb
and
jmp
shlb
call
sahf
push
fld
add
nop
xor
movsb
inc
xchg
xchg
andb
xor
dec
dec
movsl
mov
sbb
int3
cmc
xlat
cmp
sti
das
cmp
push
adc
icebp
pop
cli
das
shl
jo
test
hlt
gs
sub
xor
push
outsb
iret
push
add
push
outsb
cmpsl
push
repnz
fmul
movsl
cmpsl
leave
add
ljmp
xchg
inc
pusha
out
lcall
inc
std
lods
ss
dec
mov
mov
sahf
jg
add
or
push
inc
sbb
movsb
adcb
push
xor
lods
push
outsl
pop
popaw
mov
xor
adc
inc
add
xchg
int
xor
int3
dec
push
xchg
rcll
adc
dec
xor
cmpsl
rcrl
into
push
push
cld
xchg
je
inc
add
shl
fistpll
adc
cmc
fldl
mov
imul
rolb
rorl
or
jno
cmp
pop
test
pop
adc
into
or
lret
es
mov
fs
dec
cli
in
xchg
les
xor
cmp
inc
add
and
pop
insl
inc
push
mov
pop
sub
pushl
jmp
ficoms
ret
mov
das
cmp
enter
sub
shrl
and
xor
lahf
movsb
push
adc
hlt
push
cmpsl
mov
xchg
mov
cmp
add
and
mov
push
add
add
mov
adc
cmp
into
arpl
sbb
or
or
xor
outsb
mov
xchg
adc
pop
adc
push
jb
test
mov
jns
mov
jnp
jecxz
rorb
popf
mov
in
jno
testw
ret
and
fldt
fidivrs
int3
adc
sbb
xor
sub
xor
arpl
fistpl
cmp
aaa
ficompl
or
int3
and
mov
sbb
dec
mov
jmp
testb
and
pop
xchg
sbb
push
cld
push
fidivrs
jge
sub
xor
imul
ljmp
cli
xor
and
cmpsb
mov
out
jo
pop
aaa
lea
lret
aam
add
stos
stos
xor
or
xor
movsb
mov
test
xchg
es
dec
add
cmpsb
cmpsl
dec
cmp
divl
lock
or
sub
sahf
mov
out
into
xchg
out
sub
sbb
data16
mov
pop
sub
jno
loopne
sbb
enter
test
bound
dec
icebp
add
adc
insl
div
jmp
stos
and
sub
pop
lock
push
mov
mov
add
cmpsl
xchg
dec
test
das
xor
cwtl
rdmsr
cs
je
fistl
jecxz
out
ja
lods
test
in
push
jmp
repz
jle
adcl
aad
push
cs
add
mov
cmp
and
out
loopne
sar
cltd
inc
pusha
imul
cmp
aaa
inc
mov
ja
xor
cmp
xor
xchg
test
mov
cltd
lcall
sub
add
sbb
fdivl
sahf
sbb
add
xor
xor
jp
lods
pusha
and
in
mov
aas
call
mov
sub
icebp
mov
gs
mov
cmp
xlat
out
sub
ja
mov
xchg
fsubrs
adc
lret
sti
movsl
test
or
imul
xor
gs
in
xor
and
push
add
xor
cmp
dec
fdivr
push
in
or
sti
cmpb
pop
xor
mov
pop
inc
sahf
push
mov
es
lock
and
xlat
fldenv
sti
out
movsl
pop
push
mov
shr
or
lea
divps
fsts
xor
ret
push
jge
int3
cmp
rol
add
push
mov
cwtl
jp
fimull
mov
lret
loop
imul
mov
jmp
fstl
icebp
cs
jnp
inc
popa
mov
mov
sti
jae
enter
mov
ret
rolb
aas
adc
rol
test
push
sub
xor
in
ficompl
movsl
movsl
mov
mov
add
aaa
pop
dec
dec
in
mov
popf
iret
cmp
out
mov
ljmp
in
mov
in
fptan
sbb
orl
ds
mov
push
adc
push
mov
lahf
dec
adc
push
lea
scas
push
inc
add
dec
xchg
xor
scas
in
out
repnz
psubusb
in
add
sub
and
enter
sbb
ror
roll
jg
push
lods
jbe
dec
aad
push
xchg
icebp
fstl
pop
pop
arpl
movsb
push
inc
sbb
sbb
xor
mov
mov
and
jae
jnp
and
mov
mov
pushf
pusha
insl
sbb
lret
push
add
sub
dec
nop
pop
in
ret
pop
ret
add
sub
pushf
sub
in
sbb
cld
pop
cmc
inc
cmp
mov
enter
xlat
sbb
adc
mov
and
arpl
loopne
mov
loope
and
or
hlt
mov
or
gs
pop
pop
idivl
push
fcoml
scas
imul
pop
mov
mov
cmpsl
or
outsl
inc
jbe
mov
push
notl
sub
jmp
or
pop
lcall
cmc
mov
mov
cmpl
aaa
mov
sub
int
jo
xchg
push
mov
adc
pop
jmp
push
push
jle
pop
jno
inc
inc
shl
push
frstor
xchg
mov
imul
mov
lods
pop
xor
in
cmp
cmpsb
cmp
jnp
cwtl
mov
aad
imul
fidivl
out
in
dec
mov
sbb
or
scas
add
or
sbb
scas
jge
push
pop
xchg
enter
pusha
imul
addb
out
jbe
repz
mov
xor
das
iret
lret
lcall
ljmp
xor
or
pusha
mov
push
cmc
xor
mov
enter
pop
xchg
test
sbbl
cmp
loop
jns
jne
rcrb
mov
or
scas
pushf
jb
push
mov
dec
call
pop
jae
dec
add
lahf
ljmp
js
mov
sub
sbb
addl
cmpsl
pusha
jns
mov
sahf
adc
mov
mov
das
stc
xor
inc
lods
mov
or
xchg
pop
inc
fnstsw
in
sbb
rcrb
sti
sub
jns
shr
mov
pop
xchg
test
pop
mov
mov
test
lcall
jge
xor
sub
icebp
push
loope
add
lahf
pop
push
push
mov
or
xchg
inc
pop
push
inc
sbb
mov
inc
add
or
jg
fs
mov
jl
xchg
xor
jae
mov
and
sub
mov
sub
fwait
jo
mov
movsb
test
xchg
and
inc
pop
or
mov
mov
cmpsl
pop
add
sbb
pop
cmc
cltd
adc
mov
rorb
dec
imul
cmp
and
mov
aam
in
push
sub
ja
es
and
and
mov
test
sub
fnstsw
lea
mov
and
add
sub
mov
cld
xchg
jg
insl
and
jp
mov
out
icebp
add
scas
out
ds
inc
jnp
or
cs
push
sub
clc
xchg
inc
jmp
pushf
in
movsb
inc
outsb
lcall
pop
sub
loopne
repz
mov
ror
inc
cs
jl
add
mov
stc
pushf
lods
sahf
pop
adc
mov
mov
mov
addr16
xchg
shlb
xor
in
leave
out
mov
mov
adc
cmp
subb
divb
popf
out
ficoms
mov
mov
xchg
jo
fcomp
sub
sbb
mov
ret
push
in
lds
jle
loopne
pushf
pop
sbb
rcrl
pop
pop
pop
cmp
xor
sbb
cltd
imul
incb
aaa
jl
je
pop
in
or
dec
jb
aad
in
clc
das
mov
shlb
in
lea
xlat
out
out
scas
addb
xchg
fsubr
das
leave
xchg
mov
fwait
cmp
je
xchg
cmp
push
insb
push
push
dec
add
repnz
rcrl
xor
pop
xrstors
sarl
sbb
adc
sub
xor
dec
inc
nop
push
or
mov
in
mov
jnp
jle
and
ret
xchg
mov
fsubrl
and
notb
push
icebp
xchg
pushf
out
ljmp
sbb
ljmp
dec
int
push
repz
mov
sbb
sahf
gs
es
outsb
sbb
lret
out
sub
pop
addr16
arpl
mov
pop
or
loope
xor
jns
stos
enter
lcall
aaa
in
dec
cli
std
stc
or
lret
sub
hlt
jge
adc
enter
adcb
mov
in
cltd
cmp
lock
loope
rorl
mov
das
or
inc
push
movsb
insb
outsb
inc
cli
push
aas
jmp
push
push
mov
cmp
mov
push
xchg
pop
repz
add
push
popa
pop
hlt
inc
in
fcompl
insb
movsb
adc
mov
cmp
sub
arpl
adc
and
popf
xchg
std
jecxz
hlt
mov
and
sbb
fisttpl
or
push
sbb
mov
mov
cmp
push
mov
push
or
jmp
into
add
mov
cmc
and
nop
mov
or
fsubr
scas
xchg
xchg
pop
shrb
out
stos
int3
xchg
mov
mov
inc
cmp
clc
dec
sub
icebp
mov
test
and
xchg
jae
icebp
test
pusha
push
fimuls
xor
cmp
or
push
scas
cli
push
repz
xchg
in
cmpsl
pusha
ret
repnz
jmp
sahf
push
icebp
push
jno
je
or
xchg
mov
sti
test
or
fsubrp
cmpsb
ljmp
nop
xor
pusha
rorl
lock
scas
sub
neg
int3
shrl
in
push
out
jle
fidivl
adc
das
mov
fwait
xor
decl
push
adc
jb
push
adc
cmpsb
mov
or
push
sbb
sub
fdivrl
xchg
jmp
jae
xchg
xor
add
lcall
mov
cmp
shlb
push
mov
dec
daa
int
ret
cli
sub
push
aaa
out
pop
test
ljmp
add
out
mov
jecxz
int3
adc
mov
jnp
jne
sbb
push
push
cli
adc
push
push
into
push
mov
add
std
test
mov
sub
jae
fidivrl
sub
lock
mov
imul
mov
add
fsubrp
jle
insl
mov
and
push
push
pop
repnz
push
out
bound
repz
cltd
sub
xchg
insl
push
stos
into
jb
sub
jne
xor
popf
stos
adc
pop
les
mov
jmp
ja
jmp
dec
std
add
int
xchg
js
push
jb
stos
in
jmp
inc
rcrb
ss
enter
ljmp
xchg
lods
jb
inc
xchg
and
xchg
test
xchg
lahf
push
test
sbb
jg
jae
dec
sbb
jg
jne
in
pop
inc
sub
sti
les
das
sbb
mov
rcl
and
lea
add
aas
je
jmp
mull
test
lcall
daa
ja
dec
cltd
fisttpll
test
xchg
mov
pop
cltd
inc
or
nop
fs
mov
stc
bsr
push
imul
lea
cmc
or
imul
icebp
push
lcall
andl
hlt
mov
test
js
cltd
dec
fisttpl
jmp
mov
adc
pop
xor
jge
mov
dec
aad
movsb
jmp
icebp
int3
js
mov
in
add
add
bound
pop
outsl
ljmp
lret
cmp
mov
cli
mov
fwait
sarl
sbb
mov
je
ljmp
push
push
add
data16
xor
xor
jecxz
mov
xlat
push
fwait
subl
je
dec
lock
lods
xor
mov
ret
clc
cmp
fcoms
stc
lcall
add
faddl
dec
mov
or
mov
fs
jae
mull
jo
test
pop
stos
dec
push
mov
mov
mov
or
shll
sub
fs
and
inc
arpl
out
push
cld
push
js
iret
loopne
cwtl
sbb
and
jecxz
or
stos
sti
cmp
or
aaa
adc
pop
push
std
nop
fdiv
mov
mov
jno
lret
lods
iret
out
inc
daa
test
je
sarl
or
fwait
pop
add
lea
xor
leave
mov
pop
and
popf
xchg
mov
pop
out
mov
stos
in
inc
fs
cld
movsb
imul
inc
xor
or
push
imul
xchg
neg
inc
mov
push
aad
pusha
addr16
sbb
jle
test
jo
sbb
fidivl
repnz
push
dec
fistps
push
lahf
cmpsb
std
jmp
jmp
rorb
add
pushf
xor
divb
ret
sti
add
add
pop
jp
scas
insb
cs
jg
push
pop
pop
or
dec
jne
icebp
sub
vcvtsd2usi
rcl
jns
ds
mov
xchg
into
pop
cltd
inc
xchg
and
fistps
jno
cltd
add
inc
or
push
lods
scas
out
shll
mov
lods
faddl
jns
push
ljmp
enter
fsub
pop
imul
bound
mov
xchg
das
dec
push
std
mov
lcall
and
lods
jns
fcmovbe
inc
and
inc
lods
mov
lcall
call
mov
cltd
outsb
sarb
push
jns
mov
mov
imul
pop
loope
or
repnz
add
outsl
testb
sbb
and
jbe
add
mov
pop
lcall
jecxz
cmp
push
lods
test
fs
adc
std
hlt
mov
pop
lret
aaa
push
repz
push
pop
popf
mov
fiaddl
mov
pop
lods
fiadds
out
pop
cwtl
xor
stos
xchg
mov
or
popf
mov
movsl
test
js
or
adc
jp
mov
lods
movsl
dec
mov
or
dec
arpl
lret
bt
test
push
and
ret
inc
push
fs
jne
sti
pop
lds
enter
jo
sub
lcall
in
mov
sub
scas
cmpsb
sarl
push
mov
inc
ss
sub
test
and
ljmp
sbb
jno
js
cmp
iret
out
into
inc
hlt
mov
push
push
jne
mov
jp
aam
test
nop
mov
mov
or
mov
fistpl
movsl
call
mov
cmp
and
mov
push
mov
repz
mov
int
xor
pusha
rol
dec
movsl
xchg
subl
icebp
cmp
pushf
pop
inc
add
xchg
cmpsl
mov
scas
xor
inc
movsl
fstpt
rcrl
idivl
test
nop
push
inc
mov
fwait
mov
add
adc
adc
or
xor
loope
outsl
lcall
mov
lahf
fcomp
add
dec
push
sub
pop
xorl
jl
sub
cmc
pop
stc
les
cli
dec
subb
popf
lret
jae
jb
dec
mov
shll
pusha
push
cltd
jg
cmp
lcall
shlb
jns
lds
mov
cli
mov
xchg
dec
aas
xor
enter
jmp
or
sbb
push
add
push
mov
rorl
jno
add
dec
inc
mov
sbb
cli
js
or
cli
repz
divb
movsl
popf
jae
push
mov
sub
push
outsb
aad
mov
push
jg
inc
xor
add
push
in
adc
inc
outsl
sbb
jns
mov
cmp
push
push
dec
pop
aad
stos
pushl
je
fistl
jnp
inc
movsl
jae
das
xlat
or
add
mov
pop
repnz
stc
pop
outsl
lret
clc
xchg
and
add
jnp
mov
cmp
xchg
jle
jne
in
or
enter
test
cmpsl
jge
cmp
pop
pop
repnz
loopne
test
inc
sbb
dec
jns
or
outsl
push
es
sub
cmpsb
mov
rorb
dec
xchg
fdivrs
movsl
jl
dec
cmp
xchg
jnp
stos
dec
fldt
into
int3
add
pop
cmp
and
hlt
je
sbb
ret
fisttps
cmpsl
and
ss
test
fnclex
lcall
loope
pop
arpl
dec
clts
jmp
sarb
out
mov
mov
sbb
mov
addb
cs
sub
mov
bound
mov
outsb
ret
ret
cwtl
sub
mov
popf
dec
sahf
push
scas
xchg
in
cmpsb
cwtl
sbb
popa
aas
push
lods
sub
adc
icebp
inc
jg
popa
aad
das
push
movsl
xor
jae
rorl
ret
outsb
shrl
icebp
jg
xchg
lds
lea
test
and
iret
mov
mov
pop
xchg
fsubl
sub
flds
pusha
les
jnp
add
pop
sub
mov
xor
mov
into
pop
add
rcl
repz
adc
rcll
mov
or
push
push
pop
push
popa
mov
icebp
sbb
dec
dec
lahf
lret
aad
push
das
mov
sahf
xlat
outsb
sub
adc
ja
test
lcall
scas
insl
sub
dec
xor
dec
adc
insb
mov
les
adc
dec
cmp
fs
cltd
cmp
xor
enter
pop
aam
sbb
sbb
adc
ficomps
ret
sti
jg
orb
fadd
or
mov
imul
cmp
jne
push
mov
mov
fdivrp
mov
jno
jno
mov
pop
and
sub
cmp
pop
sub
imul
ljmp
shlb
lahf
jecxz
mov
aas
xchg
mov
sub
sbbl
adc
pop
fistps
clc
mov
sub
lock
mov
add
push
jb
push
enter
mov
outsb
adc
notb
cmp
mov
cmp
lock
rorl
mov
mov
jl
dec
dec
sbb
loop
mov
cwtl
lods
pop
pop
aad
mov
nop
fdivrs
push
jle
das
testb
lcall
mov
dec
xchg
fcoms
cmp
inc
out
adcb
ljmp
popa
repz
cs
cmpsb
test
jo
out
jg
add
pop
aam
scas
mov
les
movsl
lods
inc
lea
mov
in
pop
or
cmpl
xorl
and
jg
xor
out
lea
pop
push
in
adc
nop
das
or
sub
push
jns
and
out
and
push
mov
test
or
jp
sahf
push
fistl
mov
cmp
pop
mov
xchg
mov
adc
movsb
or
and
xlat
pop
xorb
insl
jb
mov
fcompl
scas
pop
cld
loopne
adc
sub
mov
stos
popa
lods
cmp
pushf
mov
pop
cwtl
movsb
pop
bound
and
lret
dec
imul
fnsetpm(287
nop
pop
cmp
lea
in
mov
in
and
inc
push
push
jo
gs
sub
and
xchg
lret
ret
push
ja
out
lahf
jmp
test
lock
into
es
ja
xor
daa
sbb
adc
sub
cmp
jg
jbe,pt
xor
xchg
fcmovnbe
jg
shrb
xor
fidivl
gs
outsl
pop
loop
xchg
mov
xchg
stc
je
xchg
insb
pop
mov
shlb
imul
enter
push
adc
sub
shll
das
sub
in
or
mov
xchg
mov
lea
pop
ret
pop
aaa
test
ret
fimull
or
fistps
addr16
inc
pop
ffreep
arpl
sub
ret
rcr
lret
pop
and
dec
and
data16
in
daa
js
dec
roll
and
ret
inc
mov
or
cld
pop
pushl
or
sub
mov
xchg
add
in
lods
loop
mov
adc
arpl
jmp
pop
dec
inc
cmp
push
push
aam
adc
xor
push
lcall
mov
xor
mov
in
inc
xchg
fwait
jge
add
lcall
xchg
mov
cmp
add
daa
fdivs
rcrb
jbe
push
xchg
adc
out
mov
xchg
cmp
ja
pop
cmp
adc
push
mov
mov
fsubl
and
lods
ret
sbb
inc
aaa
and
cmpsb
sbb
cmc
mov
mov
sbb
xchg
sub
lds
sub
fnstenv
inc
mov
pop
add
add
xchg
or
mov
xchg
jns
xchg
popf
popa
icebp
imul
int
mov
mov
mov
daa
rcl
fistpl
and
mov
sbb
xor
stc
xchg
cmp
adc
mov
movswl
out
ret
xchg
sbb
mov
xor
loope
jno
loope
cmp
fmull
add
dec
xchg
cmpsl
lret
cmc
lock
xchg
mov
mov
mov
jge
xlat
dec
adc
out
mov
pop
imul
out
mov
cmp
jle
scas
fwait
hlt
iret
push
stc
iret
rol
adc
ds
in
stos
cmpsl
mov
ret
in
push
and
in
inc
xorb
mov
push
fstpl
or
das
mov
sbb
mov
push
sub
adc
dec
pusha
mov
pop
test
roll
adc
dec
push
mov
mov
loopne
and
or
xchg
cmp
mov
cltd
lret
js
fisttpl
les
push
or
sub
les
sbb
pop
xchg
mov
rclb
repnz
inc
push
loope
shlb
cmpsb
add
frstor
cmpsb
outsl
lods
push
mov
adc
or
in
sbb
push
lock
lds
ljmp
push
cmp
push
sbb
xor
rcl
pusha
andl
dec
test
shl
and
mov
mov
ljmp
push
push
and
cmp
adcb
pusha
gs
mov
adc
fs
dec
mov
cltd
in
mov
rol
jecxz
or
inc
stos
inc
mov
push
sub
dec
push
cmc
out
insb
sbb
mov
arpl
pusha
cli
adc
shll
scas
push
test
dec
pop
in
mov
mov
rcll
inc
outsl
add
pop
jb
lea
mov
dec
pop
into
data16
addb
add
and
and
sarb
mov
push
fnsave
jmp
das
into
test
ficomps
mov
scas
jne
je
aas
bound
xchg
lds
out
inc
out
cmpsb
das
outsl
mov
sarl
or
mov
pop
xchg
outsb
ljmp
fidivrs
aas
aaa
pop
sahf
sub
daa
into
xor
mov
and
mov
push
lret
mov
fcomps
adc
mov
jne
push
pushf
imul
fdivl
fcomps
stc
pop
pop
mov
out
cmp
ljmp
xor
mov
dec
aaa
mov
add
mov
out
clc
fsub
xchg
pop
outsb
pop
es
ja
repnz
leave
aas
inc
lret
pusha
in
push
rorl
lock
int3
mov
sub
mov
mov
gs
sbb
dec
xchg
and
push
or
mov
adc
in
outsb
lds
out
pop
push
out
dec
pop
insb
pop
dec
mov
pop
leave
cltd
ljmp
scas
inc
cmp
mov
ret
mov
and
mov
insb
daa
mov
les
lcall
mov
cmp
adc
insb
xchg
jo
js
rclb
push
mov
jmp
ds
cs
fiaddl
daa
test
add
jmp
jne
xchg
mov
sub
ss
jecxz
pop
pop
insb
add
adc
mov
lock
mov
imul
inc
sub
popf
add
cmp
stos
xchg
cmc
add
sarb
push
lcall
xchg
push
insl
xor
pop
xor
cmp
scas
out
add
and
lds
cmp
sbb
in
addr16
cli
dec
imul
mov
xorl
mov
jnp
ds
int
fsubr
sbb
loopne
mov
push
lea
insl
pop
xor
cld
scas
call
inc
xchg
aam
lcall
bound
mov
mov
and
subb
jmp
jbe
sub
sbb
mov
dec
jo
inc
inc
mov
shl
sub
xchg
std
in
xchg
jne
shlb
jp,pn
cwtl
jne
jp
xor
es
out
dec
inc
adc
jb
pop
imul
mov
cmp
mov
stos
inc
ja
lret
movnti
adc
insl
jle
ret
cmp
mov
addr16
sub
jmp
inc
mov
jno
sahf
mov
mov
mov
jo
inc
ljmp
gs
mov
fs
push
push
data16
outsb
mov
test
movsb
xor
mov
add
fldcw
hlt
jecxz
mov
sbb
jo
out
popf
push
adc
fbld
pop
inc
scas
adc
ror
and
dec
or
or
pop
push
add
andb
lds
js
int3
fwait
push
mov
push
inc
xlat
outsb
cmp
mov
fldt
dec
std
or
lods
mov
movsb
xchg
imul
xor
enter
xchg
testl
mov
data16
loop
mov
stos
sbb
or
aam
cltd
pop
jne
sub
fistpl
adc
shlb
sub
jl
pop
filds
cmp
sahf
out
jne
fwait
pop
or
inc
leave
movsb
cmp
or
mov
loopne
push
and
add
into
sub
push
push
cmp
or
jle
mov
fwait
cmp
sub
mov
lds
sbb
or
jmp
ficoml
mov
pop
sub
pop
ja
pop
dec
dec
and
push
icebp
stc
dec
pop
int
psllq
fildl
ljmp
pop
mov
out
lods
rolb
jo
mov
push
popa
shrl
mov
mov
imul
inc
fildll
into
aaa
adc
xor
sahf
jp
sub
or
or
dec
xor
dec
mov
inc
fdivl
clc
shll
xor
sti
cmp
mov
push
in
mov
imul
jle
dec
sbb
into
push
pop
stc
mov
pop
nop
inc
scas
sub
fadds
pop
mov
jle
pop
lods
add
jne
and
adc
mov
push
aad
mov
sub
pop
sbb
out
and
cld
into
hlt
addr16
scas
mov
pop
stos
sbb
jb
cmp
xor
sbb
add
cltd
iret
sbb
push
loop
xor
add
mov
sbb
mov
lcall
inc
push
mov
sub
call
jecxz
ror
jp
sub
or
aam
pop
mov
push
pop
jge
pusha
cli
repz
arpl
shrl
jno
push
dec
mov
and
and
adc
pusha
je
and
movsb
or
jne
sbb
hlt
shrl
pushf
mov
jno
icebp
outsl
loope
push
adc
inc
and
pusha
addr16
xor
in
xchg
dec
pop
inc
mov
xchg
mov
xchg
mov
mov
and
lret
inc
push
mov
test
push
inc
loopne
mov
jb
out
aaa
sbb
push
imul
popa
pusha
mov
icebp
cld
loop
pop
dec
mov
leave
in
sar
cld
add
adc
add
stos
ret
mov
push
into
cmp
inc
sub
xchg
pushf
push
push
movsl
mov
mov
out
lret
shrl
sub
mov
jmp
in
nop
insb
js
into
and
mov
rolb
ss
jbe
jno
and
adc
loope
pop
clc
in
xchg
push
gs
mov
mov
sbb
xor
pop
les
mov
xchg
cli
pop
std
jecxz
inc
shll
jl
fists
sarb
inc
jns
fildl
dec
loopne
pop
mov
adc
sahf
jb
nop
mulb
mov
cmp
sbb
adc
pop
pop
arpl
jp
jecxz
daa
stos
scas
add
xchg
les
inc
nop
pop
cmc
std
xchg
sbb
lahf
les
iret
dec
mov
scas
js
fisubs
and
in
fstps
fwait
repz
in
clc
dec
inc
popa
fldt
pop
rolb
mov
fcmovnb
fistps
orb
mov
ljmp
stos
xchg
cwtl
pop
stos
movsb
shlb
push
or
push
jnp
js
pop
inc
adc
popf
xor
mov
jl
push
das
fs
fs
push
test
pushf
adc
jge
iret
xchg
imul
xchg
add
js
cmpps
xor
jg
push
les
popf
mov
or
xor
and
inc
fdivrs
push
jge
lret
inc
lret
data16
jge
inc
out
push
or
push
pop
sub
out
xchg
adc
aam
inc
les
leave
sbb
push
inc
lods
jns
cmp
jp
push
and
xchg
lods
mull
fldl
icebp
je
xchg
mov
and
stos
push
loop
xchg
test
icebp
cli
add
cmp
lods
sahf
xlat
xchg
in
lock
out
xor
popa
cltd
cmpsb
mov
dec
sbb
int3
sbb
mov
iret
mov
cmp
cli
push
mov
stos
pop
sbb
xor
fcmove
mov
stos
cmc
aaa
addr16
jo
or
leave
xor
push
jmp
push
aaa
sbb
mov
incb
sti
enter
scas
mov
xchg
loopnew
in
or
fucomi
xchg
pushf
scas
ljmp
fwait
lds
lret
jno
int
sub
cmp
jle
jge
mov
add
mov
clc
mov
popa
or
es
xchg
inc
leave
mov
cmpsb
addr16
loop
les
dec
cltd
sbb
pop
pop
push
jmp
mov
out
jg
mov
adc
mov
shrb
mov
or
or
filds
cwtl
ja
rclb
push
icebp
test
jnp
mov
push
hlt
sub
clc
fnstsw
loope
imul
outsb
inc
xchg
sub
pop
and
faddl
outsl
sbbb
push
pop
test
test
pop
sahf
cmp
ret
shlb
jns
mov
fbld
adc
outsb
dec
xchg
xchg
and
movsl
stc
mov
xchg
inc
mov
pushl
out
ret
pop
lods
mov
fdivrs
cmp
mov
xor
cwtl
dec
frstor
test
data16
lret
inc
stos
test
add
mov
shrb
dec
popf
aaa
dec
notl
mov
jo
pop
and
mov
arpl
sub
xchg
jl
sbb
aam
jae
popa
test
lret
out
mov
jo
mov
aaa
mov
out
scas
mov
out
mov
ficomps
dec
cmp
ret
and
test
sti
sbb
bound
cli
adc
inc
icebp
loop
cmp
data16
stos
push
pop
sti
push
mov
sbb
adc
push
popf
pop
sbb
sbb
jo
push
mov
cmp
insb
iret
lahf
cmp
ljmp
and
and
and
add
jg
mov
repnz
test
lods
pop
lret
mov
cmpsb
je
cmp
in
sbb
es
cmp
clc
popaw
aaa
loop
dec
dec
mov
add
gs
jbe
mov
mov
into
jmp
adc
xchg
divb
xor
sub
aaa
and
data16
int
lcall
addr16
mov
mov
push
sbb
in
mov
je
fwait
dec
pop
and
ret
inc
pop
outsl
add
pop
insb
mov
cmp
pop
negb
movsl
andb
dec
lods
and
mov
pop
aad
incb
stos
push
inc
xor
gs
mov
add
lret
and
stos
jb
mov
orb
dec
xor
xorb
roll
and
notl
xchg
push
movsb
popa
mov
iret
push
ljmp
std
decl
push
cmpsl
lea
pop
aaa
mov
cmpsl
jl
test
stos
mov
adc
pop
ret
movsl
mov
dec
sbb
insl
jmp
dec
stc
mov
loop
daa
mov
xor
cmp
pop
mov
jp
je
in
or
and
and
pop
xchg
xor
mov
cmc
mov
inc
jae
mov
mov
mov
pop
jbe
shrd
cwtl
cmpsl
repnz
inc
jno
mov
out
adcb
je
pop
adc
in
jns
divl
sub
shrb
mov
lock
fnstsw
mov
add
sahf
sub
subl
lcall
add
mov
pop
sbb
lock
cmp
and
cmpl
lret
enter
cld
andl
mov
lcall
out
mov
xor
cltd
adc
dec
cmp
rcl
call
stc
imul
jb
fsubrl
test
aas
push
movsb
fldcw
out
cmp
ret
sbb
xchg
xor
lret
pop
or
cli
jecxz,pn
ljmp
mov
out
sub
xor
das
mov
add
or
fwait
enter
adc
inc
xchg
xor
insl
mov
ror
test
daa
and
jl
hlt
scas
mov
idivl
insb
into
push
bound
arpl
push
aaa
sbb
je
fucomip
cwtl
xchg
mov
mov
push
mov
ret
fcmovnbe
push
push
ljmp
std
fisttpl
push
add
jl
repz
scas
in
ds
imul
jmp
push
sub
testl
lds
sbb
xchg
sbb
jo
ret
or
call
or
add
shlb
jg
mov
in
add
cmp
insl
leave
popa
loope
aaa
lds
int
pop
jne
int
addr16
mov
cmpsl
mov
enter
adc
stos
icebp
pop
inc
inc
pop
cmpsl
adc
xchg
jae
jecxz
mov
pop
cwtl
inc
ret
movsl
jae
or
mov
mov
dec
mul
sarl
jp
scas
loope
push
adc
dec
ja
cmp
outsl
sbb
and
ror
pop
pop
inc
leave
imul
repz
jg
mov
insb
inc
xchg
and
inc
fcompl
sub
int3
outsb
jae
stos
or
add
xchg
les
pop
sbb
mov
adc
add
and
jnp
loop
cmpsl
fbstp
xlat
cmp
mov
or
sub
fnstcw
or
sbb
and
icebp
mov
icebp
jmp
roll
clc
add
and
add
cvtdq2ps
stc
sub
cmp
loope
jo
icebp
scas
sbb
sahf
push
xor
cmp
cmc
push
jb
scas
sub
out
stos
push
inc
pop
in
enter
adc
cmp
movsb
sub
jne
jb
pushl
mov
cmc
sub
fnstcw
dec
das
push
aas
mov
into
jl
mov
repnz
aas
aad
lret
lds
mov
xchg
jbe
pushf
cmpsb
scas
in
pop
adc
or
cmp
fwait
sub
addr16
cmp
push
push
sub
popf
cmp
push
cmp
dec
cmc
push
sbb
hlt
dec
mov
cltd
mov
xchg
loope
imul
call
loop
mov
inc
mov
inc
sub
ret
lret
mov
sarl
push
sbb
xlat
mov
mov
mov
jecxz
out
add
bound
pop
add
dec
jp
push
pop
es
into
mov
nop
push
jns
in
insb
xlat
push
xchg
cli
xor
sbb
cmp
fcoms
mov
pop
jbe
fnstsw
scas
xchg
mov
jo
add
fadds
test
xchg
jns
jbe
ljmp
nop
aaa
xchg
xchg
or
xchg
shr
rcr
adc
hlt
lea
int3
pop
and
jmp
mov
jnp
lods
pop
iret
jns
sarb
jbe
ljmp
inc
and
bound
cmp
ljmp
jbe
repnz
or
outsl
cmc
jne
into
in
imul
fnsave
cltd
mov
sbbb
mov
inc
lods
inc
pop
inc
add
scas
shll
addr16
cmp
inc
mov
push
pushl
or
inc
pop
inc
sbb
sbb
loope
push
push
stos
cltd
dec
add
in
cmpsl
lret
rcll
aad
jge
jge
imul
cmpsb
mov
repnz
stos
push
popf
mov
imul
jns
movsl
pop
cmp
xorl
add
jnp
push
aaa
pop
and
push
push
lods
outsl
and
mov
jecxz
push
sbb
push
cmc
rorl
insb
jno
out
jb
mov
sbbl
test
mov
lahf
jno
inc
out
hlt
cli
stos
and
and
lret
sbb
lret
push
imul
in
xor
xchg
and
or
enter
iret
mov
mov
mov
movsl
cwtl
paddw
loope
aaa
lea
out
adc
ficoms
test
sti
std
and
hlt
cmc
sbb
and
lret
sbb
shlb
aam
sub
push
loope
push
dec
xor
loopne
push
repnz
test
data16
cld
pop
jne
jae
or
pop
pop
lods
xchg
add
dec
fidivl
mov
test
nop
cmpsl
jno
mov
push
mov
inc
js
sub
jnp
mov
pop
lods
dec
xor
pop
add
in
or
mov
inc
cmp
out
sub
mov
pusha
inc
sahf
roll
fsubs
lea
in
pushf
sub
repz
xor
jo
adc
das
test
aam
sbb
sti
mov
sub
leave
lret
in
dec
or
lea
xchg
or
and
outsb
int3
movsb
rorl
push
or
jecxz
xlat
mov
out
stc
arpl
sub
icebp
adc
cmp
insb
ret
pop
pop
sbb
rcrb
push
je
mov
loopne
cmpsl
sti
or
loopne
and
pushf
jmp
repnz
xor
xchg
inc
scas
sahf
cmp
jns
icebp
lods
pop
inc
rclb
dec
cld
sti
inc
loopne
inc
inc
bound
in
adc
pop
std
xor
inc
pop
inc
cmp
and
aad
lcall
jnp
aas
stc
or
cmp
or
push
jbe
insb
sti
adc
mov
int3
stos
les
in
and
inc
jmp
lods
std
jae
jns
adc
lds
sbb
jp
push
push
ret
in
lret
inc
call
lea
stc
test
xor
inc
stos
sub
mov
shr
adc
pop
sbb
flds
cld
lret
movsl
mov
dec
xor
xrelease
stc
mov
data16
xlat
and
cs
popa
jl
xchg
repz
sahf
cltd
xor
pop
adc
xchg
sub
mov
enter
jl
inc
push
fcomps
jp
xchg
popf
mov
iret
add
sti
push
push
fwait
cmp
xlat
pop
pop
or
das
push
mov
sub
mov
enter
popa
or
sbb
jl
sarl
bound
inc
sbb
and
jge
xchg
hlt
test
fsts
ljmp
lds
jb
and
fists
mov
xchg
imull
and
pop
insb
call
inc
pop
sbb
and
pop
scas
jp
adc
cmp
mov
or
iret
aad
es
pop
fcom
pop
xor
mov
test
mov
pop
rclb
mov
fwait
or
popf
jbe
sahf
pop
lahf
add
das
js
sbb
xchg
pop
and
lcall
insl
pusha
jns
mov
inc
dec
inc
popf
cmpsb
enter
ret
xchg
jns
mov
cmpsl
jo
add
test
scas
stc
loopne
mov
cmp
mov
jmp
divb
sbb
cltd
mov
pop
rcrl
jecxz
dec
les
push
jne
cmpsb
xlat
xor
lds
cmpsl
popa
loope
dec
je
out
push
imul
pop
ret
jno
lret
out
sbb
rorb
push
pop
xor
mov
pop
ret
cltd
inc
clc
int3
jae
popa
aad
ret
mov
sbb
mov
dec
ljmp
or
cs
push
lods
sbb
icebp
lods
ja
outsb
lcall
add
daa
sarb
rcll
mov
lock
cli
pop
mov
adcl
push
lods
mov
jp
divl
pop
in
and
sbbl
add
inc
mov
js
and
pop
jl
rclb
subl
xchg
cmp
fs
mov
dec
adc
pop
inc
mov
sbb
add
js
jmp
xorb
je
fwait
mov
pop
sbb
test
mov
xor
xchg
clc
sbb
sti
out
push
inc
ss
add
or
cmp
adc
dec
js
sbb
xchg
into
xchg
mov
or
imul
cmpsl
ljmp
dec
loopne
cmpsb
push
loope
das
sbb
push
add
je
mov
jb
pop
in
bound
repz
cltd
lahf
xor
fisttpl
add
cmp
and
hlt
imul
push
movsb
nop
inc
loop
sub
ret
out
inc
jno
stos
jno
jp
test
shll
inc
push
inc
fidivrs
xor
push
sub
push
push
cwtl
push
stos
pop
push
popf
add
adc
inc
mov
lret
xchg
repz
xchg
mov
data16
push
ljmp
pop
hlt
dec
mov
lods
mov
mov
fiadds
lret
mov
lods
out
outsl
pop
pop
aaa
pop
cwtl
mov
pop
lock
pusha
mov
fs
jns
xor
inc
mov
sarl
and
repz
add
aaa
xor
scas
sbb
inc
adc
push
addb
out
cmpb
daa
dec
and
ret
inc
pop
sub
xchg
lea
lea
popf
in
push
stc
ret
fiaddl
cltd
cmpsl
dec
pop
enter
inc
push
cmpsb
push
sbb
jo
push
or
stc
push
das
insl
push
and
call
mov
loope
stc
sub
lret
das
push
out
adc
and
jp
xchg
sub
out
and
lcall
xor
mov
cmp
out
or
stc
mov
inc
mov
das
cmc
sub
jns
add
jl
pusha
push
push
loope
pop
imull
or
push
jb
jbe
cmpsb
lret
sti
mov
mov
cld
mov
mov
xor
das
dec
jno
add
fildl
fucomi
mov
mov
out
pop
sub
mov
inc
xor
int
inc
mov
sahf
mov
lret
sbb
add
push
push
sbb
fwait
popf
lea
cmpsl
add
aas
cmp
push
jge
out
mov
test
mov
push
in
jae
sub
iret
add
xchg
push
outsb
pop
cmp
imul
mov
jns,pn
pop
aas
mov
cltd
mov
mov
add
out
dec
jl
cwtl
push
inc
xchg
xchg
adc
fwait
stos
ljmp
fs
push
ret
sub
cwtl
jmp
jno
idivl
push
lcall
or
lret
jnp
or
repnz
dec
pop
pop
test
push
inc
push
lods
mov
cmc
dec
dec
mov
pop
jo
negb
cwtl
sar
in
jnp
icebp
inc
clc
push
das
out
pop
cmpsl
int3
or
lods
cmp
mov
lods
and
mov
ds
aaa
and
and
ljmp
mov
lods
or
mov
jae
xchg
dec
divl
push
pusha
jb
adc
dec
or
cltd
jg
mov
inc
xchg
mov
sbb
mov
ja
add
stos
pop
mov
lods
lods
push
shrb
js
sti
int3
xor
fcmovnbe
imul
xlat
test
ficomps
lcall
insl
add
ds
fwait
mov
jns
aaa
mov
js
cmpsl
scas
add
sub
lret
dec
enter
jae
or
loop
mov
push
jg
je
das
add
aad
sbb
adc
hlt
cmp
imul
sti
and
rcrb
cmp
mov
pop
pop
push
out
decb
adcb
sti
mov
jae
adc
shrb
fildll
aaa
push
mov
es
cmp
sti
fisubrs
mov
add
dec
jp
xchg
adc
insl
pop
cmp
push
popf
std
call
es
stos
add
jecxz
xor
add
bound
sbb
push
mov
cli
push
out
dec
dec
out
or
dec
ljmp
add
out
sub
and
mov
loopne
dec
dec
sbb
popf
sbb
addr16
inc
mov
in
pushf
sbb
push
jno
xchg
ret
sbb
lret
inc
dec
outsl
addl
dec
divl
nop
fbstp
or
lods
xchg
lods
insl
mov
popf
xchg
testl
dec
je
ret
and
je
addr16
xor
cmpsb
test
ljmp
jno
outsb
aad
fisubl
nop
lret
inc
dec
mov
cmpsb
popa
sbb
cmc
inc
jnp,pn
daa
fdivp
adcb
mov
pushf
push
lcall
and
rolb
mov
mov
push
lahf
jp
or
sbbl
jecxz
or
mov
mov
pop
shlb
xchg
xor
imul
mov
pop
cltd
dec
push
int
and
loope
lock
int
xchg
fmuls
ds
outsl
out
sub
jbe
aaa
inc
xor
pop
ss
mov
fdivp
lea
pop
iret
sbb
es
cmp
idiv
rolb
arpl
pop
mov
xchg
stos
xchg
push
mov
jmp
lds
and
in
ss
int
rep
adc
ds
mov
push
lahf
or
cli
in
loopne
xchg
jmp
fwait
pop
arpl
cmpsl
mov
sbb
fdivrl
add
ljmp
add
daa
test
psubb
dec
call
test
pop
push
fsubs
xor
mov
cmpsl
mov
jne
insl
push
or
jg
push
push
addr16
insb
mov
mov
jecxz
mov
dec
fsubrp
jne
out
or
incl
jl
outsb
or
out
push
or
add
dec
out
enter
sub
pop
xchg
or
xor
pop
mov
mov
pop
pop
xchg
clc
call
adc
dec
daa
sub
xor
mov
loop
fwait
adc
push
in
outsl
xchg
mov
xchg
imul
xlat
ficoms
les
sub
out
enter
mov
rorl
loop
jecxz
movsl
add
out
mov
lods
sahf
mov
jo
scas
jnp
imul
mov
mov
imul
call
jae
dec
xchg
outsb
jg
add
or
sbb
outsb
in
sbb
fdivr
pop
fsubrp
cwtl
cmp
notb
daa
loopne
push
or
mov
pop
cltd
sbb
jl
cmp
mov
inc
movsb
dec
test
adc
add
fwait
imulb
pop
jl
or
aas
dec
fwait
and
xchg
sub
jle
pop
mov
push
xor
lods
push
movsb
in
fsubs
fdivl
loop
pop
jl
lods
push
and
sub
add
adc
ja
scas
xchg
xchg
cmp
bound
lds
cs
xchg
test
inc
cltd
jmp
dec
iret
xchg
dec
clc
add
jne
ret
das
jle
popa
mov
enter
and
scas
outsb
rep
mov
mov
movsl
mov
inc
ss
jmp
jmp
or
cmp
fdiv
jae
cmp
mov
out
add
out
xchg
jl
lods
lret
lea
push
in
mov
mov
push
int
fiadds
adc
movsl
shlb
dec
mov
hlt
pusha
add
cmp
iret
and
sub
fimuls
dec
shlb
pop
in
push
pop
inc
lods
mov
and
out
divl
dec
and
xchg
push
or
add
es
xor
jne
aad
mov
jl
addl
test
cmp
cmpsb
xchg
xchg
incl
jmp
xor
jb
scas
jne
add
mov
xor
imul
les
inc
jb
ret
jbe
push
mov
fdivp
iret
mov
push
sub
ds
rcrb
fbld
loop
les
sbb
and
cmp
jle
xor
nop
xor
dec
aam
push
xlat
out
sbb
rcrl
add
stc
fcoms
cli
inc
mov
push
mov
jbe
stos
inc
mov
ljmp
push
shll
xchg
mov
push
je
mov
out
mov
xchg
or
int
scas
push
mov
cwtl
jo
cmpb
xor
mov
int3
jne
cld
push
das
repnz
std
dec
inc
pop
xor
push
push
out
push
adc
sti
dec
and
imul
cmc
mov
push
shll
iret
pop
ljmp
scas
scas
or
or
testb
test
mov
cmpsb
inc
mov
mov
roll
xchg
push
mov
or
outsb
repnz
in
imul
mov
incl
fnstsw
nop
lock
daa
mov
add
js
fildll
and
fs
mov
nop
repz
xchg
movsl
push
inc
hlt
dec
or
in
sbb
pop
and
nop
sub
and
mov
and
je
out
xchg
out
js
mov
in
sti
mov
xchg
xchg
jg
cmp
setle
jb
jbe
mov
and
and
stc
add
test
pop
das
fwait
sbb
add
out
popf
push
lods
xchg
aam
lods
mov
and
das
clc
sar
cmp
inc
xchg
inc
sbb
cli
sbb
xchg
sbb
aam
enter
fcomps
shll
or
push
enter
popa
mov
push
jno
int3
sbb
and
arpl
xchg
aam
mov
out
mov
and
movsl
push
inc
inc
dec
fisubrl
fcmovnb
lods
adc
fwait
xchg
mov
push
sbb
add
jbe
mov
dec
or
out
stc
fistpl
xor
jno
in
dec
mov
and
into
aaa
xor
cmpsl
inc
cld
fmull
push
ss
or
sub
in
and
mov
push
jle
cmp
ljmp
inc
add
mov
je
test
jb
push
movsb
shlb
add
push
dec
enter
aad
test
jne
and
leave
clc
rcr
mov
cld
test
fstp
test
lret
sub
cvtps2pi
mov
sbb
movsb
test
sbb
sub
int
cmp
push
xchg
adc
jnp
jo
xchg
roll
shrb
mov
outsb
and
add
mov
imul
mov
sub
dec
pop
jg
in
dec
push
fwait
push
mov
in
out
dec
jp
imul
mov
sbbb
and
mov
loope
jecxz
xorl
lahf
adc
lods
push
dec
mov
cmp
mov
das
loopne
pop
mov
test
lcall
repnz
inc
push
or
xor
inc
aad
jecxz
sbb
lea
jns
cwtl
xchg
mov
jo,pt
pop
xor
or
into
push
aaa
out
cmc
and
push
popf
pop
repz
loope
push
fs
outsl
mov
cmp
stc
xchg
shrb
scas
jmp
or
or
and
or
jmp
lods
test
pop
push
mov
xor
dec
mov
ret
push
pop
mov
inc
xor
in
sahf
pop
cli
or
sub
push
mov
push
jns
xchg
fstps
xchg
cmp
pop
fldenv
idivb
mov
nop
popf
outsl
mov
lahf
fldl
jge
out
dec
mov
jbe
xor
cmpsl
insl
and
xor
dec
popa
fs
jo
inc
nop
cmc
and
xchg
xor
stos
jge
rorb
fidivrl
mov
inc
cmp
dec
push
xchg
scas
xchg
pushf
xchg
cmp
mov
push
lock
lods
out
shlb
aam
xchg
insl
cwtl
sub
fsts
or
outsl
imul
in
hlt
cmp
dec
and
cld
jns
mov
es
fcmovnb
cmp
lods
cld
movsl
mov
mov
rcrb
lds
cwtl
sarl
jnp
xchg
fadds
push
ss
lods
push
xchg
insb
dec
sub
jne
pop
or
jmp
cmp
adc
push
imul
mov
add
std
and
dec
mov
clc
adc
out
popf
mov
jbe
subb
addr16
inc
push
loope
xchg
pop
pop
dec
subb
ss
and
scas
ljmp
popa
ljmp
jns
xchg
aam
hlt
cli
fcomps
lcall
pop
pop
or
cmp
sbb
lret
les
push
insb
sahf
dec
cmp
and
pushf
adc
ljmp
add
mov
xchg
push
andl
lret
jmp
cmp
test
mov
mov
jge
cmpsb
fimull
in
cmp
test
into
shl
loop
and
sbb
punpckldq
push
enter
jo
sarb
es
insl
jl
popf
inc
fcoms
ret
lods
jnp
inc
bound
and
xchg
or
jns
test
clc
mulb
mull
roll
push
and
and
mov
push
sti
repnz
sbb
xchg
clc
stos
inc
ss
dec
xchg
jmp
or
cmpsb
mov
push
not
cmp
adc
jecxz
dec
pop
push
xchg
hlt
mov
cmpsb
push
mov
out
mov
in
mov
sub
inc
cmp
fcoml
sbb
int
sub
pop
lcall
lret
adc
or
adcb
sbb
dec
movsl
or
stc
mov
daa
xor
loope
sub
xchg
or
ja
sbb
je
fmul
fstl
lcall
push
dec
xlat
aas
fisttpl
testl
jp
fmull
push
sub
xchg
adc
dec
es
push
popa
push
aad
and
adc
pop
jb
enter
sub
sub
rcrb
inc
xchg
jp
mov
in
jecxz
int
pop
sub
in
xor
pop
mov
cmc
xor
movsl
jbe
push
cld
lock
in
sbb
mov
jle
popf
es
divl
setbe
mov
adc
sbbl
push
or
ljmp
cmp
popf
stos
sbb
mov
jmp
fwait
roll
jae
inc
mov
cli
push
lods
mov
inc
andb
in
loopne
xor
ljmp
mov
cmp
insb
dec
add
inc
sub
dec
fcomp
lods
aam
add
xchg
into
and
les
mov
cld
loop
fs
int
imul
shlb
sbb
cmp
sub
pushf
jge
call
ret
fwait
loop
jns
imul
cmp
rcl
pop
mov
fistps
inc
movsl
mov
je
jns
pop
test
inc
push
call
adc
or
adc
jl
jnp
or
inc
les
cmp
es
rol
or
inc
cmp
add
mov
mov
and
subl
mov
sbb
fdivrs
sahf
xor
push
movsb
out
jns
add
ficompl
cmpl
push
data16
and
js
xlat
cmp
fcomps
mov
xchg
out
in
repnz
push
and
dec
dec
mov
sbb
add
insb
push
mov
inc
ret
and
adc
jecxz
xlat
shll
mov
mov
mov
es
push
push
sbb
out
pop
push
inc
insl
dec
in
pop
and
test
imull
sub
icebp
in
bound
and
sahf
jle
insl
add
sub
or
jo
adc
outsb
cmp
stc
imul
or
mov
pop
jae
or
fs
adc
ja
in
imul
jmp
xor
push
cld
sub
insb
cmpsl
sbb
shll
pop
and
in
orb
stos
adc
sub
jns
jle
mov
xchg
inc
into
add
les
add
dec
jg
xchg
in
sbb
sub
and
xor
aaa
loope
xchg
mov
pop
aas
imul
dec
insb
jp
sbb
out
pop
lds
enter
pop
mov
stc
cmpb
mov
add
lret
push
lgs
cmc
jl
mov
adc
ret
daa
in
push
pop
jne
sbb
insl
dec
out
mov
sbb
bound
push
jmp
and
jbe
lahf
sub
sub
inc
xchg
xchg
jle
push
push
mov
push
stos
mov
xchg
dec
outsl
imul
push
add
in
push
or
inc
push
test
lods
cmpsb
mov
adc
addr16
lds
test
and
pop
lret
fisttpll
rcrb
and
push
xchg
aad
push
dec
cltd
or
pop
fsubr
leave
xor
dec
loope
outsl
mov
leave
movsb
inc
or
inc
add
mov
pop
or
jge
inc
int
ds
insb
or
xchg
fmull
and
mov
or
dec
arpl
fdivr
scas
fcomps
xchg
out
loope
std
rorb
dec
call
adc
push
jnp
pop
lahf
mov
xor
inc
xor
jbe
mov
js
jecxz
push
test
push
incl
ret
adc
mov
pop
ffreep
or
add
mov
lret
fucomip
jl
cmpsb
loopne
mov
enter
pusha
fsubl
xchg
ret
inc
insl
ds
aas
dec
inc
jo
xor
mov
testb
notb
mov
fsubp
aad
data16
jmp
es
push
xchg
out
jl
inc
fcoms
mov
jb
xchg
ljmp
or
js
aas
fmul
dec
cld
cmc
push
xor
enter
inc
mov
jl
pushf
std
fistpll
cmp
rcpps
xchg
or
jb
lret
pop
pop
jp
icebp
leave
icebp
in
enter
adc
xorl
mov
mov
cmp
sub
adc
adcb
jo
sti
and
xchg
stc
fwait
mov
divl
shl
xlat
imull
xchg
cmp
rcl
cmova
dec
bound
das
push
pop
inc
and
cli
and
fisubrl
push
pop
pop
cmp
out
add
dec
insl
push
pop
inc
cmp
sarl
roll
push
std
sbb
inc
mov
sbb
ljmp
jne
xor
in
fsubl
pop
test
or
push
mov
mov
addl
xor
inc
flds
scas
or
sti
pop
mov
mov
pop
les
bound
repnz
mov
lahf
pop
inc
iret
cmpsl
gs
and
enter
or
aaa
jg
mov
test
pop
sub
ret
push
fmuls
in
inc
add
dec
je
fidivl
and
je
loopne
loop
mov
out
data16
jle
jb
hlt
and
pop
sbb
xchg
push
test
dec
jg
jmp
ja
test
arpl
decl
jmp
sbb
cmp
or
xor
pop
jmp
test
ljmp
lahf
xor
mov
mov
pop
jnp
sub
fs
adc
shlb
cmp
lcall
jg
sub
cltd
dec
inc
dec
int
xchg
aas
dec
jl
inc
mov
sbbl
cwtl
sbb
jb
mov
sub
pusha
pop
jns
loop
and
fcmovu
add
mov
hlt
addr16
and
xor
ljmp
repnz
mov
call
stos
or
xchg
adc
xchg
jecxz
pop
mov
pushl
ret
pop
mov
jmp
mov
dec
pop
push
or
inc
cli
lods
mov
jo
aam
lods
dec
hlt
xor
lcall
subb
push
inc
jecxz
pop
fdivrl
cmp
mov
jne
lcall
mov
xchg
jp
xchg
or
bnd
mov
mov
popf
out
lods
cwtl
clc
jecxz
daa
fiadds
into
mov
stos
xchg
fmuls
push
jnp
mov
cmp
ljmp
js
add
into
pop
cmp
inc
adc
and
adc
aas
mov
arpl
mov
fidivrs
add
sub
test
xor
sub
mov
inc
xchg
inc
push
fwait
movsl
or
scas
les
lahf
mov
rol
repz
add
fnsave
dec
mov
les
int3
mov
push
sahf
cmp
xchg
or
ret
ljmp
push
outsb
mov
stos
mov
jmp
xchg
sub
addl
aas
adc
js
les
outsl
in
dec
jnp
out
test
lret
jo
push
dec
adc
imul
enter
in
inc
loop
es
mov
push
xchg
scas
cld
dec
shl
pop
idivl
xor
xchg
pop
enter
sub
sub
clc
push
inc
faddl
inc
cmp
push
add
jns
rcrl
subb
test
mov
dec
lock
dec
and
xchg
gs
imul
test
mov
iret
subl
out
or
movl
sbb
out
sub
movsl
in
cwtl
push
or
jge
dec
push
push
mov
pop
arpl
sbb
add
push
ss
cli
imul
lret
inc
loope
daa
lds
incl
sbb
cld
shrb
add
imul
int3
lods
fadds
or
movl
dec
aaa
es
xor
icebp
mov
orb
add
sbb
xchg
in
inc
std
loopne
adc
mov
or
test
jl
sub
ret
add
and
fucomi
sbb
cld
mov
adc
call
inc
or
mov
inc
rorl
and
push
je
in
sub
pop
lcall
push
je
sub
nop
dec
jle
adc
adc
aam
mov
xchg
cmpsl
faddl
jnp
sbb
ljmp
or
push
push
add
dec
ds
mov
and
cwtl
inc
sbb
mov
mov
mov
or
mov
sbbl
mov
pop
pop
push
add
pop
outsb
xor
stc
adc
pop
ljmp
and
scas
lret
out
xchg
jecxz
lret
push
out
xlat
adc
fwait
ljmp
es
inc
and
pop
push
mov
repz
mov
cwtl
test
daa
inc
addr16
dec
sbb
add
int3
cmpsl
push
adcl
rorb
sub
ss
push
cs
ficoms
mov
ds
cltd
xchg
orl
mov
sub
cs
xchg
mov
daa
mov
out
or
aas
jbe
out
push
mov
dec
ds
cld
orb
mov
iret
lcall
fwait
addl
aad
pop
fsubp
sbb
push
movl
pop
dec
daa
movsb
loope
scas
mov
add
adc
push
daa
jns
pop
aaa
outsl
cwtl
ljmp
stos
xor
test
cmp
cwtl
adc
cmp
cmc
xlat
mov
mov
cmp
mov
scas
repnz
cmp
ret
outsl
leave
cli
stc
push
in
fsubs
push
pop
sub
adc
addb
lcall
rorl
xchg
sbb
cmp
into
cmp
push
notl
movsb
ljmp
mov
inc
loope
enter
add
pop
push
jl
mov
pop
jno
cwtl
test
add
insl
mov
adc
cmc
or
xchg
out
dec
inc
icebp
ret
sbb
jp
loop
mov
das
mov
pop
lea
jo
mov
adc
aaa
push
repnz
into
icebp
and
int
mov
call
push
adc
push
cmp
popf
cmp
shll
or
aaa
imull
cs
adc
lahf
sub
cld
repz
add
sti
dec
ljmp
insb
pushf
fsubs
dec
jmp
aas
or
mov
mov
push
fucomp
push
repnz
stos
mov
ljmp
jp
push
dec
into
lds
dec
and
dec
push
sub
jle
pushf
cld
aas
xor
push
popf
add
pop
arpl
cmpsl
push
cmpsl
subl
fmul
adc
xchg
clc
sbbb
adc
outsl
mov
ljmp
negb
inc
int
insb
or
imul
out
imul
jmp
mov
jns
clc
orl
ds
fwait
add
fsubp
adcl
xor
or
mov
sub
or
jp
jmp
mov
adc
adc
push
pushf
push
mov
cmp
mov
addb
fisubl
test
xchg
bound
add
push
lahf
pop
ja
and
inc
stc
cmpsb
aam
scas
push
adcb
push
dec
in
xchg
mov
xchg
mov
pop
pop
aad
jle
pop
and
data16
mov
adc
insb
test
insb
shlb
jl
mov
lcall
test
dec
popf
insb
mov
addl
lods
ljmp
jo
nop
test
out
pop
or
cmp
xchg
jecxz
mov
std
mov
jns
insl
mov
adc
add
hlt
mov
sub
inc
adc
or
push
xor
sub
xchg
dec
mov
sub
insl
pop
stc
and
xor
jne
push
shll
sub
mov
cmpsl
and
xchg
pop
add
adc
sbb
cli
adc
stc
jb
jge
push
jnp
shrl
mov
xor
vmptrld
in
adcl
xor
lea
aad
repz
push
in
or
mov
popa
jnp
mov
mov
add
or
mov
movsl
dec
or
cli
lock
imul
es
xchg
jae
push
aad
xchg
sbb
scas
push
mov
dec
iret
daa
ljmp
pop
iret
rclb
fwait
cmp
shlb
jecxz
pop
mov
mov
ret
mov
movsb
cmc
icebp
fisubs
fisttps
pop
std
stos
sbb
into
cmp
je
xor
mov
fmull
jp
cwtl
mov
inc
aaa
aad
sbb
jl
scas
lret
xchg
add
pop
xchg
push
push
wbinvd
cli
sub
mov
mov
ss
cs
fsubs
out
mov
popf
fbld
and
insb
cs
jle
mulb
addr16
or
xor
and
mov
lret
or
arpl
jae
xor
cmp
mov
insl
dec
dec
dec
jle
idivb
cmc
mov
jg
xlat
decb
fs
xor
shlb
push
clc
jmp
inc
test
rcll
test
mov
test
daa
and
in
arpl
xlat
iret
mov
sub
lock
adcl
inc
xchg
and
movsb
into
repnz
or
dec
sbb
or
int3
cli
movsl
std
add
fcoml
xchg
jbe
adc
dec
push
inc
orl
in
rclb
pop
adc
adc
pushf
add
clc
xor
sti
sub
sub
ljmp
mov
push
push
mov
sub
xchg
fnstenv
mov
pop
in
aam
dec
loop
iret
xchg
imul
leave
add
push
lret
ss
daa
add
xchg
cltd
in
xor
mov
sti
and
ss
cmp
push
xchg
aaa
sub
dec
add
push
movsw
nop
cmp
pushf
aad
insl
or
xor
xchg
push
pop
xor
cmpsl
cmc
xor
imul
fidivs
cmp
jo
sbb
dec
xor
sbb
int3
cltd
mov
jecxz,pt
mov
inc
and
test
or
mov
mov
dec
lret
jbe
mov
mov
mov
cmp
call
push
add
repz
sub
sbb
xlat
cmc
popa
inc
mov
shl
and
jae
test
lock
jl
pop
mov
cmpsl
rorl
shll
add
mov
mov
fstps
pop
jno
or
stc
push
es
jmp
and
insb
mov
adc
std
pop
cld
bndldx
fs
cli
mov
mov
inc
dec
in
inc
ja
ret
jbe
repz
or
lea
xor
lock
and
fwait
into
jnp
push
and
adc
xor
sbb
mov
inc
int
ds
out
leave
fsts
movsb
sub
ret
xor
popf
mov
xlat
outsl
fstl
and
enter
outsb
in
xchg
vpor
inc
or
jmp
imull
xlat
cmpsb
push
bound
mov
aas
outsl
and
dec
imul
sbb
fmul
xorb
lea
add
mov
or
dec
sbb
adc
push
push
lods
jl
fistpll
inc
aas
in
push
inc
xorb
xchg
adc
enter
mov
and
faddl
out
insl
addb
int3
jae
push
xchg
fmull
outsl
jp
cmp
imul
lcall
mov
xor
pop
jl
mov
adc
pop
add
mov
mov
jp
dec
xchg
mov
xor
or
ds
add
pop
repnz
adc
sub
fwait
push
cmp
cmc
adc
push
nop
xchg
cmp
cmp
jg
ficoms
data16
dec
mov
sub
dec
test
pop
push
cwtl
or
icebp
enter
xchg
movsl
test
sti
stos
mov
xor
or
mov
xchg
inc
dec
mov
repnz
pusha
addb
sub
insl
sbb
inc
in
sahf
jo
out
repnz
hlt
fcomip
and
std
ja
inc
mov
nop
mov
cmp
scas
mov
gs
dec
mov
lahf
ljmp
stos
pop
mov
scas
sbb
div
cwtl
lods
aaa
aas
imul
addl
stos
outsb
fbstp
push
insl
add
inc
lods
xor
and
jle
stc
add
xor
pusha
cmp
push
dec
je
lods
mov
lods
sbb
cmp
push
sbb
xchg
sub
ja
jo
and
movsl
shrb
clc
cmp
sbb
fistpll
or
jg
sti
dec
fisubl
dec
push
xchg
jmp
push
pushf
je
roll
test
aam
jp
and
xor
fistpl
cmp
das
push
xor
xchg
or
pop
loopne
out
repnz
mov
ljmp
test
inc
push
cmp
std
mov
add
lods
dec
lret
xchg
gs
insl
inc
push
outsb
fwait
push
cmp
sub
lods
outsl
jp
cmp
loopne
rcrl
loope
and
dec
ret
ret
pop
xlat
ret
ss
and
fidivrl
push
movsl
ds
nop
mov
mov
push
push
cmp
aaa
cmp
push
rclb
mov
push
xor
mov
repz
icebp
pop
push
pop
inc
icebp
enter
leave
test
test
divb
out
data16
adc
jae
daa
test
jo
xor
adc
or
push
cmp
mov
in
call
jg
adc
pop
jp
adc
fstl
and
xchg
fwait
xor
sub
fisttpll
xlat
in
xchg
push
pop
inc
mov
pop
xor
mov
push
jge
xchg
xorl
xor
clc
cli
popa
in
cmp
scas
hlt
jmp
test
jbe
dec
je
dec
pop
mov
cmp
popf
fbld
je
or
or
sub
jae
push
cmp
inc
es
and
ret
xor
cwtl
jecxz
or
mov
mov
push
mov
dec
jge
cmp
out
xor
sub
outsl
adc
pop
push
icebp
mov
stc
jne
lds
nop
test
jae
scas
outsb
lahf
out
loope
rcrb
cmp
cmp
jbe
add
or
jo
jg
outsl
push
loop
aas
idiv
shr
movsl
sti
xchg
les
int
mov
lods
int
sbb
xchg
dec
das
rcrb
pop
pop
pop
xchg
loopne
push
movsl
hlt
and
fcomps
stos
es
call
cltd
sbb
sbb
xchg
cmp
push
aam
or
ret
or
enter
cmp
adc
push
sahf
jae
sbb
mov
xchg
daa
inc
xchg
mul
sbb
std
pop
and
and
mov
mov
test
mov
xor
lods
jle
adc
fbstp
fiaddl
cmpsb
dec
sbbl
aam
add
push
cs
add
mov
test
pop
sub
scas
adc
dec
inc
shrl
bound
jge
test
and
pop
or
stc
mov
mov
in
xor
lods
xor
jge
int3
out
xchg
inc
stc
daa
sahf
fimull
repz
pop
repz
outsb
mov
ds
xchg
arpl
pop
xchg
jnp
fnstenv
fwait
xchg
and
sbb
fcom
adc
xchg
inc
mov
aam
lods
sti
push
andb
sub
fisubs
and
pop
imul
jns
sub
dec
xor
jecxz
into
or
fcmovne
sbb
pop
push
xchg
shll
rclb
into
dec
cmc
loopne
xor
out
lock
xor
dec
sub
cmp
sub
decl
aam
outsl
fisttps
sub
sub
sbb
adc
xchg
inc
xor
xor
fs
ds
cld
or
fisttpl
mov
jecxz
jmp
sub
jge
add
icebp
xor
outsb
cltd
mov
ds
clc
lods
fidivrs
cmp
mov
ds
mov
adc
push
cmp
push
jecxz
jo
scas
inc
xor
pop
sub
mov
sub
shrl
add
out
test
repnz
cmp
dec
movsb
dec
int
push
popf
or
pushl
test
mov
mov
inc
nop
call
leave
or
dec
mov
add
push
push
stc
mov
ret
lahf
sub
stc
addb
xchg
mov
push
inc
dec
sbb
ret
out
add
mov
dec
xor
add
outsb
jmp
mov
aam
dec
jae,pn
dec
dec
bound
cli
sbb
xchg
adc
int
xchg
es
fsubl
stc
push
pop
loopne
or
mov
mov
clc
sub
jo
sub
fistpll
je
and
xchg
fstl
or
jae
pushf
inc
leave
xchg
lods
xor
pusha
dec
dec
or
cli
push
sub
push
imul
dec
cli
es
pop
outsl
outsb
pop
fcmovnb
adc
movsb
jne
dec
cmp
dec
div
loop
mov
inc
rcl
dec
lahf
sub
sbb
dec
mov
stos
test
fs
inc
mov
sub
incb
xor
fmull
bound
xchg
cmp
mov
cmc
daa
push
mov
xor
xchg
call
lods
insb
scas
das
rcl
mov
mov
mov
arpl
adc
in
addb
add
ffree
inc
call
pop
xor
stos
ljmp
nop
test
in
cmp
xlat
in
or
and
inc
sahf
fsubrl
sub
jecxz
xlat
pop
in
or
aas
pop
lods
add
inc
ds
xchg
push
push
mov
cmpsb
mov
loop
popf
dec
aas
pop
js
pop
lret
lods
stos
dec
sbb
repz
subl
jno
xor
xor
stc
jp
xchg
fisubs
in
fdivrl
loop
stc
les
mov
cmp
popf
add
mov
rcll
pop
mov
lcall
stos
das
in
adc
ret
dec
push
aad
sub
mov
mov
into
sbbb
inc
mov
lock
mov
adc
adc
jnp
push
jb
imul
jnp
clc
push
lock
lahf
sub
mov
insb
and
cwtl
aaa
mov
aas
add
in
into
xchg
dec
or
es
test
xchg
mov
dec
pop
gs
push
sbb
out
test
fwait
popa
mov
jnp
push
sbbl
arpl
dec
and
cmp
frstor
daa
js
lods
addr16
jno
xchg
push
pop
popa
jecxz
lcall
lret
jp
and
fstpl
int
fisubrs
add
lea
mov
jmp
push
int3
add
cwtl
mov
out
xlat
popf
sahf
cmp
or
mov
addr16
mov
or
push
jmp
mov
inc
sub
and
cltd
stos
and
jmp
mov
push
aam
fstpl
push
pushf
leave
movsb
mov
rorl
js
pop
movsl
test
or
arpl
shl
push
mov
mov
mov
add
xchg
and
addr16
add
orb
adc
and
aas
std
in
add
xor
inc
mov
inc
test
fidivrs
mov
xchg
add
adc
addb
add
mov
outsb
pop
inc
imul
mov
out
cmp
sbb
mov
mov
aam
arpl
inc
dec
xlat
hlt
rcll
xchg
subb
sub
pop
pop
addb
dec
mov
jnp
jle
push
jl
xchg
mov
icebp
je
in
jne
inc
mov
test
and
fwait
imul
imul
xchg
xlat
call
push
test
push
icebp
mov
xor
aas
pcmpeqd
xor
lcall
adc
inc
jge
frstor
add
js
rclb
dec
cmp
je
and
push
insl
subb
ret
and
jle
addr16
pusha
dec
jb
lcall
push
and
sub
push
out
jno
pop
jns
and
je
sub
nop
lea
mov
cmc
pop
add
or
xchg
xchg
or
lods
dec
int3
mov
jae
add
aad
mov
dec
push
xchg
mov
lret
cmp
mov
ror
popa
mov
fists
fcmovnb
xor
mov
jg
mov
jecxz
std
mov
push
xor
sbb
pop
nop
push
push
dec
pop
negb
vorps
add
aas
call
jmp
mov
cmp
imul
xor
cmp
mov
add
repz
repz
pop
pop
pop
or
cli
scas
imul
pop
pop
dec
mov
enter
inc
sar
push
jne
test
fisttps
and
into
sbb
stos
sbb
add
es
cs
sub
mov
jb
rcl
setge
mov
jbe
dec
mov
add
push
lock
outsb
scas
punpckhwd
xchg
push
in
int3
in
xchg
or
jbe
cmp
inc
dec
push
sub
nop
sbb
loop
cmp
mov
retw
test
aaa
stos
dec
adc
fldenv
mov
std
nop
fiadds
lret
mov
rorl
jo
push
icebp
stos
lods
fnstsw
adc
stc
in
xchg
push
gs
cmp
pop
popa
xchg
inc
sub
mov
cmpsl
enter
outsb
dec
dec
icebp
push
sbb
add
int
in
scas
addr16
pop
loopne
sbb
and
pusha
dec
movsb
outsb
cmp
and
int3
add
jg
xchg
in
inc
lea
cwtl
mov
xchg
fstpl
movsl
jp
dec
fstpl
mov
jp
xchg
test
hlt
int
adc
add
gs
and
insl
sub
xchg
xchg
add
or
dec
mov
sbb
cmp
iret
movsb
inc
sbb
jmp
xchg
sbb
jbe
roll
orb
fbld
aam
inc
or
pop
test
mov
sub
xchg
inc
sub
jne
cwtl
push
jle
adc
repz
dec
push
popf
sbb
fildl
lea
loop
dec
jno
in
lods
fs
repz
ja
out
stc
sbb
sahf
outsl
xchg
movsl
cmp
sbb
dec
add
sbb
add
sbb
stc
or
outsl
mov
xor
pop
and
inc
jns
pop
add
adc
xchg
insb
popa
shll
nop
jg,pt
loopne
lods
stc
gs
iret
out
scas
add
cli
adcl
out
iret
in
ret
lds
xchg
sub
pop
push
stos
push
cwtl
mov
mov
aam
cmp
int
repnz
or
sub
jno
fdivrl
hlt
js
fistps
jge
jmp
add
iret
push
mov
jge
not
push
cwtl
aaa
in
rcrl
mov
lret
xor
addb
dec
push
and
sarl
mov
sbb
repnz
cs
mov
push
mov
inc
xchg
xchg
cmp
subb
jne
fisubl
sbb
cmpl
xchg
push
cmp
and
stos
push
pusha
sub
fstps
mov
icebp
push
xor
int3
xorb
andl
arpl
imul
xor
aaa
jecxz
ds
xor
mov
sbb
xchg
lds
xchg
icebp
call
cltd
xchg
sti
repnz
pushf
or
xchg
in
lret
dec
js
inc
jnp
sub
fsts
sub
add
mov
cltd
cmpsb
push
jno
sti
int3
jecxz
push
push
aaa
pushf
xchg
mov
push
jae
xchg
or
rcll
push
add
in
mov
lret
inc
pop
xchg
pushf
enter
sub
imul
test
sbb
sahf
mov
mov
cmp
test
sbb
dec
shl
daa
movsl
aas
sbb
dec
sub
pop
push
imul
das
xor
lods
lret
call
xchg
aad
mov
sbb
pop
sahf
inc
pop
rol
cmp
and
add
mov
addl
out
icebp
xchg
pop
test
jb
ss
pop
lods
sub
sahf
push
out
ficompl
pop
dec
sub
add
pop
or
xor
adc
or
pop
in
push
push
sub
push
testl
jge
stos
pop
pop
and
dec
mov
aad
xor
mov
adc
mov
ljmp
in
popf
dec
mov
bound
test
pop
mov
ja
dec
push
mov
mov
mov
mov
lcall
sbb
cmp
negb
push
repnz
gs
and
int3
adc
repnz
mov
xor
test
jmp
leave
add
jns
inc
outsb
dec
insb
pop
inc
sbbb
ja
jg
rclb
add
xchg
loop
xor
push
orb
sub
adc
push
repnz
pushf
xchg
mov
inc
aas
jp
push
popf
in
inc
and
ja
or
adc
jp
lock
or
call
and
mov
mov
test
out
std
sub
in
outsl
sub
ja
insl
outsb
mov
jle
dec
ret
cli
aaa
call
mov
jl
call
clc
mov
xchg
std
cmp
ret
add
xchg
xlat
mov
push
lds
mov
jnp
lahf
xchg
gs
xor
xor
lds
inc
in
aas
mov
xor
mov
jp
sbb
insl
cltd
push
jb
test
test
outsl
push
stos
push
pop
arpl
ja
out
test
dec
mov
jl
and
loope
mov
adc
out
push
dec
add
and
je
dec
jl
inc
jge
adc
and
mov
movsl
call
xlat
adc
mov
and
adc
adc
sub
cmc
cmp
out
jmp
pop
push
nop
loope
clc
push
pop
stos
mov
xor
fwait
lahf
sbb
cwtl
xor
cli
dec
rcll
mov
fs
ljmp
adc
ffreep
int3
pop
dec
divb
inc
push
push
mov
pop
iret
sbb
mov
mov
outsl
xchg
fisubs
jp
aad
sub
lretw
stos
jbe
not
outsb
xchg
push
sub
scas
and
mov
push
and
cmp
inc
pop
shrb
or
sub
pop
mov
stos
aam
cmp
xor
jmp
negl
jae
jo
jmp
dec
pop
cmp
pop
pop
cmc
adc
or
dec
push
dec
dec
test
ret
jg
fidivrl
jmp
or
xchg
stos
and
and
shrb
xor
ja
pop
rclb
in
push
sub
adc
jl
fildll
fwait
dec
mov
dec
mov
mov
or
and
pop
test
pop
outsb
xchg
or
xchg
out
gs
cmpsl
sbb
mov
fildl
lahf
jle
shlw
ja
jae
or
cwtl
fwait
dec
sti
dec
jne
aad
sub
xchg
aas
jnp
pop
jge
testl
pop
add
jbe
aas
fiaddl
xchg
push
mov
daa
jle
insl
inc
sbb
lret
jne
pop
nop
push
ds
stc
pushf
mov
ret
pop
sbb
mov
daa
xorl
sbb
mov
cmp
and
mov
cmpl
jne
sub
pushf
cltd
je
mov
inc
sub
std
xchg
push
add
ds
mov
sahf
add
cmpsl
ret
gs
test
push
std
mov
and
fwait
jge
shlb
ja
adc
inc
inc
aas
fnstcw
sbb
inc
fadds
sub
data16
sbb
clc
jl
fwait
xchg
mov
push
jnp
mov
push
dec
rclb
add
push
negl
pop
dec
pop
nop
cmp
addr16
loopne
mov
je
int3
aad
xlat
mov
inc
xorb
scas
popf
in
loope
xor
ds
inc
push
adc
cmpsl
cmp
mov
sbb
dec
or
xor
ja
imul
test
push
pushl
hlt
push
adc
call
or
push
pop
add
push
repz
jne
andb
pop
xchg
sbb
jle
out
in
test
add
add
xor
and
add
fcomps
in
xlat
dec
sahf
sti
sbb
mov
push
inc
xor
movaps
insl
xchg
addr16
fidivs
mov
jno
ret
and
decb
decl
jns
in
jnp
les
fwait
push
daa
leave
mov
jg
cmp
lods
sbb
pop
adc
andl
insl
push
pop
push
jb
xor
push
mov
add
cmp
adc
popf
stos
dec
cltd
cmp
iret
seta
inc
jae
aad
add
lea
and
cmpsb
fbstp
aaa
stc
pop
lea
mov
pushf
int3
jo
push
sub
negl
cmp
pop
js
mov
xlat
out
hlt
xchg
pop
repz
lcall
xchg
mov
jno
test
in
loope
ret
daa
inc
mov
cs
ds
adc
das
pop
and
mov
cmp
mov
out
xchg
mov
insb
shlb
gs
rol
leave
lret
out
dec
pop
ljmp
xor
les
mov
out
lds
ret
lahf
idivl
mov
add
movsl
dec
xor
ret
sub
rclb
push
sub
mov
or
sub
jg
pop
outsl
js
jnp
adc
daa
jb
push
add
movb
push
add
out
sub
mov
xchg
mov
jp
cmp
or
loopne
push
int
mov
mov
xchg
out
sbb
push
xchg
xchg
movsl
cmc
movsl
in
or
negb
jbe
mov
rcrb
sti
ljmp
movsb
loope
inc
adc
mov
push
dec
ds
adc
test
or
or
notb
outsb
xchg
xchg
scas
mov
loop
mov
push
pop
cmp
or
dec
je
mov
cli
enter
jecxz
jecxz
adc
add
or
or
push
jne
xchg
sbb
xor
xchg
rcrl
adc
dec
repnz
inc
and
aaa
notb
and
loop
orb
int3
mov
cmp
fmuls
inc
mov
inc
xor
test
jne
lret
stc
cmp
enter
pushf
and
sbb
inc
test
jo
and
stc
jle
daa
xor
stos
in
xchg
test
sub
jl
js
mov
xor
shll
test
dec
inc
jbe
inc
cmpl
pop
divl
je
je
out
xor
stc
xor
push
pop
mov
dec
jbe
fsubl
pop
je
pop
aam
fsubs
sbb
das
in
add
mov
movl
mov
inc
pop
xor
lcall
je
daa
cmp
insb
mov
push
out
jns
push
hlt
loop
and
mov
cmp
and
outsb
subb
pop
xchg
mov
mov
mov
push
nop
xor
movsb
test
mov
clc
mov
ljmp
sbb
and
aad
and
mov
and
fs
int
dec
ljmp
and
pop
mov
mov
add
addr16
jge
pop
mov
nop
mov
scas
dec
cmpsl
jmp
cmp
xor
jns
or
inc
aam
les
fstpl
mov
add
push
mov
xchg
jnp
aaa
and
sub
out
adc
test
pop
xor
clc
cmp
outsl
and
out
pop
adc
pop
xor
test
mov
dec
ret
and
or
push
push
lods
mov
aam
or
dec
mulb
add
mov
rcll
cmp
mulb
shll
or
addr16
pop
and
jae
inc
cli
lods
dec
pop
push
cmp
sub
adc
sbb
or
mov
push
push
cmp
cmp
mov
aam
pop
out
jge
jo
or
jmp
popf
mov
hlt
sub
jle
jae
lods
pop
leavew
js
xchg
repnz
add
sarl
jp
pusha
ret
idivl
inc
cld
imul
cld
mov
lcall
lret
sbb
mov
pop
adc
adc
xchg
in
arpl
test
or
lock
shll
pop
or
sub
mov
mov
repnz
jbe
ficomps
aaa
repz
out
or
aas
int3
fisubrl
pop
xor
mov
shl
jne
rolb
xchg
mov
icebp
cmp
shll
mov
int3
inc
out
inc
psubd
inc
mov
movsb
xchg
push
push
out
and
cld
jp
cmp
cmpsb
dec
rcrb
aas
pop
pop
mov
push
lahf
aad
cmc
push
addb
push
and
jl
push
mov
add
roll
nop
in
dec
jl
fistpll
lea
sbb
xchg
or
xchg
xor
lret
cmpsl
add
cltd
fidivs
or
mov
ljmp
nop
xor
mov
adc
jnp
imul
aas
cmp
cld
pop
outsl
or
and
int3
xor
insl
mov
out
rclb
imul
mov
and
inc
ret
cmp
rcr
ds
pusha
inc
xor
mov
fsubl
mov
add
xchg
cli
and
pop
add
repz
cmpsb
in
stc
jmp
orl
shr
mov
addb
mov
push
lods
jno
lret
push
iret
pop
incl
movb
lods
jnp
std
in
imul
daa
je
or
leave
or
mov
mov
mov
cmp
push
sbb
sub
pop
xor
movsb
int3
sub
lcall
mov
push
mov
sbb
test
xor
imul
cs
jnp
test
pusha
jae
lods
add
inc
into
jmp
insb
repz
outsb
lahf
mov
pop
mov
mov
pop
mov
cli
sbb
scas
int
xchg
sub
jecxz
es
rcll
pushf
in
dec
sub
sbb
adc
or
es
add
xchg
pop
jle
xor
in
push
pop
lods
mov
mov
cmc
mov
sub
jmp
sbb
dec
add
jb
inc
pop
cmp
les
popa
cltd
pop
data16
test
stc
shl
mov
lcall
dec
aam
ret
push
dec
xchg
shll
gs
test
and
cmpsl
lea
or
in
daa
lods
sub
xor
data16
subb
sub
clc
cmpsl
aas
push
inc
mov
test
lret
and
clc
xor
lock
mov
mov
imul
rcrb
sti
int3
div
or
push
ret
fistpl
push
inc
sub
pop
or
in
mov
fidivrl
dec
sbb
ficomps
inc
rorb
lret
jo
lds
cmpsb
cmp
pop
mov
rcrl
cwtl
xchg
jge
xchg
fiadds
insl
outsl
fmuls
enter
mov
fucomp
jae
cmp
sbb
iret
inc
push
push
and
addr16
enter
and
out
add
xchg
jl
dec
inc
adc
mov
push
test
mov
frstor
adc
lea
xchg
sub
adc
test
test
outsb
orb
push
adc
ljmp
fwait
lods
lods
loope
add
or
imul
stos
xchg
fldl
dec
pushf
dec
lret
mov
ret
cwtl
lods
movsl
xor
mov
xchg
push
sub
inc
mov
lcall
in
mov
xor
adc
jge
dec
getsec
idiv
or
hlt
into
cmpsl
mov
adc
clc
ja
outsb
aas
add
mov
movb
addl
int
or
xchg
mov
pop
or
and
xchg
xor
xor
jg
pusha
mov
rorb
aas
out
test
sbb
or
or
or
sub
add
push
jle
inc
ljmp
inc
mov
loop
mov
sub
mov
daa
cmp
mov
push
rclb
jns
add
mov
mov
jl
adc
lods
sbb
movsl
iret
mov
sub
rep
lods
mov
sbbl
stc
xchg
shrb
pop
fwait
dec
and
insl
js
sbb
xor
pop
jns
pop
ja
les
inc
cld
or
mov
sahf
fstl
sub
gs
jnp
dec
mov
cmp
and
xchg
mov
sub
gs
testb
clc
add
dec
jmp
fnstsw
lock
pop
test
loop
jo
ss
mov
add
push
out
sbb
shll
orb
inc
push
mov
cwtl
and
xchg
sub
jns
pop
addr16
test
jno
sub
or
fisttpl
adc
lret
cmp
jp
pop
pop
insb
sbb
or
mov
adc
xchg
test
cmp
and
mov
add
mov
mov
insl
jmp
mov
bound
mulb
mov
push
mov
xor
ja
insl
sub
ljmp
scas
inc
aam
mov
jecxz
pop
lds
shrb
ficoms
ja
add
pusha
inc
leave
inc
divl
jae
pop
inc
push
ret
mov
lods
dec
push
mov
nop
incb
pmullw
cmp
std
cmp
lds
nop
cmp
and
shr
addr16
add
ficomps
jl
lods
lret
xlat
jmp
or
jge
lods
push
dec
sbb
shrb
jbe
mov
push
add
filds
iret
jo
sbb
push
mov
jmp
jo
fnstsw
gs
mov
xchg
js
loop
xchg
stos
sub
xchg
add
scas
add
das
movsl
sub
lret
xor
or
jecxz
cmp
sbb
aas
lea
cld
jp
and
mov
aaa
dec
hlt
clc
cmpb
mov
fidivrs
xor
mov
cli
mov
mov
inc
mov
xchg
loopne
xchg
xor
lret
push
je
pushf
dec
les
and
mov
inc
lret
int3
lock
push
mov
repz
add
push
mov
mov
dec
enter
or
xchg
jl
xor
and
inc
outsb
lea
ss
icebp
sbb
loope
aas
shll
fdivrs
aam
dec
mov
sbb
xchg
jecxz
fildll
push
call
fstps
in
sub
xchg
push
pop
in
cmp
mov
cmpsb
jb
pop
repnz
inc
push
sub
mov
les
out
es
push
test
dec
sbb
dec
addr16
xor
and
out
sbb
or
sbb
xchg
pop
mov
or
dec
push
mov
repz
mov
ja
adc
inc
roll
data16
jns
lret
ja
or
xor
xchg
xorl
and
dec
jbe
inc
pop
cmp
in
mov
outsl
sub
lock
or
cmp
dec
movsl
je
mov
xchg
in
cmp
sbb
xchg
lods
adc
inc
add
cmpsb
jp
mov
or
jmp
push
das
or
jnp
jmp
sub
sbb
fsubs
dec
sub
shrb
mov
and
dec
lahf
or
xorb
cmp
add
xor
cmp
call
movsl
lock
cli
mov
inc
sbb
inc
or
repnz
lret
dec
lret
loop
inc
pop
and
jmp
inc
xchg
into
sub
add
cmp
jmp
jb
xor
mov
jmp
jo
push
shrl
inc
mov
stos
xor
je
jp
arpl
sub
inc
out
pop
dec
leave
sbb
dec
push
je
out
lods
fcmovbe
push
dec
inc
cmp
hlt
shrb
mov
inc
fs
ss
sbb
cld
add
es
cmpsb
shlb
bound
lds
xchg
xlat
nop
pusha
in
sti
stos
cltd
cmpsl
mov
mull
mov
test
sbb
inc
sti
push
mov
cld
jb
in
dec
es
in
sbb
pop
das
xor
data16
outsb
pop
jne
mov
mov
xor
out
xor
push
dec
xor
jle
cmp
xor
aad
jnp
sbb
sub
mov
test
cmp
mov
ss
sldt
aam
in
inc
lret
lods
push
stc
out
jle
ret
pop
push
mov
out
movb
xchg
mov
shll
fwait
push
cs
adc
xchg
lods
cmp
ljmp
cmp
mov
andl
xor
rclb
lock
cs
mov
cli
pop
popf
iret
subb
roll
cs
out
stos
xchg
mov
add
jge
push
cli
adc
out
inc
inc
fwait
cmp
stc
pop
xchg
nop
sub
enter
and
xchg
xor
pop
mov
jne
ret
negl
cmpsb
jno
adc
dec
inc
inc
aas
inc
jb
fildll
cld
sbb
mov
adc
int3
push
dec
mov
adc
xor
and
in
push
xchg
sub
inc
jge
fcomps
int3
pop
lret
outsb
lcall
aas
aas
push
cltd
cmp
test
fdivs
lcall
sub
and
mov
cmpb
lcall
adc
jae
shl
ret
out
push
inc
fwait
push
mov
bound
in
std
mov
mov
xchg
inc
pop
fidivs
js
jb
icebp
pop
pop
lock
xor
shrb
dec
pop
hlt
mov
or
xchg
fwait
push
fidivrl
cld
xchg
out
in
sahf
and
or
add
add
mov
call
inc
and
cmp
add
and
push
sub
incb
repz
lcall
les
fidivrl
inc
std
rolb
daa
cmp
stc
and
or
xor
mov
aad
push
je
mov
dec
sub
lret
ficomps
push
xchg
mov
popa
sbb
jp
push
mov
inc
jae
and
or
pusha
repz
push
and
je
sub
mov
push
addr16
cmc
xchg
inc
cmpsb
cmp
cmpsl
dec
mov
loope
ds
or
fdivrp
out
cmp
movsl
aad
dec
call
and
and
loopne
sahf
test
js
into
call
xor
pop
icebp
push
cmp
mov
xchg
pop
and
pop
xchg
jb
adcl
adcl
loopne
inc
sti
je
sub
stc
push
shrl
movl
fwait
mov
mov
lahf
sub
jo
push
adc
xchg
aas
out
mov
push
xor
mov
test
movups
mov
mov
push
aaa
mov
repz
sbbb
adc
out
mov
sub
sbb
adc
adc
js
scas
push
pop
pop
jae
mov
jae
dec
fidivs
inc
sar
je
pop
jb
jbe
inc
cld
aas
push
jmp
lds
pop
pop
inc
pop
fsubr
mov
andb
xor
lahf
jle
pop
mov
mov
lret
out
aas
ja
arpl
xchg
xor
adcb
int3
cli
movntq
mov
mov
add
add
jnp
inc
fistpll
sbb
es
ss
ficoml
movl
jb
pop
jg
lods
dec
lods
mov
jb
inc
jle
and
xchg
movsl
push
test
push
sbb
and
call
andl
and
inc
hlt
jl
or
add
imul
int3
stc
cmp
sbb
outsl
inc
jmp
add
in
aaa
mov
stc
ret
xor
mov
sub
hlt
lcall
push
and
int
sub
sbb
or
xchg
arpl
mov
in
mov
int3
jp
int3
in
sub
add
pop
mov
inc
hlt
repz
nop
lret
cltd
inc
push
or
aaa
arpl
xchg
nop
cmp
pushf
xor
push
into
inc
rorb
test
jnp
xchg
mov
dec
in
sahf
pop
mov
fisubl
push
fdivrl
jnp
clc
mov
inc
or
inc
shl
out
sbb
mov
and
sub
pop
notb
sbb
je
arpl
dec
fcmovnu
lret
insl
mov
scas
jmp
cmp
push
xchg
popf
adc
push
bound
pop
mov
xor
mov
mov
jno
pop
and
lret
mov
lock
ljmp
dec
imul
mov
pop
sahf
sub
mov
lret
xchg
add
pop
add
roll
movsl
aas
and
fcomi
fldcw
mov
inc
push
and
repz
xchg
mov
jle
and
xchg
pop
adc
sub
lods
sbb
mov
popa
nop
pop
mov
xchg
mov
sub
mov
fldl
repz
jnp
fisubs
mov
int3
mov
xor
notb
fs
sub
dec
add
jp
pop
pop
lods
xor
insb
jle
push
pop
inc
shlb
mov
add
cmp
and
add
xor
aas
push
das
imul
adc
push
xor
or
pop
jle
mov
sbb
popf
lcall
test
mov
jge
push
inc
inc
les
jp
pushf
stos
inc
dec
xlat
xor
ret
shlb
pop
pop
jae
push
sbb
xchg
lcall
jnp
mov
add
dec
lahf
test
mov
mov
js
lds
clc
mov
xor
shlb
pop
cmpsb
sbb
inc
cs
pop
dec
out
xchg
jae
cmc
lret
adc
imul
nop
aam
add
ret
lcall
or
sbb
testb
test
mov
inc
adc
adc
jl
and
mov
hlt
jp
jge
pop
inc
mov
cmp
cld
mov
sub
or
bound
or
mov
clc
or
fs
ret
jle
jg
addr16
jl
sbb
mov
out
dec
mov
xor
in
mov
inc
test
outsb
or
lret
jno
mov
loope
xor
push
divl
nop
outsl
mov
lcall
mov
sbb
and
clc
insl
loope
aas
mov
repnz
sahf
xchg
sbbb
xchg
jecxz
out
cmpsb
sub
ret
and
aaa
sbb
shl
inc
pop
shll
test
inc
insb
mov
int
lods
das
push
sub
inc
jecxz
xchg
or
out
aad
xor
add
push
xchg
sub
dec
jae
fisubrs
add
inc
nop
das
sub
mov
xor
stos
call
add
cld
pop
insb
inc
mov
ja
dec
push
cmp
add
sub
sbb
push
loope
sahf
pop
xchg
ja
daa
push
cmpsl
leave
test
sbb
push
dec
inc
movsl
das
fdiv
jnp
mov
movsl
mov
out
in
mov
lret
or
inc
push
xor
mov
cmc
rcl
lcall
imul
scas
push
add
dec
arpl
das
mov
mov
pop
jge
push
and
cmp
mov
push
push
lock
loopne
add
dec
xchg
lods
fidivrl
fildl
mov
xor
push
imul
add
cmpsb
jo
cmovne
daa
adc
popf
jge
lea
cwtl
iret
xchg
imul
mov
dec
cmpsb
into
iret
or
je
mov
lahf
jge,pt
jne
mov
mov
cmp
fs
popf
fs
outsb
add
mov
les
nop
cld
shlb
sbb
sbb
arpl
xor
fidivrl
lret
xchg
add
sub
popa
addb
outsl
jae
add
cmc
orb
mov
xchg
jb
push
lea
mov
pop
loope
xchg
loope
mov
sbb
push
clc
test
and
add
loop
ret
and
pop
inc
mov
dec
jno
es
iret
mov
mov
and
insl
mov
cmp
inc
imul
fcomps
pushf
pop
les
inc
or
pop
inc
push
mov
cli
pshufw
dec
aad
dec
push
out
mov
and
sbb
sahf
push
sbb
int
aad
sbb
stos
sbb
mov
xchg
pop
aaa
mov
es
shlb
lods
push
subl
adc
movsb
push
mov
in
bound
sub
xchg
jns
fnstcw
cmp
push
xchg
push
xor
add
lods
daa
mov
push
sub
fsts
adc
cltd
pop
fwait
in
xchg
xor
lock
inc
test
inc
cmp
add
xchg
xchg
scas
sub
cmpsb
aam
mov
es
cmp
stos
mov
xchg
sub
outsb
inc
sub
pop
fxch
repz
lahf
shll
push
jg
imul
mov
lock
pushf
lea
adc
js
pop
mov
pop
scas
inc
ss
andb
pop
loope
out
mov
xchg
lret
add
pop
bound
adc
push
pop
xchg
lods
cmpsl
xor
fwait
aas
pop
cmpsl
mov
lds
sti
sahf
jbe
mov
cmp
aaa
pop
or
mov
fs
cs
xor
scas
lcall
cmp
divb
jmp
scas
add
mov
push
les
inc
mov
or
dec
jae
sarl
pop
lret
mov
leave
scas
or
vphaddbd
cmp
mov
or
mov
mov
pop
into
and
mov
dec
loopne
push
jo
ret
sbb
and
repnz
mov
mov
or
lret
jne
cwtl
loopne
jg
scas
lea
out
pop
mov
xor
testl
jge
dec
or
adc
in
mov
and
cmp
inc
movsb
test
filds
xchg
dec
int3
inc
jmp
inc
and
dec
or
cli
or
out
addb
stc
mov
push
jg
sbb
fisttpl
in
xor
or
fmuls
sub
xchg
pop
xchg
mov
sub
xchg
lods
orb
push
and
lahf
test
les
jg
inc
cmpsl
outsb
cmp
inc
adc
adc
hlt
sbb
jno
pop
movsb
hlt
dec
daa
xchg
enter
adc
stos
dec
iret
dec
mov
in
dec
fwait
jle
mov
test
std
js
fcompl
and
mov
mov
fnstcw
and
test
push
jle
mov
jmp
mov
sarb
scas
adc
adc
lcall
inc
test
aas
xchg
adc
pop
ss
adc
jo
mov
test
sub
mov
rcll
jae
xchg
hlt
xchg
mov
cmp
icebp
aaa
mov
stos
push
push
inc
sbb
rcrb
movsl
pop
jl
jns
in
pusha
cmp
lahf
inc
jb
icebp
leave
xor
xchg
popf
and
test
mov
out
scas
std
cmp
mov
xor
out
xor
xor
fnstenv
addb
mov
sub
sar
ja
add
rcrb
jp
stos
pop
mov
jnp
aad
aam
ljmp
sbb
testb
pusha
icebp
cs
out
ficoms
push
in
mov
mov
and
jl
addr16
clc
or
insl
cmpl
and
dec
ja
xchg
sbb
or
inc
jg
mov
insl
inc
push
sbb
insb
jbe
jecxz
leave
ja
adc
or
jecxz
dec
push
xchg
gs
sub
xchg
mov
shlb
or
push
test
xlat
in
jp
sbb
mov
push
into
fs
inc
inc
ljmp
dec
cmp
jo,pn
loopne,pn
lods
gs
jns
fadd
dec
call
push
sbb
sub
stos
ds
aam
les
cmp
incb
xchg
mov
leave
adc
mov
mov
xchg
cmove
xor
shll
jnp
outsl
push
inc
mov
les
cmpsb
inc
inc
pushf
mov
xor
inc
mov
arpl
inc
push
mov
jo
ljmp
mov
mov
cmp
cltd
adc
mov
pop
push
cmp
aaa
push
pop
outsl
das
gs
lods
sbb
out
dec
dec
jp
scas
movsl
ret
mov
add
xchg
push
insl
jne
addb
mov
fisttps
nop
insb
inc
pusha
ret
cmc
fidivs
js
adc
mov
fldcw
jp
xchg
arpl
fwait
pop
stc
les
adc
pop
or
push
fcoms
sahf
mov
jp
and
push
mov
outsb
clc
dec
sub
mov
mov
in
xchg
xchg
mov
sbb
aad
shl
mov
or
imul
loope
ljmp
lds
cld
mov
sbb
aam
inc
jno
sbb
shrl
pusha
cmp
cli
add
mov
cmp
es
xor
movsb
add
pusha
add
sub
xchg
dec
lcall
inc
jle
ja
sub
test
push
data16
xchg
dec
loope
mov
sbb
into
clc
stc
xchg
mov
inc
icebp
xlat
mov
mov
push
aam
jb
outsl
out
xor
or
enter
ss
mov
xchg
leave
call
loopne
aad
or
inc
adc
mov
clc
fisttpl
or
dec
shlb
push
cmp
sbb
fimuls
mov
sbb
stc
psubsw
inc
test
mov
mov
lahf
xor
popa
popf
sbb
jmp
scas
or
pop
mov
daa
aas
pop
loopne
incb
fisttps
lcall
mov
pop
jo
push
adc
jl
call
xor
sub
sbb
lods
dec
in
cmp
jne
aaa
icebp
xor
sbb
lods
jmp
mov
loop
test
stos
jecxz
rcl
mov
pusha
jne
lds
and
enter
xlat
xor
inc
fldl
and
cli
jbe
lods
mov
adc
test
pop
mov
cs
add
fiaddl
cmc
and
out
je
mov
sbb
ret
sahf
outsb
cmp
stc
pop
push
das
jge
aas
pusha
jge
xchg
outsl
rorb
sub
loop
cwtl
mov
lahf
fidivs
rolb
das
pop
in
push
add
ds
inc
dec
cwtl
fbld
mov
push
test
pop
sahf
jge
jbe
rcrl
in
jae
mov
repz
pop
jne
lret
ds
daa
divb
addb
repnz
and
mov
jl
jns
fs
ja
jmp
mov
cmp
push
fs
fs
xchg
xchg
divl
xor
pop
mov
or
adc
mov
push
int3
jbe
push
in
pop
sbb
add
addr16
pop
lods
push
add
xchg
adc
mov
pop
insl
dec
cmc
daa
shlb
dec
test
inc
add
xchg
jecxz
adcb
adc
insb
cmp
shrb
iret
fidivrl
aam
test
add
movsb
sti
aad
adc
mov
imul
dec
test
ss
jge
insl
shll
arpl
shlb
adc
test
inc
cltd
add
out
mov
stos
cmp
test
add
cmp
cmpsb
dec
lahf
mov
pop
jecxz,pn
andb
and
mov
es
rorb
testl
push
lret
lret
jp
and
xor
orb
mov
jge
pop
mov
cmp
jne
lods
cmp
cmp
sub
inc
dec
fs
mov
ljmp
ret
add
arpl
sbb
shl
xor
jg,pn
cltd
roll
mov
int3
lds
sahf
mov
add
mov
adc
bound
ss
cmp
push
sbb
dec
repnz
lock
fs
pop
push
mov
aad
icebp
pop
cmp
xor
xorl
shlb
inc
or
mov
fwait
and
sahf
cmpsl
sbb
insl
stos
inc
xchg
push
or
push
or
nop
addr16
lea
cltd
or
loope
shlb
daa
pop
daa
dec
or
movb
loope
fdivl
and
test
mov
aaa
daa
or
push
inc
add
jl
mov
inc
xchg
decb
pop
mov
add
jecxz
out
popa
js
mov
push
call
mov
push
pop
cmp
mov
push
xchg
lds
xchg
insb
pop
jo
iret
mov
imul
dec
pop
daa
aam
jecxz
mov
inc
in
sbb
test
insl
lcall
int
rolb
rolb
mov
jnp
inc
jg
cltd
mov
push
jmp
mov
adc
idivb
push
fnop
decl
inc
adc
dec
fs
adc
cmc
scas
outsl
pop
arpl
add
sub
test
hlt
lahf
cmp
sbb
ss
hlt
sar
push
mov
jmp
cmc
dec
movsb
cmp
and
sbb
cs
aas
mov
push
ficomps
out
and
inc
jno
cli
pusha
push
cmp
popa
dec
stos
cmp
or
lods
pop
xchg
sbb
push
lret
test
roll
sub
pop
and
jo
sub
inc
and
fstpt
adc
xchg
cmpb
add
pop
dec
mov
enter
out
adc
sub
jp
clc
ljmp
lcall
mov
add
jl
sub
inc
mov
pop
jp
mov
out
shlb
mov
adc
test
test
add
ljmp
mov
sub
addl
data16
aad
clc
or
push
jl
jle
test
stos
sub
pop
fdivs
inc
lock
pop
cmpsb
xor
pop
out
xor
fimull
dec
jno
ljmp
inc
mov
stc
int3
mov
aas
into
jmp
push
imul
add
stos
ret
xor
in
jge
pop
push
xchg
jae
call
push
jnp
cli
xchg
and
sub
rclb
add
fwait
mov
fbld
test
aas
cmp
in
push
dec
shlb
stos
cltd
out
int3
or
xchg
xchg
adc
movsl
adc
aam
mov
jbe
and
inc
sti
push
fistps
xor
push
jnp
push
dec
jle
js
addl
ret
mov
push
lods
adc
xchg
in
repnz
pop
shlb
out
inc
test
cmpl
xor
sbb
lods
test
mov
imul
push
sub
sbb
lret
xor
xchg
fwait
cld
xor
in
data16
mov
test
cmovbe
or
or
pop
addr16
jecxz
fidivrl
loope
in
pop
sub
adc
sbb
stos
jle
loope
in
dec
cli
jle
mov
flds
mov
push
imull
xchg
es
movsl
push
mov
push
mov
xchg
mov
sub
xchg
int
mov
jg
push
pushl
les
sbb
push
inc
call
adc
push
subb
or
scas
sub
aad
xchg
ds
test
mov
dec
ret
adc
cli
cwtl
shrl
aad
movb
pop
cwtl
aad
mov
mov
sbb
ret
jmp
aaa
inc
jbe
fucomp
outsl
gs
adc
incb
andb
sbb
push
jl
jnp
xchg
or
mov
or
andb
scas
fisttpll
call
ljmp
and
out
repz
mov
xchg
orl
fadd
jg
clc
scas
in
popa
and
pop
les
and
sbb
mov
jmp
adc
mov
inc
into
addr16
add
jno
dec
adc
scas
lock
xor
pop
lods
and
dec
dec
movsl
jbe
push
dec
test
lret
add
mov
stc
int
rorb
shlb
aam
sbb
clc
fcompl
xchg
fsubrs
out
ret
int
pop
pop
dec
push
xchg
xchg
xchg
push
aaa
sbb
loop
fs
lods
jno
loop
out
dec
imul
jne
mov
ret
test
cmc
cmp
pushf
inc
cmp
test
mov
xor
mov
xchg
int
add
sar
mov
and
scas
lea
ds
mov
and
mov
pop
fdivl
fldl
filds
mov
test
imul
cli
xor
push
movsl
rolb
pop
inc
mov
add
and
mov
dec
in
xchg
push
movsl
insb
fs
add
pop
lahf
out
lock
pop
sub
push
lea
jecxz
mov
int
cmp
out
mov
dec
push
dec
scas
add
or
pushf
dec
addr16
push
sbb
data16
mov
jecxz
adc
mov
xchg
cmp
sbb
add
inc
lcall
mov
push
stc
int3
gs
add
cmc
pop
inc
cli
and
ret
inc
pop
mov
cmp
out
in
popa
jge
mov
jbe
mov
xchg
lcall
int
shl
outsb
adc
xor
test
loopne
repnz
inc
pop
bound
ss
out
pop
mov
loope
and
sti
adc
jmp
xor
sub
jb
call
sarb
or
pop
jmp
aaa
adc
jp
push
mov
out
es
pop
nop
adc
xor
or
bound
dec
lcall
dec
and
xchg
adc
daa
dec
stc
pop
jae
cmp
int
movsl
xchg
jecxz
dec
aas
out
movsb
jnp
nop
aaa
enter
scas
dec
mov
xlat
xor
imul
imul
xchg
push
test
xor
jb
addr16
add
jmp
mov
jno
testb
addl
out
jo
lods
int3
pop
push
idivl
into
mov
add
int3
jl
mov
jge
fs
shl
xchg
in
fsubs
push
or
dec
adc
cmp
xchg
cs
push
stos
dec
bswap
jecxz
lahf
cmpsl
mov
in
jmp
stos
ss
in
inc
insb
iret
xchg
mov
pushf
popf
jns
mov
cs
adc
adc
testl
and
inc
mov
imul
xchg
out
jnp
sub
inc
and
ret
out
pop
rclb
mov
fdivl
popa
xlat
xor
add
or
jne
or
pop
cmp
mov
ror
test
mov
ja
int3
scas
cmpsl
sbb
loope
call
inc
ljmp
icebp
adc
or
jge
xchg
xchg
aad
mov
push
and
pop
sub
mov
mov
in
xchg
mov
fcomps
jbe
les
ljmp
mov
inc
mov
inc
test
pop
mov
imul
xorl
and
insl
ss
dec
sub
aaa
pop
mov
xchg
or
ret
pop
mov
pop
mov
dec
xchg
xchg
js
pop
cmp
in
adc
sbb
bound
hlt
inc
leave
test
insl
push
xor
test
out
leave
imul
adcl
cmp
push
pop
push
add
fucomip
outsb
lret
test
mov
sbb
les
pop
outsl
add
jno
aaa
cmpsl
shll
insb
dec
cmp
cmp
repnz
mov
mulb
fstps
mov
fistpll
pop
lret
pop
and
lea
push
icebp
popa
jmp
sub
out
push
cmc
idivl
out
cmpsl
aaa
sbb
test
pop
int
pop
mov
insl
cmp
push
inc
test
clc
push
out
pushf
xchg
sti
data16
jo
jecxz
inc
out
fnstenv
push
test
je
inc
cmpsb
and
packsswb
shlb
insl
cmp
shrl
rorl
xchg
xlat
fdivr
les
sub
test
iret
adcb
push
insb
xchg
xchg
mov
js
sub
xor
inc
lahf
shrb
or
sub
mov
lret
lcall
adc
sub
pop
jecxz
aad
pop
loope
or
out
mov
pop
xor
xchg
in
adc
popf
aam
into
inc
push
jne
out
mov
mov
push
cltd
scas
adc
fiadds
xchg
repz
xchg
sub
movb
xchg
dec
or
enter
mov
inc
insl
mov
popf
or
movsl
lret
outsl
mov
in
mov
mov
nop
rcr
iret
and
push
push
loope
fldcw
or
pop
add
sbb
mov
jge
pop
testl
sub
pop
daa
pop
mov
cli
mov
in
pop
loop
xchg
jne
clc
mov
outsb
mov
cmp
test
xor
movb
cmc
decb
cmp
adcl
xchg
ss
dec
mov
add
hlt
mov
gs
mov
cltd
add
mov
jne
pop
and
jb
fmull
inc
out
xor
push
xchg
loope
push
jl
lcall
jle
sbb
cli
clc
fwait
sub
stos
pop
cmp
scas
popf
movsl
ja
and
xchg
int
idivl
fisubrl
cmpsb
jno
mov
test
add
clc
sub
add
les
out
push
nop
lods
ret
movsb
icebp
push
mov
movsb
fstpl
lock
mov
out
icebp
and
pop
mov
nop
js
adc
pop
cmp
icebp
push
das
test
sub
jg
adc
fs
mov
sub
push
call
push
std
xlat
test
dec
adc
ljmp
aad
dec
sbb
jb
xor
flds
and
fwait
cli
push
shl
movl
pop
mov
xchg
scas
cli
pusha
inc
aas
icebp
push
lret
dec
mov
jae
insb
sbb
mov
sub
cmp
mov
sbb
addb
sbb
imul
sarl
push
dec
imul
xor
pusha
mov
sbb
call
xchg
data16
rclb
dec
pop
es
stos
icebp
out
fs
dec
mov
call
frstor
mov
ss
fsubrl
sub
xor
lods
adc
repnz
iret
jecxz
repnz
hlt
sbb
test
mov
fisubl
sbb
ja
xchg
cltd
scas
push
leave
bound
xsavec
mov
jo
shlb
fmuls
xor
jb
jl
pushf
cmpsl
rclb
inc
push
sbb
aad
out
repnz
pop
orl
xchg
fnstcw
jle
pop
repnz
aad
rolb
notl
imul
dec
push
por
adc
jbe
js
xor
add
cmc
add
jae
push
ja
xchg
inc
ficompl
cmp
test
cli
imul
repnz
jp
ja
inc
inc
test
mov
push
rcrb
push
jae
cld
outsl
pop
shrb
push
cli
jle
lret
sbb
imul
jmp
pop
adc
lock
test
sub
adc
scas
aaa
add
lahf
lcall
shl
pop
dec
mov
arpl
adc
push
add
jno
sub
inc
mov
lods
mov
inc
inc
loop
mov
shrl
aad
push
cld
out
lret
popa
mov
jns
or
cmp
cmp
jne
jg
mull
jne
cmpl
inc
mov
sub
cli
cmp
lock
in
rolb
jle
pop
adc
aam
sbb
mov
xchg
lret
inc
cmc
or
or
ficoms
sarl
hlt
leave
cmp
iret
mov
rcrb
dec
lret
outsl
xor
xlat
sub
icebp
outsb
mov
scas
inc
cmp
arpl
ja
adc
popa
sub
xchg
dec
pop
mov
or
cmp
jno
adc
mov
pop
mov
mov
fdiv
mov
mov
jp
cmp
pop
push
add
pop
stc
sub
stos
pop
jge
pop
cmp
mov
mov
int3
stos
mov
sub
cwtl
icebp
mov
xor
loope
fwait
cmp
pusha
leave
dec
or
ss
lret
and
jns
pop
cmp
js
push
push
xor
mov
mov
clc
cmp
sbb
divl
mov
mov
pop
in
dec
pushf
movsb
pop
ret
aam
cmpsl
mov
fiadds
sti
pop
sahf
mov
dec
pop
nop
or
pop
cli
fsubl
es
mov
gs
jmp
daa
xor
xor
sbbb
pop
xchg
into
das
xchg
jg
add
push
push
pop
add
mov
xor
mov
pop
inc
test
repnz
adc
push
mov
push
or
cli
inc
fwait
into
mov
shlb
xor
push
int3
sub
or
mov
pop
push
xchg
jle
ss
cmp
pushf
xchg
mov
xchg
out
shrb
lods
mov
jle
shll
and
adc
or
packsswb
pop
in
and
cmp
pop
and
sarb
xchg
into
lock
sahf
mov
jo
mov
dec
pop
mov
mov
mov
lret
into
xor
fndisi(8087
test
ljmp
movsb
out
sbb
mov
hlt
xchg
clc
sub
jmp
pop
insb
xchg
rorl
and
adc
packsswb
and
movl
add
or
push
sub
inc
ret
clc
push
sbb
fwait
adc
stos
loop
lock
scas
jbe
cmp
sbb
rcl
xchg
in
stos
pop
mov
cltd
push
and
es
push
dec
test
cmpb
fcom
adc
rcrb
mov
popa
adc
data16
sbb
and
pop
cld
cmp
or
es
insb
adc
jne
aad
cmp
jl
pop
jns
push
dec
mov
fidivl
lret
mov
push
lds
ret
lea
or
rclb
adc
nop
fistpl
idivl
xor
sub
sbb
stos
mov
sub
repnz
ds
rclb
repz
fcmovnb
mov
add
sbb
mov
je
mov
or
aas
mov
jmp
aad
fwait
xor
bound
add
jns
dec
mov
cli
scas
cli
cmc
ret
nop
xchg
cmp
orl
lcall
mov
aam
inc
lds
sti
xorb
lods
xor
fisubl
repnz
cmp
mov
mov
cs
sub
jp
cmp
or
fldcw
inc
inc
mov
scas
daa
jbe
sbb
add
push
cmp
xrelease
add
pushl
gs
jno
mov
add
and
sub
mov
cmp
in
es
insw
cmp
sub
btcl
out
je
scas
inc
xor
sbb
add
les
mov
fsub
clc
idivl
jecxz
push
push
imul
mov
mov
sbb
inc
push
aam
jmp
push
frstor
rcl
cwtl
cmp
leave
push
mov
addb
inc
mov
icebp
mov
popa
adc
fbstp
stos
movsb
cmp
fcoms
out
inc
push
out
cmp
fidivrl
jmp
lock
xor
jmp
enter
adc
or
xorl
mov
orl
mov
mov
sub
divps
adc
loope
ficoms
insb
enter
nop
inc
jne
mov
outsl
dec
adc
push
rol
mov
xchg
lret
jmp
pop
mov
enter
hlt
cmp
adc
dec
adc
fcomps
dec
lods
test
mov
dec
lds
adc
aam
push
clc
mov
xchg
repz
mov
loope
test
ja
pushf
filds
cmp
addr16
les
or
mov
or
jns
xor
nop
lret
aaa
andb
mov
scas
pusha
lea
loop
mov
sbb
cwtl
push
xchg
lcall
xchg
mov
adc
fimuls
in
pop
outsl
and
sub
in
add
sub
dec
push
addr16
mov
pop
inc
sbb
adc
xchg
and
popaw
notb
and
data16
arpl
lods
xchg
cmp
cmp
cmpsb
sub
loope
fcoms
fldl
dec
loopne
xchg
pop
je
loope
mov
and
inc
mov
inc
jp
addr16
mov
mulb
lcall
push
pop
test
sub
mov
pop
dec
imul
add
lahf
sub
mov
in
jg
xor
lds
push
mov
das
pop
add
add
ljmp
push
mov
inc
push
mov
les
add
insl
sbb
jb
lods
jmp
imul
stos
movsl
repnz
add
shrl
ret
mov
or
sub
dec
les
popa
inc
cmp
out
imul
rep
pop
add
mov
enter
int
xchg
test
out
adc
add
test
fwait
xchg
xchg
push
jns
fstl
jmp
jg
xchg
and
pushf
int3
dec
lock
aam
into
add
dec
clc
fstpl
jae
pop
push
cwtl
sbb
and
and
adc
js
jmp
mov
add
lret
adc
insb
jns
sbbb
arpl
ja
cmp
sub
cs
call
cmp
xor
push
mov
ror
xchg
imul
sub
dec
imul
decb
clc
idivb
daa
dec
xchg
test
mov
add
xchg
jno
iret
fistpll
pop
cld
ja
inc
stos
jp
jge
push
push
rorl
test
jae
jbe
loop
mov
ds
push
cwtl
mov
bound
mov
sub
pop
add
push
nop
or
push
js
out
inc
add
iret
mov
xchg
jae
and
jmp
cmpsb
pop
sbb
imul
repnz
popa
push
mov
movsl
inc
jle
and
jne
jns
dec
outsl
repz
sub
loopne
ret
fwait
pop
pop
dec
dec
scas
stos
sti
je
mov
mov
sbb
cmp
mov
mov
mov
pop
xchg
loopne
lock
in
inc
pop
fwait
scas
das
push
roll
jno
inc
jge
xchg
call
push
sbb
fwait
pushf
cmp
shrl
pusha
enter
addr16
inc
fnstcw
cmp
sub
pop
or
sub
ficompl
addb
mov
cmp
in
lods
in
test
jae
add
mov
cmpl
and
aad
stos
in
lods
ss
andl
pop
cwtl
push
dec
out
ret
scas
enter
loope
mov
cmp
loop
cmp
mov
out
js
sbb
lods
lods
popa
leave
push
inc
dec
ficoml
cmc
popf
dec
adc
daa
cmp
fsts
gs
fidivl
adc
sti
scas
ja
popf
mov
aas
popa
or
aas
cmc
add
inc
sub
adc
stos
pop
rorl
sbb
sbb
cs
test
enter
xor
inc
mov
jl
mov
das
mov
mov
in
jo
aad
test
push
jns
test
fiadds
lods
cmp
test
and
or
outsl
mov
push
or
mov
add
loopne
sub
sub
jns
mov
push
aas
jge
popa
mov
fiaddl
pop
xor
shrl
xor
les
mov
cmp
add
out
call
mov
pop
data16
int
movsb
mov
sbb
aam
mov
cmp
mov
xor
fndisi(8087
popa
dec
mov
call
sub
jns
iret
inc
or
push
int3
stos
cmp
pop
popa
jns
cmp
mov
and
cli
insl
or
lahf
test
xchg
cmp
js
movsl
mov
inc
shll
imulb
das
lods
push
sbb
lods
mov
pop
cmpsl
adc
fs
insl
sbb
idiv
lds
dec
mov
imul
test
jno
pop
push
or
mov
cs
or
mov
or
lea
or
sub
jne
dec
xor
push
pop
and
pop
adc
push
dec
pop
sub
dec
sbb
or
flds
in
mov
mov
dec
aam
fldt
lods
or
sahf
pusha
or
lcall
out
negb
imul
test
enter
fsub
ja
je
mov
pop
dec
in
jp
mov
popf
dec
push
jg
push
xchg
movsb
cwtl
and
pushf
popa
pop
add
pop
jp
jg
loop
mov
test
fbld
push
out
in
or
shlb
stos
icebp
xchg
xchg
pop
pop
mov
in
cli
pop
jmp
pop
mov
fisubl
inc
jno
loop
ret
call
cltd
inc
popa
orb
repnz
test
xor
pop
enter
orb
loopne
mov
xchg
inc
mov
cmp
fimuls
xor
stos
cltd
xor
jns
inc
call
in
jle
daa
jmp
sti
loopne
push
xchg
jno
sbb
mov
fs
imul
mov
xor
std
xchg
mov
std
mulb
lcall
adc
jp
push
dec
dec
pop
insb
pusha
sub
icebp
rol
andb
sub
jne
out
ret
into
loop
test
out
sbb
outsl
mov
add
lock
int3
pop
jbe
mov
sbb
push
cs
inc
cmpsb
mov
repz
je
xchg
push
push
cmp
arpl
mov
mov
jp
add
std
and
jo
mov
cmp
fnclex
les
pop
adc
adc
xorb
fldenv
je
fcmove
jo
xchg
gs
das
sbb
fisttpll
lods
das
pop
arpl
jge
mov
movd
inc
cmpb
les
push
push
mov
fs
in
fs
inc
es
xchg
or
aam
mov
rcl
mov
sub
ljmp
dec
int
arpl
push
mov
jl
jecxz
inc
and
negb
pop
mov
dec
lds
xor
bound
push
jp
or
int3
cmp
pop
inc
xchg
gs
dec
push
lahf
jmp
bound
xchg
xor
mov
shl
xor
outsl
pop
pop
ljmp
inc
fld
adc
xor
inc
pop
dec
fldenv
lar
jl
out
jle
and
adc
pop
or
mov
mov
hlt
sub
jecxz
pop
pop
mov
adc
mov
jl
xor
push
sub
dec
and
push
arpl
mov
arpl
loopne
sub
roll
xor
fsubrl
push
dec
mov
fsubl
repnz
lahf
mulps
adc
test
jbe
test
cs
scas
cmp
filds
adc
imul
jne
inc
mov
or
jb
ljmp
enter
imul
pusha
jg
xchg
lret
lcall
lret
xchg
shrl
xchg
xor
fwait
sti
insb
xor
push
or
and
jp
out
cmc
arpl
fstl
ret
mov
lret
and
out
sbb
push
pop
and
test
stc
mov
push
imul
push
inc
pop
xor
addr16
sub
sub
mov
sbb
ret
fsts
fwait
xchg
jle
int
jnp
add
or
xchg
push
fsub
adc
xor
ficoml
adc
fdivr
jns
jp
pop
sub
mov
es
je
jge
in
adc
xlat
fwait
and
mov
jle
fidivrl
and
xchg
in
iret
sub
sub
mov
dec
fisttpll
lods
fisttpll
mov
dec
xlat
stc
or
in
or
sub
movsl
xchg
sub
or
lret
or
repz
pop
jae
push
lcall
data16
das
sbb
hlt
and
packsswb
sbb
xor
inc
sub
push
sti
sub
ss
mov
xor
in
aas
add
scas
xor
mov
adc
andb
add
jbe
xchg
scas
xor
jl
mov
cmpsb
int3
fimull
fcoms
add
mov
add
dec
into
inc
inc
loopne
xchg
in
push
inc
and
test
pop
pushf
dec
sub
mov
adc
xor
mov
sahf
fs
mov
fcoms
mov
pop
pop
mov
and
sahf
xchg
xchg
inc
fistl
lret
leave
xor
mov
inc
cli
pop
dec
xor
mov
dec
inc
jnp
cltd
fildl
jge
inc
pop
out
stc
inc
rcll
and
jl
testl
xchg
xor
xchg
gs
jae
mov
negl
jb
imul
rolb
ss
lcall
mov
test
mov
loopne
mov
repz
rolb
xchg
mov
adc
nop
shrl
inc
scas
subl
add
sarb
daa
pop
leave
pop
in
push
in
jecxz
mov
movsb
push
test
stos
insb
imul
adc
sti
push
push
shrb
mov
adc
gs
mov
imul
push
stc
mov
scas
stos
or
and
icebp
mov
int3
adc
fwait
or
mov
inc
jbe
orb
repz
loopne
cltd
inc
push
fsubs
xchg
mov
or
fyl2xp1
out
and
push
pusha
mov
out
dec
and
adc
push
and
jmp
mov
div
push
stos
inc
or
xchg
adc
jbe
dec
xor
es
scas
in
bound
jno
popf
push
and
or
xchg
jl
dec
pop
sub
add
jp
sti
jno
inc
aad
or
popl
add
mov
xor
out
dec
bound
cmpsl
xor
leave
push
xchg
cld
xlat
es
repnz
sbb
mov
clc
movsb
mov
jmp
icebp
lock
ret
dec
jae
test
xchg
scas
adc
enter
imul
mov
mov
subb
inc
push
out
in
fstpl
in
sbb
out
pusha
jne
mov
sbb
adc
inc
xlat
jno
xchg
test
call
jg
out
dec
add
fldl
mov
inc
daa
mov
cli
xor
out
add
cli
and
in
mul
pop
and
sub
mov
xor
jmp
lret
dec
push
jnp
addb
cmc
xor
jp
sub
cmp
je
and
aam
and
dec
movsl
push
xchg
or
int
test
in
pop
pusha
mov
das
mov
fistl
mov
xchg
lock
xchg
push
or
jle
stc
fcmovne
sub
mov
push
out
sub
bound
push
in
jnp
add
lds
pop
adcl
lds
std
add
sub
mov
fsubl
shll
jg
in
jle
adc
dec
adc
mov
shll
cwtl
add
out
jl
xor
jge
or
and
cmc
jno
add
test
data16
std
push
loope
outsb
or
xchg
insl
ja
mov
icebp
in
icebp
adc
ret
lods
mov
push
jl
cli
scas
stos
cmp
mov
filds
jp
dec
loop
mov
mov
jne
loopne
and
dec
jecxz
je
shll
out
mov
adc
cmp
sbbb
xchg
push
lea
fistpll
aas
push
inc
xchg
int3
mov
add
mov
movsb
add
inc
fisubs
ljmp
jne
inc
sbb
push
mov
lretw
sbb
sbb
lret
lea
mov
subl
repz
pop
movsb
es
loop
xor
or
cltd
jmp
mov
or
fistl
push
sahf
dec
jge
or
leave
sti
cld
ds
in
clc
movsl
rcrl
dec
add
lret
insb
in
mov
fdivl
or
adc
mov
fiadds
lahf
lock
into
imul
ret
and
ficoml
aad
add
and
in
inc
or
xchg
loopne
adc
mov
fmul
push
leave
sbb
push
sbb
fidivl
dec
call
enter
push
mov
jp
rclb
sahf
mov
jmp
mov
cltd
fildl
jl
inc
insb
loope
or
sti
pop
dec
dec
ja
stos
mov
cmpsb
int3
iret
xchg
mov
and
and
stos
xor
cmpsb
jg
adc
pop
fisubl
adc
add
lock
iret
fsts
cwtl
inc
dec
ja
jp
inc
aas
inc
jbe
jne
fsubp
js
or
inc
cwtl
cld
cmp
inc
out
jge
sti
ret
stos
es
or
jmp
inc
test
bound
aad
das
jno
xor
rcll
call
dec
rorb
enter
stc
mov
inc
std
les
pop
ficoml
imul
fistpll
std
shrb
xchg
adc
out
in
or
sbb
lahf
mov
je
outsl
repnz
cmp
movsl
dec
test
lea
adc
or
repz
sub
sahf
and
pop
sbb
xor
lods
lods
sti
fwait
lds
rclb
xor
pop
pop
cli
adc
imul
xchg
sub
pop
jnp
pop
mov
js
fisttps
sbb
pop
jle
pushf
cmp
inc
aas
dec
push
ror
mov
xor
rolb
mov
jmp
sahf
dec
ret
jno
int
xor
js
mov
add
mov
xor
outsl
mov
xor
ja
cld
pop
and
or
add
pop
sbb
sbb
cmp
lcall
mov
push
push
and
and
or
sbb
out
insl
les
push
in
mov
and
cs
mov
and
mov
addr16
ljmp
lock
inc
in
xchg
xchg
jno
sub
clc
dec
inc
adc
mov
lock
or
movb
jmp
xchg
add
rcll
xchg
or
test
fstpt
outsl
sbb
xlat
xlat
xchg
js
repnz
inc
call
xchg
pop
xor
nop
in
lock
and
aad
lret
cmp
out
nop
jo
rclb
inc
jl
and
les
sti
sbb
movsb
js
movsl
cwtl
clc
int3
cmpsb
mov
dec
scas
popf
idivb
leave
mov
inc
jl
sub
adc
sbb
leave
push
pop
sbbb
in
xchg
pushf
test
je
leave
sbb
insl
faddp
inc
das
lods
scas
push
mov
mov
inc
stos
pushf
cmp
aaa
mov
inc
imulb
cmpsb
mov
enter
and
push
xchg
shll
inc
mov
mov
dec
cmpsb
insl
test
xchg
into
jae
test
mov
xor
sub
fcompl
decb
cmp
shll
int
xchg
das
sbb
jbe
lods
inc
sbb
adc
push
jmp
push
push
pop
enter
cmp
movsb
mov
sub
adc
jbe
mov
into
rcll
movsb
jge
adc
adc
xchg
fwait
stos
jb
push
adc
idivb
cmp
dec
push
pushf
dec
dec
xlat
inc
sub
imul
or
sub
jnp
inc
out
insb
lods
dec
daa
call
aas
fwait
jecxz
xchg
push
inc
fdivrs
cmp
test
mov
cmp
scas
hlt
fists
mov
sbb
cwtl
mov
jecxz
mov
inc
sbb
or
shlb
jbe
hlt
das
adc
pop
push
test
mov
jae
push
in
mov
mov
xchg
adc
mov
hlt
aaa
xchg
out
add
divps
subl
aas
mov
hlt
subb
or
mov
loop
inc
lcall
inc
and
call
nop
mov
push
jl
in
cmpsl
xor
xor
mov
inc
fmull
sub
shll
xchg
xchg
ljmp
add
mov
xchg
lock
test
push
cli
jnp
push
sub
mov
mov
mov
icebp
inc
mov
jmp
insb
test
imul
cli
lds
sub
xorb
jp
lret
call
lods
loope
mov
je
pop
popf
add
jne
mov
mov
push
out
xor
push
xchg
xchg
push
add
pop
inc
test
iret
loope
jg
or
mov
lock
pop
mov
xor
xor
mov
sub
inc
out
push
lret
out
xchg
jp
adc
mov
in
repz
dec
xor
js
dec
sub
nop
dec
jg
bound
sbb
adc
sbb
mov
jno
xor
bnd
data16
loop
fdivp
mov
leave
sub
sarl
enter
xor
xchg
stc
mov
aas
mov
pop
sbb
pusha
jle
das
cvtps2pi
jg
jnp
jmp
lods
and
insb
pushf
inc
hlt
cltd
mov
jmp
jbe
iret
scas
movsb
es
xor
mov
mov
movsb
sbb
fdivs
iret
or
fstl
ljmp
dec
mov
push
mov
mov
push
push
jno
test
push
fwait
dec
andb
sbb
xor
repnz
dec
dec
cmp
push
mov
mov
mov
test
into
add
sub
into
mov
add
jnp
std
add
daa
xor
sub
fadds
or
push
lock
sbb
mov
mov
pop
mov
outsb
pop
xchg
rcr
mov
fwait
roll
into
mov
outsl
inc
push
movsb
out
cmpsb
scas
xorps
inc
xchg
and
or
mov
fldt
and
sbb
mov
das
xor
testl
sarl
scas
and
sbb
jge
sub
xchg
in
lods
mov
mov
cld
jle
loopne
das
mov
cmc
imul
push
aad
push
aam
xorl
imul
in
mov
adc
and
cmp
das
test
es
test
xchg
inc
sbbl
lds
and
sar
and
mov
jno
pop
add
mov
pop
adc
shl
mov
arpl
dec
xchg
cltd
mov
cli
xor
mov
stos
daa
les
adc
lock
sub
movsb
test
mov
add
xlat
jl
pop
cmp
push
or
into
dec
in
jbe
daa
sub
shlb
dec
pop
add
mov
leave
xchg
sbb
dec
negl
es
pop
insl
cli
mov
insb
fistps
mov
and
faddl
xchg
out
ret
dec
aad
dec
pop
xor
push
lea
xor
jnp
cmp
ror
outsb
aam
sub
loopne
mov
pop
jno
dec
inc
loope
inc
mov
inc
mov
sahf
jbe
inc
pop
dec
jmp
shrl
push
mov
je
adc
adc
call
or
lcall
push
mov
pop
lds
add
bound
lods
hlt
mov
call
sub
inc
idivl
xor
mov
mov
bnd
cmp
dec
or
test
dec
int
addr16
jno
repz
add
dec
das
fs
push
lods
loopne
cmc
lods
inc
push
cmpb
rcll
jge
jne
push
and
gs
lret
add
pop
bound
push
test
dec
rcll
xchg
jo
jg
push
jne
das
testb
mov
xchg
clc
movsb
mov
pop
add
add
insl
sbb
repz
dec
pop
fmulp
push
orb
insb
sti
push
out
je
jns
xlat
jmp
mov
fidivrl
dec
cmp
aam
mov
add
mov
hlt
xchg
repnz
jle
push
and
xorb
xchg
cli
cmc
jle
push
mov
inc
lcall
pop
xchg
jg
sti
dec
xor
xor
jge
aas
loope
data16
jne
cmp
pop
push
mov
or
stos
mov
push
loope
push
stos
negb
daa
lcall
loope
insb
jg
mov
idivb
jp
jecxz
push
pop
push
xrelease
xor
jno
fs
dec
cmp
daa
arpl
mov
test
orb
xchg
out
sti
icebp
imul
mov
xchg
jmp
inc
out
mov
mov
out
add
mov
push
nop
pop
std
loop
mov
inc
icebp
stos
scas
fwait
xor
dec
cmp
movb
pusha
in
xor
inc
ret
orl
xor
je
popf
mov
mov
inc
jl
add
jl
pop
and
repnz
cld
mov
cmp
dec
sbb
in
push
cmc
addr16
adc
jmp
mov
leave
and
mov
in
cmc
push
mov
push
test
fisubl
adc
jbe
jnp
sbb
leave
les
iret
jmp
out
jle
mov
scas
cwtl
push
xor
xchg
movl
popa
ja
mov
jns
pop
add
int3
addl
ret
push
jnp
pop
popf
mov
sarl
jo
lods
pop
data16
sbb
pop
push
mov
dec
fcmove
xor
ja
and
addl
push
xchg
fdiv
mov
aas
push
cmp
xor
sti
lahf
pop
fdivp
push
and
icebp
mov
xchg
mov
mov
pop
subl
push
jecxz
push
dec
cmp
js
or
mov
icebp
pop
imul
sbb
lea
out
lahf
int
mov
and
mov
daa
pop
pop
je
dec
sbb
into
enter
jb
add
push
xchg
fimull
lret
xchg
mov
fstps
in
adc
push
mov
leave
cs
jmp
cltd
sub
xchg
repz
loopne
enter
mov
push
jl
shll
inc
xchg
xlat
push
daa
mov
test
iret
loope
test
lahf
iret
cli
ljmp
ds
adc
rorl
sbb
ds
adc
add
sub
out
jns
and
push
cld
subl
lock
xlat
negb
dec
test
inc
pop
sarl
push
mov
sbb
fsubrl
jae
mov
mov
addb
adc
or
pop
aam
cmp
test
out
call
insb
inc
adc
cmpsl
pop
add
dec
push
adc
xchg
xor
sub
les
orb
jg
shlb
pop
xchg
mov
cwtl
insl
mov
xor
push
test
xor
jg
xor
psrlw
push
push
mov
inc
jne
or
mov
iret
pop
fisubrs
test
stc
adc
pop
xchg
jge
inc
clc
or
jb
xchg
dec
push
cmp
fadd
pop
jmp
sbb
pop
shrl
mov
adc
inc
or
mov
mov
mov
push
int3
decb
lods
dec
movsl
in
loopne
push
leave
call
dec
mov
mov
xchg
sub
cmpsl
dec
or
int3
dec
icebp
cmpsb
xchg
push
pop
add
js
or
es
jne
mov
outsb
stos
mov
ret
scas
pop
out
push
xor
inc
aaa
push
xchg
ja
sub
push
sub
mov
and
jmp
es
dec
cmp
pop
mov
stos
jle
or
test
mov
loope
or
adc
nop
arpl
testl
pusha
xor
loop
inc
mov
negl
inc
xchg
and
pop
movl
bound
iret
push
jnp
fmull
add
push
add
roll
adc
jb
arpl
mov
mov
lock
add
push
adc
fdecstp
sub
lods
cmc
push
ret
jb
fidivl
dec
push
shrb
in
popf
fsubrs
popa
ljmp
pop
addr16
add
js
lds
cmc
pop
out
adc
pop
push
sbb
lcall
xor
cmovns
das
fistpl
fnstenv
inc
cmp
jo
clc
adc
push
call
ja
pop
dec
ret
xor
mov
out
add
xchg
ljmp
push
pop
xor
push
adc
imul
mov
add
cltd
outsb
mov
jae
sub
hlt
hlt
jb
mov
inc
iret
pop
faddl
jp
ljmp
sbb
ret
pop
and
push
aad
push
sbb
inc
push
jl
mov
lret
and
pop
jbe
scas
xchg
dec
adc
lock
mov
scas
cwtl
pusha
jno
or
jl
sbb
jbe
add
gs
aas
xlat
leave
add
mov
mov
arpl
movsl
dec
add
sbb
push
mov
and
pop
mov
mov
jg
sarb
fsts
sub
in
jns
cld
xchg
insb
adc
mov
clc
or
enter
xchg
mov
add
das
cmp
daa
jnp
jmp
lods
sub
xchg
or
add
jle
pop
jg
push
mov
adc
or
mov
add
arpl
cmpsb
cmpsb
scas
in
in
pop
jp
das
aad
mov
pop
scas
jbe
dec
adc
jp
loope
mov
in
adc
adc
scas
enter
jns
mov
std
jle
push
imul
leave
jge
es
insl
insl
and
hlt
sub
sub
je
adc
pop
or
or
push
call
pop
nop
aaa
rolb
cmpsb
mov
xchg
loopne,pn
mov
sbb
push
xor
aad
jo
cmp
sarl
rcrb
xor
scas
scas
jb
hlt
and
call
pop
stc
ds
pop
xor
es
xor
stc
sub
pop
push
xchg
rclb
imul
inc
mov
mov
adc
enter
mov
mov
xor
push
mov
push
mov
dec
out
sahf
push
jb
jp
push
rcrb
jecxz
testl
mov
stos
movsl
incb
xor
mov
lds
iret
sbb
fmulp
pop
es
add
js
ss
call
cmpsb
inc
add
or
mov
fidivl
or
mov
nop
xor
xor
pop
int3
or
pushf
sbb
push
inc
sub
fwait
pushf
fadd
das
mov
sub
lahf
iret
pop
dec
inc
push
sarb
add
inc
enter
add
inc
inc
xor
sti
xchg
pop
cmp
pop
notl
mov
xchg
adcl
in
dec
lock
xor
xchg
dec
push
lods
jnp
cmp
mov
outsb
mov
dec
pop
mov
push
mov
sbb
loop
sbb
iret
jns
push
xor
mov
mov
xor
pop
pop
gs
mov
popf
sub
jge
mov
enter
mov
lret
mov
xor
iret
ja
and
fucom
push
sarl
jl
push
imul
or
cmpsl
sub
gs
xchg
cmp
je
fstpt
pop
sahf
jle
and
inc
lcall
insb
cld
movsl
inc
push
loop
sti
mov
outsl
push
push
mov
das
push
cld
push
push
lods
jnp
cmc
call
add
fs
cltd
incb
xchg
sub
and
inc
xor
bound
hlt
sbb
pop
xchg
clc
jae
dec
out
fstpl
and
push
punpckhwd
cmp
mov
inc
add
rcl
test
cmp
pop
and
pop
adc
shll
cs
push
fcoml
scas
sbb
test
shrb
jecxz
sub
lea
xchg
movsl
in
lods
adc
lock
ror
mov
jp
mov
gs
imul
int
mov
iret
jno
dec
jae
dec
scas
adc
test
mov
xor
stos
lock
push
ret
jmp
add
xchg
or
fdivp
push
cltd
mov
movsb
fistpl
cli
insl
and
lahf
cmp
mov
insl
das
add
sub
sbb
cmp
inc
mov
mov
mov
shll
add
dec
movsb
pop
arpl
popa
sbb
xor
pusha
pop
outsb
lret
icebp
outsb
cmpsb
inc
jo
push
int
push
sub
imul
xor
dec
xchg
jnp
shrb
stc
pop
addr16
mov
fwait
jbe
adc
adc
setae
adc
mov
in
or
nop
or
cwtl
and
outsb
and
ljmp
test
adc
jecxz
mov
mov
mov
xchg
mov
clc
lock
enter
push
inc
gs
clc
inc
faddl
cwtl
pusha
lods
enter
inc
pop
in
ja
sahf
cmpsb
call
rolb
or
pop
aam
notl
scas
xor
lds
in
nop
ss
mov
sub
push
loope
jae
sub
cltd
xchg
cmp
in
incl
stos
mov
cmpsb
sbb
popa
rcll
mov
add
sbb
aaa
pop
fimuls
push
mov
mov
dec
cmpsl
mov
cmc
ret
fistpll
ficomps
dec
jns
jge
mov
cmpsl
lds
cld
inc
mov
or
mov
fistpll
cld
decb
add
lcall
mov
repz
or
mov
xor
or
or
sub
gs
cmp
mov
fcom
or
aaa
push
and
push
das
insl
adc
in
xor
pop
push
lret
fistpl
in
or
jl
xchg
insl
fsts
cld
jnp
sub
mov
jg
shl
xor
dec
clc
adc
test
sahf
sbb
call
cmp
imul
adc
xorl
inc
pop
sbb
call
xor
stc
gs
inc
inc
cmp
xor
or
fwait
adc
jae
inc
loopne
mov
inc
out
push
shlb
sbb
or
cmpsl
or
data16
dec
mov
repz
aaa
mov
sbb
lcall
mov
sub
les
pop
xchg
loopne
shrl
adc
mov
iret
push
dec
xchg
cmp
lcall
popa
js
mov
xchg
shl
stos
inc
loope
push
jl
xchg
jb
mov
or
sti
scas
jle
sbb
push
insb
xchg
cmpsb
pop
lahf
mov
notb
ret
jns
push
push
icebp
icebp
cmc
and
movl
andb
test
ficoml
xchg
inc
push
dec
into
cltd
movsb
xchg
push
arpl
pop
aaa
push
in
outsb
mov
sti
ljmp
js
sub
rolb
xor
in
int3
test
fisubrs
lds
shlb
push
and
jnp
adc
pop
mov
mov
pop
imul
xor
daa
loopne
push
rolb
inc
aas
leave
aaa
or
cmp
inc
cmc
iret
jne
bound
add
or
push
test
add
cmc
xor
lret
in
push
psadbw
and
mov
out
cmp
mov
popf
rorl
mov
mov
jecxz
dec
jne
cmp
sarb
je
sub
loop
sbb
sub
in
dec
jl
outsl
or
jg
jne
mov
pop
hlt
jb
inc
test
xchg
jno
inc
sbb
les
sub
sbb
in
or
sub
out
rorb
add
jle
push
mulb
addl
mov
pop
add
stc
mov
jl
jnp
rorb
push
mov
pop
cmpsl
call
mov
and
movsb
imul
pop
int3
imul
and
dec
scas
mov
xchg
lahf
hlt
in
inc
out
add
push
loop
icebp
ret
mov
std
mov
aaa
jl,pt
push
sbb
fisttps
adc
add
sti
into
addr16
cmp
ja
xchg
dec
loop
sbb
cld
pop
bound
lret
int
push
push
mov
arpl
jl
aas
xchg
es
xor
adc
hlt
in
mov
jecxz
je
jle
and
lret
pop
push
or
and
cmp
movsb
jae
inc
movl
sub
mov
lods
nop
popa
sbb
es
inc
bound
push
test
test
adc
xchg
mov
pusha
jne
jns
les
js
fld
jbe,pn
push
xchg
dec
mov
xor
lcall
inc
dec
add
bound
stc
outsl
loope
or
test
ja
inc
je
mov
mov
neg
nop
stc
std
xchg
out
push
xchg
shlb
inc
movsb
cmpsl
out
lret
icebp
add
pop
dec
jae
push
cmpsb
pop
xor
jo
push
adcb
outsb
xchg
jge
dec
ss
jno
sbb
mov
mov
jl
aam
notb
sbb
leave
fsub
or
iret
push
sti
xor
jp,pn
mov
and
pop
mov
inc
test
sbb
xchg
inc
add
scas
pop
push
xor
jns
add
pop
insb
push
push
outsl
pop
loopne
cmp
jbe
sbb
and
adc
jno
in
xchg
push
pop
push
push
mov
in
jmp
cli
movb
push
add
inc
sub
popf
pop
cmpsb
or
aam
mov
sub
rolb
pop
cld
outsl
imul
sub
push
jno
mov
insb
push
xchg
and
cmp
test
iret
mov
pop
andl
out
xchg
push
les
jns
xlat
orl
rcll
pusha
decb
inc
fists
push
and
std
cmp
subb
or
lret
aam
sti
push
insl
iret
std
mov
jl
xchg
fs
push
popa
stos
dec
ljmp
in
add
pop
jmpw
push
popf
mov
and
adc
js
jecxz
fldenv
or
xor
add
or
cmp
outsb
imul
pop
cmp
mov
push
cmp
sub
pop
popf
arpl
cmpsb
mov
ja
and
or
scas
add
or
mov
loop
cmpsl
xchg
xchg
inc
mov
or
lret
test
ja
dec
jbe
test
xor
and
push
sti
roll
data16
mov
mov
or
dec
popf
jbe
ja
jmp
movsl
stos
add
clc
fsubr
pop
loope
data16
fs
popf
mov
add
sbb
arpl
mov
sbb
push
ret
stos
scas
dec
mov
popa
mov
mov
sub
mov
icebp
arpl
fwait
arpl
ds
jle
lods
inc
into
add
pop
adc
adc
jle
jmp
xor
bound
nop
sbb
daa
xchg
mov
mov
pop
lret
pop
jecxz
lods
mov
shrb
jbe
pushf
and
mov
daa
add
ret
std
loop
add
push
sbb
fldt
and
arpl
xchg
out
push
or
mov
imul
push
daa
fdivs
inc
popa
jae
ja
xor
int3
xchg
out
ret
cmp
es
sahf
dec
fidivl
inc
push
lea
inc
jb
addr16
push
jecxz
sbb
lcall
mov
push
or
cltd
inc
push
jl
inc
lahf
push
out
setae
sahf
out
popa
pushf
mov
loopne
pop
dec
nop
ja
out
in
fistps
lods
dec
sarb
int
aad
add
sbb
xor
std
add
jge
lea
or
in
sub
jmp
push
je
jnp
in
sbb
test
sbb
mov
push
pop
jp
xor
push
jg
lods
mov
popa
js
pushf
int
push
fldl
aam
stc
ds
testl
pop
outsl
adc
lahf
inc
dec
out
imul
je
mov
sub
add
out
iret
or
outsl
mov
pop
sahf
outsb
fnstenv
or
out
dec
out
lcall
addr16
pop
mov
out
movsl
incb
arpl
ret
adc
in
sbb
rcll
lea
test
sub
bnd
mov
inc
das
push
push
lret
and
fisttpl
mov
xchg
xor
pop
cltd
ret
pusha
or
xchg
imul
outsl
cmpsl
fwait
scas
add
add
jnp
and
jmp
out
and
pop
mov
stos
insl
int3
cwtl
adc
lods
push
add
rorb
call
pop
dec
negb
ss
popa
mov
or
cmp
pop
push
xlat
sbb
xor
outsl
dec
lock
mov
ret
xor
sbb
pushf
sub
pop
add
aaa
into
push
out
shll
daa
inc
pop
xlat
popl
pop
xchg
xor
jns
mov
loop
sahf
mov
xor
insl
sbb
push
xor
ljmp
push
mov
dec
popa
cltd
pusha
pop
repz
test
adc
in
pop
outsl
mov
fdivrs
xor
ja
mov
je
stos
push
mov
pop
mov
xorb
sbb
out
repnz
pop
jb
dec
push
out
adc
inc
icebp
aam
mov
fxch
dec
inc
jns
fdivl
push
xchg
mov
aad
int3
rcrb
dec
push
dec
mov
jge
pusha
out
cmp
adc
idiv
in
mov
xor
sub
or
add
test
xchg
dec
mov
inc
mov
lea
js
mov
push
jge
or
and
and
cmp
popa
fisubrs
xchg
inc
insl
push
xchg
es
mov
loope
mul
outsb
pop
or
aaa
pop
lret
bound
ret
fistl
mov
cwtl
cmp
jnp
jmp
dec
rcll
mov
push
push
xchg
mull
aaa
dec
aaa
ja
scas
ret
cmpl
mov
enter
mov
adc
mov
loopne
popa
inc
pop
pusha
stos
xor
sub
pop
out
push
inc
std
xchg
stos
stos
jge
xchg
leave
adc
test
scas
ljmp
ds
lret
out
xchg
xchg
push
adc
cs
add
mov
cmp
ret
lcall
mov
xorb
xor
jne
mov
insb
aad
outsb
test
scas
and
lret
push
dec
adc
stos
or
enter
aas
flds
add
mov
pop
in
xor
lods
dec
js
loope
out
sub
sub
jne
ds
data16
pusha
jge
je
pop
mov
icebp
stos
add
push
push
mov
add
imul
cmc
sarb
pop
ret
push
and
bound
mov
cltd
xor
popf
and
xlat
repz
iret
stos
fdivr
lds
or
push
xor
push
adc
mov
in
mov
cmp
lret
jne
lret
jnp
jp
aad
mov
xor
xchg
test
mov
jbe
in
test
or
mov
xchg
fbld
shll
cs
inc
sub
pop
mov
fadd
loop
mov
les
inc
mul
lock
test
sti
xor
mov
fsub
fcoms
lret
push
cltd
mov
pop
shl
pop
and
cld
stos
hlt
in
mov
dec
push
adc
out
inc
mov
cmp
adc
inc
mov
xor
sub
fidivrl
imul
pop
inc
add
add
shlb
movsb
sarl
pop
or
cmpb
mov
es
out
andl
adc
dec
xchg
out
jo
sbb
rclb
stc
mov
bound
mov
out
insl
addr16
sub
int
fstpl
or
jbe
mov
out
mov
push
mov
add
mov
nop
cmp
ss
mov
inc
sti
jp
push
outsb
mov
adc
mov
xchg
ss
lock
and
daa
mov
fcomps
bound
xchg
pushf
out
nop
das
loope
inc
arpl
xchg
cli
lret
mov
lea
push
inc
dec
pop
lcall
lret
loop
lock
subb
jl
jge
ja
pop
loop
pushf
outsb
push
xor
mov
inc
lods
xchg
jne
scas
stos
mov
cmp
jnp
in
sub
push
mov
or
xor
mov
pop
jb
dec
outsb
cmp
stc
ja
and
movsl
sti
ja
inc
addr16
lret
inc
mov
or
xchg
loop
enter
mov
pop
xor
fs
enter
mov
fisubs
xchg
cmp
mov
es
lods
pusha
arpl
cli
or
mov
sub
cmpsl
adc
aaa
lahf
mov
push
stos
scas
mov
mov
mov
or
call
lods
fnstsw
repz
clc
adc
sti
das
in
enter
push
rcrl
lock
lock
data16
mov
adc
out
add
inc
dec
dec
imul
mov
push
xchg
nop
xchg
pop
cmpsb
icebp
movsl
add
mov
mov
call
nop
mov
outsl
xor
lds
jg
xchg
decl
mov
test
daa
and
mov
std
aas
lock
out
movsl
push
fildl
lret
imul
in
and
movsb
jno
sub
mov
les
cmp
test
push
or
push
nop
aaa
push
cmp
mov
ds
cmp
jl
cmp
cld
shrb
lcall
out
out
lds
and
jo
lret
daa
cli
mov
inc
outsl
or
and
ljmp
dec
out
mov
popf
sahf
dec
fwait
jmp
cmp
pushf
xor
pop
repnz
aas
xchg
add
mov
adc
push
xchg
push
jns
dec
xor
ret
cli
clc
out
loope
pop
int
pop
inc
xor
mov
mov
popf
mov
stos
movsb
push
icebp
inc
rclb
fisubrs
mov
jecxz
push
jmp
pop
mov
inc
lcall
fstl
push
in
lret
in
repnz
imul
into
adc
test
int3
test
add
mov
jo
add
adc
dec
push
push
lea
scas
test
add
repnz
loope
shlb
aad
xor
cmp
jge
pop
pop
pop
sti
into
inc
insb
sub
push
shll
mov
out
lret
lahf
ret
sub
push
in
add
test
jg
cmp
add
dec
inc
mov
add
xor
cld
test
xchg
int
into
enter
and
lcall
insb
sarl
repnz
test
add
or
jge
and
cs
jp
cmpsb
sub
adc
push
pop
xor
mov
pop
loope
jns
gs
stos
sub
clc
stos
pushf
push
mov
dec
xchg
in
adc
mov
add
adc
sub
test
imul
inc
xor
sbb
xlat
push
add
jp
xchg
dec
xor
loope
fwait
mov
movl
mov
mov
aaa
jnp
xchg
push
jbe
and
movsb
aaa
xchg
cmpxchg
into
cmpsl
pop
mov
repz
inc
pusha
daa
inc
push
push
aaa
lcall
mov
orl
fisubs
mov
insl
push
je
cmpsb
sub
test
inc
xchg
adc
faddl
rcl
fstl
aad
lock
cmpsl
jns
daa
jb
loop
repnz
sti
push
pop
es
push
pushf
sbbl
les
test
jl
loopne
aad
xchg
sbb
xchg
in
mov
fadds
hlt
or
jecxz
ss
es
mov
inc
divb
mov
lods
fadds
push
aas
jle
push
or
sub
jl
flds
cmpsl
negl
stos
call
fdivrp
incb
or
pop
adc
test
sbb
into
mov
mov
nop
cmp
jo
fldt
sbb
cs
nop
hlt
add
ss
outsl
jbe
repz
iret
nop
inc
adcb
pop
cld
xor
push
aas
xchg
call
mov
sub
stos
pop
addb
dec
lods
xchg
mov
xor
loopne
pop
outsl
test
lods
inc
cs
mov
mov
or
lods
in
lds
shll
dec
xchg
xchg
jbe
sti
out
jl
mov
ss
pop
jmp
cmp
xchg
lock
andl
gs
mov
mulb
push
and
fwait
xor
mov
xchg
and
mov
and
andl
push
rcl
inc
cmc
clc
adc
adc
fistpl
mov
hlt
lahf
lods
xchg
sahf
test
or
jb
sbb
pop
or
xor
fadds
sbbl
or
mov
sbb
mov
sub
mov
imul
jnp
sub
ficompl
and
mov
xor
enter
adc
xchg
xor
push
jecxz
mov
dec
inc
cmp
inc
or
test
jmp
xchg
cmp
jns
lods
xchg
fstpt
inc
sub
mov
pop
pop
jp
cmp
xlat
push
cmp
sub
cld
outsb
gs
js
pop
lret
mov
in
imul
jp
loopne
xor
push
xchg
nop
arpl
push
mov
xor
pop
dec
sub
mov
std
jmp
sub
jecxz
mov
or
and
mov
cmovs
out
daa
cmp
xchg
sub
or
mov
mov
inc
sub
out
lcall
push
jecxz
notb
popf
imul
pop
test
push
icebp
dec
andb
add
repz
loopne
xchg
hlt
or
xchg
cmp
ret
inc
pop
xlat
pop
pop
jno
es
loop
call
xor
stos
cmp
cld
lods
lods
sub
push
pop
pop
pop
jmp
xchg
outsl
xor
xchg
pop
stos
cmp
movsb
pop
pop
xchg
in
lcall
enter
jle
icebp
lods
jnp
je
mov
mov
ret
xchg
vmovntps
fsin
fisubs
pop
leave
push
ds
dec
sub
pop
das
xchg
cmp
popa
and
ljmp
lret
stos
or
jg
fnsave
repz
lret
xchg
jbe
fnsetpm(287
ss
push
addb
jecxz
push
and
test
mov
xor
out
repz
push
std
popf
or
pusha
rclb
dec
loop
je
dec
jecxz
sbb
lds
sahf
jecxz
mov
es
lods
scas
inc
ds
push
jecxz
jge
jmp
pop
mov
ret
xlat
pop
dec
push
jge
std
lods
fildll
inc
int3
add
jo
and
xchg
outsl
add
sub
push
xchg
xor
and
stos
cmc
cld
fbstp
mov
sbb
push
add
sbb
bound
sbb
ret
xor
mov
rorb
hlt
xchg
outsb
cmpsl
or
jns
jbe
add
jae
push
and
std
aas
sub
pusha
jle
dec
out
lds
xchg
dec
and
mov
jg
dec
repnz
sbb
fwait
dec
jl
aam
sub
xor
mov
cmpb
jle
cmp
jl
stc
sub
sbb
mov
jg
inc
lock
mov
fcoml
subl
mov
lea
fs
insb
mov
push
sbb
aaa
push
xor
jne
fstp
cmp
cmc
cmp
pop
outsl
jmp
mov
adc
arpl
adc
dec
lret
adc
push
lods
cwtl
movsb
sbb
arpl
mov
fstp
stc
sar
repnz
xor
dec
jge
jb
mov
dec
fimuls
xor
mov
pushf
out
fcomp
mov
push
and
cmp
lea
add
pop
fidivl
out
adc
jecxz
outsl
or
jp
cltd
and
ficoms
das
push
shll
sub
outsl
test
dec
into
pop
mov
imul
pop
sahf
mov
mov
lret
add
pop
cmpsb
movsl
mov
sub
incb
sub
pop
cld
inc
lods
repnz
and
jle
pushf
mov
clc
dec
jno
call
mov
pop
pop
xor
dec
sbb
mov
ficoml
jns
arpl
in
packsswb
inc
pop
mov
and
je
movups
roll
fsubrl
dec
jp
push
in
add
inc
push
stos
and
inc
out
push
xchg
ret
movsb
dec
repnz
jg
push
sub
fdivs
cs
adc
adc
mov
fsubr
aam
pop
inc
and
cmp
in
mov
cmp
test
adc
out
or
insl
pop
ljmp
fstl
jnp
ljmp
dec
jecxz
flds
cmp
shll
xchg
fs
xor
fwait
jno
sub
mov
inc
cli
add
rorb
pop
cmp
mov
and
xlat
js
and
imul
stc
ljmp
xchg
out
cmpsb
out
cmpsb
insl
ffree
and
inc
add
jnp
xchg
insl
repz
inc
test
pop
cld
pop
adc
test
stc
sub
incb
ds
cli
or
dec
cmp
bound
xchg
stos
out
cltd
and
inc
adc
movsl
xchg
sbb
jnp
ja
pop
pop
movsb
adc
xor
sahf
dec
mov
imul
orps
jnp
inc
aad
cmc
les
sarb
or
repz
rcl
rcl
push
sub
push
jl
push
les
xor
lahf
cmpsl
push
xor
lcall
inc
lea
adc
inc
mov
mov
arpl
xchg
pushf
and
sub
push
inc
inc
mov
jge
inc
sub
xchg
test
push
dec
shrb
lods
cmp
out
subl
daa
cmp
out
clc
mov
jae
cltd
in
mov
or
sbb
inc
lret
sti
movsl
cld
mov
dec
fbstp
fistpl
adc
call
fbstp
inc
lock
fldt
daa
push
aas
mov
mov
xchg
jmp
jle
add
adc
iret
add
mov
jge
pop
add
mov
inc
stos
push
aas
xchg
std
mov
shr
adc
dec
mov
pop
jmp
js
jb
iret
lret
out
sbb
add
ss
imul
aam
pop
ja
jnp
mov
lcall
adc
testb
ret
faddl
inc
dec
out
gs
push
mov
repnz
popa
mov
inc
push
ret
pop
orl
xchg
das
inc
rolb
cli
rorl
jp
sahf
fwait
bound
mov
mov
mov
xor
das
inc
movsl
or
mov
fwait
out
imul
or
jle
lods
mov
jg
xchg
inc
aaa
push
sub
sub
mov
scas
sbb
mov
and
add
aas
xchg
outsb
jmp
push
or
lods
stos
inc
call
fdivl
pop
cltd
xlat
push
pushf
in
pop
or
out
or
xchg
cwtl
idivb
cld
iret
clc
dec
bound
sti
pushf
icebp
and
icebp
cmp
or
loope
pop
jbe
or
in
mov
or
faddl
xchg
ja
leave
or
xchg
mov
inc
aad
scas
add
jmp
or
mov
mov
or
cltd
ss
in
fiadds
mov
pop
pushw
fidivs
lahf
cmp
testl
insl
add
add
sub
inc
pop
loope
xlat
inc
mov
jb
test
pop
in
adc
and
pop
push
test
jnp
mov
hlt
fisttpl
sbb
cwtl
or
inc
jns
lahf
fistps
gs
sbb
and
dec
pusha
jp
stos
add
rcl
into
sbb
arpl
push
and
sub
bnd
in
adcb
pushf
fcmove
arpl
mov
lret
or
pop
pop
mov
insb
incl
jp
not
lock
and
jmp
adc
dec
sbbl
adcb
icebp
mov
push
push
aas
sub
sbbl
pushf
dec
stc
adc
fiadds
aaa
aas
test
mov
pop
sti
pop
jl
sub
in
pusha
lods
dec
inc
mov
and
insl
mov
mov
inc
into
sbb
or
jecxz
imulb
fwait
mov
lods
bound
add
add
in
sbb
imull
mov
inc
sahf
mov
int
gs
pop
jge
test
or
xor
add
fnsave
jl
lcall
mov
pop
enter
mov
fadds
inc
call
mov
xchg
enter
mov
pop
jo
mov
push
shlb
imul
loop
add
mov
jl
imul
in
loop
mov
pop
enter
dec
ret
pop
jle
je
pop
icebp
rcrb
mov
xlat
sbb
pop
push
dec
sub
pop
test
sbb
ret
push
ss
sti
stos
sbb
mov
xor
inc
sub
xchg
or
jmp
adc
subl
pushf
test
sub
sub
dec
push
shl
sub
pop
enter
mov
pop
enter
xchg
push
lea
fildl
lahf
xchg
mov
gs
imul
dec
jb
repz
pop
jecxz
in
sub
push
inc
add
rcrl
add
stos
add
cmp
shrb
dec
fbstp
pop
loop
add
in
gs
push
adc
icebp
pop
arpl
es
cmp
xchg
insl
mov
cmp
adc
jno
jl
mov
fldt
imul
push
outsl
inc
cmova
xchg
mov
jg
mov
or
roll
js
pop
cmpl
mov
sbb
sub
or
pop
inc
sub
and
push
ljmp
pop
or
lret
addl
int3
pop
sbb
jle
test
int3
mov
and
jecxz
mov
cmp
int
pop
outsb
adc
add
rcll
xlat
cmp
add
push
pop
jnp
pop
scas
mov
or
pop
movsl
xchg
dec
xchg
add
or
mov
push
mov
dec
test
mov
ret
add
sub
mov
xchg
sar
ljmp
addl
push
sub
mov
test
popf
xor
jmp
dec
out
xchg
fisttps
je
mov
xor
jge
sbb
movsb
dec
lds
jbe
jl
pop
push
sub
fwait
pop
xlat
movsb
hlt
ds
mov
rcrl
mov
test
lret
mov
mov
or
mov
scas
add
movsb
mov
ret
ja
mov
outsb
test
js
jb
ret
push
push
push
fs
mov
mov
sub
fwait
or
repz
add
data16
mov
ret
mov
ja
insl
popf
sarl
mov
pop
test
jne
and
push
push
sub
xchg
in
enter
lods
js
fwait
mov
das
lret
jno
fadds
pop
daa
loopne
mov
popf
in
sub
int3
cmc
xchg
dec
aaa
cmc
lds
jecxz
movsl
dec
loop
inc
mov
hlt
xor
xchg
jge
mov
loop
jb
and
jecxz
movsb
pop
lret
sub
and
pop
pop
mov
in
inc
cmp
inc
or
test
js
push
outsb
addr16
insb
xchg
xor
aad
cmpsb
ret
adc
pop
push
rcr
fcmovu
stc
loope
es
or
mov
add
push
adc
fmul
dec
insl
and
push
call
inc
push
push
xchg
sub
xlat
push
orb
loope
mov
mov
cmp
sbb
dec
pop
mov
pop
lods
and
xor
xchg
lret
mov
addr16
pop
fwait
aad
rclb
adc
stos
jnp
jbe
insl
adc
movsl
cmp
push
push
das
dec
mov
or
adc
xchg
or
sub
js
faddp
sbb
adc
push
or
cmp
rcr
cmp
cmpb
ds
adcb
push
incl
pop
pop
push
ds
mov
jge
insl
fcoml
loope
scas
js
dec
jb
cmp
push
inc
neg
iret
loop
xchg
mov
es
enter
jl
adc
js
cmp
or
jge
pop
bound
xchg
adc
mov
and
outsb
add
cmp
jl
addr16
nop
mov
add
jne
adc
repnz
mov
push
dec
push
std
pop
mov
aad
push
push
out
xor
call
loopne
or
scas
jbe
sub
loope
bnd
add
lods
iret
sbb
pusha
mov
sub
add
mov
inc
movsb
sub
xor
roll
mov
movsl
jle
aad
fistl
and
pop
ljmp
mov
inc
push
mov
push
aas
aad
les
jecxz
rcll
dec
mov
shrb
mov
lds
int
bound
sbb
sbb
movsl
push
addr16
test
and
inc
imulb
jb
enter
stc
scas
mov
push
dec
call
xor
insb
data16
insb
sub
enter
pushf
mov
shrl
cmp
pop
aaa
js
sub
repnz
ja
and
out
pop
sbb
ja
in
mov
rolb
loope
adc
orl
cmpsb
inc
pop
add
sub
aad
pushf
sbb
rorb
dec
mov
push
or
or
dec
subl
add
insl
fildl
aas
xor
pop
mov
push
or
add
or
dec
push
or
daa
orb
adc
push
push
push
cmc
pop
dec
dec
arpl
nop
in
dec
and
test
jno
hlt
aad
nop
addr16
lods
inc
test
iret
les
xor
subl
scas
aaa
mov
or
jmp
push
mov
and
jns
sub
test
adc
mov
repnz
or
cmp
mov
xor
inc
and
cld
push
filds
mov
popf
inc
add
bound
inc
es
mov
sub
stos
aas
mov
pop
int
shlb
xchg
out
insl
clc
cmp
insb
lcall
pop
cmp
insl
nop
lds
dec
xchg
call
mov
xlat
mov
jb
scas
or
push
rorb
pop
dec
cvttps2pi
cmpsb
icebp
outsb
into
icebp
push
lcall
pop
nop
lock
ret
pushf
xor
or
push
into
adc
insl
or
insb
mov
jbe
mov
js
stc
xchg
fwait
push
stc
popf
rcr
mov
into
cmpsl
orl
outsb
test
cmc
cwtl
das
jmp
test
test
shlb
pushf
lret
pop
jle
mov
mov
hlt
mov
jbe
inc
pop
sbb
add
je
dec
or
add
mov
pop
test
xor
dec
mov
jmp
data16
mov
shlb
sbb
loope
ret
addr16
nop
jge
repz
cmp
xchg
out
sarl
sub
dec
cli
mov
add
lea
aam
xchg
daa
pop
popf
mov
arpl
dec
arpl
rcll
pop
xchg
fnstsw
rorb
repz
test
jmp
mov
ds
enter
push
jg
fsubl
pushf
sbb
xlat
shll
jle
dec
xor
dec
sahf
xchg
dec
fldt
pop
test
mov
or
repz
fwait
dec
test
subb
mov
jae
cmpsb
adc
dec
inc
dec
sub
add
jge
iret
xor
add
pop
xor
sub
push
outsl
dec
call
xchg
outsb
shll
jmp
je
push
mov
cli
mov
jge
push
int3
fwait
and
add
adc
cli
movsl
mov
adc
mov
pop
repz
dec
mov
xor
inc
push
std
scas
jle
dec
lods
push
cmp
sbb
ja
jne
clc
out
adc
lds
mov
shrb
adc
mov
xchg
data16
mov
hlt
xchg
xor
dec
hlt
push
fwait
inc
iret
xor
pusha
mov
lods
lcall
and
movsl
insl
dec
sbb
dec
xor
push
add
lret
push
pop
or
add
sbb
rcll
lret
push
test
or
nop
dec
jbe
outsb
jno
pop
dec
es
pop
mov
sbb
sub
repz
push
push
daa
sub
pop
int
cmp
decl
xlat
into
lock
mov
mov
mov
push
out
fucom
pop
mov
enter
out
outsb
jle
stos
loopne
fidivrl
inc
fsub
aas
stc
out
xor
imul
fimull
addr16
pop
add
push
out
movsl
push
popa
mov
cmp
test
lret
out
ja
jo
popa
inc
mov
push
and
andb
push
jmp
lret
pop
xchg
mov
jmp
test
jae
push
push
add
xor
roll
jge
inc
inc
inc
jae
lret
inc
in
or
and
or
sbb
out
and
sahf
add
and
push
inc
cs
mov
xchg
insb
mov
js
xorb
xchg
xchg
loop
jmp
push
shll
push
sahf
popf
fucom
xchg
mov
cmp
mov
pop
stos
fiadds
add
dec
mov
add
adcl
out
sti
sub
pop
xor
pop
mov
xor
icebp
mov
pusha
adc
mov
in
dec
mov
push
repz
xlat
pop
or
icebp
jmp
rcrl
dec
cmpsl
cld
dec
pop
inc
push
push
adc
cmpsl
xor
lods
fwait
dec
add
jl
nop
addb
xor
pop
faddl
and
imul
or
jp
pop
test
xor
sbb
gs
pop
hlt
insb
lods
dec
xor
mov
and
cmc
mov
testl
inc
scas
push
inc
jo
scas
mov
mov
in
int
fsts
mull
xor
xor
xchg
stos
std
jg
test
jo
dec
vpsrlw
push
lock
lret
das
mov
outsl
jp
jg
xchg
loopne
scas
push
push
pop
out
mov
xchg
xchg
mov
icebp
mov
push
and
aad
imul
and
lods
jp
aaa
nop
pop
add
push
sbb
sub
push
jge
add
iret
roll
cs
inc
pop
adc
sbb
jae
add
cmp
sub
cmpb
xchg
xchg
inc
lret
mov
add
mov
sti
or
jecxz
mov
push
popf
addr16
jb
pop
sub
jecxz
or
aas
mov
and
jecxz
insl
cmpsl
loop
push
fisubl
cwtl
enter
and
mov
cmpsl
aad
call
inc
fisttps
cltd
mov
dec
jle
test
fmull
jbe
lds
js
je
sub
mov
into
xchg
pop
insb
bound
clc
into
jmp
pop
in
xchg
mov
test
xlat
mov
outsb
pop
sbb
addr16
les
outsb
adc
call
inc
fdivrl
lcall
jb
cwtl
clc
and
lahf
and
push
lds
add
xchg
movsb
imul
sbb
stos
inc
xchg
mov
lahf
cmp
cmpsb
sub
fstps
sti
lahf
add
inc
inc
lret
stos
jp
fisttpll
inc
cmp
pop
pop
mov
fwait
cmc
outsl
test
repnz
and
push
or
rcrb
dec
in
ret
out
sbb
cmp
in
push
lods
jp
mov
outsb
or
aaa
mov
shlb
out
sbb
and
imul
movsb
pushf
mov
ds
enter
and
or
jge
dec
cli
cmpsl
out
movsb
iret
mov
and
jnp
mov
popf
sbb
hlt
in
jecxz,pn
push
jp
mov
out
push
mov
push
lcall
arpl
and
nop
jbe
add
cmp
sub
call
pop
add
jecxz
push
sbb
jle
je
jae
lods
sub
sbb
adc
ds
lret
lahf
cmp
xor
cmp
or
or
mov
js
sub
addr16
sbb
leave
dec
lods
xor
lods
cmp
aad
or
mov
push
and
add
jb
inc
loop
rcrb
cmp
rol
pushf
inc
popf
xchg
std
lods
pushf
dec
jp
test
and
push
scas
jmp
push
test
xor
cmp
int
repnz
jg
cwtl
xor
fs
xchg
roll
roll
divl
add
ja
in
jnp
cmp
out
outsl
add
int3
pop
xlat
inc
leave
or
jns
in
add
pop
push
or
scas
test
sub
cmp
sar
sbb
adc
or
and
or
subl
add
jns
pushf
js
and
jbe
cs
cld
int3
mov
movsl
jmp
and
fcoms
add
std
cmp
add
jle
or
xor
arpl
cs
orb
jle
cli
cmp
mov
insb
movsl
or
arpl
jmp
fisubl
mov
xor
mov
lret
aam
mov
cmp
cmp
sti
inc
mov
mov
add
pop
pushf
cmpsb
cmp
sub
xor
stc
mov
out
push
scas
jp
push
xor
dec
and
out
jecxz
push
jne
cmp
mov
push
test
jns
imul
inc
mov
lds
fwait
cmp
jne
sub
pushf
jns
sbb
cmp
das
idiv
push
cmp
xchg
mov
out
loope
orb
stos
adc
jbe
adc
cli
dec
or
add
push
daa
cmpsb
hlt
lea
loopne
mov
jns
loopne
inc
ljmp
push
inc
pop
inc
out
xchg
fnstenv
pusha
adc
xchg
and
les
ljmp
cs
mov
inc
mov
in
xor
loopne
dec
jb
out
addl
scas
xor
outsl
xor
dec
sub
aas
dec
clc
xchg
mov
dec
mov
lods
adc
push
dec
mov
leave
mov
in
jne
pop
daa
jae
dec
dec
cmpsb
rcl
loope
adc
xchg
int3
adc
mov
xchg
insb
movsb
push
pop
les
cli
cmp
arpl
and
scas
addb
sbb
mov
int
orl
ret
cwtl
loopne
outsl
in
aad
and
xchg
mov
cmp
xchg
outsb
inc
aam
lds
dec
push
pop
scas
lods
lcall
out
inc
addl
or
ja
inc
jle
mov
dec
sub
mov
mov
add
dec
add
sub
sub
sub
daa
add
add
mov
xor
pop
adc
or
xor
popa
outsl
ss
roll
out
xor
in
mov
push
dec
mov
mov
cmpl
add
pop
mov
les
add
sti
and
lahf
and
xor
push
movsl
iret
mov
mov
lret
sub
mov
jo
das
sar
dec
jb
shl
out
sbb
insl
xor
dec
fmuls
xchg
test
rcr
test
les
push
jne
aaa
xchg
dec
mov
xor
outsb
pop
sub
movsl
or
decb
addr16
out
pop
push
xchg
es
nop
addr16
sub
repz
lods
scas
xchg
pop
inc
call
fs
divb
lea
shlb
stos
repz
mov
leave
dec
into
adc
orl
xchg
js
je
jge
out
cmp
inc
out
popa
jge
int3
jns
xchg
sub
push
jmp
mov
test
push
out
enter
mov
loopne
mov
outsl
mulb
mov
clc
mov
xchg
mov
arpl
icebp
pop
push
sub
pushf
adc
jb
pop
cmpsb
xchg
jmp
jge
hlt
arpl
pop
in
in
xchg
cld
mov
xchg
xor
jne
xor
cmp
mov
jne
push
movsb
rclb
into
fsubs
leave
rcrl
or
xchg
jne
popa
mov
and
pop
or
xchg
fnstsw
sahf
out
mov
out
test
repz
dec
adc
cs
mov
jmp
add
into
push
jecxz
pop
rcrb
mov
test
xor
cvttps2pi
lret
mov
loope
rcll
push
lcall
pop
xor
outsb
and
mov
fsubr
ss
jecxz
imul
movsb
andb
xchg
shll
jo
inc
test
pop
mov
das
decb
ja
or
xchg
jecxz
mov
lret
inc
rorb
enter
imul
pushf
fs
les
iret
rorb
icebp
xor
adc
mov
scas
jecxz
push
insl
insb
fisubs
out
cmc
out
mov
aam
fnstcw
cld
push
int3
popf
pop
cmp
jmp
mov
mov
lcall
mov
in
mov
std
sbb
push
sub
je
jecxz
or
adc
xchg
add
jbe
mov
or
mov
popa
js
ss
sub
mov
cmp
dec
pop
push
loope
fldenv
cmp
int3
dec
pop
fiadds
lahf
or
aas
lahf
lahf
lcall
inc
and
jae
int3
in
pop
lea
lods
jns
rorl
jp
xchg
mov
popl
lods
push
add
cli
scas
push
std
add
fwait
mov
sbb
push
shll
xor
jp
xchg
mov
scas
xchg
rcrb
jb
dec
dec
imul
lods
pop
loope
mov
sub
imul
add
iret
jecxz
rclb
fadds
xor
pop
and
xor
dec
mov
sub
xor
dec
call
sub
lea
mov
jno
push
loope
mov
jmp
add
int3
inc
shlb
mov
frstor
mov
lock
aas
xchg
fdivs
mov
enter
mov
push
imul
sar
dec
mov
pushf
jns
shll
shrb
fcmovnb
cmpb
ficompl
lods
jg
inc
xor
cmovl
lods
mov
sarb
mov
sbb
and
dec
xchg
out
fs
in
lcall
cld
movsl
mov
outsb
and
test
mov
ficomps
cmc
mov
mov
pushf
jnp
cs
mov
add
cmp
loop
aam
pop
add
arpl
frstpm(287
push
decb
mov
inc
adc
dec
jb
cmp
icebp
jbe
ffreep
add
mov
mov
popa
testl
cmpsb
cmc
cld
dec
push
adc
je
dec
push
repz
push
sarb
xchg
and
insb
fsubs
cmp
lcall
cwtl
jge
sub
gs
inc
mov
js
lahf
jg
sbb
mov
adc
sbb
xor
inc
jg
and
cmp
xor
push
mov
mov
sub
aad
pop
inc
or
ror
push
or
cltd
push
lods
lcall
loope
into
stos
fcmovb
fwait
dec
clc
movb
cld
cltd
movb
inc
add
movsl
xchg
outsb
mov
adc
std
test
mov
aaa
or
push
sub
jne
adc
sub
aas
imul
mov
testl
push
push
pop
cmp
cmp
push
lret
subl
and
out
sub
xchg
scas
jae
out
mov
pop
aaa
sub
pop
js
dec
dec
cmp
jo
cs
aam
fistps
push
scas
ss
out
jl
or
idiv
jnp
shrb
pop
in
subb
mov
test
test
xor
shl
mov
or
lcall
or
ds
add
sub
lret
cmp
imul
loopne
ffreep
or
cmc
daa
xlat
test
pop
mov
jmp
imul
rcll
mov
fsubrs
xor
pop
adc
mov
dec
jb
std
mov
movb
filds
cmp
jne
addr16
repz
add
xchg
rclb
jae
pop
js
mov
cli
lahf
xchg
cltd
andl
sub
jecxz
jl
test
sbb
inc
cmc
pusha
repnz
mov
jge
xchg
std
mov
mov
jecxz
ja
push
loope
pop
fwait
xchg
sbb
cmp
js
and
adc
sbb
repnz
sub
xchg
dec
roll
mov
cmp
mov
adc
mov
mov
cs
or
push
fmull
pop
bound
stos
aam
mov
mov
in
cmpsl
in
push
inc
pop
aam
inc
sub
jo
pop
lods
cwtl
mov
loopne
xor
subl
xorb
sub
imul
fwait
jno
pop
and
cmp
pusha
inc
es
idivb
mov
xchg
movsl
insb
pop
nop
pop
punpcklwd
movsb
sbb
and
in
cmp
and
pop
rcrb
gs
ss
leave
je
test
jle
shlb
pop
sub
pop
aaa
inc
negb
add
lods
imul
pop
sub
push
mov
push
ret
lahf
pop
push
jnp
sub
pop
outsl
mov
jae
test
out
sub
and
icebp
adc
mov
test
mov
jmp
adc
fcmovnu
adc
out
cmp
insl
xchg
push
loope
jns
in
inc
mov
fmul
subl
popa
pop
leave
and
add
pusha
push
frstor
pop
outsb
shlb
push
jl
push
cmp
gs
dec
xchg
stc
bts
int
and
mov
inc
daa
in
jl
sub
mov
jp
pop
xchg
in
pop
ds
or
mov
arpl
sbb
fsubr
add
jmp
fs
call
pop
jmp
fs
insl
sub
fwait
out
outsb
dec
lods
jmp
xor
aaa
sarl
icebp
loopne
and
daa
std
xchg
pop
arpl
jmp
sbb
adc
data16
aaa
clc
aam
lcall
enter
mov
mov
cwtl
stc
and
pop
jae
inc
inc
movb
hlt
leave
ja
add
adcl
jns
int3
hlt
in
jg
call
add
inc
stos
sti
mov
ss
add
dec
mov
or
scas
pop
cmp
notl
xlat
movsl
test
jo
xchg
dec
push
sarl
js
cmpb
xor
add
inc
xchg
dec
xchg
adc
sbb
loopne
fs
mov
sbb
lret
mov
sbb
je
push
mov
mov
nop
pop
inc
repz
stc
sbb
and
jne
lcall
sbb
and
xor
mov
insb
mov
pop
fistps
inc
gs
fwait
xor
adc
shrl
add
mov
dec
mov
mov
mov
and
push
rclb
mov
push
jle
out
mov
pop
pop
push
jl
add
mov
push
jns
pop
fwait
mov
adc
adc
scas
inc
sahf
or
ror
xchg
xchg
mov
mov
pop
ljmp
mov
inc
sbb
or
adc
dec
sbb
lahf
add
cmc
dec
nop
xchg
jne
cmc
insl
test
dec
inc
xor
add
lock
ds
push
mov
mov
sub
pop
je
mov
xor
xchg
std
pop
or
xchg
out
adc
push
jge
out
inc
dec
mov
xor
sbb
inc
enter
jno
cli
jecxz
aam
cmp
aam
pop
xchg
rorl
ret
sbb
je
ds
mov
push
push
push
xor
pop
xor
mov
fnstenv
or
shll
imul
xchg
dec
ss
pop
pop
sbb
pop
inc
and
test
inc
lods
pandn
enter
cmpsb
and
cmpsl
mov
cmpsb
subb
cmp
lret
ret
pop
xchg
stc
sbb
clc
les
add
sub
cmc
xor
mov
jmp
lahf
fstps
ds
shlb
loope
les
lret
add
popf
inc
in
jl
lock
cs
in
add
add
stc
pop
adc
std
sbb
in
xchg
out
pop
sbb
cmp
mov
cmp
hlt
ret
ret
xchg
xchg
shrb
frstor
mov
sbb
fs
and
or
jno
shll
adc
adc
gs
test
dec
sub
stos
push
mov
test
rcr
jo
lea
pop
sbb
in
mov
pop
adc
ja
xchg
mov
xor
cmp
out
mov
ficoms
xchg
iret
push
push
out
pusha
pop
insl
or
movl
gs
dec
cmp
cmpsl
iret
xor
stos
jmp
sbb
adc
lret
dec
test
xor
test
fsubrp
adc
addb
ret
ror
mov
repnz
mov
lret
mov
imul
add
cld
cs
out
stos
andb
xorl
mov
out
add
aaa
movl
stc
bnd
dec
icebp
sub
adc
jae
jmp
cmpl
cld
insb
and
lret
mov
test
pop
pop
mov
xor
lock
fldcw
dec
gs
xor
push
cmp
xor
movsl
adc
push
cmpsl
jno
mov
push
xor
push
add
inc
inc
in
add
out
and
hlt
pop
aad
ljmp
jecxz
aad
inc
sbb
adc
pop
scas
or
les
sbb
iret
pop
cmpsl
and
cmp
xchg
push
pop
xor
lods
jle
stos
push
cmc
pushf
inc
mov
fldt
sahf
mov
sub
lods
out
jb
dec
mov
xchg
mov
sbb
inc
adc
adc
aas
mov
call
shll
jnp
dec
xchg
mov
push
dec
jge
stc
add
inc
sti
mov
rorl
fs
dec
mov
mov
out
cs
mov
enter
mov
or
sub
push
sbb
nop
lds
aad
cmp
mov
xor
xor
sub
rcrl
shrl
cmp
repnz
sbb
and
jae
mov
insl
hlt
dec
outsl
jbe
lds
cmpb
jns
sbb
pusha
add
popf
xchg
xor
push
mov
sbb
mov
cmp
sub
nop
mulb
or
pop
fucom
inc
xchg
cwtl
fnsave
jbe
push
sbb
jns
jno
ja
scas
shl
adc
and
mov
sbbl
inc
lds
int3
stos
lcall
sbb
and
or
xchg
mov
add
and
mov
fstpt
shll
cmp
call
inc
add
repz
insb
jns
repnz
in
stos
jp
sahf
sub
xor
test
mulb
movsb
pop
xor
jecxz
ret
cmp
xchg
popf
jl
xchg
jae
dec
aad
dec
fcomps
in
movups
int3
cmp
daa
jo
mov
popf
jp
push
cmc
sbb
insb
jbe
lahf
push
in
jmp
adc
outsl
cmc
ljmp
cmp
push
jnp
call
push
fmuls
lock
sub
add
dec
sbb
shl
inc
leave
out
push
rcrl
test
insb
dec
iret
mov
cwtl
in
xor
push
xor
in
daa
pop
imul
pop
es
push
lea
mov
or
mov
and
sub
jo
mov
out
loopne
das
or
push
rcrl
jno
and
xor
enter
mov
pop
adc
jne
sbb
std
clc
sbb
mov
gs
rorl
lahf
sbb
arpl
inc
rcrb
mov
xorl
add
in
inc
js
xor
addb
out
mov
arpl
js
pop
inc
aam
or
ret
push
aad
cld
jb
shll
scas
aad
and
push
mov
loop
dec
push
jp
mov
mov
sahf
or
push
lods
aas
lret
jg
mov
lock
jg
jns
adc
insl
pop
sbb
lea
fcmove
pop
xorb
mov
lahf
jno
inc
pop
push
fisubs
es
jb
mov
mov
and
dec
lods
and
cmp
mov
fdiv
sub
outsl
popa
sub
jp
stc
sbb
call
outsl
push
mov
clc
jg
imul
cmp
dec
jnp
sahf
xchg
lret
pminub
add
add
push
jnp
mov
fdivs
or
and
je
into
cmp
dec
and
hlt
dec
popf
ficoml
push
testb
mov
mov
pop
rclb
imul
lds
mov
es
inc
outsl
mov
rorb
xchg
lds
and
pop
cmc
aam
loop
insl
ss
out
fsub
pusha
nop
loopne
and
push
lea
pusha
cmp
xchg
push
jg
xor
fldcw
icebp
repz
sub
ds
xchg
mov
and
adc
iretw
jns
pop
movl
out
aad
je
dec
xor
inc
test
int
nop
adc
push
cmp
and
fnstenv
gs
shl
pop
jns
lods
push
cmp
and
cmp
js
push
push
sub
ss
arpl
cltd
jnp
out
cmp
mov
clc
mov
jge
sub
mov
cs
ss
push
jo
mov
cltd
and
cmp
das
jecxz
cmp
cld
push
loopne
pusha
sbb
inc
xor
sub
mov
sub
mov
stos
cmp
bound
push
or
in
mov
stos
pop
fcmovu
shrl
shl
cmp
in
mov
fsub
pop
mov
aam
sbb
leave
sbb
xor
and
repnz
cltd
dec
dec
jae
sub
xchg
push
insl
outsl
dec
shll
or
cmp
mov
fnstcw
add
mov
adc
jb
xor
pop
aam
scas
test
loope
sub
jp
sub
imul
or
lret
jno
jo
scas
fbstp
add
lret
or
mov
lea
lock
dec
sbb
sub
adc
dec
dec
rol
in
and
in
in
pop
gs
mov
rcl
shll
jns
mov
lret
out
jecxz
cld
repnz
jbe
movsb
loopne
dec
int3
adc
add
add
pop
jge
and
fildll
xor
add
or
ljmp
ret
jne
sbb
cmp
ja
dec
adcl
cli
mov
mov
aaa
push
mov
lret
cltd
xchg
js
outsb
mov
fcmovnb
sbb
je
add
dec
push
adc
or
push
mov
aas
or
sub
movsb
cmp
cld
pusha
mov
fidivrl
test
lahf
adc
dec
outsl
dec
jp
sub
add
mov
dec
test
inc
lods
xor
dec
mov
mov
jge
iret
lds
sbb
mov
loope
add
add
xchg
inc
dec
cmp
or
fcmovnu
or
clc
and
ss
xchg
nop
mov
pop
sbb
mov
les
aad
aas
lret
pushf
aad
push
sbb
add
stos
aas
hlt
data16
jecxz
arpl
lock
jmp
outsb
mov
sbb
rcrl
daa
mov
mov
jae
andb
fidivrl
addr16
sub
mov
jg
mov
inc
jae
ljmp
mov
jno
loop
adc
loopne
insl
lret
xchg
xchg
repz
pop
push
or
std
mov
push
push
pop
jns
pushf
fidivrs
shl
enter
out
fiaddl
iret
bound
cli
jge
jns
mov
pop
inc
lea
outsb
into
jmp
push
pop
bound
pop
pop
rclb
lret
stc
xchg
div
pop
mov
sbb
and
lret
dec
inc
stos
push
mov
or
xchg
add
imul
pop
sbb
cmpsl
mov
pop
stos
ret
xor
cltd
ljmp
outsl
sbb
lret
dec
lcall
je
call
mov
jl,pn
out
jb
std
jb
pop
push
inc
das
inc
int3
test
leave
out
push
fucomp
fistl
add
jae
out
jge
mov
inc
mov
push
xor
xlat
call
inc
mov
or
repz
lret
lods
outsb
test
mov
cld
xchg
shlb
or
dec
call
js
sarb
and
movsl
mov
mov
cmp
mov
cmp
push
xchg
mov
xlat
add
pusha
in
loop
outsl
push
in
movsb
out
mov
out
fimuls
gs
movsl
pop
adcl
mov
stc
sarl
push
addl
inc
loope
xor
scas
mov
popa
cmp
mov
lock
in
and
push
pop
pusha
out
and
xor
les
cmp
pop
and
pop
scas
dec
cmc
push
lock
aaa
dec
call
push
xchg
call
adcl
into
call
pop
lea
adc
outsl
sbb
pop
push
movsb
mov
xchg
scas
into
rol
or
jns
in
mov
cmp
xchg
xchg
jg
sbb
shlb
fcomp
rcll
add
cmp
je
adc
lahf
xlat
jne
ds
cltd
jo
add
dec
mov
xor
mov
push
xchg
fmul
cmp
sub
jne
leave
mov
pusha
and
cmpsl
or
test
insl
lret
pushf
mov
push
lods
dec
dec
jmp
rcrb
lret
adc
sbb
shll
ja
fildll
lock
sbb
jge
cmc
notb
sahf
push
push
clc
stos
jae
stc
inc
xor
fldenv
sbb
test
xor
xchg
aaa
add
cmp
pusha
test
or
enter
xchg
xor
jno
test
test
and
push
mov
aam
mov
dec
sti
ficoms
ja
push
mov
test
cmpsl
xor
lahf
pop
in
jne
jne
mov
mov
jecxz
test
sahf
xchg
and
neg
test
push
int3
inc
sbb
mov
xchg
repnz
add
add
decb
push
push
jecxz
pop
out
outsl
mov
cwtl
lret
ret
cmp
daa
mov
cmp
into
adc
arpl
xchg
divb
sub
sub
push
mov
jle
adc
pop
push
jae
in
dec
dec
mov
ja
xchg
lock
cwtl
iret
inc
sub
cs
icebp
xlat
jns
push
xchg
sbb
cmp
fidivs
xor
jo,pt
js
cld
push
jl
xchg
mov
data16
cmp
add
in
popa
les
and
out
out
fs
mov
sbb
jns
or
pop
jg
jg
fwait
and
xchg
movsb
test
sbb
dec
popa
fadds
mov
mov
icebp
xor
adc
in
push
jbe
ljmp
push
xlat
nop
mov
rcrl
cltd
push
lret
push
aam
add
xor
int
push
jnp
cmp
mov
arpl
jge
popf
fimull
daa
sbb
mov
fistpl
inc
xchg
int
sub
cmpl
mov
aad
out
mov
cli
pop
iret
mov
and
mov
call
cli
add
int3
push
and
or
cmp
inc
mov
movsl
jge
xor
out
in
sbb
inc
xchg
loop
xor
popa
test
jl
jo
xor
adc
hlt
cld
push
cmp
pop
add
ret
in
cmp
dec
inc
xchg
pop
rcll
pop
lock
add
je
pop
scas
sub
push
test
movsl
outsb
fwait
into
mov
or
and
shrl
mov
cmp
pop
sbb
mov
mov
lahf
and
cmp
mov
cli
jg
dec
ja
dec
test
or
and
daa
ret
sub
je
jns
dec
xor
push
out
mov
inc
pop
push
cli
int3
insb
pop
ds
xadd
push
dec
lea
in
pop
cmpsb
mov
ret
jbe
test
xchg
subb
pop
mov
add
xchg
sub
cmp
and
mov
xor
in
sub
rorb
cltd
loope
jb
test
js
insb
mov
pop
sbb
outsl
stos
pop
jl
pop
jp
cmpsl
test
mov
dec
inc
roll
filds
cmp
jno
cmpsl
cmp
jg
pop
test
stc
cmpb
je
lcall
xor
push
sub
pushf
mov
cmp
lahf
mov
mov
stos
bnd
lds
or
pop
lea
sub
shlb
push
mov
add
mov
dec
cmp
or
cmpsl
popa
jle
push
or
mov
sbb
leave
cwtl
xor
sub
or
cmp
dec
push
xor
inc
in
sub
ja
cwtl
xchg
addr16
jg
sub
pop
dec
out
push
push
fstps
mov
jbe
call
imul
adc
xor
push
sbb
dec
jo
movsl
mov
rcrb
cld
mov
push
mov
lret
pusha
ds
dec
sbb
and
scas
subl
leave
popfw
out
mov
inc
sbb
cmp
js
cmc
push
cmp
jbe
pop
rcll
push
lods
adc
or
bound
mov
cltd
lea
dec
call
jp
je
test
dec
leave
movd
cmp
pop
pusha
pusha
xor
orl
pop
gs
ljmp
mov
sbb
repnz
pop
in
aas
int
push
in
stc
jl
sbb
in
jecxz
rorb
lea
jne
push
mov
mov
nop
and
stos
std
mov
iret
adc
jp
and
and
sahf
mov
out
sbbl
inc
or
shlb
out
sub
insl
dec
or
mov
or
pcmpgtb
in
ret
arpl
stc
fucomip
xchg
push
mov
xchg
lods
or
ret
xchg
in
push
jl
cmp
sbb
pop
sbb
jno
add
cmp
dec
mov
or
jmp
mov
jb
xchg
imul
inc
xor
lahf
clc
loop
push
ret
inc
insb
push
clc
and
and
mov
icebp
mov
fsubs
daa
pop
test
mov
adc
or
jae
mov
adc
xchg
push
jle
stos
pushf
pop
mov
and
pop
sub
sub
lahf
pop
and
ljmp
mov
and
adc
int
pushf
mov
push
sub
test
pop
jo
adc
scas
jecxz
loope
notb
shlb
push
fisttpl
daa
add
cmp
xchg
sbb
push
stos
pop
xchg
sarl
lods
fs
and
xor
outsl
int3
jle
push
push
addr16
pop
push
and
inc
pop
xchg
pop
iret
pop
imul
pushf
jns
pop
cmp
mov
mov
jb
sub
xor
mov
lods
mov
push
xchg
dec
clc
dec
xchg
repz
fldcw
jecxz
imul
pop
mov
aad
test
js
aam
imul
scas
mov
adc
hlt
fistpl
into
pop
push
loopne
xchg
mov
pop
fstl
push
js
mov
xor
outsb
lcall
inc
or
enter
push
shrb
inc
dec
or
sbb
mov
pop
xchg
sbb
mov
or
xchg
jo
nop
push
and
or
and
sub
adc
cmp
call
cmc
rcrb
rcrl
pop
push
mov
mov
lret
mov
or
dec
sub
pop
mov
xchg
jmp
jmp
mov
test
insb
pop
pushf
gs
add
add
out
ret
cmp
cmp
fisubrs
aaa
jb
add
pushf
cmp
loopne
out
sub
mov
loope
mov
xchg
hlt
cmp
movsb
lahf
jmp
movsb
dec
push
cs
stos
sbb
fldenv
into
mov
les
test
lcall
cmp
adc
mov
je
mov
loop
call
jg
adc
mov
push
adc
imul
mov
fistpl
push
fistps
movsl
and
xorb
mov
mov
pop
lods
mov
add
and
scas
mov
push
dec
arpl
xchg
inc
jb
mov
repz
shlb
int3
sub
test
xlat
push
sub
gs
mov
push
xchg
es
dec
xor
xlat
adc
xchg
sbb
pop
and
push
dec
xchg
cmpsl
mov
mov
xor
push
inc
jmp
xchg
or
jecxz
xor
sahf
loop
cmc
test
test
sbb
xchg
xlat
pop
push
push
es
xchg
pop
push
es
fcompl
sbb
sub
popa
or
inc
dec
jle
bound
pop
pop
ljmp
idivl
sbb
sub
rclb
dec
lfs
xchg
pop
fstl
adcb
pop
jp
scas
mov
sahf
negb
stos
sub
sub
mov
jno
xor
mov
out
and
scas
mov
ror
pop
jge
adc
cmpsl
scas
vmwrite
test
cld
icebp
mov
mov
bound
ficomps
test
sbb
pop
adc
mov
rcrb
push
jecxz
mov
jne
roll
pop
lahf
push
pop
dec
sti
adc
cli
mov
int
or
je
scas
push
mov
repnz
inc
mov
push
dec
jle
dec
aad
pop
add
out
loope
leave
call
add
aam
je
bound
mov
test
add
mov
dec
sbbl
pushf
cmp
or
inc
push
in
sahf
in
outsb
test
sbb
fs
mov
mov
or
mov
aas
inc
shr
shll
rorl
jo
subl
pop
pop
jge
movlps
lock
or
inc
and
push
cwtl
jge
jle
test
pop
imul
mov
push
popa
mov
mov
popl
lret
aas
pop
sbb
and
in
fidivrs
mov
js
mov
push
cwtl
bnd
sbb
pop
cs
xchg
mov
xor
cwtl
fdivrs
mov
test
or
cltd
cmpl
adc
sahf
adc
in
pop
adc
mov
sub
in
push
pop
or
push
out
cmp
push
push
movsl
rorl
and
pop
outsb
sti
cmpsb
clc
and
cmp
imul
mov
pop
adc
cmpsl
mov
stos
add
mov
add
call
shlb
repnz
loope
out
xor
popf
lds
sbb
xchg
xor
push
mov
dec
sub
dec
jmp
aad
sub
pop
in
out
mov
inc
fmuls
lds
or
push
or
jl
cli
or
jge
addr16
and
ret
push
cwtl
nop
push
dec
leavew
pop
filds
jmp
in
inc
pop
int3
aam
or
ss
jl
mov
mov
jmp
lea
scas
sub
mov
xchg
lea
outsl
jge
mov
sbb
mov
pop
lods
fisubrl
xlat
mov
cmp
les
mov
popf
add
stos
outsl
mov
ja
fdivrp
mov
imul
fisubrl
mov
mov
lcall
out
andb
shrb
inc
and
mov
decl
xchg
std
xor
mov
lods
lcall
dec
sbb
cld
cli
pusha
scas
call
sbb
inc
jge
outsl
je
call
repz
jnp
test
or
push
jno
and
mov
and
mov
out
lahf
arpl
push
jae
sbb
xchg
sub
jns
push
mov
int
sbb
jg
push
ret
sbb
imul
push
movsb
das
fildll
xlat
aad
fs
outsl
sub
loop
cmpsb
sahf
and
cwtl
xor
out
sbb
out
shll
cmpsl
pusha
push
dec
fs
lock
xchg
dec
jecxz
stos
sarl
mov
lea
adc
ret
inc
jmp
adc
add
imul
cmc
mov
inc
testb
or
popa
jb
xchg
aam
sbb
and
pop
add
dec
xor
push
shll
pavgb
dec
data16
nop
sbb
lea
dec
aaa
ss
subb
mov
daa
jb
decb
adc
cmc
or
addb
sbb
lods
sarl
popf
adc
adc
lcall
push
mov
idivb
fnstsw
fdivs
cltd
das
daa
lods
mov
sbb
popa
jge
xchg
pop
jns
sub
cltd
loop
and
pop
sub
movsl
aam
cwtl
lods
push
hlt
or
lock
or
xor
add
bound
xor
adc
daa
mov
inc
fstpt
cli
mov
je
mov
mov
sub
bound
outsl
int3
dec
cmp
cmc
and
out
movaps
pop
cld
adc
test
mov
cmp
popa
icebp
adc
mov
test
jae
and
pop
rorb
adcb
pop
stos
ss
add
in
js
xchg
sbb
adc
adc
jge
xor
xor
subl
cmp
int3
adc
or
add
pusha
aaa
cmp
mov
imul
adc
repnz
jcxz
stc
xchg
cmp
ret
jns
fmuls
arpl
dec
test
lea
push
or
pusha
scas
pop
outsl
xor
ret
sbb
decb
fistpll
cmp
pop
stos
repz
daa
gs
movsb
xchg
adc
xchg
pop
mov
lcall
push
push
fsubs
sbb
pop
cli
pop
ja
fldpi
nop
push
popa
add
mov
jbe
fimull
in
mov
out
mov
adc
mov
mov
cld
dec
loopne
push
lea
rorl
dec
insl
adc
cltd
dec
addb
mov
cli
mov
aas
cmove
inc
addb
xchg
sar
mov
mov
in
sarb
es
pop
dec
sub
imul
arpl
add
jg
fwait
add
dec
xchg
mov
fwait
in
mov
push
cld
add
cmp
mov
lahf
pop
scas
loopne
clc
cli
imul
push
xlat
mov
mov
push
sti
in
sub
pop
insl
mov
shl
mov
loope
adc
adc
cli
xor
shl
mov
popa
dec
cmp
in
xchg
pop
push
lods
bound
xchg
cmpsl
pushf
xchg
cld
inc
cmc
sub
or
mov
aas
sarb
jno
icebp
jg
ja
stos
idivb
popa
stos
lea
pop
xor
dec
add
imull
fwait
sar
fs
shll
clc
push
sbb
inc
pop
mov
imul
push
push
or
clc
scas
push
xor
jmp
jl
pop
mov
rorb
fwait
scas
aam
sub
push
in
test
lcall
in
add
int3
pop
mov
loope
add
or
sub
fdivs
mov
jno
fsubl
sub
adc
adc
xor
lock
mov
into
lret
movsb
xor
push
fs
clc
pop
sub
and
mov
add
mov
mov
or
lcall
aad
or
hlt
push
fidivrs
int
mov
bound
lods
sahf
lret
stc
cwtl
sbb
leave
lcall
outsb
popf
outsl
int
imul
sub
cltd
fwait
in
mov
addr16
pop
push
sub
icebp
mov
scas
sub
jle
dec
movsl
mov
cmc
cmp
sbb
sbb
mov
xor
out
and
notl
aad
and
insb
lock
call
and
xchg
mov
outsl
ds
xor
cmc
bound
sahf
fimull
jno
sbb
cmp
inc
stc
mov
or
int
xchg
lods
and
xor
repz
mov
pop
mov
mov
push
fidivs
dec
push
cltd
inc
push
call
xchg
faddp
gs
cbtw
jae
stos
icebp
arpl
or
inc
stos
add
push
clc
and
fwait
jbe
xor
mov
loopne
shlb
sbb
mov
xchg
pop
stos
test
jg
xchg
push
loopne
bound
pop
stc
cli
xor
icebp
push
js
xor
mov
jge
pop
mov
cwtl
mov
jge
shr
mulb
or
imul
gs
sbb
outsb
enter
lds
inc
mov
adc
lret
insl
and
into
cmp
sbb
and
cmp
fmull
mull
push
pop
mov
repnz
mov
cmp
lods
push
xor
jg
mov
mov
adc
gs
cmp
in
andl
or
roll
lahf
lcall
jge
roll
lahf
pop
push
cwtl
cs
xchg
test
mov
pop
out
divl
mov
mov
xlat
loopne
pop
mov
jno
clc
fsubrs
xchg
pushf
add
repnz
loope
scas
loope
inc
sub
mov
mov
loop
dec
or
out
lods
xchg
or
cmpsl
adc
dec
cwtl
or
pop
stos
roll
fistpll
out
and
icebp
xchg
jbe
pushf
std
sbb
mov
in
jbe
push
std
or
fwait
and
sbb
fidivs
mov
sbb
shrl
sarb
shlb
iret
adc
mov
dec
das
cmpsl
xor
popa
cmp
dec
stos
or
bound
cmp
add
cmp
jg
push
jl
movsl
cltd
cwtl
hlt
int
dec
fldcw
inc
add
mov
call
xor
xor
ret
adc
cmc
call
inc
sbb
sbb
jno
dec
in
dec
loop
jb
rcr
test
mov
push
ss
sub
das
jne
mov
mov
pushf
aad
xor
fistps
stos
nop
dec
jg
cmc
and
adc
jb
inc
add
pop
sub
ljmp
pop
inc
pop
popa
call
adc
jbe
imul
push
dec
jo
mov
js
xor
das
jecxz
mov
inc
lods
push
loop
ljmp
sti
jecxz
inc
je
aad
test
mov
stos
imul
test
sub
icebp
ficomps
inc
cmp
mov
sbb
push
jb
mov
cmpsl
enter
mov
lcall
je
xlat
repnz
xchg
sub
out
push
inc
repnz
push
out
mov
aad
sbb
mov
cmp
daa
cld
xor
sahf
imul
sub
js
outsl
or
adc
fsub
pushf
pop
bound
push
push
jmp
shlb
add
jp
xor
dec
sub
cli
jmp
mov
mov
clc
roll
sti
ljmp
pushl
inc
ds
stc
xlat
sub
rcl
out
lcall
cmp
and
mov
mov
in
jecxz
mov
fidivrs
add
daa
jbe
aaa
js
mov
cmc
outsl
fisttpll
daa
mov
aad
bound
and
rcrl
mov
xchg
jbe
push
jmp
popa
stc
jno
js
inc
xchg
scas
dec
adc
lahf
adc
pop
pop
and
mov
aaa
ret
sbb
out
push
or
inc
and
fmull
mov
test
xchg
pop
and
cmp
xlat
lret
lods
push
push
ja
ret
add
mov
add
adc
mov
stos
or
je
xor
add
shlb
popf
cwtl
dec
pop
aaa
insb
xlat
fmul
cmpsb
lods
loop
jnp
sbb
test
or
or
adc
lods
pop
stos
pop
lret
movsl
jmp
sahf
stos
cmp
sbb
sbb
dec
loopne
xlat
jge
iret
bswap
lods
jmp
fs
pop
mov
shlb
xchg
jg
stos
loop
jecxz
mov
dec
cmp
pushf
iret
popf
add
testl
ja
mov
xor
or
jecxz
test
ret
movsl
dec
jmp
add
pusha
jle
cmp
xor
mov
maskmovdqu
cmp
ljmp
lret
cmc
dec
or
sub
aam
add
enter
jns
aaa
xchg
sub
loopne
lock
dec
movsb
or
jne
xor
in
mov
jb
cmp
sub
mov
sbb
inc
or
loop
cmp
lea
les
aam
repnz
shlb
in
add
xchg
movsb
xor
test
insb
je
sub
mov
mov
leave
pop
cmp
addr16
pop
push
js
jns
mov
add
inc
mov
pop
pop
jno
subl
push
mov
mov
hlt
inc
dec
mov
mull
pop
mov
stos
ss
mov
sub
lret
cmpsl
test
test
stc
aas
xchg
push
push
lcall
add
and
xchg
popa
ljmp
push
pusha
into
pop
pop
xor
cmc
loope
repz
shrl
addr16
cmp
into
pop
jmp
stc
fiaddl
and
inc
in
stos
sahf
enter
mov
jl
pop
es
test
jmp
add
enter
jg
xchg
ja
mov
bound
mov
popf
iret
add
ss
xor
jp
out
aad
scas
mov
stos
xchg
push
popf
xchg
add
xchg
test
mov
outsb
jge
push
pop
sbb
jg
cmpsb
cmp
and
fs
sbb
xchg
mov
clc
push
sti
jmp
gs
pop
push
inc
push
adc
jmp
repz
dec
imul
cli
cmpsb
out
lock
test
js
and
cmp
cmp
imul
ss
test
or
cmpsl
rorl
mov
mov
cmp
mov
adc
aas
jb
pop
mov
push
fs
inc
sbb
stc
shrb
dec
imul
pop
and
outsl
jo
jmp
insl
movsl
test
jp
inc
lds
insl
outsb
jo
lds
jbe
mov
mov
notb
pop
aam
xchg
test
cwtl
cmp
testl
je
pop
lods
push
sbb
and
insl
push
push
mov
jns
in
and
divl
faddl
orl
pop
fucom
lock
add
jge
or
mov
mov
sahf
xchg
lea
rol
cmc
std
push
jl
cltd
adc
jo
nop
int3
bound
arpl
sti
popf
lret
xchg
jle
and
jg
inc
mov
je
xor
sbb
jl
popf
movsl
insb
iret
js
dec
jb
jl
pop
jmp
aaa
fwait
lds
les
stos
pusha
jnp
inc
into
push
into
ss
pop
call
scas
insb
cmp
out
sarl
data16
jns
or
or
inc
lret
sbb
lahf
nop
es
push
jae
jg
jg
fcmovu
scas
dec
xor
adcb
adc
or
pusha
cmpl
or
jmp
jg
ret
popf
mov
inc
mov
jecxz
push
mov
adc
add
out
mov
add
mov
pushf
rcrl
lahf
mov
pop
in
cmpb
popa
std
adc
cmpsl
ret
ja
jle
negb
inc
push
sbb
mov
ss
ss
sbb
pop
fs
or
mov
adcb
pop
jae
cmp
dec
test
pop
push
ss
sub
xchg
pop
sbb
inc
sbb
insb
and
scas
push
jg,pt
aam
imul
imul
movsl
jns
add
inc
ds
shll
xchg
mov
push
rcl
loop
xchg
cltd
jle
xor
jmp
cmpsb
jp
sbb
jb
xor
scas
ret
jne
ja
pop
enter
out
aas
and
push
push
imul
push
aad
clc
cli
add
cmc
jp
add
xor
mov
xchg
cltd
sahf
cmc
pop
sahf
cmp
das
lods
or
jne
inc
dec
or
push
iret
hlt
and
mov
inc
dec
ja
fidivl
push
popa
test
adc
outsl
mov
std
dec
and
push
ss
stos
icebp
pop
fwait
and
notb
push
jl
movb
xor
lea
pop
xlat
and
pop
xchg
mov
pushf
out
cmp
aam
fsubrl
in
inc
xchg
arpl
jmp
clc
arpl
mov
and
fwait
popa
rolb
es
clc
addb
xchg
jle
mov
sub
and
push
scas
xchg
sub
inc
js
mov
jp
and
out
cltd
dec
in
cmp
inc
mov
mov
add
mov
xchg
test
ss
es
loope
push
and
mov
inc
jl
push
int3
jae
mov
and
jae
xor
sbb
lock
addb
jns
cmpsb
jne
imul
int
daa
inc
mov
mov
pusha
mov
lods
dec
adc
push
sbb
lret
cld
xor
popa
cmpsl
clc
int3
add
cld
push
je
sub
movsb
les
jmp
subb
mov
and
xchg
adc
sub
sarb
sbb
scas
test
cmp
call
mov
adc
stos
movsb
xchg
sbb
jns
mov
inc
dec
and
je
pop
pop
sub
xchg
xchg
ss
mov
mov
mov
jnp
push
mov
sub
add
mov
aam
ds
int3
mov
mov
mov
xchg
jecxz
xor
pop
out
and
inc
sbb
inc
fdivs
or
jb
jmp
data16
push
pop
fnstsw
mov
ljmp
ss
orb
iret
cmp
and
fadds
jmp
insb
addr16
jns
aam
xchg
mov
mov
sbb
testb
push
or
mov
loopne
aaa
gs
loop
ljmp
xor
into
push
mov
push
mov
inc
inc
test
icebp
rolb
jnp
push
sbb
add
aam
dec
scas
lret
movb
mov
fcompl
mov
pushf
jmp
fsubs
pop
sub
pushf
lret
out
ret
insl
sub
and
push
jbe
sub
sub
arpl
out
pop
fcomps
nop
dec
push
in
shll
xchg
inc
loop
xchg
fldl
ds
and
xor
mov
push
dec
arpl
ror
loope
add
push
push
dec
aam
cmp
mov
je
inc
movhps
xchg
dec
cli
pop
xor
addr16
adc
cmp
pusha
gs
fbstp
imul
mov
mov
fsubl
cs
orb
jmp
push
cmpb
imul
enter
filds
mov
dec
inc
insb
sbb
movsb
aam
jle
icebp
cltd
or
dec
lret
in
into
inc
out
ss
or
sub
push
jns
adc
aaa
mov
int3
testb
push
push
ret
sub
test
adc
pop
sub
stc
push
fiaddl
sbbb
scas
adc
cld
adc
loop
rorl
int3
push
sahf
dec
aam
addl
inc
mov
loop,pn
lret
fistps
fisttps
add
adc
add
enter
imull
push
das
add
cmp
hlt
icebp
lods
jno
inc
cmp
pop
push
test
je
xchg
aam
lds
xchg
fwait
pop
cs
inc
xor
outsb
cmp
adc
mov
les
add
movsb
aad
pop
stos
jle
push
pop
fsubs
clc
jne
cs
rcl
push
dec
and
mov
mov
scas
sti
stos
jle
mov
and
jg
add
lahf
shrb
int3
stos
cmpsl
cmp
fcomps
cmpsl
out
stc
fwait
cmc
sbb
test
xchg
testl
cmpl
and
call
xchg
lods
aas
inc
repnz
addr16
shrb
fistpl
inc
sbb
rcrb
loop
daa
inc
adc
fwait
aas
ja
cmp
leave
or
ja
sbb
push
iret
ret
cmp
mov
mov
sbb
pop
sbb
jns
imul
push
enter
sbb
adc
ja
mov
stos
mov
xchg
jecxz
mov
into
es
sbb
rol
js
jnp
test
xchg
pop
sbb
sahf
cmp
add
mov
add
mov
mov
repz
mulb
sbb
popa
push
lret
int3
adc
daa
or
sub
xor
fdivl
push
scas
jb
jl
or
jo
push
push
push
inc
dec
dec
xor
loope
daa
fstpl
ljmp
pop
ds
cmp
movb
pusha
rcll
out
sbb
arpl
mov
les
inc
xchg
pop
ficoml
fcmove
xor
xor
outsb
jle
roll
hlt
dec
test
test
push
out
cmp
jno
popa
xchg
out
push
sub
fwait
cmpsl
sub
inc
mov
inc
clc
outsl
xchg
sbb
ret
out
or
rcr
jle
test
nop
lret
dec
pop
push
ficomps
xchg
ja
cmp
sub
stos
dec
bound
mov
mov
popa
cmpsl
ja
jno
push
jae
pop
stos
sbb
jbe
jne
add
mov
shrw
jle
pop
mov
add
jae
add
or
sub
pop
xor
es
in
es
mov
mov
lret
lea
in
shlb
pop
ret
popf
or
mulb
xchg
arpl
div
data16
aas
cs
cmp
imulb
repnz
push
or
stc
ss
rcr
repz
dec
icebp
cmp
aaa
jbe
cmp
lret
push
movsl
pop
inc
jbe
xor
or
dec
xchg
push
stos
or
push
sarb
jo
imul
xor
and
cmp
inc
pop
int
les
mov
and
mov
jl
cmp
pop
cmp
push
ret
iret
and
je
mov
push
jb,pt
xchg
xor
sarb
push
mov
ja
leave
cltd
shl
nop
imul
test
aaa
jnp
jg
inc
or
mov
dec
dec
jl
ds
jnp
popa
adc
inc
repnz
test
jecxz
pop
call
arpl
dec
pop
xor
fidivrs
subb
out
loop
enter
mov
rcrl
xor
and
or
int
fistps
sarl
and
push
mov
pop
mov
and
movsb
mov
movsl
mov
inc
mov
clc
lds
push
sub
inc
roll
call
or
add
sbb
out
inc
test
stc
xchg
neg
xor
in
out
adc
fcmovnbe
shll
jecxz
loope
testb
imul
push
jl,pt
xor
or
xor
add
inc
pop
xor
or
sbb
out
mov
outsb
cld
jg
js
fiadds
pop
nop
movsb
fs
pop
es
inc
dec
pop
imul
mov
pop
out
negl
rol
xor
sbb
int3
add
xchg
add
cs
cld
lock
sbb
icebp
testl
lock
mov
sbb
cltd
sbb
add
xor
subl
mov
inc
cli
cli
in
sub
xlat
sub
pusha
mov
pusha
dec
mov
pop
je
insb
in
jne
enter
and
xor
cmp
clc
arpl
fwait
outsl
cwtl
inc
cmp
out
stos
fnstenv
std
insl
push
pop
rclb
cld
cs
stc
mov
push
and
xchg
fnstenv
test
jbe
jns
cmp
inc
decl
je
xchg
inc
jns
jecxz
jbe
mov
inc
pop
fcompl
cld
mov
xor
nop
fdivs
in
pop
xlat
mov
push
xor
insb
pop
cmp
xchg
and
das
pop
mov
lock
in
stc
pop
xor
loope
xor
test
aaa
dec
test
fistpl
outsl
xchg
jle
jmp
and
aam
push
cmp
testl
in
int
lcall
jecxz
jge
add
sub
popa
ljmp
popf
in
xchg
in
popa
cmc
repnz
stos
sarl
lcall
pusha
sub
inc
in
arpl
push
xor
xlat
lock
or
push
xchg
stos
xchg
lods
sbb
repz
packsswb
ljmp
adc
ds
les
sub
cwtl
xchg
sti
insb
inc
es
mov
stos
shlb
rorb
in
popw
ja
cmpsb
shrl
sub
dec
out
loope
es
dec
jle
mov
or
enter
loop
adc
mov
mov
mov
pop
fdivrs
leave
mov
out
adc
xor
daa
push
out
shr
cmp
movsl
mov
pop
out
jecxz
shrl
xchg
dec
cmp
sti
push
cmp
aas
cmp
cmc
adc
clc
mov
pop
adc
mov
mov
jge
cltd
cmpsb
ja
daa
imul
in
cmp
mov
lret
sbb
push
xchg
jle
scas
xor
popa
in
icebp
mov
cmp
inc
jl
fdivs
cmp
lret
sti
shrb
adc
inc
popl
push
and
xor
or
pop
mov
scas
test
xchg
mov
push
loop
or
sub
lret
repnz
sahf
mov
rcrb
mov
pop
sbb
cmpsl
xchg
adc
imul
test
popa
pop
jae
lods
loope
test
fsubs
cmp
inc
fistps
enter
mov
and
cmp
shlb
cmp
cmp
pop
jo
adc
test
clc
push
lahf
lods
jne
dec
xorb
inc
pop
aaa
mov
pop
call
and
jl
in
jbe
aam
outsb
mov
test
xchg
xor
out
adc
pop
xor
xlat
jne
pop
ja
shlb
movsl
jno
lahf
dec
jge
add
or
jg
xchg
jnp
adc
jae
add
stos
in
arpl
inc
pusha
scas
push
test
fs
mov
fimull
das
xchg
and
jle
pop
fisubrs
fidivl
ud1
add
dec
orl
sub
out
mov
inc
cld
enter
xchg
rcl
das
inc
ret
cmp
sub
call
xchg
test
idivl
sbb
xor
int
jge
mov
les
adc
inc
adc
fs
push
dec
repz
fdiv
xorl
push
popf
mov
sub
dec
bnd
fisubl
lahf
mov
shlb
cmc
leave
push
sub
mov
mov
add
xchg
xchg
ret
call
add
add
imul
sahf
nop
mov
leave
xchg
cld
aas
ror
jae
xor
leave
bound
ds
xchg
inc
std
rorl
hlt
add
lret
fisttpll
rclb
jo
inc
pushf
out
xchg
or
mov
mov
cmpsl
fcmovbe
int3
mov
test
test
pop
repnz
int3
xchg
les
jl
inc
in
jp
mov
mov
sti
mov
inc
lret
or
pop
fiadds
or
add
gs
pop
xor
push
mov
mov
jecxz
inc
dec
push
cmp
fidivrl
lwpval
add
fcmovnb
cld
sub
adc
lods
int
or
add
lods
in
test
filds
pop
imul
lret
int3
xchg
insl
lods
ret
test
push
insb
loope
fsubrl
int
scas
xchg
icebp
push
sub
sbb
or
xchg
or
shll
jecxz
dec
aad
add
sahf
out
dec
test
in
mov
outsb
aaa
inc
add
popf
int3
insl
sub
mul
iret
and
ret
inc
jbe
or
and
incl
rcrb
aas
sub
pop
shrl
or
or
fdivrl
mov
mov
ljmp
push
or
lahf
ljmp
pop
fiadds
push
pop
bound
mov
xor
adc
fildll
fs
lcall
mov
cmp
jbe
and
cmp
push
clc
xorl
out
xlat
sub
mov
dec
into
pop
pusha
fimull
add
jmp
xor
xchg
sarl
fisubs
push
aam
or
or
fdivl
out
inc
imul
addl
adc
mov
xor
scas
stos
mov
xor
lds
and
loope
fnstcw
xlat
sbb
sub
shlb
shrl
sbb
in
xor
xor
dec
lock
and
into
fucomip
dec
rcll
stos
mov
es
nop
dec
out
incl
dec
jl
jecxz
mov
notb
jnp
or
pop
decb
les
incl
js
mov
pop
ror
adc
jp
cmpsb
andl
ret
mov
notb
insb
push
jecxz
mov
mov
lds
adc
xor
hlt
mov
test
ljmp
fcmove
sub
or
inc
cmc
pop
mov
cmpl
daa
pop
aad
adc
movb
pop
sbb
inc
ljmp
add
inc
in
jecxz
adc
outsl
outsb
xchg
sub
dec
iret
sbb
aaa
in
pusha
fsubl
xor
int
lahf
jne
cmp
cld
stos
adc
sbb
and
ss
ret
fnsave
pop
cmp
dec
sub
pusha
jecxz
push
popf
aam
inc
inc
test
in
inc
sarl
push
xor
push
dec
es
pop
imul
mov
scas
ret
shll
mov
jae
ljmp
data16
ss
xchg
or
mov
mov
or
testl
cmp
add
insl
xor
add
mov
jo
ror
pushf
ret
pop
fwait
enter
popa
pushf
or
mov
out
inc
cmp
stos
ja
lods
sbb
mov
sbbb
push
cmp
jl
je
mov
ljmp
imul
insl
ljmp
push
rol
loope
lcall
dec
cmp
rol
insb
sub
movsl
mov
fstpl
sbb
out
scas
pop
or
dec
add
fistpll
leave
lcall
pop
xor
test
and
fs
cmp
and
xor
in
and
filds
inc
add
fwait
push
xchg
push
mov
sbb
jl
stos
push
dec
out
es
pusha
adc
out
cmp
cmc
jo
out
fcos
xlat
sub
leave
jp
jb
ja
cmpsl
sbb
jae
jno
xchg
cltd
outsl
push
inc
nop
ficoml
push
out
es
shll
aad
pop
sbb
js
subl
sbb
sbb
test
pop
jge
mov
das
mov
fisubrl
or
xchg
sbb
cs
out
xlat
dec
mull
cmp
jl
das
fdivrs
into
ljmp
and
pop
push
les
push
bound
add
push
cwtl
fdivl
jmp
addl
call
jl
cmpsl
xor
je
insl
mov
or
push
pop
mov
pop
pop
jae
sbb
adc
test
fisttpll
outsb
jae
push
or
call
loope
es
sub
clc
and
or
addr16
inc
sarl
sbb
jnp
dec
insl
in
add
sbb
jp
in
xchg
push
ds
adc
inc
imul
jl
dec
lret
mov
mov
xor
out
mov
es
sbb
mov
adc
push
mov
add
xchg
push
mov
adc
sbb
jo
or
stc
add
jo
mov
dec
pop
lods
xchg
mov
mov
in
push
das
xor
pusha
outsl
bound
xlat
jb
scas
mov
mov
dec
mov
jmp
cli
lahf
fs
stos
iret
cmpsl
stos
xorb
mov
daa
or
popa
or
in
inc
fadd
cld
mov
fists
fwait
cmc
out
fxch
mov
cmpsl
pop
jo
scas
movsb
arpl
sub
lret
add
lcall
js
sub
add
and
stos
insb
out
shrb
adc
sbb
pop
jno
loopne
push
out
subl
aad
jecxz
pop
inc
lcall
aas
loopne
call
dec
outsl
inc
arpl
ljmp
popa
inc
xchg
call
cmp
adc
cld
or
mov
mov
loope
pop
test
dec
xchg
and
push
jno
mov
stos
cwtl
movsw
loop
mov
pop
cs
pusha
push
push
pop
decl
or
sbb
jge
xchg
stos
jg
cmp
jo
cltd
loopne
sbb
incl
and
dec
es
cmp
push
mov
sub
xchg
mov
add
outsb
adc
mov
pminub
enter
test
outsl
adc
rcrb
adc
cmp
push
jmp
mov
aas
inc
mov
sub
mov
sti
lea
cmpsl
push
add
into
aaa
bound
push
mov
adc
stos
sub
and
xor
addr16
adc
std
leave
and
or
or
ja
or
add
loopne
jo
cs
jnp
xchg
xchg
outsb
adc
mov
jo
icebp
in
shll
pop
or
out
ret
xchg
pop
or
jg
out
mov
out
flds
xlat
mov
jg
insb
sbb
inc
mov
ljmp
test
mov
sbb
pop
mov
cli
out
cmp
inc
out
test
clc
out
lahf
push
cmc
test
cs
jnp
arpl
pushf
das
jbe
cmp
es
cmp
cmp
pop
mov
sbb
inc
jge
shlb
xor
das
sub
mov
xchg
pop
mov
mov
pcmpgtb
fnsave
rolb
ljmp
lds
inc
imull
fisubs
mov
addr16
outsl
fsts
push
ds
fs
pop
out
push
lret
out
clc
fidivrs
xor
mov
and
scas
lock
xor
mov
or
cmp
out
adc
outsb
fstpl
xor
call
nop
jae
scas
push
inc
bound
in
xor
outsl
mov
pop
lret
lds
lahf
dec
adc
out
cmp
jmp
xchg
aaa
adc
jle
add
sbb
call
imul
cld
je
inc
movsb
and
fstl
jmp
pop
popa
sbbl
xor
xchg
pop
mov
in
mov
out
clc
lea
push
fsubp
stc
insb
xorb
outsb
dec
dec
mov
jle
fisubrs
xor
dec
loopne
mov
xchg
xor
mov
mov
cs
stos
insl
add
inc
insl
out
mov
inc
jmp
cmpsb
lea
enterw
mov
xor
aaa
jecxz,pn
mov
or
lahf
mov
les
jge
or
jne
dec
testb
xchg
push
outsb
mov
test
fisubrs
jno
mov
lods
enter
outsl
scas
leave
jo
fdivrs
sub
push
aaa
movsb
dec
lcall
cmp
sbb
push
xchg
dec
or
test
jecxz
push
jae
test
mov
gs
cs
out
imul
push
pop
mov
aam
jbe
cmpsl
push
dec
out
dec
sbb
lahf
hlt
jae
jg
jns
and
cli
mov
loope
shlb
mov
or
popa
mov
push
bnd
out
add
inc
xchg
sub
or
mov
jnp
scas
cmp
push
mov
xchg
das
out
inc
mov
enter
decl
insb
jo
mov
mov
nop
ljmp
sysret
arpl
add
sbb
xchg
das
push
pop
hlt
jnp
rcrl
shll
mov
lahf
or
outsb
push
scas
xor
int
or
mov
push
sbb
test
xchg
fmuls
popf
ror
movsl
mov
js
jmp
xchg
int
or
sub
pop
clc
push
xchg
mov
xchg
mov
jge
leave
incb
pop
cmpl
sbb
xchg
sbb
cs
mov
push
inc
ljmp
outsb
clc
mov
mov
pop
and
stos
shrb
repz
dec
cs
mov
iret
lret
test
fistps
adc
shrl
cmp
lea
add
and
jo
out
push
scas
cmpl
sbb
jg
jnp
jno
and
sub
fstp
jno
addr16
in
dec
adc
add
adc
fdivrs
push
popf
push
mov
lret
orl
sbb
ret
mov
movsl
jae
popf
push
mov
fisttpll
mov
push
cmp
enter
mov
sbb
adc
test
in
pop
add
mov
cmp
clc
jo
mov
or
sarl
sub
into
pop
pop
cmp
pop
push
btr
fdivrs
lahf
outsl
cmp
and
iret
adc
mov
xor
mov
ficomps
mov
fcmovnbe
mov
push
cwtl
imul
insl
mov
jno
rcll
mov
mov
pushf
sub
bound
aas
mov
ds
dec
outsb
sub
sarl
jecxz
outsl
pop
daa
andl
movsb
mov
xchg
test
lcall
outsl
xchg
push
jns
imul
mov
inc
aad
repnz
adc
pop
aad
mov
rolb
xchg
cmpsb
iret
sbb
mov
cwtl
iret
pop
xchg
add
popa
cmp
add
xlat
or
mov
stos
xor
sub
cmpsl
lea
dec
rcrl
mov
lods
mov
ret
out
dec
test
jl
sahf
jno
aaa
aad
mov
cld
andl
loop
dec
add
pusha
push
sub
loopne
dec
mov
jns
andb
jge
popf
cmc
movsl
aaa
jg
push
int3
sub
push
outsl
lret
xchg
mov
int
js
push
mov
sub
fcomi
mov
push
test
stos
fwait
das
inc
xor
out
das
xor
mov
jno
sub
and
jnp
push
adc
fisubrs
aas
mov
cmp
loope
jecxz
mov
inc
jbe
mov
cmp
and
hlt
test
shrb
dec
inc
subl
cmp
jne
sub
aas
movsl
xchg
pop
sub
addr16
out
inc
pop
mov
daa
mov
pop
sbb
pusha
mov
sub
data16
cmp
inc
or
jne
xlat
into
sti
popa
test
adc
xchg
mov
and
aas
mov
loop
pop
popf
lret
pop
xchg
cmovs
xchg
push
mov
shlb
jmp
lods
in
and
dec
sub
add
aaa
loop
rcrl
out
lret
mov
int
fsubrs
cmc
out
out
pop
add
sbb
mov
into
mov
sub
das
push
inc
data16
imulb
dec
mov
call
adc
xor
je
ret
sahf
dec
pop
inc
xchg
fwait
xor
or
mov
or
pop
js
testl
xchg
xor
into
fcomi
clc
daa
pop
mov
ja
pop
sbb
jb
inc
pop
dec
jb
and
jnp
mov
push
in
cmpsl
test
sub
mov
lret
mov
int
bound
pushf
add
dec
sarb
ds
pop
xchg
and
mov
lret
sub
sar
std
sub
lea
in
push
or
imul
jp
inc
jb
inc
cmpsb
ljmp
out
cmp
js
xchg
insb
outsb
fdivrl
cmp
ss
push
das
add
neg
xchg
dec
je
mov
cmp
dec
and
sbb
bound
jg
xor
aas
inc
stos
stos
ss
leave
aam
out
jle
sarl
cmp
insb
sub
mov
leave
pop
test
pop
xlat
mov
xlat
push
addr16
sar
jne
push
cmp
into
inc
lret
xlat
repz
push
jp
cli
or
mov
or
mov
jmp
and
insb
mov
inc
js
dec
rep
imul
enter
push
jbe
push
and
stc
add
pop
dec
and
mov
mov
xchg
arpl
test
mov
adc
andb
sbb
pop
mov
call
enter
push
clc
ljmp
repz
stc
mov
push
and
push
push
imul
xlat
jne
pop
scas
fistpl
aaa
mov
dec
pop
xor
dec
imul
loop
in
pop
repnz
mov
cli
cld
movsb
mov
add
cld
pop
xor
scas
xor
inc
push
fbld
int
mov
adcb
stc
sub
cmpsl
push
fidivs
orl
mov
popa
xlat
test
mov
inc
sub
mov
jl
push
shlb
lods
or
cmp
div
push
cmc
fwait
lods
ficompl
jb
arpl
imul
out
cwtl
inc
or
mov
arpl
mov
add
iret
dec
leave
leave
lahf
hlt
ret
out
dec
movsl
push
push
int3
pop
lret
lcall
sbb
insl
stos
and
mov
pop
or
dec
aas
call
jno
test
movsb
mov
aaa
pop
inc
movsl
xchg
jge
mov
cli
in
and
add
jno
mov
ds
in
xchg
mov
or
icebp
mov
sub
mov
out
mov
shl
mov
cwtl
ljmp
aam
mov
rolb
mov
cltd
mov
adc
fcompl
add
adc
inc
cmp
pop
leave
dec
icebp
int3
mov
push
daa
xor
push
mov
push
cmc
cmc
xor
or
int
pusha
xor
enter
push
repnz
inc
pusha
fwait
mov
cld
xchg
mov
cmp
cmpsb
out
dec
push
mov
pushf
mov
xchg
cmp
push
mov
cld
ljmp
loopne
sbb
sbb
mov
rcr
popa
adc
jnp
pop
ds
into
outsb
outsl
in
cmp
mov
mov
test
mov
fsts
je
test
adcl
movsl
sub
xchg
xchg
js
lea
xor
xor
aad
and
jno
lahf
int3
dec
icebp
jg
int3
imul
mov
call
clc
mov
and
test
ss
mov
je
or
jnp
cltd
mov
into
or
dec
jb
cmp
cmc
pushl
xadd
cwtl
sbb
imulb
push
les
cmc
mov
aad
xchg
repz
jg
shrl
cmp
mov
out
loope
lcall
push
push
rcll
out
jge
jno
loopne
sbb
imul
out
popf
fnstenv
add
or
push
jmp
pop
pop
in
pop
int
loope
xor
push
stos
insb
call
lcall
stos
cmc
shrl
mov
imul
or
xor
add
addr16
mov
dec
lcall
xlat
push
popa
pop
out
adc
ds
pop
movsb
ret
imul
inc
or
mov
das
lea
je
xor
push
sub
mov
adcl
test
push
divl
ljmp
xor
outsl
push
ljmp
push
fbstp
insl
test
fists
daa
mov
inc
mov
xor
push
sbb
xor
inc
scas
popf
fistpl
sbb
push
inc
mov
cli
sbb
jl
pop
out
and
cld
push
fstps
pop
push
sbbb
leave
inc
ja
lret
pusha
push
sahf
aam
adc
inc
add
mov
orb
hlt
call
sti
jb
sarl
jl
std
pop
jp
inc
notl
loopne
xchg
cmp
out
mov
push
xor
dec
cli
std
loope
push
xlat
ret
xor
shrl
divb
xor
ds
negb
sbb
xor
and
lods
fsubs
loop
dec
lods
mov
jne
inc
sub
push
xor
aad
inc
mov
js
popl
jle
adc
rolb
das
pop
sbb
leave
sbb
xchg
cmpb
jle
mov
adc
cltd
in
mov
mov
sbb
and
push
in
inc
cmp
iret
sbb
das
push
xlat
or
in
jecxz
loopne
ret
mov
jne
mov
or
enter
mov
pop
test
es
iret
repz
fistps
adc
into
gs
mov
je
xchg
and
jle
sub
inc
cmc
inc
dec
stc
adc
mov
pop
add
inc
leave
pusha
in
das
iret
cwtl
mov
in
notb
loop
jl
lret
pushf
hlt
mov
push
icebp
push
rcrb
test
jne
dec
shl
mov
cld
mov
push
mov
pop
cmp
test
jo
or
add
cmp
cld
jbe
jb
mov
sbbl
cmp
popa
sub
push
pop
xchg
lds
fisttpll
outsb
repnz
subl
test
and
fucom
or
loopne
jns
cltd
or
add
fdiv
mov
and
push
in
into
pusha
test
lahf
mov
out
lahf
clc
ror
lret
mov
xchg
imul
or
push
imul
cmp
gs
push
push
jo
nop
mov
mov
jno
addr16
sub
push
fcompl
dec
or
inc
push
je
sti
stos
rcrl
ret
sub
mov
sub
fpatan
xor
pushf
dec
pop
movsl
inc
cld
cwtl
jecxz
dec
orl
gs
pop
adc
inc
jmp
out
mov
je
test
fcoms
xor
and
dec
cli
mov
outsl
jnp
mov
mov
inc
sbb
pushf
add
push
inc
out
fstl
sbb
fldt
bts
ret
xlat
je
push
add
movsl
test
sub
movsb
push
mov
sahf
mov
into
in
xchg
ret
jge
mov
or
mov
mov
vphadddq
mov
mov
ret
sahf
hlt
cmpsl
sub
adc
mov
shr
add
lods
mov
adc
cmp
fidivrs
push
push
xor
dec
mov
rclb
cmp
mov
das
movsl
movswl
xchg
ret
push
daa
fdivl
inc
cwtl
add
out
or
emms
loop
jb
mov
fimuls
fidivrs
or
bound
xor
std
jns
dec
mov
push
jp
xchg
cmp
mov
xlat
inc
xor
add
add
push
inc
mov
cwtl
iret
lds
daa
or
jp
outsb
fbstp
and
mov
mov
je
pop
popw
cmpl
mov
ret
sub
fimull
das
push
dec
adc
popa
cmpsl
jns
xchg
repz
shll
fs
push
jmp
bound
push
jno
insb
sub
inc
xchg
idivb
iret
jbe
jne
sub
je
sbb
sbb
loop
scas
shll
shl
call
lcall
addr16
cltd
add
pop
adc
mov
sub
rcrl
outsl
fsub
jle
cmp
test
jecxz
inc
jb
push
push
xchg
jae
lret
sub
sbb
pop
movsb
lds
adcl
test
dec
mov
sti
lods
lods
aaa
sti
sbb
mov
xchg
push
jmp
popa
dec
aad
shll
jp
push
in
xor
enter
lret
mov
jecxz
pushl
pop
fisubrs
add
addr16
test
jmp
int3
xchg
imul
jl
inc
push
sarb
jb
jg
in
push
ss
push
cmp
pop
xchg
lock
and
xchg
cmp
test
pop
and
jne
mov
add
je
or
xor
cmpb
es
xchg
test
xor
inc
loopne
lret
or
dec
dec
iret
movsb
mov
dec
sbb
cmp
ss
dec
cmp
mov
push
dec
adc
int
enter
add
cmp
mov
sub
cmp
es
loope
mov
pop
into
scas
aad
mov
xchg
or
push
pop
xchg
cmp
clc
add
pop
test
imul
mov
cltd
lds
sub
push
add
movsb
mov
push
jbe
mov
ficompl
and
test
mov
xor
mov
jno
fnsave
push
insb
or
dec
add
mov
out
fs
jbe
and
leave
call
pushf
jae
mov
outsb
test
scas
insb
popa
outsb
mov
lock
pop
lods
adc
sbb
sub
repnz
lret
push
jnp
cwtl
jb
add
add
rcrb
mov
outsb
daa
int
movsl
or
mov
rorl
push
pop
lret
jns
out
pushf
stos
pushf
movsl
jle
dec
lahf
mov
lcall
aaa
or
idivb
lods
into
in
and
add
mov
outsl
movsb
push
xchg
and
lret
loop
sub
pop
inc
sub
dec
cwtl
mov
test
pop
push
sbbl
mov
cld
pop
ret
mov
mov
mov
xchg
subb
stos
out
scas
nop
scas
scas
jl
and
ljmp
fstl
add
rcl
push
js
lret
dec
insb
dec
jno
mov
lock
ret
paddsw
inc
addr16
inc
inc
push
xor
shl
cmp
mov
test
xor
fistps
pop
scas
xor
leave
pushf
ret
jp
mov
mov
mov
mov
mov
imul
sbb
xor
add
call
in
dec
scas
jge
imul
or
sti
push
fimuls
ret
pushf
jge
mov
mov
cltd
test
insl
cltd
js
or
icebp
mov
jno
das
lret
sub
xchg
mov
inc
icebp
push
cli
and
out
cli
jge
dec
movsb
mov
cwtl
imul
xchg
sub
jecxz
mov
and
scas
dec
fstpt
addr16
mov
add
push
jl
sub
mov
lcall
push
pusha
ds
call
pop
pop
sbb
push
jmp
arpl
add
test
mov
loop
sbb
ret
mov
sub
cmp
outsb
rolb
adc
dec
sti
cs
pop
adc
fisubs
inc
pop
sub
fisubrl
add
push
in
pop
rol
clc
scas
xchg
cmp
jno
test
xchg
lds
js
jno
or
mov
pmaxsw
popf
jno
pop
adc
add
fbstp
cli
add
adc
sub
sbb
fsubrs
movsb
notl
sbb
mov
outsl
insb
dec
adc
or
not
or
cli
icebp
call
clc
jmp
lods
mov
scas
divb
bound
adc
mov
jb
pop
inc
repnz
push
sbbb
dec
cs
xchg
push
lock
loopne
and
aas
jo,pt
push
movsb
adc
inc
call
jge
loop
sub
dec
adc
and
shrl
xchg
bound
xor
add
insb
mull
mov
jle
xchg
insl
subb
addb
mov
inc
ret
sbb
sahf
mov
dec
mov
stos
lahf
fsubs
out
mov
fcompl
jb
and
and
insl
push
mov
std
outsl
xor
mov
test
mov
mov
and
mov
jp
sbbl
push
movsb
addr16
inc
jns
dec
cmp
fcmovne
mov
dec
cmp
and
pushf
int3
jle
lcall
loopne
pop
int
adc
push
frstor
inc
and
add
fnstenv
mov
jle
mov
mov
fisubs
pop
movsb
aad
ss
push
mov
pop
push
pop
mov
loop
push
std
popa
xchg
stos
pop
mov
jp
pop
loopne
sbb
xchg
pop
fsts
ds
roll
adc
insb
or
mov
jp
dec
popa
cli
or
push
xor
in
mov
cmp
ret
hlt
fiadds
xor
dec
xchg
scas
cmp
adc
jecxz
sbb
xor
and
sbb
push
jno
out
xchg
mov
pop
xchg
jmp
inc
jo
cmpsb
sub
xchg
cmpl
lea
test
and
push
test
adc
and
xchg
fstps
mov
out
xor
pushf
or
pop
jp
or
pop
aam
push
push
lods
arpl
push
enter
inc
and
xor
push
jge
mov
clc
jp
arpl
mov
push
je
ja
insl
cmp
cmp
push
mov
dec
ret
xchg
bsr
and
loope
mov
scas
jmp
and
sbb
ret
pop
popf
dec
fdivrl
imul
in
ds
jle
fsub
xor
lcall
push
repnz
sarb
ljmp
inc
popf
push
adc
add
xchg
add
negb
leave
ljmp
fildl
sub
ds
push
imul
and
popf
or
add
xchg
mov
sbb
and
es
xchg
das
push
test
pop
mov
lcall
daa
pop
shrb
ret
je
push
jecxz
scas
jge
dec
sub
xchg
fildl
jno
pushf
add
ficompl
ja
lds
push
testb
jg
lret
dec
int3
rclb
pop
loop
inc
movsb
lods
sbb
shll
mov
push
jo
repz
push
cmpl
ljmp
sub
mov
push
pop
cs
loop
shr
pop
sbb
fiadds
jnp
mov
inc
scas
xchg
imul
scas
inc
cmpsl
mov
fists
xor
stos
outsb
orl
dec
hlt
push
insb
or
dec
jp
mov
cmp
dec
push
or
push
in
notl
dec
xlat
mov
lret
imul
mov
test
loop
dec
xchg
xorl
test
sbb
push
lea
push
xchg
xor
xchg
jmp
ret
xor
call
movsb
orl
cwtl
jmp
cmp
cmpsb
aas
or
dec
cmp
jmp
xor
mov
rolb
pushf
out
add
dec
sbbb
inc
mov
stos
cmc
mov
in
add
nop
movntq
out
subb
or
cld
jecxz
cmp
pop
xor
test
jmp
scas
insl
mov
std
into
mov
ror
lods
outsb
xchg
in
jmp
cmpb
insb
pop
sysret
mov
dec
ljmp
sub
dec
mov
cwtl
or
sahf
jb
aas
inc
mov
push
leave
mov
enter
ficompl
sbb
cmp
ret
insb
lret
test
imul
mov
addb
push
cmpb
js
rcrb
inc
les
xor
in
jns
mov
sbb
sti
xor
fsub
cmp
les
xor
icebp
xor
cmp
cmp
ficompl
add
adc
imull
test
testb
ljmp
shlb
pop
and
pop
push
mov
stos
enter
pop
or
cmpsb
add
pop
mov
imul
insl
mov
add
and
xchg
pop
pop
shrb
in
add
iret
popf
fmul
loope
push
lret
sbb
push
adc
fdivl
rsqrtps
dec
mov
repnz
cmc
rol
sbb
mov
or
adcl
push
xchg
cmp
or
in
jnp
outsb
jno
cmp
inc
aas
fs
sub
inc
push
jo
mov
mov
cltd
dec
push
out
fnsave
std
les
clc
call
adc
jp
or
sti
sub
out
jae
mov
inc
mov
test
addr16
push
loope
lea
inc
dec
sub
mov
daa
jle
sbb
arpl
nop
sub
test
and
pop
sti
scas
cmp
scas
xchg
rclb
stos
ss
lds
and
push
loopne
xchg
js
nop
insl
mov
dec
dec
enter
jecxz
push
xor
sahf
xchg
test
jg
imul
sar
nop
and
into
ret
push
sbb
push
es
and
cmc
loope
pop
prefetch
and
push
add
pop
xor
or
inc
ss
insl
in
leave
cmp
or
bound
data16
int3
fidivl
or
push
or
fsubl
outsb
adc
jle
cli
mov
jg
push
clc
sbb
jmp
push
cmc
fdivl
pop
cmovl
cmp
addr16
add
aam
popa
movups
sub
ficoms
daa
rol
cli
pop
xchg
jbe
inc
movsb
jge
mov
push
sbb
lea
dec
int
std
roll
and
adc
std
ret
cs
push
adc
cmp
mov
sbb
pop
fsin
out
call
or
das
push
out
pop
cmp
cmc
pop
ret
sub
out
rcrb
int3
sub
pop
punpcklwd
sahf
mov
push
test
xor
mov
sub
data16
lea
dec
loopne
call
xchg
lcall
add
int
mov
ds
mov
xchg
mov
mov
shrl
lret
aam
or
mov
repnz
call
repnz
in
and
scas
mov
loopne
in
pop
in
cmp
add
fbstp
sbb
add
add
scas
loop
pop
mov
pop
pushl
pop
xchg
mov
pop
sbb
sbb
addl
dec
lock
roll
int3
orb
lds
pusha
jae
adc
stc
mov
movsb
jbe
movsl
dec
aam
js
mov
mov
lret
popa
or
pop
imul
shrl
lcall
mov
xchg
loop
dec
mov
jp
aas
scas
call
inc
dec
dec
mov
lock
outsb
ds
repnz
add
mov
rorb
test
ds
xlat
xorl
or
sub
int3
mov
mov
fcomps
lcall
mov
fdiv
repz
repz
sbb
mov
push
loopne
in
nop
push
cli
or
fimull
jb
clc
lea
mov
mov
repz
mov
mov
notl
lock
orb
popf
repnz
int
mov
nop
cmp
xchg
cld
cmp
cmp
sub
repnz
jg
add
xor
pop
es
es
xchg
and
mov
pop
xchg
or
fdivr
mov
aad
fsubs
jne
dec
push
and
insl
movsb
fdivrs
test
cmpsl
repz
adcl
pop
pop
mov
lahf
jo
ret
movsl
push
ret
rcl
fwait
shl
lcall
fwait
leave
pop
and
call
dec
jl
in
sbbl
je
or
jne
mov
adc
dec
mov
stos
ds
cs
mov
fwait
inc
lods
sub
testb
cmp
cmp
lahf
das
pushw
stos
xchg
mov
jne
xchg
daa
mov
push
or
scas
out
sarb
shlb
or
ljmp
call
mov
sti
and
push
pop
loop
fstps
add
push
mov
push
jae
pushf
movsb
dec
mov
daa
insl
stos
rcrb
rcrl
sbb
cmc
adc
inc
add
pop
shl
mov
jle
dec
xchg
fisttpl
dec
call
mov
sub
outsb
std
aas
add
pop
out
in
das
fstp
outsl
in
jecxz
mov
push
movl
mov
in
movsb
movsb
xor
cmp
mov
cmp
push
sbb
mov
cmp
aaa
mov
call
daa
fnstsw
rol
jecxz
lret
lods
loop
mov
into
mov
and
xor
xchg
dec
call
lret
cwtl
jg
or
pop
es
dec
xchg
cld
push
dec
and
add
out
cmp
in
pushf
cmp
xchg
pop
xchg
xor
cmp
xor
sub
inc
test
jbe
mov
sbb
in
dec
pop
xchg
in
mov
imul
inc
outsl
push
aaa
sub
daa
mov
pop
xchg
rcrb
jne
add
dec
mov
push
sub
pushf
dec
push
fstpt
pusha
je
aaa
scas
lds
sbbb
es
sub
inc
sar
adc
sbb
or
rcl
outsb
lahf
and
arpl
call
sub
popa
fldcw
push
inc
sub
sbb
sub
shrb
movsb
stos
add
lea
inc
fstps
pop
push
mov
ljmp
std
addr16
dec
mov
out
xchg
and
adc
push
adc
push
pop
movsl
mov
pusha
push
lahf
sub
lret
pop
cmp
lods
adc
cltd
lret
scas
ds
jge,pn
push
fstps
orl
and
pushf
dec
add
push
push
ljmp
cmc
outsb
je
dec
enter
pop
jp
sub
pop
iret
jl
mov
rorl
and
cwtl
outsl
mov
cld
iret
lods
add
addb
dec
mov
js
jne
dec
sub
push
xchg
push
shlb
arpl
or
cld
je
push
hlt
ficoml
or
jne
int
mov
test
inc
enter
mov
frstor
rcl
cmp
nop
xor
sub
sbb
cld
out
mov
xor
xorl
mov
inc
pop
xchg
fldl
nop
fldcw
jle
xchg
cld
lret
clc
mov
shll
jmp
or
shlb
mov
ja
pop
mov
mov
in
mov
loopne
pop
mov
std
pop
sbb
cwtl
cmc
cmpsl
into
in
mov
xor
push
mov
jo
adc
mov
inc
jecxz
mov
jp
pop
xchg
dec
insb
pop
daa
mov
into
inc
in
fst
insb
iret
push
xor
pop
out
loop
pop
jge
inc
inc
decb
jbe
push
mov
jae
xchg
dec
add
mov
lret
insl
hlt
lock
leave
adc
jbe
mov
cmpl
aaa
push
inc
sbb
pop
mov
ret
cli
xchg
xor
mov
sahf
cmp
and
push
xchg
repz
cmp
inc
sub
mov
cmp
inc
mov
sub
cmp
adcb
inc
in
test
outsl
pop
jl
mov
mov
pop
jbe
ret
mov
add
aad
les
or
pop
pop
inc
inc
fcmove
add
sbb
fdivl
outsl
pop
int
test
add
mov
mov
stc
xor
cmpsl
xchg
sbb
pop
sub
jmp
int3
or
adc
dec
adc
repz
dec
leave
sub
sti
dec
ret
ret
mov
sub
loopne
les
sbb
cs
mov
sub
loope
popa
and
xchg
push
cld
js
add
adc
push
loope
add
mov
das
pop
in
imul
mov
mov
jae
pop
inc
pop
iret
pushf
sbb
mov
pop
sub
test
call
add
dec
mov
inc
dec
loope
lods
pop
add
push
cmp
xor
stos
jb
add
cli
push
aam
adc
aas
jb
jnp
add
leave
out
and
or
cwtl
imul
mov
ret
mov
bts
cmp
sub
imul
push
scas
jle
push
orl
jmp
push
enter
lods
sbb
inc
mov
nop
les
cmp
adc
ss
jo
sbb
sbb
pop
xchg
ds
cmp
lods
add
fbstp
movsl
add
dec
inc
pop
add
out
in
dec
iret
mov
imul
push
in
push
dec
lods
in
insl
mov
or
mov
sub
lret
pop
fldenv
push
rcrl
pop
inc
push
adc
dec
js
pop
dec
jnp
pop
push
arpl
pop
outsl
xor
pop
jno
add
and
dec
cs
test
inc
push
mov
sbb
ss
mov
xchg
push
mov
sbb
fwait
dec
pop
lcall
movsl
push
jg
mov
mov
insl
inc
icebp
add
pusha
mov
loopne
pop
scas
cmp
sahf
jnp
incl
sbb
sti
xor
movsb
sub
push
adc
loopne
adc
sbbl
out
cmp
cmp
mov
cmp
mov
xchg
pop
aam
jae
sbb
push
cmpsb
or
out
pusha
cmp
pop
mov
and
insl
xchg
mov
mov
data16
sub
mov
mov
shll
dec
cmpsb
fimull
les
movsb
mov
arpl
test
jmp
hlt
xchg
push
filds
test
cli
data16
out
jns
sub
and
sub
mov
out
cld
inc
addl
sbb
cli
ds
mov
dec
gs
lock
adcl
gs
mov
mov
lea
mov
test
adc
sub
mov
cmp
pop
jp
insl
lds
jbe
fsin
mov
aas
cmp
ret
xchg
push
repz
into
dec
ficoml
inc
add
shll
das
cmp
lahf
pop
jl
xchg
fstpt
adc
imul
ja
shlb
shlb
testl
push
mov
push
dec
mov
jae
lret
outsb
xor
push
add
dec
inc
roll
xchg
hlt
jbe
xor
push
fistpll
hlt
mov
adc
push
loope
mov
and
inc
or
mov
add
jmp
xchg
xchg
stc
fidivl
dec
clc
ror
es
test
push
mov
jmp
or
sarl
bound
mov
jmp
cmpsl
fdivs
add
sbb
clc
inc
iret
stos
mov
repnz
push
ljmp
in
ljmp
or
addr16
imul
jmp
lret
sub
dec
mov
sarb
cmpsb
jns
jmp
fiaddl
cmc
in
pop
and
data16
cmp
loop
sub
sub
sarl
pop
xor
les
adc
stos
pop
and
lcall
nop
daa
cmp
mov
std
mov
mov
nop
and
leave
sbb
dec
test
inc
pushf
adc
and
scas
hlt
fdivrl
shll
lea
call
xor
pop
cld
stc
clc
adc
add
mov
nop
je
cmp
xchg
mov
loopne
sbb
shl
adc
daa
out
push
shll
bound
sbb
mov
mov
stos
jns
enter
inc
add
in
jge
push
xchg
add
lds
mov
cmp
shl
clc
dec
int3
cmp
pop
jle
fldl
ds
push
iret
ja
movsl
pop
xor
xchg
int3
pop
push
xor
andl
pop
mov
daa
push
test
int3
fisubrl
repz
and
and
add
xor
loop
adc
ret
cmpb
js
adc
aas
test
or
fisubs
lret
lcall
pop
mov
je
adc
and
mov
sub
mov
aaa
adc
dec
mov
rclb
insb
add
lea
sub
push
jle
aaa
sarb
inc
leave
clc
pop
add
jp
mov
ret
in
sbb
mov
iret
mov
sti
push
lret
cmp
mov
test
sub
nop
mov
and
fsubrl
inc
jns
sahf
lock
cltd
pop
cmp
orl
xchg
idivl
into
inc
push
dec
mov
sub
shrl
scas
pusha
and
fistpll
out
in
mov
push
push
outsl
or
lods
stc
jmp
orl
les
daa
out
stc
dec
popa
mov
repz
imul
mov
jl
and
hlt
aas
sbb
and
mov
cmp
hlt
inc
mov
sbb
mov
cmp
pop
sub
lcallw
sub
add
sbb
mov
test
jg
inc
adc
push
add
insb
dec
test
xlat
insl
test
mov
mov
lahf
jbe
scas
sub
loop
inc
pop
dec
jg
clc
imul
fiadds
dec
jb
push
aam
hlt
out
cmp
pop
dec
out
cmc
xchg
std
imull
inc
cwtl
sub
xor
in
mov
scas
sti
cmp
xor
out
inc
movsl
xor
or
jl
adc
mov
dec
rorl
add
jnp
loope
xchg
sbb
jne
sbb
xor
jle
mov
pop
cmpsl
cmp
cld
mov
fstpl
ss
test
clc
sub
jp
and
pop
mov
out
lret
cltd
mov
cmp
dec
leave
ljmp
mov
bnd
jo
stos
adc
ffreep
imul
xor
cwtl
aad
rclb
ljmp
pop
pop
cmp
push
shlb
sbb
push
int3
inc
pop
mov
aaa
popa
loop
jne
in
ja
dec
pusha
decl
sub
scas
push
lret
mov
jmp
push
cmpsb
les
test
incl
bound
je
imul
pop
ucomiss
push
dec
jno
adc
mov
fnstsw
or
lea
jmp
test
mov
arpl
sbb
ret
ja
loopne
mov
repnz
pushf
xor
mov
lret
xchg
out
add
sub
xchg
out
cli
or
mov
sbb
inc
mov
cmpsb
and
cmp
or
pusha
jle
and
xor
mov
inc
cmp
xor
cmp
lock
cld
push
cmp
cmpsb
push
dec
push
mov
mov
roll
test
or
iret
dec
stos
bound
stos
mov
jne
popl
cmp
into
adc
add
mov
push
shl
mov
insb
pop
lock
lahf
sbb
sbb
or
gs
or
jecxz
cmp
addr16
lea
and
in
sub
push
mov
xor
add
cmp
sbbb
cmp
xor
inc
pop
adc
mov
adc
mov
xlat
dec
mov
aam
sub
je
es
pop
xchg
xlat
sbb
xor
pop
js
cmp
push
and
pop
fcompl
or
mov
loop
outsl
cmpsb
cmp
cwtl
jecxz
cmpsl
fs
lcall
arpl
mov
inc
xchg
push
mov
adc
and
stc
es
inc
adc
lret
pop
push
adc
xchg
sbb
jae
fsubs
cmp
xor
stos
cmp
adc
imul
mov
out
xor
sub
cli
ds
out
jecxz
outsb
testl
shlb
imul
add
rolb
cltd
mov
out
jno
and
push
jmp
stos
sbb
adc
fucomip
jecxz
cwtl
xchg
mov
movsl
fiaddl
aaa
mov
stos
jne
ja
pusha
push
test
mov
repz
rolb
es
shl
mov
push
pop
inc
cmp
sbb
hlt
sahf
push
ljmp
sbb
cmpsb
orl
fsubrp
out
icebp
fbld
iret
xchg
cltd
and
cmp
loopne
sub
iret
cmp
lds
lret
enter
fwait
aad
rorb
jbe
fdivp
in
adc
lods
sti
bound
loopne
inc
out
movsl
jae
cs
sbb
imul
stc
mov
imul
sub
test
imulb
pop
lea
iret
jae
mov
mov
and
xor
movsl
cmc
mov
test
dec
cmp
mov
int3
and
pop
scas
xchg
jge
dec
push
ja
xor
mov
andl
scas
jae
adc
xor
mov
nop
push
das
jbe
popa
add
sub
mov
jl
xchg
mov
sahf
repnz
pop
push
dec
stos
lods
mov
adc
pop
jne
jp
sbb
sub
xor
mov
inc
out
test
outsb
xchg
or
dec
add
xchg
mov
mov
ds
and
mov
je
sub
dec
sbb
xchg
add
pop
cmp
sub
jns
dec
mov
aam
mov
rorl
push
sub
dec
jb
outsl
lret
addr16
cmp
test
loopne
push
sbb
lret
pop
push
mov
push
inc
dec
sbb
xchg
icebp
das
jl
popa
jp
add
leave
push
sbbl
sub
fimull
setno
mov
pushf
mov
std
or
std
push
mov
jecxz
push
hlt
mov
imul
pusha
xchg
aaa
add
dec
xchg
xchg
insl
sti
and
cmp
fdivrl
cltd
lods
loope
add
mov
std
pop
adc
std
jecxz
in
test
mov
push
test
jp
pop
test
pop
int3
add
jle
hlt
dec
jle
or
scas
outsl
mov
push
adc
push
insl
sbb
mov
sub
mov
in
test
xchg
pushf
movsl
sub
push
or
aam
push
pop
cmpsb
out
fildll
mov
jl
mov
or
lds
adc
lcall
xchg
hlt
jae
sbb
cld
sub
in
or
fsubl
movsl
ja
jo
adc
mov
stc
pop
cmp
xor
insb
jo
add
stc
ficoms
pop
inc
test
repnz
rclb
add
and
repnz
js
dec
or
push
or
loop
dec
in
pop
jbe
inc
mov
sub
pop
inc
enter
cmp
jmp
or
dec
sub
lret
push
xlat
into
or
aad
lock
outsb
push
or
pop
enter
pop
push
and
inc
cmpsb
mov
in
fwait
inc
pushf
adc
bound
push
add
xchg
aas
outsb
jg
sub
inc
push
mov
adc
mov
push
xor
add
jmp
jp
mov
add
mov
dec
insl
jo
xchg
xor
test
sbb
dec
sub
std
pop
sub
int3
cmpsl
into
inc
fstl
in
mov
push
scas
repnz
mov
fstpl
pusha
adc
into
lcall
jp
out
xchg
ds
push
and
out
xchg
movsb
xlat
sub
stos
xchg
cmp
pop
pop
popf
push
jno
mov
test
add
inc
mov
dec
shr
loopne
dec
int
lods
sub
cmp
popa
xchg
push
lcall
mov
push
aas
mov
rorb
incl
outsb
dec
adc
jne
sub
adc
xchg
push
clc
arpl
lahf
pusha
xor
and
inc
dec
push
sbb
insl
dec
mov
loopne
push
jecxz
xchg
rcl
xchg
jae
iret
popa
cltd
into
adc
sahf
mov
xchg
fsubp
ja
push
cwtl
cli
push
sub
out
test
inc
test
mov
fsubp
mov
inc
icebp
pop
sub
insb
in
aad
and
test
loop
and
es
mov
sub
jmp
inc
mov
pop
push
sub
add
jne
mulb
cld
je
mov
add
inc
mov
jge
sbb
dec
out
mov
repz
push
lret
mov
stos
sar
mov
insb
mov
int
sub
jno
or
mov
dec
jae
push
aas
rclb
sbb
jle
inc
mov
stos
daa
pop
mov
xchg
iret
das
ficompl
les
or
sbb
cmp
loope
mov
mov
fiadds
adc
push
out
add
imul
xchg
fidivs
fcompl
sbb
popa
imul
xor
orb
aad
mov
data16
fabs
aam
adc
inc
cwtl
int
add
cmpsb
out
add
sbb
pushf
sbb
cmpsb
cld
cmpsb
cmp
scas
rcll
or
push
dec
imul
aad
add
call
sub
das
bound
call
and
dec
sub
loopne
inc
stc
push
push
push
push
or
lret
or
shlb
xlat
push
jo
push
adc
mov
pop
dec
sti
fisubrl
call
xor
push
das
loope
cmovne
add
call
testl
mov
pop
add
fs
add
pusha
xchg
lods
aaa
aad
sbb
pop
pop
sub
mov
stos
jb
push
cmc
jecxz
cmp
mov
sahf
fldcw
mov
cmp
xchg
and
dec
xchg
sbb
fstpt
fisttps
xor
lahf
test
repnz
fdivl
mov
pop
xchg
xchg
and
leave
mov
addr16
pushf
xchg
and
and
imul
jbe
xchg
push
lcall
mov
xchg
sub
and
mov
pusha
and
fcompl
icebp
jo
repz
or
cli
into
and
adc
loopne
enter
mov
mov
push
push
cmc
pop
mov
or
das
mov
sub
lret
and
cmp
stc
setle
mov
hlt
jae
adcb
ljmp
push
jg
jnp
lahf
call
xor
out
xchg
push
inc
loope
ss
jle
xchg
insb
and
out
xor
std
rcl
cli
lods
push
cmp
xlat
int
xchg
cmp
pop
xchg
and
add
inc
loope
cmc
and
mov
insb
and
add
fs
std
aaa
add
ja
fucomp
mov
cmp
in
test
out
addl
sarl
dec
fidivs
popa
test
inc
cmpsl
push
inc
and
fmuls
pop
adc
ss
jl
cmp
inc
iret
mov
call
pop
jge
lock
call
jmp
cmp
popf
sar
dec
fwait
jns
add
daa
push
xor
pusha
test
mov
or
out
push
call
cmp
rcl
sub
jno
out
hlt
adcb
les
jmp
mov
repnz
mov
popf
fcom
cmp
and
dec
push
mov
mov
sbb
or
sti
xchg
sti
insl
sbbb
dec
enter
cmp
cmpsb
fmuls
mov
dec
stc
out
out
stc
sbb
sub
repz
orb
into
pop
jmp
add
fwait
test
lock
sub
add
push
std
sbb
or
je
fisubrl
lock
fdivr
xchg
dec
dec
mov
fwait
pop
xchg
xchg
inc
add
add
sub
jmp
pop
dec
fs
subl
inc
aad
lds
sbb
or
cmp
loope
sbb
xor
mov
mov
mov
insl
jge
jecxz
in
popf
pushf
mov
stos
xor
sbb
insb
pop
xchg
push
mov
sub
lret
push
push
iret
and
inc
ds
ficoms
jge
stc
imul
cmc
test
lods
pushf
inc
pop
lret
shlb
ss
jbe
pop
idivb
js
mov
pop
aam
xchg
and
push
subb
lcall
and
addr16
pop
enter
or
or
dec
xchg
loop
mov
pop
lret
cltd
xor
test
stos
int3
fidivl
into
jge
lret
pop
jb
repnz
adc
in
rol
xchg
cmp
scas
mov
sub
and
inc
xchg
popa
mov
sub
sub
push
push
jl
movsb
fnsave
in
push
sbb
jp
les
mov
or
xor
jnp
popa
sub
mov
repz
lods
hlt
mov
in
ret
dec
je
xchg
mov
lret
mov
test
jae
out
adc
call
cmpsl
mov
add
sub
and
xor
cld
testl
std
movsl
add
dec
fisubrl
fnstenv
xor
test
and
stc
in
adc
andl
mov
aaa
mov
clc
and
lret
dec
sub
push
jge
push
sbb
jg
cld
inc
jne
push
inc
adc
sub
xor
jbe
cmp
sub
push
pop
movsl
divl
ja
mov
not
cltd
sub
mov
xor
aaa
stos
mov
or
fisubrl
stos
fwait
sub
insl
ficoml
mov
pop
sub
inc
ret
mov
push
pop
sbb
cmp
stos
cmp
dec
lods
lds
test
pop
stos
xor
push
fucom
movsl
and
pop
or
in
jp
cld
mov
jmp
ds
pusha
push
adcl
inc
pusha
sbb
mov
pop
ljmp
jl
pop
mov
into
out
push
xchg
mov
pop
xchg
cmp
push
stc
fadd
das
add
out
xchg
es
notb
lods
in
orb
or
sub
scas
sahf
sub
xor
mov
clc
lock
ljmp
inc
bts
xorl
sub
std
inc
pop
or
xchg
cmpb
xchg
adc
jg
adc
cs
notl
loope
in
push
orb
xchg
loopne
inc
cmp
cs
in
shl
stos
popf
cld
outsb
test
lcall
xchg
mov
aad
in
push
pushf
test
jb
jno
add
cmp
mov
cmp
cli
push
loope
and
pop
adc
jmp
sub
dec
notl
imul
and
xor
daa
es
cmpsl
pop
adc
ds
scas
mov
sbb
adc
mov
pop
xchg
mov
fldcw
call
movsl
jno
out
test
mov
jno
xchg
into
sbb
mov
mov
xlat
sub
or
dec
mov
pop
and
ss
mov
into
xor
cmp
outsb
incb
cmpsb
test
or
sub
cmpsl
mov
pop
dec
jg
xchg
out
imul
adc
stc
call
mov
and
add
adc
jae
fcompl
and
xor
mov
imul
fdivrp
ret
pop
icebp
ja
cltd
sub
xchg
ljmp
pop
lods
jle
aaa
mov
and
mov
or
in
xchg
adc
loope
inc
add
cli
sbb
mov
mov
add
rcrb
ret
ror
or
jb
add
mov
push
jo
inc
test
mov
mov
mov
push
cmovb
in
and
cld
push
clc
outsb
inc
loope
and
into
std
inc
inc
sub
xchg
popa
jle
push
mov
lock
jne
out
cmp
add
cmp
jno
movsb
inc
clc
jmp
and
inc
pop
testl
pop
fsub
icebp
jp
xor
cmp
mov
xchg
pop
aad
or
push
mov
sbbb
mov
fwait
test
insl
imull
aaa
xlat
pop
int3
outsl
js
sbb
dec
lock
mov
mov
fldcw
das
and
mov
pop
mov
cld
fwait
mov
adc
jnp
adc
sbb
push
adc
cs
jb
ret
loope
pop
mov
cltd
lds
cmp
push
lret
outsb
or
sbb
push
arpl
push
ret
jae
test
sub
jmp
push
xchg
mov
mov
inc
dec
in
hlt
xlat
ret
cwtl
out
add
jp
pusha
sar
test
pop
fs
mov
mov
or
dec
mov
daa
popa
sti
rcrb
stc
movsl
or
sti
xchg
imul
pushl
iret
dec
jge
movsb
stos
xor
inc
cs
sub
mov
pop
sub
inc
push
inc
lret
cmpsb
inc
xor
fnstsw
cmc
pop
cmp
addr16
jge
ror
dec
push
pushf
cmp
test
std
sub
clc
push
test
dec
out
fs
or
out
add
dec
aaa
fsubrl
cmp
xchg
sbbb
push
outsl
scas
jne
scas
xchg
mov
jns
dec
add
dec
mov
in
insb
aaa
and
and
and
ror
sub
add
imul
fs
add
add
arpl
cmp
aaa
out
lret
xor
push
lret
lcall
xchg
mov
sti
ja
pop
or
stc
jmp
arpl
mov
lcall
ljmp
mov
or
in
pushf
in
pop
cmp
addr16
sub
out
ret
dec
adc
into
stc
sbb
pushf
jae
xchg
mov
lods
dec
mull
jp
xor
and
out
stc
cmp
dec
pop
or
scas
dec
out
loopne
sbb
jmp
mov
imul
out
sbb
int
jns
into
push
repnz
sbb
movsl
push
sbb
cmp
fnstsw
sbbb
imul
dec
xor
xchg
jmp
inc
adc
imul
lods
gs
jns
adc
push
in
dec
lods
sub
loopne
pop
lods
ja,pn
and
mov
outsb
push
sub
psllw
inc
jnp
bound
sti
or
lret
mov
fadds
test
xchg
inc
mov
mov
mov
stc
add
cmpsl
bound
negb
xlat
or
test
call
push
aad
push
data16
sbb
push
ficomps
jp
xor
pop
shll
mov
lret
notl
test
mov
sarb
sbb
fsts
and
sub
std
hlt
mov
out
inc
xor
adc
xlat
outsl
roll
xchg
outsb
mov
mov
mov
fs
inc
xchg
push
push
test
inc
pop
jg
pop
mov
aad
dec
pop
push
mov
push
pusha
xlat
xlat
jmp
push
sbb
aas
add
shrb
daa
adcl
iret
lret
push
fnstsw
call
insb
mov
icebp
adc
pop
push
incb
cmpsb
adc
mov
outsl
cwtl
addr16
mov
insb
test
loop
mov
std
sbb
dec
add
ja
push
rorb
lahf
sub
mov
push
pop
movsl
mov
ljmp
xchg
inc
mov
out
lcall
ds
sbb
scas
mov
mov
cmpsb
dec
mov
ja
mov
aam
fwait
gs
scas
mov
fsubl
mov
cld
cmp
mov
jbe
dec
outsb
xchg
je
test
jmp
loope
mov
loop
xchg
cmp
push
movsl
out
push
or
mov
dec
jne
cmp
and
add
fbstp
adc
lods
jb,pn
adc
xchg
xchg
xchg
shll
out
insl
mov
sub
cmp
push
jno
inc
push
xchg
mov
mov
or
mov
sbb
xor
adc
push
leave
jecxz
sbb
pop
mov
dec
and
cmp
arpl
ja
lcall
cmp
jno
leave
mov
mov
insb
push
mov
sbbb
aas
test
jecxz
cmp
daa
inc
popa
cwtl
cs
dec
mov
xchg
loop
jmp
lea
xor
ret
inc
cmc
jns
dec
adcl
inc
sub
test
jg
mov
sarb
mov
pop
or
cmpsb
inc
loop
or
push
mov
js
cmc
xor
push
mov
push
mov
mov
push
dec
pop
xor
in
mov
andps
xchg
aaa
adc
insl
cs
lds
jmp
xchg
mul
addb
out
sar
hlt
repnz
test
xchg
test
push
orb
iret
pop
stc
repnz
leave
rcr
xchg
pop
pushf
sbb
pop
ja
nop
addr16
pop
out
popa
sar
pop
xchg
das
call
aad
in
dec
push
xchg
rclb
cld
rolb
pushf
xor
repnz
dec
je
mov
iret
ljmp
sub
rorl
fistpll
and
outsb
rclb
jns
inc
mov
pop
movsl
sub
lahf
orb
pop
jl
outsb
cli
jge
loope
pop
push
jbe
pminsw
out
sarb
cmp
jle
cmp
es
jne
xchg
mov
iret
subb
mov
in
mov
scas
adc
jns
sub
icebp
lahf
jo
adc
xor
negl
inc
push
and
lock
lret
pop
xchg
mov
xor
cwtl
ret
cmp
push
fstpt
and
into
dec
mov
inc
es
fisubrl
js
ja
subb
in
mov
cmp
sbb
pop
fistps
test
dec
outsb
lods
pop
scas
push
das
out
test
or
sahf
repnz
add
xchg
das
js
jmp
mov
adc
jmp
fcmovnu
iret
cmc
mov
jae
in
cmp
add
pusha
xchg
sbb
clc
aaa
out
addl
sub
pushf
and
jae
pop
aaa
cmp
js
cmpsb
mov
int3
jne
in
in
pop
jge
loopne
in
adc
xchg
push
mov
push
aad
adc
in
out
cmc
add
lods
out
jl
jns
addr16
push
jae
pop
mov
adcb
dec
inc
je
ret
or
ljmp
shll
int
adc
ljmp
push
outsb
mov
pop
push
cmp
cmc
mov
leave
in
xor
mov
ficoml
movsb
daa
fwait
sub
test
cmp
sub
inc
cmpsl
pop
or
sbb
jge
subl
sub
lods
xor
std
fwait
cmpsb
icebp
push
push
push
ds
sub
das
xchg
fdivrl
stos
jl
and
js
dec
pop
fs
leave
mov
mov
daa
rcrl
mov
sahf
inc
pop
das
or
int
mov
dec
in
or
hlt
push
lods
sbb
cmp
cmpsb
bound
je
in
mov
fsin
xchg
jmp
ss
insb
jmp
cs
shrl
sbb
shrb
hlt
xchg
dec
mov
mov
out
test
jp
outsb
in
rorl
addr16
dec
int3
sub
inc
cli
fisubrl
dec
jge
jg
sub
pusha
in
push
ds
rclb
push
mov
inc
lods
sub
sub
in
xor
push
nop
stos
or
mov
enter
xlat
call
fisttps
test
aaa
xchg
pop
xor
push
sbb
icebp
xor
std
cmp
mov
push
push
push
shll
loopne
xor
add
jnp
mov
sub
mov
push
cs
lds
mov
loop
cmc
rorb
cmpsb
xchg
adc
pop
adc
push
push
loop
dec
ja
addr16
mov
push
sub
pop
inc
xchg
jo
or
jge
push
pop
mov
test
push
insl
icebp
push
rorb
imul
jne
fwait
in
andl
push
push
jo
push
loope
mov
fisubrs
inc
mov
mov
cmpsb
sub
inc
bound
dec
and
and
and
add
enter
mov
inc
and
cmp
stos
pop
dec
pop
push
cmpsb
arpl
pop
daa
cmp
xchg
test
ja
dec
jno
outsl
loopne
adc
scas
dec
decb
fbld
mulb
fisttpll
test
ffree
das
add
stc
in
mov
mov
pop
jb
dec
cmpsl
cmp
ss
cmpsb
dec
lea
xor
lods
add
sahf
cmp
repnz
lock
and
int
cmpsb
pop
stos
xchg
int3
aad
sub
pop
or
leave
aam
sbb
fsts
mov
pushf
jb
lret
jg
cmp
fcompl
mov
mov
xchg
mov
and
mov
mov
loopne
sub
enter
enter
push
lcall
int
icebp
icebp
or
jno
std
cmpxchg
sub
xchg
inc
mov
xor
push
adc
jbe
cmpsb
imul
int3
pop
lock
int3
sub
xchg
inc
jmp
dec
jbe
mov
mov
sarb
sbb
fwait
movsb
xor
clc
sub
xlat
add
cmp
or
stos
adc
dec
xlat
dec
jge
pop
imul
or
pop
jge
sbb
lret
test
push
ljmp
sbb
jecxz
lcall
jb
push
pop
lret
mov
pop
add
jns
je
dec
out
or
lods
fdivs
subl
mov
mov
add
inc
xor
popa
mov
mov
jle
pop
cmp
shlb
fidivrs
je
pop
mov
sbb
push
imul
pop
fcoms
push
insl
jge
push
enter
xor
adc
mov
inc
call
mov
lods
cmc
sarb
mov
cmp
push
idivb
scas
xchg
mov
xchg
add
insl
push
ss
mov
xor
aas
xlat
fdivrp
cmp
fwait
mov
ret
mov
mov
icebp
jne
jecxz
sti
jnp
pop
mov
icebp
xlat
jecxz
icebp
push
je
sbb
adc
mov
icebp
sbb
test
in
das
pop
add
xchg
mov
cmpsb
xlat
fsubs
add
xchg
loop
mov
xchg
cli
pop
push
sub
fcmovb
xchg
mov
fwait
fstl
jmp
leave
xor
outsb
lahf
inc
add
bound
push
sbb
dec
incb
jbe
leave
pop
mov
imul
hlt
insb
cmp
mov
pop
xor
movsb
sahf
push
js
mov
ja
xor
push
incl
cmpsl
imul
mov
aaa
pop
aam
mov
mov
inc
add
add
jnp
rclb
pop
or
mov
cmc
jge
dec
pop
xchg
outsl
dec
lds
add
mov
jle
xor
jb
pop
fisttpll
leave
int3
sbb
insl
mov
sub
and
into
rcll
inc
jmp
orl
pop
cmp
inc
pop
in
sarb
push
add
and
xor
mov
orl
mov
lods
imul
and
lock
daa
mov
mov
incb
shll
push
jbe
arpl
sti
fs
lock
iret
add
mov
cmp
test
sbb
lcall
inc
mov
jo
nop
pop
dec
and
mov
sub
ret
orl
xchg
fs
hlt
jno
out
dec
pushf
adc
es
fstpl
repz
cli
call
divb
nop
xchg
or
movl
xchg
push
inc
rolb
xlat
divb
fistpl
and
push
popf
add
out
and
test
push
add
clc
fdivrl
pop
nop
mov
fstpt
pop
xor
sti
adc
daa
cmp
test
popf
lahf
addl
je
lcall
xor
not
cmpsb
jp
and
mov
out
pushf
lea
je
adc
mov
jp
aad
xor
call
push
mov
adc
test
jl
cmp
jge
push
push
pop
ljmp
dec
lret
stc
arpl
adc
xor
iret
mov
mov
adc
out
jb
es
cmc
sbb
mov
adc
lea
adc
mov
inc
mov
lahf
sbb
scas
push
in
sub
and
imul
ret
cwtl
inc
mov
insl
in
iret
std
div
sub
lds
dec
inc
pop
bound
cmp
icebp
and
icebp
jp
sbb
xchg
pop
or
sbb
cmp
pop
jp
cli
fisubl
enter
rorl
mov
jns
xchg
jl
js
dec
icebp
mov
cmp
mov
push
add
lea
int
push
pop
fsubr
xchg
lods
or
push
mov
stos
xor
dec
ret
test
lahf
xchg
ret
jae
in
cmp
mov
ljmp
or
dec
push
add
adc
add
push
arpl
jecxz
icebp
cmp
arpl
push
dec
hlt
or
xchg
lea
inc
xchg
jne,pt
mov
mov
inc
mov
ret
repz
gs
dec
cwtl
mov
push
cwtl
mov
fimuls
out
mov
jnp
jmp
inc
sub
mov
mov
and
push
rclb
outsb
xor
stos
cmp
xor
aam
dec
out
lock
fsubp
inc
jb
popf
shrb
inc
push
xchg
xchg
aad
mov
repnz
das
rorl
push
jmp
mov
jbe
cmp
push
mov
cld
mov
mov
cmp
aas
or
mov
mov
mov
fildl
mov
add
fsubrs
shrb
cld
jmp
mov
mov
adc
sbb
test
sub
pop
pop
nop
popa
push
and
mov
adc
nop
lcall
bound
pop
add
mov
push
adc
jmp
and
lcall
fsubrp
dec
mov
or
xor
jno
add
adc
xchg
icebp
inc
fwait
lret
negb
int3
test
adc
adc
je
cmp
testl
repnz
das
rclb
inc
push
jecxz
mov
lcall
xchg
mov
mov
imull
rorl
xor
repz
pop
and
cld
cmp
cmp
jno
stos
out
or
jo
jp
cld
js
gs
hlt
je
in
roll
imul
int
mov
negl
ds
cltd
add
sahf
data16
xor
adc
and
pop
mov
jmp
xor
mov
aad
dec
pop
push
cmp
mov
pop
loopne
out
pushf
sahf
xor
fnsave
push
out
out
clc
cmp
lods
pop
push
dec
scas
rcrb
or
sub
mov
mov
xor
sbb
movsb
sbb
xor
cmp
fstpl
mov
cmp
fwait
cmp
aaa
enter
push
loopne
xchg
repz
ss
inc
mov
nop
jmp
out
cltd
push
pshufw
out
sub
and
push
jae
cli
jne
cmpb
lcall
mov
mov
mov
cs
push
push
div
push
lret
mulb
or
lahf
adc
dec
adc
xchg
sar
push
ds
loope
stos
cmp
or
and
popf
inc
mov
iret
lods
cltd
iret
mov
in
int
data16
adc
ljmp
notb
jo
push
js
or
rcr
mov
cmc
das
xor
ss
pusha
xor
jp
push
add
inc
mov
imul
jbe
dec
cld
fistpl
add
outsl
mov
adc
or
jl
and
das
orb
aad
fpatan
dec
loop
lods
cmp
pop
dec
mov
arpl
mov
cli
out
push
sbb
scas
mov
popa
push
arpl
pop
or
cmpsb
xorl
repz
data16
popf
xor
ljmp
add
shrb
pop
add
push
rcrb
insl
fsubrs
jbe
xbegin
pop
add
lret
jne
inc
mov
ret
adc
ret
mov
dec
inc
pop
mov
or
cmp
push
dec
movsb
adc
lcallw
div
push
add
dec
pop
data16
mov
mov
xchg
lea
cwtl
loop
xlat
adc
out
mov
jge
sub
add
mull
int
jbe
andb
or
cmc
xchg
mov
mov
inc
outsl
fldenv
mov
sbb
push
call
cs
jbe
in
int
bound
inc
arpl
jge
sahf
in
xchg
pop
cmp
sub
sub
das
push
psubb
mov
add
mov
mov
inc
cmp
mov
test
sbb
add
lea
mov
insb
jp
push
ss
fidivl
popf
xor
push
icebp
fwait
test
idivl
cld
mov
testb
mov
pop
icebp
cmp
cmp
ljmp
and
out
cmp
ljmp
xor
adc
sub
mov
rorl
iret
lret
dec
ficoms
stos
pop
in
repz
or
je
add
cli
in
push
mov
pop
fdivrl
outsb
push
mov
mov
push
iret
sub
mov
cli
fnsave
movsb
pop
xor
lock
movl
repz
adc
push
pop
sbb
dec
and
jne
aam
lods
cmpsl
and
scas
lods
call
jae
jmpw
shl
mov
cmc
inc
cwtl
call
or
lret
push
loope
sub
dec
cmp
mov
leave
sbb
pop
and
jne
ret
fwait
out
lea
mov
sbb
mov
lret
mov
pop
push
mov
mov
pusha
insb
in
cmp
xlat
inc
dec
push
add
xchg
movsb
shr
ss
pop
mov
out
lods
mov
rcl
std
in
notb
jge
add
mov
add
sti
insl
dec
shrl
adc
call
sbb
push
or
add
add
xor
or
popf
nop
test
cld
popf
xor
sub
in
pop
pop
fyl2x
cli
xor
mov
stos
inc
add
lea
stos
mull
std
sahf
aad
mov
es
mov
dec
sbb
iret
testb
fwait
inc
adc
jnp
out
cmp
sbb
mov
imul
pop
jno
jne
test
xchg
lcall
test
je
les
daa
je
jecxz
add
pop
imul
mov
jb
mov
pop
bound
lcall
outsb
aas
iret
xchg
or
call
stos
and
cltd
mov
mov
mov
cmc
mov
subl
int3
jge
and
lahf
push
fs
and
call
and
mov
cmp
sbb
xchg
int3
push
pop
stc
or
clc
movsb
subb
cmp
sbb
xor
insl
out
scas
lock
aaa
mov
jnp
inc
int
xchg
mov
cmp
jne
pusha
mov
pminub
pop
jg
dec
jns
repnz
xor
and
cmp
in
cld
stos
cs
mov
aam
orb
push
add
xchg
cmp
orb
cmp
inc
shrl
leave
ret
and
inc
sub
and
iret
ret
lock
aas
out
lds
sub
dec
imul
inc
inc
add
stos
call
push
inc
dec
das
stc
js
mov
jnp
dec
xchg
aaa
outsl
adc
sahf
add
cmp
push
daa
in
dec
ljmp
jb
out
inc
fisubl
mov
clc
sbb
sub
mov
jp
outsl
scas
push
and
and
inc
ret
pop
mov
mov
mov
std
and
out
jnp
pop
nop
cmp
popa
loope
inc
jns
mov
or
jecxz
ds
popf
mov
jl
lahf
lock
orl
adc
pop
push
cmp
jae
inc
in
pop
loopne
mov
mov
movsl
cmp
ja
in
dec
pusha
xchg
push
int
jge
ljmp
scas
in
mov
dec
jnp
inc
jmp
xchg
fdivrs
sbb
sub
push
cld
xor
xchg
aaa
and
push
sub
sub
cmp
sub
push
int
fdivp
sarl
shrb
mov
push
mov
push
xor
nop
out
ffree
sti
xchg
mov
dec
push
jo
mov
and
push
cmp
ljmp
test
outsb
shrl
jnp
pop
iret
lcall
add
ret
mov
mov
and
sti
int3
inc
ret
lahf
sbb
lcall
aad
inc
push
fidivrl
ss
test
repz
inc
test
jnp
jbe
lcall
or
lea
mov
aam
or
rorl
aam
sub
mov
ror
rcll
nop
push
imul
inc
or
jle
lock
mov
mov
movsb
pop
insb
movsl
cmpsl
out
xorb
push
jecxz
sarl
imul
in
sbb
int3
adcb
test
insl
dec
cmp
or
mov
cltd
or
lret
jmp
push
and
stc
aaa
jo
lcall
in
imul
jb
dec
jae
mov
mov
jmp
adc
jbe
mov
sarb
shll
or
scas
mov
mov
adc
sbb
lret
in
lods
ficoml
push
out
icebp
addl
pop
test
insb
cmp
sti
sbb
sub
push
sarb
dec
pop
cmp
mov
fnstcw
inc
repz
jmp
lret
in
sahf
cli
push
in
fwait
fmuls
gs
mov
ljmp
ficomps
pop
das
jae
int
add
adc
sub
mov
iret
pusha
jo
mov
sti
cmp
cmc
lods
mov
xchg
jne
movsl
aaa
shl
cmpsl
and
fwait
call
fnsave
es
in
leave
cmpsl
adc
pop
call
call
or
fwait
out
jne
mov
shr
xchg
dec
in
cwtl
lds
repnz
neg
cmp
in
sbb
lods
mov
out
dec
mov
fwait
or
sbb
and
and
mov
js
and
xor
in
aam
cmpsl
fidivl
and
inc
mov
dec
push
sbb
sub
pop
mov
dec
cmp
xchg
lcall
ss
jns
ja
sub
ficoms
movsb
or
int3
into
idiv
stos
or
mov
dec
mov
leave
cmp
cwtl
cmpsl
sub
sbb
scas
cmpsb
hlt
lods
adc
lret
stos
pop
mov
mov
js
inc
sbbb
out
fistpll
mov
cmp
cmc
daa
in
lret
sbb
fndisi(8087
mull
inc
and
mov
sbb
pop
jae
or
xchg
mov
leave
imul
fs
sbbb
jge
xor
jb
sub
xlat
jle
addr16
lret
sarb
dec
andb
mov
mov
xor
mov
and
jno
fwait
mov
fcoml
adc
out
int3
mov
mov
pop
rolb
nop
xorb
aad
pop
dec
dec
pop
cld
cmpsl
sub
daa
sti
xor
xchg
sbb
mov
xor
gs
mov
xchg
mov
roll
add
mov
int3
filds
je
add
ss
sub
in
add
or
add
adc
lret
incl
orl
gs
cmpsb
in
sbb
nop
test
add
pop
aam
stc
dec
jg
ss
aam
adc
push
lret
xchg
inc
inc
nop
and
jecxz
cmp
insl
shl
shl
in
outsb
popf
icebp
jo
sarl
leave
sub
cs
and
push
adc
sub
addb
cmp
adc
push
test
push
add
xor
repnz
jb
push
stc
or
test
test
jmp
push
sub
push
xchg
cmc
out
aam
mov
sub
mov
fstps
xchg
mov
rorl
mov
xlat
mov
outsl
fldl
xchg
pop
pop
movsl
dec
sbb
fildl
insl
xor
loop
mov
in
cmp
addr16
subl
loope
popf
jmp
pop
stos
ljmp
rolb
sbb
push
xor
xor
dec
shl
inc
daa
test
add
sarl
mov
cs
fcmovu
add
orb
popf
mov
int
aam
xor
dec
push
popf
lods
sbb
outsb
fnstsw
incb
enter
xlat
and
add
dec
stos
push
sub
inc
fwait
pop
sbb
xor
mov
insb
cmc
add
cs
inc
mov
mov
call
and
rcr
scas
cld
aad
sbb
das
pop
mov
sub
in
fcmovnb
sbb
mov
jae
push
sbb
in
pop
dec
add
mov
rorl
cmp
cmc
cli
mov
adc
js
pop
insb
faddl
xlat
notb
rcrl
xchg
pop
push
mov
pop
aaa
xor
addl
push
mov
jle
xchg
xchg
mov
pusha
adc
xchg
mov
movsb
es
stos
jnp
xor
mov
out
gs
jge
or
mov
xor
jecxz
test
adc
lret
lea
add
rcrl
out
adc
push
in
mov
adc
xchg
outsl
xlat
cltd
inc
push
test
or
into
ja
jmp
int3
insb
out
xlat
jecxz
and
adc
mov
stos
mov
jp
sahf
cmpsb
mov
test
out
loope
push
aas
jmp
inc
mov
filds
jae
sub
mov
negl
ret
imul
fiaddl
push
pusha
cmp
mov
pop
add
ja
mov
mov
inc
push
cmp
in
mov
sbb
es
inc
sti
mov
mov
or
xchg
pop
repz
in
inc
shlb
gs
nop
mov
jle
push
pop
in
push
sbb
push
sbb
mov
jmp
test
push
jmp
ja
mov
sbb
ljmp
inc
sbb
dec
bound
push
fsubs
add
mov
lods
xchg
add
jmp
aad
adc
cltd
pop
inc
cwtl
inc
mov
scas
cmp
jns
pop
stc
cmp
mov
aas
sbb
pop
jecxz
xchg
xor
dec
jnp
mov
or
inc
mov
add
xor
pop
mov
pop
call
lret
insl
inc
jl
jb
inc
dec
cmp
movsl
lret
push
pusha
xor
mov
adc
pushf
ret
pop
rep
cmc
push
xor
orb
fwait
push
pop
int3
out
lock
mov
sbb
loopne
xchg
dec
mov
out
out
imul
pop
popf
lock
xchg
add
xor
push
ficompl
or
aaa
cmp
inc
xor
aad
fs
cmpsb
adc
ficoml
push
mov
or
push
imul
lret
aas
xchg
cmp
sbb
rcll
xor
rcll
rcl
lods
lods
lret
enter
xchg
cmp
xchg
cmp
subl
inc
aam
cli
push
xor
and
jmp
mulb
push
push
lods
fsubrl
jg
jnp
repnz
and
sbb
pop
pop
push
cld
xor
sbb
sub
jo
notb
lahf
loopne
or
cmp
jecxz
int3
cmp
cmpsb
lock
lds
arpl
ljmp
pop
notb
push
xchg
in
fsubl
sti
and
pop
jecxz
xchg
jbe
jecxz
push
mov
insb
rclb
aad
dec
fnstcw
xor
stos
loopne
lock
jl
push
xlat
rcr
adc
scas
int
jecxz
pop
dec
lcall
popa
mov
mov
jne
mov
jmp
fldenv
rclb
xchg
loope
mov
imul
cli
insb
dec
push
mov
mov
stos
jo
xchg
addr16
cmp
adc
xchg
add
mov
mov
ret
adc
fcmovnu
xor
nop
mov
push
adcl
aam
test
mov
hlt
add
and
mov
mov
pop
hlt
call
add
or
jae
sub
out
lock
int
stc
jno
xchg
cld
or
pop
jmp
or
in
sbb
xchg
arpl
mov
mov
push
push
xor
nop
adc
sti
and
lock
fbld
je
popf
in
xor
xchg
mov
out
xchg
mov
sbb
fistpl
pop
aas
cs
cmp
or
xchg
outsl
lods
push
xchg
mov
int3
pop
inc
cmp
cs
addr16
scas
pop
call
jmp
mov
jnp
leave
cs
inc
or
cmp
loop
cmp
mov
outsl
popf
xchg
fstps
adc
sbb
add
stc
cmpsl
push
popa
test
push
mov
xchg
rcl
repnz
push
or
popa
push
sbb
fnsave
cmp
push
cs
subb
jns
mov
std
scas
cmp
pop
fsubr
mov
ret
pop
inc
shrb
and
jl
movsl
scas
aad
pop
jp
shl
adcl
je
push
rcr
inc
add
loopne
loopne
sub
fs
pop
cmp
shrl
cmp
loopne
xor
xchg
mov
mov
and
jg
push
pop
mov
xchg
les
jbe
lcall
call
jmp
daa
lods
push
scas
mov
xchg
stos
jg
push
jl
cltd
push
scas
xor
sbb
stc
or
push
pusha
push
movl
test
stc
push
fsub
ja
xor
mov
sbb
shrb
pop
and
nop
adc
out
xor
inc
in
fistpll
mov
sbb
cmc
and
inc
cmpsb
dec
lret
les
pop
cwtl
ja
inc
or
xlat
or
cmp
adc
cmp
add
pushf
gs
or
loope
add
push
push
fs
pop
mov
push
xor
clc
dec
pop
movups
call
mov
sub
jb
and
jne
fwait
pop
out
stos
add
scas
mov
and
cld
ss
loopne
rolb
lret
movsb
in
cmp
mov
xor
mov
mov
inc
mov
jne
ds
push
dec
divb
pop
sub
mulb
lea
sbb
nop
or
add
daa
and
bound
sahf
pop
push
and
dec
pop
fcmove
sub
push
mov
das
ja
fwait
sbb
jno
push
sbb
dec
xor
scas
mov
jne
fnstenv
dec
rol
out
mov
xor
xor
bound
sbb
in
ja
scas
fidivrs
jae
in
clc
mov
cmpsl
fs
ror
push
repz
fsubr
xchg
mov
inc
insl
into
daa
jl
adc
xchg
in
jge
and
or
xchg
repnz
jmp
jge
push
push
ret
jmp
or
xchg
loopnew
mov
rcrb
clc
clc
jge
outsb
sub
stos
cs
sub
std
aaa
enter
enter
mov
decb
ret
jb
cld
arpl
inc
cli
out
pop
shll
add
ret
adc
mov
out
adc
pop
jne
fidivrs
push
inc
adc
leave
cld
fisubrs
push
out
sub
xchg
stc
pop
fildll
orb
and
mov
xchg
sbb
pop
mov
jg
pop
mov
add
or
fisubs
in
xorl
add
rcrb
and
add
push
jg
sbb
pusha
cmp
outsl
cwtl
push
dec
jb
fbstp
push
push
sha1msg1
pop
cmp
mov
mov
fs
clc
inc
mov
rcl
cmpsl
imul
inc
mov
adc
out
mov
das
lcall
mov
cli
push
mov
or
fwait
popa
cmp
call
pusha
insb
cmp
shlb
insl
or
fistpl
mov
xchg
popf
subb
in
or
push
lahf
mov
adc
stc
xlat
push
xor
mov
or
or
cld
xor
popa
sbb
mov
mov
cmpsb
js
xlat
fsubrl
xlat
pop
push
gs
mov
nop
rcr
stos
and
lahf
int3
mov
cwtl
int3
xor
imul
cli
sub
push
sbb
sbb
xchg
jae
sbb
jmp
jnp
stos
sbb
shrl
xchg
add
cmp
test
lock
cs
test
rol
dec
fs
loop
in
in
adc
xchg
pop
xlat
cmc
jle
xchg
out
test
jecxz
daa
pop
dec
jle
mov
test
xchg
or
pop
fdivrs
mov
mov
mov
push
pop
sbb
sahf
ja
xchg
push
not
mov
das
mov
aad
xor
enter
inc
enter
jne
test
fmuls
rorl
dec
imul
mov
pop
inc
out
jecxz
xchg
push
mov
mov
pusha
push
out
ret
loopne
pop
imul
sbb
xchg
movd
in
or
jmp
fyl2xp1
je
xor
jbe
in
or
test
into
jae
jnp
daa
shrb
gs
ret
int3
iret
inc
out
into
adcb
mov
mov
das
jp
orb
fsubp
mov
pusha
mov
push
add
adc
sar
mov
pop
mov
outsb
xor
and
inc
lock
mov
jo
sti
mov
movsb
out
pop
imul
out
stos
add
cli
jmp
insl
push
and
lcall
xchg
fpatan
and
fstpl
loop
shlb
data16
mov
sarb
fistps
or
dec
mov
out
call
sarb
xchg
jecxz
mov
and
push
in
int
daa
scas
scas
pop
sub
decl
adc
xor
cwtl
out
and
sub
cs
ja
jno
fistps
mov
inc
dec
fstps
fsubs
push
mov
push
in
bnd
dec
mov
int3
sbb
push
sub
sbb
lds
or
sub
mov
test
dec
sbb
arpl
xchg
out
movl
fsts
nop
inc
xchg
jg
int3
add
test
xlat
cmpsb
adc
in
xor
mov
repnz
xorl
xchg
aam
in
mov
mov
mov
mov
int3
mov
je
mov
or
xor
ret
insl
xor
gs
jg
shlb
aas
std
stc
test
popf
sbb
movsl
jg
fcompl
add
lar
dec
jle
pop
push
cmpsl
adc
lea
aaa
sub
mov
add
es
or
dec
pusha
cmpsl
inc
inc
mov
pop
gs
jl
imul
pop
lret
or
xchg
mov
inc
jge
or
insb
mov
jbe
xchg
hlt
and
mov
push
test
dec
rcll
mov
xor
ffree
idivb
sbb
jo
js
adc
mov
push
shrb
or
lret
mov
dec
cmpsb
test
mov
sarl
mov
xchg
mov
jge
shrb
xchg
int3
cmp
cmp
leave
and
jp
push
or
mov
test
fs
mov
push
xor
stc
fs
out
in
jmp
pop
sub
adc
sbb
push
in
lods
mov
jae
je
and
lods
hlt
xor
inc
fisubrl
sub
xor
jno
pop
or
pop
xor
out
push
xchg
pop
pushf
loopne
jo
sbb
inc
repnz
cmp
mulb
rcrl
addl
addl
mov
lods
out
in
xor
mov
mov
pop
mov
inc
scas
dec
add
adc
and
mov
add
inc
xlat
daa
push
fdivrs
push
mov
add
dec
and
ljmp
jne
pop
cltd
xor
stos
bound
testl
fwait
pop
dec
insl
int
cmp
cmpsb
lea
sbb
sbb
or
cmp
stc
mov
lret
jge
nop
cmp
filds
mov
sub
push
in
cmp
fs
mov
sbb
stos
jnp
inc
aad
fptan
scas
inc
dec
mov
mov
push
jmp
mov
push
or
sahf
xor
xchg
xchg
iret
aad
sub
ja
js
aas
push
jl
xchg
inc
je
pop
es
mov
sub
pop
dec
jb
sub
jno
fstpl
mov
push
adc
push
xor
aas
push
xchg
add
lahf
mov
mov
scas
add
mov
mov
push
push
les
aad
adc
push
adc
sub
sarl
test
push
sub
sub
loope
jns
mov
mov
jle
jg
mov
dec
xchg
ja,pn
cmp
mov
ret
in
int
scas
sbb
mov
inc
or
in
xor
inc
lahf
mov
sub
out
cltd
mov
xorl
addr16
in
pop
or
cwtl
mov
into
lock
sub
jecxz
or
xchg
loop
adc
scas
lcall
or
inc
mov
xor
mov
ret
cwtl
xor
fmuls
xchg
out
scas
and
cmpsl
mov
jmp
xor
test
xchg
jo
and
scas
imul
mov
aam
popa
fadd
test
sbb
ds
xchg
cli
push
push
dec
pop
inc
ds
pushf
std
inc
aad
add
sub
cmp
cld
jecxz
arpl
js
sahf
in
imul
jb
sbb
sub
incb
incb
xchg
repnz
push
test
or
decb
sbb
lods
lock
ficoms
popa
jns
mov
andl
lret
outsb
cmp
les
mov
stos
sbbl
dec
js
rcr
cmp
xchg
adc
nop
fdivrs
fistpll
in
aas
adc
mov
jge
jbe
push
mov
pop
lods
lds
es
inc
mov
aam
cltd
test
mov
mov
outsb
je
xor
mov
fwait
bound
ss
and
cmp
stos
aaa
adc
pop
adc
movsb
push
negl
xchg
aam
mov
cmp
ret
xor
fwait
mov
pop
mov
pushw
sbb
xchg
xchg
sbb
dec
fdivs
sub
or
sarb
pop
std
sub
jmp
add
xor
repnz
out
sbb
and
pop
test
stc
fisttpll
and
inc
mov
std
int
imul
int3
pop
cmpsb
or
imul
mov
ljmp
les
jbe
scas
push
rclb
xchg
xor
into
jecxz
insl
into
adc
add
or
cmp
sbbb
div
inc
push
ficompl
xor
test
das
cld
push
and
cmpsl
mov
in
shll
in
int3
stos
jp
insl
loope
xor
push
xor
scas
loop
into
je
push
xor
insl
push
xchg
mov
sub
ret
add
and
repz
xchg
or
popa
test
jg
jge
hlt
inc
movsb
cmp
sbbb
sub
call
or
dec
dec
jb
cmpl
or
xlat
test
aaa
push
cli
mov
cmpsl
xor
fsts
movsb
shrl
ret
add
mov
fwait
and
shlb
outsb
shr
ds
int
mov
or
pop
sub
dec
push
mov
or
or
aad
in
sub
cmpsb
dec
adc
adc
cmp
ret
pop
cltd
ret
hlt
sahf
xor
jo
mov
jnp
dec
popf
xor
add
lods
inc
or
cwtl
xchg
xchg
mov
stc
outsl
hlt
sub
xchg
stos
leave
or
xchg
cmp
sbb
cmp
adcb
jp
dec
arpl
mov
ja
xchg
pop
lret
cmp
inc
adc
lea
xchg
fcoms
jl
push
mov
and
xchg
out
pop
inc
stos
pop
inc
imul
xor
lret
cs
sub
call
mov
je
jmp
inc
shll
jg
mov
outsl
inc
js
adc
push
lods
xor
cmpsb
hlt
adc
and
test
negb
mov
in
pop
in
jb
popa
mov
or
fimuls
pop
jb
sub
mov
lcall
lahf
out
jb
insl
adc
cmp
jl
xchg
fisubs
adc
cmp
xchg
sub
insl
sti
xor
pop
lea
call
cmp
ja
std
jecxz
mov
lock
shlb
lahf
sahf
rcrb
mov
jnp
lret
popa
jmp
mov
test
lret
push
out
lcall
push
jne
pop
in
repz
sbb
add
adc
leave
xor
adc
aaa
ret
adc
jmp
rcl
adc
popf
fcompl
jmp
xchg
ss
mov
push
popa
xchg
or
shll
push
pop
pusha
fwait
addr16
sub
or
lds
leave
cli
imul
pop
loopne
pushf
out
xchg
mov
roll
gs
xchg
push
pop
rcrl
je
fistps
into
fs
xor
jle
dec
mov
insl
adc
nop
xchg
idiv
pop
push
sub
test
repz
sbb
sub
mov
cmp
jl
mov
xlat
imul
push
push
fs
push
mov
cmp
and
in
cli
xchg
mov
jae
inc
add
push
mov
enter
jp
lods
adc
mov
push
jns
icebp
jbe
sbb
sbb
nop
and
pop
xchg
repz
jno
pop
std
int3
pop
ljmp
fnsave
push
pop
dec
loop
sub
lock
dec
inc
nop
movsb
punpckhdq
repz
out
fadds
jno
imul
loope
xor
sub
iret
call
sub
sbb
and
aad
scas
xchg
imul
leave
jl
cmp
cmpsb
pop
dec
and
mov
jbe
js
popa
lods
out
js
adc
fsubr
lock
push
mov
xor
hlt
cmp
mov
clc
pushf
pusha
cmp
les
cmp
stos
jl
or
sbb
into
cmp
sub
lods
xchg
loope
jp
adc
scas
scas
push
dec
xchg
insb
dec
cmp
sbb
push
xchg
pop
inc
lret
cs
daa
and
pop
jns
or
sti
mov
leave
sub
int
lock
push
out
pop
in
mov
aaa
lods
xchg
or
iret
fwait
insl
pop
sub
scas
sub
sub
repz
aad
movb
repnz
jne
lahf
and
xchg
hlt
or
adc
cwtl
xchg
popa
lods
sahf
mov
lahf
test
xor
mov
jb
loope
cltd
outsl
ja
lods
xchg
mov
sbb
pop
or
add
sti
popl
add
cmp
xchg
insl
lea
std
or
xchg
lock
pop
cs
mov
push
lea
push
subb
sbb
dec
bound
shrb
fsubl
dec
sub
sub
mov
push
xor
sbb
mov
push
aaa
or
pop
mov
xor
inc
shll
rorl
imul
sar
lods
mov
lods
insl
adc
ljmp
push
dec
std
cmc
push
int
pop
scas
fimuls
mov
sub
xor
sti
fists
cmp
mov
mov
arpl
movb
push
mov
enter
ror
add
adc
dec
jne
add
lret
orl
clc
subb
push
adc
je
mov
inc
sarl
inc
cmp
icebp
pop
je
gs
xor
adc
loopne
andl
mov
inc
lcall
data16
xchg
insl
pop
cs
int
cmpsb
pop
add
popa
hlt
iret
mov
mov
mov
stos
out
xlat
mov
call
in
adc
xor
outsb
pop
test
mov
xlat
mov
scas
fbstp
pop
xor
int3
cmp
pop
loopne
and
mov
xorl
test
xchg
jo
xchg
jno
and
add
mov
sarb
or
clc
mov
inc
jae
clc
pop
arpl
cmp
insb
or
push
sub
imull
mov
ffreep
aaa
cmp
scas
jge
adc
cmp
aam
lock
ja
insb
rcrl
cmp
pop
pop
pop
mov
addr16
cmp
push
lret
shll
clc
or
push
cmp
jo
shrb
pop
aaa
mov
sbb
and
jns
jbe
fstps
fs
insb
ss
aam
or
mov
lahf
es
insl
test
popa
nop
andl
xchg
mov
pop
enter
cwtl
jo
cmc
dec
inc
adc
xor
dec
ret
bnd
leave
jecxz
je
ds
pop
pop
js
mov
mov
gs
out
cmpsb
or
push
mov
or
dec
movsl
mov
jl
fs
cmp
das
scas
jge
push
repnz
xchg
sahf
or
xchg
and
sub
or
adc
pusha
jb
inc
movsl
push
dec
ret
xchg
les
adc
mov
dec
fdivs
dec
xlat
xor
mov
ret
or
mov
mov
rclb
insl
jbe
jge
inc
insl
mov
nop
imul
call
adc
test
jb
testl
xor
out
pop
jns
aaa
cs
jle
xor
xor
inc
cmpsl
add
sbb
idivb
out
adc
dec
or
bnd
and
add
jno
aas
test
xorb
dec
sti
test
test
xor
jmp
push
xchg
xor
out
pop
lock
mov
xchg
rorl
push
faddl
out
stos
xor
and
mov
add
into
imul
xchg
add
jne
mov
lcall
inc
pushf
pop
int3
cld
xchg
pop
mov
mov
mov
xor
dec
lea
cmpsb
dec
data16
out
xor
add
popa
xor
push
mov
push
rcll
pop
insl
leave
in
pop
pop
lcall
add
loop
sbb
rcr
cmp
pop
add
sbb
mov
xor
pop
xchg
imul
in
jns
out
inc
adc
scas
mov
aas
jge
mov
test
cmp
inc
shlb
or
jl
sti
movsb
add
mov
cmc
xchg
mov
mov
pop
push
notl
cli
push
push
inc
mov
scas
xchg
je
fdivr
out
and
pop
and
or
lock
std
insb
rolb
push
mov
xchg
arpl
andb
mov
jle
movsb
and
pop
jmp
nop
mov
movzwl
shrl
jecxz
mov
cli
pop
xchg
xchg
mov
push
xlat
xor
shlb
mov
pushf
fstl
gs
lea
mov
mov
add
bound
leave
movsl
sbbl
nop
fs
movsl
jns
xchg
rolb
mov
xchg
jns
cmpsl
hlt
iret
loopne
outsl
and
fidivrs
cld
fwait
push
push
xor
out
call
jno
xchg
add
repz
add
or
dec
lods
push
jne
jb
int
fcmovnb
xchg
sub
and
cld
jge
cmp
mov
daa
or
and
push
pop
fmuls
repz
and
pop
push
loopne
sarl
cltd
ret
loop
fisubrs
push
sub
bound
jns
pop
pop
xor
aaa
mov
mov
push
jbe
scas
out
jge
sbb
push
push
push
bound
scas
loope
scas
filds
je
add
xchg
lea
xchg
andl
aam
pop
cltd
pop
mov
mov
sub
push
iret
test
adc
negb
pushf
mov
lcall
fcoml
push
mov
mov
cmp
xlat
xor
xchg
loop
lcall
roll
sbb
loop
js
mov
xchg
test
pop
insl
data16
outsl
jmp
or
aaa
cmp
pop
inc
repz
js
jl
push
mov
adc
mov
shlb
and
cmp
sub
jg
jmp
sbb
or
lahf
cmp
cli
or
xor
cmpsl
xchg
xchg
add
sbb
mov
sbb
test
je
lods
js
add
repnz
test
pop
stos
cld
loopne
mov
ljmp
unpckhps
inc
and
sar
rcrb
aaa
add
clc
or
into
in
test
xlat
fs
iret
add
push
sbb
out
xor
in
or
push
fs
or
das
pop
sbb
out
iret
les
std
stos
ljmp
mov
mov
test
mov
or
ret
cmpb
arpl
stc
mov
push
mov
bound
dec
pop
adc
hlt
shrl
xor
inc
lods
mov
data16
adc
leave
subl
dec
scas
loopne
int
pusha
jecxz
mov
daa
cmp
pusha
xchg
mov
pushf
stos
mov
or
xor
or
sub
xor
push
jle
ds
fdivrs
into
push
fs
pop
addl
dec
add
xor
ret
int
lret
lret
nop
jl
movsl
mov
mov
enter
rcl
out
rcrl
jle
cmc
pusha
movq
pop
jmp
popf
inc
xchg
loope
in
mov
push
and
gs
adc
and
sub
inc
popf
add
jo
divb
add
push
fsubrl
sub
out
pop
shll
loope
jo
mov
pop
out
fisubrl
jg
mov
aas
push
fnsave
into
pop
adc
cmp
lock
push
je
jg
pop
and
inc
outsl
outsl
sbb
pop
dec
mov
ficoml
inc
in
aad
insl
repnz
stos
js
int3
add
out
cld
into
call
std
adc
ds
push
adc
dec
jae,pt
mov
push
je
jae
xor
pushf
pop
mov
xor
cmc
fwait
xchg
pop
les
or
xchg
push
jbe
sbb
outsl
add
add
call
add
fwait
nop
jo
cmp
pop
repnz
dec
push
popf
js
cli
bound
inc
cmc
jmp
mov
dec
data16
shll
push
jae
dec
jl
pop
mov
mov
inc
sub
loop
and
fidivrl
sub
and
aam
mov
and
fistl
mov
dec
sub
jmp
into
ja
dec
imul
addl
xchg
out
mov
xor
repz
add
mov
jg
mov
mov
sub
roll
or
mov
add
jecxz
bnd
rcrb
mov
sbb
sub
push
movsb
jne
jg
mov
pushf
jg
popa
mov
loope
jae
hlt
aaa
add
adc
jge
in
push
mov
out
fiadds
mov
inc
icebp
lods
lods
movsb
xchg
push
xchg
lea
test
xor
inc
ljmp
pop
cld
jecxz
or
ljmp
add
inc
lock
xchg
fistpl
sbb
or
pop
jne
sub
aad
popa
jnp
xor
sbb
repz
and
test
in
adc
das
inc
mov
cwtl
jno
ds
clc
xor
int
fwait
xchg
lods
lret
mov
in
dec
push
test
fidivrl
inc
loope
push
stos
mov
xchg
dec
das
stc
popa
cmp
xor
push
hlt
enter
lock
lds
pop
loope
cli
jo
sub
and
pop
mov
inc
dec
jge
lds
cmp
shll
aam
sbb
pop
xlat
addr16
out
cltd
xchg
neg
dec
int
fs
inc
or
sahf
xlat
pop
stos
shll
fmull
pop
fsubrp
repnz
fistps
outsl
adc
pop
mov
div
popf
rolb
mov
scas
or
fs
push
repz
pop
ret
int3
icebp
xor
fst
repz
inc
ja
aaa
fists
fsub
pop
lret
outsb
or
lret
pop
mov
and
pop
sub
dec
fdiv
das
addl
dec
loop
sub
popa
iret
cmp
cld
push
mov
xchg
jmp
rolb
arpl
fidivrl
mov
fstl
adcl
insl
aas
xchg
dec
mov
shll
xchg
mov
stc
xchg
push
mov
xchg
pushf
adc
imul
pop
jp
pop
aad
pusha
cmpsl
mov
das
cld
or
lods
pushl
mov
cmp
lcall
je
out
jnp
mov
xor
int3
out
stc
jmp
or
clc
jp
ss
mov
imul
xchg
and
shrl
int3
negl
movups
push
xchg
sbb
pop
iret
ror
mov
dec
jg
test
or
enter
pop
mov
je
gs
mov
lahf
rclb
sub
notrack
hlt
adc
cwtl
divb
js
mov
pop
dec
mov
mov
cmc
sub
sti
shrl
mov
pop
inc
push
clc
xor
cmp
push
movsl
or
clc
fstp
sbb
xchg
rol
sub
sub
add
fiadds
shlb
cmp
hlt
mov
inc
pop
sbb
arpl
cmp
cs
cmp
outsb
push
pop
icebp
sub
inc
cmp
rorl
add
mov
mov
mov
lret
mov
hlt
loop
mov
out
arpl
rcrl
add
pop
pop
dec
out
fists
inc
jae
cmp
mov
push
pop
sub
dec
in
rcrl
pop
mov
lds
adc
and
cmp
mov
in
adc
loop
movsb
out
add
out
jnp
sub
jmp
push
hlt
push
insl
and
cmp
pop
push
jg
mov
call
xchg
mov
loope
test
out
or
repnz
pop
add
rol
mov
mov
pop
clc
sbb
mov
enter
mov
fstps
or
dec
sub
sbb
dec
fcompl
mov
mov
mov
and
cmp
test
push
pop
ret
add
sbb
fisttpl
xchg
lock
xchg
pop
hlt
mov
loop
inc
push
xor
sahf
aaa
and
pop
cmp
jmp
nop
das
inc
push
pop
fbld
dec
ljmp
ss
jnp
jnp
dec
mov
cli
inc
fisttps
rorl
mov
xor
data16
mov
adc
fnstsw
push
mov
dec
sub
sahf
test
xchg
clc
ret
push
adc
and
adc
xor
es
fsubrp
pusha
scas
paddusb
mov
dec
imul
add
jl
xchg
jmp
sbb
popa
fisubs
adc
mov
xchg
cmc
loope
shrb
pop
popa
dec
mov
popf
pop
iret
pop
fistl
rolb
clc
jmp
mov
jge
xor
jg
xor
xrelease
movsl
out
xor
sbb
cmpsb
cmpxchg
xchg
movsb
ja
mulb
add
xor
mov
ret
scas
xchg
jno
ljmp
test
sbb
push
mov
loope
repnz
ret
jb
jns
cmp
push
mov
outsl
scas
jae
mov
sub
out
or
sbb
push
data16
stos
mov
stos
mov
rclb
in
inc
xchg
and
sbb
jbe
aad
iret
push
imul
in
ss
cmp
mov
cmc
fstps
pop
cmp
mov
jne
xlat
jg
xchg
jno
leave
in
jb
js
push
sbb
push
mov
add
pop
aas
or
ss
cmp
mov
mov
xchg
pop
scas
inc
push
xorb
aaa
fs
cmp
in
decb
insb
insl
adc
aam
xor
stc
xchg
sbb
adc
adc
cmp
push
call
mov
add
sbb
xchg
mov
pushl
xor
mov
mov
iret
inc
pop
xchg
pop
popf
loop
les
fwait
dec
outsl
dec
test
cwtl
xor
cld
or
mov
xchg
fmulp
enter
adc
cmp
mov
fidivrl
sbb
pop
xor
pusha
aad
pop
int3
mov
cmpsb
fisubl
std
pop
pop
inc
loopne
push
sbb
jmp
push
cmpsl
repz
js
jmp
adc
inc
clc
lahf
fmull
add
inc
das
dec
ret
push
scas
out
mov
mov
mov
mov
dec
add
addr16
movsl
pop
je
das
jl
xchg
jmp
mov
enter
push
push
cmp
stos
add
jns
fidivrs
stos
add
inc
cmp
jg
adc
sbb
jnp
test
jl
jnp
test
dec
pop
pop
and
rep
filds
dec
ret
outsl
clc
or
ss
in
loopne
into
decb
lea
cmpsb
sub
movb
out
sub
out
sub
xchg
xlat
mov
aas
pop
mov
scas
lret
jp
mov
or
sub
rolb
dec
cmp
andl
pop
leave
std
pop
jae
ljmp
or
jne
icebp
rcrl
int
jle
in
popa
fisubrl
dec
push
lea
mov
out
aad
outsb
jmp
pusha
push
jno
mov
aam
dec
cmp
sbb
push
sub
xchg
sahf
adc
fcom
push
inc
rcll
push
ds
data16
repnz
mov
inc
cmp
push
mov
or
adc
xchg
loope
xchg
xchg
call
xchg
adc
or
xchg
jb
jl
lea
xlat
sub
push
cmp
iret
mov
inc
negl
idivb
call
pop
popa
mov
xchg
data16
loopne
cmp
das
sbb
jne
mov
test
mov
stos
nop
or
mov
mov
inc
pop
mov
fisubs
add
mov
mov
and
xchg
push
jmp
aas
shlb
jl
xchg
add
jno
jge
clc
xor
mov
mov
int3
jecxz
ret
jp
cmpsl
jmp
out
cwtl
push
popa
or
and
mov
fnstsw
xchg
psubd
movb
push
lea
cmp
mov
push
jp
repz
sbb
cmpl
sbbl
push
dec
pop
sub
addb
rcr
xor
lea
jo
ret
stc
cld
mov
in
popf
inc
clc
or
jno
in
jle
push
mov
xchg
ds
hlt
push
addb
pop
mov
inc
push
sbb
mulps
inc
icebp
jnp
jmp
sbb
mov
adc
bound
jno
lahf
lcall
pop
mov
ja
fmull
pop
lods
rclb
xor
jecxz
fwait
popf
fidivs
pop
xor
rolb
inc
cmc
clc
cmp
jl
jb
and
repnz
mov
sbb
inc
cmp
dec
imul
imul
dec
out
fimuls
sub
test
addr16
icebp
cmpsb
repz
and
cmp
dec
lret
clc
lret
les
js
repz
lcall
das
jo
adc
in
or
fs
lret
ret
pop
xchg
test
movsl
sub
pop
pop
or
adc
push
leave
push
fidivl
addl
mov
mov
fimull
mov
sub
in
mov
mov
push
mov
mov
sub
das
int
mov
add
mull
dec
shlb
cmp
flds
idivl
jo
orb
push
mov
jmp
cltd
lcall
aad
add
arpl
or
xchg
add
cmp
mov
scas
loope
mov
icebp
pop
mull
movsb
pop
mov
jb,pt
fcomps
insl
sbb
add
test
mov
lods
push
std
mov
dec
dec
imul
andb
mov
filds
xchg
jge
addr16
xor
push
ja
pop
aad
add
in
out
and
push
push
sub
push
scas
mov
loopne
stc
imul
push
xchg
hlt
ljmp
sti
rorb
andb
inc
orb
pop
cs
mov
push
pop
jle
into
mov
jl
jb
dec
es
sub
cwtl
loop
cmp
mov
iret
inc
insl
xor
inc
testl
dec
mov
ficomps
in
pop
out
push
js
jbe
sub
lcall
mov
insb
sbb
xchg
lock
cli
arpl
loope
jo
add
xchg
aad
sub
std
gs
stos
xchg
xorb
push
int3
pop
mov
pop
aaa
xchg
xor
and
jb
xchg
sbb
jle
lods
jp
imul
punpckhwd
jmp
pusha
jecxz
jo
jmp
xor
scas
adc
inc
dec
popf
xchg
dec
aad
inc
mov
inc
repnz
hlt
les
cmp
sub
adc
shrl
sarl
lcall
inc
sub
sub
fcmove
js
mov
mov
flds
sbb
sbb
aam
stos
setle
xchg
inc
pop
jbe
jns
mov
stos
scas
repnz
pop
aad
scas
mov
jge
jbe
iret
sbb
cmp
push
cmpb
and
cli
inc
xchg
cwtl
xor
mov
or
out
scas
jg
negb
dec
leave
add
dec
rep
into
pop
fcomps
xchg
push
xor
in
mov
jp
sbb
cld
xchg
in
jne
enter
movsb
inc
scas
fadds
rolb
fucom
bound
inc
lods
or
into
mov
aam
add
dec
add
cmp
and
inc
mov
dec
outsb
aas
or
or
jg
enter
aaa
mov
inc
addr16
fldt
imul
mov
mov
mov
xchg
and
or
ljmp
lds
stc
inc
jne
ja
sub
jb
shrl
mov
mov
bswap
aaa
mov
xchg
or
in
incl
outsb
test
xchg
insl
cmp
insb
fld
addr16
loope
sbb
lds
jo
sbb
mov
js
sbb
mov
xchg
cmp
pushf
dec
push
fidivrs
mov
pop
cmp
mov
lds
andl
cmp
xor
fcompl
jne
add
test
mov
aad
jle
jno
sbb
scas
jo
out
jl
xor
push
fsubl
push
pop
out
jle
add
mov
jb
sub
pop
mov
aad
test
jp
lret
sub
arpl
dec
bound
sub
jg
dec
inc
sub
mov
gs
aas
lock
adc
or
shrl
lret
or
cmpsb
adc
repnz
sti
mov
xchg
jecxz
sbb
imul
push
loope
cmpsl
lods
jmp
scas
jne
repz
xor
arpl
push
out
shll
sbb
push
mov
dec
lret
mov
push
cmp
andb
adc
repnz
out
insb
bound
inc
pop
fsubs
push
jp
pop
and
xlat
cmp
insb
pop
jo
or
pop
cmpsb
pop
ficomps
xor
jo
dec
mov
add
in
pop
ret
pop
inc
xchg
icebp
add
jp
es
cmc
jbe
inc
ds
fwait
push
vsqrtss
int
mov
adc
out
mov
lret
mov
dec
pop
out
push
cmp
sub
sub
daa
ss
or
mov
test
pop
ret
dec
cld
pop
pop
or
xchg
into
jecxz
or
push
add
icebp
sti
stos
pop
aaa
nop
pop
pop
adc
scas
lahf
xchg
xchg
cld
inc
sbb
sbb
addr16
loope
mov
jnp
xor
fidivs
push
jne
outsb
lret
sub
das
adc
push
and
cmpb
out
rorb
sbb
pop
cmc
stos
adc
or
sub
popa
rcrb
adc
push
cld
es
mov
inc
pop
sbb
jmp
cs
ljmp
xorb
xor
inc
mov
ss
push
sbb
cli
adc
push
imul
cmp
sub
xor
or
rcll
push
pop
mov
aaa
pop
xor
imul
xchg
imul
sub
aas
add
pop
mov
push
int3
mov
je
add
adc
xlat
xlat
test
mov
or
in
jno
mov
inc
es
adc
cltd
pop
roll
mov
call
fistps
pop
stos
mov
add
sub
mov
jno
lods
data16
sub
js
lcall
pop
iret
fildl
test
in
aaa
arpl
fnstenv
dec
push
lret
sbb
test
inc
stc
xchg
jl
jmp
lret
sub
jnp
xchg
dec
outsl
cmp
iret
loopne
xor
aaa
arpl
inc
add
imul
push
aaa
mov
out
pop
je
ljmp
out
dec
fsubl
xlat
add
xchg
rclb
outsl
lock
lock
add
shll
inc
gs
and
mov
lcall
sti
dec
push
leave
nop
mov
mov
pop
cmp
pop
mov
dec
subb
lods
lods
scas
fiaddl
test
pushf
xchg
mov
cltd
jle
lds
icebp
sbb
rclb
lcall
fisubl
sub
std
xor
cmp
push
cwtl
xchg
sbb
sbb
jp
cmpsb
loop
xor
daa
jl
mov
test
mov
sbb
pop
cwtl
pop
mov
cmp
or
mov
mov
mov
imul
xor
add
pop
call
jne
mov
cmp
inc
fists
insb
cmp
lcall
add
jecxz
fisttps
mov
out
or
pop
pop
fucomp
neg
ficoms
pop
or
lods
mov
jbe
adc
outsl
inc
jge
push
xlat
aam
fdivrl
loop
sbb
shlb
sbbl
sbb
inc
insl
leave
sbb
je
or
jg
dec
inc
add
sbb
mov
jecxz
sti
mov
je
gs
cwtl
ja
loopne
test
int
je
sti
mov
dec
pop
ss
icebp
int3
push
or
sbb
pop
dec
jne
sar
rolb
sub
or
shrb
add
sbb
and
sub
lretw
cltd
mov
cmc
push
xor
lahf
clc
sbb
cs
mov
xor
xchg
jp
sarl
test
notb
int3
adcb
lea
or
cwtl
cmp
inc
mov
fwait
hlt
lods
aaa
stos
lcall
and
add
push
mov
mov
movsb
xchg
mov
lea
pop
std
jmp
mov
lea
sub
jns
hlt
popf
arpl
out
outsl
stc
xchg
push
inc
push
mov
jbe
xor
and
mov
adc
sbb
cmp
scas
push
dec
call
mov
or
mov
out
adc
lahf
rclb
les
push
xchg
ret
mov
xchg
cmp
mov
add
aaa
notb
test
pop
bound
add
xchg
push
stos
mov
rorl
iret
stos
ror
jns
cld
mov
cmp
fldcw
jnp
add
sbb
add
ret
xchg
xchg
ss
or
push
lret
or
mov
pop
mov
movsl
xchg
mov
or
loop
iret
aaa
popa
mov
sub
jnp
fmulp
jl
fs
leave
and
cmp
mov
push
cmp
push
jae
les
dec
in
ljmp
push
mov
adc
jg
rol
mov
xor
in
fwait
pop
mov
push
or
lahf
stos
je
aam
adc
push
pop
pop
movsl
int3
sbb
popa
mov
push
push
movsl
and
cmp
pop
add
mov
dec
repz
add
xchg
out
pop
mov
es
push
stos
loope
jne
xor
and
jge
test
add
in
lcall
fcomip
scas
in
ljmp
mov
sub
mov
mov
test
fucom
inc
and
adc
mov
xor
adc
imul
jb
fmuls
xchg
add
sub
sbb
loop
in
xchg
adc
and
and
in
and
add
jae
mov
and
sbb
hlt
jnp
mov
jo
fbld
mov
jp
push
test
mov
pop
je
movlps
xchg
iret
inc
pop
dec
out
push
dec
add
mov
inc
popa
cld
popa
jns
mov
nop
loope
cmp
loopne
sub
pop
mov
dec
dec
dec
xchg
dec
inc
jnp
push
push
lea
imul
xchg
push
jns
insl
add
push
lock
xchg
or
sub
dec
imul
mov
jae
pop
mov
jne
ret
or
dec
xor
setne
xor
xlat
xchg
sbb
rol
ljmp
imul
clc
repnz
sahf
jmp
xor
jae
loope
inc
sbb
fsubs
es
mov
adc
ret
add
fcompl
jnp
add
sub
mov
cmp
mov
sub
jns
into
enter
pop
sub
add
scas
pop
pop
mov
aad
jnp
std
arpl
nop
jbe
or
out
pop
mov
shl
mov
push
test
jl
xchg
sbb
je
pop
jle
jge
mul
sub
xchg
jnp
push
jp
lcall
bnd
aad
xor
pop
mov
sarb
add
ss
inc
daa
jbe
in
push
adc
cmp
arpl
and
jp
xchg
stc
push
xor
jns
mov
stc
inc
test
sub
mov
lahf
inc
cmp
ret
clc
mov
push
out
ja
sbb
insl
add
mov
lods
sbb
lods
and
xchg
or
ss
insb
adc
popf
adc
cmp
roll
clc
ljmp
insl
inc
sti
bnd
pop
test
and
cltd
test
movb
repz
jno
mov
sub
test
add
xchg
jo
ja
add
es
mov
sbb
int3
xchg
xchg
insb
cmpsl
pop
inc
cmp
adc
cmp
imul
call
pop
push
test
add
pop
das
repnz
push
repnz
cld
sub
adc
dec
dec
mov
add
es
gs
and
mov
dec
int
testb
add
cmpsl
orl
and
push
lret
cs
sti
repnz
xchg
cmp
push
lods
pop
mov
and
or
jg
or
jo
out
cld
pushf
stc
mov
ljmp
xor
add
and
jb
xchg
push
jns
iret
xor
bound
xor
std
rcrb
imul
cwtl
sbb
notl
push
andb
xor
or
add
pop
lods
mov
bound
mov
add
popf
jge
sarb
cmc
adc
xchg
js
jb
jno
out
gs
ds
sbbb
mov
xchg
jg
xchg
pop
pop
jl
loopne
add
jae
pop
daa
fisttpll
arpl
sbb
cmpxchg
push
in
cmp
aad
add
aas
mov
cmp
or
popa
cld
je
bound
or
sub
int3
jno
push
testb
xor
mov
ret
mov
ja
mov
mov
cli
loope,pn
jg
ljmp
test
cld
push
data16
orl
mov
xor
or
push
fst
inc
jnp
mov
mov
dec
xchg
mov
pop
iret
aam
fcomip
mov
js
loope
test
add
aad
cld
jno
inc
push
or
negl
bound
fcomps
ret
stos
addl
fcompl
stc
aas
popf
adc
js
jge
cltd
adc
imul
mov
jl
cmp
sbb
mov
jnp
cs
popf
pop
in
xor
ljmp
add
push
sahf
add
ja
pop
rcrb
movsl
cmp
les
or
iret
sarb
insl
or
mov
fistps
ljmp
insl
out
dec
xchg
add
adc
out
repz
es
dec
shufps
adc
test
mov
mov
jp
mov
mov
cltd
mov
test
inc
sub
xor
and
leave
push
pop
push
jp
rolb
lds
xchg
fmuls
push
fwait
and
frstor
cmp
xor
cmp
shrb
adc
lret
sub
out
nop
and
cmpsb
push
xchg
cmpsb
sbbb
bnd
notl
mov
jae
mov
aas
outsb
stos
sbb
fidivrl
gs
jae
sub
xlat
out
sub
and
movsl
adc
cld
mov
adc
test
mov
jecxz
add
fcmovb
mov
add
add
in
dec
je
sbb
mov
arpl
pop
mov
daa
or
xor
sub
pop
push
push
rcr
inc
sub
and
hlt
pop
jp
das
jbe
cmp
add
outsl
jl
hlt
inc
jecxz
cld
mov
and
leave
icebp
lret
mov
inc
mov
sub
inc
sub
xor
xchg
out
test
push
fdivrs
adc
clc
mov
icebp
mov
shrl
gs
dec
js
scas
mov
pop
js
add
push
and
pop
test
leave
mov
es
sub
fiaddl
out
pop
mov
fistps
in
out
jne
hlt
xchg
mov
sub
cmpsl
gs
push
xor
fbld
bound
popf
push
cmpsb
call
mov
aam
jge
lahf
inc
adc
mov
insb
push
push
cmp
xor
repnz
in
pop
dec
ds
cmp
mov
add
test
int3
mov
jecxz
popl
xor
stos
in
cmp
fcoml
and
add
hlt
je
inc
int
dec
ja
lods
jp
mov
fidivl
mov
rorl
or
adc
inc
adc
cmpsb
sbb
out
pop
mov
cvtpi2ps
sbb
mov
xchg
in
test
adc
test
mov
pushf
push
cltd
notl
addr16
push
imul
or
inc
cmp
icebp
and
mov
loope
addr16
inc
jns
xor
add
inc
pop
inc
mov
cld
cmc
pop
fadd
cmp
pop
or
xor
mov
xor
mov
dec
add
jp
cwtl
add
in
clc
stos
or
test
lds
mov
cmp
adc
pop
enter
stos
mov
or
jae
testb
stos
pop
pop
shl
sarb
sbb
data16
cmc
pusha
dec
xchg
ss
cmp
int3
pop
adc
lock
dec
stc
popa
lcall
or
lods
shlb
mov
dec
jle
popf
int
test
das
push
pop
push
nop
add
iret
cmp
pop
push
shr
and
jp
lods
enter
stos
out
in
pushf
and
out
imul
loope
pop
hlt
jb
fnstenv
and
filds
add
sbb
jae
and
jbe
sub
sbb
xlat
mov
mov
add
cmp
adc
nop
jge
addr16
cmp
jb
daa
cwtl
sahf
cld
adc
mov
mov
mov
pop
idivl
pop
cmp
xor
rol
leave
sarb
mov
in
movsl
pop
add
mov
mov
leave
pop
insb
shrb
fsubrl
mov
mov
pop
xlat
incb
bound
arpl
inc
xor
xchg
mov
push
jg
jo
arpl
add
adc
jo
mov
rcll
jg
jge
popl
sub
call
addr16
mov
xchg
mov
xor
add
gs
cltd
pushf
xchg
xchg
out
adc
rorl
test
mov
adc
xlat
out
pop
fwait
iret
mov
lcall
aam
in
mov
sub
testl
mov
test
lods
sbb
sarb
imul
test
dec
je
sahf
mov
in
fldcw
scas
rcll
popa
jo
xor
dec
push
ret
pop
or
inc
out
movl
push
add
jecxz
pushf
mov
cltd
jns
cmp
adc
sub
cmp
daa
sub
cmc
lcall
cmp
in
in
sub
jo
add
push
xor
jne
shrl
xor
push
mov
push
stc
sbb
and
imull
mov
imul
js
popf
ss
jbe
mov
ret
popf
movsl
push
sub
cld
push
mov
or
xchg
arpl
sbb
and
pop
int3
pop
mov
repz
push
xchg
mov
mov
js
or
jo
push
movsl
nop
and
mov
mov
jmp
push
rclb
rcll
sub
sub
dec
aas
jo
jne
enter
sbb
pop
inc
xor
sbb
rol
addr16
push
sub
dec
or
push
mov
sub
lcall
pusha
or
xor
xor
lea
les
in
cmp
inc
outsl
push
mull
lea
adc
fisttps
mov
mov
xchg
pop
mov
insl
xor
je
jae
mov
divb
inc
ret
jecxz
mov
imul
mov
repz
cltd
dec
xlat
push
push
cmpb
and
or
dec
cmp
xor
out
frstor
or
mov
xor
mov
jns
cld
jg
adc
jg
jbe
mov
outsl
out
ret
fcomp
mov
pop
xabort
frstor
mull
out
or
cltd
lock
dec
pop
in
in
pop
nop
pop
jecxz
xor
adc
sub
push
je
insb
mov
mov
xor
push
adc
insb
into
pop
mov
popf
cmpsl
lock
leave
push
jo
js
adc
sub
cmp
add
movb
xchg
cmp
and
sbb
pop
mov
sbb
or
lock
fstps
das
jo
out
or
cmpsb
popl
pop
shl
push
jb
mov
jmp
pop
test
mov
mov
roll
cmp
jo
nop
sar
divb
push
jne
add
ja
mov
xor
aad
roll
jl
scas
movsb
cmp
cmp
inc
add
sbb
mov
or
jg
scas
out
add
pop
stos
mov
mov
add
sbb
pop
cmp
clc
in
aad
aaa
mov
xor
mov
mov
xchg
testb
frstor
movsb
mov
cli
clc
mov
cmc
inc
xor
cwtl
xor
lcallw
arpl
push
gs
call
pop
xor
les
fs
cmc
xor
adc
xchg
adc
inc
mov
xor
sub
add
cmp
in
inc
pmullw
xchg
cmp
lods
xchg
mov
fsubr
mov
push
push
aaa
mov
int
and
ss
popa
jmp
je
ss
loop
in
sahf
cltd
xor
jo
pop
insb
add
push
dec
pop
cmpsb
sub
cmp
push
mov
dec
lods
cmp
sbb
and
bound
int3
or
jno
out
loop
or
push
sub
inc
mov
mov
xor
or
imul
fistpll
jmp
cmc
mov
nop
or
mov
addb
es
pusha
aas
divb
sub
jo
mov
lea
pop
in
rorl
xchg
aaa
insl
rorl
inc
jbe
outsb
mov
xchg
fs
xor
jne
stc
inc
lret
aad
cmp
rcll
inc
loope
rol
jle
and
xor
xor
mov
jg
lahf
fidivl
leave
xchg
jp
pop
inc
data16
js
inc
dec
push
and
and
xor
fucomip
js
cwtl
cmpb
cs
jo
movl
jae
clc
in
add
xchg
pop
jle
and
dec
xchg
rcrl
daa
adc
and
dec
push
lds
cmp
stos
and
mov
inc
mov
inc
enter
outsl
test
cmp
lcall
sub
lods
and
gs
add
inc
sbb
ja
dec
frstor
enter
sti
lock
imul
jne
idivl
push
cld
into
int3
mov
loope
mov
jne
push
push
pop
mov
add
inc
mov
pop
cmp
jle
pop
test
xchg
mov
fwait
lock
inc
shlb
jno
jecxz
ja
test
dec
push
sub
pop
jmp
adc
sbb
jns
jns
push
frstor
bswap
out
push
and
popa
pusha
add
int
movb
xor
lock
test
in
mov
lock
mov
rcrl
addl
imul
loopne
aam
lods
cmovle
aam
xchg
inc
pop
lahf
popa
into
mov
sub
jg
cs
or
push
xor
pop
jmp
daa
or
dec
sti
jmp
xor
mov
inc
cmp
or
in
mov
push
jne
and
or
loop
add
mov
inc
mov
cmp
xchg
lock
lea
adc
mov
addb
fucomip
cmp
inc
cmp
add
mov
mov
cmpsl
subl
cmp
adcl
leave
jo
mov
mov
in
sub
repnz
stc
bound
xor
fs
inc
xchg
mov
leave
push
dec
mov
loope
sarb
mov
pushf
add
dec
clc
sbb
push
inc
pop
xchg
mov
aad
sbb
hlt
dec
cld
push
jmp
and
xchg
mov
ret
mov
insb
xlat
cmp
lea
mov
aad
mov
lea
sbb
pop
sub
xchg
lret
xor
pop
and
loope
out
subb
inc
hlt
in
xchg
pusha
mov
mov
fnsaves
mov
sarl
lock
sti
sbb
adc
xchg
data16
or
fidivl
or
cli
xchg
jmp
inc
cmpb
call
mov
cmp
cmp
sbb
imul
fmuls
push
ss
leave
jmp
mov
mov
aas
cmp
xor
dec
sahf
inc
mov
cmp
xchg
inc
mov
jns
mov
icebp
stos
cmp
mov
xchg
mov
cmp
jb
scas
mov
mov
jle
imul
into
jo
pop
pusha
imul
mov
cmp
cmp
sub
sbb
jns
or
mov
cmpsl
cld
dec
cmc
out
cmp
cmp
xchg
ljmp
inc
and
jmp
mov
dec
mov
js
push
push
fists
or
mov
lods
sub
xchg
movsb
cmp
movsl
cmp
sarl
imull
push
aaa
cmp
sbb
dec
cmpsl
cmp
loopne
xor
add
pop
sub
pop
notl
add
or
out
hlt
fstps
mov
in
and
sub
mov
push
repnz
lahf
in
fists
lret
adc
dec
loope
gs
pop
outsl
jmp
dec
xor
andl
adc
lcall
mov
insb
call
orb
mov
push
jbe
lret
leave
and
rorl
dec
push
mov
lock
push
add
inc
mov
outsb
dec
icebp
and
push
push
lds
adc
push
bts
mov
sub
sub
rorl
popf
fistpl
ret
and
xchg
popa
out
hlt
popa
sbb
ljmp
lret
push
imul
rol
add
loope
out
xchg
fiadds
mov
mov
ja
mov
test
popa
int3
ds
outsl
popa
add
nop
mov
push
arpl
jle
imul
xor
int3
scas
lods
mov
dec
mov
daa
or
mov
cmpsb
adc
mov
ficompl
xor
xor
in
fwait
int3
cmpsb
imul
jge
push
pop
aas
repnz
shl
xorb
out
je
shrb
push
hlt
mov
pop
daa
pop
cmp
push
cmp
shl
push
dec
stc
pop
lret
out
js
mov
fabs
popa
xchg
rcrb
mov
cmp
jge
shlb
inc
loopne
sub
test
out
jmp
cltd
sbb
dec
lods
cmp
fmuls
mov
lret
jbe
mov
add
mov
cmpxchg
out
adc
jl
cs
xchg
add
inc
add
scas
shll
dec
dec
test
pop
jbe
fcmovb
int
arpl
ljmp
sub
daa
ret
shlb
sub
orb
jl
push
pop
pop
mov
cli
mov
movl
push
mov
push
cs
sbb
cmp
aaa
jge
and
mov
xor
mov
mov
divl
cli
jb
dec
cmpsb
xchg
jge
fwait
sbb
push
add
inc
sub
sti
push
dec
dec
push
pop
jl
xchg
bound
icebp
dec
xchg
rclb
fcoml
cmp
dec
repz
lret
or
sbb
ss
inc
push
outsb
mov
dec
enter
xchg
repnz
jmp
iret
dec
xchg
stos
lea
mov
in
pop
out
sbb
ret
stos
sarb
sti
jl
pop
mov
lahf
into
cmp
sbb
push
jge
xor
pop
aaa
pop
mov
cwtl
shlb
dec
stc
rol
mov
insl
icebp
shrb
push
mov
loop
push
dec
enter
shr
pop
addr16
lahf
mov
add
cmp
add
pop
adc
rcrl
sahf
test
add
lock
mov
pusha
scas
in
adc
jecxz
sub
mov
std
mov
incl
nop
dec
push
clc
xlat
sahf
cmc
out
shrb
pop
add
adc
mov
cmp
pop
out
or
xchg
mov
sub
sbb
rorl
rcll
loope
fmull
enter
idiv
dec
mov
push
sub
loop
mov
loope
push
xchg
call
push
push
ja
push
mov
cmpsl
gs
ja
xor
jbe
std
movsl
stos
faddp
xor
and
add
xorb
call
cmc
sub
jle
filds
xor
out
pop
jle
shll
xchg
jl
xlat
sub
mov
mov
mov
cmpsb
add
decl
inc
mov
ficompl
lds
loopne,pn
push
jno
ss
pop
jge
mov
loop
jecxz
pop
in
into
mov
pusha
es
inc
xchg
jae
int
orl
push
mov
sbb
daa
mov
into
or
sbb
and
pop
add
outsb
push
sbb
arpl
nop
xchg
mov
jo
push
cld
mov
mov
push
mov
shll
lret
data16
jae
gs
rcl
popa
ds
test
hlt
lea
imul
mov
or
lret
lahf
popf
mov
addr16
pushl
dec
mov
mov
or
shl
cmpsl
mov
push
cmpsl
call
call
add
decl
orb
gs
popf
cmp
mov
daa
mov
cmpb
dec
xlat
dec
jbe
leave
cmpsb
xor
lea
sub
dec
lock
push
arpl
jmp
rcrl
sub
int3
jae
ds
xorb
push
sbb
adc
and
inc
jg
loop
out
push
dec
fsubr
add
rcrb
lret
out
push
and
cld
mov
andb
stos
test
leave
push
lds
in
xor
popa
mov
xchg
fldt
aad
js
fstpl
out
into
fiaddl
mov
inc
sub
push
rcrl
xor
in
and
mov
pop
cld
jmp
add
adc
mov
insl
cmpsb
cmp
imulb
cmpsb
cs
loop
rol
lods
fdiv
jbe
jmp
mov
mov
jg
test
push
or
cmc
push
stos
cmpsl
adc
and
jecxz
xchg
jecxz
and
sbb
in
cs
mov
lods
push
ds
shll
int3
inc
jl
dec
mov
lea
xlat
sbb
mov
jge
cld
cld
xchg
lds
sahf
or
stc
cmc
dec
aad
pop
jae
mov
xor
jns
hlt
iret
mov
leave
mov
cmpsl
loop
movsb
cmp
aam
mov
fs
adc
lea
inc
sub
push
xchg
int
ss
xor
cmp
sub
shll
mov
addr16
movsb
cwtl
imul
adc
fcompl
mov
mov
mov
mov
cwtl
mov
xor
cmp
and
out
stc
outsl
rorl
pusha
loopne
pop
fbld
aam
pop
lds
sbb
jo
popl
push
inc
and
xchg
clc
aad
adc
mov
in
cs
sbb
and
in
addr16
mov
ret
xchg
movsb
jmp
lcall
sbb
cs
lea
test
push
and
subb
lds
or
nop
xor
mov
mov
jns
int
mov
and
jo
js
dec
or
inc
adc
shl
dec
sahf
pop
mov
xlat
sub
jbe
or
mov
bnd
push
in
sahf
sub
xor
cli
xchg
xor
insb
pop
out
cmpsb
arpl
shll
repz
xchg
xor
jp
sub
cltd
imul
movsl
fs
jg
jmp
shrl
rcll
or
cmp
sub
ja
push
mov
cmp
xorb
repz
fmul
mov
pop
out
jbe
ficoml
lret
aaa
or
mov
push
ljmp
mov
mov
enter
gs
cmp
mov
xor
push
dec
aam
js
or
inc
xchg
mov
dec
jae
ret
fsubrp
mov
jle
js
std
sarl
inc
xchg
mov
pop
cltd
test
sbb
inc
push
nop
je
jno
mov
je
mov
push
bound
fdivp
or
push
sub
mov
add
xchg
dec
ret
mov
rcrl
xchg
test
add
pop
push
add
adc
hlt
test
xchg
clc
pop
inc
cmc
jecxz
add
dec
test
repz
lahf
iret
xor
addl
stc
pop
add
push
mov
mov
mov
push
fsubrs
shrl
cmpsl
mov
imul
push
push
shlb
add
lahf
jg
shll
mov
adc
pusha
inc
mov
mov
ret
push
repz
inc
lahf
imul
lock
mov
aam
or
jno
test
mov
inc
adc
jno
dec
mov
xchg
fistpll
dec
sbb
jb
inc
scas
xchg
dec
fadds
mov
push
in
adc
mov
jle
xchg
cli
insl
lea
dec
icebp
ja
test
inc
out
lock
push
jle
fs
pop
int
pusha
test
sbb
in
sbb
mull
mov
mov
js
jle
dec
add
fimuls
pop
imul
and
leave
outsb
stos
lahf
cmpsb
mov
popf
mov
movsb
and
push
mov
daa
int
ret
sub
dec
sub
movsl
pushf
add
ljmp
xchg
mov
filds
dec
addr16
add
repz
int
hlt
fwait
add
lret
imul
daa
es
imul
sub
or
call
mov
push
dec
adc
or
in
es
dec
loopne
sahf
xlat
or
shr
gs
and
out
jge
mov
cmp
xchg
in
sub
push
clc
movsl
fcomps
pop
pop
ds
pop
dec
cld
mov
push
xchg
ljmp
sbb
push
shll
sarb
cs
aaa
xchg
inc
add
and
or
jg
flds
mov
mov
jnp
push
mov
jbe
cmp
pop
dec
clc
mov
stos
ret
lea
rcl
cmp
cmp
pop
pop
add
adc
xor
mov
sub
adc
mov
mov
xor
je
dec
and
or
cmp
mov
movsb
mov
pop
cmc
inc
lahf
dec
fstl
push
call
mov
fbstp
mov
scas
js
push
pop
push
es
inc
pushf
jmp
dec
daa
jle
jno
adc
cmpsb
aaa
repnz
mov
sbb
test
cltd
jns
inc
or
cli
push
test
sbb
aam
jne
push
jbe
and
fpatan
repnz
add
jmp
sub
mov
adc
mov
xchg
addr16
mov
xchg
fcmovnb
jle
xchg
push
sbb
and
adc
sbb
xchg
sub
sti
ds
dec
sbbl
xchg
cwtl
cs
cli
icebp
push
xor
cwtl
movsl
dec
incl
pop
fwait
int3
int
pop
inc
dec
das
jg
push
and
js
pop
lret
mov
lret
nop
in
cmpsl
mov
mull
mov
fisubrl
sub
adc
cmpsl
cltd
jb
rorl
mov
pop
jmp
clc
cmp
jno
mov
in
mov
or
shll
xchg
mov
mov
xor
xor
push
das
jne
mov
mov
dec
dec
cmc
cmp
add
mov
add
test
inc
loop
mov
outsb
ja
push
sub
mov
xchg
dec
int
addr16
xor
mov
outsl
add
pop
or
and
dec
jmp
dec
lea
xchg
popa
push
loope
fwait
ss
cwtl
ljmp
xchg
imul
jno
xchg
inc
mov
mov
push
and
mov
test
cmc
aas
jge
sbb
fnstcw
rol
shrl
mov
ljmp
incl
insl
aam
ds
sbb
mov
cli
push
xchg
loop
jo
loop
xchg
inc
sarb
pop
loopne
add
cli
pop
mov
push
xor
data16
push
jp
cmpl
insb
les
pop
lret
fsubr
lods
out
pusha
mov
xchg
pusha
add
ret
or
cmpsl
inc
fldl
lods
sub
call
mov
cmp
sbb
fcompl
movntps
mov
fimuls
mov
mov
push
adc
dec
lret
mov
test
jp
mov
add
je
cmpsl
or
xor
sbb
fdivs
mov
je
ss
jb
fwait
daa
das
inc
pushl
dec
sub
loope
push
pop
mov
cltd
cmc
mov
stos
cltd
rcll
add
ds
aam
or
push
jmp
lods
loop
xchg
imul
jl
ss
test
push
bound
jmp
sbb
inc
dec
pop
stc
inc
dec
icebp
inc
sub
adc
mov
fldenv
aad
mov
inc
mov
dec
jnp
mov
popa
ds
xchg
mov
pop
mov
fstpl
or
fstpt
add
jmp
outsl
imul
mov
jno
out
inc
fbld
push
sub
ret
sub
out
inc
or
sti
test
xor
pop
mov
lret
or
adc
pop
mov
sbb
loope
adc
mov
pop
mov
cmc
mov
or
inc
adc
dec
lods
sub
ljmp
mov
and
and
inc
sbb
jg
add
mov
test
lds
jge
ror
je
cwtl
xchg
orl
lret
pop
cmp
mov
jl
sub
clc
shlb
push
and
ror
or
xor
adc
pop
or
and
mov
pop
mov
sub
add
repnz
sarb
data16
inc
adc
push
pop
enter
jmp
xchg
push
sbbl
loop
and
fmuls
add
mov
sti
enter
pop
sahf
cli
aas
sub
outsl
js
adc
lcall
gs
gs
shrl
mov
aas
fistl
pop
mov
rcl
adc
or
jecxz
je
es
mov
fisttpl
xchg
mov
mov
iret
fdivl
fdiv
mov
inc
inc
das
push
jp
mov
xor
adc
or
xorl
test
xchg
fs
ds
sbb
mov
lcall
jle
mov
in
pop
rcll
jp
bound
mov
popa
mov
hlt
adc
imul
enter
mov
jbe
pop
xchg
xor
cmc
jb
sub
enter
subl
outsb
leave
cmp
rclb
fwait
jecxz
fadd
out
mov
cmp
add
repz
cmp
or
adcl
aas
inc
and
jmp
popa
stos
xchg
mov
pop
adc
push
sub
into
cwtl
xchg
inc
mov
lods
arpl
or
mov
fiadds
imull
lcall
cmc
mov
loope
ret
push
pop
xchg
in
xor
inc
fs
in
xchg
ret
fidivrs
je
lock
lods
stos
imulb
js
cltd
pop
dec
mov
push
je
mov
aad
mov
pop
jmp
testb
sbb
loopne
jge
jnp
push
cmp
sbbb
mov
fldl
push
out
jne
pop
mov
adc
adc
xchg
jecxz
enter
sti
jbe
xor
out
push
decb
mov
and
scas
mov
jl
pop
sbb
fcoml
mov
hlt
lret
sbb
fcomip
push
out
fisttps
outsb
xlat
ja
and
insb
lea
pop
push
call
pop
push
cmpl
push
pusha
arpl
and
icebp
cmp
or
out
pop
lock
xchg
mov
mov
insb
xor
adc
out
jbe
repnz
test
add
mov
dec
ljmp
mov
stos
enter
pop
xchg
cmp
shl
inc
cs
and
push
outsb
test
mov
roll
mov
lea
mov
addr16
cmc
icebp
repz
imul
jp
mov
xor
add
inc
cmp
or
repz
adc
popf
clc
shrl
cmpsl
jl
adcb
xchg
stc
scas
das
in
pop
lcall
and
push
xchg
sub
dec
repz
xor
dec
xchg
popa
xor
ret
pushf
cld
jle
icebp
sahf
lcall
jno
test
sbb
mov
add
sbb
pop
fcomip
ljmp
ja
cmp
outsl
test
rolb
sbb
mov
push
and
insb
inc
adc
loop
test
inc
repz
out
addl
mov
jne
mov
jno
pop
mov
cmc
mov
jecxz
int3
sub
fldl
pushf
jae
gs
or
cmp
push
dec
sub
mov
test
push
add
dec
fwait
mov
push
cli
dec
push
loope
inc
dec
xchg
push
push
aas
sar
stc
push
push
xor
or
cmp
lods
imul
push
or
popa
cli
mov
and
sub
jne
pushf
in
sbb
test
add
mov
jecxz
into
xor
lock
ret
adc
xlat
in
pushf
lock
rcrb
add
jb
adc
in
xchg
out
aam
and
jmp
cmp
sub
pop
jnp
sub
mov
jo
arpl
insl
int3
adc
test
int
insl
movsb
sar
orb
jbe
leave
mov
inc
xor
inc
push
and
sbb
lock
mov
daa
es
sarl
rol
push
push
xchg
xor
cmp
sarb
shll
ss
cmc
dec
pop
fadds
jmp
dec
sbb
dec
fsubrp
rcll
sbb
jno
call
outsl
imul
sbb
xor
iret
loope
std
push
imul
mov
mov
xlat
test
pusha
int3
stos
jae
or
adc
test
and
or
data16
stc
mov
test
in
cmp
in
test
faddl
pop
mov
mov
inc
lret
dec
into
or
jmp
hlt
sti
lods
add
push
ja
and
mov
mov
mov
xchg
neg
rcrl
bound
mul
divb
dec
in
push
hlt
xor
orb
or
add
std
icebp
lret
popf
pop
cmp
xorl
addb
jecxz
mov
and
insl
jle
or
mov
xor
pop
add
mov
mov
outsb
std
cwtl
aas
xchg
mov
fists
out
int
aas
fcoms
sbb
int3
es
nop
nop
daa
jno
cmp
loope
mov
sbb
jno
fs
adc
aad
xor
out
vhaddps
xchg
jo
cmp
cli
push
dec
ja
stos
daa
xchg
sub
mov
jnp
xor
xchg
mov
setbe
mov
or
aam
loope
jne
mov
and
cmp
in
iret
push
xchg
pop
push
push
dec
nop
pusha
xor
nop
scas
mov
sbb
mov
inc
or
sbb
std
xor
rolb
jecxz
clc
rcll
mov
gs
inc
ret
stc
subl
sbb
push
sbb
mov
pop
sarb
dec
lahf
ljmp
inc
sbb
lret
fnstsw
xchg
mov
in
lret
lret
xor
enter
lea
addb
xchg
es
nop
mov
aaa
push
xchg
lds
loop
pop
mov
out
int3
jp
loopne
sahf
mov
mov
pusha
inc
sub
push
add
sbb
mov
repnz
mov
bound
daa
jge
xchg
testl
mov
je
mov
lret
or
and
push
js
ss
outsl
mov
jns
xor
push
pop
in
pop
adc
sub
iret
in
or
and
lods
sbb
jbe
push
rcll
dec
pop
pop
xchg
jae
cmp
int
mov
ja
or
lahf
mov
and
btc
and
push
ds
xchg
test
loopne
cltd
xor
ja
xor
xlat
jae
shr
imul
cmp
shll
loope
outsb
and
mov
rcll
inc
std
jl
xchg
imul
fsubs
std
mov
inc
loop
inc
int3
out
pusha
dec
or
add
and
mov
je
sub
mov
fdivs
adc
je
mov
imul
cmc
push
icebp
lcall
testl
data16
dec
lock
jnp
sarl
repz
in
fsubp
ljmp
cmp
jle
rol
jp
and
mov
out
imul
xor
mov
rcr
in
in
xchg
add
enter
stos
mov
pop
psrlw
add
push
daa
sbb
outsl
or
cmp
or
or
loop
lret
jmp
repz
push
or
mov
mov
jo
popf
cli
shll
push
ret
in
outsl
add
imul
push
xlat
push
cmp
push
jg
jecxz
push
mov
xor
js
stc
push
repz
shll
test
sbb
gs
add
jmp
sub
adc
jmp
cmpsb
in
fiaddl
scas
add
adc
pop
iret
mov
push
pop
inc
inc
call
mov
or
jp
dec
sbb
pop
call
mov
iret
xchg
dec
mov
aam
andl
std
mov
arpl
inc
nop
mov
dec
jne
pop
mov
repnz
jae
inc
call
ja
mov
cmp
push
cmp
in
mov
pop
sub
push
pop
icebp
xchg
in
xlat
lods
mov
push
cli
push
dec
jle
sub
test
insl
fists
loope
inc
pop
xchg
cmp
gs
mov
inc
sbb
cmp
dec
push
addr16
shlb
fdivr
xchg
mov
lds
add
inc
cmp
mov
ret
mov
jecxz
pusha
and
xchg
jp
cmpsb
xor
imul
fisubrl
inc
push
enter
jp
outsl
cmp
loop
mov
inc
lds
ret
out
test
stc
das
or
push
sbb
outsl
sub
pop
sbb
mov
int3
add
jne
testl
push
shll
pop
mov
sbb
js
lds
iret
jns
rcrb
clc
push
ss
movsb
movb
xchg
fstp
fadd
loop
scas
push
dec
push
dec
cmpsl
cmpsb
sub
jmp
adc
scas
sbb
push
mov
jge
fwait
push
leave
mov
inc
jle
mov
adc
out
leave
cwtl
jmp
and
inc
scas
cmp
sahf
xchg
jbe
ljmp
pop
icebp
sbb
push
inc
jmp
push
ret
repz
mov
mov
pop
adc
das
sub
push
fnstsw
inc
pop
je
in
jae
add
adc
push
lods
shll
mov
add
repz
negl
mov
pop
sysret
insb
cmp
pop
fndisi(8087
dec
jmp
les
movsb
jge
xor
stos
clc
add
xchg
cmpsl
fcmovne
pop
pop
cmpsb
arpl
cmpsl
or
das
add
pop
mov
fisubs
fxch
pop
jno
add
push
mov
mov
jmp
xchg
xchg
int3
idiv
mov
in
lret
pusha
repz
inc
stos
xchg
and
and
shlb
jne
sbb
pop
lret
outsb
jnp
or
jg
dec
dec
pop
push
pop
lods
adc
mov
sbb
cmp
fwait
repnz
or
rclb
jno
arpl
stos
dec
mov
sti
test
jg
sahf
dec
mov
push
ficomps
push
dec
shrb
das
stos
sbb
sbb
cmc
aaa
daa
add
ja
es
aaa
push
and
out
stc
sbb
sub
ret
in
add
mov
mov
sub
xor
push
repnz
push
lea
cli
faddl
das
popf
ss
sub
mov
and
jl
add
xchg
or
jle
xchg
stos
pop
jnp
pushf
popa
enter
and
imul
sarb
jbe
or
shlb
repz
or
stos
addb
xor
mov
fstps
dec
jmp
aas
push
inc
sub
das
andb
push
and
fcoml
test
lds
or
cmpsb
lock
cmp
dec
mov
and
or
sahf
fldcw
mov
sbb
sbb
push
jae
add
ja
xrstor
dec
sub
mov
mov
stc
sbb
cmpsb
jae
rcrb
inc
mov
stos
mov
sbb
loop
aas
jne
fnstcw
ss
add
add
rolb
xor
inc
inc
dec
dec
nopl
inc
add
or
sahf
roll
pop
fdivrl
dec
mov
fwait
outsl
sbb
in
hlt
mov
mov
test
dec
lock
pop
cmp
js
iret
jne
dec
mov
rorl
hlt
sbb
lds
fs
pop
dec
aad
pusha
ljmp
adc
mov
outsb
imul
mov
mov
jl
into
in
dec
movsb
sbb
xchg
into
jg
cmp
ss
cmpsb
scas
repnz
shll
test
mov
and
test
mov
and
cmp
sbb
jecxz
pop
mov
dec
pop
mov
sub
mov
mov
aad
push
xchg
rclb
xlat
insl
out
sbb
insl
loopne
inc
cmp
and
bound
xchg
out
jo
repz
mov
xchg
xchg
xchg
mov
fsubrs
pop
adc
fcompl
inc
cltd
mov
hlt
inc
xchg
ficompl
sbb
faddl
dec
cld
test
and
cwtl
adc
out
pop
inc
frstor
aas
faddl
dec
push
mov
leave
call
notb
cwtl
push
and
dec
cld
sbb
imul
loopne
mov
sub
cltd
repz
pop
in
ljmp
or
jge
sub
pop
lret
pop
or
dec
cmp
in
add
push
adc
mov
test
sub
mov
popa
inc
verw
push
sbb
repnz
jp
cwtl
push
pop
lods
sarb
mov
sub
test
push
xor
cmp
test
mov
mov
push
jmp
pop
mov
push
rclb
cwtl
aam
push
pop
test
loop
push
xchg
add
jl
xchg
fstpl
jne
push
fisttpll
mov
das
call
adc
repnz
ja
jle
lahf
ret
ret
sub
mov
pop
nop
sbb
inc
add
shll
fs
mov
mov
mov
sarb
int3
imul
fidivl
cmp
clc
out
mov
mov
push
inc
jmp
xchg
jno
sub
push
fwait
call
mov
mov
arpl
jne
in
test
mov
pop
imul
out
fimull
aad
push
mov
pop
pop
mov
inc
mov
imul
loop
inc
cltd
dec
es
push
xor
or
push
dec
test
push
jns
or
scas
dec
repz
stos
pop
sbb
push
sub
adc
lcall
mov
push
mov
sar
insb
bound
push
daa
fstps
popa
dec
xchg
inc
adc
pop
sbb
orb
repz
sbb
jns
inc
lret
fs
xchg
mov
cltd
loopne
divb
scas
jge
dec
rolb
inc
push
dec
lahf
sahf
cwtl
enter
push
mov
loope
les
push
mov
jp
jl
addr16
cmc
pop
stos
adc
shlb
into
mov
popa
and
mov
sub
xor
cmp
test
sbbl
mov
xrelease
xlat
dec
mov
subl
mov
or
xor
sahf
shlb
imul
or
push
bsf
jge
xchg
inc
dec
ds
inc
imul
xchg
mov
bound
xlat
sub
enter
hlt
test
sub
les
ret
push
repz
mov
nop
call
imul
mov
cld
je
mov
jle
mov
pushl
icebp
mov
repnz
sub
insl
xor
or
sets
fcomps
inc
cltd
xor
pop
mov
icebp
pop
repz
push
insl
and
sub
das
jp
ja
pop
xchg
popf
dec
popa
xchg
nop
sub
sbb
jb
and
jmp
jle
jbe
or
les
cmc
inc
js
shrl
fistl
ds
out
iret
fmulp
lret
ja
shll
ficoms
roll
jb
ds
call
pusha
jne
xor
lods
push
out
fwait
insl
mov
lcall
repnz
xchg
lods
dec
lds
stos
push
xor
inc
lcall
dec
addr16
in
loope
repz
cmp
cs
jo
push
jge
dec
inc
outsl
enter
add
cmp
xor
cmp
adc
andl
cmp
les
sub
push
mov
stc
jmp
push
lret
cmpl
mov
fcompl
cmp
les
ficompl
adc
mov
bound
sahf
xlat
loope
push
xchg
sbb
push
mov
leave
ror
inc
jle
stos
inc
cmpsb
ret
cli
stos
inc
das
ss
pop
nop
daa
cmpsb
sbb
insb
jnp
bound
add
insl
fildll
int
mov
xorl
repz
idivb
push
xchg
mov
and
dec
push
mov
insb
xchg
outsb
push
loopne
push
cwtl
shrl
daa
stc
add
shrl
pop
in
and
mov
xchg
rclb
and
mov
cmp
jmp
jl
test
add
fiaddl
xchg
in
rorl
add
lret
xchg
ror
rorl
decl
push
leave
xlat
or
cmp
in
fistpll
mov
xor
xchg
loopne
pushf
inc
push
push
lcall
inc
es
imul
sub
mov
aam
fwait
cltd
movsb
inc
fldcw
aas
inc
inc
push
or
shrb
test
mov
jae
inc
mov
sbb
mov
push
adc
jns
and
mov
dec
std
or
or
mov
dec
leave
test
cld
lds
or
paddq
mov
adc
ret
and
mov
push
add
xchg
push
dec
nop
add
xchg
mov
inc
jnp
rorl
and
pushf
decl
int3
lds
cmp
xor
loop
push
sub
in
pop
aas
das
jp
out
mov
shll
hlt
insl
mov
mov
pop
test
insl
arpl
std
push
in
mov
cmp
fcmovu
scas
xchg
popf
mov
mov
addb
pop
push
fprem1
jo
out
push
or
inc
out
push
lods
jmp
mov
pushl
jmp
ror
roll
sub
nop
adc
jae
pop
lret
testb
inc
fidivs
popa
stc
xchg
sti
lcall
push
ret
sbb
stc
push
pop
jl
in
adc
enter
or
xlat
movsl
xchg
or
add
xchg
sbb
lcall
push
aaa
dec
aas
xchg
xor
jge
js
loopne
popa
jnp
sbb
pop
or
push
in
imul
mov
mov
les
test
cld
jmp
jae
arpl
xchg
fwait
add
jmp
push
sbb
xchg
sub
js
sub
sar
jp
sbb
xchg
and
inc
push
dec
popf
cmp
out
arpl
inc
push
aad
ret
mov
inc
push
dec
jp
mov
cmc
add
inc
add
scas
pop
adc
std
lret
leave
sbb
jnp
lods
adc
inc
add
mov
loopne
in
fs
mov
ret
dec
outsl
mov
mov
or
popf
fisubrs
lcall
pop
jl
std
pop
and
mov
sbb
xor
cli
jmp
or
stos
xor
pop
repz
dec
fsub
sbb
pop
js
cltd
test
out
clc
sbb
pop
fwait
test
jns
inc
mov
pushl
rcrl
les
shll
mov
mov
inc
insl
movsl
jle
add
sbb
and
add
mov
incb
mov
mov
xor
js
outsl
je
mov
adc
test
stos
mov
pop
dec
lds
sbb
push
cmp
icebp
sbb
insb
cmp
sub
insb
dec
push
in
movsb
and
inc
pop
adc
sbb
loope,pt
in
adc
mov
scas
xchg
cmp
adc
rorb
ret
loop
xchg
xchg
fs
xchg
aam
out
aaa
into
data16
adc
sbb
mov
ja
lds
out
xor
fsts
test
ja
in
inc
fisubs
lds
jmp
xchg
shll
scas
js
xor
into
cmpb
and
bound
popa
and
lahf
loop
shrl
add
movsl
nop
clc
mov
xchg
mov
loop
jae
outsb
jl
scas
fwait
setae
andb
pop
jo
xchg
mov
mov
popf
fstpl
pop
int
jns
pop
or
xchg
pop
fidivl
aas
xchg
jns
insb
jno
leave
add
cmp
sbb
imul
push
lea
push
shll
lcall
cmp
ret
dec
mov
or
push
inc
push
out
sbb
sbb
push
add
mov
mov
mov
mov
sbb
lods
and
adc
pop
in
jnp
cmpsb
push
xchg
push
scas
fs
mov
cmc
dec
or
sub
lahf
insl
arpl
mov
mov
out
mov
rclb
inc
push
add
pusha
sub
gs
or
test
fdivs
iret
imul
and
loop
xor
nop
xchg
gs
shlb
lods
gs
in
fs
loope
fnstenv
push
push
jo
push
imul
mov
faddl
decl
lret
fninit
jl
xor
iret
xor
and
js
xchg
xchg
adc
stc
sbb
sbb
dec
and
sbb
jecxz
std
xor
cmc
cmp
sbb
mov
mov
and
movsb
pop
cmp
test
push
jp
das
pop
ja
dec
jo
shrl
jno
jg
aad
sbbl
mov
jns
jns
or
sub
std
pop
mov
idivl
jmp
cmc
and
pop
adcb
mov
js
jecxz
push
aad
repz
mov
jb
mov
cmpsb
in
stos
ljmp
shll
push
mov
fcompl
enter
and
aad
mov
cmp
mov
sub
sub
enter
push
punpcklbw
neg
pop
enter
outsl
stos
scas
push
inc
repnz
lea
pop
xor
outsb
jg
xchg
mov
mov
push
roll
mov
sbb
and
data16
xchg
repz
mov
jb
jbe
jno
pop
xchg
ret
xlat
out
repnz
and
or
push
cs
scas
fwait
insb
shr
mov
movl
lods
cld
pushf
adc
shl
push
cwtl
and
jno
adc
and
shll
adc
ret
or
shlb
adc
loopne
mov
mov
sub
iret
mov
dec
xchg
scas
fwait
mov
xor
sub
pop
outsl
sub
test
std
adc
imul
pop
push
dec
popa
or
mov
cmp
out
out
jecxz
cld
xor
cli
mov
and
and
data16
cmpsb
jp
cmp
popa
repnz
icebp
jne
pushf
out
adc
xchg
cmpsl
lods
cs
cs
mov
repz
or
xchg
pop
out
es
sub
or
mulb
sbb
loop
xchg
xor
jbe
outsb
xchg
cmpsb
cmpl
mov
or
pop
xchg
loopne
sbb
add
adc
jb
jb
push
sub
mov
cmp
es
sub
sub
fldenv
xor
fisubrl
and
cmp
add
xorl
push
data16
cmc
out
lods
mov
xchg
data16
imul
cltd
cmc
sbb
xchg
decl
sti
lods
xor
pop
xchg
xchg
test
nop
xor
gs
inc
mov
adc
or
aad
cli
ljmp
stos
call
bound
nop
loope
ss
jne
shr
adc
aad
xchg
test
movsl
jp
pop
pop
cwtl
and
ret
adc
rolb
addr16
sbb
mov
lret
push
pushf
xchg
adc
shll
add
xor
pusha
stc
pop
pusha
les
fsubrl
pop
jnp
aas
sub
jecxz
inc
add
inc
stos
lret
and
or
dec
mov
repnz
inc
mov
nop
cmp
ljmp
mov
dec
adc
cltd
mov
mov
mov
aam
nop
movsl
add
nop
pushf
xchg
sub
adc
test
cltd
sbb
cwtl
jmp
or
subl
lods
into
sarl
mov
mov
scas
inc
roll
and
jle
stos
inc
in
ljmp
enter
and
push
xorb
in
mov
and
hlt
pop
in
call
das
cld
jl
mov
mov
in
jmp
add
and
repz
ljmp
or
fldcw
pop
test
sbb
mov
notl
adc
dec
sbb
mov
addr16
dec
xchg
jle
xor
mov
dec
scas
ds
push
iret
cmp
insb
repz
dec
pusha
xor
cmpsl
dec
fidivs
fwait
bound
push
or
dec
mov
or
insb
mull
xor
or
xchg
jmp
push
sbb
test
or
cmp
mov
xor
mov
pop
sub
and
pushl
and
gs
mov
in
xchg
dec
cmp
pop
ja
call
rclb
andb
jmp
loopne
xchg
aas
xchg
sti
fistl
test
in
sub
aas
test
in
addl
jle
in
ja
xchg
cmc
ljmp
std
cmp
ds
sub
ret
enter
pop
dec
sbb
mov
loop
loopne
pop
xor
jge
mov
out
mov
test
ret
aaa
mov
sub
btc
loope
lahf
jmp
xor
push
daa
adc
dec
sahf
ja
mov
pop
inc
adc
cwtl
add
sarb
pop
xchg
dec
mov
js
aas
cmp
jecxz
mov
cmpsl
jmp
mov
in
adc
lret
mov
mov
test
jge
popf
cwtl
scas
rcr
jp
sub
pop
xchg
dec
test
inc
push
arpl
fs
fsubl
dec
enter
dec
push
scas
push
decl
push
ror
dec
icebp
mov
mov
cmp
notl
jns
mov
add
xchg
nop
mov
std
icebp
xchg
pushf
add
lods
in
repz
rorb
mov
pop
inc
xchg
push
pusha
addb
sbb
lods
or
movsl
jo
sbb
inc
rcrb
leave
stos
push
xchg
dec
cmpsl
push
push
mov
jmp
dec
aad
dec
leave
pop
cmp
or
inc
xor
fadd
add
mov
test
push
test
mov
ret
outsb
cs
or
out
fistpl
sbb
cmc
lock
out
fwait
dec
cmpsb
sub
outsl
cli
add
add
pop
jmp
dec
push
js
aam
movsl
scas
test
and
dec
pop
jge
les
movsb
out
lahf
daa
lea
push
or
sbb
adc
or
in
inc
fsubrs
mov
inc
sub
inc
mov
std
add
stos
aad
lea
mov
out
jle
push
xor
mul
icebp
inc
mov
push
and
push
cmp
iret
push
paddusb
mov
repnz
sti
jo
test
jg
inc
dec
push
xchg
add
xlat
add
ss
jg
data16
jge
out
sbb
imul
leave
ret
sbb
bswap
inc
xchg
push
jne
push
mov
xchg
dec
sub
jb
mov
cli
fbstp
incb
and
mov
push
or
pop
stos
pop
sub
mov
mov
add
pop
pop
xlat
push
fimuls
mov
std
outsb
mov
xchg
push
mov
xorb
sub
push
dec
dec
call
or
out
mov
pop
dec
push
pop
clc
or
xchg
adc
test
push
stos
test
dec
xchg
or
dec
cmpsl
sub
pusha
sub
inc
in
fsubl
and
divl
aaa
repnz
and
xchg
out
nop
out
push
dec
lret
push
sbbb
lods
pop
addl
rcr
aad
ja
push
andl
push
pop
and
cwtl
push
jl
cmc
adc
mov
jb
xor
or
xchg
adcl
inc
pop
xchg
jmp
push
sbb
stos
icebp
adc
xor
out
adc
and
or
fwait
jno
insb
lret
loope
and
pop
sub
sub
add
mov
pop
dec
movhps
andps
inc
jg
jl
gs
sbb
cmp
push
loope
movsl
xor
bound
in
dec
insb
outsb
shll
scas
xor
fwait
lea
pop
sbb
mov
pop
xchg
mov
xchg
mov
dec
sbb
outsb
loopne
lods
jge
pusha
scas
daa
jne
push
sti
sahf
daa
rcr
movsb
push
cmp
xchg
sbb
cltd
mov
or
andl
mov
lds
add
jnp
mov
movsb
xor
add
dec
in
jg
xlat
std
outsl
dec
icebp
int
sbb
mov
pushw
push
xchg
pop
leave
dec
pop
mov
inc
fmul
pop
or
push
adc
aas
xchg
dec
add
add
xor
dec
pop
ret
xor
mov
jae
mov
cld
pop
dec
repnz
inc
add
lods
xchg
jmp
and
pop
or
repz
xchg
orb
and
pop
sahf
push
xchg
js
cmp
adc
shl
test
jae
mov
arpl
leave
xor
mov
xchg
pusha
jl
test
mov
imul
cmp
mov
out
dec
jae
lods
mov
sbb
xchg
jl
cwtl
dec
xchg
arpl
divb
mov
icebp
pusha
bound
sbb
fwait
push
scas
movsl
nop
lods
outsl
mov
sub
mov
in
adc
and
xchg
stos
cmpsb
ror
dec
jle
movsl
into
sub
xchg
jno
outsl
pusha
mov
cltd
mov
push
stos
jecxz
xor
pushf
sub
or
pop
or
les
dec
js
mov
notb
ret
repz
sub
icebp
mov
enter
sbb
cmp
xchg
outsl
bswap
push
fisttpl
fbstp
adc
aad
into
les
adc
iret
inc
out
jns
pop
sub
dec
or
jnp
jne
cmp
inc
ficoms
cld
repnz
lods
push
sbb
jo
lret
fisubl
add
or
pop
cmpsl
pop
sbb
mov
sbb
pop
adc
fs
or
popf
pop
mov
dec
pusha
mov
mov
mov
andb
adc
jle
jb
sub
lcall
jnp
fwait
dec
mov
sbb
add
stc
enter
pop
gs
in
aam
lret
inc
movsl
jg
jnp
pushf
pop
in
mov
stc
mov
sbb
mov
scas
xlat
jp
cmc
jns
xchg
push
mov
imul
or
imull
insl
sub
stos
cmp
lea
adc
shrl
out
arpl
mov
ja
in
mov
std
fdivs
cmp
jnp
mov
repz
jbe
pop
neg
andb
jnp
xchg
dec
jbe
sub
bound
cld
pop
idivb
insl
movsl
rcrb
jns
mov
dec
fucomp
les
and
ss
add
add
imul
ljmp
rorl
test
aaa
dec
orl
leave
movsb
stos
mov
cmp
enter
ds
in
add
xchg
iret
popf
fdivl
cmpsl
fs
es
pop
js
inc
push
mov
fldenv
jg
xchg
mov
scas
lods
shlb
adcl
jecxz
test
or
cpuid
enter
test
stos
imul
ret
in
cmp
push
push
pop
add
xchg
test
mov
movsl
add
jbe
mov
sbb
clc
mov
add
xor
sub
outsb
icebp
mov
push
dec
add
in
dec
sbb
xor
sbb
pushf
mov
pushf
adcb
ds
out
add
mov
js
mov
sarb
rorb
and
mov
or
push
jns
aas
shlb
push
cmp
daa
subl
mov
pop
insb
div
pop
mov
xor
and
jo
pop
dec
out
push
mov
pop
xchg
scas
jae
lods
and
sbb
mov
jl
add
bound
in
addr16
push
fnstsw
icebp
out
mov
imul
jmp
add
stos
imul
mov
fmull
outsb
sub
mov
das
test
xor
jp
push
and
mov
jl
mull
out
insl
pop
inc
in
lret
sbb
sti
stc
sbb
sub
cmp
mov
cmp
sub
dec
mov
lods
xchg
std
push
jl
mov
fwait
sbb
dec
ret
sbb
sbb
lahf
aad
je
test
xchg
adc
sbb
orb
std
lock
add
inc
out
daa
mov
stc
adc
cmc
je
sbb
and
pushf
sbb
jge
jo
insl
repnz
test
push
inc
out
mov
dec
and
cmpsb
lret
shl
pop
aaa
loopne
aas
rcl
pop
push
jmp
leave
mov
xchg
jb
push
inc
xor
out
push
out
loope
lock
and
mov
cwtl
inc
lock
push
es
sub
movsb
in
inc
neg
pop
in
pop
lahf
ljmp
sti
ja
sbb
roll
out
es
leave
push
dec
adc
xor
inc
inc
push
psrlq
nop
xchg
clc
inc
adc
xor
adc
in
mov
mov
mov
mov
hlt
xchg
cmp
or
rclb
mov
xchg
loopne
insb
mov
mov
sub
aaa
aad
into
add
inc
loop
add
sub
ja
sub
imul
cmp
xchg
and
aam
mov
test
out
and
dec
sbb
inc
xchg
sarl
int3
jmp
cmpsb
mov
cld
insb
adc
sub
xchg
or
jns
or
ret
sbb
sahf
stos
mov
mov
aad
jnp
push
fists
sub
cmp
call
std
jmp
lahf
fmuls
in
xchg
fidivl
jae
mov
repnz
adc
adc
fdivrl
fbld
cmp
dec
add
or
adc
rolb
out
cmp
or
push
sbb
lock
mov
loope
mov
cmpsl
jecxz
out
cmpb
push
xlat
jno
cmp
lahf
pop
push
mov
rcl
int3
sbb
fldcw
stc
addb
cmp
das
test
ljmp
das
scas
movsl
push
push
adc
jnp
add
loopne
int3
call
movsl
dec
pushf
negb
sub
cmp
jg
add
imul
mov
dec
mov
jo
mov
cltd
xrelease
in
lock
push
loop
xchg
rcrl
rclb
jo
js
sbb
and
imul
mov
mov
mov
addb
call
or
int
data16
pop
push
push
pop
dec
les
sbb
or
push
mov
test
out
out
faddl
pop
into
jge
out
and
sbb
jne
fwait
and
aad
inc
xor
mov
cmp
repnz
pop
add
loopne
pop
test
xlat
push
inc
rolb
jmp
dec
jns
and
mov
rolb
in
push
mov
jge
pop
adc
mov
dec
and
fcom
mov
push
pop
and
sbb
xor
sub
test
mov
mov
sub
push
pop
movsb
push
inc
jp
adc
cltd
rep
and
cmp
popa
xor
mov
cmpsb
std
sbb
cmp
rorl
stos
xchg
or
pop
mov
cmc
mov
es
jbe
dec
loope
mov
sarb
rcrl
jle
sbb
jbe
push
push
leave
scas
cmp
xchg
cmp
dec
mov
xchg
dec
insl
lret
xor
cmp
mov
imul
fsts
sbb
and
push
ljmp
inc
cmp
xor
xor
mov
sbb
test
ret
sbb
adc
ret
orl
pop
daa
fnstcw
sbb
repnz
sbb
sbbl
xchg
shrb
imul
xchg
shlb
mov
mov
dec
add
mov
adc
mov
jge
add
dec
loope
sub
sub
jl
cmp
dec
aam
arpl
in
test
and
add
sar
mov
pop
into
rorb
cmp
sub
push
dec
in
jecxz
xchg
rorl
pop
pop
bound
jae
pushf
add
int3
or
or
pop
inc
movb
adc
std
gs
das
mov
fimuls
setbe
inc
movsb
std
fisubl
jae
mov
stos
popa
push
or
push
pop
or
mov
pop
jmp
mov
aam
pop
js
xchg
cs
repnz
xchg
sti
xorb
sarb
or
sbb
push
or
jecxz
sbb
mov
daa
sub
xchg
push
adc
ja
xor
cmp
cmp
orl
gs
jno
leave
int3
movsl
xlat
xor
repnz
dec
mov
mov
fcmovnbe
nop
or
or
lock
add
sbb
loope
jb
dec
insl
or
inc
jp
ja
sub
xor
sub
jnp
and
xchg
ljmp
das
in
repz
mov
mov
xchg
jecxz
inc
jo
sbb
lret
pop
adc
add
fstp
jne
addl
and
outsl
pop
push
mov
dec
inc
incl
scas
push
add
push
idivb
loopne
mov
pop
sub
adc
addr16
imul
shr
enter
in
mov
pop
aaa
mov
hlt
push
cli
push
lds
dec
insl
ret
xchg
movsl
jge
and
stos
fnsave
inc
lret
arpl
and
xchg
insb
pop
sub
xor
pop
movsb
lods
jno
loop
xchg
outsl
xor
and
jg
lds
pushf
pop
inc
pushl
popa
fistpll
dec
mov
and
adc
jp
dec
sub
mov
mov
mov
mov
lret
mov
push
pushf
fisubrs
push
fdivr
sub
stc
les
xchg
leave
insb
pop
xlat
mov
cli
lock
scas
jg
sbb
jns
insl
inc
out
js
mov
in
mov
rolb
movl
and
inc
lahf
stos
sbb
aas
out
call
pop
outsl
mov
rorl
fs
pop
test
out
rcrb
inc
jge
sub
lcall
shrb
dec
out
rcl
xchg
mov
jne
and
xchg
push
out
fimuls
leave
push
xchg
stos
fistps
ljmp
mov
cmpsl
insl
icebp
mov
sbb
push
fimull
nop
or
jl
push
cld
jle
insl
add
push
push
add
std
jecxz
mov
jbe
dec
jbe
mov
sti
insb
bound
shlb
xchg
sub
nop
cld
mov
in
scas
roll
out
mov
xchg
shl
sub
jecxz
test
mov
mov
and
ret
lahf
imul
hlt
mov
data16
sub
pop
int3
int
inc
outsl
test
push
push
addl
out
iret
pop
mov
cld
fisttpl
pop
pop
int
pop
add
mov
or
and
or
push
outsl
dec
push
pop
fists
add
mov
lret
mov
scas
mov
lods
cmpl
jp
pop
movsl
lcall
sub
iret
lea
out
cwtl
cmpsl
cmc
shlb
xchg
mov
ds
movsb
push
xchg
add
popf
xor
mov
sti
fwait
test
xchg
push
push
jno
stc
mov
cltd
leave
lcall
inc
test
lods
test
adc
out
jns
sub
and
pusha
scas
cld
adcb
pop
movsb
xlat
sub
lcall
hlt
and
jle
movsb
jne
mov
xchg
push
inc
sbb
xchg
xchg
sbb
lcall
mov
xchg
xchg
daa
push
or
out
pop
out
pop
mov
xor
mov
in
jl
imul
mov
add
fstpt
in
xor
inc
cmp
xchg
mov
sbb
inc
dec
int
daa
mov
cmp
inc
push
mov
pop
sbb
stos
xor
sahf
andb
ret
fwait
out
pop
pop
arpl
pop
in
rcll
incl
mov
das
and
pop
and
jbe
sbb
inc
cmp
ljmp
aaa
inc
jb
syscall
bound
test
mov
int
push
add
push
popa
push
mov
outsl
jp
inc
mov
push
xchg
lret
xor
inc
out
adc
dec
dec
inc
hlt
pop
cmpsb
pop
into
xlat
jo
in
mov
arpl
dec
and
in
add
jns
cltd
cltd
mov
ror
mov
sub
jle
daa
and
jo
cs
daa
mov
dec
sbb
lcall
scas
inc
test
dec
mov
lock
sub
mov
ret
pop
and
shll
xchg
cmpsb
inc
cmpsb
xchg
cmp
mov
cli
dec
stc
mov
je
outsl
cmp
shr
xor
out
repnz
out
add
jg
xlat
iret
cmc
in
aas
cmc
cmp
fimull
lahf
cmp
mov
pop
sbb
xor
fs
dec
mov
stos
mov
push
mov
or
cmp
iret
rorb
pop
sub
add
adc
push
das
cmp
pop
outsb
pop
fcomps
dec
pop
inc
stos
dec
cmp
jge
in
xchg
jecxz
pop
mov
mov
dec
jg
ret
fwait
add
popa
cwtl
adc
xlat
les
scas
fwait
xchg
dec
adc
imul
mov
lods
repnz
xchg
pop
in
mov
clc
jo
xor
jmp
sahf
ljmp
adcb
ljmp
jbe
aas
jge
xchg
inc
dec
fucomp
fisubs
or
lea
mov
testb
rcrl
lods
jg
jnp
jnp
cs
mov
mov
shlb
rcrl
nop
mov
jge
cmp
aam
add
orb
iret
and
dec
dec
mov
in
sub
ret
popf
sbb
xchg
rolb
sti
sub
insb
jbe
inc
adc
cltd
push
in
adcb
js
shl
mov
jno
or
es
arpl
sub
fxch
adc
gs
ror
push
or
aas
ljmp
pusha
inc
in
cwtl
hlt
in
cmp
inc
pusha
pushf
mov
jb
mov
jb
imul
and
fcmovnu
mov
stc
xorl
mov
jo
xor
ss
mov
fsubrp
mov
add
enter
fists
cmpsl
mov
popf
push
pop
repnz
cmc
adc
pop
cwtl
shrl
popf
pop
cwtl
or
push
cld
or
scas
adc
pop
dec
nop
push
movsl
xchg
sbb
inc
ljmp
mov
adc
pop
cmp
xchg
mov
outsl
into
inc
cwtl
enter
gs
and
addr16
jp
repnz
xor
mov
ljmp
pop
cmp
movsb
fstpt
jae
cmp
aaa
in
ds
jp
inc
dec
inc
xchg
sahf
xor
sysexit
das
in
insb
add
jle
add
push
and
jno
sbb
mov
sub
out
das
pop
fwait
sub
orl
fwait
lds
fwait
or
sub
repz
cmp
dec
push
cmp
dec
adc
sbb
sub
sub
push
xor
mov
and
test
jecxz
cltd
mov
pop
or
adc
cmc
stc
mov
ficoms
fmuls
dec
mov
das
fsubs
pop
or
add
inc
imul
aas
mov
and
mov
dec
jns
mov
js
xor
dec
sbb
or
mov
mov
pop
jp
sub
sub
xchg
mov
test
mov
xor
xchg
mov
cmp
fs
insl
ja
adc
pop
jmp
cli
out
hlt
into
sbb
or
xor
stc
orb
decb
out
scas
int3
xor
mov
mov
movsb
insb
lods
jnp
ret
xchg
and
je
loopew
xchg
dec
enter
stos
cmp
out
repz
ljmp
bound
mov
xor
popf
mov
lock
sbb
sbb
fisubs
out
dec
jno
mov
stc
push
or
fdivl
add
and
push
mov
jmp
ret
dec
xchg
aam
addr16
xor
outsl
rclb
shrl
notl
mov
dec
out
stos
dec
into
mov
lahf
sti
mov
sbb
xchg
inc
lds
mov
fnsave
cwtl
xchg
lods
sub
lods
lods
imul
sub
mov
inc
add
mov
pop
leave
cmp
out
loop
mov
sbb
enter
cld
imul
rclb
mov
popf
and
jo
adc
enter
lahf
fdivrp
out
mov
into
xor
cmpsl
pop
jb
popf
dec
in
or
jecxz
mov
mov
scas
xchg
stos
aad
in
jne
loop
rorl
cmpsb
push
rorl
jno
inc
stos
test
sub
lods
and
lcall
dec
add
loopne
sub
lea
push
xor
cmp
ret
call
ja
iret
out
fisubrs
lcall
fbstp
adc
cmpsl
lods
lcall
push
xlat
lahf
das
test
adc
mov
cmpsb
push
mov
add
pusha
jmp
dec
cmpsb
push
out
cwtl
cmpb
stos
inc
in
out
xor
insl
aas
lahf
xchg
ret
mov
out
cmpsb
xchg
xchg
cmp
jns
add
jnp
or
in
xchg
cwtl
push
xchg
jmp
push
pop
dec
pop
sub
sbb
es
in
adc
sbb
inc
daa
lret
adc
xchg
mov
push
inc
xor
push
popa
mov
add
rolb
in
nop
mov
sbb
out
jmp
imul
mov
sub
aam
lret
lret
pop
jle
mov
cwtl
gs
pop
jmp
adc
adc
mov
jge
nop
jno
cmp
movsb
popa
jl
data16
addb
aaa
push
dec
in
ja
mov
hlt
repz
dec
int3
lods
inc
push
addr16
dec
jg
jns
and
sub
stos
rorb
stc
jle
and
insb
jae
daa
fs
insb
mov
int
shl
dec
or
adc
outsb
pmullw
jnp
icebp
add
mov
ljmp
sbb
jno
push
pop
test
xchg
adc
xor
push
fisttps
out
popa
mov
xor
push
imul
sub
cmp
cmp
js
iret
popf
cmc
dec
sbb
enter
xor
sahf
sub
movsb
popa
cmp
pushf
mov
jge
int3
adc
or
out
insb
insb
lods
dec
subb
mov
int3
sub
jl
into
loopne
push
repz
push
jbe
pop
adc
sub
or
pop
adc
into
popa
leave
adc
aas
xor
stos
sub
inc
mov
loop
fidivl
enter
arpl
je
jp
test
add
sbb
mov
adc
lock
ss
push
inc
or
xchg
inc
sub
pop
jbe
clc
ret
fldz
lock
mov
das
mov
addb
les
fcomps
push
fstps
std
jp
inc
popa
push
cmp
jmp
mov
add
fistpl
out
sbb
fisttpll
mov
sbb
dec
dec
mov
aas
aas
out
mov
imul
bound
xchg
ja
sbb
rcrl
fnstenv
addr16
imul
icebp
mov
aam
scas
sub
mov
shlb
addr16
fbld
testl
cltd
xor
xchg
jl
loopne
dec
lods
rcrl
add
clc
fdivl
sub
xchg
pop
mov
repz
call
dec
dec
pop
push
push
loope
mov
pand
mov
pop
cltd
shll
es
dec
es
outsl
xor
add
cmp
data16
test
jns
mov
inc
xchg
imul
xchg
lock
fdivl
inc
and
xor
inc
pop
in
shrb
xchg
push
cmp
xchg
jg
mov
xchg
movsb
or
push
insb
mov
mov
xor
jle
jmp
pop
stos
pop
push
outsb
lods
cmp
xlat
mov
andb
test
icebp
imul
pop
dec
jmp
and
loopne
and
push
hlt
fldt
mov
cmpsb
sub
scas
inc
aad
inc
and
lret
aam
lret
xor
jo
cmp
es
sub
mov
mov
adc
adc
fisttps
cs
jnp
cmpb
xor
inc
stc
jg
xor
mov
adc
xchg
pop
xchg
test
frstor
dec
pop
outsl
ja
jne
and
pop
mov
les
sub
xchg
loope
mov
data16
or
test
xorb
xchg
sti
mov
jns
push
imul
popf
lret
mov
leave
mov
push
mov
dec
mov
loopne
adc
mov
daa
iret
lods
aas
and
push
ja
bound
test
pop
fidivrl
pop
pop
cli
mov
insb
pop
lods
repnz
mov
lea
lret
add
pop
mov
sub
or
dec
sub
xor
xchg
cwtl
cwtl
mov
inc
mov
movsb
test
std
cmp
adc
push
dec
adc
test
xorl
cmpsl
cltd
fisttpl
adc
jbe
push
sti
jl
mov
sbb
pop
roll
call
seto
stos
daa
lahf
sbb
orps
jno
les
in
cld
popf
sbb
cmpsl
nop
shll
inc
les
inc
mov
mull
roll
out
fwait
out
js
jno
iret
in
ret
cli
push
xchg
pop
and
aam
xor
bound
test
sbb
jg
insl
movsl
mov
jp
xchg
popa
in
sub
and
adc
lods
aam
sub
inc
mov
dec
add
maxps
je
inc
adc
push
push
push
in
xlat
sub
sbb
xor
imul
sub
inc
inc
stos
sub
adc
lea
repz
and
aas
adc
xchg
mov
xor
addw
push
push
out
add
mov
ljmp
xor
test
xchg
mov
ljmp
inc
adc
popf
add
push
ss
push
jg
aas
loopne
push
jb
xor
jns
clc
mov
and
dec
movsb
subb
jnp
and
cmc
xchg
xchg
push
out
rcrl
fnstcw
pop
loopne
pop
in
push
mov
pop
lret
add
leave
pop
aaa
mov
nop
lock
mov
jle
lock
into
mov
scas
push
test
aas
out
sbb
mov
lea
cli
pop
push
jae
cmp
sti
js
mov
or
push
ja
iret
adc
movsl
pop
cmpsb
scas
mov
stos
mov
popa
sub
inc
push
xor
mov
and
outsb
mov
jnp
popa
bound
fwait
imull
or
xchg
dec
lcall
ret
xchg
leave
pushf
fldenv
push
xor
insb
pop
popf
adc
dec
enter
daa
push
xchg
add
mov
mov
lea
dec
push
xor
push
and
jae
dec
xchg
sub
insb
xchg
lods
sbb
ljmp
add
sub
lods
fisubs
sbbl
aas
dec
in
shl
mov
mov
sub
cmp
aaa
cmp
sub
clc
xchg
movlps
nop
inc
shll
sub
out
mov
inc
lcall
mov
adc
mov
mov
adc
mov
repnz
cwtl
sbb
mov
fs
das
sub
popf
mov
mov
mov
xor
cmp
cwtl
mov
push
sbb
iret
test
lods
into
negl
push
fcmovu
insl
dec
pop
fld
inc
icebp
jle
shrb
mov
and
outsl
sbb
dec
push
out
mov
je
sbb
ds
inc
movsl
pop
adc
shrb
mov
inc
je
sub
clc
jbe
mov
les
inc
cmpsl
jge
imul
insl
ljmp
pop
es
xchg
or
xchg
fidivrs
addr16
sbb
cltd
leave
fnstenv
repz
and
cld
lock
insl
jl
sub
dec
jmp
ja
push
xchg
loopne
push
lock
ss
pop
cmp
push
lods
fcomi
das
mov
out
mov
clc
add
push
shll
push
stc
inc
xchg
mov
inc
fwait
int3
jg
pop
iret
filds
mov
fldl
das
imul
cli
in
leave
add
mov
ret
cwtl
mov
bound
push
mov
or
clc
pushf
repz
cmc
xor
or
repnz
pusha
out
jle
repnz
shll
adc
popf
cmp
adc
dec
lods
mov
sbb
lret
adc
or
jae
sub
sbb
sub
cmp
add
icebp
add
mov
lods
fdivrs
xchg
jae
dec
out
jmp
push
adc
mov
push
pop
fucomp
xor
out
lds
mov
testb
aam
out
fwait
or
cli
mov
rcrb
mov
pop
jp
jbe
dec
push
mov
add
rcrb
jg
lret
mov
std
mov
add
rcrb
mov
int3
ds
push
xlat
mov
push
loop
pop
js
scas
mov
mov
ljmp
cmp
cmp
sub
push
data16
inc
aas
fdivs
sbb
pop
xchg
in
movsl
mov
or
sarl
gs
sahf
jb
cmp
or
loopne
lahf
sbbl
repnz
lahf
loop
lds
cmpsl
xchg
xchg
std
dec
jbe
rolb
js
aaa
test
mov
fistpll
dec
lock
mov
adc
or
scas
ljmp
mov
fnstcw
sub
loopne
jl
adc
imull
stos
lret
aaa
orb
lcall
ja
call
sahf
inc
cmp
test
lods
mov
test
pop
mov
mov
cltd
icebp
push
or
sbb
dec
mov
ss
jge
jb
mov
idivb
and
insb
jnp
aas
insl
sahf
and
jl
loope
pop
xchg
incb
mov
pop
rorb
mov
cmp
fcomp
fidivrl
fstps
mov
cld
adc
in
jae
lods
sahf
dec
adcb
jmp
sarl
dec
xor
outsl
test
adc
push
test
xchg
nop
adcb
xchg
and
popa
aam
push
xchg
cmp
fstpl
fildll
push
out
mov
xor
fiaddl
push
cwtl
bound
xchg
in
lds
nop
jnp
cmp
dec
scas
gs
bound
subb
popf
imul
enter
js
cli
sub
lods
sbb
je
nop
dec
or
cmp
fs
mov
mov
dec
or
mov
push
hlt
test
idivb
cmp
sub
mov
insl
shl
cmp
push
mov
ret
loope
sbb
enter
mov
mov
sub
jbe
adc
lods
pop
scas
push
subb
scas
inc
fwait
mov
cmp
lock
popa
es
pop
jg
xchg
dec
sub
cmp
pop
xchg
sti
mov
dec
mov
add
jle
sti
fisttpl
xor
leave
mov
cmp
add
sub
or
jbe
push
sahf
inc
repz
xor
add
jb
pop
lret
add
xor
pop
xlat
jo
lahf
ficoms
test
sbb
out
out
sbb
cld
push
or
ja
vmwrite
mov
std
sbb
jl
int3
lcall
lods
shll
and
adc
mov
outsl
push
mov
push
in
cli
pop
pushl
mov
nop
add
xchg
mov
xor
cmova
sbb
dec
xor
cmovle
lret
js
aaa
cmpsl
enter
aaa
lahf
das
pushf
jae
in
movsb
jp
or
mov
mov
xchg
xchg
cmp
adc
lcall
mov
mov
out
push
push
sti
jp
cmp
sahf
jl
jb
cmpb
add
es
pusha
es
lods
push
sbb
xor
sbb
out
adc
dec
scas
push
sbb
fisubrl
xorl
in
jl
push
pushf
mov
mov
dec
aaa
jnp
jnp
or
test
adc
mov
sbb
stos
sub
add
sub
clc
xchg
stos
cld
cltd
leave
fisubrs
mov
sub
sub
repz
shlb
pop
push
cld
lock
into
xchg
cmc
arpl
bound
xchg
mov
cld
lret
in
cmp
cmpsl
insl
sub
repz
ret
daa
cmp
sbb
gs
sti
cmp
test
xor
movl
stos
dec
loopne
into
mov
cmp
push
inc
xchg
adc
mov
push
popf
xchg
int
out
add
mov
mov
xchg
mov
xchg
ss
mov
jp
das
jl
and
dec
pop
insl
cmp
cmc
xchg
adc
mov
sbb
mov
or
cmp
ffreep
cmpl
sub
popf
xchg
xor
fisubl
mov
in
mov
shlb
sarb
mov
mov
pop
sub
loope
repnz
cld
movsl
es
mov
or
mov
dec
add
leave
stc
jg
and
insb
into
cmc
dec
pop
test
jp
mov
adc
outsb
lea
cmp
jo
fistl
jns
cmp
in
push
push
jmp
push
scas
mov
lea
popl
iret
ret
pop
jecxz
cli
mov
addr16
sti
imul
jmp
lods
in
sub
fcmove
test
dec
mov
push
out
mov
inc
bnd
cld
jo
jge
lret
test
dec
xchg
test
and
insb
test
add
in
mov
ja
test
pop
negb
jbe
xor
jmp
je
adc
dec
leave
push
test
sti
xchg
loopne
push
xor
dec
add
mov
dec
fwait
aaa
jb
xchg
cltd
jecxz
push
shlb
daa
pop
cwtl
insl
or
mov
pop
repz
push
jbe
fxam
in
js
adc
outsl
aam
out
mov
ss
xor
sbb
rcrb
call
jge
dec
push
push
scas
push
add
xor
adc
jp
xor
dec
sub
das
jbe
enter
gs
push
scas
rol
mov
cmc
jmp
pop
jb
mov
sub
lds
adc
icebp
aam
mov
mov
repnz
cmp
cld
push
jl
mov
cmp
call
xor
test
pop
faddl
lcall
push
fucomp
das
push
cmp
sub
out
push
add
repnz
insl
lret
fdivrs
dec
xchg
mov
push
std
xlat
scas
aaa
dec
test
pop
ficoml
mov
nop
shll
push
pop
shll
xchg
rclb
dec
popa
lock
jecxz
fcmovne
in
or
lahf
arpl
cld
pop
push
rorl
dec
nop
add
in
ds
pushf
xchg
adc
imul
mull
pop
inc
std
sub
cmp
lods
insl
sub
mov
jp
cmp
dec
roll
mov
into
add
hlt
in
insl
sbb
jno
sahf
dec
pop
pushf
xor
aaa
scas
push
ror
xchg
inc
xchg
xor
stos
mov
push
mov
add
test
addr16
cmp
in
fsqrt
xchg
packssdw
xchg
xchg
daa
sahf
cmpsl
add
mov
icebp
rcr
aad
push
enter
push
mov
std
push
mov
push
sti
adc
icebp
icebp
lock
into
cmp
aam
push
mov
hlt
enter
cmpsl
push
stc
insl
mov
jns
enter
fwait
aas
imul
hlt
filds
or
stos
cmc
lods
sbb
stos
fs
push
pop
cmc
xchg
aas
sub
call
push
pushf
in
les
test
dec
jge
inc
pushf
cs
js
ljmp
ja
mov
mov
fwait
and
testb
cmp
cmp
mov
sbb
int3
adc
ret
add
insb
std
push
or
mov
mov
int
pop
push
dec
cmp
inc
mov
mov
pop
shll
icebp
lahf
or
movsl
lods
adc
jbe
icebp
pop
popa
cmpsb
cmpsb
fisttpl
xchg
movsb
mov
lds
jae
push
hlt
push
stc
mov
fsub
imul
ret
jmp
lret
fidivs
pop
mov
fstps
fisttpl
pop
jle
mov
sub
leave
inc
in
inc
xor
mov
ljmp
and
ror
pusha
das
cmp
popa
daa
adcb
frstor
jno
les
les
repz
subl
dec
ss
xchg
ret
popa
dec
frstpm(287
inc
int3
jns
mov
subb
int
sbbl
sub
lret
scas
pop
int
mov
movsb
sbb
cmpsl
mov
int3
pmuludq
xchg
lea
jne
clc
jo
sub
test
xor
sahf
pop
cld
xchg
lret
lea
mov
pop
adc
jb
push
jns
pop
jne
sub
aas
xchg
mov
pop
adc
hlt
sarb
pop
sub
sbb
pusha
lods
aaa
cmp
pop
cmpsl
cmpsb
ret
enter
jne
inc
jnp
out
clc
mov
lds
enter
in
inc
fwait
mov
loopne
pusha
xlat
dec
out
lahf
add
shlb
inc
and
dec
jb
mov
aam
stos
pop
shr
out
fidivl
test
mov
mov
sub
xlat
fcmovbe
fldl2t
invd
xchg
mov
dec
or
jmp
or
cld
jnp
mov
sbb
mov
in
insl
icebp
fcoml
add
insl
jmp
lds
add
popa
jge
orl
aas
xchg
out
test
fwait
or
adc
and
aam
in
xchg
inc
mov
xchg
repz
add
sbb
or
mov
jecxz
out
lds
mov
mov
clc
xor
or
xchg
push
fsub
lds
bound
mov
ret
ja
adc
push
jmp
mov
pop
pop
ret
xchg
ret
sti
xorb
fisttpl
mov
mov
mov
jnp
gs
cmpsb
scas
imul
cltd
cmc
imul
inc
jno
add
mov
inc
cltd
jl
movsb
scas
dec
lods
fidivs
xlat
inc
popa
subl
and
or
cltd
aas
xchg
and
shll
push
out
pop
insb
aaa
jp
push
mov
fs
lods
idiv
ja
sbb
hlt
add
inc
in
repnz
dec
add
es
fwait
icebp
xchg
leave
adc
mov
out
mov
adc
dec
adc
test
iret
mov
into
add
in
je
fdivp
jo
mov
xor
xor
cmc
leave
movsl
add
ja
cmp
lcall
orb
in
out
push
inc
imul
dec
dec
fcmovu
and
fists
insl
arpl
pop
movsl
pushf
sub
xor
arpl
cmp
aam
pushf
ss
sub
aas
mov
outsb
jp
adcl
outsl
insb
scas
or
ret
call
cmc
stc
pop
lock
mov
and
iret
adc
push
push
pop
les
and
fsts
std
sar
rcrb
clc
or
out
imull
dec
ss
dec
mov
adc
mov
dec
push
inc
xor
push
loop
enter
int
add
das
jecxz
out
jns
jae
insb
sarl
add
mov
and
jp
decl
mov
out
jmp
lret
mov
mov
sbb
sub
jg
repz
cld
sbb
roll
adc
sti
pop
xorb
or
enter
ret
stos
xor
bound
mov
aas
jns
xchg
bound
in
push
xchg
jge
pushf
cmpsl
mov
out
test
int
fnstenv
jnp
cwtl
out
bound
decl
inc
ficoms
mov
mov
lret
mov
pushf
addr16
jnp
ja
push
sbb
cli
sbb
mov
fwait
xchg
ds
frstor
test
mov
call
mov
loope
adc
ds
aam
or
push
sbb
adc
pop
xorb
rorb
stos
test
pop
into
adcl
js
jmp
dec
jp
jne
shlb
mov
xchg
cmp
cld
leave
jge
out
outsl
xor
hlt
cmpsb
sti
lock
inc
dec
hlt
cld
nop
cli
mov
lcall
sbb
push
pop
adc
jmp
pop
test
fistl
test
adc
xlat
xchg
sahf
dec
movsb
adc
pop
xor
out
push
outsb
adc
test
cmp
mov
mov
xchg
enter
fldt
cmc
sbb
icebp
popa
popa
movsl
cmpsl
inc
adc
enter
mov
ret
mov
ret
or
data16
cli
jns
sub
scas
cli
mov
in
sbb
pop
outsb
orl
sbb
cwtl
ja
dec
adc
jp
call
lea
fld
push
xor
cld
dec
cs
mov
addr16
cmp
ljmp
mov
push
test
out
sbb
das
mov
add
mov
push
jmp
call
test
sub
daa
sbbb
ret
inc
lea
pop
shll
pusha
call
jns
dec
in
and
mov
xchg
xlat
or
adc
out
inc
pop
or
dec
in
scas
daa
dec
ret
sub
or
mov
fxch
xor
pop
loopne
shll
pop
and
aad
lret
pop
ljmp
or
idivb
pop
jle
insl
or
les
pusha
xchg
dec
outsb
mov
out
mov
mov
jp
loopne
adc
test
int
popa
adc
stos
shl
sub
mov
loope
xchg
lret
mov
pusha
add
cmpsb
push
mov
inc
mov
repz
popa
push
xlat
das
sbb
loope
mov
xor
pop
adc
je
push
repnz
jecxz
mov
dec
sti
push
cmp
sub
mov
cmc
lahf
cmpl
pop
rcl
cmpsb
cmc
fsts
insb
adc
jge
pop
aam
popf
pop
lods
das
fcompl
xchg
lret
sahf
sub
push
ss
aam
imul
lods
mov
and
scas
cli
or
imul
out
vmovshdup
dec
mov
ja
xor
jl
add
xor
mov
pusha
jnp
add
sub
sub
add
dec
cld
aaa
ds
xor
pop
xchg
popf
rcrl
aad
mov
mov
inc
xchg
sbb
addl
or
cs
push
fcmovnu
cltd
lock
iret
xchg
inc
inc
cmp
aam
or
add
lds
mov
push
push
sub
insb
outsl
dec
std
insl
cmova
or
inc
adc
add
or
data16
incl
in
icebp
icebp
sahf
mov
stos
xor
xchg
sbb
arpl
mov
push
cmp
pushl
bound
ret
fnop
aam
or
sbb
dec
dec
ret
mov
arpl
imul
rolb
xchg
lds
sbb
push
shll
call
or
sub
test
shr
cmp
mov
insb
fildll
lock
cmp
testb
jg
push
cmp
dec
add
cwtl
xor
dec
pop
adc
stc
push
sub
mov
cmp
shl
loop
jbe
dec
mov
xor
stc
cmpsl
nop
mov
mov
inc
into
idivb
jge
push
mov
bound
cs
cmpsb
adc
sub
xchg
inc
jmp
cmpsb
pop
and
cli
insb
ss
sub
data16
push
dec
mov
repz
push
add
andl
mov
adc
jno
or
adc
vgatherdps
cmp
shll
xor
fwait
mov
loope
stos
push
loope
aam
add
ret
call
cs
pop
push
dec
fsubp
in
push
xchg
adc
cmp
cwtl
jne
pop
cmpsb
popf
sbb
mov
adc
mov
xor
addr16
mov
mov
add
mov
xorb
mov
mov
loope
aad
dec
inc
mov
fs
outsb
sti
jecxz
mov
and
icebp
out
inc
in
out
sub
mov
lock
fwait
pop
jmp
into
and
xchg
sbb
popa
jecxz
mov
xor
xchg
mov
fbld
ljmp
lock
icebp
mov
inc
in
dec
jb
mov
mov
jns
xor
clc
in
xor
ljmp
push
push
mov
xchg
add
mov
int3
pushw
dec
and
jo
ss
mov
ljmp
mov
into
cmc
bound
stc
fldenv
jo
xchg
sbb
ret
pop
mov
adc
lds
sahf
adc
jo
pop
and
mov
push
pop
pop
push
icebp
mov
sbb
cmp
movsb
std
or
daa
lcall
lret
fadds
lcall
xchg
push
inc
cmp
test
loopne
adc
cmpsl
sti
push
or
mov
stos
int
dec
push
add
adc
ds
xor
es
cmp
cmpsl
xchg
outsl
cmp
jb
aam
jne
dec
inc
cmp
fadds
push
repnz
pop
rclb
cli
je
jge
das
pop
movsl
imul
pop
les
pusha
fildll
das
or
cmc
pop
dec
push
xor
xchg
out
push
mov
xor
sub
jl
mov
mov
fwait
test
inc
std
cld
push
pop
dec
xchg
cmp
jge
jno
scas
push
movsl
adc
arpl
cmp
ljmp
sub
mov
subl
aad
cmp
fwait
xlat
mov
mov
je
or
ljmp
or
int
loope
loop
xor
or
push
mov
adcl
pop
daa
daa
pop
lods
pop
lcall
mov
mulb
xchg
in
xchg
cmp
stos
pop
inc
xchg
push
les
pop
fsubl
fidivs
jo
cltd
add
pop
lahf
loop
sbbb
pop
sub
push
enter
jmp
adc
fwait
push
sub
mov
mov
pop
inc
loope
sbb
out
loope
push
inc
xor
adc
fbstp
mul
decl
xchg
xor
sub
inc
outsl
imul
jg
daa
or
cmp
cmp
clc
push
imul
push
or
dec
scas
out
fstpt
outsl
pusha
hlt
pop
xchg
jg
jmp
inc
jmp
ja
pop
in
sub
stc
sbb
repnz
sahf
jl
jae
scas
popf
sahf
ja
sbb
mov
sbbb
ds
pop
xor
out
pop
nop
out
ss
push
lret
testb
cmpl
js
pop
push
dec
aam
es
mov
lcall
cs
xlat
hlt
or
mov
es
fsubrp
jle
es
xor
ds
lods
repz
stc
cmp
mov
js
loop
lcall
cmp
sbbl
lock
decb
sub
mov
mov
out
fsubl
jmp
adc
mov
push
xchg
xchg
hlt
repnz
xor
cmp
pop
pusha
sti
in
movsl
adc
jno
test
ljmp
xor
push
pop
xchg
or
or
jno
cmp
inc
mov
dec
xchg
dec
xchg
mov
in
pusha
xor
xor
and
inc
jns
rolb
cmp
xchg
mov
add
mulps
add
pop
andb
cltd
lods
push
daa
xchg
xchg
iret
iret
fcmovbe
stc
mov
rclb
daa
lcall
jge
in
or
stos
ror
pop
in
out
inc
sahf
jne
bound
leavew
mov
ljmp
jae
lds
push
and
sub
pop
outsb
rcrl
movsl
xchg
xchg
mov
jl
push
cmp
pop
mov
xchg
jle
xchg
sbb
adc
add
inc
orb
nop
dec
mov
add
aas
xor
xor
mov
fcompl
iret
pop
jb
inc
stc
cs
enter
shl
push
mov
aad
pusha
inc
jmp
sti
jmp
cmp
mul
clc
jg
mov
add
mov
filds
pop
inc
mov
insl
cmp
xchg
mov
inc
jge
jnp
test
insb
xor
adc
call
mov
or
loop
stos
fldcw
loope
jecxz
in
pop
scas
lret
fsubrp
and
frstor
dec
movsl
sbb
fwait
push
sarl
adc
insl
cmc
bound
stos
xor
xor
mov
rcll
dec
or
push
mov
scas
mov
aas
xchg
loope
mov
xchg
fdivrs
xchg
or
es
adc
or
jmp
adc
loopne
outsl
shlb
in
xlat
inc
gs
mov
jle
shlb
movsb
push
addr16
enter
subb
cwtl
outsl
out
mov
cwtl
out
xor
imul
leave
test
xor
ret
fsubl
lods
sbb
jge
cmp
dec
dec
jns
inc
xor
xchg
adc
cld
mov
jnp
int3
shufps
leave
xchg
sub
dec
lahf
jecxz
icebp
mov
arpl
jmp
add
mov
pop
sub
jae
add
in
lahf
mov
out
push
movsl
mov
int
or
jae
ljmp
push
aam
mov
mov
dec
xchg
jle
sub
xchg
out
push
popa
js
jg
sbb
push
aad
push
insl
or
std
adc
iret
mov
mov
and
cmpsb
xor
mov
loop
call
pusha
shrb
outsb
sbb
fsubrs
mov
bound
mov
movsl
mov
negl
test
je
mov
insl
and
outsb
out
imulb
nop
jp
loop
mov
cmp
stc
xchg
xchg
push
cli
push
lea
ljmp
outsb
jae
pop
jbe
and
mov
jae
test
ret
sahf
inc
clc
jns
pusha
fs
add
xchg
adc
add
mov
add
xchg
xchg
sub
or
loope
add
cmp
cmpsb
pop
sbb
das
and
inc
sarb
mov
cltd
push
pushl
adc
or
push
test
and
out
out
mov
adc
pop
out
dec
cmp
pop
mov
dec
or
cmp
mov
jmp
jl
pop
pop
xchg
adc
outsb
push
loope
filds
imul
imul
fisttps
sti
fdivl
xchg
pop
and
mov
cmc
test
mov
push
mov
dec
push
add
jb
pop
inc
jno
lods
xlat
fwait
push
iret
dec
mov
and
push
cmp
daa
push
add
inc
lods
cmp
cwtl
sub
inc
dec
les
cltd
std
xchg
std
test
adc
mov
es
pushf
lret
add
cs
lret
lock
repz
xchg
mov
outsl
incb
cmpsl
pop
mov
sub
lds
repz
cmpsl
sahf
cld
out
ja
lahf
outsl
cmp
pop
dec
cmp
out
pop
pop
ljmp
and
outsl
inc
out
or
shlb
aam
outsl
movsb
adc
ja
jae
movb
add
daa
in
repnz
xchg
lock
and
xchg
orb
jle
cmpsb
js
test
sbb
push
mov
shll
adc
loop
das
scas
or
loope
xchg
icebp
mov
adc
imul
xlat
inc
ficoms
int
mov
nop
push
sbb
stos
xchg
shlb
stos
xor
imul
enter
inc
pop
adc
stc
pop
xor
inc
mov
imul
inc
cmp
push
jle
xchg
lahf
in
orl
and
incb
push
adc
inc
call
subb
pop
inc
rcrl
jg
push
arpl
sub
jo
test
mov
in
hlt
pop
orl
cmc
xlat
inc
add
out
stos
cmp
push
push
into
cli
xchg
repz
push
mov
sub
jg
cmp
stos
add
pop
hlt
sub
sbb
loop
mov
mov
sub
mov
cmpsl
jno
add
xor
pop
mov
in
ret
outsl
pop
adc
test
cmp
xor
rorb
in
push
add
push
lods
aad
fcoml
sbbl
in
outsb
sbbb
int
inc
clc
mov
loopne
adc
dec
cli
adc
adc
dec
xchg
mov
ss
and
lret
test
adc
data16
mov
shlb
cmp
pop
fdivs
and
push
push
es
movl
cltd
mov
shlb
shll
out
mov
sub
mov
ss
shll
lret
movsl
jo
rcl
repnz
cwtl
mov
inc
and
adc
pop
mov
mov
xor
pop
ret
imul
mov
loop,pt
movsl
out
mov
xchg
sti
mov
sbb
cwtl
insb
push
inc
enter
ds
fcompl
lcall
repnz
mov
loopne
cmpsb
add
outsl
pop
outsb
es
jne
inc
and
clc
or
add
mov
jmp
cmpsb
and
lods
lods
insb
aaa
inc
loopne
cmp
xchg
jo
xor
repz
cmpsl
outsl
lret
xchg
mov
sbb
cmp
std
inc
sub
stos
sub
cmc
cltd
mov
cmp
xchg
xchg
push
stos
xor
sti
movsb
jne
mov
ficoml
jecxz
or
hlt
and
fcmove
sbb
pop
aas
mov
aaa
shr
push
dec
jo
pop
xchg
or
into
xchg
push
dec
out
and
pop
test
or
sbb
pusha
incb
test
jg
out
pop
cwtl
pop
jl
mov
mov
scas
and
lock
jmp
lods
arpl
inc
mov
sarl
cmpb
aam
rolb
imulb
adc
ljmp
lock
inc
imul
mov
adc
fidivl
mov
mov
fwait
jge
push
dec
mov
shll
mov
pusha
mov
out
stos
push
xrelease
cltd
or
or
subl
insl
mov
repnz
lret
dec
jge
das
loopne
adc
das
and
cmc
pop
subl
adc
lret
pop
sub
mov
sbb
gs
lahf
cmpsb
rcrb
test
sbb
sbb
inc
rorb
mov
pop
xor
xlat
jl
pop
inc
popa
lea
loop
mov
inc
out
lds
jge
fisubrl
rorb
lods
mov
clc
test
nop
fwait
test
scas
lcall
jae
mov
cld
cwtl
aam
roll
jo
pusha
int
loope
sbbl
and
les
and
dec
leave
lods
lods
add
shrl
sub
ss
insb
stos
and
lcall
jb
fdivs
cmp
xlat
arpl
iret
sbb
punpckhbw
sub
add
sub
out
push
lret
fwait
push
repnz
sub
lods
ror
inc
sahf
add
outsb
pop
imul
mov
lea
push
and
add
mov
mov
dec
xchg
fs
cs
mov
add
ds
push
or
mov
xor
popf
sub
xchg
jmp
dec
aad
js
loop
jnp
mov
xor
mov
scas
ljmp
adc
test
pop
or
sub
inc
inc
dec
jmp
xchg
inc
jp
lcall
mov
in
xchg
jmp
mov
cli
inc
sarb
shll
and
lret
and
rcrl
in
lahf
sub
inc
rcrb
ja
mov
movsb
jno
mov
cmc
xchg
rcrl
icebp
jns
gs
jo
xchg
arpl
movsb
mov
sbb
dec
mov
or
cmpl
jnp
or
pushf
xchg
pop
and
stc
dec
push
or
dec
pop
sahf
imul
fsubs
pop
test
adc
cmp
fsubrp
test
jle
xchg
les
andl
xchg
pop
inc
mov
into
dec
push
loop
clc
rcr
pop
ret
out
bound
js
js
int3
cmp
jae
fsubl
es
dec
fildll
cwtl
lds
cmp
jmp
sbb
and
sub
fiaddl
je
push
repnz
fistpll
icebp
data16
movsl
inc
mov
mov
and
xchg
inc
fiaddl
out
lock
pop
fdivrs
pop
cmp
adc
mov
and
sbbb
fstps
lds
divb
mov
dec
pop
mov
xchg
jl
cmp
lcall
pop
pop
or
int
adc
pop
les
dec
push
or
rcr
pop
lret
xchg
into
mov
les
push
jg
sbb
xchg
add
jns
testl
hlt
shll
inc
cltd
sar
insb
insb
or
or
testb
out
pmullw
int3
fidivl
inc
mov
mov
test
leave
xchg
mov
sbb
mov
dec
ljmp
loopne
push
ret
or
mov
outsl
adc
out
mov
adc
test
call
pop
push
repz
pop
add
in
mov
test
mov
in
out
test
xchg
mov
adc
scas
sub
and
mov
mov
sub
push
leave
xchg
jo
mov
cli
fistl
ss
add
enter
imul
jae
and
xor
push
inc
xchg
mov
jbe
nop
or
jno
mov
or
jp
mov
pop
lods
adc
fwait
jb
pop
cltd
dec
ret
cmp
cmp
cmp
add
mov
inc
or
add
ss
cs
add
mov
jp
into
je
sbb
xchg
ds
daa
shrb
pop
aas
mov
jmp
int3
fwait
arpl
or
adc
fsubl
loopne
xor
rclb
out
mov
loop
ljmp
jne
mov
dec
pop
scas
gs
ficoms
cmp
xchg
jle
sbb
pop
sbb
cmpb
lods
pusha
in
repnz
test
loopne
adc
fs
scas
hlt
lods
fdivrl
decb
inc
push
mov
and
nop
xor
scas
cli
mov
sahf
out
hlt
push
test
addr16
xchg
xchg
repnz
test
ret
adc
lods
dec
mov
xchg
push
scas
fldt
xchg
jg
mov
aas
mov
shlb
jo
ret
push
arpl
incb
jmp
push
mov
inc
sbb
into
je
mov
mov
data16
aaa
lcall
lcall
fwait
mov
sahf
fildll
or
jns
xorb
mov
sbb
push
and
inc
sbb
mov
inc
jp
and
dec
mov
les
mov
push
scas
push
adc
aad
xor
mov
inc
mov
pop
ja
js
push
daa
mov
add
dec
xchg
fsts
xchg
dec
mov
insl
jo
or
or
and
inc
hlt
frstor
sub
dec
dec
subb
icebp
inc
sub
je
mov
jg
into
mov
leave
sub
sub
mov
stos
jecxz,pt
mov
jbe
jle
and
in
or
xchg
popa
add
sub
repnz
xchg
loop
jb
or
cmpsb
mov
shrb
pop
add
aad
outsb
xchg
shll
clc
sbb
loopne
jbe
and
push
popa
cmpl
dec
mov
or
stos
sub
push
and
outsl
mov
shlb
or
orb
fcmovne
aaa
inc
inc
push
dec
xor
stc
mov
fstl
xchg
loop
mov
jns
xchg
je
loopne
daa
inc
adc
and
add
sbb
mov
pop
inc
stc
xchg
scas
enter
add
lods
xor
sbb
imul
xchg
jge
xchg
or
mov
test
cs
sahf
xchg
sub
dec
daa
lock
cmc
add
and
dec
sarb
sub
lahf
cmp
stos
push
xorl
test
mov
hlt
sbb
arpl
bound
fldcw
or
xchg
push
iret
movsl
xor
cmp
lcall
lahf
imul
and
mov
mov
clc
sub
jbe
dec
rolb
test
decb
adc
adc
push
imul
pop
sahf
fisttpll
jns
in
adcl
sbb
decl
cmp
sahf
xlat
cmpb
lods
fcomi
pop
pop
lret
cwtl
xchg
mov
pushf
in
dec
mov
dec
imulb
shll
hlt
stos
xor
ret
repz
fdivr
cmp
pop
idivl
push
xor
call
mov
sub
and
outsb
repnz
nop
add
cmp
adc
add
cmpsl
sti
iret
sbb
mov
lret
mov
in
movb
fldl
sub
xchg
push
sbbl
jl
aad
lds
fisubs
andb
push
mov
push
shrl
push
push
sub
mov
sub
les
sahf
nop
dec
mov
cmpsb
test
orl
mov
fwait
stos
dec
mov
in
sbb
lret
fs
rol
mov
mov
sub
sub
pop
cmp
roll
xchg
ja
arpl
mov
popa
or
cltd
mov
add
data16
les
push
ljmp
test
adc
popa
cmc
rorb
inc
push
dec
jo
dec
cs
popf
add
pop
mov
std
pop
cmpsb
imul
pushf
xor
push
push
and
and
fimull
clc
in
xchg
and
xlat
stos
mov
dec
cmpsb
xlat
push
add
dec
jg
pop
jecxz
xchg
xor
and
roll
xchg
ja
xchg
or
test
test
mov
enter
mov
daa
dec
out
mov
mov
and
lds
adc
into
push
xor
jl
fdivrl
pop
out
and
into
jnp
adc
cmpsb
ret
loopne
mov
dec
pop
sahf
ret
mov
mov
jg
icebp
sub
les
call
mov
mov
clc
mov
loop
cmp
arpl
push
out
aad
pop
outsl
sbb
push
ljmp
mov
mov
divb
cs
xlat
xchg
and
push
push
in
sub
pop
push
aam
fwait
xor
rolb
pushf
clc
mov
pop
lcall
add
aaa
inc
in
pop
dec
andb
loop
arpl
pop
js
jge
mov
sub
loop
pop
pusha
out
and
push
stc
test
pop
dec
cmpsb
xchg
leave
cmc
sbb
in
notb
roll
mov
test
jne
aaa
push
pusha
push
mov
aaa
sahf
jbe
stc
or
call
mov
lret
mov
push
mov
xlat
push
rcll
and
mov
pop
jbe
mov
and
frstor
or
addr16
add
int3
dec
repz
popa
cmc
inc
inc
xor
and
cmpsl
enter
xor
jl
imul
lods
lock
pop
fldcw
jnp
pushw
fldt
or
adc
mov
imull
popa
adc
dec
icebp
loopne
fnstcw
push
xchg
mov
loope
mov
pushf
repz
shlb
mov
negl
and
xor
pop
mov
out
push
mov
lret
cmp
pop
das
and
sahf
jnp
mov
aas
lea
xor
sbb
xchg
pusha
cmp
ss
fsub
and
or
inc
cmp
faddl
inc
sahf
mov
mov
lods
dec
cmp
insl
xchg
jl
dec
sbb
jg
mov
push
or
loopne
mov
pinsrw
jge
pop
pushl
jg
mov
outsl
js
push
mov
cmp
test
fstp
clc
push
ljmp
popf
lret
scas
cli
fcoms
mov
sbb
loope
xor
jo
cmp
outsb
mov
loop
lea
sahf
sbb
push
push
jb
imul
dec
xor
mov
jecxz
sbb
push
je
mov
out
inc
dec
call
push
imul
in
leave
dec
test
and
lret
sbb
pop
fadds
imul
rcrl
sub
cld
iret
mov
out
sbb
inc
out
mov
jl
jg
dec
pop
repnz
inc
mov
insb
dec
adc
bound
jle
cmpb
outsb
out
ds
inc
xor
push
ds
out
imul
jo
xor
inc
mov
mov
sbb
mov
aam
dec
inc
in
or
or
adc
xchg
cmp
shrl
pop
inc
fwait
gs
cli
cmp
ret
xlat
call
popf
mov
mov
movsl
scas
shr
lea
ss
jb
mov
aaa
xor
inc
enter
arpl
mov
dec
sbbl
out
insb
clc
push
popl
lcall
adc
push
sub
pusha
sub
test
dec
adc
pop
scas
ds
pop
jge
repnz
je
jmp
cmp
sbb
mov
adc
stc
adc
push
xlat
or
dec
out
add
daa
mov
inc
mov
scas
xchg
in
inc
jl
sbb
cmp
pop
in
push
rcll
lcall
inc
ret
xor
sahf
insb
mov
sahf
push
iret
adc
xor
xchg
inc
or
nop
pusha
test
jb
outsl
adc
pushf
jae
jl
lock
push
sbb
dec
inc
xchg
les
mov
mov
aad
add
mov
nop
pop
gs
jmp
jp
ret
cmp
iret
lahf
jmp
cltd
mov
push
fimull
lods
fmul
or
jecxz
faddl
add
mov
xor
cmp
mov
mov
loop
out
xchg
mov
fldenv
push
in
les
mov
or
pushf
cmp
jnp
cs
dec
mov
cmpsl
cltd
dec
pop
out
dec
ja
add
or
dec
push
in
add
mov
pop
int
scas
mov
data16
push
lret
std
or
lea
loope
pop
adc
out
mov
mov
fisttps
lcall
cmp
lcall
repz
sub
push
lcallw
and
inc
add
sbb
in
ds
das
int3
sbbb
lods
outsl
jbe
outsb
fldlg2
mov
mov
cmp
fdivl
test
sbb
mov
in
or
xchg
xchg
jl
test
dec
fcoms
adc
sbb
jo
xchg
mov
movl
notb
adc
adc
xchg
sbb
xlat
sbb
or
push
cs
xchg
push
pop
xor
xchg
scas
inc
sahf
std
cmc
dec
rorl
enter
add
jge
add
and
jmp
and
mov
insb
sahf
add
fwait
aad
js
sti
inc
jl
add
insl
rorl
jno
xchg
fwait
sbb
shl
sbb
in
inc
mov
repnz
mov
push
xchg
pop
or
jo
sbb
push
mov
int3
jmp
xchg
xchg
push
push
aas
push
sbb
and
js
scas
lret
lahf
lds
into
xchg
sbb
mov
dec
gs
and
sub
push
sbb
lock
dec
sub
lds
push
pop
xor
repz
ja
mov
fucom
jae
cmp
xchg
fidivl
xor
dec
out
loope
es
clc
or
aas
cld
jns
mov
js
aad
pop
out
sbb
fwait
lret
mov
fsubrp
cld
fmulp
push
lock
inc
jl
pop
inc
int3
pushf
ret
and
mov
cmp
push
jo
push
aam
cmp
pop
sbb
andl
mov
std
mov
jle
dec
lods
jge
inc
scas
and
insl
and
jnp
lds
push
xor
iret
insl
push
mov
push
or
xchg
test
sub
cmp
cmc
fnstenv
es
pop
std
pop
jp
fisubrl
data16
pop
fsts
sti
sbb
mov
dec
daa
ret
pop
jge
jne
adc
aad
mov
add
lods
push
loope
divl
sti
scas
popf
shrl
xor
sahf
xchg
inc
jnp
cwtl
into
xchg
push
sbb
loop
inc
pop
and
add
inc
push
xor
test
pop
mov
hlt
jmp
mov
pop
lock
xor
lret
pop
fisubs
pusha
ds
or
clc
or
sti
fisubrl
dec
sahf
hlt
xor
fstpt
and
xor
cwtl
dec
hlt
movb
leave
mov
sbb
ja
fidivs
xor
sbb
in
cmpsl
dec
ljmp
int3
add
loope
test
call
dec
push
mov
fucomip
mov
fldlg2
scas
aad
fmuls
jno
mov
out
negb
cmp
inc
outsl
dec
addps
mov
mov
mov
pop
insl
mov
pop
popf
es
pop
push
push
fimuls
push
pop
imul
dec
rcl
push
arpl
insl
movsb
cmp
cs
pop
dec
mov
addr16
bound
cmp
in
pop
add
insb
push
rolb
sub
push
fwait
nop
mov
inc
scas
xchg
xchg
std
push
and
aas
cltd
add
cmp
mov
out
pusha
add
stos
pop
dec
cltd
repnz
xchg
dec
xchg
cmp
neg
frstor
add
aas
leave
jno
push
push
scas
js
push
into
adc
daa
fisubs
insl
adc
shrl
or
sahf
push
sbb
adc
mov
push
sbb
sbb
rol
jecxz
mov
mov
ja
inc
fsubs
adc
inc
fiadds
jo
ds
or
leave
dec
mov
cli
bound
adc
loope
call
sbb
push
push
push
mov
ja
out
cmp
or
inc
xlat
pop
and
dec
pushf
mov
mov
arpl
daa
jg
scas
out
aas
lret
lret
iret
push
iret
scas
iret
cs
push
gs
inc
cmp
cmp
loopne
inc
fsts
xor
das
mov
sub
xchg
icebp
stc
push
jle
mov
jle
mov
jno
rcll
or
mov
addr16
orb
push
mov
push
pop
ss
lea
out
cltd
pop
and
cs
cmp
inc
outsb
or
push
mov
inc
dec
push
xchg
js
out
jno
aas
xor
fldl
cmc
adc
pop
bound
not
jbe
dec
and
dec
outsl
shr
je
dec
xor
mov
leave
sbb
mov
shrb
subb
jns
xchg
mov
mov
leave
push
inc
adc
mov
mull
add
jo
fucomip
or
adc
les
dec
repz
cld
ljmp
xor
ss
pop
or
mov
push
inc
aas
jbe
fcmove
cltd
out
inc
xor
out
out
dec
push
negb
jmp
cs
scas
es
jge
xchg
lea
jae
cltd
push
ljmp
ss
fs
mov
in
dec
push
sbb
fstpl
sbb
inc
mov
push
rclb
mov
or
sahf
clc
cmp
or
pop
loope
popa
add
test
int
xchg
imul
sti
cmp
jl
lahf
push
les
add
js
insb
sub
xchg
push
das
and
fsubl
inc
in
lds
andb
enter
sbb
jecxz
xchg
lods
movsb
gs
fidivrl
sbb
xor
pusha
rorb
push
and
inc
mov
out
test
movsl
pop
filds
sbb
ds
xchg
and
mov
mov
push
push
xchg
int
out
mov
lahf
call
cmp
cmp
stc
sbb
dec
push
and
mov
jecxz
add
inc
jnp
ljmp
orb
into
push
mov
imul
push
inc
out
adc
inc
les
mov
cmp
or
icebp
pop
pop
xchg
ret
xor
push
popa
and
cmp
repz
inc
dec
iret
pop
sarl
sbb
iret
add
test
iret
pop
pop
or
and
inc
or
fs
add
stos
cmpsb
jp
or
lea
inc
mov
rcrl
xor
cltd
movsl
pop
imul
push
cmp
xchg
cwtl
sub
xchg
dec
andl
aad
jle
cmp
xchg
mov
stos
ss
dec
fnsave
popf
dec
xorl
jmp
sarb
cmp
scas
mov
cmp
loope
stos
xlat
jbe
push
pop
test
and
xchg
mov
fstpt
lods
mov
rorb
jl
adc
xchg
ja
add
movsl
jmp
insb
dec
adc
jp
and
pop
fistpll
icebp
mov
jle
push
xchg
xchg
lret
test
fstl
ret
imull
fadd
ss
cmp
jnp
push
out
mov
cwtl
ja
mov
cmp
mov
dec
and
adc
stc
loop
les
xchg
sbb
insl
jae
xchg
scas
out
mov
jg
pop
pop
dec
add
leave
aad
into
jae
add
xchg
pop
or
sub
and
xchg
jbe
rcrb
push
inc
loopne
mov
lret
mov
pushf
add
and
jne
cli
cld
inc
pop
xor
cs
nop
fisubl
out
sub
cmp
shrl
inc
cmp
inc
je
xor
outsl
int3
jg
cltd
mov
out
push
insb
mov
in
cmp
arpl
adc
mov
aam
aad
mov
fwait
lods
mov
cwtl
mov
xchg
sub
lret
mov
push
sub
mov
cltd
dec
xorl
and
mov
movsb
stc
lahf
lea
cltd
mov
ret
clc
push
jle
cmp
xor
or
xorb
out
popa
adc
popf
xchg
std
inc
push
inc
popf
xchg
pop
mov
jl
mov
mov
insl
or
push
push
mov
xchg
fildll
inc
jbe
jno
aad
xor
and
out
test
cmp
dec
jp
inc
push
shlb
dec
adc
push
jle
mov
rcrb
rcrb
sbb
fisttpll
sbb
lock
pop
push
jmp
pushf
xchg
iret
inc
dec
popa
jle
xchg
cmp
cld
incb
inc
fwait
ljmp
out
loope
or
push
cmp
aad
adc
lret
push
mov
shrb
xor
fdivrs
cmp
cli
orb
mov
lcall
xor
fimuls
rol
arpl
cmc
jl
bound
jge
testl
ja
xchg
add
loop
in
cmp
or
mov
imul
aad
sub
sbb
sahf
cmp
inc
inc
and
movb
sbb
imul
inc
xchg
or
push
pop
sahf
push
cwtl
cmp
sbb
cmp
repnz
adc
add
push
jnp
or
iret
sub
cmp
push
jo
mov
cmp
repz
xchg
test
and
xchg
int
cmp
shr
mov
lock
jb
pop
jmp
mov
and
pop
xchg
out
mov
add
or
and
in
sub
in
ret
sbb
and
mov
sbb
js
cwtl
mov
test
add
addl
add
fwait
jle
in
mov
sahf
cmpsb
mov
jg
int
jns
data16
mov
lea
push
pop
inc
inc
xchg
push
sahf
adc
arpl
and
jb
sub
sbb
ds
out
cmp
push
pop
aaa
xchg
sarb
push
mov
arpl
fsubs
xchg
jae
mov
loop
push
mov
scas
push
push
cltd
xchg
mov
cmp
movq
std
xlat
mov
iret
ret
add
adc
xchg
pop
jno
loope
push
movl
cmpsl
sub
fnstenv
sub
cmp
imull
mov
or
iret
aad
loope
push
inc
pop
push
sarb
jnp
add
lea
mov
xchg
xor
push
nopl
fcmovne
pop
cwtd
out
sub
jge
test
inc
aaa
and
add
stos
pop
aam
push
das
mov
jg
mov
out
and
xchg
into
inc
or
outsb
sahf
mov
or
add
mov
fs
mov
pop
dec
fwait
and
sub
lock
daa
ret
call
roll
xchg
cmpsl
xor
jge
push
lret
lods
sbb
stc
incl
add
call
xor
es
out
stos
stc
cmpsl
out
ret
sbb
push
jns
iret
pop
pop
push
push
rclb
pop
mov
push
movlps
add
sbb
fdivrs
pushl
inc
lcall
jo
lcall
cmp
cmpsl
std
cmpsl
pop
jno
movsb
jo
sbb
mov
jmp
imul
inc
jne
mov
mov
or
cmpsb
hlt
adcb
push
mov
mov
adc
xchg
inc
not
mov
and
mov
movl
lret
xor
adc
mov
inc
jmp
pop
lods
xchg
adc
dec
int
sub
jl
repz
push
xchg
inc
aad
cmp
add
push
push
lret
mov
inc
fs
insl
sub
pop
mov
cmc
mov
mov
fdivl
je
mov
sub
mov
fsubrs
stos
sti
mov
lahf
idivb
pusha
inc
ljmp
fs
cmp
and
enter
push
popl
mov
jnp
fnstsw
es
call
bound
xchg
outsb
cmp
pop
mov
jae
out
jnp
mov
mov
sub
fidivs
jg
push
stos
shll
xor
mov
mov
mov
out
lret
cmp
test
ror
jecxz
push
and
aaa
fldt
pop
mov
mov
test
mov
lahf
mov
jg
nop
in
sbb
outsb
sbb
or
sub
imul
int
inc
push
pushl
mov
pop
stos
mov
sbb
roll
inc
div
jbe
js
int
popf
jecxz
outsb
bsf
push
mov
dec
stos
dec
outsb
cld
cmp
dec
addr16
out
and
jge
jg,pt
or
mov
jecxz
xchg
call
mov
rcrb
cmp
popa
jp
je
and
mov
dec
lds
mov
sub
inc
sti
notb
shrl
fs
mov
jne
sub
std
add
dec
mov
or
in
jno
pop
mov
xchg
aaa
jp
pop
mov
cmp
stos
loop
xorb
mov
inc
lods
sarb
jle
push
aam
loope
sbb
adcb
int3
cmp
in
xchg
jp
xchg
xchg
and
mov
mov
push
push
adc
pop
je
das
test
push
test
inc
or
rcrb
cwtl
daa
shr
loope
sbb
aad
pop
hlt
lods
lock
in
pop
or
jl
sbb
push
dec
outsl
xchg
push
ljmp
mov
add
arpl
lock
xor
ja
mov
stos
lret
mul
stos
mov
pop
adc
mov
mov
inc
dec
int3
push
xchg
inc
sar
ret
mov
fidivrs
sub
pusha
out
out
jmp
in
xor
mov
mov
adc
scas
adc
push
insb
jb
add
sahf
and
sbbb
fistpll
call
out
xchg
add
out
jo
pushf
mov
mov
sub
cli
aad
out
int3
push
inc
outsb
test
stc
xlat
out
loop
pop
stos
mov
adc
inc
shlb
or
push
cs
xchg
lods
loopne
add
pop
ret
addr16
lcall
xchg
and
xchg
ret
lds
popf
dec
xor
mov
popf
push
into
js
mov
rolb
and
adcb
mov
scas
aad
out
out
add
sub
lea
lret
in
inc
leave
sti
js
dec
into
int
dec
bound
push
lret
mov
test
dec
std
repnz
xchg
shll
lods
xlat
aad
xchg
and
xchg
jecxz
ret
xor
sahf
xor
test
jge
sbb
scas
neg
pop
shr
lret
sub
cmp
inc
sub
popa
lret
pop
sub
in
fwait
ljmp
dec
cmp
fisubrl
inc
jmp
xchg
mov
cld
sarl
or
mov
mov
pushf
mov
jno
cwtl
inc
sub
daa
popa
inc
mov
sub
cs
push
fs
in
xchg
lret
adc
out
adc
push
mov
inc
inc
nop
fimull
inc
loopne
popa
jp
cmp
jp
inc
pusha
imul
and
iret
push
test
and
pop
sub
cld
out
sub
push
jb
pop
jp
movsl
in
push
std
dec
jl
cltd
lds
push
mov
and
out
sti
jns
rdtsc
cmpsb
daa
sbb
ret
mov
sar
gs
fwait
mov
sub
and
mov
icebp
mov
repnz
xlat
out
xor
cld
dec
mov
mov
adc
add
pop
loope
into
ret
jnp
cltd
ss
cmc
sahf
jl
xor
lahf
cmp
scas
mov
nop
xchg
cwtl
loop
fldl
cmc
insl
mov
fidivl
adc
sbb
mov
leave
mov
push
jl
aaa
mov
sbb
mov
xchg
inc
jnp
jae
sti
shlb
lret
sbb
push
pop
adc
outsl
xchg
jb
xor
mov
fadd
or
or
shrb
aaa
fldenv
and
test
stos
mov
js
jno
adc
mov
mov
mov
adc
mov
incl
mov
int
nop
inc
xchg
inc
pop
jne
lods
ficoml
sahf
pop
hlt
stos
ret
enter
pop
stos
in
mov
cmpsl
xor
pop
scas
sbb
cmp
in
mov
nop
cli
dec
sbb
jae,pt
push
sbbl
imul
sbb
data16
xchg
movsl
iret
dec
ret
jb
out
loop
loopne
cmc
inc
idivb
shl
xchg
faddl
cmp
xor
jge
mov
shlb
or
jmp
arpl
or
jp
mov
aam
insb
adc
cwtl
jecxz
insb
xor
out
push
stc
adc
add
addl
lcall
cmp
bound
ret
push
movsl
push
jnp
mov
jne
and
fcompl
ljmp
sbb
mov
and
mov
jns
cmc
cmpsl
roll
xor
mov
sub
sub
fmul
sub
pop
mov
testb
shl
int
fxch
test
mov
cmpsl
jb
mov
mov
test
push
ja
test
repz
fisttpl
aas
call
xchg
shl
lahf
movsb
in
mov
xchg
int3
add
ja
call
mov
into
pop
subl
jns
inc
jne
push
sub
pop
addl
mov
push
pop
ja
pop
xchg
jbe
aad
cmpsl
mov
adc
push
or
hlt
inc
add
insb
push
push
and
clc
jb
loope
mov
sub
mov
imul
inc
adc
icebp
xchg
out
ldmxcsr
cmp
test
adc
jl,pn
jbe
clc
in
mov
mov
push
and
popf
arpl
push
push
scas
pushf
js
cld
test
fs
lahf
cmpsb
push
je
inc
or
mov
mov
loope
dec
fwait
jle
jecxz
sysexit
sbb
mov
add
cmp
mov
popa
cwtl
inc
rcrl
int
int
mov
or
ret
dec
shlb
fsubrl
fwait
popf
add
lods
lcall
inc
test
sbb
pop
dec
xchg
out
mov
jmp
rolb
out
xor
cltd
inc
inc
jge
sbbl
jbe
lods
fwait
dec
jge
lock
and
ja
sbb
int3
cmc
ljmp
aad
or
push
jo
mov
push
idiv
and
add
sahf
addr16
pop
movsb
int
dec
sbb
inc
pop
sub
pop
or
cli
inc
je
dec
lea
add
push
push
enter
mov
call
outsb
fwait
int
push
or
ds
inc
sbb
lds
xchg
stos
mov
mov
in
push
cmc
and
cmp
movsb
sub
movsl
cwtl
mov
adc
cwtl
cs
jne
or
pop
je
mov
pushf
sahf
jg
dec
rcrl
dec
sahf
cmp
in
jmp
call
pop
js
or
jno
push
lcall
fwait
and
sbb
dec
in
ja
scas
pop
ds
xchg
jb
retw
push
mov
popa
stos
and
jne
cmpb
mov
push
test
movl
add
xchg
shl
jae
bound
cmp
or
xor
push
lea
pop
dec
out
jnp
mov
adc
and
shr
int
addb
sbb
orb
add
jno
dec
rcrl
divb
cwtl
dec
or
pop
ljmp
cmp
imul
sub
test
adc
xchg
sbb
outsl
lds
test
fs
add
insb
gs
es
sub
out
push
cmp
xor
xchg
xor
jne
jl
lods
fbstp
insb
cwtl
outsb
ljmp
jae
jo
mov
mov
movsl
mov
push
lock
adc
pop
add
fcomps
daa
lea
xchg
mov
out
nop
mov
negb
dec
pop
xor
mov
cli
mov
mov
incl
sti
stc
testb
or
mov
cld
add
fnstcw
aaa
mov
dec
xchg
fdivp
add
insb
add
movsl
scas
jmp
mov
push
bound
or
fst
cwtl
xchg
pop
sub
fiadds
adc
ficoml
xchg
lea
jecxz
push
rclb
ljmp
popf
and
xor
jmp
test
mov
insb
aaa
lods
imul
lcall
orb
push
push
xchg
pop
daa
xchg
into
mov
int3
fsubrp
jbe
inc
or
sti
xchg
mov
int
mov
fdiv
cmc
push
jo
int
in
sti
pop
sbb
outsl
in
jle
adc
divl
fucomip
leave
mov
dec
push
cli
test
mov
stos
adc
ja
jle
add
sub
loope
push
inc
mov
cmpsb
stos
or
ret
push
add
mov
jmp
out
sbb
incl
mov
adc
add
inc
mov
out
fcompl
adc
or
xchg
dec
jo
loopne
dec
pop
jg
divb
scas
mov
fistl
dec
addb
enter
jae
movsb
xchg
dec
jge
je
add
inc
xchg
test
imul
push
jnp
adc
jns
out
iret
mov
sar
loopne
scas
push
dec
mov
mov
sub
sbb
outsl
lods
or
lock
or
rcr
push
inc
mov
inc
int
jne
jo
iret
ljmp
icebp
push
ret
mov
testl
stos
out
add
test
mov
push
gs
pop
sbb
cmp
roll
cmp
dec
or
in
and
in
test
pop
sbb
xchg
movsb
pop
fwait
scas
cmp
inc
sarl
inc
fbstp
jecxz
dec
inc
or
xchg
in
inc
je
call
cmp
je
loop
fs
xchg
nop
lods
dec
xor
xchg
lret
sub
pusha
scas
insb
ret
orb
add
scas
fcmovnbe
mov
push
sbb
xor
and
mov
out
mov
stos
sub
icebp
mov
pusha
int
sbb
loop
or
les
mov
sahf
icebp
pop
js
cmp
push
inc
outsl
mov
imul
loopne
mov
sub
cld
nop
lcall
rol
jno
movsl
inc
bnd
nop
jnp
jmp
mov
pop
lcall
or
add
sbb
jbe
mov
call
jnp
xor
cmc
es
xor
mov
xor
std
cltd
pop
push
mov
imul
bound
push
mov
aad
sbb
pop
repz
out
dec
and
stos
call
repz
cwtl
or
rcrl
push
in
jmp
stos
and
sbb
out
sbb
mov
in
enter
insb
ja
mov
cmc
das
sbb
xchg
pop
xlat
inc
mov
mov
int
pop
sub
push
inc
adc
outsl
adcb
jp
incb
pop
jle
lret
sahf
fistpll
dec
mov
popf
mov
pop
sub
inc
inc
mov
inc
sub
mov
fdivrs
inc
cli
push
mov
mov
and
mov
cmp
out
xlat
mov
sti
xor
and
insb
dec
xor
mov
gs
and
add
test
pushf
es
repnz
add
mov
andb
pop
fdivrp
in
push
adc
cmp
xor
rolb
hlt
xlat
jl
icebp
lcall
lret
xor
adc
pop
cmc
aaa
sbb
aam
fwait
pop
aas
push
mov
sti
frstor
push
iret
cld
add
mov
pop
xchg
test
mov
enter
jl
pop
pop
out
cmp
xchg
int
add
sbb
mov
adc
fidivrs
repnz
mov
push
mov
sub
xchg
cltd
dec
subb
xchg
xlat
push
movsb
fdivrl
sub
lret
jbe
aas
in
ret
mov
push
or
std
fdivp
fwait
lahf
inc
jecxz
lods
movsb
leave
loop
movsb
fsubl
addb
inc
test
pop
xor
sahf
sti
fdivrp
jne
ss
pop
or
test
cmpsb
mov
mov
jmp
sub
mov
fnstsw
mov
in
nop
jne
xchg
mov
cmpsb
xchg
fwait
sbb
cmp
and
fnstenv
loop
loopne
repnz
adc
dec
imul
adc
loop
mov
or
push
fsubl
xor
fs
mov
push
packsswb
push
scas
push
cli
cs
cmpsl
cmp
in
dec
imulb
pop
mov
push
push
jo
sti
mov
mov
iret
xchg
sbb
out
cli
mov
repz
or
je
movsl
inc
lds
fbld
fldenv
in
xchg
or
popa
jp
adc
pop
bnd
andl
popf
pushf
loop
scas
cwtl
test
push
inc
mov
into
pushf
mov
xchg
add
cli
push
fldenv
or
cmp
push
movsb
xchg
loop
arpl
test
fsubrp
cmc
hlt
es
js
xchg
lcall
icebp
mov
dec
mov
aas
sbb
inc
and
jo
mov
cmp
sub
inc
ficoml
ja
dec
out
and
inc
cmpsl
sub
stos
addr16
ret
popa
and
sbb
mov
stos
or
add
push
xor
xor
mov
cmpsl
inc
add
sysret
or
mov
shlb
loop
pop
insl
icebp
loop
xor
fisubrs
mov
dec
call
cmpsl
jmp
jp
mov
das
jbe
cli
test
pusha
pop
jo
xor
test
out
inc
dec
notb
adc
xor
and
mov
mov
inc
fs
pop
mov
loop
push
mov
pop
repz
and
xor
rorl
pop
or
lods
mov
mov
cwtl
popf
dec
scas
das
xchg
or
mov
outsl
xor
xorb
jge
stos
xchg
pop
sbb
loope
sbbl
outsl
add
dec
clc
cmpsb
and
or
cltd
rcr
sbb
int
sub
pop
pop
out
add
push
fsub
hlt
mov
jle
mov
xor
mov
or
outsb
mov
mov
cs
cmp
das
jnp
jl
jne
dec
mov
xchg
and
push
out
std
addr16
add
sub
ja
xor
adc
adc
das
xchg
sub
jle
xor
lea
mov
jne
cmp
mov
fs
outsb
inc
cmp
xlat
sarb
inc
in
das
fists
cmp
mov
jb
out
insl
loop
lahf
xchg
cld
out
mov
sahf
sub
mov
movsb
aaa
lea
xor
or
or
out
push
je
lahf
jp
fsubr
mov
fbstp
pop
xchg
subb
rcl
daa
xor
cmp
call
mov
push
pop
and
lret
ficoms
paddw
rcrb
push
out
movsb
mov
out
push
add
jmp
xor
fisubrs
pop
jg
mov
cmp
jg
jg
mov
test
mulps
mov
jp
mov
sub
fwait
loopne
loop
mov
insb
mov
sbb
das
fsubp
jno
fs
add
xchg
fs
adc
or
pop
lea
pop
jg
xor
xchg
in
dec
xor
jo
and
inc
test
stos
sbb
mov
xlat
data16
dec
or
pushf
sub
mov
add
cld
sub
lds
les
ret
je
lea
inc
dec
aam
push
dec
mov
mov
or
fldcw
sahf
push
pop
xor
insl
cmpb
pusha
inc
jmp
out
push
mov
push
or
ds
xor
and
roll
push
idiv
stos
fs
or
jbe
test
movsb
imul
mov
sti
out
fstps
push
mov
jmp
add
fs
pop
and
cmp
mov
push
mov
call
fisttpll
adc
or
push
xor
mov
ja
mov
xchg
and
lods
inc
jecxz,pn
sbb
mov
nop
daa
popa
mov
das
call
call
and
and
push
xchg
lret
inc
icebp
inc
in
pop
push
pop
loope
fadd
adc
cmp
loopne
inc
sbb
jp
cmp
dec
jb
pop
arpl
xor
nop
push
cmc
popa
pop
rol
push
add
xchg
stos
adc
pop
out
lods
jo
clc
outsb
cmc
mov
xor
mov
jo
mov
sahf
push
and
inc
fisubs
dec
sub
dec
mov
sub
rolb
mov
adc
aas
or
ljmp
lret
scas
mov
fs
cmpsl
orb
scas
jbe
iret
or
xchg
fdivs
lahf
ficoml
lret
ljmp
mov
in
cmc
mov
jg
pop
dec
or
push
push
mov
push
xor
flds
clc
sbb
das
push
sbb
test
mov
mov
pushf
enter
mov
shlb
mov
xchg
arpl
or
movsb
mov
cmpsl
xchg
mov
or
into
shll
sub
daa
jae
xor
fcoml
mov
add
pop
fisubrl
insl
sub
xor
rcrb
inc
jne
adc
loop
lock
out
int3
mov
push
sub
es
xchg
adc
jmp
mov
rcll
mov
addr16
into
xlat
pop
out
pop
je
mov
je
orl
mov
push
sub
out
mov
jle
insb
cmp
iret
mov
or
out
and
sub
dec
pop
push
xchg
lret
pop
add
jnp
out
add
sub
and
adc
mov
push
jbe
pop
jo
xchg
jmp
or
adc
aaa
cmp
mov
fistl
popa
loope
mov
xchg
or
cmc
clc
daa
xchg
pop
jl
rcr
mov
add
aad
pop
xchg
shll
jns
dec
insl
mov
outsl
cmpsl
cmpb
movsl
cmp
cs
ja
lods
xor
pop
push
or
inc
daa
cwtl
shrb
push
sub
push
adc
mov
fwait
repz
test
pop
test
hlt
add
cmp
shlb
imul
pop
add
push
adc
nop
leave
and
mov
xor
or
inc
stos
xchg
clc
add
shrb
mov
cld
lret
xor
cmp
addl
ljmp
addr16
pop
fucomi
push
sub
lea
mov
dec
push
push
cld
mov
sbb
xchg
repz
ds
iret
addr16
inc
pop
inc
pop
push
or
shrb
outsb
ret
lret
testl
sti
mov
jl
je
mov
adc
cmp
test
loop
fld1
cli
jb
pop
lahf
lods
pop
cs
xchg
cmp
sahf
lcall
dec
cmp
jno
lcall
lret
andl
fidivrl
jg
es
stos
jecxz
fcmovnu
outsl
lds
lods
icebp
lods
adc
lret
repnz
in
stos
or
popa
std
loope
mov
shll
loope
sub
lret
push
jae
fildll
xlat
ljmp
adcl
stos
jns
cli
iret
test
test
xchg
daa
dec
in
push
sti
push
push
cmpl
int3
and
jo
gs
xchg
or
xchg
cwtl
addl
sub
dec
mov
sub
jg
mov
test
in
lock
and
or
xchg
fdivrl
adc
cltd
in
cwtl
adc
pop
arpl
fdiv
mov
ret
inc
lahf
and
mov
in
pop
add
dec
sbb
push
xlat
dec
insb
in
fadds
popa
imul
jnp,pn
or
add
jbe
popf
jmp
mov
pop
ret
mov
or
pop
pop
stc
rcll
rcr
jge
lds
sub
or
lret
sbb
rcrb
or
loop
subl
sbb
dec
ret
cld
push
mov
push
xchg
or
jae
iret
lods
jbe
loop
insl
daa
fs
pop
pop
jl
cmc
fnsave
js
ds
sbb
in
test
mov
pop
sub
call
rcr
cmp
cmc
insl
aad
sbbl
add
xchg
cld
dec
mov
jne
and
in
xchg
in
fldenv
sbb
enter
aad
aas
fistps
cmp
sub
or
cmovnp
pop
fisttpl
icebp
ja
shlb
stc
mov
xchg
out
fbstp
lea
hlt
jmp
loope
fidivrs
mov
mov
daa
adc
popf
cltd
xchg
fisttps
mov
mov
or
out
mov
movsl
fcomps
dec
cmp
xchg
mov
popl
jmp
inc
push
inc
pop
outsl
out
or
data16
loop
scas
in
in
push
jl
outsb
in
xchg
sub
cld
loop
adc
add
jo
aaa
clc
shll
aam
pusha
mov
dec
dec
dec
cld
mov
mov
or
ljmp
ret
jae
mov
cmp
jle
imul
mov
rcrl
fsubrs
jecxz
jbe
fcmovbe
add
in
ret
dec
and
cmp
lock
adc
stos
add
pop
inc
mov
aas
sbb
fmuls
push
pop
or
inc
push
mov
mov
fsubrs
add
push
add
adc
repnz
sti
mov
inc
fwait
idivl
orl
mov
aaa
aad
xor
or
push
faddp
pop
xor
leave
fiadds
jne
mov
iret
jge
mov
push
ljmp
stos
lcall
cmc
pusha
dec
aas
in
rcll
cli
lods
lods
xor
mov
int
push
xchg
fistpll
sbb
lock
test
xchg
arpl
xor
ljmp
dec
pop
push
mov
insl
xchg
scas
adc
sbb
mov
push
pop
xchg
popa
lret
test
cld
lods
cmp
mov
mov
out
xchg
pop
xlat
add
ret
xor
or
mov
shll
push
jmp
cmp
pop
rclb
add
cmpb
add
lret
and
xchg
aam
clc
pop
cmp
lea
inc
insb
mov
or
xor
dec
push
and
rcrb
push
xchg
dec
out
cmp
arpl
inc
iret
jne
adc
fdivs
rcrb
xor
iret
stos
mov
roll
loopne
je
daa
mov
lods
fdivs
cs
pop
loopne
aas
mov
mov
in
push
xchg
lret
lea
pop
xor
mov
push
repz
cmp
sbb
ds
loopne
int3
add
jo
sbb
adc
or
test
mov
dec
mov
pop
orb
cmp
lcall
lods
adc
mov
sub
mov
or
mov
pop
int
push
rol
in
push
pop
inc
cwtl
es
xchg
lds
cmp
jl
mov
jecxz
push
js
mov
mov
js
sub
jecxz
push
add
push
cmpsl
js
pusha
pop
jg
push
pop
aad
aaa
jns
imul
and
add
mov
or
cmp
xchg
pushf
js
pop
xor
and
in
aas
adc
adc
test
inc
movl
and
idiv
aam
dec
in
lds
inc
adcb
mov
inc
js
mov
loop
xorl
dec
xchg
mov
xchg
stos
cmpsl
add
push
mov
pop
or
imul
jp
add
push
in
lods
cli
pop
test
push
mov
xchg
mov
loop
std
enter
pop
sbb
out
sbb
insl
addb
aas
insl
je
push
call
sbb
movsb
jl
mov
stos
inc
loope,pn
push
pop
fcompl
xchg
loop
push
lcall
jmp
hlt
xlat
and
rcr
cli
lret
push
popf
and
aaa
jo
ds
fstpt
add
cmpsl
leave
ljmp
popf
sti
xor
das
arpl
xor
push
jae
cmp
shl
lea
mov
ficomps
pushf
test
int
mov
imull
and
jno
call
mov
call
adc
aas
icebp
outsl
sub
inc
pop
push
sub
sarb
aas
sub
enter
adc
jnp
aad
sahf
daa
lods
pop
roll
sarl
xor
pusha
cmp
or
inc
enter
in
inc
sub
out
aas
mov
rclb
aas
test
mov
jmp
pop
test
dec
sbb
daa
or
insb
outsl
shl
jnp
mov
lret
adc
mov
jb
data16
sti
js
sbbb
xchg
mov
xor
dec
inc
cmp
lds
dec
adc
jmp
add
push
adc
inc
jno
std
aam
cmp
xchg
mov
push
das
cmc
jg
cld
repz
push
sbb
adc
ret
pop
fistpll
and
jbe
dec
and
sub
xchg
xchg
push
andl
xchg
fwait
xchg
cmp
aaa
stc
daa
pop
xor
orb
jp
out
jecxz
jns
aad
mov
inc
pushf
ja
popf
jl
int
pop
int3
mov
mov
aam
dec
xor
or
js
xorb
scas
les
xor
out
out
fdivrs
or
orl
test
sbb
iret
push
loope
fadd
test
and
xchg
cmp
or
dec
jne
pop
xchg
mov
test
add
call
mov
repnz
hlt
push
cmp
jno
push
popa
pop
sub
mov
shlb
test
xor
mov
push
pop
xchg
jo
ljmp
cwtl
lret
sbb
sbb
in
ficompl
add
sar
mov
cmp
dec
push
xlat
mov
loopne
pop
dec
push
add
movsb
insl
adc
sahf
mov
cmp
cli
fldenv
jecxz
jl
sar
loopne
xchg
xor
jb
pop
cmc
mov
mov
dec
jnp
shll
fwait
out
mov
push
xchg
outsb
xchg
iret
les
xor
leave
sbb
push
xor
xchg
sub
movsb
test
fdivrs
movsb
fstpt
or
or
or
pop
inc
sbb
xchg
xlat
sub
popf
jo
int
or
jp
jns
je
sbb
xchg
pushf
xor
mov
ret
add
addr16
xchg
ljmp
call
test
faddl
dec
aaa
js
lcall
jne
add
pushl
insb
cmp
pop
push
outsl
pop
xor
sbb
insb
jnp
xchg
xchg
or
inc
repnz
sti
imul
dec
xor
test
leave
sahf
push
lds
lea
andb
or
inc
cwtl
mov
data16
jno
cltd
out
mov
das
and
mov
push
mov
sbb
icebp
mov
pop
into
sahf
out
inc
push
or
jle
dec
repz
push
cld
fistpl
jae
xchg
mov
inc
mov
enter
mov
push
sbbb
out
jle
xchg
lods
stos
sub
cld
and
fildll
nop
fistpl
sub
push
sub
ds
cmc
pop
add
adc
push
xchg
lea
rcl
pop
adcb
imul
call
test
leave
mov
mov
and
pop
dec
push
cmpsl
dec
adc
jp
sahf
cmp
adc
xchg
jge
andb
sub
dec
rol
jl
cmc
aam
jns
jmp
jecxz
pusha
arpl
cwtl
xchg
in
mov
mov
ret
pop
pushf
ret
xor
jp
pop
jb
jae
lods
xchg
pop
push
out
cltd
int
sti
movsb
adc
int3
inc
shrl
push
daa
jb
push
out
xor
xlat
dec
mov
movsb
cli
fucom
imul
mov
jle
ficompl
and
outsl
test
xchg
loopne
pop
mov
mov
and
arpl
or
ja
push
and
mov
pop
mov
pop
repz
jmp
pop
or
push
push
loopne
out
xchg
lret
out
xor
addr16
aaa
jns
subb
imul
lods
aam
in
cmp
mov
mov
or
rcrb
mov
xor
push
fwait
movsb
cmp
fisubrl
dec
mov
ret
or
adc
es
fs
mov
daa
jns
cmpsl
push
xorb
add
aas
cmpsb
stc
dec
mov
and
sti
call
adc
js
inc
mov
loope
push
lret
ret
fs
xchg
jae
pop
mov
jmp
or
sub
xchg
add
les
inc
mov
pusha
push
aas
and
insb
mov
rclb
in
loopne
mov
cltd
xchg
in
pop
xchg
rcrl
insl
in
jb
sarl
push
lret
leave
jo
or
movsb
les
mov
daa
cmpsb
lods
pop
rcrl
or
outsb
mov
mov
jl
jle
dec
push
pop
fnstcw
inc
sbb
xchg
sti
or
sti
or
adc
in
and
negl
push
push
ljmp
outsb
lret
punpckldq
outsb
repnz
ss
test
xchg
into
iret
loopne
jp
inc
loopne
ficomps
fs
cmpsb
add
ret
std
jbe
xchg
push
cmpsb
xor
mov
xchg
lahf
push
test
mov
or
xchg
xchg
push
ficoms
shll
cmpsl
test
outsl
mov
out
mov
nop
jg
push
dec
insl
cmpsl
xor
cli
gs
inc
rcll
repz
jno
inc
push
sbb
arpl
cli
mov
jae
fsts
int3
je
xchg
jle
push
pusha
mov
cmp
cmp
push
es
sub
inc
mov
je
xor
insl
pop
pop
aad
lods
jle
cmp
cmpsb
mov
ss
lds
aas
decl
lret
insb
jecxz
out
pop
js
ret
int3
test
orl
or
lahf
iret
pushf
mov
mov
cwtl
arpl
sbb
clc
or
push
sub
mov
mov
cmp
pushf
jle
mov
jo
in
or
mov
add
fnstcw
jbe
aad
dec
xchg
mov
aaa
fsubs
pop
jo
or
stos
popf
mov
imul
out
cmp
dec
or
imul
pusha
add
xor
arpl
adc
int3
in
mov
mov
jl
jecxz
inc
rcl
cmp
push
inc
std
jbe
pop
pop
push
push
jnp
ss
xchg
lods
out
add
push
inc
pop
out
les
in
add
cmc
xor
aad
inc
sbb
and
imul
mov
pop
lahf
fcoms
jmp
aaa
mov
sbb
mov
pop
fwait
mov
xchg
adc
xlat
or
loope
pop
dec
push
int3
arpl
ret
jno
cmp
lcall
fisubrs
ja
inc
mov
mov
insl
mov
and
sub
pop
or
loopne
pusha
jle
pushl
fidivrl
push
test
add
rcrb
lods
and
pop
pop
scas
jl
cmpsb
inc
stos
aam
jnp
bound
jno
pop
shll
or
sub
int3
mov
out
push
sbb
adc
fstpt
fwait
lahf
inc
jp
mov
push
std
xor
mov
jne
push
mov
xor
pop
cld
mov
xchg
jae
and
imul
add
xchg
fnstsw
push
incb
and
adc
push
int3
scas
mov
jmp
push
xchg
outsb
mov
popf
xchg
jae
or
outsb
xor
push
stos
pop
js
clc
inc
popa
bound
dec
adc
push
arpl
dec
addl
jge
add
pop
xchg
repnz
push
sub
sub
mov
mov
xchg
add
aad
xchg
sub
xor
and
and
inc
push
stos
ss
repnz
cmp
or
xchg
rcrl
stc
popf
mov
push
push
push
pushf
cmp
xor
divl
rorb
pop
or
out
inc
sub
cmp
ds
mov
mov
push
int
jbe
loopne
xchg
push
fwait
mov
xchg
add
sub
das
inc
lret
push
das
pop
and
lahf
or
xchg
adc
xchg
or
dec
xchg
outsl
xor
vmptrst
push
fdivrs
adcl
inc
imul
push
fisubl
cwtl
and
dec
adc
sbb
inc
add
cmp
jle
gs
or
add
jg
xor
jns
xlat
cmpsl
adc
loope
mov
sub
xchg
nop
aam
fdivr
rcrb
sbb
xchg
pop
roll
addb
repnz
and
inc
sbb
mov
fnstcw
mov
pusha
dec
gs
gs
add
pop
xchg
lea
lcall
add
xchg
int
xchg
test
jecxz
mov
and
and
aas
mov
mov
mov
cs
push
repnz
call
nop
cmpsl
clc
cmc
mov
sub
sub
add
in
xchg
xchg
addr16
in
pcmpeqw
sbb
pop
cmp
lahf
fsts
jmp
call
cmp
mov
and
test
sahf
lock
or
shr
xor
adc
loope
push
js
leave
out
push
imul
dec
pop
mov
mov
xchg
dec
rorb
test
mov
inc
jns
movsb
push
cli
lds
xlat
leave
into
cli
sub
aad
shrl
les
jge
xchg
fadds
test
test
movsl
pop
out
xor
mov
mov
push
fwait
js
fucomp
sub
jne
lods
insl
repz
sbb
jbe
or
je
aad
gs
xchg
fadd
sarl
orl
jge
and
mov
popf
inc
mov
icebp
cmp
es
sub
cltd
mov
int3
aam
xor
and
mov
fsubs
mov
pop
jmp
xchg
add
add
scas
xor
ss
shrl
xor
andl
pop
cmp
outsb
dec
cli
jb
add
fcomps
sub
adc
dec
dec
mov
pushf
ja
adc
add
push
push
icebp
je
push
mov
pop
or
outsb
into
inc
aaa
ss
subl
xchg
xor
dec
mov
std
mov
mov
ja
loopne
push
popf
cli
cli
pop
pop
fldt
popa
mov
xchg
das
mov
roll
xchg
add
pop
jae
in
mov
xchg
scas
mov
and
scas
mov
in
pop
cmpsl
aaa
fidivs
lods
add
pop
jo
sbb
jno
sarb
sbb
fidivs
mov
adc
cmp
sbb
stos
in
scas
gs
test
imul
sbb
into
xor
inc
pop
mov
sbb
pop
jb
pop
in
ss
jp
and
lret
jecxz
adc
cmpsl
enter
jmp
adcb
sub
jbe
int3
and
int3
jb
outsb
inc
aad
dec
mov
adc
jge
jp
or
sbb
add
pop
mov
sbb
adc
fbstp
cmp
imul
loope
jo
push
xchg
add
or
pop
jle
sub
xor
pop
lods
aam
nop
es
rorl
out
dec
and
sub
xor
pop
xlat
push
pop
addb
cwtl
test
push
dec
lock
mov
pop
loop
adc
and
pop
loop
inc
jecxz
add
push
in
cs
enter
mov
mov
mov
stc
lahf
mov
push
aam
fxch
ret
add
repnz
fs
mov
dec
push
stc
lds
pushf
out
sti
jecxz
out
mov
int3
inc
mov
push
jmp
lds
sub
sbb
dec
bnd
and
or
enter
adc
push
pop
test
rcrb
insl
mov
popa
jbe
xor
mov
and
pop
fstpt
dec
jmp
or
or
jmp
mov
mov
xchg
ficompl
fisttpll
adc
lock
lds
js
mov
xchg
xlat
nop
lret
mov
sar
stc
and
fisubl
push
mov
mov
les
pushf
and
lcall
daa
mov
movsl
xchg
sub
movsb
jo
cmp
xorl
inc
mov
jmp
rolb
lret
loope
je
clc
cmp
sub
xchg
data16
popf
and
or
push
adc
clc
movsb
xchg
repz
out
dec
sbb
cmp
stos
stos
push
inc
and
jge
inc
push
adc
fcompl
call
sub
scas
pop
mov
inc
pushf
xchg
pop
ret
inc
mov
xchg
imul
orb
rcrl
incb
mov
std
jbe
in
sub
jnp
xor
js
xor
ss
movsb
loopne
ljmp
sbb
scas
add
fbstp
sbb
sbb
xchg
xchg
cmp
ret
cmc
mov
lret
fs
sbb
movsl
lods
mov
mov
add
stc
push
dec
dec
xchg
mov
aam
call
arpl
mov
aas
nop
int3
int3
jp
mov
sbb
test
outsl
cwtl
stos
sub
adc
out
test
dec
and
pop
sbbl
into
push
loop
cmp
test
test
push
loopne
movsl
push
imul
sub
mov
jnp
les
imul
dec
aad
adc
push
mov
add
push
pop
pop
cmp
pop
cmpsl
mov
cmpsl
fmuls
jge
pop
pop
or
xorl
add
xlat
cld
imul
push
add
mov
mov
data16
and
in
xchg
loopne
mov
adc
inc
mov
fcompl
out
cli
leave
push
ja
mov
in
inc
cmc
sub
pop
jo
pop
inc
cmpsb
jb
jno
stc
sub
xor
and
adc
mov
or
adc
inc
mov
leave
rcll
mov
xor
dec
or
jb
decl
aad
fcompl
js
push
insb
jne
ret
cmp
movsb
pop
push
push
or
add
dec
jecxz
out
ljmp
lock
cwtl
add
and
shl
mov
ret
fisttps
rorb
pop
lods
popf
ret
cmp
sbb
repz
cltd
sub
jbe
mov
mov
sub
lock
aas
dec
pop
je
in
jnp
cmp
out
adc
or
jecxz
jbe
push
mov
jbe
mov
sbb
aam
pop
ljmp
test
add
fldl2e
fs
int
into
dec
cmp
dec
testl
push
add
ret
adc
lret
push
call
adc
lods
insb
fidivs
add
loope
pop
push
movsb
sbb
test
sub
lahf
vunpckhps
push
testb
cli
imul
adc
pop
push
loop
ret
aam
mov
iret
or
jbe
int
sub
sbbl
or
mov
mov
sbb
mov
inc
add
cmp
jle
sub
call
addr16
mov
mov
lcall
mov
mov
mov
pop
stos
xchg
rorb
out
inc
leave
shll
dec
mov
cwtl
mov
in
in
repnz
inc
push
jmp
inc
cltd
pop
inc
test
xchg
xlat
mov
lods
sahf
out
inc
lret
je
mov
fwait
cltd
or
xor
cmpsl
test
icebp
daa
jmp
pop
push
in
adc
xchg
and
sub
mov
loopne
in
lahf
mov
fnstcw
in
leave
aam
ret
mov
stc
pusha
mov
jl
lret
out
outsl
out
jno
daa
sbb
aam
cmpsb
add
inc
ret
pop
mov
dec
jns
xorb
push
sub
test
jl
push
dec
inc
ljmp
push
adc
cld
mov
push
pop
add
lahf
push
cmpsb
and
test
adc
cmp
push
jb
sub
cld
xor
aam
push
popa
sub
mov
sub
imul
out
push
xor
bnd
lret
inc
push
mov
out
mov
mov
push
push
nop
lock
outsl
inc
mov
sub
test
pop
fcompl
out
push
cmp
movsl
jne
jmp
and
xchg
cmp
into
sbb
fldenv
punpckhwd
ret
jecxz
pop
test
pop
cmpsb
xchg
push
gs
inc
inc
out
in
fdivr
lock
imul
adc
xor
call
daa
jg
push
iret
fsubp
pop
shr
ret
inc
mov
xor
rcrb
cwtl
inc
add
jo
ljmp
repz
sti
sub
lahf
lock
out
repz
and
out
stos
add
jne,pt
add
addr16
add
and
cmpl
jo
mov
or
push
jo
mov
loop
std
fsts
adc
gs
out
dec
loope
mov
and
or
das
mov
cs
or
inc
mov
pusha
sahf
mov
pop
xlat
cmc
aaa
stos
pop
jnp
or
bound
pop
or
lcall
popa
loope
adc
mov
cmp
cmp
ficoml
pusha
or
pop
mov
mov
sbb
cli
mov
jno
movsl
push
adc
imul
sub
imul
cltd
outsl
inc
sbb
xchg
add
inc
mov
xchg
sbb
adc
dec
jno
inc
jae
bound
inc
out
in
pusha
icebp
aaa
sbb
mov
gs
rcr
jne
out
adc
push
imul
out
repz
int
and
add
xchg
sti
rcrl
inc
push
cwtl
xchg
loop,pt
ss
lcall
fwait
xor
cmp
sahf
call
fwait
sbb
sub
jnp
inc
sbb
or
cmpb
enter
cli
aas
shll
cwtl
sbb
in
popa
sbb
xor
das
js
sti
cmpsb
rclb
mov
or
adc
ss
sbb
clc
jecxz
pushf
fildll
push
lds
nop
mov
int
pop
outsb
pop
popf
in
mov
out
aam
shrb
aas
push
mov
mov
mov
mov
mov
adc
push
lcall
cli
dec
mov
pop
and
xor
dec
in
out
or
ja
and
test
xor
out
fldcw
pop
stc
push
pusha
daa
dec
pop
sarl
imul
and
loopne
and
daa
pop
std
xor
sub
xor
ljmpw
xor
fisubrs
add
aad
sub
fsubs
pusha
jns
add
push
cmp
inc
dec
push
popf
xor
or
mov
mov
dec
add
leave
pop
fwait
test
and
int
xor
inc
jl
push
fmul
orb
xchg
jmp
ret
dec
mov
or
leave
dec
pushf
hlt
inc
les
lds
xchg
xchg
lock
in
movsb
ds
scas
cmc
and
dec
in
ljmp
push
cmp
pop
lret
mov
sbb
fmull
fildl
lret
pop
xor
jmp
push
lds
jo
mov
icebp
add
xchg
push
cltd
inc
cmpsl
cmpsl
test
sub
pop
cmp
inc
jge
jmp
scas
and
cli
arpl
mov
pop
lahf
adc
or
xchg
out
push
xlat
pop
sub
dec
pop
xor
fsubrl
repz
push
mov
push
andb
les
cld
and
xchg
xorl
aas
lahf
in
mov
data16
adc
jbe
and
mov
and
mov
pop
data16
xrelease
dec
hlt
rorl
sub
fidivs
add
in
frstor
and
cmp
stos
push
or
cmp
test
cmp
call
jno
les
xorl
icebp
pop
mov
sbb
notb
lcall
mov
shlb
aad
mov
sub
mov
mov
shr
pop
xchg
pusha
inc
sub
adc
push
xorb
pop
lods
dec
dec
outsb
pop
inc
sub
insl
adc
cmpsl
and
jle
mov
xor
pop
mov
inc
loop
cmc
int3
adc
inc
push
mov
ret
mov
les
pusha
sub
orl
and
pop
insl
sub
push
icebp
inc
in
pop
lock
push
push
das
push
and
xlat
repnz
pop
ja
jecxz
movsb
stc
or
or
insb
pop
lods
rolb
jmp
adc
add
call
call
js
dec
idivl
lds
inc
cmc
and
inc
insl
ret
xchg
mov
jmp
pushf
call
ss
mov
jae
push
jle
int3
sbb
inc
push
cmp
fdivrs
jns
mov
mov
pop
movsb
mov
fmull
das
inc
incb
pop
xor
jecxz
in
pusha
sbb
jns
stos
adc
addr16
or
ja
mov
dec
mov
filds
popa
xchg
dec
jne
and
lods
mov
and
push
fmull
push
div
stos
outsl
shrl
mov
push
pop
inc
jne
cli
sub
fsubp
subb
jp
icebp
aas
mov
sbb
arpl
sub
rol
in
jmp
scas
sbb
adc
in
rolb
stc
xor
xchg
out
call
imul
scas
ds
lcall
adc
pop
or
pop
popf
dec
inc
dec
lods
insl
and
pop
jo
dec
or
xchg
notb
rolb
stos
ja
mov
aaa
arpl
mov
leave
idivl
xchg
andl
cli
xor
inc
pop
mov
sub
lahf
imul
dec
cmp
push
add
and
lock
cmpsl
jecxz
in
sub
lret
add
bound
in
gs
out
mov
add
and
sbb
sbb
addr16
xor
fadds
orl
out
dec
mov
mov
xchg
mov
xor
mov
jno
push
adc
iretw
stos
sub
stos
jge
scas
test
shl
xor
pop
cmpsl
arpl
inc
jbe
sbb
jno
push
pusha
out
jns
add
mov
xlat
jge
das
sub
fcmovnu
add
lcall
xor
rcrl
scas
sub
mov
mov
test
cmpsl
mov
jecxz
xchg
insl
lea
std
lret
add
aaa
jle
repz
stos
dec
sub
in
jle
mov
jb
in
jl
push
fsubr
popf
dec
arpl
lcall
ss
adc
pop
cmpsl
xchg
push
push
mov
adc
pop
dec
popf
aam
xor
aad
aad
xlat
les
jae
push
xor
popf
push
pushf
test
xchg
ja
cmp
dec
mov
sub
popf
fnstenv
cmp
ljmp
popf
call
add
push
cmc
movl
cmp
sbb
cs
jne
and
in
loopne
push
mov
or
int3
test
nop
sbb
int3
xchg
and
add
mov
mov
jg
decl
push
outsb
adc
test
repnz
out
adc
mov
sub
sub
dec
or
pop
xchg
dec
pusha
dec
ret
cmp
jb
mov
pop
ds
or
in
jle
stos
insb
out
dec
clc
ss
dec
adc
mov
flds
xchg
sahf
jp
rolb
xchg
adc
xchg
add
rol
push
jbe
pushf
push
pop
push
movsl
jb
fsubl
cli
pop
repz
mov
lods
dec
jl
test
sub
jle
push
arpl
std
sbb
cmp
mov
inc
mov
lods
sub
rorl
shll
xlat
int3
popa
add
inc
outsl
mov
fmul
pop
mov
arpl
and
xchg
add
aam
cmp
call
mov
adc
xchg
in
mov
je
push
adc
pop
stos
jnp
add
insl
dec
imulb
pusha
sub
test
movsb
mov
stos
fcomp
jb
nop
rorl
mov
dec
stos
mov
add
and
scas
leave
jmp
adcb
pop
push
hlt
sub
mov
movsl
repnz
add
jl
pop
lret
clc
inc
or
nop
and
sub
mov
cmp
xorb
mov
xlat
insl
mov
jecxz
lods
lahf
addl
sbb
std
push
gs
jne
jl
pop
push
arpl
jno
daa
data16
xor
out
fisttpll
mov
pop
or
adc
jg
cmp
fsubrs
mov
and
adc
call
push
rorl
pop
push
jl
mov
sti
lods
pop
int3
jmp
or
adc
jmp
xor
and
push
std
lahf
in
outsb
xchg
pusha
fstpt
xor
in
jbe
ret
sub
jle
shlb
shrl
adc
sti
mov
jns
jns
fbld
xchg
mov
pop
sbb
fwait
jmp
cmovg
inc
cli
add
xor
ret
cmp
inc
insl
add
or
repnz
xor
aaa
fmull
push
jl
idiv
xor
fmul
add
jb
cmp
in
mov
add
pop
lods
push
jnp
outsb
stos
and
jae
imul
mov
pop
inc
scas
js
ret
mov
jle
adc
cwtl
pop
out
js
imul
jne
lock
xchg
push
rorl
ret
add
data16
es
jecxz
sub
and
loopne
dec
mov
loopne
sbb
jp
jne
mov
ret
test
sbb
jns
dec
insb
mov
sbb
xor
add
pusha
mov
sub
jae
push
ss
dec
jg
sub
sub
in
pop
inc
movsl
sub
mov
dec
test
jl
ret
cmpsl
push
push
iret
jae
sbb
negl
subl
xor
jecxz
push
jno
sbb
aas
mov
inc
inc
sub
sbb
mov
jg
fdivrl
adc
je
add
jecxz
mov
and
cmpsl
std
jbe
ljmp
lcall
loop
ret
outsl
jmp
idiv
add
outsb
xchg
repnz
xchg
jle
add
in
cmpsl
outsb
mov
push
mov
mov
aaa
inc
mov
and
adcl
cmp
scas
cmpsl
nop
adc
adc
mov
cwtl
insb
mov
add
shlb
fcoml
jnp
fcmovbe
fsubr
ficompl
clc
mov
push
clc
xchg
xor
jne
ret
jns
icebp
jg
rcrl
pop
test
jg
mov
inc
pop
xlat
rol
jns
lcall
and
aam
js
pop
out
out
sub
pop
push
inc
mov
sbb
pop
lret
mov
xor
daa
into
aaa
pop
sbb
movsb
push
aas
jle
jl
outsl
xchg
mov
add
and
add
mov
add
lret
aas
pop
mov
inc
adc
out
pop
mov
std
stos
jge
and
push
ret
pop
cmp
ffree
fisubl
test
mov
push
add
stc
cmp
mov
cmpsl
mov
pop
jp
fcomps
mov
inc
mov
ljmp
arpl
icebp
frstor
sbb
mov
mov
cmp
sub
add
nop
sbb
movsl
jbe
xchg
movsl
insb
in
sbb
mov
xchg
test
insl
test
add
mov
ret
xchg
mov
pop
mov
ljmp
scas
adcb
movsb
lahf
mov
cmp
pop
xor
sbb
movsl
out
pop
dec
imul
adc
outsl
and
jle
test
out
aad
call
out
stos
ror
dec
dec
inc
push
mov
scas
scas
jbe
jne
mov
cwtl
int
js
and
addr16
mov
insl
lock
lds
cmp
into
leave
mov
fnstenv
call
addr16
jecxz
mov
ja
push
cwtl
cli
mov
pop
xor
out
adc
mov
dec
adc
imul
push
add
jecxz
movsb
adc
test
mov
data16
jae
mov
mov
sbb
ljmp
mov
out
sub
fwait
sbb
test
bound
sub
jnp
jmp
cld
jge
cli
add
shlb
pop
and
adc
mov
xorl
pop
mov
popa
inc
enter
out
std
shl
adc
and
sbb
push
shll
fdivl
pop
mov
cmp
pop
stc
adc
fdivrl
jmp
jne
pop
dec
xlat
mov
pop
rcll
jo
mov
mov
jecxz
adc
cmpsb
pop
pop
pushf
stos
add
sub
and
cli
int
rorl
push
push
sub
sbb
xor
and
cmp
int
addl
pop
adc
rcrl
imull
lcall
pop
dec
out
imul
jp
mov
cmp
mov
push
pop
jle
in
or
fisttpll
sub
and
ljmp
aaa
dec
and
cld
xchg
repnz
xchg
inc
jnp
lock
sbb
or
fstl
sub
stc
xchg
cli
ja
mov
mov
push
int
jmp
iret
jp
inc
test
fistpl
stc
sarb
ret
add
add
push
mov
in
test
cmp
cmp
aas
mov
int3
adc
ret
lret
dec
imul
inc
jl
xorl
rolb
incl
inc
sub
push
push
shlb
lods
inc
push
imul
xchg
rorb
scas
nop
shll
insl
push
mov
hlt
adc
dec
sub
mov
mov
dec
lret
loop
sbb
jmp
cltd
and
hlt
pop
fstl
cmp
push
insl
cmp
enter
imul
or
pop
rcrl
into
jb
lahf
in
adc
in
mov
mov
xor
in
lea
mov
jmp
out
negb
test
and
mov
sbb
fisubl
aad
pop
outsb
xchg
cld
or
jnp
push
arpl
adc
sub
mov
adc
and
xchg
cmp
add
cmp
jge
popf
inc
xchg
sub
out
aaa
jl
stc
iret
and
mov
cmc
jl
repz
and
push
in
das
fstpt
je
xor
xor
mov
push
jno
scas
repz
mov
cmp
sbb
out
jno
and
pop
pusha
xor
ss
shlb
lcall
xchg
mov
or
or
in
ljmp
add
ss
pop
sub
or
xchg
or
lret
faddl
scas
test
cmp
call
mov
xorl
popf
cmp
hlt
or
inc
ljmp
add
movsb
movb
pop
and
movsl
lods
mov
repnz
inc
xor
push
ffreep
jb
sub
frstor
mov
enter
in
int
jmp
stos
add
push
mov
dec
jno
adc
cmp
daa
push
addb
push
outsb
jbe
popa
loop
jp
hlt
and
lea
mov
out
stc
jmp
cmp
push
xchg
push
fxch
and
fisubl
sarl
mov
in
stc
or
mov
bound
lahf
and
iret
jnp
loope
movsl
mov
mov
jecxz
nop
jmp
or
daa
fstpl
mov
jnp
lahf
mov
dec
lock
mov
adc
rcrb
xor
xor
mov
pop
push
insb
out
and
daa
and
cmp
inc
xlat
jne
mov
push
mov
sarb
adc
push
stos
pop
xor
sub
in
fsts
dec
add
sbb
add
push
mov
outsb
adc
or
fimull
sarl
rorb
sub
popa
movsb
mov
pop
or
sbb
insl
jns
popa
adc
xor
sub
push
adc
xor
in
push
sub
rcll
aad
push
sbb
jns
push
es
outsl
sbb
and
fwait
sahf
mov
push
adc
in
sti
jmp
cwtl
and
sub
pusha
movsb
das
cmp
fcomip
bnd
in
popa
les
in
or
xor
lahf
inc
in
inc
jecxz
popa
aam
rclb
ja
mov
xchg
dec
pop
cld
sub
cwtl
sbbl
orl
or
fisttps
push
inc
push
out
aaa
cmp
bound
dec
faddl
mov
mov
mov
pop
pop
dec
lds
je
fdivs
cwtl
push
or
xchg
out
inc
ret
pop
out
les
dec
push
mov
sbb
jle
testl
pop
insl
jo
add
aas
xchg
dec
andb
and
rclb
mov
push
or
sub
inc
fwait
add
cmp
int3
lahf
dec
xor
mov
out
mov
sub
cwtl
inc
inc
sub
loop
stc
testb
sbb
andb
fidivl
or
lods
xor
je
mov
loopne
outsl
xlat
dec
or
jo
test
jno
idivl
push
das
mov
imul
out
pop
arpl
pushf
loopne
cmovp
idiv
push
xchg
sub
sbb
jmp
lret
and
push
jne
cmp
and
movsl
lret
add
jp
or
sarl
in
dec
stos
fstl
pop
cmp
push
xchg
cwtl
mov
mov
enter
push
inc
out
out
nop
or
pusha
in
push
sub
and
xchg
mov
mov
cmpb
lods
sub
cwtl
mov
mov
lret
cmp
pop
inc
jnp
adc
ljmp
lds
xor
decl
mov
lds
cld
mov
std
call
jnp
aaa
jo
test
mov
cmp
adc
xchg
jnp
push
dec
xchg
mov
xchg
or
add
fwait
jge
or
pop
pop
xchg
in
dec
cmp
adc
or
frstor
or
jbe
xor
jb
xchg
jae
xor
aas
xchg
into
sahf
dec
cmp
mov
add
fwait
rolb
mov
hlt
dec
xor
enter
sbb
pop
cmp
out
ja
mov
xor
out
ljmp
add
xchg
pop
aaa
jp
mov
in
adc
or
xchg
adc
xchg
xchg
cli
enter
mov
rcrl
cmpsb
aad
mov
pop
xchg
or
into
shll
shll
stos
xchg
lods
out
cmpsb
push
in
xchg
pop
push
and
sbb
gs
xlat
bnd
test
pop
cmpsl
jbe
pushf
xchg
xor
xor
xor
xchg
sub
jecxz
les
daa
nop
mov
jmp
mov
jmp
mov
inc
repz
lock
pop
int3
add
sti
xor
in
pop
arpl
mov
cmp
imull
in
scas
aam
xchg
or
fldl
loop
cld
hlt
shrl
sub
lds
dec
icebp
xchg
xchg
out
sub
bound
insl
cs
jl
fcomps
xor
and
sub
fdivs
add
fucomp
cmp
adc
les
xchg
mov
jg
inc
scas
lds
sar
or
call
jmp
pop
and
jae
mov
mov
sti
test
or
adc
movsb
xchg
jae
and
std
mov
push
subb
lods
push
out
outsl
jae
popf
iret
and
sub
or
aaa
jno
insl
mov
pop
add
pop
ret
clc
sbb
jns
int
ljmp
or
sub
lea
xchg
pop
add
xchg
lock
push
cmc
test
loop
jb
mov
leave
lret
lret
push
or
data16
xor
ljmp
and
fwait
out
enter
pop
mov
jne
in
sbb
scas
jge
lahf
gs
pop
rcrl
arpl
addr16
mov
dec
jnp
movsb
test
mov
dec
jmp
xchg
mov
test
mov
out
in
mov
js
sub
je
out
ds
mov
xor
test
sbb
mov
push
mov
sub
ret
xor
mov
testl
aam
lahf
addr16
mov
lods
mov
xchg
outsl
adc
and
push
jecxz
and
jle
test
push
inc
push
clc
xor
fs
ja
cmp
inc
xchg
lds
jnp
std
je
movsb
inc
xor
and
inc
out
mov
or
das
push
mov
dec
lods
push
push
and
jnp
inc
jb
pop
aas
test
rorl
test
aaa
jge
fwait
pop
inc
stos
decl
inc
cmp
stc
dec
or
jb
in
xor
adc
cmp
pop
mov
clc
popf
xor
mov
dec
pop
xor
fs
and
cli
iret
adc
xlat
pop
bound
stc
pop
andb
mov
test
mov
pop
fwait
jle
mov
mov
fisubrs
pop
xchg
fiadds
sub
cmpsl
rcll
mov
stos
mov
mov
jno
mov
sbb
dec
in
or
push
jmp
adc
pop
add
imul
cmp
mov
popf
icebp
sub
cltd
sbb
std
enter
sbb
sub
cli
add
mov
xchg
out
clc
sbb
mov
cmp
xchg
dec
rorl
dec
fldcw
push
jns
pop
out
popf
fdiv
shll
inc
adc
sub
mov
cld
or
int
clc
jb
dec
jmp
inc
test
fwait
sub
pop
sahf
mov
je
push
mov
stc
and
lds
cmp
xor
inc
jb
push
dec
sub
pop
jl
negb
xor
sub
push
test
jnp
imul
movsl
stos
add
pop
sub
rolb
lcall
dec
push
jb
mov
fisubl
add
xor
dec
insl
fyl2xp1
cmp
push
sub
push
push
mov
lds
mov
mov
test
insl
jg
cmp
mov
xor
sarl
popf
sti
int
repz
xlat
mov
adc
pushf
dec
cmp
mov
out
rclb
sbbl
leave
push
shlb
lock
jle
sahf
lea
es
mov
xor
dec
push
ja
imul
fadd
cli
xchg
push
mov
shlb
daa
repz
cmpsb
pop
adc
sub
cmp
jg
out
repnz
mov
mov
addl
lret
or
cld
das
mov
mov
pop
sbb
cmc
imulb
add
js
filds
push
jle
sub
mov
add
daa
gs
inc
enter
out
jb
add
hlt
dec
and
clc
jno
mov
bound
sbb
out
mov
pop
mov
and
or
mov
pop
fisubs
addr16
shrb
out
movsb
out
pop
jnp
mov
mov
movsb
je
xchg
sbbb
pop
inc
fiaddl
mov
lret
pop
lock
and
sub
and
clc
pop
rorb
testl
lods
mov
xor
lods
or
sbb
jne
js
jno
mull
or
int
add
lea
xchg
sbb
aam
mov
and
jae
insl
test
movsb
jp
cmp
xchg
xlat
jnp
lea
xor
pop
push
mov
and
push
sti
pop
jns
dec
xor
rcr
lret
in
outsl
inc
test
popf
and
leave
mov
add
mov
jne
mov
jmp
aaa
sbb
xchg
jge
test
inc
insl
xlat
adc
push
mov
add
fisubl
sub
loop
pop
rolb
mov
fs
scas
or
ret
or
cwtl
pop
add
and
fisttpl
or
mov
fsubp
aad
call
imul
mov
lcall
mov
mov
into
cmpsl
jl
xchg
add
pusha
in
mov
cmp
push
gs
mov
dec
mov
lret
adc
mov
aad
in
aaa
ss
test
or
and
popa
into
xor
fs
test
and
fwait
mov
aaa
arpl
arpl
xor
rcll
ret
xchg
aam
sub
js
leave
fbstp
hlt
sub
or
cmp
shlb
out
fwait
shrd
add
mov
movsl
popa
outsl
das
insl
sbb
jb
movsl
mov
mov
lret
in
mov
fwait
dec
dec
loope
bound
and
outsb
xor
in
dec
mov
iret
jecxz
es
call
fsub
faddl
cwtl
adc
inc
shrl
xchg
add
pop
sahf
movsl
xchg
ljmp
in
pop
xchg
inc
shrb
inc
js
stc
mov
push
push
add
lock
test
popa
cld
pusha
jp
pop
dec
mov
or
add
sbb
inc
movsb
xchg
xchg
inc
and
mov
repz
scas
lret
cwtl
inc
xchg
or
push
jecxz
xor
aas
mov
and
xlat
cmp
jmp
aas
jo
aas
dec
lahf
inc
push
cmp
lret
out
rorb
inc
jmp
daa
hlt
in
pop
dec
mov
sub
ljmp
fistpll
cmp
jle
jge
in
pop
mov
cld
add
inc
xchg
hlt
outsl
fmuls
outsb
pop
add
cmp
mov
jo
adc
das
imul
sub
push
adc
stc
sbb
je
pusha
cmp
out
iret
lahf
xlat
sti
or
stos
jecxz
sub
sbb
fnsave
cmp
mov
aas
lret
mov
dec
xchg
scas
pop
push
inc
mov
mov
faddp
lock
add
pop
imul
pop
push
push
mov
and
pop
cmc
fcoml
sub
dec
mov
dec
push
aas
sbb
ret
je
lods
mov
inc
outsl
sub
sbbl
dec
dec
cmp
dec
cltd
iret
lods
addb
push
out
shrd
dec
shlb
cld
xlat
xchg
enter
lret
dec
gs
aas
ja
dec
cld
rolb
push
pop
mov
push
imulb
sub
xchg
adc
call
xchg
sbb
or
in
iret
jno
ja
add
outsl
dec
sbb
cmp
lret
xchg
lret
cli
xchg
in
call
insl
cmpsl
cmp
push
in
jmp
cltd
jp
xor
or
inc
pop
nop
outsb
stos
rcrl
bnd
dec
les
add
test
dec
push
sbb
jns
cmp
pop
cmpb
mov
roll
mov
aas
and
mov
jmp
inc
push
cmpsb
cmc
std
sub
add
mov
sub
ljmp
xchg
inc
repz
stos
cli
into
leave
xchg
movsb
lret
jnp
cmpsb
mov
or
jecxz
inc
push
push
clc
ja
jns
std
daa
cli
mov
mov
mov
enter
pop
ficoms
cs
sti
fnstsw
pop
sbb
loopne
addb
rcrb
test
jmp
xchg
test
mov
and
scas
push
dec
iret
jg
xchg
adc
and
ret
lock
dec
stc
mov
mov
inc
dec
pop
test
mov
inc
jl
jge
xchg
add
xor
mov
hlt
ja
fstpl
dec
xor
mov
subb
xor
mov
mov
popa
fs
shr
adc
test
sbb
popf
pop
enter
ficoml
ja
sub
add
fdiv
aam
cltd
dec
xchg
pop
repnz
mov
mov
push
fwait
lods
mov
repnz
inc
inc
add
jb
mov
mov
adc
into
push
push
cmp
sbb
xor
ljmp
shrb
lods
testl
test
ficompl
imul
pop
in
add
sbb
mov
add
inc
or
test
push
lock
add
popa
xlat
inc
inc
xchg
into
cmp
sub
pushf
sub
nop
adc
or
fstps
cld
adc
push
mov
negl
aad
scas
inc
fsts
xor
addr16
mov
mov
ja
rcrb
jl
ret
sti
push
mov
xchg
lret
out
lock
fidivl
stc
test
ja
popf
dec
jae
push
add
sub
or
mov
fdivp
leave
jae
xor
andb
mov
mulb
mov
sbb
mov
adc
push
and
test
and
cmp
ljmp
dec
mov
dec
mov
cltd
int3
jp
paddusb
mov
sbb
lahf
lods
aam
or
loopne
loopne
aas
inc
adc
fcomi
pop
insl
jae
xlat
loop
mov
mov
dec
out
mov
std
testl
mov
pop
lods
aaa
cmp
adc
adc
orb
daa
mov
pushf
pusha
mov
test
jl
add
jg
stos
and
add
mov
adcb
mov
mov
and
xchg
fsubs
stc
add
sub
jmp
je
push
add
lods
pop
add
cmp
sbb
repnz
lret
adc
jb
lcall
mov
arpl
cmc
add
arpl
fisubs
jmp
fistl
das
or
add
js
cwtl
jg
push
arpl
test
inc
xchg
outsb
inc
ret
in
adc
inc
subl
and
pusha
rorb
negb
push
pusha
inc
cmp
pop
inc
pop
rolb
xchg
xor
and
pop
dec
xor
jb
mov
pop
sbb
cld
and
mov
cmc
mov
data16
repz
xor
fiaddl
cwtl
punpckldq
push
and
icebp
and
mov
lea
sub
sbb
std
jnp
jbe
mov
data16
std
out
jle
dec
xlat
jae
and
call
lds
jns
jp
adc
adc
jg
adc
and
popf
or
mov
dec
inc
loopne
js
orl
call
xor
lcall
pushf
out
push
test
jbe
insl
aas
lock
sub
xchg
and
cmp
js
inc
sbb
jp
jb
xchg
push
int
and
icebp
adc
adc
jno
xchg
clc
jbe
dec
push
push
insb
in
mov
pop
enter
imulb
and
sub
cmp
xchg
pop
xor
sbb
test
stos
lret
add
xchg
push
rcl
andb
sti
jns
mov
sbb
pop
mov
fildl
int
js
dec
cmp
adc
push
inc
push
out
jmp
mov
enter
xchg
ss
jge
sub
sub
insl
sbb
mov
mov
leave
je
inc
inc
push
leave
fs
or
jno
loop
inc
xchg
dec
jmp
adc
or
push
aaa
dec
jns
xchg
xchg
repnz
dec
fisttpl
test
cwtl
mov
cmp
ret
in
mov
dec
jg
shlb
stos
sub
adc
xor
mov
das
aam
fldenv
jae
inc
push
cld
loopne
aad
movl
jecxz
bswap
jge
sub
push
cmp
xchg
xchg
mov
popf
scas
repz
pushf
loopne
stos
cmp
xchg
add
aad
pop
lahf
dec
pop
push
xor
jo
mov
xor
es
clc
ds
xchg
sbb
pop
inc
jae
out
jmp
jne
push
movsl
push
mov
xlat
pop
ret
ds
fwait
mov
sbb
inc
mov
dec
inc
sbb
mov
mov
xchg
add
jo
rorb
aaa
movsb
mov
hlt
mov
push
cs
mov
pusha
in
mov
movsl
testl
jne
cld
mov
mov
sub
int3
pushf
fstpt
push
and
sub
push
sar
sub
add
scas
fs
xor
xor
out
icebp
movsb
xchg
add
xchg
aas
push
repnz
leave
lds
or
inc
dec
in
lds
xor
ficoms
aad
inc
test
fnstsw
mov
test
dec
jnp
pop
xchg
push
loope
loop
mov
jecxz
jae
addr16
std
and
mov
push
mov
popf
dec
cli
lahf
scas
push
iret
arpl
xor
xchg
aas
mov
and
jns
scas
cmpsb
sarb
xchg
cmc
mov
cmpl
fiadds
pushf
imull
fcompl
rclb
js
cmpsl
push
mov
sarb
imul
pop
lret
jmp
sub
push
inc
add
sbb
dec
sbb
xchg
stos
cmp
inc
leave
out
ss
xor
xor
xor
add
add
sti
inc
scas
out
adc
sbb
dec
add
add
add
mov
inc
add
add
add
add
add
or
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
