add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
add
add
decl
decl
test
mov
sub
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
aaa
cmp
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
les
inc
add
push
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
or
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
xchg
xor
add
add
test
add
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
push
xor
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
ret
push
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
and
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
jae
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushf
adc
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
sbb
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
push
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
adc
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
mov
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
inc
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
inc
inc
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
jmp
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
jns
inc
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
jle
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
insb
cmp
and
call
test
je
xor
cmp
mov
fisubrl
inc
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
loop
inc
add
add
mov
and
cmp
jne
mov
mov
inc
ds
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
pop
push
inc
add
mov
jmp
mov
push
mov
mov
call
mov
sbb
decl
dec
add
xlat
decl
xor
shr
and
call
in
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
sub
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
test
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
pusha
push
call
mov
ljmp
fadds
loop
rolb
jb
push
add
add
add
leave
popf
int3
xlat
js
add
cmc
into
add
jne
pop
int
in
mov
add
push
push
push
push
push
lea
push
call
add
out
add
addl
cmpsl
mov
out
data16
add
add
test
incb
into
xchg
add
pushf
add
les
sti
stos
gs
add
rcrl
iret
int
int3
lea
pop
popl
push
push
push
push
lea
push
push
call
xchg
repnz
mov
test
jmp
fisttps
add
add
add
add
shlb
add
add
xchg
ljmp
mov
add
notl
loope
mov
ljmp
popa
sbb
push
lea
push
push
push
push
push
push
call
add
add
add
push
add
scas
push
add
push
sti
mov
push
add
add
mov
mov
add
popa
mov
jl
xchg
fadds
out
jle
push
arpl
faddl
add
add
pusha
add
adcl
lea
pop
push
push
push
push
lea
push
push
lea
push
call
rcrl
lods
mov
aad
add
jl
arpl
nop
add
hlt
add
add
add
mov
fildll
add
add
add
add
mov
lea
pop
push
push
push
push
push
push
call
cmpsl
rolb
idivl
add
add
xchg
pop
out
mov
popf
pop
clc
add
add
add
add
add
add
mov
imul
push
add
add
loopne
add
jne
loope
mov
add
pop
add
cwtl
hlt
out
add
xchg
add
lods
je
cld
lea
pop
call
push
lea
push
lea
push
lea
push
push
push
lea
push
call
cwtl
aad
mov
scas
add
add
add
add
gs
add
mov
aad
mov
mov
test
pop
add
faddl
call
loope
add
mov
ja
lods
add
addb
in
add
xchg
fiadds
icebp
scas
clc
lds
gs
add
add
mov
push
addr16
mov
mov
mov
orl
add
push
push
push
push
push
push
call
add
jle
add
jle
add
add
mov
stc
xlat
push
into
mov
add
mov
add
shll
hlt
frstor
fadds
ljmp
add
ret
rolb
movl
add
add
rolb
mov
add
add
fmull
add
daa
push
push
push
push
push
push
call
mov
data16
add
add
in
roll
sahf
pop
cmpsb
imul
jl
aam
iret
divb
repnz
mov
add
add
add
add
int
sti
repnz
add
std
add
add
add
add
xchg
xchg
cld
add
int
add
orl
call
jmp
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
flds
xchg
add
push
pop
sti
jb
add
xchg
popa
add
add
fmulp
xchg
add
into
add
sar
mov
loope
add
add
add
add
add
push
lea
data16
xchg
push
popa
loopne
lock
add
add
add
add
pop
ret
push
push
lea
push
push
lea
push
call
out
cld
push
mov
pop
add
stos
mov
add
add
insb
std
add
add
xchg
add
roll
add
in
push
add
add
add
mov
nop
stos
cld
ror
add
data16
add
fcomp
lcall
add
mov
add
fwait
add
pop
rorb
shrl
fnstenv
arpl
mov
push
lea
push
push
push
push
push
lea
push
push
call
mov
mov
lock
push
add
in
add
test
mov
add
add
add
add
add
add
jle
cld
rorl
fisubl
popl
pop
mov
add
xchg
pop
popa
add
add
movsb
fucom
add
add
orl
scas
enter
add
add
jl
mov
add
lcall
lea
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
mov
outsl
mov
add
fucomi
mov
add
outsl
add
add
add
push
jno
filds
jbe
mov
or
addl
mov
out
add
fmull
pop
in
ret
add
add
push
push
lea
push
push
lea
push
push
push
call
add
add
out
add
popf
fwait
jge
fldl
mov
out
add
pushf
add
ljmp
add
testb
icebp
add
pop
xchg
lock
jnp
cmc
imul
sbb
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
add
jae
xchg
addb
mov
add
call
lds
add
add
int
mov
add
cmpsl
xchg
lret
add
mov
rolb
cmpsl
mov
gs
jl
cwtl
shrb
popa
mov
xchg
add
int3
lea
pop
mov
xor
push
push
inc
push
sub
add
inc
add
sub
xor
sub
pop
sub
ror
not
pop
push
push
push
push
push
call
call
movl
ljmp
jno
nop
push
add
add
js
mov
add
iret
add
out
push
add
add
add
shl
push
out
pop
add
xchg
add
jp
repnz
add
arpl
pushl
call
push
lea
push
push
push
call
faddl
add
mov
in
cli
sti
add
leave
add
mov
push
add
movsb
mov
add
sbbl
imul
adc
inc
call
add
add
je
in
pusha
lea
push
push
lea
push
push
push
push
call
movsb
div
add
add
add
add
add
loope
xchg
add
cli
clc
out
andb
add
add
je
fcomi
mov
in
add
xchg
movsl
lcall
mov
pop
in
push
mov
add
add
add
mov
add
add
js
push
ret
ret
out
mov
lea
pop
lea
push
push
call
add
mov
mov
add
add
mov
in
xchg
add
add
jno
pop
imul
lods
popfw
add
add
xchg
cld
scas
add
test
add
add
mov
push
pop
into
imul
movb
mov
movsb
ja
pop
popa
mov
xlat
add
mov
mov
cmpsb
add
fmull
pushl
push
push
push
push
call
xchg
lods
movsl
add
push
jl
in
cld
add
add
add
jecxz
test
add
add
add
popl
movsb
fs
out
movsb
movsl
shr
push
add
add
add
jmp
add
add
add
testb
int3
add
add
in
into
mov
test
fsub
mov
add
stc
cwtl
incb
movsl
add
pusha
adc
jne
call
push
push
push
push
push
push
push
lea
push
call
mov
testb
xorb
add
add
loopne
out
add
add
add
add
arpl
test
xchg
mov
mov
push
iretw
sarl
cmpsb
xchg
nop
add
pop
pushl
push
push
lea
push
push
lea
push
push
call
ja
mov
cmpsl
add
jge
addl
mov
loop
lds
popa
mov
add
jnp
mov
add
cltd
mov
add
cmc
add
add
addl
popa
add
movsb
add
add
jl
xchg
cld
add
nop
add
add
add
cmc
add
add
pop
pushl
call
push
push
dec
push
push
pop
add
add
sub
sub
shl
dec
pop
inc
pop
push
lea
push
push
push
push
call
add
cltd
add
mov
add
mov
enter
jo
andb
ficomps
int
fs
mov
add
add
add
add
xorl
aam
add
imulb
lret
pusha
std
mov
arpl
mov
lock
repnz
test
fmull
jne
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
iret
xchg
add
pushf
add
add
pop
fildl
ret
xchg
test
pop
addl
push
jecxz
add
pop
push
insb
mov
sahf
jecxz
scas
add
hlt
lea
pop
call
push
push
push
sub
push
xor
add
ror
rol
shr
sub
sub
lea
sub
pop
inc
add
pop
push
push
push
push
push
push
push
call
pushf
nop
push
mov
xchg
fsubl
pusha
add
jp
add
mov
shll
pop
enter
shlb
rcl
xchg
lds
stos
add
int3
jmp
push
add
enter
sub
add
lods
fidivrs
push
les
xchg
add
add
cmc
add
in
hlt
lea
pop
push
push
push
push
lea
push
push
call
rcl
add
adcb
mov
lret
cli
in
add
add
add
mov
js
add
add
enter
add
add
lds
add
pop
iret
out
ffree
lret
add
mov
popa
adc
push
push
push
lea
push
push
push
lea
push
push
call
mov
push
add
add
nop
pop
in
jns
jge
call
jp
add
xchg
mov
add
sti
out
fs
jl
push
add
fstl
fadds
imul
arpl
jge
stos
add
add
out
add
add
pop
int
test
jbe
clc
mov
rcll
add
jnp
add
imul
push
push
push
push
push
push
lea
push
lea
push
push
call
add
fldl
mov
loopne
mov
js
add
stc
shrl
add
scas
mov
add
hlt
jae
jo
arpl
fwait
mov
ja
add
aam
lods
out
fstl
push
add
add
add
fists
fstl
les
clc
push
push
push
push
push
push
push
push
lea
push
push
push
call
mov
js
add
add
xchg
xchg
xlat
add
add
add
movsl
hlt
fcmovnu
iret
add
add
add
test
jmp
mov
imul
insb
cmpsb
xlat
add
mov
fildll
add
mov
sub
push
push
push
lea
push
lea
push
call
popf
mov
add
add
mov
stc
add
add
add
jle
cmpsb
add
add
add
add
bound
add
jecxz
les
cmc
mov
pushf
add
xlat
add
movsl
mov
add
xchg
mov
adc
mov
push
push
push
push
push
push
push
lea
push
call
loopne
xchg
aam
mov
add
add
imul
add
scas
sti
mov
add
add
sahf
add
out
hlt
jno
into
out
ljmp
mov
into
jmp
andb
lea
pop
add
add
push
lea
push
call
loopne
scas
jle
add
add
sub
fs
push
data16
add
add
push
add
add
mov
add
push
add
push
add
rolb
mov
lea
pop
add
mov
xor
push
push
push
call
data16
add
add
stos
test
add
add
pop
lods
out
stc
test
xchg
jo
mov
xchg
pop
pop
add
jge
add
add
movsb
add
lea
pop
add
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
fwait
add
add
out
add
add
push
lcall
add
add
movsl
popa
add
xlat
cmc
je
add
add
xchg
push
mov
add
add
add
add
add
shl
mov
lahf
add
xchg
scas
add
fstl
cmpsl
jnp
mov
in
add
add
pop
push
mov
push
push
lea
push
lea
push
push
push
push
call
stc
pop
add
add
add
add
lds
add
jo
jecxz
add
push
lods
add
cmpsb
add
clc
pop
out
cmpb
mov
fldcw
push
xchg
mov
add
pop
xor
push
lea
push
push
push
lea
push
call
add
test
push
add
imul
mov
movsl
jno
cmpsb
pusha
lods
add
mov
stc
add
mov
xchg
add
add
movsb
pop
jno
add
mov
add
popl
jl
fmull
les
add
push
lea
push
call
cmpsl
jmp
iret
iret
pop
add
scas
mov
stos
addr16
fwait
divb
add
add
shrb
add
movsl
mov
add
fadds
mov
stos
add
add
xchg
mov
add
aam
add
sahf
ja
add
add
add
int
mov
lea
pop
add
push
push
lea
push
push
push
push
call
add
mov
stc
hlt
notl
ljmp
xchg
add
xlat
ret
out
jno
fcmovnbe
add
lret
add
cltd
push
add
mov
add
mov
add
xchg
add
mov
mov
add
jp
movsl
add
lock
aam
jbe
mov
jns
add
ret
push
lcall
out
int3
lea
pop
pop
push
push
push
push
push
lea
push
call
xchg
jge
jns
mov
rcrl
lahf
add
add
add
add
lock
mov
add
add
add
add
jbe
jnp
add
add
jns
add
mov
add
xchg
icebp
push
add
mov
mov
movsb
aad
les
lret
xchg
add
xchg
sti
add
aam
bound
pop
mov
xor
push
push
lea
push
push
push
call
add
test
fsubrp
mov
add
loopne
add
cwtl
add
add
pop
add
add
push
in
add
in
push
stc
add
push
fiaddl
enter
add
push
aad
jo
mov
je
push
add
add
pop
mov
fldl
rolb
in
aam
cwtl
neg
arpl
add
lahf
add
jns
add
xchg
ficoms
add
shlb
addr16
push
push
push
push
lea
push
push
push
call
add
int3
add
push
les
add
cwtl
test
leave
leave
fiadds
pop
jle
add
mov
xchg
lods
pop
add
jle
jne
push
call
add
mov
enter
in
into
add
add
gs
add
mov
add
mov
sbb
inc
or
pop
jae
push
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
outsl
jle
shlb
add
lret
mov
add
mov
sti
jb
jle
bound
jbe
mov
mov
scas
push
add
add
nop
xchg
pop
jbe
add
loop
add
add
clc
push
mov
mov
add
xchg
mov
lea
pop
xor
push
push
push
call
add
les
xchg
add
cli
imul
arpl
add
add
mov
imul
add
cld
xlat
jle
add
add
test
lea
pop
add
push
push
push
push
push
call
lahf
add
je
mov
add
add
std
lcall
fistpl
add
add
arpl
lock
orb
add
add
in
add
push
data16
jno
push
arpl
sub
pop
push
push
push
push
lea
push
call
popf
call
lret
lea
stos
add
jbe
sahf
lds
fwait
lods
mov
add
xlat
add
add
jle
jno
add
data16
lods
addl
lods
andb
xchg
add
mov
lea
pop
rep
pop
push
push
push
lea
push
push
call
lcall
add
rolb
jge
add
into
fldl
insb
add
pop
jl
lds
hlt
jl
push
out
pop
push
mov
enter
add
fiadds
lock
push
mov
add
xchg
jbe
lret
add
pop
mov
push
push
push
push
push
push
lea
push
call
add
in
add
add
ret
pop
shlb
mov
addb
add
aad
repnz
mov
cld
pop
fs
std
fwait
add
outsl
add
hlt
lea
pop
add
push
push
lea
push
push
push
lea
push
lea
push
call
add
stc
stos
push
add
add
jmp
loope
lcall
lcall
pushf
xchg
imul
aad
pop
add
lahf
xchg
lods
in
add
cld
scas
add
sti
je
push
add
add
arpl
add
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
scas
mov
jno
add
add
add
add
js
add
jns
out
xchg
test
add
ljmp
pop
add
test
test
add
mov
sti
les
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
mov
mov
shr
add
notb
outsl
add
filds
testb
cmpsb
add
std
add
add
add
cltd
fucomip
pop
jns
test
mov
pop
mov
push
push
push
lea
push
push
push
call
jl
fsub
add
lods
mov
xchg
jmp
add
jne
loopne
sti
xchg
lret
jns
add
push
add
add
fildl
fistps
outsl
add
mov
mov
enter
fcomp
cli
xchg
lock
add
ret
add
rcr
mov
add
xchg
jge
jae
jp
mov
mov
iret
add
scas
test
mov
mov
fcmovnu
add
jge
add
cmc
mov
lea
pop
xor
push
push
push
lea
push
push
push
call
mov
out
add
into
outsl
add
je
add
insb
add
xlat
add
add
gs
add
loopnew
shll
add
add
sti
fcomps
pusha
add
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
int3
loopne
add
mov
push
in
cmpsb
mov
int
add
into
fiaddl
add
loope
add
add
add
pop
fs
imul
loope
mov
add
addr16
add
mov
mov
lahf
jne
add
test
add
loopne
add
jl
xchg
add
add
jnp
cltd
mov
add
add
out
add
add
jo
mov
jnp
mov
lea
pop
mov
xor
push
push
push
call
mov
add
add
fildl
stc
add
jmp
mov
lcall
jecxz
xchg
popl
lods
add
pop
add
cmc
mov
add
test
fbstp
pusha
repnz
xchg
add
add
fiadds
sahf
add
jns
add
add
add
jb
add
or
mov
push
push
push
lea
push
push
lea
push
push
call
add
cmpsl
mov
jge
scas
fldl
mov
enter
not
sarl
add
int
add
add
jo
rcll
imul
mov
add
add
add
in
addl
mov
addr16
add
xchg
in
add
fucomip
add
mov
jo
mov
lea
pop
xor
push
lea
push
lea
push
call
add
add
push
je
add
imul
pop
jns
add
xchg
add
add
add
mov
mov
cld
jno
fs
push
add
popf
fsubrs
add
imul
pop
mov
lea
add
test
fisubrs
movb
mov
data16
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
add
ja
add
add
je
jno
fadds
push
mov
fisubl
mov
add
in
add
add
sbbb
add
add
push
mov
xchg
fstp
lods
mov
add
add
mov
add
test
add
mov
add
into
add
jb
add
loop
add
mov
lea
pop
add
push
push
push
lea
push
push
push
call
jnp
fildl
add
add
xlat
aad
add
in
arpl
lock
add
mov
xchg
add
cltd
int
add
pop
mov
mov
add
add
mov
mov
pusha
sbb
rorl
stos
push
inc
push
and
add
sub
lea
sub
xor
lea
ror
not
pop
add
pop
push
add
pop
pushl
push
ror
shl
pop
call
push
push
push
shr
not
push
or
inc
add
add
add
sub
ror
pop
lea
pop
push
push
push
push
push
call
rolb
mov
add
aam
and
push
add
mov
xchg
add
imul
add
mov
out
fcoml
jbe
add
aam
push
add
add
icebp
lret
ret
push
mov
add
hlt
jns
jo
add
push
add
add
add
mov
xchg
mov
lea
pop
push
push
push
sub
ror
shr
add
pop
call
push
not
pop
mov
push
push
lea
dec
pop
push
mov
push
push
push
push
call
add
lret
addl
pop
jmp
jge
mov
out
stos
aam
push
add
add
mov
add
lock
add
mov
xchg
sarb
mov
add
rolb
add
outsl
imul
into
add
pop
add
lret
add
jle
jmp
enter
adc
pop
in
ret
add
add
push
push
push
call
add
mov
add
jmp
lahf
pop
js
add
ret
mov
add
out
fisubs
add
add
mov
scas
cltd
add
in
cltd
jae
stos
scas
jne
add
mov
add
lret
add
push
xchg
add
add
push
aam
push
xchg
popa
add
add
add
aam
bound
add
mov
push
push
push
push
call
xchg
add
gs
add
add
test
add
arpl
jb
popa
add
push
add
mov
add
pusha
scas
add
xchg
mov
add
pop
mov
rol
jo
pop
out
js
lret
clc
add
divb
sti
push
mov
sti
imul
pop
xor
push
push
lea
push
push
push
push
push
call
adcb
add
testb
pop
hlt
out
add
out
jl
push
mov
cwtl
add
push
add
push
pop
add
faddl
lods
jns
add
shlb
mov
cld
add
add
test
add
add
mov
cltd
pop
shlb
jbe
add
insb
add
jno
add
add
pop
addb
add
add
add
std
add
clc
movsl
mov
lea
pop
add
push
push
push
push
push
push
call
sahf
jge
add
add
int3
add
cmc
gs
mov
out
add
jae
add
orl
add
test
add
imull
mov
mov
movsl
test
cltd
push
add
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
aam
imul
outsl
sti
mov
xchg
add
lcall
xchg
data16
lcall
loope
cmpsb
add
pop
add
testl
jp
sahf
pop
mov
pop
add
add
lock
add
pop
push
mov
xor
push
pop
add
pop
push
add
pop
mov
xor
push
push
push
push
push
lea
push
call
jb
add
cld
add
out
lods
add
add
stos
fmulp
lahf
cltd
add
scas
fiadds
xchg
add
into
rcr
add
scas
add
add
add
add
mov
fiaddl
xlat
outsl
add
add
int3
lea
pop
rep
push
push
call
aad
pop
jge
add
add
mov
xchg
add
mov
pop
jmp
xchg
sbbl
add
je
add
mov
pop
add
add
xchg
push
fst
add
out
mov
add
add
movsb
imul
add
movsb
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
call
lret
add
add
add
stc
out
pushf
stos
fcmovnb
hlt
add
pop
add
lret
mov
add
add
icebp
leave
add
rclb
out
add
roll
push
fildl
mov
xchg
push
mov
mull
push
roll
push
incb
pop
jb
cwtl
xchg
lock
push
xchg
int3
mov
lea
pop
xor
push
push
call
out
add
sbbl
add
add
add
add
mov
stos
jnp
int
push
pop
shll
jbe
mov
nop
mov
jp
out
jmp
mov
add
test
rolb
push
aad
add
out
jle
jno
add
mov
jno
add
in
xchg
pop
add
rolb
add
add
add
mov
int3
lea
pop
add
push
add
pop
or
je
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
mov
push
ljmp
add
jnp
leave
ljmp
lcall
add
mov
add
mov
icebp
data16
mov
popa
add
fsub
mov
loope
add
outsl
pop
xchg
addl
add
sarl
jmp
popf
mov
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
test
hlt
add
ljmp
mov
test
fcmovb
add
jb
out
add
mov
add
loopne
mov
mov
mov
out
out
mov
xlat
xlat
push
add
lods
add
add
popf
aam
add
add
push
scas
cwtl
add
gs
fisubs
cld
lea
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
imul
mov
mov
add
je
out
rcr
add
stos
xlat
add
add
add
js
ja
add
mov
pop
add
mov
push
jns
mov
scas
test
fstps
enter
popl
lock
add
loopne
add
push
add
imul
add
add
mov
lea
pop
mov
xor
push
rol
sub
pop
add
push
push
push
push
push
push
call
mov
pop
popa
loop
out
mov
sahf
imul
icebp
add
mov
add
out
mov
add
add
add
in
fwait
test
pop
add
mov
add
mov
add
loopne
add
xchg
add
add
xchg
xchg
add
mov
lea
pop
add
push
not
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
in
add
sti
std
je
enter
lea
hlt
add
addr16
add
mov
add
imul
add
lcall
add
mov
roll
ja
sahf
add
push
outsl
add
aam
xchg
xchg
hlt
lea
pop
mov
xor
push
ror
shr
add
pop
add
pop
push
not
ror
sub
pop
rep
push
push
push
push
push
call
add
pushf
cmc
stos
add
mov
push
push
ja
lods
lcall
aam
add
add
add
add
int3
add
std
add
add
jp
add
pop
in
pop
ljmp
mov
testb
lret
pop
sti
add
add
add
loope
push
lahf
in
push
or
add
rclb
mov
cltd
imul
popa
adc
mov
xor
push
lea
push
push
lea
push
push
lea
push
lea
push
call
data16
mov
xchg
in
nop
stc
add
in
out
cmpsl
jno
sti
jae
xlat
mov
add
mov
loope
mov
add
add
rolb
jb
add
xchg
add
mov
fidivs
les
leave
je
mov
push
push
push
push
push
lea
push
push
call
cmc
add
push
outsl
divl
add
add
jge
add
push
in
fisubrs
rcll
mov
addr16
gs
lcall
icebp
in
push
addb
pop
mov
lea
pop
add
push
push
push
push
push
lea
push
call
add
add
push
jb
add
jne
roll
xorl
out
xchg
pushf
fwait
mov
add
mov
cld
add
add
add
add
add
movsb
mov
cli
jnp
add
add
mov
test
jl
jnp
sahf
add
jle
add
add
mov
lea
pop
add
push
shr
sub
pop
rep
push
shr
pop
pop
push
push
add
xor
push
xor
add
sub
sub
pop
xor
shr
dec
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
shlb
push
test
loop
mov
add
jp
hlt
add
in
jnp
test
sti
push
xchg
jae
lcall
add
add
pop
pop
push
sub
rol
xor
pop
mov
push
push
push
push
push
push
call
add
je
pop
add
rclb
xchg
cltd
add
popa
add
loop
add
in
jbe
call
add
push
sbbl
add
add
jo
add
jno
int3
lea
pop
mov
push
shr
rol
pop
mov
push
push
push
push
call
imulb
add
add
insb
imul
pop
add
add
ljmp
push
pop
fwait
in
jns
mov
add
out
imul
enter
add
add
out
hlt
stc
xlat
pop
jo
out
add
lea
pop
jmp
push
lea
push
push
push
call
add
mov
popf
mov
add
arpl
mov
add
std
jnp
add
cmc
add
add
add
xchg
iret
lods
imul
add
cwtl
add
add
add
aam
push
jp
mov
adc
push
push
push
call
pop
add
rcrb
add
add
cmc
lock
add
add
add
mov
mov
arpl
add
xlat
xchg
mov
add
add
bound
jnp
add
jo
add
add
nop
xchg
add
pop
mov
push
inc
add
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
icebp
add
add
movsb
add
pop
add
addb
add
pop
add
test
add
lds
loop
add
cli
push
add
add
testb
add
pop
lock
pop
xchg
add
call
mov
scas
loopne
jp
mov
jo
add
jle
add
icebp
add
enter
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
sti
pop
loope
add
in
add
arpl
repnz
shl
push
std
mov
add
mov
sti
add
out
pop
mov
test
addr16
add
add
add
add
jle
push
add
andl
data16
push
push
push
lea
sub
not
pop
push
mov
push
push
push
push
push
push
push
push
push
push
call
negb
add
jmp
add
in
pop
jl
xchg
nop
mov
les
pop
add
add
add
xchg
scas
pop
add
add
sti
jecxz
add
test
add
add
add
mov
cli
add
addr16
add
in
pop
mov
lea
pop
pop
push
push
lea
push
call
pop
orl
add
add
add
add
mov
jge
addl
add
add
ret
subl
add
mov
add
mov
lea
pop
pop
push
shl
pop
pop
push
push
push
push
push
call
mov
in
mov
in
mov
add
add
mov
mov
outsl
add
add
scas
add
scas
aam
add
loopne
fwait
leave
jnp
add
mov
in
add
add
add
mov
imul
jb
out
add
popf
add
mov
jle
lock
add
add
add
mov
loope
repnz
lods
mov
lea
pop
pop
leave
push
rol
xor
rol
add
pop
ret
push
add
sub
shr
pop
push
push
pop
mov
add
push
push
call
loope
pop
mov
add
arpl
add
add
mov
mov
add
fdivrs
add
mov
mov
pop
add
add
push
mov
adcl
loop
add
add
add
add
cltd
call
mov
lea
pop
push
push
push
lea
push
push
push
call
pop
jns
push
flds
fildl
add
roll
add
pusha
mov
mov
add
add
fwait
add
test
add
fldl
in
pusha
add
add
add
rorl
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
imul
pop
push
mov
add
shrl
add
movsl
scas
lds
jle
out
ja
test
jae
jbe
add
add
loop
ret
add
push
add
flds
add
mov
jnp
cltd
add
test
lret
lea
pop
push
push
dec
add
pop
movl
push
push
push
call
lods
jo
mov
pusha
hlt
cmc
jnp
cmpsl
fistpl
push
faddl
cmpsl
out
out
add
add
cli
add
imul
jne
push
add
add
loopne
add
test
add
fstl
add
pop
addl
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
mov
push
imul
add
fadds
test
mov
push
add
add
add
add
ja
stos
add
mov
jge
in
loope
add
mov
nop
jge
out
lcall
mov
mov
mov
lea
pop
test
je
push
add
dec
lea
pop
mov
push
push
lea
push
lea
push
push
call
add
xchg
mov
add
push
add
ljmp
add
gs
add
add
add
loopne
xchg
add
jae
movsl
jbe
xchg
jne
sti
push
ret
test
add
add
add
push
add
add
int3
mov
popa
mov
cwtl
add
mov
shl
js
add
fwait
push
add
pop
pop
pop
push
lea
add
add
dec
pop
pop
push
pop
pop
leave
push
not
sub
not
pop
ret
push
push
push
push
push
push
call
add
add
add
add
aad
fwait
hlt
add
push
add
loope
add
add
xchg
nop
add
icebp
add
in
add
push
mov
shrb
je
andl
lret
add
add
add
add
in
shl
mov
add
mov
iret
test
jecxz
ret
mov
lea
pop
push
mov
push
add
lea
inc
inc
pop
add
push
push
shl
add
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
sti
pop
add
push
mov
aam
mov
stc
cltd
add
add
add
out
pusha
add
add
mov
mov
aad
xchg
add
mov
mov
mov
movb
add
add
pop
add
aam
xchg
scas
add
mov
lea
pop
push
push
sub
add
pop
testl
push
push
push
lea
push
call
cmpsb
push
test
out
addl
nop
addb
aam
pop
jno
add
testb
data16
out
add
add
fwait
ja
mov
in
add
mov
test
roll
add
add
add
mov
pushf
add
jp
call
std
je
push
add
jp
add
xlat
mov
lea
pop
addl
push
push
push
call
hlt
lods
ret
add
push
loop
repnz
add
add
lds
lods
jnp
jge
mov
xchg
xchg
enter
jb
add
xchg
lret
add
nop
cmpsb
stc
jo
mov
push
add
add
add
int3
lea
pop
call
push
push
push
push
push
call
add
add
mov
lock
add
add
add
orl
add
loop
add
lods
add
add
orl
mov
lea
pop
mov
pushl
push
sub
pop
push
push
push
add
dec
ror
pop
call
push
dec
shl
dec
pop
cmpl
jne
push
shl
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
push
add
nop
add
add
jge
add
add
out
add
add
add
mov
jns
aad
add
add
push
add
out
add
iret
add
add
pop
pop
push
inc
lea
lea
pop
pop
push
push
push
call
mov
add
mov
fisubl
lods
add
add
add
add
addr16
mov
add
jle
roll
add
pop
mov
int3
mov
ljmp
ret
shl
fmuls
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
call
cwtl
pop
lock
add
mov
xchg
cmpsb
imul
fs
clc
shr
imul
pop
sahf
js
push
lret
in
mov
add
ja
sahf
mov
ja
out
aad
add
data16
add
shll
jb
icebp
add
pop
leave
push
add
sub
pop
ret
push
push
add
lea
xor
add
pop
mov
add
push
push
push
push
push
push
push
call
add
mov
enter
add
add
add
shrl
add
xlat
fdivl
mov
mov
adc
pusha
add
out
push
sahf
in
arpl
push
nop
pusha
out
add
add
outsl
pop
imul
fmull
pop
push
push
push
lea
push
push
push
push
push
push
call
add
push
popa
ficomps
jo
fnstenv
add
add
loopne
negb
add
mov
add
add
add
add
add
add
pop
add
aam
hlt
lea
pop
push
push
push
lea
push
lea
push
lea
push
push
call
aad
flds
aad
jecxz
xchg
out
clc
add
mov
add
popa
int3
addb
add
add
push
jl
movsb
add
add
add
insb
ljmp
movsl
add
into
out
mov
data16
push
add
rol
add
pop
movl
push
push
push
call
pop
faddl
sti
mov
test
test
jmp
add
jnp
lahf
add
lods
mov
mov
ljmp
lret
add
bound
push
add
add
iret
xchg
add
fbld
add
les
add
mov
pop
mov
add
add
int3
lea
pop
push
push
push
push
push
call
add
into
test
add
fidivrs
out
add
add
xchg
jb
add
movb
add
add
jb
mov
roll
imul
jbe
pop
out
jbe
pop
add
add
add
enter
cwtl
push
pop
xchg
add
lret
pushf
jns
out
out
mov
lea
pop
call
push
pop
push
push
inc
shl
shr
pop
call
push
pop
subl
push
xor
lea
shl
pop
cmpl
jne
pop
push
pop
pop
push
dec
shr
pop
pop
push
shl
lea
xor
pop
pop
leave
push
dec
add
pop
ret
push
xor
inc
pop
push
push
add
xor
pop
mov
push
rol
not
not
pop
add
push
add
pop
push
push
lea
push
push
call
add
add
gs
add
jno
add
add
push
in
lds
push
les
push
test
in
vpaddsb
add
mov
test
jne
mov
les
jnp
jmp
hlt
cmc
add
mov
add
hlt
add
add
lea
pop
push
push
add
inc
xor
pop
push
push
push
add
shl
xor
xor
pop
mov
push
push
push
lea
push
push
lea
push
push
call
hlt
idiv
add
push
add
lods
jecxz
add
add
cltd
out
mov
add
add
jmp
pop
in
add
arpl
mov
stos
add
add
mov
xchg
push
fildll
fmull
inc
cmp
call
push
lea
push
call
movsl
add
add
add
mov
into
test
add
fsubs
push
lods
add
shrl
add
mov
push
jae
aam
cli
push
stos
sti
pop
pop
add
add
lahf
int
xlat
mov
add
mov
lea
pop
mov
shr
push
push
call
ret
cmpsb
rol
add
push
add
add
test
add
jb
lret
push
addr16
les
jno
add
add
push
jno
aad
jo
add
test
aad
add
add
push
into
add
sahf
add
add
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
call
movsb
add
jecxz
add
stos
stos
add
jp
xchg
add
add
loope
xorl
fcom
add
andl
mov
add
cmpb
add
add
jae
mov
add
int
cmpsl
mov
test
mov
lea
pop
mov
push
inc
shl
shl
pop
mov
add
push
not
add
pop
add
push
add
ror
inc
shl
pop
mov
mov
push
shr
rol
pop
cmp
jne
push
xor
shr
pop
cmp
jne
mov
push
shl
add
sub
shr
pop
movl
jmp
push
lea
pop
mov
mov
push
not
pop
sub
jne
mov
push
rol
shr
xor
xor
pop
movl
push
pop
jmp
mov
push
push
push
push
push
push
lea
push
push
push
call
int
out
add
xchg
out
add
add
js
test
add
mov
mov
add
stc
jne
test
lcall
add
add
add
push
mov
insb
pop
mov
out
cmc
lea
scas
add
pushf
ret
add
fs
call
fcmovu
lahf
jo
jl
add
addr16
xchg
jo
jno
mov
and
mov
cmp
jne
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
shll
loopne
mov
in
add
mov
cmc
add
push
loopne
add
add
mov
add
faddl
pop
add
shrb
in
add
pop
mov
push
lea
push
push
push
call
test
mov
push
push
fcmovbe
out
jp
push
pusha
mov
push
add
add
add
mov
add
add
enter
jbe
add
jmp
mov
mov
aam
add
add
pop
add
push
popf
mov
repnz
mov
fcomps
int3
add
mov
lea
pop
movl
push
shr
rol
pop
jmp
push
push
call
lahf
add
loop
push
jmp
add
lea
add
add
lea
cli
neg
out
add
lods
bound
add
mov
nop
imul
add
xchg
loop
popf
mov
add
clc
cmc
mov
push
mov
add
add
add
lea
pop
mov
push
pop
cmpw
jne
mov
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
ljmp
pop
pop
add
ja
mov
xchg
add
shr
jb
clc
shrb
add
add
xchg
imul
add
les
in
add
add
pop
movl
push
push
lea
push
push
push
call
jp
addb
pop
pop
pop
scas
rcrl
push
xchg
pop
popf
mov
add
add
add
rolb
xchg
xchg
jge
test
jmp
lea
add
add
add
add
cld
lea
pop
jmp
push
push
push
push
lea
push
push
call
lcall
add
mov
add
add
add
jl
add
add
leave
cmpb
add
mov
add
add
add
add
add
pop
in
add
add
aam
mov
stc
enter
add
addb
hlt
lea
pop
pushl
pop
push
inc
rol
shl
xor
pop
mov
push
lea
push
push
lea
push
push
push
call
repnz
mov
add
cmpsb
add
add
imul
mov
add
out
aam
data16
mov
add
xchg
push
ja
add
push
test
lret
add
add
and
sti
jne
fmull
inc
sbb
push
call
mov
mov
mov
out
add
leave
push
add
add
add
jae
jecxz
add
stos
pop
data16
jbe
add
mov
cmpsl
bound
add
add
jle
add
mov
lea
pop
mov
push
push
sub
add
ror
push
and
add
rol
xor
sub
shl
pop
dec
pop
push
lea
push
push
push
call
je
add
add
mov
add
fdivl
mov
into
int3
xchg
fisubrl
push
enter
add
ljmp
add
rcrb
mov
add
add
mov
movsl
call
popa
movsl
pop
rcr
cli
rolb
add
cmpsb
fnstcw
sahf
mov
add
add
les
call
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
int3
cmpsl
fistpll
add
add
bound
xlat
xchg
add
jge
add
xchg
add
lods
xchg
add
out
mov
mov
add
push
jl
int3
jp
in
xchg
add
mov
add
pop
test
add
mov
add
add
push
roll
pop
cmc
bnd
xlat
pop
push
in
cbtw
fwait
add
cmc
mov
mov
lea
pop
cmpl
je
push
push
sub
add
push
xor
add
not
sub
inc
add
dec
pop
ror
pop
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
fiadds
cmpsl
fdivl
cmc
add
push
add
push
pop
add
mov
andb
mov
mov
add
addr16
add
mov
call
pusha
sub
call
push
push
push
call
add
add
add
add
add
add
in
add
add
jle
xchg
mov
add
ljmp
lcall
cltd
push
add
mov
add
lea
loopne
stos
sarb
push
cltd
pop
ffree
loopne
add
add
outsl
movsl
mov
add
mov
add
mov
lea
pop
cmpl
je
push
push
shr
not
push
and
add
shl
lea
sub
sub
shl
lea
pop
sub
sub
dec
pop
push
push
call
enter
push
xchg
push
mov
add
stc
ljmp
add
add
add
int
enter
add
add
add
movsl
add
fiaddl
out
test
lret
add
add
mov
popa
or
call
push
not
not
pop
cmpl
je
push
push
add
lea
shr
ror
push
or
inc
add
dec
sub
ror
sub
rol
shr
pop
sub
not
pop
push
shr
shr
dec
pop
push
push
lea
pop
call
push
push
push
call
test
add
mov
jmp
add
xchg
int
hlt
fiaddl
lret
mov
cmpsl
add
incb
add
add
add
data16
add
repnz
add
nop
cmpsl
pop
add
add
movsb
add
lock
add
fistpll
add
push
insb
add
mov
lea
pop
cmpl
je
push
push
add
push
xor
add
inc
sub
sub
sub
sub
sub
pop
add
shr
pop
push
rol
add
shr
pop
push
push
shl
shl
sub
pop
call
cmpl
je
push
push
rol
add
push
or
not
add
not
dec
ror
sub
shl
sub
sub
pop
sub
dec
pop
push
push
push
lea
push
push
push
push
push
push
push
call
push
addb
add
js
add
divb
add
mov
add
jmp
add
out
test
fwait
lea
add
outsl
in
pop
int3
add
fwait
push
in
add
bound
add
add
add
pop
mov
lea
pop
push
push
push
lea
push
push
lea
push
call
cwtl
in
add
pop
add
out
add
mov
add
addl
out
outsl
add
add
add
pop
add
add
scas
movsl
ficomps
shll
fiaddl
add
bound
add
add
push
jecxz
add
pop
call
push
push
push
call
hlt
imul
iret
scas
add
testb
lahf
call
imul
jae
push
add
add
loope
push
testl
in
insb
add
imul
pop
cmpl
je
push
push
sub
ror
shr
rol
push
and
add
xor
sub
inc
xor
rol
inc
pop
rol
add
pop
push
dec
dec
pop
push
call
push
inc
inc
sub
pop
cmpl
je
push
push
ror
push
or
inc
add
sub
rol
rol
sub
add
not
pop
not
pop
push
shl
add
shr
ror
pop
push
push
lea
push
push
push
lea
push
call
rclb
imul
stos
pusha
fildl
add
mov
adc
icebp
mov
imul
je
push
add
mov
jmp
add
add
xchg
insb
add
outsl
add
mov
add
xchg
outsl
add
pop
call
push
lea
sub
not
shl
pop
cmpl
je
push
push
lea
sub
push
push
pop
add
shl
sub
sub
not
pop
add
pop
push
add
ror
pop
push
call
push
pop
cmpl
je
push
push
not
push
or
inc
add
add
sub
lea
not
shl
pop
not
not
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
fnsave
add
mov
add
cmc
mov
mov
add
add
xchg
popf
add
mov
mov
add
mov
testb
hlt
lea
pop
push
push
push
push
push
push
lea
push
push
call
xchg
pop
push
test
test
out
arpl
add
mov
add
add
mov
mov
mov
fistpll
add
add
add
fwait
push
pop
add
add
add
add
jnp
imul
pop
lahf
std
add
add
nop
stos
push
add
cltd
jecxz
add
les
push
add
push
dec
lea
pop
cmpl
je
push
push
add
rol
not
lea
push
xor
add
add
add
shl
xor
sub
shr
lea
add
pop
rol
lea
not
pop
push
dec
xor
pop
push
push
pop
call
push
not
pop
cmpl
je
push
push
dec
dec
push
xor
add
ror
sub
shr
add
pop
pop
push
not
dec
inc
inc
pop
push
push
shr
pop
call
cmpl
je
push
push
sub
add
push
or
not
add
sub
shr
add
sub
sub
shr
inc
pop
add
xor
shl
pop
push
add
not
pop
push
call
push
rol
pop
cmpl
jne
mov
push
rol
pop
movl
jmp
push
pop
xor
pop
push
push
push
lea
push
push
push
push
call
push
jnp
sbbb
add
add
popl
add
add
addl
add
add
aam
lds
in
add
shl
add
add
lock
jno
mov
mov
pop
add
add
add
int3
add
cmc
loopne
add
pop
pop
push
push
push
push
push
lea
push
lea
push
call
xchg
add
add
nop
lods
add
add
add
test
roll
stos
negb
cli
mov
imull
add
fxch
xchg
add
add
out
gs
roll
add
mov
lea
pop
pop
push
not
dec
pop
pop
push
lea
push
call
add
incb
add
add
xchg
xchg
pusha
xchg
mov
imul
cli
jo
add
xchg
push
jle
cmpsl
add
add
push
add
divb
cld
mov
add
iret
fcmovu
out
test
out
xchg
aam
add
fadd
loop
icebp
xchg
sahf
add
add
add
mov
lea
pop
leave
push
sub
pop
ret
push
add
ror
pop
push
mov
push
sub
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
mov
add
add
in
add
xorb
mov
add
out
iret
jns
add
les
scas
add
add
add
repnz
pop
cmpsl
jae
into
mov
pop
cmpl
jne
push
push
rol
lea
add
push
sub
add
sub
xor
pop
add
ror
pop
push
push
push
push
push
push
push
call
add
add
lret
fadds
mov
mov
andb
pop
icebp
fisubs
shr
leave
add
add
add
add
out
mov
add
add
add
push
pop
add
stc
push
add
jb
fwait
adcb
pusha
sbb
pushl
call
push
push
push
lea
push
lea
push
call
pusha
xchg
pop
add
push
add
fwait
shrb
cli
add
cld
insb
add
std
mov
call
popf
add
add
faddl
add
lods
add
pop
insb
add
add
rorl
add
je
test
add
data16
add
add
aam
jl
clc
push
add
pop
push
push
push
push
call
rolb
pop
jo
add
add
push
popa
pop
pusha
add
add
add
add
add
add
push
jl
hlt
add
add
add
add
stos
mov
pop
fs
jb
xchg
add
xlat
mov
loopne
test
pop
call
jmp
push
dec
dec
dec
pop
cmpl
je
push
push
push
lea
push
lea
push
call
ror
add
jecxz
popl
add
clc
add
ret
jecxz
mov
imul
hlt
out
ret
mov
cmp
jmp
add
add
pop
mov
arpl
add
add
add
xchg
clc
add
jno
add
jns
cli
in
scas
shrl
mov
lea
pop
cmpl
jne
leave
push
sub
xor
lea
pop
add
pop
push
add
pop
pop
pop
push
ror
dec
pop
pop
leave
push
push
push
lea
push
push
push
call
add
data16
add
pop
mov
mov
mov
add
add
cmpsb
jge
test
add
hlt
add
add
push
pop
hlt
fisubrl
add
test
sbb
les
rol
rol
pop
ret
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
loope
scas
pop
fbld
out
rorb
add
shlb
pop
divb
add
pushf
arpl
mov
jns
add
out
cmc
add
xchg
rolb
out
add
add
add
push
jmp
shrb
fidivrl
fwait
add
mov
fisttpl
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
scas
test
add
add
adcl
add
add
add
add
aam
test
stc
add
jmpw
cmpl
xchg
xchg
mov
add
int3
add
mov
lea
pop
cmpl
jne
push
push
not
lea
add
ror
push
sub
add
shl
sub
ror
add
inc
pop
lea
shl
inc
pop
push
push
call
add
add
test
add
add
add
add
lahf
mov
add
pop
add
iret
les
add
xchg
add
roll
insb
jmp
xorl
mov
push
add
lea
pop
pushl
call
push
not
add
pop
push
push
push
lea
push
call
add
add
std
ret
addl
xchg
add
testb
xchg
add
in
add
jge
add
mov
ljmp
add
add
sti
ror
push
push
push
popl
add
fmull
rclb
lea
push
push
push
push
push
push
call
add
mov
into
push
stos
out
out
out
add
int3
jns
jge
rol
pop
lcall
jecxz
call
roll
test
add
xchg
fsub
cltd
pushf
cli
insb
add
add
pop
add
test
insb
pop
les
call
mov
lea
pop
jmp
push
inc
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
call
into
add
sahf
popa
add
loope
cld
cmpsb
add
or
testb
add
call
push
add
out
mov
mov
loope
push
add
testl
mov
add
scas
mov
lea
pop
mov
push
ror
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
call
add
ret
lcall
jnp
loopne
add
pop
add
pushf
add
stos
add
test
add
add
jmp
add
add
add
add
add
out
aam
bound
pop
push
push
push
ror
push
xor
add
inc
shl
sub
add
sub
pop
inc
xor
pop
push
add
pop
pushl
call
push
push
dec
push
sub
add
xor
sub
inc
pop
add
pop
push
push
push
call
push
push
scas
mov
jno
add
loop
scas
outsl
jmp
addl
je
cli
pop
mov
add
fisubrl
add
push
add
mov
mov
aad
in
add
push
add
add
add
fs
mov
int3
mov
rcl
add
jbe
repnz
add
test
fadd
imul
lea
pop
pushl
push
ror
pop
call
push
lea
pop
call
push
push
not
not
push
xor
add
add
sub
pop
xor
lea
xor
sub
pop
push
push
call
nop
imul
mov
rcr
mov
add
popf
add
mov
mov
test
jmp
mov
lds
jmp
scas
shlb
add
jle
mov
add
push
xchg
je
pop
addl
add
xchg
jecxz
in
lea
std
add
cld
lea
pop
pushl
call
push
push
lea
push
lea
push
push
lea
push
push
call
icebp
add
jmp
popl
jmp
add
jae
add
roll
add
testb
fistps
mov
popl
nop
loop
fstl
sahf
add
addb
cmc
pop
shrl
add
mov
mov
pop
call
push
push
lea
add
rol
push
push
pop
add
dec
sub
sub
dec
pop
lea
sub
add
pop
push
push
push
push
push
lea
push
push
call
js
orb
in
xchg
add
add
clc
add
add
add
movl
add
shlb
xchg
xchg
in
loopne
jnp
add
add
fwait
add
fmull
jne
push
add
pop
call
push
lea
push
push
push
push
call
jnp
add
fiadds
imul
add
rolb
mov
add
lea
imul
add
into
mov
xchg
add
mov
popa
add
movsb
imul
mov
add
add
push
add
jns
add
stos
mov
jae
add
out
test
int3
lea
pop
call
push
push
shr
push
sub
add
rol
not
xor
sub
sub
dec
dec
pop
sub
rol
lea
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
lds
arpl
add
add
enter
jbe
add
mov
addb
add
addl
mov
add
add
add
out
into
jne
in
mov
add
lds
xchg
stos
lds
pop
pushl
push
push
push
push
push
push
call
mov
movsl
mov
cmc
shl
add
ja
add
loope
jns
xchg
mov
loope
test
add
fiaddl
add
cli
push
stos
add
in
push
in
hlt
add
pop
xchg
add
imul
call
call
push
push
lea
add
push
sub
add
shr
shr
ror
sub
shl
pop
lea
shl
dec
pop
push
sub
pop
pushl
call
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
ja
std
push
mov
xchg
add
xchg
repnz
pop
add
add
add
std
lret
mov
xor
cmpsl
pop
test
loopne
add
add
popl
xchg
add
and
call
push
push
sub
not
push
push
pop
add
inc
sub
inc
add
add
pop
xor
pop
push
add
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
call
data16
insb
xchg
mov
mov
imul
jmp
xlat
cmpsl
sar
pop
add
pop
lds
je
call
add
popf
add
add
add
add
addr16
js
add
in
pop
push
filds
add
icebp
jnp
mov
lea
pop
call
push
add
shl
add
shr
pop
call
push
inc
add
inc
pop
call
push
push
call
sahf
add
test
mov
enter
pop
ret
out
add
fstpl
mov
add
add
imul
cld
mov
test
jb
scas
jo
push
add
add
add
add
jns
add
jae
add
movsb
add
add
lea
pop
lea
push
push
sub
sub
inc
push
sub
add
add
sub
shr
xor
pop
shl
pop
push
add
pop
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
movsl
testb
add
jmp
int
adc
jo
add
add
add
push
fnsave
sbbb
stos
add
incb
cmc
fistpl
add
movsl
lret
add
fiaddl
fisubl
jb
xchg
adc
cli
add
jge
add
scas
add
test
lea
pop
call
push
push
lea
push
push
lea
push
call
add
jp
add
add
add
xchg
pop
xchg
add
add
jb
int
bound
add
add
jge
add
addl
jbe
mov
nop
pop
push
in
add
lcall
xchg
add
add
jle
add
add
add
imul
les
push
lea
ror
add
pop
call
push
push
xor
push
or
not
add
sub
ror
sub
sub
pop
sub
pop
push
lea
push
lea
push
push
push
call
popf
mov
add
mov
popf
add
pop
sbbb
js
les
add
les
mov
xlat
cltd
mov
lds
xchg
mov
xchg
add
add
mov
aam
mov
add
je
icebp
add
icebp
lds
push
movsl
pop
mov
andb
add
jno
ja
insb
add
add
xchg
addr16
lea
pop
pushl
call
push
add
rol
pop
call
push
push
lea
push
push
push
push
push
push
call
roll
push
push
movsb
pop
jge
out
lods
push
out
add
stc
xchg
jno
xchg
xchg
add
out
sub
fdiv
jb
add
add
sahf
add
add
add
add
cmpsb
add
outsl
hlt
adcb
aad
test
out
add
mov
sar
into
pop
add
mov
les
inc
cld
push
push
sub
inc
push
or
not
add
rol
sub
add
sub
rol
ror
pop
not
lea
shl
pop
push
sub
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
in
add
add
jae
pop
mov
mov
std
mov
in
add
add
add
jge
pop
add
pop
test
mov
mov
add
cmpsb
fwait
stos
movb
iret
aam
xchg
lahf
xchg
mov
pop
pushf
add
pop
add
aam
add
pop
add
lret
push
jle
in
pop
add
add
std
rolb
pop
neg
add
pop
cltd
mov
lea
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
push
call
arpl
add
add
mov
jecxz
xchg
pop
push
mov
repnz
in
add
test
add
add
gs
lods
add
ljmp
xlat
xlat
scas
add
cmc
in
mov
add
add
clc
fsubrp
push
add
cmpsl
pop
add
push
add
pop
push
push
not
inc
shl
pop
pushl
call
push
push
inc
add
sub
push
push
pop
add
shl
shr
sub
sub
ror
lea
pop
not
shr
sub
shl
pop
push
push
push
call
sahf
add
add
js
push
insb
cli
jmp
add
add
mov
xchg
xchg
add
jecxz
add
movsb
lret
add
add
gs
rcr
add
add
add
add
cld
mov
lea
pop
pushl
push
ror
shr
sub
pop
call
push
push
dec
push
and
add
sub
add
sub
shr
pop
rol
dec
pop
push
push
dec
dec
push
and
add
inc
sub
shr
pop
sub
shl
pop
push
ror
xor
rol
dec
pop
call
push
push
dec
ror
shl
not
push
sub
add
dec
dec
sub
sub
lea
dec
lea
pop
not
add
pop
push
push
lea
push
lea
push
push
push
push
call
bound
add
add
add
add
add
mov
add
add
jecxz
add
add
je
add
fistpll
add
push
loopne
add
push
pop
add
add
sti
in
pop
loopne
add
cld
lds
ret
add
test
jne
les
je
add
int3
jo
jno
mov
add
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
int3
in
addr16
add
lret
adcb
jbe
cmc
add
add
fstpl
jle
test
leave
add
mov
out
in
jae
cmc
add
add
jne
data16
mov
sub
inc
hlt
lea
push
push
push
lea
push
call
push
hlt
mov
xchg
pop
mov
pop
cwtl
icebp
xchg
add
stc
mov
mov
pop
in
jb
stos
leave
pop
ljmp
add
mov
pop
add
mov
add
add
je
jp
test
mov
mov
lea
pop
lea
push
push
call
add
lods
add
add
add
mov
in
cltd
add
add
pop
jbe
add
hlt
pop
fildl
add
xchg
cmc
add
add
out
add
stc
add
cld
lea
pop
push
push
push
lea
push
push
push
push
call
add
cmp
add
add
add
add
add
add
add
add
add
add
mov
mov
mov
add
fcmove
add
fs
add
loop
filds
add
mov
mov
lock
pop
in
into
stos
add
add
add
orl
push
call
jne
jecxz
add
push
xchg
mov
mov
add
add
lea
add
add
add
add
add
into
filds
add
imul
lret
xchg
jnp
add
add
add
add
scas
jo
add
add
add
fwait
fs
mov
cmpsl
imul
mov
pushf
aam
mov
aam
bound
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
std
add
mov
icebp
add
add
std
arpl
add
fs
stos
mov
xchg
jmp
add
pop
add
lret
add
add
shr
add
mov
jno
push
mov
lea
pop
push
push
lea
push
call
nop
sarl
mov
addl
fdivp
fwait
add
in
arpl
leave
scas
in
fildl
pop
add
enter
add
data16
push
fwait
add
roll
mov
jp
jb
loope
xchg
jae
popa
repnz
add
add
sti
loopne
fmull
add
push
lock
push
call
fstpl
add
add
jo
add
add
loop
test
jecxz
hlt
add
push
in
int3
js
testb
add
add
lret
outsl
fildl
add
add
jp
lahf
fiaddl
hlt
add
xchg
mov
shr
add
xchg
movl
leave
movsl
stc
add
ret
repnz
add
insb
popf
add
add
xchg
mov
lea
pop
push
push
shr
add
lea
pop
push
push
push
push
lea
push
push
call
call
shll
add
add
jl
hlt
scas
add
add
addb
mov
addb
add
add
pop
add
lea
push
pop
mov
xchg
lahf
data16
std
sub
test
lret
add
pop
pushl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
iret
add
add
stc
in
lea
fiaddl
mov
loop
mov
pop
pop
mul
xchg
add
add
rol
xchg
add
pop
test
ficomps
add
frstor
jmp
add
add
add
aad
mov
mov
mov
add
sahf
add
mov
mov
pusha
sub
add
lea
push
push
lea
push
call
addb
data16
xchg
add
stos
mov
add
add
push
add
add
pop
add
push
jns
xchg
fsub
call
mov
out
add
jns
mov
mov
pop
add
scas
add
mov
add
icebp
xchg
data16
lret
add
cld
add
mov
cwtl
mov
popa
mov
lea
pop
call
push
push
not
push
push
pop
add
sub
sub
add
pop
dec
pop
push
rol
add
pop
pushl
push
ror
pop
call
call
push
xor
pop
mov
push
push
push
push
push
call
xchg
nop
js
push
add
pop
pop
pop
out
mov
add
imul
jecxz
add
loope
nop
test
movsb
fbld
out
jmp
enter
test
out
add
mov
stos
add
add
push
mov
add
outsl
xchg
add
mov
mov
lea
pop
pop
push
xor
not
pop
dec
jne
push
inc
pop
jmp
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
out
aam
push
test
add
sahf
rolb
mov
jp
out
arpl
scas
mov
add
add
pushf
xchg
les
int3
mov
add
add
pop
cmpsl
negl
jae
add
mov
jo
leave
add
add
cwtl
add
add
add
lea
pop
call
push
push
ror
push
xor
add
lea
sub
lea
sub
lea
pop
inc
pop
push
ror
lea
inc
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
push
call
add
push
ficoms
mov
cmpsb
add
push
jb
out
add
jle
jge
add
mul
fstl
ja
add
movsb
add
xchg
add
test
add
shr
out
xchg
pop
add
lea
bound
call
push
dec
not
pop
push
push
inc
not
pop
call
mov
push
sub
inc
pop
lea
push
push
lea
push
and
add
shr
sub
dec
add
dec
pop
pop
push
push
push
push
call
mov
cli
add
add
add
add
fstps
fiadds
add
mov
ret
cmp
popf
add
add
mov
add
popa
popf
add
add
lahf
jns
iret
jnp
addb
pop
cld
test
add
adc
jne
push
push
call
mov
add
add
in
add
in
add
mov
pop
mov
add
add
movsl
leave
add
cli
pop
mov
jb
fistpll
bound
add
fiadds
add
add
cli
fistl
mov
popa
or
insl
sbb
inc
sub
pop
push
push
rol
sub
pop
call
push
push
sub
push
sub
add
sub
rol
lea
xor
pop
ror
ror
shl
pop
push
not
dec
pop
pushl
push
push
push
call
cli
cmc
rolb
loop
add
add
mov
ja
add
add
add
test
mov
in
shr
add
test
lret
add
arpl
add
add
out
scas
xchg
in
enter
fidivrs
sti
add
add
mov
lea
pop
call
push
rol
shr
pop
call
mov
push
push
push
push
push
push
lea
push
push
push
push
call
call
into
xchg
rolb
add
jmp
mov
xlat
lods
mov
jb
cmpsl
xchg
add
movsb
mov
cmpsb
add
add
add
insb
aam
xchg
add
push
int
add
add
out
fists
pop
add
add
mov
std
pop
stc
xchg
mov
xorb
lahf
add
lods
mov
loopne
add
pop
lea
push
push
inc
add
push
sub
add
not
shr
sub
inc
pop
sub
lea
lea
pop
push
add
shr
pop
pushl
push
push
push
lea
push
push
lea
push
call
hlt
roll
clc
cwtl
xchg
shl
add
rcl
add
add
popf
neg
jns
ret
ficoml
add
mov
add
add
aad
jl
add
lret
leave
jo
add
imul
test
add
in
push
xchg
add
add
add
stos
jl
xchg
add
les
arpl
add
push
lea
push
call
mov
lods
mov
xchg
cltd
movsl
lret
add
lahf
add
addr16
mov
cmpsl
add
jp
test
pop
add
lret
fnstcw
add
add
add
add
clc
mov
pusha
int
push
mov
xchg
add
lea
pop
lea
push
add
pop
push
push
lea
push
push
push
call
xlat
movsb
add
add
add
mov
add
add
nop
stos
cmpsb
add
addl
jae
add
mov
jae
jb
add
add
cmpsb
add
add
add
add
push
mov
add
add
flds
mov
into
push
repnz
add
adc
add
push
pushl
push
push
push
or
inc
add
ror
add
add
sub
dec
add
shr
rol
pop
sub
rol
xor
shl
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
xchg
lods
add
gs
add
add
and
add
out
cld
loopne
xchg
add
je
mov
test
add
add
cmpsb
add
les
add
jo
mov
scas
addl
fmul
add
insb
add
add
pop
mov
lea
pop
push
call
push
push
add
push
or
not
add
sub
add
not
sub
rol
lea
pop
pop
push
inc
pop
pushl
push
push
lea
push
push
push
push
call
mov
pop
fstpt
loopne
popa
add
insb
add
xacquire
jl
add
pop
add
add
add
icebp
add
add
cld
add
fs
mov
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
xchg
addb
add
add
in
lods
bound
in
add
fldt
jnp
add
out
imul
add
imul
hlt
add
add
mov
je
push
jmp
mov
stos
add
add
fmuls
pop
push
call
push
push
not
sub
sub
shr
push
sub
add
add
sub
shr
add
ror
pop
shl
ror
lea
pop
push
ror
shl
pop
pushl
push
push
push
push
push
lea
push
push
call
add
adcl
add
add
addb
negl
mov
add
add
add
fwait
iret
pop
xlat
clc
jnp
jb
add
jno
lock
popf
add
mov
xlat
lds
int
mov
lea
pop
call
push
sub
xor
add
pop
call
push
push
call
add
xchg
mov
add
add
fiadds
add
mov
add
insb
add
loop
in
movsl
add
add
add
add
add
roll
add
mov
push
lret
mov
add
add
aad
cld
lea
pop
jmp
push
ror
not
pop
pushl
mov
push
push
call
add
add
test
mov
cmpsl
add
int3
in
jae
stc
int
add
xchg
add
add
mov
add
add
mov
mov
add
mov
int
outsl
xchg
hlt
add
add
shrl
add
pop
jmp
push
push
rol
shr
lea
push
sub
add
add
shr
xor
sub
dec
pop
dec
inc
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
nop
mov
add
pop
add
aam
add
mov
loopne
stc
add
mov
lods
xchg
add
add
add
mov
rolb
add
imul
push
push
push
push
call
aam
lret
mov
add
mov
add
jb
add
add
xchg
xchg
xchg
add
cmpsl
addr16
rolb
jp
add
push
mov
add
add
xchg
lcall
int3
add
repnz
aam
bound
pop
call
push
push
call
mov
mov
add
test
add
add
xchg
mov
sahf
add
add
mov
bound
fstpl
add
cld
add
add
push
movsl
cltd
add
cli
mov
push
jne
ficompl
aam
bound
pop
push
call
push
push
sub
push
push
pop
add
lea
rol
sub
sub
add
rol
xor
shl
pop
sub
sub
pop
push
lea
push
push
push
push
lea
push
call
add
ja
add
call
or
xchg
loope
lcall
rcr
xchg
push
jns
add
add
lds
pushf
fildl
add
test
mov
lea
pop
pushl
push
pop
call
push
push
push
push
push
push
call
add
jl
add
cld
imul
fldl
bound
stos
mov
add
xchg
add
in
add
aam
add
add
out
add
fsubrs
lea
pop
call
push
push
push
push
push
push
push
push
call
push
fldl
fwait
testb
stos
mov
jno
add
xchg
jle
mov
je
out
lahf
xchg
add
push
hlt
push
add
xchg
add
pop
in
pop
mov
aad
out
subb
add
lea
pop
leave
push
push
push
push
push
push
push
push
push
call
iret
je
ret
fdivl
add
add
mulb
xchg
xlat
scas
add
mov
add
xchg
add
into
pop
pusha
arpl
mov
out
xchg
cwtl
push
js
add
roll
lret
xchg
cmpsl
add
leave
imul
pop
add
pop
push
inc
shl
pop
pop
pop
push
sub
not
pop
pop
push
lea
push
call
addb
push
add
add
aam
pop
add
mov
insb
stos
add
add
mov
jl
add
cld
movsl
out
lock
cmp
add
out
mov
movl
lret
mov
imul
add
push
jo
xchg
xchg
add
add
add
add
pop
mov
xchg
add
mov
lea
pop
leave
push
push
push
lea
push
lea
push
push
push
call
hlt
into
jns
jnp
add
out
popf
jb
insb
out
add
movl
lds
ret
scas
add
add
pop
add
in
nop
add
add
add
add
add
imul
add
pushf
add
loope
add
add
jno
add
add
lea
pop
add
ret
push
sub
not
sub
pop
leave
push
push
push
push
call
aad
test
add
mov
stos
les
fs
lods
gs
sar
add
cwtl
fwait
movsb
int3
pop
mov
scas
std
add
add
add
lahf
jge
mov
aad
in
js
pop
in
add
out
add
add
add
shrb
cwtl
pop
add
jno
mov
lea
pop
ret
push
lea
push
push
push
push
push
call
push
add
add
jecxz
imul
xchg
push
add
loop
lods
add
ljmp
add
repnz
mov
fwait
add
add
mov
stos
add
jbe
iret
int3
lock
pop
mov
xchg
clc
jge
insb
stos
lret
push
add
mov
add
test
mov
add
add
mov
lea
pop
push
push
sub
shl
ror
pop
mov
push
push
push
push
push
push
call
pop
add
lret
mov
add
add
jnp
xchg
add
popf
add
add
add
imul
popl
add
in
add
add
jle
test
xchg
pop
cmpl
jne
push
not
dec
sub
pop
mov
push
lea
push
push
call
cltd
add
pop
mov
mov
xchg
mov
add
popl
cwtl
push
clc
add
push
add
add
arpl
add
add
call
xchg
add
aad
fmull
bound
add
push
lea
push
push
push
call
xchg
add
int3
imul
mov
test
popf
cli
lods
add
in
add
add
mov
in
cwtl
mov
add
jp
add
add
jnp
add
add
aad
fmull
inc
or
loopne
push
shr
xor
inc
pop
xor
push
shr
shl
shl
pop
xor
push
inc
sub
pop
add
push
sub
pop
xor
push
not
shl
pop
dec
push
lea
push
push
push
call
add
pop
std
jbe
pop
add
xchg
add
add
arpl
mov
add
mov
xchg
mov
add
mov
cmpsb
push
lahf
popf
add
mov
add
out
add
mov
mov
add
int
add
cmpsl
mov
lea
pop
sub
push
add
shl
add
pop
jmp
push
push
push
push
call
add
add
jb
addl
jnp
lea
fstps
pop
add
add
add
add
cwtl
mov
add
cmc
icebp
aad
add
scas
cmpsb
icebp
push
add
cmc
xchg
add
push
ljmp
icebp
xchg
add
add
movl
arpl
pop
sub
pushl
push
ror
rol
pop
pop
sub
push
shl
pop
cmp
jne
mov
push
push
push
push
lea
push
call
add
insb
add
add
fmul
in
push
pushf
xchg
popf
mov
in
xchg
cmc
pop
add
test
je
roll
add
imul
xchg
add
rcrl
push
add
add
add
jp
jl
jbe
mov
lea
pop
lea
sub
push
shr
shl
pop
mov
push
push
push
call
mov
cmc
jl
pop
jb
add
add
sahf
mov
add
vpunpckhbw
jbe
add
xorl
xchg
cld
arpl
ljmp
rolb
mov
add
or
shr
push
shl
not
pop
add
sub
push
push
push
push
push
push
push
push
call
add
add
mov
pop
scas
hlt
xchg
add
add
jle
xchg
jl
outsl
add
add
add
xchg
cmc
stos
fildl
out
outsl
add
add
add
imul
add
filds
icebp
pop
add
xchg
add
stos
mov
add
add
add
data16
jnp
and
jle
int3
lea
pop
pushl
pop
push
lea
push
lea
push
push
call
add
flds
add
mov
pop
add
push
cltd
xchg
add
jno
popf
add
add
imul
add
lods
add
add
lahf
mov
lcall
lcall
hlt
lea
pop
shr
push
push
push
push
push
lea
push
call
xchg
add
fldpi
aad
subb
jp
xlat
popa
jle
fimuls
leave
add
push
enter
xchg
addr16
mov
mov
jne
movsl
add
mov
push
fs
add
pop
mov
lea
pop
and
push
push
push
push
push
push
push
push
push
call
add
icebp
add
add
je
add
into
mov
filds
faddl
add
enter
add
add
mov
lods
add
lds
int3
add
add
scas
sti
mov
xchg
push
add
add
push
bound
cmpsb
pop
add
add
out
add
add
in
addb
rolb
add
int3
lea
pop
sub
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
jbe
sti
arpl
clc
fsub
js
roll
add
add
xlat
add
jp
add
call
pop
mov
mov
lods
call
popa
sub
stc
sbb
test
shr
not
pop
leave
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
add
test
add
push
push
rcll
xchg
test
testb
add
add
adcl
in
cli
jb
pop
cli
insb
xlat
data16
jle
mov
mov
and
add
push
sub
pop
push
push
lea
push
call
push
rolb
cmpsl
add
add
add
aad
test
bound
add
out
add
scas
mov
add
add
fildl
iret
fsubr
add
mov
jmp
add
add
add
add
add
imul
iret
add
add
mov
lea
pop
mov
push
rol
pop
add
push
push
push
lea
push
lea
push
lea
push
call
add
les
jl
fcom
jp
add
add
leave
out
add
rolb
test
mov
outsl
jb
mov
add
pop
fildl
data16
add
pusha
add
pusha
out
add
incb
add
lret
add
pushf
pop
push
jnp
add
scas
pop
mov
lea
pop
push
push
push
call
pop
ja
in
popa
icebp
cmpsl
mov
ja
add
loope
fistl
test
xchg
stc
mov
mov
add
jns
add
add
add
add
into
cli
leave
add
in
fiaddl
add
mul
xchg
add
fs
je
mov
xchg
add
add
push
mov
lea
pop
push
push
push
push
push
lea
push
push
call
pusha
pusha
mov
add
call
push
mov
data16
sti
aad
outsl
add
shlb
imul
test
add
pop
iret
sti
insb
in
pop
push
clc
call
fdivrs
scas
mov
add
jo
add
std
add
cmpsl
lods
add
jmp
sub
xchg
gs
push
add
mov
sti
fwait
in
add
add
sbb
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
add
outsl
add
add
push
jno
arpl
mov
add
cltd
imul
clc
lods
leave
jp
int
imul
cmpsl
xchg
loope
loopne
mov
add
add
pop
push
iret
jle
add
add
stc
pop
mov
push
int3
test
add
pop
jnp
int3
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
stos
add
cltd
hlt
jmp
add
add
add
iret
add
mov
jmp
jbe
icebp
push
ret
pusha
add
test
push
pop
into
jge
add
xchg
add
sbb
mov
push
lea
xor
pop
lea
push
shl
pop
sub
push
lea
push
push
push
call
aam
cltd
call
add
movl
add
add
in
add
out
cli
loopne
iret
andl
xchg
add
add
add
sbb
lcall
lcall
mov
lea
pop
mov
push
sub
add
pop
shr
add
push
sub
xor
pop
mov
push
lea
push
push
call
aam
push
push
push
jnp
push
scas
add
notl
pop
add
pop
xchg
add
test
add
add
jns
lret
mov
xchg
add
add
mov
fiadds
sti
add
add
mov
fs
xchg
xchg
std
jbe
add
mov
pop
add
push
inc
pop
mov
add
push
lea
push
lea
push
call
push
jae
add
add
filds
add
ljmp
add
add
mov
add
add
mov
enter
addl
mov
addl
jb
add
add
push
add
fnop
add
fmull
notb
repz
add
pop
mov
push
lea
push
push
lea
push
lea
push
push
push
push
call
push
push
push
popf
movsl
add
aad
shlb
lcall
add
add
jns
in
enter
add
add
push
add
pop
and
push
xor
add
pop
rol
push
push
push
lea
push
push
push
push
push
call
icebp
enter
je
lret
add
add
mov
add
popa
int
lret
cmpsl
mov
add
jno
lock
enter
data16
xchg
mov
in
lahf
jb
lcall
into
add
add
add
jns
into
je
int3
mov
jne
add
jge
add
push
add
arpl
rolb
add
add
add
arpl
fmull
rolb
add
push
lea
push
push
call
mov
add
add
add
lods
stos
in
aad
add
mov
push
pusha
in
add
loop
mov
lds
pushf
subl
add
sti
repnz
add
bound
add
mov
fildl
add
mov
ficomps
popa
imul
insb
mov
stc
jb
mov
xchg
add
les
push
push
call
scas
add
push
add
nop
addb
add
jnp
repnz
add
cld
mov
call
in
leave
mov
add
pop
clc
popa
sti
add
in
add
pop
add
pop
jl
mov
add
add
sti
add
cltd
mov
push
push
mov
add
faddl
add
jae
jmp
mov
add
add
pop
cmpb
jne
push
push
call
add
xchg
add
loope
add
mov
pop
test
insb
add
add
rol
add
add
out
xchg
add
push
xchg
lods
lods
add
jno
add
add
aad
nop
mov
lea
pop
add
push
xor
shr
pop
cmp
je
push
push
push
push
push
push
lea
push
call
xchg
jl
mov
add
xchg
lock
add
add
xchg
jb
lea
add
add
add
add
add
add
add
push
add
ja
in
pop
add
add
add
mov
add
add
aam
add
loope
add
add
ljmp
lea
pop
add
cmpl
jne
push
sub
xor
dec
pop
xor
pop
push
inc
inc
inc
pop
pop
pop
push
lea
inc
pop
pop
pop
push
shr
xor
pop
leave
push
push
push
push
call
add
addl
add
stos
push
cld
loopne
mov
outsl
jb
add
add
add
rcr
add
stos
add
add
add
add
add
ret
aad
enter
pop
ljmp
divl
aad
push
fcmovne
push
loope
xchg
xchg
mov
lea
pop
ret
push
push
lea
push
push
lea
push
push
push
call
rcl
add
cld
pop
addb
jl
add
add
sahf
add
nop
add
mov
test
out
sahf
mov
add
add
movsb
mov
pop
jno
add
mov
add
lahf
add
lea
pop
mov
add
push
shr
shl
shr
shl
pop
push
push
push
push
push
lea
push
call
add
loop
add
mov
mov
add
push
leave
ret
add
data16
jecxz
add
mov
add
test
add
add
mov
aad
add
lahf
int3
popa
add
add
call
out
add
push
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
in
hlt
fwait
add
xchg
add
xchg
add
pop
add
add
fiadds
lds
imul
lret
xchg
xchg
enter
jae
les
ret
shr
rol
pop
mov
cmpw
push
ror
pop
pop
push
sub
sub
pop
pop
mov
push
not
inc
pop
push
push
shr
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
lods
add
add
mov
mov
add
aad
scas
cltd
icebp
icebp
pop
add
addb
hlt
pop
xchg
add
popf
xchg
add
pop
add
in
add
add
mov
fcmovnu
add
add
pop
mov
aam
bound
pop
xor
pop
push
push
push
lea
push
push
push
push
call
clc
test
add
out
aad
mov
push
add
pusha
movsb
add
add
add
xchg
add
xlat
mov
call
add
add
sbb
lret
pop
in
add
std
iret
mov
add
out
add
add
add
xchg
xchg
add
add
in
mov
push
add
sbb
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
xchg
aam
jb
xchg
add
repnz
test
jge
add
add
testl
popa
add
add
lds
add
jge
xchg
jp
add
stos
pusha
mov
lahf
rcr
movsl
mov
clc
jne
lods
data16
cwtl
add
xchg
mov
bound
out
push
lea
add
ror
les
push
inc
dec
pop
pop
push
shr
pop
leave
ret
push
push
lea
push
lea
push
lea
push
push
lea
push
call
iret
jae
add
add
cld
lahf
add
add
repnz
add
jp
add
subl
pop
fwait
add
add
xchg
push
out
loope
icebp
lds
popa
popa
hlt
stc
add
pushf
add
movsb
cwtl
add
cmc
cmc
add
add
test
fmull
mov
push
push
push
push
call
fs
add
mov
imull
add
add
jmp
add
add
add
add
add
push
std
addb
inc
jns
xchg
add
add
add
add
shll
fists
add
lea
pop
add
push
sub
pop
push
push
push
push
push
push
lea
push
call
mov
add
imulb
and
add
add
data16
aam
add
mov
mov
stc
add
add
fld
xlat
add
adc
push
push
push
sub
pop
mov
push
push
lea
shl
ror
pop
pop
push
shl
shl
rol
pop
lea
push
add
pop
sub
mov
push
push
push
push
lea
push
push
push
push
call
push
add
jecxz
mov
push
add
add
xchg
mov
add
add
add
scas
imul
mov
add
loope
lret
loop
stc
add
mov
sahf
add
add
add
mov
mov
test
lea
pop
shr
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jne
mov
movsb
xchg
xchg
in
xlat
jae
pushf
fdivrl
add
ret
lods
mov
add
cmc
ljmp
push
add
cmpsb
fsubrp
les
add
jge
lock
lea
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
lds
roll
out
xchg
add
push
movsl
test
roll
jmp
mov
add
into
nop
arpl
add
add
mov
test
fdivrp
add
add
mov
lea
pop
add
push
sub
xor
pop
pushl
popl
push
pop
mov
add
push
push
push
lea
push
push
push
push
push
push
call
mov
in
add
add
into
lret
out
add
add
arpl
aad
add
add
addl
add
add
push
xchg
add
mov
mov
pop
pop
pop
add
mov
lea
pop
xor
lea
push
push
lea
push
push
push
push
push
call
push
mov
add
mov
add
int3
add
fs
nop
icebp
not
add
add
pusha
jo
add
jge
add
in
mov
push
call
push
test
repnz
add
je
mov
add
sti
out
fmull
adc
hlt
pop
add
push
push
push
push
lea
push
push
push
push
push
call
int
add
pop
std
add
bound
add
cltd
lahf
subl
add
mov
mov
add
mov
test
mov
add
int
mov
mov
shlb
xchg
jae
imul
les
data16
xor
push
push
push
push
push
lea
push
push
call
add
pop
add
test
add
bound
mov
fiadds
popa
xchg
jno
add
movsb
sti
jae
sbbb
xchg
jp
mov
add
pop
shlb
fcmovu
pop
pop
xchg
jno
mov
lea
pop
rol
nop
push
ror
sub
inc
pop
nop
push
lea
not
inc
shl
pop
xor
push
add
dec
pop
nop
push
shl
sub
shl
shr
pop
nop
push
sub
pop
inc
push
push
lea
push
lea
push
push
push
call
mov
arpl
filds
loopne
sti
add
add
mov
push
add
into
lea
mov
jl
add
mov
lret
js
jmp
mov
add
mov
add
repnz
fdivs
add
add
rolb
fldl
out
add
cli
add
test
add
push
lock
test
mov
add
pop
nop
nop
push
sub
rol
pop
cmpb
jne
push
push
lea
push
push
call
add
rcr
shr
add
loope
mov
ljmp
jmp
add
fwait
add
faddp
add
add
xchg
in
lds
mov
clc
mov
add
add
test
gs
mov
xchg
mov
add
out
mov
bound
pop
add
push
add
inc
pop
nop
nop
push
push
lea
push
lea
push
push
push
push
push
call
push
xchg
pusha
add
lcall
mov
incb
add
add
jge
js
jbe
mov
lea
imul
lret
out
imul
jle
add
add
movsb
mov
lea
pop
cmp
je
nop
push
sub
pop
nop
inc
push
push
lea
push
push
push
push
push
push
call
mov
add
add
jbe
pop
insb
int
add
pop
add
mov
movsl
mov
add
cltd
out
push
js
rolb
add
scas
out
lcall
mov
cmpsb
jae
add
add
add
loop
jns
in
mov
lea
pop
nop
nop
push
sub
ror
shr
shl
pop
cmp
jb
xor
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
arpl
incb
add
add
fdiv
popa
stc
fldl
add
addl
add
aad
out
add
xchg
push
add
int
imull
add
add
add
fistpll
xchg
add
add
hlt
lea
pop
jmp
mov
push
push
push
push
push
lea
push
push
call
scas
mov
and
fsubrl
add
lods
jge
mov
add
mov
add
xchg
add
add
stc
add
add
mov
hlt
rcl
xchg
add
add
add
cld
mov
lds
xchg
fcoml
jp
into
mov
add
lds
add
pop
add
push
lea
push
lea
push
lea
push
call
stos
out
add
lret
add
hlt
add
or
add
add
mov
add
add
popf
add
add
flds
mov
fiaddl
add
add
push
movsl
add
push
xchg
add
add
std
add
xchg
out
add
add
icebp
add
mov
lea
pop
movzwl
push
push
push
push
push
call
xlat
pop
add
pop
mov
mov
add
div
into
add
notb
cmpsl
enter
jno
add
rcr
add
add
xchg
cmpsl
add
lock
jp
add
addb
lds
add
pushf
add
mov
nop
pop
ret
pop
lds
add
popa
adc
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
test
jecxz
push
add
add
add
cwtl
divl
add
jns
jecxz
push
add
mov
add
add
pop
xchg
popa
pop
insb
add
movb
add
add
add
pop
add
push
ror
xor
shl
pop
mov
push
pop
xor
push
push
push
lea
push
push
lea
push
call
hlt
add
ljmp
add
lahf
insb
ret
add
mov
shrl
mov
add
addb
add
ret
stos
add
stc
add
xchg
add
addl
stos
js
push
fisttpll
add
fdivrp
sarb
scas
rcr
add
jbe
xchg
add
mov
add
xchg
cld
lods
add
bound
pop
xor
push
inc
pop
shl
push
shr
pop
xor
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
add
test
mov
fyl2xp1
movsl
hlt
sarb
imul
cmc
mov
xchg
add
add
pop
add
add
lret
xchg
add
lahf
icebp
ja
lock
scas
push
add
in
xchg
add
add
add
add
repnz
add
add
nop
add
add
mov
pop
mov
int3
lea
pop
shl
xor
push
push
push
push
push
lea
push
lea
push
call
lret
pop
pop
add
lret
add
add
push
test
cmpsl
std
mov
mov
je
fcomps
mov
rcr
add
testl
test
xchg
orb
shl
xor
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
mull
add
add
out
add
imul
add
jo
add
push
add
add
testl
stos
mov
nop
mov
into
add
add
add
cli
jnp
fdiv
ret
gs
jle
outsl
pop
push
add
mov
int3
js
xlat
add
push
push
push
ficoml
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
call
stc
cmpsb
add
add
jecxz
add
jno
rcll
add
add
sahf
add
in
mov
scas
add
in
ret
cmc
add
mov
jle
add
out
int3
add
jns
add
xchg
mov
add
pusha
add
scas
add
add
jo
cwtl
add
mov
lea
pop
add
push
push
push
push
lea
push
push
call
jge
add
add
push
in
add
mov
jae
add
test
add
stos
mov
sub
jnp
add
xchg
add
add
jecxz
loope
add
add
add
push
int
neg
add
add
roll
jns
add
gs
mov
data16
pop
push
push
lea
push
push
push
push
push
push
push
call
arpl
fadds
push
jne
add
cmpsb
lret
aam
add
fstpt
pop
add
add
add
bound
xchg
les
add
push
add
mov
add
into
pop
xchg
add
pop
pop
push
push
push
call
add
add
add
sti
add
add
add
cli
mov
add
pop
popl
out
add
pop
add
add
jnp
add
pushf
rcrb
mov
add
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
push
add
add
add
movsl
add
into
add
add
add
add
roll
stos
lock
lods
test
lds
arpl
push
pop
fnstsw
insb
jl
adcl
pop
leave
push
lea
push
call
repnz
adcl
add
add
test
add
roll
xchg
fildl
mov
mov
add
add
in
mov
jbe
add
add
add
outsl
push
imul
add
add
add
push
add
add
fldcw
test
xchg
add
popf
mov
add
add
add
lea
pop
ret
push
push
push
push
lea
push
push
lea
push
push
push
call
in
add
add
add
add
jp
jno
rcll
in
lods
mov
add
movsl
sti
bnd
push
add
add
add
add
rcll
loopne
adcl
add
jne
cli
fadds
lret
jle
add
add
mov
push
into
add
add
cmc
mov
sbbb
push
cltd
mov
lea
pop
push
mov
push
add
not
not
pop
push
push
push
push
call
add
mov
fisttpl
add
add
pop
xchg
xchg
add
add
add
add
add
jmp
mov
jb
leave
into
add
push
enter
mov
loopne
pop
lds
push
fstpl
add
add
jmp
repnz
add
movsl
loop
hlt
lea
pop
push
push
push
lea
push
call
add
mov
stos
jae
test
jae
add
add
lock
add
add
add
test
imul
mov
loopne
mov
lret
fiadds
stos
test
pop
push
mov
push
sub
ror
pop
mov
push
lea
push
push
call
test
add
add
add
les
popf
ja
jns
add
outsl
xchg
add
add
add
fwait
add
add
add
sti
add
add
lds
add
rcrb
stos
push
roll
add
add
call
pop
add
out
add
bound
pop
fwait
popf
mov
add
std
pop
mov
fmull
jge
test
je
push
inc
not
add
inc
pop
mov
push
add
pop
test
je
push
not
shl
xor
rol
pop
mov
mov
push
push
push
push
push
push
push
lea
push
call
mov
add
stos
xchg
add
add
mov
mov
mov
add
stc
add
push
add
mov
add
lcall
xchg
in
add
imul
je
add
rorl
js
lret
outsl
lods
aam
add
ja
cmc
sbbl
add
mov
add
and
pop
push
sub
pop
inc
push
push
push
push
lea
push
call
xchg
lds
icebp
add
mov
push
add
movsl
cmpsb
add
pop
mov
mov
add
add
add
addr16
add
clc
ljmp
int3
pop
ffreep
mov
rolb
imul
push
add
cmpsb
jnp
in
add
lock
add
sahf
pusha
outsl
add
cwtl
flds
repnz
xlat
mov
fmull
rorb
test
add
add
repz
ror
pop
test
je
mov
push
rol
sub
pop
inc
push
sub
rol
pop
cmp
je
test
jne
push
push
push
push
lea
push
call
cmpsb
sti
add
out
mov
push
mov
add
mov
pusha
fs
add
incb
jbe
stos
mov
add
jnp
add
add
add
add
shll
mov
add
js
fidivl
ljmp
pusha
adc
xor
push
push
lea
push
push
push
push
push
call
out
add
stos
leave
mov
add
lock
call
push
imul
outsl
xchg
jnp
std
pushf
rclb
add
add
add
testl
xlat
loop
push
push
data16
mov
rcll
jno
fucomip
jge
stos
in
add
jae
add
mov
lea
pop
pop
pop
push
lea
push
push
push
call
cwtl
add
add
int
push
in
jmp
bound
int
rclb
roll
add
imul
add
nop
add
sahf
push
leave
call
in
mov
hlt
push
aad
xchg
add
mov
pop
lcall
add
fildl
add
leave
add
add
mov
lea
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
aad
add
fsub
sti
pusha
ljmp
pusha
pop
mov
cld
lds
loope
mov
add
add
add
push
add
pusha
add
add
add
aam
adcl
xlat
rcrl
enter
push
xchg
std
mov
lea
pop
pop
push
lea
push
push
push
call
jb
add
in
movsl
add
mov
test
mov
add
mov
mov
push
loopne
js
std
lcall
popl
add
mov
test
icebp
pop
lret
add
scas
jl
sahf
add
add
add
jmp
lea
pop
leave
ret
push
push
lea
push
lea
push
push
push
push
push
call
mul
test
add
add
popa
add
add
add
pusha
add
roll
add
mov
add
mov
add
jbe
add
or
loop
add
mov
stc
add
push
add
std
pop
push
cwtl
mov
add
mov
lea
pop
mov
inc
push
lea
pop
cmp
jne
push
push
push
call
push
in
add
idivl
add
add
out
add
add
mov
add
loope
loope
fistpl
add
icebp
jbe
cmpsb
lcall
add
ja
js
mov
add
stc
add
ret
add
add
movsb
ret
js
jns
add
add
pop
lea
mov
push
push
lea
push
call
scas
jne
jo
shlb
jl
js
add
fmulp
add
mov
jmp
mov
jl
incb
mov
repnz
test
call
mov
add
outsl
pop
orb
mov
bound
mov
lea
pop
test
je
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
imul
mov
mov
mov
add
iret
lds
mov
test
add
xchg
sahf
push
jnp
add
stos
add
lock
pop
add
pushf
bound
push
add
ljmp
add
sar
jne
add
add
ja
mov
add
rolb
jns
add
mov
mov
les
push
add
push
add
inc
pop
cmp
jne
mov
push
sub
ror
rol
not
pop
test
je
push
push
lea
push
lea
push
lea
push
call
shll
xlat
ljmp
roll
jo
arpl
add
test
ret
add
in
add
fiaddl
add
add
add
mov
add
add
add
add
jp
enter
mov
fwait
sarb
lods
add
add
shrb
add
test
popa
adc
mov
add
push
push
lea
push
push
lea
push
push
push
lea
push
call
cmc
or
mov
rcrl
jmp
mov
hlt
lcall
jge
into
movb
mov
jle
add
add
add
pop
add
jnp
out
int3
mov
add
add
add
add
pop
cmp
je
push
push
push
lea
push
push
push
call
add
aad
add
popa
push
add
aam
addl
mov
add
add
lods
std
test
xchg
add
fists
mov
addl
cmpsb
jmp
add
add
outsl
push
fistpl
movb
add
push
jge
into
xchg
add
jns
xchg
push
lea
pop
jmp
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
sarl
mov
cld
mov
add
add
add
push
call
in
add
add
add
lea
mov
cmpsb
xchg
pop
jmp
add
js
mov
lea
pop
xor
pop
push
not
pop
pop
pop
push
dec
add
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
sti
add
add
mov
sarl
test
add
loope
test
add
ljmp
mov
nop
rcrl
add
add
add
add
mov
add
xchg
add
bound
ja
mov
stos
mov
xchg
jp
add
mov
int3
loop
aad
mov
add
and
push
lea
push
push
call
add
mov
fiadds
add
add
int3
in
add
int
add
shl
add
mov
jne
add
mov
add
add
add
popl
mov
add
rcll
addr16
ret
push
rol
shr
shl
pop
lea
push
shl
add
pop
pop
pop
push
not
not
not
pop
pop
pop
push
push
lea
push
push
push
call
lahf
sahf
mov
aam
pop
jbe
add
mov
mov
add
jae
add
stos
push
add
xchg
outsl
add
pop
add
iret
ja
add
add
filds
lret
add
popa
xchg
mov
add
sahf
outsl
add
cld
jnp
add
add
pop
leave
push
push
lea
push
push
push
lea
push
call
mov
fiaddl
add
add
out
stos
sti
add
mov
add
add
xchg
jp
js
jmp
mov
lahf
add
lods
test
mov
in
add
cmpsl
add
jmp
add
mov
lea
bound
pop
ret
mov
push
push
push
lea
push
push
call
test
sti
add
aad
fildl
add
out
jge
pushf
add
add
jl
test
out
add
lods
mov
add
cmc
ja
sahf
add
add
add
jae
pushf
add
add
frstor
add
add
mov
jnp
mov
cmc
clc
mov
mov
add
ljmp
pop
pop
push
sub
pop
pop
push
push
lea
push
push
push
push
call
add
add
mov
in
jnp
pop
add
add
mov
add
fldl
add
mov
lods
out
clc
mov
add
subb
mov
int3
mov
xchg
xchg
lret
mov
repnz
fidivrl
data16
loopne
add
std
xchg
clc
add
add
imul
add
les
push
not
inc
inc
pop
pop
push
push
call
mov
lcall
add
bound
pushf
pop
add
leave
fwait
add
mov
add
addl
add
add
rclb
imul
faddl
mov
add
lret
movsb
in
rclb
int3
lea
pop
leave
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
int3
out
push
push
add
add
add
add
into
add
movsb
loop
filds
mov
push
add
je
add
into
add
add
add
lret
std
add
add
add
les
add
add
loope
add
rcll
lds
sti
add
lret
addl
std
arpl
add
out
addr16
add
jb
hlt
lea
pop
ret
test
push
test
jae
test
jb
jle
jae
out
jae
jmp
jae
test
jae
movsb
mov
add
jae
dec
xor
testb
or
push
scas
push
hlt
ljmp
mov
dec
pop
popa
inc
mov
pop
push
push
xor
lret
jecxz
out
xor
dec
dec
cltd
sbb
lret
xor
add
and
jnp
jp
mov
cmp
xor
pop
lods
xlat
mov
xor
and
gs
fbld
ds
inc
ja
mov
mov
sub
int3
ds
fwait
movsl
xor
or
push
sahf
add
xchg
xchg
dec
adc
lock
int3
push
sbb
push
jl
push
fnstsw
mov
out
jno
cmp
mov
and
add
and
stos
rcl
adc
insl
aas
sub
loopne
iret
push
add
or
pop
mov
dec
or
xchg
dec
or
repz
stos
pop
mov
or
mov
push
add
sub
sub
dec
pop
clc
rolb
dec
shrb
arpl
push
xchg
jl
popf
ljmp
push
add
lods
addr16
cmp
inc
out
or
loope
arpl
out
add
jo
mov
adc
lods
mov
psubd
ja
loope
movsb
cs
pop
hlt
push
xchg
cmpsb
mov
sbb
jb
xorl
jno
push
in
in
pop
adc
dec
bswap
xchg
dec
or
push
fsubs
nop
aas
sub
adc
stos
push
mov
js
insl
jbe
lock
xor
lret
xor
gs
hlt
mov
mov
loopne
xlat
in
mov
jae
movsl
jge
dec
insl
mov
mov
test
and
mov
jb
fimuls
clc
sub
lahf
popf
js
mov
rclb
arpl
insb
mov
jg
sbb
mov
jae
xor
push
mov
das
pushf
jnp
add
inc
push
jno
aas
ljmp
sarl
mov
jmp
pop
sbb
sbb
mov
add
lds
mov
movl
inc
push
cwtl
adc
and
fnclex
outsb
push
jne
jnp
adc
cmc
jno
into
mov
movsb
jecxz
dec
xchg
sub
inc
outsb
mov
jmp
lds
ret
data16
jecxz
xor
jno
fucomip
bound
call
pushf
and
decl
xchg
jne
sahf
rcrl
ret
adc
aam
mov
scas
mov
sub
inc
loope
adc
rcr
adc
das
int
arpl
aaa
mov
loope
cmpsl
addl
shl
mov
insb
add
mov
sbb
scas
call
nop
fstpt
inc
std
jo
addl
popf
loop
push
je
lea
mov
data16
mov
jg
cmpsb
outsl
cmp
mov
xchg
dec
movsb
clc
ret
mov
adc
arpl
lods
fs
mov
psubw
out
mov
fnstsw
push
xchg
loopne
clc
int
sbb
cmp
gs
pop
mov
jnp
pop
out
sbb
das
sub
push
sbb
aad
cmp
js
sub
fcoml
cmpsb
enter
fidivrl
add
mov
or
cld
rol
adc
pop
pop
lods
sahf
loop
cmp
scas
sbb
adc
xlat
push
in
lret
subl
ljmp
inc
sbb
lods
in
daa
xchg
jbe
dec
sub
test
les
popf
push
jno
sbb
imul
test
push
mov
jmp
repnz
ljmp
ja
dec
xchg
repnz
mov
stos
mov
mov
aas
mov
stc
pop
clc
pop
inc
and
loop
dec
pop
shlb
cmp
icebp
sarl
dec
mov
jbe
lods
mov
pushf
pop
mov
inc
psrlw
push
add
cmp
imul
mov
clc
aas
jmp
xor
xchg
add
cmp
pop
enter
mov
sub
sbb
add
mov
add
cmp
inc
push
ja
testb
cmpsl
lcall
pop
inc
movsl
mov
cmpsb
or
or
pushf
mov
xorb
and
test
push
lods
and
add
sbb
mov
mov
xchg
cmpsl
std
inc
movsb
lea
jmp
inc
ror
das
icebp
mov
inc
push
pop
mov
popa
mov
inc
lds
jp
cmp
jl
fcompl
subps
mov
sbb
es
aam
push
xorl
hlt
fisttps
pop
sub
testl
in
cltd
xchg
xor
adc
sub
mov
enter
mov
dec
stc
aam
cmpsb
fsubs
insl
add
jns
loop
or
frstor
inc
mov
fiaddl
mov
jnp
xor
or
je
js
mov
or
lret
mov
push
jnp
xchg
pop
lods
mov
in
shl
lds
add
and
test
jl
ljmp
jbe
pop
pushf
scas
dec
xchg
fcmovb
xchg
pusha
sbb
adc
or
xor
incl
dec
fxch
cmp
int3
inc
cmp
movsl
cmp
daa
jb
aaa
sbb
jl
add
scas
mov
leave
jle
test
fcomi
aas
cwtl
nop
mov
adc
shlb
mov
and
sti
stos
imul
inc
push
mov
adc
shrb
cmp
mov
imul
jnp
stos
loopne
dec
sub
je
ss
dec
shl
hlt
lret
xor
jbe
add
je
pop
jmp
cmp
lret
ja
jnp
into
add
jne
push
movl
movsb
lret
out
pop
scas
push
lock
inc
test
adc
xor
inc
jb
lods
outsb
ret
and
stc
add
sbb
xchg
stc
mov
std
jae
and
hlt
pop
ljmp
jno
rolb
call
push
and
cltd
loope
xor
mov
shl
cmc
jo
ds
or
sub
sahf
outsl
mov
outsb
cmp
mov
mov
xor
pop
ljmp
xor
jl
add
xchg
add
jg
sbb
xlat
shll
lret
xor
insl
or
hlt
aaa
outsl
sarb
movsb
mov
addr16
push
sub
es
dec
mov
fnstenv
lcall
pushf
pop
jnp
jecxz
iret
xor
out
call
and
pop
dec
stc
adc
pop
push
cmp
shlb
js
jno
int
sbb
jb
arpl
push
inc
inc
mov
cld
fnstcw
sub
inc
out
aas
xchg
and
jne
in
mov
mov
adc
adc
mov
out
mov
inc
sbb
movsb
rclb
pushf
cmp
fistl
pop
pop
shrb
mov
sub
or
add
mov
pop
loope
xchg
lods
xor
sbb
repnz
jne
or
fwait
xchg
inc
jmp
xchg
aas
les
jbe
shlb
fmull
call
movsl
imul
mov
xchg
outsb
mov
adc
xchg
in
xchg
xor
fs
cld
sub
fneni(8087
add
mov
dec
jns
loopne
push
cmp
mov
nop
push
or
xor
cwtl
int3
sbb
fmull
lret
inc
dec
loope
aaa
mov
lret
pusha
outsl
jl
lds
mov
nop
fs
in
test
sub
mov
aas
mov
adc
push
imulb
or
loope
adc
adc
mov
add
lea
and
cmpsl
inc
sub
inc
inc
shrl
dec
and
daa
pop
lock
jge
fistpll
lds
xchg
sarb
stos
inc
jae
fisttpl
pop
addb
cmp
dec
into
scas
and
xor
mov
inc
add
and
and
add
or
push
push
ja
shl
cwtl
pop
jmp
pop
xor
and
jns
jo
adc
scas
inc
aam
clc
jecxz
insb
xlat
data16
aam
movsb
stos
cs
aad
pop
inc
push
jnp
jle
xorl
fdivr
pop
outsl
int3
adc
stos
xchg
push
adc
adc
xchg
das
insl
xor
pop
pop
pop
lods
and
sub
add
push
pop
pop
mov
stc
inc
aam
dec
xor
loop
cmpsl
xchg
cmp
jb
lods
xchg
pop
shll
xchg
inc
out
call
mov
push
sub
sub
fldt
push
stc
enter
mov
shlb
test
movhps
sbb
cmc
adc
pop
in
push
push
insb
subb
lahf
xchg
cmp
loopne
or
movsl
push
filds
push
lcall
push
icebp
das
jne
mov
lock
and
int
lret
mov
inc
xchg
cmp
cli
in
stos
pop
into
int
and
daa
sbb
jb
rcl
fnstcw
or
loope
cltd
push
mov
inc
hlt
dec
pushf
pop
out
push
nop
or
inc
stc
jns
repnz
out
iret
inc
inc
aam
mov
hlt
sub
rcrb
cmp
movsl
lods
fs
mov
call
mov
jb
cmp
int3
jg
mov
gs
pushf
jae
lea
add
mov
into
pop
cmpsb
ror
push
mov
pop
sub
in
insl
adc
mov
xor
pop
aam
push
subb
ret
in
push
shl
push
push
imul
inc
js
add
add
xchg
xor
xor
iret
ficoms
mov
cli
bndstx
daa
xor
aad
xor
pop
dec
inc
jo
push
out
mov
push
xchg
in
jo
stc
mov
jmp
inc
xchg
in
push
adc
lock
rcrl
js
aam
push
push
sbb
and
push
popa
xor
jb
sbb
roll
jecxz
negl
cwtl
test
push
pop
stos
push
xor
mov
int3
data16
push
movsb
inc
mov
jecxz
adc
test
dec
xchg
outsl
cltd
stc
xor
icebp
aad
adc
xor
cmpsb
pusha
xor
rorl
fisubrs
xchg
and
repnz
and
test
jecxz
add
dec
mov
dec
sbb
int
mov
or
xor
pusha
add
adc
enter
cld
push
mov
ffreep
mov
aam
dec
lcall
rorl
xchg
push
jge
xchg
cld
sbb
and
dec
inc
mov
and
sahf
or
sbb
ret
or
mov
imul
incl
das
out
les
dec
or
mov
out
cmp
xor
repz
ret
xchg
pop
or
push
pop
cwtl
icebp
sbb
mov
out
clc
cltd
push
sahf
sbb
dec
pop
cwtl
mov
std
pop
ss
sti
adc
mov
popf
outsl
pop
pop
adc
je
or
mov
cmpsb
xchg
test
mov
sub
fisttpll
insb
add
push
outsb
push
lds
faddp
mov
cmp
lods
push
in
std
sbb
adc
and
std
movsl
movsb
decl
push
xchg
mov
jg
iret
xchg
mov
fcoml
xchg
push
cmpsl
adc
push
adc
stc
imul
xchg
or
clc
adc
jl
imull
cmp
push
repnz
push
pop
push
jae
dec
jle
mov
sar
call
adc
roll
out
in
in
mov
mov
pop
xchg
addl
fucomp
adc
inc
outsl
dec
dec
push
dec
dec
andl
adc
shll
mov
cmp
jecxz
xchg
gs
std
enter
les
mov
push
fwait
cwtl
push
xor
xchg
and
loop
mov
aas
outsl
in
push
lret
cltd
cld
or
pop
test
loop
and
rcl
shll
int3
lret
ficoml
mov
in
push
pusha
frstor
fucom
incb
cmpsb
aas
xor
fucom
xchg
mov
lret
push
adc
or
xor
or
idivl
pop
pushf
out
jecxz
cmp
sub
or
ficoml
add
mov
test
daa
stc
mov
adc
dec
pop
jl
out
pushf
movsb
lret
inc
cmpsb
push
and
loopne
stos
mov
fisttpl
jb
mov
mov
jp
pushf
in
leave
fs
adc
cmp
jg
adc
xchg
xlat
popf
nop
add
xor
fnstcw
sbb
loop
fldl
test
push
add
je
mov
je
add
mov
adc
sahf
or
popa
or
add
mov
mov
pop
xor
aaa
inc
aam
cmp
fwait
mov
inc
mov
inc
subb
arpl
push
sub
test
dec
mov
pushf
inc
cwtl
dec
push
call
inc
cli
xchg
push
dec
xchg
dec
mov
out
sahf
test
push
stos
mov
dec
lret
and
rcrb
idivw
xor
xor
adc
pop
mov
shl
rolb
scas
pop
test
dec
inc
int
mov
mov
or
mov
icebp
fmull
pop
cmp
push
or
movsb
inc
inc
dec
and
push
xchg
lods
inc
imul
js
fs
mov
push
jecxz
jae
ljmp
test
pop
scas
out
data16
ret
mov
and
cmp
add
mov
in
insl
movsb
js
and
mov
push
pop
loope
inc
fisubl
mov
jnp
mov
xchg
aaa
scas
in
testl
jg
out
out
jne
or
cmpsb
add
cmpsl
dec
inc
pop
jmp
xchg
cmp
lods
out
push
sahf
insb
push
fisttps
cmp
ficoms
testl
ljmp
cmp
adc
xchg
sbb
mov
mov
xchg
cmp
push
stos
push
xchg
repz
sub
inc
sbb
cmp
test
jmp
lret
jb
pop
cmp
cs
popf
add
cmp
jnp
and
insl
xor
xlat
cmp
cmp
mov
jle
mov
dec
in
cmp
sub
and
iret
jae
or
mov
dec
push
pop
jg
pop
aaa
sub
push
icebp
mov
in
jnp
sbb
cmp
inc
cltd
dec
push
adc
mov
pop
popf
cmpl
icebp
jecxz
rol
push
inc
ljmp
jp
xchg
cmpsl
xchg
sti
push
mov
das
mov
ret
add
dec
push
sbb
rorl
icebp
mov
dec
adc
subb
and
and
arpl
mov
xchg
fildll
jle
test
xchg
add
push
push
jne
js
adc
dec
cmpsl
jno
ds
mov
add
out
sub
and
sbb
adc
inc
xchg
xchg
sbb
movsl
cmp
and
and
insb
push
mov
pop
push
fistl
subb
and
adc
push
xor
mov
inc
jnp
ret
mov
sbb
pop
inc
fcomi
cmp
dec
icebp
outsb
mov
movsb
sahf
xor
out
arpl
dec
sub
inc
cmpsl
out
dec
js
mov
pop
cmp
xor
cmp
cmp
jge
sub
mov
push
outsb
push
aam
aaa
scas
xchg
pushf
jp
stc
jns
lds
pop
and
push
movsl
xchg
dec
xor
jmp
loope
leave
push
add
stos
iret
mov
push
dec
call
ret
push
sbb
sti
or
sub
xchg
cmp
pop
mov
cli
idivb
outsb
ds
add
es
stos
mov
out
insb
into
inc
out
pusha
jg
pop
mov
jbe
pop
shlb
js
fwait
stc
movsl
sbb
xor
mov
lods
in
mov
adc
mov
push
lret
pop
ret
push
call
or
fnstcw
test
les
stc
mov
stos
inc
xchg
pushf
jmp
or
test
movsb
push
jno
cltd
sub
ds
aad
inc
xchg
int3
divl
or
xor
adc
sbb
aad
mov
add
sbb
sub
fcom
lock
aam
mov
adcl
sbb
daa
jg
stos
addb
scas
jb
sub
cmpsl
imul
adc
sub
mov
fadds
add
push
mov
imul
ret
sahf
test
fisubrs
pop
lock
jne
roll
mov
loopne
test
jge
mov
and
mov
cmp
pop
insb
pop
orl
test
outsl
add
mov
sbb
dec
inc
xorb
or
adc
sbb
pop
or
or
pop
cwtl
jp
fmull
daa
cmp
divl
xor
dec
idivl
dec
and
xor
jle
jmp
dec
fsubrs
mov
sub
push
cmp
dec
lds
les
aaa
movsb
std
fsts
std
in
xchg
daa
not
adc
nop
adc
sbb
loopne
call
xor
mov
jl
js
xor
mov
aam
lret
cld
xchg
arpl
mov
cwtl
mov
jmp
daa
xchg
sbb
inc
jmp
les
adc
test
gs
paddq
pop
and
push
cmp
mov
pop
aam
cmp
pop
jnp
call
sbb
bound
ret
lahf
sti
sbb
pop
mov
cmpsl
lods
in
popf
pusha
lods
std
dec
jp
xor
push
and
xor
cmp
xor
mov
adc
out
fisubrs
sti
imull
or
aaa
mov
fstl
in
mov
push
dec
repz
lods
iret
cs
ret
pusha
or
pop
adc
nop
into
xchg
negl
mov
call
data16
sbb
js
push
jp
loop
aam
dec
sub
or
jb
jg
test
mov
and
jb
jmp
mov
das
sbb
sub
aaa
sub
sar
push
xchg
arpl
sbb
mov
testb
xor
and
add
push
xlat
and
adcl
add
test
outsl
imul
out
inc
xor
mov
add
lock
adc
dec
hlt
jb
mov
rcrb
xor
test
push
inc
and
loope
scas
bound
cmpsl
sub
scas
adc
inc
rcrl
or
test
test
cmc
or
jnp
pop
popf
scas
lret
gs
or
pop
jbe
pop
jbe
jbe
pop
push
xor
gs
mov
ljmp
adc
cld
pop
mov
in
push
sub
or
xor
dec
pop
mov
pop
jg
pop
jbe
mov
gs
xor
mul
sarb
sbb
int3
and
mov
scas
leave
mov
sbb
cld
movsl
fucomp
nop
aam
and
mov
outsb
cmp
cwtl
inc
inc
mov
scas
mov
lods
mov
inc
xchg
out
pop
add
repz
mov
icebp
in
aam
lret
mov
iret
gs
lea
push
mov
push
out
add
jge
inc
push
into
test
addr16
dec
fbld
mulb
es
add
mov
sbbl
aam
mov
jle
add
sbb
sbb
dec
movsl
cmp
or
imul
test
pop
adc
dec
lcall
push
jl
mov
sbb
loop
cmp
int3
sub
sub
jmp
aad
or
mov
xor
fists
call
sub
movsb
mov
imul
sub
jnp
das
lods
sahf
ret
xchg
lcall
pop
cmp
in
cmp
das
leave
lods
nop
lods
ja
mov
cli
hlt
test
and
mov
adc
fimuls
and
and
sbb
xor
imulb
mov
sbb
js
sbb
rcr
sub
fcmovu
icebp
and
cmp
mov
mov
jg
mov
test
aaa
test
enter
cmp
fldl2t
popf
sub
mov
jg
ljmp
adc
adc
fidivl
inc
sub
cli
lahf
mov
scas
jecxz
popf
xchg
mov
pop
xchg
and
inc
iret
and
dec
pop
sbb
sub
enter
and
fcoms
icebp
cmp
sbb
xor
int
outsl
mov
pop
movsl
int3
nop
push
pushl
mov
xchg
xor
mov
push
pop
sbb
mov
jmp
cmp
pop
push
mov
push
fisttpll
jae
inc
std
fwait
add
movsl
scas
inc
idivb
fs
ret
and
cld
mov
cmpsb
mov
call
mov
out
fstps
ljmp
and
mov
fwait
jg
add
stc
dec
lret
test
dec
scas
ss
movsl
mov
test
mov
xchg
or
sarl
ds
scas
ret
mov
shrl
dec
dec
fwait
gs
in
out
xor
mov
pushf
or
add
push
cmp
pop
and
pushf
mov
jg
add
dec
cmp
cld
int
lahf
enter
adc
sub
popf
inc
sub
jle
xlat
dec
inc
orl
call
sbb
stos
clc
and
ljmp
pop
dec
adc
cmc
sbb
push
and
mov
jg
push
aaa
and
xchg
aad
test
std
adc
jmp
and
aam
adc
sbb
add
adcb
dec
scas
adcl
mov
and
shr
adc
flds
fistpl
push
pop
pusha
add
push
xchg
xlat
pop
mov
xchg
xchg
movsl
icebp
push
cs
xchg
fcoml
cwtl
or
xchg
fs
jb
movswl
lcall
inc
or
stc
xor
push
lcall
adcb
or
dec
mov
inc
adc
mov
cli
cmp
xor
jg
cmp
ficoms
mov
pop
fwait
ja
xchg
stos
aaa
out
dec
inc
xor
mov
mov
jp
call
pop
xor
mov
sbb
adc
add
aad
xchg
mov
adcb
or
cmp
out
pop
test
inc
xor
push
mov
adc
xor
outsl
iret
int
mov
enter
mov
fistl
rorl
jmp
clc
add
mov
cmp
les
push
dec
lret
mov
sbb
popf
hlt
inc
jl
mov
push
filds
fcompl
sbb
fcmovb
xchg
jns
xor
push
mov
hlt
pushf
or
push
xchg
addr16
lcall
add
pop
mov
std
or
arpl
jne
es
xor
bound
addr16
mov
inc
cmp
pushf
pop
loope
sbb
cmp
pop
lods
and
mov
in
in
and
xlat
pushf
mov
bswap
mov
and
je
and
outsb
sbb
jns
loope
and
fcomps
pop
outsl
gs
dec
lods
popf
add
sbb
stos
inc
sbb
lds
lahf
cmp
sbb
cli
add
mov
fiaddl
shl
jae
adc
cli
iret
or
cmp
xor
jp
inc
add
mov
push
xor
push
sbb
cmpsl
xor
out
std
cwtl
jmp
and
aaa
push
adc
push
and
xchg
xorl
mov
mov
in
nop
outsb
or
mov
xchg
das
outsb
in
movsl
aam
mov
imul
dec
jne
mov
jnp
add
fstps
or
pusha
nop
cmp
insb
sbb
add
pop
cmpsl
mov
mov
imul
ja
out
add
out
outsl
and
sti
lahf
adc
arpl
and
les
push
inc
jle
dec
les
mov
dec
sbb
cmp
xchg
rcr
mulb
and
sbb
loopne
or
mov
xchg
mov
xchg
aaa
aam
dec
nop
cmp
ds
hlt
int
pop
push
mov
or
or
sbbl
pop
cmp
mov
push
or
sbb
inc
xchg
jb
jmp
fldl
push
add
dec
sbb
jnp
inc
push
sub
or
dec
shr
ds
int3
enterw
dec
ret
lea
cs
adc
and
scas
repnz
fcmovnu
cli
aas
xchg
or
jp
es
xor
gs
mov
rol
adc
fisttpll
jmp
hlt
lret
ret
mov
add
pop
or
pusha
lret
jo
add
add
aam
push
btr
test
out
out
xchg
pusha
pop
frstor
out
push
std
repnz
or
add
pop
sub
test
icebp
loopne
jb
or
cmpsl
xchg
enter
sbb
mov
ja
addl
sub
xchg
addr16
hlt
mov
addl
mov
push
push
cld
mov
mov
test
cmpsl
ret
mov
xchg
lcall
fwait
sub
and
stos
movsb
push
movsl
cwtl
or
jg
test
inc
stos
add
shll
sbb
out
push
ret
mov
stc
test
in
aam
jne
icebp
xchg
push
xor
into
in
jg
je
popa
lret
pop
data16
jecxz
jecxz
dec
xor
cld
mov
imul
dec
push
rclb
jbe
xor
sbb
push
mov
adc
mov
ja
fsubrl
or
testl
arpl
sbb
dec
ds
mov
das
jo
cwtl
push
stc
sbb
lea
pusha
movsb
mov
gs
xor
and
or
mov
pop
imul
mov
jno
add
pop
mulb
out
adc
aaa
movl
aad
pop
and
mov
mov
std
outsb
pop
pop
hlt
jno
incl
mov
movsb
push
xchg
xor
add
jmp
ljmp
inc
gs
mov
push
sub
arpl
ds
inc
jp
fcoms
rcrb
stos
push
mov
jle
cmpsb
jmp
and
jle
inc
push
mov
jno,pt
scas
fs
xor
mov
mov
imul
push
scas
cmp
jg
rcrl
in
test
ficomps
lcall
adc
xchg
sub
imul
cmp
push
cmp
mov
ljmp
daa
dec
aas
push
lods
faddl
out
and
das
fcoml
stos
dec
gs
xor
insb
mov
jle
into
pop
dec
cmp
xor
push
aas
lret
pop
repz
cmc
data16
push
das
and
xor
and
rep
sub
sbb
les
jg
scas
dec
call
sbb
sub
add
sti
dec
xchg
imul
or
push
push
and
jnp
int
mov
movsb
ss
inc
jb
jnp
jl
xlat
mov
pop
lock
xchg
push
push
into
iret
lcall
mov
std
add
dec
pop
jae
dec
and
and
cmp
js
bound
jo
fsts
aas
or
mov
xlat
cmpl
rolb
xchg
in
and
push
add
outsb
int
lret
add
fs
xchg
and
jnp
mov
push
and
out
out
sbb
pop
push
mov
mov
mov
sti
mov
jp
xchg
sbb
ret
loopne
stc
mov
push
xlat
xchg
jbe
cmpsb
and
dec
push
scas
mov
mulb
push
xchg
negb
push
rcr
xor
jecxz
jmp
mov
jo
popf
xchg
inc
xchg
mov
adc
pop
xchg
ja
addr16
push
add
add
xorl
mov
out
out
roll
in
adc
and
pop
lods
mov
and
mov
push
fs
inc
jmp
stos
fcompl
jp
hlt
sub
out
mov
scas
jb
dec
xchg
pop
jmp
imul
sti
jb
push
fbstp
lret
pop
data16
dec
pop
int
mov
insb
xlat
cmp
xlat
jae
cmp
lods
ds
jg
add
sar
loope
inc
rorb
xchg
bnd
mov
sbb
lret
jecxz
movsl
enter
mov
test
sub
push
rdtsc
or
mov
shl
xchg
cltd
pop
test
inc
cmpsl
or
mov
into
pop
sbb
and
push
jo
mov
and
or
mov
add
fimuls
push
divl
addr16
mov
js
insl
aas
scas
in
push
and
repz
dec
pop
and
aad
push
pushf
and
in
das
jl
flds
sub
or
and
cld
push
push
xchg
loop
js
inc
cwtl
aas
jmp
pop
xchg
mov
shl
cli
sahf
cwtl
outsl
xchg
xor
add
and
or
lods
cmp
lret
cmpsb
jge
rcll
js
lcall
cmp
cli
pop
pop
cmp
adc
pusha
inc
xor
cmp
push
pop
inc
dec
sbbl
sbb
mov
or
shrl
sub
les
sub
inc
rorl
xchg
inc
cs
out
pop
fstl
cmpl
addr16
dec
icebp
jge
mov
mov
and
pop
dec
cwtl
push
lods
push
dec
xlat
stos
fsubrp
test
and
xor
pop
data16
jmp
lods
sbb
pop
icebp
lahf
fs
aaa
jo
dec
aas
mov
adc
add
and
adc
andb
dec
sbbl
dec
or
inc
adc
mov
movsl
mov
sub
test
xorb
movsl
adc
int3
cld
mov
pop
imul
mov
xchg
test
out
aad
pop
movl
data16
jns
aad
stos
add
inc
jmp
arpl
pop
cmpl
ss
sub
mov
pop
sbb
mov
cmp
sti
or
sbb
stos
shl
lahf
cmp
jnp
cs
push
ds
inc
sbb
mov
outsl
sub
adc
sub
imul
enter
lds
ret
scas
inc
adc
jne
add
or
jb
outsb
out
mov
push
sti
xchg
lcall
fldt
push
out
and
add
and
mov
push
sbb
mov
sub
and
iret
xchg
les
fwait
cmp
mov
subl
jmp
and
fwait
xor
icebp
mov
ss
xor
pop
push
xchg
dec
jne
add
rcl
in
dec
cs
and
add
stos
sbb
pop
nop
mov
int3
sbb
add
and
and
fiadds
mov
notl
lds
cwtl
stos
daa
in
push
jns
sub
lds
mov
add
aas
adc
outsb
or
cmpsl
in
push
xchg
xor
nop
mov
mov
inc
cltd
inc
jg
mov
xchg
pushf
push
lahf
and
psraw
in
ss
sub
pop
cmpsl
lahf
orl
jns
mov
dec
int3
cmpsb
jae
cld
sub
xchg
mov
in
cs
jecxz
out
xbegin
stos
mov
inc
cmp
mov
bound
mov
push
test
inc
lods
or
cmc
jl
or
loope
pop
mov
sbb
push
adc
dec
sub
inc
push
pop
int3
dec
pop
pop
mov
outsl
test
test
loop
lds
inc
jle
data16
call
xchg
cmc
pop
adc
pop
adc
sub
in
mov
mov
nop
dec
sahf
repnz
xchg
sub
aaa
enter
clc
in
rep
lahf
das
cmpsb
pusha
jns
xor
add
mov
cmpsl
jns
or
push
cmpl
pop
mov
fcompl
adc
fnsave
je
shl
mov
call
movsb
jae
jbe
mov
pop
push
test
cs
in
fwait
push
fcmovnb
mov
sbb
mov
ss
scas
add
mov
mov
jb
xchg
dec
cltd
push
int
insb
lcall
jnp
fs
push
push
add
sub
test
jb
loope
mov
mov
out
in
pop
mov
push
dec
mov
push
ds
sub
xor
pop
jae
jns
in
into
add
je
add
ds
push
push
test
sbbl
jno
fs
add
int
loope
and
xchg
sub
icebp
js
xor
dec
loopne
int
decb
lods
stc
inc
lods
js
movsl
adc
adc
cmp
adc
ds
pop
movsb
jle
test
cmp
cmpb
sar
xchg
mov
out
orl
push
ret
testl
adc
rclb
in
lock
pop
cltd
dec
mov
pop
sbb
push
cmp
jmp
out
mov
inc
jmp
adc
cld
add
push
rolb
std
sub
iret
mov
xor
cmp
xchg
pop
adc
or
pop
cmp
in
fucom
jnp
sub
jg
jl
cmp
dec
push
inc
xorl
adc
rorb
cli
adc
mov
fsts
testl
lods
xchg
addl
mov
xchg
push
mov
mov
add
rcrb
iret
mov
mov
jl
push
cmp
dec
inc
pusha
mov
mov
inc
xlat
mov
arpl
imul
jle
imul
pextrw
xor
push
xchg
push
call
ds
js
cli
aaa
mov
popf
je
imull
jecxz
mov
mov
icebp
out
arpl
xor
jmp
or
adc
or
xchg
outsl
dec
inc
fcomps
add
inc
stos
js
pushf
sti
push
mov
sub
test
repz
nop
aam
lret
repz
lcall
inc
dec
negl
or
pop
xor
add
inc
lds
pusha
test
movsl
mov
cmp
push
push
push
inc
xchg
adc
xchg
notl
sub
jle
cld
mov
pop
inc
icebp
mov
pop
lcall
lods
negl
pop
int
xor
inc
mov
test
jg
xlat
jne
or
scas
dec
mov
fwait
mov
pop
repnz
scas
pop
movsl
ret
mov
push
inc
mov
sahf
sahf
cmpsb
add
subb
add
xor
jae
pusha
xchg
mov
xchg
mov
in
aas
nop
dec
lock
movsl
ror
push
andb
mov
push
jp
stos
and
mov
sub
push
iret
xlat
push
or
or
sub
popf
cmp
cmpsl
dec
cmp
xchg
testl
jecxz
jg
dec
add
pop
mov
in
pop
mov
notb
adc
inc
fcomps
les
mov
push
jge
mov
lret
inc
inc
push
inc
or
pop
into
dec
jo
jle
adc
out
fwait
cmpsb
adc
ljmp
int
push
ror
aas
and
jno
mov
adc
lret
xor
cld
jnp
mov
nop
sub
into
in
or
jmp
pop
dec
pop
enter
or
popa
add
xchg
push
xchg
pop
stc
mov
cmp
xchg
mov
xchg
fiadds
shrl
sahf
mov
jb
scas
adc
inc
mov
shll
cmp
mov
pushf
lcall
test
lock
xor
cmp
pop
xchg
sub
pop
test
add
push
int
pop
jg
xor
adc
insb
fistps
xor
pop
xchg
dec
loope
inc
test
lret
mov
xor
data16
sub
jmp
in
fimuls
lret
inc
cmp
sbb
jb
mov
sub
xor
mov
sub
repz
xor
cwtl
and
lcall
mov
mov
mov
dec
dec
adc
sub
dec
cld
and
adc
jnp
pop
push
inc
and
xor
mov
in
and
stos
jmp
mov
jg
mov
mov
ss
or
ss
outsl
es
out
jno
mov
test
fstpl
aad
mov
pop
das
dec
cmp
inc
lahf
and
jns
insb
mov
pop
cmpsb
lods
stos
stos
mov
shlb
lret
mov
push
idivl
repnz
loop
bound
push
mov
mov
subl
lret
ss
pop
or
sbb
pop
arpl
rol
jecxz
pop
dec
test
push
pop
int3
pushf
pop
xchg
and
or
dec
imul
outsl
shlb
call
shrl
push
jg
in
add
xchg
push
lahf
in
inc
sar
cmp
mov
test
add
in
outsl
fcoml
lock
mov
in
test
cmp
lods
jo
je
push
data16
sub
mov
lea
loop
pop
push
push
and
clc
dec
mov
imul
inc
mov
fstl
jne
inc
mov
pop
stc
add
jb
dec
sar
and
dec
lret
cmp
mov
push
stos
daa
xor
dec
dec
popf
movsl
and
cmpsl
lock
sub
sbb
cmpsl
or
mov
test
cwtl
stc
repnz
incl
stc
or
fdivl
sbb
push
ljmp
jbe
int
lahf
insl
imul
push
sbb
sbb
push
mov
in
cmp
pop
push
int
sbb
push
xchg
sbb
adc
inc
les
pop
mov
dec
sub
fsubrl
incl
out
lret
add
push
or
xchg
adc
xor
pushf
pop
sbb
xchg
bound
and
sub
push
sbb
je
jmp
mov
sbb
arpl
das
mov
push
push
rcrl
pop
push
xor
cld
ja
ret
pop
jne
movsb
pop
inc
mov
jo
imul
inc
fxch
dec
xlat
jnp
iret
notb
mov
xor
clc
rolb
push
outsl
mov
and
or
decl
mov
sbbb
sbb
inc
cmp
push
sbb
test
popa
mov
jg
mov
jbe
mov
insl
ficoml
pusha
and
mov
outsl
jle
push
gs
mov
sub
add
clc
iret
in
pop
adc
std
ja
mov
out
cld
movsb
lock
sbb
movsl
dec
or
push
and
pop
jle
jno
inc
adc
sub
cmpsl
pop
xor
pop
or
gs
add
xchg
sub
sbb
addr16
jb
xchg
mov
mov
ret
ret
dec
scas
inc
xchg
stc
hlt
mov
movsb
sub
and
mov
shrl
jecxz
movsl
add
mov
pop
or
hlt
test
scas
sbb
stos
add
sbb
jl
sbb
aad
mov
divps
xchg
scas
xor
rcrl
add
sbb
sarb
and
mov
push
addr16
fnstenv
mov
dec
sahf
xchg
add
inc
push
pop
sahf
popa
mov
jbe
lcall
and
cmpsb
test
mov
mov
pop
cs
movsl
sbb
jo
les
adc
push
jns
pop
andl
or
nop
mov
mov
sbb
push
pop
sbb
xor
jmp
sub
ss
mov
out
mov
fstps
popf
dec
push
cs
stos
or
fists
push
icebp
adc
aas
xor
push
push
mov
out
push
cld
mov
mov
ja
push
jne
dec
mov
pushf
xor
test
inc
jle
dec
out
mov
mov
xlat
jle
cmp
xchg
in
stos
xchg
insb
pushf
jae
fwait
stos
inc
cmpb
sub
pushf
fstps
fisttpll
pop
das
sti
insb
into
push
in
imul
fmulp
pop
stc
inc
jae
ja
sar
pop
cmpsl
push
js
jecxz
jg
scas
mov
cmp
mov
push
mov
inc
jp
dec
and
fnsave
inc
ret
out
hlt
xor
sub
ret
out
push
rorl
adc
mov
push
arpl
xchg
mov
das
dec
pop
jb
out
pop
sbb
loope
fcoms
mov
push
sub
add
push
fstpl
fisttpll
mov
mov
loop
fmul
inc
and
cmpsb
call
jle
or
data16
sbb
mov
xchg
outsb
out
ret
mov
pushf
mov
jns
cmp
rorl
mov
xor
out
pushl
leave
sub
and
inc
adc
xor
mov
or
leave
stc
cli
arpl
jne
pop
out
mov
jo
popa
mov
pop
dec
dec
sub
dec
les
jge
and
or
mov
xchg
and
mov
pop
push
and
sbb
mov
xchg
lock
out
push
sub
movl
test
sbb
mov
stos
fidivrl
mov
insl
mov
out
ds
outsl
cmp
mov
movsl
mov
call
out
jns
loope
lret
in
cmpsl
stc
cmp
dec
das
hlt
out
out
cmp
icebp
cmp
push
test
sbbl
mov
mov
fimull
push
push
mov
jb
ret
or
jecxz
bound
xchg
lock
jbe
loopne
divl
mov
movsl
fldl
add
incl
mov
cmp
and
les
mov
cmc
call
xchg
mov
jbe
in
outsb
xchg
aad
sub
mov
out
scas
popf
cwtl
mov
nop
inc
fldl
lea
int3
pop
leave
jne
clc
cmp
mulb
incb
add
testl
ja
leave
jb
js
insl
andb
jl
insb
adc
pop
paddq
clc
cmp
popf
mov
push
out
shll
or
mov
rcll
icebp
clts
test
out
push
and
addr16
sub
rolw
jbe
xchg
out
push
dec
pop
pusha
inc
call
sar
xchg
sbb
fmuls
loope
out
inc
push
or
repnz
xchg
sbbl
dec
je
sbb
out
adc
xor
aas
pop
jno
sub
sbb
les
popf
popf
mov
out
das
cmp
jb
out
cmp
das
lock
sbb
jne
push
jae
mov
iret
mov
int3
subb
in
push
mov
fwait
cmc
arpl
std
mov
fdiv
cwtl
mov
into
and
push
dec
inc
dec
sub
icebp
xchg
xchg
imul
int3
and
sbb
lret
mov
lret
mov
xor
negb
push
shrb
fucomip
push
iret
lods
daa
call
push
or
jmp
test
stc
fbld
in
sub
lcall
mov
hlt
push
ljmp
addl
mov
mov
xor
or
stos
inc
cmpsb
cld
jle
jecxz
lcall
call
cmc
cli
mov
ja
add
pop
lahf
es
test
cltd
cltd
and
bound
iret
repz
into
jle
sub
jo
cmc
je
into
sub
jae
jns
mov
jb
jne
divl
mov
xchg
and
sub
and
or
test
addl
sbb
mov
int3
add
or
int3
mov
cmp
shrb
fildll
jmp
stos
push
jnp
imul
mov
aad
loopne
dec
xchg
cmc
pop
leave
mov
jg
enter
add
sub
jge
dec
repnz
into
test
adc
sub
mov
xlat
and
push
pushf
sbb
popa
popf
pop
faddl
add
outsl
test
sti
pop
mov
mov
and
into
sbb
push
or
insl
jae
add
push
stos
pop
sbb
xor
pop
mov
push
lods
pop
mov
or
or
mov
sbb
das
or
pop
push
dec
dec
cmp
mov
jo
sbb
and
fwait
xlat
out
test
mov
sbb
outsl
fsub
or
jg
xlat
fstpt
js
cmpsb
cmp
mov
aas
es
dec
cmp
and
xchg
repz
jnp
mov
lcall
shlb
movsb
rolb
jl
and
je
dec
xlat
frstor
xor
xor
mov
bnd
out
lds
mov
sarl
xor
jp
and
ret
xor
jnp
dec
or
xchg
mov
out
cmp
idiv
lock
and
jl
xchg
or
mov
xchg
jl
adc
out
push
ljmp
pop
pop
sarb
fimuls
popa
subl
setno
ljmp
jecxz
in
mov
xchg
mov
das
js
divb
out
mov
sbb
lret
inc
outsb
xchg
jno
sub
dec
stc
movsb
mov
ljmp
insb
pop
aad
pop
cltd
mov
mov
xor
jbe
xor
fstpt
mov
cmpsb
jo
mov
mov
dec
sub
mov
or
push
or
push
aaa
push
mov
mov
pop
inc
clc
mov
push
jmp
sbbl
inc
fdivrl
test
dec
clc
dec
incl
push
shrb
fsubs
xchg
mov
popf
rcl
stos
lret
or
sarb
pop
push
jge
int3
int
jbe
fnstenv
sti
and
popl
testb
stos
leave
test
fsubrl
push
test
sub
adc
mov
cs
in
or
insl
clc
cmp
cwtl
enter
mov
loopne
mov
in
pushf
cmpsb
call
dec
mov
dec
ret
flds
popl
in
imul
sbb
pop
test
ret
js
push
adc
xor
lcall
xchg
jns
sub
add
gs
xchg
push
rcll
bound
cmp
cmp
or
icebp
sbb
test
pop
xorl
imul
push
or
movsb
inc
and
xchg
cmp
in
enter
add
es
push
xor
xchg
ss
dec
je
imul
dec
scas
jp
lahf
out
pop
fdivr
xchg
outsl
outsl
movsb
lods
adc
ret
dec
inc
arpl
jo
inc
clc
loop
push
enter
adc
pop
inc
ror
cmp
sub
jecxz
sbbl
sub
sbb
sub
and
mov
fdivl
daa
lock
inc
out
cmpsl
dec
insl
cmp
fcoms
adc
mov
popa
cmp
stos
jle
jmp
pop
pop
addb
or
mov
and
ror
and
jmp
pop
stc
dec
lods
mov
das
in
cmpsb
jnp
jl
sbbl
dec
out
mov
cmc
stos
imul
pop
jno
out
loop
xor
out
pushf
ljmp
push
stos
pop
sub
cmp
clc
push
jbe
mov
push
rolb
jmp
aas
mov
ja
adc
insb
or
adc
xor
jl
inc
repz
xchg
push
arpl
add
dec
in
mov
cwtl
or
lcall
xor
call
jmp
dec
mov
cmpb
adc
cmp
jge
movsl
add
sub
push
pop
int3
sbb
outsb
cld
adc
sbb
jns
je
dec
ss
jle
push
jno
push
sub
push
and
inc
push
push
mov
fildll
sbb
ficomps
mov
aaa
pop
jge
in
push
xchg
dec
sbb
outsl
xchg
stos
dec
dec
pop
hlt
xorb
in
imul
and
cld
jecxz
mov
scas
or
notl
out
lods
dec
xor
mov
lret
sub
dec
lods
shr
dec
out
mov
add
dec
rolb
jecxz
loope
pop
icebp
sub
push
jns
movsl
pushf
stos
jne
and
gs
xor
in
mov
push
or
jne
jecxz
push
push
sahf
sub
jp
ss
ja
or
cmp
mov
mov
jp
call
cmpsb
insl
sub
mov
mov
pop
cs
cmpsb
cmp
push
xor
adc
mov
hlt
jae
daa
add
push
push
push
xchg
lret
rcrb
push
testl
jecxz
adc
or
and
cmpsl
mov
fcomi
lods
pop
jbe
pop
int3
insl
push
js
lds
sbb
push
and
into
adc
int3
pop
xor
mov
sti
shl
xchg
sbb
loope
push
nop
mov
inc
out
push
add
call
push
mov
lahf
sub
out
xchg
fstpt
sub
mov
push
arpl
push
repnz
and
dec
int
hlt
sbb
and
jne
into
mov
sbb
mov
std
je
sarb
mov
mov
xlat
in
imul
pop
insl
cmp
sub
mov
iret
push
mov
and
xchg
jge
enter
loop
sahf
cmp
loop
push
addl
lock
mov
lods
cmp
mov
pop
adc
cmpsb
sub
nop
push
and
xor
sbb
lret
mov
jo
push
mov
inc
shr
cmp
push
aad
push
pop
lock
fmull
lret
cmp
mov
jg
pop
cwtl
imul
pop
fdivl
and
leave
dec
jnp
out
lea
pusha
dec
ret
or
jns
dec
xor
fildl
das
outsb
push
leave
dec
sbb
cmp
cmc
cwtl
pushl
xchg
rcl
and
scas
cmpsl
mov
mov
cwtl
push
shlb
push
jle
jnp
out
test
inc
pop
sbbl
enter
cltd
cwtl
or
adc
int
scas
mov
xchg
subb
fcompl
sub
roll
add
enter
mov
xor
test
sbb
movsb
mov
mov
push
push
stc
mov
pushf
mov
mov
pop
sub
div
add
mov
sbb
js
fisubrl
pop
enter
pop
pop
std
inc
cmp
outsl
pop
dec
add
test
imul
gs
or
movsb
pop
les
mov
aaa
enter
pusha
insl
in
mov
sahf
enter
negl
mov
data16
std
stos
jecxz
mov
inc
imul
jg
push
pop
ret
test
mov
sbb
fcomi
jbe
cmp
sbb
mov
test
fmulp
stos
in
jg
mov
mov
sbb
cmp
dec
ds
and
sub
adc
addb
dec
mov
sbb
pop
dec
jp,pt
inc
or
push
jns
and
outsl
cmp
add
cmp
push
mov
out
or
aas
ss
adc
sbbl
push
lcall
jl
sub
push
dec
je
cmp
repz
xor
mov
mov
or
xchg
sbb
pop
pop
rcrb
fisttps
pop
push
lods
es
mov
push
insb
mov
push
es
sbb
jg
mov
shlb
pop
stc
sub
mov
jecxz
mov
mov
mov
popa
inc
imul
repnz
pop
cmp
push
sub
andb
add
scas
cmpl
mov
lcall
shr
adc
cmc
shrl
pop
movsb
in
dec
mov
fisubrl
pop
sub
add
adc
cmpsl
mov
inc
mov
or
dec
aad
loopne
lods
push
lea
and
mov
sarl
lea
sbb
xor
mov
jnp
mov
aaa
or
stos
cld
pop
test
ja
pop
xor
xor
push
shrl
addl
push
mov
mov
leave
jbe
mov
into
cmp
imul
sub
test
or
xor
lods
and
dec
push
and
loopne
or
pop
and
pop
cwtl
enter
add
mov
jecxz
dec
xchg
xor
std
pop
scas
push
and
cmp
mov
ret
mov
inc
cmpsb
js
lods
cmp
es
out
aam
inc
pusha
jns
mov
loop
add
pop
mov
inc
ror
add
lds
mov
mov
fisubs
add
hlt
mov
jmp
ja
test
stos
ret
jge
es
mov
push
mov
daa
hlt
pusha
xor
add
cs
jmp
ss
cmp
lcall
movsl
push
sbb
test
pop
call
xchg
or
push
adc
inc
fcomip
pop
lret
inc
or
in
dec
out
mov
ret
negb
push
pop
insb
cmpsb
cmpsb
inc
inc
out
addr16
xchg
pop
jge
adc
js
enter
lret
ss
sbb
mov
sbb
adc
lds
pusha
dec
cwtl
xor
popf
jmp
cmpsl
inc
push
xor
xchg
cwtl
and
cwtl
sar
xchg
ret
inc
xor
jecxz
sub
shrb
inc
lea
push
mov
adc
mov
xchg
mov
and
ret
xlat
xchg
inc
cld
notl
jbe
dec
jl
cmp
fisttpll
adc
xchg
mov
dec
push
cmc
sub
idivl
dec
and
pop
jmp
stos
mov
jno
data16
sub
cmp
and
lahf
cmpsl
jecxz
push
cmc
lret
xchg
sub
xchg
jge
push
jbe
push
xchg
xor
scas
movsb
add
mov
fucom
mov
mov
fldl
push
xor
mov
dec
stc
and
push
icebp
pusha
mov
dec
lret
mov
pusha
and
dec
ljmp
pushf
and
add
dec
mov
ret
mov
fimull
lcall
push
pop
jno
mov
mov
sbb
dec
adc
push
ret
mov
adc
fidivrs
cmp
push
pop
stos
xlat
pop
clc
test
iret
pop
add
imul
into
lods
push
inc
lods
lds
fsts
xorl
push
lock
shll
mov
aas
sarb
shll
data16
out
out
xchg
ds
mov
dec
test
push
stos
dec
rcrb
mov
sbbb
or
jnp
sahf
lods
mov
or
xor
jmp
fistpll
dec
adc
mov
lea
add
daa
and
je
and
icebp
cmp
xor
xchg
jbe
sub
rol
ret
xchg
jae
add
mov
add
mov
xor
lahf
sbb
and
inc
sub
loope
inc
mov
add
ljmp
dec
cld
or
imul
rcrb
xchg
xor
je
lcall
into
ret
jge
add
or
test
mov
and
test
out
or
push
push
dec
mov
xor
fld
xor
imul
out
sub
sbb
pusha
in
movsb
push
outsb
call
mov
outsl
pop
push
fs
xor
xchg
andb
push
dec
pusha
xor
push
repnz
mov
mov
cmovge
jmp
cmpsb
pop
popf
or
xchg
dec
call
xor
and
mov
pop
je
push
fildl
xchg
lods
jbe
push
aam
fcoms
dec
repz
repnz
mov
dec
out
sub
fdivrs
sbb
js
fidivl
add
scas
add
icebp
mov
scas
inc
insl
pushf
cmp
xchg
xor
jle
mov
mov
add
mov
sbb
fimull
fwait
pushf
cmp
dec
lea
dec
push
jmp
ret
xor
sahf
das
faddp
sbb
sti
nop
filds
inc
cli
inc
out
enter
or
imul
iret
std
pop
movsb
cli
and
out
sti
sub
mov
mov
cwtl
loopne
xchg
push
fdiv
shl
out
test
insb
mov
test
jo
pop
loopne
cld
sub
popf
mov
jb
inc
adc
mov
das
xor
push
or
shlb
pop
aaa
orb
add
jo
mov
push
jg
dec
inc
jmp
cmp
push
lods
out
ret
into
insb
jle
movsl
jp,pn
int3
adc
sub
loopne
iret
xchg
or
push
sahf
call
out
fmuls
addr16
stos
jns
enter
fwait
mov
jnp
mov
out
gs
insb
jo
add
imul
loope
pop
add
xchg
jnp
leave
inc
cltd
lcall
or
mov
das
sub
mov
repnz
mov
loope
push
sub
inc
xchg
lock
jge
or
push
xchg
sub
outsb
mov
andnps
mov
pop
out
flds
inc
fnsave
test
dec
daa
lds
fwait
xchg
aad
jmp
pop
js
mov
adc
dec
jns
movsb
mov
cmp
xor
roll
pop
pop
push
mov
repnz
adc
or
xor
cmp
pop
push
rcl
cmpsb
leave
sti
in
aaa
inc
mov
adc
clc
inc
outsl
movsb
movsl
clc
xchg
add
sub
lret
jb
mov
add
test
dec
push
lods
pop
daa
xor
sbb
lcall
pop
jb
repz
ficoms
imul
jo
nop
mov
into
js
cli
add
ja
jbe
js
in
adc
lcall
out
not
idivb
mov
adc
jno
push
mov
jnp
imul
mov
inc
sub
lock
fs
mov
scas
adc
sbb
sbb
and
xlat
pop
cwtl
fisttpl
mov
out
pushf
sub
jmp
out
cmp
add
mov
inc
sbb
ss
inc
adc
fcmovbe
or
dec
ds
imul
je
or
add
and
cmp
ljmp
xor
push
lret
mov
mov
jecxz
mov
jbe
add
xlat
mov
push
test
adc
or
mov
mov
add
jbe
adc
dec
sar
add
call
sarl
mov
inc
dec
and
ljmp
dec
fdivrl
sub
dec
dec
in
enter
into
mov
mov
popf
push
insl
mov
xchg
inc
and
dec
xchg
ds
mulb
imul
xorl
or
xchg
rcl
outsl
sub
inc
hlt
xchg
int
fnop
arpl
dec
mov
stos
inc
push
inc
icebp
xchg
shrb
sub
faddl
sub
pop
inc
aaa
push
jmp
push
nop
mov
dec
scas
mov
notb
js
xorb
sbb
es
pop
imulb
mov
mov
jle
lock
cmc
rcll
push
adc
fisttpll
add
or
jmp
add
or
out
pusha
les
and
mul
cmp
mov
les
dec
jl
hlt
test
scas
inc
mov
push
scas
andb
movsb
xchg
mov
insb
rorl
cmc
mov
int
loopne
push
adc
les
push
mov
scas
fidivs
cltd
sub
rol
idivl
cs
inc
cmp
sahf
clc
pop
jle
out
or
push
or
outsb
addb
or
test
cmp
lods
movsb
mov
je
xchg
xchg
inc
or
aam
cmp
lcall
mov
out
jmp
mov
in
mov
fld
push
std
mov
loop
push
cs
lahf
jl
mov
loopne
test
push
ret
in
or
push
sub
jmp
jmp
out
push
cwtl
fwait
clc
popa
jmp
cmp
cltd
mov
das
in
jne
loop
clc
out
mov
inc
mov
lea
mov
test
fildl
dec
mov
mov
pop
xchg
jmp
mov
mov
or
sbb
in
in
mov
pop
sti
and
sub
jp
xchg
and
daa
lock
cmp
mov
adc
rcrl
orl
mov
ja
stos
push
xchg
and
in
int3
ja
sbb
call
push
xor
ss
xchg
test
lcall
jbe
je
sub
les
jecxz
ret
lock
mov
dec
or
lret
jno
das
adc
inc
cmp
add
sub
mov
push
or
test
mov
mov
pop
sub
sub
into
mov
popf
cs
mov
cmpsb
pop
ret
ret
cwtl
cmpsb
or
xor
sub
jns
push
scas
lea
fidivs
movlhps
mov
jno
dec
adc
or
mov
push
movsl
fistl
inc
insb
int
test
and
pushf
lahf
dec
sahf
pop
inc
sbb
push
mov
aaa
sub
push
sbb
push
sub
cmp
mov
jge
addr16
cmp
xor
add
inc
jl
lods
data16
adcl
mov
mov
stos
mov
ficoml
sub
dec
push
mov
shrl
lock
xor
sbb
fcmovnbe
push
outsb
lods
dec
cltd
repz
aad
roll
andb
daa
xchg
jp
movsl
rcl
xchg
jbe
cmp
shl
xchg
test
pop
mov
jge
les
push
add
bound
leave
mov
and
mulb
mov
popa
add
orl
adc
aad
cmp
sub
xchg
pop
fistpl
stc
push
inc
jno
push
and
mov
jg
ja
test
sbb
scas
mov
xor
nop
push
in
imul
and
in
ja
sahf
addr16
mov
movsbl
sub
insb
mov
rolb
adc
push
mov
iret
adc
jmp
adc
imul
dec
inc
xor
adc
fs
mov
cmp
divl
or
cmp
cmp
outsb
lea
lea
das
mov
pop
adc
mov
sbb
nop
int3
mov
imul
ja
cmp
cmp
lock
or
mov
push
and
jge
shr
adc
ja
fistpll
packuswb
fcom
add
pop
pop
std
ror
testb
aad
movsl
cwtl
sbb
cmp
ror
mul
dec
push
cmpsb
mov
iret
dec
popf
imul
jne
push
cmpsb
movsb
ja
lods
jp
push
cwtl
dec
orb
mov
ja
xchg
jne
inc
out
mov
lcall
cmp
sub
adc
sub
loop
dec
xlat
mov
push
add
inc
xor
cmp
xor
int3
or
mov
out
inc
movb
insl
pop
pop
sub
nop
mov
fdivl
sbb
add
add
adc
push
test
cmc
bound
or
int3
popa
data16
mov
fidivs
jge
addl
shrb
push
push
xchg
es
aad
lock
mov
mov
test
mov
push
cmc
pop
dec
fucomp
pop
push
mov
or
xchg
or
arpl
and
pushf
xchg
mov
mov
mov
xchg
and
jo
inc
jecxz
rclb
mov
or
insb
lahf
notb
cmp
test
mov
pop
sarb
es
stos
mov
ds
ds
cmp
lds
shrl
pop
inc
inc
dec
mul
int3
shll
mov
mov
pop
add
cld
ss
nop
mov
aaa
loopne
shl
fs
jno
mov
xchg
arpl
inc
sbb
xorl
outsl
jmp
out
sbb
jns
and
sahf
xor
xchg
or
pushf
ror
pusha
dec
xchg
sub
sub
xchg
shll
ret
push
daa
push
daa
outsb
add
pop
hlt
shrb
adc
jecxz
sbbl
fcmovnbe
jecxz
xchg
fisttpll
jmp
xchg
adc
addr16
test
sub
sbb
sbb
popa
repz
pop
jl
mov
sub
es
mov
cs
and
sbb
mov
mov
shll
mov
nop
sub
sbb
out
lret
sahf
pop
sub
adc
dec
add
or
xchg
jecxz
adc
lds
sub
mov
clc
divb
out
cmp
jge
xor
mov
or
adc
cltd
pusha
sahf
mov
fs
ljmp
jno
dec
aaa
in
js
fsts
jle
mov
mov
icebp
add
push
out
test
cmp
in
mov
imul
xchg
mov
test
xchg
mov
cmc
xor
pop
lret
dec
pushf
mov
pop
xchg
cltd
paddsw
jg
popa
fsubp
movsb
push
dec
xchg
sarb
addr16
xchg
js
leave
dec
inc
fs
push
cld
xchg
ja
out
xchg
xchg
fisttpll
inc
call
or
minps
jl
xlat
insl
mov
loopne
ja
lahf
lret
or
or
pop
cmpsb
add
push
cmp
sbbl
and
insb
jno
inc
dec
xchg
push
push
cs
mov
jecxz
inc
stc
movsb
loopne
inc
adc
enter
mov
fbstp
sub
mov
lods
or
call
repz
ss
pop
sbb
xchg
in
dec
inc
inc
inc
pop
mov
sbb
cmp
loop
fldl
push
jae
pop
popa
imul
repnz
inc
lret
push
pop
push
lock
loope
cmpsl
test
xlat
mov
xchg
in
sbb
push
and
aam
xorl
fdivrs
das
das
lcall
push
push
jp
cmp
mov
test
mov
fcmovnb
add
mov
sub
cltd
sub
dec
xor
icebp
jne
mov
lods
cltd
pop
dec
pusha
shr
stc
es
mov
mov
add
dec
jo
cs
or
mov
ret
cmpsl
or
lea
data16
scas
cld
mov
cmp
mov
and
ret
loopne
push
mov
out
sub
test
sub
xchg
push
adc
imul
xchg
sub
mov
add
insl
rol
dec
xchg
cmc
xor
mov
adc
or
or
imul
inc
enter
cmp
into
push
aad
in
mov
add
xor
mov
mov
out
pop
cmpl
cmp
js
out
cmp
adc
inc
clc
ret
fsubr
out
cmpsb
jne
out
jno,pt
mov
pop
fucomip
inc
push
push
sahf
inc
in
mov
dec
imul
fs
adc
fs
push
outsb
adc
mov
lods
push
mov
stc
fstp
mov
movl
push
xchg
test
xor
lods
into
push
sar
mov
jmp
xor
pop
dec
mov
ficompl
test
lods
aaa
inc
add
scas
ror
bound
mov
loopne
insl
or
cmp
out
pusha
shrl
out
outsb
push
inc
clc
popa
pop
jo
ss
movl
push
sahf
and
fwait
jecxz
loop
imul
stos
inc
pop
and
inc
push
xor
sbb
inc
icebp
aaa
inc
mov
cmp
xlat
sbb
rcrb
push
jp
daa
cmp
testl
cmc
add
ror
cmp
pushf
xor
hlt
test
stos
dec
cmp
sti
enter
xlat
xlat
dec
cld
xchg
mov
jnp
stos
cvttps2pi
push
bound
or
xlat
ret
adc
mov
out
or
mov
in
xchg
jl
cmp
push
push
mov
dec
fadds
push
add
fnstenv
nop
ror
mov
scas
cmc
or
mov
cmp
xchg
js
int3
xor
cs
loopne
add
jb
mov
or
inc
aas
and
scas
push
add
out
xor
inc
push
mov
sbb
test
and
push
add
mov
js
call
adc
daa
popf
jl
jne
insl
add
xor
and
leave
popf
mov
or
out
inc
or
cld
adc
cmp
xchg
out
icebp
mov
or
xchg
adc
adc
pop
std
fdivrs
pop
add
in
mov
cmc
les
mov
outsl
sahf
cmp
pop
movsb
xchg
jle
aad
add
ret
mov
xor
loope
push
add
mov
arpl
std
xchg
mov
insl
and
and
int
push
mov
pop
rorl
mov
adc
push
mov
push
repnz
add
xchg
pusha
imul
mov
jle
push
outsb
jmp
fisubrs
sub
insb
cmpsl
pop
xchg
mov
pop
test
cltd
repnz
jb
and
call
mov
xlat
xor
xor
aas
jge
and
jge
xchg
iret
mov
pop
jle
stos
jge
mov
mov
xchg
or
bound
sub
fs
jp
mov
jmp
xor
andb
inc
sub
cmpsb
push
xchg
sbb
xor
xchg
loopne
mov
fwait
js
insl
xor
sbb
push
ss
ja
pop
aas
sti
stos
or
and
mov
and
fwait
sahf
aas
cmp
push
xchg
rclb
dec
sbb
dec
sbb
mov
mov
push
or
cmp
push
loop
mov
hlt
lcall
fiaddl
pop
stc
dec
scas
adcl
mov
ss
push
mov
aad
fidivs
test
mov
roll
loopne
cli
mov
xchg
aas
push
jae
cs
aas
mov
rcl
insb
outsl
btr
je
inc
cmp
mov
xchg
sbb
pusha
jmp
pop
mov
hlt
ret
pop
mov
arpl
outsl
lret
test
fistps
iret
add
cmpsl
int3
popw
out
stc
pop
or
mov
iret
inc
mov
leave
fwait
sub
push
sub
imul
out
push
xor
push
jae
in
xor
andl
xchg
incl
mov
mov
in
mov
jmp
jge
mov
arpl
jge
insl
push
mov
sub
rolb
dec
sub
das
in
pop
cmpsl
fdiv
lods
jo
sub
cmpsl
fs
mov
int3
jecxz
mov
and
iret
filds
shlb
movsl
cmpsl
mov
inc
int3
in
inc
mov
mov
pop
cmp
sub
repnz
in
in
mov
mov
movsl
test
mov
jne
insb
sub
mov
xchg
and
push
bound
push
adc
xchg
aaa
lahf
fnsave
xchg
inc
and
add
cmp
jecxz
in
punpckhwd
ret
clc
jo
fdiv
mov
shrb
push
int3
data16
std
xor
mov
int
cli
mov
jge
pushf
inc
sahf
dec
pushf
sbb
sub
addr16
mov
push
fnstsw
cld
mov
bound
jno
mov
jo
mov
cmp
jnp
mov
cmp
xchg
lret
divl
push
mov
addl
pop
adc
cmc
xchg
sbb
lret
imul
std
pop
cmp
push
xchg
arpl
cwtl
jge
lcall
fprem1
lret
mov
xchg
nop
push
fildll
cmpsl
inc
clc
push
test
mov
in
aam
cmpsl
dec
hlt
inc
pop
sub
or
lds
dec
mov
lods
xchg
adcb
iret
lods
sbb
mov
mov
lods
pop
inc
outsb
sbb
insb
hlt
jmp
hlt
sarl
test
or
xor
mul
int3
js
sbb
aaa
or
mov
jnp
popa
sbb
xor
push
repnz
pushf
out
lahf
mov
inc
mov
arpl
je
sub
hlt
scas
add
scas
fld
add
insb
add
mov
das
jl
gs
adc
cmp
jo
aad
aas
scas
loop
movsl
in
aam
mov
sbb
sbb
add
ss
jge
adc
test
push
sub
rolb
mov
jbe
mov
xchg
mov
std
pushf
and
xor
idivl
xorb
mov
dec
fwait
push
scas
or
push
outsb
mov
btr
popf
fdivl
inc
outsl
cmp
sub
jo
xor
sbb
out
into
dec
imul
add
testb
and
mov
sub
dec
imul
jb
sets
sub
lods
sub
sub
cwtl
imul
mov
dec
jbe
out
das
mov
xchg
xchg
lret
mov
dec
insb
push
mov
xchg
popa
je
sub
decb
cmc
das
rclb
out
mov
out
stos
and
es
stc
inc
mov
mov
xor
movsl
add
and
dec
jmp
cld
mov
pop
or
lcall
aas
sub
inc
pop
pushf
in
call
fidivl
and
mov
sar
movsb
ret
jmp
inc
mov
xchg
loop
lahf
clc
test
subl
fbstp
loopne
sti
subl
inc
mov
pop
jo
in
cmp
test
push
iret
lahf
or
mov
int3
push
and
jmp
sub
das
mov
xchg
dec
or
push
shlb
out
lahf
cs
sbb
fdivs
adc
xchg
and
addps
sub
or
sahf
in
mov
daa
fistl
cmpsl
sbb
cmp
iret
and
adc
adc
mov
sub
gs
cmp
or
mov
dec
shlb
ja
fistl
add
adc
xchg
imul
push
or
movl
movsl
push
or
int
imul
scas
and
aaa
test
sub
xlat
inc
rorl
roll
dec
mov
ljmp
dec
sub
jbe
dec
adc
pushf
xor
rorb
pop
mov
sbb
inc
inc
push
mov
js
push
add
orl
rcrl
dec
dec
lahf
xchg
std
cmp
sub
mov
aas
adc
test
adc
push
jno
mov
pop
inc
fcompl
jno
call
mov
imul
or
adc
mov
movsb
fnstcw
or
sbb
ja
mov
arpl
rcrl
add
add
aad
jb
cmp
js
lds
mov
aad
repnz
jecxz
add
stos
cmp
hlt
rep
xor
xchg
push
and
ja
xchg
cmp
jg
movl
out
cmpsb
pop
and
jecxz
pop
pop
pop
cld
es
cmp
mov
inc
jno
sub
loope
jno
popf
or
std
outsb
sub
and
jb
xchg
sub
movsb
in
iret
and
and
das
scas
mov
cmp
jo
test
mov
or
pop
pop
lods
aas
push
cmc
int
enter
ret
jp
add
mov
out
cltd
setae
arpl
fstpt
jns
pop
popf
std
xchg
xor
frstor
lods
inc
cwtl
in
lock
movsb
rep
arpl
popa
mov
push
loope
addr16
mov
xchg
push
lret
pop
and
hlt
lret
sbb
mov
xor
lret
arpl
lcall
mov
xchg
xchg
aas
fidivs
cmp
pop
mov
push
sahf
clc
scas
popa
loopne
xchg
call
test
loope
movsb
adc
shlb
mov
add
adc
mov
mov
outsl
dec
outsb
das
filds
dec
jl
jb
in
shll
xchg
sbb
jle
call
in
inc
lock
sbb
gs
mov
pop
lret
int
cltd
jb
rolb
mov
sbb
mov
inc
jmp
fwait
mov
or
mov
lods
push
jo
pusha
mov
push
aaa
xchg
imul
das
out
shr
movb
jb
pop
jbe
cmova
inc
mov
pushf
iret
inc
jecxz
movsl
fisttpll
outsb
lods
movsb
loop
in
out
dec
repz
clc
fidivrs
iret
das
jbe
arpl
and
movsl
jp
lods
ret
inc
movsl
jmp
sbb
xor
out
test
push
xchg
fmuls
loop
data16
jl
imul
inc
dec
mov
sbb
pop
mov
inc
xchg
shrl
repz
std
andl
jmp
push
cld
stc
addl
dec
fistps
mov
das
adc
test
lret
dec
xchg
mov
and
test
mov
aam
pop
arpl
insl
outsb
je
cs
and
jecxz
imul
jnp
nop
loope
mov
or
lods
jae
add
iret
std
lods
push
mov
loopne
jge
icebp
xchg
mov
dec
push
jno
sbb
mov
mov
stos
sbbb
mov
jnp
xlat
in
daa
mov
jnp
mov
loope
shrl
mov
mov
fwait
sbb
and
sbb
lahf
and
and
mov
jnp
lods
mov
push
jl
cltd
rolb
fildll
inc
lcall
jle
sub
ja
fwait
xchg
and
and
adc
addb
int3
adc
mov
maxps
or
push
fucomip
in
mov
cld
dec
or
and
lcall
and
mul
push
lahf
xchg
mov
addb
and
xchg
push
adc
loope
push
pop
shrl
mov
jg
mov
pop
mov
jge
push
das
inc
inc
adc
dec
data16
inc
scas
or
mov
add
call
test
pop
sahf
daa
pop
call
sub
jle
ljmp
xor
adc
lods
push
imul
gs
push
mov
ds
mov
gs
adc
mov
push
popf
orl
shrl
mov
jmp
or
mov
loopne
adc
insb
stc
cmp
lcall
out
inc
xchg
cmp
lret
jbe
andl
cli
sbb
mov
jo
xchg
xlat
mov
dec
sbb
or
cld
inc
jle
pushf
push
roll
jns
jl
and
imul
rclb
push
aad
push
mov
dec
je
fs
xor
add
or
mov
pusha
and
pop
sbb
pop
sar
sbb
movsb
cmp
and
or
cmp
sbb
icebp
dec
clc
jmp
lret
push
pop
push
scas
mov
sbbl
sbb
sub
sbb
out
nop
jbe
pushf
and
xor
loope
mov
mov
in
inc
test
popl
cmp
ss
pusha
mov
mov
mov
gs
adc
sbb
cltd
repz
inc
push
xchg
mov
in
sub
movsb
popa
push
stos
mov
mov
and
les
jns
repz
jbe
loop
mov
jmp
inc
ret
aad
decb
out
in
adc
sbb
lds
dec
push
es
das
cmp
bswap
push
pop
xchg
ljmp
mov
jo
cs
arpl
movsl
or
fldl2e
scas
mov
lds
and
cwtl
xor
fisubs
adc
leave
repz
popa
push
mov
dec
add
es
cld
arpl
inc
shl
adc
es
inc
lahf
sub
jl
pop
lea
mov
push
xchg
jo
cmpl
mov
scas
dec
push
dec
inc
mov
mov
mov
mov
add
ljmp
jbe
xor
imul
xor
popf
jge
sub
test
xor
adc
js
jno
mov
sahf
xlat
daa
or
xchg
or
out
pop
pop
sub
xor
loopne
pop
and
iret
lds
jae
mov
movl
nop
fstpl
xchg
dec
sub
loope
dec
movsl
pop
outsl
rorb
enter
xor
adc
movsl
pop
pop
ja
bound
fistpll
xor
mov
mov
aas
adc
cmp
movsb
iret
push
ret
sub
imul
dec
dec
cmp
insb
lds
push
imul
xor
out
arpl
sbb
mov
arpl
cltd
cs
mov
inc
lods
pop
lea
jne
pop
jmp
and
and
jb
lea
inc
loopne
mov
pop
dec
cmp
pop
nopl
fisttps
xchg
cltd
and
daa
fdivl
enter
and
inc
push
push
add
sbb
inc
cmpsb
flds
es
mov
out
out
les
imull
int3
jecxz,pn
sub
cmpsb
jb
and
fdivr
ret
push
lea
mov
lods
adc
inc
cmp
fildl
and
xchg
mov
push
mov
dec
xor
jge
shll
repz
les
inc
in
cli
popa
push
lret
adc
fbstp
push
or
outsb
scas
in
rorl
pop
xchg
test
sub
cmp
pop
push
hlt
sub
hlt
jmp
mov
xchg
cmp
xchg
test
pop
xchg
mov
mov
xchg
lret
mov
xchg
cmpsl
adc
mulb
pop
stc
push
leave
xchg
jae
inc
and
js
and
mov
subl
flds
ret
sub
out
mov
dec
insb
loop
cmp
sub
mov
stos
ror
xchg
aaa
and
sbb
and
insl
lahf
fsin
test
pop
xchg
shl
sbb
flds
out
fsubp
sbb
ret
jge
popa
or
into
dec
or
in
add
fnstenv
mov
or
pop
mov
or
call
neg
fs
scas
pusha
and
sub
call
es
fildl
insb
scas
lods
add
les
cmpsl
cld
les
loope
mov
xchg
std
jo
add
fistl
sbb
icebp
inc
pusha
dec
xchg
lock
faddl
dec
mov
daa
jno
sub
mov
loop
adc
lret
pop
iret
scas
jg
daa
mov
push
push
xchg
pop
lret
das
push
repnz
mov
push
mov
pop
pop
lcall
or
xchg
cmp
aas
outsb
mov
mov
adc
push
push
sbb
scas
insb
scas
sbb
std
iret
push
js
jns
inc
adc
cmp
fwait
cmp
mov
daa
cmpl
aaa
andb
fs
mov
fscale
push
xor
rorl
sub
jl
dec
pop
push
int3
xor
push
int
push
faddp
in
inc
inc
test
pusha
ja
icebp
movsb
mov
leave
mov
int3
fisubs
xorps
and
inc
sbb
jb
adcb
pop
stos
hlt
xchg
pop
jne
pop
pop
adc
and
mov
push
mov
inc
insl
sub
inc
push
mov
std
mov
jo
fdivs
xchg
push
inc
mov
sahf
xchg
pop
xchg
jo
mov
mov
dec
data16
lock
stos
aas
in
sbb
lock
pop
aaa
push
xor
subb
cmpsl
lcall
cmp
or
sub
aaa
push
mov
popf
out
xchg
push
push
adc
gs
dec
cmc
xchg
test
je
rcrl
sub
les
add
clc
insl
sbb
pop
dec
ret
sti
sbb
adc
inc
sti
adc
fiadds
xor
push
into
outsb
mov
rorb
mov
jns,pt
stc
ret
mov
cmc
mull
repz
popa
aad
jp
jmp
cmpsl
movsl
fbstp
stos
cs
cmc
jp
loopne
hlt
les
loope
nop
aas
repnz
xchg
es
pop
add
sub
rclb
lods
pop
adcb
aam
ss
sub
stos
pop
xor
sub
popa
push
std
out
push
mov
lret
pop
arpl
imul
fistpl
sub
cli
repz
cld
data16
ds
and
add
roll
insb
faddl
hlt
stos
iret
sti
cwtl
sbb
test
inc
dec
mov
shrl
xlat
inc
fdivrl
sub
mov
lea
or
subl
loop
mov
sub
push
insb
in
sbb
dec
inc
les
mov
push
out
ja
outsb
shl
push
xor
out
mov
mov
mov
inc
out
pop
inc
mov
jg
sarb
jae
pop
jns
add
test
pop
sub
neg
xor
das
xchg
addr16
cmp
mov
ret
rcrl
fcom
mov
pslld
sahf
pop
push
inc
push
enter
cld
call
sub
jg
jne
out
xchg
inc
xchg
cmp
pop
jae
cld
and
stc
lret
mov
in
es
mov
stos
bound
push
and
outsl
cmpl
imul
adc
mov
js
cmpsb
std
pop
pop
add
out
out
movsb
rcll
popf
js
xor
test
in
outsb
popf
jge
push
add
shl
pop
mov
aas
push
shlb
or
mov
outsl
add
and
add
scas
cmp
shll
stc
sbb
mov
cld
cmp
or
out
push
lcall
or
jae
add
xchg
push
pusha
sti
jae
mov
xor
pusha
lcall
mov
pushf
test
xor
divb
fdecstp
and
push
adc
xchg
push
jl
dec
inc
hlt
pop
xchg
lods
fs
movsb
pop
out
ss
dec
mov
add
cld
lds
pop
xchg
jge
push
fdivl
mov
and
xor
imul
jo
push
push
and
insl
mov
inc
loopne
inc
cmc
cmpsb
in
incb
jp
adc
lret
mov
and
dec
cli
xchg
sbb
or
lcall
or
lods
loope
dec
mov
add
adc
inc
add
dec
pop
aaa
fcoms
in
neg
repz
jne
icebp
loopne
or
dec
adc
fsubrs
push
adc
jle
jge
stc
mov
scas
lock
inc
xchg
test
lock
stos
or
in
mov
jb
cmpb
mov
daa
pusha
loopne
push
xchg
inc
cmp
mov
pop
shld
xor
mov
fdivs
pushf
adc
call
or
test
xor
adc
add
cld
mov
xor
pop
out
sub
cmpsb
pop
xchg
mov
dec
pusha
out
adc
jnp
sbbl
mov
fists
aaa
je
sub
cmpsb
aas
ret
ss
xor
adc
imul
push
rcrb
lret
fdiv
lea
dec
std
cmp
clc
pusha
push
scas
add
cmpsl
sbb
cli
jp
or
call
lods
sti
jo
sbb
add
and
xor
xchg
lods
xchg
adcl
mov
xor
lcall
push
mov
xchg
push
lea
testl
imul
push
fisubl
mov
rcll
arpl
aam
jbe
mov
lods
aas
push
mov
std
dec
mov
jne
imul
aas
mov
fdiv
dec
fsubrs
iret
push
push
push
lret
popf
lcall
push
pushf
xor
shrl
lds
popf
mov
icebp
cmp
out
popa
add
pop
aam
sbb
mov
lcall
loope
fnstenv
mov
pop
jle
adc
jmp
insl
mov
lret
rcrb
sub
repz
adc
iret
adc
inc
sub
sbb
insb
cmp
mov
arpl
pop
clc
scas
and
jp
out
and
shll
daa
sub
into
cmp
into
inc
push
hlt
add
fwait
sub
mov
add
sub
daa
cmp
adc
lret
call
cmc
xchg
mov
orb
call
scas
lds
out
cmpsl
aaa
lcall
iret
sub
and
xor
dec
inc
adc
xor
cmpl
jmp
sub
mov
xchg
lock
ja
sbb
push
jns
imul
mov
xorb
inc
es
cld
ljmp
dec
out
inc
aaa
push
int3
ret
or
push
es
in
sti
mov
js
mov
out
lods
lret
jnp
addr16
repz
mov
rcr
into
pop
in
cld
cmpsl
divb
cmpsb
cmp
addr16
xor
ret
xor
mov
incl
test
lock
stos
cmp
cmp
cmp
push
mov
adc
cltd
add
add
mov
lock
xor
fcoms
jo
dec
sub
push
cmp
scas
sbb
dec
xor
and
jno
addb
test
lods
rcll
xchg
push
cmp
sub
test
ja
xchg
inc
fildll
rcrb
pop
or
mov
pusha
lods
inc
je
cmp
lods
pusha
cld
pop
xor
test
mov
std
mov
and
dec
and
dec
pop
sarb
or
fwait
sbb
in
jno
inc
mov
jnp
insl
imul
adc
lahf
xchg
jle
add
add
hlt
mov
xor
lret
fistl
loop
xchg
push
cmp
cmpsb
stc
addr16
mov
xchg
cmp
nop
cmc
push
inc
ret
mov
enterw
jo
xchg
push
lock
mov
iret
xor
enter
repz
pop
pushf
sub
inc
dec
into
sti
loope
lods
adcl
cwtl
push
pop
adc
in
jmp
adc
push
test
stos
or
lret
loopne
cmc
sar
nop
movsl
sahf
ss
daa
mov
mov
out
sbb
in
aad
xchg
inc
pop
mov
cmp
pop
movsl
push
dec
inc
cmpsb
enter
or
push
push
inc
lods
sti
sub
out
add
push
cli
xchg
lds
add
push
pop
and
sub
addb
cmp
lret
and
setno
icebp
or
mov
jbe
push
or
int3
adc
testl
test
test
pop
add
pop
out
sub
jge
adc
outsb
mov
and
cs
push
xlat
pop
shrb
mov
jg
jle
inc
jns
jo
inc
loope
in
repnz
sub
cmp
lret
test
ja
pcmpgtw
sbb
cmc
rorl
movsb
push
push
imul
clc
and
mov
loope
imul
clc
fisubrl
outsl
inc
sbb
insl
inc
jnp
nop
imul
mov
lods
test
lea
cmpb
mov
shll
pop
xor
fidivs
and
nop
loopne
lds
fdiv
iret
sbb
push
bound
push
push
repnz
push
cmp
mov
ret
es
push
jne
aad
sub
gs
adc
fstpt
loop
add
sub
push
int
mov
jecxz
mov
jnp
std
js
inc
cmc
shl
jecxz
mov
roll
movsl
mov
rcr
xchg
addr16
pop
rorb
dec
push
xchg
cmc
pusha
mov
inc
xor
sub
sbb
imul
movsb
mov
leave
cmp
js
add
icebp
test
xor
fldt
jbe
shrl
lods
aas
and
mov
ds
and
jne
mov
out
mov
xchg
insl
push
jmp
fisubl
je
cli
xlat
daa
sarb
in
outsl
into
add
repnz
push
mov
int
aam
mov
sbb
cmp
add
inc
jns
xor
dec
sbb
mov
idiv
push
sbb
xchg
adcb
mov
and
inc
scas
nop
enter
ret
hlt
scas
add
sahf
insb
xchg
cmp
in
icebp
cld
sub
push
scas
dec
iret
jl
enter
sbb
stos
hlt
and
inc
jb
push
testb
hlt
push
insb
jmp
cwtl
push
sahf
push
sbb
sbb
movsl
xchg
lret
mov
sbb
add
cmpsb
test
adc
insl
aad
imul
mov
cmpsl
jo
xorb
rorb
mov
mov
test
mov
add
cmp
inc
cli
xlat
ds
cli
sub
mov
jns
in
test
inc
into
jg
insb
xchg
data16
test
in
mov
push
pusha
sarb
rclb
dec
and
gs
insb
clc
call
xor
lcall
shll
add
js
call
or
arpl
push
mov
sub
in
cld
pop
add
cmpsb
mov
pop
sub
fldt
stos
pop
inc
movsl
in
jb
fdivp
daa
cmpsl
and
jnp
lahf
iret
addr16
aam
sub
xchg
lret
jmp
popf
stos
mov
hlt
cmp
inc
cmp
jbe
jb
push
icebp
ret
movb
fidivrl
pop
push
cli
aaa
dec
jnp
inc
cs
in
sbb
and
mov
sub
scas
add
sahf
das
pushf
aaa
in
fcmovnu
call
sbb
pop
aam
in
fstpl
or
jg
mov
mov
popf
mov
mov
cli
mov
movsl
push
cmpsl
mulb
cmpsl
mov
sahf
dec
cmp
sahf
lods
push
inc
insb
addr16
and
fs
cs
jae
sbb
insb
data16
outsl
adc
aas
pop
out
testb
insb
sub
sbb
iret
jle
inc
aas
insb
mov
stos
dec
cmp
test
or
sbb
shll
ja
loop
test
mov
xchg
jge
jno
cmp
iret
mov
inc
add
adc
push
repz
or
push
shll
lret
cmp
adc
sub
jns
pop
lds
mov
mov
fwait
stc
cltd
mov
dec
rclb
dec
repz
std
push
jecxz
push
add
lahf
and
inc
xor
sub
lretw
clc
loope
inc
jbe
jmp
lahf
sbb
mov
scas
sub
enter
mov
mov
neg
ljmp
scas
scas
mov
sub
and
lcall
rcrb
arpl
pop
scas
aas
rcrl
in
clc
daa
jmp
jae
xor
lret
and
ds
stos
lods
out
pop
cmpl
cmp
pop
int3
lcall
add
loop
jmp
lods
push
adc
sbbb
in
mov
xor
cmpsb
jge
ds
mov
xchg
push
push
sbb
cld
xor
xchg
stos
arpl
cmc
fs
xor
jge
leave
mov
jmp
inc
xor
dec
leave
mov
jne
add
xchg
loopne
xor
leave
push
loop
insl
sbb
push
pop
adc
mov
mov
inc
jp
pusha
loope
leave
mov
mov
in
mov
adc
jns
scas
shlb
adc
xor
jp
pop
inc
pop
test
cmp
jbe
push
jno
jp
mov
je
js
mov
cmp
dec
inc
test
pop
loope
ds
adc
add
mov
aaa
ror
mov
out
cs
push
loopne
aad
ds
enter
and
mov
je
ficoms
mov
inc
sbb
push
jecxz
ss
pop
sbb
push
jne
sub
movsb
or
lods
and
in
mov
lret
add
es
pop
mov
pop
aaa
jecxz
cli
out
lcall
mov
insb
cmc
adc
sub
dec
cmp
mov
je
dec
rcr
and
cmp
mov
mov
sbb
pop
repnz
mov
aas
fsts
cmp
xchg
lds
push
sub
test
pop
sub
mov
fdivr
into
arpl
subl
mov
jl
xchg
hlt
jbe
pop
mov
mov
aaa
adc
mov
push
pop
jae
or
mov
mov
jg
mov
adc
cwtl
imul
mov
cmc
ja
inc
test
add
or
jg
int3
pop
cmp
adc
sub
repz
pop
push
shrb
xchg
and
aad
mov
dec
sub
and
xchg
dec
aaa
loope
fwait
lea
cwtl
xchg
in
dec
jno
scas
jbe
fidivs
sbb
jle
in
int
dec
out
lock
repz
or
aas
dec
test
push
add
lods
adc
pop
in
iret
sti
cmp
lods
es
icebp
movsl
stos
or
mov
icebp
xchg
mov
mov
xor
mov
pop
popf
adc
loop
hlt
xchg
or
aam
dec
sahf
ljmp
clc
fstps
cld
pop
lret
sub
dec
sbb
or
or
jae
outsb
cs
sbb
ret
mov
icebp
jne
jl
xor
in
fnstsw
stos
jne
je
dec
xchg
imul
adc
mov
shrl
bound
ffreep
mov
arpl
sbbl
push
push
lahf
fisttpll
les
mov
or
pop
out
mov
cs
xlat
mov
imul
inc
mov
jg
rcrb
push
dec
or
sti
xor
popf
repnz
icebp
adcb
clc
and
sub
or
mov
mov
xor
pop
repnz
faddp
mov
repnz
sub
mov
or
rol
in
fsubl
mov
dec
mov
out
pop
push
mov
mov
push
lock
imulb
xor
mov
data16
es
mov
add
decl
mov
rcll
js
aam
dec
adc
aaa
jp
sub
repz
je
hlt
leave
and
jno
sbb
loopne
jns
mov
outsb
movzwl
add
shlb
stos
adc
insl
and
inc
pop
pop
test
ror
sbb
cli
jne
cs
movsb
or
addl
sbb
push
inc
cmp
mov
inc
sbb
loope
out
xor
and
cwtl
pop
fwait
loopne
cs
in
js
cli
xchg
push
push
in
jl
cmp
mov
pop
or
sub
jg
insl
jnp
bound
push
mov
leave
mov
and
sub
and
push
cltd
loopne
mov
mov
mov
loop
mov
pop
das
mov
and
mov
pop
dec
sbb
mov
push
ds
cmp
fidivs
and
inc
xchg
ret
push
and
lret
imul
lahf
dec
fisttps
mov
sub
ret
xchg
pop
jp
add
das
adc
icebp
adc
mov
jns
lods
mov
cmpsb
add
dec
movsb
loop
xchg
xchg
sarl
add
data16
out
out
xor
pushf
aam
xchg
xor
mov
cld
add
sbb
and
push
into
jp
mov
scas
pop
xchg
mov
daa
push
ror
jnp
or
adc
ljmp
fldcw
push
out
sbbl
cmc
fldcw
mov
inc
inc
xor
lock
imul
xchg
push
dec
mov
pop
ds
jmp
push
push
clc
mov
jb
mov
jb
sub
xchg
fsts
stc
cmp
sub
loopne
jg
pop
iret
xor
js
inc
push
add
adc
out
push
lret
mov
push
nop
adc
enter
mov
into
insl
daa
gs
xor
and
or
adc
mov
add
push
shll
sub
inc
clc
seto
mov
jb
and
push
imul
cld
ret
mov
inc
cmp
ss
int3
subl
jb
mov
int3
stos
sbb
rcr
lods
pop
inc
les
add
adc
mov
out
rcrb
jge
cmp
mov
pop
mov
mov
ja
and
call
icebp
imulb
cmp
loop
ljmp
or
stos
jle
testb
fwait
jl
cmp
xchg
shl
xchg
loop
std
cmpl
pushf
std
iret
cltd
neg
fbld
pop
inc
fbld
int
lea
test
lret
lcall
stos
sbb
dec
lea
fildll
nopl
shrb
push
mov
pop
imul
ficomps
jo
pop
push
mov
xor
cmpsl
push
scas
cmp
in
sbb
leave
jae
std
rol
jne
cmp
lods
in
mov
rcr
shrb
lods
pop
sbb
decl
mov
stos
xor
mov
mov
nop
stos
xchg
adc
push
in
into
mov
and
xchg
roll
lret
adc
jmp
insl
push
mov
rcrl
imul
shl
pop
inc
outsl
push
adc
stos
xlat
repnz
lock
fadd
sub
push
jecxz
insb
enter
ret
in
jle
jle
repnz
mull
lret
jnp
leave
dec
mov
lcall
loope
cli
dec
push
cmp
lret
xor
jge
push
sub
sbb
mov
jne
cmp
dec
sahf
jns
sbb
sbb
pop
test
cmpsb
les
pop
xor
pop
mov
mov
out
mov
lret
cwtl
out
scas
and
movsl
cmpsl
pop
out
orl
aaa
or
sbb
jbe
cld
dec
add
mov
and
mov
xlat
pop
lret
add
sarb
aaa
pop
lods
stos
cwtl
neg
mov
cld
dec
and
out
lods
sti
inc
pop
xchg
mov
jmp
cmp
jbe
xchg
dec
cwtl
pop
rol
cmovae
ss
repz
bound
fwait
mov
push
mov
std
dec
mov
xor
cwtl
mov
or
out
arpl
outsb
pop
xor
pop
lcall
push
pop
xor
cmp
fisttps
imul
cmp
lods
push
ret
mov
test
push
test
jle
mov
cwtl
add
aas
scas
std
hlt
adc
adc
jns
lret
insl
push
cwtl
xlat
sub
mov
sub
repz
jnp
lahf
in
pop
push
ljmp
arpl
inc
aaa
out
out
xor
test
or
aam
shrb
adc
mov
jge
or
roll
mov
push
add
sub
fisttpl
rcl
sub
jp
pop
rorl
aam
mov
mov
sbb
mov
insl
fisubs
dec
lcall
add
data16
popl
pop
shrl
sub
insb
jbe
jae
or
dec
out
stos
xchg
test
ja
jg
je
pop
xchg
and
lea
push
aaa
sbb
fidivrl
mov
adc
out
cmp
inc
cmp
inc
mov
jle
cmpsb
dec
sarl
testl
mov
outsb
or
mov
in
fcmovnbe
cmpsb
scas
in
in
mov
xor
push
inc
movsb
mov
test
push
mov
in
mov
cmpsl
cmpsb
subl
cmpsl
pusha
add
sub
loope
outsb
inc
lret
push
lret
aaa
popf
inc
cltd
xchg
inc
fdiv
je
mov
xchg
mov
sub
in
stos
lahf
data16
pop
mov
loopne
idivb
std
stos
aam
mov
aad
movsb
out
stos
cmp
and
cs
cltd
sub
loopne
hlt
les
mov
divb
add
pop
dec
and
cmp
in
pop
pop
lret
mov
and
mul
xchg
jg
dec
ret
push
inc
pop
mov
fistpl
pop
ljmp
xorl
mov
or
loope
push
aaa
fdivl
push
sub
or
mov
sub
test
lock
test
mov
mov
sub
scas
out
jbe
add
xchg
int3
inc
fmuls
cltd
xchg
push
pop
jle
pop
jl
mov
and
lds
cmp
test
mov
gs
inc
jp
mov
repz
push
pop
mov
into
mov
push
xchg
hlt
cld
mov
test
shll
out
out
adc
mov
aad
push
inc
stc
jge
lahf
xchg
mov
int3
hlt
xor
jmp
jge
jbe
and
pop
jp
insb
push
and
inc
pop
stos
pop
fwait
ret
jp
out
or
cld
into
cmpl
push
xorb
rolb
rcl
sti
test
aam
cwtl
out
inc
dec
loope
out
jb
fcoml
inc
fnsave
inc
mov
xchg
pop
inc
add
testl
jmp
fnsave
loop
add
repnz
sub
rolb
jl
sub
mov
cmp
inc
das
push
or
pusha
cld
lcall
jo
cmp
jp
mov
aad
lret
cwtl
inc
ljmp
add
rol
xor
bound
mov
or
mov
cmp
jge
insl
sahf
pushf
rorl
aam
cmpsw
and
orb
enter
fsubrs
mov
movsb
pop
push
pop
mov
jge
xor
add
add
stos
fwait
adc
nop
test
sar
push
mov
push
fmull
sbb
in
sbb
repnz
cmpsl
jl
shll
dec
int
xchg
cmp
cwtl
in
add
jne
call
repnz
push
lahf
mov
mov
lea
xchg
scas
mov
jbe
push
ds
push
mov
popf
cmp
pop
sub
fcoms
sbb
arpl
lret
test
or
inc
cmpsb
es
enter
ret
out
pop
nop
mov
lcall
sbb
movsb
jbe
fildl
ljmp
push
pop
gs
dec
psubw
mov
fimull
and
mov
insb
hlt
and
inc
xchg
or
and
mov
iret
in
xchg
mov
loope
fcom
cmp
popa
add
test
outsl
jmp
mov
mov
sbb
into
cmp
loope
cmp
into
outsb
mov
inc
stos
cld
mov
out
sahf
ffreep
js
repnz
xchg
cltd
inc
dec
lock
mov
or
in
jle
mov
sbb
xor
scas
adc
icebp
out
loopne
pop
repnz
pop
push
xchg
and
and
dec
jns
jge
sub
adc
cmp
cmpsl
adc
stc
sbb
xor
adc
fcoml
pop
rcr
mov
repz
inc
sub
sub
fcom
and
js
pop
pop
in
addr16
mov
jnp
loope
cmpsb
fcomip
pushf
xchg
bound
pop
int3
aad
inc
mov
jp
into
bound
jno
leave
lods
lcall
and
dec
or
inc
mov
cwtl
popa
jnp
sbb
mov
mov
mov
ret
jmp
je
insl
ret
aas
fs
xor
hlt
cltd
or
push
insl
adc
fdivrp
pop
add
fstl
flds
fisttpll
sti
and
dec
mov
mov
enter
cmp
sub
std
jne
les
dec
inc
dec
fsubp
pop
and
popa
pop
lcall
mov
movsb
test
and
push
cld
imulb
jge
mov
repnz
dec
mov
add
or
stos
sbb
fnstsw
sub
push
add
int3
push
pop
test
pop
mov
mov
push
bnd
and
ja
inc
lock
add
add
ljmp
jecxz
lcall
repz
shrb
push
sub
push
jl
xchg
jl
cmpsb
jnp
push
into
cmc
pop
mov
dec
lods
xchg
clc
pop
inc
xorl
pushf
pop
inc
and
and
cmp
mov
add
push
jp
mov
dec
and
les
mov
mov
sub
xchg
out
jne
or
test
mov
push
push
cld
es
sub
or
shr
mov
push
xor
sub
mov
jl
and
adc
push
movsl
mov
push
and
push
pop
adc
sbbl
inc
add
mov
mov
cmpsl
dec
or
dec
xorb
xchg
sbb
mov
pop
lea
inc
jo
lret
outsl
xchg
jp
mov
int
pop
sbb
pushf
js
sarl
fstl
fsubp
mov
and
add
imul
mov
ficomps
push
adc
mov
inc
cmp
movsl
fndisi(8087
adc
out
push
jae
iret
inc
jle
lods
pop
mov
out
addl
andl
addb
inc
and
pop
xchg
and
xchg
data16
add
xor
add
rolb
jl
out
pop
and
jle
bound
add
lret
popa
jne
push
je
popa
sub
push
and
int
scas
xchg
xchg
arpl
add
rclb
loopne
jecxz
js
add
jmp
xorb
movsl
popf
out
mov
sub
jmp
test
adc
cld
ret
jo
pop
imul
into
push
xchg
negl
mov
inc
add
in
jo
hlt
cli
mov
push
popf
rcrb
scas
jmp
mov
pusha
mov
mov
repnz
cmp
add
stos
fidivrs
rcr
pop
lcall
mov
test
mov
or
test
jge
inc
cld
xor
cltd
cmp
mov
mov
mov
mov
mov
sti
imul
fstl
push
ds
shr
mov
aad
adc
lds
int
sbb
adc
cli
arpl
bound
dec
mov
enter
sub
mov
in
cmc
or
add
sbb
mov
push
fadds
fidivs
push
js
in
shll
fdivrs
das
lods
clc
inc
mov
outsl
sbb
sub
add
jmp
pop
in
inc
repz
cmpsl
pop
repz
inc
mov
mov
mov
mov
rorb
mov
push
add
leave
sbb
aaa
mov
scas
in
rcl
lods
stos
push
adcl
mov
shlb
xchg
inc
xchg
fiaddl
rorb
outsl
xor
pop
push
mov
ret
xchg
or
ss
jge
xlat
mov
xchg
flds
mov
dec
xchg
test
mov
dec
push
mov
inc
cmc
pop
dec
out
popf
clc
in
rcll
inc
jge
lods
loop
or
jp
dec
sbb
repz
int3
adc
xor
mov
stos
in
pop
test
cmp
outsl
adc
xor
and
adc
or
mov
and
dec
push
add
aaa
insb
dec
pusha
xor
and
ds
sahf
leave
xchg
cmp
ss
mov
cmp
and
push
cmp
push
adc
icebp
push
dec
mov
mov
cmp
dec
ficomps
aam
sbb
lods
add
dec
inc
enter
inc
out
sub
inc
adc
add
jmp
and
jmp
unpcklps
flds
mov
xor
cld
imulb
mov
orl
inc
pusha
mov
jo
outsb
ljmp
cli
fdivl
mov
mov
sub
xor
dec
xchg
push
xchg
jb
mov
pushf
lahf
adc
adc
mov
inc
mov
shrl
sub
cmc
add
andl
xor
and
sti
fsub
je
xchg
and
lods
xor
arpl
sub
adc
ds
ret
test
mov
jne
ljmp
in
jb
movsb
arpl
mov
movsl
dec
jl
bound
out
pop
lods
lock
sub
movsb
cmp
xor
jnp
push
mov
popa
cmpsl
push
fisubl
in
adc
xchg
shlb
sar
pop
out
jle
mov
rcr
and
inc
inc
pop
pusha
in
les
xor
mov
inc
cmpb
mov
mov
xchg
flds
cmc
mov
cli
pop
xor
into
ret
outsl
aam
inc
add
jecxz
out
addr16
gs
add
testl
or
int
ret
push
out
insb
sbb
and
dec
cmp
xor
jbe
loope
lahf
mov
xor
mov
cmp
ja
gs
mov
mov
push
inc
loope
dec
data16
mov
fs
test
stos
cs
cmp
and
adc
stos
xchg
and
cmp
in
das
and
int
fs
lods
cs
stos
shlb
xchg
paddsb
cwtl
add
and
xchg
adc
imul
leave
inc
push
xchg
cmc
push
mov
mov
mov
adc
xor
imul
mov
out
mov
aad
pop
dec
mov
imul
shrl
popf
mov
mov
or
dec
xor
or
lcall
out
xchg
flds
repz
fs
in
adc
cmc
sbb
into
movzwl
xor
push
scas
inc
sahf
add
mov
mov
xor
xchg
pop
adc
mov
xor
xor
push
push
inc
jns
aas
mov
loope
mov
adc
or
jmp
cltd
adc
mov
fwait
pop
fmuls
xchg
sbb
fdiv
lret
cmp
movsb
sbb
lock
rorb
test
cli
mov
int3
and
add
jmp
icebp
or
fstl
adc
sbbl
adcl
popf
je
jne
push
movsb
add
shrd
inc
xlat
cmpl
sbb
cmp
sbb
fnstenv
sbb
daa
out
out
mov
lods
ficoms
and
ja
or
and
mov
dec
cli
lods
jle
jne
sub
notb
jg
dec
sbb
xchg
enter
pop
xchg
lods
ja
mov
cmp
xchg
lret
pop
imul
push
loope,pn
popf
in
cmp
push
add
adc
loop
pushf
lcall
mov
mov
jg
mov
iret
js
out
or
mov
rcl
std
fs
sub
mov
mov
pop
cld
push
ds
jne
orl
out
jae
sub
xchg
adc
rorl
rolb
jbe
jl
mov
jmp
pop
cmpsb
in
ret
out
jge
outsb
in
nop
popa
xchg
aaa
cmp
flds
enter
mov
jmp
sti
cmp
mov
inc
je
cmpsb
or
sbb
ja
push
outsl
or
jns
mov
cmp
jb
subb
dec
aam
test
push
or
mov
out
xor
test
pop
mov
add
jne
mov
aad
jp
aaa
xchg
sbb
inc
fcmovu
ss
mov
cmp
inc
shrb
and
es
add
mov
or
add
mov
subl
rolb
sbb
cli
mov
adc
xor
mov
mov
imul
mov
adc
inc
xchg
pop
shlb
es
or
pop
sti
add
and
imul
loop
stos
icebp
xor
push
pushf
jns
in
shr
dec
subl
mov
sbb
push
pop
xchg
pop
icebp
push
daa
mov
add
inc
nop
test
jo
repz
in
push
daa
or
mov
push
scas
idivl
jmp
sbb
mov
cmp
cwtl
or
push
mov
jg
jl
add
cmp
enter
push
mov
adc
xor
lods
pop
jb
mov
mov
adc
adc
maskmovq
divl
sub
xor
addb
pop
aas
sbb
mov
and
fnstsw
sub
cwtl
push
shrl
sti
loopne
shrl
rorl
jbe
xchg
push
mov
sbb
repnz
dec
stos
negb
xor
push
sub
sar
shrl
add
xor
lods
iret
test
test
pusha
dec
dec
lea
xlat
pusha
mov
pop
rol
inc
push
call
sbb
lock
cmp
fnstenv
inc
jo
int
int3
popa
adc
and
pop
pop
sahf
sbb
dec
sti
mov
inc
dec
data16
pop
dec
into
repz
adc
imul
mov
push
xchg
rorl
mov
hlt
jl
int
divl
or
sub
push
aaa
in
jle
pop
push
mov
insb
repz
cmp
in
fbstp
xor
jb
outsl
xchg
jbe
inc
insb
shrl
rcrb
xlat
std
pop
add
roll
push
ljmp
sbb
movsl
out
lds
lods
pop
fmuls
lea
push
pop
jmp
rolb
push
ret
cmp
fidivrs
jle
xor
pop
incl
ljmp
out
aad
mov
into
dec
aad
mov
movsb
mov
pop
imul
jae
add
cmp
rol
in
int3
or
rorl
je
in
pop
icebp
movl
sub
out
pop
daa
inc
lcall
enter
test
add
pop
insb
add
mov
cltd
movb
dec
xor
xor
mov
arpl
sbb
or
mov
jp
popa
sbb
push
push
inc
lds
inc
mov
push
rcll
adc
shrb
mov
sub
and
fsubrs
mov
rclb
ljmp
jne
rclb
dec
les
icebp
xchg
insb
sbb
loope
push
mov
xchg
cld
repz
mov
mov
in
cmc
in
xchg
xor
pop
fimull
mov
fxch
lahf
sbb
xchg
fwait
mov
test
test
bound
repnz
fistps
sbb
mov
mov
sub
xor
inc
mov
popa
test
fisttpll
ret
nop
pop
or
fcmovne
and
repnz
inc
pop
andb
mov
mov
mov
mov
xor
dec
xchg
jno
in
pop
push
lods
or
xchg
adc
cmp
jno
stos
and
arpl
cmp
cwtl
and
les
cmpsl
in
jl
xlat
loope
jb
cmp
icebp
clc
xor
adc
xor
pop
push
in
pop
es
pop
mov
inc
push
pop
push
push
add
rol
mov
and
pop
add
lret
cmpsb
popa
mov
cmc
pop
bound
stc
faddl
out
test
in
imul
and
pop
outsl
into
xorb
sbb
dec
gs
push
daa
xchg
lods
sbb
mov
lock
cmp
outsl
hlt
or
test
mov
or
addb
mov
sub
out
aam
mov
stos
or
in
mov
loop
or
pop
inc
dec
add
mov
mov
enter
or
fisubrl
inc
pusha
jg
jmp
push
jns
and
push
mul
and
inc
hlt
outsl
ja
cmp
shr
and
inc
and
mov
pusha
xchg
sbb
lock
testl
inc
addr16
cmp
mov
lods
je
sub
jnp
mov
in
xor
pop
outsl
adc
xlat
sub
jge
xor
pop
cmpsl
inc
pop
popa
or
adc
push
outsb
mov
adc
push
jns
popa
cmp
fnstcw
lds
popa
and
repnz
lahf
pusha
stc
nop
inc
inc
push
and
pushf
mov
ss
daa
mov
scas
push
xor
pop
scas
mov
pushf
mov
bound
fstpl
fnsave
data16
dec
ret
lods
cmp
fsts
push
xchg
sub
pop
stos
dec
dec
jle
insl
sbb
mov
stos
fdivr
sub
mov
cmp
xor
hlt
jbe
outsl
mov
jo,pt
insb
sbb
sahf
mov
insl
out
or
jb
mov
test
pop
push
inc
sahf
out
mov
pusha
pop
pop
pop
mov
repz
hlt
sub
gs
out
jb
xchg
daa
stos
sahf
mov
into
and
jae
and
cli
iret
iret
push
adc
and
leave
push
inc
fwait
fwait
dec
fstl
dec
cmp
loop
push
sub
adc
out
and
push
xchg
push
scas
mov
dec
in
ret
and
outsb
push
cmp
push
mov
mov
cmc
xor
xchg
and
inc
xor
test
pushaw
aas
fidivl
xor
lea
mov
pop
shll
icebp
gs
mov
or
repnz
in
outsl
inc
sub
or
jg
mov
fsts
sbb
mov
icebp
pop
mov
js
push
shlb
xor
outsb
pop
mov
or
shlb
mov
iret
mov
ds
cmp
xor
pop
movsl
fidivrl
inc
in
jp
mov
dec
cli
mov
out
sub
dec
aas
loop
outsb
int
dec
imul
test
xor
dec
enter
dec
or
lret
outsb
pop
mov
mov
inc
cmpsb
pop
pop
jo
jb
push
cmp
inc
fcmovu
mov
shlb
or
pop
adcl
push
cltd
mov
das
inc
dec
jne
cmpsb
pop
test
mov
or
std
sbb
scas
lods
mov
xchg
inc
add
loopne
aas
aam
add
pop
xchg
int3
sbb
mov
inc
push
pop
and
mov
mov
or
push
test
mov
jns
push
pushf
adc
aaa
push
ficomps
and
cmp
js
and
add
add
pusha
adc
xchg
cmpsl
push
dec
xchg
bound
add
inc
mov
mov
dec
and
aad
fcompl
leave
push
imull
mov
out
fs
pop
dec
lds
mov
shll
xor
stc
dec
push
jbe
jae
fbstp
add
adc
popa
leave
xchg
paddw
push
push
jmp
sbb
stos
and
dec
lret
xchg
cmp
pop
leave
push
ret
sub
aad
push
mov
lahf
lcall
lret
pop
cmp
das
pusha
fiaddl
fiaddl
cli
pop
and
int
jns
pop
mov
les
aam
aad
call
aaa
fcoms
adc
fisubl
xchg
imul
sub
cmp
push
mov
dec
and
int3
pop
arpl
jg
mov
jmp
pop
xchg
mov
cltd
cmp
xchg
lcall
jns
sub
pop
int
pop
cmp
lea
cmpsl
or
in
sbb
and
cmp
lcall
nop
mov
sub
lods
cmpsl
outsl
or
popf
push
mov
push
mov
repz
push
push
cmc
aam
jbe
cli
push
filds
loope
pop
imul
sar
movsl
fistps
xchg
cmovle
push
ficoms
jecxz
jle
sub
in
push
push
mov
lea
lea
je
mov
in
js
and
sub
xchg
xchg
fs
jle
push
icebp
inc
out
adc
mov
inc
pop
mov
rcrb
std
mov
mov
stos
inc
pushf
ret
sbb
cmp
imul
nop
fcomps
imull
shl
jbe
jnp
push
into
jge
notb
inc
inc
dec
sbb
or
sub
adc
xchg
sub
loop
fcoms
test
xchg
icebp
outsl
arpl
and
xchg
fistpll
les
mov
cmpsb
aas
cmp
shrl
mov
pop
lods
in
iret
shr
je
xor
sbb
dec
sub
repnz
gs
lcall
xchg
popf
jae
sub
test
repz
iret
ret
pop
adcb
pushf
sti
mov
xor
ja
sbb
jge
sbb
pushl
fisttps
mov
inc
pop
fsub
je
mov
adc
sti
pusha
in
mov
or
jle,pn
and
mov
sub
andl
in
ret
jbe
out
inc
or
incl
jne
sub
adc
dec
ja
jne
mov
fistl
les
push
lds
sarb
daa
mov
subl
and
push
js
pusha
je
fs
or
mov
xor
inc
shrb
cld
pop
pop
xor
bound
repnz
cs
daa
adc
xchg
push
pusha
xchg
fucomi
fdivr
pop
lret
aam
dec
in
in
mov
insb
push
jg
xchg
fwait
mov
jmp
pop
ror
test
ss
xchg
lret
je
push
lds
or
mov
sub
xorb
hlt
sbb
sbb
in
ds
adc
pop
add
insl
sti
leave
adc
sub
xchg
xchg
pop
mov
cmc
cs
inc
fldlg2
mov
mov
and
fiaddl
insb
test
push
loope
pop
push
scas
xchg
mov
push
andb
repz
mov
and
inc
sbb
cmp
movsl
dec
jbe
test
xorb
mov
hlt
pusha
jp
xchg
inc
push
pop
mov
hlt
or
or
std
ret
jmp
fldenv
or
or
cvttps2pi
dec
xor
fiadds
lahf
dec
divl
push
cmp
lcall
dec
inc
mov
xor
hlt
sbbl
pop
insl
call
hlt
pop
daa
cmpb
push
jge
fsubrl
add
cmp
int
xor
test
adc
mov
inc
js
inc
sub
fsts
stc
mov
and
mov
push
xchg
or
scas
fdivr
cmpsb
inc
arpl
add
jne
cwtl
dec
out
sub
mov
test
ja
inc
push
fdivrl
jl
mov
lret
sbb
out
movsl
shll
addb
pop
push
sub
cmp
rcl
mov
inc
outsl
xor
movsb
xor
fsubr
mov
cmpsl
gs
out
lods
jmp
sahf
push
adc
jns
xor
or
imul
mov
loope
cmpsb
push
cmp
icebp
pop
scas
addb
in
mov
fisubs
lahf
cwtl
add
push
movsl
push
adc
inc
in
add
inc
sbb
jecxz
dec
popa
loope
repnz
inc
and
push
rolb
adc
jecxz
aad
icebp
mov
push
daa
inc
jg
test
or
push
jg
in
xlat
inc
leave
fdiv
xor
stos
jmp
add
stos
mov
movsb
arpl
test
xchg
dec
inc
sub
ret
repnz
in
in
insb
out
lret
sub
test
inc
nop
lret
add
push
rorl
scas
insl
popa
and
push
and
in
pop
data16
ja
jb
jb
sub
ja
in
jae
rcl
mov
jg
sbb
inc
std
arpl
adc
dec
es
lds
in
int
jg
add
jb
call
mov
test
add
rcll
push
cmp
pop
mov
popa
sub
ljmp
imul
xor
fcoml
mov
cmc
orl
insl
add
jle
adc
lods
sahf
or
out
jb
pop
xorl
out
sbb
ret
lahf
rorb
into
jg
fcompl
add
push
mov
bound
sbb
es
mov
add
in
jnp
rorb
nop
xchg
hlt
jae
sub
xor
push
add
dec
fwait
push
shrb
out
repnz
mulb
mov
xchg
in
push
and
push
loopne
sbb
pop
adc
jae
mov
popf
xchg
pop
arpl
in
sbb
and
les
lret
movsl
loope
or
sub
or
mov
cmpsb
loop
jns
mov
mov
jmp
xchg
dec
imul
adc
ficoml
mov
out
inc
mov
push
int3
jo
inc
cmp
lods
cmp
inc
idiv
lcall
loopne
mov
dec
jo,pt
push
xchg
lret
sbb
adc
ljmp
aam
movsb
mov
xchg
sbb
mov
jnp
lods
sahf
dec
fadds
sub
xor
or
dec
leave
mov
ffree
aad
jl
sbb
pop
xlat
mov
sbb
push
es
and
push
mov
cmpsl
xor
push
jo
movq
sub
inc
clc
jp
das
lret
ja
rcr
xchg
mov
addr16
or
hlt
sysret
lods
sar
push
add
push
loop
and
das
ficoms
fstpl
insb
lcall
xchg
jno
push
data16
cmp
jecxz
pop
in
pusha
mov
xchg
testb
jnp
or
xchg
pop
pop
lds
mov
jns,pt
outsl
imul
jecxz
inc
adc
lods
or
jge
inc
jb
cmp
out
fdivr
and
push
push
jl
cli
xchg
mov
xchg
in
stc
mov
outsl
add
pop
push
aas
jae
out
movsl
mov
fbld
movsl
push
mov
cmp
sahf
inc
js
out
stos
cmp
lahf
xchg
hlt
and
insb
pop
idivl
scas
dec
xor
push
daa
outsb
dec
mov
test
mov
je
fbld
xchg
arpl
mov
push
jns
pop
iret
jns
mov
out
addr16
mov
ret
js
xchg
dec
out
add
inc
mov
jno
pop
mov
jge
adc
call
in
roll
shr
adc
jae
mov
and
pop
lods
adc
dec
or
mov
xor
sub
in
push
popf
hlt
sub
into
arpl
jl
add
pusha
xor
loop
sbb
xor
xchg
js
mov
and
lea
gs
mov
pop
mov
jnp
hlt
mov
popa
arpl
fisubrs
loopne
mov
movsb
popa
mov
into
lock
cmp
jmp
push
sbb
out
outsb
or
movsl
scas
adc
cmp
xor
jne
pop
xor
mov
jl
mov
ret
test
or
and
jae
or
xchg
outsb
mov
pop
stos
push
int
mov
pusha
sbb
clc
mov
and
jle
arpl
fisubrl
or
call
daa
adc
push
shll
bnd
out
and
repz
pop
jmp
fbstp
call
stos
cli
jo
dec
pop
jne
enter
or
mov
dec
test
push
cmc
push
jb
inc
jbe
sbb
loopne
pushf
jg
insb
nop
xchg
mov
or
pushf
and
push
dec
sub
and
sub
and
and
lock
pop
mov
push
cld
xchg
in
mov
jns
jno
jmp
incl
daa
sbb
push
jbe
stc
movsl
push
jnp
loope
or
push
cmpsb
test
cmpsb
sub
icebp
pushf
push
inc
mov
xchg
dec
popa
dec
fsubrs
inc
mov
push
jbe
enter
gs
add
rorb
mov
sbb
int3
dec
jbe
leave
out
fistpll
add
pusha
xlat
inc
jae
in
sbb
and
dec
pop
dec
xchg
and
test
dec
popf
jno
cmc
subl
xchg
mov
mov
rorl
lahf
js
sub
sub
inc
into
hlt
adc
lea
adc
mov
sub
mov
cmp
sbb
push
xorl
ss
xor
sbb
xchg
jmp
mov
mov
fmull
lods
xchg
sbb
cmpsb
test
lret
sub
adc
mov
jle
mov
movsb
xchg
xchg
mov
in
daa
es
cltd
enter
out
lcall
dec
add
sub
aam
jmp
cli
repnz
cmp
je
xchg
and
call
sbbl
pushf
inc
push
out
leave
sub
xchg
std
and
jno
test
adc
test
lea
cmp
sbb
insl
ret
xor
inc
pusha
sub
adc
inc
ss
adc
jo
test
jns
mov
pop
mov
mov
fldl
mov
pop
cmpsb
mov
ljmp
into
test
mov
xor
jns
add
iret
loop
jae
xchg
sub
push
sbb
popa
lret
inc
jbe
lods
imul
jle
dec
push
jp
clc
pop
xlat
xchg
in
pop
cmp
mov
mov
inc
pop
xlat
nop
jb
daa
outsl
sar
jle
mov
push
inc
negb
rcr
xchg
jb
cmp
cmpsb
xchg
hlt
mov
pusha
out
cltd
rcr
mov
lret
xlat
ja
stos
rcl
sbb
je
je
ja
fisubs
dec
cmp
push
sub
jnp
pop
minps
mov
out
out
stc
adc
cmp
js
test
sub
lods
xchg
pop
mov
pop
neg
ja
call
scas
dec
adc
sbb
imull
dec
add
lret
xchg
cmc
icebp
mov
xchg
and
mov
dec
xlat
mov
out
outsl
lock
call
dec
call
xlat
out
push
mov
mov
pop
fbstp
pop
lods
sbb
arpl
inc
lret
imull
xor
pop
dec
psrlq
add
data16
sbb
jecxz
aaa
pop
mov
lret
addr16
stos
add
roll
sub
out
xor
xchg
lahf
aad
iret
mov
sbb
daa
lahf
pop
lea
cmp
enter
inc
les
mov
push
ljmp
push
mov
dec
jle
adc
sarb
push
pusha
cmp
shll
cmp
xchg
scas
dec
setne
xor
in
andl
jnp
mov
test
enter
push
icebp
loopne
ds
xchg
xor
sar
cmpsl
jge
mov
das
cmp
pop
mov
sahf
addr16
sbb
fisttpl
add
call
push
lods
push
sti
or
es
lea
ret
fwait
mov
adc
sub
adc
xor
lcall
and
in
cmpsl
lods
fidivl
js
fcompl
inc
push
sbb
mov
and
mov
pushf
test
test
repnz
or
in
xchg
jg
scas
imulb
jbe,pn
fistl
inc
sbb
in
nop
sbb
lcall
inc
inc
fs
rcll
fdivs
push
mov
add
dec
ficomps
insb
xor
je
sbb
adc
pusha
jbe
xorb
out
sbb
test
les
nop
fisttpll
scas
cmp
subb
sub
push
out
mov
dec
std
loope
push
inc
jmp
push
mov
xchg
jne
cli
lret
mov
mov
or
add
adc
iret
mov
ljmp
sub
out
outsb
stos
test
pop
jae
xor
dec
or
adc
or
mov
push
lods
fldl
movsb
in
cmp
jmp
inc
and
mov
les
dec
sbb
in
push
cld
test
jmp
aad
outsl
outsb
xorb
xor
es
sbb
out
pop
lea
sub
jbe
sub
mov
lods
add
add
xchg
jg
xchg
repnz
xchg
mov
xchg
xor
leave
cmp
inc
jae
mov
movsl
adc
jno
pushf
push
bound
cli
outsl
sbb
fwait
pop
ljmp
addb
xchg
arpl
push
pop
or
pusha
or
daa
or
jle
inc
mov
call
mov
icebp
pop
fs
loope
pop
xchg
xchg
mov
jae
cmpsb
adc
sahf
adc
jg
imul
pop
cmpsl
mov
jo
mov
lcall
and
xchg
pop
dec
push
cmpsl
aad
dec
jnp
mov
mov
sub
push
adc
dec
stos
fnstenv
je
push
mov
inc
pushl
addr16
call
adc
scas
dec
into
xor
pop
mov
loop
das
out
mov
lcall
insl
sbb
and
jae
daa
scas
cli
dec
add
movsl
inc
in
jle
repz
xor
mov
push
jp
je
subb
fbstp
jo
iret
sbb
ficoml
adc
lods
test
xor
roll
adc
jne
or
mov
ss
pop
adc
jl
push
lret
sbb
in
mov
aaa
in
pop
sub
lock
cld
push
cmp
cmp
sbb
mov
inc
mov
or
add
sbbb
out
cltd
sahf
cltd
adcb
mov
nop
mov
dec
test
inc
xlat
push
in
das
orl
sub
xorl
fdivr
imul
ss
psubusb
add
pop
xchg
inc
rclb
or
adc
jns
mov
jb
out
adc
xor
pusha
push
jnp
or
fcmovnbe
std
jae
xchg
ret
xchg
xchg
rorl
push
sbb
xchg
pop
cmp
cmp
jle
flds
mov
push
loope
xlat
push
lret
outsb
iret
pop
xchg
push
pop
insl
jnp
dec
pop
push
or
push
push
insl
fbstp
in
add
into
adc
insb
sbb
pop
mov
and
stc
mov
int
fstpl
sahf
mov
push
cmp
rorb
mov
pop
xchg
push
mov
add
lea
adc
test
ficoms
sti
mov
mov
lcall
jno
in
lahf
fdivs
ljmp
inc
sbb
popf
cltd
hlt
inc
xchg
adc
cmp
pop
in
std
insl
cmp
lea
lret
xchg
into
mov
jno
repz
lahf
loope
and
cltd
leave
xchg
mov
lret
repnz
fbstp
aas
sub
test
lods
xchg
fidivs
int3
sub
cmc
call
mov
out
lret
outsb
test
ficompl
adc
bound
push
data16
mov
pop
sub
dec
mov
mov
pusha
test
mov
push
xchg
adc
inc
and
ret
xchg
or
in
out
rorb
pop
sbb
xchg
pop
mov
scas
and
mulb
sub
and
xor
and
jp
daa
addr16
cltd
ds
aam
pop
xlat
std
add
sub
xchg
scas
loop
ficompl
or
int3
cld
push
or
mov
dec
xlat
cltd
jecxz
push
mov
add
repz
mov
inc
addr16
jnp
dec
inc
mov
lds
test
mov
cwtl
add
mov
hlt
test
iret
lods
addr16
jl
xchg
bound
pop
iret
shrd
mov
imul
dec
mov
jo
aad
stos
xchg
xor
leave
shr
gs
negb
int
xchg
push
sub
mov
or
jmp
xor
sub
and
data16
add
stc
pop
icebp
mov
pop
cmp
or
jg
mov
xor
jae
pop
dec
data16
rcl
cltd
lds
dec
inc
lock
cmc
lea
imul
iret
popa
hlt
hlt
out
addr16
push
jp
leave
loop
pop
adc
rcll
clc
nop
mov
in
push
repz
loop
bnd
mov
push
inc
push
xchg
cli
cvtdq2ps
out
or
cmp
enter
fnstcw
js
mov
mov
sbb
sbb
pop
pusha
mov
add
cmc
int3
icebp
xlat
mov
mov
fistps
or
push
out
fdivp
fcomi
pusha
lea
int
icebp
fnstcw
push
inc
ljmp
pushw
das
test
repnz
jmp
int
jg
lret
add
cmp
jmp
cld
cmp
out
andb
push
xor
aam
pop
inc
iret
jns
dec
xchg
sub
inc
sbb
divl
pop
push
rorl
xlat
mov
adc
pop
rorb
sub
mov
mov
sub
in
jno
in
dec
mov
mov
sbb
mov
dec
adc
and
jno
insl
popa
loopne
outsb
iret
or
lcall
imul
xor
insl
lock
mov
and
adcl
inc
or
pop
or
loope
test
pop
xchg
add
adcb
mov
sub
je
lret
push
dec
mov
and
push
adc
xor
ljmp
xchg
dec
movsl
push
pusha
das
inc
andps
xor
push
cmp
mov
mov
xchg
js
push
inc
sub
mov
sbb
loopne
in
fnstcw
push
ja
xor
sub
data16
lret
call
pushf
popf
shll
hlt
lods
push
inc
arpl
add
test
add
dec
mov
aas
ret
adc
or
jne
sub
mov
mov
push
xchg
jnp
stos
xchg
jns
lret
scas
push
shrb
xlat
data16
daa
movsb
into
and
add
jbe
sbb
sub
xchg
push
jmp
das
outsb
dec
jo
imul
cld
mov
nop
loop
fstps
mov
sti
lods
outsl
mov
fst
lea
lods
or
sbb
sub
jb
test
push
jnp
or
jecxz
gs
mov
rorb
cld
sarb
pop
push
pop
outsl
fdivrl
test
inc
push
rep
out
adc
test
cmpl
loope
fstpl
xchg
jbe
dec
fistpl
data16
in
imul
lcall
pop
int3
or
jae
lock
shl
lret
divb
stc
std
mov
lret
mov
dec
shrl
mov
sub
jo
inc
lock
xchg
insb
and
gs
and
ss
pop
and
xchg
jecxz
rol
sbb
les
adc
sub
or
out
mov
imul
xor
or
sbb
pop
pop
cmp
leave
or
sbb
enter
mov
and
outsb
cmp
fsub
cld
js
cmp
pop
lret
mov
hlt
in
cmpl
sub
je
repz
int3
sub
test
xchg
lock
loop
cmp
rcrl
mov
sbb
jns
cld
jb
int3
fs
mov
jl
mov
push
jmp
or
jne
inc
daa
mov
outsb
add
pop
mov
push
and
fisttpl
and
pop
repz
fstpt
lds
push
repnz
orb
sahf
popf
lret
mov
pop
iret
testb
ja
cwtl
jl
jg
mov
jmp
hlt
mov
mov
nop
fstpt
loopne
push
pop
push
movsb
and
add
mov
cmp
fldcw
fists
pop
mov
icebp
add
loope
xchg
inc
or
xchg
mov
mov
push
or
movsb
stos
mov
int
addr16
sub
push
mov
ljmp
cmp
adc
int3
test
outsl
daa
jno
lahf
daa
test
mov
cmpsb
xor
std
das
clc
mov
movsl
subb
pop
sbb
cmp
push
sub
pop
sbb
in
rsqrtps
sarb
jg
mov
mov
xchg
mov
ret
loopne
dec
mov
cmc
add
inc
jmp
mov
roll
jecxz
mov
add
dec
lods
sub
pop
lahf
cmp
fadds
xchg
call
fcompl
xor
sbb
ja
xor
je
ret
andb
fs
sbb
jne
sub
fucomi
pop
jl
mov
sbb
fs
or
lods
dec
std
cmp
cmp
jb
fcoms
push
xchg
addr16
dec
out
or
jge
addr16
sbbb
call
data16
sbb
lds
stc
aaa
xchg
dec
sub
jecxz
stos
mov
sub
adc
js
int
pop
out
shll
xorl
push
cmp
mov
push
xchg
push
mov
inc
shll
mov
cs
outsl
enter
fmull
pusha
and
sti
sub
dec
jle
enter
pop
pop
dec
push
dec
jno
imul
pop
mov
ret
pop
mov
push
rorb
inc
lahf
ret
jne
repz
or
sti
js
mov
push
out
mov
lret
or
inc
cmp
sarl
push
push
out
cmp
sbb
shll
jecxz
dec
mov
std
movsl
std
mov
cmpl
inc
or
pop
je
incl
rcrb
filds
gs
insb
xchg
xchg
loope
mov
mov
js
mov
xchg
aad
lds
inc
jb
lret
pop
xor
cltd
push
insl
ret
push
out
icebp
mov
or
nop
jge
push
pop
sub
dec
cmc
repnz
and
jge
in
mov
das
cmp
aam
mov
or
sub
shll
adc
lds
pusha
mov
out
nop
mov
pop
negl
negb
push
aaa
add
jo
mov
cs
push
inc
cmp
jbe
mov
jle
pop
push
mov
sub
xor
jecxz
push
sbb
rorb
add
dec
jle
or
jle
jns
fldenv
outsl
ja
push
lods
rorb
out
fs
jo
sti
jl
xchg
cmpsb
jb
inc
jg
test
cmp
adc
aad
stos
add
jecxz
lea
lea
jo
pop
fisubrs
sahf
out
dec
loopne
dec
shrb
mov
imulb
mov
roll
fxch
cli
jo
outsb
jnp
aad
stos
mov
stos
stos
arpl
sbb
lea
pusha
sub
and
hlt
mov
je
sbb
add
sbb
xor
dec
inc
iret
xchg
stc
mov
bound
loopne
mov
pop
xor
sbbl
cmp
jne
add
jns
stos
repz
shll
jne
or
scas
mov
jl
mov
cld
push
and
nop
jle
jle
dec
js
cmp
xchg
rorb
testb
rcll
scas
pop
imul
in
mov
mov
ss
dec
mov
jmp
icebp
push
push
sub
jnp
mov
jb
fs
insb
mov
adc
push
cmp
loop
pop
cmp
fcoml
and
add
loopne
popa
jl
xlat
adc
inc
aas
addr16
push
lret
into
jg
dec
stos
movsl
and
mov
push
xchg
push
outsl
jecxz
test
decb
lods
and
icebp
mov
in
jp
sub
push
pusha
push
into
sub
bound
cli
lods
xlat
cmp
lahf
std
cmpsl
add
inc
mov
jno
xchg
add
pop
push
subb
dec
mov
cs
clc
das
sbb
je
push
mov
mov
cli
or
incb
lahf
movsb
ds
mov
daa
jb
mov
cltd
cmp
js
aaa
jo
sub
pop
mov
xor
xchg
and
or
test
add
mov
mov
std
pop
pop
das
pop
fwait
add
cmp
sti
arpl
xor
xor
dec
testl
out
leave
jnp
jns
push
popf
mov
xchg
mov
push
jle
into
negl
and
adcb
jnp
test
gs
out
shrb
push
jmp
mov
into
xchg
movsl
js
sbb
dec
in
lods
mov
dec
jecxz
cmp
subb
xorl
test
xor
cs
jp
lock
rclb
jmp
adc
jne
int
jp
mov
stos
jmp
or
stos
out
dec
imul
mov
dec
adc
xor
cs
and
pop
sbb
iret
loopne
and
pop
cmp
or
inc
or
test
adc
sub
xor
xchg
mov
push
mov
movsl
outsl
push
mov
xchg
loopne
ja
imul
mov
flds
das
sub
pop
mov
enter
cmp
mov
fstps
jns
mov
jecxz,pn
xor
rclb
or
ljmp
pop
sub
imul
pop
xor
cmp
xor
imul
mov
pop
pushf
or
cld
sbb
cmp
ret
dec
push
cmp
and
insl
dec
mov
imul
outsb
mov
dec
dec
adc
fcomi
lds
add
ret
mov
jno
test
pop
lds
pop
lret
fsubs
adc
jge
cmp
mov
repz
mov
leave
andl
mov
push
dec
imul
mov
inc
cmpsl
testb
or
jnp
test
and
or
test
movsl
repz
add
dec
adc
jne
mov
loop
push
push
xlat
out
sbb
adc
int3
sahf
fstpl
iret
jbe
or
jns
incl
fstpt
or
cmp
das
ljmp
cwtl
loopne
push
push
dec
mov
push
leave
dec
dec
mov
push
or
pop
nop
push
das
icebp
dec
cmpsb
jae
arpl
lds
movsl
jne
lods
dec
add
loop
sub
mov
mov
lcall
and
mov
sbb
push
jae
xlat
sub
out
in
fimuls
cmp
and
mov
sub
es
sub
sbb
fwait
icebp
dec
jae
jp
pusha
sub
pop
mov
mov
int3
jmp
stc
frstor
push
inc
jno
dec
enter
push
jo
mov
cmp
out
shlb
mov
lock
add
cmp
repz
jmp
adc
xorl
mov
xchg
push
adc
push
adc
push
insl
cs
data16
shlb
sub
cmp
fsubs
fs
pop
jb
test
jnp
and
mov
xor
cmpb
pop
jl
dec
or
or
clc
out
das
scas
lret
bound
xor
mov
aaa
ficompl
sbb
mov
xchg
jbe
aam
cwtl
push
movb
cld
and
or
leave
sbb
je
popa
xor
or
dec
mov
lods
pop
addr16
lcall
int
or
and
roll
adc
push
cmp
mov
mov
push
pop
sbb
imul
cmpsb
jbe
xor
bound
xor
leave
sbb
push
sbbb
rcll
ds
les
cwtl
jae
mov
lods
xor
xchg
lods
mov
xor
dec
cs
loope
jmp
aaa
pop
cwtl
or
inc
push
pop
shll
in
mov
mov
sbb
mov
xor
adcl
jg
test
xlat
xor
add
clc
repnz
xor
sti
push
stc
enter
pop
rolb
cmp
xchg
stos
jnp
or
ja
fstps
stos
repz
cmc
adc
movsl
cmp
push
adc
or
fadd
add
lods
push
xor
mov
test
inc
hlt
jl
lods
cld
dec
outsl
inc
pushf
mov
jne
adc
std
mov
mov
add
leave
cmp
gs
hlt
repz
dec
push
add
sarb
sub
xor
and
fdivrp
pop
mov
loopne
loop
mov
addr16
and
idiv
sbbb
push
pop
bound
pop
push
cld
shll
jno
out
fisttps
movsb
pop
data16
iret
jg
lea
xor
dec
mov
pop
push
ljmp
sbb
or
pop
sub
and
mov
inc
pop
xchg
add
dec
push
add
lods
lods
mov
cld
js
repnz
mov
sub
and
dec
push
dec
jo
mov
call
push
aad
dec
pop
adc
cmp
data16
dec
stos
dec
push
inc
and
adc
jp
adc
addr16
repnz
out
xchg
out
cltd
popf
cwtl
cld
cld
cmp
mov
mov
dec
negb
jp
dec
test
pop
mov
aas
or
test
inc
mov
popa
lret
pop
cltd
xchg
xor
loopne
decb
ss
ss
cli
and
mov
sub
xchg
jae
std
sub
xor
test
movsl
sbb
pop
stc
imul
jge
dec
addr16
fwait
dec
xchg
out
jae
dec
pop
std
sub
loopne
into
jo
gs
into
jmp
loopne
in
push
mov
push
xor
popa
jno
in
nop
xchg
sbb
push
push
jmp
test
cmpsb
dec
pop
iret
add
pusha
incb
jae
push
or
cmc
stos
aas
popf
push
lea
pop
mov
cmp
and
push
jg
mov
mov
sbb
adc
pop
cmp
fcomi
andl
hlt
in
jge
les
xor
ja
gs
cli
sub
push
std
popf
inc
mov
jmp
cli
pop
sbb
mov
sub
mov
push
inc
jle
scas
push
rclb
sti
fstpl
pop
add
popf
ljmp
dec
int3
mov
out
pusha
andb
push
push
inc
loopne
cld
not
test
or
sarl
ljmp
push
mov
in
fdivr
inc
xlat
push
xchg
aam
jecxz
dec
in
repnz
xlat
mov
inc
lds
loopne
xchg
push
mov
lret
mov
mov
in
dec
cs
cltd
pop
fs
add
dec
call
push
insb
jb
cmp
nop
jge
and
and
lcall
loopne
outsb
pusha
push
xor
call
cmp
movsb
xor
xchg
mov
dec
mov
jmp
int3
repnz
mov
andl
sbb
lcall
or
icebp
call
xchg
mov
js
mov
mov
ror
dec
les
rorl
lcall
xor
cmp
imul
aam
lods
inc
nop
lcall
inc
mov
shrl
push
add
outsl
xchg
push
stos
xor
dec
loope
addr16
pop
shrb
scas
add
mov
and
dec
mov
rcrb
adc
icebp
repnz
mov
fcoml
push
rol
push
mov
sbb
lahf
jmp
std
imul
jmp
sbb
mov
rcll
lock
es
xor
aas
xchg
test
xchg
cld
sbb
xor
lahf
int3
and
les
sbb
add
add
filds
mov
or
negb
repnz
sub
fiadds
pop
addr16
mov
fiaddl
dec
cmp
lahf
lods
sarb
stc
cmpsl
xchg
pop
jecxz
sub
fwait
push
cwtl
inc
dec
rclb
add
and
aam
adc
int
xchg
adc
ret
push
push
mov
lods
pop
mov
addr16
inc
inc
jb
sbb
cmp
inc
outsb
push
out
adc
cmpl
inc
inc
dec
sub
pusha
and
jns
fistl
iret
jle
dec
sbb
in
pop
in
or
mov
shrb
push
loopne
mov
dec
adc
in
into
mov
sub
mov
and
mov
enter
out
jecxz
test
jp
shr
nop
addr16
push
repz
and
push
push
mov
stc
pusha
movsl
jge
mov
mov
adc
pusha
scas
scas
in
es
fs
jecxz
loopne
pop
jo
mov
pop
push
push
mov
js
inc
xor
in
aam
mov
insb
dec
xchg
in
dec
inc
in
cmp
mov
ds
insl
xor
aaa
pop
fwait
xor
enter
int3
sbb
push
pop
lods
cs
pop
test
andb
insl
jp
shlb
fwait
jae
into
sbb
pop
je
leave
mov
pop
sub
xor
jo
jmp
xor
xchg
ret
adc
unpcklps
adc
push
mov
sbb
and
insl
sub
roll
pop
lcall
test
ljmp
out
mov
jle
cwtl
mov
fildll
adc
lds
push
cmp
je
ljmp
imul
push
cmp
bound
xor
fnstcw
sub
sti
inc
push
cltd
adc
mov
imul
pusha
stos
mov
adc
rol
mov
pop
aad
lds
push
and
inc
mov
push
fincstp
mov
push
dec
jo
mov
decl
mov
xchg
call
setge
cmp
inc
fcompl
call
repz
adc
pop
ljmp
aam
rcl
test
sub
xchg
rorl
fldenv
icebp
jmp
fldpi
mov
je
fcomip
mov
imul
inc
sub
jno
and
sbb
loope
movsb
int
push
sub
lret
jecxz
fstpl
adc
pop
mov
pop
or
dec
in
mov
xchg
jecxz
pop
outsl
out
loop
mov
and
shll
sub
sbb
mov
xchg
xor
stos
and
xor
decb
pop
stos
pusha
int
xor
xor
push
pop
cmpsl
sub
sub
ljmp
jns
mov
scas
movsl
daa
repz
inc
push
pop
in
add
daa
pop
insb
and
movsl
leave
lret
andb
xchg
lahf
cmp
push
pop
cmc
sub
in
mov
jle
nop
pop
in
push
add
inc
xor
imul
and
xchg
sbb
sbb
mov
dec
mov
dec
inc
xor
push
cmp
mov
decb
js
xlat
fdivs
sbb
jae
js
adc
xchg
fnstenv
inc
sbb
dec
cmp
ds
xchg
jns
sarb
rclb
loopne
and
lea
pop
sti
popf
stos
jbe
test
ljmp
shlb
sahf
aas
arpl
test
adc
or
lea
and
dec
mov
adc
cmp
pop
frndint
pop
cmpsl
repz
ficomps
fists
add
pop
jp
xchg
jb
pop
mov
push
push
add
inc
test
std
jp
insl
cmp
sub
gs
lret
arpl
xor
or
dec
out
adcl
test
jno
repnz
mov
and
cmpsl
lret
arpl
dec
mov
les
scas
mov
sub
dec
jge
jp
daa
cmpsb
negl
xor
dec
rol
cli
nop
mov
pop
push
jge
push
sub
std
pop
shr
in
xor
les
sub
int3
out
mov
sbb
push
xor
cli
je
mov
test
dec
push
lods
addr16
arpl
sbb
inc
jo
xchg
xchg
mov
fisttps
push
in
inc
hlt
mov
cmp
xlat
iret
aad
and
mov
outsl
pushl
sahf
flds
and
mov
inc
sarl
xchg
mov
insb
movsb
mov
out
sarb
mov
arpl
jecxz
push
je
and
jge
and
sub
lods
or
fisubrl
outsl
jl
fs
push
mov
loope
xchg
sahf
std
ds
inc
nop
jge
jge
movsb
xchg
scas
iret
push
ljmp
dec
xor
inc
pop
ja
mov
test
xor
je
inc
jmp
mov
fwait
sub
xchg
mov
push
fstps
nop
cmpsb
add
iret
add
push
cmp
pushf
bound
shrl
adc
push
divb
shrb
out
mov
jl
or
lcall
stos
cld
mov
pop
ret
pop
mov
pop
mov
pop
cmp
ret
mov
filds
cmp
mov
iret
movsb
mov
push
push
int
into
pop
lahf
inc
or
xor
ret
sbb
or
fcoms
sub
add
je
inc
mov
pusha
cmc
stos
inc
cmpsb
or
sti
mov
leave
iret
mov
jp
cmp
test
aaa
sbb
sahf
sub
mov
in
xchg
mov
fmull
sub
cmp
mov
xchg
jbe
mov
ja
jnp
xor
stos
or
sbb
es
aas
pop
shlb
jecxz
pop
cmpsb
int
les
fstl
outsl
jnp
sbb
pop
adc
dec
push
daa
mov
inc
pop
inc
mov
mov
test
xchg
decl
aam
mov
imul
xor
repnz
jnp
and
inc
sbbl
hlt
shr
dec
sub
shlb
add
stos
or
push
rcrb
lock
rcll
cmp
adc
mov
xor
sbb
jns
repz
jecxz
sti
sbb
mov
or
jp
fs
lret
insl
imul
xor
adc
or
sbb
jle
add
sahf
out
jne
enter
mov
and
jmp
mov
pop
mov
fsubrs
stc
popa
pop
arpl
mov
enter
hlt
cmc
fwait
andl
cmp
mov
pop
pop
push
push
rorb
mov
in
mov
lcall
lahf
pop
pop
je
and
mov
cmpl
fcomp
push
lahf
subb
xor
std
lods
pushf
jnp
test
hlt
mov
push
sub
mov
bound
inc
sub
pop
notb
pushf
sub
out
clc
cmp
shll
xchg
add
push
sub
popf
sub
sbb
or
lock
rcrb
test
leave
fidivrl
add
add
push
add
sub
aam
add
add
push
pop
xor
lcall
xor
mov
fwait
jge
scas
notb
and
movsl
cmp
es
xchg
aas
or
int3
dec
sbb
and
mov
sbb
pushf
mov
or
in
and
dec
sub
mov
in
lahf
loopne
and
pop
xor
mov
adc
pop
mov
dec
lods
sti
in
ret
insb
push
lahf
fbld
sbb
lock
clc
mov
das
add
sub
in
cmpsl
lret
inc
adc
dec
cmpsl
int
std
cmp
in
fdivl
nop
shl
mov
mov
xor
dec
push
sbb
daa
test
fdivrl
insl
cmp
imul
sti
fcmovu
dec
lcall
fistps
or
pop
test
xor
test
jg
aad
xor
mov
xchg
cmove
add
lret
out
test
push
xchg
sub
not
or
mov
les
and
mov
mov
scas
test
push
in
adc
ss
loopne
sbbl
jo
out
sbb
sbb
cmpsl
and
mov
jnp
push
push
push
ffree
jmp
mov
jno
push
in
dec
mov
in
rclb
cwtl
pop
aam
rolb
leave
sti
int
mov
sbb
cltd
sbb
scas
aas
shll
ljmp
mov
push
sbb
pop
mov
mov
pusha
xchg
aaa
test
xor
outsl
aam
popf
std
insl
or
jo
ret
jno
mov
inc
push
insb
decb
imul
imul
movl
cmpsb
push
or
in
mov
int
clc
add
shr
sub
nop
mov
jns
into
cltd
cltd
jnp
fimull
call
in
mov
scas
mov
xchg
ffreep
pop
faddl
adc
cs
lods
dec
ljmp
pop
push
sti
xor
test
repz
roll
pop
push
add
in
push
adc
in
mov
pop
enter
std
push
xor
adc
push
add
dec
popf
inc
mov
scas
cmp
enter
aaa
dec
dec
lds
jmp
shll
sub
cmp
les
cmpsb
sub
enter
sub
lods
dec
cmp
inc
xchg
add
xchg
xor
xchg
inc
data16
mov
testb
xchg
add
or
pop
push
call
adc
sub
pop
jmp
imul
les
loop
sub
mov
push
inc
and
lds
mov
cs
ficoml
cmp
sub
push
test
cmc
inc
ror
mov
lods
movsl
std
jbe
test
push
lea
sub
clc
mov
adc
das
fstpt
paddb
cmp
shlb
ljmp
rcrb
iret
push
rclb
cmp
xor
sbb
mov
imulb
mov
cmp
mov
cmpsl
push
loop
add
or
mov
andl
mov
std
stos
adc
shll
push
jno
and
inc
pop
repz
mov
sub
inc
cltd
dec
pop
insl
movsl
cld
and
lahf
insb
mov
into
sub
lcall
mov
aaa
xchg
inc
cmp
or
popaw
es
or
stc
mov
adc
jmp
je
jl
pushf
cltd
dec
or
mov
loopne
cwtl
fwait
sub
aaa
test
xchg
shrb
sarl
sub
sahf
fbld
push
add
scas
xor
add
mov
xor
aaa
mov
clc
push
je,pt
sub
fsts
and
add
jbe
enter
jmp
cmpsb
int
pusha
int
jle
lret
outsb
sub
and
cmp
inc
sbb
xchg
mov
xchg
sbb
aam
stos
cmp
cmp
pushf
movl
xor
cmp
inc
rorb
jmp
push
cltd
shl
out
shll
into
cmp
sbb
bound
sbb
jae
cmovp
cmpsb
sub
adc
aaa
fisttps
stc
mov
add
and
daa
mov
fcom
push
popf
jle
jg
cmpsl
out
push
lret
lods
dec
sub
sbb
mov
fdivr
test
inc
cmp
test
add
mov
andb
fadd
xor
stos
jle
call
stos
or
sbb
and
mov
cmp
and
scas
and
cli
test
xchg
out
cmp
fmuls
add
xor
pop
sbb
cld
adc
sahf
aam
test
neg
inc
adc
pop
xchg
and
mov
pop
lds
xor
mov
ja
addr16
imul
adc
fwait
loope
movsb
dec
lods
imulb
xchg
js
adc
push
aam
xor
push
ret
nop
out
jmp
jno
outsb
aas
mov
pop
jo
idiv
into
outsb
mov
pop
divb
jne
js
data16
rolb
jl
ret
mov
xorb
pop
fistl
subb
lret
push
lret
iret
cld
xchg
ja
fdivs
push
loop
icebp
je
in
or
dec
es
movswl
mov
pop
adc
nop
xchg
sub
mov
mov
sti
push
dec
int
adc
dec
or
mov
inc
insb
sbb
ljmp
testb
cwtl
push
pop
insl
imul
pop
mov
xor
xorl
test
or
fucom
sbb
or
cmp
cmp
dec
mov
jns
bswap
std
mov
loope
push
fimuls
mov
test
sub
mov
sub
cmp
cwtl
cmp
mov
mov
cli
fmul
jae
xor
int3
add
rcll
cli
hlt
outsb
cmp
inc
loopne
test
mov
jne
add
clc
bnd
and
dec
fbstp
mov
stc
jae
push
insl
mov
out
rol
inc
push
or
jle
xor
cmp
pop
lods
popa
test
loop
lret
nop
loope
xchg
shl
shrb
leave
sub
pop
push
sub
mov
add
and
rolb
mov
jge
lahf
dec
mov
aas
and
cmpsb
cwtl
mov
out
push
aad
mov
sub
or
movsl
jp
outsb
or
or
stc
push
and
inc
fistpll
cmp
mov
cli
cmp
and
jl
push
insl
mov
out
ss
cmp
sub
mov
pop
ljmp
lock
std
push
lods
sub
jle
inc
loopne
adcb
dec
je
enter
add
jge
rolb
and
xor
pop
decb
sbb
dec
mov
aaa
mov
call
test
rcr
sub
pop
pop
dec
into
adcl
adc
repz
pushf
sbb
shlb
sub
mov
push
mov
es
mov
pmullw
xor
pop
lds
xchg
push
in
popa
push
jbe
out
fwait
xchg
push
mov
pop
lock
push
sub
subl
adc
and
adc
inc
jnp
mov
mov
loop
and
add
ss
andl
jno
sbb
jnp
push
mov
and
add
scas
mov
test
mov
in
int
out
sbb
xchg
test
jle
fwait
add
mov
out
or
outsl
jmp
adc
jae
ja
stc
pop
sub
mov
push
repnz
orb
sub
test
adc
sbb
pushf
testl
subl
mov
and
xchg
nop
sbb
mov
pop
adc
pushf
test
enter
and
xchg
push
subb
rcl
inc
insb
mov
pop
add
rorb
dec
outsb
and
jp
xor
ljmp
bound
and
xchg
cmpsb
mov
fsubp
push
adc
mov
dec
mov
shl
mov
inc
jbe
mov
fldt
mov
idiv
xor
flds
xchg
cli
jno
fidivrl
sub
cmc
cmp
insb
test
mov
inc
imul
push
andb
xor
push
ds
stc
leave
lret
xor
fadds
shrb
daa
add
loope
adc
add
gs
push
fstl
or
or
inc
add
sub
fcomps
fists
pop
xlat
gs
cmpsl
inc
cld
shrl
stc
push
mov
xchg
subb
inc
inc
cltd
mov
pushf
ss
push
add
in
inc
leave
nop
pop
jl
push
push
sub
fimuls
jg
jecxz
sub
xchg
rol
pop
dec
fstpl
rclb
popl
fsts
cmp
mov
sbb
and
pop
dec
mov
mov
push
mov
xlat
add
inc
lea
das
mov
jp
sub
inc
xchg
add
jge
stc
lahf
add
mov
jecxz
mov
shrl
push
jg
jle
aad
push
xor
mov
add
mov
repnz
mov
stc
mov
mov
imul
sahf
adc
and
test
mov
imul
unpcklps
adc
jmp
in
mov
loope
mov
cmpsb
add
or
into
sbb
ljmp
jl
and
das
movsl
pop
in
mov
je
pop
in
fmuls
inc
and
and
cmp
mov
scas
fldenv
popf
popa
movsb
mov
mov
push
and
in
adc
cmpsl
sub
jns
xor
mov
lock
add
xor
sbb
cld
add
xchg
sahf
sbb
adc
sti
ljmp
fwait
xchg
or
cmp
jl
lods
rolb
mov
aas
ret
loop
daa
fldl
and
mov
gs
cmp
jg
loop
lcallw
push
sub
jle
sbb
dec
pop
iret
cmc
ret
add
jp
dec
lea
in
jl
push
pop
jg
shll
call
insl
inc
repnz
jg
dec
add
lock
insb
das
jno
inc
jbe
mov
or
push
sbb
repz
add
xchg
rorb
xchg
lret
jae
fiaddl
jl
mov
sub
inc
and
lea
cmp
adc
add
pop
ljmp
cmpsb
mov
out
inc
jmp
int3
rolb
xor
orb
xor
jecxz
repnz
mov
ljmp
mov
into
sub
xor
divb
lock
dec
lods
mov
cmp
into
lret
sub
and
mov
mov
ror
test
pop
out
shll
jb
fidivl
add
sbb
xor
xchg
mov
sub
int
jg
addb
xor
pop
and
lods
xlat
das
hlt
sarl
mov
mov
fcomi
push
repnz
sti
mov
pushw
andl
out
mov
xchg
xchg
les
les
fistpll
pop
ss
push
ror
pop
adc
xchg
xor
fwait
push
mov
aaa
cli
movsl
lcallw
mov
shlb
lahf
imul
not
sub
cmp
jbe
dec
fisttpll
jecxz
xchg
xor
clc
out
jp
rclb
jbe
jmp
add
enter
mov
ret
push
and
in
push
and
adc
data16
sub
dec
inc
inc
mov
jb
je
lahf
test
insl
jmp
sbbl
and
pop
fiadds
es
mov
inc
movsb
repz
jle
xor
jnp
data16
and
aad
adc
sbb
ss
xchg
ljmp
les
pop
xorb
cmp
movsl
cwtl
aam
subb
cld
push
mov
jno
push
fistps
lods
cmp
mov
fimull
or
test
jnp
inc
out
xchg
cmpsl
fwait
and
scas
mov
rorl
filds
adc
push
pop
xor
loop
scas
stos
rclb
jb
xor
out
and
dec
lock
hlt
add
dec
fwait
lcall
sbb
push
jecxz
out
sub
fs
cmp
push
leave
xorb
mov
js
fistps
xchg
jb
cmp
mov
xchg
jg
inc
fcmovne
rcll
mov
jo
decb
sub
mov
repz
mov
mov
sbb
cltd
dec
icebp
lock
xchg
out
stos
test
pop
repnz
and
adc
push
mov
test
insl
sti
lret
sti
mov
and
sbbl
push
jns
loope
or
in
pop
into
xor
pop
lea
push
sub
inc
sti
repnz
scas
lahf
mov
jns
mov
std
int3
clc
cmp
push
lea
fsubrs
sub
idivl
jg
iret
jp
mov
inc
dec
xlat
push
sbb
fsubrl
push
mov
xchg
xchg
jecxz
inc
gs
xchg
xchg
outsl
rcrb
sbb
sbb
cmc
cwtl
jmp
mov
or
sub
adc
dec
xchg
inc
mov
push
rcrb
adc
loop
data16
mov
das
mov
out
inc
jecxz
or
xchg
push
dec
mov
pop
push
sbb
addr16
fisttps
mov
rolb
ds
or
rcl
xchg
stos
xchg
jl
movsb
daa
int3
mov
scas
mov
cmp
popa
popa
or
xlat
pusha
clc
jb
sbb
rcrb
je
lods
add
cwtl
enter
stos
in
sti
mov
inc
and
xchg
xchg
aam
repnz
pop
pop
add
decb
xchg
push
ror
adc
mov
add
mov
stos
mov
test
movsb
in
sbb
xor
mov
repnz
fidivs
add
xchg
mov
inc
mov
mov
test
in
mov
inc
outsb
push
cmpsb
daa
das
dec
add
lahf
insl
sbb
add
or
push
jno
imul
inc
mov
xor
mov
cmp
inc
stc
inc
push
add
xchg
in
mov
pop
in
jbe
inc
repz
and
jecxz
orb
ret
daa
jae
mov
pop
adc
addr16
and
push
xor
fisttpl
mov
imul
adc
push
out
cmp
outsb
pop
cmp
js
inc
inc
cmp
gs
or
daa
loope
jg
pop
hlt
icebp
pop
fstp
pop
jle
mov
jne
fstpl
sahf
xor
mov
jecxz
hlt
test
jns
cmpsb
adc
adc
inc
idivb
jne
pop
mov
pop
rcrb
lods
cmp
and
push
xchg
inc
jmp
insl
cs
neg
loopne
repnz
dec
push
pop
imul
sub
in
shrl
mov
loop
jae
or
dec
xchg
xor
push
hlt
out
dec
popa
insb
dec
adc
aad
hlt
sbbl
fwait
into
pop
or
mov
jmp
int3
push
filds
xchg
cmp
xchg
cmp
aam
jbe
test
mov
lock
mov
dec
or
repz
sbb
cmpsl
sahf
cld
mov
or
daa
test
mov
cltd
dec
add
inc
inc
adc
xchg
mov
lds
repz
inc
or
fimuls
add
jns
push
and
fisttpll
cld
pop
mov
xchg
xchg
popa
pop
filds
jno
fidivrs
adc
and
mov
adc
ret
test
or
inc
outsb
sub
shlb
cmp
sbb
and
pop
out
ljmp
es
pop
or
push
adc
inc
repnz
cmp
sarl
aad
and
es
cmp
or
mov
dec
xchg
xchg
cmpsl
jg
lcall
push
outsl
push
sub
mov
sbb
ret
add
std
bound
shll
fbld
mov
push
test
inc
test
inc
cmp
push
pop
pop
push
pop
add
push
mov
orb
loop
inc
ljmp
adc
out
ret
sbb
mov
mov
pusha
xchg
pop
aad
aad
inc
jb
dec
out
aaa
fdivl
cld
mov
daa
jmp
sub
push
ror
pusha
sarb
std
xlat
cwtl
push
xorl
jecxz
jo
sub
dec
jnp
fsubs
inc
add
movsb
lahf
incl
movb
jnp
or
mov
and
out
mov
mov
stc
mov
adc
push
imul
out
dec
mov
mov
sbb
fcomp
iret
dec
dec
inc
xor
jmp
push
adc
push
mov
loope
jl
rcll
movsb
pop
lret
push
push
mov
push
es
and
faddp
jo
aam
cli
aad
lea
sub
jle
pushf
pop
clc
das
das
in
repz
mov
je
testb
pop
xchg
cld
pusha
mov
mov
jmp
ja
dec
xor
lret
pop
stc
loop
adc
mov
and
jg
pop
lds
jl
pop
push
test
adc
cld
loopne
call
testl
dec
push
hlt
lods
inc
loop
pop
mov
lret
jle
adc
sbb
xor
and
outsb
and
dec
xor
std
pop
sbb
adc
lds
jg
xchg
cmp
outsb
mov
loopw
inc
cmp
ljmp
aad
adc
and
andb
ds
xchg
xor
push
sub
cmp
sbb
inc
rclb
lods
add
xorb
cmp
dec
dec
enter
xor
in
ljmp
jle
mov
xchg
jecxz
inc
jle
insl
dec
xchg
sbb
sub
sbb
jns
fadd
test
rclb
test
add
mov
fbstp
fucomp
xchg
or
lahf
imul
adc
and
inc
mov
or
in
xor
mov
sti
mov
data16
in
movsb
push
andb
imul
xor
mov
test
test
add
stos
jge
stos
movsl
hlt
lea
jo
push
jp
xchg
cltd
push
or
jecxz
mov
stos
stos
add
cmp
inc
xor
push
jge
rorb
loopne
push
sub
shll
sub
fucomip
jno
cmp
xor
mov
push
push
test
and
ljmp
bndstx
cmp
jle
pop
adc
mov
ret
call
insl
sub
jl
add
rorl
out
pushf
push
adc
inc
mov
push
add
sub
cmp
jne
lcall
scas
add
flds
sahf
cld
clc
test
fcomps
sub
push
xor
pop
add
pop
mov
shrb
xor
jne
push
push
cli
adc
mov
outsl
std
or
aas
ss
push
jbe
rclb
out
pop
sbb
imul
clc
ret
pop
xchg
jno
add
cmp
int3
or
dec
sub
fld
xchg
pop
push
cmp
push
sarl
repz
fs
aas
push
add
nop
icebp
cmpsb
push
fwait
lea
fmuls
sub
rolb
fidivrl
jo
sub
jo
in
mov
addb
test
inc
data16
mov
imul
and
dec
cmpb
or
cwtl
sub
push
cwtl
cmpsl
dec
push
clc
fldcw
dec
lock
mov
mov
rorb
loop
xchg
jmp
mov
add
jo
sbb
pop
mov
jb
gs
popf
bound
and
mov
mov
repz
lock
and
imul
lds
loop
jecxz
push
mov
rol
ret
mov
ss
neg
cmpsb
xorl
ret
add
add
jbe
mov
into
adc
push
fs
daa
out
std
insl
xor
jae
in
mov
nop
pop
popf
not
jle
pop
scas
or
dec
adc
rcrb
jp
data16
mov
cmpsl
ret
sub
mov
ficoml
mov
push
inc
ja
adc
push
push
call
sbb
nop
add
adc
add
lea
mov
inc
dec
call
fistl
test
rcl
das
cwtl
scas
inc
ds
je
sub
sub
pop
xor
xchg
test
inc
xchg
pop
jecxz
testb
neg
jge
push
test
js
mov
adc
andb
shll
xchg
jb
and
negl
into
pop
aaa
sbb
or
push
rcr
bound
push
subb
stos
cmpsb
jge,pn
iret
fwait
fwait
lea
jp
dec
int3
dec
nop
clc
addr16
pusha
inc
leave
push
mov
clc
loopne
les
jle
push
sbb
mov
xlat
push
xor
pushf
mov
mov
rcll
cltd
push
shrl
jbe
daa
mov
adc
into
inc
mov
mov
and
jb
call
mov
xor
pushaw
rcrl
repz
out
stos
daa
pop
xor
xchg
inc
ret
outsl
lods
mov
mov
dec
push
and
xchg
stc
mov
bound
daa
leave
lahf
or
push
or
imul
ror
lret
pushf
and
stos
jecxz
test
lcall
xchg
or
xor
sbb
stc
out
imul
jnp
cld
add
push
pusha
jle
push
mov
lea
call
mov
mov
data16
shlb
aaa
sub
test
sub
mov
loopne
mull
cmpsb
sbb
xor
jae
add
push
stc
jp
dec
pop
jecxz
test
addl
shl
jg
pop
and
gs
dec
divb
and
mov
ret
aad
scas
xchg
int
notb
mov
lcall
cmp
inc
insb
jl
data16
mov
aam
pushf
push
test
outsl
sub
cld
jo
js
out
mov
mov
lds
push
xchg
mov
cmp
xlat
add
aad
in
loop
mov
in
sbb
ja
sbb
fwait
out
adc
ret
pop
pop
pop
pushf
dec
ljmp
gs
mov
inc
jp
xlat
pop
add
sbb
dec
adc
pop
and
pop
dec
lods
mov
rcrl
pop
dec
xor
rol
xchg
push
sbb
push
in
jecxz
orl
sbb
inc
aas
fisubl
ror
adc
add
push
pop
into
push
pop
aad
sar
mov
scas
inc
leave
mov
cltd
fadds
dec
jnp
dec
aam
outsb
pop
sti
mov
out
and
iret
pusha
scas
fsub
test
fiaddl
jge
pop
xchg
push
push
dec
and
sbb
jbe
test
xor
aam
int
clc
leave
add
adc
cmp
pushf
loop
in
push
jg
iret
pop
sub
cmpsl
cmp
adc
inc
fwait
sbb
notl
fldcw
fwait
push
xor
mov
xlat
xchg
call
or
pop
stc
jno
inc
outsl
ja
out
fmull
cmp
mov
stos
mov
jae
push
lcall
lahf
daa
enter
mov
nopl
or
icebp
xor
loop
into
f2xm1
out
out
outsb
lods
pop
movl
or
and
dec
inc
bound
pop
leave
adc
push
cli
mov
sbb
jb
sbb
or
cmp
dec
imul
dec
imul
sub
int
and
push
xor
shlb
or
jo
sti
sub
mov
inc
jmp
mov
or
scas
xor
cmp
loop
mov
gs
or
in
in
cmpsb
mov
sbb
test
outsl
push
mov
enter
loop
cmp
fs
cmpsl
fs
loope
cmp
scas
lods
xor
testl
iret
mov
mov
shll
lahf
xchg
or
decl
push
enter
test
fdivrl
pop
xor
cmp
mov
in
sub
mov
ljmp
mov
add
cmp
push
pushw
js
cli
add
ljmp
jne
inc
jns
je
lcall
lods
rcl
push
cmpsl
iret
push
out
adc
cmpsl
out
jmp
in
hlt
mov
jae
clc
mov
pusha
aam
es
jbe
sti
cmc
aas
push
dec
pop
lcall
in
adc
incb
fsubrs
xchg
aaa
adc
popl
add
mov
add
loop
adc
xchg
filds
js
push
ficoms
cmp
and
sbb
bound
jecxz
fwait
push
nop
cmc
sub
movsb
push
mov
lds
dec
xchg
in
lea
mov
mov
pop
pop
movb
jmp
bound
jmp
out
add
rclb
xor
push
aas
loopne
jl
and
cs
xor
fcmove
mov
sbb
push
mov
jle
addb
pop
push
inc
mov
cmp
push
ud2
adc
mov
mov
adc
pop
and
out
push
or
cli
mov
movsl
icebp
fildl
aam
rcll
scas
sahf
cmpl
dec
mov
jb
movsl
std
adc
sbb
fldcw
out
test
fists
push
xchg
jle
xor
cmc
jecxz
and
out
inc
sbb
test
test
push
lock
data16
sbb
xor
ror
adc
popa
jno
push
pop
fbld
test
adc
lret
lods
or
ljmp
inc
pushf
mov
enter
imul
lock
add
push
xor
out
xchg
cld
stos
mov
je
fcomps
cli
jl
mov
les
inc
dec
int3
cmp
loope
xchg
ljmp
push
out
lods
dec
jne
ljmp
cmc
mov
fidivrl
mov
and
pop
outsb
inc
mov
cmp
std
inc
mov
push
push
xorl
lock
inc
push
loopne
sub
cwtl
dec
dec
inc
cmpb
out
aam
test
dec
cmc
adc
cwtl
mov
jno
pop
dec
push
mov
mov
add
sarb
cmp
call
popf
lahf
mov
rclb
cs
jle
add
push
sub
mov
loope
repz
in
mov
loop
sbb
ljmp
jecxz
in
jp
lods
push
adc
push
lahf
jbe
xchg
xchg
sbb
out
out
ss
cmpsl
cmp
jl
repz
cmp
adc
pusha
pop
mov
fcomip
lods
inc
jb
jmp
push
pop
aam
mov
dec
test
loope
mov
sti
loope
sbb
lcall
push
jecxz
cld
jo
inc
jmp
mov
jno
pop
mov
sbb
sbb
stos
jns
mov
xchg
jno
mov
jmp
lea
scas
imul
movsb
or
mov
add
cmpb
adc
xchg
addb
jg
inc
or
loopne
add
mov
jp
xor
fwait
mov
jno
sbb
out
xchg
jo
mov
jb
cs
cmpsb
add
imul
jb
sar
test
mov
pop
shrb
sahf
rclb
fistl
fsubrs
mov
sub
pop
stos
in
in
testl
lods
or
xchg
lds
push
inc
jae
idivb
cs
push
and
cmpsl
dec
mov
cltd
dec
mov
pop
cmp
jge
rcll
mov
and
pop
test
sbb
std
mulb
mov
mov
cmc
std
dec
repz
icebp
pop
pop
or
fisubs
ret
inc
lds
out
sti
mov
adc
ror
pushf
xor
sahf
sub
or
das
cmpsb
sub
push
fldl
and
cmpsl
sarl
mov
add
fdiv
adc
int3
out
inc
dec
push
jmp
sub
jmp
sets
arpl
cli
pushf
jmp
pop
push
adc
adc
loop
les
mov
sbb
out
inc
iret
inc
inc
cltd
in
loopew
adc
pop
test
test
adc
xchg
mov
mov
outsl
popa
jo
lock
iret
push
imul
ljmp
and
inc
or
mov
mov
rcrb
fwait
jp
test
cmp
fists
pop
shll
adc
jns
es
pop
imul
push
cmp
fwait
jecxz
add
roll
in
add
test
jno
loope
or
jns
scas
xchg
pop
test
xchg
les
or
sub
and
mov
mov
test
jge
ds
push
gs
in
mov
mov
lcall
and
or
daa
stos
xor
sbb
ret
inc
xchg
push
pusha
movsl
xchg
int3
test
or
int
or
push
jecxz
xchg
and
rorl
cmc
sub
xchg
lret
imul
fs
mov
sub
jmp
shll
cli
xchg
and
decb
cmc
jae
add
in
ljmp
jge
xchg
xor
scas
js
adc
out
sub
jbe
ffree
sub
ss
sbb
sbb
cmp
je
int
shlb
push
push
push
cwtl
mov
jne
arpl
jp
mov
pop
sahf
push
imull
rcrb
xchg
xor
imul
jns
aad
mov
dec
mov
aas
leave
xchg
sbb
ds
repz
mov
xchg
xor
mov
dec
jae
sub
add
mov
addr16
frstor
bound
adc
mov
fsts
mov
cmc
inc
jnp
pop
ret
bnd
xor
sahf
push
in
insl
roll
lods
add
sarl
mov
push
sbb
or
mov
xor
cld
pop
jp
mov
mov
xchg
daa
out
std
xor
adc
jmp
shr
cmpsl
or
jo
hlt
sbb
fwait
outsl
dec
ret
movsl
mov
push
scas
sti
arpl
xchg
mov
lcall
jle
sub
mov
and
inc
cmpsl
stos
popa
pop
cmp
push
or
add
cmp
nop
dec
into
xor
pusha
push
insl
loopne
aas
fldcw
scas
sbb
sub
inc
mov
in
mov
les
mov
es
rol
cmp
or
movsw
stc
xchg
stos
jl
sahf
push
data16
pop
in
inc
faddl
je
sahf
xchg
pop
pusha
loope
aam
push
fidivrs
adc
mov
adc
or
int3
inc
xor
lods
dec
rorl
and
mov
or
add
jns
mov
xrelease
jno
cmp
imul
std
sbb
pop
fld1
mov
xor
or
cmp
shll
and
scas
sub
inc
shrl
adcb
test
hlt
decb
cmp
add
lahf
js
int
jg
and
or
or
addb
insl
xchg
in
pop
out
divl
sbb
scas
xlat
push
mov
das
jb
mov
push
sarl
mov
jle
xchg
popa
xchg
xchg
ret
ret
jg
sbb
xlat
test
and
jnp
fidivs
js
cmp
mov
daa
fst
dec
sub
nop
pop
in
das
cwtl
popfw
and
shll
rcr
cmp
sti
ss
mov
lret
push
ffree
xor
gs
std
clc
push
add
add
pop
cmpl
clc
rcr
push
push
jns
push
inc
mov
sub
nop
movsl
int
lret
add
testb
xchg
xor
sbb
iret
fsubl
mov
xor
push
inc
jmp
jecxz
jb
pop
mov
push
xor
int3
aam
jle
loope
lahf
lret
ljmp
xor
scas
mov
jno
cmp
inc
mov
sub
cmp
dec
and
jnp
out
int
xchg
jp
jge
xorb
arpl
mov
jg
xchg
xlat
fidivrl
fdivl
stos
mov
push
add
aad
imul
xor
xchg
add
jmp
repz
bound
inc
aam
mov
xchg
je
cwtl
clc
xchg
or
jne
imul
cmc
inc
jno
pop
shlb
sub
cltd
test
scas
push
push
das
cmp
sub
inc
pop
aam
mov
mov
lods
add
outsb
cltd
xchg
jne
arpl
dec
int
push
and
xchg
adc
xchg
inc
mov
dec
sarl
bound
jl
mov
inc
inc
add
jo
sub
jbe
les
pop
mov
xchg
xchg
sub
xchg
pop
stos
and
cmp
sub
rclb
sub
xchg
jg
sti
imul
je
fucomip
ljmpw
push
cwtl
cltd
ffree
fldl
sbb
pop
iret
mov
or
in
xor
ss
aas
adc
mov
in
xchg
sbb
inc
add
stos
mov
sbb
pop
pushf
xlat
popf
pop
xor
xor
ret
frstor
mov
mov
fldenv
and
ret
in
mov
call
xlat
sbb
push
inc
push
repz
ds
scas
imul
xchg
sbbl
test
popa
jecxz
pop
shrl
out
pop
add
adc
mov
lret
jne
ljmp
xor
or
fstps
xor
divl
jns
imul
add
sub
mov
testb
sahf
mov
or
xor
js
gs
mov
fmul
mov
hlt
fnstenv
add
bound
sbb
jp
sahf
insb
mov
ficoms
pushf
pop
adc
and
pusha
dec
dec
pop
dec
pop
jae
movsb
fidivs
xlat
in
pusha
cmp
sub
and
test
in
ret
add
lods
out
divl
loope
xchg
scas
jae
mov
cmp
mov
insl
lea
into
and
push
adc
push
adc
mov
sarl
loope
lret
pop
pop
lods
mov
cltd
push
into
nop
aam
cmp
pop
dec
lea
xor
cmp
fdivs
movl
lods
test
test
cmp
sbb
ja
sub
cmc
jne
jecxz
pop
jge
enter
pop
dec
insb
decb
dec
fdivrp
jnp
mov
mov
movsl
jo
mulb
int3
outsb
insl
lds
dec
aad
push
jmp
seto
pusha
movsl
nop
jecxz
jbe
fisubrl
pusha
sbb
sub
shr
pop
dec
aad
cld
pushf
and
in
add
cmp
loop
cmc
push
xor
dec
pop
xor
inc
and
repz
mov
aaa
xchg
fwait
mov
cwtl
xchg
cwtl
test
push
cltd
lret
popf
or
ret
pop
orb
adc
in
xlat
xor
in
mov
stc
in
aas
jg
dec
popa
out
enter
xchg
cmp
cmpsb
popa
mov
mov
push
fstpt
rcr
cmp
ja
pushf
loope
add
js
leave
mov
test
add
sbb
rclb
jb
aam
xchg
subb
xor
cmp
push
clc
daa
mov
out
mov
pop
je
push
xchg
shll
sbb
and
fwait
sti
imul
in
mov
popf
icebp
inc
outsb
inc
pushf
xchg
mov
jmp
mov
cmpl
push
icebp
mov
daa
jae
mov
xor
loope
test
leave
mov
outsl
or
xor
inc
push
dec
and
cmc
out
jmp
cmp
icebp
push
ss
and
les
mov
adc
adc
lret
xchg
or
js
sbb
push
mov
ja
stos
std
mov
mov
or
add
cmpsl
jl
mov
in
in
jmp
cli
in
xor
cltd
or
shl
sbb
dec
xor
fnsave
adc
aaa
dec
daa
mov
stos
add
push
scas
mov
dec
orb
mov
popf
mov
mov
bnd
int3
bound
jo
xor
movsb
leave
in
cld
cmp
xor
jo
xchg
cmp
and
gs
and
pop
lds
aad
int
add
ds
mov
sub
mov
hlt
call
mov
jns
lret
pop
loop
fwait
jno
fbstp
mov
shll
xor
fwait
gs
pop
stos
mov
lock
xorl
cmp
leave
and
push
or
or
pushf
sbbb
add
mov
in
out
cmc
inc
and
lret
xor
lahf
fbstp
xchg
test
cmpsl
clc
xor
adc
jns
and
daa
mov
test
in
sub
jl
add
lods
mov
stos
mov
lods
push
xlat
xor
push
push
bt
cli
or
aam
loope
rcll
inc
push
int
sbb
clc
adc
pop
xchg
mov
cmpb
aad
mov
leave
dec
and
les
and
adc
sub
lret
leave
and
mov
test
push
fldenv
xor
out
and
popf
dec
lret
inc
shlb
mov
test
mov
inc
add
pop
inc
dec
fldt
test
and
outsb
xchg
cwtl
mov
lods
hlt
ss
nop
lret
xor
mov
enter
aam
sbb
inc
test
bound
pop
cmpsb
ret
cli
outsl
mov
inc
lahf
push
dec
jp
cmc
push
inc
sbb
orb
or
jl
jb
addr16
jle
or
ss
push
js
mov
and
xor
jecxz
jl
adc
sub
pusha
imul
xchg
push
fs
inc
sbb
mov
test
pusha
repz
xchg
sbb
int
mov
mov
stos
jp
jl
sub
mov
mov
xor
fdivrs
cmp
xchg
inc
les
mov
sbb
icebp
mov
fldt
test
jge
jae
aad
pop
cli
into
sub
es
xor
mov
imul
fsubs
lret
cmpsb
and
jmp
fstpt
aas
andl
adc
addr16
sbb
inc
mov
cwtl
xchg
nop
jle
loope
mov
mov
xchg
dec
loope
hlt
leave
sarl
add
imul
cmp
out
sub
inc
adc
pop
push
hlt
fucomi
sti
cmpsb
rcll
inc
cld
mov
push
cmpsl
mov
sarb
push
insl
out
int
imul
push
sti
push
xor
fstl
push
or
pop
ret
pushl
jp
lods
pop
sub
enter
repnz
cmp
sahf
inc
and
aas
jg
add
fistpll
inc
rcrl
pop
dec
mov
mov
sbb
es
mov
mov
jmp
test
cmpsb
adc
ret
ds
xchg
add
mov
jg
lret
ud2
pop
leave
call
dec
sub
fcoms
nop
dec
sbb
mov
dec
add
push
scas
lods
adc
xchg
xorb
or
daa
out
popa
dec
or
popaw
cltd
adc
sub
lret
adc
in
mov
add
outsb
stos
rcrl
mov
shrl
or
scas
pop
in
or
jmp
sarb
cmp
inc
das
push
xor
sub
mov
mov
or
xor
pop
fstps
pusha
mov
inc
jge
fisubl
jae
repz
fsubl
xchg
outsl
movsl
loope
xchg
ljmp
test
sbb
jl,pt
and
inc
addr16
sub
and
sahf
pop
hlt
jl
adc
divl
xor
aas
out
loope
push
xchg
pop
test
sti
lmsw
xor
mov
lods
stc
int
cmpl
cli
or
pop
mov
jo
inc
dec
mov
int
add
mov
shl
ds
or
xor
mov
dec
xchg
or
fisubs
cmpsl
in
cmp
push
add
xor
adc
out
pop
adc
jno
mov
pop
fs
mov
jmp
loop
push
popf
jmp
fstps
dec
aad
cmp
in
push
sub
dec
insb
or
dec
jo
sarb
adcb
iret
in
and
cmp
cmp
and
rol
ret
je
or
cmpsb
in
dec
xchg
jne
xlat
testl
jbe
dec
sub
xchg
gs
sbb
push
xchg
adc
bswap
cmpsl
flds
mov
sbb
scas
pop
sbb
adc
cmp
in
aam
pop
mov
fsubp
sarl
enter
pop
jne
shlb
in
fldenv
movsb
lret
stos
fcmove
jns
lea
cli
stos
subb
dec
and
inc
sbb
negl
outsb
mov
in
sbb
lahf
or
xchg
jmp
jbe
mov
leave
out
in
je
test
loop
and
lea
jg
jnp
inc
or
and
lcall
fsubrs
into
mov
mov
out
aad
ss
jnp
loopne
fdiv
pushf
jle
divb
jbe
adc
ljmp
cmp
fcomps
inc
adc
jno
sbb
sub
imul
gs
or
imul
lcall
mov
or
lock
into
dec
mov
fsubrs
jb
pop
xor
or
mov
mov
push
cmp
jne
cmpl
mov
push
xlat
cmpsl
jg
mov
or
xchg
loope
popa
aam
jmp
sarb
cmp
lret
cwtl
lds
int3
leave
pushf
xchg
aad
pop
jge
out
adc
mov
xchg
jg
push
imul
sahf
or
clc
jge
lcall
fcoms
and
fs
xchg
orl
jmp
std
loope
adc
cmp
xchg
xchg
jns
push
mov
lea
jmp
pop
pop
dec
fsubl
in
fmuls
ljmp
lret
int
push
lea
push
das
inc
js
movsl
loope
pop
icebp
mov
lcall
mov
mov
std
jnp
hlt
xor
outsb
ret
lock
fimuls
fnsave
mov
jne
jnp
jbe
call
lret
jg
insb
sbb
pushf
pop
mov
scas
into
jmp
imul
outsb
xor
mov
jmp
insl
xor
sbb
push
sub
cmpl
and
dec
or
cmpsl
add
mov
or
mov
mov
add
sbb
jns
dec
js
test
aaa
cmpsl
sbb
out
xchg
popa
pop
popa
insl
inc
mov
ss
pop
inc
sahf
dec
loop
jnp
pusha
mov
rcrb
pop
loopne
scas
cmc
mov
imul
xchg
mov
xchg
sbb
and
adc
xor
adc
inc
jbe
movsl
mov
rclb
pop
add
push
testl
dec
arpl
mov
jg
mov
push
lcall
roll
cmp
push
jp
xchg
jge
shl
add
cmp
adc
adcb
int3
outsl
push
in
daa
adc
mov
and
dec
mov
icebp
lahf
push
cli
inc
jo
fcmovb
mov
dec
lds
push
mov
dec
sbb
push
movsl
js
ret
sbb
divb
dec
sbb
sbb
int3
mov
jmp
test
ja
in
mov
sbb
inc
push
rclb
sbb
lret
and
lock
std
jecxz
push
dec
scas
pop
scas
dec
rcl
lock
jne
inc
add
dec
popf
adc
mov
stos
jno
pop
or
jae
fistpll
aas
lea
idivl
dec
fcoms
in
fs
inc
rcrl
inc
push
ficoms
icebp
xchg
je
iret
or
mov
mov
cld
push
ljmp
mov
mov
aaa
pushf
hlt
call
aas
leave
adcl
inc
add
push
pop
ret
jl
add
lds
fsubl
mov
test
dec
popf
mov
lahf
pop
fbstp
lret
imul
sbb
sbb
cmp
sub
shll
pop
xor
mov
imul
xchg
aaa
and
mov
xchg
jae
pop
shl
les
or
xchg
sti
leave
jnp
out
dec
lret
xlat
inc
inc
jae
jle
ficompl
jmp
out
xchg
pushf
sub
push
imul
dec
sbb
rclb
cs
das
mov
xchg
mov
jo
jmp
movsl
fimuls
outsb
push
dec
es
push
xor
and
sub
jle
call
fdiv
xor
lcall
push
jb
loop
std
lahf
push
jb
test
mov
test
pop
mov
js
repnz
sub
stos
int
addr16
shlb
cmpsb
or
xchg
aaa
aaa
mov
fstpt
dec
mov
dec
add
movl
jmp
adc
inc
mov
out
jae
sbb
jge
iret
aas
js
in
jl
popf
lods
ret
jmp
ljmp
pop
pop
jg
ljmp
push
je
inc
and
push
addl
sti
mov
clc
mov
enter
and
xor
test
outsl
inc
sti
push
pop
int3
arpl
es
enter
jmp
xchg
loop
cmpsl
ja
inc
cmp
jg
repz
idivb
sbb
leave
xchg
pop
movnti
out
sbb
imul
aad
lret
sbb
fs
adc
jb
xlat
adc
adc
insb
in
leave
add
mov
mov
inc
xlat
jp
add
cmc
popa
pop
xchg
mov
pop
in
add
xlat
fdivl
jae
sbb
jns
je
mov
push
std
pop
jb
xor
jp
cmp
int
adc
shl
divb
sbb
dec
sar
mov
loope
adcl
testl
cmp
repnz
mov
test
pop
jl
dec
pop
mov
sub
mov
xchg
mov
add
push
sbb
andl
jmp
pop
inc
add
inc
jb
adc
bound
std
les
cmp
arpl
lahf
pusha
in
clc
inc
jmp
xor
out
xchg
xchg
out
movsl
clc
fldenv
pop
dec
out
arpl
dec
pop
andl
xchg
mov
mov
unpcklps
xchg
add
jo
dec
sub
aad
sbb
push
sbb
mov
mov
mov
insl
popa
stos
push
cmpsb
xchg
js
lock
cli
cmp
in
mov
xchg
in
jp
xchg
jo
fcomps
filds
aad
mov
dec
inc
cmpsl
sysenter
daa
pop
loop
push
push
pop
and
xlat
negl
lods
ret
fdivp
je
add
push
xor
pop
push
inc
and
repz
jnp
test
jl
sbb
test
pop
orb
and
pop
cmp
flds
sarl
scas
mov
jl
ret
push
pop
fmulp
pop
fs
dec
cltd
cmp
rcll
aas
inc
test
fistps
push
stos
or
sarl
dec
mov
inc
pop
jnp
inc
std
cmp
leave
sub
inc
jae
jl
jp
movb
out
add
and
addr16
loopne
mov
fcompl
scas
hlt
ljmp
mov
sbb
xor
xlat
jns
push
xchg
fisttps
mov
push
xor
mov
dec
pusha
pop
shlb
inc
insl
inc
pop
sbb
ljmp
hlt
push
xor
push
sbb
mov
fnsave
frstor
xor
int3
addr16
xor
jecxz
sarl
shll
adcb
push
cmp
xchg
pop
jmp
xor
jecxz
sub
or
adc
mov
dec
xchg
pushf
jae
inc
insl
jae
mov
out
out
mov
and
dec
loope
pop
mov
xor
insl
dec
adc
mov
icebp
outsl
or
in
cmpb
loope
lahf
or
cmp
dec
daa
push
cld
sbb
jne
mov
inc
jo
push
xchg
inc
pusha
cmpsb
mov
mov
xchg
mov
and
js
mov
pop
mov
sbb
or
arpl
rol
jge
mov
sub
dec
aas
mov
jle
bound
js
cltd
xchg
xor
test
daa
push
dec
or
sub
cmpsl
push
div
andl
xchg
jmp
movsb
pop
mov
cmp
int3
cmc
nop
xor
jge
mov
das
scas
and
mov
mov
aad
popa
in
push
ret
and
mov
inc
mov
test
dec
test
and
mul
int3
pop
dec
adc
or
mov
out
sbb
push
pop
xchg
push
mov
sub
sub
fdivrs
jnp
mov
adc
jmp
je
mov
fadd
xchg
sbb
jmp
mov
xchg
cli
mov
add
push
sub
dec
mov
inc
mov
ja
xchg
out
jbe
inc
mov
pop
inc
or
push
push
outsl
lods
cmp
lods
mov
gs
xor
pop
jns
ljmp
cmp
mov
mov
jnp
xor
inc
outsb
mov
iret
cmp
es
mov
adc
sub
imul
rcrl
and
jle
jle
pop
les
jp
lds
js
scas
cmp
dec
repz
mov
lret
nop
ret
ret
push
cmpsb
jl
mov
mov
hlt
sub
pop
call
mov
mulb
mov
sbb
mov
inc
jb
cld
fsts
jp
adcl
popf
aam
insb
pop
loopne
and
lea
gs
lds
sbb
jmp
jae
jb
inc
jmp
das
ljmp
sar
int3
notl
fwait
jae
xchg
inc
pop
insb
rcrb
cmpsl
movsl
in
pop
push
bound
xchg
fcoml
out
dec
mov
mov
mov
fidivrs
jmp
outsl
les
pusha
cmp
push
sbbb
jecxz
loope
add
mov
mov
adc
into
adc
add
jae
arpl
mov
adc
mov
jmp
div
or
lds
loope
std
xor
aas
rcrl
js
test
sub
pop
jmp
add
addb
mov
jno
stos
mov
cltd
add
inc
pop
lcall
sbb
or
insl
pop
cmp
iret
and
dec
and
imul
leave
inc
add
iret
imul
push
sarb
jmp
cmp
inc
cmpsb
or
sub
imul
jp
sbb
inc
mov
insl
mov
inc
add
push
jmp
je
cs
sub
stos
xor
loopne
mov
mov
scas
push
shlb
out
or
imul
cmp
add
xor
std
fdiv
das
inc
push
xlat
lcall
in
loop
xchg
cli
outsb
or
aam
daa
sbb
out
xchg
out
push
loope
xor
rep
mov
inc
sbb
mov
lock
or
xchg
mov
pop
push
mov
fsubs
push
popf
cltd
aad
fiadds
arpl
pop
inc
fwait
xor
stos
fwait
cmp
pop
pop
mov
jo
push
pop
mov
mov
je
test
jns
hlt
and
out
pop
adc
lcall
jge
ficomps
iret
out
jae
mov
dec
adc
sbb
dec
lret
xchg
add
jne
xchg
into
push
and
in
fcompl
xor
ss
dec
data16
ret
and
imul
into
jnp
mov
cld
mov
lods
popf
adc
popf
dec
xor
hlt
insl
pop
xor
repz
icebp
in
sbb
jmp
jg
xor
xchg
je
hlt
adc
mov
inc
ret
pop
add
dec
stc
daa
sahf
sub
or
loopne
mov
adc
jae
pop
subl
daa
ja
and
insb
mov
mov
mov
inc
dec
mov
int3
dec
adc
mov
jle
or
and
out
ss
mov
in
bound
add
imul
mov
sbb
xchg
inc
aam
mov
in
es
or
ret
test
popfw
xchg
rcrl
pushf
test
cwtl
insb
xchg
xchg
insl
pop
hlt
scas
cmc
cmpl
dec
in
scas
and
jle
inc
pop
test
in
pusha
loopne
adc
sti
add
push
cmpsl
adc
mov
mov
jae
imul
out
sub
lcall
mov
pop
inc
in
cltd
mov
cltd
xor
xchg
mov
mov
das
cmp
das
jl
pop
fisubl
cmc
pop
repnz
pop
jb
fwait
mov
dec
test
mov
mov
adc
mov
jnp
cwtl
in
or
or
push
sub
gs
pop
jecxz
inc
pop
sub
xchg
lds
js
imul
lds
pop
out
pop
loope
insb
dec
js
cmp
cmpsb
scas
jb
lret
mov
loope
or
xor
jmp
mov
mov
insb
popa
dec
mov
movsl
lds
xchg
push
jo
adcb
mov
inc
sti
insb
sbb
sub
push
sbb
dec
push
daa
mov
out
jmp
shrl
jecxz
in
mov
dec
rcrl
loope
je
xchg
pop
xor
adc
dec
xchg
mov
jle,pt
out
or
imulb
das
push
add
pop
cltd
shrb
jmp
out
xor
mov
push
pop
sub
sbb
gs
push
and
mov
xchg
mov
xchg
ds
cmc
sub
mov
aaa
or
pop
sub
int3
les
jns
xchg
jbe
popf
add
adc
test
insl
mov
ret
iret
out
fs
cmpb
mov
push
into
movsl
test
jg
pop
movsb
inc
lret
das
push
outsl
jne
sub
adcl
hlt
mov
or
aaa
xchg
mov
mov
clc
cltd
test
inc
pusha
mov
imul
cmpsl
fwait
jmp
test
xchg
sbb
jle
or
jle
jnp
and
mov
add
aad
mov
sahf
or
insb
jno
std
fcomp
xchg
mov
popl
inc
inc
add
loopne
outsb
hlt
fcomps
les
mov
pop
push
fucomip
roll
cli
lahf
sub
ficomps
pop
stc
dec
sub
xchg
pop
std
daa
pop
sub
push
mov
icebp
and
pop
je
adc
loopne
aaa
or
leave
jno
mov
xor
mov
movsb
out
and
jb
jl
out
stc
or
arpl
lretw
bound
dec
faddl
stos
lahf
pop
js
int
jne
inc
cli
arpl
sub
subb
out
push
mov
aas
jb
inc
in
jg
mov
ljmp
sub
test
cli
mov
or
popf
fisttpll
cltd
pusha
cmp
or
push
pushw
cmpsb
ficompl
negl
add
dec
xchg
test
jge
sbbl
pop
mov
sub
ss
xchg
sarb
pop
and
dec
imul
cmpsb
mov
jmp
jecxz
xchg
or
es
sub
bound
stc
and
adc
popf
sbb
sarb
stos
sarl
mov
fcomip
dec
sub
inc
pop
jmp
mov
lret
sub
inc
cmc
test
mov
jb
jae
test
cmp
cmp
adc
mov
loop
push
pop
or
inc
fadds
fwait
add
out
sbb
inc
and
sub
mov
in
xchg
sub
popa
dec
dec
cmc
sarl
sbb
jl
and
pop
or
jecxz
pop
adc
mov
dec
dec
cmpsb
frstor
pop
and
or
push
xlat
cmp
mov
dec
and
xchg
inc
out
mov
add
roll
pop
and
dec
xlat
adc
leave
xchg
aad
in
mov
rcl
enter
into
int
shll
xchg
daa
push
icebp
cmpsb
loope
sub
cltd
and
mov
js
cmp
sbb
sar
aaa
sbb
cmp
fwait
mov
add
shl
in
imul
stc
sub
scas
push
push
int3
fnop
mov
rcrb
adcl
popf
jecxz
and
add
pop
add
icebp
sbb
cmp
jmp
add
fisubl
aas
and
fwait
shll
test
out
fsub
mov
popa
pop
repz
pop
adc
imul
lcall
pusha
jmp
addr16
cld
aam
fstps
icebp
ds
mov
insl
stc
aas
xchg
mov
bound
add
push
imul
fs
jg
rcll
fs
lods
push
xchg
jmp
pop
test
push
and
ja
xor
sbb
xchg
enter
mov
cmpsl
push
shll
mov
xor
call
sub
dec
dec
fwait
or
xchg
add
pcmpgtw
jnp
pushw
lcall
nop
xchg
jmp
fdivrl
pop
ljmp
out
sbb
stc
sbb
add
pop
addl
in
clc
gs
xchg
or
jmp
sbb
cmc
inc
insl
lock
mov
cmpsl
cld
xchg
leave
add
pop
sub
sbb
mov
mov
dec
mov
pushf
mov
xor
fcoms
pushf
aad
mov
dec
mov
inc
mov
mov
loopne
sbb
wrmsr
or
into
insb
xchg
call
jnp
call
jb
sub
shrl
push
test
and
js
xchg
dec
inc
std
aam
push
repnz
or
lock
xor
jnp
mov
push
sbbl
gs
pop
mov
in
cmp
cltd
out
in
in
sbb
fstp
sti
inc
sub
addr16
dec
dec
cltd
imull
gs
aas
ss
xor
xor
push
xchg
into
lods
push
pop
jle
fists
das
std
cmp
idiv
xchg
lods
cli
adc
jno
out
adc
ja
adc
sub
and
sub
xchg
nop
push
push
stc
jb
out
das
xchg
inc
psadbw
cltd
fs
lahf
sub
pop
fcoml
sahf
push
jp
leave
sahf
jle
je
loope
jl
iret
adc
imul
inc
mov
dec
lret
cltd
mov
lods
add
andb
lds
repz
jmp
orl
dec
adc
popa
cltd
cmp
cmpsl
push
mov
in
xchg
ds
stc
adc
imul
shl
pop
rcll
notl
addr16
mov
ss
cmp
out
jno
arpl
add
aad
in
pusha
jo
mov
pusha
mov
push
int3
rcll
adc
jae
gs
push
prefetcht1
pop
mov
add
cmp
loope
mov
popf
xorl
push
dec
mov
ss
pop
xlat
repnz
cli
cld
pop
popa
ss
mov
cmp
mov
dec
fmull
mov
cmp
scas
mov
push
insb
sbb
mov
jb
push
xor
leave
push
insb
dec
pop
fs
loopne
shll
in
xor
adc
loop
xor
dec
test
adc
enter
cmpsb
cmpsb
sub
jmp
insb
lret
icebp
ja
jecxz
scas
add
pop
outsl
fists
dec
sub
jge
test
ficoms
ja
push
inc
lcall
fmul
xchg
in
nop
imul
adcl
xor
leave
push
inc
pop
push
out
hlt
sbb
add
and
mov
test
push
adc
cmpsb
popa
pop
push
jae
cli
add
xchg
pop
lock
and
fiaddl
imul
mov
gs
jno
pop
ja
inc
jg
mov
pushf
sub
mov
mov
idivb
sub
mov
xor
outsb
sbb
pop
add
mov
hlt
pop
add
stc
mov
pop
test
mov
and
repz
adc
push
and
ljmp
arpl
adc
out
cli
push
adc
aam
test
mov
xchg
out
push
jae
jns
dec
icebp
pop
and
mov
pop
mov
ss
add
inc
jno
mov
cmpb
mov
xchg
mov
pop
fwait
es
sub
push
insl
xchg
lret
daa
pop
mov
pop
inc
outsl
mov
adc
dec
sbb
mov
imulb
mov
outsb
xor
test
push
ficoms
push
inc
cli
jge
mov
cmp
adc
dec
ds
jmp
imul
dec
sub
ljmp
subb
xchg
pop
fnsave
cmp
cmc
mov
dec
sub
pop
loop
xchg
adc
sahf
movsl
add
sub
arpl
push
fcompl
xor
aas
jns
mov
mov
popf
and
ss
inc
lods
cltd
jns
cmp
add
dec
and
xor
in
add
roll
mov
fxch
movsl
or
fdiv
adcb
outsl
sahf
cmp
xchg
mov
xlat
mov
and
push
fwait
pop
mov
lods
outsl
out
jne
inc
std
dec
cmp
rclb
inc
push
loopne
adc
or
inc
lods
ljmp
mov
addb
dec
adc
inc
sub
loope
cmp
call
or
pushf
std
xchg
jmp
jb
shrl
xor
sub
sahf
push
fsts
into
out
stc
mov
iret
movsb
les
inc
push
cmpsb
cmp
inc
mov
mov
js
shlb
sbb
mov
scas
test
jmp
imul
icebp
je
fistpl
xchg
add
xor
fs
mov
jge
jmp
push
push
pop
sbb
mov
xchg
out
jo
rcrb
mov
repnz
mov
fimuls
in
cmp
repz
jo
inc
and
xor
mov
push
mov
loopne
sbb
mov
adc
jnp
hlt
movsl
ljmp
cmc
lock
mov
lea
dec
jnp
mov
pop
sbb
mov
sbb
cltd
int3
popf
out
pop
sbb
fildll
mov
mov
xchg
aas
std
and
data16
and
or
dec
pop
mov
lret
sbb
sti
pop
mov
lret
sbb
outsl
daa
jmp
cmp
andl
hlt
mov
jg
dec
pop
test
push
push
jae
dec
ret
mov
xor
jno
push
shl
sti
xor
out
dec
hlt
and
add
sbb
xlat
xchg
xchg
pop
cmp
dec
movsl
int
mov
test
ret
mov
jmp
arpl
sub
lcall
mov
xor
inc
jns
pusha
pusha
mov
rolb
lods
lret
loop
fildl
lds
test
subb
pop
arpl
aam
rorl
adc
leave
push
scas
or
push
sub
aaa
pushf
mov
xchg
cmp
fistps
dec
faddl
and
inc
add
fstps
jmp
xchg
cmp
push
xor
jno
nop
popa
outsb
dec
out
xchg
add
xor
addr16
pop
scas
pop
out
movsl
and
fwait
sbb
cmpsl
int
sbb
std
pop
xchg
mov
jo
pop
mov
mov
loopne
lods
adc
mov
adc
adc
je
pop
xor
scas
or
cmp
fwait
das
aas
mov
bound
rcl
ljmp
cmp
dec
inc
rcl
mov
mov
insb
or
sbb
shll
cltd
fistl
xchg
pop
jno
sub
insl
lods
or
ss
aas
add
mov
lods
lahf
push
lcall
ret
push
scas
pop
rorl
jge
scas
aad
xor
jecxz
push
lock
jo
cmpsb
or
sub
or
test
and
rorl
mov
push
rcll
pop
dec
xor
mov
dec
mov
jnp
add
fs
jo
sub
dec
push
inc
jno
xchg
push
xor
stos
imul
inc
sahf
gs
inc
push
psubusb
aad
mull
int
sarb
cltd
or
jl
fidivrl
push
xor
subl
jno
std
out
mov
ficompl
test
xor
fmull
push
pushl
fwait
mov
sbb
fsubl
test
cmp
cld
aad
lods
ds
mov
mov
adc
orl
mov
iret
mov
divb
dec
loope
movsl
dec
add
xchg
xchg
int3
clc
lahf
enter
sbb
inc
dec
inc
hlt
ds
test
pop
mov
mov
cwtl
cmp
imul
es
call
test
incb
ss
ljmp
lock
in
dec
loop
push
lret
lock
adc
fwait
stc
and
push
std
ret
pop
cmc
jg
insb
dec
mov
mov
lods
aad
xchg
jle
sub
stc
fneni(8087
scas
add
inc
mov
adc
jbe
cmp
imul
mov
test
int3
iret
aad
sti
mov
ds
out
cmpsb
push
pop
out
mov
js
aad
sarb
add
or
outsb
cs
hlt
fisttpl
test
ret
jecxz
jmp
call
fiaddl
push
xchg
mov
mov
xchg
pop
arpl
jg
add
aad
jl
push
outsb
inc
imul
enter
adc
data16
fwait
adc
xchg
add
ret
push
lahf
cwtl
addr16
cltd
mov
arpl
dec
push
lds
inc
daa
shlb
adc
mov
cmp
cwtl
sub
sbb
sbb
or
push
cmp
mov
ror
inc
aas
icebp
jo
cmp
fstp
push
cmc
not
mov
shl
dec
adc
repz
jb,pn
inc
cmp
mov
idivl
mov
push
jecxz
sub
mov
nop/reserved
test
mov
sub
test
jecxz
pop
andl
scas
das
xor
out
dec
shlb
mov
dec
cmp
pop
lds
in
out
fsubl
test
add
in
cs
and
sbb
movsl
mov
outsl
jb
sbbb
lret
popa
push
inc
ljmp
nop
sub
push
pop
out
outsl
fs
data16
leave
dec
sub
int
sahf
stos
or
popa
in
cmp
testb
fsubr
stos
push
xchg
mov
loopne
adc
imul
es
mov
mov
ror
sbb
push
mov
mov
sbb
std
test
andb
shll
jge
mov
es
add
jl
int
in
bound
mov
cltd
cmp
out
mov
lea
aam
pop
in
or
mov
xchg
imull
mov
mov
dec
mov
popa
dec
jg
bound
sub
movsb
mov
test
pop
je
out
es
rolb
xor
outsl
dec
xor
sub
dec
cmp
mov
xor
pop
rorb
sarb
push
loopne
lds
mov
inc
jecxz
xor
sbb
lods
push
in
xor
cmpsl
lret
pop
pop
xor
testb
cmc
sub
ljmp
xchg
cs
nop
jmp
lods
xchg
les
test
cmp
or
sbb
out
arpl
sti
sbb
lret
or
inc
call
or
movsb
popf
out
fists
fstl
adc
xchg
adc
inc
sbb
adc
fstp
mov
repnz
xchg
xchg
dec
das
negl
or
sbb
pop
stc
mov
xchg
and
sbb
scas
insb
mov
xchg
sbb
mov
test
mov
pop
sub
push
pop
aam
xchg
or
cmp
in
les
sub
or
lret
mov
dec
xchg
cmp
mov
lock
jle
scas
pop
or
xchg
cmp
mov
loopne
shr
setnp
enter
movsl
repz
fidivl
xchg
sbb
lods
jmp
lcall
fcmovbe
xlat
shr
sub
cltd
lock
xchg
and
push
add
loop
pop
xorl
xor
sub
idiv
cld
sub
xchg
ficoml
sub
jno
mov
out
js
cmp
xlat
outsl
mov
jo
cmp
loope
pop
stos
mov
outsl
push
lock
xor
ret
or
pop
das
enter
xchg
in
movsl
mov
xor
xchg
je
cmp
outsb
push
lret
stos
or
cmpsl
mov
xchg
or
test
in
pop
mov
inc
adc
mov
lods
pushf
fisttps
dec
insl
pop
aad
jbe
sub
cmp
mov
xor
pop
sub
mov
and
imul
fucomp
sti
cwtl
jae
xlat
or
inc
mov
sti
jle
and
xlat
mov
adc
mov
loopne
and
pop
dec
leave
jmp
sub
nop
cmp
dec
ffreep
cld
cmp
lods
subl
mov
dec
push
inc
gs
int3
stc
adc
inc
adc
mov
xchg
push
or
jl
lcall
fwait
add
rcrb
rcll
push
lods
inc
mov
rcll
lods
push
inc
imul
xlat
sbb
xor
push
xor
cmp
adc
push
mov
push
test
sbb
leave
fdivr
jae
ret
xor
clc
jne
scas
arpl
ss
ret
ret
scas
inc
idivb
pop
test
movsl
xor
insb
sub
sub
sti
sahf
pop
leave
sbb
sbb
pop
fstl
jmp
mov
and
out
int3
push
es
and
icebp
cmp
lods
sub
push
sub
fucomi
mov
xor
rcll
and
nop
xchg
out
je
ja
or
inc
mov
ss
dec
cmovnp
or
test
mov
cs
lcall
inc
mov
xor
and
test
mov
ss
lret
cmp
insl
ss
inc
or
insl
and
pop
jp
xchg
test
loopne
daa
lret
stc
xor
push
mov
add
aas
dec
or
ja
dec
shrl
xchg
sub
iret
test
xlat
adc
jecxz
xor
out
inc
ss
rcrb
test
cwtl
mov
cwtl
cwtl
add
loope
repnz
jne
stos
or
je
cmp
divl
dec
dec
das
jle
inc
jl
mov
mov
ficoms
xor
push
pop
mov
cmpsb
repz
les
aam
and
repnz
loop
push
hlt
ljmp
mov
leave
cmc
das
stos
lahf
or
out
jb
popf
sbb
movsl
push
xor
jns
push
js
dec
mov
les
or
and
push
lret
shrb
push
loopne
pop
negb
and
in
in
xor
pop
sbb
inc
sub
movsl
clc
xor
mov
dec
cmp
xacquire
mov
mov
mov
in
fnstenv
cmpsl
inc
lods
in
xor
jmp
add
xchg
mov
int3
push
stos
lcall
jecxz
fisttpl
pushf
int3
jno
sarb
popa
cmpsb
fstl
rorb
or
dec
shrb
adc
cmp
sahf
lea
cli
jb
push
hlt
arpl
pop
data16
and
test
mov
fs
stos
insb
negb
jg
cmp
or
insb
jl
ficoml
scas
bound
push
std
sbb
ss
inc
les
repz
aas
dec
cli
and
inc
test
cmpsl
xchg
xchg
pop
fisubrl
fadds
mov
fistpll
movsb
adc
lds
mov
or
and
mov
push
ret
clc
jle
popf
mov
stos
cld
mov
sbb
jne
lahf
mov
hlt
sbb
pop
push
jmp
add
stos
mov
xchg
out
gs
jp
jge
jmp
addb
gs
fnstenv
xchg
ret
mov
push
fadds
and
sub
xchg
sub
xchg
lds
mov
jno
mov
insl
andl
arpl
sub
rsm
ret
mov
pop
je,pt
jl
rcrb
fcomps
or
mov
ficoml
xchg
addr16
idivl
rcrb
ja
push
out
in
das
adc
push
and
scas
popa
inc
in
sub
xor
cmp
xor
push
jo
leave
push
js
push
js
push
dec
mov
xchg
in
or
loop
hlt
dec
clc
jecxz
push
scas
shlb
jl
cmpsb
fs
dec
mov
loop
xchg
pop
cmp
imul
xchg
arpl
jmp
mov
mov
dec
sbb
sahf
pusha
mov
arpl
inc
lock
rorl
fsts
or
dec
rolb
out
or
cmp
jge
sbb
jae
cmp
lcall
ja
push
lods
repnz
mov
mov
pop
mov
in
lcall
adc
xor
dec
std
shll
popf
jne
add
push
or
fistpll
ja
pop
out
imul
sub
jae
dec
in
cmp
sub
inc
xchg
or
fadd
or
pop
push
push
mov
cmpsb
movsb
push
pop
enter
xchg
sub
xor
jnp
enter
scas
dec
mov
sbbb
jmp
add
mov
push
cltd
fistpl
repnz
nop
loope
icebp
decb
in
pop
sbb
movsl
xor
icebp
xchg
pop
add
adc
fcoms
lock
cmp
add
pop
shll
push
pop
shrb
cmc
mov
adc
inc
xchg
aaa
test
addr16
notb
mov
loopne
xor
jb
or
ret
push
push
flds
fldl
sbb
cmp
lea
aas
test
jnp
sbb
mov
push
or
outsl
and
dec
in
mov
mov
nop
out
or
pushf
jle
mov
mov
in
sub
mov
andb
out
imul
fildl
adc
ffree
mov
inc
nop
inc
add
jns
out
cmc
jne
lods
arpl
xchg
push
xor
push
or
jg
cmp
jne
fsub
rorl
int
insb
lret
repz
mov
outsb
dec
mov
push
dec
mull
test
sbb
out
and
fwait
xor
pop
or
mov
icebp
aam
pop
push
mov
repnz
cmp
js
push
loope
jmp
iret
nop
adc
aas
mov
fisttpll
pushf
xor
mov
fs
or
sbb
or
cmp
cmp
or
jnp
xchg
cli
xor
sti
mov
add
and
fwait
mov
call
pusha
lcall
icebp
mov
sbb
and
iret
pop
fwait
and
and
les
fidivrl
dec
sub
lea
hlt
in
dec
rep
ror
lds
outsl
push
add
push
aad
mov
cmpsl
fs
fdivrs
fucomi
fidivrl
loope
inc
and
enter
adc
in
jne
divb
out
sub
movsb
out
mul
movsb
enter
out
pushl
lods
out
or
out
scas
lret
rcr
sahf
cmpl
aas
hlt
ljmp
ficoml
sarl
mov
shll
hlt
fnstcw
push
xchg
outsb
sti
ror
and
push
push
insb
adc
repz
aaa
sti
dec
jmp
dec
or
rcl
sub
js
cmp
mov
pop
mov
jo
cld
sbbl
ljmp
out
outsb
sub
stc
adc
bound
pop
das
jae
push
jae
cwtl
daa
mov
adc
cltd
add
sarl
into
ret
dec
movsl
add
mov
out
xor
cmp
push
mov
cli
jge
add
dec
cs
js
pop
lea
std
and
xchg
lea
adc
testl
inc
aam
cmp
inc
enter
and
pop
in
shrl
in
xchg
mov
je
cmp
jp
push
lret
or
and
dec
int3
xlat
and
sub
mov
cli
scas
dec
sbb
das
and
push
jmp
push
sarl
shrl
mov
pusha
loop
adc
lret
out
pusha
icebp
shlb
cmpsb
loop
jno
jle
fistl
xlat
push
push
mov
xchg
or
jbe
add
daa
sbb
lret
add
mov
ss
push
inc
mov
jmp
test
inc
popf
dec
loop
es
test
push
movsl
jecxz
xchg
xchg
adc
aad
dec
push
mov
xor
xchg
mov
dec
or
mov
cmp
std
push
sub
subb
adc
push
jae
pop
cmpsb
adcb
outsl
stos
pusha
outsl
lods
gs
or
mulb
cltd
sti
sbb
in
mov
mov
in
lret
cmp
sbb
xchg
in
out
and
jle
ds
add
add
mov
mov
ret
mov
lock
xchg
and
inc
pop
dec
mov
jecxz
and
jne
icebp
adc
inc
inc
sub
jb
xchg
mov
pop
loopne
sahf
out
insl
mov
ss
sbb
fnstcw
inc
ds
stos
roll
adc
pop
cmc
arpl
decb
cmp
repnz
test
dec
pop
movb
lcall
sub
daa
movsl
mov
arpl
imul
mov
or
orb
cwtl
imul
push
pop
sahf
jbe
mov
cld
jo
into
pop
fs
sbb
movsl
subl
xchg
xchg
jle
ret
aam
lcall
ret
sbb
pop
pop
adc
sti
shll
ret
inc
inc
fsubr
cmp
cmp
sti
push
mov
lea
mov
mov
sub
pop
mov
xchg
or
mov
push
sub
or
lret
xchg
jns
xor
mov
dec
movsb
imul
and
mov
and
cmpxchg
xchg
aad
jno
loopne
and
cltd
push
pop
stos
fwait
inc
jmp
sti
movsb
dec
jnp
loop
imul
lods
mov
scas
mov
mov
adc
pushf
xchg
js
imul
mov
push
cmp
cs
jecxz
push
push
sti
repnz
mov
sub
pop
aam
pop
call
mov
fildll
jns
dec
mov
cltd
frstor
inc
add
pop
cwtl
out
sub
in
dec
jnp
mov
inc
movsb
andb
xchg
out
sub
jno
out
and
push
clc
mov
js
int
sub
out
sub
lods
in
sti
sub
pop
add
jne
aas
stos
jmp
shlb
cmp
test
pop
push
dec
out
add
filds
mov
jl
ret
xchg
lea
ret
jae
jnp
and
loop
pop
sub
orl
adc
inc
xchg
mov
add
xchg
dec
gs
or
pushf
dec
orb
mov
sbb
jmp
stos
dec
push
pop
popf
sub
insl
xchg
jg
lret
sti
movsb
test
or
dec
push
cmpsl
or
mov
inc
shrl
arpl
lcall
jg
push
xchg
stos
sub
pop
jae
jno
ficomps
jns
xor
ficoms
or
sub
mov
dec
mov
addr16
adc
repz
or
enter
add
inc
pop
in
mov
mov
dec
dec
xor
pop
xchg
add
daa
idivb
xor
cld
mov
jmp
fcoms
mov
adc
mov
add
pop
mov
icebp
add
bound
mov
cmp
in
popf
and
in
icebp
jle
push
ret
test
sbb
icebp
cmpsb
lret
addr16
sbb
out
cmp
xor
pop
dec
pop
aas
bound
test
sbbl
cmpsl
aas
loope
fimull
xor
and
inc
mov
notb
in
cmc
je
jns
pop
and
push
outsb
ds
xchg
sbb
xchg
inc
movsb
xor
inc
inc
jl
sub
cmp
fildll
xchg
jb
rcr
popf
pop
int
and
adc
add
aad
and
adc
icebp
decb
std
int3
lds
or
scas
pop
xchg
jo
dec
daa
lret
movsl
pop
std
dec
es
jo
sub
nop
insl
push
sub
inc
add
or
lahf
aad
out
jl
loopne
lret
fsubrl
jge
addr16
orl
mov
inc
xchg
jo
or
outsl
inc
rorl
fwait
jns
loope
sbb
jns
add
mov
in
or
cli
cmp
nop
adc
cmp
shll
push
adc
push
fmull
fimuls
roll
aas
lods
and
bound
mov
or
xchg
ret
jns
push
dec
adc
aam
or
add
dec
mov
subl
ficoml
ljmp
push
pusha
inc
cmp
pop
enter
je
ds
mov
push
jo
cli
cmpsb
lods
cmp
inc
and
mov
mov
or
sbb
iret
hlt
repnz
loope
xchg
lods
adc
arpl
cs
adc
mov
xchg
or
jno
sti
inc
jg
pop
jmp
dec
in
inc
movq
and
les
fcompl
or
lea
sti
or
scas
lmsw
aas
lods
xchg
cmp
dec
ds
ja
push
adc
pop
ljmp
loopne
sub
cli
call
cmpsb
cltd
push
pushf
mov
ss
mov
add
adc
test
fdivrp
push
arpl
lret
xrelease
out
mov
jbe
cmp
inc
loopne
adc
bound
scas
aad
adc
inc
pop
pop
xor
push
sbb
and
stos
mov
add
aas
addr16
xchg
xchg
add
pop
call
arpl
stos
insl
mov
pop
hlt
cmp
lods
shlb
movsl
and
dec
mov
add
add
loop
xchg
fldl
sbb
sar
movsb
fimull
shll
loopne
push
push
pop
xor
mov
jecxz
stc
insl
mov
and
mov
in
movsl
and
aas
sbb
xchg
test
imul
test
lods
inc
lahf
idivl
popf
into
jle
test
stc
cld
jge
mov
xor
lret
ljmp
mov
addr16
cmp
push
push
pop
sbb
pop
mov
iret
pop
mov
imul
fwait
in
mov
fnsave
jo
xchg
and
outsb
mov
add
mov
subl
jge
add
add
fs
sbb
sti
xchg
in
ret
sub
cwtl
pusha
dec
xchg
pop
xchg
add
cmp
push
adc
fsubr
push
jmp
push
or
adc
leave
dec
push
lret
pop
push
cmp
push
cmp
pop
cmp
add
pushf
jg
ret
movsb
xor
pop
push
mov
xlat
ficoms
jle
pop
push
call
add
adc
xchg
cli
mov
mov
popa
stos
mov
cli
in
rcrl
repz
test
or
out
negl
std
sbbb
adc
sbb
add
push
inc
xor
jno
sub
xchg
fidivl
inc
les
loope
xchg
hlt
push
aam
les
xlat
push
js
pusha
cmpsb
shll
jne
sub
inc
aaa
push
inc
stos
inc
cmp
pushl
jp
sbb
cmp
test
sarb
jge
xchg
cmp
sub
sub
lea
mull
out
pop
add
sub
jbe
pushf
adc
pop
ja
mov
cmpsl
or
scas
xchg
push
gs
sbb
jae
mov
lcall
aas
scas
or
aam
sbb
pop
test
mov
push
sahf
ja
dec
arpl
mov
test
xor
push
cmpsb
mov
lds
xlat
cmpl
mov
pop
xchg
xchg
lret
lds
popa
sbb
push
lret
out
ljmp
mov
push
lret
lahf
xlat
jno
inc
add
adc
movsl
fnstsw
hlt
unpckhps
clc
orb
cmp
push
mov
lock
jecxz
stos
lods
cmpsl
femms
dec
cmp
dec
pop
xchg
insb
dec
in
call
push
stos
popf
push
int
xlat
pop
bound
rclb
pop
add
push
adc
cs
xor
bound
or
cli
pop
jae
aam
pop
xchg
dec
or
inc
cs
pop
pop
mov
or
mov
fmull
xor
outsl
mov
inc
in
mov
mov
std
pop
sti
lahf
fcmovnbe
imul
jae
sub
jecxz
scas
and
ret
fcomi
movsl
jmp
movsl
ja
rcl
fdivs
xor
sub
in
mov
xchg
push
pop
fimull
leave
call
movsl
out
dec
adc
mov
test
clc
mov
push
and
sbb
imul
mov
fnstenv
mov
xchg
lds
pop
jbe
clc
out
ljmp
lret
test
xor
push
sub
dec
mov
ds
arpl
aam
mov
and
mov
popl
loop
out
jb
stos
fisubrl
lret
and
mov
xlat
sahf
dec
xchg
aaa
adcb
std
xchg
sbb
mov
inc
mov
sbb
xchg
mov
jnp
inc
daa
stos
stos
push
std
sbb
into
sub
cs
mov
in
test
enter
mov
add
sub
roll
mov
adc
mov
and
icebp
sbb
xor
jl
and
mov
jno
clc
adc
jecxz
lock
test
xor
fbstp
fcmovbe
pop
lahf
xchg
push
mov
mov
jns
fnsave
ja
pop
scas
sbb
mov
outsb
andl
ret
cmpsl
imul
fistpll
nop
jno
mov
test
push
xchg
stc
test
jns
lds
inc
adcl
rcrb
xchg
push
xor
cmp
shrl
ret
aad
shrl
mov
jo
sub
addb
iret
cmpsb
push
lahf
sbb
jbe
cmp
imul
jae
fstl
fcoml
mov
dec
inc
int3
xchg
or
mov
mov
out
jbe
and
out
aas
jge
dec
xchg
nop
repz
daa
das
pop
pop
clc
int
xor
and
adc
or
dec
fcmovne
or
mov
adc
popf
cmp
xchg
mov
jle
sub
popf
dec
ja
jo
push
imul
cmp
mov
add
insb
lods
bound
aad
das
jbe
xchg
push
or
out
inc
fstps
sub
inc
test
dec
jp
adc
out
push
les
jg
dec
xor
bound
mov
and
mov
cltd
aad
mov
jmp
fsubrl
lret
cmp
mov
mov
push
leave
xor
push
lret
xchg
repz
call
jb
fldcw
lahf
inc
xchg
jg
sbb
fisubs
in
cmp
addr16
test
pop
dec
xor
xlat
leave
pop
sbb
and
popa
lock
cli
fs
lods
or
adc
icebp
adc
xor
dec
mov
shlb
sbb
mov
mov
clc
xchg
mov
adc
or
cmpsb
loope
imul
arpl
sahf
push
sahf
mov
ja
mov
xchg
hlt
fimuls
pop
jbe
sub
sbb
fimuls
push
push
mov
sti
inc
or
popa
loop
adc
cmp
loope
imull
gs
pop
dec
invd
cli
mov
jmp
fwait
lcall
add
ds
outsb
inc
dec
jo
add
rcrl
cmc
arpl
pushf
inc
inc
leave
stc
fdivr
sub
sub
flds
scas
shl
mov
inc
adc
push
push
mov
cmpsb
cmp
stc
int3
fucomi
insl
mov
and
pop
pop
mov
jl
cwtl
lock
das
push
rorl
fxch
xchg
leave
sahf
push
xchg
push
adc
sbb
and
push
ds
mov
imul
adc
add
out
pushf
lahf
xchg
adcl
xchg
fildl
mov
cmp
arpl
and
inc
push
push
in
enter
push
xor
jle
cmp
cmpsl
push
jo
shlb
sbb
loop
arpl
loope
jle
inc
notb
cmp
shlb
pop
mov
rorl
js
pop
jp
pop
scas
out
xchg
push
scas
roll
int
lcall
push
xchg
js
mov
pop
gs
push
mov
inc
lahf
lcall
stos
test
mov
and
jmp
popf
dec
xchg
pop
loopne
int
jb
or
lock
sahf
cmp
xlat
shr
out
sbb
xor
add
jle
or
icebp
sti
adc
adc
dec
sbb
xor
rorb
and
repnz
ret
xchg
jo
sbb
idivl
add
gs
or
popf
jg
push
push
test
or
mov
mul
stos
inc
adc
stc
add
adc
jmp
xor
push
and
ljmp
adc
adc
sbb
punpcklbw
sbb
or
mov
inc
iret
sub
stc
adc
cwtl
sti
fnsave
add
cmp
mov
mov
in
jne
ljmp
fidivrl
data16
adc
xchg
xor
in
xor
push
dec
push
and
mov
jo
jno
dec
nop
icebp
dec
push
outsl
idivb
push
imul
mov
hlt
add
sbb
cs
out
je
insl
push
fsubl
pop
ds
mov
jno
mov
jns
lods
fcomps
inc
lea
push
mov
pop
and
cmp
clc
xlat
dec
in
push
jo
mov
jno
pop
lahf
add
pop
loope
jnp
jno
shll
scas
popa
popf
es
aas
jne
add
mov
or
aad
pop
sub
cmpsl
xchg
sets
pop
and
jmp
cmpsl
les
jmp
cmp
test
sahf
sub
in
xor
daa
movsl
inc
dec
fsubrs
ret
pop
push
pop
inc
xor
add
cmp
sbb
xchg
dec
fdiv
inc
pop
arpl
outsl
mov
das
loopne
pop
add
pop
stc
ja
sahf
cmp
add
jne
xchg
orb
add
push
xor
jbe
adcl
pop
cmp
call
mov
cmp
daa
mov
out
sti
push
ficomps
loop
push
jecxz
out
movsl
pop
test
ficomps
xchg
pushf
mov
push
das
bound
out
push
decl
out
imul
cmpsb
inc
push
cmp
add
into
fnstcw
pushf
sti
jnp
popf
rcrb
mov
jnp
lret
stos
lods
push
test
aad
sbb
mov
aaa
mov
or
xor
pop
popa
push
and
imul
or
lods
inc
pop
push
loope
clc
mov
mov
out
mov
cmpsb
adc
mov
jle
xchg
adc
loop
mull
dec
mov
pop
andl
push
shlb
lods
jg
pop
sbb
or
jae
and
dec
out
es
add
dec
repz
cltd
sub
fwait
hlt
and
rolb
xchg
cmp
pop
sahf
loope,pn
lods
out
mov
sub
test
mov
push
adc
inc
movsl
pop
stos
aaa
add
popf
push
les
jmp
sub
frndint
in
inc
xor
dec
out
clc
std
mov
call
adc
imulb
jne
ret
jbe
mov
data16
mov
leave
inc
lods
push
cmpsb
in
dec
jecxz
std
ds
cmpsb
jnp
test
ficoml
jge
sbb
mov
push
adc
sahf
inc
pushf
pusha
leave
add
icebp
pop
and
cmp
push
jle
xchg
cmpsl
and
fdivrl
imul
std
les
enter
mov
push
jge
mov
arpl
pop
or
movsl
cmp
ficomps
sub
mov
cmp
push
dec
jb
into
pop
xchg
inc
sub
scas
push
pop
popf
shl
iret
cmp
jb
add
and
or
repz
dec
xlat
aas
imul
jne
test
lea
mov
insl
aam
sbb
in
cmp
mov
fs
sub
mov
xchg
das
stc
mov
icebp
or
mov
add
xchg
iret
test
and
or
in
dec
mov
xchg
jo
sbb
test
sub
popf
fidivs
jnp
test
ss
fnsave
lods
jp
shr
pop
insl
add
in
sub
out
dec
loopne
pop
sbb
mov
sbbb
je
jg
test
rcl
icebp
mov
adc
mov
xor
leave
stc
movsb
fistps
frstor
call
fimuls
jnp
fdivp
xchg
push
fildl
cmp
or
dec
call
push
jl
call
pop
push
bound
and
jl
push
jae
out
mov
clc
stc
mov
mov
xchg
jp
pop
and
stos
les
pop
and
iret
scas
shr
int3
aaa
jno
repz
xchg
pop
movsl
or
adc
movsb
jne
push
dec
dec
sub
cwtl
pop
outsl
xchg
mov
push
lock
mov
lock
cmp
jp
add
xlat
stos
inc
push
int
popf
rolb
stos
fwait
cld
addr16
int
cli
lcall
pop
jno
hlt
mov
lds
ret
rcrl
lods
in
jae
in
dec
jg
jne
iret
orl
movl
rorb
fst
mov
cmp
clc
and
add
inc
xchg
jge
enter
data16
daa
sbb
ds
add
popl
inc
xlat
inc
inc
orl
aas
or
ja
rcrb
int3
dec
inc
jle
fmuls
cwtl
mov
push
lret
pop
in
loopne
add
imul
faddp
adc
sahf
add
test
inc
add
loopne
pop
loopne
fimuls
lods
movsb
dec
clc
mov
jns
test
xchg
dec
xlat
fcmovne
sbb
loopne
mov
sub
push
or
jns
ret
push
pop
and
bound
push
inc
push
sahf
sbbl
cmpsb
jmp
jge
mov
and
jmp
and
into
dec
aaa
js
inc
cmc
mov
mov
add
cmpsl
mov
dec
fildl
mov
out
pop
jl
push
add
cmc
loopne
sub
xor
dec
push
jecxz
mov
shl
dec
andl
xor
fisubrl
sbb
shl
sub
lcall
inc
out
add
and
addl
mov
std
mov
mov
fs
stos
jns
repz
cmc
xor
and
out
test
xchg
cmpb
pop
fcoml
fdivs
add
sbb
mov
movl
adc
xchg
imul
pusha
outsb
insb
lret
or
mov
jmp
in
or
adc
sbb
pop
xchg
hlt
inc
mov
or
lcall
in
lret
or
call
inc
out
pop
fistps
adc
out
insb
leave
lods
in
pop
add
fwait
inc
mov
and
mov
mov
mov
mov
or
dec
ss
mov
push
cmpl
jae
das
sub
dec
inc
roll
sbb
shrb
aam
mov
adc
and
jmp
loopne
mov
add
mov
sub
add
loopne
scas
mov
jecxz
rol
push
xor
ja
pop
sahf
or
cmp
rcrb
call
dec
mov
in
xor
in
pop
mov
fst
adc
sahf
ljmp
cmpsl
mov
std
pop
sbb
pop
cmc
int
push
loope
mov
mov
push
pop
jl
xchg
jmp
mov
adc
or
divb
mov
inc
out
lret
pop
add
and
lret
xchg
dec
lahf
loop
xchg
out
int
sti
clc
fwait
jecxz
in
in
jecxz
in
xchg
xor
stos
ds
jbe
mov
mov
enter
filds
cmp
loopne
repz
sti
shrb
adc
or
into
and
fsubs
jae
enter
jo
std
xorl
inc
aaa
test
loop
repz
or
xchg
or
and
mov
repz
insl
out
dec
pushw
int
in
fnstcw
sub
pop
cwtl
jmp
test
das
mov
dec
insl
push
add
pop
mov
xor
adc
xor
nop
cmp
lds
xchg
iret
pop
cmp
imul
dec
rcl
adc
shlb
imul
mov
inc
pop
pop
lock
repz
mov
sub
fcmovne
fnsave
mov
stos
cmp
ret
dec
or
repnz
sti
dec
xchg
arpl
sbb
push
sbb
idiv
push
pop
cmpsb
mov
repnz
stos
shr
fs
or
inc
ret
call
push
dec
movsl
iret
ss
pop
or
pop
xchg
inc
rcrl
dec
jl
ret
cmp
push
stos
dec
inc
xlat
mov
loop
fnstsw
dec
xor
dec
ds
add
pushf
mov
sarl
outsb
addb
lahf
sahf
outsl
mulb
fldcw
adc
out
inc
ja
dec
test
lods
jno
cmp
pusha
xlat
inc
movl
push
or
sub
cwtl
jno
daa
cld
and
imull
add
sub
popf
push
fwait
mov
sarl
je
add
jb
jno
and
pop
xor
or
test
dec
adc
cmc
ds
adc
xchg
push
call
mov
fwait
xchg
orl
imul
cwtl
and
push
aam
xor
push
sbb
cs
fildl
xor
pop
jmp
imul
es
xlat
test
jmp
pop
ror
stos
mov
lret
mov
pop
leave
xchg
mov
mov
mov
jle
or
inc
push
shlb
or
out
xor
dec
test
fbstp
lahf
fists
int
or
loopne
negb
mov
pop
dec
mov
adc
cmp
dec
xor
adc
mov
daa
jle
es
imul
jmp
cmpsb
stc
add
fidivl
iret
push
daa
ds
mov
testl
jno
jae
je
js
lods
pop
or
pop
out
mov
sub
mov
incb
adc
mov
adc
xchg
fwait
dec
insl
inc
cmp
pop
aad
pusha
pop
and
lods
sbb
xor
subb
insl
push
push
inc
pop
pop
or
test
enter
subl
bound
pushf
jne
ljmp
loope
and
gs
lahf
cld
pop
pop
jmp
sbb
lret
pop
ret
fstps
pop
in
jecxz
sub
aam
sbb
inc
add
fwait
jae
movb
mov
imul
ror
jns
push
pusha
je
push
inc
mov
mov
cmp
sbb
mov
dec
and
mov
cmpsl
cmp
pop
jl
cmp
jae
je
jbe
enter
ds
jl
xor
inc
mov
pop
movsb
rcrb
scas
push
inc
jns
ss
xchg
jno
xchg
jb
in
mov
mov
inc
mov
and
std
in
mov
rorl
fwait
notb
pop
lods
dec
jne
std
mov
mov
cwtl
mov
mov
and
push
xlat
adc
xchg
mov
push
sti
je
cmpsl
push
and
and
or
cmc
mov
sbb
aaa
int3
outsl
aad
aas
popf
mov
icebp
mov
inc
test
fdivrl
xchg
sbb
mov
popf
ja
pop
es
xchg
mov
push
mov
xorl
xchg
mov
dec
out
popf
jle
addr16
xor
jo
push
cmpl
or
cmpsl
mov
cli
mov
aas
xchg
mov
fdivl
jnp
std
rcrl
or
roll
adc
dec
adc
ror
jecxz
loopne
int
mov
out
fdivrl
stos
jg
test
fldcw
jp
inc
das
ret
and
iret
insb
pushf
repz
cmp
push
inc
mov
ret
xchg
xor
in
xor
int
or
push
push
adc
cmpsb
ja
add
dec
les
add
add
lret
pop
jno
sub
mov
xor
ljmp
jl
xchg
pop
into
add
push
jg
in
add
stc
pop
in
xlat
sbb
xlat
dec
jns
xor
hlt
inc
sbb
push
lock
daa
loopne
cmp
xchg
xchg
mov
cli
lahf
xorl
push
lods
out
shl
arpl
adc
sarb
outsb
pop
ret
cmp
inc
cmp
lret
adc
in
je
cwtl
mov
and
ds
jo
push
repz
bound
mov
add
xor
idivl
mov
pop
cmp
mov
iret
cmpsb
xchg
push
push
iret
pop
cmc
sbb
mov
in
rcll
push
ljmp
jne
push
xchg
lods
mov
leave
xchg
xchg
lcall
test
xlat
inc
imul
pop
inc
adc
pop
mov
lahf
xor
xorb
pop
adc
sub
in
sbb
push
cmp
les
call
xchg
mov
lcall
insl
and
or
add
ss
cmc
pop
ficompl
jp,pn
mov
xor
cmc
rolb
sub
outsb
loope
xchg
loop
outsl
lret
xor
add
ja
test
mov
push
repnz
mov
call
push
popa
cltd
mov
lret
cmpsb
push
pop
cli
mov
pushf
andb
pop
into
sbb
xor
pop
sub
mov
iret
lea
sbb
leave
mov
dec
pop
or
je
sbb
cli
scas
add
inc
scas
jmp
push
and
dec
icebp
mov
cmp
inc
icebp
xchg
sub
sbb
gs
xor
mov
mov
ja
lahf
out
mov
pop
in
pop
mov
aaa
je
xchg
add
mov
and
pop
cmp
fwait
jmp
lret
lea
inc
add
pop
pushf
nop
jp
je
std
loope
in
and
add
or
in
imul
add
ret
jb
cltd
or
mov
lock
pop
les
shrb
or
sbb
pop
ret
dec
dec
add
add
sub
stos
pusha
call
push
jmp
bound
hlt
cltd
out
out
mov
pop
in
test
insb
fs
xchg
xchg
sub
stos
sbb
and
test
cmp
sub
sub
fistpll
int3
repnz
mov
cli
scas
shll
inc
fnstcw
loop
push
cmpsb
mov
adc
es
je
xlat
jmp
das
sti
sub
imul
sub
jmp
push
orl
adc
inc
jmp
or
fwait
scas
add
push
adc
xchg
cmp
push
mov
rcrb
pusha
imul
rorb
fcmovb
std
or
sub
jns
jmp
mov
jl
ret
inc
push
xor
xor
mov
cltd
add
orl
pop
mov
pop
pop
incb
sub
nop
push
pop
icebp
test
aaa
mov
dec
insb
mov
lock
xchg
or
mov
push
fdivl
cmpsl
dec
int3
jns
xchg
lret
and
add
les
je
pop
loop
xchg
mov
cmpsl
pop
xchg
push
jb
jl
and
mov
push
daa
dec
pop
sbb
xchg
orb
enter
fimuls
cli
push
vsqrtsd
mov
loope
stc
jge
lock
outsb
rorb
js
adc
imul
pushf
push
xlat
or
clc
rclb
lods
cmp
or
sbb
pop
hlt
mov
mov
movsb
mov
push
add
movsl
adc
pop
outsb
xor
fisubrs
mov
xchg
daa
inc
jo
cwtl
mov
add
jg
sub
inc
push
xor
and
and
push
sub
and
sub
inc
mov
lahf
hlt
add
sbb
cmp
sarl
iret
inc
cltd
pop
inc
pop
cmpsl
aam
jo
aam
std
lret
xchg
lock
repz
xorl
dec
and
push
adc
aaa
lret
pop
cmp
in
mov
lods
data16
jbe
xchg
inc
jecxz
ss
adc
dec
mov
loopne
stc
xor
and
into
xchg
add
cltd
out
or
lret
add
pop
pop
mulb
gs
and
mov
sbb
incl
nop
jl
into
cmc
push
xorb
add
add
stos
adc
or
pop
lods
addb
jne
jl
gs
xchg
sbb
xlat
shlb
or
pushf
xor
sti
mov
pop
inc
inc
adc
mov
adc
cmpsb
shrb
pusha
and
and
cmp
mov
stos
xchg
ret
jmp
leave
push
push
add
mov
clc
xor
push
cmpsl
jle
sub
pop
les
out
cmp
mov
xchg
ret
xchg
insb
pusha
xchg
shlb
add
mov
add
test
pop
sbb
mov
stc
je
xchg
int3
pop
ja
pop
pop
mov
in
enter
inc
dec
xchg
jae
push
jbe
cwtl
add
and
sub
cwtl
mov
ss
xor
loop
js
adc
pushf
mov
fsubrs
shlb
xor
std
data16
sub
jno
dec
mov
fadds
jge
and
pushf
xor
xchg
js
inc
std
or
jbe
out
xor
dec
fmull
int
xchg
jns
hlt
add
mov
mov
insb
leave
or
jmp
xchg
or
scas
outsl
push
adc
pop
and
lock
mov
ret
mov
jns
add
sahf
mov
jge
xchg
in
js
movsl
fadds
xchg
les
add
fbstp
pop
shrl
ret
mov
sub
mov
inc
xchg
xor
outsb
loopne
xlat
movsb
adc
stos
jmp
cmp
sub
ds
xor
add
sbb
push
into
cmpsl
jne
sarb
or
call
inc
push
jae
adc
inc
jmp
mov
adc
xor
jge
jmp
xlat
out
fnstenv
stos
rolb
das
mov
iret
neg
adc
and
repnz
jecxz
mov
dec
xlat
jl
push
add
mov
jle
sbb
sub
xlat
mov
adcl
movsl
jmp
les
cmp
sub
inc
int3
pop
aad
pushf
into
push
dec
fcoms
adc
inc
stc
mov
repnz
add
aas
fisubrl
stc
mov
data16
mov
push
mov
loop
or
fwait
push
or
testl
dec
sbb
pop
and
push
or
ficomps
hlt
pop
mov
or
popa
icebp
ret
or
sarb
mov
sbb
push
rorb
xor
popf
loopne
sbb
lds
pusha
outsl
data16
xchg
jmp
mov
pop
and
iret
lret
filds
repz
testl
sub
jg
int3
mov
clc
jmp
cmp
les
xchg
icebp
adc
xor
pop
pop
idiv
into
nop
xorb
fidivrs
out
sbb
sbbl
pop
inc
arpl
cld
xor
and
adc
mull
imul
fadd
mov
push
stos
dec
add
insl
add
xor
jl
inc
popa
pusha
xchg
mov
jae
scas
sbb
dec
push
inc
push
das
push
ret
fwait
aas
and
stos
andl
push
fs
subl
std
mov
sahf
out
icebp
ljmp
jne
sbb
adc
inc
out
jmp
cmpb
int
bound
push
roll
mov
pop
mov
xchg
popa
je
adcb
cmpsb
repnz
push
pop
fbstp
and
mov
js
cmc
jge
icebp
idiv
das
cld
dec
sbb
mov
popf
xor
jle
hlt
lcall
cltd
add
sbbl
inc
pop
push
rol
sbb
mov
jno
push
cwtl
push
ror
jp
out
fidivrl
out
repnz
xor
fiaddl
ret
xchg
sub
add
les
and
addr16
mov
xchg
stc
sti
push
jnp
mov
loop
fimull
mov
or
stc
idivl
mov
mov
fistpl
aas
dec
aad
xlat
lods
orb
cmp
es
cmp
xor
cmpl
and
inc
cmpb
inc
push
sarl
cmpsl
jne
sbb
mov
fstl
push
inc
jns
lcall
fsubrl
inc
xchg
xchg
mov
inc
sbb
jmp
cmp
add
or
cmp
jge
movsb
cmp
das
mov
xor
lcall
mov
jle
push
pusha
pop
pop
xchg
outsl
inc
fdivrs
sub
jo
push
jecxz
rorb
fchs
lret
cmp
jmp
daa
dec
and
add
mov
pop
and
inc
jecxz
ss
xor
pushf
adc
push
xor
jle
mov
imul
pushf
inc
xchg
in
inc
popa
test
adc
sub
or
or
iret
lods
sub
or
gs
cmp
and
sbb
pop
inc
pushf
lods
dec
push
fcmovnb
ret
sti
and
call
out
xlat
xor
xchg
xor
push
and
pop
mov
cli
pop
dec
pop
clc
jb
dec
sbb
jns
stc
lea
mov
fdivs
add
data16
lret
popf
rcrl
and
add
outsb
xor
push
iret
pop
in
xchg
jno
ja
getsec
pusha
lods
cmpsl
sub
and
je
add
mov
ss
add
ja
dec
into
pop
movsl
cmp
mov
and
mov
scas
mov
ficomps
mov
add
cltd
icebp
cld
push
mov
mov
adcb
ds
jne
adc
dec
xchg
mov
cmp
in
mov
shll
jle
ds
inc
ss
xchg
aam
or
test
jbe
sub
hlt
and
sub
out
popa
fwait
movsb
cld
xchg
std
arpl
cmpsb
negl
mov
cmpsl
out
test
loope
jno
ljmp
add
fnsave
jno
mov
dec
and
in
fs
mov
fbld
fmuls
iret
cld
adc
cmp
mov
out
lea
xorb
jbe
mov
pop
add
in
aas
notb
sub
lods
jle
and
mov
mov
fcomps
les
and
in
fsts
pop
ds
pop
sahf
mov
je
sbb
dec
loope
jge
cmp
das
jns
cmp
popf
shrb
cmp
inc
xor
mov
pushf
jno
xorb
mov
push
add
into
lret
nop
subb
mov
inc
or
push
adc
insl
cmp
mov
push
mov
fimull
ret
inc
into
dec
add
movsb
int3
pop
xchg
cmp
pop
in
and
adc
mov
sti
js
mov
inc
loop
clc
cltd
addb
xor
cltd
mov
xor
ret
add
cmpsl
xor
out
add
loop
sbb
sahf
cs
and
mov
dec
pusha
mov
dec
incl
adc
call
imul
jmp
test
xor
fwait
xchg
int
ret
out
mov
dec
xchg
mov
pcmpeqd
mov
jle
imul
sbb
mov
sub
sub
cmp
mov
ja
add
or
push
push
inc
cmpsl
aas
repz
and
fildll
pop
outsb
nop
int
lods
dec
idivl
push
pop
cmp
xchg
inc
lahf
push
out
hlt
push
push
mov
pop
iret
xor
jmp
loop
or
pop
pop
adc
sbb
push
es
pop
jl
push
cmp
push
popf
hlt
sub
push
xchg
cwtl
and
outsl
testb
adc
mov
and
addr16
sahf
pop
jb
das
inc
outsl
mov
sti
pop
dec
or
and
push
int
fs
sub
jb
sub
sub
mov
pop
jae
out
inc
or
cltd
cmp
dec
aaa
pushf
adc
mov
js
push
mov
js
fxch
add
sbb
cmp
mov
dec
js
push
mov
pop
stos
mov
jmp
pop
mov
sti
fcomip
mov
out
fisubrl
mov
pop
ret
scas
or
sti
xchg
pop
mov
test
enter
daa
mov
sarb
ret
out
scas
jne
or
jnp
mov
in
jl
repz
das
cltd
lock
sbb
and
cmp
xchg
xlat
fbld
jno
mov
pop
or
in
lds
and
push
mov
ficompl
mov
adc
daa
leave
push
cmp
or
mov
lock
jo
imul
jmp
subl
fwait
shlb
out
cli
lret
xor
ret
test
xchg
jle
lock
stos
push
mov
arpl
lcall
and
add
push
out
jne
mov
shlb
cmp
data16
jecxz
mov
sbb
daa
ja
adc
or
pop
sub
dec
push
jg
jle
sbb
mov
add
inc
out
loopnew
subb
pushf
lea
aaa
sub
dec
and
mov
adc
push
fcmove
les
cmp
jecxz
popf
divb
aas
imul
rclb
imul
xor
movsb
aas
stc
popa
xor
imulb
dec
std
pushf
into
inc
adc
dec
scas
mov
call
shlb
jno
cmp
std
push
in
cmp
loop
xchg
mov
mov
xorb
addr16
dec
add
cwtl
xor
popa
imul
lds
sbb
cmp
idivb
outsb
push
inc
pusha
cmp
imul
mov
stos
lods
add
sar
repz
jne
jae
inc
adc
and
shlb
andb
xchg
push
jmp
jb
mov
sahf
cmp
movsb
inc
adc
loopne
mov
int3
mov
out
test
insb
punpcklwd
add
outsb
fistpll
and
cmp
mov
ficompl
movsl
jmp
andb
imul
int
push
sub
movl
or
sub
sub
jl
repz
push
stos
mov
rclb
mov
lods
jae
outsb
cmp
lods
sub
daa
out
dec
movl
dec
aas
jg
mov
xchg
ljmp
lcall
pop
lahf
add
sarl
pop
xor
and
fstl
mov
ret
adc
fstpl
test
push
xor
inc
pop
arpl
jo
test
push
jns
push
mov
xchg
inc
fnstsw
jl
fnstenv
mov
cmp
clc
lock
mov
lret
jbe
in
xchg
cmp
mov
sar
ss
in
fisttpll
sbb
mov
push
dec
scas
jno
pop
lret
xchg
cmp
notl
mov
inc
inc
lods
xchg
cmp
into
gs
ror
daa
cwtl
cmp
pop
test
jns
movsl
sarb
push
adc
push
les
xor
arpl
insl
inc
jae
jbe
adc
adc
xchg
fwait
jmp
movsb
cmpsl
mov
clc
jl
bound
jae
and
mov
mov
push
pop
lods
out
xchg
out
out
das
xor
xor
in
flds
xor
shlb
popf
test
lret
and
add
lods
ret
mov
inc
hlt
jns
cmc
cmpsb
js
int3
or
aas
inc
ret
xor
cmpsb
sub
xchg
dec
xor
and
cltd
push
rorb
out
jmp
jo
or
cmp
mov
jle
fstpt
ja
pop
add
xlat
call
and
call
out
cmp
pusha
repz
inc
xchg
and
mov
pop
jno
pop
mov
push
fnstsw
outsb
jle
ret
movl
jae
push
stos
dec
sahf
ja
jne
ljmp
std
sbb
nop
jns
xor
mov
test
sarb
inc
sub
push
pop
xchg
je
lock
popf
inc
ss
adc
movsl
and
mov
pop
out
stos
scas
sarl
pop
adc
xor
ljmp
push
arpl
popa
ret
inc
lds
outsb
negb
xchg
cwtl
in
and
xor
jge
sbb
call
loope
data16
adc
cld
shlb
inc
adc
xchg
xchg
cmpsl
andb
faddl
adc
adc
popa
sub
incb
ja
insb
push
push
pop
sbb
cmpsb
test
add
jp
xor
adc
in
jb
mov
jb
adc
xlat
loope
cmp
or
mov
push
and
fsubrs
mov
push
mov
mov
data16
cmpsb
loope
mov
rcr
fwait
push
in
or
imul
cmc
repnz
rorl
cmp
xor
and
inc
cwtl
mov
xchg
xchg
call
std
fwait
or
test
out
mov
mov
xchg
push
imul
inc
adc
cmp
stos
imul
sbb
in
sar
out
jbe
rclb
xchg
int
xchg
adc
adc
pop
mov
lea
ss
xor
or
dec
add
clc
sub
shrb
daa
sbb
test
sub
aas
jecxz
pop
ja
mov
dec
xor
cld
or
xchg
aam
add
cs
mov
xchg
jne
popa
xchg
sbb
sbb
xchg
add
mov
inc
fldt
std
or
jbe
sub
scas
push
jecxz
adc
inc
sub
mov
jno
call
insl
decb
mov
push
nop
cmp
loopne
int3
push
dec
sbb
cltd
xchg
add
pop
fsubrl
dec
incl
rorb
mov
lods
cmp
inc
jb
dec
jb
xchg
addl
xchg
cmc
xor
test
push
cltd
mov
mov
ror
lods
inc
jle
repz
push
jl
cltd
iret
iret
xchg
and
lds
mov
xor
lods
jnp
pop
mov
mov
adc
xchg
ja
sub
cmpl
pop
xchg
pop
into
out
xchg
push
outsb
fnsave
stos
mov
loopne
sbb
sub
in
pop
bnd
jl
addb
inc
int3
shlb
stos
rorb
push
nop
pushf
xor
bnd
sub
xchg
or
adc
roll
pusha
ret
jne
sub
cltd
mov
push
pop
sub
push
or
mov
test
dec
mov
ljmp
fcompl
repz
mov
popa
data16
fadd
adc
dec
cvtps2pd
popa
rcrl
or
mov
lods
mov
lret
jb
jbe
mov
add
mov
mov
sbb
js
jne
pop
jo
sbbl
sub
mov
addr16
sub
mov
test
pop
mov
sbb
jge
sbb
sbb
cs
dec
jle
mov
mov
cltd
cmp
ret
push
jne
sbb
mov
sub
add
es
gs
js
sub
lret
xchg
cmp
pop
dec
and
sbb
ljmp
mov
lock
hlt
xchg
mov
lods
pop
jbe
lods
ficoms
mov
adc
pop
adc
mov
sub
pop
outsb
jmp
lock
ret
std
dec
and
mov
jp
cmp
mov
imul
movsb
dec
inc
jge
test
jb
in
cmp
repz
or
cmpsl
push
xchg
addr16
xchg
fisubl
daa
mov
or
push
test
jg
loope
imul
pop
pop
mov
arpl
adc
sti
lea
mov
xor
push
adc
stc
pop
and
pop
aam
and
loope
bnd
push
jmp
int
mov
cld
add
jmp
sub
sbb
jno
incb
adc
lret
in
enter
bound
inc
pop
jne
cmpsb
out
mov
shl
fwait
repz
mov
sti
and
adc
xor
jge
call
pop
faddl
popf
insb
inc
push
adc
in
ljmp
icebp
pop
dec
inc
cmp
mov
xchg
xorl
out
repz
loopne
dec
mov
dec
pop
mov
sub
sbb
ds
add
cmc
and
jmp
sbb
into
mov
or
test
xchg
sub
mov
cmp
in
shr
push
orb
and
mov
fsubrp
jo
ljmp
sub
lods
adc
repnz
jmp
xor
gs
push
repnz
out
jle
jns
cmp
fwait
mov
mov
dec
ljmp
jge
ss
out
push
add
jp
fwait
xchg
fwait
mov
jp
loop
sub
outsl
sar
sub
fnstsw
xor
jae
sbb
or
xchg
mov
ficomps
adc
add
mov
sti
xorb
mov
lcall
lret
mov
ret
ret
leave
mov
leave
jnp
jl
popa
and
or
jns
push
and
and
jecxz
jns
insl
fdivp
jb
lock
mov
inc
das
mov
popl
xchg
inc
mov
adc
adc
movsb
push
movsl
lea
adc
sti
xor
and
adc
xchg
push
xor
xchg
push
sarl
ficoms
popf
dec
lcall
mov
xorb
cmp
arpl
push
subl
push
mov
stos
mov
int3
mov
mov
in
scas
outsb
push
sarb
loope
pop
mulps
jo
jmp
out
adc
pusha
mov
dec
cltd
sbb
pop
andl
loop
test
cmp
mov
imul
xlat
cmp
nop
add
adc
add
cmp
mov
rolb
das
outsl
testl
rcrl
outsb
ljmp
stc
mov
pop
push
nop
stc
enter
movsb
mov
xchg
dec
xchg
dec
xor
cmp
mov
mov
outsl
pop
xor
adcb
adc
test
loopne
dec
pop
andb
in
push
leave
mov
rclb
movsl
sti
mov
pop
and
ret
mov
lahf
repnz
cmp
aaa
sbb
jb
or
outsl
adc
cmp
add
fdivr
inc
fistpl
push
imul
cmpsl
int3
mov
push
ljmp
push
push
pop
inc
push
psadbw
pop
pop
mov
mov
ss
dec
js
fwait
mov
jo
push
repz
adc
dec
jb
fsubrs
mov
pop
mov
dec
shrl
shlb
xchg
in
cmp
mov
loope
test
push
mov
in
sbb
insl
imul
aas
sbb
mov
or
data16
in
lcall
fisttpll
test
idivl
arpl
lods
mov
mul
sub
shr
mov
pop
loop
subl
mov
xor
ret
jmp
jmp
xchg
out
repz
popf
mov
and
mov
outsl
mov
pusha
ret
mov
inc
cmp
and
pop
mov
inc
test
lahf
ret
outsb
jle
movsl
jmp
push
mov
xchg
pop
in
test
jmp
adc
push
adcb
stos
les
imul
daa
or
mov
test
das
addr16
xor
cmpsl
je
mov
push
inc
jp
stos
jecxz
pop
movsb
imul
movsb
or
dec
mov
xlat
loopne
scas
mov
jp
imul
mov
ret
test
jbe
mov
inc
push
jg
mov
jecxz
andb
sub
movl
xor
lahf
sub
push
mov
mov
xchg
mov
jg
cld
mov
dec
icebp
hlt
add
push
or
inc
out
movsl
dec
clc
mov
cmp
and
shrb
sbb
subb
iret
imul
jg
les
iret
jge
test
and
push
es
inc
test
popa
test
les
mov
lea
sbb
jmp
ret
xchg
sub
data16
jecxz
fidivrl
sti
cli
pop
outsl
jnp
mov
cmp
sbb
xchg
push
dec
jmp
out
lahf
lea
call
ja
jle
iret
mov
sub
mov
dec
sbb
fisubl
or
xchg
and
dec
out
call
mov
test
je
loop
xor
into
int3
faddl
in
or
mov
cmp
mov
add
xchg
mov
dec
mov
in
inc
lods
add
xor
or
xchg
xlat
inc
xchg
pop
popa
jno
idivb
int3
or
pop
lods
in
dec
and
dec
enter
lods
lcall
cs
adc
cmp
cmpsl
hlt
add
cmpsb
cmc
nop
pop
es
inc
mov
push
inc
dec
in
ljmp
aas
lahf
int
aad
add
mov
pop
bound
imul
fs
inc
cld
add
daa
popa
mov
sbb
mov
push
lea
mov
rcrb
js
cmp
lods
fs
cmpsl
ret
rcll
fs
push
dec
pop
mov
ds
inc
lods
pop
jb
fistpl
adc
and
outsb
add
decb
addr16
inc
dec
xor
loope
hlt
faddp
out
pop
test
mov
mov
dec
gs
icebp
push
movsl
mov
add
pusha
sbb
lahf
xor
pop
pop
imulb
xchg
mov
pushf
jns
mov
mov
andl
and
lods
adc
popa
movsl
inc
sub
out
out
pusha
lret
lds
lret
pop
cmpsb
nop
fimull
adc
push
aam
push
xchg
es
cmp
jge
xchg
ljmp
mov
sbb
mov
add
and
jbe
inc
imul
pushf
cmpsl
bound
pop
mov
outsl
mov
jns
xchg
cmp
xchg
cmc
pop
push
pop
gs
fmull
call
outsl
cmp
imul
sbbb
pop
arpl
sbb
ret
xor
pop
or
push
mov
mov
xor
push
jns
jg
add
sub
jns
mov
mov
nop
inc
adc
or
mov
inc
sub
ja
push
pop
add
fbstp
ret
sub
push
jbe
pop
cmc
jp
orb
pop
adc
loopne
pop
stos
bound
icebp
clc
lods
ret
sbb
lods
and
sbb
dec
fchs
xor
out
call
pop
hlt
addr16
fistl
ret
push
push
dec
or
pusha
arpl
mov
push
jmp
push
aaa
xlat
cwtl
lea
push
xchg
push
mov
inc
mov
std
lea
xchg
iret
lds
shll
setb
shlb
fs
dec
add
insb
rorb
mov
inc
push
aam
mov
lods
sti
aaa
dec
int
mov
mov
inc
test
push
xor
dec
adc
xlat
xor
pop
and
push
mov
sbb
sbb
jns
add
lea
lods
ds
lret
out
and
inc
jb
jb
inc
shl
inc
addr16
loopne
jp
sti
sbb
mov
loop
push
movsl
adc
pop
fidivl
sbb
clc
and
neg
jbe
pop
idivl
adc
xchg
and
out
xchg
xchg
enter
out
and
repz
mov
shll
fs
fs
popf
push
add
fnsave
jnp
push
mov
aaa
outsb
fildll
dec
loopne
sti
daa
outsl
orb
pop
xchg
fsts
inc
add
std
cmc
cli
inc
leave
subb
push
or
mov
bound
push
push
mov
jecxz
cmpsl
addr16
mov
dec
add
xchg
mov
dec
sbb
pop
dec
jbe
mov
insb
cmpsl
jb
dec
cmp
cwtl
inc
les
dec
or
pushf
sarb
pushl
adc
jb
lods
cmp
push
lcall
sub
iret
xor
subps
mov
imul
sbb
adc
push
pushf
sub
add
test
sub
cmp
cld
ja
push
dec
cmc
adc
jno
ljmp
adc
jae
push
sub
test
dec
je
mov
pop
jns
inc
sub
js
bound
lret
test
or
jno,pt
mov
cmpsl
or
insb
adc
stc
xor
pop
dec
xchg
push
idivl
xor
inc
mov
xchg
pop
sub
ljmp
mov
es
mov
pop
push
jo
inc
lock
fmuls
ds
loop
cld
cmpsl
add
out
fisubl
popf
sbb
xlat
cmp
sub
xchg
sub
or
mov
insl
mov
xor
roll
jge
and
loop
xchg
xchg
mov
incb
fbstp
pusha
and
gs
dec
sbb
data16
pop
fmull
stc
jnp
mov
xchg
ds
add
or
xchg
jge
les
call
imul
jle
outsl
xor
or
or
lea
push
mov
int
fisubrl
incl
out
jecxz
jbe
pushf
orb
popf
mov
inc
cmc
imul
sbb
xchg
adc
daa
bound
in
les
mov
cmp
push
mov
and
or
mov
stc
cmp
test
aaa
jmp
cli
xlat
mov
lret
loope
je
lret
inc
cmp
lods
cmp
add
je
adc
cmp
jmp
xchg
fistpll
jecxz
jecxz
out
push
cltd
cmp
jnp
je
popa
fnstsw
inc
cld
mov
es
leave
sub
adc
sbb
fstl
insb
out
je
xchg
ret
mov
xchg
fsts
hlt
mov
cli
ljmp
test
mov
mov
or
and
inc
and
add
mov
jge
inc
mov
mov
aam
adcl
sub
push
dec
enter
cmpsb
or
and
adc
aad
mov
jmp
cmc
lret
adc
jmp
or
shll
addr16
inc
fdiv
sbb
add
mov
mov
in
pushf
push
pop
dec
or
daa
push
push
xor
and
dec
xor
inc
push
xor
mov
xor
sahf
cmp
fisubrs
scas
call
negb
xorb
hlt
push
fucomip
mov
mov
and
or
mov
jnp
jns
jno
insl
mov
xchg
mov
pop
add
and
or
sub
pop
xchg
push
lds
mov
push
pop
cmp
out
mov
mov
out
add
xor
jbe
fld1
mov
int3
jbe
ljmp
lcall
pop
ret
lahf
mov
dec
sub
pushf
inc
stc
or
dec
dec
mov
cli
mov
lds
mov
cmp
push
fisubs
and
jno
in
pop
pop
dec
aad
clc
fwait
popf
cltd
popa
ret
bound
inc
pusha
cltd
movsb
mov
call
sbb
imul
or
sbb
popf
dec
jg
cltd
popf
adc
lret
push
movsb
js
adcl
sbb
jae
push
lods
popa
gs
ja
or
inc
pop
mov
lcall
cli
movsl
int
iret
inc
inc
lret
fldenv
mov
repnz
cmp
jbe
dec
mov
not
imul
adc
pushf
stos
mov
push
push
jmp
sub
iret
ret
scas
push
andb
sbb
scas
dec
push
fwait
jae
sarl
mov
lods
cld
mov
scas
jle
cli
add
mov
dec
pop
jmp
fidivrs
bound
pop
adc
sub
fmull
lret
aam
dec
mov
out
fidivrl
push
mov
xor
loopne
addr16
inc
outsb
push
fdivrl
sub
mov
sbb
push
dec
leave
aas
pop
mov
sti
dec
ret
rcrb
mov
nop
push
adcl
sbb
dec
fxch
mov
and
adc
lret
das
push
cmp
xchg
sahf
call
out
mov
dec
mov
in
push
mov
push
pop
insl
pop
subl
shrb
gs
mov
aas
and
pop
cltd
and
in
jecxz
jg
cmp
jg
xor
mov
fdivr
sahf
or
std
xchg
mov
mov
cmp
incb
xor
mov
cltd
insl
popa
push
into
pop
pop
adc
clc
jg
cmp
pop
sbb
cmp
repz
loope
inc
cmp
jle
addb
xor
dec
push
adc
adc
adc
mov
lret
fisttpll
pop
mov
fnstenv
adc
push
jno
mov
jmp
mov
scas
add
add
andl
fldt
out
push
push
jl
test
test
pop
ja
cmc
dec
fldl
or
outsl
lods
data16
mov
sub
and
jge
cltd
ret
lahf
cwtl
and
cmc
clc
xor
cmp
mov
lret
inc
imul
xor
cld
cmp
sub
int
adc
xchg
pop
fidivl
mov
adc
fwait
leave
pop
sub
cmp
inc
add
das
jp
push
inc
push
movsb
adc
stc
push
mov
popf
and
jo
xor
daa
negb
sbb
stos
sub
sbb
in
cmpsb
adc
add
pop
mov
repnz
and
cltd
xor
xchg
clc
ja
mov
push
and
shll
fcmovnb
dec
jmp
fstpl
lds
inc
jne
lods
pop
inc
xor
xor
gs
aam
jae
and
popf
or
jge
pop
inc
andb
push
push
out
mov
sbbl
out
subl
fwait
jecxz
shll
and
adc
popf
pop
shll
push
inc
insb
jge
inc
push
mov
and
and
mov
cmpsl
xchg
dec
popf
test
mov
jbe
inc
lret
ljmp
rolb
add
mov
loopne
mov
repnz
mov
adc
mov
push
xlat
push
push
mov
dec
mov
mull
or
mov
mov
addb
insb
repz
insb
lock
jne
mov
test
lea
cmp
push
xchg
inc
in
aad
repz
negb
das
jae
xor
bound
subl
jl
js
sbb
xchg
sahf
inc
aam
cs
imul
insl
or
shlb
xor
pop
fs
sub
sbb
mov
into
xor
sub
xor
scas
js
xchg
pushw
cmpsl
mov
xchg
pop
push
or
ror
or
jb
inc
nop
xlat
xchg
fistpl
lret
add
shll
sub
add
xor
mov
add
rorl
das
arpl
push
cmpsl
lcall
dec
xor
sub
incl
dec
add
insl
add
cmp
jb
hlt
adc
sbb
sub
out
gs
cmpsl
jbe
nop
lods
ja
xchg
sub
jns
fcompl
mov
lds
sarl
int3
add
jbe
mov
xchg
ret
sbb
insl
mov
iret
nop
cmp
loopne
cmpsb
pop
sbb
sbb
or
nop
mov
ss
and
insl
imul
lock
loop
push
movb
mov
daa
sbb
adc
imul
xorl
mov
test
fsubrs
inc
fwait
es
out
movsb
aas
xchg
jg
pop
cmp
leave
loopne
add
into
xchg
mov
fs
mov
sbb
cmp
ljmp
adc
outsb
sub
es
insb
jecxz
mov
xchg
sahf
fcoms
adc
arpl
cmp
dec
inc
add
push
rcr
shrb
inc
js
jg
cmp
and
adc
fisubrl
cmc
push
jne
mov
adc
pop
and
fdiv
and
mov
push
cmpsl
mov
pusha
mov
popaw
insl
add
mov
jmp
adc
sub
jnp
push
movsb
cmc
jo
rcll
dec
arpl
push
xchg
jg
jnp
cmp
xchg
pushf
icebp
mov
mov
cmp
imul
adc
pop
fiadds
scas
mov
movb
pop
xchg
popa
shrl
sub
data16
std
mov
lret
lcall
and
hlt
shrb
rcrb
cmc
mov
xor
cmp
jecxz
sarb
mov
push
inc
adc
xor
mov
or
adc
int3
add
lods
cmpsl
cmp
repnz
pop
neg
dec
lret
xchg
iret
or
xchg
mov
mov
xchg
mov
and
xor
sbb
loope
sub
add
test
jno
fwait
lods
sbb
les
fcmovnbe
mov
aad
scas
test
adc
test
pop
push
cmp
and
adc
rclb
mov
mov
dec
xchg
iret
sub
sbb
iret
mov
add
int
lcall
and
push
data16
xchg
incb
cmc
lret
lret
adc
lret
add
or
ror
fwait
push
out
xchg
fidivrl
aam
add
fdivl
movl
sub
test
xor
stos
outsl
push
insb
pop
pop
int3
xchg
jb
dec
lcall
xchg
xchg
rolb
and
cli
pusha
mov
lods
loope
test
sbb
xchg
mov
add
lods
pop
addr16
lds
sub
mov
push
and
shr
pop
jo
dec
mov
xchg
xchg
lods
xchg
loop
mov
sub
scas
imul
cmp
pop
push
push
dec
faddl
xor
lods
sahf
fwait
loope
xlat
jbe
pop
push
les
add
bound
adc
dec
out
mov
stc
sbb
daa
aam
push
rcrb
mov
mov
mov
jne
and
mov
faddl
and
and
jmp
sub
inc
mov
stos
in
mov
sbb
cmp
in
clc
adc
fnsave
pop
inc
ja
gs
cmc
aas
out
cmc
dec
sbb
hlt
dec
mov
sbb
rcrl
and
call
push
aaa
cld
mov
add
nop
out
jmp
andb
mov
inc
jp
es
lret
sub
enter
xchg
test
cmpsb
inc
fisubrl
cli
sub
jge
data16
pop
leave
scas
mov
iret
lahf
in
div
pop
les
stc
add
xchg
jp
push
and
jbe
sahf
scas
shll
dec
mov
cmp
rolb
in
cs
or
mov
inc
out
mov
xor
adcl
or
or
jg
sarb
stos
inc
idivl
shl
mov
xchg
mov
pop
push
mov
jns
call
push
jmp
incb
js
call
decb
inc
xor
andl
test
js
lea
fisubrs
aad
fstpt
mov
ja
je
mov
movsl
lea
push
aam
lahf
imul
scas
in
add
xlat
dec
and
mov
push
fwait
push
lea
pop
ja
jge
test
cmp
dec
jnp
adc
sarb
sub
popf
xor
mov
outsb
ret
lods
xor
mov
or
sar
sub
test
iret
leave
test
mov
dec
xlat
movsl
and
fdivrl
mov
sbb
mov
fnstenv
loopne
and
fwait
mov
in
cmc
mov
xor
pusha
into
nop
outsb
dec
sbb
movsl
mov
inc
jg
and
jb
mov
aas
repnz
fcomps
rorb
adc
sbb
add
and
aad
pop
pop
jno
in
cmp
dec
icebp
xlat
adc
in
leave
xchg
and
pop
or
adc
rolb
sbb
push
divl
adc
sahf
pop
das
mov
mov
jno
jno
clc
shrb
add
sub
cld
inc
sbb
mov
push
jecxz
adc
pop
aad
mov
inc
xchg
xor
lret
fdivr
jnp
or
and
jmp
outsl
enter
pop
int3
dec
mov
jno
into
lds
mov
inc
mov
adc
cmc
xchg
sbb
push
pop
jo
pop
inc
ja
pop
mov
sbb
aaa
lods
lock
imul
push
xlat
push
jno
xchg
push
test
subl
insb
mov
and
sahf
fs
jle
or
xor
sahf
popf
sub
jle
add
into
lret
mov
cli
mov
fcoms
jl
push
es
add
push
out
mov
arpl
push
or
pop
stc
imul
cmpsl
cmc
test
aad
lcall
das
adc
inc
push
push
xchg
jl
xlat
lea
shlb
aaa
add
aad
addr16
xor
dec
inc
and
pop
rclb
dec
jg
push
aaa
inc
fdivrp
mov
xor
sub
aad
sbb
inc
gs
inc
add
push
call
push
mov
adc
or
testl
and
and
loop
leave
scas
dec
in
pushf
xlat
lret
cmp
outsb
inc
and
sbb
mov
jmp
cmc
arpl
dec
loop
insb
mulb
jmp
mov
loope
test
popa
lret
fbstp
jecxz
inc
jmp
mov
mov
add
stos
sahf
sbb
addl
add
jmp
mov
or
xchg
loopne
sbb
lahf
lods
fwait
mov
lcall
inc
scas
sbbl
lret
jo
push
add
xor
mov
and
adc
mov
int
mov
dec
iret
jns
xor
aaa
cmpsl
int
fildll
clc
fdivl
repnz
imul
pushl
fwait
cmp
pop
push
push
add
cwtl
inc
bswap
mov
jge
dec
mov
jno
mov
nop
lods
adc
mov
mov
jae
mov
push
adc
and
cmp
mov
subl
cli
stos
xchg
mov
xor
dec
mov
dec
sbb
fnstcw
pop
push
push
mov
in
cli
mov
xor
jno
int
fsubrl
push
push
in
sub
jle
jp
xchg
pop
jge,pt
imul
ret
ret
test
xchg
into
sbb
loopne
push
mov
out
cltd
lcall
sub
add
lods
jo
push
gs
add
out
subb
outsb
in
push
mov
bound
mov
stc
clc
push
sbb
mov
pop
adc
xor
sarb
fnsave
notb
add
sub
clc
mov
sahf
push
push
lcall
aas
jb
push
pop
cld
aaa
and
sahf
pop
dec
inc
mov
sbb
inc
and
ret
jbe
dec
jbe
jge
add
outsw
test
sbb
mov
cwtl
jne
or
outsl
push
aad
in
stos
scas
push
cmp
push
leave
cmpsb
jmp
ljmp
lcall
ror
inc
pop
mov
cltd
pop
stos
adc
mov
xchg
lods
jnp
mov
out
jne
movsl
rclb
jno
jnp
mov
ss
cli
cli
pop
add
scas
mov
cmp
pop
stc
sub
add
aam
aam
jns
xchg
mov
rolb
jg
scas
pop
in
pusha
mov
fmul
push
jl
ds
out
and
xchg
mov
aad
mov
adc
sub
xlat
jnp
mov
aaa
faddl
or
inc
nop
inc
xlat
aas
xchg
xchg
movsl
cld
add
loope
ds
mov
fidivrs
aad
or
push
xchg
shll
sub
fcoml
jmp
mov
cmp
jmp
mov
dec
mov
or
mov
in
xchg
mov
frstor
movsb
xor
pop
and
jp
cmpsl
mov
mov
ret
adc
jle
cmp
cmpsl
testl
inc
lret
aad
or
cld
inc
mov
lret
test
ds
icebp
xchg
push
mov
add
sub
out
xchg
sbb
mov
int
insb
rcrl
jmp
ror
int3
std
push
aas
int3
fsubr
pop
xchg
push
cli
inc
jge
fistps
mov
cli
outsb
fisttps
xor
mov
add
xor
ret
inc
out
fs
sub
cmp
and
ljmp
mov
js
lea
dec
in
lret
push
dec
leave
push
rcl
lcall
cwtl
je
cmp
int3
and
ret
sub
cld
mov
nop
call
mov
lahf
frstor
adc
cmpsb
repnz
loope
and
push
fisttps
sub
sbb
daa
xor
pop
sub
addl
negl
lods
ja
iret
or
sub
das
popa
data16
cld
mov
mov
pushf
mov
fcoms
movl
mov
cld
sbb
mov
jnp
adc
pop
adc
data16
ret
fisubrs
pop
or
jl
add
and
hlt
mov
cli
dec
into
or
aaa
cmc
leave
ss
stos
xchg
pop
inc
jns
push
push
movsb
add
xor
mov
cmc
fucomp
ja
movsb
mov
outsb
and
mov
dec
adc
jae
push
imul
xor
jns
push
pop
cmpsl
push
push
xor
movsb
mov
sbb
mov
cmp
cmp
popf
pop
ljmp
cmpsl
bound
mov
cmpsb
ret
pop
repz
lcall
pushf
cltd
mov
fsubr
mov
xchg
outsl
arpl
mov
xor
sbb
fisubrs
hlt
inc
stos
sub
fmul
das
popf
dec
xchg
push
fs
andb
and
push
js
push
arpl
les
jbe
aas
pop
push
jb
lock
inc
xor
xchg
andb
sarl
es
mov
add
jmp
fisttpl
adc
mov
dec
mov
xchg
scas
mov
xchg
sbbb
mov
jno
mov
dec
popf
pop
push
dec
ret
xchg
insb
pop
jle
xor
mov
les
add
or
mov
cmp
adc
and
xchg
xor
out
mov
add
inc
inc
dec
cmp
push
shlb
jo
cmp
das
cmp
out
nop
lret
jmp
cmpl
mov
lock
xchg
loopne
or
movsb
and
and
inc
insl
push
push
repz
pop
ret
jmp
push
mov
je
jbe
pop
mov
xor
sub
push
inc
cmp
shlb
jecxz
dec
xchg
mov
int
xchg
nop
inc
mov
push
popa
insl
dec
cmpsl
mov
sbb
add
ret
roll
cmp
sbb
bnd
add
decl
sub
gs
xchg
out
mov
xchg
notb
mov
ret
push
mov
push
or
push
daa
inc
shrl
iret
jae
in
es
sbb
lcall
nop
adc
cltd
push
sub
js
leave
flds
mov
stos
adc
icebp
xor
mov
sub
pop
out
ljmp
push
test
jmp
inc
ret
add
mov
mov
lock
pminub
scas
inc
ret
inc
sub
adc
fildl
cmp
inc
rol
movsb
sarl
or
imul
sub
out
popa
ljmp
cmc
lcall
ret
jbe
push
mov
pusha
push
add
mov
sbb
movsb
stos
adc
fsubl
jecxz
flds
call
aam
mov
mov
mov
out
sbb
daa
cmp
add
xor
mov
mov
outsb
fsubl
pop
jl
cli
inc
aam
pop
int
inc
sbb
xorb
movsl
mov
clc
fisttps
imul
into
xor
neg
sbb
cmp
push
test
call
inc
jnp
pop
jns
xor
mov
lock
push
lret
paddusb
push
mov
mov
arpl
adc
cmp
out
aad
xchg
inc
test
das
cmpl
adc
js
call
pushf
pop
jb
push
xchg
mov
pop
stc
cmc
inc
dec
sub
pusha
test
and
inc
cmpsl
ds
mov
inc
pop
sahf
mov
sahf
in
das
dec
inc
cld
mov
xchg
sub
push
insb
xor
mov
mov
xor
jnp
bound
mov
pop
xor
insl
xlat
sbb
add
xlat
shrl
and
sub
dec
aad
subl
cmp
lods
and
sbb
mov
adc
fistpll
daa
das
aas
gs
out
pop
xorl
xor
cmpsl
dec
sub
andb
shll
fwait
push
pop
mov
sahf
sbbb
jno
dec
iret
and
sub
add
push
pop
in
cmpsl
dec
sahf
roll
jns
push
outsl
inc
popl
push
pusha
sbb
mov
aad
pop
mov
jo
sub
ljmp
and
push
dec
dec
mov
lock
insb
dec
cmp
and
aad
pop
xchg
sbb
leave
insl
fisubl
inc
mov
sub
aaa
push
cmp
xor
push
lret
sbb
paddsb
jg
popf
jne
pmuludq
mov
ss
xlat
inc
mov
sub
fisubl
dec
jg
ficoml
inc
sbb
mov
push
xor
andb
shll
icebp
btc
mov
test
test
dec
mov
mov
pusha
xor
sbb
int
rorb
mov
fs
jo
mov
shll
jo
sar
stos
xor
out
lahf
ror
fs
sub
add
aad
shl
adc
sbb
insl
into
dec
in
js
incl
dec
imul
ljmp
sahf
dec
rolb
mov
jns
mov
push
push
and
mov
adc
jb
sbb
jp
andb
popa
jo
add
sub
in
dec
bound
xchg
movsb
lret
jno
fs
andl
mov
pop
mov
xchg
mov
ret
lea
sarl
cmpsl
dec
fs
dec
push
scas
cld
jle
sub
enter
push
and
hlt
pop
inc
inc
notb
sbb
inc
loope
xlat
and
add
lea
incb
cld
jmp
dec
daa
add
xchg
adc
repnz
call
roll
and
iret
sbb
rcrb
mov
inc
sub
mov
iret
cmp
js
incl
sbb
into
and
dec
or
flds
out
cltd
push
push
setp
dec
or
and
dec
push
je
adc
rcl
adc
lret
mov
or
ja
sbb
cmp
aaa
push
sub
insl
mov
jl
lods
mov
cmp
sahf
pushf
jb
push
pop
cwtl
inc
movzbl
mov
pusha
in
into
sbb
lret
cmp
mov
fldl2e
in
rcrb
adc
mov
push
xlat
cmp
js
xchg
vmovhpd
inc
outsl
push
mov
cmp
jo
cmp
add
ds
mov
and
or
mov
lods
and
xchg
or
cmp
int3
sub
dec
insl
imul
push
ss
mov
push
aad
push
cmp
push
pusha
push
out
or
mov
push
push
and
cmp
xor
xchg
inc
rolb
js
fs
mov
inc
shrl
or
lahf
rcrl
outsb
in
push
adc
sbb
mov
in
cmp
fld1
dec
fldt
mov
test
bound
jge
pop
mov
pop
out
cmp
in
in
dec
loop
out
xor
and
mov
add
inc
jge
imulb
lods
jg
adc
bound
out
in
xor
mov
es
xor
sbb
leave
xchg
push
data16
add
fdecstp
jge
jne
mov
mov
loopne
outsl
xchg
ja
arpl
mov
push
push
dec
add
dec
ret
fisttps
bnd
xchg
cmp
jnp
pop
test
mov
push
inc
adc
cltd
daa
xor
pusha
sub
sbb
dec
xchg
sbb
negl
fsubr
pop
add
xor
lds
les
nop
xor
pop
inc
jb
xchg
notb
push
negl
sbb
ror
arpl
xor
negl
or
data16
popa
fdiv
dec
or
out
inc
jle
and
pop
add
in
xchg
sub
mov
add
mov
pop
cmp
aad
pop
arpl
loopne
das
ljmp
mov
les
or
loopne
or
fs
and
ljmp
push
fmuls
jg
or
mov
add
mov
fs
aam
mov
mov
mov
lods
int
xlat
add
jne
aad
xchg
aad
dec
cmpsl
das
lods
push
js
inc
adc
push
xor
and
pop
mov
je
or
add
push
jle
mov
rorl
lahf
push
xor
shrb
push
loope
jl
stc
adc
rcr
add
xchg
loop
rcr
rcll
movsb
sahf
or
xchg
jle
enter
xchg
pushf
add
and
cmp
adc
xlat
xchg
int
or
aad
mov
ss
outsl
xchg
insl
xor
pop
pop
pop
adc
pushf
clc
imul
in
adc
scas
and
in
out
dec
scas
sbb
je
pop
or
cmp
mov
mov
or
lods
shl
sub
outsb
xor
stos
ds
cmc
call
iret
ja
or
xchg
and
mov
or
and
fstps
cmp
sub
jl
cmp
pop
jl
ret
js
insl
loopne
out
test
xor
movsb
test
push
clc
insb
cltd
sbb
pop
cli
aam
enter
int
adc
mov
or
mov
sub
mov
xchg
out
test
sahf
cmp
xor
rclb
and
das
xchg
dec
push
mov
sub
mov
mov
jns
nop
and
fs
inc
ss
test
sub
xchg
aam
sub
mov
popf
dec
mov
inc
add
aad
es
push
jns
rcrb
adc
or
aam
and
sahf
lods
insl
push
jp
push
popa
mov
negb
addl
hlt
outsl
mov
mov
jp
cmp
mov
filds
jle
jp
pop
mov
mov
push
subl
faddl
pop
dec
clc
mov
jecxz
in
push
es
dec
pop
adc
sub
aad
xchg
jns
mov
sub
mov
xchg
rorb
push
mov
test
test
out
aaa
clc
sbb
sbbb
jbe
in
enter
lods
jle
ss
imul
adc
icebp
mov
out
mulb
mov
jae
test
xchg
jae
dec
dec
add
mov
lret
adc
sbb
pop
lea
xor
adc
pop
iret
shl
mov
test
movsb
sub
sbb
lea
jp
cld
push
jecxz
shll
mov
imul
movsb
lods
mov
xchg
mov
mov
dec
or
pop
insl
test
fs
test
sahf
push
cmc
push
jne
call
sbb
or
adc
testl
jle
clc
pop
addl
mov
outsl
shl
popa
lds
fucomp
add
int
mov
push
push
les
jmp
push
xor
aad
cmp
pop
and
mov
jno
les
cli
pop
mov
and
or
fbstp
int3
pop
mov
imul
out
call
mov
xchg
andl
mov
in
cld
mov
movsl
inc
sahf
enter
sbb
cltd
dec
mov
jge
scas
jb
lret
iret
xor
add
popf
pop
cmp
cld
ja
fnstsw
or
push
xchg
adc
add
cli
sub
cltd
lret
jle
pop
arpl
fbld
fwait
jne
mov
lret
fsubs
sub
jns
or
insl
out
call
mov
movsb
test
test
inc
fnstcw
pop
insb
xor
je
lods
in
and
shll
add
jle
outsl
insl
rcl
sbb
xchg
and
ss
xorb
stc
mov
xor
pop
adc
scas
stos
mov
inc
push
jl
popa
push
outsb
leave
imul
push
pop
rol
mov
jmp
aad
dec
scas
push
cmc
mov
xchg
insl
add
daa
push
ret
pop
and
dec
insb
adc
sub
sub
dec
push
jecxz
ret
in
enter
ljmp
vmaskmovpd
dec
ja
sub
andl
enter
dec
cmc
int3
adc
cmp
or
and
nop
and
dec
mov
sub
sbb
xor
push
mov
outsl
sbb
pop
sti
movsb
arpl
sub
insl
fnstsw
lods
popf
inc
maskmovq
divl
lods
mov
in
andl
xchg
lods
adcb
xchg
sbb
int
dec
sarl
enter
sub
xor
xchg
fstps
loope
pop
xchg
and
and
push
cmp
iret
mov
push
xor
jmp
lcall
add
andb
fwait
add
cmp
hlt
dec
jns
and
and
dec
mov
clc
imul
push
sub
nop
in
stos
jo
add
adcl
dec
pop
dec
dec
sub
push
inc
adc
mov
stos
xchg
loop
jg
dec
fldt
pop
mov
rcr
jge
rcll
xor
mov
push
mov
push
leave
cmpsl
jmp
dec
in
je
in
add
or
jae
add
daa
add
fsubs
inc
xchg
cld
xlat
mov
sbb
mov
push
lcall
inc
imul
pop
jne
fadds
je
push
pop
cld
dec
xchg
sub
in
sbb
sbb
fistpl
out
out
mov
ljmp
shrb
and
repnz
shl
mov
or
push
shlb
outsl
dec
dec
notl
loop
mov
pop
jmp
mov
inc
xor
mov
mov
fmul
push
adc
push
push
mov
mov
add
mov
pop
test
icebp
lret
je
jns
xchg
pop
mov
push
test
mov
push
faddl
das
mov
out
in
mov
dec
sbb
scas
adc
xchg
das
scas
loop
or
xchg
jo
mov
sahf
dec
leave
inc
push
xchg
movsl
jnp
outsb
dec
dec
jo
cli
fnstsw
xchg
pop
mov
out
cs
hlt
stos
inc
out
lahf
jmp
out
mov
test
pop
pop
xchg
dec
adc
dec
inc
ljmp
mov
out
loop
cmc
pop
je
pop
inc
and
insl
inc
sahf
jbe
add
xchg
mov
out
mov
pop
and
insl
std
sahf
pop
cld
push
idivb
iret
lds
cmp
repnz
repz
addr16
jbe
jp
scas
dec
sub
mov
and
lahf
lret
inc
cmp
push
into
fsubl
push
outsb
pop
aaa
mov
mov
pop
add
dec
cli
lea
inc
sbb
and
dec
push
enter
ret
into
mov
lods
in
repz
test
into
xor
out
and
jno
scas
mov
dec
inc
fstpl
inc
xchg
or
sbb
test
xor
jge
and
aam
inc
lods
push
mov
mov
stc
icebp
imul
inc
or
jmp
loop
and
dec
mov
and
mov
enter
cld
push
dec
clc
jge
sbb
mov
mov
add
sub
in
lea
mov
inc
dec
gs
mov
outsl
mov
push
or
pusha
fadd
sbb
mov
lahf
mov
mov
ds
jl
aaa
mov
test
or
mov
fst
lahf
stc
and
clc
or
iret
jmp
jae
sti
cmp
pop
enter
iret
pop
jl
movups
movswl
add
mov
fwait
adc
and
je
cmp
loope
jb
jnp
mov
xchg
repz
loopne
nop
aas
jae
fdivr
jp
dec
cltd
add
mov
mov
pop
loop
repnz
cltd
scas
cwtl
and
jl
scas
jg
insl
jns
adc
jmp
sarb
sahf
notb
adc
push
pop
xor
mov
mov
notb
scas
rorl
dec
sahf
into
rclb
xchg
arpl
loopne
lcall
or
leave
data16
jmp
pop
mov
loop
out
jmp
xchg
mov
cmp
aas
xor
mov
jbe
ss
into
and
cmp
push
out
loope
mov
adc
inc
jbe
xor
mov
push
test
sub
add
hlt
pop
fisttps
in
dec
or
hlt
push
push
jnp
add
std
cmp
pushf
pop
mov
gs
sub
into
stos
jne
push
dec
rcl
inc
shr
sarl
outsb
inc
aaa
and
mov
pop
cli
xor
push
add
fildl
repz
inc
sub
leave
shll
add
xor
add
ds
loope
lcall
push
or
pop
add
adc
xor
ja
push
hlt
test
aaa
xchg
jne
mov
aad
pop
mov
scas
imul
sahf
adc
mov
das
cmp
addr16
jg
outsl
adc
lds
adc
sub
enter
pushf
insb
or
mov
es
mov
clc
push
pop
popl
sub
call
stc
loopne
mov
dec
rcrb
push
repnz
push
cmp
mov
xchg
mov
mov
push
mov
popf
jl
loope
or
cs
lods
lds
cltd
pusha
cwtl
jp
cmp
mov
xchg
jmp
sub
and
mov
je
in
pop
js
test
arpl
clc
jns
dec
pop
add
imul
or
fptan
xor
add
push
jnp
mov
outsl
gs
aas
mov
fldcw
imul
jmp
mov
sub
aad
pop
mov
lock
outsl
mov
sbb
jp
pusha
int3
sarl
mov
cwtl
iret
mov
call
or
jo
mov
cwtl
rorl
pop
pop
sub
or
mov
cmc
push
push
or
lods
lods
or
xlat
call
sub
dec
mov
and
mov
or
dec
cli
ret
shrl
in
iret
data16
xchg
andl
dec
repnz
jae
dec
xor
sbb
aaa
pop
test
xor
and
adc
or
add
movsl
rorb
lret
je
scas
xchg
enter
mov
lods
sbb
mov
dec
push
xchg
repz
lahf
xor
sarl
pop
stos
in
sbb
mov
push
sub
cmp
pop
movsl
sub
sub
insl
jmp
rcr
inc
sbbl
mov
sub
aas
pop
idivb
jns
clc
in
imul
xlat
inc
adc
inc
fidivl
dec
dec
mov
jno
mov
add
jmp
add
cmp
daa
arpl
lods
icebp
and
add
and
lahf
pop
mov
lds
mov
inc
inc
lods
rolb
shll
pop
fs
jmp
gs
xchg
pop
push
lcall
jecxz
inc
cmp
add
fsubrs
mov
inc
and
das
add
xor
test
xchg
cmpb
sbb
jae
hlt
add
mov
out
mov
test
in
insl
mov
sahf
andl
and
cmpsl
mov
push
cs
pop
push
mov
stc
repz
pop
sub
loop
push
rolb
roll
shll
and
pop
sbb
jo
jno
pop
xchg
repnz
mov
pop
data16
stc
outsb
xchg
cmp
hlt
rorl
add
ja
daa
xchg
pusha
pop
lods
popf
repnz
lods
shlb
js
jnp
xor
pusha
push
mov
inc
inc
data16
push
lcall
loopne
in
mov
das
xor
xchg
xor
mov
sub
lods
and
push
lods
or
cs
ss
in
inc
loopne
hlt
stos
stos
gs
dec
das
in
cmp
cmp
lahf
rorl
mov
dec
sti
je
movsb
pop
mov
fildl
xchg
out
decl
add
fwait
pop
mov
hlt
movsb
movsb
fdivrl
pusha
jmp
inc
jecxz
and
jno
cmp
xor
shrl
ja
push
push
dec
stos
lahf
push
xchg
mov
mov
add
lcall
mov
cmpsb
cmpsb
test
sub
xor
test
test
xor
repz
mov
mov
sub
inc
or
xor
push
fmuls
push
ret
test
mov
aaa
add
mov
xchg
cs
dec
movsl
push
xchg
cmp
sbb
and
mov
push
sub
dec
das
dec
pop
je
xchg
scas
cmp
cs
mov
hlt
cli
push
or
fmul
imul
xchg
or
inc
xchg
xchg
sub
jo
test
nop
mov
pushf
or
rclb
bound
pop
jae
insb
loope
adc
inc
shrl
cltd
arpl
add
popf
cmpsl
mov
adc
flds
push
and
aad
nop
shl
negb
mov
jo
jne
mov
cld
inc
jecxz
sub
jne
dec
xor
mov
sub
cmp
in
xor
push
xor
jp
xlat
sbb
jno
int3
stc
rol
iret
push
shlb
xchg
jecxz
push
jns
inc
divps
dec
cmpsb
test
popa
jbe
inc
xor
stc
lds
mov
jp
scas
loopne
pop
pop
push
mov
sbb
xchg
jmp
pusha
stc
add
sub
addl
fisubl
out
adc
rorl
insl
jp
inc
nop
mov
sahf
inc
imul
imul
sbb
movsb
mov
js
cmp
add
das
test
and
nop
jae
les
mov
insl
fsubr
push
cmp
jnp
je
adc
mov
js
sub
pop
push
cld
dec
lcall
push
add
addb
pop
mov
hlt
adc
push
ds
push
jbe
mov
push
stc
in
lret
movsb
jno
mov
dec
inc
sbb
shrb
push
adc
test
jle
dec
mov
imul
jmp
decl
arpl
pop
inc
lahf
out
sub
sbbl
jle
mov
xlat
inc
fidivl
and
cwtl
loopne
pushf
xor
fxch
and
inc
stos
push
mov
or
into
pusha
in
dec
sub
cmp
cwtl
in
add
imul
jle
out
inc
sub
ja
cltd
mov
mov
inc
fistpl
cmp
adc
pop
scas
mov
or
ret
xor
mov
jnp
mov
enter
xchg
dec
test
out
repz
push
xchg
pop
xchg
aad
jl
cwtl
mov
mov
pop
jmp
sub
dec
or
rol
inc
and
dec
cmp
adc
inc
testb
mov
fdivrs
les
lret
rcl
mov
ds
add
cwtl
fdivrl
negb
mov
cmp
cmpsl
aad
jae
dec
ret
bound
rcll
cmp
mov
adc
sub
aam
mov
shrb
xchg
ss
pop
cmc
xchg
insl
add
adc
cmpsb
inc
add
push
xchg
xor
mov
mov
push
inc
test
push
clc
jmp
inc
in
stc
icebp
jp
test
dec
sahf
je
or
adc
adc
push
xchg
cltd
push
icebp
stos
subb
loop
into
mov
or
cwtl
xchg
mov
or
call
mov
iret
js
cmc
jae
jno
mov
add
in
xchg
fnstcw
xchg
mov
test
pop
test
mov
mov
daa
mov
std
out
cmp
insl
jns
jmp
fs
mov
mov
and
out
daa
pop
loopne
loop,pn
in
pop
cwtl
in
leave
add
movl
test
movsl
cmc
push
fdivrs
pop
cmp
data16
movl
sub
dec
stos
fists
and
stos
loope
nop
ds
sbb
inc
fmul
sbb
jmp
xor
mov
lea
xchg
jl
and
jg
pop
xchg
test
cmp
dec
call
inc
jg
out
pop
dec
movsb
jnp
int
mov
inc
adc
or
sub
mov
cwtl
ja
je
inc
arpl
xchg
shll
bound
fists
sub
mov
jg
stos
stos
lcall
lods
in
jbe
rcll
and
cltd
cmpsb
inc
sub
orl
xor
push
dec
push
fcomps
sub
ds
filds
imul
or
xor
add
pop
xchg
iret
mov
mov
cmpsb
dec
in
movsb
jl
leave
sarl
mov
pusha
mov
push
sub
sbb
add
dec
cwtl
and
push
mov
xchg
in
fwait
push
flds
repz
aam
out
xor
adc
sbb
mov
iret
fildl
test
mov
fcompl
mov
mov
push
xchg
cltd
jmp
inc
and
push
adc
jb
fidivrl
pop
cmp
push
aam
pop
dec
push
or
int
rclb
push
sahf
sbb
into
aas
pusha
cwtl
lahf
pop
add
and
xor
dec
bound
mov
sub
dec
adc
leave
dec
fmuls
pop
cmpsb
sbb
inc
out
orl
push
and
jnp
ror
xchg
les
push
rcl
dec
dec
adc
sbb
mov
adc
fcoms
mov
jmp
push
lock
enter
mov
pop
adc
mov
lods
inc
pop
stc
movsl
movsl
arpl
cmp
pushf
fs
outsb
cld
int
jecxz
dec
lahf
scas
clc
and
stos
into
loopne
int3
fs
mov
ss
and
lock
insl
iret
push
jno
inc
xchg
cmp
cmc
adc
jno
test
push
sbb
loope
repnz
shr
inc
cs
mov
and
dec
mov
rcl
cmp
or
and
andl
cmp
test
jnp
dec
add
dec
push
mov
lods
or
dec
xchg
int3
idivl
jno
mov
inc
inc
xor
pop
test
jl
and
xchg
add
add
pushf
leave
jle
rcl
into
jge
roll
int
or
jnp
hlt
xor
fldt
rol
mov
pop
inc
lea
xor
jne
xchg
mov
sbb
and
movsb
or
je,pn
sbb
inc
add
xchg
and
pop
mov
inc
xchg
push
jecxz
dec
popf
dec
jno
js
push
outsb
sbb
les
jge
lret
loope
shl
bound
out
scas
inc
scas
push
loopne
push
lcall
and
sahf
xor
addb
add
sbb
cmp
cmp
les
lcall
dec
daa
daa
pop
pop
fwait
pop
xchg
imul
fidivs
arpl
aad
lds
int
and
mov
push
mov
xor
xor
loope
cmp
lret
xor
inc
sbb
or
lock
in
jg
dec
test
iret
push
and
pop
popf
or
mov
daa
js
mov
std
inc
lock
icebp
push
cltd
lds
aam
or
cwtl
movsl
jg
add
mov
xchg
sbb
sub
push
loope
sbb
aas
jmp
stos
nop
adc
in
gs
pop
cmp
mov
pop
stos
fbstp
jmp
fcmove
cmp
es
cltd
mov
imul
sbb
aad
mov
mov
cmp
mov
ljmp
loopne
stos
cli
push
cld
cmp
push
jo
xor
jbe
sti
cmpsl
pop
sub
pop
and
testl
or
dec
pop
mov
xchg
data16
icebp
jecxz
lcall
or
decb
fisubrs
dec
shll
cmp
mov
je
add
imul
imul
pop
dec
push
mov
dec
mov
dec
scas
push
jg
insl
xchg
mov
dec
fwait
dec
test
out
out
mov
insl
sahf
jb
push
mov
sbb
dec
cs
testl
repnz
push
fistpl
aam
xlat
rcll
jecxz
ret
addb
cs
rcrl
and
lds
fwait
and
xchg
lods
pop
pop
daa
cmp
inc
shl
repz
into
sub
outsb
sti
sub
push
shrl
cs
jl
loopne
ds
imul
mov
adcb
andl
sub
int3
fisttpll
popa
sub
outsl
mov
adc
cmpsl
push
test
dec
or
jne
stos
or
scas
xchg
mov
or
push
mov
dec
add
iret
fisubrl
dec
lods
loope
pop
cli
and
andb
pusha
jmp
outsb
push
mov
push
xchg
hlt
xor
je
int3
xchg
mov
adc
adc
cmp
pop
out
imul
mov
icebp
inc
and
or
push
inc
leave
shrb
aaa
mov
or
mov
int3
and
mov
enter
pop
push
xchg
dec
loope
push
mov
mov
movl
inc
into
clc
pop
ret
out
outsl
orb
xor
and
imul
cwtl
cmpsb
cwtl
mov
and
dec
cmpsl
xchg
jg
mov
lcall
in
push
cld
dec
xchg
xchg
pop
and
mov
mov
js
cmc
mov
bound
mov
pop
bound
xchg
pop
jo
push
sub
out
mov
inc
outsb
out
jp
call
push
data16
and
fdivrs
aaa
jmp
xorb
loopne
fisttpll
icebp
lcall
fwait
shrl
jo
xchg
clc
sahf
xor
adc
addr16
lods
jecxz
mov
dec
clc
in
xchg
adc
push
mov
pop
incl
cmp
push
mov
jecxz
dec
adc
push
cmp
push
movnti
or
or
sub
add
cmp
or
jg
mov
divl
pop
iret
filds
mov
jae
rcrl
sbb
jno
mov
jns
sub
adc
mov
mov
inc
out
pop
aad
pop
inc
mov
and
and
loop
xchg
adc
push
jg
in
cmp
push
hlt
lods
xchg
sbb
xchg
and
xchg
mov
and
adc
push
je
sbb
dec
mov
nop
das
pop
jb
call
lods
add
out
cs
mov
jmp
cmp
pushf
fcoms
xchg
pop
out
data16
mov
ss
inc
push
and
in
jl
popf
pop
movsl
movsb
or
push
sub
sbb
cmpsb
xchg
icebp
mov
insb
pop
fldl
movsl
nop
int
pop
stos
and
and
pop
flds
inc
or
mov
mov
jo
dec
push
adc
cmpsb
push
dec
and
xor
cld
sahf
adc
xlat
inc
mov
pop
mov
mov
jns
jbe
mov
cmp
fistl
xchg
push
cmp
cmp
mov
rorb
cmpsl
and
ds
mov
mov
jne
out
sbb
into
cmp
mov
lret
sti
inc
pop
xchg
xchg
sub
or
mov
gs
rcr
inc
jae
mov
ljmp
mov
mov
subl
mov
mov
repnz
lahf
mov
xchg
or
imul
add
and
pop
aas
divb
add
jl
nop
scas
test
je
pushl
cmp
call
in
inc
jnp
xchg
mov
hlt
xchg
adc
movsb
inc
pop
jo
or
fcomps
xlat
pop
and
xor
jnp
jnp
dec
pop
or
cwtl
sub
jmp
cli
mov
jp
pop
lahf
lcall
jmp
repnz
inc
orl
sbb
mov
lock
mov
add
mov
cwtl
enter
mov
adc
pop
enter
jb
mov
cwtl
nop
sti
shll
push
sub
sarl
sbb
xor
popa
dec
cmp
dec
sub
lods
xchg
shl
jge
lds
add
inc
jge
movsl
lcall
jno
cmp
sub
int
sbb
pop
lret
push
pop
cld
mov
shlb
test
lods
and
lds
dec
mov
cmp
push
jae
int3
mov
fsubr
or
lahf
ds
inc
lret
ds
xchg
test
call
cli
fldenv
sub
dec
out
xor
pop
mov
mov
pop
pop
popa
or
jae
rcrl
dec
sub
arpl
rcll
arpl
shrl
int3
jo
leave
icebp
jle
mov
jb
pop
sbb
xor
mov
pop
repz
mov
mov
cmp
popf
adc
mov
notb
in
inc
pushf
out
aad
call
and
mov
aas
sub
mov
sbb
push
mov
in
cmpsb
inc
mov
pop
push
imul
clc
je
in
lret
outsl
dec
dec
mov
insb
in
xchg
pop
pop
insb
or
cld
sub
or
mov
xchg
fwait
dec
xchg
ret
pop
pop
mov
and
xorl
loop
push
xchg
mov
jne
push
les
aam
dec
inc
cmp
pop
cltd
ljmp
adc
xchg
mov
iret
in
xchg
lahf
xchg
lds
pop
pop
rcrb
push
push
and
jo
and
js
xor
daa
xor
imull
lret
inc
ret
mov
adc
fs
stos
push
enter
std
out
mov
das
sbb
aas
xchg
mov
cmc
pusha
into
inc
movsl
scas
jmp
inc
repnz
mov
call
sbb
mov
sub
cmp
push
sbb
jb
pop
test
je
ja
xchg
dec
mov
mov
adc
cmp
pop
gs
rcrl
adc
dec
int
jge
aad
add
sub
xor
sbb
add
mov
mov
or
xorb
call
int3
sti
inc
sub
sub
xchg
adc
push
inc
jne
clc
add
test
mov
fisttpl
addr16
pop
sub
mov
cli
push
inc
xlat
imul
dec
mov
inc
push
out
mov
popa
popa
mov
and
pop
cmp
mov
xor
jbe
mov
gs
bswap
pop
popa
aam
and
xor
mov
jnp
adc
xor
cltd
pushf
sets
xor
aas
pop
push
xchg
mov
xor
xchg
jne
xchg
cmp
mov
dec
std
test
ficomps
or
or
dec
push
cwtl
lods
gs
repz
addb
jnp
push
sub
or
test
jmp
hlt
add
sbb
iret
pop
and
jp
sub
xor
push
pop
lock
push
inc
aad
xor
or
lret
mov
cwtl
pop
or
jae
gs
push
subb
push
cmp
push
sub
les
lcall
adc
sub
xorl
daa
xchg
fstpl
pop
hlt
xchg
pop
int3
push
or
shr
push
sbb
pop
and
dec
and
xor
loop
sti
lods
sarb
mov
jbe
dec
lods
cmp
clc
jnp
xor
add
inc
cmp
nop
call
ret
imul
inc
aad
push
adc
inc
mov
gs
test
ds
aam
or
pop
out
fsub
icebp
cmpb
lods
mov
roll
cmp
xor
jo
dec
inc
mov
mov
rcrl
cld
mov
mov
dec
dec
or
sub
sbb
xor
scas
lea
roll
mov
imul
pushf
fisttpl
insb
mov
lahf
and
add
push
rcrb
andb
jge
loopne
rol
adc
mov
inc
adc
mov
shlb
sub
push
push
pusha
into
fsubl
cmp
bound
fcoml
lahf
fwait
arpl
cmp
imul
lret
es
xchg
cmp
cmpsb
pop
ss
js
movsl
push
les
negb
sbb
xchg
test
fcompl
std
cs
repz
fsts
stos
mov
rep
mov
pop
pop
pop
lods
leave
add
scas
adcl
inc
mov
push
mov
sbb
lea
mov
pop
cmp
inc
sbb
imul
pop
jg
xor
xchg
out
mov
je
push
loopne
push
push
bound
lahf
data16
aas
pop
icebp
leave
ja
ret
mov
sub
sub
cmp
xor
jb
jbe
in
pusha
xchg
iret
inc
cmpsb
pop
in
pop
xchg
pop
clc
idivb
xor
es
and
hlt
xorl
data16
cmp
push
jnp
arpl
add
jp
mov
lods
aas
imul
sbb
jp
pushf
mov
xor
mov
es
shrl
inc
movsb
xchg
fs
and
dec
in
mov
in
bound
mov
scas
push
or
cmp
mov
ror
mov
mov
inc
jns
loopne
xor
pushf
xor
adc
dec
push
mov
mov
lcall
in
ret
mov
and
push
fisubs
inc
cs
fisttpll
cs
sub
xor
loop
loope
cmp
or
ja
dec
xor
lret
lret
mov
xor
mov
sti
std
fistl
in
test
stc
sub
cmpsb
push
leave
fnstenv
mov
loop
or
dec
inc
imul
xor
jb
js
call
popa
jo
outsl
sti
adc
fs
lcall
mov
jno,pt
or
lahf
fiaddl
pop
cwtl
jnp
mov
mov
cmp
adc
mov
adc
xchg
fndisi(8087
ret
sub
pop
cmp
sub
mov
arpl
adc
out
jecxz
cmp
sbb
outsl
pop
dec
mov
jle
repz
pop
stos
inc
and
lea
jg
pop
sbb
push
repnz
adc
notl
inc
mov
push
inc
mov
xchg
inc
jae,pn
push
mov
in
lret
shlb
nop
pop
mov
inc
push
and
mov
mov
mov
push
pop
jno
jle
xor
push
mov
inc
adc
mov
fisubs
es
stc
lods
popa
xor
incl
add
fildll
or
mov
pop
popa
mov
mov
addr16
sbb
rcll
shrl
sub
xlat
jne
cwtl
imul
mov
fsubr
lods
add
xchg
add
iret
stos
mov
fimull
sub
sub
inc
push
cmc
xor
scas
sahf
movsb
outsb
jecxz
add
icebp
and
int3
and
ss
mov
adc
sbb
nop
cmpsl
mov
inc
repz
aad
fistpl
scas
mov
jge
cmp
mov
pop
int
ja
mov
pop
pop
sahf
mov
pop
orl
lret
push
imulb
mov
or
and
dec
push
adc
pop
mov
xchg
push
jge
cld
ja
shl
jns
xor
ret
hlt
fstl
pop
fnstsw
sub
cmpsl
push
enter
mov
flds
dec
lock
ret
mov
outsb
stos
mov
movsb
mov
ficompl
cs
scas
push
mov
pop
cs
jmp
cmpsl
mov
aas
xor
sbb
xor
test
xchg
adc
stc
nop
stc
xor
mov
mov
adc
in
int
out
movsl
add
call
mov
sub
jl
mov
sub
mov
je
adc
or
pop
push
call
dec
roll
dec
jp
hlt
and
testl
and
sahf
cld
enter
xchg
xchg
pop
std
sbb
mov
sar
adc
add
lret
mov
sbb
push
rorl
dec
shlb
jae
adc
pop
lahf
aas
add
xor
dec
stc
std
push
mov
out
mov
adc
mov
adc
test
cld
xchg
push
mov
ret
negb
jg
fisttps
push
pushf
stc
cmpsb
mov
mov
imul
xor
insb
mov
clc
jno
and
outsl
jns
add
imul
pop
mov
pminsw
push
bound
ret
scas
clc
adc
pop
into
push
mov
lcall
sbb
je
xor
lcall
push
addr16
out
push
add
jp
adc
add
push
ret
cmp
xor
sbb
xor
shll
cmc
sub
mov
xchg
push
lea
js
jecxz
inc
sub
xchg
cmpl
lret
mov
mov
sub
mov
push
sub
das
or
mov
dec
stos
pop
clc
test
fsubrl
mov
pop
adc
push
jb
xor
aaa
ss
inc
aaa
clc
js
testb
clc
movsl
in
xchg
sbb
jle
xor
jl
or
outsl
inc
dec
loopne
lret
jg
aad
push
scas
in
pop
mov
add
fbld
mov
gs
cmp
in
fmull
xchg
xor
pop
mov
mov
pop
rcll
imul
jl
movsl
xchg
jb
cmpsb
xor
daa
rorl
loope
test
popl
or
push
cld
sbb
lea
xchg
adc
mov
outsl
imul
xor
sub
or
sbb
jnp
adc
mov
jle
fs
js
and
dec
pop
std
outsb
mov
sub
test
test
out
in
lret
nop
cmpps
loopne
icebp
xchg
and
arpl
jmp
cltd
lods
xchg
loop
dec
in
and
sbb
mov
mov
sub
xorl
xor
xchg
mov
adc
or
mov
mov
arpl
jecxz
test
lret
push
mov
fadd
testl
adc
leave
mov
insl
das
and
rol
add
out
adc
ret
in
sahf
imul
movsl
fbld
push
std
dec
loop
inc
cmpsb
cs
cmpsb
sub
ret
jo
cmp
into
mov
sbb
mov
mov
push
push
loop
or
cli
mov
lcall
push
mov
push
add
cltd
scas
and
fstpt
fsubrs
jle
xchg
sbb
je
mov
add
call
and
lods
add
loope
inc
xor
or
inc
les
push
int
and
mov
and
inc
test
test
scas
mov
pop
inc
xchg
popa
mov
pop
shlb
outsl
scas
popa
int3
cmp
ret
adc
fs
inc
xlat
inc
pop
xchg
lret
jmp
icebp
lea
insb
jae
in
jne
andl
pop
in
bound
lcall
and
lock
and
stos
mov
pop
fnstenv
bound
adc
jbe
and
jmp
adc
ss
imul
push
das
sbb
int3
outsl
or
adc
out
fcmove
inc
xchg
mov
fs
pop
pop
dec
mov
das
pop
repz
pop
in
mov
loopne
lret
inc
stc
dec
inc
aas
and
xor
inc
mov
dec
ss
repz
sub
pop
mov
and
sub
aad
xchg
push
lods
and
jns
fidivrl
into
insb
mov
adc
pop
adc
mov
push
ljmp
shrb
scas
jl
roll
cmp
pop
push
lock
out
mov
arpl
rcrb
mov
je
adc
push
add
shll
or
dec
add
cmp
cltd
mov
aam
frstpm(287
add
daa
inc
add
lret
pop
mov
xor
test
nop
mov
push
mov
testb
mov
xor
mov
insb
loope
cmc
add
mov
xchg
jle
add
rclb
sti
and
mov
sahf
xlat
xchg
jecxz
outsb
mov
push
sbb
aam
ds
aam
pop
sbb
mov
cld
inc
push
std
scas
int3
xlat
in
sub
shrb
lea
or
xchg
and
cmp
inc
dec
loopne
stos
sub
xchg
out
pop
mov
sbb
mov
pop
lds
or
cltd
push
addr16
mov
fdivrp
and
xchg
mov
gs
clc
adc
jmp
xor
cltd
jmp
out
or
pop
inc
push
bound
fwait
sub
shl
cwtl
lcall
enter
test
inc
or
pop
xchg
fsubrl
and
scas
mov
out
gs
jecxz
aaa
mov
popa
sub
mov
fsubrs
mov
push
es
sub
pop
roll
sub
gs
inc
enter
bound
popf
and
xor
cld
stc
sub
popf
push
jbe
sbb
std
sarl
dec
outsb
mov
mov
int
sub
into
fwait
je
dec
pushl
shll
cltd
loop
adcl
push
pop
cmp
or
mov
stos
je
imulb
sub
lods
ds
insl
fwait
popf
scas
call
lcall
xchg
and
dec
jmp
adc
aam
imul
lret
addl
mov
fldz
lock
push
mov
pop
sub
dec
mov
rcrb
cli
lods
outsl
lea
clc
cmpsl
pop
jno
sub
sbb
jecxz
xchg
xchg
mov
mov
sub
fiadds
mov
cld
shlb
and
jmp
stos
loop
fs
pop
rcrb
outsb
and
mov
push
gs
sbb
xchg
jl
test
mov
call
jg
rclb
cmc
xor
mov
into
fsts
ja
jmp
test
mov
in
xchg
push
cmp
repz
push
sub
xor
je
add
in
out
mov
std
loopne
fs
bound
xchg
pop
scas
cmp
push
stos
and
insl
cmp
jns
cmp
xchg
and
pop
adc
mov
jg
xchg
addr16
cltd
jge
rcl
sub
fidivl
rcll
mov
add
je,pn
movsb
adc
popf
sub
mov
bound
add
sbb
or
jo
mov
xchg
call
out
jnp
jb
shl
iret
mov
out
movb
sbb
ret
mov
push
ss
leave
xchg
nop
jg
or
cmpsb
shll
pop
mov
mov
mov
lods
addb
sub
cmp
rclb
scas
sarl
mov
imul
imul
inc
imul
jnp
push
frstor
lock
and
out
mov
fsubrl
dec
and
addl
mov
and
cmp
mov
mov
out
jl
sbb
adc
scas
daa
movsb
mov
ret
or
sub
inc
scas
test
flds
fs
inc
dec
push
jb
adc
je
cs
fsts
inc
lret
movsb
out
adc
movsb
call
das
push
mov
xor
cmp
push
shll
push
inc
xor
leave
push
push
ja
loop
xor
shl
sub
jecxz
push
sti
test
shrb
dec
sbb
je
callw
xchg
repz
jno
dec
dec
xchg
inc
pop
mov
imul
mov
mov
adc
lods
dec
cmp
lcall
sub
rclb
cs
mov
cwtl
mov
inc
out
xchg
cmpsb
add
mov
shll
xchg
mov
or
push
in
xchg
pop
xor
dec
nop
neg
dec
cli
xor
pushf
dec
test
inc
sub
stos
or
lcall
xchg
test
mov
shrb
daa
out
idiv
outsb
push
mov
lods
pop
ds
dec
jge
aad
lods
rolb
cmp
int3
rclb
mov
dec
std
cbtw
cli
jb
out
lahf
pushf
push
jle
shlb
cmovp
add
div
pop
cli
fwait
cltd
jmp
daa
sub
lock
in
pop
xchg
inc
daa
push
jne
xor
cwtl
call
shlb
lcall
mov
sub
and
mull
dec
mov
inc
jecxz
add
xchg
stc
jp
ss
addr16
fisttps
das
push
or
fxch
test
mov
in
cmp
sbb
push
daa
xorb
fstps
cmc
jl
sub
push
je
mov
ficomps
push
gs
push
xchg
push
movsl
mov
fprem
and
aad
int3
lock
daa
movsl
pop
out
sub
or
jb
cs
sbb
mov
add
sbb
andl
lods
fsubrl
pusha
idivl
xchg
scas
sbb
divl
xor
fwait
push
cmp
xchg
mov
ljmp
cmc
jnp
add
pushf
in
push
jl
popf
xchg
mov
fists
inc
test
fnstcw
xorl
inc
sarb
data16
icebp
ss
loop
cmpsl
xlat
xor
xchg
adc
aam
inc
in
out
cmp
icebp
jp
roll
and
out
inc
fwait
andb
push
std
out
jae
sti
stc
test
mov
mov
push
icebp
pusha
sbb
or
sub
and
jp
adc
inc
subl
inc
data16
std
mov
rcl
xchg
lds
fdivrp
mov
pop
xchg
out
jns
inc
dec
cmp
aad
in
loope
stc
mov
rcll
pop
lea
test
mov
dec
push
out
mov
loop
int
clc
scas
dec
rclb
inc
sub
sbb
or
mov
movsb
lea
mov
and
push
cmc
leave
stc
in
cld
jns
lea
dec
outsb
fimull
in
fsubrs
push
inc
scas
or
shll
ret
mov
pop
pop
dec
fadd
fldt
inc
and
rcll
push
sti
jae
scas
jl
lods
jnp
pushf
cli
xor
mulb
push
sbb
lea
lret
push
cmc
add
adc
lcall
xlat
dec
mov
xchg
in
or
repnz
ljmp
in
fiadds
or
pop
mov
loopne
imul
pop
fnstsw
leave
pop
push
xchg
pop
mov
sub
push
xchg
push
xor
mov
and
push
iret
outsl
jb
shlb
inc
cmp
adc
stos
inc
dec
jg
and
push
mov
insl
push
push
call
and
adc
cmp
scas
push
mov
mov
ds
adc
pop
or
adc
sub
mov
xchg
hlt
mov
pop
xchg
pop
cmp
int
lea
mov
roll
ja
ds
in
dec
rorb
jbe
cmp
test
outsl
adc
fistpll
rcrb
scas
and
iret
hlt
int3
jmp
lock
jnp,pt
mov
out
pusha
arpl
cmp
mov
mov
shlb
mov
test
stc
mov
pop
lcall
fisubs
push
mov
xchg
das
les
fistps
mov
inc
sarb
pop
and
add
es
jg
movsb
and
fistpll
adc
fcmovu
mov
ljmp
into
mov
add
xor
jecxz
leave
or
cmp
or
sbb
cli
sarb
out
mov
call
jg
dec
adc
add
movsl
in
ret
mov
addr16
xor
inc
mov
stc
push
ds
push
scas
dec
pop
sbb
mov
mov
out
mov
icebp
loopne
ret
test
test
aas
push
push
ljmp
shll
mov
add
enter
xchg
push
das
push
cmp
cmp
or
dec
call
jp
call
cmp
cwtl
test
in
lods
adc
cmp
lcall
xor
jne
lahf
aad
lret
and
rol
aad
jae
test
jg
add
push
jle
push
sub
pop
jge
jnp
into
lcall
out
orb
inc
or
insl
sub
mov
inc
sbb
or
mov
xchg
jns
pop
notl
hlt
add
push
lahf
xchg
inc
sbb
xor
movsb
inc
and
jp
aam
test
rorb
scas
mov
loope
lods
fwait
mov
rcrl
mov
cld
cs
xchg
xor
leave
int
lods
mov
fisubrs
out
ss
pop
aad
call
mov
dec
cmp
stos
clc
stos
lds
scas
pop
push
lret
and
or
addr16
adc
lret
cs
lods
ja
pop
pushf
mov
fld
push
inc
std
xor
mov
cmp
cs
add
hlt
les
xchg
daa
dec
dec
insb
adc
push
push
addl
stc
mov
cld
std
inc
adc
push
cmp
mov
cwtl
and
pop
push
int
clc
push
add
pop
inc
or
cmc
xorl
out
add
rcrb
mov
pop
leave
leave
sub
js
jae
ficompl
xchg
lahf
mov
loop
cmpsb
pop
jb
mov
sbb
cmp
pushf
cltd
loop
xchg
or
cmpsl
add
jne
inc
sub
icebp
ljmp
orl
mov
cmpsb
js
and
pop
movsl
je
fadd
xchg
push
mov
stos
sub
fistps
jecxz
insl
sub
add
xchg
xor
sbb
adc
ret
or
mov
sti
imul
aam
xlat
jg
mov
xlat
das
pop
mov
clc
jp
int
mov
sub
mov
xchg
nop
std
mov
mov
rorb
out
xchg
inc
in
pop
mov
sbb
insl
xchg
rcll
incb
mov
fildl
fs
aaa
and
mov
xchg
nop
std
cmc
mov
mov
rorb
mov
mov
ret
es
and
dec
dec
pop
mulb
xor
je
pop
xchg
lds
and
cmp
xchg
cld
add
push
loop
sbb
pop
lcall
sub
push
jb
nop
test
or
imul
cmc
std
cmp
loop
mov
xor
stc
loop
leave
jmp
pop
movsb
sarb
pop
das
mov
or
aaa
loopne
add
adc
nop
and
aad
push
mov
in
pushf
inc
add
fwait
ds
in
fwait
add
cmp
aad
pop
hlt
push
adc
mov
xlat
pushl
add
sub
test
arpl
pop
mov
mov
int3
hlt
sarl
popf
fisubl
addr16
ret
stos
fs
add
cli
mov
add
std
movsl
dec
xor
inc
dec
push
inc
loop
sub
sub
stos
js
xchg
mov
adc
fisubl
testb
adc
scas
add
fidivrs
lret
sbb
fcomps
cmp
xor
ljmp
iret
ja
push
sub
xor
push
loope
jg,pt
shl
mov
adc
ret
xchg
into
cli
popa
imul
or
loopne
insl
inc
mov
lods
lcall
call
popf
mov
aaa
dec
and
push
push
aaa
push
test
xchg
inc
sub
movsl
mov
push
pop
movsl
jae
popa
int3
jecxz
leave
mov
push
loope
imul
das
mov
cwtl
add
push
out
stos
sub
inc
ret
fs
mov
stos
inc
addr16
ja
shll
add
orl
pop
fstpt
data16
cmovae
push
xlat
mov
outsb
ja
push
mov
mov
mov
cld
sbb
shlb
lds
push
mov
fsubrs
les
cmpsb
dec
jno
inc
dec
cli
cli
addr16
or
loop
fwait
push
outsb
sub
addb
enter
push
push
sub
cmp
repnz
push
sub
fisubs
jbe
mov
jp
jo
in
lods
dec
add
aad
std
ret
std
push
sbb
imul
pavgw
ljmp
pusha
xchg
fisubs
icebp
aaa
xchg
pop
mov
aam
sub
enter
shll
lret
or
mov
mov
xor
mov
ret
sub
enter
mov
jle
sti
movsb
aaa
in
mov
push
mov
sarb
and
cltd
xchg
pop
in
sbb
pop
or
jae
lret
sbb
into
fdiv
push
imul
outsb
gs
add
adc
int3
addr16
xchg
and
mov
cmp
aaa
cmc
cmp
push
cmp
rcll
push
xchg
or
mov
add
push
ret
push
popa
xchg
cmp
enter
pop
push
enter
xchg
bound
jle
fdiv
sub
enter
cmpsb
movsl
or
stos
call
pop
fwait
aad
data16
mov
or
pop
adc
cmp
lcall
mov
aad
jmp
dec
jnp
lret
cmp
mov
mov
pop
jne
das
add
jl
bsr
stos
lahf
and
xor
mov
inc
push
xor
stc
mov
adc
inc
or
test
pop
inc
in
mov
pop
stos
ja
jp
mov
mov
sub
lret
push
xor
sub
popf
or
std
mov
and
xchg
sub
pop
push
stos
cmp
ret
into
inc
in
sbb
mov
clc
in
mov
inc
int
cmc
mov
and
xlat
ds
adc
scas
pop
jne
pusha
adc
dec
scas
fsubrp
mov
or
jg
test
pushf
ljmp
test
roll
sbb
adc
imul
and
push
std
push
add
xchg
xchg
popf
push
mov
add
movsb
loop
jle
sbbb
fwait
pop
in
cltd
jl
jnp
fadds
dec
lret
outsb
sub
xorb
mov
fisttps
in
mov
mov
aam
fwait
aam
or
outsb
mov
cld
ds
stos
xor
cmp
mov
ret
add
mov
ja
js
mov
or
popa
lret
xchg
scas
js
pop
fwait
add
movsb
ja
cmpsb
and
and
pop
pop
pop
or
packuswb
gs
cs
jp
arpl
pop
int
pop
pusha
ret
popa
shlb
pushl
test
mov
sub
std
or
adc
dec
inc
lret
test
or
lods
sarl
mov
int3
mov
aaa
sub
mov
push
test
call
nop
pop
dec
jp
ds
and
jns
dec
out
and
sahf
test
push
inc
jge
addr16
fcmovnbe
add
mov
mov
sub
clc
adcl
xor
aaa
ficoml
sub
xchg
test
add
inc
fwait
stc
mov
inc
enter
mov
in
cmp
adc
mov
or
test
push
and
sub
push
add
push
cmp
mov
fstpt
cmp
rcll
fucomip
sub
out
adc
popf
ror
push
in
pop
jp
cmp
or
outsl
pop
jno
lds
popa
jle
jbe
push
mov
pop
add
sbb
ror
pop
or
ds
dec
enter
out
xchg
lret
pusha
insb
mov
jl
sub
insl
pop
ss
outsl
cmp
push
push
jp
cmp
or
xchg
loop
cmp
mov
dec
cmp
loope
jle
call
mov
and
das
push
push
ret
repz
dec
cld
ret
call
and
das
aad
stc
pop
cmp
gs
or
shrl
fnstcw
dec
cmp
lods
lcall
scas
lahf
ja
movsl
psrlq
mov
cmp
lods
dec
imul
add
and
xor
iret
mov
inc
fcoms
icebp
cmp
clc
mov
sub
mov
stos
and
data16
xorb
in
rolb
gs
pop
test
jp
mov
jp
aas
push
notb
fstpl
lahf
dec
loope
ljmp
cmp
repz
lahf
mov
mov
add
mov
add
scas
add
cmp
in
iret
test
hlt
aam
cltd
and
jae
ss
jbe
popf
adc
inc
outsl
pop
sahf
cmp
adc
or
mov
in
int3
or
xchg
inc
sti
push
push
mov
jp
pop
sbb
sub
das
and
jp
jg
rclb
mov
pushf
xor
cmp
sti
mov
shl
fistl
inc
xor
ficomps
subl
inc
cmp
jge
sub
xor
add
ds
das
adc
mov
clc
punpckhbw
lahf
push
sub
seto
sbb
imul
and
xchg
inc
push
jnp
iret
add
mov
cmpsb
outsl
jnp
inc
es
sub
adc
sbb
pop
mov
test
movsl
js
push
shrl
cmp
pop
add
push
xor
int3
cmp
mov
out
cli
xchg
jge
pop
out
ljmp
daa
mov
outsb
add
dec
mov
mull
add
sub
xchg
mov
mov
push
mov
mov
jbe
lret
mov
jl
mov
mov
inc
add
mov
push
scas
jns
adc
dec
push
mov
in
lret
pop
in
dec
cmp
jmp
xor
jle
movsb
and
pusha
lcall
leave
je
or
rcr
aas
sbb
push
dec
lret
sub
xchg
sbb
sbb
or
fstl
cmp
into
add
sub
sbb
adc
dec
fimuls
int3
and
pushf
mov
adc
xor
clc
xlat
cmp
mov
jnp
pop
inc
daa
push
sub
push
xchg
daa
leave
push
pop
jecxz
pop
cmp
popf
inc
popf
mov
jmp
or
lods
mov
cmpsl
push
sahf
mov
sbb
fcmovnu
push
sbb
xchg
or
or
add
lock
and
or
jl
mov
icebp
enter
lret
inc
jecxz
push
fcompl
jmp
xchg
and
dec
mov
jns
inc
cli
push
mov
mov
or
cmpsb
outsb
fldcw
in
cltd
jb
add
mov
gs
xor
jp
dec
fwait
xchg
dec
cld
sti
and
jle
or
into
push
fidivrl
sub
mov
rorb
outsl
or
fcomi
add
rep
jbe
das
jne
add
js
jmp
mov
xorb
addb
les
adc
shll
repnz
andl
mov
fstl
lods
icebp
rcrl
xorl
add
xor
clc
je
sub
inc
mov
push
rcl
pop
xlat
jne
mov
jecxz
jne
out
or
clc
xchg
and
fs
cmpsl
xchg
sub
and
cmp
mov
subb
in
adc
dec
loop
stos
add
ret
fisttpll
pop
jnp
jl
pop
mov
and
jl
push
aam
sbb
jmp
xor
mov
das
mov
lock
inc
arpl
adc
insb
out
ja
cmp
xlat
outsb
leave
and
pop
or
cmp
sub
aad
xchg
std
mov
out
and
sbb
imul
cmp
sti
fs
add
pop
aaa
inc
mov
loope
pop
or
jns
pop
scas
cmp
repnz
dec
hlt
ljmp
stc
jmp
mov
cmpsb
iret
je
mov
and
fcomi
lret
cmp
sub
cmc
sbb
xchg
imul
and
sub
pusha
inc
cli
repz
mull
je
aaa
out
les
popa
lock
xor
insl
loope
lods
mov
pusha
pop
inc
pop
xchg
fidivl
hlt
pop
pop
lret
push
push
mov
ret
and
fnsave
dec
addr16
jo
leave
xor
mov
sub
das
lcall
aad
stos
xor
mov
les
ficomps
xchg
repnz
es
sub
sub
stc
aaa
xchg
xchg
mov
jne
and
inc
inc
aaa
aad
mov
mov
mov
push
add
and
inc
xor
aam
dec
sub
mov
testl
cs
adc
sbb
xchg
mov
cmp
xchg
mov
xchg
add
pop
jmp
xchg
lahf
adc
scas
mov
ljmp
inc
arpl
ds
pop
push
addr16
sub
push
adc
inc
pop
cmp
movsb
xchg
push
dec
xor
mov
jno
dec
dec
or
jp
push
les
push
cmp
push
pop
or
adcb
fs
and
inc
fidivrs
fistl
inc
out
inc
pop
mov
adc
push
lcall
lret
fbld
jmp
fucomip
xchg
sub
in
into
rol
roll
outsl
adc
and
in
dec
cmp
sub
jge
and
mov
cmp
mov
out
sti
loope
jnp
xchg
inc
xor
adc
rorb
insb
and
push
mov
xchg
dec
adc
hlt
in
lea
imul
and
orl
bound
jne
mov
jge
add
call
mov
pushf
cmc
jne
lret
dec
adc
mov
dec
aaa
rorb
add
loopne
jg
jp
mov
sahf
adc
loope
insl
es
stc
into
jecxz
ficoms
jp
sbb
pop
jl
nop
or
push
call
cwtl
inc
test
icebp
test
inc
loop
ror
pavgb
in
mov
or
gs
fcmovnu
cltd
stos
sub
and
cmpsl
popa
sbbl
loope
sbb
pop
into
into
mov
decb
stc
out
aad
aaa
in
cmp
add
xchg
pop
add
push
das
popa
mov
repnz
mov
and
fldl
enter
lret
xchg
sub
ret
adc
jl
in
loopne
ja
lret
adc
xor
xchg
out
aaa
cltd
mov
mov
xor
dec
inc
sub
mov
xchg
adc
daa
test
test
and
xchg
push
ja
aad
mov
sub
outsb
arpl
push
sub
dec
jb
out
push
or
lds
lods
fs
push
pusha
or
jno
lret
sbb
inc
outsl
inc
mov
addr16
scas
xchg
jmp
lock
les
test
test
add
sarb
mov
mov
sbbb
loopne
xchg
movsl
cmp
je
insl
jnp
stos
and
adc
pop
sahf
mov
adc
mov
xor
dec
aad
sahf
mov
xorl
loopne
f2xm1
jle
jg
lds
scas
add
leave
rolb
add
jmp
or
mov
pop
lock
fists
pop
mov
movb
daa
cmpsl
and
aas
sahf
lock
sub
test
daa
lret
jno
movsb
cmp
or
sarb
and
mov
mov
mov
into
test
fcmovbe
inc
out
jge
lret
ret
inc
inc
mov
pop
fwait
push
shr
cmp
push
inc
mov
add
xchg
cmp
mov
div
test
bound
bound
cmp
hlt
adc
xor
or
mov
adcl
mov
dec
scas
xchg
jbe
xor
pop
scas
or
jle
and
test
push
or
int
pop
loop
clc
jp
lcall
jne
out
mov
cmc
push
push
jnp
ljmp
sbb
push
cmovs
lds
stc
mov
push
out
add
test
add
push
adc
sub
jl
mov
ret
shl
add
ja
outsl
in
ss
popa
sub
fidivrs
push
mov
mov
fmuls
push
fdivrs
int3
pop
mov
testl
stc
int
dec
mov
xlat
cmp
push
jmp
xor
fs
mov
jp
dec
out
aaa
int3
xchg
js
out
dec
idivl
gs
adcl
jp
aad
imul
les
adc
fs
into
pop
sub
gs
mov
xlat
add
dec
mov
xchg
pusha
mov
negb
leave
jno
xchg
add
sahf
fwait
loop
dec
cmp
mov
xchg
pop
mull
sub
aaa
sub
jg
cld
inc
cld
fs
cltd
dec
stc
mov
cmp
jbe
call
in
lret
sub
ljmp
xor
incb
pop
cld
pop
push
xor
adc
int
sbb
and
addr16
loop
xchg
jle
ret
hlt
cmp
mov
jo
inc
pusha
or
mov
lret
push
movsb
stc
aaa
fucom
inc
daa
ret
movsl
in
mov
xchg
push
aam
push
lret
mov
imul
dec
push
mov
mov
stos
jmp
mov
adc
in
les
fcmovne
dec
push
mov
repnz
bound
lock
push
mov
out
rol
clc
lret
lock
xchg
jle
jmp
jae
movsb
jbe
repz
lock
imul
jns
negb
call
cmp
push
sarb
adc
jne
insl
loopne
orb
scas
mov
mov
sar
sbb
test
hlt
sbb
loop
mov
insl
pusha
pop
aam
adc
xor
dec
xchg
or
cmp
push
pop
jg
jle
cmpb
movsl
jg
add
xor
into
mov
iret
xchg
and
cmpsb
mov
jb,pn
pop
ret
push
out
jno
stos
sti
repnz
popa
xchg
fs
mov
dec
inc
xorl
int3
lods
fwait
sbb
push
fs
jle
cli
sub
mov
fsubl
mov
test
sbb
pop
cmp
add
jl
insb
mov
aas
push
sbb
sub
adc
lock
pusha
jb
imull
cmp
shl
pop
clc
pushw
xchg
or
dec
insb
rolb
push
icebp
repz
pop
ja
js
and
lods
inc
pop
mov
sbb
arpl
sub
xchg
jle
int
xchg
loope
or
mov
mov
mov
and
add
sbb
sbbb
xchg
pop
xchg
inc
rol
std
movsb
cwtl
jno
lods
in
adc
xor
shrb
push
leave
pop
addr16
mov
add
cmpsb
fidivrs
mov
sbb
pop
or
test
sbb
push
lcall
xorb
test
mov
jbe
lock
test
sub
test
xlat
cmova
mov
sbb
ret
cmp
mov
int3
outsl
mov
push
sti
fistpl
adc
int
movsl
cwtl
shlb
xor
repnz
std
fs
rclb
data16
cmp
pop
pop
test
daa
ja
fildl
test
daa
int
imul
and
lea
cmp
inc
outsl
jnp
insl
sbb
shl
clc
lods
fiadds
xchg
in
loop
jb
push
xchg
xor
fmul
scas
lahf
xor
imull
insb
push
cwtl
ss
push
add
and
mov
sub
or
pushf
sar
call
push
xchg
movsb
rorl
and
pop
mov
cs
scas
je
jnp
jle
lcall
mov
mov
fs
inc
xchg
mov
cs
mov
fsubrl
sahf
push
dec
mov
sti
mov
pop
outsb
jmp
aad
pusha
push
les
push
stos
push
arpl
jo
jp
and
mov
and
or
ljmp
and
sub
idivb
scas
mov
pop
cmp
in
cmp
mov
mov
les
xchg
and
shlb
sbb
popf
pop
clc
popa
xor
push
fsubrl
lea
test
loopne
orl
fsub
dec
pop
mov
lcall
mov
insl
out
pusha
mov
and
jge
push
xorb
and
xorl
jmp
test
cld
insl
mov
movsb
add
add
lods
pusha
xor
and
xor
xchg
mov
sbb
icebp
pop
insl
sub
dec
dec
jmp
mov
xlat
outsb
or
mov
or
mov
or
por
or
mov
jg
xor
xchg
fldenv
lcall
lcall
ret
pop
lea
mov
xor
icebp
push
sbb
cmp
mov
jns
cs
dec
push
cmp
stc
cwtl
fsubl
fisttpl
push
sar
sahf
jo
xchg
adc
orb
push
das
and
fimuls
mov
jo
inc
sbb
or
imul
add
cmp
cli
xchg
mov
leave
fidivrl
push
cli
les
test
pop
outsl
mov
push
icebp
cmpsl
inc
sub
and
push
nop
pop
cmpsl
mov
leave
and
shll
jecxz
mov
and
ds
lds
sbb
or
stos
lods
add
fdivrs
lcall
shlb
jne
mov
movsb
push
add
push
clc
dec
ds
fs
sti
add
jo
add
or
fmuls
inc
sarl
sbb
insl
insb
in
fld
sub
mov
adc
jge
mov
mov
xchg
mov
mov
cmpsb
stos
xchg
pop
ljmp
xchg
mov
leave
pop
pop
mov
jmp
push
cs
sbb
pop
sub
mov
mov
push
pop
filds
loope
sbb
nop
mov
cmp
rolb
mov
cld
ret
negb
in
add
out
insb
jo
jbe
push
sub
sbb
push
cmp
jns
sar
pop
sub
push
insb
mov
loop
pop
and
jns
lret
mov
outsl
shll
xchg
ret
jno
in
enter
std
xor
sub
push
repz
push
push
mov
ss
cmpsl
cmp
pusha
xor
xor
pop
sbb
mov
aad
jb
pop
or
mov
daa
cltd
cmp
or
nop
lods
jbe
jmp
pusha
inc
mov
mov
lods
orl
push
adc
popa
push
outsb
push
sbb
xchg
xchg
jo
aad
mov
pop
dec
aad
jmp
jecxz
mov
shll
loope
js
add
add
jmp
jbe
cmp
xor
jns
in
jl
fsubrl
push
push
jle
cmp
cmpsl
out
addb
sbb
adc
hlt
outsb
aaa
ret
mov
adc
int
add
push
push
lret
ret
cmp
jno
sub
or
call
subl
push
pop
loop
jns
xor
mov
aaa
sub
push
push
adcb
xor
outsb
hlt
cli
and
imul
push
cwtl
leave
test
test
stc
sub
ret
cs
cmp
jns
fimull
fwait
aas
jge
enter
sbb
in
or
dec
xchg
int3
fwait
xchg
out
dec
shl
push
adc
sbb
insl
sub
fs
mov
or
sbb
sub
cmp
ljmp
jmp
data16
dec
lods
or
sub
mov
xor
mov
or
jge
mov
sbb
loopne
sub
xor
dec
aad
add
shl
arpl
aad
jnp
push
insb
out
xchg
dec
divb
mov
sbb
mov
inc
pop
stos
int
scas
dec
xchg
jo
adc
std
test
or
iret
dec
pop
xchg
cmp
jno
mov
in
pmulhw
jbe
fcomps
push
xor
fstp
rorl
push
or
enter
xor
leave
subl
test
add
movsb
test
mov
aas
in
mov
paddq
xor
pushf
pop
out
sub
mov
test
jl
insl
inc
arpl
sub
or
mov
lods
shl
fstpt
ljmp
or
insb
mov
jg
jecxz
cld
inc
mov
rolb
lds
jae
popf
imul
xchg
les
mov
int
xor
mov
or
inc
cmp
jle
adcl
fwait
mov
cmp
or
mov
sbb
popa
xchg
add
fbstp
jecxz
sub
jns
popf
dec
sar
int
test
repnz
rcrb
ret
jg
shll
mov
push
imul
sbb
nop
daa
cmp
mov
dec
cmpsb
imul
daa
daa
mov
jae
cld
mov
dec
jmp
pop
cli
pop
sahf
cmp
fwait
leave
push
add
jb
lds
jmp
lock
mov
fstl
rorb
inc
inc
inc
fldcw
movsb
test
mov
pop
pushf
mov
mov
add
cli
pop
adc
xor
sub
cld
pop
shlb
inc
leave
mov
xchg
pop
mov
and
push
es
mov
jnp
jns
popa
mov
int3
pop
popa
cltd
das
sbb
dec
add
repnz
fiadds
push
test
fsubs
icebp
popa
add
arpl
adc
out
dec
dec
fsubl
sahf
jl
test
or
imul
jbe
lea
pop
jmp
inc
shlb
jp
xchg
js
out
out
idiv
lahf
dec
or
cltd
mov
fistl
inc
loop
shrl
pusha
bound
stos
xchg
jecxz
and
jo
xor
scas
in
repz
std
xchg
out
pop
sti
add
mov
nop
lock
imul
mov
enter
stc
cmp
shl
mov
test
loopne
lahf
insl
push
aam
fiaddl
repnz
mov
insl
xchg
sbb
pop
pop
mov
idiv
mov
in
adc
inc
jg
dec
xlat
inc
mov
mov
in
and
xchg
scas
add
dec
scas
enter
sub
iret
lcall
cmc
aad
sub
js
bound
mov
mov
xchg
add
adc
ljmp
lret
lret
pop
jae
xor
jns
pop
clc
lahf
imul
insb
inc
outsb
imulb
out
mov
pop
icebp
js
pop
mov
in
out
cmp
es
push
cmp
sub
push
jb
xchg
icebp
mov
xchg
add
inc
and
xchg
test
int3
aas
test
pop
pop
adc
out
lret
xchg
aam
mov
xor
shrl
mov
mov
and
int3
cld
addl
dec
jb
rcr
jno
xchg
jno
sub
mov
push
or
ficomps
or
loop
xchg
pop
mov
xor
push
rorl
mov
and
addb
stc
js
adc
push
fldenv
fnsave
imul
leave
pop
push
dec
inc
movb
repnz
pop
push
out
les
jmp
cmp
sub
repz
sub
rcrb
sbb
das
ret
push
mov
pop
pop
cs
adc
sbbb
in
xor
icebp
cmp
xchg
int3
pushf
cld
call
inc
aaa
and
mov
and
inc
mov
test
jns
mov
jg
xchg
or
push
sub
mov
cmp
testb
nop
lahf
sub
idiv
fsubrp
icebp
outsl
dec
out
popa
outsl
cmp
daa
fcomps
fcoml
lods
addr16
das
xchg
test
xor
inc
xchg
pop
dec
pop
mov
cmc
add
or
push
add
sar
or
sbb
sub
mov
jb
adc
call
pop
hlt
mov
in
test
int3
test
mov
pop
sbb
out
fisubrs
mov
fnstsw
sub
fnstenv
hlt
clc
sub
add
out
ficoml
mov
cli
jg
push
stos
movsl
mov
or
int3
popa
mov
and
je
dec
sbb
stos
outsb
jae
call
imul
mov
rol
xchg
jno
fisubs
cmp
js
sbb
dec
sub
mov
outsl
adc
popa
mov
sbb
jecxz
sahf
pop
dec
cld
push
rcrb
sbb
mov
mov
loopne
dec
add
stc
lahf
push
or
push
test
divb
xor
mov
dec
sbb
sti
int
xchg
pop
mov
insl
data16
sub
push
je
sar
mov
mov
and
inc
add
dec
into
and
imul
inc
ret
add
stos
daa
setp
mov
hlt
add
movsl
sbb
je
loope
cmp
or
pop
or
cmp
mov
push
sub
add
push
xor
adc
roll
jbe
jge
jecxz
sbb
and
out
pop
mov
nop
sti
fwait
push
addr16
jno
movsb
xchg
mov
xorl
popa
sbb
push
shrb
jle
clc
sbb
mov
nopl
scas
mov
lods
add
dec
popa
cmp
fisubrl
xchg
fs
repnz
xchg
jle
dec
fsubrl
insb
or
mov
testb
sbb
and
frstor
fsubrs
in
xor
testb
fstpl
sub
cmp
outsb
adc
rolb
out
out
push
jo
das
sbb
pop
subl
cld
je
ljmp
or
int
jnp
dec
or
inc
mov
daa
mov
adc
movsl
cmc
das
js
das
sbb
and
xor
xchg
jns
cld
jge
push
mov
pop
out
rol
push
or
and
and
jne
scas
lret
sub
movsl
xor
mov
icebp
jo
pop
mov
push
lea
jge
mov
and
mov
mov
out
xor
sbbl
mov
sbb
cmp
lret
or
jmp
pop
push
inc
lods
cmp
and
sahf
aad
push
push
pop
pop
lods
inc
xchg
add
out
adc
js
mov
loopne
es
mov
xchg
ret
add
jmp
ds
lcall
clc
shll
dec
cmp
in
arpl
adc
iret
sub
testl
int
out
cmp
test
pop
movhps
xchg
push
repnz
sbb
mov
jge
stos
in
mov
test
inc
cmp
ss
adc
fld1
push
mov
dec
cmp
insb
xor
mov
xchg
pop
mov
jp
lods
ror
push
lret
jg
xchg
jns
mov
and
in
pop
xchg
cmc
dec
lahf
adc
mov
jle
into
adcl
scas
mov
cmp
pop
scas
sub
push
sbb
mov
mov
repz
pop
or
cs
test
lcall
xchg
mov
mov
mov
cs
jmp
pop
std
dec
pop
inc
stos
lcall
mov
stos
stos
shlb
mov
sbb
push
lcall
cld
push
ljmp
jg
push
orb
lods
shll
mov
shrb
jmp
or
clc
leave
jp
jp
push
inc
cld
sbb
jnp
cmp
idivb
sbb
loope
cltd
jns
inc
pop
dec
cwtl
aaa
mov
jb
shrl
addr16
pop
test
and
mov
push
xchg
and
dec
and
ss
inc
push
in
dec
lret
insl
mov
mov
add
fucomi
or
xor
sub
dec
mov
test
sahf
and
popf
sub
loope
lea
dec
xor
lcall
dec
cmp
cmp
xor
add
add
pop
jg
inc
sub
xor
cltd
mov
mov
and
mov
imul
mov
inc
add
sarl
adcl
cmp
mov
imul
push
lds
lret
pusha
inc
sbb
cmpsl
jns
std
push
pushf
test
fwait
sahf
jmp
cmpsl
inc
fisttpl
ds
mov
ljmp
ror
fdivrl
push
pop
sub
cmp
pop
mov
jnp
mov
or
mov
decl
in
mov
sub
sbb
shlb
aas
int3
cwtl
je
inc
mov
stc
mov
iret
fisubrs
sbb
subb
or
fs
or
in
add
fdivl
inc
movsb
pusha
gs
gs
rcrl
dec
ljmp
out
and
andl
stos
bound
mov
addr16
jo
xchg
xor
or
data16
jnp
insl
xor
repz
jne
out
jmp
cmp
mov
or
out
dec
pusha
add
dec
mov
add
jae
mov
lret
lcall
jns
incb
mov
vpmadcswd
xchg
or
les
mov
xchg
jg
sub
and
outsb
cltd
add
adcb
sub
cmpsl
das
mov
daa
leave
test
mov
ds
js
xorl
push
test
es
adc
xor
mov
jo
xchg
imulb
cmp
add
adc
es
inc
cmp
pop
mov
xchg
cmpsb
lea
or
dec
cmp
xor
mov
inc
shrb
xor
and
fwait
adc
mov
repz
and
mov
push
jecxz
stos
sar
pop
push
fbld
repz
imul
add
or
jmp
lcall
inc
cltd
dec
je
jmp
popa
jp
out
dec
mov
std
add
cwtl
rcll
test
pop
inc
sub
mov
pop
inc
nop
inc
push
jecxz
jge
push
jae
pop
daa
loope
mov
push
cmp
cmpsb
jl
xor
movsb
jne
xchg
mov
aaa
sub
mov
sub
pop
mov
xor
add
pop
lock
test
xorl
dec
hlt
insb
or
add
fisubl
nop
mov
mov
inc
cli
ljmp
ficompl
in
sbb
sub
incl
push
lret
pop
push
fadds
jmp
cmc
loop
or
loopne
mov
xchg
lret
sbb
fidivrl
lods
inc
jge
aas
test
xchg
cmpsl
or
push
stc
fs
insb
lahf
scas
push
in
and
mov
fistpl
mov
add
xor
sbb
jns
cmp
enter
je
xor
cltd
or
jns
aaa
mov
xchg
or
pop
xor
outsl
mov
cld
mov
adc
sti
outsb
out
pop
jl
cltd
add
outsb
pushf
adc
dec
sbbb
sarl
jmp
aas
inc
sub
out
testl
pop
cmp
cs
dec
mov
add
xlat
cmp
jae
cmp
test
test
leave
in
mov
adcl
aam
lret
daa
lea
clc
sub
push
xchg
push
and
stos
xor
loope
out
ret
jb
xchg
aam
pop
dec
cs
clc
push
fwait
sub
add
sbb
dec
xor
jecxz
mov
pop
cli
pop
sub
fldl
das
popf
imul
xor
xor
scas
mov
sub
leave
in
mov
icebp
lds
js
ds
xor
sti
movsb
xchg
and
pop
repnz
fistps
adc
insl
push
xchg
imul
mov
cld
aad
jg
stos
lcall
pop
push
or
mov
or
ja
or
sbb
jae
notb
inc
test
mov
ficoml
pop
arpl
popa
and
jae
rolb
mov
imull
aad
out
sti
out
das
xor
add
pop
or
inc
inc
in
adc
std
push
sub
sahf
inc
sbb
ror
and
mov
push
inc
push
push
mov
push
shrb
clc
push
ret
addl
stos
subl
nop
xchg
fsubrs
les
xchg
mov
xchg
xchg
sbb
mov
push
xor
rorb
js
mov
lea
xchg
mov
fmull
ja
ljmp
out
adc
cmpsl
dec
dec
mov
repz
cmp
sahf
test
cmp
push
inc
sbb
imul
inc
ss
mov
sbb
mov
dec
rcll
inc
jg
stos
stos
add
mov
xchg
in
inc
sahf
test
pushl
push
lret
xchg
sti
jbe
xor
mov
cmpsl
ret
ja
hlt
jns
mov
pop
cmp
dec
cmc
cli
or
das
fsubs
pusha
int
rcrb
addr16
add
pop
out
or
xchg
les
ficomps
xchg
mov
iret
push
and
addb
in
and
xor
test
jp
popa
adc
fimuls
sbb
scas
add
nop
fs
imul
dec
sub
stos
leave
jp
divb
das
popf
add
mov
cwtl
loope
daa
lret
cmp
push
das
xlat
mov
push
mov
xchg
pop
fldenv
cmp
mov
je
add
mov
sbb
int
pop
js
mov
jecxz
aaa
jne
push
ss
mov
push
stos
int
push
adc
outsl
sbb
push
lods
add
cmc
push
out
fs
mov
sbb
lock
mov
sub
addr16
mov
shl
dec
mov
call
filds
or
mov
add
or
xlat
or
sub
sub
pop
int
sub
lds
jnp
inc
xor
test
aaa
push
lock
outsb
fdivl
inc
inc
and
lahf
outsl
adc
cmp
mov
bound
fsub
mov
pop
jmp
outsb
rcll
leave
pop
mov
sarl
jge
or
add
mov
lea
push
mov
fnstenv
cmp
nop
mov
arpl
add
jns
or
push
mov
mov
lods
xor
inc
ret
mov
mov
outsb
xor
lret
sbb
mov
mov
add
push
mov
push
inc
out
js
fwait
mov
data16
push
pop
popf
orb
leave
or
dec
xor
ds
rcrb
push
sub
xchg
jnp
inc
mov
pop
jnp
inc
add
test
test
mov
mov
mov
das
and
outsb
rcr
jp
fwait
pusha
or
sti
mov
push
mov
repnz
arpl
shl
cmp
jae
outsb
xchg
cmp
xor
aaa
mov
inc
cmp
cmp
xchg
inc
stos
mov
lcall
mov
dec
ss
loope
lods
cs
stos
dec
cmc
icebp
ljmp
and
or
ja
sbb
pop
and
lret
inc
pusha
and
xor
not
add
std
mov
orb
adc
ret
pop
adc
js
and
in
je
pop
icebp
stos
popa
mov
sub
subb
push
adc
insb
repz
sbb
cmp
jmp
cmp
inc
push
movsb
mov
jbe
es
loop
shlb
sbb
mov
xor
cwtl
mov
test
cmpsl
imul
ret
adc
stos
insb
push
mov
sarl
mov
lret
adc
mov
hlt
data16
sbb
loope
int3
jmp
sbbb
inc
das
test
xor
mov
test
fstpl
sbb
jnp
mov
inc
cli
rcl
xchg
pop
xchg
clc
sbb
sub
cmpsl
mov
xor
inc
test
fistpl
cmp
cmp
lahf
out
mov
jbe
stos
xlat
das
inc
out
dec
mov
xchg
jmp
xor
adc
movsb
mov
sbb
xchg
add
sbb
movntq
call
dec
aas
push
add
and
test
rol
jbe
cld
sub
rclb
inc
cmp
mov
fisubrl
into
fcomip
or
cmp
sbbb
ret
add
inc
mov
cld
xchg
pop
adc
fdiv
sbb
inc
mov
inc
adc
adc
xchg
mov
imul
sbb
pop
sbb
mov
add
aad
push
fsubl
cli
test
push
and
pop
sahf
ret
push
shlb
pop
inc
mov
test
mov
push
pop
in
ds
ret
mov
jmp
pushf
in
sub
dec
and
sar
cmovle
mov
and
xchg
das
jmp
mov
cmpsl
aas
pop
jae
rclb
mov
adc
imul
pop
add
xlat
pop
jle
scas
movsl
stos
popf
pop
clc
pop
fildl
stos
nop
dec
or
push
loope
adc
jge
jo
in
out
jbe
inc
or
push
push
loop
lahf
jle
push
hlt
pop
addl
pop
pop
mov
dec
ss
cli
push
aam
stos
mov
xchg
inc
add
repz
and
ds
pop
xchg
xchg
jnp
call
addr16
sub
mov
lds
ja
lock
or
sub
fldenv
clc
jae
ud0
xchg
jno
dec
test
or
gs
xor
sti
cwtl
mov
mov
push
jecxz
ljmp
add
sbb
xchg
add
dec
add
inc
jl
adc
jge
lcall
iret
loope
dec
jmp
add
and
ds
into
xchg
fsubrs
mov
or
or
xchg
int
fs
loope
das
xlat
ljmp
cld
pop
mov
dec
mov
mov
mov
or
iret
cmp
aas
shrb
cmp
dec
rol
dec
cmpsb
ja
cmpsb
sahf
outsb
jae
mov
lods
ret
mov
nop
test
shrb
sbb
call
and
inc
cmp
push
test
add
dec
push
test
xchg
mov
daa
mov
inc
jge
push
inc
mov
or
ret
stos
pop
add
fldl
mov
push
jp
sbb
inc
leave
adcb
mov
mov
dec
push
lods
mov
clc
xchg
lret
jbe
mov
leave
or
sub
out
mov
cltd
lock
push
popa
xor
aaa
mov
fidivs
sbb
fdivrl
jns
pop
jno
dec
repz
xchg
jg
jo
mov
adc
aaa
mov
mov
pop
js
inc
push
insl
cmp
mov
mov
cwtl
push
mov
icebp
pop
test
xor
adc
hlt
push
mov
push
add
jne
jne
and
mov
lds
test
jg
pop
rcrl
add
pop
ja
jecxz
jmp
mov
dec
xchg
adc
adcl
pop
aas
adc
cmpsl
cmpsl
cmp
push
sbb
jmp
xor
lret
arpl
pop
jne
mov
fistpl
cltd
fidivl
ficomps
jge
jecxz
mov
shlb
frstor
push
push
adc
test
into
inc
in
or
pop
or
or
mov
sbb
and
rcrb
cmp
lods
sarb
xor
inc
mov
sbb
cwtl
mov
movsb
push
movsb
test
insl
cmpsb
cmp
mov
pusha
pop
lock
lret
inc
jmp
mov
push
fincstp
popf
push
pop
nop
sbb
mov
adc
test
pop
sbb
out
push
push
popf
notl
inc
int3
push
push
mov
sub
fwait
push
jo
fcomps
cmpsl
dec
lods
dec
mov
or
inc
xor
jns
test
bound
xor
mov
adc
push
inc
cmp
dec
rcr
fcmovne
decl
cmp
sub
out
mov
adc
xchg
cmp
jae
dec
rep
jo
pop
pop
leave
push
pop
xor
les
dec
and
loope
test
xchg
dec
sub
add
push
mov
scas
cmp
iret
int
xchg
cmpb
lea
dec
pusha
jb
inc
movsb
out
jo
shrb
cmp
push
sbbb
xchg
pop
out
xor
fistps
sti
sub
fsubrs
out
push
mov
bound
aad
pop
sbb
ret
vpmadcswd
dec
in
not
repz
lock
cmc
push
inc
cmpsb
int3
mov
cmp
xchg
das
mov
shrb
outsl
lds
push
xor
sub
xor
movsb
sbb
sgdtl
push
sub
dec
mov
pop
lods
add
mov
cltd
scas
jnp
mov
into
adc
enter
push
scas
push
adc
movsb
and
mov
enter
sbb
out
pop
push
mov
push
into
push
mov
sub
xchg
ret
in
ljmp
cmp
inc
mov
mov
xor
fstpl
in
orl
in
mov
cs
movsl
dec
lahf
dec
cmp
mov
rep
shll
lods
sub
inc
xor
iret
or
loope
mov
aaa
sbb
and
mov
sub
into
ja
push
popf
imul
sbb
mov
dec
push
ss
push
add
push
or
xor
cmp
popf
mov
negb
movsl
aaa
lock
movsb
out
fcmovne
cmp
or
pop
call
jnp
mov
shrl
sbb
gs
sbb
jge
inc
push
xor
call
push
jne
repz
mov
cmpsb
pop
imul
xchg
jnp
mov
jae
imul
xor
xor
adc
ja
insl
lret
out
jmp
dec
or
jae
lret
mov
js
aam
push
mov
jbe
lea
xchg
cld
test
mov
hlt
add
pop
mov
loope
das
jl
mov
filds
inc
inc
bound
fs
test
lock
mov
pop
or
sbb
pushf
idivb
push
sub
mov
mov
dec
dec
das
sub
je
push
std
scas
mov
sbb
add
xor
in
stos
aas
popf
les
cs
clc
mov
sbb
cs
lcall
jbe
orb
sub
xor
int3
dec
ret
adc
ret
bound
movsl
pusha
aad
jp
inc
xlat
push
sub
pop
jmp
cmpsl
jne
sahf
push
sub
out
push
sbb
loopne
push
xor
push
sti
divl
push
sti
dec
imul
pusha
or
mov
sbb
cld
mov
xchg
adc
cmpsb
nop
insl
clc
xor
mov
inc
mov
or
fcmovbe
dec
add
dec
dec
jmp
add
daa
dec
mov
sarl
test
into
and
daa
movsb
lcall
adc
mov
ss
dec
fimull
popf
out
lds
jae
push
xchg
dec
std
fwait
or
or
adc
popa
adc
lahf
mov
jbe
mov
mov
imul
adc
bound
fisttps
jns
pop
add
mov
dec
divb
aad
mov
or
and
hlt
decl
jl
cmpsb
lods
push
ljmp
jmp
mov
and
cmp
shr
sub
lret
pusha
jge
push
push
int3
stos
shrl
cmpsb
mov
imul
stos
mov
pop
lret
mov
and
icebp
push
ja
push
imull
pusha
hlt
push
pop
fcmovb
rorl
jmp
and
mov
and
inc
sbb
xor
cmc
mov
and
iret
fwait
cmpsb
push
loop
daa
inc
rcrl
fcmovb
or
jecxz
outsb
and
loop
mov
arpl
test
xchg
ja
xor
xchg
cwtl
and
mov
push
sti
mov
andb
dec
or
xor
push
sbb
mov
mov
sbbl
in
xor
sbb
dec
jmp
mov
incl
sub
in
aas
fistl
pop
xchg
je
test
push
mov
jns
shlb
and
sar
add
mov
iret
xchg
insl
mov
sub
fisubl
call
adc
jg
fdivs
inc
jecxz
pop
loopne
add
jg
push
add
jno
leave
jne
insl
loop
xchg
call
inc
fs
fildll
scas
rolb
and
in
dec
inc
xchg
es
push
push
xor
add
push
outsl
mov
jmp
lcall
dec
add
scas
sub
push
stos
rcl
test
dec
or
mov
shrl
rol
gs
xor
outsl
in
fwait
lcall
inc
jge
or
mov
push
rcl
loop
addr16
imul
test
ljmp
cmp
dec
mov
ret
les
mov
mov
sbb
push
xlat
dec
or
sti
sarl
and
and
scas
mov
out
mov
xchg
loope
mov
outsl
sahf
sbb
les
mov
sbb
sub
push
fwait
adc
aam
or
mov
mov
int3
push
clc
mov
jne
rclb
push
lock
das
push
and
xchg
ds
je
pop
aas
les
loope
dec
sbb
mov
cltd
adcb
dec
jae
jmp
fcomip
or
ljmp
ficomps
cmc
mov
mov
pop
repz
je
lds
out
cmp
mov
inc
pushf
sahf
jne
pop
mov
dec
and
insl
xor
iret
jne
jae
adc
lret
mov
stos
adcb
int
fldenv
adc
sub
jecxz
stos
mov
xorb
mov
lret
mov
add
mov
add
and
repnz
fs
in
gs
xor
jge
insb
sti
icebp
mov
push
xchg
in
fldt
aaa
mov
sbb
dec
dec
addl
popa
es
dec
dec
xchg
int
mov
clc
inc
pop
mov
rolb
lds
test
insb
scas
or
lcall
and
cmp
jb
in
adc
cltd
cmpsl
loopne
adcl
ror
gs
add
aad
lods
shr
pop
mov
lods
and
movsl
xchg
icebp
ficomps
sub
cmc
outsb
fistpl
sbb
mov
popaw
dec
sarb
fmull
cmp
mov
fwait
mov
fsts
cld
xchg
lea
xchg
mov
jb
xchg
mov
int
mov
xchg
mov
or
cmp
add
pop
scas
adc
xor
insl
mov
adc
xchg
cld
sbb
push
mov
addr16
sbb
aad
lret
mov
lea
ja
mov
mov
repnz
inc
mov
stc
sbb
sarl
repnz
addr16
gs
pop
mov
addb
and
out
ss
xchg
testb
mov
js
push
pop
movsb
cwtl
pop
jmp
jg
stos
pop
xchg
add
in
push
lret
push
rcll
pop
fistpl
and
adc
mov
push
mov
xor
sbb
inc
add
mov
lahf
fmull
sbb
cmpsl
pop
xchg
pop
dec
popf
repz
and
cwtl
gs
cli
dec
push
out
fnstsw
inc
fadd
xor
xchg
addr16
aaa
test
xchg
mov
fs
shrb
and
enter
shrb
jg
pushf
cli
mov
mov
out
push
mov
xchg
fisttpl
test
adc
ljmp
cmp
or
in
lret
je
mov
insb
sub
aam
push
daa
jp
or
fs
std
push
mov
sub
imul
mov
add
inc
or
mov
in
clc
mov
in
jno
xor
mov
add
push
xchg
ret
sti
xchg
xchg
dec
bound
and
push
mov
xchg
push
jnp
inc
js
push
jl
add
scas
adc
dec
cld
push
jp
out
out
xchg
dec
leave
mov
push
out
jecxz
insl
push
inc
fdivl
repnz
dec
lods
and
in
icebp
cs
jb
inc
lahf
sbb
jno
fsts
icebp
js
inc
jne
ffreep
ficomps
leave
mov
dec
and
inc
add
out
pmaddwd
xchg
pop
push
pop
out
cmp
or
sahf
push
loop
lock
sbb
and
mov
push
jne
shrd
push
into
cmp
push
fwait
es
mov
mov
jmp
push
out
mov
out
cmpsb
xchg
movsl
xor
aad
jg
sbb
imul
lock
scas
fs
cmp
and
pushf
cmp
or
and
cmp
adc
gs
loope
lcall
loopne
mov
sahf
add
je
into
xchg
andl
or
test
adc
mov
pop
inc
outsl
adc
pop
sbb
xchg
and
lods
cmp
lret
push
fst
add
lock
jmp
lcall
jmp
pushf
jecxz
sub
add
and
pop
cwtl
call
popa
data16
ss
scas
push
test
mov
mov
jecxz
add
sbb
jp
jmpw
cmc
ret
sbb
cmp
sbb
push
cmp
mov
mov
in
push
mov
test
jnp
rcl
aam
rcrb
arpl
or
sub
jmp
loope
pop
push
and
movsb
aam
mov
lcall
lods
movsb
push
jg
push
xor
mov
adc
and
xchg
push
or
cli
arpl
sbb
scas
test
enter
out
jno
out
push
inc
repz
dec
insl
cmc
rcrl
mov
scas
dec
mov
das
test
and
ss
sub
lret
repnz
pop
repnz
out
adc
mov
pop
fbstp
sbb
ficompl
ja
lahf
jge
jle
ret
adc
adc
dec
pusha
jle
sub
mov
cmp
lcall
xor
pop
mov
push
push
iret
dec
sbb
ds
adc
in
xchg
sbb
push
test
aaa
xchg
fwait
cmp
cmp
test
mov
aas
mov
jno
test
aaa
add
mov
lret
sbb
push
or
outsl
xchg
pop
mov
loop
inc
adc
ss
dec
fisttpll
mov
jb
icebp
xchg
ds
fdivl
lods
popa
or
push
mov
jp
dec
xchg
xchg
sbb
cltd
sbb
shlb
jnp
mov
mov
imul
mov
outsb
jge
outsl
in
ss
loope,pt
jp
xorb
sbb
fsts
xchg
repnz
lahf
test
data16
adc
mov
inc
in
ja
call
fiadds
cmpsl
and
xor
js
mov
fcmovb
hlt
push
enter
and
inc
movswl
movsb
mov
es
movsl
cmpl
jne
cs
mov
adc
dec
pusha
pop
xchg
sti
dec
inc
andb
and
push
or
pop
js
mov
jne
arpl
push
repz
or
jns
mov
inc
cs
fistpl
jo,pt
out
aaa
fstp
mov
in
or
jno
cmpsl
sbb
jae
push
sarb
adcb
stos
xchg
lcall
mov
mov
shll
and
lret
or
loop
ljmp
dec
insl
imul
pushf
lret
dec
xchg
push
iret
mov
popa
mov
es
arpl
pop
inc
add
mov
mov
cmpsl
xor
popa
jge
mov
sbb
mov
test
push
xchg
scas
ja
aas
pop
pop
and
iret
lods
enter
sahf
push
lods
inc
push
jb
mov
sbb
in
ljmp
or
lcall
shrl
sbb
fdivrs
and
je
sysexit
push
jecxz
gs
imul
push
stos
out
xchg
xchg
adc
sub
mov
sbb
mov
fcom
xlat
pop
scas
cs
mov
sti
shr
mov
push
mov
adc
pop
mov
gs
out
fdivl
xchg
cli
pop
test
clc
dec
xchg
jno
or
or
fwait
jb
insb
insl
jo
pop
pushf
add
push
mov
mov
ljmp
addb
cwtl
lods
icebp
inc
cwtl
and
jb
cs
repnz
loope
add
shlb
js
jnp
sbb
mov
dec
push
ficompl
dec
mov
inc
push
sti
mov
mov
lock
cmp
scas
dec
lahf
aaa
test
imulb
js
dec
into
cld
adc
sub
into
sbb
jae
stos
add
xchg
cmp
and
test
add
pop
xchg
rep
jbe
cmc
insb
inc
dec
sahf
fisttpl
mov
xchg
push
xor
sbb
daa
fwait
js
add
and
xlat
xchg
sbb
and
pop
xchg
fiadds
cwtl
in
mov
mov
inc
mov
into
repz
int
loopne
jg
or
xorl
push
dec
mov
jbe
sbb
pop
sub
cmp
sub
int
dec
jo
mov
aad
rcrl
xlat
mov
or
int3
cli
xchg
jg
pushf
les
es
mov
cmpsl
cltd
push
bound
sbb
hlt
mov
sbb
fstpl
in
jle
adc
xchg
jo
rcrb
aas
mov
cmp
test
leave
mov
icebp
lahf
mov
lret
gs
and
push
xchg
das
xchg
insb
ljmp
fisttps
enter
loopne
sahf
mov
ljmp
inc
rorb
add
push
repnz
in
sbbl
jnp
xlat
out
decl
push
loop
adc
ret
stos
dec
fadds
stos
sub
jp
cmpsl
sub
mov
cmp
jo
movsl
push
pop
xor
pop
pop
sbbb
xor
jecxz
jae
fsubrp
stos
jle
mov
insl
sub
xchg
adc
jecxz
mov
xchg
rcl
and
mov
mov
xor
mov
inc
notl
outsb
lret
sub
lcall
scas
push
mov
inc
int
or
sbb
add
nop
filds
push
inc
sbb
insl
pop
mov
jnp
adc
adc
jno
loope
sub
icebp
dec
out
dec
iret
adc
xchg
je
dec
sbb
xchg
adc
ficoml
jle
jmp
test
stos
dec
or
or
loopne
sbb
xchg
daa
test
xchg
or
jo
push
mov
lret
js
jg
xchg
les
dec
out
xlat
push
inc
das
orl
in
mov
cmc
in
scas
mov
pop
inc
sbb
test
into
jle
movsb
add
sub
