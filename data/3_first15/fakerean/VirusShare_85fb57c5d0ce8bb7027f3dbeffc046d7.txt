add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
call
push
push
call
mov
push
push
mov
push
push
call
mov
push
add
lea
push
push
call
add
cmpw
lea
je
cmpw
jne
add
cmpw
je
cmpw
je
push
push
call
mov
add
test
je
movw
mov
push
push
push
push
call
test
je
cmpw
lea
jne
pop
pop
pop
mov
pop
add
ret
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
mov
push
push
push
push
push
push
lea
call
lea
movb
call
cmp
jne
lea
push
lea
call
mov
mov
push
push
push
push
call
lea
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
lea
movl
call
mov
lea
mov
call
mov
mov
push
push
push
push
movb
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
cmp
jne
mov
push
push
push
push
call
lea
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
push
push
push
mov
push
call
lea
call
mov
mov
xor
movl
movw
mov
push
push
push
push
call
test
jle
lea
lea
push
push
call
test
je
mov
push
add
push
push
call
add
mov
mov
push
add
push
push
call
mov
add
inc
push
push
push
push
call
cmp
jl
mov
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
lea
movl
call
lea
movb
call
mov
movl
movl
mov
pop
mov
add
ret
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
xor
lea
mov
call
lea
movb
call
mov
movb
call
push
lea
call
mov
mov
push
push
call
mov
push
push
push
push
call
push
lea
call
mov
push
push
lea
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
push
lea
call
mov
lea
add
push
call
mov
xor
lea
rep
mov
movl
test
jle
mov
mov
mov
lea
push
add
push
push
mov
mov
call
lea
push
push
call
mov
add
test
je
movw
add
mov
lea
push
push
lea
out
inc
add
push
mov
call
test
mov
je
push
push
push
mov
call
mov
mov
mov
mov
lea
test
jne
lea
mov
push
push
push
mov
call
add
mov
inc
add
cmp
mov
jl
push
mov
call
lea
push
call
add
test
je
mov
cmp
jb
jne
cmpl
jae
movl
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
mov
push
mov
mov
cmp
jge
cmpl
jne
mov
shl
add
mov
mov
neg
sbb
and
add
mov
pop
ret
sub
push
mov
mov
test
jne
mov
cmpl
jne
mov
cmp
je
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
mov
cmp
je
push
mov
call
mov
movl
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
lea
call
mov
lea
push
mov
movl
call
cmp
jb
lea
movl
call
pop
pop
pop
mov
mov
add
ret
mov
push
shl
add
mov
shl
xor
mov
lea
test
sete
mov
mov
mov
neg
sbb
add
push
lea
call
mov
mov
push
push
push
call
lea
movl
call
inc
add
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
add
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
lea
movb
mov
call
lea
movb
call
mov
lea
mov
mov
movl
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
lea
push
push
call
mov
add
test
je
mov
mov
push
lea
push
push
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
and
inc
add
add
mov
push
and
mov
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
lea
push
push
call
mov
add
test
je
mov
mov
push
mov
push
lea
push
push
push
push
call
mov
mov
mov
xchg
fiadds
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
test
mov
mov
je
mov
jmp
mov
mov
mov
mov
pop
test
je
push
lea
movl
call
add
js
add
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
push
lea
movb
call
mov
movl
movl
add
or
add
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
mov
call
mov
push
sub
mov
je
dec
jne
xor
jmp
mov
push
call
push
lea
call
lea
movl
mov
call
cmp
jne
push
push
push
push
push
push
push
push
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
push
lret
xchg
add
add
lret
decl
test
xchg
add
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
push
lea
push
mov
lea
mov
push
push
push
push
push
push
push
push
movl
call
mov
cmp
je
test
mov
jne
mov
push
push
push
lea
push
push
mov
mov
push
push
push
push
movl
call
mov
mov
cmp
je
push
lea
push
push
call
mov
add
add
lea
mov
mov
call
mov
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
movl
call
mov
mov
inc
add
mov
call
call
push
call
mov
push
push
mov
push
lea
mov
mov
lea
mov
push
push
mov
mov
push
push
mov
call
push
push
push
mov
call
lea
push
push
mov
call
push
push
push
push
push
push
mov
call
push
lea
call
mov
mov
lea
push
push
push
mov
call
push
lea
push
push
call
mov
add
add
lea
mov
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
call
mov
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
je
mov
ret
cmpl
jae
mov
ret
mov
cmpl
jae
mov
ret
mov
mov
push
push
add
call
xor
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
lea
movb
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
movl
xor
lea
push
push
mov
call
mov
cmp
jne
mov
movl
mov
cmp
jle
mov
lea
sub
push
push
push
mov
call
mov
mov
push
push
push
push
call
lea
call
mov
lea
test
jne
repnz
inc
add
add
add
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
lea
call
lea
xor
mov
mov
call
mov
mov
push
push
push
push
call
test
jle
lea
push
push
lea
call
test
je
push
mov
call
lea
mov
push
call
mov
push
push
push
push
inc
call
cmp
jl
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
call
cmp
jne
mov
push
push
push
call
add
test
jne
push
push
lea
call
mov
mov
cmp
je
cmp
jne
push
jmp
push
lea
or
inc
add
cmp
je
mov
mov
sub
push
push
lea
call
mov
mov
test
je
push
mov
push
push
push
call
lea
movl
call
lea
movl
call
mov
fildl
add
add
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
lea
movl
call
mov
lea
mov
call
mov
mov
push
push
push
push
movb
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
cmp
jne
mov
push
push
push
push
call
lea
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
call
lea
call
push
lea
movl
call
mov
mov
push
push
call
push
push
push
lea
call
mov
mov
test
jne
movl
jmp
mov
test
je
movl
jmp
movl
push
mov
call
add
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
lea
call
push
mov
movl
call
mov
cmp
jg
mov
lea
push
call
mov
push
push
mov
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
xor
sub
je
dec
je
dec
jne
mov
movl
mov
mov
mov
call
pop
ret
mov
movl
mov
movl
mov
call
pop
ret
mov
mov
mov
call
pop
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
movl
call
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
call
lea
call
push
lea
movl
call
mov
mov
push
push
call
push
push
push
lea
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
jne
pop
ret
mov
mov
test
jne
xor
pop
ret
mov
test
jne
push
mov
movl
call
mov
pop
ret
mov
test
je
push
mov
movl
call
mov
pop
ret
push
mov
movl
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
xor
sub
je
dec
je
dec
jne
mov
mov
movl
call
pop
ret
mov
movl
movl
call
pop
ret
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
setg
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
pop
pop
movl
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
push
push
call
push
mov
push
mov
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
inc
add
inc
and
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
add
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
add
nop
nop
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
inc
add
add
add
in
inc
add
shlb
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
jne
pop
ret
mov
xor
pop
mov
test
setne
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
lea
add
add
add
push
mov
movb
movl
call
push
mov
call
push
mov
call
mov
or
mov
mov
movl
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
add
add
add
call
lea
movb
call
lea
movb
call
lea
movb
call
inc
add
inc
and
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
add
xlat
inc
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
cmp
je
push
mov
push
push
push
call
jmp
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
add
test
jne
push
push
mov
call
mov
call
testb
inc
add
push
mov
call
mov
call
testb
in
add
push
mov
call
mov
call
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
lea
movb
call
lea
movb
call
mov
lea
push
push
mov
movb
call
test
je
mov
mov
push
lea
push
push
call
mov
test
jg
mov
lea
push
push
push
call
mov
add
lea
lea
push
push
push
push
call
add
jmp
mov
push
lea
push
push
call
mov
mov
mov
push
lea
push
lea
shl
cltd
idivl
push
lea
push
push
call
mov
add
lea
lea
push
lea
shl
cltd
idivl
lea
push
push
push
call
mov
in
inc
add
add
push
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
test
jbe
push
lea
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
mov
call
mov
test
je
mov
push
lea
push
push
call
mov
lea
push
push
push
call
mov
add
mov
push
push
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
mov
push
push
push
mov
push
call
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
call
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
xor
lea
clc
jmp
pushf
add
mov
movl
lea
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
movl
movl
call
mov
mov
mov
mov
mov
movl
call
mov
mov
mov
xor
lea
rep
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
push
push
mov
push
push
call
push
call
mov
lea
push
push
push
call
lea
movl
push
lea
call
push
mov
call
test
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
lea
push
push
call
push
mov
call
mov
mov
lea
push
push
call
push
mov
call
mov
lea
push
push
call
push
mov
call
mov
lea
push
push
call
push
mov
call
lea
mov
push
call
lea
mov
push
call
mov
mov
mov
sub
sub
push
mov
mov
mov
call
mov
mov
call
push
mov
call
mov
mov
call
push
mov
call
mov
mov
call
mov
lea
push
push
call
mov
mov
mov
sub
sub
push
push
mov
mov
push
push
push
push
mov
call
push
push
lea
sbb
inc
add
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
push
push
push
mov
call
mov
call
push
mov
call
push
mov
call
pop
pop
pop
mov
pop
add
ret
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
lea
xor
push
mov
mov
mov
call
mov
mov
movl
movl
mov
mov
cmp
jle
mov
mov
add
cmp
je
inc
add
cmp
jl
mov
cmp
jl
or
mov
or
cmp
jne
cmp
jne
push
call
jmp
mov
lea
shl
add
shl
mov
test
je
mov
mov
push
push
push
push
call
mov
mov
test
je
mov
push
push
mov
push
push
call
mov
mov
test
je
mov
mov
push
push
push
push
call
mov
mov
test
je
mov
push
push
push
push
call
mov
mov
sub
dec
lea
je
lea
shl
add
lea
shl
push
lea
shl
add
lea
push
push
call
add
mov
dec
mov
mov
mov
mov
cmp
je
push
call
mov
mov
sub
dec
lea
je
shl
lea
push
push
push
call
add
mov
dec
mov
mov
xor
test
jle
xor
mov
mov
lea
or
inc
mov
mov
add
cmp
jl
mov
push
call
mov
lea
sahf
rolb
add
mov
push
push
push
push
call
mov
xor
test
setne
push
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
inc
mov
mov
cmp
jge
mov
mov
mov
xor
lea
rep
mov
push
mov
mov
movl
call
mov
add
mov
test
movl
je
mov
call
movl
jmp
xor
or
push
mov
mov
call
mov
add
mov
test
movl
je
mov
call
movl
jmp
xor
push
mov
mov
call
mov
add
mov
test
movl
je
mov
call
movl
jmp
xor
mov
mov
mov
mov
mov
lea
push
lea
push
push
mov
mov
mov
call
lea
push
add
push
push
call
mov
mov
lea
lea
rep
lea
add
lea
mov
push
push
call
mov
lea
mov
lea
shl
add
lea
mov
rep
mov
mov
test
je
push
push
push
call
test
mov
jne
mov
mov
mov
lea
cmp
mov
push
jl
lea
mov
push
call
jmp
inc
mov
push
call
mov
mov
shl
sub
lea
add
mov
add
shl
push
push
lea
lea
push
call
mov
mov
add
add
movl
xor
shl
mov
mov
mov
add
mov
dec
test
jne
mov
mov
cmp
jne
push
call
mov
mov
jmp
mov
lea
shl
add
lea
mov
cmp
je
mov
xor
cmp
mov
je
cmp
jle
mov
mov
mov
sub
mov
mov
cmp
movl
jbe
sub
mov
je
mov
push
cltd
push
push
push
call
mov
push
push
push
push
call
test
mov
jbe
test
jle
mov
xor
divl
mov
mov
mov
mov
mov
or
mov
mov
add
test
je
lea
push
push
call
add
test
je
push
push
push
call
mov
add
testb
je
push
push
call
add
test
jne
mov
jmp
add
push
push
push
call
push
push
call
add
test
je
movw
jmp
push
push
push
call
add
mov
or
mov
mov
test
je
mov
mov
movl
mov
test
je
mov
mov
push
push
push
push
call
mov
test
je
push
push
push
push
call
mov
push
call
push
mov
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
sub
push
mov
push
mov
movl
xor
mov
cmp
jle
push
mov
push
lea
mov
push
call
mov
inc
add
cmp
jl
pop
pop
lea
push
call
lea
mov
movl
mov
movb
test
je
push
call
add
movl
lea
mov
movl
mov
movb
test
je
push
call
add
movl
lea
mov
movl
mov
movb
call
lea
sbb
inc
add
and
inc
and
add
push
into
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
mov
mov
mov
mov
cmp
mov
je
cmp
jne
push
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
push
push
lea
push
push
push
push
call
mov
lea
push
push
call
lea
push
call
mov
mov
imul
mov
mov
add
mov
add
cmp
mov
mov
jle
mov
testb
je
mov
push
lea
push
push
push
push
call
mov
push
lea
push
push
push
push
call
push
lea
push
push
mov
push
call
mov
push
push
push
push
call
push
call
mov
cmp
jne
xor
jmp
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
push
call
mov
cmp
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
push
call
mov
cmp
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
mov
push
call
mov
lea
push
push
push
push
lea
popa
rolb
add
inc
pop
add
test
add
lea
mov
mov
mov
mov
mov
mov
mov
imul
mov
push
lea
push
push
mov
call
mov
mov
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
imul
push
push
push
call
mov
mov
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
push
push
lea
push
call
mov
mov
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
lea
push
push
push
lea
leave
fldl
add
fcomi
inc
pop
add
test
add
add
and
push
push
push
mov
call
mov
cmp
jg
mov
lea
push
push
push
push
call
mov
add
lea
push
push
push
call
add
jmp
push
lea
push
push
mov
call
mov
mov
push
push
push
lea
push
push
call
mov
add
mov
push
mov
push
lea
lea
shl
cltd
idivl
lea
push
push
push
call
add
mov
cmp
jbe
push
lea
push
push
mov
call
mov
lea
push
push
push
call
add
or
xchg
add
je
push
lea
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
push
push
jmp
mov
lea
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
call
mov
mov
push
push
call
add
cmp
je
mov
mov
push
call
lea
push
mov
call
mov
mov
push
push
call
add
cmp
je
mov
push
mov
call
mov
mov
mov
push
push
push
push
lea
push
push
call
mov
mov
add
push
push
push
lea
xor
testb
je
cmpl
je
mov
mov
push
push
mov
push
push
call
mov
mov
mov
inc
add
cmp
mov
jl
lea
push
call
mov
mov
mov
mov
sub
push
push
mov
mov
sub
push
mov
sub
lea
mov
sub
push
lea
mov
push
push
call
add
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
mov
pop
pop
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
mov
test
je
mov
mov
call
mov
push
mov
call
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
movl
call
pop
ret
nop
nop
nop
nop
sub
mov
mov
add
mov
mov
movl
mov
mov
test
mov
movl
mov
je
push
lea
push
push
call
add
jmp
movw
mov
lea
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
test
je
mov
push
push
push
push
movl
call
xor
ret
nop
nop
nop
nop
nop
mov
push
mov
test
mov
je
test
je
mov
pop
ret
mov
lea
push
mov
mov
mov
push
push
push
push
push
call
test
jne
pop
ret
mov
push
push
push
push
call
mov
movl
test
je
mov
test
je
mov
push
push
push
push
call
mov
pop
ret
test
jne
mov
pop
ret
mov
push
push
movl
call
mov
push
push
push
push
push
push
mov
call
pop
ret
nop
push
mov
push
push
mov
push
push
push
lea
push
push
mov
call
mov
mov
add
xor
add
mov
test
je
push
xor
push
push
mov
push
push
push
call
mov
inc
add
add
cmp
jl
mov
pop
mov
pop
pop
pop
pop
ret
mov
pop
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
cmp
push
mov
je
call
pop
add
ret
mov
mov
inc
mov
mov
cmp
jl
movl
mov
lea
push
mov
mov
mov
push
push
push
push
push
call
mov
inc
mov
mov
cmp
jb
push
lea
push
movl
mov
call
mov
test
je
push
mov
mov
mov
push
push
push
push
call
mov
mov
cmp
jae
mov
xor
lea
rep
lea
movl
shl
add
mov
mov
lea
lea
push
push
mov
mov
movl
call
jmp
mov
pop
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
lea
push
call
mov
test
je
push
mov
xor
lea
lea
rep
mov
movl
push
mov
lea
mov
push
mov
movl
call
mov
test
jne
pop
lea
push
call
push
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jae
mov
add
cmp
jb
mov
mov
mov
xor
imul
div
xor
div
mov
push
xor
div
push
mov
mov
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
mov
mov
push
mov
mov
lea
cmp
ja
xor
mov
jmp
mov
mov
mov
mov
mov
call
mov
call
mov
shr
mov
lea
dec
inc
add
add
and
add
adc
test
je
mov
lea
push
push
push
push
call
mov
push
push
push
push
mov
call
pop
pop
pop
pop
add
ret
das
outsb
shlb
xchg
outsb
shlb
add
add
add
add
add
push
mov
push
mov
sub
mov
push
mov
push
mov
push
mov
lea
mov
call
mov
lea
push
push
movl
call
mov
mov
sub
cltd
idivl
mov
test
jl
cmp
jge
lea
push
call
cmp
jl
push
call
jmp
mov
lea
shl
add
push
lea
lea
lea
mov
mov
push
rep
call
movl
movl
push
push
push
movb
call
push
call
push
lea
call
push
lea
push
push
call
mov
add
push
push
call
push
call
mov
mov
push
push
mov
push
push
push
call
mov
push
push
push
call
mov
mov
test
jne
mov
push
push
push
call
mov
mov
test
jne
mov
push
push
push
call
mov
mov
push
push
push
push
push
mov
call
movl
lea
mov
call
movl
pop
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
mov
push
push
call
ret
nop
mov
push
push
call
ret
nop
push
push
mov
push
lea
push
call
mov
xor
test
jle
mov
mov
add
cmp
je
inc
add
cmp
jl
cmp
jge
mov
lea
shl
add
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
push
call
mov
mov
push
call
test
jne
push
call
pop
xor
pop
ret
push
mov
mov
mov
rep
push
call
pop
pop
mov
pop
ret
nop
push
push
mov
push
mov
push
push
push
push
mov
mov
test
je
push
push
call
pop
pop
pop
mov
mov
add
ret
push
call
add
mov
test
movl
je
push
mov
call
mov
jmp
xor
mov
lea
push
lea
movl
mov
call
lea
lea
push
call
lea
lea
add
std
jg
add
add
adc
add
mov
and
inc
add
push
call
push
push
mov
call
test
jne
test
je
jmp
push
mov
call
push
mov
call
lea
push
call
mov
push
mov
call
test
je
mov
test
jne
mov
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
mov
mov
add
ret
push
call
mov
mov
call
test
je
mov
push
mov
call
mov
pop
pop
pop
mov
add
ret
nop
mov
xor
push
test
push
jle
mov
mov
lea
cmp
je
inc
add
cmp
jl
pop
pop
xor
ret
lea
pop
shl
add
lea
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
test
movl
je
push
call
add
mov
pop
ret
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
add
shl
push
call
mov
mov
mov
mov
lea
shl
add
shl
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
call
pop
pop
pop
pop
add
ret
lea
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
push
push
call
mov
lods
add
mov
icebp
mov
add
jnp
jns
sarb
add
jl
mov
nop
lea
add
add
add
fcmovu
add
jns
xlat
add
jnp
roll
stos
repnz
fxch
push
mov
add
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
aam
rcl
imul
fiadds
call
pop
fadd
lret
stc
add
jne
add
stos
add
into
jae
mov
add
scas
add
lcall
inc
in
push
push
push
push
push
push
lea
push
push
push
push
call
add
aad
add
add
add
pop
add
faddl
ljmp
add
add
push
pop
je
jge
add
fs
mov
fwait
xchg
add
cld
cltd
in
add
add
push
push
lea
push
call
add
add
add
lock
add
flds
mov
add
fadds
jmp
gs
arpl
add
add
add
cmc
scas
add
add
lcall
push
push
lea
push
call
add
lret
mov
add
imul
pop
add
lods
test
jns
mov
add
fs
rolb
sahf
lods
xchg
add
ja
add
je
hlt
call
fists
xchg
add
pop
xchg
fildl
push
push
push
push
push
call
jbe
pop
add
lahf
add
add
add
lock
push
je
add
stos
stos
mov
pop
add
stc
mov
pop
cmc
rcll
add
imul
mov
out
add
ja
mov
les
add
lcall
dec
and
add
add
xchg
fwait
lcall
call
pop
loope
add
add
fadd
popf
fsubl
mov
rolb
add
add
add
loope
pop
test
imul
cli
mov
lock
pop
push
call
push
lea
push
call
mov
sahf
cli
jle
ja
xchg
lret
ljmp
testb
jl
movsb
add
mov
std
add
fildl
jmp
addl
add
movsl
cld
sub
pop
jmp
push
push
lea
push
push
push
push
push
push
push
lea
push
call
aad
add
push
add
add
add
test
add
leave
addl
je
lret
add
lcall
repnz
push
scas
add
iret
iret
pop
add
add
lods
pop
xchg
js
add
lock
stos
fistpl
lcall
push
push
push
lea
push
push
push
push
lea
push
push
call
pop
add
add
jge
out
pop
jbe
pop
push
test
add
jge
flds
mov
pop
iret
mov
mov
jbe
cmpsb
add
push
repnz
call
fldl
add
xchg
add
ficompl
mov
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
out
add
add
fnstcw
mov
mov
mov
jl
icebp
add
add
add
lea
cwtl
add
pop
sti
add
xchg
fildl
add
mov
add
roll
clc
ljmp
add
sub
pop
mov
add
push
lea
push
push
call
xchg
add
shrl
add
popf
pop
add
add
push
iret
movb
add
add
mov
add
add
popf
cwtl
add
add
hlt
filds
pop
add
in
add
jl
add
idivb
pop
fnstsw
fs
add
push
cltd
push
jecxz
ret
mov
lcall
ret
add
add
push
push
push
push
push
push
push
call
fbld
stos
add
jge
loope
add
pop
mov
mov
pop
jne
stos
rcrl
test
add
jnp
scas
jne
jmp
icebp
add
push
js
pop
imul
fs
add
jge
jns
lahf
add
lods
lret
out
add
aad
sub
pop
add
push
push
push
push
lea
push
call
jge
jne
xorb
pop
add
imul
add
int
lods
data16
mov
add
push
call
leave
andb
outsl
bound
pop
add
add
lcall
pop
add
repz
adc
int3
sahf
lods
push
dec
push
or
inc
add
add
ror
add
add
sub
not
ror
pop
shr
ror
pop
push
lea
push
call
into
sahf
jne
in
rolb
rolb
cmpsl
ljmp
gs
mov
pop
out
jae
aam
addl
add
add
mov
not
insb
stc
mov
rcll
mov
jecxz
call
add
cmc
xchg
mov
lcall
jne
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
in
stos
cmpsl
imul
xchg
jbe
lea
lds
faddl
jno
mov
mov
add
pop
movl
add
mov
add
add
add
add
out
cli
add
xchg
testl
xchg
in
call
mov
push
lea
push
push
push
lea
push
lea
push
push
push
call
orb
repnz
cli
loop
add
in
add
aam
add
pop
xchg
push
xchg
add
movsl
add
add
lcall
inc
call
lea
push
push
push
lea
push
push
lea
push
call
add
stos
js
filds
addb
xchg
add
test
mov
add
jl
je
movl
add
repnz
add
mov
add
mov
jmp
add
stc
jle
ret
add
add
data16
add
pushf
mov
lret
jns
mov
add
push
lea
push
call
rcr
pusha
add
stos
pop
fldt
in
add
in
cli
cltd
add
add
mov
add
add
sub
pop
pushl
pushl
push
lea
push
call
add
sti
add
stc
add
mov
push
add
cmpsb
imul
add
fidivrl
add
add
add
sahf
add
push
add
lret
add
test
lcall
cld
and
add
div
adc
xchg
ja
outsl
add
ficomps
xchg
jno
outsl
in
enter
add
add
addr16
add
add
add
jno
add
add
lods
sti
iret
pusha
fisubrs
mov
add
push
mov
add
cld
flds
fyl2x
add
shl
enter
add
add
out
sub
pop
pushl
pushl
push
lea
push
push
call
add
fwait
add
imul
xchg
fsub
add
xlat
add
add
std
imul
push
xor
add
add
push
push
lret
add
push
add
repnz
movb
pushf
add
test
add
lahf
add
lcall
outsb
xor
add
mov
imul
incl
movb
or
add
sub
sub
add
shl
shl
pop
shr
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
push
cmpsl
mov
add
imul
mov
add
jmp
fs
nop
fs
pop
pushl
push
push
push
push
push
push
call
pop
xchg
push
add
test
xchg
add
add
lret
add
jl
push
lcall
lcall
add
push
call
add
rcl
add
add
in
into
mov
add
add
push
add
int
lret
add
jle
imul
clc
add
mov
pop
flds
movsb
add
pop
xchg
add
movsl
fiadds
hlt
ret
add
stos
add
push
lret
add
pop
push
push
push
sub
push
sub
add
shl
sub
shr
shl
dec
sub
pop
sub
shl
pop
push
lea
push
push
lea
push
call
out
add
jne
lea
add
add
add
cmpsb
add
addr16
mov
add
add
add
add
add
lcall
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
lea
cwtl
incb
les
call
loopne
add
add
test
lods
iret
pop
add
ja
ja
mov
add
sub
pop
push
call
push
push
call
imul
ret
icebp
add
bound
nop
pop
addr16
mov
add
jmp
loopne
jo
mov
add
jns
xchg
popa
add
clc
push
push
lea
push
call
add
shr
add
addl
add
mov
pop
sahf
mov
addr16
add
jb
dec
xchg
ljmp
lcall
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
out
add
add
add
add
push
add
add
add
loop
add
jb
add
mov
add
add
add
out
mov
arpl
outsl
outsl
add
movl
sub
pop
push
mov
push
push
lea
push
push
push
push
push
call
add
divl
add
fdivrl
out
add
mov
hlt
add
push
add
jae
andl
xchg
mov
pop
enter
in
mov
jbe
mov
in
sub
mov
add
lea
addl
pop
add
push
lea
push
lea
push
call
add
mov
jmp
scas
push
xchg
add
std
add
imul
movsl
ret
add
rolb
push
add
movsb
mov
js
outsl
add
add
add
cmpsb
ja
add
les
in
bound
add
add
add
add
addl
imul
xchg
add
sub
pop
add
add
push
push
push
push
call
mov
shlb
add
mov
in
cmpsb
add
add
add
shl
mov
add
xchg
lcall
xor
jno
adc
test
mov
dec
push
push
push
push
lea
push
push
push
push
call
add
mov
test
sarl
add
mov
mov
add
imul
sub
pop
xor
push
push
push
push
push
call
add
add
add
pop
cltd
sahf
stc
xchg
pushf
xchg
add
movsb
lock
mov
xchg
add
add
jl
lret
add
je
xchg
addl
add
subl
in
xchg
icebp
add
add
add
mov
add
sti
icebp
add
add
add
add
loopne
add
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
call
out
add
rolb
mov
addl
ja
fs
mov
pop
les
movsb
add
aam
lock
test
xchg
add
divb
add
add
add
test
add
pop
loopne
sti
cli
add
mov
add
enter
fldl
jge
lcall
jne
push
push
push
push
push
push
push
push
push
push
call
out
loop
icebp
push
pop
add
add
mov
add
outsl
xchg
add
loopne
rclb
in
sarl
mov
add
add
enter
add
xchg
je
sub
pop
push
push
push
push
call
pop
add
int
in
mov
lahf
enter
call
mov
push
add
pushf
xchg
mov
add
add
jno
add
inc
or
adc
clc
rcll
and
int
sub
push
push
push
push
call
mov
add
xorb
add
push
add
add
lock
stos
add
push
addb
add
sti
add
push
xchg
add
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
cli
mov
mov
mov
fnsave
xchg
add
jae
add
add
imul
roll
cmpsb
test
in
push
add
xchg
jle
add
mov
xor
push
push
lea
push
call
push
mov
cld
leave
popl
add
movsl
jge
mov
orl
sti
add
sar
jo
popf
add
add
cli
outsl
mov
mov
pop
add
mov
mov
cli
pop
into
add
add
mov
push
nop
add
int3
test
add
add
in
hlt
lcall
mov
xor
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
mov
lahf
jle
push
je
mov
add
add
movsb
add
add
cwtl
test
call
add
add
add
add
add
jno
add
repnz
add
add
lcall
enter
ret
addr16
scas
push
push
push
push
push
lea
push
push
call
rcrl
cmpsb
add
add
jne
add
icebp
jle
lret
je
add
xchg
add
mov
mov
add
cmpsl
pushf
js
jmp
bound
lcall
push
push
push
push
lea
push
push
lea
push
push
call
in
jns
add
in
jecxz
xchg
cltd
lock
cmpsl
add
add
out
add
ret
mov
add
add
add
add
js
stos
add
loopne
lcall
movsb
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
jle
add
add
pusha
negl
add
add
mov
addl
out
xlat
add
push
add
add
add
lret
pop
stos
mov
pop
pop
push
lea
push
push
call
faddl
add
mov
add
add
push
lock
add
mov
pop
imul
rclb
add
imul
icebp
mov
js
sbbl
sahf
in
stos
in
xlat
iret
sub
pop
mov
add
push
push
call
in
push
popf
addl
add
scas
add
pushf
loope
movsl
int
stos
out
jns
add
addb
mov
addl
incb
test
test
add
mov
add
filds
pushf
mov
xchg
add
into
jmp
sub
pop
add
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
test
add
add
add
negl
add
add
add
je
in
add
jo
add
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
add
add
cmc
add
add
pop
mov
xlat
mov
pusha
add
flds
test
rcrb
add
push
leave
jno
fiaddl
mov
lock
test
add
add
mov
jge
add
out
leave
insb
popf
pop
push
mov
aam
add
push
sub
pop
mov
xor
push
push
push
lea
push
call
add
mov
add
mov
add
lds
popl
pop
mov
fcoml
push
lret
add
add
add
add
add
add
dec
sub
adc
pop
pop
in
add
push
add
pop
add
mov
push
push
not
push
sub
add
dec
sub
pop
sub
pop
push
sub
lea
shr
shl
pop
pushl
push
shr
shl
lea
pop
call
push
sub
dec
inc
sub
pop
push
push
push
sub
ror
inc
push
sub
add
sub
sub
sub
pop
pop
push
push
push
call
add
negb
mov
jecxz
add
add
test
fwait
mov
loope
popf
mov
jnp
repnz
fstpt
les
mov
add
add
js
jle
mov
add
add
imul
pop
push
push
xor
add
pop
push
push
push
lea
push
push
push
push
call
push
pop
js
outsl
add
gs
add
sahf
pop
jle
in
add
add
call
xchg
pop
xchg
add
jecxz
notl
test
add
pop
add
call
iret
add
pop
bound
sub
pop
call
push
lea
push
lea
push
call
add
add
mov
std
les
mov
push
push
roll
bound
mov
lods
add
lods
add
add
pop
into
popa
jmp
mov
fcomip
sub
pop
mov
push
lea
sub
pop
push
push
push
push
push
push
lea
push
call
pop
jp
add
add
arpl
loope
enter
add
fwait
addb
popl
add
jp
nop
add
lods
xchg
xchg
push
lods
add
cli
lds
lret
push
pop
cli
add
add
add
add
jo
fistpll
mov
add
push
push
lea
push
call
add
jns
add
pop
add
mov
fmull
test
jne
lds
add
add
jo
add
pop
mov
add
push
roll
sub
pop
add
add
push
pop
mov
push
push
lea
push
push
lea
push
push
call
push
add
jno
movsb
add
loope
jge
add
jne
ja
shl
mov
add
mov
jmp
mov
add
add
add
mov
add
sub
pop
xor
push
lea
push
push
call
loopne
push
arpl
add
addb
mov
divl
movsb
fldl
in
jae
xchg
mov
add
add
xlat
mov
out
out
hlt
add
pop
ret
push
add
add
add
mov
push
into
std
add
fsubrs
add
test
push
sbbb
sub
pop
add
push
shl
shr
inc
pop
add
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
jae
add
mov
fadds
push
aad
stc
pop
jp
add
movsb
sar
test
add
cmpsb
add
rcrl
cltd
add
add
add
je
push
sub
pop
mov
xor
push
push
push
push
call
jmp
add
pop
aam
add
lcall
out
mov
add
test
fldl
push
add
fistps
jecxz
ljmp
lcall
mov
fnstsw
testl
lcall
lock
shl
ror
lea
pop
pop
push
xor
pop
mov
xor
push
rol
add
pop
rep
push
lea
add
shr
not
pop
mov
push
push
push
lea
push
push
lea
push
call
add
cmpb
fnstsw
add
mov
add
popl
out
mov
add
add
cmpsl
cmpsb
insb
add
cmpsl
int3
mov
add
pop
clc
ret
jbe
add
lcall
or
push
push
push
push
call
add
fucomp
bound
fwait
add
lret
popf
cld
pop
jmp
addb
add
mov
add
pop
fistpll
mov
add
add
add
add
lcall
les
add
push
sub
ror
sub
lea
pop
or
je
mov
xor
push
add
pop
mov
push
push
push
call
add
add
add
add
cmpsb
popf
mov
addb
xlat
mov
fwait
pop
out
push
add
add
add
movsl
movsb
addb
mov
out
add
jmp
mov
mov
add
add
in
clc
pop
xor
push
push
call
add
movl
incb
fwait
std
pop
je
and
mov
mov
add
repnz
lret
add
jbe
xchg
test
jmp
data16
stos
andb
mov
add
lock
jno
fdivrs
add
out
mov
xchg
mov
mov
lret
jbe
into
rolb
pop
add
push
pop
add
push
push
lea
push
push
push
lea
push
call
add
jne
rolb
imul
add
int
mov
mov
jnp
add
cwtl
add
add
cli
xchg
lods
pop
add
pushf
jo
sahf
add
add
add
add
xchg
sub
pop
add
push
push
lea
push
call
add
cmpsl
add
add
xchg
xlat
add
aam
push
push
push
imul
add
add
loope
lea
nop
mov
add
add
in
push
ljmp
add
test
add
mov
mov
pop
jbe
lods
adc
xchg
lods
add
int3
sub
pop
push
push
push
lea
push
call
lret
imul
add
add
add
jle
in
xchg
add
push
addr16
add
add
scas
jnp
add
add
xchg
stos
add
imul
icebp
mov
add
pop
mov
push
push
push
push
call
ret
add
into
sbbb
push
ja
add
push
add
ljmp
push
add
loope
lods
add
cli
xor
add
add
add
add
jbe
filds
pop
add
add
jl
mov
hlt
pop
xor
push
push
call
cwtl
cld
add
mov
out
add
lods
mov
add
xchg
movsb
add
test
outsl
int
add
testb
add
rolb
mov
add
in
cld
jecxz
imul
data16
jmp
push
fbld
arpl
pop
add
push
sub
dec
dec
xor
pop
add
pop
push
push
lea
push
lea
push
push
lea
push
call
std
jge
testl
add
int
roll
ret
icebp
test
add
call
add
mov
rol
add
repnz
mov
enter
bound
sub
pop
rep
push
shr
add
lea
pop
mov
xor
push
add
pop
or
je
mov
push
add
pop
add
push
push
push
lea
push
call
add
jl
add
add
movb
std
pop
add
jns
add
movl
nop
add
add
lea
add
add
mov
push
add
pop
jge
add
add
loope
addl
jp
add
add
cld
mov
lcall
movb
add
rep
push
push
lea
push
call
add
mov
add
loope
fisttps
lock
adc
into
je
add
ja
push
add
rol
cli
add
jle
jge
add
repnz
add
imul
ja
mov
mov
add
push
push
add
push
or
not
add
ror
sub
sub
sub
shr
xor
pop
xor
dec
rol
pop
push
shr
ror
pop
pop
push
lea
push
lea
push
push
call
cmc
xchg
xchg
int3
in
add
lock
shrl
pop
mov
add
mov
aam
xchg
bound
mov
lods
in
iret
jb
add
add
add
jae
test
xchg
add
add
imul
faddl
pop
out
push
aad
add
push
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
pop
xchg
add
add
cmpsl
add
arpl
xlat
xchg
mov
addb
cltd
lret
mov
int3
xchg
in
roll
fwait
les
mov
in
fdivr
lcall
insl
hlt
push
lea
rol
pop
mov
push
inc
shl
not
pop
jmp
push
push
push
push
push
push
lea
push
lea
push
push
push
call
jo
scas
pop
xchg
xchg
add
mov
lea
add
add
stos
mov
stos
add
add
add
int3
jmp
add
in
push
push
clc
add
add
jmp
sub
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
ret
in
add
pusha
jo
incb
into
imul
add
add
add
pushf
add
add
mov
pop
mov
push
sub
shl
not
add
pop
add
push
push
shr
rol
sub
pop
push
push
not
pop
push
push
xor
sub
pop
push
mov
push
sub
lea
add
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
mov
jno
add
mov
jns
outsl
mov
add
xchg
fcom
add
add
ljmp
lea
add
stc
add
test
xchg
add
faddl
add
int
add
add
gs
add
jno
jge
push
add
mov
add
sub
pop
pop
push
sub
add
dec
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
jae
sahf
push
sahf
add
add
add
pop
push
add
iret
test
add
add
xchg
add
jne
pop
mov
add
sub
pop
leave
ret
push
inc
inc
pop
push
push
lea
push
push
push
push
push
call
push
lahf
stos
testl
fisttps
add
popl
cltd
add
movsl
mov
jae
hlt
add
fadds
add
xchg
add
mov
jno
lret
call
mov
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
jne
add
xchg
mull
ja
mov
fcmovb
mov
rclb
pop
movsl
add
clc
icebp
mov
add
xchg
mov
iret
testb
fisttps
in
fcomps
push
lea
push
push
push
push
call
mov
add
fiadds
push
jbe
add
push
add
rcll
add
fldl
movsl
push
movsl
add
add
test
add
mov
jno
add
add
add
imul
lcall
push
lea
push
push
push
lea
push
call
add
jmp
lea
jp
add
cltd
mov
add
testb
add
add
subb
add
pop
mov
add
test
jge
imul
lret
add
les
add
xchg
std
icebp
je
push
add
jecxz
pop
sub
pop
push
push
push
push
push
push
push
push
push
call
add
jge
in
mov
roll
mov
data16
mov
add
add
add
fs
jmp
add
add
in
stos
add
aam
int
loope
sub
pop
movl
push
push
call
add
pop
add
les
pop
iret
jbe
mov
add
jge
xchg
icebp
out
pop
les
add
add
jnp
add
cmpsl
mov
add
data16
data16
push
mov
mov
push
add
add
out
fdivs
lcall
inc
clc
call
rcrl
rorb
push
add
add
lock
pop
pop
push
sub
add
pop
pop
pop
push
ror
pop
pop
push
push
push
push
push
push
push
push
push
push
call
push
rorl
out
mov
jo
mov
add
jae
jecxz
mov
roll
add
add
lock
in
xchg
test
add
push
add
pop
loope
add
imul
add
ljmp
hlt
int
fimull
add
in
fdivr
lcall
push
push
push
push
call
out
add
add
ret
pop
add
add
rcr
jl
cmc
insb
push
lock
push
add
add
cli
mov
add
add
mov
xor
mov
add
lock
sti
add
xlat
add
int
push
sub
pop
ret
push
push
push
call
add
mov
fdiv
scas
imul
jo
mov
add
xchg
add
lods
mov
movsb
rcr
sarb
ja
std
jmp
xchg
in
clc
lcall
in
add
push
add
shr
not
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
pushf
lret
ret
add
add
add
pop
xchg
add
xlat
lahf
add
shl
fadds
add
mov
lcall
pop
add
subb
add
in
insb
sti
loope
mov
pop
push
push
lea
push
push
push
push
push
call
push
add
icebp
mov
out
add
lea
push
scas
add
stos
imulb
aad
add
add
popl
add
add
into
add
push
lea
roll
fwait
add
sahf
hlt
jmp
add
mov
sub
pop
push
push
dec
pop
push
testl
push
push
push
lea
push
lea
push
push
push
push
call
xchg
add
je
mov
imul
popl
add
mov
jne
add
mov
je
add
les
in
push
ja
outsl
cmpsl
mov
sti
push
add
add
jnp
pop
add
add
sub
pop
addl
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
pop
add
mov
std
jo
flds
add
add
mov
into
add
add
jmp
cld
mull
jb
in
fdivr
lcall
je
call
scas
push
push
push
push
lea
push
lea
push
push
push
call
add
lds
gs
pop
call
fisubrs
add
pop
xchg
jne
out
add
jl
testl
jno
gs
add
add
out
popf
scas
stos
fbld
pop
mov
pushl
push
push
push
lea
push
call
add
faddl
add
out
cltd
add
movsl
add
call
mov
aad
loopne
mov
flds
xchg
pop
add
jne
loop
add
add
in
mov
add
add
add
call
add
roll
ljmp
push
lea
inc
lea
lea
pop
call
push
push
call
imul
add
add
call
add
add
int3
cmpsb
add
mov
test
add
test
mull
fldl
scas
scas
add
push
jns
in
clc
lcall
jge
add
test
std
lcall
sub
pop
pop
push
shl
sub
add
inc
pop
pop
push
ror
pop
pop
leave
push
lea
push
push
call
icebp
mov
jp
push
xchg
mov
add
add
rcl
add
add
jp
mov
cld
add
shr
lods
mov
jbe
add
lcall
add
push
lea
push
push
push
call
jle
rcl
mov
mov
add
mov
add
mov
loop
imul
add
jne
add
jbe
add
mov
in
lock
push
push
push
push
push
lea
push
push
push
push
call
jmp
add
push
fnsave
add
push
add
call
add
test
add
jno
scas
cmc
add
add
add
fcmovnb
insb
fwait
incb
in
add
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
push
stc
enter
pop
add
add
add
add
enter
je
je
lock
add
jge
add
add
add
fdivrs
lcall
push
add
pop
push
push
push
sub
pop
push
push
inc
shr
ror
pop
movl
push
lea
pop
push
call
push
add
inc
pop
push
push
push
call
add
stos
add
add
filds
in
mov
mov
add
shr
add
popf
add
add
mov
movsl
pop
jae
mov
lods
add
mov
jae
add
pop
push
jmp
out
add
in
clc
lcall
lret
incl
xor
not
pop
cmpl
jne
push
add
lea
add
pop
pop
pop
push
ror
pop
pop
push
dec
add
pop
pop
push
ror
lea
xor
pop
leave
push
rol
add
pop
ret
push
not
sub
pop
push
push
not
rol
pop
mov
push
push
push
call
add
mov
stos
in
loopne
iret
mov
je
iret
mov
add
movl
add
add
add
mov
push
addl
add
add
mov
add
push
push
push
lea
push
push
push
lea
push
push
call
push
push
jle
out
add
rorb
add
incb
popl
shrb
lret
lcall
add
add
push
add
mov
in
add
add
cmpsb
in
aad
mov
sub
pop
push
push
xor
sub
sub
pop
push
push
push
pop
push
push
rol
not
not
pop
mov
lea
push
dec
lea
pop
sub
mov
push
push
call
add
add
add
pop
pop
mov
mov
add
pop
bound
ljmp
add
lods
add
sub
pop
shr
push
shl
sub
pop
add
push
rol
xor
shr
pop
mov
push
pop
mov
push
add
xor
not
pop
add
push
add
pop
add
push
push
push
call
add
mov
hlt
sti
mov
add
jne
mov
add
jl
push
add
add
int3
in
add
jmp
xchg
scas
add
stos
add
std
mov
je
into
mov
pop
andb
xchg
add
add
jp
ja
add
sub
pop
mov
mov
push
not
rol
pop
cmp
jne
cmp
jne
push
push
push
push
push
push
push
lea
push
call
add
scas
add
add
cmc
movsb
add
mov
add
out
xor
scas
mov
add
je
add
aad
add
loop
addb
push
into
add
fwait
add
push
shlb
add
add
lcall
inc
adc
rcrb
add
add
add
mov
clc
lea
push
push
push
call
loope
test
add
xchg
jl
add
adcb
add
add
gs
push
icebp
sub
pop
jmp
push
rol
pop
mov
push
dec
rol
pop
mov
push
rol
pop
sub
jne
push
push
push
lea
push
push
push
call
loopne
pop
pop
push
add
add
fld
jb
scas
lahf
add
lret
test
rcll
add
add
add
add
add
jo
sti
test
mov
jl
in
add
int3
divl
xchg
jne
mov
add
popa
add
insb
pop
mov
add
leave
sub
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
xchg
rclb
sti
add
add
add
add
cmc
xchg
jnp
jno
add
push
mov
jns
add
add
jb
pop
mov
push
add
out
popf
lds
add
roll
jne
add
add
cmpsb
roll
fwait
loope
hlt
add
add
in
loopne
movl
jmp
push
ror
add
ror
inc
pop
mov
push
push
push
push
lea
push
push
push
call
add
lock
nop
add
add
insb
add
out
add
add
add
mov
mov
stos
imul
add
int
mov
arpl
mov
add
sub
pop
mov
push
sub
lea
shr
sub
pop
cmp
jne
push
shr
ror
ror
pop
mov
push
sub
dec
shr
pop
movl
jmp
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
out
add
add
add
add
imul
add
jmp
pushf
mov
cmpsl
lret
ljmp
xchg
std
repnz
pop
stos
scas
aam
stos
add
addb
add
enter
imul
jp
push
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
leave
mov
add
add
std
roll
push
jle
add
add
movsl
mov
enter
mov
lods
test
cmpl
jne
mov
push
push
lea
push
lea
push
push
lea
push
call
popf
mov
add
add
pushf
add
add
fdivrp
mov
add
add
mov
cltd
js
xchg
sub
add
clc
fnstcw
push
jne
add
add
mov
add
test
jo
add
sub
pop
movl
push
sub
pop
jmp
push
shl
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
xchg
add
sahf
je
add
ret
add
loop
add
rcl
add
fcmovne
add
cmc
push
loop
stos
jl
jge
pop
add
in
sbbb
xchg
outsl
addl
add
sti
leave
add
mov
push
add
jnp
push
add
lods
repnz
mov
lcall
push
rol
add
add
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
sahf
sti
xchg
testl
popf
add
int3
fbld
add
jo
jge
shll
movsl
jb
incb
jmp
je
add
fldl
iret
add
push
pusha
add
add
cmc
add
xchg
jl
cld
add
add
les
xchg
lds
sub
pop
mov
push
push
push
call
lcall
nop
push
add
add
add
xchg
test
aad
stos
mov
add
add
add
mov
fwait
insb
add
add
sub
pop
mov
push
push
lea
push
and
add
ror
rol
sub
xor
sub
dec
pop
ror
inc
pop
push
push
call
loope
lock
addb
ljmp
add
lods
jnp
add
mov
xchg
nop
add
test
jb
fadds
add
clc
cld
ljmp
fnstenv
jo
mov
add
js
sti
enter
mov
stos
arpl
add
clc
pop
push
push
push
push
call
add
add
mov
scas
lods
into
mov
into
mov
add
add
cli
stc
add
jle
mov
pop
cmpsl
lock
test
xchg
fs
add
imul
mov
add
push
fists
into
pusha
add
je
lret
push
roll
cwtl
add
sahf
testb
add
xchg
ret
sub
pop
call
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
test
add
push
mov
add
add
filds
push
mov
hlt
mov
xchg
mov
leave
add
mov
add
pop
add
aad
int3
add
add
add
push
rol
add
js
add
movsl
add
sub
pop
cmpl
je
push
push
not
sub
xor
not
push
or
not
add
sub
sub
sub
sub
dec
dec
pop
shr
xor
pop
push
shr
pop
push
push
push
lea
push
call
aad
add
hlt
cmpsb
lock
clc
jnp
shrb
cwtl
shr
add
ljmp
push
scas
add
add
js
mov
ficoms
sub
pop
call
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
int
add
xchg
add
insb
pop
test
add
ror
push
push
lahf
add
pop
cltd
add
cmp
xchg
add
mov
je
imul
loopne
aad
add
cmpsb
popa
movb
add
add
repnz
rolb
jne
pop
add
in
fcomps
js
int3
fldz
ret
or
add
push
push
sub
lea
inc
lea
push
xor
add
dec
sub
sub
pop
add
add
inc
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
movsl
cltd
push
pop
add
scas
mov
add
int
add
je
scas
add
add
add
out
add
ficoms
pop
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
inc
push
or
not
add
dec
shl
sub
lea
pop
xor
shr
shr
pop
push
shr
ror
pop
push
call
push
sub
xor
pop
cmpl
je
push
push
dec
rol
shr
push
or
inc
add
rol
ror
rol
dec
sub
shr
dec
xor
pop
xor
pop
push
xor
ror
not
pop
push
push
inc
pop
call
cmpl
je
push
push
shl
sub
push
xor
add
sub
sub
xor
ror
sub
not
pop
xor
dec
rol
pop
push
lea
not
pop
push
push
rol
pop
call
cmpl
je
push
push
lea
push
xor
add
ror
sub
not
sub
shr
xor
pop
shl
inc
pop
push
lea
push
push
push
push
lea
push
lea
push
call
jo
repnz
adcb
push
push
mov
mov
fldcw
in
add
stc
add
mov
pop
add
mov
add
jo
test
push
cmpsl
rolb
add
add
push
sub
pop
push
push
not
inc
lea
shl
pop
call
cmpl
je
push
push
push
or
inc
add
not
sub
ror
sub
not
shr
pop
shl
pop
push
push
push
push
push
call
insb
repnz
add
add
mov
add
add
mov
add
xchg
int3
mov
add
mov
lods
mov
add
out
add
mov
add
vpmulhuw
outsl
popl
add
lret
jno
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
ror
push
sub
add
rol
add
sub
add
lea
pop
not
add
add
pop
push
lea
push
call
pop
mov
add
shl
ret
lds
add
movsl
lods
xchg
fsts
mov
xchg
cli
ljmp
add
xchg
push
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
not
push
xor
add
shl
sub
lea
xor
sub
shr
shl
xor
pop
add
dec
pop
push
not
inc
pop
push
push
sub
rol
pop
call
cmpl
je
push
push
rol
dec
add
push
push
pop
add
ror
sub
sub
inc
sub
inc
lea
pop
sub
rol
pop
push
lea
lea
rol
shl
pop
push
push
push
call
add
pop
arpl
add
faddl
add
add
add
imul
push
add
imul
add
js
push
popa
fdiv
add
jo
add
testl
int3
add
add
add
std
push
add
mov
pushf
add
push
add
clc
pop
call
push
add
sub
pop
cmpl
je
push
push
lea
add
push
and
add
rol
rol
sub
inc
xor
pop
rol
pop
push
rol
rol
ror
pop
push
call
push
push
call
add
add
add
add
add
stos
jne
ja
cmpl
jp
add
add
add
add
push
pushf
mov
add
add
lcall
push
add
leave
movsl
add
push
addr16
pop
cmpl
je
push
push
shl
dec
ror
push
and
add
not
lea
add
ror
sub
not
sub
pop
not
lea
pop
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
lret
add
add
mov
add
xchg
lock
js
push
lods
add
add
add
mov
test
add
mov
add
add
add
add
add
mov
xchg
push
fwait
iret
add
cld
pop
outsl
push
mov
xchg
popl
sub
pop
push
push
sub
add
shr
lea
pop
call
cmpl
jne
push
sub
pop
mov
movl
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
jae
filds
add
add
jmp
add
fmul
testl
add
movb
push
add
add
popf
iret
add
jae
mov
mov
add
add
pop
movsl
add
test
add
lcall
mov
add
push
lea
push
push
push
push
push
push
lea
push
call
add
rclb
outsl
loop
loop
imul
add
arpl
add
add
jmp
movsl
add
add
mov
mov
fiadds
jmp
add
add
add
add
add
pop
repnz
loop
jo
xchg
in
loope
in
loopne
xor
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
loopne
add
xchg
jecxz
jl
add
xchg
loop
add
shr
add
add
add
pop
test
in
add
add
cmpsb
cwtl
out
mov
add
lcall
push
push
push
push
push
call
add
add
jo
add
add
imul
add
add
scas
aad
out
int3
jno
hlt
xchg
push
add
fildl
add
shlb
rcrl
pop
xchg
jb
mov
add
cmc
stc
flds
jmp
add
mov
pop
pop
push
lea
xor
dec
rol
pop
pop
push
not
add
xor
shr
pop
leave
ret
push
push
lea
push
push
lea
push
push
lea
push
push
call
incb
add
push
cld
iret
mov
outsl
insb
add
int3
push
mov
mov
mov
in
addl
add
mov
or
add
pop
push
push
sub
pop
mov
push
dec
not
pop
add
push
push
lea
push
push
push
lea
push
push
push
call
in
add
fldcw
add
subl
add
test
mov
add
add
push
cli
xchg
lods
add
lret
lret
roll
add
add
cmc
repnz
add
add
lcall
jge
add
test
std
test
dec
rol
push
xor
add
shl
sub
not
sub
sub
add
add
pop
rol
pop
push
shl
pop
pushl
push
push
push
lea
push
push
push
push
push
call
out
xchg
shl
jnp
mov
mov
add
lret
add
mov
xchg
add
sarl
in
add
jne
add
in
jmp
add
jbe
mov
hlt
sub
pop
call
push
push
push
push
push
push
push
call
nop
ret
into
fs
add
movsl
ret
push
pop
add
sahf
pop
stc
add
leave
add
imul
push
cli
call
add
idiv
enter
add
loop
lea
leave
add
mov
add
lcall
call
jp
push
push
push
push
call
lods
jbe
cltd
hlt
cli
pop
fbld
add
je
cmc
int3
add
push
pop
lret
test
add
mov
test
mull
push
popf
push
xchg
jbe
fldl
je
je
add
push
xchg
cli
out
in
add
add
lds
add
in
in
lcall
rclb
mov
sub
pop
jmp
push
xor
pop
cmpl
je
cmpl
jne
push
sub
pop
leave
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
testl
add
sbbl
add
jb
add
stos
add
ja
add
add
cli
mov
add
in
fcomps
les
pop
push
push
lea
push
push
push
push
call
aad
test
add
add
xchg
add
lds
gs
add
movsb
jl
add
add
add
call
jnp
in
call
pop
push
xor
ror
sub
pop
pop
pop
push
sub
xor
add
pop
leave
add
push
lea
push
lea
push
lea
push
push
call
repnz
adc
imul
scas
in
pusha
add
add
add
add
lods
mov
mov
add
gs
movsb
pop
add
xchg
jne
add
movsb
add
nop
pop
add
jecxz
add
in
in
pop
ret
jmp
push
push
call
les
add
add
add
jae
lahf
add
jmp
clc
ljmp
xchg
add
mov
add
cld
add
cmpl
add
add
outsl
mov
lcall
jge
add
test
add
push
push
dec
sub
rol
push
xor
add
inc
rol
rol
sub
not
sub
xor
pop
inc
xor
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
testb
lods
out
cmpsb
lahf
idivb
add
out
in
lret
sti
add
add
mov
add
push
add
add
nop
insb
jle
add
push
addr16
fcoml
sbb
icebp
cltd
iret
imul
add
add
add
add
push
rcr
out
pop
add
xchg
xchg
sub
pop
pushl
push
lea
push
lea
push
push
push
lea
push
push
call
movb
filds
jbe
pop
add
add
adcl
in
lock
add
lds
lahf
fs
jae
add
fidivs
in
in
call
push
push
push
push
call
jl
push
iret
add
add
add
fiaddl
out
add
ret
push
mov
jl
add
jnp
repnz
add
mov
lahf
xlat
lds
lcall
add
push
push
call
mov
add
mov
mov
cwtl
outsl
divb
jecxz
roll
add
enter
add
push
pusha
add
mov
lahf
add
cli
ja
outsl
add
ljmp
add
in
jnp
addr16
mov
add
add
add
cmpsl
into
sub
pop
call
push
push
push
push
lea
push
lea
push
push
call
icebp
call
jmp
add
icebp
mov
hlt
add
mov
xchg
add
add
xchg
jo
add
je
jae
mov
add
xchg
cmpsb
add
cld
add
add
aad
in
in
jmp
push
dec
xor
xor
pop
cmpl
jne
mov
push
sub
add
pop
mov
push
inc
sub
pop
push
push
push
sub
push
or
not
add
dec
rol
sub
xor
add
ror
rol
pop
add
ror
sub
pop
push
shr
lea
add
add
pop
pushl
push
push
push
push
push
lea
push
call
jo
add
add
lods
add
test
les
cmpsb
add
add
mov
pusha
add
out
pop
pop
add
pop
outsl
popl
push
add
cmpsl
loopne
xlat
mov
add
in
ljmp
call
add
call
push
push
not
lea
lea
inc
push
xor
add
inc
add
sub
xor
sub
pop
shr
pop
push
pop
pushl
call
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
fcom
mov
add
in
and
cmpsl
mov
fldl
xlat
add
rorb
pushf
push
mov
mov
mov
jecxz
push
mov
add
add
jmp
ret
xchg
scas
add
rcrl
jge
in
fcomps
shrb
inc
cs
push
ror
inc
lea
push
or
not
add
rol
xor
sub
add
not
pop
inc
add
ror
pop
push
shl
sub
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
call
call
add
xchg
out
mov
jb
fdivl
add
repnz
cld
js
pushf
lods
add
fbld
add
push
icebp
enter
add
gs
fldt
fsubl
sbb
xchg
add
add
sub
pop
call
push
push
ror
shr
push
and
add
not
ror
sub
dec
add
xor
sub
pop
dec
xor
pop
push
rol
sub
not
pop
pushl
push
push
push
push
push
call
scas
push
mov
jbe
into
mov
test
mov
cli
add
fsts
cld
popa
add
movsb
add
mov
add
mov
add
popf
sub
add
icebp
pop
call
push
push
push
and
add
rol
lea
shl
shl
sub
rol
shl
xor
pop
not
pop
push
dec
pop
pushl
push
push
push
push
call
shlb
mov
add
mov
add
ja
add
mov
cmpsl
push
loope
jb
in
cli
jbe
jno
mov
add
pop
jne
test
add
lret
add
lcall
sub
add
push
push
push
push
lea
push
push
call
add
mov
add
add
jnp
rolb
add
pop
mov
data16
add
stos
xchg
add
add
roll
mov
add
jmp
add
mov
jle
shll
xchg
imul
lcall
shrb
xchg
sub
push
push
pop
add
xor
sub
add
lea
dec
pop
add
lea
pop
push
push
push
push
call
add
cwtl
add
aam
add
add
add
mov
pop
lods
ror
mov
add
js
add
cmpsl
xchg
fucomp
movsl
add
ljmp
test
add
add
ja
lret
jge
into
xchg
add
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
call
fdivrs
add
add
mov
add
arpl
shlb
add
mov
add
stos
add
push
add
movsl
mov
add
call
cwtl
add
mov
add
call
fidivl
sub
pop
call
push
shr
pop
call
push
push
shr
sub
inc
push
and
add
add
inc
sub
sub
shr
add
pop
shl
pop
push
push
push
push
lea
push
push
push
call
add
jmp
loopne
jecxz
loopne
jno
xchg
rol
mov
lret
pushf
fwait
add
mov
ja
stc
add
add
add
into
add
add
xchg
add
add
jo
mov
pop
mov
add
jge
mov
lcall
jne
call
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
cmc
mov
add
ret
les
test
add
cwtl
xchg
add
add
xchg
jnp
add
insb
add
add
fcomps
shrb
cmpb
xor
push
xor
add
ror
inc
sub
xor
xor
pop
rol
pop
push
lea
push
lea
push
push
push
push
call
add
sahf
insb
add
add
mov
add
mov
test
mov
add
add
hlt
add
test
mov
ljmp
lcall
lcall
jne
push
not
sub
rol
ror
pop
call
call
push
push
xor
push
sub
add
not
dec
ror
sub
sub
rol
inc
pop
shr
add
sub
add
pop
push
push
push
call
mov
mov
add
stos
jmp
mov
add
addl
add
icebp
mov
test
fisttpll
fldt
popf
les
cmpsb
add
add
add
add
add
add
add
hlt
in
ljmp
hlt
pop
pushl
push
push
push
call
xchg
fldt
add
les
add
add
sahf
cli
add
insb
add
shrl
add
in
add
outsl
movsb
push
scas
add
mov
les
insb
xchg
add
stos
into
popf
add
xchg
add
add
lcall
cld
and
add
sbb
call
call
lcall
mov
add
nop
add
roll
scas
ja
mov
add
xchg
add
fiaddl
add
mov
add
add
add
int3
jecxz
into
push
xchg
iret
mov
test
push
lea
out
int
jb
sub
pop
call
push
push
push
and
add
dec
inc
sub
dec
sub
pop
shr
pop
push
xor
rol
pop
pushl
call
push
pop
lea
push
shr
pop
push
push
rol
lea
add
pop
call
push
push
not
push
sub
add
sub
sub
add
pop
add
pop
push
push
push
lea
push
lea
push
call
mov
mov
mov
mov
add
addb
add
jne
add
add
loope
add
out
data16
add
je
movl
in
lcall
jne
call
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
fsubs
mov
mov
nop
jnp
cld
add
add
push
xchg
mov
xchg
fnstcw
ffree
add
xchg
add
cli
mov
icebp
mov
fiaddl
pusha
add
out
lds
lcall
shrb
imul
xor
add
inc
sub
sub
ror
pop
sub
pop
push
sub
shl
pop
pushl
push
inc
inc
pop
call
push
push
push
push
call
outsl
fadd
rcl
pop
popl
insb
add
lds
jno
jnp
in
fs
push
add
lret
jge
add
add
xchg
add
imul
cmpsl
out
les
add
mov
outsl
mov
lret
add
add
add
lcall
shrb
loop
stos
push
sub
xor
sub
push
xor
add
not
shl
ror
inc
sub
rol
pop
shl
add
rol
pop
push
push
push
push
call
add
out
add
xchg
mov
cmpsb
lahf
int3
add
add
add
negl
add
aad
add
clc
mov
add
add
stos
add
lock
pushl
call
push
push
push
push
push
push
push
lea
push
call
add
xchg
fildll
pop
add
add
cltd
mov
mov
jae
add
in
add
jmp
aam
add
je
add
mov
in
loopne
call
push
push
push
lea
push
push
lea
push
call
add
repnz
loopne
add
add
pop
mov
jle
divb
arpl
popl
add
popf
in
popf
clc
pop
xchg
pop
add
xchg
xlat
add
cmpsb
test
add
cmc
add
mov
sub
pop
lea
push
push
sub
push
or
not
add
shl
dec
sub
dec
not
pop
dec
pop
push
dec
xor
pop
pushl
call
push
add
pop
push
push
lea
inc
shr
add
pop
call
push
push
xor
not
push
push
pop
add
sub
rol
dec
dec
dec
pop
dec
shl
pop
push
shr
pop
pushl
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
jnp
xorl
xchg
arpl
sahf
out
add
std
scas
xchg
out
mov
add
add
xchg
xchg
fldl
add
loope
loopne
jle
mov
xchg
add
jp
add
add
push
jne
test
push
add
in
fdivr
lcall
jl
add
push
push
push
push
call
test
out
xchg
add
lods
jl
out
roll
add
nop
add
jl
div
cld
mov
std
add
aam
add
ficompl
in
lock
call
push
lea
sub
ror
pop
mov
push
push
sub
not
push
sub
add
shl
lea
sub
ror
xor
pop
pop
push
add
pop
pushl
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
fstpl
push
insb
add
stos
enter
add
add
add
add
add
loop
add
push
add
lcall
add
lea
pop
pushl
push
push
lea
push
lea
push
call
scas
add
loop
add
gs
cli
icebp
add
jmp
mov
sbb
ljmp
jmp
add
add
adcl
lock
lcall
shrb
add
push
or
not
add
inc
sub
inc
pop
shl
rol
pop
push
shr
sub
inc
shl
pop
pushl
push
pop
call
push
push
add
push
or
inc
add
xor
inc
dec
sub
sub
xor
pop
dec
pop
push
push
sub
push
or
not
add
inc
sub
shl
pop
add
not
lea
add
pop
push
push
push
call
addr16
rorl
mov
add
fiaddl
clc
add
mov
popa
push
add
xchg
mov
iret
add
je
xlat
mov
add
add
enter
stc
inc
jnp
mov
add
add
testb
add
cld
sub
pop
call
push
push
add
xor
xor
rol
push
xor
add
sub
xor
sub
pop
not
add
pop
push
sub
add
pop
pushl
call
push
rol
pop
mov
push
not
xor
pop
lea
lea
push
lea
push
call
je
cwtl
add
out
cmc
add
add
enter
iret
test
add
lods
add
add
fs
mov
add
mov
add
add
add
in
add
add
add
mov
add
cwtl
add
add
add
fiaddl
add
add
stos
pop
jae
sarb
clc
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
imul
rolb
xchg
test
cmc
shll
outsl
add
pop
jno
add
loop
add
pop
add
jns
movsl
lcall
add
add
test
ljmp
in
fcomps
push
push
not
shl
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
xchg
add
loopne
lods
add
mov
clc
lahf
lea
sarb
cmc
add
push
pop
fldcw
add
data16
add
lock
lcall
add
mov
push
lea
push
call
pop
mov
xchg
add
mov
mov
mov
shlb
add
mov
jge
push
mov
jge
xchg
lock
xor
stc
add
jmp
test
add
add
jp
mov
add
add
cltd
incb
sub
add
cmpsl
idivb
pop
add
xchg
push
sub
pop
push
push
push
pop
pushl
push
shl
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
loop
add
clc
add
lcall
add
add
cmpsb
ror
add
add
aam
lock
fs
push
sahf
into
pushf
add
mov
stos
sub
pop
call
push
push
not
push
and
add
xor
inc
sub
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
call
jp
mov
testb
push
loope
add
je
pop
add
add
fwait
lds
xchg
pop
lcall
add
pop
cltd
add
add
add
add
sub
pop
pushl
push
push
push
push
push
push
call
addb
add
add
add
ljmp
movsl
add
add
rolb
add
pop
jmp
dec
add
pop
xchg
popl
push
rcrb
shrl
stos
pushf
cli
add
jl
iret
in
arpl
lcall
iret
sbb
add
push
adc
pop
call
push
push
push
push
push
push
lea
push
push
lea
push
call
cli
imul
stos
cmpsb
call
add
add
add
jmp
fwait
cmc
insb
add
mov
add
add
fs
push
jmp
jae
add
jp
addb
jge
jno
cli
mov
bound
add
popf
in
fistpl
stos
push
in
add
mov
add
inc
clc
pop
push
sub
pop
dec
jne
jmp
push
push
lea
push
push
lea
push
push
push
call
add
add
add
sahf
add
imul
pop
xchg
js
outsl
fwait
int
mov
fnsave
add
add
mov
mov
cltd
mov
std
stos
add
jp
xchg
cmpsb
add
add
jle
movsl
add
out
mov
roll
add
test
add
push
push
shl
rol
not
not
push
and
add
not
sub
shr
add
pop
dec
rol
dec
add
pop
push
lea
push
lea
push
push
push
call
call
add
loope
nop
leave
add
add
push
mov
add
add
call
clc
pop
mov
add
pop
add
iret
mov
lahf
push
push
gs
add
add
jns
add
pop
add
add
in
in
lcall
jne
push
push
push
call
add
add
xchg
add
rol
add
pusha
add
lock
in
add
mov
push
scas
pop
rcl
mov
mov
add
mov
leave
scas
add
bound
add
ret
xchg
add
pop
pop
add
mov
add
push
ror
sub
pop
push
push
rol
add
pop
call
push
push
push
call
jp
popa
leave
push
orl
add
mov
int3
test
movsl
add
mov
popa
add
addr16
sub
pop
mov
lea
push
push
ror
lea
push
push
pop
add
dec
sub
lea
pop
xor
pop
push
push
push
push
push
lea
push
call
fsubs
add
add
xlat
pop
leave
lods
lods
test
jbe
sarl
in
jns
add
imull
mov
pop
add
jmp
pop
add
jnp
aad
add
jecxz
add
leave
add
out
add
xchg
cmpsl
mov
add
xchg
mov
call
push
add
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
pusha
add
add
add
in
stc
add
add
add
scas
mov
mov
push
xchg
jo
int3
add
add
rolb
stos
add
jbe
add
sub
pop
call
push
push
xor
add
push
push
pop
add
not
sub
add
rol
sub
pop
shr
dec
rol
pop
push
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
loop
push
pop
into
push
add
jae
add
add
int3
ret
add
pop
pop
movl
mov
fdivl
fildl
pop
add
pop
jb
add
push
add
sahf
mov
in
in
lcall
fwait
push
add
push
push
push
lea
push
push
push
push
call
add
sahf
add
mov
mov
add
stos
add
ljmp
mov
add
add
fwait
add
push
add
add
je
stos
mov
out
add
mulb
xchg
add
add
sahf
add
mov
add
int
std
fdivrp
add
arpl
sub
pop
call
push
push
call
add
add
addl
xchg
add
clc
testl
js
xchg
lret
mulb
loope
add
add
leave
add
mov
jecxz
aad
in
clc
lcall
inc
cld
lea
push
push
xor
push
or
inc
add
sub
sub
xor
dec
pop
dec
inc
shl
pop
push
ror
inc
pop
pushl
call
push
push
push
lea
push
push
call
lods
xchg
fiadds
jge
pop
mov
add
arpl
add
mov
add
add
add
int
jge
sub
pop
lea
push
push
not
lea
pop
push
push
push
add
shl
pop
pushl
push
push
dec
sub
ror
push
sub
add
dec
sub
sub
shr
dec
pop
sub
not
pop
push
not
pop
push
call
push
push
add
push
and
add
sub
sub
sub
sub
not
pop
xor
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
add
movsl
shl
xor
add
movsb
repnz
add
pusha
sahf
lret
xchg
jmp
add
rolb
add
add
mov
ret
faddl
add
mov
movsb
in
add
add
add
add
xchg
add
sub
pop
pushl
push
pop
call
push
push
shl
inc
pop
call
push
push
inc
xor
rol
push
sub
add
sub
not
shl
sub
shl
rol
pop
rol
lea
rol
not
pop
push
ror
pop
pushl
push
lea
pop
call
push
push
push
push
push
push
call
push
js
lds
hlt
add
add
add
mov
gs
mov
mov
mov
add
fisubrl
loope
mov
ja
pop
add
add
sub
pop
call
push
sub
pop
jmp
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
fcmovb
add
test
add
add
add
cmpl
movsb
add
add
roll
add
jl
add
cmpsl
popf
lock
mov
pop
jge
add
pop
add
nop
mov
add
jb
in
fdivr
lcall
pushl
mov
push
push
call
add
mov
int
scas
incb
add
add
add
cltd
pop
stos
movsb
scas
add
add
in
clc
pop
jmp
push
push
xor
dec
xor
dec
push
xor
add
add
inc
rol
not
sub
dec
sub
sub
lea
pop
lea
inc
lea
pop
push
sub
pop
pushl
push
lea
push
call
mov
jp
jo
popa
jl
add
add
test
add
mov
add
test
div
add
scas
out
add
roll
jmp
shr
mov
stc
in
cmpsl
xchg
pop
xchg
arpl
mov
lods
lods
out
rclb
add
sti
mov
mov
add
test
clc
pop
call
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
arpl
addr16
stos
in
mov
mov
or
add
rcr
test
add
in
push
add
js
insb
add
add
add
add
popf
push
int
in
fdivr
lcall
shrb
popa
enter
rcrl
out
add
add
add
enter
je
or
int3
lea
add
pop
lea
sub
lea
pop
push
lea
push
push
push
lea
push
call
push
jae
pusha
xlat
mov
mov
jge
bound
mov
jmp
clc
int3
mov
jl
imul
addl
mov
in
in
pop
pushl
push
sub
sub
rol
xor
pop
call
push
shl
lea
pop
push
call
push
push
push
push
lea
push
lea
push
call
add
add
push
movsl
cltd
pop
fdiv
add
mov
loope
add
faddl
mov
add
movsl
jp
add
in
call
leave
push
push
push
push
lea
push
lea
push
call
push
bound
add
add
insb
mov
add
push
subl
mov
add
jns
add
div
popf
xchg
bound
add
jp
add
mov
jp
insb
add
sahf
addb
add
xchg
lcall
les
push
push
push
push
push
push
push
push
lea
push
call
mov
jns
add
hlt
lods
lea
data16
mov
mov
pop
add
ret
add
pop
insb
mov
icebp
lock
shlb
pop
movsb
add
add
popf
mov
sti
add
call
lcall
pop
push
push
call
imul
add
xchg
scas
call
mov
jb
add
add
ljmp
add
cmpsl
add
add
push
add
in
lret
add
xchg
add
sub
pop
pop
push
shr
ror
add
xor
pop
pop
push
shr
not
sub
pop
leave
push
add
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
mov
lods
add
add
pop
xlat
out
pop
add
test
mov
aam
rolb
add
cmpsb
jecxz
stos
clc
je
cmpsl
into
stos
add
out
add
xchg
mov
scas
add
xlat
xchg
push
xchg
mov
add
jle
add
jecxz
push
aad
sub
pop
ret
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
add
jl
add
mov
mov
lods
jbe
add
popf
add
add
xlat
icebp
add
loopne
add
mov
add
add
add
add
pop
add
mov
lret
in
sub
pop
leave
push
ror
pop
ret
push
shl
shl
shl
pop
push
push
push
push
call
add
add
add
loope
mov
add
mov
add
add
lahf
add
icebp
loopne
cmpsb
add
xchg
arpl
add
add
popf
cmc
sub
pop
mov
push
push
push
push
lea
push
call
out
push
call
hlt
add
add
pop
cwtl
jbe
add
mov
add
movsb
add
mov
mov
add
into
push
fisubrs
ja
in
add
add
ret
ja
add
stos
cli
add
leave
add
add
addl
cmc
cld
out
xchg
add
data16
add
jge
add
test
lea
push
call
add
pop
leave
out
xlat
mov
rolb
add
add
add
test
ja
lods
lea
add
add
roll
add
sub
pop
mov
jmp
push
push
lea
push
lea
push
push
call
add
roll
add
add
add
add
add
popf
push
add
mov
add
add
mov
xchg
pushf
idivb
mov
test
fmull
xlat
add
aam
pop
shl
add
add
add
add
add
sub
pop
mov
and
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
stc
add
mov
add
lret
xchg
popf
roll
pushf
data16
add
test
iret
je
mov
add
add
push
pop
cwtl
xchg
add
jmp
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
xlat
add
lods
add
push
data16
pop
add
mov
push
aad
jb
mov
xchg
loopne
aam
shlb
fcmove
add
add
js
pop
push
repnz
sub
pop
xor
add
push
ror
lea
pop
xor
push
sub
pop
dec
sub
push
push
lea
push
lea
push
push
lea
push
call
repnz
add
add
jne
push
add
xchg
fiaddl
add
out
pop
call
xchg
add
out
xchg
sub
pop
jmp
push
inc
add
shl
pop
sub
pushl
push
lea
push
push
push
push
lea
push
call
je
lods
add
add
adc
xchg
add
jle
lock
imul
clc
jno
mov
int3
xchg
mov
pop
add
popa
add
roll
add
jmp
lds
fs
add
add
lcall
push
lea
push
lea
push
push
push
call
add
iret
enter
stos
stc
add
loop
add
add
fldl
popa
mov
mov
fsqrt
nop
jb
jp
lahf
imul
add
add
mov
shll
nop
out
push
mov
add
add
add
add
lcall
jmp
push
inc
sub
sub
pop
cmp
jne
push
sub
pop
mov
lea
push
push
push
push
push
lea
push
call
add
mov
ljmp
mov
add
movl
add
roll
pop
lds
push
add
add
add
mov
mov
mov
push
add
addr16
in
push
rorl
loopne
in
call
sub
mov
push
push
push
push
push
push
push
push
push
call
pop
add
mov
movsl
filds
add
scas
add
jno
add
mov
add
xchg
mov
add
movsb
push
mov
add
add
notb
pushf
sub
pop
shr
add
push
shl
pop
sub
push
shr
inc
sub
pop
pushl
push
rol
pop
pop
shr
push
inc
sub
pop
and
push
push
push
push
lea
push
push
push
lea
push
push
call
cmc
push
add
nop
jo
cmpsb
push
mov
push
mov
add
xchg
jecxz
add
add
dec
out
push
add
test
add
push
pop
mov
clc
mov
add
mul
add
add
add
add
sub
pop
sub
cmp
jne
push
add
shr
sub
pop
leave
push
push
push
push
call
fwait
out
add
add
cmpsl
jb
cwtl
add
add
xchg
mov
repnz
pop
add
add
xchg
add
xchg
add
push
pop
add
sahf
loope
pop
addb
add
lcall
jne
test
mov
imul
ret
int
sub
pop
ret
push
add
xor
sub
pop
push
mov
push
shr
sub
rol
pop
add
push
push
add
pop
push
push
push
lea
push
push
push
call
add
add
leave
jle
loop
pushfw
cwtl
add
out
add
xorl
fildl
nop
rol
add
xchg
add
js
add
xchg
add
out
shrl
stos
out
into
mov
jle
lods
add
jge
lds
rcrb
in
in
lcall
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
pusha
mov
mov
jo
jnp
add
leave
fs
test
test
shl
imul
xlat
mov
cwtl
jmp
mov
imul
xchg
add
sub
pop
push
push
push
lea
push
push
lea
push
call
mov
sti
jbe
clc
push
imul
mov
ret
add
test
mov
filds
pop
nop
jae
movb
jp
addl
rclb
add
push
add
add
add
add
pop
or
fadds
ficompl
ljmp
sbb
mov
out
xchg
push
call
arpl
add
add
movsl
loope
movsl
pushf
add
push
add
stc
stos
mov
pop
cmpsl
add
mov
test
in
scas
imul
test
mov
cmpsb
enter
add
sarb
in
in
pop
mov
push
dec
shr
add
pop
shr
add
push
push
push
lea
push
lea
push
call
add
pushf
add
mov
add
add
add
pop
add
add
mov
testl
stos
add
in
in
lcall
fwait
addb
add
add
mov
push
shl
shr
pop
add
push
shl
pop
xor
mov
push
push
push
push
call
jmp
jle
add
addr16
add
xchg
mov
test
rolb
pop
outsl
cltd
in
jle
rcl
shlb
mov
fs
clc
add
xchg
xchg
sub
pop
and
push
push
push
push
push
lea
push
call
jne
add
std
testl
lret
add
add
loopne
add
add
jge
push
add
addb
add
rcr
jp
add
add
in
call
rol
push
push
lea
push
push
call
jbe
add
add
pop
mov
test
ficoms
xchg
mov
jno
add
lahf
add
sbbl
jle
popl
add
pop
xchg
pushf
repnz
add
add
fwait
js
add
aam
add
add
fwait
xchg
sub
pop
rol
push
add
xor
not
lea
pop
xor
push
sub
shl
pop
inc
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
jge
add
cltd
adcb
mov
push
je
mov
fcmovb
add
fldl
out
push
push
push
add
cli
in
add
xchg
pop
jle
data16
add
add
pop
add
add
mov
cmpb
jne
push
lea
push
push
push
push
push
push
push
push
call
cmpsb
mov
push
movsl
lahf
ficoml
mov
aam
add
add
imul
add
add
jmp
add
add
jns
popa
jae
in
mov
roll
int
test
sarl
fdivr
lcall
inc
pop
ss
cmp
je
push
push
push
push
push
push
call
add
sarb
test
add
add
xlat
flds
imul
outsl
add
addb
enter
repnz
jmp
ret
add
sbb
add
add
lock
add
movl
data16
xchg
add
add
sub
pop
add
push
sub
pop
cmpl
jne
push
dec
not
shr
pop
xor
push
push
push
push
push
lea
push
push
lea
push
push
push
call
xorl
mov
ja
add
push
add
lahf
mov
mov
into
add
lahf
xchg
mov
add
push
add
add
mov
testb
fadds
add
add
mov
pop
push
sub
shr
pop
pop
push
dec
pop
pop
push
lea
push
call
add
lods
push
pusha
add
xchg
add
pushf
lods
bnd
fimuls
pop
push
push
imul
add
out
jl
mov
out
filds
xchg
lods
scas
lcall
add
ljmp
scas
test
cli
nop
mov
cltd
add
add
fs
add
in
clc
pop
pop
pop
push
ror
add
add
pop
leave
push
lea
xor
pop
ret
push
ror
xor
ror
pop
mov
push
xor
sub
ror
pop
add
push
lea
push
push
push
call
push
sbbl
lcall
imulb
hlt
scas
add
nop
rclb
out
pop
cwtl
shll
cmc
mov
jo
add
jge
cwtl
push
push
xchg
add
outsl
add
add
pop
popl
shl
cmpsb
jge
add
in
lock
push
push
push
push
lea
push
push
push
call
add
fildl
clc
scas
jo
scas
test
xchg
shl
lods
jno
add
fwait
xchg
pop
std
push
add
add
flds
mov
add
add
into
aam
mov
add
ljmp
lods
insb
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
mov
jge
test
mov
add
jle
add
add
add
pop
add
enter
sarb
mov
add
lret
lods
add
add
add
jns
test
xchg
add
mov
add
add
mov
add
sub
pop
mov
testw
push
dec
pop
pop
push
push
push
call
pop
test
add
lds
push
in
mov
js
mov
mov
add
add
aad
add
add
push
push
outsl
stos
add
gs
enter
add
add
add
aad
jae
mov
push
mov
in
hlt
lcall
push
xor
pop
mov
push
push
sub
dec
pop
call
push
add
pop
xor
push
dec
pop
pop
push
shl
pop
pop
push
push
push
push
push
push
push
call
add
add
mov
addb
add
cltd
movsb
push
aad
add
add
mov
mov
fs
add
mov
add
int
push
add
add
lods
mov
in
lcall
pop
push
ror
add
shl
pop
pop
push
add
ror
pop
leave
push
lea
push
push
push
lea
push
push
push
call
mov
add
sti
push
fcmovnb
mov
pop
mov
mov
add
add
or
push
push
call
in
add
add
in
jmp
add
jne
add
addl
mov
mov
add
rcl
cltd
add
add
lds
in
add
lahf
add
in
add
add
cwtl
jno
add
in
sub
pop
push
mov
push
sub
inc
inc
rol
pop
add
push
lea
shl
add
pop
push
push
push
lea
push
push
push
push
push
call
lea
jmp
add
out
add
add
jae
add
loopne
add
fdivp
add
add
out
add
loopne
add
scas
mov
add
bound
pop
add
addl
add
add
lcall
push
push
push
call
shll
add
mov
pop
bound
push
popf
sarb
add
push
add
xchg
out
push
add
jnp
fxch
mov
push
in
add
test
add
add
aam
add
pop
add
stos
rolb
arpl
ficoms
jecxz
add
repnz
add
add
add
sub
pop
push
mov
push
push
push
push
push
lea
push
push
call
shll
fsubp
add
add
insb
mov
add
add
add
xchg
mov
insb
jno
add
mov
cwtl
add
xchg
push
cltd
pusha
add
jbe
mov
add
les
add
mov
add
sub
pop
push
push
add
ror
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
call
lods
jge
add
add
add
mov
add
test
data16
stc
add
add
add
add
roll
xchg
lock
out
xlat
add
mov
add
add
mov
addb
add
add
mov
sub
pop
lea
sub
push
push
push
push
push
call
rolb
mov
add
stos
add
mov
jne
mov
sahf
out
addb
add
add
pop
pop
mov
add
in
out
add
insb
gs
add
gs
push
ljmp
add
add
pusha
add
add
pop
imul
mov
shr
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
pop
mov
add
add
icebp
mov
add
add
outsl
add
add
addr16
xchg
add
mov
mov
pushf
jae
add
clc
add
push
in
push
mov
lcall
mul
mov
mov
xlat
rcrl
lcall
ficoml
rol
pop
mov
push
push
lea
push
call
add
jp
add
mulb
pop
add
pusha
add
fnstcw
add
stos
add
aad
aam
xchg
add
push
or
add
add
rolb
rolb
mov
cwtl
testb
add
repnz
int3
add
fisubrl
xchg
in
hlt
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
test
cltd
mov
mov
add
mov
rolb
mov
out
add
add
mov
add
cmpsb
arpl
jp
add
push
pop
add
jbe
popf
addl
add
add
add
add
jae
popl
push
add
pop
mov
push
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
add
add
add
jno
mov
add
mov
int
add
add
lea
xchg
add
add
pop
xchg
pusha
addl
popf
add
xchg
push
add
into
push
add
pop
mov
repnz
testl
in
add
add
push
mov
xor
push
push
push
call
nop
repnz
jns
jmp
add
fildl
add
add
add
add
imul
aam
stos
mov
in
xchg
jbe
push
movb
add
mov
data16
cmc
ret
mov
jo
mov
mov
std
add
fldl
add
sahf
add
add
adc
mov
push
push
push
push
push
call
pop
push
mov
mov
add
out
add
add
call
add
in
lahf
clc
add
mov
cmpsl
add
sahf
test
mov
roll
rcr
add
shl
add
scas
add
out
add
mov
add
test
sub
pop
add
push
xor
shl
pop
xor
rol
push
push
push
push
push
push
push
push
push
push
call
mov
lods
add
loop
mov
add
test
test
addr16
add
jecxz
jle
rcll
stos
mov
out
add
add
add
int
mov
pop
test
push
movsl
add
imul
xchg
int
gs
js
cltd
scas
add
sub
pop
nop
push
push
call
add
mov
add
add
mov
lods
add
jge
add
test
push
int3
insb
add
sub
add
mov
pop
mov
mov
mov
mov
xchg
mov
hlt
iret
mov
add
in
out
add
enter
add
sub
pop
nop
push
push
push
push
push
call
je
out
add
add
add
push
mov
jns
add
mov
mov
popf
icebp
mov
enter
add
filds
add
cld
add
aam
add
std
rolb
add
add
add
mov
push
into
mov
shll
lods
add
in
in
lcall
add
movsb
ljmp
adc
call
add
mov
js
leave
aam
add
add
loopne
xchg
add
add
jecxz
add
mov
mov
add
add
push
add
cmpsl
frstpm(287
fs
add
add
jo
call
add
add
add
pop
add
sub
pop
nop
push
push
call
push
rolb
repnz
scas
add
xlat
xchg
add
xchg
add
cli
add
lods
jmp
jmp
jmp
add
in
clc
pop
nop
push
push
push
lea
push
lea
push
push
push
call
jmp
add
addl
sahf
std
add
add
pop
pop
rcrb
add
add
add
test
sbbl
addl
mov
xchg
out
popf
mov
push
add
add
bound
lcall
in
lcall
push
add
add
dec
inc
pop
nop
push
add
pop
nop
push
xor
rol
pop
cmpb
jne
push
push
push
push
lea
push
push
push
push
push
push
call
enter
hlt
out
lods
pop
add
add
fsub
xchg
in
add
cli
in
mov
add
cld
mov
int
pop
add
pushf
popf
add
add
add
add
add
scas
movsl
add
loop
ret
fcomps
inc
pop
ss
push
sub
dec
pop
nop
push
sub
sub
pop
nop
push
pop
cmp
je
nop
push
dec
pop
nop
inc
push
dec
add
pop
nop
nop
push
push
push
lea
push
push
call
fwait
ljmp
add
fdivrl
jo
add
loop
mov
add
add
add
jmp
movsb
iret
aam
add
not
add
lcall
jne
jb
push
push
push
lea
push
push
call
add
arpl
push
add
add
push
xchg
mov
test
rolb
add
in
mov
push
je
add
mov
addr16
call
add
add
cmc
negl
leave
add
rclb
addr16
ja
push
call
sti
add
ret
xchg
ja
push
shll
mov
add
add
pop
fidivl
in
mov
add
out
lcall
jb
add
fsub
jle
add
scas
popf
add
scas
add
pop
out
add
jmp
push
lea
rol
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
int3
add
add
fiadds
testb
add
loope
mov
aad
mov
mov
add
mov
mov
fwait
add
aam
add
jecxz
add
add
in
loopne
lcall
rorl
mov
jb
push
call
add
lods
add
add
add
add
add
add
add
fiaddl
les
mov
add
xchg
jecxz
mov
add
sub
pop
mov
add
push
push
lea
push
lea
push
call
add
jl
pop
in
xchg
xchg
pushaw
add
enter
in
pop
jecxz
lahf
cltd
out
add
add
sub
pop
mov
xor
push
sub
lea
pop
xor
shl
push
push
lea
push
lea
push
push
push
call
add
add
jb
stc
stc
std
add
fcmovnu
add
jno
add
clc
in
mov
cmpsb
add
nop
add
mov
lahf
mov
push
add
out
mov
jae
add
addb
jp
add
std
sarb
add
add
sub
pop
xor
push
xor
xor
pop
shl
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
aad
lods
int3
movsb
add
add
out
xchg
iret
push
addb
lahf
aad
pop
add
mov
mov
sahf
testl
add
mov
cwtl
add
add
mov
fiaddl
dec
nop
add
mov
shrb
push
push
push
call
leave
mov
iret
add
int
xchg
mov
hlt
add
add
sti
iret
push
add
add
sarb
add
jecxz
add
filds
xchg
mov
rcr
jne
ljmp
in
lcall
loope
push
rol
pop
xor
push
push
lea
push
push
push
lea
push
push
call
lret
add
add
add
xchg
mov
enter
lcall
add
mov
xchg
lret
cmp
mov
add
idivb
mov
mov
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
push
call
add
incb
bound
aam
add
add
jmp
fwait
add
rolb
push
add
mov
mov
add
lcall
inc
hlt
pop
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
int3
test
pop
add
lds
sahf
add
add
xchg
sub
pop
pop
push
shr
pop
pop
push
push
push
push
call
add
add
fdivr
mov
clc
jmp
add
add
subl
jns
stc
test
add
jne
lcall
add
jecxz
add
mov
lcall
leave
push
push
push
call
add
ljmp
icebp
push
test
add
les
out
jge
nop
push
movl
add
add
rcll
jle
push
add
call
lds
lcall
or
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
mov
insb
iret
pop
add
push
in
add
rolb
icebp
add
leave
add
jge
mov
lcall
mov
push
push
push
push
call
add
push
fcmovne
add
ja
add
add
in
jae
icebp
xchg
add
loop
jae
add
add
sti
lods
mov
xchg
mov
add
jnp
mov
jmp
sahf
xchg
add
lock
add
pop
push
add
add
mov
add
add
movsb
sub
pop
push
push
inc
not
pop
push
push
push
lea
pop
push
mov
push
xor
rol
add
shr
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
jge
jge
add
movsl
mov
lock
add
cld
push
add
cwtl
xchg
add
cld
pop
xchg
loope
mov
rcll
enter
int
mov
out
add
sbb
les
add
ja
add
ljmp
or
add
push
not
pop
mov
push
lea
pop
test
je
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
adcb
mov
add
insb
nop
add
add
loop
mov
add
add
notl
mov
iret
pop
popf
xchg
add
add
xchg
mov
mov
in
fdivr
lcall
notl
push
loope
hlt
push
lea
push
push
push
push
lea
push
call
add
add
mov
add
js
fdivl
xchg
push
pop
loop
movsb
add
ljmp
mov
mov
mov
add
add
testl
add
sbb
add
jae
sub
pop
mov
push
shr
inc
rol
pop
mov
inc
push
sub
pop
cmp
je
push
push
push
push
push
push
lea
push
push
call
pop
out
add
enter
add
pop
add
in
add
lock
test
hlt
fadds
enter
ret
loopne
lcall
rorb
popf
add
add
adc
bswap
dec
not
rol
pop
inc
push
add
dec
inc
inc
pop
cmp
je
test
jne
push
lea
push
push
push
push
push
push
lea
push
push
call
push
call
loope
xchg
shlb
stos
fs
fldl
add
mov
mov
fsub
lods
pop
add
add
xchg
int3
pushf
int3
addr16
add
push
cltd
xlat
addl
cmpsb
add
add
int
sub
pop
xor
push
inc
pop
pop
push
not
xor
not
ror
pop
pop
pop
push
push
push
push
call
mov
jb
add
mov
cmpsl
add
push
add
add
mov
pop
add
lods
mov
add
jno
in
mov
add
movsl
add
cwtl
aam
testl
mov
add
add
add
add
mov
add
mov
mov
insb
mov
sub
pop
pop
leave
push
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
shl
out
roll
push
shll
test
add
mov
fiaddl
add
popf
jmp
mov
mov
outsl
jae
pop
push
add
and
mov
shl
xchg
sub
pop
ret
push
add
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
add
into
lds
ja
jp
push
add
pusha
add
xchg
add
add
add
add
movsb
ja
pop
mov
push
add
xchg
out
hlt
movsl
add
add
xchg
add
movsl
lds
in
loopne
inc
push
inc
pop
cmp
jne
push
push
push
push
push
call
cli
add
jmp
add
negb
add
int3
mov
fwait
pop
add
mov
rcrb
add
add
lcall
test
add
mov
mov
add
lock
pusha
pop
mov
add
cmpsb
sub
pop
lea
push
sub
pop
mov
push
xor
pop
test
je
push
shr
lea
pop
mov
push
push
lea
push
push
push
call
sti
into
add
jns
mov
pop
add
lret
imul
add
fdivrl
lcall
mov
add
fiaddl
add
add
filds
add
add
mov
add
add
les
xchg
add
add
lcall
movb
push
call
pop
push
add
add
xchg
add
fcoms
add
mov
add
xlat
add
add
add
xchg
gs
jl
ret
mov
push
cld
in
jbe
imul
add
loopne
test
shl
ror
pop
mov
push
sub
not
add
pop
test
je
mov
push
xor
add
pop
add
cmp
je
push
push
lea
push
lea
push
push
push
push
push
call
mov
rcrb
add
add
incb
jge
shlb
pop
add
add
mov
jbe
mov
ja
lahf
sahf
icebp
test
jne
jecxz
cltd
pop
add
data16
add
add
lret
xchg
xchg
loop
jbe
repnz
cltd
add
in
loopne
lcall
or
call
pop
shr
pop
xor
push
push
push
push
push
lea
push
push
call
fwait
into
stos
stos
add
loope
add
mov
add
mov
pusha
add
add
pop
mov
mov
cmpsb
sub
pop
pop
push
push
lea
push
push
push
push
push
call
aad
fildl
add
xchg
add
in
filds
mov
outsl
add
add
add
rcrb
add
data16
enter
pusha
add
sub
pop
pop
push
add
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
pop
add
push
push
add
add
mov
add
ret
dec
jmp
icebp
subb
pop
push
clc
divb
add
enter
pop
jmp
rcrl
ljmp
add
ret
add
flds
add
add
in
fcomps
leave
push
push
push
call
rolb
out
into
pop
lods
repnz
add
add
lock
add
in
fisubrl
bound
mov
pop
xlat
nop
add
add
roll
add
pop
ret
push
not
shr
pop
lea
push
ror
sub
add
pop
pop
push
push
lea
push
lea
push
call
add
add
xchg
ljmp
repnz
into
int3
mov
add
mov
add
add
call
add
add
add
push
add
xchg
sub
pop
pop
pop
push
push
push
push
push
push
push
call
add
pop
add
push
add
jl
cmpsl
jnp
nop
add
rcr
xchg
add
add
add
add
out
movb
idivl
jecxz
add
pop
add
in
add
fiaddl
out
jl
test
std
sub
pop
pop
push
push
lea
push
push
lea
push
call
out
push
fcomp
out
xchg
add
push
add
mov
lods
push
pop
add
int
popf
ljmp
xchg
in
ja
lock
lds
add
add
into
int
mov
add
add
add
add
jp
add
movsl
imul
add
add
in
lcall
push
push
call
mov
add
movsb
fisubrs
add
mov
add
aad
mov
xlat
add
add
aad
add
in
out
jbe
rolb
xchg
push
add
mov
add
popf
pop
leave
add
mov
outsl
add
add
mov
push
mov
in
clc
pop
ret
push
rol
add
sub
pop
mov
pop
push
lea
ror
not
pop
pop
pop
push
shr
xor
add
pop
pop
leave
push
push
push
push
push
lea
push
push
push
push
call
mov
pop
add
add
push
xchg
fwait
lods
into
add
fldl2e
movsb
lock
orl
stos
mov
out
add
add
into
loop
add
hlt
loope
add
add
add
add
xchg
add
pop
add
outsl
add
sub
pop
ret
xor
cmp
insl
dec
cmp
xor
adc
adc
adc
pop
cmp
pop
idivl
adc
popa
cmp
xor
adc
mov
add
jbe
cmpsb
mov
mov
mov
sub
jbe
inc
xchg
push
jle
test
data16
dec
push
xlat
ret
xchg
pop
xor
enter
shlb
aaa
adc
int3
test
ja
enter
adc
pop
xchg
nop
fisubrl
or
jne
in
dec
push
jno
xchg
gs
xchg
inc
and
scas
xchg
testb
and
inc
call
cltd
iret
arpl
sub
sub
and
stos
rcrb
test
out
sbb
sub
pop
and
pop
inc
jns
into
pop
nop
add
nop
andb
push
les
inc
cmp
mov
sahf
rclb
jg
lods
mov
xlat
leave
rcr
loop
cmp
int3
stos
test
jp
push
and
xor
movsb
inc
mov
stc
sub
sbb
mov
pop
mov
add
mov
push
lret
in
jb
es
mov
jo,pt
cmp
enter
test
jns
stos
nop
fstps
cmpsl
push
xor
mov
test
inc
dec
inc
add
push
xchg
bound
pop
pop
sub
dec
dec
xrelease
dec
mov
mov
stos
push
insb
out
jno
fisttpll
aas
std
jo
rcl
pop
decb
enter
push
mov
adc
dec
sbb
lret
out
pop
and
bound
dec
xchg
sbb
scas
mov
or
aam
jne
test
test
push
std
movsl
sbb
mov
inc
push
mov
repz
inc
cmp
divb
test
ja
jbe
jbe
loope
stos
icebp
adc
ret
clc
enter
iret
rclb
mov
pop
popf
lahf
mov
fidivrl
in
pop
push
je
daa
fisubrl
fs
dec
jg
xor
lods
pop
adc
xchg
testl
jb
pop
cltd
xchg
sbb
cmp
out
sbbl
push
stc
cmpsl
mov
sti
jnp
and
sbb
loopne
stc
sub
iret
outsb
andl
cwtl
xlat
fnstsw
popa
in
lods
xchg
cltd
out
popa
cmp
mov
mov
nop
pop
std
movsl
mov
push
mov
sub
ficompl
push
out
and
inc
cmp
pop
cmp
loope
or
mov
sub
xchg
aam
and
stc
test
outsb
bound
out
cmp
cmpsb
mov
lock
lcall
jae
imul
decb
adc
xchg
shlb
jg
stos
sub
push
std
add
stc
shrl
mov
mov
outsb
pop
dec
mov
data16
insl
dec
dec
pop
lret
mov
out
inc
aaa
and
test
scas
pop
cs
stos
pop
testb
ljmp
mov
fidivrl
pop
sbb
add
xchg
jae
insl
adc
pusha
mov
and
mov
jl
fs
pop
leave
xlat
xor
lds
xchg
test
dec
mov
cmpsl
push
jae
jae
in
repnz
icebp
int3
adc
push
inc
sbb
aas
outsl
adc
decb
pop
sarl
aam
mov
fistpll
add
movsb
push
xchg
push
cmp
push
mov
out
xchg
xor
jns
inc
addr16
xchg
lods
fisubrl
mov
sbb
cmp
sbb
sti
xchg
ror
imul
mov
inc
daa
xor
push
xchg
enter
xor
loop
mov
adc
sub
inc
jg
addr16
dec
iret
stos
push
ds
xor
rcl
ja
js
jb
mov
roll
sbb
cld
loope
push
or
cmc
rorb
xor
push
loop
lahf
pushf
push
jp
lret
shr
mov
iret
inc
repz
punpcklwd
lahf
xchg
jmp
sbbl
or
and
js
mov
mov
stc
cmp
ror
imul
jbe
dec
js
mov
outsb
sbb
fwait
jo
push
adc
and
mov
les
mov
cmpsl
cmp
sahf
xor
pop
stos
sbb
add
stos
add
setl
cmp
adc
pushl
jae
jg
adc
inc
mov
xchg
adcl
leave
sbb
bound
ljmp
mov
ja
leave
std
sahf
pop
xchg
mov
push
mov
push
dec
add
jle
mov
cmp
das
addr16
inc
js
das
dec
sbbl
sub
dec
xor
mov
iret
mov
or
inc
rol
xor
and
and
ss
inc
pop
dec
mov
jbe
sub
jnp
enter
mov
or
sub
int3
dec
cwtl
jbe
jmp
cli
and
pop
pop
in
xchg
lock
cmp
push
jmp
cs
test
cwtl
ret
xor
sub
popa
sti
push
sbb
call
mov
xchg
sbb
mov
rcpps
cmpsb
fst
popw
enter
stc
pop
lods
test
std
mov
pop
movsl
mov
push
out
pop
mov
sbb
hlt
repnz
jbe
sbb
in
rcll
fnsave
test
mov
repz
xchg
mov
add
fcoml
xchg
mov
nop
mov
add
movsb
lret
push
push
jmp
or
xchg
push
jno,pn
ss
testb
or
jmp
sub
test
mov
mov
cmp
mov
xor
int3
push
xor
push
cli
scas
inc
mov
jns
out
mov
and
bound
jg
push
mov
mov
fnstcw
and
cmpsl
and
dec
shr
inc
xchg
mov
ja
daa
inc
nop
mov
mov
icebp
mov
orl
and
cmpsb
adc
test
sub
xchg
loopne
shrl
jecxz
jmp
out
test
inc
bound
jb
sub
aaa
stos
sahf
in
roll
pop
dec
fcoms
jle
cmpsb
sub
pushl
rorb
sub
in
fcoms
addr16
pop
lret
outsb
je
cmp
pop
cmp
or
das
ss
sub
sbb
inc
xchg
jbe
jno
lahf
imul
aad
inc
shrl
cld
mov
sub
sbb
add
mov
jnp
imul
flds
sub
mov
mov
pop
mov
mov
jg
adcb
xchg
ljmp
ja
mov
xor
cld
lods
pop
adc
jg
cs
sarl
in
jo
xchg
call
mov
cmp
sbb
sti
mov
insl
mov
adc
repnz
and
mov
fsts
ret
pop
jno
push
rolb
push
mov
inc
cmc
mov
aaa
addb
stc
cli
or
jg
aam
add
or
sub
cmp
loop
adc
and
leave
lea
neg
sbbb
popa
dec
mov
lock
sbb
dec
cmp
bound
hlt
shr
popa
jecxz
std
push
fwait
add
dec
inc
jp
xchg
popa
cmpsb
mov
shll
jns
push
mov
xor
cmpb
xchg
sbb
sti
and
mov
idivb
jo
ret
mov
call
or
push
cmp
mov
cmp
push
mov
xchg
xchg
sbb
lahf
popa
jg
jecxz
insb
sub
xchg
mov
pusha
das
in
add
jp
and
push
adc
fiadds
xor
pop
push
jo
push
mov
addl
sub
adc
subl
outsl
and
lods
stos
sti
int
or
cs
add
fidivs
sti
out
mov
pop
mov
dec
xlat
push
daa
xor
mov
mov
icebp
mov
cld
dec
aaa
cwtl
dec
adc
popf
jecxz
fdivs
sbb
test
ret
pop
ljmp
shr
jp
mov
push
jbe
or
push
aam
add
sub
sbb
xlat
dec
push
inc
cmc
cmp
and
push
adc
mov
sub
daa
push
shl
lock
push
dec
pop
adcl
testb
or
pop
roll
xchg
das
imul
mov
ss
cwtl
shll
movsb
dec
scas
jbe
addr16
mov
call
ficoms
mov
aad
xorb
das
mov
loop
inc
dec
mov
lea
hlt
cmc
mov
pop
fwait
pop
and
les
int
xchg
sbb
mov
fwait
push
or
and
loop
in
sti
nop
in
xchg
imul
test
adc
fmull
jle
rcl
pusha
rolb
mov
ret
mov
sub
rorl
out
fcomi
mov
xsave
push
and
mov
dec
xchg
jb
outsb
push
jbe
fwait
fs
xchg
scas
icebp
iret
mov
imul
jns
jns
daa
popf
rorl
xor
ret
adc
loopne
in
push
leave
push
jmp
aaa
dec
jg
add
out
cltd
bnd
mov
sub
das
test
pop
add
push
test
cmp
and
lods
xor
adc
test
or
dec
or
ret
jecxz
sarb
push
lock
inc
arpl
test
inc
xchg
pop
shl
scas
jns
push
out
jg
mov
ret
xchg
mov
push
push
testb
cwtl
adc
cmp
nop
and
mov
out
xchg
lahf
mov
pop
stc
or
and
push
xor
adc
arpl
out
lret
xacquire
out
pop
in
dec
cli
not
push
cmp
dec
and
mov
stos
fisttps
jns
in
aam
push
daa
jg
sti
loopne
lret
cmp
jecxz
call
cmp
sbb
fisubrs
mov
cmp
inc
in
push
and
mov
jae
lret
and
add
in
jo
sbb
shlb
roll
std
aad
xchg
mov
outsb
lret
dec
adc
cmp
push
pop
sahf
dec
xchg
sbb
xchg
jmp
and
fimull
jno
and
mov
xor
in
add
imul
stos
cld
mov
ret
stos
mov
xor
outsb
push
sbb
jle
xor
cmp
mov
pop
inc
xchg
mov
lahf
push
sub
dec
pop
sarb
push
xor
jecxz
into
mov
mov
lods
mov
cmp
outsw
test
sub
fmulp
mov
mov
or
fnsave
and
add
pushl
inc
dec
in
inc
loope
rcl
daa
and
clc
pop
jb
mov
nop
xor
and
in
test
arpl
pop
lahf
push
cld
test
mov
pop
or
testb
jge
sahf
push
subb
push
roll
or
sub
into
sub
jg
cltd
in
add
jp
jns
sbb
dec
adc
and
mov
sub
pusha
push
push
stos
add
mov
mov
into
loop
lret
lods
xor
aad
sub
inc
pop
pop
sarb
cmp
mov
loopne
inc
mov
dec
sbb
sub
gs
lock
dec
ljmp
sarl
shrl
cmpsb
adc
xchg
xchg
cmpl
mov
and
push
fs
lahf
cmp
pop
cld
fistpll
cmp
jnp
lock
or
roll
push
inc
jp
jge
pop
push
adc
dec
sti
scas
inc
xor
jbe
mov
mov
add
mov
jle
sub
idivl
jb
ret
or
scas
clc
rorl
test
int
nop
js
jne
fwait
mov
add
dec
or
xchg
jl
daa
push
lods
jge
xchg
loope
and
fisttpl
or
jmp
loopne
jns
mov
ljmp
mov
inc
inc
lret
aam
in
dec
sti
cmp
test
adc
imul
lret
mov
out
inc
fdivrl
daa
movsl
fsubl
xchg
out
loopne
or
mov
sbb
mov
in
out
ret
cmpsl
xchg
push
mov
mov
add
push
fnstsw
and
mov
std
roll
inc
xchg
cmpb
rcll
jbe
sti
push
aas
dec
xor
dec
pop
int
sub
or
and
lret
shl
addr16
aas
stos
jg
mov
subl
out
repnz
icebp
sbb
addb
cltd
sbb
cli
out
stc
dec
fiadds
test
in
sub
dec
clc
sub
xchg
int
cmpl
hlt
xor
mov
dec
fdivr
jbe
add
and
int
jp
push
xchg
test
inc
mov
pop
or
data16
or
es
inc
subl
jo
dec
xchg
dec
into
or
mov
cltd
cmp
rolb
inc
insb
mov
cmp
dec
sahf
add
popf
je
add
mov
and
mov
push
xlat
idivb
in
rcr
in
sbb
xchg
pop
dec
test
popl
test
sbb
pop
xchg
rclb
faddp
xor
popf
mov
push
inc
mov
inc
insb
and
roll
mov
mov
push
hlt
mov
mov
ret
push
mov
bound
inc
insb
inc
jbe
popf
pop
imul
adc
xchg
insb
xchg
cmp
inc
mov
inc
cmp
jns
mov
fsubrs
outsl
mov
mov
test
push
pop
dec
ja
pop
sbb
cwtl
movsb
in
pop
arpl
mov
inc
mov
xchg
hlt
cltd
xor
fcomps
lret
fistps
cmp
sbb
out
jp
pop
dec
jg
mov
xchg
lret
pop
vpsubusb
inc
push
leave
and
add
lods
mov
ds
xchg
pop
es
push
out
test
jo
fcompl
lret
fstl
mov
or
sub
movsl
dec
rcll
pop
sbb
arpl
mov
add
mov
hlt
or
jg
sub
cmp
sbb
cld
mov
lock
cmpsb
xor
and
loop
daa
adc
or
and
push
dec
out
ds
lcall
mov
cmp
lea
int3
and
cwtl
fsts
lret
push
jle
mov
cld
xchg
dec
sbb
dec
stos
mov
add
out
pop
xchg
insl
hlt
inc
push
pop
mov
add
ss
in
pop
xchg
out
add
mov
xor
xor
hlt
cltd
or
out
sbb
stos
leave
dec
repnz
cld
push
dec
js
push
ret
cmpsb
jg
pop
mov
mov
stos
cld
sti
fsubrl
cwtl
push
ja,pn
cld
or
clc
in
dec
dec
sub
bound
lcall
jo
sti
imul
jp
lret
notb
xor
inc
and
xchg
mov
push
jns
fsubs
fnstenv
insb
xchg
xlat
cmp
outsb
imul
pusha
popa
ficoms
leave
pop
xchg
push
adc
sbb
jg
jp
xorps
xor
out
int
cmpsb
and
out
inc
mov
iret
or
call
mov
hlt
roll
bound
dec
popl
sahf
push
xchg
xor
lret
cs
bound
cwtl
ret
std
nop
mov
out
dec
pop
jno
test
mov
cwtl
xor
sbb
push
adc
pushf
xchg
xor
cli
fldl2t
inc
sbb
test
cmp
push
cwtl
insb
imul
div
lock
dec
push
ret
ficomps
cmpsl
fwait
call
rcll
inc
daa
aaa
stos
repnz
mov
push
pop
int3
inc
and
add
xchg
enter
sub
jg
sete
mov
adc
xchg
jb
aaa
lret
lods
xor
mov
mov
xchg
pop
pop
and
leave
test
aas
push
push
add
smsw
sub
in
sub
jnp
insl
sarl
out
xchg
aad
pop
or
leave
shrb
out
sub
push
mov
sahf
fsubrs
stos
lock
lahf
fcmovu
sub
in
mov
sub
xchg
cmp
adcl
add
test
testl
sbb
sarl
xchg
pushf
in
cli
dec
fwait
andb
imul
dec
call
or
iret
xchg
stc
ljmp
sub
addl
ljmp
jmp
sbb
fs
adc
icebp
outsl
jbe
dec
scas
insl
sub
mov
subl
into
sub
lock
es
and
dec
out
dec
cld
or
dec
stos
cmp
in
mov
sbb
rcr
mov
aam
cmc
cwtl
xchg
mov
push
push
lret
and
mov
lock
stos
xor
jle
inc
aas
jne
push
stos
mov
les
test
out
push
fs
pop
add
iret
pop
pop
and
dec
in
cs
add
xchg
xor
sub
jbe
ret
sbb
xor
mov
fsubrs
fsubrs
xchg
mov
fcmovne
inc
and
filds
xorb
mov
jle
subl
std
pop
inc
jmp
jnp
inc
xchg
lds
cmc
out
adc
sbb
cs
pop
icebp
lea
xchg
fucompp
pusha
fldt
push
mov
jno
add
lock
je
sbbl
xchg
movsb
cli
inc
sbb
inc
adc
sbb
lret
push
testb
cmc
in
cmpsb
int3
push
inc
dec
xlat
arpl
pop
mov
mov
clc
scas
push
lods
loop
es
push
cld
imul
daa
jo
xchg
mov
sahf
loope
insl
jl
pcmpeqw
out
push
lods
stc
out
and
push
dec
insb
sbb
lock
and
lahf
push
lds
sahf
ds
dec
in
inc
fcmovu
popa
mov
add
sbb
cmpsl
sbb
mov
and
pop
jbe
imul
add
les
pop
pusha
or
popf
stc
aaa
xor
rcl
shlb
decl
mov
cld
pop
pop
cmp
cmp
xchg
dec
mov
mov
ret
call
insb
pop
aas
push
cmp
loop
cmp
sbb
andb
lahf
sub
scas
out
inc
cmp
in
gs
in
jecxz
pop
mov
aas
xor
nop
jbe
sarl
js
inc
fwait
or
xchg
push
mov
fcomi
jecxz
insl
xor
bound
xchg
mov
xchg
nop
loop
sub
repnz
jl
sbb
leave
xchg
jb
xchg
mov
sti
aad
popa
or
mov
fs
pop
inc
rorl
pusha
push
sub
and
xchg
shll
in
shr
test
mov
aaa
or
mov
sahf
pop
xchg
shll
pop
pushf
clc
xchg
addl
les
sbbl
mov
inc
push
pop
jl
pop
dec
xchg
xor
popf
out
pop
fs
jno
in
lods
and
roll
je
add
imul
cmp
add
dec
fistps
int
push
sub
ljmp
push
mov
dec
mov
popa
dec
iret
aam
cmp
xchg
out
sub
and
push
pop
lahf
inc
and
pushf
cmpsb
mov
in
nop
sbb
mov
sbb
repnz
mov
xor
jb
dec
lret
leave
inc
adc
mov
loope
subl
sarb
movups
enter
stos
push
arpl
fwait
cs
popf
bound
xor
imull
cmp
dec
pusha
jle
adc
mov
cs
lahf
fwait
ret
push
je
mov
ret
cmp
xlat
ret
mov
jg
cmc
mov
or
test
shrl
mov
movb
mov
outsl
mov
call
rolb
push
rol
jbe
xor
adc
add
shlb
push
sub
enter
cmc
lock
inc
adc
adc
rorl
mov
jle
or
enter
sbb
js
fwait
add
in
shl
inc
movl
loope
shl
test
ret
fs
fcmovbe
mov
test
inc
lods
movsl
xor
cmpsb
ss
call
hlt
mov
ss
inc
bound
imull
and
xor
and
adc
xchg
pop
sbb
fildl
hlt
dec
xchg
cltd
xchg
popa
mov
sub
xchg
repz
inc
sti
inc
add
sub
popa
and
push
in
adc
into
inc
push
jno
mov
loop
pop
shlb
mov
xor
mov
xchg
jno
push
and
inc
neg
push
and
pop
loop
test
mov
repnz
sub
add
ret
xadd
cmpsb
xor
daa
cmp
pop
mov
in
push
mov
cwtl
inc
es
mov
adc
jle
stos
and
ret
mov
add
mov
xchg
in
cwtl
xchg
mov
mov
mov
xchg
adc
into
repz
leave
inc
int3
adc
adc
ds
or
loop
and
bound
fucom
cmpsb
sbb
psllw
rcr
mov
insb
cltd
lahf
stos
sbb
push
insl
and
and
pop
jnp
pop
pusha
ss
xchg
add
lods
xchg
test
mov
xchg
out
daa
ret
test
xchg
shl
pop
pusha
xchg
leave
lods
xor
repnz
jecxz
imul
dec
adc
inc
lret
sbb
in
test
pop
test
pusha
or
int
or
inc
jg
mov
mov
xchg
fs
gs
popf
inc
fwait
adc
pop
aad
lds
gs
xchg
adc
fs
ja
sub
das
pushl
divb
mov
xchg
pop
pusha
setb
fstl
mov
add
and
jg
or
out
test
mov
aas
clc
std
cmp
data16
inc
ficompl
mov
loopne
cmpl
inc
scas
mov
cld
repz
mov
pop
arpl
notb
cwtl
inc
xchg
pop
mov
fistpll
loope
adc
jmp
int3
fildll
into
mov
sub
xchg
inc
out
push
or
sbb
sbb
inc
test
scas
lds
mov
or
icebp
push
xlat
dec
popa
mov
es
lods
cmp
fst
jmp
fnstsw
insl
enter
dec
mov
push
icebp
scas
test
hlt
or
xchg
inc
xchg
mov
push
loope
and
movsb
push
lds
repnz
in
ljmp
mov
lea
xchg
sahf
pop
shl
sbb
lea
adc
enter
movb
mov
pop
aam
or
cmp
jp
cmp
pop
daa
hlt
sti
shl
into
jmp
call
roll
pop
fs
in
push
rorb
pop
mov
xor
imul
repz
cmpsb
mov
jecxz
push
dec
or
push
lahf
in
cld
fists
cmp
xchg
or
push
dec
aas
xchg
add
js
das
inc
das
jne
enter
and
sub
inc
insb
xchg
pop
mov
inc
xchg
xor
pop
pop
je
es
pop
insl
icebp
fcmovnb
adc
mov
and
rorb
push
out
dec
jno
adc
mov
pop
or
lock
jmp
pop
clc
int
push
std
xchg
pop
cmp
fbld
pop
fstpt
lods
lcall
js
mov
mov
or
mov
add
or
mov
or
xchg
mov
cwtl
js
xor
ffreep
das
mov
mov
test
rcrb
pop
lret
cmc
icebp
sub
lods
fisubrs
and
fiaddl
mov
repz
or
pop
das
dec
jne
mov
dec
sahf
ljmp
jecxz
clc
or
cmp
mov
adc
or
les
rcll
pop
jne
out
and
loope
adc
test
daa
add
sub
xchg
add
sub
mov
xor
scas
ficoml
push
adc
nop
push
adc
or
add
xchg
and
daa
popf
in
lea
cmp
test
movsb
cltd
dec
jns
or
lret
xor
cmp
rclb
mov
lds
jo
adc
add
jle
pop
in
adc
cwtl
test
pusha
push
add
or
jle
pop
jno
std
es
rol
push
loopne
push
jmp
nop
sbb
and
outsl
add
cmp
insb
adc
add
jg
test
test
or
out
aam
mov
sbb
out
push
fidivrs
ja
std
push
mov
sti
frstor
cmpsb
sbb
or
jae
xchg
push
test
cmp
or
shrb
push
xor
into
rol
int
stos
jb
jp
aam
cmp
repz
lret
cmpps
cmpsb
pop
lods
and
aad
cmp
jp
cs
imulb
movsb
pop
cmpsl
mov
mov
adc
stos
in
xor
xchg
mov
mov
or
adc
xor
add
and
fisubs
push
add
xchg
fldl
or
or
loopne
sub
pop
fwait
cwtl
mov
lods
mov
sti
cmp
xor
inc
nop
scas
and
lahf
mov
jbe
nop
dec
sub
out
mov
and
into
cmp
xchg
lcall
lds
mov
adc
and
mov
xchg
pusha
lea
dec
popa
roll
jns
scas
outsl
jb
in
in
int
or
cmp
pusha
push
cwtl
cmpsb
xor
movl
add
dec
aaa
push
adc
mov
xchg
pop
inc
mov
ss
fptan
cmp
imul
jns
jecxz
leave
mov
xchg
push
loop
mov
lea
pop
out
js
lahf
xorl
pop
adc
fs
loop
ldmxcsr
cld
mov
sahf
subl
mov
sbbl
gs
jle
dec
mov
xor
stos
stos
cmp
cs
xor
cmpsb
arpl
inc
and
pop
in
ret
inc
out
iret
xchg
and
out
sahf
mov
sbb
add
pop
or
in
ficompl
xor
aad
out
cmpsl
or
sbb
cmp
jno
arpl
in
movsl
push
gs
push
mov
jle
test
pop
shll
nop
xchg
je
daa
pop
push
out
mov
add
insb
dec
enter
repnz
dec
and
fimull
cmc
and
cs
and
stos
cwtl
or
xor
out
pop
je
loope
mov
sbb
inc
lret
add
sbb
mov
or
xchg
inc
jl
iret
into
sub
stos
ss
lret
fisttpl
mov
and
or
sahf
and
sbb
cmp
lcall
pop
into
in
inc
xor
js
mov
out
das
mov
dec
xchg
add
dec
jns
mull
mov
lcall
push
ret
cmp
add
daa
jmp
gs
mov
add
fimull
lock
add
cmp
push
mov
push
sbb
sbb
fmulp
dec
ds
fistpl
adc
mov
xor
jne
or
in
mov
dec
je
clc
js
pop
jns
mov
andl
int3
or
nop
push
dec
cmp
andl
cld
xor
jbe
mov
mov
pusha
dec
fwait
push
mov
or
jno
js
leave
and
mov
push
or
adc
jb
push
mulb
xor
inc
adc
imul
in
call
add
fmull
and
sbb
pop
loop
pop
ret
bnd
mov
cmp
and
sbb
sub
dec
xor
sbb
ja
cmc
ja
js
push
sbb
xor
or
xchg
or
aad
xchg
cwtl
cmp
in
xchg
xor
lret
add
xorl
fldcw
or
xchg
and
rolb
lock
shrb
xchg
rcrl
jno
adc
inc
inc
movsl
adc
rorb
or
cltd
dec
rcrl
dec
daa
and
bound
jge
sbb
inc
jmp
and
mov
mov
push
mulb
fiaddl
jmp
enter
adc
push
mov
int
mov
mov
xchg
jno
mov
jecxz
lock
dec
in
lods
scas
mov
sarb
jae
inc
in
or
sub
lret
add
leave
sbb
sub
inc
dec
mov
fbld
jg
pushl
mov
xor
sub
loope
mov
inc
pop
fldt
imulb
in
mov
or
out
rolb
and
jle
sbb
xchg
mov
xchg
idivl
jg
je
mov
xlat
and
fs
mov
pop
or
lret
and
pop
int
test
cwtl
jmp
gs
dec
nop
add
jl
and
shr
test
jg
cmp
cld
jb
adc
sbb
or
xchg
mov
mov
rorb
test
xchg
sbb
jns
push
push
jnp
push
aad
int
cmp
inc
out
or
adc
ljmp
lods
popf
cs
sub
sub
xlat
mov
pop
lret
inc
xchg
and
sbb
mov
imul
jmp
sahf
fsubl
mov
in
mov
dec
add
xor
int
xchg
outsb
loopne
arpl
fnstsw
lret
stos
aaa
push
sbb
ss
fcoms
test
cmp
lock
sbb
lcall
inc
repnz
xlat
push
jno
or
popa
pop
lds
inc
aas
scas
clc
fstpt
xchg
inc
fsubrs
sub
xchg
inc
enter
xor
fidivl
psllq
mov
mov
and
mov
pushf
sub
aam
roll
ffree
pop
cmp
adcb
sub
xor
lret
fs
mov
testb
push
xchg
sbb
decb
loop
js
add
push
pushl
jbe
ret
sbb
mov
cltd
add
stos
sbb
cmp
adc
jmp
sub
cltd
jb
inc
pop
mov
fisubrl
xor
pop
xchg
mov
bound
inc
lahf
push
xchg
ret
cs
fiaddl
stos
xor
out
jg
jae
cmc
jb
adc
pop
fsubrs
mov
stos
pop
sbb
push
cmpsw
js
xchg
push
shlb
inc
les
imul
push
jns
ljmp
test
cmp
daa
cmpsl
cli
les
movb
das
adc
jg
lahf
add
jo
mov
gs
loope
mov
dec
mov
xor
cmc
stos
lods
fdivs
imul
insb
push
adcb
ss
add
rcl
sbb
inc
dec
sarl
mov
jbe
inc
in
push
xor
enter
sti
aaa
lods
mov
inc
loope
mov
enter
mov
xor
add
cs
imul
mov
mov
fwait
bound
or
xchg
xor
sub
mov
stc
nop
in
inc
mov
je
sub
fsubrs
in
ja
push
xorb
mov
and
push
pop
jns
jne
add
pop
mov
cli
std
push
sti
push
and
jl
jecxz
xor
popf
push
push
das
adc
mov
and
xchg
std
jge
daa
repz
cmp
fdivrp
cmp
and
mov
cmp
adc
xchg
mov
add
cmp
sbb
sub
scas
cmp
sahf
je
test
cmp
lea
jg
adc
ret
leave
dec
and
out
lahf
fmuls
movsb
int
enter
pusha
xor
popa
ljmp
jbe
xchg
fisttps
push
and
pop
inc
mov
inc
jg
insl
daa
add
stc
xor
lahf
inc
das
cmp
pushl
cmc
test
pusha
push
push
je
mov
ret
inc
imul
into
imul
mov
mov
lcall
in
lret
in
inc
pop
add
xor
sub
fwait
xchg
xor
cmpsl
mov
ret
sbb
xor
fwait
repnz
or
ret
adc
movsb
jns
inc
add
pop
dec
imul
add
loope
imul
lods
mov
or
dec
cs
cmc
xchg
adc
loop
and
mov
adc
and
lcall
in
test
arpl
cmp
mov
and
pop
inc
dec
arpl
mov
jbe
push
imul
jl
mov
pop
lahf
iret
xchg
shl
idivb
mov
hlt
sub
jb
sub
in
add
ss
aaa
loopne
push
inc
jnp
adc
loope
sub
cmp
sbb
fs
sub
xchg
mov
or
outsb
ljmp
ljmp
dec
je
mov
xchg
fcmovnb
jg
std
dec
adc
imul
mov
je
or
dec
jbe
push
in
add
cmpsl
mov
cmp
jle
insl
mov
mov
mov
xchg
mov
and
lahf
imul
xorb
pushf
orb
ds
xchg
mov
mov
sub
stc
add
sti
pushf
fstps
pop
sbb
dec
cwtl
inc
or
xchg
and
mov
pop
pop
mov
mov
inc
xlat
lret
clc
dec
xor
push
jge
push
inc
rcr
or
bound
cwtl
jns
adc
xor
pop
xor
mov
dec
stc
xchg
dec
leave
mov
or
pop
out
and
push
inc
add
sub
ficompl
mulps
xlat
enter
jne
xchg
stos
mov
inc
hlt
outsl
push
mov
mov
push
dec
inc
push
arpl
adc
stos
mov
pushf
ja
filds
loop
or
mov
sti
ret
jmp
jne
fs
icebp
pop
shl
jge
insl
in
paddsb
test
test
sti
jno
inc
cmp
jmp
out
loop
push
sbb
inc
jmp
push
pop
or
cmc
test
push
int
inc
and
mov
sti
stc
sti
jl
pop
dec
xor
cltd
jle
test
jo
add
sbbb
xor
jmp
scas
mov
adc
jno
pop
aam
push
jne
push
imul
add
mov
fsubrs
pop
and
add
and
in
hlt
mov
sub
xchg
lea
inc
imul
jg
sbb
scas
mov
push
mov
es
aaa
mov
sub
adc
out
leave
rorb
pop
pop
cmp
pop
aaa
mov
push
mov
stos
popf
cmp
xacquire
inc
ja
aas
sbbb
mov
pop
icebp
ds
fstpt
pusha
mov
stc
notb
movsl
xchg
pop
inc
aaa
test
sub
push
adc
lock
dec
clc
nop
clc
hlt
dec
sti
mov
add
dec
pop
xchg
jns
imul
outsl
cli
movsb
out
je
leave
scas
mov
mov
outsb
dec
push
mov
cmpb
leave
loopne
lret
fstl
cmc
aam
test
test
popa
lcall
nop
push
imul
mov
xchg
dec
clc
dec
and
xchg
sbb
hlt
cmp
or
dec
mov
or
mov
or
sti
mov
pop
setle
mov
jle
aam
jl
jl
in
adc
cmp
mov
out
inc
push
or
arpl
mov
pop
cmp
xor
xchg
inc
lods
fcmovbe
mov
mov
and
and
and
mov
jmp
pop
andl
aaa
rcrl
mov
adc
in
js
xchg
pusha
dec
cli
fwait
stos
inc
jge
rcrb
daa
jp
push
ret
out
ljmp
ds
cmp
dec
dec
or
das
insl
test
ljmp
and
mov
mulb
mov
int3
test
and
call
aas
les
fsubr
pop
inc
jno
or
and
adc
xor
mov
lret
mov
or
ficoms
sbb
or
cld
jmp
out
ds
jmp
das
icebp
repnz
sbb
sbb
lret
lock
mov
sub
rcll
pop
add
loop
enter
imulb
scas
jb
in
test
jne
xor
mov
or
ds
sti
pop
jnp
jae
fcompl
movsl
push
das
inc
push
mov
sbb
mov
int3
jle
pop
pop
es
or
clc
mov
out
ffreep
mov
adc
jl
mov
jecxz
sti
push
cmpsl
mov
xchg
jmp
push
in
xchg
out
ret
cld
outsl
push
inc
push
addl
mov
push
test
or
sub
rorl
in
add
mov
xchg
scas
jl
or
stos
mov
mov
mov
mov
call
inc
mov
xor
mov
test
add
test
stc
roll
fisubs
imul
popa
cmp
outsl
stc
daa
shrb
mov
popf
sub
xchg
mov
jb
out
mov
mov
push
int3
pop
xor
das
mov
dec
mov
mov
aad
test
mov
inc
push
cmp
mov
jmp
fsubl
insl
sub
mov
dec
mov
jl
jb
ret
nop
loope
pop
cmp
sub
je
jmp
sub
test
data16
in
push
jae
sub
lcall
add
or
or
dec
push
movsl
xor
es
out
orl
push
inc
lds
ret
fdivrs
imul
ljmp
in
lods
pop
dec
add
pop
jle
adc
mov
mov
xchg
dec
lret
insl
lock
mov
lods
insl
dec
cmp
cmp
mov
mov
xor
lock
repz
rcrb
mov
aaa
xchg
jmp
test
fidivs
mov
shl
test
sbb
in
out
push
push
sbb
repnz
cmc
std
mov
xchg
mov
inc
jnp
adc
dec
xchg
into
push
sahf
rcrb
lods
sbbb
mov
jp
mov
rorl
jne
into
inc
cmp
xchg
mov
jecxz
nop
adc
test
insl
push
add
jmp
xor
xor
aaa
scas
out
ret
fmuls
stos
xchg
rol
xlat
cld
arpl
sub
fisttpll
mov
dec
sub
fistpll
sub
jecxz
loope
lret
add
push
cmpsl
xchg
jns
loopne
inc
mov
repz
ja
xchg
jbe
andb
jo
push
sub
shrl
scas
and
or
repz
je
popf
pop
pop
in
dec
mov
lds
sbb
jge
pop
ss
push
cmp
cmp
xchg
scas
je
or
mov
cltd
in
cmp
jl
mov
std
ds
sbb
loop
jmp
movsb
dec
cmp
frstor
and
out
mov
push
cmpsb
mov
dec
push
mov
out
adc
mov
negl
cmc
imul
ds
bound
int3
aad
cld
loopne
pop
jne
mov
pop
cmpsb
pop
adc
xchg
andb
sarb
fisubl
adc
dec
mov
mov
pop
dec
mov
insl
fwait
push
ljmp
aam
test
inc
jbe
push
mov
movhlps
in
call
adc
xchg
xor
adc
adc
std
cmpl
scas
and
std
jae
fnstcw
dec
or
in
fmuls
rcrl
fsqrt
test
inc
jge
jl
fildll
fisttps
fisubrs
ljmp
xor
pop
sbb
hlt
cmpsl
popf
je
xor
mov
inc
adc
iret
outsb
lcall
sub
pop
dec
pop
insb
cld
fcmovu
jno
jmp
enter
add
lods
addl
das
add
sbb
fs
das
pop
or
fcompl
stos
cmp
stc
cmp
icebp
in
mov
inc
push
add
repnz
pop
je
jne
out
testb
shufps
xchg
sbb
scas
xchg
mov
sub
and
sub
into
stos
jne
aad
cltd
push
in
mov
mov
add
sbb
sbb
hlt
sub
loopne
test
and
insl
not
pop
enter
xor
in
push
shlb
jg
cmp
pop
xchg
mov
mov
cmp
jp
dec
inc
cmp
lahf
push
pop
les
cld
xorl
fnstenv
cld
jmp
push
mov
mov
jle
mov
sbb
dec
pop
and
and
das
stos
lret
dec
lods
cmp
jno
and
xchg
or
clc
lods
dec
ja
mov
std
test
dec
loop
mov
dec
jns
outsb
sbb
push
or
test
inc
push
xchg
loop
mov
or
mov
xchg
daa
lods
push
aam
push
faddl
mov
or
sub
push
pop
jp
rclb
test
das
ret
mov
sub
inc
pop
mov
std
lahf
lcall
xchg
add
xor
sbb
inc
pop
xlat
mov
cmc
jmp
mov
flds
pop
arpl
cli
pop
jnp
sbb
pop
adc
icebp
in
popa
xchg
ljmp
xor
cmpsb
cmc
bound
imul
rclb
into
push
mov
rorl
xchg
test
dec
fidivl
pop
pop
adc
inc
ljmp
sbb
pop
jb
sub
lock
sbb
sbb
test
fs
sbb
and
pop
test
test
mov
inc
out
lret
and
xchg
inc
mov
sbb
pop
loop
rclb
add
inc
mov
stos
fs
loope
mov
jmp
outsb
mov
mov
out
jg
cltd
xchg
lahf
sub
dec
push
insb
aas
aas
mov
repnz
adc
lods
out
jne
movsl
jmp
dec
mov
lds
inc
xor
adcb
adc
fdivs
ftst
push
sahf
popf
mov
movsb
icebp
dec
add
sub
fldt
popa
int3
subb
clc
xlat
test
popa
out
stos
icebp
loopne
push
mov
fidivrl
mov
scas
sub
mov
ljmp
test
daa
xor
cs
fisttps
pop
sahf
cli
in
xchg
sbb
dec
cmp
adc
or
int
imul
push
repz
or
outsb
aam
dec
or
lea
mov
add
gs
pop
sbb
mov
hlt
mov
arpl
popf
es
and
jmp
or
shrb
fs
fsubrs
gs
sub
loopne
or
test
xor
cwtl
mov
fistpl
mov
mov
mov
dec
subl
add
mov
mov
cmpsb
sbb
mov
xchg
lcall
jg
test
test
cmp
in
je
stos
or
mov
cmp
mov
mov
sub
shlb
lods
bnd
imul
add
mov
aas
jne
mov
mov
repz
out
flds
dec
ret
aad
mov
push
mov
repz
jmp
add
push
addb
loop
mov
xchg
sahf
cli
cwtl
das
adc
sbb
mov
arpl
and
jb
xor
add
and
jb
pop
add
outsb
push
dec
sub
dec
cmpsl
out
pop
mov
test
aad
xor
popf
test
cmpl
rorl
loop
out
jecxz
mov
mov
add
test
testb
loope
stc
mov
ret
iret
das
push
sbb
mov
add
adc
daa
xchg
sbb
ret
scas
xchg
movsb
neg
cwtl
jecxz
fwait
add
insb
pusha
sub
xchg
cmp
push
lret
push
jae
or
cltd
add
inc
les
mov
popf
loope
scas
data16
in
gs
seta
fcmovne
cmp
enter
xor
repz
mov
rol
scas
sbb
sbb
idiv
sbb
test
dec
loop
sbb
movsb
cmp
fldcw
ret
ljmp
test
xchg
sbb
lret
negb
mov
mov
push
leave
pushf
icebp
xor
clc
sbb
xor
lret
sahf
push
mov
ret
dec
lds
icebp
loope
push
rcrb
sahf
les
and
cwtl
or
sbb
call
movsl
jne
pop
pushl
roll
enter
lods
ret
popw
push
push
mov
out
adc
lcall
sub
mov
sub
arpl
cli
jo
leave
or
gs
je
inc
and
lea
or
mov
push
roll
cwtl
mov
bound
cs
xor
sbb
fwait
xlat
push
imul
jae
idivb
inc
add
cmp
fcoms
lock
out
mov
inc
repnz
dec
sbb
sub
cmp
jmp
xor
fildl
in
pop
stc
jnp
sarl
arpl
jmp
repnz
andb
or
push
xchg
cmp
push
stos
push
sbb
sbb
mov
inc
fs
ljmp
cmp
inc
aam
add
push
ret
addb
subb
add
aaa
mov
icebp
jp
sar
or
push
jno
adc
mov
dec
pop
shl
mov
repz
scas
iret
fsub
sub
jle
ror
jecxz
xchg
adc
out
out
mov
cmpsl
push
fnstcw
jne
inc
jo
dec
mov
dec
pop
cmp
out
js
adc
jl
cmp
gs
sysenter
out
gs
ljmp
dec
imul
xlat
xchg
jae
xchg
mov
sbb
fisttpl
push
adc
fwait
gs
pusha
add
cli
jb
pusha
imul
shrd
ljmp
pop
inc
fsubrp
int3
sarb
jge
ljmp
mov
push
mov
ret
mov
jge
jnp
sar
push
rcll
inc
sti
dec
fwait
sub
jl
inc
lock
sub
inc
lret
int
jg
add
shl
call
data16
out
push
nop
push
mov
pop
mov
mov
adc
push
stos
jecxz
xor
mov
popa
pop
cmpsl
sarb
lods
or
sbb
notl
sbb
lods
cmpsb
lret
scas
mov
popf
repnz
xchg
lods
pop
test
es
imul
mov
or
mov
mov
jl
jne
cs
movsb
pop
jmp
mov
in
pop
jo
cli
jg
rorl
xchg
sahf
mov
imul
jl
insl
into
xchg
inc
lahf
dec
pusha
cmp
or
bound
xchg
mov
loope
push
push
gs
out
adc
or
add
jmp
fdivrs
hlt
jo
or
push
jl
jg
or
lret
jle
test
dec
mov
ds
or
inc
xchg
jne
sti
cmp
icebp
jmp
out
scas
xor
mov
xor
xchg
ret
mov
xchg
and
rcr
adc
lret
mov
mov
push
sbb
imul
hlt
dec
fcmovnu
or
int3
gs
sbb
xchg
lahf
push
xor
adc
inc
and
outsl
inc
into
pop
leave
adc
add
or
xor
mov
mov
jo
popf
cli
jecxz
fdivs
cli
add
loopne
inc
pop
les
cmpsl
popl
sub
xchg
nop
cmc
dec
movsb
mov
dec
sub
ds
scas
adc
add
inc
faddl
fildll
repz
pop
and
mov
mov
cmpsl
dec
inc
jle
dec
push
cmp
lret
fwait
jle
idivl
xchg
insl
xchg
fstpt
jg
imul
daa
sub
mov
in
popf
pop
inc
ja
add
dec
dec
lret
mov
ja
xchg
add
mov
dec
pop
and
cs
mov
jmp
pop
imull
jne
push
aas
push
xchg
push
mov
cmp
mov
mov
icebp
sub
push
lret
and
pop
shl
mov
add
imul
mov
xchg
push
pop
lods
sahf
cmp
fimuls
subl
cli
stos
xor
mov
xor
sbb
xor
adc
or
rcll
mov
adc
add
cmp
or
jo
andb
dec
fs
cli
adc
xchg
sbbb
fwait
pop
and
lock
clc
stc
mov
jno
lcall
stc
mov
adc
icebp
cwtl
or
mov
jmp
push
fldt
push
jo
and
pop
cmpsb
jmp
jge
imul
fcomps
xor
pop
push
inc
lods
iret
je
cmp
inc
das
mov
shlb
into
add
scas
les
cmp
int
popf
jbe
inc
outsb
jne
push
push
inc
lds
movsl
mov
shr
mov
cmc
mov
cwtl
scas
jl
push
xor
shrl
loopne
push
ja
and
or
roll
cli
cmpsl
in
mov
push
scas
loop
sub
insb
lahf
mov
stc
inc
dec
aam
in
jbe
pop
push
mov
imul
test
jo
ficomps
ljmp
or
mov
das
jmp
addr16
dec
ss
dec
movsb
cmp
jmp
movsb
mov
sti
cmpsb
or
rolb
pop
adc
pop
mov
pop
adc
inc
call
les
xchg
sub
mov
repz
mov
sbbl
pop
ljmp
and
jns
push
mov
sbb
test
lds
xor
es
inc
mov
mov
mov
sub
cs
xchg
dec
and
sbb
mov
jae
test
mov
push
inc
mov
out
sbbl
mov
mov
and
outsb
hlt
pusha
sahf
enter
sahf
and
push
sti
call
lcall
lock
je
and
lock
sahf
xor
dec
jg
jecxz
es
test
add
push
aam
out
cmc
sub
adc
int3
aad
ret
xor
jge
xchg
xchg
fnstcw
mov
fxch
shll
pop
mov
xchg
mov
out
jmp
inc
mov
adc
and
xlat
mov
add
jmp
int3
cmp
xor
dec
mov
mov
inc
adc
lods
or
ljmp
and
inc
int3
mov
int3
jge
sub
pop
sbb
outsb
scas
sub
daa
sti
repz
cmp
loopne
rcrb
popl
ror
xchg
pop
outsl
push
cli
xchg
mov
in
and
or
das
rcrl
repnz
rorb
and
shlb
popf
pop
aas
or
fistpl
arpl
pop
or
mov
cmp
push
xor
cmp
movsb
or
sub
sbb
mov
iret
push
mov
cld
mov
xchg
fistps
pop
sub
cmp
sub
jp
mov
mov
fldl
mov
cmp
jecxz
push
push
add
jbe
mov
imul
lret
push
pop
xchg
jg
jg
xor
jg
je
mov
dec
xchg
push
pushf
scas
jge
pop
cmp
mov
leave
push
cltd
mov
xor
cs
loop
inc
mov
cmp
lret
inc
scas
scas
sbb
adc
sub
or
cmpsb
dec
loope
ss
push
dec
cs
int3
inc
cmpb
fisubs
insl
sarb
xchg
loopne
xor
lahf
int
cmp
jmp
mov
xor
mull
add
cmp
pop
les
fcompl
jecxz
popf
pusha
sahf
mov
ss
movb
movsb
fs
ret
fsubl
cld
das
dec
xchg
es
and
adc
sahf
xchg
xor
cmp
push
ljmp
scas
imulb
xchg
test
xchg
movsl
outsl
jmp
xor
fcmovnu
add
mov
cmpsl
dec
lods
decl
aad
cltd
sbb
jae
arpl
imul
jo
sub
test
sub
jg
mov
push
loop
mov
call
cs
pop
sub
mov
in
pop
mov
arpl
push
js
and
ljmp
jae
std
sbb
mov
mov
xor
add
lcall
addr16
cmp
xchg
mov
rcl
mov
cs
scas
sbb
pop
add
add
pushf
jmp
lds
stos
jne
mov
jmp
rcrb
push
xchg
cltd
push
lock
mov
idivb
jmp
jl
roll
push
insb
icebp
jmp
cmpsl
outsb
jecxz
cmpsb
jo
js
enter
cs
and
inc
pusha
out
jl
in
aaa
push
imul
sub
jmp
cmp
movsb
mov
ja
ss
and
xor
pop
je
fsubp
mov
mov
pop
and
pop
scas
pop
and
pop
pusha
subb
pop
or
push
gs
mov
xor
daa
mov
push
sbb
jg
jno
pop
adc
push
sarl
sahf
jo
dec
and
jbe
inc
adcb
ljmp
outsl
push
xor
into
pop
in
rcll
pop
add
es
stos
fcoml
inc
mov
cwtl
or
dec
addr16
pop
mov
popf
adc
ss
pop
fnsave
aad
rorl
ja
push
sbb
jp
cmp
push
scas
mov
pushf
cld
out
jmp
in
ret
insl
push
sub
data16
dec
movsb
dec
iret
cmp
adc
int3
loop
or
into
push
mov
cmp
add
mov
cmp
inc
jle
or
jno
test
addr16
cmp
mov
adc
mov
mov
jge
push
xor
insb
mov
jle
add
fcmovnu
dec
mov
int3
loope
or
or
lea
pop
ja
enter
div
out
fwait
lds
imul
dec
or
jl
ss
ja
fldcw
jg
outsl
mov
ja
es
ret
pop
lret
popa
test
xor
cmp
leave
push
xchg
movl
xlat
push
in
aaa
arpl
ret
bound
das
dec
jnp
jns
inc
fstpl
sarb
call
or
add
xchg
hlt
outsl
seto
lret
popa
in
shrb
fsubl
sbb
notb
jnp
mov
and
mov
dec
mov
imul
push
aas
add
xchg
mov
aad
sbb
xchg
sub
insl
or
popa
jb
stos
lods
or
in
movsl
les
inc
out
mov
gs
xor
test
pop
inc
xor
insl
xchg
mov
adc
jg
mov
movsb
add
add
xchg
xor
movsl
addb
frstor
es
jmp
fisubrl
sbb
clc
mov
aam
rcr
sarl
pop
adc
push
cltd
inc
cmc
pop
cmpsl
mov
roll
lods
dec
or
cmp
fistpl
andl
loopne
cmp
mov
jg
mov
imul
push
cmp
pop
inc
adc
lcall
enter
xlat
sbb
cld
pushf
push
xor
les
daa
jmp
inc
loopne
jbe
mov
add
fadds
shrl
mov
int3
mov
out
sbb
out
inc
mov
fstpl
xchg
cmpsl
ret
bound
adc
arpl
aam
sub
cmp
xchg
cmpb
push
mov
movb
sti
dec
adc
xchg
das
sub
stos
adc
or
fnstsw
xchg
mov
aas
fistl
jbe
movsb
xor
popf
push
lahf
mov
insb
mov
sbb
jg
dec
orb
pop
ret
inc
or
mov
xchg
enter
add
inc
push
xlat
mov
stc
sbb
push
popf
icebp
inc
xchg
scas
pop
xor
ret
sub
and
sbbl
xchg
pop
bnd
jns
jb
jae
fwait
stos
shll
or
lahf
fadds
push
mov
mov
mov
mov
xchg
push
sbb
insb
mov
push
sub
es
push
aaa
les
mov
movsl
cmp
add
xchg
jb
cmp
loope
out
pop
in
lret
test
xchg
stc
daa
sarl
pop
das
jge
ret
xchg
sbb
out
sahf
dec
mov
inc
ds
imul
pop
pop
or
subb
xor
data16
cmp
iret
stc
addb
xor
mov
inc
push
mov
addr16
call
loop
js
bound
mov
ds
sbb
sahf
out
xchg
imul
das
xor
lods
and
xor
mov
mov
stos
popa
adc
inc
bound
or
cmp
jecxz
das
cli
pop
js
cmp
sub
and
dec
idivb
dec
cmp
mov
into
xchg
xor
in
aam
and
or
ja
mov
test
add
bnd
icebp
je,pt
push
in
inc
sub
sub
push
inc
shll
mov
scas
in
mov
daa
iret
mov
fdivrp
push
pusha
xchg
leave
jno
xchg
popa
stos
mov
adc
mov
lcall
cmc
xchg
pop
adc
jp
jbe
imul
push
inc
rclb
dec
sub
sbb
lods
dec
sub
and
fstpl
enter
mov
ret
add
mov
mov
fxch
sub
inc
xchg
mov
mul
stos
test
mov
out
addr16
sti
addl
fcompl
ficompl
movntq
cmp
mov
add
fldlg2
pop
mov
stos
or
sbb
or
nop
mov
aas
je
movsb
dec
into
adc
scas
inc
jnp
idiv
loope
mov
test
mov
movsb
daa
in
jmp
push
mov
cmp
jecxz
sub
push
add
cld
mov
dec
xchg
pop
xchg
push
xor
sarb
xor
hlt
inc
shrl
popa
nop
mov
sub
and
inc
jnp
stos
mov
push
push
mov
dec
nop
lahf
mov
mov
jne
or
in
mov
mov
cli
push
pop
jne
adc
icebp
sbb
or
xorl
test
shlb
lret
xchg
int3
fisubrs
std
pop
jmp
adc
and
imul
pop
faddl
lahf
movl
pop
leave
loopne
xchg
xor
addr16
pop
adc
push
ds
xor
dec
in
mov
mov
jmp
lahf
dec
add
mov
sbb
jecxz
dec
test
mov
daa
cs
repz
stos
push
mov
adc
ficoml
inc
sti
adc
lods
xchg
dec
mov
movsb
lcall
mov
dec
and
into
cli
push
ficoml
lret
push
outsb
add
icebp
pushf
cmp
addr16
fs
push
and
mov
fs
bound
addl
scas
push
scas
or
outsl
in
or
inc
scas
push
inc
jge
sbb
pop
jnp
cli
sbb
das
adcl
xchg
dec
inc
cwtl
adc
clc
inc
mov
ret
xor
push
cmp
and
inc
sub
roll
adc
stos
iret
cmp
jne
les
xor
mov
arpl
add
jb
test
aad
add
mov
dec
mov
or
xchg
xor
mov
in
adc
shll
fcoml
mov
sahf
sahf
lahf
jle
cmc
out
push
sub
ss
iret
push
mov
stos
aad
daa
sub
mov
add
aam
inc
scas
pop
fimull
jle
call
push
lcall
fnstcw
sub
test
iret
in
and
mov
stos
insb
pop
jns
mov
shlb
addr16
adc
jl
and
ret
aad
nop
mov
add
xchg
xor
mov
cltd
repnz
add
scas
in
inc
ja
inc
sbb
imul
int
adc
xchg
sub
pop
cs
ficompl
sub
pop
shll
and
mov
lret
sarl
jbe
mov
in
cmp
scas
bound
or
pusha
add
push
mov
jg
mov
dec
scas
js
vmovaps
sub
jge
ljmp
into
jae
sub
mov
aad
ja
sahf
dec
push
sahf
lods
xchg
adc
mov
mov
arpl
vpsubsb
xlat
push
aad
lahf
popf
hlt
inc
mov
jno
push
xchg
add
cmp
cmpsl
and
adc
popf
pop
and
xchg
repz
jo
cmp
jno
mov
jae,pn
mov
leave
sub
or
popf
jmp
loopne
jp
test
pop
arpl
dec
into
shrb
mov
stos
js
out
xor
sub
xor
cmc
sbb
mov
mov
cmp
cli
mov
aas
jne
cmp
stos
mov
xchg
cmp
lahf
jp
nop
mov
out
lods
lret
push
cmp
inc
adc
sub
sbb
mov
ret
or
push
jg
aad
xor
dec
or
xchg
out
lahf
xor
mov
pop
call
inc
inc
mov
cmp
int3
pop
sub
sbbb
ret
cwtl
pop
mov
lds
mov
dec
cltd
out
cmp
aas
arpl
rol
sti
mov
idiv
cmpsl
in
inc
iret
push
movsb
cmp
pushf
push
push
in
aas
bound
aam
out
in
and
cmp
pop
mov
pop
add
sub
js
mov
xchg
jge
cli
jne
jge
rorl
mov
xchg
call
out
scas
in
jp
push
rcrb
jg
aas
xchg
je
sbb
push
loopne
rol
icebp
iret
jae
pop
mov
dec
outsl
xchg
int
xchg
in
in
fimuls
jae
push
ljmp
cltd
xchg
jle
shll
cmp
imul
push
inc
xlat
xlat
pop
shll
sbb
dec
sub
test
fs
leave
mov
lret
mov
inc
cmp
jno
inc
iret
std
jbe
into
inc
adc
adc
push
push
ss
jmp
aaa
in
jmp
dec
lahf
stos
mov
add
add
gs
jns
out
add
xchg
out
sub
cmpsb
out
or
sti
pop
adc
adc
mov
decl
hlt
fwait
pushf
call
shll
mov
mov
jne
add
mov
loop
gs
mov
hlt
ljmp
mov
inc
in
add
into
xchg
fs
ret
pop
xchg
push
adc
mov
icebp
insb
push
aam
mov
movsl
inc
pop
clc
movsl
sbb
fs
and
xchg
cmpsb
xchg
pop
into
ret
xorb
jo
fs
fst
sub
jle
pusha
outsl
sbb
mov
push
add
adc
fistps
insb
jae
in
pop
push
mov
mov
or
adc
push
cli
fstps
xchg
pop
push
stos
mov
adc
icebp
sbb
pop
pop
dec
sub
aaa
jl
dec
aas
pop
stc
mov
and
jo
imul
jbe
dec
mov
movsb
mov
mov
xor
cmp
outsb
mov
call
outsl
mov
sbbl
jl
xchg
or
push
sub
and
fwait
sub
sub
cmpsb
xchg
aam
lods
loopne
pop
out
repnz
xchg
jbe
stc
insl
iret
pushf
rclb
movsl
pop
pop
dec
pop
inc
xchg
in
cmpsb
lods
pop
or
fldcw
es
inc
mov
leave
sbb
mov
push
mov
push
cld
les
push
pop
xor
dec
push
cltd
lds
inc
js
mov
sub
dec
hlt
not
fbld
dec
cmpsb
mov
add
add
int
int3
mov
fwait
stos
in
dec
mov
mov
pop
pop
lds
repz
and
inc
pop
push
in
sbb
sbb
test
jle
mov
xor
push
inc
pop
mov
adc
scas
into
jne
pop
sub
fldt
xor
cwtl
xchg
jno
mov
decl
xchg
ss
hlt
dec
jg
xor
sub
adc
inc
sbb
fisttps
add
imul
or
lret
sub
dec
nop
push
cltd
pop
rcrl
cmp
int3
or
rcl
outsb
or
sub
jnp
arpl
int
test
out
out
sbb
jo
adc
xchg
popaw
jmp
and
aad
lret
mov
or
push
out
mov
mov
sbb
das
xchg
add
andl
inc
inc
add
lods
mov
fs
imul
out
repnz
add
sub
push
cmp
mov
mov
or
jmp
fcomi
inc
mov
push
xchg
sbb
inc
sbb
pop
sbb
stos
idivl
dec
and
test
lods
lods
cmp
sbb
hlt
push
ds
fists
sub
mov
mov
or
mov
cmp
clc
and
push
cmp
aas
jnp
nop
lcall
pop
xchg
test
mov
push
mov
mov
sahf
daa
stos
aam
push
mov
je
popf
lods
xor
cmp
pusha
repz
mov
in
in
and
in
cltd
loop
jl
imul
xchg
xlat
addr16
xor
xchg
adc
decb
cmp
mov
mov
movsl
push
dec
cmc
daa
int3
pop
test
mov
pop
cmp
arpl
add
push
dec
fcompl
mov
cli
add
rcrb
ficomps
xor
lods
in
inc
pop
push
lods
in
mov
into
add
leave
je
mov
lcall
jnp
cmp
xchg
lret
and
push
sbb
cld
xlat
push
mov
aas
test
push
sbb
test
cli
mov
inc
push
sub
hlt
mov
nop
fidivl
xchg
out
push
and
adc
add
add
inc
inc
mov
ret
jp
or
cld
fwait
out
pop
stos
pop
mov
mov
sarb
dec
push
psrad
ret
shlb
sub
mull
pop
xor
pop
mov
cli
cld
jecxz
mov
fs
jmp
xchg
sub
jl
or
sub
xchg
push
cpuid
sahf
inc
in
fiaddl
adc
dec
dec
movsl
sti
test
arpl
jp
push
pop
fisttps
cmp
ds
repz
xor
clc
and
push
int
pop
inc
mov
jnp
or
mov
adcb
in
popf
sub
sub
add
gs
jecxz
xor
jge
cmp
leave
sub
jns
pop
loope
in
pop
cltd
dec
mov
xor
jno
cmp
xor
rorl
js
ror
dec
idivb
mov
ret
inc
js
pushl
sub
dec
push
xchg
cmp
xor
add
pop
dec
xchg
mov
clc
and
lods
ljmp
clc
pop
fucomp
mov
mov
lret
cmp
push
jge
sarb
mov
fimull
arpl
pop
xor
jg
pop
sahf
ja
sbb
loop
cmp
das
jns
push
or
cltd
inc
scas
cwtl
push
shl
cltd
pop
popa
add
cmpsb
outsb
in
out
pop
rcl
dec
and
mov
inc
mov
fwait
mov
gs
xor
pop
mov
sbb
mov
lret
pop
mov
and
je
xor
test
in
cmpsb
mov
lcall
adc
xlat
lods
jp
stc
inc
sub
add
ret
test
leave
fcmovnu
ds
pop
cmpsl
jno
push
jle
cmp
inc
daa
iret
adc
cld
add
adc
cmp
mov
pop
adc
or
mov
in
inc
or
outsb
push
cmpl
aad
inc
cmp
mov
jl
cmp
addr16
push
add
es
fcompl
cmp
cltd
or
cld
cmp
push
popf
test
and
dec
or
xor
loope
pop
inc
cmp
cli
lods
test
jl
int
cltd
xorl
jecxz
push
sarb
inc
or
sbb
adc
dec
fs
test
xchg
jle
lahf
inc
int3
je
orl
sub
jg
adc
add
dec
add
xchg
test
test
add
pop
sub
sbb
push
insb
popf
add
cltd
mov
push
aad
and
cmp
nop
ret
pop
bound
mov
jmp
add
push
inc
cmp
dec
aaa
repz
stos
sbb
mov
gs
out
and
outsl
dec
mov
rcrl
dec
ss
mov
ss
nop
ljmp
push
jae
add
xchg
xchg
cmp
cmp
pusha
sbbl
jae
test
bound
ljmp
jno
stos
lret
and
xchg
cwtl
int
jno
mov
mov
shl
xchg
pushf
fistps
mov
ljmp
fstpt
inc
xchg
push
inc
push
xrelease
xchg
fchs
data16
add
imull
insl
xchg
addr16
push
aam
xchg
and
imul
lahf
mov
int
shll
outsb
fbld
out
add
lcall
jle
mov
addl
inc
add
push
dec
sub
in
xor
and
in
pop
and
adc
aas
clc
adc
push
iret
mov
xchg
and
ret
push
fcompl
fs
test
fistpll
scas
add
lret
sbb
lock
jbe
lods
mov
ret
gs
mov
lods
mov
mov
div
jae
xchg
lret
pop
test
mov
sbb
stos
push
cli
clc
and
pop
xchg
es
cmp
jmp
mov
out
xchg
dec
inc
adc
aaa
mov
jno
icebp
push
sbb
and
dec
mov
lret
add
cwtl
adc
cltd
dec
or
jmp
and
idivb
popf
jb
jge
mov
mov
stos
scas
jg
push
and
arpl
ds
push
outsl
and
dec
stc
inc
js
je
in
and
repnz
fcmove
mov
mov
lea
or
lret
dec
cmp
out
imul
cmp
fistpll
lea
aam
repz
mov
inc
testl
dec
push
popa
jno
add
add
xchg
cmp
popa
mov
ja
cmp
lods
out
ds
fs
sbb
fs
mov
lcall
arpl
mov
imul
mov
inc
mov
and
jbe
cmp
dec
mov
sub
nop
stos
shrb
loopne
add
jo
jg
sub
ds
ljmp
in
call
movsl
imul
mov
sbb
js
lahf
and
pop
test
or
jmp
adc
jno
sub
dec
add
jle
sbb
and
in
aaa
dec
imul
loop
icebp
cltd
subl
mov
and
inc
outsb
mov
std
rorl
cli
mov
jns
or
outsb
inc
push
inc
mov
cmp
aam
push
in
mov
xor
and
jmp
pushf
mov
arpl
jecxz
pusha
loop
cmc
dec
inc
scas
jg
les
mov
aas
enter
cmpsb
adc
sub
xor
cs
sub
dec
push
mov
pushf
xchg
popf
xor
inc
outsl
mov
and
sbb
push
and
cmpsl
jp
insl
js
nop
sbb
out
push
xor
fcomps
fnsave
and
int
int
leave
mov
gs
lcall
cmp
xor
pop
sti
loopne
xor
out
xor
lods
scas
pusha
scas
cmp
or
xor
and
adc
lcall
mov
and
lcall
daa
or
cltd
aaa
leave
and
je
add
and
ret
out
repnz
xchg
sub
mov
loope
dec
and
repz
scas
jge
int
or
stc
mov
call
and
fcom
push
pop
imul
dec
ret
stos
sub
scas
lock
fldl
sbb
mull
pop
insl
mov
inc
adc
mov
add
gs
or
or
pop
or
aas
jle
out
dec
pop
cmc
cld
inc
xchg
call
sub
dec
jbe
incl
jmp
aam
out
dec
jl
adc
shl
mov
xor
jecxz
cmp
and
pop
lret
cld
xlat
mov
pop
es
push
dec
dec
out
jecxz
scas
pop
pusha
xchg
stc
mov
loop
lahf
pop
sbb
jge
imul
cmpsb
fidivl
cld
movsl
bound
push
std
mov
pusha
fbstp
div
xchg
gs
jmp
repnz
jne
push
jnp
mov
dec
pop
loopne
testl
dec
xchg
daa
rorl
xchg
call
leave
mov
dec
ds
imul
inc
shll
dec
rorb
sub
lret
in
scas
fs
aad
ds
jns
adc
cs
addr16
or
mov
shlb
jns
into
insl
push
xchg
dec
shrb
mov
shll
outsb
repnz
fsubp
shrb
push
pop
popa
test
dec
cmp
mov
dec
pop
cli
xlat
movsb
ret
xchg
out
mov
insl
inc
mov
mov
adc
outsb
inc
mov
inc
add
push
mov
adc
push
pop
pop
adc
jo
sbb
push
push
xor
jmp
mov
xchg
sbb
mov
cmp
lret
xchg
add
hlt
mov
xchg
in
xor
je
movsb
or
ja
in
andb
push
or
pop
jns
or
dec
ret
loopne
and
fcmove
lods
nop
xchg
add
lds
data16
dec
or
jb
mov
mov
shrb
push
mov
cmp
divb
jne
in
movsl
jne
or
jno
jbe
sbb
inc
rcl
lret
mov
je
leave
cwtl
and
push
add
mov
mov
push
gs
pushf
outsl
xor
icebp
sbb
sbb
stc
cltd
arpl
in
push
xor
pop
mov
ljmp
subb
mov
jae
push
xchg
jo
dec
bound
notb
pushf
xor
adc
aad
mov
out
sti
or
sbb
jne
mov
les
sbb
fwait
sahf
sub
mov
call
cwtl
xor
mov
cmp
js
ss
xchg
decl
filds
mov
xor
dec
pop
jb
jmp
pop
js
aaa
or
xchg
xor
andl
push
sarb
cmp
into
mov
xor
add
and
inc
lea
xlat
or
clc
rcrl
jno
xchg
stos
popl
fwait
pop
mov
scas
mov
and
lds
sarb
cmp
jle
out
mov
pop
push
add
in
xchg
iret
rclb
or
mov
or
mov
out
dec
jbe
rclb
stos
or
jnp
mov
cltd
stos
pop
xor
popa
neg
clc
sub
ds
mov
pop
test
push
mov
add
adc
aaa
lret
fstpl
jge
int
repz
cwtl
dec
dec
lea
mov
inc
mov
push
jge
imul
mov
mov
addr16
lahf
xor
in
out
push
sbb
lahf
and
add
inc
repnz
mov
aad
sbb
mov
leave
repnz
fnsave
testl
xchg
fs
clc
addr16
sbb
cmp
and
push
lahf
imul
scas
clc
adc
enter
or
je
adc
xchg
mov
inc
sti
inc
pop
fisubs
rcrb
fcoml
inc
push
sti
sbb
xrelease
sbb
icebp
mov
cmpl
sbb
inc
or
std
ljmp
sbb
shlb
mov
adc
shll
xor
xchg
test
xor
daa
aam
pop
lcall
imul
cld
cmp
movsb
adc
daa
insb
xchg
cmpsb
mov
adc
fcomps
push
and
and
out
cmpsb
int3
test
loopne
mov
mov
out
and
mov
in
fisubrl
dec
mov
movsb
aaa
push
aas
js
cmc
mov
fsubs
ds
inc
mov
mov
fldt
adc
cmp
cmp
les
sahf
add
nop
scas
cmpsb
mov
jl
push
add
push
adc
divb
mov
in
xchg
shr
mov
xchg
xchg
xor
cmp
push
imul
popf
or
into
sbb
ds
sub
repz
ja
rcrb
inc
xor
ret
andb
ja
jge
jl
fimull
lcall
fcompl
mov
mov
mov
bound
test
cmp
pop
loope
cmpsb
xor
xchg
inc
je
lret
js
sub
notb
pop
mov
adc
in
rolb
scas
pop
add
mov
stos
mov
in
mov
xchg
out
shll
dec
shll
push
fstl
or
imul
daa
addl
cmpsb
pop
imul
sub
aam
sub
mov
sbb
outsl
pop
mov
jle
xor
out
mov
repz
cmpsb
jno
cmp
push
scas
repnz
and
push
cmp
outsb
or
in
hlt
jg
jnp
enter
clc
fmuls
mov
hlt
sbb
je
cs
mov
test
shll
aaa
inc
lcall
push
gs
cwtl
adc
les
push
repz
sub
ret
dec
cmp
mov
mov
inc
mov
cmp
xchg
idivb
pop
cmp
icebp
mov
sbb
stos
adc
xor
sub
xchg
add
adc
fst
repz
dec
jno
cld
in
repz
sub
insl
sbb
cmc
fs
imul
add
lret
iret
xchg
push
push
sub
pop
lock
js
adc
mov
sub
fists
jae
push
mov
add
xchg
test
mov
lcall
lock
and
sub
testb
out
and
pop
sub
cmp
fwait
adc
add
out
and
or
inc
or
aad
cmp
or
jecxz
mov
jo
mov
popa
inc
push
ror
leave
jl
push
xchg
andb
loop
sti
and
add
icebp
cwtl
sub
cmpsl
sub
lods
push
int3
fnsave
or
lret
sbb
xchg
or
and
mov
or
mov
in
pop
es
rorl
addr16
jge
sub
into
ljmp
mov
sub
int3
mov
cmp
sub
push
xor
xor
lods
sti
jb
leave
dec
jmp
lcall
fcoms
stos
mov
in
movsl
mov
iret
push
and
jmp
cmpsb
mov
lock
out
rcrl
das
sub
and
jno
enter
mov
mov
add
dec
cli
and
cmpsl
xchg
add
mov
inc
icebp
repz
xchg
lcall
in
test
pop
stos
mov
cmp
push
jmp
test
cmp
xchg
dec
mov
or
lcall
cmp
jmp
in
les
xchg
pop
inc
movsb
mov
notl
out
shrb
insl
cli
js
outsb
sub
add
or
or
cli
xchg
lods
adc
sbb
test
in
pusha
addb
pop
and
mov
mov
xor
pop
cmp
push
jnp
inc
dec
adc
fs
iretw
je
test
lcall
add
popf
lods
push
shrb
mov
daa
mov
imul
cltd
adcb
add
ljmp
adc
adc
fdivrl
addb
adc
jns
xor
and
adc
dec
stos
xorl
fmuls
insl
adc
dec
xor
pushf
jl
inc
mov
and
or
pop
lods
xor
jecxz
push
pop
jbe
loop
inc
xlat
sbb
xchg
sub
into
lds
xlat
aaa
sub
pop
test
dec
xor
repnz
ss
ret
mov
js
sbb
fadds
arpl
mov
mov
dec
in
or
out
int3
outsl
mov
xchg
sti
mov
dec
and
pop
cmp
sbb
int
pop
adc
inc
and
inc
or
sar
addr16
push
add
sbb
and
push
and
mov
int3
sub
clc
cmp
ret
push
lcall
sub
add
popf
adc
fwait
insb
sbb
cmpl
out
adc
cmpsb
xor
push
rorb
mov
and
gs
popa
jp
repnz
cmp
and
aad
lock
jecxz
and
push
mov
loopne
out
mov
xorl
cmp
stc
pop
out
test
and
stc
sub
cmp
loop
cmp
notb
and
xchg
das
daa
lock
inc
jb
loopne
fiaddl
testb
testb
leave
mov
dec
aaa
and
mov
push
shlb
daa
sbb
out
mov
pusha
sbbb
inc
and
pop
cltd
scas
ficomps
mov
aas
cwtl
dec
xchg
add
lret
cmp
push
mov
and
fistpl
add
add
adc
add
sbb
xchg
hlt
aaa
roll
aas
pop
movsb
movsb
cmp
das
push
dec
cld
fstps
lahf
pop
imul
add
jmp
pop
dec
iret
and
scas
mov
dec
stc
or
pop
add
pop
lret
dec
nop
in
stc
mov
mov
in
mov
dec
push
cmpsl
enter
mov
fidivrs
aad
mov
inc
pop
jp
push
ffree
sub
jge
test
mov
xchg
movsb
test
pop
insb
add
xchg
adc
sbbl
push
insb
sub
sub
mov
pop
push
cltd
xchg
push
repnz
iret
mov
test
call
cmp
xchg
push
mov
insb
add
mov
lahf
imul
insl
xchg
addl
push
cmpsl
lods
sub
push
sub
ljmp
pop
fwait
outsl
pusha
mov
test
lea
jae
ret
mov
push
mov
rclb
fld
out
lea
in
and
pop
int
pop
in
dec
or
push
sahf
mov
es
arpl
jns
mov
inc
cmp
add
jae
loope
fwait
ret
mov
push
xchg
pop
fisttpl
into
mov
shlb
sub
pop
movsl
push
fdivrl
mov
adc
gs
addr16
in
dec
mov
test
in
imul
loop
pop
push
or
loopne
lcall
xor
adc
scas
jg
and
stos
inc
pop
push
insl
jl
outsl
jno
or
jae
or
nop
cmp
xchg
fdivrs
jnp
pop
xchg
mov
subb
adc
fwait
xchg
test
inc
arpl
jmp
shll
mov
loopne
aas
in
aad
fadd
lods
repz
jns
imul
xor
cmp
push
scas
adc
shrb
pop
add
fidivs
popa
out
scas
leave
loope
daa
out
inc
je
insb
or
cmp
cmp
addl
and
mov
add
addr16
cmp
and
shl
in
and
in
sbb
pop
push
out
xor
aaa
pop
sahf
sbb
jnp
test
pusha
sub
hlt
adc
mov
or
les
repz
mov
and
adc
inc
popa
sti
cmp
pop
movsb
in
cmp
out
loope
aad
arpl
sbb
push
jns,pt
mov
outsl
mov
lds
sahf
ljmp
push
inc
insb
out
das
push
adc
push
aad
cmp
dec
sbb
sbb
mov
jns
jbe
push
sub
jnp,pn
lods
add
arpl
dec
add
pop
jno
es
mov
cmpsb
push
mov
xor
jne
xchg
call
mov
in
sbb
fwait
test
sbb
lahf
xor
xchg
loop
js,pn
xchg
shl
or
xchg
xchg
adc
ret
inc
push
and
push
ret
inc
fucomi
bound
pusha
fcmovb
xchg
mov
cwtl
sub
mov
insb
jns
rolb
mov
loop
or
mov
push
push
push
and
add
and
and
daa
leave
je
mov
xchg
inc
push
lret
and
sti
add
fstpt
in
mov
mov
lret
enter
fsubrl
and
cmpsl
lcall
shrl
inc
and
popa
add
int
mov
frstor
jnp
repnz
mov
movsb
and
push
call
pop
add
mov
jae
xchg
data16
dec
pop
and
clc
cmp
fs
jp
addr16
mov
aad
in
scas
jae
clc
leave
mov
lock
lcall
aad
sahf
leave
shlb
jle
rol
in
push
dec
inc
mov
and
mov
add
lea
and
push
ljmp
fcoml
shlb
pusha
gs
jp
jbe
jl
mov
sub
cmp
fwait
xor
adc
dec
sahf
inc
cltd
js
ss
inc
loopne
lahf
jecxz
sub
mov
xor
jae
outsl
pusha
std
fmuls
xchg
sub
xor
fxch
add
cltd
cmp
xlat
shll
int
shrb
cli
daa
push
popf
push
aaa
imul
push
cmpsl
cmpsb
sbb
or
cld
mov
adc
dec
adc
dec
movsl
aas
call
add
pushf
sahf
fiadds
arpl
cmp
cmp
sub
gs
cmpsb
js
xor
mov
ret
cmc
stos
mov
mov
jo
lret
lret
mov
imul
fwait
out
cmpsl
mov
mov
in
sub
ja
imul
xor
jnp
in
pushl
lret
push
mov
ret
sti
mov
push
pop
sub
ret
cmp
cld
test
dec
and
icebp
add
pop
iret
shlb
movsl
dec
subb
sarl
dec
xor
out
fsts
and
mov
scas
inc
insl
rcr
ss
jl
pop
xlat
jecxz
adc
scas
push
mov
jnp
out
jns
test
pop
push
dec
add
mov
in
into
sbb
insl
pop
lds
ljmp
fstpl
mov
das
mov
xchg
icebp
test
xchg
clc
jg
flds
lret
daa
enter
mov
jo
jg
lret
xchg
xor
lds
dec
and
mov
and
jmp
aas
lods
call
dec
pusha
insl
cmpsb
add
mov
push
cmp
and
fwait
cmp
dec
js
and
or
or
inc
mov
or
test
push
cmp
mov
xor
xchg
dec
sbb
lahf
and
push
lods
push
xor
rolb
int
lahf
mov
xlat
scas
jne
adc
imul
sbb
push
push
mov
std
out
outsl
lds
xchg
inc
pushl
add
aam
stc
mov
jg
ljmp
lret
cmp
dec
test
aaa
cmpsb
mov
pop
jnp
jp
cmp
sarl
xchg
bound
dec
jne
fildll
shrb
aam
into
xor
rcr
aas
call
mov
mov
insb
test
in
push
push
sub
fs
in
cld
add
mov
mov
jo
mov
add
mov
adc
sub
inc
pop
xchg
pand
xor
cltd
sarl
imul
dec
inc
orl
sbb
xchg
rcr
mov
push
cmp
int
cmp
lret
sbb
mov
shr
aad
cli
cwtl
mov
je
fldt
sub
js
pop
add
xorb
cmp
cld
stos
add
cmp
adc
jg
icebp
in
outsb
test
mov
bound
leave
fimull
lcall
fwait
into
imull
imul
jno
inc
xchg
pop
and
cmp
test
and
mov
addr16
stos
inc
ficoml
sub
push
jle
add
jl
cmpb
in
les
sbb
repnz
lcall
out
or
adc
mov
dec
dec
popa
xchg
sub
das
cmp
sub
lret
notb
dec
sbb
cmc
lcall
xor
and
mov
lock
cmp
cmp
int3
mov
mov
xor
cmp
add
xchg
ja
out
test
push
sub
rcll
mov
xor
push
cmpb
jecxz
jno
xchg
mov
jne
pop
sbb
insb
ret
or
pushf
mov
cmp
or
shrb
or
xchg
pop
loope
dec
rcrl
ficomps
or
cmc
jecxz
pushf
inc
add
mov
pop
das
jbe
xor
push
sbb
outsl
sub
inc
sahf
and
test
es
enter
insl
lds
bound
or
pop
cwtl
lods
dec
sub
mov
push
push
lret
mov
es
pop
mov
lret
sub
sbb
shlb
or
mov
mov
leave
ljmp
mov
ja
mov
ss
aaa
loope
xor
push
ret
add
clc
inc
jmp
aas
sbb
mov
test
or
call
xor
ja
inc
xchg
rclb
fcoms
scas
mov
cld
gs
andl
mov
popf
pop
aaa
fsubrp
bound
cmc
pop
fbld
roll
add
inc
and
inc
cmp
mov
pusha
fsts
mov
aam
xlat
cmpsl
outsb
xor
dec
test
arpl
cs
pop
out
jno
mov
shll
lahf
int
sbbl
push
lcall
pop
sbb
cbtw
jb
cld
push
jge
test
xlat
jns
xor
and
push
aas
mov
cmp
aaa
repnz
and
mov
inc
cli
repz
mov
mov
lea
cmp
sbb
leave
mov
lahf
xchg
cmp
outsl
cmp
mov
ficoms
std
push
repnz
mov
mov
fnstenv
mov
sbbl
in
jmp
jne
and
push
push
add
shlb
pusha
fnstenv
adc
cmp
push
fldl
jbe
je
das
push
push
lods
popf
add
or
mov
xchg
ror
push
jecxz
pop
icebp
adc
cmp
idiv
loopne
mov
jno
aas
dec
xchg
rolb
hlt
push
into
mov
push
xchg
clc
mov
pushf
jmp
jecxz
fcoms
or
mov
sbb
pop
out
addb
loope
fsubrs
popa
dec
add
rclb
fwait
inc
jmp
push
and
mov
and
stc
jnp
out
mulb
les
mov
imul
ficompl
cmp
popf
aaa
cmp
add
sub
xor
mov
mov
jbe
jno
push
orb
cmovbe
das
adc
jl
or
mov
sub
mov
pop
mov
push
ret
stc
repnz
mov
lcall
xorb
cmc
ja
inc
push
cmpsb
loopne
add
mov
dec
loop
mov
sub
sub
cwtl
inc
sbb
popf
xchg
clc
mov
pop
lret
cmp
call
cwtl
xchg
and
aam
cli
add
add
xor
ror
pop
call
dec
jle
sbb
cmp
and
mov
inc
aaa
pop
jmp
rorb
jb
jg
sahf
sbb
daa
movsb
mov
test
scas
pop
movsl
mov
lods
call
sub
leave
out
sarb
fdivrs
movsl
or
call
push
nop
inc
fnsave
mov
mov
dec
dec
xor
push
inc
aad
addr16
ja
jo
out
pop
inc
ljmp
or
cli
or
mov
inc
incl
aad
sahf
filds
push
mov
aam
scas
insl
mov
adc
pop
add
stos
mov
jns
inc
out
sti
mov
xchg
dec
cmpsl
add
test
push
and
js
jecxz
bnd
mov
mov
enter
lods
sahf
jecxz
mov
je
addl
lds
push
jle
call
scas
mov
inc
imul
loopne
andl
xor
in
rcll
or
pusha
jns
ret
insl
loop
and
sbb
pop
mov
and
in
push
hlt
cmc
push
hlt
add
enter
add
ds
mov
or
fdivs
dec
test
bound
dec
sub
in
in
outsb
or
push
ja
xor
push
adc
jecxz
sub
dec
call
xor
jns
push
aam
or
test
iret
pop
stos
or
insb
mov
std
push
cs
aaa
dec
popf
mov
mov
cli
inc
adc
daa
cltd
clc
add
inc
sbb
dec
lds
in
xor
mov
or
xchg
incl
packsswb
ret
lahf
loop
negb
or
jnp
in
repnz
mov
popa
cmp
repnz
stos
ljmp
andl
sub
dec
mov
mov
mov
ficomps
je
jb
ret
aaa
mov
popa
xlat
ds
push
cmpsl
pop
adc
test
sub
test
movsl
loop
call
mov
ds
scas
scas
cmp
push
daa
mov
pop
push
dec
jge
bound
pop
pop
repnz
fistpl
repnz
outsl
sbb
repz
adc
add
push
out
adc
inc
and
add
cmp
pop
mov
jg
daa
adc
xor
stos
cli
shrb
dec
movsb
iret
repz
test
jb
jmp
pop
frstor
and
mov
fnsave
test
leave
adc
cmc
gs
jle
sbb
jecxz
or
or
fidivrl
mov
pop
rcrl
testl
cld
mov
dec
in
sbb
fwait
push
inc
decb
mov
andl
js
jge
adc
lods
sarl
jecxz
ja
mov
push
pop
cmp
push
int3
xchg
adc
int
pop
push
int
lcall
push
mov
cld
jne
and
mov
je
inc
test
stos
imul
or
mov
fcmovbe
cmpsb
and
add
xchg
js
xchg
ss
xlat
in
sub
xor
jae
lock
add
call
cmp
add
cmpsl
sbb
and
lods
cwtl
imul
mov
adc
nop
lret
test
cmc
xchg
jae
out
mov
inc
js
mov
das
enter
add
out
and
das
ret
or
mov
cmp
lret
in
mov
in
mov
sbb
add
scas
or
aam
cmpsl
rcll
cmp
xchg
movsl
fmuls
test
popa
lds
add
mov
data16
lret
push
jmp
mov
xlat
xor
popa
scas
mov
fdiv
ss
jbe
lahf
pushf
xorl
and
arpl
dec
inc
xor
push
add
xor
adc
xor
mov
pushf
add
les
psllw
mov
fists
push
fsubrs
dec
inc
movsl
daa
push
sbb
sbb
sub
xor
xchg
out
dec
xchg
inc
int3
mov
fisubl
pop
shll
or
stos
in
mov
push
or
mov
xor
aaa
mov
addb
mov
mov
sub
or
push
daa
fistps
ja
jnp
mov
mov
sub
int
pushf
sbb
lcall
jno
fildl
cmp
xlat
sbb
pop
movsb
mov
cmp
sub
stc
fcmovb
xor
fcmovbe
sub
xor
stc
push
dec
fistl
inc
ss
popa
adc
mov
out
les
add
cltd
rcrl
sbb
lds
xchg
dec
dec
adc
fwait
sahf
xchg
or
or
mov
xor
jl
jl
daa
jmp
js
sub
pusha
and
outsb
mov
xor
cmp
dec
test
add
push
insb
out
dec
inc
sub
and
add
pop
leave
int
mov
ljmp
sbb
pop
mov
sbb
push
push
mov
insb
jo
in
dec
push
xchg
fstps
jnp
jle
xor
scas
out
dec
mov
cmp
mov
jp
cmp
fwait
loopne
int3
cmpsb
xchg
nop
ss
or
out
lahf
lods
xchg
pop
out
mov
scas
mov
addr16
xor
sahf
pop
pop
data16
push
sbb
or
pop
mov
into
push
pop
xchg
pop
push
cmovae
push
push
inc
sub
movsb
dec
lret
push
push
jbe
jae
fistps
mov
clc
subl
sbb
mov
enter
mov
mov
cmpsb
mov
adc
pop
lret
andb
mov
in
pop
mov
mov
pop
fisttpll
faddl
cmc
sbb
mov
pop
mov
hlt
jmp
shr
outsl
jge
mov
mov
jge
jmp
test
mov
popa
mov
push
int
mov
popa
mov
adc
popa
jbe
dec
push
push
shll
addr16
les
cmp
push
push
in
scas
jl
repnz
ficoml
ljmp
in
pushl
jne
inc
lahf
daa
inc
inc
adc
repnz
pop
push
add
dec
lret
shr
aad
adc
test
sbb
nop
pop
or
mov
jnp
sarb
js
addr16
or
mov
mov
sbb
add
shll
adcb
push
jecxz
stos
mov
push
xor
roll
aas
dec
bound
aam
mov
inc
jae
adc
mov
je
pop
int3
rorl
movsb
xor
xchg
js
dec
xchg
js
into
aad
or
push
repz
mov
xchg
fstps
or
jp
cmp
push
cwtl
add
stos
scas
sbb
ret
inc
ret
ret
adc
out
imul
pop
daa
dec
cmc
stos
sarb
mov
jge
mov
xchg
sahf
lret
ret
jno
sbb
xchg
jno
sahf
pusha
mov
les
ja
or
cs
rorb
sub
jmp
mov
and
jns
adc
mov
jmp
jnp
mov
add
nop
int
xchg
mov
ljmp
pop
insl
jb
icebp
aas
pop
jg
rol
dec
jmp
int
aam
cmp
ljmp
fwait
js
mov
jecxz
lods
pushf
loop
daa
inc
insl
pop
push
movsl
sbb
repnz
lock
push
mov
sbb
xchg
and
fnsave
xchg
jg
dec
mov
jo
sub
cmc
mov
jl
pop
je
fwait
pop
sub
jmp
mov
and
pushf
mov
push
xor
das
and
jge
cmpsl
jnp
sub
push
dec
add
lar
mov
lds
mov
movsl
pop
push
scas
and
lods
add
into
dec
cwtl
stos
out
and
pop
jne
pop
and
aam
jmp
xchg
je
fists
pop
jmp
adc
inc
hlt
cs
negl
cwtl
jmp
adc
push
jbe
push
rcl
cmp
xchg
or
pop
mov
mov
mov
ds
in
dec
xchg
sbb
mov
lahf
mov
fnstenv
das
mov
xchg
add
sbb
cmp
dec
pop
rcrb
push
repnz
movsl
push
mov
and
jbe
mov
dec
pop
hlt
inc
sahf
addb
les
push
stos
sbb
cwtl
or
rol
dec
push
pusha
mov
ljmp
ja
mov
inc
xchg
jg
enter
jge
mov
add
jo
add
pop
hlt
aam
jnp
int3
or
fisttps
sbb
jge
mov
stos
scas
popa
push
mov
and
pop
stos
mov
out
push
pop
adc
inc
mov
sbb
hlt
sbbb
ds
inc
add
int
clc
pop
arpl
push
add
movsl
aaa
mov
fwait
mov
mov
or
or
cltd
fldt
inc
scas
and
sbbb
icebp
mov
sbb
out
idivl
sub
push
stc
es
push
push
jge
inc
call
out
je
push
bound
adc
fwait
adcb
jge
ficomps
and
sbb
dec
cltd
aad
adc
mov
test
aas
loop
mov
negb
mov
dec
mov
popa
leave
pop
mov
dec
mov
add
dec
stc
lds
repz
jb
movsb
mov
push
sbb
push
fildl
jns
leave
insl
jle
xor
inc
cmpsb
shll
rcrl
js
scas
rcrl
out
sahf
pop
mov
adc
cmp
xchg
sub
jb
mov
cmpsb
cmc
sub
add
xor
aam
mov
es
sbb
movsb
mov
mov
push
cmp
daa
repz
mov
fsubrl
add
xchg
imul
aam
cld
cli
inc
push
testl
inc
imul
mulb
jb
test
and
and
inc
xor
std
into
dec
mov
jnp
lds
xchg
mov
inc
test
in
cwtl
jle
mov
jns
push
mov
cmp
stc
inc
jecxz
mov
out
dec
lret
xor
adc
cmp
in
imul
jmp
icebp
pop
xchg
push
jp
fs
movsb
push
lahf
fwait
adc
mov
jle
into
and
jns
es
adc
frstor
rolb
bound
push
lock
xor
insb
aam
mov
cmc
add
fdiv
mov
lea
push
pop
xchg
lods
out
fcoms
test
push
jp
repz
rorb
push
mov
push
sub
adc
fwait
xchg
dec
pop
fcomp
inc
mov
xchg
adcl
add
aam
lea
stos
xlat
in
andl
mov
mov
out
mov
mov
jbe
pop
xor
sbb
inc
jbe
mov
aaa
xchg
minps
in
movl
dec
push
call
lock
cmp
fs
jl
mov
daa
adc
testl
imul
jae
fstps
insl
and
repnz
mov
mov
lret
cli
sub
addr16
int
into
push
lret
and
decl
pop
ret
sbb
shr
repnz
sub
test
mov
sbb
pop
xchg
ja
es
pop
xchg
ss
mov
mov
inc
xchg
inc
sub
sub
pop
mov
pusha
fcoms
dec
outsl
mov
sbb
add
cmp
push
cmp
sub
dec
jae
cmc
fiadds
cltd
mov
hlt
jb
mov
aas
imul
dec
and
pop
pop
stos
jmp
stc
enterw
inc
sahf
test
aaa
pop
lcall
cmp
loope
dec
dec
mov
dec
divb
mov
and
lcall
insb
fcompl
pop
jg
fdivp
push
cs
or
aad
cmp
jecxz
stos
inc
mov
fiadds
xlat
aas
mov
dec
xchg
mov
int3
sbb
and
imul
sub
pop
pop
sbb
mov
xchg
fsubrp
hlt
ljmp
out
adc
cld
and
cmp
xor
dec
fnstenv
or
lret
dec
cmp
enter
mov
mov
dec
sbbl
gs
hlt
sbb
jecxz
sahf
pop
aad
aaa
loopne
mov
and
cmp
fldl
call
pop
jne
adc
mov
xchg
pop
lar
lret
xchg
mov
ficoml
fdivrl
push
inc
in
leave
cmp
nop
adc
mov
mov
insl
out
insb
orb
sbb
push
jp
out
enter
shl
pop
hlt
pop
call
test
fs
lds
xchg
mov
std
mov
dec
les
js
adc
jp
arpl
sbb
decb
stc
xor
mov
mov
or
outsb
insl
insl
sbbb
popa
movsl
dec
in
jmp
ret
mov
cli
xchg
sbb
dec
ret
or
mov
cmp
jb
pushf
sbb
mov
mov
scas
xchg
jp
xchg
fcompl
stos
cwtl
lds
xchg
push
pop
push
and
andb
test
pop
adc
mov
pop
out
push
sub
push
fs
dec
adc
sbb
and
cmp
pop
pop
push
xchg
mov
sbb
mov
imulb
pop
fcomip
cmpsl
mov
nop
pop
inc
sbb
mov
loop
rol
jno
cmp
fwait
loopne
out
xor
jns
fpatan
notb
lods
adc
jl
shr
cmpsb
adc
jl
ret
outsb
pop
dec
arpl
xlat
mov
sbb
push
push
dec
sub
xchg
fisttpl
fdivl
notl
nop
int3
pop
dec
inc
add
out
cmc
jecxz
les
cmp
mov
inc
push
es
pushl
test
adc
push
push
movsl
data16
or
or
sbb
insb
aad
shrl
adcb
insl
lods
xor
or
insl
loopne
movsl
mov
mov
cmp
dec
jge
pushf
cmc
jl
dec
push
push
out
jb
or
jp
add
aaa
iret
stc
xor
jb
inc
addl
gs
icebp
inc
jge
mov
dec
push
jno
fldcw
mov
pushf
data16
shr
inc
out
shlb
test
and
aam
and
int3
out
jo
push
adc
cmpsb
fmull
sbb
dec
xchg
push
push
and
xor
ret
and
lret
xlat
or
xchg
das
stos
std
dec
bnd
mov
jb
mov
out
xor
aam
test
inc
movsb
mov
pop
pop
xor
into
push
mov
xchg
cmp
adc
inc
cltd
mov
push
push
pop
push
mov
cmpsl
push
fwait
outsb
lock
adc
nop
in
insb
enter
andl
dec
arpl
fildll
ret
jb
push
pop
dec
cwtd
jb
insl
loop
stc
sbb
mov
ret
ds
and
dec
mov
sbb
lret
bound
dec
mov
sti
in
lea
jno
std
inc
mov
sar
xacquire
xchg
loop
test
int
hlt
loopne
fisttpl
dec
add
hlt
cmp
or
imul
shr
test
pop
pop
rcrb
adc
sbb
and
xor
int3
fwait
dec
mov
jp
das
xor
rcrb
push
lcall
inc
add
dec
cltd
mov
out
jge
or
add
xchg
adc
sub
rcrb
dec
cmp
outsl
push
pop
loopne
in
dec
mov
inc
lds
clc
or
xchg
push
test
cwtl
xchg
cmp
push
mov
xlat
jmp
add
test
repz
mov
pop
loopne
sub
pop
xor
inc
scas
imul
adc
fs
add
lahf
or
or
out
cmp
jp
arpl
bnd
push
adc
pop
jnp
les
int
sub
js
xor
pop
add
xchg
ficoms
lcall
fimull
popf
out
jno
loope
int3
ss
sub
push
push
out
and
mov
in
mov
ja
push
cmp
cmp
std
sbb
pop
loopne
mov
and
mov
xlat
sbb
es
fdivp
in
loop
lret
popf
adc
daa
mov
loope
add
rolb
dec
jbe
xchg
cmp
add
and
adc
jmp
mov
push
or
add
int
lds
push
es
in
pop
mov
in
lods
test
xchg
test
pop
cmp
mov
or
mov
shr
xor
pop
mov
arpl
jl
fists
mov
sbbl
pop
call
xor
mov
int
mov
and
push
fsts
mov
out
outsb
rol
xchg
cli
test
fcmovu
xor
mov
sbb
or
dec
cmp
fistpl
mov
pop
into
in
int
lods
sarl
mov
dec
add
ss
sarb
add
test
repz
add
imul
or
sbb
rcll
inc
pop
mov
jo
xchg
dec
adc
or
pop
mov
xor
mov
mov
mov
daa
xlat
lret
aaa
push
lcall
add
adc
cmpsb
mov
or
adc
mov
adc
add
das
mov
sbbl
popa
sub
and
inc
adc
inc
jb
add
fwait
out
jnp
pop
sti
add
mov
stc
jb
push
mov
or
mov
cmp
or
add
mov
pop
push
push
or
sub
shrl
push
lods
stos
push
sub
lock
jmp
ret
or
sahf
fs
mov
movsl
repnz
daa
fsubrs
clc
adc
insb
fs
push
push
loope
fmuls
sub
pop
mul
sbb
fmul
cmp
int
lcall
dec
or
and
test
mov
mov
mov
fisubrs
stos
out
adcb
frstor
pusha
in
push
mov
loope
sahf
es
roll
mov
push
test
fstpl
movsl
pop
sarb
addr16
xchg
out
jae
pop
fwait
pop
call
jb
popa
les
shll
mov
arpl
sbb
and
stc
mov
iret
sbb
or
fbld
push
shll
aas
xor
push
jecxz
lret
ret
and
out
cli
xor
stos
mov
xchg
inc
int3
fnsave
push
jl
mov
and
andb
cltd
push
jle
add
inc
adc
repnz
xor
cwtl
and
xor
pop
or
adc
cmp
cs
call
cmp
adc
in
lret
xor
xchg
mov
jmp
stc
ret
dec
sub
mov
inc
push
insl
mov
bnd
lret
div
ret
int
and
jnp
and
pop
mov
mov
fs
fwait
mov
jnp
cwtl
and
lahf
jo
jns
mov
and
sbb
pop
mov
sbb
jne
adc
fsubrl
mov
push
int3
ret
cli
or
iret
push
xchg
pusha
mov
test
push
xchg
shl
in
imul
pop
clc
cli
mov
cltd
cld
push
cmpsl
xor
add
mov
dec
xor
mov
dec
sub
jp
loop
pop
sbb
dec
int3
pop
and
sub
and
pop
call
adc
stos
adc
mov
fiaddl
imul
addr16
mov
scas
sbbl
or
dec
jno
xor
leave
xorl
bound
movzwl
mov
out
mov
enter
or
stc
int
sub
sub
adc
ret
adcl
mov
push
out
lods
mov
scas
shrb
rcl
lret
jbe
add
jo
adc
insl
and
mov
movsb
mov
test
mov
arpl
mov
dec
fmull
xchg
clc
fiaddl
sarb
ljmp
mull
pop
cmc
xchg
in
mov
test
into
out
pop
aam
push
pop
int
push
mov
mov
cli
lret
mov
ret
push
mov
test
push
push
inc
jnp
pop
adc
adc
cs
fistpl
sub
aad
fwait
and
loop
sbb
mov
xchg
sbb
aas
in
and
mov
fcmovnbe
adc
inc
fbstp
shl
pop
or
sub
lret
orl
push
lahf
inc
lds
adc
int3
sub
push
and
push
mov
jns
stc
incl
cli
fs
lcall
xor
test
test
sub
mov
jle
lds
mov
xor
fiaddl
push
add
iret
sub
faddp
pop
mov
mov
pop
cmp
dec
mov
das
mov
fisubrs
popa
addr16
cmpl
sarl
mov
popf
repz
fmull
jo
sbb
push
into
sub
cmp
push
fbld
mov
cmp
xchg
out
scas
cmp
rolb
cmp
inc
test
cmpsb
xchg
addr16
cmpsb
mov
movsl
sub
scas
or
push
rolb
test
xchg
lds
jnp
jecxz
outsl
add
sbb
aaa
outsl
cs
push
jecxz
and
std
sub
shlb
enter
test
jp
adc
in
es
lock
mov
jns
push
ja
xor
bound
fcmovne
sbb
js
std
mov
ljmp
push
push
and
mov
adc
adc
jl
les
xchg
fucom
shlb
iret
ret
lds
ret
lea
fisubl
add
lods
mov
cwtl
mov
cli
mov
pop
xchg
imul
rorb
xlat
js
retw
sub
or
sbb
add
lods
adcl
push
sub
xchg
imul
sub
ds
inc
out
lret
dec
jbe
push
inc
xor
dec
ss
push
and
sti
fstl
mov
cli
push
rorb
xchg
dec
ds
iret
rcrl
stc
or
or
jbe
cmp
pop
test
sub
std
push
adcb
mov
sbb
push
cmp
cmp
mov
cli
xor
sbb
xchg
das
mov
sbb
imul
imul
push
sub
aam
aas
sub
rorb
jg
aam
push
pop
pop
and
into
add
mov
cmpb
scas
push
mov
sbb
and
ss
and
cmp
or
cwtl
push
mov
mov
or
clc
paddd
sbb
cld
xchg
and
inc
sbb
lret
test
jmp
sub
cltd
mov
mov
or
jge
mov
or
subl
pop
in
pop
insl
sbb
lds
rcr
xor
xor
cld
sahf
sub
dec
bound
sbb
push
dec
fs
jno
cmp
mov
push
push
in
cmpl
out
and
xlat
into
or
test
cmp
mov
inc
out
cmpsb
das
rcrb
pop
inc
mov
stos
xor
sbb
inc
cmp
xchg
scas
repnz
test
sbb
xchg
imul
jp
sub
adc
mov
inc
jns
and
repz
mov
imul
xchg
push
mov
or
call
push
xor
repnz
or
jmp
jns
inc
std
jae
mov
adc
out
push
iret
lcall
push
inc
out
lock
xchg
jo
pusha
rclb
test
jge
stc
or
loope
lahf
xlat
dec
xchg
rcrb
cmp
lods
add
dec
jecxz
mov
fnstsw
and
adc
mov
dec
out
push
data16
sub
xchg
xor
ljmp
mov
pop
jg
pop
nop
mov
xchg
movsb
aad
jecxz
movsl
sub
lcall
and
test
xchg
leave
mov
adc
dec
lret
cli
pop
in
in
dec
push
sbb
movsl
int3
jecxz
jmp
mov
insl
ljmp
pop
mov
sub
nop
mov
ja
stos
xchg
and
mov
insl
rolb
ficoms
jbe
clc
jmp
dec
orb
pop
mov
in
pop
inc
fstpt
fnstsw
subb
xchg
or
fcomi
cmp
xor
fistpll
ljmp
movsb
shrb
cs
pop
adc
push
mov
xor
xchg
add
jne
das
inc
in
leave
jo
lret
jbe
outsb
and
gs
mov
sub
fs
jns
sbb
mov
dec
xchg
lods
jne
lds
jae
es
add
and
arpl
cmp
mov
mov
mov
sbb
lods
or
dec
adc
mov
les
mov
mov
stos
mov
enter
ret
lret
shll
jno
pop
ljmp
jmp
idiv
push
mull
ja
pop
adc
std
cmpsl
mov
inc
mov
jae
jno
xchg
dec
hlt
mov
pushf
push
popa
xchg
popa
mov
sub
leave
push
inc
rcll
repz
pop
in
cs
fwait
pop
jae
mov
test
out
pusha
inc
dec
inc
je
in
and
fwait
or
fdivp
mov
add
pushf
add
inc
movsb
loopne
xor
imul
bound
and
xchg
jno
mov
fbstp
test
inc
shll
std
mov
pop
fildl
fadd
into
imul
insl
pop
cmp
jg
repnz
pop
test
shl
inc
pop
jecxz
pop
pop
outsb
lret
jecxz
int3
insl
jno
pop
nop
les
dec
or
inc
cld
cmc
or
shr
mov
shld
rcl
push
pop
xchg
mov
enter
sbb
rcll
jbe
enter
jo
ret
leave
or
mov
pop
fsub
sarb
data16
popa
lds
mov
lret
add
loop
adc
lahf
sti
shll
in
int
push
or
jg
xchg
hlt
call
lea
insl
and
push
hlt
data16
in
int3
test
mov
jbe
insl
add
mov
cld
dec
cmp
xor
into
add
bound
push
mov
jnp
clc
js
sbb
movsb
outsb
jno
sbb
and
pushf
aaa
adc
sbb
and
ffree
xchg
pop
stc
andb
icebp
movzbl
inc
jecxz
jne
gs
xchg
inc
add
push
xchg
or
push
lret
pop
imul
jge
out
or
jb
sub
int
push
pop
mov
int3
inc
mov
add
pop
mov
imul
sbb
shrl
imul
inc
outsl
fwait
icebp
sbb
cmp
faddl
mov
lods
inc
cmpsb
sti
inc
lods
gs
add
sub
mov
push
lahf
iret
test
mov
or
inc
mov
icebp
pop
cli
mov
push
xchg
test
adc
xor
je
insl
scas
cmp
sub
and
ss
dec
inc
or
jno
pop
cmc
inc
pop
popf
sub
inc
sti
in
ret
inc
sahf
repz
lcall
ret
xor
movsb
scas
pop
push
or
pop
xor
or
pxor
pop
ret
mov
pushf
push
add
xchg
or
cmpsb
sbb
insl
jne
in
pop
psubb
cmp
push
push
adc
and
mov
clc
push
sahf
mov
jno
push
int3
mov
mov
sbb
cmpsb
scas
inc
fisubs
add
add
mov
push
jb
std
push
or
inc
les
and
pusha
add
in
popf
inc
mov
shll
and
push
mov
adc
lds
sub
or
pop
xor
mov
add
fcomps
imul
xchg
push
cmp
sti
xchg
adcb
xor
xchg
jp
or
out
mov
xor
dec
js
dec
adc
push
lods
or
push
and
test
into
es
loope
cwtl
in
jnp
xchg
stos
cmp
xlat
adc
sub
nop
repnz
mov
xor
test
stc
inc
shl
test
iret
mov
pop
xor
push
cltd
mov
outsb
sub
mov
sti
pop
test
push
in
inc
mov
fadd
inc
sbb
popf
leave
and
enter
add
mov
loopne
and
adc
loopne
dec
lods
nop
inc
and
xor
xor
ss
sbb
lcall
in
sub
lcall
or
xor
add
cmp
jle
cli
mov
loope
add
out
movsl
gs
pop
pop
mov
push
inc
pop
adc
sbb
incl
jbe
in
lret
xchg
cmpsl
and
cmp
loope
pop
mov
cmp
lods
hlt
je
iret
sub
fisttpll
push
push
js
fwait
loope
aam
xor
xchg
xchg
insb
addr16
and
mov
push
inc
sbb
pop
xchg
sbb
mov
in
add
jbe
nop
adc
idiv
pusha
cmp
shl
les
sti
add
movsl
and
imul
lds
inc
mov
lcall
int
inc
xchg
pop
lret
mov
mov
mov
repnz
bound
repz
sbb
add
or
or
inc
les
lahf
outsb
and
lods
pop
rorb
fcoml
inc
lods
fdivp
shlb
jns
dec
popa
cmc
sbb
push
mov
dec
lods
adc
stos
cmp
mov
fmul
lret
sub
mov
mov
xchg
andb
fdivl
std
std
clc
dec
shlb
sub
outsl
repz
sub
or
movsb
inc
jno
mov
cmc
in
out
push
daa
les
mov
sti
inc
scas
push
or
and
pop
jbe
scas
cmp
pop
cmpsb
lods
sub
jae
lret
test
and
or
jmp
test
fsubrs
lock
cmp
es
hlt
xor
hlt
add
xchg
leave
ss
inc
mov
xchg
insl
divl
scas
popf
jo
cwtl
es
sub
push
mov
repnz
fwait
push
sbb
stos
insb
shlb
fbld
call
push
mov
sarl
inc
push
or
les
aaa
push
imul
sbb
lret
popa
dec
imul
sbb
dec
scas
aam
sub
rorb
xor
xor
movsl
and
mov
lcall
pop
lock
cltd
jae
dec
jae
pop
dec
cmp
pop
mov
popf
daa
pop
jl
jg
jge
push
pop
xor
xchg
and
mov
jbe
add
add
jno
xor
xchg
mov
pop
rol
loope
repnz
add
std
xorb
cmpsl
ljmp
mov
add
mov
xor
loop
prefetch
lea
arpl
push
jmp
sbb
movsb
pop
sub
jns
popa
xchg
xchg
repz
cltd
in
es
or
inc
inc
hlt
lods
cmp
sbb
jne
shl
enter
mov
mov
loop
sbb
dec
jb
inc
gs
into
pop
rcrb
aas
dec
inc
add
lock
pop
or
sub
cmp
icebp
jecxz
fildll
out
in
lods
xor
cmp
out
jmp
inc
insl
xchg
iret
test
sub
sbb
sahf
stos
shll
sti
jmp
pop
fcoml
int3
and
call
pop
repnz
out
xor
adc
test
shl
leave
inc
sbb
cmp
call
or
mov
sub
stos
dec
adc
bound
cmp
jg
cmpl
orl
inc
addr16
mov
add
mov
sahf
mov
pop
dec
fwait
jp
push
or
push
inc
jg
and
or
adc
jl
int
cs
dec
lods
decb
add
cld
out
mov
jecxz
cmpsl
cmp
cmp
pop
push
dec
xor
lcall
std
push
pop
sar
int3
mov
ret
adc
in
dec
loope
mov
imul
pushf
or
add
cmp
stc
xchg
mov
movl
or
dec
xchg
push
fdivs
leave
mov
arpl
gs
shll
ret
fstpl
or
pop
mov
call
aas
cld
clc
or
cs
and
clc
add
mov
adcb
icebp
cmp
mov
dec
push
test
hlt
or
mov
into
add
sbb
in
fdivs
scas
cmpsl
sub
pushf
mov
xchg
iret
pop
inc
ret
jmp
test
pop
push
and
mov
push
addr16
mov
inc
sbb
jge
aad
stos
sub
int
in
js
cmpsl
roll
xor
pop
mov
xorl
fidivs
in
andl
adc
or
adc
add
jle
xchg
add
jno
lahf
lds
xchg
popa
adc
or
xor
mov
or
xchg
push
cltd
pop
mov
xchg
mov
sub
ret
hlt
gs
sub
add
gs
jno
mov
mov
jnp
or
pop
pop
jmp
insl
sbb
test
xlat
je
dec
out
cmp
mov
lret
or
xchg
and
shlb
shll
cmp
popa
scas
hlt
pop
sbb
gs
sbb
mov
sbb
sub
jo
inc
jno
pusha
mov
int
lahf
repz
addr16
mov
data16
or
js
sub
sti
mov
pop
add
pop
arpl
cmp
aas
and
mov
fsubrl
push
mov
pop
dec
test
jnp
test
cs
or
jmp
data16
cmp
xchg
mov
push
rcl
inc
cmp
and
outsb
xor
je
cli
cmpsb
jg
mov
xchg
rcrl
pop
xor
ja
mov
aaa
or
ss
jnp
out
push
mov
dec
mov
xor
aas
cmc
dec
iret
add
js
fisttpll
mov
xchg
xchg
jno
daa
mov
fcom
or
lea
jmp
push
aas
sbb
jl
aas
into
and
lds
jl
mov
ret
bound
jmp
mov
into
sub
push
xorl
mov
mov
inc
fwait
mov
psrld
push
lea
insb
cwtl
or
add
outsl
imul
dec
xchg
xchg
sub
jae
les
mov
dec
mov
test
testl
int3
ret
xchg
mov
fists
scas
in
sub
stos
test
xlat
dec
xchg
scas
into
jb
add
mov
add
ljmp
ret
or
xchg
xor
femms
into
mov
test
test
fwait
or
ret
xchg
aas
add
flds
mov
lock
push
xchg
movlps
inc
shr
sbb
test
testb
cmp
getsec
fwait
adc
mov
xchg
cmpsl
lret
adc
jp
mov
pushf
dec
add
cmpb
dec
mov
xchg
dec
push
pop
std
repnz
outsl
les
xchg
xchg
push
idiv
add
fsub
jge
push
stc
scas
sbb
pusha
std
or
or
popa
add
jle
xchg
repz
inc
scas
cwtl
add
xor
cmc
jle
lods
mov
add
std
mov
adc
mov
add
cs
inc
ljmp
jp
pop
xchg
jno
xchg
cs
sub
push
jl
call
and
fcomip
jno
push
shlb
jbe
repz
xor
pop
sub
rclb
mov
out
pop
or
insb
mov
jae,pn
imul
pop
pop
lods
cld
sbb
scas
mov
orl
jno
sbb
inc
inc
outsl
fstps
adc
pushf
sub
jbe
aam
hlt
dec
add
add
js,pn
dec
jecxz
movl
jo
pop
sahf
jb
mov
dec
xchg
data16
popf
cmc
or
adc
test
or
mov
mov
push
test
ljmp
out
sbb
sbb
sbb
pop
ja
mov
imul
in
push
lcall
lods
imul
push
lret
ret
sbb
pop
jp
int3
addr16
lock
dec
rcrb
adc
enter
in
and
cmp
xor
inc
loop
adc
gs
iret
mov
in
push
fcompl
and
jnp
push
fnstcw
jno
add
rclb
sbb
pushf
jo
shll
pop
movsl
idiv
dec
jb
rcl
and
cmp
pop
xor
ja
or
xorb
mov
lods
mov
stos
cld
push
cmp
outsb
cmp
insl
ret
push
jge
push
sub
xor
add
sub
or
outsl
cltd
adc
cmp
in
sti
aaa
inc
out
jg
jecxz
gs
pop
pop
inc
out
repz
inc
fisttpl
or
sub
jge
jp
sub
xchg
loop
fmul
cmp
ljmp
jo
iret
mov
stos
imul
ss
jbe
mov
jno
adc
mov
pop
or
lret
aad
cmp
rcll
int
shrb
movsb
mov
add
or
aaa
push
adcb
jo
in
inc
inc
hlt
push
jbe
cmp
inc
test
adc
insb
pop
xchg
lahf
in
stos
mov
mov
adc
and
sahf
xor
jne
fisubrs
int
movsb
add
push
inc
mov
jl
sbb
cmp
shr
cwtl
adc
or
hlt
or
clc
rcrb
mov
imul
int3
outsb
jl
cmp
pop
cmpsl
js
mov
jle
xchg
in
pop
and
jo
pop
add
out
popf
xor
stos
mov
push
xchg
stos
xchg
arpl
sbb
loope
out
mov
dec
mov
lea
ret
out
popf
adc
sahf
lret
push
inc
popf
in
cltd
ret
push
popf
mov
shlb
pop
or
out
loop
cld
mov
icebp
mov
mov
dec
faddl
xchg
cmp
xchg
rorb
in
jg
rorl
idivb
cld
scas
and
fsubrl
xchg
clc
lds
mov
mov
and
inc
jae
push
adc
lcall
inc
mov
in
in
or
nop
cltd
fidivrl
lods
fldl
mov
sbb
push
int3
xchg
jnp
xorb
xor
mov
test
lret
and
cltd
or
inc
outsl
movsb
and
jmp
outsb
adc
jl
push
adc
mov
push
mov
in
jne
cli
push
and
pop
sbb
cmp
xor
pop
or
addr16
pop
cmp
mov
inc
pop
das
sbb
rcr
sbb
lret
cld
hlt
inc
push
xchg
jle
and
test
or
pusha
adc
sub
pushf
icebp
nop
inc
cmp
push
push
test
mov
into
or
push
in
or
fimull
dec
jae
les
lods
lret
ss
out
jb
mov
push
shrb
ret
scas
sbb
jmp
lds
subl
shlb
pusha
jbe
pop
notl
sbb
insb
inc
clc
leave
mov
cmpsl
adc
dec
cmp
jbe
in
jp
insb
stos
test
popf
inc
lods
idiv
test
iret
hlt
and
fildl
mov
jnp
sbb
sub
sarl
push
jmp
dec
fisttps
mov
sbb
adcl
add
sub
ficoml
add
inc
rcrb
and
adc
popl
pop
pop
xchg
jecxz
sbb
cmp
cli
and
xlat
inc
pop
popa
aad
push
fsubrl
fistl
sbb
add
or
movsl
dec
iret
mov
orb
js
popf
xchg
cmc
loope
add
add
jl
lea
sub
aam
in
mull
lahf
push
in
push
lock
mov
mov
lret
call
push
fnstcw
arpl
jno
nop
pop
mov
jge
and
stc
sahf
in
test
sbb
popf
jle
push
test
stos
cmp
mov
jnp
call
pop
scas
ja
ja
test
repz
fstps
sub
testb
and
push
int3
sbb
pop
mulb
in
stos
adc
outsb
es
xor
or
cmpsl
mov
pop
inc
cmpsl
adcb
outsw
sti
sbb
xchg
add
pop
inc
sahf
pop
jmp
je
rol
cmp
ret
or
adcl
jbe
xor
fildl
in
xor
js
sar
rcrl
mov
xchg
mov
push
dec
inc
mov
stc
and
xchg
mov
out
movsl
cmp
subb
pop
sub
and
xchg
push
aaa
cmc
clc
sub
pop
out
xor
jnp
pop
xor
jecxz
xchg
loop
in
test
and
mov
std
stos
inc
rorl
movl
popa
dec
pushf
sub
cmp
inc
inc
ja
aas
and
push
xlat
jb
aaa
test
insb
xchg
inc
cmp
daa
mov
cmp
or
jl
popf
push
out
sbb
loopne
test
or
in
sub
stos
xchg
push
lahf
cmpl
jecxz
sahf
push
adc
xchg
daa
cmp
mov
mov
inc
loopne
push
loope
dec
mov
test
adc
mov
fmuls
pop
mov
into
lods
ret
add
mov
imul
into
enter
jg
sub
xor
rcrl
fcmovnu
mov
les
or
add
xchg
lock
xchg
mov
shll
insb
rolb
push
lret
adc
mov
lret
dec
mov
ljmp
and
scas
and
fmul
push
push
push
fs
xor
adc
sub
or
mov
lds
xchg
out
out
mov
inc
pop
stc
push
push
cmp
cmp
cmp
pop
add
jle
mov
xor
ds
inc
std
lahf
les
xchg
jmp
push
int
rcll
lods
arpl
dec
enter
fstl
dec
shll
jmp
loopne
imul
mov
mov
ret
outsb
testl
sub
sbb
push
pop
aam
pop
cs
je
jmp
mov
sbb
mov
je
mov
in
out
mov
mov
fmulp
leave
jl
loope
out
in
repz
mov
jbe
mov
mov
mov
xchg
leave
mov
outsb
rcl
pop
sbb
mov
cmpsb
faddl
push
sqrtps
fiaddl
mov
adc
mov
xor
in
sahf
push
inc
subl
push
jg
adc
cmpl
in
mov
jp
aam
sub
and
mov
pop
iret
mov
in
adc
pop
push
scas
pop
repnz
cmp
or
setb
xor
dec
outsb
jns
enter
push
mov
mov
jl
out
daa
lcall
jp
jp
jg
fiadds
xchg
dec
sub
push
dec
adc
icebp
lret
xor
xorb
ljmp
in
xor
or
xchg
lcall
dec
fisttps
xchg
pop
fs
adc
cmp
cmp
insb
sbb
ret
enter
mov
adc
mov
pop
scas
cmpsb
pop
xlat
pop
das
mov
out
filds
mov
leave
cmc
adc
ljmp
imulb
xor
cmp
gs
and
mov
sbb
inc
lea
jns
pop
mov
jbe
jl
mov
mov
sbb
or
add
repnz
xchg
or
popf
push
fidivrs
adc
mov
loop
imul
pop
sbb
sti
out
xor
hlt
push
jnp
int3
pop
and
or
or
xor
jge
add
mov
push
dec
pusha
sahf
xchg
sar
cmp
push
pop
xor
xchg
xchg
push
add
sahf
mov
mov
mov
sub
xchg
add
hlt
adc
lods
pop
and
cs
mov
xor
dec
cs
cmp
movsl
mov
xor
jmp
test
mov
gs
mull
sub
rcrl
and
bound
adc
mov
sub
or
or
mov
xchg
xor
mov
dec
jne
jmp
mov
lcall
out
lcall
mov
mov
stc
sub
cmp
push
xchg
ds
or
jmp
lea
out
inc
jbe
icebp
mov
out
and
popf
aaa
push
mov
xchg
pop
popa
sbb
adc
rclb
sahf
rcrl
inc
mov
and
pop
in
mov
jno
repz
adc
popl
add
stc
xchg
lock
xlat
in
mov
mov
sbb
jmp
xlat
ret
sub
filds
cmp
in
jmp
mov
inc
js
push
push
dec
pop
sbb
lcall
hlt
mov
cmp
pusha
push
icebp
sub
das
add
sbb
add
pop
test
out
pushl
and
mov
push
test
leave
xchg
xchg
push
cmp
and
leave
jmp
mov
sub
test
gs
jo
call
or
pop
push
mov
adc
and
push
xchg
jp
cmp
push
ret
and
rcrl
dec
push
rcl
in
xor
xor
ja
inc
xchg
sbb
insb
repz
in
dec
mov
fisttpll
dec
rcrb
sbb
jle
ljmp
loop
inc
stos
iret
xchg
xchg
cmp
sbb
add
test
insl
jp
cmp
dec
stc
cmp
fdivrl
ja
mov
flds
psllq
or
cmpsb
jl
cmp
or
in
inc
lahf
imul
les
mov
shrl
jg
cltd
and
add
fcmovnu
push
aas
push
cmpb
out
aaa
push
hlt
and
call
mov
test
mov
mov
popf
call
repnz
ds
adc
fisubs
jo
sub
mov
mov
sub
inc
rolb
dec
js
sbb
fdivp
lret
xor
adc
mov
push
idivl
inc
mov
andb
inc
loop
mov
mov
pop
adc
add
mov
cli
add
call
xchg
mov
add
aaa
xor
adc
aas
sub
mov
mov
ss
sub
push
xchg
subl
rcl
sub
mov
xor
inc
or
pop
icebp
ret
stos
adc
clc
sbb
push
cmp
imulb
aam
jecxz
sbb
decb
outsl
push
popa
and
xchg
pop
rclb
gs
movsl
fisubs
xor
fildll
lret
sub
xchg
add
addr16
sub
mov
imul
int3
or
aas
sbbb
dec
popa
adc
ret
fs
push
cmp
xor
je
faddl
jmp
adc
inc
jp
push
daa
out
pusha
jmp
scas
fisubrs
rcll
sbb
lods
adcl
sar
cmp
outsl
xchg
jns
push
gs
lds
xchg
xchg
pop
out
popf
adc
lods
mov
add
pusha
add
xor
bt
jo
pop
push
mov
and
jns
test
jb
movl
pop
sti
test
mov
pop
outsl
popf
repnz
jmp
sbb
cltd
sahf
popa
pop
mov
fsubr
push
xor
cmp
pushl
es
adc
or
leave
insl
imul
stos
cmp
pop
push
pushf
into
hlt
iret
or
lds
jbe
cmpsb
mov
rolb
push
icebp
scas
jbe
xchg
lret
roll
adc
cli
fldt
fadds
sar
jecxz
testb
popa
rcl
hlt
rorb
pop
ds
add
ss
add
loopne
push
into
mov
pop
iret
scas
xor
loope
aaa
fdivrl
inc
in
sub
inc
clc
jae
xchg
arpl
in
mov
mov
xchg
sbb
jo
xchg
testb
sbb
xchg
lret
hlt
data16
xchg
hlt
and
push
aam
roll
inc
je
and
popa
jp
push
push
or
aaa
aas
adc
hlt
ficompl
push
xor
in
bnd
or
xchg
dec
mov
dec
push
mov
into
xlat
xor
sbb
lcall
push
mov
sbb
hlt
mov
xor
mov
add
cld
adc
into
outsl
dec
dec
rcr
popa
fimuls
test
push
jl
jbe
pop
adc
inc
xor
inc
adc
dec
or
testl
jne
cwtl
push
ret
clc
sub
movsb
jne
mov
jne
or
sti
mov
or
lods
cmpsb
sbb
xor
add
mov
mov
add
scas
pusha
jbe
call
jae
rcrl
push
or
clc
mov
test
or
enter
add
in
mul
jle
sbb
mov
sub
dec
sti
and
sti
pop
add
and
std
stc
jge
xchg
fadds
fsubs
outsl
std
and
clc
sub
aas
pand
out
repnz
adc
insl
push
xchg
adc
adc
fldenv
and
sbb
inc
lret
stos
sbb
push
xchg
push
jo
add
sub
cmp
xor
adc
sub
cmpsb
dec
xchg
aam
and
lods
in
jmp
inc
mov
adc
icebp
sub
adc
lock
mov
cmp
sub
dec
xchg
pop
sarl
cmpsb
jns
mov
lea
popa
lret
jmp
in
or
push
js
and
jb
push
xlat
add
call
push
mov
dec
aaa
fldenv
cld
clc
call
jp
jbe
inc
xchg
mov
adc
cmp
out
lods
xchg
mov
sbb
push
lret
cld
cmc
cmp
int3
sbb
idivl
inc
and
mov
cmpsb
cs
sbb
jmp
gs
adc
mov
scas
aaa
inc
sbb
pop
add
and
iret
cwtl
insl
jno
pop
push
dec
pop
cmp
mov
sahf
pop
stos
add
xchg
or
test
and
mov
jecxz
pushf
stc
addb
push
adc
arpl
pop
loopne
mov
push
cltd
add
xchg
mov
js
xchg
mov
mov
and
js
int
lods
jo
lret
add
stos
mov
mov
stc
lret
cmp
and
outsb
inc
xor
js
mov
push
js
cmp
outsl
popf
stos
fmuls
imul
int3
mov
mov
fs
mov
imul
add
sub
push
in
aad
mov
lret
testb
push
iret
jb
or
mov
divl
das
es
jnp
call
inc
mov
into
pop
cmp
cmp
dec
mov
or
pop
push
and
pop
in
mov
adcl
fcompl
inc
and
push
sub
add
fs
mov
inc
je
outsl
clc
outsl
ja
int
lahf
loopne
sbb
lahf
clc
mov
insb
push
sbb
push
inc
sar
sti
sub
xchg
cld
or
mov
iret
jo
fstpt
xor
mov
hlt
cmpsb
sbb
fidivrs
fldl
fwait
inc
frstor
imul
push
xor
xchg
enter
cmp
xchg
dec
movsl
fbstp
int
dec
jns
ds
leave
push
xchg
jbe
or
rorl
daa
cs
sub
push
lret
pop
outsl
sbb
or
xchg
fmulp
adc
add
sub
lret
aaa
inc
and
dec
mov
int3
sbb
insb
clc
cli
out
or
push
xlat
jae
mov
mov
divl
pop
pushl
int3
mov
aad
ljmp
cwtl
mov
sbb
pop
ja
adc
subl
or
repz
movsl
cmpsl
sbb
mov
push
pop
cmc
cwtl
out
ret
aas
icebp
xor
push
xlat
push
aas
cmp
orb
pop
cmp
xor
movsl
sub
push
cld
adc
sbb
cmp
or
pop
leave
mov
in
add
sub
int3
addb
pusha
or
cmovbe
int3
mov
dec
arpl
cmp
dec
jne
andb
cmpxchg
mov
icebp
xor
roll
std
xchg
dec
in
std
dec
xor
adc
or
push
clc
int
idivl
out
shrl
les
imul
xchg
mov
out
sbb
xor
xchg
xor
lea
movsb
cmp
cmp
adc
outsl
and
frstor
stos
jle
jb
xchg
out
sbb
xor
outsb
add
lock
sbb
pop
add
lods
dec
sar
inc
out
cltd
addr16
out
fisubrs
inc
xor
mov
mov
jmp
stos
in
push
nop
jg
repnz
fsub
mov
jno
and
mov
out
daa
fdivl
fdivl
push
mov
cld
mov
jl
xchg
xor
shrd
dec
test
fs
lret
call
les
mov
or
ja
push
call
aaa
shrl
pop
loop
push
shr
dec
push
out
je
cmp
loop
lock
enter
aas
mov
pop
adc
js
mov
push
in
inc
push
sub
inc
mov
out
or
adc
xor
clc
js
test
and
push
out
xlat
mov
cmp
outsb
pop
mov
lods
test
xchg
cmp
jns
and
insb
jb
xchg
adcb
mov
in
mov
in
andb
jne
ljmp
clc
sub
mov
mov
mov
cs
mov
push
and
adc
fmull
in
shr
cmp
lods
loopne
xor
mov
adc
inc
cmovb
adc
ja
add
mov
lahf
push
aam
pop
xchg
pushl
mov
pushf
push
xor
adc
push
in
mov
and
mov
or
ss
enter
in
or
cmp
loopne
xchg
and
sbb
filds
lahf
je
lea
adc
xor
mov
xor
sub
cmp
ss
lock
add
pushl
arpl
dec
repz
jns
cli
and
sbb
notl
test
cs
mov
lds
repz
icebp
adc
push
bound
push
xlat
in
xor
jp
mov
fimuls
enter
mov
mov
pop
sbb
insl
push
aam
outsb
push
add
insb
iret
cmp
enter
mov
aas
mov
push
popa
push
outsl
cmc
mov
push
adc
fistps
rorl
add
stc
imul
jp
push
cmp
jo
sbb
loopne
lock
outsl
xchg
scas
pop
aad
lods
mov
fsub
das
ljmp
adc
pop
lret
lods
lea
ja
rep
pushf
push
mov
push
pop
cmp
sbb
fistpl
pop
out
pop
orl
mov
cmp
sti
into
out
pop
cmp
outsb
cmpb
rol
cmc
sbb
sbb
jnp
repnz
icebp
or
sbbb
loop
or
jl
push
and
arpl
loop
cmp
mov
or
ss
ficoml
bound
std
inc
aad
and
xchg
push
and
and
mov
das
pushl
icebp
push
or
sbb
outsb
outsb
lahf
mov
jg
pop
rcr
sarl
fnstsw
xor
inc
pop
je
and
cmp
adcl
adc
jbe
inc
cmp
sbb
cmovne
mov
std
jg
add
pop
cltd
in
cmp
add
mov
jae
mov
ja
sti
in
and
std
in
push
inc
lods
mov
fdivrs
lret
ret
sub
jb
mov
inc
ror
ja
fimuls
push
inc
jmp
sar
lret
dec
jecxz
in
into
xor
cmp
jmp
test
or
andl
push
xchg
lret
pop
clc
and
sub
fs
push
xor
or
sbb
nop
add
and
lcall
jmp
shll
adc
or
jbe
in
xchg
adc
sti
mov
sbb
fs
sbb
mov
dec
shl
int
push
or
fs
idivl
out
xchg
stc
mov
mov
rolb
mov
dec
lret
jne
insl
pop
adc
int3
orb
and
push
shll
add
dec
or
lret
popf
sbbb
je
push
lcall
jp
lcall
dec
cmpl
gs
out
dec
icebp
cmp
enter
jecxz
rcrb
lret
xor
or
xchg
cmp
sub
push
in
push
call
mov
mov
jnp
push
fistl
aad
mov
das
stos
push
jl
xchg
adc
sbb
out
out
gs
das
push
test
ljmp
imul
mov
or
mov
fldcw
fcmovne
cmp
aad
fucomi
cmp
or
pop
jbe
jg
jmp
add
mov
xchg
push
mov
subl
lahf
xlat
aad
xchg
add
fadd
xor
adc
imul
push
push
outsb
popa
or
cs
jb
mov
loop
mov
sbb
rcrl
stc
inc
jo
ss
iret
pop
out
mov
add
xor
push
jbe
mov
xchg
jp
xchg
adc
insb
push
fbld
imul
shrl
cmpsb
repnz
rorb
pop
mov
and
adc
mov
lock
into
mov
mov
cld
hlt
mov
enter
std
test
cmc
in
push
pop
aam
repnz
in
mov
stos
mov
movsb
and
or
popa
ret
ja
mov
jno
sbb
icebp
xchg
mov
xchg
sub
aam
popf
fcmovb
inc
xor
shll
or
mov
inc
xor
and
or
push
fsub
push
mov
gs
dec
mov
jecxz
cwtl
sti
pusha
push
inc
xchg
xchg
or
xor
out
pop
dec
in
js
mov
add
movq
repnz
repz
je
popa
pop
pop
or
arpl
or
pop
push
sub
jbe
inc
sbb
lds
ret
pusha
repz
hlt
or
sbb
shll
push
je
lret
popa
dec
jo
inc
push
test
std
cld
dec
push
cltd
sti
jnp
sbb
cwtl
xorl
cmpsl
cmc
fdivrp
mov
sarb
out
cmp
or
jmp
ret
inc
push
sub
push
adc
mov
cmp
int3
lcall
js
dec
mov
icebp
rcrl
sub
ret
bound
sbb
subb
jle
outsb
repnz
iret
pop
jae
icebp
fnclex
pop
sub
cltd
push
or
lods
xor
xchg
push
nop
push
push
sahf
lds
pusha
inc
cmpsl
jmp
in
insb
jb
cld
inc
in
dec
pop
arpl
adc
mov
or
dec
jo
mov
rolb
addr16
push
int3
dec
les
mov
cld
xor
inc
jae
mov
jg
orb
jne
push
and
addr16
std
sbb
fdivrs
aad
adc
mov
mov
fwait
stc
jns
test
xchg
imul
decl
fdivrp
mov
push
and
cmp
lds
in
mov
add
ret
les
sbb
fnsave
negl
fld
enter
dec
popf
lods
addr16
mov
sbb
shrb
adc
aaa
stos
in
sbb
rorb
shr
sbb
xchg
insb
loop
jo
cmc
jge
ljmp
xlat
xor
ret
shr
sbb
pop
cs
imul
cmpsb
in
or
mov
mov
out
dec
xchg
pop
lahf
aad
pop
ficomps
pushl
cmp
add
xchg
sbb
pop
insl
lret
or
pushf
xchg
jb
push
jnp
mov
xor
inc
mov
jns
and
icebp
mov
inc
sub
dec
fildll
lret
jp
sbb
popa
fdivp
jp
jecxz
ds
insl
pop
dec
dec
lcall
pop
mov
arpl
push
fs
outsb
mov
add
sbb
dec
push
cmp
loop
pop
inc
inc
into
pop
inc
dec
jmp
scas
cmpb
jge
or
mov
mov
cmp
cld
imul
pushf
dec
xchg
mov
xchg
jne
sbb
out
cltd
or
push
jecxz
or
loopne
push
inc
push
xchg
or
sub
cmp
ss
push
or
mov
cmp
fdivrl
jp
or
mov
cwtl
ret
into
test
stos
nop
cmp
jnp
cli
mov
lods
push
and
adc
repnz
dec
xchg
inc
pop
cli
push
push
ljmp
pop
and
mov
sbb
dec
fcomps
dec
loop
ret
mov
into
and
and
icebp
push
loope
enter
hlt
sbb
sarb
cmp
adc
aam
outsl
sub
and
or
in
jo
pop
jmp
stc
pushl
test
ds
movsl
sub
xor
mov
add
cmp
fcoms
loope
sbb
ffreep
ret
and
xor
das
sbb
aad
push
loope
rcr
or
pop
ljmp
sbb
mov
sub
jle
push
enter
and
jle
xchg
pop
cli
jns
clc
aam
xchg
xchg
adc
jns
dec
mov
push
sbb
cmpb
pop
add
call
inc
jae
xlat
inc
ror
gs
sahf
fwait
insb
bound
jo
sbb
xchg
push
movsl
mov
outsb
fisubrs
jne
mov
mov
leave
aad
pop
jmp
jb
dec
jmp
mov
mov
mov
out
jle
pop
ret
xor
xchg
popl
repnz
out
mov
fcoml
jp
mov
mov
sub
push
std
sub
incl
sti
sub
loope
mov
jle
mov
adc
sarl
lock
aad
sub
test
fdivl
bnd
mov
mov
push
sub
xchg
jmp
je
mov
cld
push
adc
sbbb
leave
add
ret
sarw
repnz
and
sub
imul
pop
test
pushf
pop
daa
fsin
cli
call
pop
fsub
mov
mov
xor
loop
fsubl
gs
add
inc
popa
ficomps
or
push
add
dec
mov
jo
mov
outsl
ljmp
test
dec
jge
leave
or
mov
push
lret
nop
mov
jg
mov
scas
inc
idivl
addr16
pushf
divl
scas
loope
jne
popa
cmpsl
jbe
mov
pop
push
xchg
sbb
jp
out
fmuls
outsl
ljmp
jecxz
cli
pop
sub
dec
or
push
push
sbb
xchg
dec
jl
mov
hlt
push
mov
push
inc
sbb
xor
jne
and
ja
xor
popa
in
dec
lods
pop
mov
sub
adc
daa
arpl
daa
cmp
xlat
add
cmp
lret
call
sub
add
mov
int3
jmp
fdiv
and
cltd
add
arpl
push
xor
dec
jne
cli
call
ja
mov
ja
or
push
repz
inc
inc
stos
add
or
in
fcoml
push
cmp
stos
cmpsl
daa
or
lret
mov
fs
xor
pop
daa
shrb
cmpb
inc
cmpsl
adc
dec
outsb
xor
into
lds
jecxz
nop
jbe
jnp
mov
movsb
nop
adc
movsb
sbb
lret
mov
mov
rcrl
mov
lods
mov
in
clc
xchg
ret
scas
test
mov
dec
or
inc
add
sbb
sub
jae
in
sbb
lret
add
jp
inc
call
aas
mulb
insb
ds
sbb
popa
out
and
push
gs
rcrb
or
jnp
aam
mov
addl
push
movsl
test
das
dec
loop
xchg
sbb
test
xchg
movsl
iret
push
movsl
adc
test
mov
xchg
out
inc
xchg
inc
aam
mov
iret
jle
adc
daa
sub
shlb
js
out
xchg
mov
xchg
pop
pop
mov
and
xchg
icebp
ljmp
sub
je
inc
mov
xchg
xchg
aaa
cmp
or
pop
mov
and
mov
pop
rolb
test
mov
or
loope
lods
cmp
or
lahf
sar
aam
push
stc
jb
or
jbe
movsl
cmpsl
inc
adc
in
testb
addr16
inc
rcr
xor
pop
je
aam
je
mov
in
data16
push
aam
sbb
and
cmp
push
sbb
subl
in
pop
push
arpl
popf
sub
xor
out
push
outsb
andl
ss
and
ret
gs
adc
inc
push
xor
mov
xor
imul
jecxz
test
inc
jb
mov
rcll
jecxz
mov
or
xchg
test
mov
xchg
fadd
dec
or
mov
pop
int3
inc
stos
scas
adc
hlt
cld
cld
push
stc
inc
add
roll
cmp
sbb
out
vmwrite
sbb
jo
jo
sbb
sbb
std
jl
push
add
push
lret
loopne
sub
shll
dec
mov
or
sti
pop
icebp
inc
js
outsl
insb
xor
add
mov
rcll
sti
cmp
popf
sub
in
xchg
insl
pop
loopne
push
cmc
jg
ds
xor
aad
insl
ds
sub
jno
in
les
add
or
mov
sbb
push
dec
lds
cmc
or
push
outsb
fwait
cmpsb
jb
dec
push
add
popf
std
mov
jo
mov
cli
sbb
jp
push
rep
test
jae
push
std
xor
rorb
cld
mov
into
xchg
and
xlat
push
pop
insl
xchg
lock
std
xor
mov
adc
ret
fstps
or
popf
push
fldenv
lods
mov
mov
fmuls
cmpsl
add
jge
dec
es
lret
and
sub
inc
push
pusha
popa
or
out
xchg
loope,pn
push
inc
jl
pop
rcll
roll
inc
out
out
xor
fldcw
sub
shrl
add
pop
xchg
fnstenv
fwait
sbb
jmp
push
sub
stc
cmp
addl
sub
cmp
and
fadd
adc
mov
imul
insb
mov
jnp
stos
fsubl
loope
negl
repnz
jle
lahf
bnd
sarl
pusha
adc
push
pop
ds
ljmp
fcmovbe
sub
xor
jecxz
in
iret
pop
xchg
inc
sub
out
mov
sbb
pushf
sbb
jno
xchg
pop
icebp
xchg
xchg
fcmovu
scas
lods
cmp
mov
sub
out
mov
xlat
add
or
ljmp
outsb
sbb
push
push
sub
or
loopne
stc
pop
jp
sub
or
cmp
enter
fcomps
and
addl
cmp
pushf
pushf
dec
mov
imul
jge
out
jns
and
pop
mov
into
mov
and
negl
movsl
mov
cmpsb
into
fistpl
jno
dec
aaa
add
repz
pop
out
sub
sahf
mov
mov
pop
push
push
jl
testl
js
sub
xorb
add
add
mov
iret
add
cmpsl
add
dec
shll
and
add
mov
jbe
mov
lock
clc
add
add
jns
clc
jmp
jbe
fdivr
dec
les
adc
cmp
and
dec
mov
dec
mov
sub
imul
xor
fwait
mov
lcall
outsl
jg
mov
std
shrb
cmpsb
and
push
and
jle
add
mov
mov
xlat
fdivrl
ret
pop
ljmp
aas
cld
mov
inc
lahf
mov
push
pop
pop
jge
shrl
mov
dec
outsl
icebp
imul
lods
jne
jge
inc
dec
sbb
ja
jae
stos
dec
xlat
in
repnz
mov
imul
push
loope
lcall
out
sahf
cltd
cmp
insb
rcr
stos
stc
insb
sub
cmp
mov
lods
or
or
enter
mov
fidivs
mov
lea
sub
movsb
mov
push
mov
mov
call
pop
sub
outsl
or
pusha
movsl
mov
int
xor
movsl
dec
roll
lret
lea
push
rcll
jl
subb
mov
popf
icebp
aam
xchg
daa
push
pushl
clc
or
mov
jp
adc
int3
jbe
mov
stos
mov
mov
push
jns,pt
inc
std
es
xchg
xor
into
push
xchg
icebp
insb
stos
mov
sub
loope
es
mov
or
lods
xlat
push
lcall
rcl
es
out
add
or
push
and
pop
sarb
mov
filds
and
inc
mov
lahf
js
xchg
mov
inc
inc
adc
xor
outsb
std
sahf
xchg
mov
iret
daa
inc
sbb
flds
movsb
jb
cwtl
mov
std
add
jge
inc
rep
jne
mov
sbb
sub
test
lods
lret
je
loope
and
jecxz
jle
icebp
and
add
and
jge
inc
call
fwait
push
test
dec
loopne
cmp
shrl
cld
out
mov
imul
push
lcall
scas
and
cmp
int
imul
cmp
mov
hlt
mov
sbb
loopne
or
mov
rcl
dec
sub
test
sbb
or
adc
mov
popf
lret
lcall
sbb
pop
iret
fdivl
out
ret
and
pshufw
and
mov
out
ljmp
ror
hlt
mov
cmp
sbb
loopne
imul
aad
jle
xchg
subl
cld
jo
stos
sbb
stos
push
or
mov
imul
mov
in
hlt
ret
xchg
mov
popa
pop
leave
lods
lods
lret
fs
dec
jp
mov
jecxz
ffreep
xor
sahf
pusha
lods
pop
and
not
push
sub
push
ficompl
add
add
xchg
fadds
mov
sub
and
loopne
data16
sub
sbb
icebp
pop
push
jno
scas
or
fdivrs
cmp
movsl
add
pop
fs
es
pop
sub
sbbb
mov
sbb
lahf
pusha
jg
dec
fmuls
jmp
inc
cwtl
sbb
ss
and
push
clc
sub
cld
js
std
mov
push
push
fs
fbld
ret
loop
mov
lock
adc
jl
cmp
fwait
loopne
sbb
rorl
dec
ret
std
test
jmp
inc
push
or
test
dec
movsb
scas
and
mov
fs
pop
insl
fistl
iret
inc
adc
jl
adc
fcoms
mov
jno
and
cmpsl
pop
mov
dec
fdivrs
popa
fmuls
push
xchg
sahf
add
insl
sti
mov
pop
loopne
cld
or
jecxz
xor
sahf
test
and
mov
aad
lods
push
aas
dec
add
pop
mov
scas
cmp
or
scas
pop
mov
loope
or
rcr
jns
sub
push
lcall
sbb
out
test
ffreep
out
nop
stos
in
push
in
push
xor
and
push
loopne
lods
loop
mov
rolb
aaa
jecxz
fst
xchg
xor
test
repnz
jmp
xor
push
shlb
std
xor
dec
sbb
dec
pop
and
lahf
lcall
push
sbb
jp
dec
mov
jne
pop
adc
adc
loop
or
xchg
xor
cmp
mov
dec
and
or
fdivrl
mov
and
add
in
mov
movsb
and
notl
lods
mov
push
sub
jns
shlb
mov
mov
mov
cmpl
lahf
mov
add
cmpsl
inc
pop
xor
cs
jae
push
movsb
int3
add
stos
dec
mov
cli
or
cltd
cmp
pop
sub
push
lods
mov
insb
add
add
adc
shrl
adc
mov
out
repz
adc
les
outsl
push
or
push
xor
ds
pop
mov
andl
orb
cmp
rclb
out
imul
xor
inc
sub
jae
imul
ret
xor
hlt
mov
xchg
mov
mov
cmp
imull
mov
mov
cli
enter
xor
pop
adc
cmp
adc
push
push
sbb
scas
xchg
mov
rclb
imul
repz
cld
or
hlt
add
jecxz
leave
rcrb
pusha
pop
push
or
push
jo
mov
cmc
add
mov
fwait
mov
adc
push
daa
dec
mov
les
push
and
mov
and
shrl
lods
inc
add
hlt
lret
mov
lcall
jmp
inc
or
lret
push
pushf
or
shlb
xchg
lock
into
fcmovnu
out
mov
push
dec
push
sub
cli
sub
repz
mov
leave
xor
xor
jo
jg
fcoml
cmp
pop
fsubs
and
stos
push
outsb
xchg
and
mov
sub
jnp
loop
mov
jle
jp
push
inc
cmpl
in
lret
addr16
cmpsl
in
mov
mov
jle
test
ljmp
ret
mov
popf
daa
loop
ficoml
cmpl
adc
pop
jne
loop
addr16
sbb
fbld
adc
push
test
fmuls
cmp
insl
fsub
fwait
int
cli
sarb
jno
sbb
sub
fmul
ficompl
xor
mov
movsl
jo
adc
sub
mov
add
pop
cmp
sub
cld
stc
outsl
pushf
dec
stos
jmp
push
cwtl
mov
xchg
stc
fists
rcr
ds
push
or
addr16
test
cmp
popa
popa
lret
lret
pop
pop
adc
and
cmp
pop
mov
dec
push
xchg
inc
orb
mov
popa
xchg
mov
mov
lahf
xor
sub
xchg
popa
in
fdivrp
shlb
dec
insl
cmp
xor
mov
lcall
shll
jb
xchg
icebp
mov
dec
enter
mov
jmp
add
addr16
xor
xchg
jno,pn
sbb
adc
mov
xchg
pop
mov
insb
xchg
fcoml
js
push
or
out
dec
dec
jg
xor
adc
add
fildll
loopne
sbb
pop
jno
ret
incb
push
aam
mov
dec
mov
cmp
push
inc
cmp
and
inc
adc
xor
and
jno
pop
sbb
and
sti
dec
movsl
push
sbb
push
call
or
sti
clc
pop
insb
js
xchg
xor
push
push
bound
xchg
sub
and
sbb
jl
dec
leave
jecxz
lds
cmp
pushf
daa
jno
xchg
mov
push
pop
stos
xchg
clc
fdivr
xor
in
pop
inc
lcall
adc
lea
and
add
push
jns
pop
inc
fsubrl
pop
bound
mov
inc
insb
sbb
ret
pop
movsb
loop
mov
jns
xchg
repnz
test
inc
dec
imul
popa
aas
and
push
mov
adc
lahf
and
xchg
mov
push
arpl
lret
out
lock
mov
repnz
sbb
je
clc
adc
scas
cmp
aas
sbb
adc
adc
add
pop
pop
mov
xorb
inc
pushf
in
inc
inc
in
mov
jb
mov
imul
push
inc
jo
movsb
lds
push
loop
shlb
mov
dec
or
inc
fldcw
addr16
add
fcompl
mov
sub
or
jae
lds
popf
pop
pop
movsl
bound
adc
mov
push
mov
cmp
lcall
jmp
dec
xchg
lea
cmp
aaa
fcmovne
jbe
hlt
or
sub
push
push
mov
cs
shlb
fistpll
scas
scas
fucomi
push
call
aas
ret
fwait
ret
iret
xchg
fsubrp
dec
jo
aaa
push
add
pop
jge
xchg
popf
das
push
or
inc
push
aad
pop
fidivrs
in
stc
mov
jno
call
aas
or
pop
lods
mov
ds
cmpsl
sbb
mov
mov
adc
loop
inc
cld
sub
cmpsl
sbb
fdivl
dec
pop
jecxz
jl
jle
mov
push
mov
jle
pop
or
andb
gs
and
sbb
aam
push
ja
popf
subl
push
mov
sub
mov
sahf
fcmovne
pop
push
mov
loope
pushl
add
push
aad
sbb
cmp
or
outsl
sub
clc
mov
xchg
fs
test
cmp
scas
push
arpl
in
into
loop
inc
sub
and
pop
adc
pop
xlat
mov
mov
adc
pop
repz
jl
aam
sub
movsb
pop
enter
ljmp
cmpsl
lahf
jmp
fwait
mov
add
adc
mov
pusha
ret
clc
add
or
js
movsb
pop
dec
xchg
inc
mov
and
insl
adc
movsl
nop
cmp
push
xor
sbb
arpl
xor
lret
das
mov
stc
lock
inc
int
test
out
ret
sbb
inc
jecxz
xchg
dec
xor
or
mov
push
add
sub
jecxz
nop
andb
jmp
stos
pop
aam
jecxz
out
cmp
jecxz
xchg
add
sbb
sbb
ds
jb
sbb
shrl
jno
mov
mov
mov
xlat
aaa
roll
sub
or
das
pop
pop
out
ror
flds
call
pop
arpl
mov
and
jecxz
mov
jne
rcll
or
cmp
pop
mov
aas
inc
push
inc
xchg
or
ljmp
xchg
or
xchg
xlat
loop
sbb
enter
fstps
mov
jg
push
ficompl
xchg
dec
lea
or
sbbb
outsl
call
popa
out
xor
mov
xchg
mov
int3
jmp
adc
scas
add
pop
clc
mov
in
movsl
dec
dec
dec
cmpsl
sub
stos
rcrb
mov
xor
dec
or
xchg
icebp
or
fs
inc
fsubrp
outsl
xchg
outsl
ds
or
or
je
jmp
adc
div
and
xchg
punpcklbw
repnz
jle
xchg
or
or
push
dec
test
xchg
test
fs
mov
dec
lahf
popa
mov
enter
test
push
leave
or
leave
cltd
notb
xor
sub
sti
xor
hlt
mov
pop
hlt
push
pop
std
ret
jge
mov
in
add
or
aad
jne
mov
data16
pop
jb
scas
xor
jg
mov
or
jo
jns
test
mov
or
sarl
or
cltd
test
dec
sbb
lea
or
int
imul
xchg
mov
inc
push
inc
push
sbb
sub
test
mov
mov
icebp
add
dec
xchg
int
or
xchg
add
inc
arpl
nopl
dec
pop
ret
lahf
loope
mov
mov
inc
mov
adc
pop
inc
stos
sbb
pop
fucomi
repz
out
jb
add
pop
xor
or
ss
shlb
into
pop
push
pop
popa
sub
sub
out
sbb
test
leave
lock
lret
daa
xor
out
imul
popf
fiadds
jg
mov
rolb
pop
xchg
adc
dec
mov
xor
imul
xor
push
loop
dec
int3
push
jecxz
mov
sub
push
dec
cs
test
push
rol
sub
insl
xchg
outsb
mov
rcr
and
jb
sbb
movsb
xor
lock
test
jecxz
push
mov
lret
adc
or
push
in
sub
fs
fildl
out
rcrl
iret
sbb
dec
lret
mov
int3
shrb
dec
cli
add
mov
icebp
arpl
push
pop
addr16
adc
cmpsb
add
jo
shll
jp
stc
or
xchg
mov
cmp
movhps
push
fwait
pop
mov
and
cmp
mov
xor
push
mov
test
xor
xchg
stc
dec
inc
call
push
mov
mov
and
mov
aas
sti
jl
dec
clc
divb
lods
jnp
repz
gs
add
inc
sbb
add
jecxz
fidivl
adc
xor
jle
rolb
popa
and
sub
int
jmp
into
leave
push
daa
jb
xor
xor
dec
into
insl
dec
ja
enter
push
push
popl
and
out
sbb
dec
hlt
ljmp
imul
sbbb
aam
pop
sbbl
pop
cli
or
out
sbb
jne
mov
sbb
xor
fnstcw
mov
mov
subb
mov
mov
cmc
mov
pop
xor
adc
shll
or
inc
jbe
mov
xchg
cs
lahf
in
cmc
mov
lcall
leave
adc
subb
inc
mov
cmp
mov
jecxz
ljmp
gs
lds
lcall
ds
sub
dec
repz
add
jp
cmp
daa
mov
xchg
add
loope
movsb
ds
test
ss
ret
nop
sbb
fcomps
and
imul
cvtdq2ps
sub
sbb
adc
sbb
mov
mov
daa
fcmovne
imul
aas
or
inc
sub
rcrl
insb
jae
push
inc
xchg
scas
pushf
loop
jne
cmp
in
stos
loope
or
lret
dec
add
adc
sbb
mov
mov
mov
push
insb
in
jnp
out
loop
xor
or
sub
push
inc
jl
leave
fldcw
adc
popf
mov
adc
pop
mov
sub
push
aad
in
ja
and
mov
xor
jl
lds
cmp
pop
jno
cmp
sub
pop
mov
lret
xor
out
push
mov
pop
or
stos
test
in
xchg
dec
insb
imul
mov
mov
xchg
jo
push
push
movsb
ds
inc
xchg
xor
and
push
xchg
scas
cs
jle
rorb
push
add
mov
xor
mov
dec
outsl
mov
int3
dec
sub
mov
and
mov
sbb
ljmp
push
jl
hlt
sbb
dec
and
into
insl
imul
repz
das
lret
int3
and
cltd
sbb
jno
mov
popf
in
or
cmp
pop
add
fiadds
in
rolb
clc
xor
flds
mov
fisubl
adc
mov
outsl
mov
rcll
out
test
and
scas
push
or
xchg
test
jle
scas
scas
sbb
pop
pop
jb
ja
or
add
adc
cmp
int3
dec
xchg
out
sbb
lret
les
negb
movsl
add
sub
xor
out
in
in
dec
xchg
push
mov
addr16
roll
inc
cltd
pop
xchg
jnp
scas
add
arpl
je
test
loop
lods
fs
ret
cmp
dec
imul
in
lahf
xchg
jle
sub
mov
mov
leave
fisubrl
dec
scas
sbb
inc
adc
xor
add
sbbb
icebp
fnstsw
hlt
inc
fs
outsb
outsb
pop
adc
in
inc
stos
sub
test
jb
mov
and
int3
xor
popa
inc
and
stos
pop
cs
insb
xchg
and
mov
loop
pop
call
pop
out
push
sub
in
sub
mov
jae
mov
nop
push
inc
incb
pop
jl
popf
imul
cmp
shr
cs
movsb
sti
xchg
push
xlat
dec
dec
mov
imul
clc
sbbb
add
repz
into
shlb
mov
ja
aas
in
hlt
mov
ja
xchg
sub
ljmp
out
leave
jg
repnz
sahf
inc
push
dec
mov
sub
sub
xchg
test
mov
pop
out
and
sub
iret
pop
fistps
fwait
orb
je
pop
aas
cld
insl
and
arpl
xor
sub
aas
jmp
insb
daa
inc
dec
lea
jae
pop
dec
jecxz
jns
push
ret
sahf
subl
sub
fbld
in
mov
lahf
out
mov
data16
mov
sbb
mov
mov
jge
shlb
adc
cs
repnz
es
mov
icebp
rorl
adc
aaa
mov
pusha
je
insb
mov
xor
cld
pop
imul
xlat
jmp
or
sbb
testb
sbb
push
cmp
fisubrs
je
jmp
push
pand
loop
xchg
adc
dec
push
cmp
sub
jl
pop
xor
lcall
outsb
lahf
daa
and
cmp
loop
add
jp
popa
lods
fisttpll
pop
insl
mov
sub
int3
popa
nop
fwait
loop
mov
pop
jecxz
xor
fildl
movsl
mov
adc
cmp
aam
xchg
mov
sub
mov
mov
movsl
fsubs
xchg
std
das
sub
outsl
push
jbe
sti
push
jle
stos
movsb
in
repnz
fcmovbe
dec
push
lahf
shll
mov
jge
mov
sbb
jne
jnp
xor
sarb
xlat
add
cld
es
mov
imul
pop
cmp
ret
mov
adc
xchg
loopne
int3
pop
xor
xor
add
pop
call
loope
sbb
mov
fcoms
jl
mov
popf
int3
in
jae
push
pop
mov
inc
mov
fcomps
add
stc
dec
fistl
pop
subb
bound
pusha
fsubr
cmpsl
sbb
ret
and
shlb
mov
xor
or
cld
mov
mov
sbb
fs
cmpsl
push
loop
adc
adc
or
adc
jecxz
mov
repnz
xchg
testb
inc
add
push
xor
jp
imulb
cmp
sub
mov
or
icebp
inc
div
jbe
push
lods
add
outsb
js
xchg
int
es
jg
test
add
dec
inc
popf
test
loope
lds
shll
andb
dec
imul
push
sub
sbb
inc
int
push
xor
dec
push
lods
nop
adc
cmp
int3
add
xchg
jne
insb
pop
fidivrs
in
stos
sarb
xchg
pushl
loop
inc
cli
fistl
add
loop
in
test
icebp
mov
add
jl
jbe
fcmovnu
dec
insb
nop
pop
inc
mov
lahf
or
popf
push
dec
rcrb
cmpsb
sti
aam
or
jmp
xchg
and
stos
sbb
ficomps
outsb
lcall
xor
pop
call
pop
inc
add
pusha
ds
push
repnz
int3
mov
inc
adcl
sahf
pop
andl
lea
movsb
test
pop
daa
push
repz
xchg
mov
popa
rcl
xor
cmp
insl
mov
push
jbe
push
std
sbb
pop
lea
gs
xchg
adcb
push
ret
pop
lock
sbb
dec
xchg
xchg
pop
mov
and
fyl2xp1
cmp
out
imul
outsl
clc
sub
inc
sbb
dec
daa
sub
push
fldln2
dec
jg
test
jo
xor
mov
imul
out
lret
inc
iret
in
orl
inc
dec
outsl
pop
sub
mov
push
dec
inc
pop
xor
or
and
jl
jnp
inc
ret
mov
adc
push
movl
or
ss
mov
mov
push
aam
mov
frstor
clc
or
ds
in
sbb
cmp
ljmp
dec
loop
sti
add
pop
das
xchg
sub
push
test
sti
fcoms
into
shrb
repz
sbbb
lret
lea
cmp
xor
jae
rcrl
icebp
mov
shrb
outsl
and
jmp
aaa
adc
adc
in
rol
daa
sbb
in
in
and
mov
xlat
lds
int3
negl
pop
arpl
jno
add
iret
lds
cwtl
fbld
popf
mov
in
test
popa
std
test
pop
inc
stos
and
dec
push
push
inc
dec
mov
pop
or
stos
push
popa
jbe
iret
sub
out
xchg
test
gs
aaa
rorb
xchg
das
pop
in
fld
outsl
test
dec
call
mov
sbb
sub
dec
inc
mov
add
outsl
std
jno
addb
and
daa
insl
pop
daa
xchg
adc
and
push
aad
inc
in
mov
decb
xor
push
hlt
push
rolb
cli
push
dec
mov
jmp
mov
push
loop
out
enter
mov
sub
mov
test
addr16
and
xor
and
xor
es
std
push
sub
lods
andl
mov
js
mov
inc
divb
push
inc
sub
push
fildl
jae
xor
mov
xchg
int
pusha
adc
push
into
and
hlt
stc
mov
add
or
insb
subl
arpl
cmpsb
arpl
jnp
cmc
inc
fisubrs
outsl
int
test
shll
cmp
scas
push
xchg
xchg
adc
mov
shrb
addr16
mov
inc
stos
insl
aad
mov
jl
out
xchg
push
or
dec
mov
mov
xor
pusha
mov
dec
lods
or
mov
sti
aam
jmp
sbb
fnstsw
ret
add
or
xlat
xor
nop
cwtl
dec
lods
cmp
inc
daa
popf
mov
inc
adc
mov
setb
jmp
movsb
pusha
add
sarl
lret
adc
lret
push
cltd
lea
cmp
icebp
std
rolb
inc
int3
dec
inc
iret
scas
push
fsub
pusha
and
mov
xor
sbb
add
inc
pop
lods
dec
ljmp
xor
loope
xor
sahf
pushf
dec
mov
movsl
mov
iret
pop
jb
sarb
xchg
pop
xchg
cmp
sbbb
pop
sti
loop
pushf
sbbl
xchg
popf
cld
lea
repz
insl
and
adc
movsl
and
pop
xor
push
jecxz
jnp
aad
pop
cltd
je
pop
jmp
jl
mov
xchg
in
js
add
into
xchg
popa
fdivl
out
push
jnp
sub
mov
jge
movsl
popa
popf
mov
inc
inc
imull
push
gs
mov
andb
movsl
push
insl
leave
mov
lock
cmc
add
xchg
iret
aaa
mov
inc
xor
mov
test
lret
inc
test
rcll
repz
js
push
add
loope
sbb
xchg
movsl
sub
outsb
das
jae
add
dec
cld
popf
pop
nop
adc
push
mov
xchg
pop
shlb
lret
pop
movsl
lea
mov
inc
cmp
push
xor
xorl
cmpsb
add
rolb
stc
jl
cmpsl
cld
xor
sbb
push
dec
add
mov
stos
lds
pop
sbb
jle
push
imul
adc
adc
lret
loopne
xchg
pop
addl
sub
pop
pop
lods
mov
add
in
mov
mov
jno
push
test
fmulp
or
add
test
cmp
dec
inc
push
lea
iret
mov
inc
inc
mov
clc
lret
inc
orb
insl
jg
test
mov
jnp
sub
jecxz
or
cmp
inc
pop
mov
sbb
repz
mov
or
push
dec
xchg
add
enter
scas
fwait
lahf
xlat
shrl
cmp
out
pop
sbb
lods
arpl
lods
inc
push
and
cmp
ds
je
push
jge
push
adc
cltd
pushf
test
push
jbe
ficoms
jmp
fs
fdivp
push
dec
pop
or
test
xorl
out
add
xchg
daa
call
sbb
xor
inc
rep
lds
movsb
pop
xchg
cwtl
or
cmc
jne
inc
arpl
or
jmp
jl
mov
ficoms
repnz
bound
out
and
xchg
xchg
xchg
mov
incb
subl
mov
test
add
add
inc
mov
jge
imul
mov
scas
pop
inc
je
sbb
rcr
cmc
sti
sub
inc
jmp
push
sbb
insb
push
orb
dec
adc
cmp
dec
pushf
test
lods
pop
pop
mov
shrl
push
lea
dec
rcrb
in
push
lods
add
xor
rolb
imul
fwait
daa
mov
pushf
rolb
add
push
sbb
std
pop
add
fstps
cmpsl
xchg
mov
mov
inc
push
sub
xchg
fcomip
push
aaa
mov
mov
and
push
xchg
in
mov
xchg
add
add
push
adc
jecxz
ffree
popa
jae
pop
or
sub
mov
jnp
div
in
xor
sbb
pop
popf
jae
loope
fcmovnu
cmc
or
mov
mov
mov
cmp
pop
jb
add
lahf
pop
loop
jne
js
and
xchg
aam
into
aad
mov
mov
scas
cmp
sub
std
dec
pushf
out
mov
xchg
sub
or
sbb
mov
ja
out
inc
stos
inc
std
mov
insb
lods
or
and
adc
mov
xchg
push
sbb
ja
inc
add
cmpb
pop
mov
mov
mov
mov
xor
adc
imul
sub
add
inc
push
mov
push
frstor
lret
stc
lock
cs
jecxz
lret
loope
jmp
out
adc
xchg
xchg
outsl
mov
arpl
mov
fs
pop
lahf
jbe
shll
or
xor
jb
push
push
fmuls
pop
add
jae
jno
xchg
jb
mov
mov
mov
mov
push
push
jp
rclb
movsb
jno
mov
dec
xor
fsubl
adc
out
mov
roll
arpl
adc
lock
and
mov
in
add
hlt
gs
mov
repz
aam
xor
repnz
sti
into
inc
lock
arpl
cmp
loop
jle
xor
sbb
lock
add
test
bound
aas
jl
stc
lret
stc
sub
lods
xor
nop
jne
xchg
fstpl
ljmp
cmpsl
jns
out
pop
insl
mov
dec
les
cmp
pop
mov
mull
jnp
loope
push
fnsave
out
sti
inc
xchg
gs
clc
dec
mov
std
add
cwtl
mov
popf
mov
xor
popf
popa
aam
adc
xchg
ret
jns
out
data16
mov
cmp
sbb
add
push
xchg
push
push
adc
int
push
outsb
enter
je
das
ror
pop
fwait
movsl
rorl
lcall
outsb
sbb
mov
add
sub
data16
into
mov
mov
mov
sbb
stc
cmp
clc
outsl
push
add
add
scas
jo
fsubr
mov
or
mov
sub
loopne
fildl
and
in
xchg
jbe
out
sarb
add
pop
popa
lcall
stos
lahf
mov
adc
lods
fidivl
mov
pop
je
adc
rorl
cmp
xor
aas
sahf
push
jg
movsb
stos
les
jge
aas
loopne
mov
pop
and
mov
xchg
iret
fisttpll
xchg
dec
xchg
cli
push
stc
push
or
rclb
aaa
add
jle
jo
sbb
fcmovbe
movsb
cmovne
aas
shl
popf
mov
rorb
sub
ret
sahf
inc
stc
adc
lahf
xor
outsl
dec
shrl
mov
cwtl
fnstcw
and
out
sarb
std
fcmovb
in
std
and
mov
test
cmpsb
repnz
xor
cmpsl
stos
xchg
jle
add
popaw
or
xor
arpl
lds
sbb
into
andl
sbb
adc
out
pop
cmp
out
adc
jns
jl
addr16
fwait
pop
test
out
mov
or
xor
sahf
dec
add
mov
test
rcr
push
je
daa
sbb
scas
cmpb
mov
mov
divb
rcl
add
scas
int
dec
jnp
inc
inc
pusha
jo
shll
add
leave
lock
fninit
popf
mov
sahf
xchg
xor
rorl
fwait
js
or
jns
push
mov
xlat
xlat
jb
mov
aas
mov
cltd
jmp
adc
inc
pushf
or
dec
sub
movsb
jge
inc
aas
int
bound
pusha
notl
out
fildl
loop
pop
lock
hlt
mov
sbb
fwait
jb
dec
jno
mov
mov
xchg
shll
loopne
jb
pop
cmp
push
sti
das
fldl
mov
cmc
and
int
pop
je
sbb
jo
xchg
cld
xchg
pop
sub
adc
push
daa
mov
nop
pop
scas
out
pop
jmp
arpl
shll
sub
dec
sarl
enter
lods
mov
xchg
sbb
lret
add
incb
dec
sub
adc
cltd
fstpl
pop
mov
sbb
pop
int3
cld
push
jns
imul
xchg
sub
movsb
mov
clc
and
xchg
mov
ltr
scas
pop
sbb
and
cmp
pop
lea
les
mov
mov
jle
sbbb
xor
mov
inc
call
push
jecxz
hlt
or
mov
cmp
addl
cmc
fmuls
shrb
shlb
aaa
out
testl
pop
pop
data16
fstps
aaa
push
nop
jno
cwtl
adc
lret
mov
ds
repnz
push
push
jbe
push
popa
subl
es
xor
dec
xlat
iret
shrl
jmp
xor
inc
jecxz
add
xlat
pop
in
lods
pop
arpl
mov
popa
data16
pop
repz
xchg
and
dec
in
jnp
negb
rorb
in
insb
and
jmp
movsl
xor
and
jbe
xlat
fwait
sub
icebp
add
fwait
ret
je
movsl
outsl
jle
xchg
mov
inc
mov
aam
arpl
dec
call
inc
scas
mov
cmp
imul
and
popf
inc
shll
add
mov
insb
cmp
aam
pop
mov
add
cmp
jle
movsb
int3
xor
mov
mov
dec
dec
das
out
push
pop
or
cmp
loop
pop
mov
mov
mov
shrl
fmull
cmpsl
outsl
push
cmpsl
inc
shll
jg
and
scas
mov
stos
cmp
dec
into
sbb
mov
jb
jae
out
push
cwtl
insl
js
cmpsb
data16
mov
push
mov
pop
cmp
pusha
add
pop
cmp
jecxz
add
mov
popf
jg
xchg
test
into
or
bound
adc
test
imul
outsb
pop
mov
loop
sbb
push
fs
dec
add
sub
sub
je
adc
xchg
shlb
outsl
lock
sub
push
xor
es
cmp
aas
sub
inc
xchg
xchg
cmp
dec
adc
and
push
loopne
popa
sar
and
fistl
xchg
adc
fimull
mov
jg
fbstp
aas
pop
push
cmc
mov
es
adc
mov
lahf
mov
inc
bound
jae
push
xor
mov
add
lock
push
sahf
daa
fdivr
pop
imul
dec
insb
gs
movsl
mov
mov
push
pop
pop
xchg
adcl
push
push
cmp
adc
mov
mov
mov
xchg
enter
insb
ds
movsl
jo
xchg
sarb
inc
sub
cwtl
sbbl
fs
pushf
ds
arpl
nop
dec
mov
nop
jno
aad
sbbb
mov
mov
dec
sbb
fs
mov
fstpt
stos
fistpl
jp
sti
dec
repz
cmpsl
stc
pop
and
xchg
mov
add
popl
pop
jne
mov
push
mov
or
leave
ficomps
in
shrb
jnp
fs
lods
add
sti
push
pop
jae
fsubl
in
push
popf
xor
or
xor
mov
lcall
arpl
cmp
xchg
lds
adc
xchg
sbb
shlb
xchg
jmp
loopne
call
adc
push
mov
sbb
xor
or
push
xlat
sbb
mov
inc
sahf
inc
sti
jmp
test
shl
adcl
insl
mov
push
mov
mov
imul
jg
jb
fprem
mov
fsubrs
xor
test
rorb
in
imul
mov
divl
pusha
shll
add
mov
pop
jns
or
in
or
inc
ljmp
cmp
cmp
int3
xor
sbbl
or
sbb
mov
fcom
ds
mov
pop
pop
and
mov
inc
dec
push
xchg
in
mov
cmp
jo
push
mov
cltd
ds
push
xlat
cwtl
lds
faddl
aam
push
and
fs
xchg
sbb
sti
bound
movsl
fwait
mov
testb
push
pop
int3
jbe
jl
loopne
cmpsb
fcmovu
movsb
seto
mov
insb
sbb
dec
andb
inc
sub
in
cmpsb
daa
shrb
fsubrs
faddl
lods
popa
sub
xor
dec
push
ret
mov
outsb
jge
enter
repnz
dec
outsb
negl
xchg
inc
icebp
mov
or
and
mov
push
pop
and
mov
pushl
sub
and
jbe
add
in
mov
jb
sub
jnp
test
fnstenv
cmpsb
adc
loop
push
add
rorb
test
lahf
int
adc
push
lret
sub
xor
sub
jae
mov
in
xlat
xchg
xchg
daa
or
pushf
sbb
stos
cwtl
mov
ret
dec
out
adc
loop
sbb
daa
inc
jae
adc
mov
sbb
and
xor
xor
inc
cmp
cwtl
push
rcr
adc
xor
lcall
xchg
cmpsb
or
xchg
movsb
js
pop
xchg
mov
scas
test
mov
mov
mov
dec
dec
add
lcall
or
repz
xor
jle
xor
imulb
jnp
inc
push
mov
push
test
out
and
fisubrl
nop
pop
dec
mov
xchg
sbb
stos
popa
gs
fwait
insb
in
loopne
pop
ja
les
test
js
data16
pop
sbb
movsl
inc
imul
sbb
stc
movsl
popf
mov
inc
mov
cmpsb
or
fidivrl
jne
mov
mov
popf
mov
mov
jp
or
inc
andb
aaa
in
mov
and
addr16
sbb
pop
js
sbb
repz
sub
xchg
enter
add
cltd
outsl
fildll
jge
ret
mov
pop
cld
xchg
jl
clc
bound
hlt
pop
fdiv
xchg
idivl
hlt
push
pop
sub
arpl
jp
cmpsb
stos
addr16
inc
push
xor
popf
in
xor
jnp
xchg
mov
cmp
jecxz
jo
mov
js
filds
pop
cmp
sbb
dec
xchg
movq
pop
jle
fisubrs
fwait
jle
into
pop
or
dec
xor
push
sbb
lods
push
enter
int3
cmp
mov
rcrl
imul
cmpsl
hlt
scas
andl
jmp
xchg
imul
mov
xor
not
das
mov
cwtl
aam
in
cltd
xlat
decb
dec
mov
addr16
scas
decl
movsb
dec
sahf
data16
movsb
jecxz
mov
xor
movsb
out
or
add
scas
call
in
pop
dec
or
sti
and
fsubr
pop
js
push
mov
xchg
xchg
das
pop
or
ja
lret
cmc
and
xor
cmp
xchg
mov
ret
into
push
pusha
push
mov
lods
out
loopne
cmp
push
xor
push
mov
sub
decl
cmp
data16
push
add
es
push
inc
jb
cli
xor
addr16
pop
sbb
loopne
fstps
xchg
push
aas
pop
inc
icebp
sahf
je
dec
mov
test
xor
mov
jb
add
pop
and
adc
xor
push
and
sub
je
fdivrl
aad
xor
incl
inc
stc
loop
adc
push
aad
jnp
fs
mov
dec
fistl
dec
mov
cmp
das
fwait
and
movsl
push
movsb
test
mov
push
push
lret
mov
mov
sti
mov
pop
mov
hlt
lcall
lret
mov
cmp
add
lahf
push
in
sbb
js
pop
or
mov
push
into
in
mov
ds
in
sbb
and
les
addb
push
shlb
xor
fcompl
clc
ja
bswap
inc
rcr
bnd
pusha
das
mov
gs
push
imul
rcr
inc
cmpsl
aad
cs
lods
imul
dec
fsub
jno
fdivl
insl
pop
mov
std
fmull
rorb
pusha
or
cmpsb
int
xchg
pop
imul
nop
xchg
and
std
xor
test
lcall
inc
addr16
movsb
add
mov
dec
xor
std
and
mov
jle
push
mov
xorb
jle
stos
lahf
stc
in
test
pop
subl
arpl
ljmp
xchg
int3
push
cmpl
bound
out
fisttpll
mov
push
mov
pop
jne
mov
or
xchg
je
hlt
xchg
or
les
jmp
cwtl
adc
dec
fwait
xor
cmp
dec
jae
in
jb
push
push
call
popl
enter
cmpb
dec
outsl
pop
repz
cltd
imul
mov
jno
inc
mov
pop
jmp
inc
imul
pop
jmp
inc
dec
int3
mov
jnp
add
jp
push
xor
test
mov
hlt
push
rolb
xchg
rcl
test
push
or
cmp
jb
push
push
add
loope
imull
sbb
mov
adc
icebp
gs
or
sub
adc
movsb
repnz
es
mov
cmpsl
outsb
cld
imul
sub
mov
xchg
push
mov
data16
mov
sub
fdivr
pop
loopne
pop
jb
lret
popa
sbb
addb
divl
stos
fildl
shrb
test
inc
cmc
mov
or
adc
cwtl
movsl
adcl
add
dec
push
mov
pop
push
loope
cmp
ljmp
lods
aas
adc
mov
popa
mov
mov
int3
cmpsl
lea
jmp
add
jge
adc
push
in
sbb
or
cld
iret
add
mov
adc
push
fstpl
sbb
pop
or
notl
ds
mov
fcmovnbe
and
xchg
clc
lea
test
dec
mov
and
insb
add
in
in
movsl
dec
popa
inc
xor
cmp
jne
pop
lods
dec
pop
xor
add
mov
mov
fistl
loop
mov
mov
dec
out
sub
lods
lods
adc
sbb
into
cmp
xchg
repnz
cltd
xchg
and
out
cmc
popf
jns
lret
pop
outsl
mov
mov
mulb
adc
dec
jg
int
add
imul
jmp
cmp
mov
aaa
mov
shl
shlb
sbb
or
shll
or
es
cmp
pushl
out
lret
loope
mov
xchg
les
sti
cmpsb
jb
inc
stos
and
mov
pop
test
ljmp
jo
jp
or
faddl
adc
je
jmp
mov
std
push
cmpsl
mov
inc
pop
in
cmpsl
test
push
and
sti
lods
out
push
stc
xchg
mov
add
mov
mov
jl
out
pop
shl
punpcklwd
ret
sbbl
cwtl
ds
fildl
lahf
cltd
ret
mov
cmpl
sub
pop
ljmp
push
or
add
push
xor
shrb
fisubs
subl
dec
iret
cmpsb
scas
adc
and
shll
jecxz
fisttps
adc
stc
or
jb
cmp
sbb
xchg
mov
es
inc
sub
loope
push
lcall
mov
aad
cmp
inc
mov
inc
fidivs
xor
sbb
in
jb
icebp
test
dec
adc
mov
popa
imul
adc
repz
hlt
sbb
xchg
jne
lods
cmp
xor
out
xor
ret
sbb
cli
mov
nop
inc
dec
xchg
jo
stc
xlat
xor
es
popf
pop
push
outsl
fdiv
xchg
push
add
dec
fisubrl
outsl
or
sahf
push
loope
lret
daa
sbb
test
mov
jbe
mov
rcl
pop
jg
pop
sti
lea
dec
adc
test
stc
jbe
xchg
adc
lret
or
pop
push
add
dec
movsl
cltd
jecxz
and
faddl
cmpsb
xor
push
aaa
sbb
jp
cmp
adc
jp
xor
sbb
mov
sbb
ss
xchg
jnp
and
mov
mov
cmp
dec
fdivs
pop
ja
out
jno
mov
push
pop
xchg
push
sbb
clc
cld
loopne
in
cmp
dec
mov
xchg
fcoms
mov
inc
pop
xor
xor
inc
xchg
jne
std
adc
add
out
arpl
mov
pop
test
sub
data16
lahf
mov
js
jl
outsl
inc
jle
xor
sub
sbb
scas
ficompl
aam
pusha
sahf
bound
iret
lock
dec
addr16
movsl
ljmp
in
push
and
test
mov
aam
push
pop
pop
movsl
jl
push
inc
jge
push
jne
inc
mov
mov
inc
insl
arpl
cld
push
arpl
push
fs
stos
pop
cld
jg
cmp
out
adc
mov
sub
add
add
lea
lds
cmpl
xor
dec
push
or
inc
sub
fcoml
fildl
mov
pop
out
add
inc
cmpsb
fstpl
test
scas
inc
inc
inc
add
cli
ror
leave
add
mov
adc
dec
fstpt
lods
insb
xchg
cmp
daa
sti
mov
xchg
in
jle
movsb
iret
mov
notb
fsubrl
cli
stos
shrb
pop
mov
mov
xchg
xor
mov
pop
mov
push
sbb
aad
cmpsl
cmp
jne
popf
popf
adcl
mov
addb
loop
mov
jge
fcoml
enter
xchg
mov
testl
in
mov
dec
inc
and
adc
subb
out
hlt
sub
add
mov
out
insl
gs
cmc
mov
outsl
pop
xor
loopne
xchg
cmp
fwait
xchg
mov
or
int3
shrl
jge
mov
inc
mov
mov
dec
inc
iret
call
jl
jo
leave
scas
cmpsb
mov
iret
shrl
scas
or
push
add
xchg
adc
sub
mov
xor
jo
stc
aad
mov
cmpsb
ret
movsl
inc
xchg
bound
xor
cmp
lods
jl
jmp
imul
cltd
clc
shl
inc
sbb
sub
inc
pop
ljmp
inc
lret
mov
mov
and
push
lcall
push
bound
iret
shlb
fwait
sbb
in
out
sub
inc
ss
mov
lcall
push
rcrb
sbb
test
xchg
cmc
inc
aad
cmpl
sub
pop
hlt
pop
sti
pop
cmpsl
lea
push
ret
adc
test
jb
ja
jecxz
inc
cmp
jo
movsb
jl
movsb
adc
sbbl
xor
mov
mov
mov
xor
lcall
cmp
sbb
sub
jae
mov
mov
clc
cltd
xchg
mov
cmpsl
xchg
arpl
cmp
test
or
rorb
gs
pop
dec
xchg
mov
pop
mov
aaa
subb
xor
cmp
addr16
add
stc
pop
cmc
std
xchg
sahf
push
pop
in
push
aaa
mov
insb
aam
pop
mov
outsl
jmp
int
jle
jle
outsl
jecxz
sub
jge
jecxz
in
hlt
aad
mov
xchg
sbb
cmp
out
pop
jmp
icebp
push
jp
popa
jns
repz
dec
inc
cwtl
mov
or
push
mov
and
pop
stos
cmp
mov
or
shrl
rcll
popf
pushf
cmp
jo
pop
pop
clc
sahf
jae
rclb
and
inc
sbb
xor
inc
rcrb
jmp
xorb
lock
inc
loope
lahf
adc
cmp
mov
test
xor
pop
xor
and
imul
cmp
cmc
rcl
xor
je
icebp
loope
xor
fwait
sbb
mov
clc
ja
sbb
adc
mov
cmc
dec
jmp
pop
cld
xchg
ss
push
pop
dec
test
mov
addr16
data16
or
mov
mov
iret
mov
sub
imul
dec
cmpsl
addr16
and
test
hlt
repnz
sbb
push
cmpb
sbb
call
mov
inc
pop
ljmp
push
dec
mov
test
inc
adc
fwait
test
mov
out
push
ret
adc
jne
mov
ss
movsl
outsl
lret
popf
adc
adc
xchg
jbe
aaa
inc
add
stos
jno
daa
jbe
adc
pop
cmpsl
add
scas
sub
sbb
dec
add
mov
aas
xor
popa
idivl
jae
sbb
int3
mov
dec
sub
mov
call
test
jg
adc
pop
lea
ficoml
push
xor
movsl
cmp
sub
push
add
jge
add
pusha
adc
scas
or
mov
inc
sbb
call
repnz
cmpsl
fistps
or
out
push
mov
loop
sbb
rcrl
add
mov
push
push
ds
pop
pop
mov
lahf
fwait
push
fiaddl
pop
mov
cmp
out
out
jbe
stos
out
mov
mov
push
repnz
aaa
push
and
mov
loop
in
add
imul
hlt
push
and
lcall
mov
pop
mov
test
or
dec
jge
adc
sarb
xchg
ret
mov
in
std
pop
shlb
mov
inc
push
mov
sbb
mov
inc
mov
nop
inc
cmpsl
loopne
ds
addr16
repnz
mov
cwtl
ljmp
jl
or
xchg
lods
mov
add
mov
pusha
fildl
jmp
popa
fadd
xchg
inc
aas
cmc
sbb
lock
jmp
popf
and
into
mov
test
sbb
std
push
ret
xchg
pop
aaa
sub
mov
orb
out
dec
mov
loopne
fistpll
stos
mov
xor
in
out
mov
mov
insb
sahf
push
xchg
jb
fcomp
cld
inc
mov
fimull
jp
mov
adc
cs
pop
pop
jl
cwtl
arpl
xchg
test
out
adc
or
dec
aam
adc
cwtl
jmp
into
adc
insb
or
xchg
xor
movb
daa
xor
jle
jecxz
mov
mov
mov
icebp
je
ja
fisttpll
ja
push
iret
mov
sti
push
and
cmp
mov
mov
sti
rorb
jp
aas
aas
fwait
into
dec
jne
and
xor
add
and
sbb
out
ljmp
sti
mov
insb
ljmp
stc
jne
add
insb
movsl
stos
cmp
js
pop
or
test
out
push
push
shlb
loopne
je
sbbl
cmc
mov
fistps
push
dec
lahf
test
xchg
fiaddl
jno
push
loop
imul
cmp
je
das
adc
stc
repz
in
mov
shr
inc
and
ds
jge
adc
inc
loope
bound
cmp
pusha
dec
adc
mov
xchg
imul
add
shlb
lahf
push
pop
sub
add
sub
sbbb
pop
stos
adc
mov
dec
jae
pop
cwtl
out
mov
mov
test
mov
lods
cmpsb
js
lahf
and
movsb
std
and
adcl
cmp
or
fistpll
inc
in
dec
ja
xor
sbb
cmpsl
pop
dec
stos
daa
xor
sub
scas
mov
pop
dec
lea
xor
mov
out
mov
outsb
mov
das
ret
dec
das
ss
popa
mov
inc
sbb
push
jmp
sbb
push
cltd
out
or
xchg
movsb
enter
daa
test
jp
mov
ljmp
popf
es
lea
jbe
lcall
cmp
out
cmp
imul
xor
in
add
test
mov
push
dec
push
mov
mov
divb
in
jp
ret
inc
pop
insl
adc
push
popf
int3
les
and
cmpb
dec
inc
mov
outsl
out
fadds
cmp
stos
or
mov
or
jmp
arpl
mov
imul
cltd
inc
lds
push
fisubrl
lock
fstps
aam
pop
add
loope
sti
stc
dec
sbb
or
jnp
es
out
fs
enter
arpl
sub
outsl
and
lods
jo
cmp
int
cwtl
mov
fcompl
les
jns
dec
nop
mov
or
and
mov
mov
xchg
movsl
and
aas
in
mov
or
pop
sarl
cmp
or
rorl
dec
mov
movsl
std
cmpsb
fstpt
and
ja
dec
sub
cs
jnp
mov
xor
cmp
aaa
test
jle
fmull
xchg
mov
les
movsl
out
repnz
sbb
sbb
stos
and
jg
rcl
jge
mov
mov
adc
push
stos
cmpsb
ss
addb
movsl
mov
xchg
imulb
mov
into
jle
shrb
or
or
and
pop
es
lock
fists
cld
jns
pushf
mov
pop
jecxz
fstpt
xchg
lods
js
loopne
mov
ja
lods
adcl
into
mov
in
movsb
in
sub
in
adc
fdivrl
adc
push
pop
or
xor
push
imul
in
mov
out
mov
mov
aaa
adc
jbe
call
jo
xchg
fdivr
cltd
xor
fsts
dec
adc
sbb
sbb
mov
push
pop
pushl
dec
sub
movsl
mov
ds
push
dec
nop
mov
cltd
je
rcrl
cmp
insl
movsl
popf
lret
arpl
test
xchg
jmp
inc
or
sarb
add
aas
lcall
loop
mov
add
into
jae
and
fcmovne
pop
jp
xchg
xchg
mov
lea
out
mov
adc
mov
pop
cmpb
out
into
push
sub
pushf
mov
loopne
inc
dec
pop
jno
stos
adc
and
mov
jo
mov
outsl
jg
jb
and
mov
mov
mov
pop
bound
push
sbb
mov
jmp
lea
push
cmpsl
push
add
cmp
lds
adc
fs
fsubs
or
jno
jecxz
adc
mov
dec
mov
sbb
adc
pop
dec
int3
aaa
or
pop
sub
fmull
adc
xor
add
push
sbb
sbb
mov
mov
inc
test
inc
lret
std
popf
mov
rcrl
push
pop
add
lret
xor
push
jb
adc
add
jbe
or
mov
je
std
adc
or
push
fcmovu
and
dec
dec
mov
ret
subb
mov
xor
adc
fsubr
pop
fnstsw
fstpt
shr
cmc
iret
notrack
push
add
rcl
xor
jne
mov
loop
in
lea
lahf
std
xchg
fwait
addr16
cli
dec
and
test
or
sbb
cwtl
push
push
js
lock
outsb
mov
les
mov
out
pop
sub
popf
push
lock
cmp
jmp
xchg
mov
clc
mov
add
inc
mov
pop
clc
sahf
popf
aam
and
outsl
or
mov
fdivl
or
sub
popa
mov
sub
out
cmpsl
cmpl
into
divl
or
cmp
sbb
adc
lea
cmp
fwait
lds
imul
and
jo
arpl
mov
add
mov
jb
stc
test
xchg
in
popa
inc
mov
call
ja
push
jne
lock
jns
add
cli
fiadds
roll
cmp
sub
jge
add
sbb
mov
dec
hlt
cmp
mov
sub
pop
sub
dec
mov
loop
add
cltd
fdivrl
out
mov
dec
neg
xor
add
cld
fsubrl
jno
faddl
and
mov
das
dec
ljmp
pop
push
jae
inc
mov
pop
jg
inc
addr16
outsl
sub
cs
mov
xchg
adc
push
repz
aaa
test
dec
cld
aas
dec
imul
jmp
hlt
dec
pop
pop
xchg
insl
mov
or
rcll
rcrl
lods
dec
and
outsb
cs
pop
sub
inc
aaa
sti
movsl
mov
bound
jo
fdiv
add
mov
fiadds
mov
cmp
add
xor
ud2
je
xchg
jnp
daa
push
mov
addb
movsl
mov
push
insb
lds
pop
inc
aas
iret
and
add
xchg
hlt
xchg
mov
pop
scas
mov
popa
in
pop
jmp
pop
mov
loopne
and
ret
push
mov
rorb
pop
jg
xlat
test
test
cmp
ret
mov
push
in
jl
mov
ss
mov
lahf
xchg
adc
cmpsl
xor
addb
lcall
add
mov
or
push
adc
push
push
mov
and
sbb
mov
xchg
rcrl
data16
arpl
or
int3
sub
jne
push
shlb
pop
pop
shll
pop
push
mov
or
js
in
jp
add
aaa
adc
push
or
imul
or
adc
cmpb
push
cmp
mov
enter
xchg
mov
xor
fdivs
cmp
adc
fists
cmpsb
mov
lret
sub
jp
int
test
daa
imull
push
adc
repz
cltd
jmp
jne
sbb
lret
lods
adc
jle
iret
push
xadd
bound
inc
cmp
mov
push
xor
outsb
add
sub
cld
pop
mov
sbb
cmp
fmul
out
jl
addr16
ja
lods
dec
or
idiv
xchg
dec
mov
cmp
enter
push
dec
ljmp
imul
cmp
dec
aad
divb
dec
out
scas
sub
leave
sbb
sbbl
and
mov
ret
repnz
jg
dec
cmpb
daa
ret
pushf
mov
cs
sbb
and
dec
xor
cmpsb
inc
test
es
ss
repnz
ret
faddl
test
iret
lret
icebp
test
js
sub
cmp
cs
ds
jge
mul
sub
cs
add
jnp
pop
xor
sahf
mov
cmp
cmp
fildl
xor
sbb
cltd
cltd
and
std
pop
xchg
in
xor
mov
mov
or
mov
xchg
cmp
push
cmpl
sub
xor
xor
sub
fstps
or
dec
jl
ret
cmc
dec
xor
lock
movsb
mov
and
xabort
sub
cmp
popf
mov
jmp
or
test
std
dec
jne
push
shl
dec
xor
aas
xor
sbb
ret
fsubrs
xchg
cmp
cli
dec
jmp
cmp
xchg
lock
sbb
sbb
dec
mov
enter
pop
subb
push
test
pusha
lret
mov
mov
push
mov
or
mov
dec
repz
cmp
mov
jge
stos
sarb
sbb
lret
jb
ret
js
adc
inc
jns
pop
push
cs
and
mov
aas
mov
int3
jl
add
xor
dec
or
xor
inc
dec
sbb
jg
sbb
pop
out
jp
xor
and
xchg
test
ss
ja
push
js
ror
add
jp
sti
add
outsb
das
cmp
push
aad
lods
movsl
lcall
xor
stos
je
lock
daa
leave
stos
iret
mov
dec
in
lods
imul
sub
or
fcmovu
mov
sbb
in
add
mov
or
xchg
mov
mov
pop
sub
popa
pop
roll
mov
aam
fsubrl
int
xchg
dec
in
mov
in
ss
sbb
or
xchg
insb
lcall
pop
out
test
adc
stos
inc
push
mov
pop
inc
mov
jl
fcoml
ud1
test
gs
bound
lods
inc
sahf
iret
sti
outsl
sbb
mov
pop
in
fisttpl
test
add
or
adc
sub
movsl
mov
push
jg
iret
test
push
fcmovu
add
lods
jbe
enter
mov
fdiv
pop
mov
mov
das
sahf
jae
mov
imul
add
out
mov
sub
outsb
pop
daa
mull
pop
add
lods
stos
enter
fwait
mov
cmc
fcomi
in
idivl
push
adc
and
nop
addb
cld
rorl
mov
cs
dec
dec
inc
in
add
mov
je
aad
sarb
xor
cs
mov
lahf
scas
xchg
cmp
stos
sti
aad
jg
jns
dec
xor
test
dec
test
clc
push
pop
leave
sar
pop
cmp
wrmsr
subl
cltd
push
call
pop
mov
pop
imul
arpl
mov
inc
std
push
lods
cmp
sbb
les
daa
sub
push
movsb
pop
jge
dec
pop
sbb
fisttpl
dec
lods
mov
and
cmc
jge
push
orl
notl
loopne
push
imul
mov
cmp
mov
lods
pusha
addr16
xchg
push
imul
pop
or
das
add
movsl
out
aas
xchg
xchg
mov
push
lcall
adc
sub
mov
std
cld
testb
enter
ja
xor
push
cmp
lea
push
in
subb
adc
xchg
or
pop
sub
push
mov
xchg
xchg
outsb
stos
movsl
movsb
pusha
daa
push
fnstenv
lahf
out
repz
scas
jnp
cld
aaa
dec
add
aad
mov
add
dec
dec
cltd
insb
mov
loop
lds
mov
sub
bound
pop
imul
dec
insl
in
addb
sbb
xor
mov
lods
push
xor
fnstsw
pop
fwait
lret
mov
jnp
cmp
xor
jp
sub
pushf
test
sub
jg
lock
out
xchg
xchg
negl
sub
add
push
loope
inc
cmpsl
mov
icebp
gs
cld
dec
lock
insb
bound
call
clc
nop
jl
aad
icebp
xchg
pushl
xor
dec
push
cli
pop
xchg
les
adc
stc
xchg
mov
mov
imul
jge
aam
in
mov
icebp
jle
dec
or
stos
mov
mov
jne
rcrb
lret
and
outsl
mov
int
ss
adc
push
sbb
jno
rdtsc
data16
shll
hlt
aam
clc
stos
dec
fisttpll
and
hlt
std
cmp
push
jp
adc
sbb
cli
shll
ljmp
nop
pop
jo
fmull
or
xlat
scas
sbb
sub
dec
add
xchg
insl
push
sbb
xor
xchg
lret
adc
jmp
cmp
es
inc
dec
cwtl
xor
cmp
fnsave
push
and
and
add
testb
sub
int3
add
cmp
outsb
mov
xor
lahf
push
sbbl
push
xor
stos
inc
xchg
mov
lret
or
inc
in
arpl
in
push
dec
or
bound
pop
mov
lods
scas
insb
sti
mov
mov
pop
pop
scas
insl
add
mov
mov
push
hlt
fisubs
push
int3
insb
add
xor
testb
pop
imul
mov
sbb
lahf
ljmp
inc
and
mov
test
arpl
data16
xor
mov
test
out
test
mov
insb
push
sub
mov
mov
in
out
int
fldl
dec
or
ret
fwait
cmp
icebp
arpl
adc
inc
out
fcmovbe
jl
mov
lcall
in
mov
test
dec
xor
inc
int
or
push
xor
dec
push
rcrb
pop
dec
jp
lods
mov
adc
pop
push
ret
icebp
js
mov
imul
mov
xchg
mov
jns
das
mov
loope
test
jnp
dec
pop
sahf
sbb
add
inc
or
jg
push
push
bound
shlb
cmp
and
loopne
sub
cld
popa
outsb
push
nop
pop
lods
xchg
adc
xor
dec
fcmovb
cwtl
int3
sub
addr16
clc
cmp
std
jnp,pt
test
dec
fists
pop
cmc
jecxz
xor
push
jb
andb
ljmp
push
stos
jecxz
clc
mov
jmp
cmp
mov
mov
jb
or
clc
cmpsl
mov
sbb
lea
into
adc
inc
or
mov
cld
mov
test
cltd
mov
jne
xchg
jp
cmp
clc
push
sub
repnz
movsb
jnp
cmp
testl
testb
or
dec
push
fs
addr16
insb
push
or
cmc
add
test
push
mov
jae
fs
fsubrs
cld
aad
cmp
push
mov
mov
insb
fiaddl
jb
add
xor
sub
add
jg
xor
mov
and
outsl
scas
push
add
insb
sbb
test
pop
fmull
sub
cmp
push
add
sbb
out
and
dec
adc
cs
pop
int3
inc
imul
sub
aad
lcall
pop
pop
imul
ja
and
outsl
test
xor
push
add
cltd
fwait
cli
xchg
mov
lret
jbe
lcall
xchg
mov
inc
dec
push
xor
mov
stc
pop
enter
pop
sbbl
cld
lea
add
scas
inc
test
lods
or
adc
mov
xchg
outsl
or
push
pusha
pushf
loopne
jnp
and
lcall
addl
mov
subl
mov
outsl
jle
mov
cmpsb
mov
adc
and
sub
jg
push
jns
jo
push
hlt
pop
cmp
pop
lcall
call
rcll
mov
pop
push
es
mov
dec
pop
adc
xchg
ret
das
or
and
mov
or
pop
mov
dec
outsb
xchg
mov
sar
sbb
daa
push
les
and
adc
inc
mov
std
jns
jae
imulb
lods
icebp
mov
sub
xor
sub
add
jbe
cmp
add
idivb
push
les
pop
es
xchg
adc
mov
sbb
dec
or
cmp
mov
lret
insb
jmp
push
fiaddl
pop
sarb
ret
lcall
inc
test
pushf
insb
and
mov
int
mov
sbb
out
push
fisubrs
icebp
loope
lods
sbb
dec
jbe
in
pop
dec
cltd
inc
data16
std
sbb
dec
in
addl
aas
cltd
cld
jl
vandpd
mov
iret
lret
push
popa
add
jo
sub
sub
pop
sbb
adc
mov
stos
adc
je
jl
sub
xor
lret
nop/reserved
or
inc
cmp
test
jle
dec
mov
scas
jno
out
leave
outsb
xor
cmp
sbb
adc
mov
jae
fsubrs
icebp
sbb
jmp
add
repnz
cmpsb
add
xor
in
lods
push
sbbl
repz
lods
inc
mov
negl
test
outsl
jle
push
jb
inc
and
add
in
mov
xchg
jmp
jmp
lret
cmp
call
cltd
mov
iret
mov
cli
inc
loop
xor
stos
and
pop
push
in
out
mov
rcrl
loope,pt
xor
mov
movsb
popa
jae
sti
repz
out
mov
pop
mov
lcall
shll
lods
xchg
add
sbb
dec
std
and
dec
lods
add
pop
test
imul
aam
es
shrl
push
push
inc
xlat
xchg
inc
stos
and
iret
test
pop
in
ds
adc
aaa
xchg
aaa
mov
stos
gs
xchg
loope
sbb
sbb
movsl
and
fisttps
rolb
mov
jg
mov
sub
xor
scas
xchg
mov
mov
mov
leave
imul
add
lods
xor
adc
aas
rclb
sahf
pop
lret
jnp
xor
lods
dec
int
xchg
lret
out
dec
lds
iret
mov
aad
hlt
cmp
push
jecxz
mov
call
add
fs
push
addl
mov
ret
xor
sub
xor
inc
jnp
xlat
mov
xchg
push
xlat
sub
out
call
pushl
mov
adc
je
ja
jg
pcmpgtd
inc
decl
sbb
call
cmc
pop
rorb
mov
jg
sbb
pop
sub
lock
jecxz
enter
dec
jle
pushf
loopne
mov
cltd
mov
inc
adc
dec
pxor
sub
adc
fcomi
sbb
popa
sarb
pop
ljmp
push
pop
push
lcall
shr
xchg
test
ret
inc
and
das
push
addr16
out
gs
inc
sar
push
lods
idivb
es
in
push
dec
imul
cwtl
rclb
adc
rcrl
out
loop
add
aaa
iret
add
mov
inc
ret
push
cwtl
sub
pusha
xor
pop
in
inc
test
sub
pop
jmp
les
jae
jl
movsb
movsb
scas
mov
test
or
push
sub
aam
xchg
mov
pop
or
jmp
dec
mov
sti
add
div
mov
insb
movsl
stc
gs
ja
mov
insb
out
loope
addr16
icebp
jnp
mov
lcall
cmp
sbb
and
scas
inc
and
mov
pushf
jle
push
adc
rol
lods
mov
mov
rolb
enter
pop
pop
mov
pop
mov
and
xchg
ret
sbb
outsl
notb
inc
mov
add
cs
fndisi(8087
jg
frstpm(287
adc
filds
les
or
ss
xor
jg
arpl
outsl
sbb
jnp
sub
dec
adc
cmp
cmp
push
push
pop
sarb
push
or
clc
inc
push
lcall
add
mov
movsb
and
rcrb
push
test
pop
push
in
sarl
lea
stos
lcall
repnz
adc
int3
mov
pop
fcmovne
insl
jl
jl
outsb
cmpsb
xchg
ret
out
pushf
xor
jecxz
cmpsb
or
cmp
fstps
pop
test
xor
movsb
test
mov
mov
adc
aaa
and
mov
out
out
lock
add
mov
xor
loop
ret
xor
sarl
mov
repnz
cltd
mov
ss
adc
pop
pop
inc
adc
push
aad
das
nop
xchg
jnp
xor
mov
xchg
lea
xchg
push
popa
aam
cmp
mov
call
jl
lret
jmp
out
cltd
test
std
pop
movsb
aad
xor
lods
fs
xchg
fistpl
daa
mov
mov
jne
cmp
push
xchg
and
test
ja
cmp
jge
jo
cs
push
iret
and
iret
or
iret
pop
xchg
imul
sbb
xchg
push
lahf
lcall
inc
aad
sti
pop
std
xor
cmp
mov
push
push
add
stos
je
and
stos
jge
mov
adcb
fldcw
mov
pusha
and
push
sub
ja
or
xchg
xor
push
popl
movsb
push
pop
in
push
test
dec
add
repnz
out
dec
cmp
add
out
mov
fidivl
enter
fimull
cmpsb
sub
push
ss
loop
jne
ljmp
arpl
icebp
das
or
neg
cmp
add
divl
cltd
xor
push
aam
fs
test
fdiv
fldl
jbe
js
or
arpl
clc
xchg
loopne
adc
adc
add
pop
hlt
lock
push
cltd
jle
fs
test
add
insl
sbbl
xchg
mov
loopne
addl
sbb
jge
adc
jb
in
mov
insl
xor
test
je,pn
sbb
test
xchg
aaa
mov
outsl
sbb
dec
push
push
pop
cwtl
cltd
mov
and
cs
or
xlat
mov
fs
daa
in
bound
lret
insl
dec
cli
dec
out
lret
add
cmp
scas
ret
xchg
call
test
sub
lods
rcrl
bound
pop
addr16
pop
pop
mov
mov
jne
sti
xchg
jb
daa
pop
mov
xor
mov
in
outsl
mov
cli
lods
lret
orb
mov
mov
shll
mov
movsb
insb
jb
arpl
sbb
insb
push
scas
inc
inc
jecxz
inc
leave
mov
pop
sub
ljmp
sar
mov
dec
cmp
mov
mov
jns
int
fldl
sbb
pop
in
imul
dec
inc
fs
jns
cmp
mov
repz
add
jnp
mov
loope
popa
stc
push
icebp
test
loope
test
dec
lret
shrb
cmpsl
inc
cmpsl
ss
jp
xchg
loop
loopne
pop
and
mov
clc
lds
in
or
outsl
inc
xchg
inc
xor
dec
out
ficompl
adc
outsl
dec
mov
adc
std
stos
jp
sbb
fisttpl
cmp
ds
push
nop
out
cmp
cmp
adc
int
pand
adc
ss
push
sub
sub
lock
dec
repz
cmp
call
fs
and
sarl
out
lods
repz
in
outsb
pushf
orl
hlt
loope
shll
addb
xor
xlat
popf
das
pop
in
outsl
dec
cmp
push
cmp
aaa
in
iret
xchg
js
adc
imul
sub
stos
xchg
add
and
hlt
mov
pop
or
adc
fnstcw
aas
dec
movntq
enter
or
insb
inc
lods
adc
aam
lahf
jo
or
test
lods
aam
pop
or
adc
dec
pop
jmp
aad
dec
mov
aam
sahf
fildl
jl
aaa
xchg
out
mov
cld
sub
gs
imul
ljmp
push
mov
bound
mov
mov
inc
sub
test
in
aaa
or
jle
fwait
inc
subl
jle
xlat
or
pop
mov
out
inc
and
sub
cli
pop
jp
xor
loop
ds
fsubs
test
icebp
in
test
sbb
mov
stos
cwtl
add
sub
sub
aaa
pusha
push
mov
int3
or
xor
sub
je
xor
repnz
ds
push
daa
addb
xchg
add
lods
dec
daa
sbbl
loope
shlb
cs
js
sbb
jae
cs
ret
and
and
adc
loop
dec
and
pop
inc
rcr
inc
sbb
into
jo
pop
dec
aad
fbstp
cmp
inc
inc
xor
faddl
sub
pop
jle
jnp
push
aam
in
lret
xchg
popf
iret
lahf
enter
adc
fimull
sub
hlt
out
pop
adc
pop
pop
lahf
mov
loop
sahf
ds
stos
arpl
and
lock
rol
inc
pusha
popf
mov
ret
xor
adc
inc
cli
aaa
movsl
and
imul
mov
or
ss
or
xchg
dec
jns
jbe
and
fstl
pop
das
mov
cltd
js
fstps
repz
mov
aam
xchg
jne
das
and
inc
mov
dec
insb
pop
insl
in
fucomip
sar
scas
xor
push
xchg
mov
pop
jns
popa
neg
xor
lcall
fcmovb
stos
pop
xor
mov
mov
in
ret
push
mov
push
xchg
adc
mov
lock
into
adc
cmp
rclb
mov
push
popl
cmp
andl
jecxz,pt
aad
popa
arpl
xor
jmp
mov
add
and
xchg
add
pop
leave
dec
or
dec
arpl
andl
pop
xor
cmp
xchg
dec
dec
stos
cmp
pushf
mov
fs
add
xchg
and
xor
inc
jg
mov
jle
movsb
leave
aas
cld
mov
enter
and
pop
out
fistpll
xorb
mov
lock
pop
mov
adc
xchg
stos
lahf
fcompl
mov
jecxz
jp
jb
push
int3
ss
jno
add
loop
aam
push
scas
and
mov
push
sub
xor
cwtl
pop
leave
push
sarl
mov
push
xchg
inc
shrl
pop
stos
test
xlat
cmp
test
inc
mov
push
sub
adc
ret
or
dec
cmpsl
mov
cltd
mov
repz
into
repz
shrl
xchg
aad
fwait
mov
cmp
add
scas
xchg
sub
cmpl
outsb
mov
mov
and
pushf
mov
dec
xchg
aam
dec
clc
in
inc
or
or
pop
test
add
xor
popa
pop
fisttpl
add
outsl
pusha
mov
in
and
jl
lret
ss
les
and
aad
shlb
jmp
loop
or
push
adc
cli
stos
gs
in
mov
cmp
pushf
setns
add
lods
pop
sbb
xor
jmp
clc
mov
and
cmp
test
adcl
fldt
xchg
loopne
mov
jmp
repnz
scas
dec
pusha
inc
and
mov
out
mov
jnp
dec
ror
hlt
out
cli
mov
cmp
int3
pop
nop
movsb
scas
mov
and
adc
shr
std
pop
mov
mov
jne
test
in
jns
or
sti
jge
icebp
gs
sbb
fldl
fidivl
loop
repz
mov
mov
aas
mov
bound
push
mov
xor
sahf
cltd
in
enter
dec
outsb
in
mov
push
cs
in
pop
outsl
mov
cmp
mov
insb
insl
pop
jo
out
loop
adc
out
imul
cmpsb
dec
adc
xor
in
add
cmp
inc
imul
push
xchg
pop
add
dec
shrb
xorb
and
out
jb
pop
ljmp
in
jno
sahf
pushl
and
test
lcall
pop
lds
outsl
faddl
lret
imul
xor
jmp
jbe
js
xlat
leave
push
mov
inc
shlb
cs
into
pop
dec
lock
filds
ljmp
mov
rclb
pop
add
xchg
cwtl
mov
or
stos
sbb
dec
xchg
inc
xchg
lret
rol
in
push
mov
aas
test
sbb
sub
out
sbb
push
adc
xchg
xorl
jmp
add
sub
inc
pop
inc
shl
into
and
pop
xor
movsb
enter
pop
mov
push
xchg
push
sar
hlt
mov
mov
xchg
lcall
dec
nop
sub
xchg
mov
mov
push
data16
les
push
scas
and
imul
or
cld
lret
jge
or
dec
fisttps
mov
test
mulb
ljmp
std
mov
das
inc
push
sub
xor
in
mov
pop
mov
xchg
push
test
imul
jns
call
pop
out
adc
scas
xor
aas
dec
repnz
cmc
push
in
je
sub
lret
lods
lods
push
mov
fnstcw
das
shlb
jae
fisubrs
cmp
rep
mov
and
sub
add
loop
adc
xor
aam
jg
es
inc
pop
lcall
jp
mov
mov
dec
stos
fadds
lods
aas
mov
addl
jno
push
or
pop
push
xchg
divl
sbb
cmp
and
test
sbb
cltd
je
hlt
adc
bound
lods
imul
push
clc
sub
mov
dec
push
pop
shll
xor
jmp
jmp
popa
mov
lods
pop
jmp
sbb
jbe
enter
arpl
jge
pop
mov
cs
les
xchg
outsb
outsb
ret
inc
sub
pushf
cltd
stos
sub
nop
push
xchg
push
js
pushf
lods
dec
mov
dec
imul
mov
daa
shlb
scas
jle
dec
int
pop
sub
sub
mov
outsl
xor
or
jl
sbb
fs
std
into
push
adc
out
pop
cmp
outsl
fucomip
push
std
jno
aas
sub
pop
test
or
mov
ja
out
sub
ljmp
jl
test
clc
sbb
jnp
sbb
pop
fmuls
bound
in
call
push
jnp
sub
cmp
sarl
das
mov
xchg
nop
push
inc
clc
jno
xchg
out
roll
out
add
and
sub
popa
inc
faddl
sub
int3
sbb
dec
fisubrs
in
or
mov
lahf
dec
cmp
cmc
in
pushf
mov
xor
cmc
dec
push
xor
jbe
push
add
ja
sub
sbb
pop
adc
mov
into
pushl
xchg
in
jecxz
outsl
test
xchg
je
inc
xorl
jecxz
push
xlat
in
or
jne
mov
je
cmovbe
test
pop
rcl
or
pop
ss
test
jne
pop
daa
cmp
sbb
daa
popf
imulb
ljmp
cltd
xchg
jle
imul
jmp
mov
cli
dec
cmp
cmp
mov
inc
add
bound
test
mov
cli
pop
sbb
mov
mov
sbb
xchg
addr16
mov
lret
mov
hlt
cmp
mov
mov
inc
lahf
stos
lea
adc
ljmp
jbe
fdivl
jge
inc
push
outsl
or
gs
adc
idivl
xchg
cli
in
mov
add
movsb
cld
test
in
dec
push
and
negl
and
push
mov
test
clc
mov
ja
mov
das
sbb
std
xchg
and
pop
stos
and
rorb
xchg
cmp
sti
add
ja
call
clc
aam
xor
and
cmpsb
pop
nop
mov
fs
pop
mov
subl
test
add
pop
popf
in
iret
insb
jp
fsubrl
mov
push
adc
std
sbb
inc
sahf
mov
test
out
push
inc
fst
adc
and
pop
or
inc
pop
jne
jge
in
and
dec
jbe
add
xor
cmp
outsb
sub
or
stc
dec
push
inc
lods
mov
push
cmc
std
cmp
jl
mov
adc
cmp
scas
repnz
movsl
push
or
mov
mov
aam
mov
dec
orb
insb
incb
fwait
bound
inc
add
leave
nop
add
aas
hlt
push
and
bound
ficoml
std
inc
inc
icebp
std
loope
pop
test
xchg
mov
adc
jns
js
repnz
cli
clc
pushf
in
add
pop
push
pop
stos
out
shrb
pop
out
dec
js
in
enter
or
jmp
mov
jne
cmp
push
fs
push
pop
pop
ss
cmp
rolb
adc
adc
pop
jle
loop
jp
push
enter
sub
lahf
arpl
xchg
xorb
iret
out
inc
test
fmuls
fdivrl
in
arpl
js
pop
add
sub
jg
and
cmp
imul
icebp
push
iret
cmp
mov
dec
jne
mov
ljmp
in
xchg
movsb
loopne
dec
mov
pop
jp
daa
std
arpl
mov
gs
xor
loop
mov
mov
cld
ffreep
outsl
mov
stos
inc
data16
loop
lcall
in
dec
lods
dec
cmp
mov
xchg
jge
lret
xor
fwait
adc
mov
in
movb
lods
push
out
lock
mov
mov
inc
push
hlt
adc
loopne
adc
and
dec
push
push
shll
jno
cmp
inc
inc
into
je
cli
add
gs
shlb
out
mov
adc
loop
lea
pop
jl
pop
xchg
dec
lret
jnp
xor
or
movsb
jnp
lcall
push
outsl
inc
pop
pop
pop
jecxz
lods
push
jnp
adc
out
cmp
jl
stos
push
icebp
icebp
sub
jns
sahf
pop
add
int
add
mov
xchg
sub
sbb
imul
inc
sbb
inc
sarl
fs
in
jne,pn
pop
enter
shrl
adc
dec
ss
push
sbb
jp
add
lock
mov
add
popf
jne
pop
cmp
lods
adc
mov
push
es
ss
pop
xchg
nop
in
int3
loopne
outsl
dec
jno
aam
imul
sub
and
ror
adc
mov
mov
and
idivb
lea
outsl
aad
lret
push
ficompl
push
aam
jg
lods
push
loope
addr16
inc
in
xchg
inc
shrb
aaa
repnz
lret
mov
orb
fdivs
push
scas
inc
insl
mov
cmp
sub
add
ficoms
pop
cli
inc
das
lcall
dec
or
cmc
xchg
mov
rol
scas
pop
scas
or
sarl
inc
sti
push
sub
inc
mov
in
jbe
jmp
in
nop
fs
je
popf
outsb
popf
push
xchg
jnp
in
push
push
add
lahf
push
std
pop
lods
and
int
shl
push
in
repnz
dec
test
rorl
in
dec
sbb
lods
lret
popa
sbb
add
and
loope
scas
dec
notl
insl
mov
pushw
pop
jno
xchg
mov
mov
sahf
jg
mov
lods
sub
sarb
jns
int
inc
mov
sti
sub
jo
sti
test
cwtl
movsb
or
inc
cmp
push
add
push
inc
adc
fisttpl
ljmp
je
sub
jae
inc
imul
repnz
xchg
add
cmp
mov
sar
cmp
mov
gs
inc
adc
xchg
cmpsl
hlt
icebp
lods
inc
imul
ljmp
cmp
sbb
mov
mov
jns
push
jb
jmp
xor
lret
fidivrl
push
pop
xorb
stos
cltd
inc
scas
ret
mov
ficoms
pop
and
xchg
adc
jle
gs
xchg
lods
cmpsb
sbb
push
ljmp
inc
out
or
out
movsl
outsb
leave
int3
sbb
es
into
xchg
adc
dec
insl
cld
mov
and
cmp
adc
add
mov
dec
scas
adcb
js
lods
inc
fdivrl
iret
sub
ret
xchg
push
push
mov
xor
xor
push
adc
jle
jnp
or
xchg
inc
sbb
scas
cmpsb
int
xchg
mov
testb
sbb
mov
jb
pop
das
stc
dec
repz
mov
popa
or
cmpsl
mov
out
pop
aam
js
negb
in
imul
add
sub
daa
xor
adc
arpl
dec
ja
mov
mov
clc
mov
mov
xor
mov
xchg
js
mov
cmpl
notb
popf
pusha
jno
pop
adc
mov
pusha
enter
stc
in
pop
add
adc
push
mov
call
imul
push
mov
cli
xchg
add
xor
push
lock
adc
incl
ret
jno
cs
xchg
loopne
fstps
hlt
pop
add
mov
rolb
cs
stos
hlt
cmpsb
das
dec
xor
sar
mov
das
lock
subb
pop
insb
int3
sbbb
addr16
in
mov
cli
or
cmp
addl
and
add
scas
test
or
xchg
push
jo
cmp
mov
inc
outsb
std
sub
outsb
jo
push
iret
aas
sub
in
push
addr16
push
push
sub
stc
mov
xchg
dec
in
cmp
sarl
xchg
iret
fisubrl
lahf
add
loopne
inc
xlat
xor
outsl
bound
push
outsl
adc
inc
mov
xchg
cmp
das
adc
stos
xchg
or
test
sbb
aad
add
mov
lcall
loope
pop
pop
pop
std
mov
push
xor
dec
je
jae
add
sarb
out
xchg
dec
push
sub
sahf
aas
push
loop
push
jecxz
int3
pop
adc
jo
or
jno
in
push
lahf
loope
std
stos
rcrb
xchg
lods
popa
mov
lock
movl
jb
mov
mov
outsb
cltd
cmp
sbb
test
cmp
mov
inc
mov
in
ljmp
sar
sbb
and
js
push
cmp
add
push
sbb
mov
lcall
mov
pop
js
gs
jecxz
jmp
mov
fs
pop
loopne
pop
fidivs
inc
pop
test
xor
mov
push
or
je
push
aaa
push
xchg
add
gs
cwtl
xchg
jne
xchg
into
push
or
orl
push
xchg
xchg
sbb
sbb
dec
sarb
shrb
and
dec
aam
cmp
jns
aam
push
mov
jno
mov
aam
push
sbb
and
sub
inc
dec
in
sub
insb
sbb
call
or
in
dec
and
pushf
lret
sti
inc
dec
or
test
mov
mov
jle
jno
cmpsb
push
mov
push
cmp
sbb
test
xorl
cmp
sbb
sbbb
lods
inc
mov
cltd
push
imul
mov
hlt
cmpsb
xbegin
jnp
fidivrs
pop
imul
in
and
bound
or
fildl
lock
add
faddp
cmc
adc
dec
jns
insb
add
jnp
cltd
loopne
mov
lods
mov
pusha
fidivrs
push
rolb
shl
bound
push
cwtl
cmpsl
jle
sub
sbb
imul
repnz
xchg
inc
cmp
pop
data16
pop
mov
mov
out
pop
loope
dec
xor
cmp
add
and
cwtl
cmp
xchg
sbb
mov
pop
gs
mov
mov
out
xchg
sbb
adc
mov
mov
adc
out
pop
inc
sahf
cli
pop
mov
push
out
lcall
movl
adc
jo
clc
fwait
xor
jle
incl
mov
mov
jecxz
scas
jp
js
lea
popf
jbe
push
xchg
ret
sub
fiaddl
jl
xlat
mov
pop
movsl
pop
pop
aas
movsb
cmpsb
push
icebp
lea
ds
add
idivb
mull
gs
mov
sub
std
movsb
mov
clc
testl
jnp
lods
adc
xchg
jbe
scas
mov
aad
mov
sub
add
scas
outsl
mov
addr16
add
cmc
xchg
jecxz
mov
ret
ljmp
jle
adc
dec
push
and
push
adc
and
or
jl
pop
adc
mov
out
leave
add
stos
imul
mov
mov
inc
cmp
fwait
pop
add
jecxz
inc
or
pop
mov
stc
mov
call
outsb
hlt
nop
mov
add
stc
dec
xchg
and
push
push
adc
and
repnz
jne
jp
addr16
pop
scas
and
stos
aam
inc
add
push
jbe
xchg
out
mov
ret
stos
adcl
xlat
bound
adcl
jmp
jo
testl
ja
sbb
mov
popa
jmp
xor
cli
inc
lods
push
or
fbstp
add
jg
mov
mov
daa
daa
fistpl
arpl
lret
jne
push
inc
dec
inc
movsb
mov
dec
dec
sub
daa
xor
and
dec
mov
lahf
or
in
cwtl
xor
sub
mov
icebp
pushf
inc
pusha
out
inc
inc
loop
push
bound
sub
adc
cli
inc
icebp
pop
shrl
sbb
enterw
mov
mov
xchg
fs
fcom
in
cld
cmpsb
dec
dec
sub
or
xchg
pop
xchg
xor
push
out
les
nop
out
mov
orl
xchg
outsb
clc
inc
ss
decl
movsl
popa
clc
pop
lret
adc
jo
jle
lods
adcb
inc
pop
sarl
enter
decb
ja
jp
lock
rcrl
rorl
xor
sub
shll
push
jecxz
rolb
mov
xlat
push
lret
in
ja
lahf
scas
jge
outsl
and
ljmp
add
or
imul
cmpsl
sub
push
mov
aas
gs
pop
in
pop
imul
xchg
lcall
in
shlb
mov
rcr
mov
mov
sbb
pop
lock
mov
imul
outsl
mov
mov
ret
flds
loop
idivl
pop
add
nop
push
sbb
out
jne
jg
rcrl
xor
fwait
xchg
mov
out
adc
inc
sub
inc
jae
cs
idiv
cmc
out
xor
ja
stos
push
stos
add
sbb
imul
movsl
xchg
dec
sbb
cmp
mov
jg
cld
hlt
aam
dec
or
shr
add
xchg
dec
or
jae
pusha
push
cli
ja
mov
imull
push
out
xchg
pop
pop
or
fcoml
mov
jge
and
sub
adc
push
cmpsl
push
fldl
stc
and
dec
enter
in
lods
std
icebp
lcall
mov
clc
cmc
xchg
arpl
cmpsl
cltd
or
jg
into
lea
pop
pop
xor
cmpsb
inc
mov
popa
jae
inc
bound
mov
push
rcl
xchg
aad
bound
repnz
and
xor
fbstp
scas
xor
lahf
in
pop
inc
lea
add
or
push
jno
hlt
push
rcrl
bound
fs
stc
mov
xchg
jmp
fidivrs
xor
bnd
pop
dec
call
loope
or
sahf
pushf
call
hlt
dec
or
push
inc
jo
lret
test
ds
mov
push
pop
das
sti
es
jnp
inc
negb
jo
cltd
aaa
add
or
mov
push
mov
inc
inc
xchg
imul
int3
push
popf
jmp
ja
push
out
mov
or
cltd
int3
sub
xor
hlt
lods
aas
mov
adc
loope
out
jb
ljmp
inc
cltd
xchg
enter
aaa
dec
adc
ud2
outsl
pushf
ret
cltd
aam
push
add
lds
sub
jmp
jb
mov
insb
mov
cmpsb
push
cwtl
mov
aaa
xlat
and
jnp
pop
mov
int
dec
test
dec
test
xchg
repnz
in
jp
shll
mov
retw
dec
mov
adc
out
push
bound
scas
mov
je
rolb
dec
xchg
mov
sti
or
pop
add
stos
ror
mov
or
mov
inc
push
das
mov
iret
xor
push
xor
mov
outsl
rcll
push
shr
data16
std
pop
fucomip
push
movsl
or
shll
outsb
aad
js
fwait
cmp
and
sbb
insb
sbb
hlt
lods
push
popa
imul
arpl
push
mov
imul
push
popa
pusha
jns
jnp
stc
fdivp
xlat
cmp
mov
or
stos
mov
popf
mov
test
dec
dec
pop
mov
repz
xor
pop
divb
lahf
imul
and
scas
loop
xchg
shl
in
and
push
sahf
pop
lahf
dec
push
mov
enter
imul
mov
mov
ret
mov
js
ret
push
out
xchg
mov
dec
and
mov
inc
or
pop
inc
out
notl
xchg
inc
dec
lock
jne
and
jecxz
jecxz
lahf
xchg
aaa
lahf
and
pop
fildll
mov
pusha
push
sub
dec
fsubl
pushf
sbb
repz
lods
mov
icebp
mov
mov
mov
pop
pop
mov
and
cli
inc
js
shll
fists
adc
xor
out
lahf
adc
pushf
sbb
test
cmc
aad
pop
cs
push
push
aas
ljmp
mov
addr16
test
adc
mov
sbb
ljmp
loope
mov
aaa
fsubl
mov
fucomi
xor
sahf
inc
sbb
popa
imull
push
mov
xchg
dec
sub
push
cmp
add
call
jbe
ja
gs
jae
outsl
mov
dec
cmp
cmpsl
or
sbbb
sub
or
imull
xchg
and
inc
movb
dec
outsl
ret
mov
cmp
icebp
lret
mov
and
aad
push
je
push
or
rol
sbb
pop
add
repz
jb
jp
cmc
data16
arpl
cmp
repnz
into
incl
stc
out
dec
dec
test
sub
adc
or
rcl
lret
and
or
dec
and
ret
xchg
xor
and
insl
sub
cmc
sarb
mov
out
xor
outsb
push
push
sub
icebp
dec
fstp
pop
subl
lahf
sub
mov
gs
mov
add
and
cmpsl
dec
outsb
mov
daa
or
insl
aad
stos
jle
lahf
cmovg
lods
test
jp
adc
pusha
inc
rcll
loope
mov
dec
add
mov
pop
pop
movsl
outsl
aaa
and
int3
out
out
sbb
mov
jge
sub
mov
repz
dec
test
jnp
xor
lahf
fisubrs
jle
pop
dec
shlb
and
pop
mov
sub
lcall
mov
shrl
jle
dec
mov
xchg
dec
aas
daa
dec
cmp
and
xor
arpl
int3
adc
shll
data16
outsb
mov
jl
xor
xor
inc
dec
cmp
adc
xor
mov
mov
xor
movsb
mov
fbstp
cwtl
cmp
gs
inc
dec
outsl
ds
xchg
add
mov
dec
jmp
jmp
imul
push
mov
test
mov
stc
dec
and
xor
jge
data16
sahf
sub
xchg
mov
iret
ja
lods
lock
aas
test
lds
stc
jb
shll
cld
cmp
imull
leave
mov
stos
add
pop
out
repz
rclb
stc
cmp
ds
pushf
scas
arpl
andb
scas
in
mov
outsl
push
je
aaa
ret
sbb
movl
inc
insb
test
pop
dec
jecxz
xchg
cmpsl
add
sbb
fistps
dec
or
mov
insl
or
sbb
or
les
movsb
cmp
int3
loope
test
mov
xor
in
aaa
dec
mov
movsl
les
add
xor
adc
jnp
movsb
push
mov
fists
or
shrb
xchg
mov
jae
push
lret
add
jne
mov
js
inc
cwtl
jns
outsb
hlt
cmp
or
jmp
dec
es
sbbl
test
mov
inc
in
jmp
mov
in
dec
je
inc
into
cmp
pop
daa
or
or
jle
mov
adc
stos
in
cmp
mov
insb
pop
sti
shl
cmp
test
movsb
pop
fcmovnb
inc
aad
fsubs
mov
mov
insb
jecxz
jno
sbb
jp
cmp
mov
test
dec
jmp
dec
jp
pop
pop
mov
cmp
outsl
push
xor
loopne
loope
faddl
xorb
cld
cmp
lcall
dec
popf
idivl
pop
in
mov
pop
sub
inc
add
sahf
ret
sarb
cmp
mov
inc
cmpsl
mov
out
push
test
adc
dec
enter
adc
hlt
movsl
icebp
xor
pop
mov
fsubl
sbbb
cmpsb
and
jecxz
xchg
je
decl
ds
test
scas
imul
jnp
jo
lcall
add
pop
lret
pop
sub
add
adc
add
jo
push
mov
dec
mov
or
mov
inc
sub
psrlq
enter
addb
je
pop
sub
mov
dec
mov
push
dec
fisttpl
xor
std
in
in
rol
jmp
xchg
scas
and
lock
mov
sbb
pop
leave
add
pop
sti
adcb
cmp
aaa
jecxz
push
xor
outsl
repnz
jp
dec
fdivrl
sub
ret
push
insl
lcall
mov
push
bound
jns
in
mov
push
or
or
mov
dec
out
and
cmp
dec
int
push
es
cmpsb
les
mov
add
and
add
pop
insb
test
and
inc
mov
sub
loop
or
xor
dec
fwait
add
and
or
jl
test
nop
xor
add
nop
and
pop
mov
jne
cwtl
imul
or
cmp
movsl
movsl
jmp
popf
cs
into
mov
stc
imul
lret
aad
add
cmp
ss
xchg
sbb
loopne
ljmp
into
daa
lret
in
xchg
dec
and
dec
imul
push
cmp
push
cmp
lods
sbb
sub
pop
je
jns
sbb
or
scas
adc
cld
push
repz
pop
cmp
divb
sub
insl
sub
inc
xchg
sti
imul
sub
xchg
xor
sti
push
sbb
push
gs
cmp
add
stc
sub
mov
mov
rolb
repnz
bound
cmc
jecxz
mov
push
xor
leave
xlat
sahf
fsubp
mov
cmp
xchg
inc
add
bswap
sti
push
dec
popa
sub
inc
xor
sub
mov
dec
fidivl
lahf
xor
ret
cmp
push
pushf
imul
add
sbb
pop
sti
imul
insl
dec
adc
fistpll
cmpb
sub
cli
test
lods
ficomps
pop
test
and
or
daa
test
ljmp
out
push
pop
xchg
fisttps
in
ret
push
push
jo
pop
pop
aas
add
cmpsl
mov
sar
sahf
cmp
mov
mov
jne
mov
adc
mov
lods
frstor
cmp
mov
sbbl
jge
mov
jle
addr16
push
fists
std
sub
ret
cmpb
pop
xchg
loope
sub
pop
out
ljmp
jne
loop
cmp
sub
in
leave
dec
popa
rclb
push
into
xlat
shrl
bound
dec
jp
or
lret
stos
rcrl
jbe
out
mov
sbb
pop
ds
xor
sub
cmpsb
xor
fisubs
push
fadds
jbe
push
scas
xlat
movsb
xchg
xor
movsb
mov
push
test
call
mov
clc
roll
lods
movsb
popf
popa
sahf
dec
inc
and
lcall
jmp
popf
shrl
pushf
jo
popa
bound
cmp
jo
xchg
std
xchg
cmp
xor
rcl
push
fisttps
outsb
mov
pop
add
cmp
dec
mov
outsb
mov
jl
or
fbld
adc
add
cmp
xor
lods
cmp
mov
scas
sub
out
mov
dec
cltd
pop
mov
stos
ret
xor
dec
testl
fwait
aas
push
inc
outsl
push
ret
out
decb
xchg
jnp
mov
cmp
repz
mov
jge
xchg
stc
ret
mov
mov
mov
pop
cmp
enter
hlt
xor
lods
shl
cmp
or
mov
mov
xor
int
rorb
mov
ds
fcoml
lahf
sbbl
out
enter
sub
jg
testb
movsl
testb
cld
int3
enter
mov
xor
mov
mov
pop
mov
sub
nop
mov
cmpsl
daa
or
pop
mov
sbb
sahf
sub
cs
pop
xchg
mov
fldl
out
dec
mov
mov
outsl
and
add
fstl
adc
dec
jl
imul
popf
pop
in
sub
incb
mov
clc
mov
ds
push
add
inc
int
adc
cwtl
and
popf
scas
clc
mov
loopne
hlt
stc
push
pop
fstl
pop
xchg
jnp
push
lret
mov
lret
int3
into
lock
enter
inc
shrb
sbb
dec
dec
les
add
pop
jle
addr16
scas
inc
test
cli
mov
test
into
fwait
popf
xchg
and
adc
in
jno
int3
pop
sub
pushl
adc
add
cs
or
test
adcb
mov
jo
outsl
jo
mov
mov
sub
nop
popa
and
jecxz
and
and
sbb
icebp
inc
pusha
add
ret
and
or
mov
xchg
push
test
add
test
pop
or
fdivs
shrb
push
xchg
jae
jne
lock
sti
or
adcl
add
inc
ljmp
xchg
adc
clc
mov
dec
push
loop
sbb
andl
addr16
mov
and
out
shr
pop
xchg
imul
push
cmp
popf
push
sub
bound
lcall
or
sbb
fsubl
mov
dec
clc
add
cmp
mov
push
mov
cmpb
pop
movsl
jo
out
sbb
je
xchg
cli
lcall
mov
xlat
ljmp
call
and
cmp
mov
dec
adc
push
push
in
cmp
jne,pn
xlat
xor
sub
fwait
rolb
sub
outsl
fistpll
inc
leave
push
arpl
sbb
int3
pushf
jo
arpl
sub
add
adc
inc
rolb
lret
add
add
test
je
out
pop
inc
sbb
sbbb
popa
lret
in
rcrl
cli
sti
push
fnstcw
pop
test
test
add
out
ret
push
in
ja
pop
leave
cmc
insl
jbe
nop
test
xor
out
add
stos
sub
leave
xchg
imul
jne
hlt
in
outsb
jnp
jb
jp
lret
popf
std
imul
xlat
dec
pushl
aad
nop
adc
shlb
lret
loope
incl
rclb
jg
dec
mov
cwtl
jb
cld
push
cmp
mov
ljmp
cmp
dec
in
popf
lods
push
div
inc
xor
jns
outsl
push
mov
xor
mov
sub
in
fistps
lods
push
fwait
xor
inc
je
popa
ret
dec
jmp
insl
mov
daa
rcrb
stos
jmp
sub
testb
xorb
sub
cli
mov
cs
pop
sub
andb
ror
add
fstps
jbe
jae
pop
mov
std
mov
js
mov
ljmp
jbe
addr16
cmpsl
add
mov
js
pop
dec
icebp
xchg
ds
lret
repnz
sub
jno
xor
jo
imul
jns
mov
push
ja
jns
hlt
es
mov
jo
test
sbb
xchg
je
jl
xchg
xlat
xor
jno
and
jb
sub
rcrl
call
dec
in
in
mov
lods
xchg
jp
in
xor
mov
std
xchg
and
lret
stc
inc
add
add
fwait
idivl
nop
push
daa
inc
gs
fisubl
xor
or
sub
movsb
jl
sti
jmp
mov
insl
ja
in
pop
nop
outsb
inc
and
xchg
cmpsl
lods
pushf
gs
popa
lcall
push
daa
push
mov
push
jne
shrb
int3
and
dec
shl
arpl
nop
pop
cmpsl
lods
sub
lahf
jnp
outsb
mov
sbb
add
aad
testl
sub
mov
sarb
push
movsb
inc
cld
inc
mov
push
in
or
mov
xor
vpextrw
rol
inc
lea
inc
xlat
inc
ljmp
cld
push
jbe
sub
aaa
jmp
cli
addl
xor
stos
in
in
arpl
or
enterw
hlt
les
in
mov
jae
or
pushl
inc
push
cli
mov
mov
clc
mov
arpl
push
dec
imul
pop
cmp
insb
mov
pop
cmp
xor
push
cld
inc
jns
lods
dec
add
imul
in
or
loopne
jl
mov
cmpb
sarl
or
es
jmp
mov
sahf
dec
sub
test
repnz
rcrl
jge
cmpsb
cmc
stos
cmp
shl
mov
mov
mov
xchg
push
les
sub
dec
mov
fcmovbe
int3
and
xor
and
jge
test
push
lds
test
shll
dec
popf
pop
add
lret
mov
aaa
jmp
arpl
icebp
jno
jne
add
mov
aam
sbb
xor
and
xchg
adc
mov
adc
cmp
fcmovnu
test
ja
rol
jno
pop
push
or
inc
test
imul
into
add
je
inc
inc
pop
adc
sub
rcll
imul
mov
shl
sbb
jp
push
lock
ret
jno
mov
in
rolb
mov
or
mov
and
sbb
adc
stc
mov
xchg
dec
jne
into
mov
mov
push
test
sti
adc
scas
inc
repnz
cmp
icebp
in
mov
sbb
in
leave
cmp
jle
int3
push
sbb
insl
push
xchg
mov
cltd
sub
nop
adc
fidivrs
add
das
out
sbb
push
cmp
mov
je
adc
adc
cmp
out
add
aad
ret
mov
out
cmp
cs
cmovne
fisubrl
ljmp
cltd
out
and
xor
jo
loope
inc
addr16
lds
sub
faddl
fldenv
loope
daa
jmp
cs
std
stc
pop
loope
mov
test
loope
inc
push
fsubrl
jmp
sub
pop
cli
and
divb
or
mov
xor
inc
loopne
xchg
pop
cltd
xor
or
pop
sub
jge
daa
xchg
dec
xchg
add
scas
jge
mov
jnp
xor
popf
sub
arpl
ret
mov
inc
or
addr16
fwait
push
cli
mov
adc
inc
mov
xor
fistpl
push
sti
fwait
push
or
mov
pop
jno
mov
inc
cli
in
mov
mov
leave
shll
mov
cmpsl
sub
xchg
movsl
inc
push
aas
cmp
mov
dec
mov
imul
je
mov
and
dec
push
mov
cmp
and
push
icebp
inc
pop
fsubrl
iret
add
icebp
ljmp
push
ds
loope
and
sbb
jmp
out
mov
das
jo
xor
ret
xlat
sub
mov
adc
rol
mov
and
sub
lods
push
cmp
lods
iret
clc
adc
test
and
outsl
xor
sbb
sbb
aas
lret
jae
stc
or
add
mov
sub
scas
inc
mov
pop
adc
dec
sub
push
push
je
dec
sbb
loopne
into
and
push
or
fcomp
push
imull
popa
lea
xchg
lds
outsb
jae
testb
xor
loopne
push
sub
int3
mov
insl
cld
adc
push
cld
loop
sahf
push
leave
xchg
mov
mov
in
jecxz
jp
mov
ret
mov
cmp
push
pop
ss
testb
sahf
mov
lods
aas
jns
push
xor
fsubrl
jns
fdivs
mulb
rol
shll
repz
je
push
inc
cmp
and
lock
add
mov
stos
cmc
stc
shl
push
sbb
les
dec
mov
jp
push
shl
outsb
push
add
or
movsb
mov
sbbl
add
xchg
inc
bound
cmp
cltd
int
mov
push
scas
sbb
cmp
popa
cmp
es
jo
push
scas
push
cmpsl
jecxz
adc
and
pop
adc
aam
mov
pop
dec
sub
push
pop
fisubl
pop
push
sbb
rorb
push
loop
data16
rcl
push
imul
jge
das
loope
inc
adc
or
mov
add
dec
dec
push
inc
pop
xor
cld
cli
dec
fwait
jg
sub
std
iret
sbb
inc
xchg
popa
xor
jmp
shr
fldz
xchg
xor
sub
pop
or
add
xor
jp
adc
in
add
hlt
fcompl
jb
outsl
adc
sbb
xchg
ss
cmpsb
mov
movsb
dec
xchg
cmp
loop
mov
in
scas
and
push
inc
stos
sbb
icebp
mov
xor
out
jecxz
xchg
ss
and
and
dec
pop
cld
das
jle
mov
lods
lahf
fldln2
hlt
daa
outsb
mov
jp
fwait
mov
in
or
aas
sahf
xchg
sbb
pop
pop
adc
and
scas
mov
jnp
sti
xchg
mov
lcall
push
je
mov
dec
pop
dec
adc
pushf
sbb
dec
negb
sub
pop
aad
sub
mov
xchg
sbb
xor
mov
ret
adc
fildll
mov
pop
sub
mov
cmp
cmpsl
fadd
xchg
adc
out
sub
cmp
fidivl
cmpsl
dec
sbb
or
and
xchg
enter
jns
into
sub
mov
fbld
popa
rolb
ljmp
insb
leave
mov
adc
xor
inc
in
nop
xor
dec
sbb
divl
push
jp
jl
jb
iret
jo
xor
cwtl
pop
cmp
mov
dec
xchg
pushf
push
jo
mov
rcrb
cmp
rorl
cmpsb
mov
pop
inc
add
jge
int
push
jae
xchg
jge
inc
or
dec
aas
xor
mov
xor
hlt
adc
and
movsl
and
inc
push
adc
loopne
jno
mov
in
mov
push
fdiv
stos
js
pop
rolb
sbb
or
mov
ljmp
out
push
lcall
lods
inc
jmp
mov
out
in
sub
mov
es
mov
fwait
lds
push
in
jle
testb
mov
xchg
mov
xor
lret
add
in
xchg
and
incl
sub
sub
add
adcl
data16
ja
leave
dec
and
inc
pop
jnp
addr16
jmp
pop
pop
cli
sub
out
mov
push
add
cmpsb
dec
push
imul
stos
xchg
movsb
sbb
aam
xchg
jne
out
xor
faddl
loopne
repz
dec
lods
mov
inc
lock
adc
es
jae
jns
inc
xor
jp
bound
repz
xchg
xchg
fisubrl
rcll
incl
loopne
sbb
push
jl
jp
lcall
iret
mov
ja
adc
cmp
xchg
imul
push
mov
push
inc
loope
xchg
or
mov
jno
addl
dec
pop
sahf
sub
shrb
push
dec
mov
gs
pop
pushf
dec
inc
mov
sub
push
push
lahf
mov
fs
adc
lods
cli
mov
cmp
das
out
sbb
and
mov
mov
rclb
and
cmp
cmp
cmp
xor
in
sub
sahf
lcall
rcrl
and
push
cmp
test
mov
sarb
pop
es
push
mov
adc
mov
inc
inc
jns
xchg
hlt
push
ret
std
ret
or
ja
aaa
mov
insl
jbe
push
arpl
mov
nop
sub
add
pop
xchg
adc
pop
addr16
push
adc
push
rcrb
push
inc
leave
shrl
mov
arpl
call
popf
mov
sbb
mov
jne
insb
sbb
sub
stos
pop
into
pop
out
in
push
and
mov
or
mov
rorb
daa
adc
xor
adcb
in
rcr
mov
jle
pusha
cmpsb
rorb
daa
daa
xor
or
fbstp
rol
loopne
repnz
mov
addb
iret
mov
push
shl
push
mov
inc
mov
call
jnp
fs
cmp
icebp
ljmp
dec
or
jle
in
lret
mov
out
dec
imul
jbe
shrl
mov
outsl
push
rcrl
dec
aaa
imul
pop
lock
jo
push
movsl
cmpsl
pop
hlt
addr16
push
xlat
ja
into
inc
daa
leave
push
stc
xor
leave
shrb
in
rolb
pop
jbe
push
add
in
iret
test
xor
mov
cs
aas
out
pop
imul
imul
jle
mov
xchg
push
cmp
xchg
das
mov
jge
cli
adc
pusha
push
dec
popf
push
cld
lahf
sar
jb
out
xchg
add
xchg
mov
xor
xchg
cs
mov
pushf
xor
movsb
xlat
out
popf
insb
xor
and
adc
dec
adc
push
mov
xor
add
movsb
clc
loop
mov
sub
andl
adcl
hlt
int3
or
negl
jae
cmp
test
xor
in
xor
jmp
lahf
push
pop
mov
push
pop
ficoml
and
and
outsb
cmpb
test
sti
add
push
clc
test
cmp
sbb
out
pusha
xorb
lahf
add
pop
shrb
or
icebp
movsb
jbe
xchg
pop
js
or
mov
and
outsl
push
push
js
loopne
jl
popf
add
lock
test
mov
movsl
call
mov
inc
ret
std
arpl
push
adc
addb
andb
xchg
dec
adc
cltd
add
cli
mov
push
iret
leave
xor
idiv
add
add
inc
pop
fcomps
mov
jbe
lahf
dec
inc
pop
xor
out
mov
rol
fiaddl
in
jno
sti
xor
clc
cltd
push
rcrb
mov
mov
or
jg
dec
inc
pop
enter
mov
test
inc
aad
gs
leave
daa
cmpsl
cmp
inc
jbe
jo
stos
sub
and
mov
xlat
cmp
mov
loop
fwait
jmp
test
xorb
add
es
push
cld
sbb
lock
scas
xor
sub
push
gs
and
hlt
push
jns
xchg
xlat
jo
aaa
lahf
in
movsb
rorb
lret
ljmp
fstps
cmp
hlt
aaa
gs
inc
add
lds
sbbl
hlt
dec
push
fists
dec
in
cld
imul
sub
and
mov
jne
mov
lods
in
les
jge
xorl
adc
bound
sbb
pop
mov
outsb
mov
mov
cmp
scas
mov
cmp
outsl
imul
pop
out
mov
jno
pop
stos
cltd
or
aam
pop
pop
inc
push
bnd
mov
jg
insb
sahf
push
mov
repnz
mov
jne
xchg
mov
xchg
or
xor
lock
cmp
enter
in
std
pusha
movsl
test
icebp
es
and
and
push
sti
sub
insl
push
mov
and
in
pop
sti
or
scas
mov
mov
jnp
test
cmp
fsubr
jo
es
or
cmp
pushf
cmp
sarb
js
fmull
and
cmp
inc
cmpl
push
and
push
dec
and
dec
sub
in
push
mov
int
stc
fsub
sub
adc
outsl
or
stc
not
andl
les
mov
enter
mov
cwtl
pusha
sub
arpl
pop
jecxz
mov
mov
lock
pop
ds
xchg
mov
aas
mov
or
pop
add
cmp
out
jb
out
rclb
dec
mov
notl
pop
fmuls
pop
or
ret
aad
adc
adc
xchg
mov
jecxz
testl
test
les
sbb
pop
push
xor
imul
mov
lods
add
sub
and
add
mov
or
inc
add
test
xchg
testb
push
insb
mov
sahf
out
jl
je
in
jge
rep
inc
add
dec
nop
rcrb
fmull
mov
push
mov
cld
xor
cmpsb
fucomp
mov
arpl
push
out
adc
mov
fiaddl
mov
push
lret
push
lret
call
xor
push
jmp
iret
cli
sub
repz
imul
aaa
aad
mov
xchg
pop
adc
aam
rcrl
repnz
loope
mov
je
inc
popf
out
stc
lea
outsl
rcrl
imul
jb
ficomps
das
cmp
mov
push
and
test
jmp
jle
inc
xchg
jmp
aam
fiadds
add
loope
inc
xchg
shll
or
sti
adc
add
or
les
mov
fs
clc
arpl
daa
ljmp
dec
cmp
or
cmpl
mov
jns
aad
stc
xlat
xchg
mov
fnstsw
adc
mov
mov
jge
je
inc
pop
xchg
push
cltd
sbb
dec
cmp
popf
cwtl
add
lock
lods
xor
sti
xchg
push
loopne
aad
mov
lea
mov
ss
in
loopne
jo
adc
daa
stos
add
add
pop
cwtl
and
cmp
stos
sbbb
inc
dec
jmp
clc
and
roll
pusha
xor
incb
jnp
and
sarl
xlat
repnz
dec
pop
cli
dec
push
clc
mov
mov
ds
loop
pop
push
inc
out
pop
int
dec
push
pop
lock
cmpsb
pop
outsb
inc
cmpsb
pop
clc
and
cmpsl
dec
imul
jb
xlat
lock
out
cli
aad
jns
cmp
es
lret
cmp
cltd
xor
fcoms
jne
cmp
jecxz
das
adc
imul
push
dec
vcvttpd2dqy
loopne
popa
cmc
mov
jl
cltd
xchg
outsl
cmp
popl
jl
sbbl
dec
fsubrl
jle
mov
push
push
mov
and
ret
mov
dec
sbb
and
inc
repnz
pop
ja
dec
sub
jle
mov
sub
jbe
mov
cmovnp
mov
repnz
push
inc
lea
adc
pop
sbb
xchg
cli
lret
sub
inc
sbb
jmp
in
jp
negl
inc
xchg
nop
pop
jp
dec
xlat
clc
divb
pop
jp
repnz
pop
fnstcw
xor
stos
lods
mov
in
aam
aad
pusha
outsl
out
hlt
das
mov
and
dec
jno
loop
jo
fidivrs
sbb
rolb
sbb
pop
es
mov
in
inc
pop
sub
mov
dec
adc
sub
int
fistl
pusha
test
mov
test
lret
ljmp
push
fsubrs
test
inc
push
xchg
xchg
mov
adc
dec
adc
mov
xor
enter
adc
mov
fsubr
push
mov
andb
gs
cld
stos
lea
rcrb
mov
sbb
inc
inc
jnp
pop
ds
or
bound
mov
xor
inc
into
dec
sbb
cmc
stc
hlt
push
xchg
movsl
push
jno
push
jle
sub
xchg
push
push
add
ds
xlat
fdivrs
xor
mov
jg
push
int3
mov
push
pushf
mov
pop
inc
scas
in
cld
test
loop
add
std
xchg
mov
mov
xchg
mov
aad
or
and
pop
push
insb
fsub
jecxz
dec
fs
ds
xchg
stos
cmp
repz
xlat
inc
movsb
ja
int3
lahf
sar
jp
movb
rcr
xchg
ljmp
insl
int
pop
cmp
sbb
fnsave
mov
pop
testb
push
cmp
push
mov
xchg
push
loope
icebp
pop
adc
scas
push
mov
lock
imul
into
inc
cmp
imul
mov
test
insb
lea
xchg
es
or
ss
add
mov
mov
sub
inc
push
jge
stos
mov
cltd
int3
daa
mov
add
pop
inc
jecxz
scas
std
or
jle
iret
and
inc
add
dec
add
fnstsw
out
add
and
aas
mov
call
push
cmc
push
mov
jb
mov
xor
mov
jbe
dec
shrl
ja
icebp
leave
in
add
adc
and
out
push
pop
and
sub
mov
xchg
into
fs
in
stos
ret
or
dec
mov
fldl
dec
mov
mov
xchg
lret
sbb
xchg
xor
fstps
outsl
lret
rorl
mov
stos
and
fldl
lods
bound
cs
inc
and
xchg
push
fcompl
popa
decb
pop
scas
xor
imul
or
push
jno
jle
or
adc
pcmpeqb
cmp
xor
ljmp
std
mov
mov
clc
xchg
pop
fisttps
sbb
mov
sbb
mov
push
fwait
cltd
dec
push
cs
in
mov
divl
cmp
dec
adc
addr16
jecxz
div
or
outsl
cmp
or
clc
pop
jbe
andb
adc
ds
jo
mov
cltd
aam
mov
js
sbb
jge
stos
lret
inc
inc
faddl
inc
mov
mov
jno
xchg
pop
or
pop
mov
lret
pop
fbld
xlat
mov
cmp
test
ljmp
sbb
shll
and
sbbl
adc
or
jg
xor
or
sub
cmpsb
out
and
std
mov
add
adc
ljmp
push
adc
mov
ljmp
cmp
jbe
adc
lods
push
mov
leave
lock
pop
xor
lret
daa
add
dec
add
jmp
ret
xor
loop
fdivl
arpl
push
or
xlat
mov
les
shl
in
les
mov
xor
xchg
movsl
cmp
sbb
mov
xchg
sbb
inc
mov
movb
jae
or
xor
sub
aad
movsb
and
add
mov
shlb
inc
cmp
sub
jno
adc
movsl
dec
sti
lcall
inc
lahf
mov
stos
lret
inc
mov
inc
pop
lcall
shlb
cmp
scas
push
pushf
aaa
aas
mov
imul
repnz
pop
stos
push
add
test
int
mov
add
inc
mov
inc
je
ficoml
out
js
xor
lahf
out
insb
jge
jo
adc
inc
pop
sti
dec
test
test
aam
xor
xor
jnp
fs
and
cld
jle
aas
lods
xchg
mov
inc
repnz
jle
push
out
mov
orb
int
std
jle
loope
popf
jecxz
and
dec
rclb
or
movsb
lret
movsl
test
daa
inc
mov
sahf
cld
dec
aad
sub
lret
dec
clc
test
and
inc
mov
cmpsl
and
jnp
cli
sbb
repnz
inc
cmp
sbb
les
xor
aas
add
jno
shll
mov
push
or
add
cmp
in
sub
inc
pop
aad
pop
cli
jmp
pop
outsl
mov
clc
cmp
out
outsb
sub
aaa
aas
test
aad
cmpsl
mov
js
loopne
jecxz
movsb
mov
mov
aas
ficompl
cli
and
add
lret
sbbl
sub
imul
cmpb
data16
cld
pop
addr16
add
adc
xor
rorb
jne
fs
sub
lahf
mov
dec
hlt
out
rcl
push
inc
dec
ret
test
movsl
ds
pop
and
jmp
daa
aad
jbe
jmp
mov
pusha
sbb
xor
mov
inc
in
out
push
xor
sub
rclb
xchg
popa
testl
xchg
xchg
stos
inc
addb
sti
clc
subb
jae
mov
popf
lret
xchg
or
sub
sbb
pop
cmpsb
cltd
imul
inc
sbb
sbb
daa
andb
add
repnz
inc
aad
dec
sub
sbb
fdivrs
pop
push
jns
in
adc
mov
pop
hlt
mov
jno
push
push
push
adc
cmpl
aaa
xor
lods
mov
lods
and
dec
rclb
xchg
dec
inc
nop
jg
add
dec
pusha
and
sbbb
ret
xchg
pop
inc
mov
sub
bound
cmp
push
mov
jbe
jecxz
adc
xchg
das
divb
add
lret
jns
cmp
rcrl
shl
sub
mov
jmp
sub
mov
cwtl
out
in
mov
mov
push
mov
sub
mov
mov
inc
test
sbb
cltd
add
loopne
cmp
cltd
jo
fs
in
mov
mov
push
call
pop
loop
pop
dec
imul
je
repnz
mov
and
push
sbb
push
or
aaa
arpl
sub
div
mov
sbb
iret
push
fadds
xor
sub
lock
in
fsubrl
imul
push
lock
fistl
loope
cmpsb
jp
push
fsts
push
xchg
in
sbb
loopne
xor
cmp
push
or
pusha
cltd
lret
scas
jb
inc
add
jae
lcall
aas
pop
ret
mov
negl
sbb
xor
inc
sarl
jecxz
fwait
mov
imul
adc
adc
cmp
pushf
cmp
dec
hlt
pop
jb
sti
mov
adc
gs
jp
sub
mov
test
mov
pop
add
into
push
xchg
fldt
ror
jmp
stos
ret
repnz
jp
xor
test
mov
push
cltd
inc
fisubs
jl
aas
test
test
insl
xchg
pop
outsl
sbb
push
push
fisttpll
bound
imul
and
aaa
and
into
aas
dec
cmp
int3
push
pusha
jle
das
push
inc
pop
sbb
nop
mov
and
jno
outsl
mov
repz
jnp
js
add
dec
lcall
xorb
aaa
data16
leave
leave
jae
lock
loopne
out
aam
imulb
orl
jecxz
fwait
or
shll
xchg
dec
or
mov
sub
push
dec
in
or
js
adcl
sub
mov
and
xchg
xchg
dec
and
sahf
pop
fldpi
rol
shr
shlb
shlb
sbbl
lret
or
cltd
xchg
shll
cmc
orl
lret
mov
pop
sub
lahf
fisttpll
addr16
or
cmp
ljmp
lds
add
mov
insb
xor
in
rclb
jge
or
cli
orl
aam
pushf
mov
fwait
push
push
je
das
inc
jo
lcall
mov
addr16
xchg
mov
fcomps
push
xchg
sub
test
jne
xor
pop
lods
outsb
xchg
or
add
adc
test
daa
ror
pop
nop
call
xchg
cmp
sub
dec
testb
pop
aad
arpl
stos
dec
mov
inc
ljmp
daa
dec
lds
rcl
add
xor
cld
jge
sub
stos
outsb
pushf
es
xchg
push
jl
jbe
jae
stos
subb
xor
dec
fwait
jb
fadd
leave
scas
lret
sbb
enter
mov
mov
adc
cmp
sbb
push
dec
lahf
xlat
inc
repz
or
and
imulb
sbb
mov
ret
outsl
jno
inc
mov
or
inc
in
cli
movsb
push
je
dec
lret
insl
cld
cmp
fs
jne
sbb
shrl
out
pop
cwtl
out
mov
mov
push
adc
mov
pop
mov
mov
cli
lahf
xor
adc
sbb
xor
pop
add
ds
mov
and
insl
mov
aas
sbbb
adc
jge
cltd
sbb
jmp
icebp
popa
push
ficomps
test
cmpsb
inc
les
xlat
and
xor
mov
fildl
into
dec
pop
ficompl
cmpsl
sahf
dec
sub
inc
testl
sbb
imul
inc
inc
pop
jg
adc
inc
add
pushl
movsl
inc
push
dec
mov
sub
mov
xlat
stc
out
and
adc
movsb
xchg
adc
mov
pop
inc
jecxz
mov
add
insl
fmuls
pop
daa
or
mov
sub
addb
add
lret
push
fstps
lcall
jecxz
mov
andb
dec
xchg
movsl
pop
xchg
cltd
dec
rorl
mov
mov
or
sub
mov
xor
js
movsl
rcll
sbb
out
push
sbb
ja
and
repz
imul
sub
cwtl
mov
cmp
mov
scas
sbb
cltd
mull
repz
cmpsl
lret
mov
adc
shlb
xchg
adc
cmpsl
cs
hlt
sbb
pop
mov
jecxz
mov
dec
lods
ffreep
dec
and
loope
out
daa
inc
out
test
xchg
sub
shll
push
mov
pop
push
aad
mov
adc
repz
push
fstpl
scas
ret
popl
and
jae
add
mov
sub
pusha
sbb
sahf
in
int
push
shll
jge
ficoml
insl
setl
js
add
lds
inc
lock
lcall
addr16
or
test
xor
inc
adc
sub
mov
adc
cli
shl
loope
cmp
cwtd
call
and
pop
sbb
mov
dec
fidivs
fadds
pop
mov
xchg
sub
mov
pop
sub
jnp
ja
int3
xor
sub
sbb
sar
xchg
ljmp
mov
gs
add
sub
mov
shrb
stc
push
fdivl
je
or
mov
push
rolb
xchg
adc
cmpsl
lcall
cli
jno
out
enter
jae
mov
out
push
add
sub
aas
mov
push
pop
sub
loopne
mov
shll
push
mov
aas
cmp
cmp
add
cmpsl
adc
jo
or
lret
jo
loopne
shlb
push
ret
stos
sbb
test
leave
or
xor
jo
outsb
sti
and
es
in
popa
stos
dec
aad
jo
xchg
fwait
mov
jno
xchg
cwtl
mov
out
sbb
pop
adc
out
lea
pop
cmp
xchg
mov
xchg
dec
mov
stos
pop
test
aam
int
cmpsb
mov
pop
cwtl
and
sbbl
jge
dec
xor
dec
insl
test
ds
cmp
test
xchg
testb
and
enter
testl
and
je
push
mov
gs
js
xor
inc
xlat
inc
dec
xchg
out
insl
sub
call
adcl
jecxz
mov
mov
dec
call
testl
adc
sahf
mov
pop
sbb
xlat
hlt
fdivl
mov
jmp
jno
mov
push
imul
call
out
jg
movsb
out
ss
ja
sub
enter
xchg
push
iret
pop
aam
insl
pusha
andl
vshufpd
sub
jb
xchg
dec
or
jmp
jae
and
lcall
push
addr16
push
test
inc
roll
mov
sbbl
stos
movsl
sbb
pusha
int3
bound
scas
jns
stos
les
mov
jecxz
mov
shl
sbb
and
lcall
add
rclb
adc
xor
aam
hlt
mov
pop
xor
xchg
les
iret
ja
mov
cmpsb
xchg
cmp
jae
mov
or
cmp
loopne
and
push
lcall
adc
sbb
js
sbb
sbbl
lcall
pop
imul
in
push
push
xor
jae
cld
addr16
add
leave
mov
mov
test
xlat
cmpb
mov
and
ja
loop
xchg
xchg
xor
ret
mov
add
xor
mov
mov
pop
cs
icebp
andb
scas
outsb
and
std
call
ljmp
lock
cs
cmp
mov
hlt
aam
or
xor
insl
mov
int
popa
jge
in
mov
into
or
add
jp
dec
stos
mov
in
add
idivb
nop
ret
inc
hlt
clc
cld
cld
cltd
inc
daa
dec
icebp
sbb
mov
mov
mov
xchg
mov
or
pop
ret
lret
dec
push
movups
push
pop
mov
push
pmulhw
push
add
fwait
lret
push
adc
jne
fsubs
sbb
pusha
push
xchg
in
test
ss
cmp
lods
rcrb
lds
out
in
subb
in
add
dec
pop
adc
cmp
clc
clc
inc
mov
push
mov
je
pop
jmp
addr16
andb
adc
sub
aaa
cmp
push
aam
mov
out
loop
cmp
pop
popa
jmp
ss
pop
push
lahf
aam
data16
pop
ret
lcall
out
jmp
rcrb
movsl
cmp
push
scas
jnp
clc
dec
cmpl
inc
jle
inc
fists
lcall
fsub
imul
out
clc
iret
add
adc
imulb
mov
cltd
test
adc
cmc
push
loope
push
ret
les
int3
adc
inc
lods
loopne
std
dec
test
pop
dec
ja
popf
fdivrs
and
push
in
dec
mov
mov
xchg
stos
mov
pop
adc
jae
aad
iret
ret
pop
daa
adc
mov
pop
dec
or
dec
lret
and
data16
push
mov
out
mov
jl
jne
dec
sahf
mov
cwtl
and
in
dec
ss
or
fwait
cli
pop
daa
js
jp
iret
movsl
inc
jg
xchg
pop
shlb
xlat
pop
push
sub
inc
pop
inc
push
pop
bound
or
or
push
fcoml
xor
ss
add
sbb
dec
sbb
jbe
ret
in
push
dec
inc
cmpl
pop
test
push
arpl
dec
repnz
adc
in
mov
xchg
mov
inc
outsl
repz
push
loop
addr16
push
ret
fstpt
or
sbb
xor
sub
and
inc
mov
or
gs
testl
mov
movsb
sbb
repz
xor
pusha
nop
cld
jl
pop
pop
repz
ja
js
mov
mov
movsb
inc
mov
jge
lock
dec
pop
cmp
stos
adc
popa
sbb
scas
sbb
scas
mov
clc
adc
mov
push
cmp
push
xchg
stos
out
aaa
jp
popf
dec
mov
add
pop
mov
in
data16
mov
orb
pop
call
jnp
test
and
sub
ds
ljmp
cmc
icebp
pop
dec
fmulp
pop
xchg
insb
out
dec
xlat
nopl
stos
or
inc
stc
fisttpl
int
into
fsubs
jbe
cwtl
xchg
sub
insl
adc
popa
pavgw
mov
add
inc
rclb
dec
cmp
cmpsl
lods
loopne
mov
or
pop
mov
les
in
xchg
ret
lods
mov
loop
or
loope
and
jb
cmp
jnp
mov
ficoms
add
js
xorps
ret
fisubs
sbbb
addb
xor
add
int
adc
int
jne
adc
xchg
data16
fldenv
and
leave
loope
cs
pop
cmpsl
inc
fdivs
sub
into
inc
cmpl
and
sbb
push
cmp
sub
das
mov
cld
and
jge
enter
pushf
lock
jb
and
or
sbb
lret
mov
cs
ds
xor
push
mov
sbb
sbb
jmp
outsl
nop
and
jp
cmp
je
pop
cltd
mov
clc
cmp
fmul
sarl
loope
es
xchg
mov
out
sbb
loope
into
pop
xor
or
into
imul
pusha
mov
loopne
jno
and
sbb
dec
fwait
das
imul
or
imul
or
mov
dec
sbb
pop
outsb
cmp
aam
lcall
pop
cmpsb
shrb
dec
fmuls
pop
adc
push
adc
mov
mov
clc
daa
sbb
jle
mov
and
repnz
gs
jg
inc
add
scas
cwtl
arpl
dec
sar
mov
sbb
lock
mov
mov
imul
out
cli
int3
hlt
jle
inc
push
adc
sub
cs
xchg
cmp
in
sub
fwait
xchg
mov
mov
frstor
fisubs
inc
inc
repnz
or
rclb
daa
sub
sub
fists
fimull
pop
outsb
incb
incb
aam
inc
xchg
mov
lea
dec
into
jg
lahf
sbb
andb
adc
int3
pushf
ds
or
pop
jns
cmpsb
test
jmp
int
pop
sahf
ds
pop
push
mov
dec
aad
and
cmc
ja
mov
in
mov
adcl
xchg
hlt
mov
pop
push
test
test
fdivr
mov
rorb
push
clc
mov
mov
orb
and
sub
adc
outsl
and
outsb
loop
mov
test
dec
imul
aad
mov
mov
into
jbe
and
sub
pop
sbb
dec
mov
sub
push
pusha
dec
jae
pop
mov
loop
jbe
dec
lcall
and
rol
pop
push
scas
adc
and
cmp
dec
pop
stos
pop
pop
lods
jl
insl
pushl
into
cmp
xchg
mov
inc
mov
jae
xchg
mov
mov
jl
mov
fs
adcl
or
cwtl
int3
mov
addr16
cs
push
lcall
outsb
cmp
mov
ds
les
aaa
add
adc
mov
stos
mov
add
cmpsb
cmpsl
cmpsb
test
jnp
ss
clc
fdivl
or
inc
dec
mov
aaa
jbe
mov
arpl
int
cmp
push
add
or
xchg
and
mov
cmc
into
insb
pusha
mov
sbb
in
jae
xchg
icebp
cmp
jmp
shll
xchg
imul
cmp
xchg
lods
lods
add
jb
jno
daa
addl
popa
movsb
mov
add
js
mov
sub
nop
das
imul
or
xchg
movsb
jbe
mov
pop
dec
lods
out
fs
cmp
sub
push
dec
clc
js
loop
loop
pop
ret
inc
adc
xor
cmpsb
xchg
fnstcw
jecxz
pusha
in
enter
cmpsb
test
dec
addr16
xrelease
test
push
insb
mov
lods
loop
push
into
pop
loope
push
or
cmp
mov
adc
rol
testb
or
icebp
enter
notb
fidivrl
divb
xchg
xchg
xor
or
in
push
rolw
dec
or
push
dec
push
shll
popf
mov
add
out
sub
jp
inc
dec
or
fidivrl
sub
lcall
aam
xchg
mov
stos
nop
add
ret
and
lcall
lods
xor
fxsave
or
inc
cmp
lods
dec
test
das
addr16
push
push
fmuls
cmp
or
push
jno
sbb
imul
jae
push
mov
fsubrs
data16
lea
jno
lods
jl
xor
jb
mov
sub
cmp
imul
out
nop
shlb
mov
call
testl
inc
out
push
movsb
loope
iret
push
iret
sub
test
mov
loopne
mov
xorl
hlt
pop
je
test
and
fildl
and
jp
in
clc
jge
sub
add
add
jg,pn
sub
fcmovbe
cmpb
adc
inc
jl
daa
sub
inc
rclb
cmpsb
stos
imul
test
or
fwait
push
clc
sbb
fwait
insb
out
inc
push
xor
aaa
aaa
mov
add
scas
inc
jecxz
pop
in
nop
mov
add
fwait
and
mov
stos
insl
xor
popa
push
int3
mov
shlb
out
cs
mov
mov
je
dec
mov
jne
repz
mov
pop
mov
add
lret
cmpl
int3
and
inc
xlat
push
das
in
cmpsb
movsb
xlat
pushf
lcall
imul
inc
out
test
or
mov
or
sub
mov
inc
cs
and
loopne
lret
and
aam
mov
js
imul
jns
daa
shll
fs
mov
loop
rorb
out
xor
pop
add
cli
daa
dec
pop
negl
aam
popa
mov
data16
sub
push
incl
cmpb
or
cmp
jns
pop
aaa
cmp
incb
push
daa
mov
xor
stos
lock
dec
addr16
cmp
and
or
jae
push
xchg
dec
lods
xor
xchg
icebp
movsb
xchg
adc
cmp
add
sub
loopne
ss
outsl
jo
arpl
push
ss
cmpsl
push
lret
test
add
push
pop
dec
add
inc
ds
sub
sar
dec
cmp
pop
inc
cmpsl
mov
pop
jns
dec
sub
fadds
stos
nop
shll
lea
jmp
negl
loop
mov
mov
scas
xor
call
insl
sbb
lahf
shlb
mov
out
int
xchg
jo
mov
dec
fisubrl
jge
mov
jne
test
shr
cs
mov
pop
hlt
mov
movsl
dec
inc
sub
js
int3
mov
pop
and
push
lcall
push
in
and
ds
xchg
je
lret
mov
sbb
mov
lahf
xor
jmp
sbb
xchg
lock
pop
es
pop
imul
add
ret
hlt
xor
mov
aad
or
xchg
xor
lret
sub
cmp
shr
mov
sub
mov
push
lret
test
shlb
jge
dec
jbe
cmp
sub
mov
sub
gs
xchg
cld
mov
adc
and
rol
push
mov
jmp
adc
cltd
into
out
lock
outsb
int3
sbb
xlat
or
scas
nop
sahf
mov
push
dec
out
mov
in
dec
roll
outsb
mov
js
jnp
dec
pop
aam
inc
bound
hlt
adc
subl
cmpsb
je
mov
cltd
cli
xor
xor
adc
cmpsl
adcl
lret
aas
das
sar
jo
cmp
jecxz
pop
je
jle
and
lret
aam
rorb
insb
mov
xor
adc
ss
mov
push
jo
fsubr
fcmovnb
xlat
and
and
cld
fidivs
ljmp
call
shlb
adc
dec
addr16
out
int
or
ret
mov
or
cmp
pop
dec
mov
loop
mov
or
in
sub
mov
out
jo
nop
in
mov
int3
loopne
or
sbb
push
xor
call
loop
xor
pop
into
aaa
add
mov
hlt
adc
dec
push
and
pop
pop
jp
addl
pminub
add
xchg
mov
mov
addw
scas
push
shlb
push
cli
dec
ss
mov
inc
shll
push
mov
movsl
shlb
xor
jae
push
push
mov
inc
push
sub
jle
insl
pop
cmpsb
icebp
loop
lret
test
cmc
cmpsb
sbb
or
outsl
jmp
rcrl
das
scas
cmp
ljmp
ljmp
sub
push
imul
sahf
int3
inc
jo
mov
ret
push
mov
iret
xor
test
movsl
daa
mov
lcall
imul
mov
shrl
mov
lahf
lcall
push
jg
hlt
bound
shlb
lea
jge
add
mov
push
mov
test
clc
roll
scas
inc
and
outsb
dec
add
sbb
inc
push
or
pop
inc
and
dec
ja
xlat
sahf
inc
sbb
cmp
sbb
movsb
std
push
mov
aaa
fs
sahf
dec
lock
addr16
adc
in
xchg
fwait
push
movsl
pushf
movsl
push
xlat
adc
jmp
adc
pop
punpckhbw
popa
rorb
pop
xchg
pop
sbb
inc
sub
xchg
popa
sahf
push
punpckldq
mov
in
pop
adc
xchg
fwait
shr
cltd
out
adc
out
and
sarb
and
jmp
mov
les
mov
dec
push
int3
pop
inc
popa
imulb
dec
dec
cli
xchg
idivl
rclb
or
inc
pusha
ret
pop
lcall
push
jbe
pusha
xor
int
push
add
jb
lock
jle,pt
and
cltd
test
fldt
in
leave
lcall
mov
lods
test
jmp
mov
clc
inc
cmp
xchg
adc
popa
xchg
adc
mov
mov
xchg
and
jge
out
sti
dec
pushl
push
psllq
mov
aam
sti
fs
int
loopne
or
xchg
xchg
and
lods
mov
out
adc
jno
or
gs
add
jl
push
pop
aaa
aad
mov
or
adc
iret
mov
lea
subl
inc
sahf
mov
popa
rclb
sub
fsubp
push
sbb
inc
ja
mov
cli
or
frstor
or
ret
jno
mov
mov
aas
mov
out
push
rcll
outsb
add
add
or
or
xchg
sub
mov
ret
sbb
bound
ret
push
in
out
xor
outsl
stc
mov
jge
push
inc
dec
xchg
mov
call
sbb
ss
xor
mov
fs
xchg
pushf
insb
nop
jae
aad
lock
fldcw
inc
mov
inc
add
cwtl
sub
test
test
repnz
push
lock
xor
xchg
ljmp
fsubrp
xor
add
stos
mov
mov
mov
std
ret
sub
xchg
mov
push
mov
pusha
ja
scas
sub
push
loope
jecxz
gs
pop
out
aaa
add
xchg
stos
mov
cvtps2pi
movsb
jle
sbb
fs
inc
adc
inc
out
mov
adc
movl
in
xchg
and
and
or
mov
fs
cmp
or
push
xchg
jmp
jmp
fidivs
sbb
into
arpl
fsubrl
lea
fwait
mov
shll
xor
das
lahf
icebp
push
mov
dec
hlt
imul
mov
xor
sbb
pop
adcb
add
xor
imul
push
test
sub
je
cmpsb
repz
pop
ja
call
arpl
push
and
mov
mov
pop
out
push
mov
pop
push
sbb
in
mov
inc
pop
repnz
cwtl
aam
ret
push
add
popa
sub
sbb
jbe
repnz
leave
icebp
rcrb
test
add
ss
daa
pop
aas
aad
or
pop
cmpsl
aad
mov
pop
in
xchg
leave
inc
out
out
movsb
cmova
out
roll
push
enter
lcall
je
scas
je
jecxz
nop
mov
into
or
imulb
std
repnz
stos
lds
sub
jp
ss
sub
pusha
mov
xor
and
gs
repz
push
loope
addb
inc
ss
cmpsb
mov
adc
cmpsb
sbb
fsts
ja
lea
add
ss
ds
cmpsl
mov
imul
jp
test
cs
scas
mov
mov
xchg
jp
inc
mov
sbb
or
sbb
and
arpl
or
jle
and
sbb
outsl
add
jne
push
popa
mov
insb
cmpsl
mulb
scas
push
or
lahf
push
jge
rcrl
subl
pop
leave
pushf
sub
push
add
jecxz
loopne
aam
sub
test
lret
into
xchg
dec
movl
pop
sti
imul
sahf
pop
mov
inc
fadd
in
or
scas
mov
loopne
and
iret
orl
adc
inc
outsl
inc
adc
cmp
add
sti
sub
xchg
or
pop
cwtl
cwtl
push
adc
js
dec
mov
adc
cmp
cwtl
add
outsl
xor
sbb
out
iret
ss
lock
push
cld
adc
rclb
mov
in
dec
push
lods
pop
xchg
popf
pop
mov
adc
push
and
fisttpll
enter
jmp
mov
in
jecxz
dec
adc
call
cmpsb
adc
push
or
pop
cmp
in
mov
cmp
mov
adc
test
stc
xor
out
mov
sbb
jg
fimuls
cltd
aam
addr16
xlat
lock
and
fninit
movsb
pushf
xor
pop
lea
pop
jnp
inc
scas
call
mov
push
pop
sub
scas
aas
addr16
dec
cld
popf
xchg
aad
sarl
sbb
sub
repz
pop
mov
je
jno
test
shll
jbe
push
cld
lea
setg
cmp
jbe
or
testl
insl
mull
dec
sub
pushf
ss
mov
repz
popf
leave
inc
lea
es
movsb
stc
data16
dec
mov
push
leave
iret
sahf
adc
mov
fwait
and
pop
subl
fwait
rorl
shrb
aas
add
mov
cmp
cmpsb
out
movsl
rcr
jbe
lock
dec
call
fildll
mov
ror
mov
incb
mov
sbb
out
cmpsb
shll
sub
xor
mov
pop
ss
jnp
mov
cmc
dec
push
scas
mov
and
sbb
sub
loop
mov
add
fs
shlb
pop
inc
adc
ret
sahf
test
lret
and
jb
push
pusha
mov
cmpsl
clc
cmp
test
mov
icebp
imul
mov
aas
call
pushf
aad
inc
mov
movsb
sbb
mov
bound
jp
jne
outsb
xchg
scas
das
ficoms
stos
addb
add
int3
mov
inc
incl
insl
push
sub
mov
adc
push
sub
clc
pop
outsb
pop
pushf
es
cmp
sbb
or
xor
cmp
addr16
add
push
fdivrs
mov
and
jbe
and
mov
push
fucomip
scas
pop
fidivrl
xchg
xchg
in
cltd
lcall
js
data16
into
xchg
cmp
or
arpl
xchg
inc
inc
cmp
mov
push
scas
xchg
mov
scas
mov
mov
jo
pop
xor
adc
pop
popf
add
notl
jns
lds
lods
dec
imul
fidivs
xor
mov
or
xchg
data16
jns
xor
popa
inc
inc
cltd
pop
daa
cli
dec
mov
mov
fwait
lret
mov
push
jge
push
rorb
iret
xchg
pop
or
adc
cmpsl
test
lahf
pop
call
push
push
mov
into
sub
jecxz
pushl
popf
push
dec
aas
or
xchg
jns
cmp
jns
std
mov
fadds
in
lret
and
inc
stc
or
and
stos
insl
xor
push
cli
dec
in
in
into
fnstcw
mov
out
lcall
or
pushw
shll
ja
push
push
lea
sbb
mov
jb
sub
fisttpl
push
sub
xor
sub
loopne
push
and
repz
adc
xchg
jno
cmc
repz
outsl
cltd
push
shlb
push
jae
popf
fmuls
dec
loop
test
xchg
mov
mov
test
jno
aad
mov
xor
aaa
jne
inc
movl
xor
bound
and
mov
inc
vucomiss
daa
mov
pop
mov
and
out
dec
test
loopne
mov
adc
decl
adc
dec
jns
rcr
addr16
mov
mov
and
and
pop
iret
push
pop
push
cmp
sub
rorl
xor
sar
and
out
jae
jns
call
push
sub
jmp
pop
cs
push
pushf
push
nop
stos
adc
xor
mul
int
test
dec
stos
push
mov
push
or
insb
pop
push
adc
mov
incb
adc
mov
cmc
xor
lds
mov
les
xor
popf
xor
sbb
aas
sbb
xchg
sbb
stos
adc
inc
stc
mov
cmp
insb
cmp
ljmp
lods
popf
jae
fwait
test
sub
pop
inc
movsl
fadd
loopne
push
adc
clc
into
fadd
cltd
mov
sbb
loope
fs
je
push
repz
pop
into
cwtl
push
mov
inc
fwait
enter
repnz
dec
aas
sti
push
jle
hlt
sbb
mov
cmp
lds
ds
adc
adc
mov
movsl
fnstenv
imul
rorl
ljmp
sub
mov
inc
fwait
xchg
pop
ret
test
cmpsl
push
cwtl
cmp
pop
outsl
add
loopne
lret
mov
lea
xor
sahf
movsb
data16
scas
mov
clc
and
sbb
mov
int
lret
or
sbb
pop
xchg
cmc
inc
lds
xlat
mov
popf
aas
fwait
test
jl
add
stos
jmp
cmpb
xlat
in
inc
inc
std
dec
fprem1
cmpl
inc
jne
adc
mov
pop
setno
cmp
push
inc
dec
add
xorb
cmp
sub
cmpsl
xor
dec
bound
repz
mov
sub
test
aam
or
dec
mov
sarl
push
scas
add
jae
push
xor
imul
push
enter
ret
inc
iret
adc
jge
cs
addr16
test
ss
add
fistpl
or
mov
mov
cmp
mov
adc
rcl
xchg
std
and
jbe
push
addr16
dec
stc
mov
imul
cmp
icebp
test
jbe
repnz
enter
cmp
imul
ds
lods
xchg
hlt
sbb
ja
adc
xchg
mov
lret
mov
mov
into
sub
or
dec
fdivrl
adc
test
test
jecxz
xor
rcll
adc
ljmp
mov
fdivrs
lods
int3
pop
and
or
aam
push
fwait
into
or
xor
inc
mov
cmpsl
or
out
dec
aam
xchg
icebp
hlt
push
push
cs
cmp
inc
push
lahf
int3
pop
int
cmpl
lods
ret
pop
sbb
hlt
leave
daa
inc
adc
mov
adc
daa
jne
cmp
into
pop
mov
jle
xor
or
and
or
mov
add
loop
divb
clc
movl
sub
xchg
movsl
cli
fildl
out
movsl
gs
cwtl
popa
insb
add
mov
push
or
inc
insl
movsb
mov
fdivs
add
xor
add
push
pop
dec
ret
aad
dec
nop
fwait
push
shl
adc
sub
mov
add
sub
in
add
sbb
adc
imul
outsb
or
xor
cli
daa
fidivrs
add
cmpsl
dec
lret
mov
loop
loopne
pop
aaa
repz
daa
mov
cmp
insb
test
fsubrl
js
cmpb
xchg
push
std
inc
mov
in
jo
pop
fcomps
addr16
imul
and
xchg
rolb
loop
adc
sbb
lods
aaa
test
jp
xchg
cmp
mov
insb
mov
add
jbe
lahf
bnd
pop
mov
xor
xchg
js
adc
or
push
lods
out
lds
popa
xchg
xchg
lock
cmp
test
adc
aad
sarb
xor
lock
push
dec
test
sahf
sbb
cmp
cmp
in
dec
jmp
fbstp
dec
out
aad
pxor
push
mov
sbbl
ficoms
mov
inc
call
sub
cld
dec
adc
cmpsl
jb
or
aas
test
mov
push
xchg
ss
cmpsl
pusha
xor
jnp
xlat
mov
mov
push
dec
jns
lret
and
insb
sti
arpl
push
xchg
sub
test
inc
xorb
fldenv
int
dec
jge
mov
in
lret
sub
mov
fildll
out
dec
jno
mov
pusha
popf
or
dec
lcall
xor
or
mov
dec
jne
xchg
adc
or
cmp
and
lret
jns
cmp
stos
push
sub
stos
pop
scas
aas
pop
jg
bound
xchg
dec
jl
or
insb
and
inc
pop
sub
xlat
inc
inc
xchg
rcr
push
ja
inc
and
mov
aaa
inc
std
push
pop
xchg
cli
cmp
xchg
mov
cmc
adc
scas
jg
push
fisubrs
mov
jns
inc
cmc
cmp
sub
jle
mov
mov
and
sbb
mov
mov
adc
xchg
into
call
imul
push
shrl
xchg
into
sbb
rep
subl
and
push
loope
or
sbb
xchg
das
xor
fnstcw
icebp
xor
pop
pop
testb
cli
and
jb
cmp
push
repz
cmp
push
sbb
mov
ds
mov
and
adc
stc
fisttps
test
hlt
xchg
les
fdivp
sti
push
ret
stos
shrb
stos
pop
fidivrl
aam
lret
jno
cmc
xor
push
adc
jp
xchg
aaa
xor
fists
pop
adc
loopne
bnd
cmp
mov
dec
push
or
stos
test
jmp
ss
pushf
or
sub
fcmovnbe
mov
imul
pop
enter
cltd
xchg
push
mov
dec
testl
inc
hlt
pop
jb
xor
int
and
push
std
xchg
xchg
jmp
pop
cmp
sub
adc
ja
dec
jmp
in
outsl
add
jp
into
xchg
rorl
jbe
mov
lret
mov
das
repnz
push
or
sarl
lods
cmpsb
or
pop
or
pop
mov
dec
ja
mov
fwait
pop
xchg
in
mov
rclb
lods
imul
loope
jae
popf
xor
cwtl
out
repnz
pop
xchg
popf
cmp
out
add
xchg
out
dec
imul
idivl
filds
cmp
scas
jecxz
ret
adc
movl
xchg
std
repnz
test
sbb
rcrb
mov
cmp
in
pop
pushf
push
les
mov
push
jge
icebp
scas
or
push
sub
les
and
push
sbb
addr16
pop
cmpl
and
sbb
and
sub
aam
out
add
cltd
les
test
pop
jp
jle
cmp
mov
cli
fdivr
fisttpl
or
out
icebp
jecxz
sbb
out
xchg
aaa
mov
sbb
cmpsb
inc
dec
fisttps
call
clc
js
sbb
and
mov
or
push
int
sub
cmp
shlb
xor
leave
sbb
add
add
xor
pop
adc
jbe
leave
fwait
or
push
add
push
xchg
pusha
xorb
or
sub
mov
fisttpl
fs
inc
mov
lret
xor
cmp
test
loope
sbb
push
jmp
lock
mov
lods
dec
jp
fcoms
rcll
sbb
push
xchg
clc
push
jno
inc
add
jo
xor
push
cmpb
or
and
push
push
and
test
nop
repnz
icebp
jbe
rolb
mov
xchg
and
aas
sbb
or
out
inc
lea
orb
test
shrb
pop
rsqrtps
dec
out
loopne
int
add
inc
int
lret
jmp
icebp
push
fwait
fwait
inc
mov
lock
addr16
mov
shll
xorl
push
lods
fisubs
ljmp
mov
lret
cmp
dec
adc
add
dec
nop
and
loopne
flds
movsl
push
movsb
imull
lock
stos
inc
pushl
lahf
pop
out
ds
cmpsb
mov
jo
and
add
ds
jae
mulb
or
inc
xchg
aas
sub
mov
repnz
das
out
jecxz
pop
scas
pop
sub
fwait
inc
mov
and
pop
inc
ret
ss
push
mov
pusha
mov
movsb
mov
push
sbb
cmp
movsl
or
cmp
das
data16
sbbl
mov
xchg
lods
insl
sti
popa
xor
push
push
push
lods
mov
inc
nop
sbb
loopne
add
fnsave
jmp
mov
and
jbe
idivl
pop
cli
push
inc
ret
jg
ljmp
test
je
xchg
inc
negl
mov
and
pop
jno
add
loopne
xchg
call
mov
xchg
div
leave
dec
gs
es
push
stos
aad
inc
push
adc
pusha
jae
je
mov
fs
dec
lcall
ror
mov
sbb
aam
out
push
xchg
sub
aaa
pusha
test
xchg
lret
mov
and
vmovdqa
cmp
sti
outsl
mov
adc
call
scas
loopne
xchg
push
cwtl
imul
fcmovbe
push
xchg
fstpt
stos
mov
or
pop
mov
aas
jle
mov
sbb
aas
jmp
sub
sub
lods
pop
imul
sahf
jg
ficoml
int
adc
sti
cwtl
dec
mov
push
xor
dec
fnstenv
scas
pop
mov
dec
sbb
aas
sub
popa
in
mov
pushf
lcall
popf
fdiv
loopne
outsb
or
and
xchg
mov
subb
out
shll
xchg
xor
ds
fcmovbe
outsl
push
rorb
pushf
jmp
dec
mov
jb
pop
jg
mov
orl
xor
xchg
push
scas
out
ss
pop
loop
jmp
push
xor
jne
outsb
and
add
push
mov
addr16
inc
pop
scas
mov
add
pop
inc
test
adc
sub
adc
lahf
xlat
gs
adc
mov
sti
push
pop
aam
cmp
in
outsb
or
lods
mov
jecxz
orb
daa
fidivrs
sub
sar
cwtl
bound
adcl
and
add
sub
add
sbb
in
push
test
cmp
mov
sub
sub
loopne
mov
adc
jnp
xor
jno
mov
dec
ds
in
sbb
lahf
or
imul
mulb
mov
mov
lea
sbb
cmp
dec
jne
cmc
mov
imul
xor
dec
push
enter
int
scas
cmp
in
jge
enter
mov
dec
lret
inc
jne
jne
jbe
or
out
call
lcall
xor
sub
lret
in
push
push
andl
scas
pop
imul
inc
mov
lds
pushf
sti
repnz
scas
aaa
pop
cmp
loope
inc
jb
push
jmp
cmp
xchg
test
jg
lods
inc
xor
adc
and
xchg
aam
mov
iret
push
fs
mov
sbb
cmpsl
jbe
adcb
or
add
cmc
sti
push
shr
cld
inc
xor
push
int
pop
loopne
iret
inc
mov
daa
cmpsb
push
xorb
aaa
add
cltd
sbb
ds
loopne
pushf
inc
jns
into
mov
imul
fmuls
test
mov
mov
and
imull
mov
jg
test
rclb
inc
inc
xchg
inc
cmp
addr16
jb
pop
jns
sub
add
mov
pop
inc
inc
mov
cwtl
sub
or
lds
cmp
pop
dec
clc
pop
or
out
and
jne
rorl
test
nop
push
ja
fisubrs
fdivrl
pop
jecxz
test
xchg
pop
push
or
adcb
js
imul
xor
iret
pop
sub
xor
std
or
movsb
push
mulb
loopne
das
sub
daa
ja
int3
sti
ja
movsb
push
xchg
jne
sbb
in
mov
mov
mov
mov
xchg
aaa
jno
mov
ds
out
lods
test
pop
cld
adc
mov
mulb
mov
arpl
testl
scas
cs
test
add
cmp
mov
push
or
push
mov
jnp
xor
sub
fwait
dec
add
andl
lret
aaa
jns
dec
jecxz
ret
inc
and
jne
nop
sti
test
jle
or
pushf
dec
or
push
loop
jbe
popf
mov
jle
out
ja
push
pop
stc
push
pop
jl
mov
clc
xchg
lds
pop
mov
xor
mov
and
loope
xchg
push
xchg
mov
sub
cltd
inc
imul
loopne
and
int3
adc
mov
xor
mov
sub
je
pop
inc
fdivrl
sub
test
cwtl
loopne
pop
daa
push
in
inc
jmp
cmp
push
test
imul
xchg
jo
cmpsb
push
cmp
pop
test
add
pop
out
repz
loopne
xor
mov
cmpsb
mov
fwait
mov
or
ds
jb
dec
jns
xor
jp
rolb
sti
mov
cmp
into
xchg
movl
mov
lahf
stos
push
sti
scas
dec
cmp
cmp
push
xchg
mov
jbe
pop
leave
nop
mov
jg
hlt
sbb
push
divb
adc
push
clc
dec
cmc
adc
jle
adc
arpl
sub
push
clc
xchg
cmp
and
rolb
test
cmpsl
mov
cltd
jo
lret
cmp
popa
push
ffreep
push
and
outsl
sar
into
lahf
xchg
out
enter
push
xchg
xor
cwtl
dec
ja
js
or
sub
popa
out
int3
mov
mov
cli
fwait
jp
adc
clc
push
and
movsb
inc
pop
test
push
sub
loopne
test
add
and
add
and
shlb
xor
or
rorl
adc
pop
loope
dec
std
xchg
sti
mov
inc
push
dec
dec
scas
fmul
cld
sahf
sbb
cmp
rclb
movsl
sub
sub
hlt
push
mov
pusha
sbb
dec
fisttpll
xchg
push
sbbl
lret
popf
cmp
or
inc
out
lock
gs
nop
frstor
sbb
mov
subl
push
jnp
push
ror
pop
cmp
out
sub
sahf
xchg
jg
gs
out
dec
hlt
pop
imul
mov
fldenv
hlt
pushf
das
rcll
fnstenv
dec
xchg
adc
push
adc
xor
gs
and
ficompl
cmp
push
sub
fmulp
sbb
bound
xchg
mov
inc
xchg
lcall
xor
lods
imul
mov
xor
mov
inc
sti
repz
mov
loope
push
lea
loop
sub
jl
cmp
sbb
push
lret
lahf
hlt
and
xchg
adc
inc
jmp
xor
jne
addb
movsb
ret
cmp
cmp
inc
jns
fildl
fs
flds
hlt
or
add
fildll
jl
cmpsl
pusha
bound
pop
out
jge
xchg
fldcw
or
bound
jmp
cmp
push
push
pushf
lods
cwtl
popa
fnstcw
mov
xchg
sbb
loope
mov
pop
sbb
imul
or
xor
adc
sahf
push
add
test
cmpsl
xor
xor
or
hlt
lods
fidivl
in
leave
jge
aad
mov
pop
adc
imul
inc
pop
push
cltd
movsb
movsb
pop
add
inc
add
aaa
test
cmp
out
push
or
cmp
jecxz
lcall
jmp
jbe
out
lods
es
sub
test
adc
imul
xchg
dec
adc
ss
xor
sbb
rcrl
sbb
mov
mov
add
ss
xchg
mov
dec
shrl
mov
push
xchg
movsb
test
inc
jge
add
ds
inc
push
call
mov
test
fstpt
int3
loopne
pop
mov
jae
push
xor
xchg
add
aaa
push
mov
test
mov
stc
enter
pop
xchg
or
mov
lock
push
mov
in
mov
popa
pop
xor
mov
movsb
lret
mov
imul
push
adc
and
add
sub
sti
add
std
adc
mov
adc
xchg
in
inc
sbb
sub
xchg
mov
xchg
ljmp
outsl
jnp
mov
popf
js
add
int3
fbstp
repnz
stc
cs
imul
insl
adcl
les
jp
pop
int
pusha
rorb
je
test
cli
pop
insb
mov
xchg
dec
call
hlt
sti
loope
mov
lods
ja
gs
mov
xchg
divl
addr16
jl
dec
in
fsubp
add
jae
or
lahf
or
mov
inc
stc
bound
inc
fs
lock
dec
push
rorl
data16
mov
xchg
pushf
xchg
lods
ljmp
cld
inc
stos
push
imul
ljmp
stc
popf
ds
sub
movsb
scas
mov
pop
fwait
stos
imul
xchg
sub
int3
movl
mov
cltd
imul
loope
scas
add
arpl
mov
rorl
jmp
hlt
movsl
into
das
dec
jmp
dec
pusha
stc
movsb
adc
xor
pop
mov
fs
fld
lret
ss
test
sbb
cmp
dec
adc
ja
imul
mov
xchg
pop
add
xchg
aas
ret
sbb
into
xlat
lds
lret
lcall
je
shll
clc
loopne
leave
pslld
mov
in
ja
dec
dec
mov
dec
pushf
adcb
loopne
ss
fs
or
pushf
fcom
lret
push
cmp
fldl
in
pop
sbb
daa
cmpb
jle
test
adcb
inc
push
in
inc
leave
ja
adc
fwait
aad
jns
repnz
mov
dec
xchg
xchg
rorl
jg
push
xchg
stc
mov
xchg
xlat
cmp
loope
lock
sub
xlat
sar
into
adc
repnz
xor
cmp
cli
shl
xchg
aaa
cli
les
push
or
data16
je
out
mov
lods
adc
shrl
lea
xor
push
sbb
jl
cmp
xor
or
int
test
push
mov
es
jnp
movsl
push
push
mov
jb
pop
sbb
jnp
pop
orl
add
fucomip
inc
leave
out
imul
sbb
inc
mov
mov
push
dec
pop
push
xor
imulb
fsubrs
adc
push
call
or
mov
pop
push
mov
cmpsl
shll
cmpsb
ret
add
fidivrl
mov
jbe
loop
sbb
mov
lock
mov
sub
cwtl
scas
mov
mov
repz
pusha
mov
sarb
push
push
out
fdivl
jb
sub
rclb
popf
fsts
cwtl
adc
lods
clc
sub
jbe
mov
jp
ds
xlat
ds
pop
and
popf
xchg
ljmp
fstpt
mov
in
fcoms
in
fldenv
outsb
inc
dec
call
aas
fmuls
sti
pop
xchg
xor
ret
mov
jo
xchg
inc
add
dec
jmp
outsb
test
loopne
push
lea
clc
mov
fmulp
push
jmp
aad
mov
es
push
add
xorl
xchg
inc
popf
dec
clc
out
xchg
jb
cmp
in
stos
aam
fwait
and
mov
test
pop
iret
push
push
rcll
shl
fcomi
cmp
cmp
jno
hlt
sbbb
outsl
mov
cmp
inc
jns
sub
dec
jbe
push
lods
mov
pop
jl
pushf
jae
shlb
enter
cmp
adc
out
ret
mov
mov
mov
push
push
dec
mov
ss
push
std
add
adc
lahf
aaa
jmp
cmp
inc
push
addr16
mov
or
cmc
add
dec
fistpll
adc
inc
push
js
mov
mov
cmp
imul
dec
cvttps2pi
rcrl
pop
aaa
loop
popa
sub
and
shlb
fsubr
jg
mov
js
fs
mov
stc
dec
jp
aad
hlt
daa
inc
shrl
push
adc
jmp
popa
push
push
push
mov
in
inc
or
mov
clc
push
dec
push
jae
call
sbb
cli
dec
add
jp
fs
push
push
and
jg
cmc
cmpsb
push
outsl
adc
or
dec
mov
mov
jecxz
and
pop
cmp
aam
and
sbb
sub
fsubs
cmpsl
mov
out
bound
xchg
aad
jmp
pop
in
push
imul
test
pop
inc
in
jecxz
fdivl
and
out
test
enter
sti
aaa
aam
inc
jno
insl
lods
repz
cld
das
jmp
push
mov
in
or
jg
in
mov
adc
loope
sahf
mov
pop
jo
jns
cmpsb
lret
mov
dec
or
cmpl
cmpb
mov
adc
das
rcpps
push
and
mov
lea
xor
dec
adc
popa
dec
add
inc
mov
inc
lock
dec
mov
icebp
loop
pop
js
and
pop
xchg
aam
aaa
cwtl
out
mov
sbb
lahf
fidivrl
push
push
adc
cmpsl
into
lcall
stos
cmpl
adc
imul
mov
mov
test
jge
push
scas
test
sti
jle
pop
jg
movsl
jmp
jbe
outsb
push
jl
jecxz
lods
sub
pop
mov
shll
push
lcall
push
cmpsl
cmp
mov
lea
dec
jmp
out
pop
push
pop
cmp
sub
rclb
add
cld
movsl
lods
call
add
sarl
cmp
pop
outsl
popf
pop
je
cmpsl
ss
outsb
and
or
lea
jl
push
xor
dec
adc
xor
or
xchg
push
xor
mov
and
test
xchg
notl
lods
rcrl
repnz
je
mov
loope
movsb
jne
jp
pop
cltd
inc
or
loope
jecxz
fists
fisubrl
fildll
das
addr16
jo
mov
pop
arpl
ss
lcall
push
xor
xor
lahf
inc
in
or
dec
aam
in
aaa
pushf
mull
shrl
push
nop
pop
enter
and
pop
and
addr16
or
jne
fsts
in
push
add
shrb
outsl
ss
push
nop
jbe
cmp
jl
cmp
outsb
jns
testb
jnp
imul
nop
lahf
push
sbb
sub
lods
mov
mov
mov
sbb
movb
in
cwtl
ljmp
cmp
lret
imul
cs
xor
pop
or
int3
popa
movsb
cmp
cmp
sbb
pusha
and
shr
jl
fnstenv
mov
mov
or
mov
inc
imul
aaa
pop
cmc
loopne
cli
mov
or
xchg
sbb
std
push
or
pop
push
add
into
negl
cmp
fisttpll
xchg
insb
mov
fistpl
sub
cmp
add
mov
lods
sub
lret
ret
push
pop
fpatan
clc
mov
rorb
push
pop
cmp
into
or
sub
iret
repz
mov
mov
push
fdivrs
and
pop
jne
cli
inc
fsubr
fs
xchg
imul
fs
loope
sbb
imul
test
lds
ret
mov
inc
cli
hlt
sub
negl
std
movsl
add
ds
repnz
inc
stos
mov
loopne
inc
fwait
hlt
fcomp
mov
popa
ljmp
mov
leave
mov
movsl
jae
test
fcom
imul
jmp
mov
fsts
pop
sti
xchg
dec
pushf
adcb
push
out
out
stos
push
sbb
sub
jbe
dec
pop
ds
push
test
insl
push
mov
stc
in
out
add
sub
pushf
out
xor
leave
dec
xchg
sub
and
jl
xchg
xchg
add
inc
inc
and
scas
sbb
jge
scas
test
push
xchg
insb
lret
cmp
push
adc
cmpl
cmpb
or
scas
dec
fucomi
stos
mov
insb
inc
dec
pop
inc
fs
sbbb
cli
jecxz
or
inc
dec
stc
push
dec
dec
adc
cmpsl
lods
lret
sub
call
push
loope
mov
call
jge
xchg
out
popl
cmpsb
cmp
xchg
xor
pop
cmp
mov
xchg
cmp
in
rcl
stos
xor
lahf
testl
xchg
nop
sbb
jl
sti
les
and
jnp
push
inc
repnz
sub
cwtl
test
sbb
lcall
cmp
pop
adc
fst
xchg
call
pop
sahf
jnp
imul
jnp
lods
loopne
enter
outsb
xchg
inc
mov
sub
sbb
jle
sbb
dec
jg
ja
cmp
xchg
and
pop
or
xchg
data16
xchg
imul
mov
sub
sbb
xor
sbb
jecxz
jne
leave
stc
enter
jns
mov
mov
es
fiadds
and
push
mov
sub
fucomp
mov
aas
mov
in
insl
loop
mov
popf
jg
ret
sub
and
sti
and
in
ds
cmp
jg
subl
jecxz
mov
push
repz
mov
fsubr
dec
inc
inc
mov
cmp
mov
sbb
pop
mov
out
mov
dec
lret
adc
sub
xchg
arpl
mov
ret
das
mov
int
add
xchg
ror
leave
into
ljmp
mov
sub
and
adc
xchg
mov
sbb
cmp
xor
bound
or
sbb
int
stos
sub
pop
pop
sbb
lds
push
mov
lea
rclb
jo
xor
dec
pop
sahf
imul
jmp
xlat
pop
nop
movsb
or
mov
xchg
ret
into
inc
xor
iret
in
cltd
cmp
push
dec
int
jne
add
xor
mov
rorl
cmp
loopne
add
adc
repnz
jle
sbbl
mov
decb
mov
push
adc
stos
stos
mov
insb
adc
push
insl
and
pop
in
xchg
mov
push
pop
dec
mov
aad
sbb
cmp
lea
movsb
cmpsl
outsb
push
cmp
decl
adc
enter
nop
dec
push
mov
cmpsl
lahf
pop
mov
add
fwait
test
shrb
ss
aaa
and
xchg
jmp
jge
xchg
cmp
scas
inc
push
sub
adc
mov
push
out
cmpsl
pop
repz
add
push
mov
mov
in
mov
push
mov
imul
add
mov
push
mov
pop
or
jo
sub
inc
stos
lds
inc
push
fwait
ds
mov
arpl
fisttpl
cmp
push
test
pop
mull
aam
cs
and
cmp
stos
enter
inc
ja
xor
fimull
sub
mov
adcl
mov
mov
loopne
and
ss
fnstenv
scas
lret
lds
lds
sub
jno
mov
in
and
outsl
imul
xchg
pop
xchg
dec
insl
inc
pop
mull
or
shrb
cmp
xor
movb
addr16
push
bound
jo
adc
cmp
iret
mov
add
shlb
xor
cmp
dec
nop
mov
pop
loope
popf
push
mov
dec
mov
jns,pn
std
les
mov
out
xlat
mov
cld
fadds
mov
or
xchg
push
stc
cmp
dec
push
adc
dec
fdiv
sahf
sahf
fldt
push
into
push
cli
dec
out
mov
xor
mov
mov
inc
imul
iret
call
add
lea
cmp
inc
out
add
jne
and
in
jle
xor
rcll
jge
and
xchg
add
rcr
out
stos
hlt
pop
sbb
out
lds
ret
sbb
shl
cmc
dec
bswap
jmp
dec
dec
push
adc
jbe
andb
lea
test
loope
daa
add
cmp
inc
into
cld
fldt
jnp
cmp
std
dec
mov
and
aaa
jp
loope
jne
xchg
outsl
sbb
imul
adc
pop
xor
pop
enter
xlat
test
nop
cmp
testl
jne
nopl
add
std
mov
mov
dec
int3
dec
mov
mov
pop
xor
cmc
mov
sbb
shlb
leave
and
call
insb
jl
adc
dec
je
adc
lock
adc
or
scas
and
or
adc
mov
lahf
fwait
cmp
adc
loop
add
add
test
push
xorps
jge
mov
pop
mov
fstp
mov
cltd
jae
xchg
nop
cli
rolb
test
jnp
jp
adc
jae
gs
push
out
jnp
loopne
mov
push
adcl
cmp
pop
mov
bound
push
jns
ja
inc
int3
and
stc
fldcw
jmp
pop
movsl
imul
decb
gs
cmp
out
mov
push
jecxz
jo
lcall
lds
pop
shl
mov
shrb
jmp
xchg
bound
ss
add
fs
ja
repz
nop
stc
mov
fisttps
fildll
aad
mov
sub
es
pop
inc
enter
adc
loop
cmp
imul
lret
pop
jmp
cmp
xor
cmpsb
in
mov
test
cwtl
fiadds
jnp
test
fnstsw
push
push
mov
cs
rol
js
sub
bswap
ja
stos
jle
pop
xor
inc
ss
adc
xchg
mov
lret
stos
xchg
sub
ss
imul
mov
and
pop
loope
push
int
scas
je
pop
mov
lret
sub
repz
add
ja
stc
shl
sbb
call
fnstcw
ja
jecxz
aas
call
xor
mov
add
repz
mov
int
or
repz
xchg
movsl
xchg
loopne
jge
add
dec
cli
add
dec
call
xlat
and
push
ret
jb
lahf
cmp
out
iret
cli
lods
dec
mov
stos
pop
fucomi
or
nop
ja
icebp
aad
add
pop
pushf
into
bnd
hlt
mov
and
inc
or
dec
or
push
stos
adc
and
outsl
mov
mov
addr16
jno
daa
jge
mov
sbb
xchg
cmpsb
adc
xor
lods
xchg
push
sbb
push
mov
cmp
fs
roll
push
fstpt
jnp
xchg
jge
sub
fwait
data16
mov
repz
imul
pop
jo
ljmp
sarb
jge
gs
jo
popa
xchg
jl
imul
aam
in
xor
xor
in
sbb
lods
fmul
nop
subb
enter
outsl
jbe
setb
in
enter
clc
es
int3
mov
mov
jo
mov
xchg
adc
mov
mov
adc
inc
jns
shll
mov
das
js
fimull
mov
popf
push
inc
xor
mov
xchg
pop
imul
xchg
call
movsl
and
hlt
pop
sub
mov
sub
mov
cli
dec
push
imul
iret
xlat
and
stos
mov
xor
aaa
xor
sbb
xchg
sbb
xchg
ficoml
jp
cmc
fcoml
call
loope
out
dec
fisttpll
jle
mov
mov
int3
xor
mov
cmp
popa
jo
push
dec
sbb
mov
and
push
adc
inc
out
and
outsl
xor
lea
mov
pop
subl
adc
push
es
stos
nop
and
adc
in
push
ficomps
mov
ret
mov
xor
mov
jge
or
test
lods
cmpl
mov
dec
idiv
andb
stos
or
test
rcrl
scas
xchg
xchg
enter
in
cltd
mov
and
fidivs
mov
mov
shlb
mov
jne
rorb
push
test
jae
add
popa
inc
xchg
popl
mov
in
sub
add
rcr
push
mov
dec
add
aaa
leave
fistl
dec
js
icebp
mov
mov
lods
inc
shll
add
mov
sbb
bound
mov
inc
sahf
into
cltd
scas
aas
fcomp
ret
idivl
pop
mov
push
ja
and
repz
aaa
fcoms
pop
sub
add
pop
fidivs
test
jb
je
mov
sub
sarb
push
jg
mov
test
and
push
ret
mov
pop
lock
lret
dec
xchg
sub
sti
push
mov
and
imul
cmp
lds
sbb
mov
or
push
inc
lret
xor
out
shrb
sbb
test
fs
mov
stc
cwtl
fnstsw
out
ds
fstl
cmp
mov
pop
ret
lods
lcall
or
into
pop
jo
shld
jle
stos
enter
xchg
inc
add
push
sbb
dec
push
jns
mov
pop
repz
leave
repz
inc
xor
dec
mov
cli
sub
xor
mov
adc
inc
xor
outsb
mov
imul
je
addb
fmul
add
xlat
jns
imul
and
movsb
es
mov
cmpsb
or
mov
inc
xor
stc
xchg
movsb
push
push
das
fs
bound
nop
ljmp
int
inc
add
xchg
aaa
pop
hlt
push
mov
cmp
add
shll
adc
inc
movsb
adc
mov
repz
lahf
pushf
inc
mov
je
jmp
and
out
sub
pop
addb
push
dec
lea
cld
out
imul
daa
cmp
push
mov
ja
shlb
add
and
jns
sbb
mov
aad
into
movsb
mov
jno
dec
scas
scas
int3
lds
setg
mov
mov
mov
cltd
outsl
jg
fmulp
sbb
or
mov
bound
test
imul
sbb
adc
lcall
mov
or
add
loopne
add
ja
jno
sbb
adcl
aad
lods
jge
pop
mov
fldenv
pop
pop
jno
loope
sub
mov
dec
dec
ss
imul
inc
and
clc
or
jmp
fmuls
inc
imul
frstor
dec
lcall
movsb
pusha
fwait
cmp
out
mov
iret
cmp
xor
stos
outsb
inc
inc
mov
cli
jmp
mov
and
jno
sub
repnz
mov
add
add
add
mov
xchg
dec
das
js
insl
and
hlt
fwait
call
rorb
lods
jmp
repnz
push
xor
std
outsl
inc
push
arpl
mov
dec
aad
cld
cmpsb
add
inc
sbbb
jecxz
sbb
lods
dec
add
jmp
adc
daa
addb
dec
scas
sbb
jne
jne
jno
or
add
testl
mov
fs
mov
or
ret
loop
sbb
aam
fisubl
fmul
mov
ds
in
or
cwtl
andl
or
fmulp
outsb
inc
dec
and
push
movsl
fwait
imul
dec
testl
inc
daa
rorb
mov
stos
inc
dec
push
fsubl
pusha
mov
rclb
adc
repz
xchg
mov
arpl
push
mov
jb
aam
lods
pop
push
dec
xor
jae
inc
cmpsl
or
imul
dec
mov
xor
sbb
sbb
loope
outsl
adc
and
movsl
ljmp
mov
dec
xchg
loope
scas
into
aad
mov
xor
pop
mov
fcompp
pop
in
ljmp
ret
out
inc
push
outsl
adc
mov
pop
js
inc
cmp
into
outsl
cwtl
xchg
push
roll
cmp
cmp
pop
es
cltd
pcmpeqd
into
lock
nop
jmp
test
sahf
push
lahf
sar
add
push
js
adc
repnz
pop
mov
mov
mov
adc
hlt
mov
sub
jo
add
fadd
push
adcb
pop
test
jne
adc
push
xchg
js
mov
mov
pop
cmpsb
sbb
clc
xchg
jbe
pop
leave
dec
mov
push
inc
lds
test
ja
jge
call
dec
mov
cmc
cltd
imul
mov
call
test
xor
inc
mov
movsb
jge
and
nop
ret
lret
dec
fwait
sub
xchg
test
fwait
repnz
push
pop
stos
mov
inc
aad
rcrb
int
xchg
mov
push
xor
mov
sbb
mov
pop
icebp
adc
movsb
aaa
push
ss
jecxz
mov
and
push
pop
pusha
lcall
jno
mov
ficompl
jb
fildll
ljmp
ja
jns
loope
sbb
das
ret
fldl
es
ret
jle
push
iret
xchg
mov
push
cmp
xchg
rorl
out
dec
cmpsb
dec
cmc
adc
adc
leave
xor
or
sti
clc
nop
add
cs
inc
adc
orb
and
jbe
cmp
inc
or
imul
subb
fdivrs
lea
outsb
pop
xor
ljmp
mov
inc
push
out
push
fcoml
outsb
cmp
in
xchg
std
xchg
adc
and
ret
inc
stc
xor
jle
xor
test
jns
cmpl
push
xchg
inc
js
andb
clc
push
enter
xor
add
sti
adc
push
mov
jns
sbb
inc
push
adc
sbb
and
mov
das
cmpb
icebp
jb
sti
mov
or
mov
call
fadd
or
fisttpll
inc
adc
pop
push
jmp
and
xor
sub
jle
es
push
test
into
jle
cmp
in
push
fnstsw
mov
fldenv
lock
mov
xchg
adc
ja
adc
popf
into
inc
mov
dec
mov
xor
divb
adc
inc
pop
mov
cmpsb
lds
add
jmp
add
loope
xchg
xlat
push
out
dec
lret
shlb
mov
jg
int3
dec
out
adc
sbb
js
lret
sub
push
xor
inc
xchg
sub
scas
adc
in
iret
imul
icebp
test
fs
mov
xchg
out
jmp
jmp
pop
add
inc
jmp
vcvtpd2ps
or
mov
inc
out
dec
int
xor
and
js
cmpsb
xchg
ss
mov
imul
mov
aad
cmp
pop
lods
cli
pop
call
mov
aas
loop
mov
dec
push
and
js
and
dec
push
outsl
fs
sub
xor
or
scas
das
jnp
loope
jp
sbb
and
push
adc
imul
jp
and
sbb
test
pop
fldenv
mov
into
aaa
pop
lds
sbb
xchg
js
mull
cld
sbb
lods
pop
and
lods
sub
mov
dec
jge
push
jo
cli
adc
xor
scas
inc
xchg
ja
xchg
sarl
repz
pop
das
ljmp
xor
dec
insb
fsubrs
lods
test
push
cli
lret
clc
adc
add
ljmp
fs
scas
fists
nop
jge
adc
data16
mov
imul
std
mov
out
out
jge
clc
cmpsl
fsubs
add
push
cmp
xchg
push
into
lahf
xchg
nop
lods
nop
fsubl
xchg
fstp
adc
mov
aam
push
int
dec
sub
mov
clc
jecxz
les
jbe
popf
push
dec
add
mov
out
mov
xchg
clc
xor
arpl
lock
sarl
push
iret
scas
js
or
xorb
pop
lret
cli
icebp
lahf
or
aad
aam
jmp
sahf
and
es
jns
jp
je
fimuls
pushf
int
add
mov
repnz
add
leave
cwtl
dec
mov
pop
push
push
mov
xor
push
aam
mov
cmpsl
cs
push
mov
data16
jmp
imul
or
lea
pop
shll
jmp
mov
jae
fwait
push
out
xchg
rclb
jg
sbb
in
mov
sub
xchg
push
dec
sbb
fiadds
sbb
gs
push
push
shlb
mov
and
sub
mov
jge
xor
lret
jne
pop
pop
push
jg
inc
cmpl
mov
std
insl
xor
cmc
aas
popa
enter
xchg
or
lahf
mov
jae
add
mov
mov
orb
xorb
add
aad
cli
mov
not
bound
sbb
adc
push
fildll
adc
insb
inc
jmp
xor
lods
and
push
xlat
mov
jns
adc
insb
pop
inc
das
fcmovnbe
jge
xchg
jmp
ret
mov
mov
cs
scas
jns
mov
insl
outsb
xchg
jp
or
push
ficoml
mov
loopne
in
push
jns
out
cmp
cmp
mov
pop
nop
clc
xchg
sub
xchg
frstor
pop
addr16
test
add
jecxz
dec
jge
dec
and
iret
jne
inc
lret
aas
fldenv
inc
sub
push
nop
mov
cmc
and
mov
inc
outsb
repnz
adc
push
ficompl
fisubrs
jl
adc
in
mov
jb
mov
dec
out
daa
aam
pop
cmpl
mov
push
push
pop
and
arpl
andb
add
aad
aaa
add
cwtl
dec
cmpb
mov
in
mov
dec
jge
addr16
jmp
mov
push
or
sub
xor
xchg
mov
mov
xchg
scas
pop
and
lea
les
or
jl
std
mov
jmp
jge
andw
dec
and
pop
ja
adc
or
into
mov
lods
or
mov
dec
sti
test
cwtl
push
in
xchg
jne
dec
pop
dec
sti
je
shl
popa
mov
inc
out
mov
sbb
mov
in
out
movsl
cmp
clc
je
add
dec
subb
shll
mov
adc
jns
xorb
sbb
mov
arpl
call
les
adc
int
pusha
daa
fisttps
push
pop
and
scas
jecxz
xor
insb
adc
aam
mov
out
jg
das
aas
sti
sub
fs
std
ficomps
jne
sub
sbb
jge
aam
inc
adc
imul
imul
testl
subl
mov
test
mov
jg
fsubl
add
sarb
push
mov
jl
adc
pushf
jecxz
clc
cwtl
fs
and
test
std
ljmp
out
movsb
dec
mov
pop
jg
fiaddl
repz
lahf
enter
imul
sub
or
into
and
cmp
mov
pushf
dec
mov
pop
sahf
pop
js
jns
jmp
xchg
rorl
outsl
decl
dec
dec
int
pop
outsb
xor
bound
xchg
popf
push
jecxz
pop
mov
push
das
xchg
mov
jno
jmp
rcrl
add
ja
cs
inc
jmp
and
adc
jno
sub
jo
das
mov
cli
and
sbb
sbb
sbbl
not
ret
adc
cmp
or
mov
les
push
lea
and
test
ss
mov
out
jo
ret
cmpl
and
hlt
jno
popf
in
loop
xchg
rcrb
or
dec
pop
fninit
fst
add
ret
inc
lds
clc
adc
inc
push
loopne
mov
fsubs
sub
sbb
aad
jl
mov
subb
sbb
jmp
jae
add
rorb
rcll
mov
pop
sub
roll
clc
loop
push
call
xchg
stos
add
adc
daa
jmp
jnp
nop
lahf
hlt
mov
test
test
jmp
jecxz
push
shlb
fsubl
mov
xchg
jb
mull
jle
fdivl
xchg
outsb
xchg
or
decl
test
shlb
xchg
jne
out
jbe
fwait
jge
mov
ret
jge
hlt
pop
mov
lods
pop
ficomps
dec
sbb
jo
inc
mov
arpl
xor
mov
lea
daa
out
xor
iret
mov
out
cs
cmp
stos
loop
push
xchg
lahf
jle
nop
or
mov
sbb
das
iret
lcall
mov
jmp
adc
fucomp
mov
and
inc
loopne
into
cmpsb
jne
push
xchg
in
iret
sbb
sahf
cmp
xor
fisttpll
sbb
mov
sub
or
test
sarl
and
adc
ficompl
das
mov
jbe
addb
xor
cwtl
mov
push
or
jbe
gs
sbb
add
call
ljmp
adc
imul
cmp
out
arpl
in
loopne
xor
sub
pop
pop
lods
add
icebp
rcll
cmc
xlat
cltd
lar
jo
cmp
scas
loop
push
scas
add
and
bound
hlt
notl
xor
dec
in
xor
cmp
mov
in
dec
cld
lods
in
bnd
xor
cmp
sbb
xchg
loope
pop
popf
insb
sbb
outsl
loop
adc
int
sub
push
add
jns
pop
pusha
pusha
enter
jb
test
dec
rorb
jecxz
insb
div
out
mov
jg
call
inc
pop
test
pop
xor
mov
popf
adc
fwait
fwait
cld
sub
xchg
lret
push
mov
pop
testb
movsb
cld
aam
adc
pop
push
ficoml
sbb
ret
ss
icebp
popf
add
test
daa
in
fisubs
push
js
mov
jnp
gs
ss
fisttpl
aaa
xor
cli
mov
insb
jg
paddd
jge
add
cmpb
outsl
dec
in
mov
test
mov
outsb
movsb
xor
scas
mov
inc
cmp
sub
out
cmc
cmc
xchg
adc
cmp
dec
or
les
stos
or
popf
mov
scas
pusha
test
or
jle
es
pop
test
xchg
add
push
xchg
push
dec
push
repz
ficomps
mov
jo
movsl
in
sahf
push
cs
es
mov
xchg
mov
test
jge
int
ficoml
xchg
mov
mov
mov
lods
push
mov
mov
ds
loope
pop
pop
add
lds
repz
mov
fsub
xor
stos
fsubs
imul
es
xor
loop
sti
sub
push
shll
xor
jno
call
lods
fisubrl
das
pop
pop
add
test
mov
cwtl
push
jnp
push
or
bound
ss
jg
ds
push
jp
cltd
cwtl
aas
fcmovbe
rcrl
sbb
mov
aas
les
in
mov
xor
divb
lcall
dec
mov
test
xor
xor
cmc
inc
and
xlat
mov
pusha
fiaddl
sbb
and
ja
jae
rorl
stc
in
xchg
inc
mov
inc
dec
adcl
sub
inc
sbb
xchg
repnz
pop
mov
test
pop
pop
mov
std
inc
frndint
cld
sbb
in
subl
cltd
push
cmpsl
pop
jge
leave
or
pop
dec
fldl
and
out
into
ret
dec
aam
cltd
xor
mov
mov
jecxz
mov
pop
dec
iret
je
scas
and
mov
mov
pop
mov
and
pop
in
jb
adc
dec
pop
cmc
xor
adc
data16
xchg
or
dec
mov
xor
je
sub
cwtl
xchg
or
adcl
fbld
and
push
jae
aas
aaa
ja
js
dec
dec
divl
add
icebp
mov
test
add
push
or
dec
cmc
push
sbb
mov
outsl
push
dec
jecxz
inc
inc
xchg
rcrl
xor
jnp
add
test
dec
fldenv
or
aas
cltd
lea
lods
scas
jmp
jno
mov
in
ret
xchg
xor
mov
fs
es
mov
cs
ja
sub
or
stos
inc
or
sti
adc
enter
pusha
js
scas
hlt
jae
repnz
jle
sub
sub
xchg
aam
and
into
cmpsb
xchg
or
mov
sarb
outsb
cmp
or
loop
adc
dec
test
call
int
mov
leave
out
test
sub
mov
test
jbe
aad
mov
inc
loope
fistl
out
pop
nop
adc
subl
mov
dec
cmpsb
inc
dec
or
pusha
imul
out
les
imull
push
cwtl
cmpsb
cmpsb
adc
rcl
mov
dec
inc
push
aas
loope
jne
js
movsl
cli
test
insl
ss
mov
insl
jg
xchg
pusha
mov
adc
cmp
loopne
sbb
or
mov
xlat
stc
mov
addr16
pop
lcall
idivb
cmp
pop
mov
mov
cwtl
and
notb
fcoml
loop
add
dec
pop
mov
mov
cltd
bound
cld
jbe
lret
jg
jmp
mov
jbe
hlt
out
sub
pop
mov
dec
or
sub
push
out
xchg
lret
lea
mov
pusha
cmp
pop
ja
iret
xchg
dec
jg
in
add
bound
loop
daa
cwtl
adc
push
pop
push
roll
xor
ljmp
mov
push
mov
xchg
stos
out
jae
dec
mov
aaa
mov
jp
mov
xor
sti
jb
je
stc
mov
movsb
jno
pop
mov
xlat
cld
pop
mov
es
and
je
pop
pushf
imul
stos
xor
icebp
sub
cmp
inc
std
add
mov
loope
cmp
xor
testl
xor
xor
jno
mov
add
cmp
imul
cmpb
sbb
mov
adc
scas
inc
mov
fists
push
pusha
cltd
xor
shr
sbb
push
mov
std
outsb
sbb
push
outsb
add
xor
jae
pushl
cltd
mov
shlb
pusha
cltd
test
jns
into
mul
lcall
enter
xchg
sti
test
addr16
lods
sbb
icebp
inc
mov
int
imul
lcall
ret
sbb
je
test
push
adc
xor
and
mov
inc
jecxz
xor
and
adc
rcrb
cwtl
sbb
cmp
sbb
mov
adc
mulb
arpl
sub
sbb
lret
mov
push
ds
movsb
fmull
adc
xchg
iret
or
jnp
mov
add
add
repnz
cmpsb
andl
into
fstl
push
iret
push
adc
sub
pop
das
dec
mov
adc
push
cmpsl
lret
cmc
xlat
mov
cmp
int
pop
mov
dec
or
andb
fcomps
loop
fdiv
xor
cwtl
inc
repnz
sbb
and
leave
cmp
test
loop
dec
lret
fcmovb
xlat
ffree
and
sbb
pop
nop
lret
lods
es
mov
addr16
push
jbe,pn
mov
inc
xchg
dec
xchg
mov
adc
xchg
cld
or
pop
imull
mov
dec
les
sbbb
adc
jo
incb
ret
pop
push
pop
jbe
ds
lret
sub
cmp
lret
setne
hlt
dec
mov
push
enter
or
add
scas
push
in
or
mov
inc
movswl
cwtl
push
sub
das
js
xlat
sbb
and
push
push
xchg
xor
das
xchg
pop
vphaddbq
mov
andl
and
movsl
jp
ficompl
ja
repnz
sub
cmpsb
shll
bound
popl
pop
mov
jbe
insb
xor
push
les
push
xchg
or
xchg
jmp
sub
mov
mov
orb
and
sub
dec
push
xchg
mov
cs
mov
xor
or
fmuls
push
mov
int3
mov
add
or
mov
cmp
hlt
aad
jl
dec
xchg
sub
pop
jmp
out
sub
mov
fisttpl
int3
add
shlb
xlat
les
pop
lods
nop
lcall
mov
scas
sbb
sub
data16
stos
ljmp
sub
and
mov
sbb
aaa
call
ret
daa
and
pop
mov
jbe
shlb
cli
and
mov
movsb
mov
ret
in
cmpsl
inc
sub
out
lock
leave
js
mov
adc
mov
nop
mov
loope
movsl
into
or
mov
adc
jle
xchg
xor
test
std
insl
xchg
adc
inc
cmp
ljmp
pop
les
sti
mov
adc
jbe
clc
xor
push
push
jbe
lret
xchg
shl
leave
xchg
xchg
or
dec
lret
add
xchg
jmp
in
or
loope
leave
clc
into
sbb
in
and
pop
ja
daa
stc
jg
dec
push
mov
imul
inc
fdivs
xor
pop
cmp
sub
ss
fldt
mov
xor
xor
dec
shll
add
mov
jne
loope
fldl
je
clc
jmp
pop
fsubrs
push
es
test
push
shl
mov
in
movsb
cmc
out
in
add
frstor
lds
testw
pop
adcb
aad
rorl
mov
movsb
xor
and
push
pop
iret
pop
incl
rcll
loop
sti
cli
ja
sahf
push
pop
sbb
ret
int3
mov
std
out
adc
jne
sbb
scas
mov
push
mov
and
fldt
pop
jp
jbe
addr16
das
and
iret
mov
or
cmp
stos
mov
mov
adc
or
xchg
sub
lock
adc
sub
pop
icebp
aad
pop
jnp
dec
inc
push
add
inc
pop
mov
fdivl
inc
pop
xor
repz
movb
sar
cmp
popf
add
adc
cld
mov
pusha
pushf
jo
mov
xor
mul
hlt
enter
rcll
test
jne
scas
hlt
mov
cmc
inc
adc
fisubl
lods
addr16
mov
adc
movsl
int3
ja
fdivl
std
push
xlat
inc
jmp
push
adc
sti
das
jmp
stos
xor
fs
int3
fdivrp
cwtl
mull
and
in
dec
sti
aad
bound
jo
mov
pop
xchg
cmp
icebp
call
sbb
stos
mov
fcmovu
pusha
jns
xlat
scas
mov
push
adc
cmpl
dec
mov
imul
aad
jnp
pop
mov
fwait
sbb
jle
outsl
stc
adc
cli
stos
jmp
std
rorb
xchg
xchg
popf
imull
ja
mov
pop
dec
stos
xchg
adc
xchg
jnp
sbb
sub
mov
xor
mov
mov
icebp
cmpsl
test
rolb
cmp
or
jbe
bound
stos
inc
pop
lods
pop
in
loopne
xor
inc
pop
out
mov
popa
outsl
fcoml
mov
xchg
jge
pop
cwtl
mov
xchg
push
testb
popf
in
and
jno
out
mov
and
cmp
pop
cmp
push
xor
mov
xor
shr
out
pop
or
or
cld
sub
dec
sub
out
out
add
add
int
and
xor
push
stos
hlt
in
xor
ljmp
cmp
cmpsl
mov
test
sub
lods
addl
mov
xlat
add
daa
and
mov
ja
das
sahf
or
or
push
jne
int3
fwait
ror
and
inc
add
push
insl
fmull
or
mov
aas
dec
xchg
cmp
testl
scas
dec
xchg
cmp
pushf
fnstsw
inc
in
out
inc
pop
das
mov
loop
pop
and
test
pop
testl
test
jne
repz
mov
aas
sub
mov
out
enter
loopne
inc
pop
add
and
inc
adc
dec
cld
pop
cmp
inc
popa
lcall
shr
xorb
push
dec
xchg
in
sub
cmpsb
loopne
sahf
sbb
mov
cmp
pop
xchg
iret
repz
orl
push
cmp
stos
cli
es
push
movsl
mov
gs
lods
mov
mov
dec
fdiv
lcall
cmp
or
and
xor
sbb
cmpsl
mov
dec
jns
or
lock
xchg
and
lea
bound
lods
stos
aas
loopne
or
bound
dec
int3
mov
dec
in
pop
imul
movsl
addl
push
sbb
aas
enter
mov
adc
dec
and
test
cmp
add
test
sub
fidivl
cli
les
inc
xor
xor
push
rcr
xchg
xor
sbb
mov
stos
ret
stc
ret
fdivl
adcb
xchg
sub
adc
sbb
ds
lock
pusha
das
add
push
ds
xchg
jns
adc
and
adc
das
js
test
push
push
inc
lea
push
sarb
rcl
pushf
add
cmpsl
rolb
fcomp
dec
cmp
jnp
jno
loop
xchg
jno
mov
jl
pop
mov
std
dec
and
lcall
pop
mov
push
jae
xor
sub
fwait
mov
mov
mov
or
pushf
cld
icebp
out
sub
lods
pusha
insl
outsw
add
xor
xlat
xchg
cmp
shlb
xor
lcall
stc
sbb
out
ficoml
dec
sarl
add
xchg
pop
jl
mov
adc
xchg
xor
add
push
adc
into
add
mov
push
fcoms
rclb
and
or
shl
jle
jae
xor
push
imul
roll
cwtl
pop
push
int3
mov
mov
pop
in
jne
mov
lahf
mov
mov
adc
loope
ljmp
fists
inc
iret
pop
and
cmpsb
rcrl
inc
pop
jb
fcmovbe
mov
mov
mov
push
xor
dec
or
pop
push
insb
scas
imul
je
or
sub
icebp
jnp
cwtl
inc
js
sar
leave
mov
jge
and
push
add
mov
stos
xchg
mov
insb
add
shll
leave
in
cmpsb
adc
ja
add
mov
addl
sub
mov
sub
xor
mov
mov
mov
notl
sbb
aad
cld
sbb
insb
pusha
aad
mov
imul
pop
inc
or
lea
push
cmp
lods
arpl
lret
pop
mov
shl
jb
hlt
mov
xchg
jge
push
fcmovb
xchg
fnstcw
leave
sbb
cwtl
inc
xchg
lock
pushf
adcl
lcall
xchg
push
fdivrl
jne
mov
pop
outsb
cli
addr16
mov
into
repnz
jmp
sbb
push
mov
in
jge
in
ja
add
loop
cld
jbe
repz
cwtl
loope
push
mov
push
fstpt
sbb
jecxz
test
sub
mov
cs
or
and
jnp
ljmp
xchg
out
xchg
jecxz
incb
rcl
add
add
cli
mov
sarb
imul
mov
mov
lea
sar
jns
vaddss
les
add
or
mov
jmp
clc
dec
es
mov
fs
sbb
add
jg
dec
mov
mov
add
add
jae
xchg
jge
nop
jecxz
push
sbb
xchg
xchg
cmpsl
les
jnp
cwtl
mov
jg
push
jle
sub
jp
bound
popa
and
mov
sub
xchg
scas
push
pop
into
and
sub
push
daa
pushf
scas
lods
icebp
filds
fs
mov
jae
imul
clc
inc
jge
mov
jecxz
xchg
lods
sub
sub
dec
jecxz
fwait
xlat
lds
dec
pop
push
push
inc
insl
mov
cmp
dec
jmp
mov
cltd
cld
popf
pusha
flds
push
dec
sti
cltd
sbb
jmp
inc
repnz
data16
sbb
mov
jbe
cmp
pop
xor
lret
push
mov
push
mov
mov
jae
fsubl
cmp
jl
rcll
sbb
and
jne
aad
mov
and
leave
icebp
clc
xchg
notl
addb
adc
pop
lcall
test
jns
cmp
iret
push
jle
cmp
xchg
js
or
int3
aas
and
mov
xchg
push
test
pop
sub
cmp
and
mov
inc
dec
gs
es
mov
call
scas
sarl
inc
push
bnd
xchg
dec
jno
push
outsb
cmp
or
mov
adc
mov
sub
jecxz
fsubl
sbbl
push
rclb
out
ret
pushf
mov
ljmpw
rolb
dec
sub
pop
popa
push
lret
test
aam
shr
mov
aad
xchg
test
ss
xor
adc
mov
enter
ret
push
xchg
gs
hlt
cs
cmp
stos
inc
icebp
jge
sbb
fstpt
outsl
or
sti
clc
adc
aas
jp
push
pusha
cmp
mov
std
subb
mulb
mov
cmp
jmp
mov
cmp
mov
adc
jle
repnz
cmpsl
ficoms
ficoml
jae
mov
lahf
les
jo
lret
loopne
fs
push
mov
jnp
and
out
idivl
sub
push
and
jecxz
clc
xchg
sbb
loope
std
mov
inc
jo
adc
pusha
and
pop
pop
jno
jo
out
or
inc
add
out
and
xchg
int3
push
test
pop
sbb
int3
js
jle
and
add
mov
call
sbb
popa
push
gs
js
mov
imul
and
jnp
popf
insl
mov
mov
dec
or
mov
ds
sub
jb
inc
xor
enter
push
popf
cmc
pop
pop
xor
mov
cmp
sbb
call
repz
gs
jle
jne
pop
jle
or
push
lret
add
add
imul
icebp
add
mov
enter
subb
test
and
fstl
into
push
fcom
rclb
cmc
dec
fnstcw
stos
je
gs
sub
aaa
push
pop
rol
jns
loopne
icebp
sbb
pop
shll
ja
adc
aam
js
mov
push
fnstcw
je
mov
jle
adc
xchg
sub
outsl
adc
inc
sbb
loope
sbb
mov
pop
mov
mov
fldenv
insl
cltd
je
jb
jbe
xchg
addl
lahf
lahf
pusha
lret
fstpl
jmp
fisubrl
jb
jo
fwait
neg
or
jl
das
js
mov
loope
lcall
mov
jge
lret
mov
dec
out
jmp
leave
int3
push
stc
lods
fisubl
mov
sbb
push
xchg
sarb
arpl
xchg
dec
push
xor
loopne
outsb
loop
xchg
pop
lods
jne
fdivr
test
dec
or
jae
sbb
addr16
or
cmpsl
mov
lds
or
sub
incl
mov
xchg
mov
push
jge
inc
cs
lods
xchg
rcrb
add
arpl
addb
push
adc
out
jns
inc
mov
mov
int3
cmp
jmp
xchg
sbb
ret
pushf
pop
lret
test
jb
xor
and
pop
in
pop
std
and
je
fldcw
xchg
or
dec
test
dec
or
push
cmpsl
lods
xchg
imul
imul
add
jo
out
push
inc
mov
mov
inc
rcl
lret
sahf
ret
sbb
iret
out
outsl
inc
mov
gs
dec
ljmp
cmpsl
fs
ret
outsl
lods
mov
mov
adc
sub
xchg
mov
push
inc
ret
cli
popa
shr
push
jno
shl
jp
sti
xchg
or
lcall
xor
lds
aad
lcall
test
cmp
push
andl
and
dec
fadd
outsl
jmp
inc
pop
mov
mov
lds
lods
lret
or
fimuls
lods
ss
repz
ds
inc
cwtl
sbb
push
push
shll
movsl
imul
dec
mov
and
lods
inc
xlat
push
lahf
enter
enter
movsb
cmpl
dec
hlt
inc
inc
mov
incl
push
roll
movsl
lret
movsl
fidivrl
fisubs
test
iret
lret
sub
push
arpl
mov
push
in
les
jae
pop
mov
inc
faddl
mov
in
into
out
inc
or
clc
ja
mov
cmpl
sbb
scas
les
jecxz
pop
cmp
mov
jae
jns
fisubl
sbb
shrb
jne
mov
insl
hlt
xchg
stc
insb
popa
test
call
or
dec
clc
mov
or
xchg
inc
cwtl
addr16
mov
mov
repnz
shrb
stos
inc
jbe
loop
mov
icebp
fucomip
mov
add
mov
fbstp
cli
xchg
les
aam
fistpll
mov
loopne
pop
cmp
into
aaa
sbb
jne
inc
and
cmp
fisttpl
ret
pop
mov
std
push
sub
incb
test
xchg
push
fbstp
lods
jb
add
pop
mov
or
jl
adcb
jecxz
jnp
loopne
out
inc
jbe
xchg
mov
dec
jno
pop
or
mov
leave
gs
dec
xor
sub
adc
xlat
js
shlb
mov
stos
out
fiaddl
decl
roll
push
adc
into
xor
xor
cmc
push
mov
out
fidivrl
decl
in
fmull
xlat
adc
imull
pop
mov
push
aaa
mov
dec
cmc
cli
push
mov
push
repz
lock
jge
add
int3
mov
push
loope
test
xchg
lahf
sbb
ds
lcall
dec
shll
xchg
inc
test
inc
lret
xchg
inc
insl
aad
xor
adc
bound
add
sbb
out
lret
rclb
sbb
shrb
shll
add
add
xor
cmpsl
lea
inc
loop
dec
fisttpl
sahf
cmp
xor
mov
dec
push
into
cld
pop
cmc
cmp
stc
mov
lret
mov
mov
fisubrl
pop
cmpsb
daa
push
dec
mov
lret
subl
sub
sbb
jge
xchg
adc
cmc
mov
dec
daa
mov
repnz
xchg
shlb
daa
or
test
mov
lret
push
mov
pop
lock
push
dec
and
testl
xchg
fisttpl
mov
push
cmp
push
jo
cmp
cmp
push
xchg
or
mov
stc
pop
shlb
adc
mov
imul
pop
push
out
xor
cmp
sub
scas
stos
mov
jo
push
lahf
mov
pushaw
cmpsl
xlat
cli
jle
les
mov
shlb
push
ja
mov
jl
xor
icebp
and
dec
out
jl
jge
outsl
pop
mov
popa
sahf
aaa
out
or
sub
frstor
cmp
mov
and
jg
les
xor
imull
add
mov
jmp
add
sub
sarl
cmp
dec
push
es
adc
push
movsl
xchg
scas
popf
xor
fldl
aad
dec
cmp
push
arpl
xlat
lahf
test
imul
mov
mov
xchg
pop
pop
adc
push
repnz
stc
les
aam
jbe
test
js
dec
push
add
mov
lahf
and
xor
lea
mov
test
pop
and
mov
adc
clc
in
add
push
out
xchg
sub
stos
in
pushf
or
jbe
fiaddl
cli
lret
scas
or
bound
jne
lock
pop
outsb
inc
ja
and
pop
jge
shrl
hlt
mov
loope
mov
xor
test
gs
xchg
add
out
jno
fiaddl
push
add
scas
xchg
mov
jp
scas
aas
inc
inc
inc
xor
repz
pop
dec
pop
popa
mov
arpl
call
mov
loopne
aad
inc
in
test
aaa
and
outsb
cmp
mov
stos
xchg
add
aad
pop
xchg
and
lock
mov
dec
xlat
test
push
adc
pop
insb
fists
push
push
pop
lock
cmpb
cmp
mov
lods
adc
mov
imul
sub
ljmp
sarb
clc
dec
or
test
ror
mov
inc
lock
mov
dec
lea
cmp
and
sub
jmp
les
pop
cmp
push
adc
push
jg
xor
sbb
mov
ds
stos
fldenv
sahf
pusha
or
and
fidivl
jo
mov
mov
test
icebp
jo
jecxz
sbbl
jo
int3
lock
loope
xchg
mov
shlb
sbb
push
fistpll
mov
pop
fisubs
fstps
inc
out
jo
adc
adc
stos
or
sub
ret
push
cmp
test
sbb
shrb
jmp
or
faddl
push
inc
ljmp
mov
stos
sbb
fbstp
push
pop
imul
fisttps
ss
and
popl
aaa
cmp
rcrb
push
aaa
jecxz
daa
sub
aaa
stc
jo
pop
stc
and
push
les
sbb
shll
enter
inc
test
les
add
cmp
ss
out
add
inc
sbb
das
sti
push
fstpt
icebp
and
movsl
mov
pop
sti
inc
idivl
push
js
mov
inc
push
into
pop
and
dec
push
dec
xchg
jp
test
jb
xlat
cmp
lret
pusha
sbb
das
xlat
inc
out
mov
data16
int
sarb
addl
leave
and
les
pop
sahf
jecxz
xlat
je
mov
push
dec
fwait
lret
push
jno
sbb
xor
pop
add
dec
iret
mov
mov
es
icebp
push
fs
es
xor
movsb
cmp
vphaddubq
pop
aam
xchg
in
jmp
ljmp
inc
jg
or
aaa
leave
test
xor
adc
xchg
add
push
push
dec
mov
adc
jge
mov
mov
sub
mov
dec
sub
pop
fs
push
sbb
stos
xchg
mov
push
push
test
sub
sub
fsubl
cmp
stc
fidivrs
sbb
push
xchg
adc
and
js
mov
iret
jecxz
inc
xchg
pop
inc
cmp
out
cmp
lret
pusha
filds
and
pop
loop
js
into
leave
dec
push
addr16
adc
orl
pop
movsl
inc
stos
sbb
mov
add
cmp
push
mov
in
cli
pop
dec
inc
out
or
loope
push
xchg
or
jb
mov
out
jae
mov
or
sub
push
lahf
xor
cmpsl
nop
arpl
xor
fsubrp
push
jb
ja
fcoml
mov
stos
xchg
sbb
hlt
or
in
stc
idivl
or
jno
in
lods
or
cltd
in
xchg
jge
insl
jmp
mov
add
pushf
jecxz
inc
fsubs
fs
push
call
fadd
scas
cwtl
mov
sub
ds
cmp
jo
sbbb
loop
jmp
fdivs
fistpl
dec
mov
cmp
fimull
gs
jl
push
icebp
add
sub
pop
lock
scas
pop
dec
jg
fldenv
mov
out
jo
mov
add
jno
int
push
inc
lods
mov
hlt
mov
mov
jmp
dec
cmp
loope
adc
mov
cmp
hlt
cmpl
sub
jo
je
add
jae
jle
mov
sbb
loop
sub
iret
sti
dec
loopne
lahf
aaa
push
shrl
mov
inc
add
cmpb
mov
mov
inc
inc
ja
fldenv
push
xor
xchg
sbb
inc
add
loopne
insl
movsl
jg
sbb
push
stos
sub
jae
stos
cmp
pop
addr16
xor
or
repz
test
jge
sbb
mov
and
enter
movb
mov
cwtl
cmp
test
add
mov
fs
bound
xor
cmp
pusha
mov
push
mov
add
sahf
dec
pop
and
xchg
xchg
xor
addr16
je
push
jnp
sub
or
mov
xor
mov
out
push
fstl
cmp
mov
mov
lods
pushf
hlt
adc
or
adc
pushf
ds
ljmp
stos
inc
add
aad
lock
inc
loope
xchg
movsb
mov
and
mov
cwtl
pop
je
or
dec
std
cs
test
cmp
cmp
scas
lods
scas
pop
or
or
push
ss
pop
pop
add
xchg
jmp
sbb
pop
icebp
leave
lret
and
and
iret
ja
mov
push
adc
shl
in
aas
jg
test
add
popa
les
test
and
and
sbb
jge
cmpsb
fcomi
sahf
cltd
dec
cli
jnp
and
dec
xchg
or
pusha
test
sub
xorb
mov
jae
cli
pop
push
mov
and
sahf
or
ficoml
subl
in
mov
incl
out
hlt
inc
lea
pop
push
test
xchg
into
and
mov
stos
mov
dec
inc
sub
shl
scas
push
sahf
mov
add
and
add
xchg
adc
jb
test
aaa
stc
das
xor
xor
adc
adcl
lea
sbbl
pop
lods
inc
pop
jb
std
lret
push
rcll
out
lcall
in
loope
pusha
push
sbb
xchg
xchg
mov
popf
cmp
cld
lds
adc
cmp
gs
add
adc
pushl
ljmp
sahf
movsl
ret
push
fsubp
cmp
scas
jb
cmpsb
push
stos
mov
ljmp
push
and
imul
sub
imul
shr
cmp
in
xchg
cld
call
adc
jmp
das
aam
dec
imul
out
sub
imul
push
mov
mov
fwait
xlat
js
enter
adc
repz
das
and
test
lods
imul
and
mov
jo
push
lds
jo
or
data16
mov
cmp
popa
insl
adc
movsl
add
pop
lock
jg
xor
addb
jmp
mov
sbb
aad
clc
js
jno
repnz
adc
xchg
jno
xlat
dec
lock
add
sbb
stos
lahf
imul
call
push
aaa
fld
pusha
pop
lret
add
loopne
xchg
jae
mov
jg
js
in
fsubl
fmull
outsl
loop
mov
adc
xor
out
xor
inc
shlb
push
push
mov
pop
shrb
dec
push
stos
sbb
cmp
xor
xchg
add
push
in
or
mov
mov
fsubs
cld
adc
cmp
iret
adc
push
jbe
push
das
push
cmp
or
cmpsb
mov
jo
sub
stos
mov
jmp
scas
xchg
adc
adc
das
scas
pusha
and
pop
lods
cmp
xchg
jno
stos
fcom
xchg
popa
mov
adc
pop
pop
mov
imul
xor
enter
sti
sub
repz
or
adc
mov
lea
xchg
pop
mov
dec
cmp
pop
mov
push
adc
push
scas
adc
mov
imul
jne
lods
sub
addr16
gs
ret
jge
fstps
inc
cmp
mov
sbb
sbb
lret
fs
xlat
popa
xorb
mov
push
scas
inc
call
outsl
or
push
mov
adc
ss
call
jae
stos
jno
jge
and
out
mov
jnp
ja
pushf
adc
addl
pop
scas
mov
push
mov
sub
xor
mov
mov
cmp
mov
insb
ja
mov
push
test
sub
fsubrs
jg
pop
repnz
push
enter
adcl
sahf
mov
mov
mov
je
pop
inc
mov
popa
dec
pop
jmp
mov
insb
pop
and
bound
push
inc
mov
adc
inc
ret
sarl
mov
push
scas
pcmpeqb
arpl
cmp
adcb
sub
sbb
lcall
addb
jecxz
add
test
pop
mov
fnstcw
fisttpll
aaa
sbb
je
ljmp
xchg
inc
or
push
sti
enter
pushf
mov
pop
mov
popf
xor
sti
iret
les
push
ja
xor
pop
fstps
push
sbb
push
add
mov
jbe
fsubs
mov
xchg
xchg
test
scas
add
repz
inc
sahf
dec
pushf
repnz
sahf
into
in
and
xchg
ret
pop
ret
sub
pop
jl
fs
mull
movb
cmp
ret
cld
push
pushf
into
movsl
inc
mov
idivb
or
pop
icebp
js
and
aad
hlt
sub
add
cltd
or
lods
add
inc
cmc
mov
out
lock
addr16
jae
sbb
add
std
cmp
add
push
imul
jg
arpl
dec
xor
adcl
je
dec
gs
cmpsb
mov
mov
inc
cmp
sbb
cmpsl
int3
addr16
jle
and
shl
divb
clc
adc
iret
mov
add
push
dec
sbb
loop
ficoms
outsl
pop
xor
or
cld
mov
dec
sarb
adc
leave
test
stos
pop
push
jp
mov
push
mov
lods
in
adc
sub
loop
mov
dec
adc
cmp
push
sbb
xor
je
mov
adc
repnz
cld
bound
insb
and
xchg
cmc
call
dec
sub
filds
cs
xor
pop
add
cmpb
xor
xchg
mov
clc
stc
sarl
insl
pop
fldcw
and
dec
pop
mov
fdivp
or
push
mov
mov
gs
outsb
jp
test
aaa
das
gs
mov
cmpsb
adc
or
rorb
mov
or
inc
ret
dec
fcomps
dec
sub
push
popf
cmpsl
nop
adc
push
stos
jb
cmc
loope
jbe
rolb
sbb
cmp
mov
sbb
add
aad
jmp
pop
scas
xchg
xor
shll
pusha
lock
xor
sbb
xor
mov
mov
sahf
lahf
loopne
xchg
imul
imul
or
sub
inc
into
lret
fcomi
and
xor
xchg
xorb
inc
sbbb
mov
jno
push
jns
in
jmp
adc
leave
mov
lds
xor
xchg
adc
inc
mov
mov
mov
fisttps
clc
test
mov
icebp
and
scas
lea
orb
fwait
movsl
ss
add
mov
loopne
mov
inc
add
out
fistl
andl
mov
sub
mov
insb
xchg
daa
rorb
imul
loopne
mov
lds
jbe
inc
push
xchg
adc
cld
mov
ret
inc
mov
int3
jae
int3
xor
scas
stos
jp
data16
sar
and
push
loop
fnstenv
lret
mov
push
repnz
dec
pop
loopne
push
and
imul
gs
push
aam
jb
and
into
push
adc
mov
pop
mov
inc
in
mov
icebp
fxch
mov
sbbb
movb
repnz
dec
inc
mov
xchg
mov
repnz
adc
dec
dec
dec
pop
mov
mov
xchg
repz
mov
push
dec
ljmp
inc
subl
cmp
pop
dec
rcrl
insl
pop
iret
pop
stc
fstps
mov
cmp
xchg
mov
je
fsubp
mov
push
sbb
int
sarl
or
inc
fsubl
test
mov
jne
cli
push
lahf
aas
lea
jmp
out
repz
je
rcrl
jae
rorb
fs
xor
xor
or
inc
fldcw
inc
pop
sar
inc
repz
std
cwtl
sbb
sbb
cs
inc
sbb
sti
xchg
orl
sub
dec
sahf
add
cwtl
mov
sbb
jecxz
push
jge
nop
sbb
or
movsl
data16
lds
dec
add
bound
les
out
shrb
lods
hlt
jl
cmp
loope
js
hlt
adcl
dec
xchg
icebp
aam
jmp
stc
ss
sub
dec
cld
mov
rorl
in
pop
aaa
rcl
pop
dec
sahf
arpl
in
bound
xor
shlb
imull
and
push
in
ja
cltd
out
scas
dec
xchg
push
shlb
push
dec
mov
mov
fisttpl
xchg
xchg
subb
mov
lds
jp
daa
loopne
gs
push
xchg
mov
aas
xor
push
jle
jbe
loop
cwtl
sbb
insl
stos
jo
add
roll
mov
push
enter
fiaddl
dec
push
inc
mov
add
fstl
sarb
pop
push
shlb
cltd
push
cwtl
stos
add
pop
push
enter
enter
arpl
es
mov
fidivrs
xor
jmp
les
xchg
imul
repnz
shl
nop
pop
mov
mov
lods
loopne
out
inc
repnz
mulb
jecxz
pop
insb
inc
fiaddl
jmp
jnp
dec
push
pusha
jg
clc
fiaddl
aam
add
iret
repnz
sbb
sub
xchg
mov
jae
sub
jnp
outsb
lret
aad
inc
fs
orl
hlt
mov
jno
ljmp
cwtl
mov
subb
or
mov
int3
sub
jecxz
pushf
lret
mov
leave
jp
sbb
gs
sbb
pop
adc
sub
in
pop
mov
sarl
in
loope
out
dec
ja
mov
xchg
jle
pop
push
jmp
inc
adc
in
inc
scas
loope
les
and
pop
dec
mov
push
jle
ret
stos
mov
mov
adc
push
ret
jecxz
adc
arpl
sbb
je
insb
dec
mov
mov
sbb
lock
stc
outsl
push
cmc
pop
les
jmp
in
cmp
cmpb
xlat
out
mov
xchg
idivb
sti
jge
out
stos
pop
pop
cltd
push
push
ljmp
xor
sahf
cld
insl
std
push
mov
imul
adc
adc
add
loop
pop
mov
and
xchg
notl
cmp
xor
add
xlat
jecxz
push
aaa
mov
pop
sub
out
fcompl
inc
adc
pop
cmp
and
mov
in
and
in
mov
add
mov
out
mov
cwtl
fisubrs
mov
fisttpll
test
xchg
fsubl
aam
dec
pop
mov
sbbb
dec
mov
aaa
xor
xor
stos
or
sbb
pusha
je
dec
mov
and
lar
es
mov
pushw
outsb
and
jg
addr16
mov
jo
mov
decb
test
je
adc
fcoml
sub
in
in
dec
cmp
push
push
iret
xor
test
mov
sub
xor
and
lock
xchg
addr16
loopne
jo
lds
sub
mov
ficompl
pop
cmpsb
jbe
dec
lahf
std
js
push
sbb
dec
hlt
jb
sbbb
jb
cwtl
pop
mov
adc
ljmp
jno
aad
xor
push
fsubr
cmp
cmp
mov
xchg
dec
mov
ror
sub
or
aam
jecxz
xchg
std
scas
in
xchg
addr16
aas
lcall
dec
push
ffree
cmp
inc
add
adc
jmp
mov
lds
adc
test
inc
lds
outsb
add
mov
cmp
cmp
xor
out
daa
daa
dec
dec
scas
bound
sbb
push
mov
test
or
push
mov
jecxz
and
adc
xchg
sub
in
push
cmp
cmc
fldenv
outsl
insb
cmp
xchg
ret
cmpsb
pop
andb
jl
movsb
lods
js
into
decb
clc
sbb
push
pop
lahf
mov
jge
sbb
mov
nop
fstpt
jae
xchg
imul
repz
js
out
xchg
sub
imul
pop
add
lds
add
mov
lds
pop
mov
push
mov
sbbl
sti
xchg
ljmp
inc
repnz
out
lcall
pop
jbe
cltd
loop
data16
xlat
aam
mov
stos
push
cmp
jmp
das
and
mov
mov
sub
fmuls
cwtl
idivb
das
dec
sub
pop
or
es
cmp
rcll
jae
popa
js
jmp
out
cmp
mov
cmpsb
or
icebp
imul
cmp
or
out
jb
xor
inc
bound
cmp
int
mov
enter
addr16
lret
sub
inc
aaa
push
xor
cmpsl
or
outsb
adc
inc
pusha
arpl
inc
cmp
xor
push
jb
cltd
cmc
push
adc
xchg
mov
push
outsl
subb
call
js,pn
jp
add
inc
imul
jecxz
xchg
pop
jne
lock
nop
enter
adc
mov
cmpb
pop
cld
ljmp
push
movsl
int3
or
fisttps
stos
xchg
xchg
jns
push
leave
sti
sub
daa
xchg
repz
stos
xchg
or
inc
push
mov
sbb
push
jecxz
lea
and
aam
test
stc
daa
cltd
test
inc
cwtl
push
scas
mov
scas
add
mov
sbb
cmpsl
ljmp
int
dec
gs
jbe
mov
dec
pop
mov
jne
sub
sahf
cmp
icebp
iret
pop
daa
insl
loop
adcb
sub
sub
cmp
and
and
addl
lcall
xor
xchg
add
fisttpll
cmpsl
rolb
pop
scas
insl
insb
ficoml
pop
mov
lods
repz
testb
mov
push
je
test
mull
dec
aad
xchg
xlat
dec
aad
scas
loopne
ljmp
aam
arpl
fsub
jnp
out
fisubrl
jno
and
das
xchg
xor
ret
mov
xor
lea
jnp
test
out
xor
jp
out
mov
add
mov
xchg
in
xchg
mov
jne
icebp
or
insl
mov
adc
push
shlb
and
xor
jmp
push
rcrl
mov
or
jmp
out
fimull
push
mov
dec
cmp
xchg
jb
add
dec
dec
cmp
mov
jo
out
push
pusha
fcomp
out
inc
push
ss
not
and
adc
bnd
je
xchg
insl
jae
sbb
xchg
mov
mov
mov
mov
cmp
push
int3
mov
jnp
mov
and
adc
pop
mov
cmp
repnz
divl
hlt
pop
mov
test
mov
jmp
pop
dec
pushf
mov
sub
or
idivb
push
aaa
test
inc
jp
sar
lcall
and
inc
push
xlat
dec
and
push
pop
test
repnz
fldl
inc
fucom
mov
jl
push
jb
ret
lods
dec
pop
mov
dec
xchg
rolb
inc
jno
in
aaa
push
dec
pop
mov
into
push
lret
cmc
mov
aaa
mov
sbb
not
int3
iret
xor
dec
push
in
xor
xchg
add
or
and
mov
call
jbe
inc
shlb
repnz
push
fldcw
ljmp
or
jecxz
out
loopne
andb
loop
push
addr16
popa
xchg
cmpsl
je
mov
test
ds
add
and
xchg
mov
mov
ss
in
jl
jl
xorl
inc
outsl
adc
mov
sub
icebp
xlat
jg
sysenter
adc
repz
clc
imul
fistps
push
rcrb
movsb
stc
sbb
and
lea
mov
scas
sub
mov
mov
inc
xor
fnsave
mov
mov
jge
lret
add
and
inc
les
hlt
sub
pop
rorb
sarb
gs
adc
push
es
sub
jo
fdiv
arpl
inc
sbb
adc
or
jno
fisttpll
push
inc
repz
cltd
shrl
mov
lea
mov
jmp
push
cmc
cmp
dec
aaa
ja
mov
mov
jne
or
sbb
sbb
xchg
mov
int
cmp
cmpsb
inc
xor
adc
add
out
fs
out
push
adc
inc
in
jecxz
insl
lods
pop
add
cmp
insl
fnstsw
cmp
pop
ljmp
imul
into
bound
push
lods
and
xor
push
inc
gs
filds
cmp
sbb
stos
cli
scas
pop
jb
xchg
dec
fisubrl
xchg
cmp
cmpsb
insl
sbb
mov
xchg
les
mov
das
mov
or
jmp
test
imul
cltd
add
cmp
out
stc
jle
mov
jns
mov
push
sub
mov
and
and
inc
int3
jl
rol
xchg
or
add
imull
inc
xchg
jno
dec
push
rcrb
xor
pop
pop
adc
loopne
pop
mov
pop
ja
mov
pop
and
sub
ja
push
adc
xor
stos
and
inc
fwait
pop
mov
leave
jne
lea
pop
insb
inc
hlt
sub
das
dec
js
aas
jo
sub
pop
xor
outsb
lds
jb
jae
mov
cmp
addb
inc
sbb
dec
sbb
das
pop
mov
jns
ss
out
inc
mov
sub
popf
dec
sar
aam
mov
scas
push
fldt
jo
stos
jbe
lea
stos
lea
pusha
add
cld
and
mov
imull
test
test
scas
les
dec
add
dec
pop
or
jge
insb
leave
cmpsl
out
loope
xchg
ret
push
push
xor
les
in
dec
hlt
xchg
ret
pop
sbb
inc
add
or
cmp
sbb
lock
jge
test
xchg
aas
out
lods
push
jmp
cmp
inc
add
fs
inc
jo
cmp
mov
cmp
loope
cmpsl
jo
add
xchg
loope
sbb
into
mov
enter
mov
imul
pop
xchg
jno
inc
pop
xchg
jle
sbb
sbb
orl
insb
es
test
xor
add
sub
push
push
shll
lock
fs
jmp
aam
jg
sahf
out
push
mov
cld
in
mov
xchg
dec
jno
loop
addl
add
add
data16
fnsave
nop
es
inc
addr16
mov
rcrl
xchg
jp
aas
cmpsl
jb
sub
mov
push
rcrl
mov
dec
push
mov
inc
jno
ret
mov
add
lods
pop
push
shl
and
xchg
lds
cmp
adc
enter
mov
xchg
xchg
jp
dec
lods
pop
and
in
cmp
int3
rcrl
iret
push
push
xlat
cmp
out
cltd
cmc
sub
jo
scas
and
push
enter
ret
adc
lock
sbb
lods
push
popa
lods
addl
jmp
clc
jp
adc
dec
mov
pop
dec
adc
and
aas
fdivrl
stos
inc
jmp
dec
sbb
aaa
popf
or
or
lret
and
dec
test
lahf
mov
add
sub
mov
in
inc
stc
mov
mov
loop
pop
testb
scas
cmp
ret
or
xchg
repnz
and
mov
setns
hlt
adc
mov
add
jo
ret
jne
mov
xor
mov
xchg
mov
add
inc
hlt
fidivrl
sbb
stos
mov
in
xchg
mov
pop
cmpsb
sbb
mulb
js
mov
jmp
fadds
lret
es
in
outsb
jbe
out
mov
mov
hlt
and
pusha
sbb
icebp
rcl
jnp
and
gs
xor
ds
das
je
cmc
out
mov
or
bound
mov
add
aaa
int3
pcmpgtd
dec
sarl
daa
nop
repnz
or
out
in
and
mov
movsl
xor
push
xor
data16
push
addr16
cmp
outsl
mov
push
add
mov
in
pop
sub
out
out
insl
sbb
test
lods
imul
fstl
hlt
scas
fwait
mov
loop
ret
cmp
in
mov
push
push
aad
outsb
insl
xchg
fisttpll
ljmp
push
adc
leave
aad
xorb
orb
jo
jnp
pop
bswap
and
fxam
notl
fmuls
fadds
test
or
mov
jnp
ret
outsb
push
cmc
lahf
adc
insl
jns
popl
mov
add
or
int3
jbe
and
xorb
or
jns
xor
in
repz
sbb
pop
cltd
lret
sbb
repnz
fbld
jae
mov
mov
cmp
lods
in
test
inc
sahf
stos
lea
int3
fs
sbb
sbb
jno
xchg
testl
outsl
jbe
and
icebp
jo
shll
imul
adc
inc
add
sbb
lret
inc
inc
xor
imul
push
nop
mov
push
test
shl
addb
pushf
sub
fldenv
std
push
es
scas
test
fwait
sbb
push
xchg
and
pop
mov
or
add
cmpsl
cmp
jmp
xchg
imul
data16
dec
imul
fldcw
repz
pop
test
shlb
xchg
sub
outsb
out
std
dec
js
add
cmp
shll
lret
in
cmp
mov
sub
dec
aam
fcmovu
pop
popa
cmp
or
mov
xor
xchg
adc
stc
icebp
mov
add
pusha
xchg
sub
and
mov
lds
xor
in
pushf
imul
stc
loop
xchg
int
and
fdivs
das
push
and
lcall
add
jle
ds
fstpl
mov
sub
mov
call
xchg
xlat
jp
iret
je
loope
cmpsl
idivl
cmp
xchg
inc
dec
ret
pushf
add
dec
sti
jecxz
mov
hlt
add
jae
mov
or
inc
jnp
sbbb
mov
out
insl
cli
arpl
in
mov
xchg
adcb
xor
dec
cmp
xchg
pop
mov
mov
sahf
subl
pop
icebp
sbb
mov
adc
adcl
les
push
lock
xor
mov
inc
push
lods
std
mov
xor
xor
add
shlb
clc
lret
adc
mov
jl
pushf
cmp
rcrb
sub
push
adc
inc
pop
adc
mov
mov
test
dec
mov
cmc
mov
lcall
dec
insb
mov
pop
fbld
xchg
fiaddl
addr16
mov
lods
sub
pop
pusha
in
leave
push
lea
out
lret
enter
stos
icebp
adc
stos
mov
cs
cmp
mov
dec
clc
mov
mov
mov
and
fcmovne
sub
mov
loope
xchg
dec
popa
adc
daa
pop
or
adc
test
cmp
sbb
es
pop
push
mov
or
test
clc
lods
xchg
sub
into
adc
or
ficompl
gs
mov
aad
and
outsb
pop
das
push
stos
cmp
dec
fs
or
push
jmp
adcb
xor
xchg
mov
xchg
sahf
push
or
sbb
pop
add
outsl
dec
aam
xchg
addr16
frstor
sbb
push
cmpsl
cmp
push
sub
dec
mov
mov
test
sbb
jg
das
scas
insb
test
sub
jns
mov
push
mov
sahf
pop
cmpsb
data16
or
xor
mov
mov
stos
or
sub
insb
shrl
lahf
out
cmp
in
dec
dec
mov
push
xchg
rcl
or
aam
and
push
inc
stos
fiadds
imul
cmpsl
in
fcmovb
add
ljmp
push
mov
pop
xor
popa
es
sub
aaa
call
mov
pusha
and
repnz
imull
pusha
fs
nop
xor
mov
fisubs
push
dec
jle
jns
les
lret
jmp
cmp
inc
mov
jl
cmpsb
sbb
push
pop
push
adc
lds
mov
mov
jns
adc
add
pushf
fisubs
rorl
shlb
mov
bswap
pusha
aas
cmpsl
jmp
xlat
leave
or
cmp
sub
push
adc
fwait
ss
in
insl
icebp
sti
outsl
xor
add
adc
lods
add
ja
mov
jmp
xchg
or
mov
mov
das
loop
add
sub
mov
mov
cmpsb
cmp
enter
aam
mov
pop
or
push
hlt
mov
adc
mov
rcll
stc
pop
push
sahf
loop
fisubl
sub
aam
xchg
jns
cmp
shrb
fcomps
mov
xchg
xor
xor
cltd
or
mov
jno
stos
inc
popa
insb
jnp
push
mov
pop
dec
in
jne
lahf
stc
aad
xor
xchg
mov
cmc
sti
nop
rcll
inc
or
jmp
jmp
cmpsl
sub
mov
pop
cmpsl
aas
or
push
adc
push
bound
xor
push
push
adc
jne
jp
fcmovnu
pop
bound
or
loop
inc
inc
out
pop
mov
in
inc
adc
sub
imul
sub
in
and
test
cmp
sub
inc
imul
lods
push
xor
jp
mov
call
jmp
jne
xchg
mov
add
scas
dec
jns
nop
movsl
fistl
outsl
dec
or
test
movsb
jg
or
sub
mov
and
jl
imul
xchg
loope
mov
mov
call
add
outsb
subl
movsb
add
aad
js
sub
and
mov
loopne
mov
mov
inc
lret
notb
roll
outsl
repnz
in
push
lahf
int
aad
mov
pop
paddb
aas
lret
lret
mov
sbb
fcompl
cmp
and
sahf
out
shll
cmpsb
call
popf
fidivrs
ds
subb
fisubl
adc
mov
shlb
push
mov
sub
pop
xor
or
cmp
iret
xchg
or
add
das
lock
lret
inc
cmp
inc
rcpps
iret
jne
test
xchg
jge
sub
nop
ret
cmp
test
loop
mov
push
add
int
jns
ret
xor
cmp
pop
fucomp
scas
lds
inc
push
mov
xlat
sub
test
enter
ds
sub
mov
sub
jne
ja
pop
pop
add
mov
adc
dec
pop
stos
aas
shlb
sti
clc
inc
loop
pop
jno
test
rorb
ret
mov
xchg
outsl
pop
mov
xor
jge
cmp
inc
dec
into
push
cmovne
outsl
sub
in
stos
dec
daa
cmp
ret
xchg
nop
pop
aad
frstor
jle
push
insl
in
sbb
xrelease
xchg
ret
pop
xchg
jmp
push
add
push
shl
push
mov
cmpl
das
icebp
inc
repnz
adc
test
xchg
nop
pmaxsw
cmp
ds
and
shl
dec
add
jecxz
or
das
pop
jge
scas
inc
push
nop
jb
mov
and
fstl
in
push
pop
mov
hlt
pop
rcrb
sbb
cmp
pop
jl
inc
jae
es
push
das
das
arpl
lds
fwait
mov
scas
mov
sub
mov
mov
aad
popf
psubsb
addr16
arpl
int
mov
mov
and
adc
test
in
out
xor
mov
out
mov
dec
popl
mov
lods
in
fs
jmp
mov
jne
rcrb
adc
mov
sbb
testb
fidivrs
je
imul
das
cmp
in
pop
push
jecxz
cmp
cli
or
or
movsl
mov
inc
adc
mov
insl
loope
shl
and
jno
mull
inc
mov
out
sub
in
lock
fidivrl
inc
mov
and
jns
mov
xlat
out
rcrl
dec
pop
xchg
jg
call
stos
xchg
sub
adc
or
call
ret
movsl
mov
mov
insb
jae
xchg
cli
cmp
add
push
subl
fsubr
inc
stc
fsub
sahf
je
sbb
aad
movsb
jo
mov
inc
out
mov
cwtl
or
imul
inc
popf
test
cmp
mov
xorl
mov
dec
orl
push
inc
mov
sbbb
dec
loope
cli
add
int
leave
rcrl
scas
jb
mov
cmp
sbb
cmp
scas
mov
shrb
jg
inc
push
loop
add
jnp
cmp
jmp
fcmovu
adc
inc
fsubl
or
fmuls
jns
push
sbb
ficoml
xlat
xchg
push
or
aam
pop
lahf
ss
or
sub
xor
dec
xchg
jae
addr16
icebp
sbb
jmp
cs
push
ja
cmp
orl
dec
mov
push
jno
adc
bound
imul
xor
ljmp
push
jne
push
cmp
adc
push
arpl
jae
xchg
dec
mov
sub
push
sti
sahf
int3
dec
test
pop
push
shll
mov
cmpsl
imul
das
data16
addb
mov
or
mov
adc
cli
daa
divl
lock
pushf
fbld
mov
cmp
ficomps
and
outsb
mov
cmp
sub
xor
imul
ja
fists
pop
sbb
ljmp
jbe
addr16
push
add
std
aam
jl
in
push
jne
int3
mov
push
das
rcrb
add
in
pop
lods
and
push
int
dec
inc
mov
std
add
incl
in
arpl
data16
out
mov
push
xor
xor
mov
push
jl
lods
aad
ret
pop
push
xchg
add
xchg
adcl
aas
movsl
cmpsb
insl
subb
mov
addl
in
adc
pusha
movsb
and
and
lods
xchg
stc
mov
and
scas
je
testb
jns
mov
mov
lret
test
scas
adc
mov
shll
inc
xor
aad
mov
subb
mov
fstl
jge
and
mov
jne
ja
xor
mov
sub
sbb
int
test
stos
jnp
mov
xchg
lock
pusha
mov
dec
or
iret
insb
clc
mov
mov
mov
mov
and
ljmp
fldenv
cmc
jne
mov
dec
stos
enter
cmpsb
imull
dec
das
mov
mov
mov
insl
loop
nop
mov
dec
add
icebp
call
hlt
adc
cld
or
push
add
hlt
data16
jecxz
test
stos
into
or
pop
and
mov
mov
mov
nop
dec
mov
dec
rolb
out
pusha
cld
out
add
mov
ljmp
mov
dec
sbb
inc
inc
push
loopne
mov
xor
ljmpw
mov
xchg
pushf
ret
stos
sub
and
movsl
rclb
pslld
ljmp
adc
aas
push
push
add
cmp
shl
hlt
pop
in
sub
loopne
cmp
jg
daa
mov
out
or
fmull
xchg
pop
daa
sahf
pop
mov
or
pop
jnp
mov
add
jg
subl
es
pop
stos
sub
movsb
lock
rclb
mov
in
mov
and
enter
leave
lods
adc
stos
lods
repnz
pop
sarl
push
jl
jg
mov
add
leave
xchg
jbe
rcr
cltd
xchg
loopne
jmp
mov
sub
orl
ret
rorb
das
leave
mov
sbb
ret
mov
mov
pop
xor
gs
xchg
pusha
dec
adc
and
xlat
pop
incl
jmp
test
fmuls
or
cwtl
xlat
mov
addr16
nop
adc
call
fwait
jg
jl
mov
pop
loopne
pop
sub
and
mov
dec
dec
push
xchg
mov
or
rorb
rolw
ljmp
push
cld
filds
xchg
movsl
adc
negb
sbb
mov
xchg
push
mov
cs
xchg
sbb
push
pusha
lock
jmp
xchg
cmpsb
jg
xchg
shl
push
ljmp
lea
aad
les
incb
mov
push
sbb
lret
xor
fdivs
sbb
mov
sti
ret
add
mov
xlat
sbb
daa
pop
pop
pop
addr16
mov
rclb
mov
dec
and
mov
icebp
bound
push
mov
cld
jmp
ds
lcall
cmp
fimull
inc
cltd
jnp
cs
inc
rol
mov
lcall
jl
clc
sbb
and
inc
dec
jecxz
sarb
pop
repz
add
andl
fisttps
pop
push
or
sub
xlat
jns
jg
pop
mov
out
cs
mov
add
scas
fsts
mov
aad
inc
loopne
loope
cmpsl
lods
pop
pop
lds
mov
stc
pop
add
dec
cs
js
or
stc
or
lea
int3
jo
xor
dec
fcompl
out
mov
gs
sub
xor
out
mov
pop
arpl
xchg
mov
lods
push
xor
inc
pop
pop
in
adc
icebp
lods
std
sarl
movsb
sub
fwait
sbb
stc
mov
lret
lods
mov
fcoml
xchg
sub
out
mov
adc
pop
gs
rcrb
daa
scas
adc
mov
lcall
or
mov
inc
mov
out
and
or
jp
aaa
mov
pop
das
stos
pop
push
jp
jle
jecxz
ret
sbb
pop
dec
jp
int
add
pop
stos
cmp
test
ret
or
push
mov
mov
mov
sub
mov
test
fstpt
mov
ljmp
outsb
cmp
loop
es
enter
mov
mov
push
bound
cwtl
sbb
cmc
dec
add
and
js
and
adc
scas
insb
repz
jb
mov
test
je
ds
push
imul
dec
cwtl
xchg
out
push
push
xchg
enter
mov
pop
sbb
sbb
or
inc
outsb
cwtl
in
mov
mov
adc
cmp
leave
push
xchg
cld
and
jge
jae
loopne
bound
leave
push
xchg
sbb
mov
fistpll
jno
lret
xorb
push
mov
aam
jnp
mov
ja
cmp
or
scas
sbb
xchg
scas
popl
ljmp
add
arpl
gs
pop
xor
xor
jg
mov
fwait
dec
xor
jo
repz
lods
das
into
push
mov
xchg
mov
lcall
addr16
outsb
jl
cmp
sti
pop
sub
cmpsb
mov
inc
in
and
popl
sbb
mov
testl
pop
mov
xchg
popf
cmp
shll
les
mov
jg
out
xlat
call
scas
or
jmp
or
and
movsb
xor
jno
pop
mov
repz
leave
sub
pusha
jb
out
aam
push
dec
test
mov
mov
fstpt
in
push
addr16
mov
int3
push
addr16
arpl
in
out
jg
loopnew
xchg
sti
jne
push
mov
xchg
mov
xor
outsb
lds
negl
std
ficompl
pop
push
loopne
vhaddps
cmp
dec
sbb
xchg
sub
jl
lret
jge
inc
xlat
cmp
lods
sub
jns
push
and
inc
push
mov
adc
inc
push
clc
in
dec
and
dec
sbb
mov
add
inc
imul
dec
mov
jle
sbb
cmp
cmp
inc
push
lock
cwtl
ficoml
ss
push
jg
cmc
mov
pop
push
jne
xchg
pop
inc
sub
xchg
mov
xor
nop
decb
ret
adcl
dec
and
popa
lods
mov
movsb
mov
lock
cld
sarb
test
mov
imul
movsb
dec
cmc
xor
add
add
movaps
inc
pop
aad
cli
pusha
sub
pop
shrb
lock
scas
push
das
and
mov
xchg
mov
fcomip
sbb
or
outsb
jge
adc
mov
shrb
repz
inc
scas
push
cmp
shrl
inc
sti
push
pop
xchg
inc
dec
sbb
xor
repnz
mov
xlat
out
in
sbb
popf
mov
rcll
addr16
repnz
sbb
inc
popf
fwait
jp
sahf
cmp
mov
lea
fmuls
lret
mov
sti
out
add
mov
in
out
add
fs
cmpl
fdivrp
dec
aaa
sbb
lods
adc
mov
xorl
out
ljmp
iret
mov
xor
das
into
push
in
jae
lods
out
xor
sub
cli
xchg
inc
mov
sub
mov
jp
ss
jl
out
mov
lret
hlt
addr16
add
lods
push
mov
lds
or
fmul
or
ret
arpl
push
out
cmpl
popa
cld
dec
test
in
sub
adc
and
fidivrl
mov
pop
sbb
sbb
sti
or
push
daa
jmp
in
xor
xchg
cli
mov
lahf
adc
jp
daa
rcrb
aad
cmp
jmp
scas
adc
popf
pop
stos
cmp
mov
adc
push
xor
pusha
ret
pop
dec
mov
pushf
jnp
mov
jo
cmp
mov
loopne
and
pop
imul
mov
jmp
and
out
in
fmul
xchg
dec
inc
sahf
popa
xlat
push
scas
or
mov
mov
dec
xor
jmp
rclb
inc
int
add
out
push
pushf
pop
lods
sbb
fsts
int3
adcl
inc
sbb
fidivl
nop
push
xlat
xchg
ror
jo
jns
loopne
in
clc
popa
xor
jnp
xchg
stc
ja
shlb
rclb
outsb
inc
push
inc
cmp
repnz
mov
xchg
fnstsw
jl
and
clc
add
push
adc
stos
in
fcmovnb
out
inc
test
mov
xor
inc
fisubs
mov
mov
in
cwtl
dec
xchg
jno
fidivrl
adc
jle
lcall
hlt
daa
add
inc
xchg
movsb
push
hlt
fcmovb
rolb
adc
dec
aaa
hlt
or
repz
incl
leave
push
mov
sbb
cmp
add
xor
push
rolb
sbb
pop
fldl
mov
cmp
int3
push
out
mov
mov
int
jle
xchg
and
lcall
fsubrl
xor
mov
sbb
xor
pop
jg
in
sbb
loop
hlt
adc
inc
xorl
je
inc
fildl
aas
mov
mov
dec
dec
and
and
imul
cwtl
mov
adc
xchg
subl
jg
hlt
clc
jb
shrb
cld
adc
cmc
xchg
rcrb
outsl
pop
sbb
or
movsb
shlb
or
push
xchg
scas
pop
jne
fimuls
and
jle
dec
sub
pop
out
lret
inc
add
pop
sti
push
pop
pop
cmp
xchg
pop
push
or
je
jmp
int
loope
and
sub
inc
in
mov
das
jge
sub
int3
xor
cmpsl
and
and
jno
push
jg
mov
dec
daa
push
enter
stc
and
sub
push
or
cmp
fnsave
xlat
sbb
and
add
sbb
movsb
adc
mov
in
pop
jmp
jb
rcll
cmp
xor
rcll
lret
push
fiadds
xor
int3
cmp
sar
sti
pop
and
xchg
in
push
icebp
pop
test
and
cwtl
sub
mov
pusha
andl
pop
mov
xchg
push
int
cmp
xchg
das
and
cmpsl
std
bound
mov
enter
cwtl
push
stos
cmpb
in
xchg
sbb
sub
sbb
sub
ret
mov
mov
sbbl
cmp
adc
jmp
sub
test
lahf
and
es
cmp
pop
pop
call
xchg
inc
cmp
mov
dec
hlt
cs
lock
dec
sub
cwtl
push
mov
or
inc
inc
xchg
xor
adc
inc
adc
arpl
in
call
xor
adc
sbb
rcr
and
or
inc
push
mov
cmpsb
inc
and
inc
iret
cmpsl
inc
or
mov
stos
xchg
cld
and
test
jmp
xlat
adc
int3
inc
adc
arpl
out
daa
loope
pop
cwtl
push
sub
mov
pop
inc
repnz
mov
dec
int3
push
hlt
mov
adc
inc
vpaddb
xchg
xor
test
push
pop
rcll
mov
pop
mov
inc
inc
adc
jp
ja
mov
mov
xchg
inc
cmp
jo
aas
jne
adc
fs
mov
fildll
mov
stos
mov
popf
int3
in
cmp
fstps
xor
insl
sub
mov
loope
and
outsb
imul
sbb
mov
mov
jmp
add
lock
and
shl
adc
sub
iret
cmc
enter
mov
insl
mov
add
lock
jle
divl
jmp
cli
and
pop
xchg
pusha
cmp
sti
xchg
jnp
popf
adc
dec
dec
out
loopne
fdivrp
dec
push
push
mov
mov
push
inc
or
sub
or
push
andl
push
adc
pop
insl
jo
jo
sub
sbb
nop
cmp
mov
inc
js
sub
stc
and
aas
sbb
sbb
push
cmp
fld
sub
into
xchg
enter
fcmove
lret
loope
hlt
shlb
pop
divl
sbb
cmp
add
cmp
lahf
cwtl
mov
std
pushf
insl
mov
push
lret
inc
dec
inc
jns
push
std
cmpsl
imul
mov
loopne
jg
loop
cmp
fs
int3
sub
jle
adc
lea
push
jle
test
pop
test
push
lods
aas
test
insl
cmp
push
sbb
lcall
and
jo
fnstcw
inc
setne
lea
roll
mov
lcall
add
lret
pop
subl
adc
in
rcll
mov
repz
or
in
push
outsl
xor
add
or
add
loopne
lret
mov
pop
sbb
ss
cld
sub
push
mov
or
je
pushl
dec
xchg
dec
inc
xchg
jg
add
cmp
mov
lds
and
mov
gs
bound
lret
sbbb
cmp
mov
les
scas
mov
pushf
lcall
arpl
push
or
mov
and
xor
adc
adc
push
dec
mov
loopne
mov
loope
test
jae
sahf
out
jne
push
in
pop
outsb
adc
cmc
insb
clc
fdivrl
push
leave
adc
jge
fnsave
iret
stos
test
rcl
xchg
hlt
xor
insb
add
add
ret
enter
cmp
push
sti
inc
lcall
add
mov
test
and
xor
and
jne
xchg
filds
scas
cwtl
mov
testl
pushf
outsl
jae
arpl
pop
das
jb
dec
and
es
sbb
idivb
sub
mov
out
dec
lea
cmp
mov
jl
xchg
cli
mov
cmpsb
or
out
cmp
and
jns
xor
jmp
adc
xchg
xor
and
mov
fildl
push
mov
sahf
rcl
sub
pop
pop
push
divb
sbb
xor
es
xor
jae
mov
and
addl
stc
dec
xor
xor
addb
test
cmp
cmp
jne
xor
mov
jle
dec
push
xor
stos
xor
loope
or
adc
xchg
xor
cmp
out
aas
outsl
mov
or
inc
js
mov
setne
out
adc
jno
stos
xor
push
pop
icebp
lods
movsb
das
dec
or
and
push
fmulp
out
mov
lds
jne
xchg
mov
ja
mov
inc
dec
imul
inc
xchg
addr16
das
xor
jnp
inc
dec
mov
roll
mov
movsb
pop
fildl
mov
dec
dec
stos
inc
test
xchg
jns
lcall
jle,pn
es
sub
or
std
push
dec
movsl
jb
loope
cmp
adc
daa
clc
pop
sub
xor
lock
movsl
sbbb
adc
mov
fcomi
adc
dec
out
pop
cmpsl
jg
pop
cs
add
in
int
pushf
add
scas
mov
xchg
sub
nop
cmp
popa
and
inc
and
movb
xor
mov
aam
mov
pop
dec
ss
popa
fdivr
call
inc
mov
push
fldcw
ja
movsb
in
xchg
pop
out
jnp
cmp
ret
xor
lds
movsb
addr16
dec
enter
stos
mov
fimull
or
xor
mov
push
sti
sbb
scas
cmc
dec
xchg
idivl
mov
aaa
mov
push
push
loopne
jno
lock
fsubrp
mov
cmpsl
lods
or
jmp
or
or
test
loope
popa
push
pop
pop
mov
xor
lods
push
outsb
pop
jo
cmp
imulb
loop
push
and
mov
aas
jb
mov
dec
sbb
cmpsb
mov
in
icebp
xor
iret
mov
jge
fcoms
mov
pop
lods
ljmp
adc
fwait
je
jmp
fs
fadds
mov
jne
xchg
imul
dec
stos
jp
jle
out
das
arpl
mov
and
orl
dec
mov
outsb
mov
filds
mov
add
scas
push
xchg
pop
nop
xor
mov
jns
xor
enter
outsb
lret
insl
mov
mov
adc
in
push
shrl
insb
fstps
jae
pop
jnp
dec
das
pop
dec
nop
call
mov
xor
bound
inc
dec
clc
inc
stos
sbb
mov
aam
inc
jmp
scas
dec
mov
dec
mov
repz
inc
add
cmp
cltd
ja
adc
ret
inc
les
iret
enter
xchg
popf
shlb
mov
mov
xor
inc
inc
or
pop
xor
sub
adc
inc
sbb
loop
cmpb
popa
mov
cmpsl
mov
insb
rorl
pop
xchg
xchg
inc
je
xor
pusha
in
sub
push
jb
adc
rcrb
inc
pop
dec
cmp
mov
jbe
mov
pop
xchg
movsl
mov
call
sub
ror
clc
cmp
and
mov
mov
mov
cmpl
sti
xchg
jae
xchg
sub
cmp
ds
aas
mov
mov
sbb
sbb
cmp
push
loop
addb
jge
xchg
mov
jl
push
mov
ficoms
fcompl
inc
mov
mov
adc
pop
mov
mov
sahf
in
jmp
cs
pop
cmpsb
outsb
das
mov
lret
dec
and
mov
pop
mov
pop
insb
lds
fisttps
sub
add
and
or
and
fucomp
push
stos
push
jbe
mov
adc
lret
or
xor
jns
mov
jecxz
and
jp
push
add
js
sbb
call
fisubs
cmp
into
stos
and
movsb
cmc
and
push
insb
lret
jbe
mov
cs
mov
mov
jle
out
dec
loopne
ljmp
jmp
add
mov
les
add
cmpsl
dec
imul
or
push
pop
lods
sub
cmpl
and
int3
icebp
das
dec
mov
push
iret
sahf
pop
sar
das
and
std
cmovs
mov
mov
jle
aaa
cld
adc
or
pop
in
push
pop
scas
jno
shlb
inc
dec
mov
movsb
mov
in
and
pop
addb
inc
add
mov
mov
and
inc
outsb
jae
repnz
fiaddl
jnp
mov
cmp
xchg
xor
sbb
je
and
hlt
adc
xchg
fistpl
cmp
fwait
arpl
push
testb
and
mov
sbb
sahf
xchg
pusha
loopne
sbb
movsb
cmp
jg
inc
lea
pop
outsb
lock
in
ss
push
in
hlt
sahf
cli
scas
sub
cmp
hlt
push
int3
ja
lock
mov
mov
aam
cmp
adc
gs
rcrb
fldt
mov
mov
aaa
es
push
xor
insl
divl
lahf
adc
test
adc
xchg
repz
mov
mov
push
mov
daa
jmp
add
jnp
lock
rcrl
mov
fs
orl
sub
lret
jg
xchg
scas
push
test
in
nopl
in
idivb
je
or
cwtl
dec
sbb
xor
mov
cmpsl
or
mov
andb
imul
movsb
sub
out
shl
jns
imul
incl
sub
sub
xchg
clc
ret
mov
lods
sbb
sahf
add
cmp
push
xlat
ret
xor
mov
mov
ror
sahf
add
aas
cmp
jmpw
and
dec
dec
out
es
test
mov
cmp
addps
cmp
sub
shrl
xchg
cld
repnz
out
ret
lods
add
ret
inc
jmp
repnz
mov
mov
xchg
enter
jge
lds
lcall
xchg
sub
xor
fsubr
xor
loope
clc
test
test
into
lahf
int3
xchg
and
fistpll
mov
shrl
cmp
mov
mov
jae
mov
xor
sub
das
inc
rorl
dec
scas
cmp
popf
mov
jb
bswap
lea
jo
sbb
mov
inc
push
mov
movsb
ss
shll
dec
dec
add
jo
jb
jbe
ljmp
inc
inc
cmpsl
mov
push
adc
imul
push
add
lods
std
loop
movsb
jne
inc
movsl
xchg
mov
add
mov
or
data16
sub
lret
out
or
mov
fcomi
pop
out
cmp
in
int
sub
insb
pop
nop
lock
and
add
or
notl
push
in
repz
popf
test
ljmp
push
lock
push
add
out
in
mov
pop
lods
add
mov
lods
xchg
pop
pushf
sub
lcall
std
cmc
xchg
subb
pop
aam
fldt
sub
cmp
pop
or
xor
or
mov
adc
out
mov
lret
push
cmp
add
mov
arpl
add
into
fwait
sub
in
jns
jp
jp
fcoml
inc
in
daa
xchg
cmc
pop
lock
sbb
push
data16
cmp
negl
inc
lret
jo
lock
or
imul
fdivrl
out
inc
add
cmc
neg
outsb
pushf
add
cmp
movsl
fs
add
data16
shrl
ret
jg
adc
jecxz
mov
mov
or
int3
jnp
imulb
xor
or
mov
fmul
inc
frstor
fcomip
dec
dec
in
mov
mov
mov
mov
shlb
xor
insb
sti
pusha
js
mov
sbb
cwtl
jmp
je
insl
mov
shll
test
popf
mov
rcrb
sbb
cld
add
rorl
push
xor
cmp
mov
mov
pop
cltd
insb
push
subl
rcll
mov
aad
rclb
xor
mov
and
mov
add
inc
or
xchg
mov
inc
bound
fidivs
or
dec
jmp
out
aam
aam
sub
bound
cmc
adc
mov
int3
sbb
icebp
xchg
fdivrs
shlb
push
pop
dec
xor
sahf
sbb
fs
xchg
and
hlt
pop
lods
cmp
cs
rcl
imul
cmpsl
and
sub
and
ss
jae
lds
pop
adc
xchg
mov
jmp
cmpsb
dec
mov
push
addb
insb
lds
aas
aaa
dec
shll
push
std
sbb
test
imul
mov
mov
out
inc
nop
addl
movsb
adc
dec
mov
sahf
push
jbe
fs
xchg
sbb
das
fld
xor
mov
jno
sub
mulb
push
adc
push
inc
popf
add
adc
dec
and
pop
fstl
xor
mov
adc
mov
sub
mov
scas
fsubrs
out
xorl
push
cs
mov
push
or
stos
notb
mov
inc
es
push
mov
sub
aam
pop
mov
cs
jb
sahf
xchg
test
and
je
pop
out
aam
roll
stc
dec
jb
pop
xchg
mov
dec
cmp
push
mov
add
outsb
jmp
sub
xchg
scas
stos
sbbl
call
ss
dec
js
shrl
sbbb
insb
je
jg
lahf
mov
scas
or
popa
inc
pop
or
push
mov
sub
fucomip
dec
pop
pushf
jb
scas
popa
stc
movsb
loop
addl
adc
and
mov
pop
inc
js
jb
jp
pop
pop
and
fcomp
out
loopne
mov
call
faddl
out
pusha
push
xor
adc
pop
stos
in
xchg
gs
push
cmc
push
sub
xchg
in
adc
ret
mov
or
mov
inc
jb
mov
xchg
ret
inc
andb
jmp
mov
les
ljmp
dec
gs
ss
aaa
xor
push
repnz
push
cmp
scas
insb
and
add
pop
jle
jne
jnp
xchg
mov
xchg
or
mov
fsubrl
insl
test
inc
sbb
pop
jp
scas
adc
adc
xor
push
sub
jbe
outsb
mov
enter
mov
xchg
and
and
sbb
jle
jmp
ds
xor
pusha
aas
pop
jp
push
fcmovb
cmp
cmc
push
adc
repz
in
cld
xor
jno
add
cmp
cmp
jo
xor
mov
mov
mov
xchg
iret
dec
mov
std
fildll
mov
stc
arpl
mov
jge
adc
and
in
ret
das
adc
std
ret
mov
mov
sbb
adc
xor
mov
inc
inc
out
xor
outsl
sbb
inc
ret
adc
pop
jbe
push
inc
orb
xor
lods
lea
xchg
adc
and
adc
xchg
xchg
int3
pop
insl
in
inc
dec
mov
jne
fiaddl
fs
into
les
into
je
cld
in
enter
push
jnp
xchg
sub
cmp
add
scas
or
dec
jp
sub
mov
cmp
pop
cmp
imull
sub
add
jl
jns
add
rolb
imul
push
lahf
sbb
push
dec
or
jb
stos
push
pop
dec
push
mov
mov
jo
lea
dec
mov
sub
push
aam
sbb
imul
roll
dec
push
lods
repz
add
mov
pop
scas
loopne
pop
divl
negl
pop
int
lock
leave
outsb
add
push
nop
subl
int
pop
fmul
lds
popf
arpl
out
lcall
jns
shr
and
fwait
or
outsl
pop
in
xchg
nop
das
pop
stc
dec
lret
outsl
dec
jmp
pop
push
sarl
cmp
mov
lds
popf
pushf
push
sbb
pop
add
pop
int3
jns
ds
cwtl
pop
lods
loopne
push
xchg
mov
sbb
fistpll
jmp
es
in
daa
je
ja
js
mov
dec
pop
sub
rorl
fs
loope
push
les
inc
pop
rcl
mov
xor
cmp
cli
push
mov
mov
lret
sub
imul
leave
push
jge
lret
jns
mov
das
fisubl
inc
sbbl
pop
les
jge
cmpsl
cmp
loope
push
and
adc
int
arpl
cmp
push
cmpsb
inc
dec
sbb
inc
aaa
push
mov
out
push
xchg
icebp
cmc
int
es
popa
jae
aad
fs
sub
daa
icebp
pop
xor
sbb
jg
dec
int
fisubl
mov
popf
mov
enter
add
je
push
cmp
ss
xor
mov
hlt
fs
lret
pop
and
stc
xor
xchg
add
xor
pop
xor
and
pop
xor
lods
lcall
or
sbb
and
mov
insl
xchg
jp
add
enter
and
shrb
mov
adc
test
idivl
std
out
icebp
xchg
push
xchg
cmp
jecxz
sub
outsl
dec
das
ljmp
test
or
dec
loopw
in
xchg
adc
icebp
hlt
pop
lods
add
cmp
or
sub
loopne
sbb
xor
cmp
es
stos
cmp
ja,pt
ss
std
loope
fldcw
jg
xlat
dec
push
test
addr16
shrb
daa
xor
mov
xchg
daa
stos
lret
ds
popf
push
lods
jbe
pop
test
mov
push
sbb
add
psubsw
mov
ftst
movsl
movsb
inc
sarb
mov
loopne
adc
cmpsb
shll
xchg
and
jno
sub
add
xlat
loopne
imul
icebp
cmpsl
in
mov
lret
inc
scas
jnp
fdivrs
stos
rorb
push
dec
test
cmp
cmp
cmp
dec
inc
fadds
and
lods
push
adcl
into
call
sub
ss
adc
xor
icebp
setae
negb
adc
outsl
lods
xor
jb
mov
int3
jge
into
and
pop
push
jns
or
inc
pop
in
jp
sbb
mov
xchg
jecxz
xchg
add
mov
dec
cli
rorb
jmp
rcrl
test
mov
out
lock
fcoml
movsl
pop
adc
or
jmp
adc
lahf
dec
pop
jp
addr16
pusha
in
adc
lock
in
int
int
cmp
and
xor
std
shrb
jge
pop
lock
test
fsubs
dec
add
idiv
lds
loope
insl
shll
mov
pusha
xor
aam
xor
push
in
jb
xchg
and
jnp
add
mov
addr16
cmp
pop
dec
repz
in
add
cs
scas
test
rcl
inc
adc
cmpsb
add
inc
in
sbb
mov
mov
dec
loop
aad
jae
popa
xor
aas
loopne
in
fisttpl
je
xchg
xor
lock
je
push
add
sub
add
and
inc
mov
lahf
scas
push
push
jno
fmuls
cmpsb
mov
adc
jl
fisttpl
in
movsb
pop
adc
sub
add
cmp
test
mov
jg
roll
mov
xchg
rcrb
mov
jle
test
push
out
or
shrl
bound
mov
sbb
loopne
pop
sbb
or
mov
mov
mov
rcrb
push
out
into
clc
xorb
mov
incb
subl
jg
sbb
imul
data16
adcl
mov
leave
jb
mov
in
cmp
inc
lods
aad
sbb
call
bound
insl
jg
mov
scas
add
adc
mov
jle
out
fmull
xchg
popf
ret
mov
call
jmp
addr16
jbe
in
xor
pop
iret
aas
testl
fnstcw
ja
call
sub
cmp
popf
insl
push
lcall
or
dec
inc
popf
mov
inc
push
enter
sub
cmp
jmp
mov
sbb
je
cmp
arpl
or
in
adc
in
test
test
xchg
in
and
mov
cwtl
push
xchg
outsb
dec
not
push
cmc
sbb
xor
dec
popf
push
fwait
loop
mov
inc
flds
lods
push
mov
pop
inc
dec
pop
fstl
js
lock
bnd
mov
mov
stos
mov
lds
iret
sbb
popa
pop
push
mov
and
jle
aaa
lret
inc
mov
pop
jae
mov
add
int
insb
in
and
inc
adc
cmp
inc
sbb
pop
jbe
iret
cmpsl
out
lahf
test
cmp
sbb
push
lret
sbb
outsb
cmp
lret
push
pop
popf
mov
xchg
and
adc
aaa
mov
dec
aam
cmp
mov
jno
ja
mov
dec
andb
loope
das
or
add
shrb
cmp
dec
push
pop
push
push
pop
sbb
jge
test
cmp
push
leave
loope
pop
push
fwait
or
movsb
mov
dec
inc
and
xorb
in
adc
into
mov
in
pop
pop
xchg
inc
test
dec
fimuls
pop
add
cmp
push
cwtl
mov
insb
ljmp
adc
or
mov
push
push
icebp
sub
lods
insl
inc
push
jnp
enter
insl
clc
xchg
pop
testb
es
bound
pop
cmpsb
test
test
not
jbe
frstor
cmp
pushl
cmp
repz
xchg
addr16
and
or
mov
nop
xchg
cwtl
mov
gs
cmp
xchg
repz
int3
and
fwait
cmp
sub
fidivrl
dec
sbb
pop
lock
aaa
sub
xor
xor
popa
mov
mov
push
add
jmp
insb
jmp
ret
pop
pop
cld
pop
and
xorl
mov
push
or
shl
addr16
sub
hlt
dec
xchg
scas
inc
dec
bound
adc
scas
fbld
out
call
adc
jmp
xor
add
scas
scas
xlat
cld
cmp
xchg
or
cmc
dec
or
pop
cltd
sbb
popa
shl
ret
mov
adc
stos
adc
fstpl
dec
and
movsb
sbb
ljmp
pop
inc
aad
xchg
out
data16
ds
movsl
orl
push
ljmp
mov
mov
popa
mov
inc
adc
xchg
aaa
sbb
stos
inc
mov
add
pop
lcall
jbe
xchg
into
xchg
mov
sbb
imul
popf
fcompl
sub
in
adc
enter
dec
dec
iret
cwtl
mov
mov
add
pop
inc
jle
out
fmull
add
mov
lahf
xchg
or
outsb
fs
fldt
xchg
xor
adc
popf
inc
xchg
dec
enter
xor
pop
scas
jns
adc
pop
fmuls
push
cmc
mov
stos
push
aam
ljmp
sbb
pop
jle
hlt
add
stc
ret
push
sbb
xchg
shlb
xchg
inc
cld
movsb
mov
adc
cmp
push
sub
popf
mov
dec
movsl
imul
inc
pop
pop
test
insb
out
lods
arpl
imull
xchg
xor
ret
xchg
cli
cmp
push
mov
xor
push
xchg
cmp
notl
test
cmc
sbb
jo
xor
popf
xor
cs
mov
and
aam
push
icebp
stos
dec
sbb
pop
jnp
lea
fcoms
mov
fldenv
push
fsubs
dec
insl
call
dec
andl
into
jl
add
pusha
xchg
sub
mov
stos
cmpsb
pop
adc
jae
jnp
fdivrp
pop
dec
dec
dec
fnsave
lock
jg
add
lods
lock
sbb
fimull
lret
adc
ds
stc
pusha
cmp
dec
scas
das
pushf
subb
xor
lret
jmp
sbb
test
lahf
rclb
pop
cmp
inc
fsub
scas
adc
push
movsb
test
xchg
pop
sbb
jmp
xor
mov
adcl
mov
lret
movsl
pop
outsl
mov
xchg
mov
and
jmp
daa
cmp
jle
fisttps
outsb
cli
in
lock
and
das
and
roll
xchg
imul
inc
mov
add
dec
adc
xchg
jmp
gs
cmp
adc
inc
push
xchg
lcall
stos
inc
aas
int3
mov
dec
xchg
dec
imul
push
sbb
movsl
gs
xor
aas
xchg
xchg
add
or
scas
sub
pop
lahf
inc
incl
sbb
je
mov
jecxz
push
lods
repnz
inc
push
stos
rcrb
xchg
jg
pop
inc
or
andl
or
lcall
stc
mov
jmp
push
notb
mov
mov
pushf
into
cmpsb
xchg
std
les
lds
mov
mov
flds
jno
push
into
mov
lcall
test
xor
xor
pop
fdivs
adc
pop
outsl
or
cmp
lock
fwait
dec
jg
xchg
popa
jns
inc
arpl
push
pop
mov
inc
xor
js
inc
jo
adc
data16
mov
aam
push
xor
repz
out
in
mov
jp
call
cmc
push
jns
sbb
arpl
or
adc
jae
jns
mov
enter
dec
cmp
aam
adc
repnz
pop
sbb
lea
mov
push
test
ljmp
or
jae
cmp
mov
add
cmp
fs
in
jmp
pop
popa
mov
es
ss
pop
idiv
sbb
push
icebp
push
push
out
les
xchg
sti
les
pop
jb
cmp
mov
aam
leave
iret
rclb
jle
cmp
test
jmp
mov
push
add
fldt
mov
fcmovu
sbb
pop
mov
mov
push
cmp
lcall
xor
std
push
lock
fmull
imul
in
pop
aaa
daa
sub
sbb
xchg
cld
mov
jns
jg
js
inc
adc
ret
cmpsb
push
loop
cmp
hlt
gs
sbb
pop
sub
inc
fidivrl
div
pop
or
sahf
push
push
fsubr
add
aad
xor
repz
movsl
jb
cs
scas
sbb
sbb
jae
mov
clc
inc
inc
das
pop
icebp
push
push
ret
inc
jno
fsubs
push
lods
lods
jae
or
pop
adc
mov
xchg
insb
mov
addr16
repz
test
jno
pop
mov
daa
lcall
dec
mov
push
cmp
clc
mov
push
mov
pop
pop
or
enter
inc
and
aaa
in
xchg
enter
push
adc
sbb
out
pop
mov
and
or
stc
adc
push
fidivs
sar
ror
rcrb
ds
and
daa
ds
bnd
es
xchg
jmp
jl
push
add
outsl
aad
fidivrs
sarb
mov
push
dec
jmp
mov
xchg
in
fwait
lcall
les
pushf
imul
ja
mov
pop
and
test
loop
xor
test
mov
jge
das
popa
mov
ljmp
jmp
in
fdivp
dec
iret
adc
ret
outsb
test
dec
orb
dec
dec
mov
and
icebp
sahf
loopne
mov
or
pop
js
popf
jb
inc
movsb
xchg
aam
lret
test
or
test
ljmp
lret
js
dec
sahf
adc
dec
inc
lahf
push
sbb
push
push
das
and
daa
push
mov
xchg
or
inc
fldcw
iret
fwait
outsb
repz
les
aam
push
stos
ds
mov
sti
in
or
jo
xchg
and
hlt
stc
dec
sub
push
in
push
fisubs
jmp
shll
jmp
xchg
sub
fisubrl
shll
inc
and
cmp
inc
or
jbe
call
dec
ret
insl
mov
dec
dec
es
int
fldl
js
out
inc
lods
shlb
mov
aas
and
pusha
mov
push
cmp
addr16
in
lods
jae
xor
js
fdivr
dec
out
fwait
orl
js
hlt
sub
fwait
hlt
push
xchg
jl
dec
repz
int
mov
ljmp
mov
dec
stos
xor
xchg
pusha
xor
mov
mov
dec
jo
dec
lock
int3
dec
subl
jge
inc
aaa
jecxz
fistl
pop
xor
movsl
adc
shll
sbb
pop
stos
sbb
clc
inc
jge
fstpt
xchg
cmpsl
push
dec
cmpsb
int
sti
dec
in
sub
add
inc
mov
or
outsl
or
cli
into
ja
xchg
adc
add
lea
insl
pushf
cld
pop
out
mov
stos
es
lock
imul
data16
mov
pop
insl
inc
push
mov
movsb
or
push
pop
outsb
xor
js
jbe
cmp
insl
cltd
inc
insl
jo
mov
jp
add
jle
testb
push
test
fimull
testb
je
mov
jecxz
in
pusha
lods
mov
and
inc
inc
das
push
inc
in
repnz
xchg
movsb
and
out
jecxz
sbb
cmp
sbb
adc
test
ret
sub
arpl
or
mov
ja
js
pop
jne
push
mov
add
inc
fs
test
shr
cmc
int
mov
sub
push
push
jp
dec
adc
sub
call
mov
test
jb
rcrl
jp
xchg
mov
sarl
aas
addl
jl
jnp
inc
imul
test
dec
pop
outsb
lret
hlt
scas
add
out
jo
out
jnp
dec
out
mov
push
pop
mov
fmuls
ja
add
stc
insb
inc
leave
jecxz
xor
mov
mov
push
pop
aam
ss
xor
and
test
mov
push
mov
or
fwait
xor
fwait
jb
ss
and
mov
mov
pop
add
dec
adc
pop
int
fidivs
mov
xor
add
jp
sbb
cld
push
pop
test
mov
mov
dec
les
lock
pop
lret
sub
mov
or
xchg
daa
aad
push
int3
std
and
loop
std
lret
enter
xor
mov
movsl
aam
and
mov
jp
out
es
imul
mov
push
cs
pop
xchg
push
rorb
dec
cmpsb
jbe
scas
and
mov
adc
pushf
jl
mov
pop
sbb
jae
adc
lcall
or
into
push
int3
or
dec
out
cld
cmp
insl
jnp
push
add
sbb
insl
ja
repz
jl
push
jle
icebp
jge
inc
lock
inc
out
push
or
in
leave
fwait
xor
popa
imul
add
pop
ja
mov
inc
dec
jne
jne
or
mov
je
je
dec
mov
xor
ret
aas
mov
cmp
xchg
idivb
push
mov
cmpsl
mov
mov
jo
insl
jmp
jge
popf
xchg
in
add
ljmp
mov
mov
adc
mov
add
inc
negl
insl
aam
icebp
sahf
cmpl
pop
pop
mov
movsl
mov
jne
scas
xor
xor
sub
inc
mov
js
dec
lcall
cltd
mov
addl
add
mov
jg
dec
cli
sahf
jnp
mov
push
test
pushf
xchg
nop
xchg
imul
idivb
sbb
and
add
or
mov
cltd
push
cmpsl
jle
add
lret
xor
fcoml
inc
pop
popf
les
popf
out
lahf
mov
sbb
dec
jp
lahf
mov
sar
pop
incl
cmp
leave
stc
loop
mov
jne
cwtl
lds
and
js
ret
sti
cltd
pop
decl
xlat
insb
shll
push
dec
pop
lock
inc
pop
mov
cmp
ret
jns
rcr
xchg
sbb
sub
fiaddl
fsubrs
pcmpeqb
in
pop
incl
inc
or
sti
mov
inc
inc
push
subb
orl
jge
jo
mov
rcr
fistpl
fcmove
mov
clc
cmp
into
pusha
in
mov
test
inc
mov
and
xor
xor
mov
cmpsl
pusha
or
xor
clc
sahf
xor
inc
mov
mov
mov
pop
scas
or
push
mov
mov
adc
fcomp
lahf
mov
push
stos
leave
call
mov
sub
rcll
dec
add
rolb
lahf
adc
cmpsl
movsl
jo
xchg
inc
cmp
mov
mov
int
and
or
cmp
fs
mov
rcrl
les
inc
mov
mov
and
call
or
adc
imul
jl
bound
push
imul
xlat
gs
mov
adc
add
iret
outsl
subl
xchg
in
in
jecxz
pop
push
inc
xchg
cli
jecxz
mov
ljmp
mov
ja
shll
cmc
push
xchg
xor
les
sbb
inc
out
in
mov
fcoms
lret
jns
lret
xchg
mov
int3
sub
and
push
sub
fxch
arpl
ret
xor
fs
sahf
pop
xchg
fildl
xlat
mov
dec
test
sbb
push
nop
imul
fldcw
push
out
dec
mov
mov
ljmp
int
pop
cmp
inc
popl
jp
push
push
inc
cmovp
sbb
mov
cmpsl
inc
mov
nop
xor
test
pop
cmp
pusha
notb
pop
fcmovnu
jge
cmc
add
sahf
ret
mov
outsb
dec
and
mov
sub
sbb
fs
jg
repnz
mov
data16
out
mov
push
and
les
mov
shlb
fadds
jbe
mov
mov
cmp
aaa
sarb
jg
loop
repz
fdivrl
clc
pop
xor
push
test
hlt
mov
add
and
popa
adc
adc
test
les
mov
loop
mov
addl
es
cmp
sbb
in
cmp
xor
out
addr16
cmp
fs
cmp
cwtl
nop
fisttpll
rorl
pop
mov
into
sbb
xchg
dec
push
cmpsb
push
imul
push
outsb
in
jle
pop
ret
mov
test
loope
cltd
dec
sbb
sahf
jno
icebp
cmp
das
jae
sbb
jecxz
dec
movsl
in
out
ret
cmp
rolb
mov
push
push
lods
adc
out
push
lods
cmpsl
inc
movsb
mov
sbb
out
mov
inc
mov
mov
xchg
jb
ljmp
movb
aas
icebp
out
xorb
cmp
pusha
out
inc
stos
inc
jl
lods
arpl
movsb
call
inc
dec
jle
cs
and
sbb
in
pop
icebp
jg
xchg
jnp
add
mov
pop
call
fnstenv
and
sarl
xor
loop
nop
test
iret
nop
repz
mov
sub
mov
xor
movsb
idivl
not
adc
cmp
add
ljmp
inc
enter
pop
xor
scas
popf
pop
cmpsb
xchg
out
mov
add
loope
es
jnp
and
popa
cmp
cltd
mov
sub
icebp
stos
jbe
cld
dec
aas
nop
add
sbb
jo
mov
scas
adc
mov
dec
xchg
leave
inc
call
outsb
leave
sbb
jbe
std
xchg
aaa
push
mov
add
lods
loopne
cmp
push
outsb
enter
int
js
push
xchg
lock
shll
loopne
out
dec
push
cld
pop
push
out
mov
push
test
dec
sub
cmp
jno
cmp
dec
cmpb
test
mov
nop
mov
imul
mov
movsl
cwtl
outsl
mov
negl
mov
cmp
gs
cmpsl
f2xm1
mov
add
imul
dec
jae
add
fsubs
xor
push
jg
cmc
addr16
xlat
adc
mov
imul
mov
push
test
in
jno
jg
in
sub
or
xor
dec
ret
inc
xchg
cmp
sub
adc
sub
leave
popa
imul
ss
mov
jnp
xor
movswl
or
lea
xor
lret
xor
dec
dec
ficoml
push
in
movl
jno
push
loop
jne
cmp
ret
jge
push
mov
pushf
mov
jne
add
out
push
inc
bnd
sti
mov
pop
repnz
ss
pop
lds
dec
sbb
adc
xor
sub
mov
adc
sub
add
enter
cmc
fistpll
xor
clc
fwait
push
sbb
rcrl
sbb
mov
test
aam
mov
outsb
out
ficoms
jb
or
pushf
xor
mov
shrb
repnz
filds
ret
in
imul
les
popw
or
fdivrs
shll
cli
pop
adc
mov
mov
xor
mov
and
cmp
mov
push
enter
sbb
sub
outsb
mov
jmp
popa
stos
pop
jecxz
mov
jbe
jns
sarl
mov
les
jp
sti
rorb
shrb
push
jno
call
mov
int
jb
shrl
mov
lock
dec
cvtps2pd
jmp
aaa
inc
outsb
mov
in
mov
adc
dec
hlt
pop
push
addps
repnz
out
dec
dec
stos
int3
insl
sbb
movsb
or
and
jp
cmp
push
imul
subb
inc
enter
gs
iret
adc
push
ja
ja
lcall
outsl
fists
jl
xchg
push
mov
lahf
loope
rclb
xor
int
adc
dec
cmp
divb
fs
scas
push
icebp
cwtl
leave
cmp
adc
fistps
xchg
xchg
aam
jp
sub
dec
dec
sub
outsl
mov
mov
jo
mov
or
jns
sub
xchg
sub
aad
dec
lret
cmc
fdivrl
pop
ficomps
pop
sbb
and
dec
cmc
sbb
and
cmp
mov
lods
test
inc
icebp
cld
dec
cmp
sub
leave
inc
inc
pop
jmp
clc
enter
sub
xlat
insl
jge
repnz
dec
aaa
inc
or
push
repnz
mov
int
ljmp
leave
pushf
mov
ficoml
and
or
jle
lods
sub
cmp
shlb
dec
test
cltd
adc
stc
mov
cmc
push
in
fs
xchg
ja
cmp
rcr
insb
stos
into
lea
lahf
sub
stos
loope
leave
ds
hlt
icebp
add
cmp
les
xor
cmp
call
add
sti
cld
xchg
lods
sub
xor
cmpsl
push
mov
fldt
inc
clc
pop
lcall
xchg
outsl
aaa
inc
jns
ljmp
cmp
sbb
mov
fstpl
loope
and
jp
sub
filds
jecxz
mov
push
inc
push
cmpsb
pushf
sbb
icebp
mov
xor
sar
movsb
cltd
push
push
out
xchg
push
lret
jecxz
rcrl
sbb
adc
jle
popf
jp
xchg
repz
sub
cld
popf
cmp
fildl
pop
adc
sbb
sbb
test
and
push
xchg
push
mov
les
push
push
dec
cltd
cld
xor
and
adc
leave
xor
scas
or
aaa
into
push
test
sti
mov
mov
in
insl
mov
inc
adc
fidivs
mov
pop
mov
fmuls
jae
popa
adc
dec
sti
in
ficomps
fiaddl
out
push
loopne
out
or
sbb
adcl
fadd
clc
sbb
push
addl
cld
fisubl
sub
sarl
lods
mov
nop
adc
and
adc
in
or
fnstsw
test
std
pop
xor
push
nop
rolb
sub
in
in
jbe
cmp
pop
ja
stc
imul
add
jecxz
sbb
or
testl
push
or
mov
int
mov
push
test
jbe
ror
mov
ret
fs
pushf
loope
push
lods
sbb
fmuls
loopne
es
scas
push
lret
pusha
adc
jecxz
mov
icebp
out
rorb
or
enter
lock
pop
jo
daa
scas
arpl
icebp
mov
test
std
mov
mov
int3
outsb
dec
imul
push
push
inc
inc
and
cmpsb
insb
cmp
cs
add
rorl
sub
psubusb
jb
fimull
adc
sti
mov
int3
data16
pop
notb
std
scas
call
ficomps
insl
cli
addr16
mov
popf
movb
inc
leave
jmp
cs
push
popf
sbb
xchg
ds
icebp
insb
xor
push
mov
adc
gs
cmpsb
bound
ja
jb
sbb
mov
test
pop
outsl
xor
mov
das
mov
sub
xchg
sbb
decb
sbb
mov
das
cld
sarl
into
pop
std
cwtl
popf
sub
pop
jmp
push
out
lds
add
call
jge
and
mov
xchg
jp
shl
outsl
sub
inc
popf
je
xor
sbb
iret
push
sbb
or
xchg
push
dec
iret
adc
xchg
data16
add
outsl
insb
push
in
jnp
xchg
cld
xor
xchg
in
adc
cltd
and
nop
and
pop
jo
cmpsl
push
fidivl
adc
cltd
xchg
mov
mov
jno
in
jns
mov
xor
enter
jge
xor
cltd
push
mov
mov
jb
sbb
xlat
addb
pop
inc
fimull
mov
xor
clc
orb
imul
add
arpl
ret
xor
or
adc
adc
and
jbe
das
xor
shrb
data16
imul
mov
adc
mov
bswap
mov
dec
xchg
add
flds
mov
out
pushl
adc
or
mov
cmp
or
mov
pop
pop
or
jl
js
push
leave
shl
pop
inc
stc
cld
dec
sbb
adc
imul
cmpb
inc
inc
shr
xor
xor
or
jmp
push
add
pop
cld
pop
mov
add
lcall
shll
mov
sar
add
and
js
mov
push
lock
push
frstor
push
movl
sahf
repz
outsb
std
std
sub
push
mov
gs
mov
cmp
sub
call
mov
adc
xor
jg
or
and
popa
testb
inc
mov
sub
inc
pop
mov
iret
or
inc
sub
std
pop
pop
pop
loop
mov
ja
xchg
or
add
pop
jae
jns
cmc
in
mov
sbbl
jb
push
hlt
lds
push
fbstp
addl
std
daa
mov
and
call
mov
cmovg
mov
sbb
pop
fwait
cwtl
shl
in
push
mov
rcrb
or
mov
mov
jle
cltd
jo
call
and
cmp
mov
movsb
push
jb
jne
mov
pop
and
mov
pop
mov
dec
popf
aam
push
and
stos
leave
aaa
inc
jge
lds
test
in
adc
add
adc
out
and
dec
inc
scas
mov
stos
into
pop
popf
aad
les
out
or
xchg
out
push
mov
sub
mov
mov
mov
sub
negl
mov
push
cmpsb
movsl
xorl
dec
outsb
xor
sar
imulb
es
sub
mov
jmp
dec
je
out
dec
fs
das
out
add
cmc
pop
pop
insb
inc
xchg
pusha
adcb
mov
icebp
inc
cwtl
iret
push
jge
mov
outsl
cmpb
pop
xor
sti
and
les
pop
adc
lock
xor
jne
into
mov
imul
cs
int3
fst
cmc
jb
scas
jp
cmp
js
dec
pop
sar
daa
xchg
cmc
lret
mov
sub
xchg
xchg
jp
les
lods
jnp
imul
mov
or
lods
push
fidivs
push
push
inc
fwait
cmp
mov
mov
sbb
std
dec
push
movhps
add
adc
shr
es
shrb
cmpsb
sub
xor
pop
sbb
mov
out
sub
jg
das
in
and
add
lcall
pop
leave
mov
inc
ret
jo
add
push
mov
push
fcomi
adc
pop
mov
sar
out
imul
adc
inc
mov
inc
sahf
cmpsl
icebp
cmp
cltd
inc
xchg
popa
fcoml
jmp
xor
sbbl
cmp
repnz
por
call
rcl
pop
xchg
out
out
xchg
add
xchg
push
daa
mov
sbbl
xchg
sub
or
cmp
lds
inc
in
dec
push
push
push
jecxz
cmp
inc
lcall
push
sbb
les
and
mov
dec
test
fldt
push
bound
mov
push
test
mov
inc
push
lods
add
es
rclb
std
dec
and
pop
pusha
push
out
loop
test
adc
xor
push
xchg
push
pop
or
cmpsb
lods
mov
jge
inc
inc
cmpsb
pop
pop
xchg
ja
and
std
or
pop
sub
inc
push
int
icebp
inc
into
dec
movsl
or
int3
sbb
xchg
adc
jmp
lcall
push
mov
and
and
jg
dec
adc
rol
mov
jo
out
sub
push
ficoml
jmp
in
icebp
jle
int
imul
notb
mov
xor
jo
addl
pop
mov
pop
mov
stos
sbb
pop
mov
xchg
mov
mov
jge
cmp
add
mov
sbb
push
mov
dec
inc
push
cmp
dec
dec
adc
add
pop
xor
ss
push
xor
jo
inc
mov
push
mov
imul
outsb
sub
pop
lret
sbb
mov
mov
insl
arpl
xchg
out
pop
and
jg
xor
lret
cmp
xchg
pop
scas
pop
dec
notl
das
lock
orl
lock
imul
mov
dec
mov
das
mov
negl
fldt
push
fwait
push
push
cwtl
sbb
movsb
repz
and
stos
pop
cwtl
add
dec
push
jnp
mov
jp
dec
adcl
test
lods
mov
cmp
stc
mov
and
push
aaa
and
js
rorl
repnz
pop
test
inc
add
push
fs
addr16
sahf
adc
lahf
or
xor
mov
mov
push
xor
xor
cmp
push
outsb
dec
lds
in
imul
and
xor
shlb
lods
mov
sub
xor
inc
mov
cltd
pop
lret
insl
les
in
lret
mov
mov
push
cld
inc
xchg
jmp
and
out
inc
and
mov
loope
cmp
push
loopne
scas
mov
test
jmp
sub
mov
push
dec
js
dec
mov
out
nop
aad
mov
sahf
std
rorb
das
inc
aas
adc
ljmp
push
leave
push
mov
xlat
cmp
xchg
pop
aaa
out
outsb
clc
cmpsl
imull
sahf
dec
inc
xlat
ds
push
lock
das
push
sub
jo
out
adc
mov
andl
stc
cmp
cmpsl
arpl
insb
les
mov
std
fdivrl
fildll
test
leave
pop
sbb
cmp
outsb
nopl
jmp
cmp
pop
pop
aaa
std
xchg
xlat
lock
mov
xor
ljmp
push
sbb
xor
or
mov
dec
pop
mov
les
lahf
xor
mov
mov
pushf
inc
mov
adcl
cmp
outsl
add
add
push
aad
cmc
imul
test
push
adc
imul
jmp
push
fstpl
sub
movsb
push
int
mov
addr16
inc
loop
div
xchg
push
jmp
and
pop
xlat
mov
popa
lock
outsl
and
push
gs
loopne
insb
mov
mov
ljmp
test
adc
mov
dec
lcall
mov
inc
pop
jge
cmp
and
movsl
sahf
mov
sbb
pusha
mov
fs
dec
jle
sub
out
mov
xchg
or
daa
pop
shll
jb
dec
pop
cs
adc
aam
or
les
iret
shrl
mov
movsb
add
cmc
sbb
cmp
lods
adc
cwtl
adc
test
xor
push
pop
test
xchg
cmpsl
add
ret
mov
mov
fnstsw
enter
pop
push
push
fadds
lcall
sub
out
loopne
mov
pop
imull
push
lock
jne
insl
pop
pop
and
jg
das
lahf
out
sbb
faddl
cmpsl
add
test
jl
call
jnp
mov
sbb
mov
test
push
xchg
fisubrl
or
les
dec
push
ret
pop
outsb
test
xchg
icebp
mov
xlat
add
cmp
out
call
cmp
rcrb
das
push
jecxz
mov
ret
call
mov
jmp
mov
inc
das
repz
repz
xchg
movsb
or
lret
jnp
fisttps
out
mov
test
rorb
hlt
jns
out
imulb
scas
pusha
scas
push
mov
movb
js
loopne
mov
pop
loope
mov
cmc
ss
mov
push
push
cld
jns
pop
cmc
aaa
shll
mov
test
cld
rcrl
xorb
pop
cmpb
and
in
stc
adc
mov
stos
xor
daa
nop
inc
or
cmc
loopne
jno
insb
or
bound
sub
ds
adc
aas
fs
icebp
wbinvd
push
cmp
ja
inc
push
mov
pop
daa
xlat
fcomip
repz
lods
push
daa
xchg
lcall
cmp
adc
pop
inc
cmp
jne
jnp
nop
aas
data16
xchg
mov
clc
fcompl
into
out
lock
nop
cmpsl
xchg
mov
fadds
cmp
bound
jmp
pusha
jmp
mov
in
xchg
xor
jl
jge
push
xor
add
mov
adc
jne
dec
jl
lock
mov
in
sub
inc
jb
call
adc
jnp
leave
dec
fsts
lcall
das
sbb
push
or
sub
stc
outsl
fwait
stos
mov
mov
and
loope
stos
out
mov
cmp
mov
sub
in
jns
js
mov
pop
jecxz
jno
jns
lock
jle
xchg
mov
add
pop
in
ret
dec
jge
call
ss
leave
mov
sub
jp
mov
push
mov
pushf
push
lcall
add
sbb
test
lods
mov
push
and
dec
push
dec
fstps
popf
aam
loop
inc
addr16
cmp
xor
inc
xor
lret
int
jbe
sub
sbb
movsb
mov
jnp
aaa
imul
mov
das
arpl
ljmp
das
and
xor
or
jge
and
jecxz
mov
popf
in
out
xlat
repz
jle
out
ss
nop
xorb
daa
das
fistl
dec
out
in
les
cltd
xchg
or
daa
push
add
imul
aam
mov
sbb
jne
mov
nop
push
sbb
xor
les
fcoml
sub
cli
fnsave
jb
dec
lret
xchg
sbb
movsb
jne
jnp
xor
add
addb
push
sub
das
movsb
ret
mov
pushf
or
push
pop
rorl
jge
lret
push
cmp
roll
and
sbb
ds
push
dec
pop
xor
cmp
mov
xor
dec
mov
ss
leave
inc
enter
outsb
cmpsl
lret
xchg
inc
aaa
pop
fimuls
cli
push
cmp
dec
test
dec
nop
inc
mov
pop
das
dec
test
jae
call
sub
sbb
fldcw
rcr
fwait
sti
insl
repz
lods
fwait
insb
add
adc
pop
popa
push
inc
pop
fs
les
push
sbb
mov
loopne
push
inc
mov
out
lods
jmp
imul
xor
in
inc
lahf
jmp
sub
cmp
fadds
loope
xlat
inc
jmp
mov
mov
fildll
pop
je
pop
pop
or
test
sub
or
ss
mov
je
les
push
insl
and
sbb
inc
and
hlt
xchg
dec
push
xchg
jno
jge
xchg
push
fildll
dec
dec
mov
pop
mov
xor
pop
or
cmp
sbbb
adc
jp
ds
sub
out
or
add
add
insb
jno
dec
shll
mov
fdivs
sbb
mov
fs
movsl
daa
sbb
ja
add
retw
scas
out
rclb
fisttpll
pop
in
cmpsl
xor
sub
inc
xor
pop
and
jmp
jae
pop
xchg
xchg
adc
out
lds
ja
dec
loopne
adc
ds
scas
push
xchg
mov
push
roll
sbb
divb
cmc
mov
rol
out
ror
add
std
pop
mov
mov
je
jne
arpl
mov
pop
sub
divb
in
jl
pop
lahf
mov
jb
fsubrs
xchg
es
xchg
in
dec
dec
or
cmp
mov
push
xchg
jg
jno,pn
jnp
pop
push
dec
or
inc
mov
mov
sbb
cmp
fisubs
imul
arpl
sub
and
jp
push
stos
test
ja
inc
shrb
mov
mov
inc
adc
push
jecxz
pusha
cld
sub
mov
fwait
mov
push
adc
outsb
stc
mov
iret
fstp
mov
popf
addr16
or
jns
mov
inc
ljmp
add
or
scas
mov
aad
in
mov
aam
aas
and
mov
jg
icebp
in
cmpsb
or
xchg
cltd
repnz
call
scas
pmaddwd
push
push
adc
jns
push
ljmp
mov
sbb
andb
es
push
or
push
scas
fs
aas
or
mov
or
xor
or
dec
lret
cmpsl
cmpsb
int
jmp
clc
repz
jg
ret
mov
adc
jb
into
mov
test
mov
out
popa
icebp
dec
xlat
sub
call
mov
mov
mov
sbb
xor
xor
inc
inc
outsl
orb
mov
ret
xchg
mov
popf
xchg
pushf
imul
mov
dec
lcall
mov
scas
nop
pop
test
fld
repnz
js
dec
sysexit
adc
movsl
imul
lods
xor
cmc
xlat
arpl
es
pop
out
pusha
cmpsl
or
stos
cmp
pop
loop
in
jne
adc
hlt
and
add
dec
xchg
cmpsl
xor
mov
arpl
faddl
add
mov
add
jb
add
push
pop
in
int3
into
lods
mov
les
divb
aas
mov
sub
mov
xchg
roll
dec
pop
sub
or
cmp
push
andl
scas
pusha
and
imul
sub
add
adc
mov
jnp
mov
cmc
clc
inc
cmpsb
jmp
cmpsl
into
xchg
call
or
pop
mov
cmp
mov
dec
mov
ds
lea
enter
stc
int
repnz
repnz
sub
pop
xchg
pushf
push
clc
shrl
xor
pusha
pop
icebp
sbb
or
cmovne
jmp
push
cmpsl
jns
mov
scas
fistpll
sbb
sarl
enter
add
and
pop
in
xor
mov
lahf
add
pop
jg
inc
or
lock
in
loope
sbb
cmp
int
js
int3
cmpsl
fcoms
enter
mov
into
lret
bnd
push
in
imul
sub
jae
sub
and
or
cmpl
sub
cltd
jge
lods
fsubrl
cmp
and
mov
inc
sub
popa
scas
inc
dec
in
pop
aaa
imul
popa
sbb
movsl
cld
lods
cmp
adc
cmpl
xor
imul
std
sub
into
or
pushf
lods
inc
addb
test
loop
pop
mov
mov
fadds
incb
shrb
fwait
or
pop
jnp
cwtl
xor
lds
sub
stos
lcall
push
data16
in
fldenv
repnz
call
ret
inc
cmpsl
fcoms
sbb
imul
adc
push
daa
imul
fs
jmp
pop
int
xchg
lods
inc
pop
jle
push
les
les
xchg
xchg
outsb
out
rcll
fwait
push
push
jbe
das
inc
push
mov
jp
add
or
push
cmpsl
popa
pop
sub
cmc
inc
cmp
mov
xchg
ret
aam
sbb
jmp
fisttps
adc
inc
mov
push
outsb
insl
push
push
ljmp
jo
stos
jg
jns
xor
sbb
inc
push
cmc
jecxz
aad
inc
add
jmp
stos
mov
cli
repz
loopne
pop
add
jp
test
dec
mov
stos
push
dec
jb
lea
outsb
dec
outsb
cmp
jbe
fs
mov
sub
push
loop
out
adc
and
xlat
inc
push
andb
jo
cmp
es
xchg
sti
sbb
movsb
loop
mov
xor
insl
ljmp
pop
sub
fdivl
neg
mov
rclb
jmp
mov
movsb
pop
test
add
sbb
dec
pushf
inc
sub
shl
xchg
das
or
push
jae
int
xor
dec
xor
cmpsb
sbb
push
inc
lcall
jno
es
call
jmp
movsb
in
push
and
lret
aam
push
lods
push
mov
jmp
rcl
aaa
dec
xor
cmp
adc
lock
aam
ret
xor
xor
push
fists
xchg
scas
std
sub
js
push
pand
and
sti
mov
clc
inc
or
jae
inc
das
mov
fsts
ss
mov
push
and
xchg
add
mov
pop
mov
adc
jo
test
jle
pop
insl
xchg
add
pop
or
rcl
xchg
xorb
loopne
ret
jns
mov
fs
divb
mov
bnd
scas
cmpb
jne
cmpsb
inc
and
cmp
and
mov
adc
jl
cli
imul
ljmp
xchg
push
daa
lret
test
mov
sti
xor
sbb
and
sub
dec
jmp
mov
xchg
sub
bnd
nop
xchg
outsb
pop
in
mov
push
cwtl
xchg
data16
jmp
sarl
jae
movsl
mov
out
test
fwait
pop
push
sbb
jb
mov
push
in
in
inc
fdivs
add
popa
xchg
mov
sar
cmpsb
sbb
dec
mov
mov
or
add
in
mov
not
sub
mov
icebp
push
mov
sub
scas
aaa
pop
and
cwtl
shl
push
mov
test
daa
dec
jge
push
pushf
mov
xor
scas
mov
sub
and
cvtpi2ps
mov
aaa
xor
in
stc
lea
jmp
inc
xchg
mov
cmpsb
adc
dec
cwtl
iret
cmp
push
inc
mov
fcompl
add
push
dec
mov
mov
pop
cmp
test
ret
add
push
inc
mov
mov
and
push
mov
fsubl
popa
pop
lock
adcb
loop
xchg
sahf
sbb
rorb
popa
push
dec
or
leave
push
lahf
xchg
clc
adc
adc
mov
inc
mov
sbb
jg
push
push
es
add
add
aad
inc
or
mov
sub
adc
xchg
rolb
or
out
lcall
push
mov
lods
insb
sahf
fmul
xchg
daa
sarb
push
adc
push
and
sub
xchg
xor
push
inc
cwtl
rol
push
jg
mov
cmp
sbb
push
mov
out
adc
jmp
add
xchg
cmpsb
add
scas
sub
scas
sbb
dec
pop
lods
push
or
stc
lods
iret
or
inc
inc
mulb
adc
xor
outsl
jecxz
inc
mov
pop
pop
add
das
enter
stc
or
pop
push
cltd
gs
xchg
xchg
jne
cmp
fimuls
arpl
cld
cld
subl
ljmp
ds
sbb
xorb
dec
mov
in
sub
or
pop
jmp
xchg
dec
jbe
testb
rol
es
xchg
sahf
push
push
ret
in
shll
jns
mov
iret
imul
aaa
sahf
movsl
and
xchg
push
and
ret
push
pop
faddl
pop
mov
out
imul
and
out
rorl
xor
int3
js
lahf
adc
add
xor
and
adc
stos
gs
inc
jge
mov
fdivs
add
inc
rcrl
jns,pt
sbb
pushl
push
sbbl
add
add
lods
jo
dec
and
jle
imul
dec
movsl
mov
dec
xchg
shlb
ret
aas
mov
nop
sub
mov
fldcw
popa
xchg
out
pusha
ljmp
ret
ret
adc
in
popf
fadds
cmp
mov
sbb
mov
aam
icebp
lods
dec
and
cltd
mov
add
and
inc
dec
ror
dec
fsub
push
int
lds
jbe
aad
xor
gs
orb
and
mov
fcomp
ret
test
jno
cwtl
leave
aaa
lods
or
jae
sub
clc
push
gs
pushf
add
mov
movsb
bound
fistps
inc
jmp
imul
lock
ficomps
dec
push
and
adc
rcr
fwait
mov
lods
mov
mov
sub
and
push
aaa
mov
outsb
adc
rcrb
sarb
dec
addr16
push
pop
icebp
adc
pop
jno
mov
adc
fsubrl
adc
sbb
call
addr16
sbb
leave
or
cwtl
sub
hlt
mov
js
cmc
das
inc
int3
adc
leave
iret
inc
leave
push
das
push
test
cmpl
movsb
mov
out
sub
outsb
cmp
loop
or
or
adc
inc
pop
ljmp
stc
or
dec
jmp
pop
sub
subl
pop
orb
adc
in
std
xchg
jno
xchg
enter
fbstp
jae
inc
push
stos
adc
or
sbb
pop
adc
aad
ja
cmp
pop
cmp
pop
xchg
sub
mov
ss
leave
mov
add
ljmp
out
cld
movsb
fistl
fdivrl
mov
inc
pop
jg
mov
xor
in
xor
insl
dec
mov
fidivrl
int
lods
cmp
push
or
lahf
jnp
push
hlt
sub
enter
push
ss
sbb
lret
repnz
daa
or
inc
in
outsb
aas
xchg
pushf
push
mov
mov
lahf
stos
sahf
fucomp
push
mov
out
pop
sahf
mov
loopne
loope
jp
fildll
dec
cltd
jb
add
loope
push
inc
cmp
and
iret
test
fsubrl
lds
push
nop
push
out
cltd
lahf
mov
pop
in
hlt
sti
add
add
adc
cmpb
sbb
pusha
jno
and
movsl
xchg
dec
sub
mov
xchg
adc
mov
call
or
or
test
cltd
lds
add
inc
fbld
mov
xchg
fiadds
mov
pusha
pop
dec
jecxz
mov
push
out
loop
inc
fsubrs
cmp
repz
adc
inc
push
mov
arpl
je
lcall
jae
sbb
xor
jnp
lea
mov
aaa
xchg
stos
andb
pop
mulb
rcll
outsb
in
lcall
movsb
push
xor
xchg
pop
push
loopne
push
xchg
fstps
mov
shll
jae
mov
cmp
cmp
imul
mov
push
pop
cs
insl
out
or
pop
sbbl
or
aad
in
add
jg
jbe
int
mov
sub
lahf
movsb
adc
push
pusha
int
push
clc
sbb
shll
pop
and
shll
fdivr
sub
mov
and
xchg
sub
incl
aam
ds
push
or
adc
mov
jae
push
push
dec
mov
in
sub
sar
xchg
push
inc
sub
out
ffreep
popa
xchg
dec
insb
inc
lret
mull
jmp
or
negb
cmpsb
aas
clc
test
scas
add
fwait
xor
xchg
rcr
pop
pop
pop
outsl
bound
mov
jp
xor
push
sti
push
mov
dec
repnz
cli
mull
sbb
mov
mov
xchg
in
repz
sti
lock
and
sti
decb
sti
fisttpl
das
xor
xchg
or
incl
or
in
pop
mov
int
shrb
test
fnsave
push
mov
xor
test
jle
out
fbld
adcl
xor
addr16
jp
sbb
jg
cmp
jp
or
fstl
adcb
fldcw
stc
mov
nop
xor
xor
or
xor
or
sbb
and
cmp
repz
dec
xchg
xor
lds
movsl
xchg
ret
adc
sub
mov
xchg
in
mov
push
xchg
scas
push
test
out
inc
out
in
outsl
xchg
leave
jne
in
mov
push
js
and
ja
sub
sub
enter
push
xchg
lods
imul
push
pushf
andl
dec
movsl
sub
push
xchg
fcmovnu
in
notb
xchg
pop
add
sub
dec
sub
or
mov
loopne
fisttps
pop
in
insb
scas
lods
push
in
test
sub
xor
mov
sub
inc
mov
xor
add
inc
or
fstps
roll
subl
andl
addr16
push
or
popf
xchg
and
pop
orl
pop
xchg
fcoml
add
clc
frstors
xchg
aad
popf
lods
aas
push
add
dec
idivb
rol
pop
mov
out
dec
jns
test
popf
inc
fwait
rcll
sbb
js
or
test
inc
inc
xchg
adc
stos
pop
xchg
nop
cwtl
ds
mov
cmc
lahf
dec
out
fdivs
add
ret
les
or
roll
inc
imul
in
aad
sahf
shlb
mov
inc
fsubp
mov
or
sar
inc
out
mov
out
ret
lds
mov
lahf
addr16
sti
mov
mov
or
loopne
jg
push
test
or
xor
pop
mov
inc
and
push
cli
mov
xchg
push
je
jmp
imul
aas
push
or
inc
imul
dec
in
jge
std
es
nop
and
divb
xchg
inc
sub
or
jg
push
mov
mov
mov
adc
icebp
not
int3
or
int
adc
imul
add
sahf
inc
and
hlt
or
sub
mov
incb
movsb
adc
sub
jp
pusha
mov
push
ds
lods
shlb
repz
sub
push
insb
xchg
sub
sub
decb
push
xchg
mov
in
dec
push
inc
ret
into
lret
loopne
add
ret
outsl
pushf
sbb
or
leave
xchg
cmp
loopne
lods
lcall
test
fcompl
int3
fcomps
scas
xchg
or
cmp
fwait
mov
sbb
pop
das
pop
mov
push
and
inc
sub
mov
ja
das
mov
dec
dec
adc
inc
jo
pop
mov
leave
adc
call
push
pop
mov
mov
clc
into
fcmovnu
mov
cmpsl
scas
xchg
ret
lea
fisubrs
fcmovnbe
jnp
adc
lret
mov
pushf
push
adc
mov
mov
dec
stos
inc
push
sub
push
and
dec
in
inc
cmp
je
cmpps
add
xchg
add
xchg
pop
lds
fsubrp
dec
dec
or
int3
ret
imul
or
add
aam
stos
scas
mov
fwait
test
aas
fldt
dec
mov
lea
fcomps
xchg
pop
sub
in
jbe
mov
jnp
rcrb
fsubrl
cmp
aas
faddl
or
rol
lret
push
filds
dec
mov
mov
and
ficoml
out
or
rorb
jmp
pop
lea
sub
push
mov
xor
xchg
sub
mov
std
add
inc
jl
cmp
push
cwtl
repz
nop
iret
imul
test
xchg
sti
pop
loopne
cltd
fcos
push
push
stos
adc
divl
inc
cli
xor
and
push
lahf
sub
rclb
jo
aas
outsb
sbb
loopne
cs
xor
rcrl
sti
dec
mov
je
cli
xchg
jno
icebp
jno
mov
loope
push
rcrl
int
cld
ss
inc
iret
xchg
mull
push
cmp
and
pop
leave
dec
or
out
cmp
mov
pop
mov
in
nop
and
test
daa
cmp
dec
es
adc
or
loop
pop
or
aam
movsb
cmp
dec
ljmp
das
test
and
mov
sbb
stc
mov
arpl
cmpsl
sbb
xor
jg
xor
clc
fwait
rcr
cmp
mov
mov
push
jge
scas
mov
sub
dec
mov
sbb
add
and
dec
pop
cld
icebp
int3
or
adc
inc
outsb
lret
sbb
sub
dec
lds
lock
repnz
jb
addl
cmp
dec
mov
add
adc
es
add
jmp
cmp
push
adc
inc
pushf
scas
jl
cmp
jge
lds
stos
adc
or
sbb
sbb
das
gs
inc
hlt
leave
mov
lods
call
sbb
xchg
push
test
dec
das
pop
mov
sub
push
push
xchg
mov
sub
out
outsl
inc
push
sub
sbb
fidivs
imul
cmp
jne
dec
sub
xor
test
xorl
outsl
sbb
dec
push
dec
out
lret
pop
mov
cmc
lcall
lock
xchg
je
pop
aaa
add
inc
adc
add
sbb
test
adc
xor
cmc
mov
xor
jne
cld
lret
leave
pushf
insb
adc
rcll
push
pop
nop
scas
push
subb
jbe
push
jp
and
dec
cmp
icebp
sbb
cmp
sub
sbb
popa
cmpsb
jne
gs
or
lahf
mov
les
fiaddl
inc
mov
xor
xchg
fildl
xchg
ja
sbb
in
push
push
jp
cmp
dec
mov
popa
fmuls
jmp
jno
repnz
lock
xor
push
std
push
or
imul
add
jl
mov
lds
pop
mov
push
push
test
adc
adc
adc
inc
imul
rcrb
xchg
cmp
fisubrl
add
push
leave
cli
divl
int
mov
mov
dec
sbb
jns
pop
maskmovq
mull
int3
mov
mov
flds
sar
jne
inc
sahf
fsts
fidivs
push
mov
outsb
out
and
push
cmpsl
pop
cmp
out
les
push
adc
mov
push
push
xchg
pop
iret
cmp
cmp
inc
lahf
negb
mov
ret
push
sbb
and
push
movsb
insl
jg
mov
pusha
repz
sbb
out
sahf
xchg
push
out
icebp
fiaddl
lcall
popf
insb
jle
lods
out
dec
aam
jns
cmp
or
shll
mov
xlat
push
cs
cltd
hlt
push
or
mov
mov
add
lea
je
loop
jo
push
out
jns
pop
outsb
mov
popf
lds
test
jbe
inc
push
int3
sbb
fwait
bound
sub
adc
cmpl
cmp
in
xchg
xor
jnp
mov
sbb
push
out
dec
orl
inc
lods
sbb
roll
lods
test
dec
jo
mov
lods
aas
int
lret
sarb
js
adc
fdivrs
addb
cmpsl
cmp
insl
xor
pop
stc
lods
or
stos
mov
lret
nop
cli
imul
inc
sahf
jnp
loope
js
in
aad
xchg
mov
and
arpl
sub
adc
notl
inc
imul
push
iret
jno
sbb
inc
rcll
lods
push
jbe
cltd
mov
and
ret
jmp
add
sahf
dec
iret
fidivrl
mov
adc
test
xor
scas
test
cmp
pop
stc
and
sbb
mov
sbb
loopne
mov
lock
mov
mov
cltd
dec
jge
scas
inc
dec
push
shrl
sahf
jnp
cs
xor
fistl
out
in
mov
jge
sbb
les
adc
jg
roll
add
ret
stos
cmp
std
lea
out
sub
popa
sahf
bound
cs
scas
pop
or
mov
cwtl
outsl
dec
sbb
clc
dec
jp
sahf
inc
add
pop
test
fmuls
cmpsb
mov
ficoms
addr16
popf
sbb
mov
dec
mov
xchg
add
xadd
cwtl
and
addr16
ds
mov
inc
xchg
insb
les
sahf
or
jbe
pop
cli
mov
or
cmp
dec
or
jno
add
dec
push
imul
cmpsl
lods
fs
adc
int
mov
aaa
repnz
push
pop
stos
out
sub
jg
sbb
out
add
sub
sbb
dec
sub
fdivrl
mov
cmp
movsl
das
push
addb
xchg
mov
ds
dec
sub
fs
inc
xor
addr16
lret
mov
mov
sbb
repz
movsl
pop
push
sub
iret
mul
test
js
xor
xchg
jae
lods
adc
shll
and
loope
rorb
and
mov
xchg
out
test
cs
adc
jno
pop
sub
push
inc
ret
pop
fistps
cmpsb
mov
sbb
sub
loope
repz
jnp
push
sar
or
cmc
scas
cmpsl
inc
test
xchg
mov
iret
imul
xor
pop
fcoms
push
cltd
sahf
mov
nop
ja
subb
mov
in
lea
push
iret
negl
nop
ljmp
daa
cld
jne
out
js
adc
mov
xchg
test
pop
rcrb
pop
jnp
adc
into
js
cld
mov
sarb
out
cmpb
loop
leave
xor
add
call
je
lret
cmpb
ret
jae
les
jae
sbb
pop
neg
pop
lahf
aad
cmpb
cmp
je
scas
and
xor
mov
adc
and
mov
sahf
adc
call
divb
jb
mov
and
leave
insl
mov
add
cmp
cmp
sbb
mov
mov
push
lods
pusha
jecxz
fdiv
not
push
dec
add
test
stc
mov
clc
dec
loopne
ret
lea
jae
jbe
xor
bound
insb
push
cmp
addl
daa
mov
mov
jle
sub
push
fstps
adc
pushf
ljmp
push
outsb
xlat
push
dec
outsb
dec
dec
lods
stos
cs
imul
cmp
shll
xchg
js
pushf
pop
sti
sub
test
and
popf
lock
mov
bound
int
andb
xor
mov
dec
or
sbb
xchg
loopne
lret
aaa
movb
mov
add
inc
mov
mov
out
dec
dec
push
cli
movsb
outsb
sbb
and
cli
and
push
insb
outsb
inc
sahf
add
sbb
push
mov
popa
subl
jne
xor
mov
rclb
pop
fldl
in
insl
xor
mov
fwait
ja
nop
cltd
outsb
fisttps
and
test
mov
test
fs
enter
insl
ret
repz
jb
push
enter
outsb
mov
sbb
sbb
addr16
or
xchg
xlat
out
sub
xlat
xor
mov
mov
mov
pushf
and
xchg
fcompl
dec
and
jne
add
ret
mov
jge
add
pop
sub
mov
rclb
aam
sub
testl
bound
jmp
pop
and
jae
bound
sub
add
loope
dec
out
arpl
jae
lcall
inc
sbb
cmpsl
inc
lods
cli
repz
sbb
call
fdivrs
push
lock
sbb
mov
sub
daa
aaa
xor
push
mov
mov
adcl
sub
mov
inc
cmp
fsubrl
fadd
stos
dec
pop
add
sbb
addl
fcmovne
pop
push
sub
mov
mov
pop
sub
dec
jns
jae
sub
cmp
cmp
gs
jno
ss
push
cmp
mov
pop
mov
or
mov
jnp
sub
mov
std
mov
ficomps
inc
fadds
sbb
jo
test
les
or
inc
into
daa
cmpsl
divl
incl
lods
sbb
sahf
pop
pusha
lcall
mov
pop
hlt
mov
add
or
jno
pushf
sub
pop
inc
jnp
push
push
dec
sub
addr16
fimull
bound
xchg
mov
jle
sbbl
inc
sbb
pusha
cmp
dec
mov
iret
jge
loop
mov
je
fmull
inc
inc
lock
jp
adc
sub
jne
aas
sbbb
enter
pop
movsl
movsl
jecxz
jbe
jns
cld
pop
pop
lret
into
ss
sub
icebp
arpl
int
jb
cld
subl
pop
sarb
scas
push
or
inc
aaa
lds
sarl
push
xchg
lret
out
adc
mov
xchg
jl
jecxz
data16
jecxz
orl
sbb
adc
add
data16
mov
mov
jmp
adc
jmp
jns
insl
mov
and
loopne
xchg
lret
insb
daa
out
js
jno
jnp
inc
mov
jnp
into
add
orps
cwtl
and
outsl
cs
sbb
lret
movsb
mov
dec
pop
push
xor
xor
or
fildll
mov
inc
aam
shrl
test
push
cmp
test
push
mov
cmp
inc
fwait
js
lds
mov
fstpt
leave
ljmp
rcll
sbb
sbb
sub
aad
adc
pushf
dec
xchg
cmpsb
inc
daa
jl
pop
adc
jnp
js
fdiv
outsl
mov
sub
lret
clc
in
ficoml
xchg
sbb
popf
and
mov
push
xchg
sti
or
fsts
mov
imul
ds
sahf
mov
popf
out
inc
dec
mov
mov
sbb
clc
sub
test
add
mov
out
je
cmpl
pop
bound
push
mov
mov
jge
loope
outsb
and
xchg
clc
jno
mov
mov
ja
imul
movsb
sub
push
xor
add
sbb
sarb
push
dec
cmp
imul
or
lret
les
push
pushf
int
cmp
jns
lock
in
mov
shrb
jno
fiadds
dec
daa
outsb
jecxz
std
mov
dec
ficoms
cmp
push
lods
popf
and
jmp
or
mov
imul
cli
jb
outsl
or
inc
out
jo
xorb
push
xor
stos
mov
sub
jp
add
push
shll
scas
add
and
xchg
cld
sub
ja
mov
ror
add
fwait
push
jge
pop
enterw
cmp
mov
inc
inc
inc
and
pop
adc
sub
rep
pop
adc
mov
test
mov
cwtl
dec
jb
fcos
pop
ljmp
mov
pop
out
xor
ds
popf
addr16
mov
outsl
jl
cmp
movsw
repz
in
inc
inc
pop
mov
jl
cmp
mov
nop
lods
dec
cltd
mov
push
pushl
push
je
scas
aam
push
pusha
or
fidivrs
testb
or
fwait
xor
mov
push
pop
xor
push
stos
loopne
and
idivl
sahf
adc
push
fs
sub
mov
in
dec
pop
mov
pusha
insl
nop
stos
mov
pop
imul
adc
mov
test
jmp
inc
sub
popa
push
push
sbb
jge
and
lcall
cmp
sarb
idivb
push
jns,pn
pop
or
xor
lods
and
adc
out
cmp
clc
subl
xchg
aas
jno
jecxz
ljmp
subl
negb
pop
imul
aaa
xor
pop
imul
push
gs
les
pushl
mov
fisubs
mov
dec
and
inc
pop
jl
pop
pop
xlat
js
push
mov
hlt
pop
pusha
mov
outsb
sub
mov
in
push
nop
cld
cmp
jo
dec
movsl
test
leave
inc
sub
cmpsb
mov
cmc
popa
adc
outsb
stos
mov
push
pop
daa
dec
lret
xor
mov
pop
out
xlat
pop
dec
dec
cmpsl
lahf
std
fdivrs
or
xor
mov
jl
pop
inc
out
popf
jmp
inc
cld
sub
pop
gs
cmp
sub
jns
pop
cltd
sbbb
mov
mov
dec
subb
cltd
inc
push
xor
scas
fists
dec
aaa
xchg
cmpsb
push
repz
icebp
or
adcl
inc
pop
lret
mov
lods
aaa
test
pop
cmovs
sub
imul
nop
lock
stos
out
hlt
enter
xor
addb
adcb
pop
dec
mov
inc
xchg
out
jmp
jecxz
sbb
popf
imul
icebp
xchg
dec
jge
pop
pop
pop
jmp
jo
lret
sub
pop
shlb
add
stc
sub
sarl
sahf
mov
or
ret
fimuls
imul
loope
in
sub
int
lret
ljmp
das
popa
push
adc
inc
aaa
adc
adc
stos
cwtl
sub
lods
ret
jb
jo
stos
add
pusha
ficomps
mov
or
push
lret
jo
arpl
xchg
jae
dec
push
mov
mov
lret
sahf
inc
push
mov
popf
xchg
xchg
add
push
dec
fiadds
arpl
in
mov
cmc
cs
sbb
aas
cmp
divb
cwtl
insb
data16
loope
arpl
pop
popa
add
cli
test
mov
lcall
mov
aad
shl
mov
and
lcall
dec
inc
sbb
fsubrl
imul
lock
mov
bound
push
movsb
xorb
push
mov
outsb
lds
pop
lret
inc
outsb
insb
cmp
fisubrs
sbbb
adc
jns
imulb
pminub
aas
sub
popf
xor
psrad
aad
inc
xor
cmp
out
dec
jno
pop
cmp
mov
lock
mov
and
jge
push
mov
pop
mov
and
inc
push
jne
pop
rcrb
repz
cli
xchg
sbb
cmp
mov
mov
pop
fbstp
mov
enter
dec
push
pop
push
cmp
xor
mov
pop
pusha
insl
into
das
sbb
pop
push
pushl
insb
fimull
icebp
stc
clc
sbb
adc
or
jmp
jb
adc
cs
ror
push
scas
xchg
xor
in
cmp
push
fidivl
in
aam
jb
lock
mov
clc
mov
mov
dec
sti
jp
mov
cmc
jne
or
pop
mov
add
loopne
in
pop
adc
add
iret
aas
je
out
pop
fildl
sub
sbb
mov
out
out
mov
leave
cmp
cmp
pop
subb
rorw
dec
pop
mov
xchg
scas
mov
sbb
push
test
or
mov
jb
xchg
fptan
cmpsb
add
insb
ficomps
arpl
mov
iret
lods
xchg
push
push
dec
ljmp
mov
xor
ret
test
mov
add
ljmp
or
mov
jnp
fiadds
jl
mov
xchg
ret
emms
jnp
jb
sbb
and
popa
xlat
into
mov
sti
jg
in
bnd
and
addr16
pop
in
adc
insl
ja
fucomp
xor
jmp
dec
arpl
inc
sti
inc
lret
hlt
mov
cmp
pop
mov
sbb
data16
add
js
mov
popa
inc
xchg
push
in
pinsrw
cli
lret
adc
outsl
mov
pop
dec
lret
std
popf
mov
nop
pusha
dec
repnz
add
scas
test
aad
sbb
jo
cmc
nop
jmp
add
inc
inc
push
shll
out
rep
bnd
lret
iret
cmc
jge
push
fdiv
loop
inc
stc
sbb
outsb
pop
fisttpll
dec
jecxz
mov
in
adc
adc
fstps
inc
ds
fsubrs
adc
cmp
pop
mov
hlt
jge
mov
fdivrl
aaa
push
data16
mov
inc
cmc
push
xchg
push
dec
xlat
pop
data16
movsb
jmp
pop
sahf
in
stc
jne
xchg
enter
fiaddl
sub
jge
add
push
jnp
ret
fs
lods
pop
push
push
push
add
sub
mov
sbb
sbb
lods
shll
std
shlb
push
mov
or
and
aas
dec
lods
insb
ret
idiv
ror
adc
scas
xor
push
adc
fcoml
push
lea
sub
subl
pop
lods
inc
jecxz
ss
shlb
inc
pop
in
mov
mov
push
gs
dec
test
dec
loop
shl
mov
push
leave
pop
hlt
jno
adc
xor
xor
mov
dec
mov
mov
add
fwait
sbb
add
fnstsw
mov
les
in
mov
cmp
out
iret
push
jle
lea
or
leave
and
rcr
xchg
mov
decb
inc
jbe
xchg
mov
mov
data16
or
nop
jno
xchg
inc
add
fs
dec
mov
mov
sbb
and
xor
outsl
jmp
mov
mov
xchg
les
xchg
or
jae
mov
loopne
test
iret
cmp
adc
je
pop
movsl
dec
xchg
test
mov
or
sub
adc
aam
xlat
mov
sbb
out
mov
xor
xchg
pop
adc
sub
xlat
jb
xor
imull
fidivrs
xor
pop
sub
outsb
push
popl
adc
leave
loop
xchg
push
xchg
pusha
or
jge
and
and
or
xlat
or
bound
imul
scas
adc
xor
pop
test
sbb
mov
shrl
mov
push
leave
xchg
test
imul
push
cmpsl
std
xchg
mov
dec
sbb
in
push
fstps
fcmovu
inc
or
jnp
mov
enter
jo
in
mov
xchg
addr16
in
push
in
mov
test
jno
ficoms
dec
jnp
sbb
adc
xchg
leave
hlt
jg
adc
sbb
orl
jbe
cmp
je
ja
mov
lods
cmp
cmc
scas
outsb
lahf
sub
fistpll
and
jbe
adc
jae
fwait
jbe
inc
repz
dec
mov
pop
push
int
adc
fimuls
pop
jae
movsb
jg
mov
call
pop
push
loop
and
jno
iret
in
push
mov
das
scas
scas
push
mov
test
aaa
cmp
es
xchg
lock
push
xor
jne
sub
or
and
dec
add
rcrl
add
sbb
fcoms
push
test
loopne
and
pushf
xchg
mov
and
mov
mov
aam
imul
out
adc
rorb
fiadds
xchg
push
fidivrs
clc
or
lcall
adc
xchg
ss
out
push
jno
loopne
xchg
jp
jo
add
mov
xbegin
loope
mov
jle
mov
cwtl
mov
insb
and
mov
sahf
call
into
xchg
pop
imul
mov
xor
mov
imul
clc
push
sbb
push
and
jne
inc
mov
jne
test
rcl
pushf
pushf
sub
mov
jl
stos
jnp
ss
pop
push
mulb
movsb
cltd
aam
cld
lahf
rolb
mov
jns
xchg
push
or
cmp
push
or
sbbl
sub
fisubrs
mov
xchg
sbbb
inc
dec
lahf
jmp
bound
imul
pushf
pop
hlt
fwait
jns
and
push
in
movsb
movsb
nop
ja
fwait
rorl
add
popf
xor
fnstenv
cmp
aas
push
push
lods
ret
inc
jg
jmp
pushf
insl
pop
dec
jecxz
xor
mov
jg
jge
jb
sahf
or
aam
call
mov
push
push
stc
rcll
pop
adc
sarb
xlat
mov
int
cmp
jns
fs
mov
sbb
inc
out
loopne
fstps
xor
sbbb
mov
cmc
and
test
aam
sbb
ljmp
xorb
jmp
mov
xchg
in
lret
nop
xor
jne
dec
aaa
sbb
xor
push
cmpb
xor
sub
sbb
push
rcll
xchg
mov
out
loope
add
add
insl
in
fwait
dec
aad
je
jge
ljmp
jl
iret
xchg
fsubp
arpl
in
test
int
xor
popa
test
rorl
fwait
xor
aas
pop
dec
fwait
jb
mov
sub
lahf
les
std
cmp
fcmovnu
out
pop
dec
xor
adc
sbb
xor
or
loope
cwtl
cmc
jge
lret
sub
adc
mov
ss
inc
es
jmp
test
dec
sbbb
out
arpl
dec
je
pop
jb
ret
cmpl
in
imul
es
fucomp
pop
mov
shll
sbb
inc
adc
sbb
cmp
shll
push
sbbb
arpl
inc
mov
push
mov
iret
mov
jmp
xchg
adc
stos
stos
mov
mov
aas
mov
movsl
repnz
pop
push
and
int3
mov
dec
mov
push
test
je
xor
and
cmc
xlat
mov
daa
lcall
es
mov
cli
ljmp
stmxcsr
cmp
and
ret
adcl
in
js
pop
enter
shll
cmp
stc
pop
xchg
fstps
dec
repnz
jecxz
andl
xor
push
sahf
dec
sbb
add
in
push
mov
dec
dec
dec
adc
aam
cwtl
jge
loopne
cmp
imul
jecxz
cmp
xchg
mov
aas
push
mov
cmpsb
or
popf
inc
in
aam
les
mov
mov
jne
xchg
mov
sahf
jmp
xchg
enter
fisttps
lcall
stos
add
clc
jb
movsl
dec
das
pop
jae
cwtl
push
mov
sarl
ret
jge
cmp
and
cli
push
inc
push
and
inc
imul
push
hlt
ds
pop
inc
and
cwtl
test
clc
jge
mov
inc
mov
pop
cmc
test
dec
sbb
dec
cmp
dec
inc
mov
add
jae
decl
gs
xchg
mov
sbb
mov
mov
add
je
in
xchg
or
xor
ja
mov
mov
enter
jge
movsb
movsl
inc
test
imul
or
mov
pcmpeqw
and
cmp
enter
cmp
das
inc
jl
dec
into
push
fbld
shll
aam
cmc
out
push
xor
add
cmc
sbb
hlt
pop
inc
xchg
ljmp
cmp
popf
movsb
push
sbb
inc
xchg
jnp
aam
cli
outsb
imul
jno
push
mov
pop
in
pop
pop
mov
mov
ds
out
cmp
adc
push
packuswb
sbb
sub
js
daa
rolb
mov
cmc
loopne
dec
sub
lds
daa
jb
mov
jnp
dec
add
mov
in
aad
dec
sub
adc
repnz
scas
jb
mov
push
jns
daa
xchg
fchs
leave
cwtl
or
std
inc
imul
xchg
lds
mov
test
sub
mov
jecxz
addr16
mov
add
ret
xchg
shll
inc
test
jo
movsl
sbb
lret
aam
jne
xchg
cmp
xchg
pop
mov
mov
scas
mov
mov
js
notb
adc
negl
sub
cmp
arpl
insl
lock
loop
jl
sub
pop
mov
out
push
sbb
out
in
or
rclb
sbb
out
pop
adc
scas
adc
dec
cs
ja
mov
xchg
cmpsb
sbb
scas
cmpsb
mov
xchg
rorl
pop
test
movsb
out
cmp
xlat
pop
stos
push
pop
add
cmpsl
adc
and
xor
xor
das
pop
xchg
js
movsl
jno
decb
adc
mov
clc
fsubl
mov
outsl
insl
dec
icebp
call
les
or
push
xor
push
dec
stos
inc
sub
insb
jmp
pop
push
insl
jp
out
fdiv
xchg
mov
sub
leave
mov
sub
call
add
cmp
shlb
mov
jno
pop
lahf
xor
inc
sub
fisubs
popf
pop
mov
fbld
rol
mov
lret
jno
sub
dec
test
pop
insl
xchg
test
pop
inc
in
push
popf
sbb
mov
and
mov
or
xchg
mov
leave
lods
sbb
mov
adc
push
popf
dec
xchg
std
cs
divb
pop
ds
inc
xor
and
into
jmp
repnz
arpl
fiaddl
iret
and
loop
addr16
in
clc
cmp
mov
fsubl
adc
push
daa
push
lret
lret
sbb
fstl
loope
out
dec
mov
adc
in
adc
jne
es
xor
xchg
mov
mov
pop
loopne
shll
mov
fnstenv
xor
sub
add
popa
or
mov
adc
mov
xchg
nop
push
lea
iret
push
iret
add
lock
cli
mov
cmpsl
stos
adc
push
aas
pop
and
dec
dec
stos
imul
dec
imul
gs
scas
test
cltd
repnz
das
lret
gs
out
pop
mov
pop
lahf
adcl
dec
arpl
xchg
jo
and
icebp
into
mov
ficompl
rorl
lods
xchg
hlt
dec
aam
in
adc
mov
fs
call
jp
das
in
iret
aaa
jno
inc
sbb
or
xchg
mov
call
or
imulb
dec
pop
sbb
popa
adc
xchg
scas
xor
mov
xchg
jae
or
push
callw
out
jle
mov
add
jo
nop
mov
or
inc
and
loop
aam
nop
push
ret
sbb
scas
xor
sarb
push
inc
cmp
rol
aam
pop
mov
insl
adc
imul
xchg
push
xor
sbb
imul
jecxz
es
jnp
jns
sub
stos
in
nop
popf
mov
idivl
mov
jle
jge
sub
mov
push
jbe
and
cmp
dec
dec
cld
push
jne
loope
pop
movsl
xor
scas
jmp
ret
mov
shll
add
mov
call
xchg
sbb
stos
xchg
xchg
sbb
push
mov
ja
and
ss
inc
sti
push
in
jno
idivb
lahf
outsb
rcll
or
fucomp
mov
jge
mov
pop
jne
jecxz
jmp
xchg
in
or
jecxz
arpl
lret
push
pop
sbb
push
xor
mov
cmp
xor
mov
stc
leave
int
dec
cltd
lea
sub
aam
div
mov
xor
sbb
out
dec
sub
test
cli
pop
mov
and
dec
out
dec
mov
xor
imul
and
das
lods
loop
loopne
jbe
fwait
xor
xchg
cltd
fstpt
iret
imul
push
aas
jmp
stc
scas
pop
xor
sub
xor
mov
shlb
jne
and
sti
xchg
cmp
out
in
out
mov
cltd
pop
add
lods
mov
mov
movsl
out
gs
xor
and
test
aas
push
cmp
rorb
aas
mov
ficompl
pop
sbb
gs
mov
and
inc
cltd
loopne
mov
sub
scas
inc
das
adc
pop
in
jnp
hlt
movsb
push
bound
push
adc
shll
out
dec
popf
sbb
stc
inc
dec
jne
pusha
fs
das
cmp
lcall
and
and
rclb
xchg
pop
loope
mov
or
das
addr16
sbb
orl
popa
icebp
mov
ds
mov
add
aas
js
ds
lahf
insb
subl
ss
mov
int3
inc
sbb
jnp
fisubrl
mov
and
mov
outsl
ret
cs
test
in
icebp
cmp
enter
adc
into
adc
in
xchg
adc
hlt
sbb
fwait
scas
push
dec
test
out
mov
fisttpll
jecxz
mov
stc
jb
in
jle
sub
pop
fwait
inc
xchg
push
fbld
outsl
mov
pop
add
pushf
push
pop
test
jge
fisubrs
mov
xchg
aaa
and
gs
fstps
adc
jg
outsb
jle
dec
aas
arpl
loope
mov
rcrb
cmp
pop
mov
fcmovbe
pop
nop
xor
xchg
mov
lret
inc
push
mov
add
mov
pop
shlb
sbb
cld
xor
pop
sbb
out
test
add
sbb
cmpb
arpl
and
gs
xor
shll
out
xchg
jp
sub
jb
repz
push
jecxz
in
rep
xchg
stc
ficomps
sbb
scas
into
or
and
sub
stos
jo
bnd
cwtl
dec
out
dec
test
test
ds
les
rcrb
cli
mov
jmp
and
pop
xchg
cmp
cli
mov
movsb
sbbb
inc
inc
arpl
jno
mov
jg
jg
mov
mov
push
mov
mov
inc
scas
add
bound
mov
inc
xchg
xchg
mov
popf
movl
sbb
inc
inc
push
ficoms
clc
mov
fistpl
inc
inc
add
insb
out
hlt
xchg
out
sti
add
sub
fistps
clc
jle
das
mov
daa
mov
and
pop
sbbb
jns
ljmp
dec
pop
inc
jnp
sti
or
aaa
insl
addr16
adc
cltd
dec
imul
pop
xorl
jl
movsb
sub
jne
inc
pushf
mov
inc
cmpsb
pop
out
stos
scas
jg
add
ja
addr16
leave
mov
cmp
test
inc
hlt
mov
sti
stc
mov
scas
fwait
iret
sub
sbb
adc
push
in
clc
push
call
mov
xchg
xchg
fwait
jg
sub
or
add
repnz
adc
sbb
inc
imul
test
or
xor
aad
and
inc
mov
std
outsl
jle
sub
test
cmpsl
pop
test
insl
push
aaa
add
inc
icebp
aas
outsb
pop
loopne
lret
or
loop
push
inc
loope
stos
pop
and
cs
push
push
mov
adc
xchg
cld
sahf
mov
mov
mov
sub
xor
push
inc
dec
leave
enter
jns
sbb
into
adc
pusha
je
jg
pop
or
push
mov
xor
roll
lea
push
xsha1
cmpsb
or
clc
dec
mov
jae
xchg
sbb
enter
xchg
ret
std
mov
inc
pushf
push
outsl
mov
popa
scas
in
xor
cmp
stos
push
mov
pop
rcrb
pop
cmp
sti
int
mov
adc
mov
mov
mov
movsb
pop
and
inc
sti
push
jne
jnp
inc
mov
leave
movsl
xlat
mov
lods
xor
add
rol
adc
jmp
sbb
call
jge
mov
and
loopne
repnz
xor
imul
xchg
and
push
loope
and
ret
jnp
fldln2
sahf
add
pop
sub
mov
orl
fs
jo
out
jecxz
xor
je
popa
movntq
sub
dec
loope
scas
xchg
pop
push
fs
testb
out
mov
lock
rcrl
dec
add
mov
push
sub
std
ljmp
ss
cmp
test
movsl
dec
fwait
push
pop
xor
pop
jmp
mov
jp
push
into
jecxz
mov
cmp
out
dec
scas
jne
mov
dec
lcall
cli
imul
push
in
xchg
pop
fstpt
out
add
xlat
out
cmp
and
insl
add
addr16
call
popa
jo
jl
push
xchg
mul
sahf
xchg
cmc
jl
mov
mov
clc
lcall
xchg
cmpsb
mov
mov
pop
jb
ds
cmpsl
pushf
flds
sbb
sub
fsubrs
cmp
push
dec
push
push
xchg
sub
jns
mov
push
add
negl
dec
test
cltd
das
sub
nop
jge
lcall
xor
insl
and
sub
and
das
ja
test
testb
xor
pop
sbb
adc
test
test
insb
xchg
dec
sbb
inc
jg
les
popa
rep
repnz
xchg
addr16
mov
out
cmp
push
push
xchg
push
popa
jp
repnz
cmp
cmpsl
ja
mov
rcrl
inc
cs
je
push
cld
rcll
inc
cmpb
cmp
cwtl
shrl
les
cmp
xchg
jns
outsl
pop
imul
mov
jo
movl
lret
test
cmp
dec
repnz
mov
xchg
inc
jg
xlat
xlat
lret
xchg
out
adc
and
aam
sub
dec
adc
pop
inc
fwait
and
jmp
ja
add
loopne
bound
imul
pop
fsub
lret
push
jecxz
mov
lret
sub
ss
mov
cmp
add
sbb
jge
xchg
adc
push
outsl
lods
pop
xchg
mov
into
jecxz
sbbl
pop
sub
ror
out
nop
or
cmpsb
xchg
sti
xchg
add
mov
cmpsl
hlt
mov
mov
and
mov
xchg
addl
adc
dec
js
lock
xchg
cld
sbb
aad
sti
into
movups
test
bound
xor
aad
inc
xor
inc
jmp
jp
sub
mov
lods
adc
cmpsb
jne
jae
lds
arpl
jge
dec
adc
dec
popl
push
inc
stc
mov
repnz
push
mov
xchg
aad
push
out
inc
jmp
or
and
in
movsl
pop
mov
inc
mov
jp
mov
xchg
push
js
std
cmp
xchg
add
xchg
sub
lea
jge
xchg
or
pop
inc
rclb
dec
cmp
inc
xchg
pushf
push
push
mov
fdivrl
adc
loop
lea
es
cli
adc
stos
stc
xor
cmp
jb
enter
xchg
xor
jne
push
xor
jecxz
sub
lret
xor
arpl
xchg
pslld
imul
mov
mov
fiadds
and
or
daa
push
dec
lods
xchg
pop
push
jp
lock
notb
aam
outsl
mov
loop
dec
shll
nop
incb
xchg
add
jae
pushf
mov
jo
fistl
pop
sub
xchg
pop
rcl
pusha
sbb
sarb
lret
aaa
xchg
sbb
outsb
xchg
jo
mov
fnsave
gs
or
xchg
sbb
ret
fistps
ret
ret
mov
js
cltd
or
in
and
jg
and
int
mov
lea
mov
mov
cmpsb
jge
lock
mov
push
sub
pop
mov
cld
inc
lcall
leave
test
iret
lahf
jle
enter
lock
arpl
sub
jmp
sbb
test
cwtl
roll
mov
mull
adc
xchg
mov
mov
mov
or
add
pusha
jmp
xchg
nop
sbb
xor
mov
fisubs
jmp
xchg
repz
push
testl
out
and
aam
push
mov
mov
xchg
mov
mov
rorl
popf
insb
pop
xchg
adc
std
push
jl
sbb
push
lods
xor
push
ds
cmp
jbe
nop
enter
jmp
ljmp
andl
int
xchg
fstpt
xchg
movsl
arpl
das
jns
sbb
mov
add
insl
les
mov
je
and
inc
lret
dec
iret
inc
mov
cld
popa
inc
sub
jge
fwait
shrb
sbb
lods
sbb
insb
jo
jae
sahf
jl
xor
pop
imul
outsl
stc
jae
jbe
pop
mov
mov
lock
call
push
int3
jg
jb
inc
movsb
std
repnz
mov
gs
loope
aas
sti
fisubrs
mov
negb
movsb
aaa
jmp
test
stos
sub
test
out
lock
leave
ret
or
cmp
xor
bound
mov
jmp
ss
xor
dec
pusha
xor
lret
inc
adc
jne
lahf
shll
dec
aaa
adc
int3
ret
push
clc
mov
cmpsl
icebp
popf
lds
repz
lock
xchg
les
cwtl
cmc
subb
mov
dec
cld
js
mov
dec
repnz
loope
lret
es
imul
pop
out
mov
ja
inc
jb
ret
cmc
pop
movsb
adc
lahf
or
mov
xchg
nop
bnd
pushf
sbb
hlt
or
pop
and
jmp
loope
xchg
std
call
cmp
dec
sub
push
push
andl
pusha
sahf
jmp
jns
add
pusha
and
xchg
es
sub
mov
sub
faddl
leave
in
push
lds
stc
pop
out
sbb
lcall
lds
fimull
jge
push
xchg
push
add
or
pop
mov
imul
fidivl
sub
aam
sub
add
mov
dec
pushf
sbb
mov
mov
push
jae
sub
push
imul
es
xchg
sbb
into
scas
scas
hlt
ret
add
pop
cmpsb
mov
shll
cwtl
inc
jle
pop
enter
incb
xchg
test
push
shlb
pop
push
aad
scas
enter
mov
out
lret
daa
dec
sbb
ja
stc
lock
mov
in
mov
or
aas
fmuls
sbb
sti
dec
push
test
out
les
mov
cmc
pop
ljmp
adcb
stos
aad
addr16
inc
add
mov
arpl
cltd
les
testb
sbb
pop
or
xor
add
out
sbb
bound
jmp
push
push
fstpt
repnz
nop
cli
icebp
pop
insb
sub
insl
adc
adc
ljmp
or
cmp
ret
push
and
add
push
je
cmp
dec
mov
add
sti
dec
push
mov
jns
adc
sub
movsb
ss
pop
jecxz
mov
faddl
or
xchg
in
insl
adc
dec
jl
adc
cmpsb
lcall
cmc
notb
push
lods
fsub
mov
rep
sub
inc
push
icebp
mov
es
pushf
mov
inc
loop
test
loop
inc
leave
mov
pop
xor
jno
hlt
mov
or
cs
sub
mov
test
in
test
cmpsb
mov
jle
mov
clc
jns
xor
mov
mov
aas
movsl
jno
stc
xchg
outsb
or
push
outsb
lods
inc
mov
push
lods
test
mov
sbb
loope
stos
pop
jmp
cmp
xor
sub
and
pop
gs
cmp
imul
xchg
pop
adc
jbe
jns
bound
mov
mov
sub
xor
add
add
dec
cmp
data16
addr16
pop
aad
xchg
int3
popf
hlt
sbb
inc
stos
or
mov
mov
mov
and
mov
shlb
and
xlat
sbb
mov
mov
xor
or
push
mov
ret
rclb
xchg
es
int3
and
inc
sahf
hlt
data16
imul
mov
popa
mov
mov
mov
bound
fnsave
mov
xchg
cmpl
mov
lods
imul
mov
addr16
lcall
lods
fmul
xlat
dec
inc
xor
loope
mov
rcr
push
jb
xlat
lret
or
pop
cmp
add
jl
or
mov
adc
push
and
cmp
inc
jmp
into
insb
popf
sub
aam
sbb
dec
mov
xchg
inc
sbb
clc
lock
xorl
popa
je
test
dec
jo
sahf
sbb
popf
mov
sbb
add
adc
inc
dec
std
adc
outsb
repnz
bound
fbld
xchg
push
testb
push
sahf
xchg
mov
mov
jae
dec
lahf
or
mov
lret
cld
sbbb
add
push
ds
add
dec
les
out
inc
int
inc
mov
inc
xlat
mov
sub
mov
push
xor
push
cmp
arpl
cwtl
ss
mull
dec
stc
les
lret
cmpsb
inc
aad
or
subb
mov
mov
outsl
cld
jno
pop
stc
lret
pop
popf
jno
push
dec
cmp
mov
ss
aam
mov
aad
pop
push
sub
mov
sbb
fnsave
dec
push
int3
and
mov
add
jge
roll
jle
lahf
xchg
mul
in
mov
lea
fistps
add
jae
mov
jno
cld
and
hlt
cmp
mov
pop
test
or
adc
int3
dec
out
or
fbld
sbb
imul
in
push
push
mov
pop
arpl
or
clc
imul
mov
sub
mov
vsubpd
jge
lods
aam
hlt
adc
cmp
testl
aas
test
cltd
ret
xor
ret
push
sarl
les
scas
mov
xor
iret
mov
loope
jecxz
das
fsubs
xchg
xor
mov
test
lret
cwtl
insb
jns
or
xchg
lock
in
leave
push
rorb
push
cmpsb
xlat
ljmp
xchg
xlat
ficoml
inc
and
xor
test
mov
jmp
pop
mov
das
repnz
mov
hlt
aaa
cli
or
in
jge
push
xlat
pop
pusha
out
push
jle
cmc
add
inc
imul
dec
fmuls
repz
cmpsb
ljmp
mov
cld
push
jno
insb
xor
aad
out
mov
bound
mov
in
and
std
xlat
shll
sub
insl
mov
add
cmp
sbb
dec
sti
mov
jbe
xchg
cmpb
call
roll
sub
push
cli
test
movaps
mov
clc
shrb
dec
outsl
nop
or
add
mov
scas
fsubrl
enter
adc
adc
sbbb
or
xor
dec
inc
fs
mov
xchg
xacquire
ffreep
addr16
aam
push
sub
repz
adc
rcr
stos
xor
add
loope
iret
xchg
jg
nop
fmull
mov
and
mov
ja
cmpsb
arpl
cld
mov
jno
ljmp
inc
pop
xlat
lcall
cmp
pop
jl
sub
push
pop
jnp
repnz
aad
mov
mov
add
or
aas
mov
ljmp
in
mov
or
sub
or
out
jmp
movsl
pop
push
out
fs
or
or
push
mov
ffree
pop
aaa
mov
adc
or
mov
mov
imul
sbb
lods
out
mov
jnp
out
inc
push
dec
mov
sub
negb
push
cmpsb
jnp
pop
pop
sub
mov
xorb
xchg
fcmovb
nop
push
repnz
cli
in
sub
clc
jle
inc
shlb
inc
rcr
leave
stos
cmp
jmp
mov
nop
js
xchg
mov
std
xlat
jno
mov
cmp
stc
pop
or
loopne
xchg
lcall
push
pop
add
fs
jg
adc
xor
pop
add
cmp
pop
sub
imul
adc
xchg
add
ficoml
loopne
shl
xchg
ss
lcall
in
cltd
jno
les
scas
cmp
shll
std
call
lret
inc
jmp
dec
push
add
xchg
int3
mov
mov
and
and
rcll
jbe
fs
xchg
mull
cmp
add
xor
and
jecxz
lahf
gs
scas
jnp
jmp
push
dec
inc
icebp
es
and
stos
inc
xchg
mov
mov
adc
jnp
adc
repz
jo
sub
outsl
and
sbb
dec
idiv
jle
inc
imul
cmp
pop
sub
std
push
add
pusha
jecxz
rcrb
mov
mov
add
aas
xor
fwait
lock
fisttps
cmp
inc
bnd
cmc
in
add
lds
xchg
inc
push
inc
mov
cltd
arpl
jg
adc
icebp
test
push
arpl
or
xchg
and
maxps
cld
in
jecxz
jo
cmp
std
jae
call
addr16
lods
mov
jae
pusha
mov
lret
mov
insb
mov
push
scas
out
lret
pop
in
push
imul
int3
addr16
mulb
ss
jp
sbb
pop
cmp
jp
lea
sti
es
and
pop
sub
sbb
aad
lods
xchg
imull
mov
push
jo
in
sub
push
sbbl
mov
mov
push
stc
je
inc
jl
jle
test
push
inc
cld
pop
and
repz
fdivs
sub
imul
mov
cmp
xor
in
cmpsb
test
inc
aas
aas
cld
out
or
sub
rol
enter
add
sub
rcrl
sbb
call
stos
test
shr
push
mov
pop
jge
int
xchg
out
daa
jne
int
movsb
in
cmp
dec
xchg
and
mov
or
aaa
lret
lret
or
lret
das
imull
inc
inc
add
and
jle
outsb
inc
cmpsl
push
int
inc
ss
addr16
enter
mov
fistl
outsl
cmpsl
xchg
scas
push
mov
aad
cli
movsl
inc
push
sti
cmp
dec
pop
xchg
daa
bound
mov
outsl
pop
add
jp
jp
lahf
test
imul
popa
mov
xlat
mov
jge
mov
sbb
imul
xor
bound
ljmp
repz
jg
mov
popf
inc
xor
int3
int3
or
or
push
xchg
push
arpl
or
add
push
test
mov
cmc
jecxz
addl
movsb
mov
movsl
and
leave
jnp
and
or
ror
mov
stos
mov
or
mov
push
fsubp
mov
xlat
leave
mov
movsl
xor
sub
sbb
cmp
sub
jl,pn
jbe
cmpsl
call
test
jl
inc
sbb
repz
dec
mov
les
scas
mov
imull
ds
lret
fidivrl
sub
lds
mov
stos
sbb
and
push
push
xchg
outsb
adcl
mov
push
arpl
or
pop
jmp
orl
inc
sti
lock
cmp
aaa
shll
les
rorl
or
scas
cltd
mov
aam
xchg
cmp
clc
inc
adcb
clc
incl
decl
xchg
insl
orb
repz
repnz
aam
mov
jne
addr16
js
fdivs
or
adc
data16
icebp
fsts
pop
iret
jl
clc
push
or
xor
xor
mov
loope
push
push
es
scas
mov
stc
cmpsl
or
push
test
pushf
xchg
ds
rcl
adc
jno
add
stos
daa
push
stc
in
push
mov
push
dec
jae
cmc
out
pop
lret
mov
sub
jae
shlb
adc
fcoml
repnz
xchg
mov
lret
xchg
or
repnz
mov
fcmove
cmp
mov
or
push
inc
sub
lea
das
shlb
push
icebp
mov
mov
enter
daa
or
xlat
fildll
hlt
add
sbb
and
sahf
jb
xlat
push
sub
mov
xchg
fldl
mov
cmp
sub
xchg
lahf
andb
xchg
std
shll
jge
or
cli
test
shll
mov
stos
xlat
sub
jmp
push
mov
mov
mov
xor
lds
xlat
jo,pt
adc
adc
mov
jmp
mov
adc
pop
xchg
dec
xchg
lahf
pop
arpl
insb
insb
movsl
jmp
push
mov
inc
insl
xchg
test
xor
and
out
es
scas
inc
pop
pusha
cmp
mov
jecxz
mov
rcr
push
push
aaa
les
mov
aam
xchg
sbb
repz
fistpll
lret
mov
add
lea
inc
jle
jnp
cmpsb
cli
xchg
data16
test
int
pop
in
pop
movb
and
inc
das
or
sub
xchg
sbb
pusha
lahf
xor
jae
and
loope
inc
jge
mov
cmpsb
sub
scas
lret
in
icebp
mov
lea
leave
hlt
xchg
stos
mov
dec
and
ret
nop
neg
cltd
sbb
xor
roll
es
ds
in
dec
fwait
adc
mov
loop
push
aam
stos
int3
insl
dec
jg
fldt
inc
xchg
mov
jno
ja
mov
lcall
nop
out
xchg
pop
mov
jno
xchg
aaa
jle
pop
pop
xorb
inc
xor
add
lea
divl
addr16
sbb
push
int
iret
mov
clc
mov
cmp
inc
out
push
jnp
or
sub
icebp
sub
xor
call
mov
fisttpll
jl
cld
lahf
cmpsb
sbb
inc
pop
push
dec
mov
jg
orl
and
arpl
push
adc
jns
aaa
push
pop
inc
popa
mov
inc
nop
dec
rcll
xlat
fsubs
nop
sbb
xchg
add
int3
clc
push
jo
adc
pop
dec
push
jge
push
test
cld
mov
pop
mov
std
ror
aaa
pop
cmp
testb
std
fnstcw
mov
jo
cltd
lcall
dec
mov
mov
cmp
outsb
lods
add
stos
dec
ss
sub
jns
add
pop
cmp
sbb
xor
into
daa
add
cld
or
push
shlb
loope
mov
xor
cmp
vpaddb
or
sbb
inc
scas
fistpl
arpl
test
push
mov
in
push
fneni(8087
rcrb
jcxz
or
jle
sub
fwait
dec
rcr
mov
push
jmp
mov
cld
ret
outsb
jo
ja
dec
or
fistpll
sbb
scas
xchg
testb
jg
scas
sbb
jb
add
pop
lahf
cmp
mov
pop
jo
out
jns
ret
rcrl
push
and
jge
ret
push
lock
adc
xor
pushf
cmp
rcll
jecxz
in
ljmp
stos
cs
pop
pop
adc
outsb
dec
gs
divb
sti
push
xor
mov
jle
ficoml
jo
aas
leave
and
sub
dec
js
lahf
div
push
adc
loopne
xchg
addr16
repnz
in
fdivs
sub
sub
cmp
lock
scas
mov
stos
cli
cmp
lret
in
fs
sbb
call
add
and
aas
pushf
sbb
inc
cld
xchg
xchg
aam
out
mov
les
adc
lahf
in
push
push
clc
pop
jl
jae
push
sbb
sub
push
xchg
or
cmp
pusha
add
sbb
cwtl
addl
pop
lods
mov
pop
cli
loope
cmp
mov
mov
add
xor
ficompl
pop
inc
ret
cmp
xor
inc
mov
lea
dec
adc
ja
xchg
repnz
sub
cmpb
ret
dec
sub
cltd
mov
mov
push
lret
push
clc
mov
nopl
fisubl
mov
dec
jnp
int3
lret
sub
dec
std
fwait
inc
shrl
dec
sbb
rcrl
pop
xchg
gs
dec
and
jns
mov
and
icebp
jecxz
add
add
bnd
in
mov
cmp
and
aaa
jbe
adc
orb
and
mov
enter
cmp
inc
xchg
jb
or
pop
sahf
cld
enter
call
out
mov
in
nop
xchg
cmpb
mov
xchg
iret
or
int
adc
loopne,pn
adc
mov
mov
sbb
fbstp
pushf
into
dec
mov
jl
push
jne
cmpsl
enter
adc
and
sub
ret
push
dec
dec
repz
popf
movsb
or
aad
jo
cmc
int3
fcmovnbe
inc
adc
ficompl
lods
cmpsb
jl
inc
int3
out
das
leave
call
imul
adc
xor
push
or
push
movsb
enter
addr16
push
push
sub
xchg
sbb
dec
je
imul
icebp
mov
pop
aad
or
mov
sub
add
jo
add
fcmovu
cs
iret
popf
and
test
sub
aas
popa
sti
inc
pop
push
mov
stos
mov
mov
jp
xlat
mov
sbb
mov
icebp
fdivs
fs
push
cmp
jo
push
ja
shlb
lret
cmpsl
fisttps
mov
mov
inc
fdivrs
jns
daa
sarl
push
lock
insl
dec
mov
inc
mov
loop
sbb
ds
mov
add
cs
aas
dec
loop
fildll
mov
cmc
pop
pop
rcll
and
enter
pop
mov
sarl
idivb
imul
or
ljmp
imul
xor
in
fxtract
pop
push
mov
popf
arpl
iret
sub
xchg
push
xor
cmp
lret
xchg
idiv
push
out
popf
dec
push
mov
cwtl
fnstsw
sub
adc
cmp
mov
xor
push
icebp
add
mov
or
mov
arpl
sahf
andb
outsl
imul
hlt
push
pushl
dec
mov
das
enter
test
jnp
rcll
jmp
cmp
mov
push
mov
sbbb
int
mov
add
pop
cmp
jp
out
subl
or
cmp
and
scas
cltd
sarl
sub
or
push
mov
rorb
sub
add
aam
inc
adc
push
xor
mov
jecxz
sarl
nop
repz
cmp
in
inc
push
stos
clc
test
push
inc
mov
outsl
add
add
mov
xchg
push
aaa
dec
movsb
aam
ja
in
xchg
cmpsl
sbb
pop
cmc
mov
cmp
add
cli
outsl
jg
sbb
leave
or
add
sub
std
mov
push
dec
push
sar
rol
xchg
mov
je
mov
sub
imul
std
fs
mov
or
movsl
sbb
leave
adc
dec
xor
adc
inc
test
adc
scas
into
inc
pop
pop
sti
xchg
push
sub
sub
mov
ljmp
jae
adc
shl
sbb
sbb
jnp
int
push
iret
out
in
enter
cmpsl
add
adc
lods
or
and
nop
sub
xchg
pop
mov
imull
add
mov
pop
and
test
sub
cmp
mov
sub
dec
adc
cli
sbb
inc
orl
lods
push
inc
lea
cmp
inc
lods
loopne
loop
ss
or
js
inc
jns
mov
lods
rcrb
popa
out
loope
movsb
shlb
cmpsl
pop
aam
sub
sub
push
rclb
pusha
jne
in
aas
push
in
bound
jl
sbb
mov
je
sbb
sub
inc
faddl
push
jns
push
pop
pop
dec
mov
sti
cmp
in
dec
call
lods
fistl
and
jle
arpl
fistl
sbb
fucomp
in
sbb
testb
mov
ljmp
fiaddl
js
lock
pop
dec
ss
addr16
or
div
popf
dec
cmpsl
pop
cmp
jo
scas
or
out
mov
pop
mov
incb
in
iret
stos
jg
mov
jmp
adc
jnp
test
add
fildl
rorb
mov
inc
pusha
mov
test
adc
and
xor
mov
sbb
cmp
nop
mov
imul
lock
loop
xor
cmp
shlb
out
shlb
push
bound
aaa
out
sbb
push
pop
repnz
ret
in
push
cli
sbb
cmp
pusha
xor
push
rolb
into
out
pop
push
fdivrs
xor
pop
popf
mov
push
sub
popf
jmp
mov
xor
lds
adc
dec
imul
add
call
outsl
stos
lea
mov
mov
cmp
jge
or
out
mov
xchg
insl
dec
add
add
jge
dec
jmp
or
cmc
js
nop
dec
jge
cli
insb
or
pop
dec
bound
lret
hlt
fistpl
jo
inc
outsl
dec
cmp
lahf
lods
mov
cmpsl
shlb
fnstenv
popf
jg
adc
dec
adc
dec
cmpsl
xchg
pop
jp
pop
mov
jmp
fcompl
and
divl
mov
test
xor
rclb
sub
mov
out
fildl
daa
bound
or
and
dec
adc
aad
push
and
mov
ja
sub
insl
add
sub
add
orb
jg
xor
aad
sti
xchg
dec
loopne
push
cwtl
lahf
xchg
and
in
mov
xchg
dec
jno
sub
fs
ljmp
fcompl
aaa
call
ret
out
sub
jl
ret
xlat
rorl
lods
inc
or
ja
cltd
jle
orl
pop
loop
enter
sbb
jp
ds
mov
xchg
and
pop
jo
cmp
lret
push
ljmp
mov
notl
and
je
xchg
lods
out
insl
sub
cltd
sbb
test
cmp
lea
das
cmp
sbb
cs
and
push
mov
mov
loope
repnz
lods
add
jg
adc
adc
cmp
lcall
or
mov
sub
push
adc
stc
sbb
pop
mov
jl
lods
addr16
aas
mov
arpl
inc
add
or
mov
das
les
mov
add
clc
aas
mov
push
mov
mov
jb
lods
imul
mov
push
jg
mov
add
sub
adc
fadds
iret
fs
mov
pop
movsl
add
divl
mov
fmuls
leave
mov
mov
inc
jp
xchg
rcrl
xlat
fcompl
sbb
sti
dec
nop
jno
cmpb
fs
shrl
mov
sti
xor
clc
add
faddp
sahf
cmp
test
data16
stc
out
push
xchg
push
cld
daa
sahf
pop
pop
pop
popa
or
mov
add
aam
sbb
cmpsl
cmp
mov
sti
icebp
insb
sub
add
and
add
mov
or
add
and
mov
test
arpl
loopne
outsl
adc
ret
add
int3
sub
cld
inc
sub
js
mov
jae
push
xchg
sahf
fstpl
dec
arpl
add
sub
dec
jg
inc
add
cmpsb
mov
mov
outsb
mov
mov
mov
gs
inc
fcoml
cmp
iret
daa
fs
movsl
mov
out
adc
imul
xor
xchg
sbb
jne
call
mov
adc
mov
das
sbbb
sub
ljmp
js
hlt
lea
dec
sahf
imulb
in
cmp
lods
imul
mov
sarl
or
mov
sub
clc
and
popf
mov
ljmp
xchg
int
cltd
lds
sub
outsl
inc
lods
les
popa
aam
xor
adc
mov
xor
pop
adc
je
inc
cld
or
and
addr16
lock
shll
adc
clc
inc
mov
fnstcw
lock
insl
aaa
adc
ret
sbb
insb
out
sub
cmp
dec
fcmovb
gs
in
cld
mov
ret
rep
sub
outsl
sub
xor
mov
jp
sar
cmovbe
sub
jge
in
cmp
ds
xor
fmuls
or
pop
fimull
sbb
xchg
dec
and
movsb
sub
es
in
jmp
pop
inc
mov
dec
adc
movsl
mov
mov
sub
testb
sahf
xchg
inc
cltd
push
xor
xlat
lods
xchg
das
lcall
push
xchg
movsl
pop
jg
lret
sbb
mov
sbb
pop
jg
lods
jmp
aas
out
push
adc
mov
ja
addr16
pop
shr
movsb
incl
inc
cmp
mov
imul
dec
mov
loope
xchg
pop
xchg
cmpsl
lret
xor
jae
pop
dec
add
loop
dec
cmp
and
mov
add
fnsave
lods
jno
das
fwait
pop
int3
and
xchg
jp
ljmp
xor
xchg
les
adc
stc
inc
jecxz
test
rcll
mov
test
pop
mov
and
cmp
cmpsb
xchg
or
dec
adc
or
cmc
insl
sbb
addr16
jo
lret
dec
adc
rcrl
inc
flds
mov
cmp
les
cmp
mov
rcl
jb
pop
loope
data16
dec
jle
adc
add
leave
push
call
int
adc
popf
xor
mov
movsb
fmull
push
test
divb
xchg
loope
mov
arpl
ss
or
div
les
xchg
mov
scas
xchg
push
xor
into
and
call
mov
mov
xlat
ds
xor
mov
outsb
repz
add
fstps
out
dec
repz
lahf
adc
imul
dec
jbe
in
pop
push
fstps
xchg
sbbl
and
xchg
jge
xchg
fistl
sti
pop
mov
ret
push
rolb
addl
cld
push
cs
loopne
mov
stc
int3
fs
loopne
enter
mov
cmpsl
jge
jo
xchg
mov
dec
nop
dec
mov
lods
cld
out
xor
cwtl
add
rclb
ret
lds
xorb
test
xchg
in
hlt
gs
jle
inc
jg
xchg
adc
mov
or
popf
sbb
jns
in
orl
cs
in
cli
cmp
xchg
and
ja
fwait
xor
cmp
les
adc
add
pop
xchg
scas
mov
cs
cmp
add
pop
and
add
push
or
inc
outsl
call
add
xchg
adc
fs
inc
lods
dec
pushf
int
mov
mov
push
mov
clc
or
movsb
mov
xchg
mov
add
jmp
push
fcmovnb
sbb
mov
es
aas
mov
xchg
jne
daa
fbld
or
out
addl
daa
cmp
cmc
adc
jb
sti
movsb
subb
mov
repnz
leave
fimull
pop
xchg
aad
test
push
enter
add
sbbb
in
test
jb
mov
ficomps
adc
dec
or
pop
xor
data16
mov
lret
outsb
mov
sbb
pop
fmull
mov
out
ret
pushf
fs
cli
and
xchg
mov
mov
and
sti
icebp
mov
push
lcall
jnp
mov
jae
outsl
jecxz
std
sub
imul
lds
icebp
xchg
fsub
push
gs
repnz
aam
cmp
push
pop
push
add
push
add
push
ss
mov
inc
jne
mov
sub
pusha
cmp
clc
je
shrl
into
mov
js
fisubrs
sbb
enter
into
add
and
xor
pop
push
pop
dec
inc
and
xchg
sbbl
imul
pop
dec
xchg
mov
adc
repnz
jge
test
xor
jg
pop
and
in
sub
jp
mov
shl
sub
std
mov
or
jb
mov
mov
pop
cli
and
inc
loope
out
mov
add
pusha
jns,pn
arpl
pusha
and
insl
mov
mov
pop
loopne
aaa
inc
imul
test
inc
fcoml
xchg
sub
sub
loopne
mov
jae
rcr
sub
ror
subb
mov
dec
xor
jno
fs
dec
bound
xchg
daa
xlat
cmovl
popf
cmp
stc
add
lods
xor
sbb
aas
mov
and
lods
jl
test
sbbb
xchg
rorb
ret
dec
sub
mov
cwtl
aaa
mov
mov
shr
jge
lea
bound
cmp
clc
mov
rorl
aas
arpl
sbb
arpl
mov
and
and
and
pop
mov
mov
mov
jecxz
test
push
notb
pop
test
loope
out
or
rcll
divb
xlat
pop
and
out
lahf
mov
loopne
pop
pop
mov
movsl
mov
mov
pop
mov
inc
aam
call
mov
xchg
cwtl
xlat
inc
jg
aam
ret
cmp
iret
lret
insb
mov
mov
mov
mov
dec
cmp
dec
xlat
inc
aas
int3
add
std
and
lcall
jnp
mov
mov
sahf
mov
insl
insl
jge
in
push
rorb
dec
iret
jbe
pushf
std
lods
dec
jnp
cld
dec
stos
push
stos
xchg
stc
xorb
outsb
push
fldl
sub
fisttpl
out
je
mov
mov
jecxz
loopne
stos
xlat
adc
inc
adc
push
adc
cmp
rorl
ret
cmp
ss
dec
add
adc
pop
notb
es
les
fcomps
imul
push
push
and
mov
stos
xor
bound
or
decl
lock
ret
lret
and
dec
mov
xor
xchg
cld
mov
jecxz
xchg
jb
ret
ja
push
and
shll
sub
and
sub
adc
ljmp
flds
jmp
adc
sbb
sbb
out
daa
inc
adc
les
stos
repz
clc
movsl
pop
stos
rol
leave
pop
xor
les
and
repnz
sbb
mov
hlt
push
mov
or
push
jge
sarb
dec
aam
and
mov
or
rclb
rolb
dec
mov
test
xchg
in
push
cmp
icebp
sbb
push
dec
cli
push
xchg
mov
fistl
add
idiv
cmp
jno
iret
adc
scas
inc
fimuls
es
xor
xchg
push
mov
verw
inc
xchg
sub
imul
jnp
sub
adc
adc
cmpsl
mov
dec
imul
aam
inc
or
inc
inc
dec
cmpsb
xchg
or
jae
insb
outsb
mov
out
sbb
repz
outsl
leave
jmp
mov
rorl
mov
test
aam
ja
xchg
addb
incb
push
adc
test
les
popa
pushf
in
in
mov
jle
jnp
loop,pt
push
lods
push
loopne
call
js
ret
dec
cmpsl
movsl
and
push
mov
and
fimull
pop
jmp
frstor
inc
jmp
enter
adc
or
cld
shr
inc
nop
notl
dec
ja
fnsave
xchg
push
shl
push
push
push
add
jns
jmp
pop
scas
sti
cmp
adc
mov
mov
push
mov
jmp
inc
jb
dec
enter
adc
mov
pusha
cmp
int
gs
fisubs
xchg
add
insb
sbb
dec
imul
jge
push
adcb
lahf
out
mov
pop
leave
test
shlb
or
lods
nop
mov
mov
push
mov
out
sub
clc
sbb
pop
call
lods
idiv
loop
loop
in
cld
aad
and
push
push
pusha
jnp
fsubrl
dec
in
xchg
popa
pop
scas
push
xchg
rcrl
inc
jecxz
inc
xchg
cli
mov
pop
cmpb
push
cmp
jle
in
cmp
jnp
mov
adc
mov
and
pop
int
das
js
push
mov
roll
inc
pop
inc
inc
xchg
mov
fadds
push
test
and
xchg
call
mov
sahf
dec
rcrb
push
fldln2
fdivp
pop
xchg
mov
inc
mov
dec
ret
lcall
or
rorb
loop
shl
jnp
add
mov
dec
mov
or
mov
stc
push
mov
lea
pop
inc
inc
data16
xchg
inc
add
sub
ret
out
insl
or
sti
jecxz
shr
and
and
sub
mov
and
rolb
pop
shufps
push
and
xlat
daa
jbe
inc
outsb
mov
mov
fwait
sub
cltd
inc
jo
jae
test
test
jge
mov
dec
xor
and
shr
mov
sbb
add
mov
dec
jle
sub
cmc
jnp
cs
jns
aas
das
lods
pop
lods
scas
xor
stos
sbb
or
adc
mov
inc
or
jl
dec
mov
cmp
mov
jbe
mov
jecxz
mov
stc
in
and
jae
cli
push
cs
cs
mov
add
and
pop
jns
repnz
mov
dec
add
lcall
adc
mov
mov
pop
fprem
ret
aam
outsb
pop
in
movsb
fwait
loope
sarl
mov
add
and
loop
mov
cwtl
or
jge
jbe
adc
jns
push
sti
jnp
and
ror
aad
or
cli
aam
dec
mov
pop
mov
ja
cmp
add
sbb
jle
push
nop
xchg
shlb
sub
mov
fsubl
mov
les
cwtl
es
dec
or
mov
arpl
fcomps
stos
loop
enter
sub
pop
or
pop
sbb
insl
xchg
or
cltd
pop
xor
dec
lock
jb
dec
xlat
jmp
sbb
inc
push
ret
rorl
pop
dec
out
sub
outsb
cltd
cmpsl
insl
mov
or
xorb
mov
push
mov
popa
dec
adc
aad
xchg
ds
into
dec
xor
loope
loopne
fidivrl
push
xchg
mov
and
pop
mov
les
xor
cli
cmp
ljmp
lock
in
push
repz
in
fcmovu
fisttpll
cmp
iret
sub
nop
push
lods
jg
xchg
xchg
inc
aad
or
sub
add
ss
mov
lods
rorl
xchg
push
jnp
jb
xor
int
out
mov
adc
xchg
mov
dec
aam
outsb
xchg
jo
push
icebp
xor
adc
and
test
das
dec
sbb
mov
stos
int
mov
pop
mov
dec
add
pop
xor
adc
std
cmp
add
push
mov
in
mov
test
inc
sub
js
jecxz
dec
and
popf
in
ds
sbb
jecxz
insb
dec
jbe
test
xor
xchg
mov
je
mov
jmp
push
insl
mov
or
das
iret
pushf
mov
mov
iret
mov
aaa
mov
and
and
sti
xchg
ret
inc
movsb
add
mov
popf
dec
mov
mov
dec
mov
push
mov
vcvtsd2si
sub
jo
or
aad
or
sarl
inc
inc
push
aam
arpl
call
orb
pop
rcrl
popa
daa
jo
dec
lods
and
add
push
mov
sub
and
insl
xchg
pop
sbb
lock
popa
dec
fistps
adcl
inc
mov
dec
insb
xor
sub
fdivrs
sub
inc
stc
push
pop
fistps
xor
mov
inc
in
pop
fstpl
pop
mov
ss
push
lock
or
nop
dec
lods
lea
movsb
mov
pop
inc
dec
cmc
sbb
stos
mov
addr16
mov
les
shll
xchg
ficompl
rcrl
push
jp
mov
cmpsb
lea
jg
pop
add
push
ss
xchg
in
arpl
and
loop
cmp
mov
std
loop
inc
addr16
imul
xor
xchg
dec
shll
mov
cld
scas
and
das
and
shrb
fisubrl
sbbl
lock
icebp
sub
cmpl
shrl
dec
adc
jb
aam
pop
icebp
xor
mov
jmp
loope
fdivrl
aad
mov
pusha
loope
and
mov
stos
movsl
jg
les
or
in
test
subl
shrb
mov
popf
adc
lods
adc
jg
push
gs
jno
cli
mov
xor
or
rcl
and
incl
push
mov
lea
dec
je
inc
xor
jnp
je
pop
lret
aas
nop
jl
ss
mov
mov
addr16
stc
mov
jmp
mov
mov
ret
adc
sub
repz
jbe
into
daa
fdivl
dec
add
or
pop
adc
nop
xchg
push
aam
sar
cltd
xor
adc
enter
lds
insb
xchg
add
pop
and
xor
pop
add
movsl
lock
cmpsb
pusha
ja
jge
addr16
lahf
cmp
iret
pop
dec
imul
push
pop
jmp
mov
insl
xchg
cmc
pop
outsl
or
call
cmp
adc
pop
xor
pop
int3
es
inc
sahf
sub
cmp
mov
data16
dec
jge
pop
pop
push
fsub
test
dec
jno
clc
pop
leave
cli
loopne
daa
ret
sbb
insb
mov
adc
fisubl
and
add
cld
testb
push
mov
xchg
inc
leave
mov
jmp
fcmovb
and
mov
jno
idivb
rcrb
mov
dec
arpl
pop
cmp
lahf
and
imul
and
push
sbb
shl
mov
and
incb
inc
pop
mov
out
pusha
xchg
cmpsb
dec
adc
push
xchg
addb
ds
lds
add
cmpsl
fdivs
push
popa
and
and
enter
and
int
lret
stos
hlt
jge
push
xchg
mov
das
push
popa
addr16
fsubs
add
loope
and
shll
aam
mov
mov
js
add
dec
sbb
push
ja
jle
adc
mov
push
add
test
jns
dec
imul
popf
push
mov
pop
dec
inc
in
ja
test
push
ss
aaa
aaa
in
xchg
rorb
mov
leave
cmp
fadds
mov
movsb
in
pop
loope
sub
pop
jg
jmp
sbb
and
insl
and
stos
ss
sub
ljmp
cli
xchg
loop
inc
lods
or
je
push
jmp
pusha
xlat
outsb
dec
leave
cltd
aaa
xchg
pusha
fsubl
call
js
rclb
fcompl
pop
sub
cmp
ss
cmpsl
hlt
mov
jecxz
test
in
inc
push
test
cwtl
pop
adc
mov
fisttps
inc
jecxz
pop
leave
out
mov
xchg
in
js
and
xchg
jge
xchg
dec
mov
or
and
sbb
jle
ja
cli
pusha
mov
les
loope
xchg
out
orb
ja
push
jp
jo
xor
jo
xchg
insb
mov
fisubs
sub
aad
nop
dec
loopne
test
flds
shll
or
jge
mov
xchg
orb
add
or
fisttps
mov
mov
es
push
inc
cmp
jo
into
lock
cmp
sbb
dec
outsb
ffreep
mov
aas
mov
pop
lea
outsl
movsb
iret
xor
cmpsl
mov
adc
iret
push
and
dec
test
mov
xchg
iret
loopne
das
mov
daa
ja
mov
dec
mov
dec
mov
fldcw
fs
pop
cld
out
mov
fcmove
jb
xchg
std
mov
movsl
out
icebp
stc
xchg
ficomps
push
sbb
jb
push
fwait
adc
push
push
lods
leave
inc
shl
push
test
nop
mov
add
pushf
js
out
sete
mov
push
or
gs
cvtdq2ps
leave
fdivl
xchg
insl
pop
xor
pmulhuw
mov
hlt
test
and
jbe
fsubrs
inc
clc
and
scas
or
lcall
es
ja
pop
adc
mov
add
jecxz
insb
mov
test
jmp
das
pop
movsl
push
loopne
insb
mulb
test
pop
mov
ret
insb
shl
pop
aas
cmpb
mov
hlt
pop
mov
mov
mov
ja
cmp
and
leave
jae
cmpsl
sub
mov
sbb
pop
sub
pushf
pushf
cmp
add
addl
icebp
int3
push
sbb
out
and
dec
pop
push
jg
adc
movsb
mov
mov
mov
lock
iret
jl
mov
clc
mov
enter
or
dec
into
add
sbb
mov
repz
xor
imul
cld
push
rcrb
inc
or
dec
jnp
sub
push
push
movsl
mov
mov
cmp
sbb
mov
leave
insl
add
add
enter
push
xlat
mov
stos
out
mul
bound
xchg
dec
sbb
mov
gs
out
xchg
imul
xchg
jl
aad
mov
xchg
in
xchg
in
pop
cmp
sub
mov
jno
push
add
popf
shl
nop
bound
cmp
cmp
fs
cmp
xchg
cmp
push
push
push
popf
sbb
rcrb
and
sti
push
lds
das
fisubl
jbe
in
adc
aas
pop
je
in
jb
out
adc
lahf
xor
pop
leave
xchg
mov
addr16
mov
jbe
lret
lahf
out
scas
mov
mov
lock
in
push
pop
scas
pop
and
test
loopne
xchg
pop
mov
xor
in
int3
ffree
xchg
popa
lods
dec
cld
movb
xchg
fstpl
cwtl
test
add
jge
push
pop
out
or
dec
lea
ljmp
into
loope
popf
push
std
jle
aas
mov
rcr
fists
dec
xor
loopne
in
loopne
adc
xor
roll
hlt
lcall
sbb
jmp
sbb
dec
jle
pushf
sti
dec
je
add
lods
insl
add
add
jecxz
out
push
mov
pop
mov
inc
adc
mov
xor
repz
test
test
dec
repnz
sbb
insl
or
or
push
or
dec
push
push
cmp
and
pop
lret
notb
mov
shrl
fcmovb
sub
mov
das
fsubrl
daa
push
sbb
int3
dec
adc
ljmp
loop
dec
dec
inc
push
in
fistl
push
adc
sarl
pop
sarl
push
test
mov
xchg
sarl
mov
xchg
mov
into
mov
mov
fsub
jns
std
pusha
je
jno
sarb
push
jmp
in
ljmp
in
aas
jne
popf
icebp
out
or
sbb
sub
or
stc
ja
mov
adc
mov
sahf
enter
cld
rep
fidivl
and
ret
decl
adc
xor
mov
and
iret
jno
std
stos
outsl
sub
xor
inc
mov
xor
js
and
sarb
int
or
int3
xchg
pop
int
rolb
xchg
call
es
pop
jmp
lret
or
leave
outsl
cmp
lods
clc
std
shrb
mov
jns
in
mul
mov
jecxz
lret
xor
and
mov
lock
and
mov
xchg
inc
and
dec
sbb
add
sbbl
outsl
pop
stos
lret
rol
mov
or
dec
add
or
inc
ljmp
into
mov
mov
cld
jbe,pt
xchg
cmp
popf
enter
or
iret
cmp
pop
in
dec
enter
jmp
adc
scas
les
jmp
sbb
xchg
fs
mov
pop
add
jmp
cmp
pop
jnp
fstpl
imul
aas
cmp
aaa
dec
inc
lea
push
jbe
and
mov
scas
pop
adc
push
inc
arpl
mov
cmp
js
push
sbb
scas
inc
inc
pop
scas
adc
imul
push
in
mov
and
ss
cmp
nop
lret
cmp
xchg
pop
roll
dec
inc
lods
sbb
mov
push
adc
mov
jbe
and
daa
add
lds
aas
jle
cmpsb
xchg
adc
sub
popa
inc
mov
jae
in
insb
js
stos
shrb
sub
jae
daa
mov
fldcw
adc
aaa
sbb
inc
mov
mov
subb
jecxz
xor
les
mov
test
test
mov
lret
stos
jae
mov
jnp
xchg
mov
insb
hlt
cmp
jecxz
cmp
shrl
push
dec
or
jb
rcr
js
push
jge
orb
mov
subl
dec
bnd
enter
popf
adc
mov
std
sahf
xchg
loope
mov
repz
scas
xor
fstps
dec
cmp
inc
sub
dec
xor
out
mov
add
xorb
lcall
pop
ds
inc
mov
insb
and
es
lret
mov
das
and
and
stos
inc
jmp
fisubrl
pop
cltd
lds
inc
add
int
xchg
sub
stos
push
mov
jg
mov
in
rclb
push
divb
add
inc
in
push
dec
xchg
imul
inc
xor
mov
dec
rcrb
pop
ficoms
in
mov
lahf
cli
outsl
sub
dec
lods
add
mov
xchg
testl
fstps
sub
xor
mov
xchg
push
in
movsl
test
insl
nop
mov
xor
cmpsb
fcoml
setle
dec
xchg
inc
inc
fisubs
adc
in
hlt
mov
cmp
ds
inc
sbbb
xchg
lret
test
ficompl
sub
fs
outsl
sub
sbb
inc
popf
jnp
frstor
xchg
adcb
testl
xchg
ljmp
js
add
add
cltd
or
fldenv
xchg
cmpsl
adc
clc
add
cmc
push
xlat
gs
push
jp
cs
mov
mov
in
and
or
mov
pop
sbb
arpl
push
in
pop
mov
xlat
lahf
lock
push
xchg
dec
repz
sbb
add
insb
xor
xchg
xor
lock
in
adc
aas
sbb
inc
dec
sbb
scas
xor
lods
adc
jbe
or
cmp
cmp
dec
and
div
hlt
sbb
cmc
adc
adc
or
testb
xorb
sub
add
movsb
sub
fcoms
int
sbb
mov
fistl
push
shlb
addr16
js
inc
subb
outsl
dec
lcall
or
test
xchg
or
movsl
js
jp
lret
xor
pushf
test
mov
insb
or
push
xchg
test
nop
pushf
cmp
xor
jl
dec
push
es
sbbb
aas
or
mov
cmp
negl
mov
lcall
dec
lahf
orb
clc
into
xchg
mov
lcall
lea
out
std
rorl
pushf
push
cmp
fmul
jg
mov
sbbb
call
add
es
in
cmp
in
inc
ficoml
xchg
leave
push
cmp
xor
mov
sbb
xor
pop
je
pop
sub
xchg
pop
xor
sbb
mov
mov
pop
and
ffreep
and
or
jns
leave
cmc
cwtl
ret
int
ss
lods
cmpsl
mov
rol
ja,pn
pop
or
adc
jno
in
scas
jae
mov
aas
push
adc
js
adc
mov
jge
xchg
inc
or
test
or
sti
jb
in
cmp
push
cs
repz
cmpsl
mov
shl
ficomps
insb
sarb
aaa
negl
cmp
mov
mov
mov
or
xchg
imul
xor
lds
ja
sub
push
add
insb
ds
inc
push
leave
arpl
jae
mov
stc
lret
jne
inc
in
stos
push
dec
or
stos
cmp
out
out
rcll
jo
or
jno
mov
stos
jbe,pn
sti
pop
mov
out
insb
dec
push
int
cmp
inc
fcmovbe
mov
adc
and
incl
and
test
and
xchg
test
mov
dec
mov
outsb
fdivs
sahf
pusha
inc
cli
mov
cmp
mov
addl
fwait
rcrl
andb
sub
leave
cli
dec
jle
add
or
jne
pop
add
subb
inc
cs
adc
icebp
inc
mov
push
xor
ret
sbb
dec
lock
insb
mov
inc
in
xchg
push
pop
insb
pop
sbbb
out
adc
rcr
push
ss
mov
mov
pop
and
adc
mov
outsl
mov
adc
fwait
push
dec
cltd
test
aas
andl
push
or
ja
stc
sbb
sbb
repz
pusha
push
lcall
xchg
adcb
dec
push
test
or
sti
push
jle
cmp
mov
cltd
lea
aas
test
add
je
icebp
sbb
mov
xlat
movsb
popa
ret
pop
int3
sbb
fcomps
dec
push
mov
lods
fcomip
lcall
fwait
mov
shll
faddl
and
jb
or
cmp
loop
xchg
popa
ljmp
jbe
or
mov
sub
and
sbb
stos
imul
inc
idivb
aaa
add
scas
mov
arpl
add
outsb
sbb
xor
mov
xor
enter
movb
ss
adc
jo
or
inc
call
adc
and
xor
mov
int
jge
mov
mov
cmp
ljmp
fwait
pop
xchg
popa
adc
cmp
jmp
mov
adc
xor
pop
add
cld
jb
jg
enter
test
lcall
inc
pmaddwd
push
cmpl
push
xchg
sub
adc
out
mov
adc
pop
loope
mov
xor
push
fdivrp
in
icebp
mov
in
loopne
xchg
add
lcall
mov
fldcw
push
cmc
in
adc
add
xorl
lods
sbb
stc
ja
xor
pushf
and
pop
sti
js
das
inc
flds
imul
es
pop
mov
gs
push
fstpl
sub
fs
imul
pop
xor
and
mov
in
ds
cs
xchg
or
mov
mov
int
or
sub
or
loop
in
fdivl
mov
sub
mov
dec
out
test
jns
push
jg
stos
and
sti
jmp
divl
fsubrs
cmp
lods
xchg
mov
fisubrl
mov
inc
inc
add
imul
movsb
add
fsubp
cmp
jne
add
out
push
sbb
mov
push
push
jae
lock
adc
aad
sub
les
stos
loopne
inc
adc
test
mov
sbb
or
xchg
cli
insb
fsubs
dec
cli
cwtl
out
push
insl
inc
push
lret
sahf
mov
out
jge
mov
add
mov
sub
idivl
and
sbb
dec
cld
cld
mov
ja
daa
cwtl
push
xorb
pop
mov
push
sarl
push
xor
cmp
pop
int3
push
rorb
jle
mov
add
lods
daa
adc
sub
jecxz
push
pusha
inc
sub
in
jecxz
mov
cmp
jbe
aas
mov
das
push
mov
mov
inc
call
pop
push
adc
cs
push
enter
mov
outsb
imul
add
lods
pop
outsl
mov
cmp
stos
jmp
jl
lods
test
sbb
sbb
mov
cmpsb
sub
and
cltd
sub
enter
jb
scas
xchg
cmpsl
adc
lea
add
xchg
mov
aad
jbe
int3
push
push
mov
pop
xor
ds
cmpsb
stc
rcrl
inc
jecxz
xchg
sub
cmc
push
cwtl
rclb
cwtl
pushf
lods
sbb
out
into
shlb
mov
in
xchg
jo
cli
test
ljmp
add
xchg
mov
roll
mov
gs
and
call
pop
test
stos
sbb
push
movl
int3
xor
or
mov
jae
daa
fisubrl
mov
popa
shll
push
fwait
mov
orb
mov
mov
movl
mov
and
add
jno
jg
subl
xor
or
data16
xchg
pop
mov
xchg
sarl
add
sub
dec
pop
xlat
add
mov
sub
mov
mov
inc
jno
sbb
mov
andb
je
xor
lcall
scas
pop
lea
xchg
sbb
cmp
popf
inc
mov
pushl
cmp
inc
subb
add
mov
push
push
pop
pop
in
push
shlw
lods
push
or
ss
jns
js
je
mov
cld
ljmp
pop
out
xchg
pop
iret
xorb
add
loopne
outsb
insb
pop
xor
sbb
add
sub
inc
sbb
rcr
mov
or
daa
dec
xor
sub
cmp
or
les
fxam
sti
adc
inc
pop
outsb
sbb
test
imul
sub
sub
repz
addr16
ja
cltd
mov
add
repnz
scas
loope
pop
mov
push
lcall
xchg
insb
mov
sarl
jle
add
cmp
mov
outsl
subb
xchg
hlt
js
call
lcall
or
orb
xlat
add
fcomip
in
negb
xchg
jp
sti
and
std
jmp
lds
sbb
shl
push
xchg
mov
orl
gs
outsb
out
jb
and
mov
push
std
rcll
add
or
xor
mov
hlt
and
inc
ret
fs
lock
in
cmp
mov
icebp
cmp
nop
sbb
mov
fsubr
sti
pop
xchg
andb
push
mov
adc
icebp
mov
dec
repz
push
divb
fdivrs
cmpl
mov
xchg
mov
and
mov
fs
mov
lods
push
sub
mov
push
xor
jmp
mov
ja
sti
aad
fimull
lcall
std
jne
mov
mov
fldt
mov
sub
mov
out
pusha
xor
cmp
bound
fistpl
push
inc
ljmp
lea
xor
sbb
sub
add
test
mov
push
addr16
data16
scas
aas
sub
fdivs
xchg
imul
cmp
sub
mov
fbstp
xor
xor
push
into
out
scas
mov
clc
mov
mov
in
insl
jp
jo
shll
pop
mov
bound
outsb
int3
test
int3
cs
sbb
and
pop
or
sbb
rol
out
daa
xor
ljmp
pop
iret
lock
push
pop
mov
or
jo
jecxz
in
sub
dec
or
pushf
adc
jns
pushf
mov
arpl
sbb
add
lcall
push
aam
adc
shll
push
repnz
popa
push
daa
lds
sub
jb
mov
mov
push
jb
inc
inc
mov
xchg
jno
fs
fwait
inc
add
push
test
inc
cwtl
sbb
mov
dec
xlat
popa
data16
mov
daa
sahf
sbb
xor
gs
and
in
test
ljmp
jnp
pop
pop
movsl
jbe
call
lahf
jge
add
fsubrs
negb
shrl
hlt
imul
xor
sub
dec
cmpsl
push
jae
mov
daa
test
bound
push
leave
cmpsl
prefetcht1
or
scas
mov
xor
sbb
inc
push
pop
rcrb
dec
fsubr
xor
stos
cwtl
xor
fs
mov
mov
pop
mov
push
dec
cmp
lds
add
xor
push
fbld
mov
pop
jl
sbb
sub
leave
inc
cld
cs
mov
int3
repnz
arpl
idiv
fldenv
mov
xor
fisubs
repz
jbe
hlt
mov
push
cli
rorb
inc
fdiv
xor
shrl
cwtl
out
dec
lcall
xchg
inc
mov
outsb
lret
loop
ljmp
cli
testb
cmp
pop
jnp
movsl
inc
inc
push
fsubrs
notb
cmpsb
mov
push
xor
and
dec
push
jb
rep
xchg
das
jne
jmp
adc
stos
inc
stc
push
inc
mov
push
mov
lret
mov
inc
jae
inc
mov
in
maskmovq
negl
gs
cltd
mov
aas
sahf
jl
push
shr
inc
mov
stc
cmpsl
std
pop
call
out
dec
xchg
jbe
cmc
push
pop
or
push
cwtl
adc
repz
sbbl
mov
movsb
loope
sbbl
insl
popf
and
hlt
jmp
and
daa
dec
or
mov
loop
mov
sub
add
or
mov
ss
xchg
sub
mov
lods
aam
rorl
xchg
cld
pushf
xor
pop
xchg
pop
mov
test
mov
cmp
pop
daa
pop
jns
dec
rcrl
inc
outsl
xchg
push
ret
ds
inc
movsb
fistps
or
sbb
lcall
mov
mov
or
movsl
cmp
mov
push
jno
ja
out
cmpsl
mov
inc
pop
loope
sub
fildll
scas
push
and
pop
cmp
out
lock
jp
xchg
mov
and
or
ja
into
fimuls
inc
lahf
inc
cmp
aam
jge
sarl
adc
xchg
mov
inc
push
loopne
mov
imul
mov
sarl
sbbl
cltd
cmp
aam
les
mov
ret
fiaddl
add
jp
mov
xchg
adc
sti
iret
lahf
jb
cmpsb
cmpsl
out
mov
lret
push
cltd
or
popf
xchg
inc
js
mov
or
xchg
pop
jle
pop
mov
pop
flds
xchg
popa
stos
test
mov
shl
jl
stc
mov
dec
mov
andl
inc
lock
adcl
sbb
adc
pop
cld
test
ds
inc
dec
out
push
add
or
pop
push
sbb
int3
mov
xor
shrb
aas
vpmaxsw
fwait
pop
mov
test
rol
ret
adcl
jb
aad
out
insl
fcmovnb
mov
jmp
mov
subl
pop
pop
push
pop
add
inc
stos
mov
cld
mov
loopne
xor
cmp
push
sbb
js
cmp
xchg
pop
lock
or
aad
and
sbb
lds
out
loopne
test
cwtl
push
lret
shrl
xor
xor
push
mov
jmp
jne
xor
lret
adcl
pop
pop
icebp
mov
sahf
rcrl
sahf
lcall
mov
inc
int
shrb
sbb
xlat
push
push
sub
pop
sub
xchg
adc
incl
and
sbb
cmovno
dec
push
adc
movsb
jl
aad
and
mull
or
add
push
inc
pop
popf
jbe
or
xchg
mov
sbb
nop
rcll
mov
addb
rclb
cld
fcoml
cltd
add
ret
call
outsb
push
add
xor
sub
mov
dec
cmp
das
cmp
punpckldq
into
lahf
adc
stos
or
fldenv
xchg
test
shrl
into
and
add
bound
or
in
pop
cmp
int
mov
out
push
shll
mov
movsb
popa
pop
xchg
inc
adc
imull
movsb
outsl
int3
inc
cld
sub
mov
shll
inc
inc
fidivrl
aaa
test
and
lds
roll
cli
jo
test
ret
mov
rcll
out
mov
jl
dec
gs
lods
lods
orb
cmp
enter
fnstsw
aas
jb
add
mov
ffreep
ret
pop
imul
test
hlt
push
mov
fnstcw
in
jo
popa
add
inc
ss
shrb
sahf
insl
pop
mov
sub
jns
cmp
xchg
fisttps
pop
lret
mov
xchg
cmc
adc
cmp
mov
data16
out
clc
aam
imul
add
popa
jecxz
or
aad
sbb
jbe
ds
jbe
in
push
push
inc
push
repnz
dec
scas
ror
das
pusha
rorb
push
imul
loopne
or
mov
push
inc
stos
or
out
stc
iret
ja
mov
dec
mov
inc
imul
out
test
add
mov
mov
in
xchg
sbb
rcr
xchg
jo
inc
jecxz
jmp
sub
jns
pop
push
aad
jnp
push
or
out
add
mov
into
push
aam
aaa
xor
add
pop
mov
cmc
mov
in
insl
add
add
insl
out
enter
jge
ror
adc
jg
pop
push
stos
dec
push
jl
scas
lea
add
push
xchg
push
mov
push
idivb
inc
mov
inc
rolb
fisttpl
sysret
sub
test
insl
add
cmp
xor
dec
and
stos
pop
cld
sbb
adc
mov
or
inc
xor
movsb
xlat
inc
mov
inc
cmp
int3
sub
pushf
xor
jmp
enter
andb
out
stos
bound
add
sub
sub
mov
add
fadds
aas
fwait
addr16
cmp
cs
popa
cmp
sbb
jle
xor
adc
popf
ror
add
pop
int
in
lods
and
hlt
jecxz
jns
pop
inc
sbb
and
add
adc
pop
js
inc
pop
cmpsl
push
mov
fsubp
adc
mov
push
xor
ret
mov
aaa
cmc
push
mov
dec
in
mov
pop
inc
inc
out
js
push
pusha
or
mov
mov
mov
mov
add
mov
or
add
in
movsl
insb
xchg
cmpsb
out
icebp
insb
push
fidivs
loopne
iret
and
testb
jne
shll
pusha
bound
rcrl
addl
cli
push
pop
leave
roll
cmp
cmp
jbe
mov
and
add
lcall
and
add
repnz
ret
negb
mov
das
mov
sub
xor
and
sub
sub
xchg
test
sti
outsl
xchg
cmp
jae
mov
mulb
scas
mov
jnp
pushf
or
pop
test
sarl
test
div
push
loop
mov
enter
dec
fistpll
push
xbegin
inc
adc
mov
ds
out
jne
push
in
and
dec
mov
cmp
into
jne
cwtl
cmp
xchg
fidivrs
cli
adc
push
data16
frstor
out
aad
js
lret
movsb
scas
bound
add
mov
repz
xor
aam
and
adc
and
out
or
ja
movsl
mov
xchg
mov
fists
push
push
in
adc
inc
mov
xchg
adc
das
sub
cmp
test
mov
inc
jmp
pop
pop
sub
leave
int
inc
stos
pop
rolb
aad
ret
and
xchg
cltd
pop
sub
bound
pop
fimuls
xchg
pop
ds
fisubrs
popa
pop
jle
add
fbld
mov
jle
or
ret
popa
clc
out
dec
mov
push
mull
shlb
pop
movmskps
call
cmp
scas
add
ret
cld
fs
outsb
js
test
jo
inc
push
sub
int
in
gs
data16
cmp
cld
adc
dec
into
in
or
shlb
gs
adc
negb
mov
mov
push
dec
jno
jbe
daa
fisubrl
stos
pop
in
movsb
fistl
push
mov
pop
mov
pop
and
and
jp
scas
stc
int
xor
stc
cmp
push
aad
cli
out
pop
fcmovnbe
sarl
mov
jo
push
and
cmp
jmp
std
js
stos
pop
shll
sub
cmp
mov
sti
push
jle
xor
popf
cmp
in
pop
imul
js
cmp
lds
add
add
jnp
push
out
add
adc
cmp
add
push
xchg
and
jmp
scas
xchg
xorb
mov
adc
pushf
add
aas
add
lret
mov
dec
testl
insb
inc
dec
or
lock
shlb
inc
inc
ficomps
add
loop
mov
lea
cld
push
pop
pop
mov
inc
cwtl
les
out
cmp
cld
sar
aas
sbb
xor
shll
movsb
cmp
dec
pop
gs
add
fdivrs
mov
and
dec
in
arpl
sbb
inc
jle
das
and
sahf
add
ret
fdivrl
sbb
aam
scas
andps
mov
and
cwtl
add
jae
ja
das
pop
shrl
or
orb
cmpsb
addr16
inc
out
mov
mov
lods
pop
push
test
jecxz
or
and
fstpt
or
ja
fimull
push
lret
leave
inc
xchg
push
movb
lcall
mov
test
stos
dec
cmp
or
sar
or
and
std
cmp
out
leave
loope
inc
jmp
mov
test
loopne
mov
test
mov
or
aaa
orl
and
mov
scas
sti
xchg
dec
xchg
das
xlat
add
into
cmp
pop
xchg
adc
pop
xor
mov
fimuls
in
add
stos
dec
cmp
gs
pusha
ss
fwait
jmp
cmp
cmp
pop
jge
test
jg
lods
jb
pop
test
clc
mov
stc
cmp
cmc
sbb
lret
xchg
sbb
mov
ret
push
mov
push
sbb
push
shll
movsb
or
and
push
pushf
in
mov
or
sub
mov
jns
data16
stos
jae
mov
lods
inc
add
jns
loope
orl
inc
jno
lcall
jl
ret
push
or
mov
and
ja
mov
xchg
sub
rolb
sbb
mov
mov
lcall
loope
sbb
cmp
add
push
adc
loop
push
push
inc
cwtl
test
adc
push
les
in
add
push
addb
sub
daa
cmc
fistps
flds
shlb
dec
lret
leave
jecxz
xor
jl
lods
mov
rcll
jge
xor
movsb
push
xlat
cmp
rorb
mov
inc
push
push
mov
out
enter
psubsw
sbb
loope
xchg
call
adc
test
and
add
inc
fsubp
sub
mov
call
push
pop
xor
bound
in
mov
pop
add
inc
aaa
inc
adc
insl
and
dec
inc
aaa
lods
add
test
mov
cmp
mov
mov
inc
jne
out
cmp
loop
xrelease
sbb
push
std
push
jno
fmull
test
mov
add
lcall
sub
mov
xor
mov
out
aam
in
pop
std
mov
adc
stc
push
cld
mov
sub
rcll
fstpt
cli
imul
pop
or
sub
mov
dec
repz
inc
cmp
xlat
js
iret
pop
std
hlt
loope
inc
in
add
and
lods
movsb
cmp
cmp
push
in
rcrb
mov
xchg
fstps
jne
add
or
std
filds
std
out
ror
jg
fisubl
jns
out
add
sbb
inc
sarb
and
dec
mov
cmpl
add
mov
es
popa
jbe
dec
mov
pop
pop
xchg
sub
hlt
aam
iret
es
mov
add
dec
or
imul
or
cmp
mov
mov
add
or
out
scas
loope
jp
clc
sti
mov
xchg
push
cld
mov
inc
xchg
test
cmc
je
test
ds
fwait
cmpsl
sub
bound
lods
add
dec
scas
icebp
jecxz
ret
sub
test
adc
mov
ss
lock
inc
inc
aas
lods
dec
jns
add
or
jnp
cld
dec
stos
adc
and
imul
ret
cld
inc
push
lds
int
in
in
subl
fwait
xchg
jg
inc
xchg
mov
mov
jg
cmp
movsl
xor
scas
push
jb
mov
mov
mov
popf
push
fs
enter
je
push
sbb
mov
lret
sbb
jle
divl
add
or
fwait
imul
mov
pop
mov
sub
clc
jns
inc
and
lea
mov
mov
jp
gs
cmp
cmpsl
xlat
xor
sbb
dec
lea
jp
sub
add
pop
and
jo
pop
add
fcmovnbe
lds
xchg
mov
lock
ds
pusha
push
pop
or
push
fcoms
nop
cmp
xchg
dec
and
popf
push
out
pop
pusha
fistps
xlat
xor
cli
mov
pop
outsl
mov
mov
fwait
adc
pop
pop
js
inc
mov
push
fwait
mov
push
or
mov
das
icebp
lea
add
jmp
dec
pop
jb
jae
or
lret
idivb
cmpsb
adc
ret
ljmp
push
cltd
xchg
adc
adc
dec
inc
mov
dec
adc
push
sahf
adc
xor
outsl
icebp
imul
xchg
cmp
sub
xor
push
aad
xor
adcb
jge
lock
cmpsl
fimuls
push
jmp
std
outsb
std
fst
jae
inc
mov
push
hlt
inc
pop
aad
and
xchg
test
add
add
loopne
cli
lods
sub
adc
ror
out
push
in
rorb
xor
cwtl
sbbb
ljmp
xor
cmp
xchg
mov
cmp
jmp
sahf
lods
xchg
jae
outsl
shll
or
mov
mov
xor
aad
xchg
dec
in
mov
sub
int
cld
lret
inc
add
mov
inc
icebp
dec
dec
cli
xchg
xchg
lods
sub
or
mov
dec
add
lock
xor
loope
jbe
mov
rorl
sub
lods
dec
xor
in
mov
pop
aad
ja
test
ja
mov
cltd
jae
idivl
pop
sti
fnstenv
push
in
prefetch
cmp
sbb
daa
sub
popf
sub
stc
cmpl
add
dec
shl
pop
sahf
add
das
stos
push
imul
cmp
fs
rolb
pop
rcr
jge
mov
jns
test
lods
std
push
jno
lret
inc
mov
xor
pop
adc
inc
imul
aaa
pop
arpl
lret
mov
in
push
mov
adc
loope
fistl
aam
mov
fs
jae
pop
mov
push
test
and
in
add
out
jmp
mov
fs
sbbb
mov
xor
fwait
out
hlt
test
add
adc
mov
nop
dec
scas
sbb
ljmp
and
xchg
mov
das
imulb
push
aaa
aaa
xchg
test
test
sub
cld
insl
test
sub
jecxz
jl
push
dec
out
fisubrs
cmp
shrb
lock
fdivr
sbb
icebp
push
ss
ds
jle
jge
mov
mov
xor
xchg
enter
jmp
cs
inc
stc
aaa
push
fwait
ret
scas
ljmp
mov
and
insl
loope
lret
mov
scas
scas
dec
xchg
push
je
sbb
lret
mov
ret
cmp
pop
pop
mov
pop
iret
fmulp
lea
scas
adcl
roll
or
lods
and
out
jbe
mov
dec
mov
push
jbe
inc
push
jmp
lcall
mov
mov
mov
dec
or
push
sarl
add
jns
arpl
hlt
idivb
loop
das
push
outsb
xor
pop
cli
push
xlat
push
xchg
pusha
mov
lods
lods
imul
push
pop
fwait
and
cmp
add
test
sub
xchg
mov
inc
ljmp
dec
xor
mov
push
inc
jmp
in
jmp
jge
in
lret
cmp
lock
and
repnz
jno
lds
sbb
cmpl
inc
push
mov
fbld
lcall
dec
xchg
dec
dec
cmp
leave
movsb
ds
or
sub
push
sbb
iret
rorb
cltd
push
push
subb
sbb
dec
pop
push
cli
cmc
mov
dec
mov
fimuls
aam
add
sbb
lret
mov
and
jbe
test
add
xchg
jp
stos
xchg
xor
xchg
mov
arpl
or
adc
mov
daa
aad
mov
push
cs
dec
push
xor
mov
dec
in
xchg
inc
add
adc
push
orb
lcall
pushf
jle
sbb
ja
xchg
mov
mov
push
push
les
seta
xchg
dec
dec
sub
aam
dec
addr16
aad
jo
out
stos
xchg
cmc
aas
aaa
xor
cli
jno
pop
jns
cmpsb
outsb
fisttpll
dec
add
push
in
xchg
lcall
push
sbb
fsubrs
loop
subl
xchg
jp
push
js
jbe
xor
outsl
scas
jmp
call
stos
jbe
jo
je
fisubs
or
stos
and
adc
das
adc
mov
sub
pop
mov
stos
push
loope
xor
gs
cmp
lods
mov
push
or
popf
cmp
scas
mov
iret
bound
mov
nop
or
ror
movsb
jmp
clc
jle
push
lahf
sbb
xchg
pop
bound
bound
add
jns
out
loopne
insl
push
jnp
or
pop
fldcw
jo
pop
filds
aaa
adc
and
int
iret
enter
pop
rcll
iret
mov
shlb
loope
inc
bound
cmp
fidivrs
mov
sbb
ret
mov
xor
enter
lea
repnz
rclb
icebp
mov
jl
pand
sub
sbbl
pop
push
fstp
icebp
aad
sub
jl
jmp
jle
mov
jl
mov
push
mov
rol
adc
divl
pop
and
sarl
xchg
mov
xchg
scas
std
jmp
loope
pop
dec
pop
ds
adc
mov
xor
and
jbe
pop
inc
mov
js
or
mov
inc
dec
stos
jae
jge
jae
sub
jecxz
lds
mov
jns
mov
xor
xchg
arpl
je
mov
mov
fcoms
pop
int3
xor
rolb
xor
jae
sbb
mov
and
mov
mov
or
les
je
cld
divb
cmc
pop
push
sub
xorl
xor
sahf
ljmp
inc
pop
mov
out
lret
fwait
rolb
sbb
sub
bound
mov
xchg
jmp
cmp
xchg
or
std
or
lods
into
adc
rcll
mov
insb
push
outsb
xchg
cld
fisttps
out
mov
adc
mov
imul
movsb
fcompl
shrb
push
cmp
dec
shrb
cmp
add
sbb
popa
sarl
pop
stos
lock
icebp
jo
test
mov
outsl
in
mov
jbe
cmp
fstl
lds
cwtl
cmp
inc
mov
jecxz
push
lods
pop
in
pop
dec
mov
and
leave
sbb
in
pop
addr16
mov
cmp
xchg
in
shl
testl
inc
mov
add
clc
or
lods
jbe
mov
popa
loop
jns
in
stos
nop
pop
push
adc
icebp
fisttpll
pop
push
push
lret
ret
jne
rcr
jle
cwtl
sub
cmp
jo
mov
bound
jge
test
das
mov
mov
std
dec
inc
pop
xor
loopne
lret
push
ret
popf
daa
push
push
push
in
fmull
mov
in
xchg
pop
fisubs
mov
int3
movsl
cmp
bound
clc
adc
pop
stos
lret
cwtl
arpl
push
pop
imul
test
mov
mov
lock
js
sbb
push
insb
iret
jae
pop
push
cmp
leave
push
adc
cmp
fnstsw
jnp
pop
dec
in
xchg
dec
fs
movsb
xchg
sub
jl
insb
jnp
pop
jns
dec
adc
pop
jno
or
adc
or
xchg
mov
pusha
pop
add
mov
xor
xchg
test
inc
std
xchg
jno
mov
mov
cmpsl
loope
cltd
inc
dec
adc
pusha
daa
push
in
xorl
dec
mov
out
or
xchg
jmp
cmp
jp
mov
les
ljmp
cmc
and
lahf
cltd
jg
in
int
xchg
or
icebp
std
scas
outsb
or
add
sub
mov
inc
pop
out
lods
push
enter
cmp
cmp
lret
or
adcb
mov
sub
popf
cbtw
add
xchg
mov
sahf
les
inc
xor
gs
in
rorl
aas
dec
jl
or
fcomps
enter
das
inc
mov
cmp
jg
fistps
pushf
jle
clc
pop
cmp
lds
les
mov
ret
movsb
mov
mov
mov
fdivl
out
loope,pn
pop
out
clc
mov
cmp
orb
stos
mov
loopne,pt
in
mov
xor
mov
xchg
and
inc
into
fadds
pop
test
and
stos
cmpsl
xchg
fistl
jle
mov
cmp
cwtl
dec
sbb
xor
test
aas
push
pop
int
mov
ds
push
nop
push
cmc
pop
stos
mov
