jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
aaa
fldl
decl
les
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
add
idiv
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
ja
loopne
cwtl
sbb
and
sbb
and
sbb
and
push
loopne
sub
loopne
jae
loopne
sbbb
and
inc
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
sahf
loope
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
adc
adc
add
inc
add
add
mov
add
cmp
jae
mov
iret
xlat
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
fadd
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
out
inc
add
call
mov
std
out
add
add
mov
add
cmp
jae
mov
mov
mov
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
and
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
pop
jmp
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
fwait
roll
pop
pop
pop
add
jns
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
jp
loopne
jp
loopne
cmpsb
xor
and
loopne
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pushf
xor
loopne
mov
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
adc
inc
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
xchg
icebp
inc
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
out
inc
add
pop
add
xor
inc
add
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
call
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
and
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
add
pop
inc
loopne
sbb
pop
inc
loopne
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
ret
and
inc
loopne
bound
and
inc
loopne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
push
push
call
mov
jno
mov
js
mov
leave
xlat
scas
add
pop
scas
add
push
fdivrl
add
lock
mov
add
enter
add
in
add
push
push
lea
push
call
push
add
jbe
add
push
loopne
push
add
jecxz
add
pop
xchg
fcmovnu
ffreep
add
lods
add
add
in
mov
lcall
add
push
xchg
add
add
ljmp
push
jle
mov
jnp
add
in
clc
pop
popl
push
push
push
lea
push
lea
push
lea
push
call
call
fnstsw
movsb
add
addb
orb
add
shrb
add
iret
mov
jge
iret
add
xlat
jle
clc
fcmovne
pop
add
in
in
lcall
push
push
push
push
call
add
xchg
add
add
js
add
push
add
in
add
add
add
mov
sti
add
add
mov
jmp
add
add
gs
pop
cmpsl
fiadds
add
jle
xchg
lcall
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
mov
test
add
xchg
cld
cmpsl
mov
mov
xchg
cmpsb
in
mov
add
mov
mov
pushf
sti
fildl
ljmp
rorb
add
jne
jno
jecxz
adc
xchg
addb
lahf
hlt
add
push
add
out
add
stos
cltd
add
mov
inc
add
add
push
push
push
push
push
call
rclb
add
lcall
add
addr16
add
add
add
mov
mov
addl
jp
hlt
jns
addl
enter
add
enter
popa
add
push
add
sub
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
add
out
add
test
add
aam
pusha
enter
add
pop
add
add
lds
stos
add
movl
add
cwtl
rcr
add
push
jnp
pop
mov
lcall
aaa
add
push
push
lea
push
push
lea
push
push
push
push
push
call
shll
push
mov
aad
sahf
pop
add
add
xchg
add
push
negb
clc
bound
jnp
mov
add
pop
pop
add
outsl
add
leave
push
push
bound
je
add
out
loopne
test
add
sub
pop
jmp
ret
push
push
lea
push
push
call
mov
pop
add
xchg
adcb
repnz
add
add
fucomip
scas
popa
mov
leave
add
mov
aam
fldl
add
out
std
push
add
add
add
jo
mov
pop
mov
fmulp
xlat
les
add
pop
pop
push
lahf
sub
pop
mov
push
push
push
push
push
push
push
call
pop
filds
mov
mov
mov
cli
nop
jecxz
imul
add
test
push
out
add
lcall
pop
hlt
add
push
push
push
push
push
push
push
call
add
test
fwait
jl
pop
incb
push
loopne
cld
add
add
add
xlat
mov
sbb
add
jmp
rcll
scas
imul
add
hlt
add
add
add
add
add
xchg
lret
pop
stc
add
mov
add
fdivr
add
pop
add
int
out
sub
pop
add
push
lea
push
lea
push
push
push
call
int3
add
popa
push
movsl
test
jne
into
stos
mov
test
shrb
clc
leave
pop
xchg
lods
int3
add
mov
mov
jge
push
stos
xchg
imul
push
add
pop
add
ret
cmovno
add
push
push
call
add
add
repnz
sahf
cltd
in
push
xchg
cmpsb
out
pusha
ja
scas
xchg
iret
add
mov
aad
sti
mov
test
add
add
ficoms
enter
lcall
pop
add
repz
adc
aam
lods
push
add
push
push
pop
add
add
rol
shl
ror
sub
not
pop
shr
add
rol
dec
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
test
xchg
shl
add
fadds
cwtl
add
add
lods
fxtract
add
add
jp
mov
leave
call
fcompl
jne
call
push
push
lea
push
call
add
cli
pop
pop
fst
push
rcl
les
std
sbb
sahf
pop
add
mov
add
add
pop
xchg
arpl
out
jae
mov
sarl
lcall
inc
lock
push
lea
push
push
lea
push
push
push
call
clc
add
add
add
add
add
lds
jle
jb
add
jo
rolb
add
lahf
add
scas
rolb
add
clc
add
add
rolb
add
mov
push
ret
add
add
add
add
std
ja
fwait
nop
xor
xchg
movl
in
in
movl
push
push
push
call
add
add
gs
pop
add
mov
mov
add
add
mov
xlat
cmpsb
outsl
add
add
in
hlt
lcall
inc
call
push
push
push
call
push
xchg
add
enter
add
pop
add
bound
out
add
mov
in
xchg
mov
addl
addl
out
xchg
add
cli
add
xchg
add
jbe
leave
in
push
icebp
add
stos
sti
add
rol
hlt
add
test
pushf
data16
add
add
icebp
sub
pop
push
push
push
push
lea
push
push
call
mov
pusha
bound
mov
scas
repnz
add
add
add
push
xchg
jl
add
fists
sub
pop
pushl
push
lea
push
push
push
call
in
add
add
loop
pop
pop
pop
add
enter
pop
out
xchg
fiadds
out
xchg
add
out
stos
add
loope
add
nop
push
xorl
in
lock
lcall
jne
push
lea
push
lea
push
push
lea
push
push
push
call
popf
int
push
add
roll
movsb
jle
add
rolb
add
std
add
pop
add
add
push
jb
add
int3
add
mov
scas
xchg
add
add
into
scas
fiaddl
add
add
popf
jmp
add
add
and
pop
call
pushl
push
push
push
push
push
push
lea
push
lea
push
push
call
in
add
lds
add
rolb
add
scas
jns
pushf
add
sti
add
xchg
push
fcmovu
add
mov
andl
add
add
sub
pop
pushl
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
je
bound
xchg
cli
xchg
sti
add
fiadds
add
mov
jnp
in
xchg
xchg
add
loop
rolb
xor
cltd
mov
push
lea
lea
push
and
add
xor
sub
dec
rol
sub
pop
sub
rol
inc
ror
pop
push
push
push
push
push
call
add
filds
jge
xchg
mov
jbe
test
mov
pop
jmp
test
jne
add
add
add
pop
add
in
movsl
cmp
jge
mov
xchg
in
add
jnp
in
in
lcall
jne
call
push
push
push
call
add
add
add
add
add
jnp
add
add
roll
out
add
js
jl
add
push
lret
add
fimuls
fcomi
stos
add
add
out
roll
cmpsl
shr
add
push
mov
into
add
fbstp
loopne
jle
mov
push
fdivrs
sti
stos
imul
lcall
inc
push
push
shl
add
sub
push
or
not
add
not
add
sub
xor
sub
sub
ror
sub
pop
lea
shl
pop
push
lea
push
push
push
push
push
push
push
call
mov
mov
movsl
stos
add
fiaddl
add
je
out
pop
stos
frstor
add
add
push
pusha
scas
imul
jne
lcall
loopne
lcall
push
push
push
push
push
push
lea
push
call
mov
fadds
mov
in
fiadds
jge
mov
add
xchg
add
ret
sub
add
add
jge
in
add
fsubrp
push
add
add
add
push
ret
mov
jo
mov
add
in
roll
add
sub
pop
call
mov
push
push
push
push
push
push
push
lea
push
push
call
add
addl
pushf
jb
jbe
pop
xchg
mov
nop
ret
andb
pop
mov
add
movsl
pop
fmuls
add
mov
sub
pop
push
push
push
push
push
call
add
ja
popf
add
add
jno
add
add
enter
add
cltd
lret
mov
mov
loopne
add
loop
add
popf
jle
jecxz
add
clc
jnp
lock
lea
add
roll
add
cltd
fldl
add
jecxz
add
pop
hlt
add
push
push
push
push
lea
push
call
jecxz
jno
mov
jbe
popa
mov
add
test
roll
add
in
roll
test
add
xorb
jge
movl
add
mov
roll
fildl
je
add
pop
add
out
add
lcall
ret
add
add
push
push
call
add
pop
xchg
mov
out
cmpsl
fiadds
nop
add
mov
mov
xchg
add
mov
fld
jle
jo
mov
push
add
xchg
add
pop
outsl
rolb
add
filds
mov
add
cld
add
sahf
pop
add
lds
add
shr
add
popf
add
nop
int
add
rcrl
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
jp
out
add
add
add
stos
mov
mov
add
mov
pop
rcll
in
xchg
add
add
add
pop
sub
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
bound
in
xchg
pop
lods
add
add
aam
pop
mov
scas
stos
sti
add
add
call
add
arpl
jp
cmp
mov
rcl
jns
push
lea
addl
add
mov
add
pusha
fldt
jns
add
in
loopne
xor
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
mov
jmp
add
std
ret
jne
mov
add
add
add
mov
mov
clc
mov
add
xchg
test
pop
rcll
add
ja
out
add
add
add
add
add
add
jns
in
fdivr
lcall
les
add
push
push
push
push
call
mov
leave
add
jmp
ret
add
xor
add
movsl
pop
add
cmpsb
enter
je
data16
mov
add
stos
popa
add
je
ret
sub
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
loopne
addb
fcmovne
add
cmpsl
mov
cmpsb
add
mov
push
cmc
xchg
rolb
addb
add
mov
stc
adcb
add
iret
add
mov
xchg
popa
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
mov
add
mov
push
push
jnp
mov
roll
add
fdivp
mov
in
cmpsb
jo
add
mov
clc
xchg
loopne
mov
addl
mov
rolb
addr16
std
mov
add
fwait
mov
popa
fidivrs
in
call
push
lea
push
call
mov
lea
add
jb
test
add
mov
mov
add
fists
jl
pop
mov
mov
add
addr16
fdivl
mov
push
jbe
add
stos
mov
lret
ret
add
add
gs
push
add
icebp
xchg
pop
in
add
pop
mov
les
add
push
push
push
call
out
bound
push
mov
cmc
add
stos
sti
add
je
jl
add
imul
ljmp
add
add
mov
jge
xchg
flds
flds
xchg
xchg
push
test
addr16
pop
add
outsl
push
out
add
roll
je
add
add
ret
add
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
lret
add
stos
add
out
add
clc
test
mov
aad
testl
bound
idiv
add
add
pop
pusha
add
add
jnp
scas
in
xchg
mov
ja
movsl
xchg
add
in
sub
pop
pop
mov
push
push
push
push
push
push
push
push
call
add
pop
add
jecxz
jae
std
jnp
jbe
cmpsl
roll
cwtl
add
clc
stos
lods
iret
add
add
int3
in
loop
add
mov
add
lcall
or
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
lahf
rcrl
neg
scas
jae
orl
add
add
rcrl
mul
ret
add
out
jns
flds
add
addb
sahf
add
add
add
mov
fidivrl
mov
mov
sti
jmp
lcall
les
push
call
add
lods
add
add
add
mov
xchg
xlat
in
mov
add
mov
add
xchg
cltd
add
add
add
rcll
push
in
scas
pusha
add
mov
add
xchg
lock
mov
addr16
xlat
mov
jb
add
int
add
add
jle
iret
add
pop
sub
pop
push
mov
push
push
push
lea
push
push
lea
push
call
add
lahf
add
add
xchg
clc
jecxz
in
icebp
pop
movl
icebp
addb
add
aam
pop
fwait
lret
add
scas
add
in
in
lcall
add
push
push
lea
push
push
push
call
add
xchg
xchg
mov
cld
add
out
flds
mov
pop
add
fstps
lahf
ja
add
pop
fcom
iret
cmpsb
jae
out
out
add
add
add
pop
add
push
push
lea
push
push
call
add
push
rolb
add
lret
jae
in
in
add
add
into
popa
push
add
movl
les
add
pop
add
fcomp
sahf
mov
add
stc
add
popf
jle
pop
rcrl
testb
call
int
fs
in
add
sub
push
push
push
push
lea
push
push
push
lea
push
push
push
call
fwait
xchg
insb
scas
add
mov
add
popf
add
add
push
add
fwait
pop
mov
add
add
lret
mov
movsb
fsubp
add
add
pop
add
mov
in
fdivr
lcall
push
push
call
test
ljmp
mov
jae
add
add
push
pushf
cmc
add
clc
mov
add
mov
add
addr16
scas
add
pop
pushf
addr16
pop
rep
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
lds
add
loope
mov
aam
bound
mov
jge
addl
mov
mov
test
add
pop
jbe
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
call
leave
and
lret
pop
iret
stos
shl
mov
add
loopne
sbb
pop
add
shll
add
fldl
add
add
add
out
in
addb
in
in
lcall
pop
in
add
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
cmpsl
add
out
nop
rolb
out
fxam
add
add
mov
push
add
test
add
jb
popa
jns
cltd
add
add
test
add
mov
js
pop
aad
cld
jb
lods
add
add
add
xchg
in
jge
xchg
add
pushf
std
std
movsb
add
mov
mov
sub
pop
add
mov
push
push
push
push
call
out
fcoms
mov
movsb
hlt
xchg
scas
mov
add
add
add
add
add
lods
cltd
filds
popa
add
add
add
jne
add
add
add
mov
je
add
xorl
add
add
add
mov
add
xchg
mov
sub
pop
xor
push
push
lea
push
push
push
lea
push
call
scas
ljmp
in
add
outsl
lahf
movsl
leave
pop
out
add
cld
add
push
mov
cmpsb
shrl
xchg
roll
incb
sub
pop
add
push
push
call
add
movsb
shl
add
mov
add
add
add
call
xchg
mov
add
mov
andl
add
add
outsl
leave
pop
jbe
pop
pop
add
addr16
xchg
xchg
mov
xchg
sub
pop
mov
xor
push
push
push
push
lea
push
lea
push
lea
push
call
lret
add
mov
hlt
mov
bound
add
test
clc
pop
add
add
add
aam
clc
mov
mov
add
dec
sub
jno
adc
push
notb
das
add
add
pop
push
add
add
add
xchg
lahf
repnz
add
rolb
mov
add
add
mov
stc
jb
push
fadds
add
xchg
lods
mov
sub
pop
xor
push
lea
push
call
add
movb
add
add
pop
data16
add
pop
jo
mov
sbbl
mov
test
aam
in
clc
lcall
les
push
push
lea
push
lea
push
call
cmc
add
hlt
add
scas
add
add
insb
xchg
lods
mov
sti
add
shl
add
fildl
jns
xchg
add
jae
add
into
add
pop
in
lret
mov
lcall
ret
test
cld
sbb
cmp
push
lea
push
push
push
call
leave
test
add
ja
repnz
pop
lock
add
add
icebp
add
mov
out
cmc
mov
call
add
push
push
call
add
cwtl
mov
push
add
add
movsb
jmp
push
add
cld
aam
jl
add
jge
loop
test
mov
rorb
pop
mov
push
push
not
ror
push
xor
add
ror
add
ror
add
sub
ror
shr
lea
pop
sub
lea
pop
push
push
lea
push
push
call
mov
add
jp
cli
add
test
popa
hlt
movl
lea
mov
shrl
push
mov
mov
lods
fistpll
imul
int
add
add
add
loope
je
roll
addl
sub
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
xchg
js
add
fs
imul
add
add
repnz
nop
fwait
out
push
addl
mov
jae
push
test
sar
add
int3
xchg
push
icebp
bound
mov
jmp
movb
add
jo
xchg
mov
mov
add
xchg
or
add
out
lea
shr
push
sub
add
sub
add
add
sub
sub
pop
add
pop
push
sub
add
shr
not
pop
push
push
shr
add
pop
push
call
push
sub
xor
ror
ror
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
ljmp
rcr
idivb
insb
add
add
out
cwtl
jno
add
add
xchg
add
mov
sub
pop
push
mov
push
add
xor
add
not
pop
add
add
push
push
lea
push
lea
push
push
call
fbstp
jecxz
scas
insb
movl
add
ret
add
test
testl
add
add
mov
int
mov
in
lcall
ret
cmovno
add
jno
adc
push
push
push
push
push
lea
push
call
add
fdiv
add
jge
add
push
add
add
add
add
push
jle
xchg
mov
add
add
add
add
in
sahf
jno
pop
in
xorl
addl
idivl
add
lcall
loopne
xor
push
push
push
push
lea
push
lea
push
push
push
push
call
rolb
add
add
add
add
mov
add
add
int
movsl
mov
push
in
mov
fdivrl
add
imull
add
insb
add
pop
add
mov
fcompl
les
add
push
shr
pop
add
push
inc
pop
push
push
inc
lea
pop
mov
push
push
push
push
call
add
cld
add
xchg
ljmpw
call
lcall
pusha
imul
add
shr
add
hlt
cmpsb
lods
xchg
add
add
add
in
imul
js
in
lods
add
pop
add
clc
ljmp
add
push
push
push
lea
push
lea
push
push
push
lea
push
call
push
cli
add
addl
cwtl
mov
stc
add
jecxz
xlat
add
loopne
jbe
xlat
shlb
add
adc
mov
add
jne
lret
mov
add
add
mov
sub
pop
add
push
sub
sub
add
pop
add
push
inc
shl
pop
pop
push
add
rol
pop
mov
xor
push
lea
push
push
push
push
lea
push
call
pop
add
add
xchg
mov
clc
jmp
add
pop
sub
shlb
mov
add
cmpsl
std
add
xlat
rorl
add
add
cli
insb
add
add
test
mov
call
rep
push
push
lea
push
push
push
push
call
push
aad
test
popf
add
add
add
add
testb
lcall
ljmp
pop
loope
test
jae
jb
sub
pop
mov
xor
push
sub
shl
pop
or
je
push
inc
pop
mov
push
push
push
push
push
call
fidivl
aad
mov
mov
add
mov
aam
add
cltd
add
add
cmc
add
add
scas
add
add
push
xchg
icebp
rolb
mov
xchg
push
into
add
rcl
add
sub
pop
xor
push
push
push
push
call
stos
add
stos
add
xchg
add
cli
and
add
pop
push
mov
scas
mov
stos
fnstenv
repnz
add
aam
test
pop
add
fstpl
sub
pop
add
push
push
lea
push
push
push
call
add
addl
xchg
add
popa
cmc
pop
add
add
lds
mov
lds
out
cltd
mov
xchg
add
sahf
test
ja
test
add
add
fiadds
add
xchg
jl
sub
pop
mov
push
push
push
push
push
push
call
in
jnp
add
xchg
mov
mov
nop
add
push
jp
filds
mov
outsl
sti
rclb
jae
stc
fistpl
loopne
test
test
push
mov
pop
in
jecxz
xchg
cli
add
into
andb
cli
lods
cmpsl
cli
ljmp
nop
jge
repnz
fstp
add
imulb
lcall
adc
push
push
call
add
jnp
add
pop
add
add
xchg
outsl
mov
add
xchg
add
add
add
lods
add
ljmp
lahf
bound
add
aam
leave
imul
add
push
fildl
addr16
loop
add
imul
sub
pop
add
push
pop
add
add
push
push
push
push
push
push
call
mov
fwait
xchg
add
add
mov
fiadds
mov
adc
push
add
js
mov
icebp
popf
lds
add
call
or
jno
adc
data16
adc
ja
push
lea
push
push
call
add
add
movsb
xchg
outsl
add
pop
xchg
add
mov
popa
pushf
movsb
add
add
xchg
mov
add
add
notb
mov
jns
add
addl
lds
xchg
add
cmpsl
add
add
pop
sub
pop
xor
push
push
lea
push
push
push
push
lea
push
push
push
call
add
leave
popa
idivl
add
scas
add
lcall
jae
bound
jae
fiadds
call
add
iret
repnz
pop
add
push
lea
push
lea
push
call
mov
sti
mov
in
add
rcrb
add
lock
add
cld
js
add
loopne
mov
push
stc
xchg
add
pop
test
mov
mov
xchg
gs
loopne
mov
or
ljmp
lock
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
ja
add
clc
shrl
filds
push
add
add
mov
cld
out
fadds
jns
les
test
fwait
push
les
sub
pop
pop
push
pop
rep
push
sub
dec
ror
pop
mov
xor
push
push
lea
push
push
call
into
add
add
lods
add
icebp
add
add
lds
add
lea
add
jecxz
repnz
add
hlt
add
add
jo
pop
add
add
xchg
orb
test
add
sub
pop
or
je
push
push
push
push
push
push
lea
push
push
push
call
pop
cltd
fcoml
cmpsb
mov
movsl
jmp
jno
add
mov
jns
sarb
add
push
add
add
add
add
pushf
iret
ret
add
add
add
push
xchg
cwtl
add
scas
gs
iret
add
rolb
push
outsl
jnp
add
add
xchg
faddl
xchg
arpl
fdivr
lcall
repz
push
push
call
add
test
push
xchg
faddl
int3
add
jge
out
add
add
jge
xlat
out
mov
add
fwait
jo
mov
add
lcall
jo
mov
add
add
jle
cmpsl
add
movsl
push
mov
stos
mov
hlt
pop
add
push
push
push
push
push
lea
push
push
push
call
add
add
fsubs
jne
add
fwait
mov
add
add
stos
add
in
outsw
ret
mov
test
scas
mov
jae
lds
lcall
movb
add
push
ror
rol
dec
sub
pop
rep
push
push
push
push
push
push
call
add
jl
bound
stc
filds
ja
xchg
jo
mov
filds
jne
jmp
push
lods
sub
pop
pop
push
push
add
add
push
push
pop
add
rol
sub
rol
pop
add
dec
add
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pusha
mov
add
add
out
in
scas
testb
add
jo
push
mov
lock
je
add
add
scas
jo
add
add
push
add
pop
fsubl
add
add
movsl
mov
mov
sub
pop
pop
mov
push
dec
ror
pop
mov
mov
push
dec
pop
jmp
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
test
lret
mov
scas
roll
push
imul
jae
out
ret
pop
add
add
add
lcall
add
add
add
add
jmp
add
sti
mov
mov
popa
icebp
fsubl
add
sub
pop
mov
add
push
sub
rol
dec
rol
pop
push
push
shl
shl
xor
add
pop
push
push
shr
lea
pop
push
push
push
push
lea
push
push
push
call
hlt
xchg
add
jae
insb
call
add
add
jbe
xchg
xchg
je
add
in
testl
ljmp
pop
push
mov
push
push
push
push
lea
push
push
push
push
push
call
add
in
add
add
xchg
scas
add
add
loope
les
addb
hlt
add
add
bound
popf
mov
jecxz
add
add
popa
ja
ja
js
fldl
fwait
add
lock
sti
gs
pop
pop
push
add
not
pop
pop
push
push
push
push
push
push
push
lea
push
call
jae
lcall
add
bound
popf
add
jae
add
jne
push
jl
add
mov
popa
pop
xlat
add
add
add
add
xchg
mov
add
add
call
sub
pop
pop
pop
push
xor
not
pop
leave
ret
push
lea
push
push
push
lea
push
push
push
push
push
call
imul
mov
push
shr
test
mov
add
add
mov
cltd
xlat
fcmovnb
loope
mov
push
mov
push
push
lea
push
push
push
push
push
lea
push
call
jbe
fs
mov
loop
in
pop
filds
add
add
lds
adcb
jno
roll
sub
pop
add
push
rol
lea
sub
pop
push
push
xor
pop
push
push
push
call
add
add
popa
add
add
pop
les
add
lcall
test
add
into
pop
add
out
sti
pop
push
add
les
enter
add
xlat
mov
add
lcall
push
push
sub
dec
sub
pop
movl
addl
push
push
push
push
push
call
xchg
add
jnp
mov
ret
mov
sar
add
in
je
add
add
add
addl
flds
add
pusha
je
subb
movsb
neg
mov
add
add
add
test
je
mov
push
lea
shl
add
pop
pop
push
shl
sub
lea
pop
pop
pop
push
ror
shl
add
pop
pop
push
not
shl
sub
pop
leave
push
inc
not
shr
sub
pop
ret
push
push
add
sub
inc
xor
pop
mov
push
push
lea
push
push
call
rcrb
lds
add
mov
push
in
lea
add
les
aam
rcll
add
insb
pop
add
add
movl
mov
ret
stc
outsl
fnsave
sub
pop
add
push
push
push
push
push
call
add
scas
arpl
add
lods
mov
push
nop
loop
push
mov
add
mov
mov
add
cmpsb
add
pop
add
add
mov
add
add
sti
add
cmpsl
and
clc
add
push
add
xlat
add
add
rcr
add
lcall
push
push
lea
push
push
call
loope
lds
add
add
push
add
add
scas
mov
iret
mov
add
int3
add
lret
loopne
add
lcall
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
mov
xchg
mov
add
out
mov
cli
add
add
loop
add
std
mov
fdivr
lcall
inc
cld
add
add
addl
push
lea
push
push
push
push
push
call
jae
add
jmp
push
add
out
divb
lcall
xchg
jo
mov
mov
les
test
add
pop
add
add
mov
pushf
ret
add
scas
loop
add
lret
lods
mov
stos
pop
push
xchg
out
mov
pop
mov
add
add
mov
push
sub
pop
push
call
push
push
lea
push
lea
push
push
lea
push
push
call
jge
add
pop
add
mov
into
add
out
add
jl
add
add
out
mov
fistpll
hlt
add
fildl
mov
xchg
add
xchg
add
pop
shlb
add
insb
add
add
pop
flds
testl
in
rolb
insb
xchg
add
add
add
inc
cld
pushl
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
sti
add
jne
int3
jle
add
add
add
je
add
add
popa
flds
add
cmpsl
popa
jecxz
data16
ljmp
push
inc
pop
call
push
push
push
call
push
je
mov
add
imul
mov
jo
jne
add
add
add
add
sahf
add
lcall
jge
add
test
lcall
push
push
lea
push
push
push
lea
push
call
mov
std
xchg
je
out
push
test
mov
sarb
add
jbe
xchg
add
stos
add
lcall
add
pop
xchg
add
mov
pop
pop
pop
push
lea
push
push
call
mov
popf
add
test
notb
add
add
push
test
mov
add
add
aam
add
lds
mov
add
stos
add
stos
out
add
pop
sub
pop
pop
leave
push
rol
add
not
pop
ret
push
push
sub
dec
pop
mov
add
push
lea
lea
pop
push
push
push
not
dec
rol
add
pop
push
push
push
lea
sub
pop
movl
push
push
push
push
push
lea
push
push
lea
push
push
push
call
imul
add
flds
imul
add
push
add
gs
ja
add
fiaddl
add
xchg
add
divl
xchg
add
lcall
add
idiv
call
dec
lea
push
push
lea
push
push
call
pop
jge
cwtl
shl
add
add
push
add
cmc
add
pop
add
mov
call
je
xchg
push
pop
mov
add
push
push
shl
pop
call
subl
push
pop
cmpl
jne
pop
push
inc
inc
pop
pop
pop
push
lea
not
sub
pop
pop
push
sub
pop
leave
ret
push
push
call
mov
fwait
pop
nop
add
nop
mov
jne
fiadds
mov
mov
add
hlt
xchg
add
lahf
add
shrb
add
in
clc
pop
push
mov
push
inc
rol
pop
add
push
push
push
lea
push
push
lea
push
push
push
call
int
add
add
add
add
add
mov
ficomps
icebp
pop
jge
lcall
lea
fdivrl
xlat
add
fwait
add
add
add
mov
lret
out
roll
push
add
jns
push
fsub
rolb
add
add
insb
in
in
in
push
push
push
pop
push
push
push
push
push
push
call
push
in
jnp
mov
fwait
xchg
mov
mov
push
add
mov
and
pop
add
add
jae
in
in
mov
out
push
jae
mov
mov
jne
add
jns
sahf
sub
pop
mov
lea
push
add
dec
pop
sub
push
rol
pop
mov
push
lea
push
push
lea
push
push
push
push
call
add
cld
std
addr16
xchg
fldl
lods
cmpsb
jp
scas
int
clc
imul
pop
movl
mov
add
cltd
fcmovnbe
add
jmp
push
nop
add
pop
pop
add
jge
repnz
add
add
add
jb
add
pop
add
add
mov
add
lcall
call
out
push
push
push
push
call
add
in
add
add
add
jmp
add
cltd
add
add
xchg
pusha
add
add
add
jo
add
add
add
push
add
add
add
add
pushf
aad
jle
negl
add
call
add
mov
push
not
add
sub
pop
mov
push
push
push
push
push
push
push
lea
push
call
mov
loope
lea
lods
icebp
stos
add
icebp
test
mov
xchg
mov
add
mov
mov
ficoml
jp
add
add
add
add
test
sub
pop
add
push
push
push
lea
push
call
mov
add
jmp
add
js
clc
jl
mov
mov
hlt
add
mov
push
push
enter
scas
add
in
lock
add
push
push
push
push
push
push
call
add
add
add
push
ffreep
shlb
add
aam
rolb
add
mov
add
add
lea
add
inc
add
add
addr16
push
lea
push
lea
push
push
push
push
push
call
push
icebp
add
cwtl
leave
mov
aad
jne
mov
xchg
add
out
movsl
lock
add
mov
out
sahf
add
fiadds
add
in
add
ja
icebp
movsl
add
out
jae
add
lods
add
lea
lcall
nop
nop
nop
nop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
fldcw
add
test
jmp
sti
push
mov
in
push
add
jb
loop
sahf
roll
add
add
mov
aad
in
fdivr
lcall
pop
outsl
jne
cmp
jne
push
push
push
push
push
push
lea
push
push
call
add
add
insb
out
pop
shrb
xchg
xchg
js
add
popa
mov
add
add
popl
test
add
add
jno
add
add
enter
add
add
add
stc
mov
stc
add
sub
pop
mov
push
push
lea
push
push
push
call
add
add
xchg
add
pop
add
add
bound
fidivs
add
data16
popl
fsub
jp
add
pop
add
add
lcall
add
add
add
jp
add
push
push
lea
push
push
push
push
lea
push
call
add
jmp
mov
jne
mov
push
enter
movsl
les
imul
cld
push
fsubs
jno
add
imul
add
fiadds
add
add
shr
add
jb
add
add
popf
movsb
loop
add
loopne
add
lock
mov
in
mov
push
push
push
push
lea
push
lea
push
call
loop
add
jo
loopne
shlb
mov
movsb
jge
mov
add
add
cwtl
add
leave
mov
jp
xlat
add
ja
add
add
fwait
mov
sub
pop
mov
sub
jne
push
push
push
lea
push
push
call
jle
imul
mov
mov
pop
fldl
pusha
insb
add
push
js
imull
add
hlt
std
test
lret
add
jne
jl
out
add
sti
testb
in
lcall
inc
adc
push
scas
pop
movl
push
push
call
fistpll
ffree
imul
mov
popf
outsl
xchg
push
add
int
lcall
pop
movsb
lds
jmp
popl
add
add
testl
clc
lcall
jecxz
add
mov
push
push
push
lea
push
push
push
push
lea
push
call
out
add
aam
pop
jnp
add
add
mov
hlt
add
add
lahf
add
rolb
lcall
nop
mov
add
push
rol
shl
shr
ror
pop
cmp
jne
push
not
pop
mov
push
add
sub
inc
dec
pop
movl
push
push
lea
push
call
jns
add
push
lea
icebp
push
xchg
add
addr16
add
push
add
push
add
xchg
add
in
filds
add
mov
roll
mov
test
sub
pop
jmp
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
loop
std
add
add
add
add
nop
add
add
add
pop
test
ficoml
add
add
mulb
mov
add
nop
jl
add
add
sub
pop
mov
cmpw
jne
push
push
lea
push
lea
push
push
push
push
call
add
add
push
add
jne
add
xchg
add
pop
add
xchg
add
hlt
add
fcmovnbe
arpl
push
lcall
mov
fildl
add
mov
pop
cld
pop
ficompl
hlt
push
mov
in
lcall
inc
adc
dec
push
lea
push
call
add
add
mov
add
fiaddl
add
loop
pop
pop
testl
fisttpl
mov
add
add
hlt
lret
je
jns
cmpsl
lock
add
add
mov
add
sti
mov
lock
lcall
add
movsb
or
add
out
lcall
pushl
push
push
push
push
push
lea
push
call
clc
add
ja
aam
jns
movsl
addl
add
add
add
call
xchg
iret
add
fisttpl
add
add
add
ljmp
sub
pop
pop
push
ror
dec
pop
mov
push
add
pop
mov
mov
push
push
rol
not
rol
push
or
inc
add
lea
sub
inc
pop
dec
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
leave
add
xchg
in
rolb
push
jo
jb
lea
test
subb
sarl
xlat
lcall
mov
pop
lds
into
add
add
mov
lret
add
popa
add
add
cli
loopne
xchg
call
in
fcomps
call
push
shr
pop
cmpl
je
push
push
rol
inc
ror
lea
push
or
not
add
sub
lea
sub
add
add
pop
sub
rol
not
pop
push
not
pop
push
push
sub
xor
add
pop
call
cmpl
je
push
push
lea
push
or
not
add
sub
not
sub
pop
sub
shl
inc
dec
pop
push
dec
sub
pop
push
call
push
push
push
push
push
push
push
push
call
jp
addb
filds
mov
add
std
add
pushf
add
add
mov
push
frstor
add
add
add
jmp
add
mov
add
enter
in
loopne
cmpl
je
push
push
ror
not
ror
push
push
pop
add
shr
sub
not
shl
not
inc
pop
xor
sub
shr
add
pop
push
rol
rol
not
pop
push
push
push
push
push
call
cmpsb
xchg
jo
call
test
mov
lods
add
add
mov
cli
add
push
add
faddl
pop
jne
add
addb
mov
add
add
add
pop
call
cmpl
je
push
push
lea
dec
ror
push
or
not
add
sub
add
sub
lea
dec
pop
inc
xor
pop
push
ror
lea
pop
push
call
push
shr
add
pop
cmpl
je
push
push
push
sub
add
ror
add
shr
sub
sub
pop
add
xor
pop
push
push
push
push
push
push
push
push
push
push
call
push
scas
addr16
ret
cli
mov
mov
add
add
nop
add
add
add
add
add
imul
in
fcomps
call
push
pop
cmpl
je
push
push
dec
inc
push
sub
add
shr
add
not
sub
add
rol
pop
shl
pop
push
ror
add
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
mov
fnsave
add
loopne
repnz
out
add
add
add
imul
out
test
mov
add
mov
add
lds
jl
mov
pop
iret
lret
in
fdivr
lcall
pop
cmp
add
int3
je
push
push
sub
push
push
pop
add
add
sub
sub
shl
pop
xor
sub
shl
pop
push
push
push
push
push
call
loop
scas
add
jecxz
popa
imul
popf
mov
add
jmp
add
add
test
lods
xchg
add
add
jmp
pop
add
add
add
lcall
push
pop
call
cmpl
je
push
push
lea
sub
dec
push
or
inc
add
inc
ror
sub
rol
xor
ror
pop
sub
inc
sub
pop
push
push
push
call
add
lea
jbe
in
add
pop
movsl
jns
add
fcoml
cmpsl
add
cld
in
iret
arpl
add
lcall
outsl
add
lcall
call
push
shl
pop
cmpl
je
push
push
shl
xor
shr
push
xor
add
sub
lea
add
sub
pop
sub
shr
rol
sub
pop
push
push
push
push
push
push
call
loope
iret
mov
push
mov
add
int
enter
add
add
add
add
mov
filds
fdivrl
lret
je
stos
xchg
add
add
jmp
pop
fiadds
add
add
push
dec
ror
inc
pop
call
push
xor
pop
cmpl
je
push
push
dec
push
push
pop
add
rol
dec
dec
sub
shr
pop
ror
inc
dec
pop
push
ror
sub
add
pop
push
call
push
push
lea
push
push
lea
push
lea
push
call
fiadds
cwtl
into
add
arpl
pusha
filds
add
jle
add
in
add
add
add
imul
into
add
movsb
lea
imul
mov
add
jecxz
mov
ljmp
js
xor
ret
test
xor
out
ja
inc
push
or
inc
add
inc
sub
not
pop
dec
add
pop
push
add
shr
not
pop
push
call
push
push
push
push
lea
push
lea
push
call
add
jp
add
add
jnp
pop
in
loopne
add
imul
add
add
push
jmp
add
cmc
js
jp
sub
pop
cmpl
je
push
push
lea
add
add
sub
push
sub
add
add
sub
not
add
add
sub
pop
inc
add
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jmp
pop
clc
add
popl
icebp
add
pop
bound
jge
pop
add
push
add
jl
fadds
add
add
cli
enter
in
fdivr
lcall
push
add
pop
call
push
lea
push
push
push
lea
push
push
push
call
lcall
push
add
add
add
add
jbe
mov
pop
add
out
cmpsl
int
add
add
out
jge
add
jmp
roll
add
add
andb
lret
stos
test
jecxz
add
push
sub
pop
cmpl
jne
mov
push
dec
lea
add
pop
movl
push
sub
inc
pop
jmp
push
pop
xor
push
shl
lea
sub
ror
pop
pop
push
rol
pop
pop
pop
push
sub
shr
sub
pop
pop
push
push
push
call
add
add
add
add
add
cltd
hlt
add
add
add
cmpb
add
jnp
add
popf
add
cmpsb
pop
push
mov
sti
add
je
add
add
pusha
shr
pop
xchg
fwait
add
mov
mov
add
in
hlt
pop
leave
push
not
xor
rol
pop
ret
push
sub
not
pop
push
push
push
push
push
lea
push
push
call
add
mov
add
ja
mov
add
pop
push
xchg
sarl
leave
movsb
ret
leave
add
add
mov
orl
mov
add
xchg
int
add
add
xchg
pop
mov
andb
push
in
call
push
push
lea
push
push
push
push
push
push
call
add
rcrb
add
mov
mov
add
lret
data16
fiaddl
stos
add
xchg
jns
mov
add
imul
xlat
add
add
in
add
in
test
add
add
pop
rcll
ror
sub
pop
add
push
add
ror
sub
not
pop
cmpl
jne
push
push
ror
not
sub
push
or
inc
add
ror
rol
sub
shr
rol
add
sub
pop
lea
pop
push
lea
push
push
call
push
cld
add
leave
mov
testb
pop
xchg
add
add
iret
add
cmpsb
lds
add
repnz
jae
in
hlt
lcall
jne
call
push
shl
ror
shl
pop
push
push
push
push
call
add
mov
cmpsb
xchg
out
out
jle
fcompl
add
add
lods
add
pop
jae
out
add
pop
add
clc
rcll
cwtl
add
add
fdivr
shll
insb
add
je
add
jne
mov
addl
sub
pop
call
jmp
push
lea
add
xor
xor
pop
cmpl
je
push
push
push
push
push
lea
push
push
push
call
add
aam
scas
call
fstl
add
hlt
add
mov
fucomip
add
push
lods
nop
push
hlt
add
mov
add
add
divb
jmp
add
push
jb
xchg
add
ficoms
add
lret
shl
mov
push
shrb
jns
in
loopne
lcall
jge
add
add
push
shl
xor
pop
leave
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
push
addr16
add
loop
add
mov
jge
push
push
mov
sarb
add
xchg
add
push
arpl
hlt
out
push
scas
je
test
cmpsb
push
fiadds
sub
pop
add
push
xor
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
push
add
stos
mov
xlat
add
arpl
add
aam
add
add
icebp
ja
scas
add
mov
flds
pop
push
jae
in
fdivr
lcall
push
sub
pop
pop
push
inc
ror
pop
pop
push
push
push
push
lea
push
push
push
call
lock
jne
xchg
add
les
jle
add
jo
fstpl
loop
xchg
add
notl
add
add
lea
add
in
in
lcall
push
push
push
push
push
call
mov
scas
mov
nop
filds
add
js
add
mov
test
lret
add
stos
into
out
add
add
push
pusha
mov
aam
leave
js
jne
add
enter
fisubl
in
in
pop
add
push
pop
ret
push
rol
dec
pop
jmp
cmpl
jne
push
push
sub
push
xor
add
add
xor
sub
shl
shr
lea
pop
ror
dec
pop
push
pop
pushl
push
push
call
add
add
add
rcl
icebp
test
out
nop
bound
cltd
add
add
add
add
add
lret
mov
int3
add
mov
test
pop
lret
leave
add
add
sub
pop
call
push
push
push
push
push
call
add
mov
jbe
out
addl
add
jmp
add
cmpsl
rol
push
scas
bnd
pop
jns
lods
loope
add
add
add
xchg
sarl
add
add
add
in
in
lcall
add
or
call
pop
ror
lea
mov
cltd
roll
divl
add
bound
add
add
in
xorb
add
add
call
call
push
push
push
push
push
push
push
lea
push
push
push
call
add
jmp
imul
mov
add
add
push
push
mov
pusha
insb
add
movsl
add
add
popa
add
xorl
popa
and
add
test
add
push
lea
push
push
push
lea
push
lea
push
push
call
out
out
add
mov
cmpsl
add
lods
add
xchg
movsb
add
les
mov
push
mov
pop
add
add
loopne
lds
mov
sub
pop
mov
push
ror
ror
add
pop
mov
push
lea
push
push
lea
push
push
call
cltd
add
testb
subb
mov
fldl
add
jmp
stc
popa
mov
mov
add
repnz
rolb
push
add
lods
pop
pop
add
add
jmp
add
cmpsb
data16
mov
add
add
add
loopne
add
push
addl
int3
addl
in
lcall
push
push
lea
inc
shr
push
and
add
ror
shl
shr
sub
sub
add
sub
pop
lea
lea
pop
push
lea
lea
pop
pushl
push
push
lea
push
push
call
add
mov
jnp
cld
movsl
add
add
jae
add
add
add
add
jnp
data16
ljmp
mov
mov
add
add
adc
add
jp
icebp
andb
add
add
subb
add
pop
mov
lock
lcall
lret
sub
push
push
lea
xor
rol
push
xor
add
not
ror
sub
shl
lea
pop
shr
pop
push
rol
pop
pushl
push
push
lea
push
push
call
jno
add
add
stos
pushf
add
loopne
fadds
cwtl
add
cli
push
mov
add
add
jns
fs
add
fldl
mov
imul
add
into
add
add
pushf
sarl
lcall
xor
lea
push
push
push
call
push
xchg
out
cmc
lds
cmpl
mov
push
add
fwait
call
add
mov
pop
add
loope
lea
add
faddl
add
pop
add
in
push
pop
addb
add
add
add
add
stc
jp
js
lea
add
lcall
shrb
mov
ror
sub
push
sub
add
not
shl
sub
shr
pop
ror
dec
sub
pop
push
lea
push
lea
push
push
push
lea
push
call
mov
add
add
cmpsl
test
fidivl
push
add
add
pop
insb
push
mov
imul
or
push
call
mov
lods
add
xchg
mov
add
add
add
add
aam
add
add
lret
jmp
add
add
add
add
add
icebp
lock
add
mov
test
pop
addb
clc
ljmp
in
clc
lcall
cmc
sub
add
shrb
popa
pop
dec
push
inc
sub
add
sub
push
or
inc
add
sub
dec
sub
sub
sub
pop
pop
push
push
push
call
mov
xchg
into
xchg
add
add
test
shlb
cmpsb
jb
add
mov
mov
in
hlt
pop
pushl
call
push
add
pop
call
push
push
add
rol
push
or
not
add
sub
not
sub
xor
lea
shl
pop
add
not
shl
pop
push
add
xor
ror
lea
pop
pushl
call
push
push
push
push
lea
push
push
call
imul
xchg
cli
fstps
lea
add
add
lret
push
add
cmpsb
jnp
test
clc
add
je
xchg
sub
pop
call
push
push
ror
shl
push
sub
add
add
sub
sub
pop
not
not
pop
push
dec
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
push
push
call
fsubp
roll
fwait
mov
div
push
add
jnp
push
push
rolb
fcmovu
add
fs
add
leave
add
add
hlt
add
add
add
pop
add
testb
jmp
out
add
mov
add
add
add
lea
mov
fcomps
xor
add
push
xor
lea
pop
call
push
push
not
add
not
push
or
inc
add
lea
sub
rol
shr
lea
pop
inc
lea
pop
push
push
lea
push
call
jmp
nop
mov
add
mov
popl
add
in
mov
arpl
add
add
fldcw
mov
lock
scas
shrb
add
add
in
sub
pop
pushl
push
lea
push
push
push
push
call
mov
pop
add
filds
imul
int3
add
iret
cwtl
lock
add
clc
loope
add
add
jp
mov
add
add
insb
mov
lods
call
add
add
xchg
mov
ret
pop
mov
add
addb
add
sub
pop
call
push
push
call
pushf
stos
movb
xchg
add
add
mov
push
rolb
mov
mov
add
cwtl
add
roll
add
add
add
add
mov
push
xchg
mov
jmp
jo
push
imul
clc
pop
call
push
push
xor
add
add
push
xor
add
sub
shr
lea
shr
sub
rol
shl
add
sub
pop
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
add
imul
add
jp
out
jnp
add
mov
fistpl
js
push
iret
add
add
push
iret
mov
in
fcompl
jne
call
push
shr
rol
shr
pop
call
push
push
push
or
not
add
rol
inc
shl
xor
sub
dec
shl
xor
pop
add
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
pop
jmp
fmull
lods
fadds
lods
add
xchg
push
pop
add
jecxz
imul
mov
add
ficoms
scas
leave
add
xchg
add
roll
add
mov
jne
push
add
stos
add
add
xchg
loopne
push
pop
mov
add
add
cmc
iret
insb
sub
pop
pushl
call
push
lea
push
push
push
call
shll
mov
loope
mov
iret
add
call
cld
test
mov
mov
pushf
add
xchg
add
add
push
mov
fcmovne
add
mov
jge
pop
add
lcall
shrb
add
mov
inc
push
and
add
inc
shr
add
sub
shr
rol
pop
shr
pop
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
ja
add
add
call
add
add
push
xchg
add
jo
out
push
add
jmp
in
add
add
sti
mov
xchg
lods
aad
add
add
jbe
jbe
add
mov
mov
stc
shl
out
leave
cmpsb
push
addb
push
in
jle
loopne
add
lcall
jne
push
push
lea
push
call
add
imul
mov
push
push
lret
mov
add
fdivs
out
add
enter
add
cwtl
add
mov
add
add
fiaddl
add
lds
in
hlt
lcall
push
add
push
lea
pop
lea
push
sub
pop
push
push
dec
shl
inc
pop
call
push
push
ror
push
push
pop
add
shr
rol
ror
inc
sub
inc
shr
pop
not
pop
push
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
call
loopne
jecxz
shr
add
call
add
mov
add
imul
mov
add
jle
add
jge
cmpsl
jo
ret
add
mov
mov
insb
add
add
push
and
push
push
sub
ror
sub
sub
push
sub
add
dec
ror
rol
sub
shl
add
add
ror
pop
lea
add
pop
push
inc
add
sub
xor
pop
pushl
call
push
push
push
push
lea
push
push
push
lea
push
call
mov
push
add
jbe
add
mov
add
add
cltd
cmpsb
and
add
push
push
mov
lcall
shrb
pop
stos
push
shr
push
or
not
add
ror
inc
sub
xor
shr
pop
ror
pop
push
lea
pop
pushl
call
push
shl
shl
sub
inc
pop
call
push
lea
push
push
push
push
push
call
add
cmpsb
lret
add
add
mov
lds
rorl
mov
sti
stos
add
fisttpll
add
push
jne
xchg
fidivrl
movsl
mov
add
add
popf
xchg
filds
mov
xchg
add
test
lret
sti
push
add
add
jecxz
add
xchg
into
jne
add
shlb
add
in
call
lea
push
push
xor
dec
push
or
inc
add
rol
add
shr
rol
sub
lea
sub
ror
pop
add
pop
push
add
pop
pushl
push
dec
lea
xor
inc
pop
call
push
push
lea
push
push
push
push
call
mov
ret
xchg
scas
add
mulb
data16
jb
mov
mov
xchg
jmp
mov
add
mov
add
add
jecxz
push
add
add
mov
jl
sub
pop
push
push
ror
pop
call
push
push
shl
sub
not
push
sub
add
not
not
lea
sub
lea
not
ror
add
pop
sub
sub
pop
push
push
push
push
push
push
push
push
call
clc
jl
add
fadds
rolb
add
add
add
jecxz
xchg
mov
add
fisubrs
add
movsl
ja
add
testl
test
add
pusha
ja
push
add
add
add
in
loopne
lcall
jne
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
mov
xchg
pushf
add
mov
xchg
in
movsb
add
add
fdivp
add
aam
int3
jne
cmpsl
xchg
add
add
sub
pop
call
push
push
push
push
push
lea
push
call
add
outsl
add
out
add
lret
addl
mov
add
add
iret
jns
add
add
sbb
repnz
out
sarb
int3
add
les
out
in
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
cmp
mov
test
leave
in
add
loope
sbb
jb
cltd
popa
out
jne
add
add
add
xchg
push
fmuls
cmc
cli
cltd
testl
mov
add
add
add
add
add
push
in
pop
bound
sub
pop
mov
push
push
xor
shr
inc
push
sub
add
shl
inc
sub
lea
shl
inc
lea
pop
lea
rol
sub
pop
push
push
call
add
cmpsl
add
add
add
jnp
add
cmpsl
add
add
add
gs
add
add
add
popl
add
add
add
pop
pushl
push
shr
pop
call
push
lea
push
call
ja
mov
add
add
les
imull
loopne
lock
add
jb
add
add
mov
add
add
add
xlat
sbbb
cwtl
xlat
nop
mov
xchg
add
add
push
add
add
mov
lcall
add
push
push
call
add
fcomps
add
pop
add
pop
scas
stos
insb
add
add
add
stos
test
insb
push
push
nop
mov
sub
pop
call
push
push
shr
shr
add
push
xor
add
shr
shr
shl
lea
sub
add
pop
add
sub
pop
push
xor
xor
pop
pushl
push
push
push
push
push
push
call
mov
lcall
out
push
pop
xchg
push
jns
add
push
mov
add
add
test
lds
add
add
pusha
fnsave
mov
sarl
mov
jmp
add
add
mov
add
popf
add
add
popf
mov
stos
push
add
jb
add
add
add
add
pop
pop
add
push
push
add
add
push
sub
add
lea
sub
xor
xor
lea
add
pop
sub
pop
push
push
inc
push
and
add
not
sub
sub
shl
add
pop
shr
pop
push
push
lea
push
call
fldl
add
addb
xchg
add
je
pop
fnclex
add
mov
mov
add
add
add
lds
mov
add
fxch
shrb
in
hlt
lcall
shrb
xchg
outsb
mov
leave
mov
into
ror
push
push
pop
add
dec
shl
sub
shr
pop
shr
dec
pop
push
push
push
call
add
dec
push
imul
insb
into
add
add
faddl
mov
add
add
lea
xlat
add
add
lret
movl
push
add
loope
lock
pop
jecxz
add
add
add
lcall
jne
push
pop
call
push
push
call
mov
add
mov
add
add
leave
cmpsb
xlat
add
push
aad
add
add
add
add
add
call
mov
add
add
add
imul
in
clc
lcall
inc
hlt
push
push
call
jo
call
jmp
jmp
testl
push
in
add
xchg
sti
mov
add
add
ror
pop
pop
mov
divl
mov
sar
movsb
mov
add
add
lcall
pushf
and
call
inc
xchg
mov
push
push
push
lea
push
push
push
push
call
pusha
xchg
cmpsb
fcoml
add
add
sbbl
pop
add
add
lret
jb
add
fistps
fcompl
test
call
inc
rclb
mov
mov
call
popl
mov
add
add
repnz
icebp
add
mov
icebp
lret
add
notb
add
shrb
add
test
add
rclb
clc
jmp
clc
add
add
add
add
add
add
sti
sub
pop
push
push
add
pop
push
push
dec
rol
pop
push
push
push
push
push
push
push
push
push
call
push
add
add
jae
roll
out
jmp
add
cmpsl
rcr
add
add
scas
add
add
movl
negb
in
loopne
lcall
add
mov
rcrl
cli
push
push
push
lea
push
lea
push
push
push
push
push
call
cmp
add
lret
mov
add
add
subl
test
enter
add
insb
add
insb
into
popf
filds
sub
pop
push
push
push
call
out
add
mov
nop
gs
popa
mov
push
data16
add
pop
add
add
imul
add
xchg
faddl
scas
add
add
and
jge
sub
jbe
add
lcall
add
les
add
push
lea
shr
shl
pop
pushl
push
sub
not
add
add
pop
push
push
push
push
call
pushf
in
jge
add
je
mov
jmp
xchg
lds
je
int3
sti
les
mov
mov
ja
fiaddl
fsubp
lds
repnz
add
jle
add
addb
push
mov
pop
testb
add
sub
pop
call
push
push
add
push
sub
add
shl
add
sub
lea
pop
shr
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
outsl
mov
rorl
add
fldl
add
lcall
mov
subb
add
enter
jns
jne
test
jbe
mov
sub
pop
pushl
push
add
sub
pop
call
call
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
sti
xchg
in
jbe
rorl
xchg
test
add
stos
add
mov
into
add
pop
mov
roll
fbld
imul
add
movb
mov
add
xchg
popa
add
add
mov
jp
in
fcomps
inc
clc
push
pop
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
lcall
add
clc
into
pop
jnp
mov
mov
add
into
add
mov
pop
insb
pop
add
scas
popa
xchg
fsubrs
add
add
jle
add
add
xlat
add
xlat
pushf
mov
loopne
lcall
jne
push
add
pop
jmp
push
shr
pop
call
push
push
shl
inc
push
xor
add
dec
sub
lea
xor
pop
add
rol
shr
pop
push
push
push
push
push
push
call
bnd
hlt
std
add
jge
add
stos
shll
add
add
add
add
rclb
lret
add
cltd
add
jmp
sub
pop
pushl
push
push
push
call
cli
add
ljmp
ret
jns
mov
lea
mov
pop
add
add
cltd
in
ljmp
add
add
add
mov
test
mov
roll
add
loopne
addl
data16
popf
push
out
add
xchg
sbb
add
jmp
call
movsb
sti
lea
push
push
call
ja
mov
movb
in
mov
add
jge
add
add
add
jp
add
pushf
sub
pop
push
push
shl
sub
add
pop
call
push
rol
add
shl
pop
mov
lea
push
push
ror
ror
dec
push
or
inc
add
sub
sub
rol
not
pop
pop
push
lea
push
call
movsb
push
in
push
les
clc
add
xchg
add
add
add
add
jecxz
add
mov
addr16
fisttpll
cltd
mov
icebp
add
out
gs
jns
in
clc
pop
pushl
call
push
add
shl
not
pop
push
push
add
add
pop
call
push
push
add
shr
push
or
not
add
lea
dec
sub
sub
pop
lea
shl
rol
pop
push
shl
inc
pop
pushl
push
add
pop
call
push
lea
shr
inc
pop
call
push
lea
push
lea
push
push
push
push
lea
push
call
pop
hlt
bound
xchg
add
adc
add
imul
scas
add
add
add
add
add
jb
mov
add
xchg
mov
out
roll
mov
gs
mov
add
sahf
outsl
fwait
lret
push
push
xchg
lock
add
pop
in
scas
sub
pop
mov
push
lea
sub
pop
lea
push
push
inc
inc
not
push
and
add
shl
sub
add
add
sub
ror
pop
lea
sub
shr
pop
push
xor
inc
shl
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
imul
shl
fsubp
xchg
imul
roll
call
mov
call
aad
jnp
xchg
add
jns
add
sub
pop
call
lea
push
not
dec
shr
shl
pop
push
push
push
push
push
call
lret
add
incb
or
pop
xchg
cmc
mov
ret
add
xchg
jge
jae
pushf
gs
add
hlt
lcall
add
das
lea
push
push
push
push
push
push
push
call
add
test
add
mov
add
rcr
add
jae
add
aam
add
jns
add
test
js
roll
add
add
loope
jno
add
add
add
add
movsl
jno
pop
fcoms
jb
add
add
mov
cwtl
addb
hlt
push
push
add
ror
push
or
not
add
dec
sub
shr
shl
lea
pop
inc
shr
inc
pop
push
dec
pop
push
push
add
pop
call
push
push
sub
ror
dec
xor
push
push
pop
add
sub
sub
sub
pop
pop
push
shr
sub
add
pop
pushl
call
push
shl
rol
ror
pop
push
call
push
push
shl
push
sub
add
not
lea
xor
shr
sub
shl
xor
pop
pop
push
sub
pop
pushl
push
lea
push
push
push
push
push
push
call
add
rorl
stc
add
in
mov
data16
xchg
mov
add
pop
add
mov
stc
mov
add
add
addr16
in
popa
jle
add
int
fmul
loop
stos
jo
mov
xchg
scas
add
add
push
in
clc
sub
pop
call
call
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
push
mov
mov
fadds
pop
in
pusha
fscale
add
add
mov
add
mov
pushf
push
add
add
addb
loope
add
cltd
add
add
clc
xlat
cli
add
add
ret
add
jmp
pusha
pop
mov
movsl
add
add
add
pop
jmp
push
rol
xor
pop
pushl
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
jo
add
pusha
in
lods
add
add
push
call
mov
enter
add
lock
jge
jmp
add
enter
add
mov
add
outsl
in
pop
add
add
add
add
rcrl
gs
add
add
sub
pop
jmp
push
push
xor
push
or
inc
add
not
inc
not
sub
ror
sub
dec
add
pop
lea
rol
dec
lea
pop
push
push
push
push
push
push
push
push
push
call
push
scas
jecxz
add
pushf
add
add
push
add
mov
aam
fisubrl
mov
bound
add
bound
add
scas
arpl
popa
add
lcall
jne
push
lea
push
call
repnz
nop
add
xchg
add
lock
rolb
xchg
mov
mov
mov
add
add
lds
lcall
adc
add
adc
push
push
call
add
mov
addl
mov
add
add
imul
jecxz
add
add
add
add
insb
scas
movb
add
scas
add
jb
add
cli
add
add
cmpb
add
xchg
imul
add
xor
out
push
and
push
lea
push
push
push
lea
push
call
testl
jbe
add
mov
int3
add
mov
add
add
imul
loope
add
fwait
in
push
add
mov
scas
add
pop
add
pop
cld
roll
jecxz
fs
add
mov
jo
pop
fwait
add
shrb
test
xlat
push
rol
dec
push
xor
add
sub
sub
add
ror
dec
pop
sub
pop
push
inc
ror
xor
sub
pop
pushl
push
add
sub
pop
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
in
mov
add
add
mov
add
add
add
rolb
add
add
scas
sub
xchg
add
in
fcomps
push
push
push
push
push
lea
push
call
add
add
add
add
pop
add
call
lea
sub
mov
outsl
add
add
ljmp
addl
ret
lcall
xchg
add
mov
mov
push
add
add
in
call
shr
ror
not
pop
leave
push
push
push
push
push
lea
push
lea
push
push
call
test
add
push
xchg
std
fistl
fcomi
out
add
mov
jb
pop
add
add
lret
mov
add
jle
mov
add
icebp
int3
jmp
add
add
push
add
ljmp
pop
add
push
lea
push
call
add
pop
add
enter
lret
add
mov
mov
add
cli
add
lahf
add
add
in
in
add
add
push
enter
add
pop
mov
icebp
add
add
add
add
cltd
jne
imul
mov
jns
add
add
jnp
scas
xchg
testl
add
xlat
sub
pop
pop
push
lea
push
call
addr16
fcoml
add
add
out
push
add
mov
jle
in
mov
add
add
enter
add
stc
cmpsb
add
add
lock
add
cwtl
aam
add
add
lahf
add
in
add
in
clc
lcall
push
push
push
call
add
jo
andl
add
add
scas
add
add
movsb
jmp
jnp
fwait
lock
push
test
imul
xchg
mov
jge
mov
in
hlt
lcall
push
push
lea
push
call
mov
pop
loop
add
pop
mov
scas
iret
add
add
add
lret
test
mov
loopne
ret
mov
pop
pop
push
push
push
lea
push
push
push
push
call
nop
jmp
jecxz
pop
stos
jo
add
add
arpl
jp
add
jge
call
lret
add
negb
mov
push
mov
jb
sub
pop
leave
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
cwtl
out
add
add
addb
mov
xchg
mov
loopne
add
add
pusha
lods
insb
add
pop
fidivl
add
add
add
out
stc
mov
add
mov
pop
xchg
arpl
sti
ljmp
imul
mov
add
sub
pop
ret
push
push
call
add
icebp
pop
add
mov
add
lahf
lahf
out
add
shll
test
pop
scas
int
jbe
call
sarl
leave
push
shr
ror
pop
ret
push
pop
push
push
push
push
push
push
call
testl
fwait
movsb
add
mov
in
add
jb
add
test
add
add
xchg
enter
arpl
push
flds
add
mov
lcall
in
push
add
add
pop
cmpl
jne
push
ror
shl
sub
rol
pop
mov
jmp
push
sub
dec
xor
pop
mov
and
push
push
call
add
add
mov
pop
xlat
ja
xchg
add
add
mov
imul
xchg
mov
jecxz
mov
jae
mov
xchg
popa
js
mov
add
int3
jl
add
mov
add
jns
add
faddl
add
pushf
add
add
xchg
xchg
mov
lods
add
add
add
add
stc
popf
add
insb
fs
sub
pop
xor
push
sub
lea
pop
xor
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jne
addr16
call
data16
shl
stos
push
call
push
out
icebp
push
aam
add
add
mov
in
add
in
test
test
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
faddl
out
std
add
addl
movsb
jb
push
mov
add
cmp
jl
mov
add
int
push
test
pushf
add
outsl
jbe
add
sub
pop
xor
push
lea
pop
dec
sub
push
sub
add
pop
jmp
sub
push
push
lea
push
push
push
call
add
mov
add
addl
add
popl
add
add
mov
add
add
cld
in
roll
add
add
sub
pop
pushl
push
push
push
push
push
call
jbe
mov
mov
ljmp
fildll
pusha
pop
mov
add
add
add
add
mov
pop
mov
lcall
push
add
sub
rol
pop
sub
cmp
jne
push
push
call
push
mov
std
add
je
icebp
jle
loopne
je
into
xlat
jne
int
fldcw
add
jns
mov
mov
add
cmpsb
add
cltd
lret
sub
pop
mov
lea
push
push
call
add
mov
add
scas
mov
push
add
pop
in
pushf
les
add
loopne
out
push
mov
ja
lea
add
add
add
gs
ja
mov
add
add
pop
push
add
js
add
add
sub
pop
sub
push
push
push
push
call
out
scas
xchg
popf
imul
mov
fucom
add
addl
jecxz
subb
add
add
add
push
cwtl
pop
xchg
nop
fs
mov
or
lret
jmp
pop
sub
pushl
push
push
lea
push
push
push
push
push
call
add
enter
add
add
add
add
add
pop
mov
stc
add
bound
jmp
fldl
lcall
pop
pop
push
push
call
add
push
lret
bnd
push
xchg
jnp
xchg
jle
loop
xchg
pop
repnz
add
add
arpl
mov
add
shr
push
not
not
pop
and
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
data16
add
jns
pop
sti
incb
mov
in
stos
in
mov
mov
add
lcall
add
ret
iret
sti
into
add
fistps
add
add
add
cmc
flds
lcall
jmp
cmp
jne
push
push
lea
push
call
xchg
mov
add
vaddpd
or
js
pop
iret
loope
les
mov
mov
stc
add
in
addb
ljmp
add
sub
pop
leave
ret
push
push
push
push
push
push
push
call
js
imul
add
lds
movsb
add
push
add
add
lods
add
out
pop
add
jl
out
jo
add
lcall
push
ror
pop
mov
add
push
lea
sub
add
add
pop
push
push
push
sub
ror
pop
push
push
push
push
push
push
call
orl
add
add
add
std
add
pushf
add
add
jecxz
add
push
outsl
imul
add
out
loop
popl
xchg
popf
add
loope
jbe
add
add
in
add
mov
push
call
lcall
push
dec
rol
pop
push
push
shl
not
ror
pop
mov
lea
push
xor
not
pop
sub
push
push
push
push
lea
push
call
add
cmpsl
cltd
fadds
gs
mov
push
mov
add
add
out
cmpsl
add
cli
filds
mov
aam
mov
lea
add
repnz
movsb
add
add
add
fcomps
add
in
mov
pop
roll
add
add
sub
pop
mov
shr
push
lea
push
push
push
call
fst
stc
jmp
add
mov
add
rcl
movsl
add
popa
add
add
add
shlb
add
mov
add
xchg
jl
cwtl
addb
mov
add
ljmp
add
in
jae
add
add
call
add
push
dec
lea
pop
mov
push
lea
push
push
push
lea
push
call
test
mov
loope
push
add
push
fiadds
mov
add
pusha
pusha
fcom
roll
addb
aam
add
iret
movl
addb
pop
ret
push
fwait
add
stc
pop
add
aam
mov
add
roll
mov
in
in
pop
add
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
push
insb
cmpsl
pop
push
jns
std
pop
clc
cmpsb
out
add
subl
into
add
jne
lock
add
add
add
mov
xchg
add
mov
pop
loopne
rcl
mov
out
add
rcrb
add
stos
jge
in
fcompl
jnp
add
push
shr
sub
sub
pop
xor
mov
push
inc
shl
pop
and
rol
push
push
call
pop
fisubrs
add
loope
add
scas
add
mov
mov
pop
lock
xchg
lret
mov
push
mov
clc
mov
add
add
jmp
add
add
nop
ljmp
clc
lcall
rolb
lea
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
out
faddl
mov
add
ljmp
add
mov
leave
add
testb
add
add
lret
add
xchg
pusha
sahf
outsl
add
jbe
mov
mov
mov
pop
jne
add
in
addr16
in
jbe
add
in
fcomps
add
or
cmpb
jne
push
push
push
push
push
call
add
popa
mov
mov
add
mov
add
jbe
incb
add
add
in
jo
add
add
mov
rolb
add
sub
pop
add
cmp
je
push
ror
sub
pop
add
push
ror
lea
rol
pop
cmpl
jne
xor
push
shl
sub
pop
pop
push
add
dec
pop
pop
pop
push
not
pop
pop
push
push
push
push
push
push
push
call
je
clc
les
imul
add
jnp
add
ret
add
mov
lretw
je
add
mov
add
add
mov
add
add
add
xlat
mov
add
push
add
jnp
in
lock
lcall
push
not
pop
leave
ret
push
pop
mov
push
add
pop
add
push
push
shl
shr
pop
push
add
push
push
push
call
jne
cld
jne
out
mov
add
ja
hlt
add
add
pop
lds
add
test
pop
push
add
sahf
mov
add
push
hlt
pop
mov
testw
push
push
push
lea
push
push
lea
push
push
push
call
add
in
add
push
add
add
lret
mov
push
add
push
test
outsl
ret
add
rolb
add
outsl
popa
xchg
mov
pusha
insb
add
rcl
cmpsb
mov
add
movsb
pushf
data16
into
xchg
lods
in
add
xlat
add
mov
jo
xchg
mov
pop
sti
movb
add
int
add
pop
pop
pop
push
add
pop
mov
push
push
push
push
push
push
push
call
call
leave
add
fldl
add
add
loop
stos
cwtl
fwait
add
add
mov
cmc
js
jmp
add
xlat
pop
mov
leave
jae
loop
push
test
add
sahf
hlt
call
test
pop
movsl
cmp
lea
push
push
lea
push
lea
push
push
push
call
movsb
stos
jns
mov
rcrb
fwait
add
add
push
pop
mov
add
add
add
insb
addr16
test
mov
sub
pop
xor
pop
push
push
call
aam
stos
imul
add
lods
add
fildl
add
push
lahf
add
mov
pop
mov
add
addb
add
add
sti
fiadds
add
add
jle
lods
mov
add
imul
mov
add
pop
push
sub
lea
shr
shr
pop
pop
push
xor
pop
pop
push
rol
add
sub
add
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
loopne
xchg
add
jecxz
clc
add
arpl
jecxz
add
stc
loop
jmp
rolb
add
mov
add
iret
popf
fadds
add
ja
add
add
rolb
bound
ret
push
push
call
mov
scas
sar
shr
sahf
addb
jmp
nop
add
pop
pop
je
add
pop
add
popl
pop
add
bound
add
je
imul
loope
cmpsl
in
pop
xlat
mov
sub
pop
push
push
rol
shr
pop
mov
push
lea
xor
pop
add
push
sub
ror
pop
push
push
lea
push
lea
push
push
push
push
call
push
pop
ret
push
outsl
lret
add
mov
in
add
imul
sti
in
addl
add
add
out
add
out
aad
int3
aad
add
jb
les
in
call
or
mov
cmp
daa
push
push
push
push
push
push
push
call
add
out
add
shlb
cmpsl
hlt
nop
add
add
sbb
roll
add
mov
lods
rolb
ja
leave
add
lock
add
mov
jae
add
add
sahf
stos
mov
fbld
mov
lods
iret
add
ljmp
sub
pop
push
push
dec
inc
not
pop
push
push
not
shr
xor
sub
pop
mov
push
push
sub
inc
pop
pop
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
jnp
add
scas
cmpsb
ja
jb
mov
add
addl
add
cwtl
xchg
xchg
add
fld
popf
loope
mov
sub
pop
sub
mov
push
shl
sub
pop
shr
push
ror
add
add
pop
add
push
dec
sub
rol
pop
mov
push
push
push
lea
push
push
push
push
call
lods
insb
sahf
out
add
add
add
ja
fstps
addb
add
mov
lret
ljmp
add
add
filds
lock
xchg
add
ljmp
scas
testb
repnz
icebp
xorb
mov
scas
mov
lcall
fsts
clc
ljmp
xchg
sub
push
push
lea
push
lea
push
lea
push
call
cmpsl
cli
movsl
mov
add
add
xchg
cltd
mov
add
mov
js
add
scas
add
testb
repnz
push
add
add
lret
add
jne
xchg
lods
shlb
lcall
jae
push
not
add
pop
popl
mov
push
lea
push
lea
push
push
call
out
bound
test
mov
add
mov
jno
mov
add
add
rol
mov
add
icebp
xchg
mov
add
fstpt
pop
popl
jae
pop
add
arpl
in
mov
add
mov
test
add
add
les
add
add
sub
pop
add
push
push
push
call
add
add
pusha
xchg
fwait
popf
nop
ror
add
arpl
cmpsl
add
jmp
lret
add
add
out
test
fiadds
clc
int
leave
pop
iret
add
push
ja
lods
add
shrb
sub
pop
xor
lea
push
xor
pop
mov
add
push
push
push
lea
push
push
push
push
lea
push
call
add
add
push
add
add
add
in
mov
fildl
icebp
shrl
jp
add
outsl
aam
repnz
push
hlt
add
jae
in
loopne
lcall
rclb
push
push
push
push
call
add
pop
add
mov
jno
add
add
add
stos
xchg
out
mov
add
add
sahf
mov
leave
jmp
add
loopne
mov
add
lcall
add
std
add
loopne
mov
push
int
in
in
mov
in
call
push
inc
add
add
pop
nop
push
not
xor
pop
nop
push
push
lea
push
lea
push
push
call
imul
mov
add
add
test
add
add
add
jle
out
add
mov
xchg
stos
lcall
fadds
fildl
sub
roll
int
add
cwtl
add
lods
add
add
jp
mov
add
fwait
add
in
xchg
lret
sub
pop
xor
nop
push
ror
sub
rol
pop
nop
inc
push
push
call
aad
cltd
xchg
add
leave
push
mov
in
pop
js
pop
lcall
add
add
cli
mov
lea
add
add
ret
pop
test
mov
add
loopne
imulb
adcl
add
xchg
add
sub
pop
nop
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
test
loope
lret
icebp
imul
add
add
movsl
add
addl
mov
add
add
add
add
add
push
add
add
mov
jmp
jb
ret
imul
add
add
add
js
pop
test
scas
sub
pop
nop
push
add
dec
dec
shl
pop
cmpb
jne
push
pop
add
push
rol
lea
inc
lea
pop
nop
push
dec
rol
sub
add
pop
nop
push
push
push
lea
push
lea
push
push
call
push
add
mov
add
rol
push
pusha
add
add
pushf
mov
pop
mov
rolb
fadds
mov
fsubrs
add
ret
in
call
cmp
je
push
add
add
xor
pop
nop
push
push
push
push
lea
push
push
push
push
push
call
flds
add
add
push
add
arpl
xlat
mov
pop
add
add
add
add
out
mov
mov
add
add
mov
add
fldenvs
add
add
lret
addb
add
pop
inc
push
push
call
jmp
mov
clc
push
movb
push
mov
push
addb
imul
cmc
xchg
popa
je
push
popl
aad
loopne
cmpsl
add
add
pop
add
add
scas
lds
xchg
clc
orl
into
lods
insb
fiaddl
sub
pop
nop
push
rol
shl
xor
xor
pop
nop
push
push
call
jle
cmc
xlat
add
stos
add
shll
add
push
jae
sbbb
addl
jge
cmc
test
add
sbbl
push
push
mov
fadds
into
add
push
lret
add
add
mov
mov
add
addb
popa
stc
clc
pop
add
ljmp
mov
sub
pop
cmp
jb
push
add
pop
xor
push
push
push
push
call
int
mov
mov
mov
in
icebp
jae
cmpsl
pushf
add
sahf
addl
out
add
mov
add
arpl
clc
fmull
lcall
pop
add
add
nop
push
lea
push
push
push
push
push
push
lea
push
call
mov
jmp
add
fsts
in
add
aad
fcoml
add
popa
jmp
jge
add
lcall
rcll
pop
out
xchg
out
push
call
aam
mov
jle
add
add
add
mov
mov
pop
xchg
push
add
jno
push
add
mov
add
jnp
cld
test
shl
add
pop
movzwl
push
push
push
lea
push
push
call
pushf
mov
fwait
aad
add
jmp
jl
movsb
std
mov
fs
add
jae
test
fldl
into
js
mov
add
add
add
outsl
mov
add
enter
add
cltd
add
mov
add
filds
leave
test
ja
nop
jmp
mov
add
jge
sub
pop
mov
push
lea
push
push
lea
push
call
in
ljmp
add
addb
cmc
fs
lods
in
insb
jnp
xchg
mov
cwtl
push
push
addl
xchg
add
rorl
lea
push
push
call
xchg
test
out
add
stos
add
shlb
call
add
push
add
lock
leavew
jne
lods
out
add
add
add
in
add
cli
add
jp
add
leave
xor
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
out
add
add
out
in
cld
mov
aam
add
gs
add
add
aam
lods
std
ljmp
test
add
imul
push
fdivl
push
outsl
fbld
add
sub
pop
shl
push
sub
pop
xor
push
push
push
lea
push
push
push
call
jecxz
add
mov
mov
add
add
hlt
mov
lods
movsl
xchg
add
lods
mov
add
mov
add
add
addb
bound
add
add
int
add
add
leave
pop
xchg
in
sub
pop
shl
xor
push
lea
push
push
call
jmp
lock
pop
push
add
flds
add
add
add
in
icebp
imul
add
add
add
lods
iret
jge
lods
lods
add
movsl
add
lds
add
add
add
add
add
add
rol
mov
in
hlt
lcall
loope
xor
push
sub
pop
mov
push
ror
inc
pop
add
pop
push
dec
lea
shl
not
pop
pop
push
push
call
mov
mov
std
push
push
pop
add
cli
stc
lcall
addl
cmpsb
mov
add
out
mov
push
cmpsb
add
pop
fadds
data16
cwtl
bound
add
testl
in
mov
sub
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
add
mov
scas
mov
lahf
cli
add
add
mov
in
rorl
mov
fcmovne
std
in
lods
rcrb
add
in
fcompl
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
in
push
add
out
cmpsb
add
mov
xchg
add
mov
mov
in
testl
cmc
jp
loope
add
into
xorl
add
lods
jecxz
sahf
add
into
mov
add
fdivr
lcall
or
push
push
push
call
add
loopne
mulb
push
add
add
jo
imul
add
add
add
imul
jmp
jle
pop
ret
fildl
add
lods
sub
pop
push
mov
push
push
push
push
call
add
into
jb
add
add
sti
jge
imul
outsl
add
add
cmc
loope
add
jp
add
mov
add
mov
movsl
out
add
mov
add
push
ret
add
enter
add
jb
in
lock
push
push
push
shl
sub
pop
push
push
ror
pop
push
mov
push
ror
pop
mov
mov
push
sub
pop
test
je
mov
push
push
push
lea
push
push
push
push
call
ljmp
jmp
cld
add
mov
test
mov
cltd
lret
add
pop
pop
fwait
andl
add
push
lock
mov
add
bound
push
mov
lcall
testb
cmpsl
push
add
push
lea
push
push
push
push
push
call
cltd
add
fstl
fstpt
add
jge
add
push
add
add
jge
add
add
add
std
fadds
add
lock
cmpsb
xchg
mov
add
add
movsb
lahf
mov
jge
pop
add
add
xchg
jmp
add
jp
stos
shrl
lcall
notl
jle
lds
ljmp
push
push
push
push
call
mov
mov
xchg
sar
stos
ljmp
add
in
loopne
lret
ja
push
arpl
mov
data16
add
add
cli
js
sub
mov
hlt
scas
add
dec
or
pop
push
xor
shl
pop
inc
cmp
je
push
push
lea
push
lea
push
push
push
call
add
add
add
test
scas
rolw
enter
add
push
stos
jo
andl
xchg
add
rorb
fiaddl
add
push
xor
shl
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
cmpsl
fwait
ljmp
js
add
add
add
add
add
pop
call
push
sub
pop
inc
push
inc
add
shl
pop
cmp
je
test
jne
push
push
push
push
push
push
call
mov
add
movb
add
fldl
fildl
add
hlt
mov
add
fadds
lock
add
je
nop
lock
add
loope
lahf
cmpsb
lcall
movsl
add
fistpl
fildl
sub
pop
xor
push
push
lea
push
push
push
call
add
add
cli
add
pushf
add
mov
fsubl
lods
add
xlat
add
pusha
jmp
add
add
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
scas
add
in
jnp
add
fwait
add
add
add
ficompl
clc
jmp
shl
xchg
in
cmpsl
xlat
lret
in
push
push
add
add
fxam
add
test
into
loopne
fwait
mov
lret
pusha
frstor
add
test
xchg
add
add
ret
in
fcompl
push
add
xor
pop
pop
push
sub
pop
pop
push
push
push
push
lea
push
call
xchg
icebp
jmp
popa
data16
add
add
add
add
add
jbe
out
lcall
mov
add
add
add
add
add
leave
cwtl
rcl
add
add
add
add
mov
mov
mov
add
push
sub
lea
pop
ret
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
lea
add
add
jae
fstp
add
add
add
add
add
clc
les
add
add
xor
jb
push
jp
mov
stc
ljmp
out
add
add
out
pop
int
add
cmp
jne
push
sub
rol
pop
lea
push
push
push
call
add
add
mov
mov
pop
add
xchg
push
mov
add
add
add
lcall
popa
add
adc
mov
push
call
ja
mov
mov
jecxz
add
movl
subb
std
add
add
jae
add
add
add
lods
add
flds
filds
into
push
xchg
lock
ja
add
lea
lcall
in
test
add
add
ror
pop
mov
add
push
push
push
push
lea
push
push
push
push
push
call
adcl
add
xchg
fmuls
add
jno
mov
add
mov
add
push
aad
push
bnd
mov
push
clc
add
xchg
scas
mov
pop
in
stc
mov
sub
pop
cmp
jne
push
push
push
lea
push
push
push
call
add
mov
add
lret
mov
mov
add
imul
int
ljmp
arpl
outsl
in
add
add
add
push
fidivs
pop
add
icebp
lahf
cld
mov
test
mov
push
push
push
push
lea
push
call
mov
lds
adcb
popa
xchg
lret
mov
mov
add
add
pusha
jb
xor
xchg
add
mov
sub
pop
test
je
push
lea
push
lea
push
push
call
imul
in
add
add
add
mov
in
cld
pop
add
add
add
add
add
pusha
int
pusha
out
add
add
sti
sub
pop
mov
push
push
push
push
push
lea
push
call
stc
shl
jmp
imul
push
mov
add
xchg
add
stos
hlt
jb
int
mov
data16
add
add
test
push
add
call
push
add
sub
add
pop
cmp
je
jmp
push
push
push
lea
push
call
mul
add
stc
push
add
imul
add
xchg
add
mov
add
push
out
add
add
jecxz
jmp
popf
jno
cltd
add
enter
xchg
addl
mov
add
add
sub
pop
xor
pop
push
push
push
lea
push
push
push
push
lea
push
call
insb
add
cld
mov
arpl
jno
jnp
jno
add
add
out
jge
stc
in
roll
in
mov
add
add
mov
hlt
add
jo
mov
ljmp
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
push
mov
add
clc
mov
popf
add
add
add
repnz
add
jecxz
add
ja
ffreep
cltd
cwtl
mov
push
pop
add
jb
js
add
hlt
jnp
cmpsb
add
sub
pop
pop
push
push
push
push
call
cli
mov
test
jno
shr
in
add
add
aam
sahf
stos
xchg
add
fiaddl
lods
loopne
mov
add
mov
add
rolb
int3
fildl
popa
add
mov
mov
mov
in
shll
repnz
add
add
lock
lcall
ret
push
push
push
push
push
push
lea
push
push
call
mov
mov
lcall
add
lret
mov
lret
incb
add
lret
lds
add
add
add
notb
std
add
xchg
pop
arpl
lcall
inc
lcall
push
push
push
lea
push
push
push
call
std
roll
mov
add
add
push
repnz
add
rcl
xchg
mov
mov
repnz
xchg
add
jecxz
add
loop
fiadds
xchg
add
cmpsb
mov
outsl
jae
popa
add
stos
mov
rcrl
mov
xchg
add
add
lcall
pop
push
push
call
mov
add
add
add
add
add
loop
xchg
outsl
add
add
add
pushf
stc
sti
add
mov
mov
add
add
insb
xchg
add
add
push
lock
mov
add
add
roll
mov
sub
pop
pop
leave
push
lea
push
push
push
push
call
add
test
mov
jb
add
arpl
sti
xchg
out
in
add
lret
mov
add
in
fsubr
add
add
jl
add
mov
test
jae
pop
xchg
xchg
mov
imul
add
ret
push
ror
xor
pop
mov
push
lea
push
push
push
push
push
lea
push
push
call
add
add
fwait
shl
int
add
outsl
add
mov
add
shlb
std
in
mov
mov
add
fiadds
jl
loop
add
fwait
add
add
scas
ja
add
add
add
mov
into
add
jnp
push
mov
jbe
add
add
add
sub
pop
pop
push
lea
push
push
push
push
call
push
sahf
out
jge
push
loope
movsl
lret
add
pop
jle
addr16
add
scas
jns
test
sub
pop
pop
push
shl
dec
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
mov
in
mov
push
add
mov
push
jnp
cmpsl
add
xchg
mov
add
fidivl
push
push
add
add
add
add
loop
add
add
pop
add
add
loopne
push
mov
mov
loopne
lcall
ret
xor
cmp
mov
add
adc
and
adc
inc
cmp
sbb
cmp
push
std
cmp
xor
adc
jb
adc
add
add
mov
mov
inc
enter
aas
popa
inc
in
rorb
adc
or
mov
mov
dec
mov
adc
aas
fistl
push
add
movsb
jae
pop
test
sahf
mov
sbb
or
int3
cld
dec
mov
or
out
movsb
fcompl
xchg
inc
fdivl
lods
and
ss
sub
in
sub
test
adc
adc
jo
loope
add
iret
fs
mov
inc
lret
jb
xor
xor
mov
xchg
ret
push
test
mov
xchg
xor
or
jl
in
js
sbb
push
out
adc
pop
xchg
rorl
xor
ljmp
push
dec
fsubl
nop
insl
dec
push
imul
cld
pop
gs
sbb
mov
sub
dec
cmp
fdivl
add
adc
xor
cmpsl
int3
std
sahf
mov
mov
in
movsl
sbb
loop
int
popa
sbb
mov
js
inc
sub
dec
adc
stos
adcb
xchg
dec
mov
xor
stc
scas
cmp
cmc
call
pop
mov
cmpsb
in
mov
xchg
cwtl
pushf
into
mov
aaa
lock
jne
pop
popl
adc
and
adc
cmpsl
inc
inc
imul
imul
sarl
jle
or
mov
push
pushf
fidivs
icebp
das
mov
loop
ficomps
dec
psrlq
jle
fstl
iret
aaa
jle
gs
shll
outsl
fists
fbld
xor
xor
addb
and
cmp
lds
in
jmp
and
sbb
dec
gs
gs
jnp
mov
push
and
cmp
sub
nop
in
sub
xor
sbb
das
dec
jnp
and
push
mov
sbb
leave
into
xchg
aad
out
subl
aas
ret
xchg
adc
push
or
push
stos
lret
aaa
mov
hlt
jno,pn
in
mov
mov
stc
cmpsb
cwtl
addr16
stc
push
test
jle
add
add
sub
xor
pop
je
js
cmp
jecxz
mov
jae
cmp
push
fcmovnb
ret
sbb
jle
mov
push
mov
sub
jg
mov
loop
mov
adc
sbb
movsl
and
dec
xchg
cmc
dec
adc
xchg
mov
mov
mov
test
adc
dec
bound
jns
test
and
sub
xor
mull
xchg
mov
mov
inc
and
sahf
insb
dec
insl
pop
in
sub
icebp
mov
nop
mov
repnz
adc
rclb
fidivrs
sbb
pop
mov
dec
sbb
cli
add
lcall
in
sub
lods
fs
fsts
cmpsb
push
adc
mov
iret
inc
decl
sub
xchg
mov
pop
sbb
test
pop
sub
enter
dec
sub
loope
cs
outsl
fdivrl
xchg
das
adcl
les
ljmp
lock
into
cld
imul
mov
jecxz
cmp
xchg
xchg
xor
xor
gs
cwtl
clc
imul
test
jecxz
pop
xchg
or
test
test
fsubl
daa
lret
xchg
dec
in
push
cs
std
jle
push
das
xchg
hlt
jo
mov
cmpsb
cmpsb
jae,pt
outsb
movsl
loope
xor
sub
mov
jecxz
xorb
ret
mov
inc
das
mov
push
add
jg
mov
sar
mov
jle
out
cmpsb
push
mov
std
es
es
pushf
cmc
loope
test
daa
sti
inc
sbb
push
hlt
call
bound
icebp
pusha
dec
ret
out
in
std
jp
lahf
mov
add
decl
into
arpl
and
cmpsb
ret
out
fistpll
outsl
shrl
xchg
adcb
shrb
lret
mov
xor
mov
push
shlb
or
xlat
mov
scas
push
mov
push
xor
xor
dec
lods
das
jae
mov
das
mov
xor
in
in
lea
sub
pop
adc
push
pop
faddl
or
test
pushf
xchg
sbb
ss
shl
cmp
call
dec
mov
jl
push
jmp
clc
cmp
icebp
inc
xchg
fstl
gs
pop
inc
outsl
jo
mov
inc
loope
loop
cld
into
aam
shll
sub
leave
mov
and
mov
rcrl
mov
and
xlat
pusha
push
enter
testl
test
sub
xor
pusha
xchg
jp
sbb
jns
mov
jnp
mov
imul
leave
in
adc
mov
sbb
sbb
dec
mov
ljmp
jmp
fwait
test
pop
adc
scas
sbb
xchg
dec
lds
ds
aas
or
add
fdivrs
jmp
stos
jae
rorb
lcall
or
adc
pop
adc
jno
fldt
mov
mov
xlat
inc
cwtl
arpl
push
lea
dec
mov
mov
push
cs
les
jle
les
loop
or
stos
ja
jbe
movsl
inc
sub
lods
and
inc
mov
sbb
mov
add
addl
adc
add
ljmp
out
dec
flds
mov
and
pop
xor
lock
je
leave
pop
daa
mov
std
pop
ja
and
dec
out
test
or
inc
or
jns
lcall
xchg
cli
inc
push
sub
icebp
lea
shlb
mov
movsb
cmp
jo
add
frstor
inc
xchg
iret
shr
adc
sahf
movsb
outsl
lods
pushf
push
in
out
mov
sbb
adc
hlt
jecxz
push
or
xchg
pop
adc
stos
mov
movsb
jmp
or
movsl
lods
shrb
sbbb
add
ljmp
outsl
fsubl
mov
les
dec
and
rep
popa
xor
lea
xchg
sub
xchg
pusha
or
mov
jb
xchg
int
frstpm(287
xchg
sbb
cmp
pop
cli
mov
adc
xchg
xchg
cmp
cmc
mov
sub
stc
adc
jno
xor
cwtl
loop
mov
xchg
adc
rcrl
cmpsb
leave
push
push
pop
scas
push
adc
or
mov
sbb
dec
test
jno
and
test
sbb
mov
mov
cmp
pop
mov
fistpl
xlat
push
jle
ja
icebp
nop
jnp
jp
aam
add
icebp
xlat
jecxz
les
mov
mov
sbb
dec
andb
lods
xchg
movsl
mov
add
mov
lea
adc
lret
cmpsl
inc
ficoml
cmpsl
or
lahf
dec
mov
sahf
ja
inc
mov
in
cmp
movsl
pcmpeqd
out
repz
iret
pop
mov
mov
jo
lahf
mov
adcb
mov
xchg
jp
imul
or
adc
hlt
insb
and
icebp
dec
inc
into
fists
aad
fdivl
mov
incl
push
xchg
enter
or
dec
popf
fildll
mov
arpl
repz
sub
lea
in
stos
repnz
aad
cmpsb
jb
pushf
jmp
push
push
push
imul
jae
mov
add
leave
mov
mov
and
jbe
xchg
mov
fs
cltd
pop
pop
mov
nop
lret
gs
sti
xor
loopne
ljmp
loope
xchg
inc
mov
nop
xor
xchg
jae
add
stos
out
dec
mov
xchg
rcll
mov
popa
lods
addr16
aad
or
outsb
aas
outsl
out
push
and
adc
test
push
and
add
insl
repnz
xor
xor
jecxz
outsb
pop
dec
sbb
test
addr16
pop
nop
jo
or
fmuls
fcmovu
je
xor
jae
mov
mov
and
dec
mov
push
dec
jmp
cld
sahf
sbb
pop
cmpsl
int
cmc
imul
mov
rol
or
fsubrl
and
jno
in
mov
xchg
cwtl
xchg
mov
mov
inc
mov
notl
leave
jp
adc
dec
sub
std
cmp
sub
ss
mov
xor
sbb
std
test
adc
or
inc
push
fimuls
in
sub
test
inc
cmp
dec
imul
add
popa
jnp
mov
int
mov
xor
add
movsl
cmp
pop
sub
mov
push
jge
jns
mov
loopne
insb
sub
xchg
fsubl
mov
mov
dec
jle
fs
fcomip
inc
mov
push
mov
add
cs
mov
inc
and
arpl
outsl
jge
jp
push
dec
lcall
fsubs
and
adc
fnstenv
loope
movsb
aam
pop
pop
dec
loop
pop
pop
mov
push
clc
bound
shlb
ret
mov
jbe
pop
sbb
popa
dec
jle
dec
xchg
add
data16
inc
sbb
cmpsb
sbb
outsl
or
rcll
xor
pusha
jns
cmpsb
jp
push
inc
push
aas
hlt
mov
gs
aas
mov
inc
push
lods
je
adc
mov
sub
repz
arpl
pop
or
jmp
xor
out
pop
add
imul
push
or
mov
cltd
leave
repz
sub
mov
or
inc
sbb
fcmovnbe
icebp
dec
pusha
jl
ret
fwait
addr16
rcl
jb
sti
mov
xor
add
mov
inc
inc
xchg
sub
je
int3
inc
dec
lahf
xchg
ljmp
clc
dec
or
outsb
ret
jg
mov
or
mov
arpl
inc
pusha
dec
nop
insl
lock
push
and
nop
leave
jmp
xchg
pop
pop
or
cld
movl
inc
mov
scas
sahf
arpl
and
cmp
rcrl
data16
icebp
push
in
mov
insb
iret
loopne
inc
pusha
inc
add
js
mov
push
mov
jmp
xor
mov
ss
mov
dec
xchg
add
jmp
mov
fidivrl
adcb
adc
jp
scas
sbb
bnd
pop
pop
jg
or
push
scas
test
movsb
ds
mov
pop
movsb
mov
nop
mov
inc
adc
cmp
sub
xor
aaa
in
repz
in
xchg
idivl
dec
xchg
jg
sbb
stc
sub
sbbb
push
jle
fwait
dec
jecxz
pusha
enter
loope
in
subl
jnp
sub
loopne,pt
test
cwtl
cmpsl
mov
or
cmp
movsb
test
test
xchg
movsb
lret
sbb
mov
ja
enter
rcr
ret
addr16
test
addr16
aaa
sub
cltd
dec
shlb
hlt
dec
les
hlt
jns
pop
push
pop
jge
dec
fisubl
ss
xor
lock
fistl
push
mov
repz
and
mov
sbb
and
aad
sub
movsb
shrb
mov
fs
insb
mov
adc
subl
dec
inc
pop
ds
push
loope
shlb
test
repnz
incb
add
xchg
cmp
adc
rclb
xchg
sub
pop
sbb
xchg
adc
popa
xchg
push
mov
icebp
sub
ficompl
loopew
dec
pop
mov
outsb
xchg
adcb
idiv
fwait
dec
cmp
jle
std
sub
mov
pushf
push
dec
jle
sbb
popa
mov
dec
jl
loop
adc
mov
cli
mov
aaa
fdivp
cld
int
jecxz
dec
jp
sbb
cmpb
jg
call
or
test
fs
adc
in
dec
mov
mov
ljmp
enter
add
inc
addr16
ret
pusha
cmp
inc
out
jnp
inc
sub
mov
out
call
mov
and
stc
pop
psraw
add
pop
fisubrs
pop
outsl
pop
mov
mov
dec
adc
out
adcl
out
dec
popf
dec
fstpt
xchg
or
push
divb
jbe
nop
mov
packsswb
ret
push
shl
and
sbb
sarb
sbb
push
in
pop
sbb
orl
mov
call
fidivrl
pop
aam
xchg
mov
sbb
pop
pop
and
mov
lret
and
jnp
cli
aam
xchg
inc
sub
popf
in
pop
addl
daa
cld
cwtl
mov
mov
in
stos
cmp
jno
test
push
xor
das
xchg
es
rorb
pushf
mov
std
loope
je
out
mov
mov
mov
cmpsl
inc
iret
push
out
sbbl
ja
fidivl
and
or
and
jo
clc
imul
into
sbb
sub
fs
repnz
loope
dec
adc
sbb
mov
cwtl
xchg
xor
push
adc
divb
mov
mov
out
pusha
or
sub
jge
sbb
add
into
xor
fdiv
outsb
into
pop
xchg
add
test
sarb
scas
adc
or
jmp
enter
pop
sbb
inc
and
std
cmp
fwait
scas
sub
das
jno
sahf
std
push
push
mov
pop
test
adc
push
lret
xchg
xlat
stos
lret
push
push
testb
mov
mov
into
inc
pop
sti
push
mov
clc
paddd
xor
les
in
lea
push
mov
incl
jle
hlt
fisttps
xlat
dec
sbb
lds
ljmp
inc
jne
nop
push
cld
int
pop
ljmp
std
pop
in
dec
sbb
sub
loope
sti
inc
add
aaa
pop
pop
in
std
into
sahf
orb
xlat
adc
pop
inc
push
repz
sbb
xchg
jo
fcmovnbe
and
aas
pop
cmp
lock
jno
fwait
subl
hlt
outsl
sbb
mov
in
loopne
xor
loopne
orl
mov
scas
orl
sub
ret
outsl
adc
pop
push
call
scas
or
addb
rcl
add
inc
lods
inc
pop
add
sarl
jno
mov
into
and
push
inc
xor
mov
xchg
shll
shrb
sti
inc
call
sbb
icebp
fsub
sbb
jmp
xchg
imul
add
sbb
shl
dec
stos
xlat
xchg
repz
xor
push
dec
jbe
and
out
inc
cmp
outsl
mov
dec
cmp
jns
mov
add
ret
push
into
push
in
inc
mov
nop
repz
mov
and
xchg
push
mov
out
mov
sbb
jl
arpl
out
lock
pop
les
xchg
fildll
inc
jbe
sbb
jg
xlat
ds
test
psrld
inc
xchg
enter
pop
adc
adc
in
lahf
scas
ja
add
pop
std
inc
popf
addr16
ljmp
push
or
test
xchg
lds
fisubl
sub
aaa
jae
aas
mov
push
pushf
in
push
jno
rcrb
xchg
inc
dec
lock
stc
loop
insl
movsl
aam
jne
sub
sub
sub
in
iret
and
movsl
lahf
les
std
test
inc
cwtl
jbe
jmp
mov
popf
int3
outsl
xor
xchg
popa
and
fcom
inc
mov
pop
lods
rcll
and
repnz
sub
scas
inc
shrb
movsb
repz
xlat
mov
ljmp
repnz
cmp
ss
pop
xor
mov
mov
movsb
dec
inc
insb
dec
test
call
jbe
jp
stc
sub
je
popf
popf
scas
mov
inc
scas
and
scas
ret
mov
push
cmp
in
ficoms
push
adc
dec
mulb
push
jb
or
fistps
push
xor
jl
inc
inc
out
icebp
in
shlb
inc
inc
roll
ja
enter
or
lods
das
xchg
pop
add
das
popa
in
jno
add
sbb
call
inc
jb
dec
push
adc
stc
rcll
icebp
or
xor
lods
and
pop
sti
xor
add
and
leave
inc
lods
inc
push
call
test
lods
jbe
adc
mov
popl
enter
dec
push
mov
aaa
mov
xbegin
cld
pop
xchg
stos
das
xchg
arpl
sub
add
cmpsl
scas
jg
out
fcom
mov
jp
mov
jno
stc
mov
dec
bts
outsl
cmc
push
cmp
mov
test
xchg
gs
loopne,pt
cli
or
aad
js
jbe
push
xor
lea
jnp
pop
test
jl
adc
pop
pop
push
dec
mov
cmpl
mov
xchg
and
mov
pushf
mov
lcall
sbb
xor
dec
fwait
xor
fimull
sarb
mov
sbb
inc
pop
daa
sub
test
push
push
iret
jp
enter
lcall
stc
inc
int3
sub
iret
and
dec
cmpsl
inc
push
cmp
scas
jmp
lret
xor
repnz
push
add
out
test
pushf
fmul
xor
sbbl
jnp
ds
addb
inc
arpl
sbbb
je
xchg
fincstp
aas
push
xor
xchg
xchg
loop
loopne
sti
mov
gs
inc
fisubs
scas
aaa
add
sbb
cmpsl
and
aam
fldl
add
lcall
popa
data16
int3
dec
movsb
dec
push
mov
lahf
bound
inc
push
lods
test
shl
lods
loope
cltd
mov
in
sub
ret
and
in
shlb
cwtl
fisubs
in
loop
xchg
mov
mov
stos
rolb
cmc
fadds
push
mov
add
dec
sbb
cmp
insb
pop
icebp
fs
sahf
out
mov
leave
mov
inc
mov
xor
xor
aas
cmp
pop
enter
xor
cmp
mov
and
or
add
mov
lcall
repz
pusha
adc
sti
pop
into
dec
jne
and
xor
sub
arpl
in
fldt
es
mov
bound
cmp
out
inc
ficomps
rorb
jb
mov
push
mov
or
lds
mov
int3
mov
nop
xlat
stos
jnp
std
sbb
dec
and
daa
pop
or
mov
push
and
mov
inc
pop
rcrb
and
out
cmp
mov
cli
xor
testl
repnz
add
movsb
mov
lret
cmp
outsl
ds
insb
int3
sbb
push
mov
adc
cmpsl
fwait
pop
inc
loopne
jns
add
jae
scas
jecxz
pop
ret
bnd
orl
jg
cs
cli
call
das
pop
jb
dec
lds
lcall
dec
push
mov
pop
popf
xchg
movsb
jo
outsl
cli
push
sbb
lea
in
jnp
lock
or
xchg
xchg
mov
xlat
popa
adc
roll
scas
outsl
je
pop
mov
xchg
loopne
mov
adcl
cmc
mov
test
test
mov
int
sbb
dec
in
dec
rcrb
adc
in
xor
add
push
pop
mov
shll
aam
testl
inc
xor
push
data16
shrb
xchg
mov
xor
cli
cmp
int
test
cs
sbb
adc
or
sub
scas
mov
cld
push
add
popf
push
or
data16
loopne
mov
pushl
and
or
lea
popf
adc
out
dec
cmp
nop
push
sub
add
mov
lret
sbb
mov
fwait
jb
test
adc
xor
pop
pusha
in
jmp
aas
je
push
call
cmp
pop
imul
pop
sbb
leave
adc
int3
or
in
fcom
repz
push
into
mov
push
adc
jmp
add
loop
test
pop
or
and
pop
pshufw
pop
lock
rcrb
shlb
or
mov
inc
mov
jl
out
inc
sahf
pop
addr16
xchg
xor
fidivl
pop
sub
scas
aam
loop
lcall
cmp
sbb
insl
bound
fiaddl
or
sub
sub
arpl
incb
sbb
pop
adc
arpl
ja
jno
xchg
lods
mov
ljmp
jb
rcrl
das
push
sbb
mov
pop
ss
leave
inc
and
mov
mov
inc
mov
mov
imul
sbb
sti
pop
pop
dec
push
jnp
inc
aam
aam
xor
out
jnp
outsb
sub
negb
jb
int3
xorl
or
in
out
lods
jno
ja
add
mov
jecxz
sbb
xchg
js
pop
sbb
cli
jp
mov
dec
ss
inc
cmp
ja
insb
cli
pop
inc
mov
cmpsl
popa
mov
add
and
mov
sbb
repz
popf
mov
dec
ljmp
mov
pop
es
adc
lret
pop
popf
sti
inc
sbb
mov
cmp
cmc
xor
mov
xchg
bswap
mov
push
jle
js
xchg
aad
xchg
mov
push
ljmp
jl
and
adc
imul
or
cmpsl
subb
enter
push
std
push
frstor
clc
adc
imul
lods
xor
pop
sbb
adc
lods
xchg
adc
scas
negb
jecxz
movsl
loope
sbb
cmp
sub
pop
insb
fucomip
int3
outsb
xchg
xchg
mov
pop
sbb
aad
cwtl
iret
mov
inc
xor
mov
xchg
cmp
inc
lods
rcl
or
pop
inc
cld
insb
sbb
hlt
add
outsl
push
pop
push
cmp
xchg
mov
add
mov
ds
push
xchg
and
sbb
add
es
fs
push
xchg
mov
int
add
int
mov
cwtl
shrb
mov
jo
add
or
lods
fnstenv
sub
mov
inc
inc
jle
sub
pop
clc
sbb
insb
in
loop
jl
in
into
jnp
into
test
out
mov
mov
push
sub
mov
dec
inc
xchg
inc
pop
pop
push
pop
out
inc
in
adc
call
cmp
fisubl
mov
mov
int3
dec
mov
sub
pop
adc
popa
add
cld
arpl
mov
mov
call
out
in
cmp
mov
and
pusha
es
imul
jnp
inc
inc
adc
mov
out
mov
add
or
dec
stos
mov
xchg
rcl
in
mov
push
ficomps
icebp
enter
dec
add
dec
cmpsl
push
rcrb
scas
inc
dec
mov
pusha
sarl
cmpsw
mov
push
adc
loopnew
jle
push
fs
mov
pop
mov
inc
andl
js
push
iret
cmpb
call
dec
pop
lret
jb
enter
jl
cmpsb
test
dec
fsub
or
push
dec
lret
cmpsb
xchg
pop
mov
loopne
mov
aaa
test
gs
insl
repnz
jle
repz
add
adc
ja
sarb
mov
shlb
or
fwait
jecxz
pop
aas
sbb
inc
xchg
out
lahf
or
lods
loopne
pop
fbld
sub
mov
lahf
pop
fstl
das
mov
sbb
xchg
sub
gs
inc
rcrl
inc
sbb
push
scas
mov
push
cmpsl
mov
notl
jmp
jno
pop
leave
push
iret
mov
mov
aas
hlt
rol
dec
dec
call
pusha
pop
cmp
jnp
cltd
xor
pushf
jno
jge
rclb
das
inc
dec
xchg
lock
repz
das
push
fisttps
movsb
dec
orb
lret
jne
push
xchg
dec
mov
rorb
push
stos
xor
pop
mov
xchg
leave
sbb
and
adc
pop
push
lret
stos
push
cmpl
mov
fmul
test
and
inc
cmp
cmp
in
xchg
jne
es
iret
add
mov
shll
adc
xchg
addr16
dec
add
or
shll
cmp
insl
adc
in
dec
pop
dec
sub
adcl
mov
imul
mov
xchg
rorb
lahf
sub
and
sub
adc
mov
cmp
push
or
add
pushl
xchg
nop
mov
push
fbstp
and
sbb
gs
ljmp
xor
mov
xor
pop
popa
call
movsb
dec
add
pop
aaa
rcrb
xorb
mov
dec
or
cmp
mov
xor
mov
sbb
dec
in
in
aas
lcall
pop
fxch
mov
clc
les
and
or
lret
outsb
gs
jg
push
cmp
aas
sbb
add
add
xchg
test
mov
aaa
xor
in
jns
add
cmp
sbb
jno
dec
push
lock
pop
inc
push
inc
jmp
pop
out
aaa
dec
cmp
fldcw
pop
dec
sbb
xchg
mov
adc
cmp
cmpl
cmp
inc
repnz
jae
gs
mov
pop
lock
inc
scas
or
mov
pop
sub
jg
add
outsb
xchg
xchg
fsubs
add
jbe
into
adcl
popa
dec
mov
fdivs
repz
dec
and
pop
jge
into
lea
pop
insl
push
js
bound
dec
notl
fsubrl
mov
hlt
jmp
loopne
pushl
sbb
mov
inc
mov
sub
mov
stc
fs
int3
jb
pop
leave
into
jne
imul
cs
or
and
test
and
pop
ret
push
push
adc
sub
jnp
lcall
mov
js
clc
dec
add
push
pop
out
adc
insb
jle
mov
fmuls
xchg
xor
mov
mov
sti
jae
ffree
pusha
sbb
fnstsw
cmpsl
inc
xor
push
jbe
xchg
xor
arpl
xor
sbb
cmpsl
sarl
pop
out
fucom
cmpsl
dec
jae
mov
ja
fs
ss
hlt
sub
cmp
pop
sbb
xchg
pop
pop
jmp
cwtl
test
outsl
xor
cmp
rolb
fwait
xchg
inc
inc
cmp
sahf
xor
push
adc
xchg
fisubrl
mov
out
leave
mov
stos
addr16
das
je
movsb
pop
mov
or
and
sbb
xchg
jb
cmp
fs
arpl
repz
inc
ljmp
fucomip
mov
jmp
dec
mov
data16
xchg
stc
mov
and
mov
pop
lret
lret
call
insb
mov
push
jne
jae
push
mov
out
jb
lahf
mov
flds
add
add
dec
inc
dec
mov
mov
aad
or
or
mov
dec
inc
jl
aam
stos
mov
push
cmp
iret
dec
sub
dec
fdivl
inc
movsl
sarl
lds
jae
loope
dec
sbb
adc
and
movsb
leave
addr16
rcll
mov
pop
mov
mov
push
leave
xor
mov
xlat
xchg
dec
les
xor
js
in
pop
pop
jp
jb
pop
int3
fs
dec
clc
inc
jno
mov
jno
xchg
dec
pop
mov
dec
ret
cmpsb
test
and
dec
mov
cmpsb
xchg
xor
add
pop
js
mov
icebp
xchg
repnz
mov
xchg
cmp
mov
and
push
pushf
pop
clc
sbb
ficompl
test
ret
test
push
out
fmul
lock
cli
pop
mov
sub
mov
addb
int3
repnz
add
cld
xchg
fldcw
jnp
cmpl
rclb
mov
inc
push
lods
movsb
inc
leave
mov
or
sbb
push
xchg
push
cmp
nop
insb
mov
jae
lods
inc
cmp
mov
push
xchg
ss
xorb
adc
rorb
mov
jae
mov
sbb
out
scas
clc
int3
mov
inc
xor
loop
int
sbb
or
call
inc
lret
cmp
hlt
daa
inc
out
negl
sarb
leave
or
cmpl
pop
jae
inc
jnp
adc
test
loope
dec
cs
fnstcw
insb
lds
sbb
xor
xchg
in
fmulp
aam
or
push
push
sub
add
test
mov
inc
movsb
cmpsl
mov
shll
gs
out
pop
inc
mov
imul
sub
jg
add
test
inc
cld
xor
push
sbb
ret
xchg
cmpsb
dec
divl
ret
dec
mov
es
mov
and
incb
sbb
or
daa
cmc
cltd
mov
mov
pusha
rcrl
mov
push
mov
mov
push
cmp
orb
cmp
add
enter
sbb
test
mov
push
mov
mov
addr16
test
adcl
add
jp
pop
lcall
in
dec
in
dec
out
mov
cmp
test
scas
test
push
frstor
outsl
fs
inc
inc
mov
repnz
mov
gs
fwait
sbb
push
cmpsb
es
es
adc
and
add
lods
cmp
dec
mov
das
push
cmp
xor
in
enter
in
gs
lock
cltd
mov
std
fdivs
or
pop
push
adc
inc
pushl
sub
jle
aad
imul
icebp
addr16
jge
and
mov
out
pushf
xchg
jbe
add
cld
push
push
or
aam
or
mov
mov
inc
or
icebp
and
outsb
lods
aas
xor
cwtl
xchg
sahf
imul
pop
jge
and
jno
iret
lea
ds
mov
loope
lcall
push
mov
sbb
insl
cld
aaa
dec
jmp
loop
lds
rorb
ljmp
in
and
cmp
call
aad
pop
shlb
mov
je
jb
adc
cltd
out
movsl
push
cs
xor
adc
cmpl
xchg
jb
leave
orl
cmpsb
push
dec
push
mov
imul
popf
leave
lret
xchg
hlt
outsb
ds
cs
std
sti
add
pop
xchg
adc
jbe
scas
clc
jae
into
jns
shr
outsb
jo
sub
mov
fisubs
leave
jmp
fstpl
mov
cmp
and
dec
icebp
repz
jp
push
mov
lods
mov
push
aas
lock
fs
dec
nop
add
mov
scas
inc
andl
lods
loop
sbb
cmpsl
jecxz
adc
mov
int3
mov
scas
popf
xor
dec
test
cli
jbe
icebp
fcompl
bound
mov
and
sbb
out
repnz
mov
inc
xor
jbe
sbb
lcall
xor
inc
int
pop
mov
cmp
cmpsb
xor
push
lods
outsl
sbb
shlb
scas
cs
sbb
addr16
testb
jb
sti
lods
lea
sbb
rclb
fildll
mov
sarl
jecxz
or
pop
mov
popf
rcrb
scas
jb
pop
jnp
cmp
jmp
lock
mov
jle
inc
outsl
adc
adc
popf
cltd
lods
ljmp
mov
jno
out
std
in
and
xchg
mov
dec
mov
cmpb
test
xchg
xor
lret
dec
gs
inc
add
cmp
jmp
dec
mov
jle
pop
xchg
inc
popf
in
and
addr16
jecxz
or
mov
push
or
ret
or
pushf
in
xchg
inc
adc
std
adc
mov
inc
adc
mov
lret
mov
test
lods
mov
and
insb
shlb
hlt
add
movsl
in
sbb
stos
aas
dec
jge
jle
addr16
hlt
aaa
gs
mov
adc
mov
repz
lods
imul
xchg
fwait
jb
sbb
sbb
orb
gs
sub
mov
sub
xchg
add
daa
in
addr16
lret
jl
sub
pop
cmc
cld
outsb
push
test
cmp
mov
int
jge
pop
aad
rcll
cmp
pop
pop
outsb
loop
mov
or
dec
nop
sub
fnstcw
jae
cltd
ljmp
int
pop
inc
adc
dec
mov
rcl
cmp
xor
test
sbb
jno
call
pop
jne
sbb
in
mov
adc
inc
sbb
dec
pop
int
jge
repnz
jae
pop
jnp
loop
mov
pusha
stos
inc
outsb
or
lock
inc
mov
cmpsl
addb
ja
leave
mov
lcall
xchg
pop
mov
dec
pop
pop
mov
inc
cmp
jae
loope
frstor
in
cs
gs
lcall
js
xlat
andl
xor
insb
ds
xchg
xchg
push
roll
sbb
pop
subl
pop
lret
or
fucomi
in
popf
xor
rolb
sti
cmp
notl
ret
jae
in
dec
pop
test
aas
cmpsl
gs
or
mov
mov
montmul
cmpsb
pop
dec
adc
xor
addr16
jns
pop
es
pop
inc
pmaxsw
mov
ja
or
rcll
scas
add
fstpt
inc
sahf
add
fildll
mov
bound
lds
stos
nop
les
xor
jp
test
int3
je
jnp
push
or
in
notb
sti
mov
dec
test
stc
filds
and
pop
loope
pop
push
ja
sub
jle
xchg
or
mov
dec
in
adc
add
or
testb
or
out
adc
inc
and
lret
push
xchg
fadd
shlb
out
loope
sbb
mov
add
and
pop
sbbl
sub
iret
cmp
lret
push
imul
shrb
sbb
roll
leave
scas
mov
rorb
push
xorl
stos
test
stos
push
and
mov
push
jno
scas
mov
mov
ljmp
mov
loopne
das
pop
jnp
pop
pop
sti
pop
mov
mov
pusha
xor
mov
inc
inc
cs
outsl
push
xchg
mov
daa
pusha
lock
jbe
or
filds
add
sbb
xchg
mov
or
push
and
inc
xlat
loop
popf
and
adc
sub
scas
mov
jo
cmp
mov
push
popf
mov
pop
push
lea
push
call
mov
mov
ret
push
sub
mov
fwait
stc
xor
jg
add
xchg
adc
and
sbb
dec
ljmp
jo
fnstsw
xchg
and
lahf
or
mov
sbb
jns
insb
adc
in
insl
js
or
andb
jge
jnp
sub
insl
aaa
loop
adc
repz
sbb
data16
addr16
cli
jg
popa
lods
mov
jnp
dec
pop
pusha
dec
addl
daa
cli
sub
xchg
addl
stos
ja
test
dec
pop
imul
sub
sub
je
sub
sub
cwtl
pop
jmp
jbe
sbb
inc
lret
insl
mov
sbb
push
ret
cld
sbb
xor
mov
and
sbb
into
pushf
ret
repnz
in
lret
mov
jno
lretw
push
jb
xor
mov
icebp
stos
add
mov
push
icebp
adc
adc
int3
adc
xchg
pop
sbb
mov
inc
mov
xor
xchg
arpl
popa
mov
in
push
lret
lea
pushf
or
xchg
lock
clc
aam
xchg
jl
mov
test
daa
iret
xchg
xchg
cmp
gs
out
cmp
lret
pushf
push
sub
movsb
cli
rcrb
xor
dec
or
and
dec
inc
movsb
cs
jle
add
sbbb
dec
aas
push
ljmp
ficomps
jl
mov
mov
imul
sbb
shlb
call
xchg
cmc
ficoms
std
xchg
fs
jl
jle
ret
mov
push
xor
inc
aaa
or
sbb
icebp
in
mov
pop
cwtl
outsb
jecxz
adc
jne
xor
jno
inc
lods
fcomps
add
ret
cmc
and
mov
out
inc
push
cld
xchg
dec
jmp
sub
mov
cwtl
ds
outsl
jnp
insb
data16
and
inc
xlat
jge
sarb
xchg
fsubl
les
pop
fldt
lock
dec
pop
out
frstor
inc
xor
jne
or
and
sbb
loopne
push
frstor
sub
mov
add
sub
cmp
dec
inc
ljmp
adc
dec
xor
and
mov
sbb
lahf
adc
insl
lret
dec
shll
jns
jno
je
loopne
jo
push
inc
dec
aaa
inc
out
mov
mov
fstl
jmp
lods
mov
inc
shrl
fs
dec
les
enter
dec
pop
or
jl
jnp
push
inc
sub
jg
pushf
adc
mov
insb
mov
lods
sar
mov
xchg
jecxz
adc
jp
pop
adc
inc
pop
pop
xor
mov
fsubrs
pop
daa
jns
jmp
adc
ret
clc
retw
test
jno
xor
daa
cmp
in
out
mov
aad
sub
mov
je
or
adc
add
sti
lahf
lods
sarl
inc
dec
cs
jge
xor
fistl
outsb
or
stc
jae
cmp
mov
test
rol
jle
mov
sbb
xor
adc
cmpsb
gs
daa
loop
inc
add
push
sahf
add
aad
cmp
arpl
push
sub
lods
mov
jp
fsub
fidivl
mov
dec
cltd
leave
lahf
mov
pop
pop
cmp
cmp
jne
icebp
jb
dec
push
push
scas
rcll
fsubrl
push
mov
sahf
jp
sub
clc
sub
jb
ds
xlat
jp
lods
inc
fs
sbb
in
inc
sub
cmp
xor
mov
andl
shrl
movsl
aad
shr
aam
ja
repnz
xchg
sub
sbb
rcrl
xor
iret
dec
outsb
sbb
into
jns
stc
or
fsubrl
mov
neg
jne
into
xchg
add
cmp
imul
popa
and
out
jbe
add
push
inc
in
mov
add
leave
mov
setns
jmp
out
push
sub
xchg
rol
aad
mov
ret
jno
inc
mov
into
popf
xchg
iret
push
pop
adc
jl
rcll
or
adc
and
mov
nop
xchg
sub
stos
or
rcll
inc
push
push
mov
int
insl
mov
out
loope
cmc
mov
and
fistpl
je
dec
ficoms
out
rorl
xchg
xor
aad
dec
mov
rcll
hlt
cmp
add
imul
mov
shrb
je
sbb
out
jmp
or
push
adc
push
out
pop
mov
lcall
mov
push
jg
sbb
push
imulb
mov
outsb
or
loop
je
adc
fwait
dec
test
out
icebp
jno
test
rcrb
xchg
cltd
stos
xlat
scas
roll
inc
adc
in
dec
icebp
lea
dec
negb
inc
adc
int3
xor
cmpsb
popf
aaa
fdivrp
test
ljmp
pop
pop
icebp
in
jnp
push
out
sahf
loopne
jae
pop
or
pop
mov
pop
add
cld
xor
xchg
test
lcall
push
or
daa
mov
sti
loop
fcmovnb
mov
ror
add
and
mov
mov
testb
xor
cmp
mov
push
inc
sarb
pop
add
sub
ljmp
iret
jmp
inc
xor
addr16
push
ret
add
sub
jne
test
mov
pop
test
lret
mov
mov
repz
fistpl
mov
sub
cmp
inc
test
int3
rorl
xor
add
insb
jae
sahf
xchg
pop
mov
arpl
pop
stc
stos
fnstcw
dec
pop
in
cmp
or
outsl
movsl
add
pop
add
xor
iret
cmpsl
adc
push
jnp
and
sub
jl
pop
pop
jno
scas
pop
cmp
lds
rcrb
jge
dec
push
jg
push
in
xor
add
movsb
scas
scas
les
call
xor
xor
lret
add
rcll
les
mov
fcmovb
cmpxchg
inc
out
xchg
cltd
or
mov
sub
int
je
sub
fbstp
mov
pop
jne
inc
pop
in
mov
aas
xchg
adc
je
cmp
lods
jno
sub
loope
and
inc
gs
sbb
xor
adc
scas
jl
hlt
int
fstpl
xchg
push
addr16
adc
mov
add
lods
mov
xchg
jmp
mov
mov
jle
mov
jns
cmpl
std
jl
loope
pop
in
jmp
pushf
or
xchg
cmp
jmp
pop
cmp
push
gs
lods
pop
mov
fildll
repnz
das
scas
xchg
or
mov
pop
out
in
inc
adc
inc
xchg
into
push
mov
inc
mov
and
cli
loope
nop
pop
ljmp
sub
int3
push
sbb
mov
or
subb
sub
mov
jmp
xchg
jb
push
nop
into
jae
imul
adc
jnp
xchg
mov
sti
mov
xor
sahf
or
std
cli
pop
dec
mov
push
cmpsb
mov
add
mov
mov
test
jo
mov
push
outsl
lds
push
int
sahf
add
out
adc
rolb
cmp
addb
aas
and
ljmp
fdiv
pop
jnp
inc
ret
cltd
mov
insl
fwait
je
popa
insl
jae
inc
dec
popf
popf
jno
ja
in
shrb
and
fs
bound
add
dec
mov
or
sahf
adc
es
mov
mov
mov
inc
and
jbe
pop
pop
pop
sbb
push
xchg
add
cmp
out
mov
mov
clc
push
loopne
push
xchg
mov
fsubrs
inc
mov
pop
enter
cmp
jb
aas
push
cmp
out
jno
mov
pop
ja
into
dec
mov
in
or
mov
fbld
inc
shrb
outsb
movsb
mov
ljmp
jns
les
enter
popf
pop
jge
mov
into
pop
popf
lds
add
insl
adc
out
imul
std
sahf
lret
insb
fldcw
and
adc
sbb
jns
xor
movsb
inc
xchg
ret
test
add
sbb
xchg
pop
pop
sub
es
push
mov
add
js
andl
hlt
call
push
test
cmp
mov
scas
lods
dec
pop
pop
push
mov
pop
rcrl
mov
lret
pop
pop
mov
lds
movd
jge
inc
outsb
stos
lock
push
add
pslld
sub
sbb
xchg
push
ficoml
xchg
pop
sbb
jno
int
cmpsb
hlt
or
xor
fldenv
test
xor
and
scas
into
push
ja
inc
jl
fisubs
and
or
lock
inc
rcrl
mov
mov
and
mov
jbe
or
faddl
scas
ss
jbe
cli
mov
add
sbb
lods
pop
sbb
pop
and
les
shrb
mov
ds
aad
cli
js,pt
or
pushf
fiadds
in
out
xlat
and
dec
pop
adc
xchg
aas
push
sbb
cs
imul
rol
jmp
lods
loop
xor
jmp
ret
or
f2xm1
test
fildll
repnz
push
inc
fwait
hlt
mov
popa
xchg
sbb
lcall
adcb
ss
pop
call
scas
inc
test
jp
xchg
rcrl
incb
push
jmp
int3
scas
lret
push
and
ret
mov
pop
pusha
addb
sbb
movsl
je
shr
mov
sar
mov
jle
dec
push
dec
inc
xor
lret
adc
je
imul
arpl
cmp
aas
das
hlt
jb
std
outsl
mov
dec
push
test
inc
xor
stos
jmp
xorb
sbb
xor
call
scas
hlt
add
pop
mov
xor
pop
shl
idivb
fisttps
or
nop
xor
and
fidivrl
dec
or
icebp
mov
jecxz
pop
stos
push
dec
adc
aam
test
arpl
mov
pop
jl
fsubl
inc
scas
lret
sbb
adc
dec
leave
ss
push
xchg
cmpsl
xchg
xchg
xor
fisubrs
fstpl
sbb
lret
mov
inc
add
icebp
in
out
adc
outsl
push
pop
mulb
inc
jno
mov
rep
adc
mov
mov
mov
aad
mov
loope
xchg
jno
sbb
movsl
cmp
fbstp
mov
push
jne
rcrl
jg
mov
dec
mov
je
aam
xchg
add
jle
fcmovnbe
jmp
mov
jo
call
popa
jl
mov
xchg
jne
or
in
loop
pusha
adc
or
out
std
jnp
push
adc
std
and
or
roll
nop
cwtl
jo
aad
rorb
fninit
js
lds
jb
xchg
inc
outsb
idiv
mull
leave
adc
je
inc
in
loop
cmpsl
pop
inc
dec
sarl
shrb
push
pushf
adc
adc
scas
adc
dec
cmp
cmp
mov
jge
mov
pusha
and
jmp
mov
mov
gs
mov
icebp
mov
mov
insl
fadd
mov
lcall
mov
mov
dec
or
sub
dec
movsb
dec
and
sub
lret
fistpl
jge
nop
push
dec
or
icebp
xchg
xchg
add
or
push
sarb
loope
loop
jnp
cltd
movsl
fldl
sbb
loope
sarb
fwait
mov
adc
fs
outsl
push
imul
xor
jmp
ss
push
lods
push
inc
pop
add
imul
cltd
pusha
inc
mov
imul
cmp
das
mov
adc
rorl
sbb
arpl
fadds
stc
xchg
sbb
cmpl
test
stos
xchg
ss
jge
pop
das
sub
dec
test
std
jno
xor
xchg
jecxz
jno
std
mov
pusha
mov
xchg
mov
ss
rcr
hlt
iret
sarb
fwait
push
mov
jno
mov
adc
sbb
adc
movsb
mov
sub
push
dec
mov
nop
sub
orb
dec
call
es
sub
in
dec
call
sub
push
repz
push
stos
and
icebp
sarl
cmpsb
mov
mov
insl
mov
jge
fimull
cli
sub
out
and
sbb
fwait
add
out
out
adc
cli
dec
inc
rolb
dec
and
sbb
rcll
xor
shll
jno
mov
add
or
imul
arpl
pop
xor
out
mov
leave
mov
push
sbb
rcrl
loope
push
dec
jp
lcall
imulb
and
cmpsb
outsb
inc
mov
adc
and
push
repnz
repnz
es
mov
mov
or
fcmovu
das
push
or
cmpsb
push
hlt
inc
and
sub
js
fistl
addr16
add
cmp
invd
dec
and
adc
xor
repz
push
push
inc
lds
mov
ds
cmp
loopne
add
add
inc
in
inc
jmp
pop
mov
popf
out
out
xchg
daa
mov
ds
out
or
jmp
lahf
pushf
pop
or
pop
add
xchg
aas
adc
inc
jle
jbe
loope
in
stos
or
aas
adc
push
cmpsl
in
inc
inc
jbe
push
pop
loopne
mov
aam
fadds
mov
push
cmp
in
adc
add
inc
test
fsubl
ljmp
popa
add
sbb
mov
adc
add
sbbl
lret
jnp
fisubrs
test
xchg
jnp
sahf
in
push
xchg
mov
mov
out
and
test
aaa
rcll
dec
in
imulb
ljmp
push
mov
add
sbb
cs
xor
pop
lahf
pop
dec
je
mov
call
rolb
nop
xlat
rcrl
pop
daa
aaa
pop
es
mul
shlb
cmp
dec
xlat
imul
scas
pusha
ljmp
imul
push
insb
aas
loopne
ret
ljmp
xor
xchg
movsl
fldl
pop
int3
xlat
popf
lret
pop
xchg
lock
cmpsl
cmp
and
xchg
ret
aam
inc
sub
sarl
outsw
scas
test
negb
adcb
mov
stos
enter
stos
and
cli
add
cli
dec
xchg
and
jns
pop
pushl
inc
jecxz
ljmp
sbb
fcomi
repnz
mov
or
cmc
rorb
in
sbb
cwtl
lds
lahf
pop
into
mov
lods
pop
out
outsb
xchg
out
out
inc
xor
nop
int
push
xor
stc
ss
orl
adc
test
cmp
adcl
xor
call
cli
sbb
jl
sub
xor
mov
stc
imul
mov
aas
mov
sub
stos
sub
adc
testl
push
push
sub
mov
mov
add
jae
fadd
mov
adc
in
fs
and
ljmp
jge
stos
push
xor
imul
xchg
out
aaa
mov
scas
pop
dec
sbb
sub
cmp
mov
scas
push
lcall
pop
inc
dec
pop
gs
gs
pop
jmp
mov
fldcw
jb
jecxz
shlb
jmp
push
into
xor
xchg
addr16
adc
cmp
jne
sti
es
mov
sbb
sarl
lahf
pusha
jl
mov
and
mov
les
dec
sbb
mov
in
mov
dec
mov
and
push
imull
pop
in
js
fimull
mov
int
orl
adc
jbe
jbe
add
lret
lret
aaa
mov
lods
stos
cmpsl
add
mov
add
aas
add
imul
sub
mov
ret
mov
lods
movsb
loope
mov
or
dec
imul
mov
stos
sbb
inc
add
adc
mov
jp
xchg
mov
adc
cli
sbb
jns
adc
fs
adc
and
ss
pop
std
jb
adc
rcrl
data16
fimull
pop
stc
mov
and
daa
adc
js
inc
jne
imulb
fs
xchg
mov
adc
lcall
scas
ja
in
dec
lods
or
daa
mov
out
xchg
cmpl
sbbb
cmp
xchg
xchg
and
pop
jge
xor
int3
sbb
push
mov
fildl
cmc
sub
adc
pop
xor
dec
cmc
lret
stos
sbb
adc
test
test
mov
or
inc
ljmp
in
pop
pushf
fcom
fs
pusha
pop
inc
add
faddl
xor
xor
call
call
xor
sbb
jge
in
or
sbb
scas
or
dec
test
test
xor
in
pushf
lret
daa
not
movsb
xchg
sar
cmp
ret
sbb
adc
add
mov
sbb
ss
xor
fs
mov
inc
pop
mov
test
in
mov
cli
lods
test
push
jge
lea
add
int3
xor
ficoml
inc
push
scas
shll
sbb
sub
jno
imulb
xchg
daa
mov
out
push
lods
rorb
insl
test
and
and
push
sbbb
pop
sbb
pop
lret
mov
jae
sbb
sub
or
daa
movsb
ljmp
outsb
cmp
cltd
add
push
das
sbb
mov
in
fs
mov
scas
testb
test
dec
mov
or
mov
rcrb
cmp
inc
pop
enter
mov
adc
pop
sti
popa
add
ret
jae
xor
fsubr
mov
inc
mov
push
sbb
les
push
push
and
loope
cmp
popl
and
leave
push
ficoml
ds
arpl
roll
push
xor
or
cmc
dec
stos
mov
push
mov
mov
mov
jge
mov
popa
cs
add
mov
fs
mov
scas
mov
icebp
dec
shll
loopne
stos
imul
inc
push
movsb
xor
xchg
lds
imul
into
outsl
pop
sub
pop
jbe
inc
mov
xor
sub
mov
lds
pop
xchg
adc
or
in
iret
mov
adc
push
mov
mov
aad
bound
jne
inc
out
mov
gs
jmp
stos
push
and
push
mov
fstl
xor
es
mov
or
cltd
mov
push
pusha
or
xor
clc
loop
lods
jge
ja
adc
fists
and
incb
or
subl
stos
mov
filds
adc
mov
ds
rcl
xlat
push
sub
xchg
sub
push
repz
cld
dec
dec
sahf
xchg
push
add
in
push
fsubs
das
adc
sahf
sub
loope
aaa
repz
jmp
out
out
lahf
adc
pop
pop
push
js
out
repz
aas
fimull
fisubrs
ss
mov
je
in
call
scas
jae
scas
leave
popl
insl
sub
lea
fildl
push
ljmp
movsl
xchg
or
mov
pop
icebp
mov
cmp
pusha
mov
scas
movsb
sarl
repz
inc
xchg
pop
sub
cmp
xlat
and
or
outsb
into
inc
call
push
shrb
ret
outsb
push
push
clc
mov
in
push
je
jno
stos
dec
test
jns
push
outsb
inc
call
mov
cltd
and
movsl
push
lds
in
or
inc
outsb
adc
inc
ja
inc
mov
jecxz
lahf
jmp
inc
mov
in
cs
std
xchg
gs
out
xchg
and
out
sub
sub
enter
movsb
mov
adc
add
popf
push
dec
inc
sub
enter
xchg
mov
popf
int3
movsb
add
inc
xor
test
bound
add
ljmp
repz
es
mov
shll
jno
or
and
inc
imul
enter
or
adc
mov
mov
les
jns
dec
out
and
mov
arpl
xchg
jmp
inc
dec
mov
cmpsb
pop
adc
cmpsb
outsb
and
addr16
or
fstps
test
in
and
xor
mulb
arpl
cld
setp
or
xchg
jle
cwtl
cmovl
mov
sarb
cmpsl
test
call
mov
scas
pop
iret
cld
xchg
sti
int
pop
mov
movsb
pop
xor
xchg
out
and
xchg
pop
repnz
leave
int3
push
out
push
inc
push
stos
inc
stc
sub
dec
cmpsb
dec
cmp
dec
jmp
mov
outsl
in
imull
push
cmc
xchg
push
sub
int
aas
jo
cmp
call
test
sbb
and
pop
imulb
insl
mov
mov
roll
add
repz
bound
sti
mov
and
sbb
rorb
in
fdivl
or
andb
xor
jge
xchg
fcmovb
dec
mov
mov
adc
xchg
in
jne
or
in
mov
out
push
sbb
fdivrl
xor
movsb
imul
sbb
xchg
sbb
xchg
adc
pop
mov
xor
pop
mov
or
dec
mov
xor
xor
push
cltd
es
out
enter
and
sarl
cmp
movsl
out
adc
cld
push
aaa
sub
loope
cmc
mov
cld
cld
outsb
jle
push
clc
adc
or
push
outsb
cmp
pop
sti
in
cmp
fwait
sahf
ss
jno
dec
fcomps
cwtl
sub
adc
pop
out
inc
int3
lret
je
push
cltd
and
push
das
test
repnz
addr16
dec
lock
lods
and
loop
popa
xchg
clc
dec
or
xlat
into
in
lcall
dec
xchg
imul
sbb
inc
lret
div
sub
hlt
lock
jbe
mov
loope
stos
add
push
stos
negl
cmpb
mov
inc
cmpsb
sbbl
mov
xor
daa
pop
mov
mov
pop
cli
push
in
sbbl
lcall
icebp
xchg
outsl
insl
divl
sbb
or
shl
in
push
lret
in
arpl
jl
mov
js
es
jl
sub
mov
cmp
ljmp
sbb
inc
cmp
mov
mov
out
mull
pop
or
outsl
xor
pop
add
loope
cmc
cli
sarb
ss
lahf
push
xchg
pop
loopne
pop
mov
jno
push
sbb
movsl
xor
aas
adc
lahf
xchg
jbe
push
mov
mov
insb
mov
stos
fstpl
cmp
loop
in
jmp
mov
rorl
jle
les
das
lods
cmp
rcll
leave
jp
pop
stc
jbe
add
push
pop
imull
rcrb
sbb
xchg
jg
xor
mov
outsl
sbb
in
ret
imul
push
fistl
ds
je
push
orl
add
jno
hlt
mov
cli
adc
inc
fadds
inc
mov
decb
shlb
sub
and
mov
mov
push
insb
push
jle
stos
xchg
roll
inc
mov
mov
mov
sub
cmp
loope
xor
push
xlat
divb
or
leave
cvtpi2ps
test
jl
xchg
xchg
mov
mov
popf
loope
jnp
aas
jge
mov
xchg
nop
cmp
out
mov
or
or
or
jb
push
mov
fists
xchg
lret
push
pop
adc
fdivp
mov
mov
xchg
pop
es
aam
cltd
cwtl
add
cmp
push
je
adc
insl
in
fwait
cltd
push
mov
mov
add
jl
push
testb
std
push
cs
push
xchg
outsb
aad
mov
fiaddl
mov
push
ror
dec
pop
xchg
pop
sbb
push
mov
xor
jnp
sahf
and
xor
ret
push
fmull
pop
jo
jl
or
and
and
cmp
repz
rcrl
and
fstpt
xor
jno
push
in
xchg
sbb
xchg
fdivl
mov
add
insl
in
cmp
add
pop
rorl
cli
stos
sub
cltd
das
mov
cmp
test
pop
rorb
in
mov
mov
and
in
popa
clc
and
cmp
or
sbb
xor
adcb
and
push
and
in
or
js
in
pop
mov
flds
xor
fcomps
lods
addr16
fucom
push
xor
sub
das
mov
xor
or
sahf
mov
pusha
jns
in
insl
pop
xor
xchg
dec
mov
decb
out
push
or
popa
int
lds
leave
dec
imul
fsts
femms
jg
xchg
cmp
jmp
negl
shlb
push
mov
fnstcw
sbb
adc
in
gs
inc
fisubs
xor
fnop
push
and
xchg
scas
enter
mov
xor
xorl
daa
sbb
and
cwtl
mov
mov
popf
mov
aas
sub
mov
push
lock
ret
fdivrs
fwait
or
pop
sarl
in
xchg
push
dec
dec
inc
inc
mov
jecxz
xor
adc
and
pop
jae
xor
pop
dec
adc
lock
loope
fsubrl
ljmp
imul
jecxz
cltd
cmp
inc
movsb
pop
scas
pop
xchg
and
xchg
add
daa
pop
push
and
out
jge
pop
mov
lret
mov
movsb
pop
sahf
nop
cmc
inc
inc
inc
pusha
add
cld
pop
or
sbb
xor
ficoms
push
sub
leave
jnp
xchg
push
add
mov
lea
subl
mov
push
dec
xchg
jecxz
pusha
orl
jns
xor
lods
add
call
dec
push
add
add
fwait
xchg
inc
cmpsb
mov
pop
and
sub
add
adc
imul
adc
jbe
ficoml
ja
and
cltd
pushf
pop
movb
mov
orb
xchg
push
sub
dec
lods
mov
test
movl
sub
adc
jne
movsb
jp
add
mov
adc
push
fdiv
cs
stc
outsl
xchg
pushf
push
outsb
and
icebp
ljmp
pushf
fnstcw
nop
hlt
mov
mov
pop
scas
mov
add
fnstenv
and
adc
inc
or
adc
cmpsl
xchg
sahf
call
cwtl
inc
inc
leave
pop
or
es
adc
jnp
hlt
inc
jecxz
leave
sub
or
jae
or
adc
add
jmp
sbb
enter
pop
xchg
xchg
lret
gs
sub
mov
jo
insl
mov
sub
or
shll
adc
imul
pop
out
jge
and
lret
ret
lahf
imulb
iret
mov
mov
stos
mov
inc
arpl
push
add
and
fiadds
packsswb
push
jecxz
outsl
mov
jno
addr16
aam
int
pop
and
popf
idiv
and
sbb
inc
dec
pushf
cmp
add
je
scas
sbb
int
xorl
mov
inc
lock
popa
stos
mov
mov
mov
stc
jge
lods
out
push
mov
mov
jmp
fdivrp
sbbl
push
sub
lds
pop
xchg
movsl
or
and
rorb
fnstcw
movsb
mov
adc
pop
fs
ljmp
jl
sbb
pop
xchg
xchg
sarb
cli
aad
cmc
clc
cmc
and
pop
mov
pushf
cmp
in
xchg
jne
in
xchg
popf
pushw
in
cld
in
add
lods
inc
push
pop
jo
jle
jp
mov
cmp
mov
hlt
sbb
mov
fldl
and
test
sub
ss
xchg
pop
xchg
xchg
sbb
stc
ljmp
jle
jns
mov
cli
cli
pop
ja
or
aam
jmp
xchg
jp
or
mov
loop
lahf
pop
mov
sbb
and
add
mov
lea
mov
or
push
adc
lods
sub
push
add
add
mov
les
testl
inc
test
push
mul
ss
mov
lods
iret
lret
dec
insl
sbb
mov
pop
hlt
mov
stos
xchg
into
mov
orb
and
jae
jbe
lret
sbb
bound
fs
and
fsubs
mov
jo
inc
xchg
sub
adc
jns
pop
lods
loopne
pop
lret
loop
add
mov
outsl
mov
fnstsw
out
push
ja
lds
mov
addl
jp
xchg
shrl
jmp
cmp
movsl
adc
mov
cmp
inc
sbb
xchg
ret
fmuls
sbb
and
loopne
push
or
pusha
sub
out
add
out
mov
ds
or
or
stos
ljmp
push
nop
popf
gs
jp
xchg
xor
clc
popf
mov
sub
jecxz
push
xchg
add
insl
mov
sub
dec
dec
cltd
test
mov
aam
rcl
push
inc
or
inc
mov
sti
stos
dec
rcll
sub
mov
lret
movsl
scas
sub
sbb
push
and
arpl
jl
rcll
in
dec
sbb
jecxz
mov
cltd
sbbb
jg
fiadds
and
adc
jns
jg
aas
cmc
pusha
xor
ljmp
std
xor
push
testb
xor
lea
test
mov
push
jb
int3
inc
insl
sbb
adc
cli
stc
test
jge
mov
pop
ss
sti
mov
inc
std
and
pop
movsl
jbe
add
sti
pop
ret
cmpsb
push
loope
clc
pop
cmp
rorl
jecxz
dec
dec
or
xor
shrl
fsubs
cmpsl
xchg
mov
outsb
jg
jmp
dec
mov
decl
addr16
enter
sbb
ss
lea
jne
in
xchg
dec
loope
and
insb
push
or
popa
fwait
adc
xor
cli
imul
mov
dec
push
loop
jne
add
inc
fmuls
or
add
and
arpl
repz
push
xchg
and
push
push
test
xor
in
movsb
lret
dec
mov
xlat
mov
inc
cmpsl
mov
ljmp
insl
andl
pop
cwtl
insb
imul
cmc
sub
popf
mov
int
sbb
pop
out
call
push
filds
cmpsl
lods
in
pop
test
cld
add
ss
sbb
xlat
cmpsl
adc
and
fildll
dec
mov
sub
cmc
mov
jo
and
out
outsb
mov
ljmp
in
int
cmpsb
and
in
dec
push
xchg
mov
test
lahf
cli
in
jo
or
dec
outsl
push
xchg
xor
sub
add
movb
inc
mov
dec
call
lret
push
sar
push
fs
xchg
mov
or
or
pop
gs
fmuls
adc
rcrl
es
pop
pop
mov
out
mov
dec
stos
push
popf
out
xchg
jne,pt
xor
cmc
push
lds
outsb
test
pop
ret
xchg
push
ljmp
in
sbb
fsub
mov
rcrb
mov
mov
jne
mov
outsb
jmp
mov
psrad
push
bswap
gs
lcall
sub
insl
xchg
push
imul
inc
mov
mov
and
into
pusha
in
xor
pusha
cmp
adcl
fdivs
sti
mov
rcll
int
mov
push
pop
testb
fldt
fdivs
and
ret
lds
in
int3
test
xchg
repz
adc
test
jns
push
mov
shlb
ja
fs
mov
and
dec
pop
insl
in
pushf
loope
addr16
insb
fistpl
and
sub
mov
aaa
stc
push
or
cmpsl
in
dec
cmp
add
sub
movsb
les
mov
clc
imul
dec
roll
outsl
xor
lret
adc
xchg
adc
loope
push
push
adc
cmp
xor
dec
inc
ja
sub
movsl
push
retw
push
add
adc
pop
xchg
add
adc
pusha
int3
nop
dec
in
sbb
in
dec
cld
inc
xchg
aad
scas
fistps
cld
push
pop
xor
cltd
lea
mov
insl
dec
test
movsl
sub
xor
lahf
xor
movsl
mov
sahf
pop
sub
add
sbb
mov
aam
dec
push
inc
pop
movsb
es
lods
fs
sbb
or
add
push
inc
inc
test
jle
cmp
sub
xchg
inc
adcb
fmull
jmp
mov
jae
mov
lock
ljmp
mov
inc
inc
orl
or
jge
xchg
in
cld
pop
xlat
mov
outsl
lret
or
push
movsb
cmpsb
ja
cli
mov
adc
inc
xorb
cli
mov
imul
sub
nop
and
scas
test
fildll
and
test
fcmovb
or
xor
gs
cmp
and
es
testb
lcall
xorl
jg
test
pop
pop
pop
mov
bound
sbb
cli
shlb
addl
jmp
sbb
stc
in
dec
jb
mov
lds
xchg
in
movsl
shl
outsl
fisttpll
or
mov
stos
sbb
outsb
outsb
cmp
mov
pop
mov
and
insl
mov
inc
andl
push
mov
gs
in
bound
dec
xor
and
xadd
loop
sbb
lods
push
insl
orb
dec
lods
in
pusha
jno
cmp
sbb
xchg
cmp
idivb
mov
xchg
fsubs
fdiv
pop
xchg
jns
jp
scas
dec
inc
add
pop
movsb
aad
pushf
iret
sbb
test
sbb
mov
imul
cli
cwtl
imul
arpl
cmp
aam
lods
pushf
rcrb
xchg
pop
xchg
scas
xchg
add
loope
pushf
push
xor
pop
test
add
test
push
mov
cmp
and
cmp
je
lea
aaa
shrl
das
or
stc
push
add
mov
mov
sti
jno
dec
jns
inc
add
inc
popa
xchg
dec
inc
cmp
int
sub
push
push
xor
pop
in
dec
inc
popf
out
xchg
xor
add
loop
popf
in
ja
adc
in
dec
sbb
fmull
inc
sbb
popa
loopne
in
jnp
std
insb
imul
sub
scas
sub
inc
out
jo
insb
pop
lods
adc
or
ret
repnz
jp
mov
sti
cld
popl
cmc
arpl
and
mov
add
add
cmp
fcom
pusha
mov
or
shll
dec
pop
mov
jb
add
or
add
insl
cmpsl
lret
lds
int
cli
fists
pop
ss
push
add
cld
in
sub
ret
mov
jmp
jecxz
mov
pop
stc
enter
rolb
mov
aaa
mov
cmpsb
jge
xor
pop
pop
loop
int
mov
int
dec
ds
xchg
push
imul
imul
xchg
inc
inc
push
mov
mov
mov
ret
ret
cmpsb
pushf
js
incl
lea
ffree
push
push
in
jmp
jae
add
stc
fsubrl
pushf
inc
pop
mov
mov
fstpt
mov
mov
or
or
xor
xor
out
lock
add
mov
fcompl
outsb
sbb
cmpsb
mov
hlt
pushf
jmp
pop
test
stos
out
push
clc
into
cmove
rorb
inc
adc
subb
sub
sub
or
pusha
cli
std
lea
mov
jmp
les
sub
adc
mov
xchg
inc
lock
mov
cli
rcl
clc
mov
xchg
push
mov
mov
scas
mov
js
cmp
push
sbb
push
push
cltd
in
dec
call
pop
push
idivb
mov
jb
mov
xchg
lretw
out
lahf
arpl
mov
adc
pop
and
mov
lea
and
sub
icebp
push
shlb
add
mov
mov
jne
lcall
dec
sub
das
jbe
cmpsb
sub
lds
hlt
leave
pop
daa
dec
push
sbb
jl
in
es
lods
xlat
je
stc
sbb
mov
pop
je
jp
sub
adcb
and
mov
inc
std
sahf
xor
and
mov
int3
pop
cmp
adc
bound
add
cli
outsb
pop
jne
lock
mov
mov
rclb
jecxz
xchg
or
daa
add
loopne
mov
push
ficompl
jae
xchg
adc
inc
leave
test
jge
mov
imull
sbb
test
in
jecxz
or
adc
xorb
xchg
cs
add
stos
pop
aaa
arpl
jbe
xchg
sahf
mov
test
das
je
dec
mov
int
outsb
fwait
addr16
gs
clc
xchg
mov
inc
cmp
adc
fcomps
outsb
jo
mov
dec
mov
mov
movsl
decb
sbb
add
cwtl
push
xor
nop
mov
adc
or
call
cmp
push
or
sub
lods
in
fcomp
das
mov
mov
movsl
mov
stos
jne
movl
inc
ror
out
mov
cmpsb
xchg
dec
mov
inc
mov
jl
cld
je
les
dec
pop
jle
bound
jo
imul
jle
das
movsb
push
mov
mov
pop
lods
pop
mov
int3
add
pop
add
mov
pop
or
adc
push
mov
mov
cld
in
sbb
cmp
jno
push
pop
sub
lock
icebp
add
push
sub
xchg
mov
test
out
aad
push
icebp
and
mov
in
sbb
in
pop
and
jp
mov
lahf
mov
dec
shlb
pop
jae
ss
mov
inc
repnz
data16
int
out
push
jle
or
int
into
mov
inc
inc
pop
daa
mov
inc
xlat
and
pop
les
xchg
add
inc
dec
lcall
jb
sahf
jae
cwtl
hlt
js
bound
stc
mov
dec
mov
add
mov
jbe
mov
test
xor
test
xchg
and
fsub
pop
mov
stos
adc
dec
mov
mov
pushf
std
pop
add
aad
dec
pop
cltd
dec
lea
popa
fistl
cmp
jbe
mov
adc
cmp
call
outsb
loope
jle
add
outsl
adc
pop
imul
sub
ds
es
jbe
dec
es
jg
lret
pop
ret
leave
je
mov
jecxz
dec
xchg
dec
sti
inc
or
aam
mov
sbb
and
jb
out
xor
mov
outsb
mov
out
out
jmp
pop
mov
shrb
pop
call
test
lea
mov
stos
adc
mov
hlt
pop
in
movsb
scas
jne
in
loop
outsb
xchg
sbb
aas
push
pop
test
imul
fucomip
mov
icebp
cmp
jb
xor
lretw
fildl
popa
and
mov
popa
xchg
cmc
inc
movsl
lret
sbb
insl
test
sub
cs
and
jge
insb
jo
pushf
in
shl
mov
jo
mov
push
negb
sti
testb
cld
rorb
mov
adc
jmp
push
add
push
mov
push
dec
stc
jmp
adc
xor
icebp
into
popa
lahf
stos
mov
shll
mov
das
test
mov
xchg
jns
addr16
adc
stos
scas
xor
cmc
fidivrl
pusha
and
cwtl
addb
fucom
nop
xlat
icebp
sarb
push
fcompl
scas
sbb
add
sub
sbb
ret
fcomps
icebp
lds
sbb
mov
jl
pop
lods
jne
cmp
frstor
pop
and
js
pop
mov
repz
test
popf
jmp
sbb
push
xor
call
in
push
jge
leave
cmp
cmp
nop
decl
cmp
addr16
sbb
das
lods
or
lods
dec
js
mov
add
cmp
adc
cmp
pop
pop
neg
xchg
testb
inc
pusha
aaa
lret
out
inc
pusha
and
mov
aas
sarl
es
xlat
out
lahf
mov
cmpsb
cmpsb
mov
or
cltd
dec
cmpsl
xor
fsubs
stos
fidivs
mov
orl
andl
sub
mov
jecxz
add
movsl
jno
std
sub
mov
arpl
mulb
dec
lret
dec
mov
fimuls
fldl
lods
dec
iret
in
sbb
sahf
loopne
test
cwtl
aaa
or
sarb
add
jecxz
xchg
jns
and
push
sub
or
cmpsl
jge
jno
jno
arpl
mov
push
mov
cwtl
jb
xchg
cmc
or
ljmp
lahf
push
xchg
lret
fisttpll
dec
inc
xchg
cmp
mov
inc
pop
push
xchg
movsl
sbbl
out
push
lcall
test
dec
xchg
shrb
jmp
sub
data16
sub
mov
pusha
imul
test
pusha
inc
rcrl
xchg
insl
add
test
insl
stos
adc
xchg
mov
pop
push
lcall
lahf
add
add
dec
mov
outsb
rorl
xchg
mov
cmp
scas
movsb
pop
test
pop
out
scas
jl
pushf
out
clc
mov
leave
bnd
push
jecxz
ja
jl
xlat
push
jbe
and
and
dec
sbb
fcoml
scas
scas
cmpsl
xor
nop
inc
insl
cmpb
adc
mov
dec
rcll
inc
sbb
inc
pop
mov
cmpsl
and
in
lods
jmp
lods
mov
push
sub
jmp
test
xor
inc
aas
sbb
inc
icebp
cld
sbb
xor
inc
mov
dec
pop
or
pop
jbe
insl
insl
sbb
data16
jns
lcall
scas
push
shr
mov
lods
dec
or
mov
stos
ret
jp
jno
inc
xor
sub
inc
mov
pop
rorl
jae
sub
jp
out
mov
bound
dec
adc
testb
xchg
ret
xchg
xchg
jbe
xchg
xchg
push
pop
inc
rcrl
mov
rorb
dec
jle
lret
and
dec
sti
popa
push
int3
xlat
cltd
aad
rol
xchg
xchg
cmc
xor
ljmp
mov
sub
mov
push
movsb
addb
push
ret
push
outsl
xor
decb
and
push
divb
push
and
jno
js
popa
fstpl
jecxz
rcrb
fldl
adc
sub
mov
xor
pop
sbb
int
dec
lods
jb,pt
push
ror
in
icebp
push
bound
sarb
push
stc
lcall
fs
lds
push
hlt
cmp
imul
outsb
xchg
lods
loope
mov
push
cmp
dec
pop
push
test
insl
xchg
push
add
jg
push
aad
jae
mov
jne
lods
pop
fidivrl
jp
mov
arpl
xchg
lahf
loope
or
dec
pop
adc
sbb
dec
mov
insl
iret
xor
pop
adc
sbb
hlt
sub
push
hlt
cltd
push
and
mov
push
es
cmpsl
push
inc
cmpsl
or
add
addr16
xchg
xor
sbb
outsl
and
mov
ficomps
push
dec
ret
out
mov
dec
stos
inc
sub
jl
cmpl
and
sbb
mov
cmp
pop
in
popa
jl
fisubrs
and
jge
pop
das
leave
in
inc
adc
mov
xchg
clc
or
cwtl
int3
jp
aaa
cvtpi2ps
xor
jno
xchg
icebp
daa
jg
insl
jp
cmp
int3
jl
out
mov
xchg
adc
mov
pop
xchg
adc
mov
cli
fisttpl
cs
movsb
xchg
adc
or
lock
insb
jl
pop
sbb
sbb
mov
mov
andb
or
leave
pushl
xor
sub
loop
lret
dec
add
inc
pushf
test
movsl
stos
ja
or
shll
pushf
dec
dec
stc
mov
mov
js
outsb
xor
ficoml
push
push
dec
pop
xchg
mov
and
rorl
fwait
rorb
adc
adc
mov
xlat
incb
sub
lods
cld
ret
test
mov
sbb
cmp
aas
mov
out
mov
cmpsl
jb
cltd
popf
jmp
sub
xor
adc
sbb
cmp
add
mov
add
insl
push
test
sub
dec
pop
mov
dec
jnp
push
jbe
fidivs
add
add
popf
push
sub
pop
push
adc
cmpsb
es
sbbb
dec
fwait
jmp
push
daa
in
mov
sub
mov
jg
xchg
stos
cmp
pop
push
cmpsb
mov
adc
mov
into
movsl
cmp
inc
ja
lahf
repz
pop
xchg
add
enter
loop
jmp
stos
adc
push
fstps
dec
js
inc
jl
das
push
test
mov
dec
rcr
xchg
leave
pop
cmp
aam
sbb
enter
lret
and
ret
sahf
mov
inc
es
sarb
testl
lret
push
xor
in
fs
and
mov
cltd
inc
mov
mov
add
mov
inc
jne
push
xorl
push
into
xchg
pusha
push
xlat
pop
mov
dec
adc
data16
aad
lods
icebp
push
in
scas
es
dec
rorl
scas
test
ret
xchg
movsb
in
lods
or
mov
and
pop
movsl
scas
sbb
sub
pop
jg
mov
mov
in
push
cmp
in
jne
pop
xchg
mov
xchg
clc
ljmp
jg
lds
test
mov
mov
mov
mov
loop
xchg
xchg
cmp
jg
cmpsb
mov
add
mov
movsb
loope
pushl
imul
sbb
push
push
dec
insb
xchg
xor
xchg
xchg
int
add
xchg
mov
mov
bound
addb
cmc
sarb
inc
push
lds
outsb
call
mov
sahf
xchg
popa
sahf
jnp
adc
inc
pop
je
out
dec
or
aam
fsincos
aas
rolb
pop
mov
mov
jge
imul
sbb
cmpsl
push
cmp
mov
sbb
sbb
ret
lods
sub
mov
into
int3
outsb
pop
jno
jbe
cmp
lcall
test
jbe
daa
rclb
dec
jbe
add
pusha
lods
es
adc
arpl
add
add
aam
sahf
and
fsts
mov
xchg
pop
cmpb
fsts
sbb
xchg
jmp
ret
and
mov
aas
mov
xor
lret
mov
mov
mov
pop
inc
inc
loope
mov
fcmovnu
push
or
test
push
mov
js
add
fsub
pop
add
das
ret
repz
xor
fxch
test
sub
testl
push
mov
add
push
push
mov
cmp
add
mov
lock
xor
pusha
or
inc
popa
add
cmp
add
ja
lods
cmp
in
mov
insb
mov
jmp
ficompl
mov
pop
jb
stc
lea
jbe
cs
lcall
imul
pop
and
rcrl
inc
ss
scas
hlt
sbb
nop
fsubrl
rcrb
mov
xchg
les
cwtl
shrb
lcall
pop
scas
mov
push
and
mov
jbe
in
add
sub
and
mov
dec
cld
sbb
hlt
sub
sbb
cmpsb
lock
add
mov
cmp
xor
movsl
data16
xor
in
lret
dec
in
pop
or
pop
fnstsw
inc
push
xorl
xchg
loope
jo
mov
cmc
and
xchg
test
decl
test
push
jle
mov
mov
int
rolb
cmp
pop
cs
ss
push
sbb
sub
pop
repnz
shl
xchg
fstpl
push
iret
hlt
flds
inc
jmp
rep
pop
pop
mov
lgs
int
lar
ss
arpl
push
pop
jno
dec
into
push
sbb
bound
adc
push
sub
rorl
mov
or
push
xor
popf
jle
fidivrs
dec
pop
insl
into
xchg
rorb
mov
or
adc
sti
adc
repz
inc
ljmp
fildll
loop
inc
addb
push
pop
ss
repz
repnz
cld
xchg
sub
mov
and
sub
call
int3
sbb
movhps
enter
mov
or
sub
push
or
nop
js
fcmove
mov
rolb
outsb
sub
jae
dec
test
lods
sar
out
insb
int
mov
icebp
cmp
add
dec
andb
dec
mov
dec
xchg
fldl
aaa
mov
xchg
xchg
add
push
dec
xchg
fdivl
xor
std
int3
push
pop
lods
and
repnz
rorl
pop
inc
lock
std
mov
jl
or
adc
iret
and
cmp
test
pop
ljmp
daa
or
mov
ss
adc
stc
enter
sub
push
pop
pop
xchg
mov
inc
xchg
outsb
cwtl
movsl
lret
jne
pop
es
sbb
xchg
out
xchg
push
js
nop
clc
pop
dec
mov
push
cwtl
pop
fwait
and
fldt
std
outsl
inc
cmp
out
pushf
add
add
repnz
repz
je
movsb
xor
in
faddl
mov
mov
aam
and
outsl
mov
jmp
inc
mov
jne
dec
filds
stos
and
jp
cmp
mov
xchg
in
pop
popf
data16
fidivrl
mov
mov
xchg
pop
outsl
cwtl
std
mov
cmp
cmp
out
fdivrs
mov
shr
xor
fsubr
dec
rcll
cmp
shrl
out
jbe
dec
mov
fsubrl
out
sbb
cmpsl
insb
pop
dec
xor
cmpl
and
pop
jl
adc
mov
push
pusha
and
jb
push
xor
fsqrt
dec
cmp
test
stos
sub
dec
mov
dec
shl
cmp
adc
es
add
into
adc
add
lds
or
sbb
test
jmp
mov
lret
faddl
xor
dec
pop
xor
ret
jbe
pop
xorb
xor
mov
pop
or
mov
jg
jb
xchg
lret
inc
jns
fbld
aaa
push
sub
push
adc
pop
jb
aad
and
nop
int
scas
ds
ds
inc
mov
sti
sub
idivl
movsb
test
scas
ds
movsl
aas
xlat
gs
mov
pop
adc
mov
iret
add
int3
add
into
xchg
mulb
inc
or
cmp
push
cmp
cmpl
gs
cltd
push
cmp
sbb
adcl
subb
mov
mov
shlb
movsl
fistps
lods
divl
push
add
jl
mov
add
inc
cmpsl
out
xor
cmp
shlb
push
xchg
jbe
jge
cmp
cmp
xor
hlt
mov
adc
mov
aad
adc
mov
and
mov
pop
xor
andb
loop
mov
lret
pop
stc
repz
nop
xchg
out
data16
xor
fbstp
movsl
add
mov
in
push
ret
andl
rcl
out
js
sahf
or
outsb
iret
cmp
xchg
ret
pop
cmp
add
mov
jg
adc
cmp
stc
add
jns
jns
mov
pop
dec
mov
pushf
stc
nop
daa
sti
cmp
es
cld
mov
jae
mov
adc
hlt
into
iret
pop
sbb
mov
sbb
shlb
imul
dec
pop
rcl
pop
jo
je
push
xor
stos
movsb
or
loop
lcall
jecxz
out
add
adc
push
xchg
outsl
fisubl
clc
mov
outsl
mov
dec
cmp
add
leave
sbb
pop
adc
outsb
pop
fldz
pop
push
aaa
dec
cmp
std
xor
cmp
insl
jp
out
pushf
dec
scas
jns
cmpsb
out
addr16
and
test
mov
dec
mov
push
or
cmpsl
gs
and
pop
adc
mov
jae
jmp
inc
scas
lds
lods
fadds
sub
and
jns
nop
pop
xor
cld
jge
sbb
push
cmp
jmp
pop
arpl
or
dec
test
adc
ljmp
inc
push
xor
mov
sub
sub
in
nop
jbe
repnz
cmp
in
negl
jecxz
jle
pop
addr16
je
test
shlb
js
packsswb
push
mov
inc
cmp
dec
lret
push
fsts
dec
scas
add
ret
mov
add
mov
pusha
sub
gs
daa
mov
push
mov
loopne
jg
xchg
dec
jecxz
repz
iret
outsl
and
cmp
test
push
and
bnd
sub
mov
cmp
pop
out
fisttpll
dec
fcoml
xchg
std
aad
cmc
xchg
jae
push
leave
push
sbb
or
in
inc
jbe
sub
add
cmpsl
data16
mov
aad
pop
jne
sbbl
mov
ds
ljmp
adc
jle
sub
mov
imul
hlt
push
jle
or
sub
jp
mov
mov
aam
imul
mov
mov
add
xor
in
jnp
stc
and
jb
xchg
pop
add
add
inc
lahf
adc
js
mov
mov
xor
sarb
sar
bound
ficoml
or
mov
test
ds
jmp
xchg
int3
rcrl
iret
sub
xchg
lahf
cltd
subl
or
mov
jns
mulb
cld
test
inc
or
cmp
xor
push
sbb
sti
imull
scas
or
pop
adc
sub
xor
ret
in
mov
test
and
inc
lods
cld
sbb
iret
js
dec
cmp
sbbb
int3
sub
clc
and
dec
pop
cmp
cmp
xchg
frstor
or
adc
pop
pop
lcall
xor
or
ja
icebp
mov
mov
add
fisubl
pop
hlt
mov
lock
xor
orb
push
into
and
notl
outsb
jb,pn
js
test
xchg
jbe
mov
in
icebp
jmp
mov
icebp
ja
cld
hlt
pusha
mov
pop
inc
xor
cmc
sub
scas
push
xchg
sub
push
add
push
movsl
fists
fidivs
push
push
stc
add
lret
jle
pop
xor
xor
sub
test
and
sarl
lods
test
mov
rolb
inc
out
aaa
stos
sbb
adc
loopne
ljmp
jo
sbb
fs
repz
orb
enter
iret
dec
push
fbld
jp
rol
in
addr16
outsl
push
jl
pusha
fmull
add
mov
dec
ds
fcoml
incb
jg
data16
mov
data16
addr16
jmp
hlt
mov
dec
pop
pusha
imul
sbb
mov
adc
or
cmp
test
xor
call
int3
adc
pop
xchg
in
pushf
inc
pop
cmp
inc
and
ljmp
movsb
mov
clc
adc
scas
bound
cmc
xor
jns
jp,pt
inc
dec
les
dec
movb
lods
pop
cmp
inc
leave
mov
xchg
jno
xchg
mov
ficompl
inc
pop
mov
dec
lahf
xchg
ffree
jg
jne
in
scas
pop
push
mov
test
jmp
pop
inc
je
cld
sti
add
push
cmp
pop
ret
loop
lcall
pushf
stc
xor
ds
sbb
jb
sbb
aad
in
outsb
bnd
inc
xchg
inc
sbb
ss
loope
aaa
and
repz
inc
pop
sbb
mov
add
cmpl
push
ss
pop
out
lret
xor
ret
int
push
scas
xchg
push
test
mov
mov
movsl
adc
subb
fwait
hlt
xchg
dec
mov
stc
dec
aad
pop
mov
or
jne
pop
dec
mov
or
xchg
icebp
inc
xchg
push
jge
adc
push
nop
jns
aaa
in
lret
sti
adc
flds
stos
fwait
cmpsb
mov
fdivp
nop
hlt
add
scas
mov
add
mov
or
dec
rol
xlat
out
aam
ss
mov
push
stos
test
dec
cmpsb
inc
aaa
cmp
shrl
fsubl
imul
mov
mov
sti
invd
cmp
pop
mov
cmp
mov
popa
xor
jne
mov
sub
push
jl
inc
mov
leave
cmp
mov
mov
pop
mov
mov
pop
popf
inc
xlat
dec
xchg
and
sub
sub
sbb
jne
loopne
int
or
push
pop
add
xchg
jno
mov
mov
cli
adc
clc
test
mov
xchg
mov
jg
inc
aam
add
fimull
jle
imul
aaa
imul
mov
fstl
dec
mov
and
add
pop
sbb
lahf
mov
sub
out
aaa
fidivs
and
filds
subb
repz
mov
test
in
cmp
cmp
and
or
xor
lods
insl
adc
dec
ficoml
cmp
mov
aad
inc
bound
movsb
seto
into
and
inc
xchg
lret
xchg
fldl
fwait
push
xlat
cmp
sub
outsl
dec
and
fdivs
mov
mov
sbb
xor
aam
pmaxub
cmp
push
in
adcl
xor
sbb
std
insb
leave
fbstp
dec
sbb
sub
sub
cwtl
call
inc
mov
loop
das
mov
mov
mov
ja
ljmp
sar
dec
dec
xchg
mov
lods
fsubrl
jp
add
jb
jg
add
fiaddl
outsl
enter
divl
loope
sarl
iret
iret
adc
les
inc
adc
outsl
enter
daa
dec
mov
out
pop
scas
mov
sahf
cli
pushf
out
mov
mov
hlt
xor
inc
and
pushf
loopne
or
rorb
jp
lods
sbb
dec
jg
rcrb
stos
pop
push
testb
pop
xor
lock
jmp
in
popf
lods
push
pop
or
in
enter
std
xchg
mov
popa
lock
xchg
lods
shlw
stos
adc
adcb
jecxz
stos
ss
adc
movsb
icebp
cmp
fcmovu
aam
pop
dec
mov
inc
ja
pop
icebp
add
aam
sbb
sub
data16
div
int
cmp
cmp
les
mov
and
add
notl
mov
lret
jmp
mov
xchg
cmc
fisubrl
leave
addr16
cld
dec
lea
sbb
stos
ret
cmpsb
push
out
xchg
lods
test
xor
dec
lea
jne
sahf
ret
loope
rcrb
into
adc
inc
or
add
mov
bound
test
mov
inc
pop
xor
ss
inc
inc
mov
andl
loope
frstor
sub
in
mov
push
push
xchg
lods
or
gs
into
movsl
sub
xor
push
sbb
sub
pop
fisubrs
daa
loope
cmp
repz
xchg
arpl
dec
sahf
mov
jo
das
sbb
imull
test
shlb
add
negb
or
fisubrl
mov
mov
inc
dec
jmp
mov
sbb
adc
decl
ja
jg
xor
push
into
es
fidivl
push
xor
pop
adcl
mov
push
add
scas
fistpll
cmp
sbb
inc
push
adc
xchg
and
xor
call
stos
iret
ret
mulb
call
sub
mov
mov
iret
js
push
fadds
push
lret
push
cmpsl
insb
stos
inc
fsubrs
sbb
or
mov
cmp
in
dec
js
push
lods
and
pusha
daa
outsb
pop
int3
es
ds
lret
inc
cmp
sbb
cmp
shr
sub
addl
and
dec
adc
dec
push
bound
add
jl
pop
dec
push
jle
mov
push
xor
inc
mov
xchg
or
call
mov
clc
dec
sbb
inc
pop
dec
lock
fsubr
out
hlt
ret
mov
and
push
add
arpl
into
xor
imulb
or
call
cmp
decb
ja
in
sub
cmp
inc
repnz
inc
mov
aas
sub
dec
test
push
icebp
push
dec
shll
and
mov
enter
xlat
mov
lcall
scas
cmp
inc
out
movsb
pop
aam
scas
outsl
leave
icebp
aaa
lret
pop
iret
push
les
loopne
jbe
cltd
fiaddl
aad
out
mov
inc
das
push
and
repz
push
xchg
in
mov
out
cmc
add
xor
rclb
clc
dec
daa
push
lods
bound
sbb
js
scas
mull
shr
cmp
add
xor
sub
and
adc
mov
repnz
dec
div
mov
cmp
mov
lods
js
sub
orl
les
faddl
dec
cmp
pop
pop
mov
hlt
push
mov
cmp
call
xchg
mov
xorl
pushf
mulb
pop
sbbl
lock
cli
or
sbb
in
or
push
fwait
fwait
push
aad
fcmovb
enter
out
or
dec
fisubs
jb
mov
mov
dec
mov
mov
fcmovnb
mov
aad
out
adc
scas
pushf
arpl
inc
dec
movsb
lahf
ret
popf
add
and
clc
pop
dec
jle
push
lcall
mov
in
iret
sub
mov
xchg
pop
fistl
mov
sub
mov
sbb
setg
mov
rorl
push
cmp
lock
nop
addb
jl
jbe
out
sbb
mov
shr
ljmp
jmp
cmpsb
mov
int3
cwtl
out
inc
mov
push
jbe
mov
push
cmp
xchg
aam
pop
out
xchg
fidivrs
ret
sub
es
push
add
pop
insl
sbb
or
jle
rclb
fcoms
inc
adc
jo
cmp
cmp
loop
xchg
testl
pop
sbb
sbb
pushf
mov
or
rcll
dec
cmpsl
aaa
mov
push
loop
push
lods
mov
outsl
sbb
sahf
lods
push
mov
mov
xchg
popa
pop
mov
call
cmp
inc
cwtl
sub
cld
sbb
lea
sub
cmp
imull
xchg
sub
sbb
stos
jp
iret
adc
mov
sbb
rolw
dec
daa
or
popa
lock
out
and
sub
daa
test
xchg
cltd
dec
adc
pop
push
test
xchg
enter
into
pop
out
lods
xchg
cmpsl
rorb
inc
rdmsr
rolb
push
xor
repnz
lret
mov
in
mov
int3
rorl
push
mov
push
or
cmp
fldt
je
mov
adc
push
stc
lock
movb
pop
jle
push
shll
xchg
cli
pop
fiaddl
push
test
cmpsb
jne
mov
xchg
mov
pushf
dec
cmpsb
mov
mov
out
inc
popf
mov
lret
rorb
dec
xchg
push
clc
mov
js
stos
cmp
and
cmp
push
sub
shll
das
and
adcb
js
xlat
aad
inc
cmp
mov
add
imul
lea
sub
imulb
cmpsl
cmpl
xchg
lret
in
cmp
push
jne
xor
adc
xchg
popf
sub
fwait
and
inc
mov
rol
lods
ror
inc
sub
lret
add
aas
pop
inc
pop
adc
mov
iret
movsl
xorl
call
xchg
outsb
aad
or
xor
inc
dec
mov
add
xor
jnp
and
mov
stos
add
mov
dec
mov
mov
loopne
sbb
idivl
mov
aas
faddp
cld
xchg
fadds
addl
cmp
add
out
mov
jnp
ror
jp
enter
cmc
sub
adc
outsb
fisubl
inc
sub
jecxz
andl
rorb
outsb
dec
aas
gs
adc
jnp
daa
pop
into
cwtl
xor
pop
cli
cmpsl
icebp
lret
jo
cmp
push
xchg
pusha
cmp
cmp
and
sub
cmc
in
cmpsb
mov
sbb
into
mov
addl
ret
or
mov
hlt
and
sub
sbb
int3
mov
mov
lods
xchg
mov
in
xor
mov
sti
into
cs
loopne
stos
pop
loop
clc
add
pop
add
fildl
shlb
dec
jne
out
sub
adc
jns
jno
pop
mov
scas
out
and
cmp
scas
mov
or
push
push
aas
sub
cmpsl
enter
pop
imul
mov
fisubl
jecxz
int3
pop
xchg
call
call
mov
push
xor
adc
pop
popf
outsb
jo
hlt
push
mov
sbb
inc
mov
enter
in
mov
sub
repnz
sbb
paddusw
and
pusha
mov
xchg
enter
cmp
sbb
mov
cmp
test
xor
or
shlb
shr
das
inc
and
in
cmc
js
stos
mov
or
cmp
jno
in
or
dec
popf
cwtl
dec
xchg
push
popa
movsl
fldl
in
not
sarl
aad
les
int3
sarb
cmp
movsb
call
add
pushf
popl
pusha
xlat
dec
sbb
mov
inc
nop
mov
sub
push
shll
testb
out
pop
xor
sub
pop
std
jbe
scas
or
mov
pop
inc
adc
jg
mov
xchg
and
mov
adc
mov
dec
inc
leave
xchg
jmp
dec
mov
inc
cmpsl
xor
inc
test
push
mov
dec
or
adc
jmp
shlb
repz
xor
ds
fstl
cmp
mov
fistl
lock
or
add
pop
and
dec
and
xor
mov
or
sub
xchg
inc
insl
cwtl
pop
jmp
mov
stos
data16
mov
and
mov
pop
insl
fwait
add
mov
xchg
enter
xor
cmpsl
add
rolb
mov
dec
testl
iret
in
push
ljmp
cld
lret
xor
pop
aaa
jae
sub
jo
out
cmp
std
xchg
mov
xlat
iret
cmp
call
stc
mov
bound
mov
aam
add
jns
das
pop
fdivrs
jl
popf
inc
jmp
add
xor
frstor
fistpl
shl
inc
xchg
mov
lret
lret
outsl
xor
out
popa
test
fadds
cld
adc
mov
xorb
iret
mov
jge
imull
bound
sahf
cmp
iret
lahf
ficompl
mov
int3
dec
add
pop
xchg
mov
cmp
push
dec
test
mov
jae
inc
inc
mov
push
stc
and
inc
repz
enter
cmp
pop
ja
leave
jmp
fidivs
out
sti
ljmp
cmp
add
std
xor
push
arpl
and
sbb
lahf
add
adc
mov
cmp
nop
xor
lcall
pop
fs
pop
push
dec
jns
mov
leave
sbb
data16
mov
mov
fs
pushf
xchg
or
cwtl
fst
inc
js
pop
aaa
xor
sbb
sub
inc
mov
mov
push
cmp
or
push
out
dec
ss
cmpsl
test
jbe
in
add
jo
mov
inc
mov
mov
cwtl
mov
add
dec
pop
xchg
lret
out
addb
out
and
jne
lcall
xchg
loop
add
adc
sub
clc
sub
mov
sarl
imul
push
lods
in
pop
sahf
dec
mov
pusha
push
call
adc
scas
adc
dec
jp
lock
imul
or
out
aas
jns
aam
rcr
mov
xor
mov
jmp
fs
mov
pop
in
mov
iret
xor
cmp
sub
int
fisubrl
xchg
push
pop
ja
aaa
insl
jb
adc
lcall
sub
shr
push
or
fsubrp
mov
xchg
out
repnz
mov
and
xchg
jb
cmp
and
ss
bound
lea
jmp
push
arpl
xchg
sub
or
push
inc
sub
cld
push
pop
sbb
mov
fsubrp
arpl
dec
or
in
stos
sbb
inc
adc
in
jns
sahf
enter
daa
int3
lods
inc
aas
jne
mov
adc
aad
add
in
mov
xor
sar
mov
dec
stos
enter
xor
add
in
fidivrs
and
stc
outsl
fwait
jnp
outsl
shlb
inc
std
jne
adcb
lds
into
sbb
xchg
cmovp
inc
das
sbb
cmp
or
icebp
inc
cs
in
and
test
push
jbe
push
fcomp
jno
mov
mov
lahf
call
in
aam
in
hlt
xlat
mov
and
sti
lahf
sbb
arpl
xchg
sbb
mov
jo
mov
mov
adc
aaa
ret
addr16
sti
mov
notb
scas
push
out
dec
outsb
stos
jno
gs
sub
popf
cs
sbb
icebp
aam
test
lcall
ret
clc
dec
in
adc
es
cmp
mov
adc
and
xchg
inc
mov
xor
add
pop
stos
xchg
loop
cmp
out
xor
adc
rorl
or
out
sbb
fldt
in
push
scas
jbe
lahf
repz
aam
fiadds
jb
outsb
xor
sub
addr16
push
in
ss
and
pop
sub
bound
test
pop
jae
je
mov
pop
mov
or
out
sub
std
rorb
subb
outsb
rcll
sub
rorl
hlt
push
adc
xchg
sub
jne
jge
or
pushf
mov
pop
mov
adc
in
pop
push
loop
aam
pop
mov
dec
push
repnz
sub
cmp
sub
cs
jge
add
pop
test
pop
push
sub
push
popf
aaa
in
cmp
in
sbb
sub
jmp
dec
add
adc
xchg
jp
inc
cwtl
pop
leave
and
dec
divb
cmp
jmp
subl
int3
adc
popf
sbb
lea
mov
das
std
enter
jl
jecxz
dec
pusha
sahf
or
jmp
into
adc
lods
adc
push
sahf
fdivs
test
mov
pop
ljmp
flds
xchg
or
jecxz
es
or
mov
cmpb
mov
lods
inc
scas
stos
xor
sbb
mov
lret
sub
icebp
push
ja
and
pushf
aam
lcall
jnp
sahf
xor
lret
add
adc
inc
jg
popa
dec
push
fmuls
gs
xchg
jo
push
cltd
mov
aas
adc
pushf
stos
mov
or
mov
fwait
cmp
fnstsw
pop
fdivl
or
jge
dec
leave
ss
dec
insw
ret
xchg
popa
rcr
ret
orl
jbe
movsl
mov
std
jp
int
lahf
lods
fistps
adc
call
lret
xchg
fsubrl
sbb
das
add
inc
leave
ds
cltd
push
dec
pop
aaa
fists
fsub
test
jg
ljmp
jb
arpl
dec
adc
jae
arpl
ja
mov
and
push
xchg
ficomps
push
push
pop
std
out
pop
jmp
push
cld
sub
ds
jno
mov
imulb
xor
jmp
jb
pop
stc
sbb
add
ss
sbbb
pop
fimuls
repz
adc
inc
ss
sub
inc
pop
jp
aas
hlt
jg
xchg
stos
sub
sbb
or
lea
jne
les
repnz
outsl
pushf
jae
and
imul
push
rcll
jae
dec
sub
jno
mov
movsl
movsl
add
jle
cmp
xchg
cmp
sub
mov
test
mov
add
xchg
call
iret
cs
out
imul
xchg
adc
jecxz
hlt
sub
xor
pop
mov
push
mov
cltd
lret
xor
not
test
adc
add
jne
loope
cmpsb
gs
in
lcall
insb
lods
mov
test
insl
ret
cmp
lock
and
rclb
or
jno
jae
fists
sahf
and
cli
fdivl
scas
pop
add
fwait
jae
fstpl
imul
or
mov
mov
xor
sub
and
mov
insl
mov
stc
loopne
cwtl
mov
out
aam
ficomps
push
cld
push
jbe
mov
vcvtsd2si
pop
cld
cmp
xchg
popf
addr16
push
mov
pop
jp
cmpsb
jae
and
int
pop
or
jmp
scas
xor
aad
jg
test
aad
pop
mov
add
call
mov
ljmp
push
jl
and
or
cmpsb
push
out
push
in
test
push
and
pop
rorl
cmc
adc
lahf
popf
and
jecxz
popa
sub
shlb
cmp
repz
in
jne
pushf
jp
mov
lea
jns
fs
mov
lods
inc
cld
adc
loope
jns
push
testl
or
sub
adc
in
add
push
mov
mov
lods
xor
push
mov
push
push
inc
cmp
dec
inc
int3
mov
cmpsl
imul
mov
sbb
cmp
ficoms
sub
dec
pop
repnz
pop
xchg
adc
iret
mov
pop
cmp
aaa
fcmovne
roll
jmp
shll
sbb
pop
movsb
sub
jge
cwtl
cmp
jg
xlat
adc
icebp
gs
xchg
pop
cmp
loopne
mov
les
ret
cs
ret
dec
addr16
or
add
fstpt
clc
pop
frstor
in
seta
and
clc
int3
mov
repnz
pushf
icebp
add
incb
aaa
cmp
add
xor
jecxz
iret
sub
popf
mov
adc
ret
rcpps
mov
xchg
fdivrp
cmp
repnz
jno
xchg
inc
je
sbb
mov
add
mov
adc
neg
outsb
popa
dec
lds
and
dec
data16
dec
mov
sub
cs
call
ror
fnsave
mov
imul
pop
sbb
std
mov
rorb
scas
cmp
pop
adcb
adc
jno
jnp
adc
jnp
lods
pop
es
and
les
lret
aas
cwtl
aam
test
bound
popa
mov
movsl
incl
sahf
fimull
and
idivl
cltd
movsb
mov
adc
mov
push
pop
mov
mov
ljmp
adc
mov
je
jae
mov
mov
test
and
call
or
mov
add
lea
jo
adc
pop
repnz
mov
add
dec
inc
mov
cld
ja
push
js
aam
fmuls
popf
cld
addr16
push
jmp
add
mov
imul
cld
imul
fdivs
cmc
or
dec
sbb
icebp
sub
sub
fstps
pushf
sbb
pop
mov
sarb
mov
out
push
lods
dec
push
mov
jnp
test
cmp
add
lock
into
leave
loopne,pt
dec
repz
dec
inc
mov
cs
int
mov
dec
mov
test
out
xchg
out
mov
roll
pop
xorl
fdivp
fstl
dec
sub
shl
add
test
inc
xor
or
sbb
test
sbb
sub
scas
adcb
mov
sahf
dec
push
mov
test
icebp
ret
mov
adc
jae
inc
inc
addr16
inc
ljmp
jl
cmp
out
cmp
xor
insl
mov
incb
push
cmp
ret
mov
fwait
sarl
dec
ret
xlat
dec
lods
push
adc
xchg
nop
or
stc
arpl
mov
jg
fisubrl
outsb
xchg
cmpsl
scas
xchg
xchg
shll
jle
push
sub
pop
xchg
mov
lret
mov
stos
sub
movsb
lahf
subb
mov
mov
subl
xchg
push
es
js
fwait
rolb
adc
lahf
stos
ja
mov
decl
aam
shll
push
lock
adc
push
inc
adc
leave
popa
xor
and
pop
jo
dec
jmp
cmp
or
push
test
add
in
stc
fnsave
dec
pop
mov
pop
xchg
xor
andb
ret
inc
and
push
sbb
mov
xor
pop
loopne
fbstp
outsl
leave
sub
mov
inc
lcall
cli
cs
mov
out
mov
cmp
pop
pop
pop
sahf
imul
jle
or
mov
aad
movsb
mov
imul
mov
enter
add
aad
push
movsl
pop
mov
sti
test
aas
fisttps
cmp
pop
dec
pop
push
cwtl
mov
xchg
jbe
cli
pop
cmp
sub
push
inc
stos
dec
fistpl
fs
adc
fmul
pushf
jnp
in
cli
xchg
mov
std
push
aad
jecxz
movsl
or
js
xchg
hlt
aaa
push
jb
lods
insb
mov
jge
and
dec
dec
push
pushf
loopne
push
je
mov
rcrb
mov
test
xchg
push
fsubl
testl
xchg
push
mov
aas
jb
fcmove
mov
cli
push
mov
push
mov
sbb
push
outsb
sbb
jecxz
and
add
ja
je
into
addr16
in
in
xchg
inc
iret
test
popf
iret
lock
in
pop
mov
inc
test
inc
cld
add
lds
test
sub
fsub
jle
mov
in
fnstcw
lret
insl
push
xchg
mov
push
cmpsl
xor
push
stos
xchg
and
int3
lret
ss
push
mov
dec
mov
inc
mov
xor
scas
sbb
clc
int
push
call
cmp
rcrl
in
int
cmp
xor
pop
fucom
cmc
and
fcomps
push
cmp
int3
jg
mov
xor
movlps
imul
jbe
das
fwait
lahf
add
scas
je
mov
lods
gs
and
or
mov
add
jp
int
repz
jg
icebp
xor
stc
push
push
or
je
mov
mov
mov
lods
ja
mov
dec
in
jns
adc
mov
out
sbb
into
cmp
xchg
loop
cld
pop
into
and
stc
mov
clc
jbe
dec
fdivrl
les
cmp
out
cmp
mov
push
testb
jae
fbstp
jl
nop
ret
in
mov
cmp
pop
xor
push
and
adc
sbbl
imul
inc
clc
adc
cld
sbb
adc
cmp
mov
adc
mov
sbb
push
mov
stos
in
sub
ret
cmp
mov
pop
out
push
int
fsubrl
inc
in
shll
mov
repz
sub
mov
shrl
add
lods
out
lea
and
int
cmp
inc
clc
fcom
jle
dec
cmp
dec
fmuls
loope
or
jp
mov
out
sbb
dec
mov
add
or
xor
dec
in
ja
out
xor
shrl
and
and
jge
xchg
cli
fmulp
xor
es
out
aam
push
ret
rclb
sti
add
adc
and
cmpsl
sub
in
insb
js
push
cltd
or
adc
imul
loope
cmpl
mov
mov
lds
int3
nop
inc
fidivrl
adc
jae
pop
test
lahf
mov
pop
aad
xor
dec
pop
xchg
push
fucomi
lret
rcll
scas
jbe
in
jmp
adc
pop
push
aaa
and
sbb
cld
dec
call
cli
mov
loopne
xlat
lret
cmpsl
in
push
testb
lret
outsb
pop
lret
mov
mov
mov
mov
jmp
sarb
mov
mov
out
les
or
cmp
and
cmp
push
mov
cmp
xor
xor
jbe
adc
stc
and
jne
pushf
sub
pop
cmp
push
jnp
jp
jns
testb
movsl
jbe
fsubrl
stos
xchg
fs
pushf
jbe
jo
je
inc
lods
insb
mov
mov
loop
in
pop
adc
or
rol
fisttps
push
rorb
sbb
mov
stc
ja
add
jae
dec
push
arpl
outsl
push
add
dec
icebp
push
push
imul
or
adc
dec
iret
or
lahf
xchg
aad
xchg
mov
call
movsl
xor
jne,pt
fstp
add
mov
mov
dec
xchg
xchg
jb
ret
in
outsb
push
test
add
movsl
leave
mov
mov
add
or
adc
in
xchg
push
js
xor
lock
mov
push
scas
aam
movsl
xchg
xchg
ss
mov
jb
adc
xchg
imul
adc
xor
jnp
and
mov
je
pop
mov
add
cmp
pusha
ljmp
sahf
pop
insl
cmc
add
mov
cmp
xchg
jne
sarb
roll
xchg
jb
pop
movsl
jg,pt
iret
cmc
push
or
repnz
lcall
mov
xchg
mov
add
xor
js
xor
sub
nop
dec
imul
je
xchg
or
cli
mov
mov
jle
jg
idivl
push
mov
dec
inc
imul
mov
mov
shlb
add
sub
inc
push
inc
adc
mov
jmp
aaa
insb
add
mov
shrb
insl
mov
push
mov
adc
xor
into
add
inc
leave
xchg
pop
jg
push
inc
push
cmc
jae
push
push
or
jno
or
push
xchg
mov
fcmovnbe
test
adc
adc
mov
cmp
mov
push
and
jle
or
add
mov
out
jno,pt
clc
fdivl
mov
in
push
add
pop
ds
mov
sbb
aaa
stos
subl
scas
push
testl
scas
sub
push
sahf
mov
sub
mov
insb
lret
xor
ret
cmpl
ss
cmpsl
ret
inc
xchg
fists
dec
orl
fidivrl
popa
sahf
mov
sub
lret
addb
mov
or
mov
aaa
lret
mov
lret
mov
lods
js
dec
popa
jns
out
sbb
enter
xor
push
mov
sub
ljmp
push
int3
inc
mulb
xchg
rorb
gs
pop
cs
add
roll
stc
gs
jo
shl
stos
xchg
jae
mov
lds
inc
nop
adc
and
add
ret
mov
xchg
jecxz
fsubl
inc
or
pop
mov
jmp
xor
dec
ficompl
pop
xchg
mov
jmp
pop
xchg
adcl
add
push
roll
cltd
int
add
or
repnz
xchg
sub
adc
jp
call
adc
data16
mov
dec
add
std
xor
fidivs
int3
loopne
rcll
mov
aaa
ljmp
imul
outsb
pop
nop
imul
adc
add
testl
out
mov
fwait
int3
mov
fwait
xor
add
pop
repz
insl
sbb
dec
mov
inc
dec
xchg
jl
inc
je
sbb
cwtl
xchg
mov
xchg
xor
sti
sbb
sbb
pushf
je
mov
sahf
sarl
dec
cmc
jne
les
jbe
pop
xlat
das
nop
lahf
scas
test
imul
cs
mov
lcall
cld
pop
sbb
stc
add
sbb
dec
sbb
xchg
sahf
ret
push
icebp
jge
mov
and
xchg
jg
mov
push
xor
pop
mov
mov
mov
sbb
cmp
into
gs
mov
int
aaa
scas
shl
call
mov
arpl
aas
das
cmp
loop
lcall
sub
xor
fdivrs
scas
push
fmull
sbb
pop
stos
mov
sub
mov
mov
sbb
mul
adc
mov
rorl
pop
push
icebp
mov
outsb
pushf
shll
cwtl
jge
or
cmp
cmp
xchg
and
mov
sbb
test
pop
test
orb
in
std
out
mov
pop
or
lahf
mov
mov
xchg
adc
jns
cmc
sti
and
cld
rcll
pusha
fistpl
mov
xchg
fcom
mov
xchg
sahf
xchg
inc
pop
pop
sarb
sbb
orl
push
xchg
in
mov
imul
cmpsb
in
test
pusha
and
lods
jle
add
mov
outsl
fdivl
push
cmpsb
mov
sub
cmpsb
mov
jno
mov
insl
out
cli
push
cmp
aaa
lcall
push
lds
jne
sbb
lods
rorb
mov
adc
mov
jg
test
sub
pop
pop
inc
lahf
push
imul
mov
cmpsb
adc
add
mov
test
sub
cmpsb
push
iret
fcomps
inc
pusha
lret
push
pop
popf
mov
addr16
testb
jb
pop
jle
je
add
pop
or
stos
jno
into
adc
push
lock
xor
dec
call
add
push
dec
stos
push
test
cmp
in
or
push
xchg
repz
adc
lcall
addl
das
push
adc
rcrl
je
lea
outsb
pop
stos
xchg
push
ret
jnp
in
add
lods
dec
and
jne
pushf
and
scas
mov
addb
inc
and
inc
fwait
stc
sub
repnz
mov
aas
cltd
into
sub
popa
imul
and
push
xchg
push
or
cld
jne
jmp
shr
jnp
repnz
jno
dec
pop
push
sub
or
mov
mov
pop
mov
lahf
adc
cwtl
adc
xcrypt-ecb
cmpsl
push
add
out
rcl
inc
adc
xchg
cld
ficompl
dec
jl
mov
lcall
pushf
xchg
lret
or
test
pusha
pop
shll
inc
icebp
cmp
adc
mov
sbb
xor
or
jbe
out
sub
sti
in
lock
cld
ret
adc
pshufw
mov
stos
fwait
sbb
test
repz
cld
cmp
mov
pusha
fucompp
hlt
ja
push
ss
leave
mov
js
and
lcall
sahf
push
repz
movsl
push
dec
dec
lret
std
imul
mov
out
mov
sbb
jo
cltd
mov
push
fcomi
adc
push
pop
mov
adc
les
stos
pushw
bsr
jge
xor
loopne
lods
lods
and
mov
add
loope
xchg
rcr
dec
aas
or
aas
lods
jbe
neg
mov
jmp
sbb
fs
pop
pop
repz
pop
pop
xor
leave
ficompl
andl
outsb
mov
push
out
cwtl
test
jle
inc
test
push
sbb
shll
xor
mov
stc
sbb
pop
push
fldcw
and
dec
ficompl
jae
mov
xchg
mov
mov
cmpsb
xchg
fistl
jae
daa
pop
mov
sbb
ficoms
imul
stc
dec
cltd
out
hlt
pop
mov
idivl
mov
fmuls
arpl
in
inc
cwtl
jle
fldt
dec
xor
jb
cld
fcoms
loopne
subl
mov
pusha
jne
xor
xchg
push
sbb
sub
xor
aam
mov
test
das
es
test
jp
cwtl
dec
xor
mov
xor
movsb
les
bound
mov
int3
and
std
ljmp
dec
mov
mov
rorl
or
dec
stos
int
sbb
int
popf
ja
inc
dec
lods
sub
jns
xor
das
push
and
sbb
add
mov
dec
mov
inc
std
sbbb
xor
sbb
jmp
test
or
xor
rcrl
pop
add
rcrl
lods
insl
std
ss
lock
jg
call
mov
push
or
jge
mov
mov
cmp
mov
mov
icebp
xchg
daa
movsl
lock
jmp
stos
add
pop
adc
dec
fdiv
xor
lods
or
es
ja
insl
jecxz
dec
mov
jne
sub
test
and
inc
lods
in
mov
add
or
inc
mov
pop
bnd
nop
pop
data16
add
rclb
fwait
jo
mov
mov
out
bound
adc
imul
sbb
jnp
pop
mov
mov
cld
mov
jbe
adc
pop
sbb
jbe
fistpl
xchg
jg
aam
push
in
mov
scas
mov
iret
ret
jns
repz
cli
sub
and
gs
mov
mov
add
cli
push
ss
lock
pushf
dec
pop
enter
cmp
out
imul
xlat
pop
dec
addl
xchg
cmpsl
fsubrs
je
loope
add
inc
cltd
mov
push
dec
iret
mov
test
push
pop
lods
sbb
xchg
rcrl
ja
cmp
add
push
pop
mov
xor
push
fsubr
or
mov
test
movsb
popa
leave
cmp
fwait
or
sub
mov
inc
mov
in
adc
mov
out
cltd
adc
mov
test
ret
fldenv
sub
aad
jbe
sub
jp
sbb
movsl
rol
cmp
mov
mov
or
mov
subb
push
sub
push
adc
mov
inc
inc
in
pop
cmp
movsb
ja
jo
pop
sbb
mov
fistps
add
mov
cmpsb
xlat
pop
inc
mov
xchg
cmpsl
cmc
stc
fldenv
cmpsl
leave
pop
jnp
or
dec
dec
lds
sbb
mov
sbb
push
jnp
lahf
fidivs
sbb
js
jl
xor
fstpl
notb
cmp
mov
int
mov
pop
xor
xchg
mov
dec
mov
pop
push
pushf
in
cltd
dec
jecxz
adc
in
xchg
pop
add
repnz
inc
fadds
mov
call
sbb
push
roll
inc
sub
aaa
cmp
jns
and
int3
add
mov
push
push
or
pop
testb
lcall
xchg
psrad
jbe
mov
pop
sti
sahf
mov
daa
lds
cmpb
in
xchg
inc
push
jmp
inc
add
push
in
andb
and
std
jle,pn
mov
inc
and
mov
cld
bnd
xor
mov
incb
cmp
xchg
daa
pop
jno
push
lods
orl
mov
mov
pop
pushf
jl
imul
call
xchg
lock
mov
rcrl
mov
adc
xor
shrb
cs
push
lds
jo
jmp
ljmp
loope
sarb
jmp
lea
hlt
rep
in
outsb
add
cwtl
jo
mov
aad
add
mov
popa
loope
je
daa
in
andl
scas
sub
mov
xor
daa
int
cmp
adc
andb
dec
xor
dec
std
andl
mov
jb
or
cmp
test
cmp
outsl
cs
fbstp
add
mov
iret
push
sti
movsb
or
int3
ffree
lods
adc
add
xchg
aas
pop
ja
data16
and
test
jge
clc
jmp
into
imul
mov
daa
std
or
adcl
insb
lcall
dec
sbb
mov
push
aas
cld
int
sahf
jae
fs
push
mov
subb
cltd
sub
into
shrl
mul
in
loope
addr16
arpl
add
sbb
cmp
inc
xlat
test
js
cwtl
cmpsl
pop
and
cmp
and
xor
fnsave
lahf
mov
out
lret
xchg
jg
xorb
push
insl
adc
int3
popf
ret
into
inc
scas
test
shr
lret
fists
outsb
adc
mov
pop
mov
mov
sub
cmp
mov
dec
and
jne
testl
out
adc
mov
inc
xor
mov
pop
inc
stos
cmc
mov
scas
and
ret
push
xchg
pop
testl
sahf
scas
cld
or
or
pop
les
inc
add
fidivs
les
orl
es
cmp
inc
in
xor
lret
cmpsb
jle
xchg
inc
loopne
sub
push
daa
repnz
lods
sbb
sbb
lea
mov
das
dec
jl
out
ret
call
mov
popa
mov
sbb
inc
pop
icebp
jbe
pop
cmpsl
pop
or
sub
cmpsl
inc
sbb
jae
out
into
mov
in
pop
sbb
addl
cwtl
rcrb
clc
cmc
dec
mov
mov
jecxz
popa
jo
mov
jae
jp
jns
sbb
cmp
push
lock
pop
loope
sub
jmp
sub
pop
dec
mov
data16
sub
add
gs
dec
out
into
or
xor
popa
notl
ret
jmp
loop
popf
stos
daa
loop
ss
lcall
sub
xchg
lods
std
lods
mull
mov
mov
incl
xchg
leave
fwait
insl
cs
xchg
lcall
stos
outsb
outsl
jnp
ficoms
into
icebp
popf
xchg
xchg
xor
pop
push
mov
out
push
mov
pop
add
outsl
hlt
and
dec
fiadds
cmpsl
or
int
xchg
pop
xchg
fdivs
mov
push
cld
aam
pop
mov
push
adc
mov
add
xorl
ljmp
adc
push
lret
cmp
sarb
out
lret
out
mov
add
jo
jg
jb
mov
or
jns
add
sbb
mov
cmpsl
and
iret
mov
ds
xchg
gs
xchg
test
add
push
ficoms
iret
dec
fs
int3
adc
push
add
popa
mov
mov
loopne
mov
or
notl
ret
inc
push
push
mov
jne,pn
fcoms
fstpl
in
mov
ja
leave
jle
dec
xchg
dec
pusha
in
rcll
fsubrs
aas
rol
pop
mov
and
icebp
mov
lock
fstpl
inc
rolb
xchg
jnp
cmp
pop
movsb
addr16
and
xchg
das
les
je
jmp
ja
arpl
push
clc
cmpsl
imul
loop
inc
mov
popf
scas
jo,pn
xor
popf
jmp
sbb
dec
fcmovbe
pop
stc
js
sub
sbb
push
inc
je
pop
cmpsb
popa
sar
cmp
mov
sub
inc
adc
vmovq
push
pop
xor
dec
mov
pop
cltd
or
pop
sub
mov
push
mov
dec
inc
sbb
add
sbb
imul
jae
and
js
inc
add
test
inc
cmc
jns
lods
cs
pop
jne
je
pop
jne
ljmp
or
arpl
loope
xchg
insl
adc
push
iret
lds
orl
roll
mov
in
int
mov
cltd
data16
jnp
sub
mov
dec
arpl
mov
test
xchg
cmp
in
es
or
xchg
dec
adc
into
fcompl
nop
mov
mov
xchg
sub
push
imulb
mov
addr16
push
fcoms
rcll
mov
pop
cmc
roll
movsl
xor
sahf
call
in
test
addl
inc
xor
std
fwait
mov
mov
jmp
int3
jg
pop
and
jb
xchg
pop
aad
jmp
push
dec
mul
sbb
dec
pop
pop
cmp
jne
xchg
repz
mov
mov
cmp
fistl
inc
mov
dec
jo
lds
lds
mov
add
je
movsl
or
lret
loopne
bound
and
outsb
cltd
lods
cmc
pop
daa
cmp
lret
jno
ds
out
xchg
or
leave
push
mov
sub
pop
jne
pop
xlat
loopne
xor
incb
or
into
inc
mov
xorl
sbb
cltd
mov
fstl
sbb
mov
xchg
dec
adc
int3
sti
test
movsl
imul
push
lods
hlt
faddl
bound
popf
pushf
fwait
or
icebp
jl
in
jge
out
xor
lds
mov
jns
inc
repz
xchg
inc
std
arpl
mov
sub
je
mov
pop
subl
sub
sbb
psrad
jnp
iret
sti
push
aas
jg
scas
cltd
dec
fmull
xchg
add
popa
shlb
std
sub
into
mov
int3
pushf
outsl
push
adc
fwait
pushl
and
push
fs
or
xchg
adc
xchg
aam
push
cld
push
xchg
mov
aam
lods
bnd
pop
aas
cs
push
mov
stos
mov
xorb
or
dec
sbb
adc
lock
sbb
jo
push
out
adc
fs
mov
adc
fisubs
jle
es
mov
stos
inc
ljmp
pop
adc
sub
cvtps2pi
cmc
cmp
imul
sarl
daa
xchg
cmp
xchg
cmpsb
out
cmp
mov
pop
xor
and
mov
stos
mov
test
bound
xchg
ret
push
movsw
push
mov
add
and
aad
int
inc
add
dec
insb
mov
arpl
loop
cmp
mov
mov
orl
cmp
mov
push
jne
and
jge
pop
loop
pop
loope
xchg
lea
cmp
sbb
inc
lcall
xor
nop
imul
cmp
fldt
movsb
mov
es
lods
fs
sbb
cmovns
insb
aaa
mov
and
inc
adc
mov
push
out
xor
push
je
int
lods
rorb
js
inc
fs
aas
int
fistl
sub
aaa
out
mov
xchg
negb
popa
test
and
push
push
mov
push
mov
push
adc
jmp
negb
mov
cmpb
mov
jg
sti
push
xor
jns
jb
inc
and
fadds
call
pop
xor
xchg
mov
push
add
cvttps2pi
je
loopne
loop
repz
jmp
or
lret
gs
mov
addr16
dec
pop
nop
stos
aas
adcb
adc
fldenv
sub
sbb
daa
into
pop
imul
add
sub
gs
dec
bound
inc
mov
dec
ja
and
add
arpl
add
and
mov
into
adc
loope
cs
push
mov
pop
or
sbb
jbe,pt
xchg
cwtl
faddp
popa
push
sub
rclb
loop
sbb
hlt
and
or
mov
add
mov
jno
ss
sbb
mov
aam
ficompl
xor
das
cwtl
push
or
add
ror
call
clc
repz
orb
jge
pop
mov
js
xchg
rcl
dec
adc
xchg
int3
in
or
xor
bound
or
cmpb
mov
or
test
inc
inc
mov
or
sbb
mov
xlat
out
fmull
mov
xchg
aam
jno
and
lods
mov
xor
test
cmp
repnz
sbb
neg
and
rclb
cmc
or
mov
mov
aas
cmp
ja
cmp
mov
pop
jecxz
stos
pop
stc
fistl
std
push
and
movsl
cli
std
push
dec
pop
sbb
fldt
adc
xchg
jp
inc
test
insb
faddl
mov
xchg
jle
or
lcall
push
inc
nop
ljmp
mov
or
jne
mov
jae
lds
pop
pop
push
sbb
add
sbb
mov
xchg
in
insb
push
scas
test
aad
nop
or
jp
int
cmpsb
xchg
insl
stos
pop
or
icebp
and
xchg
adc
outsl
mov
mov
sub
dec
in
lret
jo
mov
adc
outsl
dec
insb
mov
ds
add
addr16
popa
sub
jg,pt
mov
into
adc
dec
and
inc
test
bound
lods
inc
das
imul
adc
stos
les
jae
es
pop
inc
es
cltd
jb
cs
inc
loopne
aad
movsl
aam
cmp
lret
or
repnz
sub
pushf
push
fsubrs
mov
fcompl
shl
xlat
mov
bound
xchg
mov
insl
mov
pusha
xorl
lret
shlb
repz
lahf
iret
ret
xlat
mov
or
mov
fs
pop
nop
nop
ds
jb
lds
repnz
in
sub
or
and
xchg
loop
lea
ret
mov
mov
add
les
cltd
mov
dec
mov
aam
notb
out
mov
pop
sub
adc
mov
inc
pop
cmpb
test
jecxz
and
lds
mov
imul
int
jg
sbbb
pop
repnz
out
nop
cmp
cmpb
ret
stos
bound
pop
inc
mov
add
pop
and
stos
add
and
xorb
lock
and
mov
xchg
add
sub
sti
mov
xchg
fcmovu
xorl
addb
or
mov
xor
pop
xchg
cmpsl
cmp
popf
imul
inc
jecxz
mov
jp
test
or
rcpps
ret
pop
pop
mov
rorl
outsb
daa
pop
es
cmp
or
add
sarl
jp
jbe
test
mov
out
shlb
xchg
loop
lcall
or
mov
adc
mov
sub
jmp
pop
cld
daa
lcall
fisttpl
dec
jns
imul
pop
adcb
push
mov
iret
xor
imul
idivl
out
in
dec
pop
repz
push
lods
lds
wbinvd
or
jb
xchg
shl
insl
out
lret
mov
idiv
push
mov
mov
cmp
adc
fwait
jo
je
cmp
xor
mov
inc
mov
mov
jne
stos
push
push
cmc
xlat
pushf
pop
inc
pop
pop
inc
in
cmp
scas
or
push
mov
in
cld
cmpsb
add
sub
scas
push
test
cmp
pop
bnd
test
rcrl
dec
dec
add
or
popf
add
xchg
repnz
pop
xchg
scas
cmpb
jg
inc
jl
dec
mov
scas
and
popf
aam
fs
push
clc
in
jae
sub
test
jg
cwtl
add
xchg
les
rcr
cltd
mov
ret
push
add
sbb
scas
or
rclb
out
insb
mov
xchg
mov
clc
pop
push
xor
adc
sti
sti
adc
out
decb
pop
jle
or
or
pop
xchg
xor
lret
stos
fists
cmp
xchg
out
mov
mov
xor
dec
push
cmpl
push
scas
xchg
out
sti
in
stos
cld
sub
sti
cs
add
jg
add
push
mov
lret
inc
stos
dec
jp,pn
push
rolb
fisubs
data16
and
push
xchg
sub
popf
mov
push
or
scas
pushf
outsl
add
push
and
das
mov
jo
ds
mov
test
or
aam
mov
into
jmp
shrl
mov
fildl
outsb
mov
push
sahf
cmpsb
out
push
faddl
outsb
loopne
mov
es
mov
fidivl
cld
and
fistps
fldenv
cli
sub
dec
fisubrl
in
add
mov
sbb
jo
jl
movsl
jnp
mov
lret
sbb
pop
aam
out
aad
add
xor
stos
pop
pop
and
mov
cwtl
xchg
setge
fsubrs
ljmp
clc
sub
xchg
pop
pop
addb
push
sahf
xor
mov
or
ret
out
mov
jg
xor
pusha
call
js
lods
cmpb
mov
mov
iret
lock
and
sarb
dec
jmp
aas
scas
jnp
and
pop
mov
roll
inc
xor
nop
push
push
pop
mov
mov
sahf
popa
sbb
loop
jno
xchg
xor
xchg
ja
xor
cmpsb
push
mov
shr
push
jae
in
dec
icebp
xchg
dec
movsb
add
jecxz
cli
repz
jge
iret
jne
in
ds
cwtl
jno
mov
sbb
sub
dec
cmp
rcl
push
mov
fldenv
mov
pop
and
jb
mov
mov
dec
cmpsb
ds
lret
mov
push
and
loopne
inc
push
inc
xchg
daa
mov
mov
and
mov
mov
dec
mov
popf
test
adc
data16
orl
stc
and
mov
inc
leave
shll
leave
iret
xchg
ret
arpl
sbb
and
sarl
in
jb
xor
cmpsl
pushf
repnz
xchg
ja
xchg
xchg
ja
popf
in
push
xchg
push
inc
jnp
and
mov
sahf
fsubs
dec
push
cwtl
fadd
cmp
stos
jp
into
ja
mov
fdivr
and
out
aad
int3
adc
cwtl
sahf
mov
inc
dec
mov
fnsave
adc
pop
fstl
aas
pop
lcall
cmp
add
test
pop
add
adc
adc
sub
inc
adc
jo
pop
add
xor
popa
push
xchg
jb
cmp
sbb
push
push
sub
imul
xchg
push
push
lahf
and
pop
sbbb
lahf
aad
dec
inc
inc
cmp
dec
ss
mov
adc
pop
xlat
pop
clc
push
stos
std
jg
mov
mov
std
cmp
loop
test
pusha
test
push
mov
push
sysret
fs
cmpsl
cmpsb
repz
jbe
xchg
out
sub
cmp
sbb
ljmp
push
in
push
mov
jne
scas
cmp
repz
mov
mov
stos
mov
lds
mov
pop
push
inc
mov
movsb
mov
imull
sbb
jg
cmp
add
push
dec
notb
gs
aaa
jecxz
lret
adcb
inc
cld
out
push
mov
test
mov
mov
sub
scas
imulb
dec
fsubrs
xchg
jle
push
xchg
mov
nop
pop
jp
hlt
std
into
push
push
decb
and
into
jp
mov
cmp
jne
add
ja
idiv
hlt
sub
dec
lret
adc
cmpl
cs
cwtl
sahf
cwtl
ja
lret
out
lods
mov
cmp
or
ret
adc
iret
adc
or
and
lcall
cltd
cmpsl
jnp
add
push
cmp
lret
lds
push
insl
push
mov
bound
inc
adc
xor
mov
shlb
addb
aaa
shlb
or
jmp
xor
inc
je
adc
subb
jbe
ror
movsb
dec
rep
std
push
or
int
mov
aas
xchg
dec
dec
test
into
stos
cwtl
xchg
pop
or
mov
jp
les
add
outsb
dec
daa
idivl
push
mov
shrb
sub
dec
into
push
test
aaa
insb
std
fidivrl
jecxz
inc
loopne
mov
stos
mov
push
adc
adc
dec
mov
aam
or
xor
cmp
scas
mov
ss
or
sbb
jno
insb
push
or
test
ficoms
push
das
pop
push
xlat
xchg
cmp
xor
out
pop
adc
add
test
in
ds
fcmove
cmpsl
popf
add
fisttpl
push
cmp
sub
xlat
out
sbb
ss
sub
loopne
add
push
out
rolb
or
or
leave
jnp
jae
pop
outsb
cmc
aas
sub
jg
test
bound
pop
mov
or
dec
jno
jb
mov
push
call
mov
rorb
outsb
jl
insb
xchg
mov
cwtl
mov
dec
or
leave
lahf
out
push
mov
adc
test
shll
aam
es
in
ss
shlb
jb
add
fidivl
cmp
into
lods
mov
ljmp
pop
mov
test
cwtl
push
test
into
andb
addb
xor
sbb
popf
loop
push
inc
or
gs
adc
enter
cmp
out
jo
lcall
pop
xchg
xchg
js
lds
add
data16
pop
cli
pop
cmc
mov
jg
loopne
loop
fstpt
test
push
xor
mov
and
push
cmp
out
mov
and
cli
mov
mov
mov
or
xchg
bound
pop
dec
test
push
lcall
xchg
pop
jae
jle
loopne
das
dec
jnp
push
sub
mov
aaa
cmp
addr16
xchg
mov
sbb
scas
and
cmpb
and
fistpll
jns
pop
inc
jp
mov
call
out
xlat
or
mov
lock
clc
ret
pushf
push
xchg
push
dec
jle
sti
in
push
cli
fld
pop
and
stc
sbb
sub
imul
inc
xchg
lret
movsb
arpl
jp
sti
lods
out
xor
cmpsb
pop
xor
fcomps
les
fwait
jle
mov
push
leave
and
lds
xchg
xor
mov
es
nop
insb
fstpl
ljmp
mov
mov
scas
inc
out
adc
push
leave
xchg
sub
out
push
jl
mov
mov
cmp
aas
mov
mov
mov
shll
pusha
cmpsb
pop
xor
sub
adc
sbb
cmp
cmpsb
lea
cmp
lods
xlat
jge
cmp
stc
aas
push
pop
dec
sbb
sbb
cmpsl
sub
mov
cmp
mov
mulb
arpl
rcll
lcall
jne
test
roll
and
jns
rclb
fdiv
cmp
add
mov
sub
loopne
or
jmp
jmp
aad
stc
dec
dec
dec
mov
pop
loopne
in
cmc
push
scas
mov
fldl
mov
loope
or
add
ss
lods
adc
shll
scas
dec
jns
adc
push
xchg
mov
xchg
cmpsl
sbb
in
push
cmp
inc
lods
out
cmp
pusha
cmc
xor
pop
inc
out
sti
outsb
repz
imul
addr16
xor
movsl
test
push
lcall
pop
inc
adc
push
and
ficompl
sub
jbe
nop
mov
mov
inc
sub
pop
movsl
cmp
sahf
lods
rcr
in
jns
sub
addb
sub
mov
shlb
mov
outsb
mov
bound
std
xchg
adcl
arpl
stos
fbstp
mov
and
cmp
sbb
ret
push
mov
inc
and
loopne
adc
lods
sub
pop
out
mov
push
sub
xchg
xlat
scas
shlb
shl
out
sahf
mov
dec
mov
xchg
cmp
das
push
cltd
call
dec
dec
scas
or
in
xor
cld
and
inc
jno
or
aam
rcll
clc
bound
icebp
xor
xor
xchg
sbb
fdivl
and
xchg
out
test
imul
mov
or
or
add
mov
xor
loopne
inc
sub
inc
add
and
imul
dec
push
arpl
rolb
push
loopne
stos
inc
shl
mov
jne
mov
pop
dec
jb
push
lea
pop
adc
ret
push
sbb
jae
and
mov
push
mov
dec
or
scas
mov
test
loope
jecxz
mov
es
cmp
sbb
mov
fwait
adc
push
call
cmp
xor
fcmovu
lcall
push
sub
push
push
mov
or
push
enter
data16
mov
sbb
sub
pop
ret
out
mov
in
jae
fcmovu
into
pop
mov
out
out
aaa
insl
jae
fidivrl
es
xor
add
loop
push
xor
repnz
lahf
lds
lea
repz
pop
lret
dec
int3
shrl
lret
mov
and
pusha
xchg
outsb
and
jne
and
inc
fldcw
add
jbe
cmp
test
mov
cld
nop
pop
push
jnp
push
cmp
cli
lar
lds
jle
mov
bound
mov
cmp
std
mov
sub
pop
addr16
data16
cmp
test
mov
js
jns
dec
adc
cmp
mov
xchg
aam
jl
jnp
push
sub
popf
add
push
mov
adc
cmp
ljmp
inc
out
fbld
xor
push
mov
adc
jge
sbb
scas
adc
aad
test
clc
mov
mov
push
mov
dec
dec
int
mov
jecxz
daa
in
push
push
fistpll
pop
outsl
and
sub
cmpsb
outsb
mov
pop
mov
pop
cmpsl
mov
adc
push
test
imul
scas
pop
ja
xor
xor
cmpsb
sub
popf
test
mov
xor
sub
pusha
xchg
out
data16
in
pop
daa
ror
mov
popf
mov
adc
nop
push
jge
jne
int3
push
xor
sub
mov
sub
xchg
adc
nop
xchg
inc
aad
mov
icebp
movsl
mov
movsb
inc
mov
popa
push
pop
sub
pop
fwait
pop
clc
stc
xchg
sub
mov
outsb
mov
push
adc
lods
mov
imul
loopne
cmp
push
sub
sbb
or
sub
jno
icebp
or
xor
sub
mov
popf
imul
subl
dec
inc
fisubrs
fsubrl
dec
inc
mov
and
adc
cmp
test
push
cmpsb
loopne
lahf
cmpsl
xchg
ret
sub
nop
adc
stos
xchg
dec
je
sbb
int
imul
mov
sub
popf
out
fstps
or
ss
xchg
ret
sbb
fstl
sahf
dec
into
jle
lock
into
cmp
test
pop
mov
test
into
jno
cmp
les
or
jbe
fisubrl
ljmp
fmul
sbb
test
fsubs
cltd
push
addb
sub
xchg
sbb
jmp
in
daa
les
clc
jecxz
and
popa
fisubrl
add
outsl
je
jbe
pop
xchg
inc
fwait
sbb
in
adc
and
xchg
xor
xchg
mov
imul
cli
jbe
fprem
add
push
or
lock
mov
in
cmp
cmpsl
je
loop
sub
insl
out
bound
sub
shlb
jge
push
js
push
mov
add
mov
clc
push
push
insb
mov
idivb
mov
jecxz
gs
out
pop
fs
repnz
imul
pop
sub
lods
lret
sbb
test
shl
cmc
mov
and
lea
xor
fcmovb
leave
push
jb
add
add
mov
cmpsb
in
test
scas
pop
adc
sub
sti
mov
int3
jo
test
daa
xor
scas
outsl
ret
xor
enter
sbb
cmp
jns
push
es
jle
push
data16
dec
pop
dec
mov
enter
xchg
insb
cmpsl
fidivs
cmpsl
mov
out
cs
lea
out
mov
dec
sub
mov
cmp
mov
je
cli
lahf
pop
je
jae
negb
mov
adc
jo
jmp
cmp
xchg
pushl
adc
mov
mov
sbb
fsubs
mov
hlt
jecxz
aas
adc
mov
rcrb
pop
js
adc
pop
test
in
sbb
pop
jmp
or
ja
notl
xchg
iret
push
dec
loopne
adc
rcll
adc
inc
push
pop
add
bound
nop
push
jb
adc
sub
lcall
jg
jo
or
inc
fmulp
inc
or
jne
push
sub
xchg
mov
stc
sbb
pop
fsubl
sub
mov
mov
inc
pop
outsb
daa
outsb
cltd
sbb
jnp
ret
push
pop
imul
insb
inc
push
cli
ss
xor
adc
and
ret
std
push
test
into
jne
fisttpl
pushf
lods
jne
aas
sbb
aaa
stos
addr16
div
pause
add
pushaw
or
and
nop
push
inc
lahf
fsts
xchg
loopne
in
in
adc
gs
inc
push
jmp
gs
push
pop
xlat
repz
popa
or
iretw
push
enter
leave
cmp
mov
xchg
dec
out
shlb
jo
cld
dec
testl
jecxz
rcll
jno
flds
add
aam
jo
push
or
or
sbb
popf
pop
in
pop
in
xchg
mov
mov
out
xor
outsb
sbb
lcall
lods
add
fdivrs
mov
enter
data16
xor
call
stc
lret
jnp
das
adc
xchg
pop
iret
or
stos
cmp
mov
loope
rorb
xor
imulb
sti
push
mov
leave
sbb
in
xchg
sbb
pusha
xacquire
in
mov
lret
shl
add
loope
in
addl
test
movsl
push
pop
mov
and
pop
lahf
scas
pop
add
or
fsubr
inc
jno
inc
mov
adc
dec
sub
insl
and
mov
std
lahf
mov
sahf
push
outsl
or
sub
pop
call
jge
pop
dec
ss
mov
fimuls
add
xchg
sar
xor
inc
loopne
pop
jge
test
sarb
test
inc
xor
fsubl
int3
icebp
mov
iret
rclw
mov
add
xchg
xchg
adc
pop
mov
inc
push
mov
push
stos
pop
divb
fiaddl
pop
jnp
jecxz
or
dec
push
lods
xchg
push
push
mov
ss
pop
ja
mov
les
mov
frstor
xchg
xchg
push
jb
mov
lret
push
mov
stc
sbb
movsl
insl
jae
cmp
out
push
fdivrs
call
or
sub
mov
xchg
push
push
jle
push
js
inc
jmp
sbb
dec
dec
jecxz
add
lahf
inc
push
push
dec
mov
lds
cmp
testb
lret
add
in
adc
mov
jecxz
ret
mov
incb
mov
jg
xchg
mov
orb
js
arpl
and
xlat
add
push
push
scas
cmp
test
xchg
jle
test
sti
pushf
lock
or
cltd
call
lds
and
or
sub
mov
push
clc
xchg
cmc
arpl
lea
cmp
cmc
leave
ffreep
mov
xchg
loopne
xor
add
fsubrl
dec
arpl
cld
dec
enter
lret
movsl
mov
or
aad
add
pushf
add
push
in
mov
inc
icebp
jae
pop
mov
popf
lock
gs
push
sbb
mov
int
int3
in
movsl
sub
mov
dec
shll
shlb
ret
lcall
andl
mov
adc
lahf
inc
xor
test
cmp
adc
in
inc
cmp
mov
ds
out
cmp
arpl
sub
inc
mov
dec
cmpsb
dec
inc
xor
dec
mov
loopne
xchg
cmp
imul
fisttpl
je
mov
and
xchg
popf
or
and
loopne
jecxz
ljmp
mov
or
ss
and
mov
int
jae
shlb
lods
enter
inc
out
int
sbb
or
mov
add
cmp
scas
fdivrl
sahf
push
pop
pop
pop
gs
mov
stos
push
jae
mov
cltd
adc
dec
add
jb
cmpsb
es
sbb
mov
pop
mov
xor
popa
mov
xchg
fs
xchg
jne
pop
fidivrs
call
mov
sbb
pusha
mov
add
ror
popf
sbb
pop
aad
or
leave
and
movsl
xor
dec
ljmp
sbb
push
xor
push
xor
adc
lret
push
push
push
dec
or
jbe,pt
dec
sbb
arpl
sub
sub
xor
xchg
sub
push
cld
jns
xchg
cmp
push
les
sbb
lahf
dec
mov
xor
fmul
xchg
fsubs
insl
push
pop
insl
and
lret
adc
insl
clc
push
mov
xchg
fcmove
js
xchg
xor
fnstcw
sub
test
push
xchg
sar
jmp
push
push
and
repz
pop
sub
xor
mov
loopne
testb
mov
push
jae
in
fstl
clc
dec
rcrb
dec
pop
mov
out
xchg
nop
gs
outsl
mov
cmp
pop
or
pusha
lods
jge
mov
push
cmp
data16
testb
test
dec
iret
inc
cmpsl
out
jae
dec
push
push
xor
inc
mov
in
bound
pop
mov
adc
push
jb
popf
aad
inc
jns
sarl
hlt
andb
and
lock
ja
pop
cmpsl
popf
out
mov
add
insb
mov
mov
out
adc
push
or
enter
pop
and
je
out
ljmp
fiaddl
jle
enter
xorl
into
and
test
adc
sbb
daa
jmp
loope
loopne
pushf
test
xor
popa
aam
ss
jmp
pop
inc
cmc
les
inc
mov
call
daa
gs
in
into
insl
dec
sbb
out
jmp
repnz
cmp
dec
incl
push
push
je
fnstenv
cltd
xchg
and
push
sti
clc
mov
adc
sub
js
or
loopne
jmp
ret
cmpsl
in
adc
imul
or
cmp
pop
and
rcrb
pop
stos
jl
hlt
loopne
pop
loope
test
xor
les
mov
js
push
jae
or
cmp
andb
daa
xchg
fistpll
mov
jae
fwait
jo
imul
std
sub
or
mov
mov
pop
xchg
lahf
imul
dec
lods
imul
aam
pop
arpl
mov
xchg
xchg
int
ss
loope
mov
loop
adc
adc
mov
pop
xor
adc
adc
lods
mov
cmp
sub
inc
ss
mov
arpl
pop
xor
push
inc
add
jne
shlb
or
fimuls
inc
sti
aaa
mov
push
test
push
testl
call
ret
in
out
into
imul
sub
fdivr
lahf
add
sti
sub
xor
xchg
lret
and
mov
outsl
jno
scas
xlat
lret
clc
mov
cli
in
sbb
fisubs
add
pop
jne
ror
dec
dec
push
add
add
fdivp
inc
insl
mov
xchg
fdiv
or
aas
aam
sahf
pushl
addl
loope
arpl
or
cld
in
ja
stos
pusha
outsb
loope
add
inc
adc
ss
pop
mov
jnp
popf
shll
ss
jg
andb
insl
lea
xchg
imull
jo
and
lret
xor
addr16
jecxz
into
xor
lret
and
jb
stos
push
sbb
jbe
stc
lock
rcl
xchg
xor
in
lret
xlat
mov
and
stos
test
cmc
mov
test
mov
cmpsb
test
pop
mov
sub
bound
add
out
add
inc
subl
cltd
push
mov
adc
fyl2x
pushf
fsubrp
xor
ljmp
mov
sbb
push
test
shlb
arpl
aas
adc
mov
jmp
or
loope,pn
push
jg
push
iret
mov
sti
stos
cli
push
mov
pop
stos
add
andl
in
pushf
js
dec
fs
outsb
je
mov
push
cmp
mov
xchg
ret
dec
xchg
sbb
dec
inc
cmp
mov
sbbb
fldenv
sub
xlat
ja
sbb
pop
xor
mov
cltd
jne
pop
cmp
fcompl
lea
pusha
dec
mov
movsl
adc
out
stc
pop
nop
push
das
sbb
xor
inc
pop
jne
fidivs
das
dec
imul
jp
xor
ljmp
cmp
or
les
pop
push
adc
pop
cmp
inc
inc
fistpl
inc
js
outsb
push
mov
jns
or
mov
xlat
iret
lret
lahf
or
mov
xor
xlat
jae
ljmp
leave
jp
jge
clc
mov
std
pop
lret
loope
cmc
testl
jne
inc
pop
aas
pop
jb
add
fldl
popa
push
outsb
add
xor
test
ss
mov
push
or
mov
mov
loopne
mov
jo
stos
push
jmp
xor
fwait
int3
push
test
lods
cld
or
inc
lret
pushf
adc
les
std
bound
ss
int
mov
jle
sub
ja
sahf
jae
mov
xor
jae
mov
add
xlat
insb
arpl
in
push
adc
sahf
cltd
push
adc
and
lea
dec
jbe
jp
shl
pop
sbb
mov
mov
mov
shl
mov
xchg
popf
sti
sub
mov
inc
pop
mov
ret
mov
and
rep
aam
xor
xor
push
mov
cmp
adc
xchg
cmp
in
pop
cmpsl
mov
fmul
pop
xor
lcall
fwait
xchg
ret
xchg
les
lahf
aas
inc
cltd
and
int3
pop
dec
pop
jns
std
cli
jae
test
push
jp
sub
push
pop
mov
repz
shlb
pop
insl
gs
movsb
jo
add
icebp
mov
pusha
pusha
push
sar
sub
test
pop
sub
aaa
ljmp
shl
and
lock
dec
lock
pop
jl
dec
in
aad
adc
iret
dec
xor
push
pusha
sub
add
cmp
pusha
dec
js
inc
adc
pop
icebp
fimull
loopne
lock
lahf
sub
clc
and
int3
bound
ss
adc
repnz
rcll
inc
xor
mov
das
js
pop
faddl
xchg
sub
aam
cmpsb
mov
fwait
or
popf
daa
jmp
mov
in
pop
xor
xorb
sub
rcrb
popf
or
daa
sub
les
nop
push
xchg
insb
add
stc
shrl
outsb
dec
fildll
push
int3
pop
mov
lods
test
inc
in
in
mov
rcl
mov
das
outsb
data16
mov
std
inc
add
jge
sbb
push
test
outsb
xor
adc
mov
cld
mov
jo
lcall
outsl
mov
inc
fucomi
push
sbb
mov
out
sbb
jmp
scas
scas
addb
pop
aam
dec
mov
movsb
add
sbb
or
cwtl
push
in
mov
out
nop
fcompl
daa
call
shll
or
jo
hlt
sbb
call
adc
stos
cwtl
mov
cwtl
xchg
sub
lods
xor
xor
mov
add
adc
add
fbld
xorb
xor
jbe
call
imul
lea
push
hlt
shll
mov
mov
push
mov
adc
dec
and
lock
adc
insb
inc
call
imul
fsts
rolb
xor
cld
ljmp
or
inc
aaa
pusha
mov
test
lock
ja
mov
rol
mov
lods
mov
mov
hlt
push
iret
mov
clc
out
inc
scas
ret
sbb
jo
push
fcoml
or
push
out
lret
data16
jp
ficoml
in
xchg
shlb
mov
dec
inc
jle
cltd
rcll
enter
imul
fdivrl
and
inc
sbb
pushf
int
push
cwtl
iret
mov
or
loop
les
mov
and
enter
call
cmp
aaa
fwait
cld
repnz
or
cmp
pusha
pop
imul
jmp
scas
xor
xchg
push
fsub
cmp
inc
sbb
mov
sub
mov
into
jns
stos
mov
dec
dec
mov
das
cmpsl
fcompl
and
or
xchg
jl
push
out
mov
sbb
ja
in
rol
inc
mov
int3
cmp
lock
adc
in
mov
nop
cli
insl
mov
cmp
and
out
inc
je
xlat
cmpsb
and
pop
popf
cmp
pop
xchg
or
sbb
sub
ljmp
mov
sbb
pop
cmp
jp
imul
test
mov
jbe
mov
je
sbbb
jp
mov
ret
fisubrs
pop
lods
xlat
jle
mov
jp
ror
jmp
and
xlat
add
and
inc
add
push
add
pushf
cmp
insl
sub
jo
bound
mov
mov
shlb
xchg
out
xor
sub
shlb
aas
popa
sub
mov
fld
or
mov
fld
inc
nop
mov
icebp
out
gs
sub
jns
jl
mov
jae
mov
das
lods
lcall
and
hlt
fcompl
add
subb
cwtl
or
dec
idivl
lods
fisubrs
mov
adc
add
faddp
jl
orb
in
lahf
fstpl
dec
addr16
xor
and
cwtl
outsb
and
cli
xor
mov
arpl
hlt
push
insl
arpl
adc
sbb
fwait
cmpsb
fmull
sbb
movsl
push
xchg
or
fwait
xchg
fldenvs
mov
in
iret
fucomip
lea
jecxz
ss
ror
popa
mov
mov
rcrb
out
in
sbb
cwtl
add
out
loope
add
movsl
pusha
sar
outsb
stos
adcb
sub
not
je
test
hlt
ds
subl
xchg
sbbl
sub
cmp
adc
lods
std
pop
out
push
pop
mov
push
lahf
imul
jo
scas
cmp
leave
iret
jmp
jns
sub
in
mov
ds
xor
push
sbb
adc
cmp
lods
lds
mov
dec
hlt
lcall
jle
mov
mov
jecxz,pn
xchg
push
pop
push
ljmp
or
xor
stos
push
jmp
mov
sbb
sbb
push
xor
loopne
dec
scas
lcall
popa
inc
jmp
push
das
push
into
test
add
sub
and
cwtl
jmp
jne
jg
sti
dec
push
enter
and
fs
jle
fdivp
inc
mov
bnd
repnz
or
lea
and
pop
sub
shrl
pop
adc
xor
mov
iret
sti
sub
repnz
xlat
sbb
jmp
add
mov
sbb
outsl
and
outsb
fistps
imul
adc
cmp
inc
mov
dec
int
mov
xor
and
jecxz
hlt
imull
ret
add
mov
sub
sbb
lods
orl
jl
xchg
mov
lret
fists
clc
mov
icebp
scas
inc
cmp
addr16
inc
ljmp
decb
movl
mov
xorl
mov
mov
dec
mov
jns
mov
push
jnp
sbb
and
scas
repz
xchg
cmp
xchg
dec
sub
cli
clc
mov
jne
in
dec
inc
dec
jo
std
cmp
sub
and
loopne
inc
add
push
cmpsb
sti
cwtl
dec
lret
jmp
and
mov
mov
inc
test
mov
xchg
test
and
ret
ja
xchg
push
ja
loop
mov
or
mov
cmp
es
jg
sahf
pop
fs
push
in
out
into
lcall
divb
bound
cmp
sar
mov
call
cmp
test
stos
mov
div
mov
mov
or
enter
fcmovne
mov
int3
cli
sbbl
xor
xchg
push
mov
orb
out
cs
add
cmpsl
out
iret
loop
push
popa
stos
aas
sbb
test
outsl
jmp
inc
es
gs
and
and
mov
xlat
rcrb
mov
add
push
loop
sbb
cmp
stc
adc
jb
lahf
lret
arpl
jp
mov
mov
stos
fistl
cmp
fstpl
sbb
push
adc
lahf
sub
push
push
in
ret
subl
dec
pusha
mov
sbb
xchg
movsl
test
sub
jg
dec
cli
jo
xor
mov
sbb
cmp
pop
sahf
icebp
roll
out
imul
push
out
enter
adc
add
lea
or
mov
mov
aas
ret
enter
lock
enter
imul
sbb
icebp
mov
xchg
in
notl
push
mov
int3
or
inc
lds
incb
xchg
push
dec
pop
ss
ds
or
mov
lret
cld
cltd
or
rolb
jge
call
mov
inc
mov
clc
cmp
adc
push
std
pushf
in
xor
adc
xor
cld
cli
sub
jmp
fidivrl
adcl
add
lret
dec
sahf
xchg
mov
pop
cmpsb
dec
xchg
mov
cmp
push
mov
xchg
fdecstp
jbe
or
out
addr16
xor
pop
arpl
shrl
inc
jns
mov
rcr
fbstp
shl
sub
test
push
mov
jb
sub
out
imul
sub
mov
sub
cmp
jmp
jl
out
int
or
mov
scas
mov
mov
loopne
jnp
pop
pop
pop
test
loope
mov
jno
pusha
ja
outsl
or
xor
cli
sbb
sbb
out
lds
mov
mov
aaa
fists
inc
loopne
icebp
in
xorl
adc
rcrl
and
je
inc
xlat
push
scas
mov
jmp
sbb
inc
inc
adc
dec
cmpsl
stos
jmp
std
fwait
sar
xor
sub
mov
cmp
icebp
xor
shl
xor
jnp
mov
pop
xchg
das
mov
inc
mov
insl
insl
int
lds
mov
add
out
adc
pop
maxps
pop
add
inc
int
xlat
inc
push
jge
jbe
xchg
inc
add
push
insb
xchg
movsl
xor
scas
jmp
cmp
mov
nop
add
add
dec
pop
mov
lret
or
and
aam
sahf
fld
loope
adc
and
stos
lcall
repz
sbb
mov
jmp
jns
imul
stc
movsl
and
stc
jo
sub
fadd
int3
xchg
out
fwait
push
lret
or
xchg
xorl
dec
movsl
leave
call
xor
nop
mov
jmp
leave
xchg
in
imul
or
ss
loop
xchg
add
int
jbe
mov
push
scas
and
xchg
dec
in
push
mov
mov
je
and
test
and
data16
mov
call
dec
xchg
jge
popf
popf
mov
fs
and
fstpt
das
mov
jno
cli
clc
mov
cmp
lods
jb
addr16
out
push
jnp
fwait
mov
mov
or
pop
mov
out
aaa
pop
sbb
sahf
sub
xchg
aas
bnd
jnp
ljmp
sbb
daa
mov
fucomp
int
testb
xor
or
sub
repz
cs
shlb
sub
dec
mov
push
lea
xor
arpl
pushf
push
and
mov
stos
adc
loop
mov
jg
push
sub
outsb
adc
inc
icebp
das
cld
aam
ficomps
xrelease
inc
jge
popf
cltd
out
pop
inc
bound
les
cltd
inc
adc
inc
lock
lock
push
fs
in
fiaddl
mov
add
pop
push
pop
daa
xchg
push
cld
cmpsb
cmp
jne
xlat
dec
mov
pop
push
adc
loop
hlt
jge
mov
cmp
sti
jg
pop
gs
push
cltd
stos
imul
mov
xor
xor
sub
sbbl
jp
mov
xchg
jno
addr16
nop
movsb
adc
xor
pushl
sbb
shrb
pop
xchg
test
daa
jle
push
imul
movsb
mov
rorb
out
and
pop
sbb
repnz
and
in
mov
or
pop
mov
sbb
or
pushf
push
out
outsl
inc
mov
out
sbb
push
imul
fdivrl
lock
jo
pop
lcall
cmpsl
fdivs
mov
stos
sub
mov
popf
arpl
popf
stos
jns
mov
notl
add
push
cmp
jge
add
mov
leave
lds
and
dec
sahf
dec
xchg
addr16
mov
rcrb
loopne
fwait
addl
cmp
adc
outsl
aam
xchg
jl
cmpsb
mov
cwtl
loop
push
lds
mov
mov
jne
jo
pop
cmp
cmp
ja
lret
mov
pop
ret
in
test
imul
xlat
es
inc
mov
repnz
icebp
add
fs
lcall
mov
sbb
ffreep
dec
dec
outsb
in
push
stos
dec
mov
jo
imul
adc
add
test
or
cmp
loop
in
cmp
in
mov
fwait
jns
pop
stc
jb
pop
add
xor
das
pusha
sub
std
syscall
lret
sub
lahf
out
mov
fcompl
in
sbb
mov
test
jbe
cmp
pop
pop
sub
mov
mov
sarb
insb
sbb
lret
repnz
xor
jp
pop
shll
dec
aad
mov
cmp
fs
inc
imul
outsb
stc
and
iret
dec
enter
into
fisubrs
lea
fsubrl
mov
adc
repnz
xor
js
pushf
test
and
push
mov
and
stos
mov
jmp
mov
scas
xchg
scas
ret
xorb
dec
movsb
jecxz
sbb
cwtl
mov
lea
sbb
and
xchg
dec
pop
xor
mov
ror
fisttpl
mov
or
lea
xor
dec
cmp
add
push
lock
pop
fiaddl
mov
inc
in
out
sub
stos
dec
pop
xor
sbb
enter
sbb
jae
nop
lcall
cmp
cmpb
scas
push
in
jbe
out
int3
pop
imul
inc
add
ss
ja
sbb
fstps
pop
xchg
lods
fwait
lods
jmp
std
mov
or
mov
push
jl
dec
mov
cmpsl
jae
notl
or
scas
mov
push
ja
insl
cmp
jg
iret
fimull
addr16
repz
mov
sub
pop
loope
fs
movsl
jecxz
pushf
hlt
or
add
outsb
pop
aam
pop
xlat
jp
leave
cmpsb
push
lock
mov
cmp
cli
jmp
adc
repz
and
popa
xchg
ss
inc
mov
repz
pushf
adcb
fwait
shlb
ret
inc
jg
xchg
lds
ss
repz
movsb
lcall
cs
sbb
movsl
scas
add
sbb
pop
inc
xchg
mov
loope
jl
scas
testb
adc
and
fimuls
jecxz
add
dec
cmp
or
pushl
jg
mov
fldcw
out
cmp
lds
mov
fists
or
xor
ret
cmp
dec
fsubrs
sub
mov
loope
sbb
rcrl
xor
stos
fimull
jl
outsb
cmp
sub
push
lods
insb
dec
test
mov
adc
jle
push
stc
cmp
push
imulb
sub
or
and
fdivrl
imul
mov
jle
aam
iret
movsl
ficoml
dec
out
add
mov
mov
xlat
sbbb
push
sbb
mov
lret
add
js
pop
shl
dec
mov
in
and
cmpsb
in
loop
xor
int
cmpsb
lock
scas
mov
sahf
sub
addr16
lods
repnz
push
fldl
mov
lods
push
push
xlat
xor
aas
mov
fcoms
pop
xchg
or
jmp
hlt
pop
bound
xlat
fsts
and
sbb
and
clc
jp
rcrl
push
inc
jae
lds
sbb
xlat
sub
cmp
scas
ficoml
or
mov
adc
xchg
or
aam
fldt
es
push
mov
sti
inc
ret
mov
jg
into
cltd
mov
fimuls
ficoms
inc
adc
mov
cmp
outsl
xchg
push
bound
xor
push
jae
rcll
into
mov
inc
inc
cli
mov
xor
jecxz
lcall
mov
repz
popa
mov
mov
rcll
mov
rorw
das
aas
fnstsw
inc
lock
adc
pushf
das
add
int
lret
inc
and
jb
and
sti
or
test
imul
xor
push
cwtl
cmp
fstps
scas
hlt
pop
je
ja
dec
sub
or
xchg
jmp
cmp
ljmp
aad
xlat
push
or
jmp
adcb
setb
cli
hlt
mov
in
out
ljmp
dec
js
adc
dec
sahf
icebp
and
outsb
mov
cld
jne
pop
pop
push
mov
std
mov
and
or
inc
adc
lret
mov
jae
fistl
andl
sub
xchg
shr
sbb
dec
test
xchg
out
cmp
in
jle
adc
aad
mov
repz
orl
fisubl
cs
pop
in
xchg
pop
cmc
test
fwait
xchg
cli
inc
mov
pop
mov
ljmp
inc
scas
xchg
bound
cli
xchg
test
mov
fidivrl
clc
mov
pop
lahf
sbb
rolb
out
sbb
xor
jge
cmp
sub
jecxz
push
mov
cmp
lock
les
xor
add
jg
mov
stos
fmuls
mov
jno
adc
push
data16
push
pop
aas
enter
stos
inc
fnstenv
mov
cld
push
test
in
lahf
fiaddl
push
adc
sti
pop
mov
test
clc
push
push
inc
mov
mov
push
ret
in
pusha
pop
sub
push
mov
add
pushf
shl
add
adc
lods
popf
sub
cmpsl
push
pop
mov
sbb
sbb
cs
test
mov
fldl
cli
cmpsb
mov
ret
inc
hlt
mov
xchg
imul
jge
int
rclb
inc
int
mov
or
jo
mov
rolb
jbe
lcall
std
adc
stc
in
push
xabort
lods
daa
or
jae
xchg
cmp
mov
aad
ljmp
mov
movsb
and
mov
add
into
popf
and
sub
dec
push
shl
jle
stc
sbb
subb
lret
divl
xchg
jo
ja
addr16
push
add
inc
test
adc
iret
ds
add
dec
mov
daa
dec
push
sub
loope
push
push
jle
inc
gs
push
lods
pop
test
adc
mov
mov
ffreep
test
pop
mov
mov
push
push
cwtl
jns
cmp
mov
ret
xlat
xlat
clc
rep
jge
inc
xchg
push
jnp
adc
cld
sbb
sub
cld
sbb
test
lock
and
lret
js
bound
add
sahf
testl
xchg
aas
fdivrl
mov
fdivrs
test
or
xchg
sub
jg
and
jae
jp
aaa
xchg
or
inc
cmp
out
xchg
into
jg
mov
out
push
int3
push
insl
stos
jns
imul
mov
jge
test
into
sub
or
or
mov
aad
lret
imul
xor
dec
mov
js
push
cmp
cmpl
mov
sub
xchg
ror
movsl
insl
stos
mov
mov
in
lods
je
stos
das
mov
sub
ljmp
cwtl
dec
lea
iret
call
ss
push
xlat
idivl
fwait
and
je
scas
test
mov
push
daa
fisttpll
jmp
mov
cld
int3
push
sbb
icebp
push
sbb
and
shlb
push
ss
fidivs
mov
dec
in
out
mov
pushl
jmp
xchg
scas
outsl
and
sub
mov
notl
xchg
call
inc
je
add
sbb
fisubrs
pop
out
fmulp
sub
pop
ror
pop
out
lods
outsl
adc
sahf
mov
out
andb
sub
loop
pop
in
adcb
mov
pop
fs
jg,pn
mov
fdivl
or
mov
test
test
and
mov
dec
cmc
sahf
into
dec
insl
into
dec
imul
sub
mov
cmp
in
iret
stos
jns
mov
mov
outsb
jns,pt
sub
add
loope
lods
or
movsl
jne
push
das
jns
hlt
mov
in
xchg
jns
xor
xchg
cmp
add
pop
sub
jp
and
sbb
orl
sub
add
divb
pop
jns
push
push
mov
xchg
fsubrl
lcall
les
inc
rcrb
xor
repnz
aas
dec
or
les
imul
js
adc
and
scas
bound
jo
mov
test
lcall
dec
dec
cld
pop
outsl
gs
rcrb
push
xor
lcall
mov
push
loop
pop
inc
and
iret
aas
push
cld
xor
into
lret
scas
jbe
rorl
test
shrl
mov
ret
testb
dec
jbe
in
fisttpl
mov
mov
mov
add
jne
xor
popa
orb
test
jmp
cmp
jle
iret
xor
call
out
mov
fisubrs
movsl
stc
sbb
cli
pop
push
out
add
and
ja
stos
andl
sbb
dec
arpl
ret
fidivs
xor
and
adc
dec
jns
sti
xchg
sub
adc
insb
push
ja
xchg
lret
cmp
dec
add
xchg
jno
add
aam
repz
push
mov
lods
aad
dec
pop
sbb
pop
dec
out
shlb
inc
movsb
stos
cld
adc
xchg
adc
es
xchg
icebp
mov
roll
insl
mov
outsb
sub
outsl
ret
fs
jle
fbstp
imul
xchg
mov
jg
int3
inc
xchg
adc
jbe
ret
lds
sub
pop
mov
stos
or
flds
js
xchg
mov
and
push
or
lret
cmp
cltd
imul
subl
cmp
pusha
fsubrs
fimuls
out
pop
mov
sbb
cmp
cmp
cwtl
pop
sbb
mov
push
jnp
push
mov
dec
xchg
mov
push
rcrl
popa
mov
xor
lcall
aas
fstl
fdivrp
stc
dec
pop
popf
ds
fidivrl
mov
jo
mov
sbb
add
push
mov
pop
jbe
repnz
sbb
xor
cmp
xchg
lock
mov
shr
fnsave
sbb
out
xchg
push
insb
movsl
fidivrl
cli
or
adc
inc
hlt
add
mov
lret
in
inc
sbb
insl
imul
xor
cmp
and
or
cmp
or
test
fisttpll
lret
jmp
icebp
sub
push
mov
mov
xor
mov
into
test
int3
fimull
outsl
sahf
rorl
mov
test
movsl
mov
aas
push
icebp
pop
jo
pop
aad
insl
mov
adc
xchg
idivb
jne
cmpsl
or
xchg
push
out
push
dec
push
push
cmp
rcr
sti
pushf
jae
arpl
movsb
insb
mov
stos
in
pushl
cmp
repz
popa
pusha
or
das
cltd
movsb
or
adcl
daa
add
sub
fwait
nop
fdivrp
aas
xor
andl
cwtl
aas
jge
mov
fwait
movsl
sub
jne
icebp
fstpl
xchg
lock
repnz
add
mov
popf
xor
mov
mov
push
jmp
popa
xor
or
imul
adc
dec
xchg
push
out
inc
aaa
xchg
rorb
jmp
shrl
and
add
lahf
push
popa
imul
mov
xchg
test
xchg
sbb
cmp
cld
in
sbb
adc
pop
das
or
inc
shlb
xor
rclb
test
sub
push
cmp
std
xchg
cmp
xsha256
cmpsb
xchg
ficoml
lds
aam
sub
mov
mov
iret
and
add
inc
xor
repz
sar
sub
push
fmuls
test
je
fs
loop
add
sbb
mov
jno
mov
lret
xchg
ror
jle
inc
xor
jae
pop
imul
ja
jb
pop
add
mov
loope
xor
aaa
scas
lret
ja
sub
sbb
testb
jmp
mov
je
aad
fiadds
push
subl
jp
hlt
pop
xchg
sub
xchg
or
aam
cmp
jmp
mov
cmp
xor
adc
insb
cmp
mov
xorb
ds
pop
adc
sti
ljmp
adc
popa
adc
cmp
enter
mov
sbb
push
in
sub
subl
sahf
lcall
imul
cmp
jmp
inc
mov
sti
mov
cltd
xor
lock
or
sarl
xor
pop
gs
call
call
pop
mov
jecxz
push
inc
aaa
mov
lahf
out
es
lret
lret
movsl
stc
test
jnp
xor
inc
jp
xchg
sahf
or
leave
orb
leave
push
cmp
push
inc
stos
cli
setg
insb
adc
and
cmpsb
xchg
lods
cwtl
jbe
mov
inc
xor
insl
addr16
mov
rolb
push
mov
rolb
xor
dec
xor
add
push
adc
mov
fisubl
pop
pop
notl
lret
lahf
pop
and
cmp
pushf
hlt
fstps
jno
and
add
pushf
in
cmpsl
sub
sbb
dec
insl
fadds
clc
xchg
xchg
imulb
sub
aad
cmpsb
and
mov
sbb
popa
test
jecxz
inc
stos
cmc
or
push
mov
mov
icebp
xor
and
jo
sbb
cltd
iret
cmp
xchg
and
rcrb
jle
pop
fisttpll
xlat
stos
out
into
je
aam
hlt
pop
dec
je
jp
movsl
mov
pop
cli
sti
or
fstpt
test
xor
dec
jnp
inc
addr16
add
les
insl
ficomps
inc
data16
cmpb
shl
add
imul
les
lock
add
insl
popf
popf
push
jnp
fcompl
addr16
push
out
int
mov
dec
inc
jo
sub
mov
aas
icebp
fmull
nop
push
test
adc
pop
dec
jo
mov
push
mov
das
stc
adc
and
dec
das
cmc
mov
testl
mov
and
out
inc
rcrl
insb
and
pop
movsl
pop
jmp
cmp
cli
mov
and
pop
xor
push
sub
or
vmovups
hlt
cmp
lret
sub
data16
adc
gs
stos
pop
sahf
add
xchg
mov
mov
std
les
jge
sub
jp
jmp
jo
xchg
dec
mov
mov
cmp
pop
outsb
or
mov
lds
insl
iret
daa
int3
shll
sbb
lock
pop
ffreep
cwtl
fmull
sub
push
sahf
inc
dec
jecxz
testl
inc
jg
jp
xchg
sub
sub
jns
inc
lods
lret
lods
dec
mov
mov
movsb
rcrb
fst
push
cmp
and
out
fisubrl
je
scas
lods
lea
and
adc
popw
out
das
cmpsb
xor
or
inc
adcl
fildl
inc
inc
cltd
add
dec
clc
je
rcrb
outsl
scas
sub
mov
inc
mov
push
mov
mov
clc
fs
rcll
jae
fcmove
mov
lcall
leave
mov
sbb
xchg
std
ss
inc
out
xor
in
movsb
push
or
mov
ds
pushf
popf
jns
mov
je
sub
daa
subb
sbb
sbb
adc
ljmp
aaa
jge
ja
xchg
iret
loop
xchg
lcall
inc
and
fldenv
xchg
out
pop
test
cmp
rcll
pusha
jb
test
sbb
pop
dec
dec
pop
ds
and
ret
out
sub
jno
dec
jae
pcmpgtd
ret
xchg
jecxz
xchg
mov
push
sbb
and
sahf
fisttpll
mov
leave
int3
inc
loopne
sub
dec
lods
mov
pop
xor
adc
sbbb
cmp
das
mov
sbb
ss
mov
push
lds
loopne
or
lock
rol
cmp
dec
cmpb
pop
sbb
mov
mov
ljmp
pop
pop
inc
mov
and
dec
lcall
adc
sub
jne
jbe
cltd
jl
movsb
mov
jle
jmp
sbb
inc
jmp
dec
adc
dec
jle
dec
mov
or
imull
ret
mov
sub
sub
adc
lret
out
jge
dec
xor
inc
mov
lods
mov
sbbl
daa
dec
mov
lret
adc
gs
jmp
pop
sbb
in
pop
addr16
fsubrs
inc
dec
add
insb
je
mov
inc
inc
dec
jl
and
iret
in
inc
sbb
inc
adc
gs
jb
or
fmulp
mov
imul
pop
fs
cli
sub
mov
and
mov
xchg
bound
jne
mov
lret
je
or
sub
pop
out
imul
stos
stos
jle
push
negl
test
add
push
adc
inc
mov
cwtl
cmc
sahf
rorb
xor
aaa
cmp
sbb
inc
nop
xchg
cmc
mov
lock
add
mov
mov
bswap
lcall
cmp
push
add
pop
dec
xchg
jne
lcall
inc
jg
lods
cmp
sub
mov
es
mov
mov
xchg
pushf
push
nop
inc
jle
cmc
mov
stos
mov
and
add
jno
inc
dec
repnz
add
mov
xor
add
ret
pusha
adc
xchg
fwait
mov
sbb
mov
mov
orps
test
jp
push
jne
popf
imul
int3
popf
pop
rcl
fisubl
arpl
add
nop
xor
adc
xor
lsl
mov
daa
mov
es
mov
adc
sbb
das
cmp
imul
push
push
shl
inc
xchg
push
insb
jge
dec
jne
loope
jecxz
and
mov
pop
arpl
add
cld
jg
pop
or
mov
xlat
int3
sbb
sub
notl
mov
xchg
mov
mov
notl
into
and
sbb
dec
lret
xor
bound
sbb
lds
sahf
subb
int
imul
xchg
inc
jecxz
into
dec
inc
pop
push
mov
gs
mov
imul
jns
movsb
lods
rorl
jmp
insl
xchg
add
sbb
xchg
sub
icebp
adc
add
jbe
xchg
jne
stc
lret
xchg
cmp
scas
mov
push
cli
cmc
pop
jne
fisubrl
xchg
stos
ja
in
pop
adcb
jbe
loop
popf
dec
mov
insb
add
sbb
xchg
push
sub
cmpsb
add
fsubl
cmp
das
xchg
push
and
in
pextrw
dec
aad
push
in
mov
sub
or
pop
pop
dec
sub
pushf
jo
lret
jmp
das
mov
addr16
test
mov
mov
or
jl
sbb
xchg
mov
nop
loope
xor
or
test
insl
sti
push
insb
movsb
add
adc
adc
mov
lock
or
and
xor
inc
fucomip
fidivrl
sbb
pusha
mov
push
push
aaa
or
sub
pop
dec
scas
inc
dec
cmpl
pushf
dec
jmp
or
loopne
shrb
inc
rcr
add
cmc
dec
test
pop
int
dec
and
mov
xchg
gs
mov
fadds
js
cmp
or
xchg
jb
int
repz
jbe
loope
add
cmc
in
cltd
jge
pop
lret
pop
addr16
loopne
xor
mov
adc
movsb
cmpl
pop
decb
jle
push
ret
sbb
es
lcall
cmp
push
cmc
negl
ret
sbb
in
scas
sbb
repz
pop
dec
in
cli
cmp
outsl
insl
movsb
cmpsl
scas
dec
test
inc
mov
outsl
mov
push
and
into
lock
sbbb
and
sbb
mov
fsubrs
aaa
xor
addb
aam
das
inc
mov
or
or
lret
or
xlat
sbb
jno
sbb
pop
or
sbb
call
jae
repz
neg
cmp
cmp
stc
icebp
xchg
movsl
jl
jl
aas
insb
xor
xor
call
aaa
js
ss
lahf
test
repnz
mov
testl
nop
outsl
push
pusha
mov
fdivr
rclb
aam
in
push
lret
dec
aad
jb
dec
sub
mov
sub
pop
pop
ja
or
sub
sub
adc
sbb
push
pop
test
pushf
xchg
fdivs
pusha
rcll
xchg
sub
inc
dec
pushf
mov
in
mov
mov
lret
repnz
or
loop
das
iret
loop
addr16
mov
adc
or
aas
pop
cmp
and
xchg
jg
mov
push
out
lret
or
push
test
push
xchg
xor
ljmp
push
lock
mov
lods
and
std
lods
mov
or
adc
icebp
sub
xchg
es
mov
adc
xchg
xorl
aas
test
jne
mov
hlt
pop
stos
pushf
jae
inc
scas
xor
leave
cmp
incb
xor
cmpsl
mov
dec
mov
xchg
add
repnz
mov
cmp
and
xor
out
push
xor
arpl
iret
pop
cs
add
pop
clc
or
adc
xchg
out
stc
jno
adc
mov
jp
mov
int
sbb
mov
sbb
adc
xchg
push
movsb
fadds
lock
mov
mov
xchg
fisubs
pop
jg
in
add
jo
hlt
lock
incb
mov
nop
xchg
arpl
and
out
sub
rclb
out
mov
out
jb
in
int3
and
mov
xchg
lods
adc
aaa
out
and
push
xchg
sarb
out
mov
mov
ret
pop
stos
pusha
ljmp
xchg
push
scas
daa
push
loopne
bound
add
aas
mov
mov
push
call
fwait
jge
into
cmp
ss
jg
mov
arpl
sbb
inc
inc
lea
stos
sarb
xchg
or
pop
mov
outsl
pusha
lcall
cmp
cs
aaa
cmc
or
jmp
nop
xchg
dec
mov
cmpsl
mov
sub
nop
cmpsb
and
mov
dec
stos
adc
mov
lods
leave
xor
loop
lods
xlat
lods
push
daa
enter
pop
movsb
xor
jle
rcl
mov
popf
adc
jmp
sbb
add
adc
jae
fmuls
in
inc
or
push
dec
xlat
xchg
rcl
aaa
jl
xor
cmp
xor
sub
pop
push
popa
mov
mov
jge
test
lods
dec
mov
fistps
mov
jno
xchg
mov
mov
mov
lahf
mov
jns
jnp
add
xchg
inc
sarb
lahf
sub
jmp
add
repnz
int
mov
cmp
xor
or
aam
jae
and
and
shlb
lret
jnp
adc
cld
inc
out
loop,pn
sar
adc
fistpll
add
sub
xchg
sbb
cltd
jo
xor
outsb
out
clc
dec
ds
sahf
scas
ror
xchg
pop
dec
aas
adc
pop
jmp
sbb
pop
mov
pop
mov
push
scas
mov
xchg
popf
add
in
ljmp
icebp
insb
sbb
lods
inc
mov
sti
out
cltd
addr16
jle
jbe
xor
dec
lods
push
movsl
xor
imul
mov
and
gs
outsb
cmpsl
popw
hlt
pop
js
lret
lahf
enter
xchg
sub
in
loopne
clc
adc
sub
call
pop
fistl
cmp
imul
arpl
or
mov
jle
cmp
xor
cmpsb
leave
sahf
pushf
dec
in
aaa
aaa
rcll
or
pop
sbbb
loope
lret
push
fstp
lcall
lods
lahf
call
ds
push
arpl
add
mov
cmp
dec
jecxz
or
push
outsb
pop
jno
lret
insb
pop
push
test
nop
int
xor
inc
repz
jge
mov
jbe
xor
pop
pusha
inc
xchg
sbb
mov
stc
xor
mov
push
js
inc
imul
sub
push
in
loope
scas
mov
shlb
jb
jne
fcmovbe
push
ret
add
fisubrl
xchg
mov
mov
pop
mov
dec
sub
adc
js
sbb
push
dec
cmp
xchg
lods
push
popa
adc
jb
aaa
mov
push
mov
rorl
filds
int3
cmpb
popa
test
imul
dec
mov
and
fcompp
or
mov
pop
jbe
in
shr
out
lea
fsubl
jae
fldlg2
lock
xchg
jns
fucomp
mov
je
mov
adc
and
bound
repnz
sti
push
ljmp
mov
mov
aam
outsl
cs
orb
jne
pushf
xchg
enter
dec
push
cmp
push
pop
sub
xchg
lock
cli
shl
ja
pop
fdivr
xor
inc
mov
sbb
pop
mov
repnz
adc
xor
and
or
push
or
xor
scas
push
in
arpl
or
popf
or
pop
xor
loope
xor
shr
cmp
mov
jno
sarl
mov
lret
or
push
sbbl
lock
cli
pop
das
shlb
inc
cmpsl
push
mov
test
dec
divl
in
lods
and
loope
scas
ds
add
pop
fdivrs
test
ret
push
sub
testl
xchg
movsl
test
xchg
and
dec
push
ret
movsl
jp
add
and
je
aas
cmp
rclb
xchg
cmp
cmp
push
cld
cmpsl
jp
mov
sub
xor
jle
push
arpl
adc
xor
jnp
idiv
popf
in
fnstsw
or
test
and
pop
cmp
mov
sbb
cmp
out
dec
int
and
jnp
sbb
and
divl
jnp
popf
push
inc
jo
jno
dec
je
mov
push
addl
pop
jmp
adc
xchg
sub
push
jl
pop
mov
fisttps
lret
outsb
adc
cmpsl
push
shlb
mov
and
mov
inc
add
dec
testl
or
stc
aaa
lret
push
dec
dec
clc
aam
popf
and
fidivs
push
inc
cmp
arpl
je
cmp
les
loope
std
lds
lods
adc
dec
hlt
xchg
jns
sbb
test
push
js
leave
cmc
cmp
adc
ret
mov
or
cmpsb
xor
movsb
lret
and
sahf
sbb
inc
push
loop
jmp
dec
ljmp
fdivrl
mov
push
imul
lea
aam
inc
xchg
inc
outsl
arpl
jnp
cmp
sbb
fists
popf
jge
jge
cs
cli
ja
out
js
fmul
pop
in
lock
cmp
xor
shlb
cmp
pop
into
aad
mov
dec
or
add
add
data16
lea
in
out
push
jmp
stc
pusha
shrl
dec
xor
sti
scas
push
mov
into
cmp
xor
mov
inc
dec
in
js
mov
inc
sbbl
mov
pusha
push
ss
orps
pop
mov
pop
fnstcw
pop
pop
mov
out
push
push
leave
pushl
pop
and
shll
push
imul
cmp
je
iret
dec
push
jo
scas
xchg
push
insb
pop
pop
mov
stos
repnz
outsl
fadds
xor
lahf
pop
ja
cmp
arpl
insl
inc
fcompl
and
mov
mov
cmc
insl
fistl
in
decl
adcb
dec
fidivs
add
out
jmp
push
xchg
add
sar
add
push
movsl
jnp
mov
push
cmp
push
push
pop
in
mov
sub
cmp
xchg
or
or
xchg
in
ficomps
pushf
push
or
and
xchg
lods
cmc
scas
xchg
ljmp
and
aaa
filds
push
dec
dec
sbb
jmp
movsl
mov
movsb
cmpsl
or
lcall
xor
rcrb
ret
into
clc
icebp
movsb
into
push
mull
aaa
and
pop
gs
sub
mov
xchg
and
dec
jmp
daa
and
add
sysexit
pop
mov
fpatan
jnp
push
sbb
xchg
mov
jge
bnd
add
jle
negl
popa
sbb
inc
std
jmp
cmpsl
fsubrs
jle
xorb
loopne
call
lret
xchg
lcall
or
es
xchg
out
jge
jne
in
jle
push
ret
mov
push
cwtl
jae
insl
movsl
cmp
jmp
jl
or
mov
jp
or
lods
fstps
jg
mov
nop
sub
lock
dec
subl
xchg
sub
js
or
xlat
into
stos
mov
jl
mov
jo
insb
adc
repnz
es
cmpsl
add
mov
movsb
or
add
imul
inc
scas
pop
cmp
shll
jge
nop
icebp
enter
jb
rorl
adc
ret
and
jbe
hlt
pop
cmp
xchg
mov
clc
or
loopne,pt
dec
xchg
inc
xchg
cltd
xor
xor
xor
je
sub
push
insl
ret
xor
add
cld
pop
mov
sbb
imul
ja
mov
jl
jmp
jns
xor
or
dec
test
cmc
das
adc
stos
or
inc
xchg
jne
push
movsb
mov
push
mov
mov
xchg
shlb
popa
add
in
push
push
stos
dec
movsl
jae
xor
mulb
loope
cmpsl
and
mov
sbb
mov
xlat
cmpsb
test
cmpsb
mov
pop
inc
sub
sub
dec
push
jge
jae
test
cltd
iret
mov
pop
adc
push
or
xor
scas
mov
cmp
dec
adc
cmpsb
inc
and
lds
sbbl
push
ss
add
lret
das
in
movsl
push
jne
push
cmpsl
sahf
add
les
adc
and
mov
ret
jno
cmp
mov
lock
or
inc
and
adc
sahf
arpl
jmp
lods
pop
into
adc
push
xor
dec
dec
enter
jo
push
sub
ljmp
mov
arpl
or
add
xor
push
insb
movsb
aas
mov
ss
call
cli
cmp
inc
sbb
mov
and
notl
sub
std
mov
lods
fs
test
pop
scas
jae
dec
push
adc
inc
cmp
rcrb
push
mov
scas
movsl
and
in
xchg
addr16
imul
mov
pop
add
or
outsl
mov
mov
dec
add
orl
aas
jecxz
xor
movsl
xchg
mov
fs
das
insb
or
test
imul
adc
jge
xor
jo
cltd
lock
push
fisttps
or
sub
xchg
loop
out
das
nop
xor
add
push
mov
sbb
mov
out
push
mov
cmc
pop
xchg
jmp
push
mov
js
insb
mov
mov
mov
in
sub
sbbb
cmc
mov
or
jb
mov
inc
xor
cmp
jne
and
fwait
repnz
sbb
repz
cmp
sub
mov
xchg
sbb
shrl
movsl
outsb
inc
out
rcrb
ds
icebp
xorl
iret
imul
dec
push
pop
jecxz
fsubl
xor
cmpsl
cmp
dec
sub
xchg
out
test
mov
dec
out
sarl
xchg
add
push
push
adc
mov
stos
imul
xor
cmc
jae
mov
xchg
xchg
and
mov
aaa
xchg
fisubs
repz
nop
es
ficoml
inc
test
inc
and
hlt
jno
xor
jo
out
cmpsb
inc
rorb
imul
fwait
or
out
mov
orb
and
ret
mov
ljmp
movsb
inc
mov
insb
xchg
push
imul
jnp
dec
xor
fwait
popf
int
mov
sbb
push
dec
push
lods
and
out
jle
mov
ret
and
mov
jl
inc
and
xchg
gs
fnstcw
loopne
iret
popf
mov
shrl
adc
loop
sbb
imul
xor
arpl
pop
add
inc
dec
sub
push
xchg
fsubl
jnp
pop
ds
xor
cmpsb
xchg
dec
push
cli
lahf
shll
mov
fs
push
mov
rol
inc
pop
sub
cmp
in
xchg
pop
sbb
std
xor
jo
or
jp
jle
cmp
adc
xchg
pusha
mov
test
sub
xchg
jnp
mov
mov
xor
aaa
jnp
scas
addb
jecxz
popa
push
insb
mov
mov
or
lods
mov
mov
push
mov
jo
cmp
lret
cmp
adc
cmp
dec
mov
lock
xchg
mov
std
iret
adc
sbb
xlat
mov
addb
sahf
fstl
pop
ja
mov
adc
push
add
int3
cltd
test
cmpsl
sti
jge
sub
push
xchg
jmp
mov
cli
push
ret
lods
inc
out
test
stos
out
xchg
fcoml
mov
fistps
adc
mov
scas
repz
cmpsb
lahf
icebp
xchg
repnz
and
js
shlb
push
mov
es
rorl
inc
mov
test
dec
xor
dec
testb
pop
sbbb
fcmovb
sub
loopne
shlb
loopne
mov
testb
out
cmpsb
mov
and
mov
or
push
adc
pop
pusha
bnd
xor
cmpsb
mov
lock
push
or
push
sarl
push
fcmovne
rorl
outsl
test
stc
mov
aas
scas
inc
popf
in
xor
adcl
mov
fistl
es
sub
add
add
in
data16
mov
cmpsl
and
lock
jns
push
mov
sbb
sub
sbb
push
ret
and
les
mov
add
int3
cmp
das
test
lea
mov
pushf
sub
mov
and
mov
mov
cmp
cmpsl
fs
jmp
sub
dec
mov
adc
js
adc
imul
je
push
repnz
pop
lcall
pushf
cmc
mov
popa
xor
xchg
cmp
jle
arpl
cmpsb
or
insb
jmp
enter
lds
sahf
inc
or
mov
mov
ret
jo
push
daa
cltd
scas
push
stos
clc
and
outsl
pop
push
mov
and
imul
dec
idivb
xchg
mov
xchg
cwtl
lret
pop
stos
xchg
fwait
imul
sub
mov
rcrb
sbb
xchg
sbbl
pusha
jnp
fisubl
les
imul
scas
xor
push
fnstcw
daa
jne
pop
cmc
faddp
stos
or
test
andb
int
ja
mov
mov
dec
lret
mov
mov
mov
daa
test
dec
in
cltd
call
sub
stos
jge
in
subb
push
aas
mov
mov
leave
jne
xchg
scas
push
mov
jne
nop
cmpb
mov
lods
or
mov
mov
adc
mov
sbb
aad
mov
xor
xchg
sbb
fistl
and
or
push
pop
push
and
inc
mov
cwtl
out
je
inc
or
je
sub
dec
movsb
cmp
aad
and
das
sub
in
outsb
xor
mov
sbb
jbe
icebp
jns
inc
lret
mov
ret
enter
lock
outsl
pop
das
iret
lret
pop
out
push
outsb
push
stc
fimull
add
mov
daa
jmp
xchg
xchg
xlat
sub
shrl
jnp
mov
outsb
imul
and
pop
out
pop
dec
inc
arpl
imul
popf
std
fdivs
imul
fcoms
jp
inc
imulb
mul
bnd
lods
fiaddl
mov
mov
cmc
vphaddudq
or
xchg
pop
cmpsl
and
add
add
cltd
mov
es
lahf
daa
das
add
ss
out
push
rcll
ljmp
es
lock
lcall
popf
addl
mov
mov
enter
sbb
push
jmp
cmpsl
dec
insb
into
imul
es
enter
xchg
das
mov
cmp
out
push
data16
and
je
xchg
sub
hlt
pop
mov
bound
inc
push
mov
cmp
and
subl
mov
sub
xchg
imul
mov
enter
ret
fisubrs
xor
std
outsb
out
mov
cmp
cs
pop
adc
jmp
iret
aaa
stc
cld
adc
shrb
int3
adc
xor
test
sahf
cmc
push
dec
mov
stos
es
push
bound
sbb
outsb
push
or
mov
pop
push
xchg
scas
and
bound
daa
mov
inc
inc
outsl
enter
and
fucom
stc
mov
pop
sbb
jae
pop
inc
popf
jg
pop
jp
aam
add
fdivr
clc
cli
mov
repnz
sti
xchg
lahf
fsub
pop
jecxz
sbb
mov
jmp
sub
data16
aas
sahf
sbb
dec
mov
inc
in
movl
stc
mov
fidivl
xor
sub
add
bound
jnp
aam
fisttpll
daa
loopne
lea
xor
adc
out
cmpsb
dec
mov
jp
pop
cltd
fucom
adc
jne
mov
mov
xchg
cmp
movsl
iret
lret
pop
sarl
sub
sbb
jbe
cli
mov
sbb
jbe
icebp
std
jl
dec
push
push
push
leave
aam
test
inc
sub
add
fstpl
xor
outsb
cmp
mov
jge
pop
or
xchg
je
sbb
ljmp
xchg
addl
jmp
fistpl
jae
or
pop
cmp
inc
jg
lret
and
dec
iret
dec
jle
push
xorl
lcall
sub
cmpsl
repz
or
pop
pop
popa
fistpl
imul
add
add
xchg
mov
jge
lahf
ja
jns
ljmp
sbb
flds
mov
jne
xor
rorb
cmp
mov
mov
push
add
cltd
cld
inc
xor
pop
jecxz
mov
pop
sbb
stc
mov
sbbl
adc
imul
cmc
std
call
bound
ss
pop
fstl
inc
in
mov
addr16
out
jnp
cmp
in
jl
lret
xor
iret
addr16
test
pop
pusha
cmpsl
jnp
and
mov
loope
sub
xor
addl
scas
std
sub
std
mov
iret
and
fwait
es
jbe
sbb
roll
pop
cltd
sbb
inc
mov
sbb
cmpsl
mov
mov
pop
xor
add
adc
aad
test
incb
lret
jbe
sub
sbb
cld
or
int
int3
xchg
dec
inc
dec
sbb
int
scas
fsubrs
add
aas
ljmp
loope
cmp
insb
add
jno
push
repz
sahf
add
popf
fstps
or
inc
mov
int
and
mov
out
sub
fucom
push
push
test
fidivrs
mov
lcall
dec
jle
subl
push
jmp
cwtl
scas
movsl
cmp
iret
mov
inc
push
fistl
mul
inc
add
mov
out
fwait
out
and
dec
pop
bound
bound
ret
sbb
xchg
insl
jp
mov
lcall
mov
sub
das
test
lahf
lea
movsb
adc
aam
lea
mov
sti
sub
scas
pop
mov
pusha
enter
push
xchg
cmpsb
shrb
push
aam
mov
imul
ljmp
lods
gs
lret
lcall
lods
cmp
mov
andb
xchg
sbb
mov
pop
fnstenv
aam
insb
in
ret
rcll
jmp
cwtl
rcr
js
dec
jmp
mov
js
dec
mov
daa
ffreep
dec
cld
sbb
scas
js
sbb
dec
notb
outsb
adc
mov
lods
in
repz
cmp
sub
or
lods
pop
dec
and
mov
movsl
add
push
pop
mov
imul
in
in
xor
test
adc
jecxz
dec
mov
pop
ss
jle
popf
jl
pop
or
pop
addr16
in
scas
stc
ss
mov
pop
insl
add
jb
jmp
es
jecxz
or
mov
ja
cmp
inc
cmp
sbb
insl
lock
mov
jl
and
jge
fs
ret
fimuls
lahf
repnz
jae
pop
dec
add
xorl
mov
hlt
push
lret
cmpsb
adc
fmuls
mov
arpl
adc
rcrb
fidivs
inc
subb
pop
ficompl
cmp
mov
xchg
enter
pop
mov
cmp
dec
adc
mov
mov
jmp
mov
icebp
js
jo
sahf
jno
inc
fidivrl
add
push
mov
mov
aam
lret
pop
adc
dec
xor
cld
ljmp
in
loopne
loop
cmp
sbb
ret
adc
lret
mov
xor
and
pop
ret
sbb
call
mov
dec
cmc
subl
pop
sahf
mov
fs
push
pushf
adc
mov
xlat
cli
shl
pusha
dec
fisubrs
inc
sbb
jge
sub
fisubrs
cmp
mov
sbb
mov
adc
repnz
xchg
shrb
fiadds
mov
daa
lods
movsl
xor
into
lods
enter
ds
mov
jo
mov
adc
faddl
lret
test
adc
add
sti
mov
and
mov
ret
add
fsubl
mov
rolb
daa
and
cwtl
mov
outsl
sbb
inc
fcoml
ficoml
imul
fwait
sar
iret
fnsave
imul
je
xchg
and
xchg
bound
and
xor
bound
int
add
ret
in
ret
mov
sub
pop
mov
inc
stos
in
sub
movb
cmp
push
pop
subb
inc
roll
stc
xchg
mov
mov
mov
decl
lahf
and
and
shll
push
sti
push
mov
in
test
mov
test
icebp
popa
outsl
stos
int3
movsl
inc
insb
fdivs
daa
fcompl
pop
mov
out
inc
pop
fisttpl
push
cmp
ds
jl
mov
cmp
pop
pop
dec
incl
jmp
push
cmp
cmpsl
ja
adc
mov
inc
xchg
mov
cmp
aam
xchg
add
inc
xlat
in
roll
stos
or
inc
dec
dec
dec
adc
cmp
cli
shlb
or
in
add
xchg
leave
dec
lock
sbb
lret
fwait
push
push
inc
or
push
inc
mov
jns
ss
sub
rcrl
jb
or
imul
xchg
aad
jp
push
pop
and
loopne
shrb
dec
xchg
repnz
mov
cmp
cmp
push
mov
into
or
iret
push
out
xor
scas
jmp
enter
fbld
loope
loop
and
gs
stc
push
xor
xor
test
sbb
repnz
sub
push
rdpmc
jno
mov
jp
inc
jecxz
mov
jge
cmp
sub
xor
pop
insl
cmp
mov
jge
nop
mov
scas
dec
nop
int3
add
cltd
dec
and
sbbb
stc
pop
xchg
inc
pusha
pop
scas
adcl
nop
and
ret
leave
orb
icebp
ror
sbb
jo
loopne
aas
outsl
xchg
pusha
mov
xor
lea
stos
dec
pop
adc
cmc
jg
inc
mov
adc
es
das
in
clc
mov
vmaxss
orb
sub
lcall
jmp
mov
pop
xor
shr
dec
roll
rcr
aad
xor
int3
pushf
cmp
pop
fndisi(8087
dec
or
lock
pusha
jb
inc
stos
into
sbbl
call
fwait
mov
hlt
xor
jbe
xor
sbb
arpl
mov
call
jecxz
sub
insl
push
call
push
cmpsb
fdivs
push
fldenv
nop
lcall
xor
and
xor
pop
pop
leave
aad
xchg
in
mov
subb
fdivr
aas
cwtl
mov
pop
xchg
sub
push
shll
jmp
dec
fnstsw
mov
adc
loopne
aam
pop
sbb
xchg
repz
adc
jno
xorl
es
aas
call
test
imul
call
lret
lahf
testb
cmpsb
sbb
loop
xor
test
in
rorl
movsb
mov
sbb
aad
sbb
lret
popa
xor
cmp
push
fdiv
cmp
pushf
add
cld
pop
mov
sbb
jecxz
adc
std
rorl
dec
jp
jbe
cmp
inc
inc
lods
mov
cmp
adc
shlb
je
adc
pop
enter
push
mov
dec
outsb
pop
or
imul
mov
daa
mov
pop
mov
bnd
repz
and
cmpb
and
add
inc
std
mov
mov
leave
lds
and
mov
xchg
jmp
inc
mov
xor
pop
mov
fstpl
push
es
jmp
cmpsl
icebp
fidivrs
pop
fldenv
pop
pop
xor
ds
jne
dec
dec
push
mov
inc
popa
inc
dec
pop
test
xor
outsb
jl
iret
arpl
mov
and
jno
xor
std
jmp
dec
push
dec
pop
sbb
mov
add
subl
fsubs
xchg
int3
popa
push
push
or
lret
mov
jnp
or
mov
aaa
xchg
jnp
lahf
nop
push
lea
in
mov
cmp
inc
push
or
std
fdivrp
cmpsb
sbb
and
mov
je
pop
push
std
and
shlb
cmp
jg
hlt
stc
or
inc
das
idivb
jge
cmpsl
cwtl
cli
sbb
cmp
lahf
test
xchg
sarb
into
and
sub
fcoms
dec
rcrl
jp
jmp
xchg
mov
sub
cmc
loopne,pt
jno
call
mov
dec
or
push
fdivr
mov
push
mov
pushl
inc
sbb
sub
jo
aas
mov
cmp
mov
int
sub
aaa
in
push
insl
xchg
xchg
pop
sbb
jmp
fldl
cmp
cld
ljmp
cmc
lods
pop
sub
push
sbb
js
lret
dec
mov
add
ljmp
xor
sbb
push
mov
dec
push
lcall
adc
pusha
inc
cmc
jecxz
cmp
dec
ret
orl
scas
or
or
cmp
sub
insb
push
sub
call
jp
cwtl
or
xor
cmpsl
cld
daa
jbe
xchg
orl
mov
jae
mov
pop
mov
mov
mov
outsb
or
xchg
push
mov
scas
shll
push
lea
je
mov
push
popf
push
cmp
lock
inc
iret
mov
clc
cmp
fwait
add
movsb
and
mov
xchg
cmp
pusha
pop
add
add
adc
lock
lods
call
cmp
and
cltd
testl
divps
inc
data16
mov
call
in
mov
aam
in
jmp
nop
stos
cmp
lods
add
ss
iret
or
daa
inc
lcall
inc
jb
out
fnstcw
fidivrl
jbe
fsubs
mov
and
lods
push
fucomip
shll
ficompl
inc
xchg
pop
iret
mov
xlat
inc
loope
push
push
loop
popf
and
add
cltd
push
iret
popa
loop
imul
mov
dec
mov
mov
scas
fwait
pushf
cmp
fs
adc
imul
push
mov
push
or
mov
test
pushf
sbb
in
sbb
imul
inc
cmp
stc
cmp
mov
imul
aad
daa
je
sti
aad
sub
stc
mov
push
shl
mov
dec
sbb
mov
jmp
jp
ficompl
and
aam
sub
xor
in
repz
repz
mov
cmp
test
jnp
mov
pop
mov
mov
pop
mov
out
aam
cmp
sbb
and
inc
insb
in
int
pusha
sub
out
ljmp
adc
dec
pop
data16
add
sub
or
jle
jb
adc
push
test
addr16
repnz
das
sbb
lds
stc
xchg
xor
movsb
cld
iret
xlat
adc
adc
lret
rclb
insb
cld
addb
mov
or
cmp
xor
mov
sbb
jns
es
adc
in
jecxz
sahf
cmp
sbb
movsb
mov
lock
mov
or
or
scas
push
loop
sub
ss
adcl
out
movsb
mov
adcb
xchg
jmp
lcall
mov
or
enter
dec
sub
cmp
out
aam
test
add
push
ret
sti
push
mov
test
aas
mov
or
rorb
mov
in
mov
push
outsb
push
jp
negb
sub
jge
push
ss
inc
out
cmp
mov
cmp
dec
faddl
or
pop
fsubrl
or
stos
pop
sbb
push
insl
add
sub
in
fucomp
sub
popf
xor
xor
fwait
rcrl
dec
in
enter
dec
jnp
push
rep
sub
xor
fcoml
dec
cmpsl
cld
cmpsb
in
jmp
sbb
ss
mov
sbb
push
ret
jp
jl
mov
sbb
dec
push
fldcw
fs
in
and
test
sahf
fwait
xchg
aas
jb
push
inc
or
adc
cmpsl
mov
xchg
enter
inc
test
decl
cltd
xor
sbb
inc
mov
std
mov
test
bound
jae
or
int3
push
movsb
cmpsb
mov
leave
jne
ret
sbb
push
push
dec
mov
fstp
ds
push
sbb
xchg
xchg
into
pop
leave
adc
xor
cmpsb
adc
sub
mov
pop
test
jl
inc
mov
mov
in
fst
test
jno
cwtl
xor
dec
nop
jbe
jno
push
int
ljmp
push
xchg
sahf
ss
jb
test
pop
out
jp
jge
insb
pop
jmp
nop
mov
ljmp
sahf
cmp
cmp
jo
idivl
jg
aam
add
jge
sub
pop
fistps
scas
jge
jb
push
pop
aaa
push
aam
insl
jno
js
xchg
xchg
dec
loop
fnsave
divb
push
test
and
scas
or
adc
mov
mov
pusha
sahf
ret
cmp
mov
xchg
jo
xor
xchg
mov
mov
cmp
xor
pop
popa
sbb
xchg
cli
sbb
daa
test
xor
jb
dec
push
leave
out
orb
and
filds
push
pop
and
fsubrs
ret
gs
aad
or
add
ret
push
gs
jmp
add
je
shll
in
push
orl
cli
jnp
fmuls
xor
xor
push
stos
sub
jg
xor
jne
sub
push
mov
jg
les
mov
xchg
insl
push
jnp
iret
and
xchg
scas
push
sbb
push
daa
inc
jo
fstps
ja
dec
pusha
jmp
lds
fwait
ret
mov
and
mov
xlat
iret
les
xor
fisubrl
add
test
pop
xchg
or
adc
lret
push
xchg
xchg
jmp
push
inc
dec
add
mov
jnp
in
push
or
rorb
in
pushf
int3
outsl
fs
xchg
rcll
aam
notb
sub
xchg
push
cld
push
mov
sub
cmp
dec
and
fsts
das
cmp
add
push
repnz
cmp
aad
xor
xor
dec
sub
js
outsl
mov
push
xchg
dec
repnz
cmp
sbb
and
in
gs
push
push
test
mov
cmp
lock
adc
fcmovbe
in
dec
mov
mov
sbb
lahf
xchg
mov
cmp
jo
in
stc
add
scas
mov
scas
xchg
pop
out
ja
xchg
cmp
lock
test
push
nop
xchg
mov
ljmp
int
cmp
push
pop
leave
repz
add
dec
into
sub
aad
adc
dec
sub
mov
push
leave
mov
cmp
jbe
imul
push
rcll
data16
shrl
cmp
jecxz
jo
pop
mov
sahf
pop
xor
movsl
jns
sub
jp
cmp
mov
and
call
and
ja
shrb
js
loope
mov
jmp
sahf
int
jecxz
xchg
in
cwtl
in
adc
or
imul
lods
sbb
lahf
pop
popa
push
or
das
xchg
pop
mov
pop
into
inc
dec
xchg
out
push
dec
stc
cmp
pop
add
xchg
fwait
test
mov
lret
xor
sub
out
jno
repnz
jnp
inc
sahf
or
push
mov
popa
cwtl
inc
gs
in
push
int3
sub
es
clc
iret
leave
cwtl
mov
outsl
roll
sub
jmp
stos
push
and
jle
mov
enter
shl
imul
push
iret
adc
mov
mov
stos
dec
push
aad
cli
in
sti
cmpsl
sub
or
iret
daa
jecxz
in
ficoms
dec
add
xchg
inc
xor
insb
inc
mov
xchg
pop
pop
inc
add
mov
lret
andb
mov
push
jp
test
movsb
sbb
cmp
adc
fimull
sub
pop
ret
fidivl
hlt
sub
mov
cs
cld
movsb
jnp
flds
cs
lahf
mov
scas
mov
ret
push
push
ficoml
andb
js
dec
test
outsb
int
loope
and
lds
push
leave
push
and
xor
or
jns
lods
out
mov
lcall
test
adc
or
jno
orb
mov
aaa
or
insl
cmp
into
ret
clc
mov
adc
sbb
leave
sarb
inc
adc
xor
daa
sbb
mov
push
add
dec
jge
lock
push
cmp
shr
mov
pop
jl
fwait
lods
loope,pn
rcr
idivb
jnp
mov
cmpsl
adc
lods
mov
ljmp
dec
and
pop
and
jecxz
enter
test
cmp
jecxz
sub
mov
cmpsb
ljmp
pop
adc
xchg
insl
shlb
jnp
push
inc
int3
and
in
sahf
xor
inc
lcall
ds
sbbb
xchg
adc
jae
pop
shlb
jno
mov
loopne
outsl
out
dec
mov
inc
movsl
mov
dec
ret
test
mov
xchg
mov
add
testb
clc
push
mov
into
cmp
loopne
sbb
pop
or
xchg
or
imul
push
and
sbb
lret
adc
pop
das
sbb
push
icebp
cmpl
das
aad
and
pop
add
xor
sets
jbe
jecxz
mov
sbb
sub
cltd
and
loopne
and
sbb
shrl
jo
sub
push
mov
adc
lcall
test
inc
enter
lret
ss
lods
repz
jle
inc
cmpsb
test
lahf
pop
loop
mov
xchg
xchg
push
jmp
sbb
fldt
mov
lret
add
dec
jne
push
push
jns
lods
xor
jg
add
das
adc
mov
test
into
ja
jne
out
xchg
xchg
mov
scas
in
dec
decl
push
movsb
push
push
lock
test
out
add
pop
shlb
stc
or
pop
inc
add
cmp
cmpsb
enter
mov
pop
xchg
push
jne
lods
jp
pushf
cmp
mov
aam
jo
cs
sarl
mov
lods
dec
xchg
mov
lods
aas
jle
mov
paddusb
dec
les
xor
loope
push
mov
loop
out
loopne
subl
inc
arpl
leave
loopne
enter
jnp
mov
and
xchg
pop
and
out
and
faddl
cld
sub
jle
xor
and
add
mov
dec
sub
sbb
sti
test
popf
push
mov
inc
cmpl
divb
and
aad
xchg
idivl
out
mov
sbb
xchg
mov
xor
icebp
aaa
cmpb
cwtl
scas
mov
add
mov
pop
and
aaa
dec
mov
fisubrs
in
and
and
mov
jbe
mov
pop
mov
sub
sub
xor
and
mov
mov
xchg
out
pop
js
add
fwait
cmpb
pop
fsts
dec
daa
mov
shlb
lret
das
inc
dec
sahf
or
leave
xor
fnstcw
ss
lcall
rorb
mov
push
sub
inc
cmp
sbb
xchg
xor
or
push
in
jno
mov
mov
sbb
mov
jnp
mov
cs
aas
push
imul
fcoms
pop
inc
jge
lods
ficompl
insl
test
int
pop
aas
aas
sti
xchg
ret
cmp
mov
sti
push
pop
or
jbe
jne
and
inc
movsl
imull
sub
daa
test
testl
mov
jmp
adc
mov
filds
fcoms
int
lods
adc
enter
cli
cmc
push
insb
dec
mov
mov
add
pop
fisubrl
xlat
sbb
test
movsb
insb
push
cli
push
cmp
ds
std
loope
adc
int
pop
mov
cwtl
jp
js
dec
daa
arpl
mov
adc
mov
xor
mov
mov
xchg
dec
pusha
sti
incb
test
in
scas
iret
push
mov
xchg
scas
in
add
icebp
leave
jmp
add
mov
jnp
aas
jnp
mov
jle
lret
mov
or
add
dec
sbb
add
ljmp
xchg
dec
cmc
and
mov
push
push
jno
mov
loop
pop
jb
dec
inc
outsb
cltd
and
insb
sarl
cwtl
mov
lcall
xor
cli
loope
add
xchg
and
adc
insb
and
and
mov
pop
mov
pop
mov
xchg
in
xor
call
mov
stos
or
loope
mov
and
movsl
fs
mov
jae
sbb
out
sub
mov
xor
mov
jb
dec
dec
in
mov
jbe
mov
stc
jge
or
push
xlat
nop
testb
push
fwait
pop
nop
mov
in
push
rorl
popf
add
data16
ret
in
out
cmp
pop
xor
mov
jnp
pop
rcll
and
mov
addb
imul
js
xchg
jnp
mov
pop
pop
lcall
adc
out
sbb
shll
test
insb
mov
sub
push
add
insl
jo
popf
fdivr
loop
mov
adc
fwait
std
sti
push
and
xchg
push
adc
mov
mov
scas
ja
orb
pop
call
hlt
pop
xchg
mov
cld
in
lea
ret
fs
fnsave
xor
sbb
pop
repz
cmp
push
xchg
sub
sbb
je
std
xchg
data16
push
cmp
out
mov
shlb
jnp
push
ja
bound
iret
jmp
and
jp
stc
lcall
std
add
out
xor
pop
ffree
dec
je
xchg
pushf
outsb
roll
pop
pop
push
aas
push
inc
adc
ds
mov
pop
lock
cs
mov
test
addr16
cmp
jmp
fisubrl
fidivl
mov
add
push
leave
dec
xlat
sarb
add
adc
pop
jns
sub
mov
fcom
ja
xchg
cld
andb
inc
cmp
add
cs
flds
pushf
inc
fcoms
cmc
mov
sub
test
jmp
jg
repnz
imul
jno
adc
mov
push
push
mov
mov
popf
cmp
sbb
testb
mov
clc
dec
add
outsl
fcomi
sbb
pop
cmp
sti
mov
push
pop
mov
dec
mov
inc
or
inc
inc
jo
popf
adc
rol
inc
sub
sbb
mov
jg
inc
sbb
fwait
lods
sbb
pop
mov
cli
negb
inc
push
lea
roll
mov
rcr
xchg
scas
lret
mov
add
loopne
push
fisttpll
iret
in
jno
push
lret
mov
xchg
cmp
mov
aam
je
mov
fcoms
aas
and
jecxz
repz
mov
mov
in
adc
outsw
dec
xchg
insb
gs
gs
js
call
mov
sbb
jb
inc
inc
aaa
dec
push
bound
jno
add
pop
mov
call
push
mov
inc
in
xor
or
cmp
dec
ret
xchg
inc
lds
sets
ss
xor
or
xor
push
push
and
sbb
adc
mov
or
pop
jns
dec
fnstcw
test
fs
shld
call
je
daa
mov
aam
ror
cmp
adc
mov
adc
mov
incb
or
jne
adc
loopne
jecxz
xor
fists
xchg
popa
cmp
inc
adc
jns
imul
push
fnstsw
in
scas
sti
mov
lret
orl
pop
push
rcll
adc
xchg
xchg
sub
insb
jge
cmp
or
push
sub
add
shll
pop
fldt
es
xchg
daa
fmul
inc
gs
ljmp
sbb
cli
jnp
jae
fs
popa
pop
push
je
jne
adc
jne
mov
xchg
pop
in
testb
into
idivl
cmp
and
cmc
push
and
mov
enter
mov
xchg
sahf
push
cwtl
xchg
mov
sbb
enter
cmp
js
pop
test
pop
icebp
jge
sti
sbb
jb
inc
pushf
arpl
je
sub
add
int3
daa
stos
or
push
jg
sub
inc
mov
notl
cmp
hlt
mov
pusha
iret
mov
jp
xchg
xor
leave
sbb
adc
sbb
cmp
dec
mov
mov
lods
int3
and
ds
out
outsl
mov
mov
mov
jne
adc
cltd
pop
scas
mov
cli
lock
cli
cmpsb
inc
and
mov
inc
dec
dec
adc
push
roll
add
xchg
lods
sahf
ljmp
sbb
notb
frstor
lcall
addr16
mov
shll
mov
insb
out
mov
lret
sbb
movsl
jg
popf
enter
dec
fsin
mov
cltd
and
mov
test
aaa
dec
mov
add
ljmp
movsl
push
cmpsl
cmp
sahf
fisubrs
cmp
sub
mov
fwait
add
inc
mov
lods
mov
roll
stos
insb
sub
fwait
mov
es
dec
paddsw
nop
ds
pop
mov
sbb
pop
test
scas
mov
or
dec
insl
add
pop
mov
push
lock
hlt
mov
and
mov
sub
xchg
imul
jecxz
and
insb
sbb
aam
ret
or
iret
test
lahf
xchg
cmp
loop
push
inc
jg
enter
sbb
adcb
cmp
data16
xor
call
cmp
jle
jo
or
push
out
pusha
jle
repz
sub
add
add
cmpsb
sbb
lock
out
or
sarl
inc
sub
push
mov
dec
xchg
xlat
icebp
and
out
insb
in
enter
imul
icebp
xchg
imul
adc
aas
mov
mov
icebp
test
and
cmpsb
dec
loop
cwtl
pushf
add
dec
cmc
mov
xchg
mov
mov
sbb
cld
das
pop
repz
dec
add
testb
call
xchg
daa
es
cmpsb
iret
push
in
pop
leave
cmp
lea
out
adc
push
adc
mov
sbb
lea
or
test
enter
pcmpgtd
stc
aas
test
in
cmp
leave
call
mov
pop
nop
into
into
push
mov
imul
bound
in
data16
pop
dec
cmp
mov
cmpsb
cmp
fwait
cmp
sub
rorb
jae
xchg
or
aaa
aad
sbb
mov
je
mov
lcall
nop
aas
aad
imul
xlat
jmp
xchg
push
add
hlt
xchg
jae
mov
mov
test
and
sub
fcomps
xor
push
mov
jp
pop
mov
fsts
inc
out
mov
scas
jmp
inc
fs
cmp
insl
lods
lods
mov
clc
jae
addr16
mov
scas
shrd
test
dec
cmp
jmp
fwait
mov
mov
out
cmp
repz
addr16
xchg
outsl
inc
icebp
and
mov
outsb
loope
scas
mov
xor
das
cmp
in
mov
stos
xchg
lret
aaa
or
adc
lock
inc
xorb
xchg
push
filds
jge
and
scas
push
test
and
dec
or
cwtl
mov
scas
aas
pop
xchg
loopne
mov
in
and
movsl
push
xor
dec
bound
adc
fwait
pop
xor
dec
cli
mov
in
lods
mov
stos
pop
mov
mov
cmp
xor
adc
test
xor
in
cmpsb
idivl
sub
movsl
dec
orb
aad
push
cmpsb
jecxz
loop
ljmp
test
hlt
jns
mov
adc
mov
xor
sbb
clc
xor
out
add
addl
jns
mov
sbb
mov
sti
xor
pusha
push
push
outsl
imul
mov
das
lods
in
test
ficompl
mov
pop
and
loopne
in
lret
xchg
imul
loop
mov
loop
adc
dec
nop
ret
addr16
jb
inc
or
sbb
cmpb
sbb
in
jb
push
push
pop
sub
add
mov
cli
cmp
pop
sbb
scas
adc
outsb
dec
movsl
lods
push
pop
sub
ds
fisttps
scas
mov
mov
sbb
xchg
mov
jbe
test
popa
scas
push
imul
loope
stos
movsb
por
bound
adc
dec
push
leave
in
push
jns
adc
loop
adc
aaa
push
xchg
cld
mov
aam
negb
stos
jb
lahf
xor
adc
add
bound
xchg
lea
sbb
shlb
mov
cli
cli
icebp
fsubrs
dec
gs
jno
adc
fisubrl
xor
mov
mulb
leave
scas
push
stc
loope
sbb
fldenv
fisubs
mov
sbb
jle
stos
imul
xor
adc
out
push
ds
shl
mov
cs
jae
in
push
das
imul
jb
adc
shrl
add
fucomi
sub
scas
shrb
or
in
insl
loope
mov
clc
inc
sbbb
aam
aam
or
mov
out
lea
es
and
popf
hlt
push
aam
mov
out
xchg
xor
enter
cmp
imul
stos
dec
mov
cmp
cmpsl
push
fs
inc
icebp
mov
popf
or
adc
addr16
adc
mov
xor
sbb
adc
push
jp
aad
movsb
xor
bound
push
out
push
data16
add
xor
dec
xchg
test
lahf
pop
fists
mov
jo
mov
cmp
loopne
out
cmp
dec
xor
mov
jne
and
test
inc
adc
orb
cmpsb
inc
adc
push
popf
inc
cld
icebp
in
cwtl
xchg
sub
jae
adc
test
pop
mov
push
adc
fcmovb
stc
lcall
mov
outsb
arpl
mov
aaa
inc
xor
in
lods
iret
aaa
addr16
jge
inc
lock
pop
inc
and
mov
lea
jmp
pop
sub
mov
scas
mov
xchg
mov
pop
inc
sbb
pushf
adc
imul
fdivl
sbb
dec
aam
pop
out
fsubrp
add
jbe
inc
ljmp
lods
mov
sarl
lea
dec
mov
int
jno
lret
fs
mov
ret
pop
pop
es
jmp
ljmp
mov
int3
movsl
fsts
dec
lock
mov
insb
ljmp
jb
je
test
orb
add
cmp
or
sub
dec
andb
and
inc
inc
mov
inc
pop
cld
adc
sub
adc
xlat
pop
lods
mov
shlb
push
das
fwait
cmp
add
xchg
clc
push
xchg
inc
cli
sbb
lea
ret
sbbl
pop
push
cltd
fsubr
sub
fisubrs
sbb
pop
insl
lcall
popf
cmp
and
sub
repnz
dec
sahf
in
div
loop
iret
mov
mov
jecxz
push
lret
call
xor
gs
sahf
push
fdivp
int3
out
sarb
xchg
or
mov
or
sahf
sbb
cld
idivl
mov
hlt
pop
xchg
mov
cli
sbb
aas
std
push
xor
inc
fsubs
out
mov
ficoms
fadds
cwtl
sub
lea
aad
push
enter
or
adc
fcmovnb
in
jge
pop
insb
pop
icebp
xchg
jecxz
fstpl
pop
fsubrl
pop
stc
sbb
mov
leave
imul
xor
push
es
icebp
sub
shrb
cli
outsl
mov
xlat
jl
add
inc
xor
lods
rolb
cmp
mov
int3
lret
test
push
xchg
mov
mov
test
and
jmp
rcrl
inc
addr16
jmp
cmp
lcall
pop
lcall
push
fsts
jnp
aam
mov
ljmp
addl
sbb
push
mov
pop
aad
insb
ret
test
les
add
ret
dec
fisubl
xor
rorl
sbb
xor
xor
mov
ror
xchg
pop
cmc
xchg
inc
jb
aas
jb
sbb
int3
mov
les
stos
push
stos
addr16
xchg
pop
mov
scas
push
hlt
in
inc
lahf
fsubrp
mov
movsl
xchg
lahf
sbb
xchg
movsb
dec
test
test
push
and
fwait
add
sub
stc
xchg
test
xchg
test
cmp
shlb
ja
lcall
jbe
or
movsb
mov
xor
pop
cmp
icebp
sbb
mov
fdivl
or
outsl
sbb
mov
cmp
cmp
std
loope
xor
rolb
fwait
xchg
mov
xchg
aad
add
mov
jbe
incl
in
jmp
mov
mov
cli
push
es
pop
subl
pop
push
movsl
mov
cwtl
add
add
mov
dec
xchg
dec
inc
imul
cmp
adc
mov
or
cwtl
xor
dec
testb
maxps
lods
and
mov
inc
or
dec
jae
and
sbb
adc
decl
ds
movsb
or
lock
mov
jnp
rolb
inc
mov
xor
adc
inc
mov
lcall
sub
mov
jge
add
outsb
jp
or
ds
out
cmpl
pop
sarb
jmp
pop
in
scas
sar
and
pop
mov
insb
sub
or
xchg
and
cmp
inc
xor
jge
push
push
je
inc
mov
pop
xchg
notl
in
add
movsl
xlat
xchg
repnz
js
aaa
das
pop
mov
xor
cmpb
data16
roll
xor
sahf
xchg
mov
testl
sbb
cld
jg
rep
std
jne
pop
add
inc
lds
fildl
mov
add
test
in
mov
mov
sbb
xchg
test
pop
mov
ret
addl
stos
adc
out
mov
dec
outsb
shr
xchg
icebp
lret
sbb
add
cmp
loopne
iret
or
scas
lea
gs
fistpll
inc
mov
push
out
mov
pop
xchg
movsb
test
mov
das
leave
push
jbe
mov
jb
sti
shrb
inc
fwait
aam
clc
lods
repz
pop
pushf
int
and
es
hlt
xor
test
cs
rcl
cli
mov
iret
out
jmp
loop
mov
orl
popa
mov
outsl
adc
mov
in
and
addr16
jo
push
pop
in
cmp
sti
and
cmpsl
shlb
xor
fmull
mov
cltd
pop
push
xchg
xchg
xchg
lds
xchg
scas
sahf
mov
aaa
sti
or
lret
sub
mov
adc
dec
jnp
ss
jns
outsb
xor
aas
jg
es
xor
push
and
adc
cmpsb
bound
jmp
sti
jge
aad
push
popa
and
jne
loop
fcoml
loope
ret
add
insb
pop
popa
jecxz
sahf
fsub
mov
or
les
cmpsb
dec
pop
pop
pushl
xchg
fwait
pop
pop
stos
mov
xchg
mov
or
mov
dec
je
in
inc
popa
cmp
test
imul
stc
in
repz
fistl
add
push
mov
shlb
dec
and
adc
xchg
cmc
jb
das
loope
push
push
cwtl
test
addr16
xlat
test
xchg
jnp
movsl
xchg
ror
jp
inc
xchg
sti
adc
loope
out
lret
out
pop
testl
xchg
ficoms
cwtl
mov
int
icebp
mov
in
xor
push
lahf
pop
add
mov
in
fiadds
outsb
add
sbb
xor
popf
repnz
lcall
mov
je
cmpsl
dec
in
scas
inc
dec
push
mov
out
sub
and
and
add
sbb
mov
lds
es
pop
je
ja
in
cmpsb
jbe
lds
gs
repz
mov
cwtl
push
rclb
jo
rcr
rolb
sub
mov
mov
add
pop
or
and
push
lods
mov
ret
and
je
add
popf
loopne
and
add
ja
dec
lcall
sbb
jle
stc
pop
xchg
adc
lods
ret
dec
fdivs
test
pop
rcrb
xchg
pop
jl
or
addb
lret
sub
lock
test
dec
inc
adc
mov
mov
dec
jp
js
dec
shll
dec
shll
adc
ret
scas
sbb
mov
mov
int3
xor
inc
lret
insb
outsb
test
mov
lds
loope
pusha
cwtl
add
sub
jnp
cmpsl
or
and
test
jb
mov
push
mov
insl
pushf
and
daa
sbbb
pop
in
stc
movsb
dec
subb
in
mov
jbe
push
sub
rorb
mov
xor
cmp
mov
fcomps
pop
sbb
dec
mov
repz
scas
call
loop
fs
adc
and
push
inc
adc
dec
popf
out
repnz
push
clc
rorb
imul
scas
sbb
out
or
mov
cmovns
lods
or
pop
nop
push
cmp
dec
out
sub
sahf
cmp
loopne
inc
cs
sar
outsb
aad
icebp
imul
cld
loopne
nop
hlt
dec
dec
sub
cmp
cmovge
xlat
mov
push
sub
cmp
or
xchg
jno
data16
pushl
xchg
xlat
int
or
cwtl
cmp
or
sbb
jl
pop
testb
loope
xchg
pop
movl
mov
jmp
pop
mov
or
adc
push
gs
addl
test
fisttpl
test
push
lret
sbb
lds
clc
movsl
fwait
outsb
sub
mov
and
xor
dec
mov
xor
pop
inc
rorl
pop
shl
loop
cmc
stos
rorl
pop
lcall
dec
ljmp
ds
mov
push
fwait
sub
pusha
cli
sahf
mov
mov
mov
pop
pushf
bswap
out
mov
pop
arpl
pop
dec
adc
sub
jp
sub
push
mov
out
ljmp
push
ret
fwait
lds
jl
ss
sbb
mov
add
test
and
out
loopne
imulb
ret
int
adc
and
inc
daa
cmp
decl
mov
jge
push
cld
push
push
mov
push
pop
into
jno
dec
vpaddusw
fst
mov
fnstsw
out
shr
sbb
jmp
dec
out
lea
xchg
add
bound
push
sub
in
or
cmp
roll
insb
dec
loopne
movsb
data16
dec
stos
xor
loope
push
jle
inc
iret
xchg
inc
mov
pop
ds
out
mov
arpl
inc
push
cli
cltd
and
adc
popl
out
mov
test
sub
adc
sbb
fiaddl
inc
adc
lds
movsb
shlb
imul
mov
scas
out
lea
mov
andnps
sub
pop
mov
jp
mov
dec
outsl
inc
adc
xchg
into
scas
cmpb
mov
pop
mov
sub
xchg
inc
sbbb
add
jns
inc
imull
daa
inc
aad
repz
ret
sbb
je
in
pop
xor
jnp
out
das
fldt
popf
push
cli
mov
push
xchg
xchg
scas
sub
jp
ret
notl
shl
inc
cltd
mov
adc
scas
test
inc
mov
repz
sbb
jo
lret
aaa
and
fidivs
cmp
mov
lahf
mov
push
data16
jl
lcall
or
lret
popf
sbb
push
rcrb
inc
and
in
mov
mov
cmp
enter
cmp
pusha
icebp
rcl
cmp
test
cmp
inc
cmp
jbe
sbb
mov
imull
push
lret
mov
andl
pop
jae
enter
lret
ja
xor
mov
mov
dec
or
sbb
decb
insb
jle
ret
sub
jg
arpl
fs
pop
or
jmp
xchg
push
jl
cmp
out
cmp
xchg
leave
push
jmp
xorl
cmp
aad
out
cmp
or
jmp
xchg
cmp
lods
or
repnz
test
aas
test
xor
and
lret
cmp
mov
pop
adc
add
xor
adc
movsl
mov
lcall
pusha
mov
add
cmp
sub
or
jno
test
mov
sti
push
into
fwait
jb
push
daa
push
repz
adc
and
in
jns
aaa
les
sbb
inc
jo
sbb
lret
shl
aaa
shlb
and
cmp
pop
or
sbb
mov
adc
add
pop
adc
xor
mov
mov
xchg
sub
adc
fbstp
pop
mov
and
mov
cmp
insl
dec
pop
dec
push
lods
jmp
cmpsl
fs
movsb
mov
mov
fmull
xchg
movsb
xlat
idiv
lock
lcall
orl
xchg
scas
cwtl
xor
push
sub
sub
cmpl
mov
mov
pop
mov
fistps
dec
jp
test
stos
les
test
jl
pop
push
out
adc
xor
or
out
inc
shll
jae
imul
ret
pop
inc
add
repz
mov
test
je
fs
push
inc
push
dec
sub
gs
mov
fnstenv
mov
xor
popa
pop
mov
mov
mov
adc
enter
cltd
mov
movsb
mov
lea
mov
notl
lods
pop
sbb
jmp
jge
fneni(8087
ds
xor
in
mov
adc
mov
mov
sbb
int
mov
in
cmpsl
dec
add
fdivr
sti
dec
inc
ja
mov
imul
or
jmp
mov
rorb
add
vmovaps
das
cmpsb
aad
popa
jno
in
mov
cmpb
sti
mov
imul
sarl
rcrb
mov
jle
test
jp
mov
push
mov
jno
sbb
ret
sbbb
jmp
inc
cmp
ljmp
cmp
lret
mov
aam
add
pushl
paddd
or
pop
pop
and
sbb
mov
gs
scas
gs
sub
pop
mov
ss
mov
cltd
add
popf
test
pusha
popf
add
mov
stos
mov
and
jae
dec
mov
jmp
lea
mov
inc
mov
xchg
inc
in
popf
in
cmp
adc
jno
mulb
cwtl
sub
dec
cs
insl
jne
sub
jg
adc
jno
and
adc
sbb
adc
pop
cmp
or
stc
roll
jmp
cmp
mov
arpl
scas
jno
repz
cwtl
lea
cmc
dec
ss
dec
lcall
mov
xor
stc
daa
sbb
jle
push
call
pop
daa
xor
sub
xor
add
shll
mov
sti
aas
xchg
ret
xor
sahf
notl
outsl
add
mov
in
fisubrs
and
or
adc
leave
in
out
mov
cmp
dec
add
arpl
cmp
imul
mov
push
data16
pop
adc
push
rcl
bound
pushf
mov
cmp
sub
leave
int
shrb
pusha
cmp
orb
pushf
push
sti
sub
popf
lret
stc
xchg
mov
fs
pop
fs
enter
jp
and
repnz
cmp
mov
pop
outsl
sbb
scas
incl
inc
pop
insl
xchg
jle
cmp
gs
and
pop
adc
sar
ret
mov
imul
jg
dec
sub
add
std
jg
mov
test
add
lret
jbe
fidivrl
add
mov
sahf
fs
pop
jg
sbb
jb
icebp
dec
cmp
push
dec
mov
pop
mov
jmp
sahf
lcall
nop
adc
mov
or
popf
xchg
mov
add
enter
js
mov
mov
inc
hlt
xor
sub
cmp
pop
jg
cmp
sbb
push
lock
ja
sbb
cltd
ror
mov
test
cli
push
mov
in
mov
pextrw
inc
scas
add
push
sbb
xor
les
std
sbb
add
pop
and
jnp
es
cmp
pop
or
sub
push
in
and
push
add
add
push
or
add
or
mov
lock
sbb
adc
inc
add
mov
pop
push
mov
xchg
lea
xchg
stc
dec
adc
cmp
cli
rolb
add
push
jp
adc
into
shrb
mov
xor
cmpsl
jle
nop
fidivl
push
mov
xor
mov
repz
pop
addl
lcall
pop
repz
pop
imul
iret
loop
stc
add
jg
adc
and
lret
ss
sbb
inc
sbb
cltd
and
sbb
sbb
sbb
pop
lcall
sti
data16
and
outsb
add
cld
mov
adc
cmp
push
shrl
inc
ja
add
fsubrs
xlat
ss
shl
dec
adc
mov
rclb
xor
xchg
push
jb
push
push
mov
subb
push
and
cwtl
cmp
push
mov
add
and
mov
movsb
sbbb
pop
sub
adc
jb
sbb
pop
test
dec
jbe
popa
pop
mov
dec
sub
and
adc
pusha
dec
aad
and
in
je
out
jg
jns
lret
push
inc
mov
push
fsubl
jmp
cmp
lea
movsl
xor
je
enter
lret
sbb
xchg
inc
notl
insb
sub
jecxz
inc
or
lea
xor
aam
fdivr
fs
lret
mov
mov
das
push
leave
sbb
sbb
jo
xchg
test
mov
inc
jg
adc
cld
pop
inc
mov
pop
push
inc
imul
push
push
and
push
repnz
mov
cmp
cmp
imul
mov
pop
xchg
rol
mov
xlat
push
jmp
mov
jmp
mov
repnz
aam
sti
test
push
lds
jne
repnz
cmc
jg
mov
inc
dec
jmp
stc
cmc
and
or
pushf
daa
mov
in
faddp
pusha
cmc
mov
dec
mov
fisttpl
int
scas
cli
test
fisttpl
ret
adc
jmp
popa
xor
dec
mov
lods
and
outsb
xor
aaa
cmp
mov
les
adc
vpunpckldq
cmpsb
mov
cmp
and
subb
pop
push
icebp
test
popf
push
iret
mov
jo
and
or
sub
push
mov
cmp
sbb
inc
push
mov
jne
dec
test
mov
lods
pop
pop
icebp
aad
popa
sub
ret
loopne
sbb
cltd
xchg
jns
dec
xchg
add
orl
cmc
sub
push
popa
jno
ficoms
xor
pop
es
push
sub
fwait
mov
xor
stos
cmp
addr16
pop
iret
aas
gs
xlat
inc
jo
insb
jg
sbb
fbstp
mov
adc
repnz
lcall
lcall
add
xor
int
mov
lcall
xchg
push
or
mov
xor
es
cmp
sbb
call
fstp
cmpsl
bound
pop
aaa
cmp
not
mov
jno
and
mov
aaa
or
imull
incb
dec
adc
mov
testl
in
inc
mov
push
push
jle
lret
push
cmp
xor
pusha
aas
jne
in
mov
shrb
andb
ljmp
push
pushf
and
enter
icebp
jo
mov
push
out
mov
dec
dec
sub
out
push
jne
scas
xlat
scas
mov
or
test
int
pop
in
sbb
xor
or
add
aam
adc
shll
enter
aam
xchg
das
mov
data16
mov
xor
scas
dec
mov
cmp
mov
adc
dec
lcall
or
in
push
ljmp
cmp
add
and
add
and
jo
mov
inc
movsl
test
movsb
cs
add
cmp
or
popf
cltd
add
fsubr
popa
mov
fidivrl
mov
sahf
push
das
je
imul
mov
sub
cmp
pop
frstor
fildl
dec
lods
gs
jl
orb
dec
fwait
subl
lahf
xchg
lock
sbb
sub
mov
loopne
mov
out
pop
addb
std
cltd
clc
sbb
aad
popa
scas
or
sbb
and
cli
das
cmp
outsl
imul
lret
mov
in
jo
insb
iret
test
out
lahf
mov
jbe
push
inc
stc
add
adc
lret
mov
xchg
cmp
lcall
bnd
iret
and
xchg
xchg
sbb
pop
lds
dec
enter
cmp
ja
add
mov
aas
mov
and
aad
add
icebp
fcos
cmp
cltd
sbb
add
stos
adc
sbb
pop
mov
pop
jae
in
outsl
stos
mov
mov
add
xlat
sub
lahf
ret
fidivs
jnp
mov
xchg
mov
mov
scas
inc
cltd
ficomps
andb
adc
hlt
scas
sbb
mov
jecxz
xchg
aaa
xor
xor
jns
xor
mov
adc
dec
arpl
push
lds
cmc
dec
sahf
adc
fmulp
cmp
sbb
and
out
xchg
or
lods
inc
cmc
add
sbb
shlb
test
addl
dec
jecxz
xor
mov
or
push
mov
or
bound
ds
clc
hlt
arpl
lcall
sbb
mov
sbb
int3
aad
push
and
cmp
in
lahf
or
and
lods
xor
inc
int3
fldt
pop
mov
rorl
movsl
add
fnstcw
add
push
mov
or
shr
mov
dec
mov
push
jecxz
ja
loope
std
sbbb
sub
sub
stos
idiv
arpl
cwtl
inc
inc
shll
jl
mov
or
push
pop
push
fstpl
pushf
imul
popa
or
dec
dec
mov
sub
sub
adc
scas
push
push
cld
fidivrs
stos
je
xlat
or
mov
jle
mov
subb
pop
flds
jno
jbe
scas
inc
jne
out
sti
pushf
lds
cmp
icebp
xchg
es
shrb
fisttps
xor
lods
sbb
inc
push
cmp
aad
pop
push
insb
jo
jnp
fnstenv
or
call
inc
mov
fdivs
test
or
cmp
xor
cltd
gs
outsb
push
popa
push
rolb
xchg
sub
push
mov
mov
loop
cmp
jns
or
in
inc
daa
jbe
adcb
sbb
fdivrs
adc
xchg
gs
pop
cmp
pop
lea
push
lock
cmp
rcr
and
adc
lea
xchg
dec
sbb
lock
mov
add
outsb
add
pusha
add
jle
scas
mov
push
cld
ljmp
or
and
mov
scas
lds
aam
repz
std
repz
daa
imul
mov
movsl
and
in
cmpsb
mov
mov
and
ret
sbb
add
mov
out
pop
mov
mov
dec
inc
stos
jne
pop
leave
arpl
inc
fldt
push
inc
les
xor
outsb
lret
test
loop
in
xchg
in
sub
repz
dec
or
add
cs
fisttpl
in
imul
jne
arpl
and
or
addw
jbe
jne
fiadds
fwait
pop
sbb
iret
pusha
hlt
fs
scas
fadd
mov
cmp
xchg
incl
scas
pop
stc
sbb
rolb
xchg
inc
fmul
ret
addr16
repnz
pop
pop
dec
add
mov
adc
bound
jo
push
in
and
clc
xchg
xlat
sti
add
jecxz
ss
pop
das
or
popa
sub
dec
test
out
sub
sub
mov
dec
rcrl
xchg
leave
jae
pusha
sbb
inc
jle
mov
and
jecxz
add
sbb
jns
pop
push
test
mov
in
mov
lods
in
test
ret
pop
call
outsl
push
cwtl
pop
mov
imul
fistps
js
inc
stc
mov
iret
ficoml
push
lret
dec
hlt
imul
in
xchg
sub
adc
xor
jno
push
and
lcall
ljmp
ds
aaa
mov
pop
dec
add
inc
sahf
imul
pop
push
call
filds
sub
mov
xor
leave
test
jg
adc
outsb
mov
push
cmpsb
lret
mov
in
iret
call
cmp
or
mov
jne
jp
add
sbb
das
sub
fidivs
mov
inc
jle
addl
jmp
inc
dec
jge
dec
dec
imul
lea
cmp
add
lods
pop
test
loopne
movsl
pop
adc
std
aaa
and
push
add
push
lret
lret
stc
in
xchg
loop
adc
out
shr
sub
jecxz
sbb
movsb
inc
into
lret
sti
std
iret
js
push
mov
mov
xlat
xchg
mov
js
in
pushf
ret
cmp
fs
mov
sub
call
and
or
sub
dec
jge
cmc
xor
pusha
jbe
out
lods
or
and
lret
or
xor
pop
cwtl
cmc
cmp
or
jge
add
das
imul
sub
jmp
mov
add
in
pop
xor
ret
gs
inc
sbb
pusha
sbb
push
inc
push
out
je
and
mov
in
xchg
ret
lret
jbe
aad
scas
clc
repnz
jle
cmp
jbe
int
push
ljmp
pop
jle
jge
push
ljmp
or
cbtw
sub
jl
rcrb
pop
je
mov
sub
push
pop
cltd
adc
das
mov
push
imul
inc
cltd
sub
aas
xchg
add
sub
sbb
add
push
inc
sub
in
adc
push
in
cli
inc
in
push
xchg
inc
jne
jp
mov
or
lds
lret
ja
cmc
inc
or
lret
repz
mov
adc
int
daa
push
cmp
filds
push
loope
sbb
mov
lods
dec
and
xor
loope
xchg
fistpll
hlt
repz
push
data16
adc
das
mov
add
sahf
into
mov
fstl
xor
je
lret
jnp
inc
adc
push
and
cmpsl
jp
add
scas
es
mov
in
fdivrp
nop
inc
sub
je
jmp
mov
xor
xlat
loopne
mov
mov
cmpb
mov
mov
fmulp
adc
and
inc
pop
call
push
das
lret
repz
scas
dec
xchg
in
aas
cld
sahf
lret
mov
pushf
repz
cli
push
jp
js
jle
jle
setl
mov
insl
adc
mov
mov
mov
pop
or
je
mov
out
inc
mov
mov
aaa
loop
sub
push
add
push
in
mov
ds
aad
sbb
out
faddl
dec
ret
fisubs
jmp
in
dec
fnstsw
adc
rcr
push
shrl
inc
sub
sub
sub
jns
insl
stc
rolb
add
mov
cld
dec
sub
mov
jecxz
andl
ljmp
and
sub
adc
tzcnt
and
cltd
repz
or
movsl
movsl
in
test
sub
sbb
das
push
in
in
nop
xor
pop
cmpsl
lret
dec
sbb
cmp
xor
rclb
adc
popa
sub
es
mov
cmp
jmp
data16
push
cli
push
push
aad
pop
ss
lret
cltd
pushf
lret
fsubrl
jle
aad
repz
outsb
adc
cltd
outsb
fldcw
cmpsb
inc
mov
mov
cs
and
pop
in
in
push
scas
mov
cwtl
mov
lods
mov
scas
lcall
test
shrb
ljmp
cmp
ss
lret
push
push
mov
mov
cmp
push
loopne
ret
pop
sbb
mov
decb
mov
in
std
test
push
int
push
dec
dec
stos
or
fnstsw
fwait
pop
nop
pop
jp
mov
push
pop
push
jle
xor
loop
jnp
cmpsl
bnd
jns
or
outsb
pop
push
pop
jecxz
fistps
or
sub
ret
sub
jae
mov
sub
iret
outsb
mov
pop
in
inc
lods
stos
stc
xor
fwait
jno
sbb
arpl
inc
cmp
mov
xchg
pop
or
ficoms
sub
fistpll
call
rcrb
lea
pop
in
aad
sbb
data16
pop
adc
scas
pop
lahf
xchg
das
pop
das
pop
movl
pushf
xchg
les
cmpsl
sub
jecxz
scas
dec
hlt
and
pop
test
or
bnd
adc
sub
imul
fisubs
cli
lcall
mov
daa
out
jbe
hlt
lods
inc
sbb
cmc
bound
int
sbb
xlat
rolb
xor
arpl
bound
call
orl
out
xchg
insb
pop
je
jb
cmpsb
dec
js
pop
js
and
or
sub
cmp
adc
xchg
fdiv
jne
lods
sbb
gs
jle
mov
addr16
jbe
js
push
sbb
aad
daa
or
adc
inc
push
and
stos
cmpsb
and
pop
pop
inc
js
adc
inc
adc
mov
enter
dec
jns
dec
inc
add
test
push
xorb
scas
sbb
jmp
mov
push
sub
mov
scas
in
push
push
push
into
lcall
test
sbb
shlb
cmp
add
enter
xor
pop
jecxz
pop
mov
mov
test
cmp
aad
movsb
push
dec
insb
popf
xchg
jns
dec
mov
pop
sbb
jb
cmp
push
stos
jecxz
sahf
mov
pop
xor
sbb
je
add
and
pop
shrb
xchg
lds
movsb
fwait
js
in
pusha
cmp
fisubrl
ja
scas
add
je
jae
pop
clc
xor
ret
pusha
jno
sub
js
xor
js
pop
pop
out
sarb
push
and
movsl
adc
mov
hlt
ds
vunpcklps
xchg
xor
cmp
adc
bound
cmp
add
das
daa
push
fdivrs
jnp
test
aas
js
sti
cmp
add
jecxz
dec
xlat
jae
insb
jecxz
fcmovne
inc
xor
shlb
mov
xchg
imulb
test
cmpsb
mov
mov
sub
mov
stos
xchg
mov
push
outsb
adc
call
sbb
clc
mov
pop
xchg
in
incl
fistpl
std
sbbb
xchg
jle
mov
push
push
fdivp
jae
add
das
sbb
subb
mov
ret
mov
cli
rolb
fsubrl
mov
ret
dec
and
jb
dec
and
xchg
daa
fldenv
cmp
push
cmp
pop
je
pop
xchg
push
cwtl
inc
sub
in
addr16
sbb
mov
jbe
shll
mov
jbe
inc
cmp
rorl
clc
inc
cwtl
jmpw
outsl
sub
mov
push
in
popl
or
call
out
pop
imul
xchg
fs
cmpsb
test
shr
mov
mov
add
ret
add
out
imul
aas
popa
shll
jl
mov
sbb
xchg
ljmp
mov
leave
stos
pop
lods
mov
in
int
adc
push
loop
jp
xchg
sub
test
jp
push
rclb
mov
add
lcall
mov
mov
sbb
in
arpl
mov
push
add
cwtl
sbb
mov
out
shll
testl
push
jnp
dec
aas
sbb
add
xor
pop
scas
sbb
jo
hlt
movsl
loopne
inc
sti
repz
enter
xor
jb
adc
fisttpl
sub
or
cmp
lcall
outsl
mov
jp
adcl
inc
sub
cwtl
xlat
fwait
jg
push
adc
lret
test
jg
xchg
lea
jmp
out
push
les
sbb
or
test
sub
fwait
push
pop
out
test
dec
stos
divb
in
repz
mov
mov
push
mov
in
rep
pop
je
rcll
jae
xchg
test
sub
push
add
or
pop
xchg
cmp
cmp
int
add
fs
dec
mov
push
inc
loope
lock
lock
mov
jne
das
call
pop
mov
int
out
push
push
add
dec
scas
sbb
cmp
out
out
out
xchg
xor
das
divb
test
mov
dec
jl
lcall
ret
cmpsb
jno
stc
adcl
push
push
adc
shl
adc
lods
pop
adc
hlt
stos
pop
ja
jns
cs
into
clc
aam
call
movl
ljmp
mov
lahf
out
sub
imul
xchg
sti
aaa
gs
and
mov
or
mov
arpl
adc
enter
sub
roll
xor
ja
mov
add
or
mov
or
push
mov
mov
or
pusha
shll
push
xchg
pushf
in
sbb
fwait
ljmp
lcall
cmpsb
xchg
daa
clc
inc
push
jae
enter
xlat
icebp
dec
repz
dec
pusha
inc
dec
cld
sahf
jnp
in
pop
sub
jae
xchg
and
sub
lds
test
lret
inc
stos
ficoms
movb
ljmp
lret
fwait
nop
outsb
mov
push
mov
lret
cwtl
ja
bnd
decl
sbb
iret
rclb
push
enter
dec
sarl
xchg
call
mov
cmp
insl
adc
push
and
loopne
mov
int
sbb
test
mov
and
pop
sbb
cmpsl
fsubrp
lret
call
mov
adc
adc
jmp
hlt
leave
mov
pop
jge
outsl
push
aad
push
mov
inc
fcmovnbe
xchg
mov
test
mov
xor
inc
movsb
jns
orb
dec
shrb
ja
dec
popf
inc
adc
fs
rcll
sbb
insb
adc
xchg
rcll
int3
or
daa
push
lods
int3
cld
inc
out
or
dec
mov
or
mov
push
sub
test
add
nop
ja
repz
inc
sub
mov
decl
xor
pop
dec
cmp
pop
dec
fdivr
pop
xchg
cmp
sub
es
lods
push
mov
mov
push
outsb
jb
sahf
lock
pushf
lods
roll
sub
dec
ljmp
and
pop
mov
mov
loopne
dec
lea
inc
add
and
outsb
jle
out
adc
and
inc
insb
stos
cmpsl
cwtl
jmp
imul
mov
in
test
jo
xor
imul
shrb
xor
daa
ja
insl
shrl
pusha
xor
std
stos
notb
jns
jnp
push
lret
pop
cmc
jecxz
lds
bound
roll
adc
stc
cwtl
adc
xchg
int3
sti
shl
pop
mov
stc
inc
test
or
test
add
inc
cs
cltd
mov
xor
in
pop
mov
cmp
inc
loopne
jb
inc
push
inc
sbb
xor
pop
sti
dec
pop
or
out
sbbl
pop
sbb
cmp
out
inc
xor
and
xchg
sbb
notl
xchg
or
loope
jae
pop
mov
sub
sbb
aas
xor
jecxz
cmp
mov
add
pop
sbb
inc
andl
add
jno
icebp
inc
xchg
sub
mov
repz
stos
sbb
inc
sbb
dec
mov
xchg
cmpsl
iret
or
inc
decl
sub
xchg
dec
push
mov
mov
mov
pop
lds
lock
cmp
xchg
shlb
and
jb
inc
push
ss
repz
hlt
mov
in
clc
sahf
push
pop
push
popa
xchg
sub
call
fninit
push
shlb
push
test
add
pop
ficomps
dec
aaa
push
sbb
jg
fcmovbe
push
push
push
sbb
fdivrl
xchg
sbb
add
dec
dec
pop
mov
in
into
ja
aam
dec
add
pop
xchg
cld
mov
cmp
push
out
paddsb
std
aaa
pop
xchg
cmpsl
mov
daa
dec
imul
jg
push
mov
leave
aam
ljmp
sbb
stos
imul
mov
jle
inc
nop
dec
and
mov
fsubl
or
jg
outsl
into
ljmp
xchg
lret
adc
mov
sub
sahf
or
jbe
arpl
stos
cmpsb
jge
pop
mov
xor
jmp
stc
imul
outsb
aad
xor
mov
mov
incb
js
and
and
fldenv
cmpsb
inc
sub
xchg
or
cmp
cltd
jae
cmp
jg
into
add
sahf
xchg
xchg
cmp
mov
pop
pop
daa
adc
ror
mov
sub
int
incb
inc
adc
les
out
data16
cli
mov
xor
aad
mov
out
divb
pop
cwtl
sbb
in
ret
fsubrl
mov
lahf
pop
mov
imul
divl
xchg
inc
movsl
add
mov
or
jmp
cmp
je
aaa
dec
scas
cmc
mov
or
bnd
inc
out
arpl
jp
test
mov
fs
pop
dec
arpl
mov
or
mov
aaa
nop
ret
test
sbb
jae
adc
clc
pop
or
in
fsubl
jno
sbb
clc
xchg
insl
imull
test
fnstsw
jmp
out
pop
nop
jnp
mov
xor
xor
call
or
loopne
push
outsl
or
mov
int
shl
movsb
pop
hlt
cmp
mov
or
popa
movb
and
sub
xor
xlat
jl
lret
xchg
into
push
cmc
cmp
es
cltd
push
jne
ss
out
dec
lods
xor
push
insl
or
cmc
in
fisubl
push
pop
test
clc
jnp
daa
out
shl
cmpsb
cmpsb
ret
inc
adc
dec
daa
pop
das
nop
jmp
lods
cmp
mov
push
cltd
daa
sub
sbb
cmp
out
mov
xchg
fisubrl
sub
and
mov
dec
or
out
mov
cmp
cmp
ficoml
in
lcall
repz
lods
movsl
cmpsl
pop
add
adc
adc
and
jb
add
cmp
sbb
push
jo
into
pop
push
adc
mov
sbb
das
push
jno
movb
sarb
test
fidivrl
sbb
into
mov
adc
lods
hlt
pop
sbbb
push
fidivl
xchg
xchg
mov
and
xchg
je
xchg
push
mov
arpl
dec
mov
mov
decb
and
fcompl
add
jns
push
mov
dec
xchg
add
push
add
xlat
iret
cmpsl
sbb
adc
mov
jp
int3
mov
sbb
insl
push
mov
or
nop
dec
or
sbb
inc
int3
ljmp
jle
mov
idivl
jae
sbb
jge
xchg
pop
xchg
addl
pop
pop
imul
fs
lcall
mov
sub
inc
mov
push
mov
ds
push
mov
leave
insb
inc
js
inc
stos
xor
aad
sbbb
lds
lds
push
call
clc
push
cmpsl
repnz
jmp
sub
lock
lcall
sbb
repnz
mov
mov
sub
jmp
mov
and
in
push
stos
ret
out
xor
jmp
popf
xor
jecxz
testb
push
cwtl
ja
inc
shlb
ret
stos
sbb
pop
mov
xchg
sbb
in
test
nop
out
cmp
inc
movsl
and
sar
dec
pusha
xor
pop
xchg
repz
in
mov
mov
cmc
push
shll
enter
add
int3
cmp
je
test
enter
inc
mov
xchg
lcall
sub
negb
popf
dec
adcl
mov
out
xchg
ret
mov
xchg
cmc
repnz
mov
mov
adc
inc
notb
stc
mov
scas
add
adc
mov
test
inc
pop
and
push
or
push
push
int
scas
xchg
pop
xor
fwait
jae
and
mov
pop
cmp
movsl
pop
mov
ss
jns
repnz
pop
xchg
hlt
or
pop
lods
in
call
mov
sub
push
in
push
cwtl
mov
pop
adc
dec
mov
adc
in
sbbb
int
pusha
rolb
xor
ss
jns
jle
xchg
xorb
je
and
lret
and
ficoms
pusha
ja
icebp
lods
xchg
jge
push
lds
iret
stos
mov
xchg
mov
popa
mov
xchg
test
pusha
int
push
add
push
clc
jmp
inc
add
int3
sub
mov
sbb
dec
pop
pop
pop
push
push
and
ficomps
mov
push
aas
or
xor
jno
adcb
sahf
mov
mov
fisubrs
inc
pop
aad
jmp
cmc
pusha
sub
shr
and
or
pop
xor
sahf
adc
push
push
sub
mov
mov
xor
testb
adc
mov
cwtl
iret
popa
enter
nop
test
pop
fisubl
mov
cld
xor
sbb
clc
sbb
je
fisttpl
sub
iret
out
gs
sbb
mov
sbbl
pop
test
jmp
xor
pop
jle
hlt
inc
push
mov
mov
xchg
push
in
push
xchg
cwtl
jb
lods
test
or
decl
aam
lock
adc
xor
aad
aad
mov
xchg
mov
popl
mov
repnz
aad
inc
data16
adc
pop
call
and
in
insl
lcall
push
sti
sbb
fwait
xor
pop
pop
imul
inc
sbb
mov
scas
mov
inc
adc
sbb
xorb
aam
mov
out
mov
out
xor
pop
sub
movsb
xor
cmp
test
das
lcall
sbb
cld
jmp
xor
adc
lock
jb
inc
inc
outsl
in
adc
push
mov
movsl
daa
mov
fs
jp
jnp
lea
aas
outsl
lcall
mov
adc
pop
insb
scas
jb
and
movsl
mov
jbe
imul
aaa
sub
int
xchg
and
out
cltd
into
and
lret
pushf
sub
dec
divb
mov
negb
popf
subb
dec
mov
fsts
xor
push
fisubs
push
jnp
jno
jmp
fs
loope
sbb
add
pop
inc
adc
test
jnp
add
incb
push
cltd
pop
cmpsl
mov
adcb
fldl
in
rcr
imul
sbb
jne
xchg
mov
mov
sbbb
pop
test
mov
adc
jl
cmp
sbb
mov
imul
insl
or
sti
test
xchg
or
and
aam
mov
add
ret
pslld
fndisi(8087
movsl
sbb
jo
call
iret
in
xlat
mov
pop
push
jg
sbb
mov
pop
cmp
or
ret
in
mov
pop
jmp
nop
mov
push
mov
and
mov
push
ror
add
in
pop
xchg
enter
into
xor
bnd
idivl
or
call
jb
push
mov
adc
add
and
fcomps
sahf
push
loope
xlat
movsl
pop
gs
mov
xchg
int3
lahf
insl
data16
iret
or
pop
mov
icebp
shll
jae
jmp
pop
dec
or
dec
sub
rolb
xchg
icebp
popa
adc
push
push
add
fsubr
enter
rolb
jle
pop
repnz
shll
add
push
dec
xchg
xchg
add
cmp
mov
repz
lods
les
sarb
jl
jb
jp
outsb
push
mov
jnp
int
mov
or
sub
dec
mov
push
bound
adc
mov
sti
aad
in
fstpl
jae
ficoml
lock
rcr
enter
ficoml
shlb
add
ret
aaa
insl
jecxz,pt
jle
movsb
ljmp
inc
add
fwait
aad
mov
cmp
ret
movsb
sbb
mov
mov
jbe
cs
xchg
addr16
jbe
pop
test
push
in
inc
jle,pn
ja
push
fwait
xor
and
jmp
jecxz
cmp
sbb
adc
mov
cld
inc
mov
sbb
fldcw
fs
jb
xchg
aaa
popf
pushf
push
int3
push
not
sti
push
dec
lea
inc
mov
test
jecxz
mov
pop
sub
mov
pop
lcall
adc
aam
inc
adc
ja
std
sarl
fiadds
bound
pop
pavgb
ficoms
das
bound
int3
dec
movd
cmp
sti
mov
pop
dec
lods
adc
and
add
push
in
shrl
dec
test
inc
sub
imulb
repnz
add
ljmp
xlat
mov
sub
pushf
mov
loopne
sbb
or
push
cmc
sbb
mov
push
mov
xor
dec
dec
test
in
adc
ret
rorb
cwtl
mov
stc
dec
mov
cmp
push
adc
aad
shrb
test
mov
sub
stos
sarb
scas
cltd
xchg
sub
lods
sbb
aas
movsl
ret
jge
vunpcklps
pusha
add
fucomi
scas
in
xor
adc
mull
fcoms
loopne
push
add
shrl
aam
inc
insl
xor
mov
dec
push
fldcw
insb
popf
je,pn
rcrl
sahf
xchg
or
jg
fidivrs
xlat
mov
xchg
push
push
imul
push
movsl
into
mov
push
punpcklwd
fisttps
mov
cld
int
and
sahf
push
aas
std
repz
add
pop
fbstp
cmc
addr16
add
icebp
xchg
scas
jp
dec
mov
mov
cwtl
xor
and
dec
add
divb
hlt
fucomp
adc
movsl
andl
pop
iret
xorl
in
mov
dec
mov
cli
ja
jb
test
xor
mov
xor
add
dec
cmp
push
repnz
jnp
pop
cld
dec
icebp
in
stos
cmp
xorl
add
icebp
into
pop
loope
xchg
push
aam
sahf
jns
popf
pop
cmp
jle
inc
fildll
add
cli
push
dec
lcall
ljmp
inc
lcall
lods
cmp
outsl
sbb
dec
cwtl
mov
imul
add
pop
outsl
aas
aaa
repz
sub
ljmp
in
fwait
jns
sahf
mov
fcmovnb
sbb
dec
dec
arpl
adc
mov
lret
dec
outsl
pop
adc
movb
int
xor
in
mov
test
cli
dec
pop
inc
test
sbb
loope
inc
adc
or
cmp
stos
outsb
leave
fsubs
mov
fbstp
mov
cs
fnstcw
cmp
inc
pop
push
inc
es
mov
test
jb,pt
cltd
add
enter
inc
sub
or
inc
mov
adc
pop
test
push
out
jns
pop
jo
push
test
or
scas
dec
sbb
ficoml
push
mov
ss
pop
je
sub
pop
pop
mov
jbe
inc
xor
dec
jg
xorl
lock
adc
mov
add
in
mov
mov
push
sub
mov
or
fdivr
xchg
fisubrs
sub
dec
or
fwait
xchg
adc
mov
jp
jge
ja
adc
shlb
lret
sub
test
or
scas
lcall
inc
dec
xlat
push
dec
fisttpll
xchg
cmpsb
xor
mov
popf
sub
fisubrl
je
test
push
pop
outsb
repnz
jno
push
push
das
pop
adc
incb
testb
enter
xor
ret
sbb
ljmp
sti
ljmp
movsb
ljmp
jno
push
push
inc
and
ljmp
and
jbe
cli
lret
stos
icebp
inc
push
fcmovnu
inc
adc
xor
movsb
fstpl
push
imul
cld
inc
add
ror
sar
pop
les
test
in
pop
sub
jge
xchg
jbe
sbb
lahf
std
loop
enter
adc
adc
popf
je
pop
cmp
pop
mov
clc
shl
jg
xor
in
ret
ds
rcl
aaa
xchg
das
popf
and
out
scas
cmp
ljmp
add
jbe
cs
daa
jp
or
movsl
xor
int
loope
scas
jo
xchg
int3
out
push
aas
pop
mov
mov
pop
sub
movsb
ds
mov
rorl
inc
xchg
mov
adc
daa
xchg
les
adc
push
inc
adc
jg
push
stos
jmp
or
movsl
lds
mov
popa
xlat
xchg
dec
or
push
push
es
in
mov
lahf
cwtl
in
ds
xor
ret
adc
mov
mov
and
mov
jb
cwtl
lds
sti
movsl
cmp
mov
cli
sbb
insb
xchg
inc
push
xchg
ja
xor
int3
popl
fsts
cli
negl
cmp
stos
inc
dec
dec
flds
xchg
clc
mov
testl
loope
bound
dec
mov
lock
jle
mov
mov
mov
or
shl
mov
jns
insl
xchg
cmp
and
dec
push
mov
or
or
adc
mov
fildl
pushf
push
in
and
pusha
sub
stc
nopl
mov
cmc
pop
fdivrl
lds
pop
outsb
add
sti
xchg
repnz
loopne
lods
vshufps
cmp
popa
push
lods
shll
push
ret
pop
dec
dec
dec
mov
and
jns
pop
cmpsl
out
and
pop
in
movsl
xor
sti
mov
int3
jmp
xchg
jnp
call
push
adc
adc
ss
daa
cmpsl
sti
mov
dec
push
cmp
in
movsb
adc
xchg
shll
scas
outsl
popa
arpl
pop
push
mov
adc
in
pop
repnz
inc
ret
fstpl
inc
inc
fs
jnp
mov
or
xor
aaa
sbb
lods
jg
out
jno
daa
lock
push
fbstp
mov
add
jb
lods
xor
faddl
ds
rcrb
pop
jmp
sub
shlb
sbb
inc
mulb
aam
push
sbb
xorb
notl
and
rolb
mov
dec
out
jmp
jecxz
lea
movsl
inc
push
scas
aas
fdivrs
or
fs
jb
xor
into
push
jmp
push
inc
test
push
push
cmpl
sub
mov
inc
pop
aaa
lret
ss
imul
push
in
in
shll
mov
sub
popa
mov
out
fisttps
rcrb
xor
stos
mov
pop
push
movsl
shlb
lret
lret
adc
adc
push
sbb
imul
aaa
mov
mov
pop
jle
inc
clc
sub
shl
xchg
mov
repz
mov
add
fcoml
jo,pt
fimuls
sbb
push
sahf
repnz
dec
mov
dec
add
je
push
stos
adc
in
call
lret
sbb
jmp
je
nop
int3
mov
rclb
mov
inc
test
nop
fsts
lods
inc
lds
es
and
fimull
ljmp
mov
add
push
imul
mulb
stc
or
fnstsw
imul
pop
int3
in
and
or
or
push
mov
cli
xchg
sub
add
sub
jp
ret
xor
adc
fsubrs
jle
mov
addl
stos
test
cwtl
enter
mov
or
or
mov
cmpsb
ds
lea
push
daa
lds
cwtl
mov
icebp
dec
xchg
cmpsl
mov
imul
sti
popa
hlt
aad
jae
xchg
in
iret
or
mov
cwtl
roll
leave
in
enter
gs
push
subl
cmp
insl
sti
mov
inc
add
xor
xchg
dec
mov
jecxz
push
pop
jecxz
mov
add
shlb
sub
xchg
test
push
adc
push
and
int
hlt
and
cmp
cmp
sbb
iret
int
rclb
jb
dec
jnp
mov
ret
cmp
push
jl
jne
add
or
fcoml
lret
pop
pusha
sub
sti
fisubs
scas
lock
push
mul
movsb
push
cmp
mov
mov
jo
das
mov
lahf
aas
lret
movsb
fld1
jbe
dec
sub
repz
scas
xor
add
mov
push
fwait
or
add
cld
mov
and
add
popa
shrl
sub
inc
mov
sbb
sbb
out
loopne
rcll
push
push
mov
xchg
divl
cmp
mov
shlb
mov
push
add
shlb
pushf
cmp
mov
mov
mov
or
jns
aas
xchg
call
fwait
clc
aas
dec
mov
addb
ja
cmpsb
xchg
adc
outsb
test
shrb
mov
sub
test
push
dec
jmp
jle
adc
mov
inc
out
sub
out
inc
jns
iret
sti
mov
aas
sub
push
xchg
fcmove
push
dec
rcll
sbb
pushf
test
push
aaa
jg
in
mov
cli
sub
lds
ja
fisttpl
idivb
aas
pop
fstl
fmull
ja
jp
daa
cli
lea
cmpsl
je
cmc
loop
xchg
loope
mov
pop
push
jmp
das
mov
test
or
sub
push
repz
dec
pandn
push
sbb
sti
xchg
bound
out
adc
test
rclb
adc
xchg
mull
js
loopne
lds
loop
and
sub
inc
dec
arpl
addb
shl
rclb
cmp
stos
push
xchg
inc
scas
in
xlat
cli
mov
fs
outsl
sahf
imul
js
cs
push
add
test
fldt
push
add
daa
movsb
test
pop
fs
fcompl
inc
jl
add
dec
int
dec
ror
popf
inc
push
test
xor
push
sbb
lock
inc
mov
shrl
sbb
push
lcall
cmp
rcrb
jg
icebp
mov
out
lods
gs
dec
negl
jg
mov
aam
xor
sti
sub
jne
mov
jnp
push
xchg
out
xchg
ljmp
jl
inc
fs
dec
shll
cmp
mov
inc
aaa
push
push
inc
lock
and
or
dec
and
icebp
cld
aas
dec
cwtl
add
outsb
clc
xchg
add
fstl
mov
mov
scas
xchg
or
scas
push
test
adc
mov
add
in
sub
sbb
fisubrl
ret
insl
loopne
push
imul
pop
out
sarl
fcmovbe
out
push
imul
dec
adc
lea
mov
push
jecxz
dec
dec
xchg
pop
out
mov
fsubs
mov
fldenv
loopne
shll
inc
outsl
cmpb
mov
push
cld
out
xor
sbb
popa
lcall
rcrl
pop
jns
setp
or
mov
pop
pusha
sub
outsl
or
mov
inc
xchg
arpl
xor
inc
lods
xor
jns
cld
mov
jecxz
jg
inc
push
pop
add
rcrb
leave
cwtl
sub
mov
or
pushf
mov
das
stos
mov
and
mov
add
inc
lds
inc
lods
jecxz
clc
pusha
fxch
sahf
sbbb
xor
adcl
out
xchg
out
andb
stos
cmp
leave
fidivrs
ja
dec
cli
inc
sub
dec
sub
push
mov
pop
call
mov
mov
in
cmp
into
int
clc
sub
add
jg
aad
xor
jecxz
rolb
jl
xchg
push
or
sub
mov
movsl
dec
repnz
out
cmp
sub
xor
inc
xchg
cmpsb
xchg
scas
out
nop
inc
fildl
sub
in
out
icebp
and
call
int3
cmp
inc
enter
xchg
arpl
lock
and
add
cmp
cltd
dec
movl
lret
push
jns
incb
mov
clc
mov
shrl
adc
mov
sbb
aaa
push
mov
mov
add
sbb
xor
lret
shrb
xor
mov
bound
ret
inc
xchg
push
cmp
xchg
inc
push
subl
mov
or
fdivr
orl
mov
into
out
fmul
push
add
jno,pt
fwait
outsl
dec
pop
adc
mov
xchg
mov
cmpl
inc
xchg
push
fsts
jo
jae
out
loop
lods
imull
xchg
push
push
test
adc
or
stc
push
roll
cs
and
psubq
int
lahf
js
dec
mull
pcmpeqw
push
clc
stos
hlt
loop
adcl
fs
jp
xchg
dec
inc
adc
mov
rcll
in
cmp
sar
or
movsb
mov
xchg
jecxz
out
inc
lret
jno
test
repz
jo
inc
ss
cwtl
pop
aaa
sub
jnp
testb
fistps
notl
cmp
xor
loop
iret
and
mull
push
pop
imulb
mov
xor
lods
xchg
popf
int3
sbb
inc
dec
in
imul
cmp
fadd
enter
jmp
mov
in
insb
out
xor
pop
jle
sbb
xchg
sahf
mov
fs
fsubs
jno
test
mov
lods
add
shlb
aaa
cld
mov
sti
sbb
mov
and
les
mov
repz
popa
xor
movsl
imul
test
jae
ss
jge
sahf
stc
fs
fldt
pop
fwait
in
into
push
push
add
mov
mov
and
iret
js
pop
mov
cs
insl
jbe
or
js
xor
cmp
xchg
test
cmp
dec
push
iret
push
xlat
stos
testb
sub
test
clc
sarb
lock
pop
jge
je
sbb
mov
mov
push
add
test
pop
xchg
sbb
test
inc
dec
pop
push
loope
xchg
test
mov
mov
dec
pop
cmp
mov
dec
je
and
jnp
push
add
je
jo
in
les
hlt
adc
push
jbe
jbe
shll
push
in
jp
sarl
adcl
add
push
cli
aam
in
icebp
jg
xchg
sbb
mov
add
dec
arpl
insb
add
mov
inc
ror
sarl
test
xchg
push
fcompl
add
push
jae
mov
xchg
xchg
cmc
mov
loope
data16
mov
dec
mov
cmp
add
imul
mov
and
xchg
and
cltd
jno
nop
arpl
shll
inc
adc
or
add
fdivrs
cmp
clc
add
aaa
or
stc
pop
or
mov
dec
pop
sbb
lahf
sub
loope
sub
dec
out
cli
or
loope
fdivrl
ret
xor
ror
ds
cwtl
loop
cltd
mov
xchg
leave
jns
divl
xor
cmp
inc
xchg
lret
jg
orb
xor
dec
add
jge
jno
push
jg
lock
push
mulb
inc
leave
testl
imul
dec
jbe
cmp
cmp
and
jbe
mov
xchg
arpl
add
dec
inc
xchg
fists
cmp
lds
xchg
mov
push
ljmp
cs
movsl
daa
xor
dec
andb
out
loopne
inc
in
cmp
divb
sub
cltd
jecxz
sti
mov
and
jbe
jno
cwtl
mov
cmp
cmp
push
push
mov
jmp
mov
mov
and
mov
inc
sub
xchg
cmpsl
xchg
outsl
and
push
push
adc
cmp
rcr
mov
cmpsl
pop
push
in
or
add
add
adc
mov
sbb
jp
jmp
pop
enter
cmc
adcb
xor
add
sarl
push
xchg
out
jmp
xor
lcall
push
idivl
lahf
popf
add
insb
push
cmpsl
in
sub
xor
pushl
inc
out
out
shr
push
jb
add
cmp
or
inc
sub
mov
jbe
or
out
int
mov
sub
lock
sub
dec
or
filds
pop
sbb
sti
fcompl
push
mov
add
je
add
push
popa
xor
mov
sarb
xor
stc
fsubrl
cld
out
pop
imul
les
ret
sbb
xor
adc
mov
imul
subb
imul
cmp
enter
pop
sarb
je
hlt
ret
sbb
xchg
jl
mov
std
push
sub
and
ljmp
scas
and
lock
push
pushf
test
xchg
push
sub
adc
ffree
sub
lds
pop
sbb
es
cmpsb
xchg
je
les
aas
jg
xchg
int3
decl
jmp
repnz
aad
mov
icebp
lcall
sub
sti
cmp
mov
jecxz
into
les
mov
cmp
hlt
cmpsb
add
popl
aad
dec
sbb
mov
mov
mov
movsl
xchg
dec
shl
daa
dec
jbe
mov
mov
ret
xor
mov
or
in
sti
into
dec
bound
and
xor
aaa
js
outsl
jle
subb
or
dec
stos
aam
xchg
mov
test
dec
in
lcall
mov
movsl
mov
cmp
sub
addr16
cld
sbb
xchg
sbb
pop
popa
xchg
pushf
jecxz
xchg
pushf
repnz
test
pop
adc
add
imul
or
out
hlt
aas
in
cli
xchg
rcrl
test
adc
addb
cmp
mov
xchg
loopne
add
inc
sub
add
data16
scas
jp
push
sti
movsl
ret
enter
ljmp
mov
inc
add
cli
cmpsl
mov
dec
sbb
stos
push
das
lret
aaa
pop
inc
movups
mov
adc
dec
out
aam
add
test
mov
inc
cmp
inc
test
dec
lock
xchg
jbe
jnp
inc
int
daa
daa
mov
and
cwtl
xor
aam
fimuls
insl
jge
lret
add
outsb
inc
stos
xchg
out
adc
inc
stos
lahf
pop
jno
cmp
lods
push
pop
movsl
pop
dec
and
dec
dec
outsl
jl
testb
jnp
inc
pushf
loope
jmp
jle
fldenv
mov
mov
lea
adc
jb
jae
popa
mov
add
push
rcrl
cld
test
cmp
dec
mov
adc
lods
cs
clc
mov
clc
int
cmpsl
xor
mov
or
loope
out
sub
push
shl
mov
arpl
jbe
cmpl
jl
cmp
cmpsb
nop
and
imul
adc
cmp
jge
lods
sbb
inc
rolb
ficompl
out
loop
jl
pop
lea
pushf
jns
cmp
cwtl
addr16
iret
and
mov
or
loop
das
insb
cmpsl
pop
or
bound
shrl
mov
ficoms
add
jp
mov
pop
sahf
or
insb
int
enter
inc
xlat
addr16
sbb
pop
mov
mov
gs
dec
mov
push
in
mov
adc
mov
add
mov
cltd
into
adc
sbb
call
push
sub
add
js
rcrl
lods
clc
inc
pop
mov
and
cs
pop
leave
iret
ljmp
or
add
loope
repz
aas
test
xorl
das
enter
test
jp
xlat
scas
mov
adc
mov
add
dec
xchg
sbb
inc
filds
pcmpgtb
adcl
ret
ss
ret
test
and
sub
jp
roll
lds
push
cmp
or
movsb
jno
shlb
test
push
cmpsb
and
enter
push
add
inc
mov
inc
in
out
scas
cmc
imul
cltd
and
aad
xchg
push
mov
in
xchg
push
dec
js
repnz
and
cwtl
into
sub
jns
repnz
mov
ja
pusha
sbb
and
cmp
inc
cs
dec
jl
in
and
pop
enter
xlat
pushf
mov
jb
inc
outsb
sbb
in
dec
add
mov
xchg
inc
mov
xor
lcall
notb
aaa
int3
push
jmp
inc
xchg
xchg
stos
ds
out
xchg
and
mov
push
xchg
add
cmp
mov
cmp
aad
push
ja
or
xchg
pop
sti
pop
mov
paddusw
iret
ret
out
push
iret
aas
jmp
or
out
adc
mov
add
aaa
cwtl
insb
les
fcoml
mov
es
outsl
loopne
lcall
outsl
inc
aam
push
jge
sub
inc
cmpb
in
fstpl
xchg
cmp
ficoms
loope
inc
or
and
sbb
xchg
push
xor
hlt
xchg
stc
jno
pop
dec
leave
cmpsb
test
inc
xchg
ljmp
and
or
pop
dec
jno
xor
or
cli
mov
sbb
cmp
dec
pushf
jle
or
push
test
rcrb
jno
inc
inc
mov
test
mov
subl
insb
cs
cltd
fistps
sub
xor
push
xchg
mov
xorl
dec
cmpsb
sub
xor
data16
inc
movsb
push
dec
fmull
dec
add
in
in
mov
cmpl
mov
add
fsubs
sbb
add
jae
sub
sbb
es
aad
cmp
aas
js
out
lds
lock
fwait
mov
mov
add
xor
cltd
add
mov
sub
adc
insb
pminsw
testb
cli
ror
lds
lods
push
push
test
int
sarl
pop
fidivl
sbb
fadds
bound
int3
into
jo
jbe
cmp
push
sbb
jne,pt
cmpb
jl
cs
popf
xchg
dec
and
addl
jne
adc
popa
mov
xchg
mov
xor
js
xor
insb
jge
adc
pop
mov
notl
insb
daa
ret
mov
dec
push
sbbl
mov
clc
jnp
push
pop
sahf
mov
leave
add
nop
jae
add
movsb
adc
dec
movsb
daa
ss
sbb
incl
fstps
mov
inc
push
jle
push
rcrl
fsubrs
stos
cmp
std
jl
lret
pop
push
cltd
divb
xor
mov
jne
dec
hlt
fsubl
pop
ja
or
xchg
nop
ret
fiadds
es
jp
adc
das
jecxz
arpl
sbb
and
filds
test
imul
mov
sub
rcll
and
push
icebp
daa
shlb
mov
cmpsb
mov
lret
mov
push
sub
xchg
and
daa
shrl
testb
arpl
cmc
push
xor
cmpsl
dec
imul
xchg
ret
and
adc
andl
pop
aam
clc
sub
aam
inc
adc
or
dec
lret
test
jg
push
and
mov
test
push
jecxz
and
push
and
les
push
jecxz
mov
adc
xchg
mov
lock
and
cltd
out
push
out
adc
mov
sbb
xchg
fdivl
rclb
push
scas
arpl
dec
jecxz
lds
insb
dec
nop
sub
xchg
dec
push
inc
insb
jae,pt
out
aam
test
sub
fs
andb
mov
jnp
mul
fcoml
dec
sbb
out
fs
inc
lcall
xchg
mov
jbe
test
gs
test
insl
pop
push
scas
fsubrl
sbb
push
cmp
in
aam
add
psubsw
add
orb
cld
aaa
pop
stc
push
sbb
xor
sub
dec
mov
sbb
nop
roll
sub
sub
lcall
inc
mov
out
push
aam
popl
lret
std
adc
ficomps
in
mov
imul
prefetchw
or
jns
addl
adc
test
das
js
sub
lret
pop
xchg
inc
rcr
add
fidivrl
pushw
xchg
je
je
jb
sbb
enter
fs
cmpsl
mov
loopne
xor
push
mov
clc
cli
pusha
jbe
push
adc
mov
icebp
sbb
mov
loope
out
clc
xchg
div
pop
inc
shlb
mov
popf
aaa
mov
test
repz
jp
push
xchg
jg
fnstcw
aas
push
xor
sub
cmpsb
and
mov
push
adc
push
mov
lds
lcall
lods
push
fcoms
icebp
and
loopne
fsubp
stos
sar
scas
sub
mov
cmp
pushf
hlt
shll
jmp
clc
sub
and
pop
aad
gs
test
fildl
jb
test
push
adc
dec
fldt
xchg
arpl
and
lock
cwtl
add
cmp
scas
sub
mov
adc
sbb
in
dec
mul
push
mov
sub
inc
pop
cld
neg
mov
mov
sub
in
gs
sti
ljmp
sbb
pop
notb
xor
sub
jg
popa
inc
pop
adc
mov
ljmp
jnp
jae
test
aaa
jmp
divb
insl
stc
push
inc
jb
and
cmp
sub
adc
test
mov
in
push
test
mov
mov
lods
jo
mov
push
outsl
outsl
fcmovnu
and
imul
mov
pop
pop
gs
jnp
loop
les
shlb
dec
adc
lds
lea
js
mull
push
lods
mov
and
mov
lcall
xchg
jb
push
xlat
push
inc
lcall
shll
jmp
sarl
lret
xor
xor
sbb
fisttpl
inc
ja
mov
insb
stos
test
shrb
dec
jle
repnz
repnz
sub
int
fwait
jl
cltd
filds
xor
out
test
pop
ret
loopne
push
mov
int
mov
aam
add
jl
or
dec
jbe
fadds
iret
shlb
out
imul
scas
inc
mov
fdivs
mulb
cwtl
aam
mov
jnp
jmp
mov
js
cmp
lods
cmpsb
cmp
ret
mov
jl
inc
mov
cmp
movsb
and
lods
fdivrl
pop
sbb
std
add
and
aaa
mov
push
cmp
insb
scas
pop
lds
xlat
sbbl
shr
stc
or
cli
out
in
mov
push
es
xchg
ss
inc
jno
cmp
loopne
mov
push
sbb
jmp
xor
mov
and
addr16
loopne
xchg
xchg
push
mov
sbb
cmp
negb
mov
adc
or
mov
in
pop
cmpsb
cli
xor
add
pop
stos
clc
inc
mov
sar
mov
outsl
or
mov
dec
pop
scas
inc
dec
pop
sbb
adc
cld
dec
inc
test
ds
xchg
pop
ja
lret
sti
cli
es
not
cld
cmpsl
lds
jne
jo
mov
xsaves
or
mov
inc
jecxz
ret
negl
outsb
mov
sbb
movsb
sahf
pop
pop
cmc
mov
sti
jno
subb
rcll
adc
mov
scas
mov
mov
jp
xchg
imul
sbb
cmp
push
pop
push
and
jno
addl
dec
mov
push
adc
sub
mov
inc
bound
flds
and
push
xor
push
dec
clc
jmp
fwait
inc
and
mov
or
xchg
pusha
je
jg
enter
adc
xchg
loop
in
adc
mov
icebp
ret
jns
sbb
jecxz
adc
lret
test
mov
sbb
and
mov
je
mov
js
xchg
jns
jmp
lods
xlat
mov
jg
repz
or
mov
xlat
aaa
xchg
add
pop
rcr
sbb
daa
push
mov
fwait
arpl
stc
das
gs
mov
lret
and
sahf
add
inc
mov
js
repz
mov
xlat
call
jle
test
shll
loop
sub
lret
fs
pop
pop
cmpsb
mov
loope
jno
dec
jecxz
imulb
xchg
mov
xchg
xor
pop
loope
je
sub
inc
inc
fs
insl
clc
fsubrs
test
stos
packsswb
xchg
mov
adc
subb
or
jns
popa
adc
ret
mov
xchg
pop
outsb
mov
out
or
out
cltd
ss
dec
cwtl
fstl
and
idivl
movsb
cmpl
leave
aas
sbb
test
bound
scas
dec
inc
imul
movsb
fiadds
adc
clc
cmp
cmp
gs
sbbl
mov
or
sub
fwait
bound
push
xchg
xlat
jg
adc
xor
add
mov
pop
jge
xor
dec
dec
dec
pusha
mov
cvtsd2ss
inc
cmpsl
push
repnz
shlb
sub
lcall
pusha
mov
je
and
mov
and
dec
dec
dec
in
iret
mov
pop
jge
scas
dec
cli
mov
mov
and
shlb
movsb
loope
outsl
ret
mov
cwtl
add
jle
das
cmpsl
mov
adc
push
xlat
cli
xchg
mov
pop
loop
dec
repz
xchg
jecxz
sbb
std
scas
aaa
sbb
repnz
inc
xlat
adc
rdtsc
push
in
fs
mov
loop
push
pop
lock
jnp
or
enter
add
xor
mov
arpl
in
cmp
inc
cmp
jo
inc
cmovno
and
in
scas
lahf
loope
fwait
mov
jp
add
nop
pop
xor
test
mov
movsl
mov
inc
dec
pop
adc
lods
push
rcrb
push
ja
stos
xor
out
outsl
push
xchg
inc
dec
aaa
push
rol
je
mov
test
in
js
leave
add
hlt
les
ret
cli
jo
push
xchg
addr16
sti
mov
leave
fisttpll
push
je
loopne
jo
adc
shr
sub
aam
fs
push
jl
dec
cmp
ss
in
dec
js
les
mov
inc
in
iret
nop
and
test
leave
xchg
mov
in
iret
jmp
mov
pop
mov
mov
js
test
fistps
jecxz
and
pop
push
pop
scas
sub
fsubrs
sbb
adc
iret
sub
cmp
push
sub
jmp
imul
push
xor
sbb
ret
sbb
sti
stos
jg
jne
std
mov
icebp
mov
out
lret
and
adc
sub
and
xor
out
jb
xor
in
inc
arpl
insl
jl
ss
mov
lods
ja
cld
pop
sahf
inc
sbb
pop
xor
sti
push
and
enter
cld
pop
mov
cmpsl
pusha
lret
inc
ds
pop
cld
movsl
mov
idivb
dec
out
jo
xchg
ret
fsts
cmpsl
scas
pop
add
imul
outsl
inc
xchg
xorl
movsb
jae
shll
cmpl
cbtw
in
scas
sub
sbb
cmp
stos
insl
aam
sub
xchg
fiaddl
adc
das
push
aad
scas
xchg
ja
pop
mov
sub
into
inc
test
xchg
xchg
push
rolb
mov
xlat
ficomps
mov
or
loope
mov
mov
mov
add
jge
push
out
scas
cmp
sbb
xlat
in
sub
xchg
inc
aam
dec
xor
test
jge
shlb
lods
aas
or
push
xchg
cmp
addr16
jg
or
mov
sub
pop
inc
enter
mov
lret
sub
jbe
cli
sbb
cmc
test
and
or
sub
jo
loopne
mov
fsubrs
mov
sti
fmull
dec
add
sbb
iret
dec
jle
sub
nop
call
ja
or
out
das
mov
cld
mov
repnz
pop
sub
loop
mov
fistl
push
push
adc
xor
clc
gs
lock
mov
subb
scas
mov
cmp
call
or
dec
lods
ror
addr16
insb
mov
insb
cmp
xchg
out
sub
sub
ljmp
sub
pop
sbb
pop
loope
dec
mov
mov
das
or
pusha
adc
xor
dec
ds
mov
mov
jmp
pop
xchg
pop
or
cld
or
jae
cli
lcall
sbb
cmpb
clc
dec
pushl
movsb
ja
fdivl
pop
jmp
sub
adc
sub
cmpsb
out
jl
mov
push
dec
adc
in
lock
and
mov
fbstp
jle
popa
int
pop
int3
mov
cmovl
dec
mov
adc
mov
ljmp
sub
fwait
mov
ds
pop
mov
dec
fs
xor
cmp
lcall
rolb
call
or
add
lods
popf
loopne
or
lods
jns
mov
xchg
sar
inc
nop
sub
jno
sbb
mov
inc
popa
dec
icebp
std
xchg
fwait
repz
test
inc
test
repnz
cmp
enter
add
hlt
mov
js
push
pop
xchg
cmp
loope
fdivrs
mov
sbb
or
std
data16
inc
dec
into
push
mov
mov
and
mov
jmp
das
shrb
ljmp
pop
insb
aas
xlat
idiv
aaa
neg
dec
es
movsb
cmp
pop
pop
mov
scas
pop
push
and
pop
mov
fbld
push
inc
push
idivb
mov
sub
add
inc
and
int3
and
dec
in
lea
jne
nop
mov
lods
out
dec
shll
loop
loopne
aas
div
push
sti
js
imul
mov
or
inc
push
or
inc
rclb
mov
subl
mov
sub
add
inc
pusha
sbb
inc
or
scas
push
pusha
loopne
xchg
adc
fnclex
sub
xchg
xor
lcall
push
hlt
jmp
and
cld
loop
add
jp
push
inc
test
lret
mov
push
jnp
xor
std
pop
in
jno
sti
cmpsl
cmpsb
add
xorb
test
or
movsl
xor
imul
mov
and
test
in
lods
dec
ret
pushf
pop
fstpt
mov
iret
in
pop
add
subb
negl
mov
jmp
ror
jbe
lahf
js
mov
mov
jp
int3
clc
roll
jb
out
int
btc
scas
insb
and
xor
repnz
movsl
adc
cmpsl
out
gs
dec
stc
cmpsb
push
xor
stc
mov
ret
out
mov
mov
popf
sub
dec
sahf
cmp
call
or
push
xor
rcrb
pop
add
xor
push
add
xor
movsl
mov
jne
imul
adc
sarl
and
enter
and
fadd
stos
ljmp
pop
mov
nop
xchg
lret
in
repnz
push
jg
push
or
insb
or
sub
xchg
jmp
xchg
dec
add
cmc
shl
push
inc
fldcw
sbb
mov
xchg
or
cmp
cmp
ja
xchg
mov
add
cmpsb
push
imul
mov
faddl
and
lea
dec
pop
push
aad
dec
cmpsb
popa
lret
sub
int
jge
gs
or
pop
pop
aas
pop
dec
adc
jle
mov
mov
fisttpl
and
mov
or
push
pop
ds
cs
lea
or
adc
pop
pop
out
loopne
pop
adc
mov
fists
add
and
mov
lea
arpl
js
jg
cmpsb
sti
leave
xchg
push
mov
pop
cmp
lods
pop
sub
pushf
into
lods
and
movsl
mov
inc
lods
dec
jle
mov
loop
in
lret
push
hlt
cli
pop
mov
out
std
lret
xor
fildl
push
xor
xor
push
pop
xor
in
jbe
mov
scas
inc
push
cltd
mov
push
pop
enter
cmp
push
loope
inc
test
pushf
cwtl
dec
inc
hlt
popa
or
mov
jnp
cwtl
cld
pop
rclb
sub
cmpl
inc
xor
sbb
sbbl
es
sbb
jl
int3
push
arpl
pushl
ret
pushf
test
in
fnsave
sub
negl
js
adc
jle
lret
xor
clc
mov
xor
fldcw
popf
add
sbb
adc
inc
xorb
std
int
sub
sbb
mov
jecxz
jae
inc
cwtl
or
or
inc
icebp
push
mov
adc
lahf
aas
shr
mov
add
xchg
pop
inc
adc
adc
fsubs
rcrb
notl
aad
and
xorb
popf
enter
mov
dec
push
in
and
xchg
bound
mov
loopne
dec
aam
imul
movsb
testb
mov
add
inc
adc
and
movsl
test
enter
mov
daa
imul
repnz
movsb
insb
dec
sbb
push
aam
xchg
pop
scas
aas
cltd
sub
fcompl
and
shl
fcmovbe
outsl
rcrl
mov
add
js
sbb
pop
call
lods
mov
fistpl
mov
adcl
pushf
dec
shll
adc
dec
aaa
aad
in
shl
xchg
stc
iret
mov
lock
lock
mov
inc
out
mov
sarl
lods
add
aaa
adcl
lds
out
cmp
push
imul
int3
xchg
mov
mov
int3
add
int3
cli
dec
push
xchg
xor
inc
jbe
dec
xor
mov
jmp
inc
in
xor
rorl
repnz
sub
dec
push
aaa
jbe
ljmp
push
xchg
ret
div
jnp
pop
fld1
dec
insl
cli
inc
pop
pop
inc
xchg
scas
aas
lret
mov
mov
dec
mov
or
subl
ds
pop
sub
xor
std
push
inc
mov
mov
pop
scas
mov
andb
stc
mov
sub
loop
xor
xchg
clc
jno
push
dec
sub
mov
cmp
cld
jns
push
xchg
jg
dec
into
or
pop
clc
fdivrl
insl
nop
dec
mov
and
loop
mov
xchg
cmp
and
scas
neg
sbb
inc
loopne
popf
lret
cmp
jle
mov
insl
fldt
imul
lods
jae
xor
sbb
and
fistps
imul
pop
sub
dec
outsb
adc
pop
or
roll
mov
sub
hlt
mov
and
cs
mov
mov
sbb
and
push
test
ret
inc
aas
add
pop
xchg
insb
jne
pop
mov
add
cmp
mov
lds
stc
pop
int
insb
push
js
xor
push
dec
xchg
mov
ds
subl
xchg
fldcw
lahf
pop
cmpsb
mov
std
pop
cwtl
jo
cmp
faddl
and
aam
push
mov
bound
icebp
js
adc
cmp
invd
xlat
pop
xor
mov
mov
ljmp
psrlq
lret
fdivrs
dec
les
mov
in
and
sbb
dec
push
cmpsb
int
jmp
imul
cmp
enter
mov
icebp
sbb
pusha
scas
in
iret
sub
lods
jno
pop
push
and
cmp
pop
ret
idivb
sbb
pushl
test
xchg
in
popa
pop
es
sub
dec
sbb
mov
mov
adcb
xchg
sbb
mov
insb
movsb
hlt
mov
jg
shrb
pop
ss
mov
mov
mov
cmpsb
push
sbb
adc
lods
jae
xchg
call
dec
ja
dec
cmpsl
nop
xor
push
jnp
dec
outsb
or
mov
stos
mov
cmp
shufps
cld
jg
cmc
pop
mov
scas
dec
ds
insb
pop
mov
aas
out
ret
sbb
cmp
icebp
mov
push
mov
scas
xchg
lahf
test
lds
loopne,pn
xor
les
bound
jae
sahf
imul
inc
incb
xchg
cmp
out
mov
push
mov
sbb
stos
sub
xor
lret
out
mov
popf
or
bound
dec
and
int
sbb
jle
xchg
gs
popa
lcall
stos
xchg
dec
rol
ds
sub
xchg
jge
pushf
xor
mov
mov
or
push
ds
jns
fimull
mov
std
icebp
loop
mov
iret
pusha
pop
or
or
sub
jnp
mov
fcmove
lods
ljmp
mov
insl
adc
xchg
js
xlat
xchg
dec
lahf
sub
mov
cltd
notl
jge
mov
xchg
outsb
outsb
mov
movsb
lahf
movsb
xchg
xor
sub
mov
jo
insl
or
test
in
mov
leave
pop
stos
out
inc
aam
das
mov
dec
out
out
subb
add
das
lret
rcr
lret
decb
mov
jp
sbb
loope
xchg
lds
in
xor
fisubs
shrl
xchg
push
xchg
sbb
or
pushf
push
add
sub
mov
xorb
adc
cmp
movsb
xchg
in
loope
pop
fnstcw
push
addl
and
sbb
mov
std
es
out
test
rolb
jbe
daa
jns
sbb
dec
mov
jnp
jl
mov
popa
add
dec
scas
lcall
ds
mov
icebp
addl
in
sbb
sbb
jle
je
addr16
nop
adc
out
movsl
out
sub
data16
ljmp
xlat
mov
or
aam
cmp
and
dec
or
push
jp
orb
sbbb
add
inc
dec
jb
pop
mov
mov
sti
shl
mov
dec
mov
les
dec
les
aas
loop
das
addb
sub
ss
push
push
fiadds
mov
in
push
sub
test
cmpl
jae
jl
sbb
cmp
fldenv
mov
icebp
test
inc
sahf
sbb
push
jns
sub
shll
mov
jl
fwait
xchg
movsl
dec
jg
insl
cmpl
ror
jge
cmpsl
out
jb
xlat
adcl
ljmp
and
xchg
add
lcall
mov
sub
test
xchg
pop
fstpl
mov
sub
pop
dec
add
aaa
lods
push
aas
lcall
cwtl
inc
push
pop
lret
movb
pusha
clc
mov
jge
rolb
mov
negl
add
ret
xor
jbe
int
xchg
push
data16
dec
ss
loopne
aaa
mov
or
std
pop
es
stc
xchg
cmp
sub
xchg
mov
push
jmp
dec
je
dec
lock
inc
lret
js
mov
jp
or
enter
pop
je
sarl
jl
sub
fisttpll
fmull
lock
push
pop
test
xorb
sub
pop
jp
push
lods
inc
xor
andb
adc
lcall
sbbb
pusha
push
sbb
inc
add
jbe
nop
mov
xchg
in
add
xchg
out
enter
dec
mov
add
push
and
inc
daa
out
hlt
pushf
stos
imul
adc
cmp
jno
xor
jl
push
jae
adc
or
aad
fsub
sub
push
mov
fsubrl
outsl
aam
leave
popa
pushf
movsb
mov
pop
mov
push
loope
jns
out
xor
xchg
cmp
adc
negl
pop
inc
lret
jg
ss
sbbb
insl
pop
lcall
pushf
or
jne
insl
repz
sub
stos
sti
mov
pop
sbb
fistl
mov
push
jg
mov
and
fbld
cmp
repz
xchg
push
loope
fwait
mov
imul
pop
mov
mov
aam
pop
cld
mov
inc
in
mov
xchg
dec
sbb
lahf
into
aam
cmp
cli
mov
mov
add
ja
push
mov
jne
dec
rorl
add
ficompl
mov
add
scas
int
lahf
mov
sub
lret
adc
scas
movsl
rclb
scas
test
pop
dec
mov
jle
xor
mov
add
mov
pop
pop
xor
shll
mov
outsb
bound
pusha
outsl
pop
outsb
fs
aaa
addb
aam
fisttps
pop
mov
pusha
shr
movsl
xchg
in
mov
pop
imul
out
adc
xor
xchg
mov
ljmp
nop
pop
gs
pop
pop
cmp
xor
out
test
repz
fldl
lahf
xor
sbb
dec
xor
sub
adc
mov
inc
test
push
xor
mov
div
mov
aas
into
mov
mov
pop
loope
jp
loopne
out
sub
fs
or
pop
mov
shrb
and
dec
mull
lret
fs
push
sub
hlt
je
mov
fs
or
rorb
fiaddl
cmp
sub
loop
add
popa
shll
pop
pop
inc
lock
and
add
icebp
call
cmc
bound
shrb
push
mov
movsb
jnp
jl
pop
sub
in
inc
xchg
xchg
pop
testb
and
int3
lock
cmp
test
js
int3
xchg
mov
mov
jnp
xchg
in
pop
insl
sub
mov
xchg
mov
icebp
test
stos
lret
aas
pushf
dec
icebp
and
jecxz
int3
test
das
lock
pusha
mov
or
mov
mov
jl
in
fnsave
mov
aaa
xchg
imul
mov
pop
xchg
jecxz
rcrb
xchg
inc
fistl
jns
sbb
int
pop
adc
out
rorb
jo
icebp
pop
add
cmp
cmp
push
or
cmp
mov
and
pushf
push
sti
inc
cmp
rorl
sbb
ds
jne
pop
add
fwait
into
inc
insb
dec
and
mov
jl
sbb
subb
test
insb
xchg
jb
mov
mov
in
push
rcll
mov
pusha
cmp
inc
pop
js
xlat
imulb
mov
filds
pop
in
fiadds
les
cmp
aam
inc
adc
push
jno
push
int
sub
in
mov
gs
mov
mov
out
cmp
repnz
mov
insb
mov
mov
mov
pop
aam
fdivs
iret
sub
jae
xchg
add
jns
call
repz
mov
rcr
dec
lret
adc
pop
and
cmp
in
sarb
pop
adc
xchg
mov
and
clc
scas
pop
bound
mov
imull
jno
shlb
das
mov
mov
sbb
in
inc
repz
aas
mov
pop
sbb
out
daa
sub
inc
xor
jnp
xchg
in
mov
mov
mov
cld
jb
enter
aas
sti
pop
stos
mov
xchg
daa
dec
dec
mov
or
das
pop
push
mov
or
or
mov
rcrl
push
and
inc
insl
sbb
fisttps
or
mov
cld
mov
jno
aas
mov
fwait
adc
inc
and
cmp
xchg
mov
std
arpl
push
inc
mov
imul
je
ljmp
fidivl
sti
das
xchg
ljmp
jle
push
push
fmuls
fucom
rcll
js
mov
popl
fisttpll
mov
pop
xchg
sub
and
cmp
sbb
js
cli
ja
scas
fcmovnu
in
rorl
lret
mov
push
pop
fldenv
hlt
shrb
inc
data16
inc
push
jge
fs
inc
lea
xor
aaa
mov
xchg
pop
rorb
iret
add
mov
inc
sarb
mov
stos
xchg
scas
out
xchg
sub
mov
jnp
add
xchg
aad
push
dec
notl
shrb
xlat
ss
pushf
add
imul
push
and
int3
lcall
cwtl
je
add
jbe
inc
lods
jl
loope
adcb
cltd
jae
fsubrs
clc
xorl
or
int3
mov
or
jmp
inc
dec
in
mov
je
adc
rorl
mov
push
sub
popa
inc
lcall
mov
in
push
adc
pop
movsl
pop
rcll
in
adc
stos
adcl
lds
cmp
dec
cmp
in
push
sbb
push
lahf
adc
jle
cmpsl
push
test
sbb
movsl
lods
andl
insl
repz
shll
sub
aaa
negl
scas
dec
stos
mov
cmpsl
jl
popf
sbb
cmp
push
ds
stos
mov
insb
cmpsb
jne
mov
imul
outsl
icebp
clc
pop
jecxz
mov
outsb
and
movsb
fidivl
xor
sub
test
dec
mov
lods
mov
into
or
insb
std
mov
sbb
sub
add
jle
pusha
dec
aam
sub
test
pop
or
inc
out
cmc
dec
fisubrl
and
mov
aad
rorb
inc
jmp
rcrb
aaa
aad
adc
ret
mov
sbb
sbb
pop
fisttpl
ja,pt
push
add
in
sbb
fildl
int3
jmp
adc
sub
rcr
mov
dec
mulb
out
and
cwtl
sbb
int3
jns
pop
push
pusha
test
imul
iret
cmpsl
cld
adc
add
or
and
into
rclb
lods
sub
jp
pop
mov
push
ja
clc
xchg
fcomps
inc
push
into
lods
xor
sbbb
pop
arpl
adc
cmp
pop
je
mov
inc
jg
call
mov
rclb
dec
ljmp
and
push
jno
sub
call
xchg
in
inc
lcall
cmp
jecxz
adc
sub
sbb
xor
or
mov
or
scas
loope
stos
sub
in
pop
loope
mov
add
mov
fs
repnz
mov
repz
xor
loopne
insl
push
jle
cmp
cmp
adc
inc
sarb
push
jecxz
into
fistpl
pop
enter
loope
inc
adc
or
movsb
jl
decb
jno
jle
xor
mov
xchg
loope
jge
or
sbb
pushf
sbb
xchg
xlat
mov
push
dec
xchg
dec
repnz
mov
lcall
dec
cmp
shrb
push
xchg
mov
pop
outsb
fs
cwtl
icebp
sub
fildl
xor
out
shrl
gs
sbb
loop
inc
xor
add
push
pop
cs
mov
add
mov
jmp
lock
mov
lcall
jo
lret
sbb
jno
out
sahf
sub
jg
adc
pop
and
shll
and
pusha
jecxz
dec
push
lds
sahf
scas
xor
ret
jbe
adc
dec
fildll
push
fstl
scas
fsubrl
and
aaa
leave
test
cltd
sub
pandn
test
mov
stc
fildl
jb
push
inc
jb
sub
sarb
dec
mov
loopne
fsubs
sbb
ja
mov
mov
mov
cmp
pop
hlt
loopne
pop
mov
cmp
cltd
adc
lock
jnp
or
ds
sub
sbb
xchg
add
std
mov
pop
adc
sub
xlat
lret
pop
mov
fwait
push
pushl
test
add
mov
fcomip
cmp
mov
out
test
repz
mov
jbe
jnp
add
inc
jge
pop
or
popa
xor
data16
insb
lds
rcrl
lods
pop
sbb
lahf
add
js
mov
lods
das
push
jbe
push
hlt
cmp
xorps
pop
in
ret
pop
mov
add
jo
nop
sbbb
lods
add
or
jge
ds
and
and
mov
andl
adc
adc
lahf
push
imul
aaa
nop
add
imul
mov
bound
add
int
dec
mov
pop
test
jne
fcoms
bound
testb
aaa
roll
dec
cwtl
or
popf
or
lret
inc
in
pop
push
mov
pop
and
fisubs
pop
shrb
sahf
pop
xor
enter
test
shrb
repz
or
cmp
pop
xchg
inc
sbb
pop
jno
add
sbb
inc
scas
lahf
dec
mov
into
cmpl
push
pop
jecxz
or
ret
or
out
jmp
or
cmp
lret
aad
push
push
pop
cwtl
lret
cmpsl
ret
fcmovnb
cmpsb
inc
lret
pushf
xchg
jb,pt
cmpsb
mov
insb
add
cmp
sbb
xor
pop
les
jge
sub
cmpsb
and
pop
movsb
aam
dec
cmpsb
cmpsl
lds
xlat
lds
inc
mov
in
xor
lahf
outsl
xchg
mov
mov
pop
out
xor
mov
les
push
adc
inc
push
sub
std
xchg
xchg
mov
cli
cmp
inc
dec
aad
jge
inc
pop
cmp
xlat
sbb
jnp
jg
jo
push
jne
pop
sbb
scas
jnp
loope
clc
jo
mov
inc
cli
decb
sbb
mov
jbe
push
call
or
in
fisubrl
daa
mul
mov
jmp
fistpl
push
inc
cmp
adc
jns
shlb
pop
dec
mov
inc
jae
fsubs
sti
mov
sub
out
push
xor
inc
mov
bnd
cmp
push
aas
aam
sbbb
scas
mov
cmpsb
push
and
fucomip
push
mov
sub
popa
iret
insl
ljmp
rcrb
or
cmp
adc
std
movsb
dec
mov
push
out
pusha
repnz
pop
out
pop
cmp
dec
aas
jns
ret
lret
int3
adcb
sub
dec
push
push
mov
aam
add
out
xor
std
xchg
mov
scas
fdiv
inc
out
aaa
jae
mov
outsb
and
in
in
sub
addl
sahf
xor
addr16
test
fwait
sbb
das
adc
loopne
adc
in
sub
sbb
outsl
cmp
orl
and
lea
in
lods
insl
out
mov
pop
popaw
mov
ret
xchg
mov
fisttpll
fstpt
sub
dec
push
out
movsbl
inc
imul
pushf
jno
fcoms
lods
push
jg
mov
cli
test
jmp
jge
lea
std
aad
dec
loope
dec
mov
inc
cmp
adc
adc
xchg
jb
push
adcl
int3
out
and
enter
shll
ss
hlt
xlat
shr
add
aaa
xchg
jb
sbb
fmulp
xchg
aam
mov
xchg
dec
xor
add
jnp
out
and
mov
ds
int3
lret
push
pop
outsl
pop
imull
int
inc
fadd
je
xchg
mov
xchg
cli
subb
xor
jecxz
jmp
dec
inc
lcall
fisubs
xor
adc
mov
jmp
outsb
loope
or
mov
or
jmp
movsl
cli
or
adc
pop
mov
pop
movsl
mov
out
jb
fisttps
adcb
sub
mov
sub
xchg
jno
test
inc
or
in
xor
pop
pop
mov
je
jmp
and
bound
xchg
lock
and
cmc
bswap
cmpsl
or
fistpll
pop
ss
cs
dec
jg
int3
pop
scas
mov
hlt
jmp
in
push
js
push
lret
fsts
push
lds
jecxz
lock
mov
fnstcw
sub
lret
stc
mov
movsb
insl
mov
jge
jae
xchg
jno
stos
jg
jmp
in
fidivl
cs
mov
sbb
sub
lods
jne
add
pop
sbb
ljmp
mov
repnz
push
out
jnp
xlat
pop
push
cmp
mov
in
sbb
xor
clc
imul
loopne
xchg
jp
sub
sti
cltd
sub
outsl
stos
repz
repz
sub
push
push
ljmp
add
push
jo
and
andb
sub
inc
mov
dec
hlt
ds
mov
enter
rcll
aas
or
in
push
mov
mov
out
jg
stos
pop
ljmp
into
std
rcrl
sbb
jg
ds
push
lds
jo
rcrb
clc
aas
add
insl
mov
enter
or
lods
sub
lea
pop
jg
add
nop
lea
rcll
imulb
repz
and
sub
lea
xchg
add
stos
orl
mov
adc
sbb
push
gs
pop
aam
out
js
test
mov
stos
jns
hlt
xor
cmc
adc
mov
rcr
fnstcw
and
adc
jns
xchg
mov
ret
lea
and
and
popf
mov
sub
lds
pop
xor
xchg
sarl
and
rcrl
lret
addr16
in
push
xchg
stc
lock
sub
mov
mov
or
mov
push
mov
mov
jp
mov
les
imul
notl
ja
jno
mov
mov
pop
inc
sbb
nop
pop
sub
nop
jbe
call
jl
mov
or
mov
add
andl
or
inc
fwait
cmpsb
mov
sub
ficomps
test
and
mov
xor
jg
pop
sbb
in
out
addb
mov
push
aas
mov
popa
jo
call
les
adc
sbbl
jne
cmp
pop
mulb
movsl
xlat
sbb
sub
jne
inc
xlat
rorb
pushl
pop
loop
cmp
sub
pusha
aam
xchg
jge
lahf
in
out
dec
push
std
push
lret
push
scas
popa
mov
or
or
cmp
xor
xor
add
pop
popl
insb
and
push
dec
int3
sbb
sbb
dec
stc
xchg
add
xlat
add
sarb
dec
mov
call
std
push
xor
pop
cli
add
or
xor
lods
in
test
out
push
clc
call
out
jecxz
xchg
push
nop
iret
js
ljmp
sub
mov
dec
sub
stc
add
das
test
fadd
in
jnp
ljmp
pop
jmp
in
adc
push
shrb
leave
iret
adc
pop
cmp
pop
push
jns
outsb
daa
push
cmc
adc
aad
ret
or
popf
cmc
cmp
lods
jns
sahf
xchg
xchg
nop
cld
jecxz
dec
push
data16
or
jno
inc
add
rcl
lahf
and
push
adc
lds
outsb
xchg
mov
dec
jb
insl
rcrb
int3
aad
rolb
stos
inc
adc
jl
in
xchg
or
leave
pop
jge
jp
repnz
mov
aaa
or
dec
add
fisubrl
xorb
push
addr16
lret
jb
cltd
inc
in
push
mov
sub
sub
push
les
mov
mov
inc
dec
in
fcomip
push
shrl
ss
fldenv
lahf
jp
jmp
lods
sbb
push
fcmovne
cmp
ficoms
test
cltd
es
or
mov
dec
negl
popa
xor
in
cmp
inc
icebp
jne
cltd
test
add
add
push
jge
add
out
sahf
fwait
mov
aaa
sub
fsts
ror
mov
clc
inc
idivl
jnp
cmpl
dec
inc
push
mov
adc
sar
jns
pop
mov
lods
lret
xor
pop
aad
mov
dec
sbb
pop
cmp
mov
sbb
add
xchg
pop
loop
and
inc
mov
xor
jmp
mov
push
jnp
sbb
test
and
push
push
in
mov
arpl
mov
pushf
call
nop
pop
mov
ret
sub
jp
jnp
cmpsb
xchg
lahf
mov
xor
mov
mov
pop
mov
push
xor
stc
inc
pop
lcall
jne
inc
and
daa
and
add
das
pop
ret
mov
fdivrl
fidivl
xchg
das
outsl
repz
xchg
das
xlat
jb
clc
push
push
xchg
mov
inc
push
add
jecxz
popf
jno
inc
dec
mov
mov
and
js
movsb
and
loop
inc
out
dec
xchg
jl
push
pop
inc
sbb
xchg
mov
cmc
sarl
gs
adc
mov
dec
fcomps
jp
push
imul
mov
and
jae
dec
addl
icebp
sbb
inc
mov
sub
out
lods
push
cmpsb
outsb
scas
mov
jb
dec
pop
shll
rcrb
pop
and
mov
jg
push
xor
xchg
scas
in
mov
sahf
xor
call
mov
jae
imul
push
pop
add
mov
add
xor
fdivrs
fsubp
dec
outsl
loop
xchg
fldcw
pop
lock
sahf
sub
ja
push
orl
daa
inc
call
mov
in
inc
shll
stc
or
push
jg
sub
inc
push
and
add
inc
leave
je
jle
pusha
fcomps
push
add
pop
adc
hlt
dec
adc
add
mov
or
push
int
xor
std
xor
icebp
rcll
dec
and
lcall
ljmp
inc
sahf
incb
aad
insl
popf
mov
fsubl
and
test
mov
pushf
lahf
xor
in
jb
adc
sbb
pushf
repnz
je
mov
je
ror
xor
jbe
out
test
out
add
xlat
push
cwtl
js
stos
pushf
mov
inc
in
bound
cmp
cmp
xchg
fcmovnb
dec
out
test
adc
scas
jmp
xchg
out
and
icebp
pop
lods
fcoml
repz
enter
xor
jle
sub
sti
lret
cld
jns
call
xor
inc
aas
cs
and
add
scas
xchg
jl
nop
xlat
xor
ret
fwait
mov
sbb
mov
cltd
or
outsb
pusha
add
or
xchg
adcb
mov
jae
sub
cmp
sub
dec
fnstsw
aaa
mov
pusha
icebp
mov
or
lods
inc
sbb
xchg
push
sbb
stos
popa
frstor
push
ds
jge
dec
sub
jp
cmpsl
pop
std
push
mov
push
mov
aad
flds
clc
movsb
rol
orb
sbb
pusha
lret
xor
pop
nop
cmpsl
adc
nop
adc
jp
push
in
cmpsl
aam
stos
fucom
loop
imull
xlat
xchg
mov
mov
jecxz
sarb
cmp
mov
pushf
call
stc
fisttpl
pop
inc
adc
cmp
bswap
ret
test
add
cmp
leave
leave
mov
xchg
addl
loopne
stc
pop
leave
out
or
cmpsl
ffreep
pop
leave
pushf
cmpsb
cmp
lcall
mov
mov
push
test
rcrb
loopne
clc
out
in
scas
jp
adc
pop
push
mov
js
cltd
insl
jecxz
adc
sahf
push
push
xchg
jns
rol
push
lods
icebp
jne
pop
pop
xor
xchg
aad
push
in
mov
aaa
and
fdivrl
fcom
jmp
sti
and
xlat
out
loop
aas
pop
ljmp
or
push
nop
outsb
mov
adc
daa
jb
outsl
fdiv
push
stc
mov
add
pushf
fdivrs
xchg
fistpll
aaa
pop
mov
mov
push
fnstsw
in
add
mov
stos
push
test
int3
mov
cmpsl
cmp
sub
fwait
mov
mov
bound
push
xor
mov
adc
push
push
aad
shrb
xor
dec
xchg
inc
sahf
std
test
loopne
enter
push
mov
push
cmp
out
aas
dec
xchg
cmp
mov
into
jg
test
shlb
mov
xor
int3
out
cmp
dec
ljmp
pop
xor
subb
lahf
jmp
icebp
push
stc
xchg
cmp
pop
scas
lahf
pop
mov
dec
stos
sbb
jge
mov
dec
fdivl
mov
stc
pop
add
sub
pop
mov
or
out
lret
stc
lea
addr16
push
mov
lret
jno
xlat
jae
jl
addr16
les
cmp
scas
fxch
xor
push
pop
pop
mov
shrb
xor
cmovs
popa
or
rcr
add
loopne
mov
add
pop
inc
sbb
cmp
and
ja
jne
pop
out
imul
sbb
sub
xor
test
jle
out
imul
cmpsb
aaa
test
xchg
int3
out
fmul
push
cmp
subl
xlat
out
rorl
nop
insb
aas
cmpsb
xor
lods
inc
pop
add
push
xor
mov
push
clc
int3
sahf
jg
adc
mov
js
or
aas
in
aas
xor
rcrl
aad
pop
push
enter
mov
sbb
leave
aas
je
push
and
xchg
dec
popa
push
int3
lea
inc
popf
cltd
adc
nop
jmp
stos
push
jns,pt
cmp
xor
shll
push
outsl
scas
lea
ja
mov
mov
insb
push
or
dec
stos
into
shll
stos
mov
add
popf
nopl
stos
push
ss
adc
cli
in
jg
je
inc
jmp
test
loope
sbb
jg
in
cmp
out
mov
xchg
sahf
adc
xor
pop
sub
mov
push
stos
sbb
cli
cwtl
xor
aas
sub
andl
or
xor
push
mov
stos
mov
cmp
mov
repz
hlt
test
pusha
push
jb
icebp
arpl
cld
inc
push
nop
jmp
add
or
daa
jmp
stos
ds
jmp
xor
test
jno
ljmp
rorl
sbb
jne
push
test
sub
dec
add
rcrl
xlat
mov
add
roll
int
adc
xchg
xor
in
dec
pop
negb
add
xor
mov
fcmove
fisubrs
push
popf
iret
mov
cmp
scas
and
out
addr16
arpl
push
addr16
and
aad
lcall
xchg
pushf
pop
pop
into
shrl
aam
or
xor
sti
movb
xchg
fdivrp
cld
xor
cmc
pop
dec
inc
in
jnp
outsb
pop
xchg
mov
scas
inc
sbbb
or
ret
mov
jbe
mov
inc
inc
sub
mov
sub
inc
pop
ljmp
and
push
in
mov
out
outsb
sub
sbb
pop
ljmp
push
shrl
add
in
jbe
sub
cmp
jecxz
cld
out
dec
jp
lds
repz
lds
loop
xor
push
jmp
xchg
in
cld
pop
dec
daa
adc
and
popf
jnp
sarl
scas
inc
stos
inc
sarl
fsubr
sub
repz
pop
xchg
leave
jae
cmp
int3
sbb
enter
mov
data16
and
mov
sub
ss
cwtl
sbb
inc
cltd
xchg
push
push
and
mov
popa
adc
stc
inc
out
mov
lahf
dec
nop
test
das
ficomps
or
cwtl
push
mulb
les
lods
iret
jmp
jl
add
stos
sti
gs
jge
out
jmp
imul
pop
pop
mov
xlat
mov
push
mov
mov
andb
out
ja
cld
sbb
lahf
ret
and
xor
mov
push
sub
cmc
inc
jmp
lcall
cltd
inc
outsl
fsubrl
dec
jmp
dec
mov
mov
inc
mov
je
rcl
popf
ret
mov
lahf
push
cld
adc
lock
aam
ds
and
xchg
xorl
push
out
pop
shrb
mov
cmp
mov
scas
cmp
fidivrl
cmp
mov
aam
xchg
and
push
mov
fwait
xor
sub
push
or
push
cmp
lds
sub
subl
cmc
repnz
adc
push
out
sub
mov
jp
adc
pop
nop
aas
iret
das
sub
sub
add
xor
xor
ja
cltd
stos
gs
sti
mov
hlt
mov
mov
dec
popf
sub
sub
bound
nop
rcrl
adc
imul
add
popa
cs
xor
sbb
rcrb
leave
jle
xor
push
mov
xor
jp
stos
loope
fwait
push
sti
nop
popf
ret
pop
inc
jne
lret
lret
ss
sbb
hlt
sub
dec
push
fidivrl
test
add
arpl
lods
mov
cli
dec
or
push
cwtl
lcall
imul
scas
addr16
xlat
mov
repnz
test
leave
mov
out
sti
sub
sub
cmpsb
or
xor
pop
dec
rorb
mov
int3
test
js
cmp
push
loope
int
xchg
hlt
into
sub
test
xor
lret
jnp
cs
daa
mov
incb
push
outsl
sub
cmp
xor
add
pop
mov
sub
pushf
xor
jp
mov
loop
bound
iret
push
es
pop
lcall
jo
mov
or
add
push
pop
or
mov
insb
sbb
mov
fstps
pop
stos
mov
sub
sti
dec
add
mov
dec
adc
test
arpl
les
lcall
pop
mov
fs
ss
ret
roll
cld
mov
pop
repnz
or
insl
fistpl
ja
inc
jl
sarl
push
sbb
push
mov
adc
das
fdivl
fs
xor
fstpt
out
sub
je
and
cmp
mov
mov
cltd
inc
xchg
in
or
mov
arpl
and
push
iret
jne
cmpsl
adc
iret
push
outsl
repnz
enter
xor
xor
cmp
and
ret
bound
lcall
dec
push
dec
push
inc
or
lea
or
mov
sub
lahf
mov
insl
out
jnp
mov
fadd
mov
je
cwtl
and
shlb
mov
sbb
pop
mov
and
scas
rcr
inc
fimull
dec
fldenv
loopne
pop
in
cmp
jae
popf
rcr
inc
ja
xchg
enter
leave
mov
rcrb
std
jbe
loopne
in
insl
daa
inc
add
dec
sub
pop
xor
dec
mov
icebp
in
inc
mov
in
push
loop
jnp
lock
arpl
fsubp
jp
insb
ljmp
fucomip
out
pop
shrl
add
cmp
xchg
or
faddl
inc
imul
shl
xchg
daa
cmp
mov
mov
jg
test
out
sbb
divl
mov
subl
sbb
and
pop
cmp
mov
lahf
std
mov
sub
int
stc
sbbb
pop
nop
fcoms
mov
pushf
push
xchg
cltd
fadd
adc
push
lahf
mul
xchg
and
pop
push
test
mov
daa
dec
push
out
stc
sub
cmp
sbb
or
ja
pop
sub
fisttps
and
filds
pop
test
dec
add
mov
push
mov
jo
ds
pop
sqrtps
dec
popa
add
push
shrb
ja
mov
pop
loopne
inc
fsubrs
lcall
mov
push
std
dec
pop
das
sub
jbe
leave
sub
enter
insl
jno
in
push
sub
jmp
ret
pusha
dec
pop
xchg
fadds
xor
mov
insl
rolb
adc
mov
scas
lods
jns
add
inc
leave
lods
rcrb
pop
or
xchg
or
push
rolb
rcrl
mov
adc
ja
js
and
mov
xor
mov
mov
ret
stos
arpl
mov
sar
push
sub
clc
sub
sbb
leave
add
mov
or
add
pop
inc
scas
int3
les
js
fsubrl
imul
fs
in
pop
and
cmc
stos
xchg
mov
push
cltd
sub
fcmove
out
mov
and
mov
out
cwtl
jo
outsl
aas
xor
or
fistpll
mov
loopne
rclb
lods
or
pusha
push
xor
push
dec
add
sub
inc
mov
pusha
inc
and
and
lock
jbe
jnp
lret
imul
jo
sbb
test
or
sbb
cmp
aam
push
cmc
and
in
cmp
or
das
aam
adc
sub
iret
xchg
ret
lret
dec
xor
lahf
xor
mov
into
lods
cmp
sti
outsl
mov
push
fs
or
pop
inc
pop
stos
sbb
and
mov
cmp
outsl
into
add
fmul
cmp
es
ds
adc
aaa
dec
mov
fs
jbe
aad
mov
push
add
leave
push
pop
pop
mov
fisttpll
cmp
dec
xor
sti
dec
je
scas
jecxz
lahf
es
jmp
adc
loop
push
ret
mov
sub
jp
stos
cs
cli
repnz
or
popw
xorb
dec
movsl
xchg
lahf
mov
in
add
lahf
mov
cmp
push
out
test
pop
cmpsl
inc
sbb
adc
adc
outsl
jo
xor
sbb
jecxz
scas
stos
ret
test
mov
or
push
mov
jno
mov
mov
shrb
nop
rcrl
inc
movsl
cmp
add
sub
xor
push
ss
popf
idivl
sub
jle
call
stc
lea
and
in
fwait
mov
mov
dec
mov
nop
in
fsincos
lret
addl
adc
push
in
shlb
imul
leave
xchg
xchg
mov
and
in
dec
dec
sub
fwait
xchg
sub
dec
in
sub
jmp
jne
sar
outsb
sar
data16
mov
add
mov
das
je
mov
pushf
popf
call
add
xchg
outsl
pop
test
add
in
rorl
cltd
xchg
push
push
cmp
pop
xchg
jne
push
cwtl
and
and
mov
mov
test
dec
into
pushf
daa
inc
lock
lret
inc
mov
femms
mov
mov
bound
sub
ja
inc
notl
push
sti
xchg
out
mov
add
mov
cmpsl
test
mov
add
lret
xor
bound
and
popl
jnp
and
int3
mov
add
mov
pop
dec
jno
add
fdivrl
arpl
adc
and
xlat
jl
cmp
stc
push
push
or
out
lret
stc
push
jle
mov
mov
fstl
popa
int
sub
xchg
ret
dec
cmp
lds
fnstcw
jmp
xor
and
xor
in
stos
pop
repz
or
mov
add
or
test
sub
mov
aam
mov
mov
adc
inc
ja
mov
push
mov
sbb
mov
adc
xchg
xor
jbe
bound
daa
pop
xor
loope
pusha
xor
pop
mov
test
repz
push
int3
in
dec
mov
mov
dec
mov
lds
jecxz
push
mov
aas
push
in
adc
sub
pop
xchg
clc
icebp
stos
mov
int3
scas
adc
stos
cmp
and
fistps
inc
xchg
add
test
das
dec
sub
out
aad
adc
ficomps
sbb
dec
jo
pop
test
mov
out
pop
out
sbb
ja
dec
and
in
and
out
mov
nop
sar
movsb
xchg
popa
sbbl
out
out
push
push
iret
out
jae
loopne
inc
pop
fsts
sub
push
jno
arpl
xchg
rcrb
and
xchg
push
jecxz
jge
mov
and
dec
xchg
aad
mov
popl
cld
aaa
out
sbb
rol
pop
call
je
mov
mov
xor
push
pop
enter
dec
xchg
int
je
push
imul
call
lds
shll
shlb
dec
in
shl
jge
inc
and
sub
jge
xchg
and
lods
gs
je
and
aas
sub
fs
je
data16
sub
popl
fcoms
pop
adc
mov
or
mov
pop
ret
fimull
cmpsb
sub
rcl
push
cmp
clc
mov
jg
xor
mov
mov
ret
mov
lods
jp
push
mov
sub
jge
push
mov
adc
xor
arpl
into
xor
stc
sub
inc
out
fs
and
adc
hlt
addr16
jns
out
je
push
jecxz
xchg
shrb
movsb
lock
aas
jle
je
pop
jae
xlat
cmpsl
inc
loope
fcompl
push
outsb
fdivs
jle
xchg
dec
cmpl
das
faddp
add
add
jle
or
push
repz
jo
lea
fwait
rolb
repz
mov
cmp
jl
mov
fwait
ss
imul
cmp
adc
jp
mov
cmpl
jne
into
sbb
mov
fs
xchg
fiaddl
xlat
and
loop
xchg
divl
pop
mov
jo
inc
cmp
add
loope
in
daa
pop
rcl
sti
jg
fucomip
fcomi
mov
test
or
dec
roll
or
and
hlt
sti
rcrl
cmp
rorb
jle
pop
cmp
cmpb
outsb
mov
es
push
mov
sbb
test
inc
movntps
test
xchg
movsl
iret
and
jmp
outsb
pop
int3
mov
inc
testl
pop
push
iret
dec
je
xchg
cmpsl
or
repnz
into
pop
add
mov
and
js
and
divl
xlat
aam
shl
cmp
repnz
lock
cmp
and
push
sarb
sbb
xchg
div
push
cmpsl
shll
add
lods
xor
addr16
in
and
insb
clts
xchg
clc
mov
shlb
jle
mov
in
clc
inc
pop
insb
rorl
mov
iret
adc
je
je
sbb
int
call
dec
ret
and
insl
clc
imul
push
je
and
sub
jne
insl
sub
daa
xchg
or
pushf
jle
xchg
mov
cmpsb
loope
push
adc
mov
inc
cli
loop
add
mov
lret
arpl
add
mov
jo
lods
mov
pusha
divb
sahf
xchg
mov
push
and
mov
inc
mov
mov
mov
inc
or
dec
cmp
sbb
imul
xchg
mov
insb
xchg
mov
push
out
or
out
hlt
out
or
mov
xchg
dec
fwait
dec
out
ss
push
icebp
cltd
dec
xchg
xchg
dec
ds
fildll
mov
arpl
and
out
into
daa
jg
pop
and
mov
add
out
adc
fimull
xchg
lock
cltd
cmpsl
cmp
xor
stc
sahf
push
call
push
sub
mov
lods
push
sbb
mov
pop
sbb
cld
sbb
or
push
add
mov
sbb
mov
jmp
leave
lret
sbb
bound
mov
loope
pusha
cmpsl
mov
dec
sahf
xchg
cmp
in
into
daa
mov
addr16
jbe
dec
cmp
sbb
and
push
xor
int3
sbb
lock
mov
and
inc
push
test
mov
aas
sub
insl
testb
inc
imull
aad
or
mov
ret
and
xchg
dec
leave
sbb
xor
mov
scas
sub
nop
mov
ja
iret
call
adc
jecxz
pop
fcmovbe
pop
xor
cmp
les
add
or
btc
fs
dec
mov
mov
int
jmp
xchg
adc
sbb
shlb
leave
push
inc
or
push
mov
lods
mov
mov
pop
clc
ljmp
orb
push
rolb
inc
movsb
dec
push
push
jg
pusha
mov
aad
cmc
push
inc
mov
jns
xorl
xlat
add
test
lock
les
test
mov
into
les
push
pop
sbb
jl
mov
sbb
dec
lea
push
call
pop
xor
cmc
shrb
inc
xchg
add
es
cltd
inc
mov
mov
lods
cli
lret
in
push
jbe
mov
jo
mov
mov
mov
pop
sub
sub
xor
shrl
mov
std
int3
mov
mov
shlb
jg
and
sbb
fcompl
dec
testb
mull
pushf
xor
xchg
arpl
hlt
in
inc
or
lods
daa
xchg
xorl
test
xor
jne
sub
hlt
icebp
test
lret
loope
test
ret
mov
lea
push
and
mov
icebp
out
insb
dec
push
cli
test
mov
lock
sub
pop
mov
call
fcompp
ja
xchg
ljmp
insl
mov
mov
ja
jae
jle
imull
sub
sub
popf
sub
lock
adc
add
xor
mov
push
shlb
mov
mov
iret
inc
mov
testb
inc
mov
leave
sbb
dec
cwtl
jnp
pop
popf
ja
mov
add
je
inc
imul
rdpmc
scas
aaa
test
jecxz,pn
rcrb
xor
mov
inc
ja
sti
dec
fstpt
mov
or
movsb
cli
mov
add
insl
in
in
adc
adc
nop
rolb
sub
leave
xchg
add
aaa
cmpsl
mov
stos
jmp
fisttps
incb
call
imul
cmp
mov
ret
int
outsb
shrb
add
sub
push
loopne
out
adc
sub
mov
ret
cld
mov
frstor
jbe
mov
nop
pushf
mov
sub
xchg
sub
loop
mov
or
frstor
lods
sub
jne
xchg
std
data16
inc
push
xor
fwait
cmp
mov
mov
icebp
fcompl
sub
cmp
jge
add
jnp
xchg
pop
cmp
imul
adc
or
scas
dec
aaa
pop
rorb
test
lods
push
outsb
pop
rcrl
ja
es
shlb
lcall
push
push
je
mov
push
or
jmp
or
inc
pop
rcrb
cli
enter
test
sbb
or
or
setns
sarb
daa
mov
hlt
dec
push
roll
dec
scas
adc
xor
addl
adc
rcrl
inc
jmp
out
call
mov
sbb
aam
in
and
outsl
mov
rcr
test
mov
icebp
test
lock
add
dec
sub
xchg
xlat
int
and
je
adc
call
fdivrl
cwtl
addr16
push
jno
daa
sbb
xor
add
test
imul
cmc
lret
jno
in
mov
adc
sub
sub
sbb
aaa
mov
outsb
jno
pop
insl
js
pop
in
aaa
jmp
fsubrs
push
or
mov
iret
scas
fwait
xor
xchg
sbb
and
xchg
inc
je
push
js
rorl
ds
pop
and
jb
jbe
daa
xor
xchg
jno
xlat
add
mov
icebp
outsb
and
dec
adc
call
jg
test
jle
ret
cmp
and
les
test
mov
mov
or
loopne
xchg
or
xor
cmpb
aad
sbb
outsb
shl
cmp
in
and
test
pop
dec
ret
jecxz
out
sub
daa
out
es
sti
xor
loopne
pop
push
cmpsb
cmp
push
mov
mov
sbb
dec
xlat
repz
or
aas
jmp
pop
inc
imul
lds
mov
adc
std
in
faddl
xchg
add
mov
cmp
jnp
or
fcmovb
cmp
shl
pop
and
push
frstor
adc
xchg
notl
loopne
scas
mov
mov
lds
pop
xchg
sub
mov
push
mulb
cmp
push
lock
cwtl
xchg
and
test
scas
call
mov
sbb
adc
sub
xchg
mov
lock
in
add
scas
test
mov
sbb
jmp
ficoms
imul
in
mov
jmp
lods
and
das
xchg
int3
mov
idivb
cmpsb
xchg
dec
addr16
popa
lods
lahf
cmpsb
fdivl
test
rorb
dec
arpl
out
pop
and
dec
xlat
dec
or
mov
and
cmp
mov
clc
adcl
xchg
jp
dec
push
cmp
stos
aaa
push
dec
aas
push
lods
rcrb
scas
cld
add
lret
sbb
data16
mov
cs
and
ret
int
fdivrl
stos
and
xorl
loope
push
das
test
xchg
lcall
dec
loope
enter
in
in
pop
push
sbb
in
adc
sub
sub
ja
sbbb
add
call
adc
clc
mov
jbe
push
aam
insb
cltd
test
xchg
movsb
jle
out
xor
sbb
out
mov
ficoml
cmp
stos
cmp
incb
aam
shlb
sub
jo
loope
cmp
in
clc
jo
jecxz
mov
mov
or
adc
mov
je
pop
or
loopne
fisubl
push
sub
lods
mov
mov
je
das
adcl
xlat
int
sbb
stc
in
loopne
int
lcall
lds
xor
fidivl
aas
cltd
movsb
jg,pt
rclb
push
mov
call
add
icebp
xchg
lret
and
jno
mov
arpl
movsl
ljmp
addr16
pop
mov
outsl
std
push
lret
in
cmp
sbb
out
cld
fildll
xchg
int3
sub
sub
mov
movsb
ss
push
js
mov
and
out
inc
sbb
arpl
jno
adc
push
xor
cli
or
dec
sub
test
addb
pusha
xchg
pop
push
outsb
xchg
mov
and
ja
outsb
mov
push
cmpsl
pop
jne
inc
or
test
test
gs
popf
cs
shll
fisubl
repz
ret
sub
sub
and
icebp
pushf
lea
sbb
xor
jno
sub
cmp
sub
dec
ss
or
sbb
in
or
cmpsl
sar
aas
fcompl
call
add
loopne
ljmp
pop
fcmovnb
push
ret
faddl
xchg
aam
fwait
inc
cwtl
rcr
jle
fimull
xchg
lret
imul
mov
sbb
lods
out
push
dec
push
jle
divb
out
add
not
cwtl
movsb
jmp
fsub
loopne
or
mov
arpl
xchg
mov
repnz
push
sbb
lods
or
and
shll
jmp
mov
insl
sbb
int3
dec
sub
in
hlt
adc
push
sbb
vpunpckhbw
adc
adc
push
xor
dec
pop
sbb
xor
sbb
popf
cmp
lret
jb
push
mov
jno
icebp
mov
push
push
xchg
fsubs
mov
or
dec
mov
test
jbe
pop
and
or
test
rclb
scas
push
das
shrb
std
and
cmp
lea
outsb
insl
fmul
ljmp
inc
xor
pop
jmp
cli
pop
into
lock
mov
sahf
add
cli
xor
in
out
ljmp
pop
clc
sbb
mov
or
inc
jmp
into
add
mov
lock
imul
pop
push
pop
ret
mov
out
mov
adc
enter
inc
fldt
adc
mov
popa
adc
or
rcll
sbb
jmp
pusha
dec
shl
lahf
xor
dec
pop
pop
sub
hlt
sbb
push
inc
cld
cmp
mov
andb
or
xchg
push
push
inc
adc
xor
mov
or
mov
js
cmc
fldln2
mov
mov
ljmp
in
rclb
imull
inc
mov
insl
inc
cmpb
jg
dec
mov
and
push
les
inc
mov
mov
cmp
loope
push
lret
xchg
mov
out
aas
aam
fmuls
mov
outsl
mov
inc
add
xor
push
es
das
add
mov
mov
dec
fdivl
mov
mov
es
sbb
xlat
pop
add
popa
mov
dec
stc
shlb
mov
mov
push
dec
and
jnp
in
cmp
pop
sbb
pop
fistpll
aaa
dec
loope
inc
jae
iret
rcrb
and
repz
or
dec
xchg
mov
out
test
adc
fildll
arpl
cmpl
sbbl
inc
in
cld
in
into
test
cli
aaa
inc
cmpsl
fstpt
stc
loop
rcrb
ljmp
sub
mov
test
push
jle
lds
imul
jbe
push
push
iret
xor
dec
adc
dec
popa
loop
lods
clc
dec
and
and
loopne
insl
mov
add
inc
or
adc
push
mov
push
lret
mov
mov
xchg
fs
sub
xchg
push
cmp
leave
inc
loopne
shll
mov
out
pop
adcb
pop
aad
repnz
pop
inc
pop
add
inc
ss
push
and
cli
pop
fsubrs
or
gs
iret
mov
arpl
enter
repnz
std
mov
ret
cmp
fldl
cmpsb
cmp
push
adc
push
sahf
inc
insb
neg
adc
pop
dec
out
lahf
push
pusha
mov
jo
jmp
in
cmp
lods
sub
jl
les
rolb
pop
mov
test
cmp
insb
sahf
or
mov
iret
out
or
outsl
push
push
addl
mov
sti
cmp
loope
xchg
scas
mov
jns
scas
sbb
sbb
test
jnp
mov
inc
lods
add
adc
sub
dec
fcmovne
out
or
xchg
push
push
sub
push
pop
rolb
xchg
lods
lods
add
ret
pop
fcomip
filds
cltd
dec
and
mov
mov
push
xchg
mov
filds
cmp
mov
sti
rcrl
or
sbb
outsb
mov
xchg
lahf
stos
int
add
pushf
subb
or
xchg
mov
daa
mov
jle
insl
add
cmp
insl
jmp
mov
test
sbbb
jle
int3
in
or
xor
call
faddp
or
stos
pop
cltd
pop
mov
lahf
and
mov
pusha
cmpsl
cmp
sub
add
mov
aad
cmp
ds
enter
ror
testl
mov
loopne
in
mov
push
cli
scas
mov
xor
loope
mov
xchg
jno
popl
sub
mov
mov
jge
dec
push
jl
mov
fs
or
mov
mov
jl
loope
push
mov
rol
cmpsb
mov
popa
cld
or
sub
icebp
gs
pop
iret
push
ret
add
or
xchg
test
xchg
imul
pop
dec
daa
stos
ljmp
xchg
ret
cmp
pop
push
fbstp
sarb
fmul
push
jo
mov
sub
push
pop
mov
rorl
mov
sub
and
test
shll
in
roll
mov
repz
stos
inc
xor
loope
and
push
lcall
int
xchg
dec
int
push
insl
jo
pop
xchg
push
lds
add
sub
inc
and
cld
push
jo
outsb
jno
pop
rcl
mov
mov
nop
jno
xchg
mov
sbbb
mov
mov
push
add
xor
dec
inc
pop
sub
pop
daa
or
cltd
xchg
cmp
out
push
js
data16
jg
or
xor
sbb
pushf
mov
xor
leave
es
stos
push
cmp
fs
fwait
test
inc
fsubl
push
mov
aad
xchg
mov
mov
stos
and
icebp
push
and
jl
mov
xor
ljmp
pop
ss
out
jno
mov
pushf
mov
orb
addl
out
add
pushf
mov
into
out
outsw
aad
or
rcrl
xchg
xchg
jns
aas
cltd
inc
fdivrp
mov
jo
lods
adc
loopne
jmp
pop
dec
nop
cmp
fcompl
dec
sub
fistps
dec
cmp
pop
xor
mov
xchg
jo
sti
pop
adc
or
xchg
jmp
imul
pop
jo
sbb
rol
out
test
mov
imul
divl
shll
repz
dec
pop
sti
push
fmul
mov
daa
fsubp
loope
mov
inc
lcall
mov
mov
fldcw
sub
lahf
fcoml
lods
xor
mov
sbb
and
inc
ljmp
idivl
sbb
and
idivb
xchg
stos
ljmp
push
jmp
push
or
fmull
jbe
ret
jmp
adc
push
sahf
xchg
in
sub
push
mov
sbb
aas
cmp
lock
cs
sahf
subl
pop
xchg
add
or
imul
or
cli
add
out
shrb
pusha
jns
les
loopne
les
jle
scas
dec
add
sub
sub
cli
dec
sub
gs
mov
out
push
lret
and
adc
lds
push
pop
sbb
inc
bound
and
aad
and
outsl
cmp
mov
pushf
xchg
daa
clc
std
mov
push
shrb
cmp
mov
loope
mov
int3
dec
test
lods
out
je
or
pusha
out
xor
jb
jge
xor
popf
test
in
test
icebp
inc
jo
or
mov
sub
ja
mov
imul
or
lcall
xchg
in
adc
das
ficomps
addr16
js
pop
fcmovnbe
divl
xchg
xor
rorb
loopne
into
pop
cmp
enter
adc
push
in
mov
fsts
jmp
imul
mov
lret
js
push
sub
fnstcw
jle
push
dec
std
push
aam
push
rorb
cmp
push
sbb
inc
je
cmp
into
mov
bound
and
mov
fdivl
neg
std
mov
jge
js
cmp
lret
dec
jae
xor
pop
dec
lods
imul
pop
push
outsl
push
sub
xlat
pushf
push
inc
push
fdivrs
sbb
out
or
cwtl
sar
mov
cli
or
mov
movntq
out
dec
push
gs
outsl
push
mov
sbb
or
add
mov
fildll
bound
lret
dec
mov
push
mov
in
dec
ret
aaa
clc
push
add
addl
pop
lock
test
jecxz
imul
int
sub
mov
xlat
fcompl
jns
push
aas
dec
loope
mov
mov
jo
or
cmpsl
or
and
into
lret
mov
in
inc
mov
cmp
sub
push
repz
repz
inc
or
xchg
in
jecxz
cmp
pop
push
xchg
shrb
arpl
hlt
lods
jno
sub
jae
push
cmp
cmp
adc
mov
mov
cmp
mov
mov
in
push
js
dec
or
iret
sbb
xchg
xchg
ret
stc
sub
push
cwtl
outsl
not
fldenv
outsl
push
cmp
mov
lods
push
mov
push
sahf
cli
loop
cmp
xchg
xor
cmp
test
mov
jge
push
bound
insl
fbld
inc
fnsave
enter
xchg
dec
sbb
mov
bound
scas
les
xchg
test
jno
neg
lds
int
addr16
test
loop
lahf
push
and
jne
cld
loope
mov
inc
out
mov
jnp
pop
addr16
and
loope
dec
out
test
and
movsl
outsb
ljmp
mov
int
cld
inc
adc
in
cltd
adc
aam
sbb
push
or
and
imul
jno
icebp
sub
fnstenv
dec
clc
pop
int
sbb
xor
pushf
sahf
scas
repnz
mov
mov
sti
test
imul
inc
fstpl
daa
in
mov
jno
aam
out
test
addb
pushf
lods
jae
add
out
inc
push
mov
in
jg
dec
jmp
push
scas
mov
cmpsb
dec
cmp
repnz
out
loopne
subb
cmp
ret
pop
xlat
jmp
int
hlt
ret
fidivrs
sbb
scas
xchg
add
jbe
mov
mov
mov
inc
mov
cmc
pushf
scas
mov
arpl
mov
mov
scas
add
test
sahf
gs
iret
fisttpl
or
xchg
jno
jae
cs
hlt
cmp
mov
mov
aad
mov
xchg
popa
pop
mov
cld
shll
cmpsb
imull
xor
dec
fdivrp
sbb
mul
clc
fmull
pop
xor
test
push
mov
jge
cmpsb
shr
es
nop
mov
or
and
jae
iret
jmp
dec
and
in
cmp
push
sbb
sti
pusha
sti
pop
mov
lds
mov
xchg
sbb
mov
push
jb
dec
and
ljmp
dec
in
mov
cltd
outsl
inc
mov
or
or
fisubs
scas
loop
dec
ret
mov
test
sub
and
cmp
jns
cmpsb
sub
jns
int
or
add
or
into
xor
shll
stos
mov
add
popf
pop
push
xchg
or
xor
outsb
sbb
adc
ljmp
ljmp
mov
mov
pop
shl
xchg
mov
lods
sub
popf
ljmp
jne
mov
cli
in
fstl
lcall
stos
test
rcrl
and
shlb
sub
cs
pop
test
aad
cltd
sbb
adc
jo
lea
scas
xor
sub
mov
shr
pop
xchg
inc
addb
pusha
addr16
dec
mov
fsubl
pusha
fwait
dec
lcall
jne
sbb
movsl
mov
cmp
cmp
cmp
xor
xor
movsl
xlat
cmp
rclb
mov
mov
xchg
sbb
lcall
cmp
fcomps
add
pop
stc
inc
mov
repz
lahf
xor
cli
adc
xchg
popa
push
inc
pop
jg
cmpsl
jns
sub
stos
and
cmp
enter
sar
in
xchg
and
fsubr
or
mov
inc
fsubrs
jo
xchg
inc
cmp
test
iret
imul
jl
inc
xor
aam
loop
lret
xor
push
lret
ret
loopne
popa
sbb
mov
repz
xchg
inc
jp
inc
out
xlat
push
aaa
sbb
stc
shll
bound
pop
xchg
scas
ds
daa
out
sbb
mov
inc
sbb
fcoms
add
sti
mov
adc
mov
sub
int3
outsb
mov
pop
sahf
stos
test
add
dec
mov
xchg
lahf
push
xchg
mov
mov
push
pop
int3
sub
outsb
fcoms
sbb
lea
lock
push
push
push
jg
jmp
loope
and
mov
xchg
inc
into
loopne
leave
popa
or
push
or
cs
cwtl
xor
sub
add
push
or
dec
xchg
mov
jb
hlt
aad
cld
popf
or
rcrb
in
adc
fwait
push
jnp
cmp
xchg
fbld
dec
in
rcl
mov
ret
mov
ss
imul
xchg
and
arpl
scas
mov
dec
or
cmpl
cld
fwait
out
ret
push
inc
ret
mov
loope
pop
aad
or
cmp
push
subl
ret
aaa
or
push
into
push
jle
adc
leave
jns,pn
xchg
xchg
and
clc
lahf
mov
lock
xchg
mov
sbb
pop
arpl
clc
int3
das
loope
int
in
pop
inc
push
jle
cmp
insb
out
jo
loop
mov
or
cmp
mov
xorl
cmp
mov
xchg
aaa
pop
push
xchg
mov
nop
stos
sbb
jo
push
sahf
jmp
xchg
orb
mov
rolb
mov
in
clc
sbb
loope
insl
cmc
mov
outsl
clc
mov
fst
mul
and
clc
inc
stos
push
cmc
pop
dec
inc
mov
mov
inc
adc
mov
aam
ret
andl
test
mov
push
cltd
and
push
adc
jbe
cmp
lahf
scas
cmc
in
adc
jp
cmp
adc
lahf
dec
jp
cld
pop
push
ja
mov
test
push
sub
mov
dec
outsb
aas
les
xor
outsb
je
fxch
dec
pop
cld
mov
cmp
or
loopne
mov
sub
cli
sbb
scas
adc
scas
add
in
cmpsl
adc
fsubrs
dec
in
bound
mov
inc
sbb
in
mov
mov
outsl
inc
js
nop
adc
fwait
decb
aad
xchg
pop
ret
pushf
es
mov
ds
mov
pop
aad
dec
fwait
mov
mov
xchg
jmp
jns
xor
cli
dec
mov
or
pop
icebp
mov
mov
dec
or
pop
inc
adc
in
cmpl
lcall
sbb
jl
lods
adc
out
sbb
data16
sbb
cmp
js
fs
in
pop
or
pushf
in
cmp
push
mov
mov
mov
out
out
dec
xorl
mov
lods
mov
jne
sbb
add
test
pop
cmpsl
popa
cmp
into
xchg
imul
mov
jmp
or
or
jno
jo
divl
mov
out
cwtl
out
pop
pop
sti
xchg
cmp
mov
xor
ljmp
cltd
fsubs
movsb
loop
stos
into
into
dec
and
and
test
mov
push
pushf
pop
inc
xor
test
imull
int
pusha
pop
rcr
xchg
mov
into
inc
lock
fisttpll
push
adc
mov
sub
xor
shrl
cmp
xorb
test
xor
outsl
or
mov
sbb
inc
test
xor
pop
push
fdivp
subl
sbb
pop
cltd
xor
divb
adc
bnd
adc
xchg
lea
xchg
ret
xor
in
in
inc
jge
pop
pop
jp
cmovge
bnd
sbb
fisttps
mov
addr16
cli
or
push
xor
notb
test
pop
jb
mov
inc
out
out
jae
add
inc
lea
mov
hlt
je
lret
sub
sbb
lret
mov
insb
flds
push
adc
fnstcw
push
js
adc
xchg
jge
movsb
mov
jmp
add
sbb
repz
repnz
jae
icebp
test
xorl
pandn
mov
movsl
mov
inc
iret
sahf
in
mov
pusha
lods
lret
aam
testb
das
leave
or
mov
pop
cmc
jge
cltd
test
aam
pop
mov
mov
or
cmp
mov
pop
jge
cmp
and
and
dec
sbb
jle
cs
jl
jle
push
sub
dec
pop
mov
and
cs
sti
mov
sti
xchg
cmp
sbb
cwtl
test
and
inc
cmp
hlt
mov
pop
dec
lcall
outsl
scas
lahf
dec
jno
out
mov
inc
leave
cld
in
xor
fucomip
dec
inc
jmp
int
pop
fdivl
scas
jae
pop
pop
and
cwtl
mov
aas
pop
inc
movsl
sub
aas
insb
pop
cmp
roll
addb
adc
mov
mov
popf
xchg
insl
call
rcr
jecxz
ds
iret
imul
and
push
sub
fimuls
adc
and
call
cmp
push
stos
or
ret
xchg
popl
or
and
jg
or
pop
mov
cs
filds
in
outsl
inc
pop
cltd
sbb
addl
lret
jl
js
loope
xor
push
cwtl
xchg
fs
xor
shl
loopne
xchg
push
and
test
push
ja
imul
pop
jb
adc
pop
mov
mov
dec
inc
popf
ret
cwtl
inc
std
fucomip
pushf
push
insl
adc
xor
lock
ret
xlat
std
dec
adc
lds
push
jo
mov
pop
or
jp
loope
faddl
push
pop
add
jecxz
scas
xor
cmp
xchg
test
test
lcall
cli
fsubrs
sbb
fsubrs
mov
xchg
hlt
aaa
or
int
ret
arpl
mov
push
mov
jne
popf
mov
push
ss
cld
push
imulb
pop
js
mov
push
cmp
dec
insl
or
or
pop
and
mov
sbb
pop
sub
jb
repnz
pushf
jge
in
adc
sub
insb
push
in
aam
xor
pop
mov
fs
sahf
cmp
outsb
mov
pop
out
les
int
cmp
jnp
push
mov
push
or
nop
inc
daa
xchg
loope
es
dec
adc
int
shr
cmp
pop
cmpsl
sub
pusha
or
shl
or
mov
jl
dec
sbb
sbb
inc
cmp
or
xchg
es
fisubrl
inc
test
sub
or
jnp
cmp
data16
js
xchg
test
fcomp
movsb
jecxz
push
scas
dec
mov
sahf
inc
push
lahf
xor
loop
add
leave
out
add
addr16
sub
cmpsl
xlat
sub
jl
iret
mov
cmp
mov
push
or
jnp
test
pop
and
inc
pop
test
sub
or
fcmovnu
aad
pop
jmp
add
addr16
rclb
out
mov
mov
lds
adcl
cwtl
das
jecxz
lods
out
push
in
lret
add
mov
jle
add
mov
bound
xchg
pop
fdivr
sub
lret
mov
pop
stos
xchg
call
mov
test
shr
mov
fucom
sbb
cld
cli
xchg
popa
les
out
push
adc
mov
sti
pop
xchg
nop
js
cmc
lods
pushl
mov
jns
icebp
popa
xor
add
sub
les
je
arpl
mov
shr
data16
inc
out
popf
pop
push
out
dec
xchg
scas
repnz
pop
pop
mov
or
sarb
imul
std
xchg
test
ljmp
mov
scas
bound
pop
push
ret
cli
jg
imulb
lcall
push
aas
push
cld
pop
outsb
repz
pop
jmp
or
mov
mov
pop
push
leave
or
or
mov
in
push
clc
int3
cmpsl
and
mov
icebp
add
mov
adc
clc
loop
pushf
and
aad
jg
and
daa
jg
test
scas
lea
add
or
jno
pop
push
mov
sar
call
lods
inc
mulps
sahf
stc
push
push
push
mov
rcll
adc
adc
sub
clc
lods
insl
pusha
repz
jo
adc
outsb
jne
adc
and
lret
jo
cmp
sbb
pop
jecxz
idivb
fwait
ds
sbb
out
mov
test
cs
lret
xor
xor
arpl
subl
mov
call
push
jl
insl
cltd
mov
adc
mov
inc
adcl
fisubrs
and
ror
bound
mov
pop
push
and
push
xchg
fwait
lock
mov
adc
sbb
xchg
addr16
lods
inc
cmp
xchg
imul
fistps
mov
fdivl
jo
jecxz
cmp
out
add
cmpsl
sub
fdiv
daa
addb
or
bound
in
dec
das
mov
add
lods
cli
jle
imul
cmpsb
xor
icebp
int3
add
dec
outsl
iret
mov
mov
pop
sbb
adc
jp
adc
loopne
nop
cmp
iret
cltd
rclb
fstpt
aam
or
jl
sbb
repnz
loopne
insl
jnp
out
jne
xor
pop
sub
jno
call
cmp
push
iret
out
stc
ret
shll
pusha
out
jnp
leave
rcrb
arpl
repnz
push
pushf
sub
xor
outsl
mov
mov
push
mov
adc
mov
xor
xchg
lcall
dec
pushf
or
stos
and
add
clc
inc
nop
aas
rorl
testl
outsb
and
mov
andb
dec
jmp
sti
adc
cwtl
repz
jns
test
in
xchg
gs
mov
push
and
notl
ret
testl
dec
js
pop
mov
inc
repnz
lods
inc
adc
xchg
adc
aas
daa
mov
nop
mov
movsl
fs
xchg
sub
bound
inc
hlt
inc
adc
movsb
cmp
adc
test
cmc
jmp
dec
and
push
lock
and
shrl
push
loop
adc
faddl
dec
push
pop
fucomi
icebp
jae
js
and
pop
pushf
xor
add
xor
dec
mov
fdivl
jge
mov
push
repz
adc
lcall
jnp
shrl
push
and
adc
push
jbe
cmp
pop
sti
pop
sbb
mov
jne
repz
xchg
ss
mov
pop
mov
es
push
adc
orl
mov
inc
movsb
sub
jmp
popf
xchg
nop
repnz
idivb
push
lret
leave
sub
pushf
ret
jb
inc
pop
jb
pop
ss
popf
xor
push
ret
push
gs
xchg
add
inc
pushf
scas
dec
imul
js
orl
fstpt
outsl
out
jne
or
xlat
xchg
hlt
sti
aam
nop
push
outsl
mov
push
dec
xchg
xchg
rorl
loope
orl
mov
aam
push
push
xchg
clc
xchg
mov
daa
push
dec
push
sti
out
mov
pushf
mov
sti
cli
dec
mov
pop
and
mov
jb
xchg
jle
por
sub
sub
aaa
outsb
cmp
and
xor
sbb
lahf
jnp
rcll
pop
push
test
iret
mov
and
pusha
fisttpl
dec
xlat
movsb
iret
lcall
mov
ret
fcompl
mov
rcrb
sub
sbb
mov
rclb
mov
stos
dec
cmpb
aad
aad
adc
aaa
cmc
sti
movsb
push
in
or
test
test
push
cwtl
push
xchg
aaa
push
into
cli
cmp
ret
out
or
cmp
inc
xchg
push
sub
cmc
aad
loope
pop
push
stos
dec
jmp
xorl
dec
bound
or
xchg
lret
fmul
xor
pop
cmp
and
mov
jns
in
dec
cmp
or
mov
pop
nop
outsb
imull
bsf
jmp
aam
fsub
loope
test
dec
xlat
push
pop
faddl
jnp
or
adc
js
xchg
pushf
mov
imul
fiadds
mov
inc
or
and
inc
sbb
add
jne
xor
xchg
cltd
push
pop
mov
ja
mov
push
mov
dec
mov
xor
adc
aas
cmp
out
adc
adc
jg
jno
xor
sub
jl
jmp
add
ret
sbb
js
cli
push
jp
mov
ret
in
fisubs
in
push
pop
add
sub
stos
jae
stos
lret
addr16
push
adc
adc
cmpsl
out
enter
cmp
test
cmp
push
fs
andb
sub
mov
inc
mov
jg
or
jmp
cs
je
dec
sbb
cmp
call
adc
rorl
aaa
int
stos
les
or
leave
mov
das
jnp
jge
enter
mov
stos
push
jno
gs
push
in
inc
les
bndldx
sbb
stos
push
mov
pushf
push
rcl
lret
xlat
in
das
cmpsl
dec
sub
aas
mov
mov
sbb
data16
xchg
cmp
pop
push
pop
popf
movsl
repz
push
sbb
or
jg
stc
sbb
dec
mov
add
scas
lahf
adc
scas
lea
and
les
scas
test
daa
sbb
paddd
and
jp
inc
mov
jns
push
and
cmc
nopl
dec
cmpsb
clc
and
shrb
daa
xchg
paddusw
pop
test
mov
jle,pt
ljmp
cltd
lret
fldcw
aad
pop
aam
insb
popf
out
jnp
insb
push
arpl
mov
hlt
mov
dec
in
scas
shlb
mov
sub
cmpsl
lods
js
lods
ficoml
in
adc
sti
push
in
dec
lea
in
clc
mov
add
rcl
push
mov
adc
sub
daa
dec
xor
bnd
fs
cmpsl
lods
add
and
inc
sbb
mov
or
xor
gs
sbb
std
popf
adc
add
out
sub
sbb
jle
bound
mov
stos
mov
add
dec
pop
hlt
jge
pushf
lcall
inc
outsl
sbb
jns
icebp
je
inc
sbb
icebp
jp
dec
stos
lea
aam
cmp
js
push
or
adc
call
cmp
jb
in
and
sbb
mov
repz
loope
pop
pushf
js
sbb
leave
test
and
add
sbb
mov
hlt
shl
adc
mov
scas
add
mov
jmp
cli
dec
xchg
jg
push
aad
jns
add
mov
push
loop
out
mov
bound
dec
inc
jg
fwait
sahf
repnz
dec
out
js
cmpsl
sbb
lods
int3
cmp
subl
leave
pop
or
xor
or
push
xor
pop
mov
dec
mov
cld
lods
pop
xchg
lea
xlat
aam
iret
add
rcrl
dec
stos
sub
loop
jb
in
lahf
mov
jl
es
neg
shr
lods
popf
int
push
push
mov
mov
sub
cmpsb
scas
add
mov
mov
stos
dec
cltd
dec
iret
jp
cmp
nop
mov
aam
xlat
add
cmp
mov
mov
clc
ss
mov
xor
pop
mov
ljmp
insl
hlt
sub
xchg
mov
ljmp
push
movsb
mov
stos
adc
xchg
aam
ljmp
movsb
jo
push
and
cld
mov
hlt
cmp
sub
psubsw
sub
stos
and
lods
dec
loop
ret
movsl
stos
hlt
ret
or
mov
lret
fistps
insl
mov
test
cmp
pop
mov
mov
push
ljmp
in
scas
stos
lock
mov
bound
sbb
popf
push
sahf
sbb
inc
sahf
jmp
push
mov
mov
jbe
loope
mov
pop
loope
nop
push
pop
pop
fwait
mov
jbe
push
push
jo
add
xor
dec
xor
adc
add
or
or
das
gs
adc
fwait
sub
sbb
stos
fwait
out
xchg
and
sub
repz
pop
movsl
cmp
xor
stc
outsb
cmovno
fcoms
xorb
nop
imul
adc
scas
cmc
push
dec
dec
mov
andb
fcompl
and
sub
push
sbb
push
jmp
testb
xorb
leave
lods
jbe
cltd
mov
rcl
mov
bound
subb
scas
bound
add
je
pop
and
mov
mov
adc
rorb
daa
data16
lcall
mov
pop
jno
mov
inc
fildll
cmp
sbb
mov
dec
xor
cmpl
fs
add
pop
scas
adc
sub
movsl
pop
icebp
mov
or
inc
fs
daa
lret
popa
in
mov
and
xor
mov
icebp
sub
iret
arpl
imul
xchg
pop
add
mov
ftst
adc
repz
pop
mov
push
shlb
push
out
pop
xor
test
add
jbe
dec
and
into
ja
lods
into
fbstp
add
fiaddl
int
xor
adc
push
dec
jl
jo,pt
aad
test
sbb
push
cmpb
lcall
jp
aam
mov
jge
cmc
xchg
test
aad
inc
mov
xor
aas
mov
lret
cltd
inc
nop
sbb
insb
notl
xor
iret
jb
jecxz
mov
inc
cmp
test
int
rorb
frstor
pop
inc
mov
incb
dec
xchg
xchg
add
ss
popa
jecxz
xchg
js
nop
jmp
lret
bsr
imul
sub
jg
ror
inc
orl
jmp
add
push
addl
hlt
sbb
xchg
xchg
mov
bound
sar
lret
js
stos
setnp
sti
test
jmp
dec
cmpsb
cmp
fdivr
push
aad
jo
into
mov
cmc
push
or
dec
scas
push
pop
dec
fcomip
aam
pushf
adc
push
jne
btsl
and
jl
aad
ret
cltd
jl
sub
sbb
sub
or
dec
movsb
js
pop
xor
jbe
inc
pop
test
adc
mov
hlt
add
sub
mov
jnp
ljmp
or
outsb
push
or
push
fadds
jp
out
std
mov
push
add
test
pusha
subb
jp
test
enter
push
sub
push
add
jle
iret
jb
pop
mov
stc
int
icebp
out
das
and
and
mov
imul
shrl
xchg
cmpsl
mov
mov
jno
cld
adc
pop
es
aas
cmpsl
adc
out
xchg
es
and
hlt
push
aad
hlt
scas
pop
repz
cmp
push
sbb
and
fistps
in
stos
fildl
jo
ficompl
cs
pop
cltd
and
out
sub
mov
or
cmp
and
jnp
sbb
enter
pop
popa
hlt
lcall
or
xor
ds
outsb
pop
roll
stc
cmp
sbb
pop
mov
xor
sub
push
popf
cmp
add
rcrb
push
xchg
push
or
jle
cwtl
sti
push
in
or
mov
clc
cwtl
or
movl
outsb
adc
mov
enter
rorb
pop
outsl
and
insl
lret
data16
xchg
fs
pop
std
lods
cld
loop
jge
enter
js
xor
ret
lahf
and
push
push
aas
imul
xor
mov
jb
imul
pop
sbb
and
aaa
adc
pushw
rcl
sub
hlt
sti
cs
inc
testb
add
aaa
xor
loope
lods
sti
movsl
into
dec
lret
je
shlb
iret
int
and
dec
out
dec
pop
out
lcall
or
push
stc
xchg
pop
and
push
mov
inc
out
movsl
aaa
incl
gs
jp
lahf
add
jge
and
mov
call
xor
xor
gs
pop
aad
je
cmp
mov
inc
rcr
aad
mov
imul
int3
daa
pop
sub
addr16
or
mov
fcom
loop
jcxz
inc
mov
call
inc
arpl
sbb
dec
sub
mov
es
mov
sub
sbb
xchg
mov
into
xlat
gs
imul
in
rorb
iret
fwait
xchg
repnz
pop
adc
xchg
psubq
push
in
loop
aam
ja
popa
aaa
or
mov
aaa
dec
jbe
out
push
cmpsb
push
cs
lods
test
clc
and
push
icebp
mov
mov
push
cmp
mov
mov
adc
data16
cld
or
lret
mov
pop
sbb
xchg
and
repz
mov
rorb
cmpsl
sub
pushf
dec
das
lret
iret
pop
pop
jae
push
call
pop
push
insb
adc
pop
ljmp
inc
fs
scas
call
inc
enter
loopne
mov
in
sbb
xor
lret
popa
ljmp
mov
mov
adc
mov
xchg
int3
dec
jno
subb
cltd
fwait
icebp
and
xlat
cmp
xchg
dec
cmp
into
lea
and
dec
sahf
addr16
cmp
aad
data16
cmp
push
dec
data16
pop
fsubr
sub
xor
adc
push
fnsave
xchg
inc
inc
imul
pushf
cmc
dec
loop
jle
outsb
push
mov
lea
xor
and
and
ret
imul
outsl
pop
sub
es
outsl
inc
sbb
sbb
into
xchg
cmp
aaa
lahf
push
mov
ret
lea
dec
jb
xor
sub
cs
adc
adc
xchg
add
xchg
fdivrl
lret
hlt
repz
sbb
daa
cwtl
mov
iret
mov
lret
aad
push
stos
and
jns
or
and
jmp
aam
xor
repz
xchg
mov
addr16
sbb
add
out
lds
dec
out
hlt
pop
or
sbb
jmp
nop
repnz
test
push
fwait
jp
sub
rclb
es
add
sub
iret
das
inc
or
jbe
jbe
ret
fs
lods
pop
mov
xlat
mov
pop
mov
xchg
popf
idiv
push
ljmp
test
mov
mov
xor
stc
push
and
adc
shl
pop
xchg
hlt
jae
pop
stos
pop
ja
imul
inc
arpl
int3
pop
sub
nop
call
inc
dec
xor
mov
dec
jne
fdivl
dec
jae
ds
jb
mov
jle
test
repnz
mov
add
sbb
adc
dec
pop
pop
push
aam
cld
or
repnz
arpl
mov
add
aam
call
imul
dec
jnp
xchg
lods
pop
movb
je
mov
push
popa
aam
pusha
shll
jb
pusha
dec
pop
loopne
push
jbe
aas
cmp
add
stc
punpckhwd
pop
aam
iret
jne
pop
add
cwtl
mov
jmp
imul
les
mov
in
lds
jns
bound
xchg
lods
enter
push
fildl
push
mov
and
loope
js
dec
jg
out
cmc
aaa
add
adc
arpl
push
xchg
cld
popa
lods
lods
aam
pusha
pop
xor
pop
xchg
jmp
add
cmpb
inc
or
dec
test
mov
sahf
je
push
out
xchg
nop
add
mov
outsl
inc
loopne
xor
fidivl
xchg
mov
lock
jg
push
sbb
je
push
loop
orb
xchg
pop
inc
insl
cwtl
cmpl
sub
fwait
and
aam
js
lcall
ret
xchg
aam
sar
xchg
imul
outsb
mov
cmp
sub
pop
mov
fistl
sbb
add
cmpsl
imul
stc
push
push
xchg
pop
rol
pop
lods
add
sub
sub
mov
xorb
scas
cld
cmp
dec
and
xor
mov
fldt
fiaddl
ret
pop
adc
nop
das
jle
and
jae
je
push
dec
jne
pop
addl
stc
dec
outsl
mov
dec
hlt
mov
scas
out
out
sub
inc
adc
cmc
xchg
adc
jbe
push
jae
lods
ret
xchg
js
xor
pop
je
rcrb
lock
out
mov
push
xchg
popa
inc
sbb
cmp
xchg
push
inc
sti
sub
movb
call
cmp
scas
lods
add
mov
jne
fiadds
ret
adc
mov
out
cmp
inc
les
push
push
mov
inc
ljmp
addr16
cs
jns
cmpsb
dec
and
xchg
add
xor
add
popa
das
inc
je
mov
lahf
sti
dec
push
addb
pop
leave
pop
insb
jbe
test
cltd
cmc
fsubs
inc
popa
mov
or
jae
sbb
jecxz
pusha
add
cmc
xlat
ljmp
clc
sti
push
mov
insb
mov
sbb
sub
cli
stos
jnp
testb
inc
loop
out
ds
xchg
pop
shll
arpl
fs
adc
mov
cmp
sahf
cwtl
stos
je
mov
insb
lods
mov
mov
push
clc
add
loopne
repz
push
ret
or
jl
shrl
cmp
mov
sub
fdivr
inc
dec
pop
xor
jp
stos
mov
sbb
fwait
cvttps2pi
stos
xchg
outsl
pop
add
sbb
fcompl
push
ret
sbb
inc
xchg
imul
negl
or
pop
nop
inc
inc
sbb
push
mov
scas
mov
rcrb
rorb
mov
nop
push
cmp
xor
dec
pop
cwtl
dec
pusha
mov
or
xor
int3
mov
in
mov
sub
xor
sbb
mov
dec
push
or
cld
sarl
mov
and
cmp
dec
movl
sub
icebp
lock
push
push
dec
repz
cmp
mov
adc
insl
fld
dec
pop
mov
xchg
mov
inc
iret
dec
inc
stos
mov
cmp
jmp
jbe
js
push
jb
aad
inc
insl
inc
jecxz
adc
lea
push
cmp
jl
mov
pop
sti
fcoml
mov
cli
jle
jno
mov
mulb
pop
mov
xchg
cwtl
ljmp
rcl
xchg
push
mov
rcrb
xchg
jo
int3
cmp
jo,pn
bound
push
imul
lret
fnsave
inc
hlt
pop
xchg
dec
repz
dec
cli
jp
mov
call
out
push
mov
add
cli
mov
adc
cmp
dec
lock
sub
and
mov
xchg
sbb
pop
sbb
cli
aad
sub
jne
lret
sub
xlat
ret
xchg
pushw
inc
aaa
mov
scas
bound
push
pop
sub
pushf
pop
bound
divb
adc
iret
cmpsl
stos
sbb
cmpxchg
popf
push
ja
inc
jae
push
test
rsqrtps
add
jae
pop
xor
movl
orb
ret
adc
ret
pop
jp
mov
pop
lret
xor
mov
test
in
pop
fbstp
popl
cld
leave
sbb
es
lods
sub
mov
enter
ja
sub
mov
popa
arpl
sarb
out
mov
into
movsl
jno
call
push
sub
loopne,pn
add
sub
pushl
jge
daa
lds
rol
cmp
cmp
push
test
ljmp
outsl
jns
popf
pop
mov
in
jb
inc
fcoms
jl
xlat
and
sbb
push
jp
add
adc
pop
lahf
jnp
pop
insl
faddl
push
mov
scas
push
inc
inc
xchg
jno
cmp
and
jo
insb
or
mov
dec
pushf
xchg
dec
cwtl
sbb
pop
and
xchg
fistpl
adc
repnz
push
jae
dec
in
jecxz
imul
pop
enter
cmp
sahf
lret
cmp
in
sub
cmp
je
mov
pop
mov
adc
jns
dec
jo
in
loopne
sub
push
xchg
mov
mov
ret
mov
ja
inc
adc
movsl
loopne
iret
pop
cmp
add
xor
mov
sub
inc
nopl
out
mov
jge
fstpt
jp
and
xchg
and
popa
xchg
and
jno
scas
push
push
pop
sbb
push
in
xchg
sub
xlat
out
scas
and
loop
mov
and
sahf
lret
cli
push
call
xchg
dec
lods
mov
ret
xor
hlt
dec
arpl
sarb
call
xchg
mov
mov
div
sbb
sti
fndisi(8087
test
ja
inc
aaa
lock
or
mov
pop
mov
xor
mov
cmpsl
dec
outsl
mov
div
loope
mov
adc
fs
repnz
mov
lock
xchg
sbb
mov
cmp
inc
cli
insb
je
repnz
cltd
cmp
push
and
sub
mov
pusha
cmc
push
ss
into
repnz
out
push
adc
sub
insl
repnz
loop
lock
out
mov
into
push
test
sub
adc
aam
push
push
in
loope
jle
fwait
cld
cmpsl
or
xchg
sbb
add
ficompl
fildl
nop
outsb
sbb
mov
mov
and
scas
aam
jl
lds
aas
outsl
inc
mov
adc
dec
pop
push
sti
insb
or
xor
in
adc
mov
out
mov
inc
push
mov
pop
out
xor
lea
push
imulb
and
sbb
sbb
adc
adc
js
in
mov
jns
cmp
lret
pop
or
jbe
push
or
and
fstps
test
inc
cltd
and
sti
arpl
sbbl
and
sbb
sbb
scas
add
add
es
jae
shl
mov
test
rclb
out
cmp
and
data16
or
jl
rolb
lahf
outsl
and
stos
test
sbb
mov
push
inc
cmp
cld
and
pop
movsl
shll
out
in
and
sub
lcall
subl
add
sahf
sub
loopne
or
xchg
pusha
loopne
nop
jp
out
cmp
mov
enter
push
add
mov
divb
insl
xor
or
rcll
aaa
inc
shll
clc
je
sbb
lods
sub
lds
stc
fsubl
orl
push
fimull
fldl
out
in
dec
cmp
in
push
pop
jb
das
cmp
iret
aad
mov
xor
or
jmpw
add
xchg
xchg
movsb
nop
fidivl
xrelease
sub
dec
mov
cmp
out
lods
ret
into
test
sahf
cwtl
sti
pop
lea
dec
loopne
sahf
mov
out
cmp
in
mov
es
jo
repnz
loopne
dec
popf
mov
sbb
in
andb
jmp
cmpsl
sub
xchg
cmpsl
loop
xor
mov
inc
lods
add
lods
jp
dec
push
insl
cld
inc
pop
cmp
out
ss
pop
shr
or
popf
cld
jno
adc
jmp
add
xchg
jle
scas
pop
sub
test
fcmove
stos
lods
daa
and
jne
lods
ljmp
pop
not
pop
dec
xchg
jne
xor
lods
adc
ljmp
add
mov
rclb
mov
xchg
xchg
outsl
mov
mov
jae
scas
adc
sub
das
jo
sbbl
aam
pop
xor
lock
push
pushf
out
int
stos
nop
or
mov
dec
shrl
sub
outsb
xorb
lods
xor
stos
push
sarl
mov
jb
je
dec
ljmp
outsb
add
cmc
xor
pop
fisubs
popf
mov
cmovp
leave
mov
arpl
incb
push
pushl
loopne
fistps
in
or
mov
std
fidivl
sti
push
fs
call
int
jae
fdivrp
cmpsl
into
in
sti
leave
xchg
mov
jmp
fwait
push
dec
and
lret
sbb
add
sub
call
cmp
push
dec
shlb
mov
and
shlb
adc
test
mov
loopne
inc
cmpsb
fdivs
ds
lret
out
imul
cmp
fldcw
adc
and
pop
push
xor
pop
mov
stos
orb
inc
adc
in
xlat
or
fcomps
jp
or
add
adc
inc
jbe
lahf
or
push
lcall
fmul
jns
jle
pop
pop
ja
or
adc
aam
sbb
mov
dec
call
jo
jle
fdivp
hlt
sbb
ret
sbb
dec
cli
lret
push
add
jge
data16
or
nop
push
dec
mov
divb
mov
mov
ficompl
pop
pop
jmp
insl
test
loope
or
or
imul
sbb
mov
jno
and
ds
jge
xor
push
outsb
cmpsl
subb
out
and
in
cmpb
push
push
lock
rcll
dec
and
sti
and
pushf
mov
jmp
sub
in
std
inc
loopne
xchg
mov
inc
xchg
imul
adc
das
mov
in
xor
adc
es
mov
loopne
xchg
inc
fistpl
push
fistpll
js
pop
fbld
je
mov
repnz
pushf
in
xor
pop
js
aam
insl
inc
cmp
addl
add
fyl2x
popa
stos
dec
and
ds
xchg
movsl
add
outsb
sub
mov
loope
mov
xor
mov
scas
iret
xchg
jne
in
cmp
jbe
movsb
imul
out
mov
cltd
das
push
add
fidivs
mov
jecxz
cltd
inc
popa
adcb
enter
xor
mov
pop
orl
jae
pop
icebp
test
dec
push
test
inc
cmpsl
stos
dec
addr16
insl
movsb
mov
lea
push
and
incl
mov
jp
ret
jecxz
mov
popf
aam
push
jne
push
pushf
sbb
xchg
dec
sbb
mov
xchg
scas
popa
movsb
cwtl
xor
scas
out
mov
lea
pop
outsl
shlb
jo
mov
mov
push
aam
sub
loope
sbb
test
aad
int3
or
xchg
ja
test
jl
xchg
sbb
mov
test
jnp
cli
imul
jle
daa
and
xor
xchg
sbb
fcmovnbe
or
cmc
pop
jnp
sbb
or
fs
repnz
call
idivl
inc
cmp
dec
push
loopne
add
push
push
or
sbb
add
sub
fst
sub
push
mov
push
mov
mov
cli
pop
mov
or
push
mov
int3
or
cli
inc
xorl
scas
lret
or
imull
clc
sbb
lds
stos
decl
jb
mov
mov
in
lahf
mov
xchg
mov
divl
sub
and
sbb
push
sub
xor
fwait
outsb
and
xchg
jle
dec
mov
out
jnp
icebp
fisubl
mov
imul
dec
or
adc
aam
mov
lods
insb
dec
mov
push
cld
sbb
fdivs
call
cs
out
and
pop
scas
cmpsl
aad
push
sbb
push
out
popf
imulb
xor
nop
push
xchg
sub
sub
iret
mov
stos
subl
push
sbb
cmp
cmp
iret
sahf
gs
jmp
loope
outsl
push
xchg
addl
sbb
hlt
mov
mov
add
inc
js
outsb
inc
or
cld
mov
fdivp
nop
cmpsb
pop
cs
push
lods
lahf
scas
xchg
xchg
mov
pop
ret
nopl
lds
jo
addl
aad
fmulp
cmpsl
negl
inc
out
test
sub
cs
lock
addr16
dec
stos
lds
in
push
jbe
sub
lods
lcall
adc
cmpsl
cwtl
sbb
cmc
add
je
pop
addr16
xchg
loopne
sbb
call
mov
mov
call
xchg
data16
push
sbb
adc
inc
xchg
lret
in
xor
inc
jmp
jae
fistpll
sbb
xor
arpl
nop
mov
sbb
add
stos
sahf
pop
pop
cld
cwtl
add
push
loop
fsubl
out
jno
jne
loope
add
into
xchg
sbb
les
jge
shr
gs
into
add
mov
lods
sbb
fbld
test
mov
or
push
inc
pop
cwtl
sbb
dec
loope
push
push
xor
outsb
mov
outsb
test
cltd
pop
inc
cltd
or
les
outsb
jbe
xor
cmp
lret
adc
xchg
sub
or
mov
cltd
inc
lods
in
imul
notb
dec
in
sbb
xor
sar
push
xor
push
call
jmp
xchg
xor
adc
and
cmp
fisttpl
fwait
insl
xchg
mov
lret
in
push
or
jl
jmp
repz
mov
fisubl
pop
out
jne
dec
dec
ss
into
sbb
test
divl
lret
and
sub
push
loopne
mov
xor
sti
dec
icebp
add
push
push
pusha
push
xchg
aam
in
call
xchg
or
sti
dec
pop
push
mov
xor
loopne
mov
in
rcrl
mov
push
sti
loop
and
mov
movsb
or
push
xchg
jb
hlt
add
imul
enter
popf
mov
scas
mov
test
fdivp
push
cltd
jle
in
dec
scas
push
shr
xchg
dec
cwtl
lret
xor
and
ret
loop
xor
rolb
movsl
hlt
xorb
mov
inc
xor
and
add
das
stc
adc
cmp
cmpsl
or
cmp
mov
repz
data16
add
imul
ds
jmp
jge
xor
jns
inc
cwtl
loope
iret
pop
jbe
cmp
cmp
pushf
push
inc
repz
jns
movsb
mov
sub
dec
loope
jge
cmp
cmp
xor
mov
loopne
inc
or
jecxz
ret
out
in
sarb
ret
pushf
lods
pop
jmp
lock
inc
aas
scas
pop
cli
dec
mov
pop
push
insl
sbb
or
xor
ja
and
pop
mov
push
xor
adc
jmp
rcrl
test
rclb
xchg
fs
out
rcll
ljmp
cmp
inc
and
mov
push
icebp
popf
dec
div
mov
jg
rorl
mov
mov
push
pop
ss
outsw
or
lock
movsl
movb
push
sti
ror
test
push
addr16
mov
mov
mov
lock
adc
and
xchg
sbb
cmp
mov
mov
aas
jns
je
mov
push
lret
mov
imul
push
xor
mov
and
out
aad
fisttpl
call
sub
sub
into
jnp
mov
adc
pop
fsubrs
mov
xchg
clc
aas
mov
cld
push
xchg
addr16
sub
mov
popa
xchg
lock
jns
imul
jae
pop
sti
sub
cltd
dec
inc
ret
jl
je
push
in
ret
popf
in
mov
mov
pop
mov
xor
les
xor
pop
mov
repnz
cld
sub
mov
scas
imul
inc
stos
sbb
mov
pushf
sub
lock
jno
mov
mov
insb
push
jo
ffreep
test
loop
cs
inc
adc
shlb
sbb
jge
in
xor
xchg
or
incb
cld
lahf
dec
push
cmp
ret
fnstenv
jo
das
rcrb
add
popa
mov
mov
ja
push
add
dec
mov
lds
pop
or
and
push
xchg
mov
ret
push
addr16
ja
mov
dec
pop
data16
push
and
mov
test
inc
sbbb
xchg
xor
test
inc
rcrl
les
insl
cmp
or
mov
inc
and
mov
inc
rorl
dec
icebp
mov
loopne
adc
rol
sarb
add
dec
xchg
add
cmovo
jp
xchg
mov
cmp
jne
xchg
push
inc
dec
xchg
push
sub
cmpsl
xor
clc
insb
push
out
ret
mov
das
fnsave
popa
aaa
jp
adc
and
rcrb
pop
or
inc
loop
mov
orb
jmp
xor
push
mov
bnd
lds
mov
loope
sub
cwtd
sub
nop
mov
jl
hlt
test
popa
mov
les
ret
xor
jl
jae
int3
xor
fbld
pop
mov
inc
lods
leave
or
mov
hlt
pop
push
imul
insl
ret
inc
dec
out
xor
jbe
stos
xchg
sbb
std
xchg
fucomip
fwait
mov
or
ret
inc
sbb
mov
push
cwtl
jmp
pop
jle
gs
cmp
je
aaa
jl
shlb
dec
jns
inc
jle
jp
add
movsb
adc
adc
insl
and
push
mov
imulb
or
pop
sbb
pusha
loopne
fst
sub
nop
cwtl
mov
movl
dec
les
adc
cmp
pushf
lds
pop
add
dec
xchg
fisubrs
push
pop
cmp
in
cld
fs
adc
shl
cwtl
out
fstl
sti
push
mov
fcomip
repnz
adc
and
jno
add
dec
loop
xor
pushf
in
outsl
mov
jg
xchg
mov
movb
and
addr16
adc
cmp
xor
cwtl
scas
xor
add
scas
addl
clc
jl
in
xorl
dec
pop
xor
mov
sahf
movsb
push
jle
int
lock
fsubl
in
mov
pop
pushl
scas
xchg
ficompl
stos
enter
xchg
ljmp
stos
xor
add
jge,pt
push
test
ljmp
fcomi
les
lods
ret
popf
or
into
dec
sbb
and
mov
aad
pop
idivb
enter
push
jge
dec
movsb
xor
das
mov
fs
lods
fstp
and
repnz
and
test
subl
cltd
arpl
idiv
mov
mov
or
dec
bound
jmp
mov
or
jge
inc
fcoms
add
outsl
insl
add
mov
pop
call
movsl
push
push
imul
nop
test
stos
jb
xor
fbstp
dec
shl
fcomps
loop
fldl
popa
push
mov
rcrb
cmpb
add
pop
push
repnz
mov
push
clc
ret
ficoms
test
jae
sub
sub
sbb
or
add
in
inc
into
add
add
xchg
ret
jne
pop
xor
push
sub
or
mov
mov
xchg
adc
mov
in
ja
pop
jnp
push
mov
push
imul
into
dec
adc
lret
inc
mov
jmp
xor
push
jge
ficoml
jmp
push
pop
dec
dec
bound
out
add
adc
adc
add
std
loopne
movsb
cmp
ret
add
insb
xor
jmp
mov
xor
fildl
rcrl
int3
inc
jl
test
ds
pop
push
mov
push
orl
or
add
lahf
fisttpl
mov
inc
xlat
call
jb
push
and
push
jmp
inc
repz
out
push
or
insb
sti
std
in
jp
ficoml
mov
icebp
repnz
xchg
outsb
faddl
pop
dec
or
inc
dec
xlat
add
enter
xor
jbe
or
iret
ja
aaa
pop
clc
out
dec
lret
scas
jge
push
adcb
in
loope
ret
pop
lods
mov
mov
dec
jecxz
divps
sub
test
mov
mov
adc
adc
call
aad
in
pop
jo
dec
femms
in
xor
test
daa
jle
xchg
mov
sub
cmc
xchg
adc
pop
dec
mov
and
mov
mov
dec
jmp
add
sarb
addl
dec
or
or
fbstp
mov
jne
lcall
ret
mov
mov
pop
xchg
jae
xchg
xchg
push
inc
cmpsb
jne
lods
adc
jo
lcall
mov
push
or
je
ret
int
fucomip
movsb
aaa
clc
push
scas
notb
imul
lods
call
mov
xchg
stc
gs
das
dec
or
pop
pop
and
adc
arpl
fs
fdivs
xor
imul
fiadds
sub
cmpsb
lret
ret
push
cmp
push
stc
jp
add
stos
xchg
jb
in
imul
outsl
mov
mov
bound
adc
cmp
repz
push
cmp
ss
mov
es
jo
mov
movb
push
cmp
jb
fcom
pop
shr
lods
or
adc
cmp
cmp
jb
or
cltd
sub
jae
fmul
iret
add
jp
pushf
ror
ret
cmpsl
enter
xchg
jb
mov
and
mov
jmp
test
out
in
testb
out
fwait
add
pop
fbld
ja
push
sbb
daa
xchg
data16
loopne
ja
rorl
or
cs
mov
push
and
dec
push
sub
mov
pop
ja
add
sti
adc
push
add
sbb
pop
lret
in
cli
imul
fisubrs
dec
mov
and
xchg
xchg
mov
sub
aam
add
jge
pop
shrl
cwtl
scas
xorb
xchg
cmpsb
aas
adc
or
repz
push
sub
arpl
inc
fcoms
movsb
fs
in
add
cs
std
bound
aad
sbb
andb
enter
imul
dec
std
lret
mov
imul
inc
into
xchg
jb
int
push
xorb
scas
mov
dec
stc
subb
into
jl
ds
adc
outsl
mov
int
and
cmp
bound
lea
jge
test
xor
popf
inc
add
subl
add
loope
dec
loopne
mov
in
jnp
in
xor
stos
add
add
dec
sub
and
push
mov
aas
inc
push
adc
cmp
aas
push
js
dec
mov
outsb
mov
pushf
jg
add
mov
xchg
lods
jne
jmp
jbe
push
in
js
and
popf
xchg
inc
pop
flds
pop
mov
nop
cmpsl
lea
mov
std
adc
dec
cld
shlb
jecxz
adc
outsb
xchg
or
mov
dec
or
sbb
shl
lods
cmp
mov
xor
ljmp
sbb
jae
ja
movsl
dec
inc
lea
xor
test
dec
icebp
outsb
mov
clc
jp
add
mov
mov
mov
out
mov
push
imul
and
mov
push
in
mov
mov
stos
test
mov
enter
pop
xchg
scas
jge
mov
jo
push
fld
lret
dec
jp
rcrl
mov
test
push
push
dec
mov
scas
mov
or
mov
es
mov
jmp
cmpsb
sbb
enter
jle
pop
cwtl
pusha
pop
mov
sub
in
pop
pop
movsb
stos
mov
add
ret
mov
mov
push
fadd
jmp
shr
and
xlat
sub
cmp
mov
lods
je
jmp
sbb
pop
xchg
sbb
cmp
mov
push
leave
std
jmp
repnz
adc
loop
xchg
cld
push
scas
pop
jbe
adc
xchg
add
lret
dec
jmp
jmp
xchg
fdiv
cmp
xlat
mov
fdivrl
sub
xlat
cmpsl
jno
xor
sti
xor
adc
inc
lea
dec
jae
lods
jl
popf
hlt
adc
mov
jl
data16
or
inc
add
imul
push
xchg
test
cmpsb
aas
cmpsb
adc
jo
add
cmp
mov
lods
xchg
mov
scas
mov
xchg
sub
cmp
jge
mov
js
dec
mov
lcall
fcomps
adc
das
and
call
in
es
movsl
test
inc
loop
hlt
and
adc
mov
je
add
popf
cmp
dec
mov
in
inc
mov
inc
call
inc
adc
aam
repnz
iret
sbb
mov
scas
or
movsl
push
jmp
cmp
xchg
outsb
addr16
in
mov
xchg
aad
push
or
pop
jg
ficompl
and
pop
fcomi
sahf
es
jecxz
mov
mov
lret
mov
in
jecxz
mov
pushf
outsl
mov
loopne
nop
arpl
scas
mov
sbb
add
jno
orb
inc
lea
pop
xor
out
imul
mov
xor
gs
rorl
nop
sub
inc
dec
xlat
psrld
stos
add
cmp
sbb
mov
push
cmp
in
in
sbb
inc
xchg
and
sbb
insb
adc
repnz
icebp
and
orb
jno
push
or
into
sub
enter
mov
sub
les
xor
inc
jmp
arpl
and
mov
and
add
gs
and
iret
jmp
adc
mov
lods
pop
dec
ljmp
dec
mov
test
and
mov
xor
jns
incl
test
lods
imul
dec
lock
jns
pop
icebp
mov
fildl
fmull
push
mov
mov
fimull
mov
nop
fistps
ljmp
pop
ret
jb
arpl
xorl
mov
call
xorb
push
xor
fbstp
das
adc
pop
lds
stos
lret
dec
sub
mov
cmp
icebp
orl
dec
test
and
test
inc
movsl
push
out
loopne
xchg
fdivrl
jle
mov
jb
jge
pop
dec
sbb
push
jmp
mov
outsl
inc
shll
jle
cmpsb
stos
mov
ret
insl
add
scas
push
xchg
mov
pop
fs
and
fildll
in
add
mov
mov
inc
mov
add
repz
xchg
cmpl
shr
imul
das
inc
data16
aaa
sahf
mov
cltd
je
sarl
mov
int
push
jo
sub
subl
mov
xchg
lods
mov
xchg
mulb
bound
mov
cli
lock
fdivs
popf
imul
sub
mov
mov
das
or
sbb
jge
lret
lds
xor
popa
call
fisubl
adc
subl
in
or
into
xchg
popf
roll
aam
scas
dec
sub
test
mov
es
stc
dec
push
mov
xor
mov
push
push
inc
push
scas
jge
fcoml
popf
jecxz
rcr
in
or
push
mov
or
out
mov
pop
shrl
jp
sahf
dec
pop
mov
sbb
dec
pusha
dec
fs
aaa
icebp
jne
push
out
adc
push
js
inc
mov
cmp
cmc
in
mov
outsb
sub
mov
dec
scas
sub
sbb
jo
push
jno
adc
leave
repnz
pop
or
jae
pop
jmp
ret
shr
push
push
stc
outsl
cmp
popa
dec
test
repz
pop
sti
sbb
push
aaa
call
and
mov
rcll
jnp
mov
in
mov
xchg
mov
push
xchg
inc
cmp
outsl
cmp
hlt
leave
mov
push
icebp
mov
lods
cmp
push
push
int
push
jle
test
leave
mov
mov
adc
in
xorb
les
imull
dec
mov
je
and
jecxz
outsl
repnz
push
daa
adcl
push
nop
lahf
mov
or
inc
fstps
xor
jne
cmc
push
cs
lahf
test
xor
stc
jge
adc
adc
repz
xchg
cmc
test
sub
xor
jecxz
sarb
mov
jge
cmpsb
push
jo
cmp
sub
stos
mov
lock
std
sahf
mov
adc
pop
push
adc
scas
pop
mov
dec
jae
out
ja
repnz
mov
popf
scas
add
pop
pop
cmpsl
xor
int3
dec
cli
arpl
mov
stc
and
pop
adc
cmp
or
int3
lods
ret
dec
ds
add
loop
lock
out
push
es
pop
lods
jbe
outsl
aaa
pop
xor
pop
push
hlt
das
mov
out
mul
push
les
popa
sub
int3
sbb
loop
repz
jb
push
cld
cmpsb
mov
xor
fiaddl
pushf
and
mov
inc
push
sbb
stc
xor
fwait
rcr
in
cwtl
cmp
in
out
insl
enter
fisubs
and
sub
jb
loopne
call
cmc
stos
cwtl
jnp
push
cmp
pop
add
sbb
sbb
iret
icebp
js
push
mov
cmp
jns
mov
pop
jmp
iret
add
loope
aaa
lahf
cli
cli
jb
sbb
jns
lds
adc
bound
or
dec
xchg
cli
push
std
lds
mov
sbb
pop
std
mov
lcall
aas
sub
jnp
add
jle
call
jmp
lret
xchg
push
or
insb
add
int
cmp
mov
push
cmp
mov
push
cmp
aad
int3
shlb
test
shr
sti
push
sbb
sahf
in
pop
jg
jbe
jb
ret
das
pop
sbbb
and
out
jmp
fimuls
mov
xchg
dec
sub
xor
sbb
xor
jle
out
fucomi
stos
ss
test
sbb
repnz
sti
sbb
xchg
xchg
pop
push
mov
fisubrl
aam
push
jno
push
cld
sbb
aam
and
mov
rcl
sbb
mov
xchg
xor
into
ficoms
out
cli
daa
pop
jae
je
push
mov
sbb
int3
sbb
cld
mov
sahf
call
dec
repz
xor
mov
arpl
mov
mov
out
orb
psrlq
sbb
iret
cli
jmp
mov
xchg
fwait
lds
bound
popf
aaa
outsl
push
call
mov
jae
or
mov
imul
mov
mulb
push
sbbl
std
add
lds
loope
popf
lret
mov
das
stc
sbb
mov
and
dec
and
add
fisubrs
fldenv
ss
add
cmpl
or
les
pusha
inc
dec
mov
adc
jmp
loopew
dec
xchg
sbb
sbb
cmc
mulb
scas
adc
cmpl
fcomps
or
adc
jo
nop
mov
stos
xor
add
into
idiv
cmp
arpl
push
lcall
rcrb
or
cmp
aad
insb
sub
xor
lret
cmp
mov
sub
pop
push
cmp
mov
in
andb
data16
adc
cwtl
xorb
xor
mov
mov
dec
push
xchg
addr16
pop
ljmp
cmp
pop
xor
sub
jno
test
sub
lods
pushf
mov
and
cmp
stos
lea
cmc
mov
sub
out
out
test
inc
cld
inc
std
adc
outsl
je
jno
adc
inc
pop
enter
scas
mov
sbb
xor
popa
mov
mov
pop
push
sbb
lret
lret
xchg
sub
fs
lods
addb
inc
jg
mov
stos
fcom
aas
test
test
stos
or
jp
sbb
mov
hlt
cwtl
fadds
push
mov
mov
and
jmp
xchg
fidivrs
in
jae
je
and
push
scas
movsb
jp
movsb
call
jle
fs
xor
pop
mov
sti
inc
popf
and
xor
fwait
cmp
dec
dec
pushf
cs
cmp
aam
leave
rol
sar
jle
xchg
push
lcall
iret
aam
jle
add
inc
mov
sub
push
pop
in
push
dec
cmp
and
mov
xchg
or
ds
cld
fwait
add
outsb
outsl
sub
insl
int3
cld
daa
push
cmp
mov
adc
dec
push
sbb
sub
les
mov
jb
movsb
jno
inc
repz
std
pop
lea
scas
test
mov
add
shll
je
imul
lock
sub
dec
and
cmp
xlat
inc
push
outsb
jo
daa
call
sub
cltd
arpl
adc
mov
cmc
popf
loop
or
mov
jle
outsl
inc
rorb
call
xlat
movsb
mov
jl
repz
cmpsl
xchg
mov
inc
jnp
stos
hlt
gs
add
stc
testb
out
add
imul
jo
cmp
jno
lock
or
cli
inc
sbb
dec
inc
jae
out
popl
imul
pop
mov
sbb
jo
movsb
lds
iret
stos
cmp
jnp
sub
fimull
aaa
cs
mov
add
rclb
inc
popa
fiadds
push
push
cltd
stos
test
iret
fs
cmc
and
jecxz
lret
push
dec
outsl
cltd
xor
cmpsb
and
add
lahf
inc
repnz
cltd
xor
lret
and
add
jl
and
jae
pop
xor
addr16
xor
fnstenv
lret
pop
enter
push
js
or
int
test
hlt
lret
xchg
leave
ljmp
lahf
sarl
mov
fcomp
dec
lea
and
cmp
lahf
shrl
inc
arpl
nop
nop
in
jmp
test
sbb
sub
xor
add
sahf
mov
dec
stc
mov
in
pop
push
adc
mov
cmp
fstps
rol
int3
push
inc
out
and
stos
imul
popf
mov
pop
jae
aad
popf
sub
mov
leave
mov
or
mov
out
mov
shrl
stc
mov
xchg
pop
jl
xchg
popf
cli
jo
xchg
outsb
test
mov
and
rcll
sub
mov
mov
mov
inc
outsb
add
push
xchg
loope
xor
cmc
push
cltd
ficompl
dec
cmp
sub
mov
enter
push
int3
addr16
adc
jbe
outsb
jecxz
push
lock
gs
inc
imul
stc
in
mov
test
lret
iret
popa
or
lods
push
sbb
sbb
or
ljmp
les
icebp
ret
pop
and
add
dec
in
add
push
jge
fwait
jg
fimuls
xor
jp
popf
or
ja
lahf
jae
dec
stos
aas
push
inc
pop
sbb
scas
mov
sub
add
popl
outsb
cmp
sub
fdivrp
mov
testb
adc
clc
and
adc
imull
sub
ss
dec
std
ds
or
jbe
xor
push
jns
lret
or
xor
sti
scas
jno
xchg
dec
daa
sarl
les
mov
mov
push
sbb
push
scas
aas
cltd
into
clc
aaa
lods
rorb
dec
push
mov
insb
sbb
sub
out
aaa
xlat
into
and
mov
insl
lea
add
loop
js
push
xor
mov
inc
xchg
dec
sbb
test
cld
or
mov
xchg
mov
xor
mov
push
inc
int3
xchg
in
addb
or
inc
ret
sub
push
scas
or
nop
test
movsb
insl
cmc
add
lds
bnd
movsb
push
std
rclb
inc
or
sbb
dec
add
test
fdivrs
scas
inc
mov
sahf
dec
pop
pop
xchg
jge
mov
cmpsb
push
mov
sub
pushf
test
scas
dec
pusha
push
enter
insb
out
paddw
mov
cmpsb
test
test
push
cmp
jmp
xchg
call
adc
bound
pop
push
mov
push
int
into
jl
sti
int3
fdiv
cld
in
mov
mov
xchg
sbb
cs
push
inc
std
sub
ss
and
dec
loopne
mov
mov
xchg
inc
mov
inc
pop
mov
inc
cmp
fsubrs
gs
sbb
loopne
adc
rcl
mov
cwtl
xor
shrl
shlb
icebp
movsl
xchg
push
sub
arpl
or
test
dec
aaa
mov
enter
dec
nop
sub
xor
test
pop
mov
sub
mov
push
pop
or
mov
and
add
fwait
mov
jmp
jb
iret
rcrl
cmp
bound
pop
rcrb
mov
xchg
rcrb
pop
or
mov
out
fiaddl
sti
xor
into
scas
push
icebp
or
xchg
pushf
sub
cmp
ds
add
pop
fidivs
sub
fcoms
andl
xor
adc
int3
push
mov
arpl
ficoms
mov
mov
mov
aaa
add
bound
and
enter
jmp
mov
sub
stos
iret
insl
repnz
popa
push
and
mov
mov
dec
cs
add
shll
je
mov
adc
jae
rcll
aas
cmpsb
inc
negl
xor
dec
nop
fsubl
daa
ds
lcall
repz
orb
pop
mov
pop
or
mov
mov
push
ficoml
enter
fs
mov
xlat
push
push
push
sbb
inc
push
cmp
and
add
jl
rclb
push
xchg
clc
in
or
inc
sub
add
daa
push
adc
push
out
pop
hlt
imul
pop
mov
add
mov
jbe
dec
add
mov
loope
or
in
and
adc
js
xor
stos
lahf
cmpsl
mov
sub
cld
jne
lea
lcall
pop
jbe
jle
mov
and
or
dec
add
fcmovnb
cmpsb
movsb
fst
xchg
sbb
sub
sbb
ljmp
xor
outsb
aad
adc
mov
lahf
out
popa
lock
pop
pop
fiaddl
or
jnp
jecxz
inc
adc
push
sarb
std
iret
pusha
mov
test
mov
hlt
dec
xor
fwait
icebp
and
jbe
imul
adc
outsb
xor
repnz
jl
jp
jl
movsb
and
jae
addb
in
scas
js
in
aaa
jb
ret
dec
daa
push
popa
lcall
sub
adc
add
pop
stc
add
ds
add
loopne
or
les
mov
sahf
inc
pop
mov
loope
xor
cmp
repz
dec
inc
dec
lods
ja
lds
xchg
stos
movsl
ljmp
or
pop
fdivs
ret
cltd
xlat
enter
jp
les
shlb
fstps
sub
and
test
fcmove
sbb
daa
and
add
add
notl
in
add
adc
cmc
pop
loop
pop
sarl
dec
je
ret
jmp
scas
xchg
cmpl
add
pop
and
shlb
jb
and
or
adc
sub
mov
jb
mov
jle
xchg
scas
popa
pop
loopne
sbb
jge
dec
sub
shl
sbb
das
gs
rol
cwtl
fwait
pushf
mov
sbb
or
add
push
dec
push
dec
movsl
dec
fimull
and
and
jns
xchg
or
push
dec
mov
shrl
aam
sub
shll
out
outsb
adc
enter
add
lret
loope
inc
fistpl
fcmove
jbe
dec
js
xor
sub
inc
mov
jns
aaa
ljmp
test
in
jo
aam
call
notl
sbb
test
adc
cmp
repz
add
mov
adc
outsl
rolb
aas
adc
push
iret
push
push
xchg
xlat
sbb
in
arpl
subb
into
cmpsb
movsb
rcl
or
mov
clc
inc
adc
clc
cs
in
mov
and
and
idivb
inc
fwait
cmp
push
lds
cltd
xchg
sbb
xor
pop
add
repnz
fmull
out
incb
pop
scas
cwtl
out
loopne
mov
loope
fwait
inc
std
cmp
lret
lods
xor
inc
shll
in
mov
les
sbb
int
cmp
adc
ja
xchg
pop
out
jg
inc
pop
jbe
cmp
xchg
loope
fst
pop
cli
xchg
sub
sub
adc
sub
cmp
xor
pop
sbb
leave
inc
cltd
add
mov
xchg
fdivl
scas
mov
lret
mov
push
rcl
jmp
mov
cmp
xlat
adc
data16
xor
jle
scas
ds
mov
and
jno
repz
aas
mov
pop
mov
inc
mov
or
jnp
test
pop
cmp
or
movl
jg
push
bound
rcrb
mov
icebp
inc
xchg
or
lret
cmpsb
push
mov
sahf
xchg
cmp
cmp
jecxz
adc
js
mov
jae
sub
jp
xchg
push
test
in
xor
xor
push
movsl
xor
jle
pusha
popa
loopne
xlat
aad
xor
bound
dec
addr16
xor
add
fsubr
xchg
shrl
out
sti
add
mov
mov
cmpsl
sbb
or
jb
ficompl
pop
or
dec
out
mov
pop
jno
push
cmpsl
pop
inc
pop
mov
rcrb
and
int
xchg
aad
loop
mov
pushl
lcall
jmp
lret
enter
mov
cmp
test
mov
xchg
out
cmpsb
cvtps2pi
lcall
test
aad
cmpsb
aam
jg
or
inc
lods
lods
push
mov
xchg
aas
cmc
insl
leave
insl
inc
dec
add
inc
fbld
popa
xor
lock
sub
ret
out
lret
mov
in
and
incb
xor
cmpsb
sub
inc
test
hlt
jg
hlt
mov
icebp
dec
data16
ljmp
jb
test
sbb
mov
mov
dec
sbb
cmpsl
clc
shlb
add
shll
mov
ja
pop
jae
inc
pop
nop
mov
popf
test
push
fisubl
testb
movsl
cmp
dec
in
push
adc
xor
xor
out
xor
xor
cmc
pop
mov
mov
nop
out
sub
adc
push
mov
push
es
mov
cld
clc
xchg
lret
pop
and
in
mov
xchg
in
aaa
lret
mov
cmp
enter
add
or
leave
popf
stos
not
sub
pop
adc
xchg
jg
pop
ds
push
dec
insb
jns
and
adc
mov
push
loopne
xchg
lahf
jmp
test
add
sbb
inc
fnsave
push
and
jb
sub
aaa
cs
fistl
or
fwait
call
cmc
inc
in
data16
push
movsb
sub
ret
in
xor
cmp
mov
movsb
xchg
and
insb
mov
xorl
xor
pop
jo
sub
jno
push
jp
cwtl
aam
sahf
test
popf
pop
inc
push
inc
sbb
push
shll
mov
push
fbld
aas
movsl
inc
xchg
popf
and
inc
push
mov
leave
outsl
dec
into
push
xlat
fidivs
out
and
loop
sub
pop
inc
and
mov
xor
loop
gs
pop
add
jle
loope
sub
out
shl
ss
insb
cli
into
fbld
outsb
xor
aad
ds
push
xlat
push
dec
jl
popa
out
pop
push
ja
xchg
jns
or
js
pop
iret
add
cltd
sub
mov
pop
lea
jno
ljmp
pop
xchg
cmpsb
or
std
and
orl
lock
pop
ret
dec
inc
cmp
pusha
push
jb
dec
inc
add
push
es
int3
dec
xchg
dec
or
push
sub
stc
pop
pop
int
or
inc
fcmove
popf
daa
js
bound
jb
or
int
lahf
popa
pop
daa
push
gs
jecxz
inc
in
outsb
cmpsb
sar
mov
sub
push
jl
cmc
inc
adc
movsl
movsl
dec
pop
into
dec
mov
cli
jge
mov
jno
or
in
sbbb
pop
xor
add
mov
jo
pop
lea
dec
insb
lods
or
sarl
out
out
shll
nop
std
insl
shlb
add
xchg
fcompl
add
int
xchg
xor
shll
inc
inc
adc
pop
mov
and
push
sbbl
mov
lock
ror
pop
xlat
mov
aam
fs
sbb
cmp
pushf
lods
xchg
pop
mov
lods
jns
cmpsl
insb
jbe
mov
ljmp
mov
lock
lahf
dec
xchg
mov
lcall
call
xchg
pop
adc
push
inc
and
mov
mov
or
pop
mov
jl
or
sbb
sbb
sub
shlb
rol
fcomps
cmp
push
pop
xchg
mov
jno
scas
jbe
jo
popa
pusha
inc
mov
mov
and
ljmp
aam
fstp
or
test
insl
push
cmpxchg
popf
test
mov
pop
pop
stos
insb
sbb
jl
jo
je
dec
loope
sbb
pop
int
aam
xlat
inc
movsl
inc
mul
or
jo
xchg
mov
xlat
push
jno
xchg
in
inc
xchg
jb
subw
out
jle
or
xchg
in
jo
jnp
xchg
mov
lea
into
into
push
orb
stos
stc
and
mov
push
cs
pushf
jae
dec
adc
mov
xor
sbb
lret
push
mov
das
lret
mov
xor
mov
std
jb
xchg
test
test
mov
lods
enter
imulb
cmpsb
mov
out
sti
mov
sbb
pushf
or
inc
outsl
int
movsl
mull
add
pop
scas
push
insb
into
outsb
sahf
iret
and
inc
bound
mov
push
cmp
cmp
push
fcom
out
insl
ror
mov
pop
lods
push
xor
hlt
cvtps2pd
jmp
fnstsw
or
cmp
sub
sub
cmc
sahf
and
std
insb
xchg
xchg
push
mov
ds
out
repz
xor
pushf
int
pusha
aaa
push
pop
decl
movsb
outsl
leave
or
or
jnp
jns
jb
mov
pushf
inc
lcall
jmp
add
aam
cmp
and
cmpsb
push
jmp
fwait
and
mov
cs
add
sub
cmpsl
pop
int3
daa
jb
pop
and
hlt
in
sbb
loope
add
adc
push
pop
shlb
lock
push
push
stos
push
cs
out
stos
jg
ret
popa
jns
push
sub
test
ror
sub
scas
fisubl
out
mov
lret
jg
test
push
push
or
rcrb
and
mov
ss
add
xor
mov
clc
ds
dec
aam
jmp
mov
xlat
movsb
dec
out
jo
or
pop
rcl
sbb
add
pop
sub
data16
pusha
inc
inc
test
jo
pop
mov
hlt
inc
mov
aas
inc
out
xor
push
inc
fsubl
movsb
pop
sub
jbe
and
out
or
add
es
sbb
mov
popf
pop
cs
daa
cmp
aam
push
mov
repnz
incl
mov
ret
push
xor
ss
mov
out
test
cmp
mull
xor
add
mov
push
mov
jns
xchg
xchg
fiaddl
pop
daa
idivl
mov
addr16
xchg
fildll
in
jge
xchg
popa
imul
and
and
adc
shll
cltd
sub
rclb
fdivr
push
push
pop
sub
test
jno
pop
push
arpl
or
mov
aam
jg,pt
mov
cli
out
jne
dec
subl
pop
testl
xor
imul
jecxz
and
jcxz
lahf
mov
mov
mov
mov
mov
ret
mov
push
popf
jns
jne
xor
repz
dec
add
sahf
jg
push
imul
popf
xchg
imul
lds
mov
jbe
mov
pop
addr16
mov
mov
lods
in
cmp
jbe
movsb
mov
daa
mov
mov
or
mov
idivl
mov
pop
push
rcll
mov
sub
mov
jecxz
movq
cmp
push
mov
popa
push
dec
dec
mov
sbb
into
xor
jl
fs
out
js
dec
jp
inc
xchg
push
es
xchg
and
fsubrl
jae
mov
adc
push
jne
sub
std
bound
xor
mov
shlb
sbb
daa
jp
push
pop
cmpsl
cmp
flds
jmp
test
pop
jbe
leavew
pop
faddl
cmpb
sbb
jne
test
stos
sbb
shrl
xlat
shrb
ljmp
inc
mov
or
cld
mov
out
and
push
cmpl
cmpb
pop
sbb
fstl
xchg
adc
stos
cmp
jp
sbb
xlat
popf
iret
clc
inc
ja
inc
ror
xchg
cs
jl
bound
inc
scas
pop
xor
loope
lea
fsubs
inc
adc
mulb
lds
frstor
js
sub
xor
push
xor
movsb
cwtl
mov
xor
in
lods
mov
into
and
mul
out
out
adc
xchg
push
pusha
sub
int3
mov
movsb
mov
idivb
aas
mov
aam
sarl
xor
cltd
jge
pop
or
std
cmp
popf
sub
pop
lods
jbe
cmp
scas
dec
cmp
leave
icebp
sub
faddl
sub
arpl
and
inc
pop
and
mov
aaa
or
stos
mov
pop
and
xchg
lcall
cmp
add
testl
xor
sti
fisubrl
movhps
out
or
mov
loopne
cmp
lcall
xor
add
dec
xor
mov
cs
hlt
int
stos
movsl
sub
aaa
lea
data16
addr16
cmp
out
insl
lods
mov
push
jo
jge
inc
jo
psrlw
hlt
insl
imulb
push
push
cmp
xchg
jns
sbb
cmp
pushf
mov
sarb
inc
data16
sub
stos
dec
pop
pop
and
mov
sub
ds
push
pushf
inc
dec
xchg
push
pop
cmp
xchg
cmpsb
leave
sub
adc
sub
sbb
popl
mov
pop
push
lret
imull
add
mov
xchg
stos
dec
add
mov
push
push
dec
pop
push
push
data16
mov
or
mov
inc
stos
idivl
jbe
xchg
mov
xchg
inc
stos
fiaddl
int3
shll
adc
fimuls
faddp
stos
in
js
mov
stc
mov
test
jae
jae
adc
jge
fidivrl
mov
decl
insb
imul
or
ljmp
push
dec
cmp
fs
inc
lods
sub
insl
adc
inc
pop
aam
stos
mov
scas
sbb
fwait
mov
add
push
mov
popf
push
pop
insb
mov
inc
insb
or
xor
movsl
out
hlt
mov
stos
imul
clc
push
aas
cli
cli
add
push
jge
adc
mov
in
xor
jb
clc
sub
jno
inc
mov
or
and
sti
and
cmp
or
testl
insl
dec
mov
inc
jae
fldenv
shlb
sbb
xor
adc
cmp
adc
arpl
dec
neg
faddl
into
add
xchg
es
out
mov
or
fsubs
sbb
enter
lds
sahf
shl
mov
sbb
test
addr16
dec
mov
adc
je
jmp
call
leave
jge
push
or
xrelease
mov
or
fwait
in
call
mov
sbb
pop
scas
out
int
lahf
out
div
lcall
sbb
cmpsb
roll
subb
daa
and
test
add
add
mov
push
push
push
stos
mov
aad
lahf
rorl
sub
rcll
mov
clc
and
dec
mov
add
pop
push
loope
pop
lock
pop
pop
lret
sbb
adc
cwtl
rol
and
push
lret
dec
fiadds
shlb
loopne
xchg
pop
and
cmp
sub
and
cmp
icebp
mov
cmp
outsl
and
imul
std
push
push
gs
dec
xchg
outsb
out
inc
xchg
inc
in
movsl
pop
push
sbb
mov
add
or
sbb
inc
lods
sti
add
xorl
xor
cld
adcl
lea
dec
das
loop
call
outsb
pop
xchg
push
dec
rcrb
dec
jge
int3
and
stos
jne
jbe
jp
scas
in
pop
fsts
fidivrl
sub
sub
iret
pop
repnz
cwtl
push
mov
push
inc
jae
inc
subb
lock
jno
in
aad
mov
fisttpl
nop
cli
popa
jo
add
xor
or
mov
mov
stc
xchg
int
adc
or
pop
push
test
sbb
xchg
xchg
lret
insl
pop
mov
xorb
mov
mov
xor
xor
imulb
inc
mov
aam
cmp
in
xchg
mov
je
jb
divb
cmpsw
and
dec
dec
inc
xor
rep
shll
and
push
shlb
fistpl
mov
add
or
jo
adc
nop
push
push
jne
mov
or
adc
pop
cs
scas
jnp
int3
shl
push
push
mull
dec
dec
in
adc
lea
rorl
pop
pop
and
into
cmp
sbb
cmp
lds
lret
sbb
sbb
lahf
scas
aad
jns
andl
xor
add
out
repz
imul
jae
aaa
negl
jne
inc
push
adc
test
mov
push
pop
mov
scas
adc
lds
out
and
jge
outsb
jmp
outsb
sbb
inc
xchg
fs
mov
mov
imul
adc
mov
jo
adc
fs
inc
test
fists
adc
sti
and
pop
ret
xor
sub
push
loopne
repz
pop
pushf
and
adc
rcl
scas
xlat
mov
adc
push
ret
out
fs
out
cmp
add
cld
push
aam
and
xchg
mov
call
pop
aaa
mov
call
jmp
inc
es
inc
dec
and
ds
lret
add
sub
inc
ds
jmp
call
imul
loope
push
pop
mov
test
clc
xor
lods
pop
xorl
cmpsl
sbb
dec
xlat
xchg
mov
lahf
icebp
sub
xchg
fsubr
cltd
ficomps
sub
cmpsl
imul
ds
insb
orb
adc
push
jecxz
xchg
cmp
and
lret
xchg
adc
decb
loopne
inc
int3
xor
adc
imul
aam
ljmp
pop
jmp
pop
dec
aad
in
sub
test
cmc
outsb
je
out
dec
das
push
ret
bound
fiadds
imul
cwtl
je
sti
orps
in
sub
das
lods
or
aad
fsubrl
pop
inc
sbb
cmpsl
addr16
xchg
ds
jp
cli
add
mov
pushf
aad
or
xlat
pushf
cmp
jecxz
imul
jmp
out
xor
jle
je
push
fisubs
test
ret
ret
inc
jle
data16
xor
repnz
mov
push
jb
and
repnz
mov
int3
rcll
stos
push
mov
cmp
std
or
mov
mov
pop
imul
aam
aam
xchg
into
call
dec
imul
mov
fadds
mov
cmp
adc
mov
cmpsb
test
cld
out
mov
daa
push
ljmp
mov
fldcw
addr16
loop
or
push
xchg
in
jae
cmp
out
add
icebp
daa
lret
xor
push
popf
push
adcl
outsl
sub
les
and
adc
pop
sarb
push
xor
xor
inc
xchg
or
fiaddl
xchg
in
cltd
sub
pop
in
xor
movb
dec
scas
adc
inc
xor
lds
or
dec
or
int
enter
xchg
mov
push
fcomps
push
test
std
cmp
push
and
jb
ss
jecxz
sub
mov
adc
call
mov
movsb
jns
insl
mov
inc
jl
call
out
adc
add
mov
test
dec
shrb
enter
jp
sbb
outsb
cmc
jge
sbb
dec
ret
std
imul
adc
lahf
int3
cmpsb
xor
int
out
xchg
sub
addr16
andb
lahf
push
bnd
les
xor
jmp
xchg
insb
mov
and
pop
xchg
jle
pop
je
lods
push
and
rcrl
cs
cmpsb
sahf
fwait
push
lea
xchg
pop
insl
push
ja
cmpsl
ds
shlb
pop
imul
daa
pop
sti
push
imul
mulb
cld
jcxz
sbb
push
and
mov
or
inc
sub
mov
add
add
aad
inc
jmp
test
xor
sahf
xor
hlt
int3
lret
fldz
mov
dec
and
inc
es
aad
aaa
loopne
push
pop
sbb
add
xor
test
push
fwait
ret
mov
cmpsl
lcall
nop
xchg
cltd
shr
mov
in
in
lea
js
gs
mov
or
xchg
lods
jl
mov
cmp
adc
loope
dec
xlat
cmp
incl
push
cmp
fsubs
fsubp
stc
sbb
lds
jmp
shr
add
pushf
ffreep
dec
in
sub
rclb
or
push
in
pop
icebp
rclb
or
ljmp
xchg
ja
lods
js
and
mov
fadd
ret
cmpsb
movsl
aaa
in
mov
jecxz
imul
sbb
popf
out
out
ret
mov
aad
push
xchg
and
add
insb
xor
imull
dec
mov
xchg
and
mov
out
fdivr
and
repz
sub
movsl
cmp
das
ds
inc
xchg
dec
scas
xchg
repz
lret
sbb
xor
pop
mov
push
dec
and
fs
cs
adc
shll
cmc
das
inc
adc
push
cmp
in
insl
and
test
out
adc
jno
mov
test
mov
filds
dec
jne
iret
jno
loopne,pt
test
les
repnz
pop
cmpsb
aas
lds
movsb
pusha
test
ss
mov
cld
push
jb
jbe
sub
jnp
ret
jne
jp
push
aas
bound
mov
cltd
aaa
aam
or
out
sbb
mov
push
xchg
inc
test
inc
jmp
sbb
and
push
xchg
clc
inc
push
insl
fdiv
mov
out
lods
test
out
adc
sahf
imul
mov
mov
aad
sti
jp
sbbl
sbb
popa
mov
mov
fimuls
lods
adc
xchg
sub
xlat
jnp
mov
or
popf
xlat
test
mov
push
call
mov
lret
inc
inc
and
jo
rcrl
sub
add
dec
xchg
dec
mov
push
inc
mov
inc
pusha
mov
pop
cwtl
and
xchg
hlt
push
adcb
push
jnp
scas
aaa
jecxz
jae
push
mov
add
dec
mov
sti
nop
out
mov
data16
sarb
xchg
setb
aas
mov
das
sarl
icebp
mov
inc
lahf
repnz
fisubrl
jns
lds
inc
sub
mov
dec
mov
cltd
mov
fisubrl
cmp
add
dec
inc
ss
jns
jg
xchg
add
movsl
push
inc
xor
xchg
mov
lods
mov
xchg
xchg
repnz
push
subb
bound
in
jb
int
mov
dec
fwait
test
lods
lret
xchg
cmc
mov
mov
enter
lret
scas
in
pop
lret
add
cmp
xor
and
adc
and
sbb
xchg
push
mov
mov
xor
push
xor
imul
nop
insl
mov
xor
and
sahf
add
call
or
lods
cltd
jo
mov
or
cmp
xchg
xor
mov
push
sub
lahf
push
mov
stos
cmpsl
sahf
push
mov
lret
xchg
std
sbb
mov
roll
push
mov
das
icebp
movsb
cmp
pop
mov
dec
jle
lea
cmp
add
pusha
iret
enter
jne
pop
dec
and
pop
scas
xchg
mov
jnp
js
sahf
popa
sti
repnz
dec
dec
loopne
in
adc
fwait
xchg
repnz
mov
loop
ficompl
inc
andb
inc
dec
lods
stos
lods
fs
dec
test
push
adc
ret
push
jmp
pop
sub
lahf
dec
out
mov
xor
inc
in
mov
cmp
jne
xor
aam
mov
pop
xchg
shrb
and
xor
cmpl
cli
mov
inc
outsb
sbb
and
and
dec
push
cli
push
xchg
mov
clc
push
push
cmp
jg
inc
dec
aas
push
pop
pop
subb
jbe
push
cmp
js
cmp
repnz
mov
lods
test
in
jbe
stc
fidivs
adc
push
fadds
lcall
mov
jbe
cltd
sbb
pop
add
mov
push
mov
jmp
sti
push
cmp
adc
loop
and
lds
inc
push
ficompl
movsl
pandn
rcl
jb
xorl
mov
sub
imul
cwtl
add
lahf
mov
in
xor
mov
ret
or
jp
cmp
add
push
sub
mov
fistl
and
or
push
scas
lahf
movsb
inc
ret
cwtl
pusha
outsb
int
int3
and
mov
inc
mov
cmp
push
fidivrl
or
sarb
push
xor
les
xor
inc
cmp
xor
lahf
adc
mov
pop
flds
push
push
jbe
push
mov
xor
push
les
pushf
mov
adc
mov
and
shll
sbb
xchg
cmp
or
iret
push
pop
data16
test
adc
push
sbb
pop
rcrl
jne
shl
pop
cmp
inc
addl
popa
add
xchg
cmpsb
adcb
int
jmp
dec
inc
inc
jmp
daa
inc
push
mov
add
dec
and
adc
lahf
jge
stos
pop
mov
cmpsl
imul
mov
shl
pop
or
inc
push
lcall
pop
dec
mov
lods
sub
adc
pop
inc
js
int
cmc
pop
mov
addr16
inc
fildll
imul
icebp
jne
sbb
or
mov
loope
add
xor
lods
pop
pop
in
ret
ljmp
popa
adc
test
or
data16
faddp
imul
dec
shll
lret
and
xchg
aas
mov
mov
jbe
pop
cmp
scas
xchg
es
mov
subb
lcall
inc
mov
xbegin
cmpsl
pushl
add
inc
pop
cmpsb
or
adc
and
ret
aaa
and
loope
sbb
shrb
cmp
cltd
add
lea
pop
cltd
movsl
ret
inc
cmp
xor
jbe
stos
or
pop
mov
inc
test
data16
loope
fidivrl
fcoml
out
push
out
mov
out
dec
mulb
mov
insb
jge
cmc
fucomi
jb
cli
or
or
ret
test
cmp
mov
mov
js
lods
int3
imull
outsl
in
test
add
sub
popa
int
aam
jp
xor
repz
jmp
cltd
jecxz
pop
sbb
rolb
aam
repz
sub
mov
iret
xor
stos
aas
repz
sbb
addl
int
mov
inc
fsubl
ja
mov
aam
inc
stc
xor
sti
sahf
jo
std
fisttps
js
xor
lahf
jge
lcall
inc
xchg
dec
mov
adc
popf
loop
cmp
xor
insb
jne
fcoml
inc
sbb
outsl
cmpsl
lods
sbb
aad
cmp
outsb
movsl
arpl
in
dec
cmp
pop
pop
push
sub
popa
imul
in
xchg
and
enter
cmp
mov
push
push
sub
xchg
mov
fldcw
jae
sbb
or
jg
aaa
mov
mov
iret
in
sub
add
movsl
sahf
xor
aaa
cli
popa
mov
sub
aad
xchg
jns
inc
adc
add
push
lahf
sarl
call
adc
lret
jp
out
into
jo
mov
test
sahf
imul
cs
pop
fcmove
mov
and
cmp
inc
popf
iret
icebp
ret
out
jle
rcrl
pop
divb
sbb
icebp
mov
sbb
test
and
popa
lret
cmpsb
scas
movsl
dec
sub
jae
adcb
movsb
fisttpll
inc
or
ds
push
or
sbb
push
stos
inc
pop
psllq
or
mov
jecxz
ret
cmp
hlt
sbb
mov
mov
sub
mov
or
adc
std
xor
in
mov
fs
or
add
cmp
adc
xchg
sahf
mov
jle,pn
fwait
aas
ret
mull
imul
inc
pusha
xchg
push
pop
mov
pushf
ja
sbb
lock
imul
sbb
adc
stos
out
lods
pop
lock
mov
mov
call
icebp
dec
lock
std
fisttpl
test
mov
inc
dec
dec
movsb
fiaddl
out
cmp
inc
test
push
in
test
aam
mov
arpl
aad
in
add
iret
xchg
inc
xchg
arpl
or
lret
dec
pop
xchg
mov
das
jo
and
test
and
shlb
sahf
int
clc
jge
loopne
push
fidivrs
sub
aam
mov
cmp
dec
movsl
mov
lea
push
pop
sub
movsb
push
fldenv
jge
out
mov
movsl
cmpsb
or
sti
mov
js
jle
cli
sti
loop
inc
xchg
aaa
dec
pop
push
push
iret
divl
jge
add
leave
push
add
mov
stos
sbb
rcl
pop
lahf
insl
icebp
cli
clc
dec
in
in
inc
jns
ja
xchg
adc
adcb
sub
adc
jnp
popa
jo
xor
stos
and
push
push
insb
push
fwait
pop
test
cmpsb
ret
ljmp
aas
pop
out
pusha
montmul
cmpsb
inc
jg
xchg
mov
xchg
outsl
adc
cmc
ds
cmpsb
shll
test
push
aam
pop
lds
and
jl
mov
jle
push
testl
in
stos
sbb
pushf
stos
ret
scas
push
mov
xor
in
dec
iret
fisubrs
pop
cwtl
sbb
xchg
add
popa
fimull
mov
jmp
clc
icebp
divl
nop
sbb
data16
das
dec
loop
idivl
sarl
popa
movsl
mov
scas
lea
push
orb
xlat
popf
cs
sti
push
sbb
fisubrs
xchg
push
push
imul
imul
mov
dec
pop
xchg
movsl
lcall
mov
movb
cmp
or
sub
rclb
fbstp
cmp
cmp
mov
lea
dec
push
xchg
mov
nop
jp
les
sbb
cmpsb
sbb
int
sbb
fcompl
xchg
add
xchg
les
add
sbb
cmp
aas
test
inc
orb
mov
aas
xchg
flds
dec
in
adc
mov
out
mov
jne
mov
jbe
in
mov
cmp
jle
mov
ljmp
fildll
out
subb
pop
pop
mov
outsl
rcrb
jae
cli
andl
lret
arpl
popa
dec
xor
fsubs
fcomip
sarb
mov
jno
es
aaa
inc
popl
cmpsl
imul
stos
xchg
je
lahf
nop
xchg
inc
clc
enter
in
adc
jge
xchg
mov
and
and
fsts
mov
pushf
iret
ljmp
je
inc
or
aaa
lods
inc
leave
fwait
lods
fwait
pop
fstp
mov
push
pop
mov
rclb
cmp
fmull
pop
scas
xchg
ja
pmaxub
sarb
arpl
in
or
fdivrl
or
mov
xlat
divl
adc
in
ja
pop
jp
xor
jno
into
lea
js
aam
movsl
push
pop
imul
and
pop
mov
in
jl
cmp
loopne
mov
mov
or
repz
frstor
mov
xchg
je
int
xlat
or
es
sbb
mov
in
mov
in
xor
inc
or
mov
add
mov
adc
fwait
shrl
sbb
outsl
out
fs
inc
and
lcall
cld
sub
stos
and
xor
pop
jp
adc
pop
out
mov
addr16
mov
dec
iret
jp
movsl
sub
lret
dec
push
fs
sub
fstl
and
vandnps
insl
je
mov
icebp
pusha
pop
je
stc
adc
jno
filds
mov
cmp
jb
add
orb
bound
dec
mov
outsb
test
out
or
cmc
aad
push
shrl
sub
cmp
cmp
add
inc
movsb
enter
sub
cmc
sub
sarb
dec
cmp
insb
ss
xchg
fwait
aad
test
add
rcrl
xchg
jl
or
negb
jmp
mov
sbb
mov
imul
push
mov
jg
cld
pop
test
push
jnp
repnz
pop
push
rclb
out
push
pavgw
add
aam
lods
sub
sti
sbb
lods
movsl
pushf
dec
mov
jl
enter
mov
and
mov
xlat
inc
mov
aam
xchg
stos
and
aad
es
or
outsb
rorl
not
push
xor
daa
sbb
xchg
jp
mov
mov
inc
mov
pushf
xchg
cmp
mov
hlt
fcmovnbe
lods
insb
push
popa
add
fsubs
jl
add
scas
xor
cmp
mov
cmp
cmpsb
push
lcall
std
in
fstp
pop
jae
call
int3
mov
sub
jnp
aad
cmp
sbb
inc
cmpsl
lret
xchg
test
incl
lcall
pop
stos
adc
sbb
js
int3
fwait
xor
sbb
rol
lds
push
in
xchg
or
js
scas
and
jmp
loopne
mov
add
pusha
lcall
sahf
dec
dec
mov
adc
in
das
pop
adc
sub
pop
adc
xchg
inc
inc
js
sbb
iret
xchg
rcll
mov
jg
in
cmc
icebp
scas
int3
icebp
push
es
fstp
add
jmp
jmp
stc
mov
or
jns
dec
mov
adc
fwait
jb
lock
outsl
js
popa
cmp
add
movsl
jns
loop
lret
jl
lcall
test
jo
jae
rol
adc
into
push
jns
pop
lahf
in
add
push
adc
jge
subl
push
sub
repz
sbb
arpl
cmp
rorb
enter
push
loopne
cwtl
sarl
imul
xchg
dec
or
pop
cmpsl
sbb
pushf
ret
cmp
sti
adc
adc
fsubl
adc
mov
nop
lock
idiv
adc
mov
pop
fisubrs
push
push
xchg
mov
out
mov
nop
pusha
cmp
cmpl
push
xchg
addb
dec
sarl
ljmp
arpl
mov
pusha
jle
dec
lahf
orb
fs
fisttpll
jnp
dec
push
jne
xor
add
cwtl
shll
fdivs
push
lret
ss
inc
loopne
scas
inc
jae
ljmp
fs
je
mov
adc
ja
push
pop
cmpsb
mov
rcl
push
in
mov
xor
adc
outsl
xchg
adc
rclb
int3
dec
jl
sbb
fsubs
arpl
cli
in
aam
repnz
adc
mov
fsub
push
imul
jg
repz
ret
mov
stos
rcr
mov
rcrb
push
mov
adc
insl
mov
lods
popa
enter
adc
lret
and
dec
int3
xchg
jnp
pop
cwtl
mov
es
loop
pop
sbb
fsts
adc
ret
xchg
lahf
push
fs
cmp
jmp
fs
or
ss
mov
sbb
adc
mov
sub
incl
inc
outsb
icebp
xor
addr16
pop
jl
jno
mov
repnz
jmp
adc
mov
insb
or
in
loopne
sbb
xchg
rorl
or
lret
push
push
and
sub
lcall
sbb
inc
mov
inc
stos
jecxz
sbb
sbb
mov
loop
add
ret
xlat
and
pop
dec
stos
cltd
xor
mov
cmp
and
add
lahf
xor
xchg
adc
mov
loope
mov
dec
aaa
cltd
sub
aad
mov
pop
js
and
cmp
and
cwtl
jne
jno
mov
enter
popa
pop
stc
cmpxchg8b
cmc
ds
sbb
repnz
sbbb
std
dec
loopne
cwtl
arpl
sbb
pop
adc
jmp
cmp
mov
mov
out
flds
pop
int
cs
xor
cmpsb
out
sbb
call
or
test
cmpsb
jb
addl
cmp
fimull
xor
pop
in
push
das
fs
popf
leave
daa
rcrb
fucomip
mov
leave
inc
cli
add
stc
sarb
orl
out
mov
cld
mov
roll
xorl
cld
push
cli
push
daa
loope
xchg
arpl
cmp
movsl
sub
dec
xor
mov
adc
push
lret
push
fmull
add
decb
adc
push
pop
mov
sub
adc
fwait
mov
insb
sub
dec
sarb
or
mov
in
shlb
test
cmpsl
shll
mov
sbb
ss
addr16
rclb
sbb
xor
int3
cli
subb
es
and
out
icebp
aad
and
rorb
add
jbe
addl
fs
dec
loop
cld
push
inc
sarl
mov
in
cmpsl
add
or
test
ret
xor
push
test
fsubrs
roll
mov
push
xchg
xchg
lahf
inc
sub
test
push
addr16
and
xchg
fcomps
sbb
mov
xchg
ficompl
pop
out
dec
arpl
jbe
aam
decb
mov
cwtl
dec
sbbb
sbb
mov
adc
imul
push
or
cmp
sub
push
or
adc
mov
mov
or
lods
pop
pop
xchg
stc
ret
pop
fstps
xchg
dec
enter
xor
cmp
jecxz
imul
adc
jl
jl
movsb
in
pop
push
test
data16
cwtl
daa
mov
jge
call
or
rclb
stc
test
in
roll
bswap
inc
xlat
call
ljmp
jg
mov
cltd
and
insl
mov
outsb
xchg
xchg
fsubl
lea
sbb
or
nop
imul
mov
push
push
or
xchg
xchg
sbb
mov
cmpsl
loop
pop
jecxz,pt
cmpl
pop
cmpsl
mov
jae
inc
imul
add
push
lcall
jge
mov
jl
out
cwtl
mov
sub
or
clc
mov
repz
push
imul
int3
rcll
jecxz
cs
dec
sbb
je
fs
push
and
add
mov
push
inc
xchg
mov
pusha
push
test
mov
lret
icebp
or
daa
sbb
xchg
or
fwait
ret
push
add
pushf
xor
call
xchg
cmp
sbb
xchg
sub
fmulp
into
cmp
test
cmpsl
pop
pop
ds
pusha
adc
hlt
xor
fcmove
data16
xchg
loope
push
je
sub
and
call
imul
or
movsb
pcmpeqw
ds
inc
jbe
lock
insl
imul
mov
pop
aaa
or
leave
test
and
leave
xchg
add
in
addl
cmc
mov
xchg
adc
cmp
push
cmpsl
repnz
fildll
outsl
leave
pushf
mov
mov
movsb
lcall
mov
rcrl
loopne
jbe
loop
sub
daa
gs
pop
cltd
roll
ficompl
ss
stos
mov
xchg
jmp
mov
sbb
mulb
pop
js
xor
cmp
sub
xor
pop
pop
mov
and
cld
cs
out
cmp
out
xchg
sub
ret
mov
jno
mov
inc
js
jno
int
dec
mov
add
dec
push
nop
loopne
add
cwtl
pusha
add
into
inc
shrl
aad
inc
push
xchg
jge
push
rcrl
aaa
sub
mov
push
add
xor
add
add
dec
fiadds
xor
mov
movsb
sti
in
xor
int
mov
and
das
rcrl
incb
jl
or
lods
and
dec
push
aaa
or
xchg
fnsave
out
aaa
mov
jno
mov
and
cmc
movsb
push
mov
enter
aas
ds
pop
jg
mov
push
loop
ja
mov
pop
push
stc
pop
insl
lea
pop
fwait
inc
insb
or
ret
fcmovnu
inc
mov
outsb
lds
xchg
fstps
cmp
xorl
icebp
aas
mov
outsb
sub
je
arpl
xchg
ljmp
into
jns
or
sub
pop
or
mov
push
jns
rclb
push
dec
rcll
pop
mov
mov
mov
sub
cmp
push
pop
dec
dec
call
mov
je
into
mov
pop
push
sub
mov
and
cld
shlb
sub
in
cmc
fcompl
mov
dec
inc
mov
orl
cs
pop
xor
dec
pop
push
shll
push
dec
mov
sbb
mov
jo
rcr
pop
fs
scas
std
adc
inc
sbbl
cmp
outsl
pop
add
dec
push
cli
iret
xchg
jae
cmc
les
cmpsb
popl
pop
fadd
aam
sub
testb
push
sbb
std
adc
in
pusha
add
fildll
int
loop
test
jge
jne
movl
imul
fstpt
dec
insl
sbb
outsb
mov
ret
inc
fnop
or
pushf
mov
ret
aad
sub
dec
sub
cmp
bound
sbb
enter
fsts
insb
cmpsb
mov
sti
xor
push
fstpl
lret
jne
pusha
js
lret
mov
mov
jl
movl
dec
or
dec
add
scas
xchg
into
subb
jl
jp
mov
popa
fimuls
data16
mov
cmpsl
out
add
push
sub
fucom
in
enter
xor
add
ja
and
mov
repz
push
outsb
loop
in
push
push
icebp
test
les
cmp
mov
orl
int3
push
jae
sbb
movsb
dec
shl
cltd
inc
mov
enter
pop
jg
mov
and
xchg
lds
popf
in
out
push
push
or
cmpsl
adcl
and
push
stos
push
mov
pop
scas
loope
aas
stos
mov
jno
cltd
roll
xor
inc
imul
sbb
or
and
movsl
ficoml
call
lods
stos
mov
sbb
cmp
mov
iret
das
ret
inc
sbb
loopne
and
test
push
leave
cmp
out
pop
and
mov
adc
inc
out
and
stc
or
fisubrs
and
jbe
lea
add
push
mov
ljmp
dec
and
and
dec
in
cmpsl
sub
pop
push
sub
jg
fsts
sbb
rcll
mov
xor
enter
in
enter
rcrb
test
out
mov
or
pop
pop
jp
push
scas
sub
jae
jp
pop
sbbl
repnz
adc
push
js
bound
int
mov
repnz
loop
xchg
adc
mov
add
js
cmc
xchg
ret
mov
fdivrl
pop
sbbb
sub
lret
inc
jmp
dec
xor
jp
clc
popf
rcrb
lcall
js
mov
mov
lods
xor
movb
mov
enter
ficompl
sbb
clc
mov
add
sub
aas
mulb
mov
andb
std
popa
xchg
adc
cli
adc
mov
repz
xor
lds
orl
push
add
xor
jns
inc
jp
scas
mov
push
jl
xchg
and
aaa
xor
xchg
mov
mov
lret
pop
mov
mov
sbb
and
sub
mov
sub
mov
fisubs
std
jmpw
add
loop
sahf
into
orb
popf
fs
lcall
push
pop
add
jl
movsl
pop
sub
daa
sub
adc
add
je
and
sub
or
lods
je
push
ret
loop
loop
or
jbe
mov
pop
jne
adc
push
movsl
out
test
inc
mov
or
dec
xchg
ds
inc
xchg
clc
xlat
pop
xor
out
mov
fidivrl
jecxz
cmpsl
adc
test
sahf
xchg
cmp
sub
into
inc
pop
clc
leave
lret
add
push
mov
aaa
subl
jns
mov
imul
sbb
icebp
loope
out
xlat
aaa
pop
or
mov
jl
cmp
mov
in
lret
pushf
add
or
repnz
stc
les
or
inc
loope
loop
jmp
jns
xchg
out
rcrl
ret
pop
stos
icebp
push
repz
into
jl
ficompl
in
jmp
mov
and
cmpsl
test
std
enter
cltd
sbb
jle
add
test
fsub
lret
movsl
xchg
jne
imul
out
pop
xor
add
aaa
add
jno
push
mov
sbb
lret
pop
les
mov
xlat
xor
rorl
mov
dec
cmp
shrb
fdiv
mov
imull
jmp
fisubs
sbb
scas
push
or
fimull
aad
loopne
jle,pt
pmulhuw
popa
rorb
jl
in
iret
fs
test
dec
xor
mov
arpl
inc
cmc
into
cld
sbb
fildl
sub
add
gs
hlt
fdivs
mul
push
or
mov
orb
popa
xor
stos
aas
fs
inc
push
scas
pop
or
push
fs
cmpb
insl
imul
xchg
data16
sbb
add
xchg
and
cltd
scas
push
dec
sub
or
mov
lret
jo
shlb
jmp
push
dec
xor
adc
mov
or
sub
jb
fsub
add
inc
std
jns
jp,pt
cwtl
cmpsl
pop
test
pop
push
adc
pop
imul
jns
cs
scas
push
cmp
sub
inc
cmpsb
pushf
and
dec
inc
sar
add
std
mov
aam
or
pop
addr16
xor
in
xor
loop
lea
insb
pop
cmp
inc
fnstcw
xlat
loop
pop
popa
pop
leave
jo
ja
shlb
push
push
dec
cld
push
jge
add
or
cmp
cmp
cmp
adc
cmp
test
adc
mov
xchg
dec
fdivrl
stos
fdivs
fnstenv
or
cmpsl
fstl
xchg
jg
stos
inc
ret
mov
mov
icebp
jg
push
push
sbb
push
int
or
in
in
xchg
fcomps
jmp
jl
mov
jmp
lret
and
xor
popa
adc
ds
lahf
and
push
fcoml
add
sti
push
ficoms
dec
jmp
fwait
xor
daa
xchg
add
stos
mov
cmp
xchg
jge
xor
sub
dec
xchg
mov
xlat
or
pop
call
and
stos
xor
push
sbb
cmp
push
fcmovbe
sbb
jne
repz
sbb
cli
dec
daa
xchg
push
push
fisttpll
cli
sub
scas
insl
cmpsb
cwtl
or
std
push
outsb
mov
dec
fwait
push
adc
xor
jmp
arpl
mov
call
xchg
cmp
lcall
lods
or
mov
decb
jns
jbe
add
or
iret
jecxz
loope
sbbl
in
psubusw
aad
sbb
mov
push
dec
outsb
pop
imul
inc
jnp
ret
push
sub
cmpsl
in
sbb
in
popf
push
mov
and
sub
clc
into
cmp
add
inc
add
shrl
cmpsl
shl
loop
jmp
mov
mov
sbb
repnz
sub
out
imul
data16
push
ret
jle
movb
xorl
mov
pop
lods
ret
pop
out
cwtl
pop
hlt
cmp
arpl
fwait
push
cwtl
or
adc
xchg
data16
mov
inc
iret
or
xchg
jae
jl
imul
gs
mov
subb
insb
sets
rorb
mov
dec
movsl
dec
stos
jge
push
cmc
stos
cmc
stos
xor
stos
cmp
xchg
mov
pop
loopne
jge
ja
and
pop
repnz
movsl
rcrb
xchg
xchg
loop
add
test
andb
stos
and
push
xlat
xor
push
xor
and
cmp
iret
orl
call
pop
imul
adc
pop
push
xor
pop
stos
out
or
out
les
mov
in
pop
test
cmp
int
test
bound
aad
jge
subb
imul
lahf
bound
add
ret
fnstcw
push
dec
and
add
popa
repz
cmp
dec
leave
xchg
jl
stos
jle
mov
or
fldt
push
adc
cmp
sti
jno
adc
fisubs
inc
stos
loope
mov
popa
inc
xor
shlb
out
outsb
je
dec
fildl
mov
xorb
shr
xchg
adc
sarb
fucomip
mov
jl
outsb
test
dec
in
or
cld
scas
xchg
into
divb
dec
fwait
sub
imul
mov
mov
jp
pusha
inc
xor
jecxz
ja
push
adc
iret
or
dec
inc
push
cmp
cmp
fnsave
es
int3
xor
les
cli
mov
sarb
mov
sub
dec
add
push
lods
stos
out
icebp
ret
pop
and
and
pop
pop
dec
inc
xchg
hlt
or
mov
and
inc
adc
lods
leave
decb
inc
les
ret
aad
pop
xchg
mov
mov
daa
ljmp
addr16
mov
fsubrs
mov
adc
and
popa
xchg
push
mov
cwtl
addr16
cmp
mov
jp
loopne
xchg
int3
jp
inc
js
dec
xor
mov
add
xchg
jmp
mov
fadd
popf
popf
fstpl
sarb
add
rorb
sbb
cmp
cmp
adc
cmp
mov
stc
data16
js
in
mov
mov
lods
sub
rcrl
push
xchg
adc
subb
cli
loope
ja
and
mov
adc
inc
test
cmp
loopne
jae
adc
jnp
adc
sbbl
fimull
xchg
lods
sbb
popa
cs
add
xor
cmc
xor
imul
insl
ja
or
testl
popa
fst
out
xchg
iret
ds
loopne
jl
push
jecxz
pop
cmpsl
jae
movsb
pop
jno,pt
xlat
mov
int3
sbb
aas
xor
mov
or
jp
push
mov
push
jb
mov
add
jle
in
xchg
dec
xlat
cmp
push
and
xchg
mov
call
daa
cmc
fucomip
mov
jo
iret
ret
cmpl
lods
mov
inc
pushf
inc
add
and
or
insb
mov
mov
cmp
dec
mov
aas
aam
inc
daa
out
hlt
mov
enter
inc
gs
test
inc
xchg
iret
out
lods
movsl
cltd
fs
aad
cmp
stos
mov
in
loopne
test
cmpsb
fsubrl
pushf
sti
imull
fisubrl
mov
leave
in
sti
adc
scas
xchg
iret
push
cmp
xchg
neg
in
scas
adc
adc
andl
aaa
push
mov
fs
cli
fs
mov
aaa
enter
in
loope
push
adc
in
push
popf
leave
arpl
je
clc
mov
push
insl
cmp
xorl
pop
lcall
xor
adc
mov
data16
xchg
insl
sbb
or
fcmovne
push
mov
jae
jne
pop
jge
adc
pop
inc
mov
insl
cmp
pushf
mov
cmp
imul
mov
mov
dec
icebp
or
sbb
sti
or
jp
mov
pop
and
add
fidivrs
push
movsb
lret
ljmp
call
jns
dec
mov
jno
or
push
push
cmpsl
lock
popa
push
cmpsl
cmp
xchg
inc
cwtl
fstpt
data16
push
adc
sub
sbb
xchg
mov
jne
adc
sbb
xlat
push
call
adc
jmp
jo
icebp
sub
pop
xchg
xchg
inc
sub
das
ljmp
out
iret
enter
out
add
inc
cwtl
pop
cmpsb
mov
sbb
pushf
cli
sub
xor
push
enter
push
addr16
adc
adc
and
int3
cmc
mov
subb
scas
jp
ja
lock
test
in
xchg
cmpb
or
xchg
push
aaa
inc
xor
int3
ret
ja
pop
sar
inc
enter
mov
mov
out
push
mov
sub
std
push
into
ret
fisubl
loope
mov
sbb
adc
pusha
fwait
fwait
jge
fisttps
sar
ja
enter
loope
movsl
jbe
pop
das
dec
test
aam
mov
push
jne
ret
lea
shr
and
ds
pushf
rcrb
add
scas
sub
scas
and
or
push
addl
pop
pop
imul
adc
lcall
xchg
loopne
sbb
pmullw
js
mov
outsb
mov
test
ret
xlat
jge
mov
ret
ficoml
lret
mov
jae
aad
mov
xchg
pop
lds
sub
mov
add
cmp
test
sub
dec
push
cs
xor
lds
push
inc
mov
adc
in
add
xchg
jp
pop
jns
sub
or
xor
xchg
test
push
scas
mov
xor
mov
fwait
or
insb
icebp
inc
dec
ret
lcall
inc
mov
jp
adc
popa
mov
pusha
fs
bound
inc
aas
and
hlt
or
fnstenv
or
pop
xchg
adc
mov
add
ret
dec
and
jnp
das
cltd
dec
leave
jg
test
xchg
aam
ss
inc
xchg
scas
xchg
rorl
mov
lret
pop
and
jge
xor
sbb
mov
stos
mov
pop
xorb
and
mov
pop
jne
call
inc
pop
andb
push
ja
mov
sub
shrl
mov
sarl
pop
sbb
dec
ja
add
xlat
and
pop
add
jns
pop
testl
cmp
jbe
imulb
or
and
mov
das
rcrb
xchg
and
or
mov
push
cmc
pop
pop
sub
shlb
mov
repz
aam
pop
std
pop
jb
stos
push
xor
icebp
mov
inc
xchg
fwait
or
int
shlb
shrl
ud1
add
cli
pop
shl
imul
or
movsl
sub
mov
pop
xlat
xlat
pop
xchg
lcall
lea
int3
push
xor
inc
into
ljmp
inc
push
rcl
mov
aad
adc
adc
lahf
insb
stos
cmpsl
sbb
sub
fwait
and
xchg
xor
cli
in
loopne
fsubrl
inc
lea
fstl
pop
lods
pop
and
xchg
xchg
dec
lds
adc
aas
mov
push
and
push
insb
adc
mov
push
mov
fldcw
pop
ljmp
sarb
insl
lret
xchg
sub
repz
cmp
repz
gs
mov
xchg
dec
xchg
mov
jbe
xor
sub
inc
test
nop
fisttpl
or
jb
push
repnz
stc
or
push
stos
push
lock
push
xor
sbbl
xchg
mov
and
mov
lret
in
arpl
in
xor
mov
iret
mov
movsl
jno
ljmp
fimull
pop
pusha
push
or
cs
adc
pop
shlb
cld
xchg
mov
daa
adc
aas
pop
or
mov
push
fsubl
call
cmp
test
push
pop
mov
lods
stos
imul
imulb
mov
cltd
repz
xor
xchg
in
pop
pop
cltd
jp
add
fimuls
sbb
rcr
rcrb
stc
je
test
jb
stos
or
adc
dec
les
pop
int
add
xchg
mov
dec
mov
out
testb
adc
stos
mov
xchg
loopne
scas
hlt
faddl
inc
xchg
or
cmpsb
movsb
test
outsl
xchg
mov
ja
cltd
je
into
pop
fcomps
stc
mov
les
add
lret
mov
cmp
outsb
insb
xchg
imul
jnp
jmp
and
xchg
lods
ret
xchg
inc
and
cmp
and
outsl
xor
xor
inc
mov
ja
pop
fdivrl
lea
dec
xchg
in
cmpsb
mov
dec
xor
pop
add
pop
lcall
sbb
ret
inc
inc
test
dec
clc
xor
mov
jb
xchg
mov
push
mov
loopne
int3
daa
add
imul
gs
xchg
mov
rorb
cmp
in
nop
dec
rorb
adc
test
dec
mov
sahf
mov
cmp
lods
subl
insb
sub
push
pop
jae
push
jmp
mov
dec
loope
or
cmc
mov
nop
or
cmp
pop
lahf
xchg
xor
lahf
pushf
dec
xor
xchg
jmp
mov
jae
jp
lahf
or
pusha
pop
add
xchg
fildl
sub
and
mov
lods
jl
push
fistl
adc
add
les
popa
bound
cmp
jg
mov
shll
mov
mov
call
inc
mov
pop
xlat
data16
movsb
mov
stc
jb,pt
cmpb
test
xchg
in
or
out
enter
push
pusha
std
test
lcall
neg
mov
adc
mov
je
arpl
pop
mov
pop
sub
aam
cmp
addb
mov
fnstsw
repnz
push
push
ja
push
jp
fcomps
bnd
push
je
add
push
mov
cmp
mov
pop
je
xchg
xchg
mov
int3
js
clc
inc
fstpl
pop
stos
fcomps
pslld
add
sub
or
nop
add
cmp
mov
das
arpl
outsb
rorl
and
pushf
sbb
push
lods
scas
lods
sub
pusha
dec
out
mov
xor
adc
jns
insb
ljmp
and
and
iret
lahf
add
aad
push
jg
and
push
fidivs
in
iret
xchg
push
dec
test
icebp
adc
mov
xchg
jb
inc
jle
int3
mov
dec
jo
scas
lcall
sbb
sub
inc
xchg
unpckhps
and
filds
gs
aas
movsb
pop
mov
ficomps
jbe
pop
fisubl
and
hlt
in
test
mov
adc
xchg
inc
push
sub
sarb
cmp
mov
cmp
mov
divb
add
xchg
sub
mov
dec
pop
dec
jns
int3
sbb
shll
fnstcw
or
xor
jge
xor
repz
mov
in
shlb
jle
sarl
call
cmpl
inc
pop
ja
stos
inc
out
pushf
mov
jmp
popf
fmuls
fcomps
shr
or
jno
rclb
stc
addr16
pushf
lods
or
lret
fnstenv
cmc
loope
lods
xchg
jnp
dec
sub
pushw
arpl
xchg
pop
out
ss
shll
inc
jle
popa
sbb
mov
or
dec
cmc
lods
fists
inc
outsb
mov
call
icebp
jmp
popa
cltd
cmp
sbb
je
adc
inc
push
sbb
clc
cs
dec
cmp
xchg
mov
movsb
ret
fwait
loope
xor
jecxz
sbb
pop
outsl
xchg
int
ljmp
mov
xchg
sbb
popf
xchg
enter
pop
popf
stos
ljmp
fcompl
mov
shll
out
negl
in
push
xor
mov
push
dec
add
arpl
repnz
lret
sbb
push
inc
jge,pt
in
cs
cld
adc
cmp
rclb
pushf
movsl
xchg
mov
sbb
pop
int
add
mov
inc
pop
addr16
xchg
xor
adc
and
bswap
repnz
in
stos
gs
add
cli
out
add
out
adc
dec
fcoml
in
inc
mov
pop
cmp
cld
xchg
push
mov
jb
push
pushf
mov
fdiv
sahf
test
pop
xlat
jns
cmp
addr16
cmpsl
aas
into
fstpl
insb
aaa
test
inc
int3
or
nop
jo
and
mov
xlat
cld
jle
inc
dec
shl
pop
fiaddl
and
fisttps
jle
cmp
push
push
pop
lea
adc
jbe
xlat
mov
andl
sub
les
dec
adc
mov
les
jbe
jns
pop
push
cmpsb
xchg
sbb
test
push
xchg
outsl
pop
nop
mov
ja
push
add
mov
stos
push
rorl
call
push
das
ds
in
inc
pop
in
fsts
dec
sub
inc
adc
add
cmp
adc
mov
pop
addr16
sub
mov
popa
fldcw
inc
movsb
popa
fbstp
or
shll
jo
movsl
aam
fs
or
outsb
cs
je
gs
repz
ficomps
mov
fsubl
es
or
mov
xchg
lahf
add
in
js
jb
stc
lcall
pop
jmp
pusha
mov
hlt
cmc
sub
jno
movsb
into
pop
dec
cwtl
mov
add
inc
mov
stc
cmpsl
out
js
hlt
sbbb
push
sub
cmpl
xlat
jb
lods
out
test
test
push
xchg
or
jmp
add
or
repnz
push
mov
shl
addb
bound
or
scas
mov
or
jo
rolb
test
ret
mov
test
xchg
mov
dec
adc
mov
or
xlat
sbb
inc
mov
aad
push
addb
mov
scas
iret
pop
ljmp
xchg
js
iret
lock
push
inc
out
adc
pushf
mov
mov
stos
or
in
xor
lea
adc
scas
rcr
lcall
dec
push
cmp
call
push
mov
shl
loop
rorl
lcall
call
test
stos
insb
inc
push
mov
ja
jmp
pop
add
out
mov
adc
into
aaa
xchg
pushf
mov
adc
je
in
cmc
stos
or
xor
and
mov
clc
sti
fcmovnu
mov
sbb
mov
fstpl
test
out
arpl
out
or
subb
ljmp
cmp
lods
mov
repz
ss
std
mov
mov
iret
nop
jecxz
rcl
pop
dec
push
sbb
jecxz
push
push
pop
xor
aas
adc
movsl
jle
push
rclb
sub
sti
add
repz
sub
mov
pop
mov
xchg
std
popf
adc
mov
xorb
mov
fs
xchg
jo
jmp
mov
pop
jle
xchg
cmp
jge
push
sub
ss
mov
push
in
push
insl
scas
rorb
imul
in
lods
fiadds
aas
sbb
mov
mov
pop
add
or
outsb
inc
jno
jmp
mov
pop
int
loopne
outsl
cs
in
out
pop
mov
cli
mov
test
sub
sub
movsl
xor
push
xchg
pop
and
cmpsl
fsts
leave
jnp
je
jno
mov
insl
je
push
cmc
scas
in
incl
or
pop
jnp
out
jl
out
inc
into
add
dec
test
jp
xor
push
in
rolb
cltd
pop
ja
push
xchg
xchg
test
cmp
bound
jp
test
jp
scas
cmpsl
adc
pusha
pop
stc
sbb
mov
mov
push
jg
mov
or
les
pop
mov
pusha
adc
imul
sub
into
test
push
push
int3
loop
dec
scas
movsb
mov
jle
addr16
fs
add
pusha
popa
mov
sbb
addl
dec
pop
arpl
hlt
test
fwait
mov
or
cld
and
mov
ret
jnp
movsb
std
sub
insl
shrl
and
clc
and
xor
aas
out
inc
sbb
outsl
lahf
adc
xchg
xchg
or
daa
sub
and
mov
or
arpl
xchg
mov
push
ds
arpl
or
cmp
shr
lahf
inc
sub
nop
ret
sbb
pop
push
or
dec
mov
cld
cvttps2pi
outsb
jbe
jmp
ror
pop
loop
sub
pushf
sub
dec
cmc
rcrb
adc
popf
or
add
stos
cli
repz
lahf
inc
idivb
shlb
inc
mov
sbb
pop
inc
iret
mov
leave
or
xor
adc
std
stos
inc
hlt
jl
mov
test
xor
adc
in
adcl
loop
cwtl
and
push
mov
and
fisttpl
jmp
rol
mov
cmp
xlat
and
out
or
inc
push
adc
mov
sub
pushf
pushf
popf
dec
cmpsl
cmp
sbb
ds
mov
fistpll
adc
sub
cmp
std
rclb
clc
enter
dec
stc
push
out
xchg
outsb
and
mov
popa
and
in
adc
add
or
aam
jns
leave
fwait
xchg
add
mov
jae
jns
jno
cmp
mov
push
mov
mov
dec
fistpll
fimull
outsl
xor
add
and
jle
repnz
fucom
push
or
cmp
lret
xor
ljmp
push
lods
test
cld
pop
fisttpll
and
stc
mov
fsubrs
jge
xor
add
adc
test
scas
adc
aaa
xchg
ret
cmp
cmpsb
mov
add
mov
jno
ret
cmc
out
fs
inc
mov
int
test
andb
adc
test
lock
adcl
mov
sbbl
mov
orl
mov
xchg
or
data16
les
mov
pusha
mulb
movsb
lahf
int
aam
dec
mov
gs
dec
add
shrl
push
push
jecxz
negl
or
ret
fcomip
lods
sbb
sub
movsl
aaa
outsb
push
stos
cmpsl
fildl
ds
or
jb
ret
js
rclb
mov
stos
ficomps
ficomps
sbb
cli
inc
inc
cmpsb
incl
pop
dec
pop
test
and
decb
ja
test
mov
or
mov
cs
jecxz
mov
sahf
leave
insl
jb
jl
fcmovnu
cli
lock
dec
sbb
movsl
repnz
rcll
inc
xchg
repz
ret
sbb
and
pop
and
mov
ret
cmp
loope
jp
fisttpll
imul
add
lods
out
cld
push
cmp
mov
jne
sarb
xchg
dec
shlb
add
int3
aaa
test
push
mov
in
jecxz
mov
lock
cld
ds
lahf
out
jg
cmpb
rolb
mov
mov
mov
call
negl
xchg
iret
xchg
dec
and
push
popa
lods
mov
fstl
scas
outsb
in
jb
sub
sarl
loope
addr16
jecxz
add
add
sbb
adc
sub
cltd
pushf
sub
movsl
xchg
and
or
fcoml
mov
jmp
mov
imul
mov
std
test
sbb
out
lret
dec
lods
out
popf
stos
sub
xchg
shrl
adc
dec
xor
jle
push
lock
cli
add
enter
div
sbb
sbb
mov
shlb
pop
cwtl
psrlq
lcall
inc
or
out
dec
sbb
iret
movsl
jmp
clc
jl
cmp
test
push
sahf
mov
lods
in
sbb
push
sbb
push
call
test
or
lret
fidivrs
pop
lods
pop
mov
or
stc
xlat
xor
daa
inc
xchg
movzwl
pushf
cmpsb
xlat
in
or
fcmovnu
das
out
addl
test
pop
divb
fs
inc
in
jae
call
out
xchg
fiadds
fwait
test
mov
sub
mov
out
test
dec
lcall
cmp
mov
and
imul
lods
shll
adc
popa
sub
nop
sbbl
and
and
iret
cmp
sbb
lcall
negl
add
xchg
mov
mull
inc
addr16
push
pop
dec
imul
aas
sub
inc
in
icebp
dec
jns
test
aad
sbb
or
push
mov
mov
jecxz
xchg
clc
aam
pushf
dec
jecxz
nop
fwait
lods
sub
inc
inc
or
pop
jae
loopne
lock
sti
dec
movsb
aad
ror
scas
lret
mov
mov
loopne
leave
jne
xlat
not
pop
or
jbe
fimull
sub
ds
mov
inc
inc
mov
insb
sahf
fcomps
and
adc
jg
pop
lock
add
in
dec
jno
rolb
mov
mov
xchg
cli
push
fidivs
icebp
dec
jmp
insb
cli
arpl
and
test
jae
in
adc
aad
cld
pusha
pop
je
jne
in
adc
sub
adc
mov
mov
cmpsl
cs
push
in
outsl
push
dec
sbb
mov
clc
mov
pop
mov
lret
lcall
ds
mov
xchg
jb
mov
jl
cmc
lret
lret
xchg
mov
jo
sbb
push
arpl
pop
repnz
mov
testl
mov
inc
and
add
je
sbb
out
add
out
xor
sub
lahf
fdivs
adc
mov
adc
fwait
insl
inc
mov
insl
xchg
xor
insl
rorb
insl
fcmovbe
icebp
jl
pop
in
jo
dec
loope
ret
mov
sbb
push
adc
dec
clc
fimull
dec
sbb
jne
jno
jl
mov
out
and
xor
add
icebp
mov
js
mov
or
xchg
mov
fiaddl
sbb
insl
dec
repnz
xchg
push
mov
adc
push
pop
and
xor
cmp
lret
das
sub
inc
inc
fdivrs
sub
ret
mov
adc
inc
adc
ret
push
add
sbb
stos
imul
mov
lock
dec
mov
xlat
sbb
inc
nop
mov
and
xchg
icebp
cmpsb
out
in
pop
jle,pt
xor
mov
mulb
and
cmp
xor
leave
cmp
dec
arpl
icebp
cmp
sbb
add
arpl
push
stos
arpl
out
lcall
mov
fmuls
xor
mov
mov
sub
adc
addb
rcr
cmc
lods
insb
js
mov
cwtl
jmp
das
add
ds
jl
push
adc
mov
add
call
enter
mov
adc
in
stos
fdiv
negl
mov
fidivl
into
imul
jl
mov
adc
lea
mov
jecxz
cltd
mov
push
idivl
mov
push
test
or
pusha
mov
popf
adc
mov
dec
mov
push
sbb
cmp
ret
adc
or
xchg
pop
pop
adc
and
pop
pop
and
jnp
aaa
loope
pop
sahf
ficoms
jo
inc
or
sbb
sahf
push
inc
addr16
fstl
add
loope
adc
xchg
push
mul
orl
dec
mov
cwtl
adc
insl
cli
mov
leave
jge
gs
leave
jbe
push
mov
inc
mov
andl
xchg
pushf
pop
test
inc
push
fimuls
or
pusha
jecxz
or
call
inc
out
scas
test
mov
popa
pop
imul
mov
mov
adc
fistpll
cmp
lret
mov
lret
xor
jp
mov
mov
stos
push
jo
push
scas
cmp
sub
pop
xchg
mov
fstl
jbe
sahf
sbb
dec
xchg
rcll
lea
xor
add
sbb
pushf
mov
cmp
jl
pop
dec
out
outsl
test
xor
daa
push
dec
sbb
cli
cltd
or
mov
mov
dec
adc
ljmp
lcall
cmp
fwait
xlat
dec
stc
fsubrl
mov
popa
xchg
mov
cmpl
pop
bound
dec
jns
push
lods
lods
call
mov
test
movzwl
mov
jg
push
sbb
push
je
into
loope
sahf
rcrb
ret
out
xor
frstor
data16
sub
out
fcompl
iret
adc
mov
mov
and
fiadds
cwtl
adc
push
stos
mov
xor
push
sub
xor
mov
adc
xchg
cmp
sbb
out
fcmove
test
ja
adc
cmp
push
pop
mov
add
dec
dec
jle
enter
mov
out
adc
daa
cmp
cli
fst
xlat
push
mov
les
daa
hlt
test
popa
add
enter
sbb
fldenv
mov
lahf
mov
pop
daa
add
js
or
adc
cmp
mov
push
pop
ljmp
test
fistpl
iret
inc
add
jnp
dec
clc
loope
mov
sahf
jmp
mov
movsb
dec
out
sbb
lods
loopne
ss
stc
and
mov
inc
int
xor
es
lods
fdivl
into
mov
int3
lds
outsl
xchg
xchg
inc
sub
pop
stos
xchg
cmc
idivb
sarb
mov
rclb
insl
jne
mov
push
out
pop
inc
xchg
lcall
jnp
push
out
adc
dec
sub
ljmp
or
sti
int
fnsave
mov
xor
jo
popa
cmp
ret
push
repz
mov
adc
dec
fsubrs
ss
lock
pop
xor
xor
xchg
sbb
jmp
cmpl
ss
ljmp
jne
mov
pusha
and
or
fdivs
movsb
adc
add
xor
inc
rorb
insb
insl
in
mov
nop
jle
stos
std
xchg
mov
mov
jle
movsl
sbb
mov
arpl
testl
test
mov
mov
push
shlb
loope
lret
popf
das
cmp
xor
push
stos
stos
cmp
aaa
add
mul
addb
bound
push
fildl
or
jmp
into
test
push
jbe
cli
insb
mov
orb
bound
in
rclb
fisttpll
movsl
pusha
movsl
jp
cmp
sar
mov
loopne
mov
popf
lret
or
mov
pusha
loope
loopne
stc
mov
mov
rorb
pop
adc
inc
mov
das
sbb
dec
inc
seto
xchg
add
pop
add
push
movsl
nop
subl
cmp
sub
jp
add
xchg
insl
into
mov
insl
xchg
dec
mulb
add
fidivrl
repnz
and
xorl
inc
mov
pushf
sub
pusha
fisubl
test
add
faddl
cmpsb
push
add
pop
movsl
arpl
push
je
ds
mulb
mov
andl
ret
cmp
cmpsl
in
lods
xchg
and
push
mov
ljmp
xchg
out
mov
lret
xor
pop
ss
ss
out
adc
cltd
clc
jb
push
movsb
in
dec
push
sbb
sahf
pop
rcrl
xchg
je
adc
cmpsb
ret
adc
fimull
or
iret
and
xchg
add
xor
adc
xchg
or
dec
lcall
adc
movsb
scas
sub
out
aas
jno
sub
mov
xor
add
adc
or
out
lcall
mov
lods
and
add
cltd
mov
xlat
mov
dec
lods
push
sub
out
jbe
movsb
ds
mov
jo
data16
sti
inc
pop
clc
add
dec
cmpsl
jnp
enter
dec
xchg
daa
mov
fldt
sub
test
cmc
sub
sub
push
nop
insl
push
gs
punpckhwd
dec
mov
adc
aad
bound
pop
inc
mov
lret
nop
fadd
ret
sarb
xor
insb
xor
xchg
cmc
push
xor
push
ds
mov
movsl
and
pop
jle
call
cmp
inc
sahf
cmp
inc
jns
jmp
cs
sub
in
xchg
pop
mov
mov
enter
xchg
or
out
das
mov
xor
sti
cmp
jno
movsl
bound
jle
mov
inc
icebp
or
int3
ss
mov
lds
pop
lahf
cwtl
aaa
jecxz
adcl
pop
cmpsb
sbb
out
test
jmp
cmpsl
fstpt
push
xor
loop
in
aaa
out
nop
sub
jmp
pop
sub
inc
sub
lea
add
add
mov
popa
pushf
in
aas
icebp
mov
test
or
jle
out
out
mov
pop
fwait
fs
in
mov
mov
cmp
mov
repz
scas
xchg
xchg
jns
adc
dec
or
pushf
das
push
mov
cs
cli
movsb
in
mov
xchg
cmp
sbb
js
cmovle
dec
in
aas
cltd
addr16
pop
insb
les
enter
sbb
xchg
scas
lret
cs
add
push
dec
orb
mov
dec
inc
cmp
test
sub
pop
test
ret
bswap
ret
jnp
push
dec
enter
out
mov
mul
dec
loopne
fildll
cltd
ret
hlt
sahf
jbe
push
dec
adc
lock
pushf
jp
and
leave
ds
lock
mov
pop
jno
mov
jmp
repnz
scas
dec
mov
dec
aas
clc
sarb
pop
adc
andb
sahf
nop
sbb
jle
aam
mov
cmp
mov
push
jp
in
sub
push
mov
xor
loope
inc
ss
inc
repnz
sahf
mov
fmul
dec
adc
or
test
test
adc
subb
cmp
dec
lret
insl
adc
jp
repz
pop
mov
xchg
cmp
loop
sahf
xlat
jge
and
in
jnp
fcom
icebp
adc
mov
xor
fs
leave
sbb
push
into
push
mov
out
jecxz
jge
dec
leave
pop
dec
mov
xor
leave
std
sub
ds
stos
test
aaa
hlt
rcrb
dec
pop
sbb
and
cmpsb
nop
mov
fisttpll
adc
outsl
popf
cmp
cmp
lahf
jmp
add
nop
lcall
adc
adc
outsl
xor
mov
cmp
pop
insl
jb
sti
xor
mov
fld
out
jo
push
cmp
xchg
pop
loop
mov
add
or
scas
xor
sarb
xor
aaa
adc
xor
jbe
cmovle
push
cmp
push
sbb
pop
int
sbb
push
in
adc
dec
sub
imul
mull
cwtl
or
fcomps
ljmp
roll
rcl
inc
das
or
mov
loop
mov
pop
clc
lahf
int3
sub
dec
add
xor
mov
lea
pop
in
add
out
mov
dec
fisubs
dec
xlat
cli
iret
scas
push
inc
nop
jle
stos
insb
xchg
rorl
lret
push
test
push
lret
shr
cmpsl
lahf
incb
out
notb
xor
and
adc
rcrb
cmpsb
mov
ss
mov
xchg
xor
lret
mov
mov
scas
xchg
dec
cmp
das
cld
jg
les
dec
scas
add
out
pop
dec
xchg
int3
lret
sbb
sti
adc
jae
cld
lods
jl
or
outsb
mov
pop
iret
in
test
fs
or
sub
stos
lahf
cmp
ljmp
loope
sbb
add
pop
lret
inc
push
mov
inc
lret
adc
or
add
cs
dec
scas
in
jne
jmp
jle
jp
popa
repz
ret
push
insl
jl
push
push
mov
mov
jno
sub
imul
xlat
pop
int
lods
xor
sti
mov
cwtl
je
out
pop
adc
insl
inc
pop
imul
enter
call
push
jle
fiadds
lret
cmp
scas
mov
mov
adc
sarb
push
adc
or
mov
test
lret
stos
and
lcall
addr16
shll
test
xor
sahf
in
scas
leave
movsl
or
lods
jecxz
xchg
les
incb
push
mov
adc
xchg
add
or
gs
dec
insl
adc
jbe
nop
leave
in
in
js
ja
xchg
push
inc
scas
pop
xlat
pop
fmulp
mov
push
xchg
and
into
into
mov
dec
in
neg
inc
adc
jmp
inc
stos
loop
stos
orl
xor
sbb
push
into
jecxz
icebp
xchg
and
sti
mov
enter
ficompl
subl
insl
push
sbb
jno
cmp
dec
test
sbbl
or
or
add
pop
out
cltd
loop
iret
add
mov
outsb
xlat
pop
cmpsb
int
jg
lahf
jg
adc
push
sbb
xchg
mov
enter
pusha
fs
insl
into
xor
lock
push
daa
es
loopne
inc
pop
movsl
stc
dec
out
jb
sub
push
push
inc
lds
fimuls
sub
jecxz
hlt
test
cmpsb
sub
pop
jecxz
mov
iret
and
ja
dec
and
pop
mov
sbb
leave
lcall
push
cmp
call
sub
cmp
mul
outsl
sub
add
testb
fdivl
lahf
add
xchg
cs
pop
adc
pop
push
mov
xor
pop
shrl
fidivrl
das
scas
sbb
sub
fwait
add
jbe
mov
out
mov
jge
popa
sbb
sbb
push
lahf
mov
inc
sbb
dec
dec
into
jo
repnz
jle
movsb
in
loopne
xor
add
adc
repz
xor
cmp
in
and
mov
jmp
xor
sub
fcompp
out
or
and
inc
movsb
push
xor
cmp
fwait
dec
test
push
add
sbb
xor
add
cmp
aas
test
stos
xchg
mov
lcall
lret
das
mov
adc
push
mov
and
and
pop
outsb
addr16
filds
xchg
sub
sub
js
pusha
push
inc
inc
out
xor
xchg
jnp
push
mov
repz
fisubl
xchg
lahf
or
jmp
push
pop
roll
dec
movsl
jns
orl
sub
sahf
push
inc
cmovb
xor
stos
and
and
loopne
ret
adc
pop
cmpsb
pop
inc
mov
mov
or
sub
int3
repz
icebp
jo
lahf
xchg
jle
daa
arpl
sub
fs
idiv
dec
movsl
lret
mov
push
hlt
cmp
xchg
jae
lods
inc
into
cmc
shr
cltd
aas
roll
pop
in
sub
std
pop
xchg
aad
inc
add
pop
mov
mov
xor
jl
pop
sbb
cwtl
fdivs
dec
fcompl
push
mov
fidivs
sahf
int
add
lea
sub
xchg
sub
rcl
inc
aas
jge
icebp
cmp
push
mov
daa
popf
inc
js
inc
inc
adc
test
adc
mov
mov
mov
je
call
jl
out
xor
fstpt
fdivs
shr
mov
mov
mov
std
mov
push
outsb
xchg
cmp
loopne
adc
or
mov
jg
inc
popa
bnd
jno
lods
lods
jno
mov
lods
outsl
xchg
pop
xlat
jp
and
and
iret
cmp
dec
es
addr16
mov
movsl
cmp
sahf
push
stos
push
repnz
xor
gs
mov
jp
pop
adc
push
ljmp
pop
jl
ljmp
movsl
xchg
cmp
fists
cmp
aaa
sub
adc
subl
mov
adc
xlat
inc
adc
inc
out
lret
xchg
lods
sub
outsb
int
jae
les
out
fnstsw
outsl
in
adc
add
mov
mov
popf
jne
mov
or
cld
aaa
cmpsl
call
sbb
cmp
lcall
testl
icebp
xchg
fdivrs
insl
jne
je
fisubl
adc
cmpsb
frndint
rcrb
inc
test
jle
aad
sbb
repz
push
or
mov
out
push
mov
iret
push
fwait
push
push
cmp
dec
sub
movsl
ljmp
push
test
push
stos
cmpsl
loope
daa
dec
leave
dec
das
nop
cmc
aam
loope
push
pop
hlt
call
mov
test
or
pop
scas
jne
movsl
loop
dec
xchg
cmpsb
std
xchg
or
push
jl
sbb
adc
or
je
mov
pop
icebp
push
sub
cmpsl
push
adc
jmp
mov
scas
add
mov
inc
insb
mov
scas
popf
xchg
pusha
ds
xchg
es
cmc
cs
nop
and
outsb
xor
jmp
push
adc
jle
shll
mov
push
jno
inc
test
lds
leave
add
and
xchg
push
js
and
fists
gs
xor
mov
ljmp
jbe
pop
lahf
xchg
les
adc
xchg
pop
pop
in
roll
adc
dec
pop
and
lea
int
int3
aam
adc
mov
pushf
xchg
mov
or
or
mov
ret
fstp
iret
enter
int
neg
xchg
in
mov
mov
push
lret
mov
inc
jecxz
fisubl
cwtl
xorl
sbb
xchg
and
test
test
insl
mov
adc
or
push
iret
pop
mov
ret
push
mov
xchg
mov
notb
test
pop
outsb
lock
xor
jl
mov
stos
xchg
insb
test
imul
clc
sbb
xchg
xchg
scas
cmpsl
mov
cmp
cs
cmova
mov
jecxz
or
sbb
cmp
fs
adc
js
mov
mov
lds
enter
insl
mov
add
scas
in
or
inc
and
fdivr
outsl
dec
cmp
pusha
insl
jmp
popf
imul
xchg
cs
and
mov
dec
scas
add
sub
mov
loopne
lods
popf
fdivl
outsl
les
mov
jg
pop
jnp
sbb
xchg
int
pop
iret
das
fdivl
sbb
iret
imul
mov
mov
sub
loop
mov
bound
push
inc
aas
xchg
subb
andb
mov
sub
xchg
aaa
dec
mov
xor
cmp
imul
jmp
mov
clc
insl
aam
mov
jp
das
sbb
cmp
mov
sbb
int
pop
xor
out
dec
cmp
js
xor
cmp
cmpsb
add
push
fimull
mov
add
in
sbb
adc
jge
inc
dec
sbb
pop
iret
loope
jmp
out
push
in
jbe
jo
jne
cmp
mov
mov
sub
fldenv
mov
xchg
mov
pop
pusha
add
ret
mov
pop
and
fbld
xor
repnz
sbb
stc
xor
bnd
sarb
sub
hlt
mov
out
mov
lea
mov
jp
movsl
and
xchg
mov
icebp
fwait
mov
hlt
or
cmp
xchg
cmp
popa
ret
mov
jb
mov
sub
adc
js
addr16
push
mov
cs
pop
cmpsl
shll
xor
loop
or
data16
mov
push
inc
inc
dec
lahf
fcmove
pop
xchg
fsubs
inc
movsb
inc
xlat
push
mov
mov
sub
movsl
rorb
xchg
cmp
negl
stos
insb
movsl
and
cmpsb
inc
sbb
mov
sbb
sbb
test
movsb
inc
sahf
rcr
loope
outsl
jns
fdivrp
xor
test
in
ret
dec
push
cmp
jge
xchg
rcrb
lcall
inc
jnp
push
out
add
ss
inc
inc
and
xor
xchg
mov
mov
jae
adcb
call
lcall
xchg
dec
jmp
in
mov
je
out
scas
jb
lock
add
pop
fcmovb
outsl
and
adc
sub
aaa
rol
iret
subl
jbe
clc
test
sbb
insb
jmp
dec
aad
mov
jl
jnp
scas
ja
aad
mov
jge
fcoms
add
insl
inc
or
push
xor
aas
add
lret
enter
shl
adc
hlt
cmpsl
xchg
jl
adc
mov
stos
jb
cmp
loopne
pop
pop
adc
int3
adc
and
enter
pop
sti
or
jecxz
and
inc
ja
push
mov
cmp
jge
dec
fstpl
adc
outsb
paddusw
xor
fsubl
mov
fistps
xor
xchg
fnstsw
lock
mov
lods
std
aam
xchg
pop
jo
mov
mov
xchg
dec
mov
adcl
xchg
shrb
xchg
push
idivl
adc
movsb
lods
lahf
daa
push
icebp
and
in
sbb
xchg
leave
push
aad
mov
fstpl
sbb
sub
outsl
enter
cli
cmp
cmp
add
cmp
iret
sbb
movsl
aaa
mov
cltd
mov
je
add
inc
or
repz
cmc
push
adc
aaa
adc
xor
in
mov
xor
adc
inc
mov
int3
lret
sbb
pop
jne
adc
mov
xor
and
cli
leave
divl
push
icebp
mov
std
repnz
jbe
shl
in
lahf
xchg
sysexit
or
jge
mov
add
add
xchg
dec
jne
movb
lds
mov
lea
add
dec
mov
inc
cmpsl
testb
rorl
mov
jb
or
cmp
mov
loopne
out
mov
jnp
cltd
cltd
dec
mov
xor
mov
addr16
test
js
jmp
jno
inc
js
xchg
into
movsl
and
dec
enter
cmp
dec
add
fisttps
out
ficomps
and
enter
and
mov
mov
cmpl
lea
fdivrl
dec
mov
mov
lret
out
jbe
aaa
cld
push
add
xor
pushf
bound
aaa
repz
and
add
lea
jmp
sbb
call
clc
xchg
out
cmp
in
mov
sub
lea
imul
cwtl
dec
cmpsb
mov
push
dec
ret
mov
mov
movsb
inc
ret
movsb
js
jg
mov
cld
dec
daa
imulb
imul
out
je
pop
js
pop
xchg
push
nop
test
fnstcw
dec
lea
lock
iret
dec
and
loopne
mov
mov
sbb
std
xchg
out
iret
sbb
fdivrl
mov
nop
dec
push
repz
push
les
imul
test
ret
dec
and
fbld
cmp
int
std
push
mov
xchg
stos
jmp
and
test
push
push
std
add
xchg
dec
aad
jmp
xorl
pop
push
in
cmp
fs
mov
lret
inc
xor
mov
mov
das
ret
stos
sbb
xor
imul
or
pop
jnp
test
mov
add
sbbb
imul
push
loope
cmpsb
inc
mov
jae
insl
imul
xor
jbe
add
arpl
shrb
lock
mov
out
sub
mov
rol
jle
test
mov
adc
lea
cltd
push
gs
xchg
mov
stos
sub
sub
jle
sbb
xchg
fsubrs
dec
cmpsl
inc
rcrb
lret
loope
test
jp
cmp
jae
pop
fistps
shll
jmp
mov
add
mov
pop
xor
mov
inc
lds
xchg
and
inc
into
and
es
or
das
sahf
cmp
jbe
xchg
xor
addl
lods
adc
imul
mov
pop
movsb
pusha
aam
cmp
bnd
fwait
and
add
js
dec
mov
mov
test
push
sub
into
test
push
add
inc
sbb
repz
fldenv
inc
pushf
bnd
data16
out
xor
push
xchg
dec
push
cmp
repnz
cmp
out
xor
push
mov
and
out
pop
jnp
adc
xchg
xor
jle
cld
and
movsb
not
jmp
test
xlat
es
mov
add
pop
mov
push
mov
fimull
mov
xor
gs
mov
pop
jo
movsb
pop
ljmp
jns
xor
add
push
mov
repnz
je
adc
ret
inc
lcall
mov
ror
push
cld
push
dec
or
add
inc
and
mov
negb
pop
pop
add
add
and
fwait
adc
xchg
shrl
sti
jnp
xlat
pop
dec
xchg
or
mov
cmp
out
loopne
addb
pop
in
adc
jge
outsl
mov
in
in
ljmp
out
pop
pop
enter
mov
cmpsl
sti
mov
lods
and
and
movsb
mov
mov
xor
push
test
dec
dec
aam
neg
popf
sub
mov
and
mov
inc
test
cmp
mov
xchg
cld
in
xchg
gs
jnp
add
adc
pop
aaa
loope
add
xor
and
push
shlb
lock
mov
jmp
lods
sbb
sbb
cmpsl
fldcw
add
mov
cmc
mov
je
lods
sbb
mov
addr16
lods
cli
jnp
pop
mov
sub
add
repz
mov
sti
jmp
inc
lret
popf
int3
out
call
xchg
ficoml
popa
outsb
stc
inc
out
pushf
mov
ljmp
nop
mov
adc
std
dec
pushf
mov
imul
and
and
ss
mov
call
sbb
sbb
mov
enter
ljmp
cli
mov
add
div
mov
adc
push
lcall
das
dec
daa
push
mov
stos
add
push
push
test
enter
push
aas
les
orb
pop
xchg
ds
add
test
push
ret
adc
xchg
dec
ret
ljmp
xor
leave
sub
sbbb
xchg
push
xchg
pusha
xor
cli
out
les
aaa
or
nop
xchg
pop
fcompl
xor
jle
mov
sub
loope
inc
pop
bound
push
aam
jmp
push
sahf
mov
sbb
inc
or
inc
pushf
push
je
cmpsb
lcall
push
jg
cmp
mov
andb
lock
repnz
repnz
ljmp
out
mov
push
rcl
js
ljmp
jg
push
js
leave
push
mov
lods
jmp
mov
add
jns
aas
jmp
cmpsb
pop
xor
outsb
or
imul
sbb
rcll
xlat
fstpl
movsl
cs
popf
mov
out
lcall
mov
pop
xor
sub
xor
mov
imul
rorb
leave
push
call
add
or
jbe
jnp
jecxz
mov
gs
subl
jno
xor
cmp
leave
push
mov
std
imul
inc
xchg
in
shrb
push
cmp
cwtl
dec
xchg
pop
iret
js
jle
test
mov
imull
clc
mov
sub
stos
imul
lret
shl
mov
mov
inc
ret
push
inc
push
test
rdmsr
add
popf
sub
aaa
xor
mov
loopne
out
out
das
sub
pop
clc
frstor
add
dec
jg
loope
cmp
xchg
test
dec
push
push
sbb
pop
mov
mov
cltd
shrl
fucomi
dec
mov
addr16
dec
mov
aas
jnp
cs
rorl
orb
mov
jp
xchg
adc
js
aam
mov
jge
push
sbb
nop
mov
shr
cmp
mov
ret
pop
or
xor
movsl
xchg
stos
adc
sbb
cmpsl
int
xor
ret
test
dec
inc
xor
stos
sbb
addr16
pop
jnp
add
jns
cs
xchg
adc
xor
mov
mov
inc
sbb
add
jns
loop
dec
lods
adc
lock
mov
xchg
xor
xor
out
lock
mov
adc
imul
aas
popa
lods
popf
mov
xor
push
mov
out
loop
dec
cmp
icebp
push
stos
and
mov
jle
pop
xchg
sbb
push
fcomip
jne
jle
test
pop
daa
lods
pop
fstpt
mov
cmpsl
loop
dec
add
gs
rcrl
mov
dec
jno
lret
add
pop
or
int
fistpl
idivb
bound
jl
lahf
xor
mov
stc
pushf
sete
cltd
push
loope
insl
add
add
jbe
dec
scas
and
data16
inc
push
decb
stos
xor
out
hlt
push
mov
negb
aam
sub
std
in
in
sbb
in
xor
push
adc
or
jae
adc
sbb
inc
cld
xchg
xchg
ja
lds
push
movsl
lret
or
sbb
xor
je
movsb
aas
cmp
test
jb
pusha
lds
sti
rclb
cwtl
pop
or
or
lcall
incl
out
pop
gs
cwtl
icebp
push
pop
fwait
dec
xor
daa
fisubrl
movsb
push
inc
mov
push
and
shrl
push
inc
mov
arpl
int
mov
dec
adc
jno
ret
in
add
rcrb
sbbb
and
add
into
push
scas
rolb
push
jecxz
icebp
cmp
xor
add
das
ljmp
and
ret
dec
jo
or
xchg
mov
rcll
in
in
jno
dec
inc
sbb
fsts
repnz
jecxz
jns
adc
jne
in
lret
push
clc
iret
xchg
xor
aas
int
push
fstps
add
orb
insb
mov
cltd
inc
sbb
les
popa
xor
faddl
fcompl
jmp
or
mov
dec
pop
mov
jg
shrb
shll
lret
das
addr16
or
adc
pop
mov
add
mov
cmpsb
cwtl
xor
lock
inc
stos
cmp
sbb
sti
scas
fwait
nop
xor
xor
cmc
mov
or
xchg
dec
inc
push
pushf
mov
ret
sti
andl
lods
inc
push
inc
cltd
aaa
aaa
call
sbb
into
add
jecxz
loopne
cltd
stos
mov
test
mov
cmpsb
int3
and
push
test
insl
pop
sbb
gs
jp
adc
data16
aas
inc
and
ljmp
push
testb
mov
push
mov
int3
sub
mov
jp
jbe
cmp
cmpsl
fcomps
lock
adc
mov
lahf
int3
adc
addr16
dec
push
popf
repnz
aaa
xor
mov
and
fstps
adc
lahf
jae
lahf
add
cld
cwtl
mov
leave
mov
sti
adc
sahf
cmpsb
loopne
pop
lcall
fcmovb
sub
and
daa
jne
jmp
jnp
adc
push
and
pop
push
xchg
bt
addr16
fsub
mov
out
mov
pop
jb
fcompl
cmc
pop
mov
movsb
push
mov
jge
lods
lahf
cmpsb
jns
pusha
and
pop
fcom
fld1
mov
xor
inc
mov
mov
lods
mov
and
sbb
in
stos
mov
inc
mov
adc
lods
sbb
pop
test
and
addb
jae
dec
stos
pop
pop
push
inc
mov
push
jle
adc
das
leave
idivb
in
push
xchg
loop
adcl
add
outsl
test
sti
in
addr16
fbstp
push
out
jae
xor
sbb
es
pop
mov
mov
jge
dec
xor
dec
popf
iret
es
mov
inc
or
ds
inc
jmp
mov
inc
sub
pop
inc
push
xchg
mov
mov
pop
dec
mov
das
fadd
jno
arpl
cmp
pop
int3
pushf
ss
sbb
repnz
decw
jmp
pusha
pushf
xchg
push
jbe
aas
dec
xor
dec
aas
cmp
std
and
inc
insb
xorl
jl
pop
push
lock
dec
ds
mov
aaa
loop
pop
insl
test
std
xchg
out
mov
xor
test
mov
sahf
lds
incl
lods
int
cli
in
sti
mov
lcall
test
push
push
rol
cmp
aas
out
sarl
outsb
add
insb
inc
xchg
in
xchg
lahf
rol
pop
insl
xlat
pop
wbinvd
fucomip
lods
adc
mov
or
sbb
cli
add
stc
pop
out
push
loop
aas
push
or
sbb
pop
les
mov
xlat
mov
bound
cwtl
sbb
data16
pusha
lock
jns
inc
add
aas
inc
push
into
in
cwtl
mov
iret
dec
or
int
mov
xor
stc
sub
icebp
push
jb
xor
in
pop
mov
lahf
pop
xchg
incl
dec
pop
pop
les
arpl
arpl
dec
fimuls
xor
in
int
movsl
cltd
adc
lret
inc
xchg
loope
fprem1
push
lods
sub
sub
sub
in
popa
shlb
xorl
ds
lcall
outsb
mov
jae
cmc
insl
popl
call
test
fisubs
xor
sahf
xchg
imul
jns
mov
add
dec
or
aad
mov
or
push
adc
inc
adc
xchg
pop
inc
enter
and
imul
andb
or
push
mov
dec
test
sbb
jno
fistpll
pop
rclb
cmp
cmpsl
lods
sldt
jmp
sub
mov
jge
jnp
cmpl
push
jbe
lahf
jb
std
xchg
cmp
mulb
das
dec
jno
rcll
dec
pop
sub
filds
test
rcrl
and
stc
push
leave
xorb
xchg
pop
stos
inc
xchg
push
aad
pop
jae
mov
pop
adc
jge
lea
out
in
aas
pushf
mov
fs
ss
hlt
mov
pushf
jo
dec
mov
int3
mov
test
hlt
pop
std
out
dec
popf
mov
xor
mov
jle
or
outsl
loop
add
or
jne
fidivl
mov
fnstcw
mov
mov
dec
and
cmp
adc
and
or
in
adc
adc
cltd
int3
add
adc
in
inc
push
das
out
mov
or
sbb
icebp
or
mov
orl
adc
js
mov
ret
or
dec
lods
dec
lds
add
sbbb
lret
jl
inc
out
test
xlat
mov
cmp
pop
in
push
adc
mov
out
leave
call
pop
fldenv
jl
mov
stos
cmpsb
add
in
xor
xorl
fs
or
jno
imul
mul
sub
inc
nop
ss
push
mov
sbb
jbe
iret
out
and
mov
shll
and
jmp
or
mov
dec
hlt
ror
mov
outsl
mov
mov
js
and
jle
nop
add
repnz
jge
jg
pop
fiadds
fldl
addr16
rcll
insl
out
nop
aad
lea
xor
sarl
popf
pop
cli
push
js
mov
fldenv
jp
jg
or
gs
xchg
enter
and
arpl
das
mov
fldt
in
or
pop
sbb
jg
push
mov
lea
pop
add
jecxz
les
int3
sub
push
jge
sub
aas
mov
outsb
cltd
outsl
cli
mov
or
jmp
call
jo
in
add
adc
and
ss
es
mov
inc
imulb
push
scas
fnstenv
pop
inc
stc
and
push
rorl
and
out
cmp
es
int3
sbb
adc
iret
mov
out
xchg
nop
mov
mov
in
lods
and
jecxz
outsb
jle
imul
sbb
push
push
icebp
fcmove
xchg
sahf
into
stc
push
jbe
hlt
add
mov
movsb
in
push
arpl
fucomp
add
or
loop
add
arpl
lods
inc
lahf
aad
repz
sbb
add
outsb
and
pop
sub
repz
jmp
inc
cltd
mov
xor
jp
jp
push
mov
mov
jno
leave
xchg
dec
xchg
push
and
icebp
mov
dec
inc
xor
repnz
mov
dec
jecxz
inc
pushf
jl
mov
jle
mov
jno
lret
mov
sbb
test
stos
dec
cmpsb
mov
dec
inc
and
mul
adc
and
add
and
ret
cmp
test
lret
lock
nop
push
jae
insl
push
xchg
pop
cmp
sbb
jge,pn
outsb
pop
push
int
lds
xchg
push
mov
pop
cmp
sbb
adc
jns
fsub
add
adc
xchg
xor
aad
mov
jmp
and
push
xchg
push
xchg
inc
imul
icebp
inc
mov
add
jl
dec
add
insl
cltd
out
lcall
lds
into
out
push
out
adc
or
dec
cs
mov
pop
mov
sub
je
xlat
popl
mov
into
add
arpl
outsb
aad
repz
pop
adc
test
pop
popf
out
in
fwait
lock
psllq
mov
and
mov
test
jmp
jae
xor
outsl
push
pop
imul
push
push
adc
in
rcll
and
xchg
test
jo
mov
lea
shll
std
adc
mov
xchg
or
xchg
xor
movsb
mov
adcl
lods
leave
add
cmp
cltd
jbe
out
add
and
lods
pop
jo
addr16
cltd
sbb
pop
push
or
loope
inc
xor
add
scas
sub
add
and
dec
jg
mov
cli
lret
in
test
and
jae
jg
pop
and
rorl
jle
shrl
add
adc
push
pop
xchg
add
inc
stc
hlt
ss
add
rcr
lods
loope
and
outsb
or
pushf
ret
inc
mov
aaa
push
loopne
ja
int
mov
repz
or
rcrl
rcrb
sbb
and
mov
subl
mov
mov
loop
pop
jg
inc
sub
or
aad
ja
test
push
xchg
mov
inc
inc
and
adc
mov
sub
pop
or
cltd
stos
cmp
add
jmp
dec
xcrypt-ecb
cmpsl
iret
repnz
inc
mov
fisttpl
ja
sub
call
mov
loope
out
xor
lds
mov
shll
mov
je
mov
je
stos
insb
fwait
call
inc
and
cld
xchg
cmp
rolb
xlat
or
mov
lretw
pop
xchg
inc
aam
jne
out
or
xchg
jge
pop
aaa
movsl
dec
mov
mov
xor
push
into
ds
and
js
sub
xor
in
mov
mov
mov
popf
out
cmpsb
shr
mov
cmp
mov
in
pop
sub
cli
ficoml
dec
ja
jo
test
jg
and
sti
inc
cs
shlb
mov
jbe
jb
pop
sub
das
mov
sub
sar
xchg
movsl
lods
or
and
faddl
adc
dec
je
addl
sbb
cmc
je
rcrl
idivb
inc
dec
xor
negl
push
jp
dec
or
mov
xchg
xchg
outsb
cs
bound
mov
sbb
sbb
fstps
sub
les
insb
xchg
imul
sbb
push
dec
sub
pop
xchg
iret
push
jbe
add
scas
mov
cmpsl
or
adc
mov
lds
or
out
rolb
inc
pop
sbb
fwait
clc
es
mov
test
jns
fstpl
mov
adc
scas
inc
cmpsl
jge
and
mov
sub
icebp
cld
jbe
xchg
cmp
fildll
nop
std
push
xor
mov
ficompl
fnstcw
cltd
jle
test
push
adc
jp
xor
xchg
adc
aaa
das
push
nop
add
mov
lds
leave
mov
rclb
sbb
in
js
cmp
mov
or
cmp
movsl
mov
cmc
repz
call
mov
nop
mov
dec
sbb
int3
cmpsl
jbe
insb
dec
cmp
sub
je
and
hlt
pusha
repz
popa
push
cmp
jl
sbb
mov
sbb
add
pop
mov
pushf
popa
out
imull
imul
je
mov
jne
loopne
push
testb
xlat
sbb
sbb
mov
xor
fidivs
iret
mov
bound
sub
imul
test
and
sbb
in
mov
jl
dec
sbb
cmp
sbb
and
in
pop
aam
inc
pop
rcr
mov
repz
lcall
fsub
or
cld
pop
jbe
and
push
loope
mov
repnz
int3
xchg
arpl
out
addb
push
cmc
and
xor
sahf
in
dec
loop
daa
pushf
nop
jmp
mov
add
cmp
lcall
pushf
mov
jns
sbb
dec
sub
sub
es
mov
cmp
cpuid
ss
lods
xchg
add
mov
scas
or
leave
push
inc
mov
movsl
xchg
js
notb
jb
jbe
dec
jo
jp
push
lods
add
adc
inc
icebp
pop
outsb
dec
sbb
scas
adc
or
in
sub
mov
aad
popl
dec
inc
dec
xchg
test
mov
fdivl
xlat
push
or
jp
pop
inc
push
inc
xchg
mov
daa
dec
leave
or
cltd
sbb
push
sbb
into
xor
fwait
jmp
add
mov
ficoml
push
xor
inc
fidivrs
movsl
gs
cmp
sub
push
or
jle
jg
xchg
cmpxchg
lret
addb
mov
mov
shr
adc
xchg
mov
int
dec
pop
pushf
inc
mov
stc
xor
jp
shlb
jg,pt
inc
mov
xchg
enter
sbb
dec
out
int3
push
push
fdivp
in
mov
or
pop
sub
jg
cmp
addr16
push
repnz
test
sbb
inc
push
cmp
dec
push
dec
xor
jae
ja
addr16
popf
es
mov
sbb
mov
dec
lods
pop
dec
pop
ljmp
xchg
jno
xor
out
xchg
mov
cmc
or
testb
fstl
rcrb
inc
inc
jecxz
dec
mov
add
inc
cmp
lcall
add
dec
sub
aaa
dec
in
jo
jae
push
pop
int
outsl
imul
sti
add
mov
cld
das
icebp
out
popa
sahf
sub
int3
mov
es
popl
fcomp
aas
dec
sub
loope
mov
push
pop
push
imul
dec
push
xchg
test
sti
movsb
adc
pushf
bound
pop
fcomps
scas
test
push
fs
aas
jmp
repz
add
sub
dec
je
mov
add
lret
addr16
ljmp
lock
and
jmp
jp
mov
cld
outsb
sub
mov
adc
sbb
pop
sbb
sub
push
fwait
xchg
and
insb
push
inc
mov
imul
nop
sbb
mov
fs
idiv
push
dec
scas
in
hlt
cmpsb
add
or
adc
inc
xor
cmp
inc
int3
lock
adc
movl
lods
lret
jg
rcll
jge
cmpsb
cmpl
fisttpll
mov
insb
cmpb
add
fdivs
scas
cmp
iret
repnz
mov
std
dec
cmc
pop
dec
or
xchg
cmp
addr16
jmp
shl
pop
mov
mov
mov
test
cmp
stos
in
fwait
pop
dec
popa
inc
dec
stos
jae
inc
mov
pop
ja
ja
mov
mov
pop
in
daa
insb
dec
into
iret
push
decb
dec
lahf
lret
je
enter
bound
mov
mov
sbb
cmp
sbb
sub
and
pop
add
cmp
scas
fwait
cli
cmc
cmc
call
cs
mov
arpl
addr16
outsl
cmp
mov
mov
jno
xchg
xlat
xor
ss
or
loope
leave
dec
pop
add
std
repnz
push
mov
in
and
call
cmp
push
add
cmc
leave
pop
sub
ja
lea
dec
cltd
jmp
xor
and
aas
xor
ret
sbb
enter
add
mov
int3
outsb
dec
jno
push
test
test
mov
dec
push
cltd
dec
enter
hlt
stos
pushf
daa
jo
adc
aas
xor
mov
inc
outsl
jae
pop
stc
mov
cwtl
inc
aam
in
outsb
arpl
sub
xchg
out
sbb
mulb
xchg
aam
and
es
inc
push
call
dec
lcall
fnsave
mov
or
mov
mov
cli
dec
fwait
test
dec
stc
sub
enter
out
dec
and
cwtl
fcomps
popf
mov
dec
cwtl
sub
mov
pop
fs
push
xor
cmc
jno
int
addr16
mov
add
fcmovbe
dec
stos
test
cmpsl
sub
ljmp
adc
dec
push
int
mov
push
cli
jns
lret
add
and
dec
xor
js
pop
ljmp
clc
hlt
aad
fldenv
push
int
add
ret
adc
or
xchg
adc
clc
dec
pop
stc
ja
dec
mov
mov
mov
xchg
push
lods
movsb
or
dec
in
sahf
pop
and
inc
pop
subb
iret
enter
mov
call
stos
les
inc
sbb
es
stos
cmp
lods
push
inc
into
adc
add
push
sahf
fisubl
dec
jge
pop
dec
lods
ss
sub
stos
dec
popa
cmc
sbb
xchg
stos
inc
rolb
and
lods
sti
push
jge
push
pushf
mov
push
xchg
fwait
jl
mov
mov
push
shl
popa
and
insb
sbb
test
fwait
cmp
out
dec
imul
imul
int3
mov
mov
mov
movhps
mov
outsl
or
hlt
lock
outsb
ljmp
ljmp
or
jns
bound
dec
int3
stos
push
xchg
jp
bound
aaa
cmp
fildll
jl
push
push
push
out
cli
and
sbb
int
jo
in
cmp
ret
xor
repnz
xchg
push
daa
inc
push
pop
out
rcrb
jns
popf
mov
adc
jns
xchg
cli
ds
xor
jge
sbb
push
xor
stos
mov
decl
pop
mov
cli
mov
cld
outsl
xchg
imul
pop
jg
in
cmpsl
mov
jle
outsl
push
imul
hlt
ss
data16
call
jg
sbb
enter
cmp
scas
or
jns
testl
mov
hlt
jbe
fs
add
mov
mov
push
in
pop
negl
and
sbb
js
addr16
lock
sbb
lcall
pushf
addl
inc
inc
lret
es
adc
stos
ret
sbb
scas
sarl
mov
mov
daa
lea
outsb
mov
shll
out
add
jge
or
sarl
sub
xchg
lds
sti
push
sbb
cmp
dec
cld
lock
push
outsb
fiadds
and
push
cli
mov
push
test
into
testb
sbb
mov
fldt
test
or
mov
inc
aas
mov
adc
xor
add
sti
pusha
dec
mov
cltd
or
cli
mov
rorl
jecxz
lods
rcll
int3
jmp
push
stc
xchg
adc
call
scas
pop
imul
mov
lds
aas
jb
lea
dec
lods
and
in
mov
inc
pop
jg
mov
imul
and
jo
and
andb
xchg
dec
test
mov
cli
adc
int3
lea
stc
sub
mov
movsl
and
and
test
add
dec
fstpt
outsl
jle
call
outsb
inc
sbb
push
jmp
dec
dec
mov
push
jg
popa
push
mov
sub
cld
das
cmpb
insl
push
gs
out
push
mov
ljmp
test
inc
pop
int3
repz
ja
push
call
push
idivl
mov
sbb
mov
in
lret
jg
je
inc
sub
add
jg
push
shll
xor
ret
xchg
inc
pop
stos
test
inc
ficoms
in
dec
enter
imul
scas
or
inc
xchg
mov
andb
jo
movsb
inc
xor
mov
les
xor
aam
cmp
add
inc
shrb
ds
sub
aaa
fucomi
lahf
sub
fildll
sub
pop
loopne
sahf
imul
xor
sub
inc
add
mov
add
inc
pop
push
xchg
pop
jge
nop
dec
mov
fsubrs
cltd
adc
shll
adc
dec
sub
cmp
lods
imul
push
sub
jmp
jb
jbe
jecxz
clc
pop
data16
push
data16
ret
pop
xor
jno
push
dec
push
mov
cmp
ja
test
scas
xchg
jle
or
push
into
in
insl
xchg
and
pop
xchg
cmp
lahf
rol
push
push
push
add
sub
sub
push
shlb
sub
fwait
in
int3
cmp
mov
sub
jns
test
and
pop
cli
jl
or
aaa
int3
jo
mov
cmp
add
stc
hlt
insb
mov
xchg
cmp
mov
jae
cmpsb
jecxz
ds
leave
mov
pusha
or
scas
rorb
sti
cmp
pop
sub
data16
imul
fbstp
pop
int3
and
cmp
inc
sbb
leave
mov
mov
enter
in
lsl
repnz
movsl
dec
jae
jae
sbb
out
imul
or
divb
pop
jl
sbb
add
mov
daa
out
adc
rcll
jge
pushf
js
test
in
orb
mov
jno
mov
pop
bound
jns
add
outsb
xor
leave
mov
pushf
fidivrl
sbb
scas
pushf
adc
fnsave
pop
call
pop
mov
push
ds
rcr
outsb
aam
test
adc
loope
inc
dec
ss
test
in
add
mov
in
cmp
aas
jbe
jg
sbb
add
pop
outsl
rcrb
inc
adc
aas
mov
fisubl
test
popl
repz
push
lcall
rcrb
mov
shrb
and
mov
push
lock
out
push
rcrl
lahf
add
test
fidivrs
mov
xor
or
adc
jle
pop
or
lahf
add
cmc
cmpsb
dec
leave
stos
adc
in
lahf
rclb
rclb
sahf
data16
xor
cs
or
int
enter
faddl
push
jne
ljmp
add
jecxz
xor
pushf
jne
adc
insb
hlt
push
mov
aas
jg
arpl
lock
add
cmpsb
push
loope
and
pop
iret
inc
pushf
popf
imul
ljmp
test
ret
adc
dec
nop
jge
incb
mov
mov
stc
xchg
adc
jp
fs
push
bound
clc
insb
shll
movsl
mov
cmp
gs
nop
mov
push
sub
adc
xor
inc
xchg
or
xor
adc
outsb
mov
ret
adc
adc
sar
je
movsb
jne
jp
cltd
xchg
dec
test
adc
je
aaa
adcl
xor
js
dec
or
pop
pusha
js
or
ret
pop
lds
mov
adc
cmp
or
add
aad
cmp
cwtl
push
adc
imul
xchg
inc
js
pop
pop
stos
and
int
jo
add
dec
jecxz
jle
dec
int3
sbb
dec
or
imul
notb
out
or
cmp
adc
push
mov
aaa
pop
inc
push
cld
ret
add
jmp
push
push
mov
cmc
ljmp
addl
in
lahf
cs
out
insl
mov
fsubs
push
lret
xchg
jbe
jle
jb
pop
xchg
jg
or
scas
xacquire
lret
jns
loop
rcpps
push
inc
or
in
into
pop
test
into
push
lods
inc
cwtl
sub
andl
mov
nop
movsl
xor
movsb
sbb
sahf
test
hlt
fisttpl
jmp
xor
pop
int
scas
mov
or
push
aam
cmpsb
push
add
jp
test
imul
insl
add
pop
shll
sub
std
push
int3
or
inc
cmp
pop
ljmp
aas
dec
jns
xchg
or
cmpsl
mov
cltd
fmull
ret
divb
lods
dec
sbb
mov
addr16
mov
jnp
jle
ss
cmc
test
insb
dec
or
jmp
imul
add
dec
jo
jbe
stc
push
out
enter
xchg
adc
in
divl
push
mov
ficoml
jnp
loopne
and
mov
jb
scas
pop
ret
imul
dec
mov
jb
and
mov
popa
mov
mov
outsb
mov
inc
xor
lock
cmpsb
movsb
stc
fs
cmpsb
and
xor
adc
jp
loop
popa
shrb
shll
or
repz
mov
test
test
jno
xchg
scas
and
iret
xor
out
out
adc
divl
xchg
pop
jnp
inc
jmp
loope
repz
mov
dec
jg
js
bts
add
mov
dec
sub
pop
loop
lret
xchg
xchg
jae
leave
and
jmp
ss
lds
sti
sbb
adc
sbb
mov
sbb
dec
jno
inc
jbe
mov
and
inc
push
fcoms
ja
adc
inc
outsl
adc
or
cmpsl
outsl
lds
insl
mov
arpl
cmp
fadd
xor
sbb
mov
and
fcmovne
inc
mov
sub
push
jno
jae
gs
ret
aas
xchg
repnz
fstl
fldt
push
mov
fsubrl
imul
rcll
mov
xor
ljmp
jl
cmp
mov
add
adcb
pop
movsb
fdivl
jnp
mov
pop
cld
shlb
cmp
xchg
dec
xor
mov
pop
popf
rclb
pop
in
aam
insl
or
test
push
add
push
imul
xchg
sarb
lds
push
sarb
and
inc
scas
xchg
xchg
add
sbb
jb
mov
jns
outsb
stos
movsl
in
aam
lahf
pop
cmpsb
jbe
push
cld
loopne
add
xor
sbb
shl
dec
test
sub
nop
lea
inc
sbbb
xchg
in
or
adc
inc
test
and
adc
push
bound
ja
ss
sbb
test
mov
imul
pop
jp
jl
les
sbb
mov
sti
out
icebp
lret
mov
repnz
test
ja
popf
inc
cmp
lahf
mov
outsb
ret
adc
xchg
ret
lock
mov
sbb
add
fists
shrl
xchg
xchg
es
sbb
testb
sub
dec
inc
pop
mov
or
imul
out
xorl
jmp
xor
sti
lahf
push
enter
bound
fisttpll
mov
scas
inc
mov
shll
sbb
out
popf
pop
push
int3
add
inc
inc
into
pop
aaa
jnp
or
hlt
pop
add
out
mov
pop
aaa
sub
sub
nop
rcr
iret
cmp
push
cmp
jg
mov
std
xorl
jo
mov
cmp
test
push
nop
mov
xor
xor
push
rcll
mov
scas
sbb
sub
enter
insb
into
mov
xchg
add
stc
xor
sbb
leave
cmpsb
aas
pop
mov
adc
jmp
cmp
pushf
mov
push
xlat
sbb
fsubr
mov
mov
xor
or
jmp
xor
aad
fdivs
mov
jle
clc
cmp
fmuls
mov
bound
pop
sub
repz
pusha
cmp
ljmp
and
jl
or
jl
mov
adc
sarl
sbb
or
xchg
or
cmp
pop
sbb
and
dec
mov
arpl
jns
sub
sub
cmp
in
test
jb
movsl
sbb
sub
xor
push
xor
xchg
stos
jle
sti
loopne
rclb
dec
and
movsb
test
mov
mov
out
bound
mov
pusha
movsb
and
insb
out
ljmp
cmp
addr16
mov
jecxz
sbb
popa
push
negb
mov
lret
cmp
fisubs
mov
cmp
cwtl
sub
xchg
sahf
clc
in
insl
out
xor
xchg
scas
jb
mov
inc
out
xchg
aas
loope
out
or
mov
or
shrl
and
aas
call
ss
xlat
xor
fnstsw
iret
pop
add
imul
jecxz
outsb
jecxz
mov
xchg
mov
in
xchg
jae
movsb
xchg
fistpll
aad
movsl
sub
jp
push
aad
xchg
pop
push
xor
leave
lea
pop
push
add
ds
sti
inc
in
push
mov
dec
icebp
bound
mov
sub
sar
and
jmp
pop
lret
inc
pop
or
push
dec
push
ljmp
addr16
lret
mov
or
clc
mov
jl
jecxz
pusha
stos
sahf
fcomip
fnstsw
roll
xchg
xchg
add
mov
repnz
mov
call
fsts
fucomp
xchg
or
jecxz
xor
rclb
fwait
add
pusha
sub
dec
sbb
lock
mov
push
int
jle
insl
cwtl
push
dec
cs
mov
fwait
dec
fxch
push
adc
repnz
icebp
cmpl
mov
std
inc
mov
push
and
mov
fwait
stos
pop
test
mov
out
repz
loopne
jg
daa
mov
stos
or
shlb
aas
xor
gs
xchg
xor
push
decb
mov
push
cmc
fistpl
and
fistl
outsl
fisttpll
mov
mov
pop
xor
sarl
mov
in
cmpsb
mov
mov
scas
jmp
pop
aam
inc
ja
adc
mov
addb
js
xchg
in
lock
mov
cmp
lret
pop
ss
nop
pop
mov
cld
xor
mov
cld
jb
out
sbb
xchg
lret
insl
lret
sub
imul
out
cmpsb
es
jmp
das
xchg
jle
cmp
lods
push
cmp
cmp
push
sub
xchg
or
push
int
ja
adcb
loopne
xchg
push
clc
and
ds
mov
push
scas
fstp
push
nop
scas
aad
daa
sbb
lahf
int3
mov
add
xor
mov
and
adc
hlt
sub
cmp
sub
cmp
dec
adc
in
faddl
pop
inc
xchg
cmpb
jae
popf
push
aad
add
sub
enter
stos
decb
fbstp
fldt
stos
seta
add
divb
or
addl
xchg
pop
jno
jns
call
faddl
cmp
testl
and
cmp
fwait
jle
or
aam
sbbl
sub
inc
mov
sbb
imul
jmp
cmp
and
add
outsl
mov
push
lret
insb
lret
cmpsb
shrl
jp
add
cmpl
pop
push
mov
jns
inc
sarl
push
ja
jge
pop
xchg
fdivrs
or
pop
pop
xor
xchg
or
cmp
jnp
xorb
pusha
popf
jge
mov
sbbl
sub
sub
test
mov
jns
fstpt
jmp
lods
sbb
xchg
cmp
or
hlt
lret
inc
imul
pop
loopne
xor
in
iret
loope
das
subl
dec
imul
mov
in
inc
pop
adc
das
int
pop
push
inc
mov
push
xor
insl
mov
imul
shll
outsb
dec
ja
fwait
pop
lods
lcall
insl
adc
mov
pop
outsl
cmpsb
pusha
repz
push
sub
add
fcmove
loopne
popa
ds
jbe
test
or
mov
jo
aas
lea
cwtl
xchg
loop
mov
fmuls
mov
mov
int
mov
iret
sti
shrb
cmp
pop
jp
sub
push
mov
js
popa
xor
dec
add
loop
in
jbe
xor
cmp
ret
adc
dec
push
int3
adc
and
repz
sbb
dec
push
daa
enter
jno
cli
les
lods
xorb
rolb
sbb
int3
add
pop
jne
pop
jno
data16
mov
fstps
mov
xor
popa
daa
jns
push
loop
pop
mov
into
lret
cs
adc
aad
mov
sbbb
filds
sub
outsl
mov
int
jmp
loope
repz
pushf
jbe
inc
mov
cld
xchg
arpl
stc
pop
data16
frstor
pushf
sub
fmul
inc
cs
out
mov
add
dec
mov
add
push
cwtl
or
into
push
iret
sub
jns
iret
data16
cmp
push
inc
pop
dec
fisubs
lods
ret
xorb
cmp
dec
in
push
push
imul
inc
daa
out
and
out
pop
scas
or
mov
xor
lods
pop
push
xor
inc
aas
push
pop
fs
mov
das
mov
jae
mov
pushl
push
jae
xor
xchg
pop
xlat
sti
push
jl
xchg
mov
cmp
sub
lahf
outsl
inc
adc
inc
xchg
popf
aaa
out
roll
mov
fwait
inc
inc
fisttpl
scas
scas
pop
gs
and
pop
pop
aad
inc
lahf
in
xorl
outsb
xchg
ds
rcrl
lock
inc
sbb
mov
mov
add
mov
lret
jl
mov
or
test
mov
cmp
jmp
cmpl
cmp
cmpsl
and
aad
fcoml
iret
or
mov
mov
pop
out
sbb
or
cmp
push
adc
stos
push
add
shlb
daa
les
bnd
mov
jecxz
jp
pusha
sahf
push
inc
ss
jo
movsl
push
push
mov
sbb
sub
mov
popa
jge
mov
fistpl
cmpsb
and
inc
cmp
fadd
xchg
adc
adc
cld
inc
call
adc
inc
add
fpatan
fidivs
mov
or
push
jp
sti
loopne
lock
jno
scas
mov
leave
shrl
push
and
repnz
popf
and
xor
mov
sub
xor
and
pop
push
jb
fld
mov
mov
push
mov
and
and
dec
movsl
mov
je
push
sbb
or
cmp
mov
into
jle
jge
sub
or
mov
test
in
sbb
das
or
pushf
insb
faddl
sbb
rcll
and
dec
mov
pushw
cld
mov
fcoml
mov
sbb
sahf
push
dec
adc
fildl
adc
xor
jecxz
inc
or
das
mov
xchg
popf
fldcw
xchg
push
jb
je
mov
lds
out
xchg
sbb
adc
push
inc
sbb
or
roll
shlw
mov
xchg
ret
jle
test
xchg
into
sarb
push
lea
dec
mov
pusha
test
cltd
inc
inc
and
imul
movsl
jmp
sahf
or
ud0
inc
ror
push
dec
int
mov
leave
dec
and
jp
mov
add
movsb
cmpl
lret
pushf
sbb
jp
pop
icebp
lret
mov
add
aad
and
popf
lds
jb
cwtl
lea
mov
outsl
pop
clc
push
rcr
cmp
pusha
jae
and
sbb
push
ss
mov
movsl
inc
pop
or
sub
sbb
sbb
pop
mov
nop
fcoms
fiadds
das
lock
fcompl
addl
aad
in
popf
push
jae
es
xor
and
dec
icebp
adc
cmp
lret
dec
ljmp
cmp
nop
and
ror
jno
mov
lcall
sub
push
adc
push
jnp
daa
push
lea
xchg
xor
adc
dec
dec
mov
sbb
fidivs
mov
or
or
arpl
mov
js
imul
pop
jge
mov
iret
mov
and
jle
push
mov
clc
lahf
cli
addr16
mov
rcll
add
and
popa
cmp
popa
ljmp
insl
ja
mov
inc
mov
lds
xlat
and
mov
lock
les
mov
adc
cwtl
cmc
lods
inc
push
xor
dec
xor
in
dec
inc
fisttpll
xor
loop
and
push
lods
pop
cwtl
std
sub
shr
bound
das
enter
imul
cli
lahf
sbbb
lock
jmp
xchg
test
shrb
ja
push
dec
sbb
mov
sub
movb
cmp
loop
mov
mov
push
sti
mov
fstpl
push
out
adc
sbbl
mov
jmp
in
movsl
mov
xorl
xchg
cmp
push
out
sbbb
cmpsb
jnp
or
xchg
rcr
bound
push
incl
pusha
stc
mov
das
mov
stos
call
xor
xlat
inc
cltd
pop
fstps
jbe
add
aaa
mov
dec
and
xor
cs
ret
dec
jno
sarl
pop
sub
push
mov
mov
xchg
sub
in
inc
xlat
mov
sub
jne
push
push
and
inc
sub
mov
ret
mov
push
mov
test
cwtl
aas
xor
lcall
add
cmp
cmp
fldl
out
cs
pop
pop
cmp
inc
arpl
jae
mov
add
aaa
ret
fidivl
int
push
jle
in
sub
bound
cmp
test
mov
repz
leave
push
daa
mov
inc
iret
cmp
int3
pop
fsubr
aad
push
stc
cwtl
pusha
xchg
mulb
lret
or
inc
mov
movlps
dec
leave
mov
ljmp
jmp
push
ficoms
push
cs
movsb
cmp
xorl
test
je
lcall
push
xor
cmp
clc
ss
push
mov
xchg
sub
stos
test
loop
int
pop
sti
or
mov
psubw
push
movsl
into
push
jae
inc
outsb
dec
mov
mov
sbb
shll
xor
pop
pop
cmp
mov
xor
aam
pushf
mov
push
movsb
lods
pop
xchg
dec
test
push
adc
lock
cli
xor
push
inc
lahf
mov
nop
sub
xchg
loopne
sub
cmp
divb
inc
add
adc
mov
xchg
and
jo
lret
mov
cltd
inc
fstpl
add
pop
adc
push
push
arpl
jns
inc
mov
loop
cmpsb
pop
mov
adc
bound
out
out
xchg
sbb
and
xor
fwait
mov
sti
fcoms
or
decl
clc
dec
rolb
mov
dec
aam
mov
orb
faddl
pop
cmp
jo
adc
sbb
and
jl
pop
aaa
dec
cmpsb
loopne
out
jae
nop
sub
add
cmp
testb
mov
aam
ror
leave
jno
inc
lock
ss
mov
outsl
scas
jne
ljmp
lcall
xchg
addl
adc
sahf
test
push
loopne
fucomip
stc
fnsave
mov
jbe
mov
cld
repz
dec
xor
insb
push
stc
mov
mov
jle
cmp
jmp
addr16
sub
js
inc
xor
add
imul
or
insb
ficoms
push
mov
test
stos
pop
in
pop
mov
push
jnp
or
mov
jnp
pop
cmc
popf
jg
movsl
pop
in
push
pop
das
lods
xchg
inc
mov
pop
cmc
lea
ja
push
push
je
sbb
jle
in
repnz
cmpsb
das
sbb
mov
xor
pop
cli
mov
lea
dec
cmc
negb
aaa
xchg
push
push
fs
mov
ror
push
sbb
push
cs
and
and
ds
nop
mov
sub
pop
inc
xchg
push
cmc
lcall
sahf
jb
shlb
js
cmp
popf
xchg
jle
pop
loop
push
fsubrs
ja
add
test
sbb
add
cmc
into
aam
jmp
and
mov
and
loope
mov
idivl
and
call
movsb
repz
andl
sub
xchg
fdivrl
cmp
lock
mov
in
add
jmp
push
mov
ret
add
cmpsl
mov
gs
mov
mov
mov
cli
mov
jo
cmp
xor
push
mov
subl
aad
inc
jno
inc
in
pushf
and
xor
and
jmp
jns
dec
out
jg
push
fs
mov
pop
div
in
sahf
push
dec
mov
fsubs
orl
and
xorl
add
inc
ret
push
or
je
pop
leave
xchg
adc
pushf
js
sti
adcl
xor
clc
clc
mov
push
sub
sub
mov
mov
mov
xchg
stc
cli
fdivr
and
ljmp
xor
jl
and
xchg
cld
sti
fdivrs
sti
xor
loop
imul
dec
jmp
push
aaa
jmp
mov
in
and
or
dec
pop
lahf
ss
dec
sbb
flds
je
div
in
push
loopne
loopne
aaa
mov
mov
insb
lret
shll
or
fidivs
jae
stos
jbe
push
xchg
and
ja
xor
repz
pop
icebp
add
mov
sbb
mov
in
dec
cmp
cmp
int
cmpl
lock
leave
inc
mov
fstl
sub
cwtl
rol
loop
movsl
dec
xchg
test
outsl
cmp
pop
inc
inc
lret
xor
inc
daa
inc
lret
xlat
orl
add
ja
lret
push
pop
mov
mov
sub
into
leave
daa
add
test
cmp
mov
in
pop
aam
imul
xor
pop
adc
stc
fstl
add
out
test
adc
pop
xor
pop
cmp
and
mov
push
dec
sbb
bound
jno
pop
mov
cpuid
mov
clc
lods
xor
jge
cwtl
mov
fsubrl
and
outsb
rcrb
popf
xor
inc
dec
aam
pop
rclb
dec
adc
jmp
pop
push
pop
and
cwtl
bound
sahf
or
and
pop
dec
add
aas
jl
or
addr16
nop
mov
stos
shr
inc
adc
mull
sbb
lods
cli
ljmp
sahf
pop
jns
scas
mov
xor
loopne
pop
fsubl
std
sbb
sub
hlt
cmp
adc
jp
inc
add
dec
inc
cmc
into
sub
aad
mov
mov
mov
inc
mov
push
xor
dec
mov
iret
sub
addr16
or
cmp
int3
popa
or
jecxz
daa
out
das
sub
jae
int
call
int3
add
mov
mov
sub
call
mov
and
pop
test
adc
jnp
dec
clc
pushf
xchg
daa
cli
and
push
xchg
pop
shll
inc
ret
cwtl
pop
out
es
lea
xorl
pop
xor
lret
jae
loopne
fcos
add
xor
lea
aas
pop
xlat
add
push
scas
mov
shlb
push
cld
mov
xchg
repnz
xor
and
outsl
aad
mov
and
jbe
dec
lret
std
gs
add
test
or
rcrl
mov
mov
aas
nop
addl
and
iret
jbe
stos
out
loop
add
xchg
sti
sub
dec
or
dec
divb
xlat
movsl
add
cltd
mov
in
imul
push
mov
pop
mov
sub
dec
push
lahf
mov
dec
popf
xor
loope
push
cwtl
jmp
movsl
pop
push
and
and
xor
or
sarb
and
inc
cmp
jecxz
outsb
in
and
popf
out
mov
jecxz
cmp
incb
mov
mov
sub
test
ror
idivl
sbb
mov
jge
out
pop
sub
scas
gs
gs
pop
and
mov
mov
adc
jb
std
aaa
lock
lret
sbb
insl
movsl
lds
xor
jne
xchg
test
or
or
loop
push
adc
and
and
arpl
pop
fistpll
sub
jb
testl
ret
fldl
mov
enter
xchg
out
aaa
lahf
mov
call
das
in
lcall
sbb
push
movsl
insb
xchg
xor
adc
sub
popa
add
mov
xchg
in
mul
in
cmpsb
popa
sub
mov
shll
or
pop
in
sub
iret
scas
pop
add
mov
je
jb
aad
sub
mov
xchg
push
sbb
push
push
cmp
out
push
xchg
aam
add
push
pop
dec
in
push
out
xchg
lods
into
xchg
or
pop
loopne
add
fldenv
jg
and
fdivl
adc
lret
in
test
loop
add
dec
sub
ds
mov
jmp
dec
mov
cltd
mov
dec
sub
into
and
push
jno
lcall
sbb
add
sub
cs
xlat
or
fcmovne
out
rcrb
sub
pop
xchg
imul
inc
scas
sahf
sub
in
jb
mov
decb
dec
adc
sbb
lock
fs
push
push
test
dec
test
outsb
jo
scas
lret
xor
imul
outsl
outsb
js
cmp
dec
mov
jns
das
mov
addr16
jnp
push
push
fwait
fwait
es
xor
leave
and
cmp
lock
cmp
or
lods
lods
repnz
or
inc
cmc
daa
jno
xor
popa
stc
pop
iret
jl
xor
adc
scas
cmp
sahf
outsb
testb
push
fprem
outsl
xchg
bound
icebp
xchg
mov
outsl
inc
cs
mov
sti
sub
js
cmp
sub
imul
dec
ja
mov
add
push
loopne
jo
stc
xor
fwait
lods
pop
ret
dec
jne
jo
jns
and
jnp
addl
add
dec
pushf
inc
fwait
arpl
rcr
shlb
fstl
pushf
test
adc
cwtl
or
and
test
cld
in
pop
scas
sub
push
add
das
push
insl
mov
stc
mov
repnz
push
adc
loop
lods
add
in
and
adc
pop
hlt
es
jp
dec
rolb
cmp
mov
fcmovne
mov
inc
mov
mov
mov
jno
outsl
sbb
xor
lret
icebp
loopne
je
fsubrl
pop
xchg
and
sub
xchg
addr16
jmp
inc
cmpsb
mov
jl
inc
xchg
adc
test
inc
mov
cmpl
pop
xchg
push
push
inc
mov
test
bound
xlat
call
add
mov
daa
popa
mov
jp
pop
iret
je
jbe
mov
arpl
sbb
inc
in
in
test
mov
nop
cwtl
push
sbb
sub
jl
dec
jg
or
lret
testb
xor
icebp
pop
sub
stc
cmp
imul
ja
icebp
repz
dec
pushf
icebp
aad
mov
cmp
jb
mov
int3
jmp
or
insb
cld
jb
jg
sti
cmp
addr16
lahf
push
aaa
imul
stc
imul
inc
outsl
cmp
idivl
fstpl
outsl
fiaddl
dec
xor
loopne
push
pushf
lret
sub
insb
jp
int
int3
ljmp
dec
dec
jbe
pop
jns
adc
enter
data16
enter
pushf
lcall
sbb
mov
jle
cmp
push
cmpsl
rolb
pop
out
cmpb
inc
push
outsb
push
pop
cmpb
or
out
decb
cltd
or
out
mov
mov
mov
inc
rep
xor
outsb
fucomp
pop
xor
pop
sarl
popl
jbe
xchg
rclb
xchg
push
insb
push
lret
jp
push
add
xor
lock
lcall
scas
lcall
divb
lods
sub
ret
xor
fwait
stc
jecxz
jg
or
out
shlb
xor
in
xchg
js
cmp
pop
rclb
mov
and
out
xor
int3
xchg
lock
int3
pop
dec
fcomip
inc
push
bound
inc
mov
and
cmp
mov
pop
inc
pop
mov
daa
mov
mov
adc
pop
stc
dec
and
pop
adc
fs
or
push
pop
cltd
adc
out
pop
nop
pop
das
scas
ficompl
sbb
ds
out
cmp
or
mov
in
testb
pop
loope
popa
lea
pusha
ror
inc
insl
pop
clc
in
push
cmpsb
mulb
movsl
xor
insb
push
inc
xchg
jle
pop
cltd
in
stc
adc
xchg
out
xorl
jne
push
xor
jnp
jnp
push
jnp
repz
xor
xor
mov
push
insl
jno
jmp
push
pop
andb
test
das
insl
into
mov
scas
imulb
iret
and
stos
imul
stos
data16
add
test
cld
ficomps
lea
imul
popf
jmp
lds
fwait
jle
or
adc
data16
mov
or
pop
testl
xor
call
xorb
cwtl
pop
jo
push
cmp
mov
jle
loop
inc
les
dec
stc
ret
jb
xchg
push
pop
aaa
add
pusha
push
or
mov
or
repnz
push
dec
adc
xchg
sub
mov
and
js
sbb
scas
mov
imul
sub
pop
es
aad
daa
fimuls
clc
push
ret
je
and
shrl
mov
sbb
cmpsb
cli
pusha
dec
push
fldenv
ret
roll
into
je
lret
xor
icebp
adc
push
ret
push
lods
inc
pop
or
xor
nop
mov
mov
jmp
lods
sahf
jns
xor
fisubs
sub
mov
mov
lods
pop
xor
popf
scas
xor
add
sub
cmp
sub
dec
push
cmp
push
xchg
pop
pop
push
loope
pop
add
lcall
xchg
inc
addr16
dec
xchg
mov
xor
fldl
lcall
and
sub
pop
nop
pushf
and
in
addr16
addl
pop
pop
sub
test
fisttpl
xchg
mov
jnp
je
lea
xorb
pop
bound
dec
imul
fsubr
xchg
jecxz
popa
icebp
xor
and
test
sub
loope
test
test
mov
and
mov
les
loopne
pop
sbb
sbb
out
stos
hlt
and
mov
mov
movsl
push
repnz
clc
mov
in
pop
xchg
sbb
jbe
sub
cmpsl
fs
jbe
dec
jb
stc
adc
and
lea
push
pop
in
sub
int
mov
stc
xchg
int3
adc
leave
push
adc
popa
add
lcall
and
xchg
cmp
jl
dec
sbb
and
rorb
jnp
jp
push
jecxz
push
lret
in
push
lahf
faddl
mov
dec
leave
mov
out
pop
push
in
xchg
test
adc
xorb
cmp
cld
ret
push
or
mull
jl
icebp
les
dec
outsb
lods
lahf
scas
push
lret
dec
cmp
nop
aam
popf
mov
cmp
xchg
and
xchg
cmp
out
add
jp
ds
ds
and
js
xorl
in
lcall
jle
std
or
mov
lods
lahf
ret
outsl
js
pop
inc
or
mov
sbb
lret
pop
loop
sbb
rclb
cwtl
shlb
insl
les
repz
adc
jae
scas
scas
jmp
popa
mov
call
fstpl
mov
mov
lock
dec
add
fildll
int3
icebp
xchg
dec
mov
cmp
mov
pusha
sub
dec
dec
shll
jb
mov
roll
mov
inc
es
xor
mov
jae
jge
jne
imul
jb
in
jne
xor
scas
shlb
aam
or
mov
sbbb
fdivrs
inc
es
nop
mov
pop
stos
pop
and
cli
nop
xlat
mov
xor
dec
test
adc
mov
push
fcmovne
adc
enter
push
xchg
std
loope
lods
add
mov
jle
hlt
mov
push
dec
cmp
ss
mov
mov
jne
dec
stos
into
pop
out
popl
cmp
mov
loope
outsb
inc
out
mov
push
mov
test
pop
and
add
lds
sbbl
jo
mov
cs
mov
cmp
mov
jp
popa
fsubrs
hlt
sbb
lods
jg
fwait
inc
ret
or
sbbl
pop
sub
cmp
orb
mulb
inc
xor
xchg
addr16
push
inc
or
xchg
adc
xchg
mov
xor
jae
repz
lcall
in
loop
lret
dec
sahf
jmp
in
testb
dec
lock
xor
cltd
mov
seta
xchg
pop
stos
pop
push
xor
bound
mov
and
mov
add
das
push
rorl
test
mov
in
cmp
lea
inc
xchg
les
into
pop
mov
sbb
aaa
ret
xor
mov
inc
jbe
push
or
sub
push
loopne
mov
add
inc
movsb
insl
mov
fildl
cmc
mov
adc
add
cmp
add
cmp
rorl
mov
mov
mov
pop
movsb
in
mov
jne
shrb
cltd
cmp
sbb
lock
lret
mov
stc
cmp
xchg
pop
paddsb
out
das
stc
dec
mov
mov
sub
mov
push
sbbb
adc
sub
lods
pop
jmp
dec
jle
mov
js,pn
cmpb
mov
scas
daa
cmc
testb
iret
imul
inc
inc
push
into
sub
leave
push
mov
clc
jae
loopne
fs
in
sbb
mov
bnd
shl
adc
and
fcomip
jle
cli
loop
rolb
dec
sbb
cmp
mov
fstpt
ret
out
ja
ds
cmc
jmp
xor
xor
inc
xchg
ja
stc
in
testl
lret
or
sub
add
ja
imul
push
scas
mov
popl
addr16
adc
jno
xchg
jno
sub
ret
jbe
pop
sbb
cs
stos
inc
hlt
fldl
jno
popl
imull
call
pop
jl
jp
lock
jae
add
ja
fsubrs
jl
orl
mov
cltd
mov
lea
jg
mov
mov
cmpsl
xchg
mov
xor
xor
into
sbb
test
push
xchg
mov
or
aaa
xor
je
int
jge
mov
cltd
jl
jns
mul
sahf
mov
jecxz
shlb
js
mov
cltd
shl
jnp
shrb
popa
xor
rcr
cmp
mov
mov
mov
xchg
scas
xchg
dec
jmp
js
cmc
movsb
aam
addr16
xchg
inc
out
jl
add
mov
les
add
cltd
lret
xlat
xchg
mov
mov
faddl
add
jecxz
ljmp
adc
in
addr16
push
xchg
in
jecxz
iret
jo
rclb
dec
fwait
imul
sub
es
daa
frstor
nop
or
mov
push
push
rcl
mov
cmp
sbb
cltd
cld
xchg
pop
xchg
fiadds
adc
and
xlat
fcmovu
vpunpckhwd
mov
testl
xorl
loope
pusha
jl
clc
cmp
mov
repnz
jbe
shlb
jns,pt
inc
push
les
fistl
xor
sub
pop
dec
iret
add
negb
std
movsl
jne
insb
mov
or
minps
adc
lahf
ret
mov
push
pop
add
shlb
cmpsb
aad
mov
shr
mov
test
scas
cmp
push
jle
aam
sbbl
lcall
cmpb
shll
pop
stos
lahf
push
ss
mov
std
incl
add
inc
or
xchg
add
addl
push
jg
cmp
sub
insb
and
inc
insb
or
cmpsb
cmp
cltd
inc
daa
push
jl
adc
mov
rcrb
jmp
add
rorl
push
lods
fsts
inc
jo
inc
inc
loop
lret
loope
adc
push
in
jb
push
cmp
xlat
jge
fnstsw
cmp
mov
stos
jne
mov
stos
mov
mov
cltd
psrlw
and
lods
mov
push
cmpsb
cmp
pop
ja
adc
cmpsl
xor
fdivr
addr16
cmc
hlt
dec
pop
xchg
stos
nop
mov
xor
jmp
sbb
jecxz
lret
push
addb
cli
loopne
fldt
lret
test
aam
out
in
sti
mov
xor
xchg
lds
and
xchg
push
push
dec
fs
xchg
fs
lock
into
pop
js
adc
testb
fwait
xchg
sub
loop
mov
sub
xchg
mov
aam
lahf
repnz
aam
lret
fsubs
push
iret
mov
xor
mov
pop
in
jle
lcall
cld
daa
sbb
jmp
std
push
mov
xchg
mov
testb
lods
mov
imul
push
ja
cmpsb
pop
pop
enter
pop
addl
mov
daa
fists
bound
jg
enter
enter
xchg
lret
sub
sub
jo
adc
mov
cmp
cmp
popa
mov
sarb
adc
aaa
cltd
pop
mov
mov
mov
movsbl
push
mov
ss
scas
inc
push
lea
and
sub
aam
mov
add
loope
xchg
sarl
pop
ja
cmpsb
sbb
xchg
xchg
stos
or
and
xchg
je
cwtl
dec
pushf
jo
mov
stc
orb
dec
ss
jle
dec
or
cmp
std
fcmovu
hlt
loope
jo
cmp
fldt
sar
mov
cld
cmp
popa
clc
jp
mov
add
test
push
mov
outsl
xor
leave
out
sti
outsb
mov
jl
cmp
scas
and
add
mov
mov
sti
and
push
ret
push
repz
lret
add
ret
mov
shl
jp
mov
pop
pop
sahf
in
in
dec
fwait
inc
iret
pop
arpl
push
js
popf
push
dec
inc
cwtl
cmpsl
push
xchg
push
sub
xor
nop
jno
pusha
pop
adc
inc
push
rclb
iret
jnp
enter
ja
add
push
sarb
lock
or
rolb
out
mov
in
and
jno
faddl
stc
les
push
xchg
jge
jmp
xor
dec
and
xor
scas
cmp
adc
bound
mov
push
xchg
loop
std
ds
loopne
test
mov
fcomps
shlb
aaa
mov
dec
or
mov
je
scas
inc
add
mov
adc
inc
fidivs
sti
and
inc
add
fildll
out
dec
mov
dec
or
xchg
das
rolb
adc
add
cs
pop
movsb
mov
dec
imul
dec
call
sbb
adc
dec
gs
out
shl
hlt
out
fidivrl
pop
pop
lret
adc
xchg
pop
enter
mov
movsl
add
pop
sub
mov
scas
lds
jb
pop
add
iret
push
std
gs
mov
arpl
cmp
and
loope,pt
pop
scas
lret
pop
rolb
push
loop
mov
mov
dec
cli
les
inc
out
adcb
xor
and
xchg
pop
jns
jle
xchg
xchg
adc
stos
inc
mov
mov
adc
add
outsl
js
inc
mov
scas
les
bound
ljmp
xchg
mov
add
pop
jno
dec
push
dec
adc
cmp
push
or
rorl
mov
out
cmpb
subb
repnz
pop
mov
scas
adc
ds
or
pop
or
add
cwtl
mov
shll
add
dec
pop
js
ja
out
das
xchg
jl
fcom
jecxz
ret
dec
sub
ss
jge
je
daa
mov
sarb
push
jp
mov
pop
enter
inc
sub
mov
clc
push
fcomi
xorl
out
pop
stc
fnsave
fnstenv
cmp
push
mov
adc
mov
pop
aad
stos
cmp
mov
out
push
test
int3
aam
xor
adc
inc
add
movsl
cmp
lea
mov
mov
into
add
sahf
xchg
and
ficoml
jns
int3
mov
jb
jne
clc
sbb
ds
cmc
sub
cmpsb
mov
ficoml
dec
adc
fwait
xchg
and
sbb
stos
addr16
push
shll
out
sti
mov
lahf
out
icebp
adc
jp
addr16
test
out
frndint
push
xchg
divl
sbb
mov
mov
cmpl
gs
stc
or
inc
lods
sbbb
js
mov
push
xchg
leave
xchg
imull
push
inc
stos
push
cmp
gs
idiv
dec
adc
out
cwtl
and
stc
pop
pop
xchg
sbb
sarl
jge
fldlg2
mov
jp
loope
fwait
or
shrb
js
mov
loopne
outsb
ss
out
popa
sbb
or
das
dec
xchg
mov
jno
cmpsl
out
int3
ljmp
and
hlt
repz
mov
jmp
test
out
out
loopne
lods
xor
scas
dec
dec
inc
enter
dec
cmpsb
pop
push
sbb
sub
and
pushf
pushl
cmp
xor
lods
pop
sbb
ret
rolb
loope
jne
adc
and
shrl
mov
jecxz
mov
das
imul
leave
out
add
andl
lea
cmp
test
arpl
jl
pusha
cmp
dec
pop
dec
jl
xor
leave
pop
mov
jg
xchg
fwait
add
setp
adc
ss
imul
inc
jnp
insl
xchg
movl
outsb
mov
lods
cltd
fmull
adc
dec
gs
xor
sub
xor
test
adcl
dec
das
test
ficoms
ficoml
inc
adc
mov
inc
adc
cmp
sbbb
mov
mulb
int3
dec
fdivrl
imul
aaa
scas
mov
push
sbb
push
gs
mov
sub
sbb
outsb
push
aad
cmpsl
dec
mov
and
adc
stc
or
outsb
xlat
stos
sahf
mov
adc
pushf
popf
mov
sti
call
jns
lods
into
dec
mov
lret
sub
nop
popf
shlb
sti
pop
je
into
subl
fldcw
mov
jns
fisubrs
push
not
jo
clc
mov
jmp
fadds
sub
inc
add
outsb
mov
jnp
sbb
push
dec
cli
lea
loop
jmp
cmp
aad
lods
in
lock
push
mov
sub
xor
fs
xor
sub
insb
aad
popf
jns
mov
insl
cld
fidivs
xor
in
fldcw
inc
loopne
xchg
mov
out
adc
pop
stc
jl
fs
shlb
push
lea
das
inc
mov
pop
test
setle
gs
in
cmp
push
fisubs
mov
out
adc
and
add
push
and
fldt
sbb
scas
and
into
pop
shlb
xchg
popf
pop
adc
cmc
idivb
es
adc
jns
repnz
and
xchg
jbe
mov
je
jnp
outsl
pop
int3
fcoms
mov
xlat
xchg
pop
dec
push
in
mov
scas
push
loopne
lcall
xchg
lahf
mov
or
inc
rolb
iret
lods
test
jo
sbb
shll
mov
mov
arpl
ficoms
test
lret
shlb
or
fcomip
sahf
daa
adc
in
nop
jae
lea
push
sub
mov
ljmp
jb
insl
out
mov
stos
add
ljmp
das
mov
test
gs
xchg
dec
fcoms
mov
mov
mov
fldt
xor
add
fsubrs
clc
pop
fstps
ljmp
insb
push
xchg
jo
mov
sbb
pop
dec
test
mov
movsb
ffree
lret
xchg
lock
dec
in
jne
xchg
adc
jne
ja
xchg
inc
daa
and
xchg
or
call
mov
mov
xor
pop
xchg
cld
mov
stos
ficomps
inc
movsb
push
mov
mov
sarl
inc
adc
sbb
clc
outsb
rep
repnz
ds
mov
mulb
cltd
stos
daa
fiadds
xor
js
xor
les
or
sub
int
ljmp
cmp
dec
sbb
add
pushf
xor
jecxz
dec
in
pop
insl
imul
or
or
popa
inc
pop
mov
lahf
inc
adc
mov
mov
mov
mov
loope
add
sbb
clc
inc
add
sub
sbb
dec
test
leave
xor
jns
ds
push
nop
stos
fs
ret
testl
cmp
pop
lods
clc
xchg
mov
push
cltd
out
inc
push
jne
pop
jecxz
int3
jne
and
scas
mov
jle
test
aad
scas
sub
pop
ret
orl
mov
in
xor
stos
out
daa
imul
lret
pusha
dec
dec
cmp
cmp
shrb
pop
outsl
call
mov
push
or
dec
imul
arpl
out
ljmp
cmp
rolb
adc
sbb
ss
lods
push
push
cld
add
jns
mov
pushf
je
icebp
sub
mov
inc
jae
dec
inc
pop
movlps
mov
fwait
outsl
sub
cmpsb
rcrb
popf
jo
out
push
in
rcr
jno
add
clc
push
in
rcrb
adc
jae
mov
pop
fs
jmp
adc
xor
lock
jb
std
inc
fbld
lahf
or
mov
add
out
cmc
pop
sub
push
mov
mov
mov
leave
es
call
ljmp
cwtl
scas
xchg
shl
popa
fisttps
into
addr16
cmp
mov
out
int
dec
sub
add
xor
loop,pt
cld
dec
cmpsb
loop
std
sar
add
sysret
stos
lds
dec
push
mov
fstps
fidivs
fwait
and
leave
mov
xchg
or
xchg
lds
lahf
clc
rclb
push
cwtl
xor
or
insl
test
adc
lods
repz
or
and
test
cli
xor
or
aad
mov
adc
adc
xchg
test
add
movsl
dec
mov
shl
enter
jno
xchg
or
insl
sbb
movsl
popf
loopne
mov
cltd
scas
dec
fnstenv
es
jge
stc
ud1
sub
enter
ds
pop
sub
out
cli
adc
cmpb
aas
and
mov
fmull
adc
mov
jmp
sub
lds
adc
ja
je
int3
dec
add
pop
xor
xor
into
sub
sub
or
stos
inc
into
roll
mov
sbb
shlb
xchg
loop
jnp
movsb
xor
jnp
and
out
mov
xchg
fsubl
push
mov
push
inc
ret
and
add
inc
adc
mov
xor
mov
adc
cmp
scas
cmovs
xor
jmp
loop
sbb
out
mov
cmp
pushf
std
xlat
in
lds
imul
sub
xchg
repnz
pop
js
xchg
mov
push
xchg
mov
lret
loope
mov
shll
scas
and
push
mov
mov
xchg
or
push
pop
dec
add
imul
mov
and
cmp
test
repnz
cltd
popf
pop
cmp
inc
or
divb
cmp
lods
arpl
xor
sub
cmp
sahf
std
test
sbb
fcoms
xchg
rol
out
ss
in
fcompl
or
sarl
jp
xchg
rcrb
inc
cld
lret
xchg
or
sbb
rcl
imul
