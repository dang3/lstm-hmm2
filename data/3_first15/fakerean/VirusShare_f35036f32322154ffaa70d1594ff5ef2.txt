sbb
add
mov
sbb
insb
sub
xchg
je
fmulp
xchg
push
pop
sub
mov
mov
data16
cli
scas
mov
ret
push
rcrl
dec
inc
inc
mov
outsl
xor
jp
adc
or
adc
and
fdiv
cmc
test
push
stc
daa
fwait
cmp
push
inc
xchg
dec
mov
xchg
push
outsb
xor
hlt
xor
leave
hlt
test
xchg
dec
cs
insl
add
leave
adc
aaa
hlt
pop
int3
sarb
loop
mov
int3
hlt
mov
mov
xchg
xor
mov
notl
mov
mov
inc
sub
jns
pop
cld
lret
hlt
arpl
add
fstl
out
sub
aam
popa
cwtl
repnz
push
rclb
inc
xor
stc
inc
mov
mov
stos
jecxz
mov
inc
lods
add
pop
in
mov
jb
jns
std
cmpsb
imul
jbe
or
mov
lea
jg
int
cmp
insl
sbb
sub
jnp
in
mov
adc
push
xor
cli
rcll
pop
cmp
into
mov
divb
pop
mov
sub
insl
aam
dec
pushf
scas
mov
cmp
adc
incl
sub
rcll
sub
in
jg
fwait
xlat
xor
out
dec
movsb
xor
adc
je
lcall
sbb
xchg
push
mov
pop
int
pop
les
mov
push
and
mov
mov
into
inc
pop
repnz
test
pop
and
lock
or
addr16
ss
hlt
out
sub
inc
jne
or
mov
jmp
into
mov
push
add
pop
cmc
or
pop
test
notb
xchg
dec
or
add
arpl
xchg
cmp
fisubl
sub
pop
call
cmp
jb
imul
mov
sbb
sarb
jge
cmp
shrl
fsts
movd
test
inc
fistl
cmpsb
xor
mov
or
jb
fs
mov
cmp
xchg
shll
jb
cmp
sahf
pop
fnstcw
stos
popf
lock
mov
jns
cli
push
jmp
popa
addr16
push
daa
js
jae
aam
push
inc
mov
punpcklwd
pusha
movsl
sub
mov
add
xor
adc
pop
dec
hlt
mov
mov
jb
dec
adc
jae
notb
int3
add
pushf
push
mov
mov
out
outsl
xor
jge
out
jne
xchg
dec
std
aad
and
xchg
lods
adc
xor
lea
aad
stc
dec
and
faddl
xchg
rorl
lds
arpl
jg
fcoms
test
xchg
pop
pop
jg
xor
aam
jg
arpl
out
add
add
xchg
loop
lcall
push
jmp
lret
lcall
inc
into
adc
sbb
jb
or
sub
loopne
clc
enter
add
popf
mov
cmp
or
or
test
testl
add
pop
pusha
popf
aad
xlat
cmp
popa
mov
scas
packuswb
js
into
imul
filds
xlat
std
mov
scas
cmp
scas
dec
pop
nop
cmp
inc
shl
push
cwtl
mov
sti
stc
lods
pop
pop
and
mov
xchg
repnz
mov
jno
adc
lret
int3
jne
lahf
lret
sbb
jae
adc
pop
push
fcompl
sbbl
mov
jnp
insb
aad
cmc
inc
gs
dec
cwtl
push
out
adcb
test
shl
pusha
rolb
mov
fisubrl
cmp
pop
pop
add
push
in
hlt
push
sub
mov
js
sbb
mov
xor
lods
adc
adc
pusha
dec
push
rorb
sub
mov
xor
cmp
lret
mov
jmp
stos
shrb
lret
inc
jbe
push
xchg
daa
push
loopne
ljmp
push
jns
stos
mov
imul
mov
cmp
xor
sbb
cmc
mov
mov
sti
mov
jmp
xor
inc
mov
shll
cmpsb
fldln2
adc
sbbl
sbb
mov
outsb
out
mov
mov
xchg
sub
xchg
je
xor
inc
outsl
sbb
inc
adc
mov
add
push
push
mov
sbb
xchg
subps
add
fiadds
icebp
shl
leave
cwtl
xor
or
add
imul
adc
outsl
stc
in
and
sbb
adc
mov
ljmp
test
push
add
mov
xchg
inc
iret
les
cmp
dec
ror
sub
out
pop
dec
in
aas
jb
aam
and
xchg
shr
mov
dec
push
enter
mov
hlt
xchg
xor
inc
ficoms
xor
inc
scas
mov
sub
sub
push
je
push
out
in
dec
jb
sti
and
test
ret
imul
mov
daa
out
jae
pop
sti
inc
lcall
movsb
scas
inc
clc
sub
lods
daa
or
push
jnp
jg
nop
lods
sub
mov
mov
jno
push
adc
arpl
fisubrl
jecxz
adc
enter
sbb
cmp
dec
out
or
inc
mov
repz
and
inc
mov
cmpsb
in
mov
lret
dec
jbe
and
dec
aam
push
call
push
bound
mov
mov
xor
in
pop
shrb
andb
ja
mov
pusha
out
mov
jbe
jmp
popf
inc
movsl
push
mov
loope,pn
cmp
pop
push
pop
inc
push
sub
out
pushf
aam
jmp
cmpsb
lds
lahf
imulb
and
xchg
mov
idiv
pop
ja
push
push
xchg
cwtl
orl
xchg
int
je
cmp
fnstsw
movsl
ds
jmp
pushf
pusha
fdivrl
cld
lret
or
cld
xchg
lea
imul
aam
bound
fs
sub
orl
push
and
mov
mov
jo
cli
xchg
stos
adc
call
add
ret
mov
push
xor
ds
decl
inc
subb
in
cmpsb
cmp
mov
mov
loopne
xchg
cltd
scas
sbb
push
cltd
int3
xchg
mov
and
sbb
pop
dec
cmpsb
jns
pop
insl
fidivl
fwait
js
push
pushf
cmpsb
jecxz
mov
dec
loope
jae
adc
jle
test
and
pusha
xor
popl
insb
sub
jp
ret
fstp
pop
ret
jge
pop
inc
inc
add
push
xchg
loope
pop
jg
inc
jecxz
shll
aad
clc
sahf
push
or
outsb
jae
out
mov
lods
mov
jns
imul
imul
pop
xor
sbb
fmulp
jp
pop
aam
rorl
lock
rclb
stos
cmovb
cmp
mov
cmp
xor
mov
dec
lods
xor
jl
adc
mov
sbb
ret
cmpsb
push
mov
sbb
mulb
icebp
fdivs
ljmp
ret
mov
push
sbb
jge
mov
rcr
test
push
cmp
popf
xor
popf
mulb
dec
xchg
dec
and
mov
mov
fldcw
jge
shl
sbb
pop
pop
jbe
xchg
stos
mov
decb
int3
sti
mov
dec
cmovnp
lret
or
xchg
mov
int3
adc
mov
jo
sti
ffree
pop
fs
leave
push
cmp
mov
or
sbbl
and
cmc
inc
insb
dec
mov
fs
jl
outsb
pop
push
mov
jmp
lcall
inc
xor
sti
mov
push
movsl
sub
outsb
in
jbe
test
mov
cmp
push
push
push
fidivs
ljmp
jl
adc
repnz
xchg
ficoml
dec
scas
rclb
jmp
pminsw
add
repz
cmc
or
jp
xchg
movsl
and
push
movsb
cltd
pop
jnp
andb
repnz
mov
cmp
hlt
jo
es
mov
jg
incl
stc
add
xor
inc
into
test
cli
push
mov
stos
or
dec
mulb
mov
sbb
mov
in
pop
bnd
pop
orb
push
push
dec
aas
shlb
cmp
push
add
pushf
loopne
or
popf
out
push
or
cwtl
add
add
pop
sub
or
mov
inc
cmp
pop
xor
shr
cmpsl
push
dec
leave
cmp
add
lcall
aaa
xchg
rcrb
lods
jne
sbb
test
jo
loop
das
outsb
ljmp
sbb
jg
mov
addb
testb
cltd
mov
fdivs
bound
cmp
repz
jge
push
and
out
movsb
mov
jmp
fnsave
loope
jl
inc
or
jne
pop
pop
cli
sbb
or
push
cmpl
mov
nop
push
fiadds
clc
call
add
test
js
movsb
jge
inc
cltd
jns
mov
fwait
aad
out
and
push
jae
jbe
jl
push
mov
or
inc
dec
pop
mov
pop
clc
and
lods
sub
rcll
mov
cmc
push
out
push
or
xlat
das
ficomps
pop
sbb
push
xor
fisubrl
mov
xchg
xchg
movsb
xor
jno
jbe
adc
ljmp
hlt
bound
ja
and
fs
out
dec
xchg
cmc
test
jno
fstps
popa
jg
sbb
push
pushf
jg
out
loope,pt
mov
mov
loopne
mov
imul
add
loopne
daa
mov
aas
xchg
ficoms
popa
mov
popa
ret
dec
popa
push
cmp
ljmp
and
fsts
stos
lea
cmpb
sub
and
push
iret
add
sbb
pop
xor
repnz
pushf
xlat
inc
lret
in
outsb
bound
leave
sub
and
xchg
and
cmp
mov
xchg
rcrl
pop
js
out
push
sub
push
mov
add
push
jo
ret
mov
adc
or
leave
push
push
mov
data16
das
xchg
imul
pushf
inc
adc
insb
pop
aam
and
sbb
movsb
insl
push
and
imul
scas
mov
or
inc
ss
rcrb
xor
lahf
pop
repnz
mov
jbe
and
lods
mov
cmp
gs
or
inc
push
pushf
mov
pushf
in
fidivrl
jo
dec
cld
xchg
imul
add
rcl
cmpsb
cs
data16
push
inc
lock
js
push
sarb
mov
and
xlat
mov
inc
cmp
pop
aam
hlt
pop
dec
mov
imul
or
cmp
xor
pop
xchg
movsb
dec
push
lahf
pop
mov
mov
fcmovnbe
addr16
mov
pusha
inc
ret
dec
or
inc
mov
or
push
stos
mov
cli
movsb
outsb
rcr
inc
insl
mov
outsl
mov
mov
nop
cmp
and
ds
dec
adc
cmp
vmovmskps
mov
aaa
mov
and
jp
sbb
stos
mov
test
into
cld
aam
nop
push
loope
inc
rcrb
mov
pop
inc
js
cld
lods
lret
add
in
inc
test
and
fwait
push
push
push
test
aam
cltd
in
xor
mov
xchg
clts
bound
add
cmp
dec
dec
rcll
push
mov
push
dec
adc
and
loope
adc
test
pop
or
jl
or
ficompl
add
xor
push
fsubrs
sub
or
add
mov
gs
mov
push
add
insb
std
test
cmp
xchg
out
aad
pop
jp
outsl
inc
shlb
add
out
out
int3
xchg
mov
mov
repnz
arpl
lret
sub
push
mov
xchg
shlb
les
mov
pusha
xchg
sbb
adc
xor
pop
pushf
repnz
cmp
cmc
repz
insl
es
fwait
out
pop
in
lds
mov
std
test
enter
add
jle
jmp
cmp
jge
cli
xor
dec
sub
ss
jbe
xchg
mov
out
xchg
lock
xor
xchg
pop
cmp
jp
and
popf
aam
xor
xchg
out
aam
fisubrl
stc
jo
adc
inc
out
dec
out
or
fwait
xchg
out
fcomi
mov
add
leave
jl
aam
jno
push
fimull
or
xor
xor
push
fs
cltd
pusha
mov
add
test
xor
bound
pop
outsb
es
mov
mov
pop
lds
das
and
test
jp
xchg
pop
add
in
and
xchg
aad
popa
jbe
cmp
rol
stos
pop
fstp
mov
cmp
loopne
outsl
sub
clc
or
mov
stos
xor
es
cmp
jne
adc
pop
out
shl
mov
inc
pop
pusha
xor
inc
xchg
pusha
cmp
dec
fdivs
sub
stos
rolb
mov
mov
in
aad
add
and
stos
aad
dec
scas
lods
repz
jb
cmpsb
dec
ljmp
pop
loopne
iret
scas
rorl
rcl
lods
mov
xchg
outsb
je
rcll
nop
jge
mov
lahf
adc
xor
mov
pop
xchg
sbb
mov
push
jo
sub
addr16
cmpsl
insl
shrd
jg
jns
add
jmp
or
pop
mov
or
jp
mov
andb
popf
mov
data16
scas
cli
and
in
xor
subb
lods
ss
jle
mov
insl
and
ret
inc
and
pop
js
cmpsb
aad
pop
or
addl
test
push
inc
cmp
test
cli
mov
jle
mov
retw
bound
shll
pop
push
pushf
jae
inc
cwtl
call
sbb
lock
jp
dec
sbb
mov
mov
rcrl
inc
cmp
outsb
and
sub
popa
and
es
in
mov
mov
in
dec
data16
mov
push
movsb
or
ret
sbb
mov
loope
push
cmpsl
jno
jl
add
out
hlt
loope
ds
inc
and
out
hlt
gs
cltd
push
adc
lret
lahf
mov
adc
mov
pop
mov
sub
push
fadds
orl
mov
sbb
loop
and
std
les
data16
ret
jno
add
sbb
xor
mov
pop
xchg
sbb
stos
add
mov
adc
movsb
push
inc
movsb
inc
mov
sbb
and
push
lds
aas
icebp
sub
jmp
ret
data16
ret
add
mov
inc
gs
les
inc
mov
sar
mov
dec
pop
mov
xchg
inc
jae
test
movsl
scas
sub
xorl
repz
jbe
out
inc
xor
mov
inc
js
inc
mov
jmp
sar
push
inc
xorb
je
cmp
es
add
icebp
pop
js
cld
sub
outsl
push
insl
test
or
cld
pop
faddl
mov
jl
mov
or
mov
fsubrs
dec
jle
adcl
dec
dec
shll
and
sub
jl
jae
and
pop
fldenv
ficoml
popa
mov
adc
dec
and
out
dec
cld
mov
cmp
mov
out
sbb
mov
jb
shll
inc
test
push
les
add
xchg
push
and
shlb
mov
cmc
fistl
cli
into
sub
inc
in
ljmp
sbb
xor
imul
mov
cmp
rclb
dec
xchg
cmp
xor
cmp
mov
cmpsb
adc
jecxz
and
pop
lock
push
or
mov
xchg
push
sub
or
aaa
ljmp
andl
push
dec
push
push
dec
xor
fcoml
jno
addr16
daa
into
dec
jecxz
hlt
pop
in
dec
xor
cs
dec
inc
adc
mov
call
mov
dec
pop
sti
add
adc
js
push
mov
add
jl
xor
sbb
cmp
add
xchg
and
jno
push
bound
jae
notb
in
cmpb
repnz
orl
fisubrl
jo
lahf
lea
movsb
pop
xchg
dec
pop
dec
xchg
push
aaa
das
call
imul
jg
hlt
ds
movsl
leave
das
pushf
xchg
pop
push
out
fldenv
scas
jae
out
pop
sar
or
xchg
jecxz
xor
lahf
into
repz
fsubrs
sub
mov
push
push
and
stos
mov
int
les
push
sti
dec
repnz
inc
inc
inc
rclb
jl
add
lret
or
icebp
stc
iret
pop
hlt
push
xchg
imul
cmp
stc
loope
xlat
or
jne
leave
addr16
aad
lock
mov
frstor
dec
arpl
xchg
loop
push
loope
inc
in
cmp
cmp
addr16
jbe
sbb
mov
cs
and
lret
insl
pusha
repz
dec
dec
rol
sbb
sahf
and
push
mov
jle
gs
loopne
notl
fsubs
fimull
push
ret
fistps
xlat
ss
mov
shr
add
mov
repnz
mov
cmp
mov
add
sbb
int3
jae
cs
js
jnp
mov
cmp
pop
stos
jmp
cli
jbe
jp
pop
cmpsl
stos
cltd
fwait
ljmp
in
pop
push
push
ljmp
js
in
jmp
out
jbe
das
inc
loop
cli
xor
push
push
shrb
stos
pushf
lock
fucom
sub
cltd
mov
fcom
dec
loop
pop
or
aad
mov
or
test
xchg
mov
pop
ret
mov
inc
divps
subb
mov
ret
std
scas
aas
jb
pop
scas
fisubs
adc
push
pushf
pop
cwtd
pop
mov
jp
xor
in
cmpsb
push
test
jecxz
sub
mov
fwait
push
stos
lea
xor
push
sbb
and
pop
mov
adc
or
and
lock
negb
mull
dec
aaa
loop
or
sub
cmc
aad
je
stos
xor
rorb
and
xlat
push
dec
lock
pusha
mov
cmp
pop
add
mov
mov
or
adc
xor
aaa
xchg
test
mov
mov
sbb
sub
imul
addr16
out
mov
ljmp
insb
push
mov
xor
push
or
mov
inc
mov
in
jle
push
aad
arpl
mov
mov
cltd
xor
inc
les
cwtl
pushf
sub
adc
je
orb
xor
std
fcomps
sbb
lods
test
in
popa
mov
outsb
mov
call
nop
scas
cmpsb
inc
ljmp
pushf
scas
jnp
xor
and
xor
mov
repnz
jae
imul
xchg
shlb
loope
dec
cmp
dec
clc
mov
mov
cld
lds
lea
subl
push
pusha
and
jno
sub
and
rcl
in
or
xchg
cld
xchg
daa
cmp
add
lods
mov
shlb
jecxz
cmp
jge
mov
negb
jp
add
push
lock
add
inc
mov
and
pop
iret
adc
movsb
dec
jns
pop
jnp
xchg
pop
jne
mov
pop
sbb
xchg
aas
jg
ds
xchg
mov
rclb
mov
xor
out
movsl
sbbb
sub
repz
sbb
mov
insb
or
xchg
sbb
adc
xchg
insb
insl
and
imull
sbb
pop
lock
gs
xchg
add
xlat
push
pop
rorl
jmp
mov
xor
aam
pop
mov
fisubs
inc
pusha
rsm
pop
icebp
fwait
dec
imul
popf
sarb
imul
add
mov
mov
mov
addl
inc
mov
sbb
inc
sbb
mov
std
loopne
sub
or
mov
aas
std
lds
mov
mov
sub
push
sbb
movsl
dec
shl
cmp
push
mov
inc
adc
push
icebp
pop
sub
inc
xor
inc
popa
aam
cmpsb
dec
and
jp
adc
push
xor
sub
mov
scas
aaa
movsb
nop
ljmp
loop
cmpsb
aad
cli
sbb
mov
jns
xchg
cmpsb
lock
xchg
cltd
or
sbb
loop
dec
cld
aaa
sti
push
pop
xchg
fmul
out
add
fstps
rolb
arpl
pop
add
jmp
cmp
mov
mov
ja
adc
cmp
daa
and
sub
scas
mulb
into
es
push
jnp
sub
outsb
das
jge
out
aaa
jle
mov
mov
mov
jo
cli
adc
pop
std
xchg
jno
sbb
sbb
scas
fisttps
mov
lods
incb
sub
and
dec
cmp
sbb
push
repz
pusha
pushf
pop
test
cmp
ja
pop
cli
js
pop
movsl
shll
pusha
enter
push
jl
stos
imul
rcrl
sbb
clc
int
mov
sbbb
enter
dec
cltd
adc
loope
and
stc
sub
stos
push
cmc
arpl
jne
adc
pop
push
mov
jge
and
icebp
test
mov
data16
inc
frstor
sub
cs
dec
push
stc
pop
inc
xor
jae
pop
inc
mov
dec
dec
dec
or
loopne
cmpsl
jp
cmp
and
jle
pop
mov
loope
and
leave
xchg
in
mov
ss
shrb
mov
sbb
inc
or
push
dec
stos
jmp
push
jg
xchg
in
mov
movsl
pop
inc
sbb
repnz
push
nop
pop
insb
data16
add
jmp
sahf
push
xchg
testl
test
cld
loopne
and
jge
loopne
pop
stc
ss
mov
xchg
seto
out
cmpsb
mov
rorb
jmp
sub
cli
jecxz
nop
jae
jmp
xor
dec
movl
mov
fildl
scas
call
sbbl
mov
sub
adc
shl
xchg
imul
out
data16
pop
stc
xor
in
stc
pop
xchg
push
sbb
ljmp
gs
push
jnp
or
mov
sahf
nop
pop
fs
cltd
mov
sbb
aam
mov
or
add
out
sub
sbb
jecxz
adc
sbb
mov
fists
orl
xor
out
sub
push
and
dec
or
std
ret
call
mov
lods
pop
jo
insl
push
mov
test
mov
jle
xlat
mov
fistpl
lret
push
in
xor
ja
mov
insb
int
dec
ficompl
loope
sahf
rolb
dec
push
outsl
test
sub
decl
xchg
sarb
mov
mov
mov
arpl
cmp
shl
jb
and
jmp
add
stos
mov
test
mov
rolb
sbb
inc
out
rolb
jne
aad
popf
jle
jnp
icebp
flds
mov
mov
cmp
pop
ret
outsl
push
fucomp
mov
xchg
push
sarl
nop
mov
mov
adc
or
jl
in
pushl
js
and
adc
fbld
pop
int
adc
test
push
xchg
inc
popa
mov
cmc
leave
mov
dec
inc
out
jno
arpl
push
cmpsb
cmp
test
punpckhwd
imul
cmpsb
lods
std
fnstsw
push
out
push
cmpb
movsl
das
aam
mov
push
mov
cmp
jne
mov
mulb
xchg
cli
sbb
xchg
dec
push
sub
push
fldln2
inc
loope
in
ror
adc
in
popa
movsl
sub
std
nop
test
fwait
xchg
push
or
lea
and
and
pop
fidivrl
int
cltd
xchg
sbb
pop
or
fs
pusha
mov
jb
mov
add
test
mov
and
icebp
add
enter
mov
mov
ss
cmpl
dec
pop
and
jbe
or
fstpl
push
dec
jo
fidivs
into
lret
or
out
lcall
add
in
adc
out
mov
rolb
and
outsl
dec
mov
pop
movb
rclb
mov
jge
inc
xchg
mov
icebp
sbb
hlt
pop
pop
jbe
in
fisubl
int
aad
lea
pop
push
inc
ds
mov
and
mov
iret
inc
pushf
mov
pop
sub
roll
push
adc
cmp
shr
rorb
xchg
mov
adc
stc
adc
test
cmp
pop
and
adc
ljmp
cli
repnz
out
mov
and
pushf
mov
or
or
jae
sub
xor
mov
lea
das
push
sub
adc
xor
cmp
stos
xor
sbb
rcrb
cmp
sbb
and
mov
arpl
dec
add
push
mov
popf
xorl
mov
pop
aaa
dec
ja
mov
jbe
or
jecxz
ret
rolb
mov
lret
enter
sahf
fs
jne
data16
mov
in
stos
cli
into
push
cli
dec
pop
pop
ja
jl
lcall
inc
outsl
mov
out
pop
sbbb
stc
popa
je
add
aaa
outsb
cmc
movsb
mov
sti
into
jp
fstpl
xchg
push
cltd
push
pop
repz
lds
mov
in
mov
jg
mov
orb
inc
out
jo
test
out
push
inc
ret
sub
scas
popa
ja
rolb
xchg
movsb
out
fisttps
cmp
loopne
dec
icebp
dec
add
mov
sbb
adc
cmpsl
loop
jne
cmp
fiadds
sarl
mov
or
add
mov
adc
jo
leave
dec
dec
sbb
lahf
xchg
xchg
test
inc
mov
leave
out
test
mov
push
push
mov
out
sbb
mov
adc
gs
es
cmpsb
jecxz
pushf
pop
push
cmp
sbb
test
mulb
leave
cmpsl
push
fnstcw
scas
pop
push
adcl
sub
and
fwait
cli
mov
notl
xor
jbe
nop
xlat
xor
mov
jmp
aas
test
inc
inc
pop
pop
adc
mov
mov
mulb
rol
mov
lods
sub
pusha
add
mov
ljmp
out
int
sahf
mov
add
jae
enter
lods
cli
inc
subb
ret
inc
lahf
inc
pop
jge
movsl
in
pushf
inc
scas
mov
inc
jge
ret
in
pop
push
inc
inc
cmpsb
es
or
loop
lahf
push
mov
xchg
or
pop
dec
ja
add
sbb
push
xchg
xchg
in
adc
sbb
pushf
hlt
stc
mov
inc
adc
jae
rcrb
rcrl
xrelease
ljmp
scas
lret
xor
mov
sub
sbb
loop
gs
mov
test
xor
adc
ljmp
out
loop
mov
movsb
mov
int
in
xchg
add
fsubp
add
mov
fs
pop
lds
xchg
pop
xchg
cld
mov
push
cmc
cmpb
popf
aaa
icebp
jg
xor
add
hlt
scas
inc
adc
stos
imul
scas
nop
movsb
or
mov
inc
out
cld
add
stos
xchg
jl
push
and
in
iret
xchg
mov
sub
mov
or
testb
cmp
fsubr
aas
mov
test
adc
loope
sub
push
fcomp
aaa
push
aad
lahf
je
or
or
pop
sbb
insb
or
fcoml
arpl
sub
pop
inc
xchg
push
adc
dec
ds
push
push
and
inc
bound
movsb
mul
mov
xchg
mov
sub
pop
dec
pop
add
pop
shrl
mov
xlat
movsb
clc
lods
push
mov
fisubs
out
pop
mov
enter
mov
xchg
pop
inc
in
sti
sub
lcall
enter
hlt
mov
push
mov
divl
repz
push
jno
cwtl
lods
cmp
adc
loope
xor
sbb
sub
std
decl
jmp
aad
inc
stc
dec
mov
scas
mov
add
cwtl
adc
mov
mov
fdivr
pop
jne
inc
jbe
sub
jge
test
aas
loope
mov
aas
ret
div
in
imull
sti
xchg
ret
je
fisubrl
es
mov
stos
sbb
and
dec
sub
pop
fstl
fildll
fdivrl
xlat
mov
inc
or
insb
addl
loop
stos
add
mov
or
js
fcoml
jecxz
frstor
adc
shlb
add
adc
jns
push
sub
mov
out
repnz
adcl
inc
pop
jbe
fisubrs
pop
ret
sar
lock
cld
and
lock
sub
cmp
mov
scas
movsl
cmp
cld
imul
stos
or
sub
pop
cmpsl
xor
hlt
out
insb
push
pop
imul
outsl
cmp
dec
mov
push
or
inc
or
in
or
or
enter
push
stos
daa
bound
inc
stc
ret
js
orb
pop
loopne
push
imul
jmp
mov
rorb
mov
push
stc
lret
xor
adc
add
sarl
test
aam
push
icebp
outsl
sub
push
ljmp
aaa
std
xor
int
aad
movsl
xor
ret
movsb
add
rcrl
xor
cs
sub
jge
cmp
test
push
push
ja
lods
adc
mov
arpl
and
insb
roll
fisubrs
lods
scas
mov
repz
imul
pop
fcoml
inc
clc
jnp
lds
inc
jl
inc
fdivp
inc
movsb
sub
mov
pop
jg
and
inc
out
cmp
test
cmp
push
enter
xor
xor
enter
xor
mov
xchg
pop
add
daa
lds
dec
imul
push
loopne
pop
jae
call
pop
and
outsb
in
cli
je
and
out
xor
mov
xor
xchg
mov
ds
pop
insl
xchg
cmp
push
mov
push
jl
cmp
enter
mov
jne
cmp
mov
loope
dec
loop
hlt
mov
or
shl
mov
out
push
mov
stos
lahf
xchg
mov
les
in
sub
adc
mov
sahf
cli
pop
into
in
xor
dec
popa
test
mov
pop
inc
in
lds
mov
pop
fildl
pop
xrelease
pushf
add
push
fbstp
or
sahf
jg
icebp
hlt
dec
pop
cs
xlat
cmp
add
jp
iret
jae
cmp
sub
cs
cmp
inc
mov
dec
add
mov
xchg
out
dec
or
daa
loop
jb
cmpsb
daa
push
sub
in
cmpsl
in
popf
popf
scas
lods
sub
mov
test
jne
pop
push
movsl
sbb
mov
fwait
xor
in
movntq
push
sbb
sbb
inc
add
dec
lock
inc
push
ljmp
or
pop
mov
dec
lods
stc
bound
cs
push
mov
fdivl
jecxz
aaa
xlat
sbb
shll
cltd
enter
ss
mov
lahf
loopne
jl
rcll
add
stos
popa
repnz
sahf
hlt
cmc
lea
iret
hlt
jns
enter
call
adc
aad
roll
xor
jecxz
test
aam
in
xchg
cmp
out
adc
jmp
sub
add
sub
shrb
aas
xchg
or
cli
mov
sti
cmp
cwtl
fmul
and
mov
jne
je
and
inc
imul
imul
add
xchg
mov
call
add
jl
imul
test
jge
and
pop
pop
call
jmp
mov
sbb
dec
inc
aas
fdiv
sub
dec
notb
loop
jmp
inc
popa
cli
movsb
or
iret
and
jae
inc
loop
xor
call
sub
mov
into
or
add
add
pop
mov
mov
fdivrl
or
stos
call
mov
push
loop
or
dec
aaa
in
and
inc
aas
outsl
sahf
mov
loope
lcall
int
sbb
xchg
inc
fs
push
xchg
popf
push
and
or
jae
cwtl
frstor
sbb
subb
lret
inc
out
jle
or
adc
enter
cmp
sub
fldt
ljmp
cli
and
out
js
or
imul
cmp
sarb
jnp
popf
pop
adc
sub
and
sub
cmp
push
pop
nop
data16
out
popa
adc
jnp
cmp
adc
jbe
bound
add
xlat
lods
xor
and
fucom
push
adc
add
movd
inc
xchg
inc
je
dec
dec
movsb
cmp
out
enter
pinsrw
dec
in
or
adc
daa
dec
outsb
pusha
sahf
aam
into
pop
shrb
jg
sbb
into
dec
subb
shr
push
jecxz
mov
xor
test
cld
popf
pop
cwtl
pusha
inc
imul
push
jae
dec
push
cs
inc
cmp
rcrl
lcall
dec
or
out
mov
adc
cmp
mov
out
sahf
push
jp
je
push
pop
adc
punpcklbw
sar
bnd
inc
pop
mov
pop
jg
fnstenv
test
sbb
ss
js
popf
mov
sbb
fcmovb
jae
jo
jae
rolb
lahf
pop
xor
mov
mov
sbb
cwtl
popf
xchg
add
mov
pop
xor
and
push
stos
das
mov
enter
stos
inc
mov
cwtl
push
lea
cmpsb
scas
pop
adc
sub
in
pushf
fldt
mov
jge
xchg
nop
mov
pop
popa
ficoml
dec
ja
or
data16
xor
leave
push
nop
inc
aam
movsl
clc
xchg
jbe
push
test
pop
pop
stc
pop
jb
pop
das
int
jp
sbb
or
jno
gs
mov
leave
lock
icebp
pusha
in
rorl
lods
dec
pop
push
xchg
inc
push
cmp
xor
cld
mov
ja
test
xor
clc
call
adc
dec
lods
xchg
dec
or
push
mov
mov
shll
add
sub
mov
and
inc
push
and
inc
xchg
scas
mov
insb
cmp
dec
jecxz
stos
push
scas
add
int
push
jae
push
inc
cmpsl
add
mov
cwtl
lods
jecxz
call
dec
cmp
push
add
and
stos
and
lret
push
inc
pop
flds
jle
xor
ss
pop
push
inc
arpl
sbb
sahf
xor
loopne
test
loopne
nop
jmp
jns
mov
scas
and
lea
mov
jge
and
aad
adc
stos
in
rcll
out
cmpsb
sub
pop
sbb
jmp
dec
mov
sarl
std
xor
orb
cmpb
sar
push
cmc
cltd
test
pop
clc
xor
out
push
push
dec
pop
sarl
pop
jno
inc
xlat
mov
add
inc
mov
adc
in
aam
cmp
xor
push
mov
mov
or
popw
or
jo
out
cmpsb
sti
stc
and
cs
loop
sub
jae
mov
inc
jnp
aam
pop
sub
outsb
add
js
adc
mov
ror
sbb
ds
push
shrl
scas
repz
out
arpl
imul
addb
and
mov
mov
dec
roll
xlat
sarl
xchg
xchg
mov
int3
xchg
mov
ds
mov
in
mov
outsb
push
call
fadds
cmpsl
insb
das
mov
and
sti
imul
sbb
cld
stc
ss
loop
ljmp
pop
mov
es
cmp
jp
sbb
or
xor
std
jmp
repz
imul
xchg
sbb
dec
out
fdivl
fldt
push
mov
push
cmp
xchg
lret
int3
js
and
jge
jmp
mov
xchg
mov
mov
mov
mov
setge
imul
ljmp
stc
es
mov
test
dec
das
mov
push
cmpsb
xlat
add
in
mov
cmpsb
hlt
push
push
lahf
dec
sbb
xor
dec
test
or
push
fstpt
cmp
movsl
push
ret
fmuls
mov
loop
outsl
add
dec
movsb
scas
push
test
dec
in
test
popf
bound
push
cmc
adc
inc
clc
pop
dec
mov
mov
sub
stos
add
push
test
js
cmp
sub
mov
inc
mov
jno
or
push
call
xchg
add
adc
test
aam
sarb
lahf
fadds
loopne
cld
mov
adcb
inc
ret
push
dec
repnz
fmuls
es
push
mov
out
cmp
cmp
push
into
push
xor
mov
xchg
mov
mov
inc
mov
fimuls
xor
dec
push
xchg
shl
push
out
mov
pop
int
inc
aad
jbe
lds
jae
push
pop
ja
mov
movsl
inc
pop
int3
cmc
mov
lret
push
rcrl
mov
pop
mov
fsubrl
in
adc
adc
test
sbb
in
jge
mov
cwtl
jmp
add
js
push
jo
fs
push
mov
sub
cmc
cld
mov
rolb
lock
pop
lods
mov
test
jb
ds
les
out
xchg
roll
pop
push
aas
test
jecxz
mov
test
int3
lods
orl
rorb
dec
or
adc
push
lds
movsl
dec
je
shlb
xor
popf
jbe
jb
imul
dec
mov
push
sbb
jmp
enter
mov
mov
in
adc
push
dec
push
in
add
bound
loop
xrelease
cld
adc
push
jp
cmpsl
push
loopne
nop
mov
insb
mov
mov
das
lcall
icebp
jge
outsb
lss
int3
add
add
dec
vmovmskps
lock
mov
leave
xchg
mov
adc
lock
adc
dec
fsubrp
fstps
aam
cmp
push
mov
fidivs
push
cmpsl
xchg
cmpsb
testb
or
jge
sub
mov
push
or
shlb
xor
gs
lods
ret
pushf
lock
xor
imul
push
push
jb
add
stc
faddp
int3
dec
jmp
hlt
shlb
test
jae
jo
mov
cmc
lahf
or
cmpsl
aad
xchg
inc
sub
mov
inc
push
leave
xchg
pop
dec
sti
inc
push
stos
out
js
mov
adc
adc
mov
fs
jo
and
ljmp
sti
cmp
jns
inc
mov
in
dec
mov
fsubrl
mov
cmpsb
sub
es
mov
inc
test
loope
fcompl
aas
je
pop
dec
adc
das
inc
inc
xor
jo
loopne
inc
dec
pop
in
add
push
mov
or
or
in
inc
inc
sbb
xor
dec
sbb
btr
xchg
aas
cmpsl
sbb
je
stc
add
inc
jne
scas
cmp
je
cmp
add
pop
cmpsb
test
xor
mov
popa
jl
xor
adc
in
mov
arpl
repz
push
cmpsl
mov
add
adc
lds
mov
stos
ret
subb
stos
les
aaa
push
xchg
push
sbb
roll
ret
inc
int
aas
aam
pop
pop
mov
xor
sub
mov
xor
nop
lea
push
push
daa
ret
loop
xchg
add
aad
ja
mov
cmp
test
aad
sbb
push
mov
jb
shll
in
dec
sbb
pusha
sbb
daa
or
idivl
setb
insb
xor
mov
lcall
loope
inc
push
fstps
mov
fs
mov
insl
mov
xchg
fcmovnu
cltd
mov
jns
sub
xchg
fcoml
incb
cmp
mov
xchg
enter
test
fidivl
jnp
ret
add
nop
adc
mov
mov
dec
movsb
ja
dec
jmp
bound
mov
scas
or
loop
cwtl
pop
mov
jmp
scas
inc
aas
stos
rcll
xchg
enter
or
cli
cmp
or
xor
sbb
ja
fmull
arpl
mov
mov
xchg
mov
sbb
add
lcall
aam
xor
sbb
inc
mov
in
insb
sbb
mov
add
pop
xor
mov
dec
cli
inc
push
jo
mov
inc
sbb
stos
addb
and
inc
lahf
mov
bound
cwtl
dec
in
jmp
insb
cld
lods
pushf
scas
imul
es
mov
call
test
xchg
dec
scas
push
and
adc
adc
adc
xor
inc
sbb
xor
inc
and
push
icebp
sti
je
dec
test
xchg
lcall
xor
cwtl
iret
mov
aaa
cmp
jg
ds
or
mov
sub
repz
aas
push
cli
aaa
test
sar
out
out
pop
fistps
xor
mov
xchg
sbb
cltd
or
lret
cmp
jmp
cltd
pop
jmp
js
mov
dec
stc
dec
das
dec
jecxz
push
and
push
lds
fcomp
sub
jo
xchg
or
add
mov
dec
inc
bound
add
scas
inc
pop
out
sbb
outsb
movsl
or
fdivs
test
scas
mov
test
pushf
cmp
mov
sbb
imul
cmpsb
and
and
ret
in
xor
mov
mov
popf
or
pop
push
adc
jae
leave
sub
fs
sbbb
scas
ds
aam
in
mov
push
sbb
mov
push
shll
loopne
pop
popl
scas
repnz
pop
jne
les
je
jmp
stos
xchg
imul
dec
xchg
cmc
inc
add
xchg
sti
or
mov
lods
cmc
fwait
xchg
dec
into
mov
inc
fistl
mov
add
stc
xor
add
sti
repnz
int3
pop
and
mov
sub
adc
mov
in
jnp
js
out
mov
push
icebp
mov
fnstenv
mov
or
rcrb
rcrb
dec
jbe
add
xchg
xchg
inc
test
and
and
neg
icebp
push
in
cwtl
xchg
xchg
mov
adc
and
imul
adcl
or
inc
mov
es
mov
push
ja
push
jmp
lahf
mov
imul
lods
loop
jecxz
jae
add
push
das
shll
jns
xchg
in
cs
jb
mov
test
dec
jl
fidivl
mov
cmp
jno
mov
mov
cs
mov
sub
popa
jg
cli
insl
mov
add
jno
rorb
jae
hlt
push
adc
adc
lcall
dec
das
lahf
jecxz
lret
add
and
jmp
mov
xchg
pop
push
xor
ret
jg
dec
adc
add
int
faddl
jl
pop
jbe
xor
pop
sahf
mov
mov
push
sarl
ja
mov
call
popf
ss
inc
xor
mov
jmp
mov
mov
mov
data16
in
pop
in
mov
divl
hlt
stos
cli
insl
push
int3
sub
addr16
xacquire
les
push
dec
pop
or
dec
addr16
mov
inc
fidivs
fisubl
leave
fisttpl
cmp
cmpsb
jns
rcl
rorl
sbb
fdivs
push
loop
lahf
stos
andb
repnz
dec
jge
pop
test
fists
iret
leave
bound
xchg
roll
ds
cmc
pop
out
mov
sbb
add
ds
mov
jne
mov
and
inc
pop
add
push
test
mov
pop
cmp
push
leave
sbb
fwait
xchg
lret
lods
addr16
lock
fisubrl
inc
pusha
inc
cmp
and
mov
lahf
inc
pop
ljmp
outsl
fidivrl
mov
add
ret
xor
dec
mov
movsb
pop
mov
sbb
xchg
or
jl
adc
shrb
inc
cmp
lcall
pop
sbb
add
pop
cli
lret
cmc
dec
dec
xor
xchg
pushf
in
sub
pop
mov
sbb
and
mov
pop
inc
sub
insl
jge
stc
les
test
call
dec
loop
add
sbb
shr
pusha
mov
mov
xlat
bound
sarl
or
cmpsb
inc
jmp
pop
push
into
xor
out
pop
lret
lret
cmp
outsb
jnp
decl
push
mov
data16
js
mov
dec
lcall
sbb
idivb
in
lods
mov
adc
lock
popf
pop
xorl
mov
jns
xchg
jecxz
sub
popa
rolb
inc
push
add
nop
imul
push
fcoml
stos
sahf
insl
xchg
pop
push
inc
fs
pop
mov
js
testl
add
cmp
idivb
je
fprem1
lods
lret
push
daa
cmpsl
add
daa
shl
cwtl
sbb
jmp
popf
sbb
addr16
xor
dec
xchg
pop
push
dec
aad
jecxz
mulb
add
lret
movsl
sub
xchg
push
in
xchg
fildl
cltd
jl
test
or
push
hlt
stos
sbbb
sub
xchg
fistpll
lret
sub
fisubrs
or
or
xchg
cmpsl
aas
mov
or
sbb
test
dec
mov
xchg
cltd
push
and
cmp
or
out
sub
int3
cmp
jmp
in
push
add
dec
mov
dec
inc
jns
daa
scas
mov
push
or
dec
lret
xor
dec
cmpsb
outsb
push
mov
xchg
push
out
mov
pop
ds
fsubr
or
lods
scas
popf
std
dec
mov
lods
xor
imul
pushf
lods
in
out
lods
push
mov
popa
jmp
sbb
sub
sbb
and
popa
mov
push
push
mov
lret
dec
gs
xor
and
and
fidivl
jg
push
sahf
or
jmp
ss
and
or
out
lods
negl
inc
add
out
jecxz
pusha
mov
sub
push
mov
sbb
mov
pop
lret
mov
ret
into
popf
fcomi
push
gs
mov
out
mov
scas
mov
les
mov
sahf
xor
sbb
pop
scas
insb
jp
mov
jae
jne
loopne
sbb
xchg
jle
xchg
incl
fcomi
mov
sbb
clc
and
cmp
xchg
hlt
imul
out
xor
ja
or
aad
dec
pop
push
jge
adc
mov
in
into
jg
hlt
cmp
pop
loopne
inc
mov
jmp
scas
sub
repz
push
and
imul
mov
mov
clc
add
push
scas
frstor
rol
pop
lcall
fldcw
dec
mov
pop
pop
out
out
mov
arpl
pop
decb
shl
mov
mov
outsl
shrb
xor
sbbl
cmp
daa
setno
cmpl
sub
and
testb
cmc
mov
in
leave
repz
fnstcw
pop
popa
pushf
sbb
mul
hlt
sarb
ss
mov
cmc
mov
fdivrl
shl
pop
pusha
bound
push
lret
dec
pop
lds
push
in
movsl
cld
repnz
lods
push
repz
sbb
decl
imul
popa
lret
push
pop
push
sub
adc
je
add
clc
lds
mov
xor
enter
jo
ret
adc
mov
test
mov
push
mov
sub
push
xchg
mov
mov
lret
xchg
shrl
and
mov
clc
addr16
repnz
add
test
mov
sub
jg
test
mov
xchg
and
movb
out
andb
nop
mov
icebp
ds
xor
cmc
mov
mull
adc
pop
pop
stc
sub
cs
test
xor
mov
mov
inc
gs
cmpsb
jge
and
jbe
ret
add
inc
nop
loope
add
sub
sub
stc
xor
mov
in
les
mov
xlat
jns
test
mov
leave
mov
scas
cmc
push
push
jecxz
inc
scas
mov
ret
mov
and
mov
popl
sub
ficoml
enter
jl
mov
shrb
pushf
lcall
push
adc
lret
clc
insb
stos
push
adc
bound
test
jae
mov
push
cltd
push
sbb
xchg
inc
cltd
repnz
sbb
mov
ljmp
std
je
xchg
int3
subb
inc
or
sbb
sub
imul
fimuls
cltd
mov
pop
movsl
cwtl
pop
scas
add
fldcw
mov
cli
aam
test
loope
pop
leave
mov
sub
sub
jg
loopne
cs
insb
dec
sub
rcrb
lcall
xor
cld
out
mov
xchg
es
mov
and
pop
and
jns
je
dec
mov
outsb
dec
cltd
movsb
xchg
dec
mov
rorl
mov
clc
call
shl
mov
pop
cmp
out
cmp
xchg
mov
mov
fwait
add
addb
pop
sbb
xor
stc
or
push
mov
add
cmp
pop
adc
mov
or
addb
mov
push
push
jecxz
push
pop
iretw
or
pop
fmull
movsl
push
jp
insb
incb
cmpsb
lret
negb
lahf
notb
adcb
push
ret
bound
jae
cmpsb
lret
mov
cmpsb
jae
xor
scas
xor
and
jne
xchg
mov
dec
xlat
jne
cmp
and
dec
pop
mov
shrb
pushf
xchg
pop
mov
inc
sbbb
loopne
mov
loopne
ds
lret
hlt
js
adc
sub
jo
ret
mov
xor
lods
jecxz
sti
data16
sti
jnp
std
sub
xor
sahf
jmp
lock
xor
xchg
int3
arpl
xor
dec
add
incb
inc
pop
push
or
shlb
push
in
gs
mull
popf
fwait
sbb
xor
push
cmp
mov
dec
aaa
enter
out
add
mov
mov
add
ds
stos
push
xchg
leave
in
cmpsb
jge
shlb
imul
and
cwtl
ret
pop
clc
test
xchg
rcrb
loope
sti
pop
rolb
xor
pop
pop
xchg
xchg
rcl
divl
xchg
imul
mov
fsts
pop
daa
js
sti
mov
lods
outsl
hlt
movsl
daa
test
mov
fs
inc
mov
aaa
xchg
xchg
nop
mov
and
jl
xchg
cld
xchg
je
xor
in
mov
pop
gs
stos
popf
mov
and
das
add
aad
in
imul
inc
outsl
jo
sub
lcall
pop
push
dec
xchg
aad
dec
inc
scas
iret
fldenv
and
mov
ret
sub
push
movsl
jns
sbb
aaa
push
inc
hlt
mov
data16
inc
jge
cs
dec
sub
sub
shrl
xchg
out
in
jns
and
nop
inc
insl
fs
or
xchg
adc
mov
xchg
xor
or
push
cld
xor
adc
fs
cmova
sbb
sti
pop
xor
xor
xchg
dec
xor
or
into
xor
lcall
pop
dec
xchg
mov
jp
jl
cmp
push
mov
mov
das
add
lar
mov
sub
xlat
xchg
adc
lea
leave
and
shl
add
jmp
mov
inc
das
mov
faddl
pop
mov
xor
adc
fildl
repz
add
or
in
xchg
dec
test
roll
xlat
sahf
loope
push
ficomps
cld
mov
dec
and
adc
jmp
xchg
adc
jl
fwait
dec
ljmp
add
fdivs
mov
pop
push
inc
pop
scas
push
aam
les
out
aaa
mov
and
inc
cld
jmp
xor
sub
lods
jl
cld
and
ret
into
pop
or
jg
dec
inc
ss
sbb
test
sub
repnz
xlat
daa
mov
xor
jne
ljmp
faddp
pusha
nop
inc
add
sub
insb
mov
lock
cmpsb
mov
fsubl
sub
and
adc
bound
sti
test
test
repz
xor
jae
or
dec
lods
sbb
sbb
rorl
dec
pop
add
jns
int
fwait
mov
jno
imul
mov
insl
cmpsb
insl
dec
fsubrl
jno
rolb
mov
xor
jae
shr
xor
roll
mov
out
and
or
jnp
push
mov
hlt
sub
fldt
insb
subb
sbb
lret
ret
jp
add
adc
xchg
pop
jmp
cmp
add
or
jae
mov
cld
mov
fildl
mov
cld
xchg
inc
mov
xchg
sahf
lds
pop
mov
mov
inc
jmp
jge
mov
addr16
sbb
testb
xchg
inc
dec
std
test
fiadds
push
jb
std
mov
push
cmp
cmp
movsl
fisubl
cmpsb
lahf
push
int3
mov
jl
pop
shll
arpl
pop
hlt
xor
push
int3
add
mov
or
test
cltd
addb
fwait
xchg
addr16
push
xchg
pop
xchg
mov
orb
fstl
sub
out
mov
cld
iret
aad
das
jae
movsl
adc
outsl
sub
sub
popa
jns
mov
push
and
je
and
leave
push
sbb
push
out
dec
stos
adc
xchg
push
and
jnp
xor
mov
jl,pt
pushw
add
scas
and
pushl
sbb
mov
test
adc
xchg
mov
xor
xor
aad
das
sub
sub
cmp
pop
xor
cmp
and
addr16
jmp
cwtl
lcall
mov
add
out
stos
jb
pop
in
pushf
mov
and
jne
xlat
pop
mov
mov
negb
and
push
or
push
xchg
mov
sarl
imul
ret
fcomps
call
and
rcr
jmp
es
xcrypt-ctr
cmpsl
push
sub
adc
push
xor
outsl
and
popf
pmaxsw
jno
and
repz
lods
cwtl
lcall
loope
test
lods
lret
lods
mov
push
std
dec
inc
mov
mov
cmp
lds
mov
add
mov
dec
cld
lods
movsb
push
lods
in
imul
jnp
and
or
mov
lods
pop
int3
xor
mov
popf
push
dec
clc
fsubrl
add
mov
sbb
in
mov
in
lods
push
mov
cld
shrb
cmp
out
add
jmp
mov
dec
xor
sub
dec
xchg
xchg
push
cld
addr16
push
jno
out
cmp
xor
shl
mov
or
ljmp
je
mov
mov
mov
mov
stos
loopne
cmpsb
and
cmp
jne
xchg
inc
mov
cltd
push
popa
leave
insb
sbb
sahf
dec
and
cmp
call
mov
xor
pop
aam
addb
push
icebp
jge
mov
cmp
fistps
in
inc
mov
arpl
cld
mov
adc
mov
cmpsl
mov
sbb
cmp
idiv
inc
or
dec
mov
pop
xor
push
ljmp
aas
lcall
out
subb
sahf
outsb
jnp
scas
lret
in
movsl
cld
mov
xchg
testl
inc
mov
das
sbb
mov
mov
pop
push
mov
mov
xor
test
clc
mov
inc
mov
mov
lcall
push
push
and
out
shl
sti
cld
js
repz
xor
and
dec
mov
xchg
xchg
inc
add
sbb
mov
outsl
lahf
dec
xchg
jg
sub
dec
inc
push
popa
repz
push
ret
fadd
cmpsb
mov
clc
jmp
addr16
dec
lcall
aaa
das
nop
jmp
fcomi
mov
cmp
ds
sub
mov
inc
sbb
frstor
mov
popa
push
xlat
xchg
es
mov
das
mov
jecxz
stos
movsb
stos
or
cmc
jp
push
pushf
test
xlat
xchg
hlt
jb
sbb
push
cmp
daa
lret
stc
jmp
push
dec
mov
jno
int3
lret
call
push
cmpl
jbe
iret
ljmp
nop
jnp
repz
push
mov
int3
and
ds
xchg
lea
xor
aas
sub
test
cld
je
pop
inc
sub
lods
movb
sar
imul
mov
xor
ret
pop
psrlw
repz
adc
adc
scas
push
ljmp
mov
icebp
push
sbb
or
pop
sbb
jns
in
in
mov
movsb
lods
js
inc
pop
mov
out
lods
mov
dec
adc
add
pop
mov
push
cwtl
ret
sub
roll
pushl
mov
adc
div
outsl
push
pop
fnstcw
icebp
add
inc
sbb
cli
sub
inc
je
pop
add
test
inc
aas
inc
dec
cs
sbb
mov
jmp
push
mov
into
jne
daa
pop
inc
push
inc
jmp
ljmp
out
das
xchg
ljmp
xchg
mov
jns
jge
fwait
pop
ja
stos
das
sahf
push
inc
lods
cmp
std
ret
rorl
push
sarb
frstor
cltd
mov
loope
xchg
lock
push
push
arpl
mov
sub
or
xor
cmpsl
push
xor
js
shll
dec
or
decb
mov
scas
cmp
daa
cmp
sub
and
mulb
loopne
out
cmp
ljmp
or
imul
sub
add
outsb
xor
addl
popa
lods
inc
ja
stc
mul
in
xchg
xor
rcr
orb
push
test
jb
lds
push
inc
rolb
ja
cmp
dec
sbb
gs
cs
push
cmp
lds
orb
loopne
pop
imul
pop
push
fimull
cmovo
aaa
notb
daa
cmp
mov
sub
or
rolb
pop
repnz
popa
ljmp
fnstenv
mov
inc
adc
or
sub
ljmp
lods
jno
in
push
lods
jne
imul
int
aam
lcall
jo
fwait
mov
push
je
enter
cmp
sub
call
scas
icebp
mov
addl
inc
inc
fsubl
jl
mov
stc
dec
xor
insl
popa
and
adc
xchg
sub
int3
mov
inc
xchg
inc
int3
cmc
push
xlat
adc
outsl
pop
ss
roll
mov
cmp
sbb
stos
cmp
jo
dec
inc
daa
mov
call
mov
adc
faddl
mov
je
jmp
xchg
int
jl
pop
add
sbb
cld
stc
adc
fnsave
inc
sbb
dec
jp
loopne
shlb
sahf
int3
mov
inc
lds
movsl
out
ffreep
push
lcall
mov
push
xor
call
xchg
shll
test
lods
in
shrb
icebp
dec
or
adc
inc
lds
xorl
sub
rorb
mov
jae
xchg
dec
movsb
in
jb
mov
fwait
mov
je
es
aad
sbb
out
pushf
cmp
pushf
into
sub
sti
das
dec
xchg
rcrl
pushf
dec
push
stc
lods
or
mov
cmp
push
outsl
mov
cmpsb
jno
mov
xchg
jo
movsl
or
enter
push
fwait
outsl
pop
aaa
lods
adc
xchg
inc
inc
fdivrs
in
xchg
movsl
lock
and
sub
repz
add
adc
cltd
push
push
xor
or
out
inc
inc
mov
push
xor
xchg
add
push
mov
cltd
out
xchg
rclb
popf
jmp
test
push
jo
push
std
fdivr
xchg
xor
stos
and
mov
add
data16
mov
hlt
out
and
mov
push
arpl
xor
mov
push
xor
jge
push
cmpl
cmc
sbb
daa
mov
pop
popf
xor
lret
sbb
test
pop
mov
fidivrs
mov
shrl
aam
pop
movsl
inc
lods
iret
push
dec
jmp
xlat
enter
adc
push
je
fs
addb
inc
test
fsubrp
cmp
stc
mov
orb
sub
addr16
fistps
ljmp
adc
xlat
pop
js
jle
push
inc
sbb
movl
rcr
inc
mov
out
cld
xchg
pop
mov
sbb
cli
or
sbb
int
std
mov
in
lds
vpaddsb
lret
sbb
cmp
jbe
sbb
and
cmp
mov
test
adc
repz
mov
sbb
sbb
sbb
pop
movsl
mov
xor
cmpsb
bound
push
xorb
lea
dec
push
sbb
adc
jo
mov
data16
mov
aas
std
and
sahf
aam
pop
out
icebp
in
ret
pop
dec
mov
mov
fisttps
lea
jns
xor
cli
jns
dec
dec
cmp
push
ljmp
mov
rcl
mov
add
daa
cmpsb
cld
jnp
push
jb
sti
lahf
dec
pop
xchg
cmp
orl
shrl
cmp
dec
add
jg
in
aaa
fistl
dec
cltd
rorl
scas
inc
stos
inc
xchg
pop
push
mov
pop
hlt
mov
mov
dec
pop
dec
sbb
movsb
cmp
insb
ss
xchg
mov
lods
movsl
and
cs
aaa
jb
mov
add
into
inc
xlat
lea
cld
out
inc
shlb
cmp
popa
cmp
mov
push
add
and
adc
test
out
ret
es
test
add
pop
frstpm(287
je
push
jne
data16
or
bound
gs
mov
dec
sub
outsb
add
push
sbb
pop
mov
cmp
or
stos
add
push
push
add
insl
xor
sbbb
cmp
jle
cwtl
inc
test
dec
addr16
push
pop
mov
es
ret
test
push
and
jl
cmp
xchg
mov
sub
adc
repnz
dec
sbb
sub
pop
insb
test
mov
roll
dec
push
or
fdivr
scas
dec
shrb
popa
leave
pusha
or
fdivrs
push
popa
sbb
and
lea
adc
cmp
loop
leave
ret
push
in
fwait
iret
in
clc
sub
add
adc
je
fsub
push
cmp
add
dec
mov
shll
xchg
hlt
mov
adc
fcoml
pop
and
lahf
ror
sbb
cmpl
ret
stos
jl
jno
fsubrl
and
adc
in
test
push
mov
inc
mov
loope
in
adc
sub
xor
cmp
js
movsl
sub
stc
inc
sahf
cmp
dec
std
cmpsl
xor
loope
cmp
xchg
lahf
xchg
jns
aaa
les
lcall
lods
dec
xchg
inc
test
adc
ret
xchg
fxch
jne
mov
mov
jo
mov
repz
adc
or
push
jb
lods
sbb
sti
loop
aad
sbb
inc
mov
fidivrl
cwtl
pusha
jae
outsl
enter
aad
sbb
or
pushf
lock
fbstp
xchg
ja
mov
mov
add
mull
pop
or
inc
sub
das
lock
add
addb
jo
repz
pop
inc
ljmp
and
sub
or
push
rcr
dec
test
rcrl
jb
stc
sub
outsb
cltd
push
mov
mov
pop
mov
mov
push
es
push
or
sbb
and
sbb
jp
push
sbb
inc
lods
inc
add
dec
mov
lods
clc
inc
hlt
iret
das
mov
or
sbb
out
adc
add
dec
std
imul
pop
popf
and
lret
rcrl
in
add
repnz
insb
lahf
mov
int
fistl
sbb
jno
das
ja
mov
fwait
dec
xchg
mov
aas
sbb
repnz
or
loope
jmp
adc
xor
mov
shlb
xchg
jno
ret
mov
xor
enter
push
xchg
leave
mov
in
mov
movb
shrl
enter
pop
iret
lea
stc
lea
inc
popf
mov
imul
loop
push
mov
add
das
cld
je
jno
mov
lcall
adc
orb
xchg
mov
inc
dec
popf
mov
dec
ds
dec
adc
mull
out
mov
addr16
jne
dec
mov
pusha
cmp
iret
and
test
push
mov
rcrb
out
scas
cmp
sahf
pop
pushf
nop
rcrb
pop
loope
pop
push
outsb
ror
in
loop
scas
cmp
orb
loop
pop
jle
xor
pop
stos
jns
xorl
mov
inc
jmp
scas
stc
xchg
pop
fidivs
and
and
push
ljmp
add
and
repnz
inc
test
mov
xchg
mov
jle
pop
jmp
push
roll
popa
test
mov
sub
scas
lods
mov
inc
dec
mov
add
push
lock
adc
dec
lahf
xorb
jp
sti
jecxz
jnp
lods
sarl
stc
and
mov
lds
pop
movsl
pusha
xlat
pop
je
dec
sbb
fildl
inc
pop
or
xor
fimuls
test
lcall
mov
lahf
pop
popf
ret
inc
jnp
sub
pushf
popa
cmp
aam
in
push
pop
mov
cld
insl
jp
mov
in
dec
mov
daa
push
adc
hlt
xchg
ret
push
mov
shl
in
pop
pop
mov
stc
popf
push
into
jno
scas
sbb
fstpt
fiadds
mov
call
cwtl
xchg
shl
sbb
pop
mov
ss
xor
ds
cmp
subl
xor
pop
sbb
in
repz
adcl
mov
push
jmp
rolb
stc
pop
xlat
xor
push
dec
icebp
out
adcb
bound
fbld
add
cwtl
mov
ret
icebp
ljmp
push
mov
stos
fisubrl
pop
sbb
pop
je
lods
call
jmp
gs
xor
push
and
push
popa
popa
adc
enter
xchg
das
xor
adc
rcrb
push
mov
stos
pop
in
enter
ficompl
jo
xorl
push
add
movsl
jo
sbb
lcall
xor
lcall
call
xor
rcrb
shlb
mov
loope
fcomip
adc
xchg
pop
arpl
or
pushf
adc
shlb
or
adc
or
lods
cmp
in
loope
and
xchg
stos
out
push
jle
or
out
mov
sub
jle
gs
fsubrs
push
jno
ja
imul
es
pop
cwtl
add
test
gs
add
arpl
test
lods
mov
push
iret
lods
or
lds
sub
inc
push
mov
cli
pop
sub
mov
mov
sti
pop
pop
mov
in
arpl
int
push
stos
arpl
xor
insl
addr16
and
adc
je
out
mov
push
cmp
xor
fndisi(8087
scas
ret
inc
cmp
sti
in
push
fisttpl
fistpll
xchg
jae
jae
cmp
and
loopne
leave
mov
mov
dec
cmp
xor
cwtl
push
sbb
and
push
pop
movsl
fdivl
pushf
imul
lret
mov
jge
pop
jle
fadds
fnstsw
in
ror
mov
jp
outsb
aad
cmpsl
fisttps
cmpsb
std
adc
and
push
xor
and
fsubrp
test
fwait
mov
jmp
dec
mov
xor
pop
mov
rorb
mov
ret
push
ret
je
int
inc
jno
push
pop
addr16
adc
fisttpl
push
ffreep
inc
out
dec
xor
shll
add
sub
into
and
xchg
lahf
imul
sbb
push
data16
icebp
push
dec
sub
push
adc
and
sub
cmpsl
cmpsl
sub
jbe
jge
lcall
adc
mov
dec
mov
in
pop
jb
aad
in
or
cmp
imul
andb
cli
call
mov
pusha
cwtl
mov
fwait
gs
add
pop
mov
pop
adc
jae
xchg
xor
iret
push
aad
lret
or
jmpw
lret
sub
xchg
shl
aaa
pop
lods
ret
ja
and
pop
iret
or
and
aam
mov
push
mov
xor
lret
outsl
adc
sub
xor
fcoms
mov
inc
mov
rcll
dec
xor
rcll
cld
stos
loopne
pop
test
mov
mov
lahf
cmp
fwait
inc
pop
test
mov
das
mov
into
jae
out
sub
push
outsl
dec
movsl
mov
jg
sbb
mov
aam
rcr
psrlq
jge
es
movsb
in
dec
lods
or
xor
inc
cmp
push
xor
lock
jle
aas
insl
ror
fs
push
mov
adc
pop
inc
sub
mov
pushf
stos
in
sahf
and
arpl
xchg
movsb
ds
mov
push
push
adcb
div
lcall
in
enter
inc
dec
mov
cmp
pop
push
jb
leave
inc
jmp
mov
mov
insl
aam
je
outsb
mov
cmp
popf
in
pushf
outsb
cmpsl
lods
pop
cmpl
cmpsb
pop
movsl
and
jp
mov
aam
clc
and
shrl
in
cmp
sub
xor
fcoml
test
jo
pop
roll
ds
es
jp
inc
ja
scas
arpl
add
mov
cmp
mov
pop
mov
out
ret
sbb
insb
and
jge
jp
cmp
data16
jne
mov
imul
aas
sbb
clc
xor
or
sub
xchg
xchg
outsl
add
push
mov
xchg
sbb
cmp
push
mov
lock
sarb
mov
jo
ds
pop
push
out
xchg
mov
dec
mov
iret
inc
pop
jp
push
int
in
lods
add
push
stc
mov
fs
mov
das
push
jmp
out
xor
fsubp
push
xchg
faddl
sahf
arpl
cmp
dec
adc
outsb
jge
lods
pop
cmpsl
push
lret
scas
shll
mov
repz
mov
push
inc
jbe
das
dec
test
mov
fcoms
xchg
je
in
mov
mov
mov
stc
call
mov
push
into
inc
xchg
and
inc
and
fsubl
push
xor
mov
add
inc
push
sahf
rol
pop
enter
dec
sub
mov
ja
adc
cmp
fstl
aaa
es
push
sti
push
mov
icebp
push
pop
rorb
loope
xchg
mov
pushf
ja
xlat
bound
or
es
mov
lods
mov
mov
jmp
cmp
or
pop
ja
out
fadds
mov
fdivl
or
mov
int3
pop
push
jp
pop
sahf
adc
push
cld
mov
inc
xorb
and
movsb
movaps
adc
aaa
pop
add
cmp
js,pn
cmp
rcll
sbb
scas
ljmp
pop
push
or
mov
xor
int3
cltd
gs
jo,pt
mov
push
dec
mov
std
stos
out
bts
lds
cli
pop
pop
push
stos
lods
push
insl
gs
cmc
sub
add
je
mov
lds
das
stc
cld
mov
sahf
daa
xchg
scas
das
dec
cmp
mov
scas
xor
pop
mov
push
test
pop
clc
pop
add
pop
sub
jp
shrl
in
scas
insl
aas
or
mov
jnp
sahf
jg
stos
ja
mov
lock
lcall
clc
fisttps
test
mov
jmp
outsl
aas
aaa
jb
and
cld
jo
jne
xor
outsl
ja
mov
ficompl
push
popa
mov
jbe
scas
pop
pop
repnz
cmpsl
cmpsb
and
les
mov
dec
or
pop
cwtl
pop
and
pop
xor
pop
sub
mov
mov
push
leave
jmp
dec
cld
or
stos
jg
fcompl
fstl
dec
xlat
mov
mov
jmp
cmp
pop
and
inc
or
js
mov
daa
fwait
hlt
pop
stc
dec
adc
cli
inc
rcl
hlt
jge
fwait
cld
pop
stos
or
punpckhbw
mov
add
sbb
xor
adcl
xchg
outsb
xchg
sub
jno
ret
aaa
loop
pop
add
mov
push
pop
nop
cmc
push
mov
cmp
sub
mull
std
fimull
xchg
incl
push
in
jle
mov
mov
pusha
xor
push
push
push
pop
orl
ds
pop
mov
inc
jae
xchg
push
lret
pop
aaa
cmp
lahf
mov
cmp
ds
inc
pop
xchg
test
add
xchg
outsl
inc
xor
mov
jo
adc
inc
xchg
and
jmp
in
jl
mov
out
fmul
adc
sub
cmp
xor
mov
stos
je
testl
jbe
mov
jmp
and
out
pop
pop
in
and
cmp
int3
push
cmpsl
cmp
arpl
mov
sbb
push
mov
pushf
jne
cwtl
cmp
fstl
int
mov
icebp
icebp
push
dec
hlt
int
inc
xchg
xchg
ljmp
out
insl
jecxz
int
push
shrl
lock
rcr
dec
inc
and
sub
popa
aas
and
faddl
jmp
fimuls
cmc
mov
jae
ds
es
cmp
incb
inc
dec
add
sbb
xor
sbb
arpl
and
add
pop
out
push
push
cmpsb
push
sbb
pop
add
dec
mov
outsl
shlb
aaa
dec
sub
adc
shrb
xchg
nop
mov
adc
add
sahf
jmp
loopne
imul
adc
pop
repz
call
mov
jno
push
fisttps
imul
rorb
aas
les
lods
enter
fisubs
jne
and
dec
sub
sbb
enter
sub
jbe
mov
test
cld
mov
dec
in
inc
sti
adc
and
cmp
sub
xchg
movsb
ret
out
push
and
mov
xor
pop
je
pushl
cmpl
aaa
clc
repz
fs
repz
xchg
movsb
xchg
mulb
jmp
xchg
add
inc
pop
orl
push
outsl
dec
push
dec
sbb
jno
xchg
jno
or
inc
push
ss
int
in
lahf
mov
or
negb
push
in
dec
xchg
lret
sbb
lods
imul
cmp
cmpsl
clc
cmp
cmpsb
mov
pop
xor
xchg
int3
and
jecxz
mov
mov
rcrl
dec
pop
in
movsl
mov
xor
lahf
jl
inc
js
push
ficoml
mov
xor
lods
pop
or
mov
sbb
sbb
not
in
push
addr16
fldt
insb
xor
adc
inc
pop
arpl
mov
push
loopne
lret
outsl
and
pushf
push
stc
imul
shlb
push
push
lret
aas
cmc
loope
jo
icebp
mov
aam
int3
int
dec
or
pop
xor
fs
ret
out
pop
icebp
mov
push
cmpsb
jg
mov
stos
xchg
clc
inc
add
mov
in
adc
cmp
fsts
sbb
pop
adc
movsb
and
jmp
push
push
sub
jae
pop
xchg
adcl
setp
mov
push
ljmp
add
mov
fimuls
mov
fldenv
xchg
xor
sbb
adc
sbb
jg
in
lock
test
and
or
jae
inc
movsl
call
ljmp
mov
roll
jbe
dec
pop
pop
pop
pop
lods
and
dec
fadds
ljmp
sub
jae
hlt
sbbl
test
stos
jl,pt
loop
mov
push
sarl
xlat
and
ds
dec
test
aas
stos
sbb
mov
xor
and
dec
pusha
fiaddl
subl
jns
les
push
and
orb
dec
shrl
push
enter
insb
dec
mov
rorb
mov
dec
mov
shr
into
push
pusha
repz
fsubrl
jno
inc
adc
mov
inc
lds
ret
inc
mov
push
daa
sti
xlat
sbb
scas
testb
lret
mov
mov
jns
imul
pop
and
or
mov
dec
in
add
cmpsl
iret
lods
adc
jbe
dec
mov
mov
mov
pop
xchg
mov
outsb
dec
shrl
aad
sbb
pop
pop
je
and
movsl
hlt
mov
fstpl
arpl
mov
and
inc
popf
scas
jle
repz
sbb
jno
ret
adc
add
or
imul
jnp
sub
push
mov
lahf
jmp
aas
sub
leave
das
cli
leave
and
insb
in
cmp
out
sub
inc
int3
xchg
push
mov
cmp
and
nop
push
mov
mov
and
inc
xlat
nop
jecxz
aam
push
jmp
aad
pop
push
xchg
inc
sub
jge
mov
mov
outsl
repnz
ret
fdivs
test
pop
fadds
xchg
sti
jl
leave
cmp
cwtl
in
mov
outsb
mov
pop
sub
cmp
jns
fwait
mov
and
mov
mov
pop
mov
lcall
frstpm(287
jle
push
in
loop
mov
gs
push
mov
push
push
pop
clc
popf
scas
push
sbb
push
jle
sub
and
xchg
imul
scas
std
pop
push
ficoml
cmp
push
inc
adcb
out
adc
aaa
stos
and
pop
xchg
pop
daa
jns
cmp
loop
incb
out
push
and
sub
push
add
mov
nop
mov
jp
inc
or
cld
jl
shlb
aam
ror
clc
push
pop
or
inc
or
jno
pop
aaa
cltd
pushf
out
push
xor
inc
aaa
mov
mov
mov
sbb
jle
rol
popf
test
mov
ja
fwait
jns
inc
mov
xor
push
je
mov
je
ds
inc
jne
mov
popf
sbb
jno
inc
test
gs
sbb
xchg
shlb
push
xchg
std
dec
push
sbb
mov
shl
lods
jge
sarb
clc
cmp
je
popf
mov
jg
mov
cs
int3
shl
dec
je
cmp
sbbb
xchg
int
fldt
outsb
sub
or
divb
jmp
rorb
mov
arpl
or
dec
push
xor
mov
cli
icebp
xchg
sub
pushl
repz
xchg
dec
mov
mov
vhaddpd
lods
stos
cld
je
mov
lcall
bound
outsb
in
push
pop
push
pop
imul
sbbb
pusha
aam
lock
jnp
or
xchg
mov
popw
xchg
clc
or
or
cmpsl
out
sbb
sub
xchg
ds
or
lret
outsb
icebp
sbb
cli
add
inc
sub
xor
sbb
cwtl
inc
andb
cmp
sbb
jae
inc
push
gs
xchg
dec
inc
testl
sbb
mov
xchg
jle
and
xchg
gs
pop
inc
and
ret
jb
movsb
int
adc
fcoms
xlat
pop
mov
jp
rcll
shrl
and
mov
data16
stos
out
mov
daa
cltd
loop
lods
mov
dec
cmpsb
rcll
pop
add
sbb
out
cmp
dec
mov
in
repnz
pop
scas
xor
stos
movsb
pop
sahf
jl
add
sub
sbb
popa
mov
fisttpl
and
push
mov
lea
pop
pop
mov
into
dec
jmp
mov
sub
push
mov
add
aam
in
daa
aam
ss
sub
test
pop
test
mov
or
sbb
sbb
xchg
sbb
add
mov
xlat
dec
lea
jp
mov
dec
mov
stc
loopne
push
pushf
popf
jmp
jmp
fs
cmp
ret
fs
sub
or
push
mov
sarl
in
mov
push
movsl
cmp
push
jl
sbb
inc
mov
lea
lea
mov
cmpsl
shll
pop
push
fcoms
cmp
imul
adc
xchg
xor
add
push
sbb
fwait
xor
and
xlat
fnsave
mov
std
mov
test
pop
and
inc
mov
xchg
mov
xor
ja
fs
cmp
push
dec
std
addr16
mov
mov
pop
push
in
pop
inc
xchg
mov
cmc
dec
movsl
push
aaa
fldcw
std
rorl
sbb
data16
iret
int
sbb
aam
fmull
dec
jo
int
dec
adc
scas
jmp
popf
lahf
inc
in
mov
fcomi
push
roll
or
mov
fucomi
mov
adc
int
ret
and
push
add
stos
clc
adc
lock
cltd
and
cmp
inc
fmuls
cmp
jne
pop
mov
sub
add
dec
in
sub
xchg
fwait
and
cmp
xor
jl
dec
mov
dec
jne
inc
mov
mov
xor
pop
lock
and
push
push
mov
addb
les
in
ret
adcl
xor
cmovns
and
xor
je
push
imul
xchg
out
rorl
in
adc
test
mov
mov
cmpsl
cmp
push
mov
adc
xor
daa
sbb
pop
cmpsl
notb
daa
lcall
xchg
push
xlat
push
cmc
jne
cld
mov
dec
jmp
and
push
lcall
cmp
sub
cmp
or
test
sbb
loope
push
jge
mov
jmp
in
adc
scas
ret
int3
es
xchg
cmp
outsb
push
movsb
mov
ljmp
jb
in
filds
fcomps
pop
pop
mov
jne
icebp
imul
mov
bound
outsl
pusha
dec
adc
aaa
orl
add
and
adc
pop
jge
pop
ja
mov
jge
sbb
scas
pop
pop
imul
addr16
sbbb
jne
inc
sbb
shrl
test
test
lock
mov
jg
lret
push
outsw
xchg
jecxz
or
add
mov
lock
loope
aaa
shl
call
push
icebp
mov
lods
mov
push
jmp
inc
mov
add
sub
scas
in
sbb
xor
push
push
imul
ret
mov
dec
arpl
ljmp
cld
les
xchg
inc
fwait
rcr
aaa
cmp
dec
testl
mov
call
jmp
cmpsb
test
push
rcrb
sbb
enter
pushf
jmp
push
insb
fwait
stc
pop
outsb
cmp
mov
in
cld
and
ror
mov
iret
ljmp
enter
pop
mov
lds
rcll
jg
xchg
mov
cmpsl
aam
std
add
mov
push
jae
stc
and
dec
mov
clc
mov
mov
push
push
add
push
ret
mov
leave
data16
xchg
fsubrp
ret
xor
push
icebp
jp
ds
jge
cmp
std
int3
jecxz
sti
cmp
sub
pop
mov
pop
jnp
pop
mov
daa
stc
xor
lods
es
jl
inc
cmp
dec
mov
adc
mov
iret
inc
mov
sub
cs
jp
enter
and
xchg
pop
fisubrs
movsb
add
outsl
mov
mov
pusha
dec
sbb
repnz
ret
dec
lods
mov
and
sub
clc
dec
sub
mov
or
dec
daa
push
cmc
lret
fidivrl
pop
out
call
ret
ja
dec
data16
sbb
pop
sbb
test
lahf
push
sbb
mov
cwtl
movsb
outsl
lds
mov
add
popf
and
shrl
popa
or
add
sbbb
or
clc
cmp
jmp
dec
out
pusha
pop
mov
std
lods
mov
sbb
pop
out
daa
inc
das
sbb
addr16
push
call
dec
les
xchg
mov
xor
mov
bound
pop
lret
push
push
rcll
and
sbb
jl
dec
cmp
dec
add
push
mov
add
sti
mov
lods
repnz
or
or
test
bound
cmpl
push
movsb
add
mov
pop
fisubrs
lahf
out
sbb
add
xor
and
mov
in
or
daa
mov
les
addr16
adc
jg
push
test
scas
xor
iret
cld
test
sti
cmpl
ret
std
out
stos
mov
shrl
adc
mov
es
add
fiadds
stos
sbb
std
adc
push
mov
in
getsec
sub
lds
icebp
subb
fstps
push
mov
int
cmp
rcrl
icebp
cmp
idivl
popa
pop
stos
in
and
add
mov
adc
add
mov
xor
cmpsl
jmp
lret
fcom
dec
aam
jl
je
pop
adc
nop
pop
out
and
or
mov
addr16
sub
pusha
pop
xchg
lods
int
sbb
add
aam
notl
mov
dec
pop
call
scas
mov
xchg
aaa
xchg
dec
mov
mov
cltd
mov
cld
push
icebp
icebp
dec
es
xor
mov
enter
sbb
mov
cld
ret
sahf
int3
jb
push
and
sub
call
sbb
lcall
and
fildll
int
fldt
fxch
sub
aam
cmpsb
mov
jle
xor
shl
ret
sbb
rep
sbbl
jle
dec
mov
adc
push
jmp
xchg
outsl
pusha
cmp
mov
es
sbb
pop
arpl
xlat
std
or
lods
mov
clc
inc
fisttpl
dec
ds
lcall
es
dec
mov
push
or
or
ds
outsb
xchg
lcall
and
test
rcrb
insb
fsubrp
mov
sbb
push
xchg
dec
inc
adc
jne
rclb
or
popa
repz
dec
cmp
mov
je
mov
jl
jno
imul
jp
daa
jge
sti
cmpb
pop
mov
xchg
adc
sub
fs
xor
xchg
xor
ret
cld
mov
cmp
lock
mov
je
adc
hlt
add
lcall
pop
xchg
loopne
mov
jbe
xchg
je
lds
test
testb
rcl
cltd
popa
push
dec
out
cmpl
sarb
mov
push
lods
push
call
insl
fs
test
jp
pop
daa
jno
test
jl
adc
js
leave
cs
pop
and
mov
and
aad
aam
cmp
movsl
jge
testb
mov
inc
and
sub
jno
sub
outsb
fwait
xchg
and
lods
scas
cmc
aad
test
dec
ja
xchg
add
mov
xchg
out
cmc
aad
test
mov
pop
int
jecxz
jmp
incl
pop
mov
ja
out
add
ds
aam
ja
add
out
cwtl
pop
and
pop
cmp
in
std
xchg
pop
jns
pop
push
mov
pushf
mov
jle
pop
pushf
jae
jne
jmp
dec
dec
sahf
movsl
int
ret
sub
cmpsl
cltd
jno
mov
add
stos
pop
mov
fcom
lds
scas
out
mov
push
sbb
addr16
fs
es
cmp
jno
mov
mov
or
movsb
lret
pop
inc
rcrl
movsb
cmp
mov
cmp
iret
xchg
loop
sub
sahf
jne
inc
scas
call
shll
pushf
lret
pop
add
std
sbb
sbb
insb
repz
mov
mov
jle
jae
shrl
jb
mov
in
paddusb
rcrb
adc
jne
hlt
or
adc
inc
pop
aas
jno
dec
adcl
and
subb
insb
sti
aam
add
dec
push
push
cmpsb
addr16
mov
cmp
cmp
sub
test
sti
shll
mov
dec
mov
imul
sbb
or
cld
ret
loop
pusha
or
sub
jge
aam
pop
repz
add
sub
jno
fistpll
push
aas
mov
roll
or
outsl
add
lock
xor
fists
das
fcoms
sahf
fists
lcall
aam
testb
sbb
inc
mov
int3
sbb
inc
lods
popa
adc
mov
out
jmp
and
inc
mov
sub
enter
add
in
lods
push
jns
inc
addl
js
mov
pop
bound
sar
fstpt
int
test
mov
jbe
dec
icebp
adc
cli
sbb
adc
push
inc
cmpsl
dec
mov
ja
scas
mov
mov
sub
xor
testb
inc
push
jp
sub
mov
rcrb
cmp
pop
jl
mov
les
in
jbe
lea
movsb
push
pop
out
xor
cmpsb
adc
mov
pop
xchg
xor
push
in
fcoml
bts
jns
in
aas
push
xor
daa
pop
cmp
idivl
mov
mov
push
stc
loopne
in
aaa
or
call
icebp
fcomp
jl
cmpsl
lods
push
movb
mov
xchg
xchg
mov
push
dec
sub
xchg
xchg
dec
pop
sbbb
outsb
icebp
cs
mov
add
push
mov
fnstcw
outsb
cs
out
xlat
and
sar
lea
push
or
adc
ret
mov
fisttps
ret
or
std
ja
mov
pop
ror
mov
or
mov
push
clc
xchg
and
push
stos
test
xor
sub
mov
jp
leave
nop
dec
mov
cs
lds
int3
inc
jnp
adc
test
mov
ficompl
fldl
je
fwait
jle
pop
sub
ja
xor
pop
pop
lahf
sub
inc
nop
sbb
dec
jecxz
in
les
mov
mov
xor
daa
mov
inc
andb
mov
push
scas
lods
jo
sub
pop
dec
movsb
sub
cmp
mov
mov
adc
dec
addl
jecxz
pop
jg
jmp
inc
adc
into
jne
dec
sahf
push
es
in
lock
push
cwtl
or
mov
outsb
test
lret
loop
add
cmp
scas
inc
push
in
jp
pop
subl
mov
jmp
shll
and
pop
jmp
xor
mov
dec
rclb
fsubs
fisttpll
xchg
bound
fnsave
push
xlat
sbb
stc
dec
jmp
test
ljmp
sti
jmp
xchg
ret
inc
jecxz
xchg
mov
inc
jp
cmpsb
dec
mov
lods
inc
negl
jbe
mov
mov
pop
repz
xchg
push
in
ljmp
push
jb
jle
ljmp
sub
out
jg
adc
and
orl
loop
lret
pusha
jnp
pop
jae
testl
stc
lret
cmpsl
xchg
enter
aam
stc
jmp
mov
fildl
pop
mov
rorl
call
or
pop
pop
cmp
fmull
xchg
repz
mov
ficoml
mov
fnsave
mov
add
mov
in
xchg
int
in
cwtl
xchg
pushf
push
popa
movsl
jmp
jo
das
or
lods
dec
pop
ret
lcall
mov
xchg
inc
outsl
ret
cmp
xchg
shrb
xchg
cs
push
cwtl
mov
mov
shlb
lea
pop
push
push
xchg
call
fcoms
pop
push
popf
pop
sbb
xchg
scas
mov
dec
inc
push
mov
pop
mov
or
xor
mov
rolb
jge
sub
dec
rorb
push
lods
jae
and
sub
mov
sbb
fcomps
jl
cltd
ret
in
xor
jno
push
in
xor
pop
xchg
mov
aas
scas
push
push
xchg
loope
adc
adc
mov
push
rol
and
out
in
mov
and
ds
imul
js
popf
push
gs
mov
ret
cmc
push
or
sahf
mov
pop
sahf
out
xchg
rolb
cwtl
pop
int3
adc
push
sub
lret
xchg
jmp
xchg
les
push
icebp
in
outsb
es
loopne
mov
or
push
mov
movsb
mov
jg
sub
psrlq
cmp
out
jne
jb
jmp
xor
adc
sbb
sub
mov
lcall
adc
adc
or
mov
xchg
dec
sbb
in
test
jno
sub
dec
insb
cmpsl
and
xchg
mov
push
ds
jle
pop
add
fcmovnb
push
in
pop
je
movsl
out
sahf
mov
outsb
xchg
out
and
dec
int3
push
xor
xchg
push
flds
adc
les
nop
xor
fstp
leave
les
aam
adc
in
pop
mov
jae
sbb
and
inc
inc
pop
inc
pop
pop
hlt
imul
test
scas
pop
jp
adc
push
stc
xor
inc
sbb
sbb
adc
xchg
sahf
push
loop
shl
outsl
jg
jmp
ljmp
push
aas
lods
mov
arpl
fs
cmpsb
xchg
or
cmpsb
out
xor
push
dec
in
rcrl
pop
pop
adc
xchg
adc
sbb
adc
adc
loop
scas
divb
jo
fstpt
pop
in
dec
or
insb
les
in
arpl
sti
test
stc
pop
pop
jae
or
repz
and
cmpsb
sub
dec
push
sub
fcoml
sbb
pop
negb
ljmp
jp
call
sub
push
mov
push
cmp
and
imulb
icebp
das
cmp
pop
in
ja
or
pop
mov
pop
add
xchg
adc
mov
in
mov
test
ds
or
lret
add
shl
enter
andb
addb
clc
lods
clc
adc
push
test
ja
hlt
in
not
lods
cld
enter
pop
push
inc
mov
sub
jno
idivl
icebp
mov
inc
adc
inc
sub
mov
sarl
ja
pop
test
mov
cmp
mov
out
in
mov
mov
daa
and
adc
imul
cld
mov
call
jo
repnz
call
adcl
pop
lret
shll
repnz
cmp
mov
cmpsb
cmp
lcall
adc
jns
or
sarl
int3
pop
fdiv
stos
xchg
inc
mulb
fsubp
inc
leave
cmpl
clc
xchg
orb
push
sub
cmp
loop
ror
ss
mov
and
sub
push
shrb
add
pop
aad
xor
in
mov
pop
aaa
scas
test
push
mov
popa
lods
notl
sbb
dec
mov
add
out
idiv
test
dec
in
leave
or
add
push
or
mov
cltd
dec
xchg
push
inc
jae
mov
icebp
push
aas
loopne
rcrl
hlt
shll
xor
enter
fcomip
adcb
out
push
sub
xor
sahf
mov
cwtl
and
inc
cmp
cmp
xchg
sahf
fdivrp
sbb
sbb
or
repz
sbb
jb
icebp
divb
xor
cmp
ret
cmp
mov
push
subl
sub
rcrb
or
arpl
hlt
xchg
add
imul
cmc
int
jne
andl
pushf
iret
dec
stos
and
sbb
aam
mov
adc
push
push
mov
aad
dec
add
in
vaddpd
push
mov
popf
fs
mov
pop
movsl
push
mov
test
pop
mov
loop
or
int
adc
int
int3
test
inc
or
popa
inc
mov
jb
scas
ljmp
mov
outsb
push
xor
push
or
add
dec
sbb
aas
dec
dec
jns
imul
mov
loopne
jno
dec
test
mov
push
mov
xlat
lock
pop
jecxz
push
fdivl
int
cli
dec
lret
mov
mov
jecxz
sbb
mov
jo
addb
ss
mov
pop
les
je
arpl
add
leave
popf
sbb
push
sub
in
jge
out
cld
shlb
aaa
inc
sbb
add
cmc
xchg
out
mov
mov
imul
imul
out
aaa
outsl
decl
adc
imul
jns
mov
fcomps
lods
aad
sahf
sti
push
sub
jno
inc
mov
xlat
or
mov
leave
xchg
mov
lods
addl
inc
cwtl
shll
dec
jle
inc
jo
test
cmp
mov
scas
imul
fidivs
dec
or
cmp
jno
xchg
nop
jmp
push
enter
adc
fwait
mov
out
cmp
inc
in
nop
das
or
mov
xor
fwait
or
daa
fcompl
jne
in
jg
sub
rorl
ret
aad
dec
bound
or
aaa
or
sub
mov
call
xor
in
repz
dec
xor
inc
gs
shlb
sbb
in
dec
in
mov
cmp
scas
orb
mov
sub
mov
inc
stc
xchg
stos
jb
dec
and
cmp
sti
sub
adc
loope
jne
bound
add
mov
fwait
sub
ljmp
push
data16
das
cmp
rorb
sub
jp
mov
in
sub
push
imul
jns
dec
push
mov
loop
and
loope
ds
jle
ss
mov
hlt
movsb
test
cmp
sub
dec
push
bound
xlat
mov
mov
and
dec
aaa
ret
es
dec
cmp
jmp
lds
lret
pop
mov
call
adc
mov
dec
fildl
xor
mov
je
lea
cmpsb
or
in
mov
jge
push
test
jb
sub
inc
jmp
fdivs
sahf
or
inc
call
loop
mov
sbb
cmpsb
pop
dec
xchg
fucomip
mov
push
leave
fwait
int3
test
mov
pop
cmp
outsl
mov
ret
cmpsl
ds
dec
and
mov
pushf
leave
daa
out
enter
or
mov
repnz
mov
push
std
test
adc
mov
and
shl
push
pusha
ret
cmpsb
outsl
scas
or
mov
roll
faddl
sbb
mov
shlb
inc
mov
into
inc
adc
push
inc
cmp
jmp
push
jle
adc
out
repz
pop
rcrl
out
mov
loope
je
xlat
shlb
jns
xchg
inc
xchg
push
cmp
sbb
out
mov
ja
popa
ljmp
cmpxchg
cmp
insb
sub
cmp
fs
sbb
adc
lea
aam
fldcw
das
pop
movhps
mov
jmp
mov
sub
xor
pop
stos
xor
cld
bound
push
or
in
or
push
cmpb
hlt
mov
cmpsl
imul
inc
fs
lret
rcrl
pop
xchg
aam
lcall
popf
sbb
not
aad
daa
sbb
call
dec
daa
xchg
push
out
data16
push
xor
andb
shl
xlat
push
in
outsl
and
xor
adc
sbb
dec
cmp
cmp
test
aad
and
dec
loopne
cs
rorl
xor
enter
out
in
das
out
or
dec
cltd
pop
popa
add
add
dec
cli
and
pop
inc
push
adc
fbstp
mov
sbb
mov
mov
mov
jno
in
in
push
inc
jo
xchg
pop
sbb
pusha
push
pushf
xor
outsb
lret
sbbl
sub
mov
in
xor
cmp
sub
cli
lods
inc
cld
int
sahf
hlt
xchg
ljmp
clc
adc
dec
lods
clc
and
aad
aas
enter
inc
andl
nop
xorb
sub
mov
into
cli
stc
pop
enter
and
lea
push
data16
lahf
jb
js
dec
cmp
pop
in
adc
not
mov
dec
or
cwtl
call
test
mov
cmp
lods
xor
sbb
adc
out
sub
pop
inc
xchg
sahf
push
add
inc
les
into
in
inc
inc
and
jg
xchg
sub
mov
lods
dec
jbe
cmp
movsl
int3
jbe
shlb
aaa
or
lahf
lret
push
mov
imul
aad
pop
fstl
gs
xor
push
sarl
and
push
or
inc
in
loopne
jo
ds
ljmp
pop
fmuls
ds
aad
rcrb
adc
mov
xor
bound
scas
lahf
lock
or
add
dec
shl
or
push
mov
pop
mov
mov
add
inc
pop
add
loop
sti
in
orl
fs
outsl
neg
hlt
movsb
and
arpl
in
pop
mov
leave
mov
xor
jmp
inc
movsb
or
dec
lock
pop
mov
mov
jle
adc
push
jno
jno
data16
add
sti
hlt
testb
in
stos
pop
rcl
inc
movsl
int
mov
mov
cltd
mov
or
test
int
pushf
pop
adc
fsubrs
mov
dec
leave
cmp
in
fbstp
jmp
in
cwtl
mov
out
push
fwait
push
mov
and
and
pop
push
rcll
xor
int
loopne
or
fists
sbb
and
les
push
jo
lea
lods
cli
fstl
jnp
add
mov
or
add
out
jno
stos
or
scas
shlb
mov
push
lods
js
sub
and
out
push
lods
popf
jl
jnp
lret
push
outsl
and
sbb
addb
or
jl
ljmp
aam
fnstcw
ss
out
mov
mov
cmp
xchg
add
add
sbbl
dec
gs
sbb
cwtl
xor
orl
sarl
into
adc
clc
cmpsb
mov
lret
lock
sarb
mov
mov
movsb
addr16
into
decb
cmpsb
push
inc
imul
bound
aaa
push
dec
aad
add
das
jp
ljmp
xchg
je
stos
xchg
xchg
mov
or
repz
mov
fwait
mov
push
iret
out
enter
pushf
test
and
pushf
adc
xor
in
cmp
inc
ja
and
lret
adc
int3
xor
sbb
sub
add
ret
fnsave
in
lds
aad
push
int3
pop
dec
add
mov
imul
xchg
sbb
out
leave
add
outsl
loope
pop
cmc
push
pop
test
jl
lret
sbb
test
cs
push
enter
ds
or
fdivrl
clc
mov
add
dec
mov
sub
cmp
andl
inc
xchg
hlt
mov
xchg
pop
cmpsl
mov
xlat
cmp
mov
int3
hlt
sbb
popf
mov
ss
inc
repz
inc
pushf
xchg
int3
jo
xchg
mov
ljmp
xchg
mov
pop
sub
pop
ret
and
jecxz
xor
dec
xor
ret
or
jge
xor
into
pop
jmp
sub
lret
mov
mov
sub
cmp
cmp
mov
mov
inc
xchg
mov
addr16
movb
shl
cs
popw
cld
rorl
fldcw
pop
push
push
mov
sahf
dec
test
test
mov
pop
movsl
mov
test
bswap
divb
fisubs
sahf
sub
pop
cmpsb
xchg
and
rcrl
loop
ja
fwait
es
adc
adc
dec
dec
in
sub
inc
or
pop
push
fimuls
jae
cwtl
adc
add
xchg
fistpll
pop
or
or
lock
mov
adc
pop
cmp
mov
pusha
ffreep
scas
cmp
fdivs
pop
jnp
jp
rol
jle
cwtl
add
cmp
xor
out
stc
hlt
mov
lods
or
xchg
jo
sahf
or
mov
arpl
jns
rolb
lods
out
or
stos
sbb
push
imul
lock
mov
sub
data16
fsubrs
push
push
out
sbb
lds
pop
stos
in
orl
lods
cld
mov
aad
and
or
cmp
mov
sub
inc
out
push
xchg
in
std
add
mov
jmp
loopne
pusha
popa
jns
mov
aad
mov
out
jmp
loopne
jb
jle
daa
out
or
push
and
mov
or
pop
popf
mov
or
in
adc
lock
pusha
loope
adc
adc
push
in
and
aaa
jns
popf
notl
xlat
call
cmp
movsl
pushf
dec
daa
sti
push
das
mov
cmpsl
in
test
sub
rcll
cvtps2pd
insb
sbb
dec
leave
cmpsb
add
sahf
and
xor
adc
fldt
mov
dec
mov
mov
shll
aaa
pop
in
inc
inc
jle,pt
pop
adc
sbb
pushf
lods
loope
and
and
sbb
mov
xchg
ds
jno
mov
mov
shll
dec
ss
cmp
popa
pusha
jg
and
popf
jp
repnz
jb
in
cmp
test
shrl
pop
aaa
cld
cbtw
sbb
fistpl
or
mov
repnz
cld
xor
sarl
int3
lods
xchg
jmp
dec
mov
lcall
cld
push
dec
jb
push
movsb
mov
cwtl
cmp
mov
mov
movsl
mov
cmp
std
jbe
xlat
ret
adcl
xor
mov
adc
fcmovnu
xor
scas
scas
fstps
mov
cwtl
mov
pop
std
outsb
dec
cmpsb
push
insl
jo
in
mov
scas
dec
sarl
xchg
sub
inc
inc
not
ljmp
fsubrs
pop
dec
sub
mov
in
cmpsl
fdivrs
push
sbb
scas
mov
inc
mov
nop
fstpl
xor
adc
fsubl
cmpsb
push
sub
sbb
xchg
insl
or
adc
scas
leave
fs
sub
adc
sbb
cmp
stc
xor
lds
sti
mov
mov
jecxz
dec
mov
or
shlb
mov
rcll
dec
insb
push
push
outsl
adc
stos
aas
sbbl
jne
mov
fs
scas
jl
arpl
or
adc
or
jnp
lods
jae
mov
scas
pop
and
es
or
fldenv
insl
or
fadds
je
adc
shll
pop
jl
xchg
arpl
push
inc
test
and
cmp
mov
dec
into
mov
fimuls
push
leave
pop
scas
test
xor
add
ljmp
pop
pop
ret
sbb
or
mov
dec
mov
test
lret
push
movsb
shrb
sti
mov
add
pop
fiadds
in
nop
xchg
mov
test
fwait
scas
dec
cld
stc
xorl
inc
icebp
aad
add
and
xor
cmp
cwtl
negb
dec
aas
test
fs
out
xor
out
ja
je
clc
push
sub
cmpsb
pop
dec
in
xchg
lods
dec
mov
adc
jg
adc
and
pop
scas
stos
push
fsubs
dec
add
stc
push
pushf
xor
in
add
fs
dec
fcompl
lahf
jg
orl
cmp
fimull
xchg
push
xchg
mov
in
stos
data16
mov
xor
or
imul
lock
and
pop
repz
repz
pop
in
xor
push
push
int
fcmovnb
insb
outsl
lods
sbb
push
or
out
mov
into
cwtl
add
lods
dec
movsb
pushf
xchg
dec
addr16
in
stos
pop
cmp
add
scas
ja
test
mov
scas
push
add
fcmovu
and
ja
or
daa
ret
rorb
xlat
data16
popf
mov
fs
pusha
push
in
dec
pop
test
dec
mov
jb
mov
push
repnz
rorb
pop
inc
dec
xchg
xor
inc
rcrb
mov
dec
xchg
push
clc
js
es
fwait
pop
adc
mov
std
mov
daa
mov
fisubrl
insl
mov
cltd
gs
dec
pop
movsb
lea
jno
les
push
ret
js
ficomps
fwait
push
ficoms
inc
mov
sbb
and
pop
dec
sub
mulb
add
inc
hlt
mov
jae
int
jne
sahf
xchg
ja
fistps
and
lock
pop
mov
movsb
arpl
xchg
pop
push
imul
mov
std
out
push
push
and
push
mov
xchg
invd
std
fnsave
outsl
pop
js
movsb
jg
or
adc
pop
ss
incl
das
or
dec
and
mov
mov
orb
push
pushf
sar
lds
fdivrl
daa
in
adc
mov
add
lds
push
je
shlb
fadds
mov
les
inc
xchg
push
js
push
das
aad
shlb
hlt
push
notl
popf
cmpsb
mov
js
inc
inc
ljmp
lea
scas
pop
add
cmp
sbb
aad
leave
add
xor
jmp
sub
faddl
fsts
notl
testb
mov
sbb
xor
xchg
pop
pop
out
ret
in
push
pop
jl
pop
imul
lret
mov
sub
hlt
sar
sbb
pop
inc
cmp
xor
jbe
ljmp
pop
push
mov
xchg
inc
jb
pop
lds
dec
fldt
in
inc
data16
addl
and
jg
mov
cmpsl
jae
call
mov
lcall
enter
lcall
inc
lret
fwait
arpl
stos
xor
icebp
add
sub
repz
inc
and
jle
dec
add
loop
or
adc
mov
mov
xchg
jbe
cmp
xchg
aad
decb
gs
bound
mov
inc
inc
adc
out
aad
sahf
sbb
pop
movsl
mov
popf
sub
xchg
or
pop
xlat
cmp
mov
cmp
shll
and
es
sbb
rolb
push
addb
lods
stos
shll
cs
push
ja
pop
in
push
dec
xor
xchg
lods
or
sahf
mov
add
xor
hlt
xchg
inc
das
mov
cld
aad
sbb
pusha
mov
int3
mov
push
jecxz
sarb
ja
inc
in
or
fistpl
icebp
or
mov
mov
lds
into
mov
or
inc
cmpsl
or
pop
repnz
and
cmp
out
xchg
sbb
repnz
es
and
mov
push
es
lds
sbb
scas
push
and
push
data16
push
out
pop
fnstenv
adc
ljmp
es
mov
jne
cmpsb
les
push
jno
cmp
inc
lds
into
imul
dec
mov
dec
sbb
push
or
xchg
ss
aam
dec
push
cwtl
push
fsts
pop
lods
mov
push
bound
movsb
mov
xor
loop
xchg
add
in
mov
sbb
cmpb
mov
bound
jl
dec
lods
add
mov
loopne
dec
repnz
cwtl
push
and
pop
mov
idivl
fbstp
sub
sbb
mov
fsubr
stc
jp
insl
mov
shrl
int3
adc
outsl
xor
sub
jo
sbb
pop
cwtl
mov
cmp
in
int
lods
and
nop
ss
fnstsw
repz
pop
adc
or
pop
jle
je
cmp
cltd
in
sbb
cmpsb
dec
jge
jle
xchg
lcall
xor
sub
add
iret
push
into
sub
rcll
shll
cld
add
int
cld
shr
repz
mov
lcall
cmp
imul
jmp
add
pop
or
lahf
mov
imul
fdivs
adc
and
dec
inc
push
push
push
stc
push
inc
xor
dec
push
ljmp
add
mov
call
push
xor
pop
out
xor
adc
popa
push
mov
xchg
jmp
test
push
mov
mov
out
andl
jecxz
test
test
and
push
repnz
aas
enter
sbb
mov
outsb
pusha
ljmp
jo
pusha
stos
xorb
inc
fstl
paddb
mov
xorb
xchg
xchg
xchg
dec
popf
je
cltd
adc
dec
or
mov
dec
cmp
or
lea
lods
lret
sbb
mov
and
mov
fwait
jne
push
faddl
data16
cmc
add
das
or
outsb
and
imul
pushf
test
push
mov
fcmovbe
mov
movsl
sub
mov
mov
push
in
fildl
jbe
add
mov
push
pop
outsl
cmp
jle
inc
shrl
cmp
stos
push
and
mov
sbb
stos
imul
mov
sbb
push
xor
das
and
scas
dec
je
mov
popl
jmp
and
and
aas
or
repnz
cmp
iret
push
sbb
mov
mov
push
stc
mov
or
sbb
mov
fistl
arpl
mov
enter
inc
in
sub
popa
inc
in
adcb
jo
mov
and
and
and
mov
arpl
adc
in
andl
cmp
mov
imul
outsb
rorl
pop
lahf
inc
jmp
in
inc
sbb
add
cmpsb
xor
xor
xchg
es
cmp
mov
andb
xchg
ja
lods
lock
mov
into
xor
mov
mov
jle
xchg
dec
sub
inc
pop
mov
jnp
loope
sbb
inc
fsubrl
jl
inc
sarl
lock
idivb
mov
or
inc
aas
cmp
jg
aaa
divb
into
push
divb
stos
or
div
ljmp
pop
pop
push
mov
testb
cmpsl
add
rol
cwtl
mov
stos
xor
stos
jle
add
xchg
xchg
aaa
xchg
mov
fdivp
ss
cmp
xchg
push
mov
jp
clc
iret
mov
shlb
jnp
pop
pop
xor
frstor
dec
cmp
add
repnz
fistpl
jecxz
lds
arpl
push
ds
dec
mov
ds
out
sbb
cmp
and
lods
imul
leave
push
mov
adc
clc
lds
inc
mov
lahf
xchg
ret
popf
sub
ds
scas
xor
out
mov
jmp
pop
dec
push
cwtl
push
mov
jmp
add
xchg
ja
sub
mov
fstl
lods
sub
pop
inc
lock
mov
int3
test
icebp
ljmp
and
movsb
in
push
sub
cs
or
and
inc
aam
arpl
sahf
orl
inc
or
sub
lcall
sbb
loope
pop
mov
lds
mov
mov
test
das
inc
in
mov
push
lahf
mov
pop
cli
and
subb
xor
sti
push
das
jl
xor
sub
lea
repnz
pop
std
loop
xor
lods
lock
dec
daa
jl
in
bound
xchg
shl
fisubrs
gs
fs
add
test
push
das
and
xchg
jecxz
cs
repz
push
icebp
push
pop
mov
push
jb
sub
mov
imul
jns
ljmp
mov
mov
pop
int3
sub
negb
push
xchg
xchg
call
and
fwait
cltd
in
sbb
inc
add
add
decb
movsl
jbe,pn
xchg
mov
out
out
int
mov
jge
jecxz
fistl
in
jbe
add
push
fsubrs
xor
mov
cmp
daa
das
je
cmc
sub
sbb
lahf
dec
test
dec
mov
push
push
cltd
pop
pop
add
aaa
add
mov
sti
dec
das
mov
sbb
mov
push
xchg
ror
jle
lock
repz
sbb
sbb
xchg
cmp
addb
fadds
or
flds
pop
in
cmpsl
in
sub
es
lock
jge
xchg
sub
inc
jg
je
shll
aam
imul
dec
out
mov
add
std
push
pop
fstl
ss
shll
insb
pop
or
push
adc
cmp
test
xchg
das
jbe
or
les
jne
xor
sub
insb
fwait
sub
mov
jmp
jne
iret
fnstenv
aam
mov
fdivrs
mov
jmp
andl
lock
jo
lea
pop
xchg
xor
sbb
add
imul
jne
mov
test
roll
daa
jae
int
inc
mov
or
stc
jp
mov
das
jo
push
adc
fldcw
les
xor
dec
and
and
ret
out
push
jle
jbe
sub
lds
adc
push
enter
add
dec
cwtl
daa
fldl
mov
jne
test
fs
xchg
aad
and
negl
push
push
adc
cmp
jno
or
adc
sub
and
push
sub
out
hlt
std
jle
lcall
lahf
sbb
mov
pop
jno
inc
push
fisubrs
repz
inc
mov
rcll
cmc
in
shl
push
or
or
adc
or
push
inc
push
fmull
jge
in
mov
repz
mov
insb
jmp
sar
push
push
pop
sub
mov
mov
sbb
lea
cmp
subb
daa
and
call
insl
dec
out
clc
pop
inc
jle
andl
mov
xor
push
out
mov
int3
arpl
sbb
int
mov
or
xlat
test
inc
enter
lds
mov
jb
fldt
push
push
cmp
xchg
mov
pop
sbb
mov
gs
or
testb
mov
loopne
push
pop
push
out
jno
outsb
or
cmp
mov
push
incb
testb
mov
xlat
jne
mov
xchg
lret
les
inc
xchg
xchg
sub
cmpsl
dec
insl
mov
mov
lock
xor
mov
xchg
jns
push
insb
arpl
loopne
xor
jg
das
cs
sbb
scas
loope
sbb
ja
movsb
mov
lock
test
inc
xor
pop
arpl
xchg
ret
xor
mov
cmp
arpl
mov
xorl
insl
sahf
lea
mov
dec
cmp
inc
mov
fidivrl
fisubrl
or
lret
imul
xchg
add
shll
in
cmc
mov
shlb
inc
mov
inc
fistps
in
shlb
lods
sub
negl
call
vpcmpgtb
pop
out
bts
popa
xor
test
out
mov
imul
mov
dec
cmpsb
stos
xchg
mov
lods
test
sbb
in
mov
xor
into
repnz
mov
scas
out
fcomps
test
arpl
push
jle
xor
loope
and
out
mov
ficompl
mov
inc
stos
inc
mov
int
jmp
int3
repnz
loope
scas
push
jmp
xor
cmp
jecxz
mov
scas
mov
mov
pop
and
repz
fidivrl
mov
mov
rol
inc
sti
hlt
enter
das
push
repz
adc
jno
mov
dec
outsl
iret
adc
inc
jae
pusha
jnp
fnstsw
lret
adc
out
fisubrl
popa
test
or
shrb
add
leave
adc
jmp
out
lahf
ds
cmp
hlt
ja
shll
lret
scas
das
xchg
mov
inc
sbb
and
fabs
jbe
xchg
adc
pushf
mov
inc
adcb
sti
lret
xchg
pushf
cwtl
sahf
lea
push
and
repnz
cmp
sbb
jae
sbb
out
sti
inc
and
mov
adc
sbbb
push
rorl
dec
stos
sbb
cmpsl
sub
mov
inc
icebp
pop
dec
push
inc
xor
dec
aas
sbb
cmp
in
lock
aas
add
ret
pop
jo
and
jno
imul
push
add
je
test
dec
pop
mov
fcomip
push
loope
pop
mov
inc
push
inc
inc
mov
push
ds
mov
jl
andb
dec
shll
xor
jbe
and
jmp
jp
cwtl
adc
rcl
pop
repnz
addr16
pusha
aam
mov
rorb
sub
iret
sub
test
scas
cld
jae
inc
adc
cmp
and
insl
outsb
jl
sbb
sub
enter
push
pop
jp
clc
in
mov
repz
inc
sub
xchg
loope
shll
aaa
orb
cmp
in
stos
cld
lods
mov
outsl
xor
xchg
adc
mov
in
jne
dec
sbb
decl
ds
movsl
cmp
mov
cmp
orl
loopne
xlat
testb
js
xchg
cmp
insb
out
jne
xor
add
inc
rcrb
jp
jbe
xchg
nop
cmc
jmp
xor
and
mov
bound
dec
shll
jne
pop
inc
divl
decb
ret
fs
hlt
lods
mov
test
testl
or
std
imul
mov
jl
mov
inc
aad
mov
lods
add
sbb
adc
movsl
mov
mov
das
sub
mov
jecxz
xchg
repnz
repnz
ljmp
adc
nop
adc
inc
mov
out
sti
scas
mov
sbbl
cli
stos
shll
std
inc
and
push
jno
imul
inc
inc
mov
pop
mov
stos
stos
or
mov
lock
imul
leave
and
test
loop
cli
popa
xor
ucomiss
jb
rorl
ss
sub
mov
jp
fcmove
sahf
test
loope
jmp
stc
mov
pop
adc
or
shr
xchg
cmp
sahf
mov
bound
pushf
stc
sti
sub
les
pop
xor
xor
push
add
ret
cltd
and
daa
pusha
mov
fidivl
daa
mov
push
xor
arpl
mov
or
gs
and
cmp
cmpsl
lea
mov
inc
cmpsl
jg
jae
push
cmp
inc
stos
sub
mov
out
mov
cmp
es
mov
ja
sahf
out
dec
outsb
fidivs
pop
xchg
stos
daa
out
and
cmpsl
mov
sub
add
cmp
stos
mov
dec
dec
and
adcb
out
out
mov
bound
stc
inc
cwtl
pop
xor
test
sahf
outsb
stos
aaa
int
hlt
jno
lcall
outsl
repnz
sti
cmc
dec
sub
test
add
movsb
sub
sti
rcrb
and
jae
in
mov
shrb
dec
sahf
rolb
aaa
ret
cltd
cwtl
xchg
hlt
repz
test
test
jnp
adcl
mov
xchg
mov
arpl
xchg
imulb
int
ljmp
sbb
push
sbbb
or
popa
fnstcw
xor
or
xorb
repz
add
imul
and
mov
in
jg
loopne
inc
scas
dec
arpl
repz
inc
xchg
jno
xchg
mov
mov
push
out
add
outsb
sarb
cs
loope
add
xor
xor
xchg
sub
dec
loopew
imul
xor
jmp
pop
or
mov
jb
xchg
lods
xlat
stos
fistpll
imul
fildll
xorl
xlat
lret
or
testl
loop
mov
cwtl
out
sbb
sub
inc
pushf
lret
push
dec
pop
mov
mov
pop
mov
jg
aad
pop
fstpt
repz
dec
rclb
inc
addr16
inc
sbb
iret
and
pop
movl
mov
pusha
outsb
icebp
adc
sbb
sbb
pop
pop
add
sbb
outsb
lret
jno
fwait
imul
and
ret
xchg
or
sub
inc
adc
inc
imul
lret
fildll
loopne
enter
dec
loopne
jns
cmc
and
cld
stos
add
xchg
sbb
stos
ret
ds
bound
cmp
stos
addb
outsl
push
xchg
icebp
into
outsl
loope
cmp
inc
mov
push
push
loopne
shr
subl
rolb
pop
xchg
call
xchg
dec
pop
lahf
lea
sub
clc
lds
sbb
fbld
xchg
insb
add
push
dec
mov
or
add
jbe
jg
or
cltd
mov
pop
pop
lcall
data16
rcrl
pop
ljmp
ds
push
hlt
in
inc
roll
sbb
sti
fsubp
jg
xor
movsl
xchg
test
fistpl
inc
inc
inc
xchg
int3
sub
fsubs
mov
stos
jnp
dec
xor
movsl
xchg
mov
sub
mov
sbb
adc
inc
jecxz
pushf
pop
lret
xchg
mov
sbb
lds
mov
leave
add
adc
aaa
push
rcrb
je
mov
out
pop
loope
push
movsl
sub
mov
push
cli
inc
xchg
js
out
cmp
imul
add
pop
aas
add
hlt
cld
orb
adc
xor
fiadds
ljmp
ss
cmp
ja
xchg
fs
je
xchg
jl
jge
repz
iret
cmp
jae
cmc
loopne
xchg
movb
fidivs
xor
int3
xchg
pop
rclb
in
repnz
sub
mov
icebp
inc
xor
mov
jg
pavgb
daa
sbb
insb
sub
bndldx
sub
xchg
mov
mov
cli
and
sub
or
int3
fmuls
jnp
into
jae
adc
in
or
jle
mov
ja
test
xchg
fdecstp
and
mov
pop
jmp
das
lea
dec
lods
lret
lds
xlat
cltd
xor
loopne
out
xor
pop
dec
dec
aaa
enter
sub
cmp
fsubr
int3
inc
ret
inc
popf
jecxz
in
cmp
push
push
lea
jmp
nop
mov
stos
aad
mov
aam
aas
fcomi
xchg
enter
push
jp
xchg
outsb
jnp
repnz
lcall
add
pop
and
jmp
int
add
out
cltd
aas
pop
dec
dec
dec
loope
dec
xor
cmp
push
xchg
test
cmp
clc
in
inc
pusha
imul
cmp
xchg
sub
pushw
cli
push
mov
push
fisubl
push
cs
cmp
cmp
push
shr
jae
mov
pop
fwait
loope
fs
mov
mov
repz
in
dec
pop
in
cmp
jo
jns
sbb
mov
stos
push
stos
or
xor
movsl
pop
cmp
iret
adc
xchg
ret
out
cmpsl
inc
ficompl
mov
xchg
push
out
jl
dec
movsl
je
mov
lret
mov
cmovno
and
lock
cmp
sahf
out
xchg
fiaddl
sub
int3
divl
xchg
dec
dec
pop
popa
and
lret
mov
ficompl
mov
pop
std
notb
int3
aad
adc
testl
xor
hlt
mov
jmp
push
bound
cmp
sub
mov
adc
sti
xlat
mov
mov
in
jg
in
sbb
push
mov
popf
sbb
es
cmp
push
jg
push
aas
or
adc
rcr
movsb
mov
in
fists
dec
les
and
mov
aam
and
or
inc
cltd
lretw
xlat
jbe
mov
cld
inc
sahf
fnsave
adcb
gs
dec
add
cmc
ss
inc
xchg
iret
sbb
push
xor
jmp
in
add
adc
and
sub
aam
lock
shrb
das
or
loope
mov
std
lods
and
push
jne
mov
popf
add
push
jge
pop
cmp
mov
push
lods
add
cmp
aaa
pop
inc
stc
push
retw
cmp
in
push
add
mov
shll
in
int3
dec
fists
lahf
arpl
adc
mov
xchg
stos
mov
and
movsl
rolb
mov
push
popa
or
xchg
pop
ss
sbb
test
push
mov
adc
pop
push
les
cmp
movsb
repnz
les
ret
out
int
inc
testb
into
xor
or
dec
sub
adc
stos
out
insb
jge
ret
pop
inc
call
iret
dec
int
inc
pop
pop
mov
xor
xchg
jbe
test
fldt
movsb
fsubrp
imul
sub
subl
fstpt
push
shlb
out
mov
ds
xor
mov
pop
jmp
testb
sub
mov
mov
insl
stos
dec
mov
popa
push
add
mov
dec
sarl
repnz
cmp
enter
ss
mov
mov
imul
push
mov
mov
sbb
mov
or
dec
jns
dec
fsubrs
push
aad
pop
gs
add
push
dec
sub
cmc
xor
cmpsl
mov
mov
push
and
outsb
cmpsl
hlt
out
mov
notb
cwtl
adc
cld
pop
mov
jns
sbb
or
jbe
sub
insb
adc
or
rcpps
call
mov
outsb
inc
int3
inc
lea
xchg
mov
dec
cld
or
mov
pop
dec
outsl
lds
pop
jbe
push
mov
xchg
rcrb
das
and
jge
xor
add
jmp
mov
mov
je
shll
jne
or
cmpl
jne
loopne
dec
and
outsl
out
jle
adc
fsubs
xor
clc
push
xor
lods
rorb
pop
test
xchg
sbb
stos
and
andb
shlb
sarb
mov
cmpsl
rcl
dec
sahf
or
and
into
dec
jg
fiadds
pop
in
pop
xchg
call
ss
inc
xchg
inc
jnp
xor
push
ror
stos
xchg
add
loop
push
test
push
xorl
fcomip
pop
inc
cmpsb
dec
sub
out
test
cmp
int3
push
les
stos
mov
adc
or
pushf
insl
jae
cmp
cmp
mov
inc
pop
hlt
aad
icebp
push
aaa
inc
cmpsl
loop
or
pop
jbe
lock
ficompl
ficompl
fmuls
iret
jnp
adc
fs
dec
or
dec
pop
stc
jne
xor
add
rclb
scas
and
fstps
and
mov
test
scas
cld
fldl
iret
rcrb
dec
push
xor
ret
push
jge
pop
jp
sbb
in
aaa
xchg
lock
daa
lds
sarl
scas
jb
aaa
push
js
pop
jge
loop
inc
and
cmp
stos
je
inc
out
fsubp
push
sbb
xor
stc
fisubrl
pop
jle
std
xchg
mov
pop
push
and
jge
das
les
enter
outsl
rclb
pop
jmp
add
lock
push
in
out
sbb
ljmp
iret
out
int3
fwait
push
adc
pop
in
inc
sub
adc
cmp
inc
inc
lcall
cmp
dec
xchg
sahf
addb
jle
ja
pop
fisubl
adcb
jp
cwtl
jge
adc
inc
outsl
cmp
inc
pop
roll
or
mov
cmc
sbb
jo
sub
xor
repz
jl
sti
adc
dec
negl
clc
repz
mov
push
xchg
push
mov
test
mov
jl
push
fdivs
and
ja
mov
inc
cmpsl
mov
inc
add
mov
rolb
jle
adc
outsl
sub
dec
test
xor
cs
ljmp
lds
stc
jae
ja
inc
xchg
clc
lahf
or
mov
fcmovnbe
mov
test
shll
or
sub
push
cmpl
dec
adc
pop
sbb
sub
les
rorb
xchg
movsb
test
push
inc
cli
dec
mov
les
sub
dec
cltd
loope
cmpsb
test
dec
clc
cmp
fisttpll
mov
adc
sub
push
fs
xlat
leave
in
add
jmp
xchg
xchg
fwait
sbb
decl
jo
aad
lret
xchg
arpl
in
dec
movsl
pop
lahf
cmpb
sarb
or
sub
mov
out
shl
data16
push
mov
xchg
add
mull
insl
add
loopne
xchg
jne
xchg
imul
scas
pop
lcall
repz
out
inc
cmp
ja
aam
ss
mov
sub
mov
unpcklps
pop
imul
mov
flds
into
push
data16
ja
fs
pop
mov
mov
es
pop
pop
sub
aas
pushf
dec
sub
or
adc
sub
clc
jnp
add
push
loopne
adc
ficoms
or
movsl
mov
outsb
jge
adc
mov
pop
hlt
mov
jle
jbe
inc
jnp
loopne
dec
push
arpl
xor
adc
jl
cmp
dec
orb
or
clc
or
ret
ss
xlat
pop
inc
xchg
xchg
test
dec
or
divb
loope
mov
nop
loop
lods
icebp
dec
stc
repz
inc
movsl
fiadds
add
mov
push
je
mov
aad
ss
mov
push
mov
outsl
inc
loope
and
lret
mov
mov
and
lcall
adc
push
imul
mov
subb
xor
scas
fstpt
pop
or
pusha
add
dec
addr16
int3
repnz
add
xlat
sbb
loope
xchg
mov
jecxz
push
xor
push
ljmp
and
sbb
jl
jns
or
mov
icebp
xchg
dec
or
sub
cmpsl
sahf
je
in
inc
out
and
mov
test
insb
jo
sub
rorb
faddl
cmpsl
and
cmp
xor
add
jno
push
cmp
out
cmpsb
pushf
loope
subb
stc
cmc
sbbl
push
push
enter
insb
outsb
addr16
int3
cmpsb
divl
loopne
pop
adc
cmp
xor
mov
outsb
sbb
push
cmp
lcall
cltd
std
mov
cwtl
pop
movsl
and
jge
inc
xchg
sub
imul
xor
cmp
cwtl
mov
jnp
or
dec
shlb
mov
dec
mov
cltd
dec
or
dec
scas
movsb
mov
sub
inc
add
mov
inc
fsubp
in
lods
out
es
cmpsb
or
mov
mull
in
push
fistpl
test
push
rorb
dec
sbb
sub
lea
or
mov
mov
dec
cmp
mov
and
dec
adc
shlb
ror
cmpl
push
mov
mov
push
jo
add
enter
xchg
arpl
das
xchg
popa
in
sub
and
mov
pop
sbb
bound
gs
out
inc
mov
cmc
add
addr16
xor
push
shll
mov
cs
or
pop
lret
xor
pop
outsl
call
imul
xlat
mull
mov
decb
mov
mov
sub
jl
addr16
outsb
pop
pop
lods
in
lods
out
frndint
xlat
add
inc
shll
push
out
push
jg
dec
inc
loopew
xchg
inc
lcall
arpl
sti
test
mov
push
mov
addl
movb
stos
mov
jg
lds
or
fcmovu
movsb
cli
movsl
adc
xchg
mov
movsb
mov
push
jo
add
mov
xor
aam
sahf
roll
jno
push
sti
repz
outsl
add
sub
sbb
push
lcall
xor
imul
add
sub
add
leave
cmp
movsb
andl
pop
nop
xchg
jecxz
iret
cmpsl
imul
ljmp
push
popf
in
loopne
das
and
inc
push
cmp
loope
fsts
cmp
stc
movsb
mov
sbb
push
mov
push
aaa
lret
imul
mov
sbb
jmp
push
clc
add
call
pop
iret
lods
push
loop
or
sbb
pop
mov
lgs
insb
sub
dec
mov
lret
fidivrs
imul
cwtl
cmpsb
lock
mov
ja
pop
lock
mov
adc
fidivs
pop
sti
xor
mul
lahf
nop
outsb
pslld
data16
cmp
mov
cmp
out
js
bound
inc
je
mov
fadd
leave
push
je
pop
in
and
or
xchg
daa
push
and
push
push
das
repnz
in
or
fnop
daa
pop
mov
test
add
fiadds
cmp
mov
enter
test
aam
jl
lahf
push
push
fwait
insb
mov
sbb
ja
dec
cli
pushf
cmp
pop
popl
in
xchg
outsl
fisubrs
roll
loop
xchg
loop
or
add
cmpsb
mov
adcb
cmpb
adc
add
cmp
bound
jp
mov
or
dec
sub
das
add
js
das
mov
mov
icebp
lret
sub
les
andb
push
jle
daa
sti
adc
jb
scas
jle
mov
sub
in
lret
push
cmpsl
or
xor
jmp
test
std
xchg
js
xchg
gs
mov
mov
sub
inc
jbe
and
cld
push
or
fisubrl
lds
aam
sbbb
ss
sub
pop
push
nop
dec
mov
sub
out
test
xchg
pusha
push
fisttpl
lods
aas
jnp
insb
or
add
jne
or
adc
cmp
mov
aad
xor
inc
and
adc
and
push
and
negl
mov
hlt
lock
mov
add
popf
das
pop
aad
in
mov
int3
daa
mov
aam
pop
clc
inc
xchg
lock
mov
jnp
arpl
add
inc
in
push
rolb
sub
jns
and
xchg
mov
iret
insb
mov
push
cmpsl
nop
jb
sarl
out
pop
mov
and
fidivl
test
or
or
sbb
inc
fiaddl
push
sub
pop
xlat
and
test
inc
lret
mov
scas
test
sbb
push
in
sahf
sbb
cltd
add
cld
lret
cmp
xchg
cmp
and
aas
mov
jne
push
jno
xchg
sub
rcrl
xchg
mov
loopne
mov
mov
and
ja
sub
mov
mov
stos
dec
xor
xchg
addl
sbbl
ret
shll
pop
sbb
repnz
mov
pop
lods
out
dec
jmp
jo
out
mov
xchg
lock
ja
xchg
mov
sahf
mov
pop
mov
imul
insb
dec
lods
lret
and
call
sahf
ja
fidivrl
or
call
loopne
cwtl
mov
add
gs
aad
jno
das
test
iret
sub
loop
rorl
je
sub
ja
inc
inc
lds
fisubl
pop
mov
imul
fstps
aad
push
sub
out
jmp
push
subl
mov
in
lcall
add
xchg
out
jmp
and
fstl
inc
jo
cld
xchg
pop
xchg
mov
xlat
add
jp
arpl
js
out
rcll
int3
packssdw
scas
sub
or
pushf
sbb
mov
call
adc
fwait
sbb
imul
andb
fdivs
add
es
mov
sbb
bound
and
mov
hlt
inc
sbb
mov
mov
leave
ds
mov
dec
repz
int
mov
dec
scas
cmp
adc
xchg
aas
pop
adc
orl
cld
lods
jbe
dec
out
and
mov
jp
repz
adc
jmp
xor
repnz
xor
add
outsl
movb
cmc
test
test
je
and
mov
adcl
ja
and
ret
xchg
scas
popa
test
inc
ss
jl
fsubs
mov
cwtl
push
adcl
ss
cltd
dec
arpl
popf
or
scas
ds
inc
lock
or
mov
insb
repz
mov
mov
fwait
sti
xchg
call
and
int3
jmp
addl
push
dec
testb
cvtps2pd
xchg
aad
imul
xor
lods
sbb
mov
jle
xor
sbb
rcrl
ret
mov
dec
loope
ljmp
xchg
dec
push
mov
inc
push
dec
enter
add
out
sbb
dec
repz
in
or
std
dec
in
push
jmp
nop
or
hlt
dec
or
cld
push
xor
cmc
lahf
test
inc
mov
push
aaa
mov
sbb
mov
ret
cmp
push
push
sub
insb
mov
daa
ret
pop
xchg
dec
dec
es
enter
jbe
lcall
mov
mov
mov
loope
mov
mov
jo
data16
outsl
cwtl
sahf
xchg
jb
mov
inc
and
cmp
lcall
repz
push
xchg
int
dec
ljmp
dec
mov
lea
cs
ffreep
xchg
loopne
or
jno
mov
movsb
int
test
add
mov
int3
lret
fisttps
mov
rcrl
out
rclb
dec
mov
cmp
rcr
fisubl
pop
cmp
mov
sub
cltd
es
dec
sbb
xchg
ret
data16
xor
je
xlat
out
neg
incl
or
test
xchg
cmp
dec
pusha
mov
push
push
xchg
push
lret
pop
mov
mov
cmp
sub
mov
ret
pop
mov
jns
cmp
aas
jmp
movsb
sbbl
jmp
data16
xchg
mov
jle
pop
push
scas
or
mov
std
mov
push
lret
or
pop
xchg
pop
add
arpl
outsb
cmc
ljmp
inc
dec
jnp
popa
add
cmpsl
jle
cltd
mov
push
insl
mov
pop
xor
lea
push
lret
mov
jo
push
sub
loope
sbb
sub
leave
fiadds
pop
pop
sbb
shlb
sahf
adc
and
push
pop
mov
jnp
jae
push
xor
mov
push
push
fcomps
ss
inc
scas
mov
imul
mov
mov
inc
sbb
outsb
shl
mov
repz
outsb
outsb
mov
adc
sbb
clc
mov
lock
popa
jb
rorl
popa
sbb
mov
sbb
and
and
sbb
cld
repz
sbb
xor
push
in
fs
loopne
cmc
add
int3
repz
lea
push
test
rcr
cmp
pop
mov
pop
outsb
inc
cld
aam
out
lock
jns
dec
aam
sub
add
stc
jle
pop
jae
rclb
insl
addr16
sbb
out
fisubrs
pop
inc
std
pop
dec
mov
pusha
je
cmpsb
decb
into
rcl
icebp
lods
pop
and
pop
adc
fldenv
outsl
out
movsb
dec
call
sub
adc
popa
popf
cmp
push
in
js
lock
lret
loop
sti
push
lret
pop
mov
add
mov
movsl
test
movsl
pop
lcall
outsl
jge
scas
mov
nopl
adc
scas
jmp
xlat
int3
jge
int3
daa
insb
call
mov
clc
and
popf
test
and
daa
sub
inc
sbb
inc
mov
sbb
test
mov
lret
mov
adc
lods
dec
jmp
xor
mov
pop
mov
call
jl
add
mov
xchg
ss
pop
int
in
cltd
outsb
dec
in
mov
inc
jno
rorb
test
xchg
int
bound
call
leave
sbb
add
lret
dec
test
mov
sbb
or
movsb
lahf
mov
jge
xchg
loopne
mov
cmp
rcll
adc
data16
and
testb
adc
icebp
iret
push
or
lahf
inc
add
inc
ficoml
lods
pop
adc
and
xor
jle
mov
imul
xor
cmp
icebp
or
adc
scas
push
ds
mov
aas
adc
pushf
jns
sub
or
inc
add
cmpsl
mov
xchg
pop
daa
ror
sub
cltd
sbb
sbb
pop
jg
aam
les
cli
xor
movsl
mov
and
testb
inc
adc
mov
imull
add
and
insl
jne
inc
call
xor
dec
jmp
mov
out
add
mov
js
xor
sbbl
mov
mov
cld
xchg
add
cmp
je
sarl
cmpl
in
mov
cmpsb
push
jae
movsl
or
or
fwait
mov
jo
cwtl
mov
xchg
mov
lret
mov
push
cwtl
addl
ret
cmc
add
pop
mov
sub
je
cld
lock
nop
cmpsl
ljmp
outsl
sarl
aam
sub
xchg
test
add
leave
mov
jbe
push
out
out
sbb
sbb
cs
lds
fst
inc
outsl
scas
lahf
mov
jmp
or
add
movb
imul
loope
dec
adc
lea
sti
adc
sysenter
dec
das
pop
inc
out
mov
into
js
mov
sti
xchg
xor
mov
sub
mov
ret
xor
inc
rolb
jo
jmp
stos
test
push
test
mov
aad
out
dec
jbe
sahf
jge
fdivs
out
aas
pop
mov
jge
jecxz
repnz
sub
or
sarl
out
mov
adc
and
inc
mov
jns
es
mov
xor
adc
mov
stos
jmp
jno
push
cmpsb
sub
ja
push
sti
sti
in
stos
call
cmp
out
push
hlt
andb
cld
aam
mov
xor
adc
pop
mov
out
hlt
leave
cmp
xlat
sub
jb
bsf
jae
mov
cld
addl
arpl
add
fldenv
jmp
pop
pop
mov
add
das
dec
ljmp
dec
mov
insl
push
movsb
sarb
sbb
mov
test
add
inc
aad
push
ds
or
push
das
sarb
add
mov
mov
test
stos
loop
pop
dec
mov
mov
cmp
inc
push
adc
cmpsl
iret
inc
dec
pop
mov
movsb
mov
xor
pop
call
sbb
pop
cltd
in
pop
cmpl
popa
test
mov
out
cmc
mov
and
xor
icebp
dec
xchg
test
push
jb
or
xchg
jae
or
pop
pop
pop
pop
mov
imul
scas
shlb
test
ljmp
push
cmpsl
and
stos
test
das
dec
lahf
push
mov
mul
mov
scas
adc
sti
test
hlt
icebp
xchg
movsb
lcall
es
mov
pushf
add
pusha
mov
daa
addl
out
popa
iret
xor
push
jb
flds
xchg
fsub
inc
dec
pop
xchg
out
outsb
das
xlat
ret
pop
scas
jmp
loope
outsl
stc
stc
mov
rcrb
lods
or
push
movsb
sbb
scas
mov
pop
cmp
andl
scas
mov
ljmp
enter
adc
inc
icebp
or
jbe
ffree
or
push
and
dec
or
dec
push
dec
mul
addr16
cmp
push
adc
daa
mov
add
mov
shr
lods
sti
lods
lods
js
cmp
push
adc
ret
add
mov
push
lods
xor
stos
pop
leave
pop
xchg
cwtl
add
in
mov
jmp
mov
sub
fwait
aaa
jne
xor
mov
xchg
les
cmp
pop
sti
fcoml
cmpl
enter
icebp
in
sbb
push
shr
cwtl
mov
jae
bound
and
dec
adc
sbb
and
mov
xchg
je
or
shrl
jl
sbb
movsl
in
mov
mov
dec
leave
mov
or
subb
mov
add
call
arpl
jge
jge
push
cmpsb
adc
adc
sahf
sarb
push
mov
test
jge
push
mov
push
stc
into
sub
mov
dec
cmp
daa
push
shlb
cld
lcall
mov
lods
mov
or
out
jb
push
xchg
cmp
adc
push
rcrl
sbb
jnp
inc
pop
mov
cmpsb
test
insl
int3
shll
sbb
push
insl
push
pop
pop
sbb
iret
cli
or
shll
xor
sub
hlt
mov
jecxz
aas
inc
mov
rsqrtps
push
sbb
repz
add
mull
bound
aaa
and
inc
hlt
pop
mov
unpckhps
cmpsb
cmp
fisttps
inc
pop
mov
stos
sub
loop
incl
scas
pop
add
pop
lods
iret
add
sbb
js
jb
fcoms
leave
hlt
mov
mov
shr
sub
dec
or
add
hlt
sub
push
push
mov
lcall
mov
mov
test
adc
rcrl
xlat
aad
push
int
push
mov
xor
mov
add
hlt
adc
dec
xchg
jae
sub
mov
mov
xchg
outsl
mov
fnstcw
call
int3
sti
test
sbb
insl
mov
pop
sbb
mov
mov
lds
pop
xchg
sub
mov
jbe
aam
cmpsb
hlt
or
cmpsb
popf
inc
inc
dec
push
or
cmp
dec
jecxz
or
call
sbb
fnstenv
add
aam
packuswb
jno
sbb
mov
mov
sarl
out
push
lods
inc
adc
or
and
popa
jle
mov
lock
add
and
push
fs
sahf
xchg
js
lcall
inc
leave
mov
cli
xchg
mov
notl
inc
test
std
shll
lock
sbb
jp
loop
inc
or
jp
cmp
cmp
pop
hlt
lahf
lods
les
jmp
push
add
push
out
dec
ss
push
sbbl
loopne
movsl
xchg
xchg
mov
jb
in
cmpsb
inc
int3
inc
mov
adc
jg
aas
fmuls
adc
sub
dec
popa
stos
stc
cmc
jns,pn
dec
test
les
shr
mov
xor
mov
add
fdivp
sahf
sub
push
repnz
ficoml
add
cwtl
pusha
clc
imul
sbb
mov
cs
andb
test
aad
dec
ds
xchg
lahf
jne
sub
or
int
repnz
and
mov
fmull
divb
fiadds
sub
ficoms
jne
jno
pushf
movl
cltd
test
pop
clc
add
imul
and
sbb
cmpsb
pop
cmpsb
sbb
nop
sub
ret
mov
stc
sub
sub
lcall
cmp
cmpsl
fimull
dec
push
ja
fisubs
mov
push
push
out
mov
in
mov
xor
fcmovne
cmpsl
mov
add
call
xchg
sbb
out
movsl
mov
cld
enter
mov
jecxz
imul
jo
aas
and
xchg
adc
data16
popf
andl
xchg
popf
cmp
hlt
sar
out
rcl
xchg
cmc
cmp
push
outsl
addr16
xor
les
push
sbb
inc
lea
inc
out
fisttpll
dec
out
shlb
jge
mov
daa
adcb
sahf
or
mov
adcb
sbb
ss
shll
xchg
adc
sbbl
mov
and
mov
jecxz
mov
add
in
lahf
pop
add
inc
mov
xor
ficoms
cmpb
xchg
fisubs
push
pop
adc
lods
es
adc
jno
pop
je
xchg
or
int
fdiv
pop
dec
push
outsb
add
inc
fdivrs
movq
pushf
popf
insl
jg
in
mov
stos
xchg
cmp
inc
sbb
fstpt
or
dec
aad
std
mov
push
les
and
into
fmuls
inc
adc
or
push
pop
sahf
cli
js,pt
cmp
test
gs
inc
jecxz
popf
aas
pushf
loopne
dec
pop
mov
outsl
int
test
lods
mov
adc
dec
int3
negl
or
push
subb
loope
es
jbe
ds
lds
ljmp
ljmp
mov
cmpsl
mov
lds
mov
in
mov
adc
insb
push
rep
movsb
xor
xor
adc
inc
in
in
jbe
clc
jne
or
xor
add
call
adc
andb
adc
pop
jp
jo
scas
inc
sbb
add
push
cmp
data16
loopne
dec
cld
std
add
jns
lret
clc
sub
fstpl
jp
push
mov
sub
adcb
stos
or
out
out
je
xchg
popf
rorl
scas
ss
cmp
dec
mov
pop
jmp
lods
ret
fsts
cmc
in
mov
lea
dec
gs
insl
out
sub
push
and
ds
xlat
pusha
push
push
fcoms
dec
mov
cmpsl
cmp
loop
aaa
and
mov
push
ljmp
out
sti
bound
das
mov
sub
sbb
jecxz
mov
test
ss
push
jge
pop
add
aaa
arpl
sti
pushf
lock
lods
mov
sbb
decb
outsb
lds
push
shrb
pushf
loopne
add
ffree
into
psrlw
dec
sarl
add
sbb
je
mov
mov
movsb
ja
jmp
xchg
call
sbb
cmp
dec
adc
dec
pop
sahf
add
cltd
fldenv
push
mov
lret
or
sbb
cmp
fistl
jle,pn
sbb
fdivs
xchg
subl
push
and
jae
lahf
lods
je
push
sbb
cld
pop
add
dec
cli
cmp
sub
repz
sub
cmp
push
push
jbe
xchg
loop
idivl
jbe
mov
loop
xorb
and
dec
iret
bnd
mov
dec
push
scas
jno
sub
out
rcll
sub
and
xor
aas
xor
mov
mul
pop
lea
push
cmp
or
fstps
jne
lret
adc
test
lcall
and
adc
mov
jge
test
cmpsl
insl
fiaddl
aam
lret
mov
jl
adc
mov
sub
ret
jge
ja
sbb
lret
lret
pop
les
sub
test
mov
dec
push
sub
dec
cmp
cmpsb
xor
mov
jp
scas
mov
dec
lea
sub
push
das
mov
inc
sub
mov
ret
xchg
les
mov
stos
and
outsl
dec
sub
adc
or
lea
inc
jbe
jmp
out
mov
or
mov
inc
mov
add
insb
and
sahf
mov
jb
dec
pop
xchg
add
adc
cmp
fs
ret
mov
mov
nop
xchg
call
push
imul
ljmp
jle
ljmp
repnz
imul
jb
or
aas
xor
push
jmp
jg
enter
lods
and
mov
add
je
mov
xor
shll
mov
adc
xchg
cmp
mov
jbe
cmp
test
push
pop
add
dec
jae
out
test
inc
les
jmp
arpl
repz
cmp
pop
repz
sbb
xchg
mov
push
adc
repz
out
jmp
or
lcall
xor
divl
fidivl
dec
stos
je
pop
push
lock
jl
popf
or
pop
mov
stos
xchg
push
fadds
push
aam
mov
or
adc
mov
xor
iret
dec
cbtw
rcll
cwtl
mov
xor
divl
je
dec
pop
dec
call
test
jmp
aad
sub
mov
imul
cmp
and
in
inc
pusha
out
negb
push
ja
push
in
fcoms
jp
or
jo
out
in
sub
sti
loop
je
adcb
fcmovnu
xchg
mov
adc
aaa
cmpsb
loop
pop
popa
and
ljmp
mov
xchg
mov
push
pusha
shlb
pop
imul
mov
dec
mov
movsl
mov
and
inc
and
add
push
pop
xchg
cmovnp
sbb
jne
mov
enter
sbb
mov
or
sbb
and
jae
ja
stc
push
push
popa
pop
inc
mov
lods
xor
cmpsb
test
xchg
inc
test
dec
sarl
mov
cltd
repnz
add
lret
sti
jmp
in
xchg
sub
fildll
and
idivl
adc
insl
clc
pop
loopne
xchg
fisttpl
bound
xor
inc
lds
cmp
mov
int3
sahf
leave
jb
repz
stos
cmp
push
loop
jl
sub
cmp
mov
pop
fiadds
fnstsw
push
fildll
popa
sub
sbb
adc
mov
pushf
add
xor
or
std
cld
xchg
popf
ror
or
mov
cmp
packssdw
inc
popl
push
and
or
sbbb
add
enter
dec
xchg
cltd
popa
ja
bound
jae
xor
push
mov
or
in
outsb
or
mov
out
mov
sub
insl
mov
inc
pop
dec
jl
pop
sbb
popf
mov
jge
push
gs
xor
mov
mov
xchg
inc
repnz
add
cmpsl
out
out
mov
fmuls
mov
mov
push
lock
dec
xor
inc
mov
mov
xchg
addr16
out
les
sbb
push
repz
int
aas
jo
into
or
leave
add
push
xchg
mov
xchg
push
and
lret
adc
and
and
inc
pop
lahf
and
js
imul
pop
ljmp
test
inc
ds
shl
jmp
test
jge
inc
fwait
jnp
pop
push
mov
jo
int
pop
out
jae
mov
call
lahf
jno
and
push
cltd
cmc
adc
js
dec
lret
dec
mov
jnp
dec
shr
std
rcrb
loop
push
iret
mov
mov
loopne
cmp
iret
jb
push
sti
add
or
movsb
insb
mov
push
mov
mov
shll
sahf
mov
sbb
cs
sub
in
rcll
rcr
pusha
clc
sub
repz
sti
stos
test
lock
in
sahf
mov
xchg
add
cld
xchg
add
adc
iret
xchg
or
stos
sub
jno
sub
mov
int3
add
push
cmp
hlt
pop
lea
flds
push
adc
imul
cltd
push
call
lcall
fs
mov
mov
push
sbb
dec
test
xchg
repnz
or
jae
insl
pop
cmp
ja
pop
inc
cmp
mov
mov
mov
sub
ljmp
pop
dec
ss
call
je
inc
mov
push
mov
imul
insb
into
xchg
inc
inc
pusha
aad
adc
mov
pop
or
pop
insl
lods
shll
push
testb
icebp
push
inc
sahf
sub
cmp
sub
scas
mov
cmpsb
sub
out
dec
inc
jo
push
dec
jae
mov
adc
movsb
in
push
jp
push
sbb
pop
mov
stc
arpl
mov
sub
mov
xor
out
pop
daa
imul
jnp
mov
and
je
repz
cmpsl
es
cs
fcmove
jb
mov
mov
xchg
imul
loopew
xchg
jmp
push
in
jmp
push
cwtl
ljmp
mov
stos
cltd
add
loopne
and
sub
adc
jle
push
out
stos
mov
and
dec
jp
mov
outsl
dec
out
movsl
adc
mulb
js
and
orb
xchg
mov
dec
pop
inc
jnp
push
xchg
sti
in
and
cmp
int
xchg
lret
mov
pop
push
and
dec
fsts
xor
push
xor
sub
jg
push
push
rorb
mov
push
xchg
dec
mov
inc
push
inc
popf
or
mov
push
ljmp
out
hlt
jle
sbb
mov
adc
cmp
in
rorl
mov
push
mov
adcb
js
sti
push
lcall
pop
jmp
or
rorl
jne
dec
das
inc
adcb
dec
jns
dec
enter
pusha
mov
std
or
stos
mov
xchg
nop
outsb
sbb
push
push
xchg
hlt
gs
cmp
lret
mov
pop
stos
pop
and
rcrb
sbb
cmpsb
push
cmp
fucomp
lret
lcall
ds
cmpsl
incl
cwtl
adcl
ss
or
pop
addl
out
ja
scas
negb
outsb
cwtl
lock
decl
cmp
and
bnd
movsl
andl
add
jmp
push
lods
or
sbb
dec
shrb
dec
xlat
into
jo
cmc
das
xor
adc
dec
and
adc
roll
xorl
pop
int
loopne
lahf
sahf
out
ret
pop
dec
outsb
jo
je
repnz
mov
mov
sbbb
ss
push
leave
sub
imul
adc
sbb
mov
sub
lea
jae
mov
clc
push
testb
sarl
and
cmpsb
sti
push
jb
add
sub
adc
lret
sub
and
iret
push
push
test
movsl
adc
out
loop
fmulp
data16
jb
mov
adc
repnz
xchg
xchg
sbb
test
popa
lret
aas
mov
mov
cmp
je
cld
dec
adc
insb
and
pop
sbb
dec
arpl
fsubl
mov
add
mov
xchg
and
fadds
mov
inc
xor
les
ja
mov
inc
dec
cld
and
push
out
int3
mov
fbstp
rcll
rcrb
hlt
loop
js
popf
adcb
jbe
sub
mov
testl
sub
cmp
fcom
scas
out
jne
scas
or
fistpl
test
mul
add
test
add
lods
dec
sbb
mov
jb
cld
mulb
mov
ficoml
cmp
push
lods
pop
aaa
mov
pop
psraw
nop
inc
roll
pop
mov
jns
cmp
cmp
sbb
jno
jmp
xchg
ljmp
clc
xchg
imul
popa
test
pop
shrb
xor
push
pop
ljmp
dec
pop
push
push
aaa
add
int3
dec
mov
sub
xchg
es
jle
adc
dec
dec
dec
mov
push
test
cwtl
arpl
and
roll
lahf
hlt
push
jnp
leave
or
add
mov
gs
jne
or
fidivrl
mov
lcall
in
cwtl
mov
xchg
mov
cmp
dec
iret
add
andl
shr
lcall
jecxz
sahf
jmp
popf
js
adc
call
es
pop
pop
push
or
movsb
outsb
loope
fdivr
test
adc
sub
rcrl
fsts
lea
add
cmpsb
mov
je
and
jne
sub
xor
aad
inc
inc
cmp
shll
xlat
scas
lahf
and
fmull
mov
push
and
pop
insl
push
jp
push
xor
add
sbb
clc
dec
mov
adc
outsb
test
rclb
xor
sub
push
push
inc
or
insl
out
hlt
outsl
add
dec
xor
insl
ja
cmc
sub
pop
or
fmull
pop
pop
mul
and
lret
dec
jmp
adc
loop
adc
test
lahf
jb
inc
mov
and
push
pop
mov
push
test
mov
inc
loopne
imul
inc
mov
ror
pop
vmread
fucom
int
fstpl
mov
lcall
pusha
pop
popa
iret
mov
and
scas
rcl
mov
inc
adc
sbb
or
dec
roll
mov
imul
scas
mov
mov
in
mov
jmp
test
push
jb
push
leave
xchg
xchg
and
adc
mov
in
insl
dec
jno
test
lahf
outsl
add
inc
inc
inc
je
dec
ljmp
and
in
jbe
adc
or
stc
sbb
in
jmp
push
or
xchg
mov
push
mov
mov
imul
pop
mov
mov
std
aas
inc
insb
add
and
hlt
pop
outsb
movsb
int3
inc
xor
mov
test
mov
mov
fcmovbe
in
push
and
cmp
push
shr
scas
lcall
arpl
adc
xchg
lock
pop
test
adc
mov
iret
push
jp
add
cmc
cld
stc
pop
mov
shrl
push
xchg
popf
int
pop
xchg
jmp
into
scas
jecxz
sbb
out
lret
in
sbb
sbb
mov
cmpsl
mov
mov
es
fdivs
cmp
dec
pop
imul
outsl
sub
imul
jo
jnp
push
pop
lods
add
enter
and
cmpsl
push
sbb
les
mov
mov
pop
sbb
jl
pop
xor
pop
or
push
stos
ret
fdivs
ret
sub
ja
ret
xor
test
adc
popl
clc
movsl
adc
xchg
test
ret
sub
and
fucomp
ds
or
aad
jle
lods
into
cmp
xchg
fnsave
mov
pushf
gs
ss
fcompl
jns
cmp
mov
or
popa
das
int3
xor
aam
icebp
sbb
mov
lea
cwtl
movsb
adc
jb
xlat
jnp
stc
sbb
mov
bound
in
bound
rcll
roll
jg
inc
xor
movsb
xchg
jae
xchg
movsb
outsb
sub
mov
adc
jle
int3
mov
and
pop
dec
cmp
stc
add
jge
pop
push
and
daa
sub
loope
or
imul
daa
mov
jle
hlt
jge
mov
push
cmpsl
pushf
pop
xchg
dec
imul
jmp
lea
loopne
fadds
in
out
je
ljmp
dec
adc
cwtl
scas
daa
add
lcall
imul
xchg
icebp
dec
adc
pop
pop
cmp
add
fisubrl
mov
xchg
in
push
mov
cmp
imul
pop
aam
jnp
jns
add
loope
xchg
in
out
adc
sbb
xchg
jnp
rcrb
andb
in
call
cld
or
jp
lock
cltd
adc
clc
mov
icebp
xchg
mov
dec
mov
cltd
mov
cmp
stos
sbb
inc
pop
or
add
sub
js
mov
xchg
lds
cmp
xlat
xchg
mov
or
pusha
cmp
sbbw
add
mov
jle
or
nop
jb
lods
in
fs
popf
pop
out
nop
pop
xchg
cmpl
push
jbe
add
pop
sub
push
lea
rolb
call
ds
adc
mov
sbb
stos
rorb
push
xor
sbb
cmp
mov
loop
mov
or
mov
clc
xchg
aad
stc
rcrb
push
add
and
sub
jb
loope
outsb
mov
push
mulb
pop
and
sahf
repz
mov
mov
adc
sub
sahf
pushf
clts
leave
xchg
in
mov
sub
arpl
repnz
sbb
add
leave
pop
push
pop
mov
jl
ss
hlt
je
push
jno
xor
push
je
adc
sub
and
cli
scas
cmc
cli
dec
scas
dec
add
into
je
arpl
sbb
cmpsb
cmp
xchg
bound
cmc
sbb
push
adc
dec
stos
jmp
pop
mov
xchg
add
pop
adc
jo
mov
sub
add
mov
shlb
fistl
mov
add
addr16
mov
int3
xchg
iret
add
in
add
cmp
or
dec
je
daa
adcb
out
fsts
push
ljmp
mov
sub
ja
inc
lret
mov
mov
fldt
mov
mov
fstl
or
aad
pop
sub
push
std
xchg
int3
test
hlt
jl
mov
rol
xor
ss
cmpsb
das
lret
insl
mov
add
adc
xor
cmpb
pop
and
scas
cld
inc
push
push
xchg
daa
cmp
push
hlt
fsubs
cmpsl
push
add
mov
pop
jp
pop
mov
in
jne
mov
xchg
orl
out
mov
insl
jmp
insl
mov
pop
or
scas
shll
out
or
mov
shlb
mov
jl
pushf
sahf
jge
and
fsubr
orb
scas
xchg
cmpsl
bound
pusha
mov
jo
xlat
add
testl
and
jl
test
shrb
xchg
loope
push
addl
jno
cmp
andl
pop
sbb
sub
orb
loop
je
loop
lds
adcl
lret
push
fcomps
add
loopne
mov
test
rol
pusha
jbe
jno
leave
js
loop
push
jno
push
dec
ss
add
aam
xor
push
stos
fistps
sti
mov
fcomp
cli
mov
sub
push
cmc
into
or
ljmp
jmp
xchg
call
sbb
lret
jg
push
in
loopne
xchg
int
gs
inc
push
fistpl
push
clc
lcall
inc
or
pusha
clc
jno
stc
cmpsb
jle
dec
mov
movsl
xor
addr16
and
pop
jae
clc
or
and
out
mov
imul
aad
stos
push
repnz
jo
jae
sub
jb
imul
adc
add
adc
push
rorb
arpl
pop
mov
xor
xor
nop
jmp
xchg
in
pop
stc
fwait
push
mov
icebp
mov
insl
addl
inc
push
mov
xlat
sbb
aam
xchg
jl
xor
add
dec
inc
push
jge
adc
jp
leave
sbb
movsb
add
inc
push
daa
repz
cmp
loop
xchg
fisttpll
in
es
call
lret
xorl
out
ret
pop
neg
imull
mov
wbinvd
js
lret
inc
or
mov
sbb
outsb
ds
push
add
dec
mov
arpl
mov
imull
mov
mov
fidivrs
push
cltd
cmc
loopne
shrb
mov
jb
aaa
out
lcall
or
inc
or
mov
shl
dec
lret
jae
sbb
loope
adc
pusha
inc
xor
or
push
lock
mov
pushf
mull
cmc
inc
bound
aaa
addl
out
fs
jae
cmp
imul
or
push
fsubs
cmp
fwait
push
and
dec
sbb
sbb
test
pop
and
int
pop
mov
and
fdivrs
lea
mov
ja
jp
imull
data16
mov
or
inc
out
push
xor
or
mov
popf
fcompl
push
int3
pop
xlat
sub
inc
cld
incl
arpl
mov
adc
movsl
pop
sahf
mov
nop
sarb
stc
jg
movsb
mov
xlat
mov
leave
xchg
adc
data16
test
jmp
pop
je
or
rcrb
push
ljmp
and
out
sbb
jge
sti
inc
adc
ret
stc
test
lods
call
lahf
adc
cmc
fcmovu
inc
push
in
jp
pop
roll
fildll
ficomps
xchg
cmpsl
cmp
push
add
mov
call
mov
aam
inc
xchg
or
jle
imul
jae
cmp
push
mov
jne
jg
in
aam
jmp
mov
push
mov
dec
pop
iret
inc
int3
icebp
cmpsb
xor
mov
fs
xchg
int
aad
xor
cltd
lahf
mov
cmp
jns
jbe
das
mov
mov
cmp
rolb
aad
sahf
clc
rorl
js
int3
mov
sub
incb
cmc
testl
push
or
cli
flds
aad
fadd
fld
or
jo
leave
sar
outsl
hlt
mov
jp
fsubrs
mov
adc
mov
shll
cmp
out
out
jge
add
test
outsl
rorl
ja
in
mov
cmp
das
into
and
pop
push
and
cld
inc
mov
je
jae
push
leave
xchg
or
pop
mov
sub
jns
cmp
outsb
add
jb
das
jecxz
gs
test
mov
mov
sub
dec
int
jp
sarb
adcb
aas
popw
movsb
hlt
pop
xchg
movsl
inc
pop
aas
sbb
fdivrs
je
mov
cmpl
inc
pop
push
jns
adc
andb
or
test
lods
icebp
js
movsl
mov
fisubrs
mov
pop
push
scas
jle
pop
mov
mov
lods
push
loop
scas
push
inc
jle
push
jne
mov
push
enter
rcl
mov
mov
sub
push
jns
xor
lds
das
mov
and
dec
xchg
int
add
shlb
inc
decl
cmp
jp
adc
icebp
nop
jne,pn
xor
sub
cwtl
pop
mov
ss
or
pop
notl
mov
add
mov
call
cmpsb
pop
jle
push
inc
insl
lods
vmread
rolb
push
mov
mov
ret
add
pop
inc
add
dec
mov
push
xor
clc
sbb
xlat
test
jg
adc
jo
and
push
jecxz
cmp
mov
push
mov
add
adc
mov
inc
mov
les
aam
addr16
mov
shrl
das
jl
test
xorb
adc
sub
out
imul
jle
or
xor
xor
push
out
bound
jne
pop
aas
pop
int
add
lahf
mov
and
andl
add
mov
jo
pusha
cmp
jno
push
loopne
jl
xor
sub
bound
inc
sahf
repnz
cmc
popa
in
xchg
add
int3
lea
arpl
inc
sbb
pop
loop
negl
mov
int3
pop
sahf
fs
push
xor
mov
mov
push
data16
scas
lret
aam
xchg
adc
daa
mov
pushl
test
popa
inc
enter
add
in
push
xchg
out
jbe
inc
push
cmp
mov
and
xchg
xor
js
adc
insb
insb
xchg
out
jns
out
ds
cmpsl
and
jae
lea
cld
nop
scas
mov
adc
arpl
xor
iret
push
xor
arpl
lods
xor
fwait
cmp
insl
and
inc
daa
jae
loopne
add
movsl
pop
sub
shrl
dec
mov
repnz
dec
xchg
ja
mov
pop
lcall
out
fs
adc
aam
inc
fildll
adc
cmpsl
stc
in
iret
cmp
dec
or
mov
mov
pop
lcall
ret
add
test
sbb
add
mov
out
je
ficoms
lcall
push
sub
aas
push
pop
lods
cmp
jge
jl
into
jmp
mov
aad
aad
stos
and
push
gs
outsl
outsb
in
lcall
xor
out
push
sub
or
scas
jle
xor
and
test
rcl
lock
call
or
sub
mov
icebp
add
sbb
cmpsl
dec
out
add
ret
loopne
xchg
pusha
push
or
test
dec
hlt
jge
dec
adc
fwait
movsl
jno
ja
inc
leave
shlb
cwtl
sub
mov
in
push
ljmp
insb
adc
xchg
mov
clc
sti
sub
pop
xchg
out
mov
test
inc
movsl
adc
pushaw
xchg
in
data16
repz
movsl
lcall
dec
arpl
push
in
mov
ret
hlt
es
adc
push
mov
repz
lret
rcrb
push
pop
and
je
stos
xchg
enter
shll
out
sbb
push
or
dec
cmpsl
mov
pop
lods
loopne
jb
xchg
inc
fs
xor
js
cltd
jns
iret
mov
jnp
clc
shlb
cli
sbb
or
mov
cmpsb
pop
jbe
in
jbe
test
inc
adc
cld
push
inc
xor
xchg
lret
mov
scas
sbb
or
cwtl
dec
push
or
or
jae
imul
testb
sub
dec
test
sbb
pushf
mov
sbb
push
cmp
sbb
cltd
cli
mov
jmp
cs
hlt
jns
repz
and
jbe
fldt
shl
jbe
fistpll
sub
push
push
cwtl
std
mov
mov
sbb
pop
and
jl
insl
les
inc
les
fildll
enter
lods
cmpsl
add
mov
xchg
mov
scas
mov
add
push
dec
sub
scas
cld
lea
aad
lahf
and
ljmp
xor
mov
ljmp
out
cmp
das
push
in
fistps
or
rcrl
sbb
push
mov
lret
jo
fucomp
sub
aaa
inc
int3
inc
adc
mov
adc
jo
out
push
xchg
dec
or
lret
lret
int
hlt
mov
mov
test
inc
jnp
movb
jns
mov
sub
rclb
push
mov
or
push
and
sbb
sub
pop
add
and
cmp
sub
ret
lods
cwtl
adc
cmp
push
mov
dec
test
sub
popa
push
leave
stos
adcb
sub
popa
pop
sbb
push
leave
cmp
push
out
jae
xor
adc
fcmovne
es
gs
loope
fcoml
cltd
xchg
inc
mov
out
mov
int3
dec
repz
and
sub
or
add
imul
fiaddl
insb
add
cmp
mov
mov
push
adc
mov
jno
imul
ret
clc
pop
jmp
lods
test
dec
test
push
dec
add
add
push
call
je
jp
test
xchg
test
imul
sbb
in
es
ds
arpl
and
cmpsl
inc
enter
adc
mov
fimull
push
xchg
xchg
xor
mov
inc
pop
add
sbb
lods
pop
mov
push
dec
fwait
lock
mov
sub
fbstp
cltd
or
insl
ret
inc
cld
pop
xor
sub
mov
cmp
mov
dec
fnstsw
pushf
in
xchg
mov
lret
sub
pop
sbb
ds
mov
out
test
xchg
mov
scas
cmp
es
dec
adc
xchg
inc
cmpsl
sahf
jmp
sub
popf
rcll
jge
push
ficoms
or
scas
mov
mov
cmc
rorb
pop
test
popa
jae
loope
in
cmpsb
xor
movsb
movsl
xor
out
xchg
adc
lea
mov
out
sbb
mov
enter
mov
pop
inc
roll
inc
jmp
xlat
leave
add
and
inc
mov
xchg
je
sbb
stos
test
mov
add
stos
je
imul
js
lret
lods
push
or
and
insb
adc
jg
or
jnp
les
dec
jmp
dec
sti
sbb
std
jne
test
iret
adc
xor
xchg
dec
sbb
fsts
mov
sbb
test
jae
adc
cltd
cli
clc
pop
lar
cmpsb
mov
popa
adc
mov
sub
addr16
xchg
pop
stos
sahf
mov
xchg
inc
sbb
jnp
incl
jmp
lret
jl
ljmp
sub
cmpsl
mov
sbbb
repz
inc
add
mov
xor
out
push
loope
outsl
dec
inc
cltd
rcrl
popf
lahf
jle
mov
xchg
js
and
dec
imul
int3
lea
xor
outsb
push
jmp
lcall
sahf
movsl
adc
sbb
lahf
mov
sub
xor
inc
push
mov
adc
pop
out
mov
jo
stc
sahf
jo
pop
xchg
push
xchg
cmp
in
dec
lock
pop
jl
cmpl
movsl
cmpsl
xchg
push
mov
dec
std
std
cld
mov
rcrb
stos
adc
add
mov
test
cli
dec
daa
sbb
inc
out
mov
mov
mov
daa
cmp
mov
jno
push
enter
cwtl
ds
jl
cli
pop
mov
subb
outsb
aaa
mov
arpl
fnsave
loop
push
jbe
pop
push
pop
cmc
enter
adcb
or
test
adc
sbb
arpl
mov
or
fstl
mov
in
add
and
push
pop
rol
push
xchg
jp
movsb
sbb
lcall
mov
in
nop
jmp
mov
dec
cmpsl
add
repz
adc
scas
sub
cli
xor
mov
adc
jle
andl
push
jge
inc
mov
stc
xchg
popa
xchg
pop
pop
ret
adc
movsl
mov
imul
pop
repnz
push
inc
xchg
cmp
adc
fcomp
dec
flds
mov
jnp
cmp
and
adc
mov
mov
lock
mov
lret
or
xor
sub
ja
aaa
xlat
mov
insl
mov
inc
std
pop
pop
rclb
add
ror
hlt
clc
cmpsb
sub
pop
out
xchg
inc
ss
stc
daa
roll
and
out
ja
repnz
out
add
or
dec
daa
sub
daa
lods
adc
mov
xchg
in
addr16
imul
cmp
daa
std
jae
scas
mov
push
lds
insl
jle
xlat
shlb
les
jae
das
or
test
testl
xor
cmpsb
mov
mov
scas
outsl
push
fcompl
and
jb
jnp
lds
imul
imul
fcompl
mov
inc
pop
pushf
lahf
addr16
jmp
pop
stos
fstl
inc
sub
sub
xchg
sbb
mov
aad
jmp
pop
and
clc
cltd
sbb
js
shlb
aas
adc
inc
retw
jae
dec
sbb
sub
icebp
addr16
repnz
orl
test
adc
xchg
mov
mov
jbe
popa
int
push
xchg
sbbl
es
pushf
sbb
imul
iret
lcall
add
outsl
inc
jbe
sarl
dec
pushf
mov
pop
insl
pop
jae
mov
mov
push
stos
push
xchg
fbld
dec
xchg
xor
aaa
leave
mov
ret
in
fisubrs
add
mov
cld
fistpll
lds
aaa
lds
fs
test
inc
dec
cld
int3
shr
and
lods
ret
mov
mov
stos
or
mov
or
or
aad
cmc
pop
pop
aas
jmp
ret
es
jo
int
mov
sbb
js
fdivrs
std
xor
xchg
xchg
mov
loopne
test
testl
mov
scas
fs
notb
sub
mov
jne
mov
xchg
mov
jnp
push
pop
out
in
or
jns
or
adc
or
dec
xor
jmp
lahf
mov
cmp
jnp
xor
mov
outsl
fstpl
xchg
cmp
test
pop
jo
add
push
rolb
call
sub
aaa
ss
xor
mov
hlt
mov
je
cmpsl
mov
iret
and
mov
mov
lds
xchg
push
cmp
sub
push
sti
insl
lock
push
mov
jle
or
enter
mov
ss
mov
xchg
mov
xchg
pop
sub
push
ds
cmp
leave
or
shrl
test
add
bound
mov
repz
sahf
push
dec
adc
imul
lock
mov
push
sbb
sub
ja
mov
inc
inc
jns
jae
jb
mov
pop
jns
test
push
movsl
adc
mov
mov
cmp
shrl
fwait
int3
jg
cwtl
dec
insb
and
gs
fucomp
es
push
cmp
clc
lret
jnp
scas
push
jno
aad
into
pop
in
dec
push
push
imull
sub
cli
sahf
cltd
xor
sahf
jnp
or
adc
xchg
call
cwtl
hlt
xchg
pop
gs
or
add
xchg
mov
imul
ret
pop
and
mov
push
pop
mov
sbb
shl
jbe
in
xchg
xchg
shrb
jge
push
sub
mov
not
mov
bound
jmp
dec
cli
jns
ficoml
sti
sahf
ret
cli
xor
sub
jns
loop
dec
pop
mov
push
pop
jbe
lahf
imul
cmp
sbbb
inc
daa
or
ret
sbb
aad
or
add
xchg
xor
lret
jno
iret
fwait
sbb
rep
sbb
or
js
shrl
add
iret
dec
xor
bound
fldcw
addr16
scas
fstpl
jnp
divl
in
cmp
ljmp
push
cmp
or
push
jge
mov
mov
adcb
mov
jecxz
mov
andl
sbb
sbb
js
mov
mov
call
push
push
xchg
jnp
cmpl
xor
push
repz
xor
fidivrs
pop
stc
inc
sub
jge
and
and
jno
xor
adc
loop
jge
arpl
ds
lret
das
pop
sbb
rcrb
push
sub
dec
test
fnsave
rcl
mov
pop
jns
js
mov
pop
push
lret
or
stos
jb
in
sahf
push
xor
jae
push
aaa
jp
inc
stos
inc
lahf
and
pushf
call
jne
adc
xlat
cmp
addb
sub
test
dec
data16
mov
adc
dec
loope
jl
mov
ja
mov
int
mov
int
lock
nop
adc
ja
bnd
mov
stos
pop
jns
cmp
dec
cmp
movsb
dec
fdivrl
push
insl
cmp
xlat
fisttps
jnp
rcrl
cmpsl
shll
ljmp
aaa
cmpb
mov
mov
push
mov
sbb
aam
int3
fcoml
xor
loop
inc
aam
xchg
out
popa
sbb
and
push
inc
jle
rorl
loope
cmp
xchg
insb
ja
lock
push
ja
xchg
mov
sbb
repnz
mov
mov
and
aas
int
xor
loopne
lcall
xchg
jg
push
sbb
repz
lods
popa
nop
sub
out
stos
cmpsb
dec
frndint
jnp
or
dec
sbb
ja
push
jns
jp
pop
sub
dec
fs
test
jg
jle
out
adc
std
cwtl
in
loop
push
dec
xor
or
fsubs
cmc
cmpsb
sub
pop
arpl
lcall
sub
mov
mov
clc
lock
imul
mov
xchg
cli
adc
mov
cmp
fs
lods
dec
and
subl
dec
inc
sub
xor
test
imull
xor
xchg
cmpsb
test
cltd
lods
push
adc
or
lret
add
mov
jae
and
fs
aam
cmp
unpcklps
ret
xlat
sbb
and
jg
xchg
insb
movsb
lea
das
aaa
inc
daa
and
xchg
cmp
pop
addr16
adc
ss
outsb
js
in
insb
shlb
sub
movsb
xor
enter
stos
adc
and
repz
adc
sbb
fsub
jbe
sub
out
push
cs
pop
push
mov
push
cmp
jne
imul
push
lea
fisubrl
mov
push
insb
jp
jo
pop
pusha
pop
pop
add
bound
fwait
shrb
roll
ss
sub
jp
mov
adc
jmp
jnp
ds
xchg
pushf
adc
cmp
cmc
aaa
cltd
jo
pop
pop
push
dec
test
jle
inc
test
lock
inc
jl
mov
imul
push
push
cmp
cmp
jnp
jne
xor
push
sti
mov
push
mov
lock
mov
rol
jns
into
cmp
in
pop
je
sbb
jnp
pop
int
pop
xor
sbb
xchg
pop
shl
fiadds
out
xchg
cwtl
cli
popa
sti
clc
pop
insl
addr16
pop
pop
and
pop
jge
out
insb
cltd
dec
add
mov
jo
pop
mov
in
ret
cmp
lea
mov
mov
push
in
out
mov
sarb
pop
orb
jb
xchg
xor
and
dec
popf
fcomi
into
sbb
lock
fiaddl
xor
xchg
stc
pop
shr
mov
cltd
addb
mov
movsl
fwait
clc
sub
in
nop
in
push
jno
lock
dec
cmpsb
out
and
je
mov
das
cmp
mov
sarl
sub
push
insl
hlt
das
dec
notb
pop
repz
mov
xchg
xor
xchg
sar
test
mov
fldcw
pop
xor
ss
add
ret
aad
push
cmp
xchg
pop
or
lahf
sahf
push
push
aad
push
pop
jecxz
cmpsl
cmp
mov
mov
push
mov
in
pop
jnp
das
jle
repz
enter
pop
arpl
dec
sub
adc
pop
lret
adcl
movsl
or
push
adc
xchg
aam
ljmp
sbb
test
pop
mov
ret
lret
lock
mov
lahf
jno
shr
mov
or
pop
int
add
cmp
subb
or
pop
push
dec
aas
inc
daa
icebp
adc
jmp
adc
outsb
pop
test
int
or
inc
fistps
sub
dec
cmpsb
ljmp
repnz
cwtl
adc
xchg
mov
cmpsl
xchg
cmp
xor
dec
sub
push
stos
cmpsb
or
mov
test
cmp
test
cwtl
pop
sbb
out
jg
inc
xchg
enter
out
inc
imul
test
adc
pop
push
push
or
add
or
fisttpl
sbb
sub
popl
vcvtdq2ps
sub
das
fdivs
clc
xor
shlb
mov
and
xor
mov
aas
icebp
pop
sub
or
mov
int3
mov
lock
dec
push
je
in
push
and
adc
mov
push
sbb
int
mov
dec
sub
mov
imul
push
test
lock
adc
push
jae
loope
jmp
inc
pusha
push
add
mov
push
inc
mov
xor
mov
jle
jg
push
arpl
xor
sbb
inc
inc
ret
jecxz
rol
lea
ficoms
pop
sub
aam
movsb
dec
pop
call
fmull
fwait
sti
popf
sbb
jno
dec
sub
xor
out
lret
adc
jnp
insb
mov
mov
addr16
pusha
xchg
cmp
popf
cmp
call
jle
and
push
ljmp
clc
push
sti
arpl
test
pusha
cmpb
jmp
mov
hlt
lea
sbb
scas
rorb
dec
mov
std
cmc
mov
mov
jbe
fs
and
pop
data16
fcoml
xor
mov
dec
mov
negb
loop
jo
lret
sti
dec
repnz
popa
push
push
push
testl
jbe
pop
fcmovne
jnp
mov
adc
enter
lock
pop
mov
rorl
out
xor
push
in
or
movsl
push
lret
in
jnp
or
inc
imul
inc
push
mov
out
aaa
jbe
cmp
jmp
shll
dec
sbb
pusha
aaa
pop
or
dec
mul
cmpl
shl
pop
or
aad
rcrl
pop
movsl
sahf
sub
pop
inc
jb
push
sub
loope
pop
in
xchg
call
xchg
arpl
inc
jb
pushw
xchg
shll
ljmp
movsl
scas
dec
adc
xchg
pop
je
out
pushf
cs
mov
cmp
push
repz
mov
popa
jns
mov
or
jns
pop
stos
inc
cmp
das
sub
incl
lods
loope
sub
call
orb
inc
lods
mov
mov
pop
mov
rcr
xor
sbb
mov
add
sbb
xor
and
pop
ret
mov
gs
dec
popf
mul
adc
out
sbb
jge
adc
movsl
and
add
and
daa
jle
imulb
dec
sahf
lods
adc
push
popf
scas
mov
rcll
fbld
inc
insb
xlat
and
cwtl
lods
lahf
jae
pop
lret
pop
sbb
fdivs
lret
lods
bsf
mov
cmpsb
loop
xorl
adc
ret
fcomp
sahf
outsb
jmp
sbb
insl
adc
jbe
jbe
aas
push
fwait
xchg
jp
pushf
repnz
arpl
push
xchg
pusha
sbb
out
xor
shll
mov
movsl
adc
mov
cmp
inc
out
or
cmp
insb
repnz
out
pushf
repnz
xor
int3
lds
test
xchg
rcll
sbb
xchg
jmp
xchg
orb
cmp
and
dec
mov
dec
jl
mov
fnsave
jne
jne
xchg
sahf
lret
scas
flds
scas
mov
mov
daa
cmp
out
lea
pusha
or
jg
mov
dec
xor
or
xor
fsubrs
psadbw
jnp
pop
adcb
clc
pop
lods
mov
dec
dec
push
call
testl
inc
cli
mov
push
mov
push
mov
jmp
jecxz
push
pop
xor
mov
mov
sbbl
insb
gs
loope
imul
xchg
xor
adc
xchg
mov
inc
jp
xorb
js
imul
out
pusha
aam
pop
cmp
es
add
call
xor
cld
fildll
mov
sub
imul
cmp
pop
leave
and
xor
sarb
mov
fstpt
cs
loop
xor
mov
lods
xor
mov
andl
hlt
in
jnp
dec
mov
xchg
mov
xchg
cwtl
sub
test
dec
imul
gs
sbb
xchg
lock
jns
push
mov
mov
mov
dec
mov
insb
pop
imul
je
loopne
pop
icebp
sahf
call
push
jnp
mov
in
mov
and
dec
stos
mov
iret
sbb
lret
sub
ficomps
and
ret
shll
dec
loopne
fdivl
lahf
cmpsl
js
mov
add
or
dec
push
push
mov
imul
push
loopne
cmp
mov
mov
push
adc
push
enter
mov
jmp
repnz
ficoml
mov
push
inc
xchg
fldt
repz
es
addr16
mov
gs
sbb
add
jnp
fidivrs
dec
in
stos
jmp
add
sbb
push
push
stos
jne
jnp
push
sub
xchg
dec
mov
call
sbb
out
dec
push
xlat
mov
ret
outsl
clc
aad
loopne
filds
test
sbb
pop
inc
fmull
and
js
in
xchg
hlt
popf
sar
or
push
inc
cs
rorl
fistps
xchg
inc
cmc
push
scas
lcall
clc
dec
jge
push
push
std
adc
sub
int3
xchg
mov
sub
cmp
jae
shrb
push
lods
into
mov
out
iret
scas
inc
shlb
dec
out
lret
adc
in
aas
mov
sbb
fisubrl
and
jecxz
inc
ret
pop
jl
shr
mov
adc
cmp
clc
cmp
ficomps
fisubl
out
fcoms
jae
movsb
std
int3
lcall
pop
cmp
xchg
pop
jmp
out
jmp
pop
jl
pusha
mov
out
and
adc
add
rclb
sub
mov
lret
ja
xor
jecxz
push
outsl
out
subb
push
cmc
fs
xor
in
jb
loop
jecxz
lea
xor
pusha
jmp
test
and
adc
jns
lods
inc
iret
xor
cld
aaa
jo
jecxz
jne
mov
int
loopne
sti
adc
out
bound
inc
mov
dec
stc
cmc
inc
pop
add
pushf
xchg
sti
inc
dec
mov
add
add
sub
popa
jb
or
pop
mov
mov
nop
lock
cld
inc
cmp
testl
in
push
or
jmp
outsb
mov
sbb
dec
les
sarb
mov
out
push
jae
xor
add
out
idivl
cmp
pop
mov
xorb
pop
ret
mov
dec
loop
cmp
jno
or
cmp
add
sbb
jp
fwait
mov
aaa
cmc
mov
or
out
repz
sub
mov
repz
ret
and
and
test
leave
insb
cmp
jo
push
sahf
outsb
test
outsb
stos
xor
xor
sbb
jmp
push
out
das
inc
lcall
xchg
pusha
adc
push
xchg
shlb
gs
cli
push
icebp
pop
repnz
cmpsb
in
or
leave
loop
pop
repz
push
adc
loope
in
xlat
dec
test
std
frstor
imul
lods
sub
std
in
adc
xor
frstor
mov
test
data16
jbe
out
add
and
cld
sti
push
into
jnp
data16
call
xchg
fcmovu
push
sarl
jb,pn
add
mov
mov
or
aam
repz
das
sbb
jnp
mov
fcmovb
mov
adc
jge
inc
jge
push
push
add
pop
and
push
sub
aad
ss
outsl
pop
dec
test
jp
lret
sti
outsl
sti
adc
call
push
inc
sarb
lahf
dec
jle
xor
cmp
push
cmp
loopne
push
xchg
jmp
mov
mov
pop
mov
out
out
mov
stos
xor
cmpsb
cmp
and
es
movzwl
fnstcw
test
add
mov
fcmove
cli
mov
adc
cmp
mov
ror
dec
imul
pop
hlt
or
push
fldcw
pushf
fs
test
les
mov
outsb
push
and
stc
in
mov
stc
not
adc
loopne
xchg
outsl
jecxz
icebp
insl
cli
dec
push
inc
push
mov
orl
ss
pop
xchg
push
xchg
das
mov
shr
sbb
cmp
push
inc
popa
and
lods
test
pop
xchg
scas
jl
lcall
sub
mov
out
jl
inc
pushf
dec
sbb
or
xor
lods
fdivrs
push
leave
xchg
and
or
xlat
fwait
es
dec
dec
push
cmp
inc
repz
ljmp
lds
mov
ds
push
push
jge
outsl
mov
in
mov
insl
fs
jbe
ret
in
push
stos
jmp
mov
bound
and
xor
out
imul
imul
movb
stos
lods
push
xchg
sbb
cmp
ljmp
cltd
sbb
popf
cli
cmp
inc
or
or
mov
ds
jns
xor
mov
inc
xor
shlb
mov
movsl
push
pop
enter
jo
lahf
cmp
jmp
sub
xor
fwait
lahf
pop
xlat
aad
mov
sbb
mov
mov
sti
push
add
scas
mov
jl
popa
test
xchg
cmp
inc
imul
ret
xor
jge
mov
enter
andl
push
inc
mov
or
stos
imulb
pop
insl
dec
cmpsl
in
jmp
pop
push
and
fwait
aad
mov
out
inc
push
loop
xor
xor
inc
cltd
ja
cmpsl
imul
fxch
dec
fwait
xor
adc
mov
pushf
dec
lret
imul
repz
sbb
xor
sar
inc
mov
mov
mov
popf
adc
inc
pop
repnz
dec
mov
adc
pop
cmpsl
and
xor
push
add
pop
stc
inc
pop
jo
lret
je
push
sbb
gs
xlat
mulb
rorb
add
sarl
lret
add
call
xchg
xchg
add
adc
test
push
out
cmp
push
mov
mov
jecxz
fists
push
into
pushf
mov
lahf
cwtl
pop
or
push
out
aam
popf
dec
mov
shl
pushf
loope
jo
test
nop
pop
rol
rcrl
shrb
xchg
mov
lds
std
xchg
enter
and
ucomiss
sub
adc
rcll
or
pusha
jbe
ficompl
inc
jle
das
jbe
aaa
icebp
sbb
jae
or
scas
int
and
mov
shll
mov
sbb
xchg
dec
shrl
and
repz
adc
or
sub
clc
or
mov
add
ret
jbe
mov
mov
aas
mov
inc
data16
fistpl
inc
push
shl
dec
je
dec
shl
sub
adc
fmuls
idivb
iret
je
into
push
pusha
sbb
cmp
adc
call
cmp
lret
jo
push
lods
scas
sbb
cltd
sub
add
repnz
add
jno
in
repnz
enter
in
inc
enter
adc
cmpsb
out
jne
pusha
xor
fidivrs
insl
rclb
push
inc
cmp
mov
es
iret
mov
mov
sahf
iret
jl
lds
aad
xor
dec
fidivl
imull
insl
fsubrs
jne
fbstp
icebp
fs
gs
stc
jge
pminsw
pop
hlt
jno
inc
scas
jns
enter
lods
mov
das
in
mov
pusha
and
add
sub
shrl
or
out
lcall
frstor
test
daa
gs
cli
mov
addl
out
jb
dec
adc
mov
pop
add
popa
mov
adc
pop
js
jp
jmp
cmp
mov
js
push
pop
les
scas
enter
xlat
pop
cmpsb
in
pop
sbb
sub
push
stos
mov
call
out
push
testb
outsl
xor
mov
push
in
ljmp
jns
mov
pop
inc
outsb
test
mov
cmc
psubsb
pop
loopne
pop
push
cmpl
clc
movsb
push
sbb
mov
mov
pop
adc
sbb
inc
mov
push
and
cwtl
pop
cmpsb
xor
push
cltd
call
rorb
sbb
mov
inc
out
mov
mov
in
ret
jae
movsb
mov
icebp
add
pusha
sub
cmp
das
dec
xchg
xor
cvtps2pi
scas
xor
jae
add
and
and
mov
xchg
ja
cmc
push
push
sbb
lcall
mov
inc
jg
iret
stos
push
pusha
xor
sahf
lds
cmp
fadds
pop
add
push
movsb
int
jp
inc
fsubl
fsubrs
call
jno
push
push
xchg
jg
xchg
stos
xchg
aad
scas
arpl
or
ja
dec
jg
add
arpl
jg
cs
mov
daa
cmp
lock
loopne
in
pop
jbe
push
divb
enter
bound
jp
jp
stc
jns
lock
add
lock
pop
out
negb
jg
pop
icebp
hlt
and
adc
into
ret
xlat
stc
hlt
mov
add
pop
jb
mov
xchg
lret
lock
mov
push
jb
inc
xor
inc
lea
sbb
or
call
or
out
add
fdivl
jge
adc
pop
push
or
es
jno
cmp
lcall
adc
daa
aaa
cmp
or
jmp
outsb
mov
pusha
adc
xchg
dec
and
sbb
lods
mov
fwait
out
push
sahf
lret
mov
int
outsl
mov
pushw
add
outsl
sub
xor
jg
sub
pop
jmp
and
fbstp
iret
jl
inc
inc
xchg
dec
lock
mov
sbb
test
das
cmc
mov
cld
icebp
dec
mulb
inc
jo
adc
or
xor
cmp
push
hlt
sbb
xchg
aam
dec
lods
lods
push
clc
mov
cmp
inc
adc
mov
lret
rep
and
jo
je
or
push
out
xor
out
cwtl
or
sub
imul
push
push
jb
inc
incb
lcall
push
push
in
sbb
mov
push
and
dec
iret
iret
aaa
cmpb
outsl
dec
cmp
inc
out
loop
or
jg
and
xchg
or
pop
fsubr
xor
ffreep
add
je
xchg
xorps
lods
outsl
cmpsb
sbbl
push
addr16
mov
dec
cmp
and
push
xor
shrl
aad
lret
add
decb
mov
lock
adc
sbb
ljmp
dec
jp
iret
jb
inc
hlt
loopne
lret
cmp
xchg
xchg
sti
insb
daa
mov
loop
repnz
pop
in
fwait
mov
inc
push
js
int3
loope
pop
dec
nop
cmp
int
mov
jne
ret
or
scas
fiadds
dec
add
lcall
push
repz
sbb
or
mov
fistpl
rep
or
mov
jmp
mov
aaa
pop
or
push
mov
cmp
shrl
out
gs
lock
jecxz
outsb
mov
lods
pop
xor
sbb
dec
push
add
sub
rorl
pop
scas
mov
mov
and
mov
jle
test
imul
out
mov
mov
stos
cmp
xchg
push
cli
pusha
es
and
les
inc
popa
fcmovnbe
cmpsl
xchg
inc
sub
lods
adcl
push
dec
lods
inc
pusha
mov
xchg
push
pop
stos
mov
jno
push
jo
xor
xchg
pop
mov
daa
mov
xchg
mov
mov
sbb
test
iret
cmp
ljmp
and
sub
loop
sbb
cmp
inc
and
xchg
mov
xor
aas
jb
leave
mov
shlb
mov
sub
add
push
ror
lret
idivl
jne
mov
fisttpl
sbb
cmovae
ss
or
insb
add
scas
stc
sti
pop
mov
add
dec
lock
push
jmp
xor
or
out
cmc
fidivrs
push
repz
push
dec
mov
stos
fildll
inc
push
or
das
mov
ss
jmp
and
call
inc
inc
mov
shrb
test
mov
add
sub
lret
movsl
sub
es
cs
pop
pop
cmp
pop
int3
push
sti
aad
cmc
sbb
scas
popa
dec
cs
jmp
loop
or
cmp
dec
pop
lahf
movsl
add
into
mov
outsl
cmc
sti
mov
test
das
iret
rcrl
mov
push
scas
je
cmp
bound
in
jle
jno
inc
pop
push
ds
cmp
sub
jno
sbb
push
inc
hlt
cli
scas
les
cmp
pop
and
in
lret
lea
dec
push
imul
lods
xor
push
iret
aam
cli
jno
jae
popf
and
or
jl
mov
pop
pop
dec
xor
test
les
fs
enter
inc
sub
cwtl
in
addr16
or
xor
adc
jmp
es
lahf
outsl
dec
pop
jge
inc
ss
jno
pop
scas
push
loope
pusha
lea
jecxz
rep
push
push
lock
hlt
adcb
imulb
int3
inc
ja
pusha
gs
int
repz
jecxz
incl
mov
cmpsl
repz
scas
sbb
cmpl
outsb
pop
adc
push
dec
adc
or
icebp
dec
jne
adc
cwtl
jge
mov
in
dec
popa
out
dec
out
sub
fldt
mov
cwtl
or
mov
test
clc
dec
cmp
push
inc
aam
sub
in
adc
jecxz
in
testl
in
ret
xchg
cmpsb
mov
les
mov
sbb
add
push
inc
out
lret
cltd
ljmp
imul
mov
dec
push
jp
out
xchg
pushf
je
sub
jno
mov
mov
fadds
arpl
xchg
mull
neg
jmp
je
inc
cli
and
lret
mov
ficoml
add
je
xor
lods
mov
stos
mov
leave
movsb
insb
mov
rcr
arpl
and
sub
cwtl
sub
mov
addr16
add
addr16
lret
and
push
outsl
mov
pop
das
or
sahf
inc
into
inc
and
ret
cwtl
test
xchg
fldcw
adc
inc
das
fwait
test
add
insl
lret
stc
push
nop
testl
sahf
repz
shrb
out
int
adc
je
lret
out
mov
fst
aaa
add
xchg
mov
push
cmp
arpl
sub
and
cmp
dec
pusha
inc
mov
fwait
push
jno
aad
and
cmp
add
inc
cmp
push
cs
popf
rorb
mov
out
lods
adc
xchg
movsb
sub
loopne
das
sub
mov
in
push
imul
sbb
lahf
je
sbb
cli
mov
inc
add
inc
insl
push
mov
fnstsw
and
addr16
fidivrl
push
mov
out
push
in
icebp
mov
je
jp
cld
shll
ja
mov
stos
sbb
pop
fidivl
cmp
test
fistpl
jmp
shrb
or
xchg
mov
mov
adc
in
lret
sbb
sbb
fwait
cmp
clc
loope
enter
pop
xchg
sub
sahf
rorb
jbe
xchg
pop
jmp
ja
and
push
sti
movsb
popf
add
mov
int
test
add
ret
cmp
lret
add
aaa
test
jno
adc
imul
adc
leave
fsubs
leave
and
jne
repnz
pop
mov
push
ret
add
cmp
addb
jge
dec
cld
jmp
aaa
or
ljmp
sub
sbb
into
ds
dec
xlat
cwtl
sbb
test
dec
scas
inc
sti
pop
fiadds
mov
jl
sbb
or
mov
mov
xlat
xor
dec
ja
les
aam
scas
push
popa
aam
mov
jp
into
stos
outsb
pushf
pop
out
dec
mov
and
mov
xchg
jp
xor
jmp
loopne,pt
cwtl
cmpsb
insl
fisubrs
add
int
outsl
and
dec
shrl
push
inc
add
fwait
cmp
xchg
push
sbb
mov
inc
pusha
jmp
pushf
mov
ja
inc
mov
sub
inc
mov
sub
inc
and
lret
out
rolb
mov
jg
in
rcr
fadds
xlat
mov
add
mov
addb
cmc
in
lds
in
xchg
fcoml
nop
jp
shrb
pop
je
xchg
jl
cs
lahf
decb
cmp
mov
pop
movsb
xchg
xor
or
push
xor
shr
dec
insb
daa
inc
or
lock
dec
fdivs
xchg
adc
movsb
outsl
out
movsb
nop
enter
jp
je
rcrl
mov
xlat
cld
mov
loopne
dec
mov
aas
push
sub
adc
sub
push
dec
test
sti
aaa
in
sub
outsl
hlt
jns
mov
ret
rcll
movsb
inc
cmc
je
adc
in
xchg
ljmp
pop
mov
lret
inc
xor
dec
movsb
call
insl
mov
hlt
inc
ret
jge
iret
iret
adc
push
or
iret
movlhps
inc
jge
outsl
and
bound
cmpb
stc
cs
mov
pushf
xor
mov
dec
pusha
gs
xchg
pop
jb
xchg
push
mov
xchg
outsl
cli
sbb
jge
add
dec
jge
adc
int
mov
push
fisubrs
mov
popa
xchg
mov
dec
mov
fcoml
adc
xchg
push
pop
jo
loope
push
bound
mov
mov
pop
out
inc
stc
cltd
enter
mov
mov
ret
pop
dec
xchg
mov
lcall
loope
add
mov
adc
dec
lods
dec
xchg
jbe
cmc
sbb
stc
into
dec
aas
mov
add
cmp
xchg
lcall
add
add
test
cmp
js
hlt
push
push
cmc
and
jae
testb
repz
mov
or
fs
add
rclb
xchg
roll
dec
iret
in
shrb
fcompl
ljmp
cwtl
movsl
stc
out
push
stc
popf
mov
and
jae
fwait
sub
push
lods
insb
popa
lock
ja
inc
or
jmp
cmp
popa
and
dec
mov
mov
pop
cmp
jae
jae
scas
ret
addl
add
adcb
sbb
add
pop
inc
mov
leave
imul
stc
sub
or
sbb
rep
jns
xchg
stos
mov
jecxz
and
enter
pop
pop
xchg
mov
mov
lds
lret
ljmp
gs
aas
orb
cmp
and
dec
pop
jecxz
sub
or
inc
add
dec
sbb
mov
xor
pop
pop
in
stc
mov
loopne
push
lea
lods
mov
pop
cmp
jecxz
and
fcmovbe
shr
subb
fisttpll
in
pop
push
xchg
fmuls
lock
ret
inc
in
mov
inc
mov
xor
or
mov
sub
int3
int
or
jb
hlt
cltd
jo
dec
stc
cmpsb
leave
sub
cld
jnp
push
dec
pop
lods
lret
xorb
mov
push
adc
xchg
xor
pop
push
xor
mov
mov
xchg
xchg
mov
ret
cmp
mov
movsb
adc
sbb
sub
cmp
pop
int3
fldl
mov
push
inc
dec
ret
jg
pusha
pop
out
push
xor
dec
mov
cmp
popf
ficoml
fsubs
cmpsb
sahf
adc
xchg
sub
fistl
adc
js
xchg
add
jbe
push
or
inc
jo
sbb
adc
jp
ljmp
mov
sub
ficoml
movsb
or
out
lods
sbb
in
fcomip
sub
pop
or
dec
popa
mov
add
push
or
into
push
jp
int3
mov
outsl
fldenv
cmp
mov
cmpsl
aas
outsb
sub
andl
faddl
and
pop
es
mov
cmp
jno,pt
stc
mov
ljmp
pushf
or
icebp
ret
push
fidivs
int
outsb
test
mov
dec
iret
add
cmp
aad
std
lcall
insl
cmp
adc
and
adc
mov
mov
negb
inc
ret
stc
cmp
in
scas
pop
das
adc
jp
jle
mov
fwait
test
xor
jo
dec
sbb
mov
stos
daa
int3
inc
je
push
in
sahf
pop
ljmp
test
jl
addr16
push
cmpsb
push
insl
fisubrs
fsubs
mov
out
sub
sub
js
repnz
and
xchg
ret
cmp
push
into
add
mov
mov
mov
dec
mov
out
dec
fmul
subb
pop
xchg
dec
clc
and
rol
cmp
jle
fs
cmpsl
sub
shll
pusha
jp
movhps
push
dec
out
adc
inc
push
cmpsb
sahf
mov
in
ret
inc
pop
xlat
sub
cs
pop
xor
xchg
dec
stc
inc
mov
cmp
mov
mov
es
sahf
push
xor
and
add
jb
out
jle
cmp
push
sub
fldl
push
test
inc
xchg
pop
lods
jle
clc
xor
fbstp
inc
push
insb
sub
xchg
cmp
cli
mov
pusha
clc
pop
scas
ss
insb
pop
in
cld
repnz
jmp
push
mov
pop
jns
pop
xor
sub
add
adc
gs
xor
xchg
mov
iret
fiaddl
and
dec
subl
mov
bound
adc
je
sub
pop
dec
out
sub
mov
mov
inc
es
sub
ja
nop
mov
das
and
mov
cwtl
and
ss
aaa
or
xchg
cmp
in
ss
lret
pop
leave
nop
jle
mov
lret
movsb
lods
in
xchg
mov
pop
sbb
std
mov
loope
fadds
cmc
adc
ret
or
js
sub
mov
cld
mov
in
outsb
lods
xor
ja
popf
addl
outsb
push
addr16
ret
sub
jae
push
mov
ret
or
hlt
push
dec
cmp
xchg
sbb
jle
or
outsb
mov
sahf
lods
cs
or
and
jge
lahf
adc
mov
push
mov
add
into
cmpb
lds
and
sub
mov
dec
jb
int3
jp
faddl
into
mov
add
mov
aaa
scas
or
xchg
xor
lods
pop
in
add
adc
jmp
repz
mov
leave
and
cli
cmc
das
dec
inc
das
hlt
push
cld
ljmp
std
fwait
dec
ds
inc
fstl
sbb
adc
rcrb
rcr
cmc
lea
mov
sub
in
aas
dec
inc
scas
inc
pop
mov
dec
fcoms
push
or
push
mov
lods
or
sbb
push
mov
lret
jne
and
pop
lods
dec
movsl
test
outsl
movsb
sub
inc
lods
add
mov
xchg
arpl
pop
push
lds
add
movsb
ret
aad
inc
xor
inc
push
in
lret
jb
cld
inc
sub
outsb
lods
mov
shlb
inc
xchg
mov
xchg
xor
cmp
mov
cmp
adc
mov
push
inc
adc
add
scas
fwait
ljmp
mov
mov
xor
mov
lahf
pushf
es
xchg
mov
mov
addb
dec
aad
fs
xor
sbb
pop
jno
sahf
add
ds
andl
and
sti
lret
jle
addr16
outsl
mov
or
xor
mov
push
cmp
or
mov
lock
add
insb
stc
int
loope
dec
adc
xchg
adc
popf
inc
mov
je
xchg
or
xor
inc
stos
jg
and
imul
add
inc
push
sub
frstor
mov
dec
lret
mov
jbe
sub
mov
jno
xchg
inc
dec
sarb
xchg
shl
xor
xchg
and
repnz
adc
pop
mov
xchg
sub
scas
lahf
add
xor
cmp
push
push
inc
mov
negb
sti
inc
xchg
dec
cmpsl
test
gs
int3
sub
fnstcw
sahf
sub
or
lea
mov
add
pop
inc
loop
loop
mov
jo
jecxz
stos
cli
mov
fsubrl
ret
in
jo
add
aaa
add
sbbb
leave
out
ficoml
jo
xchg
pop
pop
movsl
pop
and
lds
out
xor
cmp
lods
movb
mov
leave
lods
jbe
ret
push
jecxz
cmp
mov
gs
push
adc
cmpl
push
pop
outsb
ret
adc
jbe
inc
sbb
push
pop
adc
jns
jge
and
xchg
xchg
data16
loope
mov
in
dec
dec
and
jne
jecxz
nop
push
dec
pop
pop
add
mov
ja
dec
adc
push
cld
in
mov
jae
fsubrs
inc
test
or
jns
scas
das
ljmp
stos
dec
out
jp
sub
loope
mov
int3
fldenv
sub
lock
push
xchg
into
mov
mov
dec
mov
ret
mov
jp
ret
mov
imul
mov
push
inc
or
bound
dec
mov
scas
add
and
pop
xor
xchg
popa
inc
out
push
cmpsb
ja
jnp
cmp
into
or
cmpsb
movsb
dec
jmp
clc
ret
dec
test
arpl
mov
sbb
push
es
fucom
cmc
mov
pop
enter
jge
fsubs
aas
fstpl
mov
fcoms
int3
sub
subb
imul
push
adc
packuswb
inc
xchg
jmp
jl
jae
repnz
sub
xchg
fs
push
mov
jecxz
mov
es
jbe
out
jb
sub
cmp
push
adc
int
push
inc
xor
cmpsl
push
sahf
aam
testb
mov
out
dec
xlat
pushf
cmp
pop
je
or
dec
adc
adc
jns
je
enter
stos
enter
stos
in
icebp
jg
mov
mov
jg
mov
lcall
sahf
ret
mov
add
lahf
push
mov
xchg
inc
jne
cmp
jb
mov
push
jg
lea
xchg
movsl
fsubrl
mov
sbb
shll
xlat
mov
xor
cmc
xchg
sbb
dec
xchg
xchg
pop
insb
xchg
outsl
jecxz
add
fstl
or
mov
clc
push
lods
sti
adc
jnp
idiv
adc
int3
adc
cwtl
pop
mov
insl
add
mov
into
jnp
lahf
ret
adc
fcmovnbe
je
adc
mov
sti
adc
push
mov
and
int3
les
jnp
xchg
mov
or
in
add
ljmp
add
nop
adc
std
or
nop
das
lods
sbb
fisubrl
add
mov
add
and
js
fistps
sub
xchg
and
cmpsl
inc
dec
push
inc
lea
mov
cmp
movsl
and
jns
cmpsb
sub
sbb
mov
xchg
out
xchg
loope
adc
cmp
js
loope
arpl
pop
cmp
adc
data16
jbe
and
imul
mov
push
popa
lods
or
xchg
jg
sub
mov
jl
into
adc
mov
sbb
mov
gs
inc
inc
fs
stos
mov
dec
test
fidivs
cmp
daa
mov
lds
jle
movsl
dec
div
sti
dec
std
repnz
rcl
mov
cmp
and
sti
jbe
xchg
push
adc
cli
xor
and
js
jg
cmpsb
adc
mov
shl
fucom
jmp
mov
scas
cmp
sub
xlat
sbb
aam
push
aad
push
add
es
mov
mov
jne
adc
out
dec
push
mov
fimull
in
outsl
fmull
bnd
sbb
mov
sbb
vmovsd
mov
enter
inc
test
pop
xchg
xor
dec
pop
mov
pop
push
fstpt
xchg
jle
sub
jne
rep
mov
dec
dec
out
jns
icebp
and
cmp
fs
xchg
icebp
mov
popl
or
and
adc
lcall
inc
inc
jg
pop
shl
dec
int
jmp
data16
inc
mov
mov
sub
outsl
test
jl
sbb
sub
loop
insw
mov
adc
jnp
dec
fs
dec
loop
test
cmp
push
js
stos
mov
imul
mov
jns
loope
xor
dec
mov
jl
sbb
mov
lret
pop
insb
rolb
popa
xchg
mov
in
cmc
dec
pop
pop
bnd
ret
cmp
adc
in
jo
shlb
xchg
maxps
sarb
dec
shlb
aam
add
push
sub
sbb
mov
js
dec
nop
pop
leave
aad
mov
mov
add
scas
mov
mov
int
sub
push
inc
push
jns
sub
dec
pushf
pop
push
cwtl
adc
mov
aaa
out
xchg
xchg
outsl
add
inc
or
nop
jl
repnz
ret
iret
cmpsb
cmp
xorb
stc
test
mov
popf
or
clc
inc
pop
clc
adc
adc
test
jno
sub
dec
mov
cltd
jmp
std
frstor
push
cvttps2pi
imul
fists
inc
aad
sbb
or
xchg
loop
mov
pop
movsb
mov
pop
lret
xchg
bound
ret
xchg
loopne
in
mul
cmp
xor
adc
mov
sarl
and
xchg
cmpsl
jnp
jbe
mulb
loope
xchg
mov
xchg
or
lret
shl
sbb
xchg
shlb
sbb
pop
add
and
movsb
jnp
pop
cli
or
aas
insl
fadds
lock
xchg
adc
loop
push
xchg
rorl
pop
xchg
dec
ljmp
xor
xor
icebp
jnp
pusha
sbb
mov
push
adc
insb
dec
inc
dec
or
ror
push
cli
pop
adc
repz
xor
or
dec
cmp
push
pop
sbb
mov
adc
jp
leave
jb
cmp
adc
sbb
sahf
repz
scas
add
push
or
aas
sbb
dec
lods
shll
push
mov
mov
scas
xchg
gs
les
je
pusha
fcmovu
dec
push
clc
inc
mov
mov
cmpsb
sbb
xchg
push
stc
pushf
dec
and
ss
lret
scas
in
jnp
lret
sub
shlb
inc
add
lea
add
call
dec
inc
adc
sti
loope
sbb
imul
push
mov
js
xorl
dec
dec
mov
or
xchg
xchg
loopne
push
add
sub
jecxz
iret
mov
mov
mov
fidivl
arpl
test
adc
ret
xchg
jbe
mov
insl
dec
xchg
pop
subb
lret
add
xchg
add
test
dec
xor
or
cs
inc
repz
cmpsb
sbb
cmp
mov
jg
repz
addr16
add
mov
mov
cmp
xchg
in
dec
jno
jbe
lock
mov
mov
lock
es
shr
pop
mov
xchg
ljmp
mov
dec
fdivl
stos
adc
sbbl
js
out
mov
dec
aam
or
sbb
adc
xchg
xchg
and
ds
cmp
ljmp
add
dec
pop
lret
repz
sti
jb
cmpl
movsb
push
loop
ret
mov
cmpsb
mov
or
outsb
jg
pop
gs
clc
push
popa
test
jecxz
pushf
jno
mov
movsl
sbb
aam
or
sahf
xchg
bound
add
bound
xchg
pop
and
inc
jnp
ret
in
fxch
stos
adc
xor
loop
mov
add
subl
daa
imul
mov
imul
popa
ja
xchg
clc
mov
or
adc
in
xchg
ss
push
rcrb
mov
jne
lea
or
insb
mov
xchg
shlb
inc
dec
lock
add
mov
push
mov
add
mov
gs
adc
lock
jle
in
addr16
cmp
push
fwait
mov
in
jle
sbb
xchg
mov
mov
jae
test
dec
add
push
in
iret
add
ss
jo
mov
push
xlat
xor
enter
xor
into
lock
aad
cmp
jnp
in
clc
pop
iret
sbb
mov
add
fldl
movsl
mov
sub
nop
add
add
out
lret
lea
arpl
mov
je
mov
into
out
pop
mov
fcoms
push
sbb
test
pop
cmp
mov
push
rorl
mov
xor
mov
xor
outsl
mov
push
aad
pop
fsubrl
sbb
inc
jnp
xchg
push
or
mov
cwtl
add
mov
and
xchg
adc
inc
adc
test
rolb
sbb
push
add
adc
cmpb
icebp
cmp
mov
adc
je
ret
clc
cmc
imul
jle
sub
add
sub
push
adc
movsl
pop
sbb
movsl
jnp
mov
xor
push
push
outsb
jmp
xor
ret
jae
fbld
or
mov
cltd
stos
mov
test
fmul
insb
xor
or
jecxz
pushf
rorb
pop
xor
mov
push
add
cmpl
movsl
in
ret
ljmp
inc
dec
fadds
fsubrl
sub
jo
and
mov
aam
add
gs
adc
jbe
je
sti
int
cmp
sbb
add
sar
cmp
insl
pop
divb
push
dec
inc
and
mov
int3
pop
mov
pop
push
insb
cltd
scas
outsb
xor
incl
pop
inc
aas
loopne
xchg
cmp
andb
jmp
addr16
testl
fdivs
shll
lock
addr16
out
movsb
jne
jns
mov
xor
int
popf
sahf
gs
push
pop
adcb
add
ficomps
pop
inc
test
mov
loopne
jbe
loope
aaa
stos
dec
stc
gs
push
adc
ljmp
lret
icebp
adc
jp
jne
sti
lret
mov
fs
rolb
jecxz
and
cld
jecxz
add
fwait
lcall
push
sbb
push
jmp
xchg
int
dec
leave
or
dec
inc
sbb
addr16
imul
mov
mov
push
sbb
push
popf
subl
repnz
inc
sub
inc
jl
and
dec
in
lods
or
mov
and
test
mov
sarb
shll
fld
adcb
and
les
ss
test
imul
call
push
pop
daa
mov
lcall
jae
call
fisttpl
mov
mov
jnp
push
and
or
and
and
movsb
or
jmp
imul
push
popa
and
sbb
clc
icebp
in
xor
gs
and
aaa
gs
in
fiaddl
xchg
adc
mov
xchg
xchg
jmp
daa
mov
in
out
cmp
ljmp
lret
cli
repnz
xlat
clc
mov
xor
notb
iret
call
stos
push
fsubrl
sub
jecxz
jp
mov
in
pop
xchg
pop
push
push
test
rcrb
sbb
ret
fstpl
jbe
mov
dec
cs
adc
addr16
scas
outsb
xchg
js
clc
cwtl
aad
or
imul
addb
lahf
or
scas
pop
int3
fs
jp
shrb
sbb
mov
xor
push
cwtl
loopne
sbb
popf
movb
jb
fwait
in
xor
cltd
ret
or
imul
mov
xchg
xor
pop
int
sub
xor
mov
pushf
jb
mov
dec
int
pop
push
in
daa
lcall
xchg
cmp
aam
pusha
nop
cmp
rolb
repz
fs
inc
testb
test
or
mov
movsb
cwtl
xchg
ret
and
stc
stos
loope
repz
xor
cltd
shr
xor
fisttps
ret
repz
cwtl
adc
roll
jbe
cmp
add
sub
push
lret
sub
adc
push
mov
out
sub
incl
movsl
aas
mov
cmp
aam
leave
popa
add
and
cmp
fs
and
inc
mov
test
pop
mov
outsb
mov
das
shrl
jmp
outsl
adc
jmp
and
mov
mov
push
mov
sbb
leave
fwait
adc
in
dec
stc
xchg
dec
stos
bound
js
fwait
in
adc
in
cmc
pop
pop
push
sub
jae
mov
pop
out
cs
mov
int3
loopne
jg
jae
jmp
push
xlat
idivl
and
mov
push
xchg
inc
cmp
out
imul
ffree
xchg
xor
adc
jmp
sbb
dec
mov
cmpb
cmc
pop
pop
adc
sub
arpl
pop
divb
or
or
mov
push
addr16
lds
gs
sub
sub
mov
out
call
movsl
es
cmpsl
sbb
sub
fmul
in
cmpsl
xlat
lret
and
mov
lahf
popf
rolb
inc
push
mov
in
push
enter
cmp
add
cmp
add
pop
mov
pusha
xor
cmp
cmpsb
inc
pop
mov
sub
dec
xor
push
stos
push
cmpsl
insb
cli
mov
add
and
and
rolb
dec
and
cmp
xlat
shlb
xor
in
dec
enter
xor
shll
mov
cmp
in
or
mov
fsub
mov
sarb
gs
cwtl
arpl
mov
loop
cmpsb
cmp
out
fwait
xchg
test
sti
mov
add
clc
notl
xor
cwtl
cmc
push
xor
dec
xchg
sbb
shlb
xchg
xchg
lods
lret
mov
mulb
pop
popf
arpl
pop
mov
push
push
repnz
sub
lret
jl
mov
fs
mov
inc
pop
inc
jne
mov
inc
and
ds
lahf
mov
adc
scas
pop
enter
cmpsl
or
sub
jecxz
sahf
push
push
test
pop
cmp
push
mov
loopne
and
adc
test
pop
test
cmp
test
fiadds
jbe
push
mov
pop
lret
into
push
push
nop
sub
push
lahf
mov
out
fiadds
rcrl
push
mov
sahf
mov
adc
sbb
lods
rcll
cmp
adc
adc
cltd
es
js
lock
jecxz
adc
jp
cwtl
fisubrs
jo
adc
aas
mov
inc
ds
mov
and
repz
xchg
test
scas
sahf
fnstenv
and
repz
iret
cmp
xchg
scas
testb
imul
dec
xchg
jbe
sahf
sahf
rclb
lret
push
cld
xor
cmp
dec
cltd
das
push
loop
mov
sti
and
shl
test
filds
add
les
decb
pop
push
daa
cmp
dec
push
ljmp
test
lock
aam
mov
xchg
cmp
imul
jae
add
push
cld
leave
mov
xor
mov
cld
js
mov
or
mov
xchg
leave
es
dec
cs
pop
xor
mov
inc
jae
push
xor
add
sarl
add
lea
adc
mov
pop
mov
and
hlt
inc
cs
inc
cmp
ljmp
es
push
mulb
jg
das
mov
fimull
jb
rorb
add
sub
fsubs
jnp
dec
push
pop
jbe
pop
stc
out
fstpt
fcomp
pushf
jo
lahf
jl
js
std
mov
cmp
jge
add
int3
std
lea
cmc
sarb
das
aaa
cmp
icebp
fistps
lcall
adc
or
cmp
jmp
test
lods
or
push
jo
adc
mov
divb
add
fiadds
pop
xor
lcall
decb
shlb
cmc
out
stos
adc
dec
inc
in
mov
inc
mov
mov
shrl
mov
sbb
cmp
mov
int3
ret
frstor
lahf
js
mov
repz
sbb
jb
daa
mov
inc
out
mov
add
mov
pusha
add
jmp
sbb
icebp
push
fwait
xchg
jg
scas
repnz
pop
xchg
push
shr
jno
scas
or
adc
sub
lock
push
cmp
sub
or
movsb
mov
xchg
inc
imul
mov
mov
push
dec
adc
repz
movsb
gs
mov
jne
cmpsb
jbe
jge
sub
hlt
xchg
dec
clc
imul
push
es
mov
stos
mov
sub
in
adc
xor
mov
ja
in
sti
pop
loope
sub
sub
jecxz
sbb
push
dec
aam
mov
in
pop
adc
pusha
fcomp
lea
lock
and
daa
into
mov
lahf
xor
out
adc
xchg
popf
shll
xchg
and
mov
loop
aad
out
ret
xchg
fwait
int3
and
sub
add
imul
enter
inc
test
outsl
mov
or
popf
adc
mov
hlt
lahf
outsl
rolb
jno
mov
daa
shld
mov
les
push
loop
jbe
lea
mov
pop
fistps
inc
jge
xchg
scas
aaa
add
loope
jmp
ret
aaa
outsl
cmp
xorb
int3
xor
mov
xor
jl
mov
ss
call
jge
xchg
pop
jp
aas
jnp
push
and
mov
xor
push
sbb
clc
xor
fdivp
xchg
push
mov
push
mov
jb
jge
aad
in
pop
hlt
loope
sub
adc
aad
fwait
mov
repnz
andl
inc
mov
in
cltd
jne
dec
leave
jle
mov
dec
mov
mov
jbe
sbb
mov
imull
mov
daa
loop
sbb
mov
pop
imul
adc
lods
aad
loop
inc
repz
lods
ss
mov
jne
xchg
xor
xchg
test
xor
mov
sub
ret
jg
and
movsb
xchg
dec
clc
mov
xchg
cmp
mov
inc
je
mov
sub
pop
fisubl
and
cmp
sti
fwait
stos
faddp
insb
add
hlt
sbb
lahf
mov
cmp
adc
aam
sahf
jo
fs
imul
pop
and
mov
ja
dec
jne
add
inc
mov
scas
push
fcoml
mov
cmp
out
xchg
push
inc
bound
dec
js
sub
dec
jl
xchg
mov
add
cmpsb
adc
mov
pop
insb
dec
imul
test
adc
movsb
mov
sti
cmp
xor
ja
shl
loopne
jl
gs
xlat
flds
mov
imul
test
lods
dec
insb
mov
sbb
call
arpl
iret
pop
in
xchg
imul
in
sbbb
jmp
std
scas
adc
inc
fildll
lret
cmp
mov
in
push
jge
mov
idivb
icebp
fdivrl
inc
nop
push
sti
into
sub
cmpsb
inc
test
cmp
lock
or
mov
hlt
addl
and
aas
sbb
mov
nop
negb
add
das
add
pusha
dec
xor
insl
loope
add
xorl
jbe
jmp
rcll
add
cmpsb
mov
out
mov
mov
mov
push
fld
cmpsl
jle
sbb
or
or
fistl
outsb
fldenv
mov
insb
lea
pop
rclb
add
inc
inc
test
sub
jns
push
rcrb
pop
mov
popf
rcll
and
in
arpl
mov
ss
dec
cmp
or
mov
inc
sub
mov
adc
aad
adc
cmpb
jmp
pop
push
int
adc
and
sub
pop
test
mov
xor
ds
mov
decb
cwtl
mov
and
ja
pop
sbb
punpckhwd
push
sub
lret
mov
and
sarb
mov
pop
mov
clc
mov
test
push
adc
fs
jb
fwait
mov
lods
dec
int
sbb
ljmp
call
gs
ret
test
fs
out
add
aad
orb
push
in
dec
and
jmp
loop
sub
sbb
fwait
popf
mov
inc
jae
loop
sub
xchg
mov
dec
pusha
dec
mov
xor
inc
test
xor
jmp
jo
dec
loop
add
mov
out
inc
and
push
jmp
psllw
cmp
or
std
clc
faddl
cwtl
les
aaa
lea
stos
inc
push
pusha
bound
jecxz
ret
jnp
pop
fs
sub
jae
lods
sub
mov
jg
pop
add
push
or
mov
xor
ss
in
add
repz
call
call
push
stos
shrb
xchg
sub
das
out
cmp
ja
fcoml
imul
dec
fsubrl
and
add
mov
sbb
fnsave
adc
mov
pop
xor
cmpb
stos
in
adc
push
push
jl
push
sbb
jl
test
js
sti
fisttpl
xchg
cmpsb
aam
push
test
or
clc
stos
jo
mov
pmulhuw
jb
movsb
mov
lea
in
push
dec
rorl
out
adc
cmp
pop
ficoml
inc
popf
xchg
xchg
cmpsl
mov
ja
ret
mov
inc
insl
xchg
adc
push
in
cmp
pop
vmaxsd
ret
pop
stc
jmp
iret
jp
push
shrl
jne
rorl
test
xor
pop
mov
std
dec
in
es
and
mov
jmp
and
sub
inc
sub
sbb
imul
xchg
out
mov
cmp
jb
mov
ret
aaa
cmp
dec
and
jecxz
pop
jg
cmp
cmovns
and
rclb
popa
mov
xor
not
push
inc
cmp
enter
aad
icebp
jnp
push
sub
cs
ds
xchg
loop
outsb
push
imulb
mov
xchg
fiadds
addr16
dec
iret
test
xor
push
dec
mov
cmp
xchg
imul
mov
ss
jle
mov
inc
subb
hlt
lret
jbe
loop
hlt
mov
jne
mov
movsb
loope
pop
push
jo
fwait
xor
es
push
int3
cmp
sbb
mov
arpl
mov
jmp
xchg
cs
inc
mov
xchg
pop
xchg
ja
in
inc
adc
lea
inc
pop
scas
pop
popa
jae
jnp
xor
add
sbb
push
cmpsb
mov
xchg
fisttpl
sub
aam
push
ljmp
mov
mov
in
daa
cmpsb
bswap
mov
mov
roll
push
ljmp
add
jne
or
and
add
mov
ja
cmpsb
mov
stc
and
scas
adc
es
inc
xlat
movsl
outsb
and
pop
test
xchg
fcmovbe
and
cltd
in
cmp
je
mov
rorl
add
push
int
sub
cmp
fwait
and
test
aas
mov
push
lret
icebp
xchg
in
pop
shll
push
sbb
test
orb
imul
ret
test
in
fisttps
or
fs
cmpxchg
pop
add
sbb
jg
cmpsl
jno
arpl
aas
cmp
push
jp
jecxz
idiv
lock
insb
ljmp
ja
and
mov
testb
dec
scas
inc
movsb
sub
jae
sbb
divb
and
repnz
mov
fucom
jmp
rcll
push
mov
ss
iret
xchg
icebp
leave
int3
mov
mov
divl
xchg
or
cmpb
xor
dec
push
pop
and
add
or
add
in
mov
xor
aam
sub
mov
rcl
or
push
dec
loope
in
stos
dec
das
dec
pusha
es
hlt
cltd
iret
fnstenv
mov
mov
jb
cmpsb
jns
lods
inc
lahf
jbe
or
loope
ds
insb
scas
sub
hlt
sub
jne
inc
inc
and
mov
loop
jbe
out
out
ret
push
xor
addr16
iret
push
movsl
loopne
lds
push
push
ror
mov
icebp
inc
imul
lock
xor
sub
pop
adc
xchg
xchg
ret
imul
mov
and
add
adc
push
dec
jp
push
jae
xchg
pop
jle
cmp
cs
xor
push
stc
cmc
add
hlt
ret
outsl
pop
jmp
imul
pop
xchg
adc
pop
or
mov
ret
enter
test
popf
cmpsb
sbb
jne
pop
loope
movsb
and
test
mov
push
rolb
lea
mov
loope
out
aam
xchg
lcall
cli
mov
push
push
adc
je,pn
addb
ljmp
cmp
ffree
aad
push
cmp
inc
repnz
push
stos
jmp
jnp
xchg
iret
cmp
sub
scas
aas
and
push
scas
pop
pusha
mov
loop
cmpl
add
dec
inc
insb
jg
inc
stos
sub
sbb
add
dec
nop
sahf
mov
mov
movsl
pop
jg
ja
pop
mov
jbe
mov
icebp
fidivrl
cltd
jns
xorl
adc
push
ljmp
or
jg
and
in
rol
rcll
mov
jmp
movsb
nop
xor
adc
mov
andl
cmc
cmp
mov
imul
pop
stos
ja
push
inc
pop
rcll
fbstp
loop
mov
pop
mov
or
adc
cmc
popf
enter
aam
inc
and
or
cmp
mov
test
dec
xor
mov
ja
out
dec
shrl
repz
or
sub
hlt
dec
je
mov
out
aas
psubusb
sub
xor
sti
add
mov
cmp
jecxz
sbb
add
sbb
or
imul
dec
mov
push
fistl
mov
sbb
sbb
out
jecxz
jle
pop
jmp
inc
nop
or
push
lret
arpl
cmp
push
mov
and
cli
xchg
mov
mov
and
push
xchg
es
hlt
fs
fwait
xchg
in
cld
cmp
rcl
xor
xchg
fwait
cmpsl
js
or
add
push
test
into
jno
fwait
adc
jp
rep
pop
inc
cltd
pop
push
sbb
cltd
insl
ljmp
cwtl
fisubs
mov
pop
lret
push
movsl
int
aas
cmp
and
repnz
cwtl
sbb
fucom
cmp
push
pushf
in
and
sub
jb
mov
sbbb
insl
outsb
es
into
bound
sbb
lret
mov
dec
call
jge
pop
cmp
jg
nop
and
mov
jecxz
fimuls
lahf
dec
addr16
lret
sbb
or
mov
push
mov
int3
xor
jecxz
arpl
jl
sub
mov
add
pop
mov
movsb
mov
push
ja
adc
shr
sbb
sbb
adc
insb
lea
xor
rclb
js
add
or
sub
xchg
jno
fwait
and
cwtl
cmpsl
iret
ds
and
mov
and
into
pop
push
adc
icebp
xchg
jbe
inc
xchg
or
lret
mov
aad
inc
sub
cmp
sahf
daa
lds
rclb
inc
dec
aaa
adc
push
movsl
mov
pop
repnz
fidivs
js
push
cmp
scas
xchg
pop
sbb
jmp
cmc
xchg
inc
lock
xor
in
pop
mov
or
out
and
cmp
adc
lcall
pop
aad
lcall
pop
out
mov
inc
push
and
ret
inc
cmp
mov
inc
push
or
sub
or
sub
cmovp
stos
mov
adc
negb
inc
jp
sbb
imul
icebp
push
push
ds
fdivs
sub
add
clts
xor
sbb
pusha
mov
pusha
fs
ret
cld
aad
sbb
lods
sub
push
cs
sti
jl
mov
repz
lods
imul
mov
cmpsl
pop
adc
dec
push
loopne
iret
inc
push
mov
mov
push
ret
xchg
inc
add
jae
adc
in
shrl
or
mov
insl
fmull
lret
out
push
movsl
daa
aaa
cmc
inc
or
frstor
push
stc
shl
jns
ja
mov
shlb
cltd
push
xor
outsb
or
push
or
fs
xor
int
push
in
add
xor
mov
sbb
aaa
insb
lret
dec
test
shrb
jb
les
xchg
adc
mov
into
aas
not
and
fs
mov
ficoml
push
or
arpl
test
dec
pop
dec
mov
inc
xor
lret
mov
in
xchg
loop
adcl
and
cld
lahf
pusha
pop
cmp
push
dec
dec
cwtl
cmp
pop
and
mov
dec
jg
pop
inc
push
popa
jl
test
cmp
repz
mov
mov
xlat
and
mov
movsl
mov
and
pushf
jmp
add
xor
je
xor
leave
xchg
push
shlb
or
loopne
pop
lea
aad
outsb
jne
inc
add
adcl
xchg
in
ret
lds
loopne
mov
jg
add
cs
mov
inc
cwtl
push
lahf
cmpsb
je
insb
test
loopne
js
mov
popaw
jo
lea
cwtl
adc
rclb
gs
pop
stos
push
add
loopne
int
sbb
mov
mov
add
xchg
inc
fisubl
test
mov
insb
movsl
mov
cs
stos
pop
rcll
iret
out
xchg
icebp
mov
cmp
push
lcall
lds
imul
call
ss
fidivrs
imul
iret
sub
test
ljmp
xchg
and
mov
cmc
push
call
sbb
dec
mov
mov
push
lods
xor
fiaddl
imul
movsl
popa
inc
mov
jle
pop
cmpl
mov
cmpsb
xchg
adc
mov
inc
jbe
ss
sub
mov
xchg
dec
loopne
add
cmc
enter
into
daa
xor
mov
pop
add
pop
push
inc
imul
pop
push
sbb
in
cs
pop
fs
lock
jns
sub
scas
popf
inc
xlat
jmp
test
test
rol
jmp
push
gs
popf
jmp
lret
pop
xorl
or
cmp
into
mov
add
rcll
mov
xor
push
push
loope
mov
lahf
inc
loop
and
adc
iret
pop
sub
pop
adc
icebp
add
iret
add
push
adc
cmp
mov
insb
pop
mull
push
in
push
out
orl
loopne
sbb
je
shrb
das
sti
lods
or
mov
rcll
add
sbb
mov
add
push
data16
test
and
jo
imul
jno
mov
jae
fimull
xchg
nop
dec
or
shlb
daa
or
in
jns
inc
inc
out
jnp
ja
adc
pcmpeqd
lret
mov
popa
add
jecxz
jne
push
dec
test
hlt
cmp
ds
and
test
fnsave
insb
xor
sub
outsl
ret
cmp
adc
pop
sub
jp
gs
add
mov
mov
mov
call
mov
pop
aam
mov
cli
jno
into
aaa
push
in
outsl
jno
push
dec
flds
lahf
popa
jnp
shll
and
adcl
adc
out
add
fcmovbe
jge
mov
cmp
into
mov
or
out
inc
xchg
hlt
push
push
adc
fmulp
hlt
mov
xor
insl
sub
mov
or
xor
into
cld
fistl
push
dec
test
imul
ja
dec
adc
sbb
dec
les
test
pop
cmp
ss
sti
cmp
and
dec
xlat
xchg
xchg
addr16
mov
dec
gs
xchg
cmp
sub
sub
pop
out
nop
cs
mov
arpl
pop
into
lods
mov
mov
sub
xchg
xor
mov
sub
stc
and
jbe
mov
cwtl
pop
lods
mov
jne
fldl
sub
ret
test
mov
or
xchg
popa
lcall
scas
or
xor
popa
imul
jo
lcall
mov
js
das
mov
popa
sbb
sub
or
mov
cmp
pop
test
sahf
xchg
push
repnz
aam
mov
loopne
roll
inc
out
add
lock
xchg
xor
xchg
dec
mov
or
insl
sub
mov
mov
sub
leave
cmpsb
sti
xor
cmp
fstps
pop
push
cmp
inc
mov
sbb
mov
dec
divb
jle
push
gs
insb
sub
loop
or
fisubrs
jle
dec
stos
out
cmp
out
sub
push
lahf
add
movsl
mov
into
scas
daa
lahf
loopne
push
stc
sbb
inc
bound
cwtl
loopne
insl
mov
nop
pop
cs
jns
mov
jge
push
pop
sti
xchg
loopne
mov
test
gs
push
es
imul
cmp
jnp
jns
and
cmpsl
rorl
mov
and
and
fsubrs
dec
frstor
iret
dec
sbb
cmp
divb
add
cmpl
pushl
dec
lea
fsqrt
in
lahf
sub
out
sbbb
ljmp
fidivrl
leave
aam
dec
cmpsb
icebp
arpl
loopne
pop
imul
imul
xchg
cmpsl
mov
mov
adc
sbb
inc
jle
pop
jno
in
and
lcall
test
cmp
loope
dec
inc
sub
sbb
dec
test
movl
and
push
mov
and
dec
jle
add
iret
xor
mov
inc
cmp
shlb
inc
hlt
or
cmpsb
xchg
aaa
pop
xor
and
xlat
xor
mov
out
inc
or
jne
add
adc
fs
sub
jg
pop
int
enter
cmp
out
divb
push
mov
rorb
negb
inc
xchg
cmc
adc
scas
aad
fmuls
leave
inc
pop
and
jge
lahf
in
sbb
dec
push
movb
jnp
xor
scas
or
daa
xchg
ret
mov
sbb
and
xor
push
jnp
xor
hlt
push
scas
test
pop
loop
call
jp
es
mov
dec
jae
negb
push
fwait
mov
js
xor
mov
xlat
cwtl
push
test
mov
inc
mov
mov
cmp
popf
hlt
ja
imul
stos
fcoms
adc
mov
popa
out
mov
std
insl
test
or
jne
cmpb
cmpl
stc
jle
enter
rcrl
sti
mov
out
mov
mov
jecxz
mov
aaa
mov
in
shrb
out
xchg
push
call
jb
pop
xor
push
xor
adc
test
mov
mov
sub
int3
and
jnp
sub
mov
aam
and
lcall
sub
icebp
push
xor
adc
imul
push
fcomi
xchg
add
into
dec
andl
iret
sarl
xchg
pop
adc
aam
clc
ret
jne
or
imul
jnp
jo
imul
imul
fwait
popa
push
add
stos
jne
mov
test
test
push
movb
push
out
adcl
push
je
rcr
lret
push
rclb
pop
xchg
dec
adc
out
cli
movsl
mov
mov
inc
mov
jb
cmp
les
hlt
push
in
iret
jp
aad
loope
dec
mov
and
fistl
insl
dec
ljmp
and
dec
popa
mov
sbb
adc
pop
sbb
call
or
movsb
bound
stos
dec
mov
mov
jbe
icebp
sub
out
lea
jge
je
xor
dec
and
and
inc
dec
add
fnstcw
jnp
nopl
std
add
shll
nop
and
adc
push
fcomp
aam
sbb
addr16
push
pop
inc
mov
mov
andl
rcl
pop
push
xor
xorl
shr
popa
daa
mov
and
mov
dec
jb
or
outsl
and
js
inc
xor
pop
sti
or
roll
xchg
rep
sbb
push
aam
add
out
out
and
out
jne
push
push
jp
les
mov
fwait
push
and
mov
call
popa
pop
lods
pop
adc
and
movsb
xor
xor
jge
scas
or
fldenv
push
add
fistps
andl
fldenv
sbb
cmpsb
cli
outsb
nop
int3
dec
cltd
or
es
jge
jmp
mov
jne
add
mov
and
nop
dec
addr16
cmp
mov
dec
sub
iret
dec
jo
int
ljmp
sbb
test
push
jecxz
jbe
jge
scas
in
call
inc
pop
dec
jge
adc
xchg
mov
in
sarl
loopne
leave
jb
inc
addr16
pop
leave
scas
imul
mov
sbb
push
xor
ja
andl
push
pop
cmpsb
cvtdq2ps
scas
push
pop
fsin
adc
icebp
pop
sub
sbbb
mov
test
dec
sub
jne,pn
adcl
faddl
loop
dec
sbb
push
jmp
fnstcw
mov
sub
stos
pop
and
xchg
pop
push
movsb
outsl
cli
scas
enter
mov
hlt
fcompl
xorl
mov
testl
jle
lcall
dec
pop
adc
cld
repz
in
popl
mov
aaa
popf
mov
inc
ss
iret
bound
mov
fdivrl
jl
dec
call
dec
imul
add
sub
inc
mov
sbb
testl
dec
and
sahf
inc
mov
inc
pusha
shlb
bound
dec
mov
sub
mov
sbb
into
cmp
gs
aas
mov
int
dec
dec
call
and
cs
jbe
add
ficoms
outsb
fwait
out
push
and
mov
or
aas
in
js
mov
xchg
cmp
and
cmpl
mov
mov
inc
nop
push
push
je
sub
aaa
movsl
ja
ja
mov
mov
xlat
sub
push
fdivrl
push
pop
add
in
pop
and
ds
popf
push
dec
ficoms
test
mov
jmp
lahf
inc
fucomp
out
idiv
imul
jns
sbb
lcall
imul
pusha
jge
cmp
mov
xchg
ja
add
jle
daa
cld
sbb
mov
and
call
sub
sub
ljmp
inc
xor
push
jb
mov
shrl
dec
popa
push
mov
fimuls
cltd
shrb
arpl
mov
lret
or
inc
stos
test
jp
insl
bound
out
sbb
mov
lahf
stos
mov
shll
push
out
xor
cmp
loopne
mov
inc
testb
sbb
jl
imul
and
lahf
and
sarb
out
mov
and
pop
and
in
inc
mov
or
in
push
mov
fs
add
idivb
mov
cwtl
xchg
jo
jb
pop
jns
fmull
loope
push
mov
mov
shll
xor
std
pop
xlat
sub
or
push
xorl
push
jecxz
jge
jp
xchg
scas
daa
pop
jge
aam
jg
leave
out
fstpl
cmp
ds
xchg
pop
inc
jle
or
test
repnz
push
mov
mov
and
scas
or
fistl
shll
dec
push
icebp
jne
mov
inc
sahf
push
inc
mov
cli
cld
push
cld
jno
lea
pop
divb
mov
jne
pushf
adc
in
jl
clc
cmp
sub
mov
sub
rol
jmp
sub
sbb
sbb
and
bound
fs
pop
daa
in
int3
bound
daa
add
or
adc
jne
test
dec
xchg
or
ficoms
push
push
xchg
sbb
ss
dec
push
mov
xlat
and
mov
test
ret
mov
rorb
sti
out
or
adc
mov
mov
xchg
fnstsw
scas
cmp
jbe
add
xor
inc
sub
mov
inc
push
mov
int
inc
call
ljmp
mov
push
dec
sbb
adc
jb
leave
cld
inc
aam
std
pop
data16
sbb
rol
out
aaa
lds
jb
inc
imul
sti
adc
lret
mov
insl
mov
das
pop
mov
stos
jnp
imul
push
mov
and
fs
out
int
dec
inc
cltd
mov
jae
imul
inc
test
mov
loop
dec
or
out
out
insl
outsl
mov
push
in
fldenv
lret
inc
xor
je
pusha
int
mov
cmp
mov
fistl
scas
xchg
insl
loopne
int3
es
test
adc
int
icebp
and
out
lretw
repz
rcll
in
test
mov
add
loopne
adc
scas
mov
jbe
jae
push
add
je
dec
jno
icebp
lods
cmp
pop
clc
jo
out
jae
fbld
push
ficomps
xor
fs
add
xchg
mov
popa
sub
xchg
jns
sub
pop
rcr
jp
or
lahf
gs
pop
sub
mov
ja
mov
mov
adc
in
fwait
push
aaa
jae
cs
int
jp
pop
repnz
or
scas
movsl
dec
jecxz
mov
vpunpckhwd
add
push
sti
xchg
xor
cmp
fmull
imul
inc
and
mov
and
fcoml
pop
push
fwait
mov
in
aam
inc
pop
inc
lds
in
jg
ret
inc
xor
push
push
mov
ss
stos
scas
mov
add
out
or
repz
dec
mov
test
jnp
sbb
pop
and
mov
icebp
and
cmc
aam
lods
push
add
neg
imul
mov
shrl
cmpsb
mov
push
leave
jge
and
scas
lea
push
push
inc
cmpl
sarl
jae
not
ds
pop
rorb
add
popa
loopne
hlt
xchg
ds
incb
std
push
push
lods
xor
dec
xor
dec
jmp
or
stc
xchg
push
mov
pop
jne
xchg
scas
push
cmpsb
adc
addr16
inc
enter
imul
imul
push
lret
loope
clc
imul
ds
and
jbe
jb
sub
rcll
and
popa
sub
lret
mov
pop
nop
mov
sub
popa
imul
mov
inc
sub
mov
movsb
sub
dec
hlt
nopl
mov
stc
popf
and
xchg
out
js
sub
stos
leave
or
iret
or
dec
sub
mov
testl
cmpsl
test
mov
sbb
sbb
cmp
push
insl
xor
xchg
and
push
shlb
dec
loop
loopne
cli
add
jnp
fs
mov
add
fwait
jns
push
sub
adc
pop
daa
cmpsl
ss
call
nop
mov
popa
pop
or
scas
and
scas
inc
out
or
insb
es
out
adc
lods
sub
cwtl
xlat
adc
or
out
or
push
push
out
mov
or
adc
push
push
xchg
lock
shlb
cmp
test
mov
cmpsb
int3
mov
or
xchg
inc
mov
loope
sbb
inc
sar
sub
iret
xor
loop
out
lea
jbe
scas
adc
aad
stos
mov
xor
outsb
or
dec
fwait
mov
ret
mov
jp
gs
pop
xchg
inc
bound
rcrl
cs
pop
cmp
mov
cli
das
loope
clc
dec
imul
cmc
scas
es
aam
popf
mov
jl
mov
clc
mov
push
stos
fimuls
and
add
in
loope
adc
stc
movsl
iret
mov
rol
call
test
jp
dec
mov
pushf
pushl
roll
in
adc
sarb
mov
sub
sub
icebp
in
addr16
dec
mov
ss
movsl
dec
sarl
out
les
out
ret
lcall
sbb
iret
sub
adc
mov
ficomps
inc
dec
sub
mov
add
jnp
sub
popa
sarl
push
stos
push
cmpsl
jnp
sbb
push
inc
clc
popa
inc
lds
movsl
add
push
cli
test
inc
ja
jle
and
addr16
aad
push
push
lock
test
xchg
pop
sti
ret
shrl
mov
mov
stos
mov
cmc
je
pop
nop
scas
dec
lret
int3
cmpsl
mov
cmpsl
xchg
inc
cmpl
nop
dec
cmp
lods
movsl
ljmp
enter
push
les
push
lods
push
or
xchg
out
push
insl
call
outsl
mov
jl
lret
push
xor
cltd
and
xchg
in
dec
inc
jbe
add
loopne
xchg
test
sahf
andl
popf
cmp
push
lret
int3
aaa
jecxz
sarb
ja
inc
push
aam
add
mov
inc
sub
xchg
rorl
adc
sub
aam
and
add
popf
bound
push
insl
push
test
sub
and
pop
sbb
jne
ja
movsl
xor
test
and
xlat
int3
leave
mov
xchg
xchg
fsts
sub
jne
mov
ret
lods
jo
xor
push
jp
push
fidivrs
hlt
jne
pop
es
adc
mov
mov
sub
adc
and
xchg
mov
mov
lret
or
aas
imull
sbb
xor
pop
inc
xor
cmpsl
js
sbb
ret
push
mov
push
bound
nop
out
adc
pushf
mov
aam
inc
ljmp
push
or
xor
pop
lds
xchg
jns
xlat
mov
jge
incb
mov
push
mov
jg
cmp
xor
ds
shlb
mov
jg
dec
insb
cmp
xor
out
loope
add
mov
stos
addb
int3
out
nop
pop
xor
fldenv
ja
aam
dec
out
sub
inc
lahf
push
in
clc
sahf
or
stos
xor
clc
adc
out
or
mov
loop
sub
inc
cmc
push
push
fmull
insb
push
sbb
out
mov
add
test
fsub
lods
lods
hlt
inc
xlat
pop
sub
lcall
or
cmp
mov
xchg
cmpsb
cmc
stc
adc
pusha
test
xchg
and
sub
sub
push
pushl
ja
das
or
test
mov
into
les
mov
mov
jns
inc
ret
cs
push
add
mov
jl
pop
insb
push
or
sub
mov
arpl
mov
dec
inc
jns
stc
aas
or
or
jg
lds
push
sbb
sub
repnz
cmp
ror
inc
xlat
fs
xor
movsb
sub
push
adc
mov
in
movl
scas
mov
mov
push
add
cmp
lods
leave
insl
xchg
sahf
in
bound
jnp
js
es
xchg
arpl
xchg
mov
or
and
mov
syscall
adcl
ljmp
or
push
loope
sbb
sbb
and
cmp
stos
inc
nop
icebp
push
mov
cmp
data16
xchg
mov
test
pop
inc
dec
mov
mov
shlb
lret
jmp
rorb
add
mov
out
sub
pop
frstor
test
addr16
repz
aad
sti
push
xchg
xchg
adc
andl
js
fcmove
sub
out
movsl
push
xchg
aas
and
jle
cltd
xchg
sbb
inc
push
push
mov
bound
testb
and
push
jnp
sub
sbb
mov
pop
xlat
out
dec
cmpb
out
bound
dec
push
lea
scas
mov
std
fisubl
mov
jo
push
repz
jnp
push
into
cmc
xchg
int3
imul
test
lret
pop
jmp
dec
icebp
adc
rorl
mov
adc
ljmp
inc
into
data16
mov
dec
jge
stos
mov
pop
cmp
and
dec
cmp
outsl
lock
adc
sub
dec
cmpsl
mov
sbb
incb
imul
mov
psubusw
cmp
sarb
test
out
jge
push
arpl
dec
mov
xor
cmp
add
data16
ret
jmp
mov
pop
xchg
cltd
orb
out
add
rcr
pop
ret
ja
sub
popa
cs
jo
xor
inc
push
mov
test
and
jne
cmp
popf
sub
and
popa
cmp
add
push
pop
sbb
pop
mov
push
inc
pop
mov
jmp
add
out
xor
scas
call
adc
cmpsl
int3
scas
cmp
mov
add
sbb
xor
pop
mov
sbb
push
dec
cmp
mov
mov
inc
shll
test
mov
xchg
out
sub
push
mov
or
arpl
cs
mov
in
testl
mov
mov
inc
xchg
std
add
in
or
mov
dec
fs
add
movsl
pop
jb
push
ja
scas
jecxz
pop
jne
lods
test
xchg
cmpb
pop
aad
gs
sub
sahf
or
lea
or
ret
inc
out
jnp
adc
cmp
loopne
or
bound
rclb
and
pop
mov
movsb
lds
or
or
or
cmp
push
push
push
mov
loop
pop
test
mov
lods
mov
movsl
testl
mov
adc
or
pushl
push
inc
push
outsl
pushf
orl
mov
pop
lret
inc
std
mov
dec
les
enter
repnz
fsubs
lcall
flds
fcom
cld
mov
jl
cmp
iret
adc
flds
lea
cmp
and
mov
dec
mov
mov
aam
lods
jl
push
loopne
je
add
dec
cmpsb
and
adcb
mov
adc
dec
cmc
in
stos
cmp
nop
lods
xchg
es
and
mov
dec
lret
in
and
cltd
into
fdivr
lret
xchg
jg
clc
push
and
pop
jg
lods
shrb
rcrl
ljmp
das
inc
lds
cmpsl
pushf
aaa
cmp
pop
inc
fwait
or
or
pop
nop
cmp
and
dec
pushf
dec
sub
pcmpgtb
movsl
inc
test
xchg
das
fistl
adc
gs
xchg
cmpsl
pop
mov
testl
rclb
rcrl
xlat
insb
js
jb
mov
ljmp
pop
mov
jmp
inc
xorb
mov
or
fsubrs
mov
add
lahf
add
add
sbb
inc
les
jecxz
dec
int3
add
dec
mov
and
orb
and
jle
xchg
add
mov
push
test
or
mov
xor
pop
push
movb
shl
hlt
cmpsb
rcll
pop
mov
dec
push
jmp
pop
lret
mov
adc
jp
inc
les
jb
cmpsb
rolb
and
sub
xchg
sbb
sbb
xor
xor
adc
in
adc
jecxz
jbe
push
adc
cmp
pusha
out
aam
push
pop
pop
arpl
clc
adc
pop
aam
mov
fbld
pusha
push
and
xor
call
jno
in
jb
cli
adc
inc
int
inc
cmp
shl
ja
movsl
inc
pop
cli
mov
pop
sarl
loop
adc
sub
clts
and
jl
jp
js
xchg
ret
imul
mov
pop
xor
xor
stc
stos
sbb
push
lods
adc
pop
adc
lret
jmp
aad
inc
or
add
mov
hlt
adc
push
push
jmp
roll
and
addl
or
stos
mov
daa
xor
stos
xor
sub
cld
popa
call
shrl
xchg
ret
jno
lock
jb
adc
jmp
or
and
dec
push
dec
and
sbb
add
shlb
popf
leave
push
ja
sub
xchg
cwtl
int3
or
push
mov
pop
sub
int
sbbb
mov
dec
cld
inc
xor
cmc
pusha
pop
push
test
xor
clc
sar
dec
xor
cmp
or
daa
mov
out
mov
dec
pop
popf
nop
xor
mov
shrb
int
sbbl
bound
adc
mov
pop
jnp
xchg
scas
testb
add
adc
mov
icebp
mov
in
fwait
mov
and
mov
jne
lahf
out
lret
lea
xor
insl
add
int3
inc
ja
xchg
adc
data16
cmp
scas
push
pop
aad
stos
loopne
push
stos
ljmp
movl
push
aad
dec
clc
ror
mov
mov
sahf
push
adc
inc
daa
push
push
dec
pop
lea
jmp
stos
push
sbb
movsb
lcall
leave
test
and
in
pop
popa
pop
in
cmpb
sbbb
sbb
testb
mov
push
xchg
mov
shlb
pop
repnz
jno
inc
jmp
jnp
cmpsl
adc
sub
into
mov
imul
mov
dec
adc
xor
cmp
push
mov
test
jp,pn
pushf
pop
call
lods
cld
jmp
inc
sbb
adc
jns
push
mov
and
nop
or
sub
clc
cld
mov
mov
jle
inc
je
xchg
lods
lock
inc
dec
arpl
sub
rcll
jge
inc
je
add
and
pop
xor
out
adc
popf
pop
fildll
out
jne
xor
sbbb
call
sbb
add
sbb
fucomp
add
jecxz
fs
pop
push
mov
lcall
les
pop
xchg
test
outsl
or
push
add
or
push
mov
adc
adc
mov
lea
js
cmp
add
in
and
xor
fsubrs
xchg
sbb
sbb
sub
cltd
in
fst
cmp
dec
push
sbb
cmc
cs
dec
xchg
mov
gs
lods
lods
or
inc
rcr
shrb
lret
subl
adc
mov
and
pop
lret
mov
lret
mov
xchg
jb
pop
or
sub
aad
jae
jbe,pn
inc
jns
dec
adc
mov
push
out
mov
fwait
adc
xchg
les
cmp
arpl
add
scas
and
mov
add
lret
leave
aas
outsb
dec
jg
insl
xor
cmpsl
sub
sbb
pop
pop
mov
cmp
out
sbb
or
stos
inc
push
xchg
out
inc
xchg
pop
mov
pop
lret
out
jbe
mov
nop
in
pop
das
fistpl
dec
mov
arpl
adc
pop
xchg
cmp
xchg
push
push
hlt
sbb
cmc
sub
adc
push
lds
insl
nop
call
in
in
arpl
ljmp
test
test
mov
mov
pop
mov
jecxz
jo
loop
lret
rcr
fnstsw
inc
lods
mov
mov
lcall
shll
scas
fcomp
divb
sbb
xchg
push
lcall
pop
and
xchg
xlat
pop
jnp
mov
lcall
test
stos
in
add
jp
sub
mov
push
push
nop
into
mov
jle
dec
arpl
dec
inc
jmp
pop
mov
enterw
xchg
xor
stos
stc
cmc
jbe
movb
xchg
jl
out
push
adc
jge
cmp
cmp
pushf
and
inc
orl
es
lret
xchg
push
shl
aaa
push
sub
and
jecxz
mov
std
pop
push
call
daa
sub
enter
sub
add
jne
loope
jge
orl
int
xlat
cwtl
inc
add
shll
add
fs
jge
hlt
jbe
mov
daa
dec
outsl
aas
push
push
mov
cmp
daa
fcoms
adc
xchg
in
lret
xor
sbb
scas
in
addb
push
lods
and
add
push
or
test
push
xchg
in
mov
les
lcall
pop
xchg
mov
pop
xor
gs
je
xor
mov
mov
xor
bound
pusha
inc
pop
and
aaa
xchg
pushf
sbb
inc
sbb
out
inc
push
out
cmp
repz
lahf
jns
cli
lea
lahf
sti
dec
in
pop
inc
mov
pop
push
lret
std
dec
rcrb
xor
inc
ljmp
xor
mov
and
clc
les
bswap
mov
cbtw
outsb
and
mull
xchg
aam
repz
inc
sti
cmp
xchg
push
icebp
repnz
cmp
and
xchg
sub
or
ljmp
jl
pop
fnsave
pop
loop
test
and
mov
mov
out
fimull
loop
or
hlt
sti
jecxz
fcom
lret
scas
xchg
sbb
repz
outsb
shrb
mov
clc
mov
rcr
cmpsl
lahf
popf
movsb
sbb
pop
and
clc
push
call
test
pop
pusha
aad
enter
xchg
mov
repnz
das
xchg
lret
inc
xchg
mov
pop
add
jmp
mov
loop
outsl
clc
mov
adc
inc
push
cltd
xor
lret
leave
das
sbb
es
in
ja
xor
add
cs
adc
dec
cltd
cli
lea
xchg
nop
jb
add
lock
inc
xchg
jl
mov
mov
gs
or
js
jno
pop
dec
aas
pop
adc
ret
fimull
dec
jl
aam
cmpb
loopne
in
sub
into
test
lret
fidivl
and
shl
xchg
test
call
push
cmp
and
and
cs
add
lods
inc
mov
push
or
push
jg
fiadds
pop
jmp
mov
in
mov
aam
dec
pusha
sti
data16
mov
cmpsl
ret
xchg
add
jle
pop
sbbl
jns
jne
cli
dec
xor
jns
jg
jno
rcl
dec
mov
fldt
inc
stc
push
mov
push
mov
cwtl
aas
loope
mov
movsb
mov
stc
inc
mov
lcall
jecxz
sub
lcall
push
xchg
add
mov
sub
jae
inc
adc
inc
hlt
xlat
imul
cmpsl
repnz
xor
aam
mov
jmp
in
sbb
jecxz
in
jg
fisubrl
mov
repz
push
lret
and
and
xlat
or
testl
lock
mov
pusha
dec
lret
mov
lret
cmp
xor
pop
rcr
jb
or
std
add
jl
pop
cmc
imul
sub
mov
test
push
jae
adc
stos
pop
ds
aaa
fcmove
shlb
imul
loopne
rclb
pop
es
push
hlt
cli
cmp
cmp
add
push
popa
xchg
mov
adc
push
in
mov
cltd
add
dec
push
push
arpl
jae
push
rclb
push
xchg
lret
push
sbb
xor
lret
aas
sub
test
adc
mov
in
popf
pop
dec
jge
mov
fstpt
mov
sbb
adc
aad
push
sub
sub
xor
jge
lret
cwtl
push
adc
movups
daa
lahf
mov
and
popa
or
or
ret
mov
hlt
inc
push
fbld
cmpsl
pop
mov
pop
pop
jb
adc
jmp
sub
jp
in
ret
out
mov
add
test
out
call
fxch
dec
xchg
add
push
dec
test
pop
push
mov
repnz
cmpsl
jae
xlat
addr16
shrb
xchg
out
mov
pushf
std
add
jb
shlb
mov
dec
imul
push
fcompl
cs
xchg
mov
rcr
les
jp
cmp
sbb
push
mov
sbbb
push
scas
int
dec
mov
and
add
cmovbe
lods
stos
sub
enter
or
add
hlt
dec
mov
call
cmp
ret
xchg
iret
bound
addb
inc
inc
jns
mov
mov
in
jno
int
std
xorb
sti
stc
popf
mov
mov
ss
add
add
cmp
daa
fs
clc
mov
bound
std
scas
adc
adc
icebp
adc
imul
xchg
pop
stc
cmp
in
iret
test
adc
mov
cmp
mov
into
xor
and
cmpsl
sarb
jmp
dec
or
cmc
enter
mov
sbb
je
pusha
adc
addr16
pop
mov
dec
xchg
lods
stos
mov
sub
aam
mov
stc
nop
pushf
pop
daa
add
pusha
xchg
rorb
mov
jae
je
inc
cs
es
daa
fwait
mov
testl
xor
pop
dec
pop
ljmp
lods
xchg
adc
daa
mov
cmp
shlb
roll
cmpsl
sahf
imul
inc
xchg
into
fsqrt
mov
out
lea
mov
inc
cmp
sub
pop
xchg
dec
cmp
sub
sti
test
push
data16
and
mov
pop
stc
leave
cmp
div
jmp
mov
xor
dec
aam
lcall
mov
addr16
inc
cmpsl
adcb
cmp
loopne
jno
or
jo
pop
or
cmp
ret
into
in
and
pushf
stc
iret
push
shl
std
dec
cli
stos
addr16
arpl
xor
dec
add
ljmp
loope
insb
push
divl
pop
sub
dec
cmpsb
jns
cltd
add
jl
ret
std
popf
sbb
ds
dec
addr16
sub
fwait
sub
pop
push
orl
outsb
cmp
mov
jp
dec
aad
ret
aaa
pop
fs
out
push
push
stc
push
and
add
jmp
shll
mov
jne
aaa
inc
orl
loopne
jno
pop
out
popf
sbb
rorb
addr16
scas
sub
ret
or
call
out
pop
orl
xchg
imul
icebp
sub
and
jl
cmp
inc
leave
clc
and
inc
pop
dec
jbe
or
xchg
scas
adc
mov
xlat
stc
bound
jmp
xor
fwait
inc
push
lret
fidivl
cld
fistps
fcomps
loopne
pusha
loopne
nop
in
notb
mov
daa
push
loop
adc
xchg
mov
pop
stos
jge
adcl
push
mov
scas
inc
mov
int
push
bound
add
mov
loopne
cmpsb
and
nop
outsb
jmp
daa
out
add
jbe
xchg
fdivp
xor
ret
sti
adcl
test
adc
into
pop
mov
push
aam
adc
xchg
into
into
mov
mov
cmp
cmc
repz
xor
push
mov
std
cmp
sahf
iret
sub
or
adc
or
mov
in
movsb
lea
xchg
fwait
loopne
adc
dec
rorb
ja
sbb
enter
scas
jne
mov
mov
sbb
cmp
ds
out
fwait
pop
push
xor
int
lahf
dec
pusha
inc
ret
nop
mov
xor
jl
push
and
and
addr16
mov
pop
add
shl
adc
pop
inc
xor
sti
pushf
cmp
cmpsl
lea
dec
jo
ljmp
jg
lea
jne
sub
add
inc
xchg
aam
pop
pop
movsb
popf
xchg
lret
in
je
cmpsl
mov
popf
jmp
je
dec
mov
or
outsl
pop
mov
fidivrs
or
bound
repz
int3
push
and
pushf
mov
inc
das
xchg
or
cmp
rol
cmpsl
das
or
jae
repz
push
mov
ljmp
mov
in
vpshab
lods
cwtl
dec
xor
movsl
mov
push
xchg
mov
xor
not
cmp
sbb
fmull
in
cmc
push
fdivr
stc
aaa
mov
push
add
in
cmpsl
xchg
jae
dec
rcrl
int
dec
cmc
call
rep
cmp
jp
ret
sbb
mov
fimuls
insb
ret
sti
and
fistps
arpl
out
push
lret
sahf
pop
shl
rclb
dec
nop
cwtl
pusha
idivl
inc
or
xor
mov
mov
mov
and
nop
cs
rcrl
outsl
out
dec
cmpsl
push
cmp
les
in
test
jl
jmp
jmp
mov
mov
or
mov
repnz
add
sub
outsb
decl
pop
pop
jp,pn
dec
out
or
and
cmp
jp
leave
clc
push
adc
pop
cmpsl
mov
mov
adc
pop
sbb
jecxz
mov
inc
cmp
inc
gs
and
adc
xchg
mov
mov
lock
xchg
hlt
mov
movsl
pop
xor
cmp
adcl
push
int
cmp
jo
sarb
outsb
lret
push
jge
ret
push
sub
popf
lahf
jnp
movsb
idivb
leave
movsl
out
jbe
or
or
hlt
icebp
and
push
movsb
call
xchg
mov
cmp
in
jecxz
adc
es
pop
jge
xchg
add
lds
negb
clc
cmp
inc
xor
sbb
mov
cwtl
shll
cmpsl
aas
fcmovb
xor
mov
inc
inc
and
cmp
xchg
jp
js
adc
lcall
sbb
add
loopne
fisubrs
notb
inc
xor
xorb
jne
test
loopne
mov
out
rcr
jne
out
dec
dec
sub
hlt
subl
and
add
fcomp
out
cltd
push
mov
sbb
or
movsl
or
mov
test
jp
repnz
test
sbb
xchg
enter
pop
mov
lds
data16
aad
xor
and
sbb
sti
insb
jno
in
sbb
push
sub
sti
fldcw
imul
jmp
push
into
pop
shl
sbb
int
cli
fstps
xchg
add
push
fistps
xor
outsb
adc
cs
adc
lods
cltd
mov
dec
scas
in
int3
das
lock
mov
sbb
ficompl
fildll
sbbl
test
jb
mov
mov
cmp
pushf
test
dec
xor
popf
fldcw
movsb
pop
sbb
pop
imul
fildl
pop
lods
jp
lods
insb
loope
stc
xorb
lret
xrelease
mov
push
test
in
xchg
pushf
push
in
loop
mov
mov
inc
fld1
push
aas
cmp
into
push
in
shl
or
cld
dec
pusha
adc
or
pop
into
adcb
data16
dec
pop
dec
fbstp
lds
jne
xchg
lcall
ljmp
add
jns
fdivs
inc
and
imul
dec
add
dec
popf
jns
fs
das
loope
push
jnp
pushf
in
mov
jnp
xchg
sti
xor
fnstcw
jg
pushf
and
add
jnp
adc
call
sti
cmpsb
sbb
xorl
lcall
repz
sbb
movsl
xchg
scas
jbe
push
and
mov
dec
pusha
das
lret
mov
inc
jo
cltd
ret
dec
popf
xchg
mov
sbb
aad
out
mov
loope
xor
xchg
mov
aas
out
sbb
sub
dec
xchg
cmp
insl
out
mov
insb
sahf
repnz
adc
jnp
lcall
movb
sbb
mov
in
ljmp
mov
cli
jecxz
xchg
jo
pop
lock
mov
xchg
and
and
inc
sub
icebp
lcall
lret
neg
pop
inc
jmp
add
xor
inc
test
leave
mov
stos
ds
xor
aad
sti
jb
lods
cli
cltd
dec
cli
sbb
mov
cmp
movsb
ret
int
cmp
lahf
jecxz
mov
icebp
mov
insb
aam
mov
roll
fnstenv
std
pop
les
test
xor
inc
mov
jg
aad
test
add
sbb
xor
outsb
lock
push
adc
jbe
add
and
subl
xor
loopne
xchg
test
sub
movsl
xchg
xor
imul
or
push
cmp
scas
fidivs
dec
pop
push
jb
addr16
test
mov
and
sub
in
daa
add
inc
out
testb
mov
out
adc
imul
xchg
pop
push
lcall
sti
mov
aad
test
mov
push
cld
inc
lock
or
imul
lret
add
aam
sub
scas
jnp
add
mov
pop
sysret
cmp
repnz
jmp
jge
notl
std
push
xchg
sbb
mov
ds
push
cmp
xchg
insl
js
imul
cmp
jle
push
add
fwait
test
sbb
scas
ficoms
mov
ret
sbb
rclb
sub
and
mov
cmc
in
insl
ret
jbe
mov
call
xchg
add
jno
add
push
mov
lret
sbb
arpl
shl
sub
fnstcw
and
cmp
loop
ljmp
scas
pop
mov
or
daa
jo
shll
add
in
lcall
jae
int3
outsl
pusha
mov
cmp
pop
and
dec
xchg
mov
push
push
shrl
mov
aaa
sub
ret
mov
ds
inc
dec
repz
xor
dec
testb
mov
sub
sub
cmp
push
sbb
jne
das
orl
mov
xchg
in
int3
in
das
outsl
mov
addl
into
and
or
jno
outsl
mov
notb
mov
adc
sbb
sbb
sti
pop
jno
adc
fs
push
les
mov
xor
push
es
pusha
adc
push
sbb
aad
cmp
insb
sbb
xor
jge
xlat
add
lahf
push
daa
add
and
push
lock
cwtl
sbb
and
and
fucomip
cli
or
or
aad
xchg
mov
push
outsl
jecxz
int
jbe
test
adc
cmp
sub
dec
lret
int3
xor
int
dec
xor
and
pop
lcall
cmp
xchg
and
pushf
jo
lds
mov
or
xorb
cltd
add
das
sbb
pop
out
cmc
push
or
mov
scas
cmc
lcall
lea
iret
pop
lea
jle
sbb
jmp
in
lods
cs
mov
in
fistl
cmp
push
mov
mov
movsl
cmp
sbb
fldt
jecxz
sbb
sahf
mov
test
inc
cmp
flds
push
aas
ror
jo
std
cmp
popa
add
push
mov
pop
cld
adc
xchg
bound
fwait
or
pusha
and
test
jmp
lods
xchg
dec
dec
out
jmp
data16
loopw
cld
stos
imull
mov
std
outsb
push
or
xor
dec
dec
cmp
inc
arpl
sub
jns
cltd
inc
pop
loope
mov
xchg
les
stos
inc
adc
mov
pushf
add
pop
repz
mov
sbb
movsl
and
pmaddwd
rorl
add
pop
stc
pop
jb
test
or
inc
pop
push
divb
push
xchg
loope
fisttps
xor
xor
inc
fistps
jecxz
aas
pop
add
lods
cmpsl
inc
movsb
lahf
ret
pop
decb
mov
mov
xchg
cld
fadds
mov
mov
dec
lret
daa
jo
sbb
cmp
add
cmp
iret
testl
cmc
out
ret
mov
pushf
add
inc
shlb
jb
mov
push
ret
int
sbb
adc
out
inc
lods
leave
sbb
pop
and
mov
jg
dec
js
hlt
push
out
loop
mov
pop
adc
mov
adc
test
mov
inc
mov
jb
test
stc
and
sbb
push
fwait
insl
add
xchg
xchg
or
and
inc
add
dec
out
cmp
aam
or
outsb
xlat
sub
aam
mov
mov
rcrl
data16
add
mov
adc
dec
add
sbb
pop
imul
sbb
loop
sti
arpl
add
cmp
aam
mov
xor
sbb
call
lds
add
enter
imul
sahf
fisttpl
dec
pop
fdivrs
jp
sub
push
xchg
mov
fsubrl
xor
lods
fdiv
jle
sub
mov
and
andl
xchg
inc
mov
scas
mov
xor
push
xor
cmc
movsb
iret
xor
push
xor
insb
sar
out
adc
adc
dec
add
xchg
outsl
add
fcmovne
pop
add
dec
xchg
or
pop
icebp
pushf
jnp
adc
adc
cmpsl
testb
or
js
add
stc
lret
lcall
dec
fs
test
bound
sbb
mov
mov
dec
scas
and
aas
adcl
jmp
mov
call
lods
mov
mov
roll
mov
jecxz
push
dec
adc
push
cmp
lock
into
jno
repz
push
mov
push
inc
pushf
xor
scas
sub
subb
sbb
push
dec
cmp
mov
jo
and
mov
push
lret
in
mov
dec
movsb
mov
sbb
push
mov
lea
das
add
popf
scas
and
movsl
xorl
mov
clc
sbb
in
jbe
ret
loopne
imul
or
cmc
mov
xor
nop
bound
push
lods
mov
jbe
jo
add
ja
pop
sub
xor
fdivrl
test
pushf
fildll
popa
jl
js
sbb
movsb
xorl
mov
dec
add
lock
or
xchg
in
lret
cmp
adc
jl
out
lret
xor
filds
cmp
js
inc
and
fsubl
clc
mov
aas
sub
mov
adc
mov
sub
movsb
pop
in
pop
data16
aam
pop
leave
cmp
dec
adc
loop
aad
movl
push
into
mov
pop
cmp
pop
inc
addr16
scas
add
sbb
hlt
std
mov
sub
xor
scas
ja
push
xor
stos
xor
xor
add
or
std
into
stos
push
out
push
test
adc
mov
popf
mov
mov
adc
mov
xor
stos
idivb
dec
cmpsl
idivb
mov
push
stc
roll
shlb
sar
repz
jmp
scas
xchg
push
inc
cltd
xchg
call
and
xlat
and
jns
and
jge
loop
xchg
and
les
pop
into
dec
aas
lods
jae
stos
sti
dec
ret
into
in
or
sbb
fildl
or
fisubrl
push
jle
sahf
push
jmp
test
fs
xchg
std
loopne
cltd
lret
push
int3
jmp
cli
pop
xor
adc
mov
clc
mov
hlt
imul
das
aas
lret
sub
aas
add
in
dec
lock
jbe
push
jle
add
lea
push
cmpsl
xlat
jp
sbb
pop
or
inc
mulb
popa
adc
push
mov
insl
mov
add
or
shll
cmpsl
push
pop
mov
mov
inc
imul
mov
inc
repnz
push
nop
cld
std
xor
fisubrs
and
hlt
push
mov
mov
mov
fnstsw
movl
or
mov
mov
fisttpll
dec
pop
lods
enter
xchg
sub
xchg
or
mov
outsl
jbe
loop
pop
repz
xor
mov
arpl
jbe
pop
push
int3
xchg
lret
adc
adc
mov
sbb
sub
lcall
push
ficompl
inc
dec
pop
or
push
pop
add
adc
out
leave
adc
sbb
stos
inc
rcrl
test
sbb
rolb
imul
pushf
mov
mulb
in
out
dec
sbb
jmp
pop
adc
out
imul
icebp
mov
in
mov
add
cmp
xchg
pop
lea
addr16
jae
lahf
adc
loope
jp
out
repnz
xor
jg
cmp
cs
cmp
xor
inc
rorb
mov
inc
repnz
push
pop
out
or
push
leave
dec
mov
in
ficoml
cmp
push
pusha
call
stos
fidivs
insl
xor
les
ror
cmp
sub
shll
mov
repz
in
addr16
mov
dec
jae
sahf
mov
pop
sbb
sub
cmpl
mov
xchg
testb
jns
sub
adc
insl
sbb
push
pushl
push
out
xchg
jnp
cli
sahf
loopne
sti
inc
cld
lea
outsl
mov
dec
into
dec
cmp
ret
rcl
dec
shrl
dec
das
sub
cmc
or
xchg
in
inc
add
in
cmc
lock
xchg
in
flds
pop
clc
mov
ret
nop
lods
fninit
inc
mov
sarl
push
in
subl
cld
sbb
and
mov
dec
pop
or
jg
inc
nop
into
int3
aas
hlt
jmp
sarl
stc
pusha
cli
add
gs
mov
stos
mov
sbb
jnp
movsb
pop
mov
cmp
imul
das
arpl
loope
leave
or
das
outsb
fiadds
testb
les
ljmp
cmp
jbe
pop
mov
hlt
enter
pusha
clc
leave
popa
mov
daa
xchg
out
pushf
cs
pop
mov
mov
mov
add
daa
xchg
push
addl
xor
or
jg
xchg
test
icebp
loope
popf
stos
in
ljmpw
shlb
pop
or
pop
popa
incb
lret
mov
pop
add
xor
pop
mov
xlat
lds
mov
sbb
xor
les
pushf
fidivrl
sbb
mov
jle
jno
mov
test
adc
je
out
xchg
sbb
gs
out
shrb
push
loop
lret
lret
cmp
pop
testl
cs
and
sbb
adc
push
rdtsc
sbb
push
mov
inc
inc
jecxz
pop
dec
ret
cli
arpl
mov
sbb
shlb
adc
maxps
xlat
inc
iret
fst
fwait
sub
inc
mov
stos
adc
mov
cltd
adc
nop
cli
out
repnz
out
and
and
sahf
outsb
xchg
pop
les
pop
mov
jbe
shrb
mov
mov
pop
mov
insb
add
dec
pop
ror
jne
inc
loop
imul
or
pop
int3
loopne
add
jmp
stos
mov
mov
shlb
xlat
add
mov
in
call
pushf
jg
and
aas
inc
or
dec
xorl
out
sbb
out
inc
int3
repz
cmp
std
xchg
adc
add
in
shll
loopne
mov
iret
cmp
sbb
ja
out
sbb
aam
pop
das
jmp
fbstp
imull
sbb
sbb
call
insl
into
or
lret
std
dec
dec
and
add
hlt
or
pop
inc
rcrl
sbb
inc
fidivrs
xchg
pop
test
dec
and
xchg
les
jb
stos
shll
mov
in
cmp
dec
out
in
fldt
xor
and
cltd
jb
loop
push
mov
movl
jae
gs
pop
sub
data16
into
dec
push
cld
jne
movsl
aaa
dec
pop
inc
lock
stos
cmp
push
or
sub
jge
into
xor
rorl
xor
aas
std
test
adc
xor
fdivrs
xorl
fcoms
sbb
dec
xchg
stc
xchg
sub
fildll
xchg
popa
outsl
jecxz
push
cmp
pop
adc
lcall
enterw
or
aaa
cs
loopne
fisttpl
and
xchg
cltd
rorl
dec
sbb
add
xchg
repz
sub
scas
sahf
lea
int3
inc
in
dec
pop
or
jno
and
std
or
cmc
jo
pop
jnp
sbb
aas
iret
add
adc
sub
sub
jne
mov
inc
rclb
mov
leave
cmc
mov
mov
mov
xor
shrb
xor
xchg
pop
aam
test
and
out
pop
sub
cmovge
cwtl
outsl
mov
std
and
xchg
mov
in
mov
iret
mov
scas
pop
and
jb
xor
int
stos
dec
cmp
je
mov
pop
in
mov
rcrb
push
pop
adc
jbe
add
xchg
enter
jmp
repz
jno
mov
mov
pusha
xor
bound
addr16
and
fwait
rcrl
inc
jecxz
dec
subb
movsb
mov
mov
cmp
jge
out
mov
sub
inc
aam
outsl
fistl
idivb
popl
in
pop
inc
inc
std
and
jecxz
mov
sbb
mov
test
dec
jge
into
sub
inc
int3
sub
sbb
push
sub
sbb
ljmp
push
icebp
lods
dec
out
mov
nop
adc
mov
mov
sub
in
jae
mov
jne
xor
or
arpl
gs
cmp
mov
jae
xchg
mov
pop
lock
dec
test
test
mov
insb
or
dec
nop
lock
movsl
jle
sbb
sub
leave
sub
xchg
lea
lods
push
repnz
fs
sbb
stc
mov
and
jnp
add
cli
xlat
sbb
mov
jl
pop
jmp
push
lcall
lret
or
xchg
cmp
adc
or
mov
sbb
xor
mov
loop
adc
inc
sbb
and
dec
rorb
in
pop
dec
sbb
js
enter
xchg
test
fcompl
cmp
xchg
mov
xchg
xor
mov
jae
xor
xchg
popf
pop
psadbw
inc
into
cmp
xchg
lock
scas
adc
xchg
inc
sub
js
adc
mov
fstpt
inc
imul
aas
jge
pop
push
movsl
aaa
pop
sbb
rorb
out
push
les
mov
fstps
cld
sbb
inc
jmp
cmp
iret
ljmp
adc
xchg
pop
lods
pushf
outsl
fs
enter
xor
xchg
push
out
rol
pop
clc
in
jns
mov
inc
push
testb
xor
mov
sub
out
mov
pop
hlt
jnp
pop
daa
ret
stos
mov
fistps
jl
cmpsl
sbbl
cmp
mov
inc
enter
mov
imull
mov
xor
sub
cmp
jmp
push
cmp
dec
into
xchg
dec
orl
sub
in
sbbl
fildl
or
add
int3
jle
rorl
pop
rolb
mov
addl
test
mov
mov
add
inc
jne
or
out
dec
pusha
sahf
lea
fisubs
je
out
mov
push
loopne
xchg
xchg
cmc
jae
xchg
out
aaa
add
enter
les
sarb
xor
add
cwtl
cmp
sar
or
cmp
xor
push
dec
push
cli
daa
jae
xchg
mov
outsl
and
sbb
js
inc
mov
pop
sub
cmc
repz
mov
mov
cmp
in
cmc
nop
mov
aas
inc
cli
ficoms
dec
pusha
xor
push
out
mov
dec
mov
hlt
in
push
mov
mov
xor
fistpll
cmpsb
cmc
clc
xchg
repz
add
ds
iret
scas
imul
jmp
cmp
je
inc
sub
xchg
jle
xchg
mov
push
out
rorl
mov
sub
fmul
mov
mov
jae
pop
adc
int
jge
repz
clc
test
push
inc
pop
cmpsb
adc
inc
into
int3
inc
shll
xchg
sbb
sbb
mov
idivb
test
cmpsl
stos
lret
push
xorb
pushf
inc
insl
imul
lret
adc
inc
sbb
out
mov
insb
xlat
popa
pusha
insl
inc
pop
adcb
dec
dec
add
add
push
pop
inc
stos
fstpt
ds
push
clc
bound
js
cld
or
or
wbinvd
pop
or
fs
cmp
xor
inc
mov
loop
std
es
nop
cmpsl
cwtl
out
pop
pop
jne
jno
stos
and
out
inc
fptan
mov
mov
sbb
or
xchg
sub
jns
sahf
sub
fiadds
cmp
fbld
jg
add
jae
jns
xchg
adc
pop
mov
aam
jl
lods
dec
test
mov
fs
jne
push
out
adc
jo
sbb
xchg
imul
push
sub
ljmp
jecxz
decl
push
in
dec
sbb
jno
dec
fwait
shld
xchg
sbb
pop
ja
mov
pop
mov
and
pop
imul
dec
push
iret
inc
rcl
test
movsl
push
inc
das
xchg
cmp
loope
sub
rcrb
sub
mov
mov
cmp
test
ret
cwtl
sarl
push
repnz
push
push
data16
mov
mov
inc
cmp
fldt
in
dec
mov
icebp
mov
sub
mov
dec
test
outsb
lahf
sbb
jle
in
test
dec
mov
das
or
xchg
hlt
dec
movsl
sub
jg
lds
mov
shrb
jl
lret
cld
mov
ss
pop
add
push
scas
inc
fidivrl
sahf
imul
popa
mov
push
scas
mov
cwtl
push
cld
cs
xor
add
loopne
cs
mov
or
dec
jecxz
lods
dec
or
push
sub
jo
test
jle
inc
loope
xlat
lcall
loop
ret
or
jmp
adc
dec
inc
mov
and
mov
data16
mov
adc
jae
je
xor
mov
movsb
ret
mov
and
iret
aaa
or
cmpl
movsb
inc
roll
int
sub
sub
cmpsb
push
dec
mov
dec
arpl
fwait
pop
sbb
lret
xchg
insb
cltd
dec
push
jecxz
mov
cmp
sub
mov
aad
dec
aad
jo
jae
out
inc
scas
cmp
push
outsb
xchg
jmp
adc
rolb
test
stos
pop
loope
sti
lods
and
add
pop
sahf
inc
adc
jne
and
dec
xchg
sbb
push
loope
cmp
jp
gs
push
cltd
notl
cmp
fisttpll
and
pop
inc
sbb
in
stos
out
mov
add
xchg
mov
mov
loope
mov
adc
cmp
pushf
xchg
js
arpl
fisttpl
xor
add
push
sub
outsl
and
adc
enter
or
dec
and
jl
enter
jbe
pop
ja
in
loopne
pop
push
cmpsl
das
adc
push
dec
les
faddl
in
sbbl
xchg
inc
stc
rcrl
les
dec
fisttpll
in
mov
ja
popa
bound
lock
je
cmpb
orl
jb
fisubrl
into
aam
dec
and
ljmp
xor
fimull
movsb
and
cmpsb
jno
adc
js
dec
outsb
je
sbbb
call
sbb
sub
add
bound
ret
xchg
inc
add
xchg
jo
and
iret
popf
ds
cltd
ficomps
int3
pop
arpl
adc
or
jnp
pop
dec
xchg
test
cmp
mul
sti
addr16
aam
sti
leave
stc
and
outsb
sbb
lods
into
xchg
loope
push
fbld
popf
mov
mov
sbb
sbb
frstor
mov
sbb
hlt
xchg
cwtl
sti
mov
or
push
stos
sarl
ret
push
xchg
test
inc
repz
test
add
out
lret
aas
xor
roll
out
int
mov
and
sub
test
mov
jno
insl
or
lock
mov
jns
ret
xchg
inc
out
loope
inc
mov
lahf
mov
and
push
test
jecxz
nop
fidivrs
adc
pop
cmp
add
test
jl
scas
inc
inc
adc
mov
and
pop
fwait
xor
into
andb
sbb
test
dec
lock
xchg
enter
insl
inc
and
pop
push
in
je
add
xor
cmp
arpl
dec
cmp
sahf
add
sbb
pop
push
pop
mov
cmp
out
adc
push
sbb
and
sub
sub
dec
test
sub
sbb
sub
test
jns
mov
xor
inc
ret
and
mov
shrl
pop
mov
fcom
pop
data16
xchg
ret
std
out
sbb
outsl
jl
imul
dec
ret
xor
fistl
jmp
pop
sti
adc
mov
in
test
andl
test
test
sbbl
and
jbe
mov
add
dec
int3
and
aad
popf
pop
popa
mov
rorl
imul
clc
xor
cmpsb
dec
lahf
push
rcr
sbb
pop
lahf
lock
cmp
popa
lock
roll
movsb
jne
push
outsl
in
jmp
test
lcall
imul
jecxz
int
mov
sub
es
mov
int3
push
xchg
out
loopne
xchg
pop
mov
dec
pop
jge
inc
test
es
lahf
xchg
xchg
insl
outsl
bound
inc
and
sbb
mov
out
ret
sub
inc
and
sub
les
imul
hlt
and
sbb
mov
mov
repnz
outsb
lahf
or
mov
pop
lret
sahf
sbb
rcr
or
fstps
js
cmpsb
std
dec
add
stc
nop
cmpl
push
ret
push
dec
test
sbb
cmpsb
int
mov
aam
movsl
dec
jg
xchg
subl
outsb
sub
popl
stc
icebp
xor
jecxz
jg
shlb
sub
sbb
sbb
in
push
in
xchg
sti
xor
sub
arpl
scas
outsl
cmc
fstpt
clc
les
push
dec
aas
lcall
sarl
pop
or
and
out
xchg
fnstenv
and
or
ljmp
rcl
jl
pop
mov
cld
adc
fistl
ja
xchg
cmpsl
or
sub
popa
icebp
imul
sbb
out
lahf
jno
movsl
xor
jge
sbbb
insl
leave
xor
xchg
add
push
out
out
adc
js
into
inc
or
movsb
mov
sbb
sti
push
mov
add
popa
mov
mov
sub
jne
or
pop
es
xchg
and
add
mov
leave
test
inc
push
sti
dec
add
in
inc
test
jle
mov
fdivl
sub
rorb
push
cli
test
sbb
mov
test
cmpsl
add
movsb
mov
jb
scas
pop
lret
clc
jb
sbb
sub
call
lahf
jae
subb
lds
test
ljmp
cli
mov
lretw
jg
add
cmp
mov
push
push
push
sbb
xor
fisubrs
fcmove
das
ret
or
js
pushf
mov
mov
mov
cmp
jae
dec
cmpsb
test
fsubrp
ret
inc
xor
popf
stos
xchg
lcall
xchg
aam
cs
aam
loop
mov
mov
es
jecxz
mov
mov
outsl
inc
jno
inc
cmp
mov
andl
pop
pop
mov
mov
jbe
or
aam
fcmovne
and
mov
pusha
iret
mov
jbe
fidivrs
mov
leave
xchg
clc
cli
mov
adc
pusha
and
ret
loop
cmp
outsb
stos
dec
xor
jp
mov
add
mov
rcll
and
fsub
or
dec
sbb
cld
sbb
out
add
repz
pop
insb
and
xor
dec
stos
push
mov
push
cmpl
outsl
lods
sahf
push
jmp
xchg
sub
rclb
repnz
into
mov
jo
xchg
stc
mov
sbb
ret
and
sbb
sub
test
xor
mov
movsb
cli
jle
pop
movb
jl
push
cmp
push
sub
imul
xor
adc
cld
flds
mov
inc
push
xchg
mov
xchg
mov
fisttps
in
adc
jns
jmp
loop
mov
movsb
cmpsl
cmp
ret
vmovd
sti
test
pop
std
push
fcomps
jns
outsl
push
popf
dec
out
adc
inc
fildll
scas
inc
divl
loop
js
mov
shll
cmpsl
mov
xor
inc
in
cmp
mov
xor
or
pop
mov
sti
lret
iret
sbb
sarb
scas
jp
out
add
stc
lret
rcll
jnp
push
test
and
test
xchg
data16
paddb
xchg
cltd
inc
jp
inc
addl
es
inc
jg
mov
dec
dec
leave
out
mov
hlt
out
mov
scas
fld
test
stos
pop
jnp
xchg
aas
ret
xor
cmp
mov
mov
lea
test
mov
je
and
cmpsb
je
cmp
push
in
inc
loop
cltd
and
sbb
mov
jp
mov
fisttpll
jnp
arpl
pop
mov
pop
lcall
lcall
loopne
and
repnz
aaa
repz
xlat
and
or
cmp
or
pop
cs
xorl
in
rorb
cmp
sub
xchg
pop
fdivrl
mov
lcall
mov
jg
mov
js
jmp
arpl
jle
int3
pop
inc
repz
insl
sarl
sub
push
pop
inc
sub
cmp
out
cmc
sub
or
sbb
rolb
subb
mov
cmc
and
sbb
sahf
rcrl
jae
mov
stos
lret
ljmp
sbbl
fwait
push
mov
xchg
and
cs
int
and
jmp
mov
or
fmuls
int3
push
mov
leave
adc
in
or
sub
ljmp
fldt
adc
mov
add
inc
cld
inc
fwait
cld
xchg
cmp
sarb
push
ds
insb
cmc
inc
in
es
daa
or
into
mov
scas
sbb
jo
xor
insb
inc
addr16
dec
roll
add
dec
pop
in
xchg
sbb
xor
pushw
xrstors
sbb
dec
int
in
rcrb
dec
push
sub
cwtl
mov
cmp
sahf
loop
mov
aad
add
dec
add
fsts
sub
adc
sbb
sbb
in
sbb
mov
cmc
sahf
sti
in
dec
push
and
or
cwtl
repnz
in
std
inc
movsl
repnz
and
mov
es
sbb
cltd
cltd
aam
mov
cld
jmp
rcr
imul
bnd
cmp
rcll
repz
and
inc
call
inc
lods
mov
push
pop
xchg
xchg
mov
cmc
addr16
imul
pop
add
or
mov
cli
in
imul
dec
arpl
cmp
popf
jle
lret
and
or
xor
mov
mov
jmp
in
das
leave
mov
or
popf
cmp
imul
push
xor
mov
shl
fcmovne
mov
movsb
mov
mov
jo
cld
dec
ljmp
inc
cld
add
jae
ss
jbe
out
insl
out
add
stc
cmpsl
dec
popf
ds
pop
loop
adc
test
jle
ss
push
je
fs
out
adc
pusha
sub
pop
or
inc
in
repz
call
daa
pusha
mov
push
dec
leave
hlt
mov
ja
lea
ret
fildl
mov
push
movl
jae
xchg
icebp
pop
aaa
fiadds
lret
inc
jo
pop
loope
stos
mov
fimuls
mov
mov
sbbl
and
sbb
add
stos
ret
inc
dec
dec
movsl
xchg
iret
scas
repz
cmp
or
xchg
lock
or
call
mov
daa
out
xor
adc
mov
aas
int
dec
pop
push
out
sbb
inc
mov
loope
in
iret
into
xchg
and
push
jno
mov
jecxz
mov
daa
fucom
bound
fld1
lods
ljmp
xchg
nop
mov
mov
lea
pop
dec
pop
mov
subl
jo
jbe
test
or
inc
scas
cmp
dec
popf
cmp
pop
scas
test
xchg
sti
dec
inc
fnstcw
adc
adc
and
cmpl
sbb
in
or
mov
into
ss
cmp
hlt
push
dec
and
jle
test
dec
ja
sbb
outsl
popf
inc
adc
or
in
inc
adcb
lods
cmp
push
sbb
or
iret
in
jp
xchg
idiv
adc
cmpsl
mov
in
pop
out
jnp
cmpsl
lret
push
or
and
std
popf
mov
stos
cmp
cmpsl
rorb
icebp
mov
shrl
pusha
js
inc
pop
pop
ss
push
jecxz
cmp
lret
pop
mov
dec
xor
cld
das
xchg
pop
sbb
push
outsl
or
add
push
rorb
mov
pop
jmp
ds
mov
dec
ret
push
je
push
fcmovbe
inc
jmp
adc
pop
cs
in
push
adc
pusha
ja
or
inc
icebp
add
mov
stc
fisubs
mov
pop
and
fucomi
pop
iret
cmpb
pop
dec
inc
mov
in
ljmp
iret
sarb
leave
iret
pop
into
lock
xchg
lahf
mov
test
adc
bound
xor
jns
add
lods
gs
add
jo
or
push
cmp
jae
dec
test
sub
jo
je
pop
test
cmp
pop
sbb
iret
dec
jns
insb
cmp
mov
fsub
in
sbb
xor
inc
cs
adcb
dec
imul
xor
cmp
inc
outsb
mov
mov
add
cmp
loop
jecxz
out
sub
pop
and
aam
or
jp
arpl
sarb
lods
pop
nop
fcomps
push
stc
hlt
cmpsl
dec
out
fisttps
inc
aad
arpl
in
push
je
jns
sbb
out
test
sahf
addr16
jle
adc
push
mov
out
lahf
aas
lahf
aad
inc
mov
enter
mov
adc
xchg
sub
sbb
inc
push
hlt
je
adc
cmpsl
cmpsb
jl
sub
xor
popa
fs
fildl
mov
sarl
int
popa
adc
js
and
mov
add
sub
scas
test
add
or
ret
or
mov
rcrb
inc
addl
adc
lcall
ret
jmp
adc
popf
jecxz
add
fcmovnu
lds
orb
or
in
inc
fwait
cmp
aaa
mov
lcall
add
add
xor
mov
cmp
sub
push
pop
fisubrl
cmc
rclb
clc
ret
push
inc
das
hlt
adc
jb
mov
pop
ds
rclb
dec
sub
sub
stos
push
sbb
mov
cwtl
adc
mov
push
mov
mov
push
xor
push
aas
popf
jbe
gs
sbb
push
jno
ret
jge
aas
movsb
and
lock
test
repz
bound
scas
mov
dec
sbb
push
arpl
xchg
in
xor
shrb
dec
fwait
testl
pusha
cmc
jecxz
lods
pop
dec
add
lods
arpl
in
int3
outsb
xchg
sbb
add
out
inc
mov
add
and
sub
loop
insb
int
repnz
sub
xchg
les
cmc
cmp
hlt
pop
adc
inc
sbb
fcoml
iret
mov
mov
sub
pop
adc
fiaddl
xor
aaa
pop
lods
xor
loope
cmpsb
or
inc
subb
mov
sbb
jecxz
clc
jnp
lods
mov
test
mov
dec
out
pop
repnz
adc
lcall
mov
xor
inc
cmp
btc
sub
xchg
imul
test
outsb
xchg
adc
push
fisttpll
lret
adc
sbb
jecxz
and
jl
adc
sub
icebp
xchg
and
mov
cwtl
cmpsl
xchg
imul
or
sub
arpl
rcrl
dec
mov
decb
daa
mov
inc
in
xor
movsb
inc
jmp
xor
add
roll
jns
cmp
pop
push
push
hlt
les
ret
dec
pop
xor
push
jb
dec
and
adc
out
adc
pop
rolb
js
movsl
mov
or
and
xor
scas
pop
shll
and
jp
clc
add
mov
xchg
jbe
out
sub
push
push
add
inc
fxch
faddl
push
outsl
daa
mov
fwait
or
scas
test
adc
incl
pusha
jo
jno
je
daa
nop
cmp
and
daa
sbb
inc
and
and
rorb
xlat
sub
fisubl
xchg
dec
stos
in
mov
add
jno
pop
mov
mov
push
outsb
cltd
rorl
pop
fiaddl
lock
or
mov
jle
adc
sub
bound
filds
inc
int3
addl
in
mov
int
or
lret
mov
leave
and
xor
cmpsl
mov
cmpsb
sti
adc
out
ret
test
pop
mov
scas
rcrb
xor
insl
out
fnstsw
jne
in
pop
dec
loop
push
test
cld
mov
daa
arpl
fcoms
jle
loopne
and
je
or
sbb
mov
dec
in
fildl
cmp
add
sub
mov
cmp
loop
addr16
andb
ret
inc
and
jg
pop
mov
cli
add
lock
add
inc
xor
lods
cmp
lahf
in
scas
data16
shr
insl
cld
xchg
stos
fdivr
and
lea
adc
into
das
push
out
aad
call
mov
ljmp
and
psllq
subl
ja
scas
in
aas
lcall
test
jo
mov
popa
repz
adc
aad
pop
cltd
lahf
xorl
pusha
add
gs
mov
lea
jnp
js
hlt
push
sbb
pop
xchg
in
or
sbb
je
jae
ss
mov
adc
lcall
call
mov
add
mov
dec
mov
not
out
jge
cmpsb
inc
add
add
mov
sub
pop
xor
pop
jmp
stos
cli
pop
jl
pushf
ljmp
pusha
jno
dec
sub
or
sbb
stc
lock
ficoml
push
jnp
out
mov
loopne,pn
cmp
je
call
xor
adc
lock
pop
and
jle
adc
imull
inc
addr16
test
js
xchg
xchg
add
fldl
adc
dec
aad
pop
push
push
sbb
sahf
das
mov
aam
leave
sub
in
cmp
lds
add
fucom
mov
lods
ret
jle
sub
adc
jne
pushf
sbb
inc
sbb
push
stos
sbb
adc
ds
adc
cmpsl
adc
dec
sub
cmp
add
push
out
add
mov
and
rcrl
inc
cli
or
add
push
cmp
push
push
cs
and
jo
in
fsts
jp
ljmp
dec
ja
bnd
mov
xor
mov
mov
or
lahf
ss
add
insl
cmpsl
mov
jle
mov
mov
repz
nop
lods
and
cmp
mov
clc
mov
push
fs
pop
ret
es
movsl
roll
sub
popf
add
mov
sti
outsl
mov
fldcw
sub
dec
xor
or
pop
and
cs
out
test
leave
adc
jno
mov
lahf
pop
aam
sbb
xchg
xchg
pop
push
and
inc
test
aad
push
mov
lret
mov
adc
js
mov
inc
inc
ja
addr16
shll
fisubrs
cld
adc
bound
xor
insl
imul
xchg
lret
xor
lret
adc
fwait
adc
jp
test
into
in
into
popa
push
lods
sbb
add
fs
jae
je
sub
push
insl
movsb
mov
add
into
pop
xchg
dec
or
aad
int3
dec
or
fsubrl
aam
cmp
mov
aam
out
pop
enter
icebp
es
sahf
daa
cmpsb
in
imul
arpl
jle
leave
cltd
add
fcomps
xlat
adc
in
push
insb
cli
bound
inc
cs
mov
insl
mov
xchg
and
xor
jmp
cs
push
imul
in
ret
sbbl
aam
lock
outsb
shr
pop
jge
mov
js
push
cmp
sub
pushf
push
pop
xchg
and
test
mov
pop
inc
xchg
inc
cli
testb
dec
int3
test
jbe
adc
aad
lret
cmp
int3
mov
mov
pop
sbb
jnp
fwait
or
enter
and
movsb
das
inc
sti
in
xchg
mov
cmp
mov
lds
push
mov
and
push
insl
dec
sarl
subl
push
ds
sbb
sbb
fmulp
cmp
stc
or
inc
sub
and
dec
pop
data16
mov
inc
js
fiadds
dec
sub
test
mov
scas
add
jg
fmull
mov
push
stos
decb
push
sarb
stos
or
mov
jmp
test
dec
dec
or
cltd
cmp
leave
push
fsts
aam
jo
jb
inc
cmp
sub
dec
enter
leave
loop
outsl
testl
jnp
mov
nop
push
pop
push
jb
mov
mov
in
fnstsw
sahf
addl
cmc
lds
cld
out
fidivl
cmp
pop
jmp
cmp
sub
adc
lock
roll
push
adc
cwtl
aaa
ficompl
xlat
mov
test
inc
in
aas
shrl
push
cmp
int3
pop
mov
rol
dec
dec
inc
testb
inc
push
cld
flds
dec
cmp
add
mov
mov
movsl
rep
out
mov
cmpl
mov
repnz
mov
mov
cmp
int3
sbb
inc
dec
and
push
leave
dec
push
fcoms
mov
mov
fsubs
stc
and
jl
jb
jg
pop
lcall
xor
ret
movl
mov
jo
hlt
ret
mov
pop
jo
outsb
sub
lret
dec
ficompl
jo
arpl
sub
lcall
repnz
sbb
cmp
mov
mov
imul
push
push
fdivl
cmc
lret
nop
dec
push
cs
xor
adc
movb
adc
push
xchg
mov
fisubl
sub
idivl
aas
pop
int
jno
jbe
mov
or
cmpsl
fld
dec
int3
xor
loope
pop
pop
test
inc
pop
dec
push
lods
ret
adc
cmpsl
pop
adc
out
sti
xchg
jle
movsl
cmp
repnz
cmp
repnz
or
push
adc
jmp
adc
notb
orl
enter
xchg
mov
cs
imul
add
shll
pop
xor
xchg
cmpl
sbb
lahf
fildl
cmp
rclb
sbb
adc
test
inc
sbb
and
cmp
cld
xor
enter
inc
fisubrs
popa
out
cpuid
cli
xor
addr16
lret
into
cltd
ret
mov
sub
sub
stc
bnd
xlat
or
push
sarl
cmp
in
imul
aas
out
sbb
jne
test
inc
test
imul
add
push
icebp
lcall
pushf
mov
pop
pop
fisttpl
and
in
ret
mov
pop
int3
outsb
mov
daa
and
push
adc
xabort
cmpsl
mov
dec
das
imul
xor
imul
cmp
stc
ss
cmp
lds
pop
mov
push
dec
enter
enter
loope
std
cmpsl
lahf
sbb
fldcw
iret
pop
cmp
xlat
nop
call
dec
xlat
mov
or
pop
mov
adc
clc
mov
or
arpl
loope
jbe
test
lock
imul
fwait
mov
aaa
pusha
out
aad
aad
mov
stos
jle
fnstenv
pop
sbb
mov
sub
adc
cltd
inc
into
or
popa
mov
lret
xchg
cltd
mov
cmpsl
fistpl
sub
outsl
push
loop
fwait
sub
popa
sbb
mov
ret
ficompl
and
scas
ds
es
rcll
mov
imul
lahf
adc
push
jmp
cmpsb
fildll
sub
inc
subl
mov
iret
flds
jae
lock
pop
fisttps
mov
lret
adc
push
ret
add
outsl
mov
lcall
push
and
icebp
sub
out
mov
dec
out
cmp
mov
negl
fistpl
clc
cmp
cs
shlb
mov
sub
and
ljmp
and
aad
sahf
cmp
pop
icebp
arpl
mov
mov
cmp
jno
jp
repnz
lods
pop
mov
cmpsb
sbb
movhps
dec
mov
xchg
arpl
or
loop,pn
lret
and
sbb
aam
popf
call
out
cli
ret
fcomps
test
xchg
pop
pop
les
inc
sar
xchg
sub
ljmp
imul
cmpsb
xchg
shll
scas
orl
jne
js
push
xchg
jne
lret
mov
lods
xor
leave
pop
aam
mov
enter
add
outsl
add
iret
mov
rcr
adc
scas
das
loopne
push
add
pusha
sahf
jp
mov
mov
mov
outsb
sbb
cltd
mov
fs
enter
pop
jno
pop
fsubl
fcoml
pop
sbbb
inc
cmpsb
adc
outsl
shl
shll
cmp
movsl
pusha
je
repz
stos
jbe
lock
dec
shl
scas
cli
fs
cli
mov
xlat
leave
out
xor
mov
mov
cmc
xlat
or
jns
inc
ds
inc
jp
icebp
inc
jbe
sub
iret
mov
pop
pushf
sbb
or
test
ret
sbb
popf
mov
insb
mov
cmpsb
dec
js
or
mov
bound
movsl
loope
xchg
out
push
bound
sub
jb
lods
xorl
repnz
adc
cmpsl
testl
test
out
and
sbb
mov
and
mov
in
cs
and
adc
adc
fwait
roll
fdivr
and
mov
int3
mov
xchg
jp
test
push
jl
or
mov
leave
dec
xchg
sub
nop
push
outsb
enter
sbb
mov
call
mov
push
mov
mov
dec
adc
int
rcrb
cmp
pop
lret
pop
sbb
sahf
movsl
mov
inc
mov
je
shll
jmp
mov
pop
jo
out
enter
cmp
sbb
push
dec
mov
push
sbb
rcrl
stc
xchg
push
mov
jbe
jg
or
pop
pop
xor
push
popf
or
jbe
jo
inc
dec
push
xor
dec
or
pop
pop
loop
push
inc
pop
in
xor
inc
push
cmpsb
idivl
dec
and
or
ud1
inc
and
pop
movsl
ja
icebp
xorb
cmpsl
ljmp
jno
iret
sbb
push
loopne
mov
addr16
xorl
ucomiss
cmp
pop
fucomip
arpl
mov
jnp
push
cld
pop
jmp
andl
cld
xor
fidivrs
add
rclb
mov
sbb
sub
cmpsl
jmp
cmpsb
mov
stos
jae
mov
ret
cli
mov
test
inc
lods
std
pop
xor
clc
stos
in
sub
insl
push
dec
sbb
ljmp
arpl
scas
xchg
cwtl
xor
cmp
inc
call
cmc
cmp
xlat
lret
jecxz
out
sbb
push
outsb
repz
outsb
stos
jb
ds
xchg
mov
loop
xor
add
in
adcl
add
imul
repz
and
ja
clc
mov
mov
subl
pop
sub
jmp
fcoms
pop
in
lea
loopne
ret
mov
insl
nop
jmp
movsb
gs
int
mov
ja
adc
sbb
jae
sarb
push
pop
mov
lds
bound
pop
test
xchg
mov
fmull
out
stos
imul
add
push
inc
inc
sbb
pminub
int3
xor
shr
cld
inc
xchg
pop
aam
xor
mov
lret
repnz
push
sbb
lock
shlb
jecxz
pusha
pop
fxch
orl
shll
add
or
sbb
int
adc
loope
xchg
add
inc
xorl
aaa
dec
fdivp
sub
jle
xchg
ds
pop
cmp
jno
ret
aas
inc
jge
mov
sbb
adc
mov
sarb
dec
or
subb
dec
xchg
pop
sbb
cltd
pushl
cli
out
int3
movl
xchg
cltd
push
test
repz
test
and
cmp
and
xchg
push
ja
push
cwtl
dec
or
pop
jge
add
pop
fsubrp
aas
sub
add
call
dec
add
or
stos
cld
or
cs
cld
sbb
jbe
xchg
aas
sti
addr16
dec
xor
xlat
mov
call
and
mov
repz
inc
ja
lahf
push
and
xlat
mov
outsb
insl
jge
loope
cmc
dec
andb
push
push
or
cs
int3
and
mov
insb
stc
loop
aad
ret
rcr
in
jnp
pop
sbb
fdivl
mov
sti
lcall
add
out
pop
testl
dec
push
fs
inc
sti
int3
fs
ja
into
pop
insb
xor
add
enter
jno
popa
cs
cs
add
or
call
jnp
mov
mov
jae
push
rclb
shl
cmp
xchg
jo
jb
or
ds
mov
out
imul
outsb
lret
ss
push
xor
in
cmp
fucomp
faddl
mov
test
and
fs
cmp
fwait
dec
scas
pushf
decl
jne
andl
imul
es
jnp
ljmp
pop
imul
rcll
sub
mov
adc
push
push
stc
jmp
xor
test
lock
and
and
fs
data16
or
lea
jno
loopne
lods
loopne
fistpll
cmpsb
scas
dec
pushf
add
pop
sahf
push
stos
cld
ja
aas
ds
mov
fs
mov
mov
jg
cmp
idivl
dec
mov
ds
rcll
fldt
jno
sbb
adc
adc
sub
nop
xchg
pushf
icebp
mov
xchg
add
mov
jecxz
nop
add
int3
sbb
call
aad
je
outsl
loope
adc
push
sbb
sub
cmp
mov
inc
stos
mov
mov
shlb
inc
xchg
je
hlt
or
loopne
mov
decb
or
sub
out
xchg
push
mov
push
out
mov
fldl
or
push
pop
test
inc
or
lahf
mov
leave
lds
ja
rcrb
cli
into
sub
imul
sbb
adcb
test
push
mov
xor
mov
dec
out
dec
shrl
push
stos
add
je
das
cli
fistpl
mov
and
mov
push
outsb
and
xchg
ljmp
xchg
ds
mov
push
jne
pop
test
outsl
jmp
pop
imul
movhlps
xor
inc
mov
inc
outsb
xor
in
call
or
movsb
rorl
mov
aad
pop
aaa
fidivs
fiadds
push
repnz
loope
aad
lods
pop
add
int3
inc
ret
xor
scas
lods
out
ja
lock
mov
sub
cmp
movsl
ljmp
jp
dec
jge
mov
shlb
lret
rol
mov
into
xor
fimuls
pop
push
cli
jbe
cwtl
inc
or
cmp
cmp
int3
mov
and
pop
jecxz
out
cmp
pop
jmp
cs
mov
leavew
mov
cmp
lock
push
jns
xchg
sub
dec
mov
and
jo
imul
push
cmp
and
int3
stc
mov
lods
cwtl
inc
fucomip
cmp
loope
xchg
push
cmp
add
mov
inc
jp
test
sahf
mov
or
andl
sub
add
dec
push
jb
adc
addr16
push
mov
xchg
mov
insl
lcall
jp
adc
dec
cmpsb
cmpsl
xchg
rorb
addr16
jb
test
sub
scas
cmp
pop
outsl
push
mov
inc
pop
mull
out
pop
test
and
xchg
dec
pop
fsubl
mov
xor
xor
xadd
pop
add
mov
push
loope
dec
push
mov
jge
dec
pusha
dec
mov
xchg
adc
insb
ja
push
inc
ja
xchg
sbb
aam
out
fnsave
fptan
jl
hlt
popa
mov
push
sub
aad
stos
stos
es
pop
lret
mov
xchg
and
jo
sbb
rolb
jb
loop
cmpsb
lcall
imul
enter
cmp
mov
jle
jno
out
push
xchg
inc
dec
mov
dec
pop
cmp
adc
rolb
dec
and
ret
sub
push
mov
dec
jno
xor
jge
inc
addr16
int
hlt
mov
lea
add
sub
das
arpl
hlt
jbe
mov
mov
and
ss
xchg
xorl
push
cmpsl
pop
or
dec
jg
cs
adc
inc
stc
jae
sbb
sbb
cwtl
mov
pop
lds
sub
cs
pushl
xor
and
push
not
loop
lods
mov
sub
add
pop
cld
popa
mov
loop
stos
rcr
fcmovnbe
xchg
shlb
pop
pushf
test
lahf
arpl
popa
stos
fdivp
mov
sahf
jo
iret
fbstp
push
shlb
shl
out
and
pop
stos
cmpb
call
imul
sbb
stos
in
das
pop
mov
aas
and
mov
ds
addr16
cmpsl
daa
xor
ss
xchg
or
je
mov
or
inc
inc
and
or
xchg
mov
pushf
adcb
adc
in
sub
push
pop
fs
and
xchg
dec
xlat
pop
jno
inc
aam
cwtl
loope
pop
aad
ss
add
mov
mov
cmp
cmp
lea
imul
fisubrs
sbb
sahf
inc
leave
inc
mov
push
mov
add
mov
xchg
xor
mov
loope
adc
or
jl
mov
xchg
ljmp
mov
xchg
add
stc
ds
inc
lret
xchg
sbb
es
arpl
jae
and
sub
mov
adc
jle
ret
adc
daa
inc
xlat
int
or
notl
lods
inc
adc
xor
push
cmp
inc
ret
mov
sub
jns
idiv
push
sbb
orb
fimuls
jb
adc
or
xchg
add
push
mov
mov
cmp
inc
lock
push
jne
addr16
inc
add
cmp
jecxz
sub
inc
mov
pop
mov
jno
hlt
ds
subb
push
mov
cli
sbb
mov
in
add
aas
test
cwtl
cwtl
stc
and
xor
mov
sti
shrb
sti
clc
and
dec
dec
push
ljmp
add
imul
xchg
cmp
jmp
ja
mov
fcmovu
add
mov
arpl
insl
sbb
fs
pop
push
or
sub
dec
daa
xchg
and
jnp
cmpsb
into
pop
ds
sbb
jg
rorl
std
loope
sub
mov
imul
mov
out
mov
jle
push
xchg
outsb
mov
call
cli
push
jmp
mov
ss
aaa
or
inc
stc
mov
sbb
or
iret
adc
out
sub
and
aad
lret
sub
decb
addb
cmpsb
ss
stos
xor
inc
ret
fwait
nop
xchg
lahf
pop
xchg
xchg
and
jmp
push
rclb
fwait
movsl
push
push
pushf
shll
jl
rorl
in
add
rorl
stos
popf
mov
push
popf
aam
add
inc
xchg
add
push
pop
mov
lock
jbe
imul
mov
leave
into
pop
push
xchg
or
insl
mov
pop
cmp
imull
and
in
mov
xchg
jl
jbe
mov
push
mov
loop
sti
fisubrs
das
xchg
bswap
xor
push
inc
jl
mov
adc
je
test
cltd
ficoms
dec
cltd
xor
movsb
inc
dec
pop
insl
cmpsb
fnstenv
aas
mov
pop
cmpsl
sahf
incb
outsl
loope
movsb
lahf
test
mov
push
or
sub
fs
das
int3
popf
and
jle
push
arpl
aaa
push
cld
pop
push
lcall
nop
sbb
adc
mov
xchg
lret
pop
mov
bound
fiaddl
jne
jnp
mov
daa
pop
movb
fmulp
test
jns
lea
add
push
fmul
push
daa
popf
inc
adc
test
es
push
pop
fdivr
adc
jmp
add
dec
into
inc
inc
fcmovbe
aas
xor
icebp
lods
dec
lods
jmp
inc
lret
cmpsl
fisttps
leave
out
push
mov
gs
fwait
mov
cmp
sub
xchg
loop
nop
outsl
subb
adc
dec
out
fldcw
pop
dec
clc
push
mov
in
dec
xchg
pop
aad
cmp
adc
sbb
setp
lock
ljmp
out
int
repnz
xchg
rcrl
mov
add
dec
xor
inc
popa
stos
dec
dec
xchg
shlb
aam
cs
jb
sbb
mov
outsl
sarb
fcmovu
jno
arpl
enter
mov
stc
andl
and
out
popa
adc
pop
sub
addr16
pop
roll
fimull
push
inc
or
loop
repnz
fs
push
lds
fadds
add
imul
jne
and
sbb
lds
or
mov
fimull
lret
mov
aad
ss
jmp
mov
lds
cmp
xchg
push
test
nop
add
pop
arpl
adc
xor
jno
inc
mov
add
adc
fs
jne
test
int3
call
out
into
outsb
push
fstpt
or
pushf
dec
pop
or
nop
clc
pop
jle
out
xor
int3
pop
in
gs
pop
dec
xor
rcrb
repz
aas
rorb
loope
out
mov
sbb
dec
out
pop
ret
xchg
sub
xchg
scas
sbb
inc
addr16
xchg
ret
sbb
mov
xor
and
imul
stos
rolb
or
lea
je
addr16
and
inc
add
add
stos
xor
test
addb
xlat
adc
add
or
sbbl
cwtl
test
test
lret
rorb
arpl
pop
adc
inc
data16
insb
sub
xor
push
jl
rcll
xchg
mov
jp
add
push
inc
test
pop
cmp
jb
das
adc
push
pop
and
jecxz
test
enter
lret
das
or
je
out
outsl
ljmp
jb
nop
adc
add
push
ds
lcall
add
adc
dec
popa
xchg
sahf
insl
sub
mov
bound
inc
scas
cmc
mov
or
mulps
pusha
mov
lock
inc
ret
adcb
jb
pop
or
out
data16
sbb
xor
pop
mov
repnz
jb
mov
xchg
aad
lea
mov
mov
jne
mov
loopne
iret
popa
fcmovnbe
out
mov
xor
pusha
sub
scas
mov
ss
adc
mov
mov
push
mov
rorb
sbb
adc
and
ss
fistps
notl
xchg
data16
mov
and
dec
push
inc
jmp
rcll
dec
pop
mov
cmpsl
sbb
sbb
and
cld
popl
bound
shlb
cmp
test
and
out
xchg
dec
mov
dec
nop
adcb
mov
mov
jp
xor
dec
shr
lock
je
sbb
or
fstpl
ljmp
scas
aad
bound
loope
sub
mov
outsb
ja
and
dec
dec
dec
and
mov
or
xchg
fld
out
loope
mov
cli
mov
mov
sub
inc
inc
add
out
mov
loope
ret
xorl
test
cmc
mov
dec
aas
adc
mov
xchg
cmc
xchg
out
dec
repz
pop
and
stos
pop
int
dec
push
adc
ja
push
lret
push
sub
cmp
cltd
inc
int3
cs
push
jmp
dec
insb
insb
dec
das
pop
movq
in
ret
repz
loope
lds
jle
cli
inc
jmp
add
das
xor
ds
inc
adc
incl
push
cld
stos
out
jo
aas
out
std
mov
out
or
je
jns
pop
stos
or
sub
mov
cmp
leave
je
cmc
push
in
push
dec
repz
addr16
cld
xor
idivl
nop
faddl
cwtl
or
aaa
mov
dec
jg
push
xor
icebp
pop
or
xchg
push
icebp
inc
mov
mov
cltd
lods
mov
popa
call
cltd
sub
mov
xor
in
cwtl
push
pusha
pop
adc
js
out
arpl
mull
fcoml
les
test
cli
loopne
movntsd
das
push
mov
cmp
mov
pop
push
cmp
aad
out
cmp
push
or
mov
fnsave
jne
mul
sub
mov
xor
mov
fsts
fsubs
pop
enter
adc
andl
out
sarb
lahf
jp
xchg
int
icebp
pop
dec
fbld
outsb
inc
dec
jl
ljmp
sbbb
outsb
xor
mov
addb
lods
mov
scas
sbb
insb
rcl
clc
icebp
mov
rolb
aad
jae
and
dec
inc
add
cmpsl
mov
int
cmp
mov
ljmp
cmp
add
and
ret
mov
sub
loope
mov
push
stos
mov
addr16
and
add
or
rcl
mov
outsl
jle
insl
pop
insl
aaa
or
cmc
adc
inc
mov
sub
dec
jb
lret
rolb
out
stos
push
data16
cmpb
xor
xor
es
shl
out
jge
push
sbb
jbe
push
add
push
je
out
sub
test
daa
jge
fst
popf
mov
mov
arpl
adc
adc
nop
push
gs
bswap
aaa
sub
adc
fmul
add
out
int
sbb
mov
mov
cmp
das
xchg
dec
adc
pop
rcr
sbb
ja
xchg
mov
push
push
iret
sbb
push
dec
dec
or
dec
add
dec
dec
add
xchg
pusha
fmul
push
cmp
rcl
in
mov
out
push
cmp
mov
dec
sbb
ljmp
addb
pop
xor
inc
cli
jno
jb
mov
or
stos
stos
xor
push
ret
es
mov
addr16
mov
cmp
mov
adc
fwait
loopne
cmp
movsb
in
lods
cmpsl
insb
mov
dec
or
add
push
stc
cmpsl
daa
xor
lock
insb
mov
nop
cmpl
aad
pop
and
int3
enter
jo
jle
mov
sti
mov
mov
in
xorl
out
adc
pop
into
inc
add
cmp
pop
lret
js
cwtl
scas
dec
and
add
dec
into
mov
xchg
sub
dec
xor
bound
and
xchg
mov
aad
je
mov
fs
daa
mov
adc
outsb
xor
lods
inc
call
xlat
pop
cmpsb
mov
add
dec
mov
sbb
mov
insl
stos
sub
mov
stos
insb
sarb
shll
cmpsb
movsb
mov
popa
xor
mov
lods
lcall
push
jno
xlat
daa
lahf
imulb
loopne
push
fdivs
sub
ret
ss
jp
aaa
adcb
lds
pop
mov
xor
test
push
mov
adc
shlb
idivb
xor
clc
or
adc
addl
int
push
ret
adc
mov
sub
in
mov
and
xor
add
sbb
sahf
mov
jb
pushf
and
scas
orb
scas
sub
lret
ljmp
bnd
sti
das
pop
or
out
sub
fwait
or
xchg
xchg
sbb
pop
sub
cmp
sub
cmp
mov
dec
lods
stos
inc
sti
arpl
mov
push
cmpsb
mov
addr16
jnp
loopne
in
mov
sahf
dec
imul
loop
sbb
mov
mov
ret
ljmp
movsb
in
sahf
mov
mov
or
pop
cmc
xchg
adc
adc
lahf
push
loope
cs
adc
aad
xchg
cmc
xor
addb
lock
pop
or
and
je
push
xor
cmp
jb
inc
pusha
inc
in
dec
insl
jmp
mov
jae
jmp
iret
push
mov
inc
sbb
mov
call
in
hlt
pushf
sbb
sahf
mov
pop
stos
inc
mov
add
fsubrl
idiv
jge
push
gs
or
cmp
les
or
out
fiadds
mov
mov
enter
or
movsl
ljmp
jns
cld
addl
adc
cmp
stc
ficoms
arpl
push
jns
jo
insb
mov
cmp
sub
in
inc
jnp
xchg
mov
add
cmp
sub
pop
enter
jle
mov
mov
or
mov
xor
sbb
pop
sub
testl
pop
in
xchg
inc
in
test
xor
add
xlat
sbb
cmp
sub
adc
add
xchg
jo
xchg
data16
xor
int3
rcll
xlat
xchg
jl
loope
push
sti
insb
into
jmp
xchg
cs
inc
loope
mov
loopne
fsubrl
fstps
mov
leave
shrl
clc
ds
int3
and
and
pop
jle
and
adcb
outsl
cmc
daa
inc
mull
inc
cmpsb
std
jnp
lret
push
dec
jae
ds
mov
fnstenv
inc
pop
aam
or
dec
jge
adc
mov
dec
mov
mov
js
icebp
dec
adc
ret
and
hlt
out
hlt
js
lock
xchg
arpl
scas
lock
inc
aam
xchg
xchg
sbb
ret
out
pop
and
out
sub
rolb
dec
pushl
mov
jne
data16
mov
push
test
sub
iret
dec
aad
and
mov
mov
pop
or
mov
arpl
movsl
mov
xor
pop
iret
js
inc
gs
sub
add
push
push
ja
jo
insb
mov
mov
add
fnsave
lods
cltd
js
jecxz
adc
iret
dec
xchg
out
je
lret
sub
add
aam
jne
cmp
mov
rol
vmwrite
je
jo
xor
xorl
pusha
mov
fwait
test
adc
enter
jmp
imul
les
mov
mov
sbb
mov
test
repnz
pop
sahf
test
dec
iret
xor
cmpsb
sbb
add
mov
frstor
add
cmp
sub
and
repz
dec
out
jmp
pop
cmp
sahf
aaa
shlb
imul
xchg
jae
add
inc
loope
lods
inc
adc
xor
and
mov
call
dec
sub
jnp
out
movsb
call
stc
push
dec
ja
add
xor
mov
cmp
jae
sbb
push
cmovae
cmp
and
test
sub
pop
icebp
dec
mov
lock
jb
pusha
cmp
lret
lods
jle
in
xchg
stos
jge
pop
adc
stos
clc
lahf
jecxz
mov
lods
iret
mov
pop
mov
xchg
xchg
loope
stc
cmpl
xor
fistl
mov
cld
movsl
roll
mov
ds
pop
test
ljmp
out
dec
sbb
push
mov
dec
les
sar
jmp
mov
insb
into
das
jge
icebp
cmp
xor
int3
mov
jecxz
adc
mov
iret
add
in
push
sti
inc
dec
cmp
sbb
sub
arpl
push
cmp
xrelease
lock
movsl
pop
scas
shll
mov
push
push
jb
ja
notb
gs
or
xchg
adc
stos
dec
sub
rcrl
popa
or
adc
gs
inc
mov
int
int3
popf
jne
lahf
or
stc
add
xchg
push
and
xchg
leave
fsubp
push
add
sub
cmp
repz
fdivrl
push
push
push
out
pop
leave
xchg
mov
xchg
jg
dec
rcr
lods
pop
pop
sbb
movsb
push
xchg
cmp
out
fcoms
mov
mov
inc
push
xor
pop
push
mov
sarl
push
push
movsl
jo
or
leave
decl
cmp
bound
prefetch
sbb
adc
cmp
les
aam
hlt
or
jle
mov
adc
xchg
imul
jl
popa
push
jae
xor
cmpl
push
pusha
sub
inc
inc
sub
jge
lods
mov
mov
pushf
test
pop
jle
push
pop
je
cmc
jge
negb
push
jl
lock
in
outsb
lahf
test
jge
mov
lea
ret
pop
jg
clc
std
pop
scas
outsb
xor
hlt
pusha
push
int
mov
add
cmp
push
fnstenv
neg
insl
shlb
mov
cld
jne
jne
dec
ret
xchg
mov
lods
mov
inc
insb
insb
int3
cwtl
cmp
mov
mov
push
cmp
scas
mov
hlt
dec
cmpsl
jnp
sub
aad
ds
imul
or
add
dec
fstpt
mov
jmp
xlat
fisubrs
push
in
and
cmpsl
sub
cmp
fs
fistpll
sbb
mov
push
and
les
push
popf
mov
jnp
fsubrs
test
sub
dec
js
in
sbb
int3
cmp
jle
jp
movb
dec
fdivrl
sbb
cmc
sbb
aas
and
int
rcrl
sub
push
ficompl
push
pushf
aas
adc
fdivrl
fcmovb
je
and
or
jmp
mov
inc
idivb
xor
testb
pop
cld
in
das
pop
cs
out
cmp
inc
les
mov
sbb
cmp
push
jbe
je
jbe
test
iret
ud0
sbb
dec
jb
jb
das
mov
adc
mov
cli
lret
mov
test
add
aad
push
adc
mov
xchg
jecxz
roll
inc
xchg
jg
push
pop
fistpl
xchg
mov
cmp
pop
jbe
xor
jnp
data16
adc
xchg
xor
lret
xchg
cmp
bound
out
fistl
imul
aas
pop
mov
dec
rclb
xchg
pop
push
cmp
mov
mov
lock
jbe
iret
stos
mov
daa
mov
pusha
rclb
pusha
xor
pop
and
addr16
xor
dec
hlt
mov
jmp
push
loop
insl
push
aaa
sbb
or
popf
or
jbe
lea
push
lea
out
pop
in
fwait
dec
shlb
outsl
in
jmp
gs
stc
mov
xchg
pop
loopne
cmp
mov
dec
adcb
test
in
shlb
jne
cmp
roll
cltd
data16
cli
sahf
sbb
adc
mov
mov
fldt
pop
mov
pop
fistpl
mov
mov
pop
js
sbb
add
ficoml
fdivl
or
insl
fsts
mov
inc
mov
lea
movsb
in
fbstp
xor
add
movsl
push
and
ss
mov
mov
rorl
or
int3
mov
cmp
xchg
stc
pop
jmp
ja
lcall
aam
or
out
loope
out
std
xlat
xor
aad
fnstsw
inc
mov
jae
inc
xchg
and
rcrb
or
nop
aam
movsl
std
cs
sub
test
mov
pop
xchg
in
adc
nop
jno
cmp
ljmp
mov
add
push
bound
arpl
xlat
cs
shll
nop
mov
fnstenv
les
jae
test
mov
stos
jmp
js
bound
add
adc
std
test
loop
lret
lds
mov
jecxz
jle
cmc
push
xchg
inc
or
or
das
or
sub
pop
pop
lds
sub
rcrl
sub
sahf
sub
loope
cld
and
xor
sbb
pop
imul
fstpl
adc
sti
push
sub
sub
mov
arpl
xor
adc
stos
and
adc
inc
fptan
or
cmp
repnz
and
stos
xchg
pop
imul
push
cmp
jnp
mov
push
adc
jge
loope
add
popa
mov
or
mov
sbb
mov
lock
insb
pop
dec
mov
sbb
movsl
into
add
and
ret
roll
out
xlat
inc
loop
jg
int
lret
sti
ja
dec
lds
dec
push
fsubs
insl
jo
xchg
lahf
mov
xchg
pushf
and
les
fwait
and
or
imul
lcall
dec
push
xchg
push
jb
out
frstor
inc
out
xor
add
mov
sbb
inc
xchg
call
movsl
xor
pop
jbe
or
enter
xlat
add
or
sub
int3
gs
sbbb
adcb
push
jmp
nop
inc
dec
sbb
ds
sub
imul
loop
cmp
cmp
mov
adc
mov
inc
andl
sub
mov
in
xchg
es
xor
das
mov
clc
push
adc
fisttpl
push
or
mov
mov
adc
mov
fwait
xchg
sbb
pop
call
inc
push
mov
xchg
jp
int
push
out
inc
cmpsl
cmpl
dec
sub
mov
daa
hlt
aaa
aas
xchg
lds
add
pusha
ficompl
loope,pn
or
mov
lods
gs
sbb
jno
aam
pusha
push
jbe
test
pusha
mov
jbe
jle
aaa
cmpsb
pusha
nop
lods
sbb
loopne
sub
mov
data16
mov
je
mov
pop
std
mov
sti
and
jge
insl
sbb
movsl
mov
jg
lret
cmpsl
add
cmp
xor
adc
push
mul
loope
lock
or
push
in
in
and
mov
lcall
inc
dec
pop
imul
pushf
jge
mov
cmp
add
rcll
mov
jo
sbbb
dec
inc
or
push
or
pextrw
push
mov
loope
ret
nop
adcb
cmpsl
push
jl
add
lds
dec
inc
inc
and
push
jo
fst
jp
jnp
data16
pop
xchg
mov
xor
cmp
mov
insb
mov
into
cld
cltd
jbe
and
pop
aam
xor
mov
lds
loope
adc
or
mov
arpl
aas
sbb
and
mov
rclb
pop
mov
ret
jnp
fsubr
dec
xchg
xchg
sbb
int3
mov
xchg
adc
popf
arpl
xchg
fisubrs
inc
sbb
insb
lahf
pop
mov
xchg
mov
adc
jecxz
push
in
lods
jne
rorb
cmpsl
cmp
movsb
rcr
movsb
adc
outsb
gs
jb
int3
xlat
xchg
fdivrs
addr16
fimull
mov
and
in
fiadds
aad
shl
loope
mov
rcrl
out
popf
movsl
cld
inc
les
nop
mov
pushf
pushw
mov
jmp
mov
ret
ss
mov
mov
pushf
pop
clc
mov
js
outsb
jo
out
push
dec
mov
test
or
xorl
pusha
pop
roll
fdivrs
out
mov
inc
out
ja
stc
xchg
add
jecxz
pop
sbb
jecxz
mov
xchg
sbb
icebp
push
mov
fistpll
jbe
add
sbb
in
xchg
movsb
push
cwtl
add
mov
sbb
and
inc
adc
mov
inc
mov
xchg
xor
data16
push
sub
add
sub
adc
push
pop
pushf
bound
sub
xor
mov
dec
dec
data16
sbb
sub
in
out
jg
or
mov
mov
cltd
dec
lret
inc
stos
ret
shr
sub
or
cli
sahf
xchg
push
lea
jae
add
imul
push
rcll
adc
mov
repnz
add
repz
add
pop
sahf
xchg
add
addr16
pop
fnstcw
and
dec
mov
jne
jg
fistpl
push
fisubs
mov
arpl
shr
stos
out
aas
cli
aam
push
repz
lods
jb
push
mov
or
icebp
rcr
jo
insb
xchg
lret
xchg
out
cmp
and
cwtl
cmpsl
add
add
lea
scas
xlat
popa
out
jno
jnp
shlb
mov
pop
out
int3
jl
iret
arpl
sbb
jo
mov
ret
or
dec
aam
inc
int3
xlat
jb
cmp
pop
mov
cmp
push
mov
imul
rclb
mov
lea
andl
add
ss
sub
xchg
mov
sub
xchg
popf
lret
jbe
push
lahf
stc
out
push
ficomps
scas
jp
clc
push
xor
in
out
jno
cmpsl
cli
xchg
dec
rolb
xor
adc
dec
pop
mov
lcall
mov
data16
cld
stos
mov
roll
jmp
cs
jne
xor
mov
repnz
out
pusha
jl
mov
adc
cmp
shll
or
nop
jle
sets
fsts
adc
xchg
xchg
movsl
loope
mov
jbe
out
mov
jo
push
lock
fisubrs
xor
shll
shrl
ret
inc
xchg
add
jno
cmp
push
push
test
sub
jle
lods
out
or
mov
enter
inc
mov
push
call
or
jmp
in
in
sbb
cmpsl
and
scas
dec
mov
out
or
mov
test
pop
dec
inc
js
sbb
xor
lods
jne
sub
add
test
sbb
dec
aam
jns
shl
cmpsb
enter
iret
clc
leave
pop
mov
out
xchg
sub
insb
jb
lcall
data16
shll
mov
push
sbb
aad
fcmovbe
test
les
rcrb
icebp
ret
inc
imul
mov
xchg
dec
in
scas
adc
pop
pop
ret
faddp
cmpl
mov
arpl
or
xchg
cmp
in
shl
pushf
cli
sbb
outsb
and
test
lcall
scas
mov
and
decl
outsl
jge
loop
add
xchg
lcall
mov
addb
rcrb
sbb
fldenv
cld
cmp
jae
mov
std
les
dec
pop
add
cmc
xchg
in
daa
push
inc
daa
out
stos
cmp
je
dec
cmp
iret
xlat
lods
lods
aam
mov
xor
aaa
daa
or
push
sbb
in
fisubs
pushf
jle
cli
out
pusha
leave
mov
test
test
mov
in
mov
cwtl
push
xchg
pop
add
jl
sbb
cld
cmpsl
cwtl
lcall
and
subl
fstl
loopne
push
push
aaa
ret
icebp
inc
or
shlb
mov
jno
cmp
mov
and
add
mov
jmp
ss
daa
insl
jo
cmp
adc
mov
dec
add
pop
push
dec
mov
push
mov
cmpsb
add
sub
sbb
adc
adc
aaa
shll
insl
xchg
or
nop
jnp
std
test
rolb
aad
jns
aaa
push
or
aam
mov
lea
xchg
sarb
pop
leave
lods
or
push
inc
loope
mov
pop
imul
jge
loop
lea
gs
push
aam
insl
outsl
jnp
scas
fbstp
adc
dec
movsl
mov
pop
dec
out
js
push
test
sbb
mov
fidivrl
adc
dec
dec
dec
into
sub
cmp
pop
or
jge
cwtl
jnp
jge
dec
push
aaa
pushl
test
or
mov
pop
sbb
frstor
add
jns
cmp
pop
adc
fdivl
out
push
dec
arpl
orb
es
pop
lods
cs
and
mov
sbb
les
push
pop
cmpsb
fidivs
push
movsl
mov
dec
push
out
notb
lret
mov
ds
jmp
or
jecxz
dec
dec
popa
add
and
push
loopew
lret
dec
xor
sub
lret
cmpb
addr16
pop
add
push
imul
mov
and
dec
mov
ds
inc
stos
inc
and
adc
sub
clc
mov
mov
scas
sbb
jecxz
mov
in
mov
mov
dec
addr16
roll
dec
imul
jmp
insl
xchg
lcall
or
fmull
mov
mov
fs
sbb
pop
sub
enter
mov
xor
ret
enter
and
xchg
popa
adc
mov
jge
imul
sub
iret
loop
repz
repnz
les
jns
pop
add
and
push
in
add
dec
mov
pop
pushf
or
and
jmp
lods
add
pop
popa
pop
nop
outsl
ss
popa
lea
movb
out
mov
cs
dec
xchg
lcall
cmp
das
stos
sub
in
mov
pop
or
out
jae
jnp
popa
cmpsb
loopne
sahf
jbe
rcrb
cld
cwtl
sbb
push
rorb
and
pop
in
cltd
cmp
leave
test
fistl
or
orb
iret
out
rcll
mov
les
inc
ret
ljmp
test
cltd
std
aam
mov
inc
fmul
sbb
in
test
cli
mov
jns
sbb
mov
test
push
aad
dec
or
and
xor
mov
iret
leave
and
or
inc
push
incb
push
out
js
push
js
xlat
and
shlb
mov
roll
xchg
mov
push
inc
mov
add
loop
cwtl
inc
aas
data16
cwtl
lods
and
addl
pop
sub
pop
movsl
stos
lahf
jg
pop
pop
cmp
pop
test
int
outsb
xchg
shlb
pusha
mov
push
jmp
mov
in
dec
cmp
adc
push
into
pop
mov
hlt
cmp
mov
sbb
inc
sub
sbb
mov
mov
movsb
shl
push
inc
cmpsl
popa
adc
pop
outsb
xchg
sbb
fnstcw
ja
sahf
sarb
pop
lods
in
mov
scas
inc
inc
aaa
sub
rcll
je
mov
push
cmpsb
sbb
imul
daa
jmp
loopne
jno
mov
lock
test
std
xchg
ljmp
mov
or
jle
loope
int3
and
mov
mov
adc
orb
sbb
out
in
insb
xchg
lods
sub
jae
fs
and
aam
into
cmpsl
lods
xchg
cmp
xchg
and
adc
pushf
das
fsubrp
sbb
and
pushf
test
sbb
ret
nop
or
and
sbb
xchg
xorl
xchg
or
scas
push
sahf
mov
jmp
lods
inc
lcall
xor
pop
lea
xchg
xor
xchg
push
in
add
sub
shlb
sbbb
push
mov
mov
std
xlat
fidivs
repz
adc
mov
adcb
ud1
cmp
arpl
jnp
dec
jnp
dec
clc
dec
xchg
es
sub
lea
ret
popa
lret
cmp
or
pop
dec
jl
dec
pop
jb
fidivl
pusha
adc
cmc
adc
ret
call
mov
imul
in
and
out
xchg
or
xchg
mov
jl
xor
ds
in
nop
sarl
leave
adc
adc
xchg
ffreep
adc
push
shll
sub
mov
in
subb
pushf
mov
mov
pop
imul
cs
cwtl
xchg
sbb
xlat
ljmp
sub
sbb
jo
inc
jmp
in
fstl
xlat
in
jmp
mov
std
pushf
inc
lahf
jno
add
cmc
fwait
adc
fstpt
mov
dec
xor
xor
or
adcl
push
shl
mov
push
sbb
insb
xor
pop
sarl
sbb
jbe
stc
jp
pop
int3
je
out
sbb
ja
outsb
lods
rol
dec
or
lahf
inc
mov
ss
inc
out
bound
pop
add
cld
mov
ljmp
xchg
push
das
inc
imul
fisubl
xchg
cld
test
and
popa
repnz
or
sbb
mov
adc
xor
int
jo
movsl
pop
scas
jnp
xor
ret
negl
mov
subb
scas
sahf
or
push
outsl
stc
mov
adc
push
add
lcall
out
sbb
arpl
cmc
sub
and
push
je
jne
or
ret
enter
xchg
movsb
popa
pop
or
dec
sbb
lcall
push
shlb
and
adc
cltd
xchg
mov
mov
push
mov
xor
dec
sbb
cmp
lods
mov
and
mov
xchg
pop
push
insb
in
push
jecxz
jecxz
test
mov
adc
jl
fwait
cmp
adc
jge
add
dec
add
and
xchg
dec
add
cmp
cmpsb
jno
push
xlat
js
out
push
xchg
jp
mov
dec
pop
mov
repnz
cltd
outsl
std
jae
mov
push
add
add
cmc
push
inc
cmpsb
pop
adc
inc
mov
or
addb
xchg
mov
icebp
lret
insl
ja
sbb
push
xor
out
pop
sarl
rolb
insb
xchg
xor
add
jp
out
mov
jp
xchg
pop
sbb
mov
dec
jnp
mov
sbb
bound
mov
cmpsl
bnd
dec
dec
jp
inc
cmpsl
xchg
inc
inc
sar
push
jbe
cmp
mov
out
xchg
loop
sub
mov
xchg
sbb
out
fldcw
ret
jno
mov
dec
and
inc
xlat
push
cs
out
xchg
loopne
aaa
decb
hlt
pop
inc
add
mov
add
push
lret
vmwrite
test
push
pop
jne
push
mov
cmp
ja
aad
lods
mov
testl
and
xor
xor
dec
cmp
xchg
aas
inc
pop
mov
xchg
test
dec
test
subb
push
inc
int
mov
sub
pushf
std
sarl
bound
lret
mov
mov
cs
pop
fsubl
decb
cltd
inc
arpl
scas
jg
addl
lods
pop
rorb
addr16
loopne
mov
insb
loope
out
cli
rcrl
bound
je
xchg
or
mov
movsb
ds
sti
in
sub
pushw
cmc
mov
hlt
sbb
int3
mov
iret
fidivrs
push
add
sahf
jne
jne
aas
adc
lods
fstp
adc
or
insl
mov
jo
jno
cwtl
adc
mov
xlat
mov
fsubs
pop
add
sahf
cmp
lret
shr
jno
das
in
enter
imul
push
data16
or
clc
xor
xchg
sub
mov
fbld
clc
pop
cmp
or
jns
in
in
test
and
dec
jbe
jbe
ds
pop
jge
jg
out
inc
xor
and
mov
fildl
push
push
inc
loope
arpl
inc
mov
std
mov
mov
pop
sbb
test
cmp
push
leave
mov
fistps
pop
out
cltd
adc
jae
sub
fs
dec
add
jecxz
pop
pop
pop
jg
loopne
ret
test
and
sarb
shrl
outsl
push
fcoms
or
sub
jmp
and
xor
decb
sub
xor
aas
push
push
xchg
dec
add
xchg
jp
repnz
iret
jbe
pop
mov
mov
mov
aas
mov
aam
lret
sbb
std
push
retw
pop
or
les
cmp
cs
fstl
out
jbe
addb
mov
orl
fsts
and
lahf
sbb
call
hlt
mov
in
push
sbb
dec
pop
jns
push
out
xchg
int3
sbb
mul
dec
mov
push
cmp
fsubrs
mov
js
and
test
test
xor
stos
imul
push
mov
popa
and
cmc
push
pusha
adc
sbb
cmp
push
sahf
jae
and
add
fcoml
mov
push
jle
mov
cmp
imul
shll
int3
mov
push
ret
mov
mov
mov
cmpb
les
cmp
mov
leave
mov
mov
inc
mov
aaa
pop
arpl
popf
aas
insl
loop
mov
xchg
pop
popf
add
xor
push
cmc
lods
sbbl
xor
mov
lods
or
mov
mov
pusha
jne
in
sub
stos
mov
pop
lret
pop
add
sub
jb
cmpsl
adcl
adc
dec
sbb
lods
jl
mov
jnp
add
data16
sahf
or
cmp
lock
jo
data16
mov
jbe
and
add
mov
mov
iret
out
sub
out
leave
and
xlat
push
fwait
xchg
dec
jecxz
xor
flds
cmpb
subb
decb
cmp
pop
aad
jbe
inc
in
push
xchg
call
popa
fwait
mov
int
pop
jge
add
xor
jbe
xchg
sbb
and
push
xlat
ror
jns
cmpsb
negl
mov
cmp
dec
mov
xchg
push
inc
dec
xor
inc
jae
rorb
mov
mov
xchg
push
pop
call
dec
repnz
mov
push
dec
loope
enter
jns
and
push
lret
xchg
add
sbb
test
fnsave
push
push
cltd
or
or
movsl
cli
push
add
adc
ret
xchg
inc
pusha
stos
push
loop
mov
pop
les
cltd
pop
adc
dec
int3
add
push
and
push
test
cltd
aaa
adc
push
add
sahf
insb
push
pop
jne
mov
push
mov
ror
mov
push
mov
push
push
jp
lret
daa
leave
icebp
fadds
sub
sbb
push
out
daa
push
inc
push
mov
pop
fimull
cmp
test
xchg
adc
add
in
into
adc
jnp
xor
aam
dec
adc
imul
sahf
and
cs
sub
ljmp
shlb
cwtl
mov
push
jp
push
jp
lret
add
add
sahf
add
in
jns
scas
inc
jnp
cmpsb
inc
xchg
fldcw
inc
dec
stos
pop
jmp
push
pop
xlat
sub
add
out
shrb
aam
in
cmpsb
add
xchg
jmp
xchg
pusha
mov
xor
sbb
xor
adc
pushf
push
movsb
lcall
mov
sub
mov
add
and
sbbl
int
push
push
lret
mov
out
cmc
push
dec
fdivl
nop
mov
fwait
xchg
into
xor
xchg
mov
jns
or
cmp
mov
pusha
cmp
jb
pop
sahf
cltd
out
jge
adc
inc
mov
in
inc
push
add
hlt
xor
push
mov
cmp
loope
mov
scas
inc
push
xor
xchg
daa
inc
jecxz
cltd
outsb
loop
jp
ret
add
jecxz
clc
mov
ljmp
pop
mov
sbb
loopne
dec
sbb
push
add
push
and
or
out
fs
sub
clc
out
mov
loope
test
mov
int
lret
pop
xlat
cmp
xchg
push
sti
dec
or
mov
cmpsl
lcall
sbb
fsubs
nop
push
dec
and
pusha
sub
jmp
cmpsb
lods
mov
sahf
cmp
loop
or
inc
push
ljmp
test
lods
stos
addb
mov
sti
jb
or
mov
stc
rcrl
xor
jne
call
es
add
lahf
and
in
fmul
lds
mov
mov
incl
sub
int
mov
pop
fistpl
mov
mov
or
push
jbe
or
aam
rolb
in
mov
mov
jne
jge
or
and
mov
imul
sbb
stc
mov
ds
js
xlat
jl
fisttps
paddsb
adc
insb
fcomi
addr16
pop
sub
jge
xchg
inc
jecxz
adc
sarl
mov
push
icebp
cli
sarb
push
mov
adc
out
add
push
movl
mov
imul
jmp
jmp
pop
out
xor
insl
pop
pusha
icebp
scas
je
or
push
pop
inc
xor
jg
jmp
jmp
popa
or
out
orb
lds
mov
sahf
mov
cmp
xchg
fcoms
fildll
or
mull
fdivs
int3
cli
ljmp
addr16
sbb
out
mov
pushw
loope
mov
mov
dec
xchg
rcrl
cmp
cmpsb
addr16
push
xchg
lret
imulb
lret
in
xchg
clc
fisttpll
sbb
jnp
add
adcb
inc
xor
xchg
cmc
nop
in
mov
add
fstl
in
aam
movsl
std
pop
orb
adc
mov
jecxz
loope
inc
popf
rcll
lods
in
and
cmpsl
and
add
mov
dec
sub
mov
imul
jmp
push
or
add
int3
or
es
adc
xor
sub
sub
xor
pop
das
or
popf
and
mov
ret
mov
in
loopne
outsb
addr16
pusha
leave
fwait
cmp
adc
int
jge
loope
jg
notb
les
pusha
push
daa
inc
xor
jne
in
cli
sbb
jecxz
imul
cwtl
lock
jno
pop
mov
and
mov
push
xchg
dec
mov
imul
ss
out
stos
add
ss
dec
jmp
aaa
mov
int
jge
jl
std
jle
pop
cmpsb
fldenv
call
in
cwtl
push
or
ds
es
or
push
mov
or
add
test
push
push
jae
addr16
pusha
dec
xchg
cmpl
mov
pushf
loop
jno
mov
sbb
xor
dec
mov
and
push
or
xchg
imul
in
xor
jbe
xor
sbb
icebp
sub
test
inc
xchg
push
xchg
and
and
pop
je
loopne
popw
sbb
outsb
out
dec
jle
iret
je
xchg
int
xchg
dec
pop
mov
jp
enter
fnstcw
ss
jns
pop
cmp
pop
adc
lods
cs
pop
inc
xor
test
lcall
pop
pop
cmpsl
andl
incb
sub
sub
pop
stos
pmulhw
popa
inc
xlat
push
scas
xchg
shl
int
mov
pop
push
lret
aas
jb
leave
ret
imul
xor
sarb
or
inc
mov
clc
jae
cmp
xor
fsubs
adc
test
xor
data16
mov
jl
cmp
push
push
mov
sub
add
or
push
loopne
inc
push
out
jle
fwait
int
imul
cmpsl
vcvtsi2sdl
aaa
and
fs
pop
inc
fwait
add
cmp
test
jp
inc
or
jge
dec
mov
pop
mov
bound
dec
repnz
nop
xor
cmpsl
sti
push
fwait
jb
dec
jo
cmp
in
iret
loop
pop
fwait
push
popa
mov
jge
cmp
and
add
push
push
push
mov
or
addr16
cmp
pop
dec
inc
mov
test
adc
mov
mov
sbb
inc
int3
int3
lock
xor
xor
popf
movsb
push
loope
das
rorl
xchg
es
sbbb
jne
pop
data16
fisttpll
pop
adc
loopne
sub
dec
test
inc
pusha
sbb
xor
adc
push
mov
shll
cld
call
push
imul
pop
out
sub
mov
pusha
cmp
insb
and
lret
push
lods
or
shrb
fidivrs
jno
cmpps
sub
js
inc
jmp
cli
jnp
mov
and
mov
cwtl
mov
imul
testl
and
fwait
xchg
mov
mov
adc
pop
lret
outsb
sbb
insl
popa
push
or
stc
mov
sub
stc
in
out
push
adc
mov
xchg
sbb
sarl
fmul
sbb
sub
sub
fcomps
arpl
pushf
push
cwtl
stos
jecxz
loop
xchg
mov
mov
fwait
in
xor
rcrb
mov
xor
aam
adcl
movsb
jecxz
ja
stos
jg
adc
and
push
or
insl
dec
push
test
or
mov
xor
sbb
push
jb
push
jne
and
nop
pop
les
inc
mov
push
pop
icebp
sub
mov
xchg
dec
aad
mov
out
out
jge
xor
push
cltd
or
push
pop
add
inc
fbstp
push
pop
cmp
aam
sbb
mov
pop
in
xchg
popa
push
in
add
xor
ds
add
shll
xchg
ret
dec
gs
cmpsl
lret
push
sbb
scas
mov
mov
dec
xchg
mulb
xor
inc
xchg
adc
adc
test
or
or
sub
leave
push
add
add
nop
fidivl
and
dec
in
sbb
lcall
ljmp
fimuls
pop
push
aam
stc
xchg
dec
add
cld
bsf
fsubl
sbb
movsb
and
pop
pop
mov
lods
fisttpll
cmc
cmp
dec
sub
jb
vpsubsb
stos
xlat
jle
subb
ret
dec
addr16
testb
shlb
mov
pop
das
ds
dec
jae
sbb
loopne
lret
pop
mov
mov
adc
out
sub
push
mov
push
sbb
andb
pusha
dec
add
dec
xchg
lock
xchg
popa
xor
sub
in
inc
xorl
pop
inc
and
fdivr
mov
pushf
sbb
loopne
or
dec
sub
pop
add
dec
js
les
pushf
adc
lahf
sbbl
cmc
or
movsb
cmp
test
pop
adc
cld
loop
lods
inc
gs
fstl
out
push
xchg
out
jecxz
add
xchg
scas
andb
cmp
outsl
out
add
mov
icebp
scas
cmpsl
mov
and
aad
fisubrl
sti
decb
loop
rorb
jmp
scas
sub
mov
sbb
mov
aad
xor
ret
popa
out
jl
dec
outsl
mov
xchg
dec
gs
sti
lock
mov
adc
or
gs
xor
sbb
and
iret
inc
bnd
inc
lahf
jl
or
dec
jg
stc
xchg
mov
mov
dec
gs
xchg
aad
and
inc
jecxz
adc
leave
pop
mov
mov
inc
or
sub
jo
imul
movsb
aas
outsl
cmc
push
inc
pop
jmp
ds
cmp
test
mov
bound
popa
shll
stos
insb
scas
jae
jp
adc
ja
lret
mov
outsb
lret
fbstp
addr16
cmp
cmpsb
dec
scas
push
xlat
push
or
imul
jae
sub
jmp
out
inc
adc
adc
and
les
cli
mov
and
push
aas
les
add
and
xor
cmp
pop
cltd
subl
mov
ss
js
mov
mov
fs
dec
fiaddl
mov
scas
daa
mov
and
cmp
inc
push
cmp
inc
mov
rorl
enter
mov
push
xchg
push
adc
pop
clc
rorb
fwait
sub
mov
inc
and
and
outsl
xchg
push
pop
popf
pop
inc
mov
lock
jne
sahf
mov
pop
pop
sbb
int3
pop
scas
sub
mov
or
jle
js
or
out
es
xlat
mov
leave
dec
mov
add
jge
das
rclb
mov
cld
and
adc
mov
mov
xor
roll
and
inc
in
and
in
imul
dec
testb
push
and
jle
fmuls
arpl
pop
ja
divl
push
sti
leave
xchg
fstpt
pop
lds
cld
lds
add
movb
xor
or
enter
bound
in
adc
cmp
pop
jl
cli
inc
sbb
push
mov
bswap
hlt
test
or
xchg
in
jo
int3
cltd
xchg
jge
enter
mov
rcrb
out
push
dec
pushf
daa
push
call
jecxz
sbb
push
mov
cmp
lahf
mov
cltd
mov
lcall
xchg
xchg
jbe
insb
out
rcrl
pop
in
jae
sub
sbbl
cmp
int3
push
xor
idivb
xchg
lahf
cld
xor
int3
or
lods
ret
or
cld
pusha
sti
cwtl
xchg
clc
stc
cmp
es
sub
cmp
ret
ss
lds
pop
or
xchg
stos
shrl
mov
cmpsb
or
adcl
addr16
sub
push
jecxz
ljmp
jb
and
pusha
xchg
push
mov
insb
push
mov
pusha
adc
pop
int3
mov
or
stos
mov
xor
cmp
jle
cld
pop
xchg
lods
sbb
pop
add
int3
test
incb
mov
mov
sbb
ds
leave
test
add
pop
and
xlat
lock
xchg
mov
push
aas
push
insb
and
xor
pop
cmp
mov
cltd
xor
leave
in
mov
sub
inc
pop
rcrb
add
jno
pop
sub
gs
cmp
sbb
outsb
mov
mov
push
sub
pop
add
pop
cwtl
push
ret
add
jne
data16
mov
and
jno
sub
dec
jg
push
fdivr
in
ret
jp
push
adcb
int3
enter
xchg
out
cli
imul
addb
popf
xor
sbb
jne
lds
ret
int3
cmp
and
pop
clc
mov
test
xor
shlb
jl
mov
dec
push
xchg
repz
xorl
pusha
xor
jne
loope,pt
scas
lods
fistpll
clc
mov
dec
jnp
fcoms
add
outsb
mov
std
in
lock
and
mov
in
adc
cld
xchg
das
mov
sub
loopne
mull
cmp
add
cmpsb
cs
pop
addr16
xor
dec
movsb
aas
mov
xlat
xor
bound
shl
rclb
test
cwtl
sub
loop
or
lret
adc
and
loop
and
mov
xchg
sub
outsl
pop
xor
leave
divl
sub
pop
std
cmp
cmpsb
aad
xor
dec
cmp
mov
xor
and
jno
aaa
pop
fwait
sub
add
cmp
jo
inc
aas
xchg
stos
jo
push
notb
pop
push
pop
xor
lret
mov
and
push
in
inc
xchg
xor
mov
push
test
outsl
mov
in
xchg
shll
jb
pop
jnp
sbb
or
mov
mov
aas
sbb
sti
leave
outsb
aaa
loop
leave
xchg
incb
pusha
std
push
inc
mov
xchg
jnp
insl
pop
sub
adc
out
push
and
pop
movsb
mov
pop
mov
ret
jmp
pop
cmp
lock
test
add
aam
arpl
xchg
pop
repz
std
mov
outsb
lds
movsl
cmp
mov
out
orl
pop
pop
sub
push
ret
push
scas
lods
mov
test
mov
mov
xchg
ret
sub
sbb
lcall
mov
test
leave
scas
js
int3
mov
scas
imul
jmp
fbld
and
mov
pop
lods
shrl
clc
cmp
jnp
adc
out
jne
decl
mov
mov
dec
push
je
jno
push
aas
ljmp
add
and
pop
add
xchg
pop
mov
mov
enter
adc
cmp
xchg
cmpsl
jbe
mov
mov
lcall
aam
and
stos
fsubl
adc
popa
add
je
cld
int
pop
sbb
jl
cs
or
es
xor
dec
lahf
mov
mov
mov
mov
rorb
test
test
das
mov
fcom
in
and
shrb
or
mov
pop
dec
into
or
lock
jno
les
push
sbb
adc
aaa
push
fists
or
mov
push
xchg
add
and
rclb
or
pop
mov
dec
xchg
push
aam
inc
icebp
subb
repz
jns
mov
dec
mov
xor
cmp
dec
push
sub
push
mov
das
subb
loop
jnp
xchg
jl
movsl
pop
jge
push
mov
and
dec
jge
subl
iret
jg
dec
call
insl
repnz
dec
fiaddl
in
aam
loopne
mov
std
lret
das
std
je
les
test
mov
hlt
adc
push
aam
cmp
mov
jp
cmp
mov
mov
and
shrb
push
rcrb
add
cmp
push
add
out
dec
fldt
int
in
addr16
test
ja
sbb
ss
gs
dec
sub
inc
xor
mov
push
push
push
in
mov
cmp
xchg
mov
add
cmc
test
out
ss
mov
sbb
pop
shrb
imul
or
push
call
mov
int3
sahf
and
jae
subl
mov
jb
sub
fstps
mov
repz
pop
mov
repnz
mov
test
mov
mov
or
in
cmp
in
pusha
xor
mov
cld
stos
xchg
xchg
adc
add
pop
jp
out
ret
aas
mov
xchg
and
pushf
pop
adc
sbb
add
sub
mov
jle
cmc
arpl
mov
mov
mov
out
or
jb
or
xor
push
adcb
xchg
xchg
sbb
cmpsb
jne
sbb
push
pop
rcrl
ret
inc
ljmp
xchg
pop
aam
xor
cs
test
push
mov
int
or
inc
dec
les
test
jb
mov
and
or
mov
lds
sbb
inc
ret
test
push
sub
or
jl
lret
jmp
rcrl
fcoml
adc
rorl
inc
push
stos
lods
xchg
mov
xchg
inc
sbb
cmp
and
lods
notb
mov
std
add
pop
loopne
aas
lret
mov
pop
adc
lods
dec
enter
xlat
js
jae
int
int
mov
mov
pop
pop
sub
pop
sbbl
enter
lea
das
fcmovbe
imul
dec
sbb
pop
decb
push
xchg
cmp
cmp
scas
std
incb
outsb
mov
or
sahf
push
std
or
push
in
and
ja
je
push
pop
fimuls
std
cwtl
xor
push
outsl
fisubrs
shrl
andps
sbb
and
cmp
cmp
leave
std
push
add
mov
ret
loopne
rolb
mov
rcll
sti
and
jno
leave
jge
mov
mov
pop
filds
or
push
cmp
arpl
pop
scas
pop
xchg
push
push
fnstsw
fsub
xchg
sbb
mov
sub
or
daa
mov
cmpsb
in
sub
sub
push
iret
in
push
dec
inc
mov
push
mov
pop
aad
sbb
lock
xor
inc
repz
push
jg
test
sbb
loope
sahf
xor
pushf
imull
xchg
lds
fdivs
add
dec
push
lahf
push
roll
pushf
fs
or
or
inc
outsl
aad
jae
pop
lea
pop
sbb
addr16
loopne
adc
jbe
xor
jnp
repz
and
fwait
std
xor
dec
pushf
xchg
or
and
mov
cld
or
mov
and
gs
mov
xchg
jecxz,pn
mov
cmpsb
adc
mov
push
fwait
cmp
push
mov
ficomps
adc
and
cli
fstl
adc
sub
cli
mov
sbb
adc
sbb
jecxz
or
xor
fistps
les
out
push
xchg
les
dec
and
pop
sti
jns
and
add
je
rolb
cmpsb
inc
mov
add
in
push
adc
jae
add
xchg
test
int
push
fcmovnb
loope
dec
adc
mov
or
inc
sub
sub
cmp
push
sbb
divb
sub
fidivl
jmp
inc
push
and
jne
mov
les
push
or
cmp
pop
lods
enter
mov
cmp
test
sbb
loopne
xor
mov
rcrb
clc
mov
jae
push
mov
and
add
xchg
or
dec
xor
mov
add
ss
gs
mov
scas
mov
cwtl
insl
push
imul
cmpsl
nop
and
mov
push
mov
mov
cli
mov
pop
mov
mov
xorl
aas
aad
outsl
sub
repz
dec
daa
icebp
mov
pop
sub
jge
jns
mov
nop
daa
adcl
cs
orl
jae
xor
lea
inc
xor
sbb
movsl
xor
mov
mov
into
pop
fcompl
fnstenv
fsubrs
sub
les
insb
mov
jp
mov
lret
rclb
call
or
push
and
aam
fwait
sti
xchg
imul
push
sbb
fistl
pop
jnp
jae
mov
mov
xchg
or
cmp
pop
clc
adc
push
mov
sahf
les
stos
mov
xchg
shlb
cmp
call
inc
out
scas
sbb
dec
jns
pop
sub
mov
add
stc
mov
mov
lods
sbb
pop
inc
cmc
scas
mov
test
inc
pop
stos
pusha
add
sbb
dec
lret
cmp
les
jns
repnz
loopne
cltd
lock
xorb
lahf
movsl
mov
mov
nop
jae
jp
sbb
js
pop
jg
hlt
insl
xor
push
pop
inc
cmp
mov
inc
popf
rclb
pop
jg
lods
xchg
xchg
or
push
int
clc
test
aaa
pop
mov
lods
aam
sbb
stos
push
in
xchg
test
call
inc
or
mov
pop
stos
pop
leave
bound
sub
jg
xchg
out
and
test
jae
cmp
cwtl
jmp
sub
cmp
and
inc
leave
mov
jne
daa
out
dec
xlat
hlt
cmp
loopne
xchg
push
mov
jbe
iret
or
sbb
andl
repnz
stos
add
xchg
popa
sbb
lea
mov
fucomi
xchg
scas
adc
mov
test
insl
aas
fadds
mov
xlat
pop
add
cmc
adc
ss
les
mov
nop
and
xlat
fldt
lea
or
xchg
pop
stos
xchg
pop
setno
in
adc
and
in
ficomps
lcall
sub
shrl
inc
push
or
cmp
mov
or
in
jmp
orl
add
fldl2e
jg
inc
mov
ret
mov
fwait
loope
fstpl
mov
in
and
mov
push
jp
and
and
cwtl
jmp
sbb
and
push
fnstsw
add
push
lea
push
lahf
shll
mov
ja
mov
push
push
xor
cs
ss
mov
jnp
sbb
mov
dec
xchg
scas
jmp
pop
or
and
setno
cwtl
inc
lahf
jle
std
faddl
mov
call
and
aas
adc
adc
or
fisttps
fdivrs
daa
movsb
fcompl
mov
or
xor
insl
jne
incl
sarb
and
call
add
mov
shrl
movsl
mov
lret
cmpsb
lahf
cli
test
je
int3
cmp
sub
inc
xchg
shrl
inc
je
push
mov
cs
outsl
mov
xorb
and
xor
add
or
mov
aam
adc
sub
stos
or
sahf
mov
lods
mov
fnstsw
pop
mov
ja
scas
dec
pop
push
or
clc
dec
in
pcmpgtw
out
fstl
xor
adc
pop
jb
mov
lcall
sbb
daa
pop
sub
cmc
pop
jle
data16
cmpsb
push
xchg
nop
and
mov
adcb
mov
int
jge
cmc
popa
nop
lret
adc
rcll
pop
push
aaa
lods
jmp
mov
pop
mov
inc
es
cmp
les
cmpsb
ja
scas
scas
or
out
je
lret
lock
dec
add
push
sbb
inc
xor
mov
adc
jne
lods
jne
sub
imul
cwtl
inc
out
sbbl
jnp
push
mov
popa
adc
push
rcrl
dec
jmp
or
sbb
dec
xchg
push
jb
int
jb
inc
in
cs
and
aaa
add
jne
repnz
test
bound
jecxz
cld
insb
or
jno
mov
ss
push
pushl
mov
aad
sub
arpl
popa
xor
xlat
lret
mov
gs
jl
mov
adc
stos
fcoml
imul
or
dec
xlat
in
dec
cmp
sub
inc
inc
or
xor
add
dec
dec
clc
mov
push
sbb
jl
mov
jp
jae
inc
sub
repnz
ret
arpl
in
lret
xchg
xor
cmp
mov
jno
pop
out
in
les
fidivs
xor
icebp
jmp
xor
mov
jmp
inc
push
stos
pop
mov
adc
mov
push
mov
inc
fwait
jns
cmc
cltd
stos
not
cmp
xchg
jb
ja
jp
testl
repnz
sbb
adc
dec
xchg
or
sub
lods
es
outsl
and
jbe
sbb
ljmp
and
and
cld
jmp
negb
cmp
mov
push
inc
sbb
mov
mov
and
pop
add
inc
push
jmp
sahf
add
incl
dec
insb
adc
cltd
mov
popf
frstor
test
fsubp
sub
pop
xchg
mov
cwtl
push
pop
imul
mov
jns
stos
sub
push
dec
dec
push
and
stc
dec
mov
cmp
sbbl
in
xor
ss
es
cs
jp
jg
imul
and
mov
fwait
jge
mov
pop
dec
or
jne
shrb
dec
mov
pop
mov
loope
movsb
sbb
add
add
dec
or
or
xchg
jne
rol
out
sbb
pop
push
rcl
mov
arpl
mov
stos
das
adc
mov
mov
mov
inc
sbb
test
xchg
cmc
inc
arpl
and
fcomi
jp
or
ror
jle
out
sbb
fcmovu
xor
jmp
jo
dec
insl
lds
cmpsl
shrb
xorb
cltd
push
hlt
data16
inc
push
and
out
xchg
idivl
cwtl
mov
sbb
jl
sbb
mov
shl
mov
int3
push
scas
mov
imul
imul
pop
es
fwait
enter
repnz
scas
cmc
jge
test
call
xor
push
pop
sub
sbb
xchg
adc
push
in
cmpsb
ja
push
icebp
mov
mov
or
test
lea
and
out
loopne
lahf
adc
testl
xchg
das
pop
repnz
adc
adc
cli
int3
jnp,pt
je
fcomps
loop
cmp
lods
add
ficoml
mov
cmp
mov
mov
jnp
jno
in
and
sbb
aas
ficomps
or
push
mov
subb
ljmp
jae
mov
mov
in
inc
movsb
lcall
mov
test
lock
popa
fmull
into
aad
out
lods
ret
mov
test
pop
pop
xor
repnz
sub
popf
and
pop
or
ret
xor
out
adc
shlb
int3
jl
inc
stos
ja
das
push
adc
lret
mov
or
inc
cmp
push
repnz
mov
fists
mov
icebp
pop
sti
inc
add
push
inc
mov
scas
int
dec
ljmp
lret
add
cmp
or
push
pop
mov
sbb
movsl
or
mov
xchg
sub
ljmp
xchg
test
jg
std
scas
mov
je
clc
xor
hlt
cld
sub
sub
dec
daa
loope
leave
pop
dec
inc
mov
pop
xchg
mov
inc
pop
adc
xchg
imul
sub
mov
scas
unpcklps
sbb
sti
lcall
xor
sar
ds
nop
out
xchg
mov
js
nop
push
mov
dec
pop
cltd
dec
fmuls
mov
movb
push
inc
dec
mov
pop
push
cmpb
xor
mov
ret
jb
xor
cmova
ja
adc
in
jno
pusha
mov
pop
mov
call
and
fmul
cwtl
sub
xor
ss
ljmp
nop
jge
jb
arpl
xchg
sahf
jecxz
test
pop
xlat
add
cli
or
pop
ss
cmpsb
push
scas
mov
push
arpl
push
push
es
sub
push
aad
fistps
or
dec
add
jl
in
and
cmp
fcmovb
addr16
std
xchg
mov
mov
jle
lret
out
inc
divl
aam
std
push
scas
xchg
jecxz
inc
sub
and
adcl
jnp
push
pop
das
push
pop
xor
push
mull
mov
xchg
aam
mov
or
arpl
clc
jae
add
mov
push
sub
mov
loop
sbb
xchg
fiaddl
cmp
sub
outsb
cli
daa
adc
sub
insl
fs
sbb
xor
inc
mov
ds
dec
push
jno
mov
dec
fiadds
sbb
jp
aas
iret
fdivs
shlb
sbb
lret
xor
dec
mov
testl
and
scas
mov
sub
loope
cmp
es
push
cld
ds
jbe
stos
aam
jmp
add
sar
enter
inc
fdivrs
jbe,pn
mov
sbb
cmpsb
or
test
loopw
xlat
mov
mov
mov
xlat
ret
cld
push
and
pop
clc
jle
andb
data16
or
in
outsb
das
pushf
xor
jg
mov
scas
xor
shrb
mov
xor
push
push
ljmp
mov
subb
mov
inc
div
insb
std
add
add
mov
popa
adc
and
adc
or
sbb
popa
fisttps
insl
pop
loopne
inc
lds
push
popf
cmpsb
test
lahf
cld
pop
xorb
sbb
push
jo
push
jl
std
adc
cltd
adc
ds
add
arpl
xchg
dec
pusha
icebp
pop
xchg
les
cltd
repz
lods
fcmovnu
adc
ret
cwtl
rclb
test
insb
cltd
mov
lods
in
cmp
hlt
stos
sbb
adcl
inc
dec
sbbb
xchg
jns
cmp
sbb
fs
ja
mov
cwtl
pop
loop
mov
lret
xor
jecxz
pop
arpl
add
adc
xor
hlt
push
je
stos
inc
out
lods
pslld
inc
add
add
xor
repnz
cmp
mov
insl
and
data16
push
mov
rorb
cmpsb
pop
jecxz
movsb
and
imul
dec
mov
mov
jge
mov
cwtl
scas
imul
icebp
adc
loope
mov
test
xchg
out
add
mov
stos
sbb
jle
stos
addr16
leave
cmp
pop
inc
pop
add
mov
mov
sbb
push
rcrl
jle
aad
stc
mov
dec
cmp
cmc
mov
mov
xchg
mov
ljmp
jne
int
pop
inc
pop
daa
mov
push
addr16
jecxz
stos
cmpl
dec
dec
push
movsb
mov
lock
int
jmp
and
mov
jg
in
fcoms
dec
and
jecxz
push
stc
mov
out
xor
leave
dec
xlat
cmp
test
outsb
and
fcom
xor
or
or
cmp
test
push
popf
ja
cltd
and
dec
aaa
adc
out
fs
dec
dec
push
mov
icebp
pop
jecxz
inc
mov
loope
push
mov
call
fwait
call
xor
andl
cmp
shr
jg
pusha
scas
fcomp
lods
mov
movsl
jecxz
sub
xchg
mov
push
push
mov
aam
xor
sub
enter
cli
ljmp
fsubl
int
or
jecxz
rorb
cmp
xor
dec
jns
push
scas
mov
es
call
push
stc
push
pop
addr16
add
gs
or
jg
popa
dec
jae
movsb
fnstsw
jle
gs
jbe
sbb
jecxz
pop
in
call
punpckldq
sbb
cmovbe
and
fisubs
push
jns
mov
and
xchg
pop
inc
xchg
inc
stos
add
inc
test
inc
fnsave
movsb
mov
sbb
test
pushf
pop
sub
shlb
mov
sarl
push
xor
icebp
inc
adc
cmp
imul
orb
or
lods
call
pop
inc
push
and
shrb
aaa
sbb
fnstcw
test
add
adc
fsub
outsb
js
es
stos
aas
pop
das
out
mov
sub
inc
rolb
mov
fbstp
pop
ds
repz
cmpsl
ffree
imul
les
push
scas
clc
prefetch
mov
loope
andl
pop
jl
xchg
push
inc
cltd
xchg
ja
jne
xchg
das
stos
and
sub
call
sub
stos
scas
out
arpl
mov
mov
jge
mov
sbb
jnp
xchg
jge
inc
pushf
jecxz
icebp
call
jp
out
movsl
sbb
jns
jl
imul
leave
mov
notb
leave
mov
lcall
pop
subl
inc
sbb
jae
rorb
js
dec
scas
add
xorb
xorb
push
fdivs
sub
pop
stos
js
jecxz
pop
ss
add
jo
stos
xchg
cmp
add
add
insl
lcall
insb
fidivrl
cld
mov
mov
xchg
sub
outsb
push
fstps
roll
adc
mov
cmpsl
mov
jl
push
adc
adcl
sti
std
cli
mov
jnp
push
mov
xchg
repz
mov
mov
fstl
xchg
lock
out
mov
cld
add
cmp
pop
push
outsb
xchg
icebp
push
js
pop
movsb
fst
add
in
pop
xorl
xchg
mov
ret
stc
in
imul
icebp
jb
mov
lods
mov
in
add
je
and
dec
pop
vpaddw
stos
add
add
cs
pop
in
inc
ss
cmp
aam
sbb
xchg
insb
addr16
adc
cmpb
or
add
xchg
lds
orb
xchg
gs
pop
dec
sbb
pop
dec
lds
movl
loopne
xchg
outsb
std
and
push
loop
cli
sub
sub
lds
and
mov
lcall
jne
std
ss
mov
nop
and
mov
fs
push
and
xor
jae
cmpb
pop
or
and
daa
cltd
inc
dec
add
lds
in
aaa
lds
testb
leave
mov
popf
jno
pop
fstpl
xchg
pop
dec
mov
pop
xchg
cmp
xlat
sub
xor
out
pop
or
sbb
sti
jmp
js
xorl
fimull
mov
ret
adc
jne
jmp
jmp
xlat
enter
mov
imul
xor
das
rorb
sub
push
push
sbb
push
xchg
les
das
fnsave
setb
inc
fcompl
cs
sub
fdivs
mov
sti
pop
testl
pushf
setne
test
out
lock
and
ret
in
in
mov
sbb
jg
fiadds
lock
xchg
cmovl
inc
xchg
mov
pop
lds
push
pop
and
push
repnz
xlat
jle
int
mov
daa
inc
fidivs
sbb
faddl
lret
shrl
xor
lret
andb
jno
sub
adc
sbb
mov
in
cmpsl
into
aaa
inc
mov
mov
sub
mov
das
dec
sbb
xchg
cmp
and
arpl
xlat
pop
ret
int3
adc
mov
jp
fs
sbbl
mov
mov
and
icebp
hlt
stc
sub
mov
pop
scas
loope
lret
jg
sbbb
cmp
dec
lea
push
test
faddl
jb
mov
addr16
sbb
in
mov
lahf
bound
pop
aad
mov
lods
mov
std
test
push
inc
cs
lea
movsb
out
and
xchg
dec
inc
pop
inc
rcll
add
in
jnp
iret
fcmove
lret
xor
inc
sarl
pop
ret
xchg
test
cli
popa
mov
les
mov
stos
dec
dec
test
outsb
repz
jecxz
in
sti
or
xchg
mov
call
add
rorl
mov
movsl
mov
jo
jp
faddl
xchg
jg
or
mov
inc
mov
fbstp
jp
adc
push
add
jmp
fimull
push
inc
cmp
sahf
cwtl
push
fdivl
in
jl
and
test
outsl
add
call
movsl
arpl
push
arpl
shll
xor
xchg
add
jbe
mov
and
mov
pop
in
in
inc
rcl
out
repnz
rolb
pop
inc
mov
movsb
xchg
fwait
push
pop
and
or
cmpsb
arpl
push
cmp
xor
jo
decb
das
xchg
inc
add
test
adc
inc
rcll
sub
xor
mov
enter
or
mov
xor
imul
jo
out
aam
cmp
sub
gs
nop
fimuls
in
cmc
push
adc
and
xchg
sub
stos
jp
aad
sbb
and
repz
in
movsl
les
into
add
rcr
inc
xor
push
js
imul
push
mov
outsl
pop
pusha
aas
stos
lret
mov
in
inc
bound
gs
out
xchg
mov
popf
adc
in
push
mov
outsl
repz
lcall
stc
les
xor
xor
sub
jne
sbbb
mov
ja
out
sub
xor
mov
ret
push
sub
jl
lds
mov
inc
mov
jle
cmp
xchg
cmp
out
push
mov
loop
or
dec
lock
clc
jb
in
sbb
in
mov
aam
loop
inc
scas
imul
loope
scas
lock
xchg
enter
xchg
xchg
mov
jp
int3
mov
out
cs
test
jmp
push
dec
mov
icebp
xchg
sarb
push
imul
test
inc
stos
and
loope
lods
or
push
or
addr16
es
das
jbe
out
das
lahf
ds
jg
call
mulb
aad
add
cltd
pop
iret
lret
popf
rcll
lahf
push
or
fs
or
fisubrl
or
jmp
movsb
inc
jb
in
sub
cs
addl
fiaddl
pop
fucomip
jmp
and
jmp
movsb
push
mov
add
xchg
icebp
fwait
pop
loop
inc
and
sbb
sub
push
dec
sub
dec
jns
pop
outsl
mov
in
into
or
cmp
push
push
add
mov
add
int
jp
mov
in
jmp
mov
xor
outsb
add
testb
pushf
mov
mov
pop
fistpll
push
pushf
enter
mov
mov
pop
cltd
mov
push
pop
add
into
lahf
inc
dec
add
in
sbb
aaa
sub
sbb
mov
repnz
int3
cmp
xchg
inc
xor
sub
les
stc
push
xorb
nop
in
sar
adcl
inc
int
gs
jle
mov
xor
cmpsb
pop
call
xchg
mov
cmp
jle
ds
out
fists
or
xor
dec
pop
xor
mov
xor
jl
out
leave
pop
jb
and
mov
mov
push
jl
add
pop
jp
jl
repz
add
mov
sub
jp
dec
jp
leave
sbb
mov
xchg
pop
cmpsb
popa
push
scas
mov
inc
dec
sti
in
sub
xor
shll
jg
sub
popa
fidivs
mov
adc
data16
adc
or
xlat
fmull
or
cwtl
sub
sbb
pop
int3
cli
and
stc
xchg
xchg
call
fcomi
mov
ret
adcl
fadds
bound
mov
addr16
push
mov
pop
inc
ss
filds
enter
adc
lret
dec
faddl
jnp
sub
adc
or
pusha
bound
push
lds
or
inc
arpl
insb
xchg
jle,pn
pushf
jecxz
ss
imul
cmpsl
push
lods
inc
pop
aas
mov
xor
pushf
lret
adc
aaa
cmc
lds
mov
lods
jns
leave
cs
fildll
clc
mov
pusha
pushf
pop
sbb
pop
shll
add
rol
pop
mov
or
orb
push
out
outsl
xchg
mov
mov
push
mov
xlat
and
jmp
lds
adc
loopne
fnstcw
sti
push
out
es
out
scas
call
imul
mov
repz
js
cwtl
push
xor
mov
dec
ret
cmp
push
xchg
data16
add
sbb
mov
cmpsl
sbb
pop
movsb
cmp
mov
lods
leave
sub
dec
lock
xchg
mov
pushf
test
pop
pop
aam
std
fnstenv
dec
inc
jl
cmp
pop
mov
call
xor
int
mov
dec
add
insl
mov
dec
xchg
xchg
jle
shlb
loope
popa
cs
xlat
jmp
mov
cmpsb
inc
jbe
add
inc
sahf
test
and
mov
ljmp
rcrb
xchg
xor
fisttpl
test
and
add
fmuls
lea
fsubp
ljmp
push
push
push
repnz
imul
mov
lcall
mov
push
or
out
sbb
rcrl
mov
mov
mov
outsl
add
pushf
sub
pop
cmp
lea
inc
push
cmp
push
pop
sbbb
stc
jl
mov
repz
cld
xor
jl
jae
push
cmp
xchg
pop
xlat
int
pop
add
pushf
mov
mov
cmp
rcll
pushf
inc
jne
push
aaa
ret
dec
fstpl
lahf
inc
rclb
divl
xor
mov
inc
rolb
sub
add
pusha
mov
mov
sti
loopne
xchg
sbb
fsubrl
cmp
test
call
sub
jb
add
dec
and
add
ljmp
add
cmpsl
fwait
inc
loope
jecxz
pop
xchg
xor
push
cmp
loop
mov
xor
xchg
lret
xor
add
dec
xor
and
les
mov
insb
out
inc
dec
xchg
cmpl
stos
jl
stos
sbb
pop
repnz
adc
loope
cli
test
pop
jmp
outsb
xor
add
mov
imul
push
into
mov
rcrl
cld
pop
cmp
pop
insb
add
jne
xchg
shlb
data16
cmpsb
out
scas
push
dec
shlb
jl
lret
or
push
lds
mov
aaa
pop
add
or
xchg
shr
orb
das
xor
pop
mov
jno
icebp
in
stc
loopne
xlat
icebp
xchg
dec
adc
and
cmp
loop
in
fstpl
into
stos
cmp
inc
ret
call
int3
aas
cmp
daa
call
fchs
lods
icebp
imul
or
dec
lahf
aad
stos
cmpsb
sbb
push
pop
jo
pushf
int
in
xchg
jge
mov
sub
ds
push
jp
push
inc
adc
test
stos
dec
mov
ljmp
lea
ds
test
sub
pop
icebp
mov
mov
dec
subl
or
jo
xchg
out
icebp
pop
sbb
adcl
xchg
pop
mov
movsl
sbb
subl
lahf
test
inc
push
es
nop
je
iret
aas
adc
adc
jge
mov
adc
inc
sub
xor
mov
add
push
mov
xchg
adc
xchg
movsl
add
fldcw
cs
push
jo
imul
pop
in
mov
in
js
push
push
mov
fs
adc
inc
jae
xchg
and
pop
inc
movsb
cmpsl
jmp
popf
loope
shll
xchg
add
ret
hlt
add
and
test
adc
xor
add
inc
xchg
push
xor
push
mov
add
cmp
in
and
adc
sti
mov
mov
scas
sbb
mov
inc
movb
loope
cmpsl
out
inc
repnz
xchg
push
push
push
shl
orl
je
scas
jae
mov
xor
aad
out
mov
cmp
imul
xchg
out
jmp
rorl
push
push
inc
add
scas
stos
ret
fxch
mov
scas
loope
data16
pop
inc
fs
push
mov
inc
popf
push
fcmovbe
mov
sbb
xchg
dec
aam
lds
cmpl
leave
mov
pop
and
xchg
test
out
pop
popf
dec
in
jmp
fs
lods
repz
xchg
loop,pt
pop
mov
jae
enter
shl
sub
dec
cmpsb
pop
rorl
call
mov
sub
push
sub
lcall
das
scas
lods
int3
jle
rorb
and
scas
out
inc
jmp
in
cmp
mov
or
pusha
cmp
inc
cwtl
xchg
int3
jae
inc
inc
fs
and
cmc
add
xor
es
jne
int
bnd
mov
push
and
adc
mov
sbb
les
pop
mov
mov
mov
loop
in
mov
outsl
test
pusha
sub
jge
add
or
mov
ret
push
cmp
jle
cmp
xor
inc
xchg
daa
mov
lea
jo
add
and
repz
xor
dec
fdivrl
jb,pn
xchg
ds
lret
sbb
sbb
mov
adc
jg
mov
mov
pop
cli
roll
sbb
pop
aaa
in
xor
ljmp
mov
jl
lods
xchg
rcll
lret
mov
sub
aam
jbe
pop
ret
cmp
pop
or
mov
push
adc
adc
das
adc
subb
sti
or
dec
mov
cmp
inc
inc
stos
rcll
mov
cld
daa
sub
mov
mov
in
pcmpgtb
jge
in
mov
loopne
push
das
enter
or
outsb
push
jo
ficoml
test
inc
ljmp
pop
cltd
sbb
mov
lret
mov
dec
xor
mov
pop
movl
in
lods
imul
sub
sbb
fistps
movsb
loopne
scas
out
mov
movb
leave
shlb
cmp
add
fisttpll
cs
cld
sub
cmovns
inc
bswap
jl
imul
mov
stc
aam
dec
lret
ds
add
imul
mov
shrl
xor
decb
scas
mov
ljmp
pushf
repz
cmp
outsl
jae
mov
mov
cmp
addr16
imul
dec
call
cmp
lock
cwtl
insl
sarl
test
jmp
xchg
add
adc
and
movsl
stos
xor
movsb
mov
in
inc
mov
or
jmp
roll
xor
mov
pop
sbb
pop
pop
rcrb
sub
push
loop
mov
shll
cmc
int3
mov
sti
imul
inc
aaa
repnz
jae
dec
push
fs
dec
das
icebp
rol
leave
dec
add
aam
in
xchg
and
jb
sbb
insl
jbe
and
lock
out
mov
jnp
arpl
iret
mulb
ret
jmp
mov
outsb
jle
movsb
and
or
outsb
aaa
aaa
loopne
lock
inc
hlt
out
and
loopne
scas
sub
pop
sbb
adc
jne
push
inc
outsb
jmp
inc
and
scas
mov
jno
or
jbe
cmpsb
pop
xor
insl
add
and
insb
test
imul
pop
cmp
lods
sub
xor
repnz
add
add
inc
and
cwtl
mov
sahf
add
in
xchg
mov
mov
cmpsb
jne
mov
jb
and
jbe
pusha
aad
xchg
int3
inc
xchg
loopne
pop
test
test
ljmp
cltd
mov
or
pop
iret
jns
lea
movsb
cmpsb
jmp
lods
jns
pop
lods
dec
pop
mov
dec
rcll
push
inc
cmc
jns
add
add
ret
add
jne
int
xchg
xor
push
xorb
jae
sub
mov
mov
cmp
pusha
cmp
dec
mov
jb
push
add
pop
mov
out
sbb
cld
xchg
dec
xchg
test
xor
xchg
fdivrs
push
ret
clc
fwait
int3
push
aad
or
rcl
cltd
mov
push
lret
pop
xchg
pop
add
sub
push
mov
mov
movsl
push
imul
and
xor
mov
dec
fistpl
test
cmp
jno
out
push
cmp
fs
jg
sub
fbld
lock
cld
lock
push
adc
roll
lock
or
sbb
out
xor
xchg
test
or
jae
sub
sbb
mov
jb
das
cmp
int3
out
adc
insb
popa
testb
loope
push
cmp
xchg
in
inc
dec
loope
test
sbb
shll
movsl
insl
push
and
xchg
loopne
xchg
sahf
sub
xchg
das
or
pop
call
xchg
movsb
arpl
cmp
pop
test
lds
lahf
dec
sbb
sub
aaa
jmp
aaa
cmp
cli
divb
dec
push
pop
gs
mov
js
aaa
sbb
dec
cmpsl
xchg
call
hlt
or
xor
jge
mov
leave
aas
mov
xchg
loopne
cs
and
mov
mov
pop
adc
and
add
jmp
jns
leave
xchg
scas
outsl
mov
xchg
xor
push
hlt
jbe
add
aas
in
sbb
sub
fidivs
pop
push
jae
jnp
aaa
xor
stos
std
insb
xor
mov
pop
fmulp
adc
jae
mov
test
pop
fwait
out
loope
cmp
inc
rolb
cld
cwtl
jne
push
cmc
or
cltd
and
mov
insl
lret
pushf
cli
jl
arpl
cmc
loopne
fnstsw
out
adc
movups
jnp
int
or
int
out
or
test
into
xor
insl
dec
aas
cld
sbb
adc
cli
or
fcmovnu
xchg
lods
daa
mov
sub
xchg
sub
push
adc
lcall
adc
xchg
inc
adc
or
push
and
adc
xor
es
add
push
or
mov
pop
stc
sbb
aad
and
lea
cld
and
nop
in
mov
mov
sahf
mov
dec
push
aad
cltd
jbe
dec
jo
das
in
dec
xlat
adc
fstl
cmp
add
mov
mov
pop
inc
ret
in
insl
mov
mov
add
loop
push
add
jo
sub
in
jbe
or
js
jne
rclb
cmp
jmp
not
mov
into
xchg
push
mov
lret
mov
mov
pop
subl
push
or
xor
xor
sub
push
sahf
shrb
das
imulb
movsb
repnz
pop
add
popa
and
inc
mov
into
call
call
cmc
inc
cmp
mov
imulb
dec
fs
rcrl
pushf
sub
jmp
fcmovne
jnp
lret
pop
imul
pop
lcall
mov
xchg
pop
mov
mov
call
dec
out
mov
cwtl
push
pop
fidivl
pop
stos
pop
clc
inc
gs
arpl
jge
fmulp
ficomps
out
pop
in
inc
mov
jb
push
mov
push
imulb
jnp
ss
adcl
jp
lret
stos
or
xchg
add
xchg
cli
cmpsb
or
repz
push
cli
mov
sbb
loopne
ret
xlat
xchg
fcoml
clc
jo
xchg
add
push
jecxz
sbb
iret
push
stos
dec
int3
inc
dec
subl
and
xor
xchg
fistps
clc
sub
lea
mov
adc
cmpsl
and
imul
add
jp
js
rep
push
xor
cld
sti
pop
fmuls
push
orb
fstpt
popa
cmpsb
ffree
pop
imull
add
adc
iret
fs
imul
and
or
mov
fisubl
ds
mov
push
iret
pop
inc
in
shll
dec
cmp
jae,pn
dec
test
dec
aaa
push
cltd
ds
in
rorl
lods
mov
insl
fidivrl
sub
push
and
mov
ret
xor
daa
shl
out
mov
xchg
aad
xchg
mov
sarb
loope
aaa
add
lock
sti
in
imul
jmp
stos
push
test
jmp
dec
cmp
stos
xchg
daa
in
insb
and
lret
xor
int3
into
std
push
pop
dec
xor
shrl
enter
mov
jg
dec
enter
fcoms
cwtl
daa
or
xor
insb
ja
xchg
ret
lock
mov
popa
or
xor
cmc
xchg
sub
out
dec
roll
or
inc
push
xchg
and
test
pusha
pusha
daa
aaa
add
inc
jo
cmp
add
enter
sar
inc
call
pop
std
xor
jns
push
lcall
negb
fstpt
sbb
mov
sub
mov
iret
pop
rcll
sub
mov
outsb
gs
pusha
cltd
mov
in
loopne
popa
aam
scas
add
sbb
push
add
jmp
arpl
or
ljmp
adcb
pop
outsb
mov
jecxz
nop
xchg
mov
xlat
inc
aas
shr
cmp
movsl
mov
pop
fidivrs
lret
dec
mov
or
and
int3
push
add
sub
call
mov
out
mov
and
mov
jmp
mov
adc
je
jno
sbb
adc
pop
push
das
inc
lret
pushf
mov
cmpsl
sbb
out
stc
xorb
dec
or
in
and
je
cmpl
mov
push
repnz
iret
les
movsb
xchg
add
push
dec
and
repnz
inc
insl
jae
insl
in
xchg
or
mov
jno
ret
xor
mov
aad
cmp
add
inc
pushf
add
xchg
imul
cmp
in
push
jg
cltd
xlat
push
xchg
imul
inc
out
xchg
dec
fcomp
add
movhps
xchg
scas
push
jmp
fstpl
dec
sub
mov
and
push
sub
loopne
dec
mov
sub
push
nop
push
dec
fisttpl
std
xchg
inc
cli
mov
ss
push
and
xchg
push
or
into
jo
fs
or
mov
daa
push
xchg
sub
outsb
pop
test
inc
repz
fsubl
stc
loopne
and
sbb
or
test
ret
jl
pop
sub
lcall
repnz
lahf
sbb
dec
pushl
ja
fisubl
pop
in
mov
pushf
or
repnz
lcall
std
imul
mov
test
or
xchg
and
sarb
fucomp
pop
test
push
dec
cmpl
push
mov
sbb
sarb
sbbb
sub
mov
adc
das
sbbl
sub
dec
and
test
addr16
jl
inc
lret
add
inc
lret
loop
mov
pop
adc
stos
rorb
jl
shrl
xchg
push
gs
mov
out
popa
push
adc
addr16
push
lret
repnz
incl
cmp
in
mov
into
push
dec
mov
cmp
int3
push
xchg
dec
pop
outsb
push
sub
pop
inc
lods
jnp
loope
movb
add
faddl
xchg
mov
and
ss
xchg
mov
or
jo
pushl
imul
push
pushf
push
or
push
icebp
sbb
jns
xchg
aam
mov
clc
les
iret
leave
dec
lock
aas
sub
mov
mov
and
xchg
scas
jl
mov
push
shrl
push
cs
xor
jmp
add
fimuls
test
add
pusha
cltd
dec
hlt
jmp
imul
out
aam
test
jl
or
sbb
push
and
subl
into
pop
repz
sub
stc
sub
push
popa
mov
jae
xor
int
inc
ret
xchg
sub
aam
mov
stos
xchg
mov
push
add
out
jb
sub
mov
sbb
fs
mov
mov
test
xchg
xor
outsb
xchg
cs
push
push
outsl
jp
call
test
testl
and
mov
cmp
sub
cmp
scas
les
pop
adc
stos
dec
xchg
ret
mov
add
mov
int
lahf
or
sahf
lods
add
aam
push
mov
lods
push
xchg
call
imul
cli
add
mov
pop
sub
or
mov
sub
test
mov
imul
loop
mov
add
or
adc
inc
das
gs
add
lds
enter
ja
push
fsubl
sahf
jne
lods
fwait
js
iret
movsb
aas
loopne
push
icebp
sbbb
aam
add
jp
mov
xlat
or
std
pop
sbb
cmp
inc
inc
ds
add
or
icebp
rorb
cmpl
pop
mov
data16
add
sarl
lret
pop
mov
mov
cltd
cmc
sbb
jns
cli
mov
adc
push
aad
andb
outsb
fwait
ret
xchg
stos
or
es
cld
das
int3
std
fiaddl
repnz
push
xor
xchg
outsl
push
sbb
sub
lret
inc
xor
xchg
enterw
out
push
leave
nop
scas
mov
lds
aaa
push
mov
mov
sti
xchg
aam
inc
sti
push
loopne
movsl
fadds
inc
cs
jb
cwtl
scas
lahf
mov
sub
mov
xor
add
push
sbb
into
jg
xchg
popa
out
xchg
or
mov
dec
xchg
cltd
push
sbb
pop
adc
jo
mov
sbb
pop
int
and
mov
outsb
fdivs
imul
dec
mov
loope
jge
xor
adc
mov
xchg
sbb
inc
cltd
push
aam
xchg
stos
xchg
pop
or
aaa
xchg
movlps
stos
dec
sbb
daa
movsl
mov
pop
sti
inc
push
add
pop
scas
cli
jb
mov
jo
fdivl
sub
cmp
test
mov
xor
adcl
fisubl
lahf
popf
xchg
dec
jle
aaa
nop
mov
jle
pusha
test
call
stc
aad
mov
sub
adc
xor
nop
divl
jg
pop
outsb
pop
xchg
fwait
mov
loop
les
int
jecxz
sub
pusha
add
mov
cmpb
push
cmp
negb
jbe
scas
imul
mov
ss
push
clc
add
xor
leave
jno
push
hlt
dec
sarb
negw
insl
dec
pusha
push
addr16
mov
mov
loopne
in
push
sub
icebp
inc
mov
add
call
cmp
imul
mov
leave
fildll
cld
in
inc
sub
add
dec
shrb
aam
cmp
pop
ret
hlt
xor
inc
stos
ror
fiaddl
les
xchg
push
inc
jb
rorl
jp
std
pop
gs
inc
xchg
pop
mov
jbe
movsl
and
mov
and
enter
out
add
fcompl
gs
sub
adc
or
mov
xor
xchg
jmp
dec
jae
sahf
push
cld
xchg
adc
data16
push
dec
xor
xorl
lods
sbb
insb
push
pop
imul
int3
daa
jno
inc
sarb
cmp
bound
jae
mov
mov
xchg
lahf
fldenv
arpl
arpl
lea
mov
pop
sar
dec
mov
inc
sub
loopne
lods
xchg
clc
inc
xor
add
addr16
push
mov
in
jne,pn
inc
xor
ljmp
rcrl
outsl
in
in
stos
mov
lods
and
nop
pop
mov
jbe
mov
push
lret
xor
rorb
jge
xchg
orl
test
stos
addl
cmp
cwtl
arpl
subb
jl
es
add
lods
dec
fimull
leave
xchg
pushl
adc
popl
jb
loope
pop
inc
lret
mov
pop
mov
mov
int
jnp
mov
gs
xchg
sub
push
pop
jecxz
arpl
test
mov
jl
in
int
jecxz
mov
jmp
mov
sbb
pop
push
jmp
xchg
mov
sub
jo
mov
popa
pop
inc
rolb
movsl
jno
cli
or
lahf
subl
add
lcall
ljmp
ja
jae
cmp
fadd
les
out
dec
addr16
push
jp
pusha
loopne
xchg
icebp
cmp
cmp
pop
test
outsl
pusha
int3
mov
and
mov
jge
mov
xchg
stos
dec
loop
loopne
add
lods
ficoml
cmp
aas
mov
jl
fistpl
inc
cmp
push
ret
inc
mov
jo
out
sub
sbb
cld
lahf
cmp
popf
lods
out
xor
les
xor
sahf
leave
fdivp
sbb
ja
dec
cli
and
mov
lods
xor
notl
jl
jns
xor
stos
push
cmpsb
cli
rorl
daa
mov
std
jge
inc
call
imul
xlat
cmp
iret
jno
add
sti
inc
insl
xorb
jae
inc
cmp
adc
sbb
loope
jle
decb
movsb
mov
lock
push
scas
scas
sahf
fwait
mov
cmp
cmp
les
loope
les
adc
jb
test
mov
push
mov
fwait
jno
outsl
ret
mov
add
mov
sub
mov
dec
inc
ss
call
or
arpl
loopne
es
inc
ja
adc
push
in
addl
mov
xor
add
imul
loope
sub
inc
pop
dec
jecxz
mov
mov
and
adc
cltd
faddl
clc
dec
or
adc
movsb
call
mov
nop
and
repnz
aam
fstpt
push
cmpsb
lret
call
jmp
inc
ds
adc
xchg
in
cmp
stos
lret
xor
adc
or
sbb
clc
dec
iret
popf
ss
pop
or
test
popa
lret
jo
pop
shll
add
out
pop
cmp
and
shll
inc
aas
add
push
lock
inc
jmp
dec
mov
jle
lahf
mov
dec
push
or
and
loop
sub
jp
ret
loop
in
jp
jmp
ss
ds
gs
lods
shlb
xor
rcrl
mov
jns
push
test
imul
loopne
or
out
mov
jmp
mov
mov
popf
jb
xchg
cltd
fidivs
fisubl
push
jnp
mov
shlb
addr16
es
js
scas
clc
scas
xor
pop
mov
dec
mov
mov
std
dec
pop
ljmp
mov
dec
mov
stos
adc
pop
pushl
insl
xor
pop
add
mov
cmpb
out
sbb
dec
std
lcall
loope
fs
dec
mov
xor
sub
pop
inc
sub
push
out
add
js
scas
pop
or
mov
adcl
mov
fnsave
mov
cwtl
iret
cmp
pop
push
xor
sbb
mov
mov
fisubs
cmp
mov
sub
shlb
popf
mov
pop
daa
lret
pop
xor
push
or
je
jbe
int
mov
jg
push
sbb
rcrb
js
incb
xor
jl
pop
roll
stos
add
ret
je
or
mov
jne
or
fdivrp
insl
dec
cltd
aas
xlat
notl
int3
mov
daa
outsb
into
push
mov
pop
pop
add
out
xchg
mov
aaa
push
out
divb
outsl
pop
mov
add
cmp
inc
idivl
xor
lods
xchg
mov
adc
mov
popa
inc
loope
xchg
sbb
inc
fcmovnbe
or
sub
cmpsl
dec
fwait
test
out
jne
and
cmp
add
aaa
xor
mull
insl
stos
jle
xchg
cs
lea
cmp
sbb
jge
mov
mov
repnz
data16
loope
sub
stos
xchg
add
fs
in
jmp
xor
outsb
in
ja
pop
cld
aaa
mov
xchg
in
imul
pop
adc
xor
pop
dec
adc
es
push
add
mov
and
and
loopne
negl
mov
test
fs
push
xor
mov
and
mov
pop
jno
jp
in
mov
inc
out
push
test
out
pushf
pop
lock
lock
aaa
sarl
dec
shl
add
in
push
fdivrs
dec
mov
ss
dec
inc
lods
aad
inc
adc
repnz
test
mov
cmpsb
inc
movsl
jg
mov
push
in
dec
stos
jle
inc
sbb
sbb
ljmp
mov
inc
xor
and
or
pop
dec
xlat
xchg
dec
or
cmpsl
pop
mov
stos
adc
jmp
cmp
or
mov
xchg
jl
xchg
cli
lea
cs
sahf
inc
push
sbb
dec
insb
ficoms
insb
clc
jnp
out
dec
dec
je
idivl
mov
or
sti
iret
push
and
cld
adc
call
in
adc
popf
xchg
pop
jp
repz
xor
cwtl
adc
add
and
add
dec
mov
push
pop
mov
rcll
adc
xchg
rol
xchg
out
ja
cmp
fcoms
xchg
sub
mov
inc
mov
mov
in
xchg
stos
lcall
mov
xchg
aaa
out
loopne
out
clc
loop
cltd
out
icebp
clc
gs
aad
mov
xchg
and
test
outsb
lahf
add
pop
ret
int
mov
cmp
inc
mov
test
or
xor
dec
jmp
arpl
adc
xchg
dec
add
pop
fimull
add
loop
fisubs
aad
sub
xchg
lret
adc
push
push
incb
push
ret
lds
cmp
push
push
nop
xchg
imul
out
lods
push
mov
subl
xchg
insl
lret
es
repnz
jno
call
fs
fdivrs
pop
mov
and
bound
out
bound
mov
pop
aas
cmp
hlt
fcmovnu
clc
andl
cmc
fbstp
mov
lret
insl
xchg
mov
mov
mov
es
leave
sub
mov
std
js
leave
xor
repz
push
popf
fnstenv
cli
add
sbb
jb
pusha
jno,pn
jb
in
or
int3
repz
shr
gs
inc
call
test
outsl
stc
dec
imull
push
jnp
out
xor
cwtl
int
mov
shll
bound
inc
cwtl
mov
adc
addr16
notb
mov
add
pop
lea
jle
scas
xlat
or
jg
and
or
pop
outsl
pop
divl
mov
sbb
add
sub
in
push
roll
fidivs
pop
xchg
cwtl
xchg
jo
shl
out
dec
shlb
in
xchg
int3
ss
ljmp
xchg
nop
add
jo
adc
mov
mov
mov
fildll
sub
cmpsb
xor
push
insb
mov
psrlw
cltd
in
test
cmp
add
mov
test
push
int
sub
add
outsl
lahf
adc
in
adc
popf
lods
pop
dec
lea
pop
movsl
lea
push
sub
movsl
dec
mov
add
pop
fidivrl
push
adc
out
mov
cltd
add
je
fcoml
jle
pushf
lahf
push
out
data16
dec
add
cmp
push
rcrl
mov
stos
bound
inc
mov
aam
into
pop
pop
push
push
mov
dec
inc
mov
dec
test
and
lcall
mov
or
fmuls
cmp
jl
jge
jae
insb
adc
xor
jl
adc
mov
push
xor
fildll
push
adc
ror
bound
daa
aam
cmp
jno
pop
test
push
mov
adc
mov
jae
mov
sahf
cmp
pop
aad
jg
sub
add
and
scas
pop
notb
cmpsl
loopne
rorl
aad
inc
or
cmp
into
pop
pop
ficompl
adc
rolb
mov
enter
mov
ret
xchg
rdpmc
jb
jg
inc
decl
mov
dec
and
fwait
cmp
arpl
or
adc
sbb
jno
inc
mov
das
lcall
out
insb
pop
inc
mov
xchg
scas
jo
sbb
iret
sub
xor
jnp
pushf
dec
jns
enter
and
pop
orl
into
pusha
xor
mov
out
test
fwait
pop
js
xchg
or
call
dec
inc
fcmovu
pop
mov
xor
inc
jmp
mov
and
jle
cmp
iret
mov
mov
adc
dec
imul
sahf
scas
jnp
rol
cwtl
dec
push
sbb
ror
aaa
jp
std
add
pop
or
mov
add
lods
jnp
jmp
test
add
mov
mov
bound
lret
jne
pop
clc
iret
outsl
sbb
dec
imul
or
leave
daa
fsubs
daa
mov
add
in
sahf
loope
imul
aas
inc
and
ret
repnz
jbe
mov
adc
mov
lods
mov
push
sti
loope
in
mov
mov
xlat
pop
gs
mov
mov
or
mov
mov
sub
cmp
pusha
mov
mov
xor
shrb
outsl
mov
mov
jbe
ja
push
scas
jns
pop
ljmp
cli
dec
jae
nop
mov
arpl
push
addr16
aad
dec
xchg
dec
fwait
out
insb
out
or
ret
mov
adcl
or
stos
mov
push
mov
add
insl
mov
test
pop
testl
subb
lea
or
lods
bound
xor
sub
aas
lods
mov
sbb
int3
ficoms
dec
lods
mov
in
movsl
xor
aaa
sub
mov
sub
pop
sti
test
out
xchg
inc
out
icebp
aad
repnz
push
push
shll
pop
fcoms
jae
fwait
out
popf
xor
gs
jae
push
push
adc
fs
dec
insb
pushf
ret
and
inc
xchg
mov
mov
mov
xchg
cmc
mov
popa
subl
jl
sub
std
mov
shrl
test
push
ljmp
bound
sbb
test
lock
or
sub
push
sbb
xor
push
push
test
adc
xor
mov
ret
mov
add
mov
pop
push
mov
inc
imul
mov
sub
cmp
jmp
dec
fldl2e
insl
mov
js
lret
sub
insb
arpl
kmovw
add
out
pmulhw
inc
popa
lret
inc
cmp
mov
mov
sbb
cmp
orl
enter
mov
fcoms
jno
cmpsl
or
and
fdiv
pusha
add
in
cwtl
pop
lret
ss
js
cwtl
pop
inc
daa
mov
inc
int
pop
mov
addr16
in
hlt
inc
cmpsb
leave
mov
aam
repnz
and
pcmpeqw
stos
jge
in
lahf
lds
cmp
jnp
or
mov
lahf
push
xlat
imul
and
cmc
pop
in
pop
push
addr16
in
fs
sub
dec
xor
mov
addb
inc
add
call
int3
xor
pop
test
dec
aad
imul
sub
pop
es
inc
mov
fildll
xchg
dec
dec
lahf
arpl
icebp
pop
addr16
inc
mov
out
dec
jle
sti
out
push
mov
popa
pop
pop
lods
jl
mov
dec
add
lret
out
subl
dec
adc
js
xchg
stos
insl
sahf
lret
sbb
inc
mov
jecxz
loope
leave
push
lcall
stos
ficoms
cmpsl
xchg
leave
sbb
mov
in
ja
add
cli
hlt
add
push
jne
pushf
jae
fisubs
push
cmp
aaa
loopne
out
arpl
add
aaa
mov
test
mov
mov
scas
ss
in
adc
punpckhdq
sbb
addr16
sbbl
cmc
mov
dec
and
cmpsl
push
ja
ss
cmp
test
scas
push
push
je
stos
test
cmp
rorl
and
pop
and
sti
sub
punpckhdq
std
ret
bound
mov
cltd
and
pop
sub
mov
hlt
and
mov
fst
insb
mov
xor
lods
add
cmp
mov
incb
arpl
xor
mov
xchg
popa
xor
push
xchg
psrld
rcll
sbb
push
shll
xor
cmc
dec
xlat
bound
sub
outsb
cld
pushf
jg
in
sarb
push
xchg
dec
push
lock
loopne
fdivp
aad
pop
lds
pusha
mov
jno
mov
xchg
decb
dec
div
mov
cltd
mull
add
pop
cmp
push
lret
mov
xchg
sbb
fs
lds
inc
out
lds
push
shll
std
das
dec
push
jno
push
adcb
dec
icebp
push
mov
repnz
inc
pop
sbb
mov
jg
push
js
xchg
jp
pop
add
mov
sbb
push
mov
mov
sub
je
idivl
jmp
push
mov
mov
scas
xor
mov
jmp
pop
bound
iret
sub
adc
lret
lea
cli
cmpsl
mov
add
jecxz
and
sub
sbb
add
imul
or
inc
repz
out
dec
mov
je
mov
div
adc
add
adc
test
bound
and
dec
dec
scas
aas
add
enter
lea
clc
cwtl
fstp
out
jno
outsb
nop
pop
mov
or
xchg
xchg
mov
repnz
hlt
popf
fsubr
sub
fcompl
jo
jecxz
mov
cmp
lods
dec
pop
repz
lgs
out
push
mov
and
xor
mov
xor
or
loop
movsl
adc
pop
adc
cld
leave
imul
insb
sbbl
jne
pop
out
mov
inc
inc
push
cmpsb
js
movsl
das
lcall
jecxz
and
cwtl
int
ret
mov
mov
in
jge
fcomps
inc
adc
jl
dec
mov
push
and
inc
push
icebp
jbe
decb
adc
imul
push
cmovnp
cs
lahf
inc
mov
fmul
shld
and
sub
mov
xchg
mov
int
sbb
pop
mov
negl
pop
or
int
jne
aas
pop
cmp
shl
xor
add
mov
mov
adc
nop
mov
andl
xchg
dec
stc
or
int3
mov
dec
test
mov
filds
mov
enter
stos
cwtl
fldt
jle
lock
dec
push
and
cmp
inc
arpl
sbb
lea
repz
sar
cmpl
fstps
sbb
push
pop
movsl
test
insb
addr16
cwtl
adc
mov
dec
dec
dec
mov
push
shrb
xchg
pushf
inc
test
inc
and
cmpsl
xchg
inc
xchg
in
or
adc
jns
cld
hlt
mov
shll
push
jecxz
add
test
inc
in
ja
xor
jnp
add
jbe
inc
loop
jb
and
push
mov
aas
and
jmp
ret
and
int3
insb
or
push
insb
scas
enter
cmp
pop
cli
or
sbb
imul
push
jno
and
inc
loop
movsl
iret
push
pop
jmp
sub
and
cld
cmp
xchg
push
aas
test
sti
stc
loopne,pt
xchg
fcmovb
lcall
cmpsl
stc
adc
push
aas
xor
or
jb
addr16
iret
sbb
imul
shll
dec
cmpsb
and
in
mov
imul
ds
pop
cmpsb
add
stos
inc
add
mov
lods
pop
mov
aas
xor
lahf
jmp
addr16
insb
lods
xor
pop
les
cmp
cltd
pop
or
or
xchg
xor
ja
or
add
pop
popl
stc
inc
mov
lock
jns
jae
pop
mov
das
bound
xchg
loopew
incb
cld
int3
sub
orb
sbb
gs
add
sbb
inc
stc
add
xor
popa
sub
lret
xlat
rolb
cmp
cmpsb
xor
push
add
ljmp
jo
inc
jno
mov
jo
sarl
sub
clc
push
outsb
push
jle
push
sub
je
lods
ss
mov
inc
sbb
faddl
pop
mov
adc
cmp
cld
cwtl
outsb
movsb
adc
push
adc
in
pop
mov
insb
dec
cs
mov
sub
mov
iret
xchg
inc
pushf
and
movsb
test
sbb
cmp
ja
xor
or
jns
leave
arpl
mov
push
jns
or
movsl
fnstcw
fldcw
imul
jns
adc
pop
ret
movsl
clc
int3
pop
jg
nop
or
mov
jmp
enter
jecxz
xor
push
enter
jns
lods
jg
fwait
jp
jae
leave
xchg
cmp
mov
shrb
cmpl
outsl
push
mov
mov
jmp
xchg
je
stos
ud2
push
outsb
pop
adc
in
ljmp
ret
push
dec
ss
mov
push
pusha
or
rolb
jns
popf
cmpsb
lods
mov
dec
ret
lcall
jle
push
popf
jne
imul
loopne
dec
xor
test
lret
int3
iret
js
and
mov
repnz
sti
push
outsb
jge
xchg
xor
addr16
inc
cs
dec
daa
xor
stos
cmp
cmpl
adc
sbb
xor
nop
popf
mov
inc
inc
push
jns
or
scas
xor
das
cmp
rorb
and
lahf
mov
and
imul
adc
popl
xchg
aad
mov
pop
bound
rcrl
sub
lods
pusha
ja
fcomps
sbb
and
lock
add
pop
cs
mov
ret
inc
or
dec
ljmp
pushf
push
jb
jnp
repz
call
push
dec
mov
add
and
popl
out
pusha
int
stos
jge
mov
dec
rcll
fiaddl
js
pop
sbb
rcll
outsb
inc
mov
sbb
in
mov
fdivrl
bsr
nop
sarb
mov
adc
xor
outsl
push
adc
daa
arpl
cli
in
fcompl
xchg
aad
call
pop
mov
int3
push
ret
sti
or
jge
insb
cmp
fidivl
int
sar
divl
mov
push
xchg
mov
mov
push
icebp
fs
loop
dec
pop
leave
imul
sub
push
inc
mov
loope
inc
jmp
dec
js
push
pop
ja
fdivs
cmp
push
rcrb
jne
rorb
jo
repnz
lcall
mov
mov
loop
pop
sub
mov
int3
cltd
and
popa
adc
shrb
mov
bound
popa
mov
fidivs
int3
adc
lock
and
dec
cmp
jno
push
xchg
inc
sub
sbbl
sbb
pusha
mov
sub
adc
repnz
xchg
ffree
sub
and
dec
lret
icebp
add
or
mov
aaa
push
dec
cmp
xchg
or
inc
packssdw
push
jle
ret
aam
fs
loop
scas
push
ret
enter
jbe
add
add
mov
push
fists
jg
in
mov
mov
mov
push
dec
test
pop
pop
notl
xor
lock
inc
mov
int
push
std
and
ss
lock
pop
mov
out
loop
push
cmp
pop
push
jne
add
daa
mov
stos
orb
pop
mov
jnp
shll
test
frstor
ret
daa
mov
andb
out
mov
and
mov
pop
data16
dec
push
lret
pop
xchg
jmp
sar
push
mov
jle
or
daa
inc
ljmp
mov
out
sub
sub
cmp
mov
adc
dec
mov
cli
sbb
andb
xor
fadd
jmp
xor
bound
xchg
gs
repz
and
dec
push
int3
into
aam
xchg
rclb
jbe
cmc
movsb
mov
sbb
mov
jmp
je
dec
test
xchg
adcb
inc
sub
orb
xchg
add
aad
in
adc
jl
cli
dec
mov
repnz
add
or
das
jb
jno
or
mov
stc
sbb
xchg
iret
je
test
push
mov
into
xlat
xor
or
scas
shrb
in
mov
dec
lods
lock
out
pop
and
or
inc
dec
imull
cltd
nop
xorl
jns,pt
shr
loop
bnd
loope
and
aaa
shll
mov
and
fs
add
call
or
divl
outsl
cmp
jb
jg
mov
mov
and
in
imull
rcr
call
cmpsb
outsl
insb
fidivrl
mov
pop
jmp
mov
mov
ss
aam
jb
lds
outsb
iret
mov
sub
mov
adc
insb
pushl
push
or
mov
add
xor
popf
fadds
adc
leave
ret
dec
adc
loopne
les
xchg
hlt
jae
mov
and
or
clc
mov
shl
pop
hlt
in
les
lss
lret
es
pop
arpl
dec
push
decl
mov
scas
out
jmp
mov
push
cmp
cmp
lods
scas
push
adcl
repnz
and
mov
enter
jno
mov
and
sti
add
jmp
in
stos
dec
ss
push
je
shlb
xor
pop
inc
stc
pop
jbe
mov
xchg
push
push
sub
jg
mov
in
mov
rcll
pop
cltd
cmp
test
in
mov
in
ss
repz
dec
and
mov
out
and
adcb
out
jle
dec
lock
jle,pt
cltd
fsub
jg
sub
aas
movsl
iret
xchg
shlb
lock
add
cmp
mov
sbb
and
push
pop
cmpsl
push
ja
jg
pusha
movsb
addr16
bnd
movb
rolb
ljmp
das
mov
imul
hlt
jp
xor
lret
sarl
scas
mov
push
push
fnstcw
pusha
test
lret
divb
lods
hlt
cmp
dec
lock
cmp
mov
test
sbb
fidivs
xor
incb
lret
lods
xor
xor
out
xor
dec
mov
dec
mov
adc
or
jbe
popf
add
rorb
mov
sbb
fwait
jno
and
test
iret
sahf
push
dec
jnp
adc
xor
mov
lahf
mov
les
xchg
fldlg2
mov
cli
or
cmpsl
ror
out
sahf
inc
dec
xor
pop
stos
pop
rorl
cmpsb
ror
inc
dec
lea
sub
xchg
out
mov
push
mov
sarb
daa
pop
inc
mov
pop
addl
bound
push
daa
clc
fmuls
inc
rolb
adc
or
in
insb
scas
push
cmp
xchg
inc
dec
dec
push
out
scas
jp
lods
inc
inc
test
push
and
mov
jnp
in
dec
loopne
add
je
mov
sbb
cmp
lret
sbb
jge
test
scas
adc
cmp
aad
mov
dec
xchg
stos
push
pop
imul
inc
pop
repz
loopne
repnz
ret
inc
pop
adc
mov
xchg
out
outsl
rorl
cmp
movsl
cmc
jne
jl
cmp
fisttpl
mov
rclb
sub
insl
jb
rcrb
jmp
push
pop
mov
cmp
xchg
push
jne
aas
or
sbb
push
and
ss
cmpsb
cld
sbb
mov
fs
jbe
jnp
pop
sbb
mov
xlat
rcrb
dec
dec
out
out
outsb
loope
pop
xchg
and
sbb
jp
fcmovnbe
pusha
or
testb
push
mov
dec
daa
pop
sbb
insl
push
ret
add
hlt
lods
jno,pn
xchg
rcrl
mov
sub
js
cltd
lea
mov
sub
xchg
mov
push
leave
jmp
xor
mov
fs
xchg
loopne
push
mov
jecxz
mov
imul
dec
gs
ret
pusha
sarl
push
jg
cmpsb
out
xchg
sbb
cmpl
xchg
mov
and
loopne
in
xchg
sub
lret
mov
fdivs
aad
iret
inc
stos
adc
lods
cmp
lock
ror
jl
push
into
mov
repz
data16
dec
data16
out
pop
or
flds
sahf
pop
xchg
cmc
inc
in
mov
lcall
push
cs
add
add
pop
lahf
shrb
es
repz
cwtl
add
pop
add
and
cmp
loop
test
push
xor
repz
dec
scas
mov
xchg
into
loope
stc
neg
or
inc
fiaddl
dec
daa
sarl
xor
insb
mov
scas
loope
int3
mov
aad
mov
sbb
mov
sahf
pop
or
dec
jp
je
jecxz
or
rol
int3
xorl
mov
insl
imul
jl
sbb
push
and
pop
aaa
mov
daa
adc
cmpsl
xchg
arpl
inc
dec
add
jp
mov
lahf
and
and
inc
into
cmp
out
test
jae
leave
addl
mov
test
fldl
aaa
mov
inc
inc
jnp,pn
mov
fwait
mov
sbb
aaa
or
sbb
fmull
push
inc
add
sbb
hlt
ret
cmp
xchg
and
cmpsb
pop
sbb
mov
mov
getsec
sbb
shl
mov
repnz
stc
sbb
imul
sbb
mov
add
and
mov
add
pop
mov
lret
lds
mov
cmp
adc
xor
test
rcl
xchg
jl
lds
ficomps
and
rorb
inc
into
aaa
imul
add
cli
aad
adc
cmpsl
lcall
sub
push
push
jo
ja
mov
leave
push
jg
add
or
loopne
inc
lcall
inc
mov
mov
pushf
xchg
rorl
out
sbbb
pop
lea
mov
inc
daa
cmp
leave
pop
pop
adc
xchg
mov
add
dec
int3
add
sbb
insl
fwait
xchg
inc
negl
and
pop
popf
mov
pop
adc
pop
lcall
jno
dec
std
inc
and
jno
push
mov
fistl
and
lret
mov
dec
cmpsl
mov
push
cmpl
scas
mov
js
fisubs
or
test
push
mov
xchg
mov
scas
sahf
stos
outsl
out
ss
pop
les
inc
cs
daa
pop
dec
popa
xor
out
aas
stc
jo
pop
lcall
inc
psubusb
mov
sub
sbb
mov
mov
aam
outsl
adc
inc
add
aas
pop
sub
and
jp
sahf
jns
adc
iret
fwait
ret
jle
andb
push
sub
clc
jns
xlat
inc
dec
jge
cmc
sbb
inc
rolb
or
jecxz
mov
push
aam
or
sarb
lods
lods
dec
insb
dec
lea
xor
push
fldcw
sbb
stos
faddl
cmpsb
push
insb
mov
mov
rcrb
mov
cmp
mov
callw
scas
xor
fcmovnu
pop
negl
push
xchg
testl
mov
sub
or
mov
xchg
dec
test
mov
fstpl
xchg
pop
mov
hlt
popf
dec
adc
sbb
mov
andb
in
cmp
pop
jp
js
cmp
subl
movsl
hlt
popa
shlb
mov
in
pop
add
pop
push
adc
fimull
push
pop
add
out
je
xchg
cltd
inc
sbb
lods
inc
add
push
leave
sub
jno
test
test
add
xlat
mov
mov
sub
outsl
jnp
je
scas
aad
xor
mov
add
int3
mov
imul
pop
add
leave
sbb
scas
jae
sbb
sbbb
mov
or
rcll
and
mov
movsl
lret
out
lds
fcomip
aaa
sub
pop
jns
iret
add
fdivs
mov
cmp
sbb
addr16
add
outsl
out
pop
sbb
into
dec
xor
add
fcomps
or
ds
lret
adc
mov
scas
aas
dec
xchg
jnp
hlt
push
xor
mov
lret
and
lea
popa
add
inc
iret
inc
jg
rcll
imul
arpl
mov
icebp
inc
adc
insb
mov
out
jmp
inc
cmp
mov
lahf
sahf
aam
into
clc
and
xor
or
insb
jno
shrb
sahf
jnp
fdivrs
lods
addb
iret
pop
je
aas
mov
xchg
icebp
insl
pusha
fidivrs
sub
mov
sub
xchg
mov
mov
push
mov
sti
popw
inc
cmp
adc
push
ljmp
mov
mov
push
out
sub
push
or
mov
ds
jnp
fadds
cmp
xchg
cmp
or
ljmp
dec
mov
je
pop
out
push
inc
ss
nop
xor
fisubrl
movsl
movsb
in
sub
mov
pop
cmp
sub
imul
adc
add
xchg
xor
sub
mov
adc
scas
xchg
ss
test
repnz
stc
int3
mov
inc
and
pop
xchg
pop
sbb
xchg
insl
nop
test
aam
movsl
repz
and
sti
lods
ljmp
jns
data16
jge
sub
jo
aad
xor
pop
mov
mov
movsb
inc
cmc
addr16
adc
lcall
add
jae
push
arpl
pop
and
sti
lds
ds
mov
xchg
dec
adc
sub
sub
dec
sbb
and
lahf
dec
xchg
addr16
push
popa
loopne
leave
pop
test
scas
lret
adc
inc
sub
mov
or
and
inc
xchg
test
loopne
mov
sub
loop
jne
sub
inc
pop
mov
loopne
xchg
adc
incb
das
pop
lock
ja
sub
sub
xlat
xchg
ljmp
and
dec
push
into
lret
push
cmp
insl
aam
out
pop
lock
dec
xchg
mov
xchg
insb
movsb
ljmp
movb
outsb
pushf
out
mov
je
jne
adc
xor
std
or
xor
addr16
sbb
inc
pushf
fsubrl
loope
js
das
lret
js
pop
lock
loope
ljmp
pop
repz
jnp
xchg
pop
jns
pop
loope
and
cmpsb
clc
enter
mov
or
jno
into
push
aam
jo,pn
or
je
xor
pop
sbb
addr16
adc
repz
mov
push
push
sub
cld
inc
pusha
fcoml
cltd
jne
ficoms
cmp
into
test
rcl
aas
cmp
pop
push
push
roll
pop
out
test
ret
sub
arpl
fldl
push
aad
sub
cwtl
fisttpl
push
jb
shrb
sahf
dec
ficompl
fwait
mov
mov
cwtl
lods
xor
bound
incl
rcrb
into
pextrw
lahf
mov
xlat
fistps
lods
xchg
pop
dec
call
int3
mov
add
mov
lret
addr16
mov
sub
pop
vdivss
in
nop
jno
out
cmpsb
out
imul
jecxz
fdivrl
xchg
aaa
sbb
sub
icebp
mov
sbb
sbb
int3
mov
sbbl
lds
mov
out
mov
jae
xor
rcpps
sbb
shlb
mov
stos
and
lret
mov
ror
into
dec
jne
push
cmp
aas
std
test
jns
adc
data16
cmp
add
jno
push
faddl
nop
sub
lret
imul
mov
inc
aam
divl
test
sub
ja
adc
inc
sub
mov
xor
add
sbb
pop
pop
mov
push
ret
xor
push
xchg
push
xchg
lock
stos
and
xchg
sbb
mov
aaa
sbb
das
or
lret
sahf
sbb
fnsave
sahf
mov
cmp
test
in
sub
ja
sbb
pop
out
cwtl
int3
repnz
fnstcw
sbb
push
sbb
xchg
push
and
sahf
cmpsl
sbb
or
jge
and
sbb
mov
icebp
adc
pop
rcll
jg
cmp
ret
shl
xchg
dec
mov
xor
mov
xchg
and
lcall
sub
dec
pusha
add
adc
test
sarl
and
or
adc
xchg
or
mov
sub
lahf
lret
pop
sbb
cmp
scas
xlat
punpcklwd
ljmp
cltd
into
sbb
and
ficomps
push
mov
loopne
jl
cmp
dec
outsl
rorb
jecxz
nop
loopne
outsb
stos
push
xchg
les
lds
out
mov
ret
rorl
and
sarl
ja
mov
cli
mov
jo
push
sub
int3
dec
xor
mov
push
stos
mov
inc
fbstp
iret
sbbb
xorl
dec
jl
ret
pop
pcmpeqb
and
sub
insb
mov
pusha
dec
adcl
mov
popf
fildl
fidivl
out
jecxz
ja
mov
xor
pop
jmp
cmp
bound
clc
test
xor
inc
jno
cld
sub
xchg
or
movsb
push
add
sbb
fwait
arpl
pusha
movsl
mov
sbb
inc
sub
aad
cmp
fucomi
aad
aam
repnz
xchg
adc
sbb
mov
out
cmp
lds
out
rcll
mov
mov
mov
ds
incl
or
out
add
mov
lret
pusha
std
adc
mov
sub
dec
into
nop
shl
faddl
pop
jle
sub
cmp
popa
rorb
out
xor
paddusb
imul
gs
sub
testb
cs
aas
fs
push
je
xor
pop
divb
pop
gs
mov
mov
fstpl
movsl
pop
popa
xor
in
adc
rcll
fcomip
sub
mov
inc
mov
test
jnp
jbe
cmc
gs
shll
mov
xchg
adc
sub
mov
cmc
add
ljmp
mov
mov
lret
jmp
addr16
repnz
out
scas
outsb
cmp
mov
pop
inc
imul
push
cld
jge
scas
and
pop
push
pop
and
or
outsl
rcrb
cmp
je
les
rcr
adcl
sub
inc
out
incb
lcall
movsl
cmpsl
xchg
mov
push
add
orb
or
push
stos
test
pop
push
dec
fwait
call
jle
arpl
hlt
shlb
add
mov
jmp
jecxz
and
call
dec
test
adc
jge
data16
mov
mov
push
addl
jle
outsl
or
adc
or
push
jnp
into
repnz
pop
push
ret
jns
add
push
in
das
or
and
mov
not
dec
xor
loop
mov
cltd
into
enter
icebp
and
sbbb
scas
add
inc
dec
push
idiv
xchg
fsubrp
cmp
xor
mov
nop
inc
cld
cld
test
or
idivl
loopne
inc
cmp
shlb
xchg
test
or
lcall
clc
mov
ret
dec
fisttpl
pop
mov
or
aam
fldt
or
add
in
cld
bound
mov
mov
jbe
cmp
jle
lret
and
dec
pop
shl
fadds
cmpsl
ja
test
popa
stos
mov
in
xchg
lahf
aad
out
mov
mov
outsl
out
and
dec
fidivrl
divb
clc
push
mov
stos
jno
mov
xchg
mov
dec
enter
in
pop
in
cwtl
push
test
dec
pop
das
mov
and
or
jo
dec
test
rclb
frstor
mov
fcoms
push
xorl
cltd
imul
mov
in
pop
adc
cmp
hlt
ss
mov
bt
push
and
cmp
cltd
andl
sub
pop
pop
cld
or
jb
push
xchg
inc
fidivrs
fidivl
into
pop
adc
xlat
jnp
cmp
mov
jne
cmp
and
loop
int3
out
cld
ds
dec
mov
imul
cltd
push
pop
and
jnp
jge
cmp
sahf
shlb
fs
fwait
daa
inc
jne
rcl
es
data16
icebp
push
int3
rorb
mov
movsb
mov
mov
add
xor
cld
outsb
xchg
or
pop
frstor
lcall
out
and
rorb
jmp
cmp
jg
xchg
jge
mov
test
adc
add
sbb
mov
push
andb
xchg
and
push
sarl
imul
int
cmp
mov
not
fs
add
jae
lret
pop
xlat
jb
shl
lret
pop
xchg
mov
arpl
cli
popl
sbb
adc
xor
push
das
adc
lahf
loopne
push
les
outsl
je
int
rclb
out
add
mov
cmpsl
and
jns
addl
je
bound
rcll
into
xor
pushf
add
movsl
jle
movsb
stc
mov
rcrb
repz
addr16
add
xor
les
xor
std
rcrb
aaa
repz
ret
mov
xlat
cmpsl
xchg
adc
outsl
mov
and
cmp
jle
ret
sub
cmc
insl
push
popa
xchg
sbb
and
pop
in
adc
adc
cld
push
fisubs
push
fbstp
ss
ds
lret
add
pop
inc
sbb
imul
sub
scas
mov
mov
mov
jecxz
cmpsl
inc
enter
or
or
fsubs
mov
fcmove
popf
or
cli
ss
loope
inc
jnp
push
lret
push
xor
add
adc
add
mov
in
icebp
scas
nop
mov
out
fildl
mov
push
add
or
mov
mov
push
push
icebp
mov
fistpl
dec
add
xor
adc
jge
ljmp
push
dec
bound
jp
stos
xor
bswap
ja
and
dec
push
xchg
lret
es
mov
mov
sub
clc
rcrb
jo
scas
mov
sbb
mov
cwtl
jb
add
fsubp
cli
fmull
ffree
xor
ja
insl
xchg
mov
sbb
ficoml
aad
sub
or
fisttps
adc
das
pop
mov
nop
icebp
push
loope
add
rcl
dec
imulb
bound
stos
movsl
jle
add
cmp
in
ret
in
xor
sub
jmp
adc
fucomp
in
jecxz
jle
inc
lcall
xchg
inc
fstl
test
xchg
insl
and
lods
cld
lret
dec
imul
xor
or
fbstp
add
iret
ss
pushf
addr16
jns
xor
in
jmp
xor
push
hlt
insb
int
jno
jne
jle
mov
popa
mov
add
lods
popf
push
notb
mov
pop
cmp
test
fdivs
pop
sbb
fwait
xchg
subl
sbb
xchg
dec
xor
int3
jno
clc
fs
mov
inc
jnp
cmp
out
mov
adc
aas
mov
orl
ss
adc
jb
jns
and
lea
pop
pop
mov
adc
xchg
or
stc
mov
jge
insb
movsb
lods
mov
adc
inc
call
test
std
movsl
push
jge
adc
popa
imul
pushf
xchg
dec
lcall
push
and
cltd
enter
cmc
dec
add
lods
jae
push
jecxz
lea
sbb
cli
adc
lcall
stos
mov
daa
xchg
push
sub
pop
pop
aam
cltd
icebp
mov
mov
xchg
push
pop
ret
cmpsl
mov
cmpsl
push
in
data16
mov
adc
test
das
mov
xlat
popl
lods
push
push
xor
jne
es
movsl
sbbl
xchg
scas
sahf
pop
sbb
testl
mov
cmp
mov
jecxz
fwait
mov
movsb
sub
mov
push
pop
pop
lods
aas
fcomi
mov
test
test
adc
pop
pop
dec
cmp
lret
add
out
jmp
inc
jns
xor
loope
and
aas
mov
or
mov
rcrb
aas
int
into
dec
pop
pop
pop
in
sbb
sbb
fsub
les
mov
pop
sub
push
jae
inc
call
xchg
cli
pop
leave
iret
inc
xchg
jmp
fdivs
add
mov
int
out
mov
jbe
adc
xchg
jge
mov
imul
iret
jnp
test
out
push
sub
xchg
xor
in
mov
js
dec
cltd
inc
loop
iret
out
inc
adc
aam
in
lea
insl
pop
mov
mov
mov
lahf
shrb
dec
lods
sbbb
xor
dec
push
sub
fwait
lahf
imull
scas
cmp
popa
lahf
mov
add
lea
xor
stc
jbe
mov
mov
in
sub
push
adc
lahf
pop
mov
push
out
ret
xchg
loopne
add
js
and
add
or
cmp
xor
dec
sbb
cltd
test
xchg
fwait
xchg
mov
addr16
xlat
sub
dec
fcmovnbe
ret
cmp
inc
sti
aas
movb
xor
sub
popa
mov
shll
iret
mov
sbb
sub
lea
int
mov
fcomps
fstl
inc
mov
add
mov
pusha
fimuls
outsb
pop
sub
mov
ljmp
cmp
imul
dec
popf
push
xchg
cli
pop
xor
es
xchg
mov
ss
jae
or
stc
pop
hlt
sarb
jmp
jnp
mov
out
popa
push
xchg
dec
ss
addr16
mov
push
dec
outsl
dec
and
int3
jmp
cmp
pusha
add
xchg
mov
enter
or
sbb
add
ret
dec
xor
int3
cld
data16
push
cmp
fldt
push
mov
in
mov
jl
pop
xor
push
mov
xlat
mov
aad
cwtl
mov
scas
add
ret
movsl
cld
loope
das
mov
xchg
adc
sub
or
adc
lods
or
into
sbb
sti
cld
cld
push
mov
xchg
pop
dec
sub
mov
xchg
ds
lods
xchg
enter
mov
sar
mov
dec
ljmp
sub
js
cmp
rorb
sbb
fimuls
mov
mov
add
js
xor
rcl
in
loope
outsb
xchg
fldcw
test
pop
adc
gs
cld
sbb
testb
push
decb
rcr
jns
int3
mov
scas
ret
adc
cltd
mov
cli
out
cmp
sahf
lds
mov
cwtl
xor
sub
lret
leave
inc
test
rolb
xor
fs
adc
imul
pusha
mov
cmc
mov
test
imul
cmpl
cs
scas
mov
jbe,pt
cmp
ficoms
insb
arpl
test
mov
fsubr
hlt
popa
mov
shlb
sub
fst
out
xlat
xchg
sahf
jecxz
jp
inc
adc
mov
push
icebp
int3
dec
adc
add
data16
sub
mov
das
inc
xchg
ds
sub
inc
inc
aad
rclb
pop
scas
test
sbb
imul
pop
mov
adcb
data16
cmp
cs
dec
pop
test
test
dec
cmpsl
jnp
xor
and
mov
xchg
in
xor
stos
fbstp
dec
clc
push
jb
adc
sar
push
insb
adc
loope
inc
and
test
pop
dec
dec
mov
and
aad
es
jne
inc
aam
lcall
sub
mov
cmpsb
pop
mov
push
sbb
movsb
jae
mov
int
sub
xor
out
hlt
fwait
jmp
popa
mov
in
xchg
dec
clc
jl
repz
push
mov
lret
movl
jo
ficoms
and
sbb
addr16
pop
dec
mov
inc
or
leave
dec
mov
add
mov
mov
lea
cwtl
sbb
cmp
insl
and
ficompl
add
test
cli
fstpt
call
lds
cwtl
fcoms
mov
popa
mov
loop
mov
das
imul
and
shl
out
jo
mov
and
adc
enter
inc
test
jno
out
test
or
push
inc
loope
or
or
lcall
into
add
pop
cmpsb
cmp
push
cmpsl
mov
repz
rclb
ret
add
adc
cmp
jns
inc
shlb
lds
cmp
loopne
fwait
mov
aad
add
and
mov
fs
push
cmpsl
cmp
sbb
orl
mov
xchg
pop
xchg
xchg
loopne
rcl
sahf
addr16
sarb
pop
sbb
jp
out
addr16
lods
dec
call
push
sub
mov
cwtl
mov
xorb
xlat
push
dec
mov
pop
out
test
call
inc
popa
dec
add
xchg
bound
sbbl
sbb
adc
or
gs
and
loopne
dec
das
adc
adc
adc
mov
jmp
pusha
fs
js
addl
jge
les
cmpsb
push
mov
adc
xlat
lea
gs
adc
fcomps
mov
dec
or
sbb
lret
adc
das
add
adc
jp
repnz
jl
cmpsb
imul
add
add
sbb
mov
cmp
je
pop
push
inc
dec
push
mov
jl
sbb
mov
pop
mov
addr16
inc
xor
lret
jmp
stos
mov
popf
inc
mov
rcr
add
sub
jnp
dec
in
mov
lret
test
addr16
mov
imul
lahf
loopne
pop
push
dec
data16
fiaddl
mov
pushf
xchg
cmp
adc
test
inc
out
sbb
fcmovnb
frstor
mov
es
pusha
pop
int
rclb
std
mov
aaa
cli
outsl
push
test
loopne
xchg
jns
dec
or
popf
lea
mov
mov
and
mov
cmp
jno
inc
test
out
outsb
lods
into
pop
xlat
jns
movsl
mov
mov
mov
mov
pop
icebp
xchg
xchg
out
or
fwait
and
pop
sbb
negl
fidivrs
push
sub
adc
add
mov
fstpt
jmp
sti
inc
mov
pop
mov
push
lea
xor
xchg
gs
lods
xor
sbb
lret
enter
mov
xchg
pop
cltd
mov
inc
add
dec
push
iret
sub
sbb
mov
or
pushf
out
cwtl
and
sbb
and
enter
mov
scas
je
test
imul
sbb
stos
push
mov
push
xcrypt-cfb
cmpsl
mov
jae
insl
repz
mov
les
dec
push
insb
gs
mov
call
daa
add
leave
dec
pop
sti
pusha
push
dec
sub
inc
xor
dec
inc
test
loope
push
pop
ret
ja
sub
addr16
push
mov
int
div
subb
ds
pop
jno
invd
mov
test
inc
add
jae
aas
js
jb
outsb
xchg
jg
in
daa
lock
dec
mov
cld
in
decb
cmp
mov
fsubrl
movsb
dec
in
jno
and
shrl
std
in
push
int3
jae
sbb
jo
jbe
les
outsl
dec
test
lock
dec
inc
scas
xlat
jp
or
push
outsb
push
jmp
push
insb
mov
lret
cld
xor
shll
aaa
mov
fwait
mov
in
mov
push
jno
sbb
and
lods
sub
enter
pop
gs
sti
fdivrp
imul
pop
or
mov
xor
repnz
jle
jno
repnz
cmp
pop
jp
dec
ret
shlb
cld
jge
lret
enter
fidivs
sbbb
je
icebp
xchg
jmp
cmp
arpl
xor
mov
addr16
or
cmc
sbb
mov
jne
xchg
loop
pushf
ret
fisubl
xchg
push
pop
imul
aam
mov
stc
orb
jmp
mov
out
neg
inc
jg
iret
xor
and
enter
shl
loope
xor
jle
fiaddl
test
dec
sbb
faddp
cmp
sub
jns
mov
sahf
xchg
sar
jb
jns
pop
adc
inc
and
stc
das
sbb
cmpl
imul
push
fmull
sbb
or
xchg
flds
pop
insl
or
out
lcall
inc
fimuls
xor
mov
sub
xchg
bound
sub
cmp
and
std
lock
sub
testl
mov
pop
mov
dec
mov
xchg
or
cmc
lods
in
nop
fimuls
addr16
inc
call
sub
jbe
or
ds
xor
pop
arpl
mov
test
sbb
fnstcw
hlt
icebp
xchg
fsubrl
test
sbb
push
addb
fsubl
jne
adc
and
rcl
and
lcall
bound
push
jg
mov
orl
cs
pusha
jl
inc
push
pop
pop
pop
push
and
mov
popf
aam
sbbl
fistl
divb
dec
shlb
test
and
inc
inc
and
cmc
add
and
data16
lods
iret
hlt
xchg
sub
daa
fwait
pop
sbb
les
xor
push
ret
jo
cltd
arpl
daa
jne
fwait
dec
fcompl
adc
insb
xor
ljmp
fiadds
js
sbb
jmp
cli
daa
lods
jl
or
mov
test
inc
mov
mov
mov
int
movsb
fsts
ss
xor
push
aam
adc
jmp
jge
add
outsb
push
enter
call
and
inc
add
rorl
sti
sbb
push
lds
in
jp
dec
or
xchg
movsl
fbstp
or
mov
fsubrl
jge
xchg
inc
je
ficomps
jecxz
adc
repnz
ss
jmp
mov
xchg
pushw
or
out
ljmp
repz
cmp
sarl
mov
push
and
nop
fcmovne
add
cmpsl
mov
imul
lret
cmovnp
negl
adc
or
sbb
and
xor
addr16
cltd
add
pop
pop
sbb
popf
cmpl
jl
rol
inc
dec
push
inc
xchg
test
lahf
push
scas
in
roll
mov
jmp
movsl
mov
dec
inc
dec
mov
fidivrs
or
pushf
out
loop
sahf
sbb
lock
xor
outsb
loop
add
mov
dec
mov
cmp
lahf
outsl
xlat
cmp
addr16
jge
cmpsl
mov
int3
add
push
jl
imul
scas
loop
cmpl
xchg
dec
out
fidivrl
adc
shl
shrb
adc
jne
jb
and
xchg
int
push
gs
addr16
push
sbb
xlat
insl
mov
sub
mov
xchg
push
in
cmp
mov
sbb
xchg
aaa
lret
mov
push
mov
add
dec
jecxz
mov
pop
jne
inc
lods
xor
fdivr
ret
or
out
and
sti
shrl
pop
inc
sub
sub
adc
and
push
jbe
sahf
cmpsl
pop
or
stc
mov
call
enter
dec
add
xchg
add
lcall
cmp
jne
dec
and
pop
js
xchg
aaa
dec
andl
push
lea
sahf
fnstsw
popl
icebp
out
test
sbbb
fcom
idivl
pop
incb
pop
shlb
pop
scas
mov
xchg
lock
sub
dec
sbb
movsb
fcoml
and
lock
mov
pop
mov
xor
push
lods
fildl
in
js
adc
mov
cmp
mov
cmc
adc
inc
nop
bound
xor
movsl
xor
dec
shll
pop
mov
stos
es
cmc
repnz
cmp
fs
mov
ljmp
xor
fidivrl
test
es
cld
xor
aaa
jp
in
cwtl
or
bound
mov
inc
jne
jb
test
loope
cs
jo
xchg
mov
lcall
repz
pushf
cmp
mov
xorb
cmpsb
add
insb
imul
mov
or
popa
adc
sub
nop
out
jmp
dec
jge
enter
cmp
je
add
cmpsl
rorl
mov
stos
pop
cmp
pusha
mov
lcall
adc
push
sbb
lcall
int3
and
shl
bound
or
add
cmp
jl
int3
insb
cs
dec
push
mov
push
pop
sets
scas
lea
call
xlat
lret
xchg
mov
pop
xor
sbb
idiv
or
aad
push
fprem
mov
inc
push
ror
lahf
ja
sub
incl
sub
xor
mov
ljmp
sub
shl
cmp
outsb
mov
out
push
iret
nop
ss
push
movsl
imul
test
sub
xchg
xchg
in
bound
mov
std
leave
or
les
push
dec
call
mov
int
mov
xchg
aam
std
bound
data16
cli
addr16
pop
cmpsb
push
and
cwtl
loope
je
push
outsb
adc
pop
repnz
push
ss
pop
out
mov
mov
pop
or
stos
maskmovq
dec
push
rolb
fldt
lcall
cmp
and
cwtl
mov
or
ljmp
mov
sbb
dec
or
movsl
fldpi
xchg
loopne
scas
xchg
je
test
cwtl
fwait
or
and
ja
cli
xchg
pop
sbb
inc
pop
mov
nop
inc
xchg
jg
dec
fsubrp
sbb
mov
rcll
adc
xor
or
stos
xor
sti
or
xchg
lret
cli
out
out
and
jne
push
pop
or
daa
or
sbb
imul
xor
insb
dec
clc
sub
sbb
jl
pop
sbb
adc
adc
in
jb
lds
fadd
push
pop
push
pop
mov
sub
rorl
or
test
out
sbb
lret
ds
mov
stos
fs
stos
test
add
lods
xor
cmp
inc
and
dec
in
push
popl
adc
iret
cmp
cmp
cmp
xor
into
stos
repz
sbb
out
pusha
mov
fcom
jno
out
mov
and
pop
xor
adc
push
cs
xchg
add
push
hlt
sbb
cltd
mov
pop
cs
dec
jl
outsl
xor
cwtl
push
jle
mov
add
sub
pop
mov
lret
cmpsl
adc
cmp
inc
int3
dec
ds
sub
stos
xor
sbb
enter
decb
mov
data16
adc
rol
int
fists
mov
loopne
test
fnstsw
adc
pop
jno
insl
test
pop
out
lret
push
in
movsl
mov
cli
xor
nop
iret
jb
aad
sbb
js,pt
test
fimull
shrl
fstpt
loope
pop
test
nop
fisubl
sbbl
stos
stos
sahf
xchg
cs
inc
or
add
paddsb
int
xlat
mov
imul
mov
inc
cmpsl
sbb
scas
pop
lds
cmp
and
jle
in
pop
cmp
push
popf
leave
scas
movsb
jge
mov
pushf
negb
lret
xor
xlat
pop
inc
enter
jb
rorb
fldcw
mov
mov
inc
inc
jmp
nop
xorl
pop
dec
xor
cmp
mov
sahf
in
inc
lds
xchg
jg
int
js
addl
sub
dec
mov
loop
subl
push
enter
fwait
sub
jnp
js
cmpsl
ja
or
dec
jnp
jbe
xchg
push
loope
push
mov
fld1
mov
push
nop
sub
test
pop
cmp
test
out
shl
aaa
mov
arpl
imul
sbb
std
lds
pop
cmp
aad
add
faddl
and
or
xorb
out
add
jne
xchg
mov
test
sub
out
xchg
pushf
sub
cvtpi2ps
shll
sub
insl
cmp
jns
mov
test
fmul
les
test
cld
push
adc
sub
or
icebp
add
or
jecxz
add
jbe
or
xor
jns
loopne
add
arpl
pop
rol
andl
shl
test
test
lods
pop
outsb
jp
mov
xchg
movsl
rcl
das
add
cmp
sbb
sub
dec
sbb
pop
cmp
pop
dec
pop
mov
push
int3
stos
mov
or
xchg
leave
cltd
mov
mov
mov
push
lds
mov
mov
add
add
push
mov
lea
inc
xor
xor
ss
adcb
stc
test
mov
scas
cs
sub
mov
inc
push
pop
loope
push
and
pop
add
sub
andl
fidivl
mov
rclb
or
xor
outsl
outsl
adc
stos
mov
sarl
sub
mov
mov
cmovae
dec
sbb
out
dec
cmpsl
jl
sahf
in
std
cmp
mov
and
xchg
push
cmp
lock
inc
pop
movsl
pushf
dec
add
icebp
or
inc
inc
inc
xor
push
fs
pop
cmp
inc
dec
mov
inc
lret
xor
adc
mov
cld
or
aaa
out
hlt
xchg
add
mov
sti
das
adcb
testb
sbb
jecxz
adc
push
fsubr
fists
sbb
stos
shlb
and
out
xchg
mov
mov
imul
push
pop
popf
pop
sub
and
and
cmp
inc
test
mov
lods
cmp
cwtl
vpmovdb
pop
daa
add
add
jl
in
inc
lods
jb
or
pop
adc
push
iret
adc
movq
nop
adc
push
pop
dec
nop
arpl
mov
and
lds
dec
dec
les
cmp
fisttps
add
pushf
stc
and
xor
jmp
lods
and
dec
js
roll
nop
xchg
ja
sbbb
push
sub
jg
lahf
iret
movups
nop
xchg
push
sub
fs
add
lods
frstor
shl
push
arpl
ret
sbb
int3
mov
pop
sub
xor
sbb
mov
lods
stc
mov
jle
jno
pop
xor
and
dec
pop
out
push
ret
pop
leave
loopne
or
clc
push
push
and
pop
or
xchg
fisttpll
dec
or
push
cmp
daa
lea
jb
clc
inc
or
and
je
mov
mov
mov
jecxz
cmp
fiaddl
pop
or
cmp
push
daa
and
js
scas
jno
js
daa
std
inc
fisttpl
mov
mov
sub
jb
mov
push
mov
mov
sti
sub
icebp
popa
ss
sbb
repnz
jno
sub
add
push
lahf
test
sti
in
xor
in
pop
sub
fstps
out
sub
cmpl
xor
nop
jbe
mov
xchg
loopne
lock
scas
xchg
test
adc
jp
insb
lea
repz
insb
ljmp
mov
inc
fisubs
sub
xchg
cld
jp
lret
add
mov
or
mov
cli
pcmpeqd
repnz
mov
push
fiadds
pop
outsl
xchg
push
inc
jp
xchg
inc
inc
inc
cmp
ljmp
fwait
sti
jge
jle
adc
push
data16
mov
mov
cli
dec
pop
ds
inc
and
ja
mov
mov
or
xchg
pop
sbb
xchg
push
or
and
sahf
add
inc
mov
rclb
jae
subb
mov
fwait
add
bound
ret
into
aam
xor
and
outsb
push
mov
dec
fs
repz
xchg
arpl
sbb
adc
stos
fsts
gs
jg
inc
xor
sbb
jnp
insb
out
int
lock
pop
pop
pop
push
or
inc
cwtl
pop
sbb
sti
fsubrl
shlb
cld
pop
vpbroadcastb
mov
fwait
jg
repnz
sti
sub
xor
sbb
adc
xchg
xor
mov
fbstp
hlt
orl
cld
mov
push
jp
sub
cmp
cmp
fcoms
pop
out
push
or
aas
out
mov
pop
xchg
mov
mov
mov
lock
pop
mov
fwait
push
out
mov
or
pop
test
cmpsl
mov
inc
or
push
movsb
pushf
cmpb
ss
mov
inc
add
out
or
aaa
sar
dec
sub
pop
and
push
mov
iret
lret
or
pop
inc
mov
dec
enter
arpl
xorb
ficoml
mov
add
jno
sbb
mov
ds
andps
mov
xor
jne
or
cltd
lahf
aas
mov
xchg
cmc
dec
mov
push
or
xchg
ret
sub
cmpl
fwait
xchg
cwtl
fcoml
jmp
das
bsf
call
out
pop
jne
push
sbb
cltd
out
push
test
jg
in
movsl
mov
addr16
sbb
xchg
pushf
dec
sbb
inc
jo
cmp
push
loope
lret
jnp
scas
mov
dec
xchg
cmp
dec
xor
popf
fdivs
xchg
pusha
xor
test
popa
test
movsl
cmp
outsb
into
add
shrl
aad
imul
sbb
push
enter
add
pusha
scas
inc
cli
pop
jp
cmp
mov
aad
pop
scas
int
push
dec
pop
cmpsl
push
push
filds
and
pop
xor
orb
insb
in
push
int
leave
cmpsb
lea
sub
mov
inc
xorl
push
shll
stos
and
pop
cli
push
jmp
out
inc
shll
insb
iret
mov
stos
out
pop
push
ds
daa
push
int
dec
dec
stc
fadd
mov
lahf
add
xchg
lods
xchg
gs
pop
sahf
bound
daa
repnz
pop
jno
cmp
ret
pop
test
inc
mov
test
mov
sub
xchg
cmp
cmpsb
shrl
mov
cmpsb
repz
out
dec
xchg
cmpsb
xchg
pop
out
iret
add
and
lret
cmpsl
pop
cld
fwait
push
dec
inc
dec
xchg
repnz
jle
pop
in
dec
lcall
into
test
cli
call
mov
bound
mov
jbe
std
leave
rcr
test
addr16
addr16
sarb
into
xor
push
dec
call
pop
leave
out
rcrb
fsubs
and
in
popa
xor
test
fwait
push
fistps
fisttps
arpl
mov
rorb
popf
fimull
xor
inc
hlt
leave
pop
or
addl
sar
sarl
int3
xchg
add
rclb
es
iret
ret
and
or
stos
and
push
loopne
xorl
fcoml
in
and
jmp
jb
movsb
jnp
xor
out
testl
loopne
lcall
outsl
cld
repnz
adc
sbb
pop
and
xor
leave
lods
xor
pop
notb
imul
inc
out
pop
jecxz
loope
mov
jmp
inc
pusha
cs
clc
shr
sub
jmp
jnp
outsb
or
xchg
mov
xchg
mov
repz
mov
cmp
push
insb
mov
sbb
push
xchg
adc
add
cld
mov
dec
scas
sub
adc
test
loop
repz
push
adc
mov
add
sbb
jg
ljmp
sub
mov
mov
push
fmul
dec
and
mov
negb
sub
pop
xchg
lret
rcr
test
jo
sbb
xchg
mov
cmp
fscale
in
mov
push
repz
cmp
cmc
jge
scas
jae
adc
xor
cmp
aad
lods
jnp
push
js
cwtl
dec
lcall
cmp
add
mov
lock
push
pop
pop
mov
iret
aam
mov
and
cmp
xlat
fdivp
shl
and
in
loop
stos
mov
fistl
test
scas
or
jbe
mov
test
push
mov
cmc
lea
ljmp
fdivrl
mov
cwtl
aas
xor
sbb
and
inc
jnp
fildll
daa
mov
in
push
lods
sub
inc
stc
adc
mov
inc
jmp
in
jl
cwtl
inc
push
adc
scas
dec
pop
or
jp
pop
outsl
adc
dec
cwtl
xor
repnz
pop
icebp
inc
sub
outsl
dec
in
daa
mov
jns
and
ljmp
shlb
lods
aam
sub
pop
lds
xor
add
or
push
lods
xor
js
and
adc
dec
and
cmp
cmpsl
mov
mov
lods
cld
aad
push
xchg
aaa
sbb
inc
inc
xchg
data16
sti
xor
mov
mov
dec
repz
xchg
mov
jne
cmp
xlat
leave
sbbl
xchg
dec
incb
clc
filds
stos
inc
xor
push
mov
lods
les
or
ljmp
mov
jle
pop
or
push
out
cli
mov
icebp
fs
js
and
pusha
sub
pop
dec
mov
nop
jmp
mov
push
int3
ds
fdivrl
out
clc
lds
gs
ret
lods
jbe
test
lock
ds
stos
dec
and
and
adc
dec
mov
ja
nop
dec
fxch
fwait
das
arpl
dec
je
repz
aaa
cmpl
mov
mov
stos
mov
pop
popf
and
lret
call
or
movsb
jg
xlat
jbe
add
cmp
aas
shrb
push
mov
int3
les
mov
push
scas
pusha
imul
sub
call
adc
repnz
lods
pop
out
shr
push
mov
push
xor
inc
in
push
in
add
leave
pusha
adc
pop
pop
cs
mov
mov
xor
pop
dec
fsubl
lret
push
lods
test
loope
stos
aas
xchg
push
sbb
imul
sbb
fdivs
cmp
lods
xor
cmp
sahf
mov
imul
int
std
pop
inc
jb
add
pop
iret
inc
and
mov
adc
aas
pop
cmp
fisubs
dec
fisubrl
loop
or
adc
add
arpl
pop
xchg
jnp
mov
jmp
mov
movsb
sub
test
or
mov
stos
adc
xchg
adc
rcrb
insb
sub
lods
test
loope
pusha
lret
xchg
and
cmp
mov
ret
inc
cwtl
arpl
inc
sub
push
mov
cltd
dec
push
jg
cs
cmpsl
push
pop
scas
dec
icebp
fs
gs
stos
fmulp
stos
and
fsubrl
fwait
add
sahf
jno
xchg
add
jno
add
pop
pop
or
stos
in
mov
mov
outsb
fcmovnbe
inc
mov
loope
mov
ret
mov
sub
fcoms
in
js
test
sbb
add
pop
adc
xchg
sub
or
jbe
mov
insl
or
jbe
xchg
rcl
mov
out
add
roll
icebp
push
pop
pop
mov
dec
add
jbe
cwtl
pop
push
fidivrs
mov
lcall
add
dec
xor
lcall
loop
lcall
mov
int
or
xor
std
push
pushf
mov
test
cmp
out
mov
icebp
dec
mov
aaa
sub
sub
loopne
mov
aad
je
mov
dec
nop
clc
test
fxch
cltd
dec
mov
ret
or
mov
fisubrl
es
cmp
xchg
aad
and
stos
aas
popl
push
imul
stc
inc
cmp
test
mov
push
push
jne
inc
mov
mulb
stos
arpl
inc
in
aas
cmp
pop
repz
mull
and
in
repz
jnp
push
cld
pop
cli
out
mov
lahf
out
mov
out
xor
shrb
jge
add
pop
clc
xchg
mov
notb
addr16
add
jbe
mov
mov
add
adc
push
inc
xlat
cmp
or
pusha
test
jp
push
cmp
adc
mov
insl
shll
jg
inc
insl
cmpsl
jmp
or
fcmovb
add
movsb
add
lret
fsub
jmp
int3
fadd
stc
jne
ret
cld
jae
sbb
dec
mov
jne
arpl
scas
pushf
xchg
adc
jne
jmp
push
in
xor
int
shlb
paddq
push
loope
lds
mov
xor
lcall
hlt
arpl
push
inc
test
fstpt
hlt
xorb
lds
mov
fnstenv
cs
in
push
push
pop
sub
scas
rcll
dec
mov
lret
ficoms
mov
cmp
push
fmul
ds
jmp
aad
push
repz
das
pop
mov
addr16
loop
or
lcall
and
stos
inc
ret
lret
mov
inc
test
gs
ljmp
adc
or
sbb
jb
push
jo
push
jge
cmp
in
insl
sti
push
adc
in
repnz
push
sub
and
inc
dec
insb
mov
iret
popf
sbb
mov
add
mov
arpl
xchg
inc
push
xchg
cmp
test
test
pop
pushf
stc
mov
sahf
gs
sub
rol
inc
jbe
push
or
adc
fnstcw
sti
imul
fidivl
and
test
mov
jae
adc
pop
mov
fcoms
adc
adc
sbb
sub
aam
out
sti
add
cmpsb
sub
xor
sub
nop
cld
lahf
cwtl
mov
lcall
inc
sub
mov
mov
test
and
mov
inc
adcb
mov
cli
in
nop
bnd
xor
sbb
loope
inc
fs
and
jg
bound
std
ljmp
lahf
cmp
aas
mov
sub
jae
out
xor
and
bound
pop
xor
fs
xchg
mov
xor
sbbl
mov
dec
popf
iret
mov
xchg
dec
mov
nop
ljmp
call
out
and
arpl
scas
sbb
mov
mov
cmp
test
and
stos
in
cmp
mov
lahf
pop
shr
push
scas
xchg
data16
adc
and
add
pop
divb
xchg
leave
fistpl
sti
rclb
std
repz
out
jg
sbb
out
push
push
and
jmp
rcl
cmpsl
cmpl
cmc
dec
or
int
jmp
shlb
mov
js
mov
mov
popf
inc
mov
int
adc
roll
insl
dec
jle
clc
mov
int3
adc
or
pop
jo
mov
aaa
scas
fwait
pop
ljmp
inc
add
push
aaa
lea
mov
xor
js
lret
sbb
iret
call
syscall
mov
mov
or
imul
push
push
mov
sub
jmp
cmc
shlb
leave
mov
jg
stos
xlat
inc
insl
pop
ror
jae
hlt
int3
out
sbb
pop
push
int
cs
mov
mov
adc
fildl
outsb
fcomps
stc
ljmp
xchg
xchg
shll
and
orl
mov
mov
push
add
dec
mov
pop
rolb
push
out
popa
add
mov
stos
and
cwtl
xchg
push
fbld
sti
enter
aad
repnz
mov
sub
adc
mov
pop
fwait
mov
fisubl
cmp
dec
add
lret
mov
mov
sub
jg
push
fstl
popa
arpl
push
push
cli
cwtl
imull
call
inc
cld
or
or
js
and
fidivs
push
jo
test
loop
aas
dec
out
pop
dec
js
aas
xchg
inc
xchg
in
dec
insl
and
loopne
or
or
push
cmpl
sub
xchg
ja
leave
dec
sub
cld
mov
and
mov
sbb
and
and
xchg
mov
inc
pop
dec
xchg
mov
out
in
movsb
aam
outsl
xchg
orl
mov
inc
ret
pop
int3
jg
frndint
outsl
mov
mov
test
aam
arpl
pop
movsb
cmc
test
xchg
and
or
fldcw
stos
das
xor
bound
inc
outsb
aas
and
stos
mov
cmp
dec
js
mov
ja
test
or
sbb
das
mov
push
in
jbe
xlat
cmp
xchg
xchg
inc
test
push
xor
int3
xor
test
std
mov
sub
jp
mov
or
sbb
xchg
sub
leave
jl
jmp
fs
ja
fbld
pop
out
or
jno
fisttpll
rorl
pop
sbb
cs
mov
loopne
aas
fnsave
jo
jmp
xchg
movsl
loop
push
inc
out
aaa
add
test
loop
pop
and
jp
sub
and
divb
rol
test
adc
add
push
lret
fsubl
xor
and
lock
iret
cs
mov
rcrb
mov
lods
xor
aam
insb
nop
fwait
sub
xchg
loope
xchg
sbb
dec
lds
jns
push
sub
xor
rorb
or
outsb
inc
lret
cmp
sbb
mov
push
push
adc
lcall
idivb
add
sub
cmp
pop
filds
pushf
jge
mov
push
mov
aam
or
cmc
das
aam
es
jb
out
mov
out
inc
xchg
mov
shr
dec
int
push
jecxz
sbb
xchg
fldenv
repz
xchg
adc
call
pop
jne
push
mov
pop
and
dec
cmc
addr16
test
lret
xchg
push
add
in
mov
pop
inc
jns
pop
cmpb
into
push
adc
or
jo
mov
cld
test
arpl
je
es
dec
xlat
and
outsl
into
xor
and
xlat
sub
lcall
int
dec
incb
jl
or
cwtl
jno
xchg
mov
cld
xor
and
jae
mov
dec
movsl
mov
cmpsb
in
cmpsl
sbb
leave
flds
mov
ja
fimuls
leave
vmread
xchg
fisubl
jge
int3
test
xor
dec
cmpsl
sub
in
push
lret
xchg
pop
loop
test
mov
jb
call
jnp
push
cld
or
sbb
mov
mov
hlt
push
outsl
stos
dec
mov
clc
adc
push
mov
int3
call
out
mov
imul
jp
shll
in
ja
mov
outsb
jae
subl
aam
loope
jle
sarl
ss
lds
dec
mov
dec
mov
test
sbb
cmpsb
jg
shll
mov
add
out
dec
aad
inc
fs
ret
repnz
jecxz
hlt
cmp
push
and
ljmp
fcmovne
pop
xor
cmp
decb
sub
push
aad
adcl
push
jl
sbb
fs
out
jnp
sbb
jl,pt
fbld
xchg
mov
testl
incl
cli
ror
xchg
cltd
jnp
mov
ds
mov
inc
mov
push
int
adc
sar
es
adc
mov
loop
dec
sbb
pop
les
sbbb
inc
rcrl
dec
fistps
mov
push
adc
lcall
push
push
push
mov
cmp
stos
add
inc
add
rclb
xchg
cwtl
arpl
shrl
sbb
hlt
lea
sub
shlb
cmp
push
sahf
cli
cmp
mov
loopne
adc
fldcw
add
fs
fisubs
into
and
pop
xor
pop
lea
repnz
cmpsb
scas
and
jg
xchg
out
inc
movsb
pop
sahf
pop
or
scas
cmp
ss
std
mov
jnp,pn
push
mov
cwtl
jmp
lods
gs
xchg
fldl
loopne
fs
jne
mov
fwait
and
mov
xor
lds
sbbl
push
mov
imul
adc
in
pop
je
das
std
sbb
push
xor
cmp
and
ret
dec
or
aaa
sti
dec
xor
out
add
out
rcrb
jo
ret
js
or
dec
popf
repz
dec
sbbb
sbbl
lret
fisubs
sbb
hlt
push
loopne
jb
popf
push
sbb
pop
push
dec
loopne
fidivl
fwait
pop
or
jae
repnz
fistpll
lds
sbb
repnz
dec
dec
insl
lods
mov
xchg
pop
xchg
sub
div
xchg
shrl
pop
mov
incl
enter
pop
and
mov
int3
pop
inc
cmp
cmp
mov
xchg
fsubrs
out
jbe
mov
test
lret
fistpll
fldenv
mov
clc
adc
cltd
scas
mov
jl
into
mov
fcmovbe
push
roll
jbe
pop
test
pop
andb
push
sbb
fimull
repnz
cld
loop
jp,pt
add
in
push
jnp
inc
orl
pop
adc
mov
push
push
call
mov
cmp
fidivl
jle
add
repnz
jo
sti
mov
lock
addl
test
cmp
movsb
mov
mov
rcr
es
adc
mov
ret
imul
xor
mov
out
iret
add
add
adc
cmp
shll
push
cld
mov
fstpl
pop
loopne
mov
nop
mov
cmp
hlt
out
xor
cmpb
movsl
inc
sar
fdivrs
jns
movsb
insl
sbbl
cmc
sub
dec
imulb
pop
sbb
negl
shr
add
lods
pop
lcall
adc
pop
cmp
sub
enter
nop
ja
xchg
test
daa
and
pop
sbb
stos
jle
or
add
adc
fwait
dec
test
into
lret
aaa
les
clc
pop
push
or
orb
xor
adc
mov
imul
jb
cmp
test
addr16
jle
dec
mov
out
sub
or
cmp
and
pop
loope
scas
jle
out
test
idivl
lds
push
or
xor
mov
pop
fs
scas
xchg
cmp
push
mov
cmp
sub
movsl
into
or
pop
xchg
sarb
or
xchg
mov
mov
data16
and
aas
fcomps
movsb
dec
push
ss
mov
imul
test
inc
pushl
ret
adc
data16
adc
mov
jmp
out
or
push
or
andb
lock
popa
ljmp
cmp
out
jmp
je
fisubs
mov
lods
rcrb
loop
dec
jno
xchg
nop
imul
cmpl
movsb
out
rclb
xor
dec
mov
stos
out
adc
adc
sub
aad
shll
sbb
xor
cmp
push
icebp
lock
jo
dec
in
popf
out
enter
leave
aaa
add
or
xor
ds
sub
sbb
push
ja
mov
mov
push
lea
and
jnp
stc
push
sub
jg
repz
and
ret
ljmp
test
push
or
out
data16
sahf
iret
pop
jae
jnp
fpatan
add
je
push
les
cwtl
shll
jae
mov
int
adc
mov
jmp
sbb
mov
imul
cs
das
xchg
pop
mov
sub
jb
cmp
call
faddl
pop
dec
sahf
sub
pop
shrl
xchg
sub
popf
jne
call
repz
gs
or
test
mov
push
into
pop
jmp
mov
mov
mov
inc
bound
insl
cmp
jnp
push
out
jmp
enter
imul
je
cld
movsl
xor
test
mov
adc
fisubrs
xchg
lds
stos
jecxz
andb
mov
push
js
xchg
in
dec
inc
data16
jbe
arpl
ss
pop
test
mov
stc
jo
in
pushf
loopne
test
mov
cmp
gs
cmc
roll
cmp
in
mov
inc
jmp
cmp
movsl
jne
gs
mov
test
daa
test
adc
mov
mov
xchg
fidivl
lret
les
adc
fcomps
popa
push
pop
out
imul
pop
scas
in
stos
xchg
in
adc
into
loop
sbb
add
inc
bound
mov
xchg
fistpll
cmp
mov
aas
dec
fnsetpm(287
mov
cmp
jg
cmp
rorl
aas
adc
mov
mull
mov
pop
mov
or
mov
outsl
push
fildll
push
jg
jmp
lds
or
sbb
sub
xchg
daa
fld
sti
ja
mov
xlat
lds
lods
movaps
mov
rcrb
scas
push
dec
cli
xchg
mov
out
lds
arpl
xchg
xlat
fdivl
int3
faddp
sub
and
add
mov
fwait
sbb
rcrb
aas
inc
notb
lock
aad
push
add
cwtl
insl
fisubrs
jns
push
out
fdivrs
and
xor
or
jb
pop
lret
mov
cmc
sbb
mov
aad
mov
insb
push
gs
stos
xchg
or
inc
out
mov
lret
push
mov
enter
jns
and
adc
pop
cmpsl
mov
daa
iret
fs
adc
dec
daa
pop
xlat
cmp
pusha
xor
push
out
mov
ret
inc
clc
fnstsw
sub
adc
xor
jmp
lret
xchg
push
pop
test
cld
aam
fisubs
clc
lea
enter
lret
in
jnp
fsubrl
test
mov
jbe
ret
jl
and
cmp
pop
jle
xchg
lock
dec
pmullw
pop
cwtl
xchg
pop
test
pop
xor
pop
rcll
popa
xor
fnstsw
stos
mov
or
stc
movsl
sti
mov
rol
sub
cmp
add
fnstenv
dec
jecxz
jl
das
push
cmc
rolb
roll
mov
cmp
outsb
dec
sbb
mov
xchg
and
cmp
xchg
popf
mov
std
adc
int
inc
jns
push
arpl
jge
add
sbb
int3
pop
arpl
and
in
insl
addr16
dec
add
mov
or
xchg
jne
insl
jo
and
fcomps
or
xchg
sbb
mov
cmc
fsubp
adc
jl
push
mov
pushf
aad
sbb
mov
pop
testb
aaa
shll
aaa
and
lahf
popf
nop
aas
xor
or
xchg
adc
push
test
mov
cmpsl
lods
adc
in
jbe
pop
in
cmp
scas
sub
mov
sub
mov
lahf
mov
jns
dec
out
sbb
sti
push
push
mov
pusha
push
or
jo
jg
das
movsl
out
negl
orb
sub
xor
sti
stos
pop
inc
mov
xchg
xchg
mov
and
dec
ds
in
outsl
or
inc
mov
sbb
negl
push
or
sub
mov
sub
jb
fwait
inc
xchg
ds
ficoml
push
shll
mov
scas
outsb
leave
pusha
cmpsb
and
mov
dec
mov
rol
testb
pop
sbb
dec
lret
lods
adc
test
or
aam
js
inc
pop
jbe
aaa
fwait
jp
mov
xor
mov
divb
jmp
and
mov
or
outsl
call
sub
imul
push
pop
pop
dec
and
add
and
hlt
adc
jne
cmp
daa
movsb
hlt
stos
push
insl
sbbl
popf
add
in
insl
xor
pushf
call
cwtl
mov
sub
mov
roll
repz
fstl
sbb
pop
addr16
push
mov
xor
stos
stc
mov
insb
cmc
sub
clc
clc
popa
rcll
or
sbb
mov
xor
repz
pop
cmpsb
test
icebp
mov
clc
lds
and
sahf
fisubrs
loop
inc
or
sarl
out
cltd
int3
sbb
ret
fs
mov
jnp
test
add
mov
stc
sbb
xor
dec
sbb
and
or
mov
subb
jb
loop
jle
cmpsb
add
push
pop
xor
or
mov
pop
int3
rep
sub
popa
add
in
xchg
jb
cmp
inc
pop
ljmp
push
popf
fidivrs
mov
push
lret
or
adc
push
jge
jge
daa
cmc
xlat
and
lock
out
cmp
lods
mov
mov
bound
pop
sub
out
hlt
loopne
je
lods
cmp
jp
sbb
push
cld
arpl
pop
negl
das
push
sbbl
addr16
pop
lods
in
jb
xor
ret
xchg
dec
jo
arpl
data16
sbb
aam
in
jmp
xchg
inc
fdiv
adc
cmp
add
dec
decl
fmul
ficompl
add
dec
dec
inc
push
ds
call
cmpb
xchg
lret
mov
dec
cmp
pushw
aad
pop
sbb
sub
adc
mov
clc
ja
adc
xor
jg
sub
movsb
popa
and
int
inc
jg
jno
pop
mov
lret
add
or
in
xchg
sbb
cmpl
xor
jmp
or
and
scas
jo
adc
in
sbb
xchg
xor
xchg
aam
add
inc
pop
loop
xchg
inc
push
jl
cli
pop
insl
ljmp
and
cmp
xor
sub
mov
scas
stos
insb
sbb
cmp
jns
enter
mov
xchg
push
pop
arpl
jnp
in
and
xchg
shll
lods
in
or
loope
out
hlt
mov
inc
cltd
call
sbb
daa
enter
aam
sbb
lret
push
subl
push
sub
xchg
dec
push
mov
ljmp
mov
or
dec
mov
fsts
hlt
int3
ret
bound
jbe
mov
fstpl
js
inc
fdivr
push
ss
pop
mov
movsb
push
pop
popa
ds
sub
mov
pop
jmp
and
mov
enter
add
pop
add
fnstenv
aas
rcll
cld
imul
nop
pusha
mov
cmp
push
sbb
add
push
repnz
sbb
aaa
xchg
xchg
wbinvd
push
inc
or
push
shlb
fmull
daa
lret
pop
icebp
inc
int
hlt
repnz
adc
push
inc
insb
mov
fiaddl
scas
nop
cmc
jle
jb
sub
mov
insb
mov
mov
les
insb
or
test
inc
mov
ret
cli
movsl
std
xlat
aaa
das
jmp
xchg
add
insl
xorb
insl
adc
imul
ss
rolb
push
insl
add
test
pop
sarb
outsb
jl
push
jge
popa
mov
nop
push
out
je
cmp
pop
ljmp
mov
insl
cmp
in
test
jnp
dec
shll
sub
push
inc
jl
in
push
push
push
daa
add
sub
addb
faddl
mov
inc
sbb
cmp
cmp
lahf
fstl
stos
or
pop
jne
xor
jmp
repnz
xor
push
cld
sub
jge
adc
adc
jg
divb
xchg
sbb
jle
into
pop
addl
xchg
daa
adc
sahf
movb
lds
cld
pop
cmpsl
sti
mov
cmp
sbb
dec
push
xchg
ljmp
jbe
je
pop
push
in
es
mov
es
popa
mov
xor
jbe
sbb
xor
popf
inc
mulb
repz
adc
leave
incl
aad
cmp
aam
pusha
inc
or
adc
shr
fisubl
sub
pop
pop
xor
mov
jbe
rcll
lea
xchg
insb
inc
pop
fistpl
xchg
and
popf
pop
and
xor
jne
outsb
daa
daa
aam
sbb
mov
sti
pop
or
je
aad
ret
dec
cmpsb
add
mov
rcrl
xchg
jns
mov
dec
xorl
cltd
pop
popf
test
daa
andb
orl
pop
shrb
aas
adc
dec
jg
sbbb
mov
pop
mov
mov
cmp
ret
cwtl
xor
mov
xor
xchg
and
ja
lret
mov
call
aam
dec
adc
pop
jge
mov
iret
jb
mov
xchg
pop
sub
test
xchg
pop
adc
test
iret
xchg
pop
popa
aaa
add
push
adc
dec
xchg
sbb
pop
pop
fs
aas
sbb
mov
cs
bound
imulb
in
push
sahf
adc
mov
fs
push
mov
jne
fiaddl
dec
data16
shlb
push
mov
lds
lds
int
dec
das
cltd
fisttpll
es
push
sub
iret
mov
cmpl
sti
adc
ljmp
arpl
inc
test
mov
in
jge
das
orb
daa
fidivs
jo
jp
pop
xchg
cmp
jae
or
shll
gs
cmp
outsb
xor
xor
jecxz
pop
push
insb
add
mov
jae
out
cmp
testl
xchg
lods
dec
push
addb
mov
lahf
xrelease
pushf
jge
xor
add
mov
lret
or
sbb
ja
add
adc
loopne
ret
xlat
xor
aas
pop
push
test
sub
inc
jno
subl
mov
mov
fmull
aam
es
aad
daa
mov
out
mov
in
sub
rcrb
sub
clc
add
sbb
negb
push
xor
test
mov
pop
pop
mov
sub
jnp
loopne
cld
js
push
cltd
cmp
das
sbb
mov
cmp
filds
into
scas
insl
enter
pop
sbb
push
icebp
stos
cltd
push
pop
mov
adc
in
xor
cmp
lcall
daa
or
pxor
mov
pushf
mov
jp
mov
mov
sub
push
sysexit
hlt
out
rol
bound
nop
mov
and
mov
push
cmp
popa
loope
aas
inc
rolb
roll
setb
fistps
lods
imulb
and
mov
aam
sbb
outsl
jno
ja
sub
xchg
xlat
aam
fidivl
int
or
cmp
arpl
push
mov
sbb
and
adc
roll
pop
push
scas
xchg
repz
imulb
and
mov
xchg
lcall
mov
push
lods
pop
add
mov
sbb
xor
or
mov
stc
dec
jecxz
jmp
mov
dec
out
cltd
push
and
jg
lds
dec
add
or
das
dec
cmp
jnp
adc
out
es
mov
gs
add
mov
sahf
xchg
gs
xchg
pop
dec
sub
mov
cmp
orl
mov
movsb
push
pushf
hlt
outsb
add
jo
inc
mov
orl
jmp
roll
inc
mov
jae
xor
cltd
mov
xor
push
xor
sub
stc
mov
ficompl
xchg
cmpsl
imul
in
idivb
mov
dec
stos
ss
push
mov
sti
add
scas
rcrl
test
lea
out
fyl2x
sahf
lods
sub
mulb
jl
push
dec
stos
ja
xor
xchg
into
and
repz
adc
and
scas
lods
add
xor
loopne
nop
add
or
add
fsubl
das
sbb
loop
call
in
leave
shll
das
adc
add
stos
push
jmp
sbb
cli
add
insb
mov
mov
mov
cmp
mov
xchg
pop
test
aas
fwait
inc
enter
imul
and
jbe
cmpsb
in
jb
push
lods
push
int
jmp
mov
ficompl
dec
dec
pop
mov
xor
adc
les
xchg
int
divb
pusha
dec
push
ja
cmpsb
call
sbb
mov
stc
pop
jae
inc
push
scas
negl
xchg
out
mov
xchg
sub
add
rorb
inc
push
pop
sbbb
sti
xor
pop
addl
ljmp
mov
push
dec
ret
rolb
cs
add
or
into
xor
inc
enter
pop
mov
sahf
mov
mov
xor
sbb
push
sub
and
jge
sub
push
lods
lret
loopne
scas
lods
inc
dec
jg
aas
dec
xchg
frstor
jb
or
pop
pop
stos
adc
adc
and
insl
repnz
adc
ja
pushf
jno
in
cmp
mov
adc
add
pop
cmp
jb
shrb
cmp
mov
mov
or
daa
icebp
mov
lods
das
in
fstl
add
movsl
sub
hlt
popf
jle
loope
in
hlt
je
ret
test
mov
add
fisubrs
adc
mov
jmp
rorb
sbb
ljmp
or
movsl
jnp
jb
mov
or
popa
out
mov
dec
cld
push
mov
sbb
push
in
xchg
int
pop
mov
fdivp
dec
mov
xor
cmp
jp
int
mov
sbb
xchg
mov
mov
clc
rcll
pop
jbe
fcoml
cld
lods
fdivl
inc
cmp
jge
negl
icebp
movsl
std
mov
xor
call
sub
fwait
dec
sbb
test
dec
push
sub
push
cltd
cmp
out
mov
loop
in
in
lds
adc
dec
xchg
cmpsb
cltd
mov
shll
aam
push
sbb
dec
push
add
mov
xor
jmp
jle
xchg
pop
push
sti
leave
push
lcall
sbb
mov
popa
js
xor
dec
repnz
or
jp
test
sub
dec
mov
push
out
and
jle
xchg
addl
jne
jne
fnsave
mov
pop
int
dec
out
repnz
lahf
out
sbb
or
jns
mov
lret
imul
not
xor
pop
push
lahf
dec
icebp
iret
popa
lret
xchg
push
jl
daa
enter
pusha
xor
enter
add
jbe
mov
or
cmp
ds
lock
cmp
addl
test
hlt
lock
mov
jecxz
push
mov
mov
add
jne
sbb
arpl
xchg
jp
imul
xchg
jae
add
cmp
pop
das
repz
popf
sti
out
adcb
ja
cmp
xor
xor
iret
jl
mov
cs
mov
ja
sub
data16
and
je
or
int
movb
adc
or
sti
adc
sahf
mov
lahf
push
push
inc
mov
outsl
orb
dec
pop
imul
adc
call
or
imul
sub
push
lock
add
leave
scas
sbb
in
pop
test
enter
icebp
xor
scas
mov
pop
idivb
pop
outsb
sbb
shll
add
jne
popf
clc
arpl
cld
adc
jmp
mov
sub
or
mov
ljmp
lea
in
out
xorb
into
jb
dec
test
fisttpll
sarl
jmp
loope
dec
mov
shlb
lds
cmp
ret
inc
lea
inc
pop
and
iret
sahf
ljmp
fs
mov
sub
cld
xchg
stos
lea
fs
adc
sbb
mov
lret
cmpsb
xchg
pusha
mov
fptan
jno
insl
imul
aas
adc
pop
icebp
fidivl
es
or
dec
cltd
cmp
sub
cmpb
inc
jecxz
scas
sahf
cmp
leave
insb
xchg
dec
sbb
in
call
pop
cmp
scas
jns
shrb
insb
mov
and
fimull
test
fcompl
leave
xchg
mov
jno
and
xchg
mov
leave
pop
cld
xchg
hlt
mov
mov
xor
lods
rorb
or
push
inc
mov
loope
jno
push
imul
push
cmp
in
sbb
xor
imul
pop
and
rorl
cmpsb
jb
xor
andb
data16
jnp
stos
out
shrb
mov
lds
mov
mov
dec
inc
icebp
add
or
popl
subl
xor
nop
bound
fwait
mov
in
fwait
and
fwait
gs
jg
into
sbb
ds
xor
stos
dec
or
pop
jle
stos
sub
pop
ret
call
pop
imul
aam
int
fs
pop
sbb
cwtl
ja
xor
push
cmpsb
inc
addb
sub
inc
sti
lds
inc
rcr
add
aam
sbb
and
js
jecxz
lods
jb
ror
loopne
adc
cli
sub
ret
adc
cmp
cwtl
out
daa
icebp
cwtl
jns
jne
and
push
jp
inc
inc
int3
insb
popf
xor
pop
jmp
xchg
sub
mov
outsl
xor
das
xchg
sub
sahf
movd
rcrl
fs
aaa
adc
and
or
inc
jno
dec
rcl
and
fnstenv
scas
mov
push
sbbl
dec
mov
out
jmp
lods
push
dec
dec
xchg
ljmp
mov
sbb
push
jmp
data16
cwtl
mov
inc
xor
mov
cmc
leave
mov
push
xlat
push
mov
jbe
cld
push
push
sbb
mov
pop
or
lahf
mov
add
pop
mov
movb
fdivl
test
lds
push
xchg
inc
dec
sub
ja
mov
xchg
jne
popf
fisttpll
push
sbb
jl
push
rorl
mov
sbb
sbb
or
cltd
ror
mov
test
call
adc
clc
int
in
xchg
jmp
leave
inc
inc
leave
jae
jno
lds
mov
push
add
and
add
xor
cmc
push
xchg
shl
int
das
lds
bound
jns
mov
mov
push
test
addl
in
mov
sub
movsb
pop
movsl
scas
in
and
push
mov
lcall
cld
mov
jo
jecxz
adc
xchg
pop
adc
jne
cmpsl
xchg
mov
inc
mov
lcall
inc
mov
nop
jae
mov
call
cmc
js
imulb
dec
add
pop
sbb
fsubs
add
sub
mov
xor
out
out
aam
add
loope
xchg
adc
popf
add
shlb
ds
push
push
xchg
daa
adc
jo
ret
jne
or
cwtl
fsubrl
and
mov
dec
xchg
jp
and
dec
stos
insb
lret
or
jp
mov
movsb
lcall
jno
sbb
adc
aam
mov
test
cltd
pop
mov
pop
cmp
popf
pop
inc
fwait
mov
mov
mov
sti
dec
rolb
sub
iret
movsb
push
lret
pusha
lret
cmpsl
mov
jle
ss
mov
dec
shlb
pop
lock
aas
in
inc
dec
inc
jge
rsm
mov
push
sub
scas
into
jno
mov
int3
mov
ret
js
inc
jmp
pop
jb
mov
and
inc
test
fnsave
out
push
sbb
mov
inc
loopne
bound
outsl
jle
mov
stos
pop
inc
out
mov
pop
out
cmp
or
pop
fs
sbbb
into
or
pusha
jecxz
mov
in
mov
lock
clc
into
and
ja
adc
clc
adc
lcall
aam
subl
in
cmpl
enter
add
jne
out
loop
push
dec
daa
gs
inc
push
rolb
mov
les
pop
mov
movsb
jno
stos
or
clc
dec
lock
je
int3
adc
insl
enter
aaa
pop
stos
outsb
and
je
cmp
stos
cmp
adc
pmaddwd
mov
pop
pop
mov
mov
lds
orb
and
mov
arpl
push
jg
repnz
push
jns
lcall
adc
lahf
and
pusha
or
test
adc
xchg
cmpsl
mov
dec
xchg
mov
js
es
cmp
sahf
lea
mov
pop
or
leave
inc
hlt
les
cmp
stos
sub
hlt
jle
pop
cmp
das
mov
add
in
clc
sbb
push
jnp
mov
pop
fs
cmp
notb
push
stc
lock
outsb
mov
insb
or
into
adc
and
mov
push
mov
enter
rcr
sub
in
mov
out
jno
inc
js
push
aaa
es
lahf
lahf
add
ret
out
push
dec
dec
or
sbb
nop
xchg
mov
adc
and
mov
add
push
or
fistpll
sub
and
mov
out
jle
jge
jmp
cmp
jo
jb
icebp
sbb
outsb
lea
cs
sbb
loope
adc
push
and
or
mov
inc
cld
sbb
inc
mov
cltd
decb
push
test
sub
and
sbb
jno
and
mov
fldenv
and
daa
fwait
and
dec
mov
sti
xchg
cmc
push
out
icebp
int
aad
inc
test
scas
pushfw
jp
sbb
cmp
jno
inc
or
jp
xor
repnz
fcoms
jmp
pop
out
out
cmc
adc
leave
xlat
cltd
iret
xchg
iret
lea
jo
jg
xor
std
rcrl
scas
sti
mov
sub
mov
lea
add
cltd
jb
jae
cmp
mov
xchg
test
add
divl
js
imul
xor
call
aam
test
mov
cltd
mov
xchg
rcrl
stos
xor
lock
xchg
jecxz
jg
mov
aaa
and
mov
shr
sbb
mov
cmovl
out
mov
xor
jo
mov
ds
mov
div
inc
loop
scas
mov
adcl
cli
sbb
add
popa
dec
imulb
leave
hlt
cmc
inc
arpl
mov
bound
mov
clc
dec
outsb
in
jmp
dec
leave
xor
or
gs
push
in
mov
in
mov
adc
or
mov
mov
imul
out
imul
mov
push
push
or
fidivrs
push
aas
lahf
outsb
mov
rcr
jl
imul
in
push
pop
mov
es
mov
pop
imul
or
inc
rcrl
inc
jecxz
sbb
pop
dec
aas
sub
dec
aam
add
add
in
call
shlb
or
ljmp
out
pop
adc
call
int
add
push
ret
pop
or
push
ja
in
clc
mov
adc
cmp
pop
shlb
dec
mov
xchg
push
mov
cli
xor
rcr
test
int
jno
stos
icebp
sahf
pop
leave
sbb
ds
shll
dec
pushf
mov
icebp
push
rclb
sbb
pushf
rcll
inc
mov
flds
dec
addps
push
and
fwait
mov
incb
mulb
pop
std
add
lahf
neg
roll
lods
test
sub
stos
insl
pop
push
hlt
xchg
fsubrl
mov
hlt
dec
jmp
pusha
xchg
inc
inc
push
lock
pop
data16
mov
test
js
sub
aam
ljmp
adc
les
adc
xlat
xor
and
jo
dec
mull
icebp
pop
xchg
jl
repnz
push
aad
lcall
js
add
dec
push
daa
and
sub
jo
outsl
mov
mov
jp
iret
out
push
out
lcall
sub
pop
leave
cmpsl
cmc
pop
push
fsubrs
sub
and
fnstcw
lds
je
ficoml
aam
outsb
cmp
in
jle
jne
rcl
jmp
repnz
stc
jne
stos
in
mov
icebp
insb
gs
dec
lods
xchg
je
jmp
test
pop
lret
test
mov
adc
ficompl
out
mov
fs
cs
ljmp
xchg
jae
xor
insl
pop
lock
mov
dec
in
mov
data16
cwtl
fwait
lds
mov
jno
push
push
mov
jecxz
adc
pop
test
dec
sub
lods
fdivrs
insb
mov
xor
sub
push
and
fisttps
daa
sbb
aam
xchg
xchg
mov
jg
or
movsl
inc
xchg
mov
faddl
push
mov
adcl
lret
je
aad
or
fisubrl
jp
xor
or
dec
adc
das
push
cmp
dec
mov
out
outsb
shll
jne
adc
inc
leave
push
jl
sub
sahf
in
or
jecxz
ret
sarb
addr16
ret
gs
movsl
stos
popf
scas
lret
jmp
sbb
cmp
push
stc
divb
in
or
lods
jae
scas
xchg
xor
push
shrl
push
in
enter
in
ss
in
shll
out
sbb
loopne
sub
adc
lret
adc
fdivrl
dec
lock
pop
xchg
inc
insl
push
or
push
pop
xor
std
clc
in
push
jo
xchg
es
add
int3
pusha
push
fwait
mov
iret
mov
xor
stc
sub
leave
add
add
roll
sarb
push
push
incl
cmpsb
cs
dec
push
fnsave
mov
or
in
in
mov
insl
mov
mov
lods
pop
push
mov
push
and
lds
loope,pt
shlb
test
fwait
sbb
ljmp
in
mov
das
pop
push
cmp
sbb
add
mov
push
push
xchg
dec
mov
mov
pop
sub
fistps
aad
daa
nop
mov
or
pop
in
jne
and
outsb
sarb
mov
in
cmp
mov
cld
es
and
cwtl
push
push
mov
or
js
mov
xor
arpl
xchg
mov
sub
sub
mov
outsl
pop
xchg
idiv
inc
cmpl
inc
repz
cmc
mov
enter
mov
adc
aas
mov
pop
mov
stos
lods
xor
faddl
pop
popf
pop
xor
call
mov
xor
jecxz
cmpsb
pop
sub
test
jmp
gs
or
mov
inc
pop
inc
test
and
cwtl
inc
or
aas
faddl
xchg
das
xchg
xchg
push
cli
mov
mov
aad
pop
ror
fwait
xor
mov
pop
mov
scas
hlt
icebp
jne
ret
xor
sbb
loop
pop
fucomp
fwait
sbb
outsl
xchg
adc
dec
lret
cld
pop
adc
mov
fistpl
insl
aad
out
xchg
add
push
je
adc
out
out
mov
and
fwait
or
jb
lret
adc
or
ret
pop
mov
mov
bound
adc
int3
add
cltd
jo
into
cli
testl
imul
mov
ds
cmp
pop
inc
int
adc
jmp
in
rcrb
imul
pop
or
cwtl
sbb
cmp
cltd
in
int
mov
aam
mov
out
imul
fsubrl
xchg
and
inc
dec
pop
jo
mov
repnz
inc
mov
and
dec
dec
inc
adc
add
adc
test
shll
inc
rcr
xor
push
jae
cld
mov
dec
das
inc
cmp
and
cs
sub
pushf
jmp
lea
repnz
jne
std
push
mov
das
mov
sub
push
test
mov
dec
xor
movsl
or
outsl
jmp
sub
in
imul
pusha
into
pop
mov
jnp
cmp
sbb
ljmp
fs
cld
pop
mov
xchg
stc
fists
rcr
inc
rorb
mov
imul
jb
cmp
movsl
adc
cmp
pop
dec
je
dec
mov
jns
mov
sbb
movsb
mov
inc
and
mov
xor
and
frstor
ret
iret
adc
cs
pop
adc
jp
ficompl
out
mov
xor
push
cltd
negl
xchg
mov
push
lods
xchg
xchg
and
mov
cmc
dec
popf
ss
lds
push
sbb
xor
imul
jnp
push
mov
rcrb
lcallw
fmulp
iret
and
sarl
pop
int3
cmc
in
fstpl
out
cmp
inc
stos
outsl
or
cs
mov
fcmovnb
fs
mov
arpl
lea
xchg
xor
cmp
jne
push
shll
mov
scas
xchg
jecxz
xchg
lea
andb
inc
and
add
and
out
in
sub
pop
push
loope
stc
subl
push
into
daa
icebp
or
sub
int3
sub
adc
int3
xor
and
icebp
jl
xchg
repnz
push
add
xchg
subl
sub
ret
mov
mov
push
rolb
lahf
fsubr
xchg
xchg
insl
lods
add
and
add
sarb
lret
sbb
or
jns
fistpl
cmp
mov
mov
sub
fcmovu
decl
sbb
cmp
lahf
lret
xlat
sbb
pushf
scas
pop
xchg
data16
stc
data16
pop
sub
xor
mov
jmp
push
sbb
sbb
adcb
dec
fst
or
jg
mov
aam
push
adc
in
xorl
or
push
cmp
lcall
cmp
sub
mov
jns
adc
xor
add
sbb
cpuid
out
mov
and
insb
imul
sti
add
pop
or
mov
outsl
fstl
ljmp
adc
stos
popf
pop
cmp
enter
pop
decl
cs
sub
js
pop
std
xlat
inc
loope
add
aas
pushf
es
test
pop
aam
and
mov
mov
pop
jae
cld
incl
adc
and
sub
sbb
add
add
sbb
jmp
dec
inc
sub
xlat
out
inc
dec
sbb
xor
in
out
pushl
mov
inc
ret
mov
shll
xor
xor
ja
xchg
ja
mov
fsubr
pop
inc
push
mov
and
mov
mov
xorl
out
pusha
cwtl
or
cltd
test
rcll
lea
out
or
cmpsl
jle
push
sbb
jp
out
inc
jo
loopne
repz
dec
out
jae
icebp
adc
aaa
xor
aam
andl
push
sub
xchg
jno
cmc
popa
dec
and
sub
xchg
pop
xchg
daa
xor
loope
or
outsb
test
push
stos
adc
or
insl
jl
mov
adc
mov
dec
xor
pop
or
mov
repz
pop
inc
jp
xor
mov
outsl
popf
mov
outsb
es
pop
or
loopne
mov
call
das
scas
ss
jae
push
sub
mov
jmp
fdivrs
mov
cmp
mov
sar
sti
pushf
sub
adc
jle
enter
pop
push
mov
inc
sbb
jae
adc
je
clc
add
or
pop
add
inc
enter
dec
adc
ret
jbe
enter
pop
sub
mov
into
mov
or
subl
mov
nop
mov
in
and
movsb
repz
adc
and
sarb
lret
arpl
dec
sti
pop
mov
push
mov
sbb
jno
and
insb
nop
ljmp
sbb
jle
rolb
inc
inc
in
pop
jmp
xlat
cmpb
dec
daa
out
je
cs
xchg
lods
mov
sub
xor
mov
outsl
enter
adc
push
test
jmp
lcall
sbb
lret
sarl
and
cmp
ds
inc
add
sub
jmp
mov
test
or
repnz
repnz
mov
pushf
xor
stos
gs
jl
xchg
imul
xchg
inc
dec
jmp
add
ret
pop
pop
fdivrl
xlat
xchg
jl
adc
jne,pn
nop
inc
mov
xchg
mov
jne
hlt
mov
or
lock
push
inc
dec
pop
stos
clc
mov
sub
xchg
mov
loopne
out
cmpsl
mov
mov
sub
sbb
dec
test
in
dec
mov
outsb
sub
inc
imul
outsb
movsb
pop
xchg
out
out
test
mov
outsl
jbe
popa
cmp
in
outsb
leave
sub
fwait
clc
loopne
jno
push
mulb
inc
mov
push
xchg
and
xchg
cmc
cmp
clc
adc
cmpsl
add
sub
repz
sar
negb
xor
out
repnz
or
test
ss
inc
bound
cmc
jae
sub
orb
fdivrl
aad
inc
fs
hlt
dec
nop
sub
push
lods
outsb
fdivp
dec
pop
dec
cmc
stos
loop
icebp
movsb
or
sbb
fcmovbe
addr16
cli
aaa
mov
cmpsl
sbb
test
push
inc
dec
daa
mov
and
mov
lret
sbb
scas
popa
inc
mov
bound
test
mov
nop
sub
jnp
and
mov
sub
lods
arpl
xor
pop
jmp
fdivrs
sub
xlat
adcl
xchg
stos
in
dec
add
ljmp
out
push
inc
cltd
inc
and
inc
addl
pop
xchg
mov
fsubs
in
sbb
mov
divb
cltd
mov
cs
mov
cmp
sub
pop
pop
iret
mov
dec
inc
xor
add
xchg
addr16
bnd
stos
decl
mov
and
jo
stos
aam
xor
into
and
add
test
es
adc
mov
ljmp
repz
jns
pop
je
push
cmp
pop
fistl
faddl
jge
jae
mov
sbb
repz
mov
lods
xor
shlb
and
jecxz
stos
jp
jle
ret
out
cltd
xchg
cld
and
xor
mov
imul
jno
or
das
rcrb
adc
das
xchg
jecxz
lods
pushf
sbb
imul
pop
cld
mov
pop
push
and
or
jns
pop
adc
roll
mov
aaa
or
movsb
roll
cmp
mov
and
or
xor
ror
stos
outsb
mov
ja
data16
xorb
mov
add
mov
rcrb
fs
pop
jo
jg
and
inc
inc
push
clc
xor
push
lods
mov
jae
push
imul
dec
or
jle
sbbb
cltd
test
sub
sub
pop
cs
outsl
fcoms
lret
xor
jl
sbb
out
pushf
dec
iret
pushf
adc
lods
out
cmp
imul
mov
aad
mov
cld
scas
fistps
xchg
pop
and
pop
aam
jp
or
mov
daa
push
imul
pop
lea
pop
mov
dec
aad
sti
sbb
mov
pop
leave
dec
in
dec
pop
xor
movsl
and
cs
lods
enter
shll
aad
push
mov
jb
ja
dec
loop
jb
jp
mov
stos
dec
cwtl
mov
mov
pop
das
data16
mov
dec
aas
and
pop
je
adc
loopne
sub
sub
jl
mov
loope
ljmp
test
aaa
dec
pop
or
adc
fstps
insb
lods
cld
fadd
dec
sbb
sbb
adc
add
ret
add
inc
xor
scas
sahf
cmpsb
inc
ficomps
and
and
dec
pop
cmovg
test
inc
or
adc
mov
dec
lock
adc
jb
fcompl
cmp
and
or
loop
mov
test
push
test
jno
std
out
arpl
pop
xchg
cmp
mov
or
jg
add
inc
jecxz
inc
mov
lds
fsubs
sub
xchg
sbb
pop
nop
enter
sbb
leave
or
push
mov
push
es
insl
pop
xchg
mov
cmp
pop
out
pop
sub
stos
and
iret
sub
and
repz
out
imul
push
lahf
mov
cmp
rorl
mov
sarb
lret
inc
je
jecxz
or
sub
hlt
mov
xchg
imul
in
aam
push
int
push
push
sbbb
push
pop
aad
and
dec
imul
mov
les
add
cmpsl
add
push
pushf
mov
xchg
dec
dec
loopne
mov
insl
xor
into
mov
ja
inc
pop
icebp
cmc
dec
add
push
aad
rcrl
adc
lret
jecxz
out
and
jl
pop
imul
or
test
cmpsl
xor
mov
nop
mov
and
cld
xchg
loope
sub
or
and
clc
testl
gs
jl
movsl
clc
fidivs
xchg
pop
pop
mov
mul
stos
call
sbb
insb
mov
fmull
in
mov
inc
inc
jecxz
dec
scas
pop
dec
test
in
lcall
pop
shr
movsb
mov
xchg
out
call
pop
sbb
inc
pusha
jbe
mov
xchg
push
mov
dec
fdivrs
pop
or
cmp
mov
mov
in
pop
in
sbbl
mov
xlat
mov
cmp
test
stc
jb
inc
stc
lock
cld
mov
lods
idivl
fsubrp
xor
add
adc
loope
dec
sbb
pop
add
xchg
inc
enter
cmp
int3
jns
sub
rcrb
inc
ss
test
inc
nop
insb
pusha
add
shlb
sub
sub
fs
xor
aam
jmp
lret
push
jno
jne
jmp
mov
cmp
inc
stc
pushf
movsl
and
dec
loop
xchg
push
sbb
jg
sub
out
mov
lret
mov
mov
scas
mov
mov
and
jge
mov
add
ljmp
icebp
inc
add
mov
adc
sub
adc
dec
lock
pop
jnp
lods
add
mov
push
aam
das
cmp
or
push
jge
shrl
and
and
lret
xchg
inc
xor
stos
imul
mov
rclb
cmp
dec
mov
pop
mov
lret
xchg
rclb
iret
mov
subb
inc
addb
loopne
push
and
negb
mov
addr16
mov
mov
push
clc
adc
mov
sbb
cmp
popf
push
sbb
push
loope
add
adc
pushf
clc
hlt
mov
lods
mov
movsb
das
call
sbb
pop
pushf
les
push
mov
xchg
xchg
sub
faddl
movl
out
push
sarb
jmp
inc
call
and
push
cwtl
fidivl
int
push
pop
je
ret
xor
repnz
mov
je
inc
xor
icebp
inc
imul
out
jnp
in
push
add
fidivs
dec
pop
roll
call
mov
subb
inc
jns
inc
subb
call
mov
xchg
dec
data16
push
insb
les
mov
inc
inc
xchg
xchg
in
aad
mov
into
dec
push
fisubs
sub
add
ljmp
in
insb
ljmp
jo,pn
popl
lahf
xor
loop
mov
inc
mov
data16
or
dec
lcall
push
pusha
mov
jecxz
cltd
cmp
add
add
xlat
inc
call
pusha
shlb
in
lcall
scas
mov
xor
mov
push
sbb
and
xorb
jl
add
shll
sbb
jns
cmp
xchg
push
mov
mov
pop
sbb
out
inc
cmpsb
add
jne
mov
out
bound
repnz
int
dec
xchg
jecxz
lcall
add
mov
push
out
xlat
xlat
mov
cmp
das
out
jp
fadds
sbb
shlb
dec
cmp
xchg
call
sbb
xchg
enter
stc
mov
iret
pop
pushl
ja
fstp
xor
mov
int
add
jnp
fistl
or
cwtl
mov
iret
dec
les
imul
movsl
add
sbb
jle
push
add
andl
cltd
mov
lods
push
int
push
xchg
xchg
or
inc
test
jo
shr
lcall
xor
stos
jp
cmp
mov
lahf
and
push
jae
mov
lock
mov
pusha
and
pop
jg
rorl
mov
fistpl
adc
nop
scas
loopne
hlt
jno
pop
inc
dec
dec
inc
mov
mov
int
xor
or
mov
mov
lds
inc
int
dec
mov
or
xchg
mov
lock
fld
lahf
inc
lret
sub
gs
and
lahf
fidivl
or
pop
xchg
cld
roll
mov
sbb
push
ret
push
ds
inc
jbe
mov
iret
fistpll
xlat
shll
fistps
iret
dec
imul
sahf
cmp
mov
mov
xor
imul
fwait
loop
cmp
fisubrl
dec
jo
dec
pop
cmp
push
jns
sub
in
stos
adc
jg
and
cmp
jp
lods
adcl
jle
push
push
in
mov
push
je
jle
sub
inc
pop
faddp
jmp
daa
dec
frstor
or
in
xchg
pop
or
bound
fistl
clc
cmpsb
xor
xlat
mov
cmp
aam
xor
outsl
bound
imul
hlt
into
pop
mov
jp
sbb
inc
int
das
gs
andb
hlt
stos
popa
push
pop
push
xor
mov
stos
dec
decb
pop
pop
pushl
stos
cmp
addb
lret
inc
sbb
movsl
cmp
in
mov
lock
neg
mov
cmp
xor
lods
cmc
lahf
out
sbb
loop
pushf
call
and
push
pushf
mov
movsl
jmp
scas
cmc
bound
mov
cmpl
xlat
jl
cmp
lcall
mov
pusha
xor
lea
popa
movsl
nop
test
mov
xchg
call
mov
outsl
adc
push
enter
xchg
jmp
fistl
cli
popa
aaa
shrb
adc
sbb
adc
stos
je
daa
adc
loopne
sarb
mov
hlt
adc
pop
add
push
add
push
xor
xlat
jp
out
fwait
data16
dec
in
push
pop
sub
and
out
pop
fcoml
cmpsl
dec
push
xchg
daa
test
add
aaa
jmp
sti
fsubrl
fisttpl
pop
pop
fnsave
imul
cmp
adc
sub
aas
data16
mov
mov
bound
stos
cltd
jns
cmp
dec
mov
imul
sbb
scas
mov
cmpsb
push
push
pop
pop
popa
fisttps
repz
mov
shr
mov
push
jnp
fdivrl
ret
daa
add
sbb
push
aad
adc
arpl
ret
adc
mov
push
adc
xor
inc
pop
xchg
scas
ds
fidivrs
stos
gs
loopne
popf
xorb
fsubrl
ret
add
movsl
filds
push
sbb
adc
addr16
mov
push
rclb
xor
stos
pop
mov
arpl
inc
int
lret
xchg
stos
mov
sbb
stc
imul
mov
xor
push
stc
or
or
cmc
gs
push
scas
sarl
push
inc
dec
test
scas
cld
out
or
mov
add
scas
pop
jle
sub
adc
aam
jns
push
mov
daa
dec
xchg
int
in
pop
mov
add
jecxz
adc
pop
in
dec
jge
out
popa
mov
xchg
push
adc
lcall
arpl
arpl
lea
iret
cwtl
dec
and
push
jne
or
and
sbb
pop
pop
dec
xor
les
push
hlt
pusha
jge
addr16
movsl
stos
repz
stos
aam
dec
dec
jne
pop
xor
inc
movsl
sbb
roll
and
sub
mov
in
pop
divb
jmp
movsb
jnp
repnz
fdivrs
mov
or
pop
push
xlat
pop
test
push
or
pop
xlat
sbb
lock
pop
pop
sbb
ljmp
cmp
pop
pop
std
in
add
out
xor
jbe
xor
fsts
jp
push
data16
paddq
cmp
scas
lea
dec
or
push
jp
and
push
sbb
and
std
pusha
mov
cmp
bnd
popf
inc
stos
outsb
xorl
cmc
outsb
stc
push
jmp
adc
aas
mov
fmull
jl
daa
and
outsb
jbe
pushf
mov
mov
mov
bound
pop
jp
cwtl
or
mov
sub
scas
in
ffreep
insl
dec
mov
or
inc
xchg
out
push
out
sbb
testb
out
cmp
mov
hlt
xor
and
testb
aaa
aam
mov
pushf
adc
ret
pop
push
scas
mov
test
out
fucomi
clc
shl
inc
shll
sub
push
cmpsl
fisttps
test
mov
stos
or
cld
jp
ja
insb
aad
lea
ds
mov
add
pop
cmp
pop
mov
mov
xchg
and
sbb
cltd
not
ljmp
decl
jae
xor
mov
pop
jne
jp
push
push
mov
sbbl
stc
mov
stc
jle
pop
sub
jle
push
enter
adc
shr
mov
js
popf
insb
shrl
push
frstor
inc
js
or
stos
mov
lds
mov
loop
jg
xor
mov
fldt
or
inc
outsb
rcl
loopne
pushf
out
jmp
in
pop
jecxz
mov
cltd
orl
push
rcll
mov
test
push
bound
adc
mov
cli
jbe
pop
pop
repz
loope
insb
bnd
test
sbb
push
xorl
leave
popa
fldt
add
stos
cmc
scas
loopne
aad
sub
aas
cmc
cmp
xor
cltd
out
nop
je
into
sub
xchg
mov
inc
sub
jmp
mov
enter
xor
std
loopne
adc
gs
xor
and
add
mov
jae
mov
scas
cmp
pop
or
popa
cmp
add
dec
insl
test
out
push
push
aas
and
addr16
std
pop
mov
mov
aam
or
adc
adc
popa
cmp
pusha
mov
add
mov
xchg
fidivrl
in
sbb
jl
jle
out
test
and
mov
pop
mov
push
dec
push
xor
jbe
push
gs
jne
dec
sub
push
and
les
in
ud1
pop
and
loope
fdivs
mov
or
out
mov
push
jl
or
jmp
iret
aad
mov
xchg
stos
rcrb
outsl
mov
push
sti
out
jg
xor
cmp
bound
out
loop
js
mov
mov
sub
cwtl
inc
cmc
andl
sbb
out
fstpt
mov
sbb
pop
pop
icebp
pop
repnz
inc
lds
fucomip
pop
mov
sub
imul
fmull
popf
int
hlt
rorb
pop
outsb
lret
and
and
in
cltd
rclb
adc
clc
sub
iret
shlb
jl
jae
push
mov
les
sub
mov
fwait
jae
xor
fwait
mov
xor
and
sub
sub
pusha
dec
jo
icebp
xchg
popf
int
faddl
mov
mov
fisubs
inc
xchg
adc
inc
inc
test
xchg
push
and
inc
pusha
xor
imul
sub
test
and
cvtdq2ps
adc
push
mov
mov
adc
inc
adc
mov
adc
lods
aad
adc
es
mov
aaa
lret
sub
xor
mov
dec
xor
xor
test
out
out
add
out
sahf
fdivrs
bound
int
push
mov
inc
mov
push
jge
xchg
insl
or
dec
push
jcxz
test
movsl
jb
mov
insl
jb
loope
mov
mov
lods
mov
inc
pop
fnstenv
pop
sahf
rep
test
movsb
in
jle
sub
xor
sbb
sbb
out
lea
fwait
nop
mov
mov
pop
iret
jge
cmp
fstpl
stos
mov
std
psubusb
int
pop
mov
jo
jmp
lret
pop
mov
filds
or
lret
fmul
jecxz
mov
fildll
cwtl
push
pushf
in
aas
aam
push
in
and
dec
fdivr
push
push
sbb
jnp
xchg
imul
sbb
sub
mov
flds
sti
xchg
ret
lret
add
test
add
fadd
sbb
jl
sub
adc
pushf
ja
adc
ds
pop
sbb
js
mov
mov
mov
xchg
out
jnp
mov
jmp
fisubrl
sbbl
pop
mov
gs
mov
arpl
inc
mov
stos
or
ret
lods
push
jno
mov
xor
popf
call
jae
xlat
or
sub
cld
jb
adcb
xor
adc
imul
imul
aam
mov
xor
push
notb
mov
shll
mov
xor
ret
jnp,pn
adcl
add
xchg
xor
pushf
push
aaa
mov
mov
adc
xor
sar
insb
mov
jbe
fsubrl
mov
or
pop
inc
ss
out
test
dec
fsts
inc
add
inc
inc
adc
add
push
inc
aaa
repnz
mov
loopne
arpl
pop
cmp
scas
lods
pushf
hlt
outsb
lds
stc
aaa
enter
fldt
sbb
mov
and
mov
pop
cli
and
mov
ljmp
add
aaa
nop
and
aaa
xor
inc
pop
mov
cli
jne
jno
loopne
cmp
push
xchg
mov
xchg
jg
repz
in
out
mov
xchg
fsubrp
out
leave
push
lods
insb
cmpsl
or
xor
sahf
cmpsl
int3
stos
xorl
loope
jae
push
inc
push
add
sub
xor
ljmp
pop
inc
xchg
dec
and
xor
inc
cmpsl
jg
enter
addr16
sub
pop
xchg
pop
xchg
enter
jnp
jge
repnz
jne
jo
mov
in
dec
lock
nop
jne
or
xor
pusha
push
cmp
mov
mov
sbb
or
dec
jbe
sbb
test
rcl
mov
cwtl
mov
std
cmp
pop
lock
loope
add
hlt
jnp
nop
jmp
inc
jg
movhps
sbb
ja
add
sbb
adc
mov
jae
adc
shll
mov
pop
jns
cmp
ss
push
or
inc
cmpsl
push
nop
and
mov
leave
pop
push
dec
mov
rorl
in
inc
sbb
mov
movsl
rorb
rcr
sbb
or
ss
sbb
pusha
adc
push
pop
pop
jno
xchg
mulb
into
stc
push
push
fs
or
into
std
call
mov
add
popf
mov
mov
xchg
daa
adc
scas
ror
lock
push
jnp
mov
dec
rolb
mov
or
and
mov
adcl
unpckhps
pushf
dec
xor
cli
mov
sti
int3
xor
xchg
ljmp
and
add
jg
xchg
lds
inc
or
mov
out
xor
jb
data16
push
mov
jle
in
outsb
and
ljmp
or
std
push
shlb
arpl
sbb
mov
xchg
inc
pop
adc
cwtl
mov
dec
mov
jns
adc
and
mov
xor
xchg
out
das
addr16
imul
int
and
push
test
push
sti
cs
jecxz
push
lret
je
out
lods
into
and
xchg
sbb
push
int3
dec
sbb
or
sub
or
pushf
test
stc
sbbl
mov
cltd
pop
push
mov
adc
in
xchg
je
fnsave
push
and
adc
xchg
out
bound
flds
pop
add
std
repz
jne
jge
popa
pop
fidivrl
in
filds
stos
cli
in
fdivs
adcl
cmp
daa
push
loopne
aad
in
popa
popa
xor
pusha
mov
cmp
addr16
rcr
cmp
xchg
inc
jl
jo
jge
gs
cmpsb
mov
les
test
add
movsb
dec
mov
lret
mov
dec
pop
int3
adc
dec
inc
cmp
jecxz
jg
ror
loop
sub
lcall
daa
adc
inc
into
stos
ljmp
jns
push
pop
xor
and
lea
daa
in
or
cli
jns
sbb
imul
dec
adc
loopne
leave
outsl
xchg
push
jne
xchg
nop
orb
push
gs
jbe
sar
in
in
sbb
scas
mov
mov
sarl
movsb
xchg
popa
idivl
xchg
outsl
cmp
sarl
jl
adcl
cld
inc
ret
inc
sti
repnz
repnz
cmp
push
xchg
xchg
add
lock
pop
mov
aam
jmp
sub
mov
or
invd
stos
movsl
jle
xlat
data16
mov
adc
xor
or
leave
mov
pop
aas
sub
out
jbe
loope
add
dec
or
test
mov
cs
pop
xchg
fdivl
push
shl
cmp
lock
mov
xor
mov
andl
xchg
jns
aas
cltd
leave
adc
aam
test
loop
iret
sub
mov
push
mov
fidivl
xor
dec
xor
in
stc
mov
js
paddusw
cltd
test
loopne
mov
and
pusha
rcr
stos
push
out
rcr
xor
loopne
jbe
adc
lret
rep
mov
jae
loopne
or
fldenv
inc
jne
sub
rorl
or
shll
push
call
data16
jg
lock
pop
push
int3
mov
mov
mov
shll
add
pushf
sbb
xlat
in
dec
jle
or
inc
dec
scas
shlb
sahf
ljmp
pop
js
push
in
add
or
lea
cmpsl
clc
ret
out
leave
sbb
and
inc
dec
or
pop
dec
mov
jbe
adc
lods
out
mov
sahf
xchg
dec
in
in
insb
jl
aas
fcmovu
int3
test
loopne
mov
dec
xor
or
dec
lds
or
or
fstps
or
mov
leave
test
add
fs
leave
pop
testb
jl
jb
mov
pop
insl
lods
ljmp
int
inc
addr16
enter
mov
sahf
mov
adc
pop
sub
sbb
fadds
jo
ss
leave
and
push
dec
imul
hlt
push
test
or
push
mov
pop
mov
inc
popa
jae
cmpl
lcall
mov
rorl
xor
mov
fidivrs
xchg
jle
dec
ja
test
imul
adc
and
dec
sub
jo
mov
inc
outsl
inc
loope
adc
dec
cltd
loopne
pop
and
mov
dec
xchg
or
lods
jg
xor
imul
mov
and
push
sub
inc
or
cld
loopne
pop
and
fwait
or
or
insb
popf
pop
scas
mov
iret
fiadds
pushf
lea
sbb
xor
mov
mov
loop
sub
int
add
adc
lea
and
nop
jne
add
gs
loopne
lods
jp
pop
xchg
out
jae
pop
sub
xchg
mov
pop
lods
in
sub
fs
imul
or
pop
aaa
jp
adc
shll
push
inc
push
fxch
cmpb
xor
rcr
lock
mov
adcl
fildll
mov
mov
push
pushf
loopne
or
lds
fnstenv
sub
or
dec
mov
mov
mov
stos
fisubrs
leave
xchg
or
lods
inc
sarl
push
cmp
or
into
pop
jecxz
xchg
sub
scas
subb
dec
popf
mull
push
push
aad
popa
cmpsl
loopne
inc
insb
mov
es
rclb
add
jge
ficomps
lods
xchg
pusha
out
loopne
add
imul
mov
mov
dec
pop
into
ficompl
inc
dec
mov
fstpl
jb
lahf
loopne
add
testl
bound
mov
mov
call
mov
nop
scas
inc
sbb
and
jne
jbe
or
loop
stos
or
jmp
imul
mov
xor
or
stos
movl
mov
leave
lcall
xchg
clc
mov
repz
fdivrl
mov
aas
aad
jmp
arpl
mov
pop
cmpb
adc
mov
fs
inc
and
out
cmp
pop
xchg
sbb
pop
movsl
jecxz
stos
jnp
cli
mov
test
pop
lcall
pop
add
mov
add
pop
mov
mov
add
mov
cltd
fisttpll
fdivrl
repz
out
scas
pusha
aas
fisubrl
sub
lret
add
mov
addl
push
pop
insb
xchg
adc
cmp
pop
ss
pop
mov
jo
scas
std
jns
push
pusha
jns
mov
fs
icebp
xor
insb
sbb
xchg
push
mov
stos
xchg
and
ljmp
jmp
out
push
add
add
iret
xchg
lahf
popl
ljmp
mov
imul
aas
pushf
pop
movsb
insl
mov
and
push
and
outsb
xchg
mov
add
dec
cs
pop
loopne
jne
cmpsl
xor
and
inc
mov
push
cmp
test
push
mov
add
outsb
push
rcl
adc
add
subb
insl
push
out
and
int3
xlat
ret
jne
les
call
sbb
or
hlt
outsl
cld
xor
jmp
lret
xlat
mov
sub
xchg
jne
inc
mov
out
push
or
rcrl
adc
aad
sbb
jb
pop
test
xchg
jbe
push
jne
and
lods
or
ss
ja
xchg
outsl
lret
xchg
push
popa
movsl
mov
insl
movsb
sub
mov
fs
cli
sbb
sub
nop
jo
jge
in
aam
lcall
push
lods
inc
inc
sbb
mov
aaa
cmp
jmp
popa
mov
jae
outsb
pop
dec
stc
mov
mov
out
add
aam
sbb
std
test
cmp
mov
rcll
sahf
sub
or
inc
jmp
xor
faddl
mov
in
push
aaa
rcrb
dec
cli
inc
or
cmp
jp
test
mov
and
jle
mov
mov
push
cmp
lods
sub
inc
adc
rcr
leave
stos
pop
pop
push
and
mov
pop
pusha
mov
jo
push
shll
xchg
push
inc
insl
jmp
xchg
mov
sbb
mov
xchg
xchg
pop
xchg
inc
mov
dec
movsb
cli
imul
lods
in
push
xorl
jne
pop
jne
pop
xchg
jl
imul
les
cmp
sub
fdivrl
loope
nop
movsb
sbb
arpl
movsl
into
pop
iret
imul
ret
das
mov
fnstenv
and
and
push
pop
out
xlat
jg
stos
sub
in
lcall
jmp
and
testb
movsb
arpl
adc
jae
pop
aaa
push
push
bound
mov
jne
pop
jge
jl
pop
mov
xchg
loope
dec
cmp
cmp
mov
mov
sahf
mov
sbb
mov
mov
pop
out
stos
stc
cmp
orl
or
xchg
iret
xchg
rcll
cs
or
lcall
cmpb
or
adc
pushl
cmp
cmp
cmp
ljmp
gs
icebp
rcll
cmp
jae
arpl
pop
jne
mov
pop
pusha
jg
mov
fstpl
fdivl
sub
in
push
push
cli
ss
mov
mov
mov
mov
jmp
mov
lcall
cmp
xlat
inc
inc
add
pop
loop
js
mov
loope
sub
pop
jecxz
jne
out
or
mov
dec
mov
pop
call
push
push
xchg
dec
shll
es
imul
cld
and
shlb
loop
and
jbe
push
mov
fistps
scas
gs
mov
add
je
sahf
repnz
fnstenv
in
xchg
gs
mov
daa
and
and
into
fnstsw
sti
xchg
sti
mov
fs
or
add
pop
or
rcll
movsl
dec
sub
inc
lahf
sbb
inc
ss
movsb
stc
add
shrb
and
jae
cmc
shll
mov
ja
loop
mov
or
iret
scas
and
pop
add
lods
push
push
or
adc
jns
push
shl
popa
orl
je
aam
sbb
andb
pop
dec
pop
aaa
ficoms
mov
jp
adc
mov
xlat
xchg
xchg
in
push
xchg
or
xor
cmp
popa
xchg
rcrb
mov
adc
sbb
mov
jno
ret
lret
xchg
leave
sub
push
leave
pop
shl
xchg
loop
lret
in
pop
pop
bound
icebp
ror
stos
xor
jb
mov
xchg
jecxz
cmpsl
adc
or
and
or
adc
fwait
lea
sbb
in
movsl
loope
xchg
lahf
xor
scas
js
filds
out
mov
or
ja
jmp
nop
outsl
push
sub
mov
sbb
mov
cli
ficoml
cmp
or
cli
test
sub
stc
mov
adc
ror
repz
pop
lods
lahf
adc
jbe
aad
cltd
imul
leave
sub
mov
adc
add
mov
shlb
aam
out
add
fcoml
ja
popa
arpl
out
sbb
add
sub
sahf
in
push
std
mov
xchg
fisttpl
jmp
push
pop
fdivl
or
sbb
cwtl
lods
cmp
test
mov
int
push
sbb
sahf
lods
mov
mov
push
imul
push
sub
in
mov
hlt
int
inc
push
pop
or
dec
inc
lahf
cmp
ficomps
out
or
mov
push
je
fwait
cmp
stc
mov
mov
or
push
pop
sub
ss
je
out
call
clc
lret
cmp
repz
cmp
inc
add
dec
stc
fisubrl
popa
and
jmp
xchg
inc
or
dec
scas
inc
sahf
lea
mov
inc
mov
call
mov
push
int3
sub
sbb
std
call
cmp
mov
test
scas
jns
jmp
push
std
xor
push
pop
loopne
out
adc
mov
call
das
inc
add
shll
push
push
aas
inc
inc
adc
xchg
lds
scas
push
ret
push
add
inc
push
jl
adc
data16
inc
cmp
fs
sbb
pop
stos
lret
or
inc
add
das
xorl
add
stos
pop
fs
mov
mov
filds
jbe
xchg
pushf
pop
dec
int
mov
cmp
and
sub
icebp
xchg
sbb
test
pop
add
loopne
add
or
mov
dec
out
mov
sbb
cmpl
repnz
pop
fcomp
and
cmp
or
jp
call
jecxz
sbb
and
jecxz
mov
jns
sbb
ds
out
inc
inc
nop
mov
lds
and
das
mov
out
iret
sahf
lcall
sahf
xchg
mov
je
and
stos
inc
sub
in
fistl
add
addl
movsb
add
sbb
dec
scas
cld
je
stc
pushf
xor
lods
jnp
ficompl
shlb
dec
jp
push
adc
lcall
into
mov
xor
pop
ret
mul
push
inc
addl
shlb
rcrb
cmp
stos
add
xchg
push
or
out
xchg
or
xor
push
lods
mov
jns
stc
lock
aad
sub
icebp
jae
xchg
lret
out
lods
xor
jbe
repnz
adc
dec
mov
xlat
jmp
data16
and
adc
nop
in
inc
jnp
mov
mov
ficomps
or
sbb
test
mov
inc
insb
mov
adc
add
sbb
push
roll
push
fcmovnu
ret
mov
mov
inc
xchg
daa
xchg
cmp
add
pop
scas
adc
aas
mov
push
mov
xor
add
loopne
pop
xchg
pop
outsb
push
sbb
dec
xor
pop
or
mov
xor
scas
mov
pushf
daa
outsl
ja
punpcklbw
arpl
ja
cmp
mov
mov
js
bound
mov
dec
cmc
fcompl
insb
xorl
xor
rcl
stos
gs
push
loop
adc
add
push
pop
js
lcall
mov
nop
mov
cmp
adc
ljmp
or
or
cltd
push
inc
mov
test
cmp
inc
lret
sub
and
and
add
jmp
into
cmp
sbb
ss
stc
or
mov
xchg
push
dec
xor
outsl
or
int
push
xchg
jp
fwait
in
ror
dec
aad
xor
sub
dec
mov
xlat
lock
cmp
rol
pop
mov
out
mov
lds
or
mov
mov
fstl
loopne
int
or
cmpsl
push
or
dec
pop
js
movsl
js
insb
daa
fists
xchg
insl
cmp
repnz
mov
call
sbb
jle
mov
push
inc
jge
or
jmp
adc
rcrl
ja
je
sbb
inc
dec
xchg
out
xchg
adcb
or
mov
xchg
jge
ret
out
fmuls
xchg
mov
jae
xor
push
movsl
dec
mov
add
inc
jne
dec
push
icebp
shrl
push
inc
pusha
jno
arpl
sub
cmp
adc
pop
adc
fsubrl
popf
sets
popa
jge
cmpsb
scas
hlt
pop
pushf
inc
jbe
fwait
mov
pop
mov
out
xor
xchg
enter
add
inc
xchg
sbb
cmovo
ss
jge
nop
jne
arpl
pop
xchg
mov
push
testl
mov
bound
lahf
push
imul
jb
mov
jnp
jbe
push
rcl
adc
inc
jae
sub
push
mov
adc
fiadds
pop
xor
jl
in
or
jnp
inc
xchg
mov
push
xchg
cltd
data16
jnp
sub
jle
test
jg
rcll
xchg
out
stc
add
lea
es
jnp
lods
pop
mov
out
push
mov
shlb
lahf
push
sbb
js
outsl
mov
in
movsb
pop
push
jle
jg
dec
jne
inc
xor
mov
lret
testl
cltd
jp
sub
addr16
data16
movsb
in
aad
xor
aam
stc
cmpsl
add
cmp
mov
movsl
call
bound
in
aam
sti
inc
adcb
xchg
int3
sti
sarl
insb
jae
and
mov
aad
loop
pop
sti
xor
xlat
xchg
adc
jp
xchg
sbb
movsl
ss
mov
push
cmp
popf
sub
inc
dec
push
cmp
mov
sub
insb
lods
leave
nop
lock
and
mov
or
mov
lcall
xor
leave
mov
cs
adc
mov
push
jle
jns
xor
imul
lcall
enter
push
stos
push
inc
push
sub
fmull
fistps
add
test
xor
inc
xchg
inc
test
out
repz
add
push
cmc
mov
adc
xchg
stc
test
lods
mov
imulb
fistl
jge
jge
push
adc
aam
xor
mov
insb
test
popa
push
jecxz
lods
in
ret
loopne
dec
data16
pop
aas
out
jmp
ljmp
addr16
cmc
xchg
mov
insb
jbe
mov
fwait
call
sub
lock
shrl
cs
enter
xchg
mov
sbb
arpl
popf
cmp
outsb
xchg
rcll
sub
push
frstor
insb
loop
mov
outsb
add
out
dec
ret
mov
iret
sbb
pop
mov
into
pop
cmpb
mov
movsl
mov
enter
scas
jg
subb
pushf
mov
or
or
dec
and
lret
sub
cmp
add
jg
stc
les
icebp
mov
jle
lods
mov
sub
or
xchg
cs
xchg
xor
push
stos
fnstenv
jb
lcall
and
mov
push
pop
sub
jb
cmp
lea
sub
ret
xor
xchg
movb
push
pusha
test
cmpsb
mov
test
or
addr16
push
int3
or
lahf
mov
dec
sbb
stc
dec
adc
add
gs
js
fprem
das
pop
in
xor
sbb
pop
fldenv
cltd
mov
je
popf
adc
sub
dec
xchg
pop
cli
repnz
das
push
test
xor
adc
sbb
in
out
out
lods
sbb
fsubs
lea
rorb
fcoml
repnz
lock
lcall
js
adc
push
pop
daa
xchg
adc
xchg
cmp
outsl
cmpsb
out
mov
mov
mov
cmp
mov
xchg
ss
lds
sahf
xor
dec
push
pop
jns
xchg
pop
dec
dec
mov
dec
mov
fwait
jle
es
lahf
adc
fcompl
or
int3
jns
dec
push
stc
add
insl
loop
dec
nop
add
adc
gs
dec
in
mov
or
inc
loopne
xor
arpl
jmp
orl
roll
sub
in
cmp
lds
pop
test
pop
mov
add
mov
lock
aas
xor
adc
inc
or
les
add
call
in
iret
mov
add
ds
pop
popa
fimuls
inc
and
dec
leave
out
xchg
sub
xor
xor
leave
sub
inc
out
cmpsl
or
or
outsb
mov
cmp
cmp
call
add
nop
xlat
scas
dec
xchg
inc
daa
pusha
loopne
lret
jg
insb
popa
xchg
mov
xor
iret
sahf
xchg
dec
jo
aas
mov
and
sbb
sar
addr16
mov
cmpsl
or
sub
mov
shr
xchg
insb
dec
inc
stos
cltd
lahf
add
add
sbb
cmp
into
add
jbe
out
adc
jnp
sarl
push
hlt
dec
inc
sub
mov
or
pop
or
sub
lods
dec
jns
inc
bound
mov
pop
cs
iret
lahf
jo
mov
adc
fstps
jmp
dec
cs
jp
movl
xor
or
cmpsb
fcompl
dec
lret
inc
das
out
pop
inc
push
in
lret
aaa
sub
xchg
jb
sarl
sti
adc
xchg
xchg
frstor
mov
mov
cli
ds
push
aas
in
cltd
and
fcomps
fistl
mov
lahf
sub
add
push
imul
mov
scas
add
pop
dec
pop
push
js
or
rcll
push
jg
jl
lret
dec
notb
add
inc
lods
xor
call
je
inc
fwait
push
lods
or
out
cli
inc
add
sbb
jbe
sbb
aam
jmp
adc
xchg
sub
ljmp
and
mov
mov
mov
xchg
ret
fsubrs
xchg
mov
and
mov
neg
or
push
les
stos
fisubl
xorb
inc
or
out
lcall
stos
adc
in
arpl
and
inc
lock
jae
mov
leave
mov
repz
sti
cmovg
sbb
hlt
mov
push
loope
lahf
xchg
out
cmc
sub
clc
outsl
loop
sti
add
xchg
in
loope
testb
jp
mov
pop
addb
xchg
lods
iret
lret
aaa
jnp
mov
clc
adc
mov
hlt
aad
jae
mov
add
clc
jns
mov
inc
mov
mov
lret
xor
out
icebp
xor
xchg
mov
mov
cmp
sbb
cmp
push
cmp
or
add
jmp
dec
push
ss
in
fldenv
xchg
shl
sbbl
popf
dec
pusha
jbe
mov
mov
adc
mov
enter
or
cli
pop
jo
lds
daa
sarb
pop
lock
cmpsb
fimuls
jno
fwait
xchg
cmc
cmp
pop
pusha
cmpb
popa
out
iret
and
push
sbb
push
clc
xor
or
lock
insl
inc
enter
nop
je
xor
enter
sub
sub
cli
pop
test
and
mov
popa
aam
push
cmp
jne
int
xchg
jmp
in
xor
into
mov
in
jbe
jbe
fisubrl
adc
lret
fisubs
sbb
fcompl
jle
push
sub
pusha
pop
ja
push
jbe
lea
subb
out
mov
xchg
rclb
mov
pusha
inc
out
lret
push
fcomp
jae
xor
jbe
mov
mov
dec
scas
mov
dec
loop
lds
push
lods
push
push
sbb
sti
cmp
mov
aas
aad
adc
xchg
xchg
out
dec
inc
fsts
cmp
sub
les
out
xor
popa
xor
nop
js
dec
push
sub
inc
lock
daa
insl
adc
pop
add
dec
mov
add
rorl
cli
repnz
xchg
cmpsb
adc
repnz
repz
mov
in
sub
fdivl
mov
insl
push
xchg
js
loop
movsb
jp
ds
fistps
and
jb
xor
cltd
jae
xchg
movsl
jmp
xchg
cmpsl
popl
idivl
inc
movb
pop
jge
dec
xrelease
jae
test
call
push
es
loop
test
stos
sub
push
mov
std
in
aas
loop
mov
int3
movsl
fsts
les
sbb
shrb
jae
ja
cs
jmp
int3
push
movsl
in
add
jo
popa
xlat
sub
mov
xor
and
dec
jp
je
mov
imulb
xchg
dec
push
aam
cmp
ret
je
pop
xor
enter
sub
fs
fistpll
aas
mov
in
mov
fcomps
add
stos
mov
mov
out
mov
and
cmp
push
cmp
add
pop
jno
and
pop
mov
mov
xlat
das
sar
jle
inc
movsb
stos
and
stos
ficoms
dec
push
lret
push
insb
adc
arpl
mov
cli
mov
lret
xorl
push
mov
sub
dec
mov
aaa
mov
or
jo
imul
inc
test
leave
rorb
imull
jns
mov
inc
jle
push
repz
jp
outsb
mov
dec
jge
outsb
ret
sbb
or
xchg
xchg
inc
jne
fstpt
aam
pushf
mov
ja
fnstsw
jp
fcompl
call
sub
rcrb
push
es
pop
in
mov
ret
ja
pop
fwait
repnz
xor
push
push
nop
test
mov
and
xor
or
and
xchg
fsubl
dec
push
ja
or
sbb
dec
sub
cs
test
push
jg
leave
push
pop
jp
jno
push
sbb
jb
add
adcl
cmp
lret
sub
gs
mov
xchg
scas
fs
lods
adc
pop
xor
inc
lret
push
pop
jle
enter
sbb
in
jle
ret
rorb
and
scas
sub
repnz
insb
ds
aaa
jb
pop
fistl
mov
pop
adc
jns
imul
daa
sub
jo
fildll
fstpt
jmp
scas
jno
and
orb
inc
adc
retw
cmpsl
rclb
lret
xor
and
and
pushf
or
leave
aas
fsubp
das
fcompl
in
mov
xor
xchg
and
inc
outsl
push
pop
mov
push
and
mov
in
fs
decl
das
dec
cmpl
pusha
wrmsr
mov
jno
mov
inc
mov
xchg
inc
xlat
pushf
pop
jl
inc
pop
adc
jge
push
cmp
sub
xchg
dec
adc
mov
sbb
push
inc
or
pop
xor
push
mov
shll
out
sbb
gs
inc
pop
and
pop
mov
les
in
jns
mov
push
or
cs
dec
add
movsb
add
cmp
sbb
mov
dec
cltd
popf
add
cmp
sbb
into
pop
mov
cmp
mov
add
test
dec
bound
ret
call
and
add
std
ret
jo
xor
xchg
ss
cmp
sti
xchg
movsl
lret
xlat
es
in
fisttpll
cmp
aad
lret
xchg
mov
sbb
mov
cmp
push
jne
shr
shlb
mov
ds
jae
insl
sbb
mov
add
sub
pop
sbbl
aam
sub
or
rcrb
add
insl
movntq
out
movsl
mov
test
and
fcmovnbe
addl
iret
popf
sub
and
lds
cld
sbb
cmp
in
push
lds
lods
lods
leave
lea
imul
or
mov
mov
sbb
push
jno
scas
stos
and
test
sbb
push
insb
enter
iret
dec
mov
jno
stc
in
and
cld
mov
or
mov
es
jne
push
jmp
in
jnp
add
loopne
gs
mov
mov
outsb
add
mov
push
pusha
sbbb
popf
stc
cmp
test
ret
cltd
inc
shrb
adc
rcl
ret
aam
lock
or
mov
jge
scas
add
push
xor
xchg
pop
adcb
inc
adcl
lcall
jns
push
fstpl
xor
in
mov
pop
daa
icebp
xchg
jnp
cwtl
loope
sub
xchg
mov
mov
or
jb
insb
jns
add
xor
mov
ror
xor
dec
mov
in
xor
push
add
dec
out
imul
orb
fsts
sub
mov
push
xchg
lock
aad
pusha
mov
es
adc
mov
int3
xor
rol
hlt
or
mov
fstpt
inc
stos
add
movw
pop
js
int
push
int3
dec
mov
and
sbb
outsb
mov
xor
cmp
mov
rcll
leave
xor
xchg
push
inc
cltd
test
aas
xor
loop
call
cmp
push
or
xchg
pop
ret
inc
mov
fldcw
dec
sub
lods
pop
lahf
pop
jnp
pop
stos
adc
test
adc
xchg
xlat
icebp
and
xor
into
adc
aad
je
fstpt
xchg
test
mov
mov
dec
lret
inc
push
lret
push
into
pop
dec
pop
xchg
fistps
outsb
cmpsb
inc
popa
jg
loopne
nop
push
mov
outsb
push
sbb
xchg
pop
addb
into
pop
testl
jmp
gs
or
xor
xchg
ljmp
pop
cmc
push
mov
dec
rcrb
cmpsl
fdivs
out
scas
mov
dec
mov
ljmp
std
cmp
xchg
sahf
inc
outsb
push
xchg
pop
pop
inc
mov
cli
cld
pop
jecxz
or
mov
xchg
rclb
roll
push
idiv
xchg
loopne
lds
pop
lock
and
mov
dec
sti
rcr
cmp
cltd
cmpsb
fists
dec
popa
sub
lods
arpl
mov
and
mov
jl
cmp
sbb
mov
or
jno
push
and
call
add
daa
ss
outsb
arpl
inc
pop
mov
imul
mov
mov
loope
pop
cmpsb
arpl
mov
push
jg
cmp
imul
jmp
adcb
jl
scas
aam
mov
jb
mov
dec
adcb
stos
adc
idivb
mov
mov
pop
fistps
andl
add
mov
fisttps
or
push
or
fwait
adc
js
adc
mov
xchg
mov
jmp
xchg
mov
sbb
les
mov
or
dec
stos
push
jp
jmp
xchg
xchg
adc
xchg
xchg
addr16
xchg
aas
dec
sbb
xor
bound
out
cmp
xor
lret
and
sub
out
nop
scas
push
xor
mov
sbbb
lods
shrb
push
dec
std
sub
push
cmp
lcall
imul
or
sbb
and
jecxz
in
pop
jne
sarb
cmp
dec
add
push
jp
icebp
mov
insb
push
cmp
aas
es
adc
and
iret
cmpsb
nop
incb
inc
hlt
or
pusha
cmc
cltd
adc
xor
add
cltd
les
popf
push
daa
and
xchg
push
in
mov
je
cmp
fistpl
or
je
push
nop
imul
stos
jl
push
cmp
repz
push
cmp
jp
stos
addl
subb
jmp
into
sahf
push
and
insb
push
jle
fstpl
inc
test
sbb
pop
clc
cmp
mov
sti
inc
sub
jl
xchg
or
sub
jae
jo
mov
imul
adc
push
dec
scas
sbb
insl
pop
adc
and
sbb
and
sub
insb
imul
mov
sarl
push
or
js
sub
or
sub
pop
sbb
or
negb
loope
cmc
scas
add
ret
inc
adc
arpl
xchg
pop
jecxz
sbb
or
in
out
jge
jmp
or
nop
xchg
sub
js
int
pop
jne
arpl
iret
mov
dec
lds
dec
ret
jg
add
sub
test
add
arpl
xor
test
or
pop
adc
mov
fisttpll
aam
xchg
sub
mov
loop
xchg
andl
pop
push
sub
mov
dec
pop
sbb
jb
fdivrp
mov
fistpl
jg
in
jbe
data16
cmp
daa
xchg
inc
sub
inc
cli
fstl
sub
lcall
xchg
push
sbbl
dec
sub
stc
jge
jne
pusha
mov
push
sbb
jg
or
int3
jo
mov
in
or
push
loopne
aaa
jecxz
mov
mov
hlt
fsqrt
jmp
jl
adc
aaa
push
sub
jno
or
jbe
hlt
lret
ljmp
adc
insl
xchg
push
fistps
flds
sub
shll
test
andb
loop
fstpt
iret
xchg
int
and
mov
movsb
arpl
mov
sbb
das
loope
imul
push
loopne
cmc
jno
sub
sub
or
dec
xchg
push
jp
and
inc
fldpi
cmp
ds
leave
es
inc
jae
outsl
sbb
pusha
test
dec
movsl
ret
fstl
push
lcall
mov
andl
push
shlb
pop
mov
mov
xor
inc
pop
int
mov
add
pop
cmpsl
jp
sub
cltd
mov
js
pop
icebp
cs
jge
in
mov
pushl
cli
ret
fs
jo
push
xlat
pop
jns
mov
inc
push
out
mov
cmp
pop
sbb
mov
or
cli
pushf
mov
adc
int3
std
out
lahf
sub
in
xor
mov
inc
push
sbb
dec
adc
cltd
jmp
push
or
xchg
pop
std
and
jg
jmp
sub
por
lock
popa
and
mov
aaa
loop
or
push
jno
add
loopne
pop
inc
adc
add
jo
sub
lahf
xchg
xor
mov
and
and
dec
pop
fwait
ja
mov
jmp
or
push
mov
jns
cmc
jbe
fmuls
mov
lcall
xor
mov
jnp
sbb
mov
push
xchg
ss
fsubrl
lock
mov
inc
in
fildll
fidivrs
jmp
lahf
clc
dec
xor
push
test
and
sub
or
test
ds
and
sahf
enter
fmull
sbb
stos
jecxz
inc
fcoms
insl
ds
add
fsubr
xchg
mov
lods
inc
sub
cmpsl
push
push
cmp
jne
pop
das
xor
mov
mov
mov
mov
inc
xchg
bound
in
fdivrl
push
xor
push
jle
out
rorl
icebp
or
jle
adc
inc
loop
cmp
push
ror
sub
mov
scas
idivb
jg
popf
ror
sbb
sub
test
js
mov
or
sbb
and
sti
pushf
add
xchg
shlb
sarl
jg
insb
xchg
dec
and
pop
inc
xor
pop
jae
call
jle
pop
xor
lret
sub
mov
int3
jmp
dec
and
and
mov
out
sarb
dec
sti
es
adc
push
repnz
mov
lcall
and
add
adc
mov
icebp
rcll
fisubrs
lds
mov
mov
ja
addr16
xor
loope
add
push
pushf
jae
cmp
daa
cmp
pop
pushf
mov
xchg
daa
leave
jge
iret
pop
movl
mov
or
cmc
pop
pop
jb
test
jmp
fistl
jp
sbb
cld
push
xchg
cmpsl
int3
clc
xor
mov
push
fadd
push
pushf
add
aaa
rcrb
mov
divl
cmp
fdivrl
jne
push
divb
jp
subb
dec
mov
xor
aam
dec
movsb
mov
cmp
nop
daa
pop
sti
call
adc
rcr
push
popf
clc
pop
push
hlt
pop
mov
pop
lahf
in
fsubs
or
popa
sbb
push
pop
sahf
outsl
sub
ds
mov
ficoms
nop
fs
xchg
lock
and
lock
xor
jb
mov
pop
out
push
inc
pop
dec
dec
int3
out
lret
stc
imulb
pop
mov
inc
and
lret
loop
test
sbb
sbb
cmp
out
push
mov
in
xchg
add
movsl
testb
jecxz
push
and
jecxz
shll
dec
inc
iret
out
jno
adc
xchg
adc
jno
dec
fistpl
lds
js
jnp
and
adc
shlb
add
cmp
movsl
jae
xchg
cmp
subl
and
arpl
aam
fiadds
cmc
call
adc
sub
jl
inc
sahf
jg
pop
cwtl
pop
mov
adc
in
inc
in
scas
loopne
jbe
mov
mov
addl
dec
addr16
pusha
fucomi
jmp
loopne
fwait
shrb
push
ljmp
xchg
bound
ret
sub
pop
loope
lret
rcll
xlat
pop
xchg
jns
mulb
clc
or
add
sahf
fstpt
jle
sub
shlb
jne
push
fs
dec
adcb
sbb
xlat
mov
loope
mov
inc
mov
push
cwtl
es
fwait
inc
jae
xchg
pusha
sbb
sarl
jge
lcall
jecxz
mov
cmp
jmp
insl
in
mov
add
flds
test
sbb
xchg
and
dec
in
mov
outsb
sbb
out
mov
mov
mov
push
mov
jp
push
fwait
xor
xor
jnp
push
xchg
jb
pop
ss
add
push
cmp
mov
and
sbb
shr
cmp
mov
addr16
pushf
add
inc
dec
fcoms
push
loopne
inc
outsl
ljmp
ret
stos
mov
sbb
fbld
fwait
daa
mov
dec
push
jecxz
sbb
xchg
pop
xchg
mov
outsb
mov
mov
dec
dec
dec
movsl
fstpt
mov
and
test
jl,pn
push
push
inc
lcall
subl
push
add
std
xchg
push
inc
ja
sbb
int
out
inc
add
sbb
mov
popa
int
mov
inc
cld
lods
das
xchg
lods
fwait
adc
sub
insb
lock
cmp
lods
dec
repnz
in
pop
push
mov
sti
test
dec
xchg
push
rolb
sahf
ds
addr16
dec
int
arpl
test
dec
mov
push
sbb
out
pop
add
jbe
pop
add
imulb
outsl
fiaddl
popa
and
jae
test
in
bound
std
dec
call
cmp
rorb
sbb
jns
dec
dec
adc
push
push
mov
ror
push
dec
cs
cmc
xor
int3
imul
shlb
mov
sub
fucomi
out
cmpsl
sub
cmp
movsl
xor
inc
inc
fstpt
rorl
pop
loope
stos
stc
cmc
and
shrb
in
xor
pop
or
xor
push
pop
xchg
xchg
dec
fistps
dec
dec
jae
adc
cmpsb
sbb
pop
lahf
add
or
ja
ret
subl
xor
aaa
jl
push
mov
repz
mov
xor
lea
addr16
loopne
aam
pop
mov
stos
mov
popa
mulb
testl
ss
divb
mov
cli
call
jg
xlat
cmpsl
mov
pop
sub
ficoml
sbb
shll
add
mov
jmp
insb
mov
xchg
mov
and
sub
subl
cld
pop
aad
dec
fs
cmp
xor
xchg
into
sub
and
adc
insl
repnz
repnz
or
int
ljmp
add
jecxz
mov
push
push
lret
jl
pop
js
subl
and
push
xor
push
test
xchg
xlat
in
cli
subps
cmp
aas
stc
xor
stos
iret
xchg
lds
add
out
out
out
popa
xchg
mov
in
lahf
repz
in
mov
xor
loop
ret
aas
fnsave
inc
and
jae
cld
and
in
jbe
cmp
add
jmp
movsl
cmp
out
loopne
scas
fcmovnu
arpl
gs
and
mov
push
pop
mov
push
jp
cmp
ss
dec
xchg
inc
jl
cld
add
std
arpl
dec
imul
mov
mov
and
call
test
dec
or
cs
shll
sub
cs
je
daa
xor
pop
add
pop
jb,pt
jmp
jecxz
jb
sub
mov
mov
jmp
cmpb
or
mov
add
idivb
push
in
jecxz
dec
push
in
fs
cwtl
push
sti
ljmp
gs
mov
push
test
sbb
shll
jl
and
fisubrl
mov
lret
or
repz
mov
fldt
stos
mov
pop
scas
pop
push
imul
jg
mov
je
notb
and
xchg
push
data16
dec
loopne
insb
add
sub
cmp
lret
pop
cmp
fisttpll
adc
dec
scas
push
mov
loop
les
add
adc
pop
bound
pop
sti
xor
sbb
das
mov
out
and
aaa
leave
push
cld
aad
stos
movsl
push
adc
mov
cmp
shll
in
aad
in
pop
inc
shrl
mov
icebp
push
test
mov
in
sti
add
dec
lcall
lret
lret
xor
lock
sbb
dec
out
sahf
mov
rcl
xchg
and
jge
pop
inc
cmc
sub
fisttpl
sbbl
push
data16
mov
arpl
loop
pop
sbb
push
mov
xlat
push
dec
std
repnz
lcall
loopne
in
clc
sub
and
cmpsl
cmpsl
add
jnp
mov
iret
lock
stos
bound
lret
pop
pusha
inc
int
mov
add
pusha
xchg
imul
xchg
and
addr16
jg
mov
test
mov
fstpl
outsb
loop
repnz
ljmp
push
rcrl
mov
xchg
sub
and
jns
into
cs
pop
push
adc
into
jne
cmp
mov
cli
pop
movsl
and
cmc
lcall
jle
loopne
pop
icebp
or
xchg
jle
pop
or
sbb
adc
mov
pop
adc
mov
into
jmp
cmp
push
std
loopne
jmp
xor
jb
movsb
pop
sbb
dec
sbb
sub
imul
mov
lods
adc
notb
das
xchg
dec
mov
loopne
jns
mov
dec
fiadds
in
dec
or
sbb
iret
inc
mov
dec
fnsetpm(287
pop
add
out
lcall
cmp
jae
popa
add
mov
movsl
je
rclb
add
sub
jle
call
pop
fldt
insb
fstp
jnp
daa
sarb
sarl
aam
push
bound
shll
mov
jmp
inc
in
sub
ret
and
scas
enter
xor
std
push
xchg
push
pop
js
aad
sbb
std
jl
ss
adc
lcall
mov
mov
sbb
out
pop
or
cli
loopne
adc
cmpsb
test
rorl
mov
xor
call
sbb
lds
adc
and
stos
repz
shl
cmp
insb
or
or
mov
fsubp
orb
pop
fadd
rcll
mov
jno
xor
cs
add
out
add
iret
es
sbb
xchg
fstpt
lds
pop
mov
sub
pop
xor
push
sbb
jns
push
mov
out
xchg
inc
inc
dec
out
test
movsb
mov
jb
or
sti
ss
push
incl
push
mov
mov
and
mov
push
out
popa
les
lcall
inc
adc
rcll
ds
jp
push
cmp
inc
test
jle
int
xchg
dec
loopne
inc
imull
xor
mov
inc
or
xchg
enter
adc
test
pop
inc
js
out
adc
das
adc
mov
into
mov
je
pop
push
adc
jp
mov
sub
cmp
adc
inc
xchg
lret
cmp
pop
xlat
in
into
jb
or
mov
lods
aam
outsb
xchg
mov
and
xchg
nop
enter
or
push
push
ljmp
ds
lds
and
xor
bound
jp
fmull
ljmp
or
loope
jb
loop
mov
stos
pop
out
cmp
aas
lods
in
scas
mov
dec
and
popf
mov
sbb
push
daa
mov
scas
push
xor
push
ds
push
pop
int3
mov
sbb
mov
dec
insb
xchg
cs
lret
adc
jae
xchg
mov
mov
mov
and
or
sahf
jg
jno
xchg
cwtl
mov
xchg
lret
stc
mov
adc
sbb
sub
out
pop
sbb
add
pop
ret
or
and
cmp
push
sbb
test
dec
or
pushf
jo
aad
mov
mov
pop
push
jle
mov
loop,pn
jecxz
and
jmp
jne
push
int3
pop
cltd
lret
les
inc
loopne
test
inc
pop
les
sbb
and
in
and
adc
fisttps
and
xlat
cs
mov
mov
ret
mov
push
jecxz
cmp
bound
fsubs
stc
and
sub
cld
jmp
mov
in
mov
cmp
mov
cmpsl
mov
jae
xchg
stc
cld
imul
jb
loop
and
aam
xor
sub
mov
mov
xor
sub
and
add
mov
aas
cmp
push
jb
int3
mov
sub
mov
aas
subb
lret
adc
push
mov
and
cmp
fldenv
adc
stos
dec
inc
or
repnz
ss
adcb
cli
loop
mov
add
call
fsts
test
pop
mov
cmp
cs
rcrl
jnp
call
xchg
push
pop
pop
cmpsl
mov
cwtl
sti
fs
xchg
shrb
inc
mov
cmpsb
gs
lcall
jl
lret
push
cmpsl
and
rcrw
lods
daa
stos
pop
bound
scas
imul
and
es
cli
repz
dec
mov
aad
lock
sbb
divb
lahf
mov
inc
xlat
or
xchg
stos
push
push
mov
outsb
int3
jl
icebp
jl
sbb
int3
push
dec
int
stc
out
or
mov
mov
inc
ficoms
inc
aam
add
add
sarl
das
xor
and
mov
and
in
in
arpl
test
ror
enter
adc
clc
or
test
push
add
arpl
and
jb
add
sbb
jno
pushf
in
mov
push
dec
ds
push
je
fucomp
cs
scas
cmp
mov
push
mov
out
or
dec
adc
xchg
dec
push
cmpsl
jno
sar
outsb
xchg
sub
fldenv
iret
xor
pop
pop
xor
jne
dec
push
jo
cmp
xor
sbb
cmp
sti
lods
sarl
imul
in
movsl
enter
pop
lret
dec
add
shrl
lret
cmp
xor
jg
sub
jp
lret
push
sbb
orb
sub
pop
mov
xor
outsb
ljmp
lods
cli
dec
das
fisttpl
pop
sub
xor
into
sbb
inc
fistl
pusha
pop
iret
jl
mov
fsubs
aas
pop
cmp
xchg
jle
sbb
inc
xchg
pop
jp
jae
jo
push
fsubrl
lret
fs
mov
ljmp
mov
imul
sbb
push
mov
push
jp
push
cli
dec
mov
popa
dec
or
imul
cld
jnp
out
mov
ss
stos
loope
pop
outsb
ret
arpl
mov
fwait
pop
sbb
pop
notb
add
jmp
stos
xchg
mov
push
stos
or
jns
push
punpcklwd
aad
mov
cmc
addr16
mov
adc
pop
mov
dec
dec
call
daa
add
mov
cmp
cs
and
push
out
mov
adc
sbb
inc
and
xchg
js
sbb
je
bound
mov
scas
out
mov
ss
jge
jmp
xchg
lods
mov
mov
mov
fsubrs
popa
pop
cmp
xchg
xchg
jne
push
into
or
adc
mov
fincstp
adcl
cld
das
aas
mov
dec
and
jecxz
imulb
push
xchg
scas
mov
rorb
test
and
ljmp
int
mov
ja
sbb
int3
shl
mov
mov
cld
fsub
lods
mov
std
mov
and
push
sbb
cmpsl
pop
popf
push
dec
lea
or
mov
mov
into
ja
inc
mov
sbb
xchg
mov
cmp
outsl
lods
cld
lret
movsb
icebp
sub
jno
subb
mov
xor
jmp
xchg
into
or
sub
inc
and
in
push
repz
cwtl
icebp
add
xor
movsl
dec
stos
mov
sub
les
fmuls
adc
inc
dec
xor
sbbl
dec
call
ficompl
aas
mov
jg
add
or
cmp
cmpsl
jl
sbb
jae
rcll
mov
push
jle
shrl
xchg
or
pop
ret
jle
sbb
loop
push
pop
imul
scas
movsb
fwait
jb
xchg
jne
sbb
pusha
mov
and
mov
push
aas
cmp
sub
adc
push
xchg
adc
js
or
jne
lods
repnz
lock
cmp
xor
ljmp
adc
in
stos
in
jle
stos
xor
mov
and
mov
or
cmpsb
and
jbe
xchg
loop
test
xchg
push
cs
sbb
adc
je
inc
ss
mov
cmp
mov
ljmp
sub
push
sub
sahf
cs
addr16
sub
dec
inc
mov
adc
jmp
inc
out
push
adc
orl
insb
fs
stc
out
adc
lods
dec
add
cld
decb
mov
mov
lcall
pop
aas
dec
cwtl
pop
pop
std
add
jmp
or
mov
in
fnstsw
push
pop
andb
ret
adc
mov
dec
add
and
adc
xchg
movb
dec
mov
pop
bound
fwait
and
jge
or
scas
clc
cmp
mov
dec
jo
pop
test
and
lock
mov
mov
je
inc
or
in
jmp
sar
xor
call
shrb
sbb
scas
and
test
lret
mov
jmp
mov
add
and
aad
shlb
mov
iret
fidivrl
clc
xor
and
je
push
icebp
cmp
lds
mov
push
jg
push
add
int3
and
push
imul
addl
mov
mov
scas
cli
sti
xchg
pop
testl
lahf
cmp
xchg
jmp
push
lcall
enter
cwtl
inc
icebp
repz
stos
out
shlb
dec
sub
pop
shll
cs
mov
jp
cs
jmp
out
cmp
jp
jno
popa
rcrl
mov
stc
mov
push
aad
jp
and
xlat
mov
rcll
stos
scas
andl
and
mov
fcomip
into
push
jns
int
pop
mov
fisubrl
sti
cmp
orl
jle
rorb
inc
ret
pop
shll
aas
fwait
jae
jmp
jge
lahf
call
xchg
outsl
jle
push
ffree
add
dec
mov
sub
fimull
leave
imul
out
addr16
jl
ljmpw
test
lcall
add
call
jae
dec
jmp
es
js
jnp
dec
in
mov
jle
clc
jecxz
mov
pop
in
lds
ficompl
outsb
inc
inc
mov
stos
lret
or
lds
loope
pop
sub
fdivrl
cmpsl
cltd
xlat
lret
arpl
imul
jo
add
push
jns
mov
lret
push
imull
mov
add
sbb
movsb
mov
sbbb
inc
inc
mov
sbb
xchg
dec
mov
jmp
lods
pop
or
rcll
push
nop
out
inc
sti
mov
fstpl
into
stc
push
mov
pop
cs
sbb
push
sbb
or
sbb
mov
jne
dec
lods
dec
icebp
rorl
inc
sub
adc
adc
repz
sub
mov
pusha
push
dec
mull
push
lahf
lods
in
push
sti
out
icebp
popa
push
imul
sub
movsb
roll
mov
out
cmp
xor
lcall
adc
into
adc
mov
xchg
movsb
popa
push
push
clc
cmp
xor
cld
mov
test
add
gs
nop
loopne
mov
icebp
sub
cmc
dec
or
aas
or
push
fsubs
jecxz
insl
sbb
xchg
mov
daa
push
subb
in
jg
jp
push
fdivrp
int3
sti
or
pop
push
push
or
fcomps
push
dec
das
test
rcrl
cmp
adc
adc
mov
sar
adc
inc
or
xor
sarb
mov
arpl
lret
into
je
rcr
mov
in
dec
adc
aaa
mov
xchg
std
jns
push
stos
jg
stos
xchg
push
das
mov
mov
movsl
shrb
and
push
pushf
loop
xchg
js
arpl
add
add
repz
vmovaps
ficoml
xor
xor
imul
mov
sbb
repz
jns
pop
lds
notb
or
cmc
dec
add
test
jecxz
cmp
mov
mov
cmp
pop
aad
jl
rol
add
mov
jmp
push
pop
aam
inc
pop
sub
ljmp
push
std
dec
sub
sti
scas
mov
lahf
push
das
inc
cmpsb
fisttpll
mov
loope
sahf
adc
push
testb
std
negl
lret
pusha
fwait
out
imul
pusha
rcl
fwait
ror
bound
mov
adc
dec
pop
push
mov
js
cmp
cmpsl
dec
hlt
scas
std
iret
les
xchg
daa
push
jl
rcll
and
dec
mov
stos
pop
daa
sub
or
mov
call
fistpl
adc
scas
jne
mov
fldenv
dec
dec
cmp
mov
adc
ss
aas
cmp
ljmp
div
popa
sub
dec
js
hlt
inc
sbb
pushf
mov
pop
add
jmp
les
jecxz
test
call
xor
pop
std
pop
outsb
dec
cmc
mov
ss
movsl
jnp
or
insl
leave
add
inc
xor
push
push
ds
insb
mov
pop
fisubs
ret
imul
scas
outsb
add
test
push
or
xchg
jae
sbb
cmp
mov
push
mov
adc
scas
dec
mov
pop
loope
cli
inc
sub
jl
xchg
out
mov
push
addr16
icebp
sbb
ret
rol
jmp
dec
insl
inc
fsubr
cld
adc
sbb
jbe
daa
pop
or
jle
adc
pop
das
pop
rcr
cwtl
and
dec
loope
repz
mov
push
mov
sbb
out
mov
sub
jo
dec
test
sbb
andl
mov
xor
or
stos
cmp
and
rolb
jle
push
push
pop
std
rclb
push
pop
test
xor
add
loope
mov
push
jns
xchg
dec
or
fcoml
pop
fidivrs
push
inc
xor
popf
sahf
pop
xor
cli
sbb
inc
add
jae
xchg
cmp
adc
ret
outsl
mov
jle
movsl
inc
test
pop
sub
loop
pop
jp
sub
add
and
shlb
fdivrs
push
rcl
outsb
add
rclb
jno
outsb
sub
repnz
mov
subb
mov
xchg
rolb
ljmp
xchg
in
sbbb
inc
add
hlt
add
in
xchg
aas
repnz
dec
jl
pop
jae
cmp
dec
push
push
dec
cli
push
pushf
pusha
pop
and
cmpsl
mov
fmul
mov
and
jb
and
add
cmp
add
js
push
ds
repnz
insl
scas
sub
xchg
in
or
test
icebp
pop
je
icebp
ds
xor
mov
fs
pop
mov
jnp
pop
cltd
or
and
fbld
jb
repnz
cmp
jg
outsb
jbe
mov
inc
cmp
mov
sub
out
dec
dec
sub
popa
mov
test
mov
faddl
xor
and
js
notb
lds
mov
pop
hlt
leave
add
sahf
xor
stc
mov
std
and
and
adc
js
pop
roll
inc
cmc
outsb
and
and
aam
iret
jb
das
or
or
lods
movsl
pop
xchg
shl
xchg
dec
mov
cmpsb
pop
mov
insb
sbb
xlat
mov
sarb
outsb
das
xor
sub
out
mov
jbe
rcrl
pop
ja
jmp
inc
cltd
arpl
mov
jmp
sbb
sbb
jb
fimull
dec
lret
xor
inc
push
mov
cmpsl
mov
push
mov
aas
lret
xchg
ret
stc
in
outsl
lods
or
adc
jb
hlt
insb
pop
stos
fsubs
and
mov
inc
pop
mov
inc
mulb
jmp
cmc
mov
adc
push
aas
lea
repz
push
mov
mov
adc
sub
xchg
xor
lahf
xchg
and
cmp
fldenv
lods
sub
push
lea
cmp
cmp
pop
sbb
mov
movsb
sub
pop
xchg
imul
mov
mov
adc
adc
xchg
loop
in
mov
fbld
mov
insl
xchg
mov
mov
mov
and
mov
and
dec
popa
sbb
daa
xchg
leave
mov
dec
and
inc
inc
xor
lods
out
inc
cld
jmp
das
add
dec
lock
or
int3
in
inc
mov
cmc
jmp
add
pop
leave
idivb
xchg
aad
mov
sbb
das
jbe
jmp
stc
stos
push
addr16
jo
add
cwtl
and
call
push
stc
frstor
dec
lea
mov
mov
cmc
sbb
and
pusha
dec
adc
cmc
fistps
pop
dec
mov
mov
lret
lahf
push
mov
jp
cmc
push
jmp
int
push
mov
or
jbe
pop
je
mov
pop
xor
mov
lret
pop
cmp
ljmp
cmp
popa
xchg
adc
fmul
insl
xor
subb
dec
pop
mov
push
xchg
ss
push
arpl
sbb
addb
iret
and
cmpsl
pop
pop
fisubrl
add
das
push
lahf
cmp
stos
jbe
dec
aaa
jbe
inc
jmp
xchg
dec
nop
enter
sti
nop
xchg
test
mov
adc
testb
dec
int
hlt
add
adc
jns
push
dec
into
pop
lds
cmpl
pop
jae
ret
xor
ja
mov
shrl
shlb
jnp
sahf
fistpl
mov
push
or
test
pop
les
add
arpl
cmp
xchg
sub
jbe
sbb
dec
jae
mov
jb
cmp
mov
outsb
push
jbe
or
ds
movsb
xchg
inc
daa
popf
pop
lcall
cld
test
jmp
bound
sti
sahf
fsubl
sbb
mov
pop
mov
push
nop
sbb
jp
lcall
or
or
orl
xchg
loop
xor
in
repz
js
ror
pop
sub
daa
mov
bound
mov
neg
je
popf
adc
adc
mov
xlat
js
adc
xchg
pop
outsl
and
push
dec
mov
pop
dec
fisttpl
jp
lock
jne
stos
insb
sbb
aad
sub
dec
movsl
rorb
insl
stos
ss
lods
xorb
dec
pushf
xchg
sbb
cmp
xchg
test
clc
xor
cmp
clc
cmp
lret
scas
sbb
mov
loop
dec
imul
dec
sbb
sub
in
or
stos
incb
pop
inc
pop
sub
jnp
fwait
mov
mov
cltd
sub
mov
loope
push
mov
sub
in
and
stos
mov
fildl
pop
and
inc
cmp
xor
inc
dec
cwtl
sti
lret
enter
cli
fstpt
mov
sbb
fdivr
outsl
mov
push
lea
aam
aam
or
sub
xchg
mov
sub
inc
mov
sbb
add
mov
scas
call
sub
inc
and
and
xchg
js
sub
sub
ficomps
mov
mov
xchg
call
nop
and
sti
stos
sub
sbb
sbb
push
inc
pop
lcall
mov
add
or
mov
xor
jg
cmc
jno
movsl
cld
add
dec
push
jns
mov
repnz
cmpsl
mov
xlat
in
ret
jae
mov
stos
mov
mov
and
xchg
dec
or
and
xor
dec
mov
sub
hlt
push
sub
pop
push
jnp
rcl
xorl
dec
cltd
in
push
pusha
or
mov
jb
es
jno
mov
and
mov
lds
xor
decb
pushf
fwait
and
sub
test
popf
scas
dec
je
inc
arpl
fistpl
out
cmp
sub
inc
mov
mov
mov
push
in
or
adc
xor
les
jbe
push
push
mov
fstps
popf
lcall
lea
cmp
jmp
xor
daa
cld
lods
lret
sbb
mov
push
ds
dec
lods
mov
cltd
add
and
inc
cmp
stc
xor
mov
scas
mov
mov
push
stos
out
dec
mov
cld
fsubl
mov
xor
ja
add
fcompl
lods
lock
jle
aad
sub
hlt
mov
jl
cmpb
lods
mov
push
subl
jae
jno
inc
outsl
inc
cmpsb
adc
fstl
rolb
fcompl
jle
jmp
adc
add
jae
out
push
aad
sbb
xor
repz
repnz
inc
xchg
inc
addb
and
xchg
in
popa
cmp
jg
dec
xchg
mov
push
lods
push
adcb
inc
scas
push
jb
ss
dec
jo
inc
jp
push
xchg
sub
push
xor
fwait
sub
xchg
repnz
xchg
push
mov
pushl
ja
call
daa
int3
xor
lea
sub
inc
xchg
ret
dec
insl
imul
mov
popf
push
test
ret
int
inc
cmp
add
insl
push
rcrl
mov
jecxz
pop
push
push
sbb
sub
jl
push
das
cmp
test
daa
jp
mov
mov
mov
cmp
out
mov
jns
fisubrl
mov
stos
or
cmp
jno
movsl
sub
lret
push
stos
or
loopne
jnp
adc
cmpsl
xchg
repz
lcall
out
repz
mov
xor
xchg
push
fs
pop
iret
mov
add
lea
outsb
push
sti
inc
xchg
sbb
cmpl
cmp
out
push
dec
rorl
test
xchg
decl
out
adc
sub
inc
gs
mov
adc
in
pop
add
jecxz
or
arpl
push
out
mov
adc
pop
xchg
dec
lock
sti
stos
cmpsl
adc
push
push
cmc
dec
sub
push
pop
inc
loope
mov
add
xchg
mov
pop
bound
mov
rorb
mov
dec
adc
push
loop
sub
push
icebp
int
inc
or
jg
inc
or
pop
add
mov
es
mov
cmp
add
lret
inc
adc
mov
xor
mov
and
in
addl
sahf
sbb
xor
sub
pushf
icebp
xchg
stos
pop
mov
insl
in
cmp
lret
cmp
inc
fcoms
inc
mov
cld
outsb
jae
mov
jne
cmp
inc
xchg
imulb
insl
insl
js
jb
push
sbb
fdiv
mov
cltd
push
xor
inc
jb
nop
pop
clc
lods
scas
push
pop
lds
pop
lods
sti
and
mov
call
aam
inc
sti
fldt
iret
adc
jmp
sahf
mov
rorb
es
pop
inc
mov
rclb
fstp
in
in
jg
lcall
cmp
pop
xor
mov
insb
xchg
loop
data16
std
in
orl
pop
push
les
xchg
dec
enter
arpl
pop
insb
in
sbb
lea
icebp
stc
xchg
or
or
arpl
xchg
lahf
iret
popa
mov
push
xchg
add
push
xchg
ja
push
jp
cmp
xchg
mov
in
xchg
mov
outsl
dec
jmp
dec
loopne
add
sbb
pushf
ss
pop
and
adc
cmpl
mov
inc
mov
xchg
addr16
aam
and
jne
lods
jns
fcmove
rclb
add
je
push
or
cs
xchg
punpckhwd
sub
pop
aad
add
mov
sbbb
jo
push
outsl
mov
push
in
pop
and
or
dec
popl
push
mov
notb
je,pt
push
test
cmp
xchg
adc
stc
xchg
jmp
imul
arpl
mov
rcll
lods
mov
jmp
aad
dec
push
dec
scas
xor
test
sub
test
rcr
imul
adc
jge
mov
fnsave
mov
pop
hlt
lods
cwtl
push
insb
or
mov
fldt
inc
pusha
push
or
jle
xchg
test
sub
jne
test
inc
mov
imul
into
sbb
dec
mov
mov
faddp
mov
xchg
sub
roll
dec
aad
sub
adc
and
dec
sbbb
loope
testl
jp
addb
xchg
shr
xor
xor
call
sbb
arpl
pop
test
stc
pop
testb
fs
sahf
xor
sbb
jle
ljmp
fisubrs
test
jns
rclb
adc
movlps
cli
fnstcw
scas
jno
mov
in
sub
test
dec
dec
out
jo
jmp
addr16
fdivrp
fimull
push
xorb
fistpll
les
insb
adc
push
pushf
jns
jmp
rorb
bound
dec
adc
lods
xlat
ret
mov
cmp
push
jne
jge
jmp
int
sub
pop
push
xchg
inc
insb
inc
and
mov
jl
pop
subl
arpl
subb
mov
stc
repnz
xor
mov
movsb
fwait
jo
cmovl
in
sub
or
aaa
movsb
pop
ss
xor
pop
cmp
scas
in
xcrypt-cbc
cmpsl
xchg
into
push
subl
test
cmp
push
mov
pop
inc
into
mov
pop
add
xchg
repz
mov
mov
and
xchg
mov
inc
cmpb
cmc
gs
std
jnp
xchg
jmp
bound
xorl
sbb
inc
hlt
mov
lods
repz
mov
pop
popa
test
ret
mov
xchg
mov
stc
xor
sub
add
and
andl
dec
ret
xor
movsl
outsb
aas
cwtl
mov
mov
and
iret
jecxz
popa
or
inc
adc
outsb
int3
add
mov
mov
sahf
push
lret
mov
repnz
sub
inc
xor
aas
cli
sbb
mov
ljmp
in
sub
nop
ficoms
sub
inc
orb
pop
and
xchg
idivl
jge
lods
and
std
adc
leave
jle
jmp
popf
inc
sbb
mov
aaa
bound
gs
xor
stos
int3
out
cld
test
mov
cmp
mov
clc
aas
or
frstor
mov
push
ss
push
ret
jbe
mov
stos
das
rcrb
inc
js
addr16
fbstp
mov
mov
js
out
cmp
add
mov
cmp
push
jle
mov
popa
loop
int3
inc
je
call
loop
inc
inc
pop
cld
jb
push
stos
int3
mov
cmp
xchg
and
add
cmpsb
rcr
lahf
xchg
stos
clc
push
imul
pop
adc
cmp
jl
xchg
mov
rolb
pop
mov
aad
mov
sub
cmp
inc
shr
adc
push
in
and
xchg
xchg
es
mov
and
clc
popf
out
jne
push
xchg
xchg
push
ret
hlt
xchg
repz
add
push
lahf
loop
and
push
adc
push
addr16
arpl
sub
mov
inc
nop
and
and
addl
sti
and
cmc
jno
fbstp
pop
cmp
cltd
mov
jb
jno
rcr
and
jb
movsb
mov
idivl
cmp
bnd
jnp
push
addr16
ficoms
xchg
xchg
arpl
pusha
push
std
adc
test
fsubrl
lea
jnp
push
hlt
mov
rorb
aad
adc
stc
or
push
dec
int3
xor
lock
cld
xor
les
inc
fidivs
mov
sbb
sub
outsb
movsl
orl
inc
inc
sub
js
mov
test
hlt
inc
or
aad
lahf
adc
mov
movsb
int
ret
cltd
fmuls
stos
dec
cltd
out
out
loopne,pn
and
jb
loope
mov
mov
in
push
adc
pusha
fsubp
mov
sub
cmp
and
mov
stos
arpl
in
push
adc
cld
dec
inc
test
xor
pushf
jp
and
mov
pusha
in
fcmovbe
xor
xor
test
dec
dec
add
xchg
jecxz
jnp
jae
loopne
ret
sarl
aam
fs
push
jg
inc
adc
leave
sub
cli
and
jne
and
shlb
lock
and
mov
jo
pop
or
test
pushl
inc
mov
dec
sub
sbb
mov
fstl
outsl
in
dec
inc
orl
sub
add
adc
adcb
push
aas
hlt
nop
jb
je
sub
and
cmp
scas
dec
movsb
mov
incb
icebp
jb
add
lret
aaa
dec
data16
fnstenv
add
outsl
cmp
psrlw
lcall
and
jmp
bound
sub
push
inc
xor
popf
stos
lret
pop
mov
lock
inc
mov
sub
cmp
sbb
mov
icebp
push
movsl
inc
cmpsl
jno
sbb
lds
les
and
addr16
mov
push
cmp
push
dec
inc
push
test
and
mov
cmpxchg
mov
dec
add
int
push
sbb
inc
dec
xor
clc
cmp
inc
sub
or
jmp
into
clc
mov
mov
or
push
cmp
into
mov
cmp
rolb
addr16
imul
test
add
pop
mov
lock
fdivrl
bound
lods
dec
test
cli
fyl2xp1
pop
insl
pop
push
xchg
xlat
dec
mov
popf
fldcw
lret
popf
addb
in
ss
xchg
xchg
cltd
lahf
enter
out
cmc
or
add
pop
enter
inc
popf
cwtl
pop
into
lds
xor
and
add
or
push
push
stos
icebp
repnz
lret
mov
out
pop
dec
sbb
mov
xor
pop
mov
xor
jns
rcll
inc
xchg
je
sbb
ljmp
push
iret
dec
dec
popa
icebp
test
test
and
cmp
push
rcr
jle
sarb
mov
ret
loop
mov
movl
mov
nop
repnz
xchg
das
popf
popf
push
hlt
and
out
iret
sub
mov
push
mov
mov
loop
cli
fldcw
push
cmpsb
testl
push
sub
out
movsb
les
in
pop
cmpb
fwait
sub
addr16
mov
mov
dec
or
stos
mov
pop
movsl
adc
fs
lods
pop
dec
push
ret
mov
ss
rcrb
pop
sbb
dec
pushf
test
fisubrl
sbb
mov
pop
mov
cmp
lds
in
out
adc
imul
cmp
jl
mov
adc
adc
frstpm(287
sub
inc
jb
mov
push
xchg
xchg
outsl
mov
cld
pop
xor
pop
adc
icebp
xchg
jae
or
lds
js
icebp
hlt
out
popf
xor
and
ds
in
notb
test
shlb
and
push
daa
inc
jl
inc
sbb
cmc
ds
pop
inc
cltd
push
fmulp
jmp
add
or
loop
or
jb
jle
ret
jno
pusha
mov
pusha
sbb
jne
pop
testl
mov
mov
inc
adc
lods
xchg
push
je
call
cs
xchg
jbe
xchg
lcall
push
adc
push
adc
loopne
insl
addr16
mov
mov
xchg
xchg
jae
shr
jecxz
or
subb
pop
or
or
scas
ja
jns
ja
out
mov
lahf
ljmp
pop
out
dec
ror
loope
mov
jb
xchg
or
fcom
push
push
jo
aad
test
jo
and
stos
and
mov
sbbl
fnstenv
dec
repz
jne
pop
mov
inc
in
jp
cmpsb
sahf
stos
push
icebp
aas
mov
aam
dec
xor
stc
arpl
sub
movl
sub
or
pop
mov
rorb
ret
pop
sti
add
sub
and
sub
mov
xchg
push
push
cmp
lods
fndisi(8087
test
or
repz
jg
push
cld
fisubl
pop
xor
js
sub
xchg
mov
adc
xchg
mov
adc
mov
arpl
adc
or
insb
push
jl
xor
sbb
jb
xor
loope
adc
rcr
scas
je
sub
repz
jle
dec
ficoml
cwtl
xchg
lcall
aam
inc
push
lock
jno
jmp
mov
sub
or
sbb
stc
sbb
mov
add
cmp
xlat
decl
jno
mov
push
fnstenv
pop
add
sub
jmp
mov
and
pop
or
pop
and
xchg
add
sub
ss
sti
push
out
subl
sbb
dec
or
js
shll
lods
and
sbb
and
pop
mov
dec
addr16
jg
lds
bound
fcoml
dec
dec
dec
push
cwtl
lret
fcmovbe
imul
mov
stos
push
cmp
cmp
cmp
cmpsl
pop
fcmovnbe
insb
adc
pop
inc
xor
inc
shl
mov
int3
subl
out
cmp
inc
addr16
insb
inc
insb
add
ds
lret
fmuls
sbb
mov
imul
stos
enter
or
lea
jb
fiadds
mov
xchg
test
pop
filds
xor
notb
jbe
cmp
mov
inc
mov
loopne
gs
data16
je
xor
mov
and
adc
push
out
out
cmp
pop
stos
sbbl
pop
adcl
popa
mov
jns
inc
sub
jno
pop
push
add
dec
mov
aaa
xchg
pop
jmp
mov
or
imul
call
sbb
pusha
lahf
fdivrl
out
lods
jne
push
ffreep
sar
pop
pushf
nop
jae
out
jmp
and
inc
jecxz
movsl
mov
and
test
roll
pop
or
in
push
ljmp
jne
xchg
and
and
lods
rcr
xor
cmp
xchg
push
mov
and
cmp
shl
mov
scas
pushf
jge
nop
pop
push
push
pop
mov
ret
js
movsb
fwait
adc
and
xchg
lret
sahf
and
xchg
sub
loope
xor
popf
mov
fistpl
xor
xor
fs
rcll
cmp
mov
fscale
jae
popa
test
xor
out
jmp
pop
imul
shll
scas
rclb
ljmp
leave
mov
mov
mov
sti
int3
xchg
in
jmp
jle
pop
btc
jns
and
es
fisubrl
adc
lret
fdivl
mov
jle
in
filds
push
out
cli
ljmp
sbb
outsl
push
cli
cmp
cmp
int
call
xor
nop
sub
test
lret
jo
sbb
stos
push
jae
or
jbe
insb
push
mov
xchg
mov
je
add
jo
xor
pop
push
out
xchg
mov
shrl
je
cmp
pop
add
dec
int
les
js
adc
mov
lock
add
or
push
ret
pop
sub
adc
xchg
xor
imul
fbstp
xor
sub
and
jno
test
xchg
lret
lcall
lret
nop
rorl
mov
cltd
rclb
shlb
stos
sub
lods
pop
xlat
inc
scas
rorl
xchg
popa
sub
mov
mov
jo
xchg
fcmovne
fwait
mov
sbb
bound
jmp
imul
mov
addr16
xchg
xor
sbb
inc
stos
push
mov
xor
fxch
frstor
roll
pop
iret
rcrl
push
mov
les
mov
xor
popf
push
stos
js
jle
mov
pop
dec
dec
xor
call
jnp
dec
loope
out
xchg
cli
bound
adc
adc
out
movsl
push
jl
icebp
mov
mov
loope
dec
jmp
xor
xchg
out
jmp
lret
fstpl
pusha
icebp
inc
pop
pop
inc
dec
jbe
fidivs
testb
imul
test
xchg
cmp
movd
fwait
dec
ljmp
insl
push
mov
lods
mov
mov
add
loopne
and
aad
jp
mov
rolb
inc
push
cmp
sbb
fwait
icebp
movsb
xor
mov
cmp
sub
add
inc
add
push
lcall
popa
cmp
dec
inc
repnz
call
pop
inc
ret
jmp
outsb
push
popf
lods
cmpsb
adc
aaa
loopne
in
sub
les
cmpsl
or
scas
sbb
pop
or
xchg
xor
in
in
jmp
test
test
inc
dec
enter
add
in
dec
xchg
ds
mov
stc
pop
jmp
outsb
leave
dec
scas
pop
adc
jo
add
imul
mov
mov
mov
mov
lds
jne
lea
adc
in
les
dec
scas
lods
cmp
and
push
pop
push
dec
je
push
sbb
mov
and
hlt
shll
pop
insb
lods
jl
jb
mov
inc
inc
dec
push
mov
push
adc
filds
sub
jge
cmpsb
insl
xchg
jecxz
lret
fistps
xor
scas
aad
popa
ds
adc
enter
and
pop
imull
push
sti
popf
shll
imul
int
xor
in
xor
test
adc
jg
push
into
sub
sub
jns
add
outsl
add
mov
cmc
or
dec
scas
mov
fs
ss
in
cltd
divl
xor
decl
mov
mov
dec
outsb
xchg
out
fdiv
popl
push
lcall
les
lods
fwait
mov
adc
xchg
gs
scas
or
movsl
adcb
fnstenv
adc
pop
and
mov
rclb
cmpsb
adc
pop
inc
mov
or
loop
add
and
in
mov
xchg
repz
mov
dec
loope
iret
pusha
jo
xor
pushf
sbb
cwtl
mov
and
and
lahf
jg
xchg
repz
mov
add
inc
mov
push
leave
gs
push
sbbl
push
movsl
enter
ja
and
mov
or
sub
jl
cli
rorl
mov
pop
jne
sti
je
sbb
sarl
es
insl
pop
ret
xchg
xor
push
xor
mov
popa
repz
fidivrs
ljmp
in
lea
push
repz
loope
shrl
mov
rcl
out
pushf
jb
jo
ljmp
movsb
fs
inc
rcrl
or
sub
les
fstps
inc
in
test
or
push
test
mov
jae
mov
xchg
jmpw
imul
test
push
pop
push
add
sahf
pushf
add
in
hlt
mov
out
adc
push
dec
sub
js
mov
pushf
cmp
arpl
sbb
xor
jg
outsb
add
imul
repz
mov
out
aaa
int
push
mov
lcall
je
hlt
out
mov
or
cld
insb
dec
xor
test
fwait
mov
js
dec
adc
insb
jg
adc
pop
pop
out
xlat
shrl
test
push
jb
inc
push
dec
xchg
pop
xchg
mov
and
shrb
pop
test
pusha
ja
or
jge
and
cli
mov
jp
addr16
loope
fwait
add
push
jge
subl
fistl
lret
pushw
jbe
cs
mov
inc
gs
mov
ja
push
jo
aas
hlt
push
fiadds
add
fsub
jmp
fwait
sbb
push
push
jae
or
pop
mov
mov
push
repnz
fisttpll
or
pop
cmpsb
pop
std
shrl
push
test
sub
push
cmp
mov
pushl
xor
test
addb
pushf
rcrl
cwtl
fs
std
jne
scas
pop
xor
lods
flds
xor
out
jmp
pusha
and
jecxz
mov
sub
pop
push
scas
test
mov
sub
test
push
mov
fisttpll
js
ret
test
icebp
cmpsl
sarl
adc
jecxz
out
xor
jns
outsl
aam
xchg
xchg
xlat
jns
flds
jl,pn
dec
loopne
imull
sub
test
adc
push
int3
adc
add
pop
repnz
sbb
mov
add
add
xchg
pop
adc
cmp
sbb
cmp
lods
xor
jle
adc
mov
mov
adc
cmp
aaa
int3
mov
mov
popa
adc
mov
inc
enter
das
ja
cld
dec
pop
pop
pop
xchg
jns
lds
int3
insb
scas
push
mov
out
jnp
push
mov
cmp
bound
insb
fs
je
xor
nop
xchg
andb
adc
xor
pop
aad
lret
ffree
fnstcw
adc
xchg
arpl
push
or
das
mov
rorl
dec
pop
fisubs
loopne
loope
scas
test
sub
cmp
iret
iret
fmulp
dec
sbbb
pop
cmpsb
pop
jbe
cmp
sbb
ja
sbb
orl
adc
jle
push
pop
lds
push
in
vmovups
rcpps
jmp
aad
popf
dec
xor
cmpsb
fstps
mov
cmp
mov
scas
cltd
mov
or
bound
push
jae
or
and
out
fmul
std
adc
xchg
mov
xor
outsb
push
loope
adc
xor
loope
lds
xor
push
jl
fstpt
cmp
outsb
out
pop
mul
xchg
mov
nop
jnp
ror
pop
fcompl
sub
repz
dec
lods
pushf
insb
xchg
xchg
rcr
sbb
aad
push
in
and
xor
mov
pusha
lcall
pop
inc
aam
in
push
outsb
lds
imul
push
rcr
lahf
push
adc
sbb
lret
hlt
and
dec
mov
call
jg
fcomps
jo
mov
sbb
and
xchg
adc
xchg
inc
sarb
and
xor
nopl
pop
dec
mov
sti
pushf
lret
push
inc
cmp
mov
stc
adc
mov
int
jl
fwait
and
roll
add
call
jno
mov
inc
pop
icebp
iret
or
xchg
clc
jp
pop
pop
pusha
popa
jbe
xchg
aaa
jnp
push
sub
mov
pop
lods
xor
int3
int3
push
jns
addr16
sbbl
push
adc
outsl
aas
iret
inc
shrl
popl
sahf
lahf
rcll
inc
popa
inc
mov
jecxz
sbb
mov
adc
testl
roll
dec
rorb
mull
pop
sti
xchg
ficompl
mov
pusha
mov
add
pop
mov
roll
ud1
adc
jb
std
je
dec
inc
add
das
aam
pop
test
push
mov
xchg
and
scas
add
insl
ss
pop
pop
sar
jbe
add
orb
lods
push
xor
add
push
stc
push
hlt
and
xchg
mov
dec
mov
cmpsl
mov
movsl
fsubs
leave
cld
inc
push
mov
sbb
js
pop
sti
xchg
cs
xchg
leave
das
lock
lods
mov
arpl
or
out
popa
into
js
mov
movsl
cmp
daa
das
inc
add
mov
movsb
rorb
pop
movsb
and
shrb
mov
movsb
scas
je
outsl
repz
cmp
mov
bnd
int3
in
push
jb
push
fisttpl
enter
ficoml
push
std
dec
les
xor
test
leave
push
xchg
bound
fdivp
push
add
loop
in
xor
or
imul
cmp
jns
sub
ret
divl
cmpsb
sti
imul
enter
xchg
ljmp
out
jb
test
in
jge
cmp
sbb
dec
inc
shl
mov
mov
mov
and
aam
inc
pop
sarb
and
push
insl
sbb
mov
or
push
adc
test
pop
icebp
imul
rcrl
pop
sub
mov
call
or
sbb
outsb
sbb
xchg
lret
adc
xchg
lds
in
dec
notl
cmc
adc
push
insb
fdivp
inc
push
adc
adc
enter
and
jnp
jnp
fucomip
inc
cli
cmpsl
fsts
sub
scas
mov
cmpsl
movsb
dec
test
ja
mov
imul
fld
lea
popf
jl
xchg
push
mov
stos
xor
adc
imul
sbb
out
xchg
cmpsl
cmp
jne
dec
dec
scas
fistl
dec
cmpsl
mov
xchg
shl
enter
inc
fwait
mov
cmp
add
push
repnz
insl
test
bound
cmpsb
dec
pop
inc
fimull
jecxz
xor
xchg
insl
insb
aam
sbb
stc
daa
outsb
dec
or
or
aam
add
pop
xchg
out
test
movsb
and
in
stos
xor
scas
jge
popa
sub
push
ja
xchg
dec
and
imul
stc
adc
pop
add
jmp
or
push
sub
pop
xchg
adc
fstl
jp
inc
sub
sahf
or
lds
push
rcr
add
cwtl
cmp
adc
jecxz
inc
push
push
shlb
sub
rorb
mov
ret
fildl
lea
inc
jecxz
aaa
mov
jp
stc
shlb
mov
xchg
jbe
mov
sar
mov
adc
insb
jae
into
js
js
mov
shrl
mov
xor
xchg
adcl
dec
std
lret
xor
ljmp
push
sub
hlt
and
and
xchg
jbe
lds
lock
int
pushf
pop
movsb
in
fnsave
jmp
rorb
shlb
sbb
adc
leave
subb
imul
sbb
in
icebp
mov
jae
lock
sub
mov
mov
imull
insl
mov
roll
cltd
mov
das
cli
push
imul
cmp
into
xor
test
and
mov
fld
pop
push
add
mov
or
pop
sub
push
dec
repnz
mov
insl
mov
mov
push
pop
push
mov
inc
xchg
and
jp
xchg
data16
pop
adc
push
and
cmc
je
xchg
jge
jns
cld
je
sub
inc
daa
mov
jno
les
sarl
aad
lea
ret
out
mov
in
sub
jb
pop
aas
mov
shlb
out
addr16
mov
jno
imul
dec
xor
dec
xchg
divb
hlt
loope
fidivrs
xchg
lds
inc
xchg
js
fisubl
sti
cmp
out
loopne
mov
cmp
or
cmpsl
ja
xor
aam
add
mov
ljmp
pop
jo,pt
outsb
mov
unpckhps
push
iret
sahf
xlat
das
dec
lahf
out
pop
in
mov
xchg
pop
frstor
cmp
popa
imul
bound
lods
sbb
inc
pop
pop
sbb
add
dec
aam
dec
cmp
outsb
decl
xor
hlt
sbb
lahf
arpl
mov
xchg
fstpl
lret
adc
add
das
pop
fisubrl
sub
cmp
dec
inc
or
call
das
clc
mov
ficomps
call
pop
rcrb
sbb
aaa
jle
rol
mov
cmpsl
push
xor
mov
gs
cvttps2pi
or
outsb
pop
sbbb
xor
add
dec
push
push
rcll
loope
pop
ljmp
push
jb
xor
ss
push
lret
mov
adc
addl
subl
fisubrs
out
cmc
inc
xor
inc
mov
gs
lahf
xor
inc
cltd
out
jle
adc
or
dec
lock
subb
mov
push
mov
popa
stos
and
mov
cmp
push
popa
dec
dec
or
roll
xchg
in
or
add
adc
mov
arpl
pop
mov
imul
scas
mov
ret
jo
cwtl
add
iret
inc
mov
into
inc
fimuls
out
mov
mov
aam
xor
or
ljmp
add
push
pusha
in
pusha
xchg
rcrl
shll
mov
inc
inc
inc
mov
in
cld
xchg
lahf
xor
fwait
xor
popa
sub
scas
andl
sub
pusha
cmp
fnstcw
dec
movsb
mov
mov
dec
out
jbe
test
and
pop
add
lods
mov
loop
int3
xchg
mov
adc
sarb
jmp
pop
fisttpl
sub
gs
cmp
push
xchg
jge
sbb
es
inc
and
pop
push
mov
popa
subb
punpckhwd
mov
sbb
cmpb
add
cli
jge
ss
fwait
bound
add
adc
cmp
in
out
fs
mov
cmp
fiadds
dec
xchg
pop
repnz
xor
cmpsb
pop
andb
sub
mov
dec
jne
add
cmc
cmp
mov
dec
gs
out
int3
hlt
push
inc
add
clc
mov
into
push
movsb
jae
sbb
xchg
ficomps
scas
out
cmp
inc
sbb
xchg
adc
nop
or
cwtl
cmp
xchg
addr16
inc
push
lret
lock
pop
cmp
lea
cmp
jno
fcmovnb
cmp
and
jne
outsl
xchg
dec
sbb
push
int
mov
lret
inc
ljmp
ficoms
lcall
fdivrl
sub
or
inc
add
fists
cltd
or
sbb
push
js
jmp
and
dec
js
insb
adc
in
cltd
mov
ljmp
stos
sbb
sbb
test
out
enter
stos
stc
jge
cwtl
movsl
xor
lret
dec
pusha
test
outsl
mov
sub
adc
lods
in
loope
jp
mov
inc
mov
fidivrl
xchg
andw
imul
mov
movsl
push
enter
pop
arpl
add
sub
or
insl
sub
jg
push
push
cmp
ljmp
xor
popa
xchg
cmp
xor
stos
xor
cmp
dec
xor
ja
popf
ljmp
dec
push
jp
outsb
out
rorl
ds
mov
push
xor
out
jae
sbb
mov
jae
imul
mov
icebp
fsub
mov
cwtl
inc
insb
pushf
out
ljmp
dec
lea
mov
sbb
hlt
add
ret
mov
dec
and
dec
stos
out
std
pop
mov
dec
xchg
pop
ds
popf
xchg
mov
mov
pop
nop
addb
insl
cmp
pusha
lret
xor
in
xlat
jo
mov
add
mov
lcall
ljmp
xchg
push
in
jae
inc
xorb
fsubr
cmp
testb
jae
out
ss
lock
cmpsl
xchg
cmpl
add
pop
addl
sbb
mov
ret
push
fstl
push
mov
imul
jno
gs
sbb
mov
hlt
push
pop
xchg
pop
loop
sub
sbbb
pop
xchg
cmpsl
mov
ljmp
push
les
or
aam
push
push
mov
push
lods
ret
dec
scas
insb
mov
cwtl
ss
push
cmp
sub
push
mov
dec
and
sub
mov
jae
fdivrl
cld
mov
sub
xlat
sbb
push
pop
sbb
xlat
mov
and
sbb
add
push
or
xchg
sbb
call
iret
xchg
lahf
enter
cmp
xchg
and
jecxz
jg
jns
sar
out
pop
gs
jp
mov
test
jns
call
inc
cs
mov
sbb
inc
and
dec
pop
test
sbb
addb
sbb
xchg
mov
mov
jmp
mov
xchg
xlat
xor
sub
mov
inc
das
scas
stc
xchg
daa
cmp
mov
outsl
xchg
xchg
inc
lea
sub
cld
xchg
cs
cltd
js
ret
rorb
or
mov
fsubrs
dec
mov
dec
cmc
test
dec
aas
cmc
lahf
xchg
repz
jmp
push
in
sub
mov
add
inc
dec
loope
pop
add
aas
sbb
shl
ja
sbb
out
in
xlat
ss
shrl
lods
ljmp
pop
pop
mov
rolb
stos
xor
nop
repz
test
add
test
nop
imul
lahf
out
pop
jl
inc
jp
in
xor
sbb
ffreep
jg
xchg
dec
movsl
adc
mov
dec
jns
mov
sub
bound
rcl
push
movsl
sbb
cmpsb
push
jne
dec
rorl
addr16
jge
mov
inc
test
in
gs
jo
daa
mov
clc
sbb
sub
filds
mov
test
repz
xchg
adc
lcall
movsb
mov
sub
mov
popa
dec
or
movsb
lods
ret
enter
lods
or
stos
pop
cli
jae
pop
mov
xor
or
xor
ljmp
dec
mov
cmpl
leave
xor
jns
enter
pop
inc
xor
cmc
into
xchg
push
in
cmp
fimuls
fcoml
stos
mov
arpl
rcrl
cwtl
xor
in
clc
lcall
pushf
mov
ror
xor
dec
dec
mov
dec
add
fldt
in
in
cmpsl
mov
mov
xchg
ss
adc
stc
mov
mov
loopne
pop
insl
add
loop
ja
xor
das
adc
push
push
sub
es
std
daa
jbe
das
xchg
in
int3
andl
into
loopnew
test
mull
xchg
mov
inc
adc
mov
rcr
pop
and
sbb
sbb
inc
mov
xchg
xchg
mov
sbb
mov
mov
push
ret
lret
loopne
out
cmpb
push
outsb
mov
loop
inc
mov
pop
pop
sub
cmp
and
inc
sti
xor
mov
pushf
sbb
or
in
sbb
mov
or
cmpb
ret
fnsave
mov
lds
cmpsb
ja
cs
faddl
cli
and
pop
mov
test
pop
loope
movsb
fidivl
lret
xchg
arpl
dec
sub
jbe
sub
cmc
ja
mov
dec
pop
pop
add
stos
cmp
popa
pop
sbb
sbb
pop
lret
pusha
cli
subl
rclb
js
aaa
mov
mov
pop
cmp
mov
repnz
loopne
aad
adcb
outsl
addl
dec
dec
test
cmp
inc
mov
andl
add
xchg
inc
jmp
mov
std
insl
lods
leave
cmp
insl
addr16
mov
adc
aam
movsb
add
sub
dec
jl
test
xchg
pop
nop
dec
mov
hlt
xchg
aam
dec
scas
inc
pusha
dec
mov
adc
xor
jge
sbb
pop
add
mov
jmp
sbb
dec
andl
cmpsl
push
mov
fistpll
fildl
add
popf
js
mov
cld
fisttpl
into
inc
test
jbe
jecxz
mov
jne
or
fidivrl
sbb
or
das
jns
stos
shrl
cwtl
dec
shlb
out
aad
or
sub
das
outsl
in
dec
xchg
cmc
dec
mov
push
dec
push
adcl
mov
fildl
fs
dec
fmul
data16
shll
pop
mov
test
mov
gs
pop
cmp
or
rcr
arpl
fstps
cmp
sbb
cmpsl
pusha
dec
add
push
add
jb
loopne
loopne
inc
loop
add
push
mov
dec
sbb
scas
rclb
lcall
adcl
sbb
addr16
push
cltd
mov
mov
bnd
loope
sbb
test
std
outsl
xchg
sub
xchg
mov
add
mov
jb
mov
mov
sub
jae
popl
insb
pop
push
sti
xchg
xor
enter
cld
xchg
dec
outsb
lods
dec
jae
push
dec
pop
and
fwait
call
iret
dec
insl
jl
divps
fwait
mov
jb
out
pusha
pop
ret
ret
dec
daa
jecxz
cmpsb
es
dec
nop
rcll
mov
outsb
sub
cmp
mov
ljmp
xchg
sub
mov
adc
jnp
push
dec
ja
mov
ja
pop
or
jmp
xor
mov
xchg
cli
xor
mov
add
push
sbb
sahf
xor
jb
ror
iret
xor
cld
xchg
ja
aam
cmp
adc
insb
ljmp
outsl
push
sub
sti
inc
shrb
std
loope
jne
push
push
push
inc
loope
jb
in
aas
aas
xor
scas
cmp
popa
push
andb
and
xor
jmp
jae
ret
aaa
mov
push
cld
push
dec
mov
inc
jne
jne
mov
lcall
pushf
sbb
and
repz
and
or
lret
push
xchg
push
cmp
mov
xchg
dec
and
xor
jo
test
push
stos
push
jo
fneni(8087
jge
lcall
int3
outsl
inc
adc
pop
pop
loopne
cmc
inc
push
jl
sarb
inc
daa
add
cmp
sbbl
das
inc
sarb
mov
lret
mov
lea
in
andl
push
inc
fwait
in
mov
pop
je
cwtl
and
test
int
cld
add
mov
mov
inc
outsb
cmpsl
mov
or
arpl
fldl
mov
xchg
dec
mov
xchg
mov
loopne
lds
inc
sahf
shr
in
cmc
pop
push
ds
aad
mov
rcrb
int
ds
sub
iret
aam
cld
pop
loopne
xor
sahf
sub
std
push
jle
dec
rcll
or
inc
push
test
adc
out
push
push
jne
cmp
sar
aad
sub
lret
xor
push
rcrl
clc
outsb
and
outsl
jb
adc
push
mov
push
fnstsw
lcall
inc
cmp
xor
mov
adc
mov
repz
cmp
jb
xchg
test
pusha
pop
lods
imul
mov
daa
popa
stc
hlt
in
popf
rclb
mov
sbb
cld
mov
loop
rolb
mov
lock
cltd
sbb
sub
test
imul
aaa
dec
jp
jp
mov
jno
imul
call
retw
adc
mov
call
stc
stc
sbb
pop
aam
ret
pop
aam
lea
jae
push
mov
frstor
mov
inc
sub
mov
dec
aaa
out
divl
cmp
jnp
lahf
loopne
pop
insb
or
inc
xchg
lahf
sub
push
push
pop
cmp
pushf
leave
mov
mov
in
inc
jmp
enter
rorl
push
loope
int
bound
lret
mov
mov
dec
xchg
pushf
cwtl
and
push
jecxz
add
pop
vandps
cmp
repz
or
movsl
sbb
stos
cmpsl
push
add
testl
call
sbb
aam
xchg
pop
xchg
push
inc
push
push
es
mov
pop
imul
push
stos
ret
clc
les
bound
test
jge
mov
sarb
lea
sub
or
sbbl
and
and
popa
es
insl
lods
scas
rcrl
ljmp
adcb
pop
mov
xchg
loopne
test
push
mov
or
das
lods
adc
popf
cmpsl
jl
call
jbe
push
outsl
test
and
sbb
pushf
and
ds
aas
test
cmp
repnz
cmpsl
insl
mov
xor
test
dec
popl
sub
pop
cwtl
mov
push
sbb
call
sub
loop
jns
add
pop
mov
movsb
push
mov
lds
test
mov
int3
popa
push
aad
jne
cmp
push
clc
inc
into
in
call
ljmp
xlat
mov
imul
ja
enter
hlt
mov
andl
fs
dec
pop
stos
inc
add
sti
repnz
xchg
and
jmp
fbld
or
add
call
icebp
mov
lock
pusha
enter
jge
push
test
shr
jl
mov
push
jo
fisubrl
pop
xorb
jae
xchg
cmpsb
repz
outsl
jecxz
dec
test
ja
rcr
mov
or
out
lea
lds
xchg
repnz
jne
jne
lods
mov
aad
inc
in
in
sub
xchg
loopne
popf
jl
or
jl
add
cs
sbb
sub
mov
popf
loop
xor
fistpll
add
push
push
lret
dec
lods
in
popa
lret
cmc
push
out
jge
jae
lcall
cmp
mov
js
fildll
xchg
fisttps
js
add
mov
pushl
aaa
add
aam
lahf
enter
lock
fistpll
push
fsubrs
out
lds
rcl
outsb
xchg
add
xchg
test
test
cmpsb
andb
outsb
je
push
mov
icebp
daa
addb
lret
xorl
fidivl
aad
bound
adc
insb
sbb
cmp
fildl
pop
dec
and
lock
sub
push
outsl
inc
insl
push
dec
push
sub
and
call
jne
pop
add
bnd
lea
aam
xor
js
addr16
cmp
test
lret
int3
xchg
sub
push
in
scas
dec
pop
cs
int3
cmp
xchg
cmpl
mov
mov
enter
int
lcall
pop
pmaddwd
jne
or
push
jmp
jle
jle
cmp
flds
aam
jae
imul
cmpsb
std
mov
push
fidivs
mov
inc
jecxz
inc
or
sub
shlb
mov
js
and
jmp
sub
dec
or
pop
addr16
inc
inc
nop
inc
mov
sarl
sbb
mov
aas
bound
bound
jp
cmp
jl
and
ret
fcomp
dec
inc
out
fincstp
mov
xor
jl
sarl
stos
pop
daa
std
or
outsl
lret
gs
call
mov
jno
cmpsb
pop
xorl
jbe
lds
insl
mov
adc
repz
add
dec
pop
imul
cld
rorb
dec
addr16
mov
scas
xchg
push
out
jmp
das
jl
std
adc
out
xor
mull
rorb
int
pop
push
aas
adc
ret
inc
pop
jl
xlat
sbb
push
addr16
inc
lea
orl
jge
aad
data16
outsl
dec
jp
mov
clc
jmp
divl
jl
push
mov
outsl
mov
shrl
sub
inc
addr16
adc
mov
jo
jnp
sub
inc
movsb
sub
test
movl
or
ja
ljmp
cmp
add
iret
mov
inc
fildll
jb
imul
orl
mov
pusha
mov
add
lret
mov
bound
mov
mov
ds
xor
iret
sub
pop
ljmp
pop
xchg
cmp
mov
movsl
mov
sub
lods
test
je
sbb
mov
in
stos
dec
les
push
cmp
cmc
cwtl
jb
mov
mov
push
push
in
orl
pop
adc
xchg
sbb
xor
jnp
jns
ss
mov
xor
pusha
imul
insb
jbe
pushf
or
pop
pshufw
lret
filds
stos
mov
jge
mov
scas
inc
lret
mov
inc
outsb
fwait
jmp
inc
inc
xor
insb
and
test
es
mov
pop
ss
enter
push
sbb
dec
sarl
jo
inc
and
or
cmp
adc
dec
shlb
cld
or
icebp
scas
rcl
je
add
aas
and
cmp
ret
sub
sti
mov
mov
sub
jl
outsb
stc
aas
sub
outsl
lcall
mov
mov
insl
or
push
call
fisubs
out
lret
mov
dec
aad
shrb
je
lcall
push
jbe
pop
mov
mov
sbb
test
das
scas
stc
and
or
in
mov
stos
loopne
idivb
call
cmpsb
aam
mov
repz
pextrw
imul
inc
sbb
ret
test
pop
mov
mov
repnz
sub
adc
divb
or
mov
hlt
ret
dec
cmp
jge
cmp
adc
jl
mov
jae
divl
out
hlt
adc
sub
cwtl
adc
push
pushf
loopne
mov
in
orl
ret
sbb
out
cmp
lret
les
and
test
sub
iret
lds
lahf
jns
mov
mov
test
sub
aaa
rolb
and
xchg
cmp
push
xor
hlt
mov
mov
add
add
mov
aaa
imul
sbb
dec
in
in
jmp
mov
andps
sbb
mov
xchg
test
sub
xchg
int
das
pop
aam
mov
dec
xchg
jb
jbe
pop
orl
shll
mov
cmp
lods
xchg
cmc
add
addr16
mov
lods
sbb
pop
test
cltd
mov
das
push
dec
jbe
fisubl
dec
sbb
aas
iret
push
xor
sbbl
cmp
fcoms
loopne
add
lret
dec
cmp
mov
sti
push
loopne
adc
push
and
inc
cli
mov
push
jnp
cmpsb
mov
pop
and
inc
cmp
sub
aam
sbb
or
fstpt
mov
pop
fstp
jns
das
push
xchg
pop
imul
xor
dec
xchg
test
mov
jl
lret
sbbb
call
dec
xchg
dec
imul
repz
push
add
aas
insb
fcoml
aam
mov
mov
xchg
ja
sub
push
and
jmp
incb
and
jmp
mov
sub
inc
sub
lea
adc
test
mov
addr16
cli
push
in
dec
mov
aam
cs
inc
jno
notw
lods
xchg
inc
int
test
jbe
add
lahf
mov
lods
pop
and
and
rolb
lret
mov
mov
jo
into
dec
pop
into
cmp
shl
cs
pop
sub
pop
mov
cmp
pushf
fisubrs
addr16
cmc
dec
lcall
sti
arpl
pushf
lods
test
add
inc
fcomp
andl
xchg
xchg
fiaddl
in
fwait
js
stos
xchg
dec
mov
jmp
xchg
lfs
inc
dec
lcall
imul
call
cmp
ret
fimuls
pop
and
jne
rorb
repz
call
lahf
push
popa
ret
sbb
xchg
fisubrs
push
dec
lock
dec
push
ficoml
out
jg
sub
dec
fcmovne
aad
popa
cmp
mov
icebp
mov
push
test
xchg
in
int
icebp
mov
outsb
cs
nop
inc
cmpsl
sub
add
dec
xlat
push
orl
iret
add
or
repnz
insl
jns
ja
xchg
push
insl
clc
sub
test
cmp
xchg
mov
mov
int3
pop
bound
cmc
into
lods
out
mov
jge
xor
sbb
lahf
ret
lret
cmovb
pusha
jae
jge
movsb
push
out
dec
xchg
outsb
sahf
movb
imul
hlt
fisubl
jl
xchg
fstps
ss
xor
outsb
adc
pop
into
inc
dec
cmpb
sbb
fs
or
push
jge,pt
pop
mov
mov
pop
outsl
inc
mov
pop
adc
rcll
xchg
jno
cmp
mov
mov
leave
add
test
cmp
cld
xor
mov
cld
sub
js
int3
push
adc
jle
sub
lea
dec
fsubrl
mov
les
dec
fwait
lea
xchg
idivb
mov
iret
stc
pop
inc
sti
negb
sub
add
decl
and
arpl
push
mov
rorb
cmpl
or
push
out
dec
mov
leave
inc
pop
scas
and
add
int
inc
js
mov
mov
icebp
inc
es
xchg
jle
xor
gs
xchg
jns
aam
jmp
sbb
lds
sti
fiaddl
mov
sbb
aam
add
adc
clc
adc
cmp
popf
sbb
dec
push
sahf
movsl
aaa
stc
ja
dec
or
cli
xchg
adc
cmp
and
int3
lcall
aad
ficoml
inc
jno
xor
in
sti
popf
or
dec
sbb
popa
cld
jmp
call
or
cmc
mov
lods
and
xor
dec
and
lret
bound
push
repnz
stos
dec
push
gs
je
push
cmp
jbe
mov
push
mov
push
popa
dec
cltd
ja
scas
mov
and
xchg
add
int3
adcl
inc
arpl
dec
sub
pop
mov
jo
ficomps
fisubrl
mov
or
in
sub
push
arpl
aas
negl
stc
ret
daa
adc
xchg
stos
mov
outsl
gs
movsl
pop
inc
dec
mov
inc
jge
lods
push
pop
xlat
fwait
imul
add
xchg
sbb
out
adc
cmp
and
and
fldt
bound
in
mov
inc
aad
sahf
jbe
cmp
lods
sbb
test
jo
mov
cwtl
xor
sub
add
push
and
sub
mov
sub
stos
imul
push
pop
aas
sub
mov
cmp
insl
inc
lods
dec
inc
xchg
js
rcll
roll
and
lods
outsb
fwait
fs
or
mov
cwtl
lods
divb
out
xchg
aam
jp
bound
inc
aas
inc
adc
lds
enter
movsl
pop
aas
inc
sub
jae
fbld
ja
imul
das
sub
inc
loope,pt
adc
es
push
xor
jle
imull
cmp
cmp
dec
push
loope
idivb
inc
lods
shrb
scas
and
sub
push
pop
add
sub
imul
xchg
push
push
add
les
dec
insb
inc
pushf
pop
sbb
test
test
inc
emms
pop
mov
mov
enter
nop
sub
sub
out
movsb
shrl
or
lret
inc
pop
and
mov
fucom
lods
push
and
xor
stos
imul
scas
pop
mov
and
mov
es
orb
push
data16
fimull
inc
xchg
pop
jl
push
and
out
pop
xor
dec
test
rcr
dec
jle
sbb
push
sarb
xlat
or
dec
sahf
mov
mov
fwait
pop
or
xor
cli
rcr
sbb
push
adc
dec
mov
adc
out
and
mov
adc
je
lret
or
jne
dec
ss
ds
dec
inc
jmp
cmpsl
jb
enter
inc
mov
fisttps
mov
dec
dec
cld
or
pusha
ja
fsubrl
daa
in
in
add
sub
inc
sbb
jp
pop
dec
ror
or
popa
ds
wrmsr
jmp
xchg
rorl
dec
mov
push
add
mov
sub
out
test
outsl
dec
jg
mov
decl
push
mov
jg
pop
jbe
clc
daa
add
lods
out
mov
dec
std
xchg
iret
loop
clc
aas
inc
pop
ret
sub
int
mov
dec
and
cmp
loopne
inc
inc
push
iret
jg
xlat
fs
flds
popf
mov
sbb
mov
leave
xor
pop
das
in
ljmp
xchg
popf
mov
cld
add
sub
ljmp
nop
fiaddl
and
addr16
test
mov
sbb
push
fdivl
loop
or
insb
jmp
es
movsb
xchg
arpl
inc
xchg
arpl
out
es
imul
lock
addb
inc
adc
sti
mov
popf
scas
jb
cwtl
mov
xchg
xchg
mov
sbb
addb
dec
push
jno
testb
iret
xor
dec
pop
in
icebp
sub
mov
xchg
xchg
or
push
jne
jnp
mov
rorl
jge
imul
mov
jae
cmp
jno
in
int
or
aaa
jo
adc
test
shl
jno
xchg
in
cwtl
lock
push
ret
jle
pop
mov
test
fstpl
xchg
and
lods
add
int3
sbb
imul
addb
mov
jae
xchg
inc
lret
out
das
clc
xchg
divl
bound
adc
es
das
cltd
pop
aaa
xchg
sub
das
push
lret
push
or
lds
shlb
jle
fwait
icebp
xlat
lock
loopne
inc
mov
push
dec
mov
push
pop
xchg
push
hlt
dec
cmpsb
pop
and
xlat
mov
pushf
add
mov
mov
add
cwtl
flds
aaa
stos
adc
repnz
add
sub
fisubs
add
dec
lret
ds
xchg
add
xchg
mov
lods
ret
push
mov
mov
int3
lret
loop
sahf
mov
or
xchg
xchg
fsubrl
into
mov
fmulp
je
mov
lahf
sti
add
fiaddl
addb
repz
out
cs
or
mov
loop
mov
mov
fistpl
mov
mov
inc
loope
mov
jb
stos
mov
aad
xchg
xor
pop
enter
mov
pop
test
fstpl
inc
jmp
mov
popa
mov
add
pop
dec
xor
mov
movsb
dec
push
js
cmp
ret
adcl
lods
add
mov
loop
nop
imulb
fwait
dec
fisttpl
cmp
inc
repnz
ja
adc
adc
or
sub
mov
lods
cld
fsubl
mov
mov
pop
inc
jno
mov
inc
jp
xor
xor
sbb
inc
int
lock
push
ret
inc
leave
repnz
or
adc
push
inc
sub
inc
dec
jno
dec
xchg
dec
push
push
pushf
clc
add
aad
lret
or
sub
inc
pushf
push
xchg
cmp
sub
lret
iret
in
mov
adc
and
popf
xor
popf
cmp
cmc
mov
aad
and
filds
insb
outsb
add
call
or
mov
or
js
jae
lea
inc
sar
and
jae
gs
mov
xor
xchg
mov
inc
pusha
mov
push
adc
push
pop
and
sub
fs
xchg
in
cli
stos
roll
movsb
mov
into
and
mov
xor
add
xlat
push
add
lcall
jecxz
sub
mov
xor
in
les
ja
or
insb
or
lods
outsl
and
notl
or
dec
cld
pop
adc
out
and
or
sar
outsl
test
push
movsl
mov
lcall
fidivrl
repz
jbe
mov
add
popa
cmp
cmp
cwtl
mov
adcb
push
shr
jbe
mov
imul
push
jne
lods
sbb
inc
sahf
std
cmp
xor
pop
mov
aad
and
pop
std
push
imul
ds
sub
jae
sti
cs
hlt
dec
inc
incb
jbe
repz
insl
fs
adc
mov
mov
and
xchg
push
icebp
out
mov
mov
jle
mov
rclb
orb
dec
ret
mov
popf
dec
stos
sub
pop
aad
add
mov
outsb
ss
cwtl
lcall
sbbb
js
jne
push
lcall
lea
iret
dec
pop
mov
sbb
mov
sub
dec
jl
dec
out
aad
add
mov
test
popa
pop
inc
das
jp
jmp
cmp
or
aas
xlat
pop
hlt
add
and
fidivs
push
inc
push
sti
data16
push
and
push
ja
xchg
dec
insb
fwait
hlt
pop
adc
and
dec
xchg
mov
xchg
fdivr
jns
xchg
dec
in
sarb
or
hlt
pusha
lods
fwait
cmp
sahf
in
ljmp
cmp
sub
xchg
dec
lret
sahf
push
jb
ja
roll
sti
lods
xchg
mov
pop
sub
sbb
shll
xchg
pop
xchg
data16
pop
sub
leave
pop
inc
jp
pop
cmp
leave
xchg
into
leave
clc
addb
sbb
xchg
mov
inc
scas
or
mov
sub
data16
sub
cld
sti
mov
in
into
and
mov
ja
xchg
mov
lea
jns
int
pop
into
cli
dec
or
jmp
test
inc
add
pop
sub
pop
outsl
fwait
inc
rorb
inc
inc
arpl
xchg
jge
inc
fsubrs
inc
fimuls
cmp
push
iret
cmp
inc
or
repnz
pop
push
popa
ljmp
dec
mov
loop
jecxz
xchg
mov
add
mov
repz
jl
xor
mov
push
divb
jle
mov
or
push
in
shlb
aaa
pushf
imul
mov
sbb
or
xor
test
add
adc
ret
ret
add
xchg
repz
out
cmp
pop
pop
jns
jb
dec
enter
movsl
test
pop
je
pop
pushf
test
mov
jne
dec
and
mov
cltd
inc
jge
loopne
or
mov
fs
sub
ss
in
clc
jnp
mov
sub
mov
add
ret
push
jl
xor
dec
fldenv
push
cmpsl
dec
pop
ja
jmp
or
arpl
aam
and
cmp
testl
mov
fadds
sub
dec
xchg
xchg
cld
clc
divl
lahf
sub
adc
dec
ret
and
xlat
fstl
icebp
jl
popa
jbe
filds
or
fincstp
and
cltd
mov
lods
xchg
mov
imul
mov
test
inc
xor
das
aad
add
addr16
mov
sub
lahf
cwtl
sub
mov
out
pop
pop
hlt
cmp
xchg
mov
cmp
push
nop
jae
add
cmp
js
iret
repz
push
xchg
xor
mov
mov
loopne
ja
jne
shll
aam
xchg
cwtl
cmc
or
xor
scas
push
aas
mov
jae
mov
les
dec
cs
fmuls
insl
shr
ss
jno
hlt
icebp
cwtl
sbb
ficompl
or
fimuls
mov
pop
loope
or
add
add
xchg
pop
int3
aad
sbb
fisubl
mov
add
mov
xchg
lock
push
xchg
sti
dec
dec
aaa
sub
and
and
jns
sbb
in
push
jo
imul
xchg
pusha
fmulp
out
imul
in
jo
cmp
mov
lods
mov
ret
movsb
int
jecxz
mov
lds
fcmovnu
push
movsb
jb
sub
insl
jmp
sbb
bound
lcall
and
pop
mov
mov
jl
push
adc
daa
cmp
xlat
test
sbb
inc
gs
inc
xchg
and
out
sbb
add
aam
mov
rcl
xchg
movsb
add
jae
mov
fidivrs
icebp
xchg
lret
cwtl
scas
jo
ret
jge
test
iret
sub
int3
push
test
ret
pusha
fdivs
lds
loopne
push
arpl
sbb
out
jg
lea
ljmp
xor
push
loop
out
lea
mov
sbb
mov
popf
dec
stos
cmp
lahf
in
shrb
mov
arpl
sbb
fisttpll
lcall
mov
lea
ljmp
call
daa
mov
jae
insl
cltd
rcl
out
push
addr16
add
outsb
jmp
mov
dec
push
fwait
fwait
push
adc
cli
mov
mov
push
jmp
push
es
add
fnstsw
xchg
pop
jne
xchg
mov
adc
insl
addr16
shl
add
push
jns
jbe
sub
push
pop
mov
int
fistps
dec
cmp
cltd
jns
push
cld
mov
aad
or
enter
mov
pop
in
sub
dec
add
push
or
add
push
jl
xchg
int3
jo
stos
outsb
out
cmp
push
stos
divb
std
push
data16
popf
mov
or
rorb
add
xlat
cld
rol
xlat
jle
lock
aas
cs
lcall
or
inc
sub
bound
andl
arpl
cmp
xor
and
sbb
pop
ss
stos
jnp
mov
shr
mov
mov
cmp
mov
leave
por
adc
push
lods
fs
data16
push
cmp
cs
push
je
je
jbe
ret
dec
movl
loopne
pusha
push
aam
mov
lods
adc
cmp
adc
scas
jmp
xor
loop
pop
popf
pop
fiadds
fwait
or
mov
enter
call
lahf
je
mov
int
int3
sub
jb
sub
push
and
push
jl
es
test
or
mov
mov
je
xor
mov
mov
in
stos
xchg
jb
and
mov
adc
add
mov
clc
outsl
and
in
fwait
gs
push
jl
push
loope
loopne
stc
pop
xor
inc
lahf
test
pusha
int
sub
jl
inc
cmp
push
push
inc
push
sub
dec
xchg
pop
and
cltd
cmc
jge
xor
rorl
jae
ret
loopne
cmpsl
cs
push
fists
mov
inc
lea
fsubs
cmp
rcrl
mov
inc
pop
sbb
pop
mov
ja
stc
pushf
ds
movsb
sbb
lret
in
lret
inc
shrb
or
mov
push
mov
mov
stos
repnz
mov
jmp
jb
jae
jno
push
add
sbb
out
sbb
push
xchg
jae
dec
aad
mov
aaa
and
ljmp
insb
lods
xlat
repz
mov
out
mov
pop
hlt
xlat
sbb
lahf
add
fistpl
aaa
cld
jge
les
mov
push
andl
ljmp
cmp
push
adc
rcll
lcall
cld
add
cmp
mov
xchg
rcrb
daa
hlt
in
out
pusha
cltd
cmc
gs
orb
sbb
ror
mov
movsb
cli
out
lret
pop
and
pushf
sub
neg
test
insl
xchg
inc
push
cmc
lcall
lock
inc
stos
xor
movsl
les
sub
mov
mov
popa
lret
inc
imul
jmp
sub
out
lods
add
in
sbb
aad
loope
ret
sbb
scas
add
daa
xor
std
sub
xchg
stos
mov
jle
sahf
gs
shrb
leave
inc
les
arpl
icebp
jmp
je
add
mov
mov
in
fisttpl
adc
inc
and
sub
pop
xor
mov
decb
scas
sub
and
fwait
push
inc
rorl
pop
xchg
mov
icebp
mov
andb
mov
dec
jl
pop
and
mov
aam
lock
mov
and
push
cmp
lcall
loop
sub
push
mov
sahf
arpl
out
aad
shrl
aam
ja
dec
mov
in
and
mov
pop
dec
mov
shll
frstor
mov
mov
shll
ss
leave
inc
jno
into
scas
cmp
clc
add
sub
movsb
cmc
bound
imul
movsl
jecxz
xor
mov
cli
mov
incl
loop
mov
and
jns
xor
js
add
dec
xchg
jge
add
test
xchg
out
jle
dec
les
xor
nop
push
mov
cs
lods
clc
sub
xchg
jmp
fiaddl
fildll
mov
mov
pusha
sti
pop
leave
pop
mov
adc
outsl
and
xchg
pop
std
lcall
imull
cmp
rorl
mov
cs
adc
inc
lods
dec
adc
xchg
dec
cli
xchg
mov
lods
xchg
push
mov
inc
xchg
pop
arpl
test
ficoms
push
mov
fildl
xorb
cli
or
outsl
fists
roll
add
sbb
into
jge
push
sti
push
in
outsb
shr
jmp
rep
cmpsb
mull
js
adc
fnstcw
jne
jnp
pop
jmp
cmp
lds
mov
out
mov
das
jno
mov
scas
adc
mov
loop
dec
add
rclb
push
loop
movsl
push
and
push
outsb
shll
inc
sarb
repnz
adc
pop
insl
shll
fwait
pop
fiadds
lods
or
ja
loope
inc
push
rcrl
push
add
addl
jecxz
scas
dec
and
mov
cmp
fwait
push
lahf
xchg
scas
rorl
xchg
xchg
add
rcr
dec
roll
fsubrl
or
xchg
xchg
or
outsb
ja
sub
div
outsl
xchg
pusha
cmp
and
sbb
jae
and
dec
rcrl
mov
push
mov
add
rorb
mov
mov
mov
pop
sbb
mov
or
mov
in
aaa
mov
mov
gs
popf
cmpl
out
sub
clc
cld
addr16
addr16
in
mov
jne
test
xor
sbb
roll
insb
mov
xor
jno
jo
inc
divl
mov
jge
mov
adc
dec
addl
sbb
ljmp
xor
add
mov
pop
or
push
stos
in
ds
inc
stc
lock
pop
lret
jne
insl
add
nop
add
lret
mov
jno
pusha
test
in
cwtl
mov
cmpsb
cwtl
outsl
sbb
xor
adc
cmpsb
fwait
shl
jecxz
pop
out
xchg
jge
cli
sbb
fistpl
cs
pusha
loopne
cmpsb
cmpsl
mov
and
ss
mov
inc
mov
ljmp
mov
xor
pop
mov
repz
cmp
mov
sub
test
mov
and
sbb
and
sbb
outsl
rorl
xchg
sbb
ficoml
sbb
mov
pusha
adc
inc
mov
insl
dec
mov
lds
push
inc
push
inc
xchg
dec
inc
iret
xor
movsl
inc
cld
xchg
or
adc
jp
insl
dec
or
push
cmpsl
pusha
lret
mov
xchg
and
cmp
mov
loop
mov
cltd
outsl
sar
xor
ja
dec
mov
xchg
js
jg
lock
fistpl
jle
and
hlt
in
icebp
idivl
ret
mov
mov
movsb
mov
popa
push
sub
testl
popf
iret
repz
push
shlb
in
and
inc
int3
int3
pop
push
sarb
mov
xor
jg
add
mov
jns
or
mov
je
popf
pushf
mov
inc
aam
nop
mov
lea
mov
into
repnz
incl
sbb
outsb
int3
mov
add
ljmp
pop
mov
mov
mov
mov
test
mov
in
cwtl
popa
outsb
ret
mov
test
xchg
xor
cmpsl
clc
cmpsb
cmp
in
or
insb
fildll
sar
popa
push
lret
dec
lds
rorb
ss
repz
lret
push
sub
push
mov
inc
lret
pushf
pop
loope
inc
cmpsb
sub
inc
xchg
out
jns
gs
mov
ss
xor
sbbb
dec
shll
lahf
mov
std
lahf
ror
pop
and
cmc
int
pop
daa
pop
or
mov
jge
loop
pop
cli
outsb
jne
sbb
je
mov
pop
push
cmp
mov
or
push
dec
mov
mov
jbe
movsb
jno
and
jmp
dec
mov
rclb
roll
push
pop
popf
push
fisubrl
orb
sti
out
xor
xchg
xchg
push
mov
lds
or
rol
rorl
xchg
sbb
and
mov
xor
push
das
and
ljmp
inc
out
mov
add
add
imul
pop
dec
daa
mov
std
fmuls
shl
ss
sti
jbe
ljmp
and
notl
nop
add
mov
mov
xor
xor
call
aas
or
or
cmp
das
jmp
scas
pushf
adc
or
scas
test
insb
dec
xchg
add
cmp
ret
pop
dec
stos
push
mov
mov
mov
mov
or
jnp
fwait
leave
inc
mov
or
adc
jne
jnp
enter
movsb
into
mov
mov
into
pop
cmp
or
or
and
mov
addr16
xchg
add
jo
mov
push
int3
pextrw
imul
add
sbb
fwait
xchg
push
inc
inc
mov
aam
mov
or
dec
icebp
out
pop
mov
sbb
sbb
movsb
aas
ds
ror
sbb
and
imul
inc
and
lahf
dec
add
iret
jp
shll
push
loopne
ljmp
fwait
sbb
cmp
mov
loope
in
mov
mov
lea
cld
push
push
mov
das
mov
cmp
cmp
jne
test
mov
mov
loope
xchg
mov
inc
mov
lods
notl
cmpsl
cwtl
push
in
fs
je
xchg
xor
and
cld
add
pop
mov
push
loopne
cmp
jmp
popa
or
cmovge
mov
xor
xchg
xchg
sti
aaa
sub
das
ss
outsl
push
sahf
gs
push
sahf
jno
add
fcom
push
inc
sbb
movsl
push
pusha
test
lret
jae
aas
inc
iret
mov
and
push
imul
scas
jl
out
cmp
xorb
cs
aas
repz
aas
insl
mov
fs
movsb
into
lcall
daa
sbb
xor
add
sbb
lods
or
jnp
je
inc
imul
pop
push
dec
pop
xchg
xchg
pop
push
inc
mov
out
loope
in
or
cs
sti
mov
xchg
push
cmpsb
adc
mov
jle
adc
pop
data16
mov
jne
xor
xchg
out
jnp
inc
sbb
scas
mov
pop
rorl
dec
mov
out
addb
rcrl
xchg
ljmp
pop
mov
pop
dec
mov
pop
xchg
mov
adcb
mov
pop
and
push
stos
push
mov
sub
iret
xchg
lret
jmp
push
lret
pop
push
pop
xlat
popa
negb
mov
pop
mov
mov
pop
xchg
pop
lcall
outsb
or
adc
rcl
movsb
xchg
xchg
ret
std
pop
cmpsb
dec
imul
enter
push
mov
push
or
mov
mov
ljmp
mov
xchg
sub
jbe
and
scas
es
loop
inc
pusha
jge
sub
nopl
adc
push
add
pop
xlat
cmp
xchg
inc
jge
sub
addr16
push
js
sbb
pop
push
movsb
imul
push
cld
dec
pop
fidivrl
add
inc
inc
xor
sbb
and
push
push
inc
add
movsl
cs
fcoml
data16
pop
mov
cli
or
adc
sti
sbb
mov
imul
sahf
adcl
push
and
lods
dec
pop
div
rorl
jnp
push
and
hlt
scas
js
pop
xlat
sub
hlt
dec
fwait
jbe
insb
mov
popf
shrb
xor
dec
or
nop
out
mov
and
clc
dec
adc
lret
inc
les
dec
sub
jmp
xchg
movsb
loope
mov
mov
mov
mov
dec
push
rcll
pop
adc
lds
jg
cmp
imul
lds
fsub
rclb
add
mov
out
mov
cmpsb
or
cli
add
loop
push
xchg
fbstp
movsl
shrb
jge
adc
scas
test
gs
xorl
cmp
je
sub
sbb
movsl
push
pop
xchg
ss
data16
add
jle
sbb
and
fcoms
leave
syscall
repz
out
pushf
cmpsb
or
pop
int3
lahf
mov
sub
outsb
cmp
ljmp
gs
ret
das
push
sbb
xor
js
cld
jge
test
push
imul
add
lret
push
and
adc
movsl
divl
mov
sbb
jp
mov
in
in
cmp
push
enter
xor
ret
mov
pop
jbe
jb
mov
inc
sub
call
sahf
and
push
add
imul
jb
push
popf
fdivrl
pop
lret
lret
sarl
ret
hlt
pop
outsl
sbb
lock
push
int
leave
mov
mov
jg
loop
pop
lods
push
mov
ss
xchg
leave
inc
stos
mov
in
fs
xor
cltd
testb
out
adc
cmpb
mov
xchg
cmp
dec
pop
inc
push
adc
addb
and
pop
cmpsl
cs
mov
mov
push
lods
ljmp
popf
leave
out
inc
pop
cltd
adc
stos
rolb
push
mov
xorl
push
xor
and
loope
fwait
inc
jns
addr16
push
cwtl
push
mov
dec
out
mov
push
jnp
xchg
jecxz
imul
cmp
jns
mov
mov
cmp
dec
imull
scas
xchg
mov
fs
dec
cmp
pop
ljmp
testb
mov
inc
xor
scas
xchg
add
movsb
mov
andb
sbb
inc
movsl
inc
aas
int3
push
repnz
ret
out
aad
jmp
xchg
lods
ja
stos
xchg
mov
sbb
jae
inc
bound
jmp
aaa
ficoml
mov
hlt
ljmp
fimull
mov
mov
add
lds
push
leave
xor
subl
rolb
ljmp
mov
sbb
out
or
aas
cs
notrack
push
add
lret
fidivrl
sbb
movsb
jae
cltd
popa
xor
sbb
add
xchg
ja
inc
pop
fisubs
jge
xor
jmp
pusha
ret
sar
mov
stos
gs
movsl
jle
aam
jmp
gs
pop
mov
testl
sbb
pop
push
andl
call
popf
aam
sub
dec
add
xchg
mov
dec
or
cwtl
aam
maskmovq
xchg
int
sbb
xor
out
aaa
popa
sub
and
ficomps
sub
jge
push
in
or
push
push
xor
mov
decb
cs
pusha
lcall
mov
jns
insb
sbb
incb
outsl
mov
repnz
sub
icebp
mov
punpckldq
sbb
cli
or
aad
mov
js
xor
sub
scas
jo
in
push
stos
loope
stos
mov
dec
pop
mov
jno
pop
lret
inc
push
mov
fimuls
in
or
mov
adc
cltd
loop
jnp
ja
test
and
pop
mov
lcall
aam
xchg
pop
push
out
push
test
or
mov
aam
inc
xor
mov
add
xchg
rcrb
rcrl
lcall
dec
sub
out
push
arpl
fidivl
cltd
mov
inc
mov
sub
sbb
aaa
cmp
popa
fildll
cmp
repnz
add
mov
icebp
std
push
dec
loopne
popf
das
pusha
cmp
push
imull
cltd
dec
push
jg
inc
push
repnz
pop
add
lahf
mov
pop
lcall
ret
xchg
addl
aad
repz
cwtl
ljmp
ss
dec
add
xor
sub
arpl
pop
test
pop
cmp
mov
jnp
mov
les
aad
lods
les
ds
in
dec
xor
fidivrl
js
shrl
inc
mov
xor
mov
inc
aaa
mov
dec
loope
fwait
sub
bound
cli
cld
sbb
lcall
cmp
lret
lahf
add
cmp
mov
sub
sub
stos
xlat
mov
push
push
lret
data16
jg
cld
pop
imulb
cli
pop
xchg
std
or
sub
and
movsl
and
pop
les
hlt
jb
icebp
or
and
in
mov
cwtl
mov
add
into
xchg
sbb
push
fisttpll
mov
hlt
xor
dec
cmp
jbe
inc
xor
fldt
out
and
ss
fisubl
fiaddl
in
mov
cmpsb
inc
scas
xor
pusha
mov
mov
mov
fs
jb
pop
push
in
out
fucom
mov
xchg
xor
aaa
lea
js
jbe
cmpsl
pop
fistps
xchg
lods
idivl
cmpsb
cmp
mov
lcall
pop
push
adc
imul
adc
cmp
cmp
mov
clc
jne
push
pop
icebp
cli
mov
inc
bound
lods
lea
addr16
cmp
repnz
mov
imul
lods
mov
mov
dec
das
fstpt
je
sub
negl
cmpl
movsb
cli
dec
and
jge
sub
std
loope
jae
adc
cmc
sub
or
jg
mov
adc
sti
xchg
sbb
add
in
repz
sbb
or
or
push
xor
aad
mov
mov
lret
mov
repz
fs
sub
mov
jl
imul
xlat
sbb
fsubrp
in
lods
mov
aam
xchg
add
gs
cmpsb
data16
dec
mov
cli
mov
jns
stc
mov
push
mov
add
pop
call
push
ficoms
int3
fsubrp
cwtl
mov
into
aas
adc
mov
push
jno
and
ficomps
les
shrl
jns
lea
jmp
test
inc
repnz
aaa
and
xchg
decb
mov
inc
aas
or
pop
loope
mov
lock
ljmp
push
or
xchg
jp
mov
mov
pop
or
xor
xchg
xchg
dec
stos
xchg
or
fistl
cs
dec
lock
sbb
inc
arpl
jle
and
fisttps
inc
in
add
insl
inc
icebp
dec
aad
mov
and
arpl
stos
shrb
in
or
mov
inc
rolb
pop
lcall
in
icebp
jne
jg
cmc
jle
iret
fisubrl
adc
adc
shrb
jg
or
mov
jb
mov
rclb
inc
into
out
xchg
stos
test
push
fstpl
gs
jge
out
push
sbb
jnp
cmp
fidivrs
cmp
popf
rclb
jecxz
gs
dec
mov
out
bound
sbbb
lea
cmc
bswap
cltd
rcl
outsb
insb
roll
jecxz
jl
je
xchg
inc
ja
xchg
add
lret
sub
shlb
aad
lea
push
ret
cmp
jp
insb
movsl
lret
jno
or
scas
xor
cmc
repz
ficomps
js
shlb
gs
fdivrs
push
pop
mov
dec
xor
push
dec
je
es
test
xor
dec
int
aad
leave
jb
into
stos
xchg
adc
inc
sub
shlb
shrb
hlt
imul
cmpsb
test
push
call
mov
div
dec
add
push
into
push
in
test
sub
push
cmpsb
push
adc
add
mov
std
pop
xchg
inc
in
into
out
loopne
test
cmp
lods
out
lock
xchg
inc
cs
loop
ret
mov
push
aam
popf
imul
incl
cmovg
ret
les
xchg
rcr
rclb
push
popf
or
push
xor
in
icebp
sub
in
inc
mov
or
jle
leave
mov
cmpsb
lea
pop
jge
dec
in
dec
and
mov
pop
add
pop
arpl
sub
adc
add
sub
adc
out
or
mov
stc
lods
pop
adc
mov
jae
inc
and
or
test
in
enter
or
jge
xchg
adc
jbe
fldcw
dec
mov
cmp
sbb
inc
ss
mov
mov
sub
out
cli
fldt
ret
sbb
mov
push
daa
mov
mov
sub
lods
jg
add
mov
cmpb
iret
mov
sbb
lret
stos
fdivrs
or
add
loop
dec
push
repnz
push
jge
ret
xor
ret
cmp
ljmp
ss
and
pushf
loopne
lahf
dec
cmp
aas
sub
mov
int
fistl
repnz
jo
cmc
pusha
dec
fld1
inc
fs
popa
jp
pop
repz
movb
icebp
lea
cmp
xor
and
in
mov
or
or
adc
lret
adcb
xchg
fdivs
xor
mov
push
ficoml
mov
test
xchg
xlat
insb
call
and
cmp
popa
out
sbb
in
movb
sub
jne
xchg
mov
adcl
lds
movsl
push
cld
push
jecxz
hlt
test
ja
inc
pop
pop
cmpsb
lret
mov
or
jbe
adc
dec
cltd
add
adc
mov
xchg
and
arpl
jne
inc
or
jae
dec
mov
cmp
cmp
rcrl
sbb
mov
cmp
lcall
sbb
fcompl
lods
pop
push
cmc
cmc
jae
jp
iret
fucomip
negb
xor
cmpsb
sub
jo
inc
pop
push
pop
pop
imul
jno
push
out
fldt
loop
jnp
js
inc
pop
fisubs
orb
pop
mov
inc
dec
add
add
ficoms
sahf
and
cmp
rol
xchg
add
aas
adc
pop
add
subb
ror
and
addr16
scas
ret
and
jbe
dec
fwait
fs
es
mov
add
and
sub
and
and
out
sahf
andb
xchg
sbb
pop
stos
mulb
call
mov
test
les
clc
xor
jns
push
mov
mov
popa
dec
jmp
nop
test
jg
outsl
jo
cs
xchg
mov
ss
in
enter
jg
movsb
mov
pop
cmp
jmp
pop
insb
push
in
inc
repz
jae
xchg
lods
xor
mov
jo
clc
add
cmp
sbb
out
or
ljmp
repz
nop
fdivrl
pop
xchg
fstl
stos
nop
lea
mov
test
and
les
jbe
fsubrs
xchg
pop
pop
loope
jns
dec
cmp
mov
or
popa
mov
insb
adc
cli
mov
jg
push
lods
mov
stc
in
inc
leave
push
mov
mov
ret
hlt
xor
or
inc
sarl
and
test
pop
inc
shlb
jge
lret
das
sbb
arpl
pop
mov
add
push
adc
test
push
mov
and
and
pop
jb
inc
scas
rcll
icebp
cmp
xchg
movsl
stc
and
shll
jmp
cmpsl
scas
jle
call
iret
popf
add
iret
sub
lods
jecxz
sub
jecxz
aaa
push
das
and
popa
popf
pop
push
repz
fcomp
push
mov
test
shlb
imul
es
jne
mov
sbb
jo
les
sbb
stos
xchg
std
mov
pop
negb
fnstenv
mov
push
mov
rclb
push
scas
in
sbbl
jb
sbb
frstor
in
sbb
xor
and
jl
push
sbb
jp
cmpsl
lret
dec
add
inc
cmp
sub
xchg
sbb
xor
pop
in
push
inc
fs
fsts
sub
ror
mov
push
and
jbe
sti
nop
jne
subb
sub
inc
ja
adc
mov
jns
mov
pop
cld
addr16
or
movsl
adcb
das
ficomps
pop
sahf
sub
add
xchg
dec
jmp
lret
xchg
dec
push
pop
shll
or
jle
movsb
lods
add
xchg
or
addr16
lret
test
lret
xor
dec
int3
arpl
mov
int3
cmp
inc
push
icebp
imul
dec
add
inc
adc
ds
loop
out
push
sub
add
lcall
jecxz
xor
jg
lods
lods
mov
push
stc
int
leave
and
xor
popf
mov
xlat
mov
outsl
adc
adc
out
sub
jo
inc
lahf
xchg
andb
inc
or
adc
dec
bound
cmp
aaa
xchg
scas
jno
int3
fnstcw
adc
stc
xchg
lret
cwtl
xor
pushf
push
dec
or
lahf
loop
test
lods
inc
scas
xor
mov
sbb
js
test
std
out
pop
mov
imul
fs
lods
int
jmp
and
inc
out
fsubl
aam
arpl
insl
pop
test
jecxz
outsl
data16
packsswb
mov
sbb
xor
int3
sahf
dec
mov
fistpl
pop
jmp
add
add
sbb
mov
mov
pop
jg
xor
jp
inc
xorb
ljmp
icebp
xchg
out
mov
and
in
dec
mov
ja
mov
loop,pt
data16
inc
push
jle
push
jmp
lock
pop
lock
nop
xchg
fildl
add
or
movsb
mov
jo
mov
rcll
out
xchg
pop
mov
push
add
pop
xchg
popf
sbb
mov
sub
mov
inc
mov
mov
fwait
xchg
test
jg
ljmp
jle
cltd
sar
jbe
adc
sub
and
idivb
and
mov
fidivrs
jns
adc
stc
in
lods
cmpsl
mov
dec
jg
in
cmp
adc
add
add
fwait
cmp
sub
in
movsl
into
and
add
loop
or
in
add
mov
dec
xchg
xchg
lea
or
xchg
inc
or
sbb
cmp
test
sti
jb
cs
xchg
or
bound
mov
push
dec
xor
xor
leave
dec
clc
popf
xchg
test
jnp
into
xor
addr16
jae
call
dec
cmpsb
push
adc
mov
clc
push
testl
pop
push
fsincos
mov
push
or
repnz
insb
pop
jbe
out
dec
mov
lea
fcoms
lods
inc
scas
addr16
and
push
cmp
mov
xor
leave
sbb
out
mov
es
mov
sahf
cmp
mov
rcrl
movsb
cmpsl
rcrb
cmp
and
movsb
sub
add
adc
aas
lcall
test
mov
adc
sbb
push
cmpl
test
dec
stc
mov
jbe
adc
std
add
mov
mov
sbb
xor
sub
adc
pop
dec
fisubl
sub
push
bound
push
pop
loopne
mov
lods
or
es
mov
xor
sub
iret
mov
jl
dec
mov
pop
outsl
mov
mov
xchg
lret
push
nop
inc
sub
xchg
sub
int
cmp
push
inc
inc
sub
popf
lock
ret
or
sbb
std
jl
xchg
fistl
and
iret
push
adc
mov
cwtl
stos
sarb
push
aaa
pop
add
stos
add
daa
pop
mov
out
aas
adc
out
shlb
cmp
cld
rcl
mov
mov
dec
mov
movsb
jmp
push
xor
xor
xchg
ret
or
aaa
jbe
cmpsb
out
lahf
call
lcall
incl
movsb
mov
fisubs
xchg
xchg
clc
scas
jg
adc
sahf
or
sti
add
sbb
data16
and
test
cmp
mov
stos
add
mov
cmp
rep
mov
dec
out
scas
jns
jbe
push
ljmp
shrl
xchg
rcll
bound
in
mov
in
inc
dec
cmc
mov
std
mov
adc
mov
push
shll
je
mov
sub
xor
push
cli
cmp
push
and
loop
adc
mov
popa
popf
js
popf
scas
or
jb
xorl
iret
sbb
dec
pusha
pop
sub
testb
lcall
fists
add
in
mov
movsl
sbbw
push
xor
stos
add
and
mov
adc
mov
or
sub
mov
mov
lret
xchg
dec
sub
jecxz
xor
test
mov
and
fstpt
jge
mov
sbb
ret
clc
mov
fdivr
fldl
adc
adc
and
out
jae
jnp
jae
jecxz
je
test
aad
and
dec
and
dec
aam
fsub
dec
ret
adc
sub
insw
add
in
pop
or
out
addr16
lods
aam
je,pt
mov
adc
inc
or
add
test
push
push
sub
xor
clc
addr16
pop
popa
pop
mov
je
mov
jbe
xlat
and
mov
add
sbb
fstpl
mov
adcb
fistl
dec
mov
or
adc
dec
pop
fld
mov
ret
and
out
shrl
and
and
cli
inc
leave
or
js
je
sub
ljmp
cltd
ja
call
sbb
dec
stc
shll
aad
rep
sti
inc
cwtl
subl
sbb
aas
jl
stos
sub
mov
insl
xor
jmp
and
rolb
cwtl
test
sub
dec
jo
rcrl
and
lea
cmp
in
repz
push
adc
cmp
insb
call
add
jae
pop
sub
push
jno
jg
pop
and
inc
xchg
fists
stos
xor
idiv
or
mov
fidivrs
xchg
xchg
mov
punpckhwd
ds
sbb
out
mov
nop
jp
sti
push
popf
jae
mov
cmpsb
inc
push
lret
call
and
cmp
jl
push
inc
sub
sarb
xor
out
mov
and
adc
imul
cs
cltd
add
stos
sub
or
ss
lret
adc
divl
inc
jo
data16
stos
and
xchg
sub
ss
sbb
inc
mov
xchg
and
mov
cmp
cmp
xor
mov
rcll
inc
pop
jmp
jnp
or
push
jl
mov
mov
sahf
dec
push
inc
add
mov
test
push
sbb
xchg
and
loope
inc
push
pop
leave
inc
fs
test
ret
mov
and
enter
lcall
pop
inc
sub
cmpl
arpl
or
cwtl
lods
mov
sbb
and
push
test
in
mov
daa
sbb
dec
xor
dec
adc
push
scas
mov
xor
inc
scas
pop
lods
cli
movsl
sbb
dec
in
pop
in
mov
sbbb
js
shrl
pushf
push
insb
sbb
movsb
in
aas
daa
aad
push
shrl
mov
jecxz
cmp
mov
add
lods
dec
mov
jns
xchg
mov
ljmp
fcomp
mov
in
out
nop
dec
btc
mov
adc
jo
mov
xor
sbb
in
add
stos
int3
es
inc
ret
sti
pop
mov
inc
sub
adc
fisubl
int
aad
lods
test
mov
and
cmpsb
aam
cld
inc
cmc
ja
mov
popa
jb
inc
fcomps
jp
shlb
loop
lret
imull
mov
shlb
pop
cs
push
cmp
in
lods
inc
mov
out
inc
pop
lock
mov
cmp
mov
add
std
mov
dec
andb
xlat
inc
arpl
mov
push
sbb
scas
ljmp
js
cmpsb
roll
mov
int3
mov
add
iret
mov
mov
dec
arpl
xchg
or
cmp
ret
enter
dec
movsl
loope
adc
jb
and
mov
push
inc
push
mov
lcall
gs
jns
push
mov
jo
xchg
and
adc
lds
or
scas
or
jo
subl
out
mov
movsl
or
aas
test
dec
out
mov
fidivl
adc
dec
inc
insl
lds
test
xchg
das
aaa
xchg
dec
sub
dec
push
push
sti
and
pusha
or
rcr
out
scas
out
fistpll
cmp
add
popf
xchg
les
daa
add
mov
xchg
sti
das
mov
lods
mov
or
pop
xchg
push
gs
inc
cld
cs
push
and
cmp
fisubs
xor
scas
xlat
adc
mov
and
fsubrs
nop
mov
mov
pop
jno
adc
lods
mov
mov
fcompl
mov
or
pop
out
pop
insb
ljmp
xchg
mov
std
aad
sub
jno
rcr
cmp
and
sub
xlat
outsl
icebp
push
xlat
test
pop
mov
int
into
push
test
lds
xchg
jmp
lret
or
xlat
test
loop
xchg
sbb
xor
lods
and
enter
fidivl
inc
sbb
mov
outsl
push
out
xorb
jp
ds
mov
inc
sahf
adc
test
mov
push
mov
cld
xchg
mov
inc
bound
aad
pop
or
mov
ds
lret
mov
adc
jnp
cwtl
cmpsb
gs
stos
mov
mov
inc
stos
ss
mov
dec
xchg
and
mov
jmp
add
call
sub
push
adc
lret
xchg
pop
push
shll
pop
lods
xchg
adc
in
mov
or
xchg
ja
subb
cmpsb
out
ss
sub
sub
scas
sti
iret
movsl
or
xchg
test
dec
sub
inc
cmc
pusha
arpl
sti
pusha
mov
pop
dec
mov
push
cmpsb
lahf
mov
push
inc
mov
sarl
aad
mov
sub
mov
or
or
fldl
sbb
push
cmpsl
cmp
xchg
jno
jle
bound
add
and
je
sub
mov
or
or
inc
fmuls
outsb
in
movsb
pop
jle
jg
add
fcoml
into
ficompl
or
pop
les
lea
aas
in
std
fdiv
es
dec
sub
cli
shll
inc
aad
push
cmp
sbb
cmp
paddusb
cld
test
lret
mov
inc
notl
repz
fisttpl
mov
push
cli
xor
xchg
es
or
pusha
jne
mov
adc
imul
negl
mov
lret
mov
pushf
dec
and
repnz
bound
in
cmp
cmc
dec
pop
rcl
je
xchg
or
cli
xlat
ja
inc
call
cmp
fs
push
pop
jl
ljmp
fbld
xor
mov
mov
scas
xor
lock
cmpsb
push
sub
out
cvtps2pi
fidivrl
imul
out
mov
ss
pop
cltd
pusha
xor
and
test
movsl
and
inc
pusha
test
add
leave
outsb
in
jl
push
cmp
and
gs
outsb
into
sahf
pop
dec
xor
loop
insb
jmp
jb
pop
rcll
orb
adc
push
mov
imul
push
jmp
mov
ds
sar
sub
cmp
or
mov
imul
pop
dec
popa
insb
mov
in
das
dec
adc
xchg
mov
jl
insb
sar
and
adc
sbb
push
mov
aas
mov
add
or
dec
and
xchg
les
repz
mov
xor
outsl
push
test
aas
test
sbb
insb
out
dec
pop
pop
jl
cmp
test
or
ljmp
scas
dec
gs
dec
jmp
shll
push
out
arpl
ljmp
test
clc
cmp
mov
daa
sub
xorl
mov
xchg
dec
scas
xchg
pinsrw
push
gs
insb
pop
imul
push
aaa
outsl
inc
shlb
pushf
push
ja
cmp
push
mov
xor
sub
daa
imul
mov
popa
inc
repz
in
ss
jmp
cli
lds
leave
mov
mov
sub
cmc
in
lret
daa
dec
loopne
in
lds
push
leave
lods
jns
enter
pushf
dec
filds
or
or
lret
xor
mov
outsb
adcb
mov
or
dec
int3
loop
mov
cwtl
clc
and
mov
push
mov
sbb
rorb
or
pushw
movsl
jge
inc
mov
mov
cltd
jae
loop
sarl
rcrl
jge
jae
dec
gs
mov
push
movl
movsl
fs
cmp
xchg
xchg
in
mov
pushf
repnz
sbb
enter
push
push
dec
and
imul
in
nop
call
outsb
jecxz
dec
popa
add
int3
push
and
jne
aas
jo
jno
sub
mov
jo
xor
test
jmp
bound
int
lods
jge
xor
je
pusha
cmp
iret
xor
fldt
inc
inc
sbb
fstpl
inc
mov
push
push
arpl
andl
pusha
pusha
xchg
xor
and
jnp
xor
xchg
scas
jg
jmp
imull
enter
sti
jnp
insb
ja
arpl
test
cmp
push
pop
movsb
or
mov
imul
fsubl
inc
pushf
imul
cmc
addr16
sub
cmp
lret
cmc
js
adc
daa
fcmovnbe
fsts
dec
jb
popa
clc
pop
ss
cmp
cmpsl
add
sbb
pop
cmpsb
pop
jno
rolb
xchg
fiaddl
push
sub
inc
cmovne
pusha
push
and
fldl
sbb
xchg
pop
fsubl
cmp
sbb
jmp
pop
xchg
xchg
movsb
xchg
ret
imul
and
mov
dec
les
int3
inc
out
int
push
cmpsl
add
xchg
push
sti
mov
shll
stos
cmc
cli
orb
mov
subb
fnstcw
leave
rcr
push
sbb
pop
ficompl
sar
out
jmp
lret
jmp
xchg
add
push
aam
add
imul
insb
js
ss
adc
arpl
xchg
int3
lods
or
push
jne
add
add
imul
aas
mov
pusha
rolb
lahf
int3
add
imul
sub
add
out
jne
scas
scas
jnp
xlat
add
push
xor
cmp
jae
lods
jbe
or
icebp
push
arpl
js
insl
out
inc
inc
jl
pusha
ds
fcompl
loope
out
mov
sbb
lret
sarb
imul
cmp
mov
mov
inc
std
push
dec
fiadds
cld
sbb
pop
add
xchg
sub
enter
xchg
sub
cwtl
or
orb
xchg
sbb
pop
xorb
shll
sbb
mov
jne
test
and
loope
inc
push
cmp
insb
pushf
push
popa
loope
sub
ss
adc
xlat
jp
jle
icebp
cmp
fmull
cmpsl
out
in
mov
push
hlt
or
loop
gs
add
lahf
sahf
mov
pop
les
jg
cs
data16
mov
xor
xchg
ds
xchg
xor
repnz
dec
sub
xor
ljmp
int3
fldln2
jnp
xchg
test
add
ret
or
pushl
pop
fidivs
aam
cmc
subl
push
sub
icebp
push
and
sahf
xchg
lods
xchg
jnp
mov
mov
fisubrl
arpl
out
push
add
cmpsb
adc
je
xchg
les
jg
mov
movsl
pop
scas
push
pop
cmp
rep
and
cmp
fbld
sbb
inc
imul
ljmp
xchg
std
push
mov
stc
push
das
stos
jp
dec
fcoms
jmp
or
cld
mov
aad
fsub
dec
add
mov
lahf
push
cmp
aaa
scas
aas
movsb
int3
jo
mul
mov
test
loopne
or
int3
xor
int3
lock
imul
loopne
imul
lea
cmp
movsb
test
nop
das
aas
es
bound
push
sbb
aad
subl
or
faddl
cmp
lahf
scas
fucomp
mov
ffree
pusha
mov
inc
out
mov
pop
sub
pusha
and
das
cmp
mov
sbb
aas
inc
xor
and
adc
jle
insb
xchg
lcall
pusha
iret
jb
lods
xchg
test
fildl
sub
mov
dec
lret
and
add
rcr
shll
in
pmaxsw
sub
lods
or
adc
jl
je
bnd
loope
sbb
and
pop
fwait
xchg
fwait
insl
xchg
enter
jl
testl
ds
adc
movsb
ja
xchg
sub
out
ljmp
adc
cmpl
xor
fisubrl
sahf
std
scas
fbstp
xor
jecxz
ret
adc
and
and
mov
push
fistpl
mov
xchg
outsl
dec
add
mov
add
sbb
jg
enter
jmp
ret
dec
push
dec
rcr
mov
jae
and
mov
push
imul
cmp
loop
and
fdiv
test
pop
sub
fidivrl
imul
clc
fidivrs
cli
jae
call
jo
repz
les
inc
nop
icebp
pop
dec
mov
stc
cltd
mov
repnz
scas
ja
sbb
dec
lret
aas
les
mull
xor
dec
xchg
icebp
test
sub
fcoml
je
leave
inc
pop
push
adc
cwtl
jo
xor
mov
mov
cs
cs
insb
cwtl
int
mov
sub
and
mov
inc
scas
arpl
push
ror
js
ret
popf
push
mov
add
sahf
outsl
test
ss
std
add
cmp
jmp
pop
push
pushf
cmpsb
sbb
lds
test
sbb
das
pop
cli
or
sbb
nop
mov
mov
std
popa
fs
icebp
adc
xor
ret
jne
mov
lret
sub
xchg
xchg
xor
sbb
mov
sub
push
loop
frstor
bound
cwtl
jbe
imul
imul
mov
inc
pusha
or
mov
push
int3
mov
xor
insl
or
mov
or
mov
subb
fs
pop
mov
fwait
push
mov
cmp
loopne
testl
call
loop
or
in
lods
xchg
test
jp
repnz
addr16
mov
or
or
pusha
pusha
jns
push
xor
mov
jno
xor
pop
rorb
jae
and
test
cmpsb
jne
inc
cli
jecxz
add
mov
shlb
mov
pop
dec
xlat
popa
ds
mov
std
pop
repnz
outsl
rorb
pop
pop
mov
cmp
pop
add
xchg
outsl
jbe
or
jmp
movsl
mov
mov
xchg
jl
sbb
mov
pop
mov
outsl
push
stc
xchg
or
cmp
mov
mov
sbb
test
popa
xor
mov
or
popa
ret
pop
mov
cli
out
cmp
cs
sbb
loop
das
je
push
adc
sti
jp
lret
push
aad
jmp
mov
or
or
jae
loopne
or
xchg
sub
add
fdivrs
cmpsb
mov
pop
xor
leave
xor
or
movsb
loop
dec
push
mov
in
test
lahf
dec
ss
or
int3
sub
cmp
lret
adc
pop
mov
inc
jb
jnp
pusha
cmpsl
mov
pop
adc
movsl
aad
cld
stos
enter
andb
jo
daa
ljmp
mov
push
sub
xor
out
stc
data16
in
sbb
cwtl
push
dec
add
lahf
lret
movsl
jno
enter
fsubrl
pushf
mov
mov
mov
out
adc
loope
call
pop
adc
adc
mov
ficomps
push
cltd
imulb
clc
pop
cmp
pop
jl
sbb
adc
sbb
jo
mov
ss
sbb
int
sub
repz
jecxz
pop
sbb
cwtl
add
push
mov
push
push
inc
sbb
adc
les
pushf
mov
inc
cmpsl
and
push
cmp
imulb
mov
sub
ljmp
lret
mov
xor
in
cmp
mov
imull
pop
mov
lock
add
rolb
xchg
les
outsl
ja
je
insl
ret
mov
ds
adc
pop
mov
data16
push
inc
lret
pushf
xchg
sbb
and
adc
push
and
jno
sti
and
stc
inc
push
xor
loopne
dec
nop
cmp
scas
incl
push
cltd
aas
xchg
test
js
jnp
sub
mov
and
ret
mov
lcall
jmp
xchg
cmp
bound
das
mov
pop
ret
shl
hlt
dec
push
pop
out
scas
out
xor
std
dec
pop
bound
mov
ljmp
push
pop
movsl
jne
insb
repz
test
fdivrl
push
sbb
in
mov
call
jle
mov
inc
loope
mov
pop
shl
rcrb
jmp
mov
inc
xor
popa
mov
sbbb
sub
jo
jge
roll
cmp
enter
mov
jae
jno
std
jo
or
and
int
xor
std
inc
lret
xchg
lret
ja
mov
mov
aad
outsl
sbb
inc
push
add
inc
mov
inc
jmp
ret
imul
push
sbb
sub
cwtl
lods
and
mov
sbb
sbb
and
and
xchg
mov
or
stos
and
ja
mov
lods
adc
jno
add
ret
push
add
dec
push
or
mov
mov
lahf
gs
or
notl
rclb
hlt
inc
out
rcl
and
jmp
movsl
or
aas
mov
jbe
iret
dec
mov
ret
push
daa
inc
loop
daa
jle
jo
test
sbb
jnp
insb
gs
shl
jb
rorb
dec
in
sahf
push
leave
push
and
lds
popf
or
adc
or
dec
aam
shlb
adc
data16
pop
daa
dec
add
cmp
add
push
push
sbb
ja
test
enter
push
insb
shrb
and
out
cmp
je
jne
ret
lcall
mov
xchg
xor
mov
and
push
fstpt
inc
cmpl
mov
pop
push
rcrl
ret
imul
fbld
mov
out
lret
jns
mov
je
sub
stos
push
pcmpeqd
cld
out
and
repz
loopne
test
out
sub
add
add
jae
xchg
mov
sbb
jb
xor
jo
fsubrp
int3
inc
jle
scas
push
add
cltd
pop
pop
jge
mov
aam
cs
int3
pop
addb
or
stc
cwtl
dec
cmp
mov
pop
mov
cmp
and
pop
movl
mov
mov
clc
and
add
or
push
add
xchg
out
inc
xor
rcrl
push
imul
add
cmp
cmp
sbb
pop
dec
xor
mov
jge
jae
pop
inc
stos
jns
sbb
jecxz
or
clc
les
fsubrl
and
sub
lods
mov
cmc
frstor
sbb
or
pushf
out
jg
pop
loope
jge
sti
inc
movsb
movsl
add
stos
cmp
ja
cmp
xor
enter
and
mov
dec
pop
fadds
pop
xor
jmp
push
add
sub
dec
cld
pusha
and
sub
inc
or
xor
dec
mov
mov
shrl
out
pushf
les
pop
pop
xchg
repz
popf
push
pop
inc
int3
dec
lcall
andl
mov
je
test
and
jecxz
push
mov
xor
pop
aaa
xor
adc
xchg
arpl
sbb
repnz
cmp
cmp
js
mov
std
mov
mov
je
push
aas
lock
mov
int3
jae
std
sbb
roll
data16
xchg
shrb
pushf
bound
leave
push
in
xor
movb
ret
rcll
xlat
ficompl
jge
xchg
mov
jo
fldcw
imul
fbstp
adc
jo
jae
mov
imul
sbb
push
jbe
pop
add
in
aaa
or
inc
jl
data16
aaa
jo
fldl
mov
int3
cwtl
test
sahf
fildll
cwtl
shll
inc
ljmp
test
mov
push
adc
push
daa
jo
stos
loope
pusha
or
sub
in
daa
ret
fs
sub
lods
in
in
mov
or
std
aaa
inc
mov
das
mov
out
les
rcrb
in
lret
lret
xchg
lea
xlat
dec
push
in
mov
xor
lahf
andb
jae
outsb
cmc
js
cs
or
mov
scas
mov
scas
sbb
and
out
dec
ss
in
dec
fdivs
or
pop
dec
sbb
cmp
push
lahf
push
or
cmovnp
push
mov
mov
mov
mov
lods
jns
shll
jno
shr
js
insb
sbb
cmp
cmpsb
in
ja
in
or
out
mov
scas
arpl
mov
add
fbstp
cmp
faddl
or
js
jge
mov
pand
test
push
jle
inc
sbb
sbb
add
incl
jbe
mov
inc
cltd
jo
add
sarl
out
ja
faddl
mov
rcll
pop
push
xchg
or
jge
mov
imul
in
scas
mov
jg
arpl
in
inc
stos
xor
popf
lea
clc
xchg
mov
rclb
fcomp
mov
in
pop
xor
inc
push
pop
jmp
adc
push
lods
testb
sbb
data16
clc
sub
mov
in
scas
stc
aad
push
mov
xor
mov
insl
rclb
push
mov
loop
outsl
pop
xchg
aaa
das
or
pusha
or
popf
mov
stc
sbbl
sbb
mov
and
dec
pop
sub
cmp
shrb
or
test
aam
stos
inc
pop
ljmp
into
out
jbe
fildll
add
shrl
adc
sub
cmpl
pop
xor
pop
jg
push
movsl
jg
das
int
nop
mov
bound
or
ljmp
add
sbb
mov
into
mov
adc
test
dec
inc
mov
test
gs
test
movsb
std
test
cmc
inc
inc
scas
xchg
inc
xchg
sbb
mov
outsb
ss
xor
xchg
subb
mov
movsb
dec
shlw
das
iret
ss
fdivr
cltd
loope
in
shll
and
std
cmp
out
jge
pushf
cwtl
cmc
pop
dec
out
or
push
test
sahf
lea
mov
cmp
dec
fs
rcl
xchg
inc
shrl
dec
xlat
push
lcall
adc
out
rolb
jmp
loopne
lock
loope
fadds
cltd
pop
fists
shrl
cmp
jns
popa
test
cmp
cmp
addr16
or
mov
inc
mov
scas
xlat
add
xchg
mov
in
popf
and
sbb
dec
sbb
rcrl
lahf
es
jae
sub
dec
or
iret
xchg
xchg
lods
pop
mov
repnz
and
es
xadd
or
mov
inc
addr16
in
insl
sbb
fildl
inc
je
mov
inc
lock
cmp
dec
dec
mov
fstl
mov
test
jge
movsb
cmp
loope
js
dec
xchg
jo
in
stc
repnz
repnz
pop
hlt
sbb
inc
xor
rcrb
inc
fisubrl
sbb
movsl
dec
or
int3
out
mov
pop
sbb
push
cmp
call
iret
loope
pop
movsb
jecxz
lds
shrb
mov
mov
daa
test
cmp
dec
popf
popf
fstps
or
test
mov
aam
mov
push
add
inc
addb
imul
fwait
sti
dec
mov
dec
clc
pop
ret
mov
cmp
ret
lcall
stc
xor
ja
insl
fucomi
aam
sbb
xorl
mov
pop
loope
mov
dec
xchg
sub
out
loop
js
in
cld
faddp
rcrl
js
test
adc
xchg
push
rcrl
out
test
mov
push
pop
rcrb
sbb
pop
imul
mov
scas
addr16
mov
and
mov
mov
mov
cwtl
das
gs
mov
cmp
je
les
sbb
mov
xchg
mov
xor
and
sbb
dec
cld
sbb
insb
in
int
pop
jbe
pop
push
int
dec
lahf
ret
xchg
clc
fwait
mov
add
sub
jns
mov
adc
pop
mov
mov
ret
out
cmc
mov
adc
jae
push
in
repz
jecxz
jbe
int3
mov
fdivrl
dec
std
fisubl
jmp
fstl
sub
inc
mov
data16
push
pop
push
sbb
loopne
loop
stc
cmc
incl
sub
jae
fisubrl
mov
jmp
test
outsb
pusha
cmc
mov
cld
iret
cs
jmp
dec
sub
pop
mov
push
pop
cmp
lcall
mov
mov
mov
push
in
call
jp
mov
mov
mov
loop
imul
xor
add
pop
insl
sub
lgs
ja
neg
loope
sub
iret
or
int3
sub
das
sub
mov
sub
fiadds
or
notb
pop
movsb
aam
mov
sub
fidivs
andb
pop
mov
punpckldq
stc
rclb
jno
dec
adc
roll
ja
add
xchg
jb
cltd
les
pop
movsl
push
push
dec
lock
rcrl
fmul
cmpsl
mov
dec
mov
int
sarl
das
out
push
mov
cmp
xor
test
ljmp
fmuls
incb
jg
or
cmp
insb
js
arpl
repz
jae
inc
stos
popa
add
and
pop
cmp
or
or
es
flds
or
cmp
mov
fwait
and
mov
jle
insb
cwtl
js
cmp
adc
shl
pop
and
fidivs
clc
mov
dec
sbb
mov
push
in
push
in
lret
adc
xchg
mov
adc
out
dec
fistpl
ret
jg
pop
mov
adc
jg
mov
ss
xchg
call
ja
mov
jo
test
or
adc
into
jle
jecxz
xor
mov
mov
lea
in
xorb
pop
add
xchg
enter
cmp
adc
inc
shlb
bound
movsb
xchg
stc
inc
push
dec
bound
int
mov
movsl
push
inc
jle
jo
adc
mov
test
push
orb
pusha
inc
and
sbbl
xor
push
fsubrl
xchg
xor
sub
fwait
push
cmpsl
mov
cmp
xor
mov
jge
xchg
sarb
pop
test
xor
sub
aas
iret
int3
sbbb
fwait
cltd
dec
sbb
push
enter
xchg
icebp
jge
divl
arpl
scas
ret
and
popf
xlat
fcoml
jo
push
add
adc
stos
add
repnz
mov
clc
sbb
loop
or
je
pop
movsb
mov
inc
sti
ss
sbb
sub
lahf
scas
jp
je
cmp
sub
cmp
and
xlat
enter
pop
gs
popf
jo
lods
das
idivl
mov
test
mov
push
lret
jne
dec
int
es
lods
pop
fcompp
xchg
ja
xor
adc
add
pop
arpl
fs
mov
enter
ds
sbb
inc
mov
cmpsl
sbb
mov
scas
cmp
ja
sbb
sbb
xor
or
dec
push
imul
ja
mov
inc
lds
sub
jmp
xchg
jg
imul
roll
xchg
fildll
stc
sbb
push
or
call
inc
xchg
jmp
or
xor
jne
mov
insb
pusha
sub
popf
xor
lret
push
loope
push
and
mov
or
out
test
mov
adc
jmp
or
les
enter
pop
rcll
jae
fisubrl
nop
push
ljmp
mov
xlat
xchg
shl
mov
adc
or
sbb
std
mov
pop
adc
in
outsb
mov
icebp
cmpb
mov
jge
lock
dec
cmp
js
dec
scas
and
lds
or
mov
and
test
sub
cmp
mov
cli
xchg
jle
gs
outsl
ret
mov
xchg
nopl
fiadds
pop
js
fwait
aaa
roll
out
shr
inc
jae
cld
rcrb
js
movsl
mov
push
mov
inc
fstpt
pop
pop
scas
lahf
std
mov
sti
addr16
mov
jns
or
jb
pop
xchg
push
push
arpl
filds
lods
mov
dec
sarb
or
jge
gs
sbb
aaa
xor
mov
insl
mov
stc
inc
mov
clc
ffreep
stc
dec
xor
cli
sub
inc
ret
stos
jge
and
loope
and
dec
rorb
push
int
sbb
insb
cmp
cmc
push
add
mov
jecxz
fldl
inc
and
mov
shl
inc
push
or
ja
cmc
pop
in
div
mov
aaa
pop
icebp
insb
push
adc
cld
xchg
cmp
xchg
hlt
cmc
mov
dec
int3
imulb
inc
pop
int3
popa
pop
or
das
insl
daa
sbb
cmp
add
icebp
imul
mov
daa
test
jno
mov
jno
test
sub
mov
cmc
mov
xor
xor
sub
repz
sub
pop
scas
dec
and
movl
in
stos
ss
addr16
in
xchg
shr
les
dec
aam
xlat
shll
adc
cs
dec
xor
mov
jg
dec
xchg
xchg
les
xchg
or
mov
jl
lret
shlb
loope
dec
or
pusha
out
push
mov
lds
jecxz
hlt
cltd
in
sub
xchg
cwtd
cmp
test
xchg
adc
jne
stc
xlat
mov
push
and
ret
jb
outsb
imul
add
fdivl
idiv
test
push
lcall
dec
stos
jnp
stos
cs
xorl
xlat
inc
cmp
imul
mov
inc
into
add
cmpsb
orl
dec
inc
mov
lea
push
push
inc
cmp
pusha
cmpb
pop
xchg
push
in
sbb
mov
sub
fucomp
pop
and
test
mov
int3
inc
shlb
dec
loopne
or
cltd
push
enter
cld
pop
jno
push
mov
addr16
lods
xor
popa
cli
jb
iret
add
inc
mov
into
and
in
sbb
mov
aam
pop
and
aas
cmpsb
mov
jg
aad
push
int3
je
ret
in
xchg
mov
int3
push
fdiv
ficompl
aad
cld
nop
add
cli
or
or
cmp
loopne
lret
test
xchg
mov
push
sarb
pusha
psubusb
mov
add
push
fcoms
aad
jno
or
imul
add
push
mov
cmp
sbb
push
cltd
int
xchg
rcrl
or
cmp
imul
das
mov
sbb
adc
mov
loopne
popl
xchg
push
push
xorl
add
push
xchg
lret
js
int3
jg
mov
mov
adc
data16
popa
pop
fldt
or
inc
mov
stc
sub
out
imul
lea
fstps
mov
je
lahf
add
js
jns
adc
pop
xchg
ret
mov
dec
nop
mov
cld
sub
mov
push
or
rep
xor
sbbb
mov
lods
or
or
repnz
sbb
sbb
and
bnd
and
cmpsb
sti
dec
jbe
pushf
mov
xchg
scas
xchg
mov
ret
loopne
lods
test
int3
das
xor
xchg
dec
xlat
clc
mov
jo
cld
cmpsl
movq
push
int3
xor
lds
push
or
and
push
les
mov
insl
out
ja
notb
pusha
xor
aam
dec
add
push
mov
push
cs
mov
insl
scas
pop
or
icebp
xlat
cmpsb
dec
lods
xchg
bound
fs
sub
pop
hlt
jb
xchg
lds
fs
les
test
fildll
loopne
inc
dec
lea
push
fmuls
jg
mov
xchg
xor
out
pop
insl
leave
mov
mov
lret
xor
mov
mov
leave
xlat
ja
fisttpll
lds
fld
sub
repz
cmp
ret
and
cld
add
add
out
pusha
inc
mov
or
data16
push
pushf
insb
dec
int3
jb
lea
stos
dec
or
imul
lea
lcall
loop
mov
sbb
jecxz
sahf
jmp
adcb
push
test
push
mov
fsub
add
mov
imul
adc
data16
adc
fs
test
dec
outsl
or
adc
dec
pop
in
sbb
sub
pop
xchg
mov
cmp
fists
imul
jmp
iret
shll
xorb
test
ret
mov
sub
cmp
pop
pop
mov
das
mov
jge
sbb
xchg
cltd
dec
into
ja
mov
dec
push
and
mov
mov
les
pop
lret
fwait
mov
das
jmp
aam
adc
inc
cltd
pop
aad
nop
mov
mov
dec
call
inc
stos
js
ss
pop
or
clc
xchg
decb
push
sbb
ja
mov
adcl
mov
movl
add
addl
rorl
sbb
or
addr16
arpl
je
xchg
je
pusha
les
mov
pop
mov
xor
xchg
test
push
xchg
mov
fldenv
add
mov
cmp
sub
cli
or
insb
shll
es
jp
and
lcall
std
movb
jecxz
sub
andl
enter
hlt
dec
lock
push
lcall
inc
test
jl
lret
push
shll
nop
fs
pop
test
movsb
mov
cmp
jg
popa
mov
mov
adc
inc
mov
mov
or
sub
int3
pop
into
mov
inc
inc
gs
mov
sbbl
jle
fs
push
lahf
mov
or
xchg
addr16
out
push
lcall
int
aaa
mov
add
adc
push
mov
mov
lret
insb
adc
fisubrl
mov
lret
xchg
jecxz
mov
push
cli
test
jg
out
lock
push
imul
cmp
push
and
and
in
ja
pop
clc
mov
lods
dec
mov
dec
or
jo
xchg
push
nop
mov
xor
jge
adc
sbb
and
test
incb
mov
test
pop
jno
xor
std
rcl
jle
loop
inc
test
call
mov
dec
push
jne
ror
lods
out
sbb
pop
push
rorb
fisubs
adc
mov
int
jl
imul
lahf
push
gs
cltd
jb
scas
adc
lock
mov
rclb
enter
shrb
mov
lret
je
bound
cmp
outsl
inc
add
inc
cld
popa
fsubrs
inc
lcall
push
xorl
mov
jl
bnd
scas
inc
stc
aaa
mov
jmp
fcom
xchg
sub
ljmp
dec
outsb
inc
aam
imul
not
add
out
sbb
xor
inc
adc
xchg
pop
mov
addr16
arpl
dec
scas
xor
cmovno
enter
fildl
adcl
cmp
or
mov
je
xchg
andb
jo
mov
js
fdivrs
rcrb
mov
inc
icebp
loope
adc
cmpsl
scas
sbb
push
pop
sbb
inc
hlt
inc
lcall
sub
cld
dec
bound
cmpsb
ret
dec
adc
aam
pop
fimull
cmp
mov
jno
pop
pusha
rorb
addr16
cmp
add
into
dec
gs
aaa
jp
std
ret
sub
jae
xor
add
sbb
sbb
test
adc
sub
stos
aad
stos
fcomps
jae
pop
jne
mov
xchg
pop
or
pushf
punpckhdq
fwait
push
cld
pop
lods
jo
cmp
testb
mov
cld
test
call
js
xor
kmovb
push
das
ljmp
xchg
scas
ja
push
xchg
xor
popa
xchg
cs
fmulp
jb
pop
cli
aas
and
mov
jmp
cmp
ds
pop
pop
ss
lock
or
xchg
mov
test
and
mov
popa
jo
adc
fldl
xchg
fstl
lods
xor
sbb
dec
frstor
ret
add
push
dec
add
lahf
ret
jle
incb
xchg
xchg
jecxz
xor
lock
aaa
push
lea
orb
inc
xchg
jb
aas
xor
out
insl
popa
inc
mov
dec
mov
rcrl
shll
push
lock
insb
notl
repz
negb
pop
ja
comiss
pop
rcl
pop
xlat
outsl
stos
jg
xlat
fists
outsb
mov
sbb
into
add
fsubs
out
jge
xor
negl
int
xchg
xchg
mov
mov
mov
mov
sub
insl
enter
adc
dec
or
push
sbb
js
xlat
popa
leave
mov
sbb
shl
shlb
leave
int3
mov
pop
xlat
hlt
cmpl
jmp
sub
mov
push
or
ret
add
rcrb
into
inc
mov
mov
and
icebp
cmp
inc
push
mov
test
mov
cs
or
ss
int3
sbb
ret
in
mov
mov
fs
aam
shl
lahf
adc
call
popa
popf
mov
cmp
test
sub
and
mov
cmpsl
das
loopne
sti
loope
test
or
jns
mov
fcos
in
faddl
push
daa
test
in
jmp
mov
cmpsb
pminsw
and
out
bound
inc
pop
jecxz
gs
adc
out
xchg
sub
push
inc
or
inc
xchg
repz
fsubs
adc
push
jg
out
cld
lret
cli
sub
pop
sti
adc
rclb
outsl
outsb
xchg
das
pop
loope
dec
popf
cli
repnz
pop
fsub
push
jo
jnp
subl
push
loopne
out
movsl
pop
xor
jp
push
sub
adc
adcb
push
cmp
pop
jle
pop
push
jp
lods
or
inc
aad
jae
xor
pop
outsb
jge
loopne
insb
sub
orl
shlb
cmpsl
dec
sbb
pop
jns
daa
loop
orl
and
mov
mov
xor
cmpsl
aaa
sub
mov
dec
push
insl
push
fnstenv
in
imul
lods
jne
cmp
fs
lcall
fbstp
and
sub
jmp
arpl
cmpsb
jl
cli
insb
push
cmp
rcll
js
ss
sbb
out
dec
xor
xor
mov
add
mov
sbb
cmp
popl
aad
sbb
movb
movsl
cmp
mov
mov
xor
xor
adc
jbe
adc
lcall
xor
xor
sub
push
jge
inc
fnstsw
cmp
in
cmc
jb
out
mov
xlat
sub
out
dec
les
and
ret
xor
dec
cmp
push
mov
push
lahf
cwtl
sbb
insb
xchg
xor
std
aaa
mov
int
out
jnp
cmp
mov
sub
pop
inc
push
jns
outsb
cmc
fistpl
std
lock
aas
adc
xor
jp
stos
daa
sbb
xor
jbe
lea
outsb
adc
dec
jmp
xchg
xchg
cmpsb
adc
into
push
or
outsl
mov
or
inc
add
lock
pop
pop
push
mov
ds
hlt
jp
in
push
notl
stos
gs
jne
in
mov
addb
fdivr
dec
and
mov
jb
mov
mov
outsb
in
shll
lahf
cld
add
xor
loope
jb
jp
and
fcmovnbe
dec
and
xchg
stos
popf
pop
ljmp
mov
jns
mov
push
loope
jmp
enter
int3
cmpl
insl
nop
loope
icebp
push
scas
cmp
fsts
cmp
xlat
cmp
sub
adc
lock
adc
sahf
int3
push
and
push
inc
mov
cmp
nop
push
jbe
push
or
dec
inc
inc
pusha
and
cld
daa
add
jecxz
push
cmpsb
dec
int3
fstps
push
mov
fcmovu
notb
gs
xchg
jno
imul
push
mov
mov
add
loope
addr16
aam
ret
ss
cmp
loop
movsl
adc
loopne
mov
push
add
mov
jmp
call
lea
mov
jmp
cmpl
out
scas
leave
into
adcl
mov
dec
mov
out
mov
rcll
sbb
cs
push
imul
cmp
mov
mov
jecxz
dec
add
jp
in
and
add
lret
sub
or
push
cmp
push
ljmp
out
inc
mov
jae
mov
pop
pushf
outsl
xchg
mov
fnstcw
mov
mov
std
inc
cld
ljmp
ds
xchg
pop
fucomip
test
clc
inc
mov
iret
xchg
cmp
test
sbb
dec
orl
movsb
and
and
lds
inc
repz
clc
mov
jns
xor
test
stos
jnp
pop
cld
add
mov
iret
xchg
out
pop
in
or
or
sub
dec
xchg
xchg
cmp
xchg
mov
popf
enter
lea
fisttpll
sbb
mov
dec
push
inc
inc
push
adc
mov
mov
xchg
pop
jmp
std
std
and
push
lret
push
mov
and
dec
mov
adc
pop
xchg
and
test
in
push
fstpl
jne
dec
cli
mov
mov
push
int
mov
cmp
push
movsb
in
lret
lret
mov
dec
xor
adc
dec
cmpsb
stos
jno
pop
mov
mov
incb
sbb
cwtl
ret
pop
fwait
movsb
icebp
loopne
icebp
dec
xor
ss
punpcklbw
insb
jle
lds
push
das
leave
jb
outsl
mov
stc
in
jl
xor
lret
stc
pusha
jns
je
pushf
hlt
test
sub
add
push
imul
cmpsl
xchg
inc
cmp
stc
ja
push
mov
mov
je
divb
in
das
jne
xor
lahf
mov
add
in
enter
movsb
lock
and
and
xchg
stc
jecxz
dec
popl
addb
push
adc
push
pop
cmp
lcall
enter
inc
and
mov
aas
sbb
test
sub
or
mov
cmpl
and
fisubrs
loope
pop
leave
lcall
jo
lds
pop
lods
or
cld
xchg
outsl
jle
roll
rorl
insb
popf
into
fistl
push
adcl
add
pop
ret
jl
or
dec
add
fimuls
shl
test
ja
mov
mov
not
insl
mov
mov
les
ja
ds
cmp
or
frstor
nop
pop
shlb
xor
icebp
push
arpl
ljmp
es
push
inc
popf
xor
xor
push
in
or
mov
lods
xlat
jbe
cs
or
lahf
inc
or
imul
inc
rcrb
cmc
scas
sbb
sub
push
xchg
call
hlt
inc
loopne
jecxz
mov
push
maxps
inc
cmp
jecxz
pushf
jle
inc
or
pusha
add
stc
out
es
and
ja
daa
pop
dec
mov
and
mov
xlat
fsubrs
lcall
sub
and
cmp
inc
xchg
iret
xchg
hlt
lods
call
xchg
jp
addr16
sub
in
negb
jne
out
or
or
jnp
inc
sub
pop
xor
cmpb
jnp
and
pop
push
popa
push
rcr
and
mov
add
and
lret
mov
imul
out
sarl
jnp
andb
push
mov
insl
pop
xor
mov
and
xor
gs
push
nop
mov
aaa
sbb
jmp
dec
xchg
sub
mov
sub
dec
sbb
iret
ds
dec
insl
std
cmc
cmp
mov
mov
jmp
fcmove
out
aam
aas
xchg
mov
out
or
sub
adc
incl
push
mulb
es
mov
jnp
or
ffreep
sbb
jo
mov
push
xchg
jle
add
call
test
mov
push
lret
pop
iret
bound
out
mov
xchg
lock
push
inc
out
fs
dec
mov
cs
adc
inc
push
rcl
ja
xchg
xor
and
mov
fisubl
cmpsl
aas
les
push
scas
sti
movsb
stos
cli
ret
xchg
add
and
inc
sub
enter
add
scas
outsb
cmp
or
xor
jmp
jp
pop
in
daa
pop
pop
mov
jns
jmp
or
cld
mov
cmp
xor
xchg
lret
leave
inc
mov
iret
fstpl
push
fs
mov
stc
or
aas
pop
icebp
subb
xchg
int3
ja,pt
jp
sti
mov
inc
lods
stc
into
xchg
test
in
jae
stos
adc
jno,pn
push
xchg
cs
addr16
dec
push
pop
repz
mov
mov
push
lret
mov
sbb
mov
xchg
loopne
addb
xchg
mov
pop
adc
mov
test
std
mov
pop
xor
fisubrl
pop
icebp
fnstcw
dec
pop
pop
mov
ret
sbb
in
into
call
movsl
xchg
mov
popa
jb
andb
jo
or
lret
push
inc
mov
bound
ret
pusha
test
fucomip
mov
in
push
pop
push
mov
cmovo
jmp
and
js
add
or
dec
push
sub
popa
push
lahf
pop
or
ljmp
push
mov
xchg
add
jle
cld
mov
add
icebp
ja
and
and
icebp
push
cmpsl
cmc
ljmp
xchg
or
insb
mov
js
mov
cmp
test
arpl
loopne
test
sub
jg
pusha
out
cmc
nop
lret
mov
push
add
xchg
pop
iret
cs
pop
roll
sub
mov
mov
enter
into
jno
ret
shr
push
inc
nop
popa
adc
inc
mov
adc
test
mov
ja
gs
out
and
inc
mov
mov
xchg
jnp
loopne
cmp
cld
loop
call
xchg
aad
xorb
mov
js
loopne
inc
jbe
dec
inc
jae
sub
lahf
cmp
xor
test
dec
push
mov
mov
imul
pop
pushf
das
pop
out
xchg
int3
dec
and
mov
sbb
mov
cltd
loope
jge
rdpmc
xor
pop
and
mov
mov
sbbl
mov
stos
xor
out
and
pop
aas
or
mov
mov
or
add
jnp
cltd
sub
std
mov
mov
std
jno
ds
xor
lret
xor
xor
imul
ret
cltd
shrb
push
adc
jne
dec
in
imul
pop
js
cmc
repz
dec
arpl
dec
cli
sahf
mov
adc
mov
or
outsl
xchg
fcmovbe
or
sbb
dec
or
insl
fcmovnb
les
xchg
pop
pop
imul
lods
mov
stos
andps
loopne
push
cmp
pop
dec
ds
ss
rorb
hlt
push
dec
imulb
shrl
cmp
dec
mov
aad
mov
push
or
cmp
imul
loopne
xor
adc
loop
xchg
xor
fisubl
cli
clc
sti
xchg
inc
test
outsl
and
stc
jne
icebp
inc
int3
mov
cmp
jnp
pop
stos
lcall
ljmp
add
lods
rcrl
push
dec
sbbl
in
xor
and
xorl
mov
std
and
xor
ljmp
aaa
and
stc
pushf
mov
sub
sbb
dec
mov
mov
cmp
mov
jno
in
mov
lret
sahf
mov
and
mov
jl
sub
lcall
cld
mov
lds
jae
mov
pop
insl
mov
xchg
pushf
mov
cmc
cmc
lock
mov
aam
inc
inc
lret
push
mov
adc
jg
mov
rdtsc
dec
mov
sub
outsl
orl
ds
fdivl
ja
sbb
ljmp
repz
and
out
add
out
cli
test
int3
sbb
xlat
sbb
roll
dec
xor
insb
mov
adcb
xchg
add
add
pop
adc
xor
mov
and
std
dec
push
into
pop
sub
mov
xchg
fucomi
iret
mov
pushf
test
push
push
mov
xchg
sahf
shlb
test
fwait
adcl
xchg
ficoml
xor
and
test
cltd
in
cld
mov
sti
rorl
divl
sarl
cli
outsb
xor
enter
xor
mov
adc
rcrl
adc
mov
daa
nop
adc
xchg
fidivs
sub
lret
repnz
stos
stc
adc
int
xchg
push
jne
sbb
bound
int3
mov
jecxz
es
leave
mov
aad
mov
sub
ljmp
mov
and
push
pop
or
daa
sub
sub
cmp
popa
cld
int
cmc
jo
and
mov
cs
jns
lea
mov
lret
push
sub
lahf
mov
addl
jecxz
loope
sbbl
imul
mov
imul
mov
rcll
hlt
pop
add
push
fcompl
bound
jb
or
jae
sub
hlt
ret
mov
mov
pusha
jnp
test
int
xchg
mov
mov
pop
outsl
add
xchg
mov
lods
mov
stos
sbb
cs
int3
dec
mov
sub
lcall
or
push
mov
test
fidivrs
pop
pop
movsb
leave
add
xor
cmp
sub
mov
xchg
push
inc
xor
mov
jo
popf
outsb
mov
aaa
fadds
ret
stos
sbb
add
sti
mov
xchg
out
push
pop
in
xchg
dec
cmpsb
scas
xchg
aad
add
dec
ja
dec
es
adc
jae
and
xchg
scas
jle
aad
xchg
inc
push
movsl
cli
enter
pop
fwait
test
stos
sbb
out
aam
sahf
jg
sub
sub
sbb
push
pusha
mov
push
adc
mov
aam
mov
sub
push
cli
insl
or
fisubl
xor
adc
mov
loopne
fdivs
pop
push
sub
out
fucomip
inc
dec
imul
sbb
subl
lret
stos
sbb
call
aam
rolb
gs
xchg
push
mov
ja
and
mov
int
les
lahf
pusha
repz
add
jns
xor
xchg
mov
xchg
lret
jb
cmp
nop
mov
lock
inc
cs
imull
or
sbb
je
test
pop
adc
out
jecxz
test
sub
fldl2e
mov
dec
dec
mov
lods
jg
lret
cmp
inc
pop
jp
test
nop
mov
and
out
mov
push
mov
dec
push
and
test
shlb
lods
sbb
dec
lock
mov
dec
imul
outsb
push
inc
push
outsb
inc
call
es
jl
clc
adc
negl
push
popa
in
xor
icebp
adcl
sub
mov
int
hlt
jns
xor
in
data16
push
call
ss
cmp
lahf
pop
in
clc
lock
mov
add
pop
popf
sub
mov
loope
lods
mov
push
mov
pushf
and
mov
rorb
or
sbb
inc
inc
dec
or
hlt
out
mov
inc
cmp
or
sbb
movsl
stos
adc
sahf
xchg
mov
adc
xchg
fldt
shr
lock
add
sub
adc
repz
iret
repnz
lcall
lahf
sbb
sub
cmp
add
add
lods
sbb
lret
mov
or
clc
cmc
popf
shr
fsubr
notb
pop
das
ret
adc
jle
rorb
inc
fs
mov
nop
aas
pop
add
dec
testb
repnz
addb
jg
inc
test
cmp
push
pushf
cld
lods
dec
lahf
push
and
lret
pop
xor
add
xchg
test
lds
test
mov
inc
pop
clc
jg
std
addl
sbb
inc
loop
mov
lods
adc
lret
aad
jg
ret
or
rorb
mov
aam
push
das
and
es
mov
xor
inc
pop
std
sub
hlt
or
fstp
jecxz
push
pop
out
sub
loopne
fs
or
push
movsb
inc
mov
mov
fstl
decl
jnp
xor
or
xchg
jae
push
aad
cmpsb
rolb
clc
cmp
mov
mov
pop
imulb
test
call
clc
cltd
insl
and
cs
cltd
imul
jmp
gs
std
das
xor
push
hlt
sbb
xchg
in
jae
jmp
fs
adc
mov
test
push
sbb
cmpsb
dec
imul
pop
test
jb
jnp
aam
outsb
cmpsl
iret
scas
movsb
xor
inc
xorl
cmp
lahf
sub
mov
sbb
movsl
inc
mov
imul
stos
adc
sti
sbb
push
inc
xchg
das
pop
push
mov
arpl
test
inc
lods
cmp
insl
add
and
sti
xlat
in
rcr
ficoms
lahf
jae
dec
aas
mov
mov
js
data16
enter
push
dec
addb
cmpb
dec
sbb
into
push
or
mov
in
push
insb
hlt
lret
xchg
in
sub
out
jg
lock
xchg
and
jg
push
sahf
sti
push
xlat
lcall
adc
jbe
adc
add
xor
cmpl
inc
pop
insl
add
stc
dec
orb
push
jl
shl
adc
inc
mov
cwtl
repnz
sub
or
imul
sbb
sbb
or
std
addps
jmp
mov
sub
mov
lret
je
lret
inc
cmp
loop
xchg
aam
rcll
lods
push
nop
cmp
mov
add
lahf
jle
xchg
pop
std
pop
sahf
add
movsb
call
je
jg
or
inc
jno
cli
jno
repz
jns
mov
rcrl
aam
adc
out
test
imul
jnp
mull
lods
jbe
push
pop
andb
pop
xor
repz
mov
cwtl
xor
repnz
mov
test
jl
push
popf
shrl
ljmp
notb
jecxz
sbb
shlb
sbb
insl
ss
shrb
cltd
inc
fnstsw
cltd
pop
movsb
inc
es
insl
mov
xor
and
adc
shll
ss
scas
cmp
dec
push
mov
loope
mov
lea
inc
inc
mov
inc
and
push
out
into
test
sbb
test
xor
test
cmp
loopw
fwait
lret
jmp
into
inc
shlb
lea
in
cli
jge
and
sbb
fwait
enter
imull
aas
inc
cltd
sub
push
aam
repz
jle
fstps
js
sub
push
jmp
fstps
rcl
std
push
and
mov
rcll
fisubrl
dec
push
gs
in
arpl
push
repnz
mov
mov
dec
pop
fs
aaa
ja
jl
lret
cmp
movsl
enter
fsubp
nop
mov
xorl
imulb
adcb
xchg
push
scas
jno
and
bound
cmc
mov
pushf
enter
push
add
sbb
sbb
popl
dec
stos
mov
lea
fidivs
xchg
mov
xor
std
mov
push
pop
movb
mov
xor
or
aaa
dec
lahf
lods
lahf
dec
insl
sub
ljmp
lea
mov
sahf
fidivl
push
add
mov
pop
popf
mov
insl
js
sub
cwtl
push
sti
inc
imul
pop
icebp
xchg
sbb
lret
insb
jecxz
jg
xchg
inc
jb
jg
jg
rolb
cmp
inc
jo
bound
adcb
das
repz
addr16
out
push
aaa
jle
mov
dec
div
fidivs
inc
push
push
adc
or
aas
pusha
sbb
pusha
fwait
jno
cmp
int
inc
pushf
lock
dec
notl
push
jg
into
leave
shrl
jbe
mov
jnp
xor
push
arpl
out
sub
or
js
paddusw
in
dec
stc
jno
mov
shll
out
aaa
imul
shlb
mov
popl
andl
pusha
jl
inc
pop
or
fs
dec
dec
xchg
add
push
or
in
mov
mov
pop
ljmp
push
adc
dec
inc
outsl
mov
and
lods
je
stos
jecxz
xor
inc
dec
movsl
pop
cmp
sbb
negb
faddp
hlt
sbb
stc
aaa
push
imul
in
cs
mov
call
xor
fimuls
xor
adc
inc
xchg
sub
add
cwtl
iret
push
sub
sub
inc
add
xorl
lods
addr16
sbb
cmp
ss
rclb
inc
jo
xchg
mov
sbb
inc
int3
xchg
inc
adc
cmp
and
gs
insb
cltd
fcmovne
sbb
jle
and
jb
imul
iret
int
hlt
vxorps
jp
ret
les
push
imul
pop
ret
pop
or
jmp
scas
adc
imul
inc
push
mov
cmc
push
stos
les
xchg
jb
mov
fdivs
dec
ror
test
scas
sbb
outsb
and
xor
in
ror
lds
dec
aad
xchg
cs
and
scas
fsubrl
push
jle
sbb
cmp
sub
shrb
lods
inc
lcall
cmc
mov
data16
mov
test
push
dec
cmp
mov
cmp
ds
loopne
stos
sti
aad
out
repnz
sarb
sbb
lcall
mov
mov
lea
popa
js
nop
js
repz
or
jg
icebp
mov
xor
pop
sbb
xor
stc
imul
stos
dec
xchg
xor
leave
clc
fidivrl
pop
pop
xchg
push
mov
cmp
xchg
vpsubsb
mov
clc
mov
cmp
mov
pop
xchg
rcrl
adc
dec
lods
sub
mov
mov
cwtl
mov
das
lret
loope
add
sti
cmp
fs
push
into
clc
stc
xchg
adc
aam
pop
js
rcrl
mov
repz
mov
daa
sbb
xchg
mov
jl
adc
addr16
jecxz
outsl
stc
pop
push
fwait
lahf
dec
push
rcrl
loop
push
or
pusha
push
pop
adcl
xchg
xor
jecxz
leave
nop
or
icebp
test
push
sbb
stc
daa
adc
mov
fisttps
int
mov
jbe
ljmp
pop
std
push
sti
pop
xlat
jno
jge
pop
xor
loop
mov
test
sub
arpl
test
fimuls
loopne
lods
dec
in
flds
pop
nop
jle
mov
push
cmpl
ljmp
sub
insl
xchg
stos
xchg
push
jnp
push
fsubp
std
jmp
xchg
sub
push
or
enter
addb
xchg
fistpl
xlat
pop
out
mov
fidivl
out
xchg
pop
cld
insb
xor
xchg
push
inc
cld
xorb
push
mov
stc
imul
out
sarb
sub
push
dec
push
iret
push
xchg
dec
rcrb
sbb
xchg
add
dec
jl
add
push
sbb
pop
subb
hlt
cmp
outsb
jae
lods
pop
ds
xchg
add
jp
push
xrelease
adc
mov
jge
sbbl
add
popa
arpl
outsl
stos
push
add
ja
mov
jg
fsubrs
sub
cwtl
iret
fstpl
add
fistl
cmpsl
sbb
clc
and
shll
fwait
aas
shr
adcb
push
pop
cmp
andl
lds
arpl
cmpsb
mov
cmp
mov
push
lahf
lds
lea
inc
rorb
fucomi
pop
adc
sub
jo
jmp
xor
sbb
aaa
jmp
push
xlat
int
add
ss
inc
std
pop
jp
push
enter
loope
cltd
inc
cmp
pop
aad
loop
inc
ficoms
idivl
nop
jmp
jb
popa
adc
mov
inc
xor
lcall
hlt
sub
insl
dec
cmpsl
dec
mov
and
sbb
xlat
outsb
xor
hlt
iret
cmp
addl
cli
int3
mov
outsb
movsb
daa
ret
mov
and
mov
jno
jnp
cmp
add
aad
sti
sbb
push
push
shl
adcl
loop
movsb
and
mov
sub
mov
ret
loope
in
ret
xchg
pushl
pop
dec
aaa
cmp
jnp
cwtl
aam
lahf
in
mov
pop
cmpsb
adc
xchg
push
mov
mov
and
call
adcl
cld
cli
lods
push
mov
push
outsl
sub
inc
sub
cmc
pop
popf
and
ret
cmc
sbb
inc
cmp
push
ljmp
mov
popf
repz
xorl
imul
pop
mov
jg
aam
in
adc
negl
stos
into
divps
rcr
xchg
test
shll
sbbl
push
shlb
cmp
popl
jbe
imul
in
push
decl
arpl
test
xor
and
stos
enter
mov
mov
add
divl
lods
std
pop
sahf
mov
cmp
ds
ljmp
adc
push
lods
fisubl
enter
lods
ss
fists
or
mov
test
leave
and
cld
cmc
push
add
adc
call
les
mov
scas
push
fidivs
mov
add
shll
ds
hlt
loop
shll
push
loope
push
in
ret
mov
xlat
movsl
mov
ljmp
lret
mov
xlat
stos
mov
jp
jle
sti
nop
xchg
aas
jge
ret
popa
shlb
loop
push
fidivrl
sub
dec
sbb
repz
xchg
pop
mov
mov
daa
in
mov
enter
xchg
jnp
repz
inc
popa
imul
ljmp
or
sub
xchg
mov
adc
cwtl
jns
lock
inc
les
add
movsb
push
push
popf
pop
xchg
or
mov
mov
fiaddl
jecxz
or
dec
sub
xchg
cmp
jne
fcmove
cs
pop
mov
divl
pop
pop
inc
cmp
std
sti
test
lds
adc
or
ficomps
xor
xchg
jno
int3
cmpsl
push
enter
aam
mov
in
das
dec
pop
cmp
lds
loope
mov
pop
mov
and
xor
add
pop
mov
fildl
pop
cmpsb
std
jle
enter
xchg
repz
ds
fs
add
lahf
fldenv
test
jbe
out
dec
imul
int3
mov
inc
push
dec
outsb
cmp
push
ljmp
das
push
adc
pop
sbb
nop
imul
xor
std
cs
stc
scas
push
cwtl
fsubs
add
mov
stc
int
adc
push
mov
and
inc
sub
js
stos
and
fcmovne
in
mov
pop
out
pop
inc
mov
pop
cmc
sub
sub
inc
addr16
fistpll
xchg
push
jne
mov
pop
xor
aam
loop
test
jmp
mov
push
push
adc
leave
jle
jp
mov
dec
push
btr
jb
dec
cli
ret
ljmp
cmp
jle
adc
js
addr16
mov
xchg
dec
cld
mov
dec
test
shrb
mov
inc
or
jbe
and
cmc
out
out
push
mov
jo
dec
std
in
lret
add
mov
push
stos
pusha
jmp
scas
data16
call
sub
js
decl
std
mov
push
fisubrs
xor
dec
jl
repz
arpl
xor
sti
or
outsb
pop
outsl
fsubs
xchg
shl
inc
ret
out
cld
scas
lds
cmp
dec
into
sub
testb
popa
cld
popf
cli
mov
mov
out
fdivl
pop
dec
cmpsl
mov
mov
pop
xchg
add
mov
mov
in
cmp
popf
mov
or
mov
int3
dec
cmpsl
arpl
cmp
sti
add
mov
jo
ss
fdivl
mov
call
scas
xchg
out
sub
sub
sub
add
mov
mov
mov
xchg
sub
inc
xchg
lds
push
lcall
jb
es
mov
adc
xchg
jnp
jbe
dec
mov
mov
xor
mov
or
and
pop
hlt
pop
inc
lock
adc
ffree
jge
in
lds
test
sahf
lcall
clc
mov
pop
sub
mov
sbb
mov
inc
inc
or
jp
and
xchg
mov
dec
daa
xor
lcall
stc
popf
pop
scas
lret
push
jb
daa
cmp
sbbb
imul
mov
mov
mov
jbe
push
jae
inc
rclb
mov
fdivrs
sub
adc
jnp
hlt
cld
aas
and
lods
cmpsl
sbb
js
push
icebp
dec
sti
pop
stos
mov
mov
add
push
jge
cli
aad
ljmp
sbb
cvtps2pd
inc
and
dec
pop
pop
cmp
mov
jp
mov
nop
add
movsl
mov
hlt
adc
inc
mov
mov
pop
sub
mov
jmp
inc
sub
cmpsb
push
dec
cmp
movsl
jo
add
rcrb
mov
scas
adc
scas
sub
push
sti
push
pushl
sbb
jne
cmp
in
mov
mov
fistpll
cmp
adc
pop
jp
in
cmp
or
addl
int
fcomp
or
repnz
roll
out
mov
cmp
adc
and
mov
in
inc
cmp
int3
push
adcb
mov
xor
addr16
xchg
out
test
pop
movsl
jmp
push
cmp
dec
pop
mov
add
dec
dec
mov
test
sub
push
cs
aaa
jecxz
sub
sbb
ret
jl
or
nop
mov
mov
rcrb
sahf
push
jl
cli
insb
lret
cmp
or
mov
cli
cmp
add
cwtl
daa
sub
cmpb
mov
loop
xchg
out
fcmovnu
lahf
jge
aaa
mov
xor
xor
in
out
icebp
xor
das
test
fidivrl
stos
jmp
xor
cmpsb
pop
push
mov
push
stos
xor
dec
stos
push
lods
adc
pop
and
dec
push
cmp
fs
pop
data16
mov
dec
mov
mov
loope
inc
fnstenv
test
jnp
insb
inc
pop
enter
jbe
rorb
xchg
push
mov
fnstsw
mov
sahf
aam
or
cmp
cmp
push
fs
pop
push
ds
push
fildll
mov
leave
push
mov
in
fdivrs
push
fdivrl
and
sub
fnstsw
ja
mov
imull
jnp
jae
jae
xchg
mov
adc
mov
fmuls
inc
push
mov
pop
imul
sub
aam
xor
dec
pop
lcall
jmp
sub
je
loop
loope
pop
mov
setp
outsl
addr16
fstpl
mov
outsl
mov
nop
add
mov
fdivs
pop
scas
sbb
pop
inc
cmp
xor
rcll
push
lds
not
dec
mov
and
addb
pop
add
mov
std
mov
and
arpl
filds
xor
xchg
push
cmpsl
lea
mov
inc
add
loope
sub
cmpsl
in
movsb
ret
add
arpl
xor
shl
xorl
adc
insl
mov
mov
enter
jnp
sub
mov
push
pop
adc
adc
popa
adc
mov
push
pop
loopne
loop
pop
fisubl
repz
push
add
loope
pusha
lods
orl
popa
adc
mov
or
jnp
cs
push
mov
notb
popf
jl,pn
mov
bound
sub
inc
insl
test
mov
or
mov
dec
mov
mov
jl
and
mov
sbb
outsb
cld
cmp
rcll
subl
mov
mov
lds
dec
xchg
inc
mov
pop
insl
mov
test
xorl
in
scas
hlt
sbbl
arpl
rol
pop
push
fcmovb
lcall
jecxz
les
imul
push
rcrl
mov
push
stc
inc
sti
es
cmp
add
mov
jle
mov
cmp
mov
mov
flds
adc
mov
mov
mov
into
test
testl
es
test
cli
fucom
out
pop
inc
push
test
xchg
and
int
mov
xlat
xchg
fildll
popa
subb
dec
into
pushf
lahf
ficoms
icebp
mov
cmp
xchg
dec
or
dec
mov
push
sbb
sahf
js
sbb
insl
or
jns
inc
js
addr16
rol
push
ss
ret
mov
outsb
popa
or
pop
pop
push
test
scas
push
jbe
xchg
xchg
push
sahf
imul
js
mov
jle
add
or
ret
add
lods
loop
cmpsl
dec
into
mov
lret
pop
xor
jnp
subb
xchg
pop
lock
mov
aas
aas
shlb
dec
ss
add
movsl
call
test
dec
fiadds
imul
push
sub
je
pushf
inc
push
push
xchg
das
scas
cmpsl
xchg
hlt
xor
jo
es
cmc
es
in
sub
jns
sti
pop
ja
push
movsl
fwait
scas
jne
rorb
sub
sub
pop
push
mov
fsubs
sub
jne
js
sub
in
mul
clc
outsb
lcall
xor
out
call
addr16
into
add
pop
loope
cmp
ret
shlb
cld
int
lock
lods
in
pop
nop
hlt
dec
cltd
sti
sub
xor
loop
loope
in
pop
inc
clc
outsb
push
lcall
int
or
fcomps
imulb
aam
popa
xchg
or
add
fdivp
sub
imul
push
cmp
jge
pop
inc
jg
jns
cmpsb
adc
mov
aas
jmp
std
stos
dec
sub
fistps
jno
lods
push
rorl
sbb
mov
dec
fisttps
add
negl
mov
sub
pop
clc
jns
bound
dec
nop
stos
mov
shrl
shll
add
pop
mov
dec
or
jmp
push
xchg
dec
enter
mov
pop
push
out
jl
fnclex
movsl
jae
fiaddl
fwait
test
aam
cmp
jbe
aaa
out
jns
dec
mov
fcompl
daa
xor
cs
adc
push
ret
and
xor
sbb
dec
fmull
adc
cmpsl
nopl
je
and
les
lret
pop
mov
lret
or
rol
dec
mov
lret
lret
pop
js
xchg
xchg
sub
fidivl
cs
iret
push
jmp
adc
xchg
divl
orb
mov
in
xorb
mov
push
in
inc
std
dec
stc
cmp
ss
popa
cmp
fldt
call
out
adc
into
popa
fs
ficoml
pop
stc
jno
cmp
shrb
ret
test
mov
ror
add
jmp
sar
movsl
push
sbb
fwait
inc
lods
push
cwtd
xchg
fstl
push
cmpsb
and
cmpsb
lcall
dec
sbb
mov
js
arpl
loop
shrl
scas
roll
inc
pop
or
mov
dec
push
sarb
lea
jp
and
sub
int3
or
sbb
add
icebp
cmpsl
jno
mov
jno
inc
popa
mov
out
enter
lret
push
push
jnp
sbb
push
or
add
icebp
sub
cmc
or
mov
jno
cmp
dec
stos
in
push
add
es
roll
push
push
mov
enter
mov
inc
inc
lock
rclb
pop
rcll
or
icebp
gs
mov
es
js
cmc
clc
psubd
jb
pop
add
and
pop
adc
fcoml
mov
jb
ja
stc
or
lcall
test
dec
lea
jb
je
loope
jbe
mov
scas
lcall
imul
pusha
inc
pop
cmp
xchg
aas
das
push
popa
fistpl
sbb
and
leave
inc
std
fucom
out
mov
and
lcall
or
shrb
repnz
mov
inc
or
mov
out
adc
cvtdq2ps
adc
arpl
push
mov
fisttpl
sub
out
and
xor
out
mov
mov
mov
cmpsb
lock
sbb
xchg
popf
cmc
pop
andb
inc
add
icebp
mov
jg
mov
pop
mov
mov
std
insl
cmp
les
lock
push
addb
fucomp
lock
mov
fimuls
rcl
xlat
xchg
inc
pop
imul
xor
xchg
insb
and
push
add
rclb
pop
pop
sbb
sbb
std
fcmovu
addb
mov
dec
es
fstp
pop
inc
loop
call
sbb
push
pop
adc
in
fbld
imul
mov
andb
stc
fldt
mov
mov
pusha
xor
jecxz
scas
pop
xor
aaa
imull
cli
outsb
mov
push
out
inc
xor
stos
inc
adc
inc
jno
sbb
xor
call
and
out
jmp
pusha
or
insb
arpl
and
stos
adcl
dec
or
lock
stos
mov
sub
jecxz
jns
out
inc
xorl
sub
in
push
pop
notl
stc
sbb
inc
push
xchg
les
in
cmpsl
cmp
dec
aaa
insb
jno
cmpsl
repnz
or
pop
arpl
add
stos
sub
aam
dec
lea
add
sbb
arpl
enter
fnstenv
fimull
test
int3
and
inc
stos
mov
xchg
jo
subl
and
in
inc
mov
repz
add
jmp
mov
or
mov
popa
sti
sbb
mov
sahf
test
dec
add
mov
or
ret
inc
mov
enter
lahf
push
imul
push
push
test
cld
aad
int
mov
imul
and
jo
xlat
call
xchg
jp
xchg
insl
and
sub
pop
les
xchg
shl
inc
in
or
adc
push
call
adc
fisubrs
push
sub
stos
pop
in
clc
or
xor
out
cmp
push
mov
jl
and
pop
leave
jmp
inc
push
pushf
add
inc
sbb
or
scas
fwait
and
aaa
add
inc
fildl
jnp
xlat
cmp
push
jbe
into
mov
mov
in
pop
sbb
or
adc
cmp
cmp
and
or
int
jg
mov
cmp
adc
pop
mov
mov
in
or
sub
test
and
imul
ret
jno
pop
jns
dec
inc
and
jne
xchg
imul
sub
push
lods
imulb
sti
jne
into
fcmovu
dec
divl
mov
fcompl
pusha
adc
fsubrs
xor
ja
sub
std
fnsave
stos
pusha
or
jg
stc
cmp
lds
imul
xchg
pusha
sbb
cmpsl
in
and
inc
sub
lcall
pushf
jbe
fdivl
dec
loop
out
cmp
pusha
adc
sub
or
push
addb
cld
add
lods
sbb
test
add
pop
push
jmp
cmp
sbb
add
daa
mov
xorl
inc
push
mov
daa
fwait
enter
jns
lahf
test
xchg
movsl
ds
sar
arpl
repnz
adc
ja
into
hlt
lret
ror
xor
sub
mov
mov
add
jne
mov
mov
inc
dec
fwait
xchg
push
test
push
ret
mov
cli
push
xchg
rcll
ret
jae
pop
popa
sub
ror
and
fcmovnbe
sahf
xor
push
loopne
fndisi(8087
xor
push
cmpsb
in
lods
and
cltd
mov
sar
and
adc
fucomi
test
pop
mov
cmp
fimull
out
int3
mov
addr16
add
xorb
jge
adc
scas
imul
pop
pop
dec
dec
mov
enter
lea
add
pushf
data16
xchg
cwtl
xor
pop
mov
sbb
or
add
xchg
stos
sahf
fmull
pushf
iret
mov
sbb
ret
jne
xor
bound
shrb
dec
push
xchg
xchg
add
inc
iret
gs
in
lods
rorl
jmp
int
xor
mov
or
xchg
nop
outsb
add
cmp
test
rcr
bound
incl
mov
stos
adc
call
std
xor
pop
repnz
outsb
mov
xor
xor
cmpsl
sub
aas
sub
fwait
mov
adc
jne
out
fildll
int
or
popf
sub
cmp
or
xchg
or
arpl
mov
or
add
imul
fisubs
push
dec
insb
xor
mov
and
mov
or
sub
ficomps
inc
sub
mov
or
fcmovnbe
cmp
pop
or
iret
test
int3
dec
jno
fwait
jae
jge
fwait
or
rorb
xchg
mulb
push
cmp
push
fs
add
in
stos
test
fwait
jmp
mov
push
mov
xor
xchg
dec
das
addr16
sbb
addr16
or
push
stc
pushf
addr16
jae
add
mov
and
sub
xchg
adc
add
mov
addb
pop
pop
inc
push
scas
push
pop
je
push
adc
push
jg
ss
outsl
mov
pushf
dec
push
cmp
push
push
jmp
and
sub
xlat
scas
dec
popf
xchg
imulb
xchg
push
mov
mov
xchg
dec
pop
xchg
pop
jb
adc
xchg
enter
jmp
or
and
sti
cltd
sbb
sbb
imul
mov
push
xor
pop
and
enter
mov
push
dec
mov
xchg
dec
mov
inc
mov
sti
jmp
scas
push
rorl
pop
mov
sahf
xchg
mov
pop
int3
call
call
lock
pop
cmp
jecxz
jle
cmpsl
lods
inc
mov
rol
les
mov
inc
add
fsubr
lock
data16
mov
mov
mov
mull
cmp
fcomps
push
jle
in
sub
add
jb
fs
into
fdivs
cpuid
xchg
sbb
dec
xchg
pop
or
mov
pushf
aas
test
sti
arpl
inc
push
jne
jecxz
in
push
je
sarb
mov
dec
mov
in
push
icebp
sbb
xor
out
gs
mov
sub
sbb
jo
pop
stos
push
sub
push
pop
sub
mov
aas
jmp
sbb
stc
dec
cmp
nop
or
pop
pcmpgtd
mov
fadd
outsl
mov
xor
adc
and
int
jns
sahf
pusha
dec
pop
movsl
stc
mov
popf
subb
jge
loop
jae
mov
stc
test
ja
mov
movntps
jo
scas
xor
push
xor
cld
cmp
lods
mov
adc
std
outsl
dec
fs
rorl
dec
adc
mov
addr16
int3
outsl
aad
adc
mov
enter
repnz
leave
lcall
jb
cld
adc
xlat
dec
notb
cs
dec
addl
aam
aad
xlat
mov
out
fs
cmpsl
pop
in
jmp
iret
sbb
pop
lahf
sbb
call
fbstp
lea
cwtl
out
push
pop
xor
push
lock
in
mov
jmp
movsl
fsubr
icebp
lods
xchg
mov
in
jne
jae
ficoml
xor
fstpl
subl
dec
cmp
push
sbb
clc
push
mov
es
mov
cs
xchg
sarl
sub
sub
adc
loopne
arpl
js
adc
pop
push
repnz
lods
lret
mov
nop
mov
dec
cmpsb
das
arpl
jecxz
outsb
repz
xchg
adc
sub
inc
fs
test
jno
inc
nop
mov
add
jb
lahf
inc
test
scas
add
movsl
loopne
cmp
inc
jmp
ret
xor
ret
js
push
ror
mov
jmp
mov
hlt
lods
daa
pop
outsl
add
inc
insb
add
out
push
sub
fwait
loope
mov
mov
and
mov
lcall
push
or
dec
jo
or
mov
mov
into
aam
leave
iret
push
mov
repnz
insl
and
push
shr
xchg
mov
push
insb
stc
fbstp
mov
gs
rcrb
fisubrs
xorb
sbb
add
incb
int3
jo
push
scas
dec
out
fs
mov
push
mov
push
or
les
ljmp
cmp
cmp
jb
jmp
int
test
inc
pop
xchg
aam
push
scas
add
mov
in
mov
pop
outsl
repz
pop
cli
jnp
pop
xchg
fwait
and
andb
cmp
leave
push
lret
sbb
mov
jg
xchg
jl
out
jmp
jbe
pusha
test
pop
pusha
mov
and
lock
push
mov
fstps
and
sarb
test
mov
adc
cmp
mov
add
xchg
sbb
push
push
loope
mov
test
pop
sbb
xlat
jae
loop
mov
and
jp
jmp
and
mov
loopne
imul
loop
sub
ss
inc
jno
dec
jp
testl
fsts
decl
push
loope
mov
inc
add
scas
add
ja
push
xchg
jp
rolb
daa
pop
repz
cmp
or
add
add
popa
or
pop
jp,pt
inc
adc
and
sub
das
bnd
cwtl
adc
aad
inc
ljmp
or
int
iret
bound
jno
test
or
push
pop
pop
sbb
or
cmpsb
mov
pop
mov
mov
mov
jl
test
dec
out
int
sbb
stos
mov
push
or
orl
push
ja
pop
sub
les
xor
dec
les
pop
mov
icebp
pop
mov
ret
or
movsb
jl
adc
mov
ret
xchg
js
sbb
push
or
outsl
adc
mov
pop
cmp
pop
movsbl
adc
out
loop
cmp
mov
lcall
xor
nop
clc
dec
sub
mov
inc
les
cltd
mov
pop
add
shll
push
jno
int3
mov
dec
mov
cmp
cmp
sub
das
cmpsb
xor
loop
subb
inc
rclb
lds
flds
loopne
or
in
xor
aaa
xor
popl
loop
mov
push
add
ret
mov
push
setnp
clc
inc
xor
xchg
jno
cmp
and
push
mov
xchg
dec
fistpll
xor
inc
add
enter
pop
mov
jae
in
loop
out
icebp
scas
stc
test
fstp
outsb
aaa
in
lods
popa
mov
mov
mov
cmpsl
mov
into
mov
mov
shlb
arpl
popf
jae
mov
pusha
fstps
stos
jle
xchg
jae
mov
inc
mov
jns
dec
leave
loope
loope
fsubl
fmul
ja
sbbb
hlt
movsb
add
and
scas
cmp
adc
jmp
jge
call
jg,pn
bound
sbb
inc
jns
sbb
lods
stc
pusha
out
inc
sti
bound
push
sub
pop
mov
add
sub
xor
xlat
pushf
xor
popa
aad
into
sbb
movsb
push
sub
ja
push
sub
test
roll
cld
xor
add
push
inc
push
loopne
cmp
inc
js
cmp
push
jnp
dec
pop
insb
bound
rcrl
xchg
inc
push
add
ja
in
dec
cmc
inc
movsl
push
addr16
mov
push
adc
pop
mov
fxch
push
sbb
jmp
dec
pop
inc
add
mov
jmp
mov
dec
push
adc
inc
dec
xor
xlat
push
sub
inc
cmp
je
pop
cltd
nop
xchg
push
hlt
cmp
fmul
or
xor
loope
fwait
sar
pop
xchg
cwtl
ss
xchg
cmp
pop
je
enter
loop
push
inc
das
add
dec
xchg
in
pop
stos
jp
icebp
and
or
pop
inc
add
sahf
shl
and
pop
pushf
test
mov
or
ds
loope
sbb
mov
imul
jns
rclb
pop
jg
lret
pop
hlt
mov
fadds
cmp
jno
int3
jns
lods
lods
icebp
sub
sbb
cmp
or
ret
testb
sbb
push
adc
out
mov
cmp
sub
shll
mov
xchg
cmp
push
xor
xor
bound
jle
push
sub
repz
popa
stos
or
jecxz
outsl
fdivs
popf
xor
inc
cmpsl
mov
jbe
scas
ljmp
rclb
repnz
sub
cmpsl
jno
cmp
add
test
les
inc
add
xchg
mov
addr16
push
lds
outsl
jbe
icebp
push
or
xchg
dec
xor
loope
pop
lock
movsl
add
pop
pop
push
lcall
enter
incl
out
sub
xorl
hlt
pushf
shlb
jg
cmc
pop
push
movsb
insl
or
in
out
push
sub
adc
in
andl
xor
lcall
add
sbb
addl
xchg
arpl
pop
dec
aaa
inc
ljmp
mov
loopne
aas
xchg
cmpsl
cmp
int
sahf
mov
pop
adc
mov
orb
adc
sub
push
mov
push
addb
out
mov
inc
aam
inc
xchg
rclb
out
daa
rcrl
sbb
lret
add
iret
mov
push
outsl
lcall
xchg
jp
or
adc
push
ja
mov
insb
enter
mov
jecxz
mov
ret
push
push
pop
js
or
lds
mov
jbe
enter
shrb
cmpl
mov
pop
arpl
jg
std
push
sub
xchg
and
inc
cmpsl
add
xchg
sarb
xlat
add
xor
hlt
or
subl
push
cmpsb
adc
pop
lahf
push
lods
inc
xchg
cmp
movlps
or
inc
test
jae
sbb
fldl
mov
stc
mov
and
ja
jae
pop
shll
mov
inc
mov
and
pop
imul
jg
ds
mov
loopne
xchg
jg
movsb
cmp
imul
movsl
dec
jecxz
iret
adc
pop
push
je
adcl
adc
idiv
pop
pop
imul
lods
sbb
xchg
cmp
ret
xchg
adc
rcr
jle
xor
fdivrs
out
inc
mov
in
pop
push
sbb
in
scas
pop
jb
rcrb
je,pn
and
mov
es
adc
dec
push
shlb
sub
mov
addr16
jae
fnsave
sahf
gs
in
jae
mov
iret
cmp
mov
xor
ret
bound
push
lcall
xchg
inc
push
mov
rorl
xchg
push
arpl
pop
adc
mov
or
and
sbb
jle
aaa
sbb
and
jl
xor
mov
icebp
loopne
andb
or
dec
nop
and
add
mov
mov
push
sub
mov
pop
xchg
xor
dec
popa
stc
test
cmpsb
test
ljmp
movsl
sub
xchg
mov
std
jo
std
or
icebp
xchg
mov
enter
xchg
push
jmp
mov
mov
xor
inc
inc
push
out
mov
addr16
ja
cmpsb
cltd
ss
sbb
mov
cmp
fwait
mov
fwait
sub
cmp
lret
jmp
dec
push
add
jno
mov
or
lret
or
mov
repz
testl
adc
dec
add
fisttps
mov
and
daa
pop
mov
push
mov
and
xchg
push
faddl
test
andb
enter
add
sbb
fs
fstps
mov
cmc
inc
ljmp
outsl
mov
div
dec
outsb
xchg
mov
cmp
sub
sub
ljmp
scas
stos
cltd
pavgw
xchg
test
cltd
popf
gs
test
sti
notl
pop
in
test
push
mov
cmp
out
cwtl
lret
dec
shrl
sahf
insl
popa
lds
sub
aas
xchg
push
out
decb
adc
inc
cmp
pop
xor
cmc
test
out
adc
cmp
leave
add
mov
xchg
lods
fst
lret
es
inc
mov
repz
xor
jmp
xor
inc
jnp
fs
dec
jbe
lock
loopne
pop
mov
cwtl
mov
aas
mov
lahf
out
loope
std
and
lods
sub
and
xor
jge
add
pop
xor
jne
sub
arpl
clc
xchg
dec
mov
js
cmp
adc
dec
mov
les
sub
sub
test
dec
int3
lock
mov
cmp
daa
xor
xor
cld
les
out
imul
fnstsw
in
cli
cli
clc
lods
cld
mov
das
inc
bound
sub
dec
dec
cmp
adc
nop
hlt
pop
mov
push
ret
ja
jg
fsubr
filds
inc
mov
add
mov
xchg
lahf
cmpsb
adc
int3
sbbl
dec
xchg
out
jae
repz
push
nop
in
pop
adc
sub
adc
clc
mov
popa
fimuls
pop
xchg
and
mov
int
das
adc
in
sbb
popf
lock
fiadds
stc
xchg
loope
mov
insb
pop
inc
jae
ljmp
cmp
je
mov
nop
push
lret
pop
sti
push
cmp
dec
scas
iret
push
int
sbb
adc
addr16
shll
mov
out
cwtl
mov
xor
dec
pop
imul
les
push
leave
mov
adc
es
outsl
pop
xlat
in
or
fldt
ss
sub
or
shll
adc
test
popf
mov
ljmp
mov
jae,pt
out
xorb
jecxz
mov
sbb
cmp
push
inc
dec
sub
add
push
pop
les
push
push
or
clc
sub
add
ds
repnz
jns
push
lret
push
loopne
cmpsb
pop
in
andl
hlt
out
aam
test
sbb
imull
aad
inc
adc
xchg
mov
mov
icebp
iret
loope
mov
repz
arpl
outsl
into
icebp
mov
pop
popa
sub
mul
inc
pop
fsubp
nop
lret
mov
xchg
push
dec
push
insb
dec
pop
sub
mov
ds
push
or
add
pusha
push
loope
imul
mov
repnz
xlat
sub
mov
inc
out
aaa
div
repnz
cmpb
adc
mov
andl
repz
iret
xchg
out
inc
inc
jg
or
out
push
fcoms
stos
lock
jno
in
lods
mov
popf
in
adc
fs
add
xlat
scas
inc
push
arpl
js
nop
inc
int
scas
jmp
pop
push
mul
pop
call
sub
popa
cli
dec
dec
adc
insl
icebp
push
xchg
or
sbb
and
pop
inc
pushf
inc
jecxz
or
jo
push
mov
insb
packssdw
leave
lock
xchg
jno
adc
sub
cmp
mov
fstpt
inc
cmp
inc
fistpll
outsb
sbb
push
popf
sub
punpckhdq
xchg
xchg
jmp
lock
jae
lods
lret
push
push
fistpl
leave
fcmovnu
int
and
mov
aaa
push
mov
mov
jl
ret
jg
in
mov
pop
js
in
lds
rcrb
and
adc
xor
das
test
fstps
imul
inc
xor
jge
jns
stos
xor
mov
cmp
daa
les
das
jne
jo
mov
clc
adc
pop
sub
popa
xor
mov
test
mov
xorl
les
arpl
jg
sub
mov
push
out
add
adc
je
push
cmp
cwtl
scas
mov
cmp
pop
jns
orb
pusha
inc
lds
pop
fbstp
and
mov
imul
rolb
jmp
fists
or
pop
sti
sahf
add
xor
out
shr
jo
popa
inc
subb
cltd
push
test
loop
popf
imul
inc
adc
or
or
pop
and
loope
jns
pop
mov
das
outsl
ret
stos
lret
es
mov
es
aas
dec
test
ja
fxch
outsb
pop
lcall
sahf
cld
fidivs
sti
shll
adc
in
sbb
je
inc
lahf
in
adc
mov
add
xchg
cmp
xlat
mov
pop
aaa
and
cmp
cmp
mov
scas
movsb
mov
fstpl
mov
insb
mov
cmp
cltd
into
sub
stos
stos
sbb
insl
notl
add
add
mov
lock
push
cmp
xchg
fcompl
xchg
out
jmp
inc
lea
mov
jne
jge
adc
jmp
mov
dec
repz
jae
outsb
out
adc
cs
data16
sbb
mov
sub
movsl
gs
inc
jo
mov
push
or
and
fildll
jp
fpatan
in
xor
data16
jbe
ja
lods
idivb
mov
fcmovu
nop
aaa
push
adc
popf
adc
pop
lds
aam
push
mov
cmpb
push
add
lret
lock
sahf
fldcw
call
sbb
inc
cmp
int3
mov
shlb
movsl
xor
dec
xchg
mov
fisttpll
xchg
sbb
inc
mov
sbb
psubusw
pop
mov
sub
mov
mov
sysenter
es
rclb
jle
sbb
or
and
dec
repz
dec
repz
das
sub
add
cmp
out
fs
mov
mov
lcall
lcall
mov
and
jge
test
mov
es
inc
inc
mov
mov
cmp
scas
mov
mov
lret
pop
fistl
jecxz
jecxz
insb
daa
ret
cmpl
dec
mov
lret
imul
mov
mov
jmp
and
inc
popa
adcl
push
stos
mov
xor
mov
lret
inc
lods
jno
loop
inc
mov
into
out
sbb
arpl
out
xor
xchg
test
mov
rolb
loopne
ds
jl
push
inc
jbe
or
pop
jmp
mov
mov
addr16
push
popa
fs
pop
repnz
push
inc
push
jmp
gs
pop
mov
sub
add
push
aaa
insb
pushf
jle
out
ret
dec
aad
lahf
add
push
jp
adc
ret
in
jmp
xor
xchg
mov
add
xchg
cmpsl
cs
jae
cmp
mov
xor
mov
inc
mov
mov
mov
xor
insl
les
fucom
pop
aad
xor
popf
rorl
and
repz
popf
ret
addl
push
cmp
loope
lock
jle
jno
and
add
adc
adc
pop
mov
pop
outsl
or
inc
jnp
js
out
rcl
cmp
or
or
lcall
lds
hlt
mov
cmpsb
mov
mov
jbe
push
aad
fildl
addr16
cmp
xchg
jmp
insl
iret
mov
test
and
aam
sub
mov
dec
sub
test
stos
cmp
xchg
cmp
mov
xchg
inc
repnz
cld
mov
sbb
imull
icebp
pop
mov
ret
int
add
jg
pop
loopne
shlb
movsl
jecxz
mov
jmp
bswap
addb
jae
xor
cmp
pop
fsubl
adc
sub
jb
mov
mov
arpl
xor
das
cmp
lret
sub
shrb
das
or
rcrl
pop
mov
je
mov
jge
repnz
pop
nop
dec
xorb
int
loop
add
xchg
popf
or
mov
add
nop
cmp
mov
data16
sbbb
and
mov
push
cmp
push
popf
mov
jo
jno
clc
jmp
inc
jmp
xor
sahf
insl
sbb
jns
ja
sub
xchg
test
pop
sub
cmp
stc
cmp
pop
xlat
int
jbe
cmp
test
pushf
mov
push
push
imul
mov
cmp
mov
mov
subl
out
fnstcw
lret
stos
repz
adc
das
pop
out
add
or
lret
mov
mov
mov
mov
and
mov
xor
xor
cmc
daa
cmp
xlat
add
and
push
fs
call
jmp
jecxz
jp
lahf
jmp
or
mov
sbb
popa
push
in
mov
mov
mov
ror
mov
dec
imul
mov
fnstsw
xor
cs
adc
ret
lea
jnp
stc
push
lods
ljmp
cmp
out
push
jo
xchg
shrb
lods
dec
jge
jmp
fsubr
nop
xor
loope
rorb
out
adc
sub
push
push
hlt
aaa
jne
ljmp
das
inc
or
push
mov
imul
cmp
std
aam
mov
jmp
dec
arpl
jbe
mov
fwait
cmove
bts
clc
jne
idivl
push
and
orb
xchg
aam
and
jg
and
and
mov
insl
or
movsb
mov
mov
xchg
fmull
sbbl
mov
pop
mov
imul
out
pop
popa
shll
stc
inc
mov
imul
mov
jae
mov
fstps
lods
adcb
add
add
je
inc
sub
xchg
add
std
xchg
fldcw
lds
aaa
fistpll
mov
dec
jge
pop
cld
inc
sub
stos
daa
mov
ret
arpl
cs
jne
popa
or
data16
adc
or
outsb
pop
dec
mov
mov
cmp
out
inc
adc
pop
xchg
ficoms
add
fdiv
enter
mov
pop
jns
jge
xchg
sub
push
pusha
divb
out
mov
mov
adc
cmp
cmpb
mov
popf
lcall
push
stos
sbb
inc
sti
cltd
adc
in
ja
jle
ds
cmpsb
scas
fwait
lahf
fildl
lret
arpl
mov
push
mov
jmp
xor
pop
and
out
scas
lea
push
roll
dec
sub
adc
xchg
int3
xchg
fistpll
pop
jbe
and
mov
roll
mov
pop
xor
daa
in
int3
mov
shrb
xchg
aam
scas
inc
outsb
popa
cmpsl
stos
xor
cmp
xchg
pop
movsb
mov
cmpsb
inc
cmc
test
and
adc
loop
test
sub
mov
lcall
les
out
dec
ret
mov
mov
adc
jmp
xchg
cli
push
pop
enter
in
push
jo
or
nop
sub
pop
fprem
mov
jecxz
iret
dec
mov
sbb
jbe
or
push
sbb
xchg
sbbb
ficomps
jle
dec
insb
jg
push
leave
sahf
lret
fistpl
int3
sub
jno
testb
scas
jg
push
mov
fcmovnb
outsb
cltd
push
shlb
and
insb
inc
daa
repz
mov
subb
push
sbbb
fnstsw
inc
insl
notl
dec
inc
or
or
dec
pmulhuw
cli
xor
push
cmp
adc
jl
ja
mov
gs
in
stos
cltd
dec
mov
push
adc
ror
dec
sbb
mov
dec
mov
mov
add
sbb
cmp
scas
aaa
call
sub
in
test
sub
mov
dec
dec
fisubrl
mov
xor
mov
loop
add
dec
cmp
std
fs
and
rcll
jg
mov
std
mov
movsb
and
orl
pop
out
insb
ficompl
aaa
out
jns
inc
inc
mov
clc
adcl
mov
mov
lret
cmp
xchg
sub
sti
xor
sahf
dec
filds
jae
fwait
or
cmc
aam
addr16
dec
push
mov
pop
mov
sub
xchg
add
cmp
mov
nop
sbb
mov
inc
lods
movsl
fdivs
mov
push
sahf
hlt
push
sbb
adc
popf
leave
cmp
fidivl
adc
in
pop
jb
call
lods
dec
sub
cwtl
or
addr16
push
xor
jns
movsl
pop
pop
inc
jb
jne
inc
xor
xor
fidivrl
mov
fcmovne
aaa
mov
cs
xor
stos
pop
xchg
sbb
ret
repnz
sbb
xchg
and
arpl
sbb
ret
les
jae
push
cmpl
dec
call
lcall
jae
or
cltd
push
mov
pop
call
lcall
mov
popa
cltd
xchg
inc
pop
lahf
inc
rorl
xchg
mov
inc
ret
mov
xchg
cmpsb
daa
sub
movsb
lods
mov
inc
pop
jb
call
sub
lret
lds
cmpsb
jbe
idivl
dec
xchg
movsl
leave
int3
popaw
shrl
xor
pop
or
push
movsb
or
sub
sbb
popa
xchg
pop
pop
jecxz
xor
mov
mov
jno
jne
push
fs
cltd
sarb
mov
aad
pop
das
lock
fisttps
bound
cmpsl
add
xchg
dec
or
mov
mov
cmpsl
or
mov
pop
jno
dec
outsl
cltd
add
loop
push
sbb
push
in
shll
jno
in
jae
ljmp
xor
mov
push
jo
jbe
adc
inc
outsb
nop
cmp
adc
mov
pop
and
and
arpl
and
sub
mov
les
daa
dec
outsb
jmp
xor
ljmp
inc
cltd
pop
test
jo
lahf
cmp
popf
leave
in
lret
mov
cmpsb
pop
or
test
movsb
and
xchg
push
out
fmull
mov
out
add
shlb
adc
or
dec
push
mov
mov
xchg
popa
or
pop
dec
jb
jge
sub
push
or
xchg
mov
jbe
adc
dec
mov
je
std
xor
in
jge
lcall
andb
les
inc
sbb
and
movsl
mov
or
lea
mov
and
cmc
leave
cmp
repz
out
jge
aaa
sub
fsts
lods
lcall
pop
xor
jno
in
pop
in
rorl
lods
ljmp
jo
sub
jp
dec
ror
push
mov
xor
lds
jne
mov
mov
jnp
mov
movsl
xor
and
imul
lret
jle
mov
jecxz
and
in
xchg
sub
ficoml
lahf
fbstp
jmp
fisttps
es
inc
lea
cmp
xor
es
and
pop
lods
push
loope
jbe
ds
call
jae
jne
pop
fistpll
dec
repz
pshufw
arpl
or
push
xchg
cmpsb
inc
lds
cmp
lret
daa
jp
aad
in
push
mov
nop
out
mov
inc
add
popf
push
insb
cmp
sub
sbb
loope
in
or
and
jns
xor
mov
pop
push
push
das
lcall
aas
loop
jno
cwtl
insb
pop
cmp
or
in
lods
fcmovnb
push
int
lock
lock
sahf
mov
jne
lcall
stos
sub
pop
out
notl
enter
mov
jge
and
sub
inc
int3
sub
les
pop
pushf
scas
mov
in
pop
pop
push
and
daa
sbb
xlat
shl
mov
xchg
and
mov
rolb
mov
hlt
push
xchg
sub
ss
mov
jecxz
fistpll
ja
iret
movsl
movsb
icebp
stc
inc
push
push
jg
in
push
iret
cmpb
aam
push
xor
rorl
cmpsb
jnp
jno
xor
mov
sbb
fisubs
rcrl
cmp
pop
xchg
or
cmp
xor
mov
jmp
test
sbb
iret
iret
add
push
out
mov
call
mov
sbb
out
jnp
inc
outsl
jnp
stos
imul
into
push
mov
pop
mov
or
popf
addr16
mov
xor
adc
lret
cs
inc
or
and
push
mov
sbb
xchg
daa
adc
mov
mov
cmpb
add
cmpsl
xor
jns
add
dec
in
inc
pop
fstpl
pop
pop
add
pop
cmp
mov
es
mov
mov
xchg
ss
jp
je
sub
nop
dec
add
test
into
push
mov
jge
cmp
cli
loopne
mov
out
sahf
xchg
pop
xor
jle
or
imul
lcall
jmp
jp
cmpsl
imul
mov
and
call
mov
test
insb
imull
in
jo
jecxz
mov
sub
aas
imul
sbbl
adc
cmpb
je
inc
loopne
push
mov
out
stos
sarl
push
gs
neg
lret
leave
ret
testl
pusha
xchg
sbb
ret
inc
jmp
pop
fdivl
sbb
mov
dec
jno
stos
je
stos
pop
in
push
aas
outsb
cmp
mov
std
xor
or
stc
pushl
call
repz
stc
insb
sbb
fstps
pop
shll
gs
mov
mov
negb
adc
lods
aad
cvtps2pi
xor
push
insl
jl
ret
rcll
mov
dec
aam
and
push
rclb
inc
in
pop
push
jp
mov
xorb
fldl
scas
mov
shll
dec
std
out
nop
and
xchg
mov
arpl
inc
push
jbe
fsubp
sbb
fbld
sub
cmp
inc
call
push
js
xchg
push
lods
lret
and
addr16
das
dec
ret
adc
dec
ret
js
jle
adc
outsb
outsb
das
out
and
sub
adc
mov
mov
mov
sbbl
mov
jecxz
vmread
and
lds
pop
je
ret
dec
stc
ljmp
and
lcall
adcb
rcll
adc
fadd
cmp
sbb
das
add
mov
mov
add
sbb
sbb
imul
cmp
jle
push
cmp
cwtl
fdivs
das
adc
sbb
lock
push
aas
fidivrs
pusha
push
xor
cmp
mul
push
insl
dec
bound
sbb
div
sub
rcr
and
adc
push
push
test
setl
sub
test
int
insl
add
mov
in
inc
and
or
fisubrl
xor
les
jecxz
pop
mov
sahf
sbb
xchg
mov
addl
or
mov
pop
loopne
fnstcw
test
xor
xor
fadds
xor
bound
cltd
sub
xor
das
mov
push
dec
cmc
fwait
mov
in
or
jl
lcall
inc
pop
daa
dec
mov
mov
xor
outsl
push
lret
adc
or
les
jp
insl
push
add
adc
out
out
xor
lahf
and
push
mov
push
pop
outsb
push
xlat
repz
cwtl
fwait
outsb
jno
jl
popf
in
and
mov
pop
push
std
inc
pop
outsb
out
and
adc
mov
jle
push
clc
cmp
jno
frstor
inc
rcrl
bsr
movsb
pop
fsub
sbb
movsl
mov
push
cwtl
jae
mov
cwtl
out
pop
xchg
jg
or
mov
mov
leave
inc
imul
xor
incl
pop
in
dec
cmp
sub
ljmp
push
inc
outsl
fdivrs
push
jge
mov
sub
jle
ficoml
in
xchg
mov
std
xchg
jb
ds
mov
sbb
cmc
cmc
inc
cld
js
bound
xor
shlb
out
mov
outsb
aas
mov
cli
adc
add
cmp
sbb
pop
dec
dec
test
sahf
test
sbb
ret
inc
pop
jbe
mov
add
xor
loop
sub
sahf
in
test
jecxz
mov
mov
jmp
dec
jle
mov
xor
sub
cli
push
pop
addb
or
movsb
inc
and
inc
stos
dec
ds
cmpl
jb
cmpsl
ds
push
jle
ficoms
daa
xchg
imul
popa
pop
inc
pop
adc
mov
out
outsb
push
jae
or
testl
add
test
pop
pop
xlat
scas
xor
scas
cli
int
lret
ss
mov
and
fnsave
xchg
xchg
xor
fistl
mov
push
fstps
je,pt
jne
pop
arpl
adc
sbb
sbb
loope
mov
sbb
sbb
jge
or
bound
mov
jge
pop
dec
pop
mov
mov
push
sub
scas
add
xor
ret
movsl
mov
mov
sub
lods
idivb
cmpsl
inc
js
fwait
sub
negb
into
fcomp
lcall
or
and
sbb
js
sbb
and
das
jge
lods
imul
xor
inc
lahf
gs
fdivl
je
loope
pushf
cld
pop
in
sub
jecxz
jp
out
jmp
cld
push
adcl
cmp
xchg
push
inc
xchg
jecxz
jge
push
push
mov
sub
mov
push
divb
xchg
call
inc
xor
imul
and
std
mov
das
push
loopne
jmp
pop
test
jecxz
ret
adc
jecxz
fmull
sbb
mov
inc
sarb
ret
cmpsl
mov
push
fists
xor
orb
mov
pop
cmp
fstpl
sahf
stos
stos
push
and
aaa
outsl
scas
int
jl
imul
inc
dec
sbb
cmpb
or
jl
adc
ret
and
sbb
outsb
daa
cmp
pop
adc
sub
cld
adcb
roll
or
and
sbb
loopne
dec
jae
jp
fisubl
repnz
mov
jl
shll
ret
cmp
rcl
mov
icebp
jg
mov
push
lea
inc
dec
pop
mov
xor
adcb
xchg
fmul
pop
mov
mov
insb
ljmp
pop
xchg
mov
movsb
cmpsl
dec
cmp
xor
sbb
xchg
and
sti
pop
and
dec
lahf
sub
push
mov
sub
jmp
mov
xlat
pop
movsb
jmp
cmp
jne
imul
leave
or
pop
mov
stc
mov
rep
xchg
in
add
mov
ftst
sub
xchg
int
int
into
jmp
inc
dec
xchg
in
pop
push
fs
fimull
rol
cmp
adc
aam
jne
push
sbb
dec
dec
das
outsb
lea
shll
add
idivb
mov
push
dec
cmpsb
cmp
test
ss
mov
cmpsl
orb
add
sub
push
jle
push
mov
mov
mov
push
jns
int
out
jb
aaa
push
lret
inc
rorb
pop
cmpsl
sub
dec
mov
mov
adc
push
mov
es
and
fistpl
xlat
mov
or
jo
das
add
test
lahf
cmp
lods
mov
mov
dec
test
jnp
jne
lods
in
mov
mov
dec
and
stc
inc
xor
push
dec
int3
imul
test
xor
push
in
xor
cmp
jae
test
xchg
dec
or
inc
cld
dec
roll
push
pop
cs
mov
orb
enter
dec
xlat
xlat
js
xchg
sub
ds
imulb
push
xchg
inc
inc
sbbb
scas
pop
and
sub
insl
mov
jle
and
sub
leave
cmp
dec
movsl
xchg
pop
mov
ficompl
cmp
jno
insl
sub
xchg
push
mov
movsl
pop
in
add
mov
push
pop
ss
leave
push
cmp
add
push
sahf
scas
repz
push
or
orl
adc
and
push
cmp
cmp
mov
outsb
nop
lret
xor
insb
xor
inc
mov
imul
lods
mov
mov
shlb
dec
pop
es
dec
aas
inc
push
test
adc
xchg
mov
or
xor
repz
and
das
sbbl
insb
cltd
mov
fists
jle
mov
xor
inc
ss
outsl
and
outsl
andl
daa
push
clc
int
movsl
xchg
xor
pop
lods
rcrb
test
dec
lcall
test
sti
mov
cmp
cwtl
mov
in
push
mov
dec
scas
jl
push
mov
or
cmpsb
out
pusha
sarl
scas
mov
xor
or
pop
lock
ret
sarl
enter
mov
mov
jmp
push
sbb
ss
mov
inc
inc
mov
xor
leave
dec
mov
mov
bound
dec
pop
jmp
add
dec
mov
daa
dec
and
inc
cmp
add
outsl
mov
jg
push
jno
sbb
push
pop
test
and
lods
adc
rcl
push
sub
push
sub
jmp
jle
add
mov
pop
xchg
mov
je
add
sbbb
data16
dec
lahf
sbb
loop
loopne
inc
jo
inc
push
ret
xchg
out
adc
repz
and
mov
shrl
addr16
inc
inc
insb
xchg
icebp
push
mov
cmp
and
aas
test
mov
es
cmpsl
jbe
add
mov
aas
je
lds
sub
cmpsl
cwtl
xor
inc
cmc
popa
xorl
cmp
cli
mov
mov
fdivrs
repz
pop
ror
test
in
or
data16
aas
push
gs
lahf
inc
shlb
jo
fsts
sbb
push
stc
cmp
cwtl
mov
mov
pushl
pop
jl
cli
push
mov
push
mov
faddl
dec
sbb
adc
xlat
lods
sub
push
pop
mov
inc
and
cld
cld
les
jne
cmpsb
addr16
add
xchg
add
pop
push
push
xchg
std
in
mov
xchg
shll
jmp
fcompl
mov
xchg
jge
stos
mov
xor
leave
outsl
push
mov
clc
sub
sub
in
and
imul
test
xor
das
sub
xor
enter
jne
movsb
mov
xchg
fcoms
mov
sbb
stos
iret
scas
and
mov
hlt
aad
dec
push
aad
add
outsb
dec
jl
inc
addl
add
out
xchg
xchg
stos
mov
leave
add
je
cmp
mov
shl
out
test
jae
sub
call
fwait
or
mov
adc
and
jg
sbb
repnz
cmc
xchg
sbb
rcrl
cs
jns
test
mov
fisubs
jno
push
fistl
pop
gs
fprem1
scas
push
cld
flds
dec
sub
lret
ds
sbb
sbb
sbb
js
xchg
mov
add
in
in
mov
in
sbb
imul
and
push
shl
mov
ret
jo
add
jb
cmc
lods
pop
loope
pop
or
cmc
ljmp
movsl
cmpb
pop
cmp
loopne
jg
scas
adc
in
cmpsb
shrb
daa
push
shll
rcll
xor
test
cmp
enter
xor
fisttps
loope
scas
mov
mov
cmp
adc
dec
decb
out
std
ja
dec
inc
pop
add
cmp
add
or
imul
bound
hlt
adc
and
push
stos
jns
ret
xchg
decl
insb
in
aad
es
push
addr16
jge
sub
sub
xchg
daa
inc
test
js
cmp
test
out
and
jnp
xchg
test
lods
scas
jle
mov
mov
jmp
jg
popf
js
and
decb
imul
aam
xchg
cmpsb
ret
psraw
or
add
push
and
cmp
or
int
les
ret
addr16
mov
sbb
imul
arpl
pop
outsl
scas
pop
setle
fldcw
xorb
push
enter
psrld
lods
in
rorl
mov
aas
mov
and
xchg
shr
inc
jmp
or
push
push
ljmp
mov
push
xchg
or
mov
mov
mov
push
add
pop
cmp
and
push
dec
popf
inc
sub
nop
adc
sbb
inc
xchg
jne
cmpsb
mov
std
sbb
movsb
test
loop
adc
sbbl
cli
fimuls
out
or
mov
sub
outsl
lods
insb
xchg
xchg
sub
hlt
adcb
lods
es
mov
pop
aam
add
adc
jp
add
outsb
and
movsb
rclb
pop
pop
loop
ds
je
push
sahf
shrb
aaa
push
add
std
add
out
sbb
in
inc
jge
xlat
enter
mov
add
imul
mov
sub
push
ss
or
mov
add
jae
mov
jae
jle
jle
jo
pop
mov
out
cmp
lahf
into
mov
mov
test
pop
arpl
xchg
fcom
push
andb
andl
xor
mov
int
push
mov
mov
sbb
jnp
xchg
inc
dec
test
xchg
loop
ffree
icebp
adc
in
pop
sub
jmp
inc
xchg
cmp
xor
dec
push
push
dec
mov
fwait
outsl
in
mov
mov
cli
ja
cmp
rcll
pop
add
cltd
jbe
cltd
scas
sub
hlt
xor
popa
mull
test
push
sub
repz
aaa
mov
inc
cmp
pusha
call
adc
ficoml
hlt
pop
push
addl
cmpsl
lret
pop
sbb
lret
inc
ret
sbb
jne
bound
sub
mov
pop
xor
flds
push
stos
sbb
fdivrl
subb
int
fldl
test
fwait
pop
dec
bound
cmp
jmp
in
mov
sbb
loope
jns
daa
inc
jb
and
add
sbb
jbe
and
ss
push
xor
popf
mov
pop
mov
inc
dec
add
loopne
cmp
xchg
loope
bound
sub
xchg
inc
sbb
jne
call
insb
les
push
fimull
dec
push
and
xchg
push
inc
movsl
dec
pushf
cmp
loop
mov
mov
outsb
sbb
imul
sub
and
inc
sbb
dec
clc
shll
cmp
and
in
inc
push
in
out
push
mov
out
jle
test
test
cld
fidivrs
adc
lock
xchg
sbb
insl
insb
jnp
test
out
cmp
insb
xor
and
repz
dec
cmc
ret
lret
push
dec
fimuls
xor
dec
mov
xchg
repnz
push
icebp
pushf
jae
call
out
leave
sbb
in
mov
push
ds
ret
add
mov
int
ss
push
pop
popf
fidivs
ror
pop
cmp
jg
pop
pop
stos
sub
lods
in
inc
je
hlt
test
scas
sahf
jp
pushf
dec
jle
pop
dec
in
enter
lea
pop
pop
mov
pop
or
popf
ljmp
push
fmuls
xor
stos
mov
jp
jge
mov
es
lret
popa
mov
mov
sbb
push
lret
dec
into
fisttps
shr
ljmp
fstps
repnz
sbb
rolb
jo
dec
dec
stc
mov
push
pop
lcall
mov
pushf
fildll
cmpsl
mov
test
and
mov
stos
in
push
cltd
rcrl
imul
add
out
lock
inc
ja
jecxz
pusha
or
sbb
pop
push
sub
sub
jne
div
je
int
jbe
mov
and
and
mov
xor
aas
leave
out
dec
iret
xchg
pop
aad
out
icebp
imul
push
hlt
pmuludq
or
imul
dec
mov
add
loope
les
cmp
push
ja
divl
daa
add
mov
jmp
into
mov
outsl
jmp
mov
nop
test
or
pop
inc
shlb
push
or
mov
aaa
mov
inc
icebp
mov
adc
mov
aas
sahf
lds
dec
mov
push
dec
std
mov
jmp
ljmp
jge
ret
push
jno
pop
cs
cmp
loop
test
out
pop
sbb
xchg
inc
popa
lret
mov
push
pop
fimull
lahf
adc
repz
imul
cs
add
adc
insl
lcall
cmp
sub
mov
add
mov
pop
negb
cld
add
sbb
cmpsb
jge
insb
adc
ficompl
sub
jae
mov
sarb
aas
xchg
cmpsb
mov
movsl
mov
jg
pop
test
inc
fstp
shlb
int
push
pop
sub
mov
xchg
andb
stc
jg
sub
mov
cmp
adc
cmp
dec
add
xor
repz
mov
scas
fwait
jecxz
push
push
fs
push
mov
imul
shll
clc
mov
mov
xlat
inc
mov
lea
adc
into
push
xchg
dec
aas
or
cmp
xor
ljmp
mov
hlt
movsb
mov
jbe
dec
repnz
cmpl
pusha
in
int
mov
testl
pushf
pop
icebp
adc
jno,pn
jp
inc
or
push
sub
int
out
jge
jl
add
cmpsl
sbb
lock
mov
js
loop
or
shlb
adc
subl
adc
and
xchg
shlb
mov
mov
das
and
and
adc
push
clc
adc
mov
scas
jbe
dec
lahf
adc
cli
sbb
mov
call
pop
inc
sbb
push
sub
test
int3
pop
cmpsb
jle
ror
mov
sahf
leave
xchg
jnp
jmp
sti
idivl
adc
and
fildll
adc
push
call
sub
push
out
sub
add
aas
jl
fistpll
xor
test
mov
xor
cs
test
insl
dec
dec
inc
aam
jb
out
das
jns
xchg
mov
enter
pop
ljmp
xor
dec
dec
push
mov
mov
xchg
dec
inc
or
test
int
pushf
push
pop
out
faddp
int
popf
push
shlb
test
sub
sarl
rclb
js
mov
pop
imul
sbb
jle
jno
mov
gs
jbe
insl
lret
inc
and
enter
ds
mov
push
xchg
jbe
adc
push
mov
xchg
mov
lret
mov
nop
jbe
mov
jns
sbb
xchg
and
add
cmc
hlt
pop
or
out
dec
fs
icebp
push
push
ss
out
and
and
add
outsl
fsubrs
pop
popa
outsb
loopne
inc
js
push
sbb
sub
inc
js
pop
sub
lret
or
sbb
push
dec
mov
xchg
dec
test
sbb
xchg
adc
or
xchg
mov
ret
cs
inc
xchg
cmp
xor
stc
sbb
jecxz
sahf
sub
int
pop
in
sbb
rcrl
pop
adc
mov
push
daa
cli
jl
test
idivb
imul
jne
sbb
outsl
pushf
enter
push
cmp
out
roll
leave
and
pavgw
inc
mov
sub
in
jg
jg
dec
data16
and
jae
scas
push
mov
stos
xor
in
lods
push
xchg
add
int
jne
call
out
frstor
push
out
das
xchg
mov
insl
pop
sub
icebp
arpl
sub
add
push
xchg
rcrl
or
push
sbb
in
sbb
outsl
mov
mov
notb
adc
mov
aaa
test
jnp
inc
inc
fs
add
mov
sub
and
push
push
fwait
jbe
adc
roll
pop
adc
xchg
cmp
into
xchg
repnz
jmp
sub
push
scas
lret
std
shrb
into
leave
push
adc
test
lret
inc
gs
xchg
test
push
cli
out
popf
add
mov
sbb
push
push
fistl
dec
or
addr16
add
pushf
fdivrs
push
je
add
sahf
xchg
ja
into
repnz
and
in
sub
pop
mov
insl
mov
cli
ja
mov
jnp
pop
push
int
jbe
push
pop
mov
push
add
xchg
mov
int3
xlat
hlt
lret
lea
test
jo
xchg
xor
mov
clc
lods
leave
ds
iret
jno
mov
loop
lahf
lahf
or
rorl
pusha
sbb
jb
pop
sahf
adc
xchg
push
int3
ret
pop
das
push
cmp
pop
xchg
out
pop
push
mov
mov
pop
pop
inc
subb
mov
pop
mov
scas
dec
in
push
push
addb
sarl
pop
sti
xlat
sbb
divb
xor
pop
add
and
cmp
xchg
ss
lahf
or
inc
pusha
lcall
push
xor
push
enter
cwtl
mov
js
push
es
mov
pop
ret
jae
add
mov
adc
fisttpll
call
icebp
incl
xchg
dec
dec
ret
jge
pop
mov
sbb
cmp
mov
xchg
cmpsb
insb
shlb
mov
push
mov
lret
cs
mov
dec
push
dec
mov
xchg
sahf
aas
dec
int3
pop
aam
scas
clc
repz
std
xchg
or
cld
xchg
movsb
jno
mov
push
shll
adc
ficoms
push
or
ror
sahf
sub
sbb
add
xchg
xchg
pop
jg
insl
dec
add
inc
enter
aam
push
xor
imulb
xchg
ret
sbb
push
leave
or
or
repz
mov
mov
or
call
ljmp
cmp
or
in
mov
dec
inc
bound
aas
test
aaa
test
enter
cwtl
cmp
inc
leave
out
mov
mov
cmp
xchg
fmuls
stc
lahf
outsl
shll
pop
es
dec
adc
inc
or
xor
icebp
test
test
adc
aam
jns
mov
rclb
add
sub
inc
out
fisubs
jno
or
loopne
mov
jae
ficoml
addr16
fnstenv
data16
mov
iret
ror
sbb
pop
mov
outsl
test
adc
call
mov
imul
popf
push
in
xchg
inc
cld
inc
fstl
ds
test
in
mov
aad
popl
rorb
xchg
andl
leave
shrl
fwait
jge
hlt
jmp
sub
or
cli
outsb
adc
xor
shrl
sarl
jno
notb
cmc
jecxz
adc
in
mov
sub
xor
cmp
and
cld
cli
mov
push
jns
out
pop
imul
jle
scas
movb
pop
pop
pushf
mov
scas
scas
cmp
cli
xor
repnz
sub
cmpsb
sub
imul
xor
cltd
nop
mov
icebp
cmp
insb
sarl
cmp
mov
jne
sbb
inc
dec
sbb
mov
pop
push
add
shll
ja
nop
dec
jge
repz
fimull
rcll
xchg
nop
enter
dec
je
push
or
xor
jmp
sub
test
cmpsl
adc
fs
xor
mov
xchg
mov
adcb
cmp
xlat
dec
sti
jns
mov
mov
dec
movsl
add
push
ret
xor
add
inc
push
nop
lods
cmp
out
test
inc
dec
or
ss
xchg
mov
adc
cmp
xor
jge
add
mov
and
xor
push
cmp
test
and
pop
movsl
mov
lea
cli
sbb
mov
enter
pusha
mov
scas
fcmovb
inc
and
popa
push
in
in
je
adc
pop
add
push
mov
cmp
cmp
lea
xorb
mov
mov
xlat
push
cld
notl
lret
repnz
inc
or
lods
fmull
lahf
jne
lds
je
movsb
and
or
orl
xor
clc
push
div
xor
pusha
imul
jb
test
pop
ds
pop
bound
popf
jg
cmp
imul
lods
adc
sub
xlat
xchg
pushf
pop
icebp
outsb
ljmp
jno
push
inc
fstpl
pop
jle
sub
test
add
movsb
hlt
push
pop
mov
in
sbb
xor
enter
aaa
fisttpll
lock
cli
cmp
jae
pop
addr16
xor
pop
cmp
loopne
jae
cmp
sbb
arpl
mov
sbb
mov
dec
adc
cmpsl
pushf
inc
cmp
push
js
add
cmp
push
lret
fdivrs
mov
icebp
adc
ret
xor
adc
ret
subl
repz
pop
mov
add
lahf
in
cwtl
arpl
fisubl
je
jge
rcrl
sbb
xchg
mov
jg
div
in
mov
or
pop
or
xchg
ss
xor
std
lea
loopew
sbb
lods
call
out
stc
inc
subl
ret
sub
push
js
fwait
clc
scas
icebp
and
call
jp
xchg
mov
loop
stc
loope
jecxz
xchg
add
mov
testb
lods
cmp
aaa
mov
add
inc
pop
jo
inc
xor
mov
jne
test
pop
or
in
mov
icebp
jnp
dec
ljmp
inc
dec
mulb
repz
stc
out
mov
fsubs
xlat
jg
test
xor
ficoms
sbb
push
pushf
aad
sbb
push
sbb
outsb
or
and
push
test
jns
sbb
fisubs
iret
jno
sbbb
in
div
adc
xor
pusha
test
in
mov
or
test
les
mov
inc
dec
mov
stos
pop
adc
sub
pop
loop
out
inc
rorb
add
popf
inc
jno
ficomps
cltd
testl
jl
pop
aaa
stos
jmp
lock
das
fsubp
cmp
and
ss
in
jmp
scas
sti
scas
xchg
mov
pop
nop
xor
mov
and
mov
jecxz
repnz
fists
mov
inc
pop
test
push
xchg
add
jbe
inc
mov
xor
clc
setb
mov
add
std
mov
rclb
adc
mov
ret
sub
pushw
add
mov
cmp
and
lock
pop
mov
cli
filds
inc
jge
movsl
sti
std
pop
addr16
mov
nop
jno
pushf
cmpsl
cmp
out
dec
pusha
pushf
inc
in
jecxz
mov
lods
xchg
ret
mov
push
lret
sbb
xchg
sub
pop
fldcw
mov
mov
call
bound
inc
inc
scas
sub
rcrb
repz
out
sahf
xorb
call
sub
mov
fcomi
shll
daa
pop
pop
dec
sbb
and
daa
lock
aam
test
dec
adc
xor
dec
jge
add
jmp
lret
loop
fsubrl
js
ljmp
cmp
pop
sbb
call
mov
das
add
ljmp
jno
rcll
sbb
out
sbb
pop
fildl
testb
or
or
mov
xor
adc
xchg
leave
push
sbb
and
pop
dec
fnsave
cmp
jne
dec
inc
mov
pop
lods
ret
pop
push
xchg
ja
in
fbld
std
out
adc
push
inc
mov
ffree
lret
mov
mov
imull
and
xor
adc
mov
out
or
adc
pop
mov
xor
popa
pop
popa
call
push
push
xchg
sbb
sarl
sbb
test
mov
dec
inc
leave
aam
pop
pop
shll
stos
cwtl
fisttps
sbb
outsb
or
imul
aam
popa
popf
mov
sbb
push
mov
pop
scas
mov
sub
jbe
in
sbb
shll
nop
mov
subl
sub
sub
push
pop
xchg
adcb
sbb
cmpsb
push
incl
push
shlb
xor
js
or
icebp
add
pause
mov
inc
fmulp
pop
mov
pushf
inc
call
outsl
xchg
push
fildl
or
mov
add
in
dec
push
ja
xchg
scas
xchg
jnp
and
sbb
cmp
adc
mov
cs
fs
mov
jg
nop
shlb
ss
sub
dec
ret
pushf
or
fwait
push
cmp
xchg
jecxz
sub
cmp
push
or
icebp
rolb
scas
xchg
cmp
xor
sub
subb
mov
pop
outsb
out
jno
repz
loopne
in
jne
sahf
xchg
jp
xchg
push
xchg
or
inc
mov
inc
mov
and
int
xchg
lret
cmpsb
cmp
xor
into
push
and
shrl
rcrb
clc
rolb
daa
push
sub
jp
fiaddl
mov
push
popa
stos
cmpsl
xor
xor
xlat
xor
std
movsl
pop
ljmp
mov
mov
add
int
push
lret
aas
inc
sub
jbe
dec
add
lock
xchg
sti
pop
jb
mov
sub
mov
mov
mov
out
push
jge
sbb
xchg
dec
xlat
jmp
clc
xchg
or
xchg
imul
push
lea
ds
mov
daa
xor
xchg
xchg
pushf
mov
or
test
xchg
mov
test
out
push
outsb
cmp
and
pop
popf
pop
pop
xor
ds
or
loop
in
dec
pop
andb
sub
sub
in
movups
inc
mov
cmovo
xchg
push
dec
sbb
sbb
scas
aad
outsb
sti
gs
imul
jge
add
inc
sub
std
gs
sbb
sbb
or
cmpsb
lret
data16
mov
rcrl
xchg
loope
sbb
ds
test
lock
popa
add
mov
test
push
add
xchg
jno
or
pop
mov
imul
ja
push
xor
lcall
pushf
das
out
mov
mov
inc
xchg
and
and
dec
cmp
je
ffree
jmp
imul
cmc
mov
hlt
dec
das
add
sub
negl
rcr
xor
outsb
pop
inc
aam
jmp
aad
xor
jp
fbld
pop
ljmp
xor
push
mov
stc
xor
mov
fnsave
addl
xchg
inc
mov
ds
lods
fdivr
pop
loope
xchg
out
pop
jge
push
xor
aas
sub
mov
lock
and
into
ss
or
test
pop
enter
pop
into
sbb
fsubrs
xchg
aad
xchg
mov
das
push
push
mov
or
or
inc
loope
inc
test
push
popf
lahf
adc
sbb
gs
jne
add
aad
push
adc
push
push
popl
lahf
mov
push
pop
mov
hlt
inc
lret
pop
cmp
fmull
and
jo
repz
dec
adc
sub
sbb
shll
iret
inc
lahf
imul
repnz
or
cmpsb
xchg
out
push
mul
fs
jno
lods
pop
aaa
push
and
adc
mov
maskmovq
mull
aas
rorb
sbb
imull
mov
jae,pn
push
adc
adc
add
test
loopne
sbb
jl
dec
stos
sub
xor
js
and
and
sbb
and
cmp
jge
adc
jmp
pop
xor
les
jge
dec
inc
xchg
lcall
push
mov
mov
stos
mov
push
mov
dec
push
and
outsl
outsb
xchg
xchg
mov
es
jo
dec
sar
inc
jle
add
cltd
pop
loop
push
stos
ja
mov
dec
sti
sbb
enter
setge
sqrtps
xor
idiv
mov
je
int3
inc
gs
mov
adc
adc
stos
fldt
insl
repnz
dec
rclb
push
adc
jle
jge
jb
test
or
decl
pop
inc
mov
aas
lret
popfw
cmpsl
shlb
mov
xor
outsl
pop
stos
pop
push
ljmp
jae
jns
je
jno
jg
push
dec
sub
add
pop
and
mov
repz
loop
xchg
es
lahf
imul
js
jno
js
inc
cmpb
mov
cwtl
sbb
mov
add
jns
pop
es
pushf
cmpsb
fists
lods
bswap
ficoms
adc
sbb
cmc
fcmovnb
dec
mov
xor
pop
inc
movsl
mov
xchg
jo
cli
cltd
mov
xor
jne
mov
xor
leave
testb
push
cmc
fwait
jae
psubq
inc
call
mov
mov
std
stc
dec
push
leave
cmp
mov
lods
sbb
and
repz
xlat
inc
mov
mov
das
rcr
aas
pop
test
sbb
popa
xor
pop
xchg
sub
add
or
jo
dec
sub
dec
inc
mov
aas
std
push
add
sbb
mov
or
push
sbb
jno
cmp
subb
or
lock
fmulp
je
dec
xor
movsb
jmp
enter
jnp
mov
adc
das
dec
push
adc
mov
mov
enter
leave
dec
nop
lret
icebp
or
push
jmp
cmp
lret
xor
sbb
cmp
and
jne
or
jne
push
mov
mov
enter
cwtl
sahf
xor
mov
add
sbbl
andb
push
mov
push
add
sti
mov
mov
icebp
jnp
in
lock
faddl
sub
lds
sub
add
clc
sub
ds
xchg
fs
mov
dec
in
mov
mov
mov
jns
jns
add
xchg
push
add
pop
ds
into
cwtl
imul
push
in
outsb
pushf
fwait
ja
adc
cmc
out
lret
in
and
push
xchg
call
dec
cmp
rcrl
dec
push
cmp
jo
imul
sbb
insb
repz
mov
negb
int
loopne
stos
xchg
xor
in
or
scas
stos
mov
jge
popa
rcr
hlt
jno
mov
mov
arpl
sbb
ret
bound
rcr
and
adc
clc
sbb
and
in
dec
cmp
mov
fwait
push
sub
es
push
rcll
pushl
and
test
inc
push
js
stc
add
cmp
mov
cwtl
pop
jg
ret
data16
mov
push
push
aad
addr16
filds
push
outsl
adc
mov
lock
je
mov
repz
fisttpl
or
push
test
ret
and
outsb
rcl
test
daa
jb
mov
xchg
fstpl
pop
pop
cmc
sbb
push
sbb
mov
cltd
fwait
fwait
push
push
in
sub
bound
pop
test
or
stos
jne
in
xchg
das
inc
test
fiaddl
cli
xor
cmpsb
sub
jb
lahf
adcl
int3
or
loop
push
ss
adcl
sub
xchg
shrb
lcall
fdivl
jp
imul
dec
xchg
xor
mov
movsl
mov
pop
test
int3
push
xor
push
jg
into
cmpsl
mov
mov
lret
into
out
pushf
ret
pushf
and
inc
ja
dec
fdivrs
mov
push
cmp
xor
aad
loope
call
dec
in
lods
xor
fwait
clc
ss
cmp
scas
imul
cmp
test
xchg
mov
mov
mov
jp
aas
mov
aam
push
hlt
xchg
shll
mov
add
sub
lea
or
arpl
testb
bound
jne
fs
test
lahf
or
mov
outsb
mov
fadd
push
sti
in
cmp
dec
xor
sbb
stos
out
int3
rorb
mov
dec
cmp
je
mov
and
mov
jge
add
lock
loopne
push
inc
cmpsl
and
jp
jl
pop
mov
or
scas
lods
sub
jmp
push
xchg
push
xor
popf
ret
fsubrl
mov
jl
add
xchg
arpl
or
pushaw
out
mov
in
pop
outsb
out
and
das
stos
sub
xor
mov
push
xor
pusha
mov
in
jae
mov
fdivrp
faddl
fstl
rsm
pop
rclb
lea
pop
shrb
mov
out
sar
dec
xchg
jnp
jno
dec
push
sub
push
jp
mov
popa
mov
ljmp
sarl
adc
enter
lcall
jns
mov
xchg
fisttpll
inc
fmul
dec
jecxz
adc
jp
fisttps
pop
stc
bound
mov
cmp
push
add
sbb
call
or
nop
push
ljmp
cmpsl
out
pop
pop
adc
jns
pop
in
push
pusha
mov
ret
sub
or
dec
xorl
inc
push
and
popf
jmp
dec
leave
cmp
es
lahf
cmp
add
rclb
mov
scas
add
shrl
cmp
and
out
ffreep
push
sbbl
roll
push
mov
shlb
cmp
cmovle
aam
dec
stc
les
xchg
sub
add
divl
and
aaa
xor
and
push
add
jp
add
iret
mov
push
loope
jge
mov
into
daa
mov
movsl
sub
js
push
sub
pop
xchg
lcall
bound
add
gs
jmp
shlb
sub
sti
in
lahf
imul
addl
out
pop
dec
fidivl
push
push
pop
or
js
call
mov
aas
push
ss
dec
push
ja
inc
sub
insb
popf
adc
in
push
dec
pop
insl
leave
or
mov
lret
inc
outsb
jle
je
repz
and
lret
cs
sbb
loopne
push
je
fwait
cmc
das
push
mov
mov
ret
or
cld
ss
mov
into
ljmp
test
rol
pop
pop
mov
out
movsb
add
mov
sub
jno
jae
xchg
sar
out
hlt
in
ficoml
adc
sbb
adc
outsb
out
cld
cmp
jno
sub
xor
xchg
pop
sbb
les
in
test
lds
adc
mov
xchg
push
ss
inc
jge
adc
hlt
jp
cmp
sub
incl
stos
pop
popf
nop
sub
out
scas
push
repnz
add
inc
sarl
rcr
sub
cmp
adc
popf
ljmp
xchg
sub
or
or
or
pop
inc
std
arpl
push
jno
add
jmp
in
insb
in
in
xchg
dec
jmp
pop
xchg
out
imul
ficompl
js
pop
movsb
jmp
cmp
pop
fxch
divb
pop
lea
cmp
jnp
rcr
mov
fdiv
das
cmc
inc
bound
push
mov
jno
push
adc
repz
mov
outsb
mov
mov
mov
pop
xchg
test
jnp
stc
lret
xor
xor
dec
inc
int3
xchg
lcall
bound
lods
push
xor
sbb
jg
addr16
pop
cmp
fdivrs
lea
add
fwait
stos
inc
push
sub
aam
cmp
jg
stos
int
mov
inc
push
add
andb
out
cld
inc
push
aas
cld
xchg
sarb
push
jp
sub
int
mov
sbb
push
data16
in
jne
sub
mov
mov
cwtl
popf
shlb
in
add
out
mov
cmpsl
mov
xor
mov
xor
mov
jg
cmp
dec
test
pop
push
movsl
and
xchg
add
sbb
push
adc
mov
data16
and
push
loop
cs
mov
mov
pop
mov
dec
clc
adc
and
or
movsl
adcl
out
dec
cmp
sbb
jno
mov
leave
sub
addl
inc
daa
sahf
mov
aad
addr16
push
loopne
das
je
dec
fisttps
cmpsb
and
subl
adc
addl
inc
insl
icebp
lds
jle
sub
inc
mov
inc
out
mov
mov
add
sub
inc
imul
xor
mov
paddd
in
fnstcw
mov
lea
call
lcall
sub
xchg
sbb
xchg
and
data16
inc
rorb
pop
xchg
and
pushl
adc
out
aad
rcrb
push
add
je
mov
cmc
adc
pushf
cld
mov
add
das
sub
jae
sub
imul
inc
mov
push
push
xchg
cmp
ljmp
lods
xchg
jmp
js
add
bound
cmp
std
xorb
jecxz
jb
pop
xchg
std
pop
jns
aam
lahf
dec
dec
mov
fimull
dec
pop
ss
mov
leave
adc
adc
and
or
push
int
cmc
push
jl
add
insb
push
scas
sarl
jmp
xchg
push
push
inc
jb
push
out
sahf
loopne
lods
xchg
jo
or
enter
push
stc
daa
or
sbbb
sub
sub
negb
stc
mov
xor
stos
dec
dec
cmp
sub
mov
movsb
jns
jmp
call
lods
addb
add
test
insl
sub
cmp
ja
push
test
fistpll
aam
outsb
or
jo
mov
push
ljmp
sbb
scas
or
mov
insl
or
push
lock
inc
jne
jno
movsl
sub
rorl
imul
ja
int3
cmc
and
daa
movsl
js
andl
es
jecxz
ds
and
mov
movsl
rol
inc
mov
test
rol
repnz
push
repz
jnp
outsl
xor
icebp
xor
push
in
jl
lcall
outsl
jl
call
in
stc
and
cld
daa
in
add
lcall
inc
ja
push
pop
js
aad
jne
dec
dec
pop
fs
jmp
repz
xchg
mov
enter
in
icebp
je
mov
dec
enter
lret
out
je
arpl
movsb
push
push
sbb
fdivrs
pop
jae
jp
idiv
xchg
add
xor
mov
mov
and
stos
test
mov
mov
jnp
or
gs
int3
jg
dec
int3
add
cmp
add
pop
stc
mov
mov
pop
js
shll
outsl
cmp
mov
hlt
jge
movsl
sub
ljmp
add
push
sahf
add
les
pop
insb
and
mov
mov
lea
test
cmp
pop
popa
push
push
mov
adc
lock
pop
cmp
out
jp
adc
mov
fildl
enter
lea
xchg
stos
xchg
jno
adc
fstpt
insl
dec
dec
popf
lea
mov
xor
clc
pop
lods
stos
int3
inc
ljmp
cltd
mov
adc
inc
sbb
in
mov
xor
and
jb
push
adc
jp
mov
outsb
int
mov
imul
rorb
jmp
fsubs
pop
insl
fists
dec
nop
call
repz
stos
pop
push
aam
imul
sub
inc
add
roll
insb
mov
or
lret
int3
test
or
lret
and
xor
aaa
push
out
not
mov
mov
loop
insl
cmpsl
scas
inc
in
repnz
fldcw
xchg
mov
jns
sub
pop
xor
out
adc
test
mov
leave
sub
mov
push
or
testl
shlb
in
adc
popa
insb
pop
push
or
mov
add
mov
leave
ficoms
xor
dec
clc
out
jp
popf
test
cltd
mov
push
lret
adc
movsl
dec
inc
lahf
bound
and
mov
mov
add
ja
rcll
dec
xlat
dec
xchg
mov
ljmp
inc
int
sub
mov
sub
js
mov
call
fwait
sub
mov
leave
sarl
and
mov
or
nop
cmc
in
inc
ret
sub
add
dec
aas
aaa
sbb
pop
pusha
repz
stc
cmpsl
pop
ret
jb
dec
subl
in
push
pop
loop
and
adc
orl
bound
pop
popa
add
les
int3
pop
jae
dec
inc
sub
adc
sti
pop
shll
mov
push
test
cmc
aad
add
adc
ficompl
iret
and
pop
sub
push
test
dec
add
test
in
dec
cld
loop
gs
js
mov
aad
push
jecxz
or
out
rcrb
xchg
xor
dec
call
xor
int
jb
sub
mov
and
adc
bound
sbb
dec
jle
sbb
mov
pop
aaa
loope
adc
push
and
repz
sub
adc
js
jecxz
sbb
int3
in
sbb
dec
sti
xlat
cmp
sbbb
icebp
loopne
lcall
sbb
or
and
aam
xor
cmpsl
nop
jnp
insb
ds
in
lds
in
xor
enter
scas
adc
xchg
lods
test
inc
push
pop
cld
cld
sub
sarl
and
sub
ja
mov
clc
jns
cmp
jne
inc
sub
rorl
jg
in
jb
pop
mov
add
xlat
push
lods
sub
adc
push
mov
pop
cmp
shlb
test
dec
test
push
bound
mov
pop
jmp
fldcw
push
cs
in
orl
pop
imul
mov
sti
cmp
movsb
sub
inc
jge
inc
xchg
scas
mov
fdivs
lahf
inc
mov
xchg
pushf
cmp
insl
lock
cmc
insb
and
movsb
mov
and
scas
pop
pusha
pop
mov
push
and
add
lock
fidivl
lret
adc
cmc
mov
cli
sub
pop
jp
shl
push
lret
sub
sbb
insl
or
js
hlt
aad
into
enter
add
or
into
mov
loopne
fbstp
xor
fiadds
jae
push
push
cld
add
lcall
mov
jb
pop
jp
xchg
jns
cmp
pop
adc
inc
xor
cmp
addl
mov
test
pop
mov
fstps
sahf
dec
mov
fwait
dec
xchg
mov
push
sti
imul
test
movsl
fstpl
xchg
push
mov
or
sub
xchg
jnp
cmp
adc
es
sahf
in
imul
mov
sbb
and
push
cwtl
or
mov
test
mov
pop
repnz
jne
cmpsb
scas
mov
cmp
lds
adc
adc
mov
cmp
lods
inc
jae
int3
out
cmp
cli
xchg
mov
inc
jle
cmp
mov
mov
inc
push
mov
sbb
lds
stos
pusha
aas
test
sub
lahf
leave
stc
or
mov
xor
iret
dec
dec
mov
adc
popf
in
stos
sbbl
dec
or
pop
leave
inc
sahf
cmp
cs
push
push
pop
mov
add
add
sbb
mov
pop
lret
dec
sarb
sub
jg
cmpsb
xchg
cmpl
ljmp
into
pop
mov
call
xchg
mov
push
and
cmp
fucomp
mov
pop
popf
adc
mov
nop
data16
xchg
adc
stc
mov
cwtl
mov
negb
jmp
sbb
pushf
push
sub
push
outsl
ret
mov
pop
ss
mov
cmp
aad
ret
push
add
lds
into
lcall
test
fucomp
inc
outsl
dec
lret
or
adc
scas
push
leave
sbb
sti
mov
mov
and
mov
pop
es
or
cmp
fistl
pop
ud2
insl
jo,pt
incl
in
dec
div
xor
sbb
enter
and
xor
aaa
test
fstpl
jp
pop
inc
out
cmpsl
loope
shrl
xchg
sub
jb
test
xor
js
and
stos
pushf
mov
cmp
jmp
dec
jb
andb
or
cmp
jge
insb
sbb
mov
fcmovbe
or
push
jmp
or
outsl
insb
jl
pop
inc
bnd
ljmp
in
popa
push
sub
xor
lods
out
pop
mov
int
dec
push
xchg
jecxz
push
mov
addr16
mov
add
imul
lds
mov
adc
lcall
movsb
int3
cmpsb
mov
imul
outsb
mov
in
insl
jb
inc
dec
or
cltd
gs
lods
dec
sub
aam
insl
mov
push
push
fwait
cmc
mov
shl
and
cld
push
sbb
lds
jae
in
mov
pop
sub
adc
cmp
pop
pop
sub
pushf
jo
mov
pusha
imul
daa
sub
push
jp
dec
lea
pushf
loop
push
xor
iret
or
movntps
call
xor
test
pop
jns
add
or
mov
or
rcl
cmp
jecxz
push
jno
movsl
cmp
jl
repz
bound
jp
ret
cmpsl
push
test
push
lea
test
adc
mov
adc
add
mov
or
sahf
sbb
inc
lods
jb
lods
jg
push
jns
pop
dec
mov
push
push
arpl
outsl
mov
out
ret
scas
jge
adc
ret
in
dec
fmul
test
jmp
jb
sbb
popf
or
push
in
sub
test
test
ja
imul
push
repz
add
mov
fsubl
mul
xor
pop
mov
xchg
ljmp
push
mov
into
andl
inc
test
gs
mov
inc
sahf
jl
push
lret
and
sub
ret
idivl
and
jne
and
lea
dec
scas
les
sbb
xchg
pop
ret
add
les
xor
mov
or
arpl
fcomp
xor
clc
shrl
lds
mov
call
lret
cmpsl
rorl
xor
xchg
out
dec
dec
dec
stos
je
xor
mov
cmp
mov
pop
mov
aas
jg
test
enter
and
ret
iret
in
mov
pushf
ja
in
sub
cs
mov
jge
xchg
je,pn
jb
inc
pusha
xchg
and
popa
pushf
pop
and
cmp
popf
rolb
arpl
adc
mov
cmpsb
sub
xchg
lret
push
popa
test
mov
cmp
inc
mov
add
and
popf
dec
ret
push
xlat
icebp
pop
aam
sbbb
dec
mov
cmp
test
jno
aam
fcomps
fmul
out
test
enter
ja
insl
xor
xchg
mov
dec
pop
in
mov
fsubr
sbb
cmpsl
cmp
and
cltd
adc
mov
shrb
fcoml
ror
mov
add
sbb
jl
adc
ljmp
sub
int
xchg
call
shl
jmp
sbb
hlt
lret
js
in
jnp
xchg
add
mov
sub
loop
pop
xlat
ss
insb
or
push
sub
vandps
shlb
outsl
pop
jb
mov
rcrb
push
mov
xor
rcrl
dec
cmp
shrl
andl
imul
into
stos
imul
sub
mov
jl
into
inc
pusha
xor
jb
cmpsl
out
ficoms
push
xlat
lods
and
aad
pop
mov
sbb
shll
pop
inc
inc
or
mov
inc
out
repz
fwait
das
mov
sbb
daa
cmpsb
fnstsw
movq
pushf
sub
push
test
push
push
int3
inc
mov
lods
lret
pushf
out
clc
push
jmp
fwait
mov
sbb
mov
fmull
fadd
cli
sbb
pushf
lahf
cmp
ss
and
xchg
mov
mov
jbe
movsl
adc
pop
lret
fsts
inc
sbb
lock
cmp
xlat
push
rcr
sbb
mov
dec
adc
les
jecxz
sbb
push
inc
xchg
push
popf
aaa
clc
jg
pop
stos
push
adc
cmp
cmpl
fistps
out
cmpsl
sub
mov
add
outsb
adc
outsl
scas
fstl
jno
clc
rcrl
icebp
in
pop
jmp
mov
out
mov
mov
and
xchg
add
cmp
cmpsl
cld
rolb
mov
enter
lea
nop
addr16
rorl
adc
or
pop
fisubrs
inc
ret
sbb
sbb
pushf
sbb
push
shll
repz
jnp
aaa
sub
mov
js
outsb
xchg
and
jmp
lret
stos
sub
pop
cltd
ss
std
mov
xchg
mov
cmovle
and
pop
insl
popa
cmpsl
inc
sahf
jle
dec
fisubrl
mov
fsubs
iret
mov
imul
shrb
cmc
inc
ds
and
jecxz
les
sbb
enter
cld
or
mov
fwait
aam
inc
in
ret
and
and
xchg
push
xchg
and
cmp
sub
or
adc
xor
rclb
mov
fwait
daa
cld
sub
aad
js
cmc
sbb
ficoms
negb
roll
cmp
ljmp
cld
push
sti
adc
mov
fstps
adc
inc
mov
sub
dec
xchg
arpl
inc
mov
mov
fmuls
fsubrl
dec
xchg
cmp
jbe
scas
jge
stc
inc
test
sti
adc
call
mov
out
lods
add
mov
mov
add
or
arpl
popa
pop
in
mov
cmp
mov
push
push
mov
pop
sbb
mov
shlb
aad
lea
adc
push
jl
repnz
in
ds
stos
jg
add
popf
mov
jo
fists
or
dec
xor
inc
test
xchg
cmp
cli
icebp
cmpsl
xchg
xlat
pop
lahf
cmpsl
push
ficoms
in
cmp
cwtl
mov
sub
sbb
jge
out
adc
into
jmp
out
lcall
pop
dec
mov
mov
adc
xor
adc
test
jo
ljmp
lcall
loop
pop
movsb
movsb
testb
sub
loopne
sub
ds
dec
test
outsl
call
das
adc
inc
fwait
mov
dec
xor
mov
in
jae
jbe
mov
fdivs
jno
jbe
out
jg
mov
push
shrb
mov
popf
jo
stos
mov
sahf
mov
je
cmp
push
mov
mov
shlb
mov
in
mov
stos
fidivl
push
cld
stos
inc
shlb
jbe
lock
mov
lods
push
ficompl
mov
fidivrl
cmp
pop
or
sbb
lea
xchg
jb
adc
js
mov
cmp
es
test
pushf
adc
fidivs
imul
daa
rorb
movsb
adc
ret
jecxz
push
xor
loopne
ret
sbb
or
bound
mov
and
out
cmp
decb
jecxz
lock
mov
cmpl
fstpt
pop
push
sbbl
movsb
xchg
jnp
pop
mov
inc
outsb
stos
stc
add
mov
jecxz
adc
rcll
arpl
mov
sbb
lock
adc
fisttpl
mov
out
dec
mov
popf
cmp
xor
out
jae
nop
and
or
sahf
stos
pop
or
ss
inc
pop
lods
mov
xor
jg
shlb
or
andl
test
ja
aaa
nop
inc
push
and
dec
data16
xor
inc
or
mov
xchg
test
jl
lcall
cwtl
xchg
movsb
mov
add
sbb
push
scas
mov
add
sbb
les
je
dec
and
pop
jmp
add
out
cmp
dec
dec
es
int
or
adc
mov
sbbb
xor
mov
pop
pop
xchg
mov
lds
cmp
sbb
inc
push
lock
mov
or
mov
xor
test
xchg
lahf
and
sahf
cmp
jae
mov
mov
cmpsb
xchg
lret
jnp
in
adc
adc
rorb
push
push
push
mov
cld
repnz
xor
stos
inc
jge
int
ds
aaa
cmp
out
push
fwait
dec
testl
jg
mov
push
mov
mov
orl
add
jge
leave
xchg
cltd
mov
cmp
mov
jbe
adcb
inc
or
test
in
mov
sbb
and
filds
mov
popf
jb
push
pop
cmpb
ljmp
cmp
push
mov
iret
inc
push
mov
mov
lret
mov
pop
push
adc
xor
lcall
mov
xlat
dec
mov
pop
sub
dec
shll
ljmp
adc
aad
test
fiadds
cmpsl
jo
push
movsl
cmp
std
in
cmpsl
mov
dec
inc
or
mov
lret
ljmp
andl
pop
jnp
mov
mov
out
nop
fsubr
sbb
lret
mov
pop
xor
fbld
in
enter
sbb
ds
xor
dec
lret
in
mov
jl
and
dec
xrelease
adc
cmp
push
leave
add
jle
xor
addl
lret
cmp
jae
out
sahf
test
shll
stos
xchg
sub
mov
test
and
cmp
jmp
add
adc
leave
pop
ds
nop
mov
int
cmpsb
repnz
push
jae
loop
cmp
notl
cmpl
mov
in
lret
into
push
dec
xor
sbb
mov
les
std
fsubs
mov
jmp
pop
imul
cmp
mov
mov
adc
pop
jmp
insl
adc
clc
or
mov
fs
mov
mov
testl
subb
and
inc
arpl
add
jmp
cmp
rcll
sbb
mov
sbb
adc
add
ret
cwtl
std
jns
leave
int3
cmp
pushl
push
je
mov
mov
ret
xor
or
push
sbb
hlt
and
repnz
mov
int3
test
adc
jbe
les
adc
shll
pop
cmpl
sub
movsb
push
in
push
adc
mov
ret
push
loope
jl
or
sub
aad
ficompl
dec
cltd
js
cwtl
push
ljmp
jnp
pop
mov
inc
and
pop
push
enter
js
in
or
jnp
mov
mov
fwait
aaa
sbb
lea
dec
cmp
push
jnp
mov
cmc
or
pop
insl
dec
mov
sbb
jns
xchg
mov
xchg
xor
rol
jns
jb
push
mov
insb
pop
mov
cmpsb
dec
push
push
jge
adc
adc
nop
bound
xor
in
out
xchg
mov
test
out
repnz
xlat
mov
dec
xor
sbb
mov
add
and
xchg
cmp
mov
sub
jno
and
lcall
fisttpll
mov
pop
push
or
faddl
insl
arpl
cs
scas
scas
or
fldt
pop
repz
mov
movsb
outsb
ror
lock
or
cs
add
push
fstpt
data16
push
imulb
and
sbb
les
mov
push
push
outsb
pop
jne
jmp
hlt
cmp
dec
xchg
outsl
in
in
inc
jl
bound
stos
push
loop
push
xor
adc
call
fldcw
jbe
leave
js
mov
fwait
mov
pop
jp
push
sahf
mov
mov
movsb
jle
mov
push
lock
outsb
inc
dec
xor
andb
lds
arpl
jge
xchg
push
fcmovne
in
shrb
inc
or
cmp
push
add
pop
jbe
ljmp
fidivs
arpl
aas
pop
cmpb
popf
sar
insb
int3
xchg
stc
shll
addr16
jb
mov
pop
adc
shrb
dec
int
jmp
loopne
lcall
lahf
add
mov
sbb
mov
mov
test
sbb
cmp
adc
scas
inc
push
jb
stos
loope
sub
xorl
mov
xchg
push
fwait
push
imulb
and
push
xchg
and
push
mov
je
dec
mov
sub
subl
mov
mov
push
xor
xor
int
ret
jno
pop
add
cmpsl
aam
mov
inc
cmp
shl
lods
inc
popa
fdivl
adc
mov
jnp
scas
sub
adc
fisubrl
clc
dec
cmc
gs
cmc
mov
mov
addb
iret
dec
shrb
shlb
dec
test
pop
je
dec
xchg
cmpsl
and
and
xacquire
cld
notl
aam
int3
jg
mov
xor
stos
insb
push
out
jmp
and
mov
arpl
pop
jns
sub
hlt
ss
lea
lock
sarl
pop
add
imul
and
jnp
xlat
test
fwait
and
cmp
cmp
or
stc
pushl
ret
arpl
mov
repnz
pop
add
imul
lcall
xchg
mov
push
test
stos
adc
jae
popf
sbb
fwait
sub
dec
sub
stos
popf
xor
xchg
add
adcl
push
mov
ret
stos
jbe
mov
je
mov
jle
and
dec
aad
cld
sahf
lea
mov
and
outsl
popf
stos
sti
into
movb
inc
mov
dec
adc
outsl
sub
loopne
mov
mov
rcl
fisttpll
push
and
sub
pop
test
pop
adc
das
or
jge
loopne
std
fisubl
push
in
add
or
imul
push
lahf
push
imul
subl
jne
psrad
aam
fwait
mov
mov
sub
and
mov
std
sbb
imul
popa
scas
xor
push
mov
xchg
aaa
je
jns
notb
push
mov
dec
mov
sbb
lret
hlt
jge
mov
std
lahf
jnp
inc
nop
jmp
and
repnz
fsubrs
cmp
fmull
dec
icebp
sub
sub
cmp
dec
push
add
xchg
cmp
loope
mov
insl
add
fisubl
or
xchg
mov
push
xor
jo
and
mov
or
add
fs
int3
inc
pushf
mov
ret
and
in
xor
leave
push
inc
xor
or
js
adc
cli
push
sub
dec
sbb
test
dec
xchg
in
push
popa
or
add
jae
mov
pop
scas
mov
mov
aad
xor
add
jo
outsl
subb
jmp
push
adc
inc
mov
dec
rorl
push
stos
sub
sti
mov
jl
add
test
movsb
scas
in
rcrb
cmp
popf
xor
jno
hlt
dec
test
ret
pop
ljmp
mov
pop
imul
jl
shrb
dec
sub
stc
rorb
push
push
dec
pop
dec
aam
pop
xchg
out
negl
outsl
je
xchg
mov
sarl
mov
xchg
xchg
lcall
leave
cli
mov
cmp
xchg
xor
cmc
jecxz
fisttps
and
sti
pop
and
lcall
adc
pop
pop
ret
pop
pushf
dec
enter
jle
or
rcll
jp
pushf
mov
jb
jne
stc
movsl
push
sbb
or
mov
and
fisubl
dec
insl
aas
sub
jl
xor
cs
sbb
ret
bound
cmc
inc
mov
lret
into
stos
outsl
sbb
cmp
insl
incl
stos
lds
and
jbe
imul
ret
ja
out
stos
jmp
push
scas
dec
xlat
ds
inc
mov
adc
or
inc
pop
in
in
jae
xchg
jns
aad
mov
sti
xchg
popa
dec
imul
add
stos
mov
jp
inc
adc
inc
pushf
mul
mov
iret
jb
ds
adc
dec
iret
push
sub
test
sbb
add
xor
fwait
imul
out
or
mov
fstl
or
out
test
aaa
pop
dec
jge
inc
iret
in
jge
pop
xchg
out
sarl
push
add
mov
mov
sub
adc
leave
push
inc
repz
sub
xchg
adc
mov
inc
adc
fdivl
adc
cmp
pushf
push
mov
mov
rcl
cmp
sub
jle
js
push
inc
call
in
mov
pop
adc
repnz
dec
push
jae
lods
and
or
lods
mov
push
mov
dec
sbb
fmul
and
fisubs
mov
orb
mov
dec
pop
mov
dec
mov
lahf
outsl
xlat
movsb
push
cmpsl
loopne
inc
pop
ret
aas
std
orb
mov
mov
xchg
or
scas
outsl
add
in
popf
push
dec
outsb
push
jbe
xchg
pop
or
movl
je
scas
jb
and
cmp
fs
add
mov
mov
test
cmp
xchg
lcall
xor
in
cwtl
adc
push
mov
dec
cmp
lea
lret
push
arpl
fnop
call
and
pop
mov
popf
pop
ret
sbb
mov
shld
bound
and
push
mov
scas
dec
pushf
insb
add
imulb
idivl
push
into
sub
mov
mov
pop
xchg
push
clc
and
icebp
xchg
pop
rcll
ficomps
loope,pn
dec
js
es
icebp
cmc
add
cmp
ds
jns
andl
cmc
jo
mov
sbbb
adc
mov
push
les
mov
pop
movsl
gs
es
fistpll
pop
js
inc
adc
dec
xchg
or
mov
popa
jp
test
movsl
push
fists
fidivrs
aas
jecxz
sbb
out
mov
push
cli
sbb
pusha
lods
fadd
vsqrtsd
leave
mov
sbb
ja
clc
pusha
cmp
ret
leave
xlat
and
sub
xchg
test
dec
adc
pop
inc
mov
loopne
sub
mov
lods
cmp
and
lods
dec
inc
sbb
jle
push
lods
sahf
mov
std
mov
pop
jge
test
jmp
imul
pop
popa
adc
cli
pop
jmp
imul
jne
dec
add
fiaddl
loop
lea
sbbl
xor
shlb
xchg
or
add
ds
mov
push
push
repnz
out
dec
push
xor
popa
sbb
xlat
jecxz
dec
push
in
rorl
aam
scas
aas
push
xchg
ja
mov
bound
push
aad
cmc
sbb
add
dec
jg
ret
xor
add
in
sub
ficompl
pop
popa
mov
sbb
pop
pop
leave
pop
or
jne
mov
jb
ss
sbb
xchg
lretw
fwait
and
sub
icebp
leave
and
pop
fadd
jbe
aam
popa
mov
or
in
push
ret
pushf
test
popa
in
jb
cwtl
pop
popf
xor
and
scas
shll
loop
dec
in
pop
cmpsb
pushf
jo
inc
sbb
cmpsb
or
jmp
and
and
push
inc
mov
fmull
dec
es
cltd
fdivrl
jne
es
cmp
cmpsb
in
mov
pop
je
pop
add
rcl
xchg
stc
inc
add
repnz
fcmovne
jge
push
sub
cmp
call
pop
lds
inc
jb
pop
sub
cmp
fisttpl
out
xchg
push
test
arpl
and
jmp
jne
and
xchg
mov
and
mov
fisubs
lcall
sbb
stos
pusha
out
sbb
push
adc
push
fdivrp
xor
bound
xchg
mov
xchg
pusha
out
icebp
sbb
cs
inc
data16
into
inc
xor
add
adc
fs
shrl
add
lret
mov
adc
jns
movb
testb
dec
sti
push
in
sti
aas
jg
cmp
dec
add
cmp
lods
pop
dec
inc
jge
ss
movsb
rorb
movsl
int3
into
fwait
cmp
cltd
lea
or
fsubp
mov
testb
mov
push
in
test
dec
test
insl
sub
add
fs
lods
dec
aaa
adc
test
leave
mov
pop
loopne
mov
pop
rcr
fs
mov
push
or
or
push
mov
inc
push
pop
das
or
les
cwtl
lods
mov
or
fwait
xchg
pusha
and
sbb
add
int
sahf
js
mov
aam
xchg
jle
dec
sbb
sti
lcall
mov
xor
fwait
les
ret
pop
loop
push
dec
pop
push
inc
pushf
stos
mov
mov
add
in
add
pop
and
pop
shrl
or
out
fmul
cmp
push
xchg
push
pushf
sbb
scas
ja
flds
clc
mov
or
mov
sbb
sbb
mov
or
sbb
push
movsl
fistps
ret
push
cld
je
out
movsb
mov
je
test
pop
sub
mov
and
les
addb
mov
cmpsb
add
pop
sub
xor
cmp
dec
sbb
or
bound
adc
fsts
dec
js
sbb
scas
xchg
xor
stos
shrb
fs
test
xorl
xlat
mov
ret
jp
mov
ljmp
aas
mov
mov
or
cli
mov
or
sbb
fs
push
xor
loopne
arpl
pop
movsl
fdivs
sub
data16
cli
mov
jbe
lods
inc
inc
cli
lcall
movsb
xor
and
test
sub
adc
dec
mov
nop
stos
dec
fucomi
jnp
mov
loopne
lahf
gs
out
jp
aaa
and
mov
rcrb
pusha
dec
test
int3
fisttps
push
push
jl
push
nop
les
inc
xor
hlt
aam
pop
repz
pop
subl
loopne
pop
inc
and
xchg
xchg
sbb
mov
sub
andl
jnp
rorb
mulb
out
inc
mov
push
jo
dec
adc
push
es
lock
ljmp
push
ljmp
adcl
lahf
stos
lret
dec
xor
adc
bound
mov
mov
in
mov
mov
pop
aaa
add
mov
in
mov
enter
imul
jle
mov
stos
mov
or
int
jne
cmc
arpl
sbb
xchg
and
out
jecxz
std
jne
jecxz
cmp
js
xlat
jl
ss
jae
dec
dec
mov
neg
repz
icebp
iret
jle
testb
push
aas
outsl
ljmp
inc
cmp
cmc
ret
mov
movsl
push
jno
adc
or
push
scas
add
xor
mov
xor
imul
hlt
pop
jge
pop
cltd
xchg
addr16
xchg
fmul
lea
inc
dec
jle
mov
bound
or
fiaddl
jb
in
pop
test
jge
sbb
fcompl
movsb
mov
jmp
ss
push
and
mov
adc
lds
das
aaa
or
test
jle
or
sarb
xchg
cs
mov
aas
shrl
cld
jne
outsl
sbb
fiaddl
xor
ss
dec
cld
insb
imul
inc
xchg
out
mov
enter
pop
insb
in
std
adc
pusha
pushf
xor
data16
in
loope
push
mov
push
or
out
sbb
in
cmp
push
mov
mull
nop
jbe
xchg
push
ljmp
sbb
pop
shrb
lret
loope
scas
pusha
mov
fcomps
jmp
sbb
data16
add
cwtl
out
lcall
popa
data16
sahf
cmp
xchg
lcall
sbb
cmp
pop
sbbl
ljmp
pop
pop
pop
mov
iret
push
push
arpl
test
lods
pusha
lret
inc
pop
lahf
jl
or
jl
test
movsl
adc
loop
js
adc
xchg
lea
clc
push
xchg
scas
mov
std
jge
pop
xchg
mov
cltd
sub
xchg
adc
imul
dec
test
cmp
ja
lock
lea
cmpb
je
lds
dec
ja
dec
xchg
roll
imul
cmp
loop,pn
shrb
dec
push
mulb
or
ss
nop
fisubrs
xchg
or
lods
push
sbb
sahf
sbb
test
jnp
add
jb
xchg
rolb
dec
pop
stc
or
jns
push
aaa
das
mov
outsl
hlt
mov
fcoml
hlt
cmp
dec
xor
jmp
inc
pop
cmp
jle
daa
pop
cmp
push
mov
cmpsl
mov
mov
loope
sbb
iret
cltd
mov
fists
test
insb
in
ret
mov
sbb
out
pop
pop
jmp
aas
fsubs
push
cmp
clc
idiv
cli
shlb
dec
pop
neg
insl
and
js
add
nop
cmp
adc
jmp
shrl
mov
mov
mov
adc
xchg
sbb
sub
xcrypt-ctr
cmpsl
fildl
enter
lds
push
xchg
inc
sub
data16
xor
push
ja
dec
sbb
pushf
ljmp
inc
fsubrs
or
lods
sbbl
cmp
lret
ja
fdivs
push
push
mov
inc
sbb
in
or
pop
leave
stos
sbb
adc
mov
int3
lds
enter
jbe
sbb
adc
mov
sbb
repnz
xchg
xor
sbb
pop
dec
popa
loopne
xchg
dec
sbb
jg
mov
loop
outsl
outsl
dec
fnsave
xor
sbb
mov
mov
dec
jle
les
hlt
mov
mov
icebp
lea
lcall
xchg
or
mov
sbb
push
movsb
dec
repnz
mov
push
sbb
mov
push
xchg
loope
daa
xchg
pop
mov
jnp
repnz
jmp
inc
fistpll
xor
clc
inc
cmpsb
rcll
ljmp
dec
mov
dec
pop
adc
mov
mov
mov
dec
mov
lods
mov
push
clc
ret
lea
xchg
sbb
sub
or
sbb
test
fnsave
pop
scas
pop
cld
lcall
arpl
cmpsl
sub
movsl
clc
sub
and
xchg
outsl
cwtl
outsb
sbb
push
xor
or
pop
aam
xchg
mov
lea
inc
pop
hlt
sbb
stos
mov
mov
xchg
stos
jl
xchg
dec
dec
pop
mov
or
aam
imul
jmp
cmpsl
push
imul
mov
pop
rorl
add
push
dec
mov
js
pop
lret
sbb
xor
into
rcrl
notl
sub
leave
lea
fdivs
aaa
lret
cmp
ret
shr
inc
leave
sbb
lods
jmp
test
adc
aad
mov
mov
xor
ja
and
test
les
sub
add
test
add
outsl
sbb
add
sbb
mov
in
jnp
mov
xor
in
popf
iret
cmp
inc
cmp
sub
add
cmp
sub
sbbl
adc
mov
jns
lock
sbb
mov
cmc
mov
loop
xchg
lods
pop
out
xchg
mov
imul
test
cli
jmp
xchg
icebp
push
adc
mov
shrl
push
and
ss
aas
mov
adc
pop
dec
cwtl
mov
lret
cmpsl
pop
sub
xor
cmpl
mov
push
dec
adc
mov
je
subb
fstpl
inc
jbe
into
mov
aam
gs
mov
xor
jg
push
lods
pop
int3
adc
or
and
jecxz
push
jne
adc
orb
test
ds
or
pop
mov
sbb
dec
xchg
push
inc
push
fucom
mov
cmp
stos
push
sbb
push
adc
sti
movsb
stos
jmp
lret
lods
cld
btc
lods
es
xor
inc
jmp
ret
mov
leave
inc
cwtl
pop
add
cmpsl
sub
cli
imul
loop
lods
lcall
ss
sbb
or
stc
or
xor
lock
mov
cmp
push
hlt
xchg
pop
inc
xor
jno
pop
cmpsl
mov
jbe
dec
push
sub
clc
cmp
icebp
mov
push
sbb
push
cmp
stc
mov
mov
and
rorl
xor
cld
imul
mov
repz
push
std
sub
dec
lock
jecxz
fidivrl
fcoms
stos
mov
inc
inc
rolb
idivb
adc
mov
or
sahf
xor
adc
pop
stos
inc
inc
loopne
movsl
sbb
dec
sahf
scas
loope,pn
mov
loop
cwtl
in
dec
adc
fnstsw
xlat
jo
enter
nop
out
sti
test
jmp
add
ret
mov
mov
and
pop
in
push
pusha
scas
push
out
sub
xor
scas
ds
movsl
rorl
cmp
movsb
add
in
pcmpgtb
repnz
xchg
fwait
sbbb
xor
cmpxchg
xor
les
cmp
inc
or
sbb
adc
fcoml
mov
cld
add
test
imul
xor
push
fsubl
cmp
fists
push
pop
in
sbb
rcrl
xor
test
inc
dec
pop
jbe
mov
add
push
out
xor
fs
in
pusha
mov
xchg
aad
xor
out
cld
add
xchg
adc
mov
inc
jmp
and
push
fwait
lea
dec
cld
lret
jnp
pop
int
jno
loopne
dec
stos
or
jne
cmp
std
arpl
fsts
add
mov
add
and
inc
inc
icebp
pop
sub
mov
mov
xor
push
mov
call
inc
push
mov
mov
popf
es
sub
inc
sub
lods
fdivs
aad
icebp
cmp
cmp
in
hlt
fdivl
push
jne
mov
outsb
sbb
inc
fsubr
cmp
pop
or
adc
pop
iret
aad
cltd
cmpsl
jne
xor
mov
dec
movsl
icebp
jo
in
push
fstps
xchg
fimuls
cmp
scas
iret
mov
or
sub
inc
repnz
jo
cmpsb
pop
add
pop
push
mov
push
imul
retw
rolb
scas
xchg
mov
add
rcr
mov
jae
push
mov
jecxz
mov
popa
sbb
dec
frstor
and
fistpl
je
cwtl
icebp
leave
push
in
fs
dec
std
loop
icebp
out
push
xor
daa
xor
jne
xchg
cmpsl
mov
add
pop
data16
int3
loope
ret
and
clc
pop
lea
sarl
push
das
push
in
pop
leave
push
inc
adc
clc
nop
sbb
in
adc
push
xlat
mov
fdivl
stos
shrl
xor
movsl
add
out
sti
adc
mov
push
jno
push
faddl
hlt
adc
cli
mov
lret
or
int
shll
xchg
aam
out
test
popf
sub
xchg
push
shll
mov
pop
and
or
cmp
jecxz
pop
lock
xchg
icebp
cmp
pop
cmp
add
sbb
cmpl
jg
or
lods
xor
cmp
enter
vmwrite
push
mov
xchg
pop
push
fcomps
dec
dec
out
aaa
push
icebp
int
adc
stos
loopne
js
and
xor
in
insl
test
or
cmp
dec
or
ss
jl
pusha
adc
add
mov
adc
repz
and
nop
rcl
push
mov
fs
mov
popf
mov
scas
test
test
and
pop
pop
dec
ljmp
add
xor
pop
or
lock
into
push
aad
int
xchg
ret
sti
mov
pusha
jae
scas
mov
mov
adc
mov
cmp
push
sahf
add
mov
or
orb
or
and
arpl
jle
shll
push
bound
cmc
mov
test
hlt
or
scas
dec
push
jl
dec
sysenter
lret
mov
sub
cmp
addr16
jp
jp
mov
or
call
jle
sub
xchg
mov
or
dec
add
repnz
fs
out
push
outsl
jl
mov
sbb
xor
pop
lahf
hlt
rcrl
imul
sbb
iret
cmp
sub
negb
ds
int3
ret
sub
or
sbb
cs
aaa
pop
es
rcrb
fsubrl
jne
ljmp
lods
adc
aad
jl
mov
push
jae
in
addr16
clts
pop
sub
inc
mov
mov
push
lods
xchg
fucom
inc
and
test
shll
or
fs
iret
lret
cmp
mov
push
sub
fcom
sarb
movsb
sub
andl
jp
push
cmp
movl
mov
nop
add
adc
inc
or
shrl
mov
andb
or
sti
ljmp
std
bound
xchg
mov
flds
xchg
lods
leave
adc
les
mull
pop
push
mov
dec
push
xlat
mov
and
add
in
jns
dec
sub
mov
jae
popf
lods
push
xchg
jo
in
flds
rcrb
xor
mov
jo
aas
fldcw
sbb
push
nop
lcall
and
and
xor
testb
and
mov
jg
xchg
xchg
xchg
sbb
or
dec
cmp
mov
int3
adc
ss
fbld
jle
in
lods
inc
nop
ret
add
sbb
and
nop
mov
xchg
sbb
int3
cmp
or
pop
add
ja
push
xchg
adcl
roll
add
mov
sbb
pop
xor
mov
xchg
fidivs
je
sub
xchg
pop
fldenv
rorb
sbb
insl
xchg
in
jb
lods
mov
lods
repz
mov
push
movsl
and
dec
push
sub
shll
xchg
inc
pop
fildl
inc
ret
and
fistps
loop
cmp
testb
fistpl
pop
sbb
push
andl
clc
js
pop
xchg
loope
mov
loopne
mov
fbstp
pusha
insl
and
pop
xchg
jge
dec
jns
adc
popa
sub
jmp
addr16
in
mov
dec
adc
pop
std
and
call
push
mov
dec
fdivrs
clc
push
call
xchg
loop
cmp
imul
imul
xchg
iret
in
adc
pop
xor
xor
pop
add
pop
dec
dec
scas
adc
sub
pop
push
and
jns
mov
dec
les
fwait
add
cmpsb
mov
push
and
mov
or
xor
inc
pop
push
adc
mov
xchg
xchg
push
fidivrl
ret
or
movsb
sub
push
enter
std
jno
ret
cmp
cwtl
push
adc
in
js
fldenv
jo
cmp
lea
or
push
push
insb
fistpl
mov
adc
sti
add
sbb
mov
incb
mov
or
pop
icebp
push
cmp
push
cmp
cmp
and
pop
dec
mov
int
jbe
add
inc
sbb
push
sbb
adc
add
push
repz
pop
xchg
popa
dec
lea
shr
imul
inc
cmpsl
testb
push
adc
sub
pop
push
addl
ret
fwait
sub
pop
mov
aad
cmp
xor
xor
jg
inc
sbb
push
jae
nop
sub
inc
push
aad
xor
cmp
cmpsb
mov
sub
jg
test
xor
xchg
outsb
jmp
cli
jno
ret
bound
dec
dec
cmp
sub
pop
stos
ljmp
push
call
add
int
popf
pop
add
push
call
lods
icebp
pop
daa
arpl
repz
inc
sbb
popf
or
inc
and
xor
mov
shlb
stc
pop
ficoml
shrl
xchg
sahf
ret
test
sbb
xchg
hlt
pop
test
add
in
pop
jecxz
mov
std
push
inc
add
sar
xchg
mov
xlat
jl
and
jle
lret
mov
lods
aad
rorl
sub
and
andb
stos
adc
lods
ret
rol
sar
lods
stc
jmp
jno
sbb
push
adc
test
or
push
inc
daa
or
jno
arpl
adc
push
or
jle
inc
xor
dec
xchg
mov
idivl
js
push
and
es
cmpsb
out
lcall
mov
xchg
cmp
movsb
xchg
lock
jae
or
movsb
adc
xor
faddl
add
sub
adc
mov
dec
dec
push
xorl
push
leave
push
ljmp
xchg
notl
scas
sub
gs
movsb
les
dec
ds
int
es
mov
mov
adc
push
push
dec
jecxz
fadd
lcall
movsb
sarb
pop
arpl
pop
scas
or
adcb
call
xchg
outsl
clc
rolb
into
std
nop
sbb
lcall
fidivrs
loop
lds
push
leave
das
fucomi
cmp
repz
sbb
adc
mov
cli
and
in
mov
outsl
in
or
mov
or
mov
imul
fists
mov
fildll
lods
and
cmpsl
outsl
iret
jp
je
mov
jle
sbb
mov
insl
xchg
test
xor
ss
iret
mov
pop
xchg
adc
mov
or
iret
iret
add
cmp
ret
push
or
cwtd
and
push
inc
fimuls
cmpsl
adc
call
pushl
mov
mov
fsubl
pop
adc
fdivrl
or
test
dec
jb
cmp
loope
adc
cmp
mov
bound
test
imul
or
sbb
and
lret
mov
arpl
jl
test
dec
enter
int
daa
dec
leave
lds
inc
lods
les
insl
jnp
mov
dec
mov
xchg
int3
ret
inc
ja
les
pop
push
xchg
leave
inc
push
pop
push
mov
mov
clc
push
jne
cmpsb
pop
mov
cmc
outsb
sbb
nop
daa
int3
inc
int
add
push
cltd
jns
mov
loop
cltd
jle
cltd
clc
cmpl
icebp
mov
lea
sbbl
mov
repnz
add
int3
loopne
iret
mov
loop
adc
mov
mov
and
lcall
cwtl
popf
or
popa
jo
jmp
iret
mov
mov
jmp
stos
das
mov
mov
lods
call
cmp
mov
or
mov
pop
sahf
scas
test
xor
adc
push
repnz
jae
sub
sbb
and
mov
and
popf
in
shl
jbe
xor
mov
push
push
shrl
pop
shr
repnz
mov
mov
mov
aaa
imul
test
mov
push
dec
add
pop
push
shll
pop
inc
out
pop
not
in
mov
jle
lahf
repz
and
jmp
xor
mov
or
test
push
int3
in
mov
inc
xor
fmuls
push
stos
push
sbbl
push
lahf
jbe
mov
insl
inc
addr16
rclb
fsts
and
and
dec
popa
sti
push
jo
mov
fcompl
jecxz
adc
add
jle
push
xchg
not
out
sbb
push
jge
jne
jae
fldl
in
sar
bound
stos
shll
nop
stos
pop
call
out
lea
pop
pop
pop
ret
push
mov
jb
shlb
inc
adc
cmp
and
out
jne
xchg
repz
pop
dec
arpl
arpl
or
push
clc
mov
mov
cmp
movsl
mov
and
xchg
fldl
in
fisubl
or
lds
aad
xor
es
out
adc
jne
stos
pop
xor
ror
mov
mov
sbb
ret
dec
loope
mov
pop
movsb
out
push
sbb
test
jp
mov
jne
dec
xor
push
cmp
pusha
ja
mov
out
outsb
pushf
mull
push
out
shr
mov
adc
mov
cmp
inc
nop
or
lds
cmp
xchg
std
test
pop
sti
cmpsl
add
in
out
aam
sbb
scas
shrb
call
repz
cmpsb
jo
loopne
sti
sbb
xor
lahf
data16
int3
jns
test
call
mov
ds
in
push
dec
mov
cli
loope
lock
sbb
push
mov
fdiv
xchg
adc
pusha
fnsave
int
jbe,pt
mov
jecxz
sbb
adc
and
lods
pop
pushf
in
in
data16
add
stc
or
daa
jno
add
mov
jg
pcmpeqw
pop
movb
adc
jae
test
dec
jno
pop
test
inc
rcr
imul
fisubrs
add
mov
and
pmaxub
mov
jno
mov
sub
testl
or
cmp
push
fwait
sbbl
int
or
out
dec
sbb
dec
lds
insl
mov
popa
push
mov
xchg
push
mov
jg
mov
mov
push
push
inc
xlat
or
add
or
mov
fildll
jl
jb
stc
test
imul
push
and
sub
adc
sub
cmp
and
lods
inc
sbb
mov
xorb
scas
test
loope
fdivrs
mov
shrl
cld
pop
test
mov
mov
in
jb
dec
pop
call
fcmovnu
xor
imulb
fxrstor
pop
sbb
and
ja
ud1
ret
and
inc
mov
jb
inc
push
into
push
ja
ljmp
or
add
scas
sbb
cmpsl
js
dec
out
or
mov
mov
cmp
mov
push
push
mov
inc
rcrb
mov
bound
or
push
mov
pop
pop
dec
cmpsb
das
fidivl
clc
mull
scas
push
jmp
in
and
lock
cmp
sbb
out
fsubs
dec
jb
adc
cmp
or
xchg
arpl
mov
iret
insb
mov
pop
lcall
leave
das
inc
shrb
imulb
adc
mov
jle
push
enter
xchg
mov
push
mov
sbb
stos
mov
rorl
jne
test
loop
call
pop
movsb
pop
ret
xchg
cld
and
lods
and
pop
shll
pop
push
clc
pop
cmp
sbb
mov
mov
out
mov
adc
iret
stos
xor
cmpsl
jecxz
pushf
jno
cmp
das
jg
or
insb
add
add
les
ljmp
incl
das
mov
or
sub
movsl
xor
push
stos
mov
mov
dec
lods
adc
jp
and
inc
cld
es
sti
out
lods
xor
push
fsubrs
sbb
push
inc
ficoml
xchg
repnz
popf
fldl
xchg
repnz
or
pop
movsl
lret
mov
inc
dec
push
sbb
out
add
divl
stos
sub
je
xchg
fisttpll
jmp
cmp
dec
addr16
and
ret
dec
or
int3
inc
inc
imul
out
pushf
movb
in
lahf
lods
xor
or
imul
inc
sub
xchg
push
cmpsl
ja
dec
fdivrs
data16
adc
icebp
mull
fisttpll
outsb
add
mov
sbb
int3
fcoms
sbb
addr16
hlt
add
pushf
outsb
dec
hlt
lret
ror
out
dec
mov
vmovmskps
lock
add
adc
pop
test
incb
iret
inc
mov
imul
inc
lret
ret
aas
sub
and
test
jle
xor
jo
xchg
mov
inc
jbe
push
inc
adc
adcl
test
out
in
jns
jl
rcrb
mov
dec
lds
xchg
mov
data16
dec
xor
scas
test
into
jnp
lods
push
pop
or
shrl
cmc
push
ret
shrl
ss
sub
xchg
jg
jmp
cmp
mov
mov
jle
mov
pop
dec
pop
lds
call
fidivs
xor
sbb
in
lcall
push
scas
add
dec
cmp
mov
ret
xchg
outsl
jo
js
add
xchg
into
in
test
xchg
data16
sub
faddp
dec
jno
mov
fidivs
movsb
clc
or
lds
pop
scas
adc
jmp
cmp
les
leave
and
pop
out
inc
pop
push
enter
jle
xchg
push
bound
fcoml
cmpsl
lea
roll
jns
imul
add
cmp
in
imul
ret
dec
inc
leave
cs
inc
lea
jle
es
outsl
cmpsl
pop
testb
sarl
mov
rclb
scas
mov
jbe
iret
pop
sti
mov
adc
fiaddl
adc
cmp
adc
mov
iret
or
movsl
add
shrl
push
pop
xchg
dec
push
mov
mov
out
out
mov
or
lret
mov
leave
sbb
xor
sub
and
outsb
ffreep
pop
sub
pop
cmpsl
jns,pn
cmc
mov
or
pop
into
dec
sahf
mov
in
ja
fsubr
data16
decl
inc
es
sti
mov
repz
mul
movsl
lods
ljmp
inc
sbb
sub
xor
bound
fistpll
mov
jp
mov
ss
xchg
mov
dec
pop
test
xor
push
xchg
jae
lahf
popa
inc
test
ljmp
jne
js
loope
dec
mov
outsb
sub
out
lea
cmp
or
aaa
loop
jmp
out
jbe
in
push
cs
add
xor
push
bound
dec
pop
mov
movsb
cmc
outsl
xchg
mov
jg
sub
out
jge
in
fmul
test
cli
mov
lods
scas
cwtl
dec
jecxz
mov
or
xchg
aaa
icebp
pop
icebp
pop
repz
xchg
sub
in
aad
adc
jle
mov
bound
add
shrl
lret
rorl
jae
fidivrs
addb
sbb
sub
fst
dec
mov
mov
fists
push
push
les
js
pop
add
mov
dec
sub
or
adcb
sbb
stc
push
dec
sbb
scas
inc
mov
and
cmp
xor
sub
mov
cmpl
fs
dec
sahf
imul
xchg
dec
and
scas
and
push
in
or
jmp
or
cmp
std
test
pop
out
sbb
lods
and
ret
daa
pop
or
lods
stos
mov
in
mov
mov
ja
sbb
mov
loopne
sbb
push
ss
setb
shlb
mov
fnstenv
clc
cmp
cmp
repnz
jge
xor
outsl
jmp
add
mov
push
lahf
outsl
cltd
cmpsl
xor
icebp
enter
dec
mov
popa
repnz
jg
jnp
add
mov
sub
fnstcw
push
xlat
adc
push
insl
or
orl
rolb
mov
xorb
add
testl
icebp
add
xchg
fcoms
push
and
pop
or
vandnpd
lea
mov
or
popf
mov
or
aas
mov
cwtl
pop
fidivl
gs
in
scas
mov
xchg
mov
aam
xchg
inc
fs
jno
into
data16
pop
xor
push
mov
les
adc
push
inc
clc
or
cmp
inc
jecxz
stos
inc
fstpt
nop
add
sbb
pop
sub
mov
mov
imul
adc
jbe
into
push
aad
and
leave
mov
imul
xchg
push
into
push
pushf
jecxz
xchg
mov
cmp
push
fcmovnu
out
adcl
xor
ds
dec
pop
push
lcall
out
mov
adc
cmp
insl
xchg
mov
cmp
pusha
sub
mov
and
outsb
mov
jle
and
out
inc
fcompl
xchg
dec
mov
jns
pop
pushf
imul
lock
xlat
rclb
mov
loope
sti
xor
xchg
add
xchg
xchg
ja
mov
and
jp
mov
call
add
jg
cmp
mov
adc
jge
insl
mov
frstor
sub
inc
pop
add
xchg
popa
mov
lods
push
test
lock
lods
push
lds
dec
cmp
lods
cld
nop
xor
sub
adc
adc
jne
mov
mov
addr16
enter
jae
cmc
xor
lahf
mov
jle
lds
pop
jmp
call
into
hlt
jnp
into
adc
mov
outsl
pop
insl
xor
add
aad
mov
pop
mov
into
arpl
std
jmp
mov
add
add
pop
orl
nop
test
daa
push
jbe
fs
xlat
fnstsw
adc
inc
imul
xchg
movsb
ja
roll
push
popa
inc
jbe
in
dec
push
lods
xlat
enter
or
push
xor
sbb
mov
nop
pop
dec
push
lret
test
fwait
xor
add
cwtl
inc
fabs
std
mov
jo,pn
xchg
arpl
jle
out
mov
stos
mov
lret
ret
mov
add
stos
or
stos
mov
lods
imul
loope
mov
fisubrs
dec
shufps
test
lret
add
xlat
push
or
jno
adc
or
cmpsl
pop
mov
mov
fnstenv
jno
jl
add
rorb
xlat
lds
popa
dec
js
popf
mov
dec
inc
xor
xchg
cmp
adc
xchg
add
push
pop
sbb
adc
push
mov
mov
inc
adc
sahf
hlt
push
int3
test
xchg
mul
xor
or
or
jl
pop
or
cmp
leave
or
inc
jns
std
xor
leave
hlt
pop
sarb
int3
test
icebp
mov
inc
sub
jns
clc
push
add
call
es
notb
sahf
scas
and
push
es
jb
jae
pop
jnp
mov
push
add
and
js
cmp
mov
mov
and
enter
fcmovne
push
mov
push
mov
add
cltd
xor
mov
pop
adc
mov
pop
and
and
cld
popf
rorl
ret
lret
jbe
cmp
pop
xchg
stos
cltd
sbb
dec
mulb
in
sbb
inc
push
sub
icebp
sbb
or
loop
dec
xor
mov
cmp
xor
fists
adc
pusha
icebp
xor
push
and
outsl
jge
pop
sub
jae
jnp
insb
adc
push
xlat
int3
add
insl
fcmovnbe
mov
mov
mov
mov
out
cmp
push
push
test
add
cld
arpl
push
xlat
jbe
push
pop
push
loopne
or
into
aas
sbb
pop
aad
dec
lret
out
xchg
jae
and
inc
lcall
fldenv
insl
inc
mov
sbb
xchg
fadd
ja
xlat
push
sarb
xor
testl
in
mov
test
ficoml
sbb
pushf
ss
repz
add
xchg
mov
jns
xor
ja
push
into
inc
ja
bound
push
jae
popf
jle
fdivs
sub
ss
inc
ss
jbe
notb
fs
dec
and
xor
dec
pop
dec
pop
dec
push
stc
dec
test
lret
inc
mov
and
ljmp
pop
cmp
push
mov
lds
jno
or
mov
pop
add
fstp
movb
incl
cltd
xchg
cmpsl
scas
dec
cli
cmp
xor
push
adc
sub
out
gs
xor
sahf
stc
add
lahf
mov
fidivl
lea
orl
xlat
push
add
popf
fldl
cwtl
in
cmc
adc
dec
adc
inc
adcl
js
shll
pop
cli
cltd
add
fwait
jl
sbb
out
pushf
stos
dec
int3
cmp
mov
jo
out
lret
push
divl
xchg
outsl
sbb
cli
jle
jmp
pushf
outsl
xor
and
sahf
testl
fisttpl
xchg
mov
cs
add
mov
add
push
cmp
cmpsb
ficoml
xchg
fnstcw
addr16
rol
sub
enter
cmc
sti
pop
je
inc
ret
mov
mov
negl
xchg
dec
xor
int
inc
aad
arpl
test
popf
xor
loopne
cmovg
lret
push
or
sub
loopne
out
or
mov
jp
scas
imull
incb
les
jmp
jle
notl
xchg
dec
testb
cmp
outsl
cltd
ficompl
orl
jl
movsb
lds
add
jp
and
test
xchg
cmp
enter
movb
add
or
mov
or
sub
xchg
jge
sub
dec
mov
lea
test
push
pusha
pop
pop
inc
dec
into
cli
into
jb
cmp
inc
mov
jno
pop
mov
add
scas
mov
adc
jp
fcoml
sub
movsl
imul
scas
sbb
dec
jae
stos
ds
mov
pushf
leave
int3
adc
jno
push
cmpsl
and
dec
adc
out
pop
push
pop
lcall
test
aaa
ret
cmp
adc
pop
or
mov
int
pop
mov
mov
or
in
lahf
cmpl
push
dec
outsb
push
and
lea
mov
enter
sub
and
int3
xchg
mov
mov
bound
push
daa
jnp
sbb
or
lock
xchg
mov
cmpsl
js
and
pop
pop
nop
push
aas
push
adc
mov
sbb
es
in
out
and
ret
cmp
sub
cmp
mov
andb
mov
or
std
xchg
adc
cmp
ret
jp
fldcw
mov
xor
out
int
inc
adc
adc
shr
fiadds
xchg
bnd
xchg
mov
jno
loop
or
xor
sbb
in
or
adc
jle
cs
icebp
and
in
imul
jne
xchg
xor
push
jmp
pop
mov
add
lret
sbb
or
inc
cmp
popf
rcl
xchg
jp
xorl
push
and
or
adc
jne
fs
add
bound
sbb
jae
inc
xchg
inc
mov
dec
mov
fistpl
cmp
shlb
fld
inc
cmp
rorb
inc
shlb
pop
xchg
pop
mov
shlb
dec
in
or
lea
push
mov
sbbb
fists
test
push
cmp
cmp
mov
inc
cmp
inc
je
jnp
lahf
inc
insb
pop
cmpsl
inc
stc
sub
out
rcrl
int
mov
add
xchg
int3
sub
cmp
mov
mov
mov
filds
xor
movsl
aas
cmc
scas
sahf
xor
push
fists
jge
and
hlt
mov
jo
test
push
add
ja
jp
and
idiv
inc
std
dec
fwait
jnp
push
adc
lds
push
adc
es
cmp
ss
ret
les
in
repnz
scas
in
aaa
out
rcrb
mov
adc
lahf
and
lahf
fs
adc
repz
or
inc
insb
aaa
loope
rclb
push
rcrl
pop
ljmp
mov
push
push
sbb
mov
and
sbb
mov
sbb
pop
movsl
push
pop
in
ja
cld
mov
inc
mov
iret
push
mov
mov
daa
add
lahf
mov
icebp
sub
sbbb
xor
sub
adc
xchg
adc
enter
cwtl
iret
dec
cmc
mov
mov
orl
push
push
clc
jmp
pop
push
mov
jecxz
outsl
xchg
jmp
in
outsb
pop
daa
lret
or
cmc
jnp
or
cmp
fs
aam
mov
incl
add
and
orl
icebp
enter
add
ret
aas
mov
imul
in
movsb
pop
addb
or
pop
mov
mov
and
add
lock
dec
push
mov
xor
inc
mov
test
push
xchg
push
stos
cltd
mov
jl
and
inc
push
int3
push
cmp
cld
or
loope
and
mov
leave
jne
or
and
pop
popa
mov
stos
jbe
shlb
dec
or
pusha
cmp
inc
push
or
lret
cmp
scas
shl
and
add
mov
das
mov
sub
ljmp
mov
adc
or
movsl
dec
pop
jl
and
jp
sub
inc
xchg
lret
lcall
adc
jg
dec
arpl
dec
sahf
pop
push
dec
sbb
mov
int
push
lea
sub
cli
movsl
sub
imul
and
out
mov
rorb
cmp
and
xchg
in
aad
push
xchg
neg
pop
aaa
add
inc
outsb
fwait
push
add
and
push
or
lret
pop
add
xor
push
test
jo
pop
sbb
jbe
scas
lret
xor
shl
lods
xchg
mov
push
push
ret
pusha
jne
mov
xchg
and
shrb
add
scas
sbb
je
and
cmp
xchg
lea
mov
lcall
aam
pop
rorl
sbb
popa
xor
movsb
xor
pushf
mov
jo,pt
mov
lods
lret
xorb
jle
xchg
lahf
lret
dec
rep
jg
xor
sub
loope
movsl
cmp
ja
and
ror
push
div
cs
dec
pop
xchg
dec
cli
sahf
repz
in
xor
add
imul
xchg
mov
add
jl
loope
pop
push
in
xchg
pop
lcall
cmc
xor
aad
int3
mov
inc
pop
mov
mov
mov
mov
xchg
cmp
jmp
rol
dec
jmp
ds
leave
lds
xor
rcll
sbb
lret
xor
stos
xor
xor
xchg
mov
repnz
stc
lret
insl
aaa
sbb
mov
sub
lods
mov
push
mov
scas
mov
sbb
pop
jmp
ss
push
dec
shll
mov
stc
ds
push
js
push
idivb
lcall
dec
fbld
xor
push
aam
das
outsl
cmp
movsb
js
fsubl
and
inc
loopne
xchg
jl
push
pop
sbb
fidivrs
movsb
sbb
mov
cli
xchg
push
push
andl
fiadds
icebp
ss
sbb
shll
adc
fs
lods
lods
sbb
rcll
stos
xor
jg
pop
out
pop
cli
pop
fistpll
inc
inc
inc
inc
sbb
adc
jb
sbb
xor
jo
repnz
out
cli
or
lahf
outsb
jmp
xchg
xlat
imul
push
pop
xchg
cld
fwait
test
pop
mov
jb
push
xchg
ficoms
xor
icebp
daa
push
jp
dec
incb
xchg
sub
testb
mov
test
jnp
movsb
das
pop
push
mov
cmp
or
lahf
shl
sbb
inc
aaa
jecxz
push
ret
pop
ds
pop
cmp
test
arpl
cli
test
push
call
pop
or
adc
lcall
xchg
xchg
fbstp
fisubl
and
repnz
fsubl
mov
push
call
xchg
loop
mov
test
jae
pop
lods
mov
xlat
mov
into
xor
sbb
int
mov
adc
call
pop
xor
outsb
cmp
or
ret
xchg
push
das
repnz
xor
mov
and
push
dec
adc
mov
sbb
in
mov
cld
dec
inc
ja
dec
rclb
xor
shll
stos
sbb
sbb
stos
repnz
lds
cmp
mov
pop
sub
idivb
test
adc
test
jge
mov
dec
test
out
bt
popf
mov
push
xor
cmpsl
cmp
jle
cmp
xchg
pop
fcomp
ljmp
jl
cmpsl
enter
ficomps
test
sbb
xchg
inc
lcall
sbb
adcl
dec
orl
out
dec
mov
jae
cmp
scas
sub
test
jmp
aad
jl,pn
add
out
push
stos
repz
jnp
jmp
lea
fcomps
call
xchg
mov
adc
scas
pop
add
mov
mov
mov
aam
mov
jmp
ret
lret
andl
xor
jno
outsl
test
outsb
cmp
and
sub
ret
and
les
sub
movsl
arpl
imulb
cmp
cmp
jb
gs
bnd
gs
mov
lret
dec
adc
cmp
lret
mov
cmp
jne
sbb
addr16
cltd
or
mov
and
push
xor
repnz
lods
stc
push
pop
mov
jns
lock
jl
mov
cmp
lods
shll
mov
cs
dec
sbb
xor
std
mov
in
xlat
lahf
jmp
push
mov
jge
push
sub
inc
fistpll
sbb
or
pop
sub
sbb
mov
testb
cmp
fldt
outsl
jbe
xlat
jns
nop
fs
mov
push
jmp
lods
jbe
add
pop
lahf
pop
pop
jb
add
int
jle
mov
lret
and
nop
xor
add
pop
test
dec
jnp
mov
imul
aad
sbb
out
in
stos
mov
jbe
pop
stos
sbb
push
fildll
jo
add
in
inc
pop
sbb
add
out
jnp
out
out
lret
mov
add
adc
xor
or
jle
xor
outsl
pop
mov
insb
pop
mov
mov
addr16
je
xchg
popf
movsl
int
mov
inc
shrl
aad
mov
and
popw
insb
std
cmpl
inc
aad
mov
add
data16
ret
dec
jmp
dec
aas
mov
pop
xchg
dec
mov
inc
xchg
ja
mov
mov
mov
insb
jns
jne
add
lret
xor
cwtl
mov
popa
lock
xchg
ja
mov
test
sbb
dec
aam
jbe
mov
and
lahf
lcall
push
out
das
jae
push
mov
enter
rorb
xchg
sysenter
pop
adc
les
ja
mov
adc
jl
adc
daa
lret
test
inc
mov
sbb
pop
lret
sbb
inc
mov
shr
sbb
and
mov
ljmp
fidivrs
call
fisubs
mov
push
addr16
inc
mov
enter
cmp
mov
add
mov
scas
pop
mov
add
xor
sub
dec
fstps
popf
pushf
sub
jo
pop
push
leave
call
push
insb
int3
sub
ds
fildll
aad
dec
pop
pop
push
mov
jb
fisttpll
pop
cmc
sbb
mov
cltd
frstor
push
add
sti
inc
dec
rcrl
xchg
les
xchg
lea
mov
mov
jle
cmp
arpl
mov
ss
sub
popf
xor
mov
fisubrl
cli
enter
in
loope
mov
push
sbb
in
enter
xor
arpl
mov
enter
out
fwait
dec
in
cli
hlt
sub
addr16
add
dec
andl
mov
aas
mov
scas
sbbb
scas
loope
jg
ret
jns
cmpsb
nop
xor
loopne
mov
dec
out
les
stos
dec
dec
add
sub
adc
in
sbb
dec
or
popa
xor
push
mov
test
fistps
test
data16
or
movsb
pushf
call
in
aaa
sub
mov
or
in
aaa
xorb
cli
mov
pop
mov
mov
jecxz
mov
in
push
or
cmpsl
lahf
push
xor
xor
push
in
test
pop
sbb
hlt
jbe
ret
xor
pop
xchg
cmpl
int3
and
push
mov
fnsave
repz
xor
push
add
cmp
test
int3
sbb
mov
push
jecxz
or
std
outsb
sub
ret
jmp
into
push
jnp
inc
in
insb
cwtl
mov
movsb
pop
push
int3
mov
scas
addr16
gs
adc
cli
add
jnp
testl
sbb
orl
dec
call
cs
dec
jns
lds
cmp
sti
push
pushf
insb
call
imul
mov
iret
insl
sbb
or
out
xchg
lahf
pop
sub
loop
movsl
dec
push
xchg
or
int
sub
nop
add
push
inc
aad
outsl
jb
shlb
jg
push
sbb
mov
mov
mov
add
push
cld
movsl
sub
xor
sbb
fnstenv
dec
jg
cwtl
nop
mull
icebp
dec
xorb
bound
jmp
lods
add
mov
incb
scas
xchg
lcall
and
mov
lods
mov
inc
xor
push
mov
xchg
pop
fstpt
or
cmp
jnp
out
sbb
test
cmp
mov
xor
xor
mov
dec
mov
stos
jecxz
mov
insl
xlat
cmp
test
fwait
jns
mov
push
int
std
adc
mov
cmp
lret
in
push
xchg
sub
push
or
fbld
inc
loop
or
mov
mov
lock
sub
ret
dec
rcrl
loope
repz
imul
fistpll
clc
dec
jnp
arpl
icebp
arpl
hlt
insl
cld
lea
mov
fwait
and
fidivrl
add
jg
in
cltd
stos
xor
push
add
subb
arpl
leave
cmp
in
ss
sbb
push
loopne
shlb
and
add
lods
dec
imul
xor
not
cmp
dec
gs
mov
outsb
test
cmpsl
or
pop
add
leave
or
insb
sarb
dec
arpl
adc
test
xor
jle
out
sar
std
push
enter
in
stos
loopne
inc
lret
dec
rcl
jo
xor
push
mov
adc
inc
dec
popa
dec
iret
or
push
fistl
mov
mov
cmp
fsubrp
sbb
sarb
push
call
repnz
dec
movsl
and
cmp
subb
cli
jp
arpl
sbb
fs
pushf
das
in
or
idiv
inc
fistps
and
sbb
or
in
cmc
sahf
cmp
add
jmp
fs
imul
dec
cmpsl
fidivl
ljmp
jnp
mov
iret
stos
loop
xchg
add
imul
std
std
int
mov
and
shlb
adc
xchg
insl
push
ja
cmc
mov
inc
loope
xchg
int3
dec
rcl
out
mull
cmpsb
cmp
dec
movsl
mov
push
mov
aas
xchg
xchg
cmp
xchg
fisttps
jnp
roll
and
mov
mov
call
and
dec
push
and
or
lock
sahf
push
adc
push
push
popf
mov
cbtw
jecxz
fstpl
mov
push
mov
arpl
sahf
add
ja
inc
std
mov
mov
jl
jmp
pop
mov
xchg
scas
mov
pop
imul
xchg
xchg
or
push
sbb
dec
cmpsl
loopne
sbb
or
loopne
shl
cmp
dec
popf
test
xchg
cmpsb
push
loope
sub
mov
ret
adc
pop
sbb
cmp
inc
push
rcl
lock
pop
pop
lret
add
popa
or
aaa
stos
cmp
cs
jecxz
sti
adc
lret
je
hlt
push
aam
sahf
push
sarl
sbb
jmp
sbb
lock
lods
insb
pop
adc
jl
test
push
push
adc
scas
sarl
mov
repnz
mov
mov
popa
push
fwait
and
jae
inc
xlat
sub
or
ljmp
movl
test
lret
xchg
add
adc
pop
in
pop
ljmp
pop
bound
push
mov
clc
cld
fwait
out
mov
sub
fs
and
addr16
mov
sti
pop
test
cs
in
push
ficomps
sub
xlat
rcrl
mov
loop
pop
push
sbb
jl
filds
out
shrl
inc
popf
xor
ja
cmp
cwtl
test
mov
loop
jle
aaa
mov
or
out
push
cmpsl
mov
pusha
icebp
adc
cmp
inc
call
in
mov
jmp
fdivrl
push
repz
or
inc
rorl
or
mov
js
sbbl
mov
cmpsl
sti
mov
dec
jle
pusha
jp
xlat
call
mov
js
ljmp
lock
pop
mov
push
push
fldenv
pop
sub
cmp
mov
incl
sahf
aam
icebp
mov
jl
clc
sub
inc
call
pop
jge
sbb
pop
fsubp
jecxz
hlt
and
adc
bound
test
pop
dec
lahf
in
sbbl
out
adc
jle
lret
adc
jp
sti
fsubrs
push
dec
lds
test
mov
mov
enter
push
ret
sbb
je
add
ret
dec
xor
lret
out
mov
and
push
mov
fwait
pop
xchg
cli
or
stos
mov
imul
mov
ljmp
pop
cli
cmp
dec
sbb
or
push
push
and
cmpsb
sbb
fs
xchg
adc
xchg
in
and
lret
push
repnz
or
dec
cli
cli
fistl
cld
pop
ret
inc
sub
lods
cli
loope
aam
xor
sub
test
movsb
inc
inc
add
in
cmp
movsl
imul
lret
lahf
sub
bound
je
pop
js
les
daa
mov
xchg
xchg
out
sub
pop
stc
mov
fucom
jmp
stos
ficoml
call
loopne
cld
pop
sbb
out
rorl
adc
ret
dec
push
xchg
lods
test
mov
aas
cltd
jnp
dec
mov
add
lds
dec
xchg
jge
into
or
mov
adc
cmp
mov
outsb
xchg
push
sbb
jecxz
mov
aam
lods
mov
in
cmp
ret
mov
lock
jb
arpl
mov
cmp
outsb
jp
pop
inc
push
fnsave
or
pushf
insl
cmpsb
pop
lea
pop
insl
in
lock
fwait
icebp
test
add
stos
movsb
push
lret
repz
jp
sub
push
pop
xchg
xchg
mull
or
sub
fidivrs
int3
scas
dec
shr
std
cmp
cmp
xchg
nop
xchg
fistpl
test
and
push
lock
dec
add
and
dec
pop
sub
lea
cli
mov
add
sbb
lea
test
dec
push
fisubs
cmc
aam
xchg
sbb
pop
rorb
xchg
sbbb
mov
fdivl
cmp
adcb
xchg
push
and
mov
sbb
push
inc
sub
mov
aas
and
loopne
xor
idivl
add
icebp
dec
inc
dec
pop
jp
into
cli
into
loop
stos
jle
hlt
jecxz
fucomip
aad
test
and
fdivrl
sbb
sti
insl
xchg
xor
cmp
mov
inc
mov
or
pop
cmp
push
addr16
push
push
scas
mov
fisttpl
aaa
xchg
testl
insb
pop
xchg
jbe
and
js
inc
jnp
xor
mov
sub
sub
mov
mov
cmp
add
insl
pop
mov
test
mov
inc
mov
movsl
sub
stos
ret
scas
cmpsb
cli
out
jns
jecxz
dec
push
mov
popa
lret
scas
adcl
cwtl
bnd
es
sbb
aam
pop
mov
dec
cs
mov
insb
fsubs
in
pushf
das
cmpb
sub
and
sbb
jp
sbbl
and
icebp
les
mov
mov
imul
cwtl
add
mov
xor
out
scas
ja
adc
rorb
push
ret
adc
mov
sub
pushf
sar
and
in
mov
or
push
sbb
or
cmp
aad
pop
je
shrb
inc
call
xchg
mov
ds
adc
inc
push
mov
sbb
lods
push
mov
or
mov
outsb
adc
adc
das
mov
inc
adc
sbb
pop
cmpsb
cmc
sbb
sbb
xchg
out
cmp
sbb
test
cmc
les
add
test
xlat
icebp
mov
xchg
sbb
cmc
cltd
fstps
aad
jmp
jle
push
mov
mov
and
add
pop
push
hlt
out
sub
pop
cltd
mov
inc
das
mov
mov
cltd
mov
arpl
ficompl
mov
roll
sbb
mov
xchg
ja
xrelease
rclb
lods
les
and
pusha
dec
mov
cltd
es
daa
xchg
and
adc
push
in
lock
xchg
imul
imulb
cld
mov
mov
scas
adc
hlt
in
stos
mov
and
pushf
sbb
arpl
sahf
fdivs
lret
imul
repnz
cmpsl
divb
mov
jo
aas
arpl
lahf
push
or
add
rolb
repz
push
je
dec
or
outsb
les
add
mov
in
pop
test
inc
sbb
xor
push
dec
jl
push
ds
into
lds
sbbl
aas
jne
mov
mov
andl
addr16
xor
push
stc
xchg
cld
iret
or
adc
pop
pusha
int
out
dec
and
ds
dec
pop
aaa
pop
add
addl
sbb
jg
mov
sbb
mov
cmpsb
xchg
jb
or
sarl
pop
jbe
jge
or
pop
pop
jno
mov
mov
lahf
sbb
sub
mov
out
xor
sbb
jmp
xchg
jbe
lcall
lock
mov
add
out
sarb
xchg
aad
sbb
les
lods
mov
cmp
sbb
pop
xchg
mov
jmp
push
andl
js
into
mov
int
push
dec
imul
in
jno
or
imul
fcoml
aaa
pause
mov
data16
push
jmp
jg
and
or
movsb
push
add
leave
dec
mov
inc
lcall
push
sub
cmp
mull
add
cmp
stos
cwtl
pushf
cmc
stos
pop
and
test
adc
in
pusha
outsb
arpl
push
xchg
sub
rcr
andl
and
mov
or
fnstcw
cmp
pop
mov
cs
pop
ret
insb
push
jecxz
pop
xor
push
add
xor
and
jne
sahf
jle
lcall
mov
push
mov
mov
icebp
popf
pop
sub
scas
dec
cmp
mov
cli
mov
dec
dec
iret
pushf
cmpl
or
dec
in
daa
push
lods
xor
imul
sbb
inc
add
dec
xlat
mov
dec
scas
mov
cmp
pop
jg
loope
es
cmp
inc
pop
jle
cmp
adc
or
lock
cmp
std
mov
mov
xor
mov
rorl
outsb
xor
jg
test
jge
xchg
mov
insb
mov
enter
mov
daa
mov
fcoms
mov
or
jb
sbb
push
ret
xchg
adc
pop
mov
xor
cld
push
out
cmp
fs
cmp
test
testb
push
rol
stos
inc
lods
xchg
xor
inc
sbbl
aas
xor
jl
outsl
mov
in
push
sbb
sub
fwait
sub
stos
lret
mov
pop
test
test
pop
xchg
mov
jae
or
jo
xchg
jne
cmp
sub
fbstp
mull
pop
push
xlat
aaa
into
mov
push
sbb
dec
cmpb
and
fisubrl
push
dec
mov
mov
pop
push
jle
sarl
jo
ret
pop
fdivr
ret
pop
xchg
sbb
mov
mov
mov
sub
repnz
or
add
lret
xchg
flds
adcl
jge
xchg
add
insl
fcomps
je
add
sub
add
subb
repnz
les
mov
dec
sbb
stos
mov
dec
mov
fists
mov
sub
cwtl
ja
lock
jmp
mov
scas
xchg
movsl
fdivs
test
adc
lahf
mov
stos
fwait
mov
sub
xchg
rclb
mov
mov
filds
sub
jmp
mov
mov
rorl
lcall
jp
add
sbb
mov
push
mov
jae
sub
das
call
cmpsl
lods
jp
mov
mov
std
push
imul
xor
inc
ljmp
icebp
add
xchg
mov
sub
scas
mov
xor
xlat
fwait
xchg
mov
aas
loop
call
sub
sbb
leave
mov
cmc
pop
adc
inc
arpl
push
xor
test
cmpsb
push
push
mov
test
lods
mov
push
xchg
subb
adc
sbb
push
faddp
push
shrl
xchg
ret
movb
das
push
add
sahf
push
test
mov
lds
js
xor
pop
enter
out
ffreep
int
mov
movsl
mov
mov
jge
and
ljmp
enter
int
lahf
lods
icebp
and
pop
push
mov
in
push
jmp
out
lods
dec
pop
pop
pop
cmp
fsubs
rorl
lea
cmpsb
fcom
shrl
fadds
push
adc
or
and
test
sub
xor
leave
pushf
xchg
sbb
int3
or
gs
or
add
bound
sbb
inc
orl
xchg
push
sahf
gs
outsb
outsb
inc
cli
adc
in
movsb
and
mov
imul
rcrl
or
pop
rcrl
mov
test
pop
xor
adc
pusha
loopne
jnp
or
jl
mov
mov
frstor
sbb
flds
mov
aad
push
std
insb
loope
jge
arpl
rorb
push
shrb
add
lcall
lods
dec
inc
shr
xchg
enter
imul
and
mov
lcall
cmp
or
sbb
es
gs
mov
pop
cmp
xchg
and
int
daa
xor
aad
mov
sbb
mov
ds
dec
rclb
jl
mov
pop
adc
out
out
into
mov
daa
sarb
cmc
sbb
insl
fdivs
ffreep
sbb
pop
inc
lret
push
ror
pushl
jecxz
aas
mov
lock
mov
fstpl
push
outsl
sbb
mov
repz
dec
and
dec
int
cmp
pop
leave
lahf
push
loop
adc
ret
shlb
push
xchg
mov
cwtl
shrl
push
sub
out
in
sarl
cmp
pop
cmp
xchg
xor
arpl
dec
adc
adc
in
pop
cli
sub
in
sahf
add
dec
sbb
loop
aad
mov
gs
add
std
cmp
xchg
jmp
or
shrb
sbb
lret
sbb
test
cmpsb
shll
push
pop
daa
test
xchg
stos
daa
mov
and
cmp
sub
jmp
adc
movsl
fcmove
out
repnz
xchg
push
cltd
push
and
test
xchg
jl
pop
arpl
dec
adc
add
hlt
stc
adc
cmpsl
in
cltd
rcll
rolb
or
sub
xchg
inc
pcmpgtb
jmp
daa
xor
pop
insl
lods
mov
jmp
outsb
mov
stc
mov
negl
movl
es
testl
and
xchg
sbb
add
shrl
xor
mov
pop
pop
pop
jmp
jnp
mov
and
pop
shrl
subb
inc
aam
test
jne
imull
ficoml
xchg
icebp
adc
mov
dec
in
imul
or
mov
shll
dec
fdivrp
scas
cld
in
mov
fnstsw
xlat
notl
into
adc
aas
mov
cmp
and
ljmp
dec
mov
dec
loop
fisubrl
mov
and
push
mov
out
adc
mov
sahf
sbb
imul
daa
add
or
pop
popf
push
xor
and
or
add
shl
add
in
pop
xorl
aaa
popa
sbb
pop
push
mull
cwtl
mov
pop
std
in
jmp
and
or
in
xchg
sub
sub
cmp
stos
popa
xor
loope,pt
lods
andl
lret
pop
pop
adc
in
and
inc
mov
xchg
lahf
cwtl
iret
mov
pop
and
lods
int
xchg
add
pop
shrb
pop
iret
cmpsb
faddl
dec
inc
in
sbb
mov
out
xchg
rolb
jecxz
adc
cld
mov
mov
dec
test
fisubrs
mov
ss
cmp
jmp
adc
fistpl
or
popf
popa
dec
xlat
rorb
pop
popa
rcl
mov
mov
xchg
or
add
mov
or
fmuls
outsl
sbb
cmpsl
mov
jns
std
popf
mov
std
and
xor
jno
push
into
cmpsb
jecxz
mov
test
sti
sbb
repz
and
lahf
pop
and
std
bnd
lds
out
adc
icebp
decb
mov
das
xor
pop
cmpsl
insl
xchg
cmpsb
popa
ret
insl
xor
jns
sub
adc
pop
jp
out
cmp
add
fdivl
and
iret
adc
into
lret
lret
inc
lret
in
dec
int3
shrl
mov
push
mov
xor
jle
sub
arpl
cs
jno
sbb
sub
jl
cmp
push
mov
xor
push
daa
ret
cmp
mov
xchg
lret
mov
cmp
testb
add
xchg
rorb
mulb
sub
add
cltd
ja
or
movsl
jp
dec
mov
pop
jno
subl
out
jno
mov
push
loop
dec
sbb
ffreep
sbb
ljmp
fcomp
cmc
pushf
lret
push
push
inc
add
rorb
cmc
dec
out
ret
dec
sbb
mov
daa
imul
popf
jno
setl
out
pusha
xchg
cwtl
pop
inc
mov
mov
jle
mov
fstl
push
inc
mov
or
test
and
mov
add
test
cli
xorb
sbbb
test
push
es
rcrb
xor
inc
enter
sbb
test
insb
mov
arpl
stos
pop
inc
aaa
pusha
outsb
in
lahf
cmpsl
cmpb
fnsave
jo
imul
and
xchg
push
lods
mov
push
adc
into
or
jge
xchg
mov
iret
pop
mov
pop
and
pop
daa
loopne,pt
cltd
jae
dec
xor
js
lock
add
pop
loop
inc
inc
ds
ret
call
mov
mov
mov
roll
mov
sub
jne
xchg
in
and
jne
adc
xchg
push
cmpl
faddl
lods
and
in
addr16
icebp
loopne
xchg
xchg
call
mov
mov
ljmp
test
sbb
adc
insl
ss
xor
push
mov
lret
sahf
pop
xlat
cmpsl
andb
push
fwait
jp
inc
ja
outsl
push
in
orb
cmp
fsub
inc
call
jo
cwtl
inc
rep
xchg
and
or
dec
in
pusha
xchg
adc
mov
mov
push
stc
jno
cmp
mov
inc
xchg
inc
adc
mov
jbe
jecxz
enter
mov
sbb
and
dec
cmp
dec
ljmp
push
std
fdivs
xchg
inc
lret
out
sahf
lahf
lret
paddsb
fs
pop
pop
push
enter
and
mov
mov
jbe
pop
add
push
xchg
cmpsl
repz
and
push
cmc
call
aas
out
and
fsubs
push
xchg
inc
bound
and
mov
out
push
xchg
xchg
lret
bound
jp
shlb
mov
xor
hlt
sbb
and
dec
push
ret
and
dec
mov
mov
sbb
ljmp
sahf
mov
cltd
cmc
jo
test
dec
sub
and
scas
aas
dec
ljmp
rcl
cwtl
mov
daa
shlb
outsb
cmpsb
dec
jne
jge
test
inc
int3
sbb
mov
mov
popf
dec
mov
cli
inc
fsts
add
mov
rorb
cmpsb
mov
jmp
jb
or
imul
dec
lret
rcrl
aaa
rcl
sbb
inc
sub
inc
jg
or
inc
psubusb
pushf
call
fmul
jge
shll
nop
sub
mov
test
add
jns
mov
sub
imul
jecxz
pop
stos
into
insl
mov
mov
push
lock
movsl
lock
sbbb
lods
mov
jb
adc
cli
stos
mull
push
mov
stos
mov
mov
inc
xchg
mov
test
sub
cli
leave
mov
xchg
cmp
nop
test
hlt
xlat
xor
sub
push
pop
jb
imull
pop
dec
subb
cmc
scas
fcompl
loope
xchg
test
inc
out
dec
cmc
or
addb
fstl
jo
mov
mov
cmp
sbb
push
push
lods
movsl
scas
rclb
or
mov
push
fnsave
mov
mov
lods
shll
ds
xor
stos
mov
inc
loope
jb
mov
lods
js
daa
pop
insl
xchg
gs
push
lods
imul
stos
ret
jecxz
lea
jmp
insl
pop
aas
cmp
jae
into
pop
adc
xchg
imul
pop
mov
add
add
jmp
es
clc
add
loop
imul
xor
xor
add
lret
mov
fldenv
add
or
push
leave
call
loope
or
je
push
xlat
xchg
cmp
inc
jo
xchg
xchg
sub
xor
call
adc
es
jnp
pop
rcrb
mov
fisubs
int
hlt
into
pcmpeqw
cmp
out
jp
push
jb
sub
out
push
ret
inc
sbb
xor
adc
add
inc
and
repz
push
rorl
pop
or
js
sbb
mov
mov
inc
xchg
xchg
iret
lea
out
mov
mov
popf
or
jle
fstpl
mov
aad
xchg
pop
push
leave
sbbl
test
mov
jne
into
jmp
fsubs
bound
jl
scas
test
cmp
sti
or
inc
xchg
adc
and
pop
test
popl
cmp
bound
mov
shl
mov
ds
imul
sub
outsb
adc
les
mov
mov
and
sarb
inc
xchg
mov
jmp
aad
sub
cwtl
jnp
mov
dec
ficompl
dec
or
or
xchg
mov
jns
or
insb
xchg
push
popf
push
sub
inc
test
cli
inc
pop
jbe
sub
push
xor
xchg
xchg
xchg
loopne
lret
jae
adc
lret
jecxz
imul
add
es
call
test
mov
cmp
in
pop
sti
push
pop
mov
mov
sbb
xor
adc
jbe
mov
mov
dec
int3
sbb
fisubl
adc
adc
jle
pop
lret
jp
xchg
out
fistps
ss
mov
mov
inc
dec
push
shl
aaa
push
push
adc
adc
xor
cmpb
xchg
out
cmp
push
cmp
add
popa
stos
in
divb
lods
cmc
nop
mov
dec
or
cmp
jge
pop
movsl
icebp
fs
in
push
cs
imul
sub
pop
jmp
dec
push
mov
fcomps
sahf
add
mov
mov
pop
fwait
mov
mov
xchg
add
mov
sti
test
dec
pop
sbb
cmp
test
add
out
push
sbb
adc
repz
insl
sub
pushf
lret
or
bound
out
cltd
fcmovb
aam
aas
lret
pop
lea
mov
loope
adc
je
cmp
jle
addb
inc
mov
shld
outsb
loope
add
cmp
sub
dec
inc
and
pop
shlb
sub
jl
mov
test
mov
out
js
inc
or
sub
add
push
cmp
mov
ljmp
sarb
mov
lahf
push
loopne
push
push
outsb
ret
int
xchg
in
jge
movsb
mov
and
push
xor
jno
psrld
push
lret
xor
sub
inc
pushf
dec
repz
mov
or
lret
mov
ficomps
push
jb
loopne,pn
push
mov
mov
inc
xorb
lods
arpl
mov
imul
xor
les
pop
sub
roll
out
xor
lock
adc
adc
jnp
loop
push
jnp
dec
addb
xor
cmp
mov
outsl
adc
adc
movsl
mov
inc
dec
jge
fisubrs
and
rcrb
adc
hlt
mov
cs
mov
mov
icebp
add
adc
in
aaa
and
pop
and
or
pop
imul
gs
cwtl
dec
add
cmp
lahf
mov
scas
aam
test
popa
xchg
loopne
mov
or
stc
sahf
push
adc
mov
fidivl
jp
outsl
mov
and
ljmp
in
lahf
nop
fildl
xchg
and
popf
xor
stos
xchg
jo
jne
pop
sub
jg
jns
in
sbb
iret
and
aas
inc
adc
sub
mov
pusha
sub
inc
push
pop
add
mov
or
scas
faddl
popa
xor
jb
or
add
leave
ljmp
or
daa
push
jno
jno
imul
cmp
in
and
cmpl
mov
mov
mov
and
scas
mov
xchg
lret
sbb
push
negl
cmp
and
jecxz
sahf
notb
push
aad
daa
pop
aaa
mov
cmpsb
and
repz
insb
inc
xor
pushf
into
sti
push
jl
and
mov
push
sub
in
adc
mov
mov
sbbb
iret
sbb
xor
push
cmp
xchg
shrl
pop
ret
push
or
in
or
in
jge
sub
arpl
pop
scas
icebp
dec
sbb
push
cmp
inc
subb
dec
xchg
mov
cmp
or
cs
outsl
int
push
je
jge,pn
mov
ror
jge
add
cli
cld
rcr
mov
sbb
ds
lret
xor
adc
dec
leave
addl
dec
or
aaa
rorb
out
out
pinsrw
repnz
cmp
into
cmp
arpl
shll
cmp
nop
mov
and
xchg
mov
xlat
inc
mov
sbbl
scas
vxorps
push
and
mov
out
mov
cmp
xchg
sub
cmp
insb
adc
ss
jmp
gs
insl
aaa
lret
ret
fwait
ret
test
imul
mov
test
mov
xchg
dec
outsb
fisttpl
sbb
lods
in
aaa
das
or
mov
outsl
mov
dec
cmp
in
call
xchg
mov
mov
into
test
xor
xor
sbb
fst
xor
cmp
mov
sub
div
add
jle
sbb
dec
mov
sarl
push
inc
adc
popf
sti
out
xlat
jp
shr
mov
iret
test
test
xor
dec
inc
fldt
push
sahf
aaa
ss
adc
imul
xchg
push
shlb
in
ljmp
mov
add
sbb
inc
cmpsl
in
sub
stos
dec
scas
jbe
in
inc
and
add
jnp
add
mov
adc
sub
es
scas
in
pop
enter
xor
addl
das
push
movsl
xor
sub
fmull
adc
cs
sbb
dec
scas
jae
mov
or
movsl
inc
lock
sbb
rcll
and
aaa
sbb
mov
ljmp
pop
ss
test
lea
shlb
add
push
sbb
and
out
mov
sub
cmp
pop
subl
jl
and
sub
scas
fwait
stos
fnsave
xor
ja
imul
dec
test
leave
mov
test
inc
ljmp
leave
sub
push
and
push
or
mov
jnp
insb
testl
xchg
fbstp
pop
pop
jp
rcll
push
loope
int3
sbb
ror
andb
jecxz
adc
lock
loop
and
stc
popf
push
std
out
xor
cmp
lods
and
lahf
lea
dec
call
pop
sub
xchg
and
pmuludq
and
mov
xor
dec
cmp
cmp
inc
adc
imul
or
jl
outsl
add
xor
fcmovnu
lahf
shr
int
loope
fldl
scas
dec
outsb
push
jae
dec
mov
mov
shlb
mov
arpl
repz
das
ja
ja
adc
in
mov
mov
out
loope
lods
roll
inc
mov
push
in
imul
mov
or
roll
push
xor
xchg
rorb
sbb
adc
jl
or
sarl
popa
shrb
adc
iret
add
test
sub
rolb
cltd
mov
mov
lahf
call
repnz
xlat
xchg
cli
ret
pop
dec
popf
xor
imul
xchg
xchg
or
or
jg
es
sbb
mov
cmp
mov
xchg
jge
mov
fldenv
fs
xchg
bound
adc
roll
aam
test
repnz
arpl
jns
inc
mov
sbb
and
mov
dec
lret
push
ret
lcall
xchg
ret
mov
test
xor
loope
jb
fwait
cmc
in
xorl
test
enter
imul
xor
push
or
push
dec
or
addl
mov
push
xor
pop
sub
clc
jp
mov
xor
daa
push
add
scas
and
jl
fdivr
aam
mov
js
inc
or
jnp
cltd
cmc
cmpl
int3
sub
sbb
dec
test
punpckldq
sti
bound
mov
cmp
dec
and
shl
add
sbb
js
jmp
mov
pop
xchg
mov
pop
cmp
sub
xor
fnstsw
sbb
mov
aad
shrl
mov
add
test
enter
sub
cmc
sbb
pop
jecxz
adc
cmp
aas
adc
fnstenv
js
mov
add
dec
dec
xor
fstpt
and
lret
xchg
leave
push
and
jnp
jnp
xorb
setl
add
adc
inc
mov
imull
xor
mov
adc
jb
into
outsb
dec
inc
mov
mov
movsb
mov
test
andb
scas
pop
out
leave
mov
dec
push
test
pop
aas
sbbb
shrb
inc
fnstcw
jp
popf
in
imul
add
or
sub
ds
xor
call
inc
sbb
xor
test
push
xor
add
inc
or
cmp
jbe
or
outsl
xchg
bound
or
inc
imul
aad
aaa
push
js
call
mov
sbb
daa
nop
pop
xor
adc
pop
jl
xchg
fisubrs
or
call
lret
push
mov
fildl
addr16
push
subb
jge
lock
sbb
add
pop
cmp
mov
pushf
outsl
lret
cmp
test
or
aaa
aaa
xchg
mov
jl
cwtl
outsl
and
xlat
push
pop
push
cmpsl
bound
xchg
add
jbe
test
mov
and
mov
fwait
ljmp
test
push
inc
call
or
jecxz
and
cmp
inc
loope
rcl
test
ret
ficompl
dec
mov
dec
sbb
out
dec
test
pop
lahf
lods
loopne
mov
mov
and
out
inc
sub
mov
out
aam
mov
fidivl
xchg
xor
dec
push
out
arpl
jge
push
mov
xchg
sbb
test
cli
inc
ret
hlt
sbb
iret
loop
push
int
pop
jl
push
cwtl
lret
popa
push
jnp
fidivrs
sbb
adc
dec
sub
out
jne
or
add
sbb
sar
into
lock
jne
mov
cmp
sub
ds
ja
loopne
push
xchg
sub
repnz
cmp
mov
push
insl
sub
imul
pushf
add
and
adc
inc
icebp
dec
outsb
or
sub
adc
sbb
xor
fcoml
jns
adc
mov
int3
inc
jl
ja
add
lods
fisubs
adc
in
ficompl
in
jb
push
aam
loope
xchg
adc
xchg
stc
std
lret
enter
imul
add
ds
in
lods
jle
pop
shll
leave
jns
call
xchg
mov
leave
mov
dec
xor
xor
imul
jo
imul
sub
cmp
xchg
dec
inc
test
in
clc
sbb
int3
push
push
je
jae
cs
xor
loope
fpatan
jbe
in
cmp
mov
cmp
out
adc
imul
mov
inc
cmp
add
stos
jecxz
cs
leave
inc
push
shl
xor
lods
and
scas
movsb
or
jmp
cs
gs
jl
push
insb
ja
or
shlb
mov
pushf
lea
bound
mov
aaa
daa
add
push
pusha
mov
jo
pop
hlt
gs
jnp
fsubrs
or
push
jb
mov
mov
adc
adc
imul
out
insl
mov
fcmovb
scas
rcrb
sahf
in
pushf
int3
in
movsb
jne
jl
push
iret
mov
inc
loopne
inc
sti
dec
mov
push
loop
sub
add
inc
outsl
inc
dec
inc
cmpsl
enter
dec
sarl
sub
push
jle
aam
lea
pop
dec
push
jnp
int3
js
repnz
add
packuswb
inc
adc
mov
fistps
aas
sub
inc
sub
lcall
sub
jo
cmpsl
sbb
lds
in
cltd
insl
mov
cmp
add
dec
in
xchg
pop
fstpl
out
aad
jo
push
sbb
pusha
dec
dec
jbe
mov
jp
pop
ror
js
jecxz
sbb
add
fs
lcall
int3
jge
or
mov
push
cltd
popf
lcall
adc
stos
fsubr
mov
mov
in
pop
fmuls
aam
ret
xchg
lods
lret
mov
dec
sub
jecxz
mov
fwait
mov
xor
pusha
cs
bound
xor
pop
xchg
pop
push
add
sbb
cltd
es
lret
scas
insb
lret
das
xchg
js
fwait
add
cmp
pop
mov
cmp
or
sbb
or
push
cmp
add
and
xchg
pushf
adc
ja
jmp
sbbl
xchg
or
inc
xchg
mov
push
dec
jnp
fisttpl
xchg
loopne
call
adc
sub
mov
inc
push
jl
hlt
popf
fwait
out
ljmp
xlat
push
inc
aam
mov
xchg
mov
outsl
add
ret
mov
in
jae
ret
dec
imul
aam
cmp
mov
xchg
loopne
mov
bound
in
dec
fst
mov
push
out
lcall
and
fbstp
mov
add
enter
cmpsl
jbe
mov
js
addr16
jno
push
mov
mov
mov
xchg
insb
pop
jo
add
fwait
rolb
pop
rorb
push
xchg
fwait
mov
cs
iret
or
mov
popf
bound
dec
sub
sbb
add
mov
inc
shrb
popf
lcall
aas
mov
jge
insb
das
xchg
adc
and
adc
lret
lcall
aaa
sbb
into
pusha
scas
imul
sub
mov
mov
inc
xchg
inc
rcrb
lcall
sahf
outsl
subl
xor
push
repnz
fs
xchg
inc
sub
push
int
sbb
jne
dec
movsb
mov
and
sti
mov
lcall
in
in
adc
push
sbb
jns
mov
adc
lods
out
mov
mov
ljmp
add
repz
and
and
xor
fimuls
ja
xor
lahf
and
and
jl
dec
push
pop
adc
push
lretw
jmp
stos
mov
pop
and
lock
pop
and
mov
jbe
mov
loope
push
xchg
jecxz
lahf
dec
pusha
push
ja
outsl
arpl
lret
cmp
push
fstps
and
arpl
push
call
pop
pop
inc
xor
fists
pusha
int
out
cmp
dec
testl
outsl
lods
sbb
aas
push
or
cmp
xchg
int3
cmpsb
sbb
adc
jl
dec
xchg
sbb
lcall
cmpsb
rolb
inc
dec
push
popa
add
xor
icebp
inc
push
int3
lods
test
cld
cwtl
adc
mov
icebp
push
stos
es
adc
cld
pusha
pusha
int
cmp
insb
ja
cwtl
daa
jo
fisubs
xchg
cwtl
jg
aam
lahf
xchg
pushf
inc
repnz
and
ja
ret
xchg
push
or
jne
lods
cmp
jae
into
adc
fstl
sti
dec
out
mov
xor
loopne
xchg
outsl
iret
loopne
lret
and
fcos
lods
cs
xchg
mov
ljmp
inc
jl
call
int3
jno
adc
or
or
mov
dec
mull
dec
push
jmp
xchg
push
sub
add
pop
clc
iret
mov
fstl
outsl
mov
scas
jl
data16
add
lock
pop
cltd
xchg
inc
out
sbb
popa
push
dec
scas
leave
adc
sbb
idivl
cmpsl
pop
or
sbb
xor
gs
fninit
aas
adc
ss
xlat
mov
jns
mov
mov
inc
push
sbb
adc
insl
mov
jbe
xchg
std
sbb
nop
jo
or
jns
pop
lds
cmp
jo
test
dec
xor
addl
subl
pusha
jns
add
outsb
hlt
pop
imul
les
sbb
sub
das
test
dec
loope
sub
test
cwtl
pusha
add
jge
jne
dec
dec
mov
cli
xchg
sarl
mov
push
cmp
bound
test
test
int
pop
mov
lret
mov
in
pop
nop
popf
fcoms
mov
inc
in
lret
jl
mov
mov
adc
cmpsl
in
leave
mov
add
adc
in
push
loop
insb
xchg
mov
inc
cmp
pushf
das
cli
xchg
lahf
js
mov
sbb
push
sub
xchg
mov
notb
jb
sub
push
cmp
dec
mov
jg
jl
xor
push
pushf
xbegin
sbb
xchg
and
addr16
push
sbb
xchg
ljmp
pop
xor
adc
shrb
xchg
mov
call
push
lods
cmp
leave
fwait
sarb
or
inc
inc
testl
inc
adc
and
xor
mov
lds
lods
loope
in
pop
outsl
adc
cmp
and
jns
mov
lret
aam
insl
jmp
mov
cmp
jne
add
push
ljmp
xor
and
mov
or
stos
pop
cmc
bound
push
push
xor
loop
inc
sbb
xor
ja
pop
and
cmpsb
jl
fsubrp
bnd
adc
add
push
cmp
clc
mov
rcll
ja,pn
add
xchg
rcrl
sub
jnp
rolb
pop
jnp
xchg
outsl
adc
push
leave
push
imul
fidivrs
in
out
lods
rorl
add
and
mov
xlat
xchg
inc
xor
mov
adc
mov
dec
mov
or
push
xor
cld
sub
push
dec
or
xchg
xor
scas
and
jno
add
and
in
lock
adc
fadd
ss
fwait
jge
xchg
xchg
sub
xchg
mov
cli
fstpl
jb
int
rcrb
and
shrb
loopne
jnp
mov
lods
inc
rolb
mov
mov
iret
insb
mov
xor
dec
jae
or
adcb
pop
xchg
adc
sbb
dec
in
sbb
fcoml
sbb
pop
pop
stos
in
inc
cli
call
xor
loop
push
dec
cmpsb
adc
jnp
xor
out
fists
push
xlat
lret
push
push
scas
ret
jg
xchg
jmp
fisubl
mov
insl
sub
adc
repz
inc
sub
leave
xchg
arpl
int
jg
int3
clc
test
pop
and
into
pop
jne
popl
sti
pop
sub
shr
loope
shlb
enter
mull
mov
loope
xor
jmp
pop
cmp
mov
repz
adc
mov
sar
or
cwtl
arpl
sbb
xor
out
xor
mov
stos
xchg
ljmp
adc
xchg
cmpsb
cld
dec
xchg
mov
jne
sbb
add
outsl
popa
add
rclb
leave
inc
jl
fadds
js
mov
fnstenv
mov
jno
in
jnp
add
fidivrl
dec
fsts
cmc
jae
jl
mov
arpl
xor
dec
pushf
push
rorl
mov
adc
stc
sub
and
push
dec
sbb
daa
not
in
sbb
xor
test
repnz
punpckhbw
push
dec
decl
jp
adc
add
adc
int3
dec
sbb
xchg
lods
jle
jb
pushf
adc
xchg
orb
sahf
sub
sarb
into
cs
inc
jl
shll
push
sbb
loop
mov
dec
movl
ja
cli
daa
lahf
loop
mov
push
fwait
loopne
pop
add
aad
mov
xor
stc
mov
jl
jmp
inc
fmull
mov
aaa
cmp
fcompl
stos
adc
popf
icebp
jl
xchg
mov
push
stos
jo
fwait
pop
cmc
xchg
add
fcomps
xchg
loope
mov
lods
int3
sub
fldcw
cmp
int3
mov
flds
shr
jno
shl
stos
sbb
inc
or
add
mov
pop
int
xor
sub
mov
cmp
imul
dec
fstl
adc
push
xchg
dec
pop
mov
cmp
ljmp
push
inc
mov
rcr
dec
pusha
aam
add
pop
mov
inc
jle
add
iret
fists
pusha
pop
mov
sub
or
xchg
lock
loop
in
jno
clc
dec
movsb
fcompl
sbb
divb
add
push
push
mov
sub
lret
mov
xchg
mov
adc
push
mov
xchg
mov
jmp
subl
sbb
nop
fisubs
arpl
lret
jg
mov
fucomi
cmpsb
fstpt
add
jo
pop
int3
or
mov
lods
stc
mov
rcrl
adc
or
and
mov
dec
mov
repz
lret
or
dec
adc
lods
mov
into
or
push
mov
inc
adc
inc
inc
insl
in
push
sub
xchg
loopne
xchg
jge
fs
fistpll
mov
mov
push
clc
jbe
jae
sbb
inc
cmc
cld
aam
push
mov
adc
add
iret
mov
jl
add
mov
dec
add
xor
xchg
mov
dec
and
or
jmp
jle
mov
dec
test
pushf
xchg
aam
xor
lret
inc
inc
cmc
push
lods
sub
xorb
cli
pop
xor
pop
adc
add
and
std
jns
faddl
or
lds
push
and
pusha
cmc
aaa
xchg
add
push
jge
data16
aaa
cli
cs
subb
cmp
mov
pop
or
inc
xchg
cs
push
dec
call
mov
pusha
mov
wrmsr
and
push
sub
xchg
pop
jl
push
mov
cmpsl
ljmp
in
dec
jecxz
lea
testb
lock
pusha
dec
push
xor
xchg
dec
shll
jl
inc
stos
push
les
shll
inc
incb
cmp
out
fistpl
out
pop
sarb
and
hlt
xor
xchg
jno
std
and
xorb
pop
mov
mov
in
cmp
sbb
cmc
int
and
dec
cmp
pusha
hlt
dec
push
and
push
pop
lea
adc
sbb
jge
inc
mov
addl
dec
mov
jl
sahf
ljmp
pop
ljmp
jle
lcall
sbb
shlb
les
or
outsb
jbe
jbe
mov
add
xchg
loope
inc
lahf
test
fxch
imul
push
dec
dec
sbb
add
dec
mov
sbb
rcll
insl
ds
insl
call
or
ficoml
je
inc
into
lock
dec
mov
and
cmp
out
jns
shll
add
or
popa
cmp
sub
pop
xchg
inc
mov
pop
push
pop
sahf
insb
cmp
testb
sub
mov
mov
mov
and
imul
int
dec
clc
inc
pop
imul
push
out
pop
sbb
pop
ljmp
pop
in
sbb
out
nop
int
mov
jl,pt
push
aaa
or
xor
xor
pop
data16
fadd
cmpsl
xchg
insb
test
int3
cli
testb
inc
test
fdivl
mov
das
jecxz
daa
insb
inc
cmp
lret
or
sbb
mov
or
sub
jp
into
dec
xchg
dec
dec
mov
fildll
pop
sti
jb
and
xchg
jle
aas
dec
adc
add
push
sahf
inc
daa
sub
nop
xchg
cmpsb
repz
rorb
xchg
dec
ljmp
cs
jp
push
cld
mov
stc
mov
cltd
cmp
mov
cmp
ffree
xor
adc
in
insb
iret
xchg
test
nop
dec
repz
pop
lret
cs
js
lods
imul
lods
pop
stos
sbb
inc
ror
inc
imulb
sub
dec
xor
sub
pop
pop
pop
cld
sbb
jne
sbb
jae
jo
psubq
jmp
jo
aam
push
into
lret
add
iret
sbb
xor
mov
and
sub
pop
enter
pop
mov
mov
xor
xchg
and
loope
jb
adc
loop
push
push
jne
fadds
ss
scas
mov
fwait
mov
dec
push
sbbl
jbe
call
sub
shlb
rcrl
xchg
pop
mov
filds
or
popl
pop
insb
jg
mov
pop
mov
inc
lcall
xor
add
rcl
jecxz
mov
jns
cmp
js
mov
into
sahf
lds
movsb
or
xchg
sbb
sub
enter
rolb
adc
cmp
jne
or
cli
inc
aaa
or
pop
xor
clc
mov
jecxz
mov
add
mov
and
jae
test
sbb
iret
pop
jae
sub
xchg
mov
xchg
sbb
notb
lahf
add
jge
das
pop
ret
sub
mov
and
mov
lods
fiaddl
and
sub
jb
push
call
mov
mov
sbb
nop
addr16
sbb
or
sti
fidivrs
pop
inc
notl
inc
or
jle
jae
ja
add
aam
hlt
cmpl
push
xchg
dec
sub
outsl
inc
xor
xchg
inc
imul
pop
es
popa
mov
jno
lds
ja
test
ja
ljmp
mov
dec
and
into
add
stos
push
mov
mov
out
push
cmp
fisubrs
mov
sbb
nop
mov
adc
int
aas
repnz
mulb
cmp
cmpsl
repz
or
ret
in
dec
adc
inc
pop
mov
fmull
adc
test
jns
sarb
xchg
cmp
cmp
mov
mov
divl
mov
dec
push
add
push
or
jnp
stos
sub
adc
int3
cltd
out
cmp
jmp
scas
lret
mov
jecxz
xchg
xor
jg
rcrl
add
sub
cli
ret
hlt
add
xchg
int
lret
insl
iret
add
dec
mov
ds
xchg
stos
or
sub
test
mov
jmp
jle
sbb
int3
mov
add
test
fidivl
movsl
mov
imul
push
cmp
ret
outsb
and
daa
cld
ljmp
dec
cmp
fsubs
mov
gs
mov
and
jg
call
mov
xchg
shrb
mov
int
push
pop
aas
xlat
hlt
hlt
xchg
lcall
mov
pandn
adc
xlat
loopne
ds
mov
push
cmpsl
dec
pop
sbb
jmp
sbb
arpl
lock
fwait
outsb
sub
fs
stos
jmp
shrl
cs
mov
adc
in
aam
shlb
in
pushf
shl
aaa
mov
push
scas
out
push
loope
in
mov
lret
inc
push
xchg
mov
icebp
sbb
xchg
data16
mov
stc
aaa
cmpsl
les
gs
mov
push
add
fs
jl
movsb
and
addb
movl
sbb
and
shlb
lahf
jo
ret
scas
xchg
xchg
scas
mov
jne
cltd
roll
cmp
rolb
jae
clc
pop
cwtl
ds
jle
in
sbb
sar
cmp
jmp
test
stos
hlt
inc
xchg
xchg
fucomi
std
mov
pushf
mov
inc
sbb
jnp
test
movsb
lea
insl
sub
or
sub
jmp
jecxz
call
fistpl
mov
mov
sub
dec
mov
push
jbe
notb
push
and
enter
pop
aas
loopne
mov
mov
pusha
pop
push
xchg
mov
leave
jmp
adc
dec
test
push
fsub
xchg
shlb
and
and
and
push
sti
test
sub
inc
push
rol
mov
daa
sahf
xor
shll
xor
cmp
aam
cltd
jge
xor
or
mov
jle
mov
push
sub
rolb
outsb
jb
aam
xor
int3
push
rcrl
imul
and
dec
mov
rcr
mov
int3
mov
pop
ja
insl
cs
dec
daa
and
pop
sahf
push
prefetcht0
fcoml
ret
lret
mov
aas
negb
mov
hlt
into
sub
sbb
andl
in
mov
adc
cld
stos
test
xor
jnp
pop
xor
or
imul
push
loopne
mov
testl
mov
lcall
in
mov
adc
push
add
lock
test
dec
jmp
into
xchg
mov
xlat
push
dec
cltd
sbb
outsl
aas
sub
cmpsl
mov
in
ja
jns
and
jl
push
repz
adc
repnz
lds
bound
popa
inc
cmp
lock
add
in
adc
sahf
iret
push
mov
cmp
movsb
pop
adc
push
inc
mov
pop
rcrb
inc
add
xchg
outsb
out
pop
ret
pop
lret
jo
push
iret
pop
dec
mov
popa
cltd
pop
or
jge
mov
dec
mov
ds
jmp
ljmp
in
push
or
and
push
dec
loop
add
cmp
ficoms
push
xchg
mov
leave
jnp
sub
mov
mov
xchg
add
lods
and
lds
mov
or
bound
pop
mov
mov
adc
add
bound
iret
int
inc
sub
pop
jo
pop
fdivl
and
sbb
cmp
cmpsl
inc
test
aam
cmp
ja
and
mov
adc
push
xchg
jne
out
and
push
arpl
mov
arpl
push
lret
sti
mov
inc
push
into
or
mov
gs
push
sbb
cmp
mov
mov
out
sbb
daa
dec
jne
adc
shrb
cli
cmp
sbb
adc
xchg
xor
and
push
mov
gs
and
mov
subb
loope
lds
pop
jmp
push
andl
jecxz
das
in
in
lret
adc
stos
mov
sbb
sub
push
fdivrl
xchg
or
rcrb
xor
push
mov
andb
lods
add
jl
retw
daa
cmp
test
jnp
or
lret
xlat
in
lea
jp
xor
ret
pop
sub
repz
xor
jbe
adc
fsub
inc
add
mov
jbe
daa
stc
sti
mov
sub
mul
cltd
aas
je
shlb
adc
inc
jb
or
out
andl
addr16
pop
fcomi
xor
xchg
fwait
lods
xlat
mov
adc
pop
dec
adc
adc
fimull
cltd
fs
mov
aad
xor
sub
mov
loope
xor
mov
adc
lock
aad
adc
add
rclb
insl
xor
test
ret
mov
and
roll
or
fildl
lock
and
out
xor
stos
jg
dec
jae
mov
faddl
notb
inc
mov
mov
mov
mov
jne
pop
cwtl
pusha
xor
je
rolb
scas
pop
xchg
cmp
and
push
sbb
cmp
mov
scas
das
and
scas
xchg
out
mov
js
sbb
sarb
in
adc
dec
sbb
xor
int
pop
xor
outsb
adc
pop
or
cmpl
add
cmpsb
push
push
fsubrp
sbb
dec
cli
mov
cmpsb
inc
inc
xor
shl
js
jecxz
or
pop
pop
jne
arpl
inc
dec
mull
cmc
add
mov
push
rcr
and
pusha
out
dec
movl
jl
cmpsl
std
pop
gs
sbb
sub
movsl
mov
or
and
fcomip
mov
adc
inc
add
mov
sub
sbb
mov
or
test
cs
or
sahf
out
or
lds
leave
mov
xchg
xor
dec
iret
out
outsl
jge
addr16
ficoml
out
cwtl
lock
or
sub
xchg
sarl
rcll
divl
and
dec
pop
adc
inc
sbb
mov
dec
mov
pop
adc
mov
pop
adc
jl
add
lods
dec
fbld
and
pop
cwtl
in
pop
lods
lods
hlt
mov
sbb
jo
call
mov
mov
leave
iret
hlt
add
dec
mov
and
add
push
out
inc
pop
mov
movl
repz
jge
jb
push
sub
xchg
stc
xor
popf
shlb
pop
into
or
inc
bound
mov
pop
sub
mov
push
and
insb
inc
ret
jnp
inc
xor
mov
jle
adc
aas
imul
cmpb
dec
jl
inc
cmp
popa
sbbl
sub
lret
loope
cmc
push
cmp
lcall
popa
cli
fstl
testl
ret
mov
xorb
aaa
pop
cmp
mov
inc
out
faddl
lahf
xlat
inc
loope
xor
xchg
fistps
jmp
inc
shlb
push
xchg
jl
popa
cmp
sbb
stc
jae
lds
adc
xor
ljmpw
loop
ljmp
cmp
push
fistps
adc
mov
push
sbb
movsl
nop
outsl
pop
or
js
sub
lret
lock
xchg
ret
or
imul
cld
fs
fimull
mov
and
in
mov
loopne
cltd
cs
incb
insl
stos
mov
ret
bound
lahf
or
mov
mov
jp
lahf
add
mov
scas
scas
jecxz
outsb
popf
stos
shll
mov
sbb
sbb
sbbl
pop
arpl
and
sbb
xchg
sub
addb
or
pop
dec
stc
pop
or
sub
cmpb
pop
mov
sub
mov
gs
xchg
outsb
or
mov
in
sub
out
cmc
cmp
addr16
inc
loop
loope
dec
fstl
adc
mov
jmp
enter
sbb
xchg
mov
fsubr
inc
mov
xchg
aas
xor
popa
cld
push
ja
xor
test
sahf
adc
adc
pop
loope
mov
loopne
cmc
or
add
sbb
out
cmp
mov
fsts
outsl
cmpsl
sbb
imul
jl
push
rcl
daa
ja
xchg
adc
addr16
inc
mov
movsl
add
push
fndisi(8087
dec
fsubrl
jge
sbb
dec
cli
fisttpl
mov
mov
loop
add
inc
sub
xchg
sbb
jbe
aas
jecxz
out
adc
cltd
push
inc
or
lcall
sbb
pop
adc
and
stos
push
jmp
pop
negb
fcmovbe
jb
inc
xor
daa
hlt
mov
mov
push
xor
push
sbb
cmp
mov
pop
inc
push
pop
jae
mov
push
test
add
repnz
push
sub
loop
lret
in
cmp
cs
cmc
inc
ficompl
out
fimull
sub
int3
out
gs
adc
js
adc
iret
pop
stc
adc
sar
out
jnp
in
gs
inc
inc
mov
xchg
mov
add
pop
xchg
popf
sub
gs
jno
in
cltd
xor
add
and
pop
pop
jp
push
mov
mov
mov
sar
xchg
fcmovne
data16
test
push
es
push
xchg
movsl
ss
mov
push
mov
ret
xchg
mov
pushf
mov
gs
ljmp
stos
or
or
loop
rcll
xor
in
pop
xor
loop
into
push
cli
repz
or
dec
call
xor
mov
mov
inc
add
mov
jp
lds
mov
xor
jo
push
cmpsl
sub
adc
int
repz
out
pop
xor
fldl
shll
loopne
jmp
aad
mov
mov
add
inc
sahf
pop
xor
dec
inc
push
dec
test
out
xor
popa
push
daa
aaa
imul
xor
mov
mov
dec
sub
push
sub
dec
jne
pop
pop
sbb
inc
fstpt
smsw
stos
test
je
sbb
push
movsb
nop
adc
imul
dec
in
lods
ja
adc
or
ja
cs
es
addb
cs
jecxz
test
mov
sbb
sti
sbb
jge
adcl
popf
lret
xorl
je
xchg
bound
jno
dec
inc
pop
jbe
test
push
sub
bound
movsb
cmp
jbe
dec
jns
mov
jbe
xchg
popl
mov
jl
pop
jp
cmc
mov
loope
fisttpl
inc
sub
adc
outsl
dec
xor
inc
lods
cwtl
pop
dec
inc
jnp
stc
dec
push
test
lret
scas
insb
mov
and
dec
ror
and
dec
or
push
cwtl
cmpb
das
fs
xlat
sbbl
cmp
inc
popa
mov
sbb
push
ret
push
out
pop
mov
push
int
pop
popa
mov
shll
scas
es
or
pop
dec
pop
jne
popf
enter
pop
jne
sub
imul
fidivs
iret
int3
stos
mov
ljmp
xor
pop
cmpsb
or
fisubrs
push
pop
adc
lds
in
pop
test
and
shl
mov
push
mov
xor
dec
push
inc
jg
cmp
cmpsl
cltd
xchg
sti
sti
add
pusha
cmp
lds
push
mov
out
sbb
insb
aaa
lret
mov
dec
jno
mov
and
out
mov
in
and
mov
mov
adc
push
dec
pop
jg
xchg
or
outsb
cmp
push
jg
push
xor
pusha
mov
dec
popl
pop
cmp
mov
pusha
rcr
out
dec
call
clc
mov
xchg
push
mov
mov
fsubr
sarb
fdivrl
lret
sbb
dec
shrb
fsubrs
and
push
mov
sbb
stos
loop
test
icebp
popa
push
cmpsl
dec
loop
popa
ret
lea
inc
add
jle
mov
leave
addr16
out
lock
rcrb
movsl
xor
stos
lahf
ficoml
int
dec
sbb
aam
test
cs
orl
jmp
mov
outsb
xchg
mov
fstpl
jbe
dec
lret
mov
bound
inc
pcmpgtw
xchg
cmp
push
xchg
inc
adc
and
xor
in
cli
push
pop
or
cmp
popa
cmpsb
xor
lock
lret
ss
push
cwtl
mov
mov
adc
popf
and
int3
pop
xchg
cltd
or
cld
jno
loope
push
hlt
test
popf
lahf
imul
jno
xor
lods
push
xchg
and
and
sub
inc
daa
cmp
mul
pusha
dec
scas
jmp
fisubs
dec
mov
mov
dec
mov
cli
sub
popf
mov
mov
aam
cld
mov
mov
adc
enter
dec
ret
adc
ficoms
lret
pop
sub
jno
les
cmp
mov
mov
xor
mov
cmpsl
out
inc
sub
stos
dec
insb
dec
dec
mov
xor
xlat
mov
pop
loopne
pop
je
adc
adc
fsubs
insb
fs
xchg
add
push
xchg
loop
fstl
or
mov
add
mov
aad
rorb
inc
push
je
xorl
xor
sub
sub
jge
lret
mov
pop
dec
mov
movsb
lea
stos
gs
test
pop
ficomps
jb
cmp
mov
xchg
sti
sub
lahf
cmpsb
gs
shl
enter
mov
lret
je
mov
pusha
stc
jge
daa
xchg
out
pop
jg
mov
rolb
pop
fdivrl
jmp
jecxz
iret
inc
xor
xchg
xor
mov
and
jnp
pop
xchg
and
jge
popa
xlat
dec
insb
ret
add
inc
mov
mov
pop
dec
or
outsl
jge
xchg
xchg
push
test
pop
testl
dec
xchg
inc
or
add
dec
popf
sbb
test
dec
mov
or
pop
cmp
jbe
mov
in
jns
push
mov
into
aam
fidivl
data16
push
mov
cmp
push
test
repz
decb
scas
test
xchg
xchg
push
shll
cwtl
sahf
sti
xchg
push
rcl
adcl
addr16
daa
xchg
push
cmp
xchg
sbb
sbb
mov
rcrb
sub
sbb
and
or
out
jne
addr16
outsl
xor
xor
adc
lods
xor
add
sbb
mov
pushf
cmpsl
lock
test
jp
inc
cmpsb
sub
mov
add
rorl
add
mov
mov
mov
pop
jecxz
lods
mov
inc
mov
fisttpll
jae
in
mov
mov
mov
xchg
orb
daa
sahf
sub
std
or
loopne
call
adc
ljmp
mov
pusha
enter
mov
repz
xor
push
add
and
xor
or
int
xchg
mov
push
std
inc
adc
push
test
dec
test
shl
xchg
inc
imul
xchg
push
pop
int3
inc
sub
xchg
push
pop
mov
popf
mov
jl
inc
jl
test
ja
sub
pop
lret
cmp
mov
mov
mov
jecxz
aas
imul
fldt
aad
mov
hlt
mov
bound
stc
movsl
add
out
int3
sub
ret
cmp
outsb
xor
cmp
sub
sub
dec
das
ja
das
mov
push
mov
enter
push
cmp
sub
int
push
push
jno
in
bound
xchg
les
or
add
xchg
mov
jne
out
push
adc
cmp
dec
xlat
and
out
lods
jecxz
out
nop
cmc
testl
insb
xor
sub
in
xor
mov
and
adc
and
or
lea
daa
sti
repz
mov
arpl
dec
loope
push
sub
cmc
xlat
xor
arpl
add
cli
movsl
mov
dec
je
dec
cmp
rol
cmp
pusha
xchg
lods
gs
adc
subb
fimuls
js
mov
aad
mov
inc
lcall
push
popw
and
ret
dec
inc
xchg
mov
je
ss
stos
pop
inc
lods
mov
sub
out
or
subl
fistpll
out
cmp
cwtl
icebp
xor
mov
call
shrl
mov
inc
xchg
data16
mov
lea
popa
xchg
out
xchg
shll
pop
outsb
pushf
stos
es
lods
rolb
mov
dec
and
pop
dec
jno
or
in
out
inc
jb
lods
sbb
mov
outsl
and
aas
xchg
and
stos
and
dec
arpl
repnz
jg
inc
mov
inc
sbb
call
stc
push
xchg
pop
inc
scas
sti
imull
adc
inc
les
mov
mov
pop
je
pop
and
dec
add
xchg
cmp
ret
enter
sbb
push
aad
pop
dec
scas
mov
test
pop
and
sbb
inc
adc
pop
rcrb
or
out
pop
loopne
push
xlat
sub
aaa
je
mov
add
mov
enter
cmp
sahf
arpl
jg
mov
adc
mov
inc
sbb
lret
sub
clc
aaa
xchg
popa
stos
call
mov
cli
cmp
push
xor
ret
or
call
lret
push
cmpsb
scas
adc
add
lret
add
data16
ds
insl
mov
and
cmp
rolb
sbb
fld
push
push
push
mov
fwait
ljmp
cmpsl
sbb
je
insb
mov
add
lods
push
xor
insl
xchg
mov
push
adc
adc
into
ljmp
fstps
inc
jns
cmp
mov
int
ret
test
out
stos
ljmp
test
add
insl
leave
pop
stos
fcomip
outsl
inc
lods
pop
cmp
inc
mov
pop
inc
or
mov
or
pusha
jl
push
out
cmpsl
inc
dec
xor
xor
dec
fiadds
rcll
jl
cmpl
sahf
fidivrs
inc
leave
retw
popf
jo
and
pop
jae
lds
add
pop
pusha
xchg
adc
cltd
mov
std
incl
xchg
adc
jecxz
sub
mov
jge
push
aaa
jle
fwait
jg
test
pop
scas
inc
dec
pop
inc
dec
jmp
bound
adc
gs
in
dec
pop
call
mov
lahf
lods
or
push
sub
mov
dec
lea
out
lcall
rcll
dec
testl
fmul
outsl
mov
fsub
push
pop
cmp
pushf
jns
push
mov
sbb
scas
dec
imulb
loop
sub
mov
mov
mov
cmp
ret
jo
enter
cld
mov
fmuls
lods
pop
push
stos
xchg
rorb
out
and
call
lds
clc
jno
adc
pop
and
adc
and
and
cmp
mov
icebp
mov
cltd
and
rorb
cmc
insl
sbb
test
and
or
loopne
iret
icebp
sub
add
xor
push
pop
mov
shrb
test
lea
imul
mov
xor
int
out
xor
xchg
cmp
mov
or
pop
fs
adc
push
push
jnp
cltd
jbe
or
es
cmc
or
sub
aas
push
xchg
movsb
adc
sbb
or
dec
jmp
adc
sahf
test
test
xchg
jnp
mov
aas
enter
mov
cwtl
shl
loopne
fcompl
frstor
pop
mov
scas
xchg
insb
in
rclb
jp
dec
add
pop
cmp
cld
inc
notb
stos
shrl
sub
xchg
add
or
add
push
adc
cmp
mov
xchg
loope
push
cmp
pop
inc
aad
adc
xchg
pop
mov
lret
xor
xchg
adc
aas
ret
or
jmp
pop
test
or
jbe
adc
scas
and
add
jne
adc
xchg
sbb
inc
cmpsl
xlat
cmp
imul
lret
leave
mov
pop
addr16
pop
xchg
or
dec
jge
lds
mov
cld
inc
repz
pop
inc
push
mov
dec
in
fidivs
sub
movsl
sti
mov
xchg
divl
and
cmp
sbb
mov
mov
sbb
pop
pop
jns
ss
add
mov
and
pop
pusha
inc
adc
jle
sbb
cmc
or
cmpl
test
and
shrb
shlb
xor
rol
leave
fmuls
jl
and
lea
test
push
jnp
sahf
or
jb
mov
add
or
fidivs
fs
jno
movsl
push
mov
enter
lahf
jp
addr16
jge
xor
and
adc
cmp
test
pop
pop
ss
aam
les
push
mov
fdivl
mov
shrb
mov
push
pop
add
cmp
loop
cmpsb
in
enter
jecxz
fdivl
add
mov
pop
jl
and
pop
sti
pop
dec
aaa
dec
jbe
lret
test
ficoms
rorb
or
js
cmp
subl
jp
mov
je
loop
pushf
imul
orl
dec
iret
mov
pop
xchg
ret
loop
sti
xor
adc
fmulp
jb
out
psubusw
stc
xchg
jb
jns
mov
mov
fisubrl
dec
mov
add
adc
mov
xchg
fsubrl
pop
fldt
inc
add
dec
insl
out
adc
push
add
iret
sub
stc
pop
add
xchg
cmp
dec
repnz
in
imul
or
cmp
adc
add
jg
push
add
jne
mov
arpl
pop
dec
ds
sbb
xchg
jbe
cmp
out
icebp
fcompl
xchg
fnstenv
faddl
inc
sub
insb
mov
inc
frstpm(287
ds
outsl
and
shrb
out
mov
or
scas
outsb
filds
mov
pop
cwtl
cmp
fbstp
roll
mov
jnp
mov
sbb
shlb
cltd
stc
pushf
subb
sub
push
enter
jp
ja
imull
mov
jle
pop
out
mov
mov
in
dec
ljmp
mov
adc
outsb
sbb
dec
das
dec
or
aas
scas
mov
fisubl
push
ficompl
adc
xchg
mov
fucomi
push
in
test
lret
pop
mov
aas
or
jo
outsl
test
jns
jno
fsubrs
imul
bound
out
or
mov
faddp
pusha
add
adc
inc
cwtl
jno
mov
cmp
or
inc
mov
mov
fldenv
pop
or
jecxz
push
mov
mov
push
adc
xchg
outsl
mov
push
ja
imul
inc
inc
xor
push
and
adc
add
lahf
sbb
les
or
shll
lret
dec
stos
jge
int3
push
jl
push
and
cli
pop
cmc
shll
and
outsb
movd
nop
jp
lods
xor
outsl
jo
mov
push
into
jbe
push
push
mov
xorb
and
sbb
loope
xchg
lea
mov
dec
or
nop
or
lds
out
stos
rorl
ret
mov
mov
sub
jge
or
cltd
ds
aas
adc
inc
xchg
dec
je
shlb
push
cmc
dec
out
mov
xchg
addr16
das
in
cli
testb
pusha
pop
mov
xchg
cmp
sbb
lock
sbb
cmpsb
and
jbe
mov
mov
dec
mov
testl
pop
daa
mov
push
lret
inc
testl
mov
mov
in
dec
xchg
or
call
les
jle
jl
sahf
mov
lcall
inc
mov
jns
mov
cmpsl
pop
sub
jns
cmp
inc
aas
jns
mov
popa
aad
xchg
sub
sub
pop
mov
loop
and
or
xorl
add
daa
inc
cmp
xchg
push
lock
test
jns
cld
insl
or
mov
fidivl
imul
xor
dec
in
rcrb
jmp
or
cmp
std
xor
dec
test
xchg
push
and
lret
gs
cli
test
xorb
fsubrp
imul
jb
dec
mov
mov
jns
rcll
xor
push
ficoms
icebp
mov
adc
data16
repnz
or
lret
jecxz
imul
repnz
inc
sub
mov
into
aas
or
inc
mov
add
and
push
xchg
lock
cmc
or
js
and
outsb
dec
icebp
jge
or
test
jp
push
jmp
movsl
daa
fnstcw
pushf
mov
in
lock
lea
inc
mov
sahf
mov
push
iret
mov
push
cmp
inc
pop
in
rcll
or
sub
pop
movsb
leave
test
dec
inc
push
jecxz
mov
cltd
scas
jnp
jl
mov
icebp
clc
dec
cmp
aas
add
mov
pop
stc
xchg
cltd
dec
ficompl
mull
adc
pop
xchg
inc
xor
mov
insl
push
movsl
xchg
cltd
insl
and
loop
adc
jae
xlat
cwtl
ret
push
fwait
rcrl
sub
fwait
ret
daa
mov
sbb
or
push
inc
add
iret
sub
mov
leave
loop
dec
inc
cmp
ret
fstps
shlb
mov
into
dec
in
ret
je
dec
jns
lock
out
xchg
es
fadd
mov
mov
dec
lds
jbe
in
ret
sti
cmp
push
xor
or
push
rcrl
sub
inc
and
mov
bound
test
stos
sbb
imul
inc
xor
push
cld
or
aas
jl
dec
jno
fistl
fucompp
cld
mov
fcmovb
mov
mov
inc
xchg
stos
movsb
dec
lahf
push
mov
mov
mov
ljmp
adc
outsl
sarl
repnz
bound
cmp
cmc
push
xor
scas
cmpb
sub
pop
inc
adc
cmp
jns
ret
lcall
inc
push
jb
iret
cwtl
inc
dec
and
daa
out
out
imul
cmp
lods
out
scas
test
mov
sti
sub
movsb
mov
std
mov
cli
dec
jp
dec
pop
inc
jmp
int
mov
cmp
pop
sub
pop
push
rcr
mov
or
es
out
cmp
sub
mov
add
and
lret
xchg
shl
push
in
iret
dec
shlb
xchg
xchg
sub
dec
ss
fprem
jle
testl
adc
sub
lock
in
shlb
or
lods
mov
jle
mov
divl
cmc
pop
jnp
gs
or
xor
inc
scas
push
int
repnz
or
gs
jae
jbe
mov
movsl
test
ror
scas
js
shlb
pop
popf
jo
push
test
add
and
test
jbe
mov
mov
mov
loopne
jnp
mov
sbb
push
jl
cwtl
pop
inc
rcrb
adc
push
push
or
pop
jae
cmpsb
push
fiaddl
jb
or
cli
add
jnp
shl
fldt
cmp
push
mov
or
xchg
dec
rol
xor
loopne
mov
call
out
mov
mov
lea
jp
add
dec
hlt
cmpsl
ret
enter
or
stos
mov
pop
pop
or
push
mov
xor
loopne
call
insb
jae
push
sub
insl
sti
lcall
loopne
sbb
and
out
ret
xchg
bound
popf
and
subl
outsl
lods
and
lahf
xlat
xchg
xchg
mov
flds
pop
adc
sbb
sahf
pop
cld
pop
mov
addr16
cmp
sbb
sbb
fcmove
mov
mov
pop
cmp
mov
push
imul
stos
pop
aad
dec
pushf
in
test
inc
jne
jmp
je
imul
es
out
or
movntps
xchg
popf
sbb
push
aam
popf
pop
lock
cmpsb
ret
test
fdivrs
idivb
jmp
cli
leave
in
mov
scas
sbbb
cwtl
sub
repz
or
mov
popa
popa
insb
pop
repz
add
or
jg
movsb
je
dec
movsl
mov
fstpl
test
adc
iret
pop
push
mov
shl
fmull
mov
sub
mov
mov
int
adc
faddp
popf
insb
ljmp
iret
cmp
dec
in
adc
or
sbb
mov
jo
cmpsl
cmp
mov
cs
test
ja
movb
inc
ret
sub
mov
rol
enter
ficompl
dec
sub
andb
inc
ljmp
add
jecxz
inc
lahf
xor
es
pushf
dec
push
lds
pop
sbb
les
fadds
and
jbe
add
ds
cwtl
sub
add
outsl
divb
into
testb
test
xchg
push
push
lret
mov
jns
sub
sbb
xchg
loope
mov
sbb
dec
mov
lcall
cmp
push
sbb
loop
push
cmpsb
aas
xchg
cmp
xchg
out
xchg
sub
dec
rol
add
mov
xchg
cmp
int
hlt
fsubp
loope
mov
adc
ds
mov
outsb
dec
pop
jb
mov
xor
xor
stos
pop
mull
out
adc
mov
mov
test
or
xor
call
xchg
cltd
mov
inc
xchg
fcoms
movsb
cwtl
mov
and
cmp
jg
and
mov
sarl
jmpw
mov
nop
dec
andb
pop
inc
push
xor
lret
ret
sbb
cmp
loopne
test
mov
cmp
out
imul
inc
lods
mov
popf
sbb
out
xchg
mov
cmp
jl
adc
xchg
cmp
push
sbb
es
xchg
and
jg
unpckhps
ss
add
jb
jb
and
add
jno
int
pusha
sub
xchg
pop
inc
push
movsb
mov
inc
mov
es
jecxz
int3
or
test
into
sti
ds
movsb
adcb
arpl
push
cmp
add
in
mov
adc
mov
xlat
imul
jg
fnsave
leave
daa
lcall
popf
mov
lea
and
mov
sti
out
test
push
sbb
inc
addr16
xchg
pop
outsl
dec
notl
dec
pop
hlt
lret
push
mov
lret
mov
or
inc
outsl
or
pop
cld
into
adc
fs
push
and
js
mov
shlb
fbld
dec
pop
sti
pop
add
cmp
add
adc
outsl
add
sahf
int
jnp
std
pop
sbb
push
outsb
mov
bound
xorb
xchg
lods
mov
leave
and
iret
jp
push
or
imul
mov
leave
cmpsb
fwait
jge
push
jle
cmp
push
mov
lret
dec
jb
mov
scas
adc
rcrl
mov
and
jo
xchg
adc
mov
imul
hlt
cs
sbb
jnp
insl
rolb
fiadds
xchg
popa
sub
inc
iret
mov
push
movsl
xchg
jp
fwait
lret
std
adc
mov
outsb
out
sub
or
and
andb
mov
cmpsl
and
pop
fsts
adc
sub
mov
mov
mov
mov
jno
pop
push
cli
ds
push
shr
roll
push
gs
adc
jbe
pop
mov
addr16
mov
xlat
pop
xchg
dec
repz
movb
cmpb
pop
fcompl
cmpsl
nop
and
cmpb
push
sub
cmpsb
das
jle
push
xor
mov
or
es
ljmp
mov
lahf
fisttpll
push
add
dec
hlt
outsl
bound
xchg
xchg
js
movd
mov
and
jl
ret
inc
or
iret
fdiv
in
dec
adc
hlt
addb
rcrb
loopne
add
pushf
pushl
and
out
loopne
push
xchg
loop
das
mov
cmp
and
push
or
pushw
mov
and
mov
jae
mov
sub
icebp
adc
aaa
xchg
adc
repz
cld
mov
test
dec
cltd
cmp
mov
jg
cltd
cmp
xchg
loop
icebp
outsb
mov
ret
stos
sbbb
repz
push
je
or
incb
test
lock
jb
pop
xchg
push
call
les
inc
lret
loopne
xor
cmp
pop
insl
in
sub
test
mov
out
xor
ret
cmp
and
xorb
ja
mov
stos
in
or
test
sbb
int
mov
ss
push
cmp
stos
sbb
push
ja
jno
lcall
jp
lret
push
mov
cmc
add
test
cltd
addl
int
add
aas
iret
call
push
daa
pop
push
mov
xchg
stos
fwait
mov
dec
lret
sbb
in
mov
rorl
lods
loopne
jno
jno
leave
inc
dec
mov
sub
shrb
sub
jle
xchg
xlat
push
cmpsb
or
push
mov
int
sahf
loopne
add
out
nop
scas
and
aas
pushf
jnp
popf
sbb
mov
sahf
jg
xchg
xlat
test
pop
pop
out
push
dec
mov
pop
das
outsb
inc
mov
lock
dec
sti
rorb
mov
and
rcll
lods
jecxz
test
push
fdivs
adc
cmp
xor
stos
and
mov
jl
dec
fisttps
sti
xor
mov
cmp
mov
lret
test
jns
aas
movsl
xor
and
sbb
sbb
ret
lea
das
add
sbb
mov
sahf
mov
or
push
and
jns
fs
sbb
fldt
jl
arpl
sbb
or
xchg
mov
into
cmpb
insb
dec
or
dec
dec
mov
nop
je
push
adcb
sub
mov
aas
add
fwait
pop
mull
jae
jbe
mov
mov
sbb
mov
iret
cwtl
outsb
adc
inc
inc
sbb
inc
jns
jo
adcl
cmp
jl
mov
mov
jo
bound
push
scas
mov
jp
mov
mov
push
cs
das
cld
push
xchg
mov
xor
xchg
add
in
adc
mov
les
sbb
outsl
jg,pt
lcall
push
cs
xor
imul
sbbb
leave
sti
xchg
mov
loop
shlb
in
push
push
push
repz
das
jl
das
adc
cmp
push
cmpsl
ljmp
mull
xchg
dec
out
jg
leave
sarl
dec
or
or
adc
or
push
sub
adc
daa
mov
fisubrl
and
or
pop
es
enter
rol
pop
in
bound
repnz
popa
test
in
ret
lods
or
adc
test
daa
add
fsubrs
iret
loop
and
push
clc
jecxz
mov
sub
lret
and
jns
or
movsl
mov
pop
mov
cmpsl
sbb
and
lds
loop
sub
iret
ja
push
or
test
cmp
jns
call
out
pushf
enter
clc
push
push
fwait
lods
loope
adc
es
arpl
rcrl
cs
adc
mov
mov
pushf
jle
add
int3
sbb
sub
adc
neg
test
xchg
sub
aas
mov
je
into
add
cltd
imul
sbb
dec
push
icebp
push
xorb
dec
in
mov
sbb
push
jge
shl
sti
pop
pop
dec
aas
loope
mov
inc
push
jmp
aas
jmp
jecxz
aaa
mov
test
jb
loope
and
push
das
stos
sbb
pop
movsl
sbbl
int3
mov
push
sub
stos
testl
fmull
lock
cwtl
cltd
cmp
dec
lret
mov
add
stos
movsl
inc
mov
test
out
mov
xchg
push
scas
cmp
add
sbb
in
mov
sub
sub
outsl
mov
sbb
mov
enter
cmpsb
stos
push
and
adc
jno
pop
stos
loope
or
inc
addr16
xor
jo
rcl
cltd
push
call
xchg
inc
sub
lret
mov
ja
incl
cmp
and
in
in
add
sbb
inc
or
loopne
addr16
repnz
dec
inc
frstor
fwait
stc
outsl
lcall
loopne
adc
lock
ret
data16
xchg
xor
mov
push
inc
test
sbb
es
dec
sub
into
ret
pop
rcrb
rcl
dec
add
cmp
xchg
stos
pop
nop
out
scas
outsb
enter
mov
and
cmp
inc
mov
pop
inc
mov
push
test
adc
sbb
scas
aas
inc
mov
push
jp
je
fmull
cmp
dec
mov
jb
outsb
test
shll
cmp
push
in
xchg
mov
push
data16
cmovl
test
cmp
cmpsl
fucomp
jge
ja
inc
mov
std
push
bound
sahf
icebp
fmull
xorl
enter
mov
jle
adc
pop
add
out
jle
scas
mov
in
mov
aas
mov
lock
addr16
aad
cmp
in
cmpsb
sbb
cmpsl
sbb
adc
inc
xlat
out
jecxz
jmp
dec
outsl
outsb
inc
adc
lds
jb
jmp
adc
fs
add
xchg
stos
sbb
lret
in
cmp
dec
test
js
imul
test
mov
and
sub
add
add
out
inc
leave
int3
mov
out
sbb
and
or
repnz
mov
mov
sbb
mov
jno
add
std
rclb
sahf
xchg
sub
or
cmp
idivb
xor
stos
cmp
mov
out
add
mov
loope
test
sub
sbb
in
mov
add
ret
dec
enter
cs
xchg
mov
jae
mov
cmp
xchg
insb
xchg
or
je
jecxz
cwtl
inc
jbe
mov
enter
mov
fsubs
movb
jecxz
call
xchg
fwait
je
jne
sbb
je
or
inc
loope
xchg
int3
outsl
sub
cltd
add
inc
or
mov
testb
mov
mov
push
add
icebp
pop
test
mov
sub
sahf
test
das
dec
add
dec
xor
movsl
rorb
std
push
les
push
or
sub
xchg
jne
cmc
movsl
xor
cmp
pop
lods
mov
inc
jg
sub
pop
jo
addl
call
adc
pop
push
push
adc
sub
inc
jno
setns
fimuls
xchg
push
lods
sbb
ret
adc
sbb
pop
icebp
sub
clc
in
jmp
mov
ja
xchg
leave
sbb
cli
call
jmp
jne
lds
out
aad
xlat
iret
or
push
add
push
std
int
lods
fists
daa
imul
xor
lods
jo
pop
mov
xor
ret
xchg
in
stos
inc
aam
mov
xlat
inc
cmpsl
and
jne
cwtl
mov
cmp
inc
in
add
test
cmp
js
and
daa
pop
les
xor
in
mov
xor
adc
and
or
decb
push
xchg
inc
and
add
jne
popf
lods
insb
lcall
sub
in
dec
ljmp
sbb
rorb
shr
adc
lds
xchg
shl
in
fucomp
lcall
push
ret
jge
rclb
pusha
in
je
les
std
sub
mov
inc
aam
in
lods
out
movsl
add
push
loopne
dec
sub
cwtl
pop
dec
into
loop
push
pop
jl
cmp
or
mov
mov
push
push
pop
mov
in
mov
inc
stos
adc
xchg
xchg
pop
mov
lret
jp
repnz
adc
push
push
and
jbe
or
iret
cld
pop
out
xchg
push
rorb
pop
pop
stc
or
mov
jo
scas
and
mov
daa
cmc
dec
jmp
aas
aam
adc
notb
stc
aad
and
lock
xor
mov
popa
cmp
mov
adc
jmp
mov
loope
jp
xor
xor
ljmp
jmp
ffree
mov
ret
int
bound
adc
lock
scas
mov
cmpsb
lods
adc
cs
cmp
inc
add
ljmp
jmp
mov
hlt
aas
cmpsb
jmp
mov
mov
adc
in
pop
sbb
loop
test
pop
pop
cmc
dec
insl
test
lock
fisubl
or
aad
pop
mov
jp
orl
cltd
jle
mov
rcrb
dec
xchg
lcall
mov
into
fidivs
and
outsb
sbb
icebp
add
and
addr16
insl
fwait
xchg
jns
xor
mov
and
push
scas
or
sti
mov
cltd
out
js
xchg
mov
aaa
out
aaa
out
push
fsubrs
lods
imul
lock
or
add
inc
mov
xchg
out
xchg
xor
mov
sub
ret
fldl
addl
stos
imul
jle
dec
jne
fldl
call
clc
mov
mov
sub
sbb
pop
jge
cmp
test
and
ja
xchg
pop
sahf
push
stc
fldt
lods
test
cwtl
jl
jne
xor
mov
lea
pop
mov
cmp
jne
lcall
js
pop
mov
shrl
repz
out
mov
pop
add
fst
push
je
xchg
adcl
sbb
fsubrl
pop
adc
or
leave
pop
ds
jne
cmpsl
out
mov
sbb
jo
jecxz
cmpsb
arpl
aas
lods
in
xchg
imul
fisttpll
push
add
mov
fistl
std
outsb
popf
cmp
testb
mov
clc
or
ljmp
cltd
xor
stos
xor
sbb
inc
in
imul
rcrl
and
cwtl
ja
push
mov
push
mov
notb
sbb
dec
cmpsb
in
adc
cwtl
push
push
xchg
iret
fadds
mov
xor
nop
gs
hlt
cmpsl
jp
sti
jne
adc
arpl
xor
adc
push
cs
imul
cmp
and
cmp
lret
es
jge
loop
and
sbbb
arpl
jbe
push
jne
adc
mov
jl
aaa
clc
stos
dec
push
jle
add
inc
mov
shl
xchg
into
decl
and
jns
inc
loop
orb
xlat
and
xlat
mov
jp
popf
jae
or
stos
adc
push
es
scas
sar
fs
test
out
cmc
jp
and
mov
or
xor
dec
shlb
stos
xlat
divl
repz
inc
fisubs
fcomp
lcall
dec
movsb
xor
cmp
mov
ficompl
adc
fwait
ds
xchg
sahf
cmp
popf
data16
push
jo
xor
mov
xor
cmp
fimull
jo
or
mov
xor
cld
icebp
jbe
aam
jbe
adc
movsb
push
add
cwtl
mov
mov
insl
sbb
jg
pop
mov
ljmp
xorb
ljmp
push
cmc
insb
fucomip
out
xlat
fs
sbb
add
hlt
cs
sahf
sub
and
cmp
out
and
dec
adc
fbstp
sbb
lds
ljmp
jp
fwait
xchg
hlt
es
mov
mov
dec
jo
addl
fwait
add
mov
pop
mov
pop
xor
mov
movsl
sarl
aas
imul
cli
or
clc
adc
dec
mov
js
jg
shll
rcrb
test
popa
and
and
fs
inc
out
test
fs
pop
jnp
pop
xchg
mov
orb
adc
stos
and
or
outsb
jg
jbe
loopne
jmp
pop
je
into
pop
push
push
jmp
push
adc
test
push
dec
cmp
into
mov
xchg
inc
mov
jae
nop
lods
jmp
int
lret
daa
test
repnz
dec
and
fidivrl
and
or
mov
insb
jno
jle
and
loope
lahf
loope
push
sub
and
test
push
inc
mov
mov
dec
mov
push
dec
adc
push
mov
in
or
cmp
cli
outsl
cmp
mov
inc
in
shll
cmp
mov
insb
lcall
sbb
call
inc
test
popf
out
aad
adc
pushf
je
ror
mov
xchg
mov
sahf
movsb
cld
sub
daa
add
mov
fidivs
fwait
pop
add
aaa
icebp
mov
xlat
aas
mov
xlat
out
int
lret
adc
jns
in
scas
dec
stos
in
sarb
sub
adc
movsl
mov
cmp
mov
mov
mov
dec
jge
jbe
loop
pop
push
sub
or
add
ds
mov
push
aas
lock
mov
loop
clc
mov
xchg
pusha
rcr
incl
lock
ljmp
mov
cli
inc
pop
outsl
cltd
or
repz
xor
inc
sub
adc
jle
mov
repnz
sub
outsb
cmpsl
cmp
xchg
fdivr
sbb
cmp
pop
adc
subl
stos
dec
js
xlat
xchg
in
xor
call
xor
jmp
jge
sbb
lea
mov
sub
stos
fdiv
int
fistpll
sahf
imul
aam
jmp
inc
xchg
or
mov
xchg
mov
xor
inc
push
mov
mov
pop
icebp
pusha
push
adc
mov
cwtl
imul
aam
fdivs
mov
ja
adc
fisubs
cld
cmpsl
mov
fsts
push
fs
adc
je
or
popa
cmpsb
or
xorl
mov
or
fcmove
mov
stos
mov
orl
or
mov
int
divw
mov
push
les
xor
cli
testl
lret
stos
popl
stc
in
push
pushf
cmp
pop
cmc
popf
bt
das
aam
ret
lahf
mov
shll
push
cmp
mov
pop
xchg
sub
stos
movsb
loopne
add
cmpb
jbe
jle
cwtl
ja
call
cmp
dec
jbe
cmpsb
push
adc
mov
pop
jmp
rcrl
test
and
push
test
ret
sbb
fmuls
and
xchg
sub
dec
imul
cltd
inc
mov
inc
rorb
sub
pop
add
icebp
xchg
push
rcrb
mov
add
jne
or
hlt
xchg
push
inc
sub
sub
ss
lret
adc
cmc
or
jl
xlat
dec
xor
shrb
inc
popa
rorl
dec
scas
cli
inc
xor
adc
push
aam
ss
movsl
icebp
mov
xor
movsl
mov
mov
dec
mov
push
sbb
fmuls
int3
sub
popf
sarb
cmpsl
add
or
xor
sub
or
je
shrb
push
ds
gs
ret
stos
pop
outsl
in
lahf
mov
xchg
outsl
or
jno
ja
cwtl
xchg
xchg
or
push
mov
or
lret
sub
aam
mov
fidivrs
sbb
mov
adc
jp
std
loop
clc
in
pushf
jp
out
sbb
icebp
es
push
cmp
jecxz
pop
int3
scas
je
push
mov
test
jge
xor
sub
sbb
mov
and
cli
std
std
adc
cwtl
int3
std
jge
pusha
negb
test
cmp
sbb
mov
inc
fistpl
mov
mov
jns
mov
insl
mov
iret
pop
mov
inc
xchg
xor
fisttpll
dec
pop
aam
divl
aaa
jge
pop
mov
xor
in
adc
scas
add
mov
mov
test
adc
test
shrb
scas
pop
hlt
fwait
iret
fcoml
add
cli
fisubl
mov
mov
mov
test
cmp
add
push
pop
out
mov
stos
stc
xor
mov
je
inc
lahf
cli
sbb
imul
stos
rcrl
das
push
out
mov
mov
call
roll
aam
test
lcall
ss
dec
jle
test
fsub
push
push
shll
sub
push
mov
xchg
stc
or
cmp
call
and
cmp
fsubs
add
sub
int3
ret
in
dec
movnti
outsl
adc
add
jbe
std
idivl
out
mov
outsb
sub
fbld
loopne
cmp
ror
add
aaa
inc
mov
clc
sbbb
fwait
test
ljmp
xor
ret
pop
jmp
das
jg
add
notb
mov
in
mov
mov
in
dec
rcrl
jnp
aam
ss
scas
push
ds
sbb
cs
sbb
test
cmp
fidivrl
mov
dec
rolb
pop
add
mov
push
enter
sbb
test
push
jecxz
mov
cmp
lods
add
xor
in
sub
mov
scas
andb
nop
mov
push
push
add
roll
lods
out
pop
ret
jecxz
mov
mov
cwtl
div
fsts
mov
dec
inc
xlat
push
sub
loopne
imul
fidivs
dec
push
lods
in
xchg
dec
sbb
mov
and
push
add
adc
into
xor
fnsave
jbe
dec
inc
out
jb
cmpb
out
add
and
or
loopne
xor
jno
push
iret
aam
push
jle
mov
pop
or
dec
xlat
gs
testb
daa
jbe
push
dec
cli
mov
insl
xchg
mov
mov
jl
xor
stos
mov
sbb
cmp
mov
mov
scas
pop
das
cmp
inc
les
mov
mov
in
adc
sbb
cltd
mov
jns
jb
mov
xchg
mov
pusha
xor
inc
xor
mov
stc
cmpsl
jp
scas
mov
sbb
add
jno
mov
mov
repnz
popa
mov
je
cmp
shr
nop
addr16
fstps
shrl
mov
pop
cs
mov
int
mov
xor
or
push
xlat
enter
mov
inc
sub
sub
sub
insb
and
xor
xchg
test
pop
or
and
lds
fiaddl
popf
add
adc
xchg
xchg
cmpsb
pop
jg
cli
or
mov
notb
test
popa
mov
fsubs
int3
jecxz
sbb
je
mov
andb
cmc
jg
pop
xor
adc
movsl
arpl
sub
jns
sbb
jb
mov
outsl
or
fiadds
scas
pushf
bsf
and
movsb
gs
jg
mov
or
hlt
sub
cmp
xor
sar
push
sub
push
jp
or
stos
stc
pop
xchg
fnstenv
push
or
pusha
push
pop
aas
push
sbbl
daa
jne
shrl
js
adc
test
ds
popl
pop
ret
lods
out
sahf
sarb
outsl
fldcw
sahf
cwtl
out
or
lds
cli
in
or
sahf
sbb
cmpsl
xchg
dec
mov
and
adc
push
scas
pop
out
mov
sbb
mov
cwtl
push
je
pop
push
add
ss
stos
cmpb
in
dec
lods
push
add
and
push
xor
enter
fisubl
jb
shll
xlat
mov
ljmp
sub
jnp
subl
fisubs
dec
sti
add
ja
cmpsb
jle
xchg
jbe
pop
movsl
adc
cmp
pusha
call
mov
sbb
or
mov
setno
sub
test
jb
cmp
lods
jb
cmpsb
in
xor
decb
pop
sub
dec
add
xor
pop
mov
addl
sub
arpl
arpl
stos
aaa
dec
lahf
es
ja
ss
mov
in
iret
mov
or
call
outsl
outsb
sub
mov
arpl
or
sbb
pop
mov
loopne
out
mov
faddl
adc
mov
mov
xchg
xchg
addr16
adc
test
push
pop
out
gs
dec
mov
cmpsl
aad
aas
outsb
pop
jb
mov
outsl
cmc
hlt
aas
jmp
and
adc
aas
cmp
mov
jne
int
mov
hlt
xchg
negb
adc
and
cmp
inc
inc
rcll
repnz
jp
out
push
jne
cld
mov
lods
cmp
jge
sub
mov
xor
jmp
inc
mov
adc
dec
popf
fisttpl
pop
pop
andl
shrl
push
js
mov
cmpsb
dec
incb
rolb
addr16
xchg
in
add
int3
insb
aaa
out
addr16
sub
push
jle
shlb
cmp
movsb
pop
lods
inc
mov
xchg
mov
adc
insl
cvtps2pd
paddusb
push
roll
inc
pop
adc
sti
xor
fwait
push
scas
mov
lcall
popa
dec
insb
shlb
pop
adc
xor
nop
es
or
adc
sub
mov
popa
mov
sub
pushf
aaa
in
addr16
lret
das
inc
stos
cmc
adc
divb
mov
pop
jne
or
ss
xchg
pop
enter
xchg
jns
aad
addl
ss
push
and
and
jae
mov
mov
mov
fsub
sub
mov
jno
xor
mov
cld
outsl
out
stc
cmp
mov
mov
scas
test
jecxz
jg
dec
mov
iret
xchg
ret
cmp
faddl
jmp
pop
loopne
pop
adc
lahf
fldenv
dec
jb
xlat
icebp
jp
xor
mov
addb
push
bound
mov
xor
mov
jnp
add
cltd
xchg
popf
inc
xor
popa
push
push
lods
fs
fsts
es
add
pop
shl
ss
lock
in
movsl
fsubrs
mov
lahf
lock
xlat
or
stos
ljmp
push
mov
mov
sub
pop
and
sbb
mov
push
inc
int3
sbb
stos
xor
push
aaa
sbb
repz
mov
das
shll
jmp
int3
mov
inc
add
lock
mov
jo
ss
lret
scas
mov
faddp
testl
push
sub
pusha
inc
cmp
sbb
push
cli
fbstp
ja
push
sub
pop
lods
jmp
in
dec
test
xor
push
inc
leave
jnp
cmp
xchg
dec
xor
and
ficoml
cmc
jb
jge
push
and
dec
lods
test
stos
imul
and
add
bound
push
push
orb
xchg
cwtl
mov
dec
or
push
lret
inc
mov
pop
setg
movsb
arpl
fxch
mov
stos
pop
pop
insb
inc
and
xchg
test
cwtl
xor
xor
dec
sbbb
imul
ret
mov
jno
mov
and
xchg
je
mov
mov
out
jbe
cmp
mov
inc
sar
in
and
in
adc
adcb
into
mov
shlb
jg
shlb
lock
and
and
or
push
inc
mov
cmpsl
inc
test
into
insl
jge
or
ss
loopne
push
sub
out
and
xchg
in
mull
cmp
nop
jae
dec
add
push
popa
loopne
jb
dec
imul
mov
push
mov
or
jnp
pop
std
pop
stos
das
or
das
pushf
pop
test
repnz
add
sub
pop
enter
je
cltd
decl
repnz
jns
shrl
sahf
aaa
popa
xor
fdivrl
mov
mov
push
stc
xchg
enter
outsb
loop
in
add
push
dec
and
xor
aaa
loope
sub
sub
scas
mov
cltd
mov
mov
sahf
sahf
into
popw
push
inc
jg
push
xorb
movsl
int
lret
cwtl
mov
fcmovnbe
sarl
cltd
add
loopne
push
clc
je
in
repnz
lea
rcrb
lahf
daa
lods
push
inc
adc
repz
pop
xchg
cmp
sbb
mov
ja
das
je,pt
out
dec
dec
lret
leave
mov
dec
mov
mov
aad
xchg
stos
jg
sub
mov
jmp
and
sbb
ljmp
test
scas
xchg
ss
call
jecxz
xorb
add
pop
push
sbb
fldl
push
pop
mov
jge
fists
push
add
cmp
pop
add
dec
icebp
std
andb
mov
xor
hlt
inc
add
cltd
pusha
lret
cmp
pop
clc
add
inc
xchg
notb
cs
fs
sub
push
adc
rcrb
push
mov
pushf
sbb
scas
jmp
xchg
repz
imul
and
mov
lahf
int3
loope
fstps
mov
mov
sub
dec
jns
mov
adc
xchg
enter
pop
arpl
lock
test
sbb
or
hlt
dec
mov
in
dec
xorl
inc
ds
cmpsl
insl
mov
push
add
out
das
and
stos
mov
loop
adc
jns
xor
xor
mov
cld
push
popf
lds
and
cmp
sub
mov
mov
std
out
aaa
cmc
sub
test
fbld
outsl
mov
stos
jge
adc
sbb
cmpsb
gs
loop
shll
popa
and
push
adc
or
pop
test
push
lcall
lret
js
xchg
inc
daa
lds
jns
jl
stc
insl
fidivrs
stos
jae
ja
push
add
mov
and
pop
cmp
push
fcom
mov
mov
into
cmp
ret
adc
loope
testb
cmp
sbb
lcall
cmc
stos
lcall
push
inc
orb
subb
bound
push
das
fimull
sbb
adc
pop
es
inc
popa
xchg
jp
ss
divl
xor
sub
pop
test
jp
cmp
stc
pop
cmp
fbld
dec
or
lahf
test
enter
sbb
cmp
fstps
sbb
mov
xor
test
jmp
cmpb
lret
xchg
repz
xchg
cli
out
inc
mov
stos
push
test
push
mov
mov
scas
jbe
sub
mov
cmpsb
pop
mov
mov
in
daa
lock
mov
lret
mov
sub
sub
jmp
mov
or
dec
dec
inc
adc
dec
mov
addr16
insb
in
cltd
dec
push
inc
aad
inc
nop
inc
xchg
inc
stc
outsb
je
inc
into
and
pop
or
movsl
ds
out
ret
arpl
mov
adc
stos
lea
cld
negb
ss
adc
mov
or
clc
popa
push
or
adc
pop
daa
xchg
jnp
and
and
imul
pop
push
in
inc
lods
pop
lahf
out
es
aaa
cmp
cli
movsb
testb
cmpb
adc
push
mov
in
imul
mov
xchg
cli
cmp
jecxz
scas
into
pop
push
mov
xor
mov
push
fmull
sub
sub
pop
xchg
jmp
inc
leave
mov
in
mov
mov
sbb
mov
sbb
xchg
mov
ja
clc
lds
add
cmpsl
mov
insb
repz
loope
add
scas
rcrl
sbb
inc
or
sbb
pop
jg
in
stos
inc
inc
pop
pop
dec
adc
xor
enter
xor
clc
adc
lahf
fs
adc
fsts
push
ja
jo
call
repnz
or
nop
outsl
adc
loop
test
jnp
xor
out
mov
cmp
scas
mov
and
mov
call
and
in
mov
adc
jb
push
sub
inc
mov
clc
dec
xor
cmp
cs
dec
pop
rolb
test
cld
out
cld
xor
insb
xchg
pop
pushfw
fnstcw
es
std
mov
push
jno
idivl
pushf
mov
jge
jne
mov
sub
cmp
mov
jp,pn
scas
jecxz
dec
inc
add
push
sub
push
dec
daa
iret
or
imul
dec
jbe
clc
icebp
aam
fs
lods
fiadds
jge
sub
fadd
mov
cmp
push
outsl
or
loop
fwait
pop
dec
test
clc
inc
je
sub
in
add
gs
jne
and
popf
call
inc
outsb
in
popa
es
dec
cmpb
andl
inc
xchg
sub
int3
movb
push
push
das
stos
push
test
frstor
fistpl
jge
outsl
mov
cmp
hlt
mov
test
mov
out
mov
adc
jg
add
loopne
cmc
pminub
insl
clc
aad
or
shll
mov
in
mov
imul
aas
int3
popf
jecxz
mov
sbb
push
movsb
sub
ret
mov
or
das
inc
pushf
inc
divb
out
add
jmp
scas
leave
out
int
or
xchg
sub
cmp
or
xlat
fisubs
sbb
xchg
ds
in
fisubs
inc
stc
add
dec
push
xorl
or
inc
faddl
push
je
fldt
in
mov
rcrb
nop
dec
ror
push
pop
ljmp
lcall
push
xor
int3
mov
scas
pushf
cmc
rcr
push
sub
sub
aam
or
cmp
inc
sub
outsb
pop
callw
sbb
jle
or
lret
fistpl
mov
test
clc
cld
lds
fwait
push
mov
inc
subb
adc
cmp
in
out
jae
mov
fidivrl
lock
aad
test
jne
ss
pop
mov
jp
mov
pop
push
pushf
movsl
jo
int3
lds
cmp
aaa
enter
inc
lods
into
jne
xchg
push
mov
mov
js
enter
mov
xor
or
movsl
adc
jbe
jns
lock
sbb
dec
pop
fcomps
test
mov
lea
leave
inc
push
les
adc
mov
mov
shll
fists
in
int3
jb
or
jo
outsb
xchg
stos
addr16
sub
repnz
xchg
cltd
and
fsubl
je
xlat
int
mov
push
and
leave
cld
test
sbbb
jo
andb
jb
inc
fs
inc
cmpsl
cmp
loopne
mov
and
imul
sub
test
mov
push
cmp
mov
in
mov
loop
and
adc
push
std
out
imul
inc
scas
jnp
pop
out
out
fidivrl
out
mov
enter
push
jbe
jb
js
push
jp
fwait
leave
pop
mov
pop
sub
pop
orb
lcall
arpl
movl
cs
sub
add
pop
dec
fidivl
shll
or
call
movsb
cs
jp
sarb
daa
mov
dec
mov
mov
das
pusha
push
testl
repz
jnp
and
pop
fsubs
cwtl
pop
cmpsl
movsb
popa
sub
adc
lods
jge
or
xor
dec
fcomps
mov
loop
fisttps
ficompl
or
subb
cmp
xchg
lds
sbb
call
xchg
movsb
cmc
dec
popf
sti
daa
cli
pop
inc
mov
mov
iret
and
or
jmp
add
stc
adc
mov
sub
jnp
in
mov
push
rolb
mov
lock
arpl
cmp
jo
je
mov
lahf
or
iret
les
jno
or
shrl
sbb
jg
mov
out
movsl
cmpsl
and
push
mov
sub
ljmp
imul
adc
mov
fwait
es
xor
lcall
xchg
and
sub
lods
push
lock
xchg
jo
pop
sub
pop
mov
mov
pusha
into
cld
test
jb
xchg
sub
sub
mov
xchg
push
and
das
mov
test
add
std
out
repnz
testb
fimuls
sahf
push
pop
xchg
dec
xchg
mov
or
scas
inc
jecxz
pop
loopne
pop
sbb
cmc
push
push
push
sbb
jns
jp
add
ret
loope
sbb
sub
loopne
out
or
push
push
mov
imul
std
jecxz
adc
js
test
scas
mov
mov
jnp
and
enter
and
push
bound
dec
and
jle
jns
xchg
jne
sub
inc
add
dec
xorb
or
sbb
cwtl
lret
pop
faddp
mov
test
lods
or
jg
sub
mov
loopne
mov
push
pushf
add
in
mov
add
sti
cmpsl
fcmovnu
dec
or
mov
fidivl
lret
cmp
and
out
xchg
jg
pop
xor
mov
repnz
cmp
inc
imul
add
mov
aam
inc
or
or
mov
or
repnz
xchg
and
add
pop
pop
mov
cwtl
ficomps
mov
lcall
fdivs
cli
movswl
imul
add
popa
rcr
and
xchg
jecxz
pop
xchg
pusha
push
mov
notl
xchg
test
aaa
test
loope
sbb
xchg
or
dec
pop
dec
pop
push
sub
dec
jbe
sbb
cmpsb
test
lea
and
mov
or
inc
cltd
popf
imul
jmp
lods
sbb
aaa
pop
das
or
push
stos
xor
sub
std
jno
inc
and
push
xchg
jg
mov
sub
pusha
sub
pop
and
mov
jp
aam
mov
ror
add
or
adc
mov
mov
adc
add
insl
js
mov
push
lods
cwtl
add
or
mov
jnp
cmp
xor
fsubl
movsb
rclb
dec
outsb
add
xor
arpl
loop
lret
dec
or
sahf
dec
adc
fadds
pop
clc
jo
fdivl
sbb
xor
ficoms
and
and
inc
arpl
insl
faddp
push
sub
daa
repnz
cmc
out
sbb
mov
ljmp
xchg
jo
mov
cli
sbb
inc
pop
movsl
int3
out
sub
xor
lahf
stc
mov
aas
test
xchg
ja
std
out
insl
int3
push
aaa
data16
insl
cmp
lods
movsb
jnp
dec
js
andb
mov
xor
mov
out
inc
jl
and
sbb
push
pop
aas
je
das
movsl
adc
jmp
jle
sub
cwtl
jbe
push
mov
fcoms
mov
outsl
mov
or
clc
jle
sub
lods
pop
ret
addr16
out
sub
repnz
push
inc
jecxz
push
sub
ja
push
test
insb
push
pop
subb
adc
sub
ds
and
push
cmp
loopne
stc
pop
cmp
mov
imul
ds
add
mov
mov
sbb
imul
roll
mov
in
push
fdivs
idivl
pusha
xor
sbbb
push
sub
ss
popa
aas
push
inc
xchg
sub
sbb
insl
sub
popf
push
or
push
mov
mov
test
stc
inc
pop
xchg
pop
xor
push
test
rol
fld
aas
cli
jne
movsl
cmp
pop
dec
inc
mov
not
adc
sbb
ficomps
mov
std
test
adc
hlt
nop
cmp
sub
xchg
push
push
sti
in
cmp
or
sbb
add
inc
jecxz
movsb
sub
cmpsl
adc
push
lret
jge
xor
adc
pop
inc
xchg
sub
push
mov
mov
mov
scas
dec
in
cmp
xor
rorb
call
sub
testl
pusha
out
or
xlat
adc
test
std
jp,pn
xor
in
push
mov
add
mov
lcall
push
pop
aas
adc
add
orl
iret
xor
mov
push
cmp
push
push
loop
scas
mov
jmp
es
repnz
std
mov
sub
sbb
loopne
mov
jl
lret
pop
cmp
fdivs
cmp
lahf
push
cmp
scas
sbb
dec
test
mov
lods
lahf
inc
test
mov
sbb
pop
inc
push
push
and
nop
push
xor
jg
inc
lea
inc
inc
xor
out
stos
push
cmc
mov
nop
cs
mov
movsbl
lods
xorb
pop
es
mov
mov
cmpsl
lcall
iret
dec
data16
cs
in
xchg
aas
out
push
cmp
jo
fists
mov
adc
pop
je
or
aam
xor
pusha
and
xor
shrb
js
push
cmp
les
and
clc
pop
sarl
jl
daa
nop
sbb
and
stc
and
fsts
call
cmpsb
xor
cltd
icebp
cmp
xchg
sbb
test
addr16
sub
andl
push
inc
lcall
in
xor
imul
cmp
test
sbb
mov
in
pop
stc
lods
in
cmp
gs
pop
adc
mov
sbbl
push
les
fbld
push
mov
pop
xchg
mov
and
mov
ds
lods
or
pop
nop
js
lock
xor
dec
inc
and
or
enter
and
data16
jbe
and
imul
repz
xchg
dec
imul
xchg
cmp
pusha
fcomps
xor
xor
mov
cmp
xchg
fisttps
cltd
stc
shl
lock
jne
push
inc
popa
cmp
push
cld
and
ds
fs
push
rcrl
mov
int
int
std
popf
sbbl
cmp
imul
jl
jo
addr16
add
mov
add
lcall
mov
lret
add
imul
pop
insl
cmp
fwait
jae
aam
jecxz
mov
add
adc
out
dec
mov
mov
and
lds
push
jmp
ret
add
ja
sbb
jp
mov
je
jno
lock
jae
cld
mov
or
mov
mov
lcall
adc
in
jae
xchg
mov
rorl
mov
jle
cmpsl
mov
outsl
xchg
jo
fsubp
add
int3
dec
pop
shll
test
xor
js
insb
imul
ret
psrlq
sub
add
push
clc
xchg
mov
outsb
jne
cwtl
addr16
dec
pop
xor
lds
mov
pop
jnp
fcomp
lahf
pushf
adc
scas
and
loope
lcall
lods
adc
inc
pop
in
dec
sub
es
ss
mov
loopne
push
or
lock
popa
repz
sarl
and
pop
cwtl
pop
and
aad
pop
inc
push
lds
in
mov
je
sbb
cld
daa
imul
jb
xchg
mov
es
push
adc
jne
jb
jl
mov
sbb
popa
push
dec
push
add
iret
pop
sub
pop
les
add
push
inc
xchg
sbb
pop
or
add
idivb
dec
les
aas
add
sbb
in
and
cmp
push
jne
xor
mov
adc
sub
mov
sbb
dec
aaa
fsts
insb
push
int3
pushf
fidivs
jne
push
loope
bswap
repnz
and
or
fwait
xor
stc
mov
pusha
in
cs
imul
push
adc
add
gs
pop
test
lea
jns
stc
je
test
mov
push
xchg
cwtl
pop
or
scas
lahf
movsl
mov
xchg
adc
ljmp
not
sbb
out
mov
inc
fldenv
sub
xor
dec
ret
imul
dec
or
scas
mov
pop
loop
add
mov
jp
idivb
xor
jge
dec
or
cmp
cmp
push
push
dec
sub
xlat
inc
and
fs
jae
rorb
push
pop
push
inc
or
mov
fdivrp
ret
mov
or
inc
sahf
xchg
or
ss
pop
ds
mov
stos
lcall
in
punpcklbw
fstp
mov
stos
pop
out
inc
sbb
lods
adc
shlb
dec
es
mov
xor
pop
sub
inc
mov
imul
stos
lcall
sahf
cltd
add
jmp
mov
inc
jle
xor
inc
cmc
lods
cmp
addb
mov
push
into
mov
les
jg
inc
subb
and
js
sub
xor
in
pusha
fcompl
and
loop
jg
imul
and
pop
jg
or
std
mov
xchg
and
xchg
testb
std
sub
gs
test
push
or
stc
pusha
jno
and
test
icebp
dec
insb
inc
jp
jno
push
fs
rcr
mov
hlt
add
in
push
xor
sub
push
or
cs
ds
pop
push
jns
pop
leave
pop
push
movsb
xor
or
inc
inc
adc
sub
lods
sub
jbe
cmp
lock
shlb
into
js
inc
sahf
loope
cld
mov
jmp
sub
lods
add
push
aas
mov
stc
pop
mov
cli
shlb
sbb
mov
pushf
sahf
neg
add
xlat
jbe
ds
sti
cmp
pop
mov
imul
ljmp
fnstsw
adc
xchg
iret
outsb
mov
pop
xor
pop
sbb
out
popa
das
push
xchg
inc
inc
fidivrl
lahf
lret
jmp
bound
cmp
xor
and
sub
pop
andl
addb
es
lcall
or
push
fidivrs
xchg
cmp
insb
addr16
test
mov
sub
cmp
fucomp
xchg
sub
cmp
sub
in
xorb
or
push
push
es
mov
xor
int
cmp
ds
loope
pop
xchg
notb
mov
aas
mov
lock
fisubrs
dec
add
shl
xor
gs
es
or
rcll
icebp
cld
xchg
cmp
mov
dec
es
arpl
mov
mov
sbb
leave
pop
fucomip
mov
das
in
pusha
dec
and
or
imul
add
int
sahf
sbb
bnd
jmp
test
std
cld
push
inc
subl
pop
add
dec
subb
sbb
jl
ret
adc
sbb
ja
bnd
out
cmp
xchg
std
insb
ret
mov
or
inc
xor
mov
adc
add
pop
mov
ds
push
push
inc
mov
leave
push
pop
xchg
aad
or
movsb
cmpsl
pop
sub
mov
cmpsb
inc
je
std
mov
test
pop
push
aas
add
dec
xchg
fs
fadd
sub
addr16
pop
cmpsl
xchg
jl
xchg
movsb
mov
insb
dec
mov
add
push
and
fwait
dec
std
push
cmp
in
arpl
xchg
add
mov
icebp
inc
adcb
movsl
inc
add
fisubl
fsubrl
xor
mov
xchg
pop
sub
loopne
aam
in
outsl
dec
arpl
adc
mov
mov
jb
popf
mov
pop
inc
je
cmp
clc
and
and
jbe
and
int3
pop
adc
push
lret
mov
enter
and
jne
ss
sahf
test
dec
xorb
decb
dec
pop
sbb
call
fcom
jb
cmpsb
test
lock
pop
add
bound
lea
and
mov
jg
imul
mov
pusha
sbb
aaa
push
adc
subb
rep
inc
int3
lret
inc
jnp
clc
mov
ret
sbb
pop
imul
aam
stc
iret
das
std
sbb
sub
test
mov
ret
cmp
ror
das
jo
push
mov
cltd
out
test
or
mov
scas
and
mov
jmp
or
push
add
gs
out
xor
pop
jl
inc
sbb
cltd
enter
inc
loop
mov
mov
mov
inc
ja
iret
scas
movsl
jo
rolb
inc
lcall
push
lods
aam
jmp
sbb
lret
insb
aaa
scas
lock
addr16
or
xchg
movsb
call
jo
xor
mov
sbb
adc
push
rorl
xor
decl
into
iret
inc
fs
adc
repnz
aad
mov
jae
cmp
lods
adc
dec
push
inc
or
xchg
inc
adc
insl
data16
in
mov
jecxz
in
repz
insl
out
xchg
mov
pop
rcl
jle
inc
lret
push
inc
inc
jecxz
sub
add
jns
jnp
arpl
cltd
push
arpl
mov
inc
jo
lds
and
mov
xchg
aas
inc
lods
mov
or
jb
push
pop
sbb
in
mov
jb
pop
shrb
xchg
loop
fs
pop
in
sbb
lret
stos
insb
xor
imul
fists
andb
cmp
jmp
or
sahf
sbb
xchg
std
shlb
xlat
enter
mov
out
and
jbe
adc
xor
imul
insl
gs
xlat
sub
shl
movsl
out
inc
outsl
in
xor
lock
in
js
cs
push
dec
outsb
jo
xor
xor
xor
scas
ja
ljmp
data16
loope
xor
rorl
and
or
adc
adc
cmp
fwait
cmpsl
test
push
add
pop
xlat
jmp
add
dec
mov
inc
push
dec
mov
pop
daa
arpl
or
test
insl
sahf
pop
jecxz
pop
sti
mov
rcll
lods
jl
pandn
icebp
pushf
xor
ljmp
insl
mov
sub
cmp
pop
lahf
das
inc
call
push
in
xor
push
into
jns
out
add
push
pop
stc
sub
mov
call
or
outsl
imulb
or
push
mov
ljmp
inc
sbb
and
test
shrl
gs
sbb
xor
inc
imul
lcall
fisttps
inc
xchg
fwait
mov
cmc
test
sbb
fdivr
loope
in
xor
shrl
push
leave
push
sahf
mov
addb
nop
jge
repnz
enter
add
int
mov
in
mov
or
pushf
ror
xor
mov
adc
mov
pop
pop
fisttpl
dec
push
adc
pop
xorb
ret
ret
push
jge,pt
cmovp
pop
outsb
xchg
or
push
sub
adc
bound
jns
sahf
addr16
sbb
call
gs
pusha
repz
pop
push
fisubs
xchg
jecxz
xor
sub
xor
mov
xchg
jns
inc
popa
sbb
test
xchg
pop
inc
lods
xchg
stc
push
lods
rorl
aas
and
insb
lret
or
outsl
adc
or
mov
dec
xor
repnz
ljmp
cld
jl
cmc
scas
movsl
mov
cmp
out
mov
cmp
loop
pop
ljmp
push
imul
js
sub
lods
sbb
add
stos
int
in
pop
hlt
xchg
sar
and
add
lret
js
or
out
divb
movsb
in
fiadds
xchg
lods
cli
cwtl
push
cmpsl
sub
je
xchg
mov
stos
xor
jecxz
xor
arpl
push
ss
jnp
out
jg
lea
push
jae
xchg
sub
fistpl
cmpl
and
fistps
pop
stos
call
adc
add
dec
rclb
mov
push
sub
adc
xor
or
ret
aaa
add
ret
mov
aad
lret
in
pop
push
or
aaa
bound
jnp
dec
int
rclb
sahf
mov
lea
call
jbe
fldenv
cmp
sub
cli
daa
int3
push
out
xchg
repz
jp
aas
xor
test
inc
lcall
roll
cmpsb
daa
sub
xchg
push
push
cmp
add
popa
mov
mov
sahf
mov
adc
lahf
mov
push
push
cmp
cmp
out
hlt
xor
insb
pop
sub
pop
je
mov
das
sbb
sub
xchg
mov
stos
adc
scas
bound
enter
loop
push
out
mov
add
xchg
sarb
sbb
fmul
jno
cmc
jb
jl
pop
push
xorl
stc
inc
sub
lds
gs
xor
stos
dec
mov
pop
mov
add
lods
cmp
stos
sub
xchg
xor
pop
and
xchg
pushf
fcomps
cwtl
mov
aas
lea
out
or
mov
lods
adc
inc
cmc
or
insl
xchg
xlat
dec
pop
lahf
sub
pop
inc
cld
jle
je
jecxz
call
daa
sbb
stos
cwtl
sub
sub
addr16
jbe
jmp
sbbl
cmc
push
xor
jl
loop
mov
dec
rcrl
bound
mov
adc
mov
push
xor
addb
mov
repnz
mov
stos
push
test
xchg
popa
movsl
mov
inc
fstl
test
push
outsl
push
stc
or
icebp
jo
pop
lea
movb
jae
adc
test
mov
push
xor
les
lds
mov
rcl
in
inc
fsts
fildl
stos
jne
jae
sbb
xor
add
mov
adcb
jbe
and
mov
push
cmp
mov
xchg
sub
ret
hlt
xchg
cld
sbb
or
in
xor
repz
mov
push
push
in
mov
xchg
jecxz
sub
into
add
mov
jns
mov
dec
pop
stc
test
sbb
mov
data16
in
fisttpll
outsb
scas
mov
jo
in
mov
movsb
mov
cmp
sbb
ja
arpl
bound
xchg
mov
loop
fisubrl
js
jo
xchg
or
stc
pop
xlat
dec
mov
and
es
fmul
aad
xlat
je
cmp
xor
int3
dec
cmp
mov
mov
mull
cmp
push
rcrl
pop
xchg
lods
int
xor
in
sti
push
fisttps
mov
ds
mov
jne
push
in
lcall
jmp
adc
xor
adc
out
jae
mov
mov
xchg
outsb
cwtl
repz
loop
mov
cltd
shll
sti
cld
pop
inc
enter
dec
mov
and
ja
pop
adc
push
enter
pop
rcrl
lcall
imul
movsl
pushf
mov
mov
or
ss
xchg
imul
jb
mov
test
imul
push
cmp
lds
loopne
push
addr16
mov
test
mov
add
mov
jno
jl
push
pop
inc
int
das
aad
pusha
fadds
inc
push
cwtl
add
and
sbb
lds
in
js
movsb
leave
cmpsb
addr16
mov
xor
jg
bnd
push
cltd
lods
mov
push
fs
add
mov
xor
mov
int3
inc
jg
mov
cld
dec
xor
jmp
xchg
sub
inc
pop
fs
jl
ss
lahf
adc
jecxz
push
pop
push
xchg
es
adc
cmpsl
xchg
mov
pushf
sbb
sbb
shl
repz
pop
test
xor
lcall
pop
jbe
push
and
ja
pushf
mov
in
cld
popa
adc
mov
icebp
push
std
xor
je
mov
iret
pop
loopne
xor
adc
mov
jb
outsl
xchg
push
es
repz
out
movsb
mov
inc
in
ficoms
outsl
or
sarb
or
mov
mov
imul
push
adc
xor
enter
add
sbb
mov
into
sbb
or
sahf
and
sub
mull
push
mov
fcom
data16
jecxz
ljmp
mov
push
insb
out
mov
push
adc
lahf
std
mov
test
add
iret
clc
jp
hlt
into
pusha
out
push
adc
push
mov
mov
inc
dec
adc
nopl
ret
jle
clc
add
cmp
iret
lods
daa
loope
popa
sbb
test
sahf
dec
out
aas
adc
scas
mov
enter
pop
mov
cmp
outsl
cmpsb
loopne
mov
mov
adc
pop
xor
imul
mov
faddp
push
xchg
sti
dec
aaa
lds
pop
xchg
insl
push
adc
outsl
inc
push
mov
jb
push
push
jns
fcmovbe
xchg
jno
popf
and
insl
in
sbb
and
jl
out
aam
adc
xchg
jbe
clc
add
bound
push
push
lret
cld
cmp
inc
xchg
lods
enter
and
mov
enter
sahf
scas
out
fs
inc
pop
xchg
and
cld
cmc
pop
push
inc
push
in
out
repz
out
int
mov
cld
loope
mov
aas
jg
les
adc
scas
cmp
insl
ja
and
sarl
sub
jne
pop
hlt
cmp
lret
mov
jns
sbb
mov
cmpsb
sbb
inc
mov
sub
ljmp
loope
sahf
push
in
cmpsb
pop
mov
or
dec
jmp
popa
xor
inc
int3
jo
icebp
jae
dec
popa
pandn
mov
pop
je
push
push
push
pop
and
jecxz
stos
sbb
and
sahf
rcrl
push
xchg
jb
outsb
xor
or
arpl
add
popa
jae
imul
pushf
mov
xor
mov
dec
add
pop
insl
test
iret
lock
jl
mov
sbb
mov
aam
add
inc
stos
jmp
bound
int3
inc
jnp
inc
mov
xchg
sbb
mov
je
sti
inc
clc
xor
push
pop
fistps
mov
jb
inc
push
adc
dec
sub
in
push
repnz
add
movl
push
or
cli
lret
and
leave
pop
pop
shlb
cmp
mov
pop
sbbb
mov
sbb
sbb
pushf
fs
or
cmp
cmp
jne
iret
faddl
mov
mov
mov
repz
sbb
cmp
and
dec
nop
imul
pop
jo
cwtl
cwtl
push
inc
ret
push
adc
jg
or
call
sub
shlb
clc
jo
cli
lcall
xchg
or
cmp
jne
fwait
xchg
and
mov
test
test
fldenv
dec
into
dec
pop
mov
insl
mov
mov
je
leave
sar
mov
insb
dec
mov
mov
out
sub
jmp
mov
pop
cmp
pusha
xchg
jo
clc
insl
cmp
in
ficompl
push
mov
and
jg
and
mov
int3
das
sbb
repnz
add
jp
dec
repz
add
adc
rorb
xor
and
mov
sahf
xchg
xor
mov
add
imul
pop
nop
popa
outsb
xchg
in
adc
cmpsb
cmp
hlt
adc
lea
or
inc
xor
sbb
and
dec
jp
loopne
ljmp
adc
call
dec
mov
dec
nop
sub
push
shl
test
mov
push
subl
add
jbe
leave
jl
and
arpl
lods
aas
mov
daa
or
cwtl
mov
lret
push
ds
in
jae
cmp
sub
lea
ficoms
fcoms
ds
inc
iret
sub
xchg
cltd
cltd
adc
sbb
adc
xor
inc
mov
pop
bound
push
divb
stc
scas
das
dec
or
popf
sbb
imul
dec
ds
dec
inc
mov
leave
mov
into
sbbl
ja
sbb
lock
adc
movsl
xor
jecxz
insl
pushf
int
cmpsl
out
inc
rcrl
xor
jp
pop
or
sbb
inc
push
fsubrs
int
push
adc
int3
mov
loop
std
aaa
mov
pushl
loope
mov
xor
lods
sahf
rcll
ss
pop
popf
mov
lds
jl
cmp
or
stc
mov
xor
vandnpd
or
rclb
sbb
add
mov
ss
push
adc
cld
mov
mov
pop
daa
pop
add
sbb
clc
xlat
sub
xlat
dec
data16
jbe
pop
movsl
std
pusha
in
jecxz
in
lret
ficompl
push
push
xor
test
sub
xlat
int
pop
cmpsb
pop
push
in
jno
aam
push
xlat
fwait
lea
icebp
xchg
xor
into
jbe
sbb
push
mov
lods
mov
adc
mov
push
dec
sti
push
jne
fs
fsubrp
add
sbb
jbe
pop
pusha
mov
mov
out
mov
push
mov
inc
jge
push
data16
cmp
xor
xor
js
mov
inc
in
adc
mov
push
aas
jo
xorb
add
repz
enter
iret
xchg
ret
cmp
lea
je
pop
pusha
xlat
and
lret
movsb
outsb
mov
adc
dec
std
sub
fisubl
or
xchg
addr16
shl
std
inc
cmp
jge
adc
sub
xor
sub
addr16
mov
ds
out
cld
lods
jecxz
shll
std
daa
aaa
jb
push
dec
loop
mov
xor
jl
mov
xchg
adc
cli
lcall
incb
cmp
fdivs
ja
cmc
xchg
fisttps
mov
push
push
jo
scas
js
cmp
scas
sub
mov
shl
jg
push
push
and
out
sub
roll
aad
sbb
inc
or
aad
adc
call
pushf
cmp
mov
shll
pop
fisttpll
aad
scas
xor
inc
sbb
sbb
mov
pushl
push
repnz
add
std
hlt
leave
loope
xor
dec
add
xor
call
adc
icebp
scas
dec
push
ds
cli
pop
int
dec
nop
cwtl
out
scas
inc
insb
xchg
stc
cmp
xorl
mov
shl
fninit
insl
lods
iret
jge
cmp
pop
adc
xor
mov
call
dec
enter
lods
pop
fs
xchg
inc
fildll
jns
xor
popa
stos
cmp
ret
and
sub
sbb
add
test
pop
loopew
clc
push
ds
in
mov
jle
bound
lret
out
dec
jb
mov
sub
mov
dec
push
adc
adc
ja
loop
mov
inc
inc
and
cmp
adc
iret
aam
hlt
jne
xor
dec
cmp
fmull
ss
loope
mov
mov
dec
jns
mov
cmp
xchg
jmp
jne
loope
int3
sbb
inc
mov
inc
cmp
mov
rorb
in
rcl
mov
xchg
iret
pop
insl
popa
int
pop
cmp
mov
stos
dec
push
and
in
inc
push
les
sub
and
pop
je
push
vmread
sbb
mov
inc
mov
sbb
test
rcll
dec
sub
adc
mov
popf
stc
jle
lahf
xor
bswap
cli
test
jbe
jmp
int3
xor
mov
nop
lea
jg
pushf
ljmp
dec
or
xor
xor
popa
sbb
jmp
lock
add
loopne
jnp
mov
aaa
sbb
repnz
jecxz
adcb
iret
inc
lods
popa
mov
enter
cld
mov
add
pavgw
push
adc
sbb
pop
rcll
mov
xchg
rolb
dec
xchg
andl
jno
xchg
mov
imul
mov
sub
sub
cmc
or
outsl
popf
fs
cltd
jae
popf
mov
out
cmp
or
sub
bound
pop
int3
ficoms
call
jae
imul
insb
mov
cmpb
lds
jno
test
test
dec
jbe
jp
aas
out
xchg
mov
hlt
js
mov
clc
xchg
stos
mov
mov
ss
int
push
or
les
into
leave
js
mov
mov
push
pushfw
or
pop
adc
push
loop
or
clc
in
jg
fstps
int3
cld
sbb
fxam
lds
jo
lahf
pop
sbb
inc
or
repz
sub
mov
fldl
das
ret
ret
dec
mov
cmpsl
call
shrb
fldcw
dec
movsl
lret
mov
xor
scas
fsub
mov
jge
dec
inc
aad
jg
or
jl
loope
es
out
inc
jp
add
into
mov
mov
int
test
in
insl
repnz
fdivp
jmp
cmp
xchg
cmp
adc
jmp
mov
mov
or
dec
push
inc
adc
jns
push
in
enterw
and
data16
jno
jecxz
sub
cmp
mov
jno
fidivl
stos
cli
mov
xlat
ss
push
leave
out
js
call
or
push
loop
mov
sbb
push
mov
mov
add
cltd
pop
pop
lahf
test
xor
sbb
cmp
pop
daa
mov
scas
out
mov
movsl
inc
dec
lds
cmp
das
mul
push
loope
scas
aas
pop
mov
adc
cmpsl
jecxz
lds
cld
dec
adc
test
jl
imul
jno
xor
loopne
add
and
cmc
scas
mov
out
sbb
adc
dec
daa
push
inc
popf
pushf
fsubs
data16
inc
and
mov
repnz
cld
lret
nop
daa
in
jnp
out
mov
fwait
xchg
xor
or
shlb
cmp
imulb
sbb
add
ret
push
adc
inc
xchg
scas
cmp
add
std
mov
jecxz
fs
rorl
and
inc
mov
mov
cmpsl
inc
push
mov
mov
ret
push
inc
pop
inc
loope
add
test
and
and
ret
cmp
push
adc
jo
stos
push
pop
jns
into
lea
adc
jge
cwtl
jne
mov
daa
idivb
push
or
aad
cmp
cmp
shl
lods
pop
in
inc
adc
mov
push
adcb
iret
aas
into
and
out
cmp
pushf
pushf
xor
dec
outsl
ds
fldt
mov
cmc
pop
lods
imul
inc
sbb
jno
dec
mov
and
xor
mov
loope
mov
imul
fiaddl
and
scas
scas
mov
jo
scas
lods
lds
fs
in
sti
shll
mov
push
cmp
andb
adc
mov
push
inc
pusha
mov
mov
sub
pop
inc
dec
mov
or
jnp
cmp
inc
inc
jp
and
jnp
out
lcall
cmc
rcr
mov
popf
clc
incb
jo
jle
rol
push
popf
daa
pushf
lahf
lea
push
adc
push
inc
mov
out
dec
int
or
fidivrl
jl
repnz
dec
mov
or
adc
clc
inc
adc
adc
or
insl
pop
push
xor
fistpl
mov
mov
daa
xor
call
fcompl
aas
add
push
scas
or
bnd
out
add
xor
xlat
mov
xchg
mov
and
inc
sub
add
sbb
clc
imul
or
cs
popf
add
jge
or
imul
adc
ja
out
jle
push
mov
aas
or
pushf
shll
and
in
jp
jo
sbb
or
ret
pop
stos
cmp
pop
xorl
imul
inc
push
mov
adc
and
mov
sub
xchg
sub
data16
jg
les
rolb
mov
mov
mov
popa
notb
push
jae
scas
lods
int3
xlat
lahf
xlat
js
in
adc
jle
lods
je
test
inc
sub
popa
addr16
dec
imul
in
out
sbb
add
jno
outsl
in
lcall
adc
ficompl
fldt
jg
rolb
sub
js
xor
xor
push
sbb
int3
out
push
or
adc
or
sbb
xorl
aad
pop
sbb
loopne
add
jmp
cmp
icebp
dec
inc
xlat
das
cmc
lods
out
imul
test
adc
repz
mov
inc
mov
cmp
xor
fs
sub
sub
sti
std
push
ret
les
std
cs
jl,pt
lods
ret
popf
sti
loope
fcompl
cmp
jp
into
cmp
jge
in
or
insb
mov
daa
pop
sbb
mov
mov
push
lcall
and
pop
add
inc
add
xchg
imul
les
mov
stos
loopne
outsb
mov
push
xchg
jl
aas
inc
inc
mov
imulb
sub
movsb
xchg
lret
sbb
push
pop
pop
push
subl
xchg
cmp
into
and
pop
fimuls
mov
test
dec
pop
pop
shl
ja
jg
je
mov
xor
je
or
cmp
cltd
mov
mov
and
movsb
mov
xchg
loop
leave
divb
jle
fldenv
pop
dec
dec
sbb
mov
jle
sti
sbb
js
in
push
ds
and
addr16
lods
pushf
jle
mov
pushf
pop
hlt
call
sbbl
add
lds
add
or
fucomp
aas
repz
xchg
daa
ret
xchg
mov
push
jecxz
mov
pop
aam
dec
push
scas
loop
addr16
shlb
xor
fwait
test
add
ror
pushf
sbb
pop
dec
jne
dec
pop
mov
mov
cmp
ja
inc
cmp
mov
jp
mov
frstor
push
roll
mov
cmp
dec
gs
in
fcomps
rcrl
aad
jo
rcrb
sub
sbb
icebp
negb
cmp
xchg
cli
movsb
stos
mov
ljmp
out
or
ret
movsb
sarb
gs
or
imul
sti
lds
fdivs
sahf
fdecstp
add
out
pop
mov
pop
or
xchg
arpl
scas
cmpsb
int
int
jno
pushf
push
shrb
jno
push
gs
pop
gs
fidivrs
mov
arpl
mov
xor
push
xchg
inc
std
push
adc
int
rol
jo
mov
jne
jmp
cmp
mov
xchg
sarl
or
pushf
cwtl
push
xor
outsb
aad
out
fists
imul
sub
push
out
lock
ret
pop
mov
fmull
dec
sti
loopne
adc
pop
add
sub
je
pop
jno
pop
xor
popf
sbb
std
int
push
sbb
fs
sbb
xor
xchg
inc
add
mov
mov
mov
dec
mov
into
inc
sub
or
sbb
cmp
test
std
imul
fidivrl
frstor
movsl
cmp
sub
cltd
cmp
fwait
stos
dec
pop
int
mov
push
mov
icebp
inc
dec
in
js
jae
ret
loope
sbb
scas
xchg
das
mov
mov
loop
inc
dec
mov
sbb
shlb
dec
mov
xchg
out
jg
aaa
stos
sub
mov
xor
rorl
stc
testl
sbb
out
outsl
push
lods
mov
scas
sbb
xor
dec
push
mov
inc
push
mov
and
sub
inc
out
mov
or
cmp
sbb
adc
jecxz
fwait
dec
mov
or
or
mov
pop
dec
movsl
sti
jg
mov
xchg
inc
push
mov
rorb
divb
ljmp
and
adc
jae
push
cmpl
sbb
xchg
cmp
sub
sbb
mov
test
adc
outsb
jmp
add
or
push
inc
pop
push
in
fs
dec
mov
push
sbb
and
lret
cmp
out
pop
test
mov
mov
in
dec
jg
sti
cmp
lahf
dec
mov
xor
push
call
aam
xchg
in
imull
ror
sub
rep
xor
andb
popa
xor
out
xlat
mov
in
adc
push
mov
js
push
shl
cld
pop
test
loop
out
int
and
xor
dec
inc
cmp
loope
dec
lret
pop
jnp
or
push
movsb
lods
dec
push
mov
cmp
add
sub
scas
aaa
ds
xchg
scas
xchg
dec
fdivl
adc
test
add
loop
inc
popf
and
mov
push
push
cmpsb
sbb
inc
fwait
lret
jl
frstor
mov
mov
adc
jno
push
ja
mov
dec
mov
mov
loope
push
in
out
cmp
imul
nop
enter
pop
std
jmp
dec
xchg
xor
adc
movsb
insl
scas
mov
loopne
xchg
mov
imul
hlt
fdiv
loope
inc
repnz
sub
xchg
jl
aad
call
mov
xor
cld
adc
nop
mov
jmp
adc
cmp
daa
xor
sub
dec
cmp
push
sub
test
sub
jbe
cmp
cmc
dec
mov
sub
stos
aad
push
fcoml
sub
xchg
cltd
mov
into
add
mov
pop
fldl
pop
aaa
add
xchg
pop
call
pusha
sarl
cmp
mov
roll
xchg
test
xor
mov
sti
mov
repnz
sbb
mov
adc
or
dec
adc
sti
sahf
adc
xorl
pop
das
mov
push
push
sbb
call
dec
adc
fistpl
orl
and
mov
push
fldln2
cwtl
pop
aaa
cmp
mov
lea
mov
mov
xor
cltd
push
popa
adc
push
dec
mov
mov
jmp
jne
cmp
movsl
popf
pop
lahf
nop
add
add
jle
or
and
jae
adc
dec
stc
dec
jle
sahf
add
xor
shlb
out
repz
cmp
push
add
jl
push
mov
mov
push
in
hlt
xchg
repnz
out
pop
cs
sub
movsb
xor
das
sahf
fists
pop
mov
pop
xor
jl
mov
xchg
push
xor
mov
adc
movsb
inc
rcr
mov
mov
xor
fists
or
jb
subps
popa
in
jp
insl
xchg
push
push
lea
imul
ljmp
push
jge
in
cmp
shrl
dec
stos
add
add
jecxz
inc
mov
mov
negl
popf
or
hlt
xchg
sub
sub
sbb
loop
mov
mov
mov
pop
xchg
mov
xchg
insb
rcrb
in
sbb
lret
ds
and
cmpsl
xorl
push
mov
div
fwait
sahf
gs
or
dec
cmp
scas
and
mulb
std
lods
lcall
mov
pop
jno
or
imul
jecxz
add
sbb
and
sarl
add
jns
sub
fcompl
lods
lods
push
dec
in
testl
add
or
xor
and
or
xchg
in
divl
cmp
cmp
push
lahf
ret
adc
dec
mov
cmp
out
rolb
frstor
nop
push
push
push
sti
inc
cli
xchg
lahf
mov
repz
or
ss
mov
mov
xor
xchg
int
out
pop
rcll
out
cmp
xor
loop
pop
ja
scas
test
lcall
add
mov
adc
sti
movsl
inc
imul
sbb
inc
dec
jp
stos
cmp
sbb
sar
push
outsl
lods
pop
adc
push
push
jbe
lahf
sbb
int
jbe
inc
xchg
sub
dec
cmp
scas
mov
push
js
xor
pop
push
mov
mov
clc
cmpsb
jb
inc
jecxz
fcomp
fwait
int
subb
ret
pushl
aad
bound
pusha
dec
xor
pop
xlat
or
and
popf
xor
push
imul
andb
mov
add
in
aaa
push
mov
mov
and
add
mov
xchg
addb
stos
pusha
jp
xor
repz
dec
stc
in
xor
into
push
adc
pop
pop
outsl
rolb
or
js
fwait
inc
add
inc
cmpsl
jo
lds
data16
lds
add
call
inc
push
or
pop
out
mov
arpl
lds
or
es
popf
scas
xchg
es
xor
mov
int3
lods
jne
jae
sbb
mov
mov
push
loop
adc
mov
add
mov
pop
addr16
or
clc
mov
sub
je
scas
daa
lret
rolb
push
fisubrl
pusha
fildll
rdmsr
inc
push
decb
pop
add
pop
loop
pop
das
and
inc
ss
das
cmp
stc
out
mov
cltd
inc
push
push
mov
out
daa
mov
xor
ljmp
daa
faddl
xor
add
or
stos
imul
xchg
lea
pop
cmp
rsm
into
or
pushl
mov
or
daa
test
insb
push
imul
fidivl
lret
jl
mov
insl
cmp
sbb
or
out
mov
test
cwtl
jl
dec
gs
or
inc
sub
mov
mov
adc
xchg
mov
hlt
rcl
xor
loop
and
cmc
jae
repnz
pop
add
push
or
jle
adc
jg
push
mov
sti
mov
add
scas
cmp
or
jns
mov
sbb
push
stos
stos
xchg
mov
mov
or
inc
out
xchg
int3
paddw
gs
mov
jl
sbb
mov
add
sub
pushf
hlt
stos
push
pop
movsl
dec
loop
jbe
adc
data16
cli
inc
jmp
nop
leave
cli
fwait
sub
mov
dec
mov
addr16
jp
mov
je
and
outsl
jo
jno
inc
test
dec
xchg
loop
ja
add
xchg
stc
push
shrb
jno
test
jnp
xchg
jl
je
mov
jbe
test
xchg
cmp
sbb
inc
repnz
mov
sub
mov
add
fwait
imul
lds
cli
pushf
jns
les
movsl
test
cmp
nop
test
pushf
xchg
sub
dec
adc
and
pop
push
and
fnstsw
jp
in
cmpsb
xchg
aam
ror
or
sar
dec
sbb
pop
fcoml
push
lods
out
xchg
sti
jb
and
stos
cmp
sbb
add
dec
sub
imulb
sub
xchg
xchg
dec
push
sub
dec
xchg
gs
arpl
sbb
jae
call
ret
or
cld
add
fs
pop
popa
mov
xor
xor
cmpb
mov
popf
jb
xchg
xchg
in
push
add
adc
popa
imul
nop
rcr
mov
xor
bswap
mov
mov
cmpsb
xchg
dec
sbb
jb
mov
mov
jb
ret
dec
jge
mov
xorb
iret
std
scas
outsb
xchg
xchg
dec
int
or
and
adc
stos
in
cmp
ret
pop
xor
mov
xchg
push
outsb
shll
out
push
imul
pop
popf
aas
adc
aaa
pop
lahf
lahf
jmp
sbb
out
data16
sbb
mov
cmc
xor
adc
push
pop
addr16
mov
call
mov
imul
loop
push
sub
xchg
jecxz
jne
push
sahf
pushf
sahf
pushf
mov
testb
les
cmpsb
add
mov
scas
into
aad
pop
sub
popf
cwtl
inc
scas
mov
addr16
ret
adc
mov
popa
imul
in
sbb
add
xor
sbb
mov
gs
bound
mov
mov
out
jg
inc
stc
pop
nop
mov
outsl
fsub
outsb
and
bnd
and
push
sub
or
adc
jo
and
hlt
fdivrp
xchg
mov
push
pop
sub
add
cld
jmp
cmp
pop
into
cmpsb
add
mov
xor
aaa
xchg
mov
fdivr
pushf
jl
shlb
push
mov
inc
lods
push
mulb
rcrb
stos
sub
jo
in
push
or
movsb
jecxz
mov
fistpl
sbb
push
mov
xchg
pusha
call
in
and
mov
or
loopne
mov
inc
sbb
ds
dec
mov
ljmp
add
mov
cmp
scas
push
cwtl
outsl
leave
jmp
jp
clc
sub
add
out
divb
sub
fwait
pop
xor
push
cld
push
sub
outsl
mov
jle
jne
sub
idivb
addr16
mov
les
dec
outsl
or
sti
jbe
jbe
fwait
lea
push
and
push
mov
mov
es
cs
mov
icebp
scas
hlt
push
and
loopne
jne
sub
mov
dec
jg
cmp
int
push
lods
cmc
xor
xchg
call
incl
mov
ret
cmp
out
and
test
push
inc
cmp
sbb
das
sub
add
xor
jo
cmp
out
fidivs
test
js
xchg
loop
dec
aad
xchg
aam
clc
xchg
mov
cmc
test
sub
jl
cmpsl
lahf
lcall
aad
mov
test
push
inc
rorb
je
shll
cmc
daa
sub
add
dec
xor
pop
inc
in
ficompl
imul
pusha
rcl
mov
xor
out
shlb
or
cmp
xor
jb
enter
jo
xchg
xlat
xorl
jle
push
sarb
ss
add
pop
cld
xor
mov
test
test
mov
int
outsb
mov
rclb
outsb
stos
mov
push
push
sarb
mov
sbb
and
ror
fwait
aaa
lods
jg
mov
xchg
or
push
mov
repnz
xchg
inc
adc
xor
fnstsw
mov
fs
sbb
aam
sub
lcall
cmp
mov
push
xchg
shrb
push
mov
push
sub
aaa
pop
rcrb
repz
push
jmp
fs
and
xchg
pop
adc
popa
mov
sbb
imul
jl
mov
mov
add
fstps
shr
mov
jb
add
in
in
mov
es
or
mov
scas
xchg
addb
mov
sub
jmp
adc
dec
jae
lret
fwait
fs
jns
dec
sub
or
bound
inc
add
jmp
inc
mov
cmc
xchg
stos
sarb
sub
popa
xlat
pop
and
imul
mov
lds
js
mov
adc
in
imul
pop
into
mov
inc
inc
push
out
xchg
test
out
fmull
fidivrl
push
movsb
pop
cmp
stos
xchg
add
push
imul
cs
test
sub
xor
adc
ds
mov
leave
rorl
iret
lods
sub
mov
lds
and
out
jo
notl
cmp
sub
ja
or
scas
test
andb
mov
push
mov
jnp
enter
jle
mov
sbb
nop
adc
cli
mov
dec
cltd
add
mov
or
push
int3
nop
push
push
jle
adc
mov
aaa
mov
stc
pop
ja
xchg
fwait
shrl
pop
sub
or
insb
jmp
inc
dec
mov
add
sub
in
clc
iret
sub
fdivrl
push
xlat
test
scas
mov
mov
dec
in
jae
cmp
add
dec
ret
incb
sbb
aam
dec
imul
shll
sbb
hlt
xor
mov
test
or
jmp
pop
gs
fidivl
jp
add
cmc
pop
xchg
loopne
jae
mov
aaa
out
repz
fmulp
pop
inc
push
pop
and
test
stos
mov
or
lds
test
notl
inc
push
dec
out
mov
mov
mov
mulb
cmp
ret
fsubrs
hlt
fs
into
pop
adc
notrack
and
mov
lods
ficoms
cmp
push
adc
ds
and
xchg
xor
aad
andps
mov
into
xor
jecxz
lods
push
ret
and
dec
lods
add
pop
gs
push
pop
shll
jg
insl
lock
or
pop
lahf
shlb
les
arpl
push
or
inc
scas
jnp
cmp
ds
lds
gs
xorb
jns
sbb
scas
repnz
add
loop
mov
faddl
inc
push
jge
aas
repz
dec
jno
push
fisttpl
mull
sbb
add
pushf
xor
mov
iret
sub
and
xor
jg
movsl
add
adcb
xchg
gs
loop
push
iret
das
test
mov
sub
js
dec
dec
and
push
mov
ret
sub
enter
inc
xchg
xchg
scas
clc
into
xor
int3
pop
mov
add
out
mov
and
sbb
mov
and
push
ds
rcrb
rorb
pop
ss
and
lcall
cmc
es
call
loop
mov
jb
ret
sbb
pop
dec
addr16
adc
jp
testb
ret
clc
clc
adc
in
push
and
adcb
mov
jp
shll
adc
mov
lahf
mov
pop
push
xor
mov
ja
call
pop
push
jg
push
jg
jbe
push
pop
insb
ret
fwait
and
add
dec
inc
add
rorl
gs
ret
dec
scas
imul
fsubs
test
xor
test
cli
adc
leave
pusha
push
aad
in
pop
shll
fbld
loopne
xchg
mov
mov
mov
fcomps
xor
pop
mov
jno
inc
jp
das
sbb
inc
fs
popl
or
or
aam
mov
outsb
insl
std
jmp
pop
sbb
out
out
cld
scas
aad
fimuls
loope
js
cwtl
adc
scas
jle
addr16
add
xchg
pop
inc
push
fs
jnp
xchg
pop
mov
popa
ficompl
aaa
vpaddd
pop
daa
mov
cmp
cmp
jne
lods
fmul
sub
fcomip
mov
aaa
dec
sbb
stos
inc
sti
in
cmpsb
inc
add
or
lret
mov
dec
cmp
jne
and
mov
xchg
dec
adc
ret
fsubp
cmp
loopne
cmp
out
pop
in
push
dec
jb
lret
push
push
adc
int3
add
rorb
lods
xor
rorl
arpl
lods
xchg
fldenv
stos
in
mov
dec
xor
pop
and
enter
pop
xchg
fwait
sbb
xor
mov
add
je
in
test
mov
dec
bound
pop
call
enter
mov
push
mov
popf
jp
cld
mov
cwtl
ret
mov
add
cltd
sbb
jp
fldcw
cli
jb
xchg
hlt
movsb
dec
mov
sbb
dec
xchg
lock
jl
call
gs
pop
dec
pop
inc
jae
push
add
sub
mov
sbb
inc
inc
repnz
int3
ljmp
inc
adc
mov
inc
xchg
addr16
mov
cmc
jl
adc
shll
jb
pop
les
push
rorl
stos
sahf
xchg
mov
cmovs
in
push
in
incl
xor
shlb
ljmp
stc
stos
test
jg
xchg
push
mov
sbb
and
testl
iret
mov
and
mov
imul
pop
outsb
cmp
sbb
cmpsb
fs
mov
sub
jb
mov
sti
dec
push
dec
pushf
dec
sbb
push
cmp
hlt
addr16
mov
pop
aaa
sub
xor
or
or
fldl
out
shll
rcr
cmp
mov
and
push
xchg
loopne
lods
cltd
jo
fnstcw
jl
dec
cmpxchg
call
pop
sub
outsl
lret
mov
shll
cmp
shll
ljmp
cmp
js
cmp
jecxz
or
dec
push
dec
jl
aas
ja
ja
push
icebp
inc
lods
loope
hlt
mov
xor
sbb
sub
dec
lea
add
call
stc
jbe
push
stos
dec
pop
out
testb
call
scas
je
and
iret
mov
test
inc
lahf
or
roll
addr16
fadds
mov
lcall
mov
test
ds
in
sbb
lods
out
push
scas
ja
xchg
and
sbb
outsb
inc
movsb
test
cmp
adc
out
mov
or
out
dec
mov
push
pushf
jae
insb
sub
mov
loop
xchg
aam
mov
loopne
fbstp
movsb
jns
or
rcr
pop
loop
insb
dec
mov
jbe
or
lret
jp
pop
jns
movsb
cmp
add
pop
ljmpw
mov
stos
sub
sbb
xchg
mov
mov
xor
mov
jle
push
dec
cltd
cmp
xor
jecxz
or
inc
or
pop
sub
or
shll
out
sarl
outsb
std
mov
jp
xchg
adc
mov
fiadds
inc
cmp
outsl
sti
add
mov
icebp
dec
or
xchg
xor
cmc
loope
mov
hlt
xchg
call
push
push
mov
xchg
int
mov
in
in
cmp
mov
mov
pushf
mov
mov
dec
xor
mov
popf
cmp
mov
dec
daa
cmc
dec
or
enter
rcrb
jnp
dec
lret
cmpb
movsb
in
mov
cmp
rol
inc
out
sbb
jl
rorl
ds
push
test
lock
jp
loop
jl
test
mov
addr16
jns
sub
subb
dec
add
mov
vpshlw
adc
or
cmpb
pop
fldl
mov
or
sbb
test
call
mov
fldcw
pop
inc
jne
inc
cmpsb
mov
test
mov
fwait
mov
les
ja
push
repz
add
jle
rcrb
inc
xor
popa
lcall
scas
inc
int3
loop
ja
jo
cmc
inc
std
mov
dec
push
mov
cmpsb
rcrl
jmp
punpckldq
mov
imul
cli
jle
scas
int
ds
std
pop
dec
mov
jne
sub
mov
rcl
notl
add
sub
or
lds
ss
popf
mov
sub
push
dec
mov
fwait
cwtl
xor
push
lods
js
xor
imull
lods
stos
or
mov
aad
xor
lret
pushf
test
xor
aas
rep
jecxz
mov
or
pop
loopne
stos
mov
mov
sub
scas
rolb
test
faddl
mov
jle
das
xchg
shlb
mov
mov
andl
xchg
adc
cli
mov
sub
mov
mov
push
je
or
mov
cmc
cmp
xorb
xchg
push
mov
add
xor
mov
es
pop
xchg
scas
push
push
nop
inc
sbb
adc
rorl
jb
or
mov
push
repnz
xchg
mov
xchg
pop
and
mov
push
insl
in
mov
xor
cmova
dec
fwait
xchg
out
xor
cs
mov
or
adc
adc
and
cmp
cmp
sbb
jmp
cwtl
bound
lcall
sbb
pop
movsl
jb
mov
ljmp
adc
xchg
call
mov
cmp
or
jnp
push
push
dec
adc
inc
js
cmpsl
scas
push
xchg
xchg
push
iret
test
sub
push
call
pop
xor
inc
cmp
jne
sbb
xchg
pop
adc
dec
add
mov
pop
in
arpl
mov
mov
fbld
xchg
push
vmwrite
mov
inc
adc
movsl
add
push
pusha
pop
std
imul
mov
fimuls
rcrb
bound
xor
shrl
pop
test
shrb
sub
shlb
push
push
mov
add
mov
popf
fucomp
leave
stos
jnp
dec
jnp
jns
dec
push
mov
pop
lea
ret
sbb
std
lods
hlt
nop
arpl
aaa
ret
loope
rorl
cmp
notl
mov
push
adc
xor
xchg
jae
test
out
mov
jp
ret
push
ret
mov
and
jp
adc
mov
jmp
add
mov
popl
adc
rolb
pushf
test
sub
je
jb
ss
addr16
sbb
cmp
sub
or
lahf
outsl
add
xor
and
shr
sub
jo
int
clc
add
inc
ja
ljmp
jle
rclb
pushf
aad
mov
mov
int
insb
or
das
stos
jl
adc
scas
loopne
dec
cmp
sbb
mov
mov
lret
jge
ret
shlb
in
insb
test
cmp
sub
sbb
sbb
push
cmpsb
or
mov
sub
and
das
cmp
int3
je
imull
xor
dec
nop
or
inc
jne
aad
xchg
repnz
subb
es
icebp
sbb
adc
cmp
dec
dec
flds
pushf
aad
pop
jo
arpl
xor
and
nop
fwait
call
jae
add
insl
idivb
pop
les
xchg
adc
fwait
adc
data16
lds
sub
js
das
scas
movsl
push
xor
out
andb
jb
dec
rcll
mov
mov
ret
xchg
sbb
mov
loope
and
in
adc
sub
jg
cwtl
jb
dec
lock
xlat
clc
jecxz
mov
sub
xchg
cmc
or
cmpsb
je
pop
inc
lcall
ret
mulb
adc
imul
movsl
outsl
test
xlat
int3
push
mov
xchg
xchg
out
shr
ljmp
pop
daa
adc
hlt
dec
push
or
sub
cmp
ds
jl
pop
arpl
in
js
in
fimull
data16
xor
push
gs
int3
dec
inc
dec
addl
sbb
ja
ret
lret
dec
or
cltd
xor
lods
adc
jno
jns
ds
and
decb
jp
insb
ret
js
out
mov
or
inc
fwait
dec
jg
xchg
xor
xchg
xchg
sub
dec
push
sahf
ret
pminsw
ret
cmp
pop
inc
imul
cltd
sbb
push
enter
cmp
or
sub
xchg
iret
xchg
hlt
loopne
pop
jb
add
jo
jo
dec
sbb
imul
popa
sub
and
pop
adc
fmuls
mov
jl
ret
pop
jp
iret
adc
lahf
cld
mov
fdivr
add
jnp
insb
insb
int3
jne
pop
mov
test
insb
ret
mov
and
test
movl
lahf
jecxz
cmc
mov
pop
dec
adc
cmp
fstpt
sub
popf
cmpsl
nop
inc
add
lock
sbb
js
adc
das
in
lahf
aad
jns
pop
inc
ljmp
test
jl
cmpsb
ja
out
and
je
jae
iret
das
arpl
mov
div
dec
das
fmull
movsb
ljmp
inc
pusha
es
mov
ljmp
cmp
sbb
into
dec
adc
xchg
pop
fs
and
sbb
outsl
in
jo
and
push
sbb
ret
jle
fistl
shll
mov
sub
adc
insl
xor
out
movsl
sub
add
std
jno
jne
repnz
into
rcrl
or
and
inc
addr16
push
pop
lock
and
cmc
mov
lahf
stos
hlt
js
fbstp
add
rorl
fwait
cld
sti
loope
jl
dec
fsubl
into
mov
cld
adc
lahf
jl,pt
stc
sbb
jb
incl
icebp
cli
orl
jo
and
cmp
mov
and
add
add
faddp
cmp
outsl
aam
stos
xor
inc
push
sahf
adc
shlb
stos
adc
sti
sub
lret
jge
sub
push
ficomps
call
fs
mov
out
or
or
sub
dec
in
dec
ret
outsl
test
aaa
leave
xor
aaa
mov
add
push
pushl
movsl
sbb
inc
push
dec
mov
sbb
sbb
pop
lods
psllq
mov
enter
push
cmp
push
fildl
int
gs
add
push
addl
add
in
test
fmuls
adc
push
pop
lock
cmpsl
push
int3
ss
dec
hlt
in
jae
ljmp
daa
push
int
push
push
cmpb
roll
shr
outsb
pop
or
lock
mov
lods
mov
and
or
mov
aas
fdivl
push
push
push
leave
arpl
sbb
jne
mov
inc
imul
call
adc
es
inc
ljmp
jbe
sub
adc
add
push
hlt
mov
cmpsb
dec
sbb
pop
cld
stos
cmc
or
scas
jnp
and
jo
xor
xchg
jns
jle
or
pushf
and
push
loopne
pop
cmp
out
pop
pop
push
adc
jmp
pop
test
adc
mov
xor
and
and
pcmpgtb
insb
insb
pop
mov
repz
pop
clc
cmpsl
aad
fs
stos
pop
sbb
and
fbstp
clc
adc
or
fpatan
or
jns
sub
mov
pushf
rcrb
adc
xchg
aas
push
mov
or
xor
mov
xor
inc
ljmp
jns
cmc
aaa
aaa
xchg
cmp
stos
popf
lods
sbbb
xrelease
pop
xchg
jo
cwtl
mov
sub
fsubs
sub
out
mov
xlat
ds
adc
mov
mov
push
test
push
aam
pop
stos
xchg
adc
add
dec
gs
in
dec
sub
out
dec
movsb
imul
xchg
add
sbb
stc
push
pusha
xor
mov
add
mov
or
cwtl
mov
orl
mov
add
add
scas
loope
lret
xchg
dec
cmp
jne
lock
inc
and
sub
jmp
or
pop
dec
rcll
mov
lcall
inc
cmp
into
sub
pop
pop
das
mov
aam
xor
loop
or
lock
xor
imul
or
bound
shrl
mov
or
inc
jnp
in
mov
cs
jl
lret
cld
leave
sub
js
das
or
xor
out
xchg
not
ja
out
mov
pop
scas
dec
push
add
cmc
cld
xor
add
mov
sbb
hlt
inc
jecxz
mov
jl
inc
lods
sbb
dec
xchg
xor
pop
sub
jmp
push
clc
xor
scas
push
and
fidivrl
xchg
icebp
add
dec
add
mov
push
mov
int
imul
clc
xor
mov
scas
inc
test
test
adc
fdivp
sbb
jns
pop
fidivrl
pop
in
push
add
loopne
add
sub
jbe
fadds
in
mov
mov
test
xchg
or
jmp
int
xchg
lock
aam
mov
in
pop
test
or
das
int3
fsubs
lret
mov
scas
fwait
clc
mov
or
lods
mov
lret
adc
mov
ret
push
xchg
inc
popf
adc
shr
inc
pop
leave
xchg
push
sub
dec
sub
fdivrl
mov
ja
aad
mov
inc
pop
mov
jmp
in
xchg
push
cmc
pop
add
mov
ds
add
lret
dec
cmp
dec
ljmp
call
mov
daa
inc
push
imul
add
faddl
pusha
cld
cmc
sti
pop
jo
movsl
jbe
jge
popa
jecxz
clc
jmp
xor
cld
mov
test
shlb
leave
cld
xchg
or
sbb
lcall
xorb
fisttpll
mov
cmpsb
pop
cmc
push
adc
add
ret
or
mov
fisubs
icebp
shl
ss
lods
sahf
cmpsb
clc
aad
jle
loop
leave
pop
mov
jno
pop
xchg
inc
pop
mov
push
lods
xor
adc
jmp
inc
stc
movsl
mov
dec
fwait
jecxz
shrl
or
dec
loope
sub
or
cli
lods
cwtl
lret
mov
addr16
insb
ja
and
movsl
add
jbe
shll
leave
in
dec
mov
aas
or
int
cwtl
into
mov
pop
out
dec
adc
pop
inc
and
pusha
fs
out
cld
shlb
inc
mov
in
push
in
mov
pop
xchg
ljmp
stos
stc
inc
rcll
and
stos
push
mov
xor
mov
testl
ja
adc
add
lcall
and
jmp
push
mov
jle
gs
or
inc
leave
in
pop
adc
sub
jno
sub
shl
shr
out
xchg
push
sbb
inc
mov
out
rcrl
icebp
scas
insb
ret
sub
pop
push
xchg
fcompl
loop
sbb
test
push
popf
lcall
mov
aas
mov
test
loop
dec
cli
ret
mov
and
popa
pop
mov
loopne
mov
shlb
add
aas
divl
jo
movsb
je
lret
jnp
shlb
sbb
push
or
iret
stos
adc
or
jl
nop
sbb
fimuls
shr
jns
inc
in
push
mov
jle
or
ficoms
add
dec
xor
inc
cmc
ret
push
js
bound
xchg
int
push
cmpsl
repz
mov
subb
or
lahf
int3
pop
cli
add
add
pushf
sbb
adc
popf
jnp
jg
je
outsb
icebp
ret
jecxz
in
iret
pusha
cmc
ret
sbb
xchg
add
jns
pop
iret
js
test
outsb
xorl
sbb
aaa
adc
bnd
cmp
movsb
lret
shll
popf
in
das
gs
jb
and
negl
fmuls
mov
shl
addr16
out
mov
loopne
loope
xchg
insb
fnsave
dec
pop
enter
cmp
jg
push
xlat
rolb
int3
lret
orb
sbb
pop
and
int3
or
mov
outsb
lods
sbb
pop
data16
push
push
add
dec
lahf
fnstsw
mov
scas
pop
scas
cmp
stos
adc
push
push
fbld
mov
mov
mov
mov
lea
jmp
cmp
test
pop
mov
imul
sarl
testb
mov
jnp
push
sbb
cli
mov
push
cs
add
inc
push
jecxz
or
cs
jle
mov
imul
cmpsl
xor
repz
shl
into
or
fidivrl
dec
nop
repnz
jnp
jp
or
mov
mov
sahf
out
adc
sub
cmc
jmp
test
sahf
jmp
arpl
mov
push
mov
cmp
mov
adc
shrl
in
xor
outsl
loopne
dec
testl
stc
sub
push
mov
xor
dec
cmp
mov
inc
xchg
mov
bound
addps
mov
or
and
sbb
fldcw
aad
xchg
or
lahf
popa
fwait
imul
inc
mov
xor
sbb
pop
xchg
mov
jg
mov
clc
out
jno
or
sbb
sub
lahf
mov
sbb
addl
mul
adc
add
test
rolb
push
jg
mov
mov
int
iret
shr
out
lock
lret
lret
mull
popf
dec
ljmp
cwtl
cli
pushf
adc
sbb
in
add
ljmp
pop
inc
pop
mov
aam
clc
push
mov
jl
addl
ja
ficoml
sub
push
sbb
in
testl
pop
push
jp
loope
rcll
mov
mov
aam
loope
inc
insb
shl
call
cmp
push
push
fsubl
lret
jo
inc
xchg
cmpsl
inc
addb
add
fwait
movsl
in
sarb
xchg
pop
fwait
aad
inc
out
mov
pushf
push
addr16
repnz
cmp
stos
and
mov
imul
aas
add
iret
and
cmc
dec
dec
fldcw
xor
push
out
xor
add
leave
dec
cld
inc
pop
pop
sbb
sbb
dec
out
fcoms
fmul
push
repnz
and
xor
call
sub
pop
jne
pop
pop
cs
xor
push
filds
movsl
lcall
and
xchg
ja
ja
enter
dec
jge
jbe
test
or
gs
pop
scas
cmp
mov
jmp
inc
fcoml
inc
mov
inc
sbb
xor
xchg
or
pushf
pop
inc
fdivrl
aam
pop
pusha
out
xchg
aam
or
mov
sub
pop
jo
lds
pop
sub
rcl
inc
fisubs
pop
or
fcompl
cmp
and
adc
mov
jns
adcb
inc
repz
add
lds
mov
cltd
adc
js
sti
out
dec
popa
fstpt
dec
and
lret
mov
mov
int
mov
inc
jb
lahf
aad
sbb
pop
mov
sarl
dec
das
inc
xchg
dec
iret
xor
das
sub
adc
jle
fdivp
pop
divb
sahf
aam
outsb
cmpsb
js
mov
xor
outsb
icebp
xchg
adc
xor
cmp
jo
out
ret
negl
mov
or
in
sub
pop
ljmp
adc
add
gs
and
jmp
inc
test
test
inc
xor
out
arpl
dec
aas
enter
iret
lods
jno
clc
insl
data16
inc
adc
xchg
jne
inc
xchg
mov
cmp
gs
mov
adc
jbe
pop
push
andb
lcall
inc
adc
clc
int3
adc
sub
jne
jmp
insb
inc
ja
and
test
or
gs
adc
and
aam
xchg
or
and
jg
incb
dec
sti
into
and
test
push
cld
push
jne
arpl
push
push
lcall
out
popf
push
movsb
push
xchg
shlb
inc
xchg
xlat
pop
mov
enter
js
pop
fwait
lds
xchg
lods
mov
adc
dec
xor
push
and
mov
or
mov
pop
cmpsl
incl
scas
or
fstpt
cmp
lods
jbe
xchg
lcall
sub
jnp
js
sub
stos
dec
sti
inc
add
or
mov
and
mov
subb
dec
aam
sub
mov
cltd
scas
iret
jl
add
jecxz
shlb
gs
adc
cmpsl
insl
mov
loope
test
je
call
adc
cld
mov
add
mov
loope
jp
jmp
adc
adc
ret
jo
in
pop
jbe
lahf
push
iret
ljmp
mov
rorb
mov
loop
sub
loopne
inc
jl,pt
push
loopne
dec
dec
push
addr16
sub
arpl
in
mov
enter
add
jo
push
sbb
mov
pop
xor
scas
mov
cltd
aam
popa
lea
lods
aaa
and
das
jb
jp
dec
dec
add
stos
jp
xor
add
out
jno
inc
add
lods
gs
popl
jg
mov
loop
add
ljmp
mov
xchg
mov
or
stos
or
push
push
mov
mov
xor
add
icebp
mov
sahf
les
inc
movsl
push
enter
imul
lods
xchg
ficomps
movsl
int
pop
xor
mov
mov
insl
cmc
mov
mov
shrb
loopne
insl
inc
fldln2
mov
inc
gs
fisubrs
test
push
pop
mov
sub
mov
sub
pop
imul
jge
push
lret
push
lock
push
pop
ljmp
dec
pop
addr16
jb
fistpll
repnz
in
repnz
jmp
enter
scas
addr16
dec
xchg
stos
push
push
sub
shlb
jnp
or
cmc
dec
fs
popf
jns
js
aas
imul
jg
inc
out
test
sbb
pop
xchg
mov
addr16
or
incb
jb
stos
sub
pop
push
icebp
cltd
aam
gs
outsl
rcrb
sub
push
iret
lods
lret
bound
fstpl
pop
cmc
test
std
pop
lock
jl
ror
lock
xor
cli
pop
lods
mov
fmull
fsubs
xor
xorl
push
arpl
mov
push
and
imul
pusha
add
das
into
shlb
out
inc
adc
mov
sar
push
mov
and
fwait
pop
push
xor
gs
fs
stos
sub
jb
inc
fs
cltd
test
lods
cmpsb
fsubp
ret
push
add
iret
dec
cmp
jbe
sbb
adc
rcll
es
nop
add
push
push
dec
push
or
cli
mov
lcall
sarb
lods
in
icebp
inc
xchg
or
ss
and
xchg
stc
sbb
data16
mov
pop
out
push
lds
scas
std
imul
rol
sbb
xchg
add
cld
jmp
cmp
mov
pushf
push
cwtl
pop
and
dec
and
insb
xchg
cld
inc
stos
out
jb
mov
ret
xor
data16
dec
fld
mov
mov
sbb
pop
frstor
xchg
cmpsl
add
mov
insl
pop
hlt
out
cmp
jle
xchg
add
and
dec
cmpb
mov
mov
jg
pop
adc
sub
popf
jmp
jno
nop
pop
lret
jb
xchg
in
sahf
lret
inc
cmp
mov
sbb
mov
out
push
hlt
shrl
lret
xorl
mov
add
loopne
rcr
fadds
outsb
inc
movsb
mov
add
ljmp
jns
dec
sbb
lods
xor
das
xchg
adcb
pop
ss
andb
lret
push
mov
push
xchg
jge
addl
sahf
cmpsl
scas
and
movsb
idivl
push
jge
loope
dec
sbb
insb
data16
stos
or
std
stc
add
xchg
add
jb
mov
xchg
shlb
mull
and
shlb
aaa
push
repz
mov
add
push
jae
imul
orl
shll
mov
or
mov
sbb
fdivr
xlat
jg
push
fidivl
cmpsb
push
mov
mov
inc
repnz
dec
adc
enter
adc
dec
pop
or
lods
ljmp
fimuls
test
cmpsl
cmpl
out
mov
pop
rcll
inc
in
fstp
sub
fs
mov
fistl
jnp
jns
std
push
fldcw
clc
mov
or
add
jnp
jp
mov
cmp
mov
shlb
jno
popa
int3
iret
adc
nop
or
jge
bswap
rorl
outsb
andb
pusha
add
in
int
and
loopne
outsl
ficoml
cmp
es
add
jl
push
aaa
sub
mov
fs
pop
or
add
cmc
mov
scas
ret
jb
stos
fwait
imul
ljmp
lret
out
test
sbb
pushf
mov
mov
sub
lcall
aaa
lcall
add
push
or
mov
loopne
ret
xchg
sbb
lods
out
xor
mov
mov
sbb
jns
loope
jle
jmp
cmp
lcall
jae
fildll
jp
sbb
into
pop
repz
aam
mov
mov
les
sbb
pop
pop
repnz
jo
pusha
dec
repnz
dec
push
sbb
jecxz
insb
and
js
imul
adc
int
jb
mov
mov
sub
test
hlt
js
in
sub
fmul
cmpsb
incl
mov
pop
jmp
sub
jmp
je
sbb
push
jno
xorb
lcall
neg
and
movsl
mov
mov
xchg
out
pop
cmp
sbb
mov
mov
rolb
push
add
in
push
lods
test
mov
dec
popa
add
nop
and
test
xchg
or
add
out
ficoms
aaa
add
nop
jnp
sti
and
adc
loopne
mov
push
int3
pusha
shrb
sub
inc
pop
or
jne
xorb
add
test
je
cmp
pop
push
sbb
add
push
sbb
mov
daa
mov
xchg
out
lret
push
push
and
leave
sbb
js
lods
popa
jne
imul
jle
ficoml
out
push
xor
jge
in
ljmp
fs
cmp
push
xor
jge
inc
lea
and
popa
sahf
sbb
std
adc
mov
jge
push
aam
into
outsb
jbe
test
pop
in
cmp
cltd
pop
jo
stos
fsubrs
pop
xor
xor
dec
adc
jb
fcom
les
in
and
mov
push
test
cmp
inc
inc
fstl
sub
ljmp
iret
or
stos
jge
into
or
out
sbb
or
lds
cmp
fldcw
or
or
fsubl
mov
pushl
add
xchg
jbe
stc
jne
jge
xor
ss
mov
inc
xchg
or
sbb
sbb
pop
pop
movsl
mov
outsb
inc
data16
iret
jo
divl
jl
mov
mov
adc
cwtl
inc
adc
lcall
xchg
dec
jno
xor
sbb
cmpsl
dec
push
fldenv
sub
lahf
inc
mov
xor
scas
push
sbbl
xchg
pop
insb
out
imul
es
mov
aad
jmp
adc
adc
insl
nop
mov
and
lret
ljmp
lods
call
cmpsb
imul
repnz
into
lcall
cmp
lret
repnz
pop
jne
push
ret
dec
dec
ljmp
cmp
cmp
loopne
pusha
push
sbb
pushf
jecxz
cmp
xchg
stc
jne
stc
std
and
sbb
lods
pop
cmp
fnsave
add
mov
xchg
add
inc
mov
mov
popa
adc
icebp
fiadds
jae
fstl
in
add
imul
add
jmp
pop
and
pop
je
xor
xor
dec
xchg
adc
pop
mov
test
sti
lock
mov
add
pop
xlat
inc
cs
cmpsb
push
jae
in
mov
ret
mov
push
loop
jns
and
shlb
fnsave
mov
jp
pushf
sbb
sub
std
push
add
xchg
jmp
loope
fwait
sub
push
jp
add
or
jns
jg
xchg
fcmovu
flds
sbb
bound
jnp
cmpsb
xchg
mov
ljmp
je
dec
pop
popf
cmpsb
dec
arpl
cltd
dec
les
push
mov
shrd
dec
ror
dec
mov
fistpl
inc
add
inc
xchg
rorb
into
jl
mov
lret
sahf
sub
jne
jl
jo
mov
hlt
fs
stos
cmp
rcr
mov
stos
ss
dec
ret
inc
mov
js
mov
notb
or
xlat
mov
scas
and
cmp
or
jbe
sarb
pop
nop
out
loopne
sub
mov
xor
test
icebp
pop
fnstsw
xor
ret
pop
pop
mov
outsl
clc
insb
out
xchg
jecxz
test
jp
sahf
lcall
popa
mov
add
jg
add
jae
cmp
jns
popa
adc
scas
cmpsb
mov
iret
je
movsb
pop
shlb
fidivs
inc
mov
mov
je
lock
mov
test
into
inc
mov
pop
xlat
enter
add
jb
jnp
insl
push
scas
lcall
clc
aaa
jbe
fisttpl
outsl
push
add
loop
sbb
lcall
in
ret
cltd
jp
dec
dec
jg
dec
mov
ret
push
lods
and
xchg
test
cmp
cltd
sbb
xchg
out
scas
cwtl
out
jo
call
sti
mov
fwait
movsl
hlt
mov
push
dec
stc
jno
rcrb
out
nop
in
ss
and
fsubrl
popa
add
pop
push
mov
jb
sarl
cmp
jnp
stos
es
mov
fidivrl
ret
pop
enter
aas
push
dec
add
pop
cld
inc
xor
cmp
lea
and
sbb
inc
out
lods
mov
popf
mov
sbb
cmpsb
stos
add
inc
mov
lcall
xor
iret
insb
add
scas
in
mov
mov
daa
imul
mov
movsb
mov
sbb
dec
test
cmpsb
mov
lods
mov
and
sub
sub
cmpsb
ret
add
bound
arpl
mov
nop
xlat
cmp
mov
outsl
ja
repnz
in
mov
pop
pop
xchg
gs
test
or
jmp
scas
js
adc
sub
xor
dec
cmpsl
xchg
shrl
fdivs
dec
adc
nop
jmp
jbe
fwait
daa
sub
imul
mov
dec
push
lods
sub
loope
xchg
sub
cld
insl
das
lret
aad
orl
pop
stos
lds
dec
je
xchg
cmp
xor
invlpg
int
das
addr16
icebp
lock
cltd
and
aad
push
cmc
add
dec
dec
mov
mov
add
mov
lea
jno
jnp
data16
mov
aad
xchg
lcall
jne
lret
pop
cmp
ret
add
mov
cmp
mov
in
pop
fwait
xchg
ljmp
out
cmc
bound
nop
dec
mov
mov
aas
jecxz
stc
push
sub
scas
imul
cld
clc
push
andb
cli
sti
mov
pushf
lds
mov
test
jo
outsl
or
cmc
aad
out
jno
pop
lcall
test
loope
push
fimull
jmp
in
lea
dec
pop
dec
mov
or
push
test
test
jbe
in
fs
jmp
inc
dec
gs
dec
or
dec
push
mov
cmpsl
mov
fdivrs
xchg
imul
jns
les
insl
scas
pop
insl
in
or
adc
lods
in
lods
repz
popf
addr16
sbb
movsb
lahf
leave
pop
sarb
jg
push
test
insb
add
xchg
insl
mov
dec
pusha
les
insb
xchg
les
add
push
adcl
cltd
jle
clc
ret
decl
in
pusha
xchg
pop
pop
cltd
dec
xor
pop
in
mov
fcmovb
clc
fnstcw
mov
cmp
add
xchg
js
out
mov
push
inc
aad
aaa
xchg
fwait
adc
pop
sub
jo
or
pop
jl
mov
loope
and
cmpsb
jge
popf
fcoms
jmp
std
sbb
dec
sbb
std
cmp
adc
jmp
jecxz
jmp
lock
cmp
lods
add
test
insl
imul
cmpsb
mov
adc
bound
push
add
xor
sub
xor
sbb
mov
adc
dec
dec
sub
das
dec
jno
leavew
test
inc
dec
stc
mov
subl
jle
ja
insb
fnstsw
mov
aam
jno
lret
jns
push
andl
cmovge
lcall
scas
test
fldl
movsb
pop
mov
push
incl
lock
push
cmpxchg
sub
in
pop
or
sub
mov
test
test
xchg
sub
push
dec
cmp
insb
mov
push
push
cwtl
sub
ljmp
xchg
inc
dec
shlb
movsl
adc
inc
mov
push
jne
addl
test
add
retw
ficoml
mov
iret
xlat
inc
jle
out
cmp
repz
xor
orb
xchg
loope
adc
addr16
insl
and
adc
cmp
mov
mov
sbb
es
ret
rorl
sub
jle
cmc
arpl
stc
aaa
sbb
lcall
fildll
inc
add
xchg
push
mov
in
jp
sub
lcall
or
adc
rolb
push
cmc
mov
sbb
mov
mov
adc
push
fwait
sahf
in
mov
or
fimull
fisttps
out
mov
test
sub
enter
fsts
rcll
dec
movsl
and
sbb
cmpsb
je
loop
dec
add
and
mov
lcall
inc
das
add
out
xchg
mov
fs
imulb
dec
jg
and
mov
daa
hlt
adc
aaa
cmc
icebp
sahf
add
push
iret
cs
mov
adc
ret
jl
or
cmp
mov
jae
loope
ret
out
mov
loopne
enter
mov
pusha
dec
loopne
popa
inc
cmpsb
popf
lock
arpl
out
inc
aaa
pop
inc
xchg
and
mov
jno
mov
xlat
or
jl
cs
pop
rcl
fdivl
inc
dec
cwtl
xchg
xor
stos
mov
scas
mov
or
pop
sub
outsl
test
pop
sub
jecxz
lds
add
sahf
das
sahf
pop
incl
testl
add
das
mov
frstor
jns
push
insl
loop
call
test
sti
dec
mov
into
shrl
loopne
and
out
add
and
xlat
inc
in
xchg
mov
mov
mov
nop
dec
adc
add
jb
clc
repz
shrb
icebp
xor
mov
mov
xor
jle
and
cmp
outsl
js
cmp
cli
lea
fbld
imul
add
and
hlt
lret
cmpsb
mov
push
push
xor
daa
movsl
stos
nop
add
mov
scas
cmp
fldl
icebp
push
test
jl
shrl
sbb
les
sbb
cmp
mov
fistpll
push
mov
jb
scas
mov
jno
mov
sbb
pop
out
xchg
mov
repz
push
in
pop
fwait
add
lret
loopne
pop
adc
imull
add
adc
and
jl
dec
pop
call
and
mov
pushf
std
add
js
xor
or
sub
ficompl
movsl
shlb
mov
cmp
jo
jne
push
lcall
jns
stc
push
repz
cmpsl
aam
or
adc
xchg
lock
push
ds
in
mov
hlt
movlps
lock
bnd
push
jb
ret
test
adc
add
pop
sbb
popf
push
sbb
mov
aas
xor
loop
push
pusha
add
movsb
rorl
push
cmp
mov
in
add
in
adc
jne
push
jae
or
lea
lods
cs
sub
pop
add
mov
adc
and
arpl
and
jge
jecxz
and
sub
pop
lret
mov
jno
popf
dec
sub
xor
jge
lods
ds
and
adc
mov
cmpsb
jnp
rclb
or
mov
jns
xor
mov
pop
pop
in
or
nop
cmpsb
js
leave
mov
add
repnz
jne
out
data16
repnz
add
rcrb
mov
gs
jb
stc
xchg
or
outsl
jbe
dec
mov
adc
pop
imul
mov
jo
sub
cmp
scas
inc
nop
cli
mov
sub
xorl
insl
sbb
pop
push
and
push
mov
outsl
xchg
or
aad
aam
ret
jbe
lods
mov
inc
pop
lea
daa
aam
sub
mov
inc
int
or
sbb
insb
jns
adc
sbb
out
push
in
rclb
lods
and
xchg
mov
xor
loop
jno
mov
add
je
out
mov
loopne
jns
stc
xchg
mov
cmc
xchg
mov
loopne
xor
push
cli
push
addr16
xchg
aas
adc
push
dec
mov
cmpsb
push
jecxz
jo
xchg
cmc
sbb
mov
fiaddl
fidivrs
add
leave
in
xlat
das
mov
cmp
add
jmp
js
mov
sub
data16
mov
add
mov
js
jnp
push
jmp
aaa
es
push
jle
mov
jmp
dec
mov
adc
cmp
aam
in
cwtl
ljmp
mov
xchg
data16
pop
or
pushf
dec
adc
ja
leave
pushf
jne
cmc
cmc
icebp
dec
ss
sahf
sarb
add
bound
push
cmp
mov
mov
push
push
out
push
nop
fldl
lods
sub
push
cmp
jecxz
lret
in
push
movsl
test
repz
lcall
mov
cltd
int3
mov
inc
ja
arpl
cmp
push
dec
xchg
dec
push
lds
fidivl
inc
gs
cmc
loopne
movsb
out
pop
push
out
sub
rolb
inc
cmp
out
test
mov
adc
jp
adc
sub
xor
mov
adc
popa
add
cli
mov
dec
adc
mov
pop
pushl
fs
push
in
jle
jle
clc
inc
ret
pop
push
ret
movsl
sub
xor
sarb
arpl
roll
decb
outsl
inc
nop
nop
dec
clc
push
xchg
test
inc
fwait
lock
stos
and
push
push
xor
stc
loop
cltd
or
gs
cmpsl
add
mov
insb
fidivrl
lea
in
aas
outsl
push
cmc
mov
jle
in
fnsave
xchg
clc
test
out
cmc
fidivl
cmp
fcomip
push
mov
scas
mov
xchg
and
mov
inc
cmp
mov
jp
cli
lock
xor
test
cmpsb
jnp
or
mov
sbb
out
dec
in
out
daa
std
mov
repnz
mov
pop
idivb
outsb
cmpsl
xor
bswap
scas
div
push
js
in
insl
fldenv
jp
out
mov
lret
mov
test
aaa
sar
dec
mov
ljmp
jne
movsb
loope
stc
sub
jp
jl
xor
dec
pop
scas
ss
inc
sahf
popf
fstpl
or
movsl
jns
cltd
mov
push
push
and
daa
repnz
push
push
pop
stos
rcl
xchg
adc
pop
std
jne
cmp
jnp
hlt
cmpsb
mov
lcall
adc
cmpsb
add
lret
inc
lock
inc
sub
dec
into
testb
lret
inc
ja
sub
js
mov
fdivr
xor
idivb
mov
movsl
std
xchg
push
test
in
cmp
xchg
das
sub
jo
shrl
cltd
sub
jno
outsb
jnp
dec
pop
mov
mov
insl
inc
rcl
or
jo
test
loopne
lods
mov
mov
xor
std
pop
mov
lcall
push
andl
aaa
jno
cmp
or
fdivrs
lods
cmp
xchg
mov
nop
xor
call
cmp
sub
inc
in
xchg
pop
sub
inc
rorb
stos
push
sub
xor
jb
lock
xchg
sub
icebp
sub
pop
scas
add
loop
and
mov
xchg
xor
sub
inc
xor
mov
iret
sahf
ja
std
or
imul
rsm
scas
mov
test
sbb
inc
dec
pushf
sub
mov
jmp
lret
out
adc
icebp
lods
pop
pop
int
insb
add
daa
cmpsl
push
sbb
mov
cmp
sub
sub
fbld
adc
int3
cmpsb
jae
add
mov
mov
pop
xchg
pop
fnsave
int3
mov
dec
out
lcall
or
jg
repnz
xlat
out
mov
std
loope
xor
iret
cmp
idiv
jo
repnz
or
mov
fcmovnb
ja
xchg
clc
sub
lods
stos
mov
cmp
pop
stos
pop
add
mov
lahf
adc
mov
add
cmp
jle
sub
out
xor
sub
sub
daa
pop
outsb
dec
arpl
int
dec
imul
test
cmp
mov
lods
movsb
in
loope
add
jb
xchg
mov
sub
call
pop
add
xchg
and
sti
jnp
push
mov
subl
sub
pusha
cmc
imul
test
sub
xor
sahf
popa
adc
les
pushf
or
sahf
insl
test
fsubs
mov
sar
pop
popa
jp
push
not
scas
outsl
push
add
mov
jg
xchg
popa
les
adc
cmp
gs
icebp
pop
xchg
in
lds
shrl
mov
mov
outsl
mov
xchg
xchg
mov
mov
out
in
dec
cwtl
add
dec
push
inc
aas
sti
push
pop
xchg
add
inc
pushf
fmul
sbb
and
jns
adc
mov
lret
flds
shrl
stos
jno
sub
ds
xor
mov
jmp
ret
lret
pop
adc
out
adc
xlat
pop
and
les
or
jnp
jb
cmpsl
ja
sbb
aas
push
addr16
jb
adc
rcll
pushf
push
xchg
ljmp
call
or
icebp
lcall
pop
adc
or
gs
jmp
fwait
pusha
cmp
mov
or
sub
mov
sbb
in
adc
into
lcall
pusha
or
lahf
push
test
rcrb
rcll
push
jle
fwait
inc
adc
into
mov
imul
mov
aad
sbb
jmp
rcll
mov
dec
dec
call
movsl
adc
push
or
and
cmc
sbb
cmp
cmp
les
dec
adc
or
sub
in
ret
and
into
or
xchg
fwait
adc
xchg
enter
je
xchg
cld
xlat
inc
aad
test
mov
dec
ja
xor
in
int3
and
pop
lahf
mov
cld
int3
es
mov
pushf
into
mov
je
icebp
call
mov
outsb
and
cld
scas
cwtl
or
jnp
dec
ljmp
fidivrl
push
lods
pop
stos
je
or
or
in
sbb
dec
cmp
jns
xchg
jl
loopne
sbb
adc
xor
jbe
or
es
adcb
add
out
ds
xchg
imull
stc
or
cmp
jecxz
sub
and
mov
or
loope
jo
push
push
xorb
push
mov
pop
outsb
sub
add
aam
mov
dec
loopne
daa
or
inc
popa
xchg
mov
add
cmp
idivl
jp
lret
es
mov
stc
and
cmp
dec
test
pop
push
mov
sahf
js
inc
repnz
clc
stc
lahf
lods
xorl
xchg
jno
sbb
inc
adc
adc
jbe
popf
aad
pop
inc
dec
pop
fsubrl
push
out
xchg
jb
divb
ds
push
mov
aas
mov
pmaxsw
or
mov
xchg
and
jmp
sub
pop
clc
sti
into
je
int3
incb
sbb
push
mov
lea
cmp
enter
mov
add
movsb
fadd
insl
outsb
cltd
mov
and
push
je
cmpsl
mov
push
leave
aaa
push
push
aad
push
mov
addr16
leave
insl
repnz
mov
add
mov
sbb
push
sbb
push
jmp
or
ficoml
push
jmp
or
cmp
sub
adc
push
inc
sbb
xor
sbb
popa
fisubrs
shlb
mov
adc
stos
cmp
jo
push
jg
bound
sbb
in
int
js
fcmove
pusha
cwtl
mov
add
xchg
and
fistps
push
insl
sub
out
filds
inc
lcall
shlb
or
out
xor
clc
or
test
jae
add
and
lcall
xchg
xchg
xor
pop
loopne
scas
inc
dec
inc
and
inc
dec
fcomip
leave
adc
sti
mov
stc
inc
adc
push
mov
add
icebp
stc
in
mov
loop
push
fistl
loopne
dec
adc
pop
lcall
add
shll
mov
enter
add
jb
push
lods
xor
pushf
es
movzbl
xchg
in
sub
shll
xor
xchg
lea
vhsubps
cmp
sub
xchg
and
xchg
sub
and
mov
jns
mov
push
out
jg
push
cmc
inc
cmp
int
or
sahf
mov
or
loop
imul
push
in
neg
jge
jg
adc
out
aad
hlt
jmp
outsl
in
aad
jae
movsl
mov
sahf
add
and
xchg
xor
xor
fcoml
dec
repnz
adc
dec
outsl
jb
pop
mov
dec
sti
enter
push
test
pop
repnz
inc
dec
mov
repz
mov
insl
adc
push
or
gs
sahf
mov
pop
push
std
lods
or
mov
mov
mov
cs
sbb
and
push
inc
push
dec
imul
mov
call
in
inc
or
push
push
fwait
enter
push
push
adc
pop
jl
popa
xchg
jb
sbb
jg
add
mov
leave
daa
es
xchg
mov
scas
jno
insl
push
mov
call
stos
mov
push
mov
jbe,pn
mov
cmp
inc
test
cs
cmpsb
lahf
xchg
int
xor
sbb
dec
in
mov
sbb
push
iret
mov
repnz
sbb
jmp
pop
icebp
rcrl
inc
iret
subb
sbb
mov
jnp
lahf
pop
dec
dec
mov
rclb
test
sub
int3
cli
les
xorl
insb
fildll
xchg
decb
cmpsb
enter
and
sbb
loope
leave
mov
fwait
add
xchg
aad
xor
push
or
aam
and
icebp
daa
inc
test
fucomp
insl
outsb
pop
fstpl
and
stos
in
push
aas
xchg
sub
hlt
dec
setns
popf
loope
mov
xchg
add
cmp
mov
push
xor
loop
jg
push
ss
xor
cmp
fidivrs
cmp
je
sahf
int
pop
add
inc
insl
movsl
pop
jno
stc
pusha
or
daa
jecxz
or
pushf
fldcw
jle
xor
aam
mov
jmp
push
out
idivb
mov
mov
arpl
mov
scas
add
xchg
add
pop
xchg
mov
lret
jno
sbb
fdivrs
ljmp
cmpsl
xchg
mov
sti
sbb
or
lds
in
aas
ret
xchg
les
inc
push
push
mov
and
notl
mov
adcb
sub
mov
cld
bound
pushf
je
fisubrl
test
mov
shrl
mov
aas
sub
mov
out
sbbb
mov
sub
test
cmpsl
fstps
push
test
outsb
push
paddw
popl
push
mov
hlt
adc
dec
std
jns
pushf
inc
inc
aaa
fnstcw
mov
xchg
mov
clc
popl
hlt
push
fbld
mov
ja
dec
add
fstpl
insl
divb
cmp
xchg
mov
mov
daa
add
pop
pop
add
dec
ss
cmp
mov
icebp
jb
cltd
xlat
and
lret
std
cli
cmc
fldcw
pop
adc
cmpsl
xchg
add
stc
sbb
loopne
stc
lret
int3
lret
pop
dec
stos
jmp
test
or
xchg
ret
jns
adc
mov
dec
push
mov
xor
aaa
xor
imul
jle
and
out
cmp
clc
in
in
out
loope
cmp
in
pop
adc
push
jne
and
dec
add
add
in
xchg
push
adc
mov
inc
test
ds
movsb
into
xchg
imul
int
jne
sbbl
test
loop
iret
cmpsb
imul
sub
or
clc
shlb
cmpsb
cmpsl
cwtl
into
les
push
hlt
or
add
mov
shl
decl
jle
push
js
fnsave
pop
test
sbb
push
sub
cmp
and
mov
fisubs
dec
sbb
fisubrl
in
xor
jns
outsb
popf
add
je
push
push
enter
mov
mov
imul
jo
adc
fwait
xor
data16
aaa
mov
ss
sub
jp
mov
sbb
jno
ja
repnz
loop
push
test
repnz
loop
pop
jae
lock
jb
push
rclb
add
adc
push
jl
js
mov
psubusw
js
xor
sub
xchg
mov
adc
xchg
in
jle
or
rorb
daa
jnp
push
mov
leave
mov
add
mov
fwait
adc
and
lahf
push
daa
sbb
adc
sub
iret
pop
fwait
aad
lods
adc
mov
mov
int
in
jl
lods
iret
jb
lods
pop
push
xor
push
int3
int
cwtl
testl
pop
lds
ljmp
repz
mov
scas
aam
mov
outsl
addb
lret
insl
xrelease
cmpl
or
add
test
pop
clc
subb
push
inc
arpl
add
fdivrs
and
or
push
mov
movsl
stos
cmc
ss
mov
lds
cli
jae
xor
xchg
dec
adc
lea
pop
dec
push
pop
or
sub
addr16
sbb
adc
mov
cwtl
out
cs
jns
inc
stos
out
add
fwait
test
sahf
gs
popa
fdivp
ret
shlb
pop
aas
push
ficomps
mov
mov
mov
jno
sub
add
inc
loop
lea
repz
iret
xchg
aas
or
ret
pop
mov
sub
mov
mov
push
insb
dec
adc
rcl
push
push
mov
cmp
cmpsl
enter
xor
in
jnp
push
mov
pusha
lods
jbe
mov
pop
lret
mov
lods
fwait
data16
ds
xchg
nop
sti
jo
ret
fistl
add
test
adc
test
add
mov
adcb
xor
rclb
and
xorb
stos
out
test
stos
or
loope
cmp
dec
add
daa
adc
mov
sti
mov
lcall
nop
add
sahf
and
pop
mov
mov
arpl
adcb
call
inc
mov
xchg
and
jmp
pop
inc
les
push
jb
arpl
add
lock
mov
jns
adc
stos
pop
pushf
push
in
adc
in
ds
ret
mov
cli
loope
jo
pushf
out
arpl
mov
xor
adc
mov
inc
arpl
rorl
mov
xor
test
addr16
mov
sbb
mov
and
mov
sub
adc
test
add
jbe
cltd
inc
push
xchg
mov
push
pop
or
setne
loope
insl
jo
lea
add
orb
or
mov
push
adc
addr16
shll
mulb
inc
test
xchg
bound
fwait
icebp
cltd
cmp
mov
or
push
cmpsb
fs
std
mov
push
out
pop
cs
jno
jno
jnp
scas
cmp
pop
cmc
cmp
jnp
inc
fsubrs
mov
scas
test
pop
loop
cwtl
and
fists
add
inc
and
fnstcw
into
in
mov
add
insb
mov
xchg
or
seta
sub
pop
lods
and
mov
imul
inc
std
rcrb
subl
and
pop
cmp
lods
into
cmp
push
int
xor
aad
pop
bound
in
fcomps
pop
jecxz
in
cltd
xor
and
fwait
sub
xor
ja
jb
fwait
std
lea
mov
rcr
mov
jge
arpl
call
pop
cmp
jae
scas
popf
xor
int
adc
jecxz
rol
pusha
inc
nop
into
xchg
scas
sbb
push
incb
pop
lods
push
pop
jo
sub
sub
negb
ss
scas
mov
mov
cmp
jne
hlt
mov
and
rolb
insb
lcall
adc
aad
jne
and
mov
and
sub
mov
in
add
loopne
push
cld
pop
add
dec
int
shr
sahf
adc
std
cmp
aaa
fcoml
mov
int3
mov
xlat
fsts
add
add
imul
addr16
cltd
aam
lods
or
aad
cld
push
jecxz
dec
stc
or
and
popa
rolb
and
and
loopne
dec
test
in
push
ret
daa
mov
pop
push
repnz
push
adc
sub
sub
loopne
rcrb
out
xor
cmpsb
jecxz
xchg
std
loop
mov
pop
sbb
ljmp
push
mov
or
xchg
lahf
or
into
mov
scas
ret
xchg
sbb
push
movsb
sarb
inc
mov
shrl
es
jle
out
push
push
leave
jmp
aaa
add
adc
pop
xchg
incb
loope
pop
jbe
add
mov
xor
sub
xor
adc
rorb
das
dec
pop
xor
inc
jecxz
inc
in
mov
pop
mov
cmpsb
jmp
jmp
arpl
mov
ds
lods
push
jae
mov
xor
xchg
inc
jge
push
nop
shr
call
mov
add
cmp
pop
xor
or
lahf
stos
mov
mov
int3
in
ret
and
ret
cld
cmp
stc
push
mov
stos
jno
jnp
lret
mov
rclb
mulb
xchg
sarl
pusha
sahf
imul
movsl
testb
sub
icebp
into
pop
and
fisttpll
xchg
dec
add
testl
shlb
mov
mov
jmp
dec
mov
jae
fisubs
mov
mov
sbb
mov
setno
adc
mov
jb
out
lock
adc
xor
inc
scas
mov
pop
pop
xor
sahf
cmpsb
jle
fnstcw
arpl
lods
jle
dec
into
fildll
sbb
shlb
sub
les
inc
xchg
add
lods
sbb
mov
nop
outsl
sbb
test
cmp
lock
loope
sub
and
nop
jmp
outsl
stos
sbb
pop
cli
int3
mov
lret
mov
xchg
add
outsl
decl
loope
mov
popa
ret
in
std
addr16
lret
out
push
mov
dec
fstpl
vcvtsi2sdl
push
push
mov
xor
and
testb
decl
cmp
in
mov
rorb
xor
sbb
in
xchg
jno
ss
sub
xlat
in
mov
repnz
jns
lahf
pop
and
jg
repnz
lock
inc
dec
fisttps
mov
stos
mov
call
cmp
je
clc
jmp
push
push
in
xchg
mov
lea
lcall
cli
cmp
out
sub
pop
push
fdivl
iret
cmp
lret
pushf
das
imul
and
out
daa
fs
out
and
or
lea
lods
fs
inc
roll
test
jb
scas
popa
push
dec
add
sbb
sub
inc
jo
ret
push
and
ret
mov
sbb
pop
imulb
add
arpl
jle
mov
inc
push
sub
hlt
add
sub
jge
lret
xchg
mov
iret
adc
in
cmp
and
mov
and
jnp
xchg
jb
mov
jno
sub
and
daa
sbb
mov
push
shlb
shlb
inc
jnp
adc
ds
cmp
pop
cwtl
cmp
jnp
lahf
outsl
sbb
jle
rol
sbb
std
les
pop
and
pushf
pushf
pushfw
mov
xchg
dec
cwtl
scas
cmp
test
push
pop
sar
pop
push
xchg
sbbb
leave
ja
pop
aad
push
rorl
mov
stos
dec
mov
pop
je
pushf
fmuls
outsl
sbb
popf
repz
sub
xchg
outsb
mov
jae
or
imul
xor
loopne
or
outsl
into
jno
cmp
jecxz
sarb
sub
mov
imul
mov
ljmp
push
cmp
push
push
push
xchg
repnz
int
pop
mov
xchg
outsl
dec
jb
and
hlt
mov
xchg
sub
loopne
xchg
mov
cmc
outsl
dec
mov
xchg
push
dec
popa
decb
and
repnz
out
or
mov
lahf
mov
das
xchg
mov
and
adc
ljmp
mov
mov
and
sbb
fistps
in
mov
push
jbe
mov
xchg
addr16
mov
notl
push
pop
push
cld
subb
mov
dec
stc
sti
aas
sbb
in
jns
and
add
jecxz
mov
loopne
movsb
cmp
cld
aad
lret
pop
xor
rcl
pop
das
movsl
cmp
cltd
shrb
or
and
shr
test
das
rolb
leave
adc
mov
arpl
stos
push
mov
test
add
insb
inc
call
je
jb
jae
stos
test
in
adc
popa
rorb
dec
push
rolb
push
jge
scas
loop
jo
std
fwait
xor
push
loop
dec
faddp
xor
cltd
push
inc
fisttpl
aad
sub
lock
dec
aas
rorl
jp
iret
dec
int
dec
mov
jbe
pop
and
sarb
mov
mov
pop
push
mov
out
fmuls
dec
mov
pop
shlb
js
jbe
mov
std
xchg
fsubs
cmp
pop
xor
pop
enter
mov
jns
call
inc
cs
gs
or
nop
or
mov
in
repz
repnz
jne
xchg
hlt
lcall
fidivs
inc
pop
je
mov
test
pop
cmp
inc
sbb
outsb
popa
shrb
sbb
add
cltd
jb
jmp
adc
lods
mov
sti
mov
adc
sub
repnz
outsl
push
shl
inc
sub
xor
push
insb
xchg
inc
cmp
ss
add
mov
mov
fs
insb
dec
in
cwtl
push
dec
lret
insl
mov
xchg
loopne
popa
jnp
inc
push
cwtl
push
push
test
imul
mov
mov
ljmp
cmp
cmp
lock
cmc
add
xor
test
cmc
mov
mov
xor
rol
jg
call
loope
sub
ja
out
outsb
xchg
movsb
hlt
push
fsincos
jl
enter
and
loope
cli
jl
xor
test
addr16
fs
push
adc
adc
add
mov
mov
mov
mov
xchg
int
mov
xor
adc
orb
mov
cli
insl
iret
out
addr16
fwait
sti
xor
or
jl
push
fsubs
out
inc
sbb
int3
adc
or
push
fwait
push
mov
pop
sbb
mov
xor
negb
or
lock
push
inc
imul
dec
dec
adc
jno
aam
js
jle
mov
add
inc
and
pop
pop
fnstenv
mov
ret
lcall
test
les
pop
add
push
jl
add
stos
and
jae
testb
icebp
pop
aaa
clc
dec
xor
sub
dec
sbb
dec
sub
xor
stos
sarl
or
in
rcrb
rcr
data16
es
sarb
pop
jp
sub
shl
sbb
cltd
loop
mov
xor
cmpsl
bnd
adc
mull
xchg
call
nop
arpl
dec
ss
sarl
or
or
jno
push
fs
cld
das
outsl
jo
push
mov
lods
push
sub
jge
aam
insl
test
ret
push
orl
xchg
lods
cmc
sbb
mov
js
push
andb
ljmp
xor
aaa
pop
imul
jno
lahf
sbb
push
pop
dec
repz
jbe
jl
vmwrite
lock
or
push
pop
pop
orl
inc
popa
cmp
leave
push
xlat
or
mov
or
add
jnp
fisubrs
xor
call
cmp
add
aam
lcall
add
inc
xchg
sub
lcall
arpl
pusha
sbb
and
das
pop
push
ret
in
inc
adc
addb
adc
sub
push
cmpsb
push
in
cld
enter
inc
pop
push
cmp
pop
in
add
xchg
push
mov
adc
mov
and
nop
shlb
jg
loope
leave
mov
fcmove
mov
pop
xor
lea
jp
xchg
sbb
fiadds
out
ret
cmp
mov
jmp
mov
push
pop
fistps
repnz
xor
cwtl
nop
xchg
and
les
aad
fdivl
pop
mov
and
dec
sahf
push
ss
stos
push
cmp
jg
pop
jl
xchg
insb
movsl
int3
mov
loopne
or
inc
xchg
jmp
lock
cmc
sub
jae
dec
incl
out
les
xor
xchg
fildl
stos
pop
mov
das
clc
push
sbbb
int3
cwtl
cwtl
stos
dec
mov
jmp
stos
or
popa
leave
push
rolb
dec
cmpl
popf
mull
test
add
or
mov
lock
loope
or
xchg
or
pop
shll
dec
icebp
xor
aas
es
aas
pop
mov
scas
sti
int
add
sbb
rorl
mov
aaa
inc
fidivrl
push
adc
fbstp
dec
mov
add
ret
popf
mov
cmp
mov
or
mov
sbb
pop
rcl
repz
rol
aam
pop
loop
and
fcomp
xchg
aad
gs
dec
push
mov
sbb
inc
add
jnp
iret
jge
inc
pop
sar
dec
addr16
add
and
sbb
sahf
insl
push
je
int3
nopl
push
daa
cmp
add
jg
jle
popl
rolb
test
lret
fstl
sbb
jmp
mov
push
add
jo
push
stos
sbb
mov
jne
pop
clc
pop
inc
adc
ds
xchg
ss
or
lret
mov
pop
dec
mov
pop
adc
push
sbb
pop
dec
cwtl
xchg
fcomps
push
cmpl
repnz
lcall
jge
imull
mov
call
sbb
popa
popf
sub
gs
xlat
das
lahf
fs
jmp
cmp
xchg
jb
movsb
cmp
movsb
xor
pop
cmp
in
into
gs
mov
sub
adc
int3
fs
into
or
inc
dec
jo
inc
out
lock
fcmovbe
cmp
inc
xor
sar
or
data16
xchg
les
mov
mov
sbbb
mov
ret
stos
mov
xor
jbe
fdivl
sub
popa
call
movsl
adc
cmpsb
cmp
cmc
lcall
add
fisubl
outsb
mov
or
je
mov
push
mov
imul
xchg
and
out
pop
fs
inc
outsl
icebp
sub
sbb
dec
movsb
and
adc
test
xchg
insb
or
push
add
mov
repnz
mov
int3
into
jne
icebp
icebp
int
call
add
fistpll
xor
icebp
jp
push
and
nop
loop
stos
mov
and
pop
mov
jge
mov
pop
neg
mov
jno
pop
dec
mov
call
repz
leave
jb
mov
rcrl
cmc
cmc
mov
popf
mov
insb
sbb
dec
xchg
cmp
xlat
cmp
test
psrad
xor
shrb
mov
jo
sbb
ret
shlb
test
sub
sub
adc
add
pop
cmc
in
push
xchg
bnd
pop
push
push
jo
xchg
test
mov
push
jl
inc
out
gs
test
dec
mov
or
mov
dec
ficoms
xor
mov
lahf
xor
cmpsb
movsl
xor
fisubl
movsl
inc
popa
lock
ds
dec
sub
cmp
and
scas
out
mov
mov
gs
aad
mov
call
data16
lods
pop
pop
mov
mov
pop
xchg
xchg
fiaddl
sub
nop
addr16
orb
out
cmp
ret
das
out
push
and
fiadds
mov
out
in
xchg
xor
sub
sub
xor
cs
cmp
sbb
xlat
fldcw
in
pop
xor
test
adc
ja
and
data16
sub
int3
lock
scas
movsl
movhlps
pop
xchg
int3
outsb
jecxz
cld
mov
mov
adcb
sbb
pusha
sbb
push
and
sbb
ret
inc
daa
jecxz
dec
fnstcw
xor
xor
mov
xchg
daa
sahf
pop
mov
adc
imul
add
xor
stc
call
shlb
mov
stos
adc
pushf
addr16
std
movsl
popa
jp
outsb
pushw
lods
in
push
push
push
mov
jb
mov
filds
jns
xchg
jnp
jp
pop
push
rorb
xchg
inc
dec
cmp
repz
rcrb
dec
imul
inc
jae
rolb
fdivr
and
mov
sub
push
loope
pop
cmp
js
sahf
and
pop
push
xor
inc
outsl
xchg
ds
imul
in
jno
repnz
jnp
andb
fidivrs
mov
fdivs
dec
mov
xor
and
aam
mov
mov
jns
pop
xor
cmp
into
xor
pop
test
dec
fisubrl
sub
xor
push
or
data16
movsb
pop
or
arpl
ss
mov
pop
leave
push
dec
outsb
sahf
aaa
fidivl
mov
je
cmpsb
push
std
and
shll
push
push
cwtl
and
and
push
pop
sub
repnz
mov
push
jp
xchg
mov
das
adc
sbb
imul
cmpsl
mov
lods
xor
adc
mov
lock
das
push
push
cld
je
mov
lea
fcompl
movsl
sbb
xor
cmc
dec
das
sub
aad
add
out
fs
sbb
cmp
cmp
enter
dec
mov
or
mov
cmp
stc
jg
sahf
cld
xchg
jnp
call
rorl
inc
dec
repnz
adc
enter
fidivs
sbb
test
shll
cmpsb
ds
xor
sbb
mov
daa
test
xor
jns
mov
or
dec
mov
cs
adc
pusha
and
jge
or
mov
cmp
jmp
push
movsl
cmp
out
push
adc
xchg
adc
pop
in
popf
mov
sbb
and
aad
hlt
push
mov
fbld
test
xlat
pop
adc
push
scas
push
iret
pop
mov
std
rcrl
pusha
mov
adc
inc
loope
jbe
and
mov
ret
int
mov
dec
xor
sub
notb
cmpw
push
cmc
xor
in
sub
xor
pop
loop
aad
adc
mov
push
cmp
cli
or
jmp
pop
nop
jecxz
sbb
push
movsl
mov
cli
fistpl
addr16
or
inc
add
pop
into
cmpsb
icebp
std
pop
jae
or
or
xchg
jp
pop
rorb
stos
dec
mov
sbb
mov
push
push
mov
cmp
hlt
pop
jae
inc
dec
jle
and
mov
popf
pop
testl
std
repz
jmp
dec
mov
jp
les
cmpsb
jb
lock
aam
cld
mov
dec
xchg
mov
ret
imul
dec
fisubl
lds
xchg
pusha
xor
pop
outsb
jnp
jl
jecxz
or
out
das
xchg
pop
mov
and
int
push
outsb
push
sbbl
xchg
popf
fwait
daa
push
and
and
jecxz
adc
sub
imul
popf
mov
pop
movsb
pop
out
fwait
xor
jnp
sti
inc
std
outsl
sub
or
into
push
mov
iret
aad
hlt
inc
pop
hlt
rep
pop
add
cld
cli
es
add
pop
lret
pop
add
adc
in
lock
shlb
cmp
inc
aaa
std
and
xor
jl
inc
in
inc
aaa
cmp
inc
aam
push
adc
push
sbb
arpl
jne
mov
test
jae
fldenv
sti
cli
mov
dec
xor
aas
arpl
mov
or
add
push
enter
adc
inc
pop
sbb
and
push
sbb
xor
repz
scas
cmpsl
shrl
rcll
xchg
hlt
dec
or
mov
add
aad
pop
aas
or
cltd
pop
dec
cmc
imull
sub
fistps
mov
cli
dec
fwait
sbb
sbb
aas
fs
and
in
pusha
int
mov
fildl
loop,pn
movsl
xor
clc
je
sbb
ss
xor
lahf
inc
push
sbb
lret
xor
in
inc
push
mov
mov
into
xchg
insl
out
neg
jne
push
test
cmp
adc
xchg
in
xor
jnp
jle
push
dec
lods
movsb
es
aad
in
inc
adcl
mov
std
jge
mov
mov
js
add
dec
fwait
xchg
notb
or
xchg
lcall
cwtl
push
jge
sbb
push
cli
inc
aas
insl
pop
out
mov
stos
mov
ret
inc
ja
lea
roll
push
xchg
mov
in
xchg
aad
inc
in
lock
xchg
pop
sarb
sbb
enter
enter
lods
add
loope
mov
xchg
mov
insl
aas
mov
pop
sbb
inc
and
cwtl
add
mov
dec
sbbl
adc
xchg
inc
jg
sbb
adc
fucomp
pusha
inc
lds
xchg
rolb
scas
loop
je
push
sbb
pop
mov
mov
stos
pop
push
xchg
imul
jne
mov
lea
cltd
lcall
fisubl
mov
loope
mov
cmpsl
add
mov
outsb
inc
stos
mov
ja,pn
in
sahf
or
push
adc
clc
or
or
inc
mov
xchg
or
pusha
iret
mov
les
fldl
push
faddl
jae
inc
cmp
cmp
xor
aad
xchg
loopne
in
enter
hlt
movsb
sarb
jnp
data16
lods
das
add
rcrl
in
inc
jp
fdivr
pop
xor
out
lcall
jne
imul
jno
cwtl
fxtract
mov
imul
jb
pop
push
dec
gs
iret
inc
mov
cld
sub
push
pop
inc
arpl
sub
xchg
jge
nop
cmp
push
xchg
sbb
mov
xchg
lods
test
test
daa
int3
push
mov
mov
shrb
mov
add
insl
mov
mov
mov
jmp
adc
and
test
ljmp
jl
and
mov
push
jl
pop
pop
or
hlt
scas
in
and
add
mov
out
in
mov
mov
or
cmpsl
mov
bound
sub
mov
into
sti
js
jno
cmp
fdivrl
mov
fnstcw
sbb
mov
nop
inc
mov
imul
in
into
inc
cmp
jl
leave
mov
xor
pop
fidivrl
jge
cmp
mov
aas
scas
stos
mov
pop
and
loop
push
push
xor
pop
jno
fildl
mov
sbb
fucompp
test
idivb
jge
into
cmp
int3
fiadds
shlb
mov
mov
and
aaa
lcall
shrl
jmp
popa
xchg
push
jp
and
roll
add
or
add
add
xor
fbld
movsb
mov
pop
lods
xchg
mov
push
dec
xchg
jns
enter
sti
dec
std
cmpsl
xchg
ss
into
in
jecxz
hlt
addr16
jge
das
sbb
rcll
cmpsb
aad
lret
push
incl
jo
jns
ja
dec
xor
cmp
ss
pop
pop
negb
aad
fs
push
sahf
aaa
and
fstps
add
loope
clc
arpl
popf
aas
fisttps
aam
mov
xchg
dec
inc
imul
out
xchg
into
push
dec
inc
sbb
out
out
icebp
mov
pop
loopne
in
test
sti
push
sbb
dec
inc
popf
adc
jge,pt
shll
das
sbb
call
push
mov
adc
jecxz
popf
pop
mov
jg
add
cmc
xchg
add
pop
or
xchg
add
icebp
pop
cli
add
mov
aaa
and
inc
push
fdivrl
shl
stos
cmp
shlb
repz
sbb
sahf
mov
pop
sub
push
jge
fbstp
sahf
fadds
scas
mov
out
pushw
repz
jbe
push
inc
pop
xchg
sbb
push
adc
repnz
xchg
outsl
push
stos
and
cltd
cmp
into
fidivl
inc
scas
fadds
xchg
popa
mov
inc
test
jecxz
out
pop
dec
add
sti
or
xor
testb
or
and
mov
stos
clc
call
inc
loopne
rclb
push
pop
ss
cmp
mov
lea
aaa
iret
ss
ljmp
scas
add
adc
pop
xchg
sbb
inc
cli
out
push
jge
mov
push
inc
or
dec
cwtl
jbe
loop
push
mov
cmp
push
ss
xchg
lahf
fstp
add
adc
inc
repz
test
push
sub
lcall
cmc
xchg
fstpt
ret
inc
loopne
sahf
dec
and
andb
cmp
hlt
int3
xchg
lods
mov
jne
adc
insl
movsb
mov
cmp
cld
int3
out
or
stos
je
xor
mov
enter
xchg
mov
test
xchg
enter
add
addr16
out
jg
arpl
push
add
jecxz,pt
add
dec
in
pop
jmp
dec
push
out
loop
push
mov
icebp
rclb
loopne
clc
cmpsb
jo
dec
fisttpll
jbe
add
stos
dec
clc
xchg
sub
xlat
sbb
inc
fcoms
push
add
lods
cs
fstps
jb
stos
aad
xor
insl
mov
rcrl
xlat
jns
faddp
test
mov
loop
dec
in
in
xlat
cmp
xchg
inc
xchg
jbe
cli
imul
test
xchg
sub
lock
push
xchg
mov
xchg
dec
imul
push
xchg
aad
fcom
push
sbb
cmp
and
mulb
add
movsl
inc
mov
xor
pushf
mov
sub
leave
jb
or
imul
add
por
es
push
adc
pop
in
nop
pusha
fnstcw
scas
push
mov
and
mov
lcall
mov
fs
dec
fs
test
and
cmc
jnp
adc
lock
and
mov
flds
mov
leave
lret
loop
arpl
sbb
ret
xchg
push
mov
mov
les
lds
in
iret
pop
jne
mov
inc
add
popf
mov
je
push
mov
callw
mov
flds
insb
loop
adc
fisubrs
enter
sbb
jmp
out
movsb
fnstsw
sahf
out
sub
xchg
xor
sbb
add
and
dec
scas
pop
mov
xor
inc
cmp
pop
dec
daa
sbb
lods
loope
mov
push
loop
jmp
xor
jg
pop
bound
popa
mov
scas
mov
es
insl
pop
mov
movsl
and
movsb
ret
push
notl
mov
lahf
nop
popf
or
sub
dec
stc
add
xor
pop
inc
mov
pop
adc
inc
sbb
or
adc
mov
popf
sub
push
fcmove
mov
stc
mov
mov
mov
clc
jle
mov
pushf
adc
data16
jns
sbb
jg
adc
rcrb
add
hlt
or
iret
mov
mov
pop
adc
shlb
inc
sub
lea
or
popa
fistpll
lock
cmp
fadd
mov
out
adc
insb
xlat
sbb
popa
inc
adc
aam
leave
imul
adcb
push
negb
ret
pop
xchg
mov
inc
and
stc
fwait
mov
inc
ret
ds
aas
sti
cmp
pop
nop
in
jnp
push
pop
jno
jbe
inc
mov
xchg
xchg
mov
fimuls
lods
outsl
cmp
nop
aad
movsb
mov
addr16
cmc
jle
shll
add
pop
sbb
shrb
push
test
push
xlat
cmp
sbb
jb
jno
leave
inc
pop
dec
jb
or
int3
dec
imul
add
insb
lcall
std
jb
mov
inc
add
cmpsb
ror
xor
push
pop
arpl
xchg
sub
or
outsb
gs
mov
lea
idiv
inc
stos
mov
mov
insb
jle
enter
sti
pop
and
out
rclb
or
inc
mov
xorb
fsubs
cmp
scas
stos
adc
sbb
mov
outsb
dec
or
xlat
sbbb
lret
xlat
mov
jne
mov
cs
xor
sti
repnz
xlat
in
push
sub
mov
mov
xchg
and
stos
pop
jl
daa
mov
das
dec
popf
ss
clc
icebp
fisubrl
add
lods
in
push
push
cmpsl
fwait
movsb
mulb
inc
scas
test
mov
fldt
or
mov
jns
ljmp
test
in
add
sub
pushf
lcall
ret
push
lret
push
push
xor
xchg
out
clc
cmp
stos
fwait
in
jmp
nop
push
lock
test
mov
repnz
pop
push
pop
iret
imul
inc
inc
jp
sti
and
pop
xchg
jecxz
addr16
shr
lret
or
std
sub
mov
jl
out
mov
and
lock
lahf
movsl
daa
pop
dec
sbb
push
push
sub
fildll
in
scas
lock
sarb
jecxz
xchg
pop
xchg
xchg
adc
xor
dec
sub
jb
nop
cmp
jns
popa
and
rorb
cmc
mov
sbb
scas
hlt
ficoml
xor
fdivrp
scas
xor
aad
xchg
shrl
stc
push
push
rorb
orb
mov
mov
shlb
xchg
int
mov
test
fsubrl
jl
lret
jb
insl
inc
dec
rclb
lds
xor
and
test
imul
dec
inc
pop
in
out
cmc
scas
popf
xor
mov
xor
icebp
aad
jg
lahf
sbb
lods
cs
rorl
jae
mov
data16
push
mov
or
and
les
xchg
add
xlat
pop
ja
cmpsl
fldt
cmp
and
int3
fsubs
jnp
lret
sti
fisttpl
out
pop
repz
gs
push
jecxz
jle
adc
mov
in
enter
xchg
rcrl
pop
xchg
out
push
add
bound
ss
jns
mov
loope
fildll
dec
iret
push
jne
test
cmp
jo
mov
addb
pushf
lret
lret
lods
mov
lahf
xor
mov
mov
js
out
inc
lret
inc
mov
std
xchg
iret
shll
test
inc
cli
call
rcrl
ja
cli
pusha
in
cmp
jecxz
adc
flds
inc
ljmp
sub
aam
cmp
orl
ljmp
fwait
popf
xchg
jbe
xorb
dec
fldl
pop
inc
roll
cmpsl
pop
lock
movsl
filds
xor
push
lret
and
pop
pop
shlb
dec
xchg
aad
xor
stos
loopne
mov
inc
mov
and
int
sub
dec
mov
dec
cmp
pushf
sbb
gs
inc
jl
xchg
test
xchg
aaa
mov
sub
jns
sbb
push
jge
es
add
test
push
mov
xchg
inc
mov
mov
movsb
jg
inc
adc
aaa
mov
shlb
in
cmp
mov
int
lcall
stos
xchg
nop
push
fldt
xor
lods
lea
out
push
movsb
add
jle
div
popf
test
loop
lea
imul
sub
inc
test
ss
je
xlat
mov
cmp
and
sahf
cltd
test
xor
or
dec
sub
movl
repz
push
push
xor
mov
rclw
iret
pop
add
popf
sub
loope
fs
jmp
push
add
ret
insb
sbbl
fists
mov
lods
xorl
inc
movsb
xor
insl
cmp
cmp
xor
lock
mov
fwait
pop
insb
lcall
push
jae
pop
fidivrl
xor
lock
jns
js
je
push
inc
test
pusha
dec
cmpsl
call
test
js
xor
aad
popf
cs
shrl
sub
mov
daa
pop
add
xchg
std
and
cmpsl
shlb
out
dec
xchg
nop
mov
scas
and
lret
and
aas
test
int
test
lcall
jbe
mov
mov
jno
xor
aad
es
shrb
enter
jge
arpl
mov
jnp
mov
jge
fdivs
fwait
sub
pop
je
in
add
stos
sbb
push
cltd
add
ret
jge
hlt
and
inc
dec
ljmp
ror
xchg
cmp
into
jb
imul
in
loop
xchg
add
jmp
clc
mov
and
push
scas
out
xor
scas
cli
loope
mov
push
lods
lods
aaa
inc
or
aas
leave
add
or
sbb
lods
or
and
and
mov
data16
mov
xchg
mov
mov
inc
pop
sub
pop
xor
les
add
inc
mov
adc
mov
adc
or
jmp
and
mov
pop
gs
movsb
cmp
mov
pop
lock
jbe
lret
xchg
dec
and
aas
data16
cwtl
xchg
ror
lcall
out
scas
test
mov
mov
and
add
inc
scas
shrb
cmp
popa
cmp
insb
pop
sbb
in
movsb
cmp
aaa
imul
sub
cmp
push
push
out
mov
push
mov
sub
and
pop
adc
arpl
add
mov
dec
out
nop
adc
shll
and
xchg
or
add
mov
add
cwtl
inc
add
popa
mov
push
xlat
hlt
jmp
cmp
push
mov
mov
arpl
push
jns
mov
adc
mov
inc
mov
push
push
xchg
fs
data16
mov
scas
negb
stc
stc
xor
bnd
push
sbb
jbe
outsl
int3
jle
and
mov
or
and
mov
ss
aam
cltd
enter
and
les
insb
les
xor
popf
jle
or
mov
cltd
loopne
repz
push
inc
adc
dec
cs
test
outsb
inc
mov
push
sbb
psllw
dec
in
jmp
rorb
imul
and
push
imul
add
outsl
jl
mov
insb
iret
aad
cmpsl
mov
popa
std
shrl
jg
sub
iret
jmp
xor
addr16
mov
mov
iret
fldt
push
inc
mov
scas
call
les
shr
xor
jge
mov
and
repnz
jl
aaa
inc
push
comiss
in
jnp
movsl
adc
ficoml
jb
sbb
out
push
ja
adc
xor
outsb
mov
in
push
inc
lds
cltd
test
and
or
sti
into
push
cmp
les
dec
les
movsb
add
jae
fwait
inc
lret
mov
inc
xchg
cmc
outsb
lods
es
jno
xor
add
aam
push
jne
jl
pop
pop
mov
repz
shll
and
cmp
adc
mov
pop
add
add
cli
jnp
cmc
pop
mov
lahf
xor
cld
pop
adc
xchg
jmp
adc
push
scas
jp
or
pusha
xchg
rclb
xchg
push
jno
fisttpl
shll
jmp
and
adc
sbb
mov
sub
sbb
inc
ret
mov
pop
fldcw
test
ret
fists
pop
cmp
jbe
sarb
sarb
ja
dec
xchg
push
mov
repz
fstp
cwtl
dec
and
in
lret
sub
xchg
sub
orl
mov
stc
lock
je
xchg
mov
int3
jecxz
cmp
and
bound
bound
loopne
push
and
lds
jecxz
pop
sbb
sub
xor
pop
cmp
int3
es
or
push
test
aad
jle
inc
jo
cli
jbe
shl
pop
mov
inc
test
ljmp
add
xchg
mov
cli
loope
cmp
mov
dec
je
sub
inc
inc
jno
jbe
and
sub
cltd
xchg
xorb
addb
ss
imulb
lea
mov
jb
cmp
je
and
push
push
fcoms
push
jb
jo
cmp
mov
ljmp
cmpb
inc
jo
push
insb
icebp
in
sbbl
mov
aam
xorl
imul
lret
lea
sti
adc
scas
cmp
sub
push
inc
xor
pusha
pop
mov
xchg
xor
int3
cmp
out
aam
push
insl
lea
cli
popf
xchg
sbb
je
pop
sub
mov
mov
mov
les
sbb
enter
inc
ljmp
pusha
out
hlt
cmp
push
xor
xchg
jno
pushf
scas
movsb
faddl
add
jo
xchg
das
sub
dec
rcl
and
aad
cmp
inc
jl
mov
imul
leave
or
les
fisubrl
popa
stos
and
jle
in
outsb
mov
cmp
mov
lret
mov
adc
repz
repnz
pop
dec
jbe
enter
lods
add
jge
and
jbe
aam
xor
pop
stc
sub
cmc
das
push
popf
mov
or
xorl
push
mov
adc
mov
aad
adc
jg
sbb
mov
push
ja
sbb
ficoml
push
xchg
loope
scas
xor
in
xlat
sub
adc
sub
into
add
dec
sbb
mov
inc
outsl
push
dec
cltd
insl
cmp
dec
cwtl
jle
inc
xchg
and
adc
sub
dec
dec
aas
sub
jne
cmp
js
mov
imul
scas
adc
repz
xchg
adc
adc
mov
mov
mov
push
scas
adc
ljmp
lcall
xchg
lods
daa
ljmp
pop
shlb
xlat
adc
adc
mov
jge
movsb
and
lcall
pusha
sbb
pop
insb
outsl
aad
test
push
xchg
aam
imul
pusha
lret
sub
adc
add
add
arpl
add
adcl
mov
adcb
cwtl
xor
cmc
cmp
aas
idivl
outsl
adc
cmp
adc
fdivp
test
mov
and
movsb
sahf
outsb
inc
rolb
jbe
test
jbe
pop
fdivrs
inc
scas
add
fwait
jb
jmp
hlt
xchg
push
cs
lock
inc
outsb
pop
nop
push
add
das
es
mov
pop
les
mov
pop
jle
or
or
lock
mov
cmc
mov
pop
xor
repnz
or
rclb
ja
mov
sbb
and
les
lods
or
ficoml
mov
push
mov
daa
andb
jbe
lods
cltd
adc
loopne
sub
scas
xor
xchg
fisubrs
add
mov
imul
mov
push
cmp
inc
mov
jnp
pop
xchg
fnstsw
mov
or
insl
mov
ret
mov
aam
and
imul
and
and
dec
lock
enter
sti
fs
shll
cmp
jmp
cmp
scas
jle
addr16
xor
mov
pop
bound
test
add
imull
test
call
cltd
std
adc
mov
out
lcall
imul
testb
test
add
clc
push
xor
sarb
lea
call
sahf
adc
inc
sbb
mov
lea
dec
bound
sti
mov
fcmovnbe
fdiv
mov
lea
and
pop
mov
jbe,pn
pop
lock
xor
sub
out
cmp
xchg
cmp
jns
cmp
movsl
sbb
movsb
sbb
loopne
and
aad
in
bound
sbb
cmp
cmp
insl
js
mov
dec
xor
aam
subb
sub
in
aam
pop
xorl
bound
test
jo
sbb
sarb
push
and
xchg
cmp
or
sbb
popl
or
out
jl
shrl
out
stos
sbb
pop
sub
jnp
and
stc
ret
cmc
inc
jno
pop
inc
sbb
clc
cmpsl
mov
sar
stc
mov
fimuls
cmpsl
jmp
add
dec
imul
sbb
push
shlb
add
cmp
sub
inc
decl
pop
cmpl
addb
outsb
push
push
add
xor
jbe
mov
sbb
bound
sub
jne
ret
sti
adc
out
ss
pop
mov
popf
jns
iret
loopne
loope
test
sbb
and
popf
sub
rolb
out
xchg
cmp
cmp
mov
pushf
inc
in
call
jo
mov
les
mov
mov
mov
xchg
lea
jne
sbb
test
lahf
call
pop
scas
mov
pop
jp
mov
lret
roll
fisubs
sbb
pusha
imull
enter
ret
inc
popf
clc
sbb
pop
jmp
shll
mov
cli
sbb
mov
int3
pop
lods
mov
pop
repz
cld
xchg
adcl
lods
into
or
ljmp
fisttps
push
mov
mov
add
adc
jnp
int
int3
adc
push
gs
popf
sbb
js
adc
add
xchg
sub
pop
pop
loope
in
adc
push
fs
adc
popa
in
popa
mov
fmull
repz
mov
pop
push
pop
push
cwtl
mov
data16
stos
imulb
in
pushf
pop
pop
jecxz
sbb
sbb
inc
jae
out
stos
gs
mov
imul
pop
incb
jns
inc
mov
ficomps
cmp
xchg
iret
inc
add
fnsave
cmp
fadd
xor
cmp
xor
loope
cmp
sti
cmp
mov
sub
mov
into
xor
xchg
inc
int3
lahf
jno
jle
cwtl
xchg
pop
push
mov
xor
cmpl
fucom
inc
xchg
and
sub
dec
scas
xor
lea
pop
dec
sbbl
mov
movsb
cwtl
mov
xchg
dec
dec
rorb
sbb
or
jmp
mov
or
sti
lcall
xchg
mov
aam
bswap
loop
mov
fs
dec
incl
xchg
mov
mov
jge
adc
sub
fndisi(8087
popa
mov
icebp
push
pop
sub
in
shrl
outsl
push
mov
gs
out
data16
push
adc
sbb
add
inc
int3
jge
xchg
xchg
lret
fcmovb
outsl
std
dec
shlb
fcomi
cld
mov
rcll
repz
adc
test
imul
and
es
lret
lret
test
sbb
add
out
xor
lahf
lea
das
add
pop
push
add
idivl
jmp
add
test
dec
pop
push
aad
jno
jmp
imul
fstps
dec
mov
cmp
mov
xchg
or
clc
xchg
out
xchg
ficoml
ljmp
jbe
pop
mov
mov
in
es
jge
outsb
xor
sar
cmp
and
jnp
or
mov
test
add
jb
mov
ficomps
repnz
xchg
jne
push
stos
pop
or
pop
sub
in
mov
cld
in
lds
out
fwait
mov
clc
pop
or
out
lds
fwait
mov
sbb
jns
enter
jne
xchg
push
insb
xor
push
pop
mov
pop
loopne
dec
stos
lret
or
popf
xchg
adc
js
mov
inc
gs
jl
push
mov
adc
and
sbb
subl
fildl
xchg
xor
mov
pop
fdivrl
enter
stc
call
mov
test
add
cmp
adc
cld
sub
mov
xlat
jb
fwait
xchg
cmp
cld
inc
ret
rolb
xor
cmp
push
lret
inc
repnz
ds
shlb
aaa
sbb
js
ds
push
stos
dec
sbb
outsl
test
sub
pop
rol
sysexit
xchg
in
shl
sub
adc
xor
stos
push
mov
aad
stos
test
xchg
dec
inc
lahf
cs
add
cld
flds
test
addr16
push
xchg
mov
mov
rcrl
inc
pop
aas
lea
xor
push
movsb
push
xchg
imul
test
insl
or
repz
mov
div
xchg
inc
adc
push
and
jne
mov
dec
mov
sub
mov
jle
ja
bound
fs
pop
stc
xlat
roll
sarl
push
mov
mov
dec
leave
mov
adc
jl
sbb
xchg
in
mov
pop
out
mov
sti
ret
mov
and
ja
sub
inc
add
addr16
mov
sbb
js
icebp
dec
mov
es
iret
stos
in
and
cmp
rclb
push
or
mov
mov
mov
idivb
mov
hlt
jmp
cli
or
outsl
mov
repz
frstor
loop
fldcw
xchg
in
call
mov
or
test
pop
xor
push
rcrb
dec
aas
arpl
rolb
lahf
or
add
mov
mov
sub
out
insl
in
loope
lret
xchg
jmp
mov
xor
cltd
data16
nop
adc
jno
mov
or
mov
jbe
test
pop
push
mov
add
outsb
inc
add
cmp
ret
or
in
jo
add
stc
or
in
mov
jne
icebp
into
loop
pop
dec
shl
lret
pop
pop
mov
inc
ret
mov
and
lods
lret
hlt
inc
outsl
in
lds
or
outsl
shll
pop
cmc
add
cmp
xor
cmc
add
testb
jmp
std
leave
les
push
dec
inc
xor
xchg
xor
das
subl
push
add
add
push
or
ja
mov
xlat
cmp
out
dec
push
xor
je
cmpb
fbstp
loopne
fs
or
bound
jle
mov
nop
decl
lret
inc
mov
out
out
dec
or
divl
jo
cmp
cli
loope
mov
cmp
je
inc
pop
jl
sub
int3
or
cmp
fbld
xor
lods
sbb
mov
test
mov
dec
fbld
inc
lcall
cmp
mov
icebp
or
inc
hlt
mov
cmp
int3
addr16
xor
stos
sbb
xchg
ffree
stos
rorb
sub
test
sbb
imul
mov
cmp
cld
sbb
mov
scas
in
stos
outsb
push
fldenv
cmp
push
lods
lea
dec
mov
mov
push
popa
inc
dec
push
lcall
repnz
loope
sbb
cltd
iret
mov
loope
add
out
or
push
outsb
fwait
cmpsb
jg
out
mov
imul
fcomi
mov
push
xlat
cmp
cmp
stc
xchg
xchg
mov
or
shlb
mov
inc
sti
in
jbe
je
dec
xor
test
xchg
sbb
aas
mov
lcall
lea
mov
dec
jmp
fmull
push
cmpsb
movsb
mov
inc
pop
pop
add
lcall
mov
adc
xor
sub
push
rcrl
jle
jnp
mov
scas
enter
arpl
stos
jae
int
dec
scas
jb
sbb
xchg
push
lret
jns
or
xor
push
into
inc
adc
test
repnz
or
jp
or
jne
adc
add
test
and
add
pop
in
mov
and
add
and
push
cmc
outsl
pop
aas
movsl
mov
fwait
cmp
mov
xchg
sahf
jge
sub
jg
sub
xor
mov
ret
movsl
push
shr
sub
adc
std
lret
imul
add
test
clc
arpl
std
fsubrs
mov
mov
mov
negl
sbb
cmc
jge
movsb
into
mov
sub
jge
lret
aam
lea
les
mov
rclb
mov
push
add
add
ret
shll
out
call
and
cmpsl
insl
adc
mov
stos
jge
or
idiv
les
arpl
lcall
int
jl
mov
add
push
xchg
leave
jle
out
cs
ss
xor
scas
xor
mov
mov
lret
leave
adc
ficompl
jae
cli
ljmp
jl
daa
adc
insb
sbb
arpl
outsb
cmp
lret
or
mov
das
aam
push
xor
rclb
mov
pop
out
jge
xchg
sbb
cmp
xchg
daa
and
cmp
sbb
rcll
movb
jnp
pushf
adc
pop
mov
inc
lcall
xchg
pop
dec
xlat
xchg
filds
in
jle
push
add
lods
and
pusha
test
xlat
add
dec
mov
cwtl
cmpsb
dec
in
cli
add
rcl
sub
divb
mov
fdivl
mov
jne
inc
nop
ljmp
sarl
cmp
imul
test
jno
jecxz
adc
punpcklbw
lods
sub
out
add
fildl
mov
push
lods
xchg
cmpb
or
cmp
mov
jle
int3
jo
movsl
cmpsb
mov
mov
push
dec
call
pushf
mov
in
lret
loop
mov
xor
xchg
mov
outsb
pop
mov
mov
mov
pop
out
push
loop
imulb
adcb
adc
das
loopne
push
sbb
push
add
mov
addr16
pop
xchg
xor
insb
out
setne
ror
or
pop
push
cs
push
sbb
inc
popa
sbb
push
stos
sub
pop
xor
fs
xchg
push
fcmovb
mov
lea
dec
sub
inc
inc
sub
rol
mov
xchg
loope
fisubl
pusha
aaa
and
xchg
cs
xor
xchg
cmpb
js
bound
push
jnp
flds
bound
int
fwait
jbe
shlb
sub
pop
dec
inc
pop
movsb
movsl
sbb
add
es
cmpb
xor
in
enter
mov
cltd
dec
cmp
push
jns
xor
or
pop
mov
pop
ja
xor
or
mov
pop
push
and
jae
rclb
mov
cld
ja
cmc
dec
test
xchg
enter
cmp
and
sti
fs
rorl
addl
xchg
pop
push
sbb
sbb
ja
sub
dec
cli
addps
cltd
cmp
xor
subb
mov
push
sahf
aam
arpl
shlb
and
ret
and
daa
into
scas
lods
mov
push
inc
or
pop
scas
rcrl
or
mov
dec
cmp
inc
in
adc
iret
rorl
testl
sti
cmpsb
and
and
rorl
outsb
mov
push
lods
dec
fists
and
aas
sbb
jl
mov
fdivs
jne
jne
and
pop
mov
dec
adc
daa
mov
les
andl
or
mov
or
je
push
mov
mov
nop
add
jnp
and
mov
popf
ja,pt
ja
stos
push
jg
jp
or
lods
aam
cmp
adc
xchg
cmpsl
in
xor
sub
dec
into
jge
hlt
ret
push
aas
inc
mov
ss
pop
js
xor
sbb
pop
add
push
push
sbb
sahf
lea
push
arpl
enter
cmp
add
inc
js
gs
jns
in
mov
mov
imul
sub
bound
sbb
int3
loopne
jle
mov
pop
fs
mov
add
and
setnp
hlt
pop
and
repz
insl
pop
les
dec
test
pop
cs
in
mov
sarl
icebp
ds
inc
scas
jae
fsubrl
ljmp
cmpsb
data16
pusha
jo
mov
adc
test
rcll
inc
xor
cld
shll
mov
sbb
push
orl
daa
pop
out
aam
inc
mov
cmp
pushl
aad
adc
stos
sub
les
aaa
cmp
icebp
pop
pusha
test
pop
xor
pop
dec
mov
pop
mov
mov
jns
scas
mov
loop
pusha
xor
mov
sub
test
push
and
or
mov
ja
sbb
cmp
cmp
sbb
out
sub
insl
sbb
pop
test
jmp
icebp
cmp
inc
push
pop
pushf
scas
mov
xchg
dec
pushf
addr16
mov
fnstcw
mov
xchg
insb
stos
mov
mov
lods
mov
lret
jae
out
fimull
mov
lcall
test
inc
xor
dec
push
leave
out
add
add
xchg
fisttpl
xchg
ljmp
js
sbb
jo
leave
rol
push
pop
test
jb
jne
lret
adc
je
xor
ja
mov
jecxz
dec
fdivrs
add
mov
fidivrl
aam
int3
jne
loope
xchg
test
cmpsl
fidivs
test
jp
mov
push
mov
insb
xor
dec
outsb
mov
pop
push
adc
and
pop
outsb
fs
jne
jae
pop
push
aam
or
decl
sbb
por
ror
jmp
negl
pop
pop
inc
dec
add
sbb
mov
dec
lods
inc
sti
push
movsl
xor
lcall
movsl
xchg
xor
mov
add
adc
push
xor
into
jl
jae
cmp
stos
cmp
sbb
insl
aam
out
ds
cmp
repz
inc
mov
loop
dec
push
mov
push
aad
sub
xchg
cltd
test
push
pop
in
xchg
inc
push
xchg
xchg
rclb
movd
xor
jo
or
movsb
sub
or
cli
jp
test
push
mov
mov
leave
jge
pop
push
pop
sbb
sbb
inc
imul
and
xor
out
sahf
cmp
out
mov
cmp
insl
cmp
add
sbb
pushf
loopne
sbb
into
nop
hlt
cwtl
movsl
mov
push
add
jecxz
push
inc
out
mov
mov
jle
fsubs
sbb
ret
shl
insb
jp
in
enter
jecxz
push
sub
cs
pop
and
insb
pop
das
or
sub
xor
mov
arpl
rcl
push
xchg
scas
push
mov
stos
es
push
sub
dec
mov
cmp
sub
and
popf
lcall
cmpl
ret
and
sbb
adc
sti
mov
add
push
adc
lret
and
push
sub
das
adc
jbe
sub
xor
adc
xchg
pop
mov
or
int3
adc
fcomip
test
push
jne
xor
mov
push
inc
adc
ljmp
xchg
mov
fsts
inc
mov
xor
gs
dec
adc
push
jecxz
pushf
and
stc
inc
daa
mov
dec
xchg
fists
xor
or
mov
mov
test
sbb
and
mov
lret
push
sub
jne
pop
adc
in
daa
cmp
pop
sahf
fcmovb
aaa
orb
loope
adc
cli
dec
jmp
test
stc
mov
add
fwait
clc
sub
inc
dec
icebp
jae
mov
aam
cmp
popf
cmpsb
mov
das
out
lcall
jl
fucompp
rcrl
cs
jne
subl
jecxz
lds
orl
out
scas
lret
iret
push
dec
test
xor
cmp
fsin
test
jns
mul
cmpsl
gs
jmp
and
xor
addl
adc
stc
ret
or
mov
jmp
scas
mov
aas
hlt
push
fs
pusha
pop
arpl
cmp
int
mov
cmp
xor
adc
test
cwtl
shrl
sub
mov
shl
out
fcoms
push
movsb
xchg
loopne,pn
mov
sub
je
cmp
cmp
daa
mov
jp
mov
pop
lock
gs
decl
lret
sbb
in
mov
pop
pop
aam
call
je
out
push
cs
repnz
add
in
shl
sbb
in
inc
imul
out
scas
rol
ljmp
xchg
imull
dec
in
in
push
int3
mov
rolb
jge
pop
inc
add
outsb
inc
adc
loope
nop
scas
ja
adc
in
cmp
pusha
cmp
fdivrl
jne
ret
hlt
scas
mov
push
dec
inc
into
addb
mov
xchg
aam
jmp
shll
mov
enter
jno
mov
mov
repz
push
pop
inc
mov
xchg
mov
mov
imul
and
int
add
jno
insb
imul
push
inc
into
pop
jo
mov
lcall
sub
loopne
push
sub
and
ljmp
jae
call
pop
lea
dec
xorb
xor
add
imul
add
mov
aas
mov
call
jne
loopne
cmc
push
mov
push
mov
cld
and
je
repnz
ss
pop
popf
lds
cli
add
mov
xor
enter
iret
insb
cli
cmp
mov
xor
pusha
pop
inc
sub
stos
lods
out
jno
xchg
jl
mov
xor
lahf
test
aad
or
hlt
popf
sub
imul
xbegin
pop
pop
lock
movsb
in
aaa
lcall
repnz
add
push
or
sbb
scas
mov
or
or
in
lret
push
arpl
push
stc
or
xchg
and
popa
inc
dec
icebp
leave
add
xchg
icebp
std
cmp
negb
or
insl
iret
js
loop
fsubrl
push
mov
aaa
jg
std
lcall
mov
sub
mov
xchg
jmp
xor
dec
inc
mov
sahf
mov
pop
lahf
mov
popa
sbb
mov
clc
mov
repz
rorb
dec
inc
psllw
mov
push
xchg
xor
sbb
lods
das
pusha
mov
mov
js
in
dec
push
imul
inc
test
mov
push
mov
stc
stos
lea
int3
mov
imul
imul
add
pavgb
inc
xlat
ret
push
lock
xchg
stc
scas
cmc
xchg
std
fwait
fs
xor
xchg
sti
jge
addr16
push
aad
test
stos
and
xchg
pop
mov
and
pop
cmp
mov
test
mov
jbe
inc
bound
mov
mov
js
sbb
mov
scas
lods
addl
movsb
loopne
in
inc
in
push
in
sub
enter
out
out
dec
inc
add
push
jp
ja
pop
jmp
push
and
cmp
mov
adc
push
push
pop
jmp
mov
push
mov
addr16
pop
push
shll
adc
dec
pop
mov
ror
in
repz
leave
lahf
adc
int
dec
ret
push
jp
aaa
or
aam
outsl
stos
add
repnz
leave
adc
pop
es
in
mov
fnsave
lods
lds
loop
pop
imul
gs
jg
xor
scas
sub
ja
insb
or
rclb
insb
es
dec
xchg
loope
dec
insl
iret
nop
in
cmpsl
pop
testl
repz
inc
inc
out
sbb
call
cmpsl
mov
push
fistpll
movsb
fwait
adc
and
mov
adc
cmpsl
sbb
rclb
push
adc
in
jmp
mov
jmp
sub
sti
mov
aam
xchg
bound
hlt
sub
pop
push
xor
push
aam
outsl
imul
ret
dec
dec
sahf
dec
fcmovnu
cwtl
cli
inc
insb
adc
xorl
sbb
dec
add
ret
pop
pop
mov
pop
sub
xor
jle
inc
fs
ja
dec
dec
imul
mov
adc
or
lods
inc
lea
inc
in
clc
and
jle
into
enter
sbb
and
enter
xlat
add
xchg
loop
push
out
mov
mov
sub
lahf
loop
jns
hlt
out
in
andl
push
aam
fmull
mov
mov
sbb
fsubs
push
pop
fstpt
pop
xor
lahf
mov
sbb
pop
sub
in
stc
outsb
mov
sub
xchg
nop
movsl
mov
divl
mov
or
or
sbb
test
sbb
push
cltd
inc
pop
xor
add
mov
inc
add
aas
dec
push
or
cmp
cli
imul
mov
and
adc
xchg
insb
sbb
pop
lods
addb
push
imul
jne
mov
add
movsl
fwait
xchg
xor
hlt
test
and
aam
push
gs
jl
jae
pop
xchg
mov
out
mov
dec
mov
xchg
stos
sub
xor
out
and
push
ss
push
dec
xlat
mov
flds
in
fnstcw
sarb
sti
mov
dec
hlt
int3
stos
into
sub
fsub
enter
xchg
xchg
sbb
pop
aas
insb
into
jle
push
mov
fcom
add
outsb
mov
push
jno
in
outsl
mov
test
call
pop
aaa
rorl
xor
in
xor
jl
xor
dec
and
popa
out
lcall
incb
scas
dec
mov
push
xchg
cmp
inc
lea
sarb
lods
push
pop
and
mov
sub
stos
pop
movsl
pushf
add
hlt
mov
mov
mov
mov
and
ss
pushf
stos
mov
dec
int
outsb
lea
xor
adc
aas
stos
mov
mov
mov
xchg
push
cmp
dec
and
stos
lods
pop
mov
sub
adc
outsl
sub
mov
popf
push
dec
int
jo
push
cmp
fbstp
imul
push
or
imulb
mov
ja
xchg
xchg
xchg
lock
pop
in
jge
jb
inc
and
mov
xor
sbb
icebp
push
daa
adc
mov
cmc
or
ja
cmpsl
and
stc
mov
sub
mov
fimuls
bnd
push
xchg
xor
hlt
xor
jns
mov
xor
clc
outsb
or
int
sar
imul
in
dec
pop
inc
inc
ret
or
sub
dec
pop
mov
or
xchg
pop
cli
push
ss
shlb
mov
inc
in
adc
in
jns
adc
jl
or
inc
aam
orl
je
leave
das
sbb
pop
outsb
clc
sub
imul
adc
sbb
xchg
and
or
push
fstl
mov
add
fsubrl
push
pusha
sahf
jnp
sub
dec
jecxz
push
adc
scas
inc
fistpll
fldl
xchg
cli
aad
lea
lahf
lahf
repnz
cmc
sbb
in
call
jmp
jb
test
inc
test
fxtract
dec
inc
ret
lret
imul
xorb
stos
pushf
cld
inc
loope
adc
outsb
ljmp
xchg
push
cmp
nop
xchg
cmp
xchg
push
out
or
fs
in
gs
xor
decl
rorl
mov
add
mov
xor
cmp
nop
lret
adc
push
aad
sarb
xor
pop
clc
sbb
cmp
es
mov
cmp
xchg
arpl
xchg
aas
xlat
pop
daa
gs
ljmp
mov
add
xor
pop
int
psadbw
or
xor
je
clc
clc
loopne
mov
or
fldenv
movsl
fists
add
daa
mov
xor
add
fcompl
add
or
mov
xchg
fnstenv
jne
in
adc
cmp
add
es
cmp
dec
aas
testl
repnz
iret
lret
dec
fstp
pushf
cmp
in
push
jge
mov
jmp
outsl
inc
in
dec
fmuls
add
stos
dec
and
cld
mov
dec
and
inc
call
fidivl
js
leave
lods
jo
jecxz
flds
imul
in
cmp
and
and
fnsave
mov
mov
or
adc
lcall
jne
bound
mov
fildll
lods
pop
jb
sub
xor
xchg
pop
adc
std
ret
and
push
mov
jns
arpl
mov
repz
in
mov
xcrypt-cfb
mov
int
mov
xor
mov
fld
fldenv
jnp
fnstsw
rcrb
push
gs
shrl
addb
or
stc
sti
jbe
xchg
mov
insl
sub
rorb
push
mov
pop
lods
add
mov
pop
sahf
mov
mov
mov
add
mov
bnd
adc
and
or
sub
test
pop
adc
roll
xchg
lods
xor
aad
dec
lods
xchg
mov
or
jno
jg
dec
pop
cmp
xchg
addr16
nop
popf
and
vmovapd
mov
cmc
gs
cwtl
xchg
jbe
imul
add
push
inc
fistps
ret
adc
mov
dec
cmp
std
test
mov
leave
mov
or
fsubp
daa
ret
xor
dec
lret
cli
pop
push
sahf
cs
stos
mov
loopne
in
int
out
sbb
add
jns
sub
adc
sub
xchg
lods
outsl
cs
sbb
into
push
shl
enter
fadds
popf
popf
push
scas
dec
jbe
sti
sbb
rol
mov
fwait
mov
test
popf
daa
cmp
inc
push
or
xor
fldl
xlat
mov
add
fiaddl
hlt
mov
mov
xor
aad
inc
inc
xorb
xchg
int3
cmp
or
rorl
cmp
jns
xchg
in
outsl
lahf
push
adc
jmp
pop
mov
notb
inc
iret
sub
inc
ja
nop
cli
jae
mov
sbbb
add
push
cmpsb
rorl
pop
mov
imul
bound
nop
mov
stc
sbb
xor
in
hlt
ficoml
fwait
jno
ficoml
fdiv
add
fldenv
out
inc
movsb
hlt
aad
loopne
dec
xlat
lahf
lret
inc
mov
bound
xor
jne
push
iret
hlt
lea
push
push
stos
or
mov
add
fsubs
lret
scas
sub
and
xchg
dec
mov
cmp
mov
in
jno
pop
lock
aad
xchg
lahf
or
xlat
lods
mov
mov
mov
je
mov
push
out
and
inc
jmp
arpl
call
and
mov
cmpsb
or
mov
inc
push
push
dec
jno
or
aaa
sub
mov
outsb
inc
add
lds
lcall
jg
andl
sub
cwtl
push
shrl
inc
sub
mov
inc
cmp
pop
xchg
scas
andb
jle
cmpsb
jnp
aaa
xor
inc
xor
jl
push
jp
cld
loope
cmpsb
pop
mov
mov
hlt
int
dec
add
cmc
int3
enter
ja
cli
pusha
jne
leave
decl
sub
add
or
push
or
push
jo
mov
outsw
das
push
xchg
mov
stos
pop
rclb
call
or
les
jae
xchg
js
pop
mov
iret
jecxz
jecxz
mov
shl
lahf
stos
xchg
enter
jmp
call
pop
in
lret
sub
mov
xchg
add
test
jle,pn
mov
and
test
out
fcomps
mov
sbb
daa
jle
mov
push
add
and
pop
cmp
or
push
jp
mov
ljmp
orb
dec
cmp
clc
jle
enter
xchg
adc
cmc
inc
sti
mov
jecxz
mov
adcl
xchg
fldt
and
sub
aam
xchg
adc
shrb
popa
inc
mov
and
imul
nop
or
rclb
sar
rolb
std
xchg
pop
sub
loop
cmp
mov
sub
cmpsl
out
fidivs
nop
call
mov
inc
cwtl
lock
movsb
mov
sti
pand
adc
cmp
fstpl
mov
mov
das
cs
and
vpmacsswd
dec
lods
xchg
mov
jae
inc
pusha
push
add
fistl
int3
hlt
pop
add
mov
clc
or
jne
shrl
loopne
ret
push
subl
mov
mov
or
jae
ret
cmp
mov
inc
out
and
push
mov
mov
and
push
iret
lret
push
cmp
ret
dec
cmp
das
cmpsl
insl
jp
push
push
stc
push
and
push
cmp
pop
pop
idivl
cwtl
cmpsl
cmpsl
push
cmp
out
call
and
sahf
adcl
std
js
lret
out
pop
in
scas
into
repz
rcll
push
flds
enter
add
cmc
mov
jge
stos
imul
mov
jecxz
es
bound
ss
push
mov
jb
enter
call
stos
inc
ror
ja
mov
and
jge
cmp
outsb
push
xor
sti
ds
int
cmc
sbb
jnp
icebp
sub
jae
outsb
sti
cmp
mov
lds
test
mov
and
int
fsubrs
sub
stos
add
outsl
sbb
into
inc
pop
cmpb
fwait
cwtl
fbstp
cwtl
loope
xchg
dec
push
outsb
mov
mov
and
add
clc
int3
xchg
out
sbb
aas
xchg
adc
push
push
repz
lcall
test
or
xchg
mov
ss
inc
shrd
notb
and
sbbb
outsl
or
xchg
pop
and
pop
add
pop
add
leave
jecxz
xchg
mov
aam
aam
fwait
out
out
les
cmpsl
imul
rol
xchg
xchg
shlb
adc
in
jnp
gs
repz
or
mov
inc
into
test
mov
push
test
mov
ds
add
imul
cwtl
or
xchg
adc
xchg
add
test
fisubrl
ret
lret
cli
cwtl
mov
sbb
hlt
push
ljmp
pop
cmp
lock
popa
mov
pop
xchg
shrb
and
mov
subl
popf
pushf
movsb
pushf
lea
cmpb
test
icebp
push
ljmp
insl
push
pop
mov
test
add
pop
add
mov
sub
sbb
mov
aad
pop
pop
mov
jno
inc
dec
cmp
push
mov
int3
or
push
jns
je
ss
xchg
outsb
movsb
ror
das
js
outsl
mov
jo
lea
les
insb
jae
fmull
sbb
ja
aas
push
lret
push
mov
js
fistpl
je
mov
push
fadd
pop
dec
lods
dec
mov
push
mov
mov
lods
inc
movsb
lcall
es
aaa
mov
les
cmp
daa
add
outsl
clc
shrl
cwtl
sub
xor
popa
dec
mov
in
jle
pop
bnd
aad
cmp
jl
rclb
popa
pop
test
jb
xor
cmc
mov
jmp
adc
or
sub
add
sahf
cmp
int
jge
mov
pop
cwtl
pop
add
pusha
out
sbb
jmp
mov
pop
addr16
pop
jg
inc
push
aad
sti
fbstp
jl
sub
or
mov
mov
ret
adc
push
mov
out
ja
mov
cmpsb
xor
cmc
das
outsl
popf
mov
sub
stos
stos
fldcw
das
stc
and
xchg
pop
lret
movsb
lcall
icebp
mov
cli
in
adc
les
cld
gs
int3
mov
icebp
in
daa
ret
add
push
rcll
mov
ja
loopne
std
das
les
jns
sbb
shr
je
jnp
lret
cli
cmpsl
sub
pop
and
adc
and
fsubp
pop
int3
and
adcb
mov
xchg
outsb
std
into
sbb
sbb
xchg
je
mov
adc
test
cmp
mov
push
add
shlb
xchg
push
lret
nop
dec
out
jbe
jb
cmpsb
jb
hlt
movsb
xorl
pusha
repnz
push
mov
push
je
das
xor
xchg
ljmp
lahf
dec
sub
cmp
sti
enter
sbbb
xchg
xor
lock
push
imul
fcomi
fnsave
xchg
push
mov
insl
or
js
push
js
aaa
in
pushf
gs
cmp
mov
sti
lret
aas
sbbl
out
and
sub
mov
je
lea
or
dec
decb
xchg
pop
pusha
pop
mov
fildl
push
outsb
push
mov
sub
fiadds
push
sbb
shlb
xlat
fiaddl
jecxz
pop
stc
dec
aad
dec
mov
test
jp
sbb
push
jle
inc
fs
pop
sub
inc
dec
xchg
jo
mov
inc
push
inc
mov
in
cmpsl
cli
stos
out
jne
jo
cmp
sbb
aaa
decb
or
mov
sub
xchg
mov
test
lret
pop
push
push
daa
sub
mov
cmp
fstl
out
sub
adc
pop
out
mov
mov
daa
inc
lods
mov
dec
arpl
cmc
cmp
je
jecxz
adc
inc
push
and
jnp
cmp
sarb
sub
push
movsl
pop
fbld
or
cmp
lcall
lret
pop
jl
mov
je
dec
mov
shll
fcomps
or
mov
or
dec
or
imul
pop
test
aad
repnz
push
mov
adc
push
mov
push
mov
fwait
test
fdivs
lods
push
lods
sahf
and
addb
scas
pop
dec
push
scas
dec
add
pop
adc
fwait
adc
dec
sbb
ret
jne
mov
sahf
insb
xchg
xor
dec
xor
mov
loop
mov
mov
mov
xor
xchg
mov
add
sbb
lahf
adc
int
inc
lcall
dec
mov
cmp
sub
or
arpl
push
loope
xchg
jnp
cmp
push
pop
jbe
shll
movsl
xchg
hlt
or
gs
mov
mov
cmpsl
lret
or
adc
or
stos
mov
pop
or
inc
ret
adc
stc
cmp
sarl
out
test
add
pop
mov
int
sbbl
xor
loop
cli
aaa
addr16
dec
ljmp
in
sbbl
pop
popa
dec
ljmp
lret
inc
int3
xor
sub
jmp
repnz
xor
pop
add
jns
dec
pop
jae
jne,pt
sti
insb
adc
call
push
cmc
insl
dec
into
add
add
inc
dec
sbb
inc
cmc
add
or
sub
ljmp
and
mov
jg
in
out
push
icebp
adc
lods
inc
lret
out
dec
adc
popw
shll
mov
xor
adc
mov
push
mov
or
mov
jno
cmpsb
fdivs
test
mov
fcompl
inc
call
cmp
test
pop
and
popf
mov
sahf
cld
clc
in
mov
push
test
mov
neg
mov
fwait
cmc
jg
pop
arpl
repz
pop
add
cwtl
fdivrl
push
cmp
lods
hlt
sub
push
sbb
cld
dec
orl
push
insb
pop
xor
push
enter
dec
or
loope
aad
ret
out
in
xchg
mov
movsl
mov
xchg
xor
jmp
cmp
repnz
jae
pop
aaa
add
dec
cmpsb
imul
sahf
aad
pop
jp
je
mov
adc
sub
repz
inc
xchg
push
push
jb
mov
incl
rcr
gs
mov
mov
sbb
mov
push
bound
lods
inc
xor
mov
add
fs
loope
outsb
out
test
or
pop
in
cld
pop
add
adc
cmpsb
pop
cld
push
pop
imul
sahf
sub
daa
stos
lret
int
lea
jg
out
lods
jecxz
int
inc
aas
fimuls
or
imul
push
cli
pop
add
sub
xchg
or
daa
xchg
int3
inc
mov
or
xchg
pop
add
je
cmp
cwtl
jae
inc
leave
icebp
aaa
pop
scas
insl
insl
std
sub
cmp
push
ret
test
mov
xchg
jne
mov
push
int
movsb
insb
dec
xchg
test
fcmovne
dec
sbb
inc
xor
mov
or
inc
cmp
mov
xlat
push
dec
pop
add
xor
inc
ds
inc
cmp
aas
push
mov
sub
stc
cli
decb
xlat
int3
outsl
push
addr16
ja
adc
iret
imul
sbb
jl
sbb
loop
les
loopne
pop
dec
sarl
add
jae
sti
dec
or
adc
xlat
cmp
stos
lea
daa
icebp
in
pop
or
mov
dec
pop
data16
fidivl
cs
ret
xchg
push
aaa
mov
push
insb
out
jns
lret
jne
pushf
aam
inc
jp
xchg
out
mov
fxch
xor
cltd
cmc
cmp
aad
jns
mov
cmp
pop
push
das
sahf
push
dec
repz
adc
and
xchg
mov
and
fsubrl
xchg
nop
ret
xlat
loop
or
pop
lret
sti
cli
mov
add
adc
mov
cltd
and
dec
int3
inc
pop
outsl
lods
aam
inc
cmpsl
ret
imul
jge
cmp
les
pop
inc
in
repnz
les
sbb
cmp
popa
in
jo
jae
jno
cmp
xchg
popa
movsb
cmpsb
pop
sbb
popl
inc
mov
js
and
mov
stos
inc
cli
gs
sbb
mov
pop
test
jae
push
mov
gs
dec
and
push
pushf
movsl
fcoml
jae
add
mov
xchg
xchg
or
in
mov
cmp
repz
insb
pusha
pmaddwd
out
xor
hlt
jnp
xor
enter
pusha
popa
popf
and
xchg
xor
maxps
jno
fmuls
xchg
or
dec
add
mov
mov
notrack
dec
call
loopne
insb
leave
jle
push
mov
shrb
pop
fcoml
out
fisubs
sub
pop
adc
xor
fdivrs
das
sti
addr16
pop
andl
add
push
mov
clc
mov
push
das
xchg
and
xor
jg
lret
sti
outsl
lcall
pop
mov
insb
dec
sbb
push
test
pop
nop
push
and
sbb
xchg
add
int3
inc
push
pushf
mov
cs
loope
adc
in
dec
cmp
pop
std
andl
add
into
or
lret
cmp
or
sub
out
mov
aam
sub
fists
or
jb
stc
test
scas
pop
sbb
inc
and
dec
dec
or
pop
xor
xchg
stos
sub
test
add
mov
pop
addr16
add
inc
push
call
push
lret
imull
mov
test
xchg
lods
adc
outsl
and
jae
out
and
jns
movsb
jmp
cli
scas
lret
out
xchg
xchg
movsl
int3
pop
sub
ret
add
add
dec
xor
sub
cmc
rcl
mov
loope
dec
scas
sub
xchg
dec
add
push
ja
es
xlat
dec
hlt
inc
fildll
jne
into
jg
dec
add
fistps
rcrl
pop
pop
mov
push
rclb
sbb
out
and
mov
pop
lahf
or
push
pop
cmpsb
mov
in
inc
outsb
push
dec
lods
sbb
jge
cltd
cmpsb
movsb
xlat
imul
mov
cmpsb
pop
push
pop
sti
sbb
mov
sbb
sub
xchg
dec
add
pop
cwtl
aas
enter
lods
add
jp
pusha
gs
inc
cmp
lea
pop
push
pop
aaa
mov
jl
dec
sub
mov
push
jbe
and
sarb
fcomip
cmp
scas
xor
cmpsb
add
lcall
dec
ss
adc
je
lcall
data16
fs
sub
mov
xchg
pushl
mov
mov
loope
imul
les
jp
mov
and
js
sti
inc
fs
jns
dec
sub
test
cmpsl
sub
add
mov
push
and
push
xor
test
fistl
das
sbb
xchg
xlat
mov
cmp
fsubrp
xchg
mov
cmp
push
adc
pop
xlat
aas
sub
data16
js
in
and
add
mov
xchg
cmp
xlat
pusha
rcrb
mov
and
out
jmp
xchg
outsl
xchg
inc
and
ficoml
fstpl
test
jo
int
xchg
rcrl
jo
in
repnz
clc
cmc
push
jl
xchg
and
fs
rorl
and
in
jnp
icebp
dec
pop
gs
jno
pop
repz
mov
shrl
sbb
and
inc
mov
addr16
ljmp
xor
cmp
arpl
int
and
pop
cmovp
outsl
fcompp
adc
push
imul
mov
lcall
adc
icebp
out
dec
adc
push
jae
insb
int3
sub
inc
decl
and
ret
push
mov
dec
sbb
push
mov
leave
in
repnz
fdivrs
mov
movsl
xchg
iret
mov
jg
push
sub
sub
popl
add
ds
push
push
pop
je
xchg
jae
test
clc
jns
push
push
bswap
push
adc
dec
adc
push
add
fst
jne
push
push
bnd
and
out
js
pusha
push
stc
sub
iret
or
sbb
jecxz
int3
ss
sahf
flds
aad
arpl
cmp
sbb
adc
and
dec
jle
xchg
andb
insb
mov
add
adc
jp
sbb
in
gs
dec
and
idivl
out
push
mov
sbb
test
in
popa
in
insb
ss
ret
sbb
mov
les
sub
int3
mov
mov
adc
repz
xorl
nop
mov
ret
push
dec
pop
mov
cmpsb
dec
sarl
cmp
icebp
insb
mov
and
loope
jb
cmpsb
movsl
lods
aas
adc
dec
pusha
or
jg
lock
or
xchg
jno
movsl
adc
push
xor
inc
jmp
add
mov
xchg
xchg
jg
xchg
in
cld
fcomps
dec
lods
push
leave
or
int3
daa
or
cmp
cld
aas
dec
pop
adc
cld
data16
sub
pop
adc
xchg
pop
dec
jne
cli
cmpsb
xchg
bound
jb
lods
jl
inc
sub
scas
sarb
cmp
and
das
fadds
adc
push
and
sbb
outsl
into
test
ljmp
loop
lcall
and
and
push
mov
in
sbb
std
dec
out
inc
mulb
mov
mov
out
std
scas
push
pop
fidivl
jmp
xor
ror
fisubl
jno
pusha
lock
push
int
adc
mov
mov
xchg
cmp
xor
aad
jae
fdivl
cmp
jg
add
push
jge
enter
cwtl
sbb
adc
mov
cs
mov
xchg
aaa
inc
insl
std
add
aam
mov
icebp
in
lods
fldenv
in
test
xchg
xor
pop
call
mov
lret
add
sub
cli
outsl
mov
xchg
or
add
jmp
push
iret
mov
xor
xor
andl
cmpsl
or
out
sbb
fstl
xchg
push
jbe
mov
das
inc
sub
push
lds
mov
dec
popf
push
icebp
inc
ja
push
jp
dec
sbbb
vorpd
add
push
adc
popf
les
jmp
pop
jmp
push
add
in
pushl
xor
adc
outsb
inc
xchg
xchg
popf
rcr
mov
sub
jge
xchg
dec
daa
mov
xchg
mov
sub
mov
mov
icebp
jbe
xor
hlt
movsb
cmpb
add
popa
dec
cmp
push
or
push
or
lock
inc
inc
lahf
stos
sti
mov
jle
jne
pop
xor
and
push
adc
dec
xchg
and
push
xor
xor
lret
sub
mov
fnstcw
popa
push
pop
pop
fisubrs
inc
out
cmp
mov
imul
cmp
adc
inc
sub
mov
mov
cmp
pop
scas
test
loope
xchg
cmpsb
addr16
add
jecxz
movsb
test
stc
sub
in
hlt
jecxz
sub
cmp
adc
insb
roll
pop
addr16
js
jg
es
mov
sbb
dec
inc
add
ss
fmull
mov
pop
ret
inc
jg
and
mulb
shrb
daa
jae
lret
xor
test
sub
pop
jo
sub
ljmp
cltd
aas
std
jns
or
mov
sahf
mov
ss
pop
je
aas
jg
jb
not
jbe
adc
jnp
iret
shll
add
inc
out
and
xchg
popf
aam
sahf
xchg
sbb
xchg
loopne
popf
add
in
jmp
inc
divl
fs
cmp
push
andb
xor
sbb
xor
xor
nop
or
int
sub
jnp
add
aam
roll
cmpsl
lret
cmovl
mov
test
hlt
and
fdivrl
cmc
xor
adc
ljmp
mov
popa
dec
mov
movsb
sahf
leave
and
jle
std
imul
dec
push
mov
data16
mov
sbbl
aad
pop
mov
xorl
lret
xor
cli
push
fcmovbe
cmc
adc
in
int
mov
mov
frstor
push
cmp
adc
fisubs
popa
scas
sbb
jmp
add
bound
mov
loop
pop
jmp
call
jns
inc
rcrb
stc
jbe
cmp
lret
push
aas
inc
mov
fisttps
in
cs
fildl
cmp
aas
pop
mov
push
jecxz
loopne
lahf
mov
dec
add
jge
pop
inc
mov
and
adc
scas
add
insl
call
push
test
and
dec
js
inc
jnp
mov
cmp
aas
ds
cmp
in
jae
add
into
in
adc
or
idivb
mov
in
add
dec
pushf
xchg
je
jg
es
cs
sbb
pop
jns
cmpsl
jae
mov
dec
in
scas
ss
push
dec
pop
outsl
inc
stos
cmp
aam
and
cltd
repnz
repz
xchg
ds
push
push
adc
jmp
adc
cmp
xorb
cld
mov
jo
scas
sbb
test
pop
mov
xlat
dec
inc
push
adc
jg
je
hlt
mov
and
mov
fiaddl
ds
and
hlt
adcl
std
roll
popa
push
fisubrs
shr
out
mov
or
mov
rclb
mov
jp
cwtl
int3
int3
inc
popf
popa
push
pop
mov
and
mov
push
mov
and
mov
out
inc
sub
scas
mov
jb
ret
sub
mov
and
je
jno
add
lea
add
mov
sub
xor
lahf
mov
and
sahf
mov
repnz
cmp
adc
xor
je
cmp
inc
mov
fcompl
pop
jmp
and
cmp
xchg
lods
or
es
aam
jns
test
push
loope
mov
push
test
cmp
pusha
dec
mov
xchg
ljmp
dec
dec
add
add
ljmp
ret
lds
mov
cmpsb
push
sbb
lock
jge
add
mov
mov
sbb
lret
pop
or
pop
lock
adcb
loope
mov
cmp
repz
adc
jbe,pt
out
xor
adc
scas
ret
aad
js
int3
cwtl
pop
daa
fisttpll
imul
sbb
icebp
jno
add
or
jmp
enter
and
dec
loopne
jbe
dec
sbbb
sbb
out
and
mov
testb
lock
into
cmp
aas
loop
or
sub
pop
fisttpl
and
notb
pop
adc
and
lock
inc
ret
outsl
lcall
mov
inc
inc
xchg
popa
cmpsl
mov
sub
xchg
lock
xchg
rorb
sti
mov
push
in
mov
mov
lds
out
mov
push
aaa
ja
xchg
xor
mov
cmp
sbb
pop
dec
add
pop
dec
addb
and
sub
xchg
jo
insl
cmc
sti
ds
add
daa
mov
push
push
pushw
inc
sbb
jmp
fdivs
jl
mov
add
scas
icebp
jl
mov
cmp
push
sub
mov
data16
fidivrs
sbb
fnstcw
xor
pop
cli
dec
xchg
and
mov
mull
mov
in
xchg
mov
pop
in
shlb
and
fistps
xchg
pop
or
adc
push
js
stc
sub
test
inc
pushf
jmp
hlt
sarl
jns
sbb
jo
push
push
icebp
out
jmp
jo
ret
lea
mov
cmpsb
push
sbb
add
fadds
xor
popf
std
int
xor
cmpsb
sbb
dec
imul
bound
mov
repz
lahf
pop
hlt
xchg
das
lea
ja
in
call
adc
adc
scas
fdiv
dec
sbb
jge
cmpl
or
inc
stc
das
push
orb
std
enter
fucomip
xor
cmp
fsubrl
push
stos
inc
cmp
pop
sbbb
mov
icebp
jns
fldcw
jmp
mov
pop
outsl
test
sub
clc
imul
aaa
lret
les
lret
xchg
es
push
sar
inc
ficoms
es
outsb
mov
or
sub
fwait
sbb
pusha
int3
adc
lock
out
mov
lret
dec
push
jns
lds
xor
xorl
dec
pop
shl
jle
sbb
sub
xor
jp
dec
orl
outsl
es
dec
cmpsl
scas
pop
shlb
jae
adcb
js
lds
adc
cmp
fildll
sub
out
push
xorb
pop
pop
mov
cmp
inc
inc
xlat
jle
out
sbb
aam
into
xor
lods
dec
clc
or
nop
ss
cbtw
inc
sbb
popf
mov
lods
lcall
mov
sahf
not
lret
mov
enter
xor
out
push
sbbb
jb
fistl
mov
hlt
mov
imul
mov
dec
xchg
ds
pop
push
jl
rcr
dec
nop
push
push
das
add
clc
mov
das
jg
cwtl
testb
mov
mov
mov
pop
cmc
push
inc
aam
or
adc
out
mov
icebp
or
cld
inc
mov
and
xor
fcomip
out
cmp
adc
push
sarl
adc
mov
mov
test
cmc
lret
pop
outsl
dec
clc
lock
test
sub
add
pop
pop
lods
cmp
sbb
push
mov
sub
insl
mov
or
mov
push
xchg
cli
enter
xor
test
repz
push
add
aad
jle
daa
pop
mov
lods
mov
mov
push
ds
cli
pop
cmp
jle
fdivrp
inc
mov
dec
inc
ret
fnstenv
ss
lock
addl
cmpsl
xchg
sbb
jne
and
ror
jnp
xchg
fs
jne
pusha
dec
jbe
or
sub
jns
and
jecxz
aas
cmp
xor
push
insl
call
mov
stc
xlat
or
dec
mov
pusha
xchg
push
mov
xor
pop
loope
cmovb
mov
mov
cmpsl
xchg
cmp
inc
push
pop
add
or
mov
daa
mov
icebp
xor
in
lea
jl
mull
stc
outsb
push
xor
cmpsl
sub
sub
push
test
fidivl
cld
movsb
aad
or
popf
push
out
mov
push
lods
or
test
push
cld
xchg
push
push
inc
enter
lcall
xor
out
clc
add
and
out
push
jp
ds
cmp
mov
es
jmp
dec
pop
pop
mov
jno
les
cmpsb
mov
inc
and
mov
push
out
xchg
lret
adc
lcall
test
pusha
fdivrs
sub
les
or
push
int
and
jmp
cmp
fistpl
pop
and
cmpsl
les
pop
in
push
push
out
mov
mov
stc
dec
mov
xchg
cmc
lret
dec
push
repnz
inc
ja
mov
push
inc
inc
mov
mov
aaa
add
push
mov
push
and
popf
jmp
cwtl
add
pop
mov
cmp
inc
lea
and
inc
push
jle
ret
in
dec
loop
sub
in
inc
call
aam
mov
mov
stos
push
cmpsb
aad
out
daa
adc
scas
or
jae
aad
shrl
subl
jnp
add
clc
push
and
push
mov
adcl
mov
ljmp
in
clc
in
int
les
je
jae
jne
shl
mov
repz
les
dec
inc
out
cmc
push
or
js
sub
insl
aad
lahf
push
jo
fistpl
je
cmp
cltd
loope
mov
cmpl
out
or
lods
scas
mov
jb
cmp
xchg
rorb
mov
inc
rcr
cmp
pop
pop
inc
adc
lods
out
pop
dec
xor
xor
sub
inc
mov
nop
andb
rclb
jge
pop
data16
push
dec
aam
in
sarb
xor
cltd
mov
ret
mov
or
addr16
int3
ds
sbb
adc
mov
jno
fistps
sub
lret
ficompl
out
sub
xchg
scas
outsl
mov
inc
push
enter
adc
lret
cltd
pop
and
test
add
insl
cmp
ret
dec
hlt
or
shl
cmpsb
imul
repnz
fstp
dec
mov
test
stc
sub
inc
or
rcrl
xchg
push
cmp
dec
ret
sahf
cltd
nop
jmp
cmpsb
inc
sarb
and
jb
test
fdivl
pop
inc
sub
xchg
mov
jmp
inc
jns
popf
cmp
push
cwtl
push
loop
jl
xchg
pop
hlt
push
lcall
scas
shll
dec
movl
test
jbe
cld
and
insl
mov
add
dec
in
rorb
in
outsl
scas
dec
add
sub
add
js
enter
clc
orl
hlt
sub
sarl
adc
sub
inc
sbb
fcompl
ds
lock
outsb
test
add
mov
pop
data16
mov
daa
pop
out
in
cmp
mov
daa
lods
jecxz
out
pop
loopne
movl
iret
leave
pop
repnz
or
pop
mov
sub
mov
pusha
lcall
movsb
adc
mov
xchg
dec
sbb
leave
dec
pop
fiadds
ret
xchg
out
cli
inc
in
test
xor
xor
testl
dec
pushf
lods
push
jnp
sub
or
daa
push
and
daa
mov
mov
popa
mov
dec
lds
and
scas
out
xchg
mov
insb
nop
fwait
xchg
and
push
xchg
insb
sub
shlb
or
xchg
or
test
or
dec
push
cmp
mov
mov
inc
outsl
mov
adc
sub
xor
je
orl
int
jle
xor
or
jns
ret
or
and
pop
inc
leave
sbb
jns
mov
mov
cltd
jp
imul
inc
dec
mov
jle
ds
out
dec
out
cwtl
das
stos
or
addl
out
movsl
outsl
pop
push
out
jno
dec
add
sbb
das
mov
xchg
scas
aaa
sbb
test
enter
and
push
dec
cli
lds
pop
inc
jle
insl
popf
mov
push
out
xchg
jmp
adc
into
inc
sbb
in
fstpl
adc
mov
push
and
push
dec
mov
jecxz
pshufw
jo
jg
jmp
lods
das
sti
push
pop
es
inc
lds
flds
sar
fwait
rclb
lods
push
pop
sub
lods
push
mov
or
push
aaa
and
mov
inc
jle
push
pop
lret
pop
mov
clc
add
ret
add
enter
scas
mov
inc
rorl
push
jp
or
push
pop
mulw
inc
rol
sub
repz
jmp
dec
lds
dec
fldt
push
push
pop
movsb
insb
mov
shll
arpl
into
sub
ret
test
pop
pop
adc
popa
shlb
movsl
mov
fcmovnbe
dec
jnp
sbb
sub
not
stos
jl
ja
call
in
andl
jp
xchg
xor
incb
mov
push
leave
psubsw
mov
outsb
push
dec
xchg
cmp
and
or
or
dec
jp
dec
and
push
dec
dec
mov
push
push
mov
or
add
das
xchg
out
xlat
xchg
faddp
adc
movsb
in
repnz
or
sub
scas
loop
xor
shll
lods
sub
adc
fnstsw
mov
pop
pop
dec
arpl
enter
lock
imul
inc
jp
ret
inc
jnp
cltd
mov
pop
adc
push
push
inc
aaa
add
daa
lea
outsl
xchg
pop
pop
push
in
inc
pop
rolb
and
push
inc
jge
stos
mov
sub
mov
xchg
dec
xchg
les
lret
popf
ja
adc
sbb
ja
pop
or
mov
xcrypt-ecb
cmpsl
or
in
ss
arpl
dec
pusha
jle
je
sub
filds
lret
test
fidivrl
adc
out
leave
gs
cs
mov
pop
dec
cmp
int
gs
ss
les
mov
dec
sub
mov
inc
hlt
std
imul
pop
sbb
push
leave
aam
fs
push
push
jp
xchg
or
and
aas
aam
daa
mov
jns
add
sbb
into
cmp
pushf
or
loop
sbbb
popf
pop
test
sbb
xchg
adcl
out
icebp
pushf
std
pop
int
jno
mov
cmp
test
loop
std
adcl
stos
lret
pop
or
data16
imul
xchg
push
sub
inc
pop
sub
stc
xor
test
loopne
adc
rcll
pop
and
sarl
pusha
cmpsb
fwait
popf
arpl
xchg
jge
loop
jg
mov
mov
popa
mov
cmp
mov
sbb
mov
stc
cmpsl
inc
adc
js
xorb
jno
push
push
loop
addr16
jecxz
loope
push
inc
clc
fsub
xchg
sbb
lea
jo
sub
das
jmp
xor
cltd
rcll
pop
mov
or
sbb
lret
dec
lock
leave
xor
add
dec
mov
aaa
jo
cld
cld
cli
cmp
aad
xchg
xor
cmpsb
cmp
orb
add
in
sbb
mov
std
out
mov
mov
nop
es
dec
orl
rclb
addb
push
sahf
das
cltd
push
filds
cmp
cmpb
testb
sbb
inc
sbb
jbe
or
lock
das
inc
cmp
je
pusha
mov
aaa
mov
mov
lock
repnz
inc
push
call
insl
ret
ss
pop
ss
dec
sbb
xchg
insl
add
inc
lahf
ljmp
mov
or
jp
es
hlt
popl
dec
mov
ficoms
cs
jae
ret
push
or
in
sub
sub
shrb
sub
jne
cmpsb
cli
rcll
cmp
mov
mov
sbb
out
xor
sub
inc
sbb
push
rcll
xor
dec
out
incb
dec
pop
insl
adc
xor
movsl
cltd
scas
aad
test
das
jb
push
sub
fldcw
dec
movsb
mov
sub
sti
and
mov
lods
push
dec
insb
decb
in
movsl
in
stos
outsl
popa
sbb
into
ds
sbb
repz
in
aas
mov
rorb
push
daa
xor
sbb
bound
hlt
cmp
mov
push
xchg
push
orb
mov
pop
lahf
nop
and
scas
scas
mov
mov
mov
dec
or
inc
pop
jns
pop
cltd
shll
adc
push
xchg
lret
xor
xor
int3
mov
repnz
xchg
mov
test
and
xchg
mov
push
hlt
xor
xchg
and
outsl
and
out
xor
inc
out
push
shrb
pop
jecxz
jle
inc
jno
lahf
stos
jge
cmp
dec
fcmovu
fisubl
cmp
ss
lret
mov
insl
push
stos
jecxz
fdivl
sbb
cwtl
xchg
sbb
push
pop
cli
push
jge
lret
shrb
xchg
and
cmp
stos
icebp
mov
cltd
sti
in
jp
pop
fisubs
sbb
and
jns
rorb
sbb
pop
xor
mov
jne
stos
mov
data16
fcmovb
lahf
lds
xchg
pop
push
lods
add
out
adc
push
mov
shl
neg
mov
cmpsb
scas
cli
loope
mov
call
push
test
mov
stos
fisttpll
adc
mov
sub
jle
mov
push
jle
aad
daa
pop
inc
stc
loope
dec
xchg
xchg
sub
aad
pop
xor
sarl
int
shll
push
mov
xor
ljmp
fcomps
orl
adc
push
mov
jle
mov
call
test
xlat
mov
arpl
popa
pop
mov
fdivl
sub
pop
aaa
movb
inc
insb
mov
add
pop
punpckldq
mov
mov
dec
fcmove
aad
pushf
jecxz
dec
xchg
sbb
pop
lods
leave
fwait
sbb
and
dec
mov
icebp
fwait
mov
mov
fsubr
jl
rcll
insb
pop
or
loope
icebp
or
test
dec
fcompl
bound
test
leave
mov
imul
sti
into
mov
cli
es
cli
mov
out
pop
pop
std
icebp
je
rcrb
scas
cs
jp
test
pop
sahf
aaa
jp
mov
jecxz
xor
in
out
cmp
std
outsb
cmp
fwait
or
shlb
clc
lcall
outsb
jge
mov
xchg
lret
jle
leave
cmpl
mov
dec
stc
popa
inc
and
jg
into
nop
dec
je
enter
add
ja
mov
or
mov
adc
dec
out
jb
add
stos
lea
lods
dec
mov
jb
repz
ret
loope
xchg
add
mov
movsb
jmp
or
decb
out
scas
mov
sub
push
xor
xor
push
jno
cmp
inc
pop
stc
and
xor
lods
sub
clc
inc
and
cmp
add
adc
dec
pop
packsswb
push
aad
or
ds
inc
cmp
or
or
popa
in
or
add
add
shr
inc
mov
mov
push
aaa
das
and
sahf
sbb
lods
sbb
aad
inc
inc
adc
js
shl
shlb
outsl
addr16
cmp
sbb
push
adc
mov
add
mov
jle
outsl
or
inc
andb
mov
hlt
jno
add
testb
mov
pop
mov
push
add
popf
cmc
enter
dec
out
mov
cmp
pop
dec
xlat
sub
inc
hlt
lahf
and
loope
jne
jno
mov
mov
aam
inc
sbb
rcr
out
aad
adc
mov
or
rcll
mov
add
pushf
add
mov
test
dec
or
cmp
mov
and
add
js
sub
loop
movsb
inc
ficompl
dec
jmp
mov
movsb
jne
cwtl
jne
push
out
into
cmc
xchg
cmp
mov
das
cmp
clc
ret
cs
hlt
rcr
lea
mov
push
inc
sbb
sahf
dec
sti
inc
xor
std
add
pushf
shlb
xchg
xorb
cmp
test
in
ljmp
dec
pop
int
pop
xchg
rcll
das
mov
ffree
adc
jp
outsb
mov
or
fcmovu
icebp
arpl
cli
daa
push
or
dec
test
fldenv
pop
int
cmpb
mov
push
and
scas
or
pop
mov
sub
cmpsl
jnp
lahf
mov
push
mov
pop
ja
xor
xchg
mov
bound
ds
loop
into
sub
xchg
popf
mov
lods
outsb
test
mov
sbbb
scas
or
and
enter
scas
aaa
mov
push
sub
fnstsw
popa
int3
leave
test
icebp
rcll
ja
pop
push
test
and
sbb
dec
adc
repz
jae
push
movsb
es
jle
sub
ja
mov
pop
std
add
clc
rorl
cld
jle
push
outsl
pop
xchg
xlat
imul
bswap
lock
add
xor
popf
xor
and
push
clc
dec
push
pop
in
stc
inc
fsubrl
fmulp
stos
push
jmp
xor
mov
and
sub
pop
fcmovb
and
data16
add
shl
xor
inc
xchg
inc
popa
rcrl
fnstcw
sub
fildll
dec
test
bound
ret
push
shll
mov
lock
sub
push
sbb
pop
leave
push
hlt
aas
clc
pop
mov
das
mov
and
mov
lds
popf
cmp
and
int3
dec
in
out
jp
aam
pop
dec
jmp
in
daa
xchg
mov
inc
dec
mov
lea
add
popa
test
adc
mov
mov
fistpll
xchg
or
mov
jmp
dec
dec
shll
outsl
push
repnz
adcb
push
enter
out
or
xchg
add
aam
push
popf
cmovo
sti
int
sbb
add
lahf
fistl
cltd
enter
cmc
add
or
in
outsb
pop
xchg
cs
pop
mov
cmp
addr16
enter
cs
insl
xor
or
es
rorl
stc
inc
cmp
aaa
pop
imul
dec
cmp
or
dec
into
mov
popa
leave
cmp
cltd
js
push
insl
in
in
mov
test
sbb
je
out
pushf
xor
pop
popa
pop
push
adc
push
inc
mov
mov
cmp
jmp
xchg
dec
mov
dec
jno
and
xchg
int3
push
lock
add
and
sub
lea
mov
or
xor
lahf
dec
push
sbbb
cmp
out
mov
fidivrl
push
ret
aam
xchg
mov
fsts
stos
aad
in
sbb
mov
ret
jle
ljmp
into
lret
les
xchg
xchg
in
in
mov
sar
int
mov
add
pop
sbb
fwait
jl
rcll
mov
and
clc
jmp
push
cmp
sbb
ss
add
fnstcw
into
or
sbb
mov
mov
ja
inc
mov
mov
mov
sti
mov
rcr
lahf
add
fdivl
lds
shll
or
jge
shlb
out
sub
es
int
xor
jle
sete
pop
les
leave
insb
cli
mov
jne
jnp
dec
pusha
aam
out
xorl
movsl
popa
adc
enter
lahf
sub
jnp
fcom
or
leave
in
push
sub
or
push
cwtl
nop
std
cs
insl
mov
fldl
out
ficoms
xchg
enter
mov
cmp
in
cmp
iret
aaa
lods
or
sbb
pop
clc
mov
cmp
jae
andb
insb
lods
sar
mov
jge
xchg
xor
xchg
inc
push
mov
cmc
pop
xor
std
divl
addl
das
mov
xchg
xchg
test
fcmovne
ud2
int3
dec
jae
sbb
add
mov
out
pop
cs
dec
outsl
addr16
fimuls
lea
jmp
xor
mov
inc
push
dec
shrl
gs
int
cmp
testb
pop
rcl
cmc
movsb
xchg
cmpsb
mov
sbb
cmp
mov
iret
sarb
int
bound
xor
sbbb
and
test
cmpsb
pop
add
cmp
outsb
xor
push
dec
and
dec
and
jp
dec
xchg
popa
sub
add
addr16
xchg
dec
mov
movsl
jo
inc
sti
aad
xchg
adc
xchg
add
sbb
add
jae
movsl
aam
push
cmp
mov
adc
aas
jb
ret
daa
mov
sbb
pop
test
xchg
sub
mov
pop
jp
mov
fwait
adc
jbe
mov
pusha
mov
mov
popl
movsb
stos
lds
ficompl
lds
rep
insl
ss
mov
lock
roll
repz
mull
xor
and
das
add
pop
jle
jmp
mov
lcall
dec
inc
ss
fldenv
xchg
stos
mov
or
inc
mov
mov
leave
jge
ret
mov
outsl
push
hlt
pop
cmp
sbb
xor
mov
arpl
lods
cmpsl
add
inc
and
aam
inc
pop
les
lret
fdivr
int3
pushf
fsubrs
loop
loop
cld
or
fcompl
int
in
dec
test
jmp
rorb
push
or
out
cmp
inc
ror
rclb
sub
xor
dec
inc
jne
xorl
mov
xchg
add
sbb
divl
rolb
popf
gs
jg
inc
je
out
inc
insl
jge
jge
popa
xchg
cmp
pop
xor
lcall
xor
clc
stos
dec
mov
pop
stc
rclb
addr16
adc
adc
ds
aas
adcl
scas
sti
pop
loopne
inc
loop
xchg
decb
fiaddl
je
xchg
stos
stos
pushf
pop
cmpsl
call
cmp
sbb
popa
jp
dec
les
dec
arpl
lock
rol
lcall
hlt
push
les
test
mov
pop
lods
in
xchg
int
lahf
dec
or
nop
ss
add
or
icebp
push
dec
or
cmp
aam
popa
jns
fstl
or
push
adc
int
xor
fldl
mov
fs
xor
icebp
adc
stos
stos
mov
outsl
push
cltd
or
rol
fwait
aas
and
lcall
fsubrl
xor
iret
lret
jb
dec
es
push
push
fsubrl
test
sbb
xchg
sbbb
xor
outsb
adc
pusha
mov
jns
sti
sbb
push
xor
iret
mov
mov
xor
xchg
adc
rorl
mov
lahf
push
clc
jg
cs
mov
jle
fidivrs
pop
mov
xor
outsb
pop
jmp
pushf
jnp
iret
inc
lods
mov
fisubl
dec
and
faddl
mov
mov
into
xor
push
xchg
rcr
pop
mov
repz
decb
pop
cmp
push
sahf
into
sbb
cmpsb
or
cmp
adc
push
repz
negb
sti
notl
fs
sbb
xchg
mov
cltd
xor
mov
jge
aad
scas
cmp
fwait
aad
insb
or
shrb
or
ljmp
xor
jnp
dec
push
cmp
aad
and
cmp
pusha
pop
cli
imul
mov
or
fdiv
mov
es
xor
mov
pop
sbb
mov
popa
es
cwtl
iret
xor
cmc
mov
out
pop
scas
dec
xchg
hlt
movsl
mov
lret
fisubs
xor
imul
mov
ds
push
push
mov
mov
popf
or
imulb
addl
mov
push
jo
and
fistl
and
jnp
insb
xchg
sbb
xchg
cli
repz
sarb
sub
cmp
dec
mov
mov
cltd
mov
lds
lods
xchg
ss
cmc
and
pop
dec
xlat
xlat
inc
movsl
mov
jne
add
cmpsb
popl
push
loope
in
add
out
jns
lods
adc
lea
clc
fisttps
repnz
jno
jmp
cmpsb
add
xor
loop
and
ljmp
sbb
mov
jo
es
cmpl
ret
add
fcmovu
push
xchg
lret
or
jp
and
mov
lods
pop
pop
cs
insl
test
xor
jbe
xchg
mov
leave
sbb
popa
mov
inc
dec
ret
cltd
nop
push
mov
pop
in
inc
fstps
aas
or
neg
shl
or
or
scas
jo
scas
mov
jnp
sbbl
cmp
lea
les
out
sbb
inc
aam
aaa
cmp
mov
add
sub
into
sub
xchg
xor
mov
xlat
cmp
pop
mov
ficompl
mov
xchg
pop
insb
mov
iret
xchg
cmc
jo
sbb
out
divb
xchg
mov
iret
pushl
mov
jae
imul
push
xchg
jbe
sbb
scas
in
test
cmp
xor
sbb
sbbl
inc
lea
xchg
scas
sbb
jge
int3
scas
inc
jnp
gs
fdiv
inc
in
test
iret
and
repnz
mov
out
push
stos
notl
mov
je
data16
jl
mov
inc
sbb
aam
in
mov
xor
push
pop
cmp
mov
stc
popf
jnp
loopne
shr
pop
xchg
dec
xor
outsl
lods
mov
stos
addl
jb
or
push
xor
cmp
jl
mov
daa
pop
scas
mov
push
js
mov
lcall
gs
jecxz
push
adc
sbb
xchg
adc
mov
imul
fcmove
insl
pop
stos
rcll
pop
adc
xchg
in
lods
loop
inc
mov
xlat
xchg
in
stos
inc
jecxz
stc
fistl
dec
rcrb
nop
pop
or
sbb
add
push
rcl
or
pop
pushw
test
mov
popf
xchg
cltd
cmc
imul
lahf
jno
lock
pop
inc
daa
jnp
push
adc
sub
shl
hlt
sbb
loopne
fbld
xchg
mov
outsb
push
out
mov
mov
jle
xlat
jae
test
lods
out
movsb
nop
push
adc
test
adc
test
lret
ret
sbb
scas
in
push
hlt
addr16
dec
stos
lcall
and
cmc
and
mov
xchg
xor
pop
movsb
jmp
mov
sbb
mov
test
js
je
testl
shld
push
mulb
jne
adc
xchg
or
push
out
mov
pop
push
or
pop
cmp
mov
sbb
push
or
into
int
push
loopnew
add
fcmovu
sbb
fsubrs
in
mov
ljmp
add
jb
aas
or
cmp
dec
mov
mov
push
inc
je
mov
in
push
insb
mov
shll
jo
adc
mov
lldt
ds
cmp
imul
es
aas
or
in
pop
pop
repnz
cmpl
jmp
outsl
pop
test
lcall
xor
fadds
gs
add
scas
cmpb
pusha
ds
or
cli
xchg
icebp
pop
jl
cmp
mov
rclb
pop
stc
stos
xchg
adc
dec
cmp
daa
mov
cli
push
cmpsb
cmp
cmp
fst
adc
mov
outsb
xor
cmp
es
movsl
inc
enter
jo
push
xchg
jbe
xchg
dec
roll
xchg
jnp
std
ficoms
pop
decl
rcr
mov
xchg
mov
push
aas
ja
je
push
repz
jo
sbb
jg
cltd
xchg
aam
sub
cld
mov
call
call
test
jg
cltd
fidivl
sub
mov
dec
orb
sub
in
push
pop
cmp
xchg
sbb
mov
divb
test
jl
sbb
std
inc
adc
mov
cmp
mov
loope
repnz
test
jmp
andl
sub
inc
inc
mov
fwait
sub
jle
lcall
fisttps
mov
xor
sub
rcll
pusha
dec
and
add
daa
push
sub
ja
addr16
push
inc
sbb
shl
lret
cmp
push
push
faddp
lods
cmpl
popa
in
into
or
sbb
mov
inc
push
imul
jp
jle
in
pop
fcompp
das
inc
lret
add
dec
je
lods
ss
xor
std
fiaddl
ficoml
cs
loopne
jecxz
mov
xchg
mov
and
loopne
cmp
lds
loope
pop
ds
int3
push
push
in
mov
adc
scas
push
loopne
fsubl
int3
loopne
lea
adc
xchg
icebp
cmpsb
pop
dec
pop
inc
inc
test
sbb
in
ds
adc
push
sahf
fstp
or
add
icebp
std
or
push
lret
push
flds
stos
ja
push
mov
push
inc
pop
mov
mov
in
hlt
es
cmp
addl
pop
push
test
xor
and
dec
test
add
cmp
dec
pusha
int
sub
sahf
add
mov
xor
jnp
iret
add
mov
or
out
push
outsl
adc
sbb
aas
fisubs
cmp
fidivrl
jl
cmp
aad
add
fnstcw
scas
insb
push
lods
int3
inc
jge
dec
adc
aaa
push
push
push
push
add
xchg
mov
in
add
sbb
pop
mov
xchg
in
inc
lods
jle
mov
bound
inc
and
mov
xchg
mov
cmp
mov
mov
stos
sbb
mov
imul
jp
or
popf
cs
out
mov
pop
xchg
mov
mov
test
push
into
test
ja
xchg
iret
and
ret
fmuls
out
sti
sub
mov
xor
imul
iret
pushf
dec
push
nop
sub
xor
pop
mov
or
lods
jns
jae
mov
dec
repz
ja
jnp
cli
push
cmpsb
addl
xlat
std
push
mov
out
pop
cmpl
xchg
ja
mov
addl
xorb
leave
and
xchg
mov
xor
and
loope
pushf
out
push
shll
push
xchg
inc
and
add
mov
fadds
inc
subb
add
loopne
mov
in
xchg
xchg
push
ss
or
lds
jns
and
jmp
and
xchg
pusha
xchg
xchg
dec
jmp
imul
mov
movsb
imul
jno
xchg
mov
sbb
cwtl
mov
add
fnstcw
lahf
test
rorb
mov
pop
dec
subb
sub
inc
adc
push
bound
pop
or
mov
add
mov
scas
ljmp
mov
outsl
cwtl
add
xor
loop
push
ret
sbb
rcrb
pushf
sub
push
movsb
insl
adc
lret
push
cmp
dec
pop
lret
jmp
jnp
add
shl
push
push
pop
xchg
mov
aas
sub
jo
push
jl
call
movsl
mov
lahf
inc
dec
inc
mov
push
adc
rcrb
xchg
faddp
xchg
pop
pop
pop
stos
mov
or
lea
repnz
ret
fsub
gs
inc
xlat
or
xor
repnz
pop
lret
mov
outsl
mov
insb
jmp
and
lahf
add
jmp
push
dec
mov
neg
and
out
test
in
pushf
ficomps
outsl
and
cmp
xchg
cmpsb
push
mov
sub
test
imul
insb
repnz
mov
xchg
or
out
stos
add
jl
jb
lea
inc
mov
sub
pop
mov
mov
imul
ret
mov
stc
hlt
aam
xchg
xchg
lret
scas
and
pop
out
sub
pop
sbb
dec
std
push
imul
cltd
mov
push
mov
xchg
sbb
out
insl
popa
xor
cmc
rcr
movsl
ror
mov
loope
jg
jo
lods
push
je
push
push
add
add
xchg
xor
mov
test
loop
movsl
xchg
cwtl
out
daa
jl
pop
std
loopne
or
or
pop
mov
rcl
imul
pushf
out
insb
shl
jo
and
xchg
xchg
stos
ret
xor
dec
push
adc
cmp
hlt
pop
ldmxcsr
clc
shrb
scas
or
mov
mov
out
nop
or
outsl
int
or
rorb
into
lock
cmp
pusha
push
jmp
je
movsb
inc
xor
enter
fimuls
adc
loopne
jmp
call
mov
mov
and
xchg
icebp
cmp
stos
sbb
test
sbb
leave
mov
dec
in
mov
std
xor
mov
or
pop
lcall
in
adc
fucomip
out
ret
fsubrl
hlt
shll
jns
pop
pop
iret
js
pushf
jb
shrb
lret
js
fiaddl
pop
pop
dec
icebp
xchg
addb
jmp
sub
xchg
test
cmpsb
dec
scas
fucomp
sbb
jb
fwait
repnz
fidivrs
inc
or
fucomip
inc
jp
pushl
out
mov
movsb
ret
loopne
jmp
inc
xchg
pop
pop
sbb
into
cwtl
xor
ficoms
notb
jae
sub
mov
mov
mov
enter
jno
fsubrp
dec
cltd
lods
fidivs
xchg
jl
and
jp
jne
cmp
movsb
rcrl
xchg
mov
cmp
enter
sub
in
data16
xchg
push
in
outsb
xorl
xchg
xchg
jmp
or
cmp
dec
push
push
leave
mov
mov
test
mov
mov
jbe
inc
popf
and
inc
push
and
xchg
rcrb
popf
xchg
sub
sub
dec
cld
xorl
cmp
arpl
mov
popa
lods
sbb
sbb
mov
or
leave
jl
pusha
inc
mov
jae
fsubl
fwait
stos
pop
xchg
dec
fistpl
jb
xor
adc
sbb
adc
mov
xchg
cli
dec
cld
push
dec
dec
mov
out
sub
movl
ss
idivl
xchg
and
test
xor
rorl
fdivrp
xchg
mov
inc
xor
inc
in
mov
pushf
out
mov
out
sbb
loopne
xchg
in
es
les
jno
sbb
add
loope
add
and
adc
push
jl
clc
movl
inc
ds
imul
mov
add
inc
out
push
lcall
outsb
jbe
add
push
ss
pop
mov
aaa
adc
push
cmpl
dec
xchg
lret
sub
xlat
or
gs
out
inc
mov
inc
popf
mov
and
fimuls
stc
jmp
jecxz
cld
ja
sbb
lret
mov
in
imul
push
mov
mov
and
lods
push
push
sub
clc
sbb
sub
or
lock
pop
adc
xchg
lds
lcall
cmp
sub
int
jno
loope
test
arpl
loopne
and
adc
sbb
adc
mov
sub
cmp
lods
cmp
jl
bound
cld
rorb
mov
dec
scas
and
jne
divl
sarl
lds
jl
jne
aaa
sbb
jnp
sbb
pushf
cmpsl
mov
push
ret
shlb
jbe
cwtl
andb
icebp
ret
inc
repz
dec
enter
push
sbb
cld
outsb
pop
fcomps
cmp
cmp
xor
add
inc
fmulp
pop
shlb
mov
and
mov
xchg
sub
push
test
dec
push
xor
fs
add
testl
mov
test
out
cld
xchg
bound
sbb
mov
fdivp
lods
inc
push
repnz
inc
sbb
xor
xchg
inc
cli
or
shll
loop
jne
lahf
sub
dec
sbb
mov
testb
fs
shlb
push
add
lahf
inc
fmulp
rcll
dec
and
or
push
lods
repnz
mov
xchg
ja
mov
ja
test
sbb
sub
sub
xor
cmpsb
xchg
outsb
xchg
int
jp
pop
cmp
loopne
dec
cmp
sbb
stos
pop
rorb
icebp
data16
int
jmp
es
lock
stc
and
xor
loope
xchg
lods
xchg
sub
insb
not
add
stos
frstor
mov
pushf
lods
ljmp
outsl
push
pop
andb
sub
insb
dec
jns
fsubl
cmp
jle
adc
inc
aam
jnp
ffreep
mov
pusha
clc
push
imull
testl
dec
pop
lret
imul
lcall
out
hlt
pop
xchg
movsb
cld
mov
test
mov
push
daa
sar
or
js
mov
mov
xchg
sbb
cmp
or
pop
adc
daa
add
pop
jl
je
jg
and
push
dec
mov
ss
xchg
imul
dec
test
cli
sahf
pushf
lahf
call
or
insb
lcall
and
jecxz
pop
les
jmp
test
and
out
dec
or
cmc
imul
jle
sub
sub
aam
jno
scas
scas
cmp
push
nop
jp
jb
test
add
cs
pop
mov
adc
lcall
and
jp
fs
bound
imul
dec
adc
movsb
mov
insb
dec
fdiv
or
mov
aaa
lret
push
push
mov
and
pop
call
hlt
and
add
sub
xor
fucomip
movsl
mov
inc
xor
and
xchg
cwtl
or
decl
sar
adc
pusha
jbe
ret
sub
add
loope
outsl
std
adc
inc
call
xchg
idivl
push
pop
sbb
mov
addr16
adc
pop
add
addb
adc
aaa
sahf
dec
xchg
aas
xchg
and
sbb
jo
jae
outsl
xor
sub
rcll
add
int3
push
cs
or
and
xchg
xlat
push
cwtl
xchg
shll
push
cltd
inc
dec
lea
imul
scas
jnp
loopne
inc
loopne
inc
add
out
and
movntps
mov
pushf
xor
or
inc
sbb
jns
sub
cs
shll
call
or
cmpsb
fucomp
aaa
mov
mov
inc
clc
add
sbbb
xor
arpl
scas
pop
insl
add
mov
int
aaa
test
js
cmp
xchg
outsl
xchg
xlat
int
jno
ljmp
negl
inc
shlb
lock
push
jl
incl
lahf
nop
jl,pn
push
mov
push
xchg
stc
jns
rcrb
mov
loope
mov
movb
ror
andb
push
or
jp
lods
aas
pop
sub
sub
es
adc
pusha
sar
loopne
cmp
addr16
int
ret
or
xchg
mov
mov
pop
aaa
cmc
outsb
sbb
push
xor
popf
pushf
xorl
pop
clc
stos
push
inc
insl
inc
out
mov
jbe
test
sbb
lret
mov
and
in
jb
add
push
inc
divl
or
add
mov
stc
arpl
lcall
adc
leave
and
xor
movsl
jle
mov
pusha
cld
jne
fwait
cmp
push
dec
push
mov
dec
add
cld
adc
add
xchg
mov
pop
jno
ds
cmpl
cmpsb
loope
mov
lock
lahf
faddp
and
imul
inc
pop
or
cmp
adc
add
cmp
stos
cmc
stos
sub
outsl
dec
cmp
stc
pop
les
add
mov
cs
or
pop
mov
xlat
pop
aaa
inc
push
in
push
or
in
leave
mov
mov
loopne
loop
mov
mov
rolb
jl
adc
mov
adc
pusha
pop
jbe
or
fs
mov
in
xor
mov
clc
pop
add
pop
iret
jecxz
jp
dec
and
out
aad
jne
xor
sti
mov
add
and
mov
sbb
pop
leave
ss
les
pop
jecxz
inc
call
lret
popa
iret
ss
adc
out
cmpsl
xor
movl
mov
pop
jbe
repz
mov
or
lea
inc
addr16
out
jne
iret
ret
xchg
dec
sbb
xchg
decl
ret
ret
jmp
mov
inc
pop
lret
pop
les
lock
push
out
inc
repz
dec
push
adc
mov
cmp
fists
dec
pop
test
addl
shlb
out
in
sbb
jecxz
add
sub
cmpsl
imul
hlt
add
sub
movsb
push
loopne
lret
incb
ds
scas
popf
xchg
ficoml
xor
sbb
mov
mov
or
imul
dec
xchg
sub
mov
imul
mov
and
das
inc
ja
sub
nop
cld
jno
push
pop
sbb
sbb
mov
jmp
arpl
in
int3
adc
xchg
or
add
movsl
add
sahf
mov
rolb
mov
jno
ja
fcoml
and
ficoml
insb
loop
rolb
and
mov
test
mov
test
cmpsb
dec
lcall
mov
or
test
mov
test
sbb
sbb
call
sbb
cmp
jns
test
push
ja
inc
outsl
adc
push
xor
std
sbb
push
cmovb
add
xchg
push
jbe,pt
cmp
mov
movsb
orb
ss
cmp
fisttpl
popf
inc
pop
lret
sub
mov
xor
sub
arpl
repnz
mov
inc
jns
jno
cld
nop
push
mov
sub
popf
pushf
iret
dec
mov
leave
ret
in
dec
mov
test
stos
inc
fidivl
mov
pop
scas
pop
cmp
inc
xchg
mov
sub
mov
ljmp
insl
cs
and
rcrb
std
dec
pop
iret
lds
fsqrt
xchg
inc
ret
arpl
xrstor
cli
adc
aam
cmp
hlt
lods
sub
sbb
push
mov
fmulp
es
jp
or
clc
mov
sbb
fcmovnbe
add
out
rcrl
loop
lcall
cs
cmpsl
dec
adc
imul
test
int3
add
lahf
or
or
jge
dec
pop
hlt
mov
scas
out
pop
jecxz
outsl
inc
inc
mov
dec
inc
adc
incl
popf
and
cmpsb
mov
push
pop
mov
adc
xchg
into
pop
cmp
dec
or
xchg
aas
mov
mov
cmp
xchg
inc
rorb
lds
fstl
xchg
pop
lods
js
cltd
cs
jb
pop
stos
test
mov
inc
lcall
ret
les
shl
cltd
push
sbb
and
push
shl
movsb
push
negb
jnp
xor
cld
mov
loopne
pop
mov
mov
xor
xchg
mov
jle
into
ds
xchg
lea
aam
faddl
stos
pop
test
pop
nop
sar
and
inc
test
js
shll
xchg
nop
int3
jne
mov
fisubrs
mov
mov
aas
clc
ret
dec
adc
xlat
ljmp
cwtl
lds
ss
xor
in
xor
out
es
pop
cmp
mov
loop
loop
pop
jle
testb
shrb
int3
dec
outsl
mov
cwtl
push
sub
mov
je
inc
cvtpi2ps
adcl
add
push
fcoml
and
cs
or
jge
sub
and
push
icebp
hlt
fldl
call
mov
dec
add
iret
out
xchg
imul
cmpsl
adc
das
imul
sti
sysexit
pushf
lea
mov
xor
adc
fdivr
aas
mov
mov
in
in
scas
in
or
sahf
scas
stos
faddl
iret
cli
sti
xchg
dec
mov
nop
mov
mov
aas
mov
inc
or
mov
inc
rol
push
mov
jo
push
icebp
pop
cwtl
inc
movsl
stos
mov
sbbb
xchg
cmp
mov
mov
xor
push
add
decl
sub
sbbb
icebp
jo
outsl
ja
ss
mov
pop
test
xor
mov
push
enter
insb
lahf
adc
adc
inc
bound
jnp
lahf
adc
push
cmp
jle
ljmp
mov
mov
add
or
pminub
pop
xchg
cmp
lods
mov
inc
mov
fisubs
inc
inc
data16
out
mov
cmc
mov
or
cs
aas
ds
lea
and
xorb
popa
jns
mov
gs
orl
cmp
sbb
notl
icebp
fcoml
roll
add
mov
mov
mov
mov
pop
push
jmp
mov
shrd
pop
mov
daa
sbb
dec
push
push
negb
mov
iret
adc
insl
int3
inc
pop
les
and
xchg
dec
fildl
pop
cmp
and
loope
jno
stc
mov
adc
lret
jbe
and
arpl
fs
dec
xor
aaa
in
sub
cmc
pushf
aas
xchg
pop
std
mov
imul
sub
popa
mov
cli
jae
jns
scas
xchg
out
movsb
push
imul
sbb
rorb
stc
stos
xchg
xorb
scas
mov
int
fwait
gs
cmpsl
jecxz
in
pop
mov
test
daa
dec
cmp
jae
nop
loope
or
cli
and
fsts
pop
pop
xor
pop
xchg
movsb
cmp
jbe
mov
jmp
add
adc
std
lods
int3
aad
stos
aaa
insb
mov
push
rorb
nop
mov
adc
in
xor
pop
jl
xlat
sub
inc
push
test
imul
aas
fcomps
imul
in
push
mov
jecxz
fidivrs
push
mov
fisttps
adc
or
outsb
mov
outsl
xchg
or
icebp
pop
adc
out
loop
ret
or
lods
paddw
repnz
add
sub
cs
dec
daa
jb
pop
sub
into
leave
xorb
xchg
sar
xchg
nop
jp
sub
es
into
add
sub
es
aas
cs
mov
mov
mull
fucom
incb
pop
mov
shlb
xchg
xor
sub
cmp
leave
int
or
daa
jmp
jo
pop
ss
ljmp
pop
adc
xor
or
or
jecxz
mov
decl
dec
xor
or
mov
jns
add
or
in
xchg
fidivrs
dec
push
xor
cld
jg
lock
sub
add
addr16
jp
jbe
add
and
lret
repz
aas
dec
xchg
adc
clc
out
xchg
push
pop
in
rcrb
sbb
sarl
pop
rclb
xchg
pop
leave
push
add
xor
push
lods
test
scas
push
insb
cmp
inc
inc
dec
ljmp
jmp
or
adc
out
xor
inc
repz
adc
mov
dec
imul
test
xchg
shll
fisubrs
mov
mov
ret
sub
pop
out
push
sti
in
pusha
iret
fistpl
rclb
inc
push
push
test
outsb
addr16
ds
repnz
mov
jp
add
scas
mov
cmp
aas
jmp
mov
andb
aas
aad
in
mov
popf
pusha
shlb
ss
test
xor
pop
out
popa
sahf
scas
mov
repnz
lret
inc
xor
ret
cmp
jmp
sub
or
fiadds
maskmovq
mull
pushf
dec
loop
push
sub
scas
fsubrl
jb
ss
xchg
xor
into
arpl
aad
bound
popf
mov
mov
add
lods
cmp
sub
loop
pop
rorl
testl
out
adc
sub
enter
scas
sbbb
lds
cld
and
testl
mov
incb
test
sub
rep
mov
stos
das
xlat
inc
push
and
popa
jbe
mov
jno
les
lcall
add
std
int3
daa
dec
xor
stc
cmp
and
mov
xchg
pop
jne
call
lcall
fisubs
popa
mov
stos
addl
lahf
jbe
mov
push
cs
imul
popa
mov
movsl
cli
push
add
ds
cmp
dec
dec
fsubrs
roll
fmuls
nop
das
aam
mov
xchg
adc
in
ds
adc
loope
js
ljmp
fsubrl
pop
ljmp
push
inc
adc
sub
push
fistps
neg
test
xchg
sarl
sbb
inc
dec
and
aas
cmpsb
int3
inc
dec
add
mov
pop
push
pop
add
push
scas
mov
scas
ret
mov
jns
pop
jno
add
out
cmc
xor
jbe
pop
pop
scas
aas
fs
jns
mov
aad
mov
orl
mov
inc
jo
sub
bswap
int3
xor
jle
cld
dec
jnp
call
add
aam
adc
push
imulb
inc
add
push
adc
sti
fwait
std
test
mov
insl
nop
ret
aad
fisttpll
inc
fcompl
push
stc
mov
sbb
in
xchg
jmp
mov
ss
enter
or
xor
mov
gs
cmp
bound
inc
mov
sub
cmp
or
jmp
push
jg
push
fildl
fwait
mov
lret
sbb
clc
xor
lea
push
imul
das
lock
dec
jno
adc
add
xchg
call
push
insl
hlt
inc
or
push
push
cmpsb
icebp
xchg
mov
fstpl
repnz
adc
movsb
out
mov
push
shrl
mov
pop
fcoms
adc
testb
push
xor
into
repz
or
aad
add
stos
in
sub
jmp
sbb
sub
and
or
cmp
popw
je
push
add
push
xchg
cmp
lcall
mov
pop
repnz
js
dec
jl
add
fwait
jmp
shll
loopne
cmpsb
rol
adc
or
pop
add
insl
jnp
pushf
fists
mov
into
jp
test
mov
ljmp
adc
cmc
mov
icebp
inc
pop
ret
pop
mov
loope
jns
xor
jae
adcb
ret
pop
icebp
mov
dec
ss
jno
pop
mov
jp
mull
mov
aam
int
shll
sbb
sub
or
std
sbb
xlat
xchg
push
cmp
outsb
cmpsb
pop
popa
dec
xor
mov
mov
pop
enter
jbe
cwtl
test
repz
dec
and
leave
dec
jb
out
xchg
test
xor
lods
dec
lock
and
mov
mov
xchg
out
jge
sub
add
inc
cmp
cmpl
push
scas
imul
mov
les
or
leave
sub
mov
xor
cltd
mov
xor
jp
rorl
cmp
xchg
mov
add
mov
inc
cmpsb
arpl
cmc
pop
push
shll
dec
mov
notl
loope
sbb
adc
sti
mov
push
mov
xor
cwtl
mov
out
cld
or
dec
pop
jle
imull
nop
pop
adc
lcall
mov
loope
cmp
jl
jmp
sbb
or
std
dec
dec
xchg
sub
adc
push
pop
insl
ret
fldcw
pushf
mov
test
sub
xlat
adc
inc
sbb
push
xchg
pop
in
repz
sbb
rcrb
in
jb
out
faddp
pop
daa
adc
insb
pop
sbb
xor
pusha
cmpsb
add
clc
adc
lahf
jg
jp
movsl
cmpsl
aad
pop
idivb
dec
fiaddl
arpl
adc
inc
mov
and
dec
fisubs
mov
jne
mov
lcall
adc
jb
add
fmull
fldl
adc
jl
stos
divb
addb
xor
adc
push
sbb
cmp
test
or
xor
cmp
filds
stos
cmp
mov
xchg
and
xor
fcomps
sub
mov
call
inc
sub
jl
outsl
cmp
push
enter
dec
jne
xlat
inc
cmp
adc
inc
pop
scas
fiaddl
jne
and
mov
adc
aam
sbb
stc
jnp
jl
xchg
and
stos
movl
fstpt
jno
jmp
out
push
jb
inc
icebp
inc
aad
mov
xchg
fisttps
mov
xchg
lcall
ljmp
iret
add
test
push
push
mov
or
or
xor
mov
push
repnz
es
mov
in
and
sti
movsb
jge
orl
test
jg
dec
push
push
insl
and
aad
sub
ret
repnz
shrb
addb
fwait
inc
dec
cmpsl
movsl
and
adc
cmpsl
xchg
mov
inc
and
mov
pop
push
lea
sti
mov
shlb
and
aaa
cmp
movsb
sbb
mov
sar
push
adc
push
call
cs
je
mov
cld
xchg
cmp
cmp
sub
idiv
pusha
pusha
lea
mov
test
push
fimull
jb
ja
jle
mov
jg
shlb
orl
test
loope
xor
into
lds
jmp
mov
out
cmpsl
pop
movsl
and
les
sti
mov
or
lock
xor
pop
xor
push
and
xlat
adc
imul
mov
xchg
push
mov
std
sub
and
mov
imul
jmp
scas
adc
into
sub
mov
scas
mov
or
pop
popa
dec
int
adc
xchg
jle
sub
outsl
aaa
xchg
stc
aad
pop
fs
cmp
dec
fildll
cmp
mov
sub
shlb
push
sub
mov
xchg
shrl
adc
inc
mov
mov
add
xchg
cld
into
push
sub
mov
fstpl
mov
mov
outsb
add
cmp
bound
pop
aaa
jne
icebp
je
das
pop
and
add
ret
sub
dec
mov
jb
push
movsl
sahf
pop
dec
mov
stos
xorb
out
mov
mov
and
sbb
sub
sbb
pop
mov
outsl
jns
stos
stos
int3
clc
stc
cmpb
lret
jecxz
sub
iret
inc
mov
stos
or
and
lret
test
jb
mov
icebp
repnz
and
popa
imul
xchg
dec
test
mov
add
ficompl
loopne
loopne
add
jb
dec
bound
sub
popa
xlat
cli
incb
cmp
aas
sbb
into
cmp
lea
mov
or
mov
mov
cli
out
dec
popf
lock
xchg
jo
fs
and
dec
pop
mov
repnz
mov
jge
aas
dec
shl
jecxz
ljmp
mov
into
sbb
aaa
out
xor
jecxz
mov
fisttpl
mov
psllw
scas
js
add
cli
bound
loop
fimull
roll
data16
mov
add
repnz
sbb
mov
jmp
jmp
lds
in
cmp
dec
cltd
push
add
test
es
pop
and
pop
pushf
or
cmp
sub
fs
leave
stc
fisttpll
pop
hlt
sti
bound
jb
or
nop
jne
add
gs
mov
xchg
add
pop
arpl
loopne
fwait
in
fnsave
or
pop
dec
addr16
pop
jo
xchg
pop
fs
jmp
cmp
mov
and
pushf
ds
stos
xor
cli
xchg
stos
dec
shlb
pop
mov
or
in
hlt
stos
incb
frstpm(287
imul
xor
sub
movsl
and
add
jnp
xchg
cli
cmpsl
aad
dec
sbb
dec
inc
mov
lea
sbb
mov
popf
add
imul
xlat
lahf
or
jnp
mov
fimull
xor
leave
push
cmp
mov
cmp
in
icebp
pop
imull
xchg
adc
stc
in
ljmp
decl
fsubl
push
cld
repz
and
hlt
dec
xchg
add
lods
mov
aas
insb
adc
mov
cmp
fldl
mov
fidivl
es
xchg
cmp
loopne
movsb
inc
fnstcw
sub
mov
inc
lock
fs
add
xor
imul
push
rcrb
daa
mov
test
mov
fsubl
dec
movlps
flds
push
sahf
icebp
push
divl
ret
add
cltd
dec
pushf
in
push
das
dec
scas
sti
fnstcw
dec
sub
or
fcmovbe
sub
fsubs
add
bound
cmp
or
xchg
xchg
jl
sti
cmpsb
mov
pop
inc
or
push
testb
fdivrs
xor
xchg
je
jae
movsb
add
and
and
adcl
inc
ljmp
and
lgs
ds
xlat
lret
pop
mov
dec
xchg
test
aaa
das
das
jecxz
cmp
test
lea
and
into
mov
inc
fucom
mov
pushf
sbb
xor
sbb
out
xchg
fadd
mov
out
push
cwtl
push
fwait
inc
xchg
jne
pop
mov
int3
lea
sub
push
sbb
sub
cmp
lret
or
fwait
imul
sub
sahf
das
rcl
jne
xlat
mov
hlt
xchg
cmp
mov
les
lret
mov
inc
or
or
pop
outsb
sbb
push
test
xor
in
icebp
fistps
mov
xor
inc
mov
std
insb
mov
addr16
xor
cmp
sub
mov
arpl
cmp
xor
jne
push
bound
cmp
movb
xor
movsl
mov
push
jg
cmovb
sbb
push
jnp
lods
mov
cmpsl
call
push
xor
test
nop
pusha
adc
ljmp
in
jne
push
loope,pn
loop
insb
or
jns
rcrb
in
jg
mov
sarl
xchg
or
out
es
pop
fldcw
or
pop
mov
dec
out
jge
leave
repz
aas
aad
in
stos
scas
nop
dec
push
popa
fdivrp
call
outsl
add
or
leave
sbb
movsb
dec
pusha
and
pusha
mov
int
jge
push
pop
inc
scas
test
test
ja
mov
cli
mov
dec
rolb
jg
in
mov
push
xchg
test
fwait
js
cmp
clc
sbb
das
rcll
inc
popa
test
into
fwait
test
sti
mov
mov
jp
in
rcl
lds
xor
and
popf
jge
pop
outsb
hlt
mov
clc
mov
imul
data16
dec
xchg
lret
js
xchg
je
arpl
push
dec
cld
rep
adc
les
mov
arpl
inc
in
inc
dec
pushf
cmp
mov
cs
cmpsb
pop
jg
or
stos
xchg
orl
pop
cld
xor
mov
daa
shl
xchg
jmp
fldl
sub
jecxz
sbb
lods
cmc
iret
movsb
cmp
cmpsb
andl
mov
lods
inc
psubd
bound
loop
roll
imul
lea
jge
orl
pop
xor
jo
ror
bound
or
push
mov
bound
cmc
adc
int
fimull
xchg
dec
sti
push
insb
mov
inc
arpl
mov
mov
xchg
mov
and
sub
scas
movsb
push
and
cmp
add
call
idivb
pushf
push
jne
push
add
push
jmp
outsl
jno
out
ss
xchg
es
mov
push
lahf
cmp
je
and
xchg
in
insl
fistpll
or
inc
inc
ljmp
xor
fsts
or
gs
enter
orb
ficoms
adc
sub
cli
fcmovb
inc
sbb
in
inc
jae
in
scas
dec
insl
mov
mov
jmp
insl
stc
mov
je
mov
data16
outsl
push
in
xchg
mov
xchg
mov
test
xlat
and
insb
and
push
push
mov
inc
pushf
push
lock
roll
mov
scas
ret
inc
pop
mov
sub
js
repz
das
jb
inc
inc
jmp
xchg
dec
stos
or
jl
lcall
pushf
test
pop
stos
adc
clc
es
adc
mov
push
xchg
insl
sbb
rorb
dec
dec
hlt
jnp
fmull
dec
leave
out
xchg
lret
dec
fs
mov
lcall
call
and
fwait
scas
mov
push
lock
outsb
add
jbe
adcl
mov
adc
loope
dec
vrcpps
sbbw
add
cmp
xor
inc
sub
pop
sbb
fs
in
push
in
iret
loopne
jle
loopne
ds
nop
pop
sti
and
mov
arpl
xchg
test
bound
or
and
loope
jecxz
mov
mov
xchg
jg
imul
out
xchg
loop
mov
inc
loop
ret
push
add
aam
and
mov
push
ret
cmp
or
mov
movb
pop
mov
mov
pop
cmp
sbb
mov
ret
mov
bswap
dec
xor
out
cmp
mov
stos
cmpsb
mov
fisubl
fstps
daa
loop
and
push
jb
or
scas
and
mov
ja
adc
test
push
add
iret
and
int
adc
xor
fstp
pop
or
testb
test
stos
inc
mov
andb
xlat
rcrb
je
fdivs
jo
repz
sub
fidivs
xchg
stos
jl
and
test
jge
lcall
jns
jbe
pop
jl
and
inc
in
ja
sarl
icebp
inc
push
out
jbe
into
pusha
xlat
and
cmp
mov
jae
sub
jl
rep
ja
mov
leave
dec
in
cmpsl
and
lcall
pop
inc
mov
movsb
gs
ffree
jg
insl
enter
jnp
ss
jl
and
mov
jbe
xchg
or
xchg
or
fwait
inc
xchg
jb
enter
adc
add
mov
ja
test
pop
jmp
cmpsl
ds
jnp
push
mov
je
push
xlat
aam
inc
sti
cmp
mov
or
adc
or
xor
mov
bound
pop
insl
jmp
fld
test
xchg
mov
fisubrl
jl
pop
faddl
scas
rcrl
jne
fldcw
lods
leave
push
sub
push
clc
mov
mov
inc
pop
fildl
dec
mov
outsb
xchg
xchg
adcl
jnp
sub
insl
mov
dec
add
adc
or
mov
repnz
sbb
loopne
dec
mov
inc
mov
mov
fld
in
fdivl
mov
insb
xor
aad
jno
lods
loop
pusha
pop
mov
xlat
and
gs
add
loope
add
push
mov
adc
lret
test
test
ja
in
push
adc
rcrl
das
xor
gs
inc
xchg
push
and
fcomip
in
pop
in
push
loope
cmc
test
adc
cwtl
scas
add
adc
xchg
jno
insl
fsubl
lcall
insl
inc
and
insb
out
inc
dec
xor
lahf
or
lods
fmul
and
mov
xchg
dec
ds
mov
sbb
mov
jge
sbb
push
fwait
out
jae
aas
xor
jecxz
inc
push
adc
adcb
fidivrs
loopne
xor
sub
sub
dec
aad
cld
insl
mov
mov
pop
xor
jae
push
cld
jmp
mov
in
pop
xor
jecxz
fstps
fisubs
int3
call
xor
mov
cmpsl
popa
sub
push
imul
test
divb
into
xor
push
and
cmc
mov
insl
jmp
mov
jb
pop
mov
add
adc
sbb
mov
sbbb
repnz
out
sub
mov
pop
jl
mov
addb
add
add
sbb
or
inc
mov
dec
sbb
and
js
jmp
and
loop
sub
sub
int3
mov
ja
cld
push
pop
cs
cmpsl
inc
dec
loop
jo
fdivrl
hlt
xchg
mov
mov
lcall
aad
int3
mov
add
jge
fisttpl
jmp
or
dec
sub
in
lahf
xchg
shlb
sbb
push
and
fldenv
push
mov
add
mov
sub
and
sub
or
push
outsl
mov
sbb
lods
popf
daa
in
ljmp
cwtl
jb
andb
sbb
or
inc
test
imul
cmp
out
das
jp
scas
lock
mov
das
dec
sbb
lret
addr16
cs
insl
mov
into
and
ljmp
call
imul
jbe
je
insb
sarb
push
and
mov
mov
ss
cmp
movsl
ss
add
sahf
mov
dec
mov
xchg
in
lcall
mov
clc
sbb
cmp
testb
scas
scas
inc
fidivl
mov
lods
test
push
push
or
xchg
movsl
xlat
enter
nop
add
fs
jnp
pop
lods
add
mov
inc
pop
divb
dec
push
fcmovnu
sbb
in
or
push
into
stos
das
ret
in
adc
stc
aas
int
out
lock
dec
call
scas
mov
filds
sarl
cmp
dec
or
int3
xchg
in
xchg
in
mov
stos
scas
nop
mov
scas
test
int
orb
sahf
and
stc
push
mov
fnclex
ds
push
adc
imul
or
sbb
into
imulb
into
fidivrs
mov
pop
mov
pop
out
daa
and
loope
mov
jb
scas
into
push
adc
jp
mov
je
cmp
xchg
lods
lahf
jecxz
sbb
jle
inc
imul
and
xchg
pushf
test
add
in
out
pop
mov
in
and
lock
inc
movq
dec
mov
or
daa
or
loop
jl
ja
fidivrl
xchg
cmc
in
lcall
gs
jge
mov
jne
fucomi
jae
lretw
fs
jb
xlat
jnp
ret
pop
lret
xor
mov
inc
xchg
sbb
adc
pop
fucomp
iret
std
addr16
jmp
loop
sub
int3
sub
add
adc
cmc
sub
cmp
add
or
or
xchg
imul
xchg
movsl
jnp,pt
stc
aam
and
div
jmp
cmp
xchg
add
cmpsl
sbb
dec
jne
cmp
test
shll
sub
dec
or
cmpb
in
push
mov
add
mov
iret
and
popf
pop
inc
jae
jo
test
jmp
hlt
mov
adc
inc
inc
out
lret
movsl
imul
add
movsb
push
hlt
sbb
adc
or
mov
dec
jp
mov
shlb
xchg
push
pusha
fisttpll
mov
ljmp
pop
dec
jge
xchg
sub
repz
push
in
out
pop
imul
fsubs
sbb
cltd
daa
or
cs
jne
sbb
insb
sbb
orb
or
xor
or
outsb
ds
xchg
dec
xor
mov
adc
test
pop
add
icebp
test
aaa
lock
jp
lahf
enter
lahf
jbe
cmpsl
ss
inc
pusha
sbb
xor
out
push
mov
pop
ret
testl
xchg
es
fwait
mov
mov
push
add
cs
or
loop
in
rorl
push
push
pop
dec
add
cwtl
popf
sub
pop
jecxz
sbb
cmp
gs
inc
pop
insb
or
imul
pop
or
js
les
dec
orl
sti
not
in
add
outsb
cmp
loopne
xor
push
out
mov
jo
movsb
js
repnz
push
push
loope
xchg
jg
pop
mov
ret
cmp
add
inc
mov
jmp
arpl
mov
cmp
lcall
sahf
xor
fbstp
gs
test
lds
lret
add
and
sbb
dec
and
dec
arpl
jo
sbb
dec
test
push
test
sub
ss
ret
notb
and
add
or
xor
in
push
mov
sub
int
lock
inc
mov
sahf
mov
out
pop
insl
testb
or
movsb
lret
or
cwtl
xor
dec
ljmp
rorl
jle
ret
cmc
lock
fisubrl
pusha
in
push
sub
dec
inc
repz
xchg
mov
dec
rcrb
scas
dec
inc
push
ss
iret
push
push
popa
out
outsb
and
push
int3
pop
and
ficoms
jo
not
call
scas
movsb
add
jle
lret
mov
jg
enter
xor
pop
nop
gs
push
aas
in
inc
arpl
movsl
pop
push
lret
mov
inc
push
loopne
sbb
nop
clc
pop
jae
sbb
das
int3
mov
daa
testl
cmpsb
mov
and
or
cmp
xchg
in
int
mov
dec
add
and
int
orl
clc
push
loope
dec
xor
cmp
xchg
xchg
lsl
std
mov
mov
and
jae
sti
cmpsb
pop
pop
xchg
repnz
and
je
jle
push
lahf
push
mov
xor
and
add
aad
or
lret
fldt
sbb
inc
outsl
sbb
aas
or
sbb
pop
fwait
scas
or
xchg
and
dec
std
lods
pop
pop
adcb
mov
push
xchg
jnp
cmp
inc
jo
inc
in
mov
lahf
addr16
inc
fldt
pop
repz
sbb
mov
add
enter
pop
cmp
fistpll
sub
jecxz
pop
jbe
hlt
adc
jno
mov
mov
and
dec
out
stos
pop
add
into
lock
jge
cmp
xchg
out
ljmp
in
inc
lahf
scas
ja
lahf
insl
fwait
mov
push
pop
loop
sub
mov
pop
xchg
pop
out
sub
pop
ficompl
inc
cltd
fmuls
jae
push
mov
push
mov
clc
push
pop
inc
cmc
xchg
xlat
and
jle
push
ss
cmp
xlat
mov
stos
sbb
roll
inc
movsb
add
out
imul
je
sbb
add
sbb
pop
cmp
jbe
popf
mov
fsubp
fstpl
mov
imul
jb
mov
cmpsl
cmp
mov
or
aad
sub
or
das
or
sarl
jns
in
fwait
mov
inc
mov
xor
pop
xor
stos
es
lds
test
je
jmp
dec
push
dec
movsl
in
add
or
inc
movsl
add
push
adc
adc
std
jbe
or
into
add
push
xlat
les
pop
add
mov
push
push
xor
std
jg
and
lds
add
test
das
aam
loopne
fidivs
dec
mov
jb
and
xchg
outsl
ds
cmp
dec
sub
sarb
pop
lods
jge
add
loopne
shrl
in
imul
dec
xor
lahf
inc
mov
adc
adc
insb
xorl
stos
imul
mov
or
out
in
push
shl
inc
inc
shll
fld1
jo
call
clc
movsb
cmp
icebp
mov
jecxz
loope
xchg
pusha
inc
jb
popa
mov
jne
lods
pop
lock
mov
adc
or
insl
xor
aas
inc
inc
aam
fisubrl
clc
pop
in
jmp
sub
rolb
das
lock
sub
jmp
pop
mov
inc
pushf
dec
jl
sti
inc
jno
cld
int3
jecxz
pop
pop
and
and
sub
push
mov
and
inc
div
es
jp
cltd
xchg
addb
lahf
or
je
outsb
sbb
mov
into
fadd
fprem
lds
movsl
add
mov
or
and
inc
sbb
into
mov
ret
arpl
or
sbb
repz
mov
jb
divb
aaa
fiaddl
jno
aaa
inc
mov
inc
push
jp
mov
lcall
mov
xor
inc
add
add
mov
add
in
ret
inc
cmpsl
out
mov
xor
push
push
lea
push
pop
int3
loopne
mov
test
pop
or
mov
push
push
decl
sbb
sbb
int3
xchg
cld
jno
cmpsb
mov
stos
push
or
lret
cmp
sub
in
fsubr
adc
push
nop
mov
mov
or
xor
or
push
and
movsl
xor
adc
mov
or
insl
pop
iretw
or
inc
fistpll
cmp
mov
dec
lds
xchg
mov
cmp
sub
fistps
mov
jmp
sbb
jae
bound
repnz
int
ljmp
imul
arpl
inc
das
cld
jecxz
lcall
inc
sti
xor
scas
jnp
xor
and
ljmp
pop
scas
lahf
cmpsl
lret
loopne
rol
pop
inc
mov
out
add
aam
daa
test
icebp
cli
cltd
xchg
insl
iret
hlt
aas
fs
stos
mov
ljmp
pop
imul
inc
cmp
inc
stos
cmpsl
inc
out
inc
fcomp
mov
ret
jmp
loope
not
mov
ret
pop
aaa
cmp
adc
sbb
push
aam
or
add
jecxz
and
sbb
lahf
lods
js
shlb
mov
or
repnz
add
jb
pusha
aad
stc
iret
xor
and
sbbb
cmp
pop
mov
rol
scas
mov
jl
mov
or
rclb
clc
pop
sti
loop
xchg
jp
mov
lds
jg
or
nop
push
mov
xchg
sub
repnz
sbb
lcall
mov
icebp
xchg
sub
bound
mov
and
mov
sub
aad
sub
mov
or
cmp
pop
inc
daa
xor
inc
xchg
rol
gs
ret
sbb
sahf
fstpl
in
scas
add
mov
loop
sub
add
dec
mov
inc
pop
xor
int3
inc
les
xorb
jp
iret
lahf
and
xchg
push
lds
arpl
push
lret
push
scas
pop
jmp
imul
out
addr16
cmp
movsb
and
or
mov
test
add
add
push
sbb
aas
fldt
cs
push
sbb
or
call
xor
jns
inc
fwait
pop
pop
xchg
pop
mov
cmpsl
hlt
stc
xchg
int
pop
mov
xor
cmc
dec
movsb
push
pushf
mov
repnz
data16
pop
cmp
cwtl
fwait
aas
clc
cmp
scas
xchg
mov
push
mov
imul
xchg
cmp
ret
mov
scas
scas
add
pusha
mov
fidivs
push
cmpsl
test
inc
push
imul
jns
scas
mov
pop
mov
movsb
addr16
mov
test
sar
push
cmc
dec
inc
mov
or
lds
jb
dec
or
ds
push
mov
aaa
add
aas
jnp
frstor
cmp
sti
fiadds
mul
mov
insb
cmp
mov
out
sbb
xlat
mov
shrl
mov
lahf
pushf
xchg
lds
popa
shll
push
cltd
xchg
cmp
stos
lods
mov
int3
or
adc
xchg
xchg
andl
dec
aad
insb
fists
push
ret
subl
push
xorl
cmp
cld
push
mov
es
mov
xor
dec
cmp
inc
push
mov
adc
mov
test
or
ret
and
mov
out
pop
rcrb
cld
sahf
or
icebp
int3
add
xchg
inc
xor
cwtl
lahf
fs
cmp
and
js
rolb
in
push
cmp
pushf
lods
test
mov
addr16
and
mov
xchg
out
xchg
lret
out
test
outsb
shll
push
mov
xor
xor
mov
in
xlat
lahf
mov
xor
popf
push
and
int
inc
add
dec
xchg
sbb
test
cmp
mov
dec
cli
flds
mov
dec
push
pop
dec
cmp
das
or
lcall
ret
out
adc
insl
jns
lods
push
mov
lds
jno
test
out
or
mov
mov
jae
mov
mov
enter
pop
outsl
mov
addr16
popf
cli
inc
shrb
imul
or
aas
adc
cs
scas
fidivrl
sbb
jnp
mov
pusha
in
enter
and
mov
cld
loop
ja
mov
icebp
orb
nop
and
sbbb
nop
das
aad
xchg
setbe
xchg
mov
cmp
sub
mov
mov
push
mov
insb
lret
adc
pop
lea
inc
pop
pusha
in
xor
xchg
sub
jb
mov
sub
test
mov
in
add
pop
ret
pop
pop
mov
icebp
loope
insb
aad
ret
rol
pop
dec
push
add
lahf
mov
cmc
test
ret
hlt
mov
clc
hlt
adc
testl
test
fidivs
hlt
imul
jns
xchg
dec
sub
in
jg
aam
add
pop
stc
mov
xchg
mov
sbb
inc
sub
es
inc
sbb
jne
lcall
jmp
add
in
rorb
jle
imul
icebp
pop
std
arpl
mov
fildl
mov
in
jle
dec
xchg
fldenv
test
roll
mov
rcrl
xor
pushl
xlat
or
xor
jnp
into
out
inc
or
xor
stc
stos
lods
xlat
leave
jecxz
fcompl
add
es
rcl
int3
pop
cwtl
jo
lahf
and
lret
scas
push
add
push
stos
sub
int3
lods
sub
lods
pop
mov
jne
jb
adc
jbe
or
std
fst
out
xchg
lea
icebp
repz
dec
out
cmpsl
leave
xchg
dec
pop
inc
jno
in
push
sahf
pop
sub
popa
cmp
push
ss
testb
jnp
fmuls
or
mov
sbb
mov
inc
mov
aaa
xchg
std
xchg
or
into
mov
fimuls
into
test
xlat
sarl
pop
imul
in
int3
daa
call
or
cwtl
roll
imul
rcr
push
or
in
or
inc
or
xor
add
push
gs
stos
in
add
cmp
mov
or
add
push
lret
lret
lods
xor
or
xor
les
inc
add
add
jmp
in
stc
negb
pop
aas
scas
hlt
cs
mov
fdivrs
mov
mov
mov
out
fcoms
sahf
stos
mov
jmp
pop
orl
mov
ss
imul
inc
xor
xor
cs
daa
inc
popf
jb
push
mov
mov
ror
clc
mov
int3
mov
pop
mov
xor
imul
aaa
or
ret
into
repz
cld
jmp
xchg
cmc
test
iret
inc
jle
jo
fldcw
push
push
shll
aaa
mov
adc
stos
pop
push
dec
and
jg
sbbb
push
xchg
test
loopne
xchg
enter
or
push
ret
add
fsts
mov
aam
js
xchg
jno
inc
push
dec
lahf
jb
mov
nop
jnp
stos
xchg
xlat
sub
push
mov
add
sbb
pop
ss
lcall
out
mov
xor
in
pop
pushf
gs
stos
in
mov
cli
cmp
loopne
mov
rorl
in
pop
mov
push
stos
orl
das
lods
sbb
sbb
repz
les
pop
dec
ret
and
out
cmp
movsl
lcall
lret
icebp
or
dec
or
xchg
sarb
inc
loope
sub
testl
xlat
jbe
nop
mov
lcall
scas
jp
rolb
jle
mov
sub
sub
pop
ret
fdiv
or
loope
sbb
jecxz
gs
or
mov
cwtl
aad
push
mov
mov
lea
fsubl
pop
out
adc
das
cwtl
and
pop
cs
adc
fcomip
push
aas
mov
rcr
stc
xchg
orb
mov
scas
sub
pop
mov
xor
xchg
lahf
test
xor
adc
sub
aam
nop
repz
push
andl
pop
dec
mov
xor
mov
mov
cli
je
jg
fwait
and
iret
jmp
movsl
mul
stos
out
pop
inc
lock
add
es
js
fisttpll
out
mov
mov
push
mov
cld
jne
adc
mov
pop
leave
icebp
xchg
xchg
sarb
ja
lret
sbb
adc
mov
jmp
jmp
adc
lcall
push
sub
xchg
mov
cmp
jnp
sub
enter
xor
mov
bound
dec
jbe
push
mov
sbb
jno
mov
jl
outsl
clc
roll
push
lcall
cltd
repz
adc
rolb
mov
and
mov
pop
stos
sarl
repnz
aad
jns
ret
mov
pop
ja
inc
arpl
cltd
adc
shlb
rorb
test
pop
xorl
mov
and
pushf
inc
and
push
loop
cwtl
sbb
cli
xor
xor
sub
aas
cmp
sub
out
push
aas
fidivs
cld
cli
jge
adc
adc
dec
orb
push
leave
push
xchg
cmpb
stc
xchg
je
aam
addr16
xchg
sbb
xchg
inc
jb
jg
movsb
in
xchg
mov
sub
popa
ds
stc
addl
pinsrw
rorl
fst
push
sbb
jmp
out
jae
mov
inc
push
adc
in
into
mov
cwtl
xchg
inc
push
mov
mov
or
repnz
loope
adc
sbb
xor
mov
fists
es
mov
stos
cld
mov
xor
fimull
scas
cmpsb
add
push
inc
mov
pop
test
cmp
mov
xlat
test
xchg
adc
stos
call
sbb
xor
ficomps
jge
rcrb
lahf
loop
push
sub
mov
sbb
mov
inc
sbb
mov
adc
xchg
lcall
or
push
jle
test
addl
xchg
add
cli
pusha
mov
pushf
pop
loope
sbbl
xchg
pop
lods
imul
aam
clc
or
jecxz
cmp
fildll
bound
sub
cmp
inc
and
mov
shrb
or
add
jb
je
pop
cmp
push
cltd
in
shlb
enter
arpl
or
mov
jge
nop
inc
and
mov
pop
mov
inc
cmpsb
adc
jne
xchg
out
dec
or
push
imul
lods
lret
push
sbb
mov
xchg
push
movsl
sbb
adc
loope
dec
jp
sarl
stc
sbbl
pop
add
lds
into
jne
or
fcoms
ret
bswap
sub
cmc
inc
inc
ret
or
outsl
out
pushf
adc
cmpb
dec
push
and
xchg
cmp
movsb
dec
clc
push
daa
xor
mov
adc
ds
sbb
js
out
lods
push
addr16
fmul
std
leave
sahf
scas
leave
hlt
mov
mov
loope
dec
sub
cmp
repnz
imul
ja
ret
push
loop
outsb
inc
cmp
dec
cltd
mov
sub
je
add
or
repnz
jo
sbb
in
int3
rol
mov
sub
ret
aad
sub
daa
jns
or
dec
cmp
or
ret
lea
aas
popf
cmpsb
or
adc
lahf
lods
cltd
push
xor
mov
add
test
mov
pop
fstp
int
iret
dec
aam
popa
mov
in
jne
xor
in
movsb
jmp
adc
imul
bound
cmp
inc
ss
lods
sub
imul
adc
jmp
dec
fsubs
movsl
mov
add
lret
out
mov
movsb
divb
cmp
mov
mov
inc
adc
and
mov
jl
imul
lea
std
mov
mov
pop
aam
outsl
or
push
push
sbb
jge
rol
or
push
mov
lock
mov
or
lods
cwtl
jecxz
lahf
and
std
rcrl
aas
mov
push
mov
dec
outsl
or
ret
ja
pop
dec
movsb
fimuls
lret
xchg
push
testb
insb
sbb
insl
add
or
rolb
cmp
jbe
pop
popa
faddp
stc
push
lods
mov
and
rcl
mov
inc
or
sarb
repnz
jae
sub
xlat
jp
ljmp
ljmp
push
loope
rolb
jo
mov
sbb
mov
cli
mov
ljmp
add
push
jo
mov
pop
aam
xchg
fs
jmp
scas
inc
adc
pop
arpl
rcrb
nop
or
daa
pop
push
pusha
or
ds
test
outsb
cltd
ljmp
jbe
outsb
aaa
ja
cmpsb
gs
dec
bound
jl
xor
inc
in
lahf
les
lcall
js
arpl
and
xchg
push
fbstp
mov
mov
loop
jle
sbb
mov
inc
dec
and
mov
sbb
and
adc
rorl
push
nop
and
scas
aas
stos
and
dec
rcl
add
cmp
clc
lret
cmp
into
or
pop
jp
mov
scas
sbbb
xchg
pop
fistl
jo
popa
fisubrs
sahf
mov
cmp
sub
popa
cmp
pop
inc
aad
dec
es
jle
inc
shrb
inc
cld
adc
xor
ror
xchg
js
pop
icebp
std
and
adc
sub
nop
loopne
movsl
imulb
mov
in
mov
cmp
aaa
iret
jp
dec
cli
lds
jbe
mov
sbb
or
hlt
stos
mov
sbb
xor
pusha
sbb
test
pop
mov
inc
sub
jne
sti
jl
mov
out
jecxz
add
or
xor
add
fwait
sbb
lods
cltd
popf
lock
pop
or
lahf
in
inc
adc
lcall
xchg
sub
pop
sub
push
jp
fucomi
add
pop
movsb
in
jnp
cmc
xor
out
sbb
push
aas
das
or
cmpsl
sarb
jp
outsb
xchg
aas
dec
push
aad
sarl
dec
pushf
dec
out
mov
xchg
aad
add
int3
sbb
push
cld
push
aam
pop
clc
adc
lcall
and
mov
xchg
loope
pushf
and
fistpl
iret
cwtl
out
mov
fisubrs
add
rcrb
or
mov
loopne
fldenv
push
or
enter
mov
loop
jne
leave
push
mov
xor
inc
mov
push
xor
add
cli
test
mov
mov
adcb
ret
cmp
ret
mov
jmp
mov
push
sbb
cmp
and
jg
pusha
inc
mov
push
movsb
mov
ja
adc
mov
sub
jmp
adc
lahf
aam
add
sub
sub
mov
push
xor
mov
aam
pushf
cmpsb
jle
les
scas
out
in
jae
adc
stos
int
push
out
jg
enter
insb
in
test
inc
sub
daa
mov
ret
in
lods
aad
inc
sub
je
sahf
arpl
ror
and
push
pop
lcall
daa
lcall
loope
in
xor
testl
loop
or
lds
jmp
xchg
out
gs
or
loopne
sbb
mov
sub
cmpsb
xor
xchg
sbb
adc
pop
lcall
push
sub
pop
sub
out
stos
lret
aaa
stos
fldl
cli
addb
mov
inc
adc
in
shr
push
mov
jecxz
test
push
lock
mov
scas
sahf
arpl
jae
repnz
test
loop
imul
orb
push
stos
push
mov
mov
cmp
imul
shld
or
ret
iret
mov
jp
sub
es
pop
mov
insb
xor
cltd
cmpsb
shrb
out
add
pop
cmp
loopne
inc
inc
push
mov
cltd
call
lret
and
add
stos
in
mov
jg
fidivs
arpl
fistl
jno
or
fimuls
add
inc
xchg
sub
out
inc
xchg
pop
jb
push
repz
test
adc
dec
add
lea
mov
sub
push
sub
rcr
lea
mov
cmp
add
or
fsubrl
xor
outsb
xchg
mov
pop
icebp
adc
cmp
js
popa
xchg
push
sub
in
push
call
mov
lock
push
add
or
cmp
pop
fwait
insb
lock
jg
dec
out
and
test
and
lock
mov
cmp
mov
xor
fimull
ds
and
lods
cmc
mov
inc
pushf
mov
cwtl
movswl
and
std
out
push
mov
push
mov
out
push
xor
jno
addl
orl
hlt
cmpsb
push
dec
xchg
add
pop
aas
cmp
inc
mov
adc
xchg
aaa
mov
outsb
ss
jns
jne
in
mov
push
adc
push
sbb
mov
es
sbb
dec
fucomi
xchg
mov
add
lret
or
or
jge
adc
mov
adc
clc
js
rclb
mov
mov
sbb
push
push
and
cmp
jp
jae
cmp
inc
out
cltd
pop
test
dec
std
das
mov
daa
rolb
test
inc
add
aas
icebp
bound
in
enter
repz
icebp
lret
aas
dec
jbe
xchg
imul
aaa
push
mov
inc
jge
cmp
hlt
int3
xor
lret
enter
ret
xor
sub
mov
std
arpl
cmp
jmp
push
fcomp
inc
outsl
mov
inc
mov
scas
pop
mov
sub
sub
pop
push
cmpsl
dec
sbb
aas
dec
mov
les
rcll
inc
dec
pop
xchg
pop
push
test
mov
inc
sbb
cmp
and
mov
jo
or
add
out
xchg
inc
or
jl
fadds
bound
int3
idivl
jbe
mov
xchg
cmp
or
ja
push
mov
daa
xchg
mov
add
push
jl
aam
test
push
out
jbe
push
cmpsb
adc
push
xchg
xchg
and
idiv
lcall
cwtl
jbe
push
lock
dec
push
mov
pusha
mov
and
andl
or
fisubs
cmpsl
stos
lcall
cltd
xchg
fdivrp
jle
dec
in
add
adc
and
cli
fcompl
movb
xchg
xor
loopne
imul
ret
xchg
es
test
mov
pop
outsl
stc
push
cmp
mov
sub
jno
ds
rol
inc
rcrb
addr16
jmp
push
pop
ja
and
and
jle
jmp
fistpll
aaa
sub
sub
cld
xor
in
xor
popa
icebp
mov
fsubrl
ror
in
sub
pushf
xchg
xchg
jmp
xchg
ret
aam
jns
push
sbb
push
aad
lcall
push
ljmp
lret
adc
xor
or
cwtl
jne
jae
ds
jo
mov
jp
hlt
inc
sub
mov
jmp
add
enter
fs
xor
or
pop
ret
xchg
or
mov
nop
aaa
aaa
adc
mov
loope
hlt
inc
mov
push
mov
cli
outsb
stos
scas
popa
lods
jmp
cmp
xchg
adc
pop
rcrl
mov
mov
inc
cmp
test
fisubs
in
gs
and
dec
mov
sub
repnz
or
scas
sub
or
mov
sbb
xlat
dec
xor
lahf
data16
fnsave
ss
daa
dec
jns
out
fsubs
xchg
out
enter
ret
test
dec
rorb
test
mov
pop
dec
hlt
ljmp
mov
mov
sbb
das
sahf
dec
adc
and
sbb
push
sub
sbb
shll
dec
imul
push
adc
movsl
push
test
mov
shl
aaa
aad
mov
xchg
cmp
test
pusha
mov
add
cli
push
add
adc
sub
dec
js
call
jg
cmp
ret
push
ss
pusha
data16
adc
int
lods
jecxz
fcoml
jnp
push
and
sub
hlt
int
cmp
stos
mov
shrb
mov
clc
ljmp
mov
movsl
pop
mov
mov
lock
or
jb
cmp
push
push
jp
out
mov
test
lcall
nop
mov
fs
inc
inc
and
xchg
enter
mov
xor
outsl
ja
andb
jecxz
int
test
out
out
push
push
test
in
xchg
imul
out
lret
lcall
cld
sbb
jb
test
xchg
repz
mov
lret
fdivl
adc
ja
sub
movzwl
or
dec
negb
push
and
iret
cmc
dec
mov
jo
pop
popa
adc
lea
rcr
mov
mov
xor
sbb
int
adc
fstps
jl
int
mov
sub
push
xchg
jb
lods
into
scas
in
jo
jmp
xchg
adc
inc
mov
testl
into
mov
jo
mov
ja
test
movsl
pop
mov
negb
stc
fisttpl
and
rolb
mov
xchg
lcall
mov
sub
lret
int
ja
mov
out
push
aaa
pusha
stc
or
outsb
jbe
mov
aas
aad
jle
shrb
and
xchg
xor
test
outsl
hlt
mov
cltd
mov
enter
sub
or
popf
into
cmp
in
fistl
js
and
inc
fidivrl
adc
fs
shrb
fistpl
push
mov
nop
or
add
stc
addl
gs
mov
inc
fdivrl
enter
mov
into
iret
sbb
movsb
mov
add
ret
rclb
and
dec
xchg
mov
cs
addr16
ds
xor
into
insb
xchg
jnp
ret
imul
adc
xchg
and
dec
addb
ds
pusha
ljmp
clc
jp
and
inc
mov
add
mov
mov
sarl
shlb
negb
ret
dec
lods
adc
pop
inc
push
dec
imul
or
cld
xor
and
inc
adc
push
roll
sub
lret
jmp
movsb
in
in
jb
sbb
sub
jl
and
mov
push
fldt
ljmp
add
or
hlt
inc
adc
push
cwtl
or
mov
sub
mov
nop
pop
add
psubsw
inc
sbb
les
dec
je
mov
inc
addr16
enter
or
outsb
lods
std
fs
dec
iret
out
xchg
add
faddl
cmp
dec
add
and
mov
mov
rclb
les
sub
addr16
mov
and
ds
xchg
jle
lahf
dec
das
and
pop
or
jb
stos
cli
add
sbb
mov
out
inc
lock
push
scas
rcll
shlb
ds
or
mov
mov
sub
inc
mov
push
cltd
add
enter
out
xchg
aad
ja
movsl
imul
jns
aas
rcr
sbb
xlat
sar
cmp
adc
loope
addr16
call
icebp
and
jle
dec
loopne
mov
out
jo
dec
sbb
jbe
sarb
shrb
iret
inc
cli
stos
stos
pop
cmc
xchg
xor
mov
sbb
test
daa
push
mov
dec
stos
lock
inc
push
add
pop
fidivrl
dec
jp
push
sbb
push
ja
ljmp
mov
mov
sbb
aam
fnstenv
test
ljmp
jae
inc
jp
xchg
cmp
mov
mov
rorl
xchg
jno
cld
popf
outsl
aam
cltd
adc
add
push
mov
inc
jnp
xchg
and
inc
int
lcall
fbstp
fs
fstpl
xchg
dec
jo
jne
xchg
fsubr
fcomps
nop
sub
popa
in
test
sahf
es
inc
push
repz
sub
mov
jl
ficomps
sahf
testl
pop
hlt
fbstp
paddb
or
dec
imul
push
or
mov
movq
xor
data16
loopne
jge
xchg
jne
loopne
lret
xchg
pop
sub
jae
jmp
subl
dec
pushf
xchg
lcall
mov
xor
mov
scas
mov
cmc
push
test
xor
pushf
jp
imul
arpl
xchg
adc
mov
mov
out
ret
das
pop
mov
cmp
mov
push
xor
pop
lds
lret
testl
mov
push
int3
ljmp
xor
pop
addr16
arpl
les
inc
jnp
roll
bound
sub
adc
stos
inc
scas
or
mov
adc
cmc
stc
inc
fisubl
pop
fistl
lahf
in
ret
xor
push
out
cld
outsl
sub
jmp
outsb
add
dec
xor
or
mov
std
xchg
xlat
xor
jmp
arpl
arpl
cli
sub
xor
mov
repnz
adc
ljmp
scas
mov
jb
rol
mov
jnp
fists
jb
adc
aad
push
xchg
out
in
shlb
push
das
push
jmp
inc
cmp
test
ffreep
or
es
sbb
cmp
push
rorb
sbb
fcomip
out
cmpsb
dec
lahf
dec
jb
rcl
jg
cmpsl
add
mov
xchg
push
dec
into
jle
out
std
xor
push
sbb
outsb
ret
jecxz
dec
push
xchg
imulb
fimull
roll
enter
shlb
dec
or
inc
rcl
xor
shlb
adc
aas
data16
dec
aam
jmp
push
out
add
addr16
push
int3
mov
xor
jge
into
mulb
insl
repnz
in
rcrb
xchg
xor
xor
fstpl
xchg
stos
bound
push
push
push
and
dec
shll
test
pop
sahf
pushf
fdiv
out
and
adc
mov
mov
jno
push
push
test
dec
lret
add
hlt
insb
sbb
xchg
popf
push
dec
inc
and
push
mov
call
insl
sbb
cmp
jle
mov
mov
js
pop
jnp
or
pop
mov
aam
push
and
mov
negl
aad
pop
adc
orb
cmp
mov
cld
sbb
cmp
xlat
or
insl
stos
dec
and
bound
push
lret
xor
jb
add
mov
leave
mov
pop
xor
pop
add
rcll
mov
sti
or
cmpsb
out
jle
jp
jp
mov
int3
sub
dec
ror
lds
aam
add
scas
or
xor
inc
jl
nop
mov
fisttpl
out
js
gs
cmpsb
stc
test
sti
xchg
cltd
cmc
mov
and
aad
xchg
test
jnp
lahf
add
aad
and
dec
sub
cmpsb
dec
push
dec
pop
popf
cs
jg
dec
dec
pop
push
loop
test
cld
push
cld
jg
adc
mov
inc
dec
jle
repnz
mov
jne
popa
in
lods
arpl
sub
sbbb
mov
dec
push
loopne
push
mov
jno
lea
ss
icebp
sbbb
mov
push
jbe
repz
incl
fxch
sbb
push
xor
loop
and
aam
jno
popf
xor
sub
mov
jmp
inc
call
sbb
sbb
mov
in
push
and
lcall
jge
fnstenv
cmc
add
out
or
scas
shrl
shlb
xor
jne
pusha
cli
out
movsl
dec
lret
in
push
out
cmp
mov
scas
ret
mov
mov
call
loopne
fdivs
scas
jmp
xor
add
mov
pop
shll
and
dec
sub
lcall
mov
push
jmp
pop
jno
and
sbb
sub
add
or
pop
out
sub
shll
xor
cwtl
lock
jb
mov
mov
pop
aam
adc
aam
push
dec
pop
imul
stos
mov
dec
imul
test
mov
push
sbb
mov
pop
ds
imul
xor
dec
mov
sub
imul
mov
gs
in
adc
call
push
push
aaa
add
xorb
loopne
adc
jl
lahf
inc
jecxz
sarb
jae
jo
xor
sub
jns
mov
mov
jns
xchg
out
in
jnp
pop
jb
int3
insb
sub
adc
ljmp
rcrb
push
loopne
push
adc
jno
pop
ja
test
stos
ja
mov
pop
add
sbb
call
fbld
imul
and
pop
cmp
sbb
mov
pop
insb
aaa
xchg
jns
out
push
jp
in
and
mov
jbe
pop
dec
mov
stos
xchg
jb
fs
dec
sbb
mov
push
nop
dec
outsl
mov
popf
or
sbb
mov
ljmp
mov
insl
mov
int
movsb
pop
ja
push
testb
sbb
popa
aaa
int
dec
shlb
cld
out
fadds
mov
outsl
xchg
dec
jb
cmc
js
add
sbb
xor
mov
xchg
adc
shll
sbb
cmp
push
jmp
rcll
mov
cmp
add
lods
je
lcall
aas
or
jne
pushf
add
or
mov
mov
arpl
and
or
adc
addr16
or
iret
xchg
add
adc
push
jb
fs
xor
int3
addr16
out
adc
xorl
push
mov
pop
fisubrs
shrb
inc
cs
xor
xor
cs
shlb
adc
mov
jbe
inc
xchg
stos
fsub
in
xor
lcall
mov
sub
sub
cwtd
or
ja
cmp
sbb
in
cmp
aam
rcll
dec
icebp
data16
mov
mov
ja
xchg
lret
lahf
fwait
cmp
stc
leave
push
data16
pop
ja
ja
lret
pop
scas
pop
and
je
adc
fs
mov
fldcw
lods
ret
add
sbb
jecxz
fcoms
dec
lods
mov
cld
popa
bound
jno
test
rorl
push
test
inc
push
in
push
gs
jnp
pop
mov
xor
insb
adc
loope
xchg
sarb
repz
repz
mulb
es
dec
cmp
dec
leave
lods
les
out
jne
arpl
mov
jbe,pn
dec
jno
out
ds
cmp
ret
jmp
add
stos
cwtl
xchg
out
sti
cli
out
out
or
sub
insl
fnstcw
xchg
int
or
mov
add
inc
and
mov
mov
adc
push
test
or
mov
pop
ss
cmpsb
icebp
mov
push
insl
xchg
push
fdivrp
xor
adc
or
mov
mov
dec
arpl
mov
out
pushw
dec
jo
test
dec
and
jge
std
sbb
insb
in
lds
ds
push
xor
push
orps
mov
cmp
aad
test
in
sub
dec
gs
add
cmp
mov
mov
mov
subb
loopne
adc
push
sbbb
lds
jp
je
mov
push
cmp
pop
pop
mov
sub
in
jmp
sub
gs
leave
lret
imul
stc
je
push
jbe
sub
xchg
xor
jb
sbb
mov
and
aad
dec
pop
xchg
xchg
insl
mov
mov
sbb
mov
mov
adc
leave
xor
fnstenv
in
or
xchg
mov
movsb
cli
test
jb
sbb
ljmp
js
lds
es
jecxz
lret
aaa
lock
incl
fiaddl
mov
inc
jmp
imul
fisubrs
push
push
and
pushf
insl
push
xchg
cmpsl
sub
sub
lahf
popf
popf
mov
jbe
inc
sub
mov
pop
lock
xchg
shll
mov
mov
mov
mov
xor
cmpsl
clc
out
add
mulb
jb
dec
sub
push
lcall
mov
jp
sbb
inc
sub
mov
cld
push
lock
enter
shlb
cli
jbe
mov
cli
xchg
inc
stos
jnp
test
dec
popa
mov
dec
mov
and
xchg
push
mov
pop
pop
scas
pop
inc
sub
clc
test
nop
adc
hlt
adc
xlat
cli
xchg
lahf
dec
cmp
xor
leave
jmp
push
jbe
cmpb
mov
jb
ret
mov
mov
out
dec
and
sub
push
movsb
rdtsc
leave
in
adc
loopne
mov
inc
ja
arpl
nop
stos
ljmp
bound
in
shll
mov
push
in
jl
jno
test
les
mov
dec
pop
push
pop
add
daa
lret
gs
movl
clc
daa
sbbl
test
int
pop
sar
lds
loope
xor
fisttpll
scas
sub
add
popf
jl
int
cmp
pop
push
popa
out
and
aam
pcmpgtd
push
mov
inc
push
push
cmp
daa
enter
rcll
mov
adc
push
mov
sub
stc
xchg
push
cmp
mov
xor
ret
gs
push
shrl
lds
js
aad
dec
hlt
adc
lret
out
lret
inc
xchg
outsb
ds
mov
insw
mov
arpl
fsubr
xchg
jmp
sbb
seta
add
lcall
enter
outsb
int3
imul
sarb
mov
jno
out
push
shlb
xor
call
mov
cmpb
nop
sub
dec
inc
lock
push
jle
inc
adc
test
cwtl
jbe
ja
aas
inc
push
xchg
test
sbb
andl
mov
lock
cmovge
lds
es
jns
push
pusha
out
mov
sub
push
sub
scas
aam
ficoml
or
pop
cmp
rorl
jne
popa
or
or
mov
mov
mov
shlb
popa
daa
ror
fsubrl
cmp
rolb
add
imul
decl
stos
jae
fcomi
movsl
aam
cld
jg
mov
push
ret
or
lock
out
cmpb
mov
mov
or
js
mov
sub
mov
bound
sbb
and
cmp
jmp
loopne
jecxz
mov
sbb
push
push
fldl
shr
fsts
fs
dec
out
test
and
test
jg
in
sarl
mov
pop
pop
fcoml
js
jmp
add
decb
negl
or
pop
push
gs
mov
imul
out
pop
cmp
jl
stos
pop
outsb
push
inc
adc
mov
mov
ja
push
dec
ret
inc
cmpsb
mov
mov
movsl
mov
push
inc
mov
xor
cmpsl
bound
mov
cmp
out
test
adc
mov
push
lret
pop
adc
imulb
push
mov
cltd
jp
imul
stc
dec
lret
pop
daa
jno
lret
mov
ljmp
jns
dec
shrb
imul
jp
adc
push
xlat
add
sar
daa
mov
mov
dec
push
cld
push
mov
add
lahf
lods
push
sti
cltd
out
dec
loop
sbb
xor
or
mov
fisttpl
or
inc
cmc
loope
xor
loop
xchg
cmp
imul
dec
pop
mov
mov
loopne
push
subb
sub
mov
mov
jnp
cmc
adc
push
sub
or
fsubrs
ret
mov
cmp
sbb
in
outsb
mov
shr
test
fwait
jp
aas
mov
or
or
scas
divl
rorl
jbe
jno
stc
shll
xorb
xchg
dec
or
pop
adc
sub
mov
out
sahf
stos
mov
or
mov
into
nop
push
sahf
cmp
add
fwait
add
test
mov
iret
push
sahf
adc
push
mov
sbb
or
aas
cmp
je
pop
addr16
adc
or
pushf
or
jmp
cmp
push
jp
mov
sbbb
icebp
insl
pushf
mov
jl
lock
mov
mov
lock
jle
stos
add
movb
fcompl
cmpsb
inc
inc
jp
pop
jno
insw
pop
int
ret
mov
arpl
test
push
xor
sub
xchg
daa
sbb
int3
movsl
movl
sub
test
mov
lds
xor
fcomip
scas
call
cwtl
xor
into
xchg
mov
inc
mov
jb
imul
push
out
sahf
mov
mov
mov
repz
out
nop
push
cs
in
mov
inc
inc
sbb
out
test
mov
sub
aas
cld
push
addl
arpl
cmp
stos
and
or
cli
insb
pushl
cmpsl
andb
cmp
ljmp
imul
das
test
outsl
push
fisttps
dec
xor
push
rcrb
hlt
xor
mov
dec
fs
mov
stos
ror
loop
mov
out
mov
push
mov
mov
movb
dec
cmp
mov
push
sbb
push
cmp
xor
xchg
cld
jle
in
daa
fdivrl
mov
dec
jmp
movsb
mov
add
jle
ret
sbb
mov
cltd
notl
jmp
je
lock
or
bound
movsb
fists
movsb
sub
mov
lcall
push
mov
xor
mov
inc
dec
adc
int
push
fildll
mov
rcrb
repnz
cltd
mov
arpl
repnz
xchg
sbb
inc
int
add
fsubrs
sarb
and
xchg
mov
push
adc
icebp
ss
in
insb
mov
mov
dec
mov
mov
ret
ret
incl
rorb
sbb
or
ret
clc
cmpsb
pop
iret
mov
enter
repnz
arpl
cmp
adc
lods
gs
mov
and
xchg
push
xchg
inc
cli
pop
xchg
jnp
rcll
cmp
sarb
out
insb
out
inc
in
push
ja
xchg
add
pop
fldt
out
add
pop
dec
imul
sub
mov
mov
cmp
cmc
shlb
dec
imul
sbb
mov
cmp
nop
mov
adc
orb
push
dec
stos
mov
dec
or
xchg
stc
loope
add
inc
jecxz
ror
pushf
sub
insl
xor
jl
pop
rolb
cld
pushf
mov
sti
addr16
add
in
mov
test
jge
cld
aam
dec
jnp
inc
xchg
int
in
aam
clc
lahf
repnz
and
xchg
push
rcll
fisttpl
xor
mov
xchg
test
inc
push
sub
add
mov
stos
inc
push
and
scas
push
das
sarb
loope
xchg
adc
sub
mov
in
push
pop
sub
add
movsl
aad
mov
in
fcomip
into
mov
lds
xchg
jg
and
cmp
mov
mov
mov
mov
movsb
fcoms
mov
aas
xchg
sahf
jae
shl
xchg
movsl
or
cmp
rcll
cmp
addb
fs
fs
adc
and
adc
pop
and
mov
xor
movsl
imul
inc
jo
fnsave
dec
lock
sub
and
xor
cmpsb
mov
icebp
adc
mov
sub
lea
push
in
dec
add
loopne
push
push
test
aas
hlt
loop
out
fs
sbb
leave
shrb
push
je
out
inc
imul
and
add
mov
sbbl
push
repz
imul
jno
jne
sbbl
mov
jbe
and
jmp
test
lods
and
fnstsw
in
fildll
jg
arpl
lahf
jb
push
push
jns
sahf
cwtl
cltd
aam
mov
out
imul
imul
sub
sub
inc
pusha
xchg
dec
inc
xor
or
inc
cli
rorl
insb
inc
divb
ljmp
xchg
inc
mov
xor
xchg
xchg
imul
xor
in
dec
loop
sarl
mov
mov
movl
xchg
and
jbe
dec
xor
icebp
test
into
adc
cmp
push
fdiv
stos
jl
sbb
inc
gs
sti
pop
mov
pop
out
flds
shrb
shlb
or
push
push
cli
mov
push
push
xchg
cld
add
stc
dec
repnz
mov
inc
and
leave
loope
fs
cmp
fsub
add
and
mov
push
lock
cmp
inc
add
xchg
jns
out
dec
jle
pusha
push
add
loop
int3
mov
ljmp
and
cmp
out
aas
rorb
lcall
int3
mov
sar
clc
pushf
add
jno
and
pushf
popf
lret
icebp
mov
idiv
xchg
scas
xchg
rcrl
pop
xchg
xchg
and
out
inc
cmp
cmp
push
repz
sub
mov
pusha
sub
jge
push
adc
dec
mov
mov
enter
sarb
stos
cmp
arpl
xor
or
cmp
add
inc
mov
sahf
mov
xlat
add
fsubs
cmp
into
fimull
repnz
cmc
and
push
ja,pn
loopne
jb
cmp
gs
mov
arpl
sub
push
popa
dec
hlt
pop
ficompl
cmpsb
xchg
out
lret
pop
sub
mov
jge
push
iret
lock
pusha
popl
sbb
aad
and
or
sub
add
xchg
fcmovbe
sub
iret
std
jmp
sub
out
mov
es
and
and
int
daa
mov
imul
mov
aaa
sub
pop
lret
cmpsb
or
add
jne
inc
cwtl
lret
loop
lret
dec
adc
imul
into
pop
inc
mov
iret
sbb
mov
xlat
ret
rorl
das
data16
sbb
add
sbb
lret
mov
push
mov
pusha
fsubr
lock
inc
add
fst
xchg
push
movsl
mov
pop
sub
dec
sub
xlat
lods
inc
shlb
mov
in
jl
add
dec
inc
and
xor
dec
push
dec
decb
andl
mov
sub
lods
xchg
iret
sbb
fmuls
xor
pop
cmc
dec
movsb
push
repz
lahf
sub
add
and
ljmp
sub
pop
push
push
pop
orl
jns
push
inc
add
stos
xchg
sub
std
mov
xorb
fs
adc
nop
cmp
pop
sub
push
ljmp
das
inc
inc
mov
push
jp
push
shll
cwtl
daa
je
pop
test
dec
add
in
sti
lcall
aam
jg
or
jb
arpl
xor
push
push
sti
ljmp
adc
loope
xchg
cltd
cli
inc
jg
ret
icebp
enter
inc
in
jmp
bound
in
xor
xchg
int
sarb
scas
scas
sbb
xor
je
stos
jae
movsl
into
inc
mov
xchg
aam
pop
mov
mov
std
mov
ljmp
stos
add
icebp
pop
and
lds
cmpsl
arpl
lods
jmp
inc
fs
adc
mov
lock
xchg
int
nop
mov
js
fdivrl
out
mov
push
mov
testb
sbb
lock
in
test
insb
dec
sbb
adc
sbb
inc
xor
xlat
jge
mov
inc
jo
mov
ret
jge
lods
sbb
push
sub
lds
sbb
sub
sub
mov
and
fsubrl
jl
push
pop
cmpsl
adc
jecxz
adcb
leave
sbb
sbb
dec
lret
gs
or
mov
xchg
jo
and
xchg
scas
add
jnp
inc
adc
out
cmp
icebp
stc
mov
cmp
push
add
or
or
loop
popa
xchg
adcb
notb
mov
xchg
mov
push
mov
aad
notb
xchg
push
cmp
popa
mov
lret
mov
nop
lret
inc
leave
push
aad
bound
lea
in
push
add
icebp
push
dec
push
pop
pushf
cli
std
gs
stc
fld
adcb
loop
cltd
movsl
mov
sbb
mov
out
das
and
add
fmuls
popf
mov
cmpb
lock
mov
lds
out
ret
rcrl
fbstp
fimuls
out
in
jmp
jge
pop
and
and
iret
outsw
xor
and
xchg
jp
in
cmpsb
and
xor
repnz
dec
push
mov
insl
decb
cli
icebp
push
cmp
sbb
scas
pop
sahf
imul
int3
addb
in
add
mov
mov
std
ja
pop
js
dec
fistpl
movsb
mov
mov
data16
cmp
mov
hlt
hlt
lcall
mov
mov
dec
rorb
pushf
pop
ret
push
hlt
stos
dec
lret
mov
ret
push
and
pusha
inc
sub
shll
jbe
in
jns
mov
push
xor
fsubrs
pop
je
out
movsb
adc
dec
daa
sub
imul
mov
inc
inc
pop
xchg
adc
jl
inc
arpl
pop
mov
sbb
test
data16
mov
lods
insl
aad
jne
inc
sbb
fisubs
lods
push
stc
xchg
jb
push
pop
xor
and
test
stos
movsb
int3
jns
push
mov
les
outsl
xchg
imul
jg
scas
sbb
pop
dec
stc
mov
loop
cmpb
and
add
or
xor
mov
xchg
ljmp
stos
mov
push
andl
dec
mov
stos
es
and
cltd
lahf
cmp
push
xor
test
sub
inc
mov
adc
mov
lods
sbb
leave
mov
stos
and
sbb
faddl
lods
jnp
jb
mov
xchg
icebp
adc
sub
aad
jnp
test
pop
xorb
imul
inc
inc
pop
mov
and
adc
stc
jle
repnz
adc
loope
pushf
in
pop
add
mov
mov
ds
rol
push
clc
lock
jecxz
mov
loop
sbb
sbb
lock
sahf
lock
xchg
lret
pop
cli
loopne
movsb
push
sub
movsb
cmp
xor
or
and
bound
cmp
lahf
push
lret
add
inc
mov
loope
mov
push
movsl
jne
out
inc
or
stos
das
pushfw
mov
ret
jecxz
push
sti
imulb
repz
pop
stos
pop
xor
mov
js
in
push
outsb
aaa
pop
cmc
push
cmpsl
lahf
cmp
shlb
cmp
insb
icebp
hlt
test
addr16
clc
and
inc
cwtl
mov
adc
fildll
lods
pusha
imul
push
jp
mov
mov
mov
nop
jmp
into
fimuls
rcr
out
xor
mov
jle
push
lcall
in
js
out
into
stos
push
std
or
aam
inc
mov
or
pop
xlat
scas
in
jge
pop
rorl
and
dec
xor
mov
clc
fdiv
rorl
cmp
jp
jmp
and
or
or
in
mov
nop
repz
push
inc
dec
adc
dec
aam
dec
pop
iret
or
dec
out
data16
fnstsw
fnstenv
aam
imul
jge
or
and
cmpsl
sub
inc
jp
ss
into
jno
adc
xchg
nop
pop
loope
adc
insb
negl
pusha
cmpb
mov
inc
std
xor
int
inc
das
shrl
push
cmpsb
fstps
cmp
jns
fmull
bound
mov
orb
pusha
pop
lock
imul
out
cmc
stos
add
push
jecxz
test
enter
out
addl
cmp
loope
adc
push
mov
shlb
or
push
sahf
xorb
lods
sub
jmp
cli
jp
sbb
mov
inc
lods
xchg
leave
fildll
hlt
in
sbb
pop
ret
sub
daa
dec
xorb
clc
and
dec
pop
push
mov
nop
mov
lea
clc
pop
out
pushf
aad
ret
test
lock
or
dec
cwtl
add
push
pop
stos
icebp
xor
es
fimull
sti
pop
mov
rorl
inc
rcrl
xchg
je
pop
stc
call
fwait
pop
or
push
mov
loope
and
inc
lcall
jnp
jl
cmp
jg
xor
hlt
lods
sti
cmp
sub
fildll
outsb
adc
mov
mov
imul
inc
lret
add
mov
data16
popf
pop
or
daa
mov
and
das
xchg
in
jo
shll
mov
jecxz
jne
jb
jo
outsl
push
mov
ret
lock
add
mov
addb
push
mov
inc
ja
sub
ret
fdivl
imul
lock
cltd
xor
push
aad
leave
movsb
inc
push
mov
cmpsb
mov
jnp
rolb
adc
xchg
loop
dec
movsb
xchg
incb
mov
sbb
arpl
adcb
mov
adc
add
mov
bound
sahf
cmp
movsb
outsb
out
push
dec
out
scas
imul
mov
in
dec
outsb
repz
ja
das
push
adc
inc
inc
xor
outsb
cmp
and
sbb
sub
movsb
lret
jp
mov
xor
lahf
xor
sbb
aam
add
lcall
jnp
mov
sbb
nop
xchg
mov
cwtl
leave
sbb
lcall
xchg
std
call
fwait
aaa
push
lods
inc
and
pushf
mov
loope
ret
and
cmp
fidivs
out
sbbb
push
pop
stc
mov
test
icebp
lahf
inc
sub
xor
lock
sub
hlt
mov
dec
add
xchg
cmp
add
push
stos
inc
addr16
arpl
les
sbb
leave
mov
jg
mov
sbb
scas
push
int3
loope
inc
cmc
rcl
xchg
inc
push
lcall
mov
jnp
dec
and
and
xchg
stos
icebp
cld
mov
xor
push
or
jne
stos
push
jmp
cmp
pop
mov
repz
ret
nop
sub
mov
jns
loope
mov
and
in
lahf
mov
fldenv
cmp
lcall
fwait
int3
xchg
jns
adc
inc
xchg
and
mov
mov
js
or
push
jnp
push
shr
or
lcall
leave
xchg
and
pop
jle
out
daa
lret
pop
ljmp
ret
cli
pusha
ljmp
push
scas
mov
ss
jg
lcall
out
sbb
subl
das
imul
mov
enter
dec
notb
push
sarl
sbb
test
lahf
xlat
adcl
sbb
cmp
pop
fdivs
mov
insb
movsl
inc
jecxz
daa
mov
dec
call
push
mov
shll
shr
push
addr16
mov
dec
and
dec
push
insb
mov
scas
testb
sti
lods
sub
xor
adc
rclb
xchg
pop
cld
mov
imul
mov
addl
mov
push
sbbb
ret
ss
fldenv
fwait
pop
js
stos
popa
into
sub
out
repz
xor
xchg
inc
lcall
stos
mov
inc
icebp
push
ds
xor
fmuls
jmp
out
lret
outsl
add
dec
hlt
jg
movsb
fists
adc
arpl
popa
out
inc
add
xchg
jb
xchg
cmpsl
idiv
cmp
inc
adc
dec
or
pop
xorl
test
psrad
mov
dec
add
or
rorb
mov
cmp
in
jo
in
fldl
lea
lods
fyl2x
enter
sbb
xchg
or
cltd
jecxz
jns
mov
and
aas
or
aaa
and
pop
mov
dec
mov
adc
lcall
aam
inc
pop
jg
sub
jmp
shlb
test
lock
mov
fists
mov
call
stc
or
or
jo
insb
gs
sbbb
cmp
sar
pushf
adc
nop
dec
enter
jp
inc
pop
xchg
xor
adc
inc
arpl
push
push
mov
sbb
mov
xchg
rcl
shrl
nop
xor
int
adc
cld
add
pop
test
sti
sub
dec
lods
mov
pusha
aam
mov
loopne
push
mov
xor
push
push
leave
sbb
popa
mov
int
push
aaa
scas
addb
mov
popa
movsl
test
xchg
dec
pop
gs
out
dec
js
fwait
xor
xlat
fstpt
mov
lock
out
es
push
std
loopne
and
iret
xchg
loop
and
insb
xchg
call
daa
out
jae
subl
push
daa
fmull
xor
aad
jnp
xlat
icebp
jl
pop
push
pop
nop
lea
mov
xchg
aad
outsb
in
push
dec
or
test
mov
int3
xchg
outsb
nop
and
dec
aad
stos
sahf
cmpb
imul
xchg
adc
push
add
out
loop
ljmp
test
xor
in
mov
js
ret
cld
lea
enter
cmp
mov
ljmp
push
in
pop
iret
pop
movb
xor
lahf
pop
scas
and
call
jp
sahf
adc
fs
cmpsb
jmp
mov
pcmpeqd
das
icebp
je
push
ss
mov
and
pop
xor
rorl
ds
mov
rcrl
fldl
sbb
stos
std
mov
pop
cltd
mov
mov
mov
daa
lock
adc
fidivrs
push
pop
es
int
adcl
pop
stos
sub
ljmp
add
cmp
mov
call
jnp
inc
ja
xlat
xlat
xor
mov
test
or
xor
cli
dec
push
or
push
arpl
mov
xor
cs
and
jno
or
scas
xlat
inc
lret
loope
pop
bound
scas
imul
adc
inc
add
xor
lahf
idiv
jo
mov
push
sub
jl
lods
mov
mov
xchg
icebp
repz
sahf
aam
into
push
inc
sub
mov
insb
push
es
out
mov
push
xor
sahf
and
fidivrs
mov
sub
nop
inc
inc
jecxz
pop
out
mov
dec
fs
sub
lods
mov
scas
cmp
sbb
call
dec
jge
pop
je
mov
mov
add
xchg
call
bound
sub
fisubs
test
dec
scas
sub
popf
fstpl
mov
add
xor
rclb
out
ljmp
fmuls
push
mov
shlb
sub
xchg
xchg
rcr
out
inc
lret
call
mov
mov
mov
xor
inc
sub
sbb
push
adc
repz
mov
test
mov
loopne
cmp
adc
add
movsl
sbb
push
inc
mov
rol
jge
test
jns
cmp
rolb
je
mulb
xchg
or
xchg
dec
pop
or
test
addr16
inc
loopne
mov
and
bound
scas
adc
mov
movb
test
xchg
mov
sbb
repz
push
and
int
outsb
in
test
movsl
out
dec
adc
iret
cmp
out
mov
lods
adcl
jge
icebp
push
addl
and
daa
cmp
adcb
and
test
or
sub
test
out
lret
ret
out
adc
xchg
scas
subl
icebp
push
xchg
cmp
add
mov
out
sbb
add
push
pop
cld
pop
sub
ds
adc
fucomp
out
fisttpl
fcom
sti
and
push
fxch
pop
js
out
idivb
inc
das
cld
ds
addl
das
leave
pop
test
mov
cltd
fidivs
dec
out
cli
aaa
out
sbb
icebp
lods
mov
mov
loopne
cmp
cmp
movsb
or
movsl
push
adc
mov
leave
stos
cmp
xchg
and
sar
ror
fnstsw
sahf
cmpsb
sub
push
fisubrl
inc
adc
in
dec
into
xchg
imul
or
iret
pop
or
fldl
adc
and
fdiv
inc
dec
sbb
and
add
subl
pop
ljmp
push
adc
push
mov
xor
mov
ds
test
pop
xchg
insb
and
clc
pushf
nop
push
add
ret
and
cmpsb
push
sub
mov
mov
push
push
lret
fisttpl
push
ficomps
sbb
cwtl
cwtl
add
inc
xchg
jns
adc
pushf
shr
push
sbb
jge
lods
je
push
arpl
mov
xchg
or
pushf
in
lret
push
into
cmc
mov
pop
push
push
dec
in
pop
sub
push
xchg
push
shrb
test
mov
sti
xchg
outsb
imul
or
sar
sbb
mov
data16
mov
cmpsl
lret
mov
mov
ret
xor
int3
roll
repz
xchg
daa
dec
std
mov
fcmovb
lock
mov
adc
shlb
mov
lds
sahf
fucomi
mov
push
push
outsl
pop
dec
lret
mov
jmp
xor
icebp
xchg
test
xor
test
mov
jmp
and
pop
fldt
outsl
mov
pop
xor
jg
and
push
cwtl
stos
push
mov
nop
in
ret
jle
dec
sbb
std
scas
int
ss
xchg
sbb
call
ss
jnp
and
fwait
lahf
and
jl,pt
into
pop
dec
das
jmp
out
lock
dec
mov
dec
repz
idiv
push
addb
xchg
cmpsb
or
aas
add
out
call
jmp
aad
rclb
ljmp
sbb
std
fcom
or
in
inc
lret
cld
and
lret
push
cs
fldl2t
mov
rol
jp
dec
sbb
dec
mov
xchg
xor
fisttps
insb
imul
and
cmp
dec
out
cmp
stos
sbb
sti
cmpsb
sbb
sahf
sbb
adc
mov
xor
adc
jp
add
loope
mov
sahf
mov
jo
jp
lods
sbb
sub
push
inc
mov
push
popf
stos
xor
int
fwait
or
push
sbb
pop
xor
outsb
mov
lods
sub
cmpsb
cmp
dec
popf
jns
mov
sub
cli
sub
mov
sbb
dec
scas
cltd
aas
xorl
popa
push
sub
mov
and
adc
fsubp
cmp
jecxz
test
adc
ss
orb
push
pop
inc
xor
push
or
xor
and
push
cwtl
mov
lea
mov
jnp
mov
pop
sub
scas
xor
dec
jne
push
jmp
mov
xor
outsl
sbb
or
in
mov
pop
je
xchg
mov
jns
aas
gs
std
movsl
in
pop
jb
enter
push
cltd
pop
add
insb
jmp
inc
repnz
pop
jle
js
scas
jns
sbb
inc
fsubrl
xchg
loopne
jb
iret
jle,pt
lock
jne
outsl
call
or
pop
adc
and
pop
cs
xor
pop
jp
mov
fnstenv
mov
aam
stc
push
mov
nop
in
pop
add
out
jmp
pop
ds
dec
or
addl
nop
adc
loop
mov
mov
nop
jae
add
js
ud1
inc
jbe
jnp
xchg
xor
int
das
popf
add
in
shl
and
stos
sbb
xchg
adcb
push
dec
xchg
xchg
push
mov
sbb
int
add
fwait
and
sbbb
mov
pushf
in
sub
xchg
pop
out
out
ret
xor
mov
push
cmp
push
cmp
pusha
and
adc
test
shl
fadd
dec
inc
cwtl
add
test
and
lcall
xor
frstor
cmp
inc
pop
cmp
adcl
repnz
or
imul
jmp
testl
dec
mulb
paddb
xchg
adc
cmpsl
xchg
icebp
inc
pusha
sti
mov
push
mov
xchg
xchg
in
lds
mov
or
xchg
dec
sub
sub
fisubl
xor
and
xor
inc
test
shrb
add
and
mov
lock
cmc
dec
stc
inc
push
push
adc
fisttps
xor
inc
inc
push
mov
dec
cmp
jl
sbb
adc
mov
ds
in
loop
into
adc
cmp
adcb
push
jb
test
add
out
inc
sarl
dec
sbb
cmp
loop
aad
roll
cmp
jne
and
or
ds
mov
sarl
mov
ror
jl
movsl
movsb
add
icebp
jle
js
push
sub
dec
iret
notl
jnp
pop
shrb
shlb
out
ss
sbbl
inc
loope
fstps
mov
scas
pop
icebp
mov
mov
clc
push
sbb
push
push
ret
adcl
dec
shlb
lcall
or
shrl
inc
cltd
pop
shrb
cmp
and
lret
xchg
int3
xchg
mov
cltd
loop
fstpt
mov
in
fidivrs
dec
push
jle
jne
test
ret
adc
cmp
inc
mov
mov
je
lods
cld
jmp
xchg
mov
les
adc
pop
std
cmp
pop
ficoms
cmpsb
je
jns
mov
adc
sbb
push
pop
das
jmp
xor
or
and
pusha
jb
inc
pop
xorl
push
mov
sbb
push
mov
cmpsb
outsl
in
cmp
rclb
push
push
mov
fistpl
jp
sbb
aam
sbb
and
inc
xorl
repnz
cmp
mov
sarb
sarl
jb
js
adc
pop
add
adc
in
loopne
lcall
rolb
and
sub
sub
setl
sbb
decl
test
in
jne
rclb
pop
xchg
pop
mov
xor
jp
or
xchg
jmp
pop
movsl
or
test
dec
divb
mov
xor
pop
mov
mov
out
je
pusha
popf
test
sbb
aam
bound
mov
xor
pop
xor
loope
mov
aam
notl
or
out
mov
mov
cmp
and
pop
or
test
aas
hlt
lock
mov
lea
lcall
pop
fisubrs
push
insl
fldenv
test
jmp
xor
xor
ljmp
jl
sbb
inc
andb
push
sub
in
dec
and
in
xor
xor
and
mov
or
std
or
test
cmp
loop
aas
dec
fsts
ja
jle
repz
aas
aaa
loope
push
out
push
jl
hlt
lds
mov
into
mov
jge
scas
sub
ret
sar
icebp
in
pop
pop
pop
cmc
fsub
mov
adc
xlat
pop
in
aaa
pop
pushl
cmp
mov
std
or
cmp
sti
movsl
sahf
pop
mov
adc
add
sti
pop
out
std
daa
pop
xor
mov
inc
lods
mov
call
mov
loope
jbe
ja
ja
dec
ficomps
adc
pop
xor
mov
pop
cwtl
movsl
test
lret
inc
ret
cmpsb
nop
mov
push
sbb
gs
jno
xor
or
rcl
insb
mov
into
cs
roll
pushf
adc
lret
ss
mov
mov
fists
xchg
imul
and
xchg
pop
jg
out
xor
in
lahf
fcomps
xchg
mov
push
jmp
push
sti
mov
fisubrl
incb
pop
out
in
arpl
inc
mov
imul
inc
pushf
xchg
cmpsl
push
dec
out
cmpb
xchg
loopne
out
popf
push
dec
pop
movsb
inc
add
in
imul
movsl
imul
mov
ret
call
cmp
inc
pop
xchg
inc
push
pop
mov
in
cmpsl
jmp
sub
add
not
mov
sbb
loopne
adc
inc
sub
mov
jnp
sarl
push
cs
jns
cwtl
cltd
jae
pop
aad
pusha
ficompl
clc
das
push
movsb
lds
adc
into
xchg
rol
in
sbb
sub
xchg
das
ret
mov
sbb
daa
lahf
mov
dec
js
stc
out
dec
lret
jmp
outsb
stc
push
lods
push
fadds
xchg
repnz
push
xchg
mov
ss
fidivrs
or
testb
xor
dec
and
mov
test
test
pop
or
lea
sbb
jle
lret
or
xchg
shrl
push
jb
push
test
movsb
mov
inc
int
ret
fxam
mov
imul
sub
and
adc
inc
dec
add
scas
or
bound
mov
jnp
pop
push
cmpsb
cmpsb
sahf
imul
je
sbbb
mov
add
gs
mov
sti
inc
adc
roll
add
xacquire
pushf
out
bound
test
out
and
mov
xchg
inc
jns
mov
or
lret
mov
pushw
mov
xchg
lods
jne
leave
stos
inc
les
push
mov
nop
pushf
mov
xor
mov
outsl
sub
jne
rorb
xchg
adc
and
aas
xchg
dec
in
das
iret
lea
xchg
incl
mov
call
enter
ror
sbb
jno
or
js
push
xor
dec
adc
js
push
push
sahf
mov
ret
or
or
test
lods
mov
sub
pop
popl
cmc
addb
sbbl
xor
mov
dec
aam
outsl
jp
lea
pushf
fdivl
xchg
lcall
dec
fbld
adc
ret
imul
stos
loopw
cmp
jp
ret
or
in
shll
hlt
adc
test
and
call
lret
pop
int
and
fisttpl
xor
inc
icebp
mov
inc
arpl
jo
pop
jnp
mov
or
jmp
xchg
scas
add
aad
dec
test
js
mov
dec
aaa
dec
xchg
orl
sbb
fildl
add
or
fimull
cmpsl
pop
cltd
fbstp
push
cmpsl
adc
add
in
sub
rol
push
ss
cmp
aaa
adc
insl
pop
rcr
jle
xchg
leave
std
in
adc
rorl
popf
pop
lret
xchg
js
push
arpl
xchg
shlb
aas
mov
jbe
pop
mov
sbb
testl
fsub
mov
testl
push
outsl
out
inc
jmp
cltd
test
stc
neg
inc
add
test
jnp
rcrb
mov
outsb
dec
xor
lret
pop
mov
jne
ficoml
inc
xchg
add
test
add
loopne
movsb
push
js
in
adc
adc
mov
lock
cmp
ficomps
adc
inc
inc
push
iret
int3
push
jns
adc
cmp
into
ljmp
test
jg
xlat
adc
popa
inc
pusha
and
cwtl
push
pusha
mov
inc
scas
xlat
test
nop
or
adc
cwtl
xor
mov
shl
pop
lods
dec
test
adc
sarb
pop
adc
enter
xor
push
cmp
icebp
mov
aam
scas
sarl
adc
lods
and
fcompl
jecxz
cmp
test
shll
lcall
cmp
dec
sbb
jmp
insb
in
cmp
movsb
pop
xor
rorb
je
mov
mov
daa
sub
jecxz
leave
push
cmp
xchg
sbb
push
mov
repz
or
pop
pop
test
inc
imul
sti
pop
xchg
and
fcoml
mov
inc
mov
add
xor
push
aas
and
and
leave
in
cmpsl
sbb
lahf
xor
mov
and
imul
mov
daa
lcall
mov
cmp
setnp
fwait
enter
mov
pop
lahf
cwtl
js
lds
shrl
fs
pop
xchg
insb
sbb
outsl
leave
cmp
dec
push
xchg
adc
stc
cmp
js
lcall
dec
push
addl
cmpsb
cmpsb
bound
push
je
mov
xchg
mov
xor
push
ret
mov
cmpsl
clc
sbb
stos
push
sahf
inc
xor
xlat
pop
xchg
dec
ret
outsb
mov
cvtps2pd
out
sbb
lods
out
sub
xor
pop
cmp
pop
mov
push
jecxz
sti
xchg
js
jno
push
icebp
pop
aas
sbb
std
inc
jae
adc
out
test
push
lret
sub
dec
mov
mov
scas
jmp
insl
daa
lret
adc
xlat
inc
inc
xlat
push
sbb
mov
pushf
adcb
jmp
test
les
movsl
jp
cmp
pop
imul
sbb
sub
push
jmp
fcoms
dec
fcmovb
insb
jmp
imul
jo
mov
ja
repnz
cmpl
shrb
movl
aam
sar
cwtl
cmp
outsb
sbb
add
xor
pop
mov
push
outsl
sbb
leave
mov
xchg
add
xchg
fidivs
ficoms
xor
lock
sbb
cmp
and
fcmovne
test
fnstsw
adc
pop
out
data16
ret
adcl
das
mov
and
hlt
lock
jecxz
cmp
pop
out
push
xchg
add
sbb
into
or
aas
mov
cmovno
sub
scas
or
xchg
mov
stos
nop
sub
into
cmc
pop
push
cmp
out
mov
jae
xor
jmp
mov
rorl
leave
dec
addr16
icebp
sub
add
inc
or
pop
jecxz
and
or
repnz
int
sbb
loope
cmp
icebp
jb
mov
push
call
mov
repz
es
mov
test
pop
in
pop
lock
sahf
xchg
mov
lods
out
push
and
pop
xlat
mov
adc
jns
in
or
fnstcw
fsubrl
jg
aas
push
loop
das
addb
or
cmp
xchg
sahf
mov
push
js
mov
in
inc
pusha
ss
scas
adc
or
dec
clc
test
das
and
fwait
arpl
cli
mov
push
lods
xchg
jle
push
out
aaa
pushf
into
inc
fiaddl
loope
xchg
in
lods
add
and
mov
cs
ret
sub
test
pop
xchg
add
and
sub
jbe
mov
ret
std
jbe
jge
adc
mov
dec
mov
and
js
adc
pop
and
mov
mov
cmpsb
in
repnz
stc
mov
inc
inc
notb
sbbb
inc
sub
dec
enter
pusha
scas
cmpl
aad
stc
mov
pop
jno
lcall
cs
adc
out
outsb
and
add
clc
movsl
mov
jno
sbb
fwait
cmp
call
scas
mov
xchg
adc
add
inc
stos
pop
les
jne
outsb
push
inc
lret
sbb
daa
push
rcr
lcall
sbb
in
push
cmp
dec
fisubrl
les
mov
mov
out
jg
push
fimuls
pop
andb
mov
insb
jo
das
in
fucompp
jbe
scas
lret
setb
xor
add
in
adc
jle
mov
aaa
cmovs
enter
out
cmp
loop
pop
test
lds
hlt
pop
aas
sub
aaa
push
cmp
lea
lds
adc
xchg
inc
mov
jle
sti
fwait
push
adc
repz
bound
adc
dec
jb
les
xlat
loope
sub
xor
sub
rorb
jge
push
cld
sbb
push
mov
lock
inc
lods
sarb
repnz
adc
ret
cld
dec
and
pop
iret
and
in
repz
das
insl
stos
ret
lods
adc
push
in
loopne
test
das
inc
or
add
push
inc
fsubrs
gs
cmpsl
lret
add
mov
xchg
mov
push
and
adc
dec
jg
inc
pmullw
enter
xor
dec
and
dec
loope
leave
pop
pop
mov
rol
xor
fiaddl
cmp
mov
jne
je
testl
stos
sub
push
aaa
push
lock
jle
lret
mov
sub
call
lods
imul
dec
sbb
aaa
cmp
je
ret
scas
into
mov
pop
mov
test
pop
pop
mov
mov
add
fidivl
xor
shrd
jmp
mov
push
arpl
dec
or
daa
roll
cmp
js
cmp
add
push
cmpb
add
mov
dec
fldcw
movsl
cli
xor
nop
xor
dec
jno
mov
jo
adc
mov
adc
pop
fwait
pop
aam
aaa
std
push
clc
jbe
cltd
adc
shrl
lahf
dec
and
sbbl
push
out
push
out
mov
jo
cmp
scas
lea
sbb
andb
pop
repnz
roll
cli
and
cli
popf
xor
mov
lea
loope
sbb
sub
mov
or
lods
mov
pop
popa
sbb
jb
outsl
cmpl
mulb
arpl
outsl
mov
mov
jae
mov
dec
in
shll
or
inc
jmp
mov
fistpl
sbb
push
insb
mov
jle
stc
cmp
sbb
cld
add
jecxz
dec
incb
mov
aaa
movsl
mov
mov
jo
add
sub
sbb
sbb
fisubl
fwait
jmp
test
or
sbb
enter
xchg
repz
dec
iret
loopne
aad
dec
lods
inc
inc
cmc
and
xchg
inc
cltd
pop
sub
in
pop
fdivrl
enter
xor
loopne
jmp
sub
xor
in
out
ljmp
cmp
nop
cmp
into
pusha
or
add
mov
sub
dec
stc
cmp
flds
adc
into
jp
sub
sahf
and
lds
jno
insl
adc
cld
scas
lods
ret
inc
jae
movsb
or
in
jge
hlt
cmp
xor
ljmp
popa
in
cmpsb
fwait
out
mov
push
or
xor
xor
flds
push
rorb
push
test
pushf
push
mov
or
mov
rorb
cmp
mov
add
pop
xchg
add
jns
movsl
ror
push
jle
push
iret
out
xor
mov
popf
lahf
mov
add
cmp
movsl
test
or
icebp
call
xchg
gs
leave
mov
leave
scas
pusha
cs
xor
pop
outsb
pop
sahf
stos
leave
jmp
mov
push
inc
lods
fwait
out
sub
xor
xor
push
sbb
sub
repnz
sahf
mov
clc
addr16
test
jle
lock
dec
dec
pushf
imul
leave
xlat
in
xchg
jb
adc
dec
adc
hlt
xchg
cwtl
out
push
cmpsb
jbe
jl
test
lcall
lcall
sub
sbb
jno
cmp
or
sbb
fdivrp
dec
pop
xor
fs
sbb
faddl
cmp
jno
jne
subb
push
sbb
test
movsl
aaa
fstpt
bound
fdivrs
fidivl
into
push
mov
lea
iret
outsb
or
out
out
mov
xchg
jne
mov
into
dec
fs
cld
sub
ja
mov
push
sub
mov
adc
add
cmp
lahf
test
pushf
call
mov
popf
aam
iret
xchg
orb
and
std
inc
and
cwtl
addb
push
adc
orb
mov
test
mov
mov
fdiv
andb
insb
inc
sbb
aaa
shll
jnp
xlat
sub
mov
in
stos
dec
jp
cld
xchg
mov
int
sti
outsb
mov
shll
in
mov
mov
mov
mov
mov
imul
je
inc
addb
pop
decb
pop
pop
jge
sbb
cs
fidivl
inc
int
gs
pop
mov
mov
xor
inc
cmp
imul
and
scas
loop
inc
push
pop
jmp
lahf
pushf
jbe
mov
mov
inc
xchg
mov
mov
lock
cli
jmp
pop
int3
pop
popf
mov
cmp
das
es
sbb
iret
jmp
in
popf
in
sub
xor
mov
mov
pop
push
xor
pop
lret
xor
cmp
lea
xchg
mov
outsl
cli
jl
jmp
mov
jg
inc
cmpsl
add
popa
ret
fstl
mov
cmp
fs
aaa
inc
fwait
xlat
cmc
fcompl
push
repnz
nop
sbb
shlb
shlb
addl
xchg
mov
in
and
data16
mov
mov
dec
jnp
xchg
fs
daa
jmp
das
enter
cmpsl
xchg
xchg
sub
adc
push
jle
sahf
mov
mov
jns
mov
js
push
ja
add
rcrb
push
push
xchg
xor
rcll
adc
ret
pop
add
pop
dec
pop
out
out
popa
es
push
adc
mov
fdivrs
inc
push
fmuls
lds
stc
je
cmp
jecxz
scas
cmp
mov
lds
pop
add
call
cmp
cmp
push
fldl
mov
pop
mov
inc
fcmove
push
stos
jmp
fistl
fildll
push
lea
sub
cmp
mov
jo
in
dec
sub
aam
cmpsl
lcall
cld
cmp
cltd
in
and
xchg
cmpsb
std
mov
mov
dec
insl
push
xor
es
mov
faddl
call
xor
xor
add
push
add
xchg
cld
out
push
mov
mov
and
shrl
mov
pop
int
mov
insl
xchg
push
mov
and
std
sbb
dec
mov
ret
cmpsl
xchg
in
cmpsb
movsb
mov
mov
xchg
mov
loop
mov
cltd
aas
repnz
loopne
loop
pop
fsubrl
in
cmovp
inc
pushf
fnstcw
lahf
daa
ss
fs
das
aad
in
into
sbbb
push
cmpl
stos
mov
sub
jne
into
cli
scas
or
mov
mov
notb
mov
repz
rcll
jnp
pop
lahf
loop
in
ja
sti
dec
repz
and
cmp
and
fs
stos
negl
cmp
xchg
shll
enter
mov
lcall
lret
js
sbb
or
and
mov
pop
lods
fnstcw
sbbl
bnd
scas
sbb
leave
adcl
jo
push
jmp
cmp
jp
pop
cmp
jle
into
sub
out
jb
lret
inc
cmp
in
adc
hlt
sub
sbb
into
ret
xchg
ljmp
push
xor
sub
push
xor
fcmovnb
or
or
mov
pop
push
ljmp
scas
or
popf
lcall
and
cli
dec
jp
ja
add
sbb
jb
push
push
fildl
sbb
sub
jo
hlt
aaa
fsubs
cli
push
aad
and
fnstcw
sub
xchg
mov
andb
push
fldenv
and
xor
push
mov
mov
ljmp
cmp
pop
sbb
sub
fildll
or
or
in
xchg
rcr
xchg
jns
lods
cld
aam
in
adcb
or
cmp
mov
xchg
sub
xor
test
pop
aaa
xorl
movsl
iret
in
and
test
pop
imul
std
xor
jle
out
leave
js
outsb
popa
fsubs
and
xchg
sahf
repnz
aad
lahf
mov
mov
pop
rclb
and
jne
cltd
pusha
jno
data16
popf
xor
popa
dec
test
das
imul
movsl
sub
out
cmp
xchg
and
sub
sub
lods
call
shr
inc
lahf
pop
mov
and
push
jne
int3
outsb
and
add
push
addr16
add
cmc
cmpsb
and
sbb
test
xchg
fisttpll
mov
nop
scas
pop
pop
inc
dec
mov
dec
leave
arpl
mov
inc
out
stc
js
pop
adc
adc
cli
divb
aas
push
inc
pop
fidivl
pop
push
adc
es
ds
imul
sbb
jecxz
and
mov
leave
out
jl
int3
pop
dec
mov
cmp
cltd
inc
xchg
dec
aam
jp
pop
cmp
dec
outsb
jmp
aaa
cld
lods
inc
pop
out
sbb
pop
andl
xchg
dec
adc
push
and
pushf
pop
cwtl
fnsave
nop
loope
push
pop
add
mov
movsl
sti
out
cwtl
ljmp
ljmpw
sbb
out
lret
pusha
cs
iret
repnz
cli
lock
fwait
mov
mov
scas
test
fidivl
int3
jp
je
mov
xchg
movsl
hlt
repz
inc
pop
divl
nop
mov
mov
jbe
or
int3
xchg
jmp
test
adc
add
dec
mov
jg
adc
sub
xchg
repz
outsl
adc
inc
sbb
dec
inc
jmp
push
xchg
hlt
and
mov
mov
pop
and
stc
pop
cltd
or
scas
lahf
push
xchg
xlat
outsb
pop
sbb
pushf
out
stc
mov
jns
ret
scas
cmp
jp
xor
pop
mull
pop
xor
subb
xor
ret
ret
sbb
imul
imul
call
setns
or
xor
mov
cmpsl
test
adc
sbb
lahf
push
dec
mov
andb
fcomi
pop
adc
fisttps
dec
jmp
scas
ficompl
xor
jno
inc
push
sbb
xchg
inc
es
dec
pop
dec
cmp
sti
add
aam
jp
out
cmp
sbb
das
stos
ss
add
sbb
les
int3
jmp
push
inc
xchg
fildl
call
sub
sub
in
mov
icebp
je
or
fwait
cmc
sbbb
and
repz
lahf
mov
nop
mov
sbb
lock
sti
pop
mov
repnz
mov
pop
std
mov
add
xor
or
push
out
aaa
pop
adc
sahf
jae
ljmp
lock
and
and
addb
push
push
and
cltd
mov
push
pop
push
and
push
and
ret
cwtl
xlat
add
aad
jae
add
leave
and
notb
sub
js
sarb
xor
lods
cmc
xchg
inc
dec
dec
test
xlat
jle
xchg
push
jnp
lods
jl
nop
and
ret
jne
notl
adc
outsb
pop
das
pop
and
pop
pusha
pop
mov
in
repz
iret
mov
ror
and
fists
push
movsb
cmp
xor
and
push
lret
mov
cmpsb
lcall
lret
outsb
sub
and
test
sbb
pushf
in
xor
in
push
adc
test
mov
pop
in
scas
add
cmp
incl
sbb
loopne
or
or
data16
rcll
jo
mov
add
imul
adc
icebp
sti
sub
pop
mov
push
lds
inc
mov
popf
repnz
add
addr16
inc
lcall
jl
out
adc
int
dec
sahf
add
scas
mov
add
sub
mov
inc
cltd
icebp
push
test
sbb
jg
fwait
sub
adc
xlat
cmp
gs
xchg
push
out
xor
sahf
sbb
push
lock
outsb
clc
stc
repz
aam
cltd
lcall
mov
inc
outsl
inc
test
adc
inc
mov
int3
fists
inc
pop
sbb
pop
fimull
add
xor
sbb
xor
adc
and
idivl
int3
xlat
mov
pop
imul
push
lea
pop
ret
inc
sub
push
outsl
or
shll
adc
nop
push
andl
xchg
mov
pop
int
in
adc
pop
push
fwait
out
popf
outsb
aam
mov
jns
fidivrs
das
rorl
je
mov
stos
xchg
adcb
jmp
push
pop
push
mov
sarl
lds
mov
adc
push
xchg
lea
sbb
mov
cltd
mov
xchg
dec
mov
push
int
push
jmp
arpl
adc
sahf
inc
inc
movups
fisttps
cmp
arpl
movsb
sub
addr16
stc
rol
aas
push
pop
fbstp
ss
mov
or
jmp
and
daa
adc
cmp
sti
push
mov
rcrl
fsubrs
adc
mov
xor
cmpsb
lahf
pop
mov
sbb
mov
pop
add
pop
and
out
adc
push
xchg
lea
lods
cmp
fcompl
mov
adc
cli
cmove
push
dec
push
out
sbb
lahf
push
pop
mov
and
and
into
idivb
aad
test
pushf
cs
jns
fimuls
push
add
sbb
test
inc
pop
ret
aad
add
mov
inc
jo
xor
add
into
call
rcrl
dec
mov
in
repnz
xor
paddusb
cmp
jbe,pn
sub
pusha
addr16
scas
test
pushf
test
mov
js
scas
leave
inc
sbb
pop
xor
sbb
je
jecxz
hlt
lds
mov
adc
ds
orl
repz
push
push
cmp
imulb
add
xchg
mov
movsb
and
icebp
pop
xor
test
push
inc
scas
add
daa
mov
adc
pop
shlb
jge
adc
out
repnz
push
mov
mov
mov
jns
cmp
dec
xor
mov
addr16
adc
dec
clc
cmp
jo
sbb
je
push
push
push
es
sbb
scas
cs
rcr
movsb
mov
or
gs
popl
or
xchg
outsl
xchg
lea
xor
out
xchg
repz
mov
sbb
add
xchg
jne
ror
aaa
cmp
xchg
insl
ret
stos
sub
mov
cltd
ficomps
add
cld
insl
xchg
dec
sbb
arpl
arpl
and
adc
orb
adc
fcmovnu
daa
pop
inc
popf
and
fsubl
or
das
adc
in
das
mov
xchg
jo
sub
rorb
lret
popa
pop
xchg
cmpsb
inc
cmp
dec
pop
lret
cmp
push
or
adc
faddp
jp
notl
insl
lret
jne
mov
pushf
std
in
pusha
jmp
sbb
push
and
loop
lahf
adc
adc
inc
scas
ds
add
xlat
inc
pop
test
fs
lea
iret
sti
adc
push
cli
mov
repnz
push
sub
les
gs
dec
roll
mov
mov
arpl
xor
mov
das
inc
shll
aaa
lahf
mov
or
fistps
outsl
jo
add
loopne
or
fcoms
in
out
mov
jb
sub
mov
or
call
sub
enter
ret
jle
push
dec
jmp
push
cld
imulb
leave
xchg
jns
movsl
outsb
push
or
jmp
in
push
jo
inc
nopl
les
mull
xchg
push
mov
loopne
movsl
sub
xor
jb
cmp
cs
mov
insl
pop
pop
out
sub
loopne
and
mov
xor
sti
xor
push
lds
ret
cmp
pop
iret
dec
jns
mov
pop
das
pop
xchg
push
cmp
sahf
xchg
push
push
jns
sbb
cmp
jmp
ror
mov
sbb
push
add
sbb
or
sub
lods
push
dec
pop
sbbl
mov
mov
xor
xchg
adc
sub
fimull
outsl
pop
jmp
loopne
hlt
mov
mov
ljmp
dec
cmpl
push
in
outsb
mov
push
imul
or
or
cmc
and
xchg
dec
pushf
xchg
int3
pop
pop
or
and
jmp
adc
pop
outsb
jge
loopne
fstpl
test
gs
orb
repnz
push
xchg
xchg
push
jno
inc
das
call
fdivr
mov
orl
add
dec
jnp
dec
inc
or
pop
movsl
jno
and
ret
dec
sub
inc
jmp
leave
lock
jle
mov
bswap
fnstsw
adc
sub
fidivrs
mov
xchg
in
mov
std
xchg
imul
jo
test
test
xchg
mov
in
cmp
and
and
mov
call
cs
xor
insb
xor
add
inc
sub
pushf
scas
push
inc
jae
and
inc
fildl
movsl
or
sub
negl
shr
dec
pop
push
push
aaa
inc
hlt
das
test
cmp
mov
js
scas
ss
fs
rorb
inc
pop
inc
arpl
lcall
inc
adc
cmpsl
flds
mov
movsl
icebp
pushf
mov
cmp
push
jne
mov
insb
pushf
lahf
ss
sahf
inc
bswap
fistps
mov
jns
cmp
fldl
loope
adc
mov
jp
daa
clc
dec
jecxz
cmpsb
jge
xchg
hlt
fwait
sub
lcall
dec
cmp
aad
ss
jbe
inc
sbb
test
lods
lds
movb
imul
in
mov
pop
sub
sbb
sti
adc
push
xchg
test
pop
mov
sbb
push
adc
outsb
jo
mov
loope
std
outsb
sub
outsb
outsb
adc
mov
fucom
inc
inc
add
cmpsb
sub
cmp
jle
stos
ss
jnp
inc
xor
pop
mov
ret
jg
add
and
cmpsl
mov
fisubrs
in
lea
lock
jb
push
popa
roll
cmp
jae
out
pusha
cmp
adc
subb
icebp
xor
mov
inc
ja
es
lock
and
repz
xor
fnstenv
sub
test
sub
adc
iret
jmp
cmp
dec
smsw
cmpsl
jge,pt
jp
cmc
xchg
mov
outsl
xchg
fbld
out
jb
sbb
movl
std
push
pop
cmp
add
sahf
fs
sahf
ljmp
jecxz
sbbb
sub
repz
cmp
loop
rclb
out
or
mov
test
jg
and
push
xor
push
je
push
xchg
sbb
push
add
int
loope
int3
inc
dec
jno
pop
sar
mov
push
mov
outsb
adc
imul
test
sbb
test
adc
add
add
popa
adc
push
adc
in
leave
scas
pop
sbb
pop
js
movsl
repnz
mov
shlb
mov
or
cmp
adc
rorl
call
add
push
sub
mov
pusha
mov
test
lahf
mov
adc
cmp
sub
add
jae
and
test
mov
rolb
addl
mov
popa
jno
dec
push
and
and
inc
xchg
sub
and
inc
adc
push
movsl
fnstsw
jmp
adc
rorb
xchg
inc
push
popf
test
mov
fmull
xlat
sbb
leave
addr16
dec
movsb
insb
es
jg
push
fiadds
rcrl
aaa
hlt
xchg
sbb
xor
mov
or
xor
jo
arpl
in
mov
jo
and
in
movsb
cmpsb
repz
mov
xor
mov
jge
or
scas
lds
insb
fsubl
sub
xchg
inc
cmpsl
loopne
dec
mov
sbb
cmp
pop
mov
sti
push
ret
xchg
mov
add
xor
jp
out
push
cmpsb
es
les
push
std
out
leave
adc
jg
rolb
or
mov
cmc
stos
fmul
pop
adc
xchg
pop
xor
pop
sub
pop
mov
call
cwtl
sub
fdivl
mov
lahf
rorb
and
mov
in
xchg
mov
fs
das
xchg
or
cwtl
jg
dec
pusha
push
mov
clc
fdivrl
dec
loop
xchg
fidivrs
fbld
das
dec
leave
test
imul
shl
dec
pshufw
jno
ja
and
aas
push
imulb
outsb
xchg
sub
mov
lahf
aam
sub
test
cmp
cmpsl
mov
repz
in
sub
sahf
pop
adc
adc
pusha
aad
sbb
dec
notl
dec
dec
pushl
outsl
fcompl
notb
call
cli
mov
in
and
outsl
and
cmc
test
adcb
jge
adc
sub
mov
movsb
popf
jp
xor
jge
fisttps
pop
jb
add
xchg
stc
adc
sbb
icebp
mov
mov
or
add
cmp
mov
rcrl
jnp
or
jmp
mov
js
jbe
pop
xchg
mov
xor
add
into
aam
mov
icebp
divb
jl
sbb
loop
xor
stos
xchg
xor
stc
sti
adc
push
fidivrs
ljmp
stos
pushf
and
push
repnz
mov
jb
aas
movsb
pop
jp
ds
jmp
add
or
jge
mov
scas
add
sub
lea
push
and
insl
das
or
sbb
fildll
jnp
fidivrl
inc
or
jp
int
ds
mov
sbb
jge
nop
cmp
fs
cs
or
cmc
jbe
push
addr16
mov
sbb
les
and
popa
addr16
cmpl
test
int3
pop
rorb
in
xor
cmc
pop
rcr
jns
repnz
mov
sbb
in
andl
mov
adc
jg
mov
xchg
pop
insb
cvtps2pd
lahf
push
push
jmp
mov
addl
jne
pop
cli
push
cmp
pop
sbb
sbb
cmpsb
xor
fadds
lret
pop
stos
or
lcall
popa
mov
stos
pop
scas
jp
lret
shr
sbb
mov
bound
xlat
jnp
fiaddl
jb
xor
dec
outsl
xchg
lock
or
ret
idivl
test
pushl
mov
mov
rcrl
test
jb
cmp
mov
or
ljmp
fxch
ret
push
cmp
test
xchg
dec
mov
not
ja
sub
fdivl
and
and
rolb
xor
xlat
js
xchg
push
outsl
out
popa
fwait
xchg
into
jo
lock
dec
cmpsl
andb
out
mov
pop
mov
jl
and
xor
repnz
pop
leave
icebp
dec
jns
mov
fwait
push
cmp
inc
jmp
pusha
mov
mov
push
aad
aas
stc
pop
ljmp
push
cmc
mov
cli
add
and
das
lds
iret
repnz
xchg
inc
mov
fdivrp
loopne
mov
lea
stc
adc
push
mov
or
and
fldcw
sbb
push
sbb
cltd
push
mov
pop
xchg
dec
cltd
add
and
aam
jno
loope
test
and
cmp
inc
xor
outsl
mov
dec
in
or
data16
jne
roll
rcrl
xor
mov
mov
jecxz
or
mov
lahf
mov
popf
iret
jnp
add
xor
das
popa
fwait
scas
add
mov
cmpsb
sbb
mov
int
ss
bound
jns
mov
jge
leave
xor
scas
sub
paddsw
jae
push
arpl
jnp
mov
xor
in
or
iret
lcall
inc
push
jbe
movb
scas
cmp
hlt
xchg
push
or
roll
xor
gs
push
cld
fld
cld
or
roll
jmp
jle
pushf
push
fldcw
icebp
push
xor
pusha
lret
xor
into
popa
into
mov
or
mov
or
aam
stos
fidivs
in
xchg
dec
sub
adcb
cltd
push
adc
pusha
mov
fcoms
xchg
mov
xor
pop
decl
in
imul
push
enter
or
aam
aas
xchg
push
clc
and
push
dec
xor
and
cwtl
sub
cwtl
mov
sub
jl
inc
pusha
sti
das
sub
mov
pop
pop
popf
push
in
in
jnp
inc
add
cmpsb
cmpsb
lods
inc
jmp
aam
add
sub
cmpsl
pop
mov
push
cltd
cwtl
fs
addb
in
sub
mov
sub
stos
cmp
mov
or
lods
rcll
xor
push
aam
xchg
or
jle
mov
jb
sub
frstor
adc
jle
scas
inc
xor
mov
push
test
lret
sbb
mov
lahf
addr16
inc
mov
sbb
cmp
cmp
adc
push
xlat
jo
add
cmpsb
push
jae
lds
mov
xor
add
pop
pop
sub
adc
mov
add
xor
adc
push
idiv
mov
js
mov
arpl
sbb
push
jne
push
mov
scas
xchg
fcoms
cmp
ljmp
cmpsb
fstps
xor
loopne
pop
sarb
mov
das
inc
pop
mov
push
lcall
cmp
or
negb
shll
or
dec
jno
adc
loop
sub
stc
or
fiaddl
cld
and
js
and
add
push
add
pop
ret
out
add
jle
cmp
inc
pushf
shrl
add
inc
xor
xchg
jmp
adc
lret
ss
push
add
mov
faddl
xor
test
xchg
lahf
xor
out
fadds
xchg
pusha
mov
xor
jno
fildl
ret
aaa
xchg
mov
push
dec
ja
shll
imul
pop
arpl
sbb
shl
mov
jo
call
xchg
and
push
and
js
pop
adc
nop
lcall
pop
xchg
pop
cmp
scas
adcb
adc
or
std
movsl
xchg
xchg
jae
test
loopne
xchg
ss
mov
faddp
cld
jge
sbb
jl
lods
imul
cmp
jge
mov
pop
loopne
insl
jg
lret
dec
repnz
add
cltd
ss
frndint
ja
inc
mov
testl
shl
mul
into
bound
jecxz
fucomi
into
into
sbb
stc
fs
sub
clc
mov
xor
cwtl
mov
sbb
and
push
jg
mov
mov
add
test
xlat
and
mov
dec
jp
iret
xchg
adcl
dec
sub
jecxz
test
movsb
rolb
dec
test
bound
imul
push
push
and
cmp
adc
ds
add
loope
cmp
sbb
imul
js
sbb
rcl
sbb
jmp
repnz
sub
mov
mov
xchg
push
out
hlt
mov
rolb
mov
sbb
faddl
sti
fimull
adc
ret
daa
add
and
das
mov
pop
dec
scas
fwait
pop
push
or
dec
daa
jmp
cmpsb
mov
aam
stos
inc
mov
ret
add
mov
loopne
mov
push
jns
in
and
inc
dec
stos
push
push
cltd
add
pop
mov
shrl
mov
out
add
or
test
sub
and
sarb
cmp
das
inc
pop
cmp
gs
xlat
aad
jbe
out
lcall
aam
lds
push
pop
fistpl
subb
repz
sbbl
xchg
hlt
pop
std
add
xchg
frstor
cmp
and
dec
or
fs
rcrl
scas
cmc
out
xchg
pop
mov
dec
cli
ret
jmp
stc
cmp
add
pop
jo
movsb
ret
or
pushf
in
ret
cmp
dec
into
and
mov
into
mov
inc
sub
fsubrs
je
imul
jg
and
mul
hlt
dec
xor
jo
xchg
test
call
cltd
das
icebp
mov
xchg
xchg
sti
add
iret
lds
insb
or
add
icebp
inc
fs
loopne
rcrb
mov
in
pusha
fistpll
das
inc
mov
and
push
inc
xchg
fnstsw
imul
cmp
jnp
cwtl
loop
hlt
cmc
push
inc
adc
mov
ret
pushf
je
mov
addr16
fdiv
in
in
cmp
xor
imul
mov
xchg
or
or
shrb
or
int3
sub
pushf
subl
dec
add
lahf
adc
or
test
push
dec
xlat
ljmp
push
jp
pop
sub
push
repz
adcb
loop
adc
mov
jmp
push
mov
adc
inc
sbb
je
push
jp
push
add
jno
jne
push
fs
ljmp
popa
xchg
dec
inc
sbb
push
xchg
add
enter
xor
add
jg
jg
imul
sub
sub
sub
loop
add
mov
pop
cld
or
clc
cwtl
push
or
xor
aas
inc
or
mov
jl
mov
jnp
stc
out
jbe
test
movsl
bound
or
cwtl
mov
cltd
inc
pusha
sbbl
cmpsb
jb
stos
sbb
in
icebp
mov
js
dec
add
imul
bound
imul
in
or
jmp
xchg
mov
and
aaa
sub
push
divl
lret
fs
sub
pop
outsb
loope
pushf
gs
pop
test
sub
pop
rorl
mov
les
test
cmp
push
xor
mov
sbb
ret
xor
pop
inc
xor
jnp
test
dec
or
lds
cltd
xchg
cmp
cwtl
outsb
jmp
nop
ss
push
arpl
loop
sub
mov
and
sub
adc
add
je
imul
add
mov
jecxz
aaa
or
adc
mov
aas
mov
xchg
cmpsl
sarb
fcompl
jb
iret
into
pop
imulb
fdivrl
inc
iret
cmp
test
test
mov
pop
cmc
sti
pop
stos
movsb
jle,pt
inc
movb
mov
stc
mov
push
outsl
mov
adc
lods
inc
mov
push
jmp
out
rcrb
aas
cmp
mov
jg
stos
test
js
cmp
ret
fs
sbb
fs
out
js
xchg
xor
mov
sbb
dec
jno
dec
shll
or
cmp
mov
mov
jo
xor
lds
lret
shlb
incl
mov
jne
cmp
pop
gs
test
mov
mov
fistpll
mov
xchg
or
andb
sub
loope
pop
pop
jne
push
test
push
adc
cmpsl
xor
data16
das
adc
std
or
std
sarl
js
aam
pop
es
int
imul
sub
cmp
pop
xlat
and
out
sub
test
jle
adc
loopne
loope
rcrb
gs
sbb
test
arpl
push
push
jne
lods
iret
aaa
add
or
dec
xchg
mov
mov
pop
dec
jge
imul
pop
and
push
cmp
mov
mov
sar
pop
xor
outsb
mov
cmp
cmpsl
shrb
lret
ret
cli
push
popa
inc
aas
test
rorb
mov
add
mov
fdivrs
push
int3
rol
xor
sub
loopne
push
clc
cmovae
xor
loope
mov
or
divl
push
ret
mov
inc
aad
hlt
and
sbb
xor
dec
ret
xor
add
shl
xor
and
into
mov
xor
dec
fistps
xchg
mov
mov
push
jb
cmp
mov
mov
or
push
mov
loope
fsts
sahf
out
rorb
test
daa
mov
ss
ljmp
clc
repnz
jg
out
mov
and
iret
in
sub
adc
sti
rcr
sbb
aaa
jo
test
sbb
ret
inc
int3
inc
push
inc
ja
jg
sti
dec
mov
mov
ds
xor
jo
ret
jmp
cld
stos
mov
pop
xchg
popf
fwait
dec
cmp
xchg
or
cmc
mov
cmc
jmp
popa
inc
out
fadd
pop
mov
pop
sti
pop
shlb
sti
jl
jg
lds
mov
dec
ffree
imul
cmp
es
je
or
and
add
loope
out
mov
pop
fdivrl
mov
mov
mov
out
stc
aaa
mov
push
test
or
stc
xchg
outsl
cmp
adc
gs
sbbl
jle
inc
pop
add
cmp
in
push
and
xchg
sub
sbb
scas
adc
add
imul
pop
or
push
insl
fcoml
mov
cmp
enter
add
push
inc
adc
sbb
test
lods
imul
mov
push
out
dec
dec
in
xor
jg
inc
iret
aaa
fwait
pushf
add
enter
fimuls
adc
pop
insb
std
push
cmp
fs
dec
stos
out
xchg
fucomip
outsl
jo
push
dec
pop
fcoms
adc
cwtl
loope
mov
mov
mov
cwtl
fists
icebp
in
aaa
and
dec
outsl
stos
push
fsub
jmp
sbb
mov
push
xor
mov
and
cmp
ret
pop
cmpsl
and
test
mov
inc
leave
jl
jne
or
inc
adc
fisttpll
dec
scas
out
popf
dec
cmp
inc
fbstp
sarb
stos
jmp
xchg
fdivp
jl
xchg
call
dec
bound
sbb
pop
cltd
movsl
jge
jae
stos
sbbl
ljmp
clc
mov
pusha
mov
clc
mov
mov
add
xor
into
stc
out
push
outsb
shl
ret
dec
shll
inc
push
loop
or
cmpb
aaa
jmp
stos
pop
xor
pushl
add
fstpl
lret
mov
repnz
sbb
mov
outsl
jnp
jp
dec
mov
enter
iret
mov
cmpsl
call
dec
es
fidivs
in
and
nop
mov
cli
pop
push
xlat
jb
shlb
mov
lret
std
sub
lods
leave
shlb
mov
sbb
sbb
dec
mov
sahf
pop
in
xor
xchg
mov
mov
das
jmp
and
or
leave
cltd
pushf
out
mov
rorb
dec
push
adc
xlat
lds
and
sbb
xchg
fsubs
mov
cmpsl
jno
hlt
in
mov
ficoml
es
push
xor
xor
sbb
push
loop
std
jle
jge
jmp
xchg
mov
leave
aam
fcomps
addr16
pavgw
cmp
add
out
push
faddl
roll
loop
and
into
pushf
shrl
ja
cmp
cli
ja
xchg
push
push
out
outsb
push
sub
jmp
shlb
inc
pop
xchg
aas
or
mov
and
outsb
dec
loopne
mov
repnz
xor
dec
dec
dec
sub
into
mov
lods
incl
shll
mov
or
jl
test
imul
mov
xor
sub
daa
dec
jno
push
and
sti
pop
push
aaa
dec
mov
movsb
dec
add
rcll
clc
pop
sub
mov
iret
jo
outsl
pop
jge
push
fistps
push
push
fwait
pop
fistl
jge
adc
xchg
add
cs
mov
mov
xor
dec
fwait
push
push
inc
icebp
mov
cli
jl
mov
ja
aam
sub
imul
dec
and
dec
jnp
test
sub
aam
into
subb
test
ss
cmp
loopne
mov
sahf
mov
cmp
sub
bound
push
adc
push
test
push
cmpsb
lcall
push
mov
inc
mov
mov
sub
sbb
stos
loope
jno
sbb
xor
scas
lahf
adcb
cmp
push
das
pusha
pop
mov
pop
frstor
push
fimuls
data16
mov
out
cld
mov
and
sub
popa
lea
adc
jno
iret
sub
xchg
aas
xlat
adc
cld
and
fsub
lock
jb
jbe
cmpsl
sbb
xchg
dec
pop
test
mov
out
aam
je
stos
lds
xchg
stos
test
loopne
xchg
sbb
add
mov
jne
cmp
xor
push
inc
ss
addl
aaa
and
xchg
pop
int
cmpsb
xor
cld
mov
jp
push
mov
ljmp
movsl
mov
xor
andl
stc
lahf
adcb
and
adc
ljmp
sub
mov
lock
cmp
mov
and
adc
add
loope
dec
mov
das
xchg
and
sbb
xchg
mov
or
adc
and
sub
lock
and
adc
dec
cs
adc
cli
aas
jl
mov
stc
aas
mov
pop
sbb
lds
fists
sbb
dec
pop
ret
test
mov
push
dec
xchg
into
or
ret
push
push
mov
dec
mov
lahf
mov
cmp
sub
push
adc
add
call
mov
xor
push
cltd
adc
jmp
mov
mov
mov
lds
out
push
pop
loope
push
repnz
pop
test
les
fldl
insb
pminsw
into
lds
dec
insl
cmc
fadds
out
sbbb
hlt
or
push
mov
sbb
mov
rcr
in
or
inc
push
repz
mov
xchg
in
sub
fimull
nop
js
pop
cmpsl
push
jl
mov
pop
out
out
cmc
fidivrl
mov
hlt
and
enter
jp
xchg
cld
pop
xlat
sub
xor
xlat
xchg
mov
fs
mov
push
imul
pop
xor
push
xlat
cmp
xchg
xor
loopne
pop
sbb
add
cltd
pop
and
dec
push
push
or
pop
push
into
out
xor
jmp
sbb
jmp
pop
sbb
xchg
sti
aas
outsb
adc
lret
mov
sarl
jg
adc
in
jmp
into
add
notl
enter
scas
adc
add
mov
pop
push
pop
popa
mov
fisubl
mov
ja
cmp
inc
pusha
in
xchg
lods
das
mov
ds
dec
jge
or
push
cmpsl
daa
or
ljmp
into
and
lcall
pop
in
xlat
xchg
xchg
or
fidivrs
ficompl
or
jne
frstor
frstor
push
xchg
dec
add
inc
aaa
cmp
adc
adcl
jbe
xchg
ss
hlt
repz
push
and
add
stos
xor
mov
inc
lcall
lahf
pop
fsub
push
call
ljmp
push
ja
jb
mov
nop
adc
sub
imulb
jae
stos
sub
mov
imul
in
and
into
shr
push
shr
push
int3
ss
dec
sub
out
test
add
push
test
data16
push
mov
mov
sbb
mov
add
outsl
imul
and
out
pop
data16
push
jmp
lock
inc
inc
and
popf
jnp
sub
sbb
cmp
inc
xchg
out
jg
fcmovne
xchg
out
inc
out
mov
test
lahf
xchg
cmc
mov
aam
add
adc
push
in
xor
std
dec
sbb
and
ds
lea
adc
mov
mov
jbe
js
adc
adc
repnz
pop
aam
mov
jo
sbb
ret
lods
inc
stos
movsl
outsb
in
addr16
jp
ret
in
hlt
dec
xor
rolb
loop
add
out
test
xor
mov
dec
adc
bnd
repz
out
sbb
jo
leave
rcrb
mov
aaa
pop
sub
lods
ret
nop
insl
out
cli
in
into
pop
push
jnp
ds
addl
dec
or
pop
iret
pop
sbb
jmp
addr16
test
arpl
loope
push
xchg
mov
pop
ja
or
mov
sti
mov
push
lret
mov
fstl
or
push
jl
ds
xor
imulb
mov
addb
mov
mov
rol
pop
pop
pop
std
xchg
add
pop
loope
ds
jns
clc
fisubl
mov
fbstp
pop
ret
fdivl
fisttpll
push
inc
push
fisttpll
idivb
dec
sub
ret
test
pusha
cmpb
mov
mov
js
loope
popa
xor
jbe
or
shl
movsl
pop
pop
pop
pop
xorl
and
dec
inc
sbb
add
jmp
pop
insl
scas
xchg
int3
add
cmp
push
dec
les
pop
fwait
popf
in
xchg
mov
sbb
sbb
mov
rclb
mov
push
popf
outsl
hlt
ljmp
lock
lret
mov
sbb
in
lret
test
nop
popa
pushf
gs
movsb
loop
daa
cmpl
and
loope
jb
hlt
jns
mov
fsubs
and
dec
jecxz
loop
mov
pop
inc
mov
xchg
sbbb
jne
add
adc
push
xchg
notb
mov
dec
cli
aam
push
ljmp
in
stos
xchg
inc
lret
adc
daa
sbb
push
jge
lock
xchg
test
movsb
loopne
mov
incl
pop
xchg
or
lahf
jne
pop
daa
pop
mov
outsb
rcll
nop
leave
jg
popf
iret
lret
cmp
pop
iret
xchg
cmpl
or
test
fsub
sbb
fs
xor
insl
dec
xchg
jns
insb
in
or
mov
aam
lods
add
repnz
ss
and
pop
fcoms
or
pop
imul
sub
aas
mov
andb
dec
in
data16
fcomip
out
sbb
jecxz
xchg
data16
xor
nop
aam
cmp
into
fs
mov
scas
jae
push
dec
sub
mov
mov
movsb
popf
clc
xor
jg
xchg
testb
pop
rcrb
cmp
in
std
cmpsl
cli
xchg
inc
mov
shrl
test
jns
jmp
jg
fsubr
xorl
push
out
ljmp
mov
fidivl
jge
inc
pusha
dec
cld
jp
movsb
jmp
int3
leave
xor
and
sbb
popa
pop
or
fstps
mov
loope
pop
pushw
jmp
pusha
roll
scas
test
popa
psrlw
mov
adc
pop
cmpsl
adc
mov
lahf
mov
fistpl
mov
int
arpl
xchg
mov
mov
sub
bnd
pop
pop
jge
xchg
sub
out
into
pop
xor
ret
mov
out
nop
push
cmp
rep
shrb
in
mov
hlt
cmp
negl
fbld
loopne
mov
mov
mov
out
or
rcr
cmpsl
jmp
fdivrl
sbb
push
push
xor
imul
pop
xchg
xor
mov
mov
mov
lds
push
sbb
mov
rolb
fdivs
inc
je
mov
dec
ljmp
sbb
cmp
jne
movsl
sub
dec
scas
xor
lods
jne
icebp
push
movsb
sbb
mov
imul
pop
cmc
fstpt
mov
stos
cmp
aad
aas
jns
adc
mov
faddl
mov
cmp
pop
adc
outsb
adcl
mov
and
in
pop
imul
push
dec
pop
mov
shll
nop
mov
es
xchg
cmc
inc
pushf
cltd
add
xlat
push
push
mov
sub
andl
jb
insl
sub
inc
fimuls
bound
and
cmp
push
dec
sbb
mov
fldcw
movsb
ficoms
push
fwait
inc
mov
mov
daa
adc
adc
xchg
push
push
dec
bound
in
adc
sbb
inc
cmp
cmp
and
cmpsb
imul
std
mov
mov
dec
or
or
fimuls
or
movsb
xchg
push
xchg
push
data16
jns
frstor
mov
mov
jo
adc
pop
lcall
xor
push
or
add
pop
das
fildl
hlt
adc
pop
lret
rorl
lods
call
dec
fists
lock
int3
and
cmpsb
or
lahf
lock
mov
cld
in
mov
int
repz
xchg
sbb
mov
bound
cltd
cwtl
arpl
mov
rclb
cmp
jae
shlb
lret
mov
cli
push
shlb
sub
mov
mov
mov
sbb
cmpsb
xchg
lock
fs
stos
pushf
mov
in
mov
arpl
mov
or
arpl
fistpl
in
xchg
popf
sub
jne
cld
jge
inc
out
jmp
mov
ljmp
test
cmp
xchg
xchg
xor
dec
pop
loopne
fisttpll
dec
push
sbb
arpl
test
ret
cmp
jo
sub
inc
in
jns
rolb
mov
test
or
pushl
daa
out
into
mov
hlt
fwait
popf
push
loop
cmp
push
ret
and
push
xlat
and
shrl
jecxz
movsb
pop
pop
insb
pop
lods
movd
jmp
sbb
jbe
out
mov
sbb
lahf
popf
and
adc
mov
insl
jg
mov
inc
push
dec
mov
stc
leave
aad
icebp
mov
add
jns
les
mov
jo
push
std
cmp
mulb
ret
jb
outsb
xchg
add
adc
cmpsl
fisubs
cmp
lahf
jg
dec
jns
fistl
push
sub
sbbl
pop
mov
jb
int
cltd
out
dec
lcall
push
aam
pop
mov
mov
add
inc
into
pop
and
lcall
push
push
divl
mov
adc
addr16
pop
dec
in
lcall
aaa
mov
in
outsl
repnz
fwait
hlt
sub
pop
mov
mov
in
cld
push
shll
or
in
mov
cmpsb
mov
in
add
push
push
clc
les
rolb
dec
cs
fwait
ds
orb
shll
nop
pop
push
jae
jle
add
in
adc
sbb
cmp
scas
or
mov
and
rorl
pop
mov
sahf
dec
mov
ss
mov
adc
mov
inc
cmp
push
call
pop
or
fbld
popa
imul
sub
xchg
jae
pop
std
pop
xlat
mov
xor
fidivrl
sub
and
sbb
mov
inc
mov
repnz
push
call
jp
or
lret
fsubrs
sti
dec
push
dec
fadds
or
cltd
or
int
sbb
out
and
sub
mov
clc
dec
mov
xor
leave
inc
mov
sbb
cmpb
jno
pop
addr16
mov
or
mull
pop
mov
test
call
not
adc
xchg
mov
pop
jbe
push
ret
or
jae
sbb
mov
imul
jnp
fidivrl
pcmpeqb
movsb
loope,pt
jne
repnz
and
fbld
pop
sub
cmp
mov
mov
sub
cmpsb
cmpsl
dec
loope
out
jmp
pop
mov
inc
sbb
cltd
dec
lock
aad
bound
jns
cld
push
jmp
mov
mov
rcrb
test
xchg
in
stos
scas
repz
dec
dec
jge
inc
push
idivb
popf
lods
test
int3
in
jae
sti
cmp
ss
jo
fcomp
add
xor
sbb
inc
fwait
and
pop
push
clc
xor
push
mov
lds
and
out
fstps
flds
xchg
or
pop
out
sub
cli
mov
insb
orb
ljmp
mov
or
hlt
or
pop
sti
pop
jge
stos
jecxz
mov
lods
mov
dec
clc
mov
repnz
stos
arpl
mov
js
ljmp
push
insb
xor
int3
jge
jae
or
mov
aaa
imul
pop
mov
lahf
push
cmpsb
icebp
cmp
mov
repz
ja
mov
repnz
dec
jle
adc
repnz
cs
addr16
inc
enter
push
ja
ja
mov
or
add
xchg
and
outsl
jle
std
sbb
sub
mov
inc
or
or
adc
add
fnstcw
and
mov
dec
xchg
mov
leave
les
shll
mov
dec
les
adc
ljmp
cmc
iret
lods
pop
pop
and
in
fwait
stc
sub
addr16
pop
fldl
and
lret
sbb
xor
lahf
fs
sub
jnp
xor
out
adc
cmp
mov
loop
sub
jae
or
jecxz
repnz
inc
lcall
jne
pusha
push
std
cmc
pop
shll
push
outsl
stos
mov
cli
lret
into
popa
push
je
pop
sub
add
enter
jle
inc
movsl
stos
insl
je
jbe
sub
cmp
jp
or
out
jae
clc
mov
enter
scas
adc
pop
aam
xor
xor
mov
sahf
fcoms
adc
test
mov
test
xorl
stos
and
clc
mov
mov
in
fldl
daa
xor
nop
int3
sub
aam
inc
mov
iret
les
push
inc
cmc
arpl
imul
add
push
jmp
scas
mov
add
push
mov
pop
enter
xchg
or
xchg
pop
or
pop
xor
rcll
xchg
into
cmp
repnz
mov
jmp
mov
adc
out
add
imul
es
add
pop
inc
add
pop
es
ret
cwtl
pop
lret
jbe
fnsave
mov
jge
shlb
xor
out
mov
dec
pop
cli
loop,pn
sub
aam
sbb
sub
and
add
adc
mov
dec
mov
add
negb
cmpsb
in
cs
jne
out
shll
sub
push
cmc
repz
adc
mov
fbstp
inc
pop
mov
xor
shrb
xor
popa
iret
inc
ficoml
jbe
sahf
jno
aas
mov
stc
add
loope
daa
xor
push
lds
test
xchg
xlat
inc
addr16
cmpsl
lods
push
inc
insb
adc
inc
pusha
xchg
or
cwtl
scas
sub
or
cmc
jne
arpl
call
sbb
sub
mov
jmp
filds
adc
notl
mov
imulb
lahf
push
jno
xor
movsb
ja
jnp
or
mov
sbb
xchg
outsb
mov
xor
and
clc
mov
and
cmp
outsb
stos
inc
sbb
pop
lea
push
jg
push
xorb
adc
push
jmp
dec
sub
or
repnz
adc
push
push
sti
stc
mov
push
out
jecxz
push
push
clc
dec
xor
or
loop
in
fwait
iret
mov
test
jb
cld
push
mov
push
xor
push
movsb
add
mov
jbe
mov
dec
inc
mov
outsb
and
sbb
jnp
and
jg
stos
xlat
mov
mov
enter
test
push
cld
repnz
gs
mov
mov
sbb
push
mov
repz
xor
stos
stos
outsb
in
subb
out
outsl
fsubl
cmp
loopne
in
clc
loop
pop
add
cli
lock
push
icebp
daa
out
xor
inc
xchg
jl
call
jns
mov
fcompl
xor
cltd
push
loopne
je
or
outsb
fimull
dec
mov
popf
lret
pusha
xchg
ret
loopne
adc
sbb
sub
add
out
xchg
nop
loop
and
orl
and
cli
push
push
dec
pushf
std
jecxz
scas
pop
fsubrs
sbb
mov
in
push
push
imulb
dec
push
je
repnz
and
and
out
dec
test
inc
mov
aaa
das
in
popa
mov
cwtl
pop
mov
les
add
pop
or
lds
pop
or
andl
add
pop
push
insl
dec
inc
xorb
mov
or
or
in
in
xchg
cmp
xor
sbb
mov
xchg
sub
cli
bound
out
sub
add
jle
iret
jno
mov
jp
inc
mov
loop
imul
daa
sub
xchg
sub
push
jno
add
idiv
leave
addr16
arpl
les
cmp
lds
cltd
leave
addr16
push
jg
sbb
popa
aas
jne
fimuls
imul
repz
pusha
cli
or
in
add
notl
cwtl
xchg
loopne
xchg
movsb
cmp
push
xchg
push
lods
cmp
jno
ss
addl
jae
mov
dec
lea
rcll
subl
mov
xor
popa
or
add
fisubrs
jg
decb
fisubrl
cmpsl
adc
and
sbb
ljmp
jbe
lcall
fcompl
test
dec
jnp
inc
mov
sbb
fisttpl
dec
js
mov
fstpt
inc
cmp
mov
repnz
sti
push
dec
jb
pop
adc
fadd
xchg
sub
inc
xor
jo
out
xor
pop
add
jne
pop
xchg
loop
setns
push
repnz
inc
sub
or
mov
push
sbb
imul
adc
pop
pop
pushf
mov
das
xor
jp
sub
test
xchg
cld
js
lea
stc
popf
cmpsb
mov
sub
xchg
lahf
mov
icebp
adc
fwait
push
lock
jmp
loop
loop
cmp
jbe
mov
push
xor
cmp
jge
shrb
and
ficomps
imulb
pop
add
stc
mov
pop
inc
sbb
sbb
xor
adc
movsb
lret
addr16
test
mov
ror
mov
aad
fs
sub
lret
sbb
pop
pop
addr16
push
lds
negl
mov
mov
aaa
rcll
shl
repz
push
pop
out
xor
xchg
dec
iret
mov
fmuls
das
push
pop
sbb
out
mov
lcall
dec
inc
add
jae
scas
std
jno
mov
cmp
jge
sbb
mov
inc
jb
inc
outsl
dec
or
xor
jo
lock
pusha
test
push
cmpsl
aas
mov
mov
push
jb
xchg
lcall
lods
adc
sub
mov
mov
mov
mov
iret
ficoml
jp
fimull
aas
jae
popf
push
mov
pop
nop
or
push
scas
pop
je
imul
sub
out
jg
out
cmp
push
push
mov
in
icebp
inc
xchg
lret
movb
mov
push
rcrb
pop
daa
int3
and
fwait
adc
test
mov
xor
and
idivb
add
sub
fs
rclb
je
outsl
adc
lds
or
outsl
out
clc
xchg
loop
lds
cmp
push
out
jecxz
stos
out
clc
mov
cmp
jns
cmp
push
push
pop
in
andl
lahf
jp
sar
dec
mov
shr
xchg
in
out
mov
or
mov
inc
insb
clc
add
mov
xlat
fsts
and
xor
or
mov
test
sbb
jl
imul
das
add
jnp
cmp
xchg
fwait
sub
cmp
lock
add
clc
out
jl
lods
daa
jle
dec
lea
aas
inc
or
xchg
cwtl
int
test
and
jae
and
jp
push
mov
xor
insl
repnz
pop
dec
xchg
enter
sub
pop
inc
imul
adcl
cmp
jne
bound
mov
int3
mov
fnstcw
cmc
dec
mov
sbb
and
push
ss
push
mov
add
xor
inc
add
fsubp
mov
pop
mov
mov
stos
adc
xor
or
ret
and
int3
xchg
jg
aam
adc
in
andb
mov
adc
mov
stos
mov
cmc
dec
shl
sub
lds
inc
repnz
stc
push
push
cmc
rclb
cmp
adc
movsl
pop
mov
xor
mov
gs
jp
ffreep
pop
ret
test
pop
pop
adc
shll
stos
and
rcrl
popa
out
cld
xor
jb
arpl
inc
scas
pop
imul
pop
data16
xor
mov
sbb
mov
pop
xor
jg
adc
out
lahf
cld
out
popa
sub
inc
pop
gs
scas
in
lods
movsb
inc
jne
and
jbe
push
and
or
pushf
js
sub
cmp
shll
add
outsl
repz
cmp
mov
insb
adc
in
cmp
out
lea
cmpb
outsb
push
xlat
pop
sbb
xor
lea
dec
mov
mov
push
sbb
mov
shrl
imul
mov
out
movsb
push
fsubrl
aam
sub
jge
orl
jge
ds
lea
inc
ljmp
sbb
xor
sti
into
push
push
sbb
dec
mov
dec
xchg
pop
addr16
and
xchg
popa
mov
clc
nop
push
mov
or
cli
add
push
mov
out
sarl
inc
sub
vaddss
mov
ret
cmpsb
xor
ret
pop
or
inc
sbb
mov
mov
mov
sub
aad
dec
daa
and
xchg
adcb
mov
jle
push
int
inc
mov
mov
or
inc
jmp
xchg
es
mov
loopne
sbb
push
add
test
loope
ja
mov
mov
mull
mov
inc
xlat
cmc
aaa
icebp
imul
pop
jmp
mov
adc
inc
sub
popa
inc
test
flds
bnd
xor
or
notb
addb
shr
push
aad
dec
in
sbb
in
mov
scas
pop
imul
xchg
movsl
adc
lret
inc
lods
loopne
dec
xchg
imul
and
mov
shlb
cmp
aaa
ret
xor
loop
out
popf
mov
adc
insl
cmp
inc
mov
mov
mov
in
cmp
xor
shlb
xor
and
call
sbb
lret
push
pop
and
leave
test
mov
cltd
jge
nop
in
ds
shll
fldcw
shlb
lods
mov
loope
jo
test
fwait
aad
jp
cld
addb
fists
cmp
pushf
sbb
fistps
ret
gs
loope
lcall
sbb
mov
sub
icebp
out
lock
add
addr16
or
xor
sub
xor
mov
lea
cmpsb
pop
add
and
pop
pushw
push
xorb
dec
xor
insb
mov
xchg
mov
in
loopne
ljmp
subb
nop
test
pop
pop
addb
inc
and
push
loopne
add
mov
popf
adc
lret
pop
cmp
adc
jns
adc
das
in
gs
sub
or
inc
popa
push
sub
out
lea
jne
gs
mov
ljmp
sub
pop
aad
sarb
bound
push
ret
dec
xlat
sbb
sub
mov
das
pop
rcll
jno
data16
in
jns
rclb
mov
stos
rol
xchg
push
std
and
nop
jp
mov
outsl
or
lret
movsl
cmpsl
ficoms
push
rclb
pusha
mov
mov
mov
fists
dec
push
jne
and
aad
mov
mov
pop
or
lock
adc
out
fwait
and
push
in
fsts
push
in
out
mov
cs
pop
sub
shlb
mov
shlb
mov
movhps
inc
pop
xor
scas
inc
mov
jnp
int
pop
mov
push
movsl
sbb
addr16
iret
cmp
sub
adc
sbb
iret
jle
das
call
loop
xor
clc
movsl
jp
or
push
jnp
fnstenv
aad
xchg
into
test
mov
int3
nop
test
test
xchg
cmpsb
mov
cmovl
and
mov
mov
add
stc
adc
pop
mov
data16
mov
jle
pushf
pop
or
jecxz
clc
inc
js
aam
cmpsb
pop
int
fcoml
push
rclb
pop
adc
pop
and
mov
or
sub
inc
stos
aad
sub
mov
pop
and
aam
pop
sbb
cmp
pop
lea
mov
incb
popf
popa
adc
sub
fcoml
xor
cmp
icebp
mov
jbe
cmpsb
and
arpl
repz
test
mov
lea
scas
repz
push
add
repz
adc
inc
and
sbb
inc
addr16
ja
mov
dec
outsb
sbb
cmpsb
push
arpl
lods
iret
add
pop
sub
mov
mov
sub
dec
push
xor
aam
popf
lret
lret
jbe
leave
outsb
push
stos
les
das
jle
out
or
js
add
mov
mov
std
lret
xchg
mov
jnp
call
dec
push
and
adc
leave
sub
js
dec
das
hlt
stc
shll
js
ficompl
int
mov
jae
scas
sarb
mov
jecxz
sub
loope
outsb
mov
imul
or
xor
cli
sub
cmp
mov
cmp
mov
dec
push
addr16
insb
jg
into
jecxz
mov
cwtl
scas
jge
cmp
push
add
in
pop
mov
popf
dec
iret
fistps
std
es
sub
leave
mul
pusha
repz
stos
jg
jno
fs
andl
xor
cld
fs
inc
inc
push
std
sub
push
or
cmpsl
inc
repnz
xor
sub
cs
cmp
sahf
add
movsb
movsl
negb
push
inc
cld
lret
mov
push
sub
mov
sbb
ljmp
nop
xor
xchg
sbb
test
jecxz
pop
push
cli
push
xor
call
xchg
jp
scas
add
loop
in
cmp
mov
mov
jbe
cwtl
or
fwait
jbe
pop
and
loop
lret
xchg
imul
popf
int3
and
or
sbb
rcrl
pushf
pop
pushf
and
dec
mov
dec
adcl
cmc
loop
xchg
pop
mov
pusha
icebp
dec
push
fdiv
dec
jge
sub
sar
inc
sub
ljmp
jmp
shrl
inc
stos
testl
addl
aam
aad
lock
jp
aad
pop
mov
jo
js
and
add
cltd
fwait
ja
cmpb
idiv
pop
mov
out
fidivrs
mov
pop
fmuls
adc
inc
div
lds
xor
je
xor
stos
sahf
cmp
popf
inc
sub
and
xor
outsb
out
sti
das
pop
sub
dec
cmp
rcrl
les
jge
js
adc
or
jmp
push
daa
int3
sub
out
xor
sti
push
sub
xchg
xchg
js
movsl
xor
mov
in
in
inc
inc
andb
pop
loopne
jno
fcomip
push
rcrl
pusha
inc
cli
pop
mov
adc
add
sbb
mov
or
scas
xor
mov
les
inc
inc
add
sbb
vsqrtpd
jbe
mov
scas
pushf
xchg
add
cmp
aad
dec
mov
sbb
pop
pusha
xchg
mov
jne
add
sahf
loopne
movl
pop
stos
push
cmpsb
idiv
repnz
loopne
xor
cmp
mov
test
jmp
data16
mov
dec
and
mov
out
pop
mov
mov
leave
sahf
mov
xchg
aad
mov
stc
push
pop
out
jmp
mulb
mov
dec
add
push
dec
pop
push
imul
or
inc
and
or
inc
pop
std
push
leave
inc
aam
sbb
scas
mov
push
dec
cmp
cmp
adc
das
push
movsl
scas
call
ss
sbb
out
xchg
shl
xchg
inc
scas
mov
scas
jnp
cmp
jp,pt
lcall
dec
ficoms
or
iret
xor
mov
pusha
or
cmovnp
daa
dec
xor
loopne
insb
test
push
test
and
mov
je
sbb
insl
push
scas
leave
out
sub
lock
outsl
pop
mov
cli
mov
push
lea
adc
pop
jge
push
inc
or
sti
loopne
rorb
jb
in
imul
sbb
jno
cmpsb
stos
fnstcw
sti
nop
mov
imul
jecxz
xchg
stos
cs
jl
mov
fstpl
fwait
push
popa
adc
push
out
out
cmp
mov
test
cs
mov
and
cmp
out
movsl
dec
push
dec
sub
and
xchg
outsl
push
mov
ror
fnstcw
fldenv
sbb
enter
cmc
push
addr16
jne
push
sti
lds
mov
xor
imul
stos
ret
mov
rcll
fwait
jae
push
mov
add
xor
lahf
sub
pop
test
push
sub
test
pushfw
lea
push
and
and
jnp
data16
sub
fbld
sub
pop
pop
call
push
lret
or
dec
rclb
popa
sub
das
push
das
int3
shll
cli
add
cmp
pop
and
jnp
outsb
fcoml
mov
dec
cmc
push
roll
data16
ret
xor
xchg
cld
mov
jmp
jmp
cmp
in
adc
add
aad
movsl
adc
mov
push
mov
daa
cmp
dec
sahf
loope
lds
mov
cmp
or
or
dec
sbb
push
inc
in
ja
stos
push
shlb
pop
jecxz
shll
fstpt
insb
mov
stos
mov
aad
mov
mov
in
orl
mov
push
mov
outsb
lret
pop
cmp
les
dec
mov
divl
lods
loopne
cs
jmp
aam
mov
cli
lds
ficoms
mov
fdiv
add
out
push
xor
outsl
jo
fistpll
lret
or
inc
jmp
xlat
mov
les
call
sahf
mov
cmpsl
repz
orl
lea
cmpl
mov
pop
inc
bound
cli
ret
push
pop
push
sbb
push
xchg
push
testb
inc
jl
pop
add
ljmp
ret
adc
xchg
and
pop
mov
test
add
ss
jnp
test
jo
or
iret
sbb
paddq
in
cld
mov
jns
pop
mov
push
into
xor
mov
pushf
cs
gs
shrb
outsl
cmpsb
adc
pushf
pop
xchg
xlat
rcrl
xor
sbb
inc
das
or
pop
pop
mov
test
sub
or
imul
push
stos
add
jecxz
xchg
jg
cwtl
mov
jp
jl
insb
cwtl
sub
mov
push
xchg
mov
pop
add
adc
ror
xchg
add
mov
out
test
pusha
ja
or
lods
xchg
cwtl
mov
dec
pop
push
jmp
adc
fstpl
dec
fucomi
xchg
roll
add
adc
lcall
cmc
div
pop
fadd
add
pushf
xchg
pop
fstps
add
pop
inc
mov
add
pop
push
je
movsl
out
cmp
testb
insb
push
pop
inc
test
ret
das
sub
push
jle
out
shlb
mov
cmp
and
push
or
rorl
mov
jb
cwtl
addl
lcall
cwtl
cwtl
jbe
rcl
repz
incb
stc
movsl
orb
or
jecxz
push
shl
repnz
mov
clc
mov
fldcw
pop
xchg
mov
icebp
mov
ret
mov
imul
pop
dec
test
ljmp
aad
xlat
xor
mov
lods
jecxz
mov
lcall
jecxz
sbb
negb
leave
push
mov
jnp
gs
mov
outsb
sbb
mov
sbb
int
movsl
adc
hlt
repz
stos
mov
cmp
lods
mov
dec
or
lds
test
mov
pop
sbbl
xchg
rcll
xor
pop
jge
cwtl
repnz
inc
and
out
lods
jne
dec
xchg
lock
lock
inc
je
sahf
popf
cld
repnz
popf
out
in
dec
jecxz
cmp
mov
push
push
xchg
loopne
inc
ljmp
hlt
pusha
or
out
sub
mov
add
mov
rorb
lret
sbb
lods
jae
inc
mov
notb
adc
sbb
test
push
jp
mov
lods
or
leave
ss
das
cmp
jmp
pop
decl
fisubrs
xlat
jb
pop
in
adc
cmpsl
roll
pusha
mov
mov
int3
stos
movsl
push
outsl
les
mov
or
icebp
pusha
rcrl
sbb
and
int3
call
sub
jb
into
mov
aad
sbb
stos
cmp
ss
in
rorl
adc
dec
add
bound
push
mov
mov
icebp
scas
inc
mov
in
inc
push
push
lods
movsb
or
cmp
mov
pop
test
mov
rcrl
xchg
pop
mov
cwtl
std
add
cmp
push
das
mov
loopne
xor
sbb
imul
mov
ljmp
in
cmp
test
sbb
sub
outsl
dec
fdivl
lcall
stc
push
data16
xor
cs
mov
nop
jne
lahf
cmp
nop
loop
push
cwtl
inc
pop
and
adc
add
imul
or
std
dec
pop
call
shr
xor
adc
sub
in
jle
or
cmp
jge
and
adcl
sbb
mov
mov
xor
shrl
jno
and
inc
pusha
xchg
adc
add
gs
cmpsb
inc
adc
add
push
mov
push
cmp
aam
dec
stos
imul
jbe
and
mov
jns
sub
mov
outsl
sbb
shrl
pop
mov
mov
mov
repnz
xor
lock
mov
pop
lret
xlat
fadds
xor
push
outsb
fdivs
out
and
push
mov
sub
push
add
ljmp
sub
push
test
xor
dec
push
jno
cmp
cmp
ret
jmp
fistpll
scas
int3
cld
sbb
jbe
inc
pop
jg
pop
cmp
ljmp
xorl
mov
fiaddl
fnstenv
xchg
je
cmp
cmp
jmp
and
mov
push
push
mov
stos
jo
cmp
popa
cli
pop
aam
enter
ss
repz
lock
cmp
daa
pop
popf
lock
push
aad
aam
jnp
cwtl
dec
fistps
or
int3
test
mov
xor
pop
dec
and
insb
aam
ja
add
or
call
or
push
das
pop
jne
test
movsl
and
sub
cmp
sbb
outsl
cmp
mov
cmp
adc
mov
mov
shrb
sub
pop
push
nop
mov
sbb
sbb
mov
sub
xchg
sub
push
add
lds
bound
inc
xchg
push
vcvtpd2dqx
ja
jbe
add
aaa
xchg
inc
pop
mov
pop
pusha
sbb
mov
sub
rorb
ss
mov
add
popa
push
inc
push
sbb
inc
stos
cli
hlt
push
adcl
sub
cmp
int3
loop
enter
pop
push
scas
and
dec
pop
mov
jb
xor
into
jns
mov
je
xchg
pop
ficomps
xchg
invlpg
cmp
notb
sti
cmp
mov
cltd
stos
or
xlat
push
jne
test
and
in
dec
push
data16
enter
jno
add
ljmp
lods
insb
pop
dec
ja
inc
insb
into
in
mov
xor
lock
pop
xor
push
ljmp
jbe
push
inc
jp
das
inc
mov
inc
sub
sbb
cli
enter
pop
ror
aam
in
int3
push
mov
pop
jnp
jne
hlt
dec
mov
popf
lret
stos
aas
xor
data16
mov
jo
es
fwait
mov
loope
scas
inc
push
add
ret
test
lahf
cmc
imul
iret
cld
and
pop
jb
mov
mov
jbe
mov
jmp
fnsave
push
lahf
xor
pop
mov
pusha
fwait
test
jmp
sub
or
arpl
outsl
add
pop
pop
in
test
stos
sbb
jmp
adc
push
rclb
and
add
iret
push
lock
stos
aaa
outsb
sbb
and
sbb
pop
sbb
fstps
rclb
dec
lods
jge
loope
ja
loopne
jle
cwtl
xor
hlt
push
sbb
je
push
rcll
movsb
out
inc
repz
pop
fsubr
inc
inc
sub
dec
mov
cli
fldl
dec
pusha
mov
repnz
dec
xor
add
movsb
mov
aad
nop
ficompl
mov
fstpt
js
mov
mov
stos
mov
iret
inc
scas
lods
ret
out
outsb
pusha
mov
mov
sbb
xchg
mov
icebp
loope
and
out
pop
lcall
lods
cmp
ret
push
xor
push
and
pop
sbb
mov
sti
jecxz
lods
cmp
jmp
andb
mov
roll
pop
in
push
test
pop
cwtl
dec
nop
adc
sbb
jbe
test
fidivs
dec
pushf
jo
divl
popf
outsl
cmp
adc
sub
dec
jmp
loop
rcrl
xchg
dec
and
fistpll
ret
pop
arpl
lods
push
fisttps
fxch
notb
mov
lea
dec
cmpsb
xchg
lock
push
xlat
lcall
arpl
pop
pop
mov
orl
in
int
inc
mov
repnz
in
xor
inc
mov
lds
jle
push
int
sub
das
adc
mov
cs
pop
mov
repz
dec
or
test
mov
imul
mov
mov
daa
mov
popf
inc
sbbb
sahf
xchg
sub
add
pop
dec
mov
scas
lret
std
pop
push
cmp
jecxz
mov
mov
adcb
mov
or
fmull
call
dec
mov
test
cmp
icebp
push
lods
xor
push
and
fidivs
and
xchg
push
mov
or
dec
xor
pop
nop
ret
adc
pushf
enter
out
sbb
daa
inc
and
sub
jle
push
sbb
enter
out
sub
je
fwait
or
ret
pusha
inc
in
ret
jno
push
push
scas
and
loope
jecxz
insb
sbb
outsb
lods
adc
and
cwtl
arpl
and
shll
or
adc
out
push
negb
sarl
out
pop
adc
cmpsb
into
fiadds
mov
subl
add
xchg
mov
insl
aas
das
xor
pop
dec
movsl
mov
test
rolb
stos
insb
jg
xlat
repz
inc
push
xchg
lcall
push
pop
pusha
and
jnp
xor
fisubs
mov
paddusw
or
movsb
fistps
push
mov
out
xchg
dec
nop
call
hlt
xchg
xchg
mov
loope
call
popa
mov
mov
cmpb
in
or
mov
jae
mov
sub
insl
dec
dec
lret
ret
js
icebp
push
std
out
je
cmp
adc
test
cmp
ja
jno
push
movsl
ja
xor
das
aas
xchg
aad
jae
addb
mov
fwait
sub
xor
adc
hlt
cmpsb
cltd
mov
add
loop
arpl
mov
mov
jg
aam
sti
sub
cmpl
or
loop
lret
jle
jnp
lahf
sar
loope
int
jne
and
jae
cltd
das
movsl
inc
push
inc
call
into
xchg
out
imulb
sub
shll
je
rolb
fcoms
and
enter
mov
push
jle
add
pop
dec
push
fnsave
cmp
nop
cmp
icebp
int
dec
xor
cmc
aad
gs
cs
xor
scas
cli
xchg
es
stc
call
rol
das
aaa
mov
in
popa
dec
or
push
mov
push
and
adc
lret
scas
dec
insl
xchg
add
stos
in
and
adc
sti
test
icebp
fadds
inc
xchg
rcll
mov
mov
leave
push
jae
sub
sti
xchg
hlt
cmpsl
pushf
fimuls
hlt
ret
das
lcall
outsl
cmp
clc
mov
adcb
push
notl
clc
push
arpl
loopne
sbb
outsl
add
cmp
adc
and
lret
adc
test
movb
push
xor
adc
cmp
lret
push
pop
aam
test
std
adc
push
imul
push
cld
sub
dec
sub
dec
xor
lds
cltd
rorb
pop
aam
int
mov
xor
cmpsl
daa
in
ret
jp
and
xchg
jl
xchg
push
ja
ret
jns
sub
push
jb
shlb
arpl
fst
inc
pusha
dec
inc
push
add
lds
arpl
lods
xchg
mov
mov
jne
and
loopne
shl
arpl
out
push
mov
cmp
add
mov
imul
test
insl
add
jl
and
in
jns
push
testb
in
mov
xor
xchg
add
xchg
mov
xchg
call
out
and
and
jp
push
jmp
xchg
fsubs
push
shlb
and
adc
hlt
pop
or
or
sbb
fcmovne
roll
shrb
sbb
pop
pop
fcompl
test
cltd
sbb
jae
cltd
movsb
nop
jle
bound
sbb
lcall
dec
out
ja
lds
sbb
mov
sti
push
je
cmc
movsb
ret
adc
xor
inc
mov
nop
jns
cmpsl
out
js
inc
xchg
inc
aad
jo
cmpsl
jle
cmp
mov
sbb
scas
mov
push
or
ss
adc
sbb
fnsave
std
push
in
cwtl
xchg
adc
xor
push
xlat
icebp
mov
sub
cs
aam
lods
dec
pop
sahf
adc
jns
jne
add
mov
call
in
in
or
pusha
aad
imull
add
push
or
outsb
dec
aas
push
jne
jnp
imul
jnp
push
mov
aad
gs
lahf
push
mov
jge
or
mov
sarl
repnz
sub
mov
pop
add
sahf
cmp
test
shrl
xchg
rcll
push
dec
cmp
call
jg
add
stos
and
mov
add
adc
xor
sbb
xchg
inc
aad
clc
aaa
popl
fnstcw
xor
add
loop
or
jecxz
inc
cltd
inc
test
mov
mov
inc
mov
lret
lods
in
mov
inc
fiaddl
lcall
sbbl
add
xchg
int
iret
inc
add
addr16
es
cmp
sbb
pop
cli
divb
mov
xlat
ret
cld
mov
pop
xchg
je
adc
xchg
out
dec
mov
push
call
aam
arpl
popa
sub
pop
testb
psubusb
jmp
mov
or
movsb
pushf
sub
mov
and
pop
adc
lsl
mov
imul
push
push
mov
sti
adc
loop
pop
nop
cmpsl
scas
fisubrl
adc
out
call
xchg
jnp
xor
jo
loope
mov
and
add
imul
dec
xchg
daa
xor
hlt
push
and
pushf
fsubrs
inc
mov
or
pop
ret
pusha
mov
ja
adc
insl
lret
inc
sti
xlat
lds
xor
in
ja
shll
pusha
pop
mov
push
cmp
fmuls
dec
popf
dec
in
xchg
inc
jmp
push
je
xchg
sub
pusha
pusha
movsl
scas
stos
movsb
outsb
outsb
dec
inc
push
mov
jnp
xchg
add
insl
arpl
imulb
dec
jmp
popf
pop
xor
mov
cmp
pop
test
loopne
fimuls
or
mov
push
sbb
loop
test
sbb
lods
xor
push
gs
sbb
in
insb
lret
enter
das
std
push
dec
in
fimuls
jg
push
mov
jb
addl
mov
cmp
push
or
adc
daa
hlt
out
fwait
scas
sti
cmpb
jo
inc
test
inc
out
cld
test
push
lcall
testl
inc
jp
pop
in
xor
mov
xadd
and
mov
mov
lahf
jne
add
jae
and
cmpsb
mov
mov
lea
loope
inc
jp
or
inc
xchg
or
sub
cltd
jnp
sbbb
jbe
dec
push
add
daa
sbb
xorl
push
stos
add
imul
xor
mov
sub
xchg
push
pop
into
inc
sub
and
sbb
mov
test
or
push
adc
sub
mov
popf
enter
filds
and
cmp
ret
push
jle
push
in
js
pop
loope
aam
adc
mov
mov
mov
hlt
push
push
sub
cmc
in
cli
hlt
xor
ds
stc
call
mov
add
ffree
dec
int3
mov
mov
mov
mov
cli
ret
mov
sub
or
push
icebp
cmp
andb
and
outsl
sub
mov
dec
or
dec
and
push
dec
dec
aad
stc
lea
add
adc
pop
mov
ds
adc
inc
xor
mov
leave
jns
inc
sbb
xchg
iret
inc
xchg
push
cmc
gs
sbb
adcb
jns
dec
scas
pop
jnp
push
sbbb
mov
or
fisttpll
mov
into
mov
clc
leave
sti
or
aaa
in
ret
dec
xchg
and
lea
out
movsl
mov
pop
cwtl
andb
mov
hlt
mov
repz
add
xchg
push
push
xor
fwait
loop
mulb
lcall
inc
push
sbb
pop
add
add
cmp
imul
adc
adc
jae
lret
xchg
mov
jp
imul
out
into
divl
roll
jno
inc
pop
insb
orl
aas
adc
in
lds
dec
fistpl
scas
add
les
sub
popa
sar
bound
and
adc
adc
fsub
fs
xchg
mov
sahf
ret
and
mov
outsb
dec
dec
and
sub
adc
call
imul
xor
das
mov
inc
cs
pop
js
ret
hlt
jae
mov
jbe
pop
mov
sbb
push
pop
cmpsb
data16
dec
jb
adc
addr16
icebp
pop
and
ss
insl
ds
mov
mov
in
lcall
dec
orb
xchg
xchg
dec
dec
push
out
cwtl
cs
lods
add
loope
pop
jg
push
sbb
fisttpll
pop
jle
std
lcall
loop
sbb
int
je
out
out
xor
jbe
clc
pop
clc
cmp
lret
xor
lods
jbe
mov
cmc
mov
jne
sti
sahf
mov
sahf
in
xor
imul
dec
adc
cs
movsl
add
lret
iret
data16
adc
push
cwtl
imul
das
sahf
fbstp
inc
sti
cmp
scas
dec
addl
test
pop
inc
aad
sub
lcall
fimull
add
mov
dec
in
cli
lock
pop
loop
xor
sub
lret
test
dec
and
pop
rcrb
xchg
dec
and
jecxz
cmp
btsl
adc
sub
test
pushf
andb
into
cwtl
xchg
mov
dec
scas
or
lret
dec
nop
outsl
aas
movl
xchg
add
push
fsubrp
add
out
mov
orb
arpl
imul
test
sub
icebp
mov
nop
jmp
enter
cmpsl
mov
jne
sbb
out
cs
andb
and
jp
sbb
aaa
dec
cwtl
and
outsl
mov
pop
adc
outsb
or
cmp
push
fimull
mov
adc
sbb
cwtl
enter
inc
pop
loop
out
ficompl
dec
sbb
sbb
stos
pop
outsl
xchg
add
xor
stos
ds
pop
or
in
lods
leave
sub
clc
sub
es
lds
xchg
inc
sahf
loope
faddl
data16
inc
dec
cli
push
lods
lahf
paddusb
push
aad
shrb
xor
clc
repnz
addl
ljmp
mov
outsl
xor
add
mov
mov
jnp
sbb
jnp
jecxz
mov
shlb
data16
mov
cmp
sti
or
cs
aas
pop
aad
xlat
inc
clc
lock
jno
jl
inc
cmpl
jl
dec
lds
mov
mov
jae
loope
aam
lahf
push
jmp
dec
xor
xor
lea
dec
sub
xor
aad
xor
fdivrl
sbbl
gs
jge
adc
mov
icebp
out
jmp
dec
push
mov
repz
aaa
movntps
outsl
add
cmp
imul
nop
xor
mov
ljmp
sub
sub
pop
dec
add
pop
jne
flds
push
js
fidivl
mov
fs
mov
lret
jbe
mov
jge
xchg
mov
jge
xchg
out
sub
mov
test
jb
sbb
jecxz
hlt
push
out
sbbl
mov
sub
jmp
cmp
shll
inc
inc
pop
mov
or
jno
mov
pop
or
add
lods
xchg
scas
ret
and
gs
inc
mov
or
fldt
insl
das
adc
mov
fcmovnb
insb
lahf
jmp
add
mov
daa
and
jbe
mov
add
xchg
pop
mov
ficoml
shrl
push
jmp
push
cmpb
add
cld
faddp
ss
mov
fwait
inc
sbb
out
daa
xchg
ss
or
popf
xor
pop
int
cmp
jl
push
test
cmpsb
hlt
out
cmp
or
adc
aas
cs
inc
scas
and
pop
fimull
scas
push
push
adc
inc
mov
bound
lods
sub
push
imul
mov
pop
fistpl
stos
dec
sbb
inc
dec
call
jae
ss
int3
xlat
xor
jne
repz
xchg
mov
jp
sub
mov
aam
inc
xlat
inc
cs
gs
loopne
and
loope
push
fwait
xor
mov
push
nop
cmp
daa
add
mov
push
push
cmp
outsl
bound
cmp
xchg
ja
ds
xchg
cltd
nop
or
dec
xor
movsb
inc
fidivs
xor
repz
aaa
pop
psubd
imul
pusha
imul
and
sub
xchg
pop
mov
push
sbb
loope
mov
subl
movsb
divl
fstpl
jmp
or
jae
into
pop
xchg
sbb
daa
dec
cmpsl
add
fbld
pop
js
in
js
inc
je
in
xor
pop
sbb
test
inc
mov
ljmp
dec
add
ja
dec
outsb
push
jbe
mov
aas
mov
lahf
fsubs
int3
jecxz
hlt
lods
arpl
in
cs
jg
ror
movsb
ljmp
inc
adc
test
daa
jecxz
ret
mov
or
in
es
scas
fcom
cmp
test
out
jp
loop
sti
cmc
gs
push
fnstsw
sti
cmovnp
mov
test
int3
repz
scas
jl
out
add
mov
lcall
in
mov
aaa
mov
push
xorl
xor
sbb
loopne
jbe
jle
jbe
and
int
xchg
rcrb
mov
mov
push
pop
mov
jne
inc
test
aad
xchg
jo
jmp
dec
sub
mov
sbbl
shll
cli
fwait
fbld
push
test
enter
xchg
sub
imul
and
fcmovne
xchg
out
stos
out
dec
xchg
jae
mov
pop
push
mov
loope
jmp
and
jecxz
je
xor
scas
cwtl
outsl
stos
insl
in
mov
dec
cli
in
sbb
cmp
iret
movsl
adc
in
push
leave
cmpsl
adc
jl
stc
adc
jl
or
mov
aam
dec
pushf
in
daa
inc
lret
lods
mov
mov
setae
adc
or
fneni(8087
xchg
dec
mov
inc
lret
bound
add
enter
xchg
xlat
inc
dec
lea
sti
adc
sub
orl
dec
mov
mov
mov
cmp
mov
movsb
or
adc
or
mov
jo
icebp
insb
push
pop
jl
fsub
loope
adc
test
rcrb
mov
std
pushf
test
xchg
lahf
imul
outsl
push
aam
dec
xchg
out
mov
int
das
xor
push
aam
adc
xchg
sbb
cmp
arpl
bound
fs
jo
stos
outsb
shrb
fwait
push
sub
dec
js
sbbl
dec
aaa
cmp
pop
inc
jmp
pusha
scas
movsl
sbb
out
icebp
and
lret
adc
inc
xchg
imul
lret
xchg
les
sub
pop
mov
cmpsb
and
sbb
bound
xor
and
or
push
cmc
add
adc
fcoms
mov
adc
push
jg
or
mov
pop
xchg
mov
dec
movsb
popa
mov
mov
fwait
or
push
push
push
mov
pop
mov
push
adc
iret
into
pop
mov
inc
mov
mov
lahf
inc
xchg
inc
dec
add
loopne
or
lret
mov
negb
sbb
mov
movd
and
lods
test
and
adc
gs
ja
push
xchg
nop
outsl
jne
add
addb
lahf
push
icebp
jg
push
in
clc
movsl
mov
ljmp
mov
xchg
or
adc
je
jle
add
testl
xchg
dec
push
in
scas
gs
pop
repnz
xchg
in
jns
sbb
pop
cwtl
arpl
ljmp
inc
jnp
xor
daa
popa
add
aas
push
jg
loope
sbb
mov
ret
mov
or
push
fmul
sbb
xchg
loopne
fidivl
and
frstor
sbb
out
xchg
or
mov
jbe
adc
sbb
fcomp
ret
push
ljmp
inc
cltd
int
sbb
dec
pushf
xchg
in
in
sbb
fldenv
mov
push
and
jnp
cmpsl
pushf
call
mov
testb
lds
sub
lcall
adc
ds
daa
rcrb
xchg
es
xchg
lea
enter
lahf
jp
mov
fs
out
xchg
loope
movsl
mov
sub
jo
fwait
dec
enter
xchg
and
push
push
add
pop
dec
into
enter
int3
repnz
js
das
scas
inc
cmp
mov
fwait
add
jb
inc
clc
jb
das
inc
in
xchg
lret
cmpsb
inc
loope
imul
fdivrs
jns
lods
push
or
pop
sbb
pop
dec
insl
in
push
push
dec
xchg
mov
cli
lods
outsl
jle
cmpsl
mov
and
jle
dec
push
mov
adc
inc
sahf
cld
das
push
xchg
dec
xor
addl
or
out
and
cmpl
mov
dec
sub
ret
adc
xchg
jecxz
pop
and
test
popf
int3
jbe
roll
xor
and
mov
std
lock
mov
xchg
aaa
mov
cmc
or
clc
dec
test
or
push
idivb
mov
popf
arpl
ret
mov
and
pop
clc
push
pop
das
add
in
cmp
sub
mov
adcl
scas
in
std
add
pushf
xchg
shll
idiv
cmp
nop
mov
cmp
in
in
inc
or
xor
shll
sbb
dec
sar
call
pop
jecxz
xchg
xchg
push
lret
add
scas
test
push
mov
in
push
sub
cmp
dec
sub
push
jno
and
inc
add
push
lds
cmp
lock
dec
dec
out
ss
mov
xor
orb
mov
imul
imul
je
cmpb
pushf
andb
mov
loope
cmp
call
push
das
xchg
mov
notl
inc
insb
shll
push
xor
aaa
mov
cmp
mov
xchg
js
mov
jno
movsb
jb
adc
or
and
jg
scas
orb
shlb
stos
repnz
jmp
xlat
inc
inc
and
jmp
inc
or
ljmp
add
mov
mov
xchg
sub
fisubl
xchg
sbb
push
ljmp
mov
pop
xchg
outsl
shr
cmpsb
sub
push
sub
xor
add
pop
pusha
mov
xchg
mov
sahf
jge
out
mov
gs
sub
cmc
jno
sahf
add
les
je
inc
jns
stc
sub
lods
pop
je
addr16
jne
add
jno
out
mov
mov
in
addl
jns
fidivl
cmp
gs
xchg
pop
xlat
test
add
hlt
dec
addb
push
mov
xor
adc
int3
sbb
xchg
and
sub
test
ds
data16
fldenv
out
push
adc
aad
and
scas
lea
push
jo
shrb
je
mov
dec
fisttpll
rcr
fdivl
inc
ja
mov
lock
pop
in
push
test
dec
cmp
aad
loopne
pop
cmp
cmp
ja
pop
jne
std
pop
or
std
ret
test
test
lret
mov
outsl
pop
adc
jb
adc
fistpll
pop
not
inc
sbb
jecxz
pop
mov
sbb
dec
je
jmp
mov
sahf
divb
dec
movsb
cmp
mov
es
pop
push
cld
jecxz
aas
das
test
mov
clc
aaa
pop
imul
stos
sbb
jmp
insl
filds
mov
sbb
pop
in
repz
mov
decb
push
inc
out
adc
xchg
xchg
add
jmp
sub
pop
aas
add
das
les
scas
out
lods
inc
mov
aad
outsb
mov
outsl
fnstsw
imul
adc
in
and
fs
loopne
repnz
out
dec
jbe
or
xchg
jl
mov
mulb
jge
or
mov
outsl
push
cmp
pushf
pop
ficoms
add
mov
sti
sbb
pop
sbb
add
movsl
xchg
cmp
lock
cld
fwait
arpl
mov
push
lea
shrl
jg
nop
in
jb
pop
bound
push
xchg
xor
adc
cwtl
and
enter
dec
mul
inc
mov
jle
sbb
push
push
rol
ret
xchg
xchg
add
popf
sub
les
sub
cmp
mul
push
xchg
fistps
and
push
cltd
fwait
negb
imull
daa
or
lret
daa
adc
je
adc
sbb
mov
push
enter
cli
test
push
mov
inc
push
xchg
xchg
xchg
mov
jle
add
ds
mov
jmp
push
inc
dec
push
repz
dec
mov
sbb
add
lods
outsl
fistps
rol
es
lahf
dec
lret
js
push
inc
popf
shl
adc
pop
add
adc
xor
push
lahf
fnstenv
mov
test
pusha
inc
mov
and
cli
cmp
fidivs
clc
jle
pop
cmpsl
dec
out
addl
mov
and
fs
jp,pt
sub
cmpsl
mov
mov
push
jbe
int3
inc
inc
dec
dec
cmp
outsl
or
fwait
xchg
jno
jb
push
in
aaa
push
aam
or
add
sahf
movsb
inc
sbb
ret
cld
jmp
jmp
nop
lret
mov
lods
cltd
insl
push
jl
inc
mov
mov
movsb
movsl
pop
std
mov
in
sbb
jb
cmpb
lods
scas
inc
pushf
inc
dec
mov
mov
cmp
mov
cmc
cmp
add
arpl
lods
fs
data16
push
cmpsb
imul
mov
or
aaa
mov
xor
sub
pop
ret
cmp
xchg
mov
fcoml
or
in
xchg
mov
add
fldl
adcb
cmp
cmpb
pop
jmp
test
stc
add
enter
adcb
lcall
lock
or
sbb
imul
sub
mov
fmull
inc
rolb
push
dec
mov
je
pusha
rorb
cwtl
fsubs
int3
inc
inc
in
push
or
inc
into
sbb
adc
adc
or
mov
and
movl
imul
jno
pop
clc
ds
mov
movsb
aad
repnz
sahf
js
mov
dec
mov
aas
shl
pop
outsb
gs
xor
ficompl
adc
hlt
xor
mov
aaa
ljmp
and
test
repnz
pop
loopne
fwait
leave
iret
sbb
mov
push
xor
leave
fisubrs
inc
pop
fbld
sbb
ss
mov
test
pop
push
insl
int3
in
movsl
inc
sbb
mov
sbb
int3
imul
hlt
insl
incl
xchg
or
sahf
lods
jb
mov
fstl
cli
stc
clc
inc
popa
lock
out
push
lock
into
ret
call
ret
mov
scas
aaa
fsubl
fsubrs
cs
mov
jae
adc
adc
aam
sbb
movsb
push
movsl
xchg
add
outsl
cmp
popa
xchg
add
push
cmp
mov
pop
mov
sub
fldcw
xchg
insl
jl
push
out
stos
loopne
push
xchg
movq
xor
or
aaa
dec
xchg
popf
and
inc
or
inc
add
adc
xor
test
mov
mov
imulb
inc
push
or
jb
sub
loope
pushf
xor
cli
sbb
mov
add
pop
mov
subl
in
aaa
mov
mov
jns
jl
xlat
inc
inc
daa
xchg
rcrb
fistps
shl
ja
jnp
xchg
xor
push
loop
scas
sub
push
repnz
das
loope
orl
sub
add
mov
call
aam
imul
lea
xchg
in
sbbb
mov
leave
push
in
mov
icebp
jge
mov
sub
scas
or
sub
imul
popf
fnsave
jecxz
mov
shll
and
roll
shlb
addb
scas
popa
popf
mov
pop
push
mov
inc
addr16
insl
xchg
fdivrs
fistps
adc
xchg
push
inc
mov
pop
mov
mov
imul
sbb
in
mov
call
xor
and
mov
cmp
mov
sbb
or
cmpsl
fdivrp
leave
cmp
mov
xchg
xchg
pop
xor
fwait
icebp
sbb
insb
sbb
jmp
xchg
in
pop
shl
in
cld
cmpsb
jne
adc
shrb
jecxz
fists
sti
dec
or
mov
or
insl
push
popa
sarb
dec
mov
insb
sahf
sbb
mov
int
push
test
xchg
mov
stos
test
or
sahf
test
aas
aas
sub
lahf
repnz
lret
inc
xchg
xor
pop
lods
mov
idivl
pop
insb
xor
sbb
dec
push
jp
pop
stos
push
sub
push
pop
sahf
adc
adc
adc
fidivl
mov
xchg
mov
dec
repnz
push
inc
fisubrl
push
sub
mov
xchg
fstpt
sahf
sub
iret
fs
jle
pop
dec
push
hlt
cmp
inc
jae
and
add
fldenv
jns
das
js
adc
in
stc
sub
jle
mov
outsb
mov
icebp
and
push
shll
fdivrl
loop
rcrb
xor
pusha
frstor
pushw
adc
punpckhbw
inc
test
arpl
push
and
fcoml
inc
mov
push
cli
add
lods
ds
lahf
mov
push
inc
push
xchg
xchg
and
jmp
pop
das
andb
shll
or
pop
pop
ret
cld
out
cld
imul
or
lods
mov
movsb
mov
mov
sbb
xor
jecxz
xor
in
adcl
mov
xor
add
inc
sbbl
add
out
xchg
jecxz
pop
lock
jns
call
das
cltd
outsb
jg
cltd
gs
push
or
push
mov
fs
ficomps
mov
sub
lahf
inc
test
inc
or
lret
pop
out
or
cmpsb
sub
add
lret
insl
mov
xor
xchg
in
add
xor
xor
pop
out
mov
lock
sbb
xor
lret
mov
jns
cwtl
test
js
nop
push
out
xchg
shrl
xchg
add
ljmp
sub
or
icebp
jg
out
add
xchg
jno
pushf
pop
jno
ljmp
jo
push
or
push
outsb
aaa
adc
bound
mov
aas
mov
dec
sbb
fwait
aad
cmpsl
aaa
xchg
imul
enter
cmp
cmp
nop
push
enter
cltd
adc
out
pop
jno
outsl
movb
pop
mov
mov
mov
xchg
jl
fxch
jae
add
push
shll
fnstcw
push
add
add
shll
data16
lods
stos
faddl
addr16
pushf
call
jle
jecxz
push
cmp
adc
mov
mov
adc
sbb
adc
mov
shll
pop
daa
pop
jno
sbb
lcall
xchg
imul
es
inc
jb
sti
testb
sti
test
movsb
iret
cmp
mov
rcl
xchg
cmp
push
mov
test
dec
cmp
or
mov
out
mov
lcall
dec
jae
iret
lcall
add
and
in
hlt
roll
mov
xchg
out
or
daa
roll
push
xor
loope
push
xchg
inc
fsubrp
fistl
cmp
mov
xchg
push
mov
repnz
xor
dec
cmp
cmp
int
lret
out
push
inc
cwtl
das
push
pop
jl
test
pop
and
inc
fs
pop
decl
jmp
call
sub
in
xchg
out
push
or
mov
mov
adc
nop
pop
mov
xchg
sbb
clc
scas
jmp
xor
xchg
es
pop
aas
xchg
test
add
popf
inc
xchg
xor
cli
xor
mov
xor
pop
cmp
jp
jge
or
fldcw
and
cmpsl
adc
xchg
leave
lcall
jmp
sti
pop
adc
pop
cli
movsb
mov
aaa
mov
sub
mov
addr16
iret
test
lahf
sub
mov
and
dec
or
jp
das
push
pop
icebp
jb
repz
out
push
icebp
jmp
in
mov
negb
dec
xchg
in
loopne
test
add
ficoms
xor
aaa
lods
mov
mov
dec
sbb
aas
or
mov
xchg
clc
inc
insb
mov
jne
push
mov
scas
enter
push
cmc
sub
dec
mov
push
in
xor
sar
ficompl
ret
pop
dec
jecxz
movsb
scas
fs
mov
jp
sbbb
jns
lea
push
lret
xorl
ja
cltd
mov
mov
dec
aad
dec
dec
stos
in
call
lods
sbb
xchg
mov
mov
imulb
rolb
mov
fiaddl
lret
fnsave
ret
inc
jmp
dec
flds
ja
leave
sarb
jmp
pop
in
and
lret
push
sahf
fldt
cmc
push
cmp
xorl
popf
cmp
or
int
cmp
mov
lock
iret
add
pushf
dec
movsl
mov
insb
mov
or
test
cmp
push
xchg
fadds
icebp
mov
mov
mov
lods
popa
loopne
push
popf
inc
lods
cmp
mov
in
fstl
cli
adc
pop
enter
jl
adc
cmp
test
stos
xlat
in
jmp
sbb
out
test
jbe
imul
popa
aam
push
or
mov
pop
cli
mov
mov
push
incl
push
mov
add
mov
in
mov
push
cmpsb
dec
mov
lods
or
decb
fldt
stos
popa
xchg
int3
and
in
clc
imul
jns
in
test
push
pop
loop
std
adc
inc
push
test
repnz
sub
insl
xchg
dec
mov
sbb
jbe
or
inc
loopne
das
ja
xchg
mov
bound
fbstp
jae
push
jmp
pushf
xor
push
je
and
cmpsb
ds
jle
xchg
imul
ret
fldcw
xchg
or
lcall
or
in
add
lcall
and
mov
cmp
in
adc
push
dec
ljmp
mov
in
icebp
int3
sub
push
xor
lcall
xchg
int
pop
and
enter
mov
int3
ss
cmpsb
adc
jnp
push
mov
aaa
inc
push
adc
sahf
movsb
mov
jb
or
adc
jge
lock
popf
jge
or
imul
push
lret
popa
mov
ret
push
dec
cwtl
inc
iret
sbb
pop
dec
inc
movsl
scas
mov
jae
out
fidivs
mov
sbb
repnz
pop
dec
les
jbe
add
fstl
add
sbb
lahf
add
mov
xchg
fwait
popa
psrld
mov
addb
stos
inc
mov
and
pop
gs
dec
jle
jle
into
sub
int3
inc
or
push
ja
aaa
xchg
jg
xchg
out
xchg
aad
nop
push
movsl
loope
and
inc
adc
mov
test
inc
into
jns
or
cmp
fidivrs
aad
push
push
scas
insb
jle
dec
shll
sti
jp
insl
push
mov
mov
jge
jbe
cmp
xchg
lret
add
lret
jo
cwtl
out
and
icebp
int
es
aas
xlat
pushf
inc
mov
cmp
sbb
in
jae
push
mov
sarb
in
or
cmpsb
xor
outsb
andl
push
jo
sub
gs
xchg
dec
xlat
and
mov
pop
sbb
gs
and
out
dec
inc
sbb
pop
dec
adc
jecxz
testl
xor
sub
sub
push
inc
sbb
lods
data16
xchg
xor
test
inc
shll
xorb
in
rclb
cld
jno
pop
xchg
shll
cmp
enter
ds
stos
and
mov
shr
xchg
fisubs
cmc
pop
pop
push
in
shrl
mov
dec
sti
sub
lods
xchg
cmp
cmp
add
push
ljmp
call
add
outsb
jp
cwtl
aad
adc
sub
cmpsb
xbegin
incb
outsl
fstpl
das
pop
repnz
out
cmp
aad
in
pop
leave
and
jmp
or
or
std
mov
enter
xlat
xor
arpl
jle
stos
inc
mov
push
je
lahf
sbbl
sti
jmp
xor
insl
pop
xchg
mov
ljmp
jmp
shlb
shlb
mov
test
les
negl
in
insl
pop
pop
out
inc
repnz
imul
lds
data16
fdivrl
imul
cmpsl
mov
test
xor
inc
jp
cwtl
dec
mov
addb
ret
lahf
clc
add
in
inc
push
add
jl
pop
int3
sti
cli
sub
addb
xchg
or
scas
adc
mov
push
arpl
pop
and
and
add
fucompp
das
cmp
movsl
rolb
subb
je
test
shlb
lcall
sbb
xor
jecxz
outsl
pop
xchg
lea
and
dec
mov
adc
and
adc
jge
cmp
sub
adc
xchg
pop
mov
test
cmc
std
mov
out
adc
sbb
js
cmp
jo
mov
fld
jo
repnz
lahf
cwtl
mov
fsub
dec
lret
jp
in
mov
sbb
popf
sbbb
xchg
pop
mov
mov
sbb
ljmp
flds
out
xor
push
xchg
push
pop
add
test
push
jg
or
jge
test
fwait
mov
pop
push
rorb
xor
jns
jns
lods
jne
cli
add
fwait
jle
xor
repnz
xor
jge
pop
pop
sbb
pop
add
and
mov
pop
rcl
inc
add
into
gs
pop
ret
add
test
imul
enter
in
sbb
push
and
ficompl
sahf
or
hlt
popf
xor
lahf
inc
add
adc
cld
push
sbb
stos
push
jl
jne
push
dec
xlat
pushf
or
or
mov
mov
jl
mov
lret
mov
lods
stos
mov
mov
out
imul
inc
cwtl
in
mov
mulb
mov
sub
loopne
stc
stc
or
jge
pop
adc
and
popa
or
ss
inc
xchg
popf
inc
imul
pop
mov
and
cwtl
movsb
cmpsb
aaa
mov
push
xorl
dec
pop
jecxz
ds
andl
loop
pop
leave
cmp
icebp
add
cmp
mov
jmp
fidivrl
lahf
rclb
jnp
call
jb
je
adc
and
ret
test
repz
daa
xlat
pop
pop
adc
xchg
xor
pop
xchg
aam
lods
jb
ror
test
enter
push
push
mov
add
sub
subl
into
dec
cmc
cmp
add
or
std
and
ljmp
sbb
push
or
in
sar
ljmp
shl
pusha
mov
dec
leave
lds
add
outsb
sub
cmpsl
xchg
dec
mov
sbb
aaa
mov
aas
pop
and
sbb
add
sub
pop
test
add
xchg
call
cmp
mov
js
lea
mov
dec
cld
sbbb
mov
pushf
ret
pop
insb
and
fwait
mov
mov
scas
ficoml
or
les
pop
add
aam
adc
in
pop
cs
add
inc
lahf
ret
xor
into
mov
mov
dec
xchg
lcall
fadds
test
pop
adc
cltd
lahf
xor
sub
mov
mov
jne
cmp
sub
mov
and
bound
dec
cmp
pop
xorb
add
sbb
in
notl
loop
lock
ror
out
xchg
scas
sub
or
xchg
or
push
sbb
test
or
dec
jmp
mov
aaa
lods
aad
xor
shlb
and
jae
hlt
lahf
dec
pushf
mov
xchg
loope
jne
aas
xor
add
jb
mov
mov
inc
bound
add
sbb
lods
sbb
sub
dec
les
push
sbb
fbld
or
adc
mov
into
mov
scas
dec
and
test
outsl
mov
sbb
pop
mov
andb
and
insl
das
mov
sbb
xor
or
jae
outsl
lods
sub
mov
test
pop
gs
xor
inc
popf
in
ss
popa
xor
sbb
jp
adc
xchg
inc
ja
out
popf
sub
fistpl
cmp
scas
cmp
xorb
mov
bound
jb
idivl
fsubrs
fsubrp
xor
jg
adc
shl
cwtl
cmpsl
xchg
xor
mov
lods
out
fs
mul
in
test
fisubs
lea
push
es
jmp
xchg
test
repz
lods
call
mov
xor
mov
inc
add
fnstcw
adc
sub
out
out
addl
mov
jmp
inc
icebp
inc
ret
jmp
xchg
enter
or
ja
xlat
in
cmc
jge
dec
out
fildll
mov
imul
jns
test
loope
std
movsb
sbb
xchg
adcl
ljmp
fadd
mov
ljmp
dec
pop
mov
aam
and
or
mov
out
sub
push
cmp
inc
lea
icebp
jecxz
sub
scas
mov
push
mov
xor
push
push
loop
mov
dec
jb
out
mov
push
iret
jno
shlb
cmc
iret
pop
popf
dec
outsl
ljmp
aad
sub
clc
and
sbb
jg
mov
pop
sbb
ret
mov
insl
stos
mov
mov
inc
out
dec
cli
fcmovu
lods
pop
insb
sbb
testl
daa
pop
mov
mov
cld
cmp
xor
push
loopne
ds
xor
out
mov
or
out
out
and
mov
push
int3
pop
mov
xchg
ja
out
xchg
pop
jns
xor
aam
adc
sub
in
push
dec
divb
mov
test
cmp
cs
dec
jae
adc
arpl
in
and
and
mov
jg
push
gs
mov
cltd
add
push
xor
mov
jb
push
pop
sbb
aas
out
outsl
jne
pop
icebp
pop
ja
cmp
push
mov
inc
xchg
cmpsl
bound
and
cmpsb
xor
jno
stos
jge
mov
or
add
cmp
push
xchg
jns
push
int3
mov
clc
add
mov
jg
or
xchg
push
test
xor
xchg
das
xor
int3
sti
fwait
std
sarl
pop
dec
imul
jmp
fstpl
or
mov
xchg
add
add
jo
sbb
jns
adc
lret
push
mov
int
fsubs
push
test
popf
insl
cld
subl
xorl
nop
push
xor
push
mov
pop
clc
push
sahf
mul
mov
mov
sub
sub
ds
push
jecxz
stos
arpl
int
inc
xchg
mov
jns
mov
dec
ss
fcoml
mov
ljmp
push
xchg
fldenv
cli
daa
mov
stos
cmpsl
mov
push
lods
loope
jae
neg
movsb
jge
push
sub
lock
xchg
gs
sbb
cli
jbe
mov
outsl
and
pop
add
subb
aaa
loopne
adc
sub
fcompl
xlat
mov
leave
mov
jnp
ja
xchg
cmp
xchg
out
jle
pop
or
mov
sahf
popa
sub
mov
cmc
push
or
jnp
je
fsubl
cli
mov
sub
mov
mov
ret
cltd
sbb
sub
fnstsw
mov
out
lods
and
into
ja
movsb
orb
cmp
pop
mov
dec
fcoml
xlat
lret
in
loop
add
dec
faddl
into
xchg
pop
push
mov
xor
xchg
xchg
cvtdq2ps
lret
subl
fisubl
negl
dec
inc
or
mov
sub
sbb
sbb
jmp
mov
shlb
add
sub
pop
xor
mov
xlat
outsl
sub
jne
outsb
mov
xor
repz
or
inc
push
inc
dec
les
mov
push
mov
ret
je
test
mull
out
mov
sahf
call
mov
lret
fistpll
push
mov
lods
ret
xor
cmp
gs
cmc
and
xchg
popf
mov
xchg
daa
pop
adcb
cmpsl
dec
dec
cld
mov
fsubs
cmp
cmp
out
or
sbb
dec
pop
xchg
sbb
scas
popf
mov
jp
inc
sub
mov
xchg
fiadds
cmp
pop
loopne
jae
sub
cmp
dec
jnp
cmp
and
add
xchg
push
sbbl
pop
xchg
arpl
or
dec
add
aam
pop
dec
call
rcll
xchg
fnstcw
fld
sub
aaa
jmp
daa
push
outsl
mov
xor
push
js
mov
sbb
add
or
fwait
adc
cmp
mov
cs
dec
jp
or
mov
xor
movswl
frstor
push
lods
pop
push
pusha
jl
rcrb
push
ret
and
lods
cld
cmp
dec
cmpsb
add
pop
in
mov
jns
movsb
or
dec
jle
sbb
inc
fcompl
scas
pop
sbb
orps
mov
ret
mov
inc
lods
xlat
mov
cmc
xchg
xor
dec
pop
pushl
jle
xchg
out
hlt
fs
adc
ds
test
sbb
adc
aam
inc
bound
mov
lret
dec
mov
jb
dec
test
inc
cld
dec
jecxz
std
pop
inc
in
mov
push
shr
movsl
loope
xlat
push
jmp
fisttpll
mov
stc
adc
arpl
cmp
lea
xchg
or
pop
cmpsl
jnp
faddl
out
push
xor
mov
cltd
ss
loopne
je
arpl
dec
pop
add
add
mov
xor
fcompl
jae
jmp
adc
jno
mov
icebp
jno
das
faddl
lret
pop
jmp
push
jg
cld
mov
rcr
outsl
stc
push
adc
repnz
je
push
jbe
inc
xchg
aad
scas
addr16
mov
ret
mov
mov
add
pop
icebp
outsl
jle
sti
sub
push
xchg
cs
dec
pop
movsb
mov
cs
xrelease
sbb
pusha
xor
xor
fisttpl
xchg
je
xchg
test
mov
sahf
pop
adc
dec
lea
add
mov
aam
movsb
add
aas
test
jne
jb
push
inc
pop
jb
xchg
stos
mov
fmul
push
outsl
arpl
jne
scas
pop
mov
pop
mov
out
pop
aaa
or
sub
or
rcrl
cltd
push
cmc
jne
pop
out
gs
es
mov
pop
xchg
outsb
mov
mov
mov
lds
pop
dec
mov
xchg
fisubrl
nop
mov
adc
loope
pop
mov
inc
out
mov
jno
fidivl
mov
xchg
loopne
fxch
jne
data16
pop
mov
dec
outsl
jg
in
add
and
jae
loop
jecxz
dec
push
lock
enter
cli
cli
mov
sti
in
gs
mov
add
stos
test
ror
packuswb
fwait
cmpsb
mov
jnp
sarb
iret
es
cmc
test
adc
xchg
inc
cmp
adc
repnz
int
xor
mov
cmc
mov
dec
mov
add
popf
mov
mov
xchg
push
mov
sub
movsl
in
lods
divl
cmp
out
xchg
push
sub
sbb
xchg
sub
pop
inc
shll
leave
mov
das
bound
sub
sahf
jmp
sbb
bnd
jb
adc
jmp
cmp
fcomp
cmp
negw
leave
and
pop
aas
mov
subps
jecxz
xor
jmp
push
fnsave
or
xor
and
mov
lock
cld
data16
enter
sub
popl
out
or
pop
test
dec
cmp
xor
cld
in
and
cs
cmpsl
mov
adc
dec
xchg
mov
jns
fimull
in
sub
rorb
ds
sbb
subb
mov
fiadds
popa
adc
int3
shlb
repz
lahf
lcall
out
negl
call
sbb
out
pop
xchg
and
nop
ljmp
cmp
or
add
cmp
mov
mov
push
sbb
sub
pop
js
insl
lods
jge
dec
sahf
push
pusha
mov
push
add
fstl
add
out
sbb
cs
fs
cltd
andl
mov
push
addr16
xor
pop
sbb
outsb
mov
ret
inc
xchg
int3
ja
push
test
mov
mov
es
cs
gs
orl
bound
test
fisubs
insl
outsb
aas
in
xchg
xor
iret
pushf
cld
iret
gs
dec
movsb
push
add
or
sbb
shl
mov
sbb
and
push
and
xchg
mov
jge
out
test
mov
cmp
mov
pop
addr16
inc
out
js
adc
mov
shrb
pop
fwait
pop
mov
jge
pop
jecxz
cld
daa
mov
clc
into
into
mov
mov
adc
aad
xor
popa
int3
mov
dec
xchg
je
test
lds
movsb
xor
pop
and
lret
lea
push
addl
dec
push
hlt
test
popf
mov
shlb
sub
sahf
jno
inc
jbe
pushf
and
mov
pop
nop
nop
mov
adc
push
fdiv
or
jg
and
inc
or
inc
and
mov
test
mov
or
pop
bound
lods
mov
dec
fwait
divb
or
cmpsb
push
xchg
aam
xlat
aad
adc
shll
mov
data16
xchg
sbb
sub
adc
lret
push
sub
test
jle
rorb
loopne
cmp
xchg
shll
int
push
push
or
or
fs
cwtl
xor
mov
test
jmp
out
dec
loope
pusha
stos
pop
ret
fistps
aam
inc
jne
xchg
ljmp
fidivs
dec
repnz
fisubrl
ss
push
sub
repz
sub
pop
test
addr16
inc
jg
loopne
or
addl
test
lea
fcmove
outsb
mov
outsb
outsl
mov
gs
add
jmp
fisttps
mov
leave
push
out
jo
xorb
into
jne
call
push
jecxz
sbb
out
push
enter
adc
scas
xchg
push
fidivl
jge
xlat
lods
clc
lret
ffree
and
sahf
xchg
imul
loopne
es
cwtl
cmp
sbb
push
push
addr16
pop
dec
rcll
sbb
je
xchg
jmp
mov
fldt
and
jecxz
jb
cmp
loopne
jecxz
negl
int3
out
xchg
nop
pop
sub
stos
pop
mov
xchg
icebp
lahf
fwait
push
or
sub
std
mov
pop
sub
mov
lcall
cmpsl
jge
pop
stos
push
mov
push
stc
add
je
mov
int
je
jno
je
mov
enter
push
add
scas
in
daa
movsl
push
insl
mov
xchg
and
loopne
xchg
popa
testb
pop
loop
bound
shrb
mov
pop
cmp
cld
mov
sbb
sub
loop
sbbb
mov
cmp
test
test
call
xchg
cltd
test
aaa
mov
and
mov
cmp
mov
push
cwtl
sbb
ds
loope
jbe
xchg
nop
push
ficomps
lahf
xor
loope
add
dec
lcall
out
sahf
lahf
mov
scas
mov
ret
add
imul
sub
fimull
clc
push
addr16
cmp
bound
xchg
insl
or
jle
test
stos
and
pop
push
cmp
sbb
jle
sub
je
mov
mov
sbb
or
inc
dec
lcall
dec
or
sub
add
jo
xor
sub
ljmp
and
scas
xor
lcall
scas
cmp
test
fs
aaa
add
pop
mov
xor
mov
cli
or
movq
or
inc
repnz
jmp
push
jnp
std
jle
lret
imul
mov
mov
outsb
pop
sub
shl
les
in
je
mov
jns
mov
ror
pop
push
mov
cs
cmpsb
int
loopne
xchg
jl
lods
stc
adc
mov
into
add
aaa
addr16
xor
mov
inc
or
mov
inc
sub
pushf
pop
push
mov
push
das
test
mov
int3
aad
jge
xchg
sbb
mov
push
sub
popa
inc
cwtl
mov
test
inc
hlt
cmpw
popf
packssdw
addr16
add
or
mov
in
or
xchg
pop
mov
aaa
adc
and
push
aam
ljmp
enter
call
push
punpcklwd
xor
test
mov
cmp
push
xchg
into
cmp
mov
js
cmp
push
enter
mov
in
sub
loope
pop
push
cmp
mov
jae
mov
push
mov
pop
nop
rcl
in
add
xor
adc
dec
outsb
test
add
outsl
out
adc
test
xchg
adc
cmp
iret
pop
xlat
lret
sbb
and
mov
dec
pop
bound
aad
ja
jb
mov
test
mov
shlb
mov
shr
clc
add
dec
gs
mov
lret
mov
mov
loop
mov
jae
push
or
jle
xchg
cmp
addb
movsb
add
lods
mov
movsb
and
xor
xchg
pop
cmp
jg
push
stos
xrstors
inc
and
mov
int
or
cltd
les
inc
push
adc
or
sbb
ljmp
sub
mov
addr16
push
aam
adc
add
int3
in
xchg
cltd
adcl
imulb
fildl
clc
or
jae
lret
jecxz
addr16
or
sbb
pop
mov
lret
hlt
aad
lods
stos
jnp
bound
out
xchg
cmc
rorl
or
fwait
sub
jl
mov
das
mov
aaa
dec
sub
cmc
or
fsubrs
adc
dec
fidivs
fsubrs
inc
xchg
cmp
mov
jnp
mov
xor
xor
shrb
loopne
pop
stos
aam
and
mov
iret
pushf
cs
pop
cmp
repnz
mov
imul
aam
ret
inc
adc
ds
jo
lods
leave
pop
mov
pop
mov
fdivrl
push
add
lods
fnstenv
scas
mov
repnz
mov
jge
mov
sub
jbe
in
jb
push
xor
mov
pop
testl
cmp
ret
mov
push
mov
push
cltd
ss
sub
ds
popf
out
push
outsl
stc
mov
mov
popf
lods
out
xor
je
jb
test
nop
dec
pop
lcall
subl
mov
mov
sbbb
pop
sub
loope
lcall
and
mov
sarl
sub
push
inc
fcmovnbe
mov
icebp
mov
fwait
sbb
adc
test
lods
xchg
ret
fbstp
pop
pop
lea
stos
ds
movsb
cmpsb
and
daa
sub
jno
cli
inc
xor
leave
pop
insl
jnp
cmp
icebp
pop
ja
dec
mov
mov
sbb
xchg
lahf
icebp
jmp
outsl
jo
dec
sub
add
stos
call
lcall
mov
ret
pop
stos
or
fisubs
in
push
add
mov
lds
mov
or
xchg
xor
test
mov
add
out
mov
jb
jecxz
in
pushl
pop
loopne
push
add
or
jns
dec
sbb
psllw
xor
loope
jmp
cmpsb
mov
ss
mov
cmc
push
test
ret
and
inc
fcmovnu
mov
or
stos
sub
sbb
lret
aaa
and
jge
mov
push
or
mov
sub
sbb
add
xchg
add
xchg
repnz
cli
filds
popa
sub
pop
pop
jge
and
mov
mov
jns
cltd
jnp
jmp
and
mov
mov
repz
xlat
pusha
fstpl
push
imul
aam
dec
sbb
loopne
xchg
test
je
pop
pushf
jge
imul
stos
xchg
xchg
jbe
mov
inc
retw
pop
repz
lods
inc
out
xchg
fs
mov
xchg
cmpsl
add
aad
aaa
or
pop
cmp
inc
arpl
cs
sbb
dec
pop
jb
and
bound
xchg
xchg
roll
rcrl
into
in
loop
test
addr16
add
or
dec
imull
testl
sbb
xchg
movsl
inc
adc
pop
int
shll
jno
mov
idivl
mov
push
lods
gs
jg
xor
or
mov
pop
jp
insb
cs
pop
mov
ss
jns
out
outsl
in
add
pop
int3
mov
dec
aad
cmp
lahf
das
loop
jbe
mov
scas
into
ja
sub
cltd
push
xor
stos
adc
cmp
clc
ja
not
pop
sbb
or
outsl
push
lret
int3
gs
xlat
aam
shl
xor
jae
mov
xchg
pop
lcall
into
mov
inc
fcmove
aad
cmpsl
jbe
mov
mov
mov
ds
mov
xor
lods
add
loope
popf
cmp
ja
daa
scas
imul
jg
xchg
jns
push
mov
lds
jg
movsb
inc
inc
jl
rcll
xor
or
xchg
mov
jg
mov
cli
inc
test
mov
fisubrs
mov
push
mov
pushf
aas
fcomps
adc
jns
jp
or
jns
or
xchg
and
decl
cmpsl
sub
mov
fstpl
pop
adc
mov
mov
xlat
stc
scas
gs
cmpsl
push
jb
enter
sbb
xor
cmpsb
jno
ret
and
adc
push
jno
dec
or
fsubrs
imul
in
xor
nop
mov
scas
mov
mov
push
imul
dec
mov
mov
aaa
int3
fs
cmc
add
cmpsb
fsubs
std
insb
jns
sbb
xchg
mov
in
cld
lock
dec
mov
int
xchg
pop
inc
push
pop
mov
cli
dec
negl
aad
cmp
mov
xchg
popa
clc
cwtl
jmp
dec
icebp
dec
mov
lahf
inc
or
rorl
mov
movsl
adc
mov
jns
lret
sub
inc
or
push
cltd
sbb
pop
mov
scas
cmp
pusha
fwait
sti
adc
pop
clc
pop
adc
adc
push
or
mov
push
inc
sub
test
jge
dec
test
xlat
repz
into
adc
sub
data16
adc
fiaddl
mov
sub
fmuls
sub
jbe
jae
jecxz
sub
xor
je,pt
call
jo
add
pop
lods
sbb
lock
add
xchg
xchg
mov
jae
jbe
pop
xchg
sub
add
mov
rorb
jg
lahf
les
and
sarl
push
mov
adcl
xor
dec
pop
test
mov
sbb
data16
xor
lahf
and
xchg
adc
andl
jl
push
imul
pop
fbld
rorb
dec
or
xor
jae
pushf
ja
jp
xchg
fistps
movsb
loop
dec
gs
rcl
pop
mov
aas
or
xchg
sbb
or
adc
shl
aas
mov
or
mov
adc
repz
sbbb
pop
xor
ror
and
addl
out
and
test
fnsave
push
cmpsl
mov
pop
in
cmpsl
pop
leave
adc
pushf
das
cmp
enter
out
aas
push
dec
xor
jo
mov
ret
std
xchg
adc
cmp
or
scas
push
fidivl
jne
dec
pop
cmpsb
jmp
push
sub
add
aam
jge
fst
or
addl
bound
and
mov
inc
adc
jns
jno
push
sbb
je
repnz
jle
push
iret
mov
adcl
cmc
andl
test
adc
shr
test
push
xor
daa
rorl
or
adc
jb
scas
dec
jnp
jo
or
movsb
testl
dec
jecxz
jae
xor
out
clc
out
mov
jge
mov
sbbl
jle
adc
ja
nop
in
and
movsl
mov
dec
ljmp
and
push
pop
call
arpl
xchg
pop
out
out
mov
movb
mov
inc
adc
pop
push
push
lret
shlb
sbb
xor
je
mov
xchg
jnp
rep
int
sub
inc
fimull
xor
sarb
and
in
and
das
scas
dec
popf
call
push
sbb
or
popa
imul
lret
xchg
lods
xor
rcrb
dec
ljmp
dec
sarl
jnp
pop
pop
pop
jg
dec
mov
lds
pop
loope
and
ds
pop
jmp
and
int
cld
loopne
and
xchg
cmp
inc
sti
push
push
or
jg
push
push
fildll
ss
cmp
aaa
sbb
pop
lcall
aam
mov
jge
enter
jle
lcall
test
es
aam
inc
out
lods
sbbl
sahf
adc
aas
lods
fiaddl
leave
jns
inc
inc
into
ret
lds
fnstenv
adc
ret
dec
fnstenv
and
cmp
xchg
movsbl
mov
leave
fnsetpm(287
add
js
xor
std
lods
mov
or
in
aaa
out
aaa
or
in
lock
inc
pushf
loop
mov
adc
rclb
mov
js
inc
rcrb
lea
mov
mov
or
mov
or
out
cmp
int3
mov
adc
dec
xchg
ret
sarl
cmp
and
outsb
movsl
jbe
test
test
mov
out
adc
mov
sbb
mov
popa
mov
cmpsl
repz
pushf
or
xchg
mov
fmull
sbb
iret
pop
mov
loopne
insb
out
arpl
ss
sahf
stos
jns
and
mov
push
in
jle
mov
mov
or
ss
cmpb
or
mov
adc
mov
aas
xor
pop
fnstcw
and
and
xchg
add
cmp
scas
and
fcompl
push
ficoms
loop
movsl
test
out
adcl
lcall
cmp
cs
push
enter
into
std
dec
pop
addl
xlat
sub
mov
cs
repz
mov
push
je
jnp
gs
mov
push
fcoms
push
cmpsl
xlat
jmp
pop
roll
push
lods
mov
dec
mov
lods
lcall
int3
or
push
jmp
call
inc
xchg
in
dec
add
js
pop
lret
stos
or
mov
inc
add
loopne
mov
jne
or
mov
mov
jnp
int
and
dec
rorb
xor
push
and
push
xor
arpl
cltd
add
cmp
enter
push
mov
and
xchg
push
sbb
sbb
pop
add
pop
mov
mov
inc
inc
pop
or
ljmp
sbb
hlt
cmpsb
pop
lock
jae
nop
fiadds
or
mov
js
lods
addr16
aaa
push
pop
rcll
inc
scas
jecxz
in
cmp
mov
push
pop
rorl
sub
call
push
push
imul
in
push
ljmp
mov
jecxz
arpl
punpckldq
subb
and
cmp
add
push
adc
enter
movsl
mov
mov
cli
mov
incb
mov
add
push
push
sbbb
rolb
enter
push
cmc
in
popf
sbb
pop
lock
jg
out
mov
cmc
fldlg2
and
and
xor
test
shlb
nop
add
test
iret
cli
mov
mov
mov
push
sahf
jns
popa
mov
add
push
adc
cld
adc
insl
xor
jg
lret
mov
movzwl
lods
mov
pop
mov
lds
push
inc
jmp
add
push
pop
test
pop
out
loope
rclb
stos
pop
mov
pop
test
xor
fxch
loopne
and
fwait
jl
addl
test
inc
cmpsb
or
inc
mov
sbb
jns
arpl
in
aam
push
sti
into
adc
xor
je
jl
sub
inc
test
xor
das
push
test
movsb
testb
dec
daa
mov
sbb
or
ss
xchg
cmp
in
adcb
jle
inc
push
orl
out
lock
aam
pop
mov
dec
aad
test
pop
dec
mov
loope
and
sub
je
cli
cmpsl
mov
xor
arpl
adc
imul
mov
in
in
loop
push
shr
sbb
xlat
xor
sbb
pop
shrl
lcall
xor
mov
sbb
or
adc
mov
push
mov
int3
outsl
movsl
push
xlat
mov
mov
fs
jmp
add
movsb
test
cmp
test
insb
sub
ss
lods
xor
jb
push
addr16
sub
faddp
adc
sub
flds
or
mov
bound
push
clc
push
fcoms
dec
push
push
fcmove
jmp
cmp
dec
jg
mov
lahf
sbb
call
push
in
mov
mov
mov
loope
hlt
dec
jg
cltd
push
inc
xchg
movsl
sub
add
pop
xor
lret
dec
dec
lods
and
mov
stc
dec
push
ja
jmp
push
xor
outsb
repz
push
add
xchg
cmp
stc
dec
addl
lea
lret
test
insb
fcomps
je
adc
imul
leave
mov
les
shlb
dec
adc
clc
movhps
cmp
xor
mov
sbb
mov
clc
push
push
and
in
sbb
jbe
nopl
push
hlt
xchg
mov
mov
mov
xor
and
loope
stc
jp
push
addr16
mov
gs
loop
pop
xor
sbb
rclb
insb
mov
test
gs
jne
jge
roll
sbb
stc
sub
xor
push
call
popa
fsubrl
in
daa
into
mov
gs
cld
ljmp
dec
pop
push
test
add
xchg
cli
cmp
xor
fdivrs
cwtl
push
push
testl
mov
cli
jle
pop
outsb
xchg
cli
loop
mov
stos
mov
jae
push
mov
xor
or
push
loope
leave
mov
bound
inc
xchg
sub
add
xchg
dec
adc
jp
jle
mov
add
and
ret
inc
xchg
dec
inc
pop
jl
sbb
push
sub
movsb
mov
or
add
xor
mov
call
sub
mov
add
repz
mov
aaa
mov
test
mov
inc
popf
cmp
and
cltd
mov
loope
outsl
imul
mov
push
shrl
add
inc
mov
and
cs
imul
iret
mov
popf
lods
sub
mov
mov
inc
push
mov
lock
ss
mov
push
add
pusha
cmp
hlt
std
and
xchg
sub
addl
scas
dec
xchg
cmc
lods
testb
stc
adc
repnz
ja
mov
pop
fnstenv
pusha
xor
outsb
mov
jnp
jmp
push
rorb
or
mov
adc
int
cmc
ret
push
push
stos
daa
lahf
sub
stos
sarb
mov
sbb
sahf
out
dec
dec
rcl
sbb
fwait
mov
sbb
insl
mov
xor
scas
mov
jb
cmpsl
ret
mov
sub
movsl
adc
mov
xor
pop
outsl
stos
loope
gs
cmpsb
or
gs
enter
stos
mov
xchg
test
insl
push
xchg
fwait
push
fisubrs
aaa
in
repnz
ja
add
cwtl
in
or
xor
roll
lods
push
inc
popa
es
repnz
fisttpll
dec
mov
pop
rcrb
ds
lret
jl
cmp
out
jmp
mov
imul
adcb
das
cwtl
lret
xchg
push
sti
adc
jl
je
pop
lahf
adc
push
out
cmp
ss
jecxz
sub
xor
repnz
xor
pop
orb
dec
push
pop
dec
xor
loope
jb
xor
sub
lock
add
adc
xchg
jge
cmpsb
mov
xor
cmp
sbb
adc
lds
insb
sbb
or
push
xor
aaa
int3
dec
jmp
addr16
stos
mov
lret
dec
pop
xor
dec
mov
shl
cmpsl
mov
jo
inc
mov
out
xchg
insl
andb
push
add
jl
pop
dec
dec
enter
sahf
mov
fucomi
addb
xor
adc
shrl
sarl
ror
inc
mov
jne
loopne
pushf
lods
sbb
nop
pop
sbb
push
push
pop
cli
mov
add
fdiv
imul
inc
cmp
xor
adc
scas
outsl
adc
repnz
add
xor
mov
lcall
orb
aam
hlt
es
push
in
mov
shl
lret
mov
arpl
pop
sub
inc
fbld
mov
leave
stc
int3
jo
in
int3
ljmp
imul
dec
inc
dec
mov
fstpl
in
ds
mov
push
mov
and
aas
std
pop
mov
push
shlb
xchg
mov
mov
inc
xor
lds
and
xor
dec
push
test
ljmp
pop
mov
inc
out
sbb
pop
test
and
sbb
rorl
mov
je
aas
mov
mov
aam
xchg
push
imul
jo
int
and
lds
push
fs
pop
xchg
inc
in
xorl
or
out
nop
push
dec
movsb
jmp
push
stos
fwait
xchg
imul
enter
dec
in
pushf
xor
outsb
sti
and
mov
or
lret
sub
jp
jge
loop
iret
mov
add
cmp
dec
gs
mov
inc
out
ficompl
dec
aad
mov
fisubs
add
jge
jmp
add
cmp
lcall
mov
jb
stc
les
iret
add
xchg
xchg
mov
inc
insl
lahf
cmpsl
cmp
mov
stc
add
add
lods
loope
mov
into
je
sbb
inc
loop
xchg
dec
jns
mov
jge
adc
nop
imul
ljmp
sub
dec
in
xchg
mov
rcrb
pop
das
adc
add
sub
inc
mov
mov
inc
cmp
mov
pop
shrb
mov
mov
dec
mov
in
mulb
or
mov
enter
lret
jg
fisubrl
mov
or
sub
lods
insl
add
in
fidivrl
push
aad
fistpl
jne
mov
push
aad
aam
adc
test
fs
lds
jnp
jle
lret
push
dec
sub
jg
mov
xlat
fmuls
iret
dec
xor
out
and
pusha
pop
sbb
xchg
cmp
js
sbb
inc
popf
jl
nop
jp
push
xchg
rcrl
xchg
lea
aam
push
dec
jbe
das
clc
das
xorb
outsl
pop
mov
lods
mov
insb
filds
push
xor
mov
jae
loopne
jb
xor
xchg
push
pusha
adc
jnp
push
xchg
xor
xchg
das
fxch
test
inc
movsb
enter
or
inc
movb
lret
adc
pop
sub
mov
inc
inc
loopne
push
jbe
insb
pop
aas
andl
pop
inc
lods
fs
mov
stos
mov
adc
fidivrs
or
loopne
leave
pushf
pop
and
fdivr
pop
insb
inc
pop
aas
rcll
gs
push
and
pop
ffreep
and
sahf
jnp,pn
arpl
jl
fbld
and
lcall
dec
dec
fwait
cmc
test
adc
mov
mov
out
lcall
pop
ljmp
sbb
mov
icebp
add
xchg
outsl
mov
xor
push
push
xlat
pop
insl
sub
push
add
adc
mov
popf
mov
pop
fwait
inc
add
xchg
and
movsb
push
inc
dec
pop
insb
inc
testb
stc
int
sti
push
rorl
mov
xlat
aad
adc
jae
insb
inc
imul
jl
lds
inc
clc
pop
pop
decb
insb
repz
jl
lret
ret
inc
pop
jo
sub
push
inc
xor
push
stc
add
and
mov
sub
cmc
push
adc
or
int3
pop
dec
xchg
stc
les
test
jnp
loopne
out
into
jmp
insb
loop
cmp
cld
add
adc
loop
and
cmp
jecxz
xchg
dec
sbb
pushf
fwait
push
ret
jle
inc
lea
dec
cli
dec
repnz
test
inc
or
mov
out
hlt
mov
mov
inc
cmp
mov
imul
sarb
add
loopne
test
cwtl
out
loopne
inc
inc
xor
sbb
lcall
mov
fwait
out
jno
lret
sub
mov
jb
popa
cmpsl
bound
dec
mov
adc
jns
mov
jecxz
std
pusha
cmpl
xor
jg
cmp
aad
adc
cmp
lds
fldt
ss
in
iret
lock
jmp
jmp
push
cwtl
jle
clc
or
ss
lahf
xor
lea
inc
push
loope
jp
inc
jne
push
in
pusha
add
dec
cmp
jmp
pushf
xor
push
xchg
xor
addr16
iret
outsl
orl
fnstenv
mul
hlt
in
imul
pop
push
adc
inc
mov
out
mov
cmpsb
inc
ljmp
inc
xor
jle
cs
sub
push
mov
stc
stos
pop
inc
jnp
in
icebp
aad
es
pushf
stos
push
jb
and
rclb
movsl
data16
cwtl
imul
mov
mov
call
roll
jle
jbe
push
add
xchg
inc
mov
xor
push
sbb
push
or
sbb
jae
sub
daa
sbb
enter
popf
or
jmp
rorl
xlat
push
xor
push
popa
adc
mov
inc
xchg
outsb
push
fidivrs
sbb
add
fisttpll
hlt
push
test
test
js
and
scas
gs
add
ret
aas
int3
sub
and
lods
lcall
inc
fnstsw
mov
mov
lds
loopne
pop
adc
push
push
pop
xor
pop
stos
xor
dec
add
enter
jnp
iret
cld
pop
pop
adc
mov
shl
ljmpw
push
and
push
add
lods
or
add
jge
aas
xor
xor
rdpmc
dec
cmp
notrack
lods
adc
sub
pop
pop
out
xchg
xchg
add
jmp
add
mov
or
jle
fisubs
mov
mov
dec
add
shll
mov
cmp
cmp
inc
jp
addr16
jp
lret
jns
xor
and
hlt
mov
fwait
or
das
lock
and
arpl
orb
imul
pop
or
and
fcmovnb
inc
movsb
arpl
sbb
pop
mov
fwait
add
push
mov
in
ret
and
mov
adc
stc
jecxz
ret
stc
data16
xor
scas
xor
call
mov
mov
xor
data16
xlat
add
test
mov
mov
or
sahf
mov
inc
dec
push
aam
xor
es
jae
sahf
aad
ret
jbe
sahf
mov
addr16
or
lahf
hlt
outsb
aaa
inc
cli
je
int
lahf
ficomps
pushl
add
clc
sahf
xchg
sbb
scas
adc
icebp
popa
or
jb
rolb
ja
and
mov
mov
test
scas
mov
shll
movlps
cmc
jge
dec
push
mov
and
sub
xlat
and
fwait
dec
out
xor
mov
inc
sbb
cmpsb
or
xchg
xchg
dec
mov
in
or
mov
pop
roll
xchg
icebp
out
xor
test
pop
fwait
dec
cmpsl
mov
dec
jge
inc
cli
fs
or
xlat
cwtl
add
lahf
push
into
and
fdivrl
into
cmp
gs
push
add
stos
adcb
inc
fsts
pop
ds
jl
addl
sbb
std
cmp
xchg
fucomi
scas
mov
andl
fs
rorl
clc
jmp
cmp
sub
mov
inc
pop
stos
mov
add
jo
mov
push
add
aaa
pop
inc
mull
lock
add
cs
out
inc
pushf
and
insl
and
mov
in
ljmp
add
lods
into
fndisi(8087
fnstenv
cmp
mov
dec
sti
xlat
in
lea
in
data16
ja
pop
lahf
rcl
add
loop
loop
movsb
cmpsl
jbe
add
inc
int
mov
int
xchg
dec
fisubrl
sub
pop
mov
sub
aaa
pop
ljmp
lods
inc
push
loopne
stc
std
aas
repz
stc
int
or
fisubs
lret
cmp
mov
add
addr16
stos
xor
lcall
dec
xchg
cs
jp
frstor
icebp
mov
jns
in
imul
hlt
jecxz
or
imul
jno
xlat
push
stc
push
pop
bound
loope
fsts
scas
test
pop
xorb
lret
rcrl
cmp
lret
sahf
insb
or
xor
xchg
inc
push
into
aaa
push
imul
add
mov
adc
jo
fmull
pusha
jge
test
sti
stos
sbb
or
aas
mov
in
loope
jl
pop
dec
popa
cmp
cld
xchg
dec
mov
insl
xstore-rng
cmpsl
pop
push
stos
jg
mov
dec
push
test
adcl
roll
fnstenv
arpl
cld
dec
int
imul
call
mov
inc
les
add
and
lcall
out
stc
repz
inc
push
pop
mov
fbstp
and
sti
sbb
push
jp
push
pop
shll
out
and
insl
int3
or
call
jns
or
lds
xchg
repnz
xor
lahf
mov
push
data16
popf
clc
adc
push
inc
pusha
and
or
arpl
imul
aas
dec
paddsw
fsts
sbb
mov
sbb
jle
mov
jecxz
push
dec
outsl
mov
mov
push
iret
movsl
xor
aam
xor
jg
inc
pop
xchg
push
dec
fcom
js
aam
aaa
adc
sub
xchg
fldt
sbb
or
mov
cmc
in
mov
stos
pop
mov
push
push
or
add
ss
sbb
push
mov
pop
inc
fmul
testl
imul
in
cld
mov
add
fsubrl
or
dec
or
jb
sub
imul
stc
sbb
lea
pop
jg
xor
jl
aam
dec
ret
dec
inc
outsl
int3
fwait
outsb
cmp
fwait
dec
and
sarb
scas
fcoml
out
cmp
sbb
pop
movsl
dec
add
mov
mov
aad
mov
outsl
loope
addr16
je
cld
sub
or
sub
and
xchg
inc
mov
and
in
mov
mov
in
ss
jmp
in
fwait
inc
cmpsb
mov
push
sub
and
xor
sbb
jecxz
sub
enter
aam
pop
mov
ffree
bound
push
push
inc
imul
sbb
or
int3
xor
sti
ljmp
mov
lods
movsl
adc
mov
jl
cmp
mov
sti
and
xor
cmpsb
or
inc
not
xchg
fcmovnu
int3
call
and
repnz
dec
mov
push
xor
push
adcl
aaa
aas
gs
or
sahf
scas
sub
mov
fldenv
pusha
and
out
jg
int
jl
dec
stc
stos
xor
shr
stc
daa
shl
pusha
aad
push
dec
mov
lock
and
pop
outsb
aad
sbb
jmp
push
call
push
pusha
in
scas
inc
shrl
repnz
mov
lret
pushf
stos
lcall
push
add
mov
jnp
add
nop
cwtl
aaa
stc
addr16
mov
outsl
fstpt
mov
bound
pop
pushf
dec
loope
notl
lods
inc
shl
ds
js
lods
les
pop
out
leave
jle
sahf
sarb
insl
sbb
out
cmp
pop
daa
xor
stos
add
popa
lds
xchg
xor
cmc
xchg
mov
or
daa
push
push
xchg
or
push
orl
cmc
mov
scas
xchg
outsl
in
lds
lea
cwtl
sbb
push
insb
ja
bnd
in
sub
jbe
lea
pop
xlat
int3
in
lret
andb
sub
cmc
mov
mov
lea
push
xchg
cmp
mov
test
inc
ffree
jns
in
jmp
fnstenv
in
cmp
jae
repnz
cmc
in
and
adc
cmpsl
scas
popa
iret
mov
pop
or
testb
in
scas
inc
adc
xchg
jbe
mov
jg
mov
addr16
rol
mov
cmp
aad
pop
jecxz
icebp
stos
xor
je
xchg
fcoml
push
cwtl
pop
sbb
and
sti
fsub
sarb
fsubl
lea
enter
mov
mov
int
mull
jle
data16
cwtl
pop
stc
jns
mov
cltd
push
aad
repz
xor
jne
and
call
dec
jl
stc
or
dec
pop
scas
inc
mov
mov
inc
sub
outsb
addr16
jmp
or
add
insl
mov
or
popl
sahf
inc
mov
mov
mov
jl
xorb
mov
jb
mov
popf
inc
jb
mov
or
inc
adc
inc
push
xor
in
push
mov
sub
pop
cwtl
imul
ljmp
cmp
push
xchg
ja
pop
insb
dec
mov
inc
int3
sub
nop
add
xor
int
hlt
mov
aaa
pop
mov
mov
xlat
xchg
movsl
adc
xchg
pop
insl
jbe
jne
jbe
test
cs
push
xchg
push
mov
js
pop
stos
push
inc
inc
inc
outsb
dec
mov
inc
mov
inc
mov
pop
aad
mov
and
xor
clc
fisttpl
inc
std
pop
dec
push
jmp
pop
mov
sbb
xchg
jnp
lds
jne
arpl
mov
mov
sub
sti
mov
pop
testb
xchg
xchg
dec
lret
aas
push
ret
xor
in
push
rolb
add
adc
jnp
int
ret
cmp
push
orb
ret
outsb
clc
fnstenv
push
imul
setb
fcompl
call
pop
jae
test
es
inc
lcall
dec
lods
sti
and
pop
cli
xchg
xchg
cmp
lds
enter
dec
outsl
data16
xchg
push
imul
jae
inc
xchg
int
push
loop
outsl
fidivs
outsb
sbb
leave
inc
ret
mov
xchg
push
psrad
and
rorb
cmpsl
inc
lea
sub
test
sbb
lods
fucomp
inc
or
or
xchg
xor
lcall
fsubl
addb
rcr
xchg
cmpsb
ret
mov
jmpw
pop
sub
mov
fstl
outsb
outsl
fldenv
cmp
or
insb
mov
push
xor
and
xor
je
mov
test
jae
movsl
jno
dec
cmpsl
xchg
incl
insb
enter
cmpsl
xchg
mov
dec
xor
test
outsl
sub
movsb
inc
test
popf
inc
xchg
arpl
and
push
into
adc
int3
imul
iret
xlat
or
or
aam
xchg
les
or
mov
test
out
push
or
out
iret
enter
jp
mov
stos
dec
dec
cli
cmp
mov
mov
adc
popa
fists
int3
sub
lret
cmp
ja
cs
pop
lock
xchg
ja
push
ret
inc
mov
mov
cmp
push
loope
es
add
cmp
mov
pop
ret
das
jnp
push
insl
lcall
stc
ds
mull
clc
pop
shll
ror
sub
imul
jle
pop
pop
cld
mov
inc
lea
mov
cli
pop
aad
mov
and
jle
fs
mov
add
stc
jo,pn
orl
jl
jno
lods
add
jg
xor
in
push
ficompl
pop
sub
sub
jl
mov
jo
call
scas
cmc
xlat
enter
mov
sbb
fbld
jnp
lcall
addr16
daa
jmp
iret
gs
cmpb
inc
or
xchg
inc
inc
test
sarl
ljmp
scas
mov
js
scas
and
lret
addl
adc
or
movsl
push
test
inc
in
cmpsl
mov
hlt
leave
dec
icebp
inc
inc
pop
push
mull
aaa
lock
movsl
lcall
pop
xchg
fistps
pop
sbb
or
loope
in
dec
roll
mov
pusha
jnp
pop
push
add
adc
mov
or
out
pop
sbb
scas
es
in
in
xchg
pushf
sbb
fcompl
adc
xchg
scas
dec
loope
repnz
pop
ja
pop
out
or
shll
mov
stc
cwtl
inc
add
addr16
in
push
inc
in
xor
mov
add
or
ja
fdivr
cmp
mov
sub
pop
lahf
lock
rorl
xor
pop
pop
cmp
jl
loopne
test
daa
sbb
scas
inc
cwtl
es
inc
imul
dec
dec
aad
stc
movsl
dec
addr16
mov
dec
xlat
in
pop
or
jae
notb
lock
mov
lds
cs
lods
push
mov
sub
sub
mov
lods
imul
lods
push
scas
pop
pop
call
jo
rcll
fsts
mov
or
pop
dec
test
sbb
and
das
and
mov
cs
nop
sub
push
xchg
push
sub
movntps
sub
cmpl
mov
jno
into
aas
push
add
push
push
lea
es
mov
insb
callw
and
mov
mov
imul
jno
in
xor
or
lcall
outsl
aas
dec
mov
cwtl
fs
inc
xchg
xchg
cld
mov
out
xor
adc
jl
dec
test
jmp
sbb
mov
leave
sub
out
mov
and
xchg
into
push
sub
mov
mov
or
sbb
addb
outsl
fsubrp
mov
movsb
pop
mov
mov
inc
pop
dec
popf
test
stos
inc
mov
xchg
fldl
into
jno
mov
add
dec
push
xchg
adc
pop
push
insb
stos
negl
pop
sahf
gs
dec
mov
ret
testb
push
push
repz
mov
mov
in
insl
out
mov
popf
or
xor
popa
dec
push
fcoml
mov
mov
mov
push
xchg
push
ds
mov
sub
lods
or
pop
cmp
popf
shll
dec
xchg
inc
aaa
mov
sbb
sub
inc
jmp
std
jg
pusha
out
xchg
mov
cmp
pop
rolb
fstpl
in
pop
xchg
ljmp
shrb
push
jmp
sbb
push
push
xchg
and
inc
lret
cmpsl
lret
add
fwait
loope
sbb
rcll
xor
pop
repz
xchg
xor
aad
mov
mov
mov
xchg
test
inc
dec
test
or
test
pusha
sbb
mov
test
mov
pop
stc
enter
pop
sbb
mov
insl
pop
repz
lret
mov
lret
adcl
xchg
dec
add
movsl
stos
pop
les
repz
gs
sbb
pop
loope
ljmp
test
jb
push
lret
arpl
hlt
mov
jnp
xor
add
or
js
stos
adc
ljmp
pop
ljmp
sbb
fidivrl
push
jg
popa
dec
insl
xor
mov
ret
jge
jmp
dec
mov
rclb
out
ss
cltd
imul
dec
sahf
push
inc
push
movsl
dec
jo
test
testb
ds
sbb
adc
jne
clc
adc
push
frstpm(287
pop
jne
stc
dec
repnz
ret
pop
movzwl
inc
sbbl
cwtl
js
aas
shrb
ds
xlat
push
inc
adc
or
mov
mov
jne
arpl
dec
jne,pt
pop
in
sar
cmp
pushf
and
mov
add
imul
test
dec
stos
pop
dec
enter
test
push
outsb
mov
iret
add
mov
das
fcompl
fwait
daa
outsl
dec
sub
dec
sbb
iret
fwait
mov
cmp
fcmovnbe
test
scas
dec
jbe
int
pop
sahf
cltd
mov
test
and
mov
jns
pop
stos
and
sbb
in
add
dec
sbb
lods
rcrl
sbb
or
pop
or
and
insb
cld
cld
xchg
fiaddl
sar
push
and
cmpsb
daa
push
cmpsb
push
aaa
incl
lock
xchg
sbb
out
js
mov
adc
lahf
leave
xchg
cmpb
pop
sub
pop
pop
in
hlt
std
lods
int3
jo
mov
aam
ja
push
xor
cmp
cmp
mov
jae
lret
lock
sbb
jge
push
aam
imul
adc
ffreep
xchg
sub
xchg
pop
xchg
mov
jl
mov
mov
pop
jp
insl
mov
loop
dec
dec
insb
xor
sbb
push
int3
xchg
fsubp
sbb
into
rcl
cld
fsts
lahf
jl
push
sti
pop
mov
mov
insb
xor
mov
dec
mov
test
cmp
jo
in
xor
mov
mov
fsubrs
or
aad
xorl
xchg
dec
and
cmp
jg
pop
fdivrl
and
jmp
cmp
and
mov
jp,pt
jmp
aad
sbb
nop
jge
enter
in
clc
lock
jno
frstor
pushf
daa
shlb
daa
mov
shlb
das
stc
pop
and
and
ds
push
or
fcompl
and
je
dec
ds
and
or
pop
xchg
sbbl
movnti
dec
mov
scas
pop
ss
cltd
jno
loopne
dec
inc
pop
decl
cmc
mov
add
push
xor
mov
sub
fistl
negb
daa
xor
mov
jp
jge
ror
dec
repnz
push
mov
add
pushf
and
cmp
push
sbb
cmpsb
or
lret
mov
out
test
and
jle
pop
inc
mov
orb
ljmp
xchg
fnsave
pop
and
arpl
lcall
rolb
mov
pop
push
out
mov
sbb
mov
out
and
lea
pop
stos
roll
inc
inc
sbbl
outsb
outsb
and
xchg
mov
mov
dec
cmp
loop
aaa
subl
jmp
stos
shrb
jmp
es
shll
or
jl
pop
subb
movsb
push
push
xchg
sbb
mov
inc
push
lds
pop
push
xchg
mov
ljmp
clc
inc
stos
test
inc
mov
xlat
xor
aas
dec
add
outsl
jl
xor
ss
icebp
in
add
mov
add
jp
lret
mov
cmp
or
mov
je
jns
lret
pop
lret
sub
cmp
or
fnstenv
sub
lock
and
pop
push
pop
or
push
aas
loop
or
std
leave
jmp
in
aam
xchg
push
push
ljmp
xchg
out
inc
mov
sub
nop
dec
dec
push
pop
les
cmpsb
xchg
or
cld
sub
lahf
inc
add
add
mov
pop
scas
cmpsb
repz
mov
xor
sub
test
mov
jg
mov
test
mov
push
inc
notl
xor
insl
dec
out
xchg
cmp
xorl
loop
mov
nop
rol
pop
mov
sarb
mov
enter
pop
xor
xchg
frstor
push
fcompl
sub
lret
sbb
pushf
ret
pushf
add
lea
mov
add
dec
sbb
scas
shr
dec
popa
mov
mull
call
xchg
push
cmpsb
rcrl
insb
sub
jecxz
jg
xchg
inc
adc
mov
pop
xchg
hlt
ja
clc
cmc
insb
shl
in
popf
fstps
jae
fnstsw
push
test
stc
outsb
ret
cmp
and
cmp
and
pop
mov
xchg
fiadds
hlt
lcall
imul
mov
add
stos
jmp
lret
cmp
arpl
jno
xor
es
adc
out
pop
mov
fbld
pop
in
pop
and
adc
gs
dec
jns
pop
or
loope
sbb
test
test
lods
test
fnstenv
mov
pusha
xor
insb
stc
aaa
push
clc
sub
shl
and
in
jns
mov
lret
pop
stc
addl
xor
test
fwait
loop
mov
loope
scas
sub
test
sub
add
in
adc
push
push
jo
data16
jge
arpl
jg,pt
fs
xor
mov
outsb
jno
mov
pop
mov
ljmp
cs
sbb
pop
xchg
scas
popa
popa
in
scas
pop
rsqrtps
mov
dec
lods
test
jmp
insb
inc
test
adc
dec
pop
cmp
pop
stos
arpl
push
arpl
rolb
mov
mov
cmp
repz
jmp
cs
mov
pop
cltd
push
lea
sub
pop
add
inc
int
add
pop
daa
aaa
das
popa
mov
lcall
push
dec
ss
adc
mov
inc
sub
cmp
push
ja
sbb
or
rorl
sub
rorb
jle
stos
int3
pushf
cmpl
insb
movsl
mov
in
dec
sub
push
jge
mov
imul
push
sbb
test
aaa
sbb
sub
mov
dec
mov
or
inc
fucomp
mov
cmc
add
adc
xchg
stos
push
shlb
nop
xchg
lret
gs
testb
adc
ret
fsubrl
cwtl
gs
aas
inc
jecxz
pop
ret
fcoml
cmp
or
mov
das
sbb
push
jge
cmp
cmc
cli
xchg
cld
mov
cmp
mov
jbe
push
lahf
fcomps
push
inc
xchg
repz
xor
pusha
pushf
scas
add
in
ret
mov
mov
lret
js
sarl
inc
mov
sbb
adc
mov
mov
iret
pop
sbb
inc
cli
es
push
mov
scas
imul
stos
push
push
or
mov
bound
leave
lock
mov
push
xchg
lea
sub
adc
xor
add
add
aaa
or
data16
mov
ja
xchg
pop
fcmovb
mov
outsl
sarb
jle
pop
hlt
inc
repz
pusha
cmpsl
xchg
push
notb
xlat
data16
and
sub
push
cmp
jbe
rorb
jge
push
sbb
adc
or
jge
outsl
mov
stc
cld
subl
push
cmp
nop
outsl
jp
roll
cwtl
cmp
dec
push
test
in
fwait
or
pop
xchg
repz
adc
fs
clc
stos
push
mov
std
add
jge
rol
mov
add
mov
lock
je
lret
sub
xor
fcoml
mov
sub
das
repnz
int
fucomi
push
lahf
fwait
mov
loop
lea
cmpl
inc
in
insb
mov
scas
and
cld
xlat
push
inc
sbb
adc
insl
xor
jnp
push
mov
sti
sub
or
jmp
adc
add
clc
inc
sub
movsl
scas
xchg
stc
sub
jbe
mov
xor
or
sbb
jg
jmp
xchg
clc
push
out
mov
lods
jecxz
orb
push
xchg
sbb
repz
mov
das
iret
push
pusha
bound
sbb
cmp
sub
test
push
aad
pusha
xchg
mov
push
cmpsb
add
shrl
notl
pop
push
sbb
mov
inc
cltd
or
fstl
imul
out
mov
aad
inc
outsb
iret
add
imul
dec
cmp
insl
cmpsb
loop
jne
xchg
add
mov
push
movsb
gs
mov
jb
mov
fistl
push
jne
incl
or
mov
and
fidivrl
sub
cli
push
clc
mov
aam
popa
adc
sbb
jle
dec
add
pop
fs
mov
fwait
dec
push
movsl
cmp
xchg
cmp
jns
cld
vmovhpd
imul
movsl
fsubr
or
add
dec
sbb
jbe
jo
and
idivl
mov
pop
rcrl
not
loope
lret
in
lret
cltd
pop
dec
or
cmp
movsb
shl
addr16
aas
iret
sbb
loopne
in
aad
test
mov
cli
test
roll
adc
ljmp
sub
stc
adc
sbb
movsb
popf
stos
or
scas
fisubrl
shrl
mov
subl
out
fimull
lds
ret
cmp
repz
jbe
bound
push
jb
xchg
add
sbbb
lock
jp
jb
jae
pop
sub
fmuls
cmp
cmpl
mov
stos
mov
mov
aas
inc
pop
fs
imul
add
sbb
sarl
jno
jae
loope
sbb
xor
or
xor
aas
ds
dec
aam
sbb
add
lock
dec
dec
call
pop
sub
sub
lahf
cmp
xor
mov
mov
pop
test
push
xlat
jae
dec
ret
clc
jge
mov
cmp
mov
cmp
push
dec
popf
pop
sbb
inc
and
or
outsb
stc
pop
dec
inc
lods
sub
push
xchg
mov
out
cmpsb
jmp
push
push
test
add
mov
sub
jle
out
sub
push
xchg
mov
or
arpl
arpl
lods
mov
xor
inc
dec
sbb
scas
leave
pop
outsb
mov
mov
rcr
add
sti
xor
nop
inc
cmp
lcall
pop
scas
test
das
or
call
sti
shrl
pushf
jb
sub
std
sbb
and
insl
int3
lcall
jl
sub
ja
and
inc
mov
ret
mov
sahf
insb
xor
mov
dec
jg
out
sub
mov
mov
xor
ljmp
cmpsw
add
aam
mov
jne
test
cmp
and
nop
pop
mov
add
xchg
hlt
nop
dec
and
dec
mov
jmp
add
jge
sbb
test
sub
pop
or
sti
xchg
ds
mov
fcompl
xor
dec
fdivrl
jmp
inc
outsb
std
dec
int
gs
sarl
cld
out
xor
sahf
cmp
ljmp
cmp
add
xor
stc
push
aam
or
stc
das
movsl
mov
pop
jne
cs
inc
aas
mov
dec
mov
test
imul
arpl
test
pop
leave
jo
std
sarl
sub
fidivrs
mov
pop
push
or
pushf
xchg
jbe
jae
sub
fs
dec
test
mov
mov
cmp
dec
ja
cmp
xlat
sbb
mov
push
mov
add
popa
arpl
pop
or
orl
pop
pop
les
dec
popa
movsl
inc
leave
cmp
xor
fstp
or
xchg
jg
data16
push
movsb
dec
push
dec
cmc
lods
movsb
pop
xchg
xor
push
mov
pop
insb
jnp
out
add
sbb
mov
shrl
lds
xor
cltd
inc
pop
loopne
roll
lods
andb
dec
insl
and
rclb
pop
ljmp
enter
test
out
dec
push
mov
mov
scas
gs
cmc
or
movsl
mov
adc
fisttpll
push
mov
repnz
ja
jo
xlat
pop
int3
sahf
fdivrl
xchg
call
aas
aad
pop
and
jmp
repnz
mov
std
xor
and
add
jecxz
mov
jnp
ds
lock
jge
adc
outsl
push
rcll
jbe
or
fsts
xor
jge
leave
fstpl
inc
clc
push
sub
das
test
mov
mov
xor
xchg
pop
leave
enter
hlt
cs
lock
pop
xor
sbb
ja
js
or
fcmovu
cld
dec
inc
pop
test
cld
dec
xlat
cmp
dec
adc
jns
pop
jmp
pusha
lea
stc
push
jb
mov
call
roll
mov
call
in
fwait
movsl
jmp
dec
mov
out
jno
cwtl
dec
adc
add
mov
mov
bound
clc
sub
scas
in
setbe
ffree
xor
jnp
xchg
aaa
std
shl
fcmovne
pop
push
add
sbb
pop
and
clc
pop
push
sti
data16
xchg
lods
dec
add
xchg
sbb
lret
or
je
xchg
or
aaa
jo
mov
pop
mov
xor
sub
add
adc
loope
xor
cmc
negl
imul
inc
xchg
jno
mov
jo
bound
adc
sbb
mov
aam
mov
adc
in
bnd
cli
loopne
push
test
push
xchg
jnp
mov
loop
pop
inc
ret
dec
mov
sub
sbb
std
jge
sub
leave
pop
xor
hlt
fucom
in
sbb
xor
mov
add
popa
push
leave
xor
aad
in
imul
xor
filds
jp
pop
clc
mov
mov
dec
jnp
bound
rcrb
mov
push
xlat
out
dec
imul
std
dec
popf
jmp
sbb
lock
scas
push
push
insl
inc
fsubr
mov
cmp
pop
pop
inc
stc
ud0
daa
adc
leave
or
xlat
xchg
scas
rclb
adc
mov
mov
scas
adc
inc
int
jge
loop
cmp
test
cli
nop
nop
ds
xor
xchg
mov
sti
fcomps
fcoml
lea
stos
and
add
leave
ja
push
push
dec
sbb
add
lret
lcall
mov
popa
cmpsl
hlt
sbb
and
nop
xchg
sub
push
add
dec
test
cmp
bound
inc
push
sti
inc
dec
aam
pop
stc
sub
or
mov
jnp
inc
jb
xor
sbb
loop
rorl
rcll
xchg
mov
gs
add
mov
push
pop
fwait
rcr
sub
jmp
idivb
fsubl
push
adc
fdivrs
xchg
std
mov
movsl
push
mov
mov
lods
or
xchg
mov
add
xchg
fwait
push
sbb
mov
loopne
add
push
fstl
xchg
outsl
dec
lahf
outsl
pop
sarb
sub
mov
pop
repnz
scas
jne
lods
rolb
mov
jmp
mov
pop
cmp
loopne
ret
sbb
pop
stos
or
loop
inc
sbb
aas
lret
push
mov
daa
fdivp
ficompl
push
pop
fwait
lods
sbb
mov
mov
pop
xor
stos
unpckhps
xchg
out
stos
sbb
mov
dec
ror
insb
push
lock
jp
xor
aas
push
jl
outsb
arpl
ret
dec
mov
nop
and
icebp
or
mov
mov
cld
mov
icebp
test
adc
xor
pop
ficompl
test
repnz
or
test
pop
sub
pop
xchg
jb
popa
pusha
mov
insb
nop
inc
xchg
pop
or
xor
stc
xor
mov
jg
pop
outsb
orl
mov
cmpsl
cmp
repnz
cwtl
sub
orl
aam
pop
push
sarl
dec
xor
add
iret
cmp
mov
in
push
mov
cmpsl
push
pop
test
fstl
mov
icebp
imul
adc
mov
sbb
push
pop
pop
mov
xchg
dec
aad
xorb
rcr
pusha
and
xchg
xchg
mov
xlat
lods
in
cli
test
pop
icebp
push
sti
mov
in
movsb
std
outsl
in
sti
dec
rorb
mov
mov
sub
xchg
xchg
mov
pushf
push
fsub
push
mov
add
jb
out
cli
inc
shll
and
orb
ficomps
call
mov
les
and
adc
out
xchg
fcmovnbe
xor
lret
test
arpl
mov
sbb
out
sbbb
dec
mov
cmp
hlt
mov
mov
jnp
imull
fwait
add
mov
ret
dec
lock
or
int
mov
cmpsl
add
push
pusha
mov
cmp
mov
imul
xchg
mov
pop
and
push
xor
xchg
aad
mov
cmpsb
or
mov
scas
enter
xor
mov
icebp
xchg
dec
mov
mov
jg
push
and
mov
in
loope
sub
rolb
inc
mov
in
test
popw
outsl
adc
mov
lods
dec
add
int
mov
ret
rorb
fs
mov
adc
aas
fldln2
pop
mov
cld
adc
add
test
xchg
mov
je
cwtl
and
dec
test
orl
rclb
pop
xchg
loopne
cmc
test
dec
pop
xlat
inc
mov
nop
in
popa
dec
fwait
mov
push
fbld
mov
sub
sti
xchg
sub
in
or
stos
cmp
xchg
push
push
out
pop
fsubl
pop
mov
scas
add
and
popa
ljmp
cmp
and
mov
dec
sahf
inc
mov
and
dec
mov
sbb
xchg
dec
push
or
jo
and
jp
jo
inc
shl
sbb
xchg
call
outsl
push
int3
aaa
aaa
pop
mov
mov
je
push
jle
xchg
jns
push
or
jno
cmp
inc
or
sub
adc
push
push
lods
inc
mov
insb
fsubl
stos
les
push
xor
shr
je
cld
or
cmc
dec
pop
jle
inc
cs
call
xchg
aam
mov
je
push
sub
sub
cmp
dec
fucomi
insl
inc
xchg
jl
addr16
mov
roll
mov
pop
lods
adc
adc
rclb
push
fldl
jo
aas
mov
dec
mov
mov
adcl
xchg
lock
idivl
mov
inc
dec
pop
or
daa
stc
test
leave
jge
arpl
fisubrs
xor
lea
add
push
fimull
jne
les
sub
arpl
inc
pop
lods
cmp
into
sbb
ror
xchg
pop
in
stos
mov
sub
ljmp
je
or
jnp
add
lods
mov
xchg
adc
lahf
lea
dec
jp
push
out
out
cmp
jb
cmp
jmp
rolb
je
aas
aam
in
pop
pop
negb
in
loopne
xchg
bound
test
pop
fstpl
ret
dec
lods
int
rorl
pop
jmp
xor
mov
ret
pop
ss
cmpsl
popf
clc
stos
xor
fsubl
addb
hlt
push
shll
data16
cmp
push
xchg
dec
icebp
mov
or
cmp
stos
fidivl
pop
mov
aad
lds
xchg
mov
and
sbb
mov
xchg
cltd
sub
dec
mov
fcompl
mov
or
pop
lret
sub
jmp
outsb
sahf
lcall
and
sub
xor
adc
lret
xor
inc
es
xchg
xor
inc
icebp
fmulp
pop
pusha
call
pop
out
sub
fwait
mov
add
aas
mov
add
dec
dec
cld
lret
inc
mov
loopne
das
mov
psllq
add
mov
add
in
jmp
loopne
icebp
test
jbe
add
xor
sarl
jp
lret
in
pop
ljmp
sub
in
or
clc
pop
inc
aas
in
stc
and
sub
add
jo
sub
dec
cltd
push
sbb
decl
test
ljmp
aaa
mov
es
lcall
jb
mov
mulb
and
repz
xor
xor
ret
int3
lahf
mov
jp
sub
daa
jbe
aaa
mov
subl
jmp
and
ret
mov
out
outsb
imul
or
mov
jne
or
push
nop
call
insl
sub
clc
into
filds
pusha
add
sahf
test
arpl
test
cmpsl
adc
dec
adc
or
push
rcll
popa
inc
xchg
push
lods
mov
scas
lock
out
pushf
je
inc
cwtl
imul
imul
cltd
cmp
fcoms
sbb
jno
dec
sub
adc
addl
mov
sbb
or
jns
jo
lret
mov
aam
sub
inc
sub
dec
pushf
inc
dec
dec
loop
repnz
pop
insb
mov
xor
test
aaa
or
xchg
mov
cs
rcrb
mull
mov
sbb
mov
and
jnp
sarl
in
dec
insl
int
ss
vcvtsd2ss
pop
xchg
test
popa
ret
fucom
xor
std
setbe
mov
xor
push
test
pop
std
add
popa
psubb
std
lds
sbb
mov
adc
mov
out
and
outsl
sarb
into
mov
shlb
jne
lea
fdivr
aaa
jne
mov
in
pop
cmp
or
xor
test
popa
and
and
ss
fidivs
xor
mov
sbb
popf
sbb
fcos
xor
xchg
mov
inc
out
test
into
jl
arpl
cmp
insl
sbbl
popa
inc
int3
jne
xchg
inc
mov
inc
push
fs
xchg
popa
xchg
cmpsl
lea
xchg
jp
stos
or
or
push
cld
dec
outsb
mov
movsl
fstp
loope
into
scas
bound
lea
mov
mov
cmp
adc
pop
hlt
test
mov
fimull
lahf
sbb
push
xor
in
and
loopne
mov
jns
es
fsub
scas
mov
popa
or
xor
lods
mov
mov
cmp
movsb
rclb
cmpsl
test
mov
mov
and
add
cli
es
cmp
lds
fbld
mov
pop
incb
inc
or
push
cwtl
lret
and
pop
mov
add
push
bound
adc
pop
lcall
adc
cmp
repz
xor
mov
sub
sbb
and
push
adc
notb
loope
dec
xchg
jo
and
stos
mov
cmp
bound
adc
cwtl
mov
or
in
inc
clc
fs
sbb
mov
lret
jp
loop
sbb
rolb
push
in
scas
dec
push
and
inc
push
sub
in
shll
jnp
dec
jge
inc
sahf
sbb
xor
lcall
xchg
lock
dec
popa
data16
inc
fucomp
lret
add
mov
mov
or
jb
inc
icebp
mov
lds
push
scas
push
xor
loope
and
insl
fwait
iret
and
ret
push
stos
pop
mov
jbe
inc
ds
cmc
sub
adc
in
out
sbb
mov
pop
cmpsb
mov
mov
bound
mov
rcll
fidivl
sbb
ds
repz
jl
fcoms
loopew
push
mov
cmp
aas
out
popa
xchg
fsubl
bnd
pop
js
mov
sub
sbb
lcall
clc
add
sbb
xchg
rcll
dec
or
add
in
jo
dec
lcall
xor
jl
fsubrp
pop
leave
pop
ret
sub
test
movsl
or
lret
add
or
xor
int
push
add
lea
mov
sahf
pop
dec
repnz
dec
jle
sub
iret
stos
cmpsb
xor
xor
aas
mov
xchg
mov
dec
fistps
xchg
rolb
pop
mov
fisubrl
and
test
insb
cs
aas
xor
sbb
ret
bound
xor
sbb
sub
jne
and
cltd
push
rorl
cs
loope
cwtl
fstp
xchg
dec
mov
adc
jne
sbb
mov
jns
push
arpl
les
sub
shlb
popa
dec
movsl
add
out
push
les
cwtl
or
jno
adc
shll
shlb
sub
push
xor
imul
cltd
xor
call
jae
out
jb
mov
sub
mov
out
fstl
insb
test
movsl
aad
aaa
xchg
pop
jg
les
cltd
sub
test
les
call
stos
mov
scas
add
mov
lods
je
sub
in
ficomps
xor
rolb
pop
sub
es
mov
fsubl
jno
int3
outsb
stos
mov
sub
adc
fmull
in
sbb
sbb
mov
xlat
inc
sbbl
xor
call
rcrb
xor
sub
mov
sti
adc
inc
cmp
cs
bndstx
ds
es
fnstenv
lret
movsb
sbb
adc
scas
push
add
shl
cmp
insl
outsl
mov
sbb
stos
pop
mov
or
add
mov
mov
sbb
fisubs
ss
mov
lods
out
arpl
fs
mov
push
lcall
xchg
arpl
mov
mov
stos
clc
into
mov
dec
xor
xchg
push
in
leave
inc
jle
inc
addr16
test
xchg
rdpmc
mov
cltd
inc
push
add
movsb
mov
mov
cmp
mov
mov
andl
inc
stc
je
or
and
xor
ja
dec
mov
out
xor
nop
aas
xchg
ds
mov
ss
cmp
pop
bound
clc
jg
adc
lret
stos
jle
ljmp
mov
jmp
xlat
adc
mov
lret
inc
push
test
test
cmpsb
xchg
add
push
popf
ss
movsl
and
out
std
repnz
xor
negb
fldenv
xor
cwtl
sub
fwait
daa
pusha
shlb
mov
jle
pop
inc
pop
push
ja
rorb
or
mov
repz
cmp
xchg
xlat
or
roll
or
mov
insb
cmp
add
mov
aaa
xor
cmp
add
adc
push
loope
scas
fdivl
fstl
test
jecxz
xor
lods
cmp
mov
cltd
add
cmp
stc
fwait
xchg
repnz
stos
sub
cs
sub
or
ss
and
movsb
jg
clc
add
or
jae,pt
lahf
push
popa
pop
pop
xchg
push
mov
pop
xor
mov
lods
xor
mov
jb
ret
shr
roll
mov
adc
push
jp
rolb
adc
lea
popf
mov
outsb
xchg
jno
addl
sbb
pop
inc
adc
aam
fildl
push
mov
je
aaa
mov
jae
jecxz
ret
add
ficompl
lcall
popf
mov
bound
imul
sub
pop
adc
arpl
sub
mov
push
mov
pop
sub
sbb
ss
repnz
push
test
cs
test
mov
jmp
jp
cmp
add
test
iret
lret
mov
hlt
or
pusha
popa
lret
sub
inc
cmp
xchg
cli
hlt
jo
clc
fistpl
add
pop
xorl
movl
js
dec
xchg
stos
mov
inc
fildll
cmc
sbb
lret
push
insb
inc
mov
pop
push
push
aas
es
cmp
in
insl
fcmovnu
mov
iret
bndstx
mov
mov
repnz
push
fwait
inc
int
dec
push
dec
insl
cld
decl
into
fildl
movsl
sarl
push
cmp
push
test
loopne
fisttpll
mov
push
test
in
xchg
inc
xor
adc
das
mov
fcomip
mov
arpl
int
jae
adc
sahf
add
mov
or
sbb
call
inc
test
cld
pop
les
jmp
or
adc
loope
test
jbe
push
test
or
sub
outsl
inc
aas
leave
out
sbb
xchg
pushf
mov
test
sub
outsb
sbb
pop
xchg
je
cmc
mov
jns
test
loope
jp
jg
mov
mov
pop
xchg
testb
out
mov
adc
pop
andl
xchg
hlt
adc
leave
add
mov
lods
mov
icebp
mov
adc
cmp
dec
pop
iret
in
xchg
mov
lahf
mov
inc
push
aas
sarl
dec
mov
ljmp
enter
mov
leave
inc
push
shlb
mov
imul
adc
push
sub
lret
xor
lods
cmpsl
mov
mov
sub
ljmp
arpl
ljmp
pop
xchg
dec
aad
gs
add
lods
js
cltd
leavew
ret
pop
lods
lods
addb
or
xor
xor
and
shll
inc
int
xchg
je
movsl
xorl
ja
jbe
adc
jo
loop
or
lea
add
insl
sub
add
jl
mov
jnp
cs
mov
mov
or
jo
andb
arpl
sti
mov
cltd
fadds
shll
test
push
xchg
pop
inc
je
cmpsl
lods
in
pusha
ljmp
xchg
mov
cmp
leave
sub
out
mov
xor
stc
shlb
adc
in
fldt
jmp
test
out
adc
mov
das
enter
cmp
jle
pop
ljmp
ds
or
popf
lock
jge
jp
dec
enter
roll
testl
jle
loope
mov
ja
pusha
roll
jg
pop
pop
icebp
xchg
cmp
xchg
pop
xor
dec
aam
bound
gs
xor
data16
add
es
adc
ja
mov
add
xchg
loope
jge
push
ds
out
outsb
jg
out
or
xor
or
aaa
out
jp
imul
pop
int3
lea
cmp
imul
xlat
loop
andl
in
mov
mov
out
jmp
test
jo
fwait
lcall
inc
hlt
inc
movsl
rcrl
mov
and
inc
add
xchg
mov
repnz
pop
pop
cmp
adc
dec
in
adc
testb
fs
aad
out
cld
xchg
out
push
jp
fcoms
fisttpll
xchg
mov
cmpsb
das
cmp
jmp
mov
mov
clc
mov
aas
in
sub
nop
jno
cmpxchg
cmp
jns
xor
xchg
mov
sahf
adc
mov
pop
mov
sub
or
test
ja
push
dec
aaa
incb
and
xor
pushw
mov
mov
dec
or
cmp
jecxz
rep
inc
or
mov
inc
or
xor
mov
sub
mov
jbe
data16
or
ljmp
in
mov
fimuls
adc
js
lret
mov
mov
jnp
dec
cmpsb
cmp
jmp
fimull
leave
push
pop
cmp
dec
loopne
popf
lcall
mov
movsb
mov
lret
sbb
adc
cmpsb
shrl
xor
jge
jnp
arpl
sub
cmc
into
pop
dec
shll
mov
fbstp
lcall
jle
mov
out
inc
pushl
push
inc
out
iret
pshufw
pop
mov
cld
xchg
movsb
das
push
repnz
outsl
add
adc
rcll
ficomps
xor
inc
and
cmp
in
int3
lds
cmp
stc
inc
or
push
insb
dec
das
stos
mov
mov
inc
sbb
out
pop
rorb
aad
jp
push
jb
push
ss
add
jb
jns
sbb
dec
sub
arpl
inc
mov
insl
mov
pop
or
lcall
dec
cld
shl
loop
sti
jp
mov
loope
int3
push
add
inc
xor
lret
and
in
and
pop
xor
cmp
add
lret
loop
les
shll
call
mov
push
lret
inc
dec
lretw
and
shll
nop
cmpsl
dec
push
cltd
rcll
lret
jmp
addr16
and
adc
addr16
inc
leave
sub
insl
fisttps
sub
sbb
push
pop
xor
or
push
mov
outsb
daa
rcll
mov
inc
std
inc
adcb
xchg
add
sbb
mov
fldenv
pop
and
push
ljmp
sbb
xchg
xchg
mov
sbb
inc
dec
inc
push
sbb
pop
ret
cli
adc
mov
jno
out
push
imulb
outsl
dec
test
jne
testb
cld
fsubr
add
sbb
imul
test
test
in
mov
and
mov
and
pop
inc
sub
cltd
imul
add
dec
jb
rcll
mov
fcoms
cld
add
or
and
mov
cld
ds
and
xor
mov
jle
dec
mov
pop
int3
jecxz
adcb
dec
sub
lods
or
arpl
sub
leave
inc
sub
stos
or
or
and
push
sub
jecxz
test
rorb
xor
outsl
adc
mov
loop
push
inc
xor
cmpsw
pop
aaa
pop
add
jg
scas
lds
mov
and
dec
xor
ret
inc
lret
adc
cs
lea
mov
and
ljmp
inc
mov
popa
outsb
cmp
jle
xchg
push
lahf
and
adc
stc
insl
sbb
xchg
jno
dec
push
pop
rcll
or
fsubl
mov
cwtl
out
cmc
pop
push
pushf
jno
sbb
cmp
and
push
outsl
lds
push
mov
lds
inc
jle
jmp
bound
inc
lock
adcl
adc
push
inc
sub
pushf
out
je
or
mov
cmc
add
jp
lret
fistpll
popa
add
shrl
sbb
hlt
in
enter
mov
pop
pop
out
pop
pop
pop
insb
jg
lcall
sbbl
outsl
xchg
mov
int
ret
loop
mov
imul
cmp
lods
push
mov
aaa
add
les
aam
sahf
sbb
test
pop
int
nop
pop
inc
cld
jecxz
in
xchg
mov
xor
jge
sub
rolb
jl
pop
dec
push
loope
inc
insb
sub
xor
mov
test
xchg
call
jo
sub
or
lcall
or
pop
mov
lret
es
jns
adc
push
movsb
and
stc
outsl
mov
imul
xchg
mov
mov
jl
test
pop
push
and
fsubrp
sahf
loopne
push
jae
sub
enter
stos
mov
cmpsl
push
movsb
or
daa
cmp
in
and
icebp
ja
push
inc
adc
aad
arpl
pop
mov
mov
xchg
lret
add
inc
cmp
push
push
aas
popa
lock
iret
or
add
into
ja
jbe
ja
sbb
add
dec
int3
inc
repnz
fnstcw
mov
in
or
xchg
clc
andl
cmp
popa
ljmp
mov
repnz
in
repnz
push
ss
shr
push
arpl
dec
movsb
mov
jmp
lret
jl
or
adc
adc
in
ljmp
or
ret
sarb
jp
lods
cmp
daa
pop
fisttpll
mov
sub
mov
divb
push
mov
xor
clc
mov
lret
adc
lahf
out
xor
scas
insl
adc
shrb
test
mov
adc
fs
fsub
mov
mov
inc
and
dec
ja
test
rolb
rclb
jae
call
fcmovnu
andb
cltd
icebp
mov
pop
push
jnp
ss
or
jl
nop
dec
inc
xchg
dec
mov
dec
int3
xchg
stos
sub
or
mov
and
faddl
sbbl
int3
cli
jb
shl
iret
mov
aam
shl
out
into
add
and
sbb
lds
jnp
iret
outsl
call
xchg
xchg
cld
fs
pop
mov
pop
aad
fstpt
clc
loopne
xor
cs
push
sub
mull
fisubl
imul
xor
add
dec
ret
inc
xlat
pop
add
mull
insb
jmp
pop
stc
push
das
xchg
xor
lea
jno
out
add
inc
cli
stos
sahf
mov
cmp
loopne
cmp
sbb
int3
pusha
pop
es
mov
pop
stos
insb
pusha
adc
fs
xchg
ljmp
sahf
dec
shll
pop
ja
mov
pop
cmp
mov
xchg
mov
adc
push
cltd
push
xchg
mov
cmp
cmp
mov
or
fstpt
sbb
or
and
adc
and
sub
jmp
test
repz
jp
shll
cwtl
insl
pop
outsb
mov
sbb
dec
fs
fidivrl
lea
push
in
out
mov
mov
into
pop
cmp
dec
mov
sarl
dec
out
outsl
lods
es
xchg
popa
dec
cs
inc
cmp
loop
push
sbb
push
fidivl
outsb
in
fisubs
sbb
mov
push
in
outsl
xor
push
mov
cmp
cmp
pushf
fcoml
test
ret
call
cmp
and
cltd
inc
sbb
je
das
cwtl
sub
and
out
cmp
xchg
push
ljmp
xchg
sbb
and
jecxz
mov
push
aas
sbbl
lods
inc
pop
adc
aad
loop
ret
andl
jb
gs
pushf
or
jle
mov
das
sub
jns
shrd
push
cwtl
xchg
mov
adc
jno
cld
ja
scas
xchg
sahf
jge
out
call
or
je
jp
in
adcl
es
hlt
lcall
cmpl
lods
jge
and
push
mov
or
ret
jecxz
adc
dec
aaa
xchg
mov
mov
arpl
out
cmp
mov
jnp
lea
stc
lcall
scas
out
sbb
pop
sbb
hlt
arpl
jo
iret
fmuls
cmpsl
mov
ret
fdivl
data16
jg
pusha
test
data16
ja
mov
adc
jno
cmp
lods
xor
cld
dec
cli
fcoml
sahf
xor
rsm
lcall
test
hlt
jl
in
shll
call
insl
lahf
lret
push
sbb
mov
inc
add
xor
or
jecxz
push
push
jae
cwtl
xchg
lds
btc
nop
push
mov
arpl
in
mov
xor
ljmp
fdivp
mov
hlt
inc
xchg
or
sbb
lock
xchg
push
bound
mov
dec
xor
aad
push
call
mov
and
les
sbb
out
fisubs
or
js
dec
nop
dec
lcall
rorb
pop
es
lods
add
sub
dec
stos
fstpt
loopne
cmp
movsb
pop
pusha
sti
dec
mov
inc
dec
jecxz
js
shrl
scas
push
push
or
cmp
adc
dec
sub
jo
aad
out
dec
lahf
cmp
aaa
inc
les
pop
pushf
mov
data16
push
imul
inc
fs
xchg
mov
popa
push
or
dec
mov
addr16
mov
pop
cmp
repz
lods
sarb
gs
jb
mov
call
push
loopne
mov
cmpsb
xor
cmp
int3
mov
inc
or
sbb
cwtl
mov
xchg
stos
mov
stos
dec
push
mov
iret
pushf
insl
and
andl
imull
ret
int3
popa
js
mov
mov
fucom
enterw
sub
or
ficomps
mov
lods
mov
cmp
cmc
sbb
imul
sbb
mov
pop
addb
jae
xor
xor
fwait
popf
jp
xchg
scas
je
and
enter
adc
push
sbb
test
mov
push
xchg
dec
jmp
sbb
sarb
jb
mov
fucomi
mov
xor
push
negl
sub
pop
xor
aaa
pop
jp
in
push
jge
inc
aaa
or
sti
push
insb
ret
ja
std
or
lock
push
cbtw
xor
test
push
jns
sub
gs
sub
lahf
mov
cld
stos
pop
loope
std
pop
jo
xor
arpl
test
lret
sub
xor
push
cmp
sbb
add
sbb
jg
xchg
in
fbstp
mov
adc
outsb
into
mov
ret
jp
iret
test
sub
cmpsl
ss
dec
dec
jg
insb
pop
adc
jmp
push
inc
pushf
rolb
pushf
mov
mov
dec
push
adc
pusha
in
sbb
lahf
push
pop
idivb
les
es
cld
enter
cmp
pop
fisubrs
mov
xchg
jmp
fnsave
sub
xchg
cmpsb
clc
mov
jbe
insb
and
xor
and
push
xlat
and
inc
in
ja
fs
rcll
pop
xchg
pop
sub
clc
clc
movsl
push
mov
loopne
fisubrs
loope
pop
cmp
aam
mov
cli
aaa
lret
or
enter
xchg
dec
dec
sub
enter
mov
cs
js
in
lods
test
or
lret
jb,pt
bound
dec
and
aas
pop
dec
loopne
cld
dec
fs
cmpsl
add
push
xchg
loopne
imul
and
aad
int
jbe
lea
xchg
cmc
xchg
lds
in
idivb
andb
std
jae
outsl
scas
aas
xorb
pusha
iret
dec
xlat
jbe
add
adc
cmc
jns
xchg
es
xor
or
pop
lret
js
fstl
add
lcall
jnp
sbb
cmp
psllw
push
mov
gs
jae
test
cmp
sbb
mov
lea
push
sub
xchg
test
jge
icebp
fchs
addr16
cmc
movsb
into
je
pusha
lods
mov
sub
mov
mov
mov
push
xor
sti
es
jmp
cmpsb
negl
sbb
mov
repz
push
cli
outsb
stos
ds
repnz
test
shr
jns
and
xchg
push
or
push
lret
xor
mov
in
inc
aas
push
sahf
imul
jl
cmc
inc
inc
mov
adc
in
cld
std
push
dec
shll
push
out
jo
xchg
lret
sbbb
add
dec
imul
dec
push
push
xchg
cltd
and
pop
loope
leave
or
sahf
outsl
fnstcw
mov
cmc
xor
imul
jno
jl
add
or
sbbl
xor
mov
xchg
jl
push
fwait
les
push
dec
lret
fsubrl
int
cmp
fiaddl
imul
mov
daa
lahf
fstpt
loopne
roll
jmp
ja
mov
or
dec
outsb
push
cmpsl
inc
inc
sub
xchg
dec
roll
out
xchg
xor
in
mov
fs
adc
test
jae
and
mov
rolb
out
iret
sub
jg
sbbb
dec
mov
mov
sub
scas
push
xor
not
mov
ss
rcrl
sahf
lods
sbb
test
arpl
mov
stos
stos
cmp
jecxz
fdivl
in
lock
xchg
push
test
xchg
in
shr
cld
push
sahf
stos
repz
ret
xchg
outsb
or
rorb
movsb
pop
adc
pop
js
aad
cmp
pop
nop
push
sarb
xchg
xlat
stos
sub
mov
inc
xchg
fs
loopne
mov
jns
sub
div
pop
lret
movsl
stc
push
dec
outsb
sbb
popf
or
push
fidivrs
or
sbb
pop
fsubrs
mov
pop
add
sub
sub
push
push
ret
jl,pn
cmc
or
xchg
cmp
gs
xchg
jg
pop
out
pop
test
mov
out
inc
and
pusha
fmul
add
enter
ja
fldt
jns
jae
lahf
sub
test
out
jg
dec
cmpsb
fwait
push
inc
pop
and
cmp
sbb
lea
jb
or
fldt
nop
sub
mov
mov
outsb
add
add
int
adc
xor
in
mov
addr16
cli
pop
mov
mov
add
popa
push
pop
fmulp
loope
addr16
add
xchg
xor
cmp
jb
push
scas
in
mov
pop
shll
lea
shlb
and
pop
int
test
repz
fdivrs
adcl
xchg
sahf
sbbl
jg
sbb
cs
and
jmp
xchg
pop
jo
int
cmp
out
cli
dec
and
inc
not
inc
aam
cmpsl
push
fwait
mov
call
mov
dec
in
test
in
and
daa
lret
scas
sub
pop
mov
scas
ljmp
test
pop
data16
lret
xchg
dec
stos
es
push
xor
sbb
jae
std
shlb
stos
xchg
aam
fdivr
leave
loopne
js
xchg
lret
les
push
repnz
out
jb
sub
cmp
cmpsl
sbb
jp
fs
lods
and
mov
or
int
je
bound
jge
lods
push
sarb
mov
mov
xor
out
sahf
jle
xor
xchg
cmp
pop
cmp
in
jmp
inc
loop
cli
cwtl
push
jb
stos
xchg
add
imulb
andl
adc
je
sbb
fcomps
les
and
add
dec
fiaddl
inc
adc
and
push
hlt
jp
push
push
and
cmpsb
test
and
or
sub
xor
jnp
jecxz
daa
push
test
movsl
rcll
push
das
xor
adc
in
push
loop
push
add
fsts
fstl
icebp
int
cmp
push
mov
cwtl
mov
repnz
xor
and
adc
push
aam
scas
fdivs
aam
aam
ja
push
into
push
stc
shll
xchg
push
xchg
mov
jno
sbbl
push
mov
in
cld
or
mov
inc
add
jnp
movsb
mov
mov
sub
testw
inc
adc
mov
xor
mov
in
cs
push
testl
inc
std
pop
sbb
fucomi
mov
adc
sahf
rolb
push
and
sbb
clc
loopne
adc
push
daa
add
bnd
dec
shrb
aam
in
mov
mov
dec
repnz
adc
iret
loop
inc
lahf
insb
sub
pop
sbb
cmp
and
imul
shrb
cltd
add
aas
mov
xor
enter
pop
dec
adc
es
add
mov
es
xchg
cmpsl
dec
ret
stc
sbb
fiadds
push
push
push
outsl
nop
iret
out
sbbb
rcrl
bound
mov
xor
std
imul
fwait
dec
pop
mov
pop
jmp
xchg
cmp
and
inc
icebp
xor
adc
repnz
mov
adc
aad
imul
mov
sub
pop
mov
jb
sbb
insl
jg
mov
test
inc
cs
repz
imul
pop
dec
and
cltd
lock
inc
es
pop
cmp
and
pop
inc
push
ja
push
jns
shll
jbe
loopne
add
push
addr16
stos
adc
pop
mov
mov
ret
sub
das
sbb
dec
mov
mov
cli
xchg
mov
mov
pop
xlat
and
cmpl
aad
push
gs
out
cld
mov
test
dec
ds
push
xchg
pop
out
data16
imul
xchg
sahf
js
cmp
push
mov
out
repnz
pusha
mov
pop
test
push
fbstp
lds
out
cmp
popf
cmp
jns
lods
andl
lcall
enter
iret
sti
cli
and
cmpsb
es
inc
lcall
popl
fcoml
mov
mov
sarb
cmp
add
sahf
icebp
xchg
lahf
jmp
stc
iret
xchg
mov
addr16
out
inc
les
bound
jno
push
mov
repz
jnp
xchg
and
add
push
sbb
imul
test
mov
daa
xchg
jp
out
or
movsl
add
sub
loope
js
dec
fbstp
add
adc
pusha
inc
jnp
dec
pop
and
or
push
xlat
in
sbb
or
sbb
rcrl
and
xor
div
xchg
lds
jbe
aad
out
test
or
gs
pop
sbb
imul
movsl
sub
cmp
inc
cmc
xchg
scas
js
mov
cli
jl
jmp
cmp
adc
outsb
mov
call
pop
jnp
dec
mov
mov
pop
adc
xchg
sub
jne
adc
mov
cmpsb
pop
mov
jno
sbbb
aas
xchg
out
in
fcmovbe
cld
or
fidivrs
ss
out
hlt
mov
stc
mov
sbb
decl
popf
sarl
mov
ja
outsb
data16
clc
and
mov
push
mov
or
xor
mov
xchg
movsl
dec
push
in
std
test
cmpsb
out
xchg
mov
cld
push
cs
mov
in
test
dec
lcall
xchg
or
lea
pop
insb
lock
fisubl
and
jb
pop
iret
sub
and
dec
pop
sub
pop
xchg
jae
insl
icebp
sub
push
and
push
fwait
adc
sbb
dec
cmp
xlat
add
out
add
cmp
sub
sbb
test
stc
sub
lret
push
push
pop
and
dec
mov
mov
inc
inc
pop
inc
lea
jmp
xchg
jg
out
shll
icebp
xchg
je
cmpsl
mov
in
push
sub
pushf
call
cld
push
adc
inc
add
and
fucomp
mov
inc
outsb
fimuls
scas
pop
pushf
in
pop
push
mov
loop
scas
push
xorb
mov
cmpsb
in
mov
cmp
push
and
ret
xchg
cmp
sbb
inc
or
fwait
push
sarl
test
fldt
jmp
or
mov
clc
push
push
lcall
mov
or
sbb
dec
jne
outsl
or
dec
dec
out
sahf
enter
mov
mov
mov
clc
lods
lahf
fisubl
jns
movsl
mov
add
dec
or
out
xchg
rclb
mov
jbe
xor
xchg
mov
xor
cli
mov
add
sbb
scas
adc
stos
lea
out
movsb
rcrl
out
jp
or
adc
dec
data16
leave
add
jecxz,pt
adc
aad
shrl
ret
add
cmp
xor
insb
pop
mov
jp
jp
adc
mov
adc
xor
xchg
xor
outsl
cld
cmpsb
iret
fcom
jmp
cmpsl
loope
aas
push
adc
xor
scas
cmpl
pop
push
shlb
mov
jnp
inc
scas
mov
xor
mov
shll
les
pop
add
push
sub
adc
mov
cld
adc
push
negl
jbe
cltd
aad
mov
cmpl
addr16
jno
scas
jbe
sub
pop
call
daa
inc
mov
lcall
sbb
jb
xchg
dec
call
pop
and
sbb
jp
sub
and
adc
addl
rorb
mov
xchg
sub
sub
push
lret
les
cmpsl
pop
mov
inc
push
repnz
test
sbbb
cmp
xchg
mov
mov
inc
ljmp
mov
mov
mov
push
jg
dec
int3
mov
and
mov
cltd
sbb
pop
cltd
jecxz
es
out
sub
and
adc
popf
clc
sbb
push
sbb
insl
xorl
push
jge
out
ljmp
cmovne
xchg
push
xchg
adc
fsubl
stos
mov
in
cli
mov
test
imul
fdivrs
xor
loop
and
stos
cmp
xchg
sub
push
cmp
in
pop
fwait
dec
push
sub
inc
repz
mov
sti
aas
mov
mov
rcll
jg
push
lahf
pushf
pop
insl
es
out
sahf
add
loopne
mov
ret
and
mov
xchg
pop
push
movsb
mov
xor
xor
and
aam
mov
mov
inc
push
push
cmpsl
imul
push
jne
add
or
push
outsb
fildl
or
cltd
test
inc
lds
push
arpl
and
lea
xchg
js
js
adc
rolb
adc
dec
cmpsb
fs
add
inc
shl
mov
xchg
out
cmp
bound
sbb
mov
cmp
lret
mov
daa
rcrb
stos
push
add
jae
push
stc
clc
xchg
xchg
pop
int3
pop
sbb
stos
adc
jnp
push
and
cwtl
jmp
push
int3
jle
lea
in
cld
xlat
jmp
rcrl
enter
jb
adc
lret
push
into
dec
pop
sub
insb
or
into
mov
adcb
mov
sarb
dec
adc
push
popf
adc
pop
ss
mov
in
call
mov
mov
push
cmpsl
inc
dec
dec
test
jge
imul
mov
push
mov
xchg
int
test
inc
outsl
mov
lcall
cmp
mov
fwait
jecxz
push
dec
loope
das
jl
shll
dec
loopne
dec
mov
xor
btr
mov
jge
push
and
xchg
inc
popa
lods
notb
fldt
ljmp
int
pusha
push
test
and
sbb
data16
nop
jae
mov
adc
push
xchg
rorl
cmpsl
ret
nop
push
sub
ret
ret
pop
mov
dec
int
das
and
pusha
int3
mov
xor
jb
mov
xchg
jp
sbb
xchg
dec
xorb
sets
xchg
sub
mov
sahf
hlt
inc
in
push
js
mov
in
mov
cli
in
into
mov
sahf
inc
mov
xchg
or
sub
add
mov
jmp
pop
fwait
inc
aaa
loope
mov
int
mov
inc
into
push
repnz
scas
jno
lock
mov
loope
mov
fnstcw
sbb
lock
xchg
fmull
mov
cli
or
dec
lock
pop
sbb
sahf
cltd
fwait
dec
add
xchg
outsb
mov
stc
xor
mov
jno
int3
push
scas
jbe
adc
push
dec
add
test
scas
sub
std
xchg
call
push
imul
cmpsb
repz
xchg
sbb
lods
stc
mov
push
add
pop
pop
pop
mov
inc
rcrb
inc
les
mov
sti
push
xchg
mov
sbb
cmp
add
call
pop
jbe
sub
frstor
xchg
pop
pusha
cmp
in
dec
and
or
out
ljmp
outsl
add
dec
xor
push
mov
jecxz
stos
mov
and
data16
add
add
adc
xchg
push
bound
fsubrl
dec
or
icebp
mov
ljmp
outsb
dec
into
xchg
test
or
out
jae
cli
pop
lea
and
dec
test
addb
xor
dec
xchg
jae
aaa
in
into
xorl
pop
div
inc
mov
fsubs
cli
xor
pop
sbb
nop
lea
sbb
push
sbb
jp
stc
mov
les
lcall
push
mov
fs
ds
adc
aam
xorb
push
and
aad
stc
aad
leave
dec
mov
or
inc
mov
mov
aaa
arpl
mov
icebp
les
movsl
mov
clc
push
outsb
xor
jb
cmp
sbb
or
and
push
push
sbb
cmpsl
dec
out
lock
xchg
dec
add
push
xchg
pushf
test
mov
cli
mov
xchg
rorb
aas
mov
and
ja
stc
dec
mov
hlt
jge
lods
fisubl
pop
xchg
into
or
mov
in
add
adc
and
insl
inc
mov
mov
pop
popf
xor
xor
mov
lea
push
push
fidivrs
and
scas
push
int3
fsts
sbb
mov
pusha
xor
jle
mov
jne
ret
push
cmpsl
into
popf
mov
outsl
ret
jnp
push
lcall
fildl
sbb
jbe
scas
fs
adc
mov
stos
or
loop
xor
dec
xchg
xchg
add
adc
jbe
loope
lahf
cmpsb
xchg
jno
pushf
mov
mov
and
dec
std
push
xchg
addl
sub
movsl
push
or
fistps
test
addb
lods
inc
xchg
jge
mov
popa
xorb
cli
outsl
adc
adc
imul
xchg
out
lods
movsb
xor
rcrb
xor
push
movsb
cmp
inc
in
xlat
push
dec
lret
jge
movsl
mov
inc
push
nop
xlat
mov
adc
roll
cwtl
cmp
lret
mov
fiadds
push
jo
imul
ja
sahf
and
loope
xchg
inc
inc
movsl
mov
jb
sbb
cmp
dec
lock
in
xor
jmp
mov
addr16
mov
out
cmc
xor
xlat
fldt
test
scas
mov
adc
jl
jg
lods
push
outsl
jle
dec
jae
add
hlt
adc
or
pop
ljmp
mov
je
es
test
xor
std
xrelease
dec
push
cmp
sahf
test
shl
repnz
andl
lahf
add
mov
out
xchg
cmc
repnz
fcmovu
outsb
sub
scas
mov
int
fwait
shl
and
test
lods
notb
mov
rclb
and
xchg
clc
lcall
int
daa
jp
pop
add
lods
cmp
jmp
mov
sub
cmp
pop
in
xor
jmp
ja
mov
ds
adc
je
push
stos
adc
fucomi
xchg
jo
fimull
mov
outsb
out
insb
ret
iret
fisubrs
pop
xor
push
hlt
subl
cmc
and
test
decb
out
xor
cld
push
inc
add
cmp
js
dec
mul
stos
rcr
inc
jbe
and
aaa
xor
leave
test
adc
imul
cwtl
lea
add
clc
mov
cmpsb
xor
ja
movsb
mov
jle
inc
dec
mov
sbbb
and
adc
ds
popa
push
and
in
rorb
and
in
adc
cmp
fcmovnb
add
lret
jo
int
inc
out
push
int
inc
repz
popf
add
jne
lea
or
fbld
cmp
xlat
aas
out
push
xor
adc
dec
xor
aam
testl
les
cmp
imul
stc
adc
mov
lret
add
push
roll
mov
sub
loope
pop
gs
xlat
out
fnsave
cltd
ja
nop
or
jae
bound
pop
lahf
dec
out
les
mov
push
pop
jo
mov
scas
sbb
mov
pop
orb
jno
fldl
test
pop
in
shrb
inc
ljmp
fildll
andl
sub
shlb
out
cltd
or
lret
inc
mov
shlb
push
loope
inc
add
or
das
add
pop
add
add
popf
addb
in
push
decb
jecxz
pop
inc
mov
push
push
imul
sar
aas
aam
adc
in
dec
subb
mov
push
add
lret
repnz
data16
dec
ja
and
cmp
sbb
test
xchg
dec
xor
mov
xor
add
out
sub
cs
pop
shrb
js
cmpsl
jle
mov
jp
mov
insb
ds
push
or
repnz
push
test
add
subb
bound
xor
sahf
sub
xlat
mov
loopne
jmp
add
jmp
mov
insl
fidivs
pop
scas
arpl
jle
and
lods
sub
std
push
mov
adc
in
sub
stos
mov
subl
push
lods
pop
aas
add
cmpsl
push
adc
push
add
movsb
cmp
and
dec
cmpsb
mov
shlb
pop
mov
dec
xlat
dec
adc
push
push
xor
fwait
xchg
lret
decb
mov
mov
cmp
xor
movsl
sub
mov
mov
addr16
je
pusha
xchg
mov
arpl
pop
aam
js
push
inc
clc
mov
imul
adc
rorl
test
xor
pop
sbb
dec
sub
fsubp
xor
jmp
sub
inc
arpl
daa
sub
jp
mov
and
lea
aaa
sub
or
inc
inc
fs
adc
push
push
push
xchg
rclb
sub
aas
loopne
inc
leave
test
test
jl
std
xchg
stos
fs
sbbb
inc
push
jnp
jae
mov
aaa
sbb
xchg
fistpl
add
inc
push
ljmp
enter
jae
sbb
in
jge
push
lret
cld
push
incb
push
jnp
pop
mov
sub
dec
ret
jle
push
push
jbe
sub
repz
fidivrl
sbb
jb
mov
adc
ds
add
jnp
pop
sbb
cwtl
mov
popf
daa
aam
movsb
push
lods
add
adc
mov
cmc
je
movsb
aas
cli
arpl
dec
push
mov
mov
inc
lea
addl
jne
xchg
and
in
ret
movsb
jl
sub
lret
add
sti
repnz
inc
std
or
sub
adc
pop
test
inc
leave
pop
pop
jg
stos
clc
fisubrs
xchg
pop
clc
push
mov
mov
adc
fs
adc
imul
push
adc
int3
sbbb
or
movsl
lock
xor
jmp
dec
mov
shlb
mov
sbb
rcl
pop
sahf
mov
dec
dec
add
test
sbb
push
fimull
cs
aas
fwait
iret
inc
test
in
les
es
loope
ja
je
push
adc
insb
cltd
out
pop
pop
std
ds
mov
es
sbb
push
rclb
repz
in
jg
ret
inc
out
rcrb
push
fldt
and
aad
mov
enter
mov
adc
rcll
in
test
insl
repnz
dec
ret
aad
mov
shl
es
out
fisubrl
mov
adc
pop
push
rcrb
aas
xchg
jle
fstpt
jmp
mov
ss
cwtl
pop
push
lahf
mov
push
push
mov
inc
push
xchg
aam
in
stos
in
rorb
sub
push
xor
pusha
sbb
or
jne
mov
sub
stc
sub
xchg
mov
js
xchg
lods
rolb
adc
js
xchg
out
jg
lds
jbe
lock
shrb
pop
loop
sbb
ret
call
movsl
cmp
xorb
mov
sahf
loop
and
fwait
add
iret
sbb
jns
loopne
xor
jns
rol
jbe
add
mov
pop
mov
repz
ret
gs
repnz
lds
push
mov
xchg
mov
inc
int
int3
xchg
pop
xor
shl
fistl
adc
inc
mov
mov
sub
mov
sub
cmpl
sbb
ret
add
lods
outsb
loop
or
outsl
xchg
jp
xor
mov
shlb
mov
inc
ja
pop
into
cmp
jp
push
in
add
rcl
pop
repnz
or
push
fidivl
int
mov
xchg
insb
xor
xlat
arpl
or
push
repz
sbb
cwtl
ds
test
jmp
inc
adc
and
sbb
and
dec
xor
xchg
inc
rcrl
push
cld
out
dec
pop
popf
call
mov
into
scas
xchg
movsl
jne
shlb
jmp
js
scas
and
jecxz
and
mov
mov
aaa
mov
test
mov
mov
inc
sub
pop
push
gs
jmp
cmp
adc
lahf
cli
push
cmp
popa
xchg
mov
mov
repnz
fs
lret
popf
sub
scas
pusha
xchg
jb
cmp
push
fsubrp
and
rcrl
sbb
test
sub
adc
outsb
sbbb
insl
jns
cmp
cmp
mov
jmp
std
push
sub
cmp
add
pmulhuw
mov
lock
pop
scas
roll
and
xorb
hlt
lea
in
cld
add
popf
js
sub
xchg
add
imul
fsubs
jb
in
lret
lret
cmp
push
data16
inc
mov
sbb
into
mov
cmp
push
pop
lea
push
xchg
jecxz
out
add
jecxz
test
or
hlt
xlat
mov
aas
das
jge
inc
adc
adc
mov
xchg
aaa
sub
mov
adc
or
sysret
push
lcall
and
aam
add
sarb
icebp
loopne
subl
jo
and
cwtl
sub
int
pop
mov
xor
xlat
jno
push
pop
in
lea
inc
push
sub
movsl
enter
aaa
cmp
aam
cld
inc
jmp
sarb
mov
fsubp
mov
mov
inc
pop
jl
cltd
inc
or
jmp
call
mov
andl
sahf
hlt
jg
out
enter
inc
adc
cwtl
and
popa
and
sti
xchg
cmp
push
add
dec
xor
push
jo
add
daa
jbe
xchg
shl
rcl
add
push
mov
mov
xchg
push
iret
dec
xor
sub
or
push
movsb
fst
out
xor
bound
ret
or
rclb
and
jne
mov
sub
dec
aaa
mov
xchg
xchg
xlat
addr16
mov
mov
cmp
js
in
adc
sub
cmp
xchg
addr16
adc
gs
lods
enter
in
cmp
sub
int3
pusha
or
call
test
cmpl
cmpsl
test
push
mov
jg
cmpb
jno
pusha
stos
fldt
clc
mov
xchg
mov
dec
cmp
sub
ret
enter
adc
xlat
adc
pop
jbe
pop
lret
aam
mov
mov
leave
ret
cli
xchg
mov
jae
dec
pop
sbb
sub
push
sti
lret
stos
faddl
and
sbb
mov
push
and
dec
aam
outsb
lahf
test
jle
sub
jns
inc
mov
outsb
xorl
lret
stos
scas
out
pop
jne
jge
scas
push
andb
cmp
adc
test
call
mov
adc
push
adc
push
adc
mov
inc
orl
push
subl
cmp
imul
sahf
out
jno
or
inc
add
lcall
arpl
insb
andl
repnz
dec
fldl
ljmp
dec
inc
sbb
std
fwait
and
cmovp
or
mov
out
test
push
xor
cmpsb
cltd
jns
xorl
sbb
sbb
mov
lcall
movsb
outsl
out
add
orl
cld
popa
scas
sti
adc
aas
xor
scas
mov
stos
jno
fstpt
or
popa
icebp
mov
call
dec
xchg
pusha
in
or
dec
into
and
dec
push
sti
lahf
adc
xlat
nop
aam
sbb
rol
nop
jnp
sbb
adc
lds
add
addw
inc
rorl
mov
push
aad
movl
test
decb
xor
popf
mov
lock
xor
jne
ror
lods
xchg
icebp
mov
push
pop
cld
inc
adc
lcall
hlt
adc
fcomp
bound
mov
loop
push
bound
mov
sbb
or
int3
mull
mov
sub
push
pop
test
ljmp
sbb
test
popf
cwtl
addr16
pushf
xlat
pop
pop
add
rol
rol
test
mov
sub
addr16
jg
push
and
sub
mov
mov
jae
test
and
and
sub
ret
and
outsb
out
pop
lret
in
leave
mov
push
inc
inc
adc
and
cltd
aaa
xor
mov
icebp
inc
lahf
adc
push
inc
mov
mov
sub
stos
inc
popf
insb
sub
jnp
enter
sbb
gs
rcll
sar
mov
out
mov
fistps
sbb
addr16
xchg
pop
pop
mov
mov
jge
xor
pop
loopne
sbb
and
lock
ja
test
xchg
push
mov
jo
int3
jo
push
xorb
and
pop
test
xchg
lods
jbe
cmpsl
cmc
lret
movsb
je
push
int
add
mov
push
sti
xchg
xor
fmul
or
rcrl
mov
push
sub
shrb
add
shrl
cld
adc
xchg
stc
lods
push
sbb
cmpsl
or
push
and
lahf
sahf
sbb
cli
mov
sub
js
push
sub
and
inc
and
mov
cli
js
mov
dec
push
xor
cld
xor
mov
ret
dec
push
jae
test
or
jl
jbe
push
inc
dec
jle
jmp
jge
adc
sub
pop
pop
mov
mov
test
push
pop
push
incl
in
aad
xlat
cmp
repnz
push
pop
and
push
xchg
insl
sbb
rcll
ret
cmp
int3
testl
jno
mov
jns
fidivrl
pusha
outsb
mov
dec
xchg
popa
das
mov
cmp
and
test
jp
push
test
ret
mov
mov
inc
mov
movsl
lahf
lea
outsl
xor
sub
push
scas
lret
sub
divb
imul
cmpl
js
jo
push
scas
xor
or
sbb
jmp
fwait
sbb
lcall
dec
loopne
jnp
mov
in
decb
jne
scas
rcrb
push
js
push
mov
mov
sub
pop
std
jo
shll
lcall
fcoml
add
mov
push
add
jb
sbb
push
jno
daa
repnz
xor
popf
jo
push
fcoms
sub
add
or
in
and
xchg
sub
push
or
xor
mov
xor
lea
lds
dec
dec
data16
fiadds
into
mov
push
gs
roll
shrl
inc
mov
inc
ret
call
enter
mov
xchg
mov
loope,pt
pop
push
test
cmp
mov
insb
in
hlt
sbb
jbe
in
clc
sub
cmp
sub
pop
mov
out
lock
ja
mov
sbb
mov
cltd
inc
lds
imul
cwtl
or
xor
outsb
loop
jbe
imul
mov
rolb
daa
pop
xchg
push
data16
out
scas
fdivrl
repnz
mov
lret
add
loope
xchg
push
shll
sbb
fistpl
cmpsl
push
pop
shlb
xor
dec
inc
int
sub
jmp
jno
lods
sub
pop
push
not
or
hlt
cmc
dec
pop
inc
mov
orl
outsl
or
inc
rcrl
sub
andl
xor
incl
clc
xchg
or
mov
fprem1
scas
ret
mov
xor
xor
aas
and
push
cmc
sbb
or
sahf
sqrtps
and
push
movsb
adc
pop
movsb
mov
idiv
push
jne
push
push
stos
lret
inc
inc
cli
jnp
lods
stos
adc
in
jo
sahf
jg
int
sbb
shl
jae
adc
mov
xchg
ret
out
sbb
cmc
testb
sub
nop
dec
imulb
mov
ja
adcl
leave
mov
mov
or
gs
clc
popa
orb
add
push
and
enter
insb
ljmp
jecxz
jbe
icebp
fcmovu
stos
test
push
out
jae
cltd
push
dec
test
cmpsb
sahf
les
adc
repz
jg
divb
jecxz
call
fistpl
or
jo
xchg
out
push
mov
popf
mov
lock
jbe
inc
int
jbe
xchg
sarb
rol
ret
es
sub
and
sbb
stc
out
pop
push
sti
or
sti
mov
mov
push
enter
lret
cld
in
sub
fwait
mov
pushf
mov
pop
pop
push
fisubl
xlat
cmp
lods
xor
inc
adc
and
sbb
insb
fwait
xchg
test
and
dec
or
xchg
mov
jle
test
repz
stos
jo
push
imul
aad
pop
outsl
or
or
pushf
jo
rcll
xchg
aaa
pop
ljmp
jmp
out
mov
stos
fsubs
inc
popa
jb
adc
cld
cwtl
and
int
jne
push
shll
xor
push
inc
das
js
cmp
test
mov
sbb
ret
mov
and
test
xchg
arpl
pop
jne
push
sti
lcall
ja
gs
leave
out
push
xchg
and
aad
cmp
jno
jno
add
push
lcall
ret
mov
push
adc
or
fmull
cmp
mov
jbe
adc
cmpsb
out
ss
jae
mov
cmp
mov
pop
sub
fadd
xchg
hlt
mov
adc
mov
cmc
repnz
jge
ret
js
imul
loop
and
int3
inc
shll
jecxz
add
mov
mov
je
mov
movsb
repnz
mov
dec
mov
sub
sub
sub
mov
roll
bound
or
xor
daa
jns
pop
popa
sbb
movb
sbb
mov
jecxz
lahf
jp
rcr
jecxz
addr16
mov
in
hlt
call
popa
inc
push
loopne
jo
sub
imul
call
fstpt
push
popf
cmp
rclb
sbb
or
neg
enter
xchg
inc
or
loopne
cmp
in
sbb
rorb
sbb
aad
lods
cmp
es
jmp
push
and
pop
sub
add
movsb
sub
push
ljmp
push
mov
dec
flds
or
fwait
xor
imul
fildll
mov
arpl
in
sub
fdivrs
or
std
push
pop
arpl
jmp
and
add
lods
ficompl
add
je
xchg
cmp
sti
scas
mov
mov
roll
test
pop
lcall
xchg
add
jmp
fwait
ja
fistpll
loope
cmp
test
sub
sbb
fcoml
or
daa
mov
cmp
sub
pop
les
pop
sbb
repz
test
sub
add
dec
int3
cmpsb
jecxz
add
sub
push
jge
out
imul
lret
dec
nop
mov
rcrl
das
adc
outsb
fdivr
cwtl
xor
loop
stc
test
mov
mov
lret
lahf
push
in
cmp
push
add
jmp
cmp
push
shll
jnp
inc
movsb
pushf
pop
mov
es
mov
push
in
cmpb
xchg
mov
cmp
adc
inc
inc
js
sahf
sbb
icebp
push
mov
fsubrs
push
or
jno
and
adc
repnz
cld
mov
andb
cli
add
dec
dec
cmp
jno
popf
cmp
xor
cmp
mov
int3
xchg
pop
xchg
or
xchg
ljmp
stc
sub
dec
pop
outsb
mov
in
lods
clc
add
out
add
nop
mov
push
jo
or
inc
add
aad
into
mov
divl
in
cld
lock
pop
les
mov
add
pop
xchg
nop
lret
pusha
inc
mov
inc
in
add
dec
mov
mov
dec
mov
cmp
int3
mov
lcall
cli
cmp
xlat
fsubl
ret
jmp
xchg
dec
iret
arpl
xchg
loop
push
sahf
dec
call
out
scas
ja
es
cs
mov
sub
stc
aam
aaa
jl
pop
dec
cld
sbb
add
outsl
xor
push
push
and
enter
std
xor
and
fisubl
leave
mov
cmpsl
cmp
cmpl
add
add
mov
jnp
mov
test
adc
ficoml
inc
cltd
mov
mov
nop
xlat
daa
cmp
out
mov
leave
insb
dec
test
jle
lahf
cmc
fldenv
pushf
scas
mov
pop
xchg
lock
mov
rclb
loope
cmp
cmpsb
cmp
cmpsl
imul
xor
push
sub
das
inc
xchg
js
xchg
daa
mov
pop
std
inc
inc
xlat
mov
inc
pop
cmp
ja
cmp
out
xchg
xchg
push
imul
dec
dec
push
lahf
mov
mov
mov
jle
sub
mov
jae
push
out
test
mov
cli
dec
inc
shll
lock
lods
cmpsl
xor
das
sbb
xor
and
je
jmp
cmpsb
mov
jb
cs
pushf
or
pusha
into
inc
cltd
repz
lock
or
pop
mov
inc
movsl
pop
mov
mov
and
jp
imul
pop
pop
frstor
ficomps
pushf
stos
push
sbb
pop
ja
mov
fsubrs
xchg
push
xchg
outsb
or
dec
push
ret
divb
pop
add
rcr
dec
pop
xchg
rcl
and
popa
push
ds
fsub
nop
hlt
test
mov
call
popf
aam
jno
addr16
inc
inc
pop
mov
sub
xchg
fcmovu
xor
movsb
mov
cmc
inc
mov
xor
fmul
pop
lock
jae
inc
std
std
mov
xchg
adc
sahf
dec
inc
mov
mov
cmp
xchg
adc
pop
sbb
mov
test
or
push
jle
add
adc
lea
mov
sub
sbb
mov
xchg
arpl
aam
mov
pop
mov
cmp
and
loope
and
loopne
adc
inc
xor
cmpl
fiadds
xchg
je
out
lahf
jnp
fnstsw
inc
mov
shll
scas
jo
jmp
fisubs
push
sub
test
out
jne
aas
xor
lahf
je
adc
in
inc
push
fcom
outsb
inc
push
dec
sub
clc
jns
popa
in
cmp
in
pop
stos
lods
popf
push
mov
into
aaa
sub
fwait
test
lds
inc
cmp
jnp
mov
cld
imul
sub
fdivl
orb
pop
outsb
ja
inc
add
xor
mov
push
pop
mov
in
xlat
bound
and
xchg
dec
jns
adc
xor
std
mov
mov
out
mov
inc
popf
push
das
fnstsw
int
push
fwait
jb
repz
jae
pop
add
xchg
mov
in
sbb
xor
add
insl
adc
mov
push
test
aas
jne
cmpsl
outsb
pop
cltd
inc
sub
mull
xor
adc
inc
loop
xor
pop
and
or
and
iret
push
add
rcrl
push
mov
aaa
xchg
cmp
sub
jnp
sbb
jp
lods
es
pop
and
mov
add
mov
sub
sbbb
imul
fistps
pop
repz
int3
cmp
push
ss
jle
push
xor
es
orb
pop
out
fistpl
cmp
xor
popa
pop
dec
fcomps
outsl
push
mov
xorl
ret
int
je
jno
daa
mov
and
imul
xor
ja
nop
ficoml
xchg
iret
mov
hlt
enter
ss
jno
add
lret
mov
xchg
das
insb
ret
pop
addr16
jae
inc
mov
or
rol
cmp
add
scas
or
sub
dec
mov
std
insl
xor
ss
aas
dec
movsb
xchg
popl
gs
fs
and
std
aam
imul
mov
sahf
das
xor
cmc
dec
cli
std
jl
xor
cmpsl
leave
shll
pop
clc
insb
adc
cmp
sbb
mov
inc
jp
lock
push
mov
lods
sbb
cmpsb
mov
pushl
xor
aas
loope
lock
adc
cli
push
sbb
out
out
addr16
cs
aad
push
jb
lahf
mov
dec
mov
push
ficoms
aam
push
bound
adc
mov
aad
mov
jl
or
lea
sarb
mov
shll
xor
push
xchg
xchg
mov
inc
add
and
xlat
xor
sub
mov
fwait
js
sbb
nop
xchg
sti
in
sub
sar
int3
in
out
push
sbb
scas
cmpsl
dec
jle
cmpsl
add
popa
xchg
insl
mov
sbb
movsb
sbb
push
mov
pop
add
orb
push
insb
and
imul
or
addl
sub
movsb
and
xor
and
jp
lods
cmc
in
push
jnp
jge
js
mov
lea
adc
mov
jbe
cmp
mov
add
xchg
mov
in
mov
call
mov
aam
fdivl
mov
mov
cmpsl
or
out
push
dec
dec
pop
dec
push
mov
adc
push
mov
imul
add
loope
pop
arpl
fstl
ficomps
jl
repnz
push
popf
xor
or
fisttpll
pop
in
popa
adc
pop
repz
jae
or
mov
push
sbb
xor
and
sub
sub
push
mov
mov
loope
stos
in
lods
xorl
mov
pushf
cmpsb
sahf
mov
cmp
jl
jg
daa
repz
mov
and
adc
mov
add
push
gs
push
cltd
xchg
push
sub
lods
scas
out
xchg
inc
cmpsl
jp
in
scas
push
push
jnp
sti
sbb
adc
sub
jnp
xchg
adc
jns
cmp
mov
mov
sbbb
imul
xchg
or
es
pusha
lods
mov
js
dec
shll
mov
adc
mov
xlat
lahf
out
aas
sbb
cli
xor
orl
call
xor
xor
xorb
and
jl
push
mov
add
or
orl
or
jo
sbb
cli
decl
dec
loop
jnp
push
pop
inc
push
and
ljmp
out
flds
add
mov
xchg
sti
push
and
sbb
cmp
add
sub
jne
in
xchg
mov
mov
mov
xlat
test
mov
sub
mov
xchg
xchg
push
xor
jne
imul
lock
repnz
imul
adc
stos
adc
rol
ffree
or
mov
lock
mov
stos
xorl
push
loop
ud2
or
jns
or
movsl
pop
test
mov
lret
pop
mov
xchg
xchg
mov
ret
dec
lock
flds
imul
mov
movsl
sbb
cmp
rol
insb
out
inc
js
mov
jmp
cmp
sub
dec
clc
jnp
push
xchg
je
aam
insl
xchg
gs
or
cs
sub
inc
std
movsl
fsubrs
pop
sub
in
dec
or
lods
leave
ret
cs
sub
lods
mov
fwait
xchg
jmp
fadd
sub
scas
and
loopne
jecxz
pop
sub
mov
icebp
sub
in
clc
and
mov
shll
mov
sbb
mov
jns
push
push
popf
jae
pop
das
shl
push
cld
lods
push
out
xor
cmp
flds
mov
mov
and
rclb
jmp
and
in
or
insb
push
aam
ret
fistl
aad
mov
push
rorl
test
shl
call
icebp
xlat
in
aaa
fldenv
adc
xchg
cld
addr16
and
jl
add
popl
jae
int
pop
or
add
mov
arpl
or
xchg
mov
jmp
ret
lea
mov
push
adc
mov
imul
lock
pop
mov
push
mov
lcall
dec
andl
jo
inc
outsb
daa
test
xchg
out
and
push
adc
adc
inc
cmc
les
movsl
adc
dec
sub
enter
mov
jecxz
imul
jne
ret
sahf
xchg
les
mov
jb
and
subl
add
or
cmc
gs
enter
mov
jns
inc
push
push
push
push
aaa
es
and
sbb
adc
mov
shl
aad
fidivrl
sub
sbb
cmp
dec
push
out
iret
int3
das
out
in
out
ljmp
fstl
cmp
popa
outsl
mov
pop
ret
gs
cmp
mov
pop
cmp
aam
sub
ret
daa
jp
jae
jmp
loop
mov
and
in
insl
fldcw
shrl
daa
popf
fs
inc
cmp
cli
pop
cwtl
js
lods
stc
test
aad
jne
fnsave
out
aad
jnp
pop
std
addr16
icebp
pop
jo
cs
jle
sub
or
stos
div
push
pop
sbb
and
mov
jbe
adc
jbe
cmp
pop
adc
push
jp
jo
lock
or
pop
adc
xor
in
mov
mov
inc
das
sub
xchg
notb
sbb
jp
je
push
and
idivl
cmpsl
mov
mov
xchg
subb
loopne
push
sub
xchg
les
sbb
insl
xchg
jp
into
adc
and
sub
sbb
arpl
mov
push
fistps
xorl
out
cli
inc
divb
in
lret
dec
lret
sbb
xor
push
xchg
aam
in
xlat
mov
sbb
sub
mov
ficoml
ds
fdivrs
add
sarl
into
adc
ret
inc
lahf
addb
dec
je
inc
adc
xor
subb
fsubl
loope
jne
and
enter
cmpsl
scas
in
dec
push
movb
sbb
xchg
mov
jnp
jmp
cmp
jns
mov
pop
pop
aad
xchg
ficoms
jns
sahf
jne
xchg
jo
lock
inc
mov
rorl
mov
inc
or
adc
adc
xchg
adc
faddl
xor
sbb
fwait
cs
bound
push
mov
cwtl
xchg
test
adc
pop
add
dec
insl
add
popf
sbb
xchg
mov
pusha
pop
je
out
or
js
pop
jge
aas
or
stc
les
mov
addb
adc
roll
push
testb
icebp
loop
cmp
xchg
outsl
push
push
js
mov
jp
rorb
test
ret
test
lods
clc
mov
lcall
or
testb
nop
aaa
cmpsl
es
mov
addr16
add
xor
jmp
xor
push
xchg
ja
add
imul
jbe
stos
lret
jno
jns
pop
pusha
lret
jg
mov
pushf
inc
cmpsl
cmp
js
pop
mov
cs
pop
ljmp
push
jp
das
dec
ds
fmuls
shll
loop
aas
cmp
stos
push
mov
cli
clc
sub
xchg
addr16
push
loop
adc
jmp
adc
push
xor
dec
jo
push
sub
int3
cmp
mov
jl
je
sbb
lds
lea
sbb
pop
pop
xchg
mov
gs
mov
xlat
sysret
jae
and
stos
leave
mov
gs
sbb
adc
push
pushf
mov
hlt
fistpll
cmpsb
and
aaa
and
std
mov
xchg
jo
xor
iret
les
mov
cmpsl
xchg
adc
into
sarl
bts
in
pop
test
mov
dec
or
aam
out
inc
mov
jle
xchg
cmc
adc
in
jecxz
jecxz
mov
pop
xchg
cli
test
mov
sbb
mov
mov
or
cltd
cmp
mov
sub
xchg
push
cmp
pushf
imul
push
jg
and
aaa
pop
push
stc
mov
das
mov
inc
mov
call
mov
movsl
push
stc
xchg
push
adc
popf
rcll
mov
pop
in
mov
mov
dec
mov
fs
xchg
xor
jg
inc
or
cmp
fldcw
ljmp
fidivrl
loope
push
orl
aam
or
cld
dec
cmp
sbb
lret
push
mov
repnz
imul
adc
pop
dec
test
ss
push
sbb
pop
xlat
outsb
pop
dec
add
pop
in
and
add
xlat
ljmp
ss
or
lret
sbb
lcall
inc
adcl
xchg
and
jno
femms
ss
jnp
or
popa
pop
sbb
ds
cld
std
test
bound
aad
or
sbb
and
xchg
inc
in
call
cld
sbb
sub
sbb
test
test
xchg
clc
in
mov
pop
mov
pop
push
add
faddl
jb
cmp
cmp
das
pop
sub
mov
sbb
and
xchg
jg
sub
test
sbb
out
push
cwtl
push
stos
and
add
dec
ljmp
xchg
jge
sahf
push
cmc
mov
sti
mov
and
stos
imull
jmp
cmp
sub
vandnps
and
lret
hlt
lret
sbb
popa
dec
xor
adc
aaa
sbb
add
ds
imul
inc
mov
fbstp
repnz
mov
push
push
or
jp
fadds
add
xlat
inc
jnp
sbb
inc
sbb
movsl
ljmp
fisubs
sbb
dec
add
aas
push
pop
scas
cmpsl
ljmp
lahf
add
imul
pop
adc
sbb
fdivl
and
dec
nop
jnp
push
mov
lods
push
int
push
clc
out
pop
dec
mov
sub
cltd
inc
es
and
enter
and
cmp
xchg
inc
dec
push
inc
sub
push
sarl
adc
xchg
pop
add
sub
cld
insb
divb
pushf
lahf
mov
xchg
pop
mov
pop
xchg
and
loopne
in
inc
xor
enter
arpl
fwait
addr16
dec
xchg
sub
lret
sbb
imul
adcl
testb
int
cli
cltd
repz
jae
mov
je
mov
dec
mov
jmp
jp
fisubl
repz
xor
push
add
cld
mov
in
xchg
adc
xlat
xchg
pop
inc
adc
xor
mov
mov
mov
in
add
loope
dec
fs
cmpsb
ret
in
shll
jno
xchg
iret
add
adcb
stc
shl
movsl
mov
lahf
repz
dec
jmp
fists
xchg
sahf
scas
push
das
es
or
lock
and
jecxz
dec
inc
or
lods
add
shrb
xchg
iret
movsb
add
lret
push
cmpsl
repnz
fs
inc
sbb
adc
dec
pop
cmp
pushf
sahf
outsl
jmp
sbbl
or
jp
fs
xchg
xor
ljmp
xor
mov
sbb
jle
das
push
cli
sub
arpl
xchg
push
in
xor
and
push
cmpsl
fdivrp
stos
outsl
movsb
enter
or
incb
stos
test
and
bound
sub
scas
inc
subb
push
ficoms
jp
adc
je
push
js
fs
aaa
adc
jb
dec
cmp
dec
sbb
add
imul
pop
repz
cltd
xchg
cltd
into
jle
out
pop
mov
push
push
mov
cmp
imul
pop
fs
lret
jge
dec
nop
imul
lret
sub
gs
xor
push
sarb
mov
cwtl
lods
mov
xor
ss
jae
sbb
push
push
pop
inc
sub
movq
imul
inc
insl
fstp
fs
cmp
push
or
mov
xor
sbb
inc
ret
out
adc
repz
add
push
icebp
cs
inc
les
js
lret
mov
rcrl
xchg
push
clc
push
push
sub
mov
push
imul
mov
dec
push
cli
lret
popf
pop
push
movsb
addr16
int
mov
aas
jmp
mov
mov
cmp
ljmp
mov
enter
les
popa
mov
xchg
pop
sbb
add
iret
cmp
rcll
aas
cmp
mov
pop
sti
mov
dec
cmp
mov
and
xor
fstl
outsb
adc
mov
dec
or
int
dec
add
shrb
mov
xchg
dec
cwtl
mov
pushf
cmp
jo
lds
sub
dec
and
sbb
and
movb
jle
cmp
ja
ljmp
adc
pushf
or
bound
and
sub
cmp
popa
add
jns
cmpsl
mov
add
insb
jae
rolb
cmp
mov
xchg
inc
push
sbb
pop
jg
push
mov
xor
ret
xlat
pop
xchg
adc
mov
in
jecxz
lcall
stc
jb
cmpsl
jne
xlat
mov
lret
stc
ljmp
pop
mov
aad
cld
push
sub
ja
cld
mov
inc
jge
pushf
in
arpl
imul
roll
cmp
add
stc
clc
add
dec
adc
data16
xor
sbb
repnz
pop
lea
insl
xlat
mov
cmpsl
bnd
scas
into
jne
iret
mov
push
mov
sbb
sbb
mov
test
and
std
lds
std
mov
add
sbb
sub
mov
adc
mov
sar
push
cmpsl
mov
jbe
cs
testl
lods
cwtl
sti
xlat
cld
stos
hlt
mov
jne
mov
loope
fistps
mov
stos
mov
sub
cmp
mov
addb
jno
jp
aaa
mov
enter
testb
push
addl
inc
loope
push
sub
mov
xchg
lods
fwait
cwtl
and
sti
adc
sti
and
xorb
dec
push
jmp
push
jno
insl
add
jb
gs
pcmpeqw
clc
xchg
and
scas
mov
xor
outsb
jno
insl
negb
shll
outsb
adc
clc
mov
xchg
bound
icebp
or
push
loopne
cmp
mov
pop
gs
sub
sbb
push
insl
iret
adc
jb
or
inc
test
out
push
das
clc
sbb
mov
xchg
decb
and
push
push
inc
fcompp
stc
jle
dec
or
pop
jb
inc
add
aad
mov
cwtl
or
cmc
jmp
scas
outsl
and
inc
mov
fdivl
sbb
shlb
sub
test
les
pop
pop
mov
inc
cmp
lds
sbb
sub
test
inc
sub
dec
mov
mov
in
inc
jb
xchg
mov
stos
sbb
dec
xchg
push
push
jb,pn
sti
dec
ss
sbb
testl
jns
fiaddl
mov
out
mov
jnp
mov
xor
insl
sahf
and
push
adc
push
jp
mov
xor
insb
inc
frstor
push
jb
xor
sbb
jne
push
arpl
notb
or
mov
mov
pop
inc
test
popf
mov
mov
aam
ja
sbb
cmpsb
push
repnz
add
mov
xlat
call
ret
push
mov
test
inc
ret
inc
jb
jae
div
in
leave
fisubrl
xlat
dec
shrb
sti
sarl
icebp
fsubl
push
jo
mov
test
pop
push
sub
inc
cmpsb
add
mov
xchg
loope
call
insb
lret
add
mov
mov
cmp
fists
sub
sub
pop
cmp
aam
pop
andps
xchg
push
cld
data16
cmp
xchg
xchg
scas
out
mov
pop
mov
jns
mov
sub
push
repnz
mov
mov
adc
addr16
inc
popf
pop
xchg
ret
mov
cltd
sbb
pop
inc
mov
push
cmc
push
out
add
jle
or
mov
out
push
sub
dec
pop
push
push
jb
xchg
inc
mull
mov
cld
inc
stos
mov
cmp
jge
movsl
sub
repz
fdivl
mov
mov
cmp
xor
lods
xchg
mov
or
cltd
push
popf
out
nop
inc
lods
jle
dec
sti
pop
push
test
fsts
sub
unpcklps
xchg
jmp
mov
aad
das
xchg
cmp
xchg
lods
das
je
pop
xchg
sahf
cli
mov
test
mov
pop
stc
add
aas
es
mov
xchg
fidivl
mov
lea
lods
pop
and
pop
inc
pop
fwait
jg
gs
or
push
repz
adc
jmp
dec
pushl
add
js
js
pop
xchg
mov
or
addr16
mov
addl
addr16
in
push
inc
mov
lret
sti
xchg
cwtl
mov
or
pop
cmpsl
aad
xchg
and
cmp
sbb
scas
mov
pop
mov
push
test
sbb
fiadds
jns
lea
cmp
jl
jp
cli
mov
push
sub
inc
cli
xchg
dec
jo
dec
jp
push
mov
test
je
push
jg
cli
loop
rclb
fdivr
shll
jne
jns
cmp
dec
cmpsl
mov
and
mov
cwtl
icebp
xor
or
jb
sub
add
sub
rorl
movsb
mov
xor
es
dec
dec
fnstenv
add
mov
iret
mov
imulb
adc
inc
sbb
mov
or
ja
push
mov
cmc
out
xor
arpl
sbb
ds
pop
addr16
xchg
and
jns
fstps
jmp
fld
dec
loop
sbb
fdivrl
xor
call
movsl
jns
mov
cmp
mov
insb
rclb
stos
aam
fsubr
lea
lret
sbb
testl
neg
pop
jecxz
ds
cltd
out
adc
mov
aam
push
push
pushf
bound
imul
lahf
dec
jbe
int3
dec
adc
int
sub
mov
push
sbb
xchg
or
adc
dec
cmp
mov
add
fildll
iret
mov
jae
shlb
jmp
add
pop
xchg
jg
bound
pop
jne
pop
fisttpll
out
jecxz
bound
jb
scas
stos
and
out
xor
lods
dec
cmp
js
test
xchg
js
sti
lods
push
mov
shl
push
add
insl
mov
dec
aaa
pop
jecxz
jp
xchg
mov
fstl
movsb
jp
jne
insl
cli
lcall
sub
fldcw
hlt
sub
icebp
addr16
das
or
dec
gs
out
jno
xor
xlat
aad
filds
out
push
xor
push
into
jp
leave
gs
testb
add
pop
xor
cmp
loope
out
add
sarl
repz
xlat
cmpsb
not
mov
xor
push
sbb
imul
les
xor
xchg
ss
fwait
loope
loope
mov
out
sub
and
and
addr16
xor
pushf
les
int
adc
mov
ret
xor
xchg
jl
icebp
inc
or
bound
je
push
inc
push
test
push
cld
test
aaa
lock
in
cmp
sbb
mov
mov
fs
cmpsl
ds
pop
and
addr16
ficompl
mov
movsl
enter
xor
int
out
inc
cld
xchg
leave
push
fnsave
mov
aam
inc
push
dec
lret
divl
mov
repnz
mov
fcoml
sub
inc
xor
dec
pop
push
sub
bound
jo
in
repz
push
in
icebp
adc
test
add
or
or
dec
sbb
ret
sahf
push
dec
mov
add
cli
inc
or
pop
insl
sar
inc
insb
mov
lahf
jns
imul
test
pusha
fsub
sbb
cli
or
daa
pop
pop
pop
xor
push
lahf
xchg
hlt
fnstcw
jbe
insb
adcl
hlt
and
decl
iret
sub
ds
push
lret
pop
dec
je
aam
icebp
mov
sbb
pop
xchg
mov
adc
push
jmp
or
inc
cmpl
dec
xchg
or
and
imul
cwtl
cld
int3
sub
xchg
dec
jp
cld
and
jle
push
push
cld
insl
popf
mov
shlb
mov
pop
mov
adc
out
test
notl
push
mov
adc
xor
mov
in
xchg
or
dec
test
lods
pushf
fwait
push
xchg
inc
in
xor
push
mov
or
push
movb
or
sub
sbb
cmpsb
test
in
cmc
jl
inc
hlt
inc
addl
pusha
test
int
sbb
lods
mov
jae
test
push
cli
repz
and
xorl
sbb
add
and
outsl
mov
lret
clc
dec
rcl
sub
imul
jg
popa
popa
in
pop
lcall
pop
lods
cmp
adc
iret
push
or
jp
out
loopne
cltd
popa
out
cmc
xchg
outsb
scas
dec
add
adc
xor
mov
ds
andb
cmpsb
test
popa
jae
push
nop
pop
add
insb
stos
inc
sbb
dec
dec
pop
sbb
fwait
mov
test
xlat
mov
test
rcrl
test
sbb
mov
mov
dec
scas
add
cmpsb
lods
das
mov
pop
stos
push
aam
jmp
mov
push
ljmp
scas
lret
test
push
sti
dec
scas
loopne
mov
mov
or
add
mov
hlt
jg
cmp
mov
rorl
test
out
aas
divl
and
stc
lods
rcr
mov
lods
scas
mov
add
xchg
jmp
mov
test
mov
jecxz
nop
push
push
or
mov
leave
stc
mov
imul
setp
cmp
push
fstpl
mov
jb
lods
sbb
cmpsl
adc
sbb
sub
cltd
cltd
dec
cwtl
lea
push
jo
sarl
mov
inc
cmp
pop
in
stos
lcall
cld
mov
orps
dec
negb
ja
or
cs
das
dec
test
outsb
hlt
test
cmp
add
add
test
sarb
movsb
or
adc
push
mov
jg
or
xor
fadd
sbb
lock
pop
adc
test
repnz
icebp
movsl
jmp
sbb
adc
pop
sahf
dec
jno
xlat
dec
pop
sbb
repnz
lods
enter
and
mov
js
inc
les
dec
adc
pop
xchg
jo
or
jno
xchg
mov
js
jbe
pop
lret
fs
adc
xlat
in
das
jg
push
out
pop
pop
mov
mov
inc
jo
fcomip
jns
jb
add
push
mov
dec
xor
xchg
leave
mov
mov
xchg
sub
mov
dec
out
cmpl
jmp
xor
nop
repnz
push
loope
mov
sarb
sub
push
sbb
aad
add
ja
fildl
mov
jae
and
ret
cld
inc
or
push
sahf
mov
sub
out
mov
dec
add
xor
xor
cltd
aaa
dec
mov
outsb
inc
and
jmp
xor
and
xchg
xorb
popf
mov
mov
test
lret
jo
or
mov
push
and
lods
cmp
inc
mov
sub
adc
adc
fcomi
cmp
pop
xchg
in
negb
cmp
xchg
cmc
jmp
addb
ljmp
cmpsl
pop
inc
fldcw
or
out
adc
pop
idiv
imul
mov
and
push
pop
ds
int
std
fwait
push
add
xchg
or
pop
xor
sub
jb
aas
and
dec
or
mov
pop
pusha
jl
ret
mov
and
mov
notl
pop
lds
pop
push
mov
xchg
push
in
ljmp
mov
rcrl
adc
adc
mov
out
cmp
mov
cld
mov
loop
xor
pop
inc
sbb
xchg
xchg
mov
mov
into
or
xchg
or
aas
imul
jnp
push
jl
les
scas
leave
in
adc
xlat
inc
iret
in
fists
pop
mov
pop
cld
cmp
test
test
loope
shll
pop
movsl
out
mov
pop
sub
cmp
lock
lea
mov
mov
les
lods
mov
adc
xor
dec
cmp
xchg
jno
dec
into
jmp
nop
mov
ds
inc
fs
mov
lock
mov
stos
mov
and
add
test
mov
mov
test
push
mov
xlat
add
push
cwtl
ret
jbe
enter
movsl
jp
lret
mov
push
push
sub
xor
mov
js
pushf
lods
adc
dec
push
roll
dec
cli
pop
loope
add
cmpsb
jnp
stos
int
lds
stc
lods
ja
xchg
inc
jne
movsl
in
and
pop
cmpsb
jo
hlt
mov
sbb
jge
out
hlt
daa
cmpsb
cmp
out
fsubs
scas
xchg
frstor
and
fldenv
cmc
jne
orl
aad
jle
into
jp
cmpsb
outsl
inc
pop
pop
jg
fidivrs
adcb
lcall
jecxz
bound
push
scas
cmpsl
mov
popf
add
adc
inc
test
inc
sbb
aaa
cmp
icebp
inc
xor
jecxz
bound
inc
lret
pusha
mov
out
cmpl
es
out
dec
push
jge
cmp
jg
add
dec
push
out
popf
fstpt
movsb
add
sbb
rcrb
subl
loopne
push
ljmp
mov
fs
add
rcrl
mov
mov
inc
lds
scas
stc
push
push
or
in
loope
jo
dec
inc
pop
repnz
sub
sub
int3
and
in
out
aaa
ja
mov
out
cmp
mov
loop
fldcw
pop
out
pop
pop
mov
mov
add
xchg
dec
jmp
mov
inc
jns
push
mov
sbb
mov
pushaw
sbb
lods
pop
int3
jle
cmp
or
rorl
fldl
popf
add
mov
adc
sub
aas
mov
movsl
movsl
jmp
sub
shlb
inc
xlat
shlb
test
or
xor
cmp
xor
cmp
and
push
aam
cld
popf
or
mov
or
mov
scas
pop
fcoms
or
jmp
xchg
push
loopne
iret
leave
fadds
jns
mov
sub
mov
repnz
dec
or
lods
int
jae
sbb
dec
jg
outsl
idivb
and
mov
scas
push
jg
repz
stos
cmp
imul
adc
inc
rorb
daa
aad
movsb
pop
fisubrs
aam
sbb
jp
sub
lahf
js
inc
add
add
or
aaa
mov
sbb
mov
das
adc
in
jns
mov
outsl
stos
pop
out
lea
jle
stos
or
rcrl
in
dec
jle
cltd
fwait
ret
adc
das
cld
movsl
fcoms
and
mov
adc
cmp
cwtl
jbe
fistl
je
and
lret
pop
lahf
push
loopne
or
cmpsl
dec
ja
cli
stc
loopne
jne
dec
inc
aad
cmpsb
out
xchg
and
stc
lds
bound
and
add
mov
cwtl
jo
in
mov
xchg
mov
fstps
inc
jno
mov
adc
push
pop
addr16
es
shll
push
or
outsl
jo
sub
add
or
adc
mov
fsubs
push
inc
je
add
loopne
mov
xor
mov
jno
sub
int
dec
xchg
mov
daa
push
hlt
and
dec
popa
addb
jg
pop
xor
clc
insb
aas
imul
mov
test
out
int
xchg
loopne
cmpsl
sbb
inc
and
test
push
andl
dec
push
adc
inc
out
test
jg
es
stc
xor
jmp
adc
insb
pushf
rclb
dec
rcrl
mov
gs
adc
outsl
jns
inc
add
push
stc
in
cmp
imul
mov
xchg
dec
dec
dec
jg
jae
mov
mov
mov
jmp
mov
push
inc
lcall
sbb
push
data16
ret
mov
nop
push
test
enter
push
jns
addr16
ds
repz
dec
scas
out
mov
cmpl
clc
loop
aad
leave
mov
mov
mov
jb
mov
mov
aaa
rorb
imul
mov
scas
popl
mov
pushf
fistps
push
in
and
gs
repz
pushf
stos
sub
pop
mov
fiaddl
mov
fisubrs
unpcklps
test
add
imul
add
push
fucomi
cmp
inc
xlat
add
cmpsb
dec
frstor
jmp
fwait
incb
rcl
cltd
scas
dec
dec
loopne
lcall
pop
mov
xchg
pop
add
aam
orb
pop
xchg
lret
and
or
hlt
jge
scas
jmp
push
and
mov
dec
in
jmp
mov
mov
daa
loop
inc
jge
push
cmpsb
aad
jge
rcrb
lcall
out
pop
insl
insl
sbb
dec
jb
int
in
xor
cmpb
adcl
ret
inc
lcall
xor
xlat
push
pop
inc
xchg
push
and
mov
mov
dec
mov
shlb
mov
repz
and
xchg
popa
test
mov
das
xchg
jmp
dec
inc
dec
add
shll
push
and
std
or
imul
popf
add
cmp
mov
cld
cmp
push
fidivs
push
std
xchg
push
push
push
adc
cmc
cmp
push
mov
lods
push
shlb
xchg
cld
ret
ds
xor
or
clc
cmp
ret
push
cmp
jae
pushf
addr16
dec
lea
ficompl
mov
mov
push
popa
xchg
enter
jl
mov
mov
push
and
inc
pushl
repz
stc
dec
lret
roll
jle
or
rcrb
jp
rolb
mov
and
adc
pop
test
adc
cmp
stc
mov
mov
and
fwait
jmp
pop
inc
push
int
dec
xchg
out
inc
out
cli
cltd
and
jle
push
inc
adc
mov
mov
jg
ljmp
enter
push
inc
inc
xchg
xor
xlat
sahf
cmpb
test
and
popl
mov
push
insl
push
or
sub
aas
loop
incl
cmp
sub
jmp
adc
sbbl
fdivs
mov
loop
stc
fldcw
xchg
jo
adc
xor
jecxz
sbb
add
pop
fdiv
add
push
repnz
out
je
enter
divb
fldl
hlt
pop
xchg
mov
xchg
call
lret
xor
sbb
out
test
pop
sbb
pop
lret
aad
repz
jae
cmc
addr16
pushf
cld
add
or
shr
sbb
sti
imul
fcompl
in
ficompl
jb
add
sub
push
jg
ss
pop
daa
fistpl
cwtl
dec
xor
cmp
lods
sbb
movsl
in
js
mov
sbb
imul
pop
int3
cmp
dec
mov
rclb
jnp
push
std
push
call
xchg
push
inc
and
adc
mov
stos
dec
jmp
push
jle
push
popf
loopne
inc
sbb
test
mov
mov
mov
sub
cld
data16
mov
cmc
inc
loopne
aaa
lods
rcr
sti
loop
mov
push
leave
xchg
mov
pop
insb
mov
neg
mov
xchg
pop
lock
push
lea
xchg
sub
and
cmp
test
inc
sbb
mov
sbb
cmpsl
mov
or
popf
filds
andl
sub
xor
popf
mov
cmp
dec
add
jb
cmp
js
xchg
push
dec
test
stc
mov
test
add
nop
int
and
outsb
cmp
cmp
and
dec
or
aad
dec
cli
inc
aaa
jnp
mov
cmp
xchg
fs
mov
cmp
call
mov
add
test
mov
aas
mov
dec
jne
jae
fwait
loope
clc
repnz
out
add
mov
pop
jbe
cltd
mov
int3
pop
mov
dec
sub
xor
sahf
add
ljmp
notl
subb
aad
gs
mov
idivb
pop
cmpsb
mov
pop
push
cli
sub
imul
add
mov
and
xor
bound
jo
mov
push
test
mov
rolb
xlat
add
and
or
sbbb
iret
mov
popf
call
test
inc
mull
div
outsb
in
lcall
dec
mov
les
pop
jnp
movsb
lret
mov
lds
mov
jecxz
call
stos
adc
xchg
ljmp
cmpb
loope
repz
rclb
int3
and
ret
mov
dec
andb
cwtl
imul
push
jbe
xchg
out
and
or
ljmp
jmp
call
mov
ss
add
test
in
mov
dec
push
dec
notl
mov
xchg
xchg
mov
inc
outsb
sub
dec
mov
imul
mov
aam
push
mov
es
mov
sahf
push
and
stos
movsl
cwtl
loope
ret
and
scas
cwtl
push
out
and
push
add
ret
jle
ljmp
into
movq
inc
iret
mov
push
lcall
mov
jo
xlat
dec
dec
loopne,pn
lods
and
cli
pushf
hlt
pushf
jmp
pop
loop
adc
out
pop
xor
mov
and
xor
jl
adc
pushf
or
jo
mov
jp
jns
xor
pop
call
mov
dec
or
sub
movsb
scas
mov
loop
jno
int
mov
dec
lea
pop
addr16
test
jmp
dec
test
fdivrl
dec
cmp
subb
adc
test
dec
push
bound
dec
pusha
sbb
ret
mov
jle
and
std
call
sbb
imul
loope
add
jno
mov
mov
mov
fimull
sub
les
sub
xlat
jne
cltd
orb
lret
dec
mov
wrmsr
and
jns
push
sub
loop
pop
lret
std
addr16
popf
outsl
xor
jmp
dec
stos
inc
out
sbb
push
cmp
or
mov
dec
and
loope
pop
cmp
mov
push
fs
in
insb
sbb
mov
mov
subl
push
push
cmp
dec
sbb
mov
sub
cmp
imul
fmull
imulb
cmp
jle
mov
loopne
insl
sahf
fs
imul
stc
mov
std
and
xor
add
mov
dec
dec
adc
nop
imul
push
xor
inc
data16
dec
pop
dec
mov
stos
jg
inc
out
gs
mov
dec
mov
mov
add
aaa
frstor
jbe
aam
fcomi
arpl
sbb
dec
jae
cld
popa
pop
cmp
jg
mov
mov
stos
dec
int3
xchg
loop
sbb
fsubrs
cmp
repz
cmp
adc
ja
ret
inc
mov
aas
iret
in
add
stc
in
insl
cmpsl
inc
cli
stos
cmp
repnz
fbstp
and
daa
push
pop
decb
lds
stos
int
dec
mov
out
or
mov
test
addr16
sub
mov
popa
push
js
add
xchg
lret
xchg
jp
aad
jne
in
imul
xor
sub
int
xchg
dec
hlt
xchg
imul
adc
test
adc
xchg
cltd
sub
cmp
sub
pop
scas
mov
insb
ror
sub
dec
sub
outsl
loop
loopne
ds
cmp
imul
cmc
sub
mov
test
dec
jno
push
ret
jl
dec
fs
sbb
xchg
pushf
push
mov
jg
test
inc
int3
pop
adc
jmp
mov
sub
sahf
repz
add
lds
sub
out
cmpsl
insb
push
scas
ror
hlt
ljmp
mov
xchg
inc
dec
add
ud2
inc
scas
clc
out
mov
push
mov
in
mov
xor
in
xor
rcll
icebp
sbb
lcall
inc
sub
sub
ljmp
pop
mov
mov
jo
in
fwait
lahf
mov
fcompl
push
dec
and
and
out
cmp
lods
clc
xorb
ret
stos
bswap
or
dec
pop
mov
mov
add
in
out
mov
scas
mov
sahf
imull
xchg
xor
adc
xchg
xchg
jp,pn
daa
sbb
mov
xlat
add
or
shll
mov
mov
scas
pop
push
lods
jnp
xchg
movsb
and
addb
and
inc
fnsave
loope
insb
fstp
jge
pop
mov
jg
ds
sub
adc
or
pop
mov
adc
nop
enter
std
sbb
mov
jo
jo
add
push
pusha
mov
prefetchw
into
adc
loope
call
in
push
mov
ljmp
and
daa
sub
add
je
enter
jb
loopne
add
adc
jns
xor
fisttpl
iret
jmp
add
jns
shlb
enter
inc
popf
stos
pop
imul
push
or
cmc
lods
xor
pop
dec
xor
or
jge
pop
push
or
daa
aam
in
lods
js
xor
fcompl
ret
leave
jnp
inc
shl
test
cwtl
xor
or
ret
mov
mov
inc
sahf
jl
fildll
mov
adc
mov
mov
xor
out
mov
repz
call
xchg
scas
dec
jo
mov
mov
insb
scas
sbb
pop
test
subb
mov
imul
xor
ja
icebp
in
lods
sub
cld
loopne
stc
rol
mov
dec
test
xchg
stos
sbb
inc
cmpb
lock
mov
test
xor
push
lds
dec
jge
xchg
shlb
iret
mov
xchg
in
shlb
add
add
inc
xor
dec
jge
dec
std
cmp
or
xchg
insb
mov
xchg
les
ficoms
std
cmp
int
rcrl
aad
fiaddl
les
push
inc
lock
mov
adc
les
push
addl
sbb
popf
mov
bound
dec
fbld
or
mov
or
ja
jmp
adc
sub
aas
cs
subl
add
cs
cmp
jnp
out
int
adc
nop
ss
jecxz
scas
fdiv
frstor
loop
xchg
mov
mov
imul
mov
imul
call
outsb
push
sbb
sub
inc
test
cltd
movsl
mov
popl
pop
dec
stos
sbb
inc
and
jg
add
sbb
cmpsb
xchg
pusha
xchg
andl
daa
and
xor
enter
pusha
xchg
sbbl
inc
cmp
ss
rep
cmpl
cmp
jmp
jns
pusha
fildl
xor
or
popf
pushf
mov
mov
out
arpl
xchg
or
xor
push
pusha
sub
in
sub
stc
fs
bound
outsl
mov
aad
or
pop
dec
pop
loope
std
icebp
subl
ja
lret
repnz
or
hlt
repz
scas
and
sahf
mov
ds
push
xchg
aas
add
int3
adc
add
inc
insl
mov
cli
adc
decl
scas
or
rcrl
xchg
inc
xlat
dec
jecxz
sahf
stos
sbb
pop
jp
inc
and
mov
ret
mov
rcl
test
sbb
lret
push
icebp
mov
test
jp
sub
cmc
imul
push
mov
mov
fsubr
cmp
adc
daa
pushf
or
test
loop
xor
stos
sbb
fsub
lret
out
gs
sbb
inc
cli
fsubrs
adc
lods
xchg
inc
les
cmp
cmp
aad
xor
push
xchg
lods
aad
add
adc
ficoms
ficoms
subl
bound
jl,pn
das
mov
das
jns
add
dec
xchg
mov
pop
cmpsb
lds
call
or
and
mov
ss
xor
and
sub
mov
int3
jmp
data16
dec
add
fs
ljmp
imul
fistps
jge
xchg
cmpsl
stos
cmp
xchg
xchg
popa
or
call
lret
jno
fisubrl
push
adc
add
cmp
adc
cwtl
dec
call
push
add
fcompl
or
mov
inc
push
push
lret
les
mov
mov
lea
repz
out
daa
iret
imul
cwtl
test
outsb
pop
or
adc
idiv
mov
es
mov
adc
mov
or
movsb
or
ret
cmc
ret
pop
mov
inc
fstl
cld
mov
dec
dec
insl
jmp
lret
mov
and
imul
jge
lcall
pop
xor
mov
xchg
popf
js
and
lea
jge
stos
cmp
sub
out
jb
dec
inc
mov
mov
cwtl
xor
xorb
sti
mov
dec
aam
ljmp
xor
movsl
pop
ds
addr16
mov
add
sbb
jns
fisubl
inc
push
or
sar
jecxz
pop
pop
mov
adc
pop
cwtl
inc
testl
scas
cwtl
jge
cmovae
push
jne
pop
in
stos
sarb
mov
ret
inc
shll
mov
mov
jmp
sub
jo
repz
xchg
adc
add
pop
push
mov
push
xor
mov
or
add
aas
mov
sub
mov
imul
shl
mov
mov
ds
rcl
inc
add
repnz
add
test
dec
inc
push
inc
loope
pop
xor
jl
subl
dec
frstor
push
adc
testb
mov
fnsave
mov
mov
inc
fists
push
adc
mov
mov
jno
sbb
jae
push
jg
jb
ss
jmp
out
fisttpll
xlat
into
mov
mov
int
repnz
mov
outsb
push
notb
sahf
xchg
pop
in
xchg
lods
sahf
add
sub
fs
cmp
mov
xchg
mov
jle
jge
repz
sbb
lea
dec
test
scas
mov
inc
pop
leave
das
sahf
bnd
jp
ss
push
ljmp
adc
xlat
imul
and
nop
stos
aas
je
neg
mov
pop
lcall
and
and
cltd
push
mov
and
mov
cmp
fbld
sub
je,pt
sbb
and
aad
cld
fdivl
sbb
into
pop
repz
andb
orb
je
pushf
rolb
pop
sbb
lahf
fadd
in
mov
test
and
fwait
cwtl
negb
test
and
outsb
outsb
insl
pusha
mov
mov
and
test
jb
jmp
jno
push
dec
in
mov
cmp
mov
fwait
aaa
push
mov
adc
lret
neg
pop
daa
adc
xchg
iret
jo
mov
jp
nop
and
ret
sub
inc
cmc
jb
stos
daa
mov
add
orb
jb
cli
out
sahf
jl
push
or
iret
repz
jecxz
xchg
orl
push
or
gs
add
arpl
inc
mov
ret
test
pop
xor
ret
push
int
xor
dec
sbb
ds
sub
sbb
xor
cmp
aaa
or
jl
nop
mov
test
add
cmpsb
rorb
fsts
insb
mov
mov
push
xchg
push
pop
call
iret
bnd
cltd
fwait
rcll
fwait
lahf
mov
sbb
loop
or
aas
cwtl
ja
add
aam
and
xchg
mov
add
test
adc
loop
in
imul
shll
sub
jecxz
addb
bnd
jnp
nop
jno
xchg
push
out
ret
not
movsl
jge
mov
fistpl
mov
repz
fstl
mov
outsl
stos
xor
xor
sbb
popf
scas
lods
popa
inc
sarl
dec
popa
inc
hlt
cltd
cld
inc
scas
popa
out
out
add
push
add
in
popf
insl
dec
je
pop
fcoml
fwait
inc
add
push
cmp
lcall
adc
cs
mov
push
aaa
push
cltd
call
or
aaa
sahf
popf
mov
test
in
add
stc
inc
push
shrl
in
sbb
stos
subl
icebp
cmp
popa
dec
fldl
mov
xor
sbb
movb
pusha
lret
mov
inc
xor
mov
mov
addb
sub
cmp
push
xor
adc
popf
inc
xchg
fdivs
or
lret
sti
and
mov
sub
push
nop
inc
out
bound
adc
pop
stos
mov
push
lret
inc
mov
xor
pop
lahf
mov
pop
call
jb
inc
lea
push
xor
cs
or
sub
jno
lcall
out
mov
and
cmpsb
aaa
stc
add
pop
pop
cld
repz
cwtl
adc
jbe
push
fsubs
repnz
into
ds
pop
push
ret
push
and
rcrl
icebp
xchg
fisttpll
xchg
pop
inc
dec
nop
mov
lock
lock
loopne
and
loop
mov
add
sub
jns
stc
jg
test
or
cld
aam
out
dec
out
mov
jg
fwait
idivl
sbb
push
cmpb
xor
imul
jbe
call
mov
xor
cmp
addr16
add
pop
mov
xchg
subb
nop
imul
clc
fidivrs
mov
inc
jb
imul
mov
pusha
or
cmc
imul
stos
fisubrs
adc
mov
mov
jns
fwait
out
cli
sbbb
mov
in
or
fisubl
lahf
mov
xchg
push
lret
pop
test
in
in
sub
out
mull
xorl
ret
sub
insl
sub
shll
hlt
mov
in
lcall
push
jno
rcrl
cwtl
sbb
or
inc
mov
pop
insl
fucomip
popa
sub
and
data16
addr16
test
adc
rcll
mov
pushf
es
adc
sahf
movsb
scas
xor
sub
xchg
xor
xchg
dec
and
mov
inc
outsl
inc
out
aad
cmc
fs
and
fst
jb
sub
push
inc
add
imul
in
in
dec
pop
push
dec
callw
lea
jne
orb
decb
bound
stc
mov
pusha
mov
mov
xchg
mov
mov
lods
jecxz
jmp
fistpl
dec
or
clc
leave
lea
mov
pop
mov
and
jp
mov
out
add
test
cltd
or
cwtl
xchg
out
movsl
bound
out
fadds
sbb
cmp
in
cmp
inc
cvttps2pi
aaa
outsb
fdivrp
les
popa
clts
es
push
addr16
xor
mov
sbbl
adc
mov
mov
cmpsb
jns
movsb
cmp
and
lds
jg
add
sub
and
cmp
arpl
cmp
pop
in
mov
jbe
lcall
or
pop
xchg
pop
gs
jg
mov
mov
adc
sub
jno
cli
jb
jnp
addr16
pop
push
loope
xchg
push
jg
dec
fsts
mov
xor
cmp
inc
sbb
push
repnz
mov
nop
pop
shlb
fsub
inc
cmc
dec
insb
pop
or
inc
add
mov
pop
aas
arpl
test
pusha
pop
ja
lods
bound
out
cmp
pop
xor
pushf
icebp
sti
adc
sbb
loopne
cs
iret
xchg
nop
xor
movsl
dec
sub
in
xlat
push
jno
cltd
dec
mov
rcl
mov
lods
xor
and
in
jb
jae
sbb
push
adc
dec
mov
enter
adc
xchg
dec
out
sti
cmc
ljmp
les
xor
subps
mov
rcl
jno
into
add
rclb
ja
js
dec
aas
mov
fwait
imul
sbb
imul
decb
cli
fists
enter
daa
ficoml
xor
jns
test
mov
std
push
lret
jnp
sub
xchg
je
add
leave
lods
xchg
xchg
jmp
dec
daa
popf
lret
hlt
push
lcall
arpl
mov
push
scas
das
testb
in
push
test
aad
cmp
xchg
jl
or
inc
pop
daa
pop
pop
cmp
xor
jno
xchg
nop
punpcklbw
call
js
sub
adc
push
or
adc
jo
jle
xor
push
pop
stos
nop
enter
push
int3
pop
mov
cmp
mov
sbb
jecxz
out
je
clc
shr
rorb
mov
loopne
ja
jp
loop
inc
pop
or
int
ret
enter
cmp
sub
movb
xchg
out
and
sub
mov
push
ds
rolb
jge,pt
inc
mov
addl
sbb
cmc
mov
dec
cmp
je
lea
sti
lcall
pop
mov
pushf
icebp
mov
xchg
scas
es
cmc
mov
fdivl
imul
fnstcw
icebp
inc
inc
daa
ljmp
xchg
xchg
addr16
out
dec
sub
sub
xlat
sub
mov
jb
inc
jbe
pop
push
mov
mov
jo
cmp
dec
lds
int3
loopne
int
sbb
sbb
pop
adc
aam
hlt
or
and
je
insb
movb
pop
jns
and
loop
loopne
inc
pop
ss
into
movb
hlt
jae
mov
shl
mov
xor
gs
mov
add
rorb
lahf
dec
mov
xchg
paddq
addb
mov
jecxz
mov
fistpl
mov
cmpsb
add
mov
lret
mov
xchg
sub
push
xor
mul
xchg
incl
or
fwait
stc
ret
mov
adc
testb
lods
fld
pop
xchg
push
icebp
imulb
push
lds
js
dec
movsb
sbb
push
ret
aas
pop
mov
hlt
cmp
push
call
xor
mov
adc
icebp
cmpsl
ss
clc
lret
jp
adc
andb
jb
mov
out
mov
stc
lods
stc
lods
sub
pusha
fstl
not
mov
std
xchg
dec
push
sbb
dec
mov
js
aam
loop
sub
imul
jne
adc
adc
lret
sahf
and
in
cs
jae
ret
sub
cmp
or
clc
and
and
sahf
cwtl
push
mov
aas
or
lds
sti
dec
push
cltd
inc
aaa
jmp
mov
cmp
mov
xor
pop
add
jp
out
inc
xchg
test
repz
push
call
addr16
xor
pushf
adc
lret
push
div
imul
inc
mov
leave
sub
std
dec
aam
adc
in
scas
xor
ficomps
daa
xchg
or
repnz
sar
xor
xchg
mov
add
dec
lods
adc
push
cmp
sbb
xchg
sub
lea
adc
rol
adc
in
sub
out
stos
mov
cmp
sar
mov
pop
inc
dec
mov
cld
xor
mov
sbb
jae
push
data16
sbb
cmp
fdivp
das
pop
jge
cmpsl
stc
jnp
cmpsl
xchg
jmp
dec
fisttpll
arpl
int3
sahf
and
nop
mov
or
or
leave
insl
sbb
sub
pop
ficoms
xor
sbb
jae
enter
js
adc
popa
dec
or
xchg
xor
mov
push
loopne
jle
lret
lcall
pop
in
rcrb
xor
or
or
imul
mov
cmp
popa
lea
std
shlb
pop
pop
jnp
add
insl
jl
imul
sbb
fs
mov
inc
adc
push
nop
mov
push
mov
fwait
sbb
in
cmp
mov
out
pop
xor
iret
pop
dec
ljmp
call
sub
cmp
lret
mov
push
push
cmp
jecxz
pushf
inc
lcall
mov
leave
addr16
sub
fadd
sub
push
adc
inc
cli
cmpsl
aam
xchg
push
cmp
mov
mov
cli
int
sbb
inc
xchg
jle
jbe
xchg
or
je
xchg
mov
ror
mov
mov
push
loop
or
rcll
mov
push
dec
sbb
dec
inc
loop
xchg
push
add
push
sub
cli
in
das
pop
loope
shlb
fldl
out
aam
sbb
lahf
popf
pop
add
addb
cmpsb
cli
xchg
int3
jp
mov
std
test
mov
cmc
test
stos
cmc
leave
lcall
rclb
or
hlt
scas
loope
adc
jg
popa
insl
stos
sub
ret
outsl
sti
cmp
sahf
lahf
aas
das
xchg
cmpsb
and
mov
stos
inc
cmpl
fsubl
flds
mov
nop
mov
jae
sbb
push
into
insl
aam
sbb
pop
gs
mov
fmul
aad
dec
ljmp
or
mov
out
ss
mov
dec
or
mov
pusha
addr16
pop
clc
mov
xchg
mull
rcrb
mov
iret
pusha
fnstcw
out
or
pop
leave
ljmp
popa
cmp
jge
adc
cmp
icebp
mov
lea
jns
pop
mov
idivb
cmp
jno
inc
mov
inc
and
xchg
lea
mov
xchg
shl
dec
xchg
pop
and
jle
add
movsb
std
sbb
jno
lock
xchg
adc
push
addr16
push
or
lock
mov
sti
sbbb
iret
mov
jmp
sbb
or
mov
in
jno
mov
das
and
aaa
sub
lods
mov
dec
pop
pushf
or
scas
pop
test
dec
daa
mov
es
mov
ds
into
xchg
cmc
ds
adcl
in
add
pop
in
push
je
sub
jecxz
add
push
pop
inc
push
addr16
pusha
pop
xor
xor
cmp
mov
cli
insl
xor
sahf
mov
in
fwait
mov
dec
ds
lret
inc
and
cmp
loop
mov
filds
jge
outsl
sbb
cmp
jne
xchg
inc
mov
sub
or
and
xchg
adc
dec
sbb
ret
addl
xchg
cmpl
sub
sub
loopne
jb
mov
inc
lahf
mov
ljmp
jne
adc
push
out
aaa
stos
lods
xor
xor
out
stc
cmp
or
jne
js
aam
ds
push
dec
hlt
inc
jmp
adc
sbb
jmp
dec
fists
test
ret
mov
out
sbb
test
rep
dec
sub
xchg
nop
and
lret
add
imul
mov
mov
cmpsb
push
mov
jns
fsubrs
loopne
inc
dec
std
imul
cmpsl
shrb
hlt
jb
xor
adc
mov
mov
xchg
sbb
sbb
jl
in
add
pusha
cld
xorl
mov
xchg
jns
lods
inc
xor
movsl
jg
enter
adc
jecxz
cwtl
mov
mov
dec
std
add
mov
mov
cmp
push
iret
test
subb
dec
fsubl
push
and
xchg
stc
addr16
testl
dec
out
or
sbb
enter
cmpsl
scas
xchg
das
mov
mov
push
or
inc
addr16
mov
cmp
jmp
pushf
mov
push
pop
pushf
jns
fcmovu
xchg
bound
pusha
popl
inc
sub
xchg
xor
test
lea
scas
or
mov
out
hlt
scas
inc
sbb
jmp
mov
mov
andl
add
test
aaa
mov
mov
or
cmp
repnz
push
out
adc
xchg
push
fsubr
stc
mov
pop
cmp
xchg
and
add
lret
in
loopne
pop
dec
cmpsl
imul
adc
test
std
test
imul
pop
js
xor
mov
mov
aad
jb
daa
pusha
addr16
push
dec
test
xchg
pop
mov
mov
fiaddl
and
aad
aaa
idivb
mov
xlat
inc
pop
push
aaa
ret
xor
outsb
sbb
mov
ds
fisttpll
xchg
push
es
sub
stos
mov
adc
outsb
ja
xchg
std
cmp
mov
pop
pop
mov
mov
dec
loope
cwtl
insl
icebp
xlat
adc
fmull
into
div
jp
push
std
jmp
int
stc
shlb
outsl
fwait
test
mov
loope
aas
push
iret
xor
push
insb
insl
stos
mov
dec
xchg
rclb
mov
cltd
xor
add
pushf
repz
push
mov
outsl
cli
test
sbb
sbbb
dec
aaa
pop
mov
xor
int
inc
test
cmc
mov
lea
or
pop
fs
mov
jne
ficompl
mov
jmp
xor
clc
cmpsb
test
push
lds
sub
scas
pop
loope
sarb
jns
inc
popa
xor
xchg
mov
faddl
out
sub
das
popa
and
outsl
insl
lret
inc
imul
insb
mov
mov
cmp
push
aam
adc
adc
inc
arpl
cmp
out
or
cld
cld
imul
mov
mov
jmp
ss
enter
in
sbb
lods
adc
mov
outsb
ret
sub
ja
mov
adc
mov
into
enter
fs
ret
pop
mov
push
push
imul
nop
push
or
sbb
xchg
inc
addr16
loopne
mov
stos
enter
fstpt
or
jb
or
mov
and
loop
or
stos
out
fldt
das
sbb
inc
ret
and
and
fildl
ja
test
push
test
ret
into
and
add
xlat
stos
loop
cmpsb
aas
xchg
dec
stos
das
stos
or
icebp
hlt
ret
mov
sahf
lret
fcomps
pop
and
lret
orb
test
cmp
ja
dec
xchg
push
inc
fwait
mov
sub
mov
lea
push
idivl
data16
out
scas
adc
lahf
push
aaa
push
cmpsb
repz
jb
xchg
lahf
insl
imul
pop
aas
push
dec
mov
and
sub
mov
insb
jnp
lea
mov
mov
xlat
popa
jns
push
push
mov
imul
es
push
test
outsl
mov
nop
aad
push
loope
fbstp
stos
push
mov
es
inc
andl
cli
cwtl
xor
dec
shlb
aad
pusha
inc
fwait
ret
xchg
fwait
movsl
pop
jp
pop
sub
pop
mov
ret
xchg
rcrl
arpl
jecxz
popa
pop
xchg
es
icebp
mov
jae
mov
aas
jmp
pop
in
fdivp
xlat
jmp
icebp
add
dec
mov
sub
sti
inc
inc
mov
das
movsb
es
fadd
aam
sti
dec
popa
or
test
xor
subb
sbb
test
sub
xor
leave
ficoml
dec
sahf
inc
lods
insb
inc
sbb
fcompl
inc
ret
into
sub
or
sbb
cltd
add
in
cmpsb
leave
xor
add
jmp
sbb
adc
sub
andl
sub
test
push
sub
add
rolb
lret
fs
inc
jnp
stos
xchg
xor
xor
aaa
ljmp
imul
cmp
fisttpll
or
std
cld
sbb
mov
and
push
jns
push
stos
push
mov
jns
insl
cmp
add
push
int
xchg
add
out
jecxz
pop
testl
mov
sbb
dec
pop
push
mov
mov
cwtl
push
leave
cmp
pop
mov
fmull
pop
enter
jb
pushf
sub
jl
or
lcall
push
cmp
sbb
jmp
mov
inc
sti
cmc
mov
idivb
pop
mov
or
sub
outsl
dec
fisttpll
pushf
inc
or
mov
adc
lods
add
das
mov
push
bound
pop
sbb
mov
insl
add
pop
jg
movsb
js
adc
mov
repz
and
jns
mov
fucompp
mov
push
cmc
scas
pusha
scas
adc
dec
sbb
outsl
or
pop
pop
fidivrs
pop
lcall
mov
stos
aam
out
ds
adc
js
es
fistps
mov
iret
cli
push
jecxz
movsl
xor
fst
fdivrl
dec
flds
ror
pop
xchg
test
stos
lahf
mov
in
inc
arpl
add
int
push
aaa
icebp
push
int
clc
push
loop
pop
insb
mov
enter
adc
movsb
sbb
imul
je
das
jmp
fwait
mov
inc
mov
nop
mov
push
insl
outsl
fs
mov
int3
pusha
xchg
mov
jae
add
cltd
sbb
adcl
pop
push
adc
es
and
fmuls
inc
pop
jecxz
inc
je
or
lds
sar
dec
stos
and
xchg
cmpsb
pop
pop
mov
pop
int
mov
push
rorb
adc
jle
dec
mov
sub
ret
xchg
sbb
fcmove
cmp
outsb
arpl
and
hlt
lea
in
data16
mov
test
or
pop
xor
sbb
mov
inc
movsl
add
cltd
jne
jne
nop
mov
adc
xchg
and
not
push
lahf
mov
and
mov
scas
cmc
outsb
rcr
add
ficoms
add
jle
sub
sbbb
pop
dec
sbb
cmc
sahf
cmp
mov
loope
hlt
dec
push
push
adc
xchg
lods
push
insl
imull
mov
and
in
push
dec
push
jge
mov
mov
fnstenv
in
call
add
mov
fwait
mov
or
mov
pop
ljmp
movsl
movsl
rcll
sbb
dec
inc
lcall
add
div
and
mov
cmp
cmpsb
fs
cmp
xchg
cmp
lcall
xor
xlat
inc
ss
repnz
iret
out
bound
test
inc
inc
pop
pop
int3
and
xor
les
je
jle
popf
pop
mov
mov
into
mov
and
jg
ror
adcb
aam
in
pop
outsl
lds
or
rorb
outsb
es
testl
jno
mov
lcall
lret
cltd
in
pop
cmp
jne
jnp
cwtl
inc
in
mov
vpermd
das
xor
cmp
loop
outsb
dec
inc
xchg
sbb
push
mov
inc
push
rorl
add
in
lods
std
or
xchg
push
mov
iret
fcmovne
rep
fcomps
mov
xchg
jbe
jb
xor
xchg
mov
icebp
aaa
add
push
lcall
adc
sub
hlt
movsb
dec
pop
cmp
adc
loope
mov
dec
cs
dec
in
shlb
loopne
jge
in
aam
lret
fdivp
and
test
pushf
xor
addl
push
mov
insb
insl
pop
mov
jg
adc
not
pop
dec
std
mov
jmp
lods
enter
setnp
out
and
test
lret
and
pop
xor
inc
jnp
das
nop
pop
js
sbb
pusha
or
cmpsl
xchg
pop
cmpl
or
lahf
dec
xchg
push
lods
xlat
popa
sbb
xor
add
push
jecxz
loope
ret
xor
push
nop
decl
fstpt
xor
xor
jb
movsb
jg
insl
roll
pop
jg
mov
shlb
dec
adc
ret
cmpsb
add
int
or
push
data16
push
ds
ljmp
xor
das
mov
inc
push
xor
and
iret
js
test
mov
jbe
aad
mov
mov
mov
xor
movl
inc
xlat
and
je
mulb
std
negl
fcmove
pop
sbb
jne
int3
movl
xchg
lods
add
add
insl
cmpsl
dec
push
or
lret
jne
imul
dec
jecxz
xor
adc
testl
test
mov
push
lods
jp
inc
icebp
cmp
aam
adc
mov
dec
mov
xor
cld
xchg
and
push
sub
lea
push
pop
negb
mov
out
fistpl
gs
aam
dec
aaa
aaa
jmp
insb
popf
repz
jnp
mov
jae
imul
sbb
cmp
stos
push
and
bound
xlat
xchg
sbb
call
sub
and
sub
pop
sub
test
or
adc
mov
ja
xchg
shr
add
jmp
jno
orl
mov
pop
xor
pop
mov
sub
popf
xor
stc
xchg
int3
add
cmp
and
sub
push
push
xchg
ss
ja
faddl
jno
filds
jmp
sbbl
std
push
lea
mov
mull
xor
imul
sbb
movsl
in
adc
je
inc
mov
stos
fs
ds
inc
xchg
out
sbb
aas
in
icebp
sti
sub
push
daa
icebp
mov
inc
jge
icebp
pushf
jp
cs
mov
shl
lcall
mov
jae
mov
pusha
jle
xor
aas
js
jge
add
adc
movsl
ficomps
xchg
mov
shlb
xchg
rcll
jl
pop
in
pop
rorl
inc
aad
ja
imull
insl
add
call
fs
xor
lret
xchg
or
cmpsb
mov
in
mov
cmpsl
popf
daa
loopne
shl
or
cmpsl
cmpsb
mov
cs
pop
pop
ja
or
and
pop
jb
fldt
fmull
leave
jb
mov
daa
imul
mov
out
cmpsl
fs
movb
mov
sub
shr
scas
sbb
push
or
gs
fsubr
push
aas
cwtl
fwait
xchg
cmp
jmp
cmp
lcall
into
xchg
cmp
adc
aas
dec
sub
in
add
cmp
jno
cmp
push
mov
popf
mov
addl
pop
fsubl
cs
xchg
movsb
sbb
and
pop
imul
mov
pop
divl
test
adc
lods
jbe
mov
pusha
xor
push
pop
pop
repz
fnsave
adc
jne
dec
sub
sti
cs
dec
lret
inc
pop
jo
pop
lock
clc
out
pop
push
vpsubb
xchg
test
and
sarb
jns
adc
outsl
dec
or
call
std
rolb
push
ss
pop
xchg
adc
cwtl
jg
push
sub
aas
or
or
lods
loopne
cs
pop
nop
add
std
lahf
bound
pop
xor
in
cs
push
fcmovnu
repz
flds
sbb
shrb
mov
mov
jmp
nop
mov
in
loopne
sub
cs
dec
rcrl
mov
ret
inc
lret
inc
adc
dec
xchg
sub
fs
scas
out
cmc
xor
pop
xor
mov
xchg
push
cmp
add
sub
jecxz
adc
dec
fstpl
fwait
mov
rclb
leave
fdivrl
xchg
fcoms
cmp
or
dec
and
inc
mov
fldenv
hlt
add
jb
or
xchg
mov
outsl
cmp
jae
pop
jno
jl
cmp
xchg
cltd
in
mov
std
and
sbb
cmp
dec
cmp
outsl
ds
jecxz
aas
dec
xchg
jne
sbb
shl
mov
shll
sti
xchg
bound
dec
or
dec
shll
mov
mov
lcall
jnp
adcl
rorl
push
jae
mov
jne
mov
popa
insb
imul
dec
arpl
inc
icebp
fisubl
addl
mov
popa
sbb
lcall
cmpsl
in
into
aaa
pop
jo
loope
or
adc
shrl
push
and
xor
adc
dec
rcrl
fcomps
mov
adc
fiaddl
loope
pop
dec
daa
mov
pop
ljmp
sbb
jge
adc
ficoml
inc
repnz
sbb
mov
loope
movsl
addr16
fbstp
xchg
and
adc
and
add
adc
cmc
jb
mov
cwtl
or
inc
jge
ret
mov
sub
push
fsts
loop
ljmp
mov
fisttpll
jns
jnp
mov
cmp
sub
movsl
cmpsl
and
outsb
adc
push
mov
aas
inc
dec
cmp
xchg
mov
push
shl
mov
and
pop
push
je
inc
mov
in
jns
in
pop
rclb
loope
add
mov
aaa
es
aad
incl
mov
push
fld
or
mov
inc
cmp
pop
pop
xor
dec
in
test
dec
or
inc
sbb
xor
inc
and
popf
shll
std
xor
cmpsb
dec
jge
inc
xlat
add
sahf
fnstenv
push
lods
fimuls
cmp
in
mov
rcrl
out
adc
or
sub
adc
xchg
mov
pop
roll
xchg
out
xlat
sbb
xor
cmp
mov
sti
repnz
cmp
adcb
je
fldl
in
inc
jge
outsl
xchg
int3
test
sbb
test
xlat
aas
ret
js
pop
loopne
pop
push
xchg
adc
and
cmpsl
andl
inc
xor
pusha
add
pop
add
xchg
add
scas
rcll
cmp
mov
and
inc
or
add
xorb
mov
cmp
mov
push
sbbb
cmp
mov
popf
andb
push
ja
xchg
es
pushl
fstl
mov
mov
sub
cmp
cld
les
jbe
rcrb
jae
lret
cmp
inc
xchg
rsqrtps
adc
scas
mov
mov
sbb
enter
fmull
ds
and
repz
sub
test
maxps
jns
and
insb
mov
loope
sub
mov
out
dec
jne
in
pop
test
insb
scas
aaa
dec
adc
xchg
in
out
lods
mov
pop
jmp
push
mov
in
add
mov
cmp
testl
test
orl
dec
ficomps
push
jne
push
or
push
sbb
dec
popf
dec
std
jnp
dec
sbb
xchg
sub
xchg
push
aad
in
sub
xor
bound
popf
aad
and
dec
jne,pn
mov
sub
mov
pop
mov
and
repz
add
xchg
outsl
dec
int
mov
lds
lcall
dec
xor
lock
insl
nop
lahf
pop
lret
add
insb
xlat
ljmp
lock
dec
jmp
and
in
mov
mov
jnp
stc
pop
dec
mov
lds
pop
adc
test
data16
fs
sbb
popl
add
cld
push
jae
cld
inc
push
cmp
and
mov
mov
cmpsl
jge
test
ret
negl
or
xchg
scas
xor
sub
outsl
push
mov
fwait
les
imul
repnz
sbb
xchg
arpl
fwait
cmp
push
in
cmp
push
mov
sar
ja
mov
xchg
cli
pop
cltd
aaa
dec
jns
mov
pushf
stos
xchg
push
das
xor
and
rclb
cwtl
pop
and
pop
xor
jo
inc
push
mov
lods
or
lds
addb
pop
and
dec
xchg
stos
push
mov
outsb
cmp
pop
cli
lcall
and
repz
icebp
mov
nop
and
jbe
mov
movsb
outsb
inc
fnstcw
scas
ds
enter
xchg
push
test
dec
fbld
call
rorb
pop
in
adc
add
add
clc
out
fstl
fmull
adc
loop
mov
cmpl
enter
jl
mov
adc
sbb
lret
and
jnp,pt
xchg
dec
pushf
mov
adc
daa
push
pusha
lea
rcll
std
mov
and
push
loop
sub
cmp
cltd
add
fldt
push
into
clc
daa
es
movl
shlb
jnp
add
subl
subb
js
arpl
lds
pop
sub
xor
or
adc
arpl
pop
sub
push
out
mov
mov
mov
icebp
inc
in
inc
mov
sub
push
pop
mov
cmpsb
mov
nop
in
mul
inc
cmpsl
aaa
shrl
xchg
lods
rcrl
mov
sbb
js
mov
or
imul
xor
sahf
push
fwait
pushf
icebp
cld
lcall
push
xor
fists
push
dec
pop
push
pusha
adc
mov
leave
sbb
jb
out
or
push
xor
adc
movsb
jno
push
dec
push
je
cltd
inc
icebp
sbb
shrl
sbb
out
and
sahf
nop
les
in
aam
js
mov
aaa
and
dec
jecxz
dec
es
mov
xlat
sbb
repnz
sub
inc
test
mov
rcl
scas
mov
out
out
pop
sbb
jne
aas
mov
push
and
aad
fsts
in
pop
jae
adc
daa
xlat
mov
je
gs
jmp
push
cmp
inc
pusha
rcr
dec
outsl
cmpb
sub
sbb
hlt
sbb
in
subl
jge
pop
xchg
je
cld
mov
jnp
fisubs
inc
pop
mov
insl
in
sbb
popf
cmc
loop
arpl
ret
push
adc
push
stos
inc
pop
mov
cmp
movsb
cltd
push
loopne
bound
ljmp
lret
movsb
and
ljmp
test
mov
adc
test
popa
lock
lcall
daa
cmc
pop
loope
push
fs
xlat
adc
mov
inc
mov
mov
mov
out
push
mov
ja
repnz
lcall
cmpsb
movsb
sbb
add
sbb
sub
push
adc
insl
dec
sub
pop
notb
out
jae
cmp
mov
add
sti
stos
add
cmp
popa
lods
test
out
or
and
dec
mov
ljmp
lock
das
pop
sbb
pusha
fs
cmp
mov
sub
cmp
inc
pop
aas
add
test
xor
or
ljmp
test
adc
fsts
or
idivb
clc
fistpll
xchg
mov
add
imul
into
push
adc
stc
xchg
add
jo
jg
test
fistpl
mov
inc
pcmpgtd
xor
push
sub
cmp
mov
jge
dec
sub
fistl
xor
cltd
pushf
movsl
mov
insl
data16
aad
lds
add
ja
notl
jae
or
cmp
xor
lods
jmp
adc
jno
mov
mov
into
aas
push
scas
pop
ret
int
sub
stos
std
mov
js
or
dec
jne,pt
sub
pop
mov
sbb
dec
adc
fsubs
int3
pop
pop
xlat
sub
jno
fs
sub
mov
leave
aas
je
ljmp
cwtl
cmpsl
hlt
fstps
xor
aam
add
dec
add
pop
push
icebp
lcall
addb
mov
mov
jg
pop
or
fisubrs
loop
xchg
or
imul
hlt
and
lea
incl
add
mov
dec
es
js
xor
stc
xor
mov
stos
push
dec
jmp
fdivrl
push
inc
shlb
imul
mov
inc
and
mov
jecxz
mov
mov
lods
scas
roll
adc
not
stc
int3
adc
outsl
fisubs
dec
sub
sbb
push
lock
test
mov
stos
cmp
pop
clc
jne
jns
xchg
mov
xor
in
xlat
cmpsb
and
add
mov
push
adc
mov
adc
bound
pop
mov
aaa
jmp
or
add
xchg
push
inc
arpl
adc
xchg
pop
std
xchg
sarl
sbb
clc
icebp
sub
ljmp
fucomi
das
test
push
push
mov
lods
cmp
push
sub
stc
xchg
pop
pop
cmp
fdivrs
es
mov
sbbb
xor
inc
xchg
cmp
dec
stos
pop
adc
and
add
sbbb
scas
popa
enter
jl
sub
lods
test
xor
out
xchg
xchg
xchg
sbb
jmp
cmc
inc
push
iret
cmp
insb
in
sti
push
sbbb
imul
pop
sti
pop
and
jg
jno
xchg
add
sub
cmpsb
or
out
movsb
test
sub
jl
sub
mov
popa
sub
cwtl
adc
jb
sahf
jns
mov
roll
daa
popa
or
push
scas
xlat
mov
sub
pop
cmp
push
incb
sarb
hlt
stos
adc
ljmp
scas
cld
test
clc
cmp
cld
or
inc
cltd
dec
repz
jg
adcb
out
aad
inc
add
hlt
in
cmp
mov
stos
mov
jmp
test
stos
xorb
pop
mov
divb
popf
rclb
dec
out
and
xor
scas
mov
and
sbb
mov
mov
mov
xor
add
xor
clc
and
xor
cli
sub
xor
xchg
lods
imul
fsubs
cltd
sub
adc
mov
xor
aad
sbb
or
sub
mov
xlat
mov
int3
push
pusha
ljmp
loopne
add
jmp
xor
jmp
sahf
loope
push
mov
loope
push
ss
rcrb
pop
loope
lods
jmp
popa
and
add
frstor
mov
repnz
ss
insb
sahf
popa
ffree
dec
cmp
adc
idivb
rol
cmp
bound
jo
cltd
movsl
test
sti
push
or
fwait
sbb
dec
ljmp
std
in
shlb
xor
push
mov
inc
jmp
stos
push
jne
inc
in
add
dec
push
mov
out
mov
and
dec
pop
data16
push
jb
push
fwait
dec
fwait
aaa
mov
inc
bound
cmpsl
dec
clc
aad
pop
jbe
and
push
push
pop
ret
mov
dec
xor
mov
test
ljmp
push
icebp
jp
scas
mov
in
stc
mov
outsl
movsl
add
dec
popf
xor
mov
cmc
sbb
xor
repnz
popf
mov
xchg
mov
xchg
adc
adc
xchg
cmpl
dec
inc
popf
pop
idivl
hlt
jecxz
add
xchg
repnz
xor
stc
and
fwait
or
clc
jp
mov
test
or
pushf
lret
repnz
fisttpll
mov
push
pop
out
dec
xchg
dec
insl
cmp
aad
leave
std
xchg
stc
jmp
nop
cs
cmp
leave
xchg
rorb
int
rcrb
fwait
sbb
add
lods
push
pop
xchg
inc
js
mov
mov
or
jmp
xor
inc
inc
loop
adc
popa
xchg
and
mov
insb
mov
adc
faddl
xor
add
jge
xchg
call
addr16
dec
dec
cli
mov
ja
xchg
mov
cltd
or
dec
inc
clc
xor
jp
inc
sub
add
inc
fs
es
repz
push
rep
lds
push
call
fsubl
inc
pop
les
in
xchg
stos
jnp
rep
sbb
popa
leave
insb
pop
xchg
mov
outsb
mov
jbe
jg
xchg
push
into
lea
lea
je
dec
insb
hlt
or
and
mov
test
jmp
sub
stos
jg
out
adc
cmp
mov
stos
sbb
insb
mov
arpl
ror
pop
in
cmp
jo
mov
loopne
scas
xor
push
xchg
sbb
mov
outsb
cmp
movsl
lock
xlat
clc
ja
sbb
sub
repnz
dec
or
adc
leave
aam
and
mov
addl
clc
push
data16
push
ja
add
cld
pop
inc
pop
lret
repnz
bound
int3
sub
ljmp
xchg
pop
decl
imul
mov
jle
mov
je
in
mov
das
rorb
lds
jl
push
shr
or
and
nop
mov
mov
cs
ljmp
mov
mov
pop
xchg
imul
inc
and
push
mov
arpl
ja
inc
cli
adc
jne
jmp
pop
sbb
xchg
pop
movsl
shll
popa
xchg
xchg
inc
pop
pop
or
xchg
inc
aas
addr16
mov
and
push
outsb
call
sbb
cltd
pop
gs
hlt
jo
inc
add
testl
ss
dec
rorb
lods
cmp
cmc
stc
fnstenv
mov
push
cwtl
lock
pop
mov
adc
pop
cmp
test
sub
jb
ljmp
flds
and
mov
xor
outsl
movsb
mov
les
xchg
sub
adc
stos
xor
movsl
fiaddl
mov
cmp
lahf
int3
loope
cmpsl
cmp
push
add
in
push
mov
pop
ret
mov
cmp
fs
sbb
fstpt
enter
std
adc
pop
lea
jne
sahf
cmp
inc
shll
shr
mov
cld
or
jg
inc
rcll
sub
pop
popa
ljmp
movsl
mov
sti
or
popa
push
testb
or
inc
imul
mov
and
sbb
push
jmp
cmp
adc
xchg
loopne
insl
xchg
or
xchg
pop
rol
sub
in
cltd
fisubl
fisttps
outsl
fldt
xlat
pop
xor
inc
push
dec
jecxz
clc
sbb
aaa
push
cmp
pop
call
jl
int
jb
in
or
imul
jns
xchg
fdivs
push
mov
push
cmp
jns
std
lret
in
addr16
sarl
fidivl
pushf
xor
fstpl
dec
out
push
cli
lcall
push
pushf
mov
dec
cwtl
cltd
push
xchg
shl
cmc
jg
cmp
or
push
scas
dec
dec
sub
pop
jecxz
enter
jbe
fsub
loopne
mov
in
inc
sub
jo
cld
pop
xlat
addb
mov
mov
xor
xor
rcrl
mov
cmp
movsl
adc
xor
out
in
stos
mov
rorb
jmp
cmp
inc
outsl
pushf
jle
sbb
int3
mov
testl
je
pop
cltd
cmp
cmpsb
lahf
adc
adc
push
loope
loop
sti
or
cmc
cmp
cltd
icebp
sti
cmp
mov
test
mov
cmc
cmp
mov
and
pop
or
dec
add
xlat
idivb
scas
sbb
push
test
in
stc
out
mov
out
sub
out
pop
sub
imul
jp
xabort
sub
pop
sbb
stos
stc
daa
outsl
rcl
mov
xchg
push
cmp
mov
pop
or
jp
outsl
clc
add
dec
addr16
scas
jle
cmp
aaa
shll
jne
xchg
lock
shll
xchg
push
xchg
xor
xlat
mov
jns
jae
and
icebp
in
xchg
dec
jae
mov
cmp
jl
xchg
pop
xor
sar
adc
adc
push
daa
sbb
aas
enter
in
push
adc
jmp
xor
sub
adc
adc
sub
ds
out
stc
stc
or
popa
lahf
cwtl
push
imul
ds
cltd
xchg
insb
inc
pop
pop
pop
push
enter
loopne
ret
or
fidivs
pop
mov
call
sub
ss
out
je
movsl
jb
test
rorb
movb
pusha
lahf
scas
sub
inc
jne
mov
lret
xchg
adc
sub
popf
or
or
or
fucomp
sub
aad
mov
pusha
push
sbb
pop
or
repnz
ja
das
dec
cmpsl
nop
sbb
das
lock
lahf
outsb
lea
xchg
sbb
cmp
pop
fwait
outsl
sbb
mov
sub
pop
or
outsl
popf
xchg
pop
cmp
loop
push
fadds
push
nop
push
lods
sbb
stos
cmp
jg
mov
adc
mov
cmc
xor
mov
out
add
and
loope
inc
xchg
adc
jp
pop
in
cmpsl
pusha
addr16
cmc
insl
and
jp
into
mov
and
xor
push
fstl
loop
add
mov
pop
nop
dec
push
mov
mov
fisubrl
cmp
ret
pop
inc
bound
push
sub
scas
bound
mov
rol
btc
aas
out
add
dec
push
aaa
aaa
cmpl
imul
shrl
pop
xchg
in
xchg
lock
sub
push
fisubrs
cmp
jnp
jo
pop
sub
es
jmp
inc
dec
out
xorb
out
daa
mov
sbb
movq
repnz
pop
pop
inc
sbb
roll
push
std
notl
dec
xchg
aas
mov
adc
and
inc
add
push
in
dec
imul
adc
pop
iret
xlat
push
xor
test
imulb
xchg
push
mov
sub
movsb
inc
gs
rcl
and
sub
xor
jns
insl
popf
mov
and
popa
push
mov
and
sbb
les
dec
pop
xchg
dec
or
add
das
xchg
imul
adc
mov
test
loop
mull
adc
shrb
les
das
insl
pop
adc
xor
rcrb
setns
sub
ja
cmp
sbb
leave
fidivs
cmp
bound
adcl
xchg
imul
enter
mov
dec
pusha
inc
je
std
xchg
ficompl
out
cmp
aas
pop
and
pop
ficompl
mov
scas
stc
in
popa
cmp
insb
jno
mov
lahf
pop
cltd
push
decb
xchg
push
rolb
iret
stos
imul
cltd
ret
add
push
and
fisubrl
movsb
mov
cmp
cwtl
inc
inc
dec
pop
addr16
gs
inc
outsl
nop
icebp
lock
xorl
aas
js
filds
xor
hlt
or
outsl
and
ss
js
mov
mov
cmc
inc
daa
fwait
mov
mov
cld
jecxz
fldenv
repnz
xor
and
mov
xorl
aad
das
inc
mov
pop
xchg
sti
or
hlt
dec
stc
add
cwtl
cld
loope
mov
cwtl
jns
sahf
jecxz
flds
mov
xor
and
sbb
mov
mov
push
fistps
sub
xor
push
divb
xor
push
jne
jo
stos
ja
mov
icebp
hlt
push
xchg
lock
mov
or
inc
xor
rclb
sub
fbstp
stos
cmpsb
sbb
movsb
mov
loope
mov
out
mov
mov
scas
je
pop
test
popl
add
jnp
sbb
hlt
push
jae
mov
arpl
pusha
clc
gs
js
jnp
loop
xlat
les
and
outsl
xor
jbe
cmp
aam
jp
icebp
cmp
or
dec
jge
pushf
jge
pop
cmpsb
clc
aad
xor
ds
pushf
cmpsb
pop
inc
push
jecxz,pn
cmp
adc
jle
insb
mov
les
jmp
jnp
dec
fnclex
inc
xor
xchg
aaa
fs
mov
popa
adc
or
cmpb
mov
xchg
sahf
mov
or
xlat
or
sbb
jge
je
fstpl
out
loopne
jge
faddl
add
sbb
popa
mov
jns
lds
lods
xchg
addr16
pusha
pop
js
out
nop
jmp
out
inc
mov
xchg
out
or
fbld
cmp
stos
add
xchg
sub
dec
mov
mov
add
jp
aas
mov
dec
out
jmp
pushf
leave
inc
xchg
jo
in
adc
and
push
adc
jl
inc
inc
xchg
sub
test
ja
cmova
out
inc
mov
shl
insb
mov
pop
cmp
popa
dec
jp
lcall
sahf
out
movsl
out
mov
pop
add
push
clc
test
pop
icebp
cmp
aaa
aas
in
ret
movsl
mov
jecxz
mov
pop
cmp
mov
repnz
xchg
dec
lahf
int3
sbb
mov
pop
icebp
mov
pusha
jns
aaa
adc
test
sbb
inc
cld
adc
hlt
adc
sbb
xchg
add
lahf
gs
psadbw
outsl
and
cmpsb
push
fwait
lea
jmp
hlt
pop
sbb
push
xchg
mov
outsl
cld
xor
and
mov
ljmp
mov
add
cmpsl
outsb
arpl
cli
mov
ja
xor
andb
mov
pop
out
mov
and
repz
in
fdivrs
add
sub
mov
dec
mov
test
out
adc
xchg
push
std
sbb
jnp
jle
cld
jmp
mov
sub
jbe
out
pop
jo
sub
in
xchg
aam
mov
hlt
add
pop
movsb
add
fildll
jns
leave
jb
and
xor
mov
inc
in
lret
sbb
cmc
insl
adc
push
add
and
xor
pop
mov
xor
mov
inc
test
imul
mov
repz
mov
cld
cmp
push
adc
pop
xor
sub
xor
inc
add
push
sbb
shl
or
fdivl
push
arpl
push
mov
push
icebp
or
rcl
ja
test
fisttpll
lds
test
add
add
pushf
dec
xchg
sahf
out
jbe
test
mov
bnd
sti
lock
push
xor
and
shll
das
test
push
sub
dec
adcb
addl
inc
pop
lcall
sbb
shlb
mov
jl
and
pop
daa
cmp
aad
out
aaa
fwait
mov
pop
jb
lds
mov
mov
xor
out
and
jo
and
in
mov
lods
xchg
jno
cltd
nop
lods
cmp
ljmp
dec
mov
gs
les
mov
push
push
out
sub
aaa
and
adc
in
popf
push
and
fsubrl
cmp
jge
jb
mov
pop
arpl
repz
xor
sahf
je
or
pop
int3
dec
inc
lret
jp
sti
enter
push
ficoml
aas
les
jne
sbb
dec
mov
ss
aaa
popf
outsb
in
cmp
push
sub
or
cmp
repz
mov
mov
xchg
stos
adc
stos
sub
jo
mov
loope
scas
sub
call
imul
out
or
ljmp
add
mov
push
adc
mov
ficomps
cmp
jge
jbe
jo
inc
jnp
insb
xor
sub
inc
pop
or
xor
fcmovnbe
push
pop
in
pop
adc
mov
imul
add
xor
xor
popa
iret
lods
pop
loope
push
aas
lret
push
les
push
sbb
test
ja
fisttps
fs
or
or
sbbb
jle
inc
push
lea
mov
sahf
ljmp
adc
jb
fsts
xor
sbb
xor
orb
jg
add
mov
ljmp
mov
xchg
imul
arpl
insb
les
push
sbb
or
jmp
inc
daa
and
mov
aas
sahf
push
push
daa
out
dec
push
mov
out
sub
and
mov
sbb
outsl
jp
push
out
js
daa
dec
pop
or
aaa
sbb
pop
jnp
fisubl
fldt
js
ret
adc
neg
mov
pop
lods
pop
popf
jae
lcall
cmp
shr
cld
mov
leave
clc
arpl
fwait
in
mov
and
movsl
rcr
xor
xlat
out
jmp
sub
rcrb
pop
jnp
pop
and
pop
imul
xor
popf
fwait
or
test
dec
mov
jns
les
mov
nop
push
add
mov
jbe
in
outsb
inc
jmp
cltd
mov
loope
adc
mov
stos
xlat
fidivs
dec
imulb
cmp
mov
add
xchg
or
adc
divl
sbb
sbb
repz
cwtl
dec
outsb
dec
adc
add
cmp
add
cmp
aaa
push
mov
xchg
or
pusha
inc
and
imul
mov
imul
fildll
cli
cmp
dec
xor
xchg
dec
stos
push
imul
lahf
shl
scas
hlt
push
mov
jmp
add
lcall
fs
stos
jno
mov
adc
sarb
xorl
or
pop
popf
lret
jns
and
fdivrl
mov
jle
popa
sub
iret
jae
movsb
push
das
adc
test
add
sub
mov
xchg
sbb
jne
lcall
xor
push
inc
jns
scas
lahf
adc
mov
adc
pop
out
test
and
pop
fsubrs
fstp
lahf
or
dec
outsb
inc
xchg
das
mov
sub
adc
lods
cmpsb
xchg
pop
loopne
lea
loopne
inc
pop
enter
shll
fisttpll
lea
sbb
pop
jno
pusha
or
pop
addl
stos
movsb
push
andb
push
xchg
mov
ficompl
sub
out
loop
cli
add
mov
and
dec
ficomps
sarb
lds
jns
adc
push
adc
pusha
jle
and
cmp
stos
or
dec
mov
mov
shll
pop
jb
jg
pop
sbb
xchg
cmp
dec
shr
push
sub
or
xchg
cmpsb
mov
dec
test
pop
sbb
dec
adc
add
in
repz
bound
gs
call
mov
call
pop
pop
cmc
arpl
xchg
clc
call
in
jnp
js
decl
and
cld
pop
into
cld
add
push
inc
ret
into
mov
stos
sub
stc
jno
fwait
clc
adc
sub
push
cmp
ds
jno
mov
sub
sbb
bound
outsb
out
mov
cmovge
int3
pushf
push
mov
xchg
adc
add
dec
push
xor
inc
push
shr
jns
fwait
test
cmp
mov
and
jecxz
add
pop
call
movsl
lock
cld
stos
ds
icebp
cmp
xchg
cmc
cmp
push
push
dec
xor
repz
ja
inc
jbe
test
cltd
add
mov
mov
cmc
outsl
ret
jb
fldcw
dec
dec
or
adc
into
ljmp
ljmp
xchg
mov
lods
pop
mov
mov
out
stc
cmp
mov
add
cmp
test
push
jbe
ss
subb
mov
fldenv
stc
aaa
xchg
popl
rolb
lds
mov
aas
push
mov
in
xchg
jns
mov
rol
pop
pushf
push
xchg
rol
dec
and
jno
mov
std
xchg
and
push
je
and
mov
subl
jbe
jo
call
scas
stc
jg
divb
mov
add
les
imul
clc
inc
mov
push
xchg
mov
jno
out
push
test
loopne
add
inc
movsb
or
push
and
stos
mov
imul
push
cwtl
mov
into
rclb
pop
divb
loop
cmp
sub
add
addr16
js
sbb
rcrb
add
xchg
xchg
sar
enter
inc
inc
adc
jnp
sub
mov
shl
jae
xor
cmp
inc
or
imul
add
mull
mov
jg
dec
sar
and
adcb
jns
and
xlat
lock
movb
mov
xor
jge
push
imull
scas
or
mov
shrl
sbb
inc
mov
mov
testb
pop
leave
inc
scas
pop
rorb
lcall
jecxz
push
jl
jl
mov
shlb
and
cmpsb
lods
call
mov
pushf
cmp
popa
lahf
push
out
lock
or
jle
pushf
xor
mov
add
or
adc
sub
push
jp
jae
inc
fldenv
mov
adc
es
cmpsb
cli
and
xlat
fwait
jbe
cltd
cltd
mov
test
xor
xchg
xchg
xchg
dec
or
push
xchg
xchg
mull
pushl
lret
ret
mov
mov
xor
pop
pop
scas
pop
pop
mov
sbb
xchg
lret
sahf
lahf
aas
sbb
jae
adc
jb
cmpsb
and
test
lods
pop
inc
jb
out
adc
xchg
xchg
es
push
inc
insb
movsl
stos
pop
andl
mov
mov
mov
xchg
in
in
mov
daa
xorb
xchg
rorb
dec
scas
lods
ret
push
aad
or
mov
pop
lds
jmp
jl
adc
jge
scas
jnp
xor
lret
push
adc
lahf
mov
ret
mov
xchg
mov
loopne
lods
shrb
ret
cmpb
mov
addb
mov
sbb
bnd
sub
xlat
xor
dec
lret
mov
push
daa
jmp
aas
xchg
fwait
or
and
daa
test
jbe
sbb
mov
sub
or
jecxz
or
pushf
dec
add
leave
push
cltd
sub
sti
pop
inc
shrb
es
inc
inc
push
out
cmp
sub
inc
rcll
lods
fistps
sub
xchg
and
or
add
ljmp
cmp
scas
shll
test
scas
pop
into
or
pop
lahf
mov
add
or
mov
test
push
pop
cmpb
jecxz
mov
movsl
nop
dec
das
repz
xchg
push
jnp
cmp
ret
cld
and
add
fwait
aas
aas
sar
orb
add
mov
push
jnp
lcall
pop
cmp
mov
subl
pop
ss
js
aas
bsf
and
cmpsb
mov
sub
not
jno
xor
xchg
xor
sub
dec
pop
js
mov
xor
push
inc
shrl
fucomi
cs
ret
ror
mov
mov
dec
adc
add
movsb
mov
outsl
imul
sti
scas
scas
inc
or
mov
push
jnp
and
pop
ss
mov
clc
loop
dec
es
mov
push
sub
fs
scas
cs
test
jmp
mov
nop
pop
mov
cmp
data16
xlat
hlt
test
lcall
xor
shrb
cmpsb
cmpsl
push
sub
jecxz
addr16
pop
add
dec
fisubrs
mov
cmp
jp
mov
adc
loope
repnz
push
push
enter
loop
push
mov
mov
in
mov
adc
pop
inc
and
out
sub
sub
pop
out
mov
sub
dec
inc
imul
pop
push
sahf
dec
aaa
iret
les
jle
dec
xchg
pusha
inc
outsl
xchg
movsl
daa
mov
test
pop
add
sub
dec
push
inc
test
fildl
sub
jb
clc
mov
repz
fcmovne
aad
cmpsl
pop
or
cmp
out
and
jmp
cmp
cmpsb
push
pusha
xchg
loop
and
ss
inc
mov
lcall
cmp
jg
lods
push
in
orb
pop
push
cltd
ss
cmpsb
xchg
inc
pop
pop
lcall
adc
inc
jno
cwtl
test
jae
popa
sbb
clc
mov
push
or
mov
xchg
imul
sub
fdivrl
jbe
cmp
insl
sub
mov
nop
pop
and
into
hlt
addr16
dec
std
out
cld
jb
fnsave
pop
xchg
xchg
dec
push
shl
cmc
dec
lods
adc
cmpb
mov
clc
push
dec
sbb
push
mov
jmp
xor
js
adc
or
movsl
mov
xor
push
mov
and
push
fbstp
or
mov
adc
cld
adc
push
in
mov
add
push
lcall
mov
adc
fdivrl
push
jne
fimuls
arpl
cmp
adcl
jp
push
sub
cltd
cwtl
sub
ljmp
mov
aas
and
xchg
adc
movsl
orb
sbb
lock
sbb
gs
call
xor
xchg
jp
pop
pop
js
jmp
inc
icebp
or
stos
push
fsubr
push
iret
aad
addr16
mov
mov
loop
call
xor
popf
out
negl
cld
sub
and
add
cmp
or
andl
out
lods
out
xor
add
inc
jb
sub
fs
mov
jmp
mov
nop
mov
push
cli
mov
dec
insl
mov
outsl
inc
lds
jl
push
adc
and
std
adc
mov
cmp
movsl
push
xchg
iret
sar
jae
mov
stos
popf
mov
mov
std
or
je
or
add
shlb
inc
dec
or
shlb
cmpsl
sbb
inc
xchg
je
mov
aad
add
shrl
sub
aad
call
and
fs
adc
xor
out
testl
jae
sbb
fildl
sub
movsb
and
push
mov
pop
mov
fistpl
sbb
jns
cmpsl
add
lds
inc
inc
pop
jne
sub
adc
mov
and
std
mov
icebp
mov
movsl
cld
sub
in
jb
stc
lret
out
mov
push
test
pushf
insb
arpl
es
movb
pop
jle
pop
sarl
cmpsb
in
add
and
pop
or
sub
jmp
in
push
cmp
lret
stc
push
test
cld
sbb
cmp
popf
stos
xor
subl
mov
iret
xorb
cltd
push
std
or
jl
mov
in
shrl
mov
jo
mov
in
lods
and
enter
sbb
inc
scas
jmp
stc
adc
inc
push
incb
inc
movsb
daa
mov
out
push
adc
jb
mov
in
aad
cmp
or
and
mov
and
fisttps
and
outsl
addb
xchg
cmp
fsubrs
sub
jbe
adc
lcall
jne
leave
jae
sub
stos
sahf
les
cmp
mov
push
sbb
push
and
clc
push
xor
mov
cmp
outsl
pop
sti
xor
pop
push
push
sbbb
int3
nop
mov
sti
andb
inc
pop
addr16
in
pushf
pop
sbb
shll
xorb
hlt
jge
rcrb
push
or
mov
sub
and
cs
insl
cli
std
dec
and
mov
repz
shlb
ficomps
jge
xor
in
cli
mov
rcrl
out
xchg
cmpsl
test
in
fisubrs
mov
xchg
push
stc
dec
je
mov
fmulp
fldl
jnp
arpl
pop
inc
xchg
test
es
mov
hlt
shll
pushf
enter
std
test
push
adcl
mov
adc
int
adc
in
push
repz
dec
cmp
lret
shl
fisttpll
pusha
or
repz
pop
and
dec
jecxz
aas
xor
push
loopne
push
in
and
lcall
adc
stos
sbb
mov
mov
std
mov
inc
out
pop
popa
call
mov
jae
sub
pop
lret
fnsave
in
xchg
je
arpl
rorl
and
push
sbb
pusha
xlat
or
in
loopne
xlat
xchg
mov
clc
mov
out
mov
ss
into
data16
out
sub
fisttpll
push
or
push
push
push
jno
cmp
mov
mov
push
adc
xlat
call
lcall
and
jp
lds
rorb
jg
imul
fcmove
add
jnp
xor
cs
lretw
add
and
sbbl
xchg
in
aaa
jae
fs
jg
mov
iret
xchg
mov
imul
pushf
pop
sub
sub
int3
or
xchg
jne
call
sub
ror
and
push
daa
roll
sub
push
push
lahf
int3
aam
cmp
xlat
mov
mov
cmpsb
sti
imul
fwait
lods
cmp
cmp
jmp
sbb
mov
aam
push
mov
repz
mov
aam
jmp
shrb
dec
xchg
bound
sbb
cmc
loopne
pop
sub
stc
int3
pop
sub
pop
clc
xchg
add
dec
adc
pusha
pop
iret
mov
xor
mov
lock
sahf
dec
pop
in
rcll
pop
jmp
jp
mov
pusha
stos
lock
gs
cltd
jo
test
out
pop
test
or
and
adc
mov
sbb
insb
pop
or
inc
mov
scas
into
xchg
jle
pop
adc
xchg
and
xor
leave
clc
xor
push
test
xchg
sbb
movb
jae
ficomps
dec
xlat
cmp
es
jp
jno
push
or
push
pop
xor
bnd
shlb
jp
push
xorb
std
rcrb
lods
fiadds
outsl
jp
movsl
jns
cmp
adc
or
in
imulb
shrl
jb
mov
mov
popa
js
jb
jo
cmp
push
or
adc
frstor
enter
xchg
iret
insb
nop
dec
pop
arpl
mov
stos
stc
jecxz
sbb
shll
into
sahf
xor
lods
ficompl
test
rolb
fldcw
cmpsb
cmp
push
cmp
addr16
daa
faddl
inc
xor
inc
mov
sbb
arpl
push
sbb
mov
movsl
jno
mov
jno
push
dec
loope
cmp
loope,pn
js
cmp
dec
inc
adc
ss
out
fdivrp
xor
sbb
sbb
fdivp
xchg
enter
aam
xchg
std
fidivrs
into
flds
dec
insl
loop
fdivrs
pop
mov
andl
push
adc
lea
xchg
inc
xor
sarl
ficoml
lcall
sbb
ret
mov
adc
aam
mov
pushf
ret
enter
aas
and
js
lret
hlt
leave
mov
pop
pop
sahf
add
in
add
xor
mov
decb
xor
icebp
loop
xor
iret
aaa
das
cli
jmp
push
cmp
sahf
jo
mov
dec
adc
cmc
out
jle
pop
das
ds
dec
jae
cltd
aam
je
cmovb
mov
adc
dec
adc
sbb
mov
addl
sub
pop
pop
dec
sbb
jb
or
cmp
daa
and
xchg
add
movsl
int3
ss
call
xor
xor
rcll
mov
cmp
lahf
mov
jne
xchg
fucomi
repz
xor
xor
mov
icebp
mov
pop
jg
arpl
fcoml
or
push
adc
jne
mov
movsl
out
dec
into
enter
sub
xchg
repz
xchg
ret
jl
fmuls
mov
add
iret
pop
movsl
aaa
sub
pop
stos
add
loope
push
cmp
jnp
mov
js
or
bound
insl
fs
and
loop
insl
jbe
push
lahf
dec
insl
psllq
lcall
pushf
loope
clc
and
and
sahf
out
or
fisubrs
scas
sti
mov
dec
hlt
sbb
inc
fistpll
mov
xor
push
shll
lods
shr
adc
insb
imull
add
clc
or
popa
or
test
xorb
dec
inc
popf
fwait
fisubrs
ret
out
push
roll
and
dec
leave
test
xchg
or
adc
int
add
je
or
repz
jp
xchg
push
int
xor
sub
je
push
lahf
add
sbb
out
into
jbe
jnp
mov
xor
sub
cmp
add
mov
dec
test
popf
fnstenv
mov
dec
sub
jno
outsl
repz
andl
cli
push
or
adc
push
das
inc
insb
xor
jno
jge
xchg
inc
xchg
and
ss
pop
and
lret
or
ja
mov
cmpsl
push
mov
movsb
lock
jp
jmp
in
sub
dec
mov
push
cmp
scas
insb
push
or
rcrl
pushw
fcomi
jbe
jp
jo
xor
mov
push
adc
dec
jge
inc
in
push
jle
fbld
stos
sub
push
xchg
pop
sub
mov
inc
mov
xor
mov
push
mov
pop
repnz
sbb
add
paddq
inc
cld
ds
stc
add
fldl
sub
mov
or
or
mov
adc
or
data16
imul
xor
push
push
mov
test
ret
rorb
bound
hlt
push
dec
insb
movsb
ja
frstpm(287
test
xchg
cld
cltd
stc
cmp
lock
mov
fwait
inc
in
lahf
daa
sub
and
mov
jmp
cmp
mov
push
gs
aaa
pop
popf
xchg
push
insb
xor
lock
mov
jne
outsb
xchg
jp
inc
in
push
mov
outsb
xchg
add
dec
test
xchg
inc
mov
lret
push
test
stos
xor
test
repz
cwtl
shll
inc
lods
mov
cmpsl
pop
push
jmp
sti
inc
adc
jae
loope
xchg
mov
mov
push
addr16
mov
in
imull
ds
mov
mov
xchg
adc
sub
xor
jecxz
js
ret
dec
rcl
idivl
mov
subl
rclb
add
sbb
repnz
pop
faddp
fldt
nop
sub
loope
jl
pop
es
jns
rorb
mov
xchg
cmp
dec
or
pop
xchg
mov
movsl
out
jo
loope
jo
push
pop
fld
pop
negb
aad
push
loop
aad
ds
and
clc
test
jno
hlt
or
lahf
add
push
mov
xchg
pop
jmp
daa
sarb
push
pusha
or
data16
mov
cmp
adc
cmc
movsl
sub
push
out
xchg
daa
jg
inc
insb
push
cmp
ret
push
xchg
push
adcl
or
push
pop
dec
add
insl
pushf
adc
mov
xor
iret
mov
daa
adc
dec
mov
mov
sarl
mov
mov
push
push
int
adc
push
popf
adc
mov
xor
xor
mov
lahf
jecxz
jle
das
mov
and
sahf
pop
mov
enter
pop
mov
jno
iret
adc
stc
dec
mov
ja
enter
iret
cmpsb
push
mov
fsts
mov
dec
movsl
mov
pop
pushf
xor
stos
push
jae
movsb
add
es
lea
mov
jge
add
inc
fs
add
push
subb
add
push
and
pop
fstpl
pushf
fldl
std
mov
shl
ljmp
push
adc
stos
cmp
lds
push
mov
or
stc
mov
or
cld
and
and
fcmovne
mov
daa
and
in
jl
out
inc
bound
and
out
or
stc
pop
lcall
mov
cmpsb
push
and
push
adc
fcompl
add
gs
mov
jns
pop
jmp
insl
das
mov
loopne
fsubs
mov
mov
and
mov
jg
pop
popf
sub
or
lret
jnp
ret
sub
orl
sbb
int
cmp
gs
stos
aas
sbb
cltd
cmp
jmp
mov
jno
pop
rep
mov
push
add
mov
sbb
push
js
call
mov
arpl
or
popf
fiadds
popa
popa
popa
mov
aas
xchg
push
into
inc
and
pop
push
jne
and
ds
sub
lods
cs
rcrl
xor
fldenv
mov
sub
mov
jg
add
test
in
stc
icebp
fs
pop
pop
xor
aas
pop
adc
mov
outsl
add
ret
and
test
pop
pusha
xor
stos
loop
adc
pusha
arpl
xchg
pop
fwait
jbe
bound
in
adc
xchg
push
fdivr
pop
repnz
mov
andb
sub
inc
sub
int3
stos
adc
add
out
xor
inc
mov
cmp
scas
mov
daa
lcall
pop
aaa
sahf
push
adc
iret
and
pop
jne
into
jnp
mov
adc
aad
xchg
mov
lret
fscale
dec
mov
ret
int
push
pushf
and
in
popf
mov
cmp
jns
push
cmc
pop
push
movsb
xchg
les
cmp
outsl
stos
test
iret
sti
jle
xchg
rorb
idivb
cmp
or
jmp
mov
ds
jnp
ja
jmp
test
adc
cwtl
lods
incb
stc
push
hlt
nop
ret
gs
push
lcall
pop
lret
sbb
mov
mov
mov
add
repz
shr
pop
pusha
jge
popf
cmpsl
xchg
scas
xchg
xchg
arpl
inc
stc
mov
ja
clc
scas
or
movsl
cmp
hlt
in
mov
rorb
dec
xor
test
push
pop
in
dec
aas
sti
inc
adc
mov
pop
inc
mov
js
sub
push
movsb
xchg
sub
mov
ds
pop
push
dec
es
push
lret
ds
sbb
fldl
test
adc
insl
das
fcomps
sti
cmc
out
mov
xor
sbb
insl
fbld
jb
xchg
pushf
mov
cmpsb
sub
movsb
cmp
cmp
in
xchg
xor
fdivrs
jg
cmp
adc
in
push
ret
dec
dec
scas
outsb
movsl
stos
fndisi(8087
and
jb
cld
orl
scas
push
int3
jbe
aas
sbb
xchg
filds
cmp
cmp
aad
sbb
sbb
cs
xlat
rorb
out
iret
stos
pop
and
adc
jns
mov
insb
and
rcll
pop
shl
or
das
repnz
aas
stos
xor
sti
cmpsl
inc
adc
fstps
adc
aas
dec
sahf
les
mov
or
inc
xor
or
int
sub
pop
dec
subl
adc
popf
or
pop
xchg
adc
dec
popf
push
lret
xor
lcall
mov
mov
ss
dec
outsb
mov
jl
test
push
cmp
mov
pop
test
jae
dec
mov
jae
imulb
gs
sbb
into
cmp
xor
scas
js
inc
in
adc
mov
pop
test
scas
xlat
stos
mov
mov
cmp
mulb
imul
adc
inc
adc
imul
xchg
cmc
lods
test
leave
cmpsb
pop
cwtl
mov
fwait
scas
jp
adcl
lret
movsb
jno
ffree
aad
cmp
jp
inc
lods
xor
sub
fwait
aad
divl
std
movsl
fs
cmp
jge
imul
jb
xchg
dec
sub
lret
adc
or
push
mov
cli
in
out
test
sahf
test
xlat
out
test
fs
jge
inc
pop
je
popf
scas
cmpsl
or
jl
pushf
mov
mov
pop
push
push
jnp
push
loopne
test
xor
fimuls
out
aam
jge
pop
add
pop
clc
cmp
pop
jmp
test
sub
pop
pop
sub
call
lods
das
sbb
push
lds
dec
cmp
ja
sub
push
bound
xchg
out
enter
jb
imul
pop
push
ss
jge
xchg
nop
and
fsubl
out
or
jp
jb
insl
fstpl
mov
lea
sbb
nop
jae
shrl
lods
shll
call
loop
inc
or
test
fbld
mov
dec
fdivl
mov
add
pop
test
jmp
ss
imul
add
js
jecxz
inc
jns
inc
jl
popa
pop
data16
pop
popa
and
mov
inc
fldt
sub
mov
fdiv
cmp
ss
lods
int
sub
jbe
in
sbb
les
jne
mov
and
popf
pop
imul
sahf
daa
add
stos
mov
mov
mov
cmp
xor
jmp
imul
lcall
jb
sti
add
fcoml
or
xchg
loop
cmpsb
fdivrs
je
call
rorl
dec
xor
packsswb
lcall
in
in
xchg
mov
pop
scas
inc
sbb
xchg
mov
mov
lret
int
mov
imul
jle
xchg
js
xor
xchg
fdivrs
sub
imul
mov
fisubs
adc
adc
inc
mov
daa
push
bound
fnstcw
xor
or
stos
cmc
inc
in
or
ret
mov
mov
push
cmpsb
divl
mov
pop
xchg
loop
or
rolb
dec
xchg
loope
pop
outsl
mov
pop
pop
rcrb
mov
dec
xor
pop
add
cmp
sub
lock
cmpsl
fisttps
add
mov
lods
test
jo
jns
push
pushf
mov
mov
lahf
outsb
jecxz
lods
jnp
stos
lock
pop
or
push
mov
cmp
ja
cmp
fistpll
icebp
cmc
jb
pusha
ror
outsb
jle
jne
push
nop
iret
sbb
out
xor
mov
ret
or
jo
sbb
aaa
pop
fcomi
ljmp
test
movsb
lret
call
sub
into
pop
dec
out
lds
xchg
adc
lret
lcall
mov
jb
push
out
in
pop
cmp
jae
and
scas
sahf
push
cltd
leave
gs
jmp
out
cmpsb
pop
xor
mov
filds
inc
push
adc
scas
std
out
lds
and
xor
mov
in
sbb
jo
in
aad
add
mov
notb
fwait
lahf
mov
pusha
mov
sbb
and
mov
scas
sbb
daa
lea
cmp
mov
push
loope
sub
or
ret
push
scas
jmp
add
fbld
bound
shrb
into
subb
fstl
fidivs
cltd
adcl
push
adc
fnstsw
std
or
out
mov
push
iret
shlb
add
push
xchg
mov
jecxz
xor
incl
push
cmp
xchg
lods
inc
cld
pop
mov
scas
loope
leave
pop
mov
adc
mov
push
push
lods
and
sbb
adc
inc
jb
rolb
les
in
cmp
mov
jbe
sub
roll
xchg
mulb
sub
mov
out
mov
inc
leave
mull
push
push
push
lods
out
test
fsubrs
sub
push
xchg
adc
stc
hlt
fidivs
dec
sti
js
cmpsb
mov
faddl
push
xchg
jne
clc
inc
sub
mov
push
loop
mov
push
sub
mov
xor
test
stos
push
xchg
fistps
jmp
pop
add
test
scas
mov
cmp
cmp
cmp
mov
ret
xor
mov
mulb
lahf
xchg
daa
sub
or
xchg
out
ret
cmpsl
push
in
imul
out
lret
loope
jne
pop
pop
xchg
lahf
je
push
cmpl
repz
inc
mov
push
outsl
stos
stos
lahf
dec
dec
mov
ss
or
cs
lret
cmpsb
or
xchg
jne
pop
pop
pop
rcrb
imul
adc
icebp
jge
cltd
les
dec
push
mov
jmp
jge
lods
std
jo
push
ss
xchg
mov
cmpsb
add
sbb
push
mov
sti
adc
test
push
xor
aas
out
sbb
lcall
test
js
fxch
sbb
aaa
mov
nop
xchg
cli
out
xlat
mov
mov
adc
in
cmp
test
cmp
mov
pop
mov
and
dec
fucomip
test
pusha
sub
adc
dec
mov
adc
xor
cmpsb
scas
add
dec
rorb
repnz
adc
arpl
fsubs
js
cmp
inc
scas
shlb
or
add
lock
inc
add
inc
lret
push
inc
push
push
orl
fcoml
test
pop
jp
ljmp
mov
ficoml
and
mov
pop
dec
aad
subl
xchg
inc
xchg
cltd
sub
xor
jnp,pn
pop
data16
gs
pusha
jo
jecxz
adc
inc
dec
sub
sub
fsubs
lods
add
mov
cli
pop
mov
fildl
cmpsl
data16
add
sbb
xor
sar
daa
push
je
cmp
mov
add
jne
into
lods
adc
sti
popf
mov
dec
adc
jb
pop
sbb
jno
inc
jmp
pop
mov
and
xor
push
je
mov
push
ss
cmp
adc
mov
or
cmp
mov
mov
popa
iret
dec
sti
fcmovb
jecxz
cmp
mov
mov
mov
mulb
xchg
aam
outsb
dec
hlt
outsl
and
xor
cmpsl
push
aaa
dec
mov
testb
rcrl
orb
xchg
std
dec
jp
shr
jmp
mov
and
cli
loop
imul
xor
stc
mov
adc
inc
jno
out
mov
iret
sub
mov
iret
sub
xor
addl
hlt
das
cmp
xor
pop
adc
add
push
ret
adc
js
cs
outsb
mov
test
mov
jns
inc
adc
mov
push
sbb
jnp
stc
mov
mov
mov
mov
jbe
pushf
xchg
cli
or
aaa
in
pop
jle
fisttpll
testb
imul
dec
mov
leave
cmp
test
das
xchg
insl
js
ss
jb
push
pop
or
jo
data16
adc
jno
aaa
sbb
mov
mov
jle
pop
add
xor
ja
add
ret
ds
mov
cmp
sbb
or
aas
push
jg
mov
push
dec
mov
sub
rorb
xchg
adc
push
shll
mov
gs
int3
unpcklps
data16
mov
mov
and
jo
nop
sti
stc
dec
sahf
imul
or
ret
and
lods
cmp
dec
sub
pushf
mov
adc
sbb
and
addr16
gs
mov
xchg
mov
jmp
cmpsb
bound
xchg
mov
add
dec
cmp
pop
sbb
bound
sub
mov
mov
and
pop
divl
outsb
insb
inc
mov
jne
mov
repz
call
call
and
lret
jl
mov
call
pushf
hlt
loope
xchg
lret
aas
jmp
jmp
cmpsb
imul
push
pop
repnz
fsubrl
mov
std
roll
call
add
jge
stos
fnstcw
sub
scas
sub
xchg
outsl
andl
ret
inc
dec
pop
pop
loopne
ljmp
adc
sub
and
sbb
xor
mulb
xchg
jg
cmpsb
jl
out
rclb
dec
insb
mov
pop
dec
loop
cmp
sub
mov
push
pop
imul
stos
and
jmp
je
xor
test
aad
inc
leave
cmp
popl
mov
repnz
or
fs
fwait
mov
jbe
jmp
ja
sbb
pop
xor
lcall
sub
ret
aad
mov
subb
mov
jmp
mov
or
fwait
add
mov
inc
lret
xor
fstpt
sbbl
push
sbb
mov
mov
ret
aad
scas
mov
scas
mov
imul
or
in
mov
sbb
mov
sub
add
icebp
int
push
xor
add
imul
mov
sahf
outsl
xor
lcall
xchg
xchg
and
and
mov
js
or
pushf
xlat
mov
push
mov
dec
adc
pusha
mov
ds
xchg
cld
push
outsl
popf
and
and
cmp
xor
lea
data16
out
adc
jmp
int
iret
ja
pop
add
in
xorl
stos
imul
jbe
push
push
and
and
mov
sbb
pusha
jecxz
mov
adc
cmc
push
aas
jbe
sbb
mov
push
int3
mov
jno
pusha
push
int3
lret
push
leave
loop
xchg
pop
imul
fwait
je
repnz
mov
movsb
cmp
in
jb
pop
cmp
mov
xor
insl
fcmovne
subl
add
cs
xorl
jne
xor
mov
test
sbb
inc
pop
mov
cmp
xor
sbbl
pop
cmp
xor
push
out
popf
cwtl
or
mov
sub
je
inc
mov
test
inc
rolb
jbe
mov
pusha
fwait
pop
in
and
inc
cmp
push
cmpsl
aad
rcll
fsts
cli
pop
out
xlat
hlt
ds
adc
pop
mov
outsb
pushf
mov
fdivrl
inc
cmp
push
cmp
popf
loop
mov
pop
adc
pop
and
ficompl
jne
fidivrs
xor
xor
cmp
push
imul
mov
xor
bound
push
mov
enter
jmp
lock
push
jecxz
test
ffree
xor
xor
shrl
popa
inc
mov
insl
cld
mov
adc
icebp
mov
ja
sub
inc
mov
xchg
add
add
mov
xor
mov
pop
xchg
cmp
add
xchg
mov
inc
imull
popa
jno
push
into
fsubs
dec
les
push
es
push
fldt
jge
cmp
das
push
int
fmulp
jnp
in
dec
leave
jge
dec
push
mov
xchg
pop
mulb
mov
shlb
dec
lock
fdivrp
and
insl
push
popa
out
test
and
bndldx
or
out
mov
cs
lea
pop
pop
dec
int3
mov
movsl
xchg
outsl
xor
in
imul
and
repz
int3
mov
xchg
inc
into
mov
pop
in
fcomps
push
call
push
xor
aad
in
aam
xor
shrb
push
pop
shlb
sbb
fmul
icebp
or
or
or
arpl
pop
mov
mov
xor
mov
ss
adc
push
push
jmp
jne
or
push
mov
add
cld
push
nop
shrl
sbb
cmpsl
lods
pop
jae
adc
and
cltd
int
in
add
pop
dec
ss
repz
cli
or
or
and
mov
and
lods
jae
int
dec
rclb
or
push
add
jp
mov
push
es
sub
dec
sbb
icebp
out
fcoms
divl
inc
mov
ss
push
cwtl
add
xor
bound
ret
lret
pop
sub
add
lea
pop
mov
arpl
leave
outsl
fisubrl
out
push
mov
popl
test
pop
sarb
es
stos
adc
cmpsl
sub
pushf
jl
or
sbb
sbb
push
icebp
xchg
mov
aaa
xchg
add
mov
push
js
ss
gs
ret
out
dec
mov
cmp
xchg
jns
mov
mov
sarl
push
dec
xlat
mov
pslld
iret
mov
cmp
out
sbb
pop
jnp
sub
sbb
or
std
test
test
dec
xlat
sbb
pop
xchg
push
pusha
lret
adc
shrl
mov
outsb
sub
push
ds
or
loop
movsl
ljmp
rcll
jnp
fdiv
cltd
lret
lds
inc
or
jb
stos
and
lcall
push
push
jmp
mov
mov
sub
jmp
insb
push
in
jae
adc
popf
mov
ds
ret
cmp
xchg
scas
mov
movsl
jo
test
xchg
add
jo
repnz
sub
lcall
sbb
jno
mov
adc
arpl
pop
inc
inc
mov
sub
mul
insl
repz
cs
stos
fsubrs
sbb
adc
out
dec
pop
sub
and
mov
pop
dec
push
or
movsb
scas
adc
mov
fcmovnb
add
sbb
in
popf
js
lahf
add
icebp
jmp
push
adc
pop
test
mov
sub
add
push
xor
clc
sbb
test
imulb
int
fwait
iret
pop
dec
pop
out
push
inc
mov
lds
push
mov
mov
lret
pop
cmp
imul
sub
adc
add
mov
mov
cmpsb
inc
pop
push
test
sub
arpl
or
in
test
lock
xor
stos
movsl
cld
cmp
ljmp
lret
adc
cli
or
xchg
inc
inc
ss
cmpb
loopne
loope
jmp
scas
popa
scas
cli
rcr
and
xchg
ret
pop
xor
arpl
xor
shrl
stc
dec
cltd
addl
leave
push
cld
cli
cmp
jge
sbb
pop
mov
imul
dec
clc
ret
add
lcall
lea
mov
pop
addr16
sbb
hlt
flds
and
pusha
aad
sbb
sub
ficompl
pop
jg
leave
jmp
jge
xchg
pop
nop
jmp
sbb
loop
inc
and
mov
aas
std
data16
pop
sub
mov
xor
or
xchg
jecxz
xchg
mov
scas
mov
add
ret
sub
test
cmp
pop
fcomi
int
jmp
mov
clc
fisttpl
das
pusha
sub
adcb
sahf
inc
push
sahf
loopne,pt
call
js
mov
cs
mov
jns
xchg
idivb
mov
add
and
jp
popl
jnp
jae
aas
loop
std
cmp
inc
hlt
pop
dec
lcall
xor
fidivrl
jne
ss
or
sub
inc
aad
lret
sahf
subl
xlat
icebp
data16
fidivrs
int3
hlt
add
lahf
push
lret
jecxz
adc
mov
and
and
es
cmpl
int3
xchg
gs
jge
aam
sub
call
addl
mov
stc
push
test
add
imulb
lahf
loope
dec
dec
shll
xor
mov
push
lods
pop
xchg
je
and
push
orb
xor
inc
out
popf
adc
aam
cmp
pushf
cmp
das
js
push
mov
add
pop
add
mov
mov
imul
mov
mov
pusha
xchg
popa
hlt
xor
pop
lcall
hlt
pop
in
insl
jecxz
push
mov
sar
cmp
cmp
push
imul
push
pop
dec
cmp
mov
stos
clc
incb
inc
adc
popa
nop
jge
fidivs
popa
or
cmp
cmpsb
jl
daa
sbb
mov
inc
daa
into
xchg
pop
xacquire
jno
push
xlat
sub
sub
mov
fists
insl
fwait
popf
lret
pop
out
or
scas
test
mov
adc
pusha
xor
repz
divb
es
add
pop
sti
decb
fwait
sahf
jle
and
ljmp
fdivp
repnz
pushf
lahf
adc
js
and
insb
xor
xlat
and
adc
aas
mov
cmc
sbb
lods
incl
clc
sub
push
lods
xor
je
push
xor
lods
sti
push
lahf
sub
adcl
loopne
jl
jmp
out
pop
and
cs
xchg
test
jecxz
in
fs
xor
push
adc
pop
adc
out
fstpt
bound
aaa
sub
cs
mov
dec
subl
xor
cs
mov
and
pop
inc
cs
push
add
push
outsb
negl
add
mov
cmp
add
into
sbb
lcall
xchg
test
lret
mov
jne
xor
dec
dec
lds
mov
sbb
mov
mov
fimuls
push
jl
inc
lret
aas
cmp
loop
jg
pop
add
into
push
add
cmp
and
fs
es
repnz
mov
orl
cmp
xchg
adc
loope
or
out
adc
out
xchg
enter
bound
out
mov
div
cli
sub
je
cltd
mov
or
movsb
push
or
mov
xchg
push
add
rcrb
inc
fidivl
push
sbb
test
mov
iret
add
jo
or
adc
jne
outsl
fstpt
mov
aas
fwait
jp
mov
push
mov
or
insb
xor
xor
gs
and
jns
aaa
fndisi(8087
es
hlt
xchg
fldl
sub
in
jmp
inc
stos
or
mov
inc
adc
shlb
cli
adc
pop
pop
sar
or
mov
call
jo
or
and
inc
and
add
std
and
pop
ljmp
push
fists
orl
add
std
nop
xchg
cmp
lock
dec
stos
pusha
movsl
xchg
les
adc
sub
adc
xor
jge
sub
ja
in
lahf
jb
inc
outsl
mov
push
jg
arpl
cmp
cmp
out
cmp
dec
cs
jno
rcrl
mov
fs
call
roll
imul
sbb
ljmp
icebp
mov
mov
in
jle
addl
ja
dec
bound
sbb
jmp
inc
shll
sti
jno
push
jp
inc
cmp
icebp
inc
fdivrs
cld
adc
leave
mov
out
add
ret
repz
bound
stos
inc
stc
movsb
mov
add
mov
bound
movsb
aaa
sahf
sub
xor
fldt
xor
dec
cmpsb
loopne
jge
aad
mov
pop
enter
xchg
and
mov
mov
ret
vlddqu
pusha
sub
pop
sahf
jl
test
jnp
pusha
xchg
imul
jge
je
es
jecxz
sarb
aaa
jo
push
jg
pop
fisubrs
xor
pop
add
or
insb
sub
inc
cmc
xor
and
inc
inc
mov
je
sub
cmp
and
mov
jp
stc
cmpsb
xor
lock
stos
push
mov
or
lcall
icebp
push
lea
shlb
out
es
adc
push
mov
cs
cmp
lock
mov
icebp
push
mov
fists
std
pusha
dec
sarl
pop
mov
xchg
std
mov
cmp
lods
inc
out
imul
std
push
daa
push
jo
and
jb
cli
xlat
or
call
push
subl
iret
ss
push
lods
ljmp
and
fwait
or
outsl
xor
outsl
aad
xor
addr16
add
dec
loope
movl
fwait
or
call
js
mov
push
inc
push
orl
test
out
test
mov
mov
popf
sbb
pop
ret
jecxz
fs
jg
out
sub
std
iret
dec
sub
cmp
ss
dec
xchg
xlat
push
subb
ja
imul
arpl
inc
and
std
cltd
or
int3
lock
imul
sbb
dec
and
ud1
fldl
pop
in
into
sbb
sbb
add
ja
cmp
jmp
mov
lock
lock
das
and
pop
mov
jb
shrb
in
nop
mov
rorl
inc
cmp
fstpl
add
adc
out
test
int3
mov
into
xor
mov
xchg
and
mov
pop
cmp
inc
in
rolb
jno
dec
lcall
sbb
dec
push
pusha
push
jp
and
cmp
mov
jge
cmp
xchg
movsb
xor
jmp
es
lock
add
rcll
mov
pop
pop
xchg
das
adc
and
loope
stos
iret
mov
sbb
popa
sub
mov
lods
cli
mov
std
clc
inc
shll
or
lods
mov
dec
push
sub
push
ja
mov
pop
fldenv
dec
jle
lret
dec
stos
pop
mov
jle
xor
movsl
lods
ja
jge
or
iret
fisttps
dec
pop
lods
rorl
push
cld
or
sbb
into
lcall
out
bound
pop
cmpsl
sbb
dec
push
lods
xor
adc
mov
jbe
adc
ret
loope
nop
leave
pop
movsl
mov
lock
roll
jb
aad
mov
cmpsl
inc
into
dec
and
ror
int3
sbb
test
and
enter
sbbb
jmp
and
cmp
add
scas
adc
xorl
cmp
jno
sbb
jmp
inc
aaa
sbb
lds
bound
mov
push
xlat
or
jl
pushf
out
dec
mov
fisttpl
int3
aaa
ror
in
aaa
sbb
push
scas
or
arpl
jns
dec
lods
and
ss
add
cmpsl
std
mov
add
or
ficoms
mov
xchg
fucom
adc
or
std
inc
inc
or
xorb
ficoms
mov
mov
cltd
and
in
cmp
loopne
lahf
leave
aam
sub
fsubs
cmp
mov
ja
sbb
mov
push
hlt
enter
sti
mov
psrlw
sbb
push
sbb
sbbl
in
pushfw
sbb
icebp
push
cmc
insl
jbe
fnstsw
adc
mov
ret
sbb
sbb
cmp
pop
sub
mov
movb
outsl
sub
mov
xchg
cmp
adc
fnsave
sub
pop
jae
aad
mov
dec
out
stos
xchg
inc
mov
cmpsl
out
adc
movsl
cmp
dec
mov
mov
push
push
mov
div
nop
sub
cmp
adc
test
or
lret
dec
pop
lret
loopne
pop
pop
faddl
hlt
mov
bound
xlat
pop
pop
adc
inc
addr16
cmpsb
int
loopne
sbb
pop
cmp
leave
aas
mov
inc
adc
scas
jle,pt
sub
jne
sbb
out
jecxz
pop
inc
add
pusha
mov
in
cmpsl
icebp
lods
mov
jmp
mov
gs
std
idivb
sti
jle
faddl
jge
mov
inc
xchg
push
jg
sbb
push
bound
mov
inc
xchg
dec
mov
inc
push
pushf
push
out
jno
andl
hlt
mov
stos
in
mov
sub
jmp
xchg
fs
jo
fmul
nop
sub
lret
cmp
shl
fnstenv
rcrl
fisubrs
jmp
rcrl
dec
into
in
fisubs
mov
push
enter
rorb
movsb
sarl
fisubl
loope
cmp
aas
lods
in
repz
jmp
lods
push
test
movsb
mov
daa
mov
cld
or
or
daa
xchg
and
xchg
lods
sbb
mov
and
out
sbb
push
lret
sarb
cli
pop
lds
cmpb
loope
cmp
lds
ss
or
xor
cmp
or
fprem1
ror
jne
cli
stos
add
faddp
add
mov
mov
in
icebp
mov
push
push
adc
das
push
sahf
sarb
pmulhw
cmc
movsb
imul
push
or
mov
xchg
fs
and
dec
adc
ret
add
mov
mov
sbb
out
inc
push
fcmovb
inc
fnsave
jns
fdivrs
pop
subb
inc
jae
jae,pn
lods
mov
lret
int3
jo
adc
daa
test
in
push
push
rcrl
in
loopne
push
xchg
ss
mov
lds
aam
insb
fwait
cld
xchg
pusha
cmp
das
lds
xor
out
sahf
mov
push
jne
adc
push
dec
ja
or
fisttpl
and
out
pop
out
stos
jns
push
pusha
test
ss
push
push
jge
aad
dec
mov
out
inc
mov
jge
out
push
mov
or
cmp
inc
mov
imul
sbb
and
cmpsb
push
cs
movsb
xor
push
dec
inc
dec
add
fildll
lock
dec
js
cmpsl
ret
add
xchg
and
push
loop
mov
mov
and
jp
jp
jns
aas
mov
jg
lret
loope
or
ljmp
and
jecxz
push
dec
inc
sbb
and
mov
xchg
or
outsb
inc
inc
in
aad
mov
imul
mov
pop
xor
cmp
fidivl
out
setns
pop
push
in
inc
stos
lods
leave
sbb
adc
adc
pushf
jg
sub
std
movsl
lahf
jmp
lds
cmpsb
aaa
adc
sbb
mov
movsl
or
inc
add
invd
in
outsb
xor
lret
jecxz
mov
aaa
and
xchg
out
insb
jne
daa
jg
addr16
push
and
mov
je
push
xor
xor
out
xchg
dec
jns
sub
shlb
and
inc
jb
stos
andl
and
mov
xchg
xchg
repnz
je
in
fs
stos
add
xor
jns
cmpsb
fwait
in
daa
scas
xchg
add
addr16
nop
fwait
rorb
xor
mov
mov
pop
arpl
stos
push
clc
inc
loop
sbb
xchg
lret
pop
jnp
pop
lods
enter
or
xchg
je
call
sahf
mov
mov
int
cmp
jne
test
xor
xchg
test
pop
adc
leave
fisubl
or
push
gs
dec
sub
nop
ss
mulb
shl
add
sub
les
outsl
pop
mov
clc
ja
xor
jle
cmpsb
das
xchg
rcll
push
hlt
mov
idivb
leave
xorl
aas
adc
idivb
add
lds
stos
xchg
ds
imul
rcrl
mov
jne
add
mov
fmull
and
push
xchg
mov
sbb
sub
in
dec
ret
std
rorl
mov
andl
mov
and
fdivl
jp
lds
daa
xor
pop
xor
mov
push
cmp
sbb
sbb
test
lcall
les
mov
jnp
mov
mov
fisttps
sub
jge
pop
call
loope
aad
dec
cmpl
xchg
test
inc
sbb
push
in
or
fwait
pop
xchg
in
pop
subl
dec
dec
arpl
mov
jae
mov
adc
mov
rclb
rorl
sbb
loopne
pop
lret
ret
addr16
mov
cmpsb
or
xchg
out
jge
outsb
sub
gs
lcall
mov
push
inc
inc
or
loopne
das
test
mov
mov
fs
insb
fbld
or
adc
cli
loop
sbb
mov
push
push
cmp
mov
in
mov
out
pop
dec
loop
int3
mov
push
mov
cwtl
int
ret
loopne
lock
call
mov
enter
cltd
add
mov
enter
test
inc
jecxz
lods
xchg
call
push
popa
fdiv
popf
add
push
les
push
in
pop
lods
xadd
lcall
mov
mov
mov
mov
aam
outsb
fisubl
je
jo
pop
add
sbb
jno
and
sar
push
xchg
mov
adc
push
aam
popa
dec
or
xchg
aam
mov
insb
stos
mov
dec
xor
in
adc
fildl
roll
in
scas
mov
dec
mov
inc
pop
cwtl
sub
testl
bound
inc
fwait
pop
xchg
je
ficompl
mov
and
pop
push
push
gs
fcmovu
daa
cmp
test
call
aad
ljmp
push
lahf
xchg
adc
int3
fcoml
or
das
mov
sub
ret
sbb
ljmp
data16
adc
clc
outsb
repz
mov
and
ljmp
cmpsl
gs
jb
push
lock
aam
ljmp
or
repz
cmp
xor
je
repnz
push
adc
pop
sbb
insb
int
pop
sbb
in
sub
outsl
ljmp
fmuls
popa
pop
flds
xor
mov
pop
into
sti
push
push
in
push
aas
in
out
ret
pushf
mov
push
push
stc
adc
in
hlt
arpl
outsb
andb
sbb
mov
cmp
pop
add
cmp
jmp
push
movsl
sbb
push
lock
mov
pop
nop
das
movsb
sbb
add
lods
cli
or
or
cmp
repnz
xchg
xchg
mov
outsb
cwtl
ficomps
dec
xor
je
test
mov
mov
xor
mov
hlt
rdpmc
jne
mov
sbb
push
and
inc
jne
ret
dec
xchg
inc
out
push
hlt
nop
dec
sti
outsb
xchg
push
mov
xor
fisubrs
jns
jnp
or
mov
cmp
mov
xor
lds
fildl
and
insl
jae
pushf
mov
xor
loopne
pushw
adc
decl
rorb
incl
ja
fdivrs
adc
daa
mov
js
sbb
fmuls
push
jno
xchg
out
push
in
inc
xchg
stc
outsb
dec
aad
pushf
les
lods
out
xorb
loope
push
jge
ljmp
fistl
pop
mov
and
shrl
dec
mov
adc
xor
or
repnz
or
xchg
cltd
add
xchg
pop
lea
xchg
sub
shr
jbe
stc
ljmp
in
pop
lcall
xor
rcr
fimull
xchg
xor
or
cmpsb
xor
sbb
in
fldt
ja
pusha
push
and
ret
and
repnz
and
inc
sub
arpl
adc
loopne
insl
xlat
mov
jmp
mov
sbb
sti
mov
insl
pop
mov
les
add
add
in
jle
mov
pop
out
adc
pop
fwait
pop
lods
scas
movsl
or
xor
mov
xchg
jbe
out
xor
imul
xchg
imul
imul
xchg
daa
xor
cmp
mov
and
icebp
int
stc
mov
iret
pop
mov
mov
inc
mov
pop
scas
mov
sarl
movsb
xchg
rorb
inc
repz
push
scas
mov
imul
dec
inc
sbbb
mov
aaa
sbb
out
xchg
test
xor
in
jo
push
jle
insb
add
jle
inc
ficompl
or
or
pop
pop
rcrl
dec
pushf
ret
jle
xchg
inc
cmc
cmpsl
pavgb
arpl
stc
pop
jecxz
cmc
and
pop
mov
lahf
jmp
mov
out
adc
mov
bound
dec
fs
cmpl
mov
inc
xlat
inc
jae
jl
mov
cmp
addr16
dec
mov
fst
xchg
cli
ret
and
loopne
je
mov
jecxz
xor
dec
mov
stos
sub
test
out
repnz
fistl
mov
sbb
mov
jns
lods
fimull
mov
or
leave
insl
fiadds
push
xchg
cmc
pop
fistpll
or
and
mov
cmp
call
and
mov
ja
or
mov
pop
inc
jnp
test
adc
into
mov
mov
xor
in
mov
push
push
add
in
and
pusha
mov
xor
sarl
xchg
setbe
jae
jb
and
inc
movsb
pop
outsl
dec
test
adc
stos
push
mov
jge,pt
enter
outsb
cmc
mov
cmc
or
adc
repz
mov
sahf
nop
and
jg
lock
out
sub
mov
inc
int3
add
xor
lods
mov
and
js
in
inc
jnp
lret
stos
cmpsb
enter
cmp
mov
jg
push
xor
cmpsb
pop
rorl
jmp
sbb
mov
fstpt
mov
rcl
sub
loop
call
xor
dec
and
je
loope
xorl
lret
push
mov
cld
pop
stos
adc
shll
ret
mov
pop
dec
sbb
clc
and
roll
dec
and
or
or
insb
clc
sbb
sub
jae
xorl
jle
mov
mov
lret
xchg
mov
pop
xchg
pop
jno
dec
cmp
or
incb
dec
in
pop
inc
pusha
shl
mov
imul
out
loop
fcomps
xor
push
repz
mov
dec
sti
inc
pusha
inc
lock
pushf
lea
fcomps
aad
sub
adc
test
or
inc
xchg
popf
imul
sti
add
imul
cli
scas
stc
fidivl
sub
out
int3
daa
dec
mov
outsb
in
lahf
jmp
jo
fs
or
es
inc
lds
popa
cs
mov
repz
inc
clc
push
repnz
call
enter
push
mov
and
scas
cmp
out
cltd
or
dec
mov
loop
or
pop
lods
int3
aas
lea
rorl
enter
push
outsb
sbb
mov
xchg
loope
xchg
cwtl
jmp
sub
xchg
push
sti
insb
mov
fiadds
jbe
test
rclb
outsl
pop
inc
mov
and
loopne
orb
fwait
mov
popf
hlt
pop
mov
pop
adc
dec
imul
fisttpll
fldcw
add
fwait
push
sub
cmpsl
ret
dec
jae
faddl
push
inc
sti
mov
loope
xor
add
cmp
inc
aad
jo
jbe
rolb
pop
sbb
push
inc
xor
imul
mov
jns
out
and
aaa
mov
test
maskmovq
notl
mov
rolb
adc
iret
out
mov
movsb
enter
jl
lods
int3
push
cmc
pop
clc
ror
out
aaa
jbe
pop
pop
and
aaa
mov
or
push
adc
insb
std
or
sub
ljmpw
or
lret
mov
decl
loope
or
xchg
movsl
pop
xchg
sub
lret
add
inc
mov
jns
mov
fisttpll
cmp
fildl
and
sub
lret
data16
pop
nop
cmpsb
ds
jnp
data16
mov
movsb
inc
fidivs
mov
cmp
dec
mov
lahf
dec
call
dec
andb
mov
fwait
lods
lods
adc
fcmovb
imul
adc
repnz
sbb
mov
lock
mov
cmp
jg
mov
adc
ficoml
cld
lods
sub
enter
jecxz
popa
mov
add
or
shrb
push
lcall
je
imul
nop
mov
loope
popf
fimuls
or
stc
cld
lret
rcl
xor
and
push
dec
orb
sub
and
decl
cld
adc
sbb
jbe
fadds
out
loope
sbb
mov
mov
cmpsl
adc
out
ret
mov
arpl
insb
mov
stos
or
xchg
cmp
dec
pushf
hlt
mov
xchg
jb
cmp
nop
pusha
sub
push
sub
int
jg
jno
jg
jnp
adc
dec
in
fldcw
xchg
inc
jnp
and
movsb
pop
inc
lret
lcall
and
push
xchg
movsl
lods
mov
mov
and
lcall
mov
dec
lock
outsl
mov
sbb
shl
dec
popa
lock
push
bnd
mov
xor
lcall
fs
cmp
rclb
cmc
ss
jb
and
and
pop
add
push
mov
icebp
test
adc
mov
xor
ja
cmp
pop
call
in
xchg
add
sbb
stc
arpl
sbb
cmp
es
ret
push
jp
bound
mov
adc
lds
mov
mov
cmpb
popa
dec
xchg
sbb
ja
out
ljmp
icebp
arpl
popa
xor
outsl
test
leave
ljmp
xchg
xor
lret
push
lods
lods
daa
rorl
cmp
jmp
sahf
outsl
imul
shrl
in
mov
in
cmp
stc
cli
or
jns
push
pushl
mov
add
push
push
rol
mov
adc
xor
out
mov
outsb
loopne
push
xchg
sub
add
mov
pop
adc
jno
lea
mov
aad
sbb
cmc
das
dec
push
cs
shrd
stc
dec
and
bound
dec
push
nop
movsl
or
add
adc
sbb
or
mov
adc
negl
sbb
sub
insl
fxch
adc
lea
and
into
inc
clc
inc
loope
sti
ret
addr16
fdivrl
cmp
xor
fisubrs
cmp
sbb
pop
cmp
sbb
and
xchg
sub
in
in
mov
cmp
pop
mov
cmp
jne
add
sahf
aaa
mov
or
jmp
xchg
sub
in
xchg
aas
mov
js
cmc
je
fimuls
inc
mov
mov
mov
das
dec
jl
clc
dec
fs
jno
cmp
sub
sar
push
sub
out
stos
xchg
jg
mov
sbb
or
iret
orl
and
cmc
movl
addl
data16
iret
in
adc
mov
psubd
imul
adc
and
int3
push
sbb
xchg
jge
loopne
mov
jmp
add
and
mov
adc
out
repnz
repz
inc
imul
mov
fisttps
mov
mov
xchg
xchg
nop
xor
sub
cmp
into
leave
xchg
stos
in
lret
jecxz
xor
sub
add
dec
mov
adc
push
push
adc
inc
jmp
fs
into
enter
cmpsl
jb
in
repz
aaa
mov
jp
push
mov
inc
dec
and
add
dec
sbb
and
add
lock
std
inc
sbb
int3
mov
mov
mov
dec
mov
ret
mov
cwtl
sub
clc
mov
xchg
out
nop
mov
insl
out
fmuls
dec
leave
lds
jp
push
rolb
sbb
sbb
inc
stc
dec
cmp
pop
inc
pop
push
rcll
mov
xor
in
cmp
and
or
fs
lret
xchg
ljmp
mov
xor
rorl
sbb
lret
pop
xchg
insb
mov
jg
mov
push
xchg
call
pop
testb
xchg
bswap
mov
jg
leave
ja
movsb
add
jo
daa
sub
push
mov
xchg
sbb
and
push
incb
inc
xchg
ds
loope
and
jl
mov
popf
adc
xchg
inc
rorl
mov
cltd
add
jmp
add
or
cwtl
xchg
iret
lret
dec
xor
insb
roll
sbb
push
shl
mov
test
movsl
add
mov
test
fistl
mov
xor
jge
sti
out
xor
dec
les
nop
repnz
outsb
sahf
gs
out
movsb
dec
int3
dec
jecxz
push
sbb
xchg
inc
movswl
jns
pop
cmp
imul
jns
dec
mov
cltd
outsl
clc
lods
cmp
lahf
sahf
xchg
bound
outsl
inc
fs
mov
pop
add
dec
into
mov
xchg
xor
mull
inc
idivl
xor
movsb
fisubl
pop
dec
inc
add
sub
push
and
mov
popa
shlb
xchg
jns
mov
cld
rcll
or
data16
xchg
sub
sub
inc
push
ret
pop
fisttps
hlt
clc
mov
adc
and
imul
test
fdivrp
inc
mov
adc
stc
xor
or
lahf
nop
stos
es
adc
mov
ja
and
testl
xor
mov
cmp
aad
pushf
enter
into
and
bound
mov
jno
inc
sub
jmp
das
inc
jo
or
imul
movsb
add
call
les
cli
and
into
jno
add
jmp
mov
jg
mov
xor
sub
mov
and
mov
cmpsl
movsl
pop
movsl
aam
add
icebp
or
jne
pop
ret
push
jl
lcall
sarl
xchg
fsubs
ljmp
scas
push
lret
xorl
cmc
pop
adc
or
pop
mov
pop
mov
pop
imul
pop
cmp
rorl
lret
jl
out
rcll
cmc
mov
xor
and
jmp
cld
cmpsb
nop
je
in
pop
test
cld
cmp
sbb
scas
xor
cmpsb
cmp
loopne
bound
pop
mov
pop
push
fdiv
movsl
add
nop
inc
loope
aas
jmp
dec
arpl
sub
iret
mov
inc
xchg
or
pop
test
into
loope
cmp
rcll
pop
cmp
xchg
add
jecxz
sbb
pop
inc
call
inc
inc
lea
jo
sbb
push
cmp
mov
lock
add
ss
push
push
mov
xchg
xlat
fsubl
cmpsl
add
in
popa
loope
xchg
cmp
cli
mov
popa
cmpb
cwtl
faddp
fs
cmp
jg
aaa
insl
add
aaa
jae
js
leave
pop
clc
jle
xor
push
xor
xor
out
jno
lods
push
add
pop
negb
jmp
and
xchg
xchg
sbb
cmp
jae
and
adc
jmp
adc
inc
in
or
adc
in
add
jl
push
mov
fmuls
pop
out
lahf
cmp
or
clc
pop
mov
cmpsb
mov
or
aas
xchg
sub
mov
pop
xchg
ss
lds
sbb
js
mov
lret
pop
out
mov
sbb
dec
sbb
data16
inc
cld
ffree
rolb
inc
imul
outsb
outsb
jb
gs
arpl
movsl
push
sub
out
in
das
add
jmp
arpl
dec
pop
fdivrp
adc
rol
lods
frstor
mov
divb
cmp
rcl
pop
mov
outsl
fstl
xchg
rolb
divb
leave
xchg
push
mov
add
sub
js
out
addl
mov
movl
xchg
leave
jg
or
inc
push
stos
push
push
pop
test
xor
es
sbb
fwait
or
scas
aaa
or
bound
push
or
jne
mov
cmp
adc
je
push
out
xor
loopne
subb
daa
adc
push
pop
stc
dec
jbe
mov
aam
mov
mov
in
orb
pop
pop
mov
sbb
inc
jge
lret
decl
push
jo
xchg
mov
or
movsl
imul
out
pop
fcoml
mov
sub
xor
adc
xchg
inc
jno
pop
insl
pop
cmp
scas
xchg
mov
sti
dec
lods
sub
cmp
sub
adc
fldenv
cli
lods
out
jnp
push
imul
pop
inc
jg
cmp
fcmovbe
out
data16
sub
mov
idiv
add
push
ja
cli
fwait
loop
in
insl
sub
or
cwtl
add
gs
iret
fildll
pop
cld
cli
fwait
scas
push
inc
mov
xor
idivl
roll
stc
out
xchg
test
dec
lret
mov
cli
shl
ret
dec
mov
outsb
nop
imul
pusha
cltd
add
mov
sub
imul
pop
push
sub
mov
dec
xchg
push
rcr
sbb
test
lods
test
enter
xchg
in
xchg
lcall
push
cmp
aad
dec
lods
xchg
scas
aas
popa
add
mov
pop
pop
sbb
enter
or
and
popf
sbb
jmp
bound
or
cmc
out
sbb
inc
pop
lret
fdiv
rclb
push
ljmp
ret
mov
cmpsl
ret
ja
dec
fdivl
inc
cmc
incb
inc
adc
xchg
or
int
push
faddl
or
in
fdivrl
push
inc
adc
fistl
out
adc
xchg
jno
xor
jmp
sbb
movsl
push
jg
xchg
adc
adc
dec
lock
rclb
cmpsb
aaa
imul
nop
lods
sub
outsl
sub
jp
xchg
jmp
es
lahf
jbe
adc
push
popf
add
pop
aam
mov
and
xchg
leave
outsb
rcll
jg
cmpsl
vmovmskps
cld
dec
js
nop
and
adc
adc
mov
icebp
mov
insb
dec
daa
pop
jnp
cmp
jo
mov
mov
lret
cmc
jne
push
lods
xchg
pop
test
aaa
lret
test
pop
adc
and
jl
repz
inc
fs
mov
push
pop
adc
aad
cmp
dec
std
pop
jmp
clc
inc
sbb
push
push
mov
lcall
adc
and
push
pop
shlb
mov
sbb
aad
add
cmpsl
mov
and
push
rcr
xchg
mov
jbe
outsb
dec
xchg
js
or
sub
jecxz
mov
insb
enter
mov
jae
xorl
sbb
les
lock
push
int
pop
test
sahf
fdivrl
sarb
cmp
push
fdivrs
xor
cli
enter
int
cmp
pop
pushf
ret
mov
pop
fs
sti
in
fs
pop
jge
das
test
sbb
testb
js
jbe
xchg
xchg
cli
pop
dec
add
repnz
mov
out
call
lds
and
iret
fnstcw
pop
es
cmc
jne
iret
mov
jns
imul
dec
cmp
xchg
lahf
and
jae
push
add
jle
rcrb
pushf
push
arpl
dec
imul
pop
hlt
or
ja
or
jno
adc
sahf
popa
pop
int
aas
mov
movzbl
aas
sbb
hlt
mov
fsub
scas
cmp
mov
mov
pop
jl
out
dec
insb
sub
dec
cmc
lods
imul
mov
shlb
mov
scas
push
xchg
xor
jb
punpcklwd
out
stc
ja
pop
or
addr16
loop
cmp
sbb
mov
or
push
jg
or
cli
sbb
mov
push
pop
je
push
push
sub
test
push
dec
jnp
add
out
mov
popa
loopne
dec
push
pop
daa
and
imul
ljmp
push
in
adc
sbb
mov
in
sub
lcall
fisubrs
push
mov
sub
outsl
sbb
ljmp
orb
addr16
xchg
cld
stos
inc
and
xchg
testl
js
dec
mov
jp
ficoml
push
and
mov
mov
sbb
cmp
sub
pop
adc
js
jg
dec
jmp
mov
out
test
nop
int3
fnstcw
shll
arpl
cmp
or
pop
bound
jb
loop
and
or
xchg
dec
pusha
xor
sub
cs
icebp
cmpsl
cmc
push
insb
rcll
mov
test
enter
add
cs
fistps
push
dec
cwtl
inc
fisubrs
inc
xor
adc
leave
adc
push
xlat
adc
add
scas
mov
pushf
pop
decl
cmp
lea
inc
in
sti
in
cmpb
ffree
lea
dec
mov
xor
xchg
add
outsb
adc
imul
xlat
inc
test
mov
idivl
lcall
jb
push
mov
jno
les
sbb
and
or
sub
stc
xor
xchg
jmp
repz
or
andl
repz
pop
andb
cwtl
inc
push
decl
xor
lahf
xchg
or
popa
push
mov
outsl
inc
andb
mov
jl
sbbl
insb
in
sub
stos
mov
sahf
xorb
inc
jns
and
test
pop
mov
push
xor
jl
data16
inc
inc
push
mov
inc
mov
shll
jl
adc
mov
lcall
les
jb
push
dec
add
xchg
popa
xor
push
jno
pop
in
aas
std
jae
inc
jb
les
inc
sub
fsubr
sbb
insl
outsb
dec
adc
in
jno
in
sti
pop
mov
xchg
gs
fnsave
or
sbb
push
int
and
mov
lods
in
leave
aaa
es
ljmpw
dec
push
ret
mulw
push
push
dec
and
js
add
mov
jg
jnp
imull
mov
jne
lret
bound
fwait
push
add
data16
mov
fwait
sbb
popf
arpl
mov
loop
xor
mov
aad
add
rorb
lock
ret
jp
test
jg
pop
lcall
jp
mov
add
push
pop
or
call
mov
push
add
in
xchg
mov
mov
jl
iret
jge
xchg
cmpsb
cwtl
sub
inc
jg
sub
sbb
mov
mov
dec
hlt
sbb
dec
pusha
push
outsl
adc
jecxz
dec
adc
push
mov
in
cmpsb
stos
or
inc
cld
sbb
mov
xor
or
dec
push
loope
jle
roll
dec
inc
popa
xchg
roll
cli
cmp
mov
mov
rorl
test
xor
imul
fbld
neg
xor
push
shlb
cli
sub
enter
out
data16
jo
adc
pusha
push
out
add
fldl
lock
xor
pop
rclb
xchg
aam
fnstenv
call
ficoms
mov
xchg
mov
mov
adc
sub
mov
enter
movsb
or
shrl
mov
out
inc
mov
inc
fidivrs
insb
data16
lods
sub
insb
push
and
imul
pop
inc
jbe
imul
in
daa
pop
aam
andl
arpl
or
fnstsw
out
enter
pop
push
fdivs
jb
stc
xchg
adc
into
roll
mov
mov
test
addr16
adcb
sub
inc
adc
inc
nop
pop
test
pop
ds
ljmp
scas
hlt
jge
adc
sub
mov
mov
rolb
dec
shlb
mov
add
cmpb
into
ret
sub
adc
loope
adc
pop
shlb
call
call
pop
ljmp
push
shr
aad
jns
lods
sub
lret
lret
jp
stos
or
cli
std
sbb
iret
aaa
pop
shrl
shr
jno
push
add
pop
push
sbb
shlb
out
push
pop
imul
fdivrl
dec
rcl
test
sbb
outsb
and
push
pop
cltd
popf
stos
frstpm(287
adc
sub
mov
sub
or
cltd
lods
iret
xchg
add
fldt
push
pop
cmp
xchg
xchg
icebp
xor
jne
sbb
lahf
add
adc
jecxz
lcall
in
add
jecxz
adc
jne
jae
ljmp
sub
loope
jo
lds
out
push
pop
and
push
popf
mov
mov
and
jg
int
movsl
xor
push
mov
or
je
push
mov
cltd
inc
xchg
cld
dec
pop
icebp
mov
jno,pt
fwait
les
mov
push
and
push
mov
repnz
js
sbb
sbb
ds
lds
and
stc
xor
lret
dec
sbb
or
rolb
lock
in
decl
pop
push
add
fisttpll
cmp
sbb
pop
cli
aad
mov
sti
das
mov
lds
call
or
stos
jnp
mul
loop
scas
and
xchg
pop
sub
fnstsw
bound
push
mov
or
pop
movsl
dec
or
push
subl
and
fistpl
rcrl
fisttps
js
sub
mov
push
test
mov
daa
dec
push
mov
xchg
pop
adc
jp
pop
mov
add
pop
and
js
stc
push
pop
xchg
sti
jnp
dec
jge
sub
fimuls
fildll
mov
mov
dec
xchg
mov
dec
movsb
pop
jne
pop
mov
cld
scas
cld
mov
cmp
insb
stos
loope
mov
mov
rcl
xorl
rcrl
mov
jae
into
pusha
sahf
fsubrl
xchg
stos
xchg
cltd
js
xor
cmpsl
pop
lods
les
cld
fcmovnb
mov
cli
fs
add
mov
ret
dec
cmp
push
sti
fs
in
lods
testb
mov
mov
add
jae
cmp
stos
adc
sbb
inc
and
gs
mov
cmp
ret
xor
fsubp
mov
negb
lahf
into
popa
test
jno
mov
shr
dec
jg
push
insl
jb
stos
mov
aam
lret
jns
or
insb
test
fsubrl
das
adc
jg
fimull
and
cmc
mov
in
lret
adc
shll
adc
shll
mov
loopne
jno
cmpsl
xlat
scas
push
xchg
xchg
ret
pushf
pop
push
push
push
fidivl
aad
mov
ja
in
gs
call
jno
and
loop
icebp
jne
mov
mov
mov
test
sub
cmpsl
hlt
cs
mov
mov
mov
int
sub
nop
not
ret
xchg
xchg
neg
sbb
int
jb
sub
lock
insl
pop
cmp
fwait
ret
inc
sub
adc
add
aad
add
mov
push
lea
xchg
int
pop
mov
fistl
sahf
inc
adc
xchg
sub
or
mov
jle
mov
je
and
cmpsb
sbb
les
rclb
stc
pusha
mov
dec
lcall
lods
fucomip
icebp
mov
mov
nop
dec
inc
xor
xor
lods
push
and
ja
cmp
mov
mov
inc
push
iret
mov
xor
mov
arpl
ja
jl
cmp
mov
or
fsubrs
iret
inc
cmpl
add
xchg
iret
push
ja
mov
sbb
stos
rcll
ljmp
iret
jne
cmp
or
loopne
and
sti
add
repnz
in
dec
jle
int
sbb
ja
cli
into
cmpsl
inc
arpl
into
cmp
call
push
sbb
push
movsb
test
add
aas
xchg
mov
je
xor
iret
push
jo
or
push
xor
pop
fiaddl
xlat
fsubr
push
fisttpll
adc
fcom
bound
scas
pushf
lret
outsb
and
loopne
loope
mov
fiaddl
shl
mov
mov
repnz
xchg
addr16
ficoml
fdivl
xor
sub
jae
daa
mov
xchg
dec
jp
pop
mov
push
xor
stos
lahf
xchg
out
push
sub
imul
mov
stc
jle
sub
add
addr16
mov
rclb
sbb
jbe
cmp
cmc
pop
aaa
add
mov
scas
and
push
clc
inc
push
mov
and
inc
mov
movsb
aam
dec
jbe
adc
jns
push
mov
cmp
mov
sbb
scas
rclb
call
mov
loope
wrmsr
xchg
pop
and
pushf
jo
fbld
xchg
lds
data16
cmp
adc
jo
jge
add
inc
bound
mov
rcrl
popf
fldt
mov
js
cltd
xchg
leave
xor
dec
ficoml
popa
cli
dec
sub
sti
jg
nop
dec
xchg
push
and
inc
call
or
ss
faddl
fstpl
fstl
pop
xchg
das
push
pop
nop
pusha
popf
add
or
lret
jbe
push
incl
into
xchg
out
lcall
mov
lods
daa
imul
pop
or
les
add
ds
rol
in
mov
lea
mov
xchg
movb
cld
mov
xlat
imul
cltd
fcmovb
lock
mov
add
fisubs
fstpt
cmp
pop
and
aas
jge
ds
xlat
xor
aad
ljmp
lret
int3
loop,pn
or
fimuls
xlat
mov
gs
mov
not
sbb
add
push
or
jp
cmpsb
shlb
or
mov
sbb
insb
addb
int
scas
inc
mov
cmp
in
jnp
rorb
cmp
jno,pn
fistpll
push
pop
adc
inc
and
cmp
clc
mov
cmpsb
data16
sub
push
stos
mov
adc
mov
xchg
add
lret
int3
les
cmp
fwait
rcrl
divl
xchg
adc
mov
pusha
ds
jmp
popa
pop
adc
pop
loopne
xor
lahf
movl
cld
sti
mov
fcomi
cmp
push
jbe
and
rcrl
test
insb
xor
push
insl
mov
fwait
push
xchg
push
xor
jno
xchg
pop
push
daa
pop
mov
jns
or
stc
mov
inc
inc
cltd
and
pusha
test
arpl
cmp
sbb
inc
std
cwtl
cltd
pop
jge
into
hlt
mov
push
push
fdivrs
ss
mov
mov
int
js
imul
popf
int3
daa
cltd
push
sarb
xor
jp
or
adc
imul
outsb
in
popf
jne
fadd
jle
bound
scas
pop
sahf
aad
jno
cmpsl
jmp
dec
dec
jge
jbe
mov
pop
scas
push
stc
cmp
lods
je
hlt
cmp
fisttpll
pop
push
inc
in
pop
addr16
mov
sbb
mov
out
cmp
and
lods
mov
fstpl
push
xchg
fsubrs
or
fsts
mov
cmpsb
cmp
shl
addr16
scas
in
xchg
or
sub
sti
sbb
adc
cmp
fisttpl
out
mov
xor
in
cmpsb
std
icebp
in
mov
push
cmp
mov
dec
sub
rcl
mov
loope
xchg
mov
cmpsb
fstpt
cmp
mov
clc
jbe
into
cmpsl
cmpsb
xor
daa
fs
das
push
or
and
addr16
int3
mov
cltd
mov
or
xchg
push
pop
lret
mov
in
mov
nop
xchg
dec
fstpt
loope
rcl
dec
pop
ds
sbb
push
mov
test
icebp
push
int3
cld
jo
mov
mov
pop
or
mov
shrb
enterw
mov
push
mov
enter
mov
imul
adc
aad
dec
in
bound
xor
cmpsb
insl
aam
out
repz
xchg
jo
je
add
jb
push
sti
push
push
push
enter
xor
mov
dec
pop
mov
add
push
add
adc
sbb
mov
mov
lods
aad
add
jno
jno
or
xor
push
xor
or
dec
shrd
mov
xor
adc
inc
adc
adc
xchg
outsl
xor
inc
cmc
leave
adc
jno
sub
test
sub
push
xchg
jecxz
fldl
icebp
or
aaa
jo
stos
in
jae
pop
mov
xor
mov
pop
mov
cld
ds
cwtl
push
push
jb
dec
mov
pop
bsf
cltd
in
pop
inc
hlt
mov
adc
mov
shl
daa
add
fs
repnz
jns
ficomps
inc
fnstenv
push
push
loope
pop
nop
mov
add
cmpsl
adc
mov
mov
pop
je
inc
mov
mov
cli
std
aad
adc
aam
cmc
cmpsl
sub
dec
ficompl
negl
sub
leave
push
hlt
dec
pop
movb
shr
push
sub
aaa
sar
setbe
int
jecxz
iret
xor
stos
pop
imul
les
ret
xchg
pop
xchg
jne
ret
inc
fmull
push
fcompl
movsl
xchg
push
out
and
jg
arpl
das
sub
jbe
mov
test
sbb
mov
xchg
cmpsb
xchg
pop
aaa
xor
ficomps
int3
nop
loop
out
or
mov
outsb
sub
and
mov
mov
mov
insl
repnz
push
jns
dec
xchg
dec
into
mov
out
or
loopne
fiadds
xor
lcall
dec
inc
mov
repz
push
push
fbld
mov
lret
jg
les
sub
mov
mov
ja
jbe
rcr
int
mov
adc
outsl
add
mov
mov
or
scas
mov
mov
push
mov
mov
sub
loope
inc
int3
pop
adc
roll
mov
fwait
adc
or
addr16
pop
sub
mov
jbe
stos
cld
dec
and
cs
cltd
dec
mov
inc
mov
imul
ficomps
and
mov
sbb
jno
clc
inc
cmp
push
leave
xchg
dec
gs
push
dec
mov
xchg
in
movsl
test
xor
mov
lahf
jnp
push
mov
dec
sbb
cmp
in
jg
push
sti
inc
lea
dec
clc
js
int3
push
out
sbb
dec
cmp
add
pop
push
adc
dec
call
mov
mov
sti
pop
mov
push
aas
loopne
int3
mov
cmp
call
dec
dec
mov
inc
mov
mov
mov
jnp
mov
jge
push
arpl
xor
call
lcall
push
mov
sbb
push
sbb
push
call
int3
mov
jl
xchg
aas
and
mov
push
jns
and
into
push
pop
scas
and
dec
pop
jae
ljmp
mov
sti
and
or
mov
push
jb
dec
mov
inc
sbb
and
fidivrs
pop
pop
mov
mov
xor
popf
push
cmp
lahf
out
rcll
pusha
and
pushf
ljmp
add
repz
loop
mov
mov
std
sbb
xchg
mov
hlt
mov
decl
jae
lods
mov
xor
push
out
movsl
fwait
pop
stos
sahf
mov
xlat
xchg
or
push
and
ss
int
lret
aas
xlat
push
mov
arpl
test
movsl
pop
jecxz
movsl
xor
pop
imul
mov
stos
jno
dec
and
xor
mov
pop
sub
pop
and
popa
lret
add
sbb
inc
lret
das
ja
add
stos
mov
push
pop
leave
nop
adc
sbb
sub
push
xor
sub
je
push
test
mov
sbb
jmp
sbb
sub
push
lods
sbb
or
jle
rolb
nop
push
cmp
pop
pop
stos
test
ss
push
out
or
jg
aaa
shll
sub
cmc
lods
daa
pop
repz
dec
outsb
add
loop
rsm
lds
outsl
in
sti
or
pop
popf
mov
in
fwait
popf
arpl
movsl
pop
dec
cmpl
loope
arpl
movsb
cltd
add
cmpb
mov
mov
cmc
shr
es
adc
xchg
testl
dec
das
in
pushf
or
push
sahf
adc
add
js
jae
jnp
pop
push
out
adc
test
int3
jae
pop
push
pusha
mov
sbbl
sbb
push
dec
mov
lahf
sub
add
pshufw
daa
sbb
xor
scas
xor
test
jnp
inc
iret
imul
inc
inc
imul
in
push
movsl
inc
fnstcw
aam
push
sbb
push
xchg
push
pusha
pushf
daa
mov
cli
mov
icebp
lods
mov
push
aaa
aam
fisttps
sarl
dec
jmp
xchg
sub
inc
popa
popa
leave
insl
sub
addr16
test
imul
inc
sahf
or
imul
insb
and
pushf
je
pop
das
pop
jb
push
dec
sarl
addb
mov
sbb
mov
outsl
lcall
push
rcrl
jp
mov
push
and
in
inc
loop
push
mov
ret
arpl
sbb
jecxz
cmpsb
cmp
bound
dec
mov
add
cmc
jmp
adcl
xlat
insl
pop
mov
cmc
ficompl
cltd
hlt
xchg
cli
dec
mov
pop
fs
aad
pop
popa
cmpsl
mov
push
sbb
dec
sbb
and
inc
adcb
pop
mov
mov
out
jmp
rcl
ss
mov
inc
pop
and
call
test
or
dec
cmp
rolb
sbb
dec
ljmp
pop
pusha
dec
hlt
loopne
add
cmp
jle
cmp
xor
movsb
les
int3
hlt
hlt
mov
lahf
andb
mov
fiadds
sbb
sub
addr16
cwtl
jno
xchg
inc
or
or
dec
jp
in
scas
loope
ret
xlat
adc
pop
mov
adc
mov
push
adc
aas
xchg
xchg
test
sbb
loop
out
pop
sub
mov
jbe
and
jmp
ss
or
mov
mov
in
jmp
inc
testb
fbld
nop
adc
sub
outsb
pop
imul
cmp
popa
xchg
cmpl
inc
das
sti
neg
xor
sub
xchg
jo
push
and
loop
or
mov
std
lods
addr16
out
cmpsl
addr16
loopne
mov
dec
adc
test
cli
xchg
dec
adc
scas
push
sub
dec
jne
push
and
sbb
mov
add
aas
adc
cmpl
mov
push
mov
shl
in
xor
inc
popf
ficoms
fs
popl
or
test
in
stos
clc
into
cmp
dec
or
push
mov
ds
cld
inc
jbe
out
dec
or
sbb
and
and
pop
into
sahf
sti
mov
mov
xor
jecxz
imul
stos
pop
pop
xor
push
stos
push
sti
push
xchg
icebp
mov
cli
xchg
fstpt
movsb
imul
into
pop
mov
outsl
or
std
int3
fnsave
test
add
outsb
pop
sbb
idiv
xchg
cmp
pop
mov
xor
adc
xor
sarb
mov
and
add
xor
or
mov
push
pop
xchg
fldenv
pop
or
int
imul
xchg
roll
pusha
fcomi
int3
leave
xor
push
stc
xlat
lods
cld
mov
mov
in
xor
dec
xchg
xchg
jno
inc
hlt
jnp
add
shl
dec
push
aam
lods
mov
movsb
fcmovnu
lds
and
shlb
fcmovu
insl
mov
or
inc
lock
sbb
and
jb
jno
add
mov
push
adc
jg
jp
arpl
xchg
nop
mov
xchg
std
stos
lock
cmpsl
jb
adc
or
fnstsw
jmp
pop
inc
dec
insb
sub
iret
loopne
mov
test
sbb
adc
inc
negb
mov
push
mov
cmp
jmp
mov
fwait
inc
push
dec
cs
fstpl
jle
inc
pop
or
lock
movsl
fisttpl
lods
lods
call
mov
cmp
das
lods
rclb
repz
jbe
rcrb
mov
inc
add
push
cmpsl
adc
mov
cmpsb
push
adc
and
adc
xchg
lds
xor
lock
int3
push
pop
addl
mov
add
loopne
sahf
cmp
mov
jg
ss
push
mov
sbb
adc
inc
push
inc
fdivl
mov
andl
mov
aad
out
inc
xchg
xchg
xchg
add
sbb
inc
jecxz
sbb
pop
or
pusha
and
out
add
clc
stos
push
dec
mov
sbb
jb
stos
jbe
aas
push
negb
sbb
data16
daa
cli
jmp
addb
xchg
add
ss
xchg
inc
scas
xchg
js
cmp
enter
jbe
popa
add
mov
dec
shl
mov
push
lods
scas
jo
paddsb
push
rcr
sub
imul
pop
dec
mov
out
sbb
lret
push
aas
mov
fcompp
mov
jns
push
jno
icebp
pop
mov
dec
inc
add
jnp
fdivl
dec
sub
cli
xchg
fs
test
mov
les
cmp
fsubrp
inc
dec
inc
jge
or
sbb
pop
jp
daa
inc
fmuls
or
or
cmpsb
in
insl
das
or
add
iret
ror
mov
out
addr16
jnp
dec
lock
rclb
arpl
cmc
out
pop
mov
ret
loope
push
daa
inc
and
mov
shrb
scas
int3
dec
cld
pop
push
cmp
dec
xor
cmp
jl
jne
push
sbb
lcall
fs
inc
push
dec
hlt
cmpsb
cmpsb
mov
jp
fucomp
or
out
pop
cmpl
add
aad
inc
jl
adc
fstpt
push
add
push
or
jns
jecxz
push
aas
fisubs
inc
pop
sbb
xor
js
lret
test
fwait
pop
sub
jle
mov
mov
nop
imul
js
lret
rcl
dec
inc
std
lods
ljmp
fs
aas
cmp
fld
test
mov
ss
movsl
and
loope
pop
imul
or
jmp
lds
sbb
add
push
lods
enter
jmp
add
mov
mov
mov
fisubs
test
sbbl
dec
mov
dec
sti
jp
popf
sarb
std
aam
iret
xchg
cmp
decl
cmp
fwait
int3
xchg
sbb
in
insb
inc
fbld
adc
jnp
and
imul
and
pusha
sub
cli
mov
push
mov
sahf
sbb
and
push
jns
lahf
add
aas
sub
push
and
xor
add
pop
addl
es
sub
out
jb
or
push
lcall
push
pop
push
test
subb
out
outsb
xor
mov
xor
gs
and
imul
pop
add
dec
jo
ret
pop
fildl
dec
jmp
fwait
push
rclb
mov
cmp
xorl
int3
stc
ss
mov
jns
jg
jp
scas
loope
sbb
pop
or
pop
in
out
adc
stos
loop
push
rcll
cmp
xor
mov
inc
fwait
jg
mov
mov
call
sub
fdivrs
aaa
adc
test
ret
jecxz
adc
mov
jge
adc
mov
dec
rcr
mov
in
jg
add
test
jecxz
orb
orl
idiv
push
mov
xchg
rol
cmp
or
fnstenv
out
imul
adc
xchg
cmp
fisubs
push
push
loop
out
lahf
negl
pop
js
cmp
or
xchg
and
aas
ds
and
sub
jle
mov
out
ficomps
mov
ret
arpl
clc
nop
or
or
xchg
push
popf
repnz
add
fs
ret
hlt
mov
dec
pop
roll
inc
nop
push
in
sub
outsb
pop
cwtl
mov
into
jbe
daa
addr16
or
mov
mov
loop
insl
mov
add
sbbb
dec
inc
movsb
pop
xor
push
cmpsb
repz
iret
xor
push
and
add
xor
lret
in
push
mov
add
or
xchg
mov
out
cmp
test
mov
sub
repz
incl
or
cmc
subl
xor
mov
aaa
mov
jb
aad
leave
adc
sarl
jle
imul
push
push
test
lahf
dec
movzwl
addr16
jno
pop
push
in
mov
fisttps
and
adc
mov
ds
push
push
pop
cmp
jmp
into
jmp
push
mov
or
xchg
lcall
cmp
pop
or
ja
or
sbb
in
out
pop
hlt
cmp
int
lds
jae
xchg
fwait
sbb
scas
xchg
push
sub
loopne
push
dec
jmp
adc
pushf
xchg
out
adc
push
int3
jp
hlt
jecxz
jnp
icebp
outsl
push
outsb
scas
das
pop
inc
jns
sbb
in
and
pop
ficompl
sahf
mov
add
das
sub
stos
movsb
int
mov
xor
sub
sub
test
or
adc
xor
mov
jge
les
or
dec
pushf
mov
inc
or
push
in
stos
les
inc
mov
mov
js
inc
push
icebp
pop
std
popa
mov
inc
push
aam
mov
movsl
fadds
ret
or
mov
test
pop
movsb
fadd
pop
cmp
in
sub
out
loopne
dec
mov
or
dec
mov
lcall
stos
hlt
je
jns
xor
fstpl
sub
dec
ja
cmp
mov
js
out
das
cmp
push
inc
lock
cmp
lahf
cmp
arpl
inc
scas
mov
mov
mov
cmp
arpl
mov
mov
push
cld
jle
push
xchg
mull
sbb
and
iret
add
jle
xor
mov
xchg
xchg
sbb
xchg
arpl
cld
mov
xchg
mov
mov
cmp
imul
out
cmc
inc
mov
cld
mov
jmp
loop
outsl
cmpb
mull
lds
adc
repz
mov
imul
roll
out
cwtl
jb
leave
out
out
xchg
aad
xchg
shlb
mov
dec
mov
jle
mov
data16
hlt
push
xchg
jl
xor
sbb
jne
jmp
les
inc
pushf
cmp
cld
pusha
mov
push
movsl
add
data16
sarb
adc
adcb
pop
or
outsl
or
cli
pop
out
data16
nop
addr16
mov
dec
aam
xor
idivb
fcoml
push
je
scas
outsb
jle
cmp
mov
add
fmull
dec
inc
rcl
rorb
jecxz
xor
cld
and
and
jb
xlat
or
xor
ret
sub
xor
mov
mov
shll
adc
test
pop
dec
subl
mov
pop
jecxz
cmpsb
les
cmpsl
xchg
adc
mov
outsl
rclb
in
mov
hlt
or
mov
int3
pop
jae
xor
pop
data16
stos
lods
cmpsl
rclb
test
lcall
clc
call
int
std
out
or
pop
push
ss
gs
jno
sbb
or
cmpsl
scas
cwtl
inc
sub
and
jge
gs
movsl
imul
jbe
mov
mov
adc
xchg
iret
xchg
dec
xor
dec
push
in
and
ret
call
jmp
dec
stos
ret
push
out
ss
sbb
clc
adc
test
sub
push
sub
ret
iret
jb
cmp
cltd
xchg
sub
mov
stos
aad
rcr
fwait
arpl
mov
jecxz
push
xchg
lret
jno
and
leave
jge
int
sbb
into
or
mov
es
mov
nop
jmp
insl
xor
cwtl
push
push
daa
xor
and
mov
pop
into
aas
inc
sbb
xlat
scas
jnp
pop
sub
out
mov
subl
loopne
sub
ror
pop
dec
dec
xor
mov
out
hlt
es
mov
out
sub
clc
mov
call
inc
cmp
pusha
cmpsb
xor
sbb
or
ljmp
sub
leave
cmpsb
sub
xchg
rcr
aam
ret
out
or
mov
xchg
jns
xchg
sti
jns
enter
loopne
fists
movl
arpl
pop
mov
or
in
test
stos
test
mov
jge
outsb
outsl
js
mov
adc
inc
mov
rcrl
jle
mov
gs
hlt
inc
mov
lret
lods
cld
push
jo
jae
movd
jbe
add
jne
rol
lea
xchg
dec
sbb
push
cli
cli
xchg
or
inc
push
dec
sbb
lcall
inc
sub
jl
rorb
loopne
rclw
cld
icebp
outsl
sbb
sub
mov
cmpsb
scas
mov
outsb
xlat
mov
adc
jge
orb
jns
scas
inc
xchg
pop
shll
lret
test
pop
add
leave
lretw
subl
sbb
mov
movsb
xchg
sub
sub
scas
adc
inc
mov
xlat
adc
or
test
xchg
adc
loop
push
adc
or
dec
jg
popf
loopne
ret
mov
xchg
loope
out
out
dec
mov
pop
scas
lea
jns
fidivl
inc
and
mov
in
insl
jne
mov
negb
or
sbb
fwait
and
mov
lret
pop
bound
iret
xchg
mov
insl
ja
and
push
mov
cs
and
addr16
inc
in
and
std
mov
xchg
std
dec
jo
mov
stos
sbbb
je
aam
rcll
mov
scas
adc
enter
lret
pop
call
in
mov
clc
movsl
jle
sarb
mov
stc
adc
mov
cmp
xchg
add
pop
cmp
lock
ja
jmp
and
ss
pop
sbb
mov
and
dec
inc
mov
popf
pop
shl
das
dec
fiadds
jo
xchg
mov
pop
mov
shlb
outsb
pusha
fwait
dec
rcrb
mov
inc
popf
jle
inc
mov
fwait
je
out
push
call
mov
xchg
and
cmp
and
nop
icebp
jno
mov
xor
loop
cmp
push
adc
cmpsl
jle
cld
aam
out
inc
xor
push
ret
mov
scas
xor
test
into
or
push
jo
mov
or
mov
sub
jecxz
cs
xchg
dec
ret
mov
repnz
test
inc
cmp
xchg
pop
pop
pop
or
mov
iret
aaa
into
std
pop
adc
xor
call
pop
mov
jbe
mov
js
outsb
out
popa
add
mov
sub
inc
ljmp
xchg
push
movsl
cmp
jns
movsb
push
push
mov
addr16
das
adc
or
mov
pop
out
sahf
stos
inc
push
dec
sahf
mov
imul
xchg
and
les
repz
cltd
cmp
mov
mov
das
mov
fdivp
int3
les
cld
addr16
xor
lea
or
mov
sti
adc
or
sub
mov
gs
push
jae
shll
test
fcompl
jecxz
ret
in
dec
mov
pop
inc
xchg
fldenv
push
xor
les
cmp
hlt
out
push
push
lock
push
and
xor
imul
mov
inc
push
inc
lock
mov
adc
shl
jb
cwtl
mov
test
js
adc
sti
add
pusha
fsts
xchg
jmp
mov
fldcw
js
nop
push
popf
ds
sbb
test
xchg
push
push
orl
popa
push
mov
loop
push
ljmp
xor
mov
lock
cwtl
rcrb
push
inc
push
inc
repz
push
sbb
add
fstpl
mov
cmp
and
mov
int3
pop
and
jle
test
mov
insl
call
jl
adc
mov
jb
adc
aam
cmp
push
xchg
pop
sarb
xchg
stos
mov
pop
mov
sub
dec
inc
cmc
data16
mov
cmc
fistpll
or
xorl
jge
or
mov
fwait
jno
rcrl
mov
leave
xor
cmp
aaa
push
inc
adc
adc
imul
out
push
pop
int3
lods
mov
add
mov
jns
nop
mov
pop
sub
xchg
cmp
in
outsb
add
ds
hlt
adc
stos
dec
mov
fisubl
pushf
cmc
aaa
rolb
icebp
mov
lds
cli
sub
and
jbe
adc
fwait
push
nop
push
int3
inc
mov
xor
out
sub
ja
mov
psadbw
cmpsb
imul
rorb
cltd
inc
mov
and
aam
or
add
xor
mov
inc
roll
scas
mov
lea
mov
mov
hlt
mov
mov
stos
out
dec
insb
lcall
ficoml
mov
ss
pop
fsubl
nop
scas
jb
mov
sahf
dec
jno
push
jbe
int3
mov
test
in
repnz
imul
mov
outsl
xchg
popa
xor
fdivrp
lcall
push
adc
shlb
aaa
jge
fisttps
bound
xchg
scas
push
cld
push
stos
rol
test
dec
xchg
gs
mov
sbb
xchg
pop
and
stos
pop
jb
fdivl
ret
in
cmp
imul
mov
mov
dec
pop
jnp
es
push
into
inc
and
hlt
mov
nop
jecxz
mov
xor
addr16
faddp
or
icebp
insb
push
pop
test
and
popa
adc
or
fcompl
in
das
mull
outsb
les
gs
mov
loope
test
div
pusha
mov
in
lcall
stos
and
jecxz
mov
push
inc
inc
mov
shll
jle
aam
aad
jb
pop
xlat
xor
adc
inc
cmp
fwait
pop
gs
inc
stc
addr16
cmpsb
inc
mov
int3
pop
xor
gs
sbb
xor
mov
lods
or
and
add
mov
shrb
fxch
mov
dec
ror
mov
sub
xor
jge
push
jge
dec
push
and
push
push
pop
xchg
rclb
xchg
movsl
sub
out
dec
mov
pop
andb
sub
dec
mov
movsb
scas
std
mov
mov
adc
add
adc
fadd
pusha
sarl
cmp
outsb
pop
paddsw
sbb
and
inc
lret
mov
inc
cmp
adc
in
mov
sub
dec
xchg
sti
repz
insb
shl
aam
cmp
lock
shlb
mov
rcrl
cld
mov
add
xchg
out
adc
push
scas
sub
pusha
cwtl
push
addr16
les
jle
or
mov
cwtl
mov
push
adc
outsb
pop
inc
mov
ja
repz
xor
mov
rcrb
lock
out
addr16
sbb
lods
xor
push
addr16
rorb
out
pop
jmp
mov
das
jge
push
sbb
stc
cld
mov
inc
pop
pop
loop
enter
outsl
cld
push
daa
ror
push
test
imul
fldl
mov
push
negb
mov
pop
push
jle
clc
inc
incb
iret
je
sub
inc
sbb
cmpl
in
ss
test
mov
adc
cs
aaa
negl
sub
or
xor
mov
mov
mov
outsl
xchg
rclb
cmp
out
jmp
decb
hlt
jns
pop
push
sbb
add
repz
ret
cmp
cmp
cmp
mov
outsl
ds
lcall
add
or
aaa
sarl
lret
les
jg
mov
add
rcll
sti
ficoms
insb
hlt
xor
jbe
pop
shrb
in
push
mov
pop
sub
dec
sub
nop
jns
mov
jmp
ljmp
insl
cltd
mov
sub
test
lods
push
inc
lea
aad
inc
insb
clc
jp
sar
popa
xor
test
cmp
es
push
mov
insl
xchg
test
mov
push
push
sub
nop
clc
push
idivb
add
jle
inc
push
lods
jmp
xchg
es
std
mov
and
inc
jle
add
das
lret
std
adc
out
bound
fdivrl
hlt
sbb
push
mov
adc
call
dec
repnz
js
stos
leave
rcll
mov
add
sbbl
cmp
cmp
dec
pop
mov
mov
mov
jae
xor
xor
lods
btcl
adc
xchg
in
loopne
cli
inc
xchg
cs
test
or
add
dec
outsl
subb
fistps
jle
in
xchg
insl
pop
fwait
aas
jle
push
or
out
dec
loope
fs
ficoms
cmp
stos
cmovb
ret
aam
dec
cwtl
sub
subl
test
std
ja
sbb
sahf
xchg
sub
push
adc
push
aam
ret
sbb
push
or
test
orb
shlb
stos
adc
enter
mov
outsb
mov
movsl
rcrb
cmp
rol
idiv
dec
lea
pop
push
xor
xor
jb
clc
cmc
mov
test
push
mov
pop
sahf
stos
repnz
hlt
fidivrs
out
aas
or
push
testl
ret
push
inc
shll
das
and
loop
gs
mov
jl
pop
fsin
mov
mov
movb
addb
mov
adc
inc
sbb
sbb
enter
xor
shlb
test
cld
push
das
sarb
add
lock
stos
addr16
push
lds
cmp
js
xchg
gs
push
aaa
dec
mov
lret
jne
cmp
sub
inc
add
sbb
sti
arpl
scas
fbld
orb
test
out
lds
cmp
lret
adc
xchg
pop
out
jecxz
sti
cmp
test
fstpt
xchg
jno
mov
xchg
cmp
orl
xor
lcall
fstp
in
xor
data16
aas
cpuid
imul
test
xor
mov
gs
ss
stos
iret
jg
hlt
mov
addb
push
ja
pop
xlat
mov
scas
cs
push
ret
movsl
loopne
sbb
aam
add
popa
rclb
push
add
in
push
jmp
stc
test
pop
push
rclb
aad
scas
jecxz
lret
pusha
cmp
fidivl
shrl
cmp
mov
push
lods
mov
xchg
xor
in
sbb
pusha
pusha
popa
or
jb
push
cs
addl
jmp
or
push
push
pop
cmp
jecxz
and
shlb
mov
adc
es
loope
iret
xchg
into
sahf
fsubs
scas
and
lock
out
in
nop
leave
cmp
pop
daa
push
xor
fildl
cmp
and
mov
pop
rolb
fisubs
fstpl
jns
je
adc
call
adc
adc
and
std
mov
sbb
hlt
pop
fbstp
inc
dec
jns
push
or
mov
mov
stc
mulb
mov
mov
pop
ljmp
int3
out
data16
sub
sbb
out
es
xor
scas
xchg
mov
push
test
fstpl
test
dec
and
insb
or
rclb
ss
pushl
adc
dec
xor
adc
movsl
aad
pop
ss
lret
out
imul
push
popa
mov
aam
lahf
mov
test
fsubrs
insb
notl
cld
fsubs
out
lret
mov
in
pop
andb
pop
mov
or
and
int
add
repnz
out
dec
cmpl
stos
mov
xchg
mov
adc
sub
pop
bound
push
push
or
push
cwtl
je
jge
popa
stos
push
jne
and
lcall
addb
orl
push
sbb
sahf
mov
dec
sub
stos
ljmp
and
pop
clc
cmpsl
lret
sarb
xlat
out
dec
pop
sbb
pop
test
std
mulb
jecxz
leave
sbb
jmp
jno
pop
sahf
mov
xchg
repnz
mov
ficoms
or
sar
or
imul
popa
dec
push
inc
imul
add
mov
mov
sub
xchg
pop
loop
js
or
inc
sub
sub
shll
enter
rcr
push
std
mov
cmp
outsl
cmp
in
pop
out
pushf
mov
sbb
push
shll
jecxz
inc
in
adc
enter
jnp
aaa
push
push
pop
and
jg
dec
sub
es
scas
data16
movsb
mov
pop
aas
das
mov
stos
orb
jl
mov
lds
fdivp
in
fistpll
pop
dec
mov
jb
lods
int
or
loop
dec
sbb
pop
xchg
je
jle
push
and
out
das
adc
adc
adc
mov
pop
push
pop
mov
movl
or
mov
clc
jle
es
lahf
test
stos
mov
mov
loop
xchg
pop
pushf
repnz
or
adc
and
mov
fldcw
xchg
sbb
or
cmc
add
popa
fidivrl
sbb
outsb
cmp
out
cmpsl
sbb
cmp
out
sbbl
andb
repz
lret
mov
sti
and
inc
jl
lahf
add
rcrb
stos
xchg
mov
push
aam
adc
enter
xchg
imul
mov
jg
in
out
jnp
mov
fiaddl
pusha
sub
inc
add
mov
jns
jnp
das
dec
popf
stos
add
mov
xchg
add
lock
xor
pop
mov
int
mov
mov
mov
mov
in
adc
pop
aad
push
push
cmp
jns
cmp
push
sub
push
jbe
mov
pop
fidivs
call
notl
mov
movsb
daa
push
fimull
cmp
adc
cltd
xchg
lds
lds
xor
adc
popf
fs
es
sub
cld
mov
pop
insl
vmread
out
cs
bound
shlb
cmpsl
stos
aad
mov
out
xchg
mov
fucomip
jmp
faddl
push
push
div
mov
cwtl
ficoms
insl
pusha
jns
xor
dec
sbb
insb
jg
push
out
std
lds
arpl
decl
cmp
xchg
xor
push
pop
out
popf
hlt
test
dec
or
mov
xchg
inc
push
push
jbe
sbb
lods
mov
imulb
xlat
fsts
mov
shrb
mov
jns
pop
xchg
cwtl
iret
inc
cmpsb
lds
pusha
push
inc
xchg
add
inc
popa
and
push
lods
in
xchg
ljmp
push
sbb
clc
ljmp
movsb
psrlq
add
psraw
mov
xchg
adc
xchg
fmull
movswl
sbb
daa
in
and
int
cmp
lea
jp
or
and
fnsave
push
cltd
xchg
xor
mov
popf
dec
inc
inc
int
in
push
adc
or
dec
shlb
inc
or
inc
push
movb
or
inc
xor
xor
loop
lock
cltd
adc
in
sub
sbb
shl
scas
movl
jmp
mov
out
arpl
and
sar
mov
outsb
pop
sbb
aas
sbb
xlat
icebp
jbe
popa
add
pusha
dec
pushl
cmpsl
xor
and
aaa
and
jmp
fdivl
cmpsb
stos
mov
ss
cmpl
xlat
push
pop
push
push
sub
test
fadd
jb
cmp
fucomi
call
pop
lret
cmpsb
jecxz
into
cmc
sub
mov
add
js
cmp
sub
ja
mov
mov
loopne
test
or
adc
das
adc
test
mov
test
rcl
aad
xchg
pop
xlat
jnp
lahf
ret
int
cmpsl
dec
mov
or
or
jmp
cld
imul
das
add
iret
rolb
xlat
jg
into
mov
xchg
or
ret
fs
xchg
leave
mov
sub
mov
lods
adc
jb
inc
pop
dec
subb
lcall
pushf
and
push
repz
das
xor
push
cmp
in
mov
dec
and
loope
int
pop
dec
repnz
push
push
in
scas
xchg
sub
repz
pop
pop
add
test
ficomps
ret
fstps
inc
push
ret
imul
push
mov
ret
std
jno
mov
cmp
jg
xor
sub
jmp
dec
and
ret
div
cmpsb
dec
lock
jge
sub
lea
xor
pop
dec
clc
xor
cld
lods
iret
cmp
outsl
xchg
das
shlb
inc
leave
push
mov
and
shll
jbe
clc
push
dec
sarb
aad
or
rol
pop
jp
insb
pushf
xchg
lds
fmuls
mov
inc
cltd
stc
adc
push
roll
add
pop
sub
aam
mov
idivb
cld
stc
mov
popf
fiaddl
mov
cmpsl
iret
testl
xchg
xchg
cmc
test
or
cmp
hlt
out
mov
andb
out
pop
push
add
cs
popa
cwtl
pop
fcmovnbe
cmpsb
xchg
jl
xchg
sbb
xor
rclb
jne
loop
and
es
add
sbb
imul
ret
jnp
push
mov
hlt
jb
dec
movl
imul
rcrb
sti
movsl
dec
ds
repz
test
and
shlb
ds
adc
aaa
fdivs
bswap
ljmp
xchg
cli
or
jae
mov
cmp
lahf
xlat
int
popl
shrb
inc
inc
and
dec
pushf
mov
daa
in
sbb
xchg
dec
pop
fnstenv
adc
cmpsl
inc
rolb
je
out
and
out
movsb
pop
mov
inc
dec
scas
movsb
and
xor
xor
pop
dec
mov
push
cwtl
and
out
sbb
sbb
fistl
cltd
push
mov
andb
sarl
fistpl
lods
fidivs
aam
or
pop
into
std
jmp
out
scas
jae
mov
into
shrb
pop
jp,pn
nop
pop
sar
out
sub
out
jl
mov
add
or
jl
pop
cwtl
lock
sbbb
pop
push
mov
test
pushl
inc
mov
dec
adc
sarl
movsb
mov
push
xchg
mov
adc
hlt
out
mov
push
lds
cbtw
insb
jge
xor
mov
mov
test
insl
mov
pushf
movsb
add
decb
pusha
add
fisttps
divl
stos
or
leave
adc
inc
mov
push
sub
pcmpeqb
cmp
sub
int
mov
clc
jp
stc
shll
int
movsl
jae
popa
jne
shll
insb
mov
ret
or
loop
dec
aad
xchg
fwait
push
fldl
xchg
mov
fdivr
daa
test
and
pop
sbb
cmp
xchg
out
outsb
xchg
outsb
fsubrp
jp
jnp
mov
scas
pop
popa
mov
sbb
testb
adc
xchg
pusha
sti
arpl
inc
mov
fwait
inc
pop
sub
lret
cwtl
fldenv
ja
or
arpl
pop
rorl
in
dec
clc
hlt
cmp
ret
hlt
mov
test
mov
inc
ret
popa
cld
movsb
insl
rclb
mov
mov
add
imul
loop
cmpsl
stos
inc
xchg
in
cmp
icebp
xchg
andb
rclb
add
mov
push
inc
out
shl
mov
mov
mov
stos
loope
jbe
pop
mov
cmc
push
bound
mov
mov
xchg
mov
push
inc
movsl
test
jge
and
roll
sbb
lret
mov
mov
jp,pt
out
test
test
jp
inc
push
xchg
xchg
fnstenv
jb
mov
sbb
cmp
out
mov
into
and
andb
sarl
cmpsl
mov
pop
scas
sub
dec
mov
inc
aas
mov
mov
fs
insb
scas
pop
and
jmp
adc
std
jae
test
push
movsl
insb
mov
mov
add
shll
push
jne
sub
xchg
fwait
std
sbb
mov
das
push
inc
loop
sub
push
add
add
fidivl
stos
xchg
imul
cmp
lock
pop
int
push
rep
call
mov
fxch
into
mov
enter
inc
pop
mov
std
and
inc
das
push
movsl
ret
movsl
das
sti
leave
mov
stos
cld
ja
loope
sub
cmp
xchg
xchg
jnp
fs
push
ja
mov
add
inc
mov
inc
xchg
pop
mov
lret
in
dec
push
inc
add
pusha
mov
xor
cltd
movl
and
loop
sub
les
je
fimull
imul
mov
vrsqrtps
pop
fistl
gs
jo
xchg
xchg
mov
sbb
xchg
in
sbb
stos
jmp
mov
clc
call
lret
repz
mov
jmp
dec
cltd
fcoml
int3
add
gs
outsl
xor
sbb
and
add
popf
cs
jnp
aam
inc
je
pop
psubsb
add
pop
push
mov
xchg
pushf
inc
ja
adc
aam
xchg
push
gs
cmp
cmp
jmp
or
aaa
mov
call
rcrl
push
xor
pushf
inc
xlat
mov
xchg
xchg
stc
xchg
mov
and
lret
testb
dec
in
out
fwait
mov
and
jg
pop
pop
push
xlat
cmp
in
imul
movsb
test
popa
mov
mov
xchg
add
popa
mov
cmp
sub
out
jecxz
jecxz
iret
fcmovnbe
pusha
inc
mov
jmp
jmp
in
pop
sbbb
out
movsl
sahf
sarb
rcrb
lcall
ljmp
adc
push
ret
mov
dec
je
gs
cltd
add
dec
cmc
addl
fnstenv
mov
inc
cmp
cmp
inc
adc
lods
pop
fcmove
mov
mov
fnstenv
and
imul
ss
in
lret
lods
adc
mov
aam
or
stc
fidivrl
jecxz
jp
pop
xor
or
push
es
call
mov
mov
sub
in
repz
fcoms
outsl
subb
sbb
testl
jno
push
dec
push
or
aad
pop
jnp
pop
rolb
cmp
or
enter
jo
ljmp
mulb
cmp
mov
lahf
int
jb
pop
inc
mov
lods
or
push
xchg
movsb
and
inc
inc
or
jno
sti
rcrl
pop
dec
lods
xor
es
inc
jmp
cli
pop
inc
data16
mov
fs
outsb
popf
bound
outsb
xor
and
pop
sbb
fsubs
popa
loope
dec
jne
imul
dec
mov
sub
jp
std
pusha
sub
ds
mov
push
adc
jge
mov
adc
mov
ret
pop
adc
cmc
ds
sti
out
and
dec
jae
cmp
xor
sbb
mov
sbb
mov
jge
push
pop
cmp
mov
orb
fnsave
outsl
cld
lahf
dec
or
cmp
mov
inc
push
pop
push
push
aas
data16
aam
fsubs
fldl
mov
mov
loopne
sbb
out
xchg
loope
sbb
mov
mov
fsubrs
imul
data16
add
popa
sahf
cwtl
fs
inc
insb
push
out
jne
std
xchg
xor
xchg
iret
mov
mov
and
sub
cwtl
mov
push
stos
xchg
ljmp
sahf
xor
cmp
pminsw
dec
xchg
test
ret
push
out
dec
aas
xchg
pop
xor
fs
popl
loope
aam
jbe
or
pushf
inc
cmpsl
jne
hlt
enter
or
or
movsl
repz
mov
adcl
jmp
push
aas
or
sbb
xor
pop
mov
outsb
pop
data16
neg
fnstcw
sbb
cltd
cmp
cmp
cs
inc
call
cli
lcall
mov
inc
adc
sub
xor
xor
adc
das
xchg
xchg
nop
icebp
out
jnp
loope
cmp
sti
mov
cltd
decb
mov
and
xor
push
mov
xor
push
scas
rorl
sub
fidivrs
jecxz
test
and
mov
cwtl
out
shlb
cmp
cli
into
shll
and
shll
lods
rorb
mov
addr16
lds
push
jmp
adc
aam
aas
loopne
mov
sarl
dec
inc
add
jle
addr16
ljmp
lcall
mov
test
int3
mov
fadd
mov
icebp
lods
pop
cmp
jno
mov
shl
jae
inc
das
fnstsw
xchg
inc
hlt
mov
xor
push
add
out
pop
jo
imul
arpl
adc
dec
push
adc
xor
jbe
lds
pop
xor
pop
and
scas
inc
add
bound
and
bound
lret
sbb
jmp
insb
fucomp
fdivrs
xor
ss
jnp
xchg
pop
fcompl
movsl
or
call
out
pop
inc
mov
outsb
adc
insb
shrl
imul
aad
repz
ds
sti
lret
lods
mov
sub
decl
jo
or
sub
clc
add
xchg
inc
or
or
mov
adc
daa
inc
cmp
xchg
shr
aam
out
xchg
aaa
mov
je
adc
sti
pop
sub
pop
sbb
daa
mov
test
lock
cmc
mov
push
inc
out
scas
outsb
mov
mov
nop
dec
add
loopne
idiv
pusha
ljmp
add
imul
mov
mov
imul
shrl
xor
adcb
jp
stos
lret
sub
mov
cmp
mov
dec
lea
out
mov
fst
test
xchg
int
fistpl
mov
shll
in
inc
or
inc
inc
mov
mov
cs
inc
cmp
int
clc
push
clc
loop
stc
and
stos
pop
movsb
xchg
push
enter
dec
xchg
mov
dec
jno
sbb
push
enter
lahf
adc
pop
mov
les
mov
lods
sti
mov
ljmp
push
fimull
mov
mov
fcomp
je
fcomps
outsl
jnp
mov
pusha
sub
push
mov
adc
test
or
mov
les
shlb
data16
out
rol
pop
mov
fcmovb
aaa
pop
loopne
add
mov
jo
outsb
sti
push
and
out
or
mov
add
push
dec
popf
mov
sub
sar
fimuls
sbb
push
push
pop
cwtl
inc
jb
or
pusha
dec
dec
mov
or
insl
sbb
inc
or
insl
mov
mov
adc
incl
and
loope
xor
outsl
ror
sub
jb
and
insl
les
mov
mov
cmpsl
insb
dec
mov
sbb
inc
fdivr
and
fisubrs
mov
or
adc
popa
aaa
loopne
js
cmp
cli
das
jl
dec
test
je
test
mov
aam
inc
fstpt
sbb
dec
pop
lahf
sbb
cmp
push
aas
outsb
inc
cwtl
les
pop
xchg
pusha
test
lahf
xchg
dec
insl
mov
jno
pusha
mov
std
push
ljmp
dec
jle
sbb
mov
leave
and
pop
fucom
mov
xor
test
jmp
sbb
jnp
lock
inc
stos
lods
fiaddl
imul
and
jne
or
push
leave
mov
xchg
adc
sahf
lds
aas
scas
inc
push
jecxz
xor
add
sbbl
out
adc
mov
ja
dec
cmp
sbb
mov
add
mov
mov
mov
cwtl
xchg
xor
cs
les
ror
or
je
pop
sahf
or
sub
jg
add
es
mulb
mov
mov
repnz
ds
pusha
mov
pop
out
mov
dec
outsb
sub
test
mov
sti
mov
push
lcall
pop
mov
cli
call
arpl
clc
out
imul
insl
bound
inc
inc
cmpsb
push
test
bound
out
pop
xor
adc
sbb
jb
pop
std
ret
mov
pop
jo
xor
ret
es
jl
push
or
adc
push
loopne
popa
rorl
cmp
push
nop
xor
jb
int
enter
hlt
inc
xor
jg
mov
push
test
iret
push
xchg
cmp
fldl
mov
iret
inc
stc
inc
shl
in
filds
aaa
lret
sarl
cmpsb
cltd
bound
or
add
xor
push
fldcw
imul
jne
lret
aaa
adc
xor
mov
xor
jae
push
cld
sub
repz
mov
aaa
cmp
lret
mov
mov
fadds
xchg
testl
in
cmp
ror
lret
and
sahf
cmp
dec
jl
or
jecxz
hlt
mov
jae
pop
add
inc
aad
lods
xchg
stc
add
xchg
pop
xor
push
stos
lods
out
mov
xchg
fadd
and
or
iret
imul
xor
adc
adc
or
mov
pushf
shll
inc
push
leave
lea
mov
xor
jns
mov
movsl
add
mov
and
pop
stc
out
gs
leave
sub
push
jbe
fistps
lods
mov
or
loope
mov
stos
movsl
adc
jecxz
pop
mov
stos
and
movsb
or
pop
xor
pop
lahf
mov
mov
mov
data16
and
into
push
cli
in
or
les
aaa
in
icebp
es
inc
aam
addl
and
ror
inc
fcoms
test
fisubrs
mov
cmc
in
jg
dec
jo
lret
js
cmp
add
mov
inc
cmp
ss
mov
mov
cld
lods
jns
cs
test
mov
lret
jbe
mov
adc
cmp
mov
sub
aam
pushf
scas
xchg
add
andb
movsb
ret
pop
arpl
mov
xchg
cmp
repz
loop
fnstenv
cmpsl
or
add
aam
test
pop
push
mov
mov
ret
pop
jnp
leave
aad
out
dec
lea
ljmp
decb
lcall
ss
aam
inc
test
shlb
insb
fldl
stos
fcmovnu
jge
xchg
dec
dec
sub
pop
insl
add
add
mov
mov
jno
pushf
and
push
pop
inc
push
inc
and
add
and
xchg
add
jnp
jl
mov
inc
dec
push
ficomps
mov
or
or
enter
scas
cld
mov
pop
mov
nop
fimull
xchg
mov
int
dec
arpl
pop
rolb
inc
out
movsb
pop
stos
in
std
stos
loope
int
insl
xchg
iret
sub
cld
mov
negl
ror
mov
lahf
mov
lock
stc
icebp
jmp
xchg
repnz
xor
mov
faddl
mov
enter
and
enter
sbb
sub
sub
js
push
jl
jbe
sbb
inc
out
fildll
out
fldl
mov
jns
sub
je
push
mov
jb
cmp
jnp
call
xchg
push
mov
pop
or
cmp
push
fcomps
mov
sub
aam
testl
push
fbstp
dec
dec
ficomps
test
hlt
sti
fildll
add
mov
std
jmp
jmp
sbb
cmpsb
dec
fldt
adc
sbb
mov
ss
cmp
mov
push
fistpll
inc
dec
mov
lret
pushf
xor
ja
loop
mov
cmp
jg
inc
rcr
scas
shlb
int
and
mov
cltd
rcrl
ds
jmp
test
sar
shll
shl
xlat
add
jns
push
pop
in
mov
pop
and
bound
int
in
loop
dec
jne
imul
adc
repnz
sub
mov
and
gs
mov
cmp
popa
xchg
cmp
add
push
adc
call
jl
lret
jecxz
mov
and
and
push
inc
sarl
shl
test
adc
add
fwait
xor
jmp
sbb
inc
jmp
loope
inc
xlat
sbb
imul
je
or
mov
mov
inc
push
inc
mov
xchg
arpl
lcall
mov
movsl
pop
and
aas
fs
into
iret
ss
push
out
lods
lods
dec
mov
scas
popf
or
cmp
into
addb
push
inc
mov
fcompl
cmp
dec
stos
mov
test
insl
mov
cmc
mov
and
dec
and
out
rorl
cli
subl
nop
aad
fistpll
pop
xchg
xchg
out
fstpl
inc
ret
mov
bound
inc
xchg
fnstenv
sbbb
rorl
jno
mov
xchg
fsubs
or
add
mov
lret
cmp
and
dec
int
ror
jge
push
mov
inc
mov
pusha
shl
pop
out
push
outsb
out
int
addr16
shll
xchg
les
fistpll
xchg
jl
into
in
in
jmp
cltd
add
imul
in
pushf
mov
or
scas
fisttpll
xor
mov
or
push
aas
jo
xor
aaa
add
sti
fdivl
lahf
fstpl
ss
jmp
rorl
adc
imull
jmp
ds
xchg
ja
cli
xchg
sbb
rorb
out
fwait
jle
cld
nop
loope
add
lods
cmc
and
and
loope
pop
push
and
jb
lcall
scas
pop
push
sbb
mov
inc
mov
push
imul
fcmovb
jmp
mov
adc
push
pop
cltd
adc
dec
dec
pop
sub
xlat
fdivrl
and
jb
push
push
inc
lret
cmp
cmp
push
mov
adc
test
adc
xchg
pusha
dec
fidivl
jbe
xchg
stos
pop
adc
bound
or
add
and
test
fwait
mov
sub
or
or
xor
add
hlt
bound
xchg
push
sub
out
lea
and
and
shr
inc
push
aas
push
and
into
mov
out
loopne
mov
cmpsl
and
push
fldenv
jge
pushl
inc
leave
repnz
jno
popf
es
xchg
lods
inc
dec
push
sub
arpl
jne
sahf
out
dec
mov
jge
push
shr
xchg
push
pop
inc
or
jp
lea
pushl
mov
jae
mov
mov
dec
sub
movsb
mov
xchg
lods
add
stos
push
jb
fldcw
and
pushf
lret
sbb
mov
out
stos
shlb
mov
inc
outsb
scas
or
mov
out
xchg
dec
jnp
lahf
dec
outsb
adc
or
push
or
mov
movsl
mov
push
mov
jge
and
push
dec
inc
jb
adc
jns
adc
push
cld
cld
stos
aas
xchg
pmaxub
hlt
arpl
aaa
add
jno
shrl
jle
imull
sub
sahf
cld
mov
cld
fimull
jb
fbld
sbb
bound
sbb
inc
pop
adc
mov
jae
shlb
es
neg
sub
xchg
dec
cmp
scas
mov
jno
and
addr16
push
xor
movsb
xchg
movsb
aad
scas
bnd
mov
fsqrt
adc
das
adc
stos
out
dec
mov
jbe
push
mov
lcall
push
sbb
jns
ja
and
xor
jle
rclb
fadds
push
jne
stc
movsl
movsl
xchg
pop
sub
loop
daa
mov
xor
cmp
mov
stc
jb
inc
lret
xor
inc
lret
jae
scas
sub
mov
add
dec
in
jmp
std
and
nop
sti
jb
shll
or
sub
inc
jns
sbb
lods
mov
adc
mov
lahf
ret
sub
push
mov
jmp
aad
jecxz
aas
xchg
dec
xor
cmpsb
add
rcrl
lahf
fidivl
imul
outsb
lret
stc
sub
xor
mov
iret
pop
adcl
xchg
jp
mov
movsb
aam
subl
inc
outsl
push
cmp
pop
push
and
cmp
cmp
lcall
outsl
iret
incb
adc
xchg
inc
jecxz
pop
pushf
cmp
pop
or
sbb
and
hlt
out
out
cmp
imul
dec
push
scas
adc
xor
cmp
cli
cmp
fxch
sub
xchg
mov
sbb
xor
adc
test
pop
or
stos
sbb
xor
test
in
sahf
mov
or
cwtl
mov
xchg
sbb
popa
push
scas
jno
rclb
nop
sbb
xchg
lods
stos
dec
inc
arpl
cmpsl
jecxz
notb
pop
and
lahf
jge
or
in
lahf
jl
jmp
xchg
and
fdivrs
icebp
dec
cmc
inc
lods
xor
sarb
jle
pop
out
roll
sahf
sub
dec
and
or
mov
les
push
dec
mov
cmc
dec
int3
shr
jmp
jl
daa
cmp
cld
inc
cmp
pop
and
sub
stos
mov
dec
inc
cmp
jne
les
sub
cltd
int3
lods
test
push
mov
fcoms
jp
push
sbb
jp
mov
enter
add
push
jns
daa
stos
imul
ja
adc
lods
rcrl
int
mov
push
jmp
js
push
arpl
sarl
rol
arpl
movsb
sub
jg
int3
cs
cmpl
in
incb
stos
adc
inc
xchg
mov
xchg
dec
test
imull
subb
lret
dec
fisubs
sbb
je
mov
stos
fsubrp
cld
push
mov
mov
push
fdivs
pop
xchg
adc
mov
movsl
xchg
out
popa
inc
mov
and
arpl
scas
push
inc
rolb
cli
mov
add
or
push
push
and
popf
mov
cmpsb
mov
je
cs
inc
sub
jo
dec
in
cs
enter
iret
fs
and
adc
cltd
or
fildll
insl
and
loopne
ljmp
out
test
shrb
in
shll
pusha
and
ja
or
es
sti
cmovl
sbb
xor
xchg
sub
in
out
das
mov
pop
adc
ja
add
and
add
ret
roll
addl
pop
xchg
sbb
sahf
int
test
cmp
popa
pop
or
bound
mov
inc
fs
pop
hlt
or
shlb
test
and
imul
lahf
cmp
ret
fcomip
movsb
in
cmpsb
add
add
jl
out
lods
cmp
inc
pop
fiaddl
cmpsb
out
and
mov
push
jge
sbb
jle
adc
iret
sbb
xchg
xor
mov
sbb
push
outsb
test
jp
sub
xchg
jp
ja
ja
fmuls
shr
mov
adc
movsb
jle
loop
xchg
test
inc
rolb
ffreep
ret
cmp
and
fdivrl
shrb
mov
xor
xor
cmp
loop
icebp
divb
cmc
mov
mov
pop
sti
and
jo
or
mov
mov
dec
sbbb
mov
sub
mov
push
inc
cmp
pop
sti
pop
je
xor
or
adc
or
mov
mov
xor
test
adc
and
jp
mov
out
add
lds
xor
mov
mov
mov
dec
xchg
or
dec
xchg
cmp
pop
mov
call
sbb
pop
js
add
xchg
xchg
mov
movsb
popa
decb
rorl
mov
cltd
jne
sarl
arpl
jno
fists
jmp
pop
cmp
cmpb
cmpsb
push
cltd
fwait
push
into
mov
add
or
adcb
adc
xchg
loopne
pop
in
les
and
jmp
cmp
aaa
mov
ljmp
ljmp
push
mov
or
pop
lret
fbld
fcoml
int3
jno
dec
lret
push
lods
jmp
pop
adc
aas
pop
lahf
inc
adc
stos
pushf
push
loop
ds
data16
jg
xchg
popf
stos
add
dec
mov
loope
mov
repnz
mov
es
inc
inc
push
aas
bound
inc
imul
into
ret
loopne
aad
inc
es
rol
stos
jae
dec
adc
pop
sub
push
lcall
ja
pop
push
les
sub
push
in
pop
aad
xchg
in
cmp
aaa
inc
rcl
sti
xchg
push
out
movsl
andb
stos
and
aam
bound
adc
mov
jp
jb
rcrb
daa
dec
pop
mov
cmp
mov
imul
or
jbe
xchg
mov
add
ljmp
in
mov
insl
mov
orb
and
fildll
and
push
mov
adc
loopne
outsl
repz
cmovnp
and
clc
andl
mov
xchg
sbbl
jns
adc
fsubrl
and
ret
stos
cltd
push
adc
fimuls
fsubrs
push
imull
outsb
mov
mov
cmc
and
sub
mov
mov
lods
add
fnclex
loope
mov
pop
and
adc
cs
popa
test
imul
jnp
ja
scas
mov
inc
lahf
fwait
jns
jo
int3
dec
and
or
fisubs
jg
out
ret
pop
sub
xor
dec
push
cmp
pop
negl
stos
mov
shll
dec
add
cmc
add
aad
add
and
data16
adc
cmc
xchg
add
and
xchg
sbb
xchg
cltd
pop
xchg
addr16
mov
leave
and
sahf
xor
lea
imul
mov
stos
shrl
adc
addr16
adc
pop
adc
or
ret
sub
mov
iret
xchg
cmpsb
popf
cmp
stos
ss
dec
adc
add
mov
xchg
push
out
pusha
xchg
mov
fbstp
cmp
sahf
lea
adc
repz
jne
pushf
mov
cmp
subl
daa
scas
les
or
mov
mov
nop
sub
mov
ljmp
xchg
insb
outsb
or
dec
dec
stc
imul
dec
scas
jb,pn
jne
adc
adc
add
sbb
icebp
pop
pop
out
xchg
and
cmp
mov
ljmp
mov
inc
in
fs
popf
adc
add
mov
aas
pop
xor
add
lret
adc
mov
sub
aad
pop
mov
aas
sar
sbb
cwtl
adc
sub
fs
and
xchg
and
fwait
push
pop
insl
addr16
and
push
ja
enter
enter
cmp
sub
cs
xchg
push
lcall
les
sub
stos
imul
test
js
es
mov
test
sbb
sarl
fmull
test
push
stos
imul
push
mov
sbb
pop
push
fidivrl
jne
add
push
mov
mov
sbb
cmp
xchg
shl
sub
jp
push
jb
cwtl
and
rorb
xor
dec
pop
xor
and
pop
dec
add
jmp
fldl
xor
loopne
add
es
in
fwait
xor
jmp
sub
mov
enter
int
add
mov
push
rcl
sub
je
pop
je
mov
movsl
lahf
xor
pusha
mov
jmp
sub
mov
les
dec
sarl
or
testl
sbbl
lock
clc
or
jp
or
sti
fs
addr16
mov
sub
fs
mov
pop
stos
cmpsb
insb
out
jb
jge
pop
insl
pushf
lods
das
and
ret
stos
call
add
dec
ja
fdivs
in
in
in
xchg
pop
inc
aam
pushf
push
insl
xchg
adc
or
fbstp
add
faddl
in
sub
cmp
adc
ret
add
and
and
mov
xor
mov
lret
sbb
jne
in
jle
or
xor
lahf
popf
xchg
mov
cs
mov
in
sub
addl
cmpb
jo
iret
out
fiaddl
aad
push
addr16
add
arpl
add
push
cmp
pop
sub
push
xorl
push
adc
shrl
fnstsw
lcall
and
mov
adc
int3
jno
jns
dec
inc
jo
rolb
adc
mov
push
jl
cld
and
pop
xchg
les
sub
cwtl
ja
pop
dec
inc
or
les
adc
out
jno
pop
adc
into
fs
int
xor
push
js
in
in
xor
test
aam
push
leave
dec
jecxz
pop
pop
mov
scas
mov
pop
lods
mov
xchg
out
xchg
mov
mov
aad
test
outsl
dec
popa
cmp
mov
pop
mov
jmp
push
mov
les
loopne
mov
fisubl
imul
insb
lret
or
pop
mov
xor
outsl
mov
jno
ljmp
scas
cmovns
and
adc
movb
outsb
cmp
aas
push
lret
fstpl
hlt
dec
mov
mov
repnz
xorb
add
gs
xchg
mov
into
add
ljmp
jae
jbe
mov
fsubrs
xor
mov
cmpb
fdivl
jmp
nop
lods
mov
jge
call
inc
xchg
and
jns
test
in
es
ss
lahf
ja
push
or
fadds
adc
and
lcall
fdiv
adc
mov
repnz
test
pop
ds
cmp
cmpsb
pop
fcomip
xchg
data16
loopne
dec
mov
test
cli
xor
pop
cltd
push
mov
fsubr
and
dec
sbb
mov
dec
aam
mov
lcall
cmpb
and
jno
es
xor
test
shll
inc
and
pop
jmp
xchg
xchg
ja
inc
repz
sbb
xchg
pop
es
in
add
shlb
push
cmp
gs
push
das
pop
mov
add
insb
faddl
xor
dec
and
xor
mov
incl
jno
int
setg
xor
subb
popa
cld
andb
fstpl
dec
jnp
jno
pop
cmc
adc
or
dec
cwtl
mov
mov
aad
scas
ret
test
cmp
dec
pop
dec
jle
cmp
xchg
add
cmp
sbb
test
je
mov
mov
cmc
sub
mov
push
sub
sub
into
lcall
mov
cmp
je
bnd
jbe
mov
cwtl
mov
loopne
imul
lahf
test
jg
jae
vpsrlw
es
ljmp
stos
sarb
pmuludq
dec
sbb
iret
xchg
scas
jge
mov
or
int
sarl
pop
pop
adc
push
or
xor
lods
ret
f2xm1
mov
stos
jmp
lds
lods
test
lret
jbe
js
adc
lea
dec
cltd
ja
xlat
pop
mov
inc
jae
xor
jge
sub
pusha
fldcw
ret
cmp
orl
jbe
xor
or
shrl
sahf
ret
icebp
xchg
mov
mov
xchg
mov
adc
cmpl
jmp
in
mov
inc
cmp
mov
push
stos
jnp
adc
mov
in
nop
test
lcall
dec
sbbb
sub
adc
jbe
orb
js
lret
jb
rcll
xchg
fldcw
cmp
cmp
scas
cmp
arpl
adc
andb
mov
fs
add
sbb
mov
dec
repnz
sbb
clc
dec
dec
jbe
idivl
cmpsb
xor
push
push
dec
rcr
pop
dec
adc
lret
aad
add
cwtl
mov
int3
xchg
add
xor
shrb
in
xchg
pop
xchg
jo
cli
aas
lods
pusha
jo
mov
sub
xchg
ret
flds
dec
and
xchg
inc
push
adc
loopne
jne
notb
dec
adc
cs
icebp
stc
pop
lret
cld
inc
fmull
repz
sti
push
sti
mov
xlat
hlt
or
pop
xor
mov
mov
outsl
sahf
xchg
dec
sub
sbbb
dec
jns
push
push
ss
xor
adc
arpl
dec
cmc
bound
mov
adc
pop
inc
js
sbbl
mov
push
mov
xor
xchg
jnp
cmpsl
and
mov
cmp
fadds
fsubrl
jnp
jns
pop
sub
inc
pop
push
xchg
and
das
sti
pushf
mov
or
cmp
or
scas
aad
jo
ret
faddl
mov
scas
xor
pusha
das
jns
lea
popa
out
sbb
aad
aam
fwait
and
in
mov
lgs
fs
add
mov
ficoml
fwait
cld
in
pop
xchg
mov
fnsave
dec
add
fs
adc
frstor
cmp
fnstcw
cmp
jno
sbb
adc
mov
cmpsl
dec
inc
or
in
jmp
into
dec
jmp
outsb
xor
aaa
xchg
sub
fs
push
in
jl
cmc
out
stc
sub
out
ret
jne
mov
imul
jbe
pop
jmp
lahf
xchg
inc
jg
sbb
loope
xchg
inc
mov
jo
ror
gs
fbld
vpavgb
imul
mov
ds
leave
inc
add
pop
mov
iret
in
mov
xor
mov
mov
idivl
mov
mov
jl
sub
lret
fstpl
pop
pop
out
xor
cmp
inc
dec
pop
mov
inc
es
cmc
sbb
mov
leave
xchg
push
movsl
mov
lcall
test
push
outsl
mov
ret
hlt
xchg
lret
xchg
inc
leave
out
mov
jle
test
fwait
and
cmp
idivb
lods
mov
ss
push
or
sti
or
and
pusha
push
aam
arpl
sahf
sbb
xor
ja
add
pop
jl
pop
stos
jl
adc
mov
imul
repz
push
xor
pushf
push
push
mov
adc
pop
sarl
sbb
ret
lds
sbb
sbb
pop
or
out
cld
jge
imul
rcl
dec
push
cwtl
sahf
jne
ret
dec
xchg
idivb
mov
sub
mov
movsl
push
mov
add
and
sbb
dec
movsl
adc
sub
or
outsl
lods
mov
mov
push
inc
icebp
add
pusha
mov
mov
jno
sbb
orl
scas
stos
repz
adc
and
pusha
jo
popf
push
insb
js
xchg
mov
lret
dec
cwtl
dec
fcmovnu
lcall
pop
pusha
pop
pop
cmc
mov
sub
mov
pop
fs
shlb
xchg
iret
lret
imul
lds
or
cmp
add
and
push
lock
jle
xchg
iret
cmc
lock
pusha
ret
inc
jl
insb
xor
mov
cltd
ja
jbe
mov
cmpsl
pop
fstps
cmovno
inc
pop
push
into
push
push
dec
repnz
in
sti
xor
pop
shlb
fistpll
mov
push
xchg
into
loop
repnz
aad
sar
or
insb
xor
out
mov
lret
mov
cmp
loope
and
pop
sbb
cmpsb
or
dec
vpsubsw
inc
mov
ret
push
jecxz
and
dec
sub
cmpsb
mov
sarb
gs
ret
mov
dec
mov
aad
ds
test
xlat
lods
cmpsl
sbb
push
and
cmp
jae
mov
dec
mov
jo
adc
and
mov
subl
mov
inc
sub
inc
test
jbe
incl
xchg
mov
mov
ret
push
fdivrl
cld
jbe
adc
stos
push
push
aas
movsl
movsb
aad
cld
push
ds
icebp
enter
fdivr
mov
in
pop
jmp
lds
shr
outsl
sub
mov
xchg
jp
in
mov
inc
push
cmp
xor
xchg
jb
adc
divb
sbb
cltd
jmp
imul
fisubrs
pop
or
xor
orb
popf
cmp
add
ficompl
gs
test
int
add
mov
jle
imul
fstps
subl
loop
jecxz
xchg
iret
shlb
jnp
push
jle
call
insl
pusha
ds
cmpsb
sub
rclb
cwtl
loop
lods
int3
lcall
bound
out
push
aas
mov
cmp
sarl
xor
sbb
cmp
scas
xor
neg
or
outsl
and
divl
rcrb
sub
lods
iret
scas
sub
lock
push
repnz
cltd
jecxz
dec
or
sbb
inc
jne
inc
inc
mov
lods
int3
push
jecxz
loopne
ljmp
in
sbb
dec
inc
out
loope
jae
mov
rcr
push
and
xchg
sub
leave
adc
icebp
xor
inc
cmp
add
mov
or
and
imul
addr16
pop
sbb
rorb
push
lock
mov
sbb
xorb
pop
mov
icebp
loope
mov
lcall
ljmp
cmp
jecxz
mov
lret
mov
arpl
fwait
jns
cli
and
pop
xchg
je
mov
push
or
cmp
dec
xor
xor
cmp
pusha
sub
mov
push
decl
iret
and
inc
mov
xor
xchg
xlat
mov
push
imul
dec
mov
pop
jp
stc
jmp
mov
repz
cmp
push
cmp
push
dec
leave
add
fwait
stc
loopne
js
rclb
xor
adc
jmp
mov
cli
aaa
xor
divb
inc
jb
xchg
lahf
test
jmp
xchg
cmpb
loop
imul
loopne
cs
push
push
jo
fmul
push
jmp
ret
push
popf
mov
outsb
jmp
sub
lea
sahf
cmpsl
pop
add
mov
iret
dec
lret
cmp
fsubrs
inc
jle
in
or
sub
out
cmp
es
or
mov
xor
ret
test
cltd
mov
jl
mov
sub
mov
data16
rclb
adc
pop
out
fisttps
subl
add
and
push
adc
push
sbb
outsb
push
push
imul
dec
sub
xchg
lret
and
fisubrs
push
pop
andl
in
addb
add
bound
push
cmp
mov
pusha
xor
xchg
leave
jno
ss
or
lea
xlat
sub
cmp
jecxz
and
mov
sbb
fstpl
jns
lea
push
jne
mov
in
jle
sahf
mov
jle
mov
dec
jo
inc
pop
adc
sar
jl
jno
ret
mov
loopne
jl
push
adc
lahf
cmp
pop
gs
lea
movsl
jp
lock
sar
and
inc
fs
sti
or
push
sub
nop
inc
movsb
dec
int3
mov
pop
cld
and
std
push
mov
je
pop
sar
fcmovbe
fimuls
test
shlb
imul
data16
ret
add
out
push
clc
andb
mov
lods
jno
hlt
popa
popa
and
or
in
ret
jno
insl
lods
cmp
cltd
adc
jecxz
sbb
jns
imul
cmp
cmc
call
sahf
push
sub
cmp
mov
dec
daa
mov
ja
not
decb
sub
sub
sub
popf
sub
outsl
test
mov
enter
and
cmp
leave
sbb
mov
rol
pop
inc
fsts
xchg
popf
aam
imul
hlt
rcl
mov
cwtl
cmc
shrl
push
xchg
lods
and
jns
and
push
ds
xchg
xchg
and
mov
out
cmp
leave
pop
lret
jge
pusha
lods
es
lret
rcll
inc
out
lock
cld
jne
jg
pop
je
mov
sub
or
cmp
or
sbb
scas
xchg
mov
pop
repz
fwait
test
sarb
adc
mov
or
mov
sbb
fisubs
mov
or
and
repz
dec
pop
fdivrl
push
andb
insl
pop
sub
hlt
lock
inc
adc
stos
xor
mov
xorl
in
jle
or
arpl
cld
aad
jp
fmull
ss
rolb
xchg
mov
cmp
movsl
packssdw
mov
stos
inc
push
xchg
and
dec
cltd
bound
push
xor
loop
pop
jecxz
inc
fs
rep
lret
sahf
cwtl
inc
xor
dec
ret
xor
jb
or
movsl
test
jns
leave
jp
adc
push
dec
cwtl
or
add
add
call
out
insb
sbb
pop
jne
sbb
loope
cmp
adc
dec
scas
mov
inc
push
cmpsb
jbe
push
imul
sub
scas
mov
cltd
xchg
sub
cmc
mov
cmp
je
inc
imul
and
pop
es
out
arpl
xor
mov
mov
xchg
jecxz
data16
nop
or
xchg
sbb
mov
ja
cmp
mov
xchg
cmp
sbbl
lcall
push
mov
in
jne
lahf
push
mul
test
aas
bound
pop
shll
and
pushl
test
push
lods
aas
repz
arpl
dec
mov
push
scas
jbe
adc
adc
xor
or
call
inc
xor
inc
sbb
adc
mov
lahf
out
push
testl
add
pop
loope
sub
mov
sub
jp
repz
add
sahf
in
jp
ret
adc
mov
or
adc
xchg
dec
mov
sub
cmp
sahf
sub
in
cmpsb
inc
movsb
and
jno
lcall
pop
push
cs
sbbl
repz
insb
jno
mov
adc
or
mov
add
jecxz
xor
mov
fwait
jg
rclb
clc
fwait
movsb
adc
in
leave
outsl
idivb
aad
xchg
jg
sti
jecxz
test
xor
cmp
cli
push
and
lahf
push
and
jge
in
iret
pushl
sub
pop
rcl
mov
int
mov
insl
lret
popl
pop
sbb
leave
xchg
mov
or
sbb
jnp
mov
mov
out
and
pusha
and
in
out
mov
adc
sbb
lock
int
adc
fsubs
dec
fisubrl
aaa
hlt
imul
xor
jnp
sub
sbb
lahf
cwtl
mov
mov
or
cmp
in
xchg
rcll
icebp
aad
fmull
jmp
hlt
in
mov
lret
and
add
xchg
add
out
jo
dec
jg
fsubrp
mov
addb
in
xor
push
outsl
dec
cmp
inc
dec
mov
es
jecxz
jns
push
cwtl
sbb
in
test
nop
out
daa
dec
push
xchg
das
pushf
in
xchg
call
push
cld
outsl
mov
pop
mov
jge
shrl
mov
mov
inc
sub
inc
sub
sbb
nop
loopne
mov
mov
addr16
insl
les
xchg
sub
and
sub
hlt
popf
sti
scas
xchg
bound
inc
divb
data16
xchg
sbb
mov
lods
mov
outsb
out
sbb
stos
idiv
xor
adc
ret
cmp
jno
xchg
in
xchg
fsubrs
enter
mov
jl
aaa
sub
pop
cltd
dec
ja
xchg
js
jno
ljmp
mov
lret
add
lods
sbb
nop
imul
imul
data16
and
cmpb
dec
xor
into
pushf
or
rcl
sti
jno
mov
xchg
pop
lret
or
int3
jg
sbb
and
stos
clc
leave
jl
fdivl
jge
and
jno
mov
pop
out
jne
xchg
inc
add
gs
and
cli
cmpsb
push
push
jge
scas
out
ja
sub
cmp
pop
rorb
addb
mov
sti
dec
aas
cmp
push
lcall
mov
cmp
insl
rcrl
jbe
insl
sub
xor
test
pop
push
aad
jecxz
aas
out
dec
shl
js
adc
mov
and
rcr
fstl
shr
push
cmp
xor
in
popa
cmpsl
lahf
lds
shrl
pop
mov
les
cmp
sbb
pop
jns
sti
mov
cltd
outsb
xchg
cltd
shl
es
xchg
out
push
cs
sbb
adc
icebp
cli
inc
and
cmp
outsb
mov
dec
and
dec
ss
lret
cmp
rcrl
in
jg
mov
scas
xchg
test
mov
and
push
fnsave
jmp
mov
push
mov
sahf
lock
iret
test
jl
push
push
jns
lcall
push
xor
insl
cmp
mov
andb
inc
xlat
test
fdivrs
mov
pop
jae
icebp
push
pop
int
stos
cwtl
xchg
adc
jnp
es
lods
or
shll
das
bound
test
fisubs
rcrl
xchg
sbb
xor
add
lcall
mov
lcall
or
jmp
jne
les
jo
ret
push
movsb
add
nop
xchg
popf
cs
xchg
ds
inc
cmp
inc
movsl
leave
dec
insl
xor
scas
xor
movsl
scas
outsb
mov
xor
xchg
pop
sbbb
outsb
mov
scas
in
adc
cmp
push
push
cld
push
les
cwtl
aad
sub
stos
mov
aas
mov
jp
mov
das
jne
pusha
xchg
push
cwtl
or
sub
dec
xchg
mov
fisttpll
jb
mov
mov
inc
or
shrd
mov
inc
jmp
or
push
mov
insb
je
jg
inc
int3
sub
dec
xlat
mov
gs
mov
clc
and
ljmp
jb
jne
rcl
jae
dec
out
pushl
popf
jbe
mov
pusha
inc
sbb
mov
xor
in
or
mov
and
ss
xchg
push
push
dec
lret
out
dec
dec
cmpb
sbb
cltd
sti
push
mov
cli
rorl
xchg
cmc
xchg
sbb
data16
push
arpl
into
cwtl
jne
add
aad
leave
sub
sbb
xchg
movntq
out
scas
add
mov
push
out
jne
ret
mov
imul
clc
sbbb
clc
fstl
push
jmp
int
sbb
ret
icebp
out
mov
xchg
xor
lcall
pop
jg
popa
pop
cli
mov
lcall
sub
bound
or
fcompl
push
fcmove
jmp
adcb
call
int
out
inc
loopne
sub
pop
or
subl
rol
das
jae
addr16
aad
cmpsb
push
inc
pop
jnp
jae
cwtl
movb
pop
sbb
mov
out
sub
jecxz
or
dec
movsl
or
pop
xor
subb
sub
mov
sub
push
ljmp
push
inc
pushf
popa
push
push
nop
ja
jno
xor
pop
xchg
in
pop
call
cmp
and
aad
cmpl
stos
dec
adc
and
inc
and
lods
js
movsl
aam
push
mov
inc
mov
js
shlb
mov
ds
and
push
lcall
lods
mov
incb
mov
pop
hlt
pop
cmc
mov
cmp
ja
sbb
ffreep
jo
inc
adc
jno
cltd
mov
nop
mov
cli
pop
mov
punpckhwd
test
or
adc
aaa
mov
or
rorb
popa
add
xchg
ljmp
push
jmp
jbe
es
mov
nop
aam
jp
mov
mov
daa
in
fdivl
or
sbb
jae
mov
iret
in
push
mov
mov
sbb
sbb
or
movsb
add
fisttpll
pop
push
xchg
addl
add
scas
outsl
push
lods
or
adc
push
lcall
icebp
outsl
xlat
scas
scas
ljmp
ficompl
mov
inc
ret
out
mov
shl
and
mov
iret
pop
adc
xchg
sbb
or
insl
and
sub
mov
jne
repnz
enter
mov
mov
dec
fbstp
cld
sar
addr16
repz
test
int
lea
lock
mov
xor
xchg
sysexit
mov
pop
and
pusha
and
jg
and
and
loope
xchg
lods
dec
into
jns
dec
sub
pop
mov
shl
xlat
arpl
pop
jno
into
scas
mov
mov
fbld
scas
dec
fs
pop
lods
stos
add
lret
mov
lock
sahf
push
ret
jmp
div
dec
insl
mov
mov
inc
xchg
scas
xor
jmp
loope
subl
push
and
test
push
imul
sbb
pop
pop
sahf
scas
push
dec
dec
dec
mov
xchg
out
scas
out
icebp
or
mov
outsb
mov
dec
leave
mov
mov
lea
cmp
insb
mov
adc
scas
outsl
sbb
mov
mov
ljmp
or
cwtl
sbb
push
clc
psubd
test
xor
test
sti
das
jp
jno
add
repz
pusha
sbb
les
ss
in
cmp
lods
or
cmp
push
sbb
scas
sbb
std
cmpsl
or
and
je
cmp
and
scas
bnd
push
stos
push
pop
aas
repz
imul
jl
jae
rcr
pop
add
add
mov
insl
dec
mov
js
loop
ds
stos
pusha
push
mov
hlt
xchg
xchg
aaa
repnz
pop
or
xchg
mov
dec
test
inc
or
leave
mov
cmp
pusha
jmp
divl
add
lea
shll
xor
repnz
xor
call
pop
aam
push
or
xchg
push
rorb
mov
cmpb
cmpsl
insb
stc
push
xor
lea
loope
push
push
mov
scas
cltd
xchg
insb
dec
mov
test
pop
aaa
dec
icebp
sarl
jns
push
bound
dec
imul
mov
inc
jbe
pop
xorl
sub
push
inc
xor
xchg
loope
dec
sbb
ret
enter
mov
out
fs
mov
jno
iret
adc
pushf
imul
pop
and
imul
movsb
push
test
mov
push
pop
mov
sub
mov
shrl
cmp
lock
cmpsl
cmc
xor
pop
jo
addw
rol
pminub
push
js
negl
ss
and
xor
jmp
lods
dec
pop
pop
ret
xchg
scas
enter
in
cmpsb
xorl
sub
sub
dec
jnp
lock
mov
mov
add
cmp
in
push
call
cli
mov
dec
shlb
test
jno
inc
movsl
sar
jge
pop
out
idivl
dec
test
std
jbe
xor
mov
mov
lods
test
scas
and
sbb
pop
test
push
in
lret
lock
push
and
popa
scas
dec
xchg
and
inc
sarl
xlat
out
inc
dec
dec
out
pop
scas
push
aad
mov
dec
mov
outsb
dec
dec
test
outsb
add
mov
mov
lahf
idivb
cmc
insl
inc
mulb
adc
loopne
jge
sub
cmp
sahf
test
out
stos
mov
mov
pop
mov
xchg
jbe
xorb
lods
lock
xchg
adc
cmp
dec
je
aas
test
xor
cld
mov
int
push
popf
faddl
push
out
dec
sbb
push
stos
lret
int
jg
adc
jno
and
mov
in
rep
adc
je
sbb
shrb
dec
jnp
cmp
mov
pop
fst
or
add
cmp
sbb
sub
jmp
stos
outsb
inc
ret
add
adc
adc
stos
sbb
fwait
and
shlb
int3
dec
jnp
jmp
or
fdivs
cmp
iret
mov
inc
pop
xchg
lods
sbb
leave
xchg
movsb
jae
mov
pop
imul
sbb
in
mov
xlat
mov
sub
pop
inc
test
lods
or
adc
and
dec
mov
es
and
or
mov
xchg
xchg
fdivp
mov
cmp
add
mov
dec
insl
jg
out
lods
fnstcw
push
sahf
popa
cmp
adc
movsb
sbb
inc
cmc
ja
iret
sbb
ja
xchg
push
cs
and
mov
sbb
sub
xchg
xor
pushf
mov
inc
adc
dec
scas
sub
mov
int
jno
in
mov
int
mov
mov
pop
xchg
leave
js
jne
xchg
rorb
and
lea
add
ljmp
lds
xlat
addr16
pop
adc
adc
aad
sub
pop
hlt
xchg
lds
xchg
jb
ret
cmpsl
out
shl
pop
push
sbb
and
iret
pop
daa
mov
test
scas
out
xor
cltd
popf
cs
in
xchg
mov
dec
xchg
data16
repz
sbb
dec
jae
shlb
inc
out
pop
sbb
jne
sbb
jbe
call
or
imul
fbld
ret
in
adc
sub
xchg
sahf
sarb
js
scas
das
push
adc
gs
jns
in
xor
scas
daa
mov
or
imul
jb
divl
inc
lods
adc
lcall
idivb
shl
push
mov
mov
sti
xchg
pop
out
data16
mov
sbb
in
lods
cmc
mov
mov
push
daa
and
jmp
add
push
jnp
jp
mov
xor
adc
mov
inc
pop
or
test
xor
daa
int3
pusha
sub
cmpsb
xchg
iret
push
ss
nop
fcompl
add
cmp
adc
mov
adc
cmpsb
dec
push
jb
push
jno
adc
arpl
xor
xor
ds
testl
inc
or
push
mov
imul
idivb
int3
pop
dec
test
pop
mov
fildl
ret
xor
sub
push
enter
push
cld
mov
push
pop
mov
hlt
sahf
or
popa
cmp
xor
pinsrw
jge
mov
sub
dec
stc
adc
xor
mov
ret
jb
sub
or
mov
lock
fmul
pop
push
xor
lods
xchg
push
push
or
lea
into
dec
imulb
sub
clc
mov
push
pop
clc
push
repz
xchg
add
fstpl
sbb
insl
mov
iret
inc
mov
ja
cmp
call
add
out
pushf
int
dec
pop
push
int
loopne
stos
ljmp
popf
push
mov
xchg
lock
scas
incb
jg
dec
pop
pop
outsl
shl
sbb
mov
imul
mov
shll
pop
sbb
jge
adcb
addr16
dec
repz
push
cmc
lret
ljmp
pop
jmp
jns
dec
lock
addb
mov
fnsave
or
out
repz
mov
and
add
in
xor
scas
movsl
mov
lcall
fldenv
shrb
cli
mov
jae
or
add
push
jne
mov
add
push
xchg
mulb
jecxz
dec
xchg
jle
lods
jns
xchg
into
xchg
mov
mov
push
push
iret
sbb
cmc
fcomps
les
xchg
loopne
cmp
and
lahf
push
insl
mov
in
xchg
mov
cli
es
sub
fiadds
or
fisttpll
push
push
pop
cli
inc
mov
sub
jne
sbb
dec
push
pop
or
ficoml
lock
dec
dec
push
rorb
xor
sub
add
sbb
jmp
adc
sbb
aam
in
xchg
mov
ljmp
mov
ret
lock
mov
dec
xchg
ss
out
inc
dec
notb
stc
push
xchg
adc
lea
or
jnp
sbb
shlb
cmp
scas
les
subb
push
mov
insl
stc
stos
jl
add
jge
add
cs
daa
sub
rcl
popa
adc
ret
out
push
les
inc
push
fistpll
mov
out
lcall
or
outsb
aad
rcll
mov
in
cmp
fsts
xchg
pop
dec
pop
sbb
insl
ds
adc
pop
call
int3
inc
and
dec
jp
mov
adc
or
sub
sbb
xor
and
into
std
testl
shl
jge
sti
mov
fbld
ss
inc
jne
fiadds
ret
sti
add
movsb
mov
sub
xor
jmp
jle
xor
jl
mov
std
leave
mov
or
push
pop
and
imul
mov
movsb
fsts
jno
fldcw
outsl
xorb
xor
mov
push
dec
push
adc
ljmp
hlt
or
fnsave
or
cmp
pop
popa
mov
fsubs
sbb
shlb
mov
mov
sbb
fstpt
mov
imul
inc
scas
dec
or
js
jno
aaa
daa
adc
repz
aaa
in
cmp
leave
out
cmpsl
mov
jl
cs
aaa
roll
sarb
sbb
cmc
in
repnz
cmp
imul
jae
lret
add
jp
push
jb
cmp
loopne
sub
add
out
cmc
adc
in
inc
repz
xchg
jbe
xchg
inc
mov
push
sub
adc
pushf
testl
mov
cld
inc
call
divl
aad
pop
cltd
adc
iret
mov
push
inc
aam
inc
mov
jle
adc
sbb
insb
jne
mov
lods
int
ljmp
inc
lcall
insb
test
fistl
xchg
mov
test
push
scas
mov
fnsave
movsb
inc
sub
repnz
jb
mov
mov
sahf
xor
push
mov
push
mov
mov
movsb
mov
pop
jbe
inc
push
mov
stos
cld
aad
ds
add
and
jmp
pushf
xchg
mov
adc
push
mov
lods
or
jp
pop
mov
jg
inc
in
lods
mov
sub
adc
and
leave
iret
jge
lahf
hlt
leave
lods
mov
fs
fbld
mov
lea
xor
adc
ss
xor
mov
pop
outsl
gs
pop
sub
xlat
jbe
cwtl
pop
fcomi
inc
jecxz
and
mov
test
lods
sub
jne
jp
and
imul
test
gs
push
jae
sub
or
mov
xor
jmp
xlat
lods
jnp
sub
bound
in
gs
es
fcmovnu
xchg
icebp
sub
jge
mov
in
inc
or
stc
adc
cmp
xor
aaa
jno
imul
add
lock
pushf
mov
jae
xchg
lahf
dec
dec
sbb
add
add
sbb
xorl
lds
inc
sub
out
jno
cmp
dec
inc
mov
ss
test
pop
xchg
mov
lcall
sub
mov
and
push
aaa
sbb
lret
aas
mov
jmp
orb
cmc
jae
mov
in
xor
jo
dec
mov
push
jae
out
scas
xor
pop
fst
jns
dec
mov
clc
inc
ret
std
adc
fistpll
pushf
popl
fistps
scas
cs
ss
imul
cwtl
sahf
jo
ret
and
xor
in
cmp
add
push
fmuls
adc
jae
push
mov
inc
test
scas
mov
cmp
fldcw
add
ljmp
sbb
or
add
push
loop
lock
adc
sbb
dec
rcrb
cmpsl
jp
repz
pusha
orb
fwait
and
fidivs
push
xchg
les
imul
orb
ss
push
xor
mov
xor
inc
pop
ss
frstor
push
cli
lods
jg
stc
lock
stos
pop
push
xor
xorb
incb
adc
imul
dec
cld
mov
xchg
add
insl
sahf
cmp
dec
jo
pop
sub
imul
jne
dec
aas
sub
rcll
ret
arpl
in
cmpsl
mov
sbb
addl
fsubrl
xchg
mov
xor
or
sub
cmpsb
rorl
pop
rclb
mov
insb
adcl
mov
push
pusha
jno
lea
into
xchg
xlat
mov
push
xor
push
add
push
dec
jge
icebp
xchg
addr16
gs
sbb
ljmp
mov
movsl
mov
xor
push
pop
sub
cmp
pop
ds
inc
mov
lcall
and
fisttpll
rcrl
scas
mov
cmpsl
clc
imul
arpl
mov
scas
xchg
jg
mov
sub
ljmp
mov
xchg
fchs
pop
mov
adc
xor
jge
negb
xchg
loop
jecxz
sti
cmp
jns,pt
scas
scas
arpl
push
dec
sarb
xchg
shll
or
push
shl
sahf
cmp
lock
pusha
ds
aad
fsubl
fdivrp
or
cmp
inc
adc
sahf
dec
test
aad
jae
mov
call
shrb
jecxz
mov
adc
fdivs
add
popf
out
mov
cli
or
or
ss
mov
pushf
mov
js
add
out
push
push
call
mov
ficompl
loope
sbb
push
push
xchg
js
sub
jge
dec
sbb
sub
js
loopne
jmp
shrl
and
fwait
mov
scas
fdiv
sub
jl
cmp
jbe
loopne
push
in
sub
add
pop
roll
loope
ds
push
mov
addb
into
cltd
jmp
and
dec
xchg
movsl
push
jmp
sti
and
aaa
sub
add
insb
in
adc
pop
mov
cmc
out
pushf
xchg
fiadds
inc
push
shrl
enter
test
idivl
xchg
dec
dec
mov
or
pop
xor
sub
icebp
adc
lahf
insb
cmp
scas
sbb
xor
mov
cmpsb
add
push
test
inc
testl
in
ljmp
enter
xor
add
ds
outsl
pushf
out
jne
and
sarl
outsb
addb
int
fs
cmc
lret
mov
inc
or
movb
add
pop
in
adc
jns
jnp
scas
fwait
jge
mov
fdivrs
rcr
je
inc
push
mov
fidivrs
lret
sahf
hlt
aas
out
out
jle
inc
loopne
js
out
addr16
jl
push
mov
andb
repz
cmpb
lds
xorl
jne
outsl
sbb
iret
mul
sub
pop
adc
ss
dec
rcll
fcmovb
jbe
in
scas
pop
push
pop
addr16
js
cmp
sbb
pop
ret
stos
mov
sbb
jnp
adc
insl
insb
push
enter
aas
scas
cmpsl
in
scas
mov
adc
adc
add
test
jb
mov
stos
and
xchg
out
out
pop
je
inc
sbb
xchg
adc
mov
arpl
into
mov
cmp
or
mov
jge
shr
pop
leave
inc
add
cmp
push
inc
repz
arpl
mov
sahf
sbb
call
and
dec
adc
dec
sahf
cmpb
ds
ficoms
aas
or
lds
lea
jb
stos
fdivp
xor
pop
sbb
aam
xor
aas
in
xor
sub
pusha
and
in
push
mov
dec
imull
outsb
stos
and
fmuls
inc
movsb
imul
icebp
fbstp
xchg
or
int3
xor
pusha
repz
mov
sahf
jae
mov
mov
dec
pop
stc
sbb
cli
sarl
dec
testl
pop
int
jbe
xchg
xchg
mov
data16
dec
fisubl
cmpsl
jg
xchg
aaa
sbb
in
jo
rcrb
pop
mov
mov
mov
inc
xchg
pop
icebp
fs
xchg
daa
jne
or
pop
add
std
mov
mov
ljmp
cli
ss
stc
mov
push
mov
fildll
scas
popf
jge
cli
movsb
adc
xchg
sub
adc
cmpsl
add
jp
decl
or
cmp
js
sub
mov
enter
mov
test
ret
xor
mov
aas
add
jne
dec
outsb
sub
dec
cmp
pop
cmpsl
dec
nop
sub
ljmp
mov
lock
mov
sbb
mov
cmp
call
mov
jbe
pop
push
dec
dec
jg
or
call
fwait
test
xchg
xchg
jns
jle
clc
lcall
mov
test
ss
out
cmp
out
lods
mov
cmp
dec
push
xlat
push
std
inc
sbb
push
pop
adc
add
sti
dec
xchg
add
and
mov
js
test
add
and
add
inc
push
shll
lret
mov
sbb
push
xchg
cmpsl
aad
test
xor
or
inc
test
icebp
cs
push
push
pop
iret
push
xchg
add
and
data16
test
scas
push
jg
mov
rcrb
xor
push
pop
xchg
xor
pop
sub
js
and
icebp
popl
int
jmp
xor
dec
int3
dec
sbb
js
dec
je
mov
sbb
pop
out
sbb
push
pop
xor
movsl
js
clc
or
xchg
xor
mov
fisttpll
iret
sbbl
jbe
xchg
ds
inc
test
in
jmp
aas
idiv
ja
mov
insl
imul
leave
popf
out
pop
adc
push
sub
sub
in
aas
jge
aas
out
gs
mov
mov
faddl
mov
adc
inc
pop
cltd
leave
jl
lods
daa
mov
mov
jl
insb
andl
mov
arpl
mov
out
loop
in
movsb
sar
inc
pop
jo
psraw
and
pop
fstps
lcall
xchg
xchg
and
mov
jae
inc
out
or
imul
int
lock
mov
add
mov
jo
iret
in
or
rclb
arpl
xor
adcb
and
clc
mov
inc
cmp
add
js
cmovg
or
xchg
adc
in
xor
add
jmp
ret
pusha
xorb
test
xor
shr
fistps
push
push
and
add
call
jo
xchg
push
imul
fimuls
out
adc
dec
mov
shll
pop
std
popa
or
fwait
push
cltd
cmp
sub
pop
iret
cli
sbb
loop,pn
lea
xchg
cltd
stc
insl
dec
add
cmpsb
nop
mov
pop
idivb
xchg
mov
sbb
cmpb
mov
or
lret
inc
imul
lds
push
fbstp
mov
dec
ljmp
mov
lret
xor
cld
pusha
in
push
mov
aaa
sub
cmp
ds
jmp
loopne
dec
ja
mov
sub
mov
js
cmpsb
cmp
test
mov
aas
cs
or
shlb
loop
test
je
insb
push
jno
add
push
jge
and
aad
lahf
sbb
jge
inc
lret
les
out
cmpsb
cmp
inc
jns
outsl
fucomi
cltd
sbb
dec
loop
pop
bound
fs
stc
jae
xor
testl
arpl
xor
mov
dec
jmp
adc
popf
bound
lcall
jns
push
aam
sub
fwait
push
push
int
jge
xchg
cmp
xchg
inc
mov
jb
jmp
sub
cmpsb
push
cmp
jmp
rcrl
xchg
xor
sbb
ljmp
xor
pop
adc
nop
out
fadd
decl
stos
sbb
std
add
or
lret
cmc
adc
sbb
js
mov
xor
imul
jo
pop
push
idivb
test
jmp
scas
or
xlat
mov
dec
mov
lds
inc
mov
sti
mov
inc
xchg
xor
jp
lock
sub
mov
xchg
cltd
lret
lock
jb
push
push
lods
in
dec
push
pop
sti
nop
rorb
fiaddl
clc
dec
shrl
adc
inc
std
xor
push
or
ds
xchg
jne
mov
push
je
hlt
and
add
inc
cmp
aas
cld
push
adc
lret
mov
pop
push
mov
pop
mov
cmp
ds
inc
fs
je
aad
xorb
fyl2x
and
mov
fldenv
out
and
inc
sub
das
loop
nop
push
push
outsl
xchg
aas
les
mov
bound
mov
xor
fs
sbb
cmp
cmpsl
repnz
jecxz
and
scas
fcomps
dec
mov
aaa
xor
popf
xchg
ljmp
add
aas
and
sub
stos
pop
int
pop
pop
sub
mov
push
and
and
pop
stc
icebp
xchg
mov
pop
cmp
pop
mov
scas
arpl
push
dec
push
jbe
lock
std
inc
add
loopne
jecxz
arpl
cld
hlt
out
mov
imul
fisubs
add
pop
mov
xor
out
insl
or
lahf
jb
add
sbb
and
push
sbb
adc
mov
inc
xorb
lock
cmp
mov
test
xchg
mov
or
lea
dec
jno
push
sub
ljmp
and
in
mov
mov
nop
les
sub
cmpsb
xchg
popa
pop
lods
jne
jb
adc
xor
adc
adc
dec
push
bound
out
sbb
in
sub
ffreep
iret
rclb
js
loop
mov
ret
push
mov
fdivs
xor
mov
adc
outsl
sub
xchg
sbb
jb
xor
jecxz
pop
rorb
jae
mov
lock
shr
push
push
arpl
jp
ljmp
sub
je
sti
push
das
push
outsb
fs
enter
sbb
lret
aad
sbb
lods
or
int3
xor
inc
dec
repz
movlps
lock
call
in
xchg
push
call
xchg
or
xor
loope
cli
jno
insl
dec
jmp
add
test
cmpsl
xor
aad
dec
push
push
rcrb
mov
sahf
pop
je
mov
pop
ret
ss
xchg
scas
out
cmp
std
push
mov
ret
dec
mov
pop
push
jg
xor
nop
pop
pop
lahf
dec
dec
out
jne
insb
mov
arpl
pushf
xlat
decl
out
aam
insl
add
mov
test
test
nop
jg
fld
roll
push
cld
cmpsb
iret
lods
clc
clc
out
fdivrl
in
add
nop
shlb
jg
or
shll
mov
xchg
ljmp
and
decl
jle
mov
pop
push
add
dec
fdivs
test
out
mov
lods
outsb
add
ficompl
jbe
pop
jae
sbb
and
mov
out
pop
shl
xchg
rcrl
js
pop
push
and
int3
xorl
scas
shll
clc
sbb
sbb
int3
cmp
or
xor
mov
lahf
inc
push
daa
fsub
cli
cmp
hlt
mov
jecxz
xorl
jmp
sti
cmp
pop
cmp
sti
dec
cmp
imul
mov
cmp
pop
xchg
push
push
mov
sub
rcr
lods
mov
out
add
mov
fistpl
bound
push
jge
sbb
cltd
jge
xchg
sbb
call
mov
mov
jle
jns
xlat
icebp
mov
test
adc
push
pop
fs
jo
stos
out
mov
iret
push
lcall
xchg
lret
push
in
mov
add
adc
inc
into
sbb
shl
fs
cwtl
xor
sub
pop
adc
xor
cmp
add
mov
sbb
sbb
sub
sti
loopne
cld
or
pusha
xor
cmpsl
adc
iret
leave
pushf
roll
push
xchg
adc
cmp
cltd
push
cmp
jmp
cs
stos
jge
jns
xchg
sub
mov
cmp
pop
pop
cmpsb
jnp
in
orl
bound
stos
cld
in
addl
cmp
xchg
lea
sbb
jl
cmp
into
xchg
adc
and
std
mov
lods
sub
stos
shlb
xor
or
lret
dec
push
andb
sahf
ljmp
jmp
lcall
jne
jmp
movsl
clc
pop
and
mov
test
adc
add
add
loop
mov
mov
or
pushf
bound
add
jp
xor
js
adc
pushf
cli
dec
daa
mov
xor
jno
fistpll
enter
pop
sbb
cmp
and
outsb
in
pop
add
dec
jne
jno
and
add
mov
jp
cmpl
inc
mov
les
das
notl
mov
adc
push
and
andl
mov
mov
push
lock
stc
pushf
mov
adc
push
ret
or
inc
subl
loopne
ljmp
dec
sti
cld
add
scas
fs
mov
mov
push
adc
mov
ret
xchg
les
jno
push
mov
loop
pop
sti
push
ss
fs
jns
mov
mov
sbb
sub
push
stc
clc
adc
mov
mov
push
mov
cmp
gs
imul
mov
xor
test
mov
call
mov
lock
sbb
icebp
fs
clc
sahf
lods
movsb
jmp
sbb
xchg
aaa
or
adc
and
scas
jo
dec
or
push
mov
add
nop
std
aas
jno
jecxz
popf
test
test
ljmp
mov
sub
push
loopne
lret
jl
push
iret
cmp
cmp
in
ffree
mov
mov
mov
out
fimuls
fnstcw
loope
or
adc
mov
insl
adc
or
mov
inc
xor
fnstcw
adc
addr16
fdivrs
xchg
add
mov
out
inc
lds
stos
push
sbb
jbe
jecxz
jnp
pop
push
ds
dec
fldenv
mov
in
jb
inc
sarb
enter
mov
xchg
jmp
pop
js
daa
pusha
dec
mov
out
insl
mov
and
xchg
adc
mov
lretw
mov
ret
dec
notl
repz
xor
stos
dec
hlt
ds
push
sbb
dec
mov
clc
dec
ja
inc
aas
mov
je
sub
inc
cmp
dec
or
xor
xchg
xchg
fsub
or
call
sarb
xorl
pop
mov
std
dec
adc
in
pushf
mov
outsb
cmp
dec
xorl
adc
out
aad
xor
inc
scas
out
pop
repnz
mov
jbe
in
jmp
pop
push
adc
add
fwait
negb
pop
in
fsub
fisttpll
dec
std
xchg
jnp
dec
fcomps
gs
jmp
insl
adc
inc
lods
push
incb
pop
orl
dec
xchg
adc
xor
jle
mov
cmp
adc
add
dec
in
dec
cmp
arpl
sbb
fnstcw
push
ret
test
ljmp
xor
fistpl
mov
inc
sbb
mov
outsl
pushf
mov
xor
imul
es
loopne
cmp
in
jb
lods
mov
icebp
inc
xor
rcrb
stc
arpl
xor
mov
pop
pop
enter
push
fs
or
sbb
cmp
cld
inc
pushf
loope
mov
xchg
lea
shll
adc
sbb
pop
leave
testb
idivb
push
pcmpgtd
pushf
push
lods
dec
cli
imul
in
sbb
xchg
test
je
and
arpl
repz
push
cltd
ffree
add
and
ljmp
movsl
and
or
int
test
icebp
les
mov
and
fwait
and
test
jo
dec
loop
xchg
call
mov
daa
mov
mov
lcall
push
lcall
adc
loopne
xor
cmp
fldcw
inc
rcl
inc
push
subl
incb
mov
inc
push
push
inc
shlb
push
hlt
mov
out
cs
mov
divl
loopne
push
repnz
test
xor
adc
loope
ja
mov
outsb
fisttpll
test
or
lods
adcb
jnp
mov
xor
pop
jp
push
adc
mov
enter
or
test
mov
dec
pop
cmpsb
rorl
xor
jbe
or
daa
sub
ss
fisttpll
fcompl
scas
addl
fistps
out
inc
bnd
push
add
push
sahf
in
jle
rolb
xor
in
dec
inc
int
jmp
fnstsw
fucom
arpl
imul
adc
xorb
fdivr
sahf
lock
scas
shlb
daa
xchg
mov
pushf
stos
push
sbb
xchg
lcall
jecxz
push
outsl
inc
mov
lcall
cld
andl
shrb
repnz
inc
lock
insb
add
in
push
xor
or
hlt
addb
jmp
cmp
sbb
and
mov
lds
ss
inc
enter
test
fldt
movsl
pop
xchg
int
inc
dec
lods
outsb
outsl
mov
push
jns
jae
pop
adc
mov
sub
jbe
lods
push
jno
movsl
daa
test
inc
out
cld
xchg
cltd
sbb
fwait
sbb
xchg
enter
mov
cmp
lcall
repz
mov
arpl
lret
pop
sub
pop
cmp
ljmp
mov
pop
jecxz
jle
movsl
out
fstpl
mov
cwtl
pop
into
popa
sub
cmp
xor
out
je
push
mov
push
test
adc
into
icebp
xchg
jae
mov
loope
cmp
fwait
icebp
or
scas
adc
stos
xor
dec
rcl
in
ja
inc
lock
mov
cmp
sbb
dec
sub
daa
mov
lods
inc
into
icebp
xchg
pop
prefetchw
subb
sahf
ss
subb
jae
lock
sub
inc
mov
andb
ljmp
and
cmp
cli
xchg
mov
adc
mov
hlt
out
jl
int3
xor
mov
sbb
xor
sbb
and
in
inc
movsl
push
pop
inc
test
sub
repz
pop
lods
jmp
test
fstpt
das
xchg
and
popa
pop
cmp
icebp
sub
decl
daa
mov
xorl
jle
std
and
pop
lea
and
adc
insb
xchg
xor
sub
mov
lods
jp
gs
out
sub
aas
das
jecxz
pop
pop
mov
insb
das
push
in
mov
push
aaa
arpl
fs
adc
lds
push
pop
push
dec
call
and
adc
add
ljmp
insb
xchg
cs
sahf
shlb
adc
stos
flds
ljmp
imul
add
aad
or
dec
and
sbb
push
jge
std
idivb
add
pop
shlb
cmpb
mul
mov
or
dec
sbb
cltd
or
mov
lock
lods
inc
and
pop
inc
adc
das
dec
pushf
cmp
cmp
sbb
inc
mov
hlt
std
ret
sbb
push
shlb
andb
insb
pusha
xlat
cmpsl
fs
insl
clc
pop
sbb
call
fcmove
jecxz
ss
ret
leave
jge
loopne
push
or
or
out
hlt
loope
imul
js
mov
pusha
fisttpll
fsubrl
popf
and
out
icebp
push
add
add
pop
aad
lods
xor
dec
mov
nop
and
mov
mov
and
dec
scas
fisttpl
xchg
in
lock
add
into
push
mov
fadds
imul
in
mov
cmp
cmc
loope
inc
or
jne
dec
into
dec
js
add
mov
mov
mov
ja,pt
sub
xchg
sarl
addr16
imul
or
mov
movsb
adc
mov
js
or
push
inc
add
movsb
repz
imul
movsb
mov
inc
or
ds
call
push
jmp
push
testl
std
mov
out
sub
nop
cmp
pop
jno
mov
into
xlat
mov
sub
adcl
hlt
adc
xchg
andb
push
loope
adc
inc
xor
mov
lods
pcmpeqw
sbb
mov
lcall
cmp
in
rcl
jl
mov
imul
out
in
mov
xor
jmp
adc
loop
add
mov
shrl
pop
outsl
lret
sub
adc
scas
imul
fdivrs
dec
inc
arpl
sbb
jbe
rcrl
mov
add
gs
push
xchg
pop
shlb
mov
mov
arpl
sbb
bound
arpl
mov
pop
cmc
gs
lock
and
jns
push
loop
adc
sub
inc
fs
pop
mov
mov
push
mov
daa
jecxz
or
lods
inc
movsb
pushf
push
dec
cmc
mov
or
in
cmc
or
lock
dec
jg
out
and
dec
mov
rorl
aad
sub
adc
movsl
ds
mov
loop
pop
cld
add
push
lcall
and
add
mov
stos
pusha
js
scas
dec
mov
dec
jno
pusha
xchg
pop
inc
test
ret
dec
cmp
icebp
xchg
lcall
shl
xchg
add
dec
call
movsl
lret
jae
shlb
fs
or
adc
mov
xor
xchg
adc
test
rcl
scas
pop
divb
inc
sub
inc
push
sub
mov
aad
mov
or
add
ficomps
mov
je
xlat
leave
rorl
test
into
sbbb
int3
sub
scas
scas
fmulp
sub
adc
jge
pop
sbb
mov
lret
mov
inc
xchg
jg
testb
dec
scas
fstpl
int
mov
sbbl
add
and
test
lock
movsl
dec
shr
addb
andb
jmp
push
push
inc
mov
sbb
pop
sahf
or
lods
cld
adc
shll
dec
ljmp
or
push
pop
insb
lret
xchg
ret
and
test
pop
sbb
popa
xchg
xchg
out
mov
int
mov
inc
adc
pop
jp
add
xor
sbb
pop
push
jecxz
fcoms
andl
stos
mov
nop
adc
fwait
aaa
cwtl
shll
sub
or
imull
loop
xchg
xchg
lods
mov
pop
addr16
jnp
std
jno
jo
movsl
negl
and
je
sub
mov
insl
jno
in
push
outsl
or
unpckhps
sub
add
clc
xor
mov
jg
fwait
repz
fisubl
rol
and
inc
sub
push
mov
mov
int3
xor
jmp
pop
push
sarb
imul
sub
and
mov
push
addr16
inc
mov
lods
inc
cmc
dec
sarl
cmp
addl
mov
addl
cmp
sti
inc
stos
daa
movsb
sbb
dec
xor
cltd
ret
jns
cld
cmp
gs
and
pop
fisttpll
adc
add
cmp
cmp
aaa
cwtl
add
jle
into
sbb
add
xchg
aas
pop
out
daa
jne
test
cmp
rolw
test
xchg
enter
or
pop
movsb
jae
and
es
nop
outsb
push
add
pop
add
xchg
sahf
push
rcrl
fucomi
jns
enter
push
nop
inc
iret
dec
sahf
dec
jns
jmp
mov
cmp
cwtl
xor
leave
popa
aad
push
dec
cwtl
and
xchg
sub
fisttps
lcall
dec
leave
cmc
movsb
cmpsl
mov
cmp
jo
or
sub
fsubr
les
sub
sbb
sar
pop
mov
sub
jp
dec
repnz
mov
sbb
xchg
add
xor
mov
dec
adc
and
scas
lcall
mov
adcb
xchg
xchg
dec
sub
lods
dec
xor
xor
cmpsl
mov
jecxz
inc
cmp
mov
xor
pop
iret
ds
mov
in
push
repnz
popf
push
subl
sti
push
cmpsl
xchg
jns
int3
rcrb
jb
rcll
dec
adc
sbb
mov
adc
dec
pop
fwait
insl
push
xorl
lea
pop
pop
xchg
jnp
ja
jl
dec
and
or
stc
mov
inc
mov
sbb
xor
lcall
cltd
test
xor
popa
sbb
push
scas
xchg
fsubrs
movsl
int3
xor
mov
popf
push
je
out
mov
push
hlt
divl
rcrl
mov
mov
mov
xor
dec
or
insb
xlat
fldenv
ljmp
dec
sahf
ljmp
push
xchg
test
mov
lock
and
mov
outsb
and
test
sub
sbb
test
cmp
aaa
and
fisttps
jle
lret
or
adc
inc
adcl
fwait
sahf
outsb
mov
push
mov
js
mov
nop
mov
adc
out
push
fsubr
sahf
mov
test
mov
pop
daa
dec
fstpt
lcall
in
ret
hlt
aaa
sbb
mov
fsubp
pop
add
xchg
sarb
fmuls
cs
cltd
xchg
pop
je
mov
and
pop
dec
mov
mov
sti
leave
inc
popf
xor
roll
and
jmp
inc
jnp
mov
int
cmp
xchg
imul
fldt
cltd
shrl
loope
mov
std
imul
mov
lret
or
clc
push
loop
mov
ret
adc
jae
add
out
cwtl
cld
add
cltd
and
aas
jge
mov
mov
dec
sub
xchg
ljmp
in
leave
ja
pop
lahf
iret
mov
mov
mov
lea
and
adc
mov
cmpsl
cmp
pop
mov
stc
aaa
or
or
and
inc
std
scas
pop
lcall
cld
testl
or
xchg
cwtl
es
mov
mov
jge
mov
daa
rcrb
sbbl
cmpsl
mov
pop
in
cmp
scas
lods
hlt
fnstsw
or
gs
cld
aam
pop
add
orl
xchg
and
dec
cmp
mov
imulb
pop
and
stc
roll
int
sbb
jg
imul
js
mov
jp
frstor
or
outsb
mov
add
int
lods
enter
mov
into
mov
jl
sbb
pop
pop
in
test
rcrb
jnp
in
sar
jecxz
cli
xchg
mov
aad
mov
fiadds
push
push
pop
cmp
imul
movb
jb
loopne
jmp
fdivl
adc
repnz
mov
jae
xlat
dec
movsb
sbb
dec
notl
out
push
repnz
jo
xlat
inc
jns
push
adc
ret
jo
adc
mov
fsts
pop
cld
jp
cmp
popa
jecxz
cmp
fdivrl
cmp
out
pop
lods
xchg
cmpsb
stc
leave
repz
sarb
movsl
mov
sbb
pop
jl
add
jae
jle
inc
cld
jns
sti
sbb
jmp
daa
in
pop
iret
das
sub
or
scas
xor
dec
sbb
das
push
adc
push
and
xorb
push
loop
and
fdivl
and
call
push
mov
int
jp
sub
loop,pt
mov
lods
call
scas
lahf
dec
fwait
shlb
add
aad
ja
jp
mov
mov
nop
pop
sbb
popf
daa
and
imul
das
jle
dec
call
test
mov
arpl
jg
out
adc
lods
gs
mov
imul
dec
movsl
dec
dec
pop
xor
push
dec
or
jmp
jle
repz
dec
add
mov
cs
mov
rorl
mov
cmpsl
fnstsw
je
mov
sbbl
dec
ljmp
lea
aaa
xlat
pusha
cltd
xchg
adc
cmc
pop
jg
jp
mov
push
add
pop
pop
cmpsl
xchg
pop
outsl
scas
inc
outsb
xor
cmp
pmulhuw
int
adc
xchg
adc
arpl
mov
pop
sbb
jbe
inc
pop
cmp
mov
xchg
lret
xchg
mov
clc
jmp
push
ret
cmp
sti
cmp
orb
inc
out
mov
dec
insb
mov
and
and
sbb
mov
sbb
roll
adc
pop
cmpsl
enter
fsts
repnz
notl
dec
and
push
imulb
mov
stc
subb
orb
jno
pop
jl
cmp
and
dec
mov
push
bound
xor
pop
xlat
mov
ret
movsb
inc
mov
mov
mov
pop
ja
pop
dec
sub
dec
jo
fadds
ja
adc
insl
xor
pop
xor
test
aam
fbld
inc
ss
stos
inc
push
cs
jecxz
mov
sahf
and
les
pop
dec
stos
cltd
cmpsl
pop
outsb
int3
jne
pop
ss
mov
inc
sbb
mov
sub
into
cmp
and
andb
mov
sahf
shlb
pusha
lods
imul
ret
popa
ret
dec
movsb
adc
xchg
movsb
pop
mov
cmpsb
mov
push
ss
jp
fs
pop
inc
cmovo
push
pop
jg
popa
add
mov
mov
cs
adc
inc
jmp
rcrb
add
arpl
lea
cmpsb
pop
in
into
bound
pop
jecxz
scas
inc
jmp
push
sub
out
lea
mov
int
fists
inc
test
xchg
xor
xor
jns
arpl
pop
jno
seto
pushf
xor
jmp
mov
xor
filds
popa
push
mov
add
pop
out
lret
rolb
mov
xchg
ds
dec
inc
adc
pushf
rcrb
jg
les
sar
mov
mov
push
fidivrl
ror
xlat
pcmpeqw
inc
mov
insb
stos
mov
add
les
fsubs
aad
sar
jp
pop
mov
es
dec
jg
lahf
mov
pop
cmpsb
jp
cmpsb
out
cmp
insb
xor
mov
jo
hlt
jnp
in
or
fmull
mov
out
lahf
push
dec
pop
cmc
xor
inc
dec
push
les
jns
add
push
mov
pop
xbegin
pop
mov
bswap
testl
lds
pusha
in
jp
jmp
xor
bound
sbb
andb
or
add
add
loopne
sub
shlb
ficomps
mov
aad
add
dec
and
lahf
ss
mov
push
jo
push
inc
pushf
mov
jns
pusha
jle
or
xchg
loop
in
into
mov
xor
pop
ljmp
mov
inc
aas
cwtl
ret
mov
sub
push
imul
insl
inc
xor
movsb
je
int
cmp
pop
shlb
mov
test
pop
lea
ficoms
arpl
fisttpll
dec
sbb
jno
and
rorl
mov
xor
and
add
lock
mov
andl
imul
push
jae
cwtl
imul
push
xchg
lods
pop
jbe
add
jno
pop
pop
pop
shr
lods
jecxz
out
jle
dec
add
popl
aas
popa
shlb
adc
push
adc
sbb
ds
adc
dec
jl
jge
je
aaa
movsl
aas
inc
pushf
movswl
bound
cmovp
mov
fstpl
jp
jnp
or
push
sbb
sbbb
leave
pop
xorb
mov
cmp
divl
mov
pop
jno
pop
rcr
mov
icebp
xchg
and
jmp
add
jnp
adc
pushf
dec
rcl
lcall
pop
and
xchg
nop
add
inc
imul
xor
mov
mov
fimull
fmull
es
jns
insb
clc
push
jle
xor
popf
dec
and
lods
mov
sti
dec
mov
mov
stos
add
out
mov
mov
aam
shll
sbb
jmp
std
mov
ficomps
jmp
incl
insb
rep
icebp
mov
sbb
dec
add
cmp
cld
jl
loope
imul
test
inc
sub
pop
sarb
in
data16
test
push
out
jge
sbb
enter
daa
sti
pushf
lahf
mov
mov
xor
mov
dec
cmpsl
dec
push
enter
pusha
pop
hlt
sub
andb
sub
lds
push
push
clc
push
cmp
rolb
mov
jne
push
add
adc
aad
cmp
test
lret
mov
stos
xchg
cmpsl
out
cmp
popa
in
xor
mov
xor
or
ss
dec
push
dec
or
dec
test
sub
push
add
xchg
shll
sub
mov
cmpsl
sahf
repz
dec
out
cmp
lret
out
mov
pop
cmpsb
cld
push
sbbb
outsl
push
xchg
jmp
dec
jge
fistpl
mov
pusha
lcall
mov
pop
adc
outsb
xchg
push
xlat
bound
pop
test
or
dec
push
or
in
mov
dec
cli
xor
mov
inc
pop
dec
jns
dec
xor
mov
rclb
aaa
mov
stc
pushl
ret
loop
fsubrl
jmp
rcl
int
dec
add
dec
sub
add
das
cmpsb
inc
sub
aas
loop
jl
movsl
lahf
cmp
inc
out
scas
sub
and
test
dec
sbb
bswap
adc
push
roll
testl
fildl
mov
popa
jne
fimuls
call
loop
call
daa
mov
fcoml
inc
cmp
mov
jnp
shlb
pop
lods
mov
adc
in
cmpl
mov
mov
dec
test
adc
jmp
pmullw
jmp
dec
rcl
adcb
clc
lret
pusha
xor
mov
push
jl
and
push
mov
jg
jg
cmc
inc
test
jp
or
addr16
loope
fst
loopne
loop
xor
sub
and
das
adc
xchg
movsb
jno
mov
adc
cmpsb
mov
pusha
jecxz
mov
setae
fadds
push
jnp
xchg
and
andl
stos
or
inc
lret
xchg
loopne
arpl
and
fidivl
xor
je
xor
std
push
xchg
pop
jo
adcb
jns
pop
xchg
lods
mov
mov
gs
jo
adc
xlat
outsb
xor
fcmovu
sbb
sbb
add
das
in
pushf
adc
push
sub
xchg
add
mov
outsb
popf
cmp
sbb
insb
push
cli
sahf
mov
scas
shlb
jo
popf
xchg
or
out
jo
dec
mov
mov
and
xchg
int3
and
adc
jecxz
movsl
ss
lret
mov
scas
jmp
mov
sub
mov
shr
aam
pop
aad
js
mov
sti
nop
and
cmpsl
insb
lods
lods
xchg
jns
sbb
add
inc
popa
stc
xor
sub
leave
xchg
pop
pusha
jecxz
shll
inc
jo
call
es
repz
xchg
xchg
lods
pop
adc
repz
gs
adcl
in
mov
test
out
add
fidivrl
xor
mov
sub
psubw
mov
cmp
and
pop
or
rol
rcrb
cli
mov
mov
mov
sti
mov
xor
ja
or
dec
das
andl
imul
fwait
sbb
data16
jnp
sbb
jge
sub
pop
add
hlt
ja
adc
xlat
call
call
ret
jnp
movb
stos
add
jp
aas
xchg
add
xor
inc
mov
shrb
rcl
adc
aam
sub
insl
mov
push
sbb
arpl
mov
mov
inc
repnz
jae
lds
int3
xchg
rolb
loopne
outsb
inc
shrb
scas
cwtl
int
xchg
mov
mov
jnp
mov
test
loopne
daa
shrl
sub
int
jns
mov
sbb
lret
xor
mov
out
cwtl
pop
adc
enter
jae
nop
mov
mov
push
jmp
xor
push
cwtl
xchg
push
mov
movsl
aad
xor
addr16
mov
mov
mov
fidivrl
xabort
sub
jb
les
movsl
add
adc
push
mov
sub
scas
push
and
dec
not
and
ds
jno
mov
rcrl
xor
nop
fcompl
out
pop
lret
lods
lea
scas
fxtract
popf
psrad
cmp
out
dec
aad
sub
pop
mov
mov
int
fucomip
adc
sub
ja
cmp
movsb
fldl
mov
sub
push
fidivrl
push
mov
xchg
dec
inc
inc
faddl
loope
test
out
pop
mov
js
add
sub
and
roll
sbb
sbb
cmp
aaa
pop
out
pop
sahf
inc
les
jno
adc
mov
out
xchg
or
jns
inc
sahf
les
ds
xchg
cwtl
les
adc
cmp
lahf
aam
dec
push
shll
repz
pop
or
sbb
push
mov
fbld
mov
rorl
lock
xor
daa
push
inc
inc
mov
cmp
pop
sbb
add
cltd
mov
jl
xor
enter
sub
loope
and
or
sub
inc
cmpsl
jle
push
lods
arpl
add
ficomps
xchg
push
sub
and
repnz
cltd
dec
mov
xchg
insl
lret
rolb
popa
incb
dec
imul
sub
jae
adc
sbb
jae
or
fsubrl
les
shlb
push
or
js
outsb
mov
mov
push
cmp
pop
sarb
imul
adc
dec
adc
bound
push
pop
sti
mov
and
inc
mov
pop
pop
cltd
jb
mov
add
xlat
inc
or
dec
fsub
mov
mov
call
mov
inc
mov
mov
adc
pop
sahf
cli
ljmp
or
js
xchg
mov
repnz
outsl
imul
pop
clc
or
xchg
mov
mov
cmpsb
lock
mov
lods
jp,pn
pop
cmp
add
adc
or
sti
stc
push
jbe
adc
movsb
lods
ret
test
bound
lret
rcrl
push
sub
and
dec
lea
push
mov
add
cwtl
cltd
js
add
sbb
sub
rorl
xchg
out
xchg
loop
mov
pop
push
pop
lods
and
push
outsb
push
sbb
psubusb
mov
mov
shrb
push
je
js
test
icebp
andb
push
in
in
aam
dec
cmc
sbb
cld
xchg
arpl
pop
push
in
es
sahf
jg
adc
or
cmp
inc
jecxz
stc
sub
inc
in
jb
add
sti
aad
iret
adc
popf
inc
and
ss
mov
cmp
pop
mov
jo
dec
mov
adc
inc
fsubrs
sub
lret
push
insl
or
cmp
jbe
mov
sub
mov
xchg
leave
jge
or
jl
xchg
sub
aad
push
testl
or
jle
subb
daa
or
mov
mov
ljmp
imul
lods
mov
lods
pop
pushf
mov
mov
xor
loop
and
inc
outsb
or
pop
and
gs
push
jecxz
ds
stos
xchg
and
xchg
add
mov
xchg
lret
and
lret
mov
sbb
test
xor
scas
ret
imul
adc
push
jo
pop
pop
lret
int
nop
pop
xor
nop
lret
bound
or
stos
xor
mov
cld
je
cltd
push
outsb
xor
pop
sahf
mov
sub
jge
imul
mov
push
in
cld
sahf
push
mov
cmp
dec
lret
mov
pop
cmp
mov
inc
cs
in
imul
pop
scas
nop
fs
call
cmpsb
mov
sbb
shrl
stc
notl
fisubrl
outsl
ss
pop
xchg
xor
ljmp
ret
ss
pop
dec
xor
je
movsl
daa
data16
sbb
stos
and
cmp
in
add
scas
mov
cmp
leave
cmp
fstpl
dec
insb
jp
mov
xchg
xchg
leave
out
dec
xchg
fsubrl
popf
pusha
popf
mov
jo
xchg
mov
mov
aam
pop
jns
rolb
enter
out
leave
shr
xor
sub
or
decb
or
jno
inc
sub
in
les
outsb
xchg
test
ret
mov
mov
adc
fwait
push
pop
out
add
adc
mov
es
outsb
sbb
sbb
inc
rcll
jmp
ret
je
dec
inc
xor
jecxz
leave
xchg
jg
sub
adc
cmp
dec
ja
mov
lods
repnz
xlat
orb
add
cmp
mov
sbb
test
insb
inc
ss
cmp
clc
pop
call
test
bound
jle
repnz
sbb
stc
xor
test
jne
cmp
or
dec
and
sbb
das
mov
push
add
js
pusha
xchg
inc
jecxz
add
mov
gs
sbbl
mov
dec
xchg
mov
clc
jle
nop
rcrl
xchg
mov
sbb
fsubr
cmc
jge
je
lods
cli
ss
inc
mov
in
mov
jle
out
les
mov
mov
testb
push
xlat
or
mov
add
cld
sbb
das
sbb
jle
push
cmp
adc
xchg
push
add
adc
mov
cmp
fistpll
decl
jle
cmp
mov
into
pop
adc
adc
popa
inc
jnp
into
adc
pushl
lock
add
lea
jle
jge
scas
xchg
or
fldl
cmp
push
in
add
shl
pop
shll
sub
and
push
xchg
and
test
scas
push
outsb
stos
jl
add
mov
cltd
inc
aad
push
pop
jns
cmp
add
dec
xchg
cmp
pmulhuw
out
cltd
pop
jns
cli
dec
sti
jae
mov
add
pop
push
movsb
clc
leave
testb
jne
sbb
or
loop
xchg
mov
inc
roll
push
adc
outsb
int
mov
jae
iret
adc
lahf
int
mov
daa
arpl
xchg
into
adc
sti
cmc
aam
fdivrs
scas
imull
sbb
mov
xor
andl
lret
sub
add
mov
add
dec
jge
sbb
nop
push
xlat
mov
push
mov
xchg
xchg
fwait
int3
xchg
push
int3
mov
mov
aaa
mov
sub
nop
les
imul
ljmp
mov
mov
add
sub
jmp
leave
pop
shll
inc
mov
dec
lea
out
inc
shr
popf
push
sub
dec
and
jne
mov
dec
fimuls
sbb
or
loope
imul
dec
mov
push
out
xor
adc
and
adc
lods
inc
add
mov
cmc
sbb
cmp
mov
pop
lahf
scas
mov
mov
adc
push
mov
add
cmpsl
lcall
push
pop
call
icebp
leave
push
mov
lret
mov
pop
test
dec
jnp
aam
das
add
add
rol
lret
push
out
or
lods
inc
mov
jne
cmp
aas
push
mov
cmc
fs
jns
xchg
jae
mov
out
jne
in
jmp
or
adc
loop
movl
xchg
imul
sub
add
push
cmp
xchg
or
cmp
inc
sbb
movsb
mulb
pushf
mov
aas
mov
bound
inc
push
mov
faddl
xchg
cltd
ret
jno
or
push
sub
pop
or
push
sub
xlat
push
icebp
mov
adc
inc
inc
imul
cld
xor
pusha
stos
pop
int
mov
fistl
pushf
pop
sbb
lahf
rolb
sub
and
sbb
cmp
lcall
pop
mov
mov
out
repz
push
and
mov
push
xchg
push
inc
cmp
lods
jno
stos
inc
and
xor
inc
xor
jecxz
iret
inc
test
pop
mov
shll
mov
xor
outsb
dec
stos
push
adc
std
xchg
sbbb
push
scas
pop
aam
push
inc
movsl
sub
jmp
xchg
lds
enter
enter
dec
shrb
and
js
punpcklwd
lods
jmp
xchg
xchg
arpl
lahf
stc
xchg
aas
pop
or
and
mov
test
popf
and
dec
aad
jle
repz
push
cltd
push
std
pushf
rcr
inc
and
insb
rclb
jge
lods
mov
inc
movsl
subb
hlt
jb
cli
sub
cmp
pusha
dec
mov
repnz
dec
push
loope
stos
clc
pop
cmp
xchg
cwtl
pusha
cmpsb
jle
sbb
xchg
lods
mov
ret
sti
jle
xchg
stc
sti
cs
sub
sbb
jb
jae
pop
aam
sbb
iret
leave
imul
stos
pop
jne
cmp
push
push
ret
dec
or
mov
jns
sahf
clc
mov
cli
mov
and
jns
push
jbe
jae
je
dec
popa
rorb
adc
sbb
dec
mov
mov
mov
mov
push
cmpsl
push
clc
mov
sub
and
mov
enter
rcrl
lahf
mov
lock
mov
in
or
bound
and
dec
lret
pop
pushf
bound
pop
mov
imul
popa
outsl
cwtl
jne
ljmp
pop
flds
and
mov
int
xlat
xor
je
leave
outsb
jg
sbb
xlat
pop
mov
popf
fists
fisttpll
and
shl
jp
scas
pop
xchg
add
fucomp
cmpsb
mov
adc
sub
add
sar
or
mov
filds
fwait
push
into
repz
leave
arpl
jg
add
js
mov
lds
sbb
aaa
into
fldcw
jns
xor
clc
mov
shrb
popa
or
inc
lods
mov
jne
test
adc
dec
cmpb
jne
dec
jae
popa
adc
mov
leave
fucom
adc
push
jp
adc
jbe
cmp
jbe
xchg
mov
dec
loope
clc
out
loopne
sub
adc
inc
ret
imul
xlat
das
rcrl
fsubs
xor
inc
pushf
xlat
mov
int3
addr16
sahf
inc
mov
lcall
outsl
aaa
fcoml
xchg
xor
outsb
test
jle
outsl
in
sbb
mov
das
mov
push
inc
jle
cli
or
fwait
inc
hlt
ret
mov
pop
imull
in
lock
das
sub
ljmp
push
popa
mov
jnp
fldt
lret
mov
xchg
inc
pop
rcr
and
cld
mov
cmp
out
push
fsts
dec
mov
inc
push
sbb
pop
fildl
cmp
jmp
jmp
push
sar
sub
jne
or
imul
xchg
push
inc
stos
ljmp
jg
mov
test
sbb
cmp
loop
add
xlat
in
push
mov
subb
out
movsl
mov
pop
imul
jo
sub
push
in
mov
add
push
xor
mov
mov
imul
sbb
nop
and
movb
mov
lea
push
fsubl
movl
push
and
cmc
ss
ljmp
sbb
popf
mov
leave
ficompl
cwtl
push
fnsave
sbbl
mov
fnstsw
pop
dec
dec
jae
mov
xor
cmp
pop
pop
xlat
xor
pop
and
sbb
inc
daa
pop
pop
es
mov
jle
xor
pop
dec
inc
xchg
fstpt
outsb
xchg
jecxz
rcll
and
mov
push
jle
push
sar
movb
pop
inc
fstp
outsb
subl
mov
adcb
jecxz
int3
xchg
xor
and
outsl
push
faddl
movsb
inc
adc
cmpsl
pop
xor
push
lret
into
sub
or
push
stos
jb
jne
xchg
aas
add
lcall
mov
mov
inc
shr
jns
mov
decl
mov
sbb
addl
sub
enter
call
mov
or
cmp
inc
or
les
int3
dec
and
out
xchg
lods
sub
fldt
jae
aad
inc
das
hlt
add
jp
jg
jbe
pop
ret
mov
lret
add
ret
mov
aad
pop
add
icebp
imul
rol
loopne
sub
adc
add
lea
js
xchg
mov
fucomp
mov
sbb
shlb
push
xor
popf
aaa
add
lds
or
add
lods
out
addw
jo
pushf
divb
xor
dec
pop
aam
insb
adc
cmpsb
popf
mov
push
rcr
stc
mov
xorl
xchg
or
stos
cwtl
xchg
lcall
push
push
dec
and
repnz
sub
dec
xor
dec
jbe
cli
xchg
les
test
xor
jl
jle
icebp
inc
and
enter
sub
and
mov
ljmp
xchg
add
lods
dec
inc
adc
mov
and
test
pinsrw
cwtl
ds
das
sbb
hlt
jns
jecxz
push
mov
addr16
lret
andl
dec
movsb
sbb
xchg
xchg
es
popa
jae
fucomip
jle
xchg
lods
mov
stos
and
fstps
mov
in
sbb
and
into
sbb
sub
mov
clc
sub
rcrl
int3
xlat
loop
sub
and
out
pop
pushf
leave
jg
push
outsb
mov
scas
xchg
jmp
add
jne
aad
or
das
negl
hlt
shrl
dec
out
testl
or
in
sub
xchg
fnstenv
adcl
sti
pop
cli
sbb
nop
sti
testb
xchg
mov
pop
mov
inc
imul
inc
and
push
insb
pop
sub
mov
xchg
movsb
out
std
add
or
pop
scas
out
outsl
inc
inc
and
sbbb
sub
mov
cs
hlt
lretw
bound
mov
xor
test
out
imulb
or
fbstp
fistl
inc
iret
jge
cs
jbe
mov
dec
loop
jo
outsl
xor
xor
push
pop
mov
xor
mov
scas
sbb
pop
mov
mov
popf
ss
ret
lock
dec
and
out
pop
rclb
xchg
sti
out
subl
sub
les
sbbb
dec
cmpsl
lods
xchg
inc
mov
mov
neg
push
mov
es
cmpsb
cmp
adc
movsl
cli
fsts
iret
mov
es
dec
jg
sahf
inc
std
dec
icebp
test
xlat
mov
fstps
dec
inc
addl
push
imul
jo
addr16
jns
add
mov
mov
call
cmp
scas
js
cmp
xlat
jg
rcll
jae
addr16
push
xchg
xchg
cmpsl
repnz
mov
xchg
js
pusha
mov
pop
mov
int
push
cli
loopne
jge
and
repz
addl
shrb
cmpsb
imul
xchg
mov
xchg
pop
adc
inc
cli
fdivr
enter
mov
test
bound
cmp
push
mov
or
popf
adc
idivl
push
dec
faddl
jae
mov
pop
pop
ret
jne
in
mov
in
popa
scas
scas
pop
mov
sub
cmp
shr
pop
je
cld
mov
movsl
andb
adc
inc
enter
push
xlat
imul
addl
fdivrl
mov
fisubrs
popa
rclb
out
cmp
fcompl
rolb
sub
int
fnsave
lret
cmp
les
xchg
fwait
sarb
sub
or
sbb
jl
mov
pop
inc
hlt
xchg
aas
imul
shrl
popa
dec
adc
movl
mov
push
stos
jl
pop
pop
fistps
repz
or
and
test
lods
add
pop
mov
loope
push
lock
mov
lahf
mov
negb
das
hlt
cmpsl
ja
jne
mov
inc
cld
iret
cltd
loop
jno
dec
pop
xchg
inc
mov
push
xchg
fst
nop
and
sbb
cmpsl
or
adc
lret
push
out
cmpb
into
ror
ljmp
lods
or
add
xchg
sahf
repnz
sahf
iret
cmp
or
leave
adc
inc
push
clc
jmp
sbb
call
mov
pop
out
add
add
xchg
not
or
xor
jle
and
imul
mov
xor
dec
popf
cli
jecxz
xlat
test
xchg
xchg
ret
inc
enter
int3
dec
imul
in
std
fldl
cmp
cmp
movsb
out
pop
aas
jle
iret
scas
push
aaa
xchg
sbb
sub
add
into
pop
mov
jbe
xor
scas
in
and
lods
in
out
mov
inc
pusha
mov
arpl
sub
cmp
cltd
leave
sbb
mov
pop
cmp
sahf
cltd
mov
pop
adc
adcb
das
pop
jbe
dec
dec
shrb
xor
cmp
into
popa
lret
mov
jl
insl
sbb
enter
testb
jo
mov
mov
xchg
iret
mov
incb
mov
into
cwtl
cmpsb
inc
mov
jns
dec
loop
xlat
lcall
jge
fcompl
push
btc
xchg
insl
and
cld
lods
add
lods
in
sub
lock
adc
out
jecxz
idiv
mov
dec
lret
out
in
cmpl
mov
lret
cmc
jno
popa
jbe
pop
test
faddl
push
insl
jb
scas
flds
xor
lea
cwtl
fldcw
mov
and
lahf
sub
mov
adc
fs
jo
int3
imul
imulb
test
mov
decl
mov
ret
shlb
mov
pop
sub
lret
xchg
xchg
mov
subb
andl
jno
push
add
std
outsb
dec
stc
popa
mov
jae
xor
dec
xor
popa
or
cltd
orb
cmp
outsl
imul
stos
jbe
inc
scas
rorl
cmpl
popf
xchg
cli
inc
movsb
adc
aad
loop
je
jb
jl
lock
into
cmp
leave
cmp
jle
cld
and
or
test
outsb
or
clc
jecxz
xchg
adc
mov
test
jo
xor
sar
rcrl
lods
mov
subl
es
mov
in
fdivs
push
lret
orb
jno
leave
push
cltd
stos
inc
outsb
popf
in
mov
idiv
dec
push
add
cmp
cmp
test
jno
inc
repnz
sub
jg
or
inc
mov
cld
stos
and
mov
aas
mov
ss
jp
pop
arpl
pop
adcb
insb
push
mov
cmc
test
lahf
jo
repnz
aam
popa
jg
lods
mov
xchg
dec
adc
ljmp
pop
push
pop
inc
js
fstpt
mov
mov
icebp
dec
sub
mov
cltd
adc
sti
mov
mov
movd
cmc
movb
pop
call
lcall
mov
jo
lahf
adcb
push
cli
int3
add
pop
loop
roll
loopne
int3
stos
loop
out
movsl
xor
dec
sub
gs
pop
hlt
call
mov
fwait
push
aam
into
in
subl
dec
cmp
mov
addr16
stc
jno
mov
sub
add
inc
dec
xor
xchg
pushf
icebp
pop
sbb
out
test
sbb
mov
mov
and
adc
pop
adc
mov
test
mov
xchg
dec
cmp
test
scas
outsb
cmp
push
jmp
stos
sbb
loop
adc
and
mov
out
addr16
cmpsb
fld1
mov
jmp
movsl
sub
fistl
fs
mov
xor
mov
andl
adc
pop
xchg
inc
test
sbb
xchg
jb
inc
js
test
pop
xchg
jge
mov
ret
adc
xchg
jae
adc
adc
cmp
into
rclb
lea
push
and
mov
pop
cvttps2pi
pop
or
push
xchg
xlat
int
outsb
test
push
push
out
cmp
data16
mov
push
outsl
jl
rorl
sbb
sbb
cmp
push
ds
pop
cmpsl
into
mov
add
sarb
loopne
jl
add
jbe
jne
sub
ret
fnstsw
xchg
inc
pop
outsb
popf
shr
inc
movsb
push
mov
xchg
mov
push
or
dec
fsubl
gs
mov
popf
jle
sbb
gs
lea
aaa
and
inc
inc
stos
out
sbb
cmp
pop
negl
lock
push
dec
enter
jge
sub
lcall
xchg
pop
add
rcr
push
xchg
mov
rolb
inc
sub
or
jmp
fsubr
adc
arpl
cmpsb
xlat
sbb
sub
shrl
std
in
push
pop
daa
or
out
jo
mov
outsl
adc
xor
out
and
pop
mov
lret
jmp
stc
movsl
or
mov
call
sbb
mov
pop
stos
in
mov
imul
push
shl
ljmp
popa
sub
loop
adc
mov
fdivp
inc
xor
in
adc
jecxz
out
jle
pop
fistps
push
mov
mov
and
mov
mov
int3
or
fdivs
sbb
loopne
clc
or
idivb
pop
adc
outsl
adc
cwtl
out
in
mov
loope
enter
sarl
rcrl
out
mov
js
roll
int3
xchg
je
or
test
inc
stos
inc
int
sbb
jl
xor
inc
int3
dec
int3
sbb
ss
ja
adcb
mov
or
or
jno
pusha
sti
fadds
push
insb
inc
outsl
jge
mov
mov
mov
out
pop
rorl
aas
mov
dec
adc
cmp
xchg
ds
lea
mov
imul
fwait
mov
push
sbb
dec
mov
mov
insb
jmp
mov
pusha
pop
outsb
cmp
shlb
mov
mov
es
push
mov
mov
dec
or
test
xchg
or
sbb
sub
std
cmp
popa
pop
insb
aad
rolb
jg
pop
pop
jecxz
pop
fidivrs
sub
ja
mov
xor
fucomp
out
pop
fstl
xchg
lret
or
inc
loope
lcall
inc
shrb
cmpsl
mov
xlat
in
je
int3
aaa
jns
lahf
jne
test
add
push
mov
bndstx
xchg
jl
sub
xchg
adc
test
xlat
jg
adc
mov
ficoms
shl
adc
mov
stos
lea
repnz
mov
push
and
adc
mov
std
xlat
mov
and
xor
lods
push
imul
fimull
jle
fwait
insb
and
test
jmp
xor
movsb
ljmp
dec
xor
pushf
cmp
icebp
pop
mov
or
push
test
cmp
out
popf
imul
xchg
xor
les
ljmp
sub
lahf
arpl
adc
js
dec
xchg
xor
into
jp
mov
imul
test
lret
push
fisubrs
jecxz
pop
pop
fcmovnu
dec
jae
jp
and
popf
pop
insb
push
xchg
ret
out
je
addl
adc
jp
pushf
push
mov
ret
pop
cmpsb
repnz
je
pop
xchg
push
or
add
jl
xchg
std
mov
jae
jle
repz
fwait
ja
jb
add
ficompl
dec
cmp
push
pop
lahf
xlat
ljmp
xchg
push
pcmpeqw
cmc
insl
lret
pop
and
sub
sbb
mov
mov
xor
lcall
mov
cmp
sub
add
push
mov
xchg
xor
je
inc
jae
sub
push
loop
pop
inc
mov
add
repnz
mov
sbb
andl
shll
jl
xor
int3
insb
jp
add
ret
and
xor
cmpsb
mov
add
dec
outsl
add
xchg
inc
push
stos
addr16
mov
jo
xchg
clc
imul
jne
cmpsb
xor
idiv
in
cmp
adc
lock
push
pop
push
int
out
adc
push
loope
movsb
mov
pop
testl
inc
jg
fidivs
inc
jb
scas
fsubs
add
int
addr16
mov
rcl
dec
xor
push
cmp
cmp
ljmp
pop
dec
xor
cltd
insb
mov
addr16
xchg
aas
pop
adc
into
hlt
mov
mov
dec
sti
clc
xchg
ffree
insb
xacquire
push
loopne
push
mov
push
outsl
mov
call
sbb
imul
mov
cltd
rolb
inc
and
mov
shlb
push
loopne
pop
test
cs
mov
test
lcall
adc
cmp
cmpsb
jp
mov
loopne
stos
test
ret
jbe
js
insb
stos
xor
mov
or
nop
imul
ljmp
repz
xchg
xor
lahf
mov
xchg
aad
xchg
rorb
cs
and
adc
inc
mov
sbb
sbb
fldcw
mov
dec
decb
fdivl
scas
cmp
scas
sbb
pop
pop
inc
test
fwait
dec
std
in
jo
sbb
sub
inc
rorl
sbb
xchg
add
scas
out
scas
sbb
dec
popa
or
mov
sub
ljmp
insl
and
ret
nop
push
cmpl
xor
ret
mov
xchg
mov
mov
dec
mov
int3
mov
add
shll
shrl
stc
xchg
mov
adc
or
xor
mov
or
sub
mov
push
scas
jo
sub
ljmp
test
repnz
inc
xchg
testb
aas
mov
inc
mov
dec
mov
pop
insb
movsb
rcr
daa
jae
movb
movsl
sti
cmp
test
or
jg
and
dec
out
dec
movsl
hlt
mov
and
in
jmp
sub
jae
mov
dec
jecxz
aam
and
adc
and
push
push
mov
cmp
daa
cmpb
inc
mov
jge
ret
pop
mov
xor
jns
mov
cli
out
mov
xchg
lahf
xor
test
fmuls
adc
movsb
movsl
sbb
repz
subb
lods
pop
push
fucom
inc
shrl
and
loopne
ret
add
addr16
nop
outsl
dec
pop
or
jg
ds
adc
mov
jle
xchg
jo
mov
or
add
mov
jg
lods
dec
scas
pop
push
sbb
mov
xchg
xadd
pop
imul
pop
ss
mov
movsl
dec
addb
xor
sahf
dec
jbe
pushf
or
push
mov
fistpll
and
and
and
and
gs
aad
je
sbb
sub
sub
jg
leave
dec
push
xor
push
std
sbb
sbb
sbb
sbb
popa
cmpsl
in
jge
sbb
insb
jmp
in
cmpsl
pop
pop
lcall
and
cwtl
fiaddl
ret
aam
inc
inc
les
xchg
je
arpl
pop
dec
mov
jbe
dec
cmp
fnstenvs
jae
sbb
stc
or
xchg
dec
inc
scas
cmp
in
mov
inc
fsts
jmp
cmp
stos
xchg
sbb
mov
inc
sub
sbb
hlt
mov
in
mov
xor
xchg
outsl
push
fdivs
insb
add
mov
fimuls
cmp
or
test
cmp
pop
xrelease
and
outsl
pop
xor
daa
out
pop
mov
rcrl
cmp
mov
stc
sarb
icebp
fldenv
push
in
mov
out
pop
imul
orl
mov
xchg
pop
jne
sti
popa
cltd
dec
rcl
jno
call
cmp
das
pop
dec
jno
xchg
add
lret
sub
push
decl
cmp
sub
jae,pn
movsb
sarl
mov
loop
insb
and
aad
cld
cld
sub
popa
loopne
mov
lods
jo
es
inc
xchg
hlt
cmp
hlt
js
inc
aas
jne
xchg
jle
test
dec
call
jle
mov
inc
insb
mov
pop
or
stc
pusha
aam
outsb
pop
cmp
imul
fwait
sahf
insl
inc
insl
mov
fwait
adc
xchg
pop
mov
mov
inc
dec
fcmove
push
push
nop
mov
sbb
push
xor
mov
mov
fwait
aad
scas
xchg
add
sti
xor
dec
sti
cltd
aas
or
jne
out
lret
dec
xchg
les
es
inc
and
out
inc
mov
enter
lds
jns
cmp
push
gs
repz
xor
or
js
cmpsl
xchg
cmp
adc
popf
xchg
aam
scas
nop
test
and
sub
pop
jbe
mov
scas
sbb
jle
fldt
or
or
out
fdivs
ret
clc
and
scas
fisttpll
pop
xchg
out
mov
loope
lahf
xor
adc
ss
je
mov
add
add
iret
mov
addb
push
xchg
xchg
decb
pop
jbe
cltd
pop
mov
push
sbb
scas
mov
jle
fdivrs
mov
xlat
not
enter
clc
mov
xor
test
cltd
add
flds
mov
jnp
xchg
loopne
fisubs
stos
and
pop
scas
shl
ret
push
lret
pop
sub
push
dec
shlb
adc
sbb
shrl
cmpsl
jae
cwtl
pop
push
mov
loope
lcall
pop
xchg
inc
or
popf
xchg
push
aas
or
dec
jle
push
mov
mov
in
cld
push
xchg
cwtl
pushf
enter
mov
testl
mov
add
xchg
test
push
mov
xchg
outsb
cmp
fsqrt
xchg
sub
add
or
lahf
nop
inc
dec
xchg
outsb
mov
jge
jb
or
sti
enter
or
ja
cmp
xor
pop
xchg
out
add
ret
popa
stos
and
and
jmp
xchg
mov
arpl
cld
lds
mov
lock
xchg
cmc
jge
jnp
insb
inc
inc
jbe
or
ret
lods
adc
sub
pop
mov
outsb
xor
xchg
dec
or
push
cmp
add
fsubr
cwtl
lds
mov
adc
fwait
mov
pop
mov
xor
add
sbb
iret
fcmovnu
push
fwait
mov
pop
fwait
lea
jl
mov
pop
adc
cmp
imul
addb
int
movsl
ljmp
add
fcoml
imull
mov
loope
jmp
ljmp
js
sub
adc
inc
mov
hlt
push
jmp
jno
popf
add
negb
out
hlt
sub
loopne
mov
pushf
mov
xchg
in
sbb
pop
in
repnz
out
pushf
mov
xor
sbb
cmp
sahf
fs
stos
loopne
and
lock
cmp
mov
or
in
lcall
sbb
or
popf
and
ret
hlt
pop
xchg
xchg
paddq
sub
dec
jnp
xor
xor
outsb
iret
ret
in
es
nop
add
or
repnz
loop
pop
fcomip
pushf
jbe
mov
cmp
jnp
int3
aaa
mov
aas
int
and
and
and
shll
mov
sub
adc
push
mov
scas
icebp
hlt
cmp
daa
stos
fstpt
sub
daa
inc
imul
stos
and
mov
dec
mov
lret
filds
les
cmpl
out
and
cmp
xor
push
iret
dec
xchg
aam
outsb
repz
inc
lea
or
mov
inc
or
in
cmp
out
out
jl
and
cli
mov
mov
push
loopne
stos
or
mov
cmp
pand
lods
xchg
cld
rorl
mov
mov
mov
cmp
xchg
mov
pop
xlat
cmpsl
cwtl
mov
pop
lods
das
test
cltd
cmp
es
pop
and
mov
lds
jge
jg
int
ds
mov
mov
imul
sbb
and
adc
adc
cld
dec
cmpsl
mov
push
shrl
mov
push
leave
movl
xor
test
push
sti
dec
pop
lods
jo
cli
push
push
xchg
mov
rsqrtps
xchg
push
mov
or
sbb
sar
adcl
notb
arpl
arpl
enter
cmp
dec
add
mov
aaa
test
pusha
cmpsl
sub
lcall
daa
push
mov
insl
test
xor
sub
sub
mov
ss
cmpsb
pop
push
xlat
or
mov
mov
mov
pop
pop
mov
inc
mov
shl
out
mov
push
mov
stos
dec
ds
pusha
mov
adc
je
clc
sub
pop
mov
pop
in
les
cwtl
sbb
cmp
shrl
loope
inc
pop
push
test
push
mov
cmp
pushf
ret
mov
lds
jb
adc
aas
daa
in
bound
or
push
dec
jmp
cwtl
inc
sbb
mov
mov
inc
addr16
fdiv
pop
js
div
imul
mov
jl
push
sarl
jns
mov
or
jg
xchg
mov
dec
inc
stos
cltd
mov
xlat
jnp
xor
movsl
xchg
xchg
xchg
cltd
aaa
xchg
hlt
lcall
xchg
ds
sti
out
clc
leave
push
lods
pop
shlb
notl
scas
adc
add
inc
sbb
enter
rcl
sub
sbb
adc
popa
outsb
mov
popw
pusha
leave
dec
xor
lods
mov
ds
fidivs
mov
sbb
leave
insl
sbb
ret
sbb
out
dec
ljmp
imul
mov
jbe
fcoml
mov
pop
in
xor
int
sti
mov
aas
xchg
rorb
xchg
movsb
js
flds
cs
mov
in
movsb
add
cmc
pop
sarb
sbb
pop
sbb
leave
aaa
repnz
jmp
mov
jne
insb
jmp
imul
xor
icebp
cld
pop
or
inc
xchg
iret
iret
push
add
mov
jecxz
rcrb
rdmsr
and
cmpsb
xchg
rcl
lock
call
xor
icebp
mov
xor
loope
push
pop
repz
mov
stos
repz
mov
nop
aam
movsl
sbbb
and
mov
dec
push
sub
sbb
or
fstpl
mov
out
data16
add
pusha
adc
aam
pop
xor
jge
adc
loop
push
movsl
mov
sub
das
mov
pusha
sub
ficoms
out
pop
xor
mov
mov
test
dec
fidivl
aaa
add
mov
jo
mov
inc
dec
xchg
test
rorl
mov
and
hlt
outsl
nop
lock
sub
inc
push
or
fldenv
pop
sbb
pop
and
stos
in
xchg
aaa
scas
jle
das
fdivp
dec
adc
scas
int
ds
addl
pop
movsb
in
aam
mov
and
lock
push
xor
mov
popf
mov
add
stos
nop
ljmp
int3
sbb
jae
mov
and
ficoms
shlb
inc
stos
push
sahf
inc
int3
test
inc
flds
jae
loopne
xchg
pop
andl
jbe
stc
adc
jmp
mov
inc
movsb
pushf
gs
push
daa
in
sub
push
sbb
inc
cs
std
addr16
pop
or
ret
adc
loope
inc
adc
insb
jmp
ret
pop
mov
jb
stc
in
xor
outsl
cmc
xor
arpl
fdivp
cmpb
bound
mov
push
and
add
repz
push
xchg
xchg
xchg
hlt
cmp
jb
pop
lcall
loope
repnz
outsl
test
jle
ljmp
loopne
jmp
popa
shlb
loopne
cwtl
test
xchg
inc
test
iret
cmc
les
push
jmp
xor
xor
pop
jbe
jmp
dec
sub
ret
xchg
inc
jo
mov
mov
mov
mov
or
leave
movsb
aam
pop
in
and
pop
popa
out
popf
xor
sbb
adc
stos
sbb
shll
fiaddl
shlb
and
sub
out
dec
inc
movsb
test
mov
mov
scas
cmpb
mov
in
push
sbb
inc
lock
cmp
xor
dec
mov
rolb
ret
jg,pn
outsb
xchg
add
mov
popa
clc
push
out
cld
mov
mov
sbb
aaa
push
fdivp
in
mov
out
fcompl
shl
call
mov
cs
sub
dec
jo
and
ljmp
ret
stos
aas
jne
lds
mov
andl
dec
loop
call
movsb
lods
jg
jmp
sahf
cmc
lds
rorb
clc
jns
jp
mov
mov
aaa
ja
push
movsb
xchg
shlb
int3
xor
aam
mov
ss
xchg
adc
add
xchg
pop
shlb
and
mov
dec
sub
scas
xor
movsl
fwait
cld
sub
icebp
decb
xor
mov
pop
daa
dec
and
mov
sub
cmp
in
pop
xchg
test
jo
and
pop
inc
loop
or
stos
cwtl
sub
pop
ficoml
pop
jno
aam
xchg
jbe
clc
or
mov
test
aam
jge
jae
jmp
stos
cmpsl
imull
dec
pop
hlt
xlat
aad
icebp
lods
outsb
cmc
cmp
jns
xor
test
pushf
mov
xchg
inc
stc
call
mov
and
outsb
inc
in
xchg
iret
cmp
push
out
push
add
mov
sbb
cmp
jns
cwtl
lahf
fwait
xchg
xchg
inc
pop
inc
fisttpll
mov
shlb
dec
sbb
mov
dec
dec
pop
adc
ffree
or
in
ss
ret
enter
sub
cltd
fstpt
scas
test
adc
imul
movsl
xor
test
inc
popf
stos
hlt
jb
jnp
pop
mov
fimull
ss
lods
mov
dec
pop
cld
hlt
or
xor
inc
xchg
aam
push
cwtl
mov
adc
sbb
sbb
and
cmpsl
mov
or
jle
pop
aad
mov
dec
mov
sub
adc
or
push
push
lret
fwait
sarb
dec
lcall
cmpsl
clc
cmc
mov
sbb
hlt
mov
xchg
add
sub
stos
inc
sub
mov
ljmp
imul
sub
loop
cmpsb
cmp
sbb
pop
add
in
or
cmp
mov
shl
repnz
xlat
jns
sub
cmp
or
mov
push
xchg
and
lods
cmp
jae
add
cmc
push
test
clc
mov
insb
pop
iret
imul
cmp
popa
xor
jecxz
cmp
mov
jp
inc
lock
test
dec
jmp
cmp
test
ss
repz
pop
mov
sti
mov
ret
movsb
mov
add
sub
icebp
pop
imul
push
test
mov
sbb
arpl
push
and
mov
call
inc
mov
sub
std
inc
push
push
jns
sub
xchg
fs
xor
pushf
ss
sysret
xor
js
rcl
gs
dec
in
clc
pop
fs
test
cmc
dec
lea
cmc
pop
dec
stos
ljmp
shll
mov
stos
push
cwtl
dec
orb
es
jnp
push
jns
or
sbb
ss
mov
clc
xor
sub
dec
int3
sti
ss
xchg
pop
stos
in
nop
shrb
dec
fisttps
xchg
push
or
sbb
mov
xor
push
rcl
fcmovnu
rclb
and
das
lahf
sub
cmp
dec
dec
hlt
sub
mov
lods
cwtl
and
and
add
or
sub
mov
enter
dec
sub
fwait
ret
push
in
push
out
imul
lcall
sti
leave
mov
lahf
mov
or
outsb
push
push
popf
cmpsb
aaa
out
sbb
jmp
adc
jg
test
jbe
fwait
rep
into
ficoms
jae
pop
adc
or
cltd
ficoml
ret
cwtl
imul
xchg
add
cmp
cwtl
cmc
or
mov
pop
xor
jb
xor
std
push
cmovbe
lods
shl
pushl
les
popa
xchg
hlt
popf
shll
dec
notl
lods
ljmp
pop
add
xchg
jnp
ds
lahf
xchg
mov
push
shl
jo
mov
jmp
fldl
testl
ret
scas
sbb
in
mov
pop
dec
or
rcrl
in
xchg
cmpsb
jmp
cmp
je
xchg
fdivrl
or
pop
gs
and
idiv
fbld
sub
fisubs
in
inc
or
sub
sbb
jg
cs
mov
idiv
push
popa
dec
test
lock
inc
scas
jae
pxor
mov
push
outsl
scas
stos
movsl
mov
rorl
jle
outsl
insb
push
ljmp
fisttpll
lods
push
jo
push
test
push
mov
cs
sbb
dec
sub
cwtl
out
push
test
sbb
jne
cmpsl
outsb
sahf
in
test
in
mov
jae
popa
dec
sbb
xlat
popa
mov
fstl
dec
inc
jp
mov
arpl
cmpsl
mov
push
xor
push
add
faddl
pop
push
mov
mov
mov
imul
sub
xor
xor
cmp
adc
lock
test
cmp
mov
shlb
fmulp
aam
xchg
lock
xor
out
xlat
cmp
aas
inc
push
daa
les
iret
dec
mov
lods
ret
push
mov
xor
jg
lods
arpl
xchg
or
mov
jg
lret
loopne
inc
ficompl
test
fldcw
fprem
xchg
clc
jmp
imulb
hlt
out
filds
pop
add
or
cltd
out
mulb
pop
jae
sbb
dec
hlt
out
mov
rcrl
jmp
add
jns
sub
push
sarl
iret
dec
jecxz
xor
fs
jnp
addb
sbb
fnstcw
sbb
test
std
xchg
scas
and
push
cmp
loope
das
sub
orl
mov
mov
sbbl
test
pop
pop
test
push
push
pop
popa
push
cmp
mov
push
ror
or
push
clc
xor
sahf
inc
subl
push
xchg
out
sub
sbb
dec
inc
adc
mov
mov
mov
sti
out
lret
xchg
jns
fwait
fs
addr16
jb
es
and
cmp
or
and
jmp
mov
int
ljmp
in
das
addr16
inc
bnd
addb
daa
or
pop
js
jb
int3
cltd
stos
sahf
fildl
data16
pop
loope
or
addr16
mov
call
jb
or
jae
mov
push
xor
iret
cmp
gs
test
mov
leave
es
mov
fisubrl
mov
pop
loop
sub
fdivr
fnstcw
jmp
and
mov
xor
mov
xchg
mov
dec
dec
pop
fcoml
in
mov
inc
and
stc
loopne
push
test
and
jmp
mov
insb
cwtl
inc
cmpsb
das
add
pop
ret
mov
dec
xor
push
mov
or
cmpsb
repz
cltd
outsl
and
lods
outsb
mov
mov
loopne
xchg
mov
repz
outsb
push
sti
scas
xor
dec
rcll
and
xchg
jp
or
mov
aaa
push
xlat
xor
js
aad
push
test
fldcw
iret
sub
inc
sbb
and
jg
sbb
movsl
pop
inc
sub
shr
adc
cmp
xor
xor
mov
jnp
mov
loop
dec
je
xchg
mov
mov
cmpb
push
mov
mov
sbbb
xchg
jl
push
sarb
data16
in
jnp
popa
mov
and
pushf
sub
rclb
call
sbb
imul
inc
and
ja
lds
add
lcall
xor
fwait
xchg
pop
mov
pop
cmpb
lret
and
lods
push
jge
sub
xchg
or
sub
xchg
ja
push
test
push
pusha
mov
add
inc
subl
stos
sbb
clc
icebp
addl
mov
out
imul
inc
pop
or
adc
test
jne
les
and
addr16
iret
inc
jns
in
xor
push
jnp
mov
mov
cmp
decl
imul
inc
jno
int
mov
aaa
test
shll
adc
mov
andl
push
mov
mov
clc
lcall
add
mov
mov
xchg
jmp
aas
test
push
testb
mov
sub
cs
xor
jmp
ror
sbbb
imul
cld
aam
daa
fnstsw
add
loop
stc
mov
mov
pop
xor
xchg
xchg
mov
int
push
pop
mov
mov
push
movb
mull
xchg
inc
jp
orl
into
pop
jl
jge
mov
xor
lods
jle
pop
and
test
sbb
jg
xor
outsl
loopne
fs
mov
inc
in
jp
or
cmp
dec
in
inc
repz
test
leave
outsl
addb
fwait
addr16
leave
dec
push
xor
adc
out
lea
imul
push
cmc
push
iret
mov
repz
xchg
mov
add
ds
fs
mov
mov
enter
lds
mov
insl
outsl
arpl
or
dec
jo
cmp
sbb
sub
lsl
mov
cwtl
rcrl
leave
iret
jle
ss
mov
and
movsb
mov
inc
adc
imul
fadds
push
popf
mov
sti
xchg
inc
jns
mov
inc
rorb
sub
lret
insl
sub
dec
int3
push
or
jp
push
clc
add
lea
jg
dec
and
lods
shlb
mov
mov
sub
movlhps
mov
push
dec
and
jecxz
xchg
mov
xor
int3
mov
out
flds
lods
and
adc
pop
cmp
enter
call
popa
jb
push
imul
dec
ja
push
push
insl
pop
xchg
aam
shrl
outsb
and
out
xor
xor
pop
popa
and
je
ret
mov
sbb
or
add
jnp
insb
fs
addl
sub
and
ficoml
clc
inc
nopl
lahf
push
adc
push
sahf
lods
push
push
inc
adc
sbb
movsl
in
mov
add
addr16
les
pusha
mov
insb
or
cmp
mov
imul
cmp
nop
lret
jp
or
sub
ds
pop
mov
push
sub
aam
ljmp
out
xor
mov
fsubl
scas
jg
xchg
outsl
cltd
cli
in
inc
and
push
push
cmpsl
loope
fsqrt
dec
mov
in
mov
sub
into
dec
lock
and
popf
ret
jp
test
xlat
mov
jge
mov
pop
in
pop
jmp
into
pop
ret
xchg
push
adc
sbb
hlt
adc
movsl
cmp
aaa
adc
fsubl
mov
test
test
pusha
and
push
cmc
mov
loope
notl
arpl
nop
hlt
add
out
sbb
xchg
jns
jmp
pushf
dec
in
out
or
xchg
mov
mov
pop
aaa
mov
mov
mov
xor
sbb
mov
jmp
rcr
jge
xchg
mov
fildll
popa
lock
add
stc
stos
dec
mov
rorl
out
aaa
int
sub
and
fsubl
mov
test
lock
sub
negb
cltd
or
xchg
inc
das
inc
scas
cli
inc
enter
out
in
xchg
arpl
in
and
jbe
mov
or
mov
xor
aaa
add
sti
mov
and
addr16
mov
int
fdivs
cmpl
xor
fdivrs
or
add
jl
cli
clc
cmc
test
add
js
xchg
push
sbb
mov
cmp
xor
fsub
xchg
mov
xor
mov
push
or
movsl
mov
pusha
aam
xor
cwtl
dec
cmp
mov
xor
loop
outsl
lods
adc
mov
mov
mov
js
sub
addl
sbb
or
nop
mov
insl
adc
mov
cmc
ds
in
lret
fisubs
imull
push
add
outsb
jmp
aaa
aam
cltd
nop
stos
nop
jbe
mov
jbe
jae
dec
adc
mov
push
cld
cs
or
ret
sub
shll
push
xchg
stos
pop
into
aad
xchg
jns
fnstsw
ret
mov
arpl
adc
shll
xor
shr
pusha
mov
pop
jo
cmpsb
mov
jnp
je
mov
inc
adc
mov
push
inc
mov
fbld
std
pop
cmpsb
cs
mov
fwait
push
push
les
inc
decb
jecxz
icebp
or
scas
xor
imul
popa
mov
dec
push
fs
bound
pusha
addr16
fcoml
mov
mov
push
loope
imul
mov
xchg
mov
push
insb
cmp
and
xor
cmp
sub
inc
sti
xor
dec
mov
arpl
lock
pop
in
test
aas
imul
mov
push
mov
xchg
sbb
lods
mov
loop
xchg
pop
jl
add
xchg
add
call
or
sbb
mov
movsb
aad
push
and
sub
mov
xchg
pop
cmc
dec
cmp
es
jecxz
xlat
inc
lret
mov
mov
pop
orb
mov
dec
mov
les
jne
aad
mov
push
leave
dec
inc
xchg
lret
pop
xchg
inc
hlt
and
lret
fisubs
rcrb
ja
lret
xchg
sub
dec
jne
sbb
into
mov
hlt
mov
xor
lea
ret
mov
idivb
fstpl
sub
ror
aas
mov
mov
sbb
pushf
daa
xor
lret
mov
sbb
lcall
cmp
movsb
push
dec
jg
daa
or
aaa
push
cmp
insb
mov
negl
adcb
xchg
xchg
push
mov
test
jle
dec
fucom
call
arpl
sbb
adc
leave
cltd
lcall
negb
aad
pushf
inc
imul
or
mov
out
xchg
decb
jmp
nop
or
hlt
loopne
inc
jmp
sub
popf
aas
cmp
cmp
and
outsl
roll
xorb
jnp
cwtl
sti
popa
lcall
cwtl
into
xlat
jno
les
test
repnz
imul
jo
imul
push
push
insb
push
add
push
fsubrl
or
xchg
push
xchg
and
jae
pop
xor
pop
bound
in
and
je
cmp
or
add
in
or
popf
sub
mov
add
imul
mov
jmp
push
inc
mov
out
adc
sub
jmp
test
stos
insb
out
lock
out
mov
adc
jg
imul
in
and
movsb
jnp
jmp
jle
push
or
xchg
cmpsl
rolb
adc
pop
lock
insb
and
push
mov
or
cmc
faddl
les
mov
ljmp
icebp
mov
out
or
pop
ficomps
or
cli
out
mov
dec
sbb
addr16
xchg
sbb
inc
jb
add
mov
xchg
mov
pop
mov
xchg
dec
xor
mov
cmp
stos
cmp
mov
adc
in
ljmp
inc
subl
lds
ficoml
pop
sbb
out
fisubl
sub
dec
xor
dec
jge
test
in
cmp
or
lret
movsl
je
xchg
decl
xor
loop
loope
in
dec
mov
fcompl
xorl
jmp
and
out
mov
lret
xor
ljmp
push
push
jle
cmpsl
pushf
bound
movsb
mov
add
ds
test
push
add
mov
orb
pop
fsts
roll
jmp
xor
clc
test
ja
insb
shrb
es
cmp
mov
mov
or
mov
adc
xchg
push
sbb
adc
sbb
pop
sbb
jne
sub
inc
xchg
pop
adc
fbstp
add
cmp
add
das
mov
mov
jle
sub
cmp
out
call
roll
hlt
arpl
mov
xchg
and
inc
inc
out
out
test
add
mov
loop
xor
add
add
mov
ret
xlat
sbb
cmp
xor
stos
and
pushl
pop
jge
flds
or
pop
add
xor
sub
mov
test
pusha
push
sbb
hlt
xor
xchg
mov
xor
xchg
or
stos
aas
cmpsb
lods
rcrl
cltd
xlat
sbb
iret
cmpsl
jp
push
les
inc
dec
nop
push
addl
mov
xchg
mov
insl
aam
ds
mov
dec
lea
add
daa
inc
push
in
insl
xor
fisttpl
xchg
ljmp
cli
out
mov
call
orb
arpl
mov
sbb
loop
push
sub
cs
jle
and
das
jmp
loopne
pop
lods
idiv
push
xlat
out
hlt
imul
xchg
cwtl
sub
mov
mov
cmp
shrb
loope
sub
mov
xchg
sbb
sub
sub
in
mov
std
mov
add
fidivrs
add
xchg
js
lahf
fbstp
fcmovb
mov
xor
mov
sbb
mov
int
mov
scas
fiadds
mov
pop
mov
into
mov
dec
push
ds
xor
ja,pn
sub
adc
test
add
or
cmp
add
dec
cmp
fstpt
dec
enter
cmp
loope
in
add
jne
inc
pushf
jecxz
mov
pop
mov
sbb
mov
sub
sahf
out
je
sbb
shr
mov
imul
sbb
pop
lahf
dec
out
push
jne
cmc
fnstsw
push
jnp
add
pop
popa
ds
adc
push
mov
mov
jl
sub
mov
add
lods
xor
test
addr16
sbb
sub
leave
jge
sub
imul
and
pop
add
call
adc
lcall
clc
cmp
pop
jp
fisubrs
mov
cmp
mov
pushf
fadds
cmp
test
jne
cmp
mov
sbb
test
pop
sub
ret
jae
outsb
add
int3
cmp
push
mov
lret
xchg
aam
cmpl
cmp
roll
stos
mov
lods
sahf
shlb
loope
sbb
sti
out
inc
jmp
stc
nop
sub
mov
outsl
aas
jg
inc
add
movsb
nop
sbb
inc
pop
dec
cvtpi2ps
sbbb
xlat
loope
rcr
push
sub
test
negb
mov
push
push
lahf
or
lea
jnp
notl
xor
xchg
ss
mov
or
mov
mov
adc
lods
rorb
jb
in
jne
push
mov
adc
dec
mov
xor
shll
cs
rcr
aas
hlt
xor
aad
and
push
xchg
test
adc
outsl
fs
jo
mov
jle
push
out
loopne
out
inc
cmp
push
mov
inc
sub
mov
push
lret
js
shlb
in
rolb
sbb
popa
sub
ret
push
mov
std
aad
lcall
push
inc
push
mov
xor
push
pusha
inc
jb
or
xor
pop
sti
stos
cli
sbb
aaa
in
int3
movb
dec
push
pop
mov
sub
and
ljmp
cmp
xchg
outsb
orb
cmp
nop
jp
mov
imulb
or
movsb
jg
repnz
in
inc
cli
or
inc
inc
sti
xor
xchg
mov
push
fnstcw
stos
add
imul
push
pop
outsb
jb
jns
push
pcmpeqw
mov
sub
js
jne
addb
cwtl
xchg
mov
pop
dec
adc
ds
push
or
cmp
lret
hlt
jb
push
leave
pop
in
xor
rorb
pop
scas
mov
inc
or
imul
dec
sub
pop
mov
test
mov
push
notl
std
push
pop
cmpsl
hlt
sbb
xchg
fwait
lcall
push
adc
push
loope
push
in
mov
pop
loop
add
fst
daa
push
dec
xchg
mov
cmp
push
add
daa
adc
test
add
fstpt
push
mov
mov
or
adcb
sub
mov
inc
jae
and
mov
daa
adc
cli
leave
out
sub
add
sub
jp
lret
sahf
add
imul
sbb
xor
add
cmp
pusha
fdiv
jnp
jno
cmp
push
or
or
lret
lret
add
test
aas
push
xchg
sahf
cmc
icebp
pusha
pop
cmpsb
or
pop
push
pusha
out
movsb
cmp
mov
ljmp
cmp
ret
push
fistpl
adc
movl
sub
xor
pop
out
xchg
negb
mov
js
movsb
in
pop
test
ss
in
mov
stc
dec
ds
int
imull
or
test
sub
mov
sbb
fisubrl
addr16
xchg
gs
outsb
jmp
popa
and
adc
imul
js
adc
icebp
jns
pop
sub
sub
cmp
leave
sub
rcrl
mov
pop
pushf
xchg
xor
in
mov
cmp
leave
hlt
dec
cmc
je
sbb
jo
push
pop
loop
clc
bts
pop
cli
cmp
push
xor
lret
mov
adc
sub
mov
push
cmpsl
dec
mov
imul
inc
xchg
test
in
pop
scas
xchg
add
push
jg
xchg
pop
xor
ljmp
xor
into
mov
imul
popf
xchg
in
or
xor
and
cmp
mov
jnp
inc
jb
in
mov
sub
insb
push
mov
fbld
mov
out
jnp
sarb
ja
ds
ret
or
arpl
push
xor
sbb
cmpsb
shlb
pop
cmp
adc
mov
lds
mov
lock
jl
cs
rcrb
popa
mov
push
xor
mov
mov
imul
pop
push
cmp
sbb
add
or
pusha
pop
adc
push
orb
xchg
push
xchg
sub
mov
push
push
pop
rcrl
outsl
or
adc
fs
inc
lods
ror
sub
jg
or
cld
cwtl
lods
cli
nop
addb
xchg
inc
loopne
mov
rclb
aaa
jmp
outsb
jp
cwtl
jno
xor
movl
push
dec
inc
xor
pop
mov
push
or
inc
test
sbb
pushf
cmpsl
cmp
and
inc
push
sbb
jle
pop
mov
adc
xchg
xchg
rorl
outsb
adc
dec
inc
aas
adcl
mov
add
rol
and
jne
inc
or
sbb
jae
imul
popa
scas
mov
lods
pop
movsl
cmpsb
lea
fisttpl
sbb
jb
out
icebp
fcomps
push
pusha
fldl
lea
jl
movsb
nop
jne
sbb
fs
std
js
pusha
out
pop
test
aas
push
addl
mul
mov
jecxz
xchg
faddp
ljmp
sbb
push
in
popf
les
mov
out
loop
imul
pop
fdivrl
push
xchg
mov
rorl
je
imul
mov
jle
dec
sub
sub
ljmp
pop
stos
js
dec
mov
or
inc
lret
cli
call
and
fldt
bound
mov
hlt
in
sbb
xchg
lods
xchg
xchg
cmp
andb
ljmp
imul
clc
aad
push
cli
fwait
nop
in
push
sbb
sub
xchg
xchg
pop
mov
frstpm(287
outsb
sbb
cltd
or
adc
xchg
rol
mov
jl
jae
pop
sarl
mov
mov
popf
popf
push
push
insl
or
dec
hlt
lcall
mov
and
cmpsb
inc
ret
jbe
sbb
test
sbb
dec
xchg
push
mov
in
and
sbbl
push
mov
dec
aas
jae
jne
xchg
aad
cli
shlb
push
dec
mov
mov
jp
dec
jg
lcall
and
jae
rol
mov
pusha
sub
jp
shll
cs
ds
loopne
andl
out
sarl
out
ret
push
cmp
aas
mov
inc
fldt
sub
into
add
mov
jno
in
add
pop
ret
pop
lods
in
push
mov
mov
lods
inc
fwait
xchg
stos
add
adc
push
fldl
fstp
xorl
iret
fcomp
push
adcb
xlat
xchg
xor
pop
mov
in
lds
add
out
add
and
cmp
scas
dec
and
push
pop
inc
out
or
mov
inc
stos
das
cmp
mov
xor
jae
test
jb
mov
fsubr
pop
out
test
fucomp
mov
cwtl
sub
or
add
adc
add
push
pop
pop
xchg
test
pop
cmp
jp
imul
fwait
jb
imul
adc
dec
arpl
in
xchg
movsb
mov
mov
pop
cmpsb
shl
sub
push
repz
lock
jo
repnz
add
inc
xor
mov
cmc
pop
lcall
cmpb
les
inc
mov
jg
xor
sub
inc
xor
push
cmpsb
callw
or
int
addr16
popa
iret
mov
aad
js
mov
inc
mov
pop
push
mov
mov
test
sub
aas
push
mov
inc
enter
inc
mov
cmp
inc
fs
js
gs
nop
adc
imul
adc
xlat
fistl
sub
cmp
mov
push
pop
mov
adc
call
shl
or
mov
popf
sub
pop
cmp
cmp
xchg
pushf
mov
mov
aaa
dec
lcall
insl
xor
inc
addr16
inc
sbb
mov
movsb
sbb
and
sub
push
or
aas
sti
mov
dec
dec
cmp
push
cmp
lret
fadds
bound
aad
nop
or
push
dec
sub
js
lds
insl
push
xchg
jecxz
imull
and
cltd
cmpl
xchg
lea
cmpl
cld
mov
mov
int3
jns
xorb
fisttpll
add
inc
sub
jle
seto
adc
std
outsl
mov
hlt
je
push
mov
dec
lods
pushl
pop
pop
nop
and
or
xchg
mov
xchg
test
pop
pop
sub
inc
repnz
out
cmc
adc
mov
stos
and
or
add
xor
rcl
adc
add
ljmp
push
xor
xor
mov
jno
ds
jo
sbb
cmc
outsb
mov
loopne
pop
ret
inc
dec
push
out
subl
cs
dec
inc
xor
and
out
imul
cli
lcall
les
xchg
out
push
dec
fisttpl
out
jl
add
out
in
in
adc
fisubl
imul
mov
data16
pop
fldt
call
xchg
adc
cwtl
data16
and
inc
call
xor
int3
mov
js
mov
sbb
and
or
cwtl
gs
in
mov
lods
jne
xor
repz
in
jns
xchg
in
popa
cmp
xor
loopne
daa
mov
fwait
push
mov
fisubl
push
cs
aas
popf
fadds
cmc
push
pushf
pop
addr16
in
imulb
sbb
add
xchg
mov
add
pop
mov
fstps
mov
shr
cmpsl
inc
sbb
pop
add
test
pushf
mov
pop
pop
lods
aaa
mov
cltd
or
mov
cwtl
cmp
lods
push
dec
gs
cmc
clc
fucomp
les
pop
push
idivl
pop
xchg
push
add
xchg
dec
sbbl
push
lahf
jge
xchg
jno
hlt
mov
and
jl
ds
pop
cmpsl
cmp
and
lret
jg
push
and
loope
je
mov
out
stos
in
dec
inc
jnp
mov
mov
add
lods
cmp
shlb
test
lods
xchg
test
daa
aam
lds
jb
shrl
dec
pop
ljmp
movsl
push
f2xm1
push
inc
mov
aas
ret
pop
push
pop
subl
pop
das
pop
aad
adc
jmp
aas
addb
aam
or
fisubl
dec
inc
ret
jns
lods
stc
pop
sarl
pop
cli
mov
bound
pop
fcomps
scas
dec
sub
sub
jo
dec
mov
dec
jne
nop
flds
mov
lahf
dec
xor
pop
adc
fnstenv
add
inc
inc
cli
cmp
rclb
into
xor
cmp
sub
mov
add
cmp
fs
test
test
mov
and
je
nop
inc
fsubl
cltd
add
cmp
jbe
sbb
test
imul
adc
xor
incb
scas
xor
mov
setno
popa
je
jbe
cmp
xchg
int
in
push
adc
das
pop
mov
xchg
in
scas
inc
clc
jb
out
xor
mov
push
je
jl
sarl
hlt
outsl
nop
fadd
orb
xor
dec
pop
ss
or
add
stos
or
push
lret
mov
bound
popf
iret
das
lea
icebp
fidivrs
pop
ss
cmpsl
pop
cmp
outsl
mov
push
sti
xchg
out
pop
cli
jecxz
insl
fcmovnbe
cld
xchg
adc
lcall
mov
mov
xor
push
cld
xchg
and
mov
in
ds
xor
inc
ljmp
jge
pop
movsl
dec
sbb
mov
cmp
lea
cmp
and
orl
push
xchg
sub
jmp
outsb
and
subl
call
scas
cmc
mov
test
sahf
cmp
in
add
ret
in
icebp
dec
xchg
and
mov
mov
push
std
lods
cmpsb
cmc
or
push
jo
pop
repz
dec
mov
pop
roll
mov
adc
sbb
pop
jns
adc
popf
dec
jp
loopne
mov
mov
ret
and
sub
and
xor
push
mov
pop
subl
sbb
xor
dec
adc
lods
lods
sub
sub
movsl
pop
xchg
mov
ret
sub
push
repz
xchg
daa
jg
sub
jo
stc
pop
or
test
and
sub
xchg
dec
mov
cmp
test
cwtl
xor
adc
sbb
jnp
jge
les
cltd
fisubs
mov
std
pop
mov
cmp
or
loopne
daa
jle
imul
jno
push
andl
sub
lret
xchg
ret
ret
mov
out
fisttpl
std
xchg
popf
cwtl
pusha
sbb
cs
jb
cld
xor
or
sti
out
add
mov
loope
cli
imul
cli
jl
cmp
mov
cli
ja
and
inc
pop
jg
xchg
insl
or
jmp
pop
ret
adc
int3
dec
mov
xor
rolb
mov
mov
fsubl
int3
insl
sbb
adc
inc
test
mov
stc
hlt
pop
out
mov
aaa
jl
in
shll
pop
mov
into
lret
add
repnz
and
popf
shl
sbb
loopne
insb
lock
in
add
sti
cmpsb
xlat
inc
xor
es
int3
and
sti
int
dec
jecxz
inc
loope
test
daa
xchg
sahf
jmp
imull
mov
or
mov
int
jbe
sbb
inc
adc
adc
aad
add
mov
and
out
pop
lods
cmpsb
xchg
cltd
insl
jl
jg
dec
enter
inc
cmc
cltd
pop
xchg
iret
jl
xor
leave
inc
adc
movsl
adc
xor
jnp
rcl
jecxz
test
cmp
jne
ret
stos
into
pop
jbe
imul
sub
push
adcl
in
mov
or
frstor
mov
jge
mov
jle
dec
push
inc
cmpsl
mov
xor
inc
inc
lods
int3
paddsw
and
outsl
out
adc
and
add
jb
pop
mov
dec
or
iret
adcl
in
incl
stc
lods
mov
mov
sbb
cmp
dec
int3
jp
loop
cmp
shll
repz
mov
cwtl
icebp
pop
ja
aam
int
or
mov
adcl
mov
and
stos
ret
mov
mov
lret
jp
mov
jnp
sub
stos
and
stc
ror
mov
iret
push
outsl
add
stc
dec
xchg
push
adc
jbe
dec
cmp
mov
jl
jbe
inc
xchg
jecxz
dec
adc
xchg
and
and
pop
inc
nop
push
adc
popa
sub
bound
aad
in
sbb
cld
jg
shlb
insl
aaa
scas
push
mov
out
push
lods
hlt
inc
push
lret
mov
idivl
xchg
inc
repz
inc
add
popf
cmp
push
out
dec
ss
rol
xchg
loope
push
lds
pop
inc
sub
out
lock
mov
push
dec
cs
mov
mov
lret
dec
sbb
fstpl
dec
xlat
xor
xor
pop
lock
jnp
pop
sbb
aam
in
dec
xor
mov
mov
hlt
stc
xor
out
inc
dec
imul
pop
mov
pop
data16
xchg
push
mov
pusha
push
mov
nopl
out
pop
insl
dec
xchg
mov
add
push
xchg
pop
add
je
sub
sbb
or
fsubs
add
xchg
subb
add
lret
dec
lods
in
adc
je
test
jp
aam
adc
cmc
ja
fsub
sbb
fmuls
testl
mov
data16
xchg
pop
lcall
inc
fldcw
jns
ljmp
jns
jbe
cmpsl
fmull
cmp
insb
inc
sub
cmp
mov
add
jecxz
push
insl
cs
sub
imul
mov
stos
pop
out
or
lock
push
adc
adc
stos
push
mov
xor
into
mov
or
or
sti
fcmovnbe
add
pop
add
fstpt
out
xchg
mov
repz
std
sbb
insl
sti
inc
xor
jne
cs
pop
shll
pop
push
fsubrs
add
xor
fst
cld
pop
dec
mov
cmp
mov
leave
cltd
inc
adc
add
into
push
xor
subb
push
push
xchg
mov
test
ss
sub
jne
sbb
leave
mov
cltd
sub
sub
movsb
or
call
lods
fadds
dec
and
jmp
les
and
leave
xchg
xchg
std
inc
push
jns
fdivl
inc
je
ja
mov
insl
ja
xchg
das
lds
daa
loopne
cmp
rclb
ds
jle
fadds
pop
xchg
add
daa
cli
bound
jno
nop
mov
out
mov
push
test
cmp
mov
sub
das
and
insl
jg
xor
xchg
cs
pop
mov
pop
mov
dec
lcall
in
and
inc
icebp
loopne
xor
xchg
adc
std
or
fistpl
jg
into
adc
outsb
mov
sbb
int3
pusha
cmpsb
imul
shl
mov
outsb
cs
inc
mov
fdivrl
push
popf
sub
loope
icebp
stc
arpl
and
stos
dec
dec
sti
ret
add
cli
dec
je
sbb
mov
mov
mov
and
mov
push
jo
sbb
ret
jecxz
add
mov
jmp
call
ret
test
incl
out
pop
mov
sub
jp
xor
xchg
and
cld
cmpsb
ret
cmp
fwait
jb
movups
outsb
loopne
cmc
cmpsb
inc
sub
mov
xor
bound
mov
push
icebp
sbb
xchg
cld
mov
call
lcall
je
fdivrp
dec
ret
jmp
loopne
adc
jno
jne
cmp
fstps
cli
pop
and
jg
dec
movsl
leave
pop
rcll
lds
push
dec
stos
outsb
aam
sarb
fwait
shlb
es
dec
in
insb
sub
leave
push
inc
adc
ljmp
fidivrl
iret
and
outsl
fists
dec
cmp
loop
cmpsb
sub
call
inc
cmp
mov
push
xchg
sub
lock
pop
xor
cmp
add
movsl
std
jl
cmp
pop
add
pop
inc
aaa
push
mov
ljmp
and
mov
aaa
aaa
sbb
out
mov
push
push
stos
mov
in
sbb
cli
cli
pop
incl
fucomp
mov
out
testb
ljmp
pop
pop
sti
adc
cmpsb
mov
das
mov
outsb
cmpsb
cmpsb
cmc
cmp
loope
pop
inc
sub
into
loopne
add
ret
mov
push
sbb
and
mov
cmp
push
xchg
test
hlt
xor
cmc
aam
xor
stos
mov
pop
test
or
int
nop
xchg
test
aam
lods
pop
out
icebp
js
pop
lock
pop
jb
jp
int
lahf
aam
aam
ret
or
test
lock
push
inc
mov
pop
lods
stos
packssdw
mov
push
das
ret
push
cmp
test
pop
pusha
lret
mov
arpl
std
push
cwtl
stos
add
fmuls
cmp
lret
and
fisubrs
into
cmp
sub
mov
push
xlat
xor
mov
xlat
jno
xchg
xchg
mov
enter
cmp
fisubrs
fistl
mov
ja
mov
wbinvd
xchg
fwait
dec
ffree
xor
ret
leave
cmpsb
scas
mov
push
out
sub
inc
mov
sub
jle
pop
xchg
iret
cld
ret
divb
sbb
jb
out
pop
nop
negl
or
test
mov
mov
leave
sbb
neg
sub
stc
or
and
outsl
clc
inc
out
inc
adc
pop
adc
ss
outsb
test
jge
mov
and
xchg
stc
ret
adc
test
jge
push
sub
jne
pusha
xchg
pop
and
mov
add
xchg
adc
lods
adc
and
adc
cmpsl
push
adc
adc
inc
sarl
cmp
or
and
fs
ljmp
aad
fcoms
mov
enter
xchg
cmp
je
mov
push
test
mov
inc
pop
push
push
rcll
or
fldcw
das
jp
xchg
or
stc
fistps
dec
add
push
xchg
dec
outsl
mov
in
cmp
push
lds
jge
pmulhuw
jno
ret
scas
dec
inc
push
mov
into
rcrl
rorl
ss
sub
scas
repz
push
inc
mov
or
cmpsb
loope
mov
shlb
sbb
xor
sub
les
xor
insb
movsb
test
ss
lahf
push
lods
mov
push
inc
mov
mov
popf
push
pop
fcomps
les
and
dec
test
add
test
pop
mov
repz
sahf
add
jg
bound
shrl
inc
int3
cmp
je
lock
jge
pushf
mov
sub
pop
stc
push
movsb
adc
jae
cmpsb
cmpsb
mov
xchg
jno
jecxz
jns
cwtl
insb
ds
int
lea
jle
sub
xchg
xchg
dec
mov
inc
adc
sub
shlb
cmc
enter
dec
pop
jmp
push
push
dec
cmp
mov
jge
lock
lea
or
xchg
repz
push
jecxz
gs
cli
mov
fmuls
xor
mov
aad
orl
test
mov
addr16
inc
cmpsb
movsb
mov
mov
daa
jle
dec
mov
sbb
xchg
mov
call
xchg
mov
shl
iret
mov
aam
into
arpl
or
popl
xor
inc
imul
ja
xchg
jno
fcompl
dec
add
ret
insb
add
aam
js
scas
inc
xor
stc
loope
xor
xor
fnstenvs
push
pop
loop
mov
xchg
sub
scas
pusha
inc
lods
xlat
mov
or
roll
stc
push
and
sbb
imul
loop
out
js
dec
mov
bnd
mov
cltd
ret
dec
movsl
or
ffreep
aaa
loope
in
mov
jbe
test
mov
lea
jmp
into
fs
xchg
sub
mov
jo
pop
fstl
fsubl
fs
lret
test
aad
add
pop
adc
loopne
lock
push
pop
inc
jecxz
xchg
lods
fimull
xor
sbb
push
dec
xchg
jge
stc
mov
add
adc
jae
sarb
js
jo
pop
add
xabort
mov
jbe
adc
lods
les
dec
jg
xchg
sar
xchg
jmp
das
sbb
sub
sub
movsb
movsb
jae
in
push
pop
leave
lahf
pushf
jg
adc
or
xchg
mov
stos
test
test
jne
jne,pt
iret
cli
or
jno
xchg
cmc
sbb
popf
jecxz
mov
enter
dec
ficoms
iret
or
stc
sub
jo
xlat
push
cli
aas
clc
mov
fcmove
into
lret
mov
fisttps
xchg
xchg
shlb
ljmp
xor
das
xlat
and
stos
mov
in
xchg
dec
out
sub
or
xchg
adc
test
push
les
stos
imul
imull
mov
cmpsl
mov
daa
std
inc
fsubr
push
mov
loop
mov
adc
xchg
xchg
ss
cs
cmc
cmp
sti
es
xlat
inc
xchg
in
add
xchg
movsb
xor
les
repz
dec
mov
pop
ljmp
call
cmc
outsl
mov
daa
sub
mov
fidivrl
jno
jns
cli
dec
mov
leave
add
and
mov
adc
cld
add
out
or
lds
ja
push
cmp
jmp
xor
es
loop
das
je
subb
cld
mov
loop
les
mov
inc
lret
std
and
nop
fadds
sub
pop
mov
std
aad
test
int3
bound
cmp
out
mov
pop
pop
bts
inc
xchg
or
and
pop
pop
xor
mov
popf
cld
stos
cmc
ds
in
sub
cwtl
inc
xor
xchg
jmp
inc
jb
jg
mov
push
lahf
dec
pop
lret
xor
test
pop
push
movsb
adc
dec
ret
mov
shrl
xor
sub
call
pop
xchg
fnsave
push
stos
xchg
sbb
add
in
add
jl
jg
push
jl
mov
cs
jp
inc
xchg
cltd
push
out
and
xor
add
cmpb
mov
or
jae
ja
and
int3
inc
sbb
and
xchg
out
cs
jns
popa
or
sub
fcomps
dec
jmp
add
mov
out
lods
mov
inc
shll
adc
addl
mov
push
xchg
pop
cwtl
and
es
jg
push
hlt
sbb
test
jmp
imull
loope
test
xor
or
dec
mov
sub
sub
lea
ror
ja
adc
pop
push
pop
sub
push
lret
xchg
popl
mov
xor
mov
push
cmp
ja
add
adc
sbb
pop
std
xor
lcall
add
mov
add
push
dec
adc
adc
repz
pushf
jg
sbbb
stos
ds
mov
test
rcrl
rorb
std
icebp
pop
call
xchg
shlb
xchg
lock
loope
scas
adc
lret
xchg
iret
mov
push
repz
in
mov
inc
es
popf
cwtl
leave
xorps
decb
mov
pop
test
mov
and
push
jge
mov
ret
and
orl
or
push
pop
mov
mov
push
mov
fidivrs
cmp
cmpsb
mov
inc
xorb
and
into
insb
xchg
neg
sarb
xor
xchg
test
and
shll
xchg
cs
push
movsb
pop
xchg
stc
pop
jb
lret
sbb
xchg
loopne
xorb
stos
push
js
and
out
into
lahf
mov
addr16
and
xor
hlt
mov
lret
je
in
imul
fiaddl
in
clc
pop
push
aad
out
mov
and
fdivl
adc
dec
ljmp
lahf
or
sbb
orb
jbe
fimull
shrl
pop
dec
cmp
outsb
inc
mov
das
mov
std
mov
fsubl
sub
mov
cmc
loopne
cmp
lret
sti
mov
ds
jmp
andb
lock
xor
scas
lock
pop
aas
jno
mov
stc
sbb
cmp
arpl
imul
sub
push
shlb
cmpsb
out
and
jecxz
dec
mov
jnp
pop
pop
aad
mov
fisttpll
in
mov
icebp
adc
daa
daa
jne
mov
sbb
adc
stos
int
push
xor
arpl
add
sub
mov
fstpl
orl
mov
jb
xchg
fnstenv
xchg
int
xor
out
fistpll
inc
cmp
notl
push
movsl
inc
and
jae
imul
adc
cvtps2pd
imul
jg
into
pop
xchg
inc
mov
lret
and
jns
sbb
jp
int3
fstpl
mov
ret
jnp
adc
inc
scas
aad
hlt
iret
jge
lock
pop
and
inc
mov
jnp
shlb
fdivl
frstor
mov
sbb
xchg
xor
pop
ss
push
pop
daa
daa
movsl
push
ljmp
cmc
stos
adc
int3
pop
add
scas
xchg
adc
cld
jnp
pop
xor
nop
xlat
xchg
dec
and
mov
dec
jle
outsl
pop
mov
adc
pop
or
pop
addr16
push
out
leave
inc
cmp
pop
mov
pop
push
xor
sti
cmp
jge
inc
out
sub
fidivrs
inc
sub
sar
xchg
push
sub
lds
dec
pop
gs
sti
aaa
pop
cmp
out
cld
or
rclb
inc
mov
in
mov
jmp
call
xchg
xor
lret
cwtl
aas
xor
push
nop
test
lret
sub
cwtl
dec
shlb
cli
jmp
inc
test
pop
push
ds
mov
cltd
bound
es
mov
or
icebp
imul
aas
ds
stc
stc
leave
or
ds
push
out
mov
jnp
xchg
cmpsl
cwtl
frstor
loopne
lahf
or
add
and
cs
movsl
adc
xor
rclb
mov
adc
lea
movsl
int
andb
cwtl
jp
sti
adc
xor
dec
dec
adcb
dec
mov
push
sbb
or
xor
cmp
or
push
lret
xchg
imul
out
dec
jmp
lret
mov
les
shll
pop
mov
stc
mov
ja
orb
fcomps
decb
xchg
idivl
fdivrl
sti
addl
lret
pushf
push
pushf
inc
stc
mov
push
subb
xchg
insb
jno
lret
add
adc
ss
push
add
mov
push
je
inc
pop
mov
cmpsl
inc
push
sar
and
inc
jmp
mov
dec
xor
lods
imul
pushf
adcb
dec
mov
lret
xorl
sbb
add
inc
cmp
jne
clc
pop
movsb
inc
adc
mov
mov
push
mov
mov
pop
jns
pop
cltd
aaa
or
mov
mov
inc
inc
mov
cmovb
dec
adc
in
loop
ljmp
push
addr16
and
arpl
mov
xchg
negb
fs
fnstenv
push
or
in
push
insl
loopne
pop
xor
mov
and
mov
sti
jb
push
ror
push
xchg
mov
inc
daa
addr16
ror
xchg
or
fdivl
popf
daa
xchg
aad
push
cmp
movl
adcl
out
and
jne
sub
sub
mov
incl
or
fs
xor
test
hlt
loopne
and
or
aaa
cmp
fcomip
push
mov
cwtl
mov
pop
imul
dec
lea
enter
clc
fnstenv
inc
jg
repz
pop
dec
imul
sahf
stos
fiadds
sbb
test
sub
cmp
or
jge
sub
das
add
adc
scas
jle
mov
jb
sahf
lods
je
imul
cmpsb
sbb
lods
fidivrl
and
jl
ret
repnz
mov
adcb
mov
aam
iret
stc
mov
stos
pop
mov
jns
mov
mov
cwtl
loope
iret
pop
shlb
jmp
popa
xchg
mov
push
sti
lret
fisttps
mov
inc
stos
mov
mov
jb
push
mov
test
xor
inc
mov
int
aad
add
xchg
push
pop
pop
lcall
sbb
push
xlat
shll
pmaxub
jle
cmpsl
inc
mov
testb
pop
push
xchg
adc
bound
pop
imul
adc
movsl
cmc
sub
lea
cltd
into
gs
jge
xor
icebp
fisubs
adc
lods
lcall
pop
fcmove
adc
fcmovnu
pop
cmp
or
or
popa
dec
mov
js
xor
lret
cs
jo
or
aad
loope
lds
pop
jg
inc
fldenv
imul
fmuls
loop
cmp
lods
sbb
sbb
jne
jbe
push
in
ret
imull
dec
je
aad
jns
popa
stos
mov
sarl
lods
xlat
ds
mov
pop
cmpsb
fisubs
js
dec
icebp
cs
insb
jbe
paddusw
pop
ds
cmp
popa
es
in
mov
xchg
or
add
xlat
sbb
and
xor
clc
cmpsl
adc
dec
jb
addr16
jecxz
fsubrl
lret
out
or
in
stc
nop
dec
xor
hlt
insl
fistpl
jo
loopne
cmp
fmull
push
pusha
test
pop
mov
cmp
shrb
xchg
jo
loopne
test
popl
mov
ret
in
leave
adcb
test
sub
sbb
rolb
ret
sahf
push
cld
js
sti
idivb
loope
clc
scas
sahf
dec
ret
dec
leave
cmp
xchg
shl
or
aam
and
sub
jne
ja
movsb
scas
sbb
lret
adc
test
call
cmp
push
sbb
shlb
out
fs
mov
mov
test
dec
int
sbb
push
xchg
lahf
push
adc
jmp
mov
mov
arpl
push
stc
xchg
mov
pop
ljmp
push
jbe
movsb
push
ds
add
cmp
inc
lret
xor
mov
and
fcoms
jecxz
flds
sub
dec
add
insl
mov
sbb
adc
xlat
pushf
cltd
repnz
rcll
mov
clc
ror
lret
ret
jecxz
mov
fildll
jne
enter
insb
fbstp
out
or
aam
push
sahf
ficoml
bound
rorb
sbb
stc
push
push
push
and
sbb
stos
or
mov
mov
mov
aad
jno
pop
xchg
sahf
push
dec
enter
sbb
sahf
jb
andb
and
mov
mov
adc
mov
mov
adc
fisubrl
repz
adc
sub
in
xchg
outsb
dec
inc
and
jle
js
fidivs
testl
dec
mov
push
and
in
push
cmp
clc
inc
js
add
xchg
cmp
adc
jle
and
inc
dec
push
into
loop
mov
loopne
sbb
inc
or
test
loopne
cmp
mov
in
jno
mov
mov
inc
cmpsl
dec
mov
clc
movsb
jl
pop
dec
and
rcpps
repnz
stos
aam
adc
mov
into
add
ret
rcll
dec
pop
xor
insb
cmp
sbb
cltd
ja
ret
lods
out
xchg
mov
loope
jmp
fmull
popf
jno
fidivrl
cli
movsl
mov
movsl
lea
and
add
jb
add
cmpsb
je
clc
sti
ficoms
mov
add
outsl
adc
addr16
pusha
fsubrl
leave
pop
push
xchg
push
cmp
pop
push
jb
mov
aaa
push
or
add
jb
test
hlt
xchg
add
cmpsl
lahf
pusha
rcrl
sub
jp
jle
cmpb
push
sarb
pusha
dec
jae
or
enter
cmp
jl
lods
xor
addr16
cld
cltd
or
lods
mov
incl
mov
push
out
cmp
jge
out
cmp
adc
test
ret
mov
das
mul
or
mov
lahf
xor
push
leave
mov
adc
js
jmp
repnz
mov
outsb
and
sbb
push
jecxz
add
cltd
repz
ja
ret
xchg
jmp
pusha
cmp
push
mov
lahf
ror
mov
mov
push
push
mov
cmp
popf
lods
out
jbe
lret
jno
and
cs
fsubl
adc
in
xor
inc
movsb
dec
pop
or
test
mov
cmp
pop
inc
xchg
xorl
or
mov
jp
dec
mov
shl
out
push
xchg
lahf
push
scas
xor
test
inc
clc
adc
adc
scas
mov
jg
ret
xor
pop
shll
lock
xlat
or
ret
lea
xchg
dec
pop
fucomp
adc
push
dec
inc
jae
mov
mov
push
insb
jnp
mov
in
pop
jnp
lret
xor
pop
cmp
pop
cmp
stos
pop
fs
mov
mov
out
push
sub
inc
sbb
sub
adc
push
push
leave
pop
inc
mov
dec
inc
stc
pusha
mov
mull
push
sub
dec
pushf
jge
cmp
stos
or
ret
repnz
test
fwait
out
push
outsl
mov
dec
cld
test
out
cmpsb
dec
lods
inc
icebp
inc
mov
xor
xchg
adc
loop
out
lahf
mov
sahf
repnz
loop
shlb
xor
ret
adc
xor
jns
push
jno
mov
stos
ss
dec
fcoms
mov
inc
jp
mov
push
mov
inc
outsl
xor
std
adc
push
inc
ljmp
push
jns
sub
xchg
jns
fcmovne
in
xchg
mov
push
stos
cmp
or
fwait
cmp
daa
ljmp
sar
mov
faddl
ds
imul
arpl
push
test
xor
pop
dec
cltd
inc
pop
shrb
push
test
mov
arpl
inc
pop
jecxz
dec
push
imul
fidivrl
mov
jecxz
aas
icebp
ja
rclb
loope
shlb
xchg
rcrl
in
sbb
inc
cmp
sub
dec
sub
inc
and
push
pop
jmp
dec
jae
fsubr
hlt
lds
cwtl
leave
pop
lods
add
xor
pop
test
mov
pop
out
and
lea
adc
sar
ljmp
icebp
fdivrl
xchg
outsb
sbb
in
popa
stos
dec
or
push
fnsave
out
setne
jle
bnd
shll
adcb
mov
dec
inc
mov
cmp
inc
dec
push
lcall
push
je
das
int3
xchg
enter
jg
adc
jg
sar
imul
lcall
add
pop
out
fidivrl
shlb
test
xor
and
movsl
ret
pushf
cmp
adc
imul
add
cmp
btc
arpl
movsb
xchg
dec
mov
leave
xchg
pushf
imul
outsb
out
loop
insl
iret
xor
int3
adc
dec
out
scas
leave
test
cmpsl
inc
movw
xchg
jo
insl
fwait
inc
mov
mov
cmp
iret
pop
mov
sbb
repz
xor
lods
lret
push
xor
sbb
stos
pop
add
inc
mov
xor
aaa
test
cwtl
rcll
push
fnstsw
shl
rorb
jb
inc
outsl
aas
sbb
add
inc
out
lods
jno
insb
jb
sbb
pushf
xchg
fsubl
sbb
stos
jge
dec
jl
mov
aam
sbb
arpl
stos
sbb
arpl
push
xchg
je
fcomi
iret
cwtl
cmp
cmp
cmp
xor
xor
popf
and
shl
xlat
add
popa
addb
into
xchg
iret
sahf
dec
cmp
out
mov
dec
shlb
add
xchg
xchg
xchg
sbb
xchg
jne
leave
sbb
inc
sbb
ret
mov
pusha
push
les
out
shrb
dec
sub
mov
push
aaa
movsb
or
testl
ja
jmp
fcomi
in
cmp
icebp
jb
mov
push
ja
jnp
repnz
jl
in
and
xor
sbb
addr16
in
outsl
loope
inc
inc
dec
dec
xor
and
icebp
mov
into
xor
pushf
xchg
jb
push
dec
aad
dec
int
loop
lahf
cltd
sbb
cwtl
decl
into
pop
sub
jns
jg
rorl
fcmovnbe
outsl
inc
mov
pop
je
das
sub
nop
mov
xor
pop
adc
insl
xchg
mov
cmc
push
mov
xchg
fistpl
inc
into
push
jecxz
fldl
lret
inc
mov
sbb
xor
adc
in
cmp
filds
push
popa
addr16
mov
cmpsl
mov
insl
push
cmp
add
pusha
sub
and
or
or
daa
dec
sbb
stc
mov
out
inc
popf
mov
and
lods
jmp
cmp
insb
sahf
in
cltd
pop
cmpsb
jbe
imul
sub
mov
pop
andl
stos
jp
repnz
in
dec
mov
rorl
or
add
mov
addr16
mov
cli
xlat
jae
cld
sub
icebp
enter
test
mov
inc
cmp
or
adc
roll
mov
and
adc
and
ja
push
stos
lret
icebp
dec
sarl
out
or
lret
lahf
mov
popf
scas
fldt
aad
stc
cmpsl
adc
in
push
or
pop
mov
push
push
cmp
cmp
push
adc
lock
into
dec
jno
push
dec
pop
scas
inc
adc
out
mov
xlat
inc
roll
loopne
xchg
lret
pop
int3
push
mov
stos
adc
popa
dec
mov
arpl
cmp
sbb
insb
push
push
inc
pusha
and
notl
in
rdtsc
add
test
ss
jle
out
adc
stos
out
stc
inc
leave
shrl
jp
xlat
fsubrp
cs
subb
pop
cltd
mov
pop
inc
movsb
iret
sub
iret
or
push
cltd
add
mov
xorl
sub
es
mov
and
fsqrt
or
jmp
lcall
xchg
gs
outsl
push
movsl
dec
inc
adc
pop
pop
mov
xor
mov
mov
inc
and
hlt
pop
and
xor
shll
pop
call
sahf
sub
sub
xor
pop
mov
lock
in
jle
jbe
xor
mov
fisttpll
imul
jnp
nop
mov
movsl
outsb
sar
mov
rcrb
xchg
inc
push
jbe
pop
std
test
jl
xor
cmp
mov
idivl
imul
insb
pop
out
mov
sbb
mov
push
xchg
mov
in
push
xor
outsb
sub
icebp
sbb
loopne
xchg
fs
jns
jbe
in
das
and
pushf
scas
mov
and
mov
movsl
movsl
lahf
movsl
cmp
adc
jne
test
and
or
xor
cmp
ds
push
les
loope
ss
and
pop
xchg
and
mov
in
rclb
mov
hlt
xchg
lret
mov
xchg
lock
ja
movb
in
push
and
shr
popa
icebp
js
inc
scas
lods
outsl
fsubs
mov
jg
pop
repnz
pop
repnz
adc
jb
lret
xchg
xchg
test
pop
hlt
inc
jae
inc
cmp
push
call
aas
and
pop
mov
lahf
adc
pop
dec
sbb
setns
gs
pushf
test
jns
mov
test
fsubs
sbb
push
push
pop
sub
push
sti
pop
cwtl
ror
push
mov
lret
xchg
jb
cltd
mov
rorl
test
mov
mov
push
or
mov
outsl
test
je
sub
jp
mov
jmp
sbbb
cmc
mov
ficoms
cli
add
adc
loope
inc
sahf
gs
xchg
mov
nop
out
add
bound
stos
lcall
cmpsb
push
out
std
jns
cmpsl
jnp
sbb
sarl
dec
in
sbb
and
jne
xchg
insb
inc
or
mov
dec
fs
sub
lahf
lock
aaa
push
insb
sub
cmp
sti
popa
cmp
jmp
dec
pop
inc
dec
imul
fstl
mov
jg
ret
jno
xor
iret
xchg
cmpl
int
mov
aaa
push
cmp
pushf
in
lods
ss
cmp
sub
jbe
lods
and
dec
push
or
adc
fstpl
inc
cmp
adcl
push
enter
fsts
stos
jne
popf
mov
aaa
punpcklbw
push
cld
lahf
out
lds
cmc
bswap
sbb
xor
add
adc
cld
pop
push
add
icebp
leave
adc
lods
push
sub
pop
dec
sub
imul
insl
dec
mov
push
int3
les
jae
mov
leave
idivb
aaa
inc
into
dec
and
sbb
pusha
outsb
mov
test
aam
add
hlt
inc
pop
cltd
jp
add
sub
dec
pop
adc
loop
ds
sahf
dec
notl
adc
mov
insl
add
cmp
xor
adc
cmp
inc
sti
xchg
jne
ss
add
nop
or
insb
dec
adc
dec
xchg
sub
clc
and
inc
cmp
pop
loop
xchg
pop
sarl
fldl
adc
jmp
cmp
aas
pusha
fisttps
xor
js
mov
jns
lock
fiaddl
lret
lret
jne
pop
std
or
aas
dec
or
push
dec
popf
frndint
shlb
pop
in
mov
in
pop
hlt
out
insl
sbb
dec
jae
jge
xor
mov
mov
fisttps
ret
enter
push
and
call
arpl
lahf
nop
mov
imul
in
js
scas
and
xchg
outsl
add
xchg
jle
pop
arpl
jae
aaa
data16
jge
push
push
push
mov
js
xchg
pop
hlt
mov
cld
loop
push
and
mov
dec
lock
and
push
pushf
mov
jmp
and
jns
xor
inc
aam
jbe
mov
mov
cmpsb
std
leave
xor
fadd
das
xchg
insb
xor
imul
in
mov
cmc
dec
cmpsl
fsts
imul
stos
mov
jle
xchg
notb
ds
enter
mov
mov
inc
pop
mov
adc
add
aad
sbb
ffree
adc
inc
push
lret
pop
or
mov
jmp
xchg
pop
xlat
xchg
sub
xchg
outsb
test
jecxz
xchg
fsub
push
test
mov
adc
lods
fsubl
icebp
sbb
lret
xor
hlt
mov
or
stc
sahf
mov
fdivrl
jmp
mov
outsb
hlt
js
rorb
pop
push
out
sub
sbb
mov
fadds
fs
cmp
aas
test
lret
imul
call
lahf
int3
add
inc
test
fnstsw
shll
xchg
cmp
fisttpl
les
je
cmc
cld
xchg
out
loope
movsl
into
mov
ljmp
pop
sub
xor
ljmp
push
leave
jp
aaa
add
icebp
adc
icebp
repnz
sub
push
and
push
mov
and
mov
pop
bound
out
out
pusha
xchg
cmpsb
dec
push
pop
xchg
push
cmp
dec
leave
in
add
xchg
push
pop
aam
out
pop
cmpsl
mov
mov
sbb
xchg
gs
stc
js
imulb
adc
push
gs
ja
imul
cmp
jl
pop
imull
fdivl
sub
fstps
jno
sub
mov
mov
ds
xchg
mov
xor
aam
aaa
and
pop
adc
js
cmp
loope
out
add
sahf
daa
mov
jno
adcb
pushf
cs
push
scas
in
mov
dec
pop
stc
ds
aam
jge
cmp
pop
nop
bound
xchg
cld
in
lahf
mov
cmpsb
iret
lods
push
push
inc
pop
push
movsb
rcrl
cmpsb
xchg
cmp
stc
cmpsl
mov
decl
adc
inc
jle
bnd
dec
push
push
loopne
loopne
pop
ds
pushf
loop
fstpl
lea
test
loopne
ret
aad
lahf
or
clc
fstl
lock
mov
aad
cmp
pusha
lods
std
adc
aaa
sub
mov
pop
mov
cmpsb
mov
lods
ror
mov
dec
jno
repnz
subb
hlt
dec
stos
les
mov
repz
pop
andl
incl
int
jecxz
jae
shlb
lret
xor
out
fs
jmp
dec
cmp
leave
cmp
dec
jle
mov
mov
dec
aam
inc
rcr
cwtl
mov
mov
fiaddl
pop
and
cmp
ss
inc
mov
add
aam
sub
rorb
pop
hlt
insb
push
movsb
cmp
pop
push
push
mov
insl
jge
inc
scas
loop
and
test
push
or
dec
pop
cli
xchg
push
clc
push
dec
leave
push
xchg
nop
pushf
outsl
sbb
xchg
ror
add
ret
in
sbb
cmp
and
inc
test
dec
sub
jg
xchg
dec
and
sarb
fbld
push
inc
xor
adc
push
and
mov
mov
xchg
xor
ljmp
cmp
ret
out
mov
mov
jae
je
stos
cmpsl
add
push
movsl
shrb
jecxz
cs
nop
std
mov
lret
outsb
cs
int3
lods
insl
cmp
pop
add
cwtl
ret
push
fdivrl
cmp
in
mov
add
adc
mov
push
dec
out
xchg
jo
xor
pop
fisttps
push
out
xchg
pop
je
inc
sub
pop
or
sub
mov
sbb
push
sbb
out
add
dec
push
jbe
imul
add
call
add
sbb
mov
hlt
mov
cmp
inc
sahf
and
push
aaa
adc
jmp
movsb
xlat
jbe
jl
jb
add
inc
movd
lret
push
lea
test
push
mov
scas
mov
jl
shl
cmpsb
jl
add
dec
ret
jbe
sbb
push
jp
sub
jne
mov
ja
bound
adc
jo
mov
inc
cmp
into
mov
lret
jecxz
pop
sbb
dec
repz
outsb
push
adc
sbb
push
ret
je
sub
shll
sub
jno
aam
sbb
mov
fildl
sti
ljmp
arpl
mov
gs
pop
jge
add
add
pop
mov
adc
cmp
scas
dec
xchg
sbb
xchg
add
pop
dec
or
mov
mov
lahf
filds
mov
sbb
sbb
loopne
ret
mov
fucompp
adc
mov
int3
in
push
adc
jnp
pushf
add
cmp
xor
cmp
loopne
aam
addb
add
push
dec
fdivrl
push
mov
sahf
and
mov
adcb
cltd
sub
fiaddl
lock
sub
movsb
xor
inc
mov
pop
cld
xor
addl
leave
push
dec
sub
or
ret
lahf
jb
int
mulb
and
stos
mov
cwtl
lret
push
lods
sub
mov
inc
test
lea
mov
cmp
lcall
inc
dec
data16
icebp
in
xchg
sub
adc
sahf
scas
sbb
popf
aad
test
aaa
mov
push
aaa
mov
outsl
push
inc
cmp
iret
or
outsl
test
lods
cwtl
shll
pusha
pusha
rcll
lock
add
stc
push
lds
push
mov
cwtl
add
lods
sub
stos
subl
jb
push
cld
adc
pushf
stos
out
or
dec
push
outsl
jnp
js
pop
fnstcw
lods
aam
ja
lcall
jp
aas
or
outsb
mov
jmp
cmp
test
fnsaves
xor
in
mov
add
sub
push
dec
xor
in
sbb
aaa
sub
ja
sbb
pop
in
mov
arpl
test
jge
dec
adc
xor
inc
imul
cld
out
repnz
and
adc
out
sub
icebp
das
loop
loopne
movsb
dec
insl
jae
ljmp
imul
movsl
cld
lods
mov
mov
xchg
repnz
sub
inc
call
xor
jecxz
mov
fnsave
inc
or
movsl
stos
jge
stc
aaa
fwait
and
push
ror
cmp
push
insb
push
cmc
int
pushl
aaa
mov
jno
test
add
imul
insl
pushf
fmull
push
icebp
movsb
fstl
divb
mov
pop
add
mov
sub
insl
insb
adc
jge
cmp
bound
pop
out
pop
loop
and
mov
dec
adc
and
mov
cld
rolb
sarl
lcall
ja
and
loop
std
mov
lds
in
mov
cli
hlt
js
xchg
leave
imul
cmp
push
daa
sub
xchg
shlb
lock
xchg
xchg
aam
imul
or
xor
jmp
inc
cmpsb
or
leave
out
gs
push
mov
push
adc
push
xor
rorb
jae
aad
lret
or
es
sub
mov
add
mov
add
jno
jle
xchg
sbb
movsb
loopne
fsubp
loop
inc
or
mov
cwtl
gs
mov
xchg
or
mov
jbe
outsl
add
pop
leave
in
insl
stos
mov
mov
mov
sub
sub
imul
inc
mov
mov
adc
xchg
enter
cld
hlt
inc
rclb
add
ret
mov
jp
lock
ljmp
setno
call
jmp
add
xor
adc
sbb
test
and
loopne
cmp
jne
ss
xor
sarl
adc
insb
pop
loope
addr16
in
push
pop
jle
add
pop
inc
popf
dec
jge
and
xor
jp
ljmp
xchg
and
push
lock
mov
in
xchg
mov
lds
je
mov
imul
fcomi
or
dec
pop
dec
mov
adc
pop
jo
frstor
les
mov
cld
pop
inc
sahf
or
xchg
outsb
pop
es
mov
sub
out
adc
push
mov
pusha
sub
sbb
xor
lret
ljmp
les
seto
dec
popa
jns
sbb
mov
js
dec
push
or
iret
push
fwait
lds
ja
cld
pop
scas
mov
test
lock
push
mov
and
mov
cltd
sbb
sub
sbb
mov
xor
push
push
cmc
jns
sbbl
xchg
push
dec
lahf
pop
push
stos
inc
push
ja
mov
in
mov
pop
insl
cs
inc
xor
jb
lock
nop
popf
xchg
aas
adc
jae
int
sub
inc
fwait
pop
add
insl
stos
data16
das
xchg
add
sbb
ljmp
sub
pop
mov
or
sub
ss
mov
mov
adc
insb
push
insb
jmp
repz
sti
stos
and
movsb
xchg
stos
aaa
popa
dec
pop
jecxz
scas
mov
gs
ljmp
in
push
in
imul
pusha
lods
imul
enter
push
jb
shl
jb
push
repz
xchg
loop
and
add
dec
faddp
hlt
inc
mov
nop
push
dec
popf
stos
pop
pop
rorl
add
dec
cltd
mov
loopne
ljmp
movsl
icebp
jae
fadd
fwait
cmp
ret
pop
xchg
in
into
push
mov
sbb
fs
insb
addr16
ds
nop
loopne
push
jle
jae
mov
iret
jmp
mov
cmp
cmp
out
push
fidivrl
push
out
addb
hlt
repz
mov
cwtl
ds
mov
gs
mov
cmp
out
jnp
je
mov
sbb
sbb
adc
shr
inc
jne
mov
dec
pop
es
add
cmpsl
icebp
stos
fmull
data16
das
add
insl
lock
fstp
pop
rorb
or
sub
push
out
aaa
mov
sbb
fiadds
sub
or
inc
xchg
aas
sbb
movsb
sub
lahf
pop
mov
pop
daa
sub
jnp
in
repz
fcmovu
sub
inc
or
inc
mov
dec
adc
dec
sub
movd
push
sbb
fistps
sub
sub
add
pop
cs
sbb
pop
fdivrs
jge
push
ja
shll
pop
test
cmc
mov
orl
imul
cmp
cmpsb
cld
jmp
xchg
adc
js
push
test
scas
xlat
out
movsb
lock
cli
subb
lods
add
mov
cld
mov
mov
out
adc
xchg
stos
sub
insl
lods
dec
lcall
fnsave
push
xchg
pop
jg
or
incb
xchg
stc
bound
jno
jns
aad
pushf
mov
dec
mov
nop
xchg
jnp
jb
sbb
into
jmp
cmc
lea
and
cltd
je
jno
push
divb
jge
inc
ret
movsb
sub
negb
adc
cmc
inc
cmc
fs
xchg
xchg
jl
insb
mov
add
xchg
cwtl
pop
loope
mov
xor
inc
xor
ljmp
mov
push
push
xchg
and
push
adc
cmp
jmp
mov
jnp
mov
jle
rorl
or
in
mov
push
dec
in
rcrb
pusha
push
in
in
push
mov
sub
in
xchg
andb
fisttps
lcall
jl
outsb
lret
mov
pushf
jbe
mov
inc
add
mov
sub
add
inc
inc
xor
dec
mov
adc
jns
pop
subl
sub
bound
push
enter
sub
xchg
outsl
ret
add
outsb
rolb
fcomps
std
xchg
jecxz
sbb
fwait
jg
ret
or
add
or
jl
out
lea
dec
cli
pop
mov
adc
lea
test
mov
pop
sbb
idivb
lret
fsubl
mov
pop
neg
ret
in
mov
fsubs
jge
dec
test
or
dec
pop
xor
and
clc
jge
in
push
or
mov
mulb
lds
repnz
pop
scas
or
mov
cltd
jecxz
aad
scas
adcb
sub
in
movsl
push
dec
cmp
in
testl
popa
mov
fsts
lods
and
fldcw
mov
int
mov
out
jp
mov
int
or
lea
movsl
sub
mov
js
call
loop
jne
fstpt
mov
stos
sbb
std
andb
fwait
adc
push
nop
dec
mov
cmp
xchg
inc
push
jae
pop
ja
sub
cmpsb
sub
pop
popf
out
xor
mov
aad
popa
negl
fimuls
scas
xchg
adc
lcall
sar
addw
sub
push
dec
jb
or
sub
pop
sahf
mov
idiv
xor
add
jmp
addr16
outsl
jmp
aaa
ret
jmp
loop
stc
add
mov
adc
leave
jge
pop
sub
movsl
cmpsl
orb
lret
mov
loopne
inc
icebp
push
sub
repz
fcmovnbe
mov
push
add
lds
jns
cli
mov
bnd
dec
mov
lods
popl
xor
and
adc
add
or
rcll
sub
and
xlat
jp
stos
jge
mov
fsubrs
jbe
addr16
rcl
hlt
orl
in
fs
popf
xor
dec
imul
cli
testw
or
ljmp
jmp
les
mov
xchg
fs
inc
sbb
xor
mov
jnp
push
lods
mov
sub
inc
shrb
mov
test
push
jb
jns
imul
xchg
stos
cmp
jae
or
insl
cmp
mov
fildll
movsl
push
add
cmpsl
in
test
push
cmc
test
fs
in
mov
cmc
mov
mov
add
mov
jg
ja
icebp
add
lods
fwait
outsl
inc
fs
ficoml
mov
or
je
xor
jge
fs
std
out
adc
cmp
mov
loopne
dec
ja
hlt
cmp
add
data16
notl
int3
mov
cmp
dec
in
js
adc
jb
xchg
inc
rcrb
inc
add
sub
pop
repnz
dec
sbb
dec
pop
fs
inc
mov
fnstsw
push
fdivrs
add
add
add
lahf
cltd
lds
lea
je
cwtl
push
enter
lret
mov
mov
xchg
dec
dec
ret
adc
scas
test
into
lods
shr
outsl
mov
xor
je
adc
pop
ss
dec
hlt
pop
dec
loopne
mov
rclb
imul
test
sahf
mov
pop
cmp
sbb
aad
ja
loop
fldl
or
int3
xchg
lret
push
call
arpl
adc
clc
xor
xchg
int
insl
lret
pop
gs
les
mov
mov
faddp
addr16
adc
and
jecxz
jne
std
cmp
imul
in
insb
fcomip
mov
into
adc
xchg
pop
dec
pop
clc
out
cmp
orl
call
sub
les
lock
xchg
sub
mov
je
inc
bound
jle
test
xor
scas
push
daa
icebp
pop
stos
dec
enter
sub
repz
insb
push
sbbb
jns
stos
jge
shrb
sub
push
mov
outsb
mov
loopne
sbb
fdivs
mov
xlat
enter
outsb
arpl
subb
xchg
jle
movsb
dec
into
add
adc
xor
pop
dec
xor
adc
movsb
cli
mov
insl
ss
dec
clc
push
pop
cs
hlt
sbb
dec
into
inc
push
stos
adc
sub
daa
das
add
incl
ret
std
loopne
loop
cmp
sbb
pop
jecxz
sub
adc
adc
cltd
xor
and
xchg
xchg
popf
jle
xor
and
dec
mov
lcall
sbb
les
push
add
test
stos
and
icebp
jmp
rol
inc
or
fists
hlt
test
loopne
adc
adc
pop
call
leave
mov
sub
xor
push
in
dec
shll
xor
dec
lret
rol
into
rcll
es
mov
sahf
xor
test
push
inc
test
cmc
je
and
and
xor
mov
push
outsb
lods
mov
popa
incb
push
xchg
dec
inc
cmpsl
adc
negl
add
popf
xor
out
sbb
add
mov
orl
sub
sbb
and
mov
test
or
and
insl
imul
ss
or
aad
popa
in
jnp
add
adc
adcb
out
pop
gs
mov
popa
pop
xchg
pusha
filds
dec
enter
imul
aaa
mov
and
or
inc
sbb
adc
push
loope
inc
add
vshufps
fiaddl
or
lods
outsl
pop
cs
or
dec
mov
lahf
rcl
mov
dec
add
xor
insl
mov
rcll
das
xchg
push
lods
and
mov
dec
mov
lahf
fisubrl
and
js
or
jbe
lea
stos
iret
in
repnz
sbb
shr
xlat
xor
or
mov
loop
clc
into
cmpl
xor
xchg
mov
in
testl
mov
pop
fimuls
cli
mov
and
add
call
jb
mov
popa
jne
jge
jecxz
xor
and
xor
jg
inc
fsub
and
scas
hlt
loope
pop
sbb
push
and
mov
sub
add
add
lahf
dec
adc
pop
jae
xor
mov
repnz
int3
ret
jno
int3
add
mov
sub
addr16
adc
push
rolb
pop
das
fcmovnb
inc
jle
cmp
or
inc
or
sub
stos
jg
sbb
jbe
xchg
lods
or
xor
mov
fldt
xor
pop
push
pop
frstor
loope
cwtl
andb
jp
into
das
aad
xchg
and
lcall
cmp
mov
pop
push
stc
frstor
or
lea
daa
fwait
mov
xlat
jl
popw
and
lods
lcall
loop
lret
repz
test
cmp
mov
bound
rcrl
insb
jnp
repnz
mov
clc
das
xor
jo
dec
aad
mov
jg
jo
sub
data16
and
fs
dec
daa
cmpsb
rorl
popa
jns
jle
and
decb
test
push
orl
outsb
cmpsb
insl
add
jmp
out
mov
xor
push
pop
clc
mov
xchg
xorl
sbb
inc
repz
in
jae
cmp
imul
outsl
push
jb
mov
inc
int3
ja
push
das
push
dec
daa
test
ficoms
imul
repz
shrb
jb
push
pusha
jl
frstor
jo
clc
inc
mov
ret
lret
jb
jl
inc
sub
dec
jnp
cmp
xchg
aad
mul
xchg
cmc
jmp
jbe
mov
mov
sahf
mov
add
cmpsb
inc
cmpsb
test
cld
lds
jecxz
movl
and
dec
add
cmpb
cmp
cwtl
mov
loop
loope
shrb
in
testb
jl
xchg
or
ficoml
lock
cmp
out
je
cmpsl
cmpsl
iret
daa
jg
dec
in
into
sahf
std
dec
jg
jmp
leave
andb
cs
sti
and
and
cltd
loope
adc
pop
cmpsb
loopne,pn
cmp
lock
loopw
mov
mov
je
mov
aam
add
sub
or
mov
mov
xchg
ss
inc
and
stos
inc
dec
push
test
xchg
xor
jnp
or
xorb
cld
int3
rclb
or
jp
push
lods
dec
in
xor
pop
or
lret
in
pop
adc
fsubr
push
repz
ds
into
push
mov
rorl
lahf
pop
daa
lcall
cmp
and
mov
dec
loop
cwtl
mov
cltd
mov
test
fstpt
imul
inc
in
xor
pop
sbb
sub
and
adc
sbb
mov
inc
sti
pop
stos
mov
inc
xchg
xor
lods
pop
shl
xorl
les
rcl
add
mov
hlt
adc
mov
jne
ja
cmpsb
add
hlt
dec
mov
dec
xor
test
outsl
int
repnz
fmul
and
xchg
add
data16
movsl
jne
or
jg
shrb
out
cmp
add
push
and
push
sub
daa
adc
js
sbb
mov
cmc
mov
imul
push
add
sub
js
dec
xor
and
mov
outsl
lods
icebp
inc
pushf
sbb
mov
jne
dec
ss
jmp
shlb
and
lret
pop
mov
sub
fcomi
pushf
cmpsb
cmp
inc
adc
cmpsl
add
clc
jmp
add
mov
std
mov
mov
cli
gs
add
or
in
inc
idivl
inc
aas
sbbb
sbb
repz
add
insl
dec
mov
and
or
dec
movsl
jbe
test
incl
sbb
jecxz
aas
std
mov
outsb
sbb
xor
sub
pop
inc
dec
cli
sbb
cltd
out
out
sbb
dec
push
loope
xchg
test
xor
js
pusha
mov
arpl
loope
repnz
insb
cmp
aaa
cmp
aaa
push
jmp
dec
dec
xlat
out
dec
pop
out
inc
iret
addl
sub
bound
cs
mov
push
jp
ret
rclb
mov
cs
cmpl
fiadds
xchg
outsl
loopne
mov
ret
sub
movsl
add
sti
pop
idivl
iret
add
xlat
pop
mov
dec
or
pop
test
xorl
push
in
fsubrl
push
sahf
pushf
ljmp
jl
add
pop
loopne
fistl
shrl
shr
xor
mov
pop
inc
dec
pop
mov
pushf
jmp
mov
add
jecxz
dec
dec
leave
and
sbb
mov
dec
push
mov
fldcw
xchg
push
or
push
mov
cmp
out
shlb
sbb
in
sbb
insl
out
xor
in
ja
dec
and
sbb
call
mov
imul
pop
sbb
das
and
lock
ret
xchg
call
sub
std
add
pop
cwtl
outsb
idiv
call
out
test
mov
movsl
dec
inc
jp
push
push
pusha
shl
gs
add
shl
popa
loope
in
imul
fsub
loope
and
lea
and
out
and
psubw
jle
dec
adc
nop
pop
cmp
shll
sbbb
add
and
cld
leave
inc
lret
add
xchg
jnp
out
cmp
xor
outsb
in
das
leave
sahf
test
xchg
pop
ficomps
push
setne
sub
outsl
push
fwait
push
push
test
gs
orl
call
and
push
int
jmp
in
pop
std
and
scas
mov
xchg
add
nop
frstor
xlat
dec
dec
jno
stos
inc
inc
mov
xor
push
test
push
mov
lock
repnz
stos
mov
lcall
xor
push
jb
cs
pusha
insl
xchg
clc
movsl
adc
push
test
enter
int
xchg
iret
inc
cmpsb
add
jnp
sub
lds
bound
jo
arpl
negb
push
fisttpll
in
push
push
jle
fadd
sub
add
push
ljmp
sbb
mov
ljmp
cmpsl
xchg
jmp
int3
cmpsl
mov
xorb
jmp
mov
xor
or
jb
scas
adc
push
outsl
in
out
mov
xlat
mov
and
push
push
ljmp
test
sbb
dec
xor
xor
pop
push
enter
jp
test
icebp
je
lret
daa
out
jge
outsb
enter
repz
adc
jae
cmp
jge
push
or
bnd
xor
addr16
sbb
stos
repz
pop
fcoms
mov
pop
imul
mov
mov
jnp
lret
sub
xchg
rorb
ds
cmp
sub
cltd
cmp
je
nop
shll
mov
xchg
pop
addb
call
mov
and
mov
jns
dec
fstpt
jl
je
and
dec
loop
shlb
fwait
mov
roll
sub
test
xchg
test
mov
nop
out
dec
mov
fiadds
mov
add
sub
pop
decb
or
out
and
mov
arpl
push
loopne
push
xchg
jl
test
sub
shr
enter
ljmp
stos
xor
cmpl
sub
cmpsb
mov
sub
mov
arpl
cmpsl
movsb
adc
adc
cmp
pop
shr
scas
movsb
add
mov
dec
add
orl
xchg
cmp
and
stos
sub
jg
sub
fdivl
mov
xchg
fsts
std
in
lret
push
stos
es
sub
inc
sbb
push
jle
sbb
sbb
jns
jno
adc
push
rorb
bound
cwtl
dec
call
test
jb
xor
mov
push
aam
or
or
cmpsb
jbe
nop
int
push
sahf
lret
cmpsb
adc
fstl
loopne
inc
jno
jno
loopne
or
out
insl
lods
and
in
mov
jns
or
add
stos
add
mov
sub
movsl
xlat
inc
add
jae
js
cs
push
lods
sahf
and
push
push
cli
xchg
outsb
pop
addl
sub
outsb
xchg
jg
das
sbb
and
mov
popl
imul
adc
mov
sbb
cmp
in
in
sti
push
push
mov
dec
pop
inc
pop
mov
pop
pop
mov
or
mov
push
sub
xchg
repz
popa
mov
leave
clc
xor
push
popa
bound
inc
je
loope
xchg
dec
test
movb
xor
outsb
mov
ds
xor
or
sbb
hlt
xor
js
lret
sub
xchg
xor
sub
fistpl
jne
mov
cltd
cs
cmc
push
hlt
jae
sub
int3
dec
and
push
jecxz,pn
in
dec
mov
loop
jmp
enter
jmp
jmp
add
in
xor
stos
and
aaa
push
fnstcw
cmp
push
dec
fstpt
imul
loopne
sbb
nop
ret
fsub
adc
mov
mov
pop
or
imul
gs
into
int3
test
xchg
int3
dec
adc
rorb
and
loopne
mov
scas
repz
push
push
js
xchg
cmp
lea
fucom
push
mov
push
in
adc
pmuludq
mov
jbe
jno
jne
adc
adc
cmp
and
fistpl
inc
ja
pop
add
shll
pop
addr16
sbb
xor
adc
ds
nop
mov
mov
dec
mov
sbb
pop
xorb
cmc
inc
scas
or
fs
shll
jge
jg
lods
ds
loope
mov
cmp
sarb
mov
movsl
cmp
into
dec
scas
cmp
or
test
out
adc
adc
int3
in
dec
stos
fsubrs
fs
lea
lods
int3
xor
inc
push
and
mov
lret
mov
in
xor
aas
mov
aas
out
lds
add
std
push
inc
xlat
fstpt
xor
ror
cmp
data16
in
xchg
adc
dec
repnz
mov
or
jg
outsb
sbb
fwait
push
xor
mov
cmpsb
pop
call
cmp
cwtl
sub
dec
xor
add
bound
mov
or
inc
dec
ss
push
dec
lcall
dec
loop
sahf
cmp
xorb
mov
adc
sarl
leave
jecxz
pop
jo
outsb
fcoms
jmp
call
ljmp
cmpsl
mov
sarb
into
xor
int3
call
aaa
sub
mov
in
popf
fwait
int3
cltd
lock
push
hlt
stc
sub
mov
aas
push
inc
dec
popf
mov
xor
mov
push
push
jl
jl
sarl
xchg
faddl
cltd
jb
pop
xchg
dec
sub
mov
das
popf
andl
pop
int
push
cmp
negb
jmp
cmpb
push
dec
cli
mov
dec
sub
pop
loope
push
int
inc
call
xor
mov
mov
push
and
mov
sti
push
rcr
dec
fwait
jns
mov
test
es
mov
repz
xor
jns
fldt
movsl
or
cmp
jle
adc
mov
pop
repz
test
ret
jle
mov
in
aas
fbld
scas
jo
movsl
je
leave
jmp
aad
popf
inc
or
pop
or
mov
and
cld
or
push
mov
xor
adcl
cs
push
fidivs
das
clc
std
cmp
aam
sub
push
or
xor
test
aam
pop
lret
loop
loope
jno
mov
and
sti
outsl
mov
cld
and
lahf
or
rorl
pop
fisubrl
adcl
outsl
popf
aam
adc
add
inc
pop
loope
lods
outsl
xor
cmp
jbe,pn
jecxz
mov
push
jmp
mov
add
out
xor
xchg
into
lcall
mov
pop
cmpsl
xchg
cmp
sbb
mov
mov
in
add
inc
inc
mov
insb
lock
mov
cwtl
mov
adc
out
cmp
jnp
xor
xchg
addr16
int
aaa
xor
in
push
rcrl
shll
push
and
shl
cs
cmc
pop
mov
pop
cs
ss
push
and
movsb
inc
or
push
sub
xchg
lret
cmp
inc
call
mov
xchg
movsb
imul
or
push
push
and
adc
jecxz
pusha
cmpsb
xlat
dec
inc
add
sti
out
pusha
mov
iret
fwait
and
sbb
xor
popf
js
popa
shll
jge
lea
je
dec
ret
mov
enter
lods
sarb
xchg
mov
xor
and
dec
jnp
sbb
aas
dec
insl
repz
mov
mov
lods
xchg
adc
mov
jmp
mov
sub
and
or
jb
stos
scas
sbb
fcomps
xchg
lahf
xor
jnp
loope
insl
mov
lods
mov
add
mov
test
xchg
and
outsl
mov
jo
stos
iret
cmp
xor
pop
mov
xor
bnd
add
out
ja
aas
int
out
cmp
mov
push
mov
cltd
jns
sub
mov
es
sbb
or
fwait
add
aas
pop
xchg
jno
pushf
mov
dec
mov
add
fiaddl
gs
jne
jp
mov
push
mov
pop
mov
outsl
and
jns
adc
jbe
loop
shll
sbb
inc
xor
mov
or
js
xor
lret
mov
insb
stc
and
orb
cmc
mov
stos
ficoml
mov
inc
adc
ucomiss
lret
jg
sahf
mov
dec
aad
and
cmp
push
lds
cmp
inc
xlat
add
and
lcall
sbb
ret
jg
je
push
fstl
xlat
jno
arpl
xchg
bound
out
notl
cmp
cmovns
mov
jecxz
std
jecxz
xor
inc
mov
sub
pushf
and
inc
mov
add
in
mov
das
sub
push
xlat
fwait
adc
test
sarl
fcmovne
mov
repnz
mov
xor
std
ss
decb
push
add
push
lods
cld
pop
imul
xchg
outsl
jg
imul
push
rcrl
mov
pop
pop
xor
ds
or
cmpsl
cmp
or
lock
adc
jbe
sbb
fldt
data16
xchg
dec
daa
pop
add
add
mov
out
jae
repnz
cld
imul
xor
lcall
mov
inc
pop
lea
out
lretw
pop
push
fwait
mov
rcll
js
mov
mov
shl
or
cmp
shlb
add
and
sub
sub
cmc
in
push
movsl
cmp
movsl
xor
or
xor
es
inc
fsubrl
inc
mov
adc
addr16
mov
aad
push
and
enter
or
pop
imul
data16
sahf
data16
xor
stc
pop
sahf
inc
mov
dec
mov
jg
hlt
and
cwtl
nop
loop
sbb
xor
add
repnz
or
xor
push
dec
clc
bound
pop
int
and
push
and
push
cmp
mov
in
cmp
mov
pusha
xchg
dec
mov
pop
outsb
aad
aaa
stc
xchg
stc
xor
or
mov
pop
push
adc
je
hlt
nop
lods
inc
rorl
pop
push
int3
push
outsl
lods
sahf
push
mov
cwtl
sbb
mov
fs
inc
sbb
push
outsb
pop
ljmp
fcoms
les
adc
enter
cmpb
pop
rorb
mov
pop
loop
fs
aaa
fs
in
nop
push
or
jmp
sub
lret
mov
or
loope
xchg
dec
orb
and
push
shll
sub
imul
jp
mov
jmp
ljmp
aad
cs
sbb
xor
push
mov
lea
mov
mov
push
shl
pusha
push
add
rolb
xor
movsb
mov
add
test
inc
mov
mov
mov
test
xor
out
nop
aas
inc
mov
pop
mov
push
sbb
mov
repz
mov
mov
adcb
cwtl
xchg
inc
mov
ret
rol
xor
cmpsb
mov
cmpsb
imul
out
xor
scas
push
mov
add
or
jb
sbb
adc
sub
lock
add
cli
sbb
pop
sbb
repz
dec
out
push
rsm
or
inc
js
mov
fcoml
sbb
ja
and
das
push
or
mov
dec
ja
clc
aaa
imulb
dec
pop
fdivrl
cmp
jae
jae
shrl
push
and
mov
push
fbld
push
pop
inc
cs
iret
cmp
loope
jmp
sub
lods
sub
addr16
dec
mov
pop
stc
cmpl
jne
popl
hlt
ret
dec
xchg
mov
pop
inc
pcmpeqb
cwtl
cmpsb
mov
sarl
pusha
jl
jno
subb
pop
mov
push
mov
jmp
decb
sub
push
lret
das
data16
pop
mov
and
lret
mov
mov
inc
pop
lret
inc
call
mov
out
fldcw
push
data16
repz
das
loope
ljmp
push
out
addr16
pop
mov
inc
adc
xlat
mov
js
out
mov
cmp
mov
nop
mov
xor
repnz
and
adc
mov
sub
sub
add
cld
inc
fcompl
mov
lods
fistpl
arpl
pusha
shlb
mov
icebp
or
mov
jecxz
lds
roll
call
sub
xor
jmp
lds
test
sahf
jg
jmp
and
mov
imul
int
fistl
cmp
out
js
arpl
inc
insb
out
bound
ret
adc
and
std
adc
cmp
adc
jp
mov
adc
gs
popa
iret
dec
cmpsb
jne
flds
int
pop
push
decb
mov
dec
or
dec
dec
push
andb
pushf
fwait
hlt
sahf
cmp
clc
xchg
cmp
push
add
mov
test
iret
push
xor
cltd
fbld
xchg
jge
repnz
mov
mov
jle
push
xor
pop
call
icebp
cmp
int
pop
lds
out
dec
and
shll
ja,pt
jo
jecxz
dec
dec
add
push
fisttpl
pop
scas
das
insl
sub
leave
hlt
mov
fdivs
jnp
orb
inc
aad
repnz
out
movsl
cltd
repz
or
fldenv
pushf
cmp
xor
push
push
aaa
pop
das
sti
dec
insb
imul
cmc
adc
mov
cmp
cmpsb
int
nop
sub
icebp
stos
je
lods
scas
mov
mov
call
cmp
movsl
outsb
call
out
outsl
sti
into
mov
sar
pop
std
jns
nop
adc
pusha
je
movsl
pop
xchg
ljmp
push
cmpsl
cmp
dec
in
or
call
pusha
add
add
xchg
mov
jnp
test
je
int
jno
mov
push
mov
and
mov
push
ljmp
adc
andl
int
cld
inc
ja
stc
sub
cs
xchg
mov
push
addb
add
lods
subb
and
std
pop
push
or
cmp
mov
adc
pop
pop
leave
xchg
inc
cmp
nop
movsl
sub
mov
loope
out
adc
idiv
cmpsb
dec
outsl
hlt
outsb
mov
dec
xchg
enter
jp
les
cwtl
xchg
pop
cmp
push
sbb
mov
outsb
dec
rcr
sub
xchg
lods
add
clc
mov
mov
push
mov
mov
inc
adc
loop
xchg
mov
pop
frstor
add
sub
cli
sbb
addr16
add
scas
dec
pop
jne
movsl
xchg
dec
repnz
add
add
lret
insl
mov
jbe
mov
aaa
in
push
push
jecxz
lea
mov
cmc
mov
outsl
mov
pop
aam
push
pop
xchg
cld
xor
fisubl
mulb
xchg
or
jmp
bound
fnstsw
xchg
addl
pop
adc
and
cmpsl
ret
add
cmp
or
cmc
add
xchg
leave
adc
mov
mov
mov
hlt
popa
dec
push
cwtl
loop
jge
jle
mov
jb
dec
inc
arpl
sbb
mov
jle
data16
mov
pop
xchg
out
subb
je
call
fsts
lret
ret
and
decb
or
xorl
outsl
enter
nop
push
mov
jb
xor
push
sbb
push
or
arpl
ret
push
in
stos
dec
lods
sbb
adc
bound
and
lea
fdivr
xor
pop
dec
data16
aas
push
inc
jmp
or
cmp
jle
test
les
mov
es
sbb
hlt
hlt
mov
movsl
into
loope
mov
lea
jne
inc
fnsave
testb
outsb
int3
mov
out
pop
jl
adc
mov
cvtps2pi
arpl
test
xchg
sbb
pop
sarl
inc
ret
cmpb
dec
sub
movsl
ja
mov
shll
and
cmpsl
xchg
aam
sub
shlb
pop
out
adc
lahf
and
lea
imul
or
add
es
pop
add
adc
lret
xchg
ds
mov
addr16
sub
es
sub
lds
xor
and
out
aas
mov
add
movsb
add
daa
loop
int
fwait
outsb
push
sub
mov
or
jle
mul
pusha
movsb
lock
rclb
mov
pop
cmp
aas
jl
ret
or
push
and
and
inc
ret
push
mov
sbb
sbb
jno
inc
add
outsl
fidivl
pop
sbb
xchg
add
jl
push
sahf
jno
out
cmp
push
push
inc
xor
aam
mov
test
out
ret
or
xor
or
in
mov
inc
sbb
inc
loop
or
xchg
addr16
inc
add
aas
and
popf
ss
xor
pop
lcall
add
lret
test
pusha
and
inc
sbb
shrl
ja
mov
xor
aaa
mov
mov
stos
mov
adc
iret
mov
hlt
scas
imul
test
mov
jle
mov
popf
sub
faddp
cld
sbb
xor
sbb
insl
ss
lret
sub
mov
ja
mov
mov
aas
in
hlt
js
mov
xor
ret
jg
cmp
mov
adcl
dec
fs
out
fldenv
or
jbe
mov
fcmovnu
xchg
pushf
mull
std
cmp
stos
lods
jnp
sbbl
jae
repnz
dec
mov
jp
pop
cs
mov
jne
sbb
iret
imul
push
mov
sbb
iret
push
mov
cmp
iret
pop
pop
jmp
mull
mov
inc
out
in
int
xchg
inc
popf
jo
jo
xchg
fs
push
jae
dec
in
xchg
movsl
stc
lods
adc
inc
mov
dec
inc
lock
cmp
pop
lcall
aaa
cmp
dec
pop
pop
mov
cmpsl
out
fidivl
add
ficomps
scas
mov
fs
in
lods
pop
lret
nop
sti
fstpl
pushf
mov
into
adc
sub
adc
push
mov
leave
les
sub
lcall
lock
mov
mov
into
jbe
xor
jns
std
push
imul
inc
jmp
int3
mov
cltd
out
flds
lods
xchg
cmp
les
xchg
add
int3
xor
mov
dec
mov
inc
and
mov
lods
popw
cmp
stc
loop
loope
stos
dec
push
stc
cmp
lret
shll
add
push
outsl
xchg
outsl
dec
cmc
inc
lcall
or
xor
out
dec
cli
sub
mov
imul
imul
pop
cmp
push
lahf
push
ret
pop
mov
fwait
rolb
loop
fcmovnu
rcrl
and
jbe
ds
jmp
mov
and
arpl
clc
mov
popa
es
leave
movsb
adc
mul
std
sub
aaa
lret
cmp
inc
lcall
cmpsl
sbb
jnp
xchg
jae
jae
mov
dec
inc
cmp
into
iret
fisubl
ficoms
push
pop
mov
jb
fisttpl
add
pushf
in
pop
repnz
jp
es
add
xor
call
scas
cwtl
cltd
in
nop
enter
cld
dec
mov
push
cmpb
mov
push
jg
aad
jg
jb
cmp
mov
lret
imul
jmp
push
fnstenv
mov
push
jge
sbb
inc
out
sub
sbbb
mov
mov
mov
push
push
insb
pop
add
roll
sbbl
dec
cmp
into
add
sbb
lea
inc
sbb
aaa
mov
and
iret
nop
iret
jmp
dec
mov
sub
jl
sbb
mov
std
or
imull
nop
testl
mov
fidivrl
fwait
jae
ret
mov
hlt
inc
cmpsl
sti
sbb
int3
mov
ja
int3
mov
cmp
int3
mov
sbb
pushf
add
lret
cmp
outsl
xor
mov
inc
add
mov
out
fs
mov
leave
xor
pop
push
ret
scas
mov
enter
push
bound
jno
lret
mov
fcoms
jg
div
addb
data16
push
enter
or
pop
push
clc
jno
or
gs
mov
adc
stos
outsb
jbe
ja
pop
cltd
mov
int3
sarl
bound
sbb
or
je
jmp
jno
adc
scas
sub
xor
test
sbb
jge
add
in
adc
jb
or
mov
push
lret
mov
xlat
xchg
scas
lock
cmp
loope
adc
pop
aad
sub
into
cmp
stos
out
inc
and
clc
mov
out
xorl
dec
into
lcall
and
in
popf
add
ss
mov
fcmovbe
std
cmp
fsts
addr16
les
and
jno
pop
mov
test
sbb
xchg
in
add
jp
std
inc
mov
push
sub
rcll
test
test
cmpsl
shr
cmp
mov
jnp
mov
jae
shr
jg
cld
or
push
lea
lods
xor
mov
mov
pop
mov
icebp
out
pushf
mov
insl
mov
and
add
cmp
jge
push
and
int3
sti
mov
cmpl
mov
dec
out
mov
das
fnsave
call
push
and
cmp
imul
or
rcll
test
std
jmpw
lods
fxch
lea
int3
stos
lods
addr16
stos
mov
cmpsl
cli
fsts
sbb
cmpsb
push
jne
por
daa
sub
jl
leave
les
push
push
pop
aaa
pop
and
loop
aas
and
or
iret
aaa
repz
addr16
mov
mov
sub
shl
call
bound
cmp
imul
jbe
lret
ss
lods
push
out
out
out
int3
cld
push
push
sbb
xchg
jge
xchg
cmpsb
mov
out
into
movsl
push
and
xlat
xor
fisubs
out
repnz
loope
adc
jecxz
popa
aam
mov
frstor
cmp
and
dec
sbb
lods
enter
and
out
pop
adc
cmp
or
shrb
sarl
lea
push
push
gs
test
jno
jbe
pop
or
mov
xchg
addl
mov
push
fidivrl
imul
or
pushfw
aam
mov
jg
inc
loopne
mov
cmp
popa
or
cli
into
push
std
in
and
mov
bound
jo
outsl
sub
ljmp
cld
popa
ss
jne
cwtl
inc
repnz
or
lret
cltd
les
shr
or
or
test
and
inc
jmp
jne
test
insl
mov
sar
outsl
adc
testb
sbb
imul
js
fdivl
jns
fsubrp
mov
xchg
push
sub
lret
dec
dec
cltd
xchg
sub
in
loopne
in
and
stc
jmp
enter
mov
inc
pusha
push
das
int3
push
and
fwait
sub
cmp
sbb
sub
xorl
dec
adc
pop
mov
mov
xorl
popf
shrb
test
test
and
fsubp
ret
xchg
sbb
xor
cmp
push
lods
rolb
push
fisubl
insb
push
sub
call
lret
ss
fs
mov
ret
out
fidivrl
dec
movsl
xchg
add
enter
movsl
add
test
jns
xchg
jle
pushf
pop
xchg
ja
or
and
dec
mov
and
fldl
fdivp
divl
cmp
xor
cmp
fwait
mov
stos
jb
mov
dec
mov
insb
lds
in
testb
iret
jb
mov
add
xchg
lea
lahf
sub
fmuls
sub
rorl
pop
cmp
ds
sbb
nop
orb
pop
mov
ja
sahf
test
dec
std
pop
lahf
jns
sbbb
sbb
popf
stos
adc
test
scas
popa
ss
test
sub
inc
lods
xchg
mov
mov
xor
test
jo
xchg
dec
lret
test
imul
inc
xchg
in
or
jmp
sbb
aam
outsb
rorb
dec
mov
sub
xchg
and
sbb
movsb
dec
das
sahf
scas
push
sti
and
movsb
lea
ds
arpl
push
push
push
and
cltd
mov
aas
push
cwtl
test
mov
stc
xchg
pop
inc
test
inc
stos
sbb
adc
popf
sbb
rcll
cmpsb
les
cmp
mov
jmp
mov
scas
mov
jns
cmp
sahf
fwait
movl
sbb
lcall
ljmp
sub
pop
loope
leave
ljmp
sbb
rorl
addb
xchg
lcall
mov
pop
adc
xor
hlt
ss
pop
mov
mov
adc
shll
lret
movsb
add
repnz
ret
pop
dec
mov
jae
jb
ficompl
push
or
dec
and
mov
add
push
in
sbb
xor
or
jb
lea
sub
push
xlat
jge
cltd
lcall
xchg
push
out
negb
or
gs
mov
dec
les
stc
push
sub
mov
out
sarb
aaa
lret
jo
nop
xor
cs
fwait
mov
jb
jns
pop
js
lret
jge
jge
ret
dec
mov
jo
jp
jbe
jno
movsb
leave
mov
fidivrl
push
pop
loope
xor
jp
scas
jb
mov
dec
xchg
mov
mov
popf
fidivl
mov
lahf
push
js
aad
push
push
pop
shrb
mov
sbb
data16
mov
mov
lahf
and
and
int3
or
test
int
or
bnd
jbe
sar
or
mov
push
rcrb
jg
jne
pushf
mov
dec
jbe
repz
add
fsubp
mov
or
and
scas
dec
test
cli
das
insl
cltd
dec
fsubrp
cmpl
aas
scas
adc
bound
inc
iret
xchg
jo
int3
add
test
data16
dec
pop
cmp
pushf
ret
cld
popf
test
inc
movsl
test
test
pop
pop
xchg
lcall
rcrb
and
pop
aad
or
sti
pop
mov
add
adc
mov
push
mov
cli
and
leave
mov
insb
jmp
mov
mov
cltd
pop
xor
ja
imul
test
inc
xchg
es
pop
mov
dec
dec
sub
stos
loop
insl
push
jle
imul
or
dec
dec
xchg
xchg
rcrl
mov
xchg
lahf
lock
adc
loope
pop
push
out
xor
add
sub
jge
stos
jns
pop
jecxz
and
mov
test
pop
push
cmpsb
lock
push
vsqrtsd
mov
push
xor
add
mov
jp
lods
sub
xchg
imul
repz
mov
or
jo
push
loope
leave
xchg
mov
dec
popf
scas
fs
popa
inc
js
and
xor
and
pop
loop
push
xor
cmp
xchg
adc
cmp
cmpsl
stos
cs
jge
adc
or
cltd
pusha
jo
icebp
jmp
cmpl
inc
and
and
mov
gs
mov
mov
push
push
pop
ljmp
sub
orb
notl
das
push
mov
stos
push
roll
lret
sub
jnp
fdivp
test
pop
pop
push
gs
repnz
scas
jle
inc
xchg
icebp
cmp
pop
pop
mov
mov
in
fnsave
lret
cli
icebp
mov
stos
push
jge
ljmp
roll
or
xor
aas
test
cwtl
sbb
test
aas
mov
bound
adc
loopne
stos
loop
std
pop
jp
ljmp
outsb
sarl
mov
cmp
mov
iret
mov
and
add
test
mov
outsl
adc
fidivrl
xor
jecxz
or
xor
mov
insb
jb
in
push
push
gs
mov
aaa
add
addr16
scas
xchg
jg
jmp
mov
dec
dec
adc
out
and
aas
xorps
aad
data16
adc
lds
in
add
jnp
jo
sahf
or
addb
and
or
push
fdivrs
repz
sti
leave
pop
inc
lea
dec
adc
ljmp
mov
cmc
sub
xlat
stc
out
out
jle
pushf
pop
jmp
in
adcl
sbb
leave
fwait
aad
lods
push
arpl
cld
cmpl
mov
iret
aam
and
xchg
jp
mov
inc
movsl
jle
xorb
push
xchg
leave
sar
enter
xor
jae
cwtl
pop
cmp
jge
sbb
gs
sub
mov
ret
xor
xchg
ljmpw
jp
sarb
mov
adc
xor
xchg
ss
cmp
clc
ret
push
xor
mov
repnz
lods
sub
imul
add
rcrl
decl
out
mov
mov
call
aas
adc
int3
pop
mov
js
cmp
fcmove
inc
or
icebp
cmp
lret
adc
mov
mov
dec
in
int
imul
and
sub
cmc
xchg
fadds
sbb
or
xlat
sarb
iret
out
shlb
jbe
ret
sub
test
sbbl
jnp
xor
int3
push
mov
fdivs
popf
xor
es
sbb
xor
mov
fistl
or
outsb
fwait
dec
ror
xor
xchg
jae
push
cs
push
and
and
out
pop
mov
xchg
mov
mov
xor
add
jecxz
dec
test
xchg
mov
cwtl
icebp
push
xor
add
loope
clc
into
jmp
scas
adc
ror
mov
cs
dec
popa
and
ficoml
mov
and
push
cmp
dec
popa
insl
mov
push
cmp
mov
xchg
lods
mov
mov
pop
inc
scas
jge
lcall
jnp
and
arpl
sbb
push
cmpsl
xchg
sub
je
xchg
in
enter
rol
sarb
push
fsts
pop
out
mov
test
adc
jmp
xchg
idivl
mov
cmp
mov
xor
lods
or
adc
add
pop
sbb
sbb
icebp
popa
adc
add
jo
dec
pop
dec
lods
jle
lods
pop
mov
ljmp
mov
push
mov
mov
push
and
or
push
mov
pop
cltd
idivl
xor
fs
movsb
or
les
cmp
pushf
or
xor
xchg
loopne
lret
and
outsb
repnz
fsubrs
int3
pop
rol
cmpsb
mov
arpl
jp
mov
negl
mov
stos
adc
ss
shrl
push
mov
in
cmp
mov
dec
imulb
xchg
nop
pop
imul
outsl
outsb
mov
xor
mov
sbb
mov
adcl
sub
ret
leave
add
xchg
orb
lods
imul
inc
mull
push
fdivp
frstor
pop
xchg
cmp
icebp
xchg
negb
loope
add
push
test
inc
movsl
adc
xchg
or
cltd
xor
test
fidivrl
bound
xchg
mov
das
mulb
push
loope
push
adc
xchg
out
cmp
leave
push
lahf
xor
inc
adc
add
lds
data16
xor
cs
rolb
ret
xor
cmpsl
into
inc
inc
pop
pop
lret
dec
jmp
pop
xchg
lea
sbbb
mov
and
arpl
xor
ljmp
scas
sub
jno
inc
add
imul
mov
orb
cmpsb
adc
dec
xchg
mov
popa
sbb
jae
int3
or
mov
stc
mov
mov
shrl
sub
jnp
sbb
imul
inc
jecxz
xor
dec
movsl
les
pop
inc
outsl
lods
cmc
mov
sbb
cmpl
mov
shlb
lret
or
fstl
and
dec
sbb
inc
dec
out
inc
shll
repnz
testl
xchg
loope
xchg
insb
xchg
mov
adc
push
pop
leave
data16
scas
fbld
fucom
mov
rcrl
fldl
repz
hlt
jno
inc
pushf
lea
stos
insl
gs
sub
pop
daa
and
adc
mov
xor
mov
add
test
fdiv
mov
in
gs
jns
ret
sbb
outsb
and
in
xchg
rcll
sub
pop
cli
push
stos
in
add
mov
or
int
dec
sahf
xchg
ror
ret
add
inc
sub
lods
push
outsl
cwtl
cltd
repnz
les
les
jb
adc
push
aam
mov
inc
push
jno
loop
mov
push
sbb
jb
xor
xchg
leave
sbb
test
or
mov
sub
lahf
inc
dec
ds
addr16
push
or
dec
movsl
push
mov
int
ret
leave
mov
ja
add
loope
fstpt
jmp
iret
jl
subb
shl
xchg
mov
scas
sti
ror
mov
fiadds
jmp
mov
mov
das
inc
je
xor
nop
sets
jne
push
cmp
mov
xlat
int
popa
imul
fidivl
aad
xchg
mov
ja
test
mov
pop
aad
inc
xor
lahf
dec
xchg
jbe
stc
push
divb
movsl
mov
mov
jl
pop
sbb
scas
xchg
sub
pop
pop
into
enter
and
popf
push
inc
mov
xchg
or
fsubrs
pop
sahf
cmp
add
ss
or
out
testl
sub
jge
cmpb
sub
insl
lods
cmc
adc
ret
xchg
repz
sbb
add
cmp
dec
shll
ja
ss
pop
adc
pushl
repz
cwtl
sub
sub
add
mov
repz
push
sti
fbstp
mov
fcomps
mov
pop
add
test
cmc
lcall
imull
orb
addr16
js
enter
outsl
push
dec
cli
scas
jns
rcl
fdivs
les
dec
lds
mov
cli
add
ret
pop
imul
push
ds
jmp
dec
and
das
in
adc
repnz
and
scas
sbb
leave
cmc
xor
aas
jle
sti
cld
mov
call
jmp
cmc
mov
mov
cmp
popa
fistl
mov
fbstp
ja
das
jp
mov
shlb
in
adc
xor
push
cwtl
add
pop
dec
repz
fbld
or
hlt
lahf
adc
dec
iret
lds
adc
loopne
xorb
sub
sbb
xor
jo
es
je
mov
int3
dec
icebp
fiadds
je
cmp
jne
fs
aam
pop
arpl
sarl
jnp
stc
mov
das
mov
imul
jge
cli
mov
outsl
and
and
imul
push
testl
je
mov
lea
out
incl
lods
js
fs
ds
mov
ret
jno
xor
add
int
sbb
pop
pop
out
jns
outsl
push
mov
pushf
mov
ds
sub
push
std
sbb
mov
or
aad
sbb
cmp
popf
cs
mov
imul
fnstcw
mov
dec
adc
mov
xchg
test
testb
inc
int3
mov
or
sbb
push
adc
xcrypt-cbc
cmpsl
pop
sub
sbb
data16
shrl
ret
test
aam
xor
sub
sbb
cmpsl
adc
inc
adc
mov
sbb
push
mov
movsb
mov
adc
clc
dec
prefetchwt1
add
push
or
stos
mov
mov
shr
and
cs
lahf
mov
imul
sbb
mov
sbb
add
imul
dec
incl
pusha
cmpsl
xchg
aad
les
mov
pop
or
add
out
xorb
pop
imul
or
push
dec
lods
xchg
sbb
jmp
test
and
sbb
push
push
insl
fidivs
hlt
cmp
movsl
mov
and
sti
mov
mov
out
hlt
jmp
sbb
mov
add
mov
xor
jge
sarb
das
cmpsb
add
cmpsb
jne
shll
and
test
stc
movsb
test
pusha
sub
imul
and
test
mov
and
adc
int3
inc
data16
out
es
ficoms
push
adc
repz
mov
adc
data16
push
repz
cmp
test
cmpsb
sti
and
jnp
jne
cmp
lods
cli
dec
mov
js
adc
cltd
icebp
mov
les
cwtl
or
imul
mov
mov
jne
push
add
pop
insb
mov
mov
sub
jbe
iret
dec
dec
insl
add
and
sbb
mov
mov
out
js
and
adc
cltd
and
xchg
dec
pop
adc
ret
daa
sbb
mov
cmp
adcl
fwait
push
jmp
lea
inc
lods
push
lret
decl
dec
jecxz
xchg
adc
cwtl
xlat
xor
ret
pop
movsb
pop
dec
shlb
mov
aas
mov
xor
inc
test
outsb
inc
pop
rclb
int3
ret
fadd
mov
addl
dec
mov
aam
pushf
in
xchg
push
fiadds
fcompl
and
shrl
out
shrl
pusha
inc
push
cmp
ret
hlt
xor
sub
mov
pop
cltd
lea
repz
daa
lock
push
out
jo
sbb
out
push
xchg
xchg
aaa
lods
lods
repz
mov
and
jae
call
imul
jo
in
icebp
test
hlt
pop
pushf
insb
push
mov
fisubs
rcr
mov
cmpsl
push
out
jge
ja
fwait
xor
leave
add
es
scas
lds
imul
xor
xor
test
ljmp
push
push
xchg
mov
dec
insl
jno
imul
pusha
movsb
fidivl
xor
addr16
or
notl
mov
jno
ss
xchg
jp
sub
pop
lahf
lret
hlt
mov
repnz
es
bound
cmpsb
movsl
int3
push
jecxz
ds
cmpps
loopne
ret
hlt
into
aas
cmp
cmp
push
and
nop
jnp
test
test
into
jae
scas
je
cltd
mov
movsl
xchg
dec
loopne
mov
leave
and
hlt
insb
adc
cmp
sbb
xorb
cmp
loop
sub
aas
insb
ret
dec
aad
pushf
mov
test
nop
bound
and
test
gs
stos
xchg
test
movsl
mov
mov
mov
and
lods
int
cld
sub
mov
mov
sub
push
and
and
lret
lcall
xor
adc
xchg
xchg
and
add
notb
enter
dec
cld
cmp
shlb
lret
adc
xor
aad
rclb
in
sub
xor
mov
in
repz
lea
xchg
in
cmpsb
sbbb
xchg
lcall
jo
dec
aas
mov
mov
pop
push
outsl
mov
xor
movsl
add
mov
dec
push
ja
add
cmp
pop
adc
mov
js
jp
xchg
xchg
fldcw
mov
cmp
jle
repnz
dec
mov
vmovaps
repnz
movsl
mov
inc
stc
or
mov
push
push
inc
sbb
cwtl
scas
ja
push
jb
dec
xchg
or
pusha
inc
aaa
enter
ss
lret
aad
mov
mov
sub
jmp
call
add
push
or
movsl
jp
push
jecxz
inc
cmp
inc
out
clc
pusha
add
and
shll
stos
mov
sbb
adc
add
sbb
in
gs
mov
test
mov
adc
adc
jns
pop
dec
test
fldl
mov
lock
cmpl
sahf
insl
push
cmp
xor
xor
xchg
inc
sti
int3
xor
scas
je
jmp
out
lea
adc
inc
imul
mov
rcl
loopne
mov
dec
ret
ret
adc
test
in
movsl
into
or
xor
addr16
fiaddl
xor
lret
in
add
repz
sub
lret
or
and
sub
cmp
push
xor
dec
fisttps
xchg
mov
or
inc
data16
das
fcmovne
addr16
push
rcr
cmp
popa
fdivr
xchg
lret
clc
bound
in
xchg
add
inc
cmpsb
out
and
mov
adc
mov
cwtl
outsl
shlb
push
jmp
out
mov
jecxz
in
inc
aad
lock
fwait
dec
lods
mov
test
lret
repnz
mov
mov
stos
push
lret
xchg
nop
add
mov
fimuls
or
enter
iret
or
pop
or
stos
dec
out
iret
xor
sub
std
fcmovu
fwait
out
sub
test
inc
push
stos
pop
mov
stos
mov
xor
bswap
dec
scas
pushf
in
in
jecxz
mov
orb
mov
and
jo
faddl
popa
daa
xchg
scas
hlt
cmc
fstps
loope
andb
xchg
pop
aaa
cmp
lock
mov
or
cmp
and
test
sbb
xlat
ja
cmp
data16
insl
cltd
inc
out
mov
sahf
xchg
jle
mov
pop
xchg
imull
loopne,pt
and
and
or
mov
pop
jno
dec
dec
lcall
jnp
dec
push
pop
cmp
es
icebp
adc
jp
and
cmpsl
xorl
fmuls
mov
outsb
sub
inc
mov
cs
xchg
insb
xor
or
insb
test
adc
add
mov
out
jne
sub
ret
rol
fwait
stos
push
dec
pop
std
in
movsl
daa
fadds
jno
push
lcall
xchg
push
in
xchg
inc
sarl
sub
aam
dec
or
ss
mov
paddusb
pop
fs
dec
xchg
push
push
repz
fildll
or
rorb
push
aas
ret
rcl
sub
add
push
pushf
repnz
xor
mov
cmpsb
sbb
scas
push
or
xchg
jg
pop
push
mov
adc
jne
mov
outsb
and
into
mov
test
jmp
lret
ja
outsb
scas
iret
mov
shlb
and
xor
jle
popa
pop
jecxz
movsb
push
in
iret
stc
xor
mov
call
fsubl
xchg
pop
aad
mov
dec
xor
dec
cmpl
sub
and
fsubrp
lock
out
jmp
movsb
repz
xchg
andb
pop
rcr
arpl
icebp
into
mov
add
mov
dec
pop
cmp
pop
in
into
adc
lods
std
loopne
cmp
mov
mov
jns
pop
push
xchg
or
dec
sub
in
mov
lahf
out
outsl
cs
test
mov
mov
ljmp
outsb
mov
cmpsb
fdivrl
dec
arpl
aad
data16
cmp
inc
fldt
jmp
mov
movsb
cmp
cmpsl
lods
pop
bswap
sub
sbb
push
cmc
push
shll
int3
pushf
in
ds
ret
sub
xor
inc
add
mov
sub
mov
push
subb
sub
add
rclb
lcall
or
decb
xchg
pop
sub
lret
cmc
cmp
sbb
mov
adc
inc
sbb
mov
std
jge
es
fnstsw
push
xchg
callw
add
outsb
stc
icebp
mov
test
or
push
inc
adc
jb
and
cld
mov
cld
cmp
scas
push
shll
xchg
inc
push
sub
sub
pop
in
cs
sub
ja
fnstcw
jns
pop
push
add
aam
arpl
adc
in
lods
clc
mov
aam
or
mov
add
sbb
jge
push
std
adc
sub
daa
imul
cltd
adc
xor
mov
cli
cmp
inc
loop
imull
sbb
pop
dec
ftst
mov
mov
and
mov
mov
mov
inc
aas
lahf
adc
gs
mov
dec
rorl
adc
je
sub
stc
inc
js
pusha
cld
or
mov
add
insl
mov
in
mov
movsl
pushf
jo
test
or
scas
popa
inc
xchg
push
orl
mov
xor
pop
mov
test
stos
std
fisttpl
out
divl
test
sahf
push
imul
stc
fsts
enter
inc
dec
lret
out
pop
mov
add
dec
push
sub
xchg
sbb
lods
sbb
inc
mov
outsl
scas
pop
lea
insl
adc
xor
out
sbbl
jmp
dec
aas
roll
mov
fld
call
fadds
mov
in
daa
fisubrs
push
cmp
pop
xor
mov
mov
fdivrs
and
aas
sbb
fwait
dec
sub
orb
cmp
addb
or
clc
cwtl
aaa
mov
cltd
pusha
sbb
sti
jo
add
stos
movl
jecxz
imul
rcrb
addr16
mov
xchg
enter
popf
jge
mov
testl
adc
test
cmp
mov
push
xchg
test
mov
lods
test
nop
jge
fcoml
lahf
ss
xchg
outsl
insl
shrl
jecxz
mov
pushf
shrb
jbe
lcall
push
fistps
inc
subl
cwtl
jecxz
int
xchg
sub
mov
or
pop
into
rclb
sbb
xorl
mov
pop
xor
mov
cbtw
jbe
mov
filds
sti
js
addl
rorb
mov
aaa
ss
push
sub
sub
jmp
lock
xchg
loope
movsl
pop
mov
mov
movsb
mov
scas
or
ret
jmp
scas
scas
dec
inc
jl
mov
dec
or
insb
cmp
in
adc
sbb
in
xchg
std
call
imul
lock
push
lods
scas
fsub
jno
pop
negl
cs
sbb
and
pop
dec
sbb
jge
sub
lea
cmp
pop
xorl
push
mov
jmp
std
xor
sti
lcall
cmpsl
int
or
or
stc
xor
pop
mov
out
adc
ljmp
and
or
nop
scas
inc
sbb
cli
mov
and
testl
cmp
out
cmp
mov
daa
inc
imul
and
inc
repz
stos
jns
jne
lds
pop
test
ljmp
add
ja
leave
push
sub
sub
push
jne
push
sar
sub
movsl
sbb
mov
out
and
imul
bound
mov
mov
inc
push
ret
mov
dec
mov
ret
xchg
xlat
loop
mov
xor
ja
aad
rcl
lods
xchg
inc
and
movsl
dec
jmp
leave
rorb
adc
mov
push
and
in
mov
jle
aad
movlps
cmp
or
fucomi
xchg
mov
loop
mov
cmp
punpckhdq
aam
jl
inc
pop
imul
gs
sar
jns
dec
and
dec
jmp
xor
sub
pop
fistpll
pop
inc
cmp
stos
sbb
xor
jl
test
mov
popa
into
push
in
dec
int
mov
test
rorb
xor
sub
pop
jg
mov
mov
add
loop
cld
push
sub
dec
cwtl
test
pop
lea
cmpsl
or
arpl
arpl
imul
mov
leave
ret
sbb
sbb
jle
or
sub
lods
xchg
inc
jno
and
lods
icebp
and
mov
sub
js
pop
repz
cmp
mov
or
pop
in
hlt
lds
push
out
dec
cmp
aas
push
push
push
loope
lcall
adc
daa
and
adc
mulb
fcmove
fucomi
test
or
into
das
outsb
pop
xchg
pop
cs
dec
out
sub
mov
test
inc
cmp
and
outsb
stos
sub
jno
adc
jbe
xchg
out
push
sub
add
jbe
fldenv
ja
mov
gs
imul
dec
out
mov
sub
jb
dec
xchg
test
test
lahf
push
in
or
dec
fsubl
xor
psrld
lea
mov
push
add
push
repz
jb
mov
jle
int
jae
cmp
js
sar
cmp
dec
lods
mov
inc
fildll
or
ljmp
adc
ds
adc
std
repz
push
pop
gs
sbb
or
stos
mov
sub
and
push
in
and
add
cltd
in
xchg
xor
or
cmpsb
sub
repz
and
sbb
sub
inc
aaa
sti
jne
push
in
or
pusha
leave
fdivl
popf
pop
cmp
pop
mov
leave
xor
push
dec
pop
test
mov
cli
aam
xchg
pop
pop
mov
cmp
add
xchg
jp
mov
loop
mov
mov
test
jle
jnp
add
repnz
ret
push
push
xchg
or
push
adc
dec
cltd
sub
push
jge
cld
dec
jns
mov
pop
enter
adc
mov
int
mov
pusha
mov
fmulp
push
inc
mov
cmp
jae
cmp
sarl
mov
inc
pop
lods
mov
jmp
pop
fidivs
das
arpl
or
stos
mov
out
sub
xor
iret
sub
test
enter
movsb
punpcklwd
and
divb
fidivrs
jb
pop
xor
dec
push
outsb
mull
loope
ds
dec
pop
push
add
dec
lea
outsl
mov
inc
outsb
outsb
pop
aam
xchg
mov
rcll
test
scas
scas
loop
mov
jo
sub
push
fmuls
dec
dec
lea
mov
ljmp
arpl
jmp
imul
xchg
mov
and
addr16
jmp
cmp
or
ljmp
cmpsl
popf
mov
push
push
and
jmp
adc
rorb
jmp
jle
fists
daa
movsl
pop
and
mov
pop
adc
repnz
cvtpi2ps
sti
fstpt
imul
jno
sub
cmc
xchg
and
cmp
sbb
orl
mov
jne
xor
test
add
inc
or
repz
js
cmp
dec
add
lcall
xor
mov
inc
mov
lea
xor
cmpsb
orl
mov
sti
sbb
pusha
mov
cli
push
lahf
scas
test
int
add
lret
mov
xor
xchg
pop
push
daa
mov
aaa
add
mov
sub
faddp
jg
jmp
adc
scas
or
mov
repnz
xor
push
aas
dec
fisubrs
mov
jl
sub
aad
orb
mov
stc
push
xchg
adc
mov
movsl
aaa
incb
push
hlt
imul
sbb
les
outsl
inc
mov
std
mov
cmpsl
dec
cmpsb
repz
dec
inc
pop
ret
popa
jnp
shrl
out
sbb
push
pop
push
sub
add
jbe
ret
sbb
sbb
lock
jge
aad
jae
lods
out
ret
ror
mov
ret
mov
test
mov
inc
cmp
pop
adc
std
adc
cmp
in
imul
pushf
push
popf
mov
dec
dec
cmpb
fldenv
xchg
ds
js
in
sub
push
or
sete
mov
ss
dec
pop
mov
and
lea
pop
jl
cmc
ret
clc
cld
dec
or
rcrl
aad
aad
ret
mov
je
pushf
inc
or
scas
jb
ret
jb
mov
nop
arpl
cmp
adc
push
repnz
sbb
or
add
xor
sbb
je
jmp
lcall
dec
sub
addl
mov
aad
insb
lea
push
mov
rolb
push
aam
cmpsb
iret
fstl
mov
inc
push
jae
imul
ret
shll
int
repz
pop
stos
movsb
mov
lret
rolb
loope
mov
lods
and
shll
xchg
push
cmp
movsl
mov
inc
mov
mov
jae
popf
jne
imul
sub
xchg
mov
sbb
jmp
xchg
sub
push
pop
lock
mov
jno
mov
or
std
xor
mov
jecxz
or
lods
out
dec
fimuls
dec
adc
ds
mov
jo
mov
das
xchg
test
jl
xchg
mov
jnp
push
mov
xchg
xchg
mov
imul
mov
jp
mov
outsb
gs
nop
enter
add
test
add
add
add
enter
mov
add
pop
ret
addr16
sub
jl
int
xor
gs
je
in
jo,pn
incl
cmp
daa
xchg
pop
sub
stc
test
sbb
push
xchg
mov
inc
int3
add
psadbw
xor
pop
mov
test
jo
inc
shlb
adc
cmpsb
mov
or
xlat
cmpsb
dec
xor
lods
fsubrs
xor
mov
and
adc
loope
xor
negb
add
push
pop
mov
jns
shl
push
or
jae
adc
js
mov
cwtl
out
inc
adc
lret
rcll
pop
jmp
dec
jecxz
iret
fstps
in
cmp
rclb
popf
sub
roll
add
xchg
sbb
std
mov
jp
fcmovb
movsb
adc
push
in
cmpsb
outsl
hlt
mov
and
fldt
pop
sub
and
mov
adc
dec
ljmp
push
mov
out
stc
leave
lret
in
popf
jb
nop
sbb
push
mov
mov
call
push
ss
fnstenv
sarl
xchg
insb
sbb
dec
xor
dec
push
adc
mov
fldt
inc
popf
sbb
bound
sub
scas
adc
jecxz
nop
pushf
rcrl
jl
push
lods
icebp
jae
push
jbe
push
push
dec
mov
xor
stos
inc
dec
outsb
mov
lods
sub
jg
aam
fwait
mov
dec
lds
std
sub
adc
jns
test
cmp
mov
inc
pop
and
jno
ja
cmp
in
xchg
popa
lea
inc
sub
cli
mov
ljmp
out
xor
add
mov
xor
out
add
jns
filds
jecxz
sahf
pop
ja
cmp
mov
mov
push
sub
adc
or
pusha
or
or
mov
mov
in
push
pop
mov
bound
pop
daa
cld
stos
pop
mov
inc
outsb
mov
dec
mov
gs
rcl
jno
hlt
xchg
in
or
push
insb
popa
aam
cmp
pusha
nop
lock
adc
cld
aaa
stos
mov
arpl
fmull
in
loope
leave
fsub
push
mov
jbe
pop
mov
das
ret
es
pop
inc
or
adc
push
pop
or
stos
mov
sbbb
push
push
or
cs
xchg
mov
jns
pop
and
pop
xchg
insl
push
repz
mov
daa
mov
inc
pop
jne
pop
insl
xor
inc
imul
mov
jo
mov
dec
jb
mov
fcoms
mulb
mov
or
xor
ljmp
mov
roll
sti
pop
adc
rcll
xchg
adc
sbb
rcrb
jp
mov
test
mov
mov
mov
mov
stos
adc
enter
or
xchg
and
xchg
push
std
dec
add
fstps
mov
cmp
push
pop
cmp
add
clc
bound
shlb
sub
sahf
in
daa
pushf
mov
stos
push
mov
arpl
shlb
push
in
inc
sti
add
iret
dec
jb
or
and
inc
mov
push
pop
mov
push
in
in
pop
jns
loopne
arpl
add
sub
inc
mov
sbb
add
mov
jge
xchg
push
mov
pop
and
insl
pop
cli
test
cmp
inc
in
test
mov
out
cmp
xchg
jne
outsl
pop
or
jmp
and
movsl
and
sbb
cmp
xchg
pop
sbbl
and
or
add
out
xchg
das
rorb
mov
jns
jno
mov
xor
adc
dec
mov
mov
es
bswap
mov
out
sub
das
test
mov
fimull
call
push
sub
rorl
rcrb
push
push
ljmp
pop
mov
bound
imul
fidivrl
in
cmp
sbb
sti
push
pop
sub
dec
and
xchg
jecxz
shll
shrl
add
decb
pop
xchg
adc
std
mov
out
and
hlt
lret
pop
pushf
adc
xchg
adc
gs
cwtl
pop
or
sbb
mov
xor
lods
mov
mov
sti
inc
push
xchg
data16
in
pop
add
xor
cmpsl
fidivl
adc
cmp
mov
cs
pop
outsb
andb
adcb
hlt
sub
xor
dec
cmp
std
stos
push
daa
xor
out
sub
or
push
jno
icebp
mov
sub
es
xchg
fst
sub
xor
pop
mov
push
adc
fimuls
push
xchg
out
dec
add
xchg
ja
jae
mov
test
xchg
movsl
jmp
dec
xchg
pusha
fstpl
imul
ds
xor
or
adc
mov
add
in
sti
jp
inc
jmp
cltd
scas
hlt
out
xchg
and
push
cmp
mov
mov
or
aam
rolb
scas
adc
cs
in
rol
ja
xor
ret
mov
popf
push
jp
push
push
test
and
xchg
push
and
arpl
insb
push
nop
dec
je
pop
les
or
lea
insb
mov
cwtl
pop
into
sbb
sarb
daa
xchg
mov
and
or
mov
fadds
push
or
add
insb
aam
nop
adc
adc
mov
fidivrl
sbb
inc
mov
mov
cmpsb
test
mov
jg
sub
repz
push
lret
stos
and
out
sbb
loop
call
mov
mov
push
pop
rcl
cmp
jne
jno
pop
cmpsl
fadds
adc
mov
and
mov
shrb
arpl
push
lret
push
lods
xchg
cmp
test
ja
addr16
ret
shlb
mov
push
xor
stos
pop
fstl
mov
imul
jne
sub
pushf
pop
ljmp
or
jmp
adc
mov
or
dec
cmpsl
sub
mov
repz
jne
fst
inc
dec
sbb
xchg
xlat
lds
int
xor
add
push
iret
fdivs
xchg
lock
loope
jp
xchg
test
mov
jae
hlt
pop
push
repnz
inc
or
cmp
call
cmpsl
mov
cmovs
ficompl
cmpb
inc
mov
stos
xor
test
mov
sbb
push
sbb
pop
cli
in
sbb
stos
add
xchg
mov
inc
mov
jne
ja
xor
clc
sbb
flds
ja
lds
inc
int
mov
jo
push
or
dec
call
repnz
push
sub
addr16
push
nop
sti
mov
cld
dec
sbb
dec
sbb
push
das
stos
test
nop
mov
add
addr16
outsb
cs
lods
mov
popa
jl
rcrl
inc
mov
push
push
dec
addr16
mov
dec
mov
mov
sbb
fwait
jmp
rorl
dec
cmc
movsb
jl
cmp
mul
pop
add
in
loope
repnz
pop
mov
jb
add
pop
ror
loope
ljmp
leave
mov
insb
inc
xadd
jl
xchg
inc
xor
pop
fistpll
shl
and
mov
stc
jae
pop
imul
fsubl
sub
push
fiadds
inc
fs
ja
xlat
jb
sahf
movsb
je
cmp
pop
mov
lock
incl
rcr
push
pop
pop
pushfw
mov
insb
mov
inc
and
jb
into
push
xor
xchg
adc
push
mov
call
mov
popf
mov
mov
xchg
cmpsb
cmp
cmp
jl
movsl
inc
push
orb
mov
nop
mov
pop
cmp
xchg
adc
push
loopne
xor
rorl
sub
push
xor
out
mov
insb
arpl
aas
out
xchg
or
adc
mov
mov
and
and
scas
push
xor
xor
sbb
push
icebp
xchg
outsl
roll
insb
mov
push
push
out
xor
mov
jge
mov
jl
cltd
pop
push
cli
push
cmp
and
xor
push
pop
pop
out
sti
shrl
cmp
mov
pusha
or
inc
mov
jbe
lds
lea
mov
test
or
lods
insl
cwtl
cmp
test
add
inc
or
clc
add
outsb
rolb
dec
xchg
or
ret
ss
cmc
mov
adc
daa
or
add
push
cs
data16
sbb
lret
mov
fstl
shlb
imul
rolb
loop
fnstcw
cmp
pop
outsl
ss
xor
ljmp
negl
dec
or
and
leave
or
hlt
lret
pusha
sub
lock
test
cli
sahf
adc
push
add
lea
inc
lea
push
fsubs
sbb
mov
pop
pop
push
mov
push
test
mov
jne
or
jl
adc
loope
or
out
push
popf
mov
int
out
adc
adc
push
cmp
js
pop
fcmovne
fdivrl
fnsave
xor
or
xchg
mov
aam
repz
push
fs
shr
fsubrp
jmp
inc
cli
out
jo
pop
xchg
sarb
mov
dec
dec
jno
pop
add
aaa
pop
push
sbb
dec
adc
xchg
pop
hlt
sub
cmp
pop
ds
mov
sub
dec
imul
andb
xor
add
jns
mov
push
in
and
push
jp
jno
enter
push
fldl
lods
cmpsl
inc
jmp
outsb
jg
jmp
repz
and
loop
push
jl
notl
sbb
jmp
int
xchg
sti
xor
fmull
in
bound
cwtl
xor
push
cli
mov
jo
add
xor
push
cld
out
notb
dec
popf
pop
jae
fcoms
xlat
pop
lods
xor
mov
and
mov
popa
divl
pop
push
inc
mov
xchg
and
lock
mov
inc
dec
je
jmp
cmc
ljmp
shlb
std
and
add
scas
fstl
pop
cmp
inc
push
jae
outsl
dec
dec
in
imul
unpcklps
pop
push
or
fdivrl
push
lock
sub
xchg
xor
pop
sbb
add
out
iret
add
mov
js
pop
data16
test
push
and
cltd
and
daa
dec
push
xchg
stos
data16
dec
and
xchg
sub
adc
fldt
inc
cmp
shrb
mulps
pop
aaa
negl
sub
mov
fsubp
ficomps
popaw
aas
js
pop
add
std
das
add
lea
xor
jl
jl
arpl
pop
mov
inc
cs
or
and
pop
bound
inc
mov
shrb
test
stc
movsb
push
shl
in
shlb
push
int3
sbb
xlat
inc
pop
inc
int3
mov
pop
xchg
enter
js
and
push
outsb
iret
rorl
les
jne
inc
inc
xor
ficoml
loope
adc
xchg
jbe
mov
int3
jecxz
jns
xor
lahf
scas
rol
mov
sub
pop
cmp
shlb
in
dec
loopne
addr16
stc
in
sar
mov
fnstenv
sub
sbb
daa
imul
lahf
jle
adc
inc
int3
xchg
push
pop
cmp
sbbb
mov
mov
push
dec
clc
fstpl
cmp
lret
addr16
movsl
je
add
mov
mov
rcrb
and
cwtl
pop
sahf
mov
fbld
push
es
xchg
iret
divl
cmp
ret
mov
pop
rcrb
mov
fidivs
mov
cmp
fsubrs
dec
jg
dec
jae
or
mov
jp
out
mov
in
inc
jl
cwtl
pop
stc
mov
inc
js
out
rolb
inc
pusha
icebp
movsl
clc
jecxz
jno
iret
xor
sub
pop
popw
push
in
mov
div
shll
jp
mov
cmpxchg
pusha
adc
pop
jge
sbb
adc
sbb
jmp
sbb
xor
push
arpl
mov
adcb
add
test
push
cmpsl
xor
xor
test
dec
repz
outsl
and
out
out
negb
mov
rorl
dec
dec
push
dec
mov
or
add
sub
lods
pop
cmpsb
inc
scas
push
mov
lcall
jp
and
jl
push
push
mov
outsb
mov
mov
fcomps
cmp
push
push
stos
fldcw
cmp
xor
ucomiss
cmp
loopne
push
add
push
mov
adc
rclb
outsb
jo
push
frstor
rcrl
mov
push
add
mov
mov
adc
bound
flds
sti
mov
mov
mov
or
shrl
cmc
and
sahf
pop
dec
mov
sub
enter
sbb
dec
popa
fwait
in
jp
ds
push
fnsave
ja
bound
addb
add
scas
shlb
cmp
dec
aas
pushf
dec
dec
pop
in
xor
sub
lret
xchg
stc
out
scas
incb
int
cwtl
and
mov
push
sub
inc
add
jb
add
sub
rclb
jae
sti
jbe
shlb
inc
mov
lcall
jnp
js
stos
mov
stos
test
andl
sbb
lods
shrb
cmp
pushf
cmpsl
mov
insl
lds
mov
in
shll
into
aaa
xchg
popf
or
jbe
pop
cmc
shrb
stc
add
cli
lock
xchg
push
bound
inc
adcl
aas
loope
and
dec
rorb
shrb
cmp
mov
lock
fcmovnb
nop
outsl
jne
mov
fadds
xor
movsb
xor
insb
add
sub
ficoms
mov
sub
loopne
lea
inc
pop
or
mov
push
cmp
xor
xor
xchg
outsl
jne
aad
or
mov
test
dec
mov
ror
lcall
xor
stc
andb
jge
jmp
pusha
pop
aad
in
sarb
test
xor
pop
lret
mov
shl
pop
sahf
imull
in
push
out
add
xchg
fistps
sbb
pshufw
pop
fs
ja
add
inc
out
mov
outsb
popa
adc
stc
cmp
jbe
mov
mov
pop
es
insl
cs
std
dec
ljmp
and
fs
movsb
loopne
leave
dec
mov
jle
scas
popf
scas
push
sbb
cmp
aam
sbb
arpl
and
cmp
mov
push
in
or
orl
adc
push
mov
mov
repnz
mov
jo
scas
add
sub
pop
jne
roll
cmp
add
jmp
out
sub
imul
and
xchg
int3
mov
mov
insb
out
adc
fwait
enter
push
es
cld
pop
xor
icebp
mov
fldcw
nop
xchg
mov
mov
fmull
sub
sti
ret
mov
das
xor
or
push
xor
je
cmp
push
xor
and
les
scas
xchg
jne
out
fcomps
out
push
add
clc
cli
hlt
inc
mov
mov
push
jb
bound
popl
les
test
xlat
in
ret
fsubl
cli
in
jecxz
xchg
jl
scas
add
loopne
ljmp
and
or
dec
push
jmp
stos
mov
adc
repnz
in
test
into
aad
sub
push
addr16
dec
pop
cmpsb
xor
cwtl
cmpsl
test
sub
rcll
adc
dec
inc
mov
xchg
push
inc
add
xchg
cmp
push
pop
add
pop
addb
adc
pop
mov
xchg
mov
add
dec
paddb
stos
sti
jecxz
lods
cmc
mov
fildll
and
imul
iret
test
aas
inc
pop
xorb
dec
ja
mov
jnp
xchg
ja
sbb
add
push
inc
jecxz
fsubl
and
icebp
fbstp
out
push
fimuls
int
inc
lods
test
sub
xor
push
lods
repz
in
aam
mov
inc
inc
cmp
imul
mov
jge
sbb
aad
ss
aas
aam
jns
push
fisttps
lret
imul
mov
inc
ljmp
lds
push
lods
sahf
scas
push
sbb
jnp
shll
imul
push
xchg
icebp
stos
adc
push
movsl
js
or
xchg
jnp
xor
xchg
aaa
lcall
ja
call
mov
in
dec
std
out
pop
mov
xor
repnz
fcmovnbe
jmp
push
shr
sbb
les
sub
add
aaa
jnp
adc
cmp
push
mov
mull
fistpl
out
ljmp
xor
ja,pn
addr16
into
dec
jmp
dec
in
cmpsb
jp
data16
mov
inc
mov
shl
jb
movsb
mov
dec
sub
aas
sahf
add
mov
scas
lock
xchg
push
cmp
push
or
sub
mov
ret
and
fidivrl
cmpsl
leave
pop
mov
bound
sub
add
insl
mov
ss
adc
xchg
jl
orl
jnp
jl
dec
shld
out
cmc
fnstsw
add
and
push
in
daa
popf
es
jnp
cmpsl
mov
mov
mov
cmpsl
inc
dec
and
mov
leave
idivl
cmp
jae
mov
xchg
sub
mov
js
rcr
jnp
leave
adc
into
add
push
jp
mov
scas
adc
shrb
imul
mov
scas
pop
js
and
dec
xor
sub
daa
cmp
jecxz
or
clc
sar
push
mov
stc
pop
and
int
adc
cltd
mov
movsb
int
clc
testb
inc
cmp
jge
mov
jmp
enter
or
push
cmp
mov
sub
lock
addr16
mov
pop
pusha
xor
dec
in
pop
jle
cmp
pop
add
add
mov
or
xor
cmp
data16
sbb
pop
incl
dec
sahf
xchg
jl
js
push
inc
cmp
iret
pop
or
ja
imul
pop
sbb
mov
loope
ret
lods
cltd
xchg
ja
test
cmp
ficomps
jns
push
mov
shll
sub
sub
sub
pop
mov
jp
mov
fstpl
fdivrs
mov
shll
fdivl
pushf
in
enter
mov
mov
mov
ss
cmpsl
cmp
hlt
sarb
out
imul
and
sub
dec
xchg
or
into
jae
call
inc
mov
cwtl
add
mov
jnp
adcl
pop
mov
test
mov
lods
sub
lret
sti
sub
push
xchg
xchg
sub
mov
and
jnp
repnz
and
stos
scas
jl
jno
push
add
add
repz
hlt
and
inc
push
cmp
lahf
shrb
inc
dec
push
or
rolb
inc
sbb
adc
push
mov
in
das
or
popf
sbb
inc
mov
dec
inc
push
nop
js
fs
aaa
adc
in
and
div
outsl
cmpsl
sbb
mov
in
inc
mov
scas
push
iret
shlb
push
push
stos
pop
xchg
pop
repz
dec
xchg
ja
xchg
or
xor
pop
aad
mov
lea
jecxz
testl
rcrb
pop
pop
lret
lcall
or
or
mov
cwtl
sbb
inc
in
xor
add
in
jnp
mov
dec
cmpsl
movsb
jo
out
jno
or
sahf
push
cmp
lods
shlb
rcrb
pop
push
sbb
adc
jo
and
sub
into
mov
push
and
xor
mov
push
shl
xor
arpl
jge
jns
js
mov
inc
mov
xchg
push
mov
xchg
jb
cmc
mov
outsl
outsb
nop
inc
call
pop
lcall
jnp
out
subb
addr16
jbe
and
fs
int3
or
mov
mov
stos
lret
into
lods
jg
loope
sahf
push
or
or
fidivs
push
daa
outsb
mov
iret
test
sub
cmp
fnsave
dec
mov
push
sbb
lahf
or
test
mov
pop
and
or
ss
or
data16
loope
adc
or
adc
les
adc
cmp
testb
movsb
jl
lret
or
jne
mov
cmp
dec
test
addr16
pop
mov
mov
nop
push
mov
and
rcrl
pop
test
dec
xchg
cmp
jbe
jg
popf
gs
stos
jmp
scas
push
adc
mov
ret
pushf
and
cld
jo
mov
push
into
ja
jl
loop
fistps
xchg
cmpsb
stos
shl
jmp
jg
std
mov
jns
mov
push
sub
lahf
dec
cltd
ss
push
add
ret
ret
insl
sti
and
jp
test
mov
aas
movsb
arpl
cmp
jge
and
jecxz
je
xor
loop
fsubs
movsb
add
jl
insb
xor
push
aad
repnz
mov
mov
mov
leave
or
push
jecxz
enter
aam
pop
test
mov
faddl
adc
push
cmp
fisttpl
outsb
lock
cmp
dec
dec
xor
or
dec
and
jle
inc
jle
outsl
cmc
mov
daa
jp
std
mov
imul
call
lods
cmp
xchg
and
xchg
and
in
out
or
and
scas
insb
push
push
push
cmp
je
add
fs
pop
les
mov
inc
jno
popa
pusha
adc
fsubrl
inc
sub
inc
fisttpll
pop
in
cmp
sahf
jle
pop
outsl
sub
inc
xchg
xlat
insb
jge
mov
mov
daa
mov
sbb
flds
loop
mov
dec
fstpt
push
aad
and
cltd
cmpsb
movsl
pop
cmpsl
std
dec
aaa
subb
mov
lock
std
rol
subl
pusha
mov
cwtl
pop
xchg
lahf
lret
pop
pop
and
out
ficomps
lea
test
popf
test
cltd
cwtl
mov
js
jbe
mov
nop
lea
inc
cltd
loop
mov
imul
mov
xor
repz
test
outsb
insl
sahf
in
arpl
push
or
enter
cltd
adc
into
lret
and
popa
out
adc
mov
push
mov
push
in
sub
test
mov
pop
mov
inc
cmpsb
roll
mov
lods
scas
gs
and
aaa
test
mov
js
adc
cmp
inc
lcall
pop
adc
stos
roll
sbb
sbb
mov
lret
or
fsubrl
sub
push
jmp
jbe
loopne
xor
flds
add
cmpsb
push
shll
clc
fcoms
push
sbb
cli
in
insl
jge
jae
push
mov
cmc
xchg
cmpsb
lcall
das
cmpsl
xchg
punpcklwd
dec
es
rcr
inc
clc
imul
pop
mov
mov
iret
idivb
push
and
popf
push
imul
call
fwait
pop
xor
lock
jb
jp
push
jmp
jno
mov
mov
lcall
stos
mov
mov
stos
mov
xchg
fucomi
cmpsb
loop
int3
and
negl
insl
loop
jo
cld
adcb
add
xchg
inc
int3
pop
cmp
sbb
push
push
pop
sub
adc
and
loopne
push
cmp
sbb
jl
jle
outsl
push
sbb
subb
mov
jp
aam
mov
loope
cs
cmp
aam
repz
sub
dec
movsb
lahf
cmp
inc
cli
dec
mov
push
lock
dec
mov
xchg
test
ficompl
add
xchg
adc
mov
hlt
inc
enter
cmp
cmpsb
xchg
jl
ficoml
fwait
cmp
in
mov
int3
daa
lods
mov
cli
jl
leave
out
mov
in
mov
pusha
mov
ss
xor
dec
cli
or
jecxz
push
mov
test
pop
mov
cltd
jno
scas
fsubrl
pop
jo
xlat
mov
mov
or
icebp
decb
adc
adc
fwait
add
ret
bound
inc
aam
fisttpll
je
inc
das
push
daa
xchg
mov
push
xchg
xor
out
arpl
lock
mov
xchg
sub
addr16
cmpb
sub
out
push
fcom
dec
cmp
outsl
dec
xor
repz
mov
cmpsl
sbb
fistpl
and
ljmp
cmc
xor
pop
lret
cmp
nop
add
add
test
clc
sbb
je
aas
iret
divl
cs
xor
xchg
and
mov
sbbb
mov
mov
lods
cmc
push
addps
or
mov
outsb
mov
rorl
jno
pushaw
ficoms
popa
and
mov
mov
sti
cmpsl
pop
mov
insl
inc
dec
ret
mull
mov
sbbl
mov
in
les
scas
pop
addr16
mull
lea
push
idivl
xor
fiaddl
arpl
ja
jl
xchg
pop
sbb
xor
push
insb
push
sub
push
imul
mov
rcrl
subb
mov
mov
test
jecxz
fwait
mov
jbe
mov
mov
jp
cli
lcall
and
scas
mov
fbld
xor
int
dec
jnp
cmpsl
es
or
inc
sub
cwtl
cmp
inc
je
fldenv
rclb
arpl
cmp
stos
pop
jle
cmp
sahf
fistl
pop
or
aaa
xor
or
cmp
sbb
mov
stos
ljmp
cltd
mov
jp
or
insl
pop
stos
jmp
je
insb
inc
das
inc
xlat
inc
jmp
rol
sbb
and
mov
mov
cwtl
pusha
aas
xor
jmp
adc
sbb
test
xchg
jmp
mov
shll
movsb
push
in
jle
movsl
sarl
lods
xor
lret
push
dec
icebp
cmp
stos
rcrb
xchg
imul
into
je
cmp
cli
scas
xchg
arpl
mov
inc
fdivs
push
mov
dec
xchg
arpl
dec
add
in
and
dec
les
mov
add
cmp
out
mov
xor
mov
repnz
repz
inc
mov
das
notl
jnp
sub
ret
aad
push
in
push
mov
push
orb
movzbl
inc
add
es
dec
icebp
dec
or
outsb
test
xchg
cmp
insb
dec
sahf
hlt
jns
aas
inc
xor
lea
stc
adc
sbb
nop
sub
rol
iret
loope
lods
lods
loope
addr16
jno
popf
into
out
and
out
adc
int
push
int
lds
cld
push
iret
nop
and
mov
jb
scas
inc
xor
fldl
scas
push
push
mov
and
push
data16
iret
inc
mov
sti
sbb
jo
insb
push
pushf
dec
test
pop
ret
iret
jae
mov
sub
pop
mov
iret
scas
cmc
mov
xchg
push
lods
rclb
out
test
enter
sbb
repz
arpl
lret
cmpsb
scas
cmp
jno
icebp
imul
mov
or
popf
mov
fisttpl
out
mov
cmpsl
cmp
xchg
fcmovbe
jle
xchg
aam
cmpsb
dec
xchg
shrl
fildll
loope
shlb
mov
mov
lahf
dec
xchg
fwait
xchg
push
fmull
call
inc
out
fsubs
test
sbb
push
jle
push
filds
sub
add
inc
movsl
or
repnz
subl
mov
jbe
pop
cs
movsb
or
mov
mov
ja
clc
cmc
mov
sbb
jno
push
mov
daa
stos
hlt
out
sub
das
and
repz
shll
dec
movb
sub
and
push
cmp
lods
xor
movsb
popa
push
out
push
ja
sbb
xchg
inc
and
stos
fildll
mov
cmp
add
adc
fmul
mov
fnstenv
sub
sti
shll
cmp
sbb
stos
rolb
daa
test
or
cmc
negl
rorb
mov
pop
sbb
hlt
insl
dec
dec
xchg
imul
cmp
fdivl
mov
jecxz
xor
add
sbb
dec
into
pop
lret
andb
fsubr
insb
push
mov
sub
adc
dec
mov
call
pop
adc
repz
dec
stos
xchg
xchg
test
push
lods
fwait
scas
cmpsl
inc
dec
add
push
dec
imul
addb
lds
mov
insl
aam
rcrb
out
add
ret
sub
fstpl
js
in
or
clc
add
fildll
xor
jge
push
jmp
jecxz
test
bound
jae
push
test
shrb
add
pop
add
nop
scas
loope
mov
dec
rcr
stos
mov
cwtl
ja
mov
int
call
or
fwait
cmp
push
mov
repz
xorl
push
enter
ret
mov
movsb
es
pop
adc
lods
add
jmp
add
add
jle
inc
aas
jno
jo
jecxz
add
or
sub
xorb
push
mov
test
movsl
mov
xor
pop
fnstenv
sub
or
cltd
scas
xchg
sub
jbe
sbb
sbb
pop
adc
lahf
leave
idivl
aam
pop
outsb
mov
dec
inc
inc
cltd
mov
xor
cmpsl
sub
inc
push
fisttpl
ds
cmp
adc
jl
cmp
and
adc
stos
out
pop
imul
adc
pop
inc
daa
cmp
xor
mul
into
lret
jnp
adc
push
and
inc
xor
shll
inc
xlat
dec
aaa
pop
jp
cs
lods
push
inc
xchg
movsb
std
fcomp
aam
fisubrl
lods
sbbl
scas
and
mov
aas
or
push
mov
sbb
mov
sub
repnz
pop
dec
mov
mov
dec
aaa
popa
mov
mov
mov
icebp
aas
stc
fwait
and
orl
test
cmpsb
fists
in
xchg
aam
inc
ret
sub
jl
mov
scas
pop
pop
inc
mov
sti
adc
cmp
push
cmp
ja
sbb
xor
es
cltd
sbb
or
daa
push
je
popa
je
xor
orl
xor
add
mov
cli
dec
push
stc
mov
cli
test
inc
dec
lcall
push
add
dec
fsubrp
lcall
in
in
data16
push
dec
mov
sub
mov
test
add
pusha
jge
pop
lock
mov
push
mov
enter
push
mov
and
and
lcall
cmc
outsb
cmp
adc
mov
mov
push
adc
add
sub
sub
lods
dec
aas
sbb
jns
fdivr
dec
inc
adc
mov
lret
cmp
clc
sub
clc
jno
dec
push
aam
push
arpl
push
repnz
pusha
mov
fidivl
adc
out
hlt
in
and
es
mov
shr
inc
filds
movsl
push
cmp
dec
pushf
in
aam
in
shll
push
shrb
mov
scas
iret
fs
enter
push
bound
aas
jo
rcrl
mov
mov
mov
ds
sbb
push
insl
sub
add
mov
lahf
dec
negl
test
insl
jp
jae
jecxz
nop
inc
and
pusha
mov
pand
fcoml
fisttps
pop
scas
and
imul
push
sahf
stos
fmuls
pop
push
pop
xor
or
aas
fnsave
sbb
xchg
mov
data16
xorl
lods
push
outsl
xchg
jmp
out
outsb
jns
iret
add
jae
sbb
jns
pop
push
or
xchg
jo
push
movsl
sbb
xchg
pushl
dec
or
push
dec
dec
das
popf
rcrb
jb
scas
test
and
mov
adc
shl
lret
std
pop
stc
hlt
hlt
jo
fstps
test
mov
cli
fnsave
sub
je
testb
xchg
cmpsb
dec
adc
or
sub
daa
and
xor
repz
push
mov
xor
ja
xchg
jmp
and
sahf
fnstcw
lods
sub
scas
fnsave
mov
and
in
insb
shl
test
mov
aad
sub
inc
in
sbb
pushf
mov
inc
gs
mov
in
stos
xchg
fdiv
or
int
int3
pop
dec
mov
xchg
bound
add
test
mov
jne
shl
test
add
xlat
mov
imul
cmp
sub
ret
outsb
fistpl
sti
fwait
jo,pt
mov
jno
dec
sub
jg
push
scas
test
mov
aam
mov
mov
or
out
int3
jno
xchg
movsb
fsubrl
pushf
js
pop
sbb
sub
out
std
add
mov
inc
stos
push
jno
and
cmpsb
push
test
mov
movb
and
or
roll
mov
movsb
cmp
pop
push
xchg
dec
xchg
aas
and
test
test
lds
adc
outsb
or
rol
push
add
push
lds
movsb
fsub
mov
fistps
rcll
mov
call
iret
mov
notb
xchg
dec
xor
jns
jo
in
xchg
cmpsl
sub
dec
mov
dec
fwait
add
cmc
dec
lods
mov
fwait
movsl
daa
insb
push
aas
lret
xchg
push
jge
scas
or
push
mov
and
push
pop
aad
xchg
dec
add
jns
lods
loop
xchg
cmp
mov
in
popa
or
scas
lock
mov
cmp
adc
test
dec
adcl
pop
adcl
iret
push
xchg
xchg
push
dec
jb
xor
leave
dec
sub
lret
fists
cmp
xchg
sbb
lds
imul
out
clc
jg
sbb
push
dec
jb
aam
fnsave
cmp
mov
lea
daa
adc
jge
xchg
rorb
mov
jne
es
xor
bound
pop
outsl
call
out
idiv
mov
in
inc
lods
in
cmpb
cltd
in
dec
cmp
pop
pop
jl
repnz
dec
lea
add
xchg
mov
or
cld
push
inc
xchg
and
in
xor
jp
cmp
inc
inc
mov
push
imul
hlt
ja
mov
lods
inc
push
push
std
ljmp
dec
mov
aam
pop
push
push
in
push
mov
push
sub
arpl
int
jle
push
sbb
cmpsl
mov
stos
xor
scas
push
dec
push
popf
lahf
outsl
inc
mov
nop
sub
jbe
repz
mov
cmp
stos
fldenv
pop
mov
sub
clc
into
ret
stc
aam
pushf
sub
xchg
mov
pop
dec
cmp
dec
xlat
iret
dec
loopne
cmp
sti
data16
jnp
adc
fmul
push
cwtl
jne
stos
insb
cmpsl
push
lods
mov
dec
shrl
test
sbb
dec
sarb
outsb
mov
push
test
sub
cld
inc
test
mov
mov
repnz
mov
stc
mov
daa
das
pop
insb
jb
adc
sub
stos
push
add
pop
imul
pop
aad
mov
mov
ret
movsl
jl
popa
mov
sbb
push
add
mov
push
aaa
andl
or
push
icebp
jl
aas
push
xor
add
imul
call
mov
push
sub
fsub
cli
jo
inc
cmp
xchg
lcall
xchg
sarl
out
or
jl
cmp
ja
lret
int3
add
push
sbb
cld
cmc
in
mov
fcmovu
lods
icebp
jb
popa
ffreep
push
inc
ds
pop
jmp
jmp
mov
mov
cli
inc
pop
les
gs
hlt
or
or
inc
jg
adc
mov
stc
mov
dec
push
dec
mov
ja
inc
ret
andl
pushf
mov
leave
xchg
and
mov
ret
enter
pusha
jl
mov
mov
out
push
aam
sbb
shll
adc
in
jl
mov
jg
cwtl
int3
xchg
push
push
mov
jle
loope
hlt
inc
imull
test
inc
push
inc
pop
adc
sub
ret
data16
fisttps
jno
sub
ja
dec
inc
pop
dec
pusha
xor
mov
repnz
gs
mov
add
mov
xchg
push
sbb
push
pop
add
adc
add
les
in
scas
jae
lret
fbld
outsl
filds
inc
in
or
stc
pop
xchg
int
divl
fistl
iret
cmp
push
sub
fistpll
jl
add
xchg
inc
test
or
ljmp
test
cmp
pop
daa
das
in
lret
cli
movsl
cmc
mov
push
inc
and
subl
mov
push
repz
insl
jns
je
add
jg
aaa
fs
loope
mov
dec
cmp
in
fimull
xor
mov
sub
addr16
pushf
cltd
cmp
aaa
push
mov
ljmp
sbb
in
mov
loopne
mov
dec
call
fldenv
movsl
int3
add
and
cmp
sbb
fwait
gs
cmp
int
idiv
sub
sarl
or
mov
mov
mov
test
push
xchg
sub
lods
call
mov
and
xchg
xchg
pop
inc
xchg
std
dec
cmpsb
das
push
fisubrs
mov
idiv
pop
mov
addr16
cltd
cmpsb
gs
adc
iret
das
fidivrl
sbbl
pop
lcall
adc
xorb
fnstenv
and
mov
test
mov
inc
lods
push
xor
cmp
inc
in
aad
pop
mov
mov
lret
lcall
je
sbb
int3
shlb
xor
insl
xchg
sub
pop
jne
pop
push
fs
sbb
mov
lods
cmc
out
into
mov
add
jne
push
add
cli
push
lret
cltd
jbe
xchg
add
and
leave
cltd
adc
pop
pop
lods
in
pop
dec
pop
bnd
sub
sub
in
lret
jecxz
mov
jmp
lods
nop
iret
jge
aaa
rolb
jb
push
sub
add
xor
mov
or
jb
xchg
and
mov
mov
jbe
je
data16
mov
add
push
pop
gs
inc
fcmove
pop
pop
shlb
popa
add
add
mov
jnp
fidivl
push
into
cs
pop
lock
jae
data16
push
and
clc
fnstenv
sub
js
in
fists
pop
stos
jne
shrd
ret
mov
insb
dec
and
push
mov
xchg
out
loope
outsl
or
fcmove
jg
push
pop
outsb
jns
push
leave
test
xchg
pop
inc
iret
sub
pop
mov
inc
dec
inc
popa
test
sub
jmp
cmpsb
jb
sbb
sub
sub
and
cmpsl
call
mov
cld
sbb
daa
xor
insl
cltd
scas
add
pop
mov
data16
ficoms
faddl
fsub
mov
or
into
outsl
in
cmpsl
out
pop
or
adc
push
adc
cltd
add
xchg
pop
repz
and
xor
lods
mov
dec
jge
call
xchg
fists
mov
fldcw
stos
ret
scas
mov
inc
jp
shlb
sbb
shr
pop
push
lock
jo
push
in
daa
push
dec
add
cmp
cmp
jle
scas
and
hlt
mov
xchg
outsl
rorb
idivl
and
insb
repz
cs
enter
loope
dec
or
sub
add
into
push
mov
push
pop
pop
jge
mov
rorl
push
insb
add
cwtl
or
repz
popa
enter
insl
leave
call
fisubs
sbb
push
inc
icebp
repnz
inc
mov
cwtl
push
dec
cmp
dec
loopne
adc
cli
push
xchg
mov
jne
ret
stos
fidivrs
mov
push
cwtl
in
in
push
lret
xor
dec
leave
cmpsb
ret
xchg
pushf
cmc
cld
roll
push
jmp
cmpsb
adc
or
sbb
dec
mov
adc
mov
mov
lods
test
dec
xchg
xlat
mov
pop
rcl
fdivrs
sbb
shrb
and
inc
and
pusha
xor
lds
je
mov
sarl
or
jge
mov
lods
sub
pusha
or
scas
jecxz
jb
or
cmpl
cmp
scas
in
mov
rolb
int
cld
cmp
arpl
push
andb
divb
xlat
pop
clc
icebp
shrl
imul
sbb
lahf
mov
in
mov
popf
pop
jp
pop
jno
cmpsb
int
sub
test
les
lock
lahf
outsl
adc
pop
pushf
mov
fs
and
add
pop
adc
pop
rcrl
ljmp
sub
out
push
stos
gs
bound
outsl
or
xor
clc
outsb
lret
adc
jmp
adc
xor
push
cmc
ficoml
mov
mov
mulb
insb
mov
mov
lret
push
inc
mov
mov
cmp
test
pop
je,pn
outsb
pop
mov
roll
data16
and
xor
jle
jge
mov
pop
dec
xchg
cmp
xchg
repz
out
ret
xor
je
or
in
popa
sahf
push
lcall
nop
out
fwait
out
xchg
std
aas
lret
cli
mov
mov
gs
shlb
sti
fwait
sub
or
adc
scas
aad
insb
mov
fildl
adc
scas
aaa
jmp
sbb
mov
hlt
and
push
xchg
and
mov
std
jg
mov
mov
out
inc
and
mov
lret
lret
dec
arpl
mov
dec
test
sbbl
dec
movsb
inc
nop
xchg
ja
pop
sti
mov
into
imul
incl
addl
dec
jmp
mov
cmp
pushf
mov
in
lcall
aam
sbb
mov
aaa
ds
mov
cmp
add
hlt
adc
or
dec
iret
jo
sub
xchg
pusha
xchg
push
add
loopne
jno
in
fnstsw
jns
fldcw
imul
jbe
js
cmp
stc
dec
mov
lds
dec
cmp
push
push
lock
flds
inc
in
push
jbe
mov
out
lock
mov
push
or
push
cmpsb
lret
dec
stos
jecxz
lret
mov
or
popf
sub
pop
push
jmp
pop
decb
inc
out
icebp
stos
and
xor
imul
and
call
jbe
repz
sbb
and
xchg
cmp
ja
int3
sbbb
ret
xor
gs
cmpb
out
les
ret
iret
cmp
mov
jo
mov
cmp
jecxz
or
cmc
xchg
pop
mov
add
ljmp
jg
and
ror
sbb
cmp
sbbl
movsb
shlb
fistpl
rorl
jns
add
dec
inc
lods
arpl
pop
repz
mov
scas
xor
pushf
xor
imul
sbb
mov
dec
sub
stos
int
rcll
mov
xchg
movsb
bound
hlt
mov
fisubrs
cs
cmp
ret
jmp
jmp
sub
pop
mov
xchg
mov
jg
mov
add
mov
loope
ja
insl
je
in
jb
mov
int3
jno
std
rolb
scas
out
push
loopne
test
push
int3
cmp
jns
sub
xchg
arpl
dec
sub
lock
fstps
rolb
mov
and
std
xchg
add
push
shlb
adc
pushf
cmp
inc
repz
sbb
xor
stos
repz
lock
daa
orl
inc
addr16
inc
mov
out
xor
jnp
arpl
sub
jno
mov
icebp
mov
int
mov
ss
fcoms
lods
push
fwait
add
sbb
sbb
int3
sbb
scas
lods
ss
stos
push
sbb
inc
scas
xchg
addr16
iret
xor
cmp
push
mov
inc
mov
je
andb
add
xchg
sub
addr16
cmp
add
inc
dec
movsb
rcrl
repz
pop
cmp
cltd
sub
lods
fidivl
test
and
mov
andb
pop
insl
xlat
movsl
daa
jmp
jmp
xor
cmp
dec
clc
jb
lahf
test
aam
push
das
std
jns
aaa
mov
mov
ffree
inc
js
xor
or
arpl
jo
mov
fisttpl
sahf
jno
je
lret
or
pop
out
add
or
adc
jno
jns
fwait
das
cmpsb
in
pop
pusha
jnp
or
pusha
loop
sub
incb
xchg
add
jle
cmp
mov
adc
notl
ds
mov
test
dec
pop
xchg
push
mov
pop
mov
mov
mov
mov
jns
push
dec
cmp
ds
movsl
jo
pop
inc
mov
lock
adc
jbe
sti
loope
test
xchg
iret
lods
scas
jp
mov
fisttpl
cmp
add
pop
jmp
aam
sbb
xchg
sub
pop
fisttps
mov
mov
int
lahf
sub
shlb
or
jmp
repz
fbstp
jp
and
sub
cmp
movsl
dec
daa
xor
pusha
adc
sbb
mov
jnp
aaa
jne
mov
in
mov
adc
cmp
pop
pushf
out
lods
xor
push
inc
subb
lcall
nop
sarb
ror
dec
jmp
sbb
push
and
pop
push
jns
xchg
xchg
and
or
push
fidivl
mov
jg
push
rol
filds
leave
and
sahf
add
negl
adc
mov
cmpsl
and
xchg
xor
jnp
push
jne
mov
ss
cmp
popa
inc
or
test
in
push
jno
sub
cmp
mov
stc
sub
add
or
loopne
cmp
lcall
fnstcw
dec
out
das
mov
push
pop
jbe
les
adc
in
mov
add
fmull
rcl
enter
pop
shll
mov
mov
sarl
push
sbb
cli
loop
or
bound
daa
sub
addl
inc
enter
mov
mov
sbb
mov
daa
adcl
pop
out
jg
fsubr
xchg
sti
mov
dec
xchg
push
movsb
sbb
sub
add
mov
outsb
out
push
xchg
je
mov
push
xor
ja
add
mov
into
scas
imul
nop
jecxz
adc
lret
mov
jle
push
push
out
lds
lds
int
sbb
subl
sub
loopne
shlb
and
pop
mov
adc
arpl
mov
rolb
insb
loop
xchg
push
ljmp
fimull
ficoml
xchg
pop
xor
pop
rorl
xor
jle
or
xlat
out
ja
shlb
out
imul
subb
imul
jns
jne
sub
les
bound
dec
push
pushf
and
adc
mov
xchg
mov
mov
movsl
cmp
mov
cmpsb
push
cmc
push
sahf
repz
into
outsb
sub
push
cwtl
sbb
fs
out
mov
iret
into
pop
cmc
iret
mov
repnz
inc
lret
sub
xchg
push
das
enter
imul
cmp
ja
mov
vmulps
push
jnp
jmp
mov
jg
jg
pop
clc
cs
push
repz
xor
leave
ja
push
jmp
aam
push
out
adc
mov
jnp
sarb
stos
subl
sti
pop
test
pop
mov
out
mov
mov
adc
nop
mov
pop
jns
mov
mov
sbb
mov
mov
les
stc
lret
jno
jge
lods
scas
mov
push
dec
pop
lods
rcrb
call
lcall
mov
popa
jl
or
add
jge
aad
pop
inc
adc
int
adc
addl
mov
shlb
ficoms
sbb
aas
xchg
mov
call
push
repnz
int
push
decl
shlb
iret
dec
arpl
push
xchg
pop
sbb
bound
xor
and
stc
sub
sub
inc
ss
clc
add
sbb
imul
xchg
lret
xchg
push
mov
mov
mov
push
ret
mov
fwait
pop
pop
lcall
add
xchg
jge
fs
sub
scas
bound
add
sub
or
dec
insl
pop
insl
mov
bound
jnp
insl
lds
dec
cmp
mov
jge
into
xchg
sbb
sub
xchg
mov
repnz
mov
jo
mov
lods
xor
bound
sub
add
pop
pop
xchg
mov
call
loope
push
jb
adc
mov
arpl
psrlq
insl
jns
lret
mov
pop
lea
jbe
xchg
sub
cltd
cmp
pop
aam
mov
dec
adc
mov
jecxz
or
cltd
je
in
and
mov
icebp
lds
ret
test
cs
push
xorl
frstor
je
mov
test
lret
bound
lcall
dec
inc
sub
xor
or
mov
lret
repz
es
cld
scas
loop
mov
pop
dec
mov
int3
icebp
mov
inc
adc
xchg
and
data16
add
dec
scas
daa
or
insl
dec
and
out
inc
sbb
dec
xchg
rclb
xor
jo
mov
addr16
mov
pop
adc
jl
push
jbe
push
adcb
je
xor
and
dec
test
outsl
dec
push
shll
clc
call
fidivl
xchg
test
out
cli
iret
das
xlat
fwait
cmp
jne
and
xchg
loopne
mov
and
add
imul
jae
xchg
mov
cltd
outsl
mov
mov
mov
push
push
mov
pop
iret
rolb
lods
leave
mov
push
add
adc
cmp
mov
insl
out
jp
sbb
outsl
aam
inc
inc
and
loopne
sbb
mov
iret
into
cmp
mov
movsb
icebp
cmp
ja
lods
push
and
ds
ja
fwait
data16
xchg
fs
push
mov
mov
js
js
push
insb
or
dec
xchg
xor
imul
js
sub
and
std
jp
enter
sub
jl
mov
jl
mov
nop
jae
sub
jp
sarb
lret
push
cmp
pop
repnz
sub
fdivrl
inc
pushf
sub
stos
dec
aad
mov
jp
js
lods
clc
daa
xor
push
in
jecxz
xchg
mov
les
cltd
mov
mov
cmp
jmp
dec
shll
pop
pop
scas
jge
lea
push
sbb
outsl
test
jnp
ja
sub
into
jmp
divb
cmc
cmp
pushf
sub
adc
loopne
movsl
xchg
sahf
dec
pusha
iret
dec
mov
cld
movsl
ficoms
movsb
mov
sti
push
aam
mov
jb
fmul
inc
test
jne
pop
mov
ja
ds
cli
mov
mov
mov
pop
mov
aam
aam
andb
fadds
arpl
xlat
inc
or
clc
fisttpll
or
sbb
scas
or
add
jnp
cli
inc
jno
in
jg
xor
incl
in
sbb
add
out
jb
pusha
push
ret
mov
or
pop
mov
out
lret
test
push
cmp
jne
fs
mov
sub
sbb
jnp
fwait
sbb
outsl
pop
stos
mov
and
inc
cmp
in
stos
fimull
mov
inc
xchg
mov
or
cmpsl
sub
adc
or
loope
inc
sbb
addr16
or
mov
jb
cmp
test
ret
push
mov
adc
xor
fcompl
mov
dec
repnz
mov
gs
inc
mov
inc
mov
xchg
pop
aam
push
sub
push
ljmp
imul
inc
hlt
fstl
das
pushf
stos
stc
xor
sti
lea
jle
sbb
orl
fdivl
xchg
xchg
bound
or
mov
adc
nop
and
pop
sbb
movsb
push
jp
sbb
sbb
scas
inc
mov
gs
adc
mov
adc
lret
mulb
loop
mov
push
inc
lods
mov
xor
mov
inc
push
stos
fs
stc
das
xor
xchg
xlat
shlb
mov
data16
ret
mov
in
test
pop
int
stos
gs
xchg
push
pop
adc
mov
cmp
mov
and
push
jns
cmp
cltd
inc
or
nop
cmp
push
jno
imul
cmpsb
incb
fwait
inc
or
lods
cmc
icebp
xor
imul
and
pop
jle
sub
inc
mov
iret
stos
inc
xor
loope
mov
out
jae
sub
sbb
xchg
add
sarl
rol
add
int3
push
mov
test
jecxz
fs
sahf
sub
xchg
cmp
jno
pop
pushf
scas
add
inc
pop
daa
repz
xchg
mov
sahf
xor
imul
int
push
inc
inc
sub
cmp
dec
jnp
enter
jb
mov
out
aas
js
lret
and
mov
stc
mov
fwait
hlt
es
xchg
adc
and
jg
cmp
dec
or
cli
hlt
decl
imulb
mov
add
stos
rcrb
iret
in
jbe
ljmp
shlb
insb
jbe
cmp
xchg
mov
daa
xor
mov
loopne
rolb
pop
insl
pop
cmp
inc
call
mov
adc
pop
inc
cmp
std
insb
and
jbe
sub
mov
fstps
and
movb
gs
push
cmp
xor
rolb
jns
cmpsb
add
xchg
icebp
adc
add
xchg
inc
iret
mov
or
sbb
int
sbb
dec
lods
push
xor
lods
add
aam
pop
mov
push
xlat
jmp
or
out
sub
out
pop
xchg
test
add
ljmp
das
xchg
es
mov
fwait
dec
cmp
insl
cmp
add
out
adc
ss
cs
std
mov
xchg
cmp
stc
loopne
popa
cmp
je
cmc
mov
aaa
cmpsl
dec
dec
xlat
adc
inc
mov
inc
jge
dec
aas
mov
sbb
mov
mov
mov
jnp
adc
cmpsl
mov
icebp
xchg
arpl
or
push
or
fwait
rcll
lahf
add
int
sub
add
mov
ss
ja
push
inc
hlt
stc
js
movswl
or
jno
in
push
push
cmp
insb
jp
int3
push
xchg
daa
lds
mov
pushf
shr
sahf
lcall
sub
scas
les
std
xor
push
mov
jp
popa
ljmp
fiadds
pop
out
ret
mov
push
ds
out
or
and
xchg
xchg
test
cmp
negb
push
inc
xor
push
das
and
pop
pop
test
loop
push
ljmp
je
and
dec
mov
test
insb
add
shl
pop
insl
imul
mov
nop
test
mov
pop
fs
aaa
inc
pop
xchg
xchg
arpl
mov
movsb
jns
sub
pop
sbbl
test
mov
imul
sti
sub
in
push
das
arpl
out
flds
movsl
scas
imul
xchg
sub
xor
pop
mov
or
in
leave
inc
push
lock
jg
pop
int
jle
push
cs
pushf
dec
mov
sahf
inc
into
xor
mov
mov
outsb
movsl
lret
stc
xor
pop
mov
mov
mov
xchg
inc
ds
lret
ds
cmp
movsl
lock
aam
fildl
dec
push
dec
pop
repnz
loop
sub
xchg
push
faddl
inc
mov
sbbb
xchg
insb
jp
push
mov
and
or
lcall
loope
jae
fimuls
subl
mov
inc
gs
ret
jae
mov
lcall
movsl
int3
in
mov
in
hlt
xorb
sbb
sbb
inc
shlb
rolb
fmull
push
imul
movsl
arpl
xor
test
inc
push
push
jmp
daa
mov
or
or
fdivs
sub
data16
fsubl
mov
enter
inc
pop
lds
ljmp
int
and
mov
add
adc
push
sub
and
ficomps
idivl
ss
pop
and
sbb
push
rclb
sub
sbb
inc
cmp
outsb
jno
cld
daa
js
lret
icebp
cmpsl
xor
dec
test
jecxz
cwtl
pop
adcl
add
test
inc
in
lret
jno
mov
push
aad
inc
inc
adc
jmp
ljmp
cmp
mov
xlat
faddp
lcall
jle
pusha
lahf
push
lret
push
push
sbb
sub
adc
inc
jle
cmpsl
idivb
stc
mov
or
jge
stc
sbb
cmpsl
mov
imul
nop
dec
nop
dec
pusha
or
add
imul
adc
ds
dec
popf
ljmp
lahf
push
inc
xor
or
cmp
fisubs
loopne
dec
ljmp
fldcw
mov
sbb
mov
mov
or
aam
addb
sbb
and
inc
jge
loopne
arpl
push
or
bound
xchg
inc
mov
loopne
and
jp
loop
addr16
add
xchg
aam
xchg
jg
arpl
push
fcomps
xchg
jne
mov
pop
mov
outsb
int
mov
cwtl
mov
in
in
jae
cmp
pop
fidivrl
lret
push
dec
pushf
sbb
subl
pop
xor
pop
mov
lret
int
xchg
jg
stc
or
mov
xchg
divl
pushf
push
jns
cmp
cmp
out
sbb
mov
fbld
out
mov
dec
mov
adc
popf
adc
mov
xor
mov
addl
sbbl
xor
aam
das
xchg
out
mov
out
bound
inc
inc
stc
mov
lret
xor
aaa
mov
mov
sbb
sub
cld
xchg
repnz
lods
arpl
mov
push
nop
outsl
sub
or
push
sahf
and
jo
stc
sahf
dec
js
int
pop
or
test
or
out
and
or
mov
insl
flds
stos
inc
pop
leave
mov
add
inc
lock
mov
mov
sub
sub
out
sbb
dec
or
lea
xrelease
pop
adc
sti
push
fsubrl
jno
aam
jg
inc
cmp
dec
test
aad
push
dec
popf
or
div
sub
in
jae
mov
das
push
pop
and
and
int3
ja
nop
xchg
adc
es
inc
dec
dec
js
mov
loope
fcomp
data16
xchg
jb
xlat
cwtl
loopne
xchg
xchg
loop
cmpsl
adc
xchg
js
xchg
cmp
in
out
repz
lret
ds
dec
lods
ret
mov
and
jnp
pop
repz
gs
loope
inc
pop
push
in
adc
cmp
aaa
pop
or
shll
adc
xor
cmp
cmpsl
mov
lock
jmp
iret
cltd
mov
push
loope
std
scas
fbld
or
and
xor
cwtl
imul
sub
pop
mov
and
outsl
rol
out
shlb
cmp
loopne
jnp
sti
mov
add
shrb
mov
push
mov
addr16
dec
loopne
xchg
enter
dec
add
add
sbb
imul
sbb
mov
aaa
push
lods
inc
imul
decb
pusha
xlat
out
push
push
in
inc
fsubrp
cli
outsb
lock
mov
pextrw
mov
push
cmpl
xchg
int3
cmp
and
pop
stc
xchg
cmpsb
jle
jp
nop
xor
xchg
push
sub
sbb
stos
xchg
decl
scas
cld
lcall
lds
out
hlt
mov
pusha
out
pop
push
imul
xchg
popf
jp
adc
sbb
jmp
inc
jno
mov
cltd
jecxz
sub
int
mov
mov
cmp
pushf
stos
xor
mov
jp
xchg
and
cmc
sbb
out
sbb
jb
adc
dec
into
dec
mov
xchg
push
insb
sub
sub
dec
jp
adc
xor
clc
and
jp
mov
fdivrl
push
and
pop
jp
test
testl
inc
mov
daa
jb
aad
dec
cmp
pop
jp
inc
mov
sbb
lret
pop
mov
mov
loopne
mov
cli
sarl
js
inc
fldenv
mov
fcoml
xchg
adc
rol
mov
or
adc
and
sbb
sti
push
xchg
ds
mov
je
mov
and
push
pusha
mov
mov
mov
pop
push
das
outsl
sub
ljmp
clc
xor
cmp
lods
sbb
mov
sbb
ljmp
nop/reserved
mov
mov
roll
xorl
aas
and
jp
xchg
lret
dec
nop
inc
popa
test
sti
xchg
loope
dec
pop
inc
or
outsb
sub
lea
clc
inc
lods
and
push
jns
repnz
inc
pop
add
mov
jb
loope
mov
xor
scas
pop
iret
int3
jne
xchg
clc
loopne
pop
cmp
call
mov
mov
scas
pop
pusha
jl
push
movsb
fwait
lret
ljmp
imul
adc
outsl
cs
repnz
sbb
xor
and
movsl
inc
sbb
pusha
ret
dec
mov
out
lock
push
pop
add
jecxz
push
data16
mov
ds
xor
push
pop
movsb
hlt
xchg
js
mov
mov
inc
sbb
pop
push
stc
lret
test
and
cmp
outsb
pop
sarl
mov
adc
push
and
insl
push
rcl
inc
je
sub
rolb
cmp
push
lret
out
lea
mov
fldz
pop
shll
jne
lods
icebp
cld
jg
ret
test
mov
stc
pusha
mov
cmp
or
push
cli
pop
jnp
sti
lret
cmp
imul
sbb
mov
notb
pop
in
pop
jmp
push
pop
movsb
lea
int3
and
mov
jg
add
mov
pop
add
js
pop
pop
jns
and
pop
push
mov
cmp
fcom
ret
aaa
sarl
inc
fldl
adc
sub
or
insl
mov
mov
fisubs
ret
aaa
add
add
pop
outsl
push
stos
fdivs
pop
and
pop
icebp
gs
fwait
pusha
fmuls
sbb
sbb
je
cli
or
mov
fucomip
rorb
push
pusha
mov
lods
cmp
les
mov
mov
scas
pop
jecxz
jp
pusha
and
leave
sbb
jmp
inc
push
mov
adc
and
mov
imul
mov
inc
inc
push
lods
inc
xor
adc
pop
in
mov
bound
mov
test
mov
aam
xor
out
sarl
in
xor
mov
and
pop
pop
clc
xchg
cmp
rclb
jno
mov
sub
mov
enter
test
popa
jle
cmp
mov
scas
aas
mov
mov
xor
adc
ljmp
push
xor
in
imul
inc
std
add
aad
sub
sub
jg
push
addr16
call
cltd
push
lahf
fcompl
cmp
dec
ret
rcr
fst
xchg
cmpsl
loopne
add
xlat
leave
in
cmpsb
sti
or
lret
pop
movsl
mov
inc
dec
lea
in
enter
mov
cltd
jmp
fs
sahf
and
pop
add
sbb
je
out
or
fstl
mov
pop
cmp
and
jne
sbb
inc
cs
lea
mov
cmpsl
movsb
pop
cmp
movsl
or
out
cmp
cmpsl
scas
xchg
aad
sub
lret
cmp
nop
pop
in
sub
test
pop
sub
cmp
leave
jns
pushf
xchg
push
outsl
dec
xor
jbe
in
movsl
dec
into
xchg
mul
cli
inc
adc
inc
movsb
push
int3
daa
bound
add
ret
cmp
jo
iret
jge
xchg
jo
pop
icebp
push
dec
ds
mov
inc
imul
std
iret
sti
jg
xchg
aad
mov
push
pop
pushf
int3
mov
pop
pop
mov
pop
fcmovnbe
gs
pop
ja
fiadds
inc
add
sub
call
adc
hlt
pop
repz
out
jmp
or
add
popa
sub
fistpll
xchg
jecxz
xor
xchg
add
repz
xchg
push
aad
das
dec
pop
lret
sub
nop
sub
imul
pop
push
popa
pushf
in
lret
loopne
pop
jge
inc
pop
aaa
mov
popf
xchg
in
femms
mov
mov
inc
dec
xor
imul
push
pop
ss
lds
rcl
sti
mov
sti
xchg
jo
mov
inc
jne
std
les
insl
arpl
jno
dec
sarb
imul
test
jp
mov
push
sbb
icebp
fsubr
xchg
neg
in
ds
or
jno
outsl
sti
and
cltd
jnp
xchg
sub
std
aad
jne
xlat
imul
mov
data16
jle
jno
jbe
xor
sahf
loop
es
nop
and
cmp
arpl
jmp
add
and
adc
pop
in
jne
nop
lea
inc
and
stos
outsl
xor
mov
mov
ret
std
movsb
pop
movsl
clc
icebp
jmp
int3
lahf
push
xchg
xor
cmp
inc
xchg
imul
cwtl
inc
repnz
sbb
or
dec
adc
lret
and
ljmp
mov
aaa
add
inc
cltd
shrb
sbbb
nop
pop
shlb
dec
out
or
rolb
or
dec
stos
es
and
sahf
sub
stos
sbb
jns
xor
jo
inc
cmp
adc
pop
and
sub
das
sub
lods
xchg
scas
sbb
jge
add
cmp
and
fmull
lcall
inc
ret
adc
mov
push
push
jbe
dec
lret
insb
lds
mov
sbb
test
lods
cmp
sarb
fwait
add
fnstcw
lret
mov
int3
das
in
nopl
cmp
icebp
inc
jmp
sbb
in
mov
lsl
push
aas
shlb
dec
push
enter
test
nop
or
lahf
fcmovbe
in
adc
sarl
mov
add
adc
aad
cmp
gs
not
add
jg
das
insb
push
inc
and
mov
mov
xchg
inc
pushf
sbb
pop
push
jne
jbe
jmp
inc
add
lretw
in
push
bnd
mov
and
jmp
pop
adc
cmp
lahf
push
add
xchg
xchg
nop
xor
neg
fldenv
xchg
jo
jnp
and
jno
sbb
stos
inc
push
pop
mov
dec
test
ss
jo
jg
xchg
loopne
mov
pop
shr
pop
loopne
out
stos
sti
test
push
or
sbb
sub
pop
mov
sbb
pop
mov
gs
nop
in
adc
mov
mov
xor
push
shrb
insb
mov
mov
sbb
adc
gs
aad
xchg
cs
and
mov
adc
lahf
out
pop
pop
pop
clc
leave
inc
xor
ss
ds
jmp
cmp
popf
mov
or
mov
ret
dec
xchg
pop
sbb
push
fdivl
sbb
fs
pop
pop
rcll
sbb
gs
xchg
mov
xchg
mov
add
add
and
scas
cmp
jo
fisttps
je
cmp
pusha
pop
sti
fisubl
jnp
adc
movsl
ret
std
lcall
sbb
and
loopne
dec
pop
in
jmp
jb
out
and
xorl
in
call
cmp
or
sbb
lds
jmp
pop
shrl
xchg
incb
push
jmp
sub
and
inc
pop
je
outsl
sti
test
out
jno
fiadds
lahf
jo
mov
outsl
push
pop
sub
and
mov
loop
mov
not
mov
scas
push
sar
jp
in
push
in
in
push
add
mov
cmp
lea
cmp
lret
rcrl
lret
lock
push
test
cmc
adc
dec
mov
scas
sbb
out
or
mov
jns
pop
xchg
dec
sbb
adc
xchg
fwait
adc
movsb
fstl
push
mov
xchg
arpl
jns
sbb
mov
adc
inc
rcrb
pop
loopne
mov
ljmp
outsb
fsubs
das
pop
jns
cmp
inc
imul
sub
test
mov
adc
addr16
fldt
dec
dec
jle
je
sbb
mov
imul
push
mov
mov
dec
addl
in
adc
xor
and
dec
mov
arpl
pop
xchg
push
scas
adc
push
add
push
push
adc
pop
or
int
mov
cs
call
pop
test
push
stos
xchg
pop
leave
pop
sbb
arpl
loop
adc
lahf
sbbb
mov
inc
pop
int3
js
cmp
jle
lahf
xchg
push
mov
loop
aad
lea
jg
mov
adc
out
cmpsb
xchg
fdivp
cmp
int
mov
or
inc
pop
aas
or
jb
add
add
jmp
inc
shll
addr16
test
push
aam
in
pop
xchg
mov
push
loopne
sbb
popf
jno
mov
adcl
ja
rol
lcall
out
ljmp
js
sahf
in
stos
xlat
jo
xchg
fidivs
pop
jne
inc
aaa
fisubl
jl
rcrl
mov
addl
shll
stos
push
arpl
lahf
pop
jmp
jae
les
cwtl
mov
mov
mov
jnp
mov
lret
inc
shlb
movsb
dec
mov
insl
lods
aam
mov
cld
insb
lock
je
sahf
cmp
test
loopne
outsl
mov
les
cmp
xlat
pop
out
outsb
jle
xchg
jle
cli
sbb
jno
jo,pt
sbb
loopne
daa
fmuls
lret
mov
cmp
add
push
xor
cmp
pop
ret
pop
notl
jb
cmp
xchg
lret
sahf
push
pop
xor
mov
push
pop
test
addr16
push
jb,pt
stos
pop
imul
mov
shll
mov
sub
pop
shrb
mov
jb
push
pop
dec
push
fldt
das
xor
cs
mov
lcall
add
lahf
inc
jne
lods
mov
fstpl
scas
add
xlat
mov
jge
or
stc
mov
ds
pop
dec
pusha
cwtl
lret
repz
enter
mov
cld
lods
cmp
cmc
jne
jmp
pop
mov
icebp
popa
pop
jg
mov
std
mov
aad
nop
push
or
enter
adc
or
xor
cmp
dec
and
sub
rol
into
add
mov
cmc
push
aam
insl
push
sbb
cs
sub
fildll
xor
sub
enter
xchg
aad
pop
mov
sbb
cmpb
jecxz
adc
pop
inc
and
leave
cld
jmp
xchg
jecxz
xchg
insb
aam
jecxz
pop
sub
dec
mov
xor
flds
mov
leave
call
adc
dec
stc
js
xor
xchg
xchg
dec
imul
fisttpl
dec
add
or
xchg
mov
xlat
stos
movsl
and
adc
ljmp
add
mov
xor
das
mov
adc
sbb
in
fistpll
push
push
in
dec
addl
scas
stos
push
es
scas
test
mov
push
push
cmp
pop
inc
add
sub
add
jmp
add
jle
fcmovb
inc
ficomps
mov
mov
adc
aad
mov
mov
in
jp
pop
daa
flds
mov
cltd
ffree
jns
lret
shl
xchg
jecxz
mov
cmpsl
testl
mov
in
mull
pop
xor
xor
cmp
xchg
popf
mov
out
jno
pop
mov
fs
mov
jnp
adc
out
movsl
mov
pusha
jno
adc
cli
scas
or
push
in
dec
mov
xor
xchg
pop
clc
dec
daa
dec
inc
loopne
lahf
cs
cmp
out
mov
mov
sbb
iret
dec
enter
ficomps
jno
xor
stos
xchg
jnp
movsb
mov
mov
test
stos
jb
jo
mov
pushf
push
sbb
mov
fmuls
xorb
pop
push
xchg
divl
aas
lret
or
jp
adc
sub
movsb
leave
jb
add
into
js
cmp
cmp
ret
jge
pushf
loopne
test
mov
push
movsb
mov
xor
lcall
xor
outsl
mov
sub
and
ret
sar
mov
mov
push
ficompl
jl
outsl
jle
jl
jle
jb
jns
push
sub
mov
aaa
pusha
xchg
cmp
sub
and
iret
inc
push
aaa
sub
cmpsb
inc
push
pop
out
fmull
mov
xor
leave
xchg
ret
mov
data16
adc
out
push
fxch
ja
pusha
ffree
mov
pop
rorb
mov
es
push
xlat
icebp
test
enter
fcom
push
cwtl
cmp
and
dec
lret
lea
jg
lods
incb
stos
jae
daa
jmp
xchg
movsl
xor
aaa
nop
fisubl
or
pop
jbe
mov
ret
jl
adc
test
jns
push
mov
xlat
bound
pop
nop
push
inc
cwtl
sub
gs
hlt
faddl
xor
xor
out
es
or
cmpsl
xchg
dec
cmpsl
mov
imul
repnz
rorb
idivb
jae
ss
shl
into
mov
sub
and
inc
mov
popf
pop
fnstcw
in
cmp
int
adc
cltd
sub
sbb
and
fnsave
add
mov
pop
andl
mov
lret
push
sbb
xchg
lahf
jp
mov
sarb
xor
in
sbb
pop
jne
add
insb
shl
mov
insb
inc
sub
sti
xor
ja
lahf
test
fs
loopne
or
inc
jb
aad
xor
cmp
test
jb
jo
cmp
dec
pop
insl
nop
jge
pushf
pop
enter
inc
outsb
pop
loopne
inc
mov
xchg
sbb
rcll
aas
pusha
adc
lods
jnp
mov
cwtl
fyl2x
orb
push
sbb
dec
xor
pop
sahf
into
aaa
repnz
mov
add
test
pushf
mov
push
jne
pop
fs
aas
push
mov
sub
inc
daa
test
mov
movsb
xchg
xchg
sbb
cmc
sbb
xor
fsubrs
sub
pushf
mov
push
sbb
cmc
jmp
aam
pop
xchg
rol
mov
subb
into
dec
mov
addl
enter
inc
inc
and
test
movsb
cmp
neg
fdivl
jg
fdivrs
repnz
cld
aas
mov
pusha
cmp
xchg
lcall
lods
mov
sub
shlb
imul
je
mov
jmp
leave
push
lret
int3
jle
mov
jp
das
pushf
cmp
jle
frstor
jecxz
pop
into
nop
dec
aaa
mov
jl
loop
xchg
out
clc
shll
and
sti
loop
mov
lret
mov
push
movsl
imul
add
fdivs
lret
es
data16
pop
xor
gs
jnp
xchg
ficoml
push
int
xchg
jno
push
aaa
jp
adc
mov
adc
ss
inc
cli
scas
jge
popa
scas
cmp
cld
jnp
ja
jbe
adc
aas
xor
int3
out
add
test
lahf
lods
sbb
mov
xorl
sti
jmp
std
xor
inc
push
das
arpl
lock
mov
repz
mov
and
pop
rorl
mov
xlat
mov
xchg
and
and
mov
sbbb
jo,pn
mov
mov
fldenv
inc
mov
scas
shll
jne
mov
movsl
fwait
pop
das
sbb
outsl
es
fucomp
scas
icebp
mov
or
sub
add
inc
mov
cli
inc
fidivs
bound
mov
sar
test
jb
push
push
nopl
mov
dec
outsb
jb
sti
mov
inc
mov
flds
fwait
rcl
pop
inc
js
inc
and
fisttpll
es
ds
je
inc
fidivl
and
es
mov
push
push
inc
dec
rorb
and
stc
push
in
int3
inc
xchg
jae
stos
movsl
pop
cmp
cltd
jnp
or
enter
rcrl
mov
sbbb
shl
outsb
cmp
lock
mov
test
dec
rol
sub
or
repnz
arpl
mov
mov
sbbb
dec
sub
gs
adc
adc
jge
out
adc
pusha
into
rclb
jno
cltd
ret
in
cmpsb
add
lds
lds
lock
xchg
jp
dec
fdivl
or
lods
push
dec
cmp
sbb
rcll
dec
mov
pop
push
mov
pop
fldl
pop
push
ss
fimull
insb
cld
and
insb
adc
fldl
inc
fistl
xlat
jo
gs
cmpsb
ret
lods
lret
fiaddl
test
sub
out
frstor
ds
inc
add
xor
inc
jnp
push
sbb
jbe
adcl
xchg
cmp
sbb
dec
adc
mov
inc
mov
out
xchg
cmp
sub
es
mov
xor
pop
push
cmp
testb
mov
push
sub
mov
and
mov
mov
cmp
xchg
adc
mov
cmp
std
pop
cltd
sub
inc
data16
mov
cmp
mov
or
lock
mov
mov
arpl
leave
aaa
fistpl
in
andl
imul
ljmp
inc
and
sbb
push
sbb
cmp
aam
or
lods
jb
fbstp
add
xchg
lea
imul
push
in
lret
push
pop
or
fsubrl
stc
fldl
sbb
outsb
bound
enter
pop
cld
dec
mov
int3
add
mov
adc
adc
sbb
add
iret
rcrb
push
scas
mov
push
outsl
dec
ds
out
cmp
fwait
push
sti
cmp
inc
in
dec
and
mov
push
sub
movsl
test
inc
sub
adcl
lcall
adc
stos
add
mov
xchg
push
js
xor
mov
out
add
mov
inc
dec
xor
mov
fidivrl
pop
popf
push
jne
jb
mov
fdivrs
push
pop
std
roll
sarb
mov
push
sbb
clc
pop
cs
je
and
popa
nop
cld
mov
xchg
shld
inc
mov
or
outsl
mov
in
rolb
xor
clc
adcl
rorb
fnstenv
jb
arpl
add
loopne
xchg
sbbb
js
testl
enter
pop
push
aad
call
inc
dec
xchg
and
adc
jae
adc
sub
xor
jg
inc
les
jb
cmpsb
xchg
div
ror
jmp
adc
xor
test
fistpll
rcll
mov
jl
insb
bound
add
aas
nop
cmp
pop
push
loopne
mov
mov
aas
xchg
aas
mov
jle
lcall
fistps
add
sbb
or
lods
mov
mov
or
pop
test
pop
pop
mov
inc
adc
sahf
stos
mov
or
and
ret
xor
cmp
in
mov
in
jecxz
ds
mov
mov
lret
mov
daa
data16
pop
fcmove
inc
xchg
push
es
hlt
idivl
adc
jb
testb
in
and
sbbl
mov
push
stc
stos
fadds
pop
add
mov
xchg
xchg
fisttpl
fildll
insl
pop
js
add
add
fldcw
test
or
sbb
cmp
iret
das
sahf
jno
xchg
jno
shl
mov
aaa
cmp
jnp
jbe
xchg
pop
mov
ret
ret
imul
test
cltd
daa
jno
js
push
jp
lds
test
idivl
xor
adc
cmp
mov
mov
shr
push
xor
in
inc
not
mov
xor
jae
jnp
loop
or
mov
test
push
outsb
cmp
sbb
lret
pop
mov
mov
les
insl
sub
mov
test
rcrl
add
mov
lds
rol
int3
xlat
hlt
sbb
pushf
sbb
test
push
mov
lods
mov
jle
cld
dec
pop
jne
sbb
add
pop
mov
and
sti
dec
xorl
inc
pop
push
jbe
mov
popa
pop
pop
mov
inc
jae
lahf
sub
cli
movsb
sti
cmp
sub
jbe
mov
divb
movsb
pop
add
jnp
fistps
xlat
scas
loop
neg
xor
jnp
fcoml
ljmp
xchg
jno
inc
cmpsl
dec
push
pop
push
push
mov
jb
jbe
mov
scas
add
push
mov
jbe
popf
push
sub
aad
addr16
mov
jae
fisubl
mov
xchg
fwait
lahf
dec
out
jns
lods
test
test
xchg
mov
dec
or
inc
idiv
xchg
jo
mov
bound
addr16
mov
xor
lahf
or
jae
and
lahf
sbb
scas
jb
movsb
add
ljmp
inc
into
xchg
fnsave
push
adc
mov
ja
adc
lahf
cmpsl
and
sbb
sti
callw
in
fs
xchg
into
mov
cld
testl
int3
and
ret
xchg
mov
jnp
repnz
ficomps
inc
pusha
adc
loop
fucomp
or
and
jg
int3
cmpsl
pop
iret
out
xchg
pop
add
in
push
mov
loop
scas
notb
xorb
sbb
push
fisttpll
not
rorl
xchg
outsl
jg
repnz
lcall
add
and
lahf
add
nop
jl
mov
les
clc
push
adc
fstpl
stos
pop
sub
lret
xchg
sub
xchg
add
cmp
adc
pop
mov
xor
add
ret
mov
idivl
stc
sbb
arpl
push
inc
clc
loopne
mov
jp
rcrb
call
insb
cltd
pushf
or
cmp
or
inc
xlat
loope
test
cmpsb
push
mov
or
outsl
cmpsl
gs
fiaddl
xlat
xchg
sbb
rcrl
push
cli
push
rolb
out
push
inc
mov
fistps
push
int
mov
pop
pop
mov
clc
xor
pop
inc
and
push
jp
mov
mov
outsb
add
popl
mov
shll
or
sub
dec
inc
inc
cmp
std
sbb
dec
fs
daa
fisttpl
popl
outsl
xchg
xchg
sub
push
int3
mov
mov
push
dec
stc
mov
sub
lds
mov
shl
xchg
out
popf
fidivs
push
xchg
fwait
xchg
inc
inc
jmp
push
pop
in
pop
cli
pop
add
cmp
rorb
test
push
jmp
lcall
cmp
jbe
pop
xchg
fucomip
in
dec
fmuls
mov
rep
pop
insb
or
cmp
push
lcall
lahf
adc
popf
mov
xor
dec
pop
lds
xor
iret
jle
gs
adc
popa
test
or
mov
adc
cmp
sub
pusha
daa
xchg
movsb
sti
incl
cmpsl
or
sub
lds
cmpsb
mov
ror
sbb
test
xchg
adc
cmp
xor
mov
mov
repz
jnp
addb
mov
adc
mov
ljmp
pop
pop
dec
push
inc
stos
lahf
or
mov
mov
inc
popa
call
or
and
mov
test
xor
orl
test
inc
xchg
lock
ljmp
mov
movsl
xor
pop
outsb
xchg
sbb
fidivs
push
xchg
mov
in
dec
loopne
ror
fcom
add
cmpsl
dec
test
sbbb
lret
int
sahf
aaa
cltd
dec
fidivrs
div
movl
mov
rcr
lret
push
movsl
push
mov
pop
or
fs
lods
sti
scas
and
test
cmc
dec
mov
enter
or
xor
hlt
cs
je
xchg
outsb
pop
fidivl
and
std
xlat
mov
loopne
lods
test
sbb
jmp
mov
add
mov
jnp
xchg
fmuls
icebp
jmp
ss
add
add
hlt
vpcmpeqd
call
fwait
cmp
lds
insb
lahf
stos
js
jno
lods
fdivp
repz
lret
jbe
repz
in
scas
clc
add
xor
bound
int3
cs
stc
dec
sub
loop
ret
fidivs
sub
xchg
loopne
xor
xor
movsb
mov
out
sub
and
out
jno
ret
int3
stos
jp
jne
int
push
fsub
adc
mov
loopne
mov
mov
movups
dec
fsubrl
dec
lret
imul
movsb
xchg
out
shl
xchg
popf
jge
popa
stc
mov
mov
and
dec
dec
xor
in
xchg
imulb
dec
push
xlat
or
xorb
dec
data16
inc
mov
in
add
insb
mov
push
add
mov
pop
sbb
scas
fucom
adc
push
sub
push
rep
or
movsb
push
xchg
cmpsb
sbb
scas
cmpsl
push
push
nop
out
outsb
xor
lea
imul
cmpsl
mov
ret
push
push
cltd
push
jae
ss
push
jmp
aas
xchg
pop
inc
push
add
bound
fdivs
call
insb
dec
aaa
es
cmp
adc
jnp
enter
xchg
xchg
cld
movsl
std
fistps
adc
xchg
pop
inc
ret
test
dec
loope
mov
ret
jecxz
lods
mov
mov
dec
dec
stc
shrb
pop
out
out
insl
cmp
xor
xlat
mov
jo
stos
mov
xchg
dec
pop
mov
lock
xchg
sbb
int3
leave
xchg
mov
out
inc
fidivl
add
or
mov
test
fsubrl
jge
rorb
sbb
sub
cmp
cmpsl
out
cmpsl
out
sub
fnsave
push
loope
std
add
and
ror
inc
mov
xorb
fwait
jb
sub
ljmp
outsb
dec
stc
in
inc
sarb
int
pop
les
cmp
rcr
xchg
mov
xchg
add
or
enter
jbe
mov
push
lods
dec
add
loop
into
pop
lahf
lds
daa
rcrb
sti
mov
dec
jo
in
mov
cmpsl
inc
mov
adc
fucomi
test
test
aas
pushl
xchg
jecxz
pop
mov
jp
test
lea
inc
inc
jnp
rorl
cmp
pop
test
pop
out
loop
mov
xorl
clc
pop
jae
fadd
push
inc
pop
sub
fldt
jmp
cld
in
add
sbb
mov
stc
dec
cmp
sub
jno
mov
mov
sub
add
fcomi
fs
std
movsl
cmp
dec
add
dec
mov
jne
or
lahf
ret
sub
dec
sbb
and
jle
push
enter
scas
pop
mov
lret
inc
xchg
mov
lea
mov
dec
ja
xor
in
cli
jo
xchg
xor
pop
inc
mov
lds
inc
xchg
xchg
pushf
sub
add
repz
inc
dec
cmc
jl
es
hlt
cmpsb
loopne
sub
inc
push
inc
xchg
mov
jne
mov
les
cmpsb
in
popa
and
xor
mov
pop
mov
mov
in
jp
stos
pop
xchg
push
data16
cli
nop
dec
repnz
fisubl
jns
mov
pop
jns
jo
add
fidivrl
xchg
mov
xchg
lret
in
pop
sub
sub
xorb
fs
sbb
jecxz
and
bound
and
cltd
imul
insl
sbb
test
repz
add
xor
push
out
cwtl
les
int3
stos
sbb
push
shll
mov
js
loop
ja
push
inc
cmc
pop
es
ja
push
outsl
lcall
pop
inc
push
adcb
sar
xor
sbb
add
inc
mov
jnp
adc
inc
call
mov
jl
dec
sbb
and
testl
add
cmp
jnp
xor
outsl
dec
stc
push
hlt
cmp
inc
ret
mov
test
sub
ljmp
int3
stc
out
insb
bnd
mov
push
rcrb
pop
xchg
lcall
mov
out
mov
aas
fnstsw
test
mov
sbb
test
cmp
and
adc
loope
stos
mov
push
adc
mov
jbe
pushf
imul
push
add
sarb
iret
fucomip
hlt
mov
mov
sarl
jmp
loop
sbb
ror
xchg
xlat
rcl
jg
ja
and
jle
mov
enter
mov
test
jbe
lret
sub
xor
test
pop
xchg
xchg
pop
sub
xchg
sahf
push
push
xor
cmp
sub
rcrl
inc
push
xchg
sub
stos
dec
les
and
daa
xchg
jno
sub
or
push
mov
lret
adc
pusha
into
sbbl
aad
push
and
dec
stc
cmc
leave
dec
dec
push
adc
and
test
dec
arpl
cmc
loope
push
cltd
add
adc
push
imul
sub
inc
dec
or
repnz
in
aam
xchg
xor
jmp
jecxz
pop
lahf
jg
pop
mov
out
dec
repz
cs
pop
cmp
sub
loopne
aam
mov
aas
xor
inc
xchg
sbb
add
mov
xchg
dec
pop
data16
popf
sbb
fstpl
push
push
push
imul
mov
lea
fdivr
testl
ss
out
inc
imulb
pop
push
loopne
lret
push
imul
mov
mov
js
fpatan
pop
push
mov
mov
adc
shl
adc
adc
cmp
jmp
test
add
xorl
sbb
outsl
push
jecxz
lahf
add
imul
test
add
rorb
pop
jg
ret
adc
sbb
xor
ja
stos
jne
xchg
es
or
test
cld
push
fstpt
pop
mov
or
aam
dec
xor
shrb
adc
cmpsl
jg
loopne
mov
lahf
or
mov
mov
inc
mov
xor
cmpsl
adc
xchg
or
push
in
roll
fadds
in
mov
pop
inc
jae
ljmp
lcall
add
out
fsubrp
mov
test
test
pop
inc
add
xchg
xor
pop
jnp
ficomps
jecxz
sarl
sbb
fwait
stos
test
mov
in
popa
jb
or
or
mov
sub
cld
cmpsl
xchg
mov
das
test
jmp
in
jmp
mov
lret
or
cltd
imul
jecxz
and
mov
fwait
xor
pushf
sub
xor
movsl
push
loopne
popf
lods
pop
arpl
bound
iret
int3
mov
or
pop
shrb
xor
shll
pop
or
push
fs
jns
enter
mov
js
dec
pushl
outsl
xchg
rcrb
stc
sub
call
out
xor
inc
popf
pop
mov
mov
xorl
jns
adc
sar
insl
dec
dec
orl
add
and
out
push
frstor
push
decb
xor
test
imul
pop
cmp
fs
jl
sub
std
mov
repnz
enter
cmpsl
test
cmp
adc
bound
mov
jb
gs
jg
mov
loop
xor
insb
addl
jne
cmpsl
dec
je
dec
mov
popf
sbb
mov
ficoml
popa
stos
in
mov
out
xor
mov
outsb
cs
negl
ss
xchg
fistpl
cmp
cmpsb
out
mov
test
sbb
dec
pop
or
adc
sub
sbb
aad
xchg
mov
pop
sbb
jbe
jl
stos
call
dec
pop
cmp
xchg
pop
js
push
xlat
in
xchg
ds
xchg
lock
and
leave
add
aas
fwait
mov
push
fsub
adc
push
repnz
xor
jae
jno
flds
roll
adc
fcompl
xlat
pop
lea
add
jnp
xchg
mov
jb
jmp
lret
jnp
dec
mov
icebp
faddl
cmpsb
jg
subb
test
out
repz
aas
ret
int
aam
cmp
loop
cli
cmp
ds
jb
imul
je
jnp
int3
cs
movl
cmpsl
loopne
jno
and
push
or
and
or
xchg
xchg
inc
outsb
mov
push
cli
sub
sete
das
pop
pop
cmc
pop
cmp
sbb
fisubl
mov
mov
movsl
xchg
shr
aas
ret
adc
lret
add
cmp
add
jp
cld
dec
movl
pause
shrl
loope
pop
in
push
mov
mov
scas
push
xchg
ja
test
out
inc
mov
gs
in
rcll
movsb
inc
pusha
stc
mov
ret
mov
je
out
add
in
aad
fidivl
dec
stos
dec
sub
mov
nop
jne
mov
pop
pusha
jae
xchg
cwtl
dec
inc
dec
and
mov
adc
cmp
adc
lea
cmp
insb
push
xchg
fbstp
add
nop
je
and
jne
gs
fisttps
pop
pop
inc
jmp
add
out
bound
insl
cmp
das
xor
leave
in
jne
stos
mov
jl
mov
cmp
jbe
push
test
imul
test
loopne
lea
popa
in
add
jecxz
add
mov
pop
fwait
sub
sbb
dec
pop
mov
cltd
jbe
iret
jo
add
jae
out
jne
mov
jbe
outsb
add
imul
jl
fwait
pop
push
mov
mov
lods
xor
orl
dec
dec
in
adc
xchg
movsl
adc
out
push
jno
std
call
cmp
pop
and
sub
leave
fstpt
test
movsl
sahf
frstor
adc
fidivs
insb
mov
mov
in
add
ret
push
add
inc
fdivr
xor
push
lds
add
les
js
mov
mov
pop
sub
xor
lea
dec
xchg
adc
cmc
push
inc
dec
insl
or
jno
mov
repz
shlb
loope
je
mov
and
add
movsl
mov
xor
out
and
dec
mov
or
add
loopne
mov
cmp
jae
paddd
jge
jno
pushf
faddl
jno
cmpsb
jg
and
scas
mov
je
pushf
dec
icebp
add
mov
scas
leave
inc
arpl
pop
xchg
decb
mov
imulb
and
jecxz
adc
mov
mov
and
arpl
pop
xor
mov
movsb
outsb
icebp
mov
mov
sbb
sti
arpl
xchg
cmp
add
xchg
cmp
jne
dec
sbb
pop
adc
sub
push
and
adc
lods
xchg
sub
pop
jg
xor
notb
fisttpll
pusha
mov
addl
dec
cwtl
add
and
mov
repnz
pop
cmp
adc
mov
les
arpl
jl
imul
in
bound
mov
dec
dec
jmp
sti
es
pop
cltd
and
movsb
int3
imul
xlat
arpl
push
enter
pop
inc
jns
inc
repnz
loopne
mov
xor
and
dec
cmc
mov
mov
jns
push
and
jns
fsubs
in
fcoml
xor
jle
enter
xlat
cmp
pop
sbb
push
push
pop
fidivrs
ret
js
xchg
add
lret
add
lret
push
sbb
insb
mul
les
fcmovnu
stc
jmp
imul
xlat
push
add
aam
mov
sbb
dec
out
cmp
in
imul
fucomip
outsb
movsl
add
addr16
bound
push
push
mov
int
mov
and
lock
pushf
stos
leave
pop
scas
sarl
aas
push
pop
outsb
outsb
out
adc
insb
and
les
shrl
enter
mov
xlat
cmp
mov
cmp
mov
inc
mov
push
adc
pop
in
mov
xchg
repz
mov
mov
cmpsl
testb
mov
imull
fsts
mov
sti
xchg
inc
xlat
xchg
and
push
mov
inc
mov
dec
js
or
imul
mov
adc
sub
adc
ror
and
fcompl
mov
cmpsl
xor
xchg
jb
xchg
jae
cld
loopne
pop
or
sbb
mov
sbb
ficomps
xor
adc
js
and
in
js
push
ljmp
and
xor
mov
push
push
movsb
jns
sbb
scas
cmc
sti
bound
fwait
lods
jg
jb
add
dec
out
dec
bound
mov
sbb
xor
popf
cmp
push
jns
stc
sbb
or
in
push
jp
test
xchg
jge
out
adcb
popf
inc
lods
adc
mov
cmp
aad
stc
rorl
sbb
pop
xlat
push
adc
jecxz
lret
outsl
hlt
pop
repnz
sbb
push
arpl
out
mov
mov
scas
loopne
add
dec
lahf
imul
xchg
xor
sahf
ret
and
outsl
dec
sbb
adc
out
ja
dec
cmpsb
lods
iret
push
jmp
mov
jnp
jp
cs
addr16
test
loope
repnz
push
outsb
mov
repnz
sbb
movsl
and
mov
cltd
mov
xchg
ds
sub
cmp
mov
dec
enter
xchg
fists
adc
loopne
js
mull
bound
cmp
dec
fidivl
jecxz
mov
adc
jl
mov
adc
lods
sti
cmp
sbb
ret
add
movsb
sbb
enter
and
or
push
loop
fsubrs
pop
pop
dec
not
in
js
cmp
flds
daa
arpl
aaa
inc
adc
sbb
int3
gs
in
xchg
xchg
xor
nop
xor
inc
adc
cli
aam
fistps
sbbb
xor
mov
dec
fwait
pusha
inc
push
out
cmp
or
cmp
dec
mov
in
push
jns
pop
lds
in
pushf
push
dec
out
xchg
fcmovb
sahf
dec
push
hlt
popf
cmpsb
cmpsl
jge
js
adc
mov
cmpl
repz
in
mov
or
or
jecxz
cmp
add
lock
inc
sub
mov
xchg
cmpsl
lea
movsl
int
jbe
sbb
mov
push
fwait
push
or
insb
in
fcompl
push
loopne
dec
cmp
jmp
lret
or
addb
pop
sub
mov
fs
cmpsb
test
call
je
bound
hlt
sub
loop
xchg
fidivrl
sbb
pop
cld
loopne
xchg
adc
in
cmpsl
inc
outsb
and
sub
mov
or
mov
scas
xchg
adc
push
enter
xor
call
xchg
jb
nop
js
sub
jmp
sbb
push
sub
mov
mov
mov
adc
or
loope
mov
jne
xchg
subl
repnz
insb
jnp
mov
es
jnp
insl
sbb
pop
push
mov
cmp
cmp
lret
fisubrl
adc
fcoms
xlat
clc
aas
add
jne
sbb
jl
jmp
cs
add
cmpsb
mov
xor
jnp
jg
mov
test
sti
outsb
adc
repnz
cmp
aas
ss
test
jae
cltd
inc
lea
jge
mov
orl
addr16
jmp
movsb
mov
dec
scas
sbb
imul
mov
movsl
aam
ret
xorl
jmp
dec
push
test
out
dec
fsubrp
nop
pop
jo
lret
jae
or
test
in
add
lcall
jp
jmp
push
sbbb
inc
and
xor
sbb
jg
mov
xor
adc
jae
or
iret
ja
inc
les
jp
mov
push
sti
mov
and
jns
rcrl
push
loop
cmp
sbb
sbb
hlt
add
mov
jle
fwait
cltd
xor
sbbb
ss
test
das
scas
mov
mov
fdivrl
aam
mov
add
cwtl
jns
js
add
mov
stos
push
push
clc
ret
sbb
mov
xchg
xchg
xchg
mov
lret
or
clc
mov
or
pop
lahf
sub
add
in
ljmp
pop
cltd
push
mov
ljmp
std
cmpsb
fnsave
cli
fsts
test
fists
push
int
hlt
inc
testl
mov
pusha
inc
adc
leave
push
xchg
in
daa
insb
clc
xchg
fsubl
push
ficompl
jle
popf
lcall
aad
imul
add
mov
push
sarb
xchg
subl
into
and
in
sbb
faddp
fisttpll
jl
aas
test
hlt
std
mov
pusha
pusha
inc
jmp
cmpsl
loop
imul
mov
or
testl
push
xor
xchg
inc
add
insb
xor
jno
pusha
xchg
fsubrl
pushf
add
dec
add
xchg
push
add
mov
shrb
mov
jge
adc
cmpsb
in
les
or
je
mov
lock
mov
jnp
cmp
pop
cmc
fiadds
dec
add
adc
popf
or
and
fildl
inc
out
outsb
jmp
es
lret
inc
pop
xchg
jecxz
mov
mov
rolb
mov
mov
sahf
mov
lock
jg
cld
ret
dec
jae
pushf
imul
add
aas
push
mov
adc
aaa
mov
mov
pop
cmp
and
loop
cmpsb
push
js
insl
cltd
xchg
sub
repnz
mov
cmp
dec
cmp
and
mov
dec
leave
fisubrs
mov
int3
enter
inc
mov
in
leave
aaa
roll
testb
or
aad
les
xchg
test
mov
mov
sti
dec
mov
les
jbe
cli
mov
cld
cmpsl
adc
in
int3
mov
cs
or
or
push
test
xor
cmp
mov
push
jnp
lds
outsl
and
les
scas
pop
cmpb
lcall
movsl
lret
aad
cmp
imul
sbb
xchg
mov
inc
dec
jnp
pop
mov
add
or
mov
bound
sti
aaa
cmp
into
je
jbe
jl
and
out
sbbl
push
mov
mov
lds
inc
inc
into
orl
jb
jns
subl
icebp
addr16
sub
and
lahf
mov
lods
lods
pop
add
test
jle
cs
sub
and
xor
hlt
mov
sub
xor
push
jo
push
mov
scas
xor
out
and
xchg
fsubrp
xchg
jecxz
or
cmp
push
jecxz
lcall
adc
cwtl
and
jbe
or
dec
ja
scas
shl
xchg
inc
repz
mov
pop
orb
add
orb
lahf
insl
insl
in
jg
leave
movsb
xor
leave
push
aad
scas
xor
sub
out
push
stc
mov
call
mov
pop
sbb
push
test
dec
jg
outsl
cmpsl
sbb
test
aas
or
fnsave
cmpsb
into
lcall
jl
in
js
jo
xor
insl
ss
out
aas
mov
mov
outsl
jmp
in
mov
add
dec
insb
cwtl
iret
xchg
mov
xchg
out
xchg
jae
fcmovu
call
sahf
ficoml
mov
sub
add
frstor
add
or
daa
fcoms
lret
loop
inc
mov
lock
cld
push
xchg
mov
mov
push
xor
sbb
sub
flds
fistpll
clc
icebp
mov
push
inc
adc
ret
ret
jmp
popf
pop
inc
loope
cmp
push
inc
dec
jnp
xor
movsl
fld
test
cwtl
fs
es
outsl
sub
jo
sbb
aad
add
jns
push
movsl
mov
dec
inc
cmpsb
ds
aaa
adc
fimuls
lcall
int3
mov
jmp
xchg
xlat
and
and
sarl
xor
sbb
iret
paddq
xor
ficoms
int3
cmp
xor
cmpsl
call
adc
insl
pop
in
mov
in
insb
aam
test
inc
rolw
push
push
dec
push
xor
xchg
mov
cli
dec
mov
nop
cmp
cld
add
seto
jle
out
or
add
inc
xor
test
shr
xchg
ficomps
sti
push
xor
xchg
inc
mov
hlt
push
pop
sbb
cmp
popa
cmp
add
push
call
and
loope
aas
and
jo
out
and
mov
mov
fdivs
sub
pop
jno
aad
lcall
cmp
dec
inc
jl
test
sahf
repz
stos
call
jge
jae
and
xlat
mov
test
shlb
mov
out
hlt
scas
roll
sbb
sub
cmp
int
push
jns
repz
fwait
pop
fcomps
xlat
aaa
xchg
test
shlb
xor
lods
arpl
jp
cmp
adc
push
adc
je
and
inc
int3
add
bound
cmpsl
lea
pop
lret
stc
pusha
fisubrl
aad
scas
sahf
pushf
push
iret
leave
fs
inc
pushf
sbb
mov
in
jg
dec
les
jns
shrl
inc
inc
mov
mov
fldt
cld
pop
stos
add
xchg
insb
into
push
lret
out
mov
adc
cltd
fstpl
aas
cmp
aam
xor
dec
js
test
cld
fwait
add
out
xchg
or
xor
push
push
shrl
jno
and
xor
fsubl
dec
out
or
mov
hlt
xchg
jbe
add
sub
dec
and
test
or
pop
push
out
cmpsb
mov
nop
adc
mov
fcoms
sbb
add
clc
add
mov
sub
iret
inc
das
mov
add
sbb
xchg
pop
stos
iret
jb
inc
ficomps
inc
and
mov
jb
mov
pop
mov
movsl
cmp
les
xchg
push
lret
mov
mov
out
jnp
cli
xchg
out
aam
mov
mov
pop
insb
push
cs
jmp
rorb
enter
jecxz
xchg
dec
shl
cmpsb
data16
push
pop
jb
mov
sbb
add
cs
sbb
inc
cmp
popa
in
xlat
mov
add
xchg
or
mov
lds
inc
add
popa
sbb
mov
xchg
or
adc
push
xchg
mov
sub
cmp
lcall
xlat
lcall
lds
ja
cmp
pop
xor
pop
int3
mov
es
pop
ficompl
xchg
lahf
jp
dec
or
lahf
and
js
ss
jns
jmp
idivl
jo
out
ret
cmpl
pop
clc
or
je
cmp
mov
mov
xchg
mov
pop
mov
ss
xor
data16
andps
mov
mov
daa
pop
mov
aas
clc
imul
push
mov
cmp
ljmp
pop
adc
mov
adcb
jne
jbe
sub
ljmp
add
jns
mov
pop
add
mov
sahf
xor
push
mov
mov
jae
pop
fisubl
xor
test
scas
std
pop
cltd
hlt
sbb
mov
push
mov
jb
or
negl
adc
cmp
fisttps
fcompl
aad
call
mov
out
and
mov
arpl
in
ljmp
lret
sbb
jl
sub
js
jb
xchg
adc
movsb
pushf
sub
ljmp
fildll
adc
mov
fmull
cmp
push
sbb
or
lea
outsb
mov
inc
mov
cltd
pop
cmp
push
sub
mov
xchg
out
adc
adc
int3
lea
into
pop
mov
cmp
cli
sbb
pavgw
insb
xor
push
sub
pop
inc
cmpsb
or
cmp
or
push
adc
sbb
in
mov
pop
cmp
nop
xor
xchg
jb
mov
ret
sbb
and
jne
jo
ret
inc
sbb
mov
aaa
sub
addr16
mov
jge
dec
fsubrl
pop
sbb
jae
cwtl
add
stos
scas
ja
cmp
adc
mov
movsl
popa
mov
dec
pop
jnp
and
repz
and
sarb
inc
fstl
bound
pushf
sub
dec
cltd
adc
in
iret
xchg
jl
push
daa
lock
imul
insb
lahf
push
sub
subl
xchg
push
push
fs
insl
dec
pop
in
loope
jmp
or
mov
lea
jmp
mov
fcmovne
cmp
mov
lcall
mov
test
lods
cs
jno
jbe
clc
sub
mov
add
fwait
repnz
and
out
popf
push
sub
or
jb
jle
pop
jne
jp
mov
lock
fcmovnbe
mov
or
dec
mov
sub
adc
testb
imul
cmp
pop
dec
dec
sub
or
stc
jp
push
mov
or
in
sti
and
hlt
fcompl
clc
push
add
or
push
xchg
cmpsl
ret
mov
sbb
sti
scas
xchg
cmp
xchg
mov
pop
fldenv
stos
andb
add
mov
jae
sbb
mov
pop
sti
pop
push
cmp
in
mov
lcall
maskmovq
jge
or
xchg
mov
mov
icebp
test
fistl
popf
popl
fnstsw
sub
mov
sub
push
sub
fidivl
enter
insb
push
loope
outsl
call
movsb
sbb
or
shrb
jge
cmpsl
popa
lahf
dec
adcl
popa
sbb
xchg
mov
andb
dec
jne
push
dec
fistpl
xor
sti
in
mov
lcall
sbb
jmp
jmp
ffree
dec
cmc
mov
js
mov
addb
ljmp
jns
mov
pop
mov
pop
jmp
mov
je
out
pop
pop
lret
push
xor
aam
jecxz
cmpsb
loopne
cmp
cs
inc
dec
mov
bswap
aaa
and
iret
insb
out
loop
dec
and
sbb
mov
adc
mov
cmp
aam
xchg
adc
shll
loopne
cmc
es
aas
mov
lea
lds
mov
cmp
mov
popf
and
pop
lock
pop
jmp
xchg
fs
nop
jno
lret
or
lcall
sub
shlb
cmc
mov
in
daa
cmp
imul
hlt
ret
or
sub
mov
sub
adc
and
pop
xchg
dec
insb
push
mov
scas
jg
inc
loop
mov
imul
fistpll
in
dec
daa
push
out
jnp
mov
icebp
xchg
andl
fnstsw
out
add
loop
jns
aaa
jo
shrl
mov
lea
and
mov
or
push
gs
subb
jecxz
ret
pop
gs
sub
mov
dec
or
sbb
xlat
add
push
iret
fwait
mov
xor
push
lds
push
or
pop
pushf
xchg
xor
mov
lods
sbb
cmp
xor
pushf
ret
rol
pop
pop
data16
jmp
mov
aad
mov
test
inc
adc
xor
push
in
in
test
jnp
mov
and
inc
cmpsl
rolb
scas
fldenv
les
fwait
push
mov
mov
pushf
lret
pop
popf
dec
aad
clc
mov
jecxz
fadds
cmp
fs
scas
sub
aaa
mov
mov
cltd
jmp
outsl
std
jp
cmp
pop
jecxz
cmpl
xor
call
cli
in
inc
nop
lret
lret
push
adc
mov
enter
xchg
xor
jns
inc
jl
push
xchg
clc
adc
and
adc
fwait
in
sub
outsl
sbb
daa
mov
std
fwait
lahf
shlb
xor
add
jbe
ret
push
mov
sarl
jno
or
xchg
cwtl
lods
repz
dec
mov
fwait
pop
dec
or
mov
sub
inc
cmpsl
mov
shll
repnz
out
add
cmp
xor
fwait
jle
out
dec
gs
xchg
inc
jb
xor
xchg
int3
push
pushf
mov
add
sbb
dec
xor
jne
or
push
bound
dec
in
sahf
movsb
lods
xor
jp
lahf
inc
les
iret
mov
scas
push
loopne
sub
fistpl
pop
test
sbb
rolw
xchg
fstl
add
fcompl
pop
das
inc
xor
dec
cmpsb
inc
lods
test
mov
jmp
push
lds
pushf
jno
dec
pop
jl
das
shr
mov
imul
into
push
sub
push
rcrl
into
xchg
pop
clc
mov
arpl
xor
jp
nop
insb
mov
ret
js
jmp
call
fwait
xchg
cmp
es
xchg
popa
ja
and
cld
ja
hlt
xchg
jmp
es
out
sub
mov
mov
mov
fsubl
cmpb
jge
add
mov
xor
push
dec
mov
inc
push
cmp
bound
inc
movsl
or
cmp
adc
decb
push
test
dec
ret
pop
aas
adc
push
scas
add
xor
mov
xchg
shrl
aad
ja
mov
inc
dec
iret
mov
mov
mov
clc
fdivl
and
dec
ds
xchg
xchg
push
shll
clc
add
stos
idivl
pusha
shlb
addb
lahf
mov
xor
insl
lcall
shl
movsl
adc
lods
shlb
imul
test
pop
add
addr16
popf
fcmovnu
stos
cmp
aas
ja
sbb
aas
mov
adc
xor
xchg
aaa
mov
push
jne
lods
dec
je
aad
sbb
addr16
sub
movsl
aas
gs
push
mov
ret
and
pop
hlt
roll
fildl
pusha
xor
hlt
push
push
stc
dec
mov
movsb
dec
loope
orl
and
push
dec
inc
inc
leave
push
subb
imul
test
add
push
in
mov
adc
xchg
xchg
xchg
test
mov
sbb
mov
or
push
cmp
test
sahf
imul
ret
sbb
adc
mov
into
arpl
dec
adc
lret
test
nop
push
cmp
pop
and
pushf
aam
mov
leave
push
xor
fisubrs
imul
mov
jns
pushf
leave
inc
loop
mov
hlt
shr
mov
pushf
jns
test
push
fsubrl
sarl
mov
add
aam
pusha
mov
loop
inc
inc
or
or
stos
and
mov
xor
and
fwait
push
and
add
cli
lret
add
testb
cwtl
fwait
push
mov
mov
push
push
out
pop
js
out
movsl
decl
cld
and
push
sbb
loope
lcall
add
jno
pop
test
or
jg
sti
xchg
dec
dec
xor
mov
aas
lods
lds
popa
sub
adc
push
clc
loope
jne
xlat
cld
xchg
mov
cmpsb
adc
and
ss
clc
sub
xor
dec
clc
imul
inc
xchg
and
rcrb
movsb
filds
add
push
cli
sub
nop
insb
jle
dec
ret
pop
jo
jno
rorl
sbb
xor
xor
jno
xor
xor
sbb
loop
outsl
ficomps
mov
mov
inc
inc
xchg
sbb
icebp
mov
cmpsb
fbstp
sbb
adc
push
adc
outsb
sub
ret
je
sbb
pusha
sbb
sbbl
xor
arpl
data16
xlat
pop
jle
lret
jnp
dec
outsl
pop
movsl
aam
loope,pn
addl
sub
or
xchg
fs
inc
fsubrs
iret
xlat
mov
mov
dec
pop
shrb
sub
shlb
sbb
sub
rolb
mov
pusha
test
mov
insl
outsb
fistpll
jbe
andl
xor
bound
inc
pop
inc
out
ret
inc
adc
out
mov
into
and
dec
xchg
incl
mov
push
mov
cmp
daa
sbb
leave
pop
cmp
clc
sub
imul
jo
sar
lret
pop
stos
or
xor
test
dec
aas
bound
out
test
pop
fs
andb
cltd
push
jnp
adc
xor
mov
mov
cltd
cmc
gs
int3
scas
mov
flds
ficoml
push
mov
pusha
sarl
add
imul
mov
sahf
pop
dec
icebp
fwait
enter
lret
mov
push
movsb
or
das
into
mov
dec
insb
js
addl
mov
push
lret
mov
add
mov
add
jle
jnp
xchg
lahf
push
jno
aam
into
xchg
cmp
adc
push
sub
adc
xchg
call
out
icebp
sbb
cmp
add
sti
mov
subb
aam
adc
fcmovbe
mov
das
sub
mov
pop
pop
pushf
jge
sbb
insb
loope
mov
int
mov
xor
enter
push
inc
push
scas
mov
add
jne
cmp
mov
add
sub
sub
cld
xor
jnp
mov
jmp
cmpsb
sbb
push
fildl
xchg
sub
push
adc
faddp
pop
and
adc
jae
mov
into
in
mov
clc
mov
inc
clc
dec
icebp
mov
lds
push
enter
mov
cmp
push
pop
inc
or
int
aaa
loopne
aas
mov
cmp
subl
inc
mov
stos
sahf
js
ret
jo
ja
fdivs
pop
and
push
decl
out
xlat
or
inc
dec
jae
add
movsb
sub
es
fistpll
pop
hlt
inc
arpl
adc
int
ds
sub
pop
push
jne
daa
jns
adc
test
pop
jb
xchg
dec
aaa
das
popa
repz
add
mov
sub
popa
aas
les
pop
jno
push
push
leave
xlat
js
cmc
xor
orl
xor
add
test
jmp
arpl
test
sub
pop
mov
dec
or
lahf
cmpsb
lahf
sbb
and
mov
mov
dec
jecxz
mov
mov
jmp
and
test
cmp
or
cwtl
mov
std
dec
lods
sub
stos
dec
xor
and
xchg
jg
jne
stc
sbb
dec
xor
push
mov
iret
ret
xchg
repz
mov
lahf
mov
sub
in
in
sti
dec
mov
mov
pusha
aad
cmp
sub
push
rorb
sbb
popf
sbb
and
pop
insb
in
sbb
mov
xorl
das
mov
mov
icebp
cmc
and
pushf
movsb
lcall
xchg
xchg
ljmp
xor
mov
fadds
dec
lds
test
xor
out
out
jg
and
xor
cmpsl
addr16
loope
add
movsl
adc
js
push
fbstp
es
xchg
or
jmp
inc
fsts
add
inc
sbb
dec
and
jnp
sbb
dec
or
push
and
cmc
testb
leave
jns
lods
push
nop
pop
mov
fimull
outsl
mov
inc
fwait
addb
ss
cmp
fmuls
pop
or
repz
dec
pop
xchg
aad
aam
adcl
pop
loop
jb
shlb
mov
pop
fcomp
xor
and
sbb
adc
jb
jg
mov
mov
addr16
inc
cmp
scas
aaa
fadd
xchg
xchg
outsl
fmuls
add
pushf
mov
cmp
jmp
in
scas
ret
pop
ja
fsubrl
stos
lods
sub
dec
mov
mov
fsubrl
nop
mov
mov
and
mov
in
push
jmp
adc
into
pusha
or
or
cmp
mov
push
pop
scas
push
add
in
lcall
aam
mov
jge
jnp
mov
push
and
clc
or
push
xchg
lahf
add
pop
aam
pop
jge
sbb
jmp
xor
mov
cmpsb
cmpsb
fs
or
inc
push
insl
jge
out
out
fwait
lret
pop
popa
push
or
cli
jno
cmp
test
mov
cwtl
int3
xor
data16
int
popa
xchg
dec
jl
aas
popa
push
lock
jbe
push
mov
xor
push
add
mov
fs
imul
inc
fmulp
mov
mov
jmp
xchg
add
outsb
cmpsl
cmpsb
nop
adc
cwtl
clc
and
jo
cltd
bound
mov
sbbl
rcr
loope
in
cmpl
push
add
pushf
and
popa
push
test
cmp
xchg
dec
and
mov
mov
sub
cmpsb
hlt
push
fs
scas
sub
jge
pop
push
mov
in
mov
andb
dec
test
ds
outsl
jl
adc
and
shlb
xor
outsb
mov
or
cmpsl
jge
or
rolb
mov
jp
jg
sbb
ja
lahf
faddl
jecxz
cwtl
xor
int3
shrl
insl
cmp
cmpsb
adc
cs
adc
or
or
add
fdivs
test
test
orl
roll
in
mov
or
sbb
les
movsl
jl
movsl
ds
inc
push
ja
add
jmp
ja
cmp
cwtl
jno
sbb
aam
lea
gs
jns
les
dec
sbbb
in
imulb
out
ret
dec
and
test
fbstp
mov
jecxz
daa
test
mov
filds
aas
int3
stc
inc
int3
mov
push
cltd
jmp
jecxz
aam
movsb
popf
push
aas
mov
mov
mov
icebp
popf
insb
mov
and
push
mov
pop
and
aad
push
ret
mov
push
inc
mov
mov
dec
mov
lods
aas
enter
lret
pop
mov
add
cmp
faddl
pop
in
mov
dec
inc
mov
fsts
sbb
jl
push
andb
test
ret
ud1
lahf
roll
fidivl
mov
scas
mov
insl
xchg
lock
dec
mov
push
cwtl
dec
and
inc
data16
pop
cld
adc
in
dec
shlb
mov
add
push
jle
adc
ljmp
outsb
rcr
pushf
cltd
ret
ljmp
jb
xchg
cli
in
scas
loopne
push
adc
popf
inc
sub
dec
or
shrl
jns
dec
dec
cwtl
movsl
mov
push
cmp
lods
in
mov
jge
and
loop
dec
nop
sub
in
lret
pop
jecxz
jg
jmp
pop
pop
mov
sub
push
in
fisttpl
insl
lock
or
popa
or
inc
les
aas
cmp
jne
mov
push
inc
imul
jp
nop
ret
inc
in
adc
jae
fisubs
push
cld
sub
cwtl
dec
mov
ljmp
cmp
and
int3
sarl
xchg
imul
sarb
and
push
pop
mov
mov
add
sarl
inc
jp
or
xor
mov
andl
pushf
and
bound
clc
je
add
out
fs
jg
jae
sti
xchg
dec
xor
mov
nop
lret
xor
mov
jecxz
push
aam
aad
test
cld
pop
stos
sub
jbe
cmc
sbbb
mov
fistl
shll
push
sarl
mov
rcll
pushf
cltd
pop
or
scas
popf
lds
in
arpl
jge
or
cmp
int3
out
jb
ss
xchg
cmc
mov
or
fimull
test
in
jg
scas
push
test
insl
cmp
dec
push
cmpsl
sbb
pop
xchg
testb
jl
cmp
sbb
pop
mov
pusha
sub
mov
scas
inc
mov
dec
mov
bound
ret
xchg
xor
mov
sub
or
icebp
mov
add
mov
inc
out
inc
fsubl
add
lahf
xor
stos
mov
cmc
clc
iret
scas
inc
xor
in
mov
lcall
shrl
jnp
sbb
bound
xchg
dec
xor
jp
addr16
push
lods
outsl
mov
inc
jmp
pop
mov
nop
loop
pop
mov
incb
cmp
sub
xchg
mov
mov
sbb
sbb
adc
pushf
jge
mov
adc
mov
xchg
popf
bound
pop
pop
adc
addr16
or
pop
adc
pop
pop
loop
fisubl
fidivl
and
jo
cwtl
sbb
mov
adc
sub
push
aad
add
shr
mov
mov
xchg
sbb
push
push
pop
inc
outsb
hlt
cmc
dec
jmp
xchg
add
xor
mov
gs
sub
mov
ret
aas
sbb
jecxz
popf
lea
xchg
ret
in
sub
cmp
pop
mov
jns
das
dec
push
push
test
push
out
sub
test
xor
add
test
iret
push
jg
andb
or
jle
xor
shlb
sbb
cmp
addr16
aam
xor
int3
jl
inc
adc
in
xor
sahf
sbb
mov
int
mov
lods
stos
orb
in
iret
popfw
cltd
scas
mov
rorb
jne
push
and
repz
stos
sub
mov
cmpsb
add
dec
xor
notl
ror
xchg
or
adc
jecxz
add
dec
push
in
add
inc
add
xchg
push
cmpsl
repnz
fadds
fmull
cmpsb
xor
pop
inc
out
mov
popf
bound
insl
movsl
mov
adc
pop
mov
xor
jge
bound
xchg
dec
cli
hlt
aas
loopne
test
sub
cmpsb
cld
into
push
pop
leave
lea
movsb
mov
ficomps
sbb
rolb
xor
js
popa
jge
jns
mov
imul
lret
ficoms
nop
or
mov
mov
and
int
sbbb
test
push
mov
jmp
mov
dec
add
cltd
mov
pop
sarl
mov
dec
mov
shll
ds
int
cmp
sbb
xchg
jmp
ja
xchg
ret
stos
jecxz
pop
jecxz
mov
adc
shlb
or
divb
repnz
add
lods
fsubr
fildll
cmp
fwait
dec
bound
xchg
xchg
popf
xchg
cmp
mov
es
xor
lds
add
lret
insl
jne
push
mov
pop
push
and
fiaddl
mov
jno
das
sbb
sub
std
mulb
xchg
sub
push
jno
mov
fdivs
jnp
stc
pusha
push
in
add
xchg
imul
inc
jmp
dec
pop
fmull
pop
loop
in
jge
sub
fdiv
cmp
pop
sbb
sub
std
add
cmc
adc
repz
cmp
sbb
scas
ja
mov
ss
dec
jnp
inc
or
outsb
or
jae
push
push
pop
inc
jg
getsec
cmp
mov
sbb
clc
movsb
int
sub
ss
xor
push
inc
outsb
out
add
ficoms
aas
add
enter
adc
xchg
call
cs
out
cltd
cmp
into
jo
ret
xor
mov
out
mov
sbb
das
mov
scas
jmp
push
shrl
adc
out
scas
add
sub
orl
and
pop
arpl
add
dec
mov
xchg
addr16
sub
mov
out
ds
pusha
movsb
test
mov
lods
into
ss
dec
popf
mov
insb
sub
hlt
mov
imul
cli
lahf
push
mov
fyl2xp1
push
mov
mov
out
xor
jmp
loope
jecxz
mov
pop
ljmp
pop
sub
xchg
popf
sbb
adc
sbb
and
xor
sbb
fistl
imul
mov
sbb
add
sub
and
stc
data16
rcr
xchg
dec
jle
sub
xchg
cmp
mov
enter
inc
cltd
xor
shr
in
push
xlat
out
scas
test
push
mov
sub
dec
jmp
xor
mov
lcall
dec
stos
xor
jbe
cmp
pop
or
into
jo
aad
aad
in
pop
xchg
pop
mov
test
mov
push
adc
icebp
fucomp
adc
xor
push
test
aas
mov
xor
or
jmp
movsl
orb
call
test
cltd
outsl
sub
movsl
push
sbb
xchg
xor
or
mov
orb
push
cs
repnz
jo
xchg
xchg
adcl
mov
jbe
movsl
mov
inc
fimull
arpl
outsl
mov
arpl
sub
push
int
sbb
pop
mov
cmpsb
hlt
call
in
or
jecxz
cmp
jno
mov
ss
push
imul
out
xor
mov
dec
jbe
push
out
dec
push
sub
test
xchg
push
shl
test
sbb
nop
mov
pop
jmp
push
or
xor
loopne
ret
dec
repz
jo
jg
jmp
jb
xchg
notl
mov
shl
xchg
push
fisubl
out
scas
fmul
jnp
and
ret
xchg
cli
add
pop
pop
adc
push
xchg
xor
call
imul
and
lcall
pop
ja
xlat
mov
loope
sbb
push
and
jne
and
mov
adc
fsubrs
loope
pushf
adc
inc
subb
ja
int
aad
lods
add
mov
in
xchg
inc
lahf
in
mov
fnstenv
jns
mov
popf
popa
cmpsb
xor
sub
shrb
and
loopne
push
or
clc
push
mov
fisubrs
das
fistpll
dec
cmpsb
inc
fldenv
sub
cmp
mov
pop
ljmp
rorl
in
xchg
or
cmp
mov
or
cwtl
divl
or
xchg
mov
hlt
arpl
adc
rcl
bound
inc
arpl
add
inc
sub
add
jbe
sbb
dec
ret
xchg
cli
call
and
pop
ljmp
mov
jb
xchg
outsl
mov
inc
pushf
mov
inc
movsl
mov
dec
add
jno
lret
fisubs
lret
lea
in
pop
js
data16
test
xchg
or
imul
out
bound
xor
xor
flds
test
fsubrp
sbb
pop
fldl
or
das
mov
popf
cli
cli
mov
mov
or
test
pop
imul
push
sbb
mov
cmpsl
outsl
jmp
sub
cmp
sti
push
inc
xchg
xchg
insb
inc
icebp
sub
addl
xorl
or
lds
push
lret
xchg
int3
fisubrl
dec
rclb
xchg
lods
mov
cmovs
dec
loop
sub
or
adc
and
mov
sbb
imul
mov
sub
sbb
push
xchg
sub
xor
or
js
adc
adc
jmp
cld
push
push
push
cmc
rorl
test
dec
rcl
pop
or
xlat
test
stos
and
mov
push
loopne
cmpsb
push
negl
mov
outsl
in
add
add
sbbl
repz
cmpsl
mov
js
push
add
out
jg
xor
shrl
xchg
inc
xchg
add
dec
fstpt
pop
out
dec
shl
in
es
sub
xchg
ret
sbb
adc
insl
outsl
fdivrs
imul
test
jmp
pop
cmp
fs
jno
divl
sub
xchg
loop
stos
push
cmc
call
bswap
cmpsb
cmp
jg
shll
pop
mov
into
inc
cmp
mov
inc
pop
mov
cmp
orb
mov
int3
dec
lods
sub
xchg
testb
fidivrl
adc
inc
lds
pop
xchg
movb
sbb
test
dec
inc
mov
jbe
mov
mov
pop
adc
lods
jmp
push
inc
lcall
cmpsl
mov
gs
sti
aam
std
clc
imul
mov
xchg
sbb
aas
sbb
jnp
repz
ja
jmp
imul
leave
pushf
sbb
push
addl
inc
pop
movsb
fwait
je
jo
cltd
fneni(8087
int3
push
out
jmp
sbb
and
ljmp
push
pushf
push
testb
inc
dec
cld
aaa
test
mov
int3
dec
fcoms
rclb
xor
add
fistps
shrb
data16
adc
push
jge
test
jp
sub
xor
out
fidivs
arpl
ds
mov
xchg
mov
push
out
push
and
ja
gs
scas
sbb
mov
and
mov
out
mov
mov
sahf
int3
mov
push
hlt
daa
aas
aam
mov
inc
iret
lods
into
testl
and
dec
mov
std
pop
adc
pop
add
cmp
cs
dec
adc
lods
movsb
xlat
in
fiadds
pop
inc
mov
shlb
add
jno
sub
and
cmp
orb
add
sarl
cvtpi2ps
or
and
mov
ret
or
adc
xchg
dec
cmpsl
mov
hlt
push
sub
shll
mov
stc
push
jne
cmp
jno
and
mov
jecxz
cld
add
aad
iret
mov
xchg
pusha
insb
out
xor
in
test
lcall
jle
pop
sub
test
rolb
sub
lods
adc
cmova
pop
popf
sbb
test
inc
sub
jnp
lds
fmul
imul
je
out
sti
sub
das
mov
xlat
jbe
xchg
pop
mov
push
push
mov
xchg
mov
sub
or
xorb
xchg
inc
daa
lock
gs
pop
sub
pop
aaa
pop
cs
or
addr16
popf
mov
inc
dec
jno
xchg
pop
pop
add
lods
jb
in
pop
cs
xor
gs
jne
sahf
xor
ja
and
mov
arpl
or
popf
and
mul
test
rclb
lea
or
xor
lock
les
push
fsubr
adc
ret
mov
push
inc
jmp
cwtl
jl
call
sbb
ljmp
test
dec
cmpsl
jg
cmpsl
addr16
enter
mov
cmpsl
add
dec
xchg
inc
add
rcrb
pop
test
inc
mov
das
or
roll
cmp
mov
dec
or
decb
add
and
jg
arpl
sarl
aad
cwtl
adc
dec
mov
pushf
cmc
insb
jge
aad
inc
orb
xchg
repnz
or
in
or
cmp
dec
stc
xor
cwtl
data16
push
sti
iret
cli
cmp
jg
lret
sbb
push
ljmp
add
insl
daa
mov
loop
lret
mov
pop
mov
pop
bound
cmpsb
and
dec
jne
ret
inc
xchg
bound
js
jge
cwtl
dec
mov
hlt
sbb
cmp
mov
jl
cmp
dec
push
int3
jge
dec
dec
imul
cmp
mov
or
sbb
or
jb
pop
jbe
push
fisttpll
adc
or
js
and
pop
test
addl
sahf
sahf
lds
or
scas
and
pop
jmp
sbb
fwait
inc
mov
mov
pop
out
push
cld
jg
xlat
shrl
popa
or
out
pop
jl
add
jl
or
das
das
dec
iret
sbb
dec
mov
fstpt
mov
mov
jnp
iret
adc
jb
inc
test
mov
sub
mov
shl
ja
shll
js
in
cmp
dec
jg
jl
dec
jno
loopne
cld
out
sbb
mov
sub
aas
xor
nop
mov
test
adc
jp
push
xchg
add
mov
jmp
pop
mov
or
icebp
movsl
push
adc
inc
nop
pop
pusha
into
lods
subb
push
arpl
js
adcb
enter
test
or
popa
xor
es
pop
and
xor
sub
pushf
pop
subb
scas
add
imul
pop
in
pop
and
daa
mov
stos
sub
pusha
dec
mov
in
cmp
lods
or
sub
xchg
mov
fs
add
in
fmull
in
inc
inc
fisubrl
inc
mov
or
xlat
jb
dec
fcmovb
and
mov
cmp
dec
in
orl
jno
jle
push
dec
jno
mov
add
insl
hlt
pop
cmp
cltd
or
lds
aas
fwait
sub
data16
pop
xor
stc
in
dec
or
or
aas
aaa
push
shrl
sub
js
or
mov
test
pop
push
jae
pop
in
test
pop
nop
mov
adc
xchg
xor
add
ror
push
and
stos
daa
popa
outsl
adc
cmpsb
mov
sub
shrl
rcl
mov
mov
xchg
jge
jg
jmp
in
lret
fists
adcb
arpl
hlt
or
push
xchg
fs
sub
fistpl
sub
cmp
mov
mov
xor
mov
lock
imul
jo
test
loopne
ja
std
call
ds
sahf
lods
leave
and
fwait
add
shrb
int
fnstcw
xor
stos
sahf
js
mov
sub
in
jl
lret
out
lret
shlb
xor
dec
jne
jecxz
fadds
ficoml
dec
inc
dec
dec
xlat
dec
lret
scas
sarl
mov
das
mov
and
inc
loope
xchg
mov
test
stos
rcll
inc
push
ljmp
or
imul
lahf
xchg
imul
push
cmp
fwait
dec
test
lods
popa
lcall
jae
icebp
hlt
add
sub
cmp
test
sahf
fistps
fisubrs
add
cmp
dec
imul
dec
inc
mov
fistl
cmpsl
loopne
jo
repnz
repnz
aaa
mov
pop
jle
xchg
divl
inc
insb
out
jbe
das
fsubrl
jbe
in
dec
rorb
test
push
into
or
mov
fdivs
lea
push
xchg
push
push
adc
jp
or
xchg
jae
cli
pop
push
cmp
sahf
push
xchg
inc
push
mov
scas
adc
push
push
jle
sub
sub
adc
jmp
std
scas
mov
mov
jae
out
test
and
fstpt
push
lods
movl
int
cmp
adc
cmc
subl
mov
rcl
pop
in
loopne
pusha
les
sub
test
inc
or
sbbb
add
fcoms
addr16
hlt
insb
frstor
xchg
pop
inc
aas
lret
sti
xchg
fstl
clc
rorb
lods
mov
in
sahf
sub
cmp
in
xchg
je
fcmovnu
jns
cmp
and
movsb
pop
jecxz
gs
adc
sbb
popa
loopne
rolb
mov
mov
jb
mov
fwait
addl
adc
scas
xchg
and
xchg
fnstsw
push
push
dec
arpl
inc
dec
xor
int3
les
std
cmp
stos
pop
pop
test
add
xlat
in
jb
clc
push
es
icebp
jns
cli
mov
subb
adc
mov
mov
mov
daa
aad
clc
test
int
cmp
shrl
xor
addr16
cmpsl
sarl
int3
mov
je
xchg
xchg
mov
les
sub
stc
sub
scas
repnz
jns
inc
pop
outsb
out
cltd
fcomip
daa
xor
mov
dec
lahf
dec
mov
push
dec
mov
jle
mov
mov
mov
leave
dec
in
jns
mov
and
pop
or
call
loop
or
cwtl
push
loope
dec
nop
sub
sbb
xor
xor
clc
adc
and
mov
arpl
je
fcoml
sahf
push
dec
pop
into
gs
and
lods
mov
das
sbb
mov
into
ja
data16
xor
pop
push
jge
adc
inc
xor
dec
push
add
fadd
into
loopne
mov
push
or
push
imul
and
jb
sbb
and
dec
cmp
add
dec
inc
pop
pop
or
xlat
ljmp
mov
pop
mov
mov
xor
aaa
negb
das
int
js
lea
aam
lahf
adc
push
mov
mov
pushf
mov
or
push
lret
push
sbb
in
mov
pusha
jmp
xor
rcl
xchg
mov
xor
cli
or
nop
insb
jmp
dec
xchg
pop
sub
cmp
addl
call
out
sub
push
iret
leave
test
fists
xchg
mov
adcb
sbb
insb
movsb
sbb
cs
push
pop
testl
pusha
mov
xlat
jge
inc
gs
sbb
stos
scas
out
scas
rol
cmp
movsl
jl
inc
mov
outsb
cwtl
add
mov
movsb
nop
push
inc
fmuls
dec
sbb
lcall
xchg
lods
xor
out
out
lahf
out
dec
call
and
mov
filds
mov
sub
xchg
addr16
mov
or
lds
mov
add
push
inc
lahf
and
dec
ret
xor
insb
lahf
add
jl
pop
inc
jecxz
js
fs
pop
iret
rcrl
sbb
sub
jb
inc
mov
and
sbb
dec
loope
rcrb
daa
jbe
jg
mov
pop
lods
inc
xor
pop
ret
xchg
mov
daa
incb
push
push
pop
cmp
loopne
das
sbb
push
xchg
imul
cmp
cmp
sub
ret
jb
testb
adc
mov
lea
scas
outsl
adc
lcall
mov
rcrb
pop
push
xchg
xchg
dec
lret
jge
mov
pop
mull
sub
or
daa
movsl
dec
fdivl
push
push
fistpll
push
loopne
jp
lods
cmc
test
lea
loopne
sbb
scas
mov
jg
mov
test
imul
sti
mov
cmc
or
push
ja
cmp
aas
into
hlt
jne
mov
sub
and
es
leave
mov
add
dec
push
sbb
mov
or
push
hlt
sub
push
shlb
sub
sbb
push
mov
jne
test
add
xchg
stos
ret
mov
dec
notl
lcall
jg
inc
xchg
cmc
popl
mov
push
push
int3
mov
lods
ja
jb
sbb
cmpxchg
xchg
addr16
jle
mov
add
fisttpl
push
and
lcall
jbe
lods
sti
cltd
fs
push
push
sbb
jae
addl
jbe
lods
out
cli
sub
sbb
inc
outsl
jae
ja
push
repnz
push
add
xchg
inc
inc
xchg
mov
and
push
fcomps
adc
fisttpl
roll
jmp
inc
stos
je
jns
jnp
xchg
icebp
inc
arpl
div
jnp
push
mov
and
pop
mov
xor
jno
jg
lds
adc
and
inc
push
ds
ret
lods
adc
mov
out
aas
pop
fs
add
faddl
iret
dec
xchg
nop
dec
das
fs
sub
xor
and
pop
add
pusha
sub
adc
test
loope
jno
xor
int
sbb
cmc
xchg
in
inc
out
aam
sti
icebp
repnz
jno
fnstenv
int3
push
mov
gs
inc
out
and
outsl
in
and
inc
push
mov
jmp
call
clc
xor
jmp
pusha
push
push
mov
sub
cltd
nop
das
dec
inc
jo
lods
loopne
repz
stos
enter
and
popf
lea
fdivrs
xor
sub
mov
out
cmp
cmp
loop
mov
jae
xchg
xchg
repz
sarb
sarb
cmp
repz
gs
inc
push
inc
lock
outsb
arpl
cltd
bsf
sbb
fisttpl
mov
xchg
enter
push
out
jg
sub
xlat
or
xchg
jmp
or
mov
xor
in
test
lea
jae
adc
addl
call
cmp
mov
xchg
mov
pushf
fdivrs
xlat
idiv
icebp
push
insb
bound
sub
adc
sbb
xorb
inc
arpl
dec
add
lret
mov
aas
popf
adc
adc
iret
dec
push
rorb
cmp
push
fnstenv
xchg
into
sub
addr16
ret
dec
call
iret
out
hlt
xchg
insb
add
imul
cmp
out
aaa
add
jl
insb
push
ss
out
rorb
orl
adc
pop
mov
xor
inc
jmp
idivb
push
dec
rorl
popf
or
inc
stos
fnstenv
lcall
fstl
and
sub
cli
mov
xor
flds
push
cmp
stc
push
movhps
mov
psrlq
das
xchg
cli
lods
inc
and
jp
push
or
in
mov
test
sbb
sub
dec
lods
sbb
fnstsw
jb
push
jnp
mov
int3
lods
int
jg
icebp
dec
xchg
add
in
mov
dec
jp
cmpsb
fidivs
sbbl
mov
pop
cmp
add
mov
pop
xor
lret
mov
repz
mov
loopne
rcll
xchg
fs
xchg
mov
daa
mov
or
xor
aaa
sarb
adc
nop
adc
mov
jb
cmp
pop
adc
repnz
mov
mov
and
sub
cld
xor
lock
aaa
scas
mov
rolb
stos
ret
sub
or
jno
pop
shlb
mov
or
dec
imul
jnp
gs
js
movsb
mov
lds
fbld
push
rorb
mov
cmc
imul
cli
cs
shlb
dec
inc
lcall
aas
mov
add
scas
jbe
mov
sbb
cmp
mov
and
daa
setno
or
mov
popa
test
shll
out
daa
test
cmp
adc
mov
lock
pop
decb
mov
mov
or
xchg
push
pop
or
gs
mov
sbb
dec
dec
in
sbb
xchg
push
fimull
mov
or
je
sbb
cmp
cmc
inc
mov
push
cmp
xlat
mov
pop
pusha
ss
fsub
outsl
dec
adcb
sbb
sarl
sub
aaa
aaa
out
orl
jle
std
enter
lock
sub
push
and
es
xor
inc
inc
leave
leave
jge
cmpsl
jmp
inc
push
dec
imul
icebp
movsl
in
push
push
loope
fs
and
je
xchg
cmp
jne
gs
sbb
or
dec
jnp
sub
add
jecxz
ljmp
xchg
int3
cwtl
and
loop
out
dec
and
and
sbb
inc
dec
ret
xlat
xor
fcomps
insb
daa
pop
ljmp
xchg
out
out
fstl
popa
add
enter
test
jb
inc
testl
stos
cmp
mov
and
mov
mov
pop
push
lds
fs
mov
scas
mov
lds
dec
cmpsb
dec
jg
cmp
cmp
rol
mov
push
lods
movl
sub
xchg
aam
lahf
mov
mov
inc
sub
jle
and
sbb
jno
insb
lcall
mov
xor
fwait
inc
lock
rcrb
jno
cmp
xchg
adc
xchg
dec
lahf
lods
inc
push
pop
in
adc
fdivl
inc
add
or
cmp
and
jne
mov
out
xor
cmc
into
fcmovne
sub
pop
bound
ret
push
pop
test
enter
jge
or
xor
jbe
cmp
popf
mov
adc
pop
ret
fsubs
in
jno
or
sub
mov
aad
xchg
jl
xchg
mov
pop
and
insl
sbb
loopne
adc
sti
rcrl
xchg
cli
not
dec
push
sub
mov
mov
sahf
dec
push
iret
mov
pop
xor
and
xlat
cmp
bound
lretw
dec
cmp
xchg
fdivs
popa
pop
imul
and
adc
mov
lea
incl
andl
pop
jle
ljmp
mov
xor
xor
mov
mov
mov
addr16
mov
jg
dec
lret
dec
cmpsb
shll
cmp
cmp
bswap
sub
sbb
mov
jns
mov
clc
fistpl
mov
lods
pop
popf
pop
insl
repnz
or
imul
pop
roll
shll
xchg
das
jo
xchg
dec
jo
add
sahf
clc
inc
arpl
testl
add
movsl
iret
xlat
push
push
out
pop
push
lock
repnz
or
sub
js
and
push
fcomps
mov
cmp
jno
rolb
out
xorb
pop
lcall
lahf
aad
and
mov
sub
scas
shrb
sbb
lahf
dec
cltd
add
jbe
stos
inc
out
nop
cmpsb
mov
scas
push
jle
cld
push
icebp
and
inc
pop
jmp
mov
lcall
push
or
pop
aam
mov
mov
xorl
and
icebp
stos
add
or
jb
sbbl
add
addr16
push
push
push
sub
ja
dec
in
fwait
mov
lods
jmp
jnp
jg
inc
or
stos
dec
mov
push
lcall
cmpsl
mov
rcrl
ds
lock
sub
jo
js
sbb
out
lahf
adc
popf
ja
mov
add
mov
jmp
fldl
xchg
cmp
add
lret
lock
xchg
aas
inc
and
sahf
imul
push
and
add
in
test
lret
cld
and
popf
ret
sub
mov
or
mov
pushf
shrb
push
sbb
mov
ljmp
adc
fisubl
lock
push
jae
dec
mov
cmpsl
leave
in
dec
leave
sysret
xchg
cmp
fwait
xchg
std
shlb
gs
and
inc
mov
dec
aam
popf
jle
sub
push
push
into
imul
cmpsl
mov
not
xchg
cmpsb
jbe
xlat
mov
mov
in
test
out
add
es
cltd
and
outsl
xlat
jns
or
cmp
pop
sbb
push
mov
mov
pop
add
cmp
and
or
inc
and
sbb
pop
pop
or
mov
xor
mov
bound
into
adc
movsb
mov
fwait
jle
jl
repz
std
mov
sbb
cmpsl
pop
cmp
sub
pop
push
stos
or
push
and
enter
xchg
mov
fucomip
and
push
in
pop
daa
mov
in
pushf
push
repnz
cmp
add
lret
dec
add
fistl
dec
hlt
stos
or
call
enter
xchg
xor
pop
fucom
je
int
or
data16
cmc
outsb
fdivs
cmp
mov
ja
xor
and
xlat
mov
or
rol
gs
repnz
push
push
mov
ficomps
cmp
sbb
mov
cwtl
lret
or
sahf
pop
int3
sarb
cwtl
pop
adc
repnz
ja
test
cmpsb
lret
add
pop
sub
and
aas
lahf
test
popf
rcrb
aas
push
loope
in
lods
ficomps
into
push
mov
enter
scas
lods
adc
adc
ret
cmp
mov
xor
pusha
and
dec
cli
adc
mov
lock
xor
sub
add
in
shlb
mov
or
in
jl
xchg
cmp
clc
out
mov
mov
bound
pop
gs
or
mov
jbe
xchg
dec
nop
jl
sbb
jmp
sub
mov
cwtl
addl
pop
nop
fadds
add
xor
xchg
movsl
mov
shrl
ds
add
dec
ds
mov
pop
inc
lcall
test
jp
adcb
addb
mov
das
ficoml
adc
sbb
test
rolb
mov
inc
scas
loope
cltd
jne
cmp
inc
adc
mov
ja
add
subl
ret
ficoms
jmp
cmp
xchg
mov
or
lret
lds
push
xor
jle
jne
push
js
pushf
sbb
or
pop
lret
sub
fs
pop
jp
jle
mov
or
mov
mov
gs
test
sbb
push
sub
popf
pusha
repz
stc
adc
aaa
jbe
xor
leave
sbb
sub
popf
adc
scas
mov
lock
outsb
insb
insl
leave
cli
mov
or
mov
cwtl
lock
add
fwait
stos
mov
push
xchg
bound
sbb
mov
ss
dec
inc
movsb
mov
dec
cmp
rcr
add
and
pop
pop
xchg
pushf
pusha
inc
neg
pushf
pop
aam
sbb
jmp
fs
xor
das
push
push
xchg
push
pop
mov
mov
jg
das
push
adc
jnp
idivb
sbb
dec
or
push
bound
outsb
test
xor
mov
pushf
xchg
scas
sbb
shll
fsubrl
sub
pop
call
ror
stos
in
cmp
ljmp
xchg
mov
js
lock
movsb
dec
sti
jle
test
outsb
sbb
sahf
sbb
fbstp
mov
addb
add
mov
loop
aaa
xchg
mov
xor
sub
xor
mov
push
inc
stc
and
pop
ds
repz
aam
jle
or
fwait
or
das
mov
ljmp
in
mov
fdivr
jb
push
sti
mov
mov
mov
mov
lret
out
in
fisubrs
sub
scas
mov
cmpsb
ficompl
stos
mov
lahf
jmp
push
inc
mov
fsubp
sbb
push
fsubl
repz
test
inc
jbe
test
sub
js
push
cmpsl
movsl
ss
mov
push
shlb
dec
adc
and
bnd
add
adc
lods
sub
imul
jb
hlt
test
cmp
out
mov
cmp
lock
add
in
iret
es
frndint
js
cmpb
jmp
negl
in
dec
xchg
andl
mov
outsb
adc
mov
mov
inc
xchg
testb
jle
out
cs
insb
jecxz
sub
cmp
lods
cwtl
mov
lret
sbb
add
in
mov
mov
inc
mov
inc
dec
addr16
push
mov
mov
mov
call
decl
mov
mov
aam
dec
ljmp
inc
clc
repz
out
in
outsl
das
mov
xor
xor
lods
dec
xor
cwtl
mov
add
test
repnz
ret
xor
mov
dec
sarb
lcall
shll
dec
sub
pop
jnp
aam
push
cwtl
das
dec
test
dec
mov
pop
ljmp
stos
daa
in
push
divb
cmp
inc
or
movb
jg
adc
test
xlat
fisttpl
adc
mov
cmpsb
mov
out
xchg
pushf
loopne
sub
push
outsl
adc
or
pop
inc
mov
ret
dec
fisubrs
jbe
scas
pop
test
arpl
hlt
nop
and
pop
and
jbe
or
addr16
fisubl
xor
dec
data16
aaa
cmp
xorb
insb
xchg
int3
jl
push
mov
insl
push
into
jo
adc
das
xchg
adc
cmp
test
inc
hlt
push
cwtl
cmc
adc
fcoms
or
in
push
xchg
cmp
ficoms
pop
out
xchg
aam
cltd
pop
sbb
mov
mov
stc
aam
in
and
addb
xchg
das
loopne
les
pop
les
int3
je
es
scas
call
and
imul
add
dec
aam
inc
std
push
mov
bound
arpl
xchg
inc
adc
push
leave
jg
pop
out
popa
pop
mov
test
fdivs
jns
or
add
sub
cmp
xlat
ja
sarl
add
out
in
loopne
or
imulb
push
imul
je
insb
mov
xchg
xlat
mov
jmp
pop
sub
mov
imul
mov
out
mov
adc
shll
fcmovnb
cld
jp
repnz
mov
sbb
and
jge
pop
inc
leave
lahf
mov
mov
mov
fcmovne
les
das
jp
pop
pop
mov
jge
pop
sbb
dec
hlt
adc
aas
hlt
dec
decl
jbe
and
xor
add
mov
xchg
cmc
sbb
popa
mov
xlat
and
out
adc
cs
xchg
mov
jecxz
jns
fs
xchg
sbb
dec
push
pop
jge
inc
jecxz
mov
cltd
xchg
aam
jge
pop
mov
gs
or
rorl
cmp
iret
insl
or
inc
in
popa
inc
inc
sub
in
test
xor
in
movb
mov
mov
shll
dec
into
add
insl
cmp
push
imul
mov
cmc
bound
dec
push
pop
and
push
push
pop
lahf
mov
in
xchg
notb
sbb
lahf
jp
sahf
sbb
mov
daa
mov
jne
pushf
addb
xor
addb
mov
int
xor
iret
mov
jle
ret
add
push
ficoml
pop
mov
mov
roll
push
cli
inc
sbb
sub
lods
mov
mov
cmc
fnsave
mov
ret
fistl
mov
push
ljmp
mov
jl
test
xchg
insl
nop
scas
jg
movsl
xchg
movsl
dec
movsb
and
dec
popf
mov
inc
imul
or
out
jbe
cmpsb
leave
jmp
adc
dec
in
inc
shlb
add
arpl
clc
ret
xor
std
jns
inc
jmp
cmp
fdivrl
test
movsl
lahf
scas
lret
dec
xor
lods
push
pop
sbb
mov
cmp
in
push
shlb
test
imul
pop
mov
filds
out
div
mull
push
pusha
sbb
push
addl
test
mov
jge
ret
mov
adc
push
aaa
push
ret
call
adc
inc
cmp
cmpsb
sti
jp
stos
out
pop
test
cld
adc
mov
lea
stc
inc
outsb
ret
leave
lahf
push
mov
pusha
mov
sbb
ds
je
push
stc
mov
movsl
mov
movsb
jne
jg
arpl
and
popa
adc
pop
shll
cwtl
mov
and
pop
add
add
divl
subl
and
mov
dec
cmp
lcall
iret
pop
repnz
lret
int3
cltd
in
mov
jbe
je
mov
test
adc
in
cmp
outsl
and
mov
fidivs
xor
std
out
pop
push
aaa
adc
push
lahf
xchg
frstor
les
xor
shl
or
inc
rorl
sub
jae
mov
les
pusha
jae
filds
divb
stos
dec
test
ret
sbb
push
push
adc
mov
jns
xlat
pop
into
adc
jg
mov
cmp
inc
ret
les
test
and
inc
sbb
fbld
push
and
pop
mov
lds
and
in
xchg
movsb
fcoms
outsl
fstps
mov
xlat
mov
lock
xchg
test
cmc
sti
mov
hlt
mov
iret
in
pop
inc
mov
fldenv
sub
jp
into
push
sub
negl
adc
fmul
xchg
xor
gs
mov
jo
jmp
lock
adc
ffree
inc
or
xor
cld
fstp
iret
push
lock
stos
lcall
jle,pn
aas
push
inc
repnz
cltd
sbb
dec
es
add
mov
dec
and
xchg
xor
fcomps
das
lret
in
mov
jle
test
mov
test
outsb
sub
xchg
rcr
hlt
mov
push
push
add
jg
lcall
sarl
jle
flds
fbstp
xchg
or
dec
cmc
sbb
xchg
ds
dec
mov
sbb
xchg
sub
cmp
imul
mov
sub
sahf
push
hlt
push
test
push
xor
inc
adc
mov
jge
fst
lods
push
inc
xor
mov
cmpsl
add
repnz
add
dec
ror
xchg
out
movsb
fdivl
repz
add
jb
cmpsb
test
pushf
inc
cmc
test
pop
gs
lds
xor
mov
icebp
and
sbb
dec
orl
xchg
sbb
mov
sbb
push
addr16
inc
xchg
cltd
pop
jp
lods
lahf
decl
sub
jge
mov
jmp
xchg
adc
adc
xchg
incl
adc
sbb
nop
enter
adc
cmp
mov
mov
sub
push
in
fdiv
adc
bound
xchg
cmp
stos
inc
sub
clc
adc
repz
lahf
scas
in
jmp
imul
outsb
push
pop
mov
jno
sbb
scas
sbb
push
xchg
and
addr16
mov
push
push
roll
sub
push
push
pop
in
movsl
sti
cmc
dec
lock
push
sahf
in
iret
mov
aad
shrl
roll
mov
sub
shlb
mov
mov
xor
xor
mov
xchg
popa
inc
in
icebp
push
dec
xchg
push
xchg
stos
leave
xchg
jge
or
aas
mov
dec
mov
xor
out
shr
xchg
jo
pop
xor
push
adc
cmp
xorb
je
pusha
add
push
sbb
shlb
stos
sub
cmc
sbb
inc
inc
cmp
and
push
or
jb
add
xor
inc
or
movsl
in
pop
mov
arpl
pushf
pop
pop
loop
je
scas
out
je
push
jb
sub
xchg
cmc
and
ficomps
dec
inc
or
add
test
popa
cld
and
sub
mov
ja
lds
or
sbb
shl
xchg
lret
dec
inc
jl
aaa
stos
imul
jg
jo
mov
push
loopne
pop
xchg
ret
mov
xor
movsb
lcall
fwait
clc
dec
outsb
repnz
stos
outsb
call
mov
mov
mov
scas
jb
jl
sub
lods
jle
push
sub
adc
add
mov
jae
jl
jnp
dec
pop
sub
fnstsw
popf
sbb
test
pop
sub
iret
sub
out
cmp
push
nop
mov
or
jmp
cmc
fldenv
in
add
shll
cmp
pop
cmp
arpl
xchg
sub
cmp
es
and
mov
pop
cmpsl
pop
stos
adc
adc
push
mov
sarb
xchg
add
rcrb
enter
push
jmp
imul
pop
mov
jmp
jl
mov
std
jae
repnz
sub
lock
dec
adc
shl
jns
cmc
movsb
inc
stos
xor
inc
and
shll
aaa
ljmp
add
inc
mov
leave
cmp
mov
lahf
test
adc
inc
leave
sbb
ficompl
fsub
pop
mov
mov
outsb
mov
mov
shlb
jmp
mov
ljmp
popf
fs
int
or
popf
adc
inc
out
fcomps
out
and
sbb
jbe
mov
ret
bound
fs
movsb
jb
push
jecxz
cli
lahf
jns
mov
pop
andl
scas
mov
mov
enter
aad
pusha
push
dec
test
ja
aam
add
repz
inc
inc
xlat
leave
mov
mov
cmp
cmp
cmpl
lcall
sbb
mov
push
mov
pop
fs
mov
jnp
iret
and
test
sub
and
fidivs
cmp
js
scas
ljmp
push
pop
add
daa
insb
movsl
gs
arpl
and
fwait
mov
je
push
aas
lcall
pushf
and
xchg
cwtl
pop
mov
jl
in
add
xchg
jne
movsl
mov
cltd
std
test
mov
push
xorl
popa
or
sbb
int
pop
out
repz
stos
pop
mov
push
dec
xor
cli
jb
mov
pop
jmp
xor
popa
jns
jnp
push
dec
cwtl
or
movsl
cmovle
dec
mov
rcrl
stc
xor
fisttpll
push
sbbb
xchg
jecxz
and
mov
dec
mov
mov
jo
pop
push
stc
or
fbld
mov
fstpt
mov
and
cltd
pop
or
frstor
jp
repnz
push
pop
aas
shlb
adc
lcall
mov
xor
ds
ficomps
fnstsw
push
sbb
out
jnp
addr16
xchg
aam
push
scas
cmp
int3
sub
jecxz
mov
stc
add
out
std
xor
push
dec
pushf
sbb
inc
push
push
mov
test
pop
sbb
sbb
mov
jo
push
xor
cmp
pop
mov
sbb
jb
sub
mov
shll
push
xlat
in
pop
push
outsl
sarb
fs
mov
lods
cmp
pushf
sahf
das
rclb
and
sub
jmp
imulb
jle
roll
add
push
pop
pop
fidivl
scas
mov
ficoms
xchg
push
push
jbe
and
imul
jnp
xchg
mov
sbb
syscall
lahf
dec
mov
emms
xchg
pop
andb
add
movsb
push
dec
sub
or
daa
outsl
pushf
pop
mov
sub
sbb
jne
mov
add
pop
in
sbb
and
int3
nop
shrl
xchg
lds
aam
sub
cmp
jne
add
sub
repnz
xor
xor
jae
pop
cmc
aas
mov
jmp
out
mov
xorl
sub
add
int
pop
out
pusha
mov
jnp
mov
or
mov
and
and
test
sub
es
add
push
repz
xor
ja
xor
popa
cmp
pop
mov
aas
popf
push
cmpsb
in
sbb
cmp
in
inc
xlat
cmp
xchg
fincstp
js
push
jge
sub
fisttpl
mov
add
fldpi
pushf
in
mov
or
daa
xor
outsl
mov
lods
test
jne
xchg
xchg
cmc
imul
insl
pop
cltd
and
repz
mov
bnd
push
ss
int
mov
and
je
or
call
mov
int
outsl
dec
cmp
jb
incl
or
cs
or
mov
sbb
xchg
sbb
arpl
jle
repz
pop
js
enter
addr16
pop
ja
jns
in
loope
out
movsl
stos
in
add
push
adc
or
inc
addr16
aad
test
push
pop
out
xor
sbb
push
mov
jge
daa
xor
cmpsl
hlt
xchg
push
adc
adc
fistpll
stos
sub
daa
fs
stc
ss
and
push
inc
add
ljmp
pop
jb
push
iret
mov
xchg
adc
daa
xchg
popa
cmpl
cltd
push
sub
lock
xchg
mov
outsb
aad
rorl
std
or
inc
ja
repnz
pop
pop
inc
adc
mov
pop
in
cmpsl
pop
sbb
jmp
stos
ret
rclb
mov
push
gs
mov
lahf
or
ds
pusha
mov
and
mov
test
xchg
or
dec
fwait
or
cmp
add
iret
sbb
push
inc
pop
mov
icebp
into
in
addr16
clc
mov
dec
jp
insl
scas
mov
movsb
outsb
cmp
xchg
in
mov
jb
aaa
les
adc
sbb
mulb
cmp
out
imul
ret
sti
daa
popl
add
and
add
xor
or
dec
bound
xchg
stc
ret
dec
push
in
out
xchg
or
clc
dec
cwtl
push
mov
popa
fdivrl
int3
jg
pushf
cmpsb
lock
fsubl
pop
bound
repnz
mov
daa
push
imul
mov
pushf
sub
mov
insb
dec
out
mov
and
mov
cmp
shlb
cld
add
mov
movsl
jno
pop
pop
or
sahf
push
xchg
mov
sub
das
mov
mov
pop
and
mov
lds
push
insl
xchg
sub
jge
or
and
xchg
rorl
loope
lds
in
sbb
mov
popa
scas
iret
mov
lret
neg
mov
lods
into
dec
adc
sub
cmpsb
test
test
dec
mov
cmpsb
in
test
jne
push
sub
cbtw
movsl
jle
dec
dec
pop
pop
xchg
in
pusha
xor
pushf
or
pop
aad
sbb
and
jae
inc
clc
cmp
bound
xor
je
adc
add
cmp
xchg
test
xor
gs
movsb
xchg
sbb
sub
movsl
sbb
cmp
stos
and
pop
adc
mov
jns
scas
mov
push
push
cmpsl
out
pop
into
ja
cmc
adc
loope
push
cmp
xor
or
pop
out
fs
or
xor
jecxz
jecxz
aas
testl
sbb
lahf
cmc
inc
int
cmp
ficoms
mov
int3
es
inc
icebp
sub
stos
mov
jp
mov
xor
xchg
adc
enterw
movl
aam
pusha
in
arpl
inc
and
push
das
pop
repz
iret
divb
outsb
addr16
sub
mov
outsl
fwait
sub
sbb
cmpsb
movsb
push
aaa
mov
aas
fsubs
sub
pop
xchg
mov
xchg
scas
sub
dec
mov
adc
idiv
xchg
jae
loope
scas
ljmp
sub
hlt
xor
cli
lods
pop
fldenv
testb
adc
dec
mov
push
cld
mov
sbb
and
jmp
aam
add
ret
sbb
nop
jmp
addr16
sbb
xchg
cwtl
enter
dec
aad
and
and
dec
mov
out
insb
or
es
imul
jb
cld
adc
test
sub
and
xchg
in
es
popa
dec
push
test
daa
mov
inc
pop
ficoms
pop
loope
pop
mov
inc
imul
jbe
cmpb
movsl
outsl
jno
xchg
imulb
daa
sahf
mov
pop
imul
jno,pt
outsl
pop
fimuls
out
lea
test
lods
imul
mov
jl,pt
fldl
mov
cmp
shrl
push
and
nop
std
repnz
and
push
pop
dec
xor
sbb
lods
add
lcall
mov
repz
add
mov
lahf
lock
fstpt
xlat
jo
xchg
mov
lock
push
mov
pop
mov
loop
cmpsb
mov
iret
xchg
and
mov
scas
sbb
out
add
push
rol
test
pop
bound
sub
mov
cmp
lock
bound
mov
and
mov
sahf
pop
bound
xor
cli
fbstp
movsl
xor
and
outsl
sub
loope
cmpsl
mov
cmp
dec
sub
sbb
cmc
or
and
int3
add
xchg
cwtl
gs
adc
mull
dec
bound
test
clc
push
fs
mov
fisubrl
push
mov
inc
sub
subl
or
mov
and
cld
movsl
pop
fs
inc
inc
scas
adc
sbb
sbb
pop
adc
data16
jmp
lret
rol
mov
push
out
outsl
movsl
test
popa
xor
mov
or
js
cmp
jo
loope
push
inc
jno
xor
cmpsl
dec
xchg
xchg
roll
adc
popf
dec
and
je
mov
pop
cltd
jo
xor
leave
xchg
mov
repz
addl
cmp
mov
jne
mov
mov
out
pop
inc
adc
push
inc
adc
xor
sbb
push
imul
pop
jne
adc
dec
test
mov
clc
mov
sti
mov
inc
rclb
jnp
and
lcall
pop
mov
jno
das
jnp
ret
mov
ljmp
adc
pop
xchg
fisubrs
sbb
push
dec
and
pop
mov
dec
pop
sbb
shll
lahf
decl
popl
and
pop
and
gs
cmpsb
add
testb
adc
dec
cmpsb
ljmp
mov
jmp
add
sub
add
sub
sub
ja
jle
add
popa
addr16
mov
ja
test
mov
xor
fstl
push
add
jnp
cmp
sbb
ds
cmpsb
pop
pop
push
loop
xchg
sub
lods
mov
adc
mov
push
lds
lahf
sub
shrb
jg
mov
ret
fldenv
push
jne
mov
iret
jno
push
lcall
push
or
sbb
or
imul
add
ret
les
jnp
repnz
push
or
cmpsb
jnp
aaa
push
mov
or
jne
sbb
lret
xchg
xchg
mov
mov
iret
fnstsw
bound
cwtl
shrl
push
jp
add
pushf
cmp
pop
orl
pop
cmpl
xor
cmp
and
scas
sbb
sti
mov
dec
aaa
sbb
pop
scas
push
push
push
pop
and
mov
mov
push
or
in
shl
imul
jg
push
imul
fsubrs
insl
pusha
and
add
adc
inc
push
shl
jg
loop
or
leave
mov
movsl
ret
pop
mov
sti
lahf
fsubrl
call
mov
mov
fcomi
jmp
xchg
sub
mov
xchg
sarb
push
xchg
repnz
adc
jg
fistl
ljmp
xchg
push
jl
push
test
in
xchg
sarw
jl
fwait
push
push
loopne
int3
xor
mov
jo
xorb
adc
lods
cmp
pop
fistl
xor
cmp
xlat
out
les
in
in
imull
and
mov
out
mov
inc
add
das
pop
inc
and
xor
fmul
and
hlt
sbb
mov
movb
data16
adc
shll
jne
js
push
les
add
xlat
fcmovne
push
cld
mov
or
jl
cwtl
call
or
or
out
lret
jmp
ss
in
add
out
jb
stc
cmp
dec
lods
add
daa
push
jb
dec
adc
or
inc
scas
sbb
xor
repz
hlt
inc
repnz
int
dec
jmp
int
scas
insb
outsl
mov
push
es
sub
or
mov
lret
mov
mov
pop
cmp
jbe
jecxz
xchg
insb
lea
jns
test
push
mov
and
jae
or
inc
aam
mov
lods
arpl
inc
in
dec
cmp
lds
addr16
xor
aam
repz
jmp
xchg
lcall
mov
fsts
lock
sbb
cs
pmovmskb
es
adc
push
mov
cmp
sub
add
sbb
sub
mov
fstp
push
and
dec
lock
shll
popl
ficoml
or
lods
int3
sarl
add
out
push
test
add
ror
popf
stc
rcrl
jmp
outsl
and
or
shll
mov
aam
ljmp
fidivl
and
scas
data16
mov
loopne
cmp
add
add
mov
jbe
cmc
xor
pushf
ljmp
movsl
adc
test
inc
imul
pushf
or
adc
ds
test
addb
out
dec
icebp
inc
popf
mov
lret
ss
inc
cmp
dec
cwtl
cmp
ret
push
add
rcrb
mov
dec
adc
cmp
or
cmp
xchg
test
dec
xchg
mov
xchg
sub
and
loopne
cmp
inc
leave
ja
inc
jno
mov
add
and
pop
mov
test
dec
cwtl
dec
enter
hlt
pop
scas
dec
iret
push
call
cmpsb
push
xchg
mov
stc
jmp
rcrl
fsubp
imul
daa
push
or
adc
ret
sti
fisubs
mov
sarb
dec
and
aaa
stos
fdivrl
push
push
inc
sub
pop
push
mov
mov
dec
ljmp
jno
mov
out
mov
mov
jns
jmp
fstl
push
mov
sti
adc
pop
and
jge
ficoms
ds
insl
popf
insl
mov
test
aaa
push
xchg
add
out
mov
add
mov
xor
xchg
fisttps
pusha
daa
xchg
pop
in
in
push
hlt
dec
test
faddp
jg
mov
and
flds
cmpl
adc
or
add
es
mov
push
mov
mov
mov
loopne
test
adc
xchg
in
ja
popa
rol
rcrb
test
int3
loope
or
cmp
push
mov
and
adc
inc
xorl
loop
stos
cmp
pop
cmp
arpl
push
movsb
pop
or
inc
mov
mov
mov
mov
sar
popa
cmp
das
ret
inc
sbb
mov
stos
js
mov
push
daa
mov
fnsave
mov
iret
sar
movsb
mov
aam
push
pushf
xchg
sti
in
cs
or
test
xchg
repz
in
in
mov
pop
aad
push
jge
mov
sub
dec
cmc
rclb
lds
adc
dec
dec
mov
add
pop
nop
out
test
and
xchg
pop
mov
das
subb
or
out
stos
movlps
das
movsb
pop
inc
lahf
add
imul
movsb
add
enter
xor
scas
xchg
push
loopne
stos
xor
add
clc
dec
ret
cmp
jns
pop
rolb
addr16
xchg
mov
or
pushf
mov
cmpsb
push
loopne
repz
push
scas
fdiv
push
ljmp
lea
mov
and
pop
in
mov
jmp
sub
popa
push
push
jae
or
rdmsr
sub
push
lcall
mov
shll
ja
and
push
daa
out
inc
sub
movsb
sbb
loopne
fs
mov
enter
add
stos
sub
pop
aam
jnp
sti
imull
sbb
in
add
push
jae
scas
aam
dec
push
pop
and
popa
pop
and
push
sbbl
or
mov
loope
mov
test
push
or
in
shlb
outsb
stos
aam
cmpsl
sbb
push
in
add
mov
sahf
adc
push
mov
cmp
lahf
fistpll
lret
fsubs
arpl
add
sbb
imulb
adc
sbb
adc
popf
js
outsb
push
les
mov
test
das
mov
dec
jne
jp
les
mov
mov
lret
and
rol
sub
nop
pop
enter
stos
push
sub
loopne
adc
leave
push
mov
mov
mov
xchg
inc
push
add
push
decb
add
or
ljmp
push
add
sbb
jb
dec
sbb
js
dec
mov
jp
gs
scas
inc
dec
js
lcall
xor
mov
out
rclb
out
sbb
fldenv
inc
mov
mov
int3
cs
loop
testl
imul
mov
pop
jae
dec
cmp
and
es
in
inc
cmp
insb
daa
fidivs
inc
out
cmp
pop
add
lods
sub
adc
nop
fadds
dec
xor
imul
mov
dec
jno
and
lods
int
scas
mov
mov
pushf
cs
sub
ss
ja
add
dec
int3
and
pop
mov
pusha
call
and
popa
add
outsl
subb
not
out
mov
pushl
cltd
cmc
inc
pop
repnz
cmp
loope
outsb
ret
mov
xchg
push
aam
ret
outsb
xlat
add
mov
dec
clc
ja
test
dec
ret
rol
cmc
push
call
out
outsl
into
push
in
or
cmp
mov
push
xor
pop
pop
fnstcw
jae
lret
gs
shrl
in
mov
leave
outsl
push
into
hlt
pop
loop
gs
jmp
xchg
repnz
ficoml
rcr
rcl
pop
jl
imul
xchg
pop
pusha
add
pop
neg
ret
push
into
sub
xchg
fwait
dec
mov
pop
mov
negb
ret
lock
ja
inc
daa
testl
and
add
ss
mov
dec
add
shll
pop
out
out
jp
ret
push
enter
mov
nop
inc
in
in
repnz
in
orl
inc
dec
outsl
into
gs
cs
sahf
push
call
xor
push
dec
xor
add
cmpl
rcr
cmp
sbb
adc
shlb
out
jae
imul
cmc
sarl
add
inc
ss
sbb
push
add
pop
in
js
bound
xchg
adc
daa
movsb
sbb
xchg
fldl
cwtl
pop
pop
jp
pop
test
or
add
cmp
jp
imul
ret
jb
int3
cmpsl
repz
adc
mov
popf
icebp
or
ret
jnp
js
jge
xor
jo
inc
nop
dec
andl
mov
imul
clc
cmp
sbb
in
jg
push
out
in
pop
test
or
add
mov
mov
pop
rcr
fimuls
js
je
aad
iret
lds
es
popf
sub
hlt
out
jge
test
and
dec
xor
or
cmp
ret
jmp
xor
pusha
int3
inc
sub
test
int3
mov
shlb
mov
cs
out
cmp
ret
mov
sbb
fcmovnb
nop
popa
sti
mov
ss
cmp
inc
mov
pop
or
aaa
movl
adc
cmpsb
dec
xchg
ret
xor
jae
lock
and
dec
mov
inc
sbb
push
mov
das
push
imul
scas
test
shll
rcll
ret
mov
das
out
dec
sbb
dec
aas
inc
push
lret
xor
js
or
push
out
dec
hlt
push
sub
add
cld
cmp
outsb
ljmpw
cltd
jae
adc
add
mov
shl
sbb
addr16
dec
in
lahf
ret
pop
mov
divb
add
inc
inc
fcmovnb
mov
les
das
icebp
fdivrl
mov
rcrb
je
je
loopne
push
pop
stos
pushf
in
das
jb
mov
lcall
or
pop
push
lock
xchg
push
xchg
inc
xchg
insl
jo
push
and
js
pop
dec
sub
jp
xchg
inc
push
das
jns
movaps
sub
lds
push
pop
or
data16
jo
dec
ja
arpl
xor
push
lock
loopne
add
cmpl
mov
mull
and
stos
mov
fnstenv
fiadds
test
or
xchg
xor
sub
fwait
mov
pop
lea
push
dec
stc
xor
mov
dec
ret
ret
cmp
ja
xchg
push
outsl
push
insl
stos
inc
lcall
leave
xchg
stos
and
cmp
or
inc
aam
lret
movsb
dec
or
push
in
sub
mov
mov
mov
sub
clts
and
icebp
daa
mov
inc
add
cmpsb
popf
inc
add
in
fbld
xor
push
pop
cltd
mov
cmpsl
jo
jbe
iret
or
mov
and
and
inc
push
popa
in
jp
test
jo
out
cmp
test
sub
push
and
outsb
mov
repz
pop
imul
lock
mov
jle
push
mov
mov
stc
scas
shll
mov
mov
dec
adc
pop
mov
or
orl
cli
ret
push
pop
fxch
imul
movsb
ss
test
enter
dec
adc
mov
sub
mov
int
outsb
mov
imull
inc
xchg
and
jbe
cmp
push
push
lods
mov
inc
cwtl
test
xor
xchg
bound
mov
fisubrs
push
sbb
loop
push
inc
mov
adc
nop
and
add
pop
xchg
in
sti
or
in
xor
jnp
outsl
jmp
inc
lods
and
or
imul
sbb
inc
pop
hlt
aam
aaa
jmp
push
adc
aaa
stc
lock
pop
or
inc
xor
fnsave
out
mov
mov
out
or
stc
fbld
fisttpl
clc
cmp
es
aam
inc
jb
lret
xchg
adcb
xchg
pop
and
mov
push
mov
cmp
or
jo
adc
icebp
push
fistps
xlat
mov
adc
daa
xor
cwtl
mov
or
sub
jns
inc
or
push
sub
jp
dec
roll
mov
add
imul
sahf
adc
sub
push
jne
dec
or
das
pop
das
mov
out
ljmp
outsb
dec
push
sub
scas
scas
mov
daa
mov
mov
xor
adc
push
adc
imul
inc
lods
add
lds
push
dec
das
jae
cli
lods
ja
stos
enter
roll
mov
inc
gs
and
inc
and
push
pusha
cmp
fistps
mov
inc
mov
movsb
shrb
jp
call
and
rcll
xor
cmpsb
cli
dec
in
cmp
pushf
xchg
pop
clc
lods
repnz
in
aas
mov
les
test
and
push
xchg
int3
pop
cmpsb
push
jae,pt
and
cld
rol
dec
sbb
fwait
inc
sub
mov
adc
jbe
negb
out
es
and
js
mov
xor
mov
scas
pop
loop
sti
mov
adc
movsb
loop
dec
mov
mov
or
pop
loop
jo
scas
xchg
das
ds
sbb
js
iret
orb
jnp
xchg
ja
mov
repnz
into
popf
and
sub
hlt
xchg
jmp
add
fidivs
scas
scas
jp
out
push
cmp
shll
cmpsb
aam
arpl
incl
adcb
adc
int3
shl
rcrb
cwtl
sbb
or
adc
jmp
shrl
mov
sub
inc
mov
and
jle
cmp
cs
jmp
or
lods
or
mov
cltd
repnz
mov
sarb
xor
add
pop
inc
popf
jnp
mov
dec
sub
push
pop
jno
jg
lods
inc
or
pop
sub
xchg
into
insl
jmp
jl
roll
lret
inc
xor
insb
test
out
jge
cmp
or
xlat
in
mov
adc
inc
loopne
jne
inc
mov
movsb
xchg
and
popl
xchg
push
lret
and
mov
loope
shll
insb
aad
mov
shlb
dec
pop
call
xor
test
pop
lea
loopne
jmp
std
pop
divl
xchg
mov
out
or
dec
and
aas
sub
jno
mov
mov
jb
popf
into
add
cld
es
fucomip
push
xorl
add
mov
fwait
cwtl
add
or
loope
xor
dec
iret
mov
fs
lds
dec
mov
mov
inc
loope
mov
adc
xorl
jnp
lcall
mov
sub
bound
fldl
lret
data16
and
fwait
lea
xchg
shrl
iret
sti
popf
test
daa
adc
gs
mov
test
out
jns
movsb
notb
mov
xchg
pop
sti
add
out
stos
pushf
dec
ljmp
add
inc
lea
ret
neg
addr16
xchg
or
test
stos
loop
adc
lahf
inc
movsb
mov
cmp
in
loope
mov
cwtl
sub
lahf
daa
scas
jp
xchg
pop
lods
aam
push
inc
inc
cwtl
or
popa
mov
scas
sbb
and
mov
data16
adc
mov
add
adc
stos
popf
lds
repnz
jno
adc
outsb
push
mov
scas
lds
in
mov
int3
pusha
jmp
and
mov
outsl
in
dec
mov
jmp
insl
ds
loopne
sahf
xlat
xchg
shll
pop
int
mov
popf
outsl
dec
hlt
jb
push
sub
outsl
je
xchg
stos
cmpsb
je
aaa
out
cmpsb
lock
fcompl
inc
movsl
lcall
int3
int
aad
movsb
sbb
sbbl
icebp
loop
imul
test
mov
call
cmpsl
cltd
sbb
mov
ss
pop
inc
dec
fs
aad
jb
data16
dec
jb
mov
je
mov
fistps
hlt
inc
in
xchg
and
mov
arpl
in
push
leave
stos
inc
mov
scas
sbbl
push
fwait
push
and
popf
mov
cmpsl
add
add
js
xor
pop
push
dec
out
adc
or
push
les
add
jl
sub
xor
push
loop
mov
je
fists
out
imul
and
mov
push
sbb
out
pop
fildll
sahf
fadd
mov
loop
nop
mov
in
loope
mov
and
inc
sbb
sbb
or
les
push
mov
scas
ret
mov
sbb
xor
nop
jo
loope
mov
adc
xor
pushw
add
fcmovne
jmp
dec
stos
scas
dec
cmp
xchg
inc
lds
cmp
fs
xchg
add
cmp
or
pop
cmp
mov
xchg
loopne
in
popf
cmp
jb
jecxz
push
scas
dec
int
test
add
mov
aas
jge
pop
cs
dec
pop
mov
stos
xchg
sbb
out
xchg
jge
and
lods
call
push
ljmp
xchg
jae
jnp
stos
and
lock
cmp
lahf
dec
aas
call
inc
sbb
mov
ljmp
sbb
jge
mov
cwtl
pop
mov
mov
mov
xchg
xchg
mov
movnti
jns
int
adc
imul
mov
fisttps
out
aaa
xor
sub
lcall
or
xor
dec
sub
xchg
cmpsl
decb
fucomi
mov
pop
jbe
sarl
dec
cs
dec
xchg
pop
xor
decb
pusha
sub
faddl
mov
shl
and
out
pop
fldt
scas
sub
xchg
ss
outsl
nop
dec
jo
cli
out
cmp
in
dec
popf
outsb
xchg
cwtl
or
jmp
leave
xchg
xor
fisubrl
sbbb
sbbb
stos
add
mov
mov
add
push
or
jb
popf
inc
inc
dec
scas
lods
sub
add
inc
and
ret
inc
ret
and
xor
scas
dec
inc
jno
and
xchg
push
paddw
repnz
insl
add
in
pop
mov
sti
mov
xchg
pop
je
rcll
lahf
fs
lock
mov
sbb
sbb
mov
lret
sbb
mov
aaa
and
inc
hlt
lcall
ljmp
jns
mov
sahf
outsb
mov
xchg
cmp
lahf
lcall
mov
xchg
leave
loop
cmpsl
mov
out
sub
dec
mov
sahf
leave
pop
clc
leave
sub
decb
es
jns
lcall
cs
scas
test
and
and
scas
mov
mov
pop
iret
imul
mov
movsl
pop
pop
cltd
das
pop
cli
data16
mov
ja
push
xchg
movsl
ret
lods
push
push
es
sub
ret
mov
push
dec
or
push
outsb
stos
inc
cli
aam
inc
dec
add
pop
mov
adc
push
sbb
cwtl
jmp
push
inc
lahf
adc
int
sub
cmp
pop
iret
sub
not
sbb
addl
add
int
mov
or
cmp
hlt
inc
movsl
or
cmp
jg
push
stos
pop
xor
xchg
ljmp
bound
andl
adc
push
shl
test
xor
push
jae
and
mov
fcoml
mov
or
xor
out
xchg
cli
stos
out
xchg
dec
inc
pusha
add
loopne
push
mov
scas
jb
iret
sub
add
adc
in
inc
mov
into
fwait
sbb
sbb
test
sbb
sbb
movsb
mov
icebp
mov
test
popf
sbb
mov
movsb
add
test
cli
out
fcompl
decb
sbb
outsb
or
pushf
cs
push
das
jne
cltd
mov
subl
inc
cmp
cmp
mov
mov
notb
lahf
les
subl
test
gs
and
ret
sarl
xlat
dec
and
sbb
pop
mov
js
push
std
xchg
mov
in
aas
xchg
xor
mov
mov
std
outsb
jmp
insb
xor
imul
shlb
add
stos
pop
cmc
ret
sti
xor
sbb
jns
or
add
jbe
pop
addr16
xchg
loop
jecxz
popa
in
mov
insb
imull
data16
mov
mov
mov
stc
fsub
inc
xor
enter
ds
push
mov
dec
or
mov
mov
mov
xor
or
xchg
inc
es
add
out
shlb
popa
dec
ret
pop
into
pop
aaa
movsl
cmc
pop
lea
dec
jbe
add
sti
stos
mov
or
pminsw
rcll
in
bound
scas
adc
andl
rolb
imul
fadds
adc
cmp
lea
sbbb
xor
push
adc
mov
jp
cmp
icebp
cs
xlat
mov
sub
push
lock
iret
cltd
sub
and
mov
push
aas
shrb
enter
mov
lcall
sub
sar
jmp
pop
popf
inc
sti
call
mov
and
and
out
jge
adc
cs
push
testb
sbb
pop
jns
std
nop
mov
shrl
xor
add
push
xchg
in
jg
nop
adcb
out
scas
push
dec
aam
aas
and
mov
jl
cmp
push
dec
and
pop
mov
push
mov
xchg
and
int
xchg
jbe
and
sbb
mov
mov
sbb
dec
mov
popf
clc
out
ss
cld
loop
mov
das
test
fwait
cmpsl
dec
sub
push
ficompl
faddl
nop
dec
and
fs
xor
dec
test
int
andb
loope
nop
mov
subl
xor
loop
lods
fxch
push
fnstcw
out
sub
jmp
stos
ds
les
lea
add
inc
pusha
cmpl
sbb
xchg
fidivs
mov
jbe
xlat
push
add
sbb
add
popf
xchg
jmp
loop
xorl
or
jecxz
loop
lret
ret
clc
jb
stos
or
pop
fdiv
movsb
stc
xor
cmpsb
adc
call
xor
hlt
mov
mov
lea
fidivs
adc
cs
js
sub
and
sub
outsw
sbb
inc
jg
test
addr16
outsb
xor
lret
bound
into
jecxz
sarl
stos
ljmp
xchg
lret
fisubs
and
mov
testb
pop
add
inc
cmp
subb
cmc
mov
stos
mov
aam
sub
cs
xchg
mov
lods
lret
mov
cmp
int3
adc
mov
cli
gs
push
aad
jne
push
scas
pop
jb
outsb
or
sub
pop
add
jo
xor
inc
jp
dec
imulb
cmp
cmpsb
cs
pop
outsb
sbb
fadd
daa
inc
stos
and
test
mov
pop
fisttps
dec
dec
mov
adc
enter
cmpsl
mov
insb
aas
or
cmp
call
or
out
mov
jmp
aas
inc
xor
mov
insl
mov
add
push
aad
sub
dec
jne
mov
mov
rcrb
cmp
adc
fstpt
and
bnd
arpl
mov
andl
jge
inc
push
lods
mov
lds
push
pop
pop
mov
xor
cmpsl
pushf
movsl
adc
inc
daa
mov
aam
in
xchg
adc
mov
xchg
push
nop
cmp
mov
rorb
sbb
sti
rep
rcrb
and
pushf
dec
xchg
xor
stc
cmc
inc
dec
icebp
mov
inc
push
cmc
sbb
pop
daa
lret
test
xchg
sti
inc
mov
sub
scas
ja
jnp
call
clc
movsl
pop
xchg
popf
in
inc
fcoms
or
lock
xor
add
stc
push
cmpsl
pop
lahf
mov
call
sbb
lds
scas
insl
iret
add
lods
js
jle
or
mov
shrl
outsb
adc
pop
push
pop
gs
or
mov
pop
jb
and
in
add
sbbb
pop
inc
fnstcw
cmpsb
fstl
je
dec
and
pop
div
cmp
sub
mov
add
jo
loop
loopne
daa
inc
dec
lahf
clc
add
sub
bound
pop
int
loope
jecxz
int3
dec
mov
fcmovb
mov
aad
adc
js
pop
stc
in
and
aaa
mov
push
into
push
shlb
push
test
stos
mov
mov
fwait
push
mov
mov
icebp
inc
clc
cmc
jecxz
dec
popa
aad
jge
pop
std
sub
js
jg
inc
mov
xor
push
jb
push
lea
imul
xchg
inc
push
cmp
test
mov
ror
sub
mov
cmpsl
mov
adc
jmp
cmpsb
das
aad
mov
mov
cmp
lret
outsb
push
xor
les
xor
jge
stos
mov
add
jne
xor
imul
icebp
cmc
pop
push
xor
push
jne
push
inc
push
dec
int3
jae
push
and
cmp
insl
aaa
xlat
sub
lds
daa
popf
lds
cli
div
sarb
sbbl
scas
sbb
loopne
lret
jb
gs
inc
sub
add
push
scas
or
lcall
sbb
xchg
nop
in
and
aad
test
push
push
lods
icebp
negl
mov
mov
icebp
into
insl
pop
pop
jmp
and
stos
enter
icebp
push
inc
mov
or
mov
lcall
repz
mov
push
add
mov
daa
test
inc
xchg
jp
loop
push
push
insb
int
or
repz
in
sub
xchg
test
incb
pop
adc
jmp
hlt
lock
push
inc
lret
push
fidivl
popa
movsb
mov
push
jp
sub
or
xor
shll
jge
movsb
xor
testl
dec
adc
in
lret
jg
pop
dec
test
pop
cmpsl
divb
ds
mov
popf
mov
add
cmp
add
jno
lea
xchg
xor
pop
xor
pop
xor
mov
rcl
or
push
imul
das
mov
add
out
lcall
and
mov
rolb
rorl
xor
in
inc
loopne
aaa
pop
fnstenv
and
mov
inc
pop
push
adc
mov
mov
fisttps
xchg
or
lds
repnz
cwtl
daa
hlt
push
fs
dec
cli
sub
sbb
in
insl
jnp
mov
call
rorl
xchg
jp
cmp
sbb
inc
fnstsw
das
pop
add
insb
jae
in
ret
mov
inc
inc
adc
std
jo
mov
add
clc
mov
mov
outsl
sub
dec
xchg
imul
std
dec
daa
loopne
nop
dec
test
cmpsl
add
xchg
or
icebp
jb
mov
sbb
adc
adc
insl
jecxz
lcall
mov
mov
cld
int3
sub
xchg
clc
mov
rcr
test
mov
mov
fs
orl
scas
fsubs
std
into
cmp
jae
ja
imul
jmp
mov
lahf
or
cmp
sub
mov
jl
shll
push
push
inc
dec
lahf
pop
out
shl
test
insb
inc
int
cmp
mov
mov
jnp
mov
jb
pushf
imul
jmp
fmull
inc
rcll
cmp
cmc
push
inc
mov
out
addr16
xchg
sub
cmp
adc
movsl
mov
xor
rol
xlat
mov
mov
cmp
cld
dec
add
pop
mov
loopne
js
les
inc
adcb
ja
mov
test
shlb
imul
mov
add
rclb
adc
cmp
fisttps
push
dec
push
andb
push
iret
xchg
mov
xchg
and
pop
sub
sub
es
inc
lret
adc
dec
xchg
add
dec
out
mov
and
lds
lock
sub
fbstp
xchg
add
aas
adc
sahf
shrb
mov
or
out
mov
pop
sbbb
cmp
dec
sbb
add
pop
cmpsl
inc
xchg
test
in
fcomps
ljmp
in
test
filds
xchg
std
dec
sbb
xor
sub
loop
inc
test
int3
arpl
mov
cmp
adc
hlt
xor
push
push
xchg
pop
jae
mov
daa
xchg
repz
stos
fmull
sbb
jne
add
dec
cmp
shrb
sub
pop
loope
out
jns
scas
mov
push
pushl
jecxz
sub
fbld
jle
push
sub
sub
cmp
out
cmpps
and
scas
aaa
add
mov
mov
movsl
push
or
lret
inc
ljmp
std
xlat
xchg
dec
movsl
aas
test
mov
sub
jno
xor
int
cmp
stos
cs
pop
ds
out
ja
pop
xchg
cmp
pusha
or
push
fidivs
clc
loop
pop
mov
push
adc
sbb
ljmp
xor
fisubl
cmpsl
fnsave
int3
insl
stos
pop
sub
int
mov
pop
jnp
pop
mov
push
inc
stos
mov
add
xchg
xor
adc
pop
lcall
mov
fisubrs
cmpsb
fsubrs
lock
daa
in
add
movaps
mov
sub
rcr
xchg
pop
sub
in
push
cmp
jae
and
xchg
ret
lods
push
ljmp
arpl
je
mov
fisubs
pusha
loopne
mov
push
inc
or
mov
out
dec
cmp
je
jb
xchg
daa
dec
imulb
ljmp
inc
adc
xchg
cmpsb
cmpsl
pop
mov
ja
jp
jge
movsb
stos
xchg
xchg
xor
push
mov
mov
bnd
pop
loop
sub
and
sbb
cwtl
fisubs
lahf
test
fisubrl
pop
or
mov
fwait
loope
cld
adc
pop
and
cmp
je
cld
and
push
scas
and
pop
mov
pusha
lock
dec
push
xorl
sbb
aas
cmc
addr16
ret
popf
sbb
or
pop
inc
lods
and
add
push
sbb
ljmp
mov
aaa
loopne
lldt
cmp
jmp
mov
mov
lods
add
push
adc
aas
in
jecxz
lret
xchg
aad
addr16
mov
dec
push
dec
mov
adcl
pop
xchg
mov
insb
stos
pushf
insb
in
push
test
mul
movsb
and
mov
and
movsb
sub
add
push
hlt
sahf
sbb
jp
jo
rolb
adc
or
out
or
fnstcw
sbb
xchg
in
hlt
xor
fcomip
pop
mov
push
cmp
mov
mov
icebp
add
sub
test
xchg
popa
insb
inc
dec
jg
adc
add
and
or
pop
cltd
or
mov
add
xchg
xchg
pop
push
cmp
fsubrp
fimull
daa
lock
push
or
pop
cmpsl
jmp
lahf
int
test
mov
sub
pop
repz
mov
xor
xor
push
daa
adc
lcall
cmp
adc
imul
rol
or
dec
cmpsb
xchg
outsl
dec
arpl
cmpsb
int3
mov
jp
loop
fwait
aaa
pop
insl
fisubrl
sbb
mov
outsb
xor
cmpsl
jp
or
dec
bound
enter
ljmp
adc
repz
ret
stos
push
adc
loopne
insb
outsb
jno
and
xlat
sbbb
aad
insb
xchg
outsl
push
mov
or
gs
rclb
inc
rolb
mov
pop
xchg
dec
rol
cmp
dec
mov
mov
std
ret
xchg
xor
sub
add
and
je
cmp
inc
enter
out
push
inc
stos
sub
leave
pop
scas
add
sahf
push
in
xchg
cmp
addr16
aam
xchg
pop
jns
in
sbbl
dec
ret
aam
jbe
pop
mov
out
lock
out
notb
pusha
pop
push
out
std
mov
loopne
std
mov
pop
lock
jo
inc
sub
xchg
arpl
pop
lods
pop
or
jnp
out
aad
mov
mov
or
movsb
loop
mov
lret
sti
fwait
adc
cmp
out
inc
push
pop
lods
ret
fistpll
pop
mov
in
cmp
or
jmp
add
fistpll
lret
jno
xchg
pop
fcomp
pusha
cld
scas
addr16
and
cmp
xchg
scas
cli
dec
sbb
imul
mov
xor
bound
fcoml
sub
push
mov
scas
pop
dec
adc
mov
xchg
in
cmp
cmp
aam
loope
cs
xchg
lock
lea
and
ret
dec
fsubrl
pop
xchg
enter
andb
lock
push
sbb
mov
pop
mov
sbb
test
push
out
inc
mov
push
or
loop
cmpsl
imul
dec
rorl
cs
pusha
sbb
out
jbe
dec
xor
push
inc
int3
inc
dec
and
repz
mov
sbb
sbb
insb
xchg
mov
cmpsb
test
inc
inc
addr16
pop
loop
cmp
sahf
jmp
into
cltd
repnz
mov
sahf
cmp
or
shlb
dec
inc
mov
mov
xchg
cmp
popf
ret
lds
mov
fwait
and
mov
jl
jns
or
xor
movsb
out
clc
leave
daa
test
cmpsb
ret
in
cmpsl
xchg
xorb
pushf
ret
or
js
mov
jge
imul
ss
pop
aam
popf
cmp
pop
das
sub
aad
cmp
daa
sbb
fwait
mov
jp
aad
ret
repz
and
mov
int
dec
je
xor
cld
inc
push
pop
cmp
cmp
mov
push
rorl
xor
add
push
jecxz
sahf
and
out
and
inc
inc
call
rcrl
inc
xchg
xchg
mov
add
push
aas
pop
jmp
cmp
in
sbb
jmp
sarb
inc
adc
ret
out
shl
and
mov
ret
stc
ljmp
aam
pop
jge
lahf
std
nop
xchg
jge
mov
fs
sahf
cmp
addr16
xchg
rcrb
imul
xor
ss
xor
fsubp
jnp
mov
xchg
dec
dec
sbbb
sbb
fildl
inc
jno
sub
lcall
bound
divb
test
int
add
js
sub
pusha
aaa
add
and
xchg
jecxz
pop
cmp
fwait
push
testl
xchg
mov
jg
fsubrl
sub
fwait
and
cmp
sbb
sbb
ret
jmp
adc
hlt
call
mov
fbstp
fdivp
jl
mov
adc
mov
test
cmp
pusha
into
jnp
and
or
stos
test
loopne
ja
in
add
in
push
or
xor
sahf
into
or
imul
or
in
repz
push
scas
add
push
jle
leave
add
in
enter
insb
imul
jecxz
int
cmp
mov
mov
push
xchg
mov
pop
je
cld
mov
adc
out
scas
out
jge
jl
mov
les
push
maxps
xchg
push
sti
sub
jne
sub
xlat
in
fdivrl
mov
push
dec
cmp
pop
decl
in
jnp
jb
jns
mov
ret
sub
and
nop
xchg
data16
pop
jne
sahf
lahf
dec
cli
or
lds
data16
xor
iret
inc
int
inc
or
jno
push
and
fs
fisubs
loope
mov
add
dec
in
sub
sub
fsubrs
mov
hlt
ss
adc
cmc
ret
inc
and
pop
cmp
cmp
repnz
stc
movsb
in
dec
add
add
push
push
sbb
stc
jne
lret
xchg
xlat
mov
jne
ficoml
mov
shrl
pop
and
ljmp
cmp
sub
or
sub
adc
cmp
loopne
jae
pop
outsb
fisttps
xchg
pop
jmp
mov
inc
outsb
lods
inc
ja
aad
in
pop
adc
mov
jae
cmc
or
ret
addr16
xchg
adc
test
lahf
imul
mov
jle
adc
pop
movups
lea
fadds
jne
jl
pminub
xchg
popf
add
inc
and
pop
iret
sahf
mov
data16
ret
notl
cmpsb
sbb
fstpl
add
xorl
xor
cmc
xchg
mov
dec
imul
sbb
lahf
aas
pop
and
dec
popf
xor
scas
test
xchg
out
testb
jmp
pop
mov
jge
sub
test
mov
add
pop
ss
jl
divl
push
arpl
shrl
movsb
push
push
stos
iret
andb
jo
scas
shlb
dec
rorl
sti
dec
stos
xlat
sbb
jnp
mov
xchg
dec
pop
push
addb
cltd
inc
dec
push
mov
movsb
sub
outsb
ds
ret
sbb
sbbl
sbb
lds
imul
aaa
inc
loope
inc
hlt
push
int3
gs
dec
mov
mov
enter
xchg
cmp
cmp
push
mov
fs
fcompl
mov
jp
cmp
aaa
stos
sysexit
popa
pop
pop
addb
fwait
pop
inc
fisubl
sub
push
xor
or
sbb
popa
in
imull
add
ds
mov
sub
cmp
out
cwtl
or
xor
sbb
dec
cld
sahf
stc
jmp
xor
inc
mov
cmpsb
stos
decl
xchg
cmpl
inc
ljmp
cmc
andnps
iret
push
inc
lods
add
pop
movb
xor
in
push
mov
lcall
pop
cltd
cmp
dec
sahf
sbb
mov
cmp
mov
pop
and
mov
testl
mov
ror
cmp
jl
in
pushf
jle
vpunpckhwd
dec
pop
ret
sbb
mov
repnz
add
movsb
sahf
mov
int3
push
scas
mov
cmp
or
mov
jle
cmp
xchg
in
mov
addb
dec
test
sub
and
sub
hlt
cmp
push
or
add
mov
mov
push
clc
stc
pop
loopne
pop
cmp
test
fs
jmp
loope
fadd
fcomps
cmp
repz
hlt
icebp
or
pop
sahf
lret
loopne
and
sbb
or
mov
pop
rorl
pop
cmp
xchg
loop
jg
aaa
stos
sbb
imul
in
sub
mov
lret
jne
push
mov
jnp
dec
xchg
ja
and
mov
sub
shll
pop
mov
push
insb
dec
fisubrl
loope
cli
jnp
mov
aaa
and
addr16
jbe
and
es
dec
cmp
mov
inc
xor
add
out
fdiv
jnp
mov
cmp
add
push
sbb
lock
imul
fstps
enter
push
sar
pushf
add
jge
add
add
mov
gs
pop
pop
das
add
mov
iret
out
ret
mov
cs
cwtl
add
push
xchg
pop
jo
xchg
xchg
mov
aad
or
fs
test
mov
inc
mov
arpl
inc
xor
fcomps
cmp
pop
jne
and
out
scas
fidivs
push
outsb
mov
xchg
mov
test
and
push
adc
mov
es
outsl
in
in
jo,pn
dec
cli
mov
push
sub
inc
dec
sahf
mov
loop
js
jne
push
dec
sti
mov
lret
inc
add
ficoml
dec
mov
or
push
cmp
je
in
lahf
setns
test
mov
and
dec
inc
or
mov
es
dec
xchg
andl
imul
push
xor
lods
imul
jnp
sub
cmp
repnz
xchg
clc
enter
push
mov
pop
cmpsb
movsb
out
cmpsl
pop
mov
popa
lods
inc
mov
sbb
jno
movsb
and
inc
and
xor
adc
rclb
mov
test
mov
dec
add
or
stc
lret
dec
in
stos
jae
adc
dec
mov
jmp
sub
lock
aas
inc
cmp
or
je
loope
in
pop
pushf
ret
dec
mov
cli
dec
inc
xor
xchg
or
sti
push
cltd
mov
xchg
into
aam
push
mov
mov
pop
setb
mov
js
stos
and
mov
mov
sarl
jae
sti
stos
sbb
repnz
and
int
pop
and
mov
lds
lret
sub
dec
je
sahf
xor
outsb
sbb
icebp
sub
cwtl
sub
gs
insb
push
inc
mov
sarl
fldcw
out
xchg
imul
inc
sbb
jae
inc
jmp
mov
jg
nop
aam
dec
cltd
sub
and
cmp
shll
mov
inc
imul
sahf
data16
js
mov
loop
sub
and
movsb
cmp
jmp
int
push
push
insl
push
jp
dec
test
sti
or
sub
adc
stos
sahf
mov
cmpsl
sub
xlat
int
nop
add
mov
dec
ret
xor
enter
pop
ret
sbb
jecxz
stos
xchg
add
push
daa
adc
xchg
xor
sbb
mov
add
enter
fidivrs
pusha
aam
enter
push
inc
leave
mov
popf
mov
out
jb
je
xchg
mov
es
jbe
cmp
cmp
mov
sbb
in
xor
push
leave
pop
rolb
call
rcrb
movsb
mov
push
dec
in
mov
mov
enter
test
insl
stos
imul
cmovp
test
and
push
xor
xchg
les
sbb
adc
popf
clc
frstor
xchg
jb
clc
cli
and
icebp
int
sub
push
mov
lcall
lahf
add
and
cmp
lea
jge
ss
cmp
movl
jmp
adc
cmpsl
sahf
and
jecxz
jns
xchg
test
jmp
and
mov
xchg
mov
js
ljmp
cmpsb
mov
cltd
hlt
pop
mov
fmulp
push
in
nop
lock
outsl
rcrb
mov
push
add
add
xor
add
sbb
insl
ss
mov
xor
jbe
pop
pop
icebp
fistps
lahf
hlt
shrb
enter
jge
xchg
sahf
jne
mov
push
jnp
jl
dec
pop
jns
nop
ja
cmp
mov
bound
mov
add
loope
push
mov
sarl
mov
cmp
shlb
int3
push
in
mov
pop
jno
add
call
xchg
cli
das
out
dec
ret
hlt
rorl
sub
cwtl
nop
mov
mov
mov
int
xchg
rol
sbb
add
movsb
push
xlat
mov
push
clc
pop
cmpsl
dec
stc
int
sti
jecxz
cli
push
insb
stc
jns
dec
dec
pcmpeqw
jne
faddl
mov
fadds
jnp
testl
mov
xchg
jbe
mov
adc
adc
icebp
push
ret
ret
dec
dec
push
pop
xor
scas
clc
sub
icebp
dec
notb
mov
rcll
test
mov
stc
xchg
mov
lods
popf
xchg
shlb
aas
and
or
mov
cmp
adc
lods
dec
ret
mov
popf
xor
adc
repz
cltd
sub
enter
dec
pop
sub
jge
jo
cmp
mov
rcrb
jno
scas
or
insb
lds
dec
or
movsb
add
int3
mov
les
xor
sbb
stc
out
or
and
fsubrs
pop
pop
and
ss
fdecstp
ds
jecxz
les
add
shlb
pop
xor
bound
jae
sub
pop
mov
repz
stos
dec
jno
fcomps
push
hlt
adc
lahf
cli
jbe
mov
mov
imul
inc
push
lods
mul
addl
cmpsb
gs
mov
sub
imul
insb
dec
push
xlat
int
mov
push
push
cmpsb
dec
ja
xor
and
call
or
mov
lahf
jo
bnd
jecxz
sbb
push
fsubrs
testl
pop
add
cmpsb
nop
in
outsb
stc
aad
mov
subb
or
jno
inc
mov
xor
pop
ja
dec
xchg
mov
stos
sub
sub
and
xor
iret
jmp
je
mov
jo
dec
or
lret
out
insl
xor
imul
inc
jmp
pop
hlt
mov
add
mov
dec
pop
adc
int
fcmove
andb
cwtl
into
cltd
scas
movsl
dec
and
sub
aad
enter
push
scas
out
aas
push
or
adc
pop
repnz
repz
sti
push
test
bound
fidivl
repz
out
push
cwtl
push
mov
adc
jns
push
in
daa
fcompl
xchg
xor
push
movsl
out
mov
sub
mov
push
add
dec
aas
mov
es
fisttps
xchg
pop
subl
icebp
stos
daa
adc
pop
loop
pop
dec
mov
test
pop
mov
dec
mov
xchg
gs
add
sub
xchg
xor
loop
fsts
xor
push
xchg
or
or
sti
push
daa
sbb
ss
rcll
lds
inc
stos
loop
outsl
fidivrs
test
into
push
xchg
aaa
repz
and
js
mov
call
stos
sub
or
inc
out
shll
mov
add
enter
dec
sbb
or
dec
adc
sub
mov
mov
mov
adc
dec
jbe
roll
add
hlt
fsubrs
inc
xchg
sub
ret
cmp
hlt
les
adc
sbb
iret
mov
fs
xchg
das
add
adc
or
cli
lahf
daa
pop
fnstcw
nop
xchg
xor
into
arpl
mov
into
xchg
dec
dec
add
jo
inc
or
inc
cmpsl
std
int
mov
dec
pop
movsb
cmpsb
sub
mov
pop
out
pop
mov
cmpsl
add
add
and
inc
into
mov
jnp
cmp
pop
xlat
inc
mov
cli
outsb
push
xor
push
sbb
mov
mov
mov
rcl
movsb
jb
cmc
mov
jnp
push
mov
in
lds
or
sub
int3
push
leave
push
add
lea
cmpsl
js
int
mov
into
out
add
idivl
fs
sub
inc
adc
roll
subl
pushl
xchg
lret
out
inc
popa
scas
pop
xchg
rcll
push
lods
test
aam
push
jmp
inc
lea
aam
shr
sub
add
mov
iret
notl
lret
cmc
out
sbb
pop
add
push
lds
outsb
xchg
or
js
inc
lcall
xchg
loope
je
popf
insb
pop
insl
frstor
out
or
sub
or
je
adcb
fnstsw
fldenv
add
in
or
push
mov
mov
dec
into
insl
ficoml
cld
pop
stc
cmp
add
push
and
xchg
push
or
push
stos
mov
daa
jecxz
pop
aas
jmp
idiv
dec
mov
sbb
pushf
mov
dec
das
xor
add
cmp
into
icebp
aas
jmp
adcb
push
xchg
ret
mov
mov
ljmp
sbb
jp
aam
test
dec
mov
std
or
xchg
mov
ret
jns
call
pop
push
jae
and
pop
xchg
xchg
dec
inc
mov
adc
xchg
lods
pop
test
cmp
lds
cmp
cs
lret
inc
pop
or
sbb
mov
push
mov
testb
test
push
movsl
mov
es
ss
pop
xchg
xor
xor
xor
pop
arpl
xorl
mov
into
stos
sub
push
jns
sarb
cltd
movsb
push
js
pop
imul
or
test
aas
push
jg
lcall
mov
in
in
test
mov
test
mov
movsl
or
pop
and
cltd
add
movsb
rcll
clc
sti
iret
cltd
push
xchg
test
data16
mov
out
sbb
nop
fnstcw
push
in
xchg
mov
push
xchg
jmp
dec
dec
fnstenv
and
out
loop
fsubrl
mov
insb
cmp
out
xor
mov
dec
add
push
movsb
xchg
sub
dec
fsubl
cwtl
xor
pop
and
daa
mov
mov
mov
int3
pop
jp
loop
xlat
cmp
int
or
lods
lock
imul
shll
inc
add
cmp
inc
test
in
aad
add
sub
je
pusha
push
inc
pop
int3
inc
scas
mov
adc
dec
dec
mov
xchg
adc
cmp
insb
jo
outsl
pop
std
sahf
mov
jne
inc
loop
mov
pop
pop
mov
ja
pop
icebp
int
jns
int
arpl
repnz
nop
sbb
mov
sub
jno
push
test
jl
cmpsb
addr16
sub
mov
bound
or
rclb
sub
mov
sbb
lcall
cwtl
or
dec
xchg
das
ret
sub
or
xchg
jns
es
jle
push
inc
or
push
cmp
cli
movsb
popa
inc
add
lock
rcr
sub
inc
das
xchg
xor
shrb
push
cmc
enter
int3
jge
fwait
add
push
test
push
cmpsl
push
addr16
daa
aas
xor
test
jg
jne
ret
rol
call
in
jns
push
lcall
outsl
xchg
gs
push
adc
shrb
rcr
pop
repnz
mov
stos
je
lret
push
inc
fs
or
mov
cmp
mov
les
sub
out
mov
cltd
cmp
addb
repz
sbb
jp
inc
and
aas
sti
ljmp
cmpsl
movsb
ljmp
sbb
mov
and
movsb
jmp
popf
mov
cmp
clc
fcompl
and
jl
out
jae
jno
mov
leave
in
lahf
test
mov
clc
or
cmc
ja
mov
aaa
and
test
aam
push
popf
xor
pop
jae
js
adc
mov
dec
xor
adc
je
arpl
cmp
mov
es
xchg
lret
inc
sub
das
cmovbe
pop
jne
adc
dec
adc
and
adc
stc
loope
mov
nop
sub
push
int
cmp
fildl
add
sbb
xchg
xchg
pop
xor
xor
cmc
xchg
test
icebp
popf
sti
in
js
cmpsb
fldenv
xor
mov
adc
push
inc
mov
pop
gs
inc
pop
cmp
std
lcall
repz
push
in
push
movsl
out
out
fildll
sub
or
ljmp
mov
adc
cwtl
add
push
rcrb
and
jae
lods
rorb
mov
push
insb
scas
cbtw
enter
cmc
push
push
mov
push
adc
insw
jno
movsb
push
andb
or
andl
les
push
imul
add
or
xchg
loope
cwtl
xchg
dec
ja
aas
mov
dec
sti
cli
mov
jecxz
mov
fsubrs
bound
and
out
push
cmpl
adc
sbb
sub
fldl
xchg
xchg
cltd
mov
jmp
outsb
insb
add
aas
or
lret
ret
lods
mov
in
sti
rcll
stos
pop
mov
dec
sbb
inc
mov
lahf
xor
mov
into
hlt
sbb
dec
or
fdivrp
out
inc
les
push
imul
ret
cmp
sub
cmpb
in
mov
loope
mull
push
push
jne
movsl
and
popf
mov
jle
mov
mov
dec
testl
into
pushf
sbb
fcmovbe
cmp
jecxz
aaa
lcall
fcomp
xor
push
jne
mov
mov
or
jb
adc
cmp
pop
iret
mov
test
imul
arpl
stos
ret
push
fistps
icebp
hlt
popf
sub
inc
inc
mov
mov
cmp
mov
sbb
push
pop
jle
mov
or
cmp
adc
sub
jo
pop
repz
ret
arpl
in
xchg
push
movsb
es
subb
or
ja
dec
mov
inc
inc
sbb
or
xchg
loopne
sbb
in
leavew
std
pop
mov
cld
sub
shl
fists
shr
popa
pusha
xchg
and
add
jne
lea
insl
jle
mov
stos
mull
cmp
je
add
stos
or
icebp
vpcmpgtw
mov
pop
mov
push
mov
cld
mov
lret
mov
sub
sbb
pop
hlt
jbe
test
xchg
mov
insl
jl
cmc
pusha
and
in
and
lahf
cmp
outsb
vpsraq
icebp
movsl
pop
loop
into
sub
cltd
jecxz
jne
imul
push
cmp
enter
lock
js
pop
jmp
inc
cmp
fdivr
mov
stos
and
psllw
or
je
scas
push
push
stos
pushf
adc
fldt
out
mov
add
in
push
movsl
mov
inc
jo
cmp
mov
pop
add
leave
ror
or
xchg
jle
insl
ds
xchg
lret
out
sub
loope
fcmovu
cmp
fnstenv
add
lock
in
mov
mov
enter
push
sub
ficoml
test
sbb
mov
cmpsl
fimuls
mov
jae
int3
fxch
ja
pop
xchg
adc
inc
sti
rorl
mov
mov
filds
je
and
aas
iret
lcall
mov
cs
shl
dec
out
adc
sub
in
and
fwait
push
jbe
stc
fidivl
lret
inc
sub
and
jbe
mov
arpl
add
out
mov
repz
xchg
stos
cmp
adc
out
xor
mov
adcl
aad
fbstp
imul
sub
cmc
jno
xchg
sti
rcrb
cmp
loope
mov
push
push
inc
cmp
push
fnstsw
xor
add
inc
add
bound
push
loop
cwtl
test
lcall
inc
lock
cmpsl
loopne
out
mov
push
sub
mov
inc
sbb
pushf
sti
int
shlb
inc
xchg
push
push
icebp
mov
in
cmp
mov
jge
in
cmp
fists
mov
loope
ret
adc
adcb
mov
rclb
pop
jne
movsl
loopne,pt
dec
cmpsb
jle
ja
jno
rol
out
pushf
mov
push
adc
push
xor
dec
out
mov
jecxz
jb
out
push
adc
cmpsb
fcomps
scas
fwait
aam
or
mov
push
pop
clc
int3
add
lds
jno
imul
sbb
popa
mov
ljmp
cmp
int
ljmp
cltd
push
sbbb
aad
sti
fcomps
add
add
cmp
add
push
imul
lock
push
clc
lods
data16
clc
nop
xchg
dec
mov
inc
jecxz
stos
or
shlb
loop
leave
inc
out
fidivrl
es
or
cmp
mov
out
cmp
mov
repz
jne
push
sub
test
push
hlt
test
and
fwait
push
sti
pop
mov
xchg
mov
in
or
bound
popa
mov
push
cmp
sub
pop
shrb
jl
das
pusha
test
movsb
jnp
test
addr16
andl
mov
sbb
pushf
mov
or
ljmp
call
adc
lahf
dec
mov
iret
add
dec
mov
ja
pop
iret
xchg
shrb
movsl
jge
into
das
jno
out
enter
iret
push
pop
sbb
adc
loopne
mov
push
sub
test
test
cli
xchg
pop
mov
sbb
xor
inc
loop
jb
rcrb
stos
in
std
pop
mov
aam
push
inc
xchg
xor
inc
add
sub
mov
cmpsl
cmpsl
cld
std
push
jae
sub
cmp
jecxz
push
sbb
in
mov
scas
jg
test
mov
pop
mov
and
and
cwtl
cwtl
push
outsl
add
insb
pop
ljmp
pop
dec
jnp
les
dec
and
stos
and
sbb
lods
and
cs
cmc
mov
adc
lahf
add
sub
ret
in
adcb
pop
xlat
mov
xchg
aad
leave
push
addr16
mov
movsl
shlb
outsl
popf
pop
push
aad
xor
movsb
scas
icebp
fs
sub
push
push
mov
push
pop
movsl
cli
fimuls
xchg
inc
stc
push
pop
jle
pusha
inc
mov
into
xor
xor
iret
cwtl
outsb
mov
int3
imul
fadds
outsb
cmpsb
lods
andb
sahf
jecxz
sbb
lods
loope
insb
xor
in
insl
nop
mov
mov
jb
push
jmp
test
push
not
dec
pop
sbb
push
sub
add
push
pop
divl
adc
pop
mov
inc
ljmp
inc
outsb
fistpl
push
call
push
das
inc
and
int3
mov
lret
push
movsb
push
jns
jbe
lea
mov
orl
scas
cmpsl
in
icebp
xchg
pop
ljmp
fidivrs
push
dec
lcall
ss
push
gs
mov
loop
daa
push
jbe,pt
inc
xlat
xor
lcall
mov
arpl
mov
hlt
pop
stc
xchg
mov
sbb
pop
cmc
cs
add
cltd
sbb
push
pop
rorb
jle
inc
mov
lcall
mov
inc
outsb
ja
push
sbbb
xchg
popa
inc
inc
push
int
inc
mov
sub
lea
mov
xchg
movzbl
cwtl
xor
mov
jae
aaa
push
movsl
pop
scas
stos
pop
and
cmp
jg
mov
xlat
jb
loop
sub
imul
push
les
stos
push
jp
out
mov
jmp
cwtl
pushf
call
dec
inc
ja
jle
xchg
imul
fildll
imul
int
movsl
push
cmpsb
lds
dec
in
sub
xchg
stc
mov
jp
ficompl
mov
inc
sar
insl
lret
xorl
dec
jmp
mov
stos
cmp
jg
xlat
fwait
jle
jp
stos
jecxz
scas
jecxz
cld
daa
mov
pushf
push
movsl
lahf
dec
imul
mov
in
mov
loope
pop
or
jg
outsb
pop
cld
pop
pop
cmpl
push
mov
fnstenv
movsl
sub
fisttpl
sbb
jecxz
orl
dec
mov
sbb
add
xor
push
pop
ffreep
xchg
lret
dec
push
cmpsl
std
sub
nop
sub
pop
imull
jge
xor
push
mov
cmp
sub
addb
or
or
stos
mov
jne
inc
mov
test
sarb
cmp
les
mov
sub
enter
xchg
jmp
mov
flds
cmp
mov
inc
mov
add
sbb
addr16
add
mov
mov
sarb
bound
ja
push
jne
xor
sbb
cld
scas
dec
mov
fstl
push
js
add
sub
out
jns
mov
lret
xor
dec
lahf
xchg
enter
add
ljmp
push
ret
jno
xlat
leave
xor
out
loope
push
and
jle
aas
dec
pop
pusha
das
fs
je
adc
mov
ror
jo
inc
cli
in
cmp
lods
and
mov
mov
cmp
cmp
jb
sti
nop
xchg
add
jnp
mov
je
mov
std
pusha
mov
fbld
test
ret
push
dec
mov
ret
push
test
jbe
pop
add
dec
cli
inc
cmc
and
ljmp
or
inc
jmp
jno
add
rol
inc
test
popa
scas
pop
pop
inc
sbb
jl
mov
sbb
xor
and
dec
push
enter
outsl
pop
filds
sbb
aad
mov
mov
xor
int
int3
xchg
pop
decl
inc
out
pushf
push
xor
in
jmp
mov
pop
add
add
xchg
push
push
jle
dec
ret
roll
xor
push
add
mov
cld
pop
add
and
dec
pop
roll
daa
movsb
mov
mov
loope
sbb
rorb
mov
bound
clc
enter
pusha
jb
rol
les
jmp
pushf
icebp
loopne
repnz
pop
inc
jmp
and
xchg
jle
sti
mov
xor
cli
pop
xor
push
icebp
in
das
xchg
pmulhuw
push
mov
popf
stc
adc
test
mov
xchg
xor
ror
das
dec
mov
js
ja
push
shrl
inc
mov
pop
and
outsb
mov
add
add
adcl
popw
adc
lock
jl
leave
sub
dec
inc
dec
jno
jnp
pop
or
jbe
xchg
orl
jle
inc
mov
ret
js
int
jo
daa
adc
sub
imul
push
xor
cmp
test
gs
pop
fcoml
ds
push
pop
mov
xchg
and
pop
and
sbb
fs
outsb
jecxz
cmc
xchg
mov
xor
xor
loope
daa
dec
loope
arpl
or
add
insb
xor
xor
cmpw
aam
popa
in
add
xor
mov
mov
xchg
jmp
push
fistps
sbb
stos
test
cmp
mov
dec
cmp
push
mov
pop
ret
leave
iret
bound
sub
sbb
jo
sub
clc
xor
push
sub
fistps
je
sbb
push
inc
xor
mov
xchg
sbb
inc
jae
mov
aas
into
push
cmp
cs
pop
shll
jno
sti
push
negl
jns
pop
in
xor
mov
push
jbe
and
pop
mov
jp
fldenv
sbb
in
cmp
lahf
mov
test
sahf
or
ret
and
or
test
dec
xor
es
xchg
sbb
jle
mov
leave
movsl
jae
push
int
jecxz
and
add
stos
icebp
aas
cmp
dec
fdivr
mov
pop
lock
lahf
stc
or
pop
jo
xchg
je
pop
fisubs
clc
or
sbb
mov
cld
andl
lods
test
enter
and
sub
add
das
cmpsb
inc
push
aaa
pop
in
sub
and
jbe
dec
int
ret
pop
xchg
testb
iret
es
pop
mov
sub
or
mov
sub
out
clc
bound
xor
push
cmp
ss
fisubrs
scas
jmp
lret
fs
scas
mov
movb
leave
lods
sub
shl
add
mov
imul
js
push
stos
jge
sbb
scas
clc
inc
push
imul
xchg
sub
test
test
es
pop
cmp
loop
mov
out
fldcw
adc
xor
testb
push
dec
xchg
ja
fsubl
cmp
jg
xor
lahf
test
adc
out
shll
cmp
ss
cld
xlat
stc
pop
mov
mov
subl
adc
orb
pop
inc
mov
or
cmp
lret
or
mov
mov
rclb
sub
xlat
iret
jecxz
and
std
pop
int3
jnp
jle
jge
xchg
aaa
stc
adc
repz
inc
inc
xor
push
sub
cmpsb
or
aad
adc
insl
mov
ja
clc
jle
add
and
cmp
adc
inc
push
aaa
ljmp
sbb
daa
sub
lcall
mov
jmp
int
cwtl
in
in
fsubrp
ret
les
push
fs
out
test
xchg
fisttpl
dec
fstl
adc
pop
fdivrs
xor
pop
cmp
outsb
sti
mov
sbb
rcl
mov
xchg
xor
lahf
cmpsl
leave
lahf
xor
xor
xor
dec
push
push
dec
insb
test
jmp
movl
mov
cmp
je
lcall
xchg
mov
add
mov
loop
sub
lsl
pop
cld
mov
loope
in
out
aas
cs
loopne
js
pop
jl
push
lea
mov
mov
add
test
sbb
mov
fwait
or
adc
push
inc
cmp
xchg
sahf
sahf
fwait
mov
or
mov
sub
dec
lods
iret
cmp
xchg
sub
jno
xor
pop
test
popa
outsl
mov
dec
hlt
push
xchg
scas
stos
xor
inc
mov
push
insb
mov
rorl
push
and
loopne
mov
arpl
push
mov
inc
sti
idivl
pop
and
xor
sbbl
lret
push
or
mov
test
mov
cli
loopne
and
aad
mov
xchg
addr16
mov
xchg
xor
push
or
xchg
movsb
iret
scas
repz
xlat
ja
decb
pusha
xchg
insl
insb
aas
roll
cmp
mov
or
jo
movsb
out
movb
pop
insb
fwait
adc
nop
sub
pop
mov
cmpb
sub
dec
push
pop
pop
ljmp
rcl
enter
xor
sub
mov
mov
sbb
adc
adc
fcomi
cmp
mov
sahf
jne
lcall
cltd
mov
scas
mov
int
or
push
mov
loope
push
cmc
inc
mov
push
push
flds
sbb
or
cs
push
lods
xlat
out
inc
xor
arpl
cmc
sbb
mov
xor
test
xlat
int
or
clc
pop
cmp
loopne
in
fisubrl
mov
mov
insb
inc
xchg
cwtl
cld
pop
imul
and
fidivs
sub
mov
push
inc
push
leave
xchg
std
loop
nop
movsl
dec
ss
mov
imul
aad
cmpl
cld
sbb
dec
mov
fdivs
and
xor
cmc
sbb
dec
lods
inc
out
icebp
lea
inc
sub
inc
pop
xor
xor
mov
jp
lea
push
sub
rolb
cmpsl
jbe
mov
xor
cmp
ja
xor
adc
pop
adc
lock
sarl
out
inc
xor
mov
pop
or
sbb
mov
shrl
es
sub
ror
arpl
daa
fisubrl
push
push
mov
filds
movsb
loopw
fdivs
mov
outsb
ljmp
cld
xor
mov
or
nop
mov
pop
xchg
sbb
lods
ljmp
push
mov
jecxz
sbb
pop
outsl
pop
movsl
hlt
cmp
lret
ds
pop
mov
fildll
test
fldt
dec
dec
jo
lods
popf
loope
in
sbb
mov
xchg
cmp
mov
addl
mov
mov
int3
and
sbbl
lret
cmpsb
push
jmp
lahf
mov
movsb
mov
loopne
jge
inc
fwait
loopne
jae
xor
in
stos
sub
shl
xor
cld
sti
cmp
insb
loope
pop
mov
fcomps
adc
jbe
or
call
xor
adc
add
leave
add
mov
push
mov
inc
cwtl
and
sub
in
popa
mov
xor
and
sub
ret
sbb
add
fs
imul
mov
daa
jne
ret
jle
lahf
js
loopne
rcrb
inc
sbb
aaa
jp
cmp
std
inc
xchg
dec
adc
cmc
mov
inc
and
pop
mov
jecxz
lcall
add
addl
push
or
jecxz
push
adc
inc
mov
xor
cmp
rorb
cmp
pop
mov
int
add
nop
push
mov
or
inc
sbb
mov
stc
aad
cs
sbb
sahf
mov
jo
test
outsl
mov
add
pop
mov
mov
sbbb
mov
dec
stos
test
test
cmp
mov
adc
mov
pushf
and
in
xlat
out
mov
jecxz
and
jns
or
divb
pusha
jmp
jno
sbb
xlat
push
pop
aas
cmpb
lds
in
lock
pushf
pusha
xlat
pop
push
jmp
aam
outsl
mov
sub
inc
arpl
sub
cld
cmp
sbb
or
mov
xor
mov
add
scas
hlt
nop
fwait
inc
cmp
cmp
or
fnsave
sub
mov
push
mov
xor
adc
adc
mov
cld
mov
nop
adc
lcall
mov
bound
pushf
sbb
xchg
jae
lods
aad
std
imul
fcmovnu
hlt
xchg
lods
cmpsl
adc
xor
and
jmp
push
and
xchg
jo
lods
loop
cwtl
ret
test
in
test
mov
imul
loopne
push
mov
sbb
mov
hlt
popf
stos
cli
hlt
lahf
inc
arpl
xchg
adc
fidivs
push
mov
dec
mov
out
popf
loop
mov
mov
pusha
lahf
or
sub
inc
cmp
int3
push
mov
in
jge
mov
push
or
imul
push
xchg
sbb
dec
or
cli
arpl
sub
cmp
dec
lea
stos
cmp
cmp
inc
cmp
push
sbb
stos
lcall
push
in
or
ret
add
repnz
push
cmpsl
mov
test
sbb
dec
dec
add
inc
cmpsb
mov
lcall
sti
int
mov
mov
add
inc
and
dec
mov
dec
jns
xchg
loope
inc
pop
into
lds
test
rolb
fldcw
scas
lds
jb
jmp
mov
mov
clc
lcall
into
sub
into
sub
ljmp
fmuls
out
mov
xor
cmpsb
adc
add
movb
in
push
xor
push
les
cmpsl
adc
cmpsb
dec
xlat
mov
lahf
and
mov
xchg
stos
sub
lcall
shl
ret
int
clc
dec
adc
out
cmpsl
std
fnsave
pop
stc
sub
fisubs
pop
cmp
int3
insb
sub
es
inc
aam
orb
call
mov
das
cs
fistpll
sub
mov
sub
mov
dec
ret
je
mov
adc
int3
cltd
daa
and
lcall
ja
jmp
lds
cmp
and
pusha
xchg
rorl
cmpsl
out
sahf
in
and
adc
mov
ret
stos
call
push
sbb
cmp
mov
dec
xchg
pop
rcr
pop
stos
imul
xor
ret
cltd
or
mov
mov
mov
and
in
pushf
mov
mov
enter
mov
inc
cmp
cmpsb
lcall
push
test
shrl
add
push
xchg
fnstcw
filds
xchg
dec
jmp
adc
mov
fiaddl
pop
cld
pop
push
and
addr16
ret
test
scas
xor
mov
sbb
jno
adc
scas
pop
test
out
jb
pushf
xor
xor
cmp
xor
cmpsl
inc
xchg
test
jne
pop
cwtl
mov
mov
fsub
adc
jb,pt
push
test
sbb
ss
aaa
push
mov
sbb
enter
iret
or
sub
mov
mov
cmc
dec
outsl
inc
xlat
xchg
sti
inc
pop
sahf
jo
in
and
add
fstl
push
jg
or
repnz
popa
pop
xchg
mov
xor
lahf
push
sub
imul
dec
dec
jbe
mov
iret
lock
imul
shr
fwait
addr16
pop
mov
jl
jno
push
push
sbb
rorl
andb
test
mov
test
lods
movsb
flds
leave
xor
adc
mov
lret
arpl
mov
outsl
fcmovne
test
ret
xchg
repz
stos
mov
inc
inc
lods
jle
adc
shll
pop
mov
jl
jno
nop
inc
aam
imul
sub
inc
das
movb
repnz
rorl
lods
shlb
push
int3
jp
push
addr16
sbb
hlt
push
push
pop
cmpsl
xor
and
stos
adc
push
imul
or
fldcw
lds
stc
jnp
outsb
mov
sbb
jmp
cltd
mov
push
lock
mov
lret
in
andl
dec
xchg
and
xchg
inc
fidivrl
mov
cmpsb
je
stos
icebp
adc
cmpsl
mov
movsl
je
lret
mov
ror
test
xchg
fs
pop
push
cmp
sbb
mov
les
bound
insl
lods
je
pop
fadds
cmp
popa
or
aad
ret
pop
test
fdiv
into
push
mov
movsl
insl
jbe
add
jne
and
cmc
insb
pop
adc
sbb
inc
gs
pop
mov
addb
outsl
xchg
adc
inc
mov
or
loope
pop
cld
push
sub
repz
imul
js
pop
lock
icebp
push
insb
incb
fs
or
lcall
outsl
in
aaa
cmp
ss
inc
dec
and
xchg
ja
push
test
mov
and
sahf
push
cmp
cwtl
sbb
push
test
rcl
jle
lret
in
orl
lea
adcb
jnp
mov
dec
pop
add
cmpsl
movsb
adc
mov
xchg
inc
into
lea
bound
in
leave
add
mov
dec
jmp
test
stos
mov
scas
xor
dec
bound
arpl
das
jo
in
mov
cmp
add
test
gs
jmp
clc
push
push
push
fisubrl
adc
mov
sbb
add
addl
shlb
push
popf
add
dec
sub
xlat
outsb
adc
mov
jg
jge
and
xor
in
cld
aas
insl
dec
jmp
mov
xchg
inc
mov
aam
movsb
cmp
push
xchg
mov
mov
mov
mov
push
fwait
sub
xchg
imulb
jecxz
ror
jo
scas
push
add
mov
ret
hlt
nop
popa
movsb
repz
pop
jmp
mov
pop
add
repnz
test
dec
and
sub
xor
test
ss
mov
pop
sub
int3
adc
shlb
pop
daa
push
sbb
add
pop
cwtl
jb
movsl
adcb
int
daa
sbb
fs
call
and
sahf
adc
call
xor
cmp
mov
call
fmuls
jmp
jns
mov
xor
adc
mov
hlt
lret
popf
aas
movsb
leave
cmp
scas
fstl
mov
mov
push
in
inc
lahf
clc
lret
jmp
xchg
icebp
addr16
add
mov
inc
mov
mov
int
mov
and
xchg
dec
out
es
push
sub
push
enter
jbe
jo
jne
jno
cmp
shrb
out
inc
push
mov
insb
test
fst
or
cltd
or
xchg
dec
push
adc
dec
pop
cli
aaa
mov
out
mul
lea
mov
in
add
or
mov
orb
ja
push
enter
jnp
sbb
xor
push
sbb
pop
pushf
int
test
adc
icebp
xor
cli
icebp
sub
or
jnp
xor
mov
push
fisubl
les
sahf
ja
addr16
xchg
imul
jecxz
sub
insl
xor
leave
cmc
je
inc
clc
outsb
mov
dec
cmp
mov
xchg
adc
push
lods
sub
push
adc
clc
fs
dec
subl
and
jno
xchg
and
sbb
cs
mov
cmp
pop
movlps
test
push
mov
in
ret
and
adc
pop
in
icebp
xchg
mov
xor
xchg
mov
xchg
adc
jnp
test
dec
sbbl
das
inc
dec
fisubl
test
pop
add
xchg
sub
dec
call
mov
push
aaa
sbb
adc
hlt
jns
sub
std
add
ret
outsb
clc
push
sbb
or
aam
and
sub
lret
inc
mov
aad
lods
insb
adc
imul
cs
sub
iret
xchg
imul
add
xchg
lahf
dec
lahf
in
mov
imul
cli
mov
add
sbb
cmpsl
shl
shlb
mov
push
icebp
jp
ss
test
inc
mov
pop
add
xchg
shl
jl
lea
pop
jmp
cmpsb
sbb
and
cmpsb
inc
push
inc
xchg
insl
pop
xor
fistpll
inc
xorb
xchg
pop
ja
cld
pusha
sbb
ffree
xchg
mov
iret
aad
sbb
int
jge
not
pop
or
subl
sub
bound
jmp
lds
cmp
sub
pushf
ja
sbb
mov
lea
jns
or
mov
add
into
int
and
lods
mov
jecxz
and
aaa
inc
add
xor
or
inc
out
mov
mov
sahf
stos
xchg
pop
dec
dec
bswap
pop
leave
ja
cmp
cs
in
test
or
mov
jb
sbb
adc
jp
cmp
shll
mov
mov
and
jecxz
mov
sub
mov
mov
subl
daa
je
mov
in
lods
stc
in
inc
int
aam
add
fists
mov
inc
outsb
cmp
cltd
mov
clc
adc
aam
mov
push
sbb
dec
mov
mov
push
stos
leave
pop
pop
dec
pusha
lret
pop
fnstenv
in
sbb
dec
dec
inc
fstpl
and
push
jno
sbb
lea
cs
mov
data16
dec
adcl
sub
aas
fsubs
cmc
daa
pop
mov
idivl
pop
in
aad
sub
mov
pop
inc
inc
dec
popf
cmp
and
shlb
push
lock
cmp
insb
xchg
lret
fs
outsl
es
and
in
jb
dec
sbb
fwait
inc
add
xchg
repz
jp
xchg
or
enter
dec
rcr
xchg
mov
test
scas
mov
cmc
ljmp
sub
mov
pop
lea
in
call
and
pop
test
push
lock
into
inc
jp
xchg
jne
pop
add
lods
xchg
pop
imul
dec
fucom
inc
and
pop
aad
rorb
push
jle
adc
and
xlat
add
cwtl
lret
xor
jnp
jecxz
lret
and
lcall
mov
jns
inc
loop
add
fbstp
mov
push
sub
ss
jge
xchg
incb
mov
rcrb
in
add
sti
adc
clc
add
fisttpll
cltd
lret
pop
bound
arpl
nop
rcrl
insb
mov
das
movsb
cs
pop
fs
jmp
lods
push
aaa
shl
lock
jmp
mov
pop
sbb
lcall
je
push
sub
jg
test
test
lahf
mov
xor
jae
dec
pop
scas
fnstsw
mov
leave
sub
gs
aad
sub
mov
mov
stos
shlb
aad
xor
sarl
mov
call
xor
repz
addr16
mov
in
bound
iret
test
mov
push
push
loopne
push
xchg
jmp
out
adc
dec
pop
xor
mov
mov
enter
mov
inc
lret
test
aaa
aad
fnstcw
add
mov
stos
pop
test
inc
mov
pop
mov
icebp
rol
cmp
fwait
xorl
shl
inc
xchg
sub
in
xchg
sub
mov
add
fsubs
jns
cmovp
shll
hlt
cmp
in
push
lods
mov
xchg
pushf
lret
adc
shl
addr16
xchg
mov
add
xor
leave
xor
lock
outsl
setge
ljmp
add
mov
and
mov
arpl
jl
sub
jle
jg
leave
iret
fcomps
mov
pop
mov
mov
inc
ror
enter
ljmp
and
mov
addr16
fcoml
xchg
inc
fildl
ficoms
lret
test
popl
push
inc
mov
fbld
mov
xchg
jb
mov
sahf
faddp
lret
add
push
ljmp
aam
inc
push
xchg
imul
mov
or
cmp
and
mov
mov
inc
lret
sub
push
jne
fdivp
jne
xor
fld
mov
adc
adc
nop
mov
dec
clc
pop
pop
sarb
hlt
jnp
lods
cli
push
int
mov
fidivrl
mov
add
dec
push
pusha
in
push
adc
shl
inc
xor
outsl
out
sub
mov
push
mov
cmp
add
xchg
stc
push
iret
mov
push
xchg
jge
cmp
cli
jp
and
jns
imul
out
mov
mov
les
mov
aam
and
adc
ret
and
cmp
mov
mov
mov
mov
bound
les
aaa
gs
aam
sahf
fs
fsub
pop
mov
mov
hlt
mov
add
sub
mov
or
imul
and
jbe
mov
insl
fbld
or
adc
hlt
mov
cli
add
mov
int
aad
gs
lea
nop
shll
fneni(8087
incl
movsb
xor
and
xor
push
in
fbstp
jbe
cmp
push
hlt
xor
push
xor
jbe
das
jmp
jo
push
mov
adc
push
xchg
es
pushf
out
mov
cmp
aad
sub
jo
in
std
stos
cmp
sub
push
pushf
xor
cmp
lret
and
pop
daa
fidivrl
lods
das
jg
sbb
pop
leave
ret
ret
adc
insl
pushf
dec
insl
cmc
cmp
cmpsb
in
pop
adc
adc
jns
mov
mov
iret
fiaddl
mov
lea
insb
outsb
xor
inc
loopne
lock
int
mov
mov
jae
stos
nop
xchg
popa
lcall
or
dec
mov
mov
and
popa
dec
aad
adc
jle
jp
inc
mov
dec
test
push
or
cvtps2pd
cmc
stc
dec
xor
insb
mov
fdivl
mov
sub
and
ucomiss
and
das
repz
adc
sub
outsb
ret
xchg
and
fadd
stos
aam
shll
push
mov
lret
or
mov
clc
mov
sub
and
in
adc
mov
sbb
rcr
cmp
mov
inc
mov
dec
pusha
jle
pop
xchg
sub
stc
ds
rorl
jge
and
pop
add
mov
mov
movsb
lods
push
adc
pop
add
xchg
mov
stos
cmp
jns
out
mov
sub
pop
fadds
enter
dec
push
ret
jnp
add
xor
out
lds
nop
aas
lock
lock
sbb
xor
inc
shrb
and
mov
xor
pop
div
nop
ffreep
inc
sbbb
shlb
arpl
jbe
mov
js
push
or
js
outsb
sbb
insb
jno
cld
rorl
lods
xor
fidivl
or
mov
jns
push
mov
inc
adc
or
mov
idivl
and
cmp
mov
sub
and
xchg
sub
xchg
arpl
fcomps
pop
mov
xor
dec
incl
dec
into
mov
mov
jmp
push
cmpsb
jno
xor
inc
jbe
cmp
cwtl
inc
sahf
loope
or
mov
stos
lret
fs
stc
outsb
aaa
sbb
cmc
jbe
sbb
mov
sahf
jg
stc
data16
in
repnz
lds
mov
cltd
inc
addb
lock
ja
fstp
std
xchg
into
adc
sub
pop
xchg
and
in
inc
dec
jns
mov
mov
xorl
push
adc
sub
xor
mov
and
insb
xchg
mov
sahf
imulb
dec
jbe
pop
mov
push
cmp
sbb
sub
int3
and
repnz
shr
inc
scas
inc
mov
push
addr16
lret
dec
outsb
inc
out
add
rolb
push
mov
xchg
adc
jo
sub
outsb
ljmp
xchg
inc
jg
add
sbb
xchg
push
mov
mov
xor
test
mov
test
dec
mov
mov
clc
xchg
outsl
dec
push
adc
add
outsl
js
iret
cmpsb
push
pop
outsl
xor
iret
in
mov
mov
shll
imul
jmp
and
and
int3
and
mov
scas
andb
and
fiadds
sub
mov
popa
mov
sti
leave
mov
xlat
fcmovnu
pop
leave
push
cmpsl
out
add
xchg
insl
push
lahf
and
xchg
mov
cld
mov
mov
lods
les
jge
and
push
movsb
push
nop
aam
fistl
sub
adc
movsl
dec
stos
mov
rolb
lret
movsb
mov
cmp
adc
ljmp
ror
cmc
pop
xchg
sti
pop
movsl
repnz
ds
fdivr
ficoms
mov
mov
mov
cli
std
addl
inc
adc
out
clc
sbb
xor
out
mov
stos
mov
into
call
das
arpl
jle
push
fdivs
mov
ja
jecxz
push
jb
mov
jle
cmp
cmp
pop
decb
les
movsb
jb
xchg
fwait
aaa
xchg
and
mov
and
sahf
push
dec
cmp
mov
adc
add
test
sbb
test
push
xchg
arpl
mov
leave
cmp
mov
mov
lret
adc
lods
or
pop
and
fs
call
lock
dec
mov
mov
mov
int
aad
xchg
movsl
in
pop
jg
xchg
fisttpl
sbb
ret
ret
inc
mov
sbb
push
xchg
xor
fwait
mov
shlb
mov
xchg
xchg
jecxz
push
push
add
push
mov
rolb
jnp
fwait
leave
in
cld
movsb
mov
add
mov
ret
xor
bound
add
cmpsb
pushf
movsb
push
and
popa
pop
shll
mov
adcl
sub
dec
stc
sahf
xchg
push
outsl
mov
in
pushf
xor
das
or
push
das
fbld
mov
mov
test
mov
ja
ds
xor
ss
je
lds
repz
push
inc
fwait
rcl
mull
fsubr
push
arpl
test
inc
xchg
cmp
push
cld
aaa
loopne
in
xor
jne
popa
xor
mov
iret
adc
inc
sub
mov
xor
popa
test
ja
rcrb
sub
mov
mov
lods
jno
push
std
dec
lret
shl
int3
mov
in
inc
lea
xor
inc
xor
out
jmp
or
sub
inc
push
ss
push
mov
popa
xor
mov
fidivs
cmpsl
xchg
inc
dec
xchg
js
xor
push
adc
jg
pushf
mov
pop
add
popa
lret
mov
adc
sub
out
cli
push
and
dec
mov
fisttpll
pop
inc
jae
lea
lods
out
js
xchg
addr16
jecxz
add
aad
movhps
push
sub
xchg
xchg
sbb
cmp
add
xor
jno
js
jne
das
xor
out
pop
clc
ja
sbb
inc
push
in
in
int3
cli
test
sub
es
mov
sub
cwtl
fscale
xor
or
push
pop
idiv
cmc
mov
mov
mov
sbb
test
lea
and
in
inc
repz
popf
pushf
or
mov
call
pop
pop
sti
imul
arpl
dec
cld
popa
pop
aam
sbb
mov
pop
out
push
js
adc
sahf
loope
jns
or
aas
mov
enter
sbb
jnp
decb
pusha
jns
add
sbb
jl
jnp
scas
jno
lret
or
add
inc
ret
sarl
cmpb
mov
pop
lods
mov
shrb
in
testl
mov
jnp
nop
cmp
cmpsl
sarl
in
jle
jl
leave
std
sbb
loope
decb
in
mov
mov
jle
js
test
iret
aam
mov
insb
cmp
cmp
pop
jnp
in
lods
inc
push
das
adc
xor
cld
push
ljmp
fbstp
enter
dec
ret
jp
dec
mov
imul
push
cmp
push
or
aad
addr16
bound
fs
mov
mov
xor
in
negl
je
adc
aaa
pop
cli
iret
mov
inc
aam
inc
es
mov
sbb
or
je
mov
outsl
mov
jbe
push
dec
pop
adc
ret
xor
inc
xor
xchg
in
sbb
pushf
je
mov
insl
mov
test
das
cld
repz
jmp
jne
ljmp
pop
xor
addr16
imul
popf
add
xchg
mov
repz
lret
mov
std
mov
lcall
call
aam
sub
mov
fs
pop
jge
dec
popa
push
cmp
in
mov
sbb
ds
jmp
mov
lea
jp
xchg
sahf
pop
les
cmp
inc
shl
outsl
pop
push
rcl
sub
test
sub
jb
xchg
push
or
repz
imul
pop
rcrl
movsl
rclb
jp
loope
js
inc
fld
movsb
dec
bound
daa
hlt
mov
idivb
adc
push
push
inc
js
in
addb
and
mov
in
adcl
popf
jl
xchg
and
jle
rcrb
push
icebp
cmp
lea
cmp
mov
dec
adc
mov
jne
sub
sbb
fwait
inc
mov
mov
pusha
imul
pop
fnstcw
mov
inc
fildll
xchg
test
mov
xchg
test
test
pop
ficoml
jns,pn
jne
movsl
rol
sbb
mov
mov
push
das
fimuls
add
adc
xor
pop
int
aad
adc
mov
mov
cmpsl
sbb
inc
xor
es
or
jmp
shl
jns
out
push
xchg
clc
roll
jae
lock
lods
out
pusha
and
push
lcall
sbb
cmp
loopne
jge
mov
ss
sbb
cld
and
inc
fwait
and
mov
fistps
lcall
cmc
andl
jmp
jle
add
hlt
jb
xchg
scas
and
stos
xor
ss
mov
mov
lods
mov
pop
rcll
ljmp
push
dec
sub
test
rol
incl
stos
hlt
int
hlt
icebp
add
mov
jl
in
jno
cmp
xor
std
or
mov
ljmp
enter
outsb
lock
cld
push
or
jl
cld
cmp
scas
inc
push
lret
pop
add
lock
xchg
testl
icebp
stc
ja
es
pop
cwtl
inc
pushf
xchg
movsb
mov
push
dec
lcall
adc
add
xchg
popl
cmpl
les
jns
in
es
imul
bound
out
push
insl
popf
fsts
movsl
pop
adc
xchg
jge
mov
fisubrs
dec
jo
xor
pushf
mov
rolb
rcrl
sarb
pop
movsb
push
inc
jnp
mov
inc
push
stc
ds
cmpsb
xchg
jne
cmpsb
sub
lods
dec
lret
inc
lret
inc
mov
loope
ret
cmp
mov
fs
nop
fsts
pop
leave
test
lcall
inc
and
pop
inc
inc
cmpsl
push
repnz
pop
test
cld
imul
inc
lock
sbb
xchg
xchg
add
dec
mov
and
test
nop
testb
xlat
nop
loopne
and
mov
stc
and
mov
stos
fstpt
xor
xorb
cmp
dec
cmpsb
test
enter
push
sbb
fs
mov
jle
stc
cld
aam
in
mov
fwait
iret
js
xchg
andl
xlat
sub
dec
mov
cmp
cmp
and
sarb
push
dec
xorl
outsl
in
pop
and
arpl
ror
lock
pop
int
or
testl
bound
repnz
fidivrs
movsb
shrb
push
xchg
cmp
repz
fnstsw
xchg
psubusw
out
pusha
jne
sbb
jl
dec
das
test
adc
in
nop
xor
adc
sub
das
cli
add
int3
push
ficoml
movsl
fildl
stos
enter
adc
cwtl
movsl
js
cmp
sbbl
lret
lahf
fbstp
or
jbe
cli
insb
lcall
and
sbb
xchg
jb
incb
sahf
sub
jb
and
cwtl
mov
pusha
loopne
jae
arpl
or
pop
outsb
push
cmc
test
test
fdivl
push
cmp
push
les
push
pop
xchg
inc
dec
dec
loope
int3
and
divb
pop
sahf
dec
stc
push
mov
std
es
outsb
mov
mov
ja
punpckldq
xor
pop
mov
adc
ds
jecxz
repnz
int
sbb
xchg
es
dec
dec
mov
adcb
jae
lret
xchg
pop
test
or
js
in
pmaxub
lods
fsubp
movsl
and
cs
fbld
add
mov
cmpsb
pop
inc
andl
scas
hlt
enter
mov
mov
jns
cmc
popa
psubsw
mov
je
mov
xchg
sti
adc
adc
cmp
insl
cwtl
jns
loopne
push
insl
dec
lret
in
outsb
jge
xchg
pop
sbbb
ss
push
insl
xchg
push
out
mov
push
dec
jo
jo
fldenv
add
or
cmp
gs
jb
xchg
mov
int3
sub
test
idivb
lods
sub
sub
mov
push
negl
push
mov
hlt
xor
dec
jno
in
aas
xor
repnz
rorb
xor
sub
lcall
shlb
pop
outsl
xor
cmp
mov
xor
es
mov
pop
out
sbb
mov
test
mov
dec
add
ljmp
mov
cmp
jl
dec
add
movsb
icebp
aas
pusha
adc
push
paddq
jnp
mov
sti
pushl
cmp
movsl
push
fists
addr16
popf
mov
xchg
sahf
push
xor
or
push
lds
test
mov
pop
adc
cmp
adc
shll
clc
mov
push
ficoms
out
fdivl
push
pop
cmp
dec
jnp
jp
mov
stc
ret
sbb
xchg
loope
add
xlat
sub
jp
push
xchg
xchg
ror
mov
jo
aad
pop
out
mov
hlt
dec
cmpsl
ret
sub
mov
cli
push
push
adc
scas
int
and
and
lea
add
rorb
push
leave
lds
mov
add
mov
pop
out
sbb
imul
jns
cmp
and
fisttps
jns
je
mov
out
cmp
daa
aaa
push
push
cld
imul
mov
mov
clc
sbb
cmpsl
iret
push
cmc
inc
add
xor
add
push
push
sbb
out
mov
push
cmp
push
adc
and
ljmp
mov
outsb
test
lret
sbb
inc
nop
imul
pop
cltd
cltd
xchg
lods
or
jno
ja
fcoms
mull
iret
scas
xchg
xor
imul
mov
push
push
aas
lret
out
adc
rcll
jp
fs
sahf
scas
xchg
and
mov
subb
mov
mov
dec
push
jae
jp
clc
adc
fsubr
mov
ds
std
test
jmp
es
scas
clc
int3
push
sub
loope
stos
mov
or
inc
loope
das
inc
mov
mov
pop
lretw
xlat
movsl
shl
adc
sbb
add
call
dec
out
add
jmp
push
roll
ja
shrb
dec
dec
inc
inc
push
lods
pop
adc
rcrb
pop
sbb
pushf
cwtl
sub
in
inc
push
pop
pop
adc
xor
inc
imul
lahf
iret
xchg
sahf
out
xor
dec
pop
pop
ljmp
mov
imul
dec
mov
cmp
fidivrl
cmpsl
sub
int3
pop
or
subb
insb
lea
roll
int3
xor
fists
jl,pt
in
inc
fwait
sub
dec
fstps
dec
xor
mov
frstor
scas
inc
pop
scas
les
xorb
sarb
sbb
pushf
mov
test
arpl
sub
icebp
stos
data16
movsb
cmp
stc
sbb
mov
mov
mov
mov
sub
push
lret
fwait
sbb
stc
in
pop
in
cmp
mov
fdivrs
jecxz
push
jge
stos
sbb
pushf
mov
imul
ficoml
ror
gs
cltd
pop
scas
push
pop
sub
mov
cmpsb
pop
xchg
dec
cmpl
rorb
jo
dec
jle
pop
sub
xchg
pop
jmp
xor
mov
or
cwtl
loop
ja
daa
pop
repz
add
gs
sbb
xor
push
jge
stos
mov
stos
push
fsubrs
fidivs
scas
fisubrl
mov
jmp
das
sbb
cmp
seto
mov
in
rorl
lods
fists
pop
mov
and
testl
mov
pop
mov
les
in
or
fisubl
mov
test
pop
jp
inc
cwtl
es
mov
aaa
insl
mov
sub
pop
xlat
add
out
inc
cs
outsb
fsubs
xor
jg
inc
xchg
out
push
cli
int3
fidivrl
jl
repnz
jge
cli
cmp
adc
jae
push
jne
xchg
dec
movsb
and
push
push
sbb
repnz
mov
mov
test
pusha
sbb
lahf
adc
mov
mov
cltd
dec
mov
cltd
jge
add
ljmp
test
shrl
in
cmp
and
js
cmp
sbb
sub
cld
inc
movsb
jb
pop
shrl
add
sahf
sbb
cmpsb
orl
push
xor
adc
xor
jl
pop
add
rolb
mov
subl
pop
add
fimull
jmp
lahf
ds
xchg
out
ds
mov
or
hlt
in
dec
adc
in
int
fcmovnu
push
stos
sub
mov
cld
sbb
jae
arpl
or
in
sbb
loopne
cmc
xlat
mov
cltd
inc
push
pop
std
lret
jle
insb
mov
rorb
sar
jge
pop
push
int
push
pop
pop
jge
mov
jne
shl
push
inc
mov
fsts
loope
outsl
cmp
mov
icebp
adc
push
jecxz
test
xor
mov
dec
pop
inc
sbb
int
ret
sti
jne
pop
pop
sahf
xchg
jo
sbb
adc
add
push
stos
pop
mov
cmp
cmp
mov
addr16
push
sti
mov
pop
pop
xor
xchg
add
mov
lcall
and
lock
dec
aas
cmp
mov
arpl
inc
push
jp
adc
pop
inc
inc
scas
or
imul
addr16
punpcklwd
sti
je
fwait
lods
xchg
mov
or
mov
mov
mov
rcr
pop
gs
hlt
xchg
negl
arpl
insb
je
push
inc
jnp
ja
jmp
rdtsc
mov
push
cmc
cld
test
push
dec
lahf
pop
add
mov
or
enter
sbb
ficomps
call
call
inc
mov
dec
jecxz
gs
inc
mov
cs
jecxz
out
cmp
jmp
xor
cmpsl
push
ror
out
jecxz
jl
xor
out
call
inc
push
fwait
clc
push
shll
in
push
jbe
outsb
gs
insb
gs
mov
or
add
loope
cmp
or
es
fistpl
mov
jns
pop
fisubl
out
push
inc
ljmp
push
adc
test
sbb
arpl
adc
movzbl
dec
sub
push
push
in
popf
xor
dec
lcall
adc
jno
nop
cld
popf
push
pop
jecxz
add
xor
xchg
jg
push
lahf
pop
in
or
add
and
push
call
mov
jns
xor
ret
xchg
ds
xchg
out
je
jns
mov
mov
lock
lahf
out
xor
das
mulb
xchg
ds
nop
lret
adc
and
mov
lea
call
cmp
lods
rcrb
jmp
jge
push
xchg
xlat
outsl
xor
cs
out
push
mov
movsl
pop
fnstenv
pop
and
rclb
js
mov
xor
mov
dec
mov
inc
mov
mov
mov
sub
mov
xorl
jbe
test
adc
lods
mov
push
push
call
push
inc
into
les
jge
push
sbb
call
jge
and
mov
ret
popf
sti
xchg
lock
cmpsl
dec
hlt
ret
inc
add
pop
inc
xchg
inc
sbb
mov
push
mull
add
or
xor
jo
push
int3
or
lds
int3
andl
dec
add
xor
or
sbb
gs
jg
cs
jmp
mov
jmp
pop
and
mov
lods
adc
or
sar
es
mov
subl
ss
js
inc
add
hlt
enter
popf
xor
pop
mov
sbb
xchg
fstpl
mov
mov
mov
dec
dec
dec
ret
cmp
mov
sub
pop
aaa
xchg
mov
sub
mov
cmp
pop
mov
dec
cld
scas
inc
fs
xor
push
xchg
adc
xchg
or
sbb
mov
cmpsb
add
sbb
xor
paddsb
insb
push
mov
xchg
outsb
mov
jmp
sub
mov
cmp
adc
scas
arpl
mov
aam
lcall
addl
std
popf
clc
call
mov
leave
es
add
popa
and
movsl
sub
hlt
jmp
adc
lock
xlat
and
xor
dec
lahf
ficoms
and
sti
and
xor
sarl
popf
mov
ljmp
test
sub
stc
call
mov
fs
in
mov
and
jbe
xchg
and
mov
incl
adc
mov
jg
imul
rol
jmp
test
call
ss
xor
dec
push
mov
push
xor
movsl
xor
hlt
loopne
xchg
or
adc
loopne
cmp
dec
fisubl
pop
push
sub
sarb
mov
in
lock
inc
scas
add
outsb
lods
arpl
aad
movsb
aad
out
add
pop
mov
dec
xlat
stc
xchg
lret
push
div
dec
mov
mov
inc
mov
addr16
dec
xchg
add
mov
cltd
test
pop
fistps
lahf
mov
test
stos
jg
and
sub
scas
ret
scas
fcoml
lods
xchg
xchg
ficoms
mov
jecxz
bound
bound
push
lock
xchg
xor
std
xchg
jnp
test
add
jo
mov
aam
in
pop
jns
push
inc
pop
xchg
test
xlat
mulb
pop
dec
pusha
cmpsb
xlat
and
jmp
ficompl
push
icebp
aad
or
cli
aam
aas
imul
sub
jns
rcrl
or
fdivs
cltd
and
test
inc
jbe
pop
cmovb
loopne
out
push
jne
ds
pop
mov
mov
dec
adc
int
test
jle
lds
cmp
sbb
ret
dec
out
add
xor
push
cmp
hlt
dec
lahf
cltd
push
or
or
xor
mov
test
mov
mov
xor
je
pushf
push
xchg
adc
sarl
xor
and
ret
mov
int
sbb
hlt
gs
jne
cli
js
aas
adc
push
pop
sub
mov
mov
dec
jg
test
sbb
push
aad
add
jb
addr16
jne
mov
mov
dec
pop
ret
add
fwait
pop
xlat
push
hlt
cmp
imul
fwait
sub
inc
out
mov
scas
and
xchg
js
pushf
push
pop
mov
xchg
push
mov
sahf
inc
push
adc
iret
sar
loopne
mov
jg
cmpsb
jecxz
mov
aad
imul
push
jle
cmc
test
mov
lahf
xchg
imul
jne
dec
in
cli
in
dec
add
jno
insl
sub
sbb
lods
arpl
or
addr16
xchg
daa
mov
roll
mov
leave
fists
pop
sub
dec
lock
cld
dec
mov
push
test
pop
in
adc
bound
sbb
in
or
icebp
mov
pusha
insl
jp
popa
jmp
mov
add
fs
xchg
mov
enter
stc
psubsw
mov
jg
jae
or
push
or
ss
ficompl
push
xchg
call
inc
sbb
jb
in
jl
sbb
repnz
idiv
or
mov
adc
sub
fnsave
or
lret
add
fidivl
inc
pop
lock
lcall
adc
gs
sahf
jle
fisubs
mov
ret
inc
testb
push
sub
outsl
fs
movsb
call
inc
int3
fldt
fcoml
xchg
notb
fcmovnu
into
sahf
iret
dec
or
rol
mov
orl
cltd
dec
lcall
fwait
pop
das
not
ja
sub
addr16
mov
aaa
sbb
sarl
mov
lea
mov
clc
jno
enter
repnz
xor
rolb
mov
in
popf
and
jae
mov
mov
add
inc
cmpsl
push
push
fs
pop
arpl
cld
movups
sbb
mov
dec
shll
jmp
mov
nop
pop
inc
insl
cld
imul
mov
aaa
ljmp
push
divb
cmp
adc
xchg
dec
cwtl
adc
sub
cmp
push
push
fnstenv
jmp
mov
inc
cs
stos
stos
and
jge
add
dec
push
icebp
loopne
jno
mov
scas
pop
mov
push
or
mov
lds
mov
pusha
push
push
dec
lahf
lods
std
ret
mov
jns
int
and
in
xor
adc
popa
xchg
sahf
add
pop
pop
mov
inc
xchg
lret
aas
ja
in
pop
arpl
and
mov
dec
push
pop
mov
adc
notl
decl
out
mov
into
fadds
push
push
push
dec
clc
frstor
mov
and
fisubs
aam
jp
xchg
test
mov
mov
or
test
jge
and
sub
push
mov
js
enter
arpl
pop
mov
fcos
popa
dec
jl
push
inc
iret
dec
push
pop
shll
and
dec
pop
fidivrl
fcoms
jg
mov
mov
out
int
das
aad
out
jne
aaa
iret
pop
sub
pop
xchg
xchg
bswap
dec
outsl
mov
push
nop
clc
ds
sub
aaa
sub
bnd
mov
mov
ss
clc
pop
xor
cmp
lods
and
and
add
and
mov
loope
fcmovnu
mov
outsb
push
add
cs
pop
test
add
inc
test
sbb
inc
rcrb
pushf
add
adcb
fdivrs
or
fisttpl
dec
jne
inc
jg
dec
out
out
fs
pop
roll
popf
mov
cwtl
stc
iret
outsb
movsb
orb
jmp
mov
aad
fs
and
lret
outsl
jo
int
xor
xchg
loop
gs
and
mov
and
scas
fdivs
pusha
repnz
jle
cld
outsl
movsl
fldcw
test
pop
dec
inc
pop
std
or
mov
cmovs
pop
cmp
fxch
loope
out
push
shlb
lret
fdivrs
adc
push
jp
xchg
dec
lock
xchg
movsb
mov
shll
push
xchg
cmp
cwtl
mov
mov
add
adc
repz
and
sahf
xor
inc
xor
movsb
lret
add
fdivrs
cmp
mov
stos
mov
inc
dec
push
lcall
lds
ljmp
inc
lcall
mov
push
movsl
dec
and
push
jge
add
lds
dec
es
pop
cmp
mov
add
out
mov
cmp
inc
push
andl
sub
pop
call
adc
imul
pop
push
sbb
repnz
sbb
ljmp
xchg
xchg
out
cltd
adc
jge
ss
pop
dec
cmp
insl
xchg
mov
gs
pop
lea
cli
push
mov
stc
and
mov
mov
outsb
fs
xor
mov
fnstsw
lahf
mov
adc
out
sbb
adc
mov
mov
insl
sub
mov
dec
les
in
sbb
pop
xor
roll
test
mov
xchg
or
and
cs
outsb
shlb
in
rol
fiadds
adc
cmp
inc
jbe
add
mov
dec
cmp
cs
je
and
and
out
and
lds
xchg
shll
mov
jmp
mov
jl
mov
jmp
pop
jne
and
adc
xor
ja
cltd
and
cli
mov
dec
bound
adc
dec
clc
in
push
xor
lret
ljmp
shlb
push
rcll
sti
add
or
adcb
sbb
mov
sti
mov
jp
fldt
jmp
out
enter
int
iret
xor
xchg
mov
lock
daa
out
mov
push
mov
jp
negl
mov
mov
sbb
pop
xor
mov
imul
mov
inc
arpl
mov
xchg
ds
idiv
cltd
mov
movsb
add
lea
es
xchg
popf
xor
push
into
jmp
mov
jb
cmp
push
push
fidivs
pushf
in
adc
push
inc
call
xchg
or
sahf
push
mov
icebp
leave
sbbl
mov
test
dec
outsl
push
rclb
push
cli
and
inc
sbb
mov
xor
xor
pop
adc
test
jg
inc
sbb
inc
or
xchg
notl
gs
jns
and
push
inc
xchg
popl
cld
sub
in
inc
iret
fxch
jge
mov
cmp
dec
mov
mov
fidivrs
adc
cltd
cmp
sti
jg
test
and
cwtl
imul
nop
aaa
lods
inc
jp
repz
xor
mov
mov
std
mov
cltd
lcall
mov
sub
jecxz
jg
popa
push
test
or
inc
out
inc
xchg
arpl
loope
push
jne
ljmp
mov
sbb
xlat
jp
cmp
lret
mov
inc
xor
and
shl
jo
dec
adc
inc
xchg
loopne
mov
push
sub
in
mov
movsl
mov
inc
loop
sbb
adc
xchg
mov
rol
xchg
sbb
shrl
cmpsb
or
ret
mov
test
cmc
jae
jb
mov
imul
test
xor
loope
mov
push
ds
or
dec
fiaddl
cmp
test
gs
inc
subb
and
mov
or
in
inc
inc
ret
nop
lret
push
fdivp
stos
lret
imul
icebp
xor
std
mov
in
jo
mov
pop
loopne
mov
jmp
add
mov
dec
or
adc
subb
pop
push
lods
add
push
sub
idivb
call
loopne
inc
popf
adc
sbb
lock
stos
cmp
add
add
test
xchg
adc
dec
aad
sbb
and
push
stos
sbb
sahf
and
pop
fwait
sub
ret
dec
mov
jbe
outsb
icebp
aam
mov
in
adc
jp
stos
sbbb
in
cs
inc
inc
sub
int3
xchg
fidivrl
sbb
mov
out
jmp
xchg
lods
lods
lahf
sbb
daa
mov
mov
ja
and
mov
rorl
ret
ret
jb
bnd
ljmp
xchg
jl
clc
sbb
or
jmp
test
dec
inc
push
jg
ljmp
insl
dec
adc
imul
stos
xchg
daa
jno
xchg
imul
xlat
ds
test
adc
addb
ljmp
addl
in
push
lahf
or
xchg
cmp
dec
js
pusha
adc
and
leave
sbb
loope
inc
mov
add
adc
add
mov
mov
outsl
adc
mov
sbb
xchg
jno
out
pop
mov
ret
mov
ss
cwtl
scas
mov
lods
leave
lods
push
inc
xor
shrb
sbb
sbb
xchg
call
dec
orb
or
daa
and
jecxz
fs
jmp
clc
dec
movsl
pop
push
jno
xor
xchg
mov
lods
xlat
cmp
or
hlt
push
jecxz
out
jae
stos
jmp
imull
lods
xchg
ljmp
shrl
loope
subb
es
or
pop
je
push
insb
xchg
nop
push
test
dec
xlat
fstps
xchg
adcb
jne
sbb
inc
push
out
and
mov
mov
cmpsb
inc
sub
shr
pushf
lods
mov
fs
mov
cwtl
dec
jno
mov
pop
xchg
leave
cmp
clc
dec
xor
aas
outsb
leave
ret
insb
or
mov
dec
xor
gs
lock
ret
push
and
loopne
jnp
in
xchg
sbb
jbe
sub
xchg
jle
in
out
cld
stc
pop
pop
jne
out
mov
mov
add
sbb
lock
rorb
andl
cmp
xcrypt-cbc
cmpsl
xlat
repnz
movsb
and
repnz
insl
or
incl
push
dec
sbb
ficomps
sub
and
sahf
adcl
gs
sbb
cmc
dec
add
fldcw
mov
dec
sbb
and
dec
xchg
jns
pop
loopne
lock
scas
stos
or
mov
stos
test
xor
dec
mov
cltd
stos
fistpll
out
lock
mov
in
aaa
jmp
push
pusha
push
mov
push
nop
jge
imul
outsl
xchg
cmp
pop
mov
add
jo
pop
outsb
outsb
jnp
push
inc
shlb
imul
lods
xchg
not
pop
xor
mov
stos
pop
cmp
mov
cmp
movsb
xor
sub
ljmp
mov
inc
lahf
push
cmc
sti
iret
sbb
inc
sub
xchg
jns
xchg
outsb
movsl
lods
fstl
jae
clc
call
sub
scas
and
xor
bound
loop
shll
ss
sbbb
outsb
xchg
xor
xchg
and
mov
arpl
xor
fwait
out
xor
dec
xchg
push
sub
mov
mov
and
and
out
pop
mov
xchg
adc
int
mov
add
mov
out
imul
pop
aaa
jmp
fucomp
fcmove
and
in
push
loope
fmull
dec
aaa
movsl
shlb
int3
out
inc
xchg
aaa
dec
sub
fwait
movsb
xor
cs
je
orl
aam
ljmp
icebp
cmp
cmc
fs
cmpsl
lea
lds
ret
repnz
clc
fcomps
inc
mov
ds
adc
out
hlt
push
int3
mov
mov
das
les
xchg
scas
mov
test
inc
ja
pop
aas
nop
sub
mov
xor
enter
jo
xchg
pop
xor
xlat
iret
cmp
sbb
lock
mov
push
mov
fistpl
imul
cmpsl
adc
sub
mov
pop
inc
imul
sbb
cld
fisttpl
jle
imul
out
scas
pop
pop
lods
xchg
aas
adc
mov
stc
mov
popf
cmp
mov
or
xlat
cli
cmp
iret
shlb
divb
lods
mov
mov
pop
jne
xchg
imul
adc
inc
pop
push
movsb
repnz
leave
mov
and
test
cmp
fimuls
pushl
jmp
push
adc
stos
add
sbb
ds
hlt
add
int3
mov
cs
jle
push
stc
inc
sub
cmc
in
daa
int3
xchg
lcall
test
scas
sti
cmp
jb
jnp
push
faddl
xlat
cmp
test
pop
fsubs
xor
push
xchg
popa
xor
pop
xor
push
out
or
jno
into
mov
sbb
mov
push
add
mov
jmp
xchg
mov
cltd
out
scas
pop
sbb
pop
mov
jae
popf
daa
ljmp
inc
int
fdivrs
add
jg
leave
fildl
adc
inc
and
mov
stc
xchg
sub
iret
rcl
or
mov
add
dec
mov
lock
pop
test
into
mov
mov
inc
repnz
movsl
pop
push
movsb
or
call
jno
pop
enter
push
iret
dec
enter
cmp
mov
cmp
or
pop
pop
xor
ret
cwtl
sti
jmp
addl
mov
pusha
ror
jecxz
lock
outsb
mov
pop
pop
fsubs
rcrl
push
cmp
sbb
cmp
push
loope
mov
sub
mov
mov
push
pop
inc
in
aam
mov
inc
xor
xchg
mov
mov
loope,pt
fwait
cmc
es
pusha
ret
and
jp
lea
aad
les
mov
mov
test
xlat
mov
xchg
in
andl
push
cmpsl
mov
jmp
loop
xchg
out
jecxz
push
or
dec
mov
sahf
fdivl
aad
xchg
mov
mov
jge
shll
adc
pop
and
fsubrl
add
inc
cmp
out
repnz
cmp
roll
sbb
js
mov
ljmp
xchg
xchg
popa
pop
xchg
xchg
and
cld
push
rorb
sbb
adc
cld
arpl
xchg
sahf
in
movsl
addr16
push
jb
adc
ds
pushf
or
jmp
xchg
fmuls
stc
add
dec
mov
mov
mov
rorb
pop
roll
lock
in
mov
pop
jecxz
data16
ja
cltd
ljmp
iret
fwait
mov
dec
clc
rorl
fmull
loopne
arpl
loopne
fs
cmp
pop
mov
outsl
add
push
in
aad
in
sbb
inc
popa
lods
div
jg
mov
inc
loope
jg
sahf
push
cld
mov
sahf
clc
pushf
or
mov
xlat
mov
scas
sub
into
xor
push
std
inc
xchg
cmp
aam
inc
dec
std
mov
mov
jp
adc
inc
push
out
inc
push
xor
push
jae
test
inc
inc
mov
inc
mov
dec
dec
mov
and
stc
mov
movsb
push
mov
xchg
test
ja
pop
mov
popa
and
cmp
cmp
dec
fnsave
mov
loopne
data16
out
pusha
mov
mov
ret
cmp
rcll
nop
into
push
das
loope
mov
fsubl
ret
fcompl
push
sub
out
test
mov
sbb
cmpsb
imul
lea
cmp
lahf
mov
jecxz
repnz
in
xlat
imul
mov
int
push
jo
push
hlt
mov
pop
stos
imul
out
pop
mov
leave
loopne
push
cmp
js
or
jbe
fcmovnb
cwtl
je
cmp
jae
in
mov
arpl
or
arpl
mov
inc
mov
fidivl
xchg
cmp
cwtl
repz
lea
pop
xchg
adc
loop
jno,pn
and
out
mov
imul
mov
dec
je
pop
jmp
sbb
sahf
ret
cs
lahf
dec
test
sbb
pusha
mov
push
ds
test
sbb
xchg
adc
sub
daa
int3
xchg
xchg
sub
fcmovnbe
push
xchg
scas
pop
dec
xlat
int3
jb
decl
dec
pop
add
out
pop
inc
cmp
mov
pop
sub
ficoms
lahf
mov
jl
jl
push
mov
mov
ja
cli
test
inc
adc
sahf
ja
jle
in
shll
iret
or
and
mov
sbb
xor
lock
add
cmc
sub
and
sti
in
adc
mov
repnz
inc
pushf
jno
outsl
xchg
in
sti
sub
push
dec
dec
enter
scas
popf
mov
sbb
stos
ds
cmpsl
test
popf
shlb
loopne
inc
mov
iret
dec
and
jne
adc
int
mov
inc
fcompl
jecxz
xchg
pop
adc
sahf
ja
xorl
inc
mov
cmp
dec
mov
push
pop
pop
mov
xor
or
in
jge
aam
mov
out
jl
inc
xchg
mov
fiaddl
test
pop
mov
icebp
dec
xor
xchg
jnp
fidivrl
mov
lret
dec
into
inc
test
test
xor
loop
fucomi
push
dec
push
jl
sub
dec
mov
jmp
jae
pop
out
lods
mov
popl
sbb
mov
mov
xchg
lods
mov
outsl
dec
pushf
push
sbb
add
cmp
pop
xor
leave
addb
xorb
pop
mov
test
xor
sti
das
sbb
sarl
xor
xor
dec
cmp
or
in
jno
dec
jg
dec
xchg
ret
in
fdivl
dec
jnp
adc
inc
sub
dec
and
add
pop
mov
inc
pop
push
push
mov
lods
fsubrp
inc
xchg
mov
dec
xchg
sbb
or
sbb
lods
lret
jl
pop
inc
sti
rcrb
int3
add
mov
rcll
mov
iret
aas
xchg
fwait
pop
inc
enter
add
sub
rorl
popf
xchg
dec
mov
lret
insl
les
fidivrs
xchg
mov
push
inc
xchg
mov
shrb
jmp
loopne
push
push
adc
jp
and
cmp
mov
jb
repz
xchg
pop
mov
filds
andps
int
xchg
lock
stos
or
jle
aas
ljmp
dec
add
jecxz
and
movsb
xorb
xchg
stos
fildl
mov
fwait
test
and
jbe
sarl
repnz
ret
out
fcmovnu
call
cmp
mov
dec
sbb
adc
sub
inc
xor
lock
fldz
lods
cmp
lods
sbb
push
xchg
cmpsb
adc
mov
fimuls
out
cli
pop
aad
testl
adc
sub
adc
jnp
pop
lcall
mov
xchg
push
mov
fwait
enter
cmp
shrb
mov
adc
pop
imul
push
sub
jle
sti
movsl
ja
dec
loopne
cmp
xchg
mov
lds
cli
daa
inc
insl
movsb
adc
sahf
push
cmp
dec
inc
inc
pop
cli
ljmp
in
les
mov
or
mov
cld
cmp
mov
mov
or
daa
test
shrb
scas
mov
push
adc
xchg
cmp
push
pcmpeqd
push
jmp
pop
xor
push
inc
mov
std
xlat
pop
mov
sub
lahf
scas
mov
int3
mov
dec
idivb
dec
mov
into
sarb
jp,pn
mov
cmc
and
mov
or
push
cmp
jns
add
ret
mov
or
push
jecxz
push
int
sti
adc
insb
push
dec
cmp
push
pop
outsb
nop
push
pop
leave
ljmp
add
lret
in
leave
mov
mov
popf
mov
in
push
or
jae
mov
cmpsl
jle
stos
lcall
and
mov
dec
jne
loope
decl
push
test
xor
jge
inc
decl
cmp
ss
mov
imul
add
insb
dec
lret
pop
jge
jbe
inc
in
dec
push
mov
adc
ficompl
push
mov
ljmp
mov
lods
shll
dec
in
out
jne
jecxz
lods
jge
sub
lods
sbb
sbb
cli
pop
popf
xor
jo
in
fcoms
lock
inc
popa
xor
jb
aas
sarl
scas
std
jb
and
sbb
or
cmp
pop
pop
xchg
call
daa
enter
repnz
sub
test
jo
xor
in
out
mov
sub
fiadds
fs
push
aas
sarl
push
aad
push
xor
cltd
repnz
icebp
xchg
clc
notb
xchg
ja
scas
insl
dec
and
or
mov
out
std
imulb
jmp
pop
jmp
call
mov
xor
out
inc
in
jbe
hlt
imul
in
adc
hlt
cld
add
push
xchg
xchg
ss
mov
enter
jge
cmp
cmp
or
mov
inc
push
dec
shl
fidivrl
test
push
stos
or
loopne
xor
dec
iret
daa
clc
stc
xlat
xor
lock
lods
idiv
addr16
das
imul
or
inc
divb
insl
cld
out
or
mov
push
and
mov
mov
shrl
jnp,pn
sarb
mov
lods
add
lds
or
cmp
loopne
roll
aad
es
lahf
push
popf
xor
xchg
mov
outsb
shrb
out
mov
gs
and
fimuls
and
outsl
push
fistps
imul
cmp
fs
loop
mov
rcrb
fisubl
loop
mov
frstor
negl
mov
test
mov
jns
insb
int
push
outsb
dec
add
arpl
mov
add
dec
sub
cmp
loopne
rsm
imul
js
dec
fstpt
xchg
in
ret
sub
insb
imul
and
mov
lock
jns
stc
mov
sub
mov
cmp
int
fstps
mov
flds
ljmp
push
mov
sub
sti
dec
xchg
dec
mov
dec
insb
bound
inc
mov
xchg
push
test
adc
insb
aaa
pop
shll
push
adc
jle
cli
mov
ljmp
xchg
into
and
int
xchg
fwait
decl
outsl
xor
or
add
repnz
xchg
mov
cmp
dec
cmpsl
shlb
jg
cmp
movnti
insb
sub
sbb
jns
sub
shlb
lret
fucomip
pop
je
clc
lret
xor
mov
scas
mov
inc
mov
xchg
mov
sub
xor
sbb
lock
dec
dec
stos
adc
aam
adc
cmp
jno
jo
cmp
adc
popa
outsl
decl
xor
mov
outsl
inc
xor
lahf
adc
xlat
ja
jns
lahf
xchg
xor
jge
and
xor
inc
sub
fistl
dec
roll
sbb
sub
inc
jge
inc
lods
inc
dec
and
adc
jnp
imul
mov
add
dec
out
jg
sbb
jb
adc
adc
or
jne
inc
inc
leave
leave
sbb
fbld
repz
dec
in
stc
lret
pop
aad
adc
mov
jbe
icebp
pushf
fidivl
ja,pn
fisubrs
xor
xchg
imul
xor
enter
test
jle
nop
jo
xchg
mov
test
mov
addb
push
clc
test
cmp
pop
dec
cmp
sbb
sub
aas
push
mov
pop
cmp
scas
xchg
mov
jl
add
mov
xchg
leave
addr16
idivb
pop
call
and
stos
ja
out
inc
fsub
lahf
imulb
jecxz
nop
loopne
aam
out
add
mov
iret
jg
sbb
cmpsb
cwtl
nop
in
sarb
mov
out
and
and
scas
sahf
sbb
lcall
or
dec
mov
mov
std
xor
push
or
andb
out
mov
adc
xchg
mov
mov
xchg
jp
nop
sbbl
stos
add
jae
shrb
gs
rcl
ss
inc
mov
add
movsl
aam
dec
mov
pop
sbb
insb
shrl
jae
cmp
fisttps
mov
mov
les
out
mov
divb
sub
jp
pop
fbstp
cs
rorl
xchg
fnstsw
in
movsl
rclb
xor
xchg
xor
cmp
in
add
lods
test
or
outsb
lahf
popf
fcomip
inc
dec
jg
xor
sarl
mov
ljmp
dec
mov
jns
add
mov
loope
jns
out
add
mov
cwtl
mov
arpl
xor
mov
adc
or
push
or
sub
sti
in
jl
enter
mov
in
test
xor
repnz
setg
mov
aas
jno
fsubr
inc
aam
pop
and
or
pop
mov
fsubp
xor
push
jle
adc
mov
bound
jb,pn
xor
sbb
frstor
pop
mov
bound
push
loope
xchg
sbb
jge
jb
dec
daa
fwait
sbb
mov
roll
imul
daa
sub
in
inc
ss
leave
sbb
aaa
icebp
mov
nop
clc
lds
push
sub
adc
std
lret
pop
xchg
xor
fsubl
movsl
imul
bound
iret
add
xchg
pushf
cmc
test
jecxz
adc
aaa
into
lahf
xchg
xor
popf
xor
rclb
sbb
sbbl
test
add
in
and
popa
pop
out
push
sub
rclb
fistl
cmp
cmp
mov
fucomi
dec
mov
outsl
cmp
lods
fidivl
aas
stos
pop
sub
sbb
push
std
cltd
sbb
test
enter
cmp
lret
js
mov
adc
add
ret
and
daa
and
push
test
inc
sti
imul
aaa
test
pop
cmpsb
fisubrs
adc
loop
fsub
mov
in
mov
sub
ficompl
dec
lahf
fcmovb
sub
pop
ss
adc
lret
mov
out
aad
pop
cmp
out
jl
cwtl
mov
and
in
and
stc
test
movsl
cld
sub
jle
insb
leave
cmp
push
in
pop
jae
mov
shrb
scas
mov
std
or
into
xor
fs
dec
in
int
mov
jl
jmp
xor
addr16
pushf
add
aad
inc
cld
testl
outsl
jae
aas
jo
sub
gs
out
repnz
xchg
inc
stos
mov
cwtl
push
push
loopne
xchg
add
inc
inc
mull
push
mov
iret
inc
out
mov
test
sti
mov
sbb
cmp
cwtl
clc
fidivs
lea
filds
cmpsl
and
mov
pop
adc
out
movsl
dec
push
hlt
jne
lds
jmp
popf
push
xor
dec
cmpsb
xor
mov
out
xchg
push
lods
mov
mov
sub
mov
mov
xchg
sbb
or
mov
lcall
jge
adc
jo
not
repz
shlb
mov
sarl
fwait
inc
mov
jmp
mov
sub
xchg
shll
jecxz
arpl
repz
push
or
jmp
add
sti
call
sahf
shll
in
aas
dec
jl
mov
mov
pop
push
test
lock
ljmp
and
xor
paddd
xchg
cmp
xchg
jns
in
mov
je
lret
adc
stos
pop
out
fldt
mov
cmp
push
dec
jg
addr16
and
add
in
stos
sbb
mov
pusha
pushf
in
mov
cmp
movsl
outsb
mov
call
lea
jne
push
in
in
jae
fwait
mov
dec
adc
xchg
xchg
add
mov
add
mov
mov
loopne
cli
movsb
jl
cli
fistpll
or
add
fcmovne
xchg
or
dec
cmpsl
mov
add
imul
or
fwait
mov
adc
inc
xchg
sub
mov
loopne
cmpsl
jmp
lret
mov
dec
cwtl
inc
js
mov
inc
sub
lcall
cli
jecxz
mov
adc
ljmp
dec
dec
or
mov
push
fistl
call
pop
pop
dec
lret
mov
rorb
push
jecxz
xor
ss
push
mov
outsl
pop
daa
push
ja
fildll
inc
jns
dec
push
mov
adc
imul
dec
insb
adc
in
pop
loop
lret
or
addb
rol
sbb
enter
in
dec
leave
or
cmp
jo
adc
or
test
stos
or
adc
cmpsl
push
or
xchg
mov
jge
icebp
mov
outsl
add
fs
ja
rorb
test
inc
testb
dec
stc
les
mov
cmp
sub
adc
dec
lods
stos
icebp
cmp
shr
jno
mov
movsl
mov
inc
push
cmp
mov
shrb
and
in
push
push
sbb
icebp
movsb
das
push
call
adcl
mov
addr16
test
out
out
loop
or
ja
xor
loopne
mov
lcall
in
pop
add
pop
pop
nop
fcoml
mov
pop
mov
or
insb
xchg
inc
dec
add
push
ja
cmc
test
adc
xor
sub
push
lods
inc
or
mov
xor
jbe
cwtl
loope
ja
fimull
cmp
push
icebp
ss
jnp
ds
xchg
or
int3
mov
mov
lods
jge
push
cmpsl
push
icebp
mov
pop
stos
push
mov
fbstp
ljmp
push
ds
data16
fstl
dec
jo
mov
dec
push
sbb
lea
jecxz
mov
in
arpl
cmp
adc
aad
sti
nop
stos
data16
repnz
push
addr16
mov
pop
mov
pop
mov
mov
scas
mov
lds
cmpl
stos
cwtl
adc
add
add
push
inc
enter
test
pusha
loope
mov
js
push
cmp
test
jnp
pop
or
sub
sahf
stos
popf
lret
cwtl
addr16
xchg
inc
bound
dec
mov
enter
ja
pop
cmp
mov
hlt
popf
push
jns
test
cwtl
xchg
mov
push
hlt
xchg
scas
rol
dec
test
or
pop
repnz
sbb
mov
dec
arpl
dec
adc
push
fwait
ja
push
push
jbe
rcrl
mov
mov
dec
fistpl
adcb
push
popf
cmpsb
and
data16
lcall
bnd
scas
aas
in
xor
lret
ljmp
push
jns
jbe
pushf
or
push
daa
sub
add
pushf
ds
dec
sbb
ljmp
mov
mov
jp
jle
aas
stc
out
or
adc
stos
mov
inc
mov
shl
pop
aaa
pop
sub
fildll
das
outsb
lret
nop
and
jl
xchg
inc
cmp
push
xor
rolb
ljmp
pop
pushf
lret
ret
mov
adc
inc
iret
movsb
add
aam
pop
dec
jecxz
sub
add
cwtl
jnp
push
inc
mov
cmp
ret
sarb
iret
or
cwtl
push
ffreep
mov
xchg
mov
and
in
jmp
or
stc
ret
cmc
cs
ss
jnp
mov
adc
jae
mov
xchg
sub
ficompl
jle
test
or
jno
in
daa
gs
jbe
inc
in
clc
xlat
sub
mov
dec
in
mov
test
out
aas
add
pop
aas
mov
pusha
xchg
movb
pusha
fisubs
cwtl
lods
repz
xchg
sub
inc
mov
dec
cld
sub
leave
sbb
xor
sub
out
jnp
ret
add
cmp
xor
das
jb
cld
scas
mov
mov
dec
aas
stos
push
pushf
xorb
call
scas
fdiv
repz
push
or
cwtl
xor
fstl
arpl
pop
jp,pt
push
xor
stc
enter
add
xor
mov
cmpsl
push
jno
mov
js
push
fsubs
je
push
push
rcrw
clc
mov
pusha
jne
pop
mov
xor
out
imul
jle
xchg
xchg
mov
pop
pop
jnp
mov
pop
jo
int3
stos
push
rcl
or
les
push
loopne
cltd
mov
loope
les
adc
repz
dec
adc
cli
push
and
mov
cmp
adc
dec
std
adc
lahf
or
insl
jo
mov
outsb
inc
shrb
mov
or
hlt
int3
sub
sbb
xor
push
je
and
test
addr16
rolb
sub
jg
repnz
insb
mov
cld
fiadds
mov
fs
mov
mov
sbb
xchg
push
stc
insb
addr16
enter
sbb
shrb
cmc
ljmp
jnp
push
cwtl
xor
inc
fists
addps
scas
outsb
out
cli
stos
mov
sub
mov
push
xor
pop
jbe
xchg
popa
xor
icebp
into
push
ficomps
iret
sbb
push
adc
mov
jp
push
pusha
adc
xchg
dec
and
jae
stc
sbb
or
jge
cld
ret
cmp
out
lret
add
push
out
and
mov
imul
lahf
xor
push
and
xchg
bound
mov
test
jmp
call
jl
adc
fadd
ljmp
je
cld
fs
clc
stc
movsb
test
push
int3
cmc
sub
leave
push
fisubrl
enter
imul
xchg
sbb
lret
and
sub
fs
icebp
inc
mov
bound
std
addr16
mov
es
sub
xor
outsl
push
add
addr16
fistpl
sub
mov
mov
dec
mov
adc
pop
into
cltd
hlt
xor
pusha
and
xor
xchg
sbb
mov
insb
dec
push
shr
xchg
dec
out
test
lahf
or
sub
or
jg
call
xchg
ds
sbb
mov
pop
add
iret
cmp
ljmp
cmp
pop
jp
jmp
cmp
pushf
lret
pop
jge
gs
pop
jmp
ljmp
dec
or
add
clc
out
adc
imul
xchg
dec
cmpl
outsl
lea
mov
adc
and
mov
out
inc
inc
adc
mov
sub
enter
xchg
mov
mov
mov
bound
adc
pop
mov
and
iret
add
jmp
inc
rorl
cmp
lock
jo
out
imul
cmp
mov
ret
mov
rorl
stos
mov
push
mov
into
andl
mov
push
sti
clc
cld
movswl
jae
jecxz
out
mov
and
jl
repnz
push
pop
add
jl
call
xor
inc
xor
adc
cmp
insb
dec
sbb
and
jmp
lea
sahf
push
sti
jle
mov
es
or
push
jp
xor
in
addr16
mov
pop
mov
or
mov
in
ss
loop
negb
mov
xchg
mov
mov
aas
push
push
xor
pop
add
inc
push
adc
int
lods
cmpsb
add
clc
sub
fidivl
fdivrl
fidivrl
mov
xchg
pop
cwtl
dec
pop
loopne
lods
push
inc
sbb
xchg
lods
mov
pop
shll
scas
movsl
add
imul
leave
push
clc
and
fmulp
stc
dec
xlat
push
mov
mov
ret
lret
lcall
out
mov
adc
sbb
adc
push
cld
outsb
inc
or
inc
mov
les
push
lods
jle
enter
out
test
cs
loop
cltd
and
leave
inc
xchg
fldl
dec
js
push
loop
ret
mov
and
shll
sbb
add
cs
fistpl
daa
mulb
fdivs
sbb
xchg
add
std
cmp
mov
ds
enter
shl
adc
push
shl
jns
and
pop
ficompl
or
setb
cmp
mov
xchg
pop
in
xlat
stos
mov
cmp
push
sbb
mov
jne
jp
stos
pop
ljmp
rorb
xchg
push
jo
out
not
or
pop
cwtl
jmp
jmp
push
xor
jb
add
clc
add
sub
push
pop
pop
int3
jle
dec
fldz
in
pop
bound
mov
pusha
adc
xchg
sbb
add
mov
xor
std
adc
pop
dec
jne
xor
cmp
cmpsl
add
cld
rolb
adc
push
aam
insb
xor
loope
cli
mov
sub
imul
les
stos
sub
push
shl
iret
mov
push
in
jl
adc
jmp
xchg
pop
push
imul
push
int3
sub
fadds
call
inc
mov
mov
jmp
std
sti
dec
das
in
and
push
jo
mov
xor
and
in
aad
stos
repz
cmp
xchg
and
movsl
inc
fsts
mov
sarb
or
jns
inc
fists
fstpl
cmp
stc
daa
insb
insb
pop
cs
pusha
lret
and
call
pusha
fnsave
xchg
roll
adc
pop
subb
lret
mov
xchg
xor
shlb
xchg
in
scas
out
inc
push
nop
mov
pop
push
cmpsb
inc
dec
jl
out
movsl
xor
xchg
sbb
sbb
es
test
ds
jl
and
jns
push
mov
add
pushf
and
dec
mov
negb
xchg
dec
mov
sahf
jo
mov
nop
scas
pushf
es
sbb
fwait
pop
or
stos
scas
scas
sbb
pushf
mov
pop
out
jno
testl
push
inc
adc
dec
lds
adc
imul
sbb
lret
cmp
stos
mov
push
data16
in
dec
inc
repz
mov
mov
sub
or
xor
cmpsb
cmc
lock
xor
dec
je
shll
bound
mov
cmpsl
sbb
xchg
inc
mov
adc
pop
lods
jno
and
insl
inc
or
call
xchg
fdiv
mov
sbb
inc
popa
imul
sahf
inc
mov
scas
shrb
xchg
js
js
loope
push
cmpsl
cwtl
imul
push
cmc
mov
and
inc
in
nop
rcll
jge
dec
test
and
sti
push
mov
xor
shrl
sbb
xchg
popf
cmc
inc
mov
in
lahf
pop
lcall
dec
mov
jecxz
dec
scas
xor
dec
andb
fcomi
add
xor
xchg
pop
lret
lret
mov
addr16
inc
pop
rcll
cmp
js
subb
fwait
xor
dec
jp
test
jle
sub
push
add
and
pop
icebp
xchg
mov
sbb
or
sbb
adc
pop
sbb
int3
mov
sbb
ficoml
sbb
or
sahf
bound
fstpl
shll
inc
pushf
fbld
dec
mov
lcall
mov
roll
pushw
nop
mov
lds
add
adc
mov
pop
jno
sbb
adc
ficompl
mov
dec
bound
jns
xchg
xor
ljmp
ja
dec
js
jp
mov
clc
pop
cmpsb
inc
adc
xchg
jmp
add
jnp
test
mov
xchg
ljmp
aam
jae
xor
push
test
xor
mov
dec
inc
and
in
sub
or
sub
adc
ljmp
xor
insl
push
stos
jo
jb
loope
clc
dec
enter
mov
lahf
mov
leave
icebp
jmp
inc
cld
or
or
ljmp
mov
fsubrl
push
pusha
add
mov
jmp
mov
inc
bound
mov
add
dec
sbb
adc
jns
std
lock
jnp
push
push
cwtl
add
push
xchg
xchg
fcmovnu
push
mov
mov
imul
dec
loopne
lods
test
adc
fisttpl
or
add
sub
push
or
add
sub
mov
jmp
scas
mov
mov
nop
insl
scas
push
rcrb
mov
add
push
xor
daa
sbb
in
aas
push
notb
push
cmpsl
rorb
pop
or
mov
rolb
mov
inc
sbb
mov
cmpsl
rorb
dec
cld
inc
clc
add
popf
outsl
clc
pop
clc
sub
dec
movsb
adc
xor
es
push
mov
mov
push
fdivl
cmp
mov
add
fmul
jmp
mov
fdivrs
sbb
mov
dec
in
xchg
pop
fwait
dec
dec
xlat
sub
test
pushf
roll
and
xor
cld
iret
sbb
or
adc
mov
cltd
sub
pop
cmpsl
xchg
mov
sahf
stc
fld
mov
xchg
and
jle
cmp
mov
and
ljmp
push
sbb
fwait
test
push
in
imul
cmc
and
hlt
insl
mov
gs
cmp
or
pop
dec
jle
in
aaa
add
popa
xor
jno
lods
addb
test
adc
rcl
mov
outsl
jb
imul
cmp
loope
inc
and
cmp
dec
mov
movsb
lea
mov
dec
xor
and
lahf
loope
lret
addb
dec
inc
rclb
adc
das
ds
add
mov
sbb
sbb
inc
in
lcall
loop
adc
push
inc
scas
out
inc
sbb
push
pop
je
or
jl
arpl
sbb
test
add
mov
stc
out
xchg
lret
notb
or
movhps
push
jo
arpl
enter
scas
mov
or
xchg
dec
sarl
add
cmpsl
fistps
sub
add
cmpsb
push
jbe
dec
inc
lods
mov
jb
mov
push
pusha
in
int3
repnz
jnp
popa
inc
mov
sbb
aam
repnz
jmp
incl
lock
xchg
movsb
lret
arpl
fimull
lcall
and
mov
mov
imul
aas
cmp
stos
ds
cmc
scas
js
aaa
divl
push
dec
cmp
sar
fldt
fsubrp
faddl
xchg
out
test
inc
loop
sbb
xor
idiv
mov
xchg
push
outsb
es
dec
or
xchg
rorl
jg
and
inc
fists
dec
xchg
int
cli
cs
jp
andl
or
jecxz
mov
pop
loope
mov
daa
scas
jge
aam
push
mov
lds
mov
lds
sub
jb
mov
popf
sub
cmp
jno
lds
pusha
push
dec
xor
inc
aam
out
and
int
mov
int
dec
add
jmp
push
cltd
lods
dec
in
jmp
xor
int3
push
dec
dec
inc
divl
pop
pop
fimuls
andb
dec
jecxz
aad
enter
sbb
mov
dec
add
adc
cmp
inc
jb
nop
dec
cs
mov
inc
jnp
cs
mov
int
xchg
xor
mov
jl
push
incb
add
and
xchg
cld
mov
stc
fcmovbe
lahf
xchg
shll
xlat
push
mov
mov
and
sbb
add
sub
mov
mov
dec
dec
mov
cmpsl
cmp
movsb
dec
test
adc
cld
push
inc
ja
inc
test
enter
fsubrp
ds
push
fs
movsb
sahf
lcall
mov
cmp
mov
les
jg
call
pop
dec
cld
fdivs
mov
pop
mov
dec
int3
xchg
jmp
rep
fldpi
shll
push
jo
jge
fstps
movsl
adc
das
je
cmp
ss
aam
mov
mov
rcll
aas
insb
push
sub
jns
stos
out
pop
insb
sub
push
cli
xlat
and
mov
sbb
sbb
stc
das
ja
rorb
popa
jl
cmp
xchg
jl
shrl
jp
shll
es
mov
or
fcompl
mov
xchg
push
mov
insb
incl
and
pusha
inc
stc
lret
inc
jnp
lret
adc
mov
cmc
divb
cmc
cld
xor
mull
sub
mov
jl
mov
mov
movsb
xor
sbb
mov
mov
popf
xor
ffree
pop
jp
lods
into
iret
dec
in
xor
cs
mov
rclb
adc
xor
hlt
sub
in
fisubs
scas
xor
popa
arpl
movsb
pop
mov
lcall
test
push
xor
sub
add
adc
cmpsl
pop
stc
and
and
out
add
xchg
inc
mov
cmp
mov
dec
pushf
xlat
std
jbe
fwait
clc
push
dec
push
or
cmp
sbb
outsl
push
sbb
outsb
cmpsl
sahf
add
add
in
mov
pushfw
ret
mov
mov
mov
icebp
fimull
cmpl
or
mov
iret
ja
loop
jecxz
outsb
jl,pn
test
cmp
je
push
sbb
shll
xchg
out
sbb
mov
mov
fwait
js
add
in
sahf
sub
inc
inc
ljmp
sbb
lcall
enter
popf
pop
mov
aaa
out
fcmovbe
mov
add
jecxz
jbe
pop
fsubr
pop
icebp
in
out
mov
cs
lock
lahf
inc
cmp
cmpsl
call
rclb
test
add
iret
sub
lods
aas
adc
push
popa
pop
jp
adc
imul
push
rclb
fists
adc
repz
jno
xchg
mov
xor
daa
mov
xchg
push
pop
int
data16
push
into
bound
xchg
test
pop
xchg
loopne
dec
push
pop
divb
sahf
sub
testl
std
sbb
and
jecxz
cmp
cltd
inc
xrelease
or
hlt
mov
lahf
pop
pop
add
ja
inc
jl
in
out
or
pop
shl
aam
dec
cmp
divl
loopne
sub
cmc
fdivs
or
bound
pop
mov
push
and
daa
dec
fs
fcompl
test
ja
dec
dec
xor
xchg
fdivrl
outsb
mov
jp
pop
mov
adc
cmpsb
out
sahf
push
mov
adc
mov
sub
mov
imul
pop
mov
xchg
pop
push
sub
shr
int3
push
lds
sub
jns
add
sahf
pop
or
gs
stos
add
sti
mov
imul
lcall
pop
xlat
lret
jno
test
stos
sti
cld
stc
shrb
and
arpl
pop
add
cmp
fisttpl
xchg
and
adc
pop
mov
jae
ret
pushf
dec
xchg
jnp
imulb
inc
push
cltd
shl
sub
sbb
fs
push
jp
shlb
lret
push
ret
jbe
or
adc
out
inc
and
inc
mov
stos
fsubrl
clc
jne
imull
cmp
mov
cmovae
push
lahf
xchg
leave
addb
mov
lods
cmpsb
rcll
negb
cwtl
in
mov
mov
adc
jno
inc
in
add
inc
sti
xchg
cmp
fistl
adc
inc
xor
andb
sahf
push
repz
inc
lods
sbb
int
xor
and
testl
lods
push
imull
ss
pop
adc
or
adc
sbbl
inc
fcom
cmp
jo
cmp
insl
mov
test
mov
mov
mov
popa
mov
inc
outsb
jno
xor
xor
data16
mov
push
add
pop
and
mov
xor
aaa
mov
mov
push
inc
repnz
in
lock
inc
add
dec
lds
in
mov
ja
pop
out
or
lea
xchg
lock
mov
les
mov
pop
andw
in
dec
jp
ja
sub
fstl
adc
out
sbb
or
push
jg
and
fsubr
xchg
stc
sub
lods
mov
jno
xor
jne
mov
mov
shl
cltd
and
aam
add
add
push
shlb
mov
lock
je
push
pop
mov
xchg
sahf
daa
mov
fbstp
cli
sarb
ds
inc
inc
je
adc
enter
nopl
mov
and
cmp
add
lret
mov
or
adc
sbb
int
inc
fisubl
movsl
cld
jle
mov
pop
leave
pop
rcl
jle
push
rcrl
xor
push
fisubs
mov
mov
gs
jns
mov
mov
mov
nop
outsb
push
pop
mov
cmpsl
pusha
pop
cli
jmp
add
xchg
mov
jbe
mov
movsb
aad
out
pop
addb
jb
in
inc
and
test
mov
mov
push
add
add
dec
or
mov
repz
xor
pop
fldenv
out
xchg
movsb
sarb
sub
cmp
out
js
out
orl
fstpl
push
in
nop
into
sti
cmp
pop
add
movsb
push
cmp
inc
inc
in
sahf
sub
das
fldl
adc
sbb
sbb
pop
jne
jbe
sub
hlt
shrl
push
neg
call
inc
jl
pop
pop
xchg
nop
sub
sub
fdivrs
adc
pop
cmpb
mov
adc
aaa
or
aad
mov
or
leave
xchg
shrl
aad
inc
stos
popl
sbb
or
repnz
out
daa
mov
scas
mov
push
loope
cmpsb
xor
mov
or
aad
sbb
cli
rcrb
pop
dec
adc
mov
jbe
mov
sub
in
sub
mov
mov
aas
ret
xor
mov
adc
xchg
daa
push
rol
aaa
and
mov
xchg
loope
xlat
mov
xchg
mov
xchg
sub
pop
and
push
jo
mov
cmp
push
jge
adc
jp
ss
cmp
adc
popa
jbe
fisttpll
pop
js
xchg
call
cs
mov
out
jae
mov
adc
jns
sbb
bnd
inc
aas
imul
daa
jmp
iret
dec
mov
addr16
call
jg
jg
hlt
mov
mov
outsl
not
scas
mov
int3
pop
and
stos
xlat
mov
mov
sub
lea
pushw
incb
aam
out
xchg
shrl
mov
xchg
xor
mov
bound
or
orl
inc
xchg
sub
sub
pop
mov
push
in
pop
repnz
aam
shl
or
inc
shll
icebp
ljmp
iret
repnz
int3
rorl
sbb
adc
mov
scas
js
lret
pop
lds
stc
bound
aaa
add
pop
push
lcall
cmp
lahf
cmp
jmp
test
hlt
aaa
mov
test
pusha
stc
sysenter
dec
or
or
out
sub
cmp
popf
mov
inc
aaa
mov
inc
mov
sbb
sarb
push
cmpb
mov
cmpsl
add
dec
outsl
lods
sub
stc
adc
nop
sub
cmp
aam
cli
adc
in
mov
jp
adc
or
and
jg
fstps
cltd
mov
fists
fs
push
stc
push
loopne
mov
test
mov
movsl
ds
scas
sbb
mov
dec
mov
xor
insb
pop
push
imul
lds
mov
fcmovb
stos
fs
xchg
sbb
mov
inc
push
rorl
push
pop
sbb
adcl
xchg
and
adc
cli
push
mov
add
inc
xor
out
xor
jg
pop
push
mov
push
adc
icebp
jbe
sahf
jne
iret
xchg
mov
icebp
aas
push
jmp
iret
xchg
dec
sti
or
add
out
adc
daa
hlt
sbb
mov
leave
jns
xchg
rolb
mov
imul
jge
test
xor
xchg
fimuls
inc
loopne
jo
pop
dec
xchg
or
xchg
movsl
pop
fmul
test
jl
lock
stos
push
xchg
aam
xchg
or
cmp
push
mov
mov
in
sti
xchg
mov
lods
imul
rolb
sbb
enter
fwait
dec
mov
in
mov
std
cmp
or
pop
pop
jecxz
sub
sub
cmp
add
pop
call
xchg
xlat
or
add
xchg
or
js
outsb
std
dec
insl
sub
jp
movl
jne
sub
fnsave
imul
fs
mov
lcall
mov
test
pop
ja
mov
lock
fs
cmp
pop
jle
xor
mull
inc
push
xchg
ret
push
sbb
sbb
cmp
dec
movb
pop
mov
incb
sbb
ficoml
xor
adc
mov
push
adc
pusha
sub
rcrb
in
not
addr16
int
sub
outsl
fdivrl
xchg
push
xchg
out
xchg
aad
out
xchg
cmp
mov
in
aad
jmp
sbb
addr16
aas
cld
stos
xor
jg
sar
lods
pop
out
pushf
scas
lret
mov
std
repz
incl
xor
xchg
mov
inc
mov
nop
or
dec
fsubs
adc
jmp
mov
mov
cmp
cmp
jecxz
push
inc
fmul
ret
dec
fwait
pop
call
push
or
xchg
sub
pop
frstor
mov
mov
dec
cmp
leave
jp
add
mov
cmc
or
out
cmp
loopne
popf
sbb
jb
lea
hlt
pop
pop
push
sub
rcrb
jns
or
daa
sbb
imul
and
sub
sbb
jg
push
xchg
out
mov
and
cmc
sbb
mov
adcb
or
mov
cmp
inc
hlt
mov
jmp
push
js
lret
out
shrl
dec
jo
rcrl
sti
pop
ds
nop
jp
mov
xchg
fsubrs
push
mov
cmp
cmp
or
dec
add
jle
ds
ljmp
out
jp
pop
fdivl
je
lods
inc
jo
xor
mov
jmp
test
xchg
loope
mov
fistpl
pop
mov
sbbl
inc
dec
mov
clc
jecxz
add
adc
sbb
stc
clc
test
sbb
arpl
mov
loope
jnp
pop
pop
mov
enter
repz
adc
imul
sub
iret
adc
sub
adc
adc
inc
pop
inc
xlat
pop
dec
pop
push
in
cltd
out
cmc
aam
repnz
cld
mov
out
mov
hlt
test
xor
hlt
rolb
or
push
pushf
cwtl
mov
dec
clc
pusha
imul
xchg
or
mov
xchg
mulb
in
in
sub
pop
ret
adc
mov
pop
divl
je
push
fucomp
insb
or
shll
and
sbb
mov
fdiv
lea
add
bound
mov
iret
mov
out
jbe
jmp
sbb
shl
jmp
pop
pop
sahf
push
mov
push
fisttps
mov
leave
call
je
orb
inc
ja
aad
adc
test
jns
mov
pop
lret
cmp
out
data16
pop
adc
xchg
sbb
xchg
sub
push
bound
lret
mov
aas
cmp
push
push
jp
mov
arpl
jne
cmp
in
movsl
push
ret
insl
mov
ja
outsl
and
xor
int3
andps
xor
adc
jle
dec
add
mov
jge
inc
out
push
push
inc
mov
dec
stos
push
and
inc
imull
sub
jle
and
and
imull
fcoml
in
andl
add
fsubs
mov
hlt
out
int
mov
int
movsl
mov
cmpsb
push
cmp
stos
cmc
mov
xchg
call
cmp
pop
sbb
movsl
mov
shlb
fcoms
movsb
push
xor
lahf
arpl
outsb
in
in
roll
ror
pop
and
imul
inc
jmp
push
inc
and
pop
stos
jnp
fwait
mov
jb
loopne
mov
cmpsb
pop
jp
mov
xchg
lea
mov
bound
stc
xchg
pop
dec
push
xor
int3
sbb
cmp
cmp
push
mov
fstpt
adc
pop
cmp
shlb
push
pusha
xor
pop
xchg
xor
and
lcall
out
jb
std
or
cmpsl
xchg
jge
ds
cltd
mov
int3
shlb
push
mov
shr
out
mov
add
loop
push
cmpsl
xchg
int3
repnz
dec
dec
cmp
adcl
jo
push
push
cwtl
pop
stos
loop
lods
mov
inc
clc
mov
loopne
pusha
arpl
cld
mov
jno
xchg
xor
adc
test
je
jecxz
idivb
xchg
mov
bound
arpl
call
sub
cmp
das
inc
dec
lods
sbb
daa
mov
xor
in
xor
jo
add
lcall
dec
dec
das
dec
subl
test
pop
ds
jns
jb
dec
xor
rcrb
outsb
stos
inc
inc
ds
into
or
mov
inc
loop
std
std
sub
test
mov
ret
aaa
bound
sbb
add
or
dec
and
andb
cmpsl
xchg
or
cmpsb
stos
mov
idivl
nop
cmpsl
lods
aam
mov
xor
sar
std
stos
mov
loope
into
mov
mov
xor
push
and
movsl
or
nop
or
xor
mov
jge
mov
std
cmpsb
dec
pop
icebp
ss
gs
in
addb
std
xchg
shl
adc
psrld
jge
rcrb
add
cltd
cmp
fs
mov
sbb
loopne
cmpsl
inc
dec
lock
mov
sub
pop
cmc
scas
fsubl
cmpl
sbb
les
xchg
inc
jbe
fisubrl
add
or
sub
adc
sbb
fincstp
or
pop
notb
inc
arpl
rcrb
and
outsb
fwait
pop
adc
in
daa
icebp
orl
inc
shl
in
push
out
fiaddl
aaa
fadds
cmp
ret
xlat
or
iret
addr16
inc
popa
je
mov
cmp
insb
cli
das
mov
push
inc
push
shll
xchg
push
in
lcall
gs
stos
mov
lcall
fnstsw
or
mov
xbegin
call
dec
mov
xchg
add
in
adc
adc
xor
cmpsb
loop
imul
fiaddl
mov
imul
stos
test
jo
sub
xor
mov
xchg
mov
jnp
add
ljmp
push
sub
sahf
mov
enter
std
dec
dec
test
fs
cwtl
data16
cwtl
mov
xor
into
mov
jmp
stc
push
mov
lods
subl
sbb
cmp
dec
pop
inc
mov
xor
add
shrb
popl
mov
arpl
inc
sub
sub
testl
xor
movsl
movsb
insb
xor
jne
lahf
int3
mov
xchg
ss
jno
mov
int
insl
pusha
and
dec
in
mov
add
popf
cli
mov
aam
sbb
jno
lahf
lea
xor
iret
aas
mov
inc
mov
add
add
out
xchg
adc
mov
or
push
dec
or
sbb
lahf
mov
jns
mov
adc
jb
inc
pop
xchg
decl
insl
cltd
lcall
sbb
repz
sbb
push
jecxz
pop
xchg
int3
dec
jo
outsl
cld
loope
insl
es
fwait
pop
cmpb
pushf
lods
stos
jbe
xor
or
cmp
ljmp
movsl
dec
stc
cmp
fisttps
mov
in
scas
lds
int
out
fbstp
or
mov
cmp
dec
jno
lods
mov
xchg
mov
incl
iret
jecxz
sub
je
jge
scas
stos
cmpsl
sub
or
xchg
xchg
insl
out
sbbb
and
pop
jp
sti
dec
fsubrl
adc
sub
sub
and
pop
sub
jno
mov
mov
dec
cmc
test
cld
lcall
sahf
mov
pop
icebp
iret
in
pop
sbb
mov
bound
sub
rcrb
cmp
icebp
mov
adc
lret
cwtl
cld
adc
test
shl
inc
add
shlb
mov
and
fdivs
aad
dec
jge
inc
inc
hlt
sbb
repz
dec
add
std
jbe
jge
daa
dec
enter
lret
test
lods
mov
or
sti
jg
push
inc
jmp
mov
jae
jg
movsb
loop
lcall
gs
push
shl
mov
dec
or
xchg
push
mov
jo
xchg
test
fwait
xor
imul
jne
orb
lds
dec
sbb
call
js
mov
ret
add
cs
jecxz
pop
andb
jne
fidivs
shrl
fs
lds
sahf
test
pop
adc
pop
fdivrp
mov
out
xchg
jp
idiv
jb
out
lcall
adc
cld
push
cmp
sahf
fst
hlt
psllw
adcl
sbb
push
and
xor
sbb
aaa
sbb
fs
and
lahf
or
scas
cltd
pop
jecxz
sbb
stos
popa
in
pop
inc
sub
imul
mov
push
or
mov
orl
mov
mov
in
adc
mov
fiaddl
xchg
pop
mov
adc
in
xor
cmp
mov
sbb
adc
divb
adc
push
mov
mov
add
rorl
jo
dec
dec
call
cltd
and
push
cli
add
dec
jge
lret
or
sbb
push
and
repnz
fcmovu
adc
fcmovnbe
mov
and
fwait
mov
enter
insb
xchg
push
xor
cmp
das
sbb
jg
lods
jmp
cmp
push
mov
pop
pop
jge
push
dec
mov
bound
leave
pusha
cmp
aam
sbb
repnz
movsb
or
mov
adc
imul
aaa
cmc
jno
mov
ja
mov
fbstp
imul
pop
enter
clc
or
popf
xor
sarl
pusha
dec
mov
push
sub
mov
sbb
enter
push
add
jp
fs
push
cmp
call
push
dec
mov
adc
loopne
movsl
push
or
stos
outsb
cwtl
xor
shl
and
addl
push
pusha
mov
out
adc
push
stos
call
pop
push
les
jbe
decl
imul
mov
out
test
mov
pop
aaa
clc
aad
mov
lret
push
andl
addr16
mov
scas
dec
jae
cmp
push
xor
pusha
lret
repz
idivb
mov
fprem
cmp
insl
into
je
repz
jp
sub
mov
fdiv
inc
mov
add
loop
dec
fnsave
inc
in
and
adc
mov
inc
add
pop
inc
es
cli
cmp
push
in
inc
fldcw
test
mov
mov
adc
sti
scas
push
shll
cmp
dec
push
es
loope
inc
dec
mov
insb
mov
push
xor
dec
pop
bnd
and
cmp
iret
cmp
leave
outsl
and
daa
in
faddl
add
adc
pop
or
jecxz
mov
add
movsb
divb
jo
ror
popf
push
shll
pop
fs
sbb
add
sahf
jb
push
dec
outsl
xor
xchg
sbb
insl
cwtl
jge
sbb
sub
pop
test
dec
outsl
adc
adc
or
xchg
push
pop
in
sbb
mov
outsb
adc
xor
xchg
imul
and
out
pop
or
mov
rolb
push
clc
cmovle
fld
insl
sub
push
aas
enter
popf
outsl
stc
mov
push
mov
mov
xchg
and
or
dec
repnz
inc
xchg
aaa
push
mov
imulb
pop
mov
fcomps
std
fwait
stc
jno
lret
test
adc
push
lret
sarb
adc
popa
xlat
add
and
shll
rcll
pushf
mov
inc
mov
jno
cltd
xor
cmp
xchg
jle
adc
cmp
out
inc
cvttps2pi
dec
pushf
push
lock
add
inc
pop
push
sarb
insl
movzwl
stos
push
push
fcoms
xchg
std
pusha
repnz
in
pop
mov
jmp
adc
popa
dec
add
mov
rcrb
aaa
mov
add
add
push
jnp
mov
divb
sbb
push
mov
ret
jecxz
sub
fcompl
dec
cmp
ljmp
push
in
sti
sbb
pop
int
add
mov
sbb
mov
sub
xchg
cmc
mov
pop
lods
mov
cwtl
cmpb
mov
lahf
pop
jecxz
je
xor
jl
xchg
dec
jecxz
das
push
xchg
fwait
xchg
ja
ss
sbb
daa
mov
sbb
sbb
adcl
addb
fwait
cwtl
mov
xchg
int
mov
aas
lock
xchg
mov
xchg
ljmp
adc
mov
xchg
cmp
arpl
popf
mov
dec
nop
xchg
fistl
adc
ret
pop
jmp
sbb
xor
pop
pusha
jne
and
clc
mov
xchg
test
adc
and
mov
mov
cmp
pusha
cmpsb
loop
push
lods
pop
pop
mov
cltd
mov
das
lcall
xor
daa
xor
sub
mov
xlat
mov
and
push
movzbl
imul
lock
add
das
sbb
adc
xchg
loop
mov
insb
xor
push
jl
movsb
push
sub
aas
mov
xchg
inc
sbb
iret
cmp
jae
in
xchg
fidivl
or
sahf
insl
and
mov
add
add
pusha
dec
mov
hlt
jmp
xchg
shrb
addl
sub
out
xchg
sub
mov
push
test
fildll
xor
sbb
sub
jns
inc
mov
jns
push
inc
sub
shll
xor
and
cmp
div
xor
pop
xchg
mov
cmp
sub
xor
push
daa
inc
inc
inc
aam
mov
adc
in
jb
and
sbb
push
les
pop
mov
sub
leave
scas
jae
outsb
mov
filds
fisubl
xor
and
rcrb
sub
xlat
adc
inc
pop
jnp
in
push
incb
adc
mov
sbb
mov
inc
jg
cmpsb
out
mov
jo
jg
mov
cmpsb
inc
add
xchg
inc
pop
fdivr
or
and
adc
sub
iret
pop
scas
xchg
rorl
lcall
mov
xor
int3
xchg
xor
pushf
mov
das
or
add
jo
enter
pop
inc
jg
mov
movsl
vpshufhw
jns
movsb
or
xlat
push
dec
push
lret
lock
xchg
into
rclb
repz
shl
out
cmp
xor
es
aaa
ficomps
aas
push
mov
test
pop
mov
int3
lock
cld
clc
push
lret
pop
sbb
fildl
pop
and
jb
adc
scas
out
sub
cwtl
jno
inc
int
push
leave
mov
lea
sbbb
add
cmpb
repnz
fcoml
adc
inc
outsl
mov
andb
leave
adc
dec
inc
cmp
das
sub
and
out
xchg
pop
popf
cmpsb
loop
mov
jmp
adc
loop
push
inc
ret
std
stc
jb
push
xchg
fisubs
xor
push
fcomps
clc
mov
push
push
movsb
and
fisubl
cltd
jmp
ds
ja
js
mov
ror
inc
je
cs
mov
rdpmc
lods
ss
xor
aaa
add
cmp
mov
inc
mov
mov
psubsb
sub
js
pop
int
inc
and
repnz
jb
lea
lret
and
mov
aas
adc
pop
pop
jge
sarl
mov
ss
mov
lods
jmp
out
xchg
mov
xchg
into
jne
test
stc
xchg
dec
sahf
out
fwait
ljmp
dec
in
xchg
repz
out
push
sti
inc
movsl
enter
mov
mov
fbld
rcrl
clc
adc
mov
pop
ljmp
lret
stos
mov
leave
push
xlat
jo
mov
cltd
hlt
in
and
xor
mov
es
pop
pop
dec
hlt
push
inc
mov
shl
out
mov
clc
dec
mov
mov
and
pop
dec
jb
leave
jno
stc
repnz
rcrl
dec
popl
int
cmp
xchg
loop
mov
adc
rol
xchg
out
lea
cmp
xlat
inc
add
ja
fs
mov
jne
dec
dec
lret
mov
mov
test
lock
dec
ljmp
aaa
ja
mov
shlb
cmc
adc
cli
cmp
push
lret
out
repnz
sub
sahf
insl
arpl
or
adc
idiv
mov
in
out
test
lsl
xchg
adcb
xor
sbb
pop
xchg
leave
or
mov
mov
mov
adc
or
daa
pushf
jmp
pushf
lahf
push
sub
jmp
cmp
dec
cmpsl
rolb
jge
xor
or
cli
test
daa
fs
cmpl
mov
xchg
call
jge
leave
insl
mov
into
mov
shl
push
jae
popf
or
and
jmp
shlb
pop
fbstp
pop
pop
lret
cmpsb
mov
mov
dec
push
popf
ret
jp
pop
test
in
insl
jmp
pusha
repz
jp
cld
mov
sarb
xchg
pop
inc
flds
mov
ljmp
daa
in
pop
ljmp
or
and
add
add
sbb
or
xchg
faddl
or
bnd
jnp
inc
cmp
daa
jecxz
addb
push
int3
cmp
mov
pop
leave
in
test
test
jle
jp
jge
scas
inc
add
mov
std
xchg
fs
paddsw
pop
iret
sbbl
mov
ljmp
mov
push
add
out
mov
inc
ljmp
xor
repz
pop
aad
pushf
pop
loopne
imull
add
xchg
cmp
xor
xchg
lret
lret
pop
push
mov
cmp
or
nop
push
push
jo
fwait
shrl
adc
outsb
sub
call
call
fstl
daa
div
xor
mov
in
xchg
fnstenvs
enter
and
int
dec
jp
out
dec
add
roll
lods
call
ret
adc
mov
ds
mov
je
or
pop
mov
xlat
shll
mov
sbb
iret
jle
movsb
xchg
xchg
adc
rcr
pop
movsb
fldt
dec
cmpsl
sti
int3
dec
testl
dec
push
mov
cld
rcr
mov
mov
lret
push
sub
mov
test
pop
popf
out
add
or
mov
mov
mov
ljmp
fwait
ja
pop
mov
pop
icebp
enter
jbe
iret
cmovle
cmpsl
xor
ds
add
in
sbb
sub
rcrb
jmp
aaa
add
test
pop
dec
adc
fdivr
inc
in
stc
loopne
mov
sbb
testb
imul
jecxz
ljmp
cmpsl
and
xchg
ds
fiadds
mov
jae
xchg
mov
cmp
sub
das
mov
xchg
std
push
add
and
xor
push
in
bound
inc
sbb
mov
mov
and
clc
test
andb
xor
fistl
mov
out
lret
xchg
mov
jno
fs
pop
xchg
push
inc
mov
movsb
idivb
dec
pop
lcall
add
push
push
adcb
ljmp
loope
adc
xor
mov
iret
mov
xor
cwtl
add
sub
sub
in
testb
push
ret
fs
sarb
or
insb
fwait
or
fiadds
cmp
imul
loope
push
or
shl
push
insb
adcl
popf
insb
jae
aas
dec
daa
pop
rcr
int
jmp
enter
pop
imul
or
test
mov
imul
sti
jge
or
adc
push
insb
xchg
jecxz
out
xorb
xchg
out
xor
mov
or
mov
mov
test
xor
dec
pop
testl
notb
fmull
add
ljmp
mov
sub
pop
or
test
ret
shl
lret
dec
les
test
test
jecxz
iret
or
mov
jb
loopne
mov
ficoms
rorl
push
test
pop
enter
shr
jnp
sub
loope
testb
dec
ss
and
addl
lcall
jnp
xor
popf
fdivl
test
mov
xor
movsl
and
pop
adcl
push
add
xchg
call
cmpsb
xchg
pop
fld
add
mov
shlb
movl
into
mov
xor
mov
dec
adc
aam
add
cmp
xor
mov
data16
cmpsb
popf
adc
fildl
jne
ds
lods
xor
xor
pop
int3
or
push
fisttpl
mov
adc
push
rorl
mov
jl
icebp
dec
adc
into
sahf
xlat
loopne
jno
push
adc
insb
nop
popa
aaa
loop
mov
cli
adc
xor
sbb
stos
psllq
test
mul
add
or
jl
enter
or
sbb
cld
fsts
js
pushf
ss
shll
mov
xor
test
aam
in
push
xchg
aad
jnp
jno
and
ss
inc
stos
xchg
lock
mov
aas
sub
mov
hlt
jp
jae
dec
cmp
xchg
lcall
sahf
xor
and
and
cs
dec
js
pop
mov
jae
loop
and
xor
dec
lahf
cmpsb
mov
inc
cmpsb
int
mov
jb
inc
lcall
rorb
inc
lods
test
pop
sub
and
into
pop
test
xor
adc
ret
or
test
sbb
jae
scas
cmp
push
mov
jo
mov
cmp
xor
push
lea
xorb
push
mov
mov
fwait
cli
cmp
mov
clc
ljmp
mov
jle
jo
fstl
sbb
push
xor
xchg
xchg
adc
cltd
mov
bound
lret
stos
lret
aas
mov
jae
rcll
mov
gs
fildl
fistpll
and
rorb
mov
cmp
pop
shr
adc
jae
or
push
dec
push
mov
gs
jmp
and
jmp
imulb
in
pushf
pop
pusha
outsl
xor
test
jge
inc
lock
dec
cs
into
lcall
push
dec
cmp
shll
aad
das
xlat
loop
jmp
mov
and
out
jo,pn
scas
adc
inc
jge
and
dec
es
inc
adc
sub
test
dec
xor
ret
xor
adc
lock
jp
jecxz
cltd
push
pushf
jl
scas
lea
andb
xorb
popa
mov
scas
les
lea
cmpsl
mov
push
jns
add
xor
fisttpl
inc
out
iret
ret
cmp
cmp
xor
movb
mov
pop
xor
xchg
nop
adc
and
scas
add
cmc
lods
orl
push
fs
stc
or
insb
stos
add
inc
fidivl
rclb
push
aaa
daa
int3
mov
mov
fwait
mov
xorl
xchg
pop
stos
sbb
push
or
cmp
sbb
jo
push
inc
xor
test
push
stos
push
lea
shlb
aas
leave
dec
subb
je
pushf
mov
mov
jns
mov
xor
cmp
fisttpl
iret
xchg
test
push
int3
mov
add
push
cmpsl
xchg
or
nop
adc
xchg
out
xor
jle
jg
pop
jp
mov
into
xor
mov
add
rolb
cmp
adc
xchg
xor
test
mov
jae
fnstcw
dec
aam
sub
push
cmp
pushf
and
bound
stos
mov
out
sbb
adc
jp
inc
das
in
push
pop
sbb
mov
push
cmc
inc
mov
and
in
out
sbb
cli
cmpsl
aam
and
sarl
push
dec
jo
dec
icebp
bound
jecxz
das
loop
mov
push
cmpsb
add
std
ja
lcall
jmp
data16
popa
fisttpl
adc
and
push
je
test
out
ljmp
sbb
inc
icebp
outsl
and
iret
cli
cmp
cmpsb
push
rep
scas
mov
xchg
testl
xlat
shlb
sbbb
andl
cmc
sbb
dec
inc
add
add
imul
js
xor
pop
or
vandnps
mov
jne
inc
jnp
call
push
lret
movsb
jbe
add
mov
cmpsl
pop
xor
mov
sbb
in
in
aaa
and
ss
xchg
mov
daa
out
xor
push
test
push
iret
add
mov
lods
push
mov
dec
out
or
movsb
hlt
aaa
mov
mov
and
push
sbb
out
mull
out
sub
push
xchg
and
cld
xchg
and
lahf
mov
xchg
or
xor
xor
inc
mov
cmp
add
or
pushf
sti
mov
cmpb
enter
out
dec
fxam
push
pop
cmp
pop
and
cld
ja
outsl
mov
int3
pusha
fdivrs
ja
jo
leave
stc
fs
mov
mov
jl
dec
loopne
mov
cld
push
pop
or
push
push
in
adc
pop
out
repz
ja
or
es
test
mov
leave
jmp
cli
push
adc
int3
mov
xchg
clc
outsl
push
aas
mov
cmp
dec
ds
cwtl
filds
sub
push
cmpb
pop
push
adc
test
jl
aam
and
leave
into
mov
les
mov
mov
insb
inc
push
push
pop
cld
sbb
shlb
das
mov
xchg
pop
and
aad
xchg
loop
adc
or
jl
fidivs
cmc
xor
cs
lods
mov
fsub
lods
je
dec
push
xchg
jnp
lea
mov
prefetch
mov
sbb
movsb
mov
enter
iret
loopne
mov
fsubl
xchg
inc
cmovbe
or
xor
icebp
in
lea
or
or
lock
fiaddl
push
std
orb
ret
lcall
xchg
mov
dec
jne
sub
aas
stc
xor
call
jmp
pop
sbb
insl
js
push
bound
stos
dec
jl
repnz
ljmp
rorl
sub
add
pop
clc
nop
ljmp
ljmp
lods
lds
test
jb
mov
pop
das
imul
jmp
test
mov
dec
ret
mov
mov
cmp
push
xor
add
push
xchg
and
sbb
and
pop
repz
jg
test
lds
mov
jbe
xchg
jmp
testb
sti
jle
das
orb
fimull
jmp
popf
sub
cmp
ds
jnp
mov
and
pop
insb
fcomps
push
xchg
cs
dec
insl
jnp
iret
mov
mov
push
bound
and
or
pop
adc
repnz
inc
hlt
aad
add
fisttpll
mov
mov
lock
icebp
mov
xor
jno
fcmovne
add
out
dec
loopne
out
inc
sub
das
lea
jp
jns
aam
imul
sub
lods
adc
jmp
jp
jl
out
sbb
or
sahf
loope
and
jnp
es
and
mov
rolb
bt
dec
jmp
and
je
loope
xor
cld
inc
jmp
or
shrl
gs
imul
aam
in
push
add
inc
sahf
push
mov
dec
leave
out
dec
jns
sbb
xchg
ret
test
arpl
jp
popa
lret
xor
or
mov
cmp
xor
imulb
lret
popf
mov
testb
adc
dec
lods
in
xchg
adc
repnz
fldl
pop
aad
sbbb
out
cmp
pop
sbb
mov
lods
movsl
clc
mov
test
bound
repz
inc
push
fdivs
sub
and
lahf
rcr
stos
or
int
loop
pop
rol
and
and
sub
xor
dec
ficoml
clc
fwait
adc
add
loope
cwtl
js
insl
add
lods
mov
lds
sub
push
les
pushf
xchg
adc
ja
or
jbe
mov
imul
mov
cmp
push
ljmp
mov
jne
sti
jmp
fildll
dec
adc
negb
sarl
adc
ds
pushf
jp
mov
sbb
cli
xchg
jne
mov
enter
lods
hlt
jmp
mov
repz
xchg
cmpl
cmp
out
fdivs
repz
imul
sbb
mov
sub
sub
daa
add
mov
jo
push
sti
orl
cmpb
push
test
fimuls
sbb
adc
mov
cld
mov
add
push
xchg
inc
in
or
add
cmp
aaa
cmp
cs
pop
loop
loop
in
push
stos
adc
fildll
sti
test
into
rcll
inc
out
stos
pop
or
pushf
lret
loop
adc
sub
comiss
cmpsl
adc
adc
jmp
dec
jmp
sbbl
push
dec
rolb
mov
scas
mov
add
cmpsb
test
mov
xor
mov
fs
pop
mov
cmp
ds
stc
and
mov
cld
mov
fisttpl
stos
xchg
out
xor
sbb
mov
aaa
inc
xchg
into
iret
add
and
xchg
movsb
cltd
jl
adc
or
lock
xchg
push
jbe
les
loop
fbstp
adc
lahf
inc
or
sbb
lahf
mov
sub
outsl
es
xor
aaa
jb
rcr
sahf
testb
mov
fs
push
dec
sti
sbb
loope
mov
jae
push
and
xchg
neg
lea
dec
and
inc
adc
dec
pop
lret
gs
gs
fs
and
pop
mov
adc
fildl
fldcw
sub
inc
xlat
mov
enter
addr16
inc
jne
icebp
push
aad
cs
dec
xor
jno
dec
cmp
fcoml
sbb
out
adc
xor
sbb
and
adc
movsl
inc
and
ds
or
lret
sub
out
pop
inc
lret
or
jb
insb
js
mov
inc
pop
imul
mov
inc
xchg
jmp
cli
ljmp
lods
or
xchg
mov
movsl
pop
nop
outsl
dec
out
mov
push
pop
xchg
pop
pop
icebp
adc
mov
jp
cmp
insl
dec
call
loopne
popa
xor
test
ret
inc
loope
sub
rcll
std
sbb
xchg
stc
repz
dec
clc
cwtl
pop
imul
call
xchg
out
fs
lea
push
gs
lcall
or
and
lds
icebp
pop
stos
das
or
pop
enter
test
dec
movsb
pop
cmp
push
cmp
dec
mov
add
xlat
gs
jmp
mov
outsl
out
dec
repnz
push
pop
cwtl
out
fcomip
or
jge
test
int
xor
pushf
pusha
or
mov
data16
fcoml
mov
in
pop
movsb
xchg
pop
adc
movsl
out
cmp
pop
xor
mov
jmp
js
cwtl
lret
loopne
push
je
mov
xor
mov
ds
or
xor
push
cwtl
fwait
or
cltd
mov
inc
stos
mov
pop
ja
push
pop
test
imul
test
iret
pop
cmp
rcrb
rcrb
mov
cs
mov
cmc
clc
idiv
add
mov
imul
jnp
outsl
push
inc
jl
inc
nopl
loopne
xchg
adc
sarb
inc
je
cmpsl
or
insl
inc
subb
add
stc
jbe
sbb
mov
push
inc
mov
mov
ljmp
in
mov
in
jb
dec
std
mov
addr16
sahf
int
out
jge
fnstsw
pop
fisubrs
orb
push
adc
repnz
dec
lds
inc
fstpt
jne
int3
lret
xchg
mov
dec
or
mov
xor
xchg
stos
add
cli
lret
movsb
cmp
pop
and
movsl
and
shrb
xor
stc
stos
sbb
mov
add
sub
pop
lret
jns
dec
push
mov
xchg
dec
or
sbbl
std
les
pop
arpl
rcll
mov
movsb
jb
addr16
inc
sbb
cli
mov
call
and
inc
jno
or
xchg
jp
std
mov
dec
push
sbb
mov
into
xor
divps
es
lods
cli
popa
sbb
ja
sub
mov
dec
add
aad
dec
je
pusha
adc
push
cltd
sbb
iret
or
lret
loope
daa
inc
push
xchg
dec
dec
aam
loop
pop
xchg
xchg
test
fisttpl
pop
jae
add
add
fnstcw
ds
mov
les
sub
pop
adc
push
popa
lcall
inc
dec
stos
jge
sub
cld
inc
in
repz
icebp
lcall
cmp
pop
xchg
scas
pusha
mov
stos
and
sub
pop
int
lods
pushf
add
jl
iret
cmp
jo
mov
mov
jge
rcl
mov
ljmp
xchg
lock
jb
sub
stos
rclb
aaa
add
dec
arpl
enterw
into
int
fs
clc
lcall
rclb
in
pop
pop
xchg
jae
cmp
sub
and
mov
push
or
ja
cs
xor
xchg
sbbl
xchg
push
or
or
addr16
lret
pusha
rorb
in
mov
add
sbb
push
xorb
imul
jg
cmp
iret
jle
lret
orl
jl
and
rcr
ficomps
ret
in
pop
jns
jecxz
ljmp
xor
jae
push
lret
mov
mov
pop
daa
cltd
mov
gs
test
jnp
and
or
xor
daa
addr16
or
ds
rcrl
or
mov
pop
sbb
jae
inc
cmpsb
adc
inc
scas
jns
or
mov
imul
push
inc
lahf
mov
sahf
fcom
xor
jg
adc
sbb
jb
mov
aaa
xchg
mov
mov
call
pop
enter
call
inc
mov
xchg
and
add
xlat
cmp
cs
rolb
lods
lcall
shlb
pop
loope
pop
cmp
add
mov
cmp
pop
sub
imul
jp
sub
jae
ficompl
icebp
out
pop
sarl
cltd
pop
jecxz
jo
orb
or
clc
les
jle
loop
clc
es
mov
add
imul
int3
fst
in
pop
pusha
xor
mov
and
stos
xchg
jp
cmpl
adc
movsl
xor
popl
hlt
cmp
sbb
xlat
dec
lock
xlat
popf
push
push
mov
scas
xchg
or
scas
xor
xor
push
fwait
sbb
call
mov
iret
sti
ss
cmp
mov
std
stos
jp
loop
mov
cmp
adc
mov
push
mov
das
add
add
in
dec
dec
sbb
dec
push
enter
ds
js
jb
call
mov
sub
fbstp
pop
dec
inc
jbe
lods
sbb
inc
jecxz
neg
scas
push
mov
aam
push
push
jo
scas
icebp
movsl
pop
cmp
rolb
dec
addr16
pop
out
dec
mov
das
jmp
test
mov
in
cmp
mov
insb
pop
int3
aam
xchg
js
out
cmp
leave
mov
push
jl
popa
and
clc
out
sub
inc
mov
out
xchg
cmpsb
pop
mov
in
lock
fwait
js
gs
stc
int3
fnsave
mov
sbb
jb
jl
push
mov
sbb
push
leave
adc
insl
dec
ja
xor
out
push
fidivl
insl
cmp
mov
pop
out
jle
jecxz
mov
xor
mov
clc
mov
notb
idivl
imul
data16
mov
into
mov
mov
add
shrl
lahf
int3
repz
cmpsb
pop
sub
stc
and
jae
out
pop
les
mov
lock
pop
pop
push
dec
jnp
inc
mov
sbb
xchg
sbb
test
xchg
ja
xor
movsl
sub
jns
out
pop
aaa
jae
sub
inc
aad
or
and
dec
adc
and
data16
mov
pop
arpl
and
mov
push
fcmovbe
push
pusha
lods
xchg
fstps
sub
mov
orl
popa
dec
mov
push
adc
add
lahf
push
xchg
or
stc
cmovae
xchg
sbb
fidivl
xchg
cmp
push
ja
mov
dec
cmp
hlt
pop
and
jb
pop
jle
je
mov
andb
les
push
std
sub
ja
sub
cld
dec
stos
mov
fs
insl
mov
popa
adc
test
pop
pop
inc
mov
adc
jp
add
sarl
leave
cs
loopne
clc
movl
mov
loopne
mov
and
mov
cmp
dec
outsb
and
mov
pusha
cwtl
inc
xchg
sub
loop
aad
sub
pop
or
jne
in
mov
mov
nop
cs
add
daa
test
add
test
jae
mov
ret
data16
mov
inc
in
add
rclb
cmp
aaa
push
lods
adc
imul
push
orb
add
or
inc
dec
dec
ss
and
js
sbb
loope
xor
cld
filds
dec
and
repz
into
stc
sbb
sub
add
icebp
add
dec
jae
adcb
push
in
fnstcw
xor
mov
stos
aaa
xor
xchg
in
lret
rdmsr
and
cmp
jmp
cmp
movsb
pop
push
inc
fldenv
mov
into
xlat
inc
mov
and
pop
orb
test
movsb
nop
pop
sahf
jecxz
sub
cmp
popf
dec
cmp
rolb
mov
adc
lahf
inc
shlb
or
sbb
mov
sbbl
push
data16
and
pop
ret
movb
addb
push
push
mov
in
push
push
jge
fiadds
in
dec
xchg
mov
sarb
push
test
sub
pop
jae
fildl
pop
cmp
cmc
ret
xchg
sbb
out
ds
or
leave
ss
test
ret
push
addl
aad
ret
xlat
add
roll
xchg
iret
roll
sbbl
push
aad
add
data16
xor
mov
sarb
rcrl
push
and
sbb
adc
sarb
mov
imul
pop
pop
mov
clc
jecxz
cmp
adc
subb
and
add
and
lods
repnz
stc
jmp
test
dec
lret
sub
lods
leave
jae
dec
xchg
adc
pusha
xor
push
lahf
ret
ret
pop
movb
mov
jb
or
rorb
jle
mov
mov
mov
xor
sarb
pop
pushaw
fs
xorl
test
push
ret
jnp
xchg
dec
test
ja
dec
cs
xor
in
pusha
shlb
xor
cmp
mov
xorl
xor
sub
inc
mov
mov
add
mov
sbb
fs
and
push
lods
js
movsl
std
jb
xor
loope
pop
clc
test
cmp
int3
ret
lods
mov
sbb
add
in
adc
cltd
out
add
sub
imul
fs
dec
ja
xor
lea
xchg
add
test
cs
sbb
shll
pop
xchg
imul
mov
adc
add
push
add
jbe
idivl
ds
add
and
fisubs
xchg
insb
inc
push
rclb
or
mov
jl
int3
std
sahf
xchg
cmpsb
push
inc
jge
repnz
xchg
mov
lock
aaa
hlt
lds
mov
sbb
pop
or
out
mov
jae
pop
or
or
arpl
out
push
push
in
call
mov
les
out
bound
xor
xchg
mov
les
out
in
lret
mov
fadds
mov
jnp
push
push
mov
dec
leave
aas
fwait
dec
rcl
fs
push
xor
add
movsb
push
in
mov
jmp
push
insl
aaa
inc
inc
adc
inc
mov
cmp
or
mov
push
pop
mov
clc
adc
inc
jo
or
push
pop
jge
inc
pop
lock
add
mov
xchg
js
mov
in
add
out
in
cmp
adc
cmp
lret
mov
pop
xchg
dec
movb
loopne
sbb
rolb
push
mov
xchg
push
mov
addb
ss
xchg
xchg
fnstcw
dec
jecxz
lods
xchg
roll
stos
ljmp
dec
dec
dec
xchg
inc
rorl
insl
icebp
fldl
pop
sbb
jnp
dec
push
loope
out
cmp
stos
mov
sub
adc
stos
push
into
pop
mov
add
jne
jns
and
sub
sbb
out
cmp
inc
subb
lods
fldl2t
sub
ss
shrl
mov
repz
pop
faddl
jae
inc
sub
shll
pop
push
out
sbb
dec
mov
jne
pop
push
sub
cmp
or
jmp
sti
xlat
decl
add
jns
sub
ja
outsb
cmp
lods
dec
cmp
push
outsb
insb
ds
push
inc
nop
fbstp
adc
ret
bound
scas
int3
clc
or
in
aaa
sahf
div
and
fstpt
sbb
push
adc
jae
jno
hlt
push
leave
jp
jae
xchg
pop
mov
mov
pop
inc
popf
loopne
jg
xorl
inc
in
lods
hlt
rcrb
dec
pop
mov
popf
pop
and
xchg
or
mov
inc
inc
mov
sahf
out
fsub
mov
inc
xor
lods
imul
or
icebp
scas
mov
dec
or
push
mov
adcb
loopne
add
and
rorl
outsb
nop
sub
jnp
inc
outsb
mov
lcall
sub
jecxz
and
std
arpl
fisttps
xchg
outsb
test
int3
lods
dec
adcl
ds
out
sbbb
xor
adc
push
xor
dec
lods
pop
insl
repnz
dec
mov
xchg
cmpsl
pop
stc
test
repnz
xchg
sub
dec
inc
and
xchg
lcall
and
pop
inc
out
and
outsb
scas
fsubrp
add
pop
popf
in
inc
in
pop
push
mov
loop
xor
jb
xor
cmpsl
jae
dec
test
out
cmp
iret
push
mov
push
or
je,pn
stc
add
push
cld
add
add
jne
mov
xorb
mov
adc
mov
pop
imul
jns
dec
jmp
outsb
sub
add
mov
into
adc
jp
push
into
std
jns
dec
mov
inc
dec
inc
ljmp
scas
or
jo
arpl
add
mov
cmpsb
outsb
mov
dec
pop
out
push
scas
sbb
mov
in
sbb
cmp
inc
mov
xor
or
sti
std
lods
frstor
cmp
popa
lds
pop
sub
fdivs
imull
push
dec
xchg
dec
cmp
inc
and
jae
lcall
out
pusha
test
nop
iret
es
rorb
je
sub
xchg
mov
ljmp
loope
jb
aam
imul
ret
or
jns
mov
sub
adc
arpl
ret
movsb
dec
out
or
out
mov
adc
jmp
icebp
jnp
fnstcw
jne
jge
add
aad
and
pop
clc
lea
cmpsb
arpl
dec
jb
xor
ja
adc
mov
mov
fsts
push
testl
rclb
sub
push
cld
sbb
xor
stc
mov
mov
out
aam
cmp
xchg
out
aaa
mov
mov
push
lea
jg
inc
mov
lock
out
jmp
sbb
xchg
xchg
xchg
lods
scas
mov
fwait
stos
rcrb
or
add
out
int3
push
xchg
testl
add
pop
loop
in
das
push
movsb
testl
add
pushl
mov
aas
arpl
mov
adcl
popf
test
in
and
inc
inc
bound
xor
jp
bound
adc
dec
ja
ss
xchg
mov
andl
inc
xchg
popa
lods
pop
mov
pop
sub
sub
jb
sti
cld
push
daa
es
fidivs
lods
cwtl
gs
push
xchg
lock
std
out
clc
cmp
testb
xchg
orl
ficomps
lret
fisubs
and
les
insb
popf
repnz
das
inc
pop
add
pusha
push
repnz
inc
daa
sbb
mov
data16
repnz
mov
sub
xorb
cmpsl
dec
dec
sahf
pop
or
push
ja
xchg
xor
jge
aam
sub
sbbl
sbb
xor
rcll
mov
or
inc
cmc
std
add
arpl
ja
sub
adc
lods
jmp
aas
lret
jge
adc
adc
xlat
pop
sub
dec
cmpsl
and
sbb
inc
push
push
jo
cld
popa
pop
xor
xchg
insl
fcompl
data16
push
arpl
movsb
loopne
lods
fildll
mov
cltd
pop
lcall
push
rcll
push
jle
std
adc
lret
mov
test
fmulp
fildl
stc
jns
xchg
call
lret
mov
int
sahf
xchg
or
and
insb
pop
in
jnp
sub
lret
push
and
mov
insl
or
call
or
ljmp
shr
dec
pop
cmpsb
test
mov
je
dec
dec
jnp
cwtl
adc
jnp
jecxz
pop
das
das
pop
call
outsl
jg
js
lcall
add
insl
xchg
out
roll
mov
xchg
mov
sub
cmp
or
clc
loopne
out
imul
jp
lea
push
leave
xchg
mov
xorl
divl
add
sub
outsb
cmp
xlat
shlb
aas
insb
jg
jb
stos
xchg
mov
push
cltd
adc
mov
aad
test
xchg
jecxz
ret
fwait
call
aad
ret
sub
push
push
cs
sub
shll
iret
xchg
gs
sbb
pop
ljmp
lahf
adc
enter
gs
push
and
add
jmp
out
cmp
and
repz
jae
mull
or
ret
xor
testb
mov
popa
loop
add
fwait
call
jl
fs
xchg
iret
jecxz
and
out
cs
jmp
stc
xchg
dec
adcl
outsb
je
shrb
jb
lds
xorl
sbb
enter
mov
repz
ss
int
cmp
mov
ljmp
loop
pop
lahf
dec
ljmp
or
mov
ret
and
ret
mov
push
cli
cmp
mov
in
dec
add
xchg
mov
jo
repnz
pop
stos
jmp
les
hlt
loop
ss
rclb
sbb
jnp
push
mov
inc
jo
daa
out
adc
xchg
sub
fwait
sub
add
cmp
mov
mov
outsl
out
lret
lea
add
scas
mov
lahf
jbe
push
popa
xchg
mov
test
aad
fwait
jmp
lcall
jbe
xchg
mov
mov
and
push
inc
xchg
sbb
and
inc
mov
out
dec
mov
fsts
cmpsb
cmpsb
sahf
rclb
dec
add
mov
adcb
push
imul
sub
cmp
xlat
mov
cs
mov
test
stos
xor
jp
xor
inc
mov
stos
fabs
in
mov
pop
jecxz
cltd
std
or
push
es
jae
pop
jnp
xchg
leave
bound
jmp
mov
cmp
mov
mov
sbb
lahf
fiaddl
loop
sub
adc
mov
imul
loopne
outsl
cmpsb
movl
mov
lahf
les
push
ja
dec
dec
fisttpll
loopne
fistpl
decb
jle
xlat
adc
pop
stos
push
adc
popf
repnz
or
es
cmp
aas
sbbb
ja
mov
mov
mov
inc
pop
dec
sahf
icebp
add
jle
pushf
mov
or
adc
push
out
enter
sbb
icebp
cld
fmulp
mov
xorl
push
mov
dec
movsl
push
jns
jmp
xchg
adc
sbb
or
fstl
add
leave
mov
out
out
and
mov
xchg
fdiv
lods
adc
mov
jp
and
arpl
xchg
dec
adc
test
push
xchg
mov
arpl
movsl
and
jbe
shlb
stos
mov
sub
push
adc
cmp
rorl
jae
adc
inc
push
mov
movsl
mov
cwtl
dec
xor
nop
adc
jnp
add
hlt
mov
in
or
movsl
cltd
ret
subb
and
mov
push
jne
mov
ret
mov
popf
push
cmpsb
mov
add
shrl
dec
icebp
lock
pop
mov
imul
sbb
xchg
and
sbb
aas
mov
xchg
loope
push
mov
insb
aam
int
sahf
scas
add
pop
mov
mov
daa
rorl
lret
cmp
cmp
test
je
add
sub
sbb
and
dec
addl
mov
dec
sub
mov
mov
mov
xor
mov
pop
and
push
mov
jne
dec
sbb
loop
cmp
jb
push
pop
pop
xchg
sub
rorb
movsl
or
loopne
mov
jg
cmc
dec
movsb
das
xor
in
adc
fistl
push
lret
cmpl
mov
mov
dec
lods
jns
sub
mov
in
jl
movsb
xor
cld
scas
dec
adc
out
mov
das
mov
add
fwait
or
adc
cwtd
xlat
sar
mov
adc
jecxz
mov
adc
push
jg
in
stos
push
lahf
xor
scas
loopne
or
adc
fldcw
out
xchg
loop
nop
sbb
fisttpll
test
loop
cmp
mov
stc
daa
fisubs
mov
lea
fsubrl
movsb
cmp
icebp
pop
lret
add
pop
and
hlt
mov
jge
rcrl
adc
int
cmp
push
sti
adc
mov
cmpsb
push
les
cld
test
push
outsb
sbb
fistpll
das
data16
nop
inc
pop
jecxz
mov
push
and
push
iret
scas
loop
outsl
andl
cmpsb
mov
cld
xchg
sub
imul
test
cltd
xor
sub
jae
loop
imul
jne
adc
and
and
sbb
cmp
ret
and
push
inc
pop
lock
push
mov
clc
xchg
call
pushf
jecxz
jno
in
adc
xor
test
cld
aaa
and
icebp
push
mov
int3
cmp
cld
xor
das
hlt
or
aam
lds
dec
jns
add
adc
outsb
jbe
sub
popa
add
cmp
arpl
repz
jle
push
push
inc
rorb
ja
mov
mov
popf
js
test
sbb
push
movsl
cmc
jae
cmpsl
mov
ss
sub
jp
adc
inc
mov
ja
xchg
lcall
mov
out
popf
xor
lret
dec
xor
sbb
outsl
lcall
dec
cltd
or
xchg
mov
and
nop
dec
push
fwait
adc
xchg
js
lods
xorb
scas
stos
outsl
inc
add
push
imul
pop
lahf
xor
jmp
xor
icebp
cmpsl
popf
daa
jge
push
or
jae
stc
pop
pop
sbb
mov
push
push
xor
adc
mov
fld
aas
in
push
pusha
iret
mov
dec
pusha
jecxz
es
out
clc
cmc
sbb
in
sub
pop
icebp
stc
jne
mov
movsb
ficomps
loopne
and
add
push
mov
scas
pop
lret
jae
mov
cmp
sub
scas
stc
ja
mov
dec
cmp
ret
pop
sbb
daa
inc
pop
test
xor
dec
sbb
mov
push
push
aam
rorl
mov
inc
jno
push
aaa
aas
pop
adc
icebp
rcl
jae
sbb
das
jmp
push
cmc
rorl
fnsave
fisttpl
inc
adc
jno
adc
sbb
icebp
popa
testb
punpcklbw
out
cmpsb
dec
cmp
mov
outsl
xchg
in
mov
or
cmp
imul
and
filds
addr16
rorl
inc
mov
sbb
dec
iret
fwait
data16
push
lea
adc
jmp
shlb
scas
cwtl
inc
stos
je
les
loopne
filds
xor
push
push
cmp
fcmovnbe
inc
inc
sbb
and
insb
mov
pop
adc
iret
inc
andb
pop
out
mov
aaa
pop
sub
lea
nop
stc
adc
cmpsb
ss
and
dec
push
mov
lods
push
adc
sub
subb
lods
loopne
inc
cmp
dec
outsl
stc
stos
inc
mov
aam
jno
push
fnstsw
sbb
fistpl
fwait
inc
fcoml
sahf
jnp
mov
add
cmp
in
lea
and
dec
inc
push
ja
xor
inc
cmpsb
pop
outsb
js
xchg
jb
pop
ret
lds
gs
insl
add
daa
push
fwait
mov
cmp
ss
cmpsb
int3
cli
dec
cmc
inc
lods
xor
andb
dec
out
fisttpl
es
adc
cmc
push
stos
movsb
pop
test
icebp
insl
cld
xchg
ret
and
jg
ret
xchg
mov
mov
fnstenv
pop
mov
mov
mov
sbb
lahf
fildl
and
pop
sbb
adc
lds
rolb
jae
int3
shrl
test
fcomps
xor
push
mov
dec
jae
clc
push
pushf
js
xchg
lea
hlt
shrb
test
loopne
mov
mov
in
mov
cli
in
enter
loope
lods
lds
sub
lock
repz
mov
stos
push
inc
push
arpl
in
xor
mov
cli
aaa
xor
or
push
popf
adc
imul
loopne
fimuls
andl
push
xor
and
ljmp
stc
aam
imul
popf
inc
jle
les
or
lret
xor
sahf
mov
gs
mov
jp
cmp
imul
inc
movsl
jmp
xchg
xchg
and
mov
push
lods
inc
mov
fwait
add
ficomps
push
clc
fcomps
pop
cmp
mov
mov
stos
adc
xchg
test
jb
int3
pop
jmp
fwait
push
jae
lock
ja
mov
mov
dec
call
mov
lahf
lds
lea
xchg
adc
cmp
jp
sti
loope
jle
lcall
fdivl
stos
lahf
jae
pop
jae
andb
sbb
push
xchg
mov
jnp
aam
repnz
idivb
sub
mov
aaa
sbb
cmp
jmp
xchg
fildll
xchg
out
divb
repz
clc
iret
mov
xorl
les
jnp
icebp
push
xor
repz
pop
xchg
pop
jae
dec
push
fisttpl
lods
jl
mov
sti
lret
fs
push
frstor
lcall
pop
repz
push
jecxz
sbbl
sbb
dec
mov
xor
jae
or
add
or
mov
ss
iret
or
in
push
xchg
popa
clc
clc
pop
add
cwtl
lods
jp
and
loopne
inc
add
push
clc
cmp
adc
sbb
pop
mov
adc
gs
sbbb
les
or
lock
mov
clc
loop
xchg
insb
and
repnz
arpl
insb
leave
scas
ss
imul
sub
xor
movsb
mov
mov
lods
add
dec
or
cs
mov
mov
repz
and
flds
push
lock
mov
or
int
adc
inc
cmp
sbbb
jnp
or
addr16
sbbl
ljmp
call
sbb
mov
ljmp
dec
mov
in
jb
je
setne
mov
jb
addr16
loop
mov
mov
push
push
dec
lcall
push
or
sub
xor
fsub
mov
mov
jle
push
and
fwait
clc
cmpsb
mov
frstor
push
push
les
js
jle
mov
shl
xor
mov
mov
out
jnp
ss
stos
dec
adc
cmp
sub
mov
rorb
jae
mov
test
push
inc
shrl
inc
data16
cvtdq2ps
ds
sub
xchg
decl
xor
adc
inc
daa
push
dec
sub
push
adc
pop
lret
pop
xlat
lods
sub
push
addl
lret
arpl
sbb
lds
leave
inc
cs
sub
jmp
ljmp
add
data16
test
jo
mov
cmp
adc
lret
cltd
inc
pop
add
jb
jnp
mov
add
out
movsl
or
test
cmp
bnd
jne
jb
dec
scas
push
arpl
add
mov
sub
loop
jge
jne
jl
dec
pushf
movsb
xchg
cmp
mov
pop
ror
loope
mov
test
inc
dec
scas
into
popfw
negl
cli
push
dec
push
insl
push
pop
repnz
and
xorb
imul
adc
mov
or
add
cmpsb
xor
push
int
mov
and
cld
loop
pop
dec
lds
push
mov
sub
pop
ret
nop
jbe
cmp
and
pop
inc
scas
jp
fucom
icebp
pop
add
pop
data16
fldt
scas
insl
in
stos
mov
cmp
mov
hlt
out
sub
or
stos
adc
mov
or
dec
fsubs
add
pop
lahf
lea
push
dec
jge
pop
loopne
mov
repz
ror
mov
adc
icebp
xchg
mov
out
sbb
outsl
cmp
xchg
push
adcl
dec
mov
inc
jae
into
sub
jnp
mov
xchg
leave
mov
popa
push
cmpsl
mov
adc
lahf
lods
rcl
fnsave
cmp
jns
mov
outsb
fistpl
pop
testl
xchg
in
or
cs
cmp
testl
sub
xor
jnp
out
cmp
jno
fldt
repz
mov
test
jmp
mov
or
pop
dec
jmp
outsb
and
ja
and
pop
lods
adc
setbe
adcl
ljmp
jne
adc
add
pop
loop
hlt
test
mov
dec
ret
xchg
cmpsl
or
loop
xor
xorl
or
dec
and
mov
jg
loope
repz
inc
inc
or
ficoms
inc
pop
scas
xlat
jg
push
inc
push
xchg
aaa
sbb
out
push
divb
push
add
cmpsb
jo
imul
xchg
gs
cmp
xchg
or
sbb
iret
sbbl
jg
xchg
sbb
andb
cmc
repnz
push
mov
jnp
arpl
and
out
cmp
inc
push
in
mov
popa
xor
push
jg
push
sub
ljmp
sbb
call
ret
cmpsl
add
lret
sub
fadd
jno
lcall
or
xchg
xor
xchg
cwtl
fwait
xor
loop
jge
cmp
out
jbe
pop
and
inc
pushl
cmp
rorb
gs
cmp
loopne
pop
push
test
sub
or
push
dec
mov
pop
adc
dec
cmpsl
cld
idiv
lcall
mov
fstps
jbe
push
jp
jle
push
inc
je
or
icebp
test
mov
push
xchg
dec
fbstp
test
inc
dec
orl
jge
pop
mov
shrl
inc
shr
sub
xor
cmp
jb
or
xchg
dec
dec
jle
jne
xlat
push
loop
jecxz
in
xchg
dec
and
or
adc
inc
fs
and
xchg
push
repz
neg
dec
mov
sti
aad
mov
dec
dec
cmpsb
adc
xor
dec
sbb
mov
sub
test
jnp
popf
int3
rolb
cmp
sbbl
cmpsl
pop
std
aas
ret
xor
repnz
xchg
sbb
jae
mov
loopne
movsl
jmp
pop
add
in
neg
in
cli
and
cmp
lds
shrb
in
ret
xor
cwtl
jmp
lds
inc
mulb
imul
add
xchg
dec
in
mov
xchg
sub
sbb
hlt
out
in
lret
sbb
les
pusha
jbe,pt
sbb
repz
iret
pop
movsb
mov
mov
dec
ss
inc
shll
push
in
mov
mov
push
daa
out
xchg
negl
xchg
or
pop
fistpll
sub
cli
xchg
out
lcall
mov
daa
push
mov
jg
mov
cld
shll
mov
mov
cltd
insb
adc
cmp
jbe
xchg
sbb
push
inc
mov
add
mov
out
outsl
sbb
sbb
xor
xor
xchg
adc
addr16
jbe
jbe
sahf
loopne
push
sbb
rclb
hlt
xor
or
into
movsb
inc
xor
test
add
or
lds
fstps
mov
and
jmp
jne
push
inc
pop
into
pop
call
mov
or
ficompl
and
push
pop
enter
mov
xchg
nop
insb
cwtl
xor
fcoml
xchg
sbb
pop
movsb
adc
fwait
mov
je
aas
out
int3
jnp
cmp
inc
add
and
movsl
cmp
dec
pop
add
xor
dec
inc
mov
dec
cmp
xor
test
xlat
sub
test
jle
mov
adc
xchg
mov
cmpsl
xor
jg
mov
lock
outsl
leave
cmp
outsb
xlat
repnz
les
fucomi
dec
xchg
mov
pop
rcrl
mov
push
sub
jge
jb
es
push
add
dec
push
xorb
sbb
int
add
mov
pop
pushf
addr16
jns
mov
dec
and
push
jmp
inc
loope
xor
mov
aad
adc
arpl
inc
sub
ja
push
sub
pop
mov
dec
inc
ret
jne
pop
xor
ja
dec
pop
adc
cmp
bound
jbe
mov
mov
adc
mov
lock
ficoml
mov
push
sub
cmp
call
hlt
aad
inc
stos
es
enter
push
lret
cli
push
aaa
stos
stc
nop
sbb
clc
jle
lock
imull
adc
addl
repnz
jb
xor
rorb
icebp
dec
and
xor
in
jmp
xorl
dec
inc
fldenv
mov
or
inc
dec
lahf
in
sarb
xor
lret
int
or
fisubrs
addr16
fildl
or
clc
cmp
ret
dec
jno
add
jnp
cmpsb
or
push
popf
lea
aaa
fcmovnb
call
inc
in
fst
pop
enter
cmp
bound
outsb
outsb
xchg
iret
mov
mov
lahf
insb
push
adc
mov
jmp
int
push
dec
inc
mov
out
adc
loopne
jg
jo
or
jge
icebp
jo
xchg
sub
stc
in
inc
test
pop
insb
fstpt
fstsw
insb
enter
negl
xchg
dec
stos
fndisi(8087
aam
jns
cld
mov
test
and
or
add
mov
icebp
sub
aaa
fsubr
adc
mov
test
sbb
fcmovnb
lret
dec
pop
jmp
orl
mov
jle
imul
pop
nop
test
jbe
sub
int
pop
pop
cmp
xor
sbb
aad
ss
xor
and
jae
xor
adc
dec
ficomps
push
gs
jne
push
cwtl
push
push
push
and
or
es
out
or
adc
jo
mov
jno
insl
movhps
xchg
aas
sahf
xor
mov
ss
push
sbbl
mov
fdivr
xor
lcall
xor
sub
ds
sub
iret
aad
xchg
push
mov
sub
nop
frstor
shlb
xchg
xchg
and
insl
bound
int3
xchg
push
xchg
fisttps
pop
jne
sub
roll
sub
push
iret
xor
test
test
mov
sbbl
inc
mov
adc
ljmp
enter
das
stc
test
mov
test
jle
out
icebp
pop
xchg
xor
iret
and
pop
mov
xchg
aas
sahf
rolb
int3
inc
loop
call
lret
or
sub
or
icebp
push
cmp
stc
sbbl
pop
mov
test
gs
pop
imul
or
repnz
or
add
mov
xor
cmpsb
adc
jmp
pop
inc
mov
aas
cmp
in
cmp
daa
int3
int
cmp
inc
add
add
pop
icebp
arpl
es
xchg
aad
in
out
mov
inc
popl
mov
jns
pusha
ret
mov
mov
sbb
out
lods
imul
int
jo
mov
sub
inc
xlat
loope
mov
push
cld
pushf
dec
mov
ror
cmp
xor
repnz
lock
fidivl
push
jg
int
mov
fwait
cmpsl
xor
and
sub
scas
lods
test
js
imul
jg
jae
mov
inc
rcll
xorb
movsl
nop
pop
int3
sub
insb
shll
mov
and
int3
xchg
xchg
ficoml
cmpsb
loope
add
add
out
cltd
sbb
jns
mov
pusha
loope
pushf
lock
add
sub
pop
xchg
test
and
test
loop
xchg
leave
call
jo
jg
dec
and
stos
aas
les
aaa
sbb
fistps
sbb
clc
in
inc
xchg
sub
push
ret
int
and
imul
into
inc
es
mov
into
mov
ror
xlat
xlat
sub
add
aam
outsl
mov
shlb
cmpsb
or
repnz
jb
imul
jg
dec
shlb
push
sub
jge
push
stos
add
jl
sbb
sub
out
pop
mov
mov
mov
inc
jle
fmuls
inc
cmp
pop
cmpsl
sbbl
xor
pop
in
sub
adc
data16
push
fwait
mov
outsb
movsb
mov
cmpsl
xor
mov
xor
xor
mov
add
pop
dec
popa
jno
repnz
mov
dec
loop
xchg
push
enter
cld
stc
cwtl
nop
clc
mov
lods
rcrl
mov
insb
lahf
cmpsb
mov
cs
push
xchg
mov
icebp
dec
push
js
lea
cmp
fcomps
inc
add
cwtl
dec
lcall
sahf
into
imul
inc
aas
mov
mov
js
js
rcrb
mov
sbbl
dec
and
pop
pop
mov
or
call
dec
je
jnp
std
jnp
ficoms
jbe
dec
cltd
or
push
dec
pop
xchg
notl
pop
loop
int
push
icebp
lea
ds
inc
inc
lret
dec
adc
test
and
scas
in
movsb
gs
push
icebp
lret
push
lret
mov
cmp
xchg
ja
or
pop
movsb
sbb
lods
cwtl
movsl
pop
imul
and
in
rcr
jno
push
inc
outsl
lahf
arpl
sbb
fisttpll
fnstenv
mov
xchg
adc
fdivr
cmp
out
sub
lock
and
jecxz
add
lods
or
fldlg2
inc
adc
xor
daa
dec
fucomip
cs
fisttpll
push
insl
or
dec
imul
in
outsl
fistps
and
mov
ja
lret
lea
dec
adc
sbb
in
lea
enter
mov
pop
sub
fmul
mov
add
hlt
jg
leave
mov
pop
mov
in
decb
out
mov
sti
arpl
xchg
pop
mov
dec
jb
out
cld
jp
adc
adc
fnsave
mov
xor
push
add
insb
pop
or
mov
mov
cmpsb
push
daa
test
mov
shrl
cltd
sbb
mov
inc
sbb
into
sbb
and
nop
call
loop
mov
repnz
dec
sahf
xlat
fsubrl
mov
jp
cmp
and
xor
aad
fmuls
pop
cmc
cmpb
sbb
in
addl
sub
std
in
xor
ret
pop
aad
mov
lea
inc
or
jle
mov
mov
push
jmp
push
test
push
jae
push
in
push
and
lods
mov
dec
and
in
gs
dec
and
outsl
adc
lds
pop
xor
or
lea
je
mov
cmpl
test
adc
fidivrl
inc
inc
roll
jnp
cwtl
mov
dec
add
sbb
sbb
mov
nop
mov
xchg
jae
test
mov
in
add
and
xchg
inc
cwtl
add
fnsave
cmpl
loopne
mov
dec
insb
push
cmc
nop
int
and
lret
or
jge
movsb
xchg
movsb
mov
ret
aam
arpl
cwtl
push
jnp
repz
inc
rolb
sahf
in
movsb
pushf
push
insl
jg
jb
int3
push
int
int
mov
repnz
fs
nop
mov
and
cmp
dec
popf
mov
sarb
adc
adc
ss
xor
lock
jbe
sub
out
ret
push
push
mov
push
sarl
aaa
inc
addr16
jnp
jno
pop
arpl
push
jnp
xchg
out
mov
movsb
xchg
mov
mov
fisttps
loopne
movsl
emms
lret
aad
mov
mov
or
hlt
aad
sub
cld
add
cwtl
sub
lret
push
icebp
dec
xchg
push
and
stc
testb
fildl
and
lds
lods
sbb
popa
sbb
xchg
inc
ds
addr16
mov
push
cmp
andl
xchg
test
lds
add
imul
inc
cwtl
inc
ja
imul
cs
sbb
test
aas
in
xlat
mov
cmp
nop
cmp
cmpsl
pop
imul
pushf
in
jns
jb
iret
movsb
and
mov
scas
and
xchg
mov
aas
jmp
mov
bound
mov
sub
insl
lods
mov
jmp
add
adc
lds
jg
in
jmp
xor
fs
sbb
sbb
aas
xchg
and
xchg
mov
cmp
and
test
xor
lret
arpl
mov
je
sbb
add
out
daa
int
jae
into
inc
pop
pop
adc
je
sub
sti
xchg
ret
xor
in
jo
mov
in
cmp
pusha
and
lret
lods
push
pop
dec
jle
fcomip
je
mov
test
movsb
push
mov
xchg
imul
inc
dec
jg
scas
add
xor
add
lea
xchg
pop
mov
push
mov
jb
fnsave
mov
and
rcll
mov
cmp
in
data16
call
sahf
push
cs
xchg
fcomps
mov
jae
notb
inc
pop
cmp
lods
in
lods
fisubrl
xlat
mov
pushf
mov
ret
ret
iret
fcompl
jge
sbb
test
repz
mov
sub
xor
and
and
push
fmull
pop
xor
mov
not
sbb
fidivs
push
add
test
sub
aas
int
add
adc
ss
out
mov
and
movsb
shrb
xchg
js
xchg
push
loope
push
in
test
test
aam
call
ret
test
outsl
test
iret
in
outsb
dec
xchg
push
jno
jge
push
dec
sbb
pop
aam
stc
popa
loop
add
inc
addb
fisubl
inc
xor
pop
mov
out
mov
in
sub
into
push
add
mov
in
inc
and
bnd
mov
pop
adc
adc
or
in
xchg
xchg
mov
js
js
jl
hlt
gs
cmp
nop
mov
cmc
push
outsb
and
aad
or
test
stos
mov
pop
es
cltd
inc
jl
push
xlat
lods
add
addl
fldt
sbb
xlat
fldln2
les
mulb
pop
lret
or
loop
sbb
repz
mov
xchg
clc
sahf
sub
mov
jge
xor
inc
mov
mov
xor
sub
mov
test
add
loop
xor
js
into
pop
shlb
cmp
loope
mov
cmp
rcrl
sbb
xchg
pop
jg
inc
enter
dec
push
sbb
xchg
xchg
xchg
ss
stc
mov
lods
lret
loope
dec
ret
add
lods
loope
insl
stos
push
and
mov
loope
jno
imul
jne
aam
lret
cmpsl
jnp
inc
fcoms
adcl
inc
loope
mov
sub
outsb
cs
jmp
lcall
mov
popf
push
mov
mov
jp
cmpsl
js
or
push
gs
stc
fldl
and
mov
pop
mov
insl
or
push
mov
enter
and
add
adc
aam
movsb
dec
push
cmp
mov
out
fsubrl
lea
push
dec
sbbb
lcall
jo
aad
push
xchg
das
pop
xchg
test
mov
add
cwtl
mov
into
fidivrs
mov
lcall
lret
imul
movsl
fistpll
loop
aaa
push
insl
xchg
sahf
pop
adc
adc
add
adc
test
sarb
divl
or
fsts
jne
movsb
cmp
cmp
inc
popa
xchg
mov
cmp
lahf
es
cld
jl
and
add
test
rorb
test
cmpsl
ljmp
fidivrs
fnstenv
inc
adc
lahf
cli
inc
and
jg
shl
sbb
mov
or
mov
into
xor
cmpsl
imul
or
aas
jne
mov
pop
add
cwtl
insb
cmp
iret
mov
data16
jmp
fimuls
pop
jle
lock
sbb
movsl
lcall
or
aad
and
inc
or
dec
stc
imul
stc
sbb
rclb
dec
mov
cmp
popf
sbb
xor
cmc
nop
inc
cmp
inc
fstl
shrl
push
lods
add
fsubrs
jno
jo
pop
pop
loopne
xchg
mov
scas
sub
and
xor
cmp
lret
push
cmp
mov
in
pop
adc
fstpl
push
push
aaa
push
fmull
int
jae
xchg
sti
aaa
test
pushf
cmpsb
cmpsb
imul
pop
push
lods
daa
adc
mov
shr
inc
add
push
adc
push
xor
jae
mov
pop
in
xchg
push
aaa
mov
out
pop
fists
mov
in
aam
xchg
mov
mov
pushf
push
mov
xlat
sahf
pop
les
enter
pusha
cmp
mov
pop
test
push
loop
push
mov
xor
push
jnp
sub
es
sbbb
popa
outsl
popa
stos
scas
hlt
cmp
je
dec
dec
sub
mov
outsb
movsl
pop
data16
out
ffree
push
lret
inc
push
xchg
inc
jae
push
sub
or
or
scas
push
mov
scas
add
ret
aas
aam
adc
add
mov
in
lods
mov
in
push
test
or
mov
pop
loope
nop
int3
xchg
add
cld
inc
sub
mov
sti
jns
add
sbb
dec
mov
cmp
daa
stos
ja
fcompl
jno
pop
inc
popa
jmp
mov
xchg
jl
xchg
pop
jl
dec
push
cld
add
and
adc
sub
enter
or
loopne
mov
pop
jno
sub
xchg
push
mov
aad
dec
fimull
xchg
jb
test
sbb
fnstenv
sti
push
jno
aaa
sbb
repnz
addr16
jmp
mov
cmp
sub
jns
popf
jo
jmp
fwait
adc
cmp
ljmp
jae
xor
jo
jle
push
shll
mov
add
adc
movsl
ds
test
sbb
jbe
push
fwait
sub
out
or
add
sbb
adc
data16
sbb
loope
push
out
mov
or
xchg
pop
popf
ficoml
or
pop
lock
aad
mov
jg
cltd
jge
add
iret
aad
jae
jns
shl
pop
rcr
cmp
stc
movsb
arpl
xchg
out
shll
xor
and
cmpsb
push
outsb
pop
mov
sbb
sub
sahf
pop
addr16
lds
mov
xlat
push
or
push
cwtl
sbb
cmp
mov
adc
mov
jg
mov
sbb
lds
mov
daa
les
sub
cwtl
push
mov
call
mov
add
lret
pop
lahf
pop
cmp
into
jge
cli
dec
add
push
mov
mov
test
pop
testl
sbb
dec
clc
dec
cmc
movsb
fcmovb
pusha
iret
out
pop
insl
leave
adc
xor
jmp
jge
lret
out
aas
in
push
lods
hlt
stc
inc
or
xchg
dec
mov
mov
cmpl
insb
xchg
push
xor
jge
mov
in
mov
fsubs
fadds
jne
pop
mov
cmp
jmp
push
sbb
repz
aad
mov
test
cmc
or
cmp
in
sub
fstpt
popl
push
xchg
jnp
xor
or
or
in
fldenvs
jo
sub
inc
and
pop
aaa
or
jp
or
outsb
add
jmp
add
sbb
nop
enter
mov
jb,pt
cmpl
loop
jo
and
sbb
jg
xlat
mov
gs
add
or
push
ror
out
rolb
jmp
neg
sbb
jmp
mov
cmp
jbe
scas
decl
adc
mov
pop
and
xor
js
call
jne
adc
daa
mov
iret
add
mov
or
sub
push
imul
stos
stc
rorl
jmp
adc
xlat
inc
push
je
test
push
orb
jns
pop
mov
push
mov
push
cwtl
or
adc
ds
dec
jge
or
cmp
xchg
cmpsl
insl
mov
scas
pop
xlat
out
int
cmpsl
cmpsb
andl
imul
out
test
fbstp
repnz
push
jmp
lret
mov
and
pop
es
fisubrs
push
or
iret
lods
jge
mov
fistpll
push
push
lods
adc
jae
fstp
or
cltd
out
push
enter
xchg
mov
dec
loope
sub
sub
cltd
lret
loopne
rep
mov
fildl
aaa
and
push
sti
dec
pusha
lods
pop
imul
sbb
shrl
pop
shl
notb
icebp
es
fwait
lock
aad
xor
jecxz
jl
shlb
setno
loope
inc
cli
mov
mov
sub
dec
stos
fldlg2
jp
push
shl
out
iret
xchg
sbb
push
fwait
inc
loop
sub
iret
mov
inc
mov
sub
cmp
mov
mov
mov
mov
pop
push
cmp
pop
pop
int3
negl
cmp
lds
mov
in
shrb
scas
and
jns
ret
out
in
sub
subl
insl
dec
and
or
mov
in
jnp
dec
sar
faddl
or
mov
lret
cmp
mov
adc
cmp
out
lahf
adc
std
or
pop
in
add
or
push
lods
aas
push
push
loope
xor
dec
mov
dec
cli
mov
rcr
insb
test
shrb
jg
divl
cmc
in
lock
xor
add
pop
xchg
call
leave
mov
add
inc
cwtl
lea
xor
pop
das
popa
inc
loope
xchg
xor
lds
test
pop
and
jle
flds
scas
or
push
loope
adc
out
pop
pop
bound
add
shl
bound
pop
movsl
aam
add
in
cmc
test
inc
jo
push
pop
fwait
iret
stc
cwtl
shlb
mov
pop
push
clc
shll
add
shlb
popa
push
arpl
icebp
daa
cmpsb
icebp
mov
inc
inc
inc
push
lea
jae
int
addl
dec
movsb
sub
hlt
pop
ja
rorb
inc
loopne
in
addr16
push
scas
nop
iret
pop
jbe
add
adc
xor
jle
popf
ficoml
jbe
dec
jle
push
push
sbb
incl
xchg
push
imul
loope
xchg
fisttpll
ljmp
aaa
dec
and
ret
add
mov
push
xchg
std
pusha
jmp
xor
movsl
pop
fstl
adc
lahf
adc
int
cmp
hlt
cmpsb
aaa
mov
fists
lcall
ljmp
test
mov
in
adc
call
jnp
jb
and
mov
fwait
mov
mov
in
push
dec
sub
jge
jbe
jl
sahf
aaa
jne
or
cmp
jno
and
dec
dec
sub
test
dec
cld
xchg
jns
push
int
xchg
mov
enter
xlat
mov
dec
out
test
mov
lock
push
int
test
in
ficoms
cli
int3
and
ds
call
movsl
xchg
mov
sub
addr16
sbb
ljmp
jae
adc
xchg
addb
or
stos
jl
sbb
mov
adcb
nop
insb
je
out
mov
lods
mov
stos
sub
and
push
int3
push
or
ljmp
pop
lcall
mov
add
xor
or
sbb
adc
rorb
dec
pop
dec
out
pop
fwait
push
std
mov
aaa
mov
fwait
adc
pop
push
lea
rclb
sbb
jnp
iret
push
jmp
bound
add
iret
test
lods
int3
push
mov
jge
outsl
push
dec
cmpsl
rcrl
xor
cs
sub
mov
sbb
bndldx
xlat
inc
in
cmp
loope
jae
movsl
add
cli
jno
sqrtps
inc
into
mov
xchg
jae
xor
mov
aaa
pop
das
out
leave
push
cmc
push
ret
push
insl
sub
mov
xor
xor
push
call
mov
dec
js
js
cwtl
mov
sub
call
push
push
xchg
pmulhw
xchg
push
or
dec
mov
sub
cmp
aas
mov
and
add
cmpsb
and
lods
invd
adc
xchg
ja
mov
xor
cld
rcrb
cmpsl
pop
loope
test
cs
xchg
nop
imul
loop
push
aaa
jmp
lea
scas
add
stos
sbb
lret
jmp
or
test
mov
add
add
loopne
sub
inc
hlt
inc
das
fwait
xor
dec
xor
mov
and
jns
ret
mov
sbb
push
testb
adc
repz
je
leave
stc
pop
push
shl
cmp
cmpl
movaps
mov
push
ret
cmc
pmuludq
ds
idivl
pop
mov
jb
mov
cltd
push
test
mov
pop
sbb
inc
mov
ljmp
fldl
mov
into
fldt
push
inc
xchg
mov
jle
into
loopne
or
xchg
jmp
stos
mov
xor
inc
fildl
arpl
cmp
lret
icebp
subb
insl
pop
push
repnz
mov
daa
sub
mov
inc
or
cli
ja
push
pop
nop
movsl
insb
jg
jnp
sar
ret
inc
pop
addb
sbb
jno
fmull
add
or
add
sub
orb
fisubrl
mov
int3
fadds
add
inc
aas
mov
push
cmp
inc
push
jbe
lcall
mov
aam
jne
cmp
int
and
std
sbb
add
jnp
pop
xchg
adc
xor
imul
in
enter
xlat
xchg
sbb
mov
lock
test
loopne
iret
movl
ljmp
push
inc
push
cmpsl
fwait
in
dec
push
rdtsc
mov
sbb
mov
mov
jb
push
cmpsl
into
fisttps
pop
jmpw
jnp
movsb
setle
pop
incb
fistpll
or
cs
out
mov
shl
dec
daa
adc
jnp
stc
outsl
pop
dec
test
cmp
add
push
mov
aaa
bound
mov
in
inc
push
imul
sahf
cmc
shlb
jmp
divl
fwait
cmp
push
stc
mov
int3
pop
adc
push
jne
mov
push
or
inc
aam
adc
loope
inc
cmp
in
mov
fldcw
jg
idivl
idivb
lret
test
or
scas
xchg
incl
jmp
inc
dec
xchg
imul
inc
and
adc
stc
test
dec
dec
insl
aas
pop
data16
addl
dec
push
mov
add
add
inc
inc
xorl
jg
push
push
inc
jae
push
jo
jno
mov
mov
inc
mov
aas
movsb
jecxz
cmp
inc
adc
out
subb
dec
inc
inc
adc
cmp
hlt
xchg
mov
ret
mov
mov
ret
sub
and
mov
dec
add
popf
loop
fidivrl
pop
mov
and
pushf
and
mov
fdivs
sub
cmp
jbe
and
dec
push
jg
xchg
fimull
dec
jl
cld
les
dec
pop
inc
mov
push
dec
inc
clc
out
sub
int
pop
imul
sub
xchg
call
jns
or
fiadds
add
sbb
dec
sbb
mov
cmpb
and
test
popf
popa
je
xchg
repnz
add
into
xlat
loop
mov
jl
adc
push
push
gs
and
mov
int
xor
mov
rcrb
mov
gs
lret
loopne
das
inc
notl
inc
fdivrs
pop
jnp
xchg
shll
push
popa
enter
arpl
hlt
out
add
pop
sub
jns
cmp
inc
imul
sub
pop
mov
popf
lds
xchg
sbb
pushf
sti
xchg
adc
jne
cltd
sbb
in
xor
out
jno
pop
inc
sbb
nop
aad
jo
mov
mov
int
test
or
das
aaa
push
adc
pop
push
shl
inc
inc
fchs
adc
pop
test
mov
pop
sbb
inc
popf
jnp
test
and
jecxz
jbe
cmp
mov
mov
push
orb
and
into
and
push
xor
subb
xor
adc
xor
jo
lahf
xor
jno
sbbb
in
push
mov
inc
adc
test
lods
decb
cmp
out
andb
cmp
fucomi
ror
add
mov
or
mov
roll
fucompp
sbb
lret
add
push
gs
cmp
sbb
xor
dec
mov
cmp
jle
xor
fs
xchg
std
fsubl
orl
sbb
stos
fstp
adc
decl
push
dec
pop
sahf
ss
jb
imul
into
sahf
sub
dec
fwait
sub
mov
imul
xor
sub
jo
dec
mov
cmpsl
xor
int
cld
sub
push
mov
rcrl
mov
rcll
jg
imul
inc
jg
cmp
call
sbb
aam
push
ficoml
dec
lret
outsl
adc
sbb
push
inc
fcompl
xor
pop
xor
lds
daa
inc
pop
inc
adc
loope
aas
pop
fmul
and
in
sbb
gs
add
pop
xchg
popf
outsl
lret
jno
xor
or
dec
ja
mov
pop
lcall
push
ret
in
nop
fistpll
dec
pop
xchg
push
gs
retw
out
and
add
in
jl
inc
test
repnz
cmp
int
or
inc
ret
push
or
mov
fwait
stos
cltd
divl
mov
repnz
movsl
popf
mov
sub
rcl
decl
push
pop
dec
pop
xchg
sub
cmp
push
mov
into
repnz
js
in
jae
jbe
and
adc
nop
sbb
inc
fsubrp
sti
outsl
je
mov
cs
and
mov
pop
std
in
pop
cld
pop
xorl
rcrl
adc
and
mov
aas
cmpsl
lret
push
inc
adc
lret
cmpsb
mov
mov
jnp
mov
jnp
add
jb
pushf
mov
mov
sub
push
in
xor
sti
jmp
mov
sub
lods
orl
jnp
in
movsl
mov
or
adc
jmp
negl
nop
cmpl
ret
inc
xor
adc
sub
inc
sbb
mov
push
mov
ret
inc
scas
mov
roll
ljmp
cwtl
out
adc
jle
aad
cli
lcall
mov
aas
lds
into
sbb
sub
das
pop
lahf
fidivrl
es
outsb
xchg
inc
and
mov
outsb
filds
mov
fadd
xchg
pushl
scas
push
clc
mov
add
adc
xchg
dec
cmp
popa
lret
mov
leave
xor
lods
add
sbb
loope
inc
and
js
mov
xchg
xor
mov
test
push
dec
mov
inc
rorb
sub
filds
pop
cli
pushf
or
sbb
inc
imul
test
dec
add
insb
adc
add
mov
pop
jnp
jo
es
xor
or
mov
jmp
clc
jle
xchg
cmp
mov
pop
dec
add
sti
or
loopne
aas
pop
add
cmpsb
stos
mov
add
xchg
adc
lods
rcr
cli
leave
dec
and
iret
inc
mov
mov
sub
push
rcr
mov
and
sbb
pop
rcrl
dec
xchg
cmpb
sbb
mov
aaa
int
cld
lods
in
add
mov
or
mov
push
pop
sti
xchg
imul
push
je
adc
fcompl
inc
test
sbb
dec
ret
push
adc
pop
rcll
aas
xor
mov
inc
sahf
lods
mov
hlt
in
add
test
test
mov
cwtl
add
fdivl
xor
xor
lcall
scas
es
inc
cmp
mov
xchg
sub
or
jns
iret
inc
cwtl
pusha
pushf
ljmp
repz
lock
test
jmp
dec
jecxz
fbld
inc
jmp
mov
sbb
js
insl
lahf
dec
or
inc
jae
xor
sbb
jno
xor
test
push
cwtl
fdivl
add
push
push
inc
les
sub
rcll
mull
pushf
addr16
add
in
fcoml
sub
push
out
aas
fiadds
xchg
dec
pop
jne
adc
das
nop
lret
pop
imul
sbb
xor
push
cmpl
xorl
pop
xchg
jmp
push
push
push
mov
int3
fiadds
in
adc
jge
adc
and
rorl
push
mov
insl
cld
mull
mov
jmp
movsb
mov
jl
in
sti
test
outsb
lret
sub
jg
les
mov
or
arpl
flds
ret
in
daa
pushl
sbb
or
rolb
inc
or
lcall
xchg
aad
mov
or
and
mov
sahf
stos
movsb
call
arpl
lret
fdivp
fistpl
cmpsl
jae
sub
psubw
clc
sub
mov
inc
push
nop
test
inc
daa
mov
fistps
pushf
add
push
push
add
xor
jne
mov
addb
dec
cs
repz
cmc
ret
fisubrl
sahf
in
movsb
pop
pusha
repz
int
sahf
dec
jmp
push
es
std
mov
or
aam
xor
cmpsb
and
int3
add
mov
repz
mov
sbb
mov
or
loope
stos
and
jns
add
mov
push
xor
push
pop
enter
pop
xchg
cld
fwait
icebp
mov
add
aaa
cmc
pop
ljmp
stos
test
mov
enter
aas
dec
adc
jno
sbb
add
xor
dec
mov
mov
repnz
pop
leave
inc
shr
sub
leave
sub
cmpsl
dec
add
scas
jnp
jo,pn
call
xchg
sub
aaa
sbb
cmp
scas
adc
xlat
push
andb
rorl
outsl
inc
cmp
jp
ret
pop
sub
xchg
in
hlt
sbb
push
pop
mov
xchg
jl
jns
adc
lds
sbb
jne
dec
mov
inc
movl
add
pop
jecxz
add
out
test
mov
dec
add
lea
test
pop
mov
cmp
cs
scas
lret
imul
icebp
mov
sub
cmp
sub
in
mov
xchg
and
arpl
mov
sbb
push
in
test
mov
jle
cli
mov
pop
sub
dec
push
dec
jae
mov
fldl
dec
jb
enter
popf
std
cmp
cmp
lahf
or
rcl
dec
test
inc
insb
js
sbb
imull
or
lret
lret
ja
shll
aad
bound
or
mov
mov
cwtl
je
orl
mov
rcrb
fs
rolb
arpl
or
shll
int
pop
fcomip
popa
xchg
jae
lea
outsl
call
jno
fdivr
adc
pop
mov
popa
fxch
jae
imull
mov
xor
jmp
mov
mov
dec
in
stc
stc
imul
cmp
or
push
inc
mov
push
mov
scas
mov
dec
jle
xchg
xor
push
imul
cmp
push
into
stos
xor
int3
xchg
mov
icebp
outsl
jns
mov
adc
sbb
adcl
and
call
dec
dec
imul
fildl
shlb
movsl
dec
in
leave
jle
push
lods
enter
push
jbe
mov
std
pop
push
push
imul
dec
and
jnp
add
std
xchg
orb
jbe
mov
stc
in
popf
enter
gs
push
jg
stos
or
stc
lahf
lret
dec
mov
test
cmp
lods
and
mov
mov
mov
jp
xchg
scas
int3
popl
cmc
mov
mov
sahf
or
lea
ljmp
fldl2t
cmpsl
cwtl
xor
outsl
hlt
dec
push
lock
out
out
cmp
ss
lock
xor
fs
inc
inc
adc
and
dec
and
in
mov
fcmovbe
lcall
ret
pushf
inc
shrl
movsl
ret
imul
lods
dec
xor
fmul
or
hlt
imul
mov
push
in
in
jmp
test
jbe
jns
push
out
sub
js
jmp
mov
adc
jecxz
add
inc
ret
scas
loopne
scas
push
mov
xchg
push
jge
xor
xchg
movsb
pop
cwtl
cmpsl
nop
movb
xor
or
int
dec
loop
ficoms
lahf
inc
jnp
ja
mov
out
xor
mov
hlt
andb
push
inc
sub
pop
jnp
sub
lods
xchg
lcall
xchg
lcall
lahf
in
andb
dec
mov
pop
shlb
in
mov
aad
ret
lret
clc
subb
push
ja
mov
loope
inc
dec
pop
iret
add
jp
jae
cld
lcall
inc
shll
out
xor
jb
mov
fnsave
dec
outsb
xchg
push
cmpsb
daa
insb
xor
addr16
cs
arpl
adc
mov
aas
mov
push
cmpsb
and
or
fstpt
addb
in
les
out
xor
sbb
aam
js
bound
push
or
inc
stos
fdivr
jns
aam
clc
jns
cmp
movsb
dec
sub
push
daa
mov
jbe
xor
and
add
adc
push
fistps
insl
test
or
xchg
ljmp
icebp
adc
adc
sti
xlat
popa
cltd
cmp
adc
inc
cmpsl
ffree
cmpsl
mov
pop
jae
and
stos
gs
cli
shlb
cld
xor
hlt
push
roll
mov
lret
fwait
and
xchg
sbb
pop
sbb
pop
into
ljmp
fimull
jecxz
sbb
fimuls
test
pop
adc
sub
int
imul
pop
xchg
jo
jno
inc
dec
jecxz
imul
mov
nop
lret
dec
push
pop
enter
mov
mov
sbb
push
inc
push
out
pop
jecxz
and
enter
jo
inc
mov
inc
jo
jo
mov
jbe
fistpll
inc
xchg
mov
daa
lret
bound
jl
adc
cmpsl
lods
inc
adc
sub
pop
lods
or
push
inc
fistpll
in
scas
pop
icebp
inc
jno
push
pop
mov
lds
iret
push
push
scas
sti
push
mov
ficoml
jg
repz
subl
enter
sbb
movsb
adc
mov
outsl
nop
jge
xor
sub
int
ja
lods
loope
jle
sub
fisubl
ja
push
aas
ss
jmp
negl
push
fwait
bound
or
arpl
push
inc
loopne
daa
ja
sub
xorb
loop
imul
mov
and
push
push
test
scas
and
sahf
daa
loop
mov
aaa
push
dec
fs
cmp
imull
shl
dec
push
outsb
jg
or
int
repz
cmp
push
adc
sbb
frstor
push
jae
jmp
lods
aad
gs
xlat
xchg
cmpb
inc
shr
loopne
push
mov
add
mov
sub
outsb
mov
das
mov
xchg
mov
push
mov
cltd
jae
test
and
dec
sub
rol
xchg
cli
mov
mov
lcall
push
mov
outsb
dec
imul
out
jp
fstl
cmp
cmp
cmp
mov
add
adc
sub
jb
imul
outsb
adc
outsb
cwtl
jge
cmp
int3
and
mov
mov
add
rcrl
loopne
rcll
cmc
cmp
stos
dec
ret
sbb
mov
push
inc
xor
sti
lcall
ja
dec
xchg
ja
mov
mov
push
mov
mov
xchg
out
sbb
push
mov
add
hlt
leave
pop
lds
shr
dec
xor
outsb
das
in
add
stos
pop
daa
sti
dec
xchg
mov
enter
stos
popa
fcompl
pop
les
sbb
push
or
jle
into
leave
dec
add
push
push
test
dec
scas
push
and
and
push
mov
push
jg
sbb
ret
inc
pop
cmpsl
xor
jl
cmp
mov
arpl
sub
xor
fistps
mul
or
sub
jb
mov
dec
push
iret
pop
js
imul
imul
inc
and
sbb
xor
adc
mov
jg
push
outsl
pop
push
pop
sahf
cmpsl
pop
aad
sarl
stos
and
das
jne
push
dec
mov
add
or
jecxz
pop
scas
or
push
dec
xlat
orb
hlt
or
ja
cmpsl
fsubp
out
mov
ds
mov
cmpsl
outsl
es
mov
lahf
add
dec
xchg
jb
jb
pop
repnz
outsl
xchg
xchg
out
xchg
xchg
mov
sbb
fdivs
adcb
cmpsb
mov
sub
outsl
pushf
into
push
je
push
inc
pusha
rol
xor
jb
cmp
filds
add
pop
add
mov
mulw
push
mov
inc
jnp
lods
loopne
inc
cli
jle
sbb
fiaddl
jge
notb
js
lret
inc
push
call
sub
sbb
or
inc
mov
mov
fimuls
fnstenv
imul
dec
mov
test
aas
ja
xchg
fcompl
mov
stos
jbe
in
sti
int3
push
and
sbb
enter
pushf
inc
fildl
xchg
dec
loope
pop
adc
gs
dec
popa
pop
jbe
movsb
xchg
movsb
sahf
mov
popf
adc
aam
shlb
dec
loopne
arpl
jb
mov
fld
xchg
mov
jmp
and
sub
ret
into
mov
outsb
in
mov
roll
mov
mov
xorl
mov
mov
aam
cmpl
dec
jne
gs
push
aas
nop
jg
insb
pop
int3
dec
subl
mov
ret
jns
fisttpl
pop
ss
fidivs
sarb
mov
faddl
repz
mov
cs
out
mov
pop
cmp
stos
and
lret
adc
pusha
imul
rclb
cmp
ss
and
lret
rcl
jno
ljmp
jle
test
sub
jmp
ret
xor
ss
push
js
aaa
outsl
xchg
insb
out
ja
pop
cmpsb
rolb
jne
cld
mov
icebp
out
add
data16
cmpsb
jg
xchg
into
popf
adc
iret
lds
sbb
cmp
adc
lods
ja
jae
imul
cmp
push
cld
loop
cmpsb
xor
out
es
xor
xlat
xchg
xor
es
popf
dec
decl
mov
jmp
xor
sbb
inc
js
lods
pop
es
dec
pop
mov
or
mov
cmp
popl
not
dec
fsubrs
pshufw
pop
lahf
or
aam
fsubl
fneni(8087
scas
clc
call
jo
push
dec
pop
outsb
mov
adc
cltd
imul
mov
and
pop
or
aaa
xor
pusha
fs
sub
bound
inc
pop
rclb
and
fsubs
in
jle
jne
daa
inc
out
fnsave
cs
xchg
fimuls
je
jg
xchg
dec
sub
inc
inc
pop
shlb
pop
dec
sub
dec
mov
loope
mov
xchg
jmp
pop
rorb
adc
jge
gs
cli
push
lahf
xchg
insb
call
icebp
inc
loop
mov
leave
jnp
jg
xchg
jge
ljmp
mov
jge
cltd
xor
stos
xchg
rcrb
shl
popf
xchg
loop
leave
adc
adc
fstpt
call
add
aas
mov
arpl
pop
je
and
mov
test
cmc
cmpsl
fidivl
incb
shll
pop
enter
out
jmp
scas
pop
jae
bound
cmp
dec
mov
mov
mov
or
adc
pusha
sub
mov
add
xor
and
test
clc
cmp
icebp
and
aad
divb
adc
loope
pop
in
icebp
add
jne
sahf
push
ret
test
adc
mov
xchg
xchg
outsb
add
enter
cmp
fnsave
sub
cld
ss
and
xor
rep
cmpsl
test
into
dec
fwait
mov
jmp
shr
mov
jmp
fisttpll
shll
jge
pop
mov
fwait
out
sbb
pop
jge
mov
out
cld
push
cmpsb
jle
pusha
xor
adc
lahf
addr16
rcr
fwait
dec
or
inc
rcr
cmp
xor
cmp
jl
in
inc
adc
jg
fadd
and
push
push
outsb
mov
sbb
pop
filds
xchg
dec
fdivs
xchg
imul
xlat
cmp
sbb
and
bound
jp
roll
fwait
xor
mov
nop
test
cwtl
adc
arpl
hlt
out
and
sahf
test
inc
adc
pop
xchg
and
and
push
repnz
out
gs
outsb
dec
repnz
repnz
test
mov
loope
lea
pop
callw
sbb
je
add
pusha
inc
shrb
inc
addr16
in
sti
add
sub
in
rolb
pop
fisubrs
ror
insl
movsl
and
push
cmp
loope
jae
imul
xchg
dec
sub
xchg
mov
jo
xchg
jae
xor
push
movsb
xor
jnp
test
lret
movsb
aas
pop
cmp
inc
ret
ret
mov
das
daa
pop
inc
test
shl
mov
jl
lods
iret
push
dec
lahf
xor
jbe
cmc
stc
in
addr16
stos
push
mov
sub
mov
pop
push
sub
out
cmp
in
and
add
stc
mov
inc
repz
mov
in
pop
and
add
jecxz
lret
mov
arpl
sub
adcb
sub
lahf
or
cld
dec
scas
inc
outsl
pop
sti
inc
sub
dec
cmp
mov
cmp
sbb
mov
bswap
test
xchg
and
aas
mov
loop
clc
lcall
jle
xchg
in
fistps
inc
ret
pop
cmp
sub
mov
ja
arpl
ss
inc
icebp
jne
cmp
pop
sti
xchg
cs
loopne
dec
stos
dec
pop
sub
and
add
clc
sti
aad
mov
das
dec
add
jae
cmpb
xor
push
daa
cltd
push
pop
pop
insl
xchg
pop
jns
repz
cltd
mov
in
cltd
imul
imull
lea
test
inc
lahf
sub
js
pop
xchg
sti
mov
inc
xchg
inc
fnstcw
rclb
xchg
and
fwait
inc
cli
aam
pop
cwtl
ljmp
ja
dec
addr16
xor
adc
adc
dec
mov
stc
stos
push
testb
loope
out
dec
xor
scas
xor
loope
sbb
and
and
push
out
xor
jo
sbb
enter
invlpg
mov
orl
call
mov
ss
test
mov
outsl
mov
test
xchg
loopne
and
movsl
movsl
push
mov
and
sub
lea
xchg
cmp
pop
lret
fdivs
fs
pop
push
push
inc
jns
or
mov
lret
cmpsl
sub
in
je
int3
pop
rolb
hlt
scas
loope
add
adc
xchg
loop
cmpsl
sub
dec
adc
shll
minps
test
pop
mov
into
mov
std
out
lods
dec
ja
and
lahf
pop
outsb
jae
daa
je
pushf
lahf
jmp
aam
push
cmp
sub
xlat
xchg
push
jle
dec
push
std
mov
adc
shrb
push
bound
add
test
jg
push
enter
movsl
in
and
in
aas
shl
dec
andl
adc
ja
cmp
leave
or
fldenv
dec
xchg
mov
push
adc
jb
jns
gs
jecxz
roll
in
lds
ja
and
xlat
ret
loop
insl
mov
movb
pop
lods
mov
sbb
pushf
lods
or
fisubl
sub
and
mov
aaa
jbe
xor
test
mov
pop
sbb
push
mov
fwait
loop
mov
mov
push
ret
insb
and
imul
pop
xor
or
or
inc
mov
iret
into
mov
fildl
icebp
lret
inc
repz
xchg
lea
mov
mov
mov
xchg
movsl
es
dec
xlat
pop
mov
test
jmp
data16
pop
sbb
mov
mov
roll
mov
adcl
mov
roll
pop
imul
xchg
mov
rorb
xchg
xor
sub
arpl
popw
out
adc
xchg
push
fisubrs
mov
ror
sbb
lods
xchg
cli
lret
insl
test
imul
jns
leave
add
lock
push
xchg
sbb
mov
adc
pop
aas
sbb
aad
cwtl
pop
lock
fimull
pushf
pop
sub
jne
jae
xchg
inc
sbb
mul
mov
mov
inc
mov
ffreep
stos
adc
xchg
hlt
dec
js
xchg
inc
ds
daa
popa
loopne
ss
das
pop
adc
mov
ljmp
stos
insl
jbe
push
inc
mov
dec
mov
mov
mov
pop
or
cmp
je
add
mov
jb
repz
push
push
mov
fwait
andb
cli
pop
or
nop
imul
arpl
enter
push
pop
sub
inc
cltd
aaa
and
jge
sbb
insb
xor
cmp
pushf
test
xor
xor
ficomps
decb
in
inc
cwtl
xchg
add
mov
jo
loopne
pop
xor
das
gs
push
rcrb
sub
sub
mov
ljmp
mov
hlt
inc
push
dec
sarl
push
xchg
nop
mov
gs
jmp
test
mov
ret
xchg
jno
hlt
dec
rcrb
sbb
sbb
dec
lds
mov
lock
in
mov
inc
sub
enter
clc
jmp
int3
vunpcklps
aad
push
pop
mov
out
es
pop
mov
push
mov
stos
xchg
mov
fcoml
jno
sarl
adc
sub
cli
ret
mov
pop
fs
jmp
movsb
jmp
popf
fwait
stos
lods
jl
jne
mov
fisttpl
jl
ret
rcll
jecxz
jns
hlt
mov
inc
push
fcompl
push
push
inc
cbtw
pushf
daa
jl
mov
sti
ljmp
mov
dec
cwtl
fidivrl
in
imul
test
leave
mov
je
jbe
movsb
lds
lahf
add
push
int
jecxz
pop
mov
xor
xor
lret
or
les
shrb
xor
xchg
pop
popf
pop
test
sub
je
xchg
lods
mov
lea
test
movsb
sub
lret
xchg
popa
xchg
add
imul
add
add
xor
daa
mov
add
lcall
and
ret
lods
push
and
push
stos
push
shlb
cmp
das
push
adc
aad
add
push
xchg
inc
dec
or
cmpb
mov
mov
mov
cs
xor
mov
js
sbb
push
and
into
and
or
adc
jge
xchg
rcl
fistpll
push
xor
xor
mov
mov
add
xchg
xchg
mov
repnz
dec
push
sbb
mov
lret
out
fstpt
push
cmpsl
fucom
fimull
cmp
int3
xchg
outsl
cmp
sub
mov
es
pop
mov
pop
enter
inc
cwtl
sarl
jbe
xchg
ja
loop
je
mov
out
push
fldl
mov
xchg
popa
inc
mov
adc
in
loop
xlat
cmp
mov
stc
mov
jecxz
ljmp
add
in
leave
and
jb
push
int3
jbe
lods
add
jle
repnz
mov
inc
add
shll
sub
lea
push
inc
into
mov
cmp
ret
sub
call
ss
pop
push
arpl
jns
in
leave
mov
cld
in
test
mov
sbb
test
movb
pop
jns
cwtl
dec
aad
fwait
orb
adc
sbb
sub
and
mov
push
xor
and
push
xchg
fnstcw
jmp
cmpsl
cmp
lods
mov
dec
nop
movl
cmp
outsb
adc
cltd
pop
cmp
add
push
ja
jecxz
lret
out
sub
jns
iret
inc
jno
arpl
negb
pusha
test
pop
call
out
xchg
dec
lret
push
mov
mov
shrb
ret
outsl
jecxz
sub
inc
test
sti
cmp
cmpsl
jne
repnz
bnd
and
clc
xchg
sbb
sbb
lcall
lahf
notl
cmp
inc
and
adc
fadds
or
in
call
and
mov
xlat
add
add
fsubp
or
lcall
rorb
icebp
jl
repz
lahf
jbe
jns
pop
fisttpll
jle
rcr
shrl
inc
loopne
std
das
ja
insb
dec
les
or
ds
test
push
sub
sbb
mov
stos
mov
lea
sahf
sub
xor
sbb
adc
push
sbb
jbe
aaa
sbb
sarb
fwait
pop
push
in
in
and
push
repz
pop
inc
cld
cs
out
push
pop
jae
insl
jle
cmp
fildll
enter
imul
stos
dec
bound
push
addr16
inc
es
popf
sbb
dec
std
leave
out
sub
inc
sub
cmp
cwtl
pusha
adc
pop
add
aam
ret
xlat
pop
sbb
outsb
ds
nop
ss
lds
inc
sbb
cmc
or
hlt
xor
std
test
pop
xchg
mov
sti
mov
in
frstor
add
addr16
pop
or
cmpsl
shll
popf
scas
int3
or
repz
xor
inc
mov
bound
jg
pop
rorb
movsb
or
jns
test
int3
hlt
ficomps
or
pop
sbb
cmpsb
std
test
adc
and
jbe
cmp
mov
jecxz
mov
arpl
inc
fistpll
ja
fwait
in
scas
out
xchg
fisubrl
in
mov
fwait
xchg
sbb
insb
pusha
cwtl
lcall
add
mov
jo
test
shrb
lods
adc
dec
ja
adc
xchg
test
cmp
out
loope
test
aad
fcompl
and
test
int
aam
dec
sbb
add
hlt
add
jmp
fildll
sahf
test
ficompl
fisubrs
lea
xor
xor
push
sub
lahf
outsl
fimuls
xchg
or
fstpt
cmpsb
ja
mov
add
push
xor
cmp
out
mov
or
mov
pop
ljmp
lahf
cmp
adc
jmp
sub
ss
scas
sbb
jecxz
mov
mov
cmp
faddl
inc
sahf
pop
sbb
aam
jnp
lock
fstps
mov
sbb
outsb
pop
outsl
fcomi
mov
add
sub
inc
or
inc
mov
mov
xor
test
jbe
shlb
loop
pop
loop
hlt
imul
or
and
or
std
fcmovbe
pop
xor
dec
out
rcll
icebp
xchg
aad
adcb
mov
add
mov
mov
scas
out
mov
push
and
mov
loopne
and
mov
subb
mov
dec
stos
jae
lds
adc
xor
xlat
xchg
pop
cs
add
jns
cltd
mov
ret
pusha
mov
pop
inc
test
dec
pop
or
push
inc
dec
imul
xchg
inc
imulb
in
dec
out
push
shlb
lea
or
mov
pop
scas
icebp
and
jb
repnz
ja
aam
rorb
pop
or
scas
pop
lahf
and
cmp
stos
lea
xchg
ret
and
fcmovb
push
call
jge
aas
popa
les
or
dec
jmp
into
in
jmp
minps
imulb
pusha
out
insb
aam
jl
add
fbstp
fcompl
vmread
into
addb
or
es
negb
mov
mov
dec
xchg
sbb
popf
pop
lcall
xor
shl
cmp
cmc
xchg
lds
aas
mov
xchg
or
sub
dec
mov
movsb
scas
sbb
push
and
sbb
mov
mov
sti
into
cwtl
out
mov
mov
mov
mov
xchg
xchg
pop
jge
shrl
test
xchg
push
fists
and
jle
xchg
mov
xchg
pop
sbb
nop
movsl
gs
mov
inc
pop
push
xor
pop
daa
aaa
sub
cwtl
push
xor
es
and
shll
xlat
or
cmp
xchg
or
pusha
ret
arpl
sahf
ret
iret
mov
mov
xchg
outsl
fsubrs
or
loop
inc
mov
jecxz
or
popf
rep
push
cli
sub
lret
add
fistl
in
rol
aas
push
out
jmp
loope
lds
arpl
adc
popf
ja
mov
fnsave
mov
dec
mov
pop
movsb
js
clc
aad
cltd
out
daa
cmpsl
jno
push
cmpsb
fildl
xor
xchg
sbb
jge
xor
xchg
mov
in
std
add
push
pop
dec
xor
fs
call
aam
mov
mov
push
or
or
cwtl
mov
inc
add
imul
fwait
les
dec
xchg
xchg
mov
je
cld
loopne
ljmp
js
outsl
ret
in
or
dec
jns
xchg
adc
lahf
jge
cwtl
repz
test
add
pop
ljmp
mov
sbb
movsl
lods
and
mov
sbb
mov
test
iret
jae
daa
xchg
xchg
fdivl
dec
mov
mov
sbb
push
or
jns
pop
lret
sub
arpl
arpl
and
push
or
mov
add
mov
add
dec
lods
test
cmpsb
cmp
cmp
sarb
mov
inc
cmp
jle
gs
xchg
sarb
or
xor
pusha
leave
xchg
and
push
and
or
inc
fisubrl
mov
inc
mov
outsb
xor
push
mov
mov
xchg
push
outsl
mov
mov
in
cli
inc
mov
mov
int
repnz
push
xor
dec
out
push
pushf
out
std
cmpsl
outsb
fldenv
lds
mov
clc
pop
xor
mov
out
mov
faddl
rcl
clc
xchg
sahf
movsb
jbe
int
or
jmp
mov
loop
icebp
push
dec
cld
flds
mov
mov
sbb
mov
lods
js
jle
cmp
ja
jge
sbb
fs
push
xor
add
pop
sub
add
cmc
std
lods
cli
loopne
pop
daa
xor
add
adc
ret
les
lret
mov
mov
test
icebp
mov
jge
pop
cmp
repz
lods
push
pop
jp
push
mov
mov
rcr
push
cmp
sbb
add
jp
les
sbb
mov
int3
fs
inc
sahf
sub
test
xor
out
ds
xchg
jmp
mov
or
sub
mov
je
out
in
sub
popf
pop
cmp
jge
and
lea
push
and
stos
inc
mov
lods
push
mov
inc
insb
test
add
mov
gs
fnsave
repz
push
clc
ds
nop
or
call
add
and
jo
jp
ss
flds
call
movsl
dec
xchg
cltd
aam
scas
iret
stc
xor
loopne
jae
sarb
mov
pop
mov
dec
xchg
test
jne
adc
lods
pop
loope
add
xor
xlat
test
in
mov
push
and
iret
push
sub
in
xor
lahf
in
adc
rcrl
fstpl
mov
mov
add
xor
ljmp
dec
xchg
sub
add
xor
lahf
jg,pn
je
stc
add
lret
and
aas
inc
mov
std
jp
fcomps
inc
hlt
sbb
push
pop
and
insl
xor
jno
pop
mov
adc
sub
fisttpl
push
lods
jnp
leave
bnd
daa
loop
outsb
movsb
adc
loop
in
adc
push
int3
pop
cs
mov
call
adc
outsb
lds
mov
cld
loopne
dec
sub
lds
loop
addr16
mov
testl
sahf
pushf
icebp
lods
rolb
jecxz
rorl
sbb
mov
pop
and
lret
cmp
ror
aad
jge
inc
mov
fdivrs
push
push
subl
sbb
xlat
jl
icebp
int3
push
xchg
pop
push
mov
int
xchg
cmpsl
add
shlb
pop
fidivl
push
mov
sbb
jnp
sub
je
bound
lcall
popa
dec
jle
inc
shl
sub
pop
adc
je
xor
jle
xchg
cmp
hlt
xchg
mov
enter
jecxz
in
sbb
mov
bound
aas
and
push
push
mov
cs
or
aad
xchg
leave
bnd
les
add
js
out
inc
mov
sbb
test
sahf
push
xlat
or
or
inc
aas
movb
shll
jp
dec
pushf
fistpll
fcmovbe
loopne
xchg
mov
scas
aam
rol
mov
leave
push
add
sub
bound
xchg
int
inc
mov
mov
fdivl
cmp
inc
push
out
xor
sbbb
test
inc
sub
cs
popa
bound
rorb
mov
ficomps
or
movsl
xchg
jns
adc
push
dec
stos
adc
cwtl
and
shlb
sbb
xchg
add
inc
in
inc
shll
push
push
sub
jg
mov
push
push
push
or
gs
out
ss
dec
push
xchg
mov
cli
xchg
sbb
mov
or
mov
push
clc
lcall
add
mov
inc
in
add
mov
mov
js
bnd
ds
xchg
xor
out
div
mov
xor
mov
fwait
jl
adc
daa
mov
adc
inc
js
les
inc
push
movsb
or
int
rol
imul
jecxz
ljmp
or
cmc
fiadds
sbb
leave
icebp
shll
cmpsl
dec
pusha
loopne
dec
aad
and
xchg
inc
push
adc
fistl
inc
mov
cltd
ret
out
push
pop
push
or
xchg
in
test
imul
js
xchg
test
push
xchg
and
inc
test
int
dec
cmp
sbb
adc
sbb
loop
fwait
and
fsubs
inc
xor
cmpsb
sbbl
adc
cmpsb
pop
push
add
xchg
cmp
cld
mov
stos
out
inc
inc
sub
vsubpd
push
mov
idivb
mov
cltd
mov
add
jno
out
outsl
test
aam
pop
sbb
in
mov
call
sti
xchg
inc
fildl
outsl
ret
cld
clc
lods
arpl
adcb
test
sbb
dec
jmp
cmp
popf
pusha
imul
sbb
and
add
repz
or
sbb
push
ljmp
dec
or
push
in
or
or
xlat
dec
jp
bound
xchg
leave
outsb
and
dec
pop
je
ficoms
xor
div
ret
jno
adc
xlat
adc
outsb
call
pop
dec
cli
addr16
pop
sbb
pop
leave
inc
pop
cmp
mov
push
xor
jno
movsl
mov
inc
les
dec
sbb
cmc
clc
and
test
test
test
mov
inc
cmp
sarl
ljmp
push
dec
adc
or
cltd
jmp
push
jnp
insl
stos
lock
push
out
out
xchg
test
and
inc
test
orl
cmp
shr
imul
ret
lret
cli
mov
mov
outsl
add
dec
sub
mov
call
cmpsb
adc
xor
xorb
jl
xor
rclb
lret
dec
negl
pop
cmp
xchg
inc
rorb
sbb
lock
and
cs
pop
mov
lods
ljmp
std
pop
sbb
hlt
jge
mov
mov
sub
mov
lret
mov
pop
shlb
enter
je
push
add
nop
shll
scas
dec
xlat
pushl
or
cmpsb
add
mov
jne
cmp
jg
cmp
jno
xor
pushf
les
jmp
mulb
jp
pusha
sahf
int3
sub
dec
int
sbb
or
mov
and
sti
pop
xchg
inc
in
les
inc
xor
xchg
jnp
sahf
jmp
dec
xchg
fcomi
mov
push
pushf
sub
jle
or
outsb
and
mov
popa
jl
movsl
sbb
mov
lods
xor
sahf
push
jg
aas
fdiv
aad
clc
mov
mov
cmp
pushf
jb
dec
jo
std
inc
jno
iret
adc
mov
inc
or
lock
pushf
xor
sbb
xchg
push
mov
xor
add
adc
and
or
mov
aas
mov
stc
mov
jecxz
cmp
idivl
dec
call
push
pushf
sarb
scas
cld
data16
sbb
adc
inc
push
dec
lods
addl
test
mov
xchg
repnz
cwtl
mov
add
mov
pop
pushf
xchg
jb
mov
pop
in
sbb
loope
adc
cmp
xor
repnz
inc
or
add
in
cs
divb
dec
pop
test
iret
xchg
enter
fistps
out
add
sbb
jl
sbb
add
or
jne
into
aas
out
addr16
xchg
sub
add
adc
fildll
sbb
push
in
cs
mov
pop
pop
inc
inc
int
in
test
dec
push
push
bound
mov
pushf
inc
dec
hlt
pushf
sarb
cmpsl
repnz
add
aaa
addr16
lret
loope
xchg
mov
mov
mov
or
pop
xlat
pop
sub
scas
xchg
inc
pusha
xor
out
jle
dec
rcll
inc
xchg
and
mov
pop
jge
jp
pop
sahf
or
ljmp
xchg
pop
and
mov
dec
jle
clc
pop
in
mov
hlt
sbb
or
pop
testl
sbb
ja
jae
imul
jb
and
or
sbb
lods
addr16
mov
out
xchg
add
ret
dec
pushf
mov
aad
xor
xlat
arpl
movsl
mov
cmpsl
addr16
in
scas
subb
mov
test
push
push
inc
push
mov
cmc
testb
repnz
popf
arpl
clc
fwait
fs
mov
insb
xchg
sbb
dec
adc
subb
or
cltd
xchg
cmp
mov
mov
dec
sbb
sub
jge
adc
cmp
iret
cmp
mov
mov
jecxz
jae
dec
dec
in
pop
sahf
mov
inc
arpl
or
imul
stc
mov
loope
daa
and
loopne,pn
or
test
pop
andb
or
in
mov
sbb
scas
gs
push
lock
shll
dec
test
sub
jno
cmp
icebp
nop
int
test
idivb
repz
popf
or
call
cmp
xchg
jno
in
xor
ds
addr16
icebp
outsb
adc
mov
dec
mov
mov
jge
mov
je
dec
data16
adc
ds
je
push
sbb
xchg
test
or
mov
mov
adc
fs
mov
aad
repz
adc
mov
in
adc
test
pop
incl
xchg
cmc
int3
lods
icebp
and
or
jbe
mov
in
mov
in
scas
roll
stos
aas
mov
pop
push
cltd
mov
stos
or
mov
inc
push
xor
xchg
out
cmpsb
and
test
xchg
bound
sbb
mov
cwtl
fisubrl
jbe
mov
cltd
imul
out
push
pop
add
div
pop
jb
or
pop
dec
jbe
ret
or
movsl
xor
cmp
mov
out
jecxz
mov
add
iret
jno
mov
pop
sub
lods
or
jo
scas
jns
test
ja
scas
dec
incl
in
insb
jmp
ljmp
cmc
lea
cmpsl
xchg
xlat
lods
cmc
aam
mov
addr16
data16
xor
cli
in
push
inc
int3
pop
gs
inc
push
mov
dec
stc
into
sbb
std
jmp
adcb
xchg
in
lods
dec
pop
scas
cmp
pop
add
xchg
dec
decl
lds
nop
adc
dec
push
push
cltd
xchg
pop
push
xchg
js
sbb
iret
sbb
sbb
enter
aad
fxch
add
push
cltd
cwtl
je
xchg
push
ds
fcoms
rol
clc
xchg
xor
xchg
repz
pop
pop
and
xor
xchg
sbb
loopne
dec
mov
in
test
push
xchg
fdivrl
adc
sub
sbb
inc
fdiv
xchg
xchg
mov
addr16
jg
out
outsb
rcrl
push
xchg
insb
or
cmp
mov
dec
jecxz
enter
fbstp
cli
insb
cmpsb
xor
lret
fcoml
pop
adc
daa
lret
xchg
outsl
rcrl
inc
or
fwait
xchg
cmpsb
mov
mov
out
pushl
sub
xor
mov
ret
cli
jmp
icebp
xchg
sub
bound
stos
daa
ja
jne
mov
daa
mov
fwait
stos
xor
cli
das
sub
pop
fistl
jb
mov
int3
leave
in
jns
push
pop
sbb
mov
and
into
js
js
scas
scas
xchg
sbb
fnstcw
inc
testb
in
stos
push
add
cmp
mov
fistps
sbb
addr16
adc
leave
std
bound
aas
mov
and
xlat
or
cmp
fnsave
daa
andb
xchg
jbe
dec
fidivrs
xchg
xchg
or
jmp
jb
xor
out
popf
mov
loope
ret
test
mov
les
ret
movsb
mov
insb
imul
sbb
xlat
inc
test
xchg
pushf
int3
sub
in
sub
mov
les
xchg
inc
das
shl
cmpsl
hlt
pop
jmp
cmp
out
or
push
add
jbe
dec
shlb
push
fisttpl
je
hlt
aaa
dec
clc
rolb
jg,pn
xchg
repz
lret
or
iret
sbb
jae
mov
popa
divl
cmp
push
push
dec
pop
addr16
ss
call
in
vmwrite
dec
cli
xor
aaa
mov
sub
mov
cmp
and
aas
cmpsl
js
mov
ja
in
test
mov
and
stc
or
jp
movsb
cmpsb
mov
lock
shlb
add
xchg
fwait
jecxz
sbb
push
inc
lahf
push
cmp
mov
cmpsb
addb
sti
vmovsd
adc
incl
ficompl
sbb
notl
mov
iret
jne
sub
and
push
pop
dec
mov
or
mov
adc
fwait
jbe
ja
xor
repz
sub
nop
cld
hlt
fwait
dec
test
push
das
leave
pushf
cmp
stos
sbb
dec
je
rcll
push
xchg
jl
in
jo
cmp
out
sbbb
rcll
repz
adc
nop
mov
and
sub
push
aam
mov
ds
mov
and
sahf
not
faddp
out
jo
pushf
adc
adc
imul
in
sbb
jge
pushf
cli
lcall
lea
jno
pop
mov
mov
lcall
fwait
xor
into
in
ds
je
sbb
inc
bound
pop
jno
imul
adc
cld
repz
cmp
call
sub
dec
adc
mov
xor
int
xor
mov
fs
lret
out
dec
inc
outsb
dec
push
sbb
sarl
mov
mov
add
sub
push
and
ds
jns
stos
rclb
shl
sub
test
ja
hlt
sbb
jb
outsb
sbb
aam
xor
bound
aam
push
sbb
jp
loop
nop
pop
daa
inc
dec
xor
shrb
push
sbb
rclb
sub
scas
imul
add
sbb
adc
jne
mov
rcll
add
jg
push
push
stos
push
addr16
lahf
add
dec
fwait
enter
push
rcll
sub
ja
dec
fadd
xor
int3
popf
mov
inc
in
xchg
stc
or
lods
push
sbb
cmp
loope
adc
clc
into
cmp
sbb
aas
mov
mov
mov
jecxz
insl
cmpsb
sbb
adc
jnp
push
lock
out
stos
clc
std
je
cmpsl
subb
xor
mov
ds
es
lods
jge
fsqrt
mov
sbb
cld
xor
mov
fs
and
test
add
leave
mov
fdivrp
mov
or
or
or
pop
or
jb
scas
aas
mov
fs
fisubrl
inc
mov
ds
aad
xlat
mov
mov
sub
dec
sti
lret
inc
stos
loop
xchg
inc
xchg
leave
jg
jo
int
in
dec
xchg
repz
lods
clc
lahf
aaa
push
dec
rol
inc
jp
push
mov
and
arpl
repnz
or
popf
mov
adc
or
es
lock
mov
or
inc
dec
adc
push
in
mov
cs
es
jmp
mov
ja
push
pop
pop
pop
loop
orb
test
adc
jbe
insb
or
push
fs
hlt
in
and
xchg
sub
mov
ret
aaa
sbb
xor
cmc
dec
adc
insl
push
jno
adc
mov
gs
fbld
xchg
cmpsb
jno
mov
insb
dec
shl
inc
inc
fldln2
pusha
mov
scas
leave
jmp
and
fdivr
mov
push
nop
mull
cld
xchg
jbe
in
adc
dec
mov
jno
mov
std
add
mov
rcll
xchg
sbb
clc
mov
cs
pop
roll
jnp
xlat
outsl
mov
aad
int
insb
xchg
cmp
jae
imul
out
xlat
outsl
js
imulb
push
dec
pop
sub
push
sahf
cmp
je
pop
mov
add
loop
mov
xchg
incl
sub
call
cli
addr16
pop
or
hlt
mov
lods
and
xorl
cmp
cmp
inc
jmp
stos
cmp
mov
lret
cmp
mov
test
mov
sub
shll
sti
lds
and
or
dec
sbb
lret
cmp
or
dec
inc
sarl
mov
imul
push
push
jle
mov
fwait
mov
testl
rolb
push
mov
xchg
inc
pop
jge
or
jnp
popa
cmp
mov
in
lock
pop
cmp
loop
cmp
cmp
rorl
sub
xchg
nop
sub
pusha
mov
test
ljmp
stos
push
dec
xor
lds
jae
mov
mov
pusha
test
sbb
mov
arpl
adc
jge
shll
jecxz
and
sub
pop
stos
hlt
or
sbb
imul
adc
pop
cmpsb
and
enter
push
cmp
fdivl
adcb
sub
xor
cmp
data16
movsb
lds
int3
xor
in
cmpsb
data16
ficoml
rol
test
cmc
push
aad
es
mov
and
adc
mov
pop
mov
cmp
js
mov
sbb
fcmovne
sahf
xlat
ja
jb
inc
sub
xlat
jle
dec
sbb
gs
xorl
stos
cltd
imul
jnp
call
mov
shl
into
sub
lock
ja
scas
lds
sbb
test
scas
jns
push
pop
cmpsb
icebp
cli
push
mov
pop
divb
mov
ret
xor
hlt
pshufw
mov
out
cmc
xchg
call
mov
sbb
test
sbb
das
test
dec
loope
mov
imul
mov
rolb
add
rcrl
repnz
fwait
sarb
xchg
or
and
movsl
cmp
addr16
jl
fisubrs
lcall
nop
scas
pushl
cli
inc
lahf
fldl
xlat
movsb
xchg
cmpsl
rcr
mov
aaa
and
xchg
inc
adc
add
and
pop
pmulhuw
xchg
add
mov
ret
subb
in
ss
mov
std
push
test
sahf
in
test
jmp
or
xor
out
in
push
stos
gs
scas
dec
push
jl
push
jg
scas
adcl
add
cmp
pushf
sub
cmp
movsl
mov
sbb
push
outsb
mov
push
push
cwtl
rol
or
movsb
jge
cmpsb
push
repz
imul
jo
cmp
pop
mov
push
xchg
pop
cmp
outsb
dec
adc
cmp
jae
out
jp
fiaddl
cmpl
dec
insl
movsl
push
in
adc
lret
mov
lret
mov
loopne
push
pop
sbb
loop
push
xor
mov
clc
lods
or
jge
xor
fcomi
and
push
cltd
shl
je
add
jle
xor
xchg
xor
xchg
dec
aam
jnp
mov
dec
repz
push
loope
int3
push
xor
mov
inc
xchg
xchg
lahf
cmp
xor
ret
stos
dec
adc
inc
loope
cmp
and
dec
popl
xchg
pop
xlat
js
push
inc
xor
jp
mov
iret
jbe
xor
leave
jmp
dec
aad
cmp
push
mov
sub
sub
sbb
repnz
and
jb
sahf
ret
dec
push
jnp
cmp
cmp
pop
outsl
sub
push
jmp
jp
pop
xor
mov
lods
test
dec
cmp
cs
sbb
in
jne
in
inc
xchg
fwait
iret
inc
outsl
jno
movsb
xchg
fidivs
pop
inc
cmp
dec
cmc
cmp
pop
into
scas
push
push
andl
push
imul
mov
stc
mov
lods
stos
fistps
sbb
test
loopne
sti
add
rcrb
adc
push
mov
add
adc
xor
xcrypt-cfb
cmpsl
data16
imul
ret
inc
inc
mov
imul
pushf
bound
jmp
and
int
fst
lahf
sbb
cwtl
js
pop
adcl
je
cmc
push
cmp
push
dec
sub
mov
loopne
imul
sbbb
not
lcall
pop
rcrl
jb
pop
scas
add
adc
push
inc
test
xor
scas
out
mov
jno
inc
sti
and
sbb
pusha
sub
in
out
jne
pop
js
iret
testb
std
sti
in
sbbl
ret
mov
fisubs
cmc
dec
movsl
add
jmp
inc
push
sbb
arpl
inc
notb
mov
cltd
pop
adc
inc
bound
in
clc
sbb
or
iret
push
and
and
out
out
cmc
jecxz
adc
jnp
ss
lret
js
out
leave
push
bound
push
mov
mov
jge
clc
ja
lea
mov
flds
pop
jle
mov
in
lahf
jb
lock
int3
push
js
aaa
je
sbb
mov
ret
sarb
xchg
mov
ret
cmpsl
aad
xor
pop
movsb
mov
xchg
adc
leave
test
lcall
adc
add
mov
sub
pop
int
ror
lock
incb
or
shll
dec
test
sahf
stc
lcall
mov
push
pop
sbb
push
movsl
gs
adcb
pop
sbb
popa
inc
stos
jb
jl
ja
out
mov
out
fildl
decb
push
mov
dec
add
es
push
movsb
push
push
sbb
pop
cmp
lcall
jno
es
xchg
mov
orl
int3
sbb
sub
movsb
mov
insb
jmp
cli
fdivl
es
sub
xor
daa
cwtl
imull
bound
inc
leave
movb
iret
popa
dec
lods
mov
adcl
fwait
int
pop
loope
imul
jno
test
pop
out
sbb
popa
lock
dec
scas
cmpl
cld
into
enter
repz
xchg
mov
lahf
jp
xchg
inc
xchg
mov
lret
push
popa
dec
dec
jb
or
aas
and
scas
out
mov
pop
scas
int3
shr
frstor
and
iret
push
and
insb
nop
jo
jp
add
mov
cli
sub
add
jns
les
cmp
aad
adc
inc
xchg
lods
sbb
inc
stc
dec
je
xchg
orl
push
ret
add
sbb
mov
pop
lock
inc
mov
jno
aam
test
xor
movsb
or
lret
test
ss
test
lcall
lahf
rcr
pusha
or
adc
rcr
xor
pop
jmp
cmc
inc
add
add
cmc
mov
aas
into
mov
lea
jnp
jp
jl
test
fsubp
xor
outsb
inc
enter
mov
cmc
jl
push
ret
sub
fidivs
loop
rcrb
xor
addr16
push
rorb
and
push
cmp
pop
sahf
mov
dec
pop
xor
nop
and
ss
add
shlb
loop
cmp
frstor
push
fidivs
fstps
lods
loopne
push
mov
dec
repnz
mov
jp
std
bound
daa
lods
movsb
adc
xor
ret
cmpsb
pushf
lea
push
xchg
cmp
xchg
and
mov
xchg
mov
xor
jge
pop
stos
add
jle
mov
pop
fstpt
lock
push
les
out
mov
cli
pop
inc
push
xor
ljmp
add
and
in
pop
fcmovnu
add
mov
mov
and
mov
mov
xor
cmpsb
or
cmp
jmp
repz
adc
rclb
mov
cld
fnstsw
sbb
xor
jecxz
push
adc
pop
movsb
enter
pop
test
or
stc
scas
test
inc
fbld
and
jb
jbe
lea
outsb
push
loop
mov
lret
out
subb
bound
or
cltd
xorb
std
or
sub
sbb
imul
es
xchg
ret
into
mov
addr16
jecxz
test
popf
xor
mov
ficoml
addr16
clc
mov
cmp
push
push
loopne
ja
inc
out
xchg
icebp
mov
jno
adc
mov
popf
pop
lcall
pop
popf
das
push
push
ret
into
scas
out
aas
mov
movsl
xchg
mov
out
jne
cmp
jge
cmp
outsl
outsl
mov
sahf
mov
sub
in
and
dec
inc
mov
dec
xchg
shr
push
jecxz
sbb
fwait
push
inc
cwtl
lods
push
push
fs
repz
ds
push
ljmp
and
arpl
sub
rclb
subb
cld
or
nopl
jno
sbb
movsb
adc
stos
jo
lock
inc
sbb
and
subb
loope
rcrl
add
stos
loop
imul
popa
mov
add
inc
out
jl
ja
xlat
add
imull
test
push
and
mov
js
and
pop
data16
xor
mov
repz
daa
mov
lahf
stos
dec
repz
xor
ret
adc
or
push
decl
fldl
jo
push
inc
roll
outsb
push
pusha
rorb
adc
mov
inc
into
nop
add
jmp
push
jp
psraw
mov
je
cmp
cmp
fnstenv
push
push
icebp
sbb
and
jge
ret
sbb
andb
jge
and
mov
jle
std
inc
stos
icebp
push
cmpl
movsl
sti
dec
test
pop
hlt
gs
push
fsubl
aas
scas
push
sbb
pop
jge
mov
jno
mov
push
jle
cmpsl
xlat
jns
push
add
xchg
push
cltd
dec
in
mov
lret
daa
std
imul
jmp
cmc
adc
add
and
dec
jecxz
scas
pushf
dec
sarb
lret
faddp
clc
inc
fcmovu
add
into
icebp
das
shll
push
or
data16
ja
inc
xchg
mov
imul
or
addr16
cmp
push
jmp
mov
push
addb
sbb
pop
scas
mov
and
data16
fsubs
add
jp
fwait
enter
jnp
push
fidivl
jae
cmp
mov
out
push
fwait
les
jle
sub
cmpl
jmp
jge
inc
out
popa
rcr
xor
fwait
sahf
push
xor
js
xchg
and
aad
sbb
aad
push
dec
pop
lret
mov
inc
adc
lds
sub
xor
in
pop
cmp
push
addr16
mov
sbb
cmp
jns
or
in
or
sbb
mov
xor
push
push
mov
mov
xchg
addl
inc
repz
aaa
loopne
pop
in
add
mov
das
jle
dec
lret
pop
or
dec
jae
jp
sbb
adc
lret
cmp
mov
push
out
nop
jmp
sbb
xchg
adc
ror
sub
pop
mov
cmpsb
or
testb
fwait
das
pusha
xor
fwait
jmp
cmp
fmuls
mov
push
adc
in
pop
aam
stos
jns
popa
mov
mov
add
ds
xor
xchg
cmp
mov
inc
sbb
sbb
outsb
jbe
rclb
lock
adc
jg
mov
or
xchg
orb
pop
xor
cmp
lret
push
rcrb
stc
pushf
pop
xchg
sti
pusha
das
andl
mov
xchg
xor
inc
sub
andl
movsl
sti
fcoml
sbb
ret
jge
adc
imul
or
pop
xchg
or
cli
or
stos
ja
xchg
fcmovbe
xchg
pop
lods
adcb
mov
mov
cmp
sub
ja
iret
cmc
loope
inc
call
add
push
bound
dec
and
pop
adc
sbb
stos
push
call
and
adc
sub
andl
pop
call
inc
or
cmp
lods
prefetcht0
adc
dec
mov
clc
out
int
xchg
fdivr
clc
add
loope
into
in
rolb
aad
adc
push
les
sub
jnp
cs
loopne
jle
es
sub
popf
mov
test
sub
cmp
push
mov
in
je
scas
ror
pop
shlb
aad
fimuls
xchg
scas
xchg
hlt
push
xchg
aad
adc
jmp
add
mov
hlt
leave
xor
sbb
sub
rclb
fisubl
sbb
mov
in
cmp
movsb
xor
sarl
inc
cmc
in
fldenv
xchg
jbe
dec
mov
push
xlat
aam
inc
xor
push
cltd
mull
pop
out
out
jle
outsl
std
pop
gs
stos
xchg
sbb
movsb
std
aam
or
inc
inc
or
mov
adc
jbe
out
js
push
push
inc
dec
sub
dec
mov
add
pusha
dec
shl
lea
cmp
dec
scas
fadds
mov
jbe
xchg
adcb
pop
movsb
or
ds
pop
mov
popf
push
mov
mov
lods
aad
xchg
mov
dec
push
mov
sarl
pop
icebp
push
lret
cmpsb
fildll
adc
hlt
pop
sbb
in
jbe
setg
shl
mov
js
inc
xchg
cltd
xchg
lret
bound
aas
pusha
lcall
fmul
test
jecxz
insb
add
aad
add
lea
div
lret
std
inc
loop
cmp
stc
fs
js
imul
cmpsb
cli
sarb
cmp
or
dec
push
ss
sub
in
sub
xchg
xchg
or
pop
and
push
mov
cmp
lea
or
inc
pop
faddl
pop
or
inc
xchg
mov
aad
cltd
jle
sub
sbb
adc
cmpsb
stos
fnstcw
in
out
pop
out
push
mov
icebp
add
pushf
xor
dec
lret
push
mov
cmp
pop
cmp
adcl
xchg
jo
add
out
fdivl
aam
mov
int3
shl
gs
and
xor
fcomp
and
dec
outsb
push
frstor
das
cmp
gs
xchg
inc
loopne
add
orb
mov
scas
rcll
push
sbb
mov
lods
ds
mov
mov
mov
jle
out
inc
mov
mov
lahf
in
fs
sub
mov
or
cmp
cli
je
in
stos
xor
push
lahf
popa
lret
shrl
ss
insb
cld
out
push
orb
cli
shrb
inc
jge
ja
int
fisubrl
mov
mov
xor
and
cld
jl
arpl
sti
lea
xchg
mov
cmp
xor
insl
test
inc
stos
xchg
imul
mov
pop
popf
shll
sub
movsb
mov
repz
jl
cmpsb
xchg
push
rcrl
call
ljmp
mov
ljmp
lret
mov
les
mov
movsl
xor
pop
inc
xor
mov
stos
mov
mov
add
hlt
jnp
inc
stos
mov
jecxz
outsl
cmp
mov
xlat
or
insl
out
lret
sub
daa
dec
pop
push
push
sarb
add
loopne
or
pop
in
dec
jg
mov
pop
jno
xchg
fdivl
test
icebp
cmpsl
pop
xchg
mov
lahf
out
iret
fucomip
xor
jb
push
or
inc
cmp
jp
push
repnz
jnp
cld
mov
add
push
divb
lea
push
lahf
movsl
movd
and
pop
movsb
inc
jl
mov
cmova
and
xchg
cmp
loopne
sti
test
dec
pop
xor
xor
jae
mov
push
shr
ret
addr16
xchg
mov
movsl
mov
and
clc
cmp
mov
sbb
mov
inc
stos
push
js
cmpsb
xchg
dec
gs
mov
rcrl
xorb
pop
mov
cwtl
adc
xor
ljmp
or
mov
sbb
jl
ljmp
sbb
mov
and
inc
sbb
leave
fs
ret
sbb
test
or
pop
scas
jg
shlb
or
mov
add
push
dec
mov
fcoms
aam
out
cmpsb
sub
push
movsb
leave
insb
fwait
and
jge
stc
test
cmpl
fsubrp
pushf
fsub
aaa
xor
fldenv
adc
pop
push
cmpsb
into
rorb
sti
xchg
mov
mov
ljmp
repz
dec
inc
rorl
xchg
sbb
adc
mov
pop
lods
cwtl
mov
insl
iret
mov
inc
xor
out
cmp
fwait
les
movsl
fisubrl
push
sub
push
aad
push
mov
daa
and
mov
xor
cli
mov
addb
and
pop
and
ja
dec
inc
popa
out
repnz
hlt
dec
cmp
mov
pop
adc
fstpt
or
jecxz
mov
mov
loop
pop
mov
cmp
cmp
dec
icebp
inc
mov
push
test
or
push
pop
adc
rcrl
cmp
aad
adc
xchg
pop
pop
int3
js
jo
filds
jmp
push
shll
pop
mov
mov
mov
into
sbb
loop
ja
hlt
push
aam
stc
mov
ja
mov
out
std
sub
mov
mov
mov
imul
rolb
pop
wrmsr
push
sarl
and
enter
les
mov
call
rolb
add
sar
xchg
mov
out
push
add
decb
inc
loope
lds
fwait
into
mov
adc
xchg
pop
sub
sbb
mov
ljmp
jbe
mulps
mov
jge
dec
cwtl
mov
pop
andb
outsl
xor
push
packuswb
test
xor
mov
mov
in
adc
or
mov
adc
or
int
mov
icebp
inc
dec
push
fmull
out
cs
int
mov
mov
dec
mov
pop
imul
cmp
adc
mov
fildl
push
jg
sbb
pusha
clc
and
pop
push
or
ljmp
clc
dec
pop
xchg
add
addl
mov
xor
push
jp
jg
jae
xor
sbb
outsb
xor
rolb
aaa
jo
rep
fwait
loop
xsha256
cmpsb
shrl
xchg
xchg
das
xor
jns
jg
add
mov
mov
xor
loop
fnstsw
addr16
fisubl
mov
fisubrl
add
shl
int3
mov
int3
shrl
mov
mov
dec
sti
pop
sbb
cmpsl
scas
int
mov
mov
aad
mov
leave
pop
fstl
mov
mov
in
adc
cs
call
loope
mov
xchg
pop
xor
jle
xchg
icebp
and
jg
hlt
inc
out
fidivrs
pop
pop
aad
fisttpll
xchg
or
popa
sub
es
ss
mov
rolb
out
test
or
int3
pop
pusha
into
or
in
rcr
orb
push
xor
add
out
mov
xchg
imul
or
lods
hlt
push
int3
in
jecxz
mov
iret
repz
cli
xor
pushf
xor
dec
xor
aad
stc
insb
fwait
adc
mov
push
push
call
test
push
or
xor
push
jns
pop
sahf
push
pop
cmp
cmp
sti
jo,pt
pop
aad
in
flds
push
ja
icebp
insl
or
push
push
adc
mov
jg
es
bound
xor
jo
cmpsb
scas
stos
and
lret
aas
repz
fsubl
xchg
cmp
fdivp
cmpsb
hlt
cld
dec
fsubrs
rcrb
adc
or
adc
lret
insl
add
pop
jne
dec
mov
mov
jne
mov
and
mov
arpl
dec
loop
or
enter
push
lret
add
or
scas
bound
sar
ds
add
xchg
xlat
push
movsb
dec
xor
jmp
mov
dec
into
clc
jne
pop
imul
xor
ljmp
sbb
mov
sbb
sbb
pop
fimuls
or
fnstcw
inc
adc
repz
arpl
lcall
or
and
shll
aaa
dec
jne
add
mov
test
xchg
jmp
lds
scas
jl,pt
or
pushf
jno
andb
clc
sub
xchg
cmp
out
das
pop
lods
jl
gs
jnp
mov
mov
test
adc
sub
mov
sub
mov
ficoml
mov
imul
xlat
push
cmp
shl
fmuls
xchg
sub
ljmp
lods
mov
cmp
push
inc
gs
ret
xor
jmp
push
or
ljmp
outsb
sbb
adcl
fadds
sbb
and
orb
push
cs
call
or
mov
mov
xchg
jg
mov
leave
fisttpl
les
lods
inc
and
sbb
mov
jo
mov
dec
arpl
inc
cs
sbb
aaa
dec
pusha
cmp
decb
inc
scas
xchg
push
push
cmp
mov
in
scas
dec
pusha
pop
push
rclb
jo
jno
adc
rcr
cli
aas
or
mov
mov
and
aas
dec
mov
ficompl
and
test
xlat
arpl
movsb
mov
push
push
sbb
mov
repnz
xor
lret
jae
push
filds
mov
call
out
dec
adc
lahf
int
fsubl
lock
cmpsb
adc
xor
shll
ret
xor
push
idivb
mov
or
nop
ds
push
mov
pop
movb
icebp
xor
pop
dec
mov
sbb
fwait
lds
xor
xlat
mov
xchg
or
xor
jo
and
mov
push
out
jne
and
fwait
inc
mov
xchg
lahf
test
rcll
push
in
jp
adc
mov
xchg
lahf
dec
mov
insb
mov
push
and
or
or
push
cld
mov
scas
les
mov
dec
cmpsb
sub
out
and
jne
out
ljmp
repnz
sbb
cs
add
addr16
cmp
fimull
pop
test
lret
ljmp
fisttpl
jns
mov
daa
mov
or
aaa
fiaddl
movsl
pop
test
jns
fistl
sub
mov
cmpb
mov
fs
scas
lods
sahf
in
jo
and
dec
or
push
xor
cwtl
xor
add
jp
jg
sbb
fwait
and
push
cmp
mov
mov
mov
outsl
sarl
or
mov
and
adc
gs
jns
pop
inc
jne
mov
orb
mov
cmp
inc
sub
shrl
movsl
push
fmull
sarb
cmp
lahf
lods
adc
outsl
movsb
xchg
inc
mov
ror
dec
mov
enter
mov
sub
and
outsl
pop
xchg
jno
pop
fbstp
insl
jge
mov
push
jge
sti
shl
enter
xor
outsl
adc
ret
push
pop
repnz
and
pop
jge
push
lock
cmp
pushf
cwtl
push
xor
pop
add
cmp
std
xorb
mov
mov
pop
dec
sub
in
adc
outsb
mov
popf
cwtl
insb
pushf
pop
dec
out
mov
int
sub
adcl
push
and
sahf
xor
jg
repnz
clc
add
shrb
jne
push
mov
cmp
icebp
add
jne
clc
scas
push
jb
nop
adc
inc
fldcw
insl
call
shlb
push
testl
mull
sub
outsb
xor
cmp
aaa
shll
int3
push
pop
outsl
icebp
pop
popf
mov
jnp
cmp
xlat
mov
in
into
adc
fstpt
sahf
mov
mov
out
adc
dec
std
push
mov
mov
adc
out
cmp
in
adc
sbb
stc
adc
cmpsb
ret
fsub
push
das
cmp
jl
test
inc
rclb
adc
call
mov
stc
xchg
cld
push
sub
xchg
negl
mov
scas
pop
xor
xor
imul
jmp
rolb
sbb
loope
xor
xchg
adc
movsl
dec
je
inc
and
movsl
pop
xor
cld
inc
clc
mov
clc
inc
dec
imul
cs
lret
xor
mov
scas
sub
pop
mov
in
mov
add
xchg
icebp
fstl
mov
aas
xor
cmp
push
aaa
inc
cmp
adcb
dec
mov
push
imul
mov
xor
addr16
mov
es
adc
or
xchg
pop
mov
and
adc
mov
add
mov
mov
sbb
shlb
das
sbb
xorl
mov
add
lcall
or
push
movl
adcb
mov
mov
or
mov
dec
add
xchg
imul
xchg
out
xor
push
mov
popa
sbb
inc
test
hlt
jecxz
inc
mov
and
js
idivl
jne
dec
insl
fiadds
or
imul
adcb
mov
negb
mov
jae
pop
inc
push
outsb
xchg
jnp
push
data16
cltd
insb
cmp
inc
fimull
dec
jecxz
adc
outsb
movsl
push
pop
mov
and
lahf
pop
push
test
es
daa
pop
hlt
aad
popa
mov
cmpsl
xor
in
sbb
mov
mov
lods
imul
pusha
movsw
xchg
cltd
fbld
insl
test
enter
xor
loope
test
scas
call
ss
adc
in
imul
mov
pop
iret
and
mov
push
dec
lds
cltd
and
cld
iret
shl
into
inc
mul
outsb
mov
mov
inc
adc
adc
jb
scas
pop
or
pop
inc
mov
in
cmpsl
mov
adc
mov
mov
or
and
mov
mov
pop
jne
dec
ds
scas
dec
loop
dec
jnp
dec
fstl
xchg
jp
sbb
mov
jge
sbb
xchg
stos
shrb
pusha
dec
sub
xchg
xor
mov
nop
cmpb
stc
add
add
call
push
xchg
lret
push
rcl
scas
xchg
dec
scas
mov
cmpsb
xor
cmpsl
or
push
jo
jmp
sysret
add
xchg
outsl
or
addr16
fisttpl
in
adc
mov
aas
cmpsb
push
ljmp
std
jne
testb
insb
iret
dec
sahf
jae
sbb
cmp
mov
cmpsl
in
sbb
ljmp
pop
in
push
push
js
or
push
jns
jb
aas
or
lds
mov
out
nop
xchg
scas
aad
jae
insb
push
push
dec
in
lods
or
xor
jne
or
jge
inc
outsl
inc
js
dec
and
push
mov
dec
mov
mov
dec
iret
je
pushw
shl
shr
jno
mov
mov
in
pop
add
int
rcr
je
pop
xor
cmpsl
test
fs
xor
fnstsw
mov
movl
dec
and
sbb
push
fidivl
adc
lods
imul
mov
dec
jns
cld
and
into
push
push
sar
js
in
addr16
or
add
dec
pavgw
cld
bound
and
cli
aas
mov
mov
sbbl
dec
xor
sbb
outsb
cmp
fld
flds
rclb
adc
mov
xor
fildll
out
jne
call
inc
push
lods
mov
dec
adc
inc
es
ds
dec
cmpsl
lods
sbb
orl
inc
out
imul
inc
fcoms
mov
rcl
mov
and
movsl
mov
and
xchg
stos
ss
jmp
dec
adc
mov
mov
fsubrl
in
or
cmpsb
sbb
cmc
jne
adc
lea
and
loop
icebp
lea
xor
pop
xchg
gs
and
movsl
loope
mov
jecxz
jns
inc
aaa
push
fisttps
mov
jge
cltd
aam
out
movsb
sbb
ret
repz
xlat
testl
mov
aad
and
push
adc
fiadds
pop
mov
sarb
mov
xchg
inc
mov
mov
inc
or
fsubp
mov
fadds
icebp
mov
ret
ljmp
jp
lret
scas
in
bnd
push
mov
jle
sub
xor
test
out
out
inc
stc
add
pop
pop
sbbb
scas
jae
or
lods
cmp
cmp
mov
mov
das
cmp
out
sbb
outsb
and
in
cli
push
cmp
popf
push
mov
pop
xor
loopne
popa
dec
test
xor
cmpsl
dec
and
subb
js
pop
insb
adc
dec
adc
adc
cmp
dec
sbbb
pop
sub
jp
dec
add
int3
ljmp
mov
and
andl
out
jne
push
and
daa
push
or
or
out
cmp
jno
daa
and
and
sbb
cmp
shll
sub
sti
xchg
jp
lret
sbb
lcall
shl
and
adc
mov
into
sbb
mov
inc
sbb
dec
push
clc
xorl
xor
cmpsl
hlt
sub
jle
mov
js
pop
pop
jae
inc
add
dec
pop
or
mov
jecxz
xor
jo
stos
hlt
pop
aas
cmp
in
or
ret
add
fnstcw
xchg
lods
pushf
or
inc
ss
sbb
cwtl
gs
adc
test
xchg
rcrl
or
ss
push
adc
dec
adc
add
add
mov
data16
and
cltd
inc
fmull
push
pop
je
push
mov
shll
mov
mov
push
mov
subb
mov
lahf
cmp
mov
mov
int
hlt
mov
popf
or
mov
daa
xrelease
push
rcll
lods
notl
mov
dec
out
in
adc
lret
scas
xchg
xchg
sbb
sbb
std
jae
or
dec
mov
ffree
jo
adc
lock
or
sbb
es
cmp
sub
mov
mov
test
adc
out
popf
dec
lret
hlt
and
dec
ds
adcl
push
push
xor
rcrb
push
repnz
xor
adc
out
popl
adc
add
adc
dec
mov
mov
popf
pop
int
and
sbb
aam
xchg
fmulp
aam
lea
dec
push
andl
repz
sub
xor
pusha
mov
xchg
or
outsb
cmp
rcl
out
aad
cli
mov
add
lret
enter
push
cs
cmpsl
loope
xchg
push
jo
cmp
jl
jno
aas
lcall
adc
sahf
ret
pop
pop
jbe
pop
jnp
mov
ljmp
cwtl
fwait
dec
mov
push
push
mov
in
bound
aad
or
leave
jnp
inc
dec
dec
xchg
add
fs
push
mov
jl
lahf
jg
mov
imul
daa
insl
rorl
pop
mov
jmp
dec
cmp
call
mov
lcall
jne
stos
pop
int3
arpl
scas
inc
and
lock
or
fdivrp
mov
outsl
imul
pop
out
mov
and
pushf
cld
aaa
nop
ljmp
stos
add
sahf
repnz
or
test
add
jg
cltd
repz
sub
imulb
sbb
rcll
xorb
aas
adc
jo
es
insl
fidivrs
push
cli
pop
cmp
mov
pop
call
adc
or
daa
push
rcl
out
inc
mov
inc
es
jo
mov
xlat
ror
pop
enter
cmp
cmp
mov
mov
shlb
mov
mov
clc
in
into
mov
lock
ljmp
es
or
std
pusha
mov
call
enter
xchg
cld
ljmp
cwtl
gs
xrelease
insb
aad
mov
gs
mov
jg
add
cmp
movsl
sbb
xor
std
iret
xchg
mov
and
insl
sahf
lods
cmpsl
push
mov
repnz
sub
lock
dec
ret
mov
fistpl
and
cmp
push
mov
data16
xchg
xor
lods
dec
decl
addr16
nop
out
out
and
test
or
cmp
add
popf
test
adcl
out
inc
shrb
push
addr16
mov
out
xorl
leave
sbb
mov
popf
je
xchg
cmpsb
cmp
cmc
mov
mov
stos
js
popf
inc
jns
stos
mov
xor
imul
ret
sahf
sbb
jecxz
mov
lock
sbb
or
cmp
loop
dec
inc
push
mov
cmpsb
mov
cmp
pop
or
cmpsl
add
stos
mov
repnz
xchg
mov
jne
pop
out
frstor
movsl
xchg
cmpsb
icebp
movsb
jo
pop
pop
movsl
pop
into
aas
dec
dec
call
pop
mov
ljmp
js
cwtl
or
pop
adc
jmp
rcl
jb
pop
mov
pop
loope
orl
mov
sbb
js
repz
mov
add
xorb
or
decb
pusha
jno
mov
and
xor
dec
xchg
mov
cmc
inc
push
shll
in
jmp
and
lahf
adc
xor
or
fstl
jo
int3
push
pop
mov
add
and
rolb
mov
xchg
add
enter
and
adc
out
pop
xor
not
inc
scas
dec
lahf
ds
outsl
sbb
dec
xlat
repnz
pop
dec
jge
cmc
leave
sti
sbb
insl
in
repz
rclb
roll
lods
test
and
push
mov
in
sub
out
cmp
addr16
test
jg
xchg
pop
xchg
pop
mov
adc
cmp
adc
sub
out
xchg
mov
cmp
xchg
xchg
sub
fistl
push
je
dec
cmp
jle,pn
xchg
adc
or
jo
xor
sbb
testl
cmp
lret
shl
arpl
test
repnz
sbb
mov
sub
xor
dec
mov
out
or
rolb
shlb
mov
je
xor
mov
xor
xchg
add
pop
roll
and
and
ficompl
lcall
mov
or
pop
sub
push
and
aam
pop
push
and
sub
adc
out
sbb
insl
jecxz
xchg
push
pushf
sarb
push
push
or
or
sub
movsl
cld
dec
data16
mov
or
jo
or
ljmp
inc
lea
sub
nop
sbb
insl
xchg
sub
jecxz
sbb
xchg
lods
dec
mov
and
ror
sbb
jne
imul
cmp
jmp
out
loope
in
inc
xchg
daa
mov
test
mov
jle
fdivrl
jg
sbb
or
push
mov
out
pop
push
lods
xchg
xchg
je
fcmovnb
push
mov
imul
inc
pop
mov
test
mov
sahf
into
fisubrs
test
cmp
les
inc
mov
push
into
mov
pop
test
pop
jbe
ret
mov
pop
jecxz
inc
sub
cld
xor
dec
add
std
inc
mov
lret
dec
push
jnp
cmpsb
test
cmpsl
mov
jo
mov
das
repz
in
sub
sarl
popa
int3
add
jp
imul
aas
dec
movsb
out
xor
loope
mov
push
cld
mov
jnp
out
mov
in
sbb
sahf
dec
xchg
sub
push
and
insl
add
sub
roll
sbbb
mov
in
test
shlb
fildl
sbb
inc
mov
ret
rcr
repz
test
sbb
xchg
js
inc
cltd
jns
icebp
inc
sti
cmc
push
xchg
pushf
pop
push
inc
adc
adc
fcomi
sarl
pusha
mov
mov
xchg
and
cmp
or
lcall
pop
stos
hlt
nop
sahf
ja
push
or
cltd
pop
add
repz
iret
cmp
fwait
or
icebp
cmpl
imul
sub
xor
clc
fildll
dec
test
sbb
cmpsl
in
cmp
xchg
aad
fsubrs
iret
xor
out
out
and
popa
xchg
pop
fs
push
pop
add
xchg
pop
cmp
cmpsb
stos
fbstp
push
dec
and
roll
push
cmpsb
imul
or
mov
and
lds
mov
jmp
outsl
cmp
sbb
rcl
sbb
pop
or
adc
fwait
loopne
test
arpl
mov
pusha
stc
mov
cmp
sub
and
cld
pop
int
dec
imul
dec
cld
scas
and
mov
stos
mov
aam
ja
jge
loopne
clc
out
dec
rol
cmp
clc
mov
cmp
sbb
in
mov
cmp
sub
aad
mov
aad
test
mov
sahf
xor
pop
jns
loop
sbb
pop
jno
call
stos
cmc
adc
mov
insb
lret
insl
pop
ret
bound
je
test
push
add
add
push
aaa
push
add
jb
mov
jp
fnstenv
add
pop
inc
cmp
test
mov
rol
cmpsl
jb
outsb
stos
fsubrl
insb
mov
fldl
push
das
popf
out
xchg
mov
cmc
imul
jmp
outsb
hlt
lret
roll
cld
cs
insb
pop
aam
loopne
xchg
sarl
cmpb
je
push
mov
gs
add
cmpb
scas
test
jge
enter
lret
je
jae
ret
sbb
sub
in
xor
aaa
inc
movsb
or
je
and
cwtl
cmpsl
mov
repnz
jae
cmp
scas
std
in
xchg
in
inc
pop
neg
push
stos
js
std
xor
fistl
sub
outsb
dec
sahf
loop
ss
mov
sbb
and
xchg
mov
imulb
pop
shr
je
fcoms
or
adc
sahf
orb
sbb
jge
nop
or
jno
mov
jbe
je
into
sbb
cwtl
gs
je
mov
adc
popf
adc
shll
hlt
nop
jecxz
stc
dec
rcrl
mov
hlt
xchg
ss
inc
gs
and
outsb
outsb
loope
lds
nop
aas
cli
cmp
mov
in
shl
dec
imull
xchg
mov
add
sub
push
shll
iret
addr16
ja
mov
ljmp
push
cltd
cltd
lahf
repz
addr16
jns
cmpsl
nop
dec
jbe,pn
adc
aad
inc
xchg
jae
push
test
ret
jno
mov
syscall
in
lret
jp
loop
adc
test
mov
sbb
jns
popa
inc
frstor
subb
lret
cmpb
and
xchg
push
shll
jmp
xor
mov
cmp
mov
jae
and
repnz
xor
scas
adc
arpl
je
loopne
pop
fnsave
out
clc
hlt
mov
cmp
punpckhdq
push
adc
ljmp
ja
mov
jle
pop
lret
lret
cmp
add
and
clc
and
movsl
insl
fldt
xchg
negb
outsl
punpckldq
out
jnp
addr16
jp
xchg
int
inc
xor
loope
call
std
or
leave
pusha
inc
insb
pop
lock
xlat
test
mov
iret
xchg
push
mov
out
xchg
fiadds
scas
mov
jmp
mov
icebp
xorl
icebp
xlat
lahf
or
mov
daa
mov
jp
test
xchg
xlat
jbe
les
fnstsw
mov
or
pop
xor
jnp
mov
xor
inc
fcompl
shlb
push
lahf
rorl
insl
inc
lods
pop
negb
clc
adc
jecxz
mov
das
adc
xchg
xchg
btc
mov
jmp
dec
das
testl
add
push
push
jo
mov
xor
movsb
mov
xchg
mov
insl
faddl
call
sub
in
fdivrp
cmc
mov
push
js
rolb
add
mov
mov
sub
inc
sbb
fs
push
je
inc
xor
jp
sahf
sti
adc
push
into
mov
push
push
mov
mov
mov
lcall
out
mov
leave
andl
shlb
sbb
gs
jmp
adc
fiadds
xchg
les
in
mov
push
dec
in
adc
mov
lods
das
sub
adc
and
cmp
fs
xor
jnp
push
bnd
mov
xor
xchg
rolb
jne
push
stos
xorl
mov
outsb
jge
mov
js
adc
les
xchg
repz
ds
insb
add
loope
fiadds
xchg
fstl
sub
or
repz
repnz
or
xchg
inc
and
ss
mov
je
mov
cmc
lods
push
push
adc
push
pop
arpl
mov
inc
lcall
dec
dec
mov
aaa
fmull
sbb
cld
call
daa
test
imul
jle
idivl
inc
jecxz
dec
adc
ret
push
inc
mov
add
fs
ja
jle
push
lea
test
push
mov
add
xor
cmpb
mov
sahf
and
cmp
repnz
rorl
add
daa
jb
roll
dec
repnz
mov
mov
xor
stos
dec
push
inc
jge
push
jl
les
scas
shlb
xchg
mov
hlt
jg
adc
and
scas
cltd
mov
push
js
pop
ror
xchg
hlt
ret
xor
inc
mov
pop
jge
cmp
mov
sarb
mov
pop
add
daa
cltd
stos
pop
jmp
xor
cs
js
clc
push
or
fstps
testb
jecxz
xchg
outsb
or
mov
and
arpl
mov
lcall
inc
es
leave
test
fidivrs
fwait
xchg
mov
xchg
mov
pop
mov
xor
inc
push
das
out
mov
repz
lea
ja
mov
adc
je
xor
inc
sbb
cmp
fbstp
and
inc
movsl
std
push
mov
mov
loop
jmp
xor
jge
lret
andb
out
fdivs
insl
push
sbb
hlt
test
and
into
push
pop
mov
repnz
mov
mov
in
shl
cmp
or
aad
mov
fwait
aam
cwtl
cmpsl
lahf
dec
pop
fdivr
jae
es
data16
lods
popa
pusha
xchg
pushf
jb
cmp
mov
push
sub
sahf
stos
inc
popa
nop
call
popa
cmpsb
repnz
pop
jns
stos
ror
pop
sub
cmpsl
add
scas
or
pop
insl
aas
xchg
adcl
stos
stc
mov
fsubl
mov
fs
mov
daa
outsl
pushf
jns
dec
cmpsl
int
or
cwtl
jb
sbb
fadds
hlt
jae
fidivrs
and
sub
dec
aad
mov
push
out
movsl
test
sub
dec
cmpsl
pop
sbb
push
stc
push
pop
jp
sbb
mov
inc
ret
jae
push
inc
sub
imul
dec
in
loop
or
dec
pop
mov
pop
mov
ja
out
jle
out
or
sub
inc
cmp
insl
dec
jns
into
add
shrl
jns
pop
cltd
lcall
add
jle
aaa
aam
inc
cmp
mov
push
rorb
ficomps
cmp
rcl
imul
fnsave
cmc
les
mov
sbb
push
cld
or
insb
and
cmpsl
sub
or
pop
push
lods
in
xor
ror
sub
rcl
popf
mov
jle
mov
pop
mov
jle
sti
pop
sub
outsb
mov
inc
add
or
mov
push
imul
mov
lea
jo
adc
loopne
lcall
jo
shll
fldpi
adc
dec
stos
push
js
cld
in
sbb
cmc
mov
int
loopne
je
ds
out
cmp
dec
mov
or
sbb
lret
test
filds
xor
movsl
mov
jecxz
stos
addb
push
test
sahf
fmull
add
or
and
cld
jmp
call
mov
cmc
je
fimuls
mov
and
xchg
gs
jg
mov
stc
sahf
jbe
sti
jg
iret
je
pop
or
ret
je
mov
adc
xchg
mov
in
add
xor
daa
lock
jle
dec
rcrb
ds
mov
fwait
in
stc
jbe
cmp
adc
jl
movsl
call
mov
fsubr
out
jno
inc
scas
jbe
inc
ret
outsl
push
sbb
jbe
sbb
inc
sbb
ret
dec
addr16
mov
add
pop
test
xcrypt-ecb
cmpsl
mov
mov
inc
lahf
jnp
insl
ret
repz
cmpsl
adc
nop
mov
mov
mov
or
and
hlt
aas
aam
inc
jl
dec
outsl
add
push
sub
mov
fwait
ds
dec
ficomps
fwait
out
gs
es
stos
mov
or
sub
gs
in
outsb
fists
mov
mov
int3
mov
int3
mov
jb
xchg
lahf
dec
push
std
push
mov
stos
movsl
pop
ret
sub
adc
aaa
and
sub
cmp
sahf
bswap
mov
pusha
xor
andl
lods
and
imul
cmpsl
out
fs
cli
sbb
or
inc
js
gs
cmpsl
fldl
imul
arpl
mov
mov
pop
rorb
jle
xchg
xor
aaa
jmp
movsl
and
push
shlb
inc
xchg
test
test
insl
loopne
es
sub
jns
rcrb
in
bound
jae
movsb
lret
gs
fistpl
cmp
pop
and
jg
dec
dec
fs
dec
mov
and
push
out
dec
popf
and
test
insl
xchg
gs
fs
xor
jb
mov
arpl
nop
inc
xor
adcb
and
mov
out
loope
scas
int3
mov
in
loopne
add
mov
xor
push
mov
or
les
jmp
out
icebp
inc
jb
pop
mov
aad
dec
cmp
adc
jg
mov
sbb
int3
fildl
mov
mov
lods
push
notl
aas
xor
pusha
stos
scas
push
stos
lods
ljmp
jge
xchg
mov
es
xchg
xor
mov
test
or
mov
push
sub
jno
inc
test
jbe
jnp
xchg
in
sub
inc
call
out
and
pop
jl
sbb
repnz
bound
lcall
inc
mov
fnstenv
inc
aaa
popf
loop
imul
inc
cltd
fcoms
jp
test
xor
inc
add
ljmp
inc
cmp
jns
xor
fnstcw
sbb
adc
pop
push
jns
mov
inc
and
pushf
ret
inc
enter
je
xor
shlb
addb
fildll
sar
stos
push
or
cwtl
or
mov
mov
aad
xor
push
out
xchg
shrb
adc
jnp
cli
ljmp
mov
iret
pop
scas
dec
xchg
out
jmp
jbe
xchg
push
pop
push
inc
sub
mov
lock
aad
and
pop
sub
iret
pop
jno
fwait
popf
movsb
mov
fwait
cmp
sbb
adc
andb
mov
push
xchg
aas
sbb
adc
pop
adc
cmp
sar
lods
dec
xchg
clc
xchg
xchg
leave
fisubrl
and
iret
sbb
and
sbb
popf
inc
push
mov
dec
pushf
xchg
sub
aaa
data16
dec
decb
push
idivb
sub
lods
cmp
add
decl
inc
pop
ret
mov
pop
mov
cltd
mov
std
fwait
out
dec
sub
mov
mov
or
shlb
test
ljmp
cwtl
es
cmp
icebp
shl
push
and
adc
scas
dec
jo
sub
ret
fisttpl
test
insl
lcall
push
repnz
fcomp
loope
adc
add
inc
int
jg
mov
push
jae
sub
clc
ficomps
mov
mov
cld
mov
xchg
lahf
loop
les
int3
rolb
aas
mov
cld
add
and
or
and
fdivrs
cs
inc
sub
stos
xor
pop
ja
push
cltd
lods
mov
or
scas
jl,pt
adc
cmpsl
ja
popf
inc
test
push
inc
es
add
jo
mov
dec
roll
insl
push
add
ja
xlat
inc
setno
xchg
popf
jp
push
testb
mov
pop
or
icebp
mov
call
mov
jns
pop
in
mov
lret
adc
push
fcoml
in
cmp
std
addb
and
lock
and
daa
jnp
leave
add
cmp
xchg
mov
adc
int
hlt
mov
into
sbb
aas
jge
in
mov
pop
movsl
add
aaa
xchg
str
xchg
pop
mov
inc
lahf
enter
xor
dec
jo
in
loopne
push
xor
rcrl
mov
imul
aad
enter
dec
push
mov
sbb
aad
scas
mov
mov
roll
cld
test
mov
addr16
xchg
inc
sbb
divl
fs
insl
mov
mov
stc
sbb
dec
and
stos
idivl
out
pop
es
loop
out
adc
movsb
sbb
daa
insl
push
adc
lcall
pop
vpmadcsswd
jbe
adc
pop
pop
test
cmc
and
inc
adc
jge
jnp
jae
inc
jmp
js
loopne
jbe
jg
pushf
xlat
dec
pop
jle
push
or
cltd
mov
scas
push
cmp
dec
in
hlt
std
testb
fadds
out
ficoml
rep
xchg
sbb
rcr
sub
push
imul
mov
mov
xchg
hlt
sub
les
push
dec
lahf
mov
repz
test
and
xor
ljmp
fwait
pop
lret
jae
jp
fistl
mov
fxtract
dec
mov
sahf
cmpsl
pusha
das
cmp
cltd
mov
mov
mov
mov
leave
test
in
pop
mov
mov
negl
in
lea
fmuls
loope
xchg
inc
sub
out
jo
loop
mov
xchg
inc
jg
push
push
cwtl
xor
aas
in
pushl
mov
mov
dec
mov
jnp
test
out
jbe
stc
jnp
pop
xor
mov
gs
mov
push
mov
adc
popa
data16
fcmovne
xorb
mov
data16
ret
adc
jle
ljmp
sahf
inc
into
insb
stos
push
loope
in
shr
imul
cli
ljmp
sub
jecxz
in
and
aam
ss
mov
xchg
bound
jg
adc
stos
scas
lds
jg
mov
add
push
out
sbb
popf
xor
outsl
or
ds
inc
adc
sbb
cmp
pop
jns
sub
mov
pop
sahf
mov
or
inc
xor
push
push
inc
jnp
bound
gs
fnstsw
shrb
in
loop
nop
rorb
and
adc
repz
pusha
shlb
mov
int
fidivrs
jns
cwtl
inc
jp
test
push
popf
scas
cmp
xchg
lea
push
lret
push
popa
sub
mov
jo
push
push
push
mov
dec
insb
sti
rclb
jns,pt
into
dec
loop
jae
push
repz
lds
inc
out
push
test
and
test
mov
adc
push
pop
sub
enter
loope
ljmp
sbb
dec
xchg
in
mov
inc
lock
add
aaa
adcl
fidivrs
pop
cmp
inc
rclb
loopne
test
int
lret
fmuls
in
shl
outsb
jmp
push
repz
subb
fmuls
and
outsl
jno
jle
push
mov
mov
adc
jmp
mov
icebp
mov
stos
inc
adc
push
mov
push
lahf
nop
and
das
out
dec
scas
jg
js
sahf
xor
jae
call
push
and
jb
cmp
mov
xchg
push
sub
jp
test
cltd
pop
enter
adc
sbb
jmp
pop
or
cmp
xchg
imul
notl
or
cs
out
or
xlat
pop
mov
cmpsb
les
xchg
cmp
xor
daa
mov
mov
cmp
xchg
inc
push
xor
in
icebp
inc
test
inc
in
adc
xchg
jg
push
popa
mov
lock
or
mov
mov
imul
es
mov
xchg
addr16
je
adc
dec
loope
in
mov
add
fdivrl
add
xor
mov
sbb
push
fiaddl
sbb
inc
cs
rclb
ret
sbbl
add
dec
cmp
push
jb
cmpsb
es
jo
push
sub
dec
inc
cmpl
ret
test
or
outsl
ret
or
add
sarl
test
mov
mov
jne
inc
les
cmp
push
notb
je
add
ret
jmp
xchg
xchg
addr16
sub
sbb
sub
add
mov
sbb
out
xchg
out
sbb
sti
and
imul
out
mov
outsl
inc
mov
pop
mov
ja
jne
hlt
scas
sub
addr16
cwtl
xor
fwait
sbb
fisttpll
mov
sti
push
aaa
inc
int3
push
inc
xor
inc
js
dec
lcall
mov
mov
sti
into
xchg
xor
xlat
pop
cmp
cld
xor
push
sub
inc
mov
daa
cwtl
or
or
push
in
test
mov
jge
in
inc
ss
sbb
fs
xchg
icebp
jmp
inc
jp
in
stc
jle
sahf
js
sbb
lods
adc
xchg
push
jle
out
and
inc
push
or
sbbl
mov
inc
add
fdivs
stc
insb
dec
loop
cmpsb
lret
mov
add
xor
sbb
cmc
mov
stos
fsubrl
xchg
pusha
sbb
xor
imul
mov
lcall
rorl
dec
adc
mov
in
ljmp
adc
mov
jne
mov
imul
aas
xchg
cmp
arpl
pop
frstor
sti
inc
xlat
ret
push
scas
mov
mov
sub
lret
roll
cmpsb
adc
mov
pop
arpl
test
insl
xor
xchg
js
in
and
test
and
mov
inc
xchg
scas
fcoms
sbb
data16
lods
lret
sbb
adc
pop
addr16
fwait
mov
sbb
cmp
jge
out
push
sub
add
mov
xchg
into
lock
loope
adc
in
pop
lock
push
fsubrl
mov
adc
and
and
daa
sbb
mov
xor
ret
out
sub
or
push
pop
shlb
adc
aaa
dec
frstor
xchg
sbb
cmpsb
sub
and
arpl
sbb
cmp
xlat
addr16
shlb
mov
pushf
testl
imul
into
loop,pn
iret
push
cmpb
mov
push
ret
enter
push
call
es
aad
fcomp
in
stc
add
cli
xor
loope
mov
outsb
icebp
adc
stos
nop
push
fcomps
pusha
ss
sbb
sbb
jl
and
imul
in
mov
clc
pushf
xor
js
mov
fucomip
xor
lods
sbb
push
cmp
and
mov
lret
xor
es
add
rol
fldl
mov
pushl
in
adc
pushf
scas
mov
inc
inc
insb
lret
clc
orl
adcb
xchg
push
stos
enter
cmp
inc
ret
mov
inc
in
inc
jl
jmp
loop
dec
jmp
push
imulb
out
push
cmp
add
mov
into
mov
fildl
int
add
in
cld
add
sbb
cs
xor
cmpsb
dec
jns
jo
insl
or
pop
int
and
xchg
stos
cmp
xor
pusha
shld
xchg
sub
insl
aad
cwtl
ja
mov
enter
mov
int
rolb
mov
test
lods
inc
mov
lds
out
jmp
adc
push
xchg
add
andl
orl
xchg
roll
popf
jecxz
xchg
xchg
rorb
mov
rorb
pop
outsl
mov
cltd
dec
shll
mov
int
jbe
or
out
outsb
stc
inc
psubusw
pop
add
loop
mov
mov
push
mov
out
pop
push
pusha
or
jno
ret
aad
dec
mov
lea
incl
mov
out
jbe
loope
sub
or
aam
add
push
sbb
or
ds
dec
add
pusha
mov
pop
lahf
ljmp
lret
cmpsb
je
inc
mov
pop
mov
imul
out
cmp
xor
pop
sti
into
jno
and
add
mov
outsl
mov
in
imul
dec
int3
aam
ja
bound
jno
nop
repnz
xor
in
pop
mov
pop
and
push
pop
push
jo
mov
shlb
out
lret
add
add
shrl
pop
add
pop
jl
add
loopne
fcompl
decl
dec
sbb
ror
jmpw
add
and
xor
xchg
ds
loope
addr16
test
push
xchg
hlt
or
ds
push
call
test
adc
enter
movsl
cmp
fisubl
sbb
cli
sbb
pop
aam
mov
fistpl
sbb
in
inc
pop
lahf
cmpsb
mov
or
jbe
insl
xor
jl
sub
or
push
add
add
pop
arpl
mov
cmpsl
pop
mov
push
inc
bound
es
outsl
dec
jb
fs
pop
pop
out
pop
adc
fsubrs
movsl
mov
stc
inc
out
outsl
sahf
cmp
sbb
in
inc
jno
mov
adc
fnsave
and
iret
mov
push
call
cmp
xor
jns
xchg
cmp
fnstsw
aam
push
or
call
popf
xchg
dec
dec
loopne
mov
icebp
sahf
leave
fidivs
mov
int
aaa
xchg
mov
mov
pop
ljmp
jle
lds
mov
mov
cmpsb
add
jo
mov
ret
or
ret
push
mov
imul
inc
lods
jnp
shl
arpl
dec
lcall
mov
push
ja
test
cmp
xor
xchg
cltd
mov
adc
cmp
mov
mov
adc
loope
notb
mov
pop
icebp
jb
push
fbld
sarl
test
jae
hlt
mov
push
dec
clc
mov
xchg
icebp
xchg
pop
push
mov
xchg
add
adc
push
ret
outsl
loope
mov
add
inc
outsl
xchg
pop
gs
jmp
ja
or
enter
adc
dec
mov
and
movsl
pop
mov
imul
into
pusha
sub
jb
pop
add
lea
xor
in
sub
xchg
cmpl
xor
fisubl
or
hlt
call
testb
movsb
shll
or
push
lret
test
addb
mov
movb
and
push
ret
hlt
lret
test
dec
mov
mulb
pop
pushf
sbb
sbbb
mov
mov
insb
int3
cli
xor
cmpsl
xchg
add
nop
outsl
arpl
ds
push
cmp
gs
fdivs
in
sahf
pop
aad
int3
fists
xchg
es
rclb
push
das
std
mov
push
les
jl
fists
mov
xchg
xchg
hlt
mov
fsubrs
adc
addr16
andb
mov
out
xchg
sub
pop
gs
add
xchg
push
cmp
cmp
mov
loope
jne
or
loope
loopne
nop
xor
iret
nop
ret
push
cli
ret
sbb
mov
add
std
xchg
leave
addr16
jp
je
sbb
test
repnz
mov
jns
les
jne
xchg
or
add
lods
add
push
jno
jns
scas
repnz
int3
sub
out
adc
add
cwtl
lods
pop
and
inc
imulb
gs
pop
xor
data16
jns
sar
jb
addr16
mov
sbb
flds
shl
add
dec
dec
jmp
or
jno
lahf
shlb
call
sbb
sbb
add
or
push
jp
clc
xor
or
pop
lea
xchg
pushf
jp
adc
sbb
movsb
out
xor
call
cld
add
xor
daa
leave
sbb
jecxz
push
call
mov
fsubrl
push
stos
jge
mov
lock
cmp
cmp
pop
inc
sub
insb
fwait
mov
sahf
ljmp
push
dec
mov
cli
inc
in
or
cmp
add
incl
jne
int3
fwait
jae
fdivs
cmp
pop
sbb
in
mov
push
cltd
outsl
loope
xlat
shl
dec
daa
mov
sub
rcrl
jp
int
dec
xchg
sbb
ljmp
cmp
xor
es
mov
jg
stc
in
add
int
int
mov
xor
cmp
sbb
fsubrs
ret
pop
xor
lock
xchg
or
pop
cmp
mov
add
pop
mov
js
dec
or
add
jmp
mov
mov
and
cmp
jmp
jl
cld
loopne
xorb
mov
lock
stos
pop
xchg
adc
fwait
aaa
mov
jb
int3
lods
cwtl
pop
sub
mov
cmp
fsubrl
iret
or
fs
xor
mov
test
aam
sbb
and
mov
out
outsb
cmp
sbb
ja
or
outsl
or
das
ss
arpl
sti
cmp
xor
fisttpl
shrb
push
cs
dec
inc
or
pop
ljmp
stos
subl
cli
aad
xor
push
daa
pop
mov
lods
ret
pop
sti
rcrb
mov
adc
push
push
mov
xor
push
jns
inc
fmul
sar
and
in
xchg
sub
loopne
enter
sarb
adc
xchg
and
pop
cli
into
add
ds
rcrb
test
mov
lds
xchg
xchg
mov
cmp
mov
xchg
mov
lock
sahf
jl
dec
in
or
stos
faddl
in
int
jns
and
push
das
xor
and
pop
inc
push
inc
popa
testl
dec
lea
mov
cmpsb
popa
cmp
mov
repnz
sti
shlb
inc
pushf
mov
xlat
rep
xchg
pop
bound
cmpsb
dec
rol
icebp
lds
mov
mov
shrb
addr16
fildl
sub
pop
push
fwait
sbb
insl
imul
push
ja
pop
mov
or
push
div
mov
pop
sub
out
inc
cwtl
imul
mov
cltd
test
xchg
test
ss
incb
add
mov
mov
enter
push
sub
pop
push
push
stos
sbb
in
pop
movsl
dec
lahf
cmc
or
push
leave
pop
lret
arpl
cld
andps
les
inc
lea
or
push
sbbb
push
mov
fidivs
pop
lods
in
inc
xchg
cltd
xchg
or
xor
or
and
sub
rolb
pop
sub
jb
xor
sub
cmp
pop
int
es
or
sub
popf
loope
mov
pop
aaa
loop
movsb
cltd
cmp
sub
pop
cmpsl
pop
fcmovnu
movsb
movsl
stc
loope
inc
inc
and
repnz
or
sti
xor
fwait
loop
jne
aaa
xchg
mov
cli
leave
fisttps
xchg
ds
cmp
or
cs
shll
jae
jmp
bound
roll
lods
sub
and
data16
fcmovne
mull
cli
cmc
or
add
or
lods
xchg
push
push
xchg
mov
nop
adc
cmp
add
pop
adc
std
pop
push
rcl
add
mov
or
mov
jo
push
enter
lea
stc
inc
push
fstl
cmp
nop
jne
cmpsb
sbb
lock
ja
lods
xor
or
les
jno
out
inc
pop
idivb
es
popa
sbb
cmp
jns
jb
add
add
xchg
hlt
and
add
data16
aam
lahf
scas
aas
loopne
mov
lds
fwait
lods
out
cmp
addl
dec
pop
test
mov
inc
testb
fbld
add
mov
loop
test
jnp
mov
lock
adc
dec
cltd
mov
adc
add
sub
out
mov
scas
repz
add
test
hlt
inc
iret
push
push
fdiv
fbld
push
and
aas
pusha
adc
mov
mov
xor
gs
push
jp,pt
stos
fists
rorl
cld
lock
gs
xchg
add
sbb
ret
arpl
ret
fldt
mov
or
xchg
repz
push
les
push
or
fsubl
cwtl
ss
jns
dec
int
pushf
ds
sbb
pop
mov
dec
les
xlat
fidivl
push
cmp
jecxz
inc
sar
sbb
test
cmpsl
cmp
fwait
aam
mov
sbb
jbe
mov
call
mov
lea
and
mov
imul
ds
pushf
inc
mov
adc
cmp
lahf
jns
pushf
push
aaa
xchg
cmpsl
or
mov
sub
lret
stc
ret
lahf
fs
adc
sbb
mov
cmc
mov
dec
mov
mov
jno
sbb
pop
xor
out
in
fwait
mov
sub
lea
fistps
aas
push
sbb
mov
xor
out
repz
push
sbb
dec
lock
push
dec
sbb
push
jbe
inc
push
je
push
sti
mulb
lret
mov
cmp
jmp
mov
and
add
fmull
arpl
dec
push
dec
dec
add
jb
push
mov
and
mov
shll
std
insl
icebp
lret
dec
adc
add
nop
loopne
xor
adc
sbb
inc
aad
xchg
sbb
jg
and
std
xchg
sub
push
mov
aaa
out
dec
sahf
cmp
and
out
mov
dec
aaa
scas
cmc
adc
in
ljmp
leave
adcl
mov
mov
loope
jp
jge
lahf
xor
sti
jb
mov
adc
fdivs
dec
inc
orb
lods
sbb
int
and
xor
roll
cmpsl
mov
cld
dec
pop
sbb
mov
add
call
inc
jno
mov
mov
test
or
aaa
cmp
jge
cwtl
cli
leave
jb
and
in
loope
sub
mov
or
ret
sarl
orb
and
in
mov
mov
mov
sbb
jb
mov
imul
outsl
cltd
popa
ss
adc
push
jnp
or
lahf
mov
jge
mov
mov
lret
orb
andb
sahf
lock
sbb
xchg
add
popa
pop
push
loope
mov
mov
xor
adc
enter
out
sahf
addl
in
xchg
mov
adc
dec
rcr
dec
mov
jge
out
notb
stos
sbb
and
xor
hlt
and
in
add
aam
rcl
int
fildll
or
mov
sbb
jge
inc
jnp
stos
or
test
push
stc
adc
aam
in
lret
aaa
jo
vcvtps2pd
inc
sub
lock
adcl
imul
lods
xchg
fsubs
xor
insb
push
es
inc
inc
insl
inc
cld
ret
xlat
fisubrs
push
arpl
push
cmp
and
aad
clc
negl
mov
insb
mov
movhps
or
push
int
fiaddl
loope
les
fdivrl
cmp
test
test
add
xor
movsb
aaa
out
mov
iret
mov
xor
lods
out
push
pop
out
inc
lods
cmpsb
mov
cwtl
adc
cmp
mov
xor
dec
pushf
ljmp
aaa
jecxz
dec
mov
fstl
push
test
les
nop
xorl
add
icebp
lret
pop
sbb
test
scas
loopne
into
sbb
mov
mov
lret
dec
fwait
add
jge
jae
push
inc
push
jno
pop
nop
push
je
add
mov
lret
xlat
add
sub
das
xchg
int3
xchg
mov
ret
adc
sub
jae
adc
xchg
xchg
cmp
or
jbe
in
in
hlt
daa
outsb
pop
xchg
jmp
test
dec
jb
push
shl
stos
inc
sbb
adc
fistpll
std
add
int
push
pop
xchg
xchg
ja
shll
out
les
stc
ja
and
cld
sub
jge
rclb
adc
push
in
mov
pop
push
lods
divps
jecxz
gs
in
adc
iret
xchg
and
and
sti
lods
in
aas
shr
lahf
dec
pop
fs
jl
cmp
lret
repz
aam
pop
fs
fmull
mov
pop
into
aad
mov
inc
adc
insb
cld
mov
adc
nop
in
mov
cmp
sub
pusha
stos
outsl
imull
inc
mov
pop
mov
lret
imul
jno
ret
scas
les
stos
sub
pop
mov
xor
mov
add
fadd
sbb
shll
ret
into
push
out
icebp
cwtl
pop
mov
dec
into
adc
sbb
inc
in
cld
daa
mov
jle
and
pop
xlat
pop
testb
cltd
test
mov
icebp
ror
xlat
add
sbb
xchg
dec
jno
popf
popf
repnz
out
test
in
push
or
xor
mov
pop
mov
imul
mov
or
pop
sub
shll
xor
leave
out
test
shl
push
dec
test
mov
repz
iret
andl
pop
push
in
lods
dec
aaa
jae,pn
nop
cltd
or
out
adc
adc
push
imul
test
mov
pusha
les
aaa
push
pop
xchg
sbb
inc
hlt
mov
sub
lcall
jno
push
pop
jb
mov
cmc
sub
jo
popf
cmpsb
shll
xchg
adc
shll
shlb
insb
cwtl
sub
rorb
js
pusha
rcll
pop
ret
add
pop
fisttps
cmpsl
repz
out
pop
mov
movsl
ja
xchg
jmp
mov
mov
jle
mov
in
scas
aad
mov
outsl
sahf
popf
sti
lcall
pushl
push
inc
ss
xor
cmp
in
cmpb
testl
xor
sbb
fldt
pop
lahf
mov
mov
leave
add
out
cmp
mov
jnp
test
mov
jb
push
test
dec
jle
negl
xchg
lret
dec
ficomps
fildll
mov
dec
mov
jmp
dec
jp
test
shrl
cwtl
and
test
dec
inc
rcl
mov
xchg
lret
sub
pop
cmp
push
aad
ret
sahf
test
sti
lahf
fcmovnbe
sbb
icebp
mov
and
lds
dec
and
jb
sbb
popa
bound
cmpsl
mov
and
aaa
mov
mov
rorl
add
test
xor
push
sub
int3
nop
sub
scas
mov
xor
int3
icebp
fucomi
mov
dec
jg
cltd
insl
adcb
aaa
or
push
xor
or
push
dec
xchg
push
ret
test
mov
mov
add
xor
xor
and
and
sahf
roll
dec
dec
adc
mov
cmp
stc
adc
push
xorl
cs
and
out
adc
xchg
ds
pop
cmpsb
cmp
mov
mov
out
adc
fs
cmp
push
ja
popf
cmpsb
pop
sbb
imul
cmp
mov
decb
jmp
xchg
and
std
cmp
or
das
out
dec
mov
jmp
loopne
scas
mov
cmp
adc
dec
enterw
sbb
call
fsubl
sbb
mov
daa
jmp
mov
or
push
aam
imul
repnz
repnz
repnz
pop
test
cmp
dec
jmp
sbb
push
into
pop
ja
inc
jge
cli
xor
cmp
xchg
lock
insb
dec
inc
jns
jns
push
test
cmp
cmp
daa
popf
pop
out
aam
dec
dec
fidivrl
scas
dec
sub
adc
jo
inc
daa
xor
scas
imul
shl
xchg
imul
outsb
into
aaa
hlt
dec
dec
pop
addr16
dec
fldt
xor
mov
cs
jle
test
ret
fsubrp
mov
fisubl
js
cmp
mov
cwtl
sbb
stos
movsl
loope
dec
call
mov
inc
dec
outsb
int3
cli
into
fcoml
leave
adc
clc
cli
fstpt
cmc
int
adc
jo
mov
jne
push
daa
nop
rclb
cmpsl
sub
rorb
adc
dec
ret
and
repnz
movsl
incl
push
push
out
iret
pop
sbb
enter
cltd
sub
dec
sub
ljmp
xchg
sti
lods
mov
aas
dec
stos
pop
pusha
push
sbb
xchg
sub
push
lods
cmp
cmp
test
aam
cs
and
std
push
pop
and
fwait
jns
ret
jns
lock
arpl
xor
xchg
inc
dec
cmp
and
pop
jl
sbbb
lods
adc
in
or
add
add
pop
sbb
unpcklps
lods
cli
popl
les
aas
mov
enter
dec
idiv
out
sbb
xor
jle
xchg
dec
cli
xlat
sub
mov
xchg
mov
push
xchg
jg
inc
inc
and
es
pop
cli
dec
push
mov
subb
aas
daa
in
jo
sbb
mov
daa
cmpsl
sbbl
jecxz
arpl
jb
insb
mov
dec
push
jg
cli
or
fucomip
sbb
data16
inc
push
imul
jmp
xchg
xlat
pop
jo
pop
mulb
lret
lods
jns
fstpt
xlat
mov
sub
sbb
es
push
je
ja
fmull
hlt
std
sbb
cwtl
jp
scas
sub
cmp
repz
jb
pop
lcall
push
imul
and
movsb
sbb
sub
push
inc
clc
and
ret
mov
ret
push
cs
or
gs
fcomip
xorb
push
and
jnp
mov
inc
js
lods
aaa
movsb
loope
arpl
cmp
mov
in
xchg
dec
fidivl
fcomi
adc
repnz
inc
xchg
cwtl
adc
xchg
out
cltd
dec
push
stos
mov
dec
imull
xor
mov
and
lret
les
fs
xlat
pusha
fisubl
das
lret
mov
mov
or
nop
pushf
sahf
js
jo
inc
push
xor
lret
or
add
xor
cld
jge
test
mov
jb
push
inc
in
pop
in
enter
pop
mov
int3
fs
xlat
imul
fnstenv
shrb
bound
inc
jecxz
add
pop
and
cltd
adc
pop
nop
xchg
ds
cltd
outsl
jl
and
rcrb
in
ret
xchg
cli
in
pusha
scas
imul
lock
enter
divl
mov
gs
xchg
mov
pop
arpl
adc
iret
sub
pop
dec
lcall
lods
push
sbb
dec
aaa
cli
movsl
call
test
bnd
pop
aas
das
ret
fmul
add
ret
inc
and
loopne
stc
cltd
daa
jbe
mov
lret
xlat
fdiv
das
cltd
xlat
push
hlt
jno
lods
xor
fildll
cmp
shlb
out
cld
xor
in
cli
jne
das
lret
push
adc
imul
mov
insb
xchg
xchg
roll
jecxz
rcll
sub
int
push
fisttpll
jecxz
cmpsl
sahf
dec
int
fimuls
push
push
into
jo
mov
nop
fiadds
sub
scas
mov
pop
mov
pop
je
sub
add
pop
loop
dec
mov
decb
and
pop
jo
cmpsb
jns
test
stos
pushf
xlat
dec
mov
add
xchg
mov
mov
or
arpl
or
ds
and
push
add
xchg
lods
out
jnp
out
test
adc
fs
and
cmpsb
ja
cwtl
movsb
pop
stc
adc
inc
push
cmp
mov
out
jnp
scas
nop
add
jns
mov
jmp
jae
jnp
test
sub
sbb
fldl
je
jl
bound
inc
repz
insl
mov
pop
cmpsb
loopne
push
add
dec
xchg
mov
fldcw
adc
inc
into
xor
sbb
mov
outsb
mov
lds
xchg
xor
enter
popa
in
btl
pop
xor
inc
pop
xchg
pop
lds
adc
and
sbb
jge
xlat
aad
scas
fbstp
loop
xchg
mov
bnd
mov
jbe
add
ljmp
mov
fisttpl
into
movsb
lods
add
add
daa
xor
lods
cmp
popf
les
cmp
jo
dec
in
nop
aam
rol
lcall
adc
jae
repz
scas
xchg
or
adcb
orb
imul
sti
push
mov
daa
xchg
push
int3
mov
jp
jns
lret
movb
pop
mov
pop
int
loop
xchg
jp
xchg
or
stos
in
mov
pop
shrl
imul
aam
mov
out
mov
out
rcrb
mov
and
jecxz
or
pop
mov
mov
and
add
push
jmp
xchg
outsl
sub
aas
xchg
dec
cmpsb
testb
mull
rolb
imul
rcr
push
daa
pop
mov
jno
adc
push
andb
fiaddl
mov
lcall
mov
pushf
pushf
inc
mov
aaa
or
mov
inc
repz
test
dec
pop
sub
lcall
push
cmp
pop
mov
pop
add
outsl
or
ficoml
ss
hlt
nop
push
aas
adc
jae
mov
inc
inc
dec
and
adc
mov
push
jnp
popa
add
inc
adc
sub
arpl
stc
pop
jne
ret
lahf
xchg
push
ret
push
cltd
je
jae
lods
xchg
lret
jle
cmpsl
dec
xor
ljmp
mov
adc
scas
ret
jmp
jns
sub
lea
push
push
inc
add
rolb
xchg
xchg
push
sahf
xchg
into
icebp
mov
jb
addl
dec
xor
push
das
movsl
in
loop
pop
stos
rcll
mov
push
daa
bound
xchg
dec
fwait
lods
popa
imul
pop
iret
xchg
lret
subl
hlt
sub
and
mov
dec
adc
push
out
pusha
adcb
lcall
jmp
rorl
or
aas
leave
ljmp
movsb
inc
test
push
fiaddl
xchg
sbb
mov
xchg
imul
cli
hlt
imul
mov
cmc
and
and
inc
aas
xor
lcall
imull
loop
fisubrl
cld
xchg
testb
dec
fisubs
xchg
mov
and
lahf
out
in
push
btr
cwtl
call
adc
lds
inc
out
add
cmpsb
data16
es
dec
stos
xor
fidivs
mov
outsb
aaa
xor
pop
push
outsl
mov
xchg
outsb
dec
and
and
mov
sub
pop
ss
movsb
push
bound
je
insb
xlat
xor
sbb
gs
mov
cwtl
int3
inc
loopne
push
xchg
dec
dec
and
mov
sub
out
popf
out
xor
xchg
in
mov
mov
outsl
lods
fdivrl
cwtl
pop
out
outsl
mov
cmp
jnp
pop
mov
push
mov
pop
add
xchg
inc
jno
mov
mov
push
ljmp
ss
cmp
cmpsl
jnp
xorl
xor
sbb
pop
jno
repz
stos
scas
dec
mov
pushf
adc
jp
es
in
test
mov
sub
xchg
sbb
nop
stc
and
xchg
and
movsl
xchg
in
pop
sbbb
cli
dec
push
sbb
xor
pushf
iret
fucomp
ja
lds
pop
addr16
fstl
sbb
pop
idivl
shlb
push
jb
push
cltd
je
test
mov
inc
mov
add
jbe
shl
enter
mov
mov
push
loopne
mov
cs
adc
mov
int3
lods
jle
es
jp
jbe
and
bound
mov
pop
cmp
neg
xchg
sti
jle
or
scas
jecxz
mov
test
daa
repnz
andb
decl
xchg
push
iret
ret
adc
push
pop
cmp
mov
fsubs
xor
rcll
iret
aas
fistpll
call
out
push
insl
sbb
cld
and
xor
test
jne
test
mov
hlt
frstpm(287
mov
dec
loop
jg
mov
sub
gs
xlat
sbb
inc
push
popf
test
add
stos
add
stos
orb
xor
mov
popa
loop
push
stos
lret
pop
lods
ficoms
jecxz
repnz
mov
cltd
das
inc
ja
hlt
pop
cltd
cmp
popa
and
sub
jl
cmpsb
adc
dec
test
nop
xchg
push
or
push
es
out
lret
cld
addr16
add
inc
shlb
and
test
pop
jg
push
sbb
dec
and
mov
jmp
clc
sbb
xor
cmp
ja
sub
pop
sbb
cltd
jl
adc
popa
fsubrp
subl
add
push
movsb
xchg
ficoml
pop
jp
fnstenv
js
inc
push
and
cmpb
aas
adc
icebp
xor
call
push
fdivp
aam
adc
or
mov
sub
xorl
xor
hlt
mov
xchg
xchg
add
test
shlb
mov
sbb
jnp
inc
jmp
cmp
insb
mov
jp
gs
add
inc
pop
mov
insl
stc
pop
fistpll
fwait
pushf
lods
lds
mov
sub
int
mov
arpl
mov
push
pusha
add
pop
inc
adc
push
pop
mov
adc
xor
jne
ss
dec
sub
inc
sub
mov
push
pop
ret
lahf
pop
icebp
outsb
mov
sub
out
mov
aaa
pop
out
icebp
xorb
lea
cmpb
add
adc
call
and
sub
iret
inc
dec
test
insl
fadds
or
jo
lret
xchg
movsb
mov
xchg
adc
add
or
test
mov
lcall
lods
outsl
sbb
inc
pop
out
popl
es
iret
cmp
mov
xchg
xor
ds
loop
in
dec
mov
leave
xchg
push
test
or
lock
xchg
mov
fcompl
sahf
sahf
lcall
aaa
aad
cli
xchg
repnz
cld
and
inc
jbe
rcr
clc
paddb
dec
fldcw
mov
mov
mov
mov
aam
shll
or
pop
out
cmpsl
sbb
mull
bound
jp
fistps
push
mov
dec
outsl
xor
rclb
ret
jl
scas
out
aad
jge
jnp
mov
loope
mov
pop
clc
fcmovu
and
dec
or
mov
pop
das
sahf
mov
jno
pop
dec
inc
lret
jg
mov
pop
flds
out
fadd
pop
rorl
rolb
gs
arpl
das
jno
js
aaa
push
sbb
std
push
add
cltd
mov
out
mov
outsl
push
jne
jb
push
arpl
push
fdivl
xchg
aam
jnp
jb
mov
inc
jp
and
inc
mov
sub
fxch
xchg
mov
jns
cmp
shll
dec
push
aas
lds
push
fstl
repnz
aad
sbbb
adc
add
add
mov
cmp
sub
in
push
int3
arpl
loop
mov
mov
mov
stc
push
es
jle
aam
shlb
sti
push
push
cmp
xor
sbb
rol
js
leave
and
pop
sbbb
insl
dec
out
dec
subl
lods
test
xor
hlt
clc
sarb
adc
ret
sub
xchg
aam
popf
shrd
xchg
insb
imul
pop
mov
mov
ja
and
and
jecxz
int
cmpsl
jmp
hlt
add
inc
dec
shrb
jo
inc
or
xor
nop
fidivrl
dec
loope
or
pop
cltd
sbb
ss
jle
adc
cmc
or
or
popf
cmp
dec
insb
cmpb
pop
sahf
bound
add
rcr
and
fcoml
out
pop
mov
jg
xchg
fucomp
push
das
push
repnz
mov
lock
mov
testl
pop
cld
ljmp
inc
pusha
cmp
loop
jbe
cmc
cmp
outsb
outsl
inc
gs
shrl
cmpsb
clc
out
push
xor
pop
or
xchg
dec
mov
push
mov
jmp
scas
fcomi
repnz
rorl
adc
jb
push
push
clc
fisttpl
or
adc
mov
cmp
or
imul
dec
xor
pop
xor
xchg
push
mov
and
mov
jmp
jg
push
in
xor
sub
mov
imul
push
daa
xlat
push
push
and
cmpl
cmp
xor
jl
fcoms
std
sub
xchg
ret
pop
jge
pusha
push
pop
aas
adc
push
or
adc
bound
xor
cld
mov
imul
fistps
fstl
jg
xchg
out
clc
repnz
or
or
add
jne
loope
sarl
stos
xchg
or
imul
mov
or
dec
adc
adc
jmp
je
mov
in
pop
mov
push
cmpsb
pop
lea
or
add
lea
std
iret
inc
mov
mov
push
popa
fldcw
mov
adc
jb
arpl
arpl
popw
and
jp
jg
jg
dec
cmp
lahf
mov
shrl
int3
xchg
cli
cwtl
loop
mov
cmpsb
dec
and
out
ds
es
xchg
sbb
mov
lret
mov
add
inc
push
xchg
loopne
pushf
imul
lret
cltd
mov
enter
xorb
sub
or
hlt
mov
loope
aad
lods
pop
dec
mov
test
sbb
stos
cli
pop
add
int3
pop
and
mov
inc
adc
adc
fs
pop
mov
into
xor
jo
mov
sub
dec
fcomp
dec
pop
dec
fcomip
sbb
cli
pop
mov
ret
sub
popa
push
outsb
mov
ljmp
mov
xchg
jne
pop
inc
jb
jbe
xchg
pop
and
push
push
movsl
in
pop
cmp
in
dec
jecxz
outsl
insl
fwait
cmpsl
or
test
movb
imul
pcmpgtw
dec
dec
adc
sbbl
inc
scas
into
fisubrs
into
sbb
lods
into
cmp
xor
sti
mov
aaa
sahf
inc
mov
xchg
lock
pop
xlat
lcall
stos
nop
or
jl
divb
push
mov
mov
jno
inc
imull
adcb
cli
mov
mov
stos
mov
pop
fwait
dec
jno
mov
out
shll
add
jne
mov
push
in
test
lret
pusha
lods
and
cs
sub
dec
dec
mov
pop
mov
jecxz
cltd
ja
int3
incb
jp
mov
pop
shlb
aam
cltd
roll
in
xchg
rcll
clc
pop
rcrl
in
or
popa
push
cmp
jle
mov
and
jl
mov
je
leave
je
sbbb
fisubrl
push
inc
int3
test
xchg
lcall
xchg
mov
daa
xor
mov
mov
jle
fcmovnu
cli
lret
inc
cmp
mov
cmp
adc
cmc
test
ror
jl
sbb
dec
sub
or
xchg
mov
out
or
inc
fwait
ss
lock
outsb
stc
shrl
movsb
or
out
je
mov
scas
cmp
lret
test
cmp
lret
cld
dec
mov
aas
out
roll
and
fwait
dec
add
xor
mov
push
cmpl
rolb
adc
mov
outsl
and
mov
cmpsb
test
mov
icebp
sbb
push
test
inc
stos
cs
xlat
in
jle
rorb
push
or
push
xchg
mov
rorb
pop
shl
adc
je
sbb
jle
sbbb
push
clc
inc
pushf
xchg
or
ss
in
pop
mov
shll
add
pop
dec
lahf
popa
fistps
stc
cmp
bsf
xchg
sub
repz
rcl
xchg
leave
xor
daa
sub
ret
sbbb
les
mov
fidivl
xchg
fsubr
mov
mov
jb
mov
rolb
sbb
xchg
lret
dec
cmp
daa
js
mov
pop
jmp
pop
jbe
mov
mov
shlb
xchg
fsubs
lcall
std
inc
js
cli
cmp
mov
sbb
mov
sub
push
scas
lcall
enter
scas
sbb
mov
push
jbe
clc
je
ljmp
ret
pop
dec
insb
xor
jge
dec
shlb
and
xrelease
dec
aam
adc
hlt
or
clc
push
jle
push
outsb
out
decl
sbb
lds
aam
fs
cmpsb
popa
and
pop
ss
enter
out
dec
and
pop
clc
nop
mov
cmp
xor
fmull
fimuls
xor
add
hlt
mov
mov
lahf
js
daa
shl
jle
cmp
lret
mov
pop
and
decl
xchg
cli
adc
fwait
mov
mov
ret
add
inc
insl
fbld
pop
xchg
andb
dec
js
inc
mov
and
cmp
lock
loopne
mov
clc
jp
addr16
xorl
fwait
push
das
xorl
pop
mov
in
and
sbb
daa
scas
inc
jne
or
arpl
hlt
cmp
add
ljmp
sub
dec
jmp
mov
daa
addr16
add
int
daa
pop
sbb
cld
cmp
mov
dec
cmc
push
loop
xchg
dec
outsl
sahf
mov
inc
inc
shlb
xchg
jecxz
push
in
int
fldl
mov
push
push
movsl
adc
pop
lret
and
orl
xor
in
mov
imul
push
jg
or
mov
sub
cli
les
adc
dec
sbb
sti
and
or
push
or
pop
aam
dec
loopne
test
push
lcall
sahf
shll
jge
lahf
test
shl
and
faddp
pushf
fcoml
inc
lods
out
mov
es
dec
xchg
xor
inc
les
push
or
and
adc
lret
dec
pop
mov
mov
stos
push
dec
sub
out
xchg
or
test
pop
jecxz
inc
mov
iret
stc
adc
mov
push
push
shlb
test
lods
jecxz
push
fs
push
in
push
ljmp
adc
fsubr
mov
sar
inc
addr16
mov
mov
les
pop
ret
addl
mov
jle
jmp
mov
jp
adc
or
lock
jge
lds
pushf
lret
shr
pop
mov
add
mov
pop
or
sbb
hlt
jp
pushf
or
fdivs
repnz
lds
sub
pop
stos
js
scas
mov
rolb
lahf
mov
mov
xor
jo
sbb
into
inc
pop
mov
leave
push
and
and
or
jecxz,pt
add
out
sub
push
push
push
testb
or
dec
nop
cmp
mov
scas
insl
adc
lds
fcmovb
jg
fmulp
in
outsl
xor
push
popa
xor
and
lods
mov
adcl
stc
cli
mov
and
mov
out
pop
hlt
test
cmp
and
je
insb
xchg
cltd
test
mov
add
arpl
inc
cmp
xor
mov
outsl
ds
rorl
in
aaa
jl
pop
jne
push
fsubl
sbb
popa
jecxz
mov
popa
sub
loopne
call
cmp
fwait
add
xchg
dec
insb
je
test
pop
aaa
and
add
pop
testl
adc
xchg
jo
dec
pop
leave
shr
and
sarb
inc
repz
les
aam
cmpsb
icebp
cli
pusha
and
pop
cmp
cmp
push
or
inc
pop
scas
xchg
sub
xchg
cmp
dec
pop
inc
add
movsb
fldt
andl
das
ljmp
outsl
dec
jmp
sbb
mov
sti
scas
aad
test
cs
test
mov
out
outsl
jge
adcl
pop
dec
insb
adc
fldl
ja
sub
xor
fdiv
in
test
mov
push
dec
pop
sarb
popa
ljmp
es
and
pop
or
rolb
xchg
push
sub
mov
push
xchg
cld
jae
inc
cmp
cmp
movb
mov
mov
push
ja
hlt
out
test
gs
cs
and
movsl
cmp
gs
and
icebp
in
xchg
scas
outsl
xchg
dec
pop
notl
pcmpeqw
pusha
push
cmp
inc
cmp
aaa
xlat
dec
mov
shrb
dec
les
das
int3
mov
sbb
xchg
pop
jp
stos
mov
gs
mov
push
ficomps
gs
and
scas
aad
iret
dec
lcall
xchg
hlt
dec
sub
data16
stos
jno
shrb
ret
mov
mov
mov
sbb
sahf
sub
lret
aaa
dec
out
andl
scas
dec
cld
addr16
lods
inc
lahf
mov
lret
shlb
and
arpl
sub
dec
std
and
loop
test
aas
hlt
and
outsb
adc
push
inc
clc
sub
roll
adc
push
call
and
sarl
push
xchg
cmp
je
and
pop
inc
lcall
aas
lods
inc
je
jns
xor
jg
push
mov
mov
mov
stc
inc
or
repz
out
mov
xor
dec
pop
adc
xor
popf
dec
jno
add
cmp
xor
push
data16
sahf
pushf
sub
loope
sub
jb
sbb
movsl
mov
movb
sbb
mov
pop
jge
dec
test
push
adc
lock
fcmove
dec
or
jnp
rcl
pop
shll
insl
mov
filds
aas
mov
dec
or
adc
sub
dec
add
push
jp
jo
pop
sbb
mov
lods
or
lret
mov
maskmovq
imull
sbb
cltd
mov
imul
andl
add
jo
call
push
mov
jecxz
ret
daa
repnz
dec
lods
repz
bound
in
mov
sahf
pop
cmpsb
fmuls
mov
jmp
add
mov
fdivrl
into
mov
push
push
inc
scas
lods
or
inc
mov
repz
int3
ljmp
and
mov
push
inc
in
cli
mov
dec
mull
shrd
cmp
xorb
push
push
out
cwtl
subl
push
call
mov
loope
sbb
cli
cmp
int3
fisubs
inc
sub
in
enter
dec
pop
xor
jae
test
sbb
cmp
lods
gs
jbe
inc
inc
loopne
and
neg
dec
dec
hlt
pop
xor
test
and
insl
cmp
or
int
repz
dec
loop
fwait
sahf
cmpl
fisttpll
mov
inc
pop
popf
mov
orb
mov
testl
mov
cmpl
cmp
in
sarl
jbe
jb
sub
jecxz
mov
and
xchg
les
jmp
rcll
imull
cmp
stc
jp
xor
lret
add
mov
les
or
movsl
xchg
cltd
ret
pop
inc
dec
jmp
les
aas
xor
clc
iret
stos
xor
pop
push
jg
scas
loop
add
adc
mov
sbb
jnp
xchg
int
adc
sbb
stc
push
dec
jmp
mov
cmpsl
pop
mov
jecxz
and
mov
les
jmp
pop
mov
pushf
stos
insb
fisttpl
mov
in
movsb
push
aad
stos
adc
adc
dec
fisttpll
cmp
mov
fadd
sbb
negl
jmp
out
fwait
sti
lock
pop
push
out
test
cli
gs
mov
inc
adc
sub
xchg
inc
aad
jmp
xlat
mov
xchg
mov
sub
mov
dec
xor
jbe
pop
cmpsb
mov
push
xor
jp
call
push
sbb
fcmovnb
sub
iret
add
loop
dec
fnstcw
clc
cltd
sbb
fidivl
xor
cs
add
xor
push
or
daa
pop
xchg
mov
das
fsubrs
bound
lods
push
addr16
sbb
std
dec
xor
dec
cmp
and
aam
sbb
lods
outsb
pop
mov
cmc
fisubs
shlb
add
divb
enter
scas
mov
mov
inc
loopne
dec
push
jl
shrb
cmpsl
or
fnsave
jge
add
add
pop
rcll
or
adc
pop
cmp
cmpsb
sbb
scas
pop
cmpb
sbb
xor
ficomps
imul
xchg
aam
call
mov
mov
mov
movsb
cwtl
popa
mov
rcr
add
inc
je
push
pop
in
and
dec
xchg
or
or
stc
mov
jno
mov
mov
adc
in
fisubrs
pop
push
orb
fistpl
or
xorl
mov
xchg
fildll
les
xchg
inc
shl
arpl
xchg
xorl
lock
cld
xchg
pushf
mov
cs
cmp
sahf
sub
cmp
inc
ja
mov
mov
xchg
mov
ret
loope
cld
in
adc
jo
fstl
outsb
jmp
sub
xor
fistpl
fnstenv
mov
aaa
mov
lcall
dec
lods
seta
das
js
fwait
or
lock
adc
add
sub
jo
std
mov
add
xor
lock
and
test
or
mov
data16
or
call
int3
jp
lahf
inc
fadds
mov
xor
mov
pop
xor
addb
scas
int
iret
pop
pop
jo
bound
xor
inc
add
adc
int3
je
mov
scas
scas
rcr
lock
lcall
adcl
and
mov
lods
jno
dec
jecxz
dec
sub
mov
fldcw
into
jge
add
fs
addr16
mov
cs
sub
and
sbbb
xor
mov
outsb
pop
rcrl
ret
ljmp
add
and
sbbl
gs
xchg
sub
idiv
jbe
cltd
mov
cld
andb
xlat
xchg
cld
add
or
mov
negl
out
and
das
pop
dec
scas
nop
rcl
fwait
lret
mov
push
shlb
cmp
cmp
pop
fcompl
jbe
dec
jno
inc
les
adc
out
push
inc
lods
cmp
inc
addl
mov
and
or
jno
movsl
gs
testb
scas
inc
xchg
in
es
inc
mov
inc
bound
jecxz
loop
mov
andl
hlt
test
iret
cmp
mov
dec
xlat
or
adc
jmp
cmpsb
xor
mov
mov
les
mov
shl
push
js
dec
fimuls
lcall
cmp
cmp
pop
mov
cmp
adc
imull
mov
scas
xchg
and
fnstsw
inc
mov
int3
push
inc
arpl
cmp
jo
repnz
mov
mov
into
mov
mov
xchg
cmpb
lods
cmp
lds
sbb
cwtl
mov
xchg
add
sbbb
mov
sub
jno
pop
popa
sbb
pop
jecxz
test
cmpsb
xor
pop
fwait
push
insb
jp
or
inc
dec
adc
in
cmp
call
pop
push
mov
mov
sbb
fwait
mov
jb
jmp
sbb
dec
iret
fdivl
movsl
mov
push
mov
dec
sub
mov
xlat
push
add
mov
out
add
aaa
xchg
cmpsl
adc
jl
pop
and
jl
popa
sar
sbb
pop
cmp
cmpb
inc
jns
fldl
shrl
sub
push
jb
data16
rcll
in
xor
mov
sti
and
aaa
mov
popf
fsts
dec
out
out
test
jne
ret
xchg
mov
jo
cs
outsb
and
dec
lea
rorl
in
fs
xor
into
test
es
orl
sbb
nop
hlt
pop
in
iret
mov
xchg
xchg
lods
stos
inc
loopne,pn
jmp
sahf
xor
xor
xor
bound
hlt
add
es
cmp
aad
sahf
sub
xchg
je
orb
jno
pop
add
sbb
cmpsl
aam
loop
xor
es
in
mov
sbb
ja
fcoms
ljmp
xchg
aad
pop
das
pushf
int3
pop
cmp
aaa
das
lds
sbb
test
mov
adc
inc
mov
js
dec
sbb
iret
jb
test
ret
clc
fisubl
push
push
inc
dec
jp
sub
pop
mov
fs
clc
int
jbe
sub
add
mov
fst
mov
test
leave
sbb
data16
js
dec
int3
aas
pop
jnp
xchg
sub
mov
mov
pop
in
stos
daa
arpl
mov
sbb
push
jo
jmp
outsb
push
out
imul
sbb
adc
mov
xchg
imul
aam
xchg
jns
jecxz
rcl
inc
idivb
mov
cmp
inc
imul
xor
push
lods
js
push
add
aas
movsb
jmp
xchg
mov
cmpsb
sub
js
adc
and
mov
jecxz
stos
sbb
cmp
in
xchg
mov
lahf
mov
out
mov
in
call
into
jae
loope
add
lds
mov
jns
jg
xchg
sbb
fimuls
pusha
sub
dec
lods
or
mov
and
inc
imul
or
cs
fsts
mov
addl
inc
add
ja
lret
xor
adc
cli
daa
add
inc
jg
shrb
cmp
fistpll
and
es
sbb
lds
xchg
and
fstpt
pop
cld
std
or
and
mov
cltd
lds
dec
je
lret
loop
andb
xor
aad
and
push
dec
je
outsl
loope
mov
neg
sbb
arpl
fnsave
mov
fstps
xchg
sbb
xchg
adc
push
inc
ja
stc
inc
cmpb
addl
or
insl
xor
js
les
pop
lods
pop
or
adc
dec
call
dec
ss
mov
sub
push
jmp
xor
dec
dec
mov
cmp
jle
outsb
mov
xor
ret
mov
scas
in
sub
or
adc
push
mov
push
or
adc
push
imul
test
hlt
mov
insl
ljmp
mov
jno
mov
dec
ljmp
xor
xor
jbe
daa
sarb
dec
push
fs
and
add
int3
adc
popa
std
enter
int3
fwait
xor
lds
adc
jmp
xor
jo
pop
jae
int
mov
fcoml
in
add
cld
inc
repz
shlb
mov
inc
rorb
sbb
lock
jno
cmp
or
push
aas
sub
ljmp
mull
push
loope
xchg
dec
and
adc
pusha
xchg
mov
lahf
add
cmp
int
leave
pop
lret
push
sbbl
pop
cmp
addr16
mov
imul
add
movsb
xchg
enter
pusha
jg
adc
lret
and
out
cs
mov
xchg
jecxz
cld
incl
leave
lds
movl
mov
stos
pop
test
loop
cmp
add
cmp
pop
in
pushf
je
dec
and
sub
int3
out
push
jbe
cmp
add
mov
xchg
movsl
pop
cmp
fnstenv
inc
jae
repz
sbb
push
loopne
sbb
leave
jp
add
add
lods
out
inc
lods
push
push
pop
pop
fsub
pop
ja
inc
imul
aaa
xor
pop
pop
cmpsl
jmp
adc
pushl
ds
pop
insl
pop
shrb
sub
or
cmp
mov
ds
jnp
addb
js
mov
and
movsb
inc
add
push
dec
mov
imulb
and
jbe
inc
push
dec
sbb
xlat
dec
lods
arpl
dec
addr16
mov
jle
imul
test
popa
loope
mov
pop
int3
shlb
sti
jp
mov
scas
repz
mov
dec
add
mov
aad
pop
shll
mov
aas
mov
outsl
out
movsb
inc
push
pop
sub
rclb
insb
pop
addr16
adc
sub
pushf
add
inc
xchg
cli
or
pop
or
mov
mov
pop
inc
dec
ret
pop
cmpsl
inc
dec
mov
test
dec
lcall
dec
lahf
pop
xor
pop
mov
aaa
xor
adc
fisttpll
loop
adc
push
push
lds
adc
lcall
xchg
jb
jne
inc
push
sub
inc
xor
and
icebp
subb
lahf
lods
sub
xor
pop
les
pop
lds
aas
sbb
mov
movsb
push
cmpb
push
inc
mov
pop
pop
push
or
mov
adc
sbb
rcl
std
mov
add
aaa
jbe
sub
add
pop
ljmp
xor
jae
out
mov
mov
mov
shl
pop
lock
xchg
pop
lcall
enter
or
mov
test
insb
fidivrs
mov
lcall
xor
jle
inc
xchg
repz
cld
int3
loopne
idivb
outsb
xchg
popf
popf
xor
icebp
loope
mov
clc
mov
xor
pop
xor
jle
aam
testb
cmp
rcl
mov
inc
xor
jmp
adc
test
addr16
push
mul
cltd
jae
inc
test
lcallw
adcb
cltd
imul
lods
sbb
mov
jb
and
das
popa
cmc
addl
movsb
mov
mov
fadds
dec
addb
stc
fsubrs
adc
mov
jno
cmp
mov
push
push
adc
loopne
jo
or
scas
adc
ret
and
pop
inc
scas
ret
sub
or
and
pop
in
pusha
ds
cmc
push
sbb
push
aaa
mov
lods
nop
jl
dec
data16
rcr
mov
mov
out
fcoml
mov
dec
loope
jo
mov
test
hlt
cmp
mov
push
arpl
xor
fimull
mov
and
push
and
jns
leave
sbb
xchg
add
sub
jno
pop
rcl
jecxz
push
insl
inc
cld
nop
js
enter
adc
xchg
sub
push
stos
aaa
ss
leave
fidivl
pop
out
mov
xchg
pop
push
inc
ret
iret
or
aam
cs
pop
clc
dec
push
mov
addb
xchg
outsl
leave
or
stos
push
loope
bound
test
out
les
scas
xor
jg
xchg
rclb
dec
sbb
mov
arpl
sbb
push
jne
les
shrb
cmp
ja
leave
cmp
cmp
xchg
scas
insb
out
xor
repnz
int3
xchg
retw
insb
iret
cmp
add
push
xor
mov
inc
sarb
inc
in
sub
add
orb
lcall
clc
or
push
stos
out
pop
inc
stc
icebp
jecxz
bound
pop
xor
mov
push
or
pop
push
push
pusha
mov
lea
fwait
test
and
rorb
and
or
mov
lods
xchg
ja
loope
jo
loopne
sti
jg
or
adc
xchg
mov
ljmp
mov
push
ficoms
sub
sbbl
mov
dec
xchg
add
daa
mov
pop
mov
addr16
daa
and
std
ljmp
sbb
push
es
fwait
sub
shll
jno
cmp
push
fstl
jo
into
and
push
scas
ss
das
lods
iret
pop
cmp
sub
pop
jns
lods
pop
ss
jne
fisttps
loopne
jb
stos
or
add
xchg
pop
and
in
inc
adc
sub
pop
repz
out
cmc
pop
cmp
dec
push
add
in
xorb
or
pop
daa
sti
sbb
add
fsubrl
fs
push
lds
xchg
iret
add
cmp
jbe
dec
test
icebp
jle
dec
inc
and
mov
jge
aad
mov
sahf
and
cmpsl
xor
xchg
jae
xchg
insl
jbe
arpl
cld
push
fmul
jg
fsubs
sbb
xchg
fisubrs
cmp
xlat
push
add
xor
icebp
clc
jmp
adc
cmc
pop
cmp
xor
mov
lret
jg
loopne
arpl
or
mov
dec
mov
inc
add
out
mov
loope
dec
jmp
cmp
les
sarl
push
lcall
jae
add
sub
ret
dec
dec
sbb
addr16
inc
addr16
inc
dec
jne
jg
adc
xchg
icebp
ret
mov
adc
dec
or
pushf
in
mov
mov
and
mov
lret
inc
cmp
push
cmp
sub
call
mov
popf
sbb
pop
xchg
add
popa
mov
add
fldcw
loop
push
into
insl
mov
fsubs
sub
mov
cltd
ficomps
mov
lahf
daa
notl
cld
shrl
gs
aam
mov
xchg
scas
xlat
mov
mov
adc
call
sbb
pop
scas
add
insl
in
mov
or
cmp
call
jp
pusha
cld
int3
and
shll
arpl
mov
rorb
fsubl
adc
insb
sbb
xor
fwait
xor
mov
mov
in
dec
ja
into
cwtl
gs
iret
jle
jecxz
out
insb
imul
jno
xor
jecxz
addr16
sbb
and
cmpsb
mov
jb
push
or
jns
repz
push
sbb
and
jnp
insb
mov
sbb
arpl
int3
dec
shlb
adc
fistpll
jae
shlb
jno
or
cmpsl
inc
pushf
test
xor
dec
cld
and
ss
pop
xchg
imul
jp
scas
out
in
push
nopl
pop
mov
lcall
dec
jno
out
je
js
call
out
cwtl
pop
int3
inc
and
xchg
ja
stos
jg
ja
mov
andb
fs
pop
out
inc
clc
or
inc
rdtsc
mov
add
lea
cmp
gs
jbe
or
outsl
jg
into
jo
stos
popf
aam
pop
into
in
jo
rcll
xor
and
dec
sahf
enter
push
sbb
add
or
adc
leave
repnz
out
mov
push
xchg
es
movsl
xor
enter
es
aad
int3
pop
dec
lcall
push
ds
rcll
imul
jns
jne
sarl
mov
jl
out
and
pop
movsb
and
stos
pop
mov
xchg
mov
iret
fiadds
out
sub
negb
ret
movb
popa
out
into
iret
iret
loop
hlt
add
mov
loopne
xchg
pcmpeqw
cmp
xor
mov
cmpsl
jmp
test
and
push
mov
mov
std
dec
sbb
pop
pop
test
pop
pop
aad
insl
mov
push
out
mov
ret
cld
jecxz
jno
pop
mov
xchg
cmc
pop
mov
ret
push
movsb
cmpsl
in
cmp
adc
inc
pop
call
fwait
into
inc
mov
stos
mov
lods
insl
xchg
push
cmp
mov
gs
out
mov
sub
pop
shlb
lret
jne
movsl
and
sbb
out
lods
sbb
cmp
add
mov
jg
enter
sbb
inc
xor
pop
mov
jnp
scas
sub
sub
and
ds
lcall
faddl
add
lea
mov
cwtl
mov
pop
fs
mov
pop
imul
into
std
lds
out
repz
dec
fcomi
xchg
adc
mov
jne
mov
mov
and
or
xor
mov
push
inc
xor
jbe
or
push
js
punpcklwd
inc
sub
or
push
es
imul
test
dec
pop
pop
test
aaa
dec
mov
add
push
gs
mov
rclb
inc
int
lods
xchg
dec
pop
test
sbb
lret
arpl
or
mov
sbb
dec
mov
push
push
inc
dec
mov
cmpsl
testl
fisubrl
and
inc
pushf
stc
out
and
ds
pop
ret
rclb
jne
ljmp
jmp
mov
mov
les
stos
mov
add
addr16
cmp
sub
sbb
mov
xchg
jge
xchg
and
or
lea
clc
xchg
fld
xor
push
mov
fsubrl
sub
sbb
inc
and
mov
rclb
push
push
jb
int3
push
jne
jg
gs
lret
sbb
mov
in
push
icebp
push
sbb
mov
outsl
dec
and
pushf
test
pop
mov
or
imul
jp
cwtl
es
out
out
sti
jb
test
or
push
sahf
repz
lods
sub
sahf
pop
or
repnz
mov
and
loope
adcl
cwtl
inc
cmp
pop
lret
mov
add
addr16
xlat
in
ljmp
cmpsl
cli
mov
bound
imul
pop
add
cld
mov
fs
sti
xlat
lret
cmpsb
xchg
testb
rclb
shrb
lock
adc
adc
sbb
outsl
or
jp
aad
sub
dec
sub
adc
adc
jge
shl
rolb
mov
add
pusha
xlat
stos
add
mov
daa
sarl
cmp
push
das
je
or
int3
idivb
mov
push
in
call
je
dec
add
lds
pop
or
dec
push
cmp
inc
in
pop
xchg
mov
stos
mov
test
out
out
push
mov
fcomi
push
sbb
scas
push
sbb
xlat
adc
xor
xchg
add
push
xchg
lret
ljmp
sub
inc
pop
movsl
mulb
leave
jmp
xchg
jp
push
xor
fstpl
mov
arpl
pusha
int3
push
or
enter
and
adc
lret
jno
sub
adc
out
xchg
dec
jae
add
and
shl
jecxz
mov
xchg
clc
adc
jo
mov
imul
in
pop
cmp
pop
mov
aaa
push
mov
push
add
test
adc
loope
inc
aam
cmp
xchg
xchg
shlb
fistpll
cmp
inc
lahf
test
les
sbb
push
leave
inc
out
sbb
loop
xchg
sub
mov
add
test
nop
pop
or
xchg
aaa
sub
jle
mov
xchg
cwtl
je
xor
mov
lods
cmp
adc
mov
cld
sub
stc
daa
jbe
cmp
es
loop
pop
addr16
in
mov
test
mov
popa
jg
xor
add
cmpsb
imulb
pop
in
sahf
jp
sub
sbb
jnp
xor
out
mov
pop
jmp
sub
mov
xor
mov
daa
mov
into
xor
fsubr
test
inc
int3
mov
and
inc
cmpsl
xchg
xchg
add
inc
sub
lret
lds
and
mov
das
pop
rclb
jb
and
ljmp
push
scas
xor
roll
sarb
into
xchg
je
test
sar
pop
leave
fcompl
mov
lock
ja
mov
shll
push
lock
jecxz
add
adc
jge
pusha
std
jne
pop
incl
cs
mov
xor
aad
lea
js
mov
test
aam
jmp
and
popf
js
cmp
inc
pusha
outsb
push
notb
repnz
adc
popf
push
stos
repnz
imul
data16
mov
jecxz
loope
loop
std
mov
mov
lahf
inc
popa
jg
ds
add
and
lret
aas
push
push
pop
sarb
mov
pop
repnz
xlat
out
inc
jle
aam
mov
dec
dec
shlb
push
ljmp
sub
adc
adc
ret
pop
shlb
in
insb
pop
pushf
push
shr
loop
inc
add
sbb
adc
lock
je
dec
inc
cmp
or
mov
mov
leave
xor
stos
pop
jns
xchg
pushf
xchg
test
sub
cltd
xchg
jle
push
or
add
xchg
fldl
dec
mov
lfs
repz
call
mov
push
frstor
mov
inc
fstl
in
or
xor
in
jne
sub
adc
sbb
lock
sub
icebp
xchg
dec
push
and
pop
cmpsb
shlb
inc
ds
mov
inc
add
test
and
inc
and
loopne
cld
popa
icebp
arpl
mov
scas
dec
jmp
mov
ret
dec
psubb
into
mov
imul
sbbb
das
in
enter
ret
dec
ljmp
and
dec
dec
std
xor
fst
sub
push
push
enter
xchg
outsl
das
adc
test
mov
pop
gs
dec
cmp
iret
xchg
imul
ljmp
jp
jae
insb
pop
or
sub
outsb
leave
adc
insl
loopne
repnz
fs
cmpsb
and
jle
ret
fcomps
adc
cmp
jge
pop
xor
cmp
inc
add
in
xchg
or
lret
stos
adc
dec
mov
inc
jo
orl
cltd
movsl
rcll
in
sub
sub
mov
mov
xchg
fiaddl
mov
bound
or
adc
push
xchg
mov
mov
xchg
sbb
pop
xor
dec
into
push
push
sahf
mov
mov
rorl
cmp
xor
test
out
xor
mov
add
or
test
mov
cli
pop
or
or
pop
xchg
cld
lea
sti
aas
test
cmpsl
mov
nop
lds
jbe
pop
and
sbb
xchg
fwait
pop
ret
mov
mov
arpl
add
shlb
xor
cmp
mov
mov
iret
pop
sbb
bound
pop
or
je
jp
and
int3
jl
in
mov
rep
or
inc
aas
add
stos
lret
xlat
movsb
mov
xor
aaa
push
and
jl
mov
cmpsl
mov
xor
jnp
push
mov
jbe
mov
sahf
push
mov
imul
and
inc
testl
outsl
dec
call
imul
pop
fxch
mov
and
mov
lds
xchg
jo
push
lea
dec
sbb
je
xor
rolb
and
pop
lods
mov
jl
xchg
mov
cmpsb
sub
pop
pop
aaa
imul
mov
sbb
lcall
add
mov
or
push
xchg
js
ljmp
psubd
testl
dec
xor
scas
jno
dec
hlt
fsin
jo
push
les
mov
je
push
cld
mov
jno
mov
call
mov
sub
popf
test
fmull
push
cli
mov
nop
pop
dec
and
lds
mov
lods
repz
cmp
mov
movaps
icebp
nop
lock
pop
push
dec
ret
lea
in
jecxz
dec
sub
xor
xor
ret
push
xor
outsb
daa
pop
inc
cmp
pop
loop
mov
mov
lcall
mov
sbb
imul
inc
add
test
negb
cwtl
mov
in
idivl
out
xor
ret
outsl
lods
fmuls
lods
fs
cmp
mov
jmp
mov
sub
test
aas
icebp
sbb
loop
stos
mov
mov
das
daa
and
inc
out
push
leave
loopne
or
and
adc
shl
rcrb
test
pop
push
push
repnz
push
xchg
mov
addr16
test
sbb
cmpsl
push
icebp
jmp
mov
fsts
cs
jg
inc
test
mov
clc
iret
ja
jne
ljmp
out
mov
or
push
in
int
gs
inc
push
jp
or
int
popf
popf
and
inc
push
inc
jo
dec
ljmp
ret
pop
addl
jno
orb
movsb
mov
out
sarb
or
fdivrs
rclb
and
mov
jno
popf
sbb
xchg
xor
aas
dec
jbe
cld
movsb
movsl
lea
fbld
mov
sub
cmp
add
insb
sbb
std
sti
popf
mov
std
inc
adc
fcompl
sbb
xor
popl
mov
and
int
arpl
aaa
cmp
int
popa
insl
jge
xlat
sahf
dec
enter
cmpsb
xor
add
aad
pop
sub
scas
mov
pop
subb
clc
test
mov
or
pop
mov
mov
mov
jecxz
out
fistpl
fs
xchg
xlat
inc
mov
sub
mov
xchg
mov
sub
sbb
loop
adc
jmp
je
sub
data16
and
ja
push
dec
mov
push
and
movsb
mov
in
cmp
outsl
stc
loop
sarb
adc
out
lret
je
adc
pop
pop
and
aad
xor
leave
mov
cmp
xchg
mov
jg
call
call
stc
sbb
movl
imul
sub
mov
aaa
imull
xor
stc
in
jnp
scas
cmp
inc
push
adcb
in
movsl
add
pop
into
lahf
jle
int
test
test
mov
mov
scas
mov
lahf
pop
lahf
mov
sbb
mov
push
imul
out
in
nop
loope
gs
add
addr16
push
shlb
xorl
mov
jl
test
cmpsb
cwtl
fldcw
dec
and
xor
mov
jle
pop
jp
mov
xlat
ja
push
and
or
jg
leave
cmp
sbb
std
dec
mov
mov
lret
out
sbb
jmp
cltd
xchg
mov
in
hlt
arpl
dec
insb
clc
jmp
sar
lock
out
add
std
aad
cwtl
leave
es
mov
in
and
jp
addr16
ret
inc
cmp
pushf
or
push
popa
shrl
andl
push
add
int
adc
sbb
inc
push
lret
repnz
flds
movsb
scas
jp
mov
js
sub
cmp
clc
adc
js
loopne
or
push
in
mov
rcrl
sub
cmpb
out
mov
pop
add
inc
stos
inc
push
sbb
xor
xlat
mov
lds
inc
movsl
and
xchg
mov
inc
pusha
jbe
test
sbb
aad
fs
dec
or
sahf
jmp
mov
add
pop
and
push
xor
hlt
std
pop
sbb
cmp
jno
jg
mov
mov
jbe
add
out
xchg
push
mov
stos
fwait
adc
bound
mov
pop
fs
jb
insb
divb
andl
sbb
lahf
inc
arpl
in
dec
and
je
mov
mov
and
sub
cld
es
into
ljmp
aaa
hlt
and
inc
add
adc
mov
sbb
test
cli
mov
sbb
jnp
out
push
inc
mov
es
sub
xchg
jns
jbe
lret
fbld
ss
push
cmp
cmp
flds
cltd
dec
xchg
jl
jo
jecxz
in
pop
lods
mov
insl
push
inc
iret
fmulp
jmp
dec
aam
mov
in
xchg
negb
sti
mov
push
in
addb
mov
aaa
lret
enter
mov
pop
popf
movzwl
pushf
push
call
iret
sarb
push
dec
push
jns
inc
xchg
stos
adc
out
ljmp
lods
adc
pop
scas
mov
bound
es
mov
jns
and
inc
pandn
xor
sub
xchg
fwait
lods
jae
inc
addr16
push
mov
jae
stos
mov
and
daa
int
pop
push
mov
push
mov
daa
scas
mov
clc
out
dec
dec
inc
pop
jl
push
adc
out
xchg
xor
or
flds
and
popf
xchg
adc
inc
and
gs
jbe
mov
lds
xor
rorl
or
ljmp
js
stos
stc
hlt
push
sub
xchg
lcall
lea
mov
sub
mov
xchg
addr16
xchg
inc
fwait
or
or
sub
cmp
out
push
xchg
out
sbb
dec
pop
js
fisubrs
mov
mov
in
mov
ret
add
ja
out
lret
and
dec
incb
push
mov
lods
dec
imul
ret
ret
je
cmpsb
push
dec
mov
aam
push
fwait
movsb
test
jo
pop
into
stos
jle
adc
xor
push
mov
push
testb
xor
xchg
xor
mov
inc
bound
cvtdq2ps
test
inc
cld
push
aad
in
mov
cwtl
sub
mov
push
les
test
add
pushf
lret
mov
and
pop
cmp
cmc
dec
jno
mov
pop
aam
sub
or
dec
stos
inc
or
jno
in
fiaddl
or
ljmp
push
into
cmpsl
aaa
fwait
mov
xchg
cmpsb
pop
inc
loopne
in
push
xor
xchg
sub
add
fiaddl
sub
in
mov
xor
or
loop
lock
imul
std
std
push
adc
pop
cmp
adc
jl
iret
sub
mov
insl
jl
pop
int
fwait
shrl
mov
lods
xchg
cmp
ficompl
arpl
mov
cmovne
cmp
gs
mov
rolb
pop
xor
inc
nop
pop
jae
insb
sti
pop
xchg
jg
sbb
adc
jno
push
mov
cs
outsb
ljmp
cwtl
and
xor
add
ficomps
and
lret
call
or
stos
add
mov
pop
popf
mov
push
cs
pushf
mov
lret
dec
mov
pop
xor
xchg
jns
outsb
lret
mov
pop
outsb
loope
into
arpl
cmp
mov
mov
sbb
and
bound
mov
mov
in
sub
cli
and
xor
add
and
jge
cmp
dec
or
call
fists
setp
in
idivb
sbb
pop
and
daa
lahf
loope
lret
inc
adc
inc
mov
shlb
mov
scas
lods
dec
stos
out
jne
aaa
jle
sub
xor
jmp
cmp
jmp
mov
dec
pop
outsl
sbb
fwait
and
ja
and
inc
out
adc
inc
inc
mov
lret
pop
loope
enter
dec
fs
shr
fyl2x
cltd
add
imul
aas
fsts
jne
xlat
and
jne
jmp
repnz
cmp
jle
cmpsb
jnp
push
mov
sbbb
add
sub
mov
xchg
xchg
jb
sahf
cmpsl
cmp
push
sbb
in
sub
fidivrs
lret
ret
sub
pop
insb
andb
ficompl
daa
loop
movsb
pop
stc
inc
shl
mov
sbb
nop
mov
lahf
push
inc
mov
mov
push
std
aad
insl
mov
adc
mov
cmp
lds
cmp
mov
incl
clc
aam
cmp
test
mov
jne
dec
mov
push
pop
jno
add
jg
faddl
push
or
inc
xor
jle
or
cmpsb
ja
lods
mov
pusha
jle
mov
arpl
xor
and
mov
test
push
dec
lahf
cwtl
stos
push
mov
jo
inc
pop
sbbl
xchg
icebp
mov
sbb
sbb
les
cmp
jmp
jp
jbe
std
xor
xchg
cmpsl
loop
pop
fnstsw
fsubrl
mov
xchg
dec
cmp
pop
push
rcrl
mov
sti
test
inc
mov
test
pushf
xchg
xchg
sbb
cmpsb
push
bound
fiaddl
mov
pushf
lock
jp
scas
add
cmp
inc
jl
sbb
sbb
cmpsb
ja
subl
and
pop
dec
inc
jmp
out
cmpsb
jno
sti
xchg
and
popf
mulb
add
add
mov
mov
push
pop
nop
shufps
dec
fistpll
mov
pop
subl
dec
cld
adc
test
jno
sub
mov
fwait
in
cmp
or
jnp
sub
clc
xor
sbb
insb
ret
mov
sub
add
lods
icebp
ret
imul
mov
fmull
aas
aam
add
stos
pop
imul
pop
roll
pushf
ja
push
mov
xchg
jae
sub
mov
add
xchg
into
scas
jo
clc
out
popf
pop
mov
mov
lock
outsl
xor
xor
fwait
xchg
loope
enter
jno
xchg
in
test
mov
pop
in
fildll
lds
fnsave
loopne
or
andb
dec
lret
xor
jno
out
cs
pop
push
and
cwtl
pusha
mov
mov
jge
mov
aas
aam
push
ja
movsb
ret
pop
and
imul
inc
shl
sbb
ljmp
dec
cmpl
fisttpll
test
gs
push
vminpd
mov
xor
fmulp
and
gs
jne
pop
fistpl
loop
xor
mov
mov
add
nop
addr16
jp
sub
jns
mov
inc
imul
sahf
and
int3
xchg
lods
dec
clc
mov
dec
insb
add
subl
lahf
push
cwtl
mov
popa
xlat
jecxz
mov
sbb
push
rcll
add
lea
pop
mov
or
mov
xchg
dec
push
icebp
xor
cmc
lret
dec
adc
jo
scas
adc
or
imul
add
or
dec
insb
mov
sub
xor
and
mov
mov
js
cli
notb
cmpb
pop
mov
inc
lods
lock
int
dec
std
mov
and
loopne
repz
xor
aas
jecxz
in
hlt
pusha
ror
je
xchg
jbe
arpl
mov
sub
popa
mov
out
mov
jnp
add
cs
xor
mov
test
or
test
fbld
pop
jbe
movsl
addr16
adc
lds
cltd
sbb
in
sub
stos
adc
pop
or
out
mov
clc
fsubs
push
data16
fldt
or
or
add
imul
mov
dec
cwtl
inc
lcall
push
jno
lea
pop
mov
cltd
or
out
pop
clc
into
mov
push
in
dec
ret
ljmp
xor
mov
lods
mov
dec
sbb
xchg
imul
aas
fidivs
subb
mov
lds
shrl
pop
test
add
ret
jge
push
xchg
imul
dec
mov
or
sti
pop
cltd
stc
mov
mov
cltd
mov
xchg
jge
ror
mov
xchg
mov
shrl
insl
xor
shlb
ja
mov
mov
pop
loope
sub
push
mov
mov
mov
ret
jecxz
or
jnp
call
insb
inc
data16
movsb
imul
pop
jno
call
daa
call
and
mov
jno
jbe
sbb
fwait
ja
pop
push
xchg
pop
or
jno
mov
out
fwait
xor
adc
lock
push
lret
mov
jo
sbb
pop
push
cmp
call
mov
push
in
mov
mov
push
or
xchg
sbb
dec
pop
out
add
pop
lock
stos
lods
mov
jge
int
jne
mov
or
imul
and
xchg
inc
lods
aam
rorl
push
mov
dec
add
sub
arpl
ret
rcrl
leave
xor
movsb
adc
push
jns
push
movsb
xchg
jns
ja
daa
and
xchg
scas
mov
mov
sub
pop
xor
sbb
outsl
aas
push
xchg
xor
lds
dec
sub
ret
loopne
orb
test
rcrb
mov
sbb
mov
add
cmc
xchg
aam
aad
and
jp
mov
xor
ret
and
xor
arpl
paddb
jns
test
lods
call
mov
pop
lods
lahf
ja
mov
xlat
cmp
dec
mov
in
dec
and
jo
xchg
jo
aam
les
aaa
dec
inc
dec
adc
xchg
dec
call
out
inc
inc
in
out
jge
mov
cld
sbb
sub
add
pop
mov
gs
cmp
adc
mov
inc
adc
and
sbb
xchg
test
adc
push
mov
sub
push
rcll
ret
lods
mov
ja
std
xchg
movsl
xorl
mov
andb
dec
inc
aaa
aaa
sti
lock
xchg
mov
cmp
sub
lods
dec
stos
xchg
xchg
pminub
adc
add
xchg
xor
je
sbb
cmpsl
mov
jbe
dec
aad
inc
xor
sbb
jnp
adc
inc
cmp
sub
push
mov
mov
xchg
scas
popa
aad
mov
inc
lret
les
sub
mov
sub
mov
pushf
scas
iret
xabort
orb
inc
adc
push
jecxz
xchg
lret
jbe
nop
loopne
movsb
outsl
adc
mov
aaa
leave
ljmp
fisubl
sub
outsl
and
cmpsl
or
cli
idiv
out
push
mov
hlt
les
sti
or
cli
adc
jns
fsubrs
int3
and
adc
stos
subb
sub
xchg
stos
lcall
loopne
sti
xchg
in
push
imulb
aaa
pop
lods
xchg
test
xchg
sbb
inc
fsubp
pushf
icebp
subb
ljmp
rcll
pop
xchg
xor
cmpsb
inc
jecxz
adc
add
push
sub
adc
aas
xor
out
xor
les
mov
lods
pop
call
imul
mov
sahf
sub
mov
movsb
out
mov
xlat
jbe
inc
loope
leave
push
das
in
inc
gs
jno
loop
ja
std
pusha
xorb
or
ret
lret
sbb
int3
sti
loopne
dec
cmpsl
fs
aas
and
or
add
jmp
movsb
sbb
imul
push
mov
fistpll
test
inc
decb
out
insb
sub
daa
and
shl
movsl
cli
push
dec
jno
mov
scas
sarb
adc
int
int
arpl
add
xor
ds
xor
mov
or
or
jb
shl
sti
lret
popf
lods
aam
shlb
inc
insb
pop
pop
mov
sbb
xor
in
aam
lret
popf
js
outsl
xchg
shll
sbb
and
mov
push
xchg
cmpsb
add
pop
pushf
xor
dec
mov
add
lea
jno
out
mov
sbb
adc
fs
push
or
daa
jl
lods
pop
sub
dec
adc
mov
call
add
xor
out
cltd
addr16
enter
xchg
pop
leave
sti
insb
mov
sbb
add
mov
xor
jl
dec
add
xchg
cmpsl
add
movsl
jp
or
cmp
inc
out
lds
inc
out
out
push
push
or
pop
aad
mov
fcomp
fcomi
test
in
lock
inc
dec
pop
push
icebp
xchg
loopne
lods
aad
push
or
fisubrs
fsubs
scas
mov
push
js
stos
fimuls
dec
push
leave
push
mov
pop
fs
push
xor
mov
into
mov
mov
negl
popa
jge
add
popf
pop
mov
out
sbb
subl
inc
enter
jnp
cmpsl
iret
lock
in
loope
xor
fistpll
push
mov
mov
mov
lock
aas
test
insb
sbb
sahf
ret
jbe
sub
mov
xchg
sbb
jl
lods
in
mov
loope
jae
pop
xor
xor
push
hlt
stos
cli
jbe
xor
or
and
loope
je
push
push
arpl
bound
lds
in
jno
ja
dec
push
aaa
xchg
bound
icebp
push
shlb
push
sbb
mov
rcll
fcmovnbe
and
push
add
jmp
enter
data16
ss
and
push
insl
orl
cwtl
iret
aaa
and
out
jp
enter
pop
push
iret
scas
pop
daa
cmp
std
inc
push
int
mov
cmp
test
pop
fs
leave
mov
test
lds
out
into
test
push
sbb
aaa
xor
cmp
pop
inc
popf
adc
or
addr16
shl
cmp
or
aam
push
cld
arpl
add
imul
loop
and
sub
out
notb
imull
xor
push
cmp
sub
loopne
fldt
pop
or
adc
mov
ss
repz
nop
inc
dec
xor
add
loope
das
fistpll
sbb
mov
dec
fcmovnb
bound
push
fnstsw
dec
pop
std
lret
mov
cmp
movsb
jge
adc
shrb
rorl
sti
push
and
jle
mov
ds
xor
das
add
nop
push
inc
out
pusha
xor
sti
insb
sbb
lahf
lret
lahf
scas
xchg
mov
push
mov
js
fimuls
imul
mov
add
addl
lds
into
push
js
cmp
int
iret
and
leave
or
roll
jg
inc
fcomp
scas
dec
push
fcmovnbe
push
jmp
shrb
jle
lahf
loope
mov
xor
jae
icebp
and
jp
fisttpll
lds
popa
addb
xor
test
mov
sbb
outsb
cmp
subl
push
lret
cmp
aas
xor
fcoms
lret
out
add
jg
push
std
and
xor
fs
adc
pop
dec
test
mov
mov
data16
cmc
cld
cli
ljmp
lret
cwtl
xor
push
divb
mov
cmp
push
subl
roll
mov
lds
mov
scas
and
xchg
cmp
addl
test
xor
lcall
lock
jmp
negb
out
sbb
iret
fnstsw
pop
inc
jecxz
dec
lea
es
out
fmull
mov
add
push
fisttpll
and
aaa
in
das
jo
sub
lret
mov
cwtl
sub
and
pop
push
pop
cmc
mov
insb
and
or
shl
sbb
inc
push
shll
rolb
inc
je
stos
cmp
cld
jmp
scas
bound
in
test
leave
mov
clc
ss
mov
and
and
mov
leave
dec
jp
stos
jae
jle
mov
pop
inc
negb
cmp
sub
jae
stc
in
sbb
dec
mov
xor
scas
decl
inc
mov
or
xor
xchg
mov
fcoml
pop
lcall
gs
add
ljmp
add
popf
xchg
pop
stc
jmp
imul
pusha
pop
add
aaa
xchg
xor
mov
jb
negb
ja
mov
or
test
lods
or
call
xlat
cmpsl
mov
dec
in
sahf
push
push
dec
mov
in
mov
ret
outsb
es
out
and
dec
sahf
xchg
and
lret
lods
mov
xor
xchg
and
fisubs
cli
testl
mov
in
cmc
test
mov
push
leave
pop
lret
ja
fildll
jb
lods
adc
or
fs
daa
fistl
push
mov
in
andl
pushf
insl
pop
movsb
ljmp
pop
das
repnz
inc
cltd
cltd
sahf
cmp
push
cmpsb
imul
fdivr
jne
loope
push
push
xor
or
and
xchg
pop
xchg
mov
daa
pop
or
pop
gs
inc
lahf
out
enter
dec
and
mov
xchg
add
lret
fisubl
stos
fnstenv
lea
sarl
sub
mov
jns
cmp
out
add
bsr
inc
pop
enter
jecxz
mov
add
fadds
hlt
pop
fs
mov
pop
or
out
push
jno
jae
stos
sbb
cmp
xor
mov
add
mov
push
mov
jecxz
repnz
and
outsl
negl
sbb
push
cmpsl
adc
mov
or
inc
subb
lcall
stos
frstor
push
add
out
inc
push
test
mov
rcr
es
xchg
repz
fimull
gs
mov
mov
xor
gs
cmpl
sti
in
and
insb
xor
mov
je
push
jno
and
rorl
lret
xchg
das
subb
mov
fstpl
sub
pop
add
ss
inc
fwait
ljmp
mov
jmp
out
cmpsl
pop
scas
jge
pushf
out
sbb
scas
repnz
outsl
rol
stos
cmp
in
aad
cmp
xchg
xor
mov
and
add
and
insl
movb
inc
and
scas
or
jb
dec
stos
scas
mov
aaa
lcall
cmpsb
pop
movsb
xchg
jmp
in
push
cld
inc
out
mov
inc
stc
arpl
pop
and
pop
bound
in
aaa
jb
andnps
es
std
mov
mov
jns
aaa
adc
cmp
fxam
mov
ret
fmul
in
push
or
dec
arpl
imul
push
mov
shr
add
ljmp
xchg
mov
dec
test
and
jmp
cmc
xor
fdivl
cmpsb
xchg
pop
aas
xchg
sub
div
jle
dec
mov
adc
loop
sti
inc
push
add
sahf
or
xchg
sbbl
xorb
rorl
notl
jl
cmc
adc
push
xchg
sub
bound
jg
jl
bound
mov
out
adc
clc
mov
cvtpi2ps
xor
sub
mov
jno
push
ret
sbb
push
mov
cltd
fsubrp
shrl
test
and
jns
adc
xchg
pop
mov
andb
js
xchg
test
mov
inc
sub
jp
xchg
es
xor
int
iret
mov
sub
call
mov
adc
push
filds
cmp
jg
mov
dec
mov
ljmp
dec
in
rcrl
fbld
movsb
cmp
pop
je
jle
cwtl
push
and
cmp
mov
test
xor
sahf
ss
hlt
and
sbb
je
dec
ja
sbb
out
cli
divl
repz
loop
fucomi
lret
aad
push
mov
xchg
addb
adc
shl
jno
and
out
mov
mov
fmull
xchg
shl
cmpsb
fcomps
imul
add
movaps
mov
lock
inc
xchg
xchg
fs
mov
ds
push
js
mov
outsl
fwait
orb
cmp
push
jg
sbb
pop
fiaddl
lret
test
test
mov
mov
push
push
inc
aas
pushf
xor
cs
lock
xchg
iret
pop
test
into
cs
cli
inc
cmpsl
inc
jo
clc
xchg
in
icebp
mov
or
and
cmpsb
out
rorb
sbb
es
lahf
test
jl
cs
ret
les
pop
sbb
into
jg
cmp
mov
out
pusha
jmp
aaa
mov
push
cwtl
lods
xor
bound
fcomp
call
pop
push
out
cmp
mov
cmp
xchg
shr
ret
add
jne
inc
xchg
pusha
inc
cs
lods
jge
pop
add
aad
rol
mov
cltd
xor
setg
int
in
jne
dec
adc
mov
stos
shl
fidivrl
in
adc
sub
or
sbb
ds
fisubs
int3
push
ja
mov
into
lock
cmp
jle
roll
notb
test
in
iret
xchg
inc
mov
pop
cmp
daa
fmuls
sub
and
cmpsb
decl
mov
mov
cmp
test
shrl
dec
and
out
dec
sub
aad
lea
mov
scas
addr16
or
xlat
cld
in
mov
into
dec
jns
mov
leave
scas
clc
add
jb
aam
mov
repz
or
lahf
mov
mov
sbb
pusha
loope
incl
aaa
dec
sub
repz
imul
push
insl
sbb
jp
lods
sub
ret
repz
into
test
std
in
lcall
in
test
imul
int3
js
ss
mov
in
xor
lods
test
mov
mov
inc
mov
das
sbb
push
std
jl
mov
xchg
lea
sub
fildl
and
in
push
mov
data16
rcr
fwait
mov
xor
cmp
jg
mov
in
add
push
cmp
jb
mov
push
lock
nop
mov
or
adc
sbb
stos
int
inc
mov
cmp
add
ret
fiadds
jle
or
cmp
popa
sbb
nop
cmp
jl
jg
pusha
inc
dec
test
lret
sub
sub
sbb
scas
xlat
stos
popa
stos
stc
cli
add
pop
cmp
jp
jecxz
push
fidivrl
stos
insb
mov
mov
ja
icebp
cltd
or
jbe
aad
scas
jecxz
ret
jecxz
inc
das
or
and
mov
sbb
ds
and
mov
xor
movsb
push
mov
cmp
dec
push
sub
pushf
xor
fwait
arpl
or
mov
mov
lds
sub
mov
std
and
pop
xchg
jp
aaa
mov
jo
xchg
sahf
imul
pop
sub
sbb
test
sahf
pop
in
das
adc
sub
out
or
bound
mov
ficoml
insb
dec
cld
ja
xor
add
push
add
xor
rcrb
push
pop
mov
cmp
xchg
and
outsb
rcrl
pop
popa
clc
mov
into
pusha
repz
add
mov
adc
out
es
lret
out
pop
mov
xchg
inc
mov
push
popa
xor
mov
stos
mov
out
sub
pop
mov
jae
mov
fistpll
popa
sbb
and
test
cltd
and
jbe
divb
jp
and
and
pop
push
push
pop
sbb
pop
cs
pop
sub
sub
or
pop
add
pop
xchg
jmp
or
xor
jb
xchg
add
arpl
add
popa
cmp
sub
mov
fsts
je
or
adc
fwait
mov
push
inc
or
push
orl
mov
jb
rorb
dec
xchg
xor
push
sub
sbb
and
int3
dec
dec
orl
and
or
sbb
lahf
pop
push
insl
pop
cli
sbb
icebp
lret
mov
subl
orb
adc
jg
adc
aam
cltd
xlat
push
dec
int
mov
and
adc
sti
nop
adc
inc
push
add
or
jg
les
jle
xchg
jmp
cmpsl
shl
dec
hlt
imul
popf
repz
or
dec
dec
jae
push
aas
pushf
rcll
addb
adc
push
lea
mov
jl
fucom
cli
movsl
pop
test
jge
scas
xor
rclb
pop
out
jno
ljmp
or
xchg
push
fadds
shlb
cmp
and
mov
adc
jl
cbtw
mov
inc
and
pop
daa
sub
sub
lret
xchg
cli
add
lahf
test
enter
push
mov
pop
sar
jo
iret
in
jg
push
mov
sbb
jp
gs
add
xchg
or
add
sbb
dec
push
mov
jecxz
out
gs
sahf
pop
mov
add
leave
insb
inc
into
pop
pop
in
inc
int
std
fidivl
and
push
cmp
jecxz
fwait
push
push
mov
outsb
inc
lods
dec
mov
into
les
hlt
movsb
in
xchg
shrb
in
lahf
cmp
fs
jle
mov
stc
aad
addl
xchg
jno
jae
fisubl
repz
xchg
xchg
jno
cmp
es
xchg
lds
push
stc
mov
dec
mov
cs
add
ret
mov
adc
sbb
inc
push
daa
push
aad
sbb
das
mov
xlat
test
inc
mov
cltd
fsubs
in
add
stos
inc
dec
cmpsl
push
inc
mov
shll
push
outsb
test
and
xchg
mov
pop
in
lret
fwait
lcall
or
adc
cltd
jmp
hlt
sbb
repnz
mov
pop
inc
cmpsl
pop
mov
sbb
jecxz
xor
jnp
or
insb
negl
lahf
inc
mov
xchg
jb
loopne
pop
mov
cwtl
pop
pushl
adc
xor
inc
loop
jp
clc
stos
add
pop
scas
adc
cli
dec
mov
xchg
mov
roll
pop
leave
cmp
movsb
jecxz
repnz
test
scas
adcl
les
inc
lds
dec
jae
xor
xorb
pop
mov
iret
inc
out
cmp
dec
dec
les
mov
imul
and
mov
push
pop
inc
mov
sbb
mov
mov
inc
popf
sbb
int
sbb
jns
mov
xchg
insb
mov
cmp
shl
inc
push
icebp
push
mov
test
in
sbb
mov
mov
xchg
pop
add
lahf
sub
ljmp
daa
cwtl
popa
imul
lock
mov
push
and
std
lock
pop
add
in
push
jecxz
jle
das
fs
or
int3
sbb
xchg
mov
inc
pop
movsl
bound
inc
jl
or
mov
pusha
inc
sub
inc
cwtl
filds
sbb
and
dec
fwait
mov
mov
inc
sbb
add
jge
cmp
enter
aas
lds
aas
fwait
lret
inc
adc
lock
push
lds
mov
dec
sbb
or
mov
and
push
add
xchg
inc
xchg
cwtl
orb
xchg
pop
xchg
sbb
lods
xchg
out
daa
jle
ret
push
ss
lret
pushf
incb
lock
in
mov
cli
jnp
dec
dec
jnp
push
mov
dec
pop
scas
or
and
add
cmc
cmp
push
push
out
int
add
std
xchg
xacquire
jo
int
shrl
arpl
inc
ljmp
mov
sbb
mov
pop
xchg
xor
mov
jl
cs
in
lds
daa
mov
or
or
cmpsl
pusha
popf
dec
insb
mov
adc
idivb
mov
int
inc
push
mov
cmp
cmpsl
pop
or
adc
mov
xor
or
pop
stc
fidivrl
sbb
outsb
fistpll
loope
leave
mov
xor
cmpsb
jl
movsl
xchg
inc
rcrb
cmp
cmp
inc
mov
addb
jmp
xor
arpl
jmp
jbe
bound
fnstenv
mov
mov
mov
cmovae
js
xor
loop
cltd
leave
push
stos
fnop
mov
es
stos
dec
movsb
ljmp
mov
and
fs
push
push
adc
pop
aam
fcompl
rcl
rolb
sarl
add
pusha
clc
sarl
leave
test
add
stc
sbb
bound
lahf
out
xchg
push
lea
pop
jl
add
push
fs
jmp
test
xor
ja
test
out
ds
and
arpl
into
subb
cmp
adc
loope
sarb
frstor
inc
cmp
and
arpl
lods
or
and
fwait
push
dec
mov
jae
pop
jo
sub
out
cmpsb
jo
mov
xor
dec
cmp
out
cmpsl
jp
sbb
xor
dec
xor
test
neg
mov
or
push
lods
stos
add
sbb
pop
mov
inc
xor
es
push
pop
ret
les
dec
in
push
cmpsb
sbb
fidivs
testb
pushf
push
mov
psllw
push
jle
dec
movsl
and
dec
sar
mov
std
dec
fdivl
js
pop
popl
in
dec
js
cmp
es
mov
pop
cmp
stc
jno
xchg
lods
mov
icebp
jns
aaa
add
es
sub
xchg
jp
pushf
outsb
icebp
push
xchg
dec
sub
jae
shrb
mov
out
xchg
scas
imul
add
xchg
repz
and
imul
fwait
imul
frstor
cmp
inc
aam
mov
shll
outsb
xlat
cmp
inc
inc
mov
mov
adc
mov
push
push
pop
jp
mov
into
pop
cltd
lret
push
addr16
out
mov
outsl
in
movsb
sub
loopne
gs
call
out
nop
xor
push
or
call
inc
loop
xor
pop
jns
jb
loopne
pop
mov
xor
lcall
lcall
jns
push
mov
orl
adc
pusha
repnz
jbe
add
dec
jl
inc
dec
cmp
mov
cmp
rcll
mov
sub
pop
jae
fbld
mov
mov
inc
mov
cmp
dec
mov
mov
adc
fdivl
pop
out
dec
xchg
nop
je
sbb
xor
inc
add
xchg
xor
xchg
rorl
scas
xchg
push
mov
xor
mov
lret
int3
inc
popf
stos
lret
int
movsl
mov
jne
stos
ret
andl
pop
mov
add
out
lcall
xor
push
xchg
xchg
sbb
cmpb
jecxz
fs
pop
or
and
imul
xchg
lret
inc
xlat
mov
ficomps
jns
dec
imul
push
mov
addr16
push
add
daa
pusha
sbb
sbb
jmp
xchg
xchg
dec
idivl
jle
mov
les
repnz
xlat
xchg
or
rclb
push
gs
cmp
xchg
mov
jnp
mov
adc
out
out
xor
rcrl
pop
lcall
mov
pusha
push
ret
mov
mov
pushf
add
test
outsl
push
dec
sbb
pop
xchg
mov
mov
sbb
repnz
sahf
dec
add
call
int
in
mov
out
sub
push
xchg
adc
negl
jb
jge
xor
mov
pop
or
sbb
pop
mulb
push
dec
cmp
shl
or
movsb
les
leave
inc
dec
xchg
call
inc
dec
inc
jmp
push
dec
add
adcb
and
mov
icebp
not
sahf
xor
lock
jl
test
pop
pop
cmp
icebp
dec
add
pop
pushf
mov
xchg
mov
dec
mov
dec
rcll
in
xchg
arpl
sub
pop
mov
mov
popf
scas
outsb
frstor
scas
adc
mov
shl
or
jb
xorb
in
das
mov
jecxz
push
mov
repnz
push
mov
out
and
cli
jmp
imul
movsl
mov
inc
jnp
mov
nop
xlat
mov
stos
sub
pop
stc
sbb
cs
inc
mov
int3
aam
sub
sbb
into
cmc
test
sub
sbb
cmp
jge
sbb
jg
jecxz
int3
and
sub
mov
mov
dec
cmpsb
or
dec
jbe
xchg
outsl
dec
cmp
mov
addr16
sub
or
movsb
pop
jbe
add
jns
dec
pop
jl
xchg
notb
or
push
insb
mov
inc
sbbl
ret
or
jmp
mov
push
sti
cmovge
aam
cmp
fbstp
clc
notb
jge
mov
cmp
nop
add
test
or
add
out
xchg
ret
pop
push
cwtl
and
out
sub
dec
sbbl
loop
imul
push
sbb
or
cmpsl
sbb
inc
in
imul
and
push
scas
rol
test
push
inc
sbb
add
mov
push
jo
cmpsl
lahf
not
xlat
mov
push
repnz
or
ljmp
fnstcw
push
lds
ja
adc
enter
xchg
cmpsl
adc
mov
xchg
push
fdivs
scas
adc
pop
and
mov
cmc
inc
mov
or
inc
push
mov
ljmp
call
std
icebp
pop
or
fisubl
popa
mov
dec
fucompp
scas
pop
es
jle
nop
fs
in
and
sbb
jge
das
adc
jg
xor
xor
repnz
mov
in
and
ss
leave
xchg
enter
push
fmulp
repz
repnz
jns
clc
test
lea
mov
mov
xchg
fwait
sbb
add
shlb
pop
fnstenv
aaa
divb
mov
mov
or
hlt
dec
test
nop
jge
add
out
pop
push
dec
loopne
imul
pop
xchg
jae
arpl
xchg
sub
add
dec
aaa
fwait
add
and
fistpl
jno
out
push
ret
sub
sti
pop
dec
cmp
mov
insb
pop
mov
shll
jae
jne
repz
mov
lea
rolb
or
add
lods
hlt
orb
cmp
es
mov
aad
test
ret
ds
dec
push
xor
mov
sbb
out
mov
mov
test
add
scas
les
pushl
js
test
dec
loop
add
xchg
mov
in
sub
sbb
dec
inc
jns
fstpt
push
into
cmp
js
jle
jne
jno
scas
les
mov
inc
std
dec
push
ficompl
lahf
mov
not
push
jnp
xchg
stc
inc
add
or
jb
push
mov
dec
cli
stos
notb
jecxz
test
sahf
movsl
jae
aas
xor
pop
call
adc
xor
inc
aam
xor
lods
xor
xor
test
pop
pop
sub
or
or
in
leave
outsb
scas
adcb
in
push
in
clc
cltd
push
and
pop
mov
dec
mov
outsl
mov
and
lods
mov
test
out
sahf
sbb
and
push
mov
and
scas
inc
clc
or
ret
mov
movaps
icebp
sub
shll
jbe
and
or
dec
pushf
pop
cmp
stos
test
xor
rcl
pop
add
or
mov
xchg
pop
inc
sbb
mov
dec
jnp
jno
xchg
mov
rclb
inc
lret
cs
cwtl
sbb
add
xchg
lahf
sub
jg
popl
push
scas
outsl
add
sbb
lods
bound
or
inc
dec
jbe
in
insb
jge
mov
jne
test
js
fsubs
pop
stos
pop
xchg
ljmp
sub
pop
arpl
repz
add
les
jg
push
cmp
arpl
or
test
mov
sahf
xchg
mov
add
movsb
sbb
jmp
lcall
idivl
push
test
mov
pop
aaa
das
xor
xor
je
cltd
call
fldenv
sbb
jae
int3
fstl
dec
push
mov
jmp
insb
mov
in
or
aas
jl
add
jle
pop
fcoms
mov
mov
mov
lea
mov
add
ss
imul
jle
out
adcb
fdivrl
jge
jne
or
pop
ds
or
lret
add
lea
mov
jl
mov
shl
pushf
gs
push
mov
mov
pop
jns
xor
rcll
push
push
adc
xor
scas
loope
loopne
out
rcl
outsl
fcomps
adc
cmp
cmpsl
dec
iret
bound
xchg
popa
xor
iret
sbb
es
aaa
sbb
outsl
cmp
icebp
pop
or
into
pop
xor
push
push
jo
sbb
jmp
add
mov
mov
or
daa
mov
mov
sbb
push
das
xlat
inc
inc
mov
xor
pop
inc
into
mov
cmp
xchg
lods
push
xchg
mov
imul
rclb
push
fmuls
mov
push
add
cltd
test
sti
cwtl
mov
xchg
scas
mov
xchg
sub
lcall
hlt
cmpb
dec
ss
pop
mov
pop
xor
ret
lahf
mov
mov
fnstsw
mov
sub
daa
jbe
mov
shl
pop
es
fs
inc
es
mov
ror
jo
and
dec
sti
pop
jae
lcall
dec
push
incl
jmp
cmp
es
cmp
test
data16
imul
inc
cli
mov
addl
call
mov
lods
or
mov
pop
pop
repnz
in
repz
pop
xchg
dec
adc
outsw
popa
pushf
movsl
or
mov
cli
jne
push
addb
or
mov
mov
pop
and
popl
push
sahf
sbb
mov
stc
sub
mov
mov
dec
push
mov
cmpl
scas
cld
xchg
pushf
add
mov
mov
cwtl
jle
push
mov
movsb
adc
fsubrl
fwait
cmp
pop
push
mov
cmp
inc
test
mov
inc
xchg
inc
mov
xchg
movsb
aaa
sub
gs
mov
data16
cld
and
cs
in
insl
push
dec
and
pop
jmp
stc
inc
rol
cmc
shrb
jnp
je
inc
xlat
pop
pop
ja
ja
lds
adc
jnp
mov
fisubs
xchg
jl
jge
sbb
sbb
cmpsb
stc
mov
mov
mov
jge
insl
popf
and
sub
mov
xorb
sti
xor
fnstcw
mov
arpl
cld
sbb
jb
jo
je
pop
cmp
add
clc
or
stos
pop
pushf
lods
cmp
add
pop
add
xor
ret
dec
popf
inc
sub
arpl
mov
mov
mov
dec
sub
mov
insb
in
or
and
loope
repz
inc
je
leave
push
fdivrl
xor
mov
jae
mov
sbb
jge
jle
push
sbb
mov
add
dec
add
std
sub
lods
mov
arpl
push
xor
push
inc
cmp
pop
sbb
xchg
jo
xchg
in
mov
shrb
ret
scas
idivb
lahf
sub
adc
push
adc
ds
adc
repnz
pop
pop
shrb
fidivrl
in
ret
or
fs
jmp
pop
in
cmp
xor
pop
outsl
mov
scas
jmp
mov
xchg
or
es
mov
test
notb
mov
gs
out
mov
pop
out
hlt
or
cmp
fucomi
pop
mov
mov
imul
sub
js
stos
cmp
xchg
xchg
push
scas
adc
and
or
fsub
loop
sub
js
xchg
jg
and
loope
scas
mov
cmp
into
mov
roll
popa
mov
lcall
cmp
sbb
xor
jg
sbbb
bound
sar
inc
adc
pop
sub
arpl
popa
pop
mov
xor
add
lods
out
in
or
add
out
mov
test
sbb
fs
into
mov
fwait
shlb
dec
rorb
mov
push
out
lret
cmpsl
mov
int
das
loop
fwait
mov
sbb
xor
inc
scas
xchg
jp
jecxz
inc
and
push
xchg
rcrb
or
adc
sub
jno
mov
mov
or
xchg
sub
jb
xchg
ljmp
jb
push
mov
jge
in
hlt
lret
add
rcll
stos
fs
push
mov
sarb
mov
dec
les
jae
pop
iret
stos
and
mov
popf
inc
ja
mov
aam
movb
or
loopne
xchg
fmull
cltd
lods
repnz
repnz
fcompl
repnz
push
fdivs
xchg
or
push
sbb
clc
lods
outsl
repz
fistps
repnz
int3
xlat
das
loop
lods
mov
mov
movaps
cmc
pop
inc
jno
mov
cmpsb
testb
push
adc
cmp
jo
int3
enter
sarb
mov
cmc
mov
mov
pop
mov
push
pusha
mov
cmp
loopne
add
xchg
pusha
sbb
jecxz
das
stos
shll
pop
lock
addb
sub
adc
sbb
jge
scas
inc
mov
loope
xchg
ret
mov
fisubs
daa
repz
or
popf
dec
pop
test
xchg
cmp
xchg
add
adc
sahf
dec
add
push
dec
out
loop
std
addr16
lea
lret
dec
sub
outsl
in
in
popf
pop
notb
pop
mov
and
mov
shlb
fldenv
cmp
push
divb
xchg
cwtl
int3
push
ja
add
out
shlb
jg
idivl
std
movsbl
loope
cmp
sbb
dec
xchg
roll
dec
bound
out
lret
add
imul
sbb
mov
jecxz
in
sahf
pop
aam
popa
test
pop
sbb
lcall
mov
cmpsb
stos
and
xchg
cmpsl
mov
push
rorl
mov
dec
inc
sbb
xchg
jno
sbb
lods
test
arpl
inc
sub
int3
out
mov
sbb
xor
xor
or
push
fsts
cmpsl
mov
ret
lods
sti
cltd
mov
push
sub
rorl
sub
imul
pop
add
dec
cmp
daa
adc
fcom
daa
push
clc
add
xchg
inc
scas
sbb
ljmp
shl
ret
cli
lret
fs
dec
cli
lret
adc
inc
movsb
sub
push
pushf
dec
sub
push
xor
inc
cmc
xchg
jl
out
adc
jne
xor
sbb
sub
fs
xor
fstpl
rep
mov
mov
test
jns
int3
or
pop
jo
adc
and
fcomp
in
sub
adc
fmulp
mov
mov
inc
lock
ret
mov
fstpt
and
push
movsl
ds
mov
aas
xor
inc
sub
sbb
inc
cmp
push
cmp
push
aaa
in
ljmp
jb
fmull
insl
mov
scas
jmp
mov
push
push
int3
mov
adc
aad
adc
xchg
sub
push
jo
shr
cmc
add
ljmp
stc
mov
leave
adc
add
cmp
mov
sbbl
scas
sbb
lea
stos
push
mov
clc
cmp
incb
lea
addr16
ds
jae
imul
mov
imul
les
lret
insl
std
lds
out
dec
cmpsb
decb
sub
cwtl
pop
dec
ror
push
xchg
jae
cmpsb
jno
dec
stos
movsb
rcr
adc
fstps
ss
les
lret
jno
inc
sti
pop
fldt
lcall
shl
cmp
jno
stos
inc
arpl
sub
or
mov
mov
lock
stos
add
xchg
and
daa
and
fldenv
gs
call
loope
jns
add
outsb
add
test
pop
stc
inc
push
fdivrl
pop
cmp
out
aad
inc
cmpsl
mov
arpl
popf
add
sbb
leave
out
sub
cmp
inc
adc
mov
and
stc
imul
inc
pop
cmp
test
cmp
sti
aas
adc
pop
jae
es
mov
add
xchg
sub
add
cmp
imul
cmc
and
push
mov
jb
jae
jp
or
mov
adc
jecxz
cs
scas
popa
mov
hlt
fistl
jle
add
cmp
iret
jo
outsb
cmp
aad
loopne
lcall
push
enter
call
leave
inc
loop
nop
inc
push
mov
cs
and
mov
pop
sub
mov
cld
inc
out
xor
push
jns
adc
adc
test
add
mov
aad
repz
nop
rclb
xchg
lock
push
insb
imul
adc
sbb
inc
or
mov
pop
sahf
mov
les
pop
cmp
js
movsb
push
int
ja
outsl
out
lret
jecxz
push
xchg
testb
mov
data16
out
push
xchg
or
xchg
pop
pop
bound
jne
xchg
sub
xchg
movsl
fstl
out
push
insl
push
mov
dec
movsl
jbe
aad
jl
mov
iret
pushf
push
jmp
lods
mov
out
or
ret
or
pop
xor
xlat
stc
inc
inc
std
out
aam
icebp
lahf
paddw
stc
pop
stc
pop
and
shrl
push
addl
sub
flds
add
push
and
scas
jg
jns
push
js
mov
adc
dec
sub
ljmp
add
in
or
cmp
inc
sbb
or
jno
mov
mov
movsl
sub
dec
rorb
and
cmp
fidivl
jnp
xchg
pop
std
cli
inc
rorb
inc
testb
ss
mov
inc
pop
adc
sbb
je
ret
jnp
jnp
gs
mov
test
clc
scas
int
sub
jmp
fadd
jo
xchg
lods
or
cmp
inc
push
stos
leave
cltd
adc
sub
xchg
int3
fnstcw
ja
aas
xor
dec
push
xor
xchg
adc
mov
mov
das
in
inc
sbb
push
pop
mov
or
push
rorl
adc
js
sbb
mov
lock
dec
hlt
cmpsb
sub
xor
mov
mov
jnp
mov
lret
and
fsts
shlb
pushf
cli
cmp
mov
fisttpll
mov
inc
mul
push
je
pop
insl
daa
es
into
xor
mov
mov
push
mov
ljmp
sbb
bound
iret
push
iret
add
cltd
lret
js
mov
jns
xor
mov
add
fisttpll
pop
arpl
and
aas
out
or
aaa
arpl
in
sub
jge
inc
cmp
jb
scas
aad
and
aas
les
or
je
stos
push
testl
or
dec
aam
scas
add
nop
inc
outsb
cld
pop
shl
mov
and
inc
or
aas
jo
xchg
add
pop
mov
data16
je
sub
mov
fsubl
movsb
ret
fiadds
sbb
fs
xor
pop
xor
loop
and
xchg
clc
stos
gs
imul
mov
pop
mov
mov
lods
fwait
les
iret
add
xor
rdpmc
clc
mov
test
xor
mov
aam
pop
aaa
ret
out
test
adc
push
xchg
or
int
nop
popf
add
mov
jne
jl
pop
xor
in
addr16
popa
sbb
outsb
jns
jbe
sbb
xor
inc
xor
movsb
pop
cmpsb
pop
dec
xchg
mov
aam
sarb
inc
mov
or
hlt
repz
adc
mov
daa
incl
rolb
and
inc
cmpsl
sti
scas
mulb
mov
dec
clc
push
lret
xor
jo
scas
mov
gs
movsb
cltd
dec
nop
push
cmp
push
and
adc
rclb
or
or
repnz
fldenv
in
and
imul
sti
popl
stos
sbb
xor
pop
cmpsb
add
mov
rcr
jl
into
or
test
cwtl
pop
push
mov
mov
std
or
jle
cmp
jmp
push
adc
and
xchg
movsb
lock
popa
jns
lret
jne
cmc
fs
add
gs
adc
and
mov
xchg
mov
push
aad
cmpsb
add
dec
mov
sbb
cmpsb
inc
test
imul
cmp
mov
xchg
sbb
cmp
ss
push
cmp
push
xchg
or
cld
loop
adc
and
pop
xchg
inc
mov
test
or
push
inc
or
sbb
xchg
mov
insb
mov
aam
loope
icebp
sub
scas
ss
testb
pop
jnp
fadd
loop
fidivs
jns
pusha
stos
outsl
aam
movb
adc
push
and
fsts
add
mov
js
mov
and
in
xchg
or
mov
or
lods
and
add
and
mov
mov
outsl
lock
add
cli
dec
xlat
js
pop
outsl
jns
mov
cmpsb
int3
inc
pop
lahf
lea
bsf
mov
xchg
je
les
xor
gs
mov
test
das
data16
inc
out
pusha
dec
mov
popf
dec
aad
xchg
imul
and
push
mov
aaa
mov
stos
bound
lret
mov
loope
test
lods
insb
xor
imul
insl
mov
pop
sub
or
movsb
out
sbb
mov
xchg
repz
imulb
xchg
mov
lret
ficompl
pop
roll
lods
in
imul
jae
push
cmp
pop
push
jp
sub
sbb
xchg
shll
jbe
push
call
adc
pop
cmp
mov
mov
cwtl
shrl
push
in
pop
je
andl
mov
or
inc
jns
repnz
push
pop
cmp
fwait
mov
push
xchg
stc
aam
pop
or
adc
push
sbb
and
insw
loope
inc
loope
and
add
stos
pop
add
sti
daa
test
mov
pop
and
gs
nop
pop
je
pushf
arpl
imul
lods
les
adc
mov
or
push
xchg
adc
test
push
jno
ret
mov
test
ds
adc
push
dec
sbbl
sub
adc
or
add
xor
mov
std
daa
jl
ljmp
lds
sub
stos
and
push
insl
cmp
jne
push
addr16
adc
pop
adc
mov
or
out
dec
sub
and
cmpsl
ror
scas
push
xor
push
mov
pop
inc
cltd
gs
cmp
fmuls
dec
jne
jo
pop
or
mov
cmp
mov
data16
and
jge
dec
mov
mov
sti
iret
jns
jno
and
jo
addl
icebp
sbb
roll
insb
insl
adc
rol
cltd
mov
in
push
dec
sub
dec
sub
cmp
xchg
loope
xor
inc
xor
scas
xor
sbb
fiadds
add
jecxz
arpl
xchg
test
add
bound
inc
add
mov
in
subb
cmp
stos
loopne
sub
push
mov
add
lods
mov
and
or
aas
addb
mov
arpl
mov
js
mov
mov
adc
inc
pusha
testl
and
fs
je
or
push
fisttps
lods
addr16
stc
sbb
repz
inc
repnz
jno
mov
and
cwtl
daa
lea
ljmp
pop
icebp
sahf
mov
cmc
in
jp
sahf
data16
inc
ljmp
adc
adc
xlat
adc
jge
aam
push
lahf
cld
and
fsubp
xlat
xchg
and
mov
and
xor
mov
data16
ficoms
jnp
into
and
out
or
jno
mov
dec
setnp
pop
clc
and
ss
ret
sub
insl
mov
fcoms
scas
shlb
lret
push
add
xchg
frstor
ror
xor
cld
inc
movsl
add
sub
push
sbb
loopne
test
jno
and
sbb
nop
rcll
ljmp
mov
xor
sbb
lds
loopne
fcomps
cmp
ror
loop
adc
sub
or
xor
xchg
lods
movsb
push
mov
and
rclb
adc
mov
add
fsubs
jbe
daa
lgs
sbb
iret
mov
and
int
push
cmp
mov
sub
xchg
addr16
ficoml
xchg
sub
pop
es
mov
out
push
sti
add
dec
push
mov
rcr
adc
test
icebp
sub
push
fcomps
pop
mov
gs
or
push
mov
out
gs
xchg
mov
bound
mov
mov
insb
dec
xchg
push
in
ret
pop
insb
shll
lods
ja
mov
ficoms
dec
clc
jne
dec
or
cwtl
test
xchg
mov
mov
sbb
inc
clc
cltd
jns
xchg
cmpl
gs
xor
cmp
dec
push
xchg
insl
outsb
fisttpll
jp
pop
ljmp
sbb
mov
lret
adc
inc
or
xchg
dec
das
adc
out
xchg
push
hlt
repnz
sti
fimuls
mov
inc
xor
mov
icebp
iret
int
fimull
sub
enter
not
jg
mov
js
inc
test
aam
sub
cld
xor
imul
fs
jo
arpl
and
sub
sbb
scas
inc
adc
adc
mov
aad
shlb
call
pushf
pop
or
cmp
lods
push
fwait
pusha
daa
mov
cmp
jp
xor
push
add
lods
aam
sub
stc
call
leave
decb
pop
arpl
fdivrs
div
incb
and
imulb
jl
fadds
xor
enter
pop
pop
test
and
test
in
dec
adc
and
loope
jb
stos
adc
sub
xchg
xchg
shll
adcl
out
push
testl
dec
jmp
mov
push
mov
mov
out
out
stos
dec
mov
js
pop
subl
push
outsl
pushf
mov
pop
stc
dec
clc
dec
aas
dec
mov
dec
mov
and
or
lods
jmp
gs
lcall
loope
stos
mov
lock
stos
sbb
cmp
stos
into
movsl
pushl
pop
rorl
inc
imul
ljmp
popf
add
mov
leave
iret
sahf
and
cwtl
jnp
push
sub
jbe
clc
pop
popa
gs
fcmovne
int
lods
rclb
sub
or
jmpw
mov
mov
mov
inc
dec
insb
adc
xchg
repz
xor
fildl
cmp
lock
jl
faddl
cli
in
inc
js
mov
push
stos
mov
mov
or
adc
cmp
shl
or
inc
cmp
adc
adc
sbb
inc
or
mov
stc
pop
or
or
lret
gs
je
inc
push
popl
ds
fildll
paddb
sub
adc
push
int3
das
aad
mov
mov
sbb
and
push
mov
pop
sub
repnz
bound
fnstenv
jo
and
adcl
xor
aas
pop
in
jno
lcall
in
lahf
push
or
test
sub
mov
xchg
xchg
or
or
push
fcomps
and
mov
mov
mov
rcr
out
mov
pop
in
loope
jo
in
jo
addr16
movd
test
mov
mov
push
rcl
jb
or
pop
push
stos
pop
push
sbb
mov
mov
outsl
xchg
out
adc
sub
pop
sbb
ja
or
pop
aaa
repz
fs
outsb
pop
pop
pop
pop
add
out
xchg
xor
sarb
jl
rolb
add
adc
dec
or
adc
subb
mov
movsl
lock
and
dec
cmp
cmp
stos
rorl
data16
push
stos
clc
xchg
aaa
jmp
fcomip
leave
sbb
cmc
sub
adc
addb
mov
lods
jne
in
pop
jle
cmpb
scas
add
ss
and
sbb
xchg
add
fdivrl
loope
mov
outsb
mov
push
pop
fsubrl
ds
ss
pusha
rcrb
repnz
cmp
add
mov
es
jle
push
fsubrl
inc
popf
mov
repz
pop
adc
ficompl
push
test
stos
adc
sarl
mov
emms
ret
push
es
add
outsb
and
pop
clc
jp
or
sbb
ja
add
test
push
arpl
xchg
rolb
push
xorl
and
cmc
push
aam
dec
inc
cmpsb
dec
rcrb
cltd
aam
outsl
push
adc
jp
clc
push
jbe
shr
inc
je
adc
aam
je
dec
aas
stc
inc
testl
inc
call
icebp
int3
dec
and
scas
jg
inc
negl
cwtl
xor
repz
pop
inc
je
xchg
adc
es
rcl
ficoms
insb
sti
mov
adc
jecxz
imul
cltd
push
add
xchg
dec
push
shrb
fldt
cmp
aam
xlat
mov
cmp
loop
ret
out
add
adc
stc
test
stos
mov
jae
adc
inc
mov
mov
inc
xor
std
aad
sti
daa
dec
jae
push
pusha
cli
xchg
ret
or
cmp
ret
sar
xchg
mov
jbe
cmp
push
xor
mov
ss
xlat
mov
xor
hlt
pop
xchg
inc
fldt
push
fwait
pop
and
mov
jns
hlt
jne
fists
cld
jo
shl
cmp
mov
sub
icebp
push
out
jne
xor
adc
cmp
addr16
push
popa
loopne
or
inc
push
arpl
test
push
or
test
add
and
stos
je
cmpl
daa
xchg
fistpll
push
cmp
bound
pop
test
jmp
push
shlb
add
sbb
mov
pop
lock
lock
rorb
insl
aas
ljmp
xor
lahf
popa
mov
das
mov
cmpsl
out
jb
inc
test
mov
aam
mov
ficoml
add
das
adc
dec
sub
mov
add
sub
jle
jg
ficoml
jnp
inc
loope
stos
shll
xor
xchg
out
ds
ret
adc
cs
sbb
pushf
mov
fstpl
int3
paddsb
dec
std
pop
adc
lods
cltd
scas
jge
inc
arpl
fnstenv
xchg
xor
cmp
in
xchg
mov
dec
scas
or
push
iret
push
je
sbb
inc
fstps
xor
lahf
push
sbb
lret
jno
test
mov
dec
ret
jge
cmp
ja
bound
pop
mov
mov
sub
ja
mov
jg
lods
hlt
into
xor
ss
xor
scas
xor
mov
add
mov
ss
jb
mov
js
xor
xor
arpl
out
sub
and
subl
in
pop
or
outsb
cltd
in
sbbl
jne
aad
push
mov
es
dec
pop
das
scas
fs
and
cmp
cmp
push
sbb
fwait
stc
pop
and
cmpsb
pushf
pop
daa
sub
hlt
mov
inc
sbb
aas
add
xchg
jle
sub
test
xor
inc
mov
fidivs
mov
lahf
jo
inc
cmp
rcrl
out
mov
shll
leave
imulb
daa
jmp
out
andl
inc
sahf
pop
sub
fcoml
pop
mov
fsub
cld
pop
enter
sysenter
test
or
or
lock
dec
ljmp
ret
and
js
adc
loopne
dec
pop
mov
adc
insl
cmp
popa
aam
mov
adc
loope
xchg
lret
ror
push
out
cltd
jno
mov
mov
adc
lods
sbb
into
or
in
dec
cmp
int
sbb
jo
dec
mov
xchg
sub
adc
pusha
ret
lods
cli
orb
jp
and
rep
dec
sarb
inc
xor
and
push
addr16
fs
out
push
pop
adc
mov
push
mov
or
xchg
lret
je
lahf
sahf
ja
lret
out
pusha
and
in
jp
cmp
pop
mov
dec
int3
xchg
dec
lock
aad
xor
jg
push
xor
push
mov
scas
scas
push
xor
into
or
cmp
dec
xchg
in
pop
imul
lahf
scas
dec
pop
lea
mov
iret
pusha
pop
inc
test
jmp
cmp
je
in
popf
sub
mov
out
mov
cwtl
je
mov
lahf
mov
mov
testl
pop
repnz
jo
cwtl
insb
add
dec
mov
dec
arpl
mov
jb
sbb
xchg
arpl
xchg
mov
mov
xchg
je
mov
aam
sub
pop
popf
pushf
mov
roll
fs
fwait
les
jbe
sub
js
jle
sbb
ret
jbe
gs
cwtl
rcl
dec
push
mov
cs
popa
int3
fcompl
xchg
mov
mov
vpunpckldq
testb
sti
xor
ss
inc
das
mov
cmc
iret
test
mov
dec
dec
sub
out
inc
les
insl
fisubrs
enter
loopne
adc
mov
and
test
inc
mov
aas
cwtl
push
mov
and
inc
pop
out
mov
jge
inc
mov
mov
je
or
sbb
ret
jg
pop
xor
lret
cmp
and
loop
fadds
movsl
mov
add
sub
add
or
adc
sbbb
mov
mov
sbb
or
outsl
sub
cmp
fldl
loop
jne
imul
filds
inc
inc
push
pop
test
stc
loope
arpl
xchg
mulb
xor
pop
xchg
movsl
xor
push
pusha
xor
sbb
outsl
adc
fs
into
xchg
loop
cmc
out
aas
adc
push
jae
pop
das
in
filds
rorb
sbb
dec
orb
xchg
test
or
cmc
sub
sub
insb
aaa
cmp
outsb
dec
mov
adc
lock
adc
add
jo
outsl
inc
and
arpl
or
inc
stos
mov
dec
out
sar
inc
cmpsl
sub
and
in
test
hlt
or
cli
mov
loopne
sbb
adc
add
jmp
adc
xor
in
cmpsb
jmp
shll
jle
outsb
pusha
lods
sbb
xchg
mov
adc
hlt
sahf
pop
out
pop
rcrb
xchg
aas
push
loope
int3
jecxz
push
leave
out
roll
cmc
orb
leave
iret
inc
jl
ret
das
rclb
xlat
sbb
mov
pop
xor
sbb
inc
in
xchg
addr16
std
xchg
mov
pop
mov
sti
repz
mov
mov
push
jmp
in
cli
or
mov
insl
in
cmp
loop
jb
ret
mov
mov
pop
mov
subb
pop
test
lods
hlt
jmp
fadds
test
push
mov
ss
mov
sbb
mov
sub
push
mov
sbb
mov
scas
test
ds
stos
pop
mov
pop
mov
repnz
mov
fidivrl
inc
jge
push
cmp
and
js
push
jg
push
mov
and
mov
add
jnp
ds
mov
int3
adc
or
lods
ds
lds
xchg
scas
mov
in
mov
pusha
mov
je
inc
xor
inc
out
cmc
xchg
and
cli
arpl
das
adc
aas
inc
jno
call
add
ds
add
icebp
outsl
sti
cmp
push
cld
loope
scas
test
out
int3
mov
inc
bound
pop
dec
pop
arpl
sbb
ret
pop
ja
scas
xchg
nop
rcr
push
xor
xchg
je
in
pop
ss
ljmp
add
sub
sbb
outsl
std
jnp
and
push
cmp
or
add
push
push
bnd
ficoml
push
jo
xor
add
stos
fdivrl
outsl
and
inc
fucomip
fsubr
sub
mov
lahf
mov
pop
in
inc
fs
mov
jecxz
push
sub
jmp
shll
mov
pop
fldl
adc
sub
bound
divl
movsl
jne
mov
pop
adc
push
in
cmpb
cmp
lds
or
daa
mov
imul
popa
xchg
and
xor
pushf
sub
mov
dec
and
pop
cmp
mov
push
pop
mov
leave
lret
sbb
push
jns
cmp
mov
loop
pop
cld
out
cmpsb
push
aam
xor
mov
stos
add
lahf
in
cmp
push
inc
out
inc
or
mov
addr16
aad
push
or
xlat
mul
mov
test
sbb
cld
daa
cmp
scas
mov
int
or
pop
mov
cwtl
leave
in
daa
push
shll
pop
test
cmp
ret
xchg
popf
pop
dec
adc
lcall
jno
cmp
mov
enter
ja
in
xlat
in
fmuls
in
pushf
imul
push
lds
stos
cmc
mov
rolb
jo
in
shlb
adc
incl
sbb
in
mov
jb
test
add
push
jl
mov
repz
mov
cli
adc
sti
and
pop
mov
sbb
cmc
xor
sub
stos
fs
mov
lea
mov
in
dec
divb
jno
das
mov
pop
leave
sub
enter
test
jae
pop
nop
in
fwait
add
push
add
add
lods
xchg
mov
dec
mov
inc
fs
testb
inc
es
and
cmp
sbb
dec
cmpsl
mov
pop
push
pushf
mov
ret
push
mov
aaa
lock
dec
cmpsl
push
cmp
mov
js
sbb
sbb
mov
xchg
mov
pushf
pop
and
mov
cmpsb
push
andl
movsb
shrb
fwait
outsb
idiv
jno
and
ret
jb
fisttpll
cmp
das
sub
stos
imul
shlb
push
dec
imul
cwtl
xchg
xor
rcrl
ja
lret
jno
not
adc
into
or
enter
lea
cmpsb
xor
flds
shl
xchg
jo
xor
sub
clc
mov
dec
inc
leave
inc
sbb
jo
mov
enter
call
aas
jns
cmp
cmp
cmpsb
pop
pop
jmp
or
pop
push
loope
pop
inc
jne
mov
mov
lret
mov
mov
aas
test
mov
xor
push
sti
dec
or
xchg
std
sbb
add
gs
mov
data16
iret
or
fucomp
dec
mov
or
and
in
push
adc
loop
scas
push
sub
cltd
int
stc
inc
add
lret
xor
sbb
inc
mov
test
dec
sbb
out
and
inc
jg
fildll
or
jp
hlt
push
sbb
sub
test
pop
mov
add
repnz
cmc
ret
ds
sub
sahf
sbb
mov
adcb
pop
fcmovne
mov
incl
mov
scas
movsb
sbbb
mov
jle
mov
dec
jmp
lods
push
cs
xor
lods
xor
daa
push
cs
push
in
inc
js
mov
add
pop
movsl
inc
push
ret
aas
out
pushf
dec
mull
xchg
push
dec
nop
jg
scas
inc
xorb
in
lock
add
xchg
mov
fstpl
push
jno
pop
mov
pop
push
addr16
lods
and
sti
gs
rclb
cmp
rcrl
jle
cwtl
or
add
outsl
pushf
daa
adc
rolb
or
mov
dec
int3
out
dec
inc
test
push
xchg
pmulhw
into
enter
rcrl
mov
push
mov
mov
shll
lret
mov
in
popa
aaa
pop
add
fdivr
cld
jp
lret
bound
cs
std
lock
inc
or
xchg
fs
repz
fwait
mov
dec
test
lret
lea
jp
mull
in
cmp
insb
cmpl
pushf
bound
cmc
fwait
cmp
mov
push
jp
data16
andl
lock
fdivrl
mov
inc
ss
push
inc
fnstcw
scas
xchg
roll
add
mov
jmp
or
pop
push
out
cmp
jne
inc
sub
test
fisttpl
int
je
mov
sub
loope
xchg
or
or
aas
xchg
testb
jp
out
dec
lock
outsl
sub
pushf
pop
push
mov
sahf
rorb
dec
adc
inc
sub
adc
mov
cwtl
mov
add
cmp
loope
jns
push
fcompl
mov
cmp
mov
pushf
arpl
mov
sub
test
mov
pavgw
call
fmuls
xor
popf
jbe
idivb
call
and
out
stos
lock
xor
incb
or
dec
jno
add
jmp
int3
lret
bound
lea
sahf
test
push
pop
xchg
jle
fildll
adc
jbe
pop
jb
push
mov
mov
xchg
inc
addr16
dec
push
jne
mov
mov
mov
mov
dec
jne
outsl
dec
pusha
aam
inc
test
les
mov
cmc
out
mov
popa
loopne
fwait
mull
pop
adc
stc
push
lret
shlb
nop
lods
std
lock
push
les
dec
pop
add
out
ret
je
pusha
orb
mov
add
push
and
lcall
jne,pt
pop
test
dec
or
cmp
shlb
movsb
pop
cmp
stos
repnz
lcall
nop
inc
mov
push
jb
pop
es
stos
ss
js
gs
add
push
dec
jecxz
fucomip
and
cmpsl
sub
xchg
dec
push
xchg
aad
cwtl
jne
movsl
push
fldcw
arpl
loopne
bound
pop
mov
sub
mov
push
pusha
mov
mov
test
std
pop
cmpsl
pushf
xor
jg
xor
gs
mov
je
mov
in
push
in
loopne
rorb
test
add
insl
cltd
mov
sbb
hlt
fldcw
ss
xor
pop
pusha
enter
inc
jno
sbb
stos
mov
fiadds
and
push
jnp
sub
xlat
aad
adc
shrb
sub
lret
jle
movsb
xchg
or
dec
add
xchg
les
jo
jle
rcl
mov
xchg
shll
jae
xchg
push
les
xor
inc
rcll
insl
aaa
sbb
shl
xor
push
imul
and
sbb
mov
jae
add
and
movsb
leave
shrl
add
adc
addr16
inc
jno
mov
push
enter
jns
dec
jo
pop
fwait
std
mov
sbb
jns
xor
pop
xor
jp
lock
outsb
stos
or
jbe
jnp
aas
sbb
hlt
or
adc
leave
mov
and
jne
fwait
insb
adcl
push
cs
cli
push
add
sbb
pop
xchg
dec
inc
lods
jnp
mov
rcl
int
inc
adc
int3
or
cmpsb
iret
test
jge
fisttps
push
jns
mov
sub
and
mov
aas
cmp
xor
in
jl
add
and
jno
or
sbb
xor
fmull
and
fnstsw
fcompl
add
adc
xchg
sub
data16
and
mov
or
inc
les
jns
sub
and
sub
pminub
aam
mov
mov
jae
pop
cli
lahf
int
outsb
xor
les
xor
cmp
dec
xor
inc
pop
cltd
inc
and
fwait
sti
cmp
movsb
and
cmovle
jbe
aaa
daa
push
inc
aaa
xchg
outsl
rol
sub
aaa
gs
repz
imul
cmp
test
lods
cmpsb
fbld
test
std
mov
add
xor
or
sub
int3
aaa
sub
xor
arpl
dec
pop
outsb
sub
aad
enter
test
out
fwait
inc
cmpb
lods
enter
sub
mov
ds
adc
sbb
jb
cmc
call
mov
cmp
insb
jmp
cmpsb
jnp
and
enter
insl
loope
xorb
jb
xchg
fidivl
xorb
sbb
push
movsb
pop
pushf
jmp
cmp
sub
add
std
adcb
clc
fwait
ja
mov
adc
cltd
std
fbstp
stos
scas
sub
test
fsts
dec
les
push
pop
hlt
jge
stc
shlb
addl
add
stos
nop
sub
inc
inc
lcall
mov
cmpsb
ret
es
xchg
scas
into
hlt
clc
sub
mov
scas
adc
cwtl
cltd
xor
sbb
pop
jp
fldcw
jge
cmpsl
mov
jo
mov
int
out
push
mov
inc
dec
dec
mov
and
xchg
push
or
nop
jecxz
sub
push
adc
jns
jno
mov
repnz
pushf
add
aad
cmp
jge
xor
mov
adc
jecxz
xor
nop
sarb
and
arpl
jns
inc
out
jnp
subb
filds
hlt
daa
std
pop
jp
pop
rcrl
jns
mov
insl
push
lret
dec
sub
push
notl
js
mov
push
mov
cmc
adc
push
xchg
pop
cld
pop
lock
jp
jae
or
inc
sbb
in
aam
aad
add
icebp
movsb
push
push
or
and
fimull
cmpsb
shll
stos
add
aam
js
adc
cmp
xchg
sbb
js
movsl
push
dec
rclb
dec
idivb
cmp
mov
clc
gs
repnz
rcrb
dec
add
sub
mov
pop
sahf
cmp
fimull
icebp
loop
sarb
popa
out
or
sbb
mov
movsl
adc
cwtl
jns
sub
repnz
daa
or
adc
hlt
dec
fisubl
out
adc
or
fdivl
sbb
mov
rol
sub
pop
push
jae
jg
rcl
mov
push
data16
leave
into
insl
jl
test
mov
xchg
test
push
outsl
jb
out
mov
andb
jnp
int
clc
xchg
movl
xchg
insb
xchg
jo
pop
dec
std
dec
mov
xchg
sbb
and
popf
sub
push
movsl
and
xor
jecxz
add
push
mov
sbb
push
gs
mov
and
dec
out
lea
mov
mov
push
pop
popf
lcall
sbb
leave
and
jae
xchg
cli
sub
into
mov
adc
mov
pop
lret
ljmp
xor
data16
punpckhdq
outsl
out
inc
ja
mov
popf
mov
sbb
mov
imul
xchg
std
in
jae
mov
push
jg
push
movsl
aam
cmp
shl
add
jns
and
pushf
sahf
mov
loop
ja
xchg
in
push
lea
lock
mov
ja
int
mov
xchg
xor
not
insb
movsl
mov
xor
mov
loopne
dec
mov
call
leave
push
insb
lahf
iret
pop
sub
lret
icebp
xchg
mov
cmpsl
xor
mov
enter
pop
test
jle
mov
rorl
lret
mov
or
cmc
add
lret
jb
adc
iret
jle
out
movsl
push
loopne
insb
push
sub
jle
jl
fnstenv
adc
hlt
inc
push
in
imul
mov
gs
pause
sbb
jbe
mov
ret
sbbb
clc
inc
sahf
xchg
cltd
insb
push
jl
dec
mov
mov
pop
stc
add
or
cld
adc
or
sub
cmp
mov
mov
add
cmp
in
sarl
call
push
std
andb
xlat
cmpsb
repz
push
pushf
or
xchg
xchg
fidivrs
outsl
sbb
cmpsb
mov
jnp
sti
sbb
sbb
fidivl
xlat
incb
adcb
dec
push
lds
jg
fdivrs
bound
mov
pop
out
mov
test
js
mov
stos
mov
jb
inc
jae
add
rclb
xchg
add
mov
shrl
nop
enter
or
faddl
mov
into
lret
jecxz
lahf
shrl
or
rorb
sbbb
xor
sbb
in
sub
adc
jecxz
cmp
pushf
jp
lods
mov
movsl
mov
mov
scas
mov
push
jb
jns
stos
shr
imul
idivb
add
push
add
or
xor
and
fsubs
jp
pop
stos
ja
cs
jge
loopne
dec
jns
les
xor
shlb
nop
loopne
sbb
insb
rcrl
imull
pop
mov
jmp
adc
stos
icebp
pop
lods
fldt
xor
xchg
pop
rcrl
xor
imul
dec
andl
cmc
xchg
mov
and
out
pop
xchg
jbe
xchg
push
in
xor
mov
or
sub
jecxz
inc
fucom
adc
imul
sub
jo
imul
inc
push
das
jp
jo
stc
into
sbb
push
in
cmpsb
test
das
mov
cmp
sbb
lcall
imul
push
sbb
loope
jnp
cmpsl
xor
repz
push
in
jae
cmp
jecxz
inc
push
and
aad
sbb
pop
in
pop
jae
imul
mov
mov
dec
jmp
fnstcw
nop
fidivrs
xor
popl
adc
jmp
cmc
hlt
cmp
fnstsw
aaa
xor
adc
push
dec
ret
xchg
pop
in
or
inc
jae
fldl
push
out
xor
imulb
lods
cld
fwait
jbe
in
pop
push
and
cmp
cmp
push
dec
mov
mov
call
shl
sbbl
inc
out
imul
push
adc
jl
and
jl
dec
xor
sti
outsl
xor
jle
fninit
jge
add
xchg
adc
jmp
fdivs
or
xchg
xchg
addb
ficomps
mov
rcrl
rclb
in
aaa
frstor
adc
add
in
mov
cmpsl
test
xor
jno
mov
out
xchg
lds
jnp
xor
mov
cmp
aam
ss
test
xchg
cli
divl
je
shrb
mov
mov
enter
push
inc
aas
inc
shll
int
lret
sub
mov
pusha
pop
mov
pop
test
movsb
das
int3
and
in
dec
or
into
hlt
or
mov
mov
sub
sub
cmp
gs
dec
mov
das
insl
cmp
addr16
negb
jb
rorb
fbld
mov
xchg
inc
int3
sarl
xchg
xchg
sub
lock
xor
in
sti
jl
add
jnp
loop
out
cmp
ret
sbb
and
sbb
sbb
out
insl
out
andl
or
insl
cmpb
loope
hlt
mov
fdivrl
pop
or
pop
inc
inc
fwait
xchg
std
jp
sub
xor
lahf
pop
cmpl
gs
dec
mov
shll
jne
jno
jne
std
cmp
pushf
int3
les
aaa
pop
into
test
sub
cmp
cmp
inc
repz
sbb
jle
dec
push
mov
jg
push
dec
movsb
out
add
sbb
adc
pop
mov
test
icebp
cmpsl
dec
pop
mov
xor
sbb
out
push
sub
cli
mov
jno
in
fisttpll
cmp
push
adc
push
scas
aas
loope
dec
dec
scas
fldt
jns
add
pop
dec
in
in
jb
scas
lds
sbb
lods
push
push
xor
int3
stos
inc
adc
notl
cli
mov
test
leave
gs
das
adc
push
xlat
inc
xorb
dec
adc
cmp
xchg
dec
mov
dec
xchg
xor
imul
in
les
imul
add
lret
xor
jbe
mov
push
ljmp
arpl
adc
cli
loopne
jl
mov
sbb
mov
aam
push
mov
inc
call
sbb
inc
push
lea
mov
xor
shl
insl
imul
ljmp
leave
mov
fbld
ret
or
xchg
in
mov
loopw,pn
dec
xorb
dec
fs
push
lea
imul
pusha
push
inc
pop
mov
mov
dec
mov
insl
jns
inc
lods
cmp
or
push
add
aad
movsl
cmpsb
inc
cmc
hlt
pop
mov
pop
push
test
orl
mov
cmp
dec
sbb
add
hlt
popf
jae
shrb
cmpsl
mov
inc
hlt
andl
inc
ret
cmp
ss
popa
lea
push
dec
in
cmovnp
stos
les
add
mov
push
push
adc
dec
jno
dec
mov
loope,pn
push
jns
jp
push
xchg
or
leave
sub
out
imul
sub
je
jo
andl
push
sbb
xchg
aam
adc
xor
cwtl
call
adc
ja
daa
push
test
mov
inc
imul
add
ret
inc
ret
xor
jecxz
and
cmp
xor
cltd
out
sti
push
xor
inc
dec
jne
pop
dec
dec
add
int
int
xchg
sbb
dec
adc
imul
call
shll
int3
dec
jns
loop
mov
sub
jp
popf
mov
adc
sti
je
iret
mov
pop
mov
in
jae
or
sbb
inc
lds
imul
shlb
cmpsb
jge
jno
addr16
das
adc
pop
push
sub
xor
or
adc
iret
sub
pop
cmpsb
cmpsb
movsb
cmp
in
jmp
repz
jge
push
cmp
aam
es
gs
in
fwait
and
jle
js
cmp
das
sub
test
cwtl
into
push
adc
incb
in
aaa
pop
lcall
add
and
xchg
shl
pop
jns
outsb
cltd
sbb
xchg
sub
jno
xchg
cli
ljmp
dec
xor
inc
inc
addb
push
mov
pop
data16
in
cmp
sbb
mov
mov
lds
fildll
lcall
cmovp
pusha
test
ljmp
ret
push
mov
dec
aam
mov
cmpsl
lret
sub
cmpb
sbb
mov
xchg
imul
movsl
mov
push
int
or
mov
pop
call
jb
jecxz
cld
out
mov
and
mov
mov
stc
iret
xor
dec
mov
in
ss
popf
lret
insb
add
sbbb
dec
in
cmpsb
cmp
inc
test
cmp
fnstcw
mov
adc
adc
jne
in
jae
cwtl
lret
and
out
mov
xchg
xchg
dec
pop
dec
pop
es
dec
xchg
mov
cmp
in
sbb
les
sbb
insb
sub
sub
xchg
or
inc
jno
ret
xor
fidivs
out
xchg
outsb
sub
or
sub
js
popa
jne
pop
xchg
out
mov
xchg
sahf
mov
jg
loope
inc
cmp
xchg
mov
or
jae
scas
lods
in
mov
test
lods
xlat
xor
negb
aam
pop
cmp
orl
and
stos
mov
sbb
ljmp
inc
mov
or
jb
and
test
jbe
cmpsl
jo
inc
xchg
aaa
or
adc
push
pop
fildl
xchg
cmpsb
pop
ss
popf
adc
add
push
aam
or
sbb
in
jns
sbb
add
pushf
dec
inc
dec
jl
push
jl
pop
add
adc
pop
mov
push
call
pop
xchg
cmpsb
add
push
adc
sarb
sar
pop
xor
fwait
ljmp
outsb
xlat
sub
outsb
and
push
add
mov
lock
add
sbb
out
mov
push
and
cwtl
rcll
test
mov
dec
inc
mov
jbe
in
add
dec
xchg
mov
and
lods
hlt
inc
sar
sbb
out
addl
xchg
xchg
fiaddl
movsl
fsub
cmpsb
test
les
mov
mov
das
lret
sbb
iret
sbb
and
push
int3
cmc
std
push
sub
stos
mov
jbe
mov
repnz
fmulp
in
stc
pusha
gs
fwait
or
loop
notl
mov
cli
das
push
xchg
fisubrl
test
and
cmpl
in
pop
mov
cmc
push
mov
pusha
push
loope
lods
ja
shl
fwait
out
mov
ret
xchg
push
dec
or
ficoml
mov
push
out
fucomi
mov
gs
decb
xchg
mov
dec
pop
sub
aad
jecxz
test
add
mov
negb
lods
push
inc
adc
pop
sbb
sarb
xor
sbb
jl
loop
push
fs
ja
pop
push
lcall
inc
pop
jge
push
in
jnp
scas
rorl
cmpsl
scas
push
jg
jg
jmp
stos
mov
stos
in
icebp
adc
cmp
in
dec
xor
sbb
inc
jl,pt
xchg
or
and
xchg
cmp
shll
jg
mov
mov
in
addr16
outsb
lods
rolb
pop
mull
xchg
mov
inc
hlt
js
gs
add
xchg
movsl
gs
lret
repz
ss
xlat
stc
movsb
mov
fwait
sub
mov
jge
mov
stos
sub
mov
inc
jno
int3
inc
and
loope
and
and
add
int3
adc
inc
fwait
mov
sbb
adc
mov
adc
cli
jnp
clc
dec
popf
mov
pop
lcall
mov
add
cmp
dec
pop
loope
pop
cmp
push
mov
rolb
aas
mov
and
or
sbb
sub
fstpl
jb
or
xor
out
mov
jo
mov
gs
mov
adcb
imul
out
jns
push
rcrb
vpshad
and
and
cmp
pop
xor
or
inc
ret
pop
sbb
mov
and
mov
push
pop
push
fwait
shlb
sbb
push
test
in
pop
mov
add
xor
stc
xchg
pusha
inc
xchg
adc
pop
push
push
cmp
fcmovnbe
push
lahf
jle
leave
sbb
lahf
sahf
pop
inc
lock
cmp
xor
fdivrp
fidivrl
into
inc
cmpsl
mov
add
pop
es
leave
mov
jns
jle
int3
push
cmp
sbb
jle
pushf
ds
pop
mov
mov
gs
pop
popf
mov
or
arpl
hlt
lods
out
aaa
jae
das
loope
test
sub
iret
inc
mov
add
dec
pop
add
cmpsl
cmp
dec
enter
jecxz
add
stc
icebp
dec
fs
dec
and
in
aaa
cli
repz
icebp
mov
xlat
clc
pop
test
lret
sbb
xor
sub
xor
adc
and
ds
arpl
outsl
xchg
jle,pt
cmpsl
es
pop
out
mov
pop
dec
cltd
jo
movsl
lods
jmp
es
or
sub
inc
xchg
dec
cmpsl
mov
and
ds
jns
cld
mov
dec
adc
lahf
mov
fldcw
dec
psrlq
aaa
mov
inc
push
push
add
cs
sub
in
adc
in
inc
pusha
xor
shrb
inc
aas
xor
fwait
movl
or
into
jecxz
in
and
ja
int3
push
repnz
je
out
adcl
cmp
jnp
out
mov
push
cli
hlt
xchg
mov
cmp
scas
jl
nop
cmp
int
in
addr16
in
push
cmc
movsl
fildl
cld
cmp
jge
ficomps
push
mov
lds
cmp
mov
push
cmp
je
push
adc
call
dec
arpl
push
out
jb
shr
sub
push
sar
movsl
lahf
and
mov
scas
clc
dec
cld
mov
mov
repnz
mov
fwait
or
dec
or
push
out
mov
push
cmp
add
inc
pop
xchg
mov
es
push
pop
xchg
ss
push
movsl
fxam
sbb
cli
cs
jo
dec
shll
movsl
mov
icebp
and
mov
mov
ds
inc
insl
jnp
xor
lret
jb
add
mov
in
test
movsl
test
cwtl
repnz
push
mov
mov
mov
jbe
scas
cli
ja
and
int3
sub
std
dec
loop,pn
add
sbb
add
int3
pop
subb
rcll
shll
sbb
out
add
mov
lcall
fwait
hlt
xchg
rcrb
std
aad
inc
cli
rcrb
cs
mov
loopne
scas
leave
fidivrl
sub
fadds
lea
push
stos
sub
ja
adc
test
leave
inc
mov
pop
bswap
data16
addb
sub
fidivl
xorl
and
shl
xchg
ds
repnz
adc
sti
xor
inc
cltd
sbb
stos
fsub
loope
push
xor
icebp
push
ss
es
inc
movsb
jb
cltd
jge
mov
cmp
pushf
xchg
add
loope
int3
mov
testl
stos
and
jecxz
inc
mov
sub
mov
aaa
repz
insb
dec
pop
fnstenv
add
mov
in
ja
sub
mov
inc
mov
dec
stc
lock
jl
out
pop
pop
sbb
andb
adc
or
pop
mov
pop
mov
dec
gs
mov
movsl
adc
add
je
dec
adc
fdiv
stos
stos
pusha
mov
fsub
jl
outsb
aad
sub
mov
or
call
inc
sbb
ljmp
ss
mov
jb
push
mov
sub
inc
xchg
sahf
mov
test
loope
notb
cltd
add
inc
sbb
pop
sar
das
mov
gs
or
inc
jo
pop
pop
mov
xchg
sub
icebp
out
lahf
ja
test
jp
jg
dec
and
rcl
jnp
push
jg
jo
les
repz
fwait
add
fistpl
cmp
in
mov
call
mov
loopne
outsb
lret
push
add
mov
bound
mov
stos
loope
lods
dec
sbb
pop
push
je
adc
dec
xor
jl
jle
mov
sbb
loope
pop
repnz
jns
loopne
loope
mov
lods
jae
stc
outsb
cld
xor
dec
and
ja
pop
iret
sbb
mov
add
dec
sbb
lcall
popw
mov
jnp
push
and
out
imul
sbb
mov
movsb
jmp
dec
pop
add
or
data16
stos
scas
push
add
ret
push
add
xchg
mov
loope
jg
iret
loopne
jecxz
cmpsb
ret
cmc
movsb
out
repz
out
pop
outsl
mov
scas
stc
cld
int3
shll
ret
vsubss
in
mov
inc
imul
sub
cmp
and
pop
and
xchg
test
ss
push
out
mov
pop
xor
mov
hlt
add
dec
data16
enter
mov
inc
negl
and
je
fidivrl
jp,pn
cwtl
dec
cmp
int3
adc
insl
inc
inc
add
push
mov
insl
fimull
add
sbbb
les
rolb
add
push
mov
testb
sbb
outsl
iret
leave
pop
mov
sub
inc
lcall
xor
movsb
insl
mov
arpl
int3
loopne
sahf
pop
or
add
lret
sbbb
lea
jmp
in
loop
int
push
add
pop
add
loopne
or
and
add
ljmp
shrb
or
negl
out
dec
das
iret
xor
sahf
ror
aaa
pop
popf
or
cmpsb
cmpsb
sarb
push
sbb
xchg
jge
lods
dec
and
lret
aam
sbb
imul
sbb
pop
fidivs
hlt
imul
add
mov
sbb
jne
inc
aad
cwtl
aas
testl
mov
in
mov
sbb
stos
decb
dec
mov
paddusb
mov
xchg
xchg
or
add
packsswb
fstp
and
aas
out
cmpsb
mov
fcomps
addl
pop
inc
push
dec
mov
mov
adc
sbb
xchg
jl
xlat
icebp
add
lock
adcl
inc
push
sub
adc
jb
cmpsb
fs
ss
movsl
mov
cltd
mov
in
inc
into
shlb
jbe
jns
inc
sbb
xchg
pop
aad
dec
outsl
xor
xchg
and
xor
cmp
imul
and
push
xor
xor
cmp
and
xchg
arpl
mov
cmpsb
mov
dec
das
lahf
xbegin
jnp
mov
xchg
nop
and
add
enter
mov
outsl
outsb
in
adc
cmp
jno
mov
push
and
repz
adc
mov
push
sahf
add
fiadds
rorl
stc
push
inc
int
dec
mov
filds
mov
scas
xchg
dec
inc
aam
out
and
sub
jp
andb
sahf
add
or
push
nop
jl
std
movsl
test
sub
adc
mov
xchg
xlat
sbb
dec
cltd
mov
mov
addb
test
cli
cmp
cli
js
lahf
lea
mov
in
adcl
mov
cmc
adc
adc
out
in
fwait
jno
outsb
dec
sbb
lahf
cmpsb
mov
stc
out
adc
stc
rorb
into
mov
xorl
push
jns
push
je
das
jecxz
inc
into
jmp
sbb
mov
jne
outsl
push
xor
ficoml
std
iret
dec
out
inc
orb
mov
cmp
insb
push
inc
sbb
icebp
mov
and
movsb
fisttpll
xor
pop
push
xor
std
repnz
movsl
shlb
sbb
sar
or
imul
or
jmp
or
and
cmp
movsl
mov
faddp
test
xchg
pushf
test
addr16
inc
cmpsb
xchg
mov
lds
cmp
dec
jecxz
addr16
in
les
jecxz
cmp
fistpll
or
scas
pop
test
inc
addb
cmovnp
jmp
adc
lret
imul
adc
fs
test
adc
jle
or
mov
xchg
push
jns
test
dec
pop
sbb
push
pop
xchg
in
leave
mov
call
cli
sbb
pop
jge
or
cmp
sahf
jo
dec
insb
xor
test
xor
int
jl
pop
ja
ja
sub
sub
add
pop
mov
jmp
sahf
fnstcw
movsl
xchg
jnp
bound
adc
es
sti
dec
daa
jmp
push
lds
aas
push
mov
sti
jns
push
fisubl
ret
negb
fimull
cmp
test
divl
daa
mov
push
fildl
gs
das
cmpsb
dec
into
daa
jne
inc
cmp
jb
aam
xchg
dec
test
stos
cmpsb
into
incl
sbb
into
add
mov
fwait
movsl
repz
leave
std
add
push
fdivl
mov
sbb
pusha
test
ret
add
movsl
iret
out
repz
xlat
sub
pusha
repnz
cmp
xchg
test
xor
and
sbb
lahf
and
jle
jns
cs
adc
bound
out
stc
decb
shl
loopne
mov
nop
xor
mov
pop
xchg
mov
enter
inc
ds
shll
xchg
sbb
mov
add
and
add
sahf
aad
cmp
ljmp
jp
rcr
sbb
cmp
cs
ret
dec
sbb
sub
and
and
push
out
mov
insb
std
adc
popf
cmp
sbbb
testl
std
jl
scas
ficoml
pop
adc
testl
out
cmpl
gs
outsl
imul
daa
mov
xchg
sti
jp
leave
add
jmp
jbe
push
rolb
loope
adc
dec
das
xor
add
or
inc
call
rcrl
jns
in
mov
sub
in
mov
jae
sbb
push
xchg
xchg
xchg
bswap
out
xchg
out
inc
cli
or
push
push
jmp
inc
mov
and
jbe
lods
hlt
imul
hlt
mov
mov
cld
sbb
sbb
cmpsl
mov
push
xor
jne
rcll
jmp
jo
sub
and
mov
or
mov
lea
pop
aad
loope
stc
stos
add
jmp
subl
pop
shrb
aas
iret
push
dec
aam
fnsave
adc
inc
lahf
aad
xlat
cmpb
add
shlb
mov
pop
js
jno,pt
push
jo
sbb
movsl
popa
lods
mov
imul
shl
test
mov
pushf
pop
push
outsb
add
mov
cli
stos
sahf
lods
or
shrl
scas
rorl
xchg
aaa
ljmp
xor
daa
roll
lds
subl
dec
dec
pop
add
mov
aas
jl
hlt
fimuls
in
dec
ljmp
jb
jo
sbb
mov
xor
push
mov
call
xchg
pop
dec
pop
roll
daa
sbb
pop
xchg
je
jo
dec
pop
rorl
call
xchg
lock
inc
sbb
or
adc
push
add
idivl
jb
pop
pusha
inc
xchg
dec
mov
mov
aam
addb
jne
out
enter
jmp
dec
je
addl
out
push
sub
lret
xor
cmp
jnp
and
sbbl
adc
aas
hlt
pop
mov
pusha
js
jb
add
mov
sub
icebp
mov
cmp
or
shrb
jp
inc
inc
into
stos
ret
lahf
mov
pop
add
push
fildll
cmp
movsl
cli
xchg
jle
adcl
adc
add
arpl
add
jne
dec
xor
data16
and
das
dec
jge
xor
push
push
mov
mov
lds
pop
xlat
or
jmp
jb
in
mov
push
out
rolb
or
out
push
out
cltd
rcrb
das
dec
mov
sbb
adc
sbb
push
mov
pop
xchg
test
xor
imul
lret
cmc
imul
fimull
scas
loope
orl
jp
rcrb
js
fs
loop
imul
inc
add
jp
jg
dec
ss
adc
fists
enter
test
mov
cmp
negl
mov
into
call
fists
js
movsb
jp
push
pushf
outsb
mov
es
jmp
sbb
and
sbb
jnp
mov
data16
push
stc
fstpl
inc
mov
mov
daa
fimuls
imul
mov
dec
push
push
mov
scas
cmp
pop
lock
and
addb
or
inc
mov
jp
adc
ret
lahf
dec
pop
call
ds
imul
jecxz
std
add
mov
repnz
cmp
cli
out
sbb
mov
fwait
push
rcll
cwtl
dec
inc
pop
icebp
mov
mov
adc
sub
inc
dec
insl
mov
adc
popa
jle
xchg
pop
push
and
leave
lahf
inc
push
xor
inc
fucomi
call
sbb
stos
addr16
xchg
jnp
cmp
cmc
add
in
push
repnz
mov
popf
insb
scas
pop
inc
mov
dec
xchg
addr16
aaa
orb
jb
sbb
mull
sbbb
cltd
test
mov
cmpsl
adc
lahf
push
cmp
movsl
cmc
dec
and
push
cmp
jns
cld
cmp
outsl
js
dec
nop
jnp
sbbl
lds
jecxz
sbb
inc
xor
shlb
push
imul
sti
add
push
in
pop
push
cmp
in
arpl
in
mov
mov
adc
je,pn
mov
fnsave
loop
repnz
cmp
outsb
jle
cs
imul
jb
sbb
les
sbb
aaa
ljmp
mov
mov
xor
int
mov
fwait
fwait
int
cmpb
cwtl
aaa
movsl
loop
stos
test
or
xchg
xchg
fcomi
repz
call
jmp
loop,pt
movsl
test
xor
sub
cmp
pop
and
cmp
xor
jge
mov
mov
test
loope
fwait
push
add
mov
lock
xor
in
daa
jo
adc
push
xchg
outsl
gs
test
pop
cmp
lcall
mov
xchg
dec
xor
pop
jno
mov
cmpsb
sarb
pop
popa
push
pop
cmp
aam
xor
pop
in
fistl
into
imul
mov
add
jge
cmp
push
movsl
xchg
xchg
adc
push
xor
movsl
mov
or
sub
in
sahf
inc
push
add
sub
add
jb
dec
mov
in
inc
mov
loop
push
pusha
call
adc
gs
add
pop
jecxz
jle
mov
jne
mov
cli
mov
fcmovne
cmp
xor
popa
inc
sbb
sub
dec
cld
or
xchg
lret
dec
inc
add
inc
aad
push
rdmsr
in
mov
sbbl
fisttps
push
sub
cld
mov
fcomi
in
pop
pop
inc
and
sbb
jno
jne
clc
movsl
das
movsl
sbb
push
mov
je
stos
fs
movsl
cmpl
adcb
add
cmp
test
daa
daa
jmp
sub
lods
lods
push
daa
je
pusha
pop
sahf
fdivrs
sub
pop
daa
pop
sub
repz
in
jecxz
sahf
xchg
pop
jns
out
xchg
mov
insl
and
xor
push
dec
cmpsb
shlb
inc
push
out
jne
adc
shl
mov
cmpb
jae
cltd
jns
imul
cmpl
and
leave
push
dec
add
add
inc
dec
sbb
les
scas
sub
sub
jae
movsb
sbb
in
xor
xor
xchg
imul
aas
mov
add
aaa
leave
sub
mov
add
aas
out
outsl
daa
lods
sbb
shll
mov
orl
inc
xchg
jno
insb
adc
lea
gs
or
sbb
cmp
fmul
fwait
lahf
leave
outsl
mov
orl
mov
out
jge
es
or
jns
add
data16
jnp
fmul
pop
mov
pop
sti
lahf
inc
roll
jae
bound
pop
pop
dec
xor
stos
sbb
cmp
inc
aaa
loop
pop
or
inc
sti
sbb
daa
mov
or
pop
andl
ljmp
dec
and
int3
lcall
lahf
mov
mov
xchg
std
add
xchg
mov
xor
adc
sarw
into
xor
call
or
mov
hlt
mov
lcall
xchg
loope
idiv
xchg
pop
aad
fmul
scas
ljmp
and
mov
xchg
mov
xchg
xlat
sub
mov
jle
ss
addr16
out
hlt
mov
jb
in
push
add
shll
xor
fidivrs
jl
nop
inc
sub
mov
sub
ja
mov
lods
scas
cli
mov
xor
mov
and
addb
in
sub
xchg
mov
mov
cltd
icebp
addl
shlb
add
or
cmc
add
mov
das
fistps
cli
std
lods
icebp
stc
sbb
enter
mov
repnz
cmpsb
mov
ljmp
or
and
sqrtps
cmp
xchg
inc
push
shl
rorb
mov
ja
testb
push
push
leave
or
mov
push
enter
jmp
dec
mov
add
jl
mov
sub
data16
movsb
mov
imulb
xor
push
xor
xor
sbb
jo
movsl
push
jmp
fldt
jg
pop
loop
lock
js
in
push
pop
jg
mov
fsub
add
xchg
lea
les
imul
push
sbb
and
inc
mov
in
filds
xor
xor
orl
mov
test
mov
add
mov
test
push
idivb
xchg
outsl
loope
mov
in
inc
mov
cmpsl
mov
cmp
rcrb
push
cwtl
push
lds
push
ret
dec
mov
lds
inc
push
add
clc
jl
imul
movsl
xchg
loope
dec
jecxz
insb
shlb
in
cmp
ja
ficoms
mov
mov
jbe
xor
mov
dec
fcoml
xchg
aaa
cltd
mov
xor
imul
clc
test
imul
xor
mov
pop
jbe
lcall
mov
push
mov
andl
pop
dec
movsl
outsb
jo
inc
inc
out
insl
xchg
cld
pop
jns
adc
mov
jns
pusha
data16
aad
lcall
add
rcrb
cltd
lds
clc
scas
xchg
or
leave
daa
xorl
pop
push
nop
fs
mov
test
dec
inc
addr16
pop
pop
lods
out
xlat
mov
test
fwait
int3
sub
jp
mov
mov
shrl
cmp
pop
mov
inc
out
fsubl
cmp
jnp
mov
es
jp
loopne
cmp
push
or
insb
adc
cld
cld
movsl
shlb
jge
out
test
inc
push
xchg
fdivl
jp
xorb
mov
aad
imul
inc
adc
lds
or
dec
gs
leave
add
xor
pop
mov
gs
fs
pushf
lret
aam
mov
int3
pop
mov
or
out
xor
dec
shlb
adc
in
aam
push
out
outsb
cwtl
pop
and
xchg
jle
pop
and
pop
out
add
dec
xor
into
xor
push
inc
or
popl
push
and
stos
add
pcmpgtd
cltd
mov
data16
sub
clc
stos
jno
stos
fucomip
hlt
mov
or
inc
xor
popa
mov
cwtl
mov
mov
sbb
scas
incl
or
sub
sub
icebp
and
cmp
gs
mov
push
mov
test
enter
jecxz
jmp
pop
cmp
jbe
insl
xrelease
rolb
adc
and
mov
test
xchg
fadds
shrl
cmp
xor
mov
loop
mov
in
or
lods
cmp
push
je
or
or
stc
mov
lods
push
add
cmp
aaa
mov
xchg
push
movsl
into
pop
fs
push
movsb
sbb
pop
into
mov
inc
sub
out
mov
out
aaa
clc
dec
out
inc
xor
sub
sub
mov
and
sti
mov
push
in
push
cwtl
push
idiv
xor
je
mov
pop
pop
xlat
mov
fdivrl
aad
jge
pop
mov
pop
out
xlat
dec
cmp
mov
mov
mov
ret
inc
lcall
pop
rolb
xor
gs
xchg
xor
outsb
add
rclb
enter
cmp
outsl
push
out
lds
pushf
mov
mov
sbb
xor
cwtl
push
insl
aaa
int3
pusha
xor
push
in
clc
cmpsb
sub
cmp
jno
aam
mov
mov
ficomps
imul
mov
sbb
jno
dec
je
in
loop
mov
cmp
mov
stc
outsl
inc
xchg
jb
mov
mov
xchg
push
outsb
push
cmpsl
sub
mov
inc
aaa
cltd
dec
inc
xchg
add
imul
dec
faddl
dec
fisttpll
dec
sti
add
dec
mov
loop
scas
in
gs
mov
xor
xor
xchg
testb
mov
push
inc
xor
mov
add
loopne
loop
xor
cltd
xchg
into
mov
push
stc
or
mov
add
clc
mov
ljmp
pop
cmp
mov
xchg
mov
dec
jmp
lea
push
dec
and
loop
push
dec
xchg
movsl
mov
rcrb
lcall
in
rcrl
jo
xor
sti
pop
cmc
sub
mov
loope
xchg
hlt
push
popf
mov
insb
arpl
pop
push
xorl
outsl
jae
and
gs
movl
and
cmp
cmp
lods
sarb
adc
pop
mov
mov
sub
sbb
in
and
add
adcb
sti
repz
arpl
hlt
push
rol
mov
sbb
test
inc
mov
jecxz
mov
jb
push
add
loop
pop
jne
test
mov
lods
inc
mov
lods
push
pop
jg
sub
push
adc
rcrl
aad
ret
inc
and
call
jo
aas
pusha
ja
ficoms
addr16
cmpsl
stos
fldenv
sub
shl
add
adc
sub
popf
stc
je
mov
pop
dec
or
pop
mov
push
dec
ds
rcrl
divl
data16
inc
mov
sbb
mov
aam
and
sub
lock
dec
ret
xor
bound
loope
mov
js
pop
sub
jle
ds
test
lods
ss
push
adc
je
ss
add
push
jge
or
jecxz
adc
gs
cmp
insb
adc
adc
sbb
nop
ret
cmpsb
ret
les
cmpb
mov
insl
loope
sbbb
and
outsb
je
cmp
adc
inc
dec
ret
jbe
pop
mov
fmulp
and
push
fdivrs
fisubs
popf
mov
lods
mov
dec
and
mov
cmp
xchg
sub
out
cmpsl
sbb
stos
sbb
mov
pop
mov
clc
ljmp
sbb
and
fwait
nop
out
pop
push
sub
xchg
add
jns
test
sbb
popa
mov
int3
and
gs
push
xchg
lcall
sbb
cli
aaa
pop
add
js
loope
scas
insb
push
adc
std
mov
rcrb
xor
mov
sub
adc
add
or
push
leave
negl
mov
adc
push
sbb
sub
stc
mov
mov
aaa
pop
test
out
push
test
lret
xchg
mov
dec
fidivs
sbb
in
imul
xchg
mov
mov
clc
or
sub
push
fs
sub
cmc
shrl
nop
lea
mov
cmp
out
push
movsb
loopne
out
mov
mov
or
push
mov
push
xor
push
jle
add
dec
addr16
inc
add
sbb
nop
jns
mov
xor
lahf
cli
mov
mov
jbe
cmc
jle
movsb
je
es
inc
test
mov
mov
mov
or
into
and
fsubs
pop
cmp
bound
dec
jns
xor
pop
cli
mov
push
xchg
xchg
faddp
dec
loope
int3
aas
mov
or
data16
or
movsl
xor
data16
jge
lds
mov
cltd
pop
xchg
movsl
or
inc
mov
pop
mov
dec
sub
divb
adc
test
xchg
mov
add
jp
mov
scas
movsb
mov
inc
adc
pop
adc
inc
fwait
sub
xchg
adc
add
test
subl
jns
lock
ret
stos
xchg
cmpsl
ftst
xchg
jnp
les
pop
inc
lcall
add
inc
es
pop
jnp
dec
xor
in
imul
andl
push
lea
rcrb
cmpsb
pop
mov
lea
int
xor
shll
mov
in
fcmovnbe
outsl
iret
add
movsb
sbb
add
lock
gs
addr16
dec
cmp
out
jge
int
pop
cmpsl
jg
ficompl
inc
push
popl
jo
and
push
add
mov
sbbl
nop
sub
call
push
sbb
xchg
movsb
pop
pop
inc
sbb
mov
jmp
pop
cmc
loopne
jbe
rolb
add
pop
xchg
xor
xor
insb
adc
in
roll
std
fcom
in
adc
sub
xchg
in
push
vcvtsi2sdl
ds
es
jns
cli
idiv
fsts
jbe
addr16
pop
add
and
rorl
lahf
fisubrl
fldl
fadds
mov
jle
lret
dec
jnp
andb
adc
int
dec
out
sbb
sbb
in
sub
jl
fucomp
sbb
mov
insl
pop
call
out
call
ds
lret
repnz
dec
mov
mov
aam
loopne
in
imul
ficoms
or
mov
ja
jp
sbb
subl
in
pusha
jb
jne
lods
aam
cmp
aam
push
add
aam
lea
or
sbb
mov
push
iret
mov
pop
in
loopne
dec
scas
push
push
mov
int3
daa
xor
imul
mov
inc
aaa
mov
mov
in
pushf
std
mov
fstps
mov
dec
test
test
stos
in
jle
test
cltd
jae
rorb
push
call
lret
sbb
pop
or
decl
cmpb
cmc
outsl
or
mov
sahf
fstl
cmp
mov
arpl
imul
daa
imul
movsb
das
fcom
cmpsb
push
pop
push
mov
fsubr
cmp
jp
push
lcall
inc
mov
sbb
mov
mov
scas
mov
xor
addr16
inc
sub
scas
xchg
xchg
sahf
cmp
in
sub
mov
mov
cwtl
popa
pop
test
pop
jge
pop
sub
pop
bound
loope
and
push
mov
pop
push
pop
scas
or
repnz
lcall
mov
push
nop
adc
pop
jne
sub
sbb
mov
stc
repnz
enterw
cmp
lcall
sbb
mov
mov
xlat
fwait
sbb
loopne
dec
into
pop
sbb
test
lcall
push
stos
cli
test
ja
lret
mov
jne
sbb
mov
dec
add
xchg
push
jmp
iret
fcoms
repnz
sub
push
lea
or
sub
test
lret
andb
das
cmp
jle,pt
sbb
xlat
sub
dec
ss
sbbl
lret
jbe
adc
xchg
push
xchg
ds
lea
divb
or
cmp
int3
mov
dec
inc
out
ret
enter
cltd
ja
into
sbb
cli
sub
ja
sbb
or
push
in
sub
inc
shll
lock
jno
imul
xchg
dec
inc
sbb
add
pop
xor
test
das
xchg
cmpsb
lods
cmpsl
jne
lock
xchg
mov
arpl
jg
sbb
and
shl
fadds
scas
lods
mov
repnz
or
je
lds
dec
push
xor
imul
and
std
xor
cmpl
movsl
xchg
dec
sub
mov
or
cld
outsb
shrl
sbb
or
fidivrl
mov
test
dec
adcb
mov
add
xchg
jp
and
imul
insb
push
cmpb
pop
les
cs
push
mov
in
cmp
jno
es
imul
notb
rorb
xchg
xor
divl
test
dec
clc
adcl
push
push
into
push
es
pop
push
push
popf
test
push
jb
cmp
popa
out
cmpsl
push
xlat
addr16
shrb
icebp
out
lods
jg
idivl
and
in
stos
jne
inc
sub
fucom
or
ds
shl
jo
xchg
scas
cmp
jmp
jmp
mov
shrl
loopne
pop
jg
mov
or
jo
rclb
add
lods
int
push
fs
xchg
rol
xchg
pop
test
nop
inc
movsl
dec
fwait
cmp
mov
into
inc
xchg
or
cwtl
enter
sub
mov
push
or
xor
cs
add
pop
mov
jmp
out
and
outsb
push
jl
push
fcoml
ret
flds
das
or
out
inc
pop
mov
and
sub
jo
xchg
lret
mov
jne
int3
mov
mov
or
xorl
rolb
hlt
mov
inc
negl
aad
cld
jge
push
ds
mov
stc
jg
pop
fistps
int3
inc
lods
ja
adc
into
or
and
mov
fwait
loope
pop
call
pop
pop
add
add
or
pop
hlt
mov
mov
or
bound
adc
sbb
or
jl
lock
adc
add
jge
enter
hlt
jmp
popa
push
jns
mov
test
pop
jne
inc
lock
call
loope
dec
adc
sub
ret
mov
mov
push
in
popl
in
inc
push
aas
mov
imul
aam
js,pn
aam
mov
mov
loop
adc
jb
jg
push
xchg
sub
push
mov
testl
pop
std
outsl
loop
and
pop
stc
mov
lret
outsl
into
loop
movsb
xchg
std
filds
sarl
vmovaps
mov
xor
in
mov
das
pop
dec
or
inc
loope
negl
mov
add
push
push
mov
stos
push
push
jle
lret
aam
xor
lret
pop
and
jmp
icebp
inc
mov
sahf
leave
push
movsb
or
out
ret
cmpsl
rclb
call
in
into
push
xor
aam
mov
scas
pop
jge
dec
jb
jbe
stos
mov
mov
imul
and
imul
sub
ljmp
xchg
gs
jl
xor
out
xchg
stc
jecxz
inc
xchg
jbe
stc
scas
sbb
mov
aad
bound
adc
adc
pop
sub
sahf
shrl
stc
stos
cmp
in
pop
outsb
in
and
test
shl
scas
sbb
iretw
adc
and
push
jecxz
sbb
je
or
fsts
loopne
lods
jb
test
mov
dec
lods
add
lea
push
iret
or
dec
push
lds
pushf
pop
cmp
loopne
push
adc
jecxz
enter
lret
and
clc
sbb
data16
push
xor
mov
add
sub
outsl
sar
jbe
jb
adc
fxch
ja
out
lds
insl
push
clc
mov
aad
int
mov
fsubrp
sbb
mov
repz
sti
fisubl
xorb
lahf
scas
subb
aam
sbb
outsl
cltd
into
push
xor
cltd
cltd
dec
cmp
xor
xor
dec
pop
nop
daa
xor
scas
dec
icebp
mov
insb
repnz
cmp
js
mov
inc
pop
out
pop
sbb
pop
jno
cltd
push
ljmp
mov
push
outsb
push
mov
push
xor
fwait
dec
and
ss
sbb
sub
int3
push
dec
lods
and
jne
repz
sub
xor
mov
into
sub
in
out
dec
dec
pop
in
hlt
ret
push
mov
and
xchg
add
mov
ret
out
jns
or
bswap
sbb
push
call
cmpsb
mov
mov
out
jmp
add
and
add
mov
ja
inc
add
stos
sbb
mov
xor
repnz
jg
pop
das
mov
jns
das
xchg
stos
int3
stos
jns
in
jbe
mov
xor
out
and
jge
mov
test
inc
js
xchg
cmpb
std
and
mov
in
mov
pop
dec
jae
test
stos
je
jle
add
stos
fcmovb
sbb
push
adcl
fs
xchg
out
jo
fidivrs
push
movntps
jno
les
repnz
iret
lock
mov
in
call
lods
sbb
and
js
out
repnz
fisubs
sbb
test
mov
or
jg
fadd
lcall
jae
jae
and
and
pop
adc
jl
fstpl
inc
push
fidivs
fstpt
lea
test
push
cwtl
fld
mov
xchg
cwtl
adc
sti
dec
mov
or
std
add
fstps
int3
mov
sub
and
stc
inc
sbb
int
loope
mov
jmp
dec
into
movsb
dec
dec
xchg
ljmp
fsts
lcall
push
adc
sbb
push
in
push
je
adc
sub
cli
and
add
lock
xchg
jle
int
inc
and
jne
rol
test
mov
pop
xor
xchg
jle
fcom
cmp
fisubrs
cmpsl
sti
sub
sahf
and
vmovapd
inc
pop
cld
adc
in
mov
hlt
out
incb
pop
add
cmc
push
stos
jp
jno
fwait
enter
fs
sarb
test
pop
mov
jbe
icebp
enter
pushf
dec
sbb
in
cwtl
das
orl
sub
pop
ret
fcoms
jne
lds
lds
xchg
pop
testb
xor
inc
jmp
adc
xorl
cli
mov
or
sbb
sub
shrl
adc
push
dec
decl
sub
loope
out
sub
mov
lds
mov
jns
loop
mov
sbb
jl
sarb
std
xchg
dec
les
lret
icebp
adcl
xor
icebp
push
mov
mov
mull
jl
pop
fcomps
ret
jnp
xor
cmpsl
lods
dec
jmp
or
xchg
push
enter
out
lods
xor
rcr
enter
pop
in
mov
mov
push
les
test
and
xchg
and
jbe
bound
mov
addb
jp
dec
sub
jbe
mov
mov
testb
jae
clc
adc
pop
and
mov
and
mov
pop
in
fcomip
shl
adc
mov
shrb
aas
jbe
add
insl
mov
or
les
push
lea
call
ja
jae
and
cmp
xor
jnp
mov
ss
adc
insb
cltd
dec
popa
cs
mov
push
push
les
inc
aam
pop
es
jmp
push
and
xchg
or
lcall
shrl
pop
push
addb
pop
test
cmp
ret
movsl
mov
push
xchg
sar
lea
cs
and
es
and
cmp
jbe
cmp
js
daa
stos
cltd
sub
inc
or
mov
push
lock
dec
imul
mov
lods
repnz
cmovns
lock
cmp
icebp
jge
dec
push
scas
inc
stc
mov
mov
push
mov
push
ficompl
notl
mov
mov
adc
imul
mov
and
mov
dec
mov
jnp
mov
aas
cmpsb
aaa
or
sbb
dec
cmp
int3
jl
ja
jbe
aaa
outsb
int
xchg
jnp
add
xor
sbb
push
stc
jbe
add
roll
xor
fcomp
push
orb
mov
cld
adc
das
dec
pop
xor
adc
shll
repz
scas
enter
popf
lods
test
jb
cltd
fcompl
rcll
int3
push
xor
pop
xchg
out
add
call
out
jo
stos
imul
gs
call
ficompl
pop
or
cmp
inc
out
mov
push
ljmp
stc
push
jl
inc
adc
inc
xlat
out
cmp
aas
adc
lock
push
mov
sub
test
dec
xchg
mov
out
cmp
cmpsl
inc
adc
je
jmp
adc
adc
adc
mov
xchg
lds
jmp
and
pop
fs
out
es
ret
aad
jne
addl
addr16
adc
jns
cli
sbb
insb
push
xor
push
and
mov
imul
push
cmp
and
cmp
and
nop
inc
add
cmc
int3
nop
loope
or
sub
xchg
or
into
out
mov
jbe
sahf
jno
cld
adc
inc
aas
add
inc
push
inc
enter
movsb
imul
inc
jg
jl
mov
mov
pop
cmp
and
movsl
or
rorb
jle
dec
mov
shlb
xchg
mov
stos
adc
jbe
imul
push
and
dec
iret
lcall
sbb
xchg
arpl
sbb
fdivp
rorb
test
push
mov
sub
mov
hlt
add
and
in
push
pop
les
loopne
mov
sbb
pop
movsl
test
xor
inc
cmp
push
xlat
pusha
jo
push
jmp
scas
ror
fstpt
inc
js
daa
jecxz
lods
cmp
daa
loop
out
sbb
jge
and
mov
rcrl
pop
adc
sbb
pushl
in
dec
cmpsl
out
in
jge
shrb
push
pop
xor
std
rol
sti
pusha
sbb
outsl
test
das
mov
dec
mov
fcmovb
fs
push
punpckhwd
pop
nop
mov
out
and
lea
iret
insb
mov
cmp
int
pop
mov
out
adc
mov
dec
lret
xchg
frstor
scas
pop
add
int
scas
aas
push
pop
jno
cli
incb
xor
lahf
xor
mov
push
mov
mov
jb
and
and
mov
pop
ljmp
pop
scas
mov
js
rol
sbb
arpl
pop
arpl
sbb
lock
dec
nop
pop
mov
fadd
ds
shlb
dec
inc
xchg
inc
test
pusha
mov
cmp
add
movsl
mov
sahf
dec
pop
out
mov
in
rep
mov
es
cmpsb
inc
add
iret
ret
loope
adc
and
popa
imul
cmc
sbb
dec
inc
in
sbb
xchg
xor
sbb
push
jns
out
movl
scas
ret
xchg
push
aaa
int
pop
in
sbb
dec
push
out
lret
popa
mov
add
mov
sbb
mov
mov
gs
xchg
imul
addr16
inc
jp
jns
rorl
lahf
or
gs
jle
xlat
iret
jmp
imul
mov
arpl
push
stos
stos
shl
outsb
mov
in
js
popf
mov
sub
add
pop
sbb
enter
lahf
mov
mov
loopne
xor
dec
popl
int
inc
loope
inc
int3
arpl
mov
mov
mov
stos
lea
imul
int3
push
lds
push
add
sub
add
lcall
mov
insb
inc
pop
jbe
lock
scas
ss
pop
cmp
movlps
pop
loopne
jp
sbb
loopne
scas
mov
das
movsl
sbb
clc
lds
jge
xchg
les
xchg
push
add
aas
jp
mov
xor
mov
and
mov
dec
mov
cmpsb
std
mov
rclb
adc
mov
add
aad
out
mov
int
jg
test
cmc
lock
cmp
dec
lcall
loopne
inc
add
mov
loopne
shlb
mov
add
or
test
mov
jg
sub
cmc
movsb
lahf
fiaddl
mov
jl
cmpsb
out
loop
xor
dec
pop
xor
arpl
repnz
mov
call
ljmp
lret
sub
pop
mov
in
sahf
jmp
ror
or
mov
jp
dec
rorl
cmp
fdivs
sbb
mov
lds
ret
lea
test
mov
pop
or
sbb
push
subb
lea
xlat
cltd
int
iret
inc
sbb
pop
popf
sub
xchg
je
add
cltd
js
roll
xchg
popa
addb
js
xlat
jo,pt
arpl
mov
xchg
cmp
cld
and
loop
shrb
push
inc
push
push
xchg
aam
xor
sub
ja
and
into
adc
xor
push
jmp
mov
fwait
jecxz
jne
inc
lcall
shll
jne
loope
dec
and
xor
sub
sub
arpl
push
push
xchg
sub
lods
xlat
push
jmp
popa
and
notl
mov
addb
ds
dec
in
mov
xor
repz
outsb
and
movb
sbb
int3
in
outsl
fdivrs
sbbl
pusha
or
rcll
push
leave
lods
inc
call
stos
lret
in
lret
out
lea
push
loop
hlt
fdivs
mov
fmull
dec
imul
sahf
pop
push
jg
fists
push
test
push
jp
push
mov
repz
sub
in
add
sahf
lahf
test
imul
hlt
lods
mov
idiv
js
and
jb
je
mov
adc
cs
fnstsw
and
xor
or
inc
out
mov
pusha
rcrb
mov
fstpl
sbb
mov
mov
sub
cwtl
xor
mov
cld
adc
test
mov
in
push
fwait
scas
sahf
test
add
mov
fdivrs
or
mov
lea
lahf
std
aad
or
pushl
mov
xor
sub
in
ret
push
mov
push
mov
pop
lods
jl
or
cmp
lods
xchg
sbb
sbb
fadds
mov
and
mov
jmp
outsb
jmp
adc
xchg
fsubrs
imul
aad
hlt
aam
mov
add
enter
in
jnp
int
push
int
and
sub
pop
mov
pusha
rcll
jbe
icebp
aam
shr
pop
hlt
mov
cmp
lahf
dec
pop
sti
adc
jg
dec
test
jge
add
mov
mov
out
push
mov
hlt
xchg
sbb
pop
adc
lcall
leave
xchg
sub
xlat
out
daa
mov
cmp
jb
or
jmp
jmp
pop
adc
fdivrl
fs
ds
or
imul
sub
push
sarl
lret
push
sbb
lea
or
outsb
push
mov
loopne
fwait
repz
sbb
push
pop
sbb
ds
sbb
push
test
stos
mov
cwtl
stos
sub
jb
orb
pop
mov
insl
and
sub
sar
lods
add
outsl
ret
test
in
mov
mov
and
lods
lea
inc
add
out
enter
inc
xchg
mov
sbb
mul
ljmp
dec
dec
in
mov
pop
mov
push
outsb
scas
popa
arpl
pop
cld
bound
mov
dec
push
ds
repnz
push
lea
add
jmp
mov
sub
jno
jae
mov
call
repz
add
add
lcall
out
sahf
fisttps
in
dec
mov
pop
mov
cmpsb
xchg
mov
mov
lret
loopne
iret
stc
sbb
sub
lret
mov
and
push
inc
shrb
call
sbb
popf
ds
stos
into
cmp
cmp
push
bt
jecxz
xor
mov
lcall
jae
add
jnp
cmp
mov
fwait
popf
xor
cmpsb
pop
jnp
xor
inc
rcr
inc
cmp
je
push
sub
or
js
out
xchg
inc
imul
das
jb
ljmp
xchg
or
sbb
sub
sub
sbb
aad
sbb
or
in
jmp
imul
out
mov
push
and
fs
in
jbe
test
mov
cmp
rcll
xor
jno
sub
and
or
ret
inc
mov
popl
das
fidivl
cmc
mov
lahf
lds
jo
sub
xchg
in
fwait
mov
stos
xor
dec
rcll
icebp
hlt
add
movsl
sub
test
ds
aaa
push
mov
js
mov
int3
xor
mov
fisttps
xchg
das
ret
stc
jb
mov
pop
lcall
and
jns
push
scas
aam
push
jae
icebp
dec
cwtl
loop
das
sub
faddl
cmp
loope
and
mov
cmp
adc
inc
fisubrs
scas
pusha
sub
lods
lahf
jbe
mov
xchg
ret
lahf
leave
in
inc
push
bound
insl
dec
push
mov
or
push
cmpsl
xor
sarl
clc
inc
push
push
pop
lahf
add
call
mov
into
sub
pop
clc
lea
and
jns
aas
shlb
out
pop
xor
and
and
sub
xchg
dec
sub
jle
cld
shrl
dec
xchg
inc
or
aad
mov
idivb
stc
outsl
add
jne
bound
pusha
mov
mov
pop
dec
jnp
daa
dec
cli
sbb
imul
dec
inc
sbb
pop
mov
dec
mov
and
mov
repz
aas
cmp
les
mov
push
test
push
sub
stos
icebp
xchg
out
jle
stc
in
rcrb
sub
xor
cmp
cmp
aam
sbb
fs
test
orb
push
add
adc
sub
sub
aam
fisubl
pop
dec
dec
adc
dec
push
pop
mov
xchg
sub
xchg
cmpsl
add
imul
cmp
pop
sbb
push
add
jge
push
popa
movsl
dec
sub
sbb
movsl
add
js
add
or
andb
aas
fbstp
xor
scas
push
dec
cmp
jbe
pop
bound
jnp
jmp
or
push
or
movsl
cld
mov
pop
pop
fildll
xor
clc
lds
mov
inc
sbb
popa
daa
inc
dec
lods
lock
ss
push
cwtl
and
push
stos
dec
xchg
inc
fs
mov
dec
jmp
mov
xchg
pop
pushf
xorb
mov
fcomps
bound
xlat
dec
es
jecxz
jg
sbb
fs
adc
dec
imul
fmuls
out
cli
es
cli
cs
pop
roll
pop
lahf
test
or
cmp
addl
fsubs
xor
je
xor
jp
mov
sbb
pop
jp
adc
adc
push
outsl
outsl
repnz
lcall
sbb
xchg
loopne
or
mov
fs
repnz
mov
in
lods
lahf
clc
in
add
push
pop
arpl
pop
xchg
inc
pop
lret
lea
imul
les
pusha
push
sbb
pop
jecxz
popa
sbb
cmp
xchg
mov
add
pop
or
rcrb
pop
push
aam
mov
ficompl
adc
popa
inc
pop
icebp
pop
in
pop
mov
lock
int3
dec
mov
insl
insl
xor
cmp
data16
push
outsl
and
lods
dec
pushf
jne
xchg
pop
sub
fdivrs
jg
xor
mov
and
insb
dec
sub
roll
sahf
inc
ds
mov
mov
in
xor
or
shr
mov
add
das
pop
jns
mov
popl
mov
and
bound
bound
add
add
push
jae
fbld
inc
and
or
jns
jp
ror
je
in
sub
mov
xchg
lods
lahf
push
adc
fisttps
subl
test
aad
mov
imul
inc
mov
pop
cmp
push
jle
mov
out
shl
jmp
add
dec
lods
lock
movsb
lods
cmp
push
sub
inc
mov
adc
enter
mov
jp
out
lods
iret
lret
jmp
push
mov
xor
stos
repnz
dec
jmp
test
jbe
push
lahf
out
or
xchg
mov
loope
je
sub
test
mov
xchg
push
mov
xor
sbb
pop
or
lret
pop
xor
mov
nop
jae
push
inc
test
jne
adcl
stos
dec
adc
mov
jl
sti
enter
inc
jge
enter
je
jle
je
outsl
out
mov
and
in
gs
int3
fdivl
shll
add
pusha
dec
sti
cmp
adc
and
lock
push
add
adc
test
xor
pop
out
ret
add
outsl
and
in
lods
or
mov
out
pop
ja
int3
scas
cmp
pop
cld
jmp
imul
dec
cmp
inc
je
std
dec
jmp
inc
jg
clc
add
and
cmp
or
mov
xchg
loop
mov
or
test
cld
addl
mov
mov
mov
nop
sub
inc
sbb
xchg
inc
push
inc
lret
shrb
out
xorl
add
testb
cwtl
nop
inc
fstl
inc
pop
mov
xchg
pop
add
mov
mov
sub
jae
mov
add
xor
sbb
add
les
mov
into
push
lock
sub
ret
dec
repz
adc
cmp
loope
ret
adc
ret
dec
fs
call
aaa
push
xorb
push
mov
lcall
subb
into
adc
or
loopne
inc
push
in
cmpsb
sub
jle
jns
sub
aam
sti
negl
pop
into
or
sbb
jo
jp
add
addr16
mov
xchg
pop
call
iret
mov
pop
or
inc
cli
xchg
or
sbb
into
mov
sbb
shl
jo
jnp
scas
mov
aas
cmpb
sbb
cmp
xchg
insl
sub
mov
imul
xor
mov
icebp
outsl
ret
shrb
xchg
stos
int
std
insb
repnz
mov
jge
or
dec
leave
jo
xchg
add
daa
dec
aam
dec
inc
pop
cmp
jo
mov
jmp
and
cmc
in
roll
add
inc
mov
and
mov
pop
xor
sbb
mov
or
jnp
inc
mov
mov
shrb
je
fcoms
xor
mov
lock
lods
lahf
pop
outsb
mov
push
dec
jl
dec
push
sbb
pop
nop
cmpsl
cli
jnp
stc
or
push
push
hlt
adc
stos
stos
xor
sbb
in
dec
mov
mov
dec
mov
pop
jl
test
push
lahf
nop
stc
cld
sbb
fldl
rcl
push
cmp
movsb
sarl
fadd
dec
int3
or
cld
or
int3
or
stc
rep
mov
fstpt
push
loop
sbb
or
in
sub
arpl
xchg
add
dec
mov
leave
ret
mov
pop
stos
add
adc
ljmp
orps
xchg
cwtl
dec
adc
mov
dec
add
mov
jl
inc
and
test
push
cmp
jecxz
push
mov
es
adc
xchg
shl
fcmovne
mov
sbb
or
out
inc
push
jnp
jns
rorb
mov
pop
xor
popa
and
pop
adc
pop
push
repnz
adc
cli
in
xchg
test
dec
call
pop
sahf
sbb
mov
insl
movsb
rorl
std
push
not
test
subb
fdivrs
xchg
mov
pusha
adc
mov
imul
fnclex
or
xchg
mov
stos
or
push
dec
loope
out
adc
lcall
sub
push
mov
mov
pop
scas
stc
pushf
movsl
sub
cmp
stos
aad
mov
icebp
xchg
or
iret
aaa
mov
test
push
out
mov
cld
sub
popa
test
push
cmp
mov
leave
xchg
call
lods
jge
idivb
cmpsb
adc
mov
in
mov
sub
lods
movsl
adc
hlt
mov
stos
and
frstor
cmpsl
mov
outsb
das
or
jl
fsubs
ret
sub
movsb
xchg
xchg
scas
adc
sbb
lret
adc
arpl
bound
aad
jne
insb
movsl
adc
cmp
movsb
inc
adc
imul
outsb
pop
push
arpl
imul
xchg
out
icebp
scas
and
mov
sbb
sbb
jge
push
repz
pushf
sbb
aad
sbb
fldcw
add
sub
lds
ret
or
shrb
cmc
add
cmp
push
adc
ja
testl
inc
or
add
xor
nop
cli
or
popa
inc
push
push
adc
cltd
and
or
jle
mov
shlb
cmp
adc
repz
adc
sbb
adc
xchg
sub
test
xor
adcl
mov
int
cmp
movb
push
xor
adc
mov
popa
adc
push
and
push
or
mov
mov
icebp
add
mov
xor
ret
pusha
pop
xchg
dec
pop
pop
xchg
rcll
in
add
sti
daa
adc
or
repz
mov
call
and
mov
sub
es
push
push
jne
dec
inc
push
xchg
pop
dec
rcrb
sub
jle
pop
mov
idiv
js
rcr
jmp
cmpl
popf
lcall
dec
lods
shlb
rcrb
cmp
mov
pop
icebp
cltd
out
xchg
repz
sbb
popa
fcomps
push
xchg
pusha
cwtl
test
jbe
add
fstl
inc
in
out
push
fsub
daa
and
xor
sbb
scas
addr16
sbb
add
sbb
popl
and
sub
add
test
movsl
and
sub
aas
mov
inc
outsb
int3
in
jnp
in
pop
pusha
or
inc
mov
cmc
lods
arpl
out
repnz
cmpsb
rorb
jb
int
sbb
add
or
lret
or
push
mov
in
imul
lds
and
xor
idivl
and
addb
testb
xor
pop
adc
push
xchg
icebp
dec
push
sbbb
cmp
cmp
xor
jne
ffreep
push
rcr
sbb
mov
and
push
jno
adc
addr16
ret
xor
aad
iret
add
jl
lods
call
jmp
mov
in
push
cmp
add
push
cmc
aam
movsb
cltd
and
jge
movl
sbb
pop
notl
push
cli
out
pop
push
out
inc
jle
mov
or
imul
xchg
mov
lret
in
mov
push
xchg
or
aad
insl
adc
pop
hlt
xchg
mov
inc
dec
insl
push
sub
xchg
shrl
dec
jle
jle
push
jo
and
pushf
jmp
sub
cmpb
lds
push
dec
aad
or
sahf
std
xchg
xlat
add
ret
mov
movsl
dec
jb
addr16
mov
and
mov
xor
cmp
mov
add
adc
adc
loop
mov
cmp
lcall
addb
into
jp
int
xchg
insb
jae
popa
xchg
pusha
sub
jae
ss
inc
push
dec
call
mov
cmp
mov
jge
lds
add
cli
rdpmc
loopne
xor
test
je
inc
mov
pushf
nop
adc
mov
call
js
test
adc
push
sbb
fwait
testb
cmp
mov
cmp
mov
imul
mov
jmp
jb
or
ds
pop
or
daa
xlat
divl
das
test
cmp
aaa
imul
sub
in
jmp
fwait
mov
sbb
xlat
leave
cmp
ljmp
push
outsb
arpl
pop
loopne
xchg
pop
push
into
lcall
mov
cmp
mov
jge
rorl
jg
sub
or
dec
inc
aaa
mov
cmp
sbb
gs
ds
sub
mov
push
popf
call
jnp
pushf
fldenv
and
cmp
push
pop
sbb
int3
ja
dec
jbe
addr16
pusha
arpl
pop
and
les
inc
push
shrl
push
add
fcomps
mov
outsl
jecxz
nop/reserved
cmc
sub
xor
xchg
data16
fistps
jg
adc
cmpps
insl
inc
cltd
inc
dec
in
adc
inc
lcall
mov
cmp
negb
aad
xor
sbb
jmp
xlat
pushf
xor
aas
mov
xor
iret
scas
enter
fdivs
cmpsl
xchg
inc
out
sub
jle
cltd
insb
adc
and
push
leave
repnz
dec
jg
stc
or
iret
adc
xchg
outsb
pop
out
sub
out
xor
pushf
clc
jae
popa
add
mov
popa
aaa
push
insl
jmp
pushf
push
mov
cmp
jle
test
mov
or
out
mov
xchg
jecxz
fstpt
ds
sbb
mov
ss
sub
repz
call
cmpsb
iret
outsb
ret
and
hlt
arpl
jp
inc
inc
sti
lcall
xchg
and
inc
cmpsl
push
cmc
lcall
xchg
cmp
out
rep
lret
lahf
hlt
sub
cmpb
or
mov
dec
fnstcw
xchg
aas
enter
jno
pusha
jb
int3
loope
or
sub
ror
dec
daa
pusha
and
subl
test
ret
insb
aaa
sbb
push
cs
cs
and
sub
cmc
add
data16
pop
mov
sub
in
push
jecxz
dec
jbe
hlt
jecxz
std
sbb
mov
push
in
lret
and
sti
mov
dec
inc
es
inc
add
add
mov
divl
sub
mov
jns
add
movsb
sahf
cld
je
pushf
xchg
hlt
xor
add
mov
jle
mov
sbb
xchg
outsb
mov
rcll
pop
mov
pop
fsubr
movsb
outsl
ret
jae
inc
mov
mov
out
jl
movsl
inc
rolb
mov
xor
pop
pop
sub
xchg
cmp
movsb
cmp
shrb
aas
mov
and
fsubrl
std
stos
xchg
adcb
jmp
dec
pop
pop
mov
das
fstl
aam
mov
ret
mov
inc
xor
popf
fidivrs
es
cmpsl
xchg
movsb
out
pop
pop
pop
inc
sub
cmpl
pop
inc
jle
les
fcoml
imul
pop
sar
cli
jge
stc
push
test
xorb
xchg
push
test
push
mov
js
push
jle
push
test
xor
mov
push
lret
or
scas
aam
push
cmp
adc
mov
icebp
pop
gs
pop
push
lods
mov
jle
jnp
inc
les
push
aas
mov
pop
push
mov
inc
mov
les
imul
lret
stos
xchg
inc
mov
sbb
push
popa
icebp
mov
mov
shll
pop
mov
test
ds
popa
mov
call
andl
lcall
cwtl
xchg
xor
dec
pop
xchg
jne
test
and
push
mov
pop
fcmovne
pop
dec
jge
mov
shr
push
roll
jg
xchg
jecxz
add
add
into
shrb
inc
cwtl
pop
call
or
mov
fsubrl
popa
std
add
mov
jae
filds
mov
sti
popa
je
add
push
inc
jcxz
subb
push
cmp
pop
aad
inc
lock
xchg
hlt
push
fildl
jp
lds
inc
lret
scas
mov
out
loop
test
repnz
test
add
sarl
je
or
fstps
jl
fmuls
mov
pop
mov
lea
push
mov
cltd
fbstp
pop
or
gs
cwtl
test
in
repz
pop
and
inc
adc
hlt
out
add
cld
lea
test
dec
inc
xor
mov
data16
fnstcw
loope
fisubl
mov
enter
cmp
repz
int3
pop
les
inc
xor
mov
rol
xor
or
into
sub
mov
push
cmp
in
pop
daa
outsl
div
pushf
sub
repz
xor
cmpb
adc
pop
outsb
loop
iret
sbb
jns
push
rorl
popa
cltd
sbb
mov
push
dec
loopne
ja
mov
out
or
scas
lods
sbb
mov
rorb
dec
in
push
cmp
add
jmp
mov
test
outsb
and
test
mov
cmp
push
xchg
or
ret
jg
dec
dec
repz
shr
mov
jno
push
dec
sub
dec
jnp
mov
xor
jbe
sbb
cmp
or
repnz
mov
aam
adc
sbb
xchg
xor
jo
lahf
mov
ja
orb
adc
add
out
int
xor
sub
test
add
jbe
loope
xchg
inc
or
ss
imul
enter
pop
jecxz
pop
mov
push
mov
sub
push
xor
sub
xor
and
push
insb
dec
mov
mov
pop
push
icebp
xor
mov
inc
sub
adc
or
arpl
addl
push
popa
sarb
inc
lds
and
jae
dec
push
pushf
xlat
fucomp
inc
aam
mov
push
gs
aam
sub
add
mov
xor
push
cmp
push
jmp
mov
sbb
lret
add
jp
dec
cli
stc
rclb
test
gs
ffreep
xchg
cwtl
out
jg
push
insb
mov
mov
fstl
mov
mov
int3
sub
jae
mov
mov
mov
dec
pop
orb
push
pop
or
jb
xchg
mov
dec
les
test
nop
mov
lret
iret
sbb
cmp
in
adc
fisubl
adc
addr16
xor
fistps
popa
out
dec
lock
mov
adc
jns
mov
xchg
jnp
inc
or
pop
mov
adc
inc
inc
cmp
test
fdivs
bound
adc
or
mov
or
pop
stos
mov
push
pop
and
sbb
and
add
sbb
push
in
in
or
xchg
mov
sub
pushf
lea
cmpsb
sbb
push
pop
push
pop
bound
inc
adc
jg
lret
pop
icebp
xor
jmp
push
repnz
inc
mov
jecxz
cmc
sub
dec
push
andb
leave
and
inc
pusha
pop
cmp
in
xor
or
fdivrp
xor
and
sub
add
pop
inc
ja
dec
jmp
and
add
stos
push
testl
fisttpll
mov
add
jmp
popf
push
mov
popa
mov
jae
test
cli
pop
jge
lods
dec
outsl
mov
int
xor
push
ja
loopne
addl
test
add
sbb
insb
cmp
shlb
mov
or
pop
loopne
sbb
call
inc
jmp
rcll
adc
push
xchg
lret
xor
std
and
and
cmp
test
push
aam
in
outsl
or
lods
std
ja
push
jl
xor
pusha
jne
inc
mov
mov
or
sbb
test
sbb
ja
adc
or
dec
mov
iret
cmp
test
xchg
out
inc
xchg
aas
xor
add
gs
stos
or
add
sub
xor
shll
and
cmpsb
or
and
shlb
ds
or
jns
je
xor
xchg
dec
dec
push
and
test
cwtl
fs
adc
scas
push
push
sbb
push
inc
sbb
adc
xor
into
cmp
mov
call
lea
dec
pusha
ljmp
adc
pop
aaa
add
cmp
movsl
dec
dec
lahf
adc
adc
mov
mov
gs
inc
push
pop
popf
push
stos
pop
mov
fidivs
jg
cmpsb
icebp
mov
es
pop
enter
sbb
dec
lcall
xor
ljmp
addb
add
pop
mov
mov
xchg
push
repnz
inc
cmc
repz
hlt
mov
imul
xchg
pop
xor
pop
mov
repnz
sahf
loop
mov
inc
popa
outsb
insl
into
xchg
pushf
push
mov
lock
inc
dec
push
scas
xchg
andb
xor
mov
add
loopne
and
xchg
popf
sti
push
mov
pop
xchg
test
adc
xchg
xchg
in
in
inc
cmp
mov
mov
jne
mov
imul
jl
stos
or
mov
scas
mov
dec
dec
negl
pop
add
ret
add
pop
sbb
pop
aaa
xorl
add
inc
pop
andb
out
mov
add
je
in
orb
add
dec
nop
add
lcall
in
dec
cmp
fcompl
mov
add
invlpg
adc
fisttpl
repnz
cmpsb
pop
mov
sbb
push
fiadds
cmp
lret
lret
ret
lods
or
lcall
in
mov
xor
mov
ficoms
test
mov
cmc
pop
mov
or
rorb
pop
adc
mov
sbb
int3
sub
cli
sbb
cmpsl
sbb
xchg
call
jl
push
jmp
jb
push
jno
call
nop
sub
adc
jmp
mov
jge
mov
adc
fwait
inc
mov
mov
aam
push
sub
rcl
flds
push
sub
mov
dec
outsl
xchg
cmp
rcrb
in
jle
cmpsb
repnz
daa
cwtl
sbb
xor
lea
cmp
push
mov
xor
xchg
and
cmp
pop
push
mov
mov
mov
shrl
aad
jg
sbb
data16
mov
inc
xor
ljmp
xorl
mov
xchg
lea
push
mov
push
nop
xor
divb
ds
push
add
lahf
xchg
mov
fidivrs
or
repnz
fiaddl
sbb
cwtl
popa
lret
nop
insl
mov
fisttpl
push
pop
clc
int3
fbstp
add
xor
sbb
outsl
jne
adc
dec
fwait
pop
inc
dec
jb
gs
add
pop
xchg
pop
adc
adc
repnz
sub
rcrb
sub
sbb
mov
or
pop
rclb
jns
test
or
push
xor
cmpsl
xor
test
inc
push
pop
pop
jecxz
mov
pop
cltd
add
nop
jb
test
mov
cwtl
mov
stos
mov
mov
icebp
out
jp
ja
or
int3
pusha
in
inc
pop
jno
or
xor
dec
push
mov
call
fwait
dec
add
and
xchg
mov
mov
inc
lea
xchg
lock
dec
fs
push
je
jmp
mov
pop
push
fstp
adc
stos
mov
or
add
rclb
sbb
sub
outsb
pop
in
or
outsl
lret
mov
inc
imul
xor
ss
ss
add
test
xchg
in
xchg
aas
sub
jo
lcall
rorl
loopne
xor
imul
int
lcall
or
sub
aam
adc
and
mov
sub
pusha
push
roll
mov
shr
out
push
mov
xchg
ret
jmp
xchg
mov
into
mov
lcall
jecxz
rep
xchg
jmp
mov
mov
jno
idiv
ss
sti
leave
stos
pop
xor
push
fdiv
lock
jae
cmpsl
jo
jnp
xchg
fsubrl
leave
jp
fdivrl
sbb
test
inc
dec
sbb
xor
mov
out
mov
cmpsl
jecxz
rol
into
and
hlt
mov
gs
and
shrl
xorb
inc
adc
xchg
loop
repnz
or
data16
testl
pop
pop
pop
pop
push
clc
dec
xorb
aam
aas
scas
insl
aad
test
pop
jne
fadds
cmp
lock
dec
in
jnp
mov
adc
cmpb
stc
xor
sbb
mov
or
lock
sub
ret
js
daa
int
or
ja
cltd
jns
xor
adc
jle
xchg
dec
mov
mov
adc
in
ds
dec
and
std
cmp
dec
cli
mov
ss
push
jae
sub
fdivrl
push
out
cwtl
loop
jb
mov
push
add
adc
roll
xor
and
cmp
jnp
mov
in
cld
enter
aas
stos
xchg
daa
jmp
imul
push
fadd
jae
or
fcoms
mov
imul
mov
in
cmc
popf
xchg
cmc
in
test
movb
sub
in
pop
push
ds
cmc
mov
and
adc
xlat
popf
adc
mov
cmp
nop
or
sub
pop
sbb
fisubs
fisttpll
inc
dec
mov
sub
inc
pop
mov
cld
aam
mov
bound
cs
pop
testb
cmpsb
jl
add
mov
mov
js
sbb
iret
ds
mov
lock
test
sarb
aam
mov
shl
or
inc
pop
rcl
leave
add
lds
add
ret
orl
push
jb
aad
adc
leave
leave
jae
mov
or
push
sbb
mov
mov
sub
add
cmp
dec
testb
push
sbb
sub
mulb
loopne
or
dec
cmp
jmp
stos
sub
int
fnsave
mov
mov
ror
sub
mov
mov
dec
ror
dec
sbb
icebp
and
sub
mov
fimull
ret
adc
ss
push
mov
xchg
jb
add
push
scas
imulb
jle
outsl
sub
lret
pop
cmp
push
pop
pop
das
xor
mov
xor
cmp
aam
mov
inc
fdivs
jp
into
or
scas
xor
xchg
sbb
xor
icebp
jae
scas
push
pop
jne
push
mov
xchg
aaa
std
and
mov
mov
push
cmpsb
push
cld
mov
cmp
movsb
adc
in
dec
mov
loope
push
cmp
icebp
loope
cmp
cwtl
sbb
mov
in
mov
pop
lea
pop
aam
sbb
ds
stc
popa
jg
inc
mov
insl
shlb
and
aam
add
add
lahf
pusha
mov
faddl
cmp
inc
lods
sub
testl
int3
ret
dec
clc
inc
bound
push
lcall
cmp
shl
imul
fsin
ret
loope
mov
into
pushf
pop
push
cmpsb
data16
inc
mov
popa
push
sbb
pop
jae
push
sub
pusha
lret
mov
enter
cmp
inc
rorb
test
aas
inc
not
sbb
popf
mov
pop
xorps
clc
sbbl
mov
xorb
sar
stc
cmp
dec
sbb
cld
mov
adc
enter
cwtl
cmp
rcrl
mov
mov
and
sti
push
xchg
movsb
sbb
pushf
movsl
mov
jge
pop
jmp
aad
ss
arpl
adc
mov
aam
fstps
fmull
lahf
popf
fnstcw
lahf
mov
push
icebp
cmpsl
jl
and
mov
push
mov
out
fmulp
jbe
cmp
adc
je
jmp
or
inc
push
insl
stos
int3
sub
je
aas
sbb
decw
xchg
inc
pop
imul
pop
cmpsl
icebp
fs
lds
push
ficoms
insl
test
inc
jmp
incb
lret
sbb
icebp
sub
fisttpll
xchg
out
xchg
addl
rcll
sbbl
pop
mov
xchg
xchg
dec
mov
popa
dec
sbb
shl
push
call
std
cmp
and
jle
xchg
out
in
les
cld
data16
icebp
ljmp
nopl
push
cwtl
lcall
jecxz
xchg
mov
sahf
cmpb
cmpsl
loopne
dec
cmp
and
or
lock
int3
jne
adc
scas
add
mov
pop
into
pop
and
and
out
enter
test
subb
imul
xchg
xchg
test
dec
and
pop
push
dec
out
adc
jnp
and
aaa
jecxz
in
jl
sub
sub
arpl
xchg
or
push
push
loop
dec
push
test
jb
xor
scas
mov
lods
outsb
daa
jmp
sbb
cmp
xor
mov
push
inc
mov
and
bound
test
notl
pop
mov
sub
divb
lahf
inc
sub
push
popa
cmpsl
mov
in
push
pop
insb
cmp
inc
sbb
fmuls
das
mov
dec
dec
std
sbb
in
and
les
stos
or
jle
das
aas
nop
jnp
mov
test
iret
out
lea
cmp
xchg
sahf
stc
xchg
mov
jae
pop
fwait
scas
mov
inc
xchg
lahf
mov
add
adc
rcrl
inc
add
jl
clc
push
movsb
repnz
mov
dec
aas
adc
lods
ljmp
jmp
cmp
push
loope
js
push
std
sub
xchg
cld
out
pop
test
jb
imul
and
push
xor
jo
xchg
mov
inc
inc
pop
adc
adc
jl
inc
xlat
pop
inc
clc
cltd
mov
fisubrl
push
push
cld
xor
fsub
and
mov
or
mov
loope
jecxz
addr16
je
mov
jo
fstps
dec
int
mov
in
mov
sbb
sbb
jnp
add
fldl2t
mov
jno
rorl
int
cmp
dec
out
pushf
insl
lret
lcall
hlt
dec
enter
call
and
mov
inc
mov
stos
push
or
pop
cwtl
sbb
add
inc
cmpsb
push
dec
cltd
hlt
ret
mov
cmc
jbe
mov
push
jnp
cmp
test
fadds
jo
jns
add
cmp
sti
in
cmpsl
xlat
or
mov
bound
pop
rcrl
dec
sti
pushf
icebp
into
ja
int3
push
inc
add
xlat
cmc
mov
push
pop
mov
dec
push
jp
and
gs
or
fstps
ljmp
xor
sahf
dec
aad
push
ja
and
push
pushf
or
lcall
movsl
in
loope
add
add
add
xor
xchg
cmpsl
shlb
or
jl
addr16
insb
cmpb
adc
mov
inc
fdivr
adc
push
mov
in
sarb
outsl
inc
into
mov
lret
cltd
xchg
push
or
jo
lret
push
imull
push
insl
ret
adc
xchg
cmp
adc
adc
sbbb
pop
mov
fnstsw
xchg
fisubrl
stos
imul
je
adc
scas
adc
lahf
in
pop
push
mov
xchg
cld
dec
pop
inc
jmp
dec
mov
cwtl
jne
pusha
mov
push
cmp
push
fdivl
aas
imul
cmc
mov
in
fimull
pop
shrb
lods
pop
or
lods
cmpsb
xchg
pop
adc
popa
mov
insl
dec
xchg
pushf
les
xchg
push
cmp
inc
out
scas
cmp
in
xchg
mov
outsl
push
mov
pop
sub
mov
rcr
lret
jecxz
dec
ret
pop
fwait
push
xor
shlb
call
in
jecxz
imul
cld
pusha
addl
push
in
std
cmpsl
setb
ss
fisttps
icebp
sbb
sbb
fnstcw
dec
clc
outsb
jae
and
test
loope
lcall
lock
push
stos
stc
jne
pop
dec
push
sub
in
nop
scas
lahf
adc
xor
ret
mov
ret
imul
xchg
outsl
dec
xchg
mov
adc
jnp
pop
xchg
push
dec
dec
outsb
mov
jb
into
xchg
fs
or
mov
stos
or
cmp
sub
add
jecxz
push
test
mov
sbb
into
mov
clc
aam
inc
jae
daa
or
push
jg
sarb
out
xchg
sub
enter
aaa
jle
xlat
push
mov
push
xor
ljmp
into
lahf
inc
rcll
nop
or
cmp
test
push
insb
inc
loopne
daa
loope
xorb
lock
lret
sbb
ret
mov
rolb
mov
mov
into
adc
les
cmpsl
inc
and
adc
dec
insl
mov
mov
loopne
push
mov
aas
and
pop
mov
insl
mov
fwait
in
jns
xor
sub
enter
xchg
addl
sbb
mov
mov
lahf
stc
and
cmp
jb
sbb
hlt
mov
dec
push
cli
fs
mov
mov
push
sti
sub
lea
ret
je
pop
xor
sub
cmc
int3
repnz
inc
cli
clc
push
xor
mov
movsb
mov
or
fsubl
cmp
push
adc
out
lea
rclb
das
and
shlb
rclb
pusha
pop
xor
out
push
and
lcall
nop
add
into
popf
sbb
inc
add
mov
mov
ss
mov
es
repz
js
lahf
or
loope
jne
xor
rol
cmp
test
in
call
xor
sub
mov
inc
pop
sub
xchg
xchg
mov
ret
imul
cmp
push
adc
jae
mov
aam
push
hlt
outsb
imul
fs
cltd
je
or
dec
push
out
jno
inc
sahf
pop
add
inc
pop
lea
rolb
fwait
mov
mov
in
mov
mov
adc
cli
xchg
sub
mov
popf
lret
scas
or
add
jl
cmpsl
out
add
or
mov
iret
lods
xor
dec
or
mov
mov
icebp
hlt
dec
xchg
lcall
xchg
popf
mov
inc
imul
xchg
lods
mov
leave
aad
fwait
jae
sbb
push
mov
cwtl
mov
mov
mov
cltd
pop
notl
and
in
mov
les
mov
xchg
lret
or
jmp
insb
int3
push
adc
push
push
mov
mov
fisubrl
adc
and
orb
loopne
add
notb
xor
movsb
subb
dec
xchg
mov
and
and
mov
xor
or
lret
fwait
pop
in
std
and
lahf
inc
mov
jo
insl
xor
mov
xchg
in
into
pop
jo
imul
mov
pusha
sbb
fwait
mov
inc
ret
je
mov
dec
sub
imul
push
add
popl
inc
cli
push
mov
sub
dec
pop
iret
and
push
mov
sub
shll
stos
mov
xchg
or
inc
xor
cwtl
bound
xchg
out
pop
movsl
repnz
incb
xchg
sahf
pop
dec
xchg
mov
pop
and
test
sub
sahf
mov
dec
aaa
push
repz
jno
push
xor
lret
push
scas
mov
clc
mov
jmp
mov
in
lock
notb
rcr
fidivl
mov
enter
int
aas
dec
xor
xchg
ss
mov
mov
pushf
ljmp
pop
loop,pt
stc
int3
pop
stc
in
cmp
andb
cmp
fists
push
cmp
adc
mov
cmp
dec
sub
inc
stc
shl
xor
adc
addr16
sub
adc
pop
pop
sbb
mov
fs
mov
ret
insb
and
and
mov
xchg
jmp
pop
xchg
push
pop
loope
cmp
cmc
out
iret
mov
pop
flds
sbb
jl
imul
xchg
push
gs
ror
shlb
jno
pop
arpl
jp
dec
mov
das
pop
jmp
into
imul
add
pushf
test
mov
movsl
sub
sub
dec
stc
in
cmp
imul
cmpsb
je
lret
das
xchg
cli
pop
pop
mov
or
sbb
fsubrs
or
sbb
sbb
mov
add
cmp
push
xchg
mov
popf
rcll
xor
pop
dec
push
jle
pusha
mov
fisubl
aaa
ret
call
test
iret
and
jne
and
out
sub
mov
mov
fdivr
fwait
les
inc
test
pop
or
xchg
movsl
push
or
sub
pop
mov
adc
lahf
repz
add
and
daa
iret
arpl
mov
inc
push
nop
sbb
lods
pop
jecxz
sub
lods
stc
jb
cmp
and
mov
adc
insl
pop
xchg
xor
xchg
bound
xorl
xor
push
cmpsl
mov
push
movsl
dec
stos
xchg
insl
add
lds
pop
addr16
cmpsb
lods
mov
sub
xor
lahf
repz
stos
fst
mov
imul
rcrb
jecxz
adc
daa
fcmovu
push
xchg
mov
stos
add
cld
jae
sub
xchg
ret
icebp
lahf
std
cltd
push
pop
repz
push
insl
loope
rcrb
fs
mov
mov
xchg
and
mov
push
sbb
jp
or
std
sub
mov
ljmp
les
popf
pop
pop
push
aad
ja
inc
push
inc
add
cmp
inc
lcall
repnz
sbb
fisttps
push
sub
adc
mov
pop
push
es
cmpsb
outsb
or
add
test
addr16
mov
add
je
mov
cmp
std
mov
adc
jle
jmp
mov
fwait
je
pushf
mov
mov
aaa
dec
jns
or
stc
sahf
icebp
enter
lret
mov
imul
cld
sbb
xchg
jns
and
fwait
pop
ret
pop
mov
mov
fcoml
ficoms
daa
jo
push
xchg
mov
mov
push
ret
pop
inc
stos
cmpl
mov
cmpsb
mov
setb
fldt
cld
mov
cmp
sbb
clc
loope
dec
dec
ficoml
dec
push
xlat
or
scas
push
aad
push
cli
sub
iret
xchg
jns
cmp
dec
ret
pop
mov
test
sahf
add
std
push
in
ljmp
test
push
mov
loopne
push
adc
inc
push
sahf
jp
mov
and
int3
adc
sahf
push
mov
in
loop
outsb
rcll
dec
xor
sbb
inc
arpl
insl
dec
ret
rorl
mov
mov
dec
add
adc
mov
xchg
mov
out
jno
js
pop
jg
lds
cmc
mov
sbb
mov
fcomps
test
jbe
clc
int
mov
inc
fs
fs
and
push
sub
xchg
and
pop
lcall
int
int3
xchg
sbb
jge
mov
pop
xchg
fs
mov
mov
xor
sub
push
sbb
add
ret
aad
insb
std
arpl
call
stos
push
ret
incl
test
ja
icebp
in
lods
sbb
hlt
ja
xchg
std
adc
xor
jp
lret
mov
in
add
inc
dec
es
adc
mov
pop
push
addl
xchg
xchg
mov
pop
cltd
stc
xor
lods
add
mov
aam
inc
faddp
popf
mov
mov
inc
pushf
cltd
fldenv
adc
subb
enter
jmp
or
push
push
stc
sbb
aaa
ss
scas
ja
xlat
bound
mov
jl
mov
lcall
insl
sbb
lods
or
mov
popa
jle
mov
mov
enter
xchg
lods
sub
add
call
sbb
add
push
ss
xor
repz
mov
shl
xchg
inc
sbb
and
xlat
cld
mov
cmp
sub
sbb
pusha
mov
mov
jae
xor
mov
mov
fnsave
add
jns
sbbb
mov
add
xor
test
jle
mov
sti
dec
jae
imul
jno
sub
dec
add
and
test
jge
cmp
movsb
xor
lret
out
jle
mov
lahf
adc
mov
or
inc
pop
mov
mov
jp
push
push
addl
in
insb
es
scas
int3
add
mov
icebp
fistl
loop
push
hlt
and
das
dec
stc
push
jecxz
cmp
xor
xchg
ss
dec
js
loop
mov
mov
cmp
daa
jge
fst
cmp
inc
inc
cmc
xor
outsl
repnz
xor
cmp
jle
jg
cmpsl
mov
dec
aas
jns
mov
idiv
xchg
push
insl
imul
push
mov
sub
mov
sub
ljmp
mov
jp
push
mov
stc
adcl
into
fcom
pop
push
lret
dec
fcompl
push
movsl
call
lret
lods
or
in
pop
pop
mov
fwait
inc
inc
shrl
sub
sub
aaa
in
hlt
shr
pop
mov
push
cmp
pop
mov
push
dec
fistpl
mov
xchg
sub
jg
stos
mov
arpl
jo
push
push
int
fidivrs
xchg
jbe
mov
jp
pop
adc
testb
push
jecxz
pop
sarl
adc
mov
jecxz
pop
or
dec
pop
rcr
sbbl
insl
hlt
jns
push
fdivr
xorb
lods
cmc
mov
inc
repz
or
in
sbb
push
or
cmp
test
add
xchg
xor
pop
lds
push
lods
xchg
xor
mov
push
sbb
add
subb
pop
imul
cmp
jge
lcall
jl
jns
lahf
popf
in
mov
sbb
in
imul
mov
in
adc
cmp
jle
fdivrp
pause
sbb
aam
test
sub
out
bound
out
cmpsl
push
es
adc
mov
movsl
jg
or
and
lahf
addr16
lcall
mov
faddl
xor
jae
xor
jne
rorb
je
lcall
mov
sar
imul
test
ljmp
aad
aad
shl
jg
adc
fcoms
aaa
add
sbb
test
inc
mov
adc
fsubrl
lahf
xorb
mov
add
fsubrl
adc
xchg
outsb
dec
fwait
mov
xor
cli
mov
sahf
mov
loopne
stos
cmc
adc
je
mov
lock
add
daa
addl
jae
lds
or
nop
push
rolb
pusha
das
nop
mov
adc
mov
out
aad
bound
in
mov
test
pushl
mov
popf
in
cmc
mov
imul
inc
aam
sub
cmpsl
jmp
dec
mov
iret
popa
and
fcmovne
mov
popf
scas
cmp
push
addb
jb
and
pop
iret
ja
add
imul
loop
sub
mov
cmpsb
ficomps
xchg
cld
je
mov
pop
cs
lahf
jmp
adc
jl
test
rolb
test
xchg
lcall
mov
push
sbb
push
stos
jo
mov
fimull
mov
test
out
xchg
and
lods
ret
push
mov
xchg
mov
sti
cld
ret
out
xchg
scas
xchg
push
idivb
movsl
in
mov
add
ljmp
pop
sub
xchg
dec
cld
cwtl
add
push
inc
cmp
fistpll
ret
inc
mov
add
xchg
xlat
mov
das
cmp
mov
mov
and
mov
cmp
cli
add
cltd
xor
std
dec
jnp
dec
mov
decb
adc
enter
scas
adc
xor
jbe
or
aad
xorb
push
ret
jmp
push
xchg
xchg
sub
hlt
inc
pop
pop
push
movsb
push
imul
out
cmp
and
enter
sub
push
cs
das
xor
cmp
les
fisubrl
and
insl
and
pusha
das
lods
jb
pop
in
daa
jno
out
add
push
sub
inc
or
aad
add
or
test
test
jb
out
insl
inc
test
inc
pop
aas
sub
outsl
outsl
mov
xor
icebp
jge
dec
mov
stc
push
mov
and
mov
ss
cmp
sbb
lret
dec
xadd
xchg
push
sahf
bound
iret
clc
popf
bound
fisttpll
mov
movsb
enter
xchg
dec
mov
mov
lret
jb
sub
sahf
push
pop
inc
pop
or
lods
adcl
sub
mov
pop
aaa
cmpb
add
push
stc
mov
inc
movzwl
aas
mov
mov
sub
jl
push
in
xchg
xchg
inc
inc
dec
cmp
mov
push
xor
mov
mov
fldcw
data16
dec
int
dec
and
scas
pop
popf
push
jp
push
jo
nop
movswl
out
pop
sbb
push
in
sbb
imul
adc
sti
jecxz
movzwl
and
jecxz
sbb
leave
lock
sub
imull
push
js
pop
adc
inc
vmread
add
push
mov
sub
cmpsl
push
or
and
js
outsb
mov
dec
movsl
shrd
xlat
push
pop
dec
dec
adc
add
or
fists
fdivr
fildl
xlat
xor
adc
jno
push
xchg
or
decl
xchg
push
clc
mov
scas
hlt
cli
xchg
adc
mov
fcoms
xor
ret
xchg
cmpsb
push
xchg
push
pop
lahf
cs
scas
sbb
lret
mov
pop
fsts
pop
jno
loop
sbb
ja
pop
aaa
sub
or
mov
stc
faddp
fcoml
inc
xchg
or
push
movl
dec
sbbb
pop
in
and
jbe
dec
xchg
xchg
mov
arpl
mov
push
sub
sub
je
push
mov
pop
add
outsl
sbb
mov
xor
nop
jge
loope
pop
xor
mov
mov
mov
scas
mov
or
insl
loop
aam
enter
fists
dec
popa
insb
pop
sti
inc
inc
outsl
sub
ss
pop
jbe
fstpt
push
push
icebp
and
icebp
xchg
es
jecxz
lret
xchg
adc
xchg
scas
jl
rclb
loope
int
sarl
test
stc
call
and
daa
xchg
mov
xchg
shrb
adc
adcl
dec
sub
rorl
mov
jbe
mov
outsl
into
mov
jecxz
jl
pop
lret
lret
add
pop
shrb
pop
mov
ljmp
clc
sub
sub
and
xchg
mov
imul
mov
std
aas
sub
mov
mov
in
enter
ret
movsl
hlt
add
add
fcmovnb
out
test
or
rorb
mov
push
jmp
in
inc
pop
ljmp
jae
or
mov
xor
sbb
mov
and
popa
cs
leave
add
repz
adc
xor
mov
mov
dec
movsb
icebp
pusha
dec
cmp
std
lahf
push
test
dec
mov
pop
jle
insb
dec
cmp
mov
rclb
pop
rcrb
inc
mov
ret
xlat
sarl
mov
mov
sub
jp
rol
fisubl
les
push
mov
repnz
inc
mov
outsl
sbb
inc
pushf
sbb
mov
xor
cmpsl
test
xchg
mov
mov
lds
mov
mov
cmp
ss
mov
xchg
mov
mov
out
ja
add
out
shl
notl
inc
das
mov
mov
pop
nop
cmpsb
leave
mov
loope
or
popa
xor
inc
into
in
dec
mov
test
mov
mov
mov
mov
aam
addb
and
out
jnp
out
jge
and
dec
mov
lock
inc
fldl
dec
push
or
mov
imulb
addr16
xor
dec
aaa
rorb
xchg
rolb
ds
ss
loop
and
cmp
loop
jg
shl
in
fildll
xor
movsb
cmp
pop
jae
mul
push
out
dec
js
int3
out
ss
popf
and
sub
xchg
arpl
jns,pn
sbb
sbbb
jno
mov
push
xabort
testb
ds
dec
cmpsb
pop
xchg
inc
cmp
pop
lahf
ss
xchg
and
ljmp
push
adc
aas
push
out
ss
mov
icebp
mov
push
push
rorb
mov
int3
shll
daa
adc
add
stos
or
mov
add
sub
lods
cs
in
sarl
fsubrl
popa
pop
out
jl
cmp
aaa
pop
scas
dec
push
inc
push
or
pop
ficoml
dec
and
dec
lret
fwait
sub
mov
cli
inc
sbb
fdiv
fsubrs
pop
mov
mov
mov
add
sahf
clc
outsl
ja
sahf
jle
sahf
push
ss
jmp
push
mov
jns
mov
pop
sub
inc
popf
aas
sub
push
mov
jne
push
movb
or
mov
cmpsl
scas
test
loopne
sbb
xorb
lea
ror
xor
cmp
or
repz
or
fs
popf
std
jo
push
adc
mov
cmp
aad
sub
lds
iret
repnz
orl
mov
mov
pusha
stos
adc
jo
jl
popf
dec
jecxz
hlt
push
dec
mov
cmc
or
pop
cs
xchg
shll
cltd
adc
pop
shll
xchg
sub
iret
je
stc
negb
fcoml
ds
popa
pop
cld
jp
add
lods
mov
in
push
repz
inc
and
ss
mov
vmwrite
fwait
pushf
push
testb
dec
jb
cli
pop
xchg
rorb
dec
cmpsb
sbb
mov
imul
fidivrl
push
bound
ss
inc
inc
adc
popa
jb
sti
aaa
sti
fisttps
in
mov
cmp
rcl
add
or
and
fcompl
imul
pop
pusha
movsl
adc
mov
push
mov
ret
mov
loop
cld
xor
clc
out
andb
xchg
fwait
cmp
or
push
mov
push
mov
sub
jns
imull
enter
xchg
fwait
xchg
je
call
insl
mov
pop
xchg
push
in
loope
jl
icebp
in
or
mov
push
enter
push
data16
pushf
hlt
xchg
outsl
dec
push
cmp
imul
push
pop
leave
mov
mov
sub
sub
shll
jp
mov
mov
cs
test
movsl
in
dec
cmp
shlb
push
mov
mov
lcall
jno
push
cmp
mov
cli
sbb
xchg
leave
adcl
loop
das
xor
dec
data16
fisttpl
ret
int3
adc
popf
movsb
or
out
dec
pop
adc
addr16
lahf
jl
adc
dec
int
movsl
push
mov
sub
sbb
mov
mov
movsl
je
dec
add
cmpsb
add
test
imull
lods
scas
cmpsb
in
sbb
sti
test
push
lods
sbb
adc
insl
inc
cli
lods
lock
dec
aas
jne
cltd
xchg
jns
sub
cli
mov
pop
push
xchg
mov
ret
fs
or
jbe
stos
divb
add
test
stos
shll
decl
jmp
loop
jge
push
or
subb
sbb
fmul
xchg
inc
add
dec
cmp
popa
xchg
mov
xor
ja
push
inc
sub
je
aad
add
add
mov
sti
mov
in
push
pop
sarl
repnz
pop
jae
mov
mov
popa
shll
test
pop
mov
fdiv
gs
sub
movsb
xchg
aam
and
xchg
xchg
push
loopne
mov
inc
or
sbb
add
aaa
add
lods
rorb
test
aam
das
lods
pop
xchg
cwtl
xchg
push
mov
mov
outsb
and
jne
pop
mov
lock
stos
sub
into
add
dec
sub
pop
insb
and
and
sbb
mov
in
movsb
and
cwtl
sub
out
pop
mov
dec
sub
sub
in
test
push
cli
pop
je
lods
or
in
mov
adcb
push
mov
lcall
inc
std
outsl
adc
lahf
inc
and
or
mov
fcompl
push
dec
add
inc
clc
out
mov
jmp
inc
dec
cmp
cmc
jg
test
xchg
call
insl
push
add
mov
inc
mov
or
lods
jp
lahf
xchg
jmp
xor
ja
orl
aaa
jg
in
push
adc
jge
xor
jnp
shll
into
stos
inc
jp
mov
mov
or
cltd
mov
inc
mov
cmp
mov
sub
into
in
lea
adc
jg
pop
xor
or
mov
jp
mov
mov
hlt
add
add
mov
mov
pop
adc
jbe
imul
pop
push
faddp
inc
int3
mov
or
push
add
jns
push
shrb
cld
divl
outsb
push
push
add
lds
sub
mov
idivb
fidivs
mov
and
mov
test
inc
mov
lock
and
pop
jae
push
int
push
inc
rcll
sahf
lods
lcall
bswap
sbb
inc
das
inc
std
inc
push
js
jge
leave
jle
into
inc
push
xlat
jp
daa
mov
lock
popf
or
stc
int
lret
dec
enter
jl
jg
cmpsl
jg
and
in
push
dec
mov
ret
jge
rorl
inc
xor
lret
jb
or
xchg
incl
out
or
gs
sbb
test
jmp
aam
mov
mov
mov
or
cmp
in
xor
insl
mov
mov
int
add
push
add
adc
sbb
pop
sbb
pop
and
pop
inc
cs
imul
pop
movsb
insb
jp
xchg
ljmp
sbb
mov
or
sub
jmp
fnstcw
and
and
cmp
mov
pop
pushf
ret
outsl
imul
mov
or
adc
fcmove
or
xchg
inc
push
jae
fisubs
stos
fadds
orl
jnp
cli
jecxz
repnz
xchg
lret
mov
adc
cmc
sub
add
xchg
addr16
inc
sbb
enter
jl
jecxz
sub
push
out
aas
dec
out
fildl
dec
dec
loop
xlat
fcoml
push
jns
push
push
and
hlt
les
cmpsb
mov
stos
push
mov
and
aaa
jge
jmp
movsb
cmp
testb
fidivl
lods
mov
inc
or
test
mov
inc
clc
out
daa
or
daa
add
movsb
mov
jp
or
rorl
mov
or
xchg
shr
out
mov
in
xchg
mov
push
ja
popa
pop
cmpsb
jns
mov
out
push
mov
out
and
imul
push
xchg
jmp
ja
push
jmp
jb
xor
fcmovnb
dec
push
xor
call
sub
add
mov
sub
fstpl
fisubrs
fisubl
int
cmp
sbb
sbb
adc
sub
movsl
and
xchg
and
and
dec
loopne
test
sub
mov
xchg
das
cmp
dec
pop
repnz
xchg
std
movsl
hlt
mov
mov
aam
cmpsl
xchg
out
or
sub
push
add
dec
push
test
ja
pop
popf
or
jg
push
shl
out
arpl
outsl
jge
push
loope
jge
in
jmp
xor
xchg
idiv
mov
jecxz
popf
mov
jmp
aas
pop
jl
xchg
xor
shrl
gs
pop
inc
cmp
mov
adc
mov
dec
xlat
icebp
cmpsb
enter
push
jmp
ror
and
into
push
es
dec
popf
add
ss
icebp
call
aad
mov
stc
fwait
loop
test
xchg
and
in
jmp
mov
jmp
ret
stos
adcb
push
add
cld
mov
frstor
sbb
jns
mov
js
sub
jae
mov
or
cmp
jmp
xchg
push
xchg
test
rcr
arpl
in
pop
icebp
pop
xchg
sbb
push
hlt
dec
out
cmp
cs
sbb
fnstcw
cs
sub
xchg
push
popa
insl
mov
fisttpll
int3
push
clc
adc
dec
jecxz
enter
sbb
xchg
movsb
push
int3
sbb
mov
push
push
xlat
shlb
jp
nop
rorb
sbb
test
xor
not
movsl
ds
insb
stc
or
and
sub
xor
xchg
xchg
loopne
incb
js
xor
adc
xor
inc
and
xor
ja
push
jl
cmp
mov
loopne
sub
daa
sti
xor
cmc
shrl
aad
inc
fldt
imul
adc
loope
pusha
or
xor
imul
ds
jnp
sbb
into
xchg
fdivl
jb
dec
clc
fldt
cltd
lds
shll
jo
mov
arpl
or
inc
je
xchg
inc
jl
xorl
stos
pop
movl
shll
adc
push
iret
mov
sbb
pop
movsl
mov
mov
in
mov
inc
push
jle
dec
push
stc
rol
xor
fisttpll
fldt
add
out
repnz
imul
int3
outsb
adc
xor
stos
and
pushf
ljmp
add
rcr
aad
sub
hlt
sub
outsb
fscale
lods
sub
or
xorl
sbb
clc
inc
shl
sbb
sbb
out
movsl
inc
pop
gs
sbb
cmp
xor
or
lods
cld
outsl
adc
dec
stc
hlt
jmp
mov
or
je
loope
inc
adc
cli
adc
and
cld
aas
mov
testl
je
and
push
mov
aad
les
sbb
outsl
pop
out
pop
stos
xor
jne
sub
xor
pop
adcl
dec
int
jno
or
divps
jb
int3
std
rcr
push
or
and
dec
jno
loop
shlb
and
push
cmpsb
in
mov
cmc
dec
sbb
movsl
lret
cli
pop
enter
pop
jae
loope
adc
and
pushf
xor
jmp
loop
mov
mov
outsb
cmp
mov
icebp
test
lods
sub
icebp
sbb
push
sub
dec
ds
adc
adc
flds
es
mov
adc
aas
mov
jg
stc
mov
hlt
jne
sti
dec
mov
popa
or
xor
je
push
mov
adc
mov
repz
aam
or
xchg
rsm
mov
mov
lds
push
rol
sbb
and
adc
adc
in
lahf
out
or
cmp
ret
stos
outsl
pshufw
hlt
pop
jge
cmc
fwait
sbb
mov
ret
test
cmpsb
adc
fsubrl
add
sub
jecxz
lods
mov
jge
frstor
sbb
out
add
ret
icebp
rcl
rol
or
xor
addr16
sti
adc
push
mov
cs
push
mov
push
xchg
inc
orl
push
cmp
das
and
dec
and
in
lret
xchg
and
xorl
repz
add
mov
cmp
stc
and
in
mov
push
inc
pop
jb
mov
adc
mov
outsl
push
stc
xor
mov
mov
stc
push
adcb
pop
and
icebp
dec
ret
push
repz
sbb
pop
loope
lock
xor
xor
shrl
test
inc
loop
fisttps
push
jp
mov
sbb
out
inc
jo
enter
lret
in
mov
add
ror
cmpsb
push
sahf
cmp
push
daa
jnp
in
cmc
subl
pop
in
dec
adc
lds
lds
scas
dec
sbb
cmpl
pop
insb
fisubrs
sub
fs
lret
popa
fwait
daa
into
cwtl
es
push
push
dec
add
push
sbb
enter
mov
out
and
outsl
and
fdivl
in
cmc
fcmovbe
js
and
test
fisttpl
pushf
lock
mov
pop
inc
cli
add
fimull
jge
mov
pop
fisubrs
sbb
cwtl
mov
and
adc
mov
lods
xchg
jno
int
cmpsl
daa
ret
mov
push
xorb
jle
in
repz
jno
add
pop
mov
fdiv
mov
lret
mov
sub
lahf
xchg
repz
ja
divl
lock
shrb
shll
sub
ret
inc
das
fcoms
pop
sbbb
subl
movsl
sbb
add
sbb
xor
mov
adc
rcrl
push
in
sti
push
or
cmp
rolb
sub
ret
test
mov
jmp
xor
cmp
mov
das
dec
mov
or
or
imul
sub
mov
mov
jbe
addr16
mov
push
sbb
dec
dec
int3
push
xchg
sahf
fcoml
rcrb
mov
xor
mov
sbb
pop
sbb
movsl
fldenv
fwait
push
jno
lret
movsl
xor
mov
mov
das
push
or
fbld
shlb
popa
icebp
gs
or
test
out
fstps
dec
clc
daa
mov
test
cmc
xlat
jecxz
push
sub
pop
adc
rcrb
dec
fsubrs
jnp
sbb
add
or
xchg
stos
adc
mov
inc
cmp
aam
and
mov
fs
or
divl
addb
jg
inc
jmp
call
or
iret
fisubrs
mov
cld
cli
roll
ret
addr16
sub
dec
inc
pusha
cld
mov
orl
stos
fsubrp
xor
pop
pop
mov
jns
lods
adc
push
pop
cmp
addr16
popf
stos
xchg
and
out
les
xchg
sbb
cmp
pop
pop
push
pop
xor
mov
xlat
pop
test
jg
dec
imul
xchg
jno
jo
hlt
add
setne
in
ret
mov
rolb
sbb
fcmovnbe
adcl
push
jle
cltd
insl
test
jl
cmpsb
jae
into
push
push
adc
repnz
cmp
inc
push
pushf
js
sahf
cs
mov
enter
ds
mov
push
sub
jecxz
insl
mov
dec
scas
adc
roll
arpl
mov
sub
repz
sahf
jno
in
pop
add
cmp
es
jecxz
and
pop
adc
pop
iret
jmp
push
xchg
mov
into
cwtl
xchg
cmp
mov
adc
pop
fs
xor
mov
fwait
or
push
jecxz
jle
out
rolb
leave
test
not
sbb
jne
pop
movsb
test
nop
leave
sti
in
mov
xchg
inc
inc
popa
push
cmp
sbb
add
push
push
insb
jnp
adc
mov
or
pop
push
push
jg
push
sahf
jp
ret
add
lods
aad
rcl
or
mov
or
add
insl
out
xlat
and
lret
xor
movsl
xor
jbe
lds
scas
adc
scas
pop
mov
xchg
add
mov
icebp
aaa
lahf
fwait
inc
lret
scas
popf
outsl
icebp
repnz
inc
mov
dec
arpl
inc
cmp
fimuls
adc
jge
nop
add
jmp
lret
mov
lds
cmp
mov
xchg
lock
lahf
mov
enter
rorb
data16
pop
jns
icebp
ja
xor
adc
xor
xchg
push
jcxz
bound
cmp
xchg
into
hlt
lcall
xchg
push
les
jo
pusha
dec
cmp
and
shl
ljmp
mov
test
lea
jle
lds
cwtl
jae
mov
cmpsb
daa
xor
mov
stos
xlat
andb
icebp
sbb
mov
out
enter
outsb
push
into
out
push
inc
jns
insb
inc
shr
or
cmp
enter
in
dec
xor
inc
repnz
loope
sbb
sbb
xchg
into
clc
mov
scas
lret
imul
mov
pop
sbb
sbb
lahf
sub
push
sti
addr16
xchg
nop
sbb
mov
ret
shlb
push
testl
shrb
sub
dec
cli
gs
dec
sub
xchg
clc
jle
push
inc
scas
adc
dec
pushf
test
pop
and
xchg
mov
push
imul
ficoml
loope
sub
mov
test
loope
call
jbe
xchg
lcall
push
jmp
mov
cmp
pop
cmp
xor
mov
dec
test
pop
mov
in
inc
push
notb
in
jp
push
cltd
fidivrl
dec
bound
out
js
lods
cwtl
out
outsl
dec
dec
dec
sbb
adc
sar
inc
stos
sub
sub
pop
jo
xchg
or
cwtl
pop
data16
lret
movsl
xor
popa
xchg
push
push
jge
mov
fistps
pop
out
dec
mov
adc
xchg
xor
loope
add
pop
add
pusha
add
xchg
clc
sbb
stos
mov
insb
adc
lods
jae
and
testb
inc
add
or
or
popf
scas
mov
xor
cmp
jmp
sub
mov
xchg
nop
int
test
xlat
ljmp
stos
jp
stos
jnp
dec
push
xlat
test
adc
pop
push
lock
pop
scas
mov
mov
ret
insb
mov
inc
gs
sbb
test
mov
xchg
dec
iret
and
fnstsw
jnp
dec
jp,pt
push
hlt
xor
fsubrl
stos
jmp
clc
add
rcrb
aas
pop
pop
push
out
fxch
aas
dec
or
das
xor
leave
jae
sbb
inc
add
xchg
test
push
cmp
test
add
mov
mov
inc
dec
pop
mov
xchg
aam
sbb
fcmovnb
sahf
iret
add
or
adc
pop
adc
aas
arpl
or
push
push
stos
out
sbb
jp
ret
sub
jg
push
shlb
xor
mov
data16
ja
insl
lcall
lret
out
popf
rcrl
in
add
daa
jns
cmp
enter
pop
push
inc
in
rcl
push
pushf
sbb
xor
sub
or
jp
shlb
push
pop
xchg
mov
test
push
stc
add
sub
and
int
adcb
aas
hlt
fsubrs
xor
push
stos
and
test
stos
xchg
inc
mov
xchg
mov
lds
inc
xlat
inc
add
add
dec
addb
fnstsw
jne
sti
loopne
std
jl
push
mov
xchg
imul
pop
mov
jge
movsl
sbb
iret
sbb
pusha
ss
jl
pop
or
sti
cmp
incb
jecxz
fidivl
fs
sub
push
jno
cmpl
test
push
out
lods
and
xlat
insb
ret
aad
mov
adcl
aas
cmpsl
mov
mov
cmp
loope
push
push
ret
scas
aad
dec
rol
mov
jo
aad
outsl
mov
mov
bnd
sub
jno
mov
push
arpl
movsb
jmp
cltd
jl
push
lcall
out
dec
mov
std
pop
jns
and
inc
addl
mov
xchg
jl
in
jns
sbb
out
rcl
push
cwtl
mov
sbb
and
pop
jns
cmp
inc
jb
aad
stos
mov
xor
xor
or
dec
xchg
mov
add
pusha
mov
fsub
mov
xchg
in
jle
cs
sub
mov
cmpsl
push
insb
mov
lea
add
and
dec
push
stos
cmp
mov
les
fiaddl
jp
mov
test
test
call
xor
test
mov
xchg
pusha
clc
cli
inc
xchg
cmp
push
lahf
add
cmpsb
add
jbe,pn
out
dec
adc
repnz
xchg
add
mov
fisubl
loope
lcall
cmp
sub
xor
push
into
xchg
stc
les
xor
push
pushf
fdivrs
dec
sbbb
movsl
cs
mov
mov
adc
lds
cmp
fucomp
mov
xchg
fistl
sub
loope
in
mov
push
aam
pusha
in
sub
ret
push
cs
call
imul
xchg
into
xlat
sbb
arpl
cmp
hlt
pop
ja
dec
pop
shll
stos
call
hlt
push
stos
dec
cld
aaa
mull
lret
aad
int
enter
mov
daa
add
fiadds
xchg
jne
cmp
fidivrs
notrack
arpl
js
inc
and
xchg
inc
hlt
les
movsl
lods
aaa
es
mov
mov
shrl
inc
into
xchg
sbb
xchg
inc
inc
xchg
sub
ficoml
sahf
imul
add
je
mov
lret
jns
mov
shr
cmp
movsb
adc
cld
popa
jb
sbb
mov
mov
shrl
sub
in
lods
sub
pop
push
insl
mov
imul
dec
test
and
sahf
jne
xchg
repz
dec
fstl
lret
sahf
das
xchg
add
dec
jae
jp
push
pop
or
dec
in
or
sub
cltd
std
add
xorl
jecxz
adc
insb
mov
int3
cmpsl
scas
int
addl
dec
cld
dec
pop
daa
push
in
fisubrs
push
lea
sub
add
shrb
lods
int
push
xor
out
cmpsl
outsb
mov
push
pop
fwait
jbe
xor
and
out
into
xchg
push
mov
lea
in
xlat
loopne
repnz
add
out
xchg
mov
ret
mov
dec
push
sbb
jae
mov
sbb
mov
addb
add
mov
sbb
mov
jb
subb
pop
popa
std
cmp
xchg
popfw
push
xor
into
cmp
aam
das
push
arpl
pop
mov
xor
mov
fmuls
push
or
mov
movsb
seta
pop
cwtl
and
cmp
pop
xchg
mov
mov
idiv
out
out
xlat
mov
ret
jl
xor
clc
fucom
lods
jnp
fsubs
jns
sbb
xchg
aam
es
insb
dec
add
pushf
daa
loope
bound
dec
mov
push
push
cmpsl
rcr
xor
test
pop
adc
stc
ds
sbb
movsb
int3
mov
cld
add
int3
fists
addl
into
push
xor
gs
mov
jno
push
push
stc
repz
les
iret
ficomps
das
jne
or
in
push
xchg
arpl
sti
sub
xchg
mov
mov
jp
sbb
loope
push
cltd
out
inc
xor
pop
mov
iret
xchg
outsl
sahf
inc
cs
push
sub
aad
mov
lcallw
dec
xor
hlt
inc
stc
xor
xor
cltd
ds
pop
rcll
dec
cs
addb
cs
mov
add
jle
mov
loop
sbb
inc
xor
ds
stos
push
stos
insb
fwait
aam
adc
push
mov
popf
sbb
ds
cmp
sub
xchg
lods
cmpl
pushf
es
adc
lock
jp
or
aam
pop
mov
lret
insb
or
dec
cmp
pop
or
and
sbb
cmpsl
cmp
mov
aad
dec
cmp
xchg
xlat
adc
setno
dec
das
jl
mov
sub
and
push
push
inc
jle
repnz
mov
xchg
xor
adc
dec
cmpsb
add
out
pop
ret
in
adc
rolb
cmp
enter
pop
sarb
adc
imul
sub
les
test
xchg
js
push
repz
leave
scas
lahf
add
push
shl
sub
adc
mov
sahf
ljmp
int
sub
xchg
sbb
pop
sub
jmp
add
int3
lods
ja
push
mov
mov
mov
mov
mov
cs
out
pop
in
mov
mov
lock
push
js
mov
xor
mov
cmp
jmp
fcmovu
fadds
pop
sub
add
xchg
inc
jb
es
ss
sub
adc
dec
sbb
jge
movsl
fstps
mov
sahf
popf
popa
adc
je
aad
ret
xchg
and
sbb
xchg
imul
pop
adc
aaa
sarl
imul
push
mov
push
sub
mov
testb
and
bound
mov
sub
pop
fdivrp
xchg
mov
jb
ficompl
or
xchg
xchg
mov
xchg
pop
sbb
lret
loope
cmp
adc
ja
push
pop
mov
cmp
loopne
sub
jbe
push
pop
mov
js
cmp
sahf
movsb
xlat
xor
sbb
jae
add
movsl
xor
outsb
pop
lea
cmpsl
xchg
jne
mov
pop
mov
sti
xchg
stos
cltd
int3
hlt
mov
dec
adc
mov
icebp
mov
mov
rolb
cmp
test
mov
mov
and
fildl
dec
and
cltd
push
add
push
sbb
repnz
popa
faddp
mov
sti
ret
rcrl
xor
sub
lahf
mov
jb
and
into
cwtl
sbb
or
je
ss
jge
es
aad
lea
xlat
mov
jne
add
dec
jo
ljmp
fdivr
mov
mov
stos
or
pop
mov
mov
push
mov
clc
or
dec
cmp
mov
inc
mov
sub
adc
mov
mov
push
mov
insl
cmpsb
cmp
jbe
jle
scas
enter
iret
lods
shrl
mov
add
daa
comiss
popf
cs
sbb
cli
push
sub
cmpsl
ret
frstor
test
fcompl
xchg
subb
mov
lds
insb
xchg
shr
adc
or
dec
sbb
push
add
insl
adc
jnp
or
jmp
xchg
push
jns
push
push
movsb
add
and
jae
fs
lcall
loopne
add
inc
adcb
or
or
stos
xorb
xor
push
sub
movsl
lds
test
inc
in
out
mov
bound
push
in
shr
mov
sbb
xchg
dec
pop
scas
pop
sti
cmpsl
sub
rorb
xchg
ret
movsl
in
xchg
xchg
test
aam
add
imul
xor
sub
mov
cmp
push
cld
aaa
call
cmpl
jo
adc
ss
out
popa
sub
dec
nop
mov
scas
ficoml
movsb
dec
out
add
out
push
nop
xchg
popl
mov
outsl
daa
ja
ja
xchg
mov
loop
xchg
cwtl
insb
pop
lods
push
jle
and
push
xor
subl
out
int3
test
jle
or
sub
cmpsb
jmp
mul
mov
pop
jl
or
ret
cmpsb
mov
mov
in
dec
into
je
hlt
js
adc
ret
lock
rclb
push
rcll
imul
cmc
std
sub
pusha
clc
mov
test
jno
pop
push
xchg
pop
inc
das
sub
popa
xlat
mov
lret
mov
xor
lock
push
popa
int
nop
push
add
jb
fsin
aas
ds
add
push
dec
mov
inc
lock
icebp
sub
pusha
cmpsb
ljmp
rol
out
shrb
movsb
jb
pop
fisubs
call
ret
in
cmp
arpl
jge
pop
dec
mov
sbb
test
imul
jge
add
cmp
cmpsl
or
jo
cld
mov
xor
gs
xchg
inc
mov
pushf
inc
pushf
gs
mov
jg
insl
paddusb
pop
gs
les
mov
push
ds
mov
sub
loop
sbb
fwait
mov
dec
push
shll
scas
add
clc
or
mov
jno
scas
jne
adc
inc
in
add
sub
out
adc
push
std
bound
clc
int
cmpsl
push
fsts
das
mov
popa
jecxz
pop
or
xchg
jno
enter
xor
cltd
pop
adc
xchg
inc
lock
lahf
outsl
lcall
add
dec
cwtl
ret
stc
lcall
mov
inc
decb
in
out
subl
xchg
cs
loop
repz
pushf
test
shl
hlt
mov
push
add
cmpsb
xlat
sub
dec
mov
sbb
jbe
cmp
xchg
mov
dec
dec
test
lret
ljmp
stc
adc
mov
pop
cs
icebp
and
mov
imul
cmovnp
je
es
pop
addr16
ds
xor
jp
cmp
sbb
adc
xchg
cmp
mov
pop
mov
ds
mov
cmp
and
jle
and
adc
dec
loopne
int
push
in
mov
or
adc
aaa
mov
inc
or
ficoml
cwtl
and
add
jecxz
jno
sub
jmp
push
repnz
jbe
jnp
ret
jl
pop
adcb
pop
addr16
push
rclb
cmp
sbb
lret
lock
gs
in
test
add
inc
push
mov
mov
test
divw
mul
add
jge
fcmovu
ret
pop
imul
pop
in
iret
xchg
dec
insb
daa
leave
imul
insb
pop
rcrb
jae
nop
out
adc
cmp
int3
add
fimuls
int3
xor
push
jnp
call
xor
stc
rolb
sbb
and
push
cs
xchg
movsl
push
add
clc
das
mov
jno
mov
mov
test
sarb
and
and
push
cmp
stos
aam
popf
inc
pop
into
bound
mov
push
out
mov
dec
xchg
add
or
imul
fidivl
cmpsb
mov
cmp
pop
fbstp
clc
push
mov
repz
sti
lods
stos
jnp
cmpsb
out
lock
push
pop
pop
aas
xchg
cmp
or
xor
insb
cli
icebp
stos
mov
test
xchg
lret
dec
pop
xor
push
stos
sbb
or
sete
cmc
fidivs
sub
inc
stos
call
out
loope
icebp
enter
inc
and
pop
call
push
rcl
lods
add
iret
int3
les
into
mov
test
dec
mov
mov
push
test
adc
dec
xchg
dec
or
enter
cwtl
mov
sub
lods
mov
lds
movsl
int
ds
pusha
fsubs
cmp
push
pop
xchg
pop
mov
jae
js
movsb
and
jg
adc
mov
adc
lods
mov
or
cmpsl
adc
daa
jecxz
fwait
mov
test
ljmp
pop
rcll
mov
aam
fcmovnbe
pop
mov
popf
pop
mov
mov
add
movsb
dec
mov
jge
rcrb
xchg
pushl
lret
leave
and
sti
mov
popf
cld
in
xor
mov
ljmp
pop
dec
roll
sub
inc
cmp
dec
push
outsl
add
jmp
push
mov
mov
imul
xchg
sbb
add
out
mov
jecxz
fildl
pop
xchg
mov
push
and
cmp
mov
cmc
lea
jl
mov
insl
dec
ds
mov
fcoms
sbb
cwtl
imul
push
popf
and
out
and
roll
jae
cwtl
test
bound
xchg
lahf
mov
mov
mov
jmp
add
mov
sbb
jmp
cmpsb
test
icebp
packuswb
mov
dec
incb
cmp
lret
mov
cmc
test
push
test
mov
cmp
dec
out
rcll
push
pop
fadd
in
or
test
add
xor
fcmovnb
test
add
sbbl
push
fwait
cmp
dec
outsl
xchg
stc
xchg
dec
cli
lock
push
mov
lods
lret
add
push
mov
and
loop
push
and
rolb
insl
test
repnz
lock
or
lds
dec
xchg
cmp
sahf
or
jns
jnp
iret
fldl
and
in
repz
jns
cwtl
adc
pushf
adc
adc
pop
fs
sub
lods
or
dec
adc
mov
je
je
imul
sbb
inc
lods
push
jo
ljmp
or
sub
inc
ljmp
icebp
mov
push
dec
out
and
shl
mov
and
adc
in
cli
stos
mov
adc
xchg
xchg
out
push
out
inc
mov
xor
popf
xchg
imul
clc
in
je
dec
ljmp
ret
outsl
jbe
pop
push
mov
or
dec
enter
imul
cmp
fwait
xchg
dec
cmp
mov
fcomip
jno
lahf
sbb
pop
cs
cwtl
xor
xchg
inc
loopne
and
xchg
cli
ret
mov
leave
jne
imul
fwait
inc
mov
mov
push
ljmp
dec
jmp
insb
xor
jne
and
cmp
push
or
pusha
xor
xor
sub
push
push
addb
pop
or
es
add
stc
xchg
cld
push
pop
test
add
cmp
cmpl
jo
jl
jne
inc
adc
loope
mov
data16
sub
add
ljmp
and
jle
daa
aas
nop
sub
push
push
pushf
push
pusha
dec
sbb
jo
mov
test
imul
fbstp
imulb
cmpsb
cmc
ds
add
dec
ds
cli
int3
xor
and
sub
movsl
xor
pop
cwtl
aaa
cld
lahf
cs
mov
scas
stos
sub
loope
mov
dec
mov
mov
sbb
sub
mov
stc
xor
outsb
cmpsb
shlb
gs
xor
jns
scas
mov
mov
repz
stos
rcrl
es
dec
xor
inc
dec
gs
imul
jle
jl
insl
or
jnp
repz
into
daa
out
cmc
imul
stos
adcl
cli
pop
repnz
pop
mov
add
out
iret
scas
cmp
jnp
or
pop
rsqrtps
or
xchg
popf
fmuls
mov
fstps
push
xchg
ja
pop
popf
sub
pop
xor
cmpb
and
sub
xchg
dec
push
or
or
push
sub
mov
lret
xchg
adc
repz
dec
sarl
dec
out
aaa
mov
push
das
xor
ljmp
fimuls
xor
sbb
xchg
add
adc
mov
add
pop
rol
and
les
aad
lcall
jecxz
or
cld
add
inc
sub
je
jp
mov
xor
push
lock
aas
ss
sbb
and
std
jecxz
jg
arpl
pop
jns
lock
mov
sbb
mov
nop
jle
mov
add
ret
stos
dec
scas
movsl
shlb
and
dec
ror
and
sbb
mov
addl
pop
jmp
lret
xchg
imul
sub
mov
int
xor
scas
lods
addr16
push
push
pop
pop
push
sub
adc
fwait
pop
ljmp
xor
jae
mov
iret
ret
lret
test
cmp
cwtl
rcrl
lock
push
mov
jp
push
rol
out
sub
adc
daa
cmp
ret
sti
mov
out
popf
arpl
push
lcall
fs
lods
pop
dec
push
repnz
in
add
adc
negb
mov
mov
imulb
fwait
push
pop
xor
mov
add
shl
fcompl
jne
or
or
subl
arpl
sbb
mov
arpl
mov
sbb
lds
xchg
cmp
aad
pop
xchg
repz
ret
fwait
inc
jnp
rorl
mov
rcr
fisttpll
imul
lahf
test
add
aam
pop
xchg
inc
cmc
sti
push
jl
jo
jg
xor
test
push
leave
addr16
add
xor
pop
or
cmpsl
jno
icebp
insb
fisubl
mov
movsb
mov
jge
in
cs
push
jno
scas
jge
dec
imul
daa
bound
xlat
mov
mov
sti
mov
mov
xchg
or
daa
in
mov
add
mov
cltd
cmp
mov
push
adc
pusha
bound
fucomi
aad
sub
or
or
sbb
incl
sbb
outsb
enter
pop
cmp
or
inc
xchg
push
push
mov
cmp
pop
jbe
add
push
mov
mov
mov
push
in
es
xor
mov
mov
or
pop
push
lods
fcomps
cmpsb
imul
dec
rolb
push
cmp
inc
fwait
lock
or
aad
bound
add
xchg
push
mov
bound
test
pushf
in
jl
sti
mov
sarl
stos
xor
or
fsin
dec
xor
fcmovnu
xchg
mov
xchg
xor
dec
adc
aas
rcrb
mov
mov
cmp
adc
ss
xlat
test
jle
sahf
sbb
xchg
dec
stos
mov
xchg
pop
sbb
adc
dec
aad
movsb
mov
adc
or
ret
adcb
pop
clc
lods
popa
std
inc
repz
push
add
clc
add
js
test
pusha
jp
push
mov
fidivs
sar
stos
dec
fcmovnb
rcrb
lret
sarl
pop
xlat
into
fidivrs
xor
cwtl
idivb
dec
mov
adc
push
mov
call
jge
mov
roll
push
in
jecxz
or
ret
xlat
fs
cmp
fdiv
clc
cmpl
inc
push
pop
inc
xchg
xchg
or
jle
in
sub
mov
out
jno
or
insl
sub
jb
mov
in
dec
adc
or
leave
xchg
aad
sbb
cmp
cmpsl
pop
and
pop
pusha
mov
bound
add
rep
imul
filds
mov
push
sbb
mov
loopne
xchg
lea
sti
xor
pop
rcll
mov
pop
das
repnz
jge
ds
in
setg
xchg
jecxz
cmp
push
dec
fidivrs
stc
push
lock
dec
movsb
popa
xlat
testl
mov
xchg
lds
cmpsl
test
fstpt
movsb
mov
push
mov
int3
sbb
aaa
dec
mov
mov
mov
hlt
in
push
pop
push
dec
xor
stc
imul
sub
mov
jecxz
add
mov
data16
mov
sahf
into
sub
out
sbb
dec
cli
mov
mov
fwait
jecxz
clc
call
mov
xchg
push
push
sarb
jae
xor
cwtl
push
outsl
dec
int3
or
jl
dec
adc
ljmp
jg
push
jae
movsb
cld
fiaddl
add
fisubl
cwtl
push
jmp
add
test
mov
fnstcw
inc
out
inc
sbb
sub
cmpsl
jecxz
push
repnz
sub
aam
adc
cmp
call
jg
xlat
xadd
xor
shlw
ss
addl
jl
pop
mov
xlat
sti
mov
shll
repz
je
sub
xor
mov
jl
fimull
aas
or
ja
push
xchg
sub
cmpb
ljmp
mov
bound
ss
adc
popf
loop
and
cli
fwait
and
inc
int
mov
jne
out
mov
enter
stos
inc
mov
dec
pop
movsl
add
das
in
jns
daa
bound
les
sub
enter
out
adc
dec
inc
jecxz
adc
bound
mov
jb
fisubl
mov
outsl
popf
nop
cmc
fxch
xchg
inc
mov
add
pop
dec
or
scas
add
push
mov
dec
out
in
lds
push
loopne
inc
insl
pop
das
add
cs
js
sbb
rcll
push
pop
pop
imul
clc
and
pop
pop
mov
popa
das
shlb
dec
push
test
lret
inc
add
push
ret
xlat
int3
data16
mov
int3
test
in
mov
test
mov
push
mov
mov
lea
or
andb
loopne
mov
or
xor
add
pusha
jg
inc
xchg
ljmp
inc
mov
bound
mov
test
pushf
or
xlat
pusha
pusha
sbb
sub
mov
scas
adc
jns
sarl
int3
cmp
xchg
jecxz
mov
jl
sub
xor
jle
mov
stos
daa
mov
popa
or
lods
test
and
xor
lock
pop
dec
push
jp
in
push
cmc
and
fdivp
adc
imul
popa
sahf
scas
out
sub
sbb
subl
adc
lcall
daa
push
cli
movsl
movl
pop
inc
mov
das
int
mov
gs
xor
and
xor
sub
adc
jo
lods
pop
ds
int3
add
test
adc
add
lret
shl
sbb
imul
out
adc
pop
test
xor
pop
fcomps
popf
ja
loopne
mov
jae
mov
adc
aad
and
inc
mov
inc
imul
popf
aad
cwtl
jmp
ret
dec
jo
pop
mov
mov
and
ss
jmp
mov
mov
test
mov
sbb
pushf
push
mov
dec
inc
cmp
lret
jp
jecxz
add
roll
xor
enter
xchg
inc
and
xchg
imul
loope
ficoml
sbb
shl
jno
or
sar
test
xor
push
sub
adc
xchg
icebp
and
dec
mov
xchg
and
push
bound
in
mov
sub
stc
sbb
stc
mov
lret
jge
xchg
mov
add
sbb
outsl
push
out
arpl
jb
loopne
xorb
aaa
jo
js
inc
out
divl
sub
pop
pop
push
add
into
loopne
mov
bound
enter
and
xchg
icebp
inc
mov
mov
cmp
cmp
mov
mov
push
fs
mov
dec
adc
mov
mov
push
dec
mov
dec
fdivrs
insb
mov
data16
push
call
mov
sbbb
mov
out
pusha
imul
cmpsb
inc
or
mov
cs
adc
jg
xor
xchg
lods
push
push
in
xchg
inc
or
mul
add
sbb
dec
lcall
repnz
push
stos
hlt
aaa
mov
xchg
out
push
test
adc
mov
sbb
push
fwait
jnp
sbb
pop
mov
in
mov
inc
in
and
mov
xchg
fdivr
xchg
xchg
and
fldenv
int
sbb
insb
out
inc
cmp
in
dec
data16
pop
fistps
jg
std
pop
arpl
scas
inc
lret
jnp
into
add
mov
and
outsb
push
mov
ret
pusha
ret
add
stc
sar
inc
scas
hlt
mov
or
iret
loopne
mov
jnp
mov
inc
out
stc
xor
pop
xchg
xor
xchg
pushf
leave
add
push
jge
add
or
inc
add
pop
ss
xchg
sbb
pop
in
pop
out
popl
jb
mov
mov
aad
lock
bound
pop
pop
mov
rcll
lret
lea
push
dec
and
jg
jle
fsin
imul
btr
dec
push
js
xchg
sub
mov
es
lahf
adc
cltd
cmp
mov
push
icebp
cli
pop
push
mov
add
lds
mov
dec
rorb
shl
enter
out
and
xor
add
imul
sar
adc
jmp
bound
inc
roll
out
mov
mov
repz
push
out
test
xor
xor
pop
pop
jmp
mov
jp
mov
push
lock
cmpsl
inc
or
and
repz
sbb
hlt
cmp
or
mov
jbe
stc
fnsave
filds
cli
pop
or
enter
js
gs
jns
adcb
out
mov
xchg
stos
and
inc
int3
jge
mov
jo
inc
inc
cltd
mov
testb
pop
ss
rolb
push
cli
or
inc
mov
out
mov
xor
test
inc
xchg
mov
je
push
lret
iret
or
push
sbb
and
sbb
lods
mov
test
xor
out
jmp
ss
call
sarb
mov
mov
lret
movsl
ss
xchg
xchg
inc
xchg
pop
insl
xchg
out
inc
push
mov
insb
fnstenv
jns
adc
movsb
movsl
int3
mov
in
mov
das
cmp
push
les
pop
enter
lock
movsl
and
aad
and
xchg
pop
call
sub
sub
jo
pusha
sbb
sub
adc
sub
insl
or
lods
cmpsl
or
sub
roll
or
shrl
pop
dec
adcl
cmp
cld
leave
fcompl
xlat
aad
outsl
fsub
cmp
cmp
mov
adc
mul
sbb
adc
sbb
push
bound
test
add
pop
rorb
cmp
jbe
fdivrl
pop
cmc
gs
ret
mov
sub
mov
cmpsl
stos
shl
mov
or
cmp
sbb
pop
mov
push
inc
mov
rclb
push
in
pop
inc
add
mov
mov
push
pop
and
stos
and
out
add
mov
jmp
xchg
mov
ds
xor
jmp
sarb
nop
daa
outsb
sbb
mov
jo
stc
out
add
or
cmpsl
pop
pop
lock
movsb
movsb
fcoms
arpl
outsb
mov
xchg
ret
loopne
mov
test
mov
or
jecxz
ja
adc
xchg
aad
lea
cmp
xorb
jo
outsb
adc
add
stos
and
add
mov
lcall
and
popa
outsb
mov
mov
ret
adc
push
mov
out
in
inc
insb
ficompl
test
ljmp
push
fs
leave
fists
scas
jecxz
sub
orl
and
shlb
mov
xchg
cmp
push
mov
sbb
pop
jl
jp
dec
push
mov
imul
in
add
cmp
inc
fistpl
inc
fucomip
push
enter
push
ds
mov
push
call
xchg
add
lods
adc
lret
aam
daa
inc
xor
in
push
stc
lods
push
cwtl
aaa
lcall
and
inc
in
out
inc
gs
dec
rorl
adc
mov
daa
mov
es
dec
inc
xor
popf
cmp
insl
mov
or
inc
push
dec
in
fisttpll
cwtl
adc
and
xor
sub
adc
push
push
xchg
insb
jo
movsb
xchg
cmp
push
sub
cwtl
jno
adc
mov
cwtl
cmc
push
push
or
in
sarb
mov
pusha
jecxz
sbb
lock
push
jno
cmp
testb
lret
inc
movl
mov
dec
inc
mov
insl
mov
jae
cmp
rol
jmp
sbb
int3
cld
ljmp
mov
xor
push
jns
cwtl
xchg
and
jae
fisubl
fisttpl
push
sbb
xor
fwait
hlt
stc
sti
sti
lods
adc
aad
in
sub
lahf
xor
and
lock
xchg
xchg
or
mov
dec
sar
iret
mov
add
push
sub
mov
cmp
pop
jnp
jg
cmpsb
adc
addr16
push
ds
jle
lds
pop
xchg
fistl
lret
mov
sti
cmp
cmp
adc
jne
bound
addr16
sub
outsb
cld
inc
in
add
mov
lea
call
aas
fwait
mov
pop
ds
cs
lods
xlat
mov
ret
inc
pop
mov
aam
xor
sbb
inc
les
setle
adc
dec
and
popa
mov
xor
fs
xchg
jno
mov
std
jmp
out
icebp
mov
mov
xor
xchg
adc
mov
push
movsb
lock
fcoms
mov
je
ljmp
rclb
es
jge
addr16
pop
lds
xchg
addr16
imul
pushf
ret
dec
pop
dec
aam
call
and
sub
cld
xchg
ljmp
inc
movsl
loopne
icebp
in
in
aaa
inc
orb
fs
hlt
lret
test
adc
adc
jne
cltd
out
sbb
lret
jmp
push
jmp
jp
outsb
int3
call
insl
pop
cli
xor
jecxz
cld
pushl
pop
bound
pop
pop
jne
mov
and
mov
shlb
mov
rorb
lods
pushf
mov
or
xor
mov
jmp
add
pushf
mov
push
xchg
mov
xor
lods
insb
das
and
scas
xchg
jl
fwait
mov
enter
hlt
jg
inc
adc
iretw
inc
outsb
fnstcw
sub
xchg
out
cmp
outsb
cmc
adc
aas
sub
inc
bound
sbb
pop
and
mov
icebp
adc
mov
pop
adcb
jmp
inc
sub
cs
js
xor
xor
xchg
jge
lret
jne
ficoms
xchg
push
or
jo
rcr
dec
adc
dec
xor
pushf
lcall
inc
cltd
insb
inc
lods
mov
sub
lcall
das
jmp
cwtl
mov
ret
sub
mov
mov
xchg
mov
sbb
jo
dec
mov
mov
orb
xchg
scas
add
pop
jns
xor
subl
jb
nop
adc
jne
cmp
rorb
sub
adc
sbb
into
push
sti
in
cmp
adc
lahf
xchg
sbb
cmp
sbb
ja
mov
das
loop
movsb
addr16
jno
call
fucomp
jb
push
sbbb
cmp
test
lods
and
jl
insl
push
sub
push
pop
dec
jge
lock
sahf
mov
sbb
push
nop
call
mov
sti
inc
xchg
mov
sub
dec
test
mov
pop
dec
sbb
ljmp
push
push
jmp
lcall
pop
mov
push
pop
fidivl
ja
sbb
sub
ljmp
lods
mov
cmpsb
cmpl
stos
test
cs
test
test
cmc
jo
mov
bound
xor
mov
dec
xchg
push
lea
test
xor
xchg
inc
push
aas
scas
xor
dec
fucomi
sub
dec
pop
fwait
mov
ds
shrb
pop
notl
push
movsl
cmp
roll
fldt
add
or
add
fs
cld
shlb
aam
adc
xchg
stos
pusha
mov
and
je
testb
mov
fst
or
jno
pop
mov
enter
sbb
lods
mov
jae
bound
in
shl
mov
loop
mov
jl
lahf
lcall
bound
test
lret
pop
sub
hlt
adc
leave
stc
int
cmp
or
mov
loope
adc
mov
inc
mov
push
out
sub
xor
lods
jb
adc
sarl
fsts
sbb
xchg
xchg
imul
sahf
mov
inc
leave
daa
push
mov
mov
cwtl
cmp
fsubs
out
mov
es
pop
dec
call
aas
inc
imul
sub
punpcklbw
repz
jl
fdivl
lahf
into
jnp
or
pop
push
les
clc
notb
adc
out
popa
movsb
mov
push
stos
outsb
pop
lcall
inc
mov
sbb
bound
sbb
cli
fistl
rcrl
cmpsb
int
mov
sbb
xor
lret
mov
sub
cmp
mov
add
sub
push
icebp
add
clc
cmpsl
push
lret
shr
sub
sub
ds
adc
sub
xchg
shrl
ficoml
loope
inc
in
sbbb
mov
repz
xchg
xchg
pop
arpl
ret
pop
aaa
popf
add
scas
xchg
push
int3
dec
or
clc
sub
sub
in
mov
into
mov
sbb
dec
int3
fstpl
out
ljmp
or
mov
sub
lahf
xchg
jmp
jp
inc
sbb
mov
jnp
cmp
hlt
fdiv
sbb
pop
leave
push
test
and
mov
es
pop
push
mov
jp
adc
sbb
ljmp
std
and
mov
popw
push
loope
jge
shl
lds
push
inc
pop
dec
stc
sbb
dec
jnp
arpl
les
push
jg
jl
test
or
push
shll
inc
sbb
pop
ja
inc
mov
dec
cwtl
lods
ret
pushf
fisttpl
cltd
mov
mov
add
shll
push
cli
jmp
dec
vpperm
mov
test
cmp
push
xor
cmp
xor
pushf
mov
mov
stos
sbb
push
xor
fwait
sbb
xchg
mov
or
ficoms
adc
lds
xor
xor
mov
shrl
in
std
pop
lcall
sbb
ja
xor
mov
ret
mov
mov
aam
insl
fnstsw
idivl
inc
stos
dec
push
or
pop
jb
cmp
inc
stc
xchg
out
ss
aas
sbb
push
bswap
push
inc
cmp
clc
dec
lock
cmp
fistps
pushf
lcall
adc
call
in
cmpsl
out
out
mov
dec
in
adc
dec
sahf
pop
cltd
inc
ss
popa
mov
cwtl
add
xchg
pop
pusha
jns
in
mov
cmp
dec
mov
popf
cmp
test
inc
add
adc
subl
cwtl
add
lock
fsubp
mov
push
iret
into
adc
sub
cmp
cmp
sub
inc
jne
fucom
cld
cli
and
xchg
testl
mov
add
cltd
push
repz
jne
and
roll
add
sti
pop
sbb
cltd
in
cmpsb
testb
jb
pop
sub
jne
add
push
sbb
addb
push
lret
jmp
fdivs
aaa
mov
jo
xchg
ljmp
xor
ret
lea
iret
xor
add
aad
lea
in
mov
inc
loopne
sbb
dec
ficompl
ljmp
add
lea
outsb
out
dec
pop
push
mov
mov
pop
lods
mulb
mov
adc
jno
ror
les
out
je
xor
mov
jne
repnz
ds
int3
dec
dec
xor
out
repz
outsb
or
inc
aaa
aad
and
push
inc
inc
mov
js
in
gs
mov
push
sub
cld
mov
leave
hlt
sbb
into
xor
imul
or
imul
pop
sbb
lahf
xchg
sbb
mov
dec
loopne
lahf
aam
push
shll
daa
mov
dec
push
pop
das
addr16
adc
ret
sub
jmp
bound
rorb
push
and
stos
call
inc
inc
push
rclb
dec
decl
mov
inc
int
movsl
stc
mov
xlat
insb
mov
jmp
mov
and
or
out
out
aam
cmp
push
xor
jnp
add
push
addr16
mov
in
cmpsb
mov
enter
sub
sbb
mov
push
adc
aas
aad
xrelease
push
adc
pop
test
sub
into
out
lods
sbb
lret
xchg
lahf
add
jl
lods
sbb
lock
lcall
ss
xor
cli
ja
bound
lcall
cmp
and
pushf
push
sub
fmul
sbb
pusha
dec
cmp
inc
sub
ret
add
xor
in
dec
lods
and
push
sbb
cmp
lahf
adc
fnop
dec
mov
dec
imul
xchg
fistpl
incl
jl
lods
cmpsb
and
dec
push
fldenv
pushf
fidivrl
or
imul
and
repz
add
loop
movsb
decl
sub
addr16
ja
std
pop
scas
xor
clc
push
sbb
xlat
stc
inc
nop
sub
pop
mov
test
add
aad
inc
pop
pop
mov
cli
sahf
aaa
test
mov
out
push
jle
mov
mov
or
push
sbb
jns
push
fwait
sbb
ror
pushf
cmpsl
jmp
push
cmp
and
sbb
pop
jo
mov
test
or
test
sti
or
mov
mov
sbb
push
std
enter
jl
mov
pop
test
test
sbb
mov
sub
mov
repnz
stc
adc
movsb
movaps
fs
aaa
push
popa
push
mov
push
iret
or
add
das
in
mov
js
inc
out
in
or
sahf
adc
fwait
and
popf
loope
xor
mov
jb
testb
mov
scas
mov
pop
sub
push
adc
sub
adc
pop
sbb
aam
movsb
cmpsl
and
add
sub
cld
mov
inc
fcoml
fistps
icebp
inc
pusha
fldcw
mov
mov
fistpl
xchg
lret
or
cmpl
cwtl
or
xchg
jns
push
imulb
push
out
icebp
xor
insl
cli
sub
cli
push
bound
lea
shll
pop
jle
stos
das
stos
and
pop
dec
pusha
xchg
std
in
mov
sub
es
sub
insl
push
dec
stos
icebp
faddl
mov
int
xchg
mov
jns
cmpsl
mov
int3
jb
pop
cmp
lea
hlt
ret
inc
int3
inc
xor
sbb
cmpsb
pop
dec
cmp
cld
or
fisubl
mov
in
pop
xchg
push
adc
xor
outsl
cs
sbb
and
sbb
jnp
in
ret
add
lock
and
mov
scas
test
outsl
shrb
or
or
dec
push
cwtl
jg
mov
jns
std
movsb
mov
and
adc
pop
les
int3
enter
dec
out
std
ret
clc
in
shr
mov
frstor
faddl
mov
ja
movsb
mov
setne
out
mov
sbb
in
fs
push
outsb
rcr
mov
pop
push
add
imul
loope
jmp
mov
mov
add
xor
dec
mov
nop
or
cmp
mov
js
imul
push
add
add
lahf
mulb
sub
xlat
cmp
adc
sub
mov
sub
mov
ja
addb
aam
jo
test
mov
cltd
lods
xor
scas
test
adc
cmpl
mov
insl
cmc
dec
and
push
xor
push
test
movsl
in
mov
inc
mov
inc
mov
les
push
cmp
pop
lods
dec
jo
or
xchg
andl
add
sbb
popf
scas
lods
jp
cmp
xchg
sub
sbb
lock
js
lods
cmpsb
cmpsb
ret
scas
ficomps
push
mov
mov
test
add
popf
or
out
jecxz
ror
cs
lods
xchg
fsub
pop
xor
mov
daa
fstl
popf
fucom
test
loop
cwtl
ret
dec
xchg
insl
adc
inc
push
stos
ret
insb
movsb
loopne
in
cmp
mov
jbe
dec
dec
mov
lods
arpl
out
adc
mov
adc
mov
adc
leave
and
daa
add
paddd
negb
arpl
repz
sub
mov
lods
pop
out
mov
or
aas
notl
decl
sbb
mov
mov
js
mov
dec
aas
addr16
pop
dec
lret
mov
stc
inc
jmp
xor
aas
lds
jae
popa
and
into
ja,pn
js
sub
mov
or
lods
xchg
pop
push
sahf
rclb
bound
cmc
mov
test
push
into
cmp
push
mov
pop
pop
addr16
mov
shlb
dec
sti
es
js
out
sbb
mov
lret
lods
fldt
and
inc
cmp
addr16
cwtl
clc
test
call
outsl
mov
pop
sahf
and
fwait
inc
les
pop
shl
mov
push
sahf
dec
mov
xor
imul
lret
icebp
cld
data16
dec
push
outsl
lret
pop
je
lods
push
add
push
in
pop
lcall
rclb
adc
xchg
add
loopne
sub
mov
data16
xor
xchg
shl
fisttpl
mov
xchg
les
sub
aaa
xchg
sbb
mov
sbb
lods
xchg
and
push
pop
outsb
and
addr16
push
cmp
and
pop
imul
jl
icebp
stos
iret
adc
lea
or
sub
mov
enter
push
push
push
jmp
testb
adc
push
repz
xchg
gs
test
into
in
xor
aas
mov
sbb
fnstsw
push
pop
inc
pushf
out
sub
insb
insl
cmovs
inc
movsl
dec
mov
ret
jne
inc
out
xlat
or
jns
add
xchg
add
pushf
es
mov
hlt
scas
inc
ret
sub
pop
ljmp
dec
mov
mov
xor
nop
jne
mov
pop
dec
xor
and
insb
cmp
mov
mov
pop
cltd
mov
mov
pop
cld
stos
push
gs
pushf
and
fists
arpl
push
cwtl
xchg
repz
sahf
mov
pushf
cld
mov
outsl
shlb
jnp
test
xchg
jbe
stos
jnp
push
sub
and
call
jo
addr16
sub
leave
imul
stos
lret
insl
das
andb
je
sbb
jns
lock
scas
imul
stos
cmp
movl
cmp
and
cmpsb
pop
inc
add
addl
dec
xor
and
push
dec
jp
push
pop
pop
push
test
movsb
xchg
movsb
push
sbb
adcb
pop
cmp
mov
lds
pushf
adc
data16
sbbb
shrl
pusha
clc
stc
lret
int3
adc
data16
or
push
cs
mov
jmp
in
add
push
mov
mov
dec
push
decb
mov
or
data16
dec
test
pop
sahf
sbb
dec
rep
mov
and
in
mov
cmp
fdivrp
jbe
and
stos
cmp
lock
xchg
jnp
push
outsl
and
out
jbe
push
or
inc
outsb
dec
sbb
mov
jns
pop
xchg
mov
lret
push
data16
dec
and
fidivrl
sub
test
daa
das
shr
cmc
pushf
popa
mov
les
cmove
add
push
push
xchg
lds
add
mov
jns
push
mov
pop
push
jg
sub
xlat
pop
add
cmpsb
fidivrs
stos
testl
jle
lcall
cmp
inc
push
mov
xchg
or
cmp
incb
lods
mov
sub
shll
shrl
xor
mov
jns
daa
imul
add
jne
dec
fisubs
scas
mov
or
add
adc
lret
mov
outsb
sarb
test
cmpl
cmc
sarl
rcll
into
dec
fcoml
loope
mov
fnstenv
shr
repnz
pop
es
sahf
jnp
rorb
mov
lret
subl
es
divb
add
test
xchg
loop
shlb
inc
cmp
mov
push
pop
xor
jmp
jne
loop
add
mov
ja
push
inc
iret
popf
outsl
loopne
gs
pushf
pop
les
add
push
std
int3
push
cmp
ds
and
lods
mov
int
mov
xchg
in
add
mulb
xchg
cmp
or
scas
shrb
arpl
push
subw
loopne
jns
push
push
push
lock
std
sahf
in
lcall
lret
fwait
mov
das
xchg
mov
add
nop
cwtd
js
outsb
inc
lret
out
push
mov
fistpll
rcrb
mov
push
fwait
gs
outsb
push
add
jne
lea
cmp
jle
dec
sbb
rcrb
aaa
ret
rorb
loopne
jno
pop
and
into
cmovp
mov
shrl
add
cmp
push
mov
sub
push
adc
sbb
jge
dec
xchg
push
repz
jo
xor
dec
add
dec
loope
out
sahf
sbb
lods
adc
fdivrp
gs
xchg
jmp
imul
push
add
negl
out
xchg
test
repz
push
fnstsw
pop
addl
ficompl
mov
cld
or
cli
and
mov
sub
push
sub
sub
push
xchg
push
xlat
pusha
sub
xchg
inc
xchg
dec
push
mov
push
pusha
xchg
adc
test
jae
stos
aaa
out
inc
sub
sti
push
cmpsl
mov
push
sbb
push
jle
mov
clc
dec
sbb
ret
imul
xorb
ss
inc
ds
rolb
sub
mov
jg
cmp
fs
clc
faddl
xchg
cld
jl
add
movsb
stc
shlb
jg
in
lret
lcall
clc
subb
xchg
or
or
icebp
sub
daa
cli
out
mov
dec
adcl
mov
push
jne
xchg
inc
push
mov
in
flds
push
jle
imul
movsb
subl
std
fcoml
popf
xchg
in
dec
repnz
stc
sarl
pop
dec
inc
enter
xchg
cmp
adc
adc
cmc
push
jne
jmp
popa
inc
and
cltd
mov
xchg
push
in
sub
popa
pop
push
adc
mov
popa
dec
jmp
sahf
mov
aad
adc
mov
adc
test
mov
sub
jb
dec
push
scas
out
dec
lcall
adc
cs
ss
stc
cli
jae
inc
movsl
xor
jle
pop
outsb
sbb
xor
mov
das
mov
and
mov
das
push
xor
pop
mov
fsubs
fs
subl
mov
or
shlb
fwait
pop
cli
and
jbe
hlt
scas
aaa
jp
jne
out
ret
or
fistpll
jno
scas
sarl
stos
outsl
adc
dec
jb
jns
cmp
xchg
fistpl
mov
mov
lods
xor
add
sti
add
cwtl
aam
adc
in
mov
adc
negb
or
das
jns
mov
cs
cmp
hlt
ret
push
mov
subb
aaa
cs
push
in
fwait
dec
xchg
enter
mov
rcll
jge
clc
icebp
cvtps2pd
inc
das
mov
insb
sar
repnz
je
jnp
jns
push
pushf
or
out
inc
sarl
adc
mov
inc
jg
clc
push
je
push
mov
mov
push
jg
inc
xor
mov
roll
mov
xchg
inc
dec
jecxz
dec
sub
inc
or
mov
popa
inc
shrb
pminub
sub
aam
dec
fstl
cmp
xor
xchg
insl
loopne
xchg
sub
xor
sbb
outsl
sti
outsb
stos
inc
inc
mov
cmp
jp
mov
arpl
mov
cmc
add
xchg
cmp
lock
fsubrp
adc
arpl
pop
adc
enter
cmc
scas
jns
dec
inc
nop
xor
mov
xor
lret
or
loop
loop
push
aas
xchg
cmc
aad
test
xchg
mov
pop
imul
xor
aaa
mov
repz
jg
push
mov
sbb
iret
rorl
jl
fdivrs
mov
andl
jns
insl
fldpi
add
in
repz
repz
adc
jnp
movsl
mov
pop
mov
dec
cmp
mov
jmp
ljmp
or
and
rcl
outsb
sbb
mov
test
mov
push
call
xchg
jg
fsubl
or
bound
add
mov
loop
bound
sbb
xor
popa
mov
daa
lock
mov
loope
movsl
mov
xor
mov
mov
scas
or
fs
mov
inc
ficomps
xor
idiv
repnz
out
ficoms
jg
fwait
les
adc
inc
push
jae
and
sbb
movsb
inc
pop
les
sub
cmp
mov
xchg
push
cli
mov
lret
cld
mov
out
dec
sbb
dec
xchg
lods
sub
xor
mov
dec
push
insb
mov
and
and
add
jecxz
mov
adc
or
mov
mov
dec
xchg
or
rorl
xor
test
aas
jns
mov
aas
jo
js
push
cmpxchg8b
scas
jg
ja
xchg
add
inc
test
sub
mov
or
adc
imul
pop
stos
popa
mov
or
add
inc
mov
lods
cmpsl
mov
jo
xor
xchg
sub
mov
mov
daa
dec
dec
add
sbb
or
outsl
push
call
sub
out
bound
xchg
adc
ret
in
sub
ficoml
or
fstl
cmp
or
mov
push
sbb
jecxz
pop
stc
pop
outsb
mov
clc
cmp
cmp
je
or
xchg
mov
lea
sbb
sub
fstpl
inc
add
pop
mov
pop
pop
sub
imul
shll
xchg
sahf
into
jae
fistps
fs
cmp
mov
or
mov
dec
ret
and
cld
movsb
or
cmp
mov
icebp
repz
fsubrs
mov
and
dec
jl
popf
sahf
push
or
hlt
xor
or
adc
iret
jl
orl
ljmp
shrb
test
mov
cmpsl
aad
pop
je
cmp
xchg
imul
mov
adc
xor
pop
sub
pop
jle
clc
leave
sub
mov
loop
ret
cli
push
bound
dec
fs
ret
loopne
add
js
out
pop
inc
dec
outsl
aas
popa
cs
into
push
lcall
mov
or
enter
lahf
mov
lds
iret
cmp
out
loop
dec
rolb
fstps
pop
cs
cli
popa
fisubl
cmp
mov
push
dec
add
mov
dec
inc
fisubrl
daa
aas
aam
ljmp
loope
jmp
subl
sti
pop
mov
mov
adc
push
lods
mov
inc
loop
adc
sbb
xor
in
repnz
mov
test
xor
inc
push
jb
icebp
sub
or
mov
fnstenv
hlt
stc
je
test
add
dec
ret
jmp
cltd
mov
imul
ljmp
test
in
cs
test
cmpsl
fistps
jae
mov
aas
test
dec
xorl
rcrl
ds
adc
rclb
sbb
mov
mov
adc
jmp
cwtl
and
test
add
scas
cli
out
mov
lock
insl
cwtl
add
sub
movzwl
inc
sbb
push
sub
and
push
lods
jl
mov
loope
rorb
jge
xlat
xor
mov
mov
inc
lock
fidivs
fdivrl
es
in
cli
mov
popf
lock
mov
int3
cld
mov
arpl
daa
and
xchg
or
int
jl
or
shr
outsl
xor
ret
inc
imull
push
xchg
xor
or
pop
sti
gs
clc
lea
cld
mov
loop
sub
fists
and
sbb
fstps
sbb
push
push
in
xchg
or
fwait
cmp
pop
push
inc
pop
sub
enter
in
outsb
hlt
mov
dec
and
sete
or
and
dec
jb
rclb
les
fdivr
mov
jp
pop
negb
jmp
xor
dec
popf
repz
sbb
inc
jmp
mov
pop
adcb
dec
or
pop
outsl
repz
sahf
dec
lds
jmp
cmp
fistps
outsl
inc
dec
dec
nop
dec
sub
mov
inc
int
jp
or
movsl
arpl
aas
ficoml
shlb
jnp
and
inc
xor
inc
xor
and
cltd
xchg
and
mov
out
in
mov
std
dec
dec
lret
stc
push
inc
mov
mov
inc
jl
pop
arpl
xor
ds
pop
outsb
cmp
es
push
or
pop
jnp
dec
add
cmp
fisttps
dec
fstpt
push
lds
and
jp
hlt
jmp
mov
pop
clc
inc
push
sub
mov
inc
mov
cmpl
sub
inc
testl
jge
mov
enter
adc
leave
xchg
inc
or
int
xchg
ss
loopne
cmp
loopne
daa
sti
daa
inc
lods
dec
fwait
rcr
add
movsl
lcall
mov
cmp
jo
adc
data16
rcll
cmpsb
out
xchg
xor
rcl
push
and
pusha
movsl
inc
and
dec
adcl
mov
mov
scas
adc
mov
rorl
and
inc
pusha
insb
dec
bound
cli
or
sub
xorb
xor
shl
sbb
mov
outsb
das
popf
test
mov
cmp
stc
cmc
adc
pop
and
aad
test
test
push
push
pushf
pop
cmp
xlat
xor
bound
stos
cltd
imul
les
add
cmc
loop
adc
int
cmc
jl
push
cmp
mov
call
push
sub
sbb
mov
mov
out
jb
orl
push
cmc
das
pop
lcall
push
sbb
jnp
mov
adc
jne
jns
cmc
inc
xchg
mov
testb
subl
mov
push
inc
lea
test
or
mov
les
aaa
mov
mov
xor
cli
jnp
mov
loopne
push
xlat
mov
scas
add
mov
sahf
sub
jae
mov
xchg
cmp
rclb
dec
xchg
test
insl
in
add
pushf
mov
inc
push
movb
jne
and
rol
inc
adc
or
fwait
xchg
scas
push
repnz
sub
mov
repnz
out
sbb
mov
out
or
aas
jle
jl
sbb
dec
cmp
adc
adc
or
add
pop
ret
ljmp
jl
in
fucomi
shr
dec
maxps
pop
dec
sbb
cmpsl
mov
gs
pushf
pushf
inc
adc
fsubl
inc
pop
mul
int
dec
popfw
dec
clc
outsl
push
into
sub
dec
mov
lret
pop
nop
xor
in
test
xchg
nop
mov
fucom
sbb
sar
out
ja
pusha
push
fnstsw
ds
cmpsb
jp
aad
cmpsb
sub
sbb
add
pop
xchg
fwait
xchg
cld
jo
jne
mov
das
add
rcll
mov
cmpsb
and
dec
inc
ja
xchg
rcrb
outsl
mov
push
test
jnp
or
sbb
sbb
jne
fdivp
outsb
add
insl
cli
aas
pop
in
fstps
add
and
cmc
lds
fwait
mov
std
sarl
std
out
mov
jmp
sti
push
daa
mov
mov
mov
cmpsb
cmc
sti
cmpsb
jno
adc
push
std
fisubs
lods
jns
lret
gs
jo
lcall
jg
sbb
xchg
xor
push
fs
ret
je
xor
mov
shrl
inc
pop
fwait
clc
and
es
or
jae
dec
jmp
inc
inc
std
and
aam
mov
mov
std
sahf
mov
push
outsb
into
stos
sub
adc
test
lret
lock
xchg
add
xchg
cmpb
in
xchg
xchg
add
aad
pop
cltd
stc
cli
xchg
push
lea
ljmp
mov
addl
loope
push
xchg
sub
xor
in
fincstp
rcrl
mov
ja
aas
pop
cs
cmp
mov
pop
inc
jae
sub
mov
push
jmp
movsb
nop
dec
movsb
ljmp
subl
bound
cs
push
push
daa
add
xchg
loope
xor
insl
mov
test
push
call
xchg
int3
js
pop
in
rolb
or
cmp
sbb
arpl
fdivl
int3
test
ja
scas
xchg
sub
insl
out
mov
leave
shlb
adc
inc
jle
pop
insl
xlat
fs
lds
push
nop
cmpsl
and
push
xchg
or
mov
popa
push
ja
les
xor
adc
jbe
push
push
lds
popa
popa
fs
mov
hlt
sbb
jno
push
or
lods
adc
cmp
jo
cmp
hlt
push
add
lods
test
in
sbb
loop
ds
outsl
outsl
mov
fwait
xor
sub
jnp
dec
lock
andl
repz
push
jp
call
ret
cwtl
iret
and
cs
out
ss
repnz
inc
sbb
clc
push
jecxz
faddp
add
add
adc
inc
mov
or
mov
mov
mov
sbb
and
dec
xor
xor
or
mov
into
pop
movsl
xlat
into
popa
outsb
xor
mov
mov
mov
fnstcw
rorb
test
or
sbb
jmp
sarb
insl
xor
test
jmp
pop
movsl
cmp
xchg
lds
call
aam
in
in
addr16
aas
and
jo
repnz
mov
ret
mov
in
gs
roll
loopne
enter
pop
fstpl
and
mov
push
movsl
int
cmp
dec
adc
sbb
xchg
mov
lea
pop
xchg
mov
int
sbb
sbb
stc
adc
repz
incb
fs
mov
inc
lea
xchg
hlt
test
int3
jge
mov
add
rorl
dec
xchg
lods
ret
dec
dec
pusha
xor
pop
fidivrs
pushf
test
shlb
insl
frstor
push
inc
pop
push
xchg
test
imul
sub
stos
xor
cmc
out
shl
and
fmuls
mov
cltd
add
into
cltd
and
push
out
mov
mov
mov
xlat
test
lcall
lret
es
test
jne
xor
mov
dec
arpl
loope
sub
insb
xchg
nop
cltd
sbb
ret
iret
pop
and
into
mov
and
jb
or
cltd
mov
addr16
into
inc
xchg
cmpsb
cs
ljmp
dec
test
inc
dec
out
pop
in
push
outsl
js
sub
aad
shlb
clc
jae
ret
loopne
xchg
into
sub
jge
fiaddl
and
ds
push
out
or
jmp
mov
push
xchg
mov
cs
jmp
stos
out
shrl
jg
jo
or
mov
ficompl
cli
popf
stos
movsl
stos
inc
xlat
js
fildll
cwtl
jb
cmpsl
jmp
adc
jl
mov
cld
nop
jg
test
ja
push
aas
add
stc
xchg
out
and
or
xor
test
andl
jae
aad
popf
bound
sbb
push
stos
mov
das
mov
sbb
popf
leave
nop
in
lret
pop
xor
jne
jno
rorl
orl
sub
sub
push
pop
cmp
inc
int3
add
lods
xchg
cld
xor
jns
mov
int
dec
leave
adc
sbb
es
jnp
clc
add
xchg
jg
lods
shll
shlb
push
pop
arpl
dec
pop
jb
outsl
icebp
vshufps
adc
inc
inc
jle
scas
clc
fistps
add
adc
xor
or
add
inc
mov
inc
mov
mov
out
cmpsl
lds
push
xor
dec
stos
or
ret
cwtl
pop
dec
xchg
xchg
cmp
add
call
cmp
push
xor
push
ret
add
movsl
or
lods
movsl
add
or
into
dec
decb
jno
repnz
pop
fdivl
dec
and
inc
call
jg
mov
xchg
xchg
sub
push
mov
out
jo
les
adc
dec
lods
mov
mov
push
add
sub
in
jnp
pop
xchg
out
shl
cmp
imul
pop
outsb
cmp
sbb
mov
cld
hlt
mov
cmp
cmpsl
push
nop
into
sbb
pop
and
das
in
sbb
mov
mov
adc
popa
sbb
add
fwait
nop
mov
pop
mov
in
push
loop
mov
xchg
mov
fistpl
adc
fiadds
xchg
incl
sbb
mov
adc
add
pop
mov
mov
lea
stos
add
shl
mov
in
in
or
jne
dec
scas
mulb
dec
mov
xchg
xchg
sbb
daa
xchg
inc
and
ficoml
cmp
adc
cmpsl
jne
popw
xchg
fucomp
test
mov
add
rcll
adc
add
and
notl
pop
test
insb
mov
xchg
fldcw
push
scas
jp
rcll
xor
mov
push
jno
stc
inc
push
and
lock
ss
mov
push
in
sub
outsb
aas
lcall
mov
jb
clc
jg
dec
rcrl
das
jl
js
mov
sbb
loopnew
cltd
pushf
inc
jae
or
cli
xchg
cltd
outsb
inc
dec
add
daa
inc
mov
dec
rol
add
fldt
cs
les
jae
pushf
or
sbb
dec
cmpl
pop
adc
or
xor
aas
mov
add
les
cld
ss
xchg
cmp
xchg
loopne
das
jg
inc
insl
sahf
mov
cmpsb
popf
gs
in
leave
out
sub
repz
adcb
cmp
adc
test
fxch
xchg
adc
push
adc
cwtl
xchg
mov
mov
jle
push
jbe
push
dec
out
fs
push
mov
out
es
gs
jmp
cltd
sub
cli
and
push
sub
pop
imul
jns
repz
enter
fwait
xorb
pushw
pushf
in
mov
jl
inc
lds
dec
cmp
mov
pop
subb
or
dec
js
sbb
xor
inc
loop
add
cld
xor
lods
imul
mov
cmp
mov
xchg
in
pop
sbb
pop
mov
jns
in
push
lea
push
les
mov
and
xor
adc
mov
dec
jbe
push
and
mov
scas
sti
ds
into
adc
or
pop
aad
cmp
std
push
ljmp
cmp
in
sarb
xor
nopl
xor
sub
jmp
cmp
add
mov
fcomps
sbb
xor
cwtl
mov
gs
jle
dec
mov
xchg
dec
inc
jns
movsb
dec
addl
imul
ljmp
test
in
test
add
push
call
jmp
mov
or
rcrb
push
mov
fdivl
xchg
xchg
adcl
mov
dec
cmpsb
cmp
ret
jmp
inc
ja
lret
xchg
ror
jb
lret
outsb
outsl
inc
add
cmpb
or
push
inc
filds
loopw,pn
sub
push
in
mov
arpl
enter
mov
out
ds
insb
inc
rcr
cmc
pop
or
mov
mov
jnp
ret
sarl
or
call
fists
xor
sbb
lds
mov
mov
sti
adc
jl
es
pop
jo
test
push
mov
fidivs
mov
mov
movsb
inc
and
and
inc
adc
loopne
pop
lea
loope
shlb
dec
test
ljmp
ds
lods
aas
in
cmp
xchg
cmpsb
cmpsl
cmp
or
mov
and
stos
enter
and
in
push
mov
outsb
repnz
xor
jecxz
push
jns
andb
push
cmp
inc
cmp
aam
sar
push
xor
leave
xor
mov
pop
mov
xchg
jne
dec
sarb
push
inc
imul
jmp
out
and
shl
test
inc
push
mov
and
jmp
and
add
loope
pop
inc
sbbl
xchg
imul
int
rcr
inc
xchg
mov
mov
popa
mov
pushl
daa
sti
sti
and
mov
imul
insl
pop
dec
loopne
push
imul
mov
fwait
popa
js
mov
lods
sti
cmpsb
inc
xor
movsb
fidivs
out
cmp
popa
mov
popa
arpl
je
mov
mov
insl
jmp
cltd
cltd
add
xchg
mov
mov
lahf
lcall
cmp
pop
sbb
pop
cli
lock
sbb
in
add
rcrb
dec
cmp
inc
insb
mov
sub
mov
mov
int3
jmp
in
add
fwait
add
dec
push
subl
or
movsl
cmpsl
in
outsl
iret
cli
dec
sub
pop
sbb
lcall
repnz
xchg
dec
push
mov
stos
mov
add
repz
leave
aad
sbb
mov
stc
fidivrl
pop
movb
call
adc
stos
iret
js
jb
cmc
fimuls
int
in
inc
fstpl
fcoms
fadds
jge
inc
cs
mov
int3
xor
xchg
aas
pop
push
xlat
xchg
outsl
xorl
dec
jge
nop
jno
in
into
jbe
mov
sub
bound
rcrb
push
or
neg
bound
cmpsl
mov
or
jmp
xor
notb
and
in
lock
pushf
test
jns
movsb
push
pop
mov
pusha
jae
pop
push
in
xchg
rorl
push
mov
pop
repz
xchg
loopne
stos
imul
push
xor
lahf
loop
je
cmp
test
mov
mov
mov
sbb
mov
sbb
jp
push
jmp
mov
jno
out
iret
or
outsb
xor
lea
dec
insb
add
leave
push
xchg
cmpsb
fwait
inc
jns
inc
mov
xor
adc
ljmp
inc
jns
sbb
out
fmul
inc
lahf
inc
hlt
gs
or
add
xchg
lea
mov
xchg
jp
std
scas
scas
mov
mov
aaa
cmpsl
xchg
and
dec
test
jmp
sbb
mov
rorb
jge
gs
mov
aas
pop
xor
lahf
pop
stos
add
mov
push
inc
mov
loop
call
imul
mov
xor
ljmp
pop
mov
ljmp
bsf
out
jbe
add
cmp
mov
lock
jo
sbb
clc
imul
fsubs
out
sbb
jmp
sbb
dec
and
lds
stos
mov
dec
jg
push
fistps
pop
loop
hlt
push
lock
add
sarb
push
and
mov
pop
pop
nop
scas
sub
jbe
faddl
iret
mov
sbb
push
test
cmp
fidivrl
int
jo
les
in
jmp
push
push
test
jg
fsubrp
dec
add
and
inc
dec
pop
jl
fwait
cli
xchg
popf
fsubl
add
inc
fdivrl
dec
sahf
je
out
push
push
inc
neg
dec
xor
sub
pavgb
fwait
cmp
push
gs
aas
pop
sti
push
mov
jmp
dec
repz
fcmovu
xor
push
hlt
loop
lea
xor
in
xor
sti
cmp
in
ja
push
mov
pop
and
cmp
or
scas
xlat
divb
sbbb
lret
lahf
inc
pop
xlat
add
mov
mov
mov
mov
lds
shll
fisttps
jl
pop
mov
cmp
sbb
cmp
or
mov
xor
cmpb
sub
dec
push
push
jge
outsb
mov
ficomps
and
pop
or
sub
jle
roll
sbb
and
push
std
jl
out
sti
adc
adc
push
movsl
jl
outsb
xor
movsb
sub
add
xchg
cmpsl
and
test
loop
insl
popf
movsb
decl
xchg
hlt
js
sub
cwtl
push
gs
scas
enter
jge
cmpsb
push
loope
mov
push
cmpsb
sub
shrl
sbb
out
or
sbb
pop
rcll
sbb
idivb
das
adc
mov
lret
pop
jb
ret
daa
rcrb
pop
xchg
adc
cmpsl
pop
inc
cmp
nop
cmp
stos
sysenter
lods
negl
adc
fwait
inc
imul
jbe
mov
or
cs
pop
shl
std
leave
inc
outsl
mov
fisttpll
and
adc
lret
shll
add
inc
xchg
fwait
pop
add
repnz
fdivr
mov
hlt
push
filds
dec
jno
or
popf
js
inc
add
mov
push
xchg
add
outsl
sub
pushf
jb
mov
popf
mov
push
push
mov
xor
mov
xchg
daa
roll
bound
fistpll
adc
xchg
sbb
mov
push
lret
pop
adc
mov
js
xchg
mov
test
add
jmp
add
arpl
cmpsl
sbbb
test
cmc
jae
hlt
jge
adc
cmp
fstpt
adc
hlt
xchg
dec
pusha
or
mov
lret
pop
inc
mov
adc
cld
push
jge
enter
push
ljmp
mov
lods
or
int
stc
cli
in
notb
dec
cli
out
jp
xorl
fsubs
adc
stos
push
notl
cmp
or
stos
add
ss
sbb
and
lock
and
adc
mov
xchg
scas
mov
repz
sbb
movsb
fmuls
jle
push
into
std
xchg
faddl
sbbb
sti
xchg
pop
sub
xchg
inc
mov
sub
xchg
jmp
es
lods
addb
jo
pop
sub
popa
out
mov
inc
insb
fidivl
pop
das
and
sbb
adc
in
loop
push
fadds
scas
mov
les
lds
push
inc
push
mov
mov
sub
pop
lcall
nop
gs
hlt
clc
jbe
test
sub
xor
es
shll
fwait
add
dec
inc
sarb
iret
pop
dec
xor
notb
iret
ficoml
push
mov
test
aas
mov
add
subl
sub
popa
or
mov
dec
gs
pop
inc
inc
aaa
push
sub
dec
pop
ds
repnz
xchg
int
ja
shll
loop
dec
clc
jne
inc
shrb
fadds
inc
mov
push
scas
jo
push
push
xlat
dec
loopne
icebp
sub
out
call
testl
inc
lods
mov
shll
cli
jl
enter
aas
sbb
pop
out
ret
scas
push
jg
or
jb
fsubrl
sbb
addb
xor
dec
dec
mov
fs
push
loop
mov
xchg
mov
pop
pop
icebp
cmpsl
jno
and
aas
aad
cmp
insb
inc
adc
icebp
dec
xchg
inc
test
loope
les
cmp
xchg
mov
pusha
insb
jno
test
sbb
mov
movsl
int3
pop
push
out
sti
int3
andb
mov
decb
test
mov
aas
icebp
lods
movsb
fmull
jmp
daa
lahf
pop
aaa
xor
leave
call
xchg
xlat
hlt
cmpsb
loop
lcall
addr16
std
mov
fidivrs
mov
jns
incl
aas
add
xlat
xchg
pop
jnp
mov
jmp
sahf
sarl
pop
fucomip
cmpl
cli
xchg
push
scas
hlt
and
daa
inc
ficomps
cwtl
and
call
dec
cmp
jno
in
mov
pushl
jae
xchg
imul
stos
lods
mov
mov
scas
sahf
cmp
movsb
jbe
ljmp
dec
mov
adc
mov
mov
pop
push
test
sub
and
pop
mov
ja
sbb
cmpsl
insl
loope
pop
subps
ljmp
fistps
clc
adc
xor
xchg
push
testb
fldlg2
mov
rorl
and
arpl
mov
mov
outsl
xchg
xor
movsl
jmp
dec
mov
call
inc
daa
jl
test
cli
adc
add
in
inc
dec
lcall
sub
jae
cwtl
adc
lods
jp
mov
in
pop
std
aas
mov
jmp
push
dec
sbb
sub
in
ja
into
add
push
xor
mov
lret
push
shll
in
bound
movsl
xor
jne
mov
xchg
cld
mov
int
orb
std
dec
pop
mov
icebp
xor
test
jne
mov
nop
and
lods
test
int3
into
rsqrtps
jb
xchg
iret
stc
insb
ds
in
lret
mov
imul
shll
loopne
rorb
test
call
add
xor
jo
xor
push
mov
sub
scas
popa
push
cmp
out
arpl
sbb
mov
jge
cmp
adc
out
inc
inc
js
les
mov
fstpt
iret
sbb
fcomip
pop
jb
mov
cmp
xchg
push
imul
jp
cmpsl
arpl
test
jno
shll
inc
mov
xor
add
or
dec
fnstcw
mulb
std
cmpsb
out
adcl
inc
xor
test
dec
icebp
mov
in
mov
cmp
in
adc
mov
push
add
lea
mov
lods
test
out
repz
adc
inc
cmp
jle
inc
aaa
scas
sbb
mov
inc
mov
sahf
dec
das
fimuls
inc
jae
jmp
or
icebp
sbb
ljmp
inc
jmp
sub
xchg
test
negb
and
sbb
out
shlb
and
mov
mov
dec
shl
mov
dec
adc
add
jo
test
outsl
pushf
nop
dec
xchg
scas
rolb
icebp
bound
and
adc
jns
sahf
mov
js
mov
aam
fstl
mov
xchg
mov
je
mov
call
arpl
aaa
sbb
pop
or
in
mov
jb
sub
ds
cli
int3
into
out
decl
mov
out
mov
or
movsb
ds
sbb
sbb
test
je
and
dec
shr
pop
adc
stos
xchg
push
mov
jne
sar
sub
outsb
mov
inc
stc
test
into
stos
cwtl
inc
cli
sahf
lods
insl
adc
inc
pop
xor
je
mov
mov
push
add
sahf
cmp
sahf
insb
ljmp
inc
sbb
jmp
jnp
and
pusha
in
aad
mov
movsb
pop
xchg
std
adc
xchg
sub
stos
jge
or
ds
enter
add
jmp
out
inc
mov
sbb
fwait
stos
inc
dec
lods
ret
movsb
jne
cmpsb
cmp
and
daa
daa
cmpl
and
push
pop
jmp
pop
cmp
stc
push
dec
and
in
icebp
pop
jg
xchg
sub
cmp
cmp
mov
inc
jp
xor
bnd
or
and
rcrb
pop
cmp
push
sbb
add
ja
pusha
jle
hlt
pop
data16
movsb
adc
rcl
push
xor
loop
and
cmp
push
jo
test
lods
sbb
push
ja
add
cmp
cmp
xchg
jle
into
mov
je
push
mulb
insl
enter
mov
ljmp
popa
sbb
xchg
in
fucom
setl
xchg
dec
mov
cmp
jae
mov
fnsave
jl
push
mov
mov
stos
or
cltd
jb
fwait
and
fcoml
inc
mov
mov
mov
push
clc
mov
xor
in
hlt
xchg
in
fsubp
cmpsb
test
adc
test
repz
inc
cmp
pusha
mov
int
xchg
sbb
mov
and
lea
cld
fs
mov
pop
add
xor
lahf
fstpl
xor
in
mov
mov
push
pop
adc
test
cld
cli
cld
dec
aam
add
repnz
rorl
xor
sbb
mov
push
sub
push
xchg
fistpl
hlt
push
cli
push
mov
and
shrb
mov
jle
inc
mov
jle
sti
lock
lock
push
iret
adc
cltd
adc
bound
jge
jbe
sbb
xchg
mov
add
enter
sub
dec
stc
subl
aad
sbb
xchg
pop
test
jns
fstps
test
jmp
add
or
push
fcmovne
xor
xchg
jb
jmp
repz
out
pop
mov
lcall
repnz
pop
jnp
fptan
sub
mov
and
dec
cmpsl
cmp
push
test
addr16
ror
lahf
mov
inc
lods
es
and
lods
push
mov
pop
push
rorl
nop
and
mov
addl
cmpsl
daa
insl
mov
push
jl
adc
test
adc
push
ds
rorl
aaa
adc
ljmp
mov
mov
out
scas
push
xchg
call
mov
out
xchg
xor
jns
call
call
scas
fstpl
jl
xchg
jmp
std
dec
dec
sub
leave
jp
xchg
jp
lods
sub
jb
sahf
out
idivl
sub
jmp
inc
out
in
inc
pusha
mov
fsubs
mov
cmp
xor
adc
popf
dec
fbld
aas
stos
in
add
fisubs
rorl
movsb
push
jb
clc
fimull
adc
das
xchg
cmp
ja
pop
shr
punpcklbw
adc
add
xchg
imul
popa
jnp
fadds
sbb
push
icebp
add
xchg
or
test
add
gs
loope
jnp
cmp
sbb
out
int
sub
and
js
into
xor
mov
pop
push
mov
in
sub
lahf
js
lahf
rcrl
lock
pop
mov
push
push
inc
jns
mov
addl
pop
mov
xchg
insl
push
fcmovnu
sub
push
popa
out
sbb
mov
mov
push
icebp
jb
push
rcll
or
sub
int3
mov
roll
sub
popf
call
in
loope
mov
mov
pop
xchg
shl
xchg
add
ja
sub
sbb
popa
mov
test
mov
cs
inc
ret
xor
scas
xor
sub
dec
movsbl
adc
loope
dec
jmp
jns
sbb
cmc
jo
ds
push
jbe
popa
jle
mov
sub
test
sub
mov
jo
adcl
xor
pop
push
loopne
int
jmp
stos
leave
pop
mov
cld
ja
data16
jmp
cmc
and
dec
inc
pop
or
pop
inc
lods
popa
dec
add
xchg
mov
xor
mov
outsb
push
dec
insb
lahf
je
pop
imul
jmp
aad
add
mov
sbb
add
pop
jmp
outsb
scas
mov
mov
ss
mov
ljmp
pop
ljmp
jg
pop
sub
inc
and
in
dec
pop
bound
add
jne
test
rolb
add
test
and
or
stc
mov
sub
es
sti
inc
add
mov
test
dec
mov
mov
js
dec
fs
jo
xor
stos
xor
bound
bnd
int3
shl
pop
iret
sub
rolb
mov
mov
jno
sahf
lcall
enter
xor
lods
push
out
jecxz
scas
mov
icebp
xchg
mov
gs
sahf
mov
ja
std
stc
scas
mov
add
jp
add
jno
jo
pop
sbb
sub
fdivs
lock
ss
mov
adc
enter
dec
cwtl
into
lret
xor
mov
popw
mov
imul
push
nop
popf
adc
sub
movsb
scas
pop
inc
scas
call
popf
scas
lods
ljmp
pushw
cmp
ds
dec
mov
push
or
pop
sub
mov
mov
shll
and
adc
xor
jae
cmpsl
lock
aaa
mov
clc
je
mov
xchg
mov
adc
cwtl
dec
scas
jmp
pop
xchg
aas
add
icebp
fists
jg
sbb
sbb
rcl
in
or
or
cmp
mov
push
movsl
arpl
cmpsb
push
xor
clc
repnz
nop
add
push
popa
add
dec
dec
rolb
mov
in
test
mov
pop
lcall
insl
push
push
jae
fs
ja
pusha
and
sbb
movsb
xchg
iret
lcall
push
xchg
mov
jae
nop
ret
in
popa
dec
xor
cld
or
jae
adc
mov
movsb
or
adcb
or
sub
push
sbb
fdivrl
mov
rcrl
push
xor
fwait
adc
ret
ds
fnstenv
psubb
mov
or
je
mov
mov
jns
cwtl
push
dec
in
jecxz
push
mov
jnp
xchg
pop
cmp
out
dec
sti
loop
jl
mov
sbb
rorl
inc
push
loope
push
jmp
add
int3
stc
dec
aaa
jnp
mov
adc
add
sbb
ds
push
inc
faddl
sbb
test
ret
or
adc
pop
mov
movsb
push
push
and
imul
mov
loop
pop
xchg
outsb
xlat
xor
mov
xchg
insl
mov
xor
fildll
loopne
cmp
push
push
cmc
in
push
clc
fxch
shrl
insl
or
stc
mov
mov
gs
sbb
lcall
xchg
add
inc
sbbb
int
sbb
cmpsl
inc
std
inc
lahf
sbb
dec
mov
push
dec
nop
fcmovnbe
orl
std
inc
jmp
loop
inc
jp
mov
aam
in
xor
sub
jns
loop
pop
mov
sub
mov
gs
lret
rorl
sbb
and
jmp
test
nop
xor
mov
push
jmp
inc
add
movsl
ret
xor
clc
das
repnz
push
xchg
das
xor
aad
stc
stc
out
mov
xor
bound
mov
or
xchg
xor
xchg
sbb
sbbl
in
mov
add
test
scas
mov
push
dec
mov
imulb
add
or
sti
call
jmp
mov
inc
mov
and
lret
add
jbe
xchg
or
mov
push
imul
lcall
mov
push
test
lea
stos
inc
xchg
lock
lods
sbb
ret
push
scas
hlt
push
pushf
pop
js
mov
push
int3
dec
lods
fsubrs
fwait
inc
hlt
push
jp
data16
cmc
add
mov
xchg
pop
loopne
jnp
adcb
add
mov
subb
lock
xchg
ja
mov
fmuls
pop
mov
inc
outsl
mov
pop
sti
inc
xor
daa
ret
or
stos
fnstenv
aam
mov
stos
in
scas
push
jmp
aaa
xor
jg
xchg
loop
pop
sarb
adc
push
pop
stos
fadds
mov
sti
js
sbb
jmp
mov
addl
es
xor
add
aad
mov
add
mov
ljmp
jnp
loopne
dec
jecxz
xchg
jmp
lea
inc
lret
outsb
idivb
push
es
push
cmc
daa
or
adc
pop
fists
or
movsl
add
sahf
and
sbb
lods
into
sti
test
fldenv
in
mov
outsl
xor
pop
lret
popl
sub
shll
mov
pushf
andb
loope
sahf
bound
inc
in
fsubl
inc
and
loop
and
call
mov
cmp
pop
lahf
out
movsb
fldcw
mov
pop
jecxz
fnsave
add
loop
gs
xor
sub
add
mov
aam
out
lds
mov
xchg
in
dec
jne
popa
adc
mov
dec
mov
movsl
xor
bound
jb
jns
repz
xchg
and
scas
mov
push
push
data16
xchg
push
insb
roll
aaa
pop
out
mov
fimull
sbb
repnz
aaa
sub
xor
clc
add
filds
ja
test
mov
outsl
clc
inc
sbb
lods
testb
push
jge
rol
sbb
adc
shrl
pop
jb
pop
insl
push
cmp
mov
mov
shr
mov
mov
out
mov
mov
test
movsl
inc
jl
mov
stc
adc
xor
and
mov
sbb
popf
inc
cmp
icebp
hlt
mov
mov
or
fbstp
mov
mov
lock
xor
icebp
nop
mov
inc
cmp
and
lods
add
mov
outsb
loopne
out
jo
scas
mov
or
and
sub
loop
rcr
push
ljmp
inc
lods
jg
mov
stc
ja
mov
shrb
std
dec
sub
ljmp
lods
lods
fwait
xor
dec
push
jecxz
int3
dec
cmp
outsl
ret
orb
ficoms
jg
xchg
sbb
pusha
or
fdivl
scas
mov
ret
pusha
cmp
aas
icebp
xchg
cmpsl
sub
push
cld
pop
icebp
dec
imul
into
js
push
lods
xor
fadds
and
xor
add
lock
jl
dec
fsubs
jge
inc
cmp
pop
dec
pusha
in
xor
out
cmc
mov
mov
xorl
pop
clc
and
out
push
xor
sub
and
mov
inc
push
mov
jge
fildl
push
mov
imul
inc
dec
mov
das
adc
lcall
xchg
andl
sub
into
push
cwtl
inc
mov
lea
pop
sub
rorl
pop
lcall
xchg
in
pop
sub
popa
xchg
loop
movsb
rclb
mov
and
cmp
and
mov
fimuls
rcr
mov
pop
mov
and
shll
and
jmp
in
lock
jle
inc
aam
rcrb
mov
fwait
cmp
sbb
out
mov
mov
lods
push
push
jp
cmc
cmp
push
rcr
addr16
aas
lcall
ret
fldl2e
mov
dec
ret
push
test
cld
mov
arpl
add
imul
int3
aas
cld
stos
lea
sti
loope
adc
js
pop
rorb
repz
sbb
bound
out
out
testl
mov
incl
test
adc
arpl
mov
out
cwtl
lret
add
icebp
adc
pop
andb
sbb
fildl
dec
jle
test
xchg
mov
push
sub
or
rclb
inc
sub
push
cmp
adc
ret
mov
push
loopne
mov
sbb
test
pop
fcmovne
sbb
add
fwait
stos
inc
mov
dec
dec
jno
pop
cmc
iret
mov
and
cmc
aam
outsb
cmpsb
jp
push
sbb
cmp
ss
loopne
in
fstl
rol
jge
mov
xchg
xchg
sbb
repnz
test
mov
mov
pusha
add
jb
pop
sahf
insl
bound
fstl
arpl
das
int
cmpsb
sbb
outsb
fnstcw
cmpsl
jae
jo
sbb
sbb
sub
jbe
jns
movsb
mov
daa
push
test
pop
jle
iret
int
pop
gs
test
cmp
add
mov
ja
ja
sub
adc
push
and
aad
mov
inc
push
pop
jns
xor
in
aad
nop
rol
insb
inc
pop
fstl
pop
shlb
jmp
push
mov
and
stos
mov
leave
jl
adc
out
ja
in
shrl
jp
jecxz
mov
js
lea
fildl
test
lea
cmc
push
mov
idivb
call
popf
ja
xor
inc
pusha
pusha
push
and
aaa
xchg
std
jbe
data16
and
mov
popa
repz
push
je
out
jg
adc
mov
mov
add
ror
and
xchg
fwait
nop
inc
sbb
sub
push
mov
xchg
inc
rorl
sub
scas
idivl
pop
add
flds
add
add
lock
and
ja
and
sti
jo
pop
jge
cmp
xor
ljmp
lea
iret
jle
stc
fwait
push
mov
aaa
arpl
cltd
xchg
movsb
sti
lds
add
js
hlt
rcrl
inc
xchg
pop
sub
lds
sti
mov
xor
mov
xchg
xorl
sub
fcmovu
adc
dec
jecxz
push
loope
jge
cmpsb
mov
divb
aam
push
dec
mov
lcall
stos
push
cld
ja
jmp
das
es
sbb
les
bound
mov
mov
jns
and
shlb
loop
adc
dec
xlat
mov
inc
sub
daa
push
das
inc
xchg
cmp
and
push
ja
test
or
mov
lods
clc
add
cmp
adc
sbb
sahf
pop
xchg
data16
insl
scas
lock
cmp
in
popa
and
mov
imul
inc
jbe
sbb
push
iret
lods
mov
fldenv
dec
or
fildl
mov
xor
jno
dec
pop
dec
dec
mov
lods
jb
adc
inc
jg
sbb
out
jmp
js
ret
pushf
xchg
fildll
lret
ss
jmp
mov
jecxz
lcall
cltd
add
lods
pop
inc
insl
pop
xchg
stc
shll
mov
add
scas
cmp
dec
imul
xchg
jecxz
push
mov
mov
iret
mov
out
jge
mov
pop
mov
jb
out
push
imul
jle
sbb
repnz
out
push
jle
test
aaa
rolb
aaa
in
fwait
jmp
cmpsl
and
cs
js
out
pop
inc
xor
push
push
out
gs
pop
push
cmpsb
xchg
and
sbb
xchg
mov
sbb
pusha
das
inc
popa
mov
xchg
xchg
fwait
xchg
rcr
mov
jmp
and
mov
lahf
ret
mov
pop
int3
les
jne
es
sbb
pushf
std
imulb
adc
add
test
pushl
push
jnp
cmp
pop
int3
pop
mov
cmpsl
pop
call
scas
ror
and
outsb
jb
xchg
pop
inc
mov
repz
sbb
js
mov
sub
cltd
xlat
icebp
add
arpl
add
dec
dec
jb
out
sbb
add
out
aad
xchg
cmp
daa
cmp
push
mov
push
and
inc
mov
xor
or
cmp
ljmp
dec
inc
push
js
rcl
pop
pushf
xchg
pop
or
jns
mov
lret
ret
dec
xchg
xchg
out
repz
jge
or
and
mov
and
inc
xlat
jle
xor
inc
out
push
ret
cld
and
dec
sub
sub
dec
ja
ficoms
xchg
iret
jg
add
shlb
shl
sub
movsl
mov
in
cli
xor
lods
sub
mov
push
mov
jle
loope
sub
mov
inc
fstps
adc
push
pop
jge
lahf
rcrl
pop
cmpsb
jo
inc
in
fadd
movsl
xor
xor
test
repz
sbbb
cmc
push
cmp
inc
imul
add
dec
xchg
fimull
gs
add
push
test
push
sbb
lret
push
mov
mov
cmp
push
cmp
adc
xor
insl
dec
push
add
dec
mov
cmp
mov
cli
sbb
dec
mov
jo
cmp
adc
pop
or
repz
icebp
ret
sbb
mov
fimull
in
fildll
pop
fisubrs
fiaddl
pushl
pop
pop
cli
xchg
inc
cmp
and
pop
faddp
fisttps
mov
hlt
dec
sbb
pushf
shll
cmc
scas
adc
jecxz
mov
inc
sahf
aas
inc
dec
sti
lock
loopne
dec
clc
push
aam
mov
adc
cwtl
test
lea
iret
pop
lcall
stos
sub
in
gs
push
cwtl
daa
cs
outsl
push
and
sbb
xor
push
push
sbb
xor
into
jecxz
dec
sahf
dec
pushf
imul
fcmovnu
cld
aam
adc
pop
lods
nop
add
xchg
dec
lods
incb
loopne
adc
mov
pop
add
clc
outsl
and
shll
pop
sub
aas
ret
insb
xor
mov
push
mov
iret
pop
stos
pusha
mov
xchg
adc
xchg
nop
push
call
loope
lcall
push
rcrl
and
push
cwtl
aas
xchg
imul
pop
and
mov
inc
inc
outsb
sbb
rol
insl
mov
and
pop
and
dec
insb
loop
test
mov
ja
lret
std
scas
rcrl
imul
in
push
bound
sbb
xor
iret
incl
sar
push
xor
jmp
dec
insl
test
mov
shl
icebp
dec
cli
arpl
adc
out
je
mov
int3
mov
inc
ljmp
ret
jl
lret
cmpsl
push
addb
lea
cmpsl
adc
imul
sub
adc
fidivrl
inc
dec
or
std
jle
jne
push
call
ds
pop
je
mov
xor
aam
push
rcrb
inc
adc
test
and
insl
mov
loopne
lock
and
xorb
dec
lods
clc
das
mov
xlat
cmp
push
fistpll
repz
xchg
sbbl
sbb
jae
jle
xchg
clc
es
aas
sub
pop
adc
dec
jae
pop
leave
sub
jne
push
cmp
jbe
sarb
push
inc
and
add
lret
out
cltd
lods
inc
shr
xchg
inc
mov
std
shlb
jle
sub
bound
out
ds
and
xchg
adc
fistpl
cmpsl
or
clc
sub
jg
stos
cmp
and
pop
push
aas
pop
js
sarl
pop
mov
andl
bound
mov
rcr
aas
shll
cmp
scas
bnd
mov
and
movsb
andl
loopne
loope
sbb
cmc
les
ret
aam
adc
addr16
in
in
xchg
imul
and
inc
xchg
xchg
cmp
imul
imul
insb
ret
stos
cmp
notl
pop
ret
sarl
cmpsl
aad
sbb
pop
repnz
dec
jo
push
lea
mov
mov
xorb
outsl
je
mov
pop
lds
in
cmpsl
ret
out
mov
adc
add
fdivr
add
dec
lock
data16
pop
jge
addl
cmp
xchg
stos
adc
cmp
push
std
xchg
cli
add
xor
out
mov
incl
add
or
outsl
pop
pop
aad
mov
aas
xchg
and
push
push
hlt
icebp
mov
out
mov
push
rcrb
fbstp
int3
aam
in
scas
mov
frstor
mov
or
sti
dec
rcrb
mov
jge
cld
xor
pushf
and
jae
enter
ficoms
fmuls
sub
and
jmp
lods
imul
mulb
xchg
add
in
popa
pop
movsl
mov
jb
and
sbb
push
jp
mov
test
mov
inc
jae
cwtl
inc
dec
dec
inc
xor
sub
popa
outsl
jl
andl
mov
add
mov
out
jbe
jp
pushf
mov
cmpsl
aas
xor
and
adc
fimull
shll
hlt
dec
add
sbb
pop
push
dec
ret
out
xchg
rclb
pop
cld
cli
scas
dec
jmp
mov
xchg
jecxz
push
aad
dec
les
push
pushf
pop
lahf
aaa
jl
sahf
jg
or
fdivl
mov
or
test
fsubl
sbb
inc
lock
pop
sub
sub
mov
pop
add
pop
adc
clc
icebp
sub
add
fidivs
push
pop
mov
pop
dec
mov
pusha
xlat
out
sbb
inc
pop
sub
cwtl
int
mov
fistl
std
mov
add
sub
loopne
jecxz
scas
outsl
orb
mov
mov
std
out
and
fldt
sbb
sbb
jb
mov
push
mov
inc
ret
es
cmpb
sbb
and
cld
cmc
in
cli
mov
dec
jno
mov
test
mov
aam
push
add
pop
out
sbb
xor
inc
hlt
or
push
cmpsl
imul
clc
jae
push
cmp
sarl
adc
pop
sub
cmpl
rcrl
sbb
sar
stos
push
ret
mov
mov
cmpsb
mov
add
movsb
dec
dec
mov
mov
mov
mov
xchg
jns
sarb
cwtl
mov
jb
xlat
or
push
jae
ret
lea
dec
xchg
movsb
enter
lret
mov
test
rolb
mov
cmp
test
mov
sub
sbbl
pop
or
rolb
mov
and
test
daa
mov
paddw
test
jecxz
fnstsw
pop
pop
les
cs
xchg
lcall
les
push
or
jmp
fistps
dec
clc
mov
jbe
lds
xor
imul
daa
xor
jne
push
leave
xchg
push
sub
test
mov
into
pusha
bswap
mov
into
stc
add
mov
data16
test
hlt
mov
outsl
pop
movsl
movsl
mov
add
jns
aaa
nop
and
dec
lahf
push
loopne
imul
cmp
out
mov
lods
jl
arpl
fdivr
ret
lret
popf
cmp
xor
out
enter
adc
or
stc
sub
arpl
aam
add
push
insl
ds
pop
xor
movsb
lock
jae
and
push
into
sub
sti
mov
or
frstor
andb
in
pop
mov
test
jns
mov
pop
sbb
mov
addr16
mov
testl
ret
in
push
adc
leave
sub
fisttpl
clc
or
sbb
push
sahf
inc
jge
and
loop
in
inc
lods
mov
mov
ja
and
adc
pop
cmp
pushf
mov
movsl
jp
ret
aam
mov
sbb
and
adc
adc
jge
test
mov
ljmp
pushf
mov
or
dec
sub
sbb
mov
inc
xor
loop
stos
fs
in
jae
in
lods
in
inc
adc
sub
push
inc
cmp
and
pop
cmp
rcrl
jbe
shlb
shlb
and
cmp
push
insl
pusha
pushf
fnstsw
xchg
mov
cld
rolb
mov
arpl
inc
mov
lods
sub
popf
pop
ja
mov
decb
stos
dec
push
cwtl
aad
cmp
test
dec
inc
test
jne
loope
pop
insl
fists
in
adc
hlt
lods
mov
mov
push
lret
or
mov
rorl
jge
daa
mov
jo
mov
xchg
stos
ja
and
stc
inc
call
inc
ds
leave
int
add
stc
loope
jns
add
push
ljmp
xor
stos
jbe
cmp
xlat
lret
les
ja
sbb
add
inc
aam
mov
decb
lcall
mov
movsb
xor
adc
in
and
mov
aas
popa
mov
ds
lret
scas
cmc
push
mov
push
or
repz
and
sub
fbstp
jg
jmp
aaa
adc
adc
jb
and
int
rcrb
mov
mov
push
cli
arpl
loope
cmc
lods
mov
adc
sub
and
movsl
push
or
mov
ds
loop
pop
scas
add
add
ja
pop
push
mov
repz
adc
add
mov
cmp
and
sar
addr16
pop
mov
lods
out
les
in
and
sbb
dec
push
sbb
mov
inc
nop
sbb
shr
into
ds
icebp
add
cmc
pop
cmp
int
cmp
sarl
xchg
mov
dec
divl
pushf
popa
roll
pop
sbb
in
sub
call
jb
ja
xor
gs
adc
mov
push
pop
push
sub
push
or
fst
call
push
ljmp
jmp
std
sahf
fstps
cmp
jl
leave
enter
sbb
stos
fadds
aas
popa
es
clc
xchg
cld
ja
cltd
mov
add
xor
in
icebp
ficoml
loope
push
mov
inc
outsb
push
pop
xor
mov
bound
iret
adcb
fcom
mov
or
cmc
outsb
sub
repnz
jmp
xor
sbb
adc
fidivl
call
loop
adc
and
jb
sbb
lock
xchg
repz
or
call
imul
mov
imul
dec
push
adc
jno
pop
fwait
ja
jge
xor
jns
mov
arpl
pop
cltd
aaa
ret
leave
dec
stc
enter
es
dec
add
cs
xchg
jge
jb
out
in
popa
pop
mov
cmp
dec
and
ffreep
adc
mov
sbb
pusha
jl
xor
pop
js
inc
cmp
mov
jp
jae
aad
jae
xchg
notb
sub
xor
jo
lods
imul
inc
and
add
mov
dec
xor
cltd
movsl
and
dec
xchg
pop
inc
pop
push
call
inc
stos
inc
or
fiaddl
daa
mov
sbb
pusha
stos
sahf
insb
adc
inc
nop
dec
mov
in
lss
mov
cld
mov
div
xor
dec
pop
insb
cmp
ficoml
mov
inc
movsb
je
loopne
lock
mov
mov
scas
and
scas
fldt
jo
ds
outsl
push
xchg
mov
jmp
es
jg
testl
ds
faddl
stc
popa
jp
or
adc
adc
hlt
push
les
in
stc
pushf
out
jbe
incb
insb
insl
lahf
cmp
js
and
mov
mov
imulb
mov
dec
rclb
xlat
xchg
inc
fcoms
test
push
dec
ret
fisttps
rcrl
sub
rcl
sub
imul
jb
jp
mov
lahf
mov
cmp
dec
dec
mov
xchg
sbb
pushf
adcl
ud1
jg
cld
pop
rolb
push
adc
stos
xor
xchg
pop
xchg
insl
xchg
pop
and
mov
add
aas
or
test
xchg
out
push
jecxz
or
fldl
aad
jne
push
cmp
push
jmp
stc
jmp
fildl
xor
push
jecxz
cmc
loope
push
stos
out
xchg
cld
fbstp
aad
add
dec
add
and
push
in
rorl
pop
cmpsb
add
cmpl
stc
frstor
cmp
addb
xchg
push
aaa
cld
mov
ret
and
addr16
imul
adc
pop
gs
stc
sub
repz
lret
pop
xchg
dec
and
xchg
ds
lret
adc
mov
adc
xchg
mov
inc
jno
clc
popf
and
out
sbb
iret
repz
and
jp
cmpsb
xorb
inc
ret
jl
or
pop
leave
cs
jge
outsl
xchg
xorl
xchg
movsl
sbb
bound
push
push
outsb
jnp
or
fdivs
inc
jnp
and
or
xchg
inc
rol
cmp
add
xchg
add
adc
nop
lods
jge
gs
cmpsb
mov
test
pop
out
fildll
push
sub
sub
push
jns
daa
jae
or
pusha
cwtl
je
cmp
and
adc
adc
pop
orb
mov
fstps
cltd
xchg
cmp
and
mov
hlt
mov
test
inc
fcompp
mov
cmp
in
mov
inc
pop
jl
add
mov
mov
dec
fiaddl
xlat
jmp
cmc
inc
push
push
lods
fdivp
push
sbbb
sti
cmp
clc
push
or
add
xchg
aam
or
fwait
leave
pop
test
sbb
pop
fisttpl
rorb
jb
xchg
add
adc
lds
pop
test
imul
pop
pop
or
or
sbb
fmul
inc
mov
cmp
enter
inc
add
push
loopne
sarl
pop
or
fildll
into
mov
in
cmp
cltd
push
xor
inc
cs
daa
cmpsl
stos
decb
in
das
cmpl
mov
mov
inc
loope
xor
cmc
out
mov
cmpsl
outsb
add
sti
or
mov
pop
mov
pop
cmpsl
mov
dec
hlt
inc
ja
add
outsl
out
or
mov
dec
push
incl
dec
cmc
mov
std
ja
lea
mov
cmp
roll
mov
push
mull
xor
jbe
jnp
pop
dec
pop
xor
pop
imul
add
push
scas
ficomps
sub
testl
repz
jl
xor
insl
or
xor
inc
pop
or
test
jle
and
add
push
xchg
out
cmp
lahf
nop
in
jno
jecxz
mov
cmp
test
ret
sahf
nop
dec
or
and
or
lcall
add
or
ss
arpl
and
fsts
lret
inc
cmp
push
xchg
adc
sbb
xchg
call
lods
mov
inc
gs
out
or
dec
sbb
jg
cltd
das
and
and
movsl
mov
ret
xchg
add
lahf
dec
add
bound
sub
fdivrs
and
cwtl
mov
ret
mov
or
stos
sbb
sbb
movsl
mov
outsl
or
mov
cltd
andb
rcrl
adc
cmp
out
cmp
mov
decb
out
es
push
mov
cmc
xchg
iret
je
mov
addb
aam
jns
mov
scas
sub
aaa
sub
add
sbb
in
test
jg
lret
movb
aaa
adc
xchg
or
mov
xlat
sbb
sub
js
cmp
es
sbb
and
dec
inc
out
sub
mov
lods
shl
das
inc
dec
sbb
dec
push
ja
adc
push
lods
jo
mov
push
and
mov
scas
jb
popa
je
dec
push
into
inc
xchg
push
lea
adc
jns
jbe
inc
adc
add
push
sub
push
dec
loopne
push
mov
cli
ret
mov
dec
fistps
int3
push
aas
aas
arpl
push
loopne
sub
dec
or
outsl
test
ljmp
outsb
subl
add
push
sub
out
inc
inc
jg
jno
push
aas
lcall
mov
and
xchg
push
aam
mov
scas
mov
in
or
cmp
inc
pop
xlat
cli
inc
pop
mov
jle
idivb
addb
push
cs
xchg
cmp
es
test
mov
lahf
mov
in
js
push
sarl
mov
sub
ja
popf
out
add
insl
push
inc
cmp
push
filds
lock
mov
dec
call
xchg
scas
sub
cmp
outsb
ja
push
sbb
imul
inc
push
aad
mov
outsb
ljmp
pop
push
es
mov
mov
notl
insb
std
dec
sub
gs
dec
and
scas
xor
mov
in
add
add
and
in
sub
or
outsl
cwtl
fistps
lea
and
subl
pop
mov
or
and
mov
in
ja
xchg
sub
int
xchg
adc
and
mov
mov
lds
in
in
aaa
mov
decl
mov
popa
push
int3
or
and
mov
cmp
xsaves
cmp
stc
xchg
pop
dec
jno
test
test
out
dec
bound
jne
cli
ja
std
xor
cld
push
cmc
jae
adcb
and
mov
outsl
fcmovnbe
stos
cltd
fcomip
mov
jecxz
push
mov
add
lods
clc
fidivs
inc
out
fbstp
jnp
mov
dec
mov
mov
lods
xchg
mov
icebp
or
insl
or
fbld
fisubrs
pop
xchg
stos
aad
mov
repnz
imul
in
mov
jl
jp
gs
add
push
dec
js
sti
test
lods
fldcw
xchg
or
add
iret
jge
out
mov
rcrb
push
mov
adc
mov
jno
repz
inc
inc
inc
js
lock
and
jp
push
xchg
mov
inc
lock
sbb
negb
idivl
lret
test
cld
push
adc
xor
add
js
repnz
and
mov
adc
fdivrs
movsl
dec
outsb
loopne
data16
mov
sbb
xchg
mov
lods
jle
imul
into
xchg
insl
cwtl
inc
cmpsb
xchg
shlb
in
dec
clc
mov
stos
sbb
jo
sbb
rcrb
jg
pop
sub
les
les
jle
or
cmp
je
push
xor
xchg
movsl
dec
in
jge
jge
mov
arpl
ret
repnz
jae
nop
fcomps
and
outsl
mov
mov
scas
xor
mov
int3
dec
sbb
mov
cmpsb
hlt
xchg
aam
sub
inc
or
adc
stos
xchg
jo
add
cli
mov
leave
leave
mov
insl
bnd
fdivrp
xchg
data16
repnz
cmpsb
push
pop
aad
je
lock
arpl
je
pusha
sahf
jnp
inc
dec
andb
fbstp
imul
mov
push
cmp
lahf
xchg
mov
enter
cmp
test
jns
sbb
mov
jo
xor
jl
or
fidivl
stos
xchg
insb
dec
cltd
push
fwait
lret
push
sarb
sbb
cltd
enter
adc
adc
fnstenv
sbb
xor
fcompl
jns
enter
push
insl
data16
setae
jae
sub
cltd
xchg
nop
xor
bound
sbb
mov
mov
mov
into
aad
rclb
inc
sbb
jecxz
mov
mov
jbe
mov
and
xor
push
fisubl
roll
push
xor
call
in
mov
cmpsb
adc
push
sarb
and
sub
xor
adc
leave
arpl
setl
cmp
popa
jmp
aaa
push
cli
jae
push
push
push
cmp
stos
push
icebp
and
and
mov
lret
pusha
or
sti
in
jmp
cmpsl
fcoml
test
imul
xor
xchg
push
cmpsb
test
ret
add
or
push
fdivrl
adc
mov
ret
adc
out
dec
mov
in
rcll
inc
sbb
aad
push
je
inc
push
mov
cmp
adc
daa
push
ret
mov
push
pop
movsl
cmp
mov
xchg
xlat
push
adc
sub
nop
mov
pop
mov
fisttps
fsubs
xchg
aam
inc
jp
mov
sbb
jnp
xor
pusha
sbb
pop
inc
mov
push
roll
mov
mov
mov
sbb
mov
cld
lods
popa
adc
xchg
xlat
or
bound
or
dec
insb
test
clc
je
add
add
jnp
popf
mov
mov
mov
shlb
iret
test
std
insb
pop
out
aaa
xor
int3
xlat
int
mov
xchg
and
sub
fidivrs
jno
xorb
int3
aad
push
repz
jbe
mov
jo
fistpll
cmpsl
repz
es
xor
jecxz
cmp
rcrb
mov
repz
push
mov
es
cmp
ja
out
out
mov
inc
in
push
push
enter
mov
xchg
cmpb
arpl
and
push
inc
cmp
jge
xor
xchg
dec
pop
lods
sub
scas
daa
or
mov
ret
jecxz
mov
and
push
mov
pop
pop
fisttpl
scas
ljmp
mov
arpl
or
in
call
dec
shlb
mov
push
bound
dec
or
inc
pop
popf
sub
pop
pop
sub
pop
lea
movb
add
mov
mov
or
mov
push
xchg
imul
mov
call
aaa
mov
cmp
dec
or
push
sahf
ss
xchg
sbb
roll
fwait
aas
inc
ljmp
lret
movsl
adc
or
push
movd
popf
popf
idivb
test
xor
mov
xlat
xchg
xor
jbe
aad
enter
and
in
stc
jge
sbb
adc
mov
jns
mov
xchg
sbb
in
pop
sbb
and
lods
and
sub
xor
cmp
stc
mov
mov
enter
pop
add
mov
xchg
cmp
cmp
push
mov
int
jb
pop
cmpsb
fs
loope
cmpsb
pop
stos
jge
in
inc
push
pusha
js
sar
lret
lods
mov
jnp
xorl
loop
add
lret
mov
push
ficoml
lea
mov
cmp
lret
jmp
fwait
lcall
lret
jnp
jl
imul
out
subl
out
aam
mov
mov
test
mov
lods
and
adc
insb
push
je
in
aam
mov
call
adc
cmp
mov
or
mov
in
mov
aas
pop
jmp
pop
call
lods
lods
xor
jecxz
add
or
lock
movl
mov
movsb
notb
cli
mov
imul
lods
nop
popf
cmp
call
loopne
mov
mov
movsl
repnz
xor
add
sbbb
xchg
in
or
into
inc
mov
into
cmpsb
cmp
cmc
xor
xor
inc
arpl
mov
jmp
sub
adc
push
or
bsr
dec
loopne
cli
lock
mov
fiaddl
xchg
fnstsw
push
mov
push
pop
in
daa
lea
jb
xor
sti
add
test
ret
orl
sahf
movsl
xlat
leave
imul
push
fbstp
sbb
or
and
fisubl
cmp
inc
ficomps
xor
add
bound
daa
lds
fimull
out
popf
mov
pop
loopne
xchg
out
hlt
daa
roll
hlt
test
cmc
push
pop
mov
js
insl
fldenv
movsb
mov
outsb
cmp
enter
cmp
xchg
inc
push
inc
xchg
rcr
mov
xchg
or
out
jecxz
subl
unpcklps
sub
into
cld
ret
sub
cmp
jle
pop
or
std
xlat
cmc
jnp
xchg
adc
or
arpl
xchg
leave
dec
lock
lock
ljmp
or
dec
test
repz
mov
xor
sti
mov
jo
std
xacquire
and
es
sysexit
ja
push
int
push
and
arpl
jmp
stc
dec
pop
rolb
fdivl
cmp
pop
leave
jmp
adc
add
xor
cmp
pusha
xchg
jne
data16
sbb
or
daa
sbb
lahf
leave
cmp
push
es
rorb
mov
in
ret
sbb
sub
mov
js
add
insl
jnp
pop
cmp
ds
int3
add
faddl
sbb
mov
mov
lods
adc
add
aas
mov
add
jmp
add
lock
push
in
popa
mov
jno
lret
dec
out
pop
insl
mov
sti
aam
in
mov
int3
and
cld
leave
mov
pop
lret
xchg
out
inc
pop
cmp
sub
and
rclb
cld
lods
lods
movsl
inc
pop
les
and
jp
push
lock
scas
cmpsl
insl
sub
sbb
sbb
or
enter
jo
cs
mov
mov
insb
push
adc
push
lea
insl
lods
jns
cmp
mov
adc
jmp
push
mov
nop
xchg
inc
and
jecxz
adc
sub
adcl
fistpll
add
decb
or
push
push
outsl
ds
dec
pop
std
mov
and
les
in
jmp
call
and
pop
and
xlat
lcall
xor
mov
pusha
lea
aaa
addl
and
sbb
and
adc
pop
fsubs
xor
pop
mov
jo
test
loopne
aam
cmp
xchg
xchg
pop
sub
add
insb
push
ja
fwait
mov
jmpw
mov
sub
pop
cltd
push
scas
invlpg
mov
movsb
and
or
fisubrs
fs
push
jno
das
lods
aaa
mov
orb
mov
js
loopne
divl
mov
jp
repz
dec
cmp
jbe
mov
and
mov
and
aad
push
xchg
dec
sbb
xchg
aad
ficoml
decl
aam
aam
mov
xchg
push
inc
xchg
das
je
sbb
xchg
aaa
shlb
xor
pop
inc
popa
sbb
test
rcrl
clc
aas
adc
std
negl
mov
cmc
sub
sub
add
stc
dec
inc
sub
or
ret
sbb
xor
outsb
js
in
sub
mov
push
mov
jle
or
dec
inc
jmp
jno
addr16
shl
mov
sub
in
mov
and
fildll
invd
jl
cmovnp
sub
sbb
push
inc
or
hlt
sub
dec
or
test
movsb
cld
in
out
mov
jb
add
and
xchg
das
cmpsl
stc
and
jge
xlat
ljmp
leave
mov
out
leave
lea
xor
sub
rorl
into
out
mov
cmp
push
xlat
dec
repz
lods
add
pop
pop
adc
in
push
sti
les
mov
and
ja
adcl
mov
and
addl
xchg
aaa
inc
jnp
mulb
add
cmpsb
ljmp
enter
cmp
es
das
and
xor
xchg
adc
add
jmp
sub
mov
push
stos
stos
int
les
ret
pop
neg
add
movsb
fcomip
dec
xor
loop
sub
je
adc
xchg
jno
gs
fisttps
xchg
push
fnstenv
dec
movsl
clc
aad
js
cmp
xor
dec
test
mov
cmpl
das
dec
dec
mov
outsl
sub
popf
cmp
out
rol
fwait
xchg
sbb
lods
cmove
xorl
mov
pop
outsl
push
pop
hlt
mov
clc
mov
push
ljmp
cmp
mov
jne
popa
sbb
push
sbb
xchg
or
sbb
iret
lret
or
mov
loopne
mov
inc
test
fucomi
lea
pop
fcoms
lods
stos
std
mov
or
mov
in
xchg
pop
inc
xor
dec
dec
insl
int
filds
mov
inc
and
dec
inc
lcall
add
cmp
out
add
in
xor
add
jbe
mov
flds
hlt
pop
ljmp
mov
mov
add
insl
mov
nop
xor
pop
shll
push
add
pushf
push
mov
cmp
and
hlt
dec
mov
aam
data16
cmc
orl
cli
jmp
gs
and
jp
iret
adc
mov
out
dec
sbb
and
cmp
enter
cmp
shll
mov
or
jns
xchg
xchg
cs
insl
jle
mov
xchg
sahf
push
sub
das
pop
pop
xchg
mov
jmp
jnp
cmpsl
stos
fwait
imul
mov
inc
xor
push
sub
movsl
test
data16
popf
test
jns
leave
mov
xchg
pusha
dec
std
in
jmp
add
or
out
and
add
inc
jbe
pushf
test
shrl
sub
emms
lock
in
ficoml
mov
add
xor
daa
or
shll
add
cmp
cwtl
pop
mov
xchg
mov
mov
ds
cmp
push
movsl
repz
lcall
inc
jbe
into
enter
mov
test
addl
jge
sub
decb
stos
lret
aam
adc
iret
in
sbb
cmc
jmp
push
nop
fs
xchg
mov
dec
out
push
xchg
jg
cmp
lahf
push
adc
dec
mov
lret
push
push
lock
and
mov
xchg
mul
mov
pusha
xor
mov
cmp
int3
not
inc
fnstsw
rolb
fidivrs
imul
pushf
rcrb
fidivl
negl
add
mov
xchg
enter
rcrl
andb
imul
inc
pusha
out
inc
sub
pop
jbe
adc
mov
mov
insl
sbb
andb
imulb
pop
sti
mov
push
mov
add
sub
pop
sub
xchg
lcall
cltd
aad
int3
or
imul
mov
sub
aad
xchg
hlt
inc
aam
mov
testl
ret
mov
adc
lock
xchg
adc
inc
lret
fisubs
jg
scas
stc
push
outsb
test
shlb
pusha
test
inc
shrl
js
cld
ds
clc
jg
xchg
testb
add
inc
fisubl
icebp
fadd
insb
stos
insb
imul
pop
xchg
cld
cmp
xchg
loope
icebp
lret
sub
jge
sub
adc
and
add
add
pop
jne
int
lahf
mov
loop
jg
push
int3
aad
xchg
mov
lcall
test
pop
dec
inc
add
mov
rclb
neg
aad
xchg
xor
jg
mov
sbb
mov
sbb
int
dec
mov
in
inc
sub
xorl
mov
and
and
fcmovnu
mov
jo
call
movsl
stc
repz
jg
arpl
adc
hlt
dec
aam
and
out
mov
mov
lcall
sarb
pop
xchg
pop
rclb
subb
adc
dec
mov
pop
push
inc
mov
cmp
lea
imul
jl
mov
sti
adc
fildl
mov
insb
and
cmpsl
jp
pop
les
sbb
mov
inc
aaa
or
cli
ja
and
push
sahf
aas
or
cmc
sbb
sbb
push
mov
xchg
cmp
xchg
shrb
pop
int3
int
repz
sbb
subl
es
add
jns
mov
movsb
and
push
lcall
sar
pop
rorl
and
subb
add
out
inc
shrl
in
fdivl
rcr
adc
cmpsl
xlat
jge
out
test
jecxz
and
ret
xor
or
and
out
rcrl
xor
and
dec
out
mov
in
xchg
movsl
fildll
cmpsl
addr16
rclb
push
int3
popa
push
lahf
or
imul
ljmp
pop
lock
lret
movsl
jne
ret
jl
out
je
or
xchg
hlt
out
dec
repz
dec
adc
jns
scas
lds
repz
or
push
iret
ret
dec
imul
mov
push
sub
scas
sti
jp
cltd
test
mov
fcmove
push
xchg
das
int
mull
sbb
ds
mov
int
rorl
outsb
or
xlat
pop
mov
mov
insb
push
into
push
mov
enter
in
jbe
negb
int
xor
jge
mulb
add
pop
push
xor
cmp
fsubs
mov
das
adc
cmp
mov
in
jg
std
adc
pop
mov
push
add
loopne
loopne
pop
sti
stos
mov
loopne
test
push
ljmp
negl
aam
jecxz
push
into
outsl
jns
das
fbld
push
adc
adc
xchg
lret
pop
clc
push
shrl
lahf
aad
les
out
ret
mov
shrb
repz
test
inc
adc
divl
cltd
mov
jno
jno
jno
jo
xchg
mov
nop
inc
cmpsl
adc
adc
test
sub
fwait
subl
mov
cmp
fldcw
jp
sub
sti
jle
adcb
aam
mov
push
aas
stos
pop
sub
stos
jl
pop
sar
push
es
fs
andb
jo
test
pop
mov
gs
push
imull
aam
cmp
aad
or
jle
es
push
inc
jle
mov
push
test
add
xor
dec
jns
mov
fldcw
cld
and
pusha
pop
or
adc
ret
iret
mov
test
jle
fsubs
cmp
mov
push
loope
aam
rolb
in
addr16
sub
sub
sub
dec
shrb
xor
and
jns
cmpsb
push
mov
mov
jns
and
jecxz
iret
add
inc
bound
repz
sbb
mov
out
lret
fildll
pop
or
roll
fwait
das
cld
fstl
mov
pushf
stos
pop
sub
outsb
mov
loop
or
dec
aam
pop
pushf
shlb
adc
mov
push
pop
pop
jecxz
xchg
add
cmp
test
pop
pop
xchg
dec
mov
jg
and
leave
xlat
push
out
loope
inc
or
dec
es
sahf
popf
data16
xchg
push
inc
enter
scas
push
movsl
mov
test
test
cmc
push
cld
notl
test
data16
addr16
push
lods
je
enter
jno
fsts
adc
jae
rcl
cltd
lret
adc
push
sub
dec
add
push
xchg
ss
lahf
data16
mov
jne
decb
pusha
mov
lret
jge
dec
pop
xor
mov
mov
sbb
or
test
sarb
pusha
clc
int
pop
add
cmp
insb
xchg
inc
ja
sbb
xor
cmp
add
push
fmulp
cmp
outsl
lock
rcrb
sti
arpl
mov
mov
mov
pop
mov
rep
mov
stos
or
cmpb
and
movl
stos
test
inc
jae
mov
add
lods
lcall
test
xor
mov
fiadds
daa
sub
mov
pop
test
test
jnp
std
xchg
clc
dec
jp
cmp
sbb
insb
leave
or
ret
mov
push
jne
pop
sub
in
dec
and
mov
stos
jbe
or
test
hlt
inc
jg
lret
push
xor
nop
ja
fimull
jo
mov
inc
jae
hlt
push
or
jne
push
rorl
jb
imul
inc
push
clc
lcall
mov
cmp
jbe
movsl
test
cmpsl
nop
mov
jmp
xchg
inc
jp
sub
ret
jbe
push
jae
std
jb
mov
mov
push
in
jmp
xchg
push
jmp
push
mov
and
xchg
push
pop
add
mov
mov
outsl
cs
and
adc
pop
or
bnd
push
push
in
es
dec
jb
adc
dec
leave
xchg
jo
push
outsw
leave
xchg
cltd
ret
jmp
or
push
imul
insl
sbb
ret
jl
addl
add
sub
xchg
incl
jmp
push
or
stc
loop
or
sbb
aam
jmp
test
outsl
hlt
stos
ljmp
outsb
dec
jle
in
es
mov
push
rclb
add
sub
adc
mov
das
xchg
leave
scas
dec
mov
sub
outsl
mov
push
cli
jne
clc
pop
adc
outsl
lret
push
gs
adc
ljmp
or
add
mov
sbb
pop
inc
loopne
in
lret
adc
pop
loope
mov
sbb
sti
dec
testl
jmp
stc
mov
push
fistpll
js
repz
push
mov
adc
in
loopne
xor
jns
pop
cmp
jne
outsl
xchg
data16
mov
inc
lahf
mov
sub
cli
and
loope
cmp
adc
jne
cmp
outsl
ja
lret
cs
les
push
push
out
mov
sti
movb
dec
jp
sub
add
int
sbb
popf
hlt
shl
or
clc
shrb
aad
or
hlt
mov
cs
mov
subl
imul
sub
push
xchg
pop
sbb
mov
lahf
xchg
push
push
cmp
xor
shr
mov
fimull
out
adc
xlat
add
xor
inc
hlt
mov
movsb
cmp
sbb
inc
xor
fs
repnz
insl
jnp
jl
pop
inc
pop
or
sarb
mov
mov
xchg
mov
mov
add
sar
adc
push
sub
cmc
cld
test
jb
sub
jmp
dec
popf
or
and
inc
fisttps
xchg
out
loopne
add
clc
jnp
cmp
jmp
adc
mov
divl
push
imul
push
xchg
mov
xor
shll
aas
pushf
sub
pop
sub
adc
add
pop
adc
mov
sbb
ds
popf
sub
jmp
out
stos
sahf
sarl
or
mov
imul
in
cmpsb
push
xor
mov
mov
shr
xchg
mov
xor
dec
int
dec
sub
fimuls
inc
mov
into
jae
push
xchg
xchg
mov
xor
push
cwtl
shlb
or
dec
jb
lcall
mov
push
mov
sbb
mov
push
jae
xlat
push
stos
in
fistl
and
ljmp
push
mov
cmpsb
insl
arpl
in
scas
xchg
mov
mov
ljmp
out
mov
sbb
pop
scas
xchg
test
std
std
nop
push
fstpt
and
add
das
stos
adcb
inc
lea
or
cmp
add
nop
add
movsb
xchg
scas
inc
and
pop
sbb
arpl
push
into
push
lods
ss
pop
mov
mov
inc
cmc
insb
sub
aas
in
sbb
fs
jmp
dec
push
sbb
pusha
cld
or
pushf
popa
jns
inc
testl
mov
testb
push
pop
inc
lret
push
mov
fstps
out
movsb
mov
insl
repz
mov
leave
dec
test
and
jmp
clc
xor
subl
cltd
fists
xorl
sub
rorb
mulb
push
imulb
lea
mov
aam
test
mov
mov
pushl
or
inc
cmpsb
sub
lret
sti
lea
int
mov
fwait
mov
aam
push
mov
jecxz
inc
push
loop
stos
lcall
movsl
dec
seto
mov
and
xchg
pop
sub
pop
push
pushf
jo
popl
push
mov
sub
pop
test
daa
pop
or
push
mov
or
add
fstps
aam
adc
push
push
adc
movsb
mov
or
into
pop
enter
rcl
mov
ss
in
leave
test
insb
jo
std
xchg
push
movsl
fstps
test
push
ds
clc
mov
jns
adc
dec
addr16
push
add
lea
adc
push
push
lret
in
mov
fistpl
ret
jge
push
xor
dec
cmp
outsl
jbe
push
mov
sarl
inc
push
dec
jp
lods
hlt
mov
inc
ret
jnp
sti
cmc
daa
pop
jg
xchg
mov
inc
icebp
and
mov
rorl
push
paddsb
pushf
inc
pop
aas
xchg
jae
outsb
jmp
pop
insl
xchg
flds
add
mov
lock
adc
push
mov
mov
inc
fcmovu
mov
inc
lds
mov
cmpsb
and
lock
imul
insl
xchg
cmpsb
mov
pop
loopne
mov
nop
jle
pusha
mov
or
xor
mov
xor
and
adc
ret
mov
aaa
mov
into
cmpsl
xchg
adc
lock
lods
popa
adc
cmp
or
dec
or
xchg
add
std
fsubrs
push
push
ret
adc
pop
xchg
pop
cmp
std
xchg
push
ficoms
jle
fsubrl
mov
mov
dec
test
lcall
rolb
out
ja
popl
inc
sub
gs
out
in
xor
xchg
aaa
lret
jle
out
movsl
nop
jno
fimuls
ret
jl
shll
in
and
or
adcl
aam
mov
jbe
inc
or
mov
rep
ja
cmp
dec
cs
leave
test
andps
mov
mov
cwtl
pop
mov
sub
and
aaa
cmp
sub
adc
add
ljmp
push
xchg
ret
inc
loopne
pop
push
dec
stos
mov
add
cmp
xchg
dec
adc
out
sbb
sti
push
aad
pop
nop
lcall
insl
mov
mov
cmpsl
add
call
mov
dec
mov
fistpl
mov
mov
and
dec
fsubl
add
or
lock
and
das
or
jmp
cmpsl
dec
jae
int
jns
hlt
xor
movsb
ss
jo
add
cmc
aaa
xchg
mov
mov
iret
xlat
push
cli
fcompl
push
jge
call
sbbl
cmp
in
mov
jb
pop
pop
push
shl
ss
adc
and
pop
setle
pop
rcrb
ss
mov
fs
gs
pop
mov
das
adc
js
sti
jo
insb
mov
mov
pop
ret
aam
mov
icebp
into
fdiv
push
mov
in
loopne
jecxz
adc
adc
add
xchg
loop
mov
dec
lods
scas
rcll
xchg
and
and
push
pop
jae
dec
sbb
mov
out
lods
dec
sahf
incb
mov
stc
add
arpl
out
xchg
enter
jnp
cmpsl
aam
shll
adc
retw
pop
jnp
jno
and
imull
adc
mov
jge
ja
dec
xchg
lea
fdivrl
sub
jmp
lds
adc
movsb
lds
test
or
mov
pop
addr16
leave
pushf
sub
pop
mov
lret
mov
mov
aas
mov
aas
mov
pop
adc
loopne
dec
fsubrs
push
int
mov
xchg
mov
mov
mov
mov
movb
les
add
mov
mov
dec
sti
loop
ds
std
out
push
scas
test
aad
into
dec
enter
je
jbe
outsl
cmpsb
lods
mov
das
mov
in
daa
add
xchg
push
aas
inc
inc
negb
sahf
repz
es
jmp
cltd
cmp
daa
fisubl
dec
mov
mov
sub
inc
or
daa
popf
sub
and
or
mov
inc
mov
add
dec
fnstcw
out
and
lds
clc
inc
fs
xchg
inc
lods
add
ret
std
repz
mov
lods
cmpsb
add
sbb
loopne
push
push
fcomp
sub
cli
dec
dec
jo
rep
insb
mov
call
sarl
call
adc
pushl
dec
xor
rol
loope
cwtl
sbb
sbb
sub
cmp
xlat
popa
int
or
push
and
sub
mov
loop
push
sbb
mov
pop
fcompl
jb
loop
js
jno
and
stc
fstpt
jge
push
aaa
push
das
fsubp
cmp
mov
and
cwtl
inc
fdivl
mov
mov
out
inc
mov
pop
xor
and
roll
out
mov
mov
and
cmpsb
jnp
inc
xchg
sahf
sub
mov
jmp
jecxz
sub
mov
jp
mov
jno
cmp
push
mov
adc
jo
and
in
in
or
mov
jae
sub
mov
scas
mov
test
inc
fmul
xchg
out
mov
aam
cli
int3
fsubrp
cmpsl
ljmp
lahf
loopne
sub
insl
loope
push
inc
cmp
or
fs
sbb
cmp
push
outsb
out
mov
dec
pop
jbe
xchg
repnz
fucompp
mov
push
iret
test
xchg
xchg
ja
ret
loope
jbe
pusha
and
pushf
leave
insb
sbbl
mov
mov
lock
and
add
sub
jle
xchg
pop
fdivr
xchg
cmp
xlat
or
xor
ds
mov
imul
addr16
lahf
je
in
jns
popa
adcb
std
test
lods
lds
int
and
insb
push
repz
aam
pop
negl
insb
sbb
xor
mov
aas
in
test
pop
cmpsb
pop
push
xor
shlb
daa
mov
sub
cltd
imul
jmp
push
lea
call
nop
lret
and
ljmp
stc
xlat
imul
sbb
inc
push
jno
xchg
int
out
jp
inc
sbb
or
repnz
or
fists
jb
ds
xchg
jp
cmp
cmpsb
into
dec
sub
ljmp
xchg
adcl
mov
add
sar
mov
ffreep
mov
sbb
pop
add
call
jne
repnz
aas
and
sub
push
mov
jne
cmc
in
mov
add
inc
xor
push
xchg
std
movsl
jbe
lahf
push
jns
fs
sbb
sbb
cmpsb
sub
pop
adc
cmp
outsl
jmp
xor
ret
or
and
dec
fmul
inc
das
mov
hlt
mov
mov
loopne
lods
jbe
dec
mov
jo
mov
fildl
loop
sbb
xchg
int3
push
pushl
frstor
out
mov
hlt
mov
cmp
fucomip
xchg
mov
inc
daa
arpl
stc
push
incl
dec
mov
sbb
xchg
sar
push
xchg
add
dec
or
shll
push
je
cwtl
jns
sti
movsb
jl
int3
sbb
mov
cmp
push
mov
subl
mov
int3
lcall
dec
inc
mov
mov
lea
fcos
add
cmp
in
sbb
mov
adc
add
cli
sbbl
cwtl
jge
ja
cmp
cs
lock
push
dec
lcall
jo
pop
aas
xchg
test
mov
xor
adc
mov
add
xlat
xchg
insl
fimuls
mov
sahf
ficoml
imul
out
std
rol
jns
sbb
push
nop
mov
sub
cmpsl
lret
cs
stos
xor
mov
movsl
cmc
or
jae
cmp
mov
push
or
popa
js
dec
pop
nop
or
filds
test
in
lcall
leave
imul
int3
and
mov
adc
mov
loope
xchg
xor
das
fadds
or
fiadds
mov
mov
and
cmp
sub
loop
mov
daa
and
fisttpl
testl
mov
inc
sub
push
lock
rcll
jge
push
daa
mov
mov
les
enter
inc
stos
jo
mov
test
popf
into
popa
mov
repz
or
dec
je
cmp
shll
jo
push
and
push
das
pop
dec
mov
adcl
jbe
int
daa
pop
test
xchg
jg
loop
repz
xlat
cwtl
cmp
loop
adc
cmp
mov
or
jno
push
cli
dec
or
jmp
pop
pop
rolb
push
bound
pop
jge
adcb
push
xchg
sbb
loop
dec
xchg
cwtl
nop
mov
xchg
js
jns
mov
add
sti
jno
xor
fsub
push
mov
sbb
fwait
leave
add
xor
cmp
push
out
pop
jb
mov
cmp
imulb
pop
mov
push
xchg
xlat
add
or
mov
es
scas
sbb
loopne
jno
cmp
test
loope
push
mov
int3
dec
movsl
sub
add
in
jp
pop
pop
imul
sub
fisttps
push
iret
test
adc
decl
and
mov
ja
shrb
movsb
sar
cltd
cmp
sub
cmp
sahf
scas
and
in
or
aam
inc
and
jbe
xor
ss
in
push
loop
mov
in
in
xor
inc
in
mov
adc
mov
jmp
outsl
popa
jb
ds
lods
imul
adc
mov
ret
enter
fstpl
xor
inc
fucom
jne
adc
pop
jle
inc
jecxz
icebp
stos
inc
daa
dec
sbb
stc
inc
mov
cmp
xor
loopne
enter
xchg
in
jno
mov
dec
and
dec
fbld
dec
addr16
icebp
mov
xorb
scas
push
sarb
inc
call
inc
sub
andb
out
outsl
push
jbe
lock
cmpsl
pusha
rorl
inc
push
dec
push
or
sbb
inc
mov
popf
xchg
aad
fldt
push
aaa
push
hlt
pusha
push
dec
sbb
mov
add
adc
in
pop
jle
int
daa
cmp
outsl
fdivl
outsl
xor
movsl
inc
sub
mov
in
iret
int3
lret
scas
push
insl
jge
fisttpl
pop
and
and
ficompl
pop
iret
fstpl
leave
test
outsb
add
sbb
outsb
test
add
or
cwtl
and
xchg
xor
imul
xor
dec
jb
lcall
sbb
adc
shll
push
imul
ret
xor
ds
call
aam
iret
inc
pop
int
sub
mov
pop
imul
xor
filds
or
cmp
pop
xchg
mov
and
outsl
lret
add
stc
or
jle
mov
add
imul
adc
enter
xor
add
pop
jle
xchg
mov
popa
popf
mov
pop
sbbb
stc
mov
ds
cld
lcall
mov
push
fdivs
xchg
mov
inc
repz
addb
outsl
cmp
and
mov
dec
mov
movsb
mov
imul
xchg
arpl
add
pop
inc
xor
sub
les
pop
sbb
mov
test
rolb
popf
mov
cs
cmp
mov
pop
ret
cmp
outsl
aam
jbe
pop
pop
push
out
ret
test
sub
push
out
fdivrs
lods
fisttps
jnp
nop
ljmp
dec
ss
mov
mov
xlat
loope
xor
addr16
xchg
pop
ja
mov
lock
or
shlb
pop
call
add
mov
fs
sbb
insb
in
jb
mov
stos
xchg
lock
sub
xchg
lahf
std
call
test
std
lret
fdivrl
shll
jnp
mov
adc
or
scas
sub
add
jb
jnp
imul
aas
fistl
sbb
jbe
scas
push
int
xchg
xor
pop
shl
movb
jae
lods
leave
aad
ss
movsl
sbb
aad
out
out
popa
rolb
xchg
cmp
je
jmp
mov
cmp
cmpsl
push
repz
cwtl
lock
sub
je
pop
sar
jg
push
divb
mov
xchg
in
enter
jne
mov
int
in
mov
mov
test
mov
inc
inc
scas
dec
aad
xlat
ficomps
lahf
jp
int3
push
mov
test
mov
push
pop
lock
fincstp
mov
lcall
daa
jecxz
sbb
stos
cmp
cmc
sahf
inc
push
add
in
and
dec
stos
aad
pop
lret
xchg
jg
sub
iret
inc
mov
xor
or
aas
ss
cmp
nop
jo
xorb
jle
add
inc
mov
sti
shrb
mov
daa
lcall
popa
xchg
into
scas
mov
dec
xchg
mov
cwtl
mov
pop
mov
pusha
or
pop
mov
and
sbb
rclb
push
inc
push
lods
outsb
add
adc
scas
cmp
or
push
pop
outsb
pop
sti
jno
imul
in
adc
xchg
lock
xchg
pop
insb
sbb
aaa
pop
loope
xor
push
les
sub
or
cmp
dec
repnz
repnz
xchg
in
test
leave
fmull
pop
mov
dec
dec
pop
cmc
jp
decl
lds
cmp
ds
jge
popa
imul
in
sbb
xchg
outsb
jno
xchg
or
xor
xor
xchg
pop
mov
mov
and
out
cld
les
inc
test
stc
inc
or
icebp
jbe
mov
pop
or
mov
jl
push
fidivrl
push
dec
or
mov
lcall
push
add
std
imul
lods
es
jo
mov
mov
sub
mov
xchg
inc
mov
pop
es
xchg
dec
jle
les
mov
add
dec
jnp
insl
je
jo,pt
push
jns
iret
xchg
jbe
xchg
shlb
lods
and
loopne
sahf
push
cs
jmp
add
leave
rorl
mov
enter
ljmp
xchg
scas
imul
or
icebp
xchg
xor
push
adc
push
and
out
jb
pop
jb
xchg
mov
pusha
inc
xchg
fiaddl
loop
xchg
cmpsb
mov
mov
inc
jp
mov
xor
add
sub
mov
or
in
dec
fidivs
sub
insl
ret
dec
pusha
or
add
add
leave
movl
repnz
notb
aaa
outsl
test
dec
sbb
jge
addb
and
pop
stc
psubsw
push
inc
and
leave
in
insl
add
mov
and
xchg
dec
ja
mov
or
mov
out
fsubrl
je
je
fsubrs
std
inc
repnz
and
imul
xor
dec
enter
mul
jne
sub
xchg
ret
inc
inc
pop
and
pop
test
fsts
lret
pop
xchg
pop
dec
jmp
shll
xchg
mov
sbb
push
inc
dec
pop
hlt
xchg
jo
insb
mov
mov
sbb
pop
and
xlat
repnz
gs
adc
test
js
mov
dec
jp
std
pop
fldcw
std
adc
mov
and
mov
fcos
adc
popf
leave
pop
xchg
push
lock
imul
pop
gs
test
or
ret
fcoms
inc
jl
nop
lahf
insb
movsl
and
in
mov
xchg
ss
sub
mov
cmp
fists
or
pop
add
dec
iret
mov
shlb
push
and
fadds
mov
insb
imul
out
jmp
in
jno
jl
test
outsb
insl
or
aas
pusha
cmp
lods
add
and
bnd
inc
dec
jae
or
hlt
xchg
adc
idivb
je
xor
ret
add
lret
cmp
mov
mov
les
mov
repz
inc
cld
jae
mov
dec
or
inc
dec
ljmp
popf
rorl
icebp
jmp
sbb
std
adc
push
add
pop
in
das
jae
push
jbe
pushf
cmp
mov
or
xchg
push
movsl
xor
fidivrs
xchg
cmpb
out
push
pop
adc
mov
arpl
insl
adc
aad
rcrb
test
aam
mov
addr16
hlt
dec
sub
push
popf
scas
insl
pusha
sti
sbb
stos
test
jle
and
cmc
adc
dec
pop
insb
dec
add
push
stos
inc
sbb
and
push
xorb
in
mov
jle
xorl
popf
pop
add
and
popf
sub
neg
or
addb
cmp
xor
pop
cmpsb
fimuls
cltd
mov
call
cli
fwait
mov
test
ret
pop
push
test
dec
js
mov
push
je
movsl
mov
loopne
mov
aaa
sub
dec
in
jo
test
gs
test
out
ljmp
add
jp
pop
xor
push
cltd
jb
imul
pop
sub
fistl
ds
sbb
in
imul
cmc
cmp
fadds
inc
cltd
inc
sti
sbb
in
or
pop
cmpsb
sbbl
sbb
das
inc
fdivrs
test
dec
and
in
ret
stos
arpl
push
movsb
setno
mov
jge
dec
jecxz
mov
add
jg
lret
add
adc
dec
imulb
ror
divb
fstpl
xor
jnp
xchg
xchg
or
inc
adc
dec
aaa
jae
sub
jne
movsb
mov
iret
ss
in
xchg
das
xchg
test
lds
addb
popf
xor
push
mov
addb
jge
out
out
jo
icebp
inc
outsl
pop
pop
aam
shll
test
cmp
sbb
and
dec
push
or
add
cmp
mov
loop
pop
mov
sub
xor
mov
lret
stc
sub
insl
pop
icebp
and
mov
sbb
fwait
and
mov
cmpsb
sub
adc
and
xchg
lcall
leave
mov
sub
adcb
lock
mov
or
rcrl
sbb
aam
ss
add
test
loopne
sahf
shr
pop
fstps
sar
cmp
ja
movsl
or
je
push
jne
cmpsb
inc
adc
fbld
jmp
jno
mov
pop
or
adc
mov
shll
in
xor
dec
ret
xlat
aas
test
add
jnp
dec
and
push
jae
xchg
xchg
test
fildl
cs
rclb
pop
and
cmp
fs
sar
lret
xchg
hlt
in
das
loop
cmp
mov
xchg
shlb
repz
es
std
lods
adc
test
shll
sbb
and
test
add
push
or
stc
out
dec
pop
push
add
sbb
out
lret
stos
pop
dec
adc
in
js
andl
imul
adc
les
dec
jb
sahf
adc
sarl
sbb
bound
cmp
xchg
jae
leave
stos
xor
jno
adc
repnz
dec
repnz
push
jge
insb
pop
test
pop
mov
mov
fistpll
ja
jae
outsb
mov
ficoml
insl
jbe
lock
fdivrl
inc
movsl
movb
push
cmpsl
or
xchg
rcrl
out
xchg
popf
outsl
sub
cmpsb
iret
mov
scas
pop
fnstcw
lds
cld
push
das
je
lret
lret
vcvtss2si
ja
rcl
pop
into
and
mov
xlat
les
pop
sbb
lret
jno
xor
push
jno
dec
sbb
mov
jle
repz
mov
xor
lret
add
cmp
or
add
mov
notb
imul
or
mov
jno
cmp
pop
addr16
test
sbb
jp
add
cmp
lahf
daa
mov
sahf
inc
adc
push
push
sbb
mov
ret
push
test
outsl
es
into
in
mov
mov
out
push
cltd
push
sub
out
sub
out
test
pop
faddl
inc
sbb
test
cmp
in
jge
rcll
push
into
mov
jno
rcr
stos
cmp
mov
or
repnz
mov
pop
xor
push
aam
sub
adc
stc
arpl
push
sub
xor
sub
or
adc
add
fs
add
sub
mov
push
cld
in
mov
test
popa
fadds
pop
jl
imul
rep
mov
push
jg
cmp
dec
mov
lods
outsl
jmp
lcall
xchg
stos
cmp
in
or
adc
cwtl
push
dec
jae
loope
call
mov
sbb
pop
andb
lret
push
mov
mov
imul
cs
dec
mov
dec
je
repnz
inc
outsl
push
push
mov
cwtl
inc
mov
shll
and
lods
jle
pop
fnsave
push
xor
fiaddl
mov
mov
leave
dec
ljmp
fcompl
mov
stos
mov
test
mov
inc
sub
aam
hlt
push
sub
and
fwait
add
jae
orl
hlt
inc
ret
sbb
jl
push
xor
loope
int
les
mov
rorb
push
je
cmc
aad
inc
pop
call
cmp
sbb
dec
mov
or
push
lock
outsb
insb
jae
cmp
mov
sti
push
aaa
sub
cli
scas
cld
adc
or
lods
aaa
xor
test
js
push
lods
gs
xchg
rolb
inc
lock
fpatan
popf
push
dec
fbstp
cmp
bound
scas
pusha
sahf
jle
les
imul
push
test
js
sbb
std
mov
sarl
xchg
push
in
xor
mov
rcrb
lret
es
push
dec
or
sbb
cmp
js
aad
testl
ret
ret
cmp
hlt
add
xor
inc
inc
mov
pop
fistl
std
mov
add
loope
xchg
loope
clc
jnp
and
pusha
add
aas
mov
in
sqrtps
or
movsb
fxch
rolb
adc
inc
mov
jle
inc
mov
push
inc
pop
nop
adc
pop
xor
mov
mov
push
in
scas
aad
mov
stos
pushf
xor
frstor
into
ret
loopne
stos
loope
mov
or
inc
inc
mov
imul
push
sbb
pop
bound
mov
gs
push
aas
cmpsl
or
xchg
int3
sub
xor
lret
cs
out
cmpsl
call
mov
lret
xorl
rcrl
ret
push
jmp
ljmp
fists
mov
adcb
ja
scas
data16
pop
or
jg
and
repz
mov
gs
das
popa
mov
sub
add
pop
fadds
jle
lods
iret
ljmp
jmp
xor
je
shlb
movsl
adc
jb
sti
push
addr16
push
push
jge
jecxz
sbb
int
in
sub
and
outsb
push
sub
jp
add
in
jo
js
mov
adc
or
pop
rorb
cwtl
in
stos
and
iret
test
inc
mov
sub
or
jbe
add
notl
pusha
mov
std
jg
or
fcoml
pop
jecxz
xor
int3
dec
fsubr
xor
cmpb
rcr
jno
mov
add
cmp
jecxz
outsb
xor
insb
mov
repz
pusha
daa
sub
adc
cmp
lcall
sbb
sub
jge
aas
mov
ficoml
in
cltd
hlt
sbb
addr16
or
jge
adc
int
inc
mov
fsts
or
sub
pop
lock
cli
pop
pop
add
arpl
sbb
or
push
pushf
pop
iret
push
dec
adc
or
jg
xor
repnz
data16
xor
mov
mov
dec
sub
test
out
in
mov
xchg
das
bound
popa
or
dec
cmp
push
xchg
dec
push
addr16
or
sbbb
imul
and
xrelease
mov
in
dec
adc
or
cmp
andb
and
test
sbb
xchg
or
dec
add
push
rcrb
mov
movsb
insl
sti
cmp
movsl
add
xchg
inc
int
mov
in
and
push
nop
push
mov
add
mov
out
mov
sub
popa
jno
pop
cvtpi2ps
hlt
roll
sbb
out
or
push
adc
xchg
ds
inc
in
nop
test
dec
pop
repnz
pop
les
xor
jmp
pop
shlb
mov
and
sbb
dec
data16
mov
dec
arpl
jne
xorb
movsb
mov
add
or
jecxz
jg
scas
adc
leave
fnstcw
lock
fwait
or
sub
xchg
out
mov
lea
aam
mov
sbb
lea
fmuls
aas
add
jnp
jno
into
ds
push
movl
int3
mov
jg
nop
inc
cltd
inc
movsl
sbb
jmp
loopne
cli
cs
iret
pop
inc
outsb
inc
pop
xor
sbb
adc
xchg
data16
sub
jecxz
loopne
sbb
int3
shrb
pop
movsb
es
push
xlat
cmp
xchg
rclb
bound
jmp
fucom
cmp
cmpsb
inc
les
jo
push
mov
icebp
mov
das
leave
test
ret
je
sahf
das
sub
dec
sbb
cwtl
cs
scas
out
ret
inc
jle
mov
or
loop
ds
push
or
and
lods
dec
push
mov
push
jbe
repnz
sbb
xchg
mov
xor
test
inc
mov
jbe
or
dec
pop
in
mov
mov
mov
scas
push
adc
push
jp
sub
fadds
dec
inc
lret
shll
mov
adc
jno
sahf
push
mov
inc
inc
or
imul
cwtl
inc
lods
int3
xchg
pop
push
enter
pop
fsubs
xchg
add
push
leave
push
data16
ss
jb
int
mov
inc
outsl
rorb
enter
push
stc
mov
scas
dec
push
adc
das
dec
inc
dec
mov
test
mov
dec
push
ds
cmpsb
idivl
cmc
leave
popf
stc
mov
enter
dec
lods
rorl
bts
xchg
sub
inc
stc
leave
dec
stos
daa
xchg
rcr
pop
jmp
jno
pop
xchg
lock
fisttps
add
or
andb
jp
in
mov
mov
outsl
mov
clc
decb
ljmp
sbb
push
cmp
cmpsl
pop
mov
sahf
sbb
mov
xchg
nopl
xchg
out
xor
testb
xlat
xlat
mov
jg
xchg
sub
mov
or
lahf
dec
mov
pop
push
ret
shl
in
repz
fwait
pop
push
xlat
push
pop
and
leave
push
das
pop
shll
pusha
mov
mov
leave
cmpsl
stos
xor
xchg
sarb
gs
test
ss
ror
cltd
mov
cmpsb
in
clc
out
mov
leave
adc
sti
jl
inc
scas
sahf
mov
test
pop
push
jno
cmp
sub
ja
pop
gs
mov
or
mov
movsl
dec
ja
mov
out
hlt
int3
mov
movsb
lcall
xchg
fsts
mov
mov
in
mov
test
inc
push
test
div
inc
xor
push
push
push
mov
sar
mov
add
cmp
or
inc
fidivrs
xchg
out
push
pop
lods
ljmp
ljmp
push
cmp
xchg
mov
ret
imul
pop
call
sti
aas
ja
xchg
lods
dec
cld
xchg
mov
xchg
int3
ljmp
mov
jae
mulb
inc
testb
or
pop
repnz
pop
in
push
xchg
ret
push
out
sub
lcall
xchg
xor
adc
push
adc
cli
sahf
sarb
into
mov
pop
push
xchg
icebp
movsl
add
les
and
and
ja
mov
inc
pop
sub
or
push
dec
inc
mov
gs
mov
sarl
divl
mov
xor
sub
scas
hlt
push
and
cld
in
push
jb
mov
mov
outsb
pop
sub
dec
clc
dec
shll
dec
idivb
inc
jl
hlt
push
inc
sbb
imul
mov
lock
lock
lret
ret
mov
outsb
faddl
outsb
mov
xor
outsl
mov
dec
push
push
in
mov
xchg
lods
lock
add
or
in
je
xchg
cltd
fsubl
cmpsl
jle
push
dec
outsb
and
int3
and
pop
add
push
test
nop
xchg
test
pop
in
adc
stc
cmpsb
subl
add
rcrl
pushf
xchg
dec
adc
sbb
sub
ds
pop
cmp
popf
cld
cmpsl
inc
lret
sarl
mov
adc
inc
cmp
cwtl
js
xor
pop
notb
jecxz
arpl
pop
mov
sahf
shlb
scas
outsb
or
stc
mov
and
mov
jbe
push
inc
cli
repnz
test
in
icebp
fdivrl
popf
pop
mov
sbb
outsl
push
cmp
add
and
sbb
jne
push
or
fcompl
adcb
fucomi
fldcw
leave
add
push
addr16
rcrl
cwtl
andl
aam
out
movsb
inc
mov
sbb
sbb
mov
jecxz
xchg
adc
cmpsl
adc
jge
aam
test
lods
mov
divb
sti
mov
pop
mov
xorb
sub
shrb
xchg
sub
jnp
jnp
out
and
stos
or
int3
fmuls
fiaddl
pop
ret
xchg
scas
bound
cmp
pusha
push
cmp
jge
mov
cwtl
popa
and
sub
test
fdivrp
roll
mov
xor
xchg
or
inc
int3
fs
sbb
loope
fists
pop
push
pop
mov
dec
in
xchg
fisubl
jle
mov
cli
sub
mov
ljmp
jecxz
in
int3
lret
mov
ret
jl
mov
push
iret
xchg
add
aam
push
pop
pusha
daa
and
jl
push
inc
mov
xchg
pusha
cmp
std
sbb
jg
cwtl
cmp
aas
aaa
frstor
and
push
int
dec
jp
fistl
jl
mov
jle
mov
adc
inc
xor
in
mov
or
aam
imul
inc
push
mov
daa
jmp
adc
sbb
les
jle
pop
hlt
adc
test
sub
popa
ja
call
jnp
push
mov
mov
inc
adc
nop
add
loop
fcoms
and
mov
adc
stc
pop
aad
cmp
and
andb
ret
and
lds
out
pop
cmp
dec
lret
mov
aas
aad
mov
adcl
testl
xor
frstor
nop
or
leave
fists
mov
cmp
mov
hlt
fdivrs
aam
clc
lods
test
mov
sub
sti
inc
cmovl
test
or
subl
ror
std
dec
cmp
addr16
popf
scas
and
mov
cmp
mov
testb
sub
sbb
jg
xchg
xchg
sbb
mov
cmp
jle
xchg
push
mov
adc
imul
fisttps
dec
add
lds
inc
cmp
push
lahf
mov
in
or
xlat
xchg
sub
mov
clc
cmp
pop
mov
and
pop
pop
pop
fstl
dec
sub
pusha
push
dec
mov
jne
xchg
imul
out
lret
stos
addb
add
dec
neg
xor
popf
dec
dec
inc
sbb
mov
mov
jno
shlb
fsubr
push
andb
lcall
push
fnsave
jg
leave
cmp
sbb
test
and
sbb
out
popf
in
mov
xor
jae
dec
in
cltd
xor
loopne
lods
dec
and
repnz
xchg
fmuls
cmp
jae
push
add
arpl
sub
fistpll
stc
out
pusha
dec
pop
jbe
in
mov
sbb
repz
inc
mov
mov
sub
orb
pop
jno
test
cs
push
mov
out
sbb
lea
ret
mov
ds
jecxz
imul
cmp
sbb
bound
xchg
and
dec
notl
inc
add
lock
dec
fcomp
jp
loope
sub
pop
push
mov
sbb
pop
xchg
mov
xor
cmp
adc
testb
aaa
sbbl
and
fcoms
inc
adc
clc
jg
sbb
lret
xchg
sbb
dec
ror
mov
addl
out
pop
jno
negl
jb
bsr
ss
xor
xchg
and
movsb
sbbb
sarl
push
cmp
push
sahf
cld
dec
mov
push
out
fwait
sub
add
pop
test
subl
dec
aas
les
xlat
stos
mov
fldl2t
mov
inc
shll
cli
xor
das
pop
sarb
sbb
mov
pop
sbb
mov
mov
push
movsl
mov
andb
pop
cmp
mov
adcb
sbb
shrl
cmp
cmp
cmp
int3
out
jns
jmp
mov
xor
jl
aam
dec
mov
mov
mov
cmpsb
dec
outsl
and
xchg
test
clc
xor
mov
push
sub
sbb
mov
jns
push
push
loopne
mov
icebp
lds
sti
ficompl
mov
in
jp
dec
test
lock
movsb
cld
cli
frstor
adc
jno
pop
mov
jle
gs
mov
inc
incl
add
pop
cmp
loope
push
enter
out
mov
push
xchg
xchg
fwait
xchg
jno
mov
xchg
mov
mov
shrl
dec
leave
rcrb
inc
outsl
mov
enter
sbb
and
xor
mov
jno
push
push
into
movsw
inc
cmpb
add
pop
insl
movsl
xor
repz
cmpsl
jmp
out
mov
cmp
inc
test
pop
xor
dec
lea
mov
jge
push
stos
into
xchg
pop
rcrl
sub
loop
and
cmp
ja
xchg
in
imul
sbb
test
and
or
xchg
clc
ficoms
sbb
xor
lds
test
repnz
test
jns
ss
inc
jb
mov
and
mov
mov
fsubrp
mov
rorb
xchg
and
cmp
mov
fs
add
scas
stos
and
aas
inc
cmp
lret
popl
sub
lds
test
lods
fbld
push
xchg
xor
pop
std
mov
dec
cmp
jne
mov
pop
fs
lahf
mov
cmp
stos
shrb
in
movsb
sub
push
push
and
repnz
jae
or
mov
nop
and
arpl
cltd
loopne
jno
mov
shll
popf
stos
in
add
mov
inc
dec
or
insl
aaa
xchg
ffree
adc
out
pop
cmp
lods
das
iret
xchg
out
push
fxch
popf
int
les
cs
out
cmp
sub
pop
xchg
mov
cmp
das
and
inc
call
pop
pop
dec
mov
adc
push
push
sub
sbb
add
add
arpl
cmp
sbb
sbb
lret
jle
les
das
mov
shlb
insb
dec
add
mov
and
sbb
pop
xor
dec
adc
xchg
and
sub
or
cmc
cld
inc
nop
into
out
adc
or
adc
xchg
mov
setge
sub
mov
fcomip
mov
cmpsb
fucomp
or
xchg
adc
pop
xchg
sub
insl
in
xchg
jb
scas
pushf
mov
sub
xor
adc
jp
adc
popa
pop
fistpl
fdivl
push
jno
popf
pop
mov
pop
xor
int3
push
sahf
outsb
outsb
test
daa
mov
mov
pop
pop
dec
fcom
shr
and
dec
xor
xlat
inc
js
xor
xor
out
cld
push
jge
lret
jbe
sub
or
adc
jg
mov
pop
jmp
dec
movsb
mov
xchg
loope
mov
cs
std
loop
sbb
jecxz
pop
ret
mov
sub
jnp
divb
es
jnp
xor
add
into
lret
mov
sar
hlt
sub
inc
sub
mov
sub
xchg
mov
pop
jae
out
aaa
adc
adcl
adc
inc
xor
dec
outsl
fnstcw
mov
addr16
or
test
mov
setno
incl
test
dec
or
dec
and
mov
mov
dec
add
jge
dec
ja
pop
mov
dec
push
rcrb
lahf
aad
cld
out
add
movsl
test
nop
add
dec
cmp
movsl
repz
data16
xlat
jl
mov
in
inc
and
push
popf
sbb
dec
aam
mov
pop
shlb
into
mov
jae
jp
ss
loope
shlb
jmp
pop
cmp
in
lret
fwait
mov
popf
mov
cmpsl
ljmp
mov
ja
and
pop
mov
and
icebp
sub
in
sti
lods
leave
sbb
jge
popf
jge
xlat
push
cld
push
int3
out
mov
lret
jge
xchg
mov
sti
pop
and
dec
pop
inc
cltd
mov
mull
hlt
pop
popf
push
xchg
mov
fcmovnbe
adc
xor
xchg
sti
add
fcoms
dec
loop
inc
inc
mov
mul
cwtl
cmp
dec
in
sbb
cs
push
jl
sub
mov
mov
loop
mov
adc
fwait
dec
cld
add
outsb
in
icebp
xchg
int
in
fstpl
jg
mov
cmp
dec
and
push
jmp
bound
sahf
xchg
lcall
adc
pop
test
cltd
leave
ret
rcrb
fprem
jle
mov
rolb
mov
lods
mov
mov
pushl
les
fdivr
fsubrl
xor
and
sub
mov
out
or
dec
jp
xchg
push
ja
jo
stos
clc
cli
jge
inc
push
repz
jmp
cmpsb
xlat
das
test
xchg
ret
pop
mov
jecxz
fadds
pop
xchg
add
push
pusha
jbe
movl
lret
pop
mov
in
hlt
int
pop
add
and
sbb
or
sub
clc
push
dec
dec
pop
mov
xchg
cwtl
xor
mov
mov
fstpt
cltd
pusha
xlat
jecxz
inc
arpl
mov
jg
pop
cld
adc
push
rep
mov
daa
xchg
push
lret
sbb
enter
pop
lea
xor
pop
fisubl
mov
sub
aad
out
inc
js
pop
out
loopne
jge
fnsave
pushf
jg
out
lret
mov
push
add
out
mov
adc
cmc
out
dec
dec
scas
outsb
mov
xchg
xchg
fadds
fdivrs
fs
bound
inc
insl
leave
or
stc
xchg
imul
sbb
test
push
and
push
adc
push
lock
daa
jmp
inc
lret
mov
stc
sub
cltd
sti
ljmp
fisttps
cmp
adc
shl
or
mov
add
fistps
xchg
ret
out
nop
dec
xor
sub
fstps
inc
std
add
test
imul
dec
movsl
imul
ret
and
dec
aad
mov
push
inc
mov
mov
dec
nop
or
ror
adc
es
and
xlat
popa
pop
jle
add
xchg
adc
andl
dec
movhps
in
push
adc
jbe
pop
push
jnp
adc
fisubl
jmp
icebp
loopne
mov
sbb
mov
mov
mov
dec
adc
shr
mov
jmp
xchg
es
test
or
loope
ljmp
mov
out
adc
das
xchg
dec
cmp
push
inc
jbe
push
mov
test
and
xchg
cmp
mov
mov
cmp
icebp
jo
in
xchg
lret
loope
inc
cmpsb
jb
push
aaa
pop
and
in
jl
lock
or
stc
pop
lret
mov
fnstenv
cmp
mov
subl
pop
lret
es
pop
jns
cmpsb
and
pop
push
popa
sti
cmp
push
cmpsb
mov
jmp
insb
dec
sub
and
ja
imull
jno
mov
jl
adc
xchg
adc
shrb
jae
out
sbbb
xor
jl
pusha
pop
mov
xlat
daa
jno
xlat
xchg
xchg
or
xor
arpl
jne
xor
int
int3
and
pop
notl
and
shlb
or
mov
mov
out
in
andl
mov
mov
mov
out
pushf
cmp
nop
es
test
insb
lods
adc
xor
push
mov
xchg
pushf
or
dec
pop
adc
push
ret
sti
pop
xchg
ss
outsl
insl
jle
cmp
xchg
shlb
gs
or
and
jb
xor
xchg
clc
nop
or
push
repnz
jne
mov
lods
cmpsb
and
je
mov
add
gs
clc
in
adc
andb
je
xor
dec
addr16
jb
mov
mov
lcall
mov
test
rclb
push
xchg
dec
or
inc
sbb
adc
into
xor
cltd
loope
cmc
out
pmaxub
and
dec
shll
addb
fldt
push
repnz
mov
mov
mov
int3
or
aas
leave
cltd
fadds
mov
lahf
incl
jl
es
push
int3
push
clc
or
push
cmp
and
out
in
push
enter
push
jno
sarb
push
call
xchg
xchg
inc
or
outsb
int
jns
xchg
test
inc
sbb
into
xchg
and
movsl
fisttps
dec
sub
mov
cmp
sbb
push
mov
xchg
cs
pcmpgtb
mov
fxch
jne
repz
mov
pushf
clc
addr16
cld
and
popa
xchg
dec
add
push
int3
or
fcomip
or
in
lds
repz
mov
or
pop
jno
xchg
fstl
leave
inc
cmpsl
in
sbb
call
sub
fs
adc
adc
popa
inc
dec
call
test
aam
sub
adc
call
pop
adc
mov
xchg
or
aas
or
adc
es
repz
jmp
mov
push
or
cmp
pop
adc
jecxz
dec
cmp
xor
ljmp
pop
lods
sti
push
push
fs
aas
fisubs
lahf
sarb
into
in
or
ss
movsb
pop
imul
cli
mov
fs
sub
sub
or
int
mov
mov
xchg
imul
adc
movsb
scas
sbb
test
out
out
loop
lods
lock
rorb
fidivrs
mov
fptan
aaa
dec
ficoms
jl
test
fisubrs
imul
clc
in
and
insl
out
mov
fstpl
pusha
jp
sbb
movsb
rclb
lret
ss
loope
inc
dec
mov
std
cmp
test
push
push
ljmp
xor
and
fnsave
loopne
andl
aad
out
jg
pop
adc
sahf
xchg
nop
cmp
push
push
fs
cmp
incl
aas
and
pop
push
and
xor
rolb
xor
mov
dec
test
ljmp
fs
pop
leave
loope
jmp
xchg
cmp
in
jp
mov
push
jge
push
add
adc
cmp
xchg
cmp
pop
dec
dec
lock
shlb
fwait
arpl
dec
push
repz
int3
dec
jno
xor
repz
adc
push
mov
mov
mov
jmp
xchg
add
rcr
call
push
je
loope
push
pop
mov
pop
pop
sets
testb
adc
fnstcw
mov
outsl
push
les
pop
jmp
dec
jge
popl
jns
sbb
cmp
xchg
mov
stos
jb
cmp
stos
xorb
test
addr16
sub
out
mov
mov
movsl
sarb
pop
pop
sbb
fdivrl
jp
dec
mov
fnstenv
xorl
mov
xor
test
mov
mov
jne
lret
insb
sub
cs
fistpll
in
push
fwait
aas
scas
jecxz
out
mov
hlt
in
loope
sbb
sub
jmp
clc
imul
arpl
adcl
sbb
out
pop
pop
jb
pushf
je
pop
enter
lcall
inc
push
xchg
mov
imul
lret
inc
mov
cmp
mov
xor
popa
cld
lds
add
fs
lock
pop
fldcw
aad
or
cmp
xor
mov
sub
das
cmp
fldenv
sahf
fs
cmp
gs
in
andl
pop
leave
push
ds
hlt
test
inc
inc
sub
fidivrs
pop
xchg
ja
xchg
xor
or
mov
in
xor
mov
adc
sahf
dec
cltd
push
pop
inc
xchg
cmp
sub
pop
aad
lea
and
push
dec
leave
cs
xchg
lds
loop
mov
repz
cmpsl
pop
push
sub
std
insb
mov
lahf
out
inc
fisubs
mov
xor
cs
sub
in
or
js
dec
jne
dec
sarl
xchg
andl
mov
inc
fldt
dec
push
mov
loope
xchg
sbb
cld
arpl
mov
push
gs
in
cmovl
xor
lods
shrb
pop
shrb
adc
mov
cmpsb
pop
mov
cmp
test
and
sbb
jb
mov
aad
jns
push
or
jns
sti
mov
cmpsb
sub
std
xchg
scas
leave
adc
dec
push
or
add
mov
insb
push
dec
sti
push
iret
push
or
icebp
iret
fwait
cmp
out
lods
push
fsubs
adc
pop
jecxz
out
insb
or
jmp
jle
bound
cmpsb
mov
rcl
test
outsb
or
lcall
jge
test
sahf
add
out
jl
push
mov
fidivl
lds
push
mov
cmc
pop
repz
cmp
mov
insl
mov
and
out
stos
out
xchg
mov
mov
pushf
test
call
pop
fisubl
lahf
movsb
mov
pop
push
add
or
lcall
stos
and
imul
shrb
ds
fldln2
pop
inc
std
stos
rolb
jo
or
lret
je
fldt
pop
inc
add
int3
inc
inc
or
jge
das
pop
mov
push
push
and
jl
mov
adc
into
outsl
dec
inc
xchg
dec
stc
testl
pop
push
and
lods
popf
dec
scas
xor
or
out
xor
or
push
mov
lods
out
inc
pop
shrl
adc
mov
es
push
and
pop
xor
popa
or
rol
dec
mov
inc
repz
push
in
fxch
add
in
mov
mov
or
inc
mull
or
add
push
shrl
inc
sahf
sub
or
popf
pop
jns
ret
inc
fsub
stc
mov
popa
xor
sub
dec
adc
ret
out
sub
imul
les
xchg
mov
neg
mov
dec
data16
jo
jbe
dec
fsubr
repnz
and
aas
add
cmp
outsl
add
add
adc
divb
movsb
dec
push
and
jmp
fldt
repz
iret
inc
xor
push
mov
decb
enter
add
enter
movsl
ja
imul
inc
fldt
and
cli
rdmsr
jo
loope
xor
cmp
xchg
mov
imul
outsl
fcmovnu
insl
push
inc
bnd
mov
fs
lods
cli
sbb
je
xor
pop
and
lods
imull
xchg
call
add
imul
pushf
jne
loop
stc
loope
and
sub
mov
xchg
rorb
rcrl
add
pop
stos
sbb
mov
adc
cmpsb
mov
pop
nop
shlb
xor
ljmp
inc
sbb
imul
jecxz
sbb
subl
shlb
pop
mov
test
in
test
rorb
es
cli
iret
pop
mov
mov
je
aaa
sub
lret
push
adc
inc
sub
pop
jl
jno
mov
int3
fmull
fdivs
mov
leave
pop
lods
adc
les
mov
into
add
scas
notb
and
pop
fstps
xlat
cmp
mov
dec
arpl
jp
or
shrb
mov
outsb
push
push
dec
in
mov
stos
dec
repz
ja
cmpsb
mov
in
repnz
sbb
lock
stc
dec
mov
mov
and
jecxz
cmp
fwait
sub
or
sub
fsubrp
ljmp
addb
fldcw
movsb
pop
pop
std
xor
sbb
mov
adc
add
mov
aas
mov
push
in
pop
clc
aaa
scas
insl
orl
mov
mov
movl
mov
mov
push
inc
repz
jge
ret
adc
inc
jnp
cmc
pop
mov
adc
loope
rcl
shl
mov
les
dec
add
cmpsl
test
pop
cli
jg
bnd
push
mov
adc
inc
mov
pop
shl
sub
xor
int
test
pop
mov
test
out
enter
ret
fistps
pop
sbb
sub
xor
daa
xor
sbb
mov
jbe
popa
js
push
mov
sbb
leave
jo
push
jb
mov
adc
lcall
das
xchg
cmp
inc
adc
sbb
shrb
arpl
push
pop
jb
lret
stos
ja
add
or
lods
fidivl
and
push
inc
js
test
sti
les
dec
repnz
outsl
mov
and
adc
xchg
xor
clc
test
leave
mov
adc
sahf
movups
imul
in
int3
jp
xchg
xchg
dec
stc
xor
mov
jno
lods
rcl
pop
dec
sahf
inc
mov
push
push
loopne
lock
cmp
and
mov
jl
adc
les
movsl
in
icebp
rorl
stos
call
enter
adc
pushf
movsl
in
xor
push
test
aad
pop
sub
mov
sbb
js
xlat
xlat
cmp
jge
ret
pop
out
cmpsl
push
cmp
scas
icebp
jnp
lds
pop
dec
lret
shrl
scas
push
cli
lret
aad
or
add
fisttpll
sub
dec
bnd
xor
test
inc
insl
out
xor
lret
and
jle
add
pop
add
outsl
pop
mov
or
mov
rcr
push
pop
popa
jnp
xor
stos
xor
ss
cwtl
mov
aas
adc
in
aad
repz
pop
sbb
add
jecxz
loopne
daa
pushl
pop
dec
shlb
lods
es
repz
popf
rcl
faddl
in
movsb
sarb
jp
adc
add
arpl
popf
cmp
into
jns
cmp
mov
mov
lds
adc
pushf
xor
mov
outsl
push
and
jno
sbb
les
test
sbbb
outsb
or
jl
mov
push
push
aam
ds
loope
aad
sub
mov
mov
pop
std
fisubrs
call
add
cmpsb
idivl
repnz
mov
loope
fists
xchg
cmp
in
mov
push
ret
xor
mov
xchg
pop
cmpsl
cmp
psrlw
dec
mov
loop
mov
lahf
xor
decl
jnp
xchg
mov
mov
wbinvd
das
jae
adc
negl
add
cli
scas
dec
xchg
ds
lods
adc
mov
jns
add
es
push
pop
test
mov
xchg
sub
xor
sub
push
pop
cli
aad
ja
int
xor
leave
gs
xchg
aaa
inc
pusha
xor
cmp
pop
int
lock
mov
dec
aaa
pushf
loopne
push
inc
pop
dec
movsl
stos
pusha
jle
in
xchg
jb
sub
lret
mov
mov
push
cmp
lcall
jb
jnp
or
test
sbb
pop
fwait
arpl
ljmp
shlb
or
adc
lods
dec
div
mov
jbe
scas
in
mov
xor
loope
add
mov
cltd
lcall
leave
movsb
or
insb
lret
fisttpll
mov
scas
lods
adcl
xchg
aaa
inc
sbb
pusha
movsl
and
push
pop
jecxz
mov
bound
xlat
in
and
ret
mov
cmp
mov
sub
adc
icebp
jnp
push
xchg
pop
imul
and
rcll
addr16
int
int
js
pop
testb
xchg
out
xchg
sbb
outsb
jmp
mov
mov
je
jbe
into
cmp
fildl
mov
mov
outsb
daa
xchg
jae
in
jg
orb
rcll
xor
sub
pop
xchg
out
and
xor
mov
lcall
ljmp
dec
push
decb
jb
jp
mov
mov
neg
lds
test
jle
mov
stos
and
add
mov
xchg
lret
das
sbb
dec
enter
jno
std
mov
jg
les
mov
xor
out
mov
fwait
rcll
mov
popf
cmp
xor
in
out
fisubrs
push
cmpsb
and
sarb
mov
imul
cmp
sahf
mov
mov
add
and
fcomip
cld
mov
test
adc
inc
xchg
jge
inc
push
or
xchg
jg
cs
aas
add
cld
movsl
adc
xchg
cld
sbb
cmc
es
adc
out
inc
mov
mov
out
cmc
push
lods
sub
mov
jmp
pop
stos
out
cmpsb
test
lret
js
adc
mov
shlb
xchg
fidivs
aas
mov
mov
fsubl
shll
add
out
lret
lcall
mov
and
std
int
dec
out
roll
insb
aam
xchg
adc
jge
fcmove
push
pop
jo
add
cmp
xchg
inc
xor
popa
cmpsl
loope
aas
loope
cld
fsub
xchg
repnz
mov
mov
std
lods
out
xchg
xchg
cmpsl
add
sub
cmp
mov
js
sub
lods
push
rcrb
movsb
mov
mov
mov
or
lock
pop
stos
cmp
xchg
mov
add
pop
dec
xchg
jno
mov
ret
sbb
mov
jae
dec
mov
and
int3
dec
or
js
pushf
or
jp
sub
icebp
sarl
mov
test
hlt
out
adc
adc
pushf
lret
js
mov
mov
js
divl
xor
mov
mov
and
lret
jae
test
scas
sti
ret
loop
test
rcrb
loopne
in
call
je
cmp
adc
jge
sbb
jb
je
dec
lret
push
sub
cmp
xlat
ss
jecxz
sub
xor
cmp
dec
mov
cli
in
popf
mov
fdivrl
lahf
push
pop
push
cmp
js
jno
jg
fisttpl
filds
jae
cmp
test
push
aaa
pop
repz
jnp
rcr
ficoml
cmp
jo
mov
std
lods
add
repnz
adc
mov
xor
adcl
test
movsl
mov
dec
jne
cmp
adc
sub
out
push
push
cmp
mov
icebp
cs
jbe
sbb
cwtl
cmp
mov
imul
mov
jmp
leave
gs
mov
xor
mov
inc
in
dec
cmpsb
fnstsw
jg
jmp
sbb
ficoms
lods
cmp
data16
pop
and
divl
js
mov
and
inc
loop
mov
adc
add
je
jle
arpl
xchg
aad
movups
adc
scas
add
mov
sub
fimuls
cmp
mov
pop
gs
dec
insl
out
addr16
inc
push
pop
shlb
repz
mov
sbb
push
pop
or
daa
call
out
aam
sti
or
mov
mov
sbb
adc
push
arpl
test
movsb
xlat
lods
loop
dec
test
rcrl
push
mov
or
xchg
pop
cs
adc
sbb
outsl
sub
mov
cmp
push
mov
inc
jae
ja
lret
adc
lea
xchg
and
mov
loopne
pop
or
jl
lock
jle
lods
scas
into
pop
pop
je
cmp
inc
push
pop
jl
and
dec
mov
mulb
dec
inc
addr16
lcall
outsl
sub
fcmovb
sbb
sub
test
repnz
sub
jbe
xchg
push
insb
jns
daa
push
rorl
xchg
decl
sub
in
sub
addr16
stos
std
xor
sahf
cwtl
out
add
loope
popl
aam
in
sarb
jge
mov
insl
mov
leave
lods
adc
lods
dec
fadds
push
mov
rcrl
cmpsl
cmc
cmpsl
movzbl
adc
stos
aas
sub
push
mov
adc
repnz
pop
fisttpll
shl
mov
pop
enter
pusha
xor
inc
mov
push
in
hlt
fstl
mov
mov
mov
xchg
pop
ret
fadds
xor
pop
les
mov
jns
jge
movsl
neg
leave
cmp
pushf
xchg
or
mov
push
xor
xchg
pop
cmp
pop
lret
pushf
sbb
adc
jle
out
test
cmpl
push
cmp
add
insb
xchg
mov
stos
loope
arpl
pusha
xorb
inc
fs
movl
aad
ljmp
addb
cmp
shlb
xor
in
divl
stc
popf
imul
xchg
push
sbb
jnp
testb
int
and
mov
mov
in
loop
rcl
pop
inc
mov
cmp
lods
faddl
mov
mov
xchg
mov
and
lods
cmp
clc
jg
xchg
and
sub
jnp
in
jbe
dec
aas
dec
aaa
lahf
mov
push
add
fstpl
mov
xchg
out
aaa
insb
dec
mov
push
pushf
inc
jb
push
aas
iret
cli
sbb
test
mov
mov
dec
jmp
enter
sbb
xchg
out
pop
iret
or
neg
cltd
data16
decl
test
shll
stc
scas
popa
xor
mov
lahf
mov
out
stos
aad
aaa
or
pushf
cld
mov
int
or
int
mov
lcall
dec
iret
cmc
jmp
daa
mov
jle
mov
lds
add
sub
dec
cwtl
or
vrcpps
and
enter
add
iret
push
rcrl
gs
pop
test
mov
cwtl
clc
aam
orl
loope
ret
fs
add
mov
dec
gs
les
add
dec
mov
mov
add
imul
sub
gs
xchg
cmp
xlat
push
mov
jno
jmp
push
popa
dec
ffreep
inc
aad
and
std
call
rcl
sbb
out
push
int3
jae
call
xchg
and
fwait
cmp
cmpsb
pop
sbb
mov
insl
lret
out
shll
push
loope
or
mov
sbb
dec
xor
sub
mov
sahf
adc
and
popa
pop
and
mov
repz
leave
mov
lahf
mov
mov
movsl
jns
add
shll
and
popa
sbb
test
pushf
sub
inc
sub
stc
in
das
adcl
aas
out
faddl
mov
jl
xor
ret
test
pop
test
mov
ds
xorb
xchg
je
insl
pop
test
out
push
jno
repz
fsubs
es
dec
mov
xlat
cmpsb
push
dec
inc
pop
clc
sbb
dec
movaps
dec
loope
mov
mov
dec
data16
outsl
loope
daa
sbb
cld
fnstenv
add
add
cli
imul
mov
inc
repz
xchg
add
cs
mov
jle
mov
inc
jb
loope
jo
in
pop
adc
outsb
movsl
and
xchg
pop
jns
fwait
subb
pop
sbb
scas
mov
scas
pop
push
js
enter
mov
or
mov
call
sub
stos
cmpsb
rorb
inc
data16
cmpsl
sbb
int
sbb
adc
clc
mov
hlt
popf
arpl
sub
mov
cli
and
inc
fnstcw
push
stos
xchg
sub
jecxz
pop
cwtl
add
rorl
aas
pop
repz
out
fcomip
shlb
adc
add
adc
xor
adc
sub
mov
ret
mov
mov
xor
hlt
xlat
js
dec
sahf
icebp
and
cmp
lds
les
lods
loop
mov
shll
ret
fcoms
jno
into
fdivrl
add
pop
lahf
xorl
inc
jne
push
push
and
movsb
fmuls
xchg
or
loopne
pop
sbb
inc
lahf
push
inc
sbb
pop
iret
xor
mov
sub
inc
dec
stc
das
stos
xor
in
xor
xlat
push
sbb
iret
jne
in
mov
inc
rolb
orb
jge
out
aad
rorl
int3
pop
ret
push
pushf
or
inc
cmp
jnp
cmp
lea
dec
ja
add
in
lods
or
cmp
jge
fstpl
imul
push
cmc
rolb
sub
test
rcrl
xor
fistl
or
pop
into
pop
lock
jnp
pop
in
dec
imul
mov
movsb
pop
xor
pop
sub
sub
mov
xor
int3
notb
dec
inc
fists
data16
mov
pusha
pop
scas
insl
movsb
jae
cmp
outsb
mov
in
pop
xchg
gs
pop
rclb
fnsave
test
cwtl
cwtl
xchg
cmpsl
cltd
out
sbb
roll
pop
js
mov
ror
fcmovnbe
mov
mov
std
add
adcl
ljmp
adc
xor
cmp
pop
pop
ss
lcall
in
adc
xor
sbb
jp
add
mov
sub
add
dec
or
lahf
fwait
add
push
out
jae
cmc
mov
pushf
add
adc
mov
jbe
frstor
jle
rorb
sub
test
lret
dec
xchg
fcmovnb
dec
insb
push
ja
mov
repnz
mov
mov
jge
push
scas
pushf
faddl
mov
sti
xor
sarb
adc
in
dec
xor
hlt
cmpsl
data16
and
je
fwait
mov
rorb
jge
test
inc
add
mov
dec
fidivl
or
push
dec
xchg
shl
push
clc
jb
stos
iret
pop
repz
xchg
jo
popf
ljmp
mov
sub
mov
mov
sub
or
sub
out
mov
notl
ss
sbbl
mov
sub
add
and
push
mov
daa
mov
or
and
pop
clc
and
dec
lret
je
filds
lcall
xchg
ret
mov
imul
dec
push
movsl
stc
cmp
mov
and
jl
les
popa
cld
mov
or
sub
test
imul
inc
test
jge
js
push
test
pop
mov
jno
mov
push
fcomps
adc
mov
addr16
rclb
jno
pop
and
mov
test
insb
mov
shrl
jmp
insl
lahf
repnz
xorl
jo
mov
push
insl
jbe
pop
add
xlat
test
sbb
dec
out
aas
imul
lcall
shrb
xchg
incb
add
cmp
testl
fs
std
lahf
mov
ljmp
lret
addr16
xrelease
lret
ss
movl
or
push
jmp
notl
fmull
xchg
cmp
push
cmpsl
mov
pop
xor
mulb
mov
cwtl
addr16
and
push
sbb
push
inc
jmp
jo
imul
lahf
imul
xchg
mov
sbb
jne
jecxz
mov
mov
gs
ret
cmp
test
jo
arpl
fdiv
shlb
rorl
out
in
inc
cmp
out
vcmpss
inc
pop
out
sbb
mov
pop
mov
xchg
iret
andb
lock
xor
push
adc
cmp
sahf
insl
pop
pop
int
ja
js
ljmp
mov
sbb
mov
pusha
push
mov
loopne
mov
mov
nop
add
mov
pop
cmp
stos
push
cmpsl
lcall
push
push
sub
lcall
movsl
adc
adc
sbb
mov
cmc
das
adc
jle
lds
insb
test
mov
jns
mov
push
test
jecxz
or
fiadds
pushf
xchg
dec
sub
cwtl
aaa
data16
sub
sahf
jno
mov
daa
std
cwtl
push
inc
cmpb
mov
sar
cltd
movsl
rcrl
xor
jb
pop
push
lahf
lahf
inc
adc
cs
hlt
add
cmpsb
and
inc
mov
push
gs
call
bound
icebp
sbb
ljmp
ljmp
sub
pop
dec
inc
xchg
push
hlt
nop
or
into
lods
xor
pop
jle
mov
adc
not
repnz
fiaddl
ja
mov
in
lods
rep
inc
pop
push
sbb
fisubs
clc
fsubr
std
icebp
loope
insb
imul
mov
movsb
push
jmp
daa
jb
inc
push
mov
daa
push
adc
imul
bound
es
out
xor
nop
repnz
js
insb
push
push
mov
scas
sbb
fstps
jno
and
lds
lock
dec
jg
sub
clc
sbb
fsub
jp
jo
and
pop
hlt
ficoml
mov
lods
jg
orl
scas
filds
pop
mov
mov
aam
in
movsl
std
mov
push
cmp
xor
test
add
lods
inc
sbb
adc
cld
or
stos
add
outsl
xor
in
xor
vminps
cmp
lods
mov
sti
jge
and
dec
incl
movsb
mov
and
pop
xchg
fcomip
jne
orl
xchg
push
pop
push
sbb
lods
pop
pop
call
cmp
cmp
sbb
lea
push
sbb
xchg
mov
out
sub
jmp
scas
mov
ret
xor
push
js
xchg
loope
mull
fwait
dec
adc
mov
sbb
lcall
jb
cmp
lock
jnp
sub
mov
divl
mov
xor
mov
shl
adc
jo
frstpm(287
dec
enter
dec
stc
xchg
adc
pop
cmpsl
ds
out
notl
fwait
adc
cmp
and
jg
mov
ja
pusha
lds
fstps
xor
cmp
cmpsl
push
es
xlat
jns
push
pushl
sub
adc
or
out
rcr
pop
push
add
gs
imul
jo
jecxz
cmp
lret
push
sub
mov
pusha
jae
test
adc
xor
mov
xchg
adc
repnz
incb
test
ds
sub
aad
daa
push
xchg
call
sub
fs
sbb
imul
test
or
cmp
je
lahf
shl
jns
push
fistps
inc
jl
in
cs
xor
or
insb
ja
inc
popf
stos
out
mov
pop
pop
dec
insl
das
cmp
fmuls
call
mov
mov
lcall
or
xchg
lock
xor
cmp
stos
pop
lods
xor
xabort
sub
ds
inc
jmp
addr16
stos
lock
fyl2x
xor
aad
pop
loopne
stos
jle
xchg
adc
xorl
dec
cltd
cmpsb
xor
stc
mov
push
add
sti
push
popa
mov
sub
into
sarl
xorb
out
mov
fsubp
insl
scas
xor
mov
sub
sub
pop
icebp
mov
sub
mov
mov
popf
fwait
gs
cld
shl
jnp
mov
sahf
jl
mov
stc
pop
shll
test
jno
aaa
hlt
jnp
fstps
lock
xchg
lret
aad
clc
divb
inc
insl
xlat
mov
clc
nop
push
test
dec
aam
scas
and
jg
in
adc
and
js
fcomp
cmp
xor
sbb
add
daa
xor
mov
sub
mov
jmp
sub
mov
icebp
cli
adc
test
jp
inc
sar
inc
cmpsb
dec
rorb
cmp
adc
dec
mov
loope
aas
ljmp
rcrl
inc
repz
mov
test
shll
inc
dec
test
addb
push
lods
add
stos
dec
xor
lret
les
clc
push
mov
push
fsts
and
jmp
mov
fbld
scas
mov
hlt
xor
mov
mov
insl
dec
out
jmp
in
movsl
addr16
gs
dec
mov
sub
loopne
js
inc
call
or
cld
adc
addr16
push
jl
xor
insl
fisubs
push
sub
or
and
adc
pop
adc
insl
decl
nop
aas
daa
jo
mov
cld
lds
mov
adc
dec
js
andb
jmp
xchg
pop
cmpsb
push
andb
push
mov
inc
clc
ret
xchg
cld
insb
jecxz
dec
mov
mov
out
insb
mov
sbb
jl
mov
dec
out
rcll
lock
lahf
nop
repz
in
sbb
adc
icebp
and
lret
inc
lahf
pop
into
test
out
ss
and
sub
mov
insl
or
pusha
pop
js
fisttpl
pushf
pop
imul
lret
add
mov
test
jae
xchg
push
pusha
pusha
cmp
aaa
mov
std
test
and
push
pop
roll
and
push
jg
lods
mov
cld
push
mov
and
adc
jnp
or
test
ds
std
mov
jmp
test
cmp
mov
gs
xchg
mov
cmp
sbb
xchg
or
cld
add
aaa
adc
fstl
jge
mov
adc
mov
repnz
inc
jg
aam
sub
aam
mov
roll
mov
cmp
sbb
call
push
sub
push
sub
sub
insl
hlt
mov
cmpsb
dec
push
ja
div
cltd
lods
dec
sub
pop
mov
in
mov
jp
imul
xorb
dec
int3
or
sbb
push
add
ret
sbb
sub
cmp
ret
xchg
push
jb
cmp
cmp
mov
clc
xchg
xchg
fst
pminub
sub
jo
clc
pop
fsubrl
out
or
xor
in
adc
xchg
fisttps
in
lods
es
fbstp
hlt
mov
push
mov
mov
pop
cmp
testl
sbb
stc
stc
in
inc
cmp
and
cld
mov
xor
mov
mov
das
adc
rol
mov
fisubl
insb
mov
push
jbe
call
movsb
and
fadd
sub
mov
xor
mov
scas
fnstcw
add
and
push
push
mov
mov
mov
mov
test
xchg
add
push
shlb
lods
mov
loop
jge
out
jp
adc
cwtl
or
xchg
lcall
ret
cmc
xchg
adc
cmp
das
pop
push
movsb
lret
mov
pusha
add
inc
push
negb
bound
cmp
mov
in
jne
loope
outsl
mov
cli
cmpsl
lods
jle
hlt
call
mov
ljmp
adc
mov
dec
repnz
sub
dec
imul
ljmp
fisubs
dec
jb
xchg
add
test
push
out
into
pop
movsb
jb
xchg
push
add
cmp
push
test
inc
scas
inc
bound
fnstenv
ret
xor
movsb
mov
mov
and
or
shll
or
enter
add
push
hlt
stos
or
es
in
lahf
or
mov
xchg
pop
xchg
adc
lret
xor
jns
xor
mov
jb
cs
push
ficoml
lock
clc
test
les
sbb
and
mov
lahf
sub
or
jo
mov
dec
xor
xchg
addr16
out
mov
addl
pusha
ret
jbe
out
arpl
imul
cmp
fld
mov
in
or
outsl
mov
cli
repnz
adc
mov
pop
sub
into
hlt
aad
xchg
in
jp
cmp
leave
inc
pop
aaa
mov
call
js
cmpsb
xor
daa
mov
xchg
int
aad
and
outsb
mov
loope
sub
arpl
rol
insb
adc
jecxz
scas
ljmp
mov
mov
dec
mov
pop
aad
jb
jge
sub
dec
fcom
lods
in
out
jns
addr16
repz
addr16
rcrb
in
loope
and
aad
xchg
add
leave
int3
lcall
icebp
shl
lcall
push
mov
or
fcomps
fildl
popa
fnstenv
or
cs
es
sub
jno
clc
jg
test
stos
push
shll
scas
cli
adc
loope
inc
ret
sti
stc
adc
cmp
arpl
cmpsb
ljmp
cmpsl
xor
loopne
daa
sti
add
fneni(8087
and
mov
push
dec
jp
mov
ss
gs
pop
sahf
idivl
xchg
ret
jg
lcall
pop
inc
mov
sahf
cld
sub
cmc
iret
mov
pop
pop
ret
movsb
loopne
sbb
mov
push
mov
push
lods
lds
pop
addr16
call
push
call
daa
or
jle
jae
imull
mov
cwtl
xor
xor
enter
mov
fwait
ret
shrb
iret
mov
popa
das
shll
in
push
in
dec
or
cmp
std
les
stc
xchg
mov
and
xor
leave
insb
adc
cli
out
mov
add
notb
mov
rcrb
sbb
sub
jl
cmp
mov
xlat
lret
int3
jne
add
jecxz
dec
sbb
aaa
cmp
jns
inc
neg
ret
xor
jnp
cs
and
sub
cmp
or
lods
inc
mov
pop
aas
sbb
dec
or
xchg
scas
pop
mov
test
mov
push
enter
and
lret
pop
call
ds
xchg
inc
pop
mov
int3
nop
dec
lds
fldcw
call
adc
add
xchg
adc
aad
jecxz
fs
push
rcl
jnp
xchg
mov
sbb
pop
cmp
or
and
loopne
orl
mov
sub
pop
loopne
cmp
cli
pop
cld
push
xchg
and
stc
iret
push
sbb
cmp
insl
in
jmp
add
sub
sbb
cmp
es
xor
jecxz
jne
xor
stos
nop
jg
int
xor
icebp
mov
push
xchg
aad
jbe
scas
dec
add
jmp
dec
mov
rep
cltd
push
mov
sub
lcall
push
test
jmp
cmp
push
mov
dec
outsl
xor
jl
xchg
test
pop
cmp
iret
adc
fsts
rorb
lods
std
dec
push
jno
outsl
mov
pop
cmp
loope
pop
dec
clc
inc
jecxz
sub
fbstp
into
and
mov
lahf
out
insb
cmp
cmp
in
lret
sbb
sub
cwtl
xchg
mov
pop
xor
sbb
adc
shrb
shll
jbe
imul
rolb
pop
cwtl
sbb
adcl
push
xlat
bound
movsb
fdivrl
stos
push
and
ret
dec
add
push
push
fiadds
pushf
outsb
fistpll
mov
mov
adc
mov
clc
loop
push
mov
xchg
cli
out
mov
subb
cmc
add
lea
mov
dec
jle
mov
sbb
out
adc
inc
sub
jns
xchg
loope
sti
pop
mov
pop
inc
je
add
pop
mov
push
fsts
mov
adcl
movl
cmp
insb
push
rorl
jo
push
jecxz
push
loop
aad
ret
std
cwtl
in
cmpb
out
xchg
addr16
fdivs
movsb
into
test
jmp
add
mov
xchg
clc
jle
sbb
sub
daa
mov
pop
repz
loopne
mov
push
add
push
loopne
outsl
and
jno
mov
repz
adc
repnz
decl
call
inc
lods
sub
pop
xchg
xor
or
lret
fs
and
mov
xchg
ja
pop
hlt
outsb
mov
fistpll
dec
sbb
mov
aam
sub
xchg
jo
push
popf
jmp
gs
lea
lret
insl
lret
imul
int
adc
adc
sbbl
push
push
or
sub
cs
sbb
clc
popa
jae
xorb
or
mov
mov
or
push
shll
loopne
gs
loop
dec
xor
cmpsl
sub
dec
sbb
hlt
repnz
push
sub
xchg
js
pushf
sbb
ljmp
mov
adc
cld
jle
aam
mov
in
sarl
mov
aam
lods
out
pop
add
cli
xor
or
inc
sbb
out
xor
or
fwait
movsl
pop
leave
stos
cmpsb
sti
and
aaa
mov
xchg
xor
push
mov
movlps
dec
mov
call
gs
out
and
and
ss
dec
and
mov
les
stc
negb
movsb
jmp
inc
mov
popa
mov
and
movsb
or
sbb
fiaddl
jae
xlat
sbb
in
lods
stos
daa
orb
pushf
sbbl
pop
iret
sti
out
mov
repnz
js
mov
xchg
sti
xchg
loope,pt
fiaddl
or
subb
xchg
popf
mov
mov
cmp
into
pop
sub
adc
cmpsb
pop
add
fwait
aas
sub
nop
arpl
xchg
fst
sti
cmpsl
inc
mov
bound
push
mov
push
mov
xchg
xor
loopne,pn
sbb
add
and
dec
xlat
or
ljmp
xchg
mov
adc
pusha
pop
scas
mov
add
add
nop
sub
iret
cmc
add
dec
mov
adc
fnstenv
jbe
xchg
outsb
xchg
mov
pop
int3
loop
mov
ret
imul
stos
pushf
iret
sbb
aam
sub
xor
lds
mov
wbinvd
mov
arpl
es
std
js
xchg
push
outsl
mov
jno
push
and
sbbl
in
mov
pop
sahf
mov
jg
popa
xor
mull
cmp
ret
mov
xchg
out
outsb
fs
and
xor
adc
mov
mov
jne
lret
je
mov
or
fstpt
cli
test
fildll
inc
pop
dec
xor
sbb
cwtl
dec
inc
inc
pop
mov
sti
ss
or
dec
pop
mov
std
xchg
and
mov
cmc
lea
jo
push
test
xchg
sub
or
mov
jo
jle
or
add
or
lea
push
inc
push
jbe
addr16
sub
clc
loope
jge
in
arpl
inc
les
mov
stos
sub
sub
sub
inc
lcall
add
add
cmp
lea
sub
pop
fildl
jb
cmc
shlb
mov
sub
inc
xchg
nop
cmpsb
inc
ss
mov
movsl
xchg
sbb
xchg
leave
sbb
mov
ds
lods
sub
adc
cwtl
sub
xchg
das
inc
in
push
lods
push
jbe
inc
lahf
ja
nop
xchg
scas
out
loope
adc
roll
push
jns
in
add
lds
xchg
xchg
leave
cli
pop
xor
fidivrl
decb
test
xor
inc
mov
das
scas
lods
add
sbb
and
scas
pop
lock
cmp
mov
mov
movsl
push
iret
cmp
test
push
scas
sub
cmp
movsl
rclb
or
roll
adc
mov
jb
lock
xchg
push
push
lods
or
pop
push
jae
int3
inc
jns
xchg
into
xchg
fsubs
add
push
int
adc
pushf
xchg
out
sub
mov
sbb
xor
neg
test
mov
fs
mov
pop
pop
ds
pop
and
bound
xor
inc
sbb
ds
pop
and
les
sarl
subl
sub
subl
mov
mov
and
mov
imul
in
cs
xor
int
in
xor
pusha
push
enter
hlt
jle
jns
repnz
ret
adc
cmp
imul
mov
fwait
cli
jb
mov
jge
shrl
shlb
aad
mov
leave
ja
sbb
inc
cmp
dec
jle
pop
sbb
sarl
imul
sub
scas
jp
xchg
jmp
inc
out
in
push
cmpsb
push
mov
imul
cltd
jmp
imul
or
inc
es
frstor
mov
add
cmc
shr
mov
cmp
popa
daa
js
dec
aas
cwtl
ss
pushf
aas
dec
test
inc
loop
or
ret
iret
pop
xor
stc
mov
push
inc
ret
jbe
and
mov
bound
push
clc
imul
mov
mov
adc
sub
fstps
inc
clc
lods
movsl
push
jb
xor
mov
and
rol
push
jg
shl
cmp
mov
imul
xchg
xor
cmc
scas
mov
jmp
jns
xlat
pop
sub
icebp
lock
pop
aad
cmp
mov
mov
std
jl
into
fisubl
adc
xchg
jns
or
mov
movsl
cs
leave
mov
pop
pop
fisubrs
ja
push
fisubrl
sbb
push
xchg
xor
adc
fcmovne
push
and
jp
inc
cmc
mov
add
sbb
lds
jbe
inc
shl
cmp
jbe
mov
arpl
ja
sub
push
test
mov
xor
mov
lret
sub
les
insb
cwtl
sbb
mov
or
fcmovnu
movsb
cld
cld
mov
loop
lcall
push
loop
cwtl
sub
mov
mov
and
addb
int3
sub
mov
idivl
lea
pushf
or
and
xorb
loope
mov
or
jecxz
mov
popa
andl
out
iret
push
push
sahf
adc
push
mov
mov
ficompl
add
dec
rcll
adc
ss
repz
or
mov
mov
or
bswap
insb
cs
add
inc
mov
sub
jg
stos
push
int3
test
jae
mov
shlb
add
lods
jns
pop
inc
flds
jno
mov
and
xor
mov
and
mov
lods
ret
fiaddl
add
xchg
lret
iret
movsl
dec
ja
arpl
dec
or
nop
lods
sbb
aaa
jmp
rorb
loop
hlt
add
cmpsb
jmp
leave
repnz
mov
test
loope
rcrb
sbb
gs
out
shrd
cmpsl
mov
mov
xor
mov
sbb
xor
lock
sbb
add
inc
cmpb
aad
ss
adc
ds
or
addr16
std
jo
or
test
movsl
xchg
push
pop
add
xor
or
xchg
int3
lods
mov
inc
lahf
insb
xchg
arpl
or
in
fsub
add
in
sbb
and
jnp
jmp
loopne
push
add
dec
inc
nop
incb
ja
dec
jno
add
mov
lsl
test
pop
insl
jge
or
imulb
cmc
jp
outsl
stos
andl
aam
ljmp
push
imul
call
cmp
stc
outsl
inc
dec
mov
fsubr
imul
sti
addb
loope
in
xchg
movsl
lahf
sub
rcrl
rcrb
pop
mov
mov
pop
cmp
int3
inc
sahf
insb
pop
dec
fildl
cld
ds
cmp
jns
es
lods
and
mov
pop
jo
fst
daa
and
and
repz
add
jne
rcrl
mov
loopne
push
call
mov
add
push
sar
mov
pop
mov
inc
pusha
xchg
je
push
repz
out
rolb
mov
inc
movsb
ljmp
jmp
outsl
and
inc
test
mov
ret
cmpl
aaa
add
mov
fs
in
pop
mov
shll
adc
in
xchg
fldenv
int
jnp
xchg
push
and
add
mov
popa
in
sub
test
xchg
push
shlb
dec
sub
lds
lock
leave
push
cld
lret
clc
dec
lods
mov
mov
or
enter
ja
out
andl
mov
push
inc
out
data16
out
sahf
add
adc
insb
dec
inc
arpl
jp
aaa
pop
xchg
mov
or
ss
imul
and
dec
or
insb
aas
dec
es
sbb
test
call
dec
inc
mov
popf
cltd
aad
lods
loop
push
ja
andb
mov
inc
pop
cmp
add
add
fs
inc
cmpb
into
lcall
adc
inc
push
add
xchg
aas
fisttpll
inc
loope
jl
push
xor
push
stc
loope
shlb
loopne
movsl
cmc
negl
shrb
adc
cmp
jae
pop
lahf
imul
cmpsb
les
call
lret
mov
lods
sub
push
cmp
pop
pand
repnz
loopne
mov
gs
and
or
in
adc
iret
outsl
outsl
popa
mov
cmp
sbb
mov
clc
mov
mov
gs
mov
bound
adc
mov
pop
inc
in
inc
mov
loope
cmp
mov
dec
dec
sub
lahf
js
in
inc
shr
out
push
not
movsb
lea
lahf
inc
gs
sbb
cld
xchg
ja
xchg
push
test
jmp
inc
xchg
xchg
jle
insb
fs
dec
add
add
loop
xor
cltd
mov
cli
add
add
jmp
inc
sub
ss
inc
dec
cmp
and
aas
loop
cli
arpl
imul
and
in
cmp
dec
sbb
repnz
test
sar
aas
cli
lcall
dec
fcmovnu
int
dec
js
sub
out
pop
xchg
jb
push
lahf
jecxz
aaa
jno
xchg
out
andl
xor
jns
imul
lret
cs
xchg
aam
outsl
mov
jecxz
std
xchg
add
imulb
pop
leave
insb
int3
pushf
push
stc
mov
lahf
outsl
lahf
imul
xor
daa
lret
mov
ficompl
cmp
and
and
sbb
adc
icebp
jle
cs
adc
add
rcll
repz
inc
sbb
push
test
sub
pop
xchg
gs
xchg
jbe
frstor
cmp
insl
pop
or
and
dec
push
sub
add
push
pop
dec
jne
aas
jg
pop
dec
gs
sub
dec
dec
imul
mov
fldenv
cmp
inc
push
icebp
rdpmc
lret
mov
and
fcomip
je
adc
das
jb
aam
ret
sub
lock
rolb
xchg
sbb
flds
fdivl
scas
repnz
and
int3
stos
idivb
outsl
push
mov
int3
mov
outsb
jae
sahf
stos
or
jo
pop
and
and
sbb
insl
dec
or
test
xchg
gs
fnstsw
dec
daa
dec
loopne
ret
bound
cld
mov
nop
or
cmc
mov
sub
lret
mov
add
or
iret
mov
mov
adc
push
sub
dec
sbb
insb
rorl
and
xor
push
sti
and
daa
out
cmp
repnz
js
and
xor
shlb
in
cvtdq2ps
xor
lea
mov
aaa
lcall
lcall
pop
dec
cmp
movsl
inc
mov
jl
mov
dec
sbb
jb
pop
cs
or
dec
jp
sbb
js
clc
push
jecxz
mov
push
add
imull
ds
movb
pop
scas
stc
push
lods
hlt
mov
inc
adc
pusha
out
or
xchg
loop
dec
dec
mov
jnp
out
in
xor
cld
hlt
fdivrl
mov
add
xor
mov
cmp
push
mov
sub
ds
js
sub
fucomi
push
jno
jecxz
xchg
icebp
sub
xchg
test
movsl
outsb
push
sub
es
leave
shl
xchg
mov
xor
jns
pusha
jae
scas
xorb
or
push
cmp
or
mov
mov
or
jl
insl
lods
xor
lret
in
push
adc
fs
repnz
mov
rorl
sbb
es
rcrl
mov
fcmovb
pop
mov
fsubr
push
jecxz
mov
addr16
push
jbe
mov
les
mov
aam
stos
loop
mov
sub
stos
sbb
and
inc
dec
mov
xchg
dec
sbb
ds
adc
mov
jp
push
add
lcall
add
fsubrl
mov
fsts
aad
addr16
pop
test
clc
push
das
pop
ja
or
in
inc
cltd
nop
iret
mov
push
cld
sahf
and
stos
sub
push
or
jb
ss
popf
push
xchg
push
int
lret
std
add
cmp
aas
sbb
sub
xchg
dec
aam
lods
fs
aad
xchg
movsb
fsts
lret
xchg
aas
mov
pusha
jb
push
aad
pop
mov
mov
mov
dec
mov
lds
and
jo
cmpb
pop
push
pop
ja
adc
sub
mov
pop
pop
es
movaps
push
cmc
cmp
subl
stc
sub
mov
push
fldl
es
popa
fs
adcb
push
ffree
jge
add
daa
dec
xor
xor
imul
dec
std
jl
dec
iret
insl
push
cmp
aaa
aam
adc
movsb
mov
lret
repnz
xor
clc
push
daa
stos
in
ljmp
inc
xor
wrmsr
jb
int3
outsb
sub
push
repz
roll
xchg
pop
and
int3
out
push
lahf
mov
pop
jae
add
xchg
cmp
ja
and
loope
push
dec
inc
inc
or
jmp
sub
push
inc
sbb
adc
mov
sbb
sub
cmc
or
mov
test
and
lods
fs
mov
out
aad
inc
xor
stos
and
ss
pop
bound
mov
shlb
shrl
pop
pop
mov
dec
fcomp
pop
pop
sti
fmul
xchg
dec
pop
pusha
xchg
sub
lret
adcb
notb
fs
js
or
push
int3
jae
mov
fsubs
mov
dec
mov
sub
ret
cltd
mov
xor
jae
xchg
xor
aad
inc
inc
xchg
lahf
inc
jb
sub
lock
add
and
and
shlb
das
cmp
dec
or
push
push
inc
mov
out
je
mov
or
sbb
jns
and
dec
xlat
jecxz
dec
mov
into
pop
inc
xchg
xchg
ret
clc
fildl
mov
sub
cmp
leave
into
mov
insb
push
lods
xor
sar
jnp
fisubrs
sub
sub
fdivrs
ret
pop
sub
mov
ja
add
rcll
lret
jns
or
int3
mov
lcall
pusha
dec
jge
stos
aaa
in
scas
adc
cmpsb
insl
jecxz
or
xchg
imul
jbe
insb
cmp
inc
pop
mov
loop
cld
mov
inc
in
sub
inc
daa
scas
or
dec
add
out
xor
ja
hlt
fisubs
xchg
call
lock
test
add
mov
mov
jmp
dec
xor
stos
jo
push
fildl
jbe
or
outsl
jbe
lcall
cld
aaa
jmp
clc
ss
andb
and
pushf
adc
pusha
pop
mov
repnz
sbb
pusha
mov
mov
xchg
adc
pushf
ret
mov
repz
icebp
xor
test
fistl
sub
xlat
stc
lods
shlb
sub
insb
push
aaa
cwtl
xor
lds
jmp
adc
push
loope
pushf
push
inc
mov
pushf
inc
pop
inc
sbb
sub
or
and
ljmp
pop
xchg
pop
out
gs
out
cmp
push
inc
shll
or
mov
sub
lods
add
jmp
jns
mov
mov
nop
mov
cmp
cmpsb
bound
inc
cmp
jnp
jne
push
adc
adc
call
iret
sbb
mov
jg
xchg
xchg
fiadds
es
in
ja
pop
sbb
xlat
xchg
and
aas
movsb
inc
and
sbbl
xchg
add
movsb
push
pop
hlt
push
adc
xchg
repz
out
inc
insb
jno
add
mov
ds
cli
and
mov
push
mov
mov
repnz
shl
fistpl
lret
loope
nop
das
insl
fs
loope
aaa
and
mov
ja
fisubl
push
xchg
stos
test
fistpl
add
test
sbb
xlat
fmuls
adc
ret
pop
in
adc
jb
cli
and
ja
test
mov
or
add
mov
test
cs
dec
or
int3
test
xor
pop
cmpsl
aad
loope
xchg
aam
lahf
inc
or
xchg
ja
cwtl
mov
mov
sti
cli
dec
inc
jbe
stc
loope
int
mov
aam
jg
out
cmp
jg
add
inc
or
lods
mov
hlt
cmpsl
stc
push
mov
out
leave
dec
loop
std
pop
movsb
jne
jge
js
inc
aad
pop
stos
or
insb
es
js
sub
pop
jae
inc
fisubl
ljmp
test
jne
or
ret
xchg
add
ret
cmpsl
mov
push
lahf
cld
push
test
insb
xor
cmc
cmp
sub
repz
xor
fs
outsl
iret
and
or
fwait
cmp
leave
int3
mov
nop
inc
aad
enter
lds
inc
jp
cmp
in
fisubs
mov
push
sbb
test
ljmp
std
aam
sbb
fwait
ret
xor
push
pop
cmc
or
sub
push
iret
and
sbb
outsb
push
mov
xchg
add
fsubr
sub
mov
dec
push
mov
push
xchg
sahf
mov
mov
mov
xor
insl
push
mull
in
popa
mov
adc
mov
adc
aad
call
in
jno
mov
add
xor
jno
fidivrl
cmpsl
outsl
xlat
addl
add
mov
inc
or
add
movsb
fdivrs
int
cwtl
push
jp
mov
outsl
sub
jge
push
inc
fmull
mov
lret
xor
call
outsl
push
lcall
outsb
mov
sarl
ljmp
cs
daa
mov
add
fcomp
popa
sbb
js
outsb
sti
out
fidivrs
or
scas
leave
fistpl
stos
lahf
cmp
adc
adcl
jl
in
jns
or
popl
scas
jmp
jo
xchg
xchg
cmp
and
and
cld
ret
inc
jns
insl
dec
sub
cli
fnsetpm(287
addr16
testb
xchg
jle
lret
lret
adc
xchg
xor
sub
pop
ret
adc
cwtl
or
addr16
and
jge
in
sbb
int
sub
divb
cmp
fisubrs
sbb
imul
push
mov
rcrl
pop
xor
iret
lcall
repnz
aas
sbb
inc
pop
sbb
inc
aas
aas
adc
mov
sbb
scas
mov
xor
scas
and
in
arpl
adc
pop
out
pop
lret
outsb
out
adc
stos
inc
dec
popl
cmp
cmp
mov
pop
cwtl
sbb
popf
push
jnp
jg
cs
add
cmpsl
out
mov
mov
adc
lret
mov
dec
jbe
cwtl
fmull
fst
jp
and
xor
loop
mov
lret
xor
push
jp
scas
mov
lcall
ja
and
cli
imul
inc
pushf
test
out
leave
shll
lahf
lods
cltd
fsubrl
inc
and
icebp
cmp
fmul
pusha
ret
in
repz
sbb
mov
jecxz
and
iret
mov
leave
push
push
hlt
pop
pop
out
cmpb
scas
pop
xor
rol
and
in
sbb
cmp
out
xchg
pop
mov
jo
shrl
mov
faddl
adc
cmp
and
mov
or
call
gs
pop
sub
and
mov
cmp
or
cmpsb
test
xorb
pop
push
jp
in
and
xor
jmp
aaa
jp
or
loopne
lods
lds
jae
mov
ret
xlat
pushl
and
sbb
pop
fstpl
repz
stos
mov
xchg
icebp
push
xor
subb
cli
xchg
mov
and
sub
data16
mov
sahf
xchg
xor
iret
or
jae
out
and
leave
ds
or
or
push
mov
ret
stos
movsb
aaa
adc
dec
mov
pop
fcoms
xor
in
movsb
xchg
mov
mov
jne
jle
pop
std
xchg
pop
sub
cltd
add
xor
call
lds
xchg
and
mov
ffree
xchg
xor
idiv
dec
stos
lods
and
xchg
and
sbb
dec
stos
and
pop
cltd
test
push
rcr
jb
jle
ss
gs
xchg
dec
ret
mov
dec
inc
pop
es
arpl
test
movsb
lcall
cmp
mov
dec
or
and
mov
inc
sar
cwtl
gs
iret
add
int
pop
jns
test
sbb
fiadds
scas
fsubs
adc
inc
movsl
cmp
imul
cmp
ljmp
rcrb
cmp
rorl
mov
in
cltd
jl
push
push
mov
jbe
sbb
xchg
mov
push
mov
dec
lods
dec
jne
rclb
pop
popl
fnstsw
mov
inc
or
nop
popa
cmpb
mov
mov
fimull
cwtl
and
inc
std
cmc
adc
push
leave
rorl
popa
and
addb
xor
in
rorl
mov
dec
cmpsl
cmp
jl
lret
movsl
or
mov
out
mov
popa
aas
dec
pop
mov
pop
mov
arpl
sti
pop
test
lock
pop
mov
aas
imul
cs
mov
adc
bound
mov
ret
fcomps
push
lea
inc
or
cmp
push
lods
push
pop
outsl
jbe
add
sti
mov
and
push
imull
lea
inc
dec
and
cld
icebp
nop
mov
negb
call
pusha
cmp
jle
lds
call
fiaddl
pop
cli
subl
jl
std
and
pop
fiaddl
push
xor
je
lds
jmp
lahf
jne
inc
jecxz
clc
fists
leave
adc
into
dec
add
out
enter
aas
mov
and
sarl
push
imul
cld
pop
sbb
sub
and
lahf
ficoml
pushf
and
push
dec
or
jle
adc
mov
sub
repz
pop
leave
cs
jae
ljmp
shlb
add
xchg
push
fisubl
scas
xor
xchg
push
cmp
les
jnp
mov
insl
push
jns
nop
fnsave
in
push
push
repz
pop
jbe
pop
call
push
sub
jb
sti
lcall
mov
cld
das
sub
sub
dec
fnstsw
iret
les
push
sbb
sub
into
jae
add
push
repnz
roll
mov
jp
push
adc
dec
jecxz
jmp
mov
or
mov
cltd
xchg
lcall
ret
pop
lahf
adc
idivl
inc
pusha
push
jecxz
mov
notb
fbstp
mov
daa
das
xchg
add
mov
cmp
pop
scas
jb
out
mov
aam
push
xlat
and
int
iret
out
xchg
in
cmp
stc
lahf
cltd
xchg
adc
dec
fisttpll
push
movsb
or
pop
and
clc
sbb
push
jo
sarl
test
leave
pop
sbb
jecxz
iret
nop
int
test
divl
pop
push
xchg
mov
cli
jmp
andl
jle
addb
or
mov
xlat
cmp
push
jl
xorl
ret
outsl
sbb
shlb
fldcw
push
out
push
push
pop
ret
js
test
jmp
adc
jb
add
ljmp
std
pop
aas
loopne
in
pop
insb
fildll
mov
sub
dec
sub
push
jp
aad
ret
xchg
sub
nop
mov
mov
pushf
test
jge
shlb
stc
pop
rorb
or
mov
sub
adc
add
dec
mov
xchg
and
add
aam
notb
js
es
orb
xor
movsb
in
lods
jg
addl
shrl
push
xchg
test
jp
ljmp
sbb
cwtl
mov
addl
fidivrs
jle
xchg
push
test
push
push
mov
ljmp
mov
aaa
fldl
xchg
enter
je
pushf
popa
push
icebp
pusha
inc
xor
sbb
jp
mov
in
stc
adcb
xlat
sti
pop
cs
sub
fwait
pop
mov
mov
hlt
test
scas
mov
lea
shlb
mov
insb
insb
testl
adc
push
dec
test
push
dec
data16
fmul
dec
addr16
push
cmpsl
ficoml
mov
mov
push
mov
adc
aad
aam
cmp
cmc
push
mov
sbb
out
dec
or
sahf
fadds
xchg
in
pop
sbb
adc
push
gs
mov
jecxz
mov
push
out
sahf
insb
push
jno
adc
add
out
inc
sub
mov
int3
mov
xor
pop
lea
daa
adc
adc
jg
and
xor
lods
pop
popf
sbb
data16
xorb
adc
xchg
cmp
out
mov
push
xor
mov
push
fdecstp
out
jne
aad
pop
mov
addr16
scas
mov
arpl
mov
dec
test
clc
xor
jmp
or
adc
sbb
insb
mov
std
sub
leave
clc
cli
adc
jno
jecxz
sbb
push
mov
icebp
and
imul
sub
cmp
cli
inc
sub
fdivl
jg
adc
sub
dec
or
inc
dec
xchg
arpl
es
mov
mov
cmpsb
add
mov
sbb
cmp
sbb
in
cmp
pop
push
lret
ds
push
daa
lock
cli
add
test
mov
imull
in
mov
or
lds
xorb
int3
mov
dec
sahf
pop
xchg
or
adcb
ja
movsb
out
outsb
scas
cmc
ret
subb
or
sub
int3
mov
pop
xlat
cmp
push
dec
shlb
int
jmp
mov
push
jbe
mov
lods
movsb
adc
clc
dec
jmp
inc
fcoml
jno
repnz
or
sub
inc
pushf
ja
sti
cmc
jg
cmpsl
lods
ds
lods
mov
xchg
mov
adc
sbb
test
jmp
cmpsl
xor
pushf
jge
jge
jns
popf
or
stos
sbb
call
inc
dec
dec
ljmp
and
fsubrp
je
scas
lret
pop
mov
cmp
mov
dec
es
add
xchg
daa
cmp
push
inc
push
aam
hlt
push
xchg
aam
nop
mov
hlt
cmp
and
sahf
cmpsb
dec
inc
mov
popa
shr
loopne
push
sub
movsb
xor
iret
insb
loop
fincstp
clc
xchg
pop
sbb
jmp
xchg
push
sti
test
cmpsb
pop
das
dec
mov
adc
rcll
xchg
loope
orl
mov
sbb
loopne
push
inc
jae
cmp
mov
cmp
call
add
call
xchg
in
cld
leave
imul
test
ss
mov
dec
push
mov
dec
cmpsb
ss
mov
pop
loope
add
cs
stos
call
sbb
pop
xchg
push
push
cli
cmp
adc
inc
cmovns
movsl
pop
addr16
dec
add
cmp
jo
sbb
lock
and
adc
arpl
cmovb
ffree
add
jb
xchg
orb
or
xor
lods
sbb
or
in
mov
mov
loop
mov
pop
imul
push
sbb
push
int3
js
aas
cmp
fisubrs
cmp
inc
and
arpl
xor
xchg
adc
jp
js
repz
mov
dec
movsl
adc
and
cltd
mov
mov
mov
xchg
push
test
lock
xor
push
lahf
in
into
sarb
mov
popaw
neg
mov
mov
and
xchg
loopne
imul
jp
adc
dec
jl
dec
in
jge
jb
xchg
push
and
push
jle
adc
scas
pop
mov
aas
xor
push
dec
mov
mov
jb
mov
aad
lock
cmp
add
dec
push
daa
xor
sbb
test
cmp
repnz
aad
jns
insl
in
ja
ret
adc
add
xor
sub
js
pop
decl
sbb
fldlg2
mov
mov
shrl
mov
push
cwtl
call
and
pop
pop
insl
jmp
push
and
sub
sbb
into
test
mov
mov
sub
shr
add
les
xor
int3
cmp
inc
xchg
mov
mov
pushf
loopne
jg
push
repz
pop
fmull
orb
xchg
in
dec
push
dec
lret
adc
movsb
push
xor
dec
pushf
mov
test
cmp
cmp
loop
cmp
dec
pushf
out
xor
inc
mov
mov
aaa
or
mov
dec
hlt
cwtl
fnstenv
cmp
jmp
out
imul
notrack
stc
scas
inc
mov
mov
cmp
cmp
xchg
inc
push
jmp
or
mov
sahf
aam
aad
cmp
imul
out
cmp
call
out
xchg
and
jb
push
xchg
ret
shll
mov
adc
mov
rclb
adc
ret
cld
pusha
sbb
push
fucom
jl
xor
pop
sbbb
loop
ret
cmp
and
xchg
cltd
fildll
movsb
loopne
aad
loop
mov
cmpsb
xchg
test
lcall
fsubrs
adc
adc
mov
cmc
pop
icebp
adc
test
jne
add
fsubl
push
movsl
daa
cmp
icebp
scas
xchg
xor
lret
mov
xor
sub
push
movd
and
out
rcrl
adc
xchg
js
subb
push
push
aam
jmp
movsb
pop
loop
es
imul
pop
mov
lahf
sar
push
sub
xlat
xor
sbb
aad
push
jg
dec
lahf
mov
into
fdivrs
jp
adc
or
test
pop
push
jp
imul
jmp
mov
and
sub
outsb
cmp
pop
test
pop
das
fisttps
mov
dec
dec
aam
aaa
lahf
cmc
sub
dec
mov
fnstenv
xor
mov
mov
xchg
aas
ds
rcrb
pop
and
lock
mov
out
sub
mov
sahf
cmp
xlat
xor
lret
jp
daa
push
xor
mov
jecxz
orl
lods
hlt
sub
das
jg
add
pop
aaa
rorl
mov
hlt
mov
and
inc
push
adc
push
sbb
adc
sub
arpl
add
inc
mov
clc
lret
push
test
outsl
and
adc
loop
stos
js
popa
inc
aam
clc
sub
mov
add
mov
mov
and
out
push
inc
mov
outsb
dec
aaa
pop
imul
pop
mov
fwait
mov
imul
lahf
das
addb
addl
adc
lret
dec
push
imul
loop
je
push
mov
xor
nop
das
pop
aas
jp
sbb
ja
gs
lds
jo
xlat
sar
jbe,pt
inc
pop
xor
es
fmull
xor
fstpt
add
fidivrl
es
push
and
loop
adc
shr
pop
cmp
lahf
adcl
jle
movsl
inc
rolb
jmp
jmp
add
outsb
aad
cmp
mov
rclb
mov
jecxz
enter
cmp
insl
sbb
movsl
or
int3
mov
pop
clc
hlt
cmpsl
push
add
mov
inc
lock
pushf
push
pop
je
sbb
loopne
adc
dec
add
adc
std
inc
sbb
push
push
test
jl
mov
jle
xlat
push
repnz
mov
pop
outsl
clc
mov
js
inc
push
test
call
clc
hlt
das
mov
loopne
mov
shll
sbb
pusha
xchg
push
jno
cld
mov
popa
inc
or
pop
dec
pop
sti
arpl
adc
pusha
xchg
jg
mov
add
and
add
xor
pop
adc
iret
popf
sbb
push
or
and
ret
stos
fnsave
pop
mov
mov
loopne
and
popa
xchg
dec
outsl
adc
mov
loope
jle
mov
mov
jle
int3
outsb
jp
lcall
loop
jo
lock
movb
lret
jbe
lret
pop
cld
jo
mov
adc
pop
add
outsl
clc
adc
test
cli
outsl
outsb
or
popf
lcall
out
lcall
int3
ret
pop
push
test
sub
imul
ss
jle
mov
xor
jg
lods
inc
fldl
iret
fldt
dec
jp
pop
ss
fucom
push
pusha
dec
xchg
push
xchg
xor
xchg
cmp
shrb
adc
cmp
mov
mov
in
ret
lcall
sbb
inc
movsl
xchg
gs
mov
xor
mov
test
xlat
sub
mov
mov
shlb
xchg
or
shll
mov
stos
shlb
stos
out
sub
dec
mov
lock
sbb
sub
jge
pop
adc
ret
sub
push
xchg
mov
cmp
or
mov
jbe
pushf
ret
leave
xchg
loope
or
and
iret
imull
mov
inc
or
and
pop
pop
out
push
cmc
aaa
mov
jnp
enter
cmc
jmp
insl
movsb
dec
mov
je
jl
aad
dec
enter
aas
loop
call
aad
jbe
dec
xchg
jb
dec
lods
mov
mov
shrb
sub
insl
jno
inc
jae
jnp
nop
dec
pop
inc
ret
dec
fistps
daa
fnsave
repnz
lret
sub
or
xchg
sti
xchg
jae
aas
sub
fcomip
dec
pop
inc
xor
cld
jae
es
out
sbb
jne
or
cmp
js
pop
pop
add
cmp
stos
mov
mov
data16
imul
pop
pop
subb
and
push
mov
pop
sub
push
xor
mov
pop
jecxz
orb
sbb
mov
pshufw
mov
mov
add
sarl
pop
mov
cli
out
mov
insl
in
rcr
adc
daa
jae
mov
xchg
pop
mov
in
xor
mov
pop
adc
pusha
dec
fistpll
dec
push
push
mov
xor
insl
and
in
inc
dec
loopne
sbb
cmp
nop
xor
cmpsb
mov
inc
sti
xor
jbe
dec
push
sti
mov
fdivrl
hlt
adc
sub
mov
and
add
cld
test
dec
push
scas
and
mov
cmp
mov
lds
fmull
je
pop
dec
sbb
mov
jl
push
and
cs
sub
dec
shll
lods
cmpsl
jo
cmpsl
sbb
or
dec
mov
insb
push
arpl
fwait
sahf
movsb
sbb
and
daa
orb
stos
bound
pop
lods
negl
sbb
cmpsb
insb
out
cmp
jb
mul
dec
out
mov
mov
pushf
arpl
or
clc
rclb
inc
pusha
dec
clc
xchg
cmp
and
or
dec
mov
jle
sbb
jbe
jno
cmp
cld
adc
add
dec
idivb
aad
or
jbe
jle
bound
cltd
cmp
mov
movb
cwtl
test
jns
jl
lcall
sub
xor
cwtl
jno
imul
cmp
repnz
in
push
cltd
insl
pushf
add
jecxz
arpl
outsl
or
sbb
test
pop
popf
or
add
jae
xchg
and
jl
data16
mov
cmp
in
mov
in
ret
or
push
in
cwtl
or
cld
mov
test
jne
push
testl
pop
add
jb
scas
call
mov
add
push
mov
lea
loopne
jne
movsb
push
or
testl
lea
adc
mov
mov
jo
sub
mov
mov
mov
inc
jmp
push
repz
call
jno
sub
inc
mov
fwait
add
pop
xor
mov
mov
add
adc
adc
add
out
ja
xchg
dec
pushf
orb
icebp
aaa
mov
shlb
mov
test
cmc
adc
in
push
pop
or
cmp
or
stos
jmp
mov
lds
mov
and
addr16
test
rorb
cmp
loopne
je
add
in
mov
or
jnp
xor
xorb
fs
xor
daa
sub
xchg
sbb
xchg
jmp
sbb
rcrb
pushf
sbb
jg
mov
jmp
pop
or
rcr
or
data16
adc
adc
lods
xchg
cmp
add
xchg
out
iret
jecxz
repz
lret
mov
mov
mov
call
js
pop
aaa
icebp
lret
bound
out
sbb
inc
arpl
mov
mov
ja
pop
cli
ja
shr
imul
test
lods
fidivrl
int3
mov
push
test
mov
mov
lahf
loopne
pop
jl
out
mov
sub
jbe
jne
ret
rolb
mov
idivb
add
add
stc
sub
addr16
jle
or
imul
push
pop
dec
xlat
bound
fcompl
mov
mov
mov
sbb
mov
lods
in
ds
add
xor
xchg
and
lahf
xlat
fsubs
pop
pmovmskb
xor
inc
jl
and
lods
push
js
rcl
fs
cld
mov
sbb
dec
cmp
mov
stc
mov
adc
clc
loop
jge
push
int3
lock
sbb
int
mov
test
fs
cwtl
mov
or
push
push
and
mov
xchg
cs
shll
notb
mov
scas
es
sub
ret
jno
fdivrl
jo
mov
test
loopne
popf
mov
push
dec
mov
ljmp
xchg
cs
pop
xor
into
push
pandn
and
xchg
pop
sub
inc
stc
mov
sbb
icebp
jo
das
int
pop
in
push
or
pop
jp
dec
add
mov
popf
inc
nop
mov
jle
outsb
sbb
sbb
cld
or
lds
pop
inc
sbb
jl
pop
sahf
dec
jle
or
fwait
mov
test
leave
mulb
sbb
imul
and
jl
sti
push
xchg
jae
mov
out
pop
in
mov
dec
push
mov
jae
mov
mov
fstl
push
cmc
add
and
jge
cmc
xchg
xchg
sub
sub
call
pop
ds
sbb
ficoms
int
enter
fsubl
add
bound
inc
push
pop
xchg
cltd
addr16
addr16
outsl
xchg
or
dec
push
stc
cmp
les
movsl
adc
int
ja
and
mov
push
jae
or
adc
shl
out
cmp
cmpsb
ss
mov
decb
nop
adc
repz
movsl
lods
cmpsl
lcall
push
mov
rcrl
and
adc
out
mov
push
pop
das
add
jbe
mov
pop
mov
and
imul
xchg
insb
inc
add
add
push
ds
pop
sbb
insl
jp
fwait
pop
loopne
popf
mov
outsl
sbb
call
xchg
out
push
aaa
xor
jmp
lahf
in
je
call
rorb
fisubs
pop
notb
jbe
call
in
inc
push
cli
pop
and
lea
jb
jnp
sbb
mov
addr16
je
push
xchg
push
mov
imul
and
mov
mov
sub
stos
or
push
fcmovnu
push
inc
jl
inc
jmp
sub
jb
orl
arpl
mov
sbbl
in
or
std
xchg
clc
add
jo
test
add
repnz
das
aas
out
push
ret
cmc
dec
push
lret
test
test
cmp
fmul
mov
insb
les
movsl
dec
mov
mov
xor
push
mov
and
push
in
push
xor
loopne
andl
pop
jns
and
test
sbb
jbe
lret
insl
addr16
mov
mov
inc
jbe
es
pop
pop
pop
fadds
pop
inc
filds
mov
fistl
pop
jbe
pop
cmpsl
in
jp
pop
xchg
jns
push
dec
adc
lahf
int3
stos
sub
lcall
adc
push
xor
stos
rorb
mov
fstps
push
stos
pop
xor
outsl
mov
jb
mov
fwait
push
mov
add
pop
loope
test
cmp
mov
cmpsb
cmp
xor
in
push
push
int
add
mov
int3
fwait
jle
test
test
lock
jbe
and
enter
add
add
cs
aas
xchg
or
dec
add
dec
inc
jae
enter
mov
leave
mov
hlt
pop
xchg
adc
cmp
out
cmp
jecxz
fsubs
in
js
jb
mov
sti
adc
stc
shll
xor
jle
sbb
ja
dec
or
test
iret
mov
in
add
sbb
inc
mov
andb
les
lock
jno
dec
enter
xchg
mov
xor
cmp
stos
or
loope
inc
mov
lret
mov
scas
mov
lret
mul
pop
xor
lahf
int
cmpsl
lret
scas
clc
mov
add
inc
inc
in
adc
xor
insb
mov
mov
shlb
jecxz
icebp
scas
pop
cmp
pop
lock
cmpsl
pop
pop
mov
data16
pop
enter
cli
mov
or
push
jg
adc
in
cmp
add
adc
xchg
addl
mov
add
xor
repnz
arpl
fcomps
pop
in
cwtl
push
push
adc
mov
das
xchg
mov
or
ja
jo
outsb
lods
xchg
loopne
into
pusha
xchg
inc
bound
jl
jl
pop
mov
out
xchg
push
mov
aad
loopne
scas
sahf
sbb
test
lcall
xorl
jge
in
lods
sar
jbe
xchg
dec
pop
das
xor
or
in
ja
dec
js
fistpll
pop
call
ss
pop
mov
out
lds
mov
addl
cli
push
cmp
out
ret
mov
out
pop
inc
sub
lahf
pop
mov
ret
mov
xor
js
jg
scas
test
cmp
lret
jnp
fistps
lret
jns
adc
aad
dec
fwait
pop
loope
dec
stos
inc
add
cmpsl
fmuls
xor
xchg
push
cli
xchg
jnp
movsl
jp
ljmp
je
aad
sahf
addr16
pop
mov
sub
jge
mov
mov
ret
pop
pop
je
aas
cli
dec
shrb
daa
cmp
push
loopne
and
add
out
cmp
dec
mov
inc
lcall
adc
outsb
lods
orl
sbbb
arpl
dec
bound
into
stos
jbe
hlt
dec
in
or
fwait
pop
subl
out
cmp
shl
adc
push
ja
in
repz
lods
push
insb
popf
adc
lods
scas
jno
sbb
insb
and
cmp
fcmovnu
repz
mov
mov
clc
dec
jns
jnp
push
movsb
sub
jae
xor
mov
add
add
popf
pop
test
bound
adc
push
repz
sbb
icebp
je
repz
pop
shl
pop
xchg
cmp
mov
mov
mov
dec
ja
aad
jnp
inc
or
add
xchg
xchg
sbb
jne
das
iret
test
leave
mov
jmp
inc
add
xchg
js
iret
lods
cmpsb
xchg
adc
sbb
stc
fcmovne
jno
dec
andb
ret
icebp
sbbl
lcall
xlat
psubusb
addr16
mov
sub
jno
sarl
cli
pusha
dec
out
pop
ja
nop
and
fisttpl
sub
sub
andnps
jmp
mov
das
aaa
imul
gs
push
mov
jnp
stos
ffreep
cmp
add
mov
in
rcr
xchg
mov
cmp
pop
jno
mov
repz
mov
or
inc
notb
loopne
stc
cld
rcll
out
sub
sub
sti
xor
cmp
and
xlat
mov
idivb
aam
dec
mov
push
mov
inc
sbb
outsl
or
mov
ret
loop
rol
inc
int
inc
mov
aaa
cmp
push
jmp
pop
aas
dec
push
sub
inc
out
xchg
or
cmp
incl
mov
mov
movsb
pop
fwait
movsb
clc
fisubrl
daa
fildl
fwait
outsb
adc
fildl
fs
mov
js
jns
fld
cli
jecxz
push
rsqrtps
in
fs
enter
lcall
cmp
cmpsl
fs
pop
dec
adc
sti
jbe
adc
cmc
push
loope
scas
mov
sub
fdivrs
sbb
test
push
dec
push
lea
and
xor
fs
sbb
pop
pop
into
cmc
mov
iret
scas
inc
push
aaa
pop
into
inc
adc
jmp
mov
and
add
aam
jge
xchg
jg
stos
fmul
push
mov
mov
sti
fildll
add
call
inc
inc
cld
xor
repnz
shll
jno
loopne
pop
xor
movsl
fmuls
mov
stos
mov
cltd
loope
mov
mov
lret
negl
xor
mov
test
popa
sbb
dec
cmp
xor
pop
mov
jns
adc
mov
and
inc
js
imul
rorb
jmp
mov
decl
xchg
fisubs
outsl
sbb
ja
in
sbb
jae,pn
ss
jg
push
xchg
mov
test
mov
cmpsl
sbbb
into
ror
push
pushf
add
aas
and
iret
leave
ljmp
int3
or
mov
mov
or
ret
rcrb
cmc
push
not
ljmp
ljmp
fdivrl
cld
and
pop
fwait
aaa
jne
bound
push
jp
jno
inc
sti
inc
lret
sub
jnp
into
sbb
or
out
addr16
push
sbbl
aaa
cld
push
jp
fbstp
sbb
mov
addr16
cld
cmp
or
shrb
add
ss
jb
movsb
or
ja
push
add
loop
push
cmc
sbb
pop
sub
addb
pop
sub
mov
pop
push
cmp
aam
jo
movsl
add
pop
cs
or
push
add
xchg
jmp
dec
and
and
sbbl
jg
es
sbb
rorb
dec
icebp
stos
cli
out
dec
sbb
mov
cld
outsb
push
fsts
jae
nop
hlt
xchg
push
mov
fidivrl
mul
mov
in
js
std
in
ja
sbb
adc
enter
lahf
or
mov
sub
mov
imul
in
push
enter
xchg
dec
rcll
fwait
mov
lds
notb
push
add
jmp
cmp
mov
mov
sbb
or
or
in
fsts
imulb
mov
jecxz
xchg
adc
cli
mov
push
mov
adc
cltd
outsb
fldenv
fst
lahf
imul
lcall
xlat
push
inc
pop
inc
lds
sbb
xlat
xor
sub
lret
add
dec
jmp
mov
pop
push
scas
inc
add
lods
stc
dec
xlat
ljmp
in
shlb
jb
movb
pop
jecxz
push
je
push
loope
jp
cmpsl
add
je
lods
inc
ret
pop
mov
sbb
popf
test
cs
dec
jg
mov
and
call
xchg
hlt
pop
test
pop
clc
stos
xor
push
sbb
sub
iret
ss
test
sub
out
sub
push
enter
jno
shl
stc
mov
push
push
dec
popa
stc
and
aad
push
outsl
ss
lret
push
mov
mov
pop
in
and
add
and
sarl
cli
stos
dec
lahf
jbe
sub
xor
out
fwait
dec
xchg
mov
push
push
jmp
fisttpl
inc
mov
sbb
xor
js
lods
in
inc
sbb
scas
inc
test
aad
jnp
test
and
mov
push
push
and
pop
add
lods
in
jmp
jmp
lret
dec
scas
ret
cmp
lahf
aaa
lods
sub
push
mov
mov
lcall
cmp
addr16
sti
roll
xchg
icebp
jecxz
sbb
pushf
lods
mov
arpl
cmp
cmc
fidivl
xchg
stc
lcall
push
sbb
lret
push
daa
aam
jp
xchg
inc
sbb
movsb
push
jge
rorl
dec
movb
das
int
imulb
aad
or
stos
daa
mov
mov
jbe
aad
icebp
imul
adc
cmpsl
sub
iret
lahf
mov
insb
sbb
xor
add
xchg
cmp
imul
mov
lret
ja
inc
out
decl
add
xor
ret
jae
orb
aaa
inc
or
es
jbe
dec
negb
lahf
xchg
pop
mov
leave
sbb
lock
add
out
xchg
rorl
mov
in
mov
ljmp
imul
orb
ret
cmp
test
xlat
push
les
scas
daa
jecxz
or
in
dec
in
xor
mov
or
in
test
xchg
xchg
push
fcoml
push
shlb
test
mov
push
in
cli
jo
lods
int
push
movsl
sub
or
push
test
hlt
jb
nop
inc
jl
adc
sub
lret
in
mov
ss
outsl
inc
pop
cmp
aam
inc
xchg
test
cmpl
sub
js
cmpsb
out
in
cld
repz
mov
inc
out
push
xchg
push
int
ret
adc
sub
gs
jnp
inc
leave
call
ljmp
dec
in
nop
push
dec
cmp
xor
loop
mov
mov
and
jb
addl
in
insl
in
dec
xchg
pop
dec
add
test
into
iret
out
mov
mov
stos
mov
in
loop
dec
ficoms
jmp
addl
inc
inc
imul
nop
xchg
test
push
pop
in
mov
arpl
addr16
cmp
or
movsb
ficoml
pop
mov
rorb
cmp
cmp
lds
cmpb
shlb
test
or
lret
shlb
mov
scas
pop
imul
push
ljmp
dec
pop
adc
mov
call
in
cmpsb
and
es
call
ljmp
ds
test
push
movsb
imul
xchg
or
push
loope
insb
loope
test
add
out
mov
cli
lret
movsb
fnstenv
xor
xor
imul
cmp
ret
fadd
cmp
subl
jecxz
xlat
xchg
pop
in
mov
or
sub
nop
and
xor
mov
pushf
cltd
test
or
into
add
push
xchg
jbe
pop
adc
arpl
scas
adc
or
jnp
rcrb
adc
clc
jno
loopne
add
enter
bound
ret
hlt
decb
adc
sub
insb
jge
mov
adc
jno
push
andb
mov
cwtl
fwait
mov
call
repnz
cld
pop
test
jl
xchg
lds
cmp
cli
lea
es
andl
popf
rorb
push
ret
int
call
xchg
mov
cli
mov
rolb
mov
cmp
loop
cmp
sti
xchg
pop
mov
stos
adc
add
mov
pop
sub
xlat
outsb
dec
lcall
jp
ds
mov
sub
flds
pushf
int
pop
pop
mov
jmp
cmp
dec
in
adc
lcall
and
pop
jecxz
sub
pop
sbb
imul
sub
adc
scas
or
add
int
gs
lcall
xor
fldcw
and
xchg
push
in
mov
push
int3
pushf
xor
mov
mov
stos
inc
lods
adcl
fisubl
adc
lret
xchg
movsb
out
mov
dec
push
push
arpl
mov
add
out
mov
inc
push
sbb
loopne
add
adc
lret
stos
xchg
push
inc
pushf
jl
subb
pop
aad
mov
mov
xchg
and
ret
fcmovne
aam
sbb
jbe
movsl
jge
xor
out
ret
sbb
in
cmp
mov
add
aaa
cwtl
out
push
test
sub
cmpsb
fadds
into
cs
int
inc
xchg
and
pop
into
lea
mov
leave
adc
rorb
push
cmpsl
popf
rclb
xorb
shrb
scas
fcmovbe
hlt
and
mov
inc
shll
pushf
xor
dec
push
mov
jg
sub
adc
and
pop
dec
jl
test
dec
mov
push
or
xchg
adc
mov
inc
xchg
lods
inc
adc
mov
sub
mov
mov
mov
push
sbb
add
dec
outsb
xchg
std
clc
adc
in
lea
lods
push
out
cmp
jg
jle
cwtl
icebp
jmp
scas
adc
fsts
adc
dec
mov
shlb
fcompl
nop
xchg
xor
insl
movsl
pop
cmpsb
push
mov
roll
mov
or
cmp
xchg
sub
out
and
mov
inc
jne
sbb
into
xchg
mov
cmc
shrb
aaa
sahf
inc
stos
mov
dec
add
sub
xchg
js
push
lret
sbb
mov
ret
lea
test
cmp
and
jo
add
push
jne
inc
jbe
xchg
mov
mov
add
jne
rorb
scas
push
lret
stos
mov
pop
iret
sbb
pop
inc
jle
xor
sub
push
cmc
sub
push
pop
leave
mov
cmp
add
sbb
daa
mov
sub
xor
fldl
push
out
xchg
mov
cltd
mov
push
push
inc
mov
jmp
xchg
outsb
adc
xchg
sbb
sti
neg
jl
sbb
ret
xor
mov
xlat
pop
mov
out
and
or
fwait
notb
push
push
inc
popf
mov
or
test
adc
mov
test
dec
inc
test
push
mov
sbb
and
iret
push
mov
inc
sub
pushf
pop
xor
stos
mov
fwait
dec
adc
mov
push
sarl
lock
adc
jle
mov
scas
xor
adc
icebp
jbe
out
stos
add
pushl
test
dec
ret
or
jle
jp
scas
fcmovb
add
cmp
scas
rcll
xor
repnz
loopne
xor
or
repz
sub
cmpsb
aaa
cwtl
sbb
and
jle
cmp
jo
jecxz
ja
andl
insl
outsb
push
cmp
and
xor
cmpsb
mov
mov
mov
cltd
imul
push
add
add
pusha
inc
push
ret
adc
push
ljmp
pop
rcll
push
lahf
push
ja
mov
cmp
fdivrl
add
mov
sar
push
mov
cmc
or
jne
in
push
gs
jo
pop
dec
or
xchg
and
inc
pop
adc
adc
xor
jo
xlat
jmp
lret
add
fcomi
stc
sub
mov
jmp
pop
push
push
jg
pop
push
adc
das
scas
movsl
jmp
pop
sub
push
stc
jecxz
test
push
xor
push
rolb
pop
xchg
addb
std
jp
pop
mov
mov
cmp
jne
ss
push
cld
fcoms
pop
sub
lahf
xchg
dec
imul
fldt
imul
mov
xor
loope
jg
sahf
sub
add
add
out
mov
neg
adcb
push
and
push
push
or
test
cmp
pop
jl
loopne
aaa
ret
das
inc
dec
mov
cmpsb
cli
cmp
push
xchg
push
xor
cmp
sbb
in
aam
into
push
std
sbb
pop
outsl
lds
cs
cmp
push
scas
inc
mov
les
pop
fstl
ss
bound
sub
icebp
cmp
add
int
fistl
adc
mov
sbb
imul
pop
in
sti
mov
imul
pushf
out
mov
fcomps
in
mov
out
std
xchg
into
or
and
gs
in
inc
and
int3
decl
xor
int3
fwait
or
repz
xchg
adc
jnp
jb
jecxz
dec
xor
stos
inc
mov
lea
negl
lea
xchg
mov
or
lods
push
mov
lahf
inc
lret
xchg
mov
shr
sbb
loop
sub
mov
jl
mov
jnp
inc
add
addr16
push
frstor
mov
inc
dec
inc
outsb
int
mov
push
loopne
xor
cmp
repnz
cmp
arpl
daa
lock
ret
loope
ds
sbb
lahf
pop
mov
call
jp
insb
aaa
jbe
pop
mov
loop
jp
loop
outsl
scas
imul
sub
lahf
ret
mov
mov
sub
test
inc
add
std
add
mov
ret
imul
xor
xchg
test
jne
mov
aam
mov
pop
pop
jns
js
adcb
lret
xor
dec
xchg
lahf
out
scas
scas
outsb
pop
sub
xchg
add
jp
lret
ljmp
repnz
clc
roll
andl
add
add
pop
jecxz
outsb
pop
mov
cmc
and
mov
sub
mov
rorl
shr
aas
dec
sahf
je
rorb
cmp
pop
loope
loopne
cli
loope
jle
add
scas
jne
xlat
lahf
sarb
mov
test
jg
mov
sbb
xchg
adc
cwtl
fwait
push
mov
adc
jne
mov
shll
stc
mov
xor
in
xchg
ja
or
mov
lock
bound
fisttpl
inc
and
shll
lahf
je
jp
nop
dec
enter
enterw
pop
inc
insb
lea
jb
mov
je
and
dec
sub
sub
les
sub
insl
test
mov
jbe
orl
fwait
push
xchg
mov
xorb
pop
lods
xchg
dec
pushf
inc
lea
pop
dec
or
lahf
call
inc
out
int
push
xor
hlt
testb
in
jno,pt
pop
pop
in
and
add
xchg
aam
mov
mov
test
testl
dec
or
xor
adc
xchg
add
xchg
dec
mov
aaa
pop
mov
mov
popa
sub
inc
fs
or
lods
xchg
out
test
rcr
adc
test
add
dec
sbb
dec
push
das
add
stc
cli
mov
push
dec
sbb
mov
jecxz
xchg
lock
inc
mov
push
sub
xchg
outsb
mov
outsb
push
sub
aad
inc
or
sbb
imul
lcall
mov
rol
push
lret
dec
int
icebp
sti
push
test
test
inc
imul
testb
xor
dec
sbb
jb
inc
adc
fdivl
sub
push
xorl
cltd
jnp
lock
pusha
cs
cli
test
test
cmpl
dec
pop
movsl
sbb
orl
dec
dec
adc
out
mov
sub
jbe
rcll
jle
jno
fsubl
adc
sbb
dec
push
jle
clc
or
mov
or
ljmp
xchg
xor
adc
adc
adc
in
xchg
sti
inc
mov
mov
jmp
lret
pop
int3
dec
cmpsb
in
fisubrs
and
cmc
out
xchg
loopne
push
cli
jae
test
adc
push
cmp
int
popf
xchg
popf
dec
xchg
loopne
or
mov
out
out
mov
and
sub
test
lods
pop
cld
int3
xchg
adc
test
push
push
jge
xchg
pop
inc
pop
cmc
xor
orl
repz
scas
int
imul
in
leave
fwait
test
pop
das
hlt
cltd
xchg
push
and
cmp
mov
and
mov
push
mov
lea
test
in
cs
mov
adcb
movsl
gs
mov
scas
sarb
adc
mov
cld
jnp
insl
popa
pop
or
cmp
insb
xchg
and
sub
or
mov
jb
push
pop
mov
dec
xor
fs
filds
xchg
inc
adc
add
aam
add
test
cli
push
mov
into
cmpsb
xchg
icebp
cli
push
lret
push
cmpsb
add
aad
fiadds
jnp
push
inc
scas
sub
mov
push
add
mov
js
xor
cmpsb
aam
cli
inc
xchg
mov
out
arpl
sbb
and
mov
les
ret
sbb
es
inc
mov
mov
push
punpcklwd
adc
int
lahf
mov
sti
push
cmpsl
mov
cmp
cmpsl
iret
cltd
pushf
cltd
insl
mov
jecxz
and
out
lods
test
push
adc
outsl
xor
xchg
push
jecxz
movsb
jp
in
inc
neg
hlt
sti
lods
sbb
xchg
xchg
in
xor
xor
push
orb
lods
pop
test
adc
pop
faddl
mov
xor
outsb
rep
cmp
sbb
inc
sahf
lret
stos
aad
pushf
dec
jnp
stos
in
je
sbb
pop
iret
jmp
loope
push
mov
adc
jno
inc
insb
cmp
jbe
cs
sub
xchg
push
scas
leave
lock
add
hlt
mov
mov
xor
sub
fildl
adc
sub
sbb
fcmovb
sub
xor
iret
lcall
out
sbb
jle
imul
xor
rcl
aad
popf
cmp
and
xor
add
sbb
outsl
cmc
int
bound
mov
and
sbb
add
insl
add
fwait
inc
xchg
rorl
add
sub
test
push
xchg
ret
jno
xchg
daa
adc
je
mov
lahf
ss
pop
jno
mov
test
push
loopne
sbb
iret
out
int3
xchg
loope
out
and
into
repz
mov
and
push
lock
pop
adc
push
fwait
je
mov
cmp
push
sti
sbb
mov
sbb
fidivs
and
adcb
movl
jl
dec
sti
loopne
cmp
addr16
pusha
push
inc
jge
fs
lret
jno
aaa
push
push
scas
sbb
sbb
jns
aaa
insl
xchg
pop
out
popa
pop
fidivl
fidivs
out
jae
sahf
and
cmp
or
jge
stos
sub
ret
divl
pop
gs
or
xorl
subb
inc
inc
cli
jle
xor
ja
out
sahf
jnp
push
aam
xchg
push
or
jp
lret
or
daa
andl
ss
loope
mov
bswap
inc
inc
cli
stos
jbe
cltd
add
jp
pop
xlat
nop
mov
repnz
pop
pop
dec
stc
sbb
adc
cmc
sbbl
pop
fwait
jnp
in
test
inc
pushf
lcall
add
mov
xorb
fdiv
and
push
inc
shlb
arpl
xlat
cmp
test
test
dec
daa
cmpsl
xchg
ljmp
outsb
sbb
icebp
aas
dec
xchg
aas
ds
push
repnz
outsb
adc
pop
loope
lock
mov
and
add
sbb
mov
sbb
std
test
cmp
cmp
mov
push
mov
xor
cli
xor
lret
push
jne
stc
ret
fldenv
sbb
push
sahf
outsb
sti
mov
and
clc
mov
xchg
xchg
pop
mov
lds
sub
cmpsb
scas
cmp
mov
jl
and
es
push
cli
push
jecxz
dec
in
mov
out
andl
outsl
ss
lods
sbb
orl
data16
lds
daa
insl
lock
xor
xchg
mov
insb
sbb
vpsubusw
cmpsb
adc
lock
sub
test
ljmp
jns
xchg
in
loop
nop
icebp
jmp
ret
sbb
pop
mov
addr16
das
add
cmpsb
in
arpl
clc
mull
in
push
iret
pop
xor
sub
ret
les
sbb
jnp
out
mov
lret
repnz
andb
pop
pop
loopne
mov
inc
push
or
daa
inc
push
inc
inc
loop
lahf
adc
out
jbe
sti
js
mov
icebp
sub
stos
jo
insl
in
pop
jae
aas
sub
ret
add
leave
push
sti
call
pusha
test
mov
sub
lods
push
inc
sub
arpl
sub
jnp
ds
push
mov
lret
xlat
leave
mov
imul
adc
sub
push
fisttps
or
jns
lcall
jp
pop
xchg
subb
outsl
push
xchg
outsb
sbb
int
outsl
sub
hlt
pop
loope
mov
sbb
dec
out
and
aam
lcall
in
cld
out
and
push
jo
push
fmuls
clc
fwait
sub
in
mov
rcrl
sahf
xchg
out
pop
ret
fiadds
pop
sub
inc
push
push
push
je
inc
and
pop
sbb
sub
mov
ret
pusha
push
jl
inc
pop
inc
mov
lock
pushf
data16
push
push
negl
addb
cld
inc
mov
out
jno
ffree
lret
jno
nop
icebp
or
jp
fs
fwait
jbe
out
mov
sbb
fcmovnu
sub
add
mov
and
xchg
pop
push
pop
sbb
add
pop
dec
jbe
lret
fs
dec
js
rol
arpl
scas
pop
aam
movsl
pop
out
xchg
mov
inc
rcrb
lods
pop
pop
cld
fistpl
sbb
inc
fisubl
or
data16
pop
cmp
dec
lock
mov
loopne
adc
cmp
sub
mov
mov
dec
test
ret
mov
sti
mov
fs
sub
mov
nop
or
out
jecxz
sub
mov
mov
sbb
xchg
xchg
imul
sub
shlb
std
jle
hlt
mov
add
inc
push
xchg
in
sahf
pop
mov
adc
or
popa
addb
jae
dec
mov
ljmp
fldcw
addl
loope
xor
fmulp
movsb
and
jae
sbb
push
jecxz
mov
push
sbb
outsl
shl
mov
mov
inc
pushf
mov
xor
rorb
jmp
pop
es
mov
mov
imul
pop
shrl
cmpsl
inc
inc
cmp
aad
aas
ret
xor
divl
clc
out
mov
cmp
push
push
out
mov
add
mov
into
pop
or
adc
add
hlt
and
pop
cmc
stc
sbb
and
push
ja
adc
sub
imul
cmpsb
xor
or
pop
adc
stos
in
faddp
pop
test
scas
dec
xor
test
das
dec
ret
sbb
call
cs
lock
loopne
dec
xor
orb
jbe
or
xor
ja
ss
xor
and
mov
push
leave
mov
stos
sub
sub
or
and
dec
aas
lahf
xor
outsl
fists
and
mov
mov
sub
xor
dec
jmp
test
sub
inc
dec
cmpsl
stos
jg
mov
inc
mov
inc
xlat
rcr
lods
int3
jo
or
pop
cmp
inc
test
test
jmp
jns
inc
add
inc
mov
push
cmp
push
lock
aas
push
mov
jns
adc
daa
orl
rorl
test
and
mov
sbb
lahf
icebp
inc
xor
dec
adc
pop
jp
mov
sub
mov
inc
mov
imul
jns
add
sub
mov
jne
sub
test
jnp
je
cmp
or
push
dec
in
push
dec
outsl
jae
test
mov
inc
pop
push
cmc
sahf
out
xor
pop
dec
lods
push
mov
andl
fwait
icebp
xor
mov
sub
lahf
and
ss
test
pop
cmpsb
push
sti
outsl
mov
in
mov
cmp
ret
jno
pushl
push
inc
cmp
cmp
inc
js
cs
push
or
cmp
fdivl
aas
cmc
lret
leave
mov
leave
in
repnz
mov
cli
outsl
jl
xor
push
push
stos
out
sub
pusha
adc
mov
cltd
out
add
int3
mov
addb
xor
rcrb
jecxz
jge
rclb
mov
dec
ret
push
push
add
adc
addl
and
add
stos
push
loopne
loope
dec
bound
insb
fnstsw
fsubl
sub
xor
dec
sub
scas
push
fldt
loopne
mov
out
divb
push
sub
dec
inc
int
jae
insb
cmp
cmc
repnz
xlat
add
pop
jnp
jge
pop
pop
fdivr
lret
mov
xchg
nop
mov
pushf
fisttpl
sub
xor
mov
cmp
sub
pop
mov
sub
aam
sbb
sahf
loope
dec
out
lret
into
and
push
pop
cmc
ss
add
jno
cmp
sub
fcoml
adc
insb
pop
push
cli
insb
aad
adc
xchg
sbb
mov
push
fstpl
xchg
rcr
rcrl
icebp
dec
cld
loope
bndldx
inc
jb
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
jl
lcall
xchg
push
lcall
int3
ss
xchg
mov
jmp
and
jne
jo
scas
sbb
and
fidivrl
dec
jp
sbb
inc
push
mov
push
xchg
cltd
in
jge
insb
sub
clc
sbb
aad
mov
mov
scas
dec
pop
sub
loope
cmp
mov
sub
leave
jno
push
and
sbb
outsb
xor
adc
leave
lcall
dec
push
dec
pop
pop
add
mov
dec
and
insb
ja
lods
xchg
mov
mov
xor
adc
outsb
je
adc
and
jbe
and
pusha
cs
popa
mov
jg
iret
addb
push
in
dec
imul
into
cmp
add
xchg
mov
xchg
sub
stos
lds
mov
dec
xor
mov
mov
mov
scas
cmp
push
cmp
push
cmpsb
mov
cmp
ret
insb
pop
mov
adc
dec
jns
mov
mov
lock
push
cltd
cmp
imul
jns
push
xchg
sub
push
data16
dec
jnp
rcrl
into
pop
subl
cli
push
xchg
shlb
call
or
inc
push
fldl
repnz
out
in
xor
sarb
jmp
sub
roll
jle
fwait
lret
aas
mov
mov
ljmp
stc
cwtl
and
stos
stos
add
cmp
getsec
or
clc
sbb
xor
pushf
pushf
mov
scas
rcr
stos
cltd
lock
lea
jle
aad
lods
out
outsb
or
stos
jbe
cmp
xor
cmc
or
xchg
ror
and
pushf
xchg
pushf
and
in
and
cmpsl
popa
adc
push
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsb
add
outsb
