push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
push
adc
inc
and
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
fistl
add
push
lea
sub
mov
xor
mov
dec
cmp
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
stos
or
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
or
push
xor
testb
pop
inc
add
add
rorb
int
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
sbb
scas
push
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
shlb
add
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
adc
push
lea
mov
test
je
cmp
adc
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
mov
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
mov
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
imull
add
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
adc
inc
add
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
jmp
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
pop
and
mov
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pop
mov
xchg
xor
mov
lea
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
push
push
call
mov
fldl
add
xchg
in
add
test
jno
add
addb
jnp
sti
add
stc
add
mov
add
ret
scas
pop
add
add
jnp
cwtl
les
ret
iret
ljmp
add
ja
mov
add
popf
add
push
mov
add
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
shll
fwait
add
popa
add
jo
mov
add
add
add
add
roll
add
xchg
jnp
lcall
add
add
mov
data16
add
iret
icebp
add
sti
push
int
out
mov
lea
pop
popl
push
lea
push
push
push
call
push
cltd
add
popa
js
jo
add
mov
rorl
add
add
add
les
int3
mov
add
fdivr
mov
aad
add
imul
dec
hlt
addl
add
leave
adc
lock
pop
add
mov
lea
pop
push
push
push
call
movsl
jnp
jno
mov
add
add
jmp
pop
mov
lods
mov
cld
add
add
arpl
je
add
jmp
add
sti
mov
mov
mov
out
jmp
movsl
add
add
xchg
sarb
add
lods
add
push
add
mov
icebp
mov
cmpsb
loope
fs
pop
mov
les
push
push
push
push
push
call
add
mov
fiadds
add
jno
pop
add
add
out
mov
lcall
fildl
stc
push
mov
add
add
add
add
pop
add
jbe
pop
add
pop
xlat
add
add
jno
imul
add
xlat
jmp
movsb
add
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
sti
sti
add
add
add
jns
add
mov
mov
cltd
rcrl
mov
jae
and
add
add
imul
loopne
clc
add
imul
out
into
add
pop
js
add
add
loopne
mov
add
add
mov
lea
pop
call
push
push
push
push
lea
push
push
push
call
add
in
scas
mov
jns
jge
je
add
jae
lea
mov
push
add
ljmp
xlat
negl
add
mov
int3
sbbb
data16
call
push
push
push
push
lea
push
push
lea
push
push
call
jns
mov
enter
add
add
mov
push
mov
addr16
fldl
ljmp
add
mov
add
orb
add
ljmp
add
xchg
int3
xchg
jns
add
in
mov
data16
call
push
push
push
push
lea
push
push
push
push
call
add
mov
pop
add
add
add
add
add
insb
testl
jmp
mov
roll
fs
push
jecxz
add
sahf
add
rorl
pop
mov
popa
les
add
movsb
add
jae
loope
add
cltd
add
lea
pop
jmp
ret
push
push
push
lea
push
push
call
add
add
add
roll
add
add
add
xchg
pushf
add
pop
add
in
add
jl
mov
add
mov
rolb
mov
add
lock
mov
iret
mov
lea
pop
mov
mov
push
lea
push
push
push
push
push
lea
push
call
aad
leave
mov
add
add
int3
pop
xchg
mov
add
pusha
jae
pop
mov
shr
hlt
mov
add
data16
enter
push
adc
add
stos
jae
fcomip
add
rorb
nop
xchg
outsl
aam
lock
mov
fisttpl
pop
add
push
lea
push
push
push
push
call
testl
data16
xchg
add
loopne
add
fbstp
add
xlat
add
pop
add
cmpsb
mov
mov
xchg
add
mov
aam
add
clc
jp
in
jns
mov
in
stos
iret
add
int
subb
stos
testl
ret
mov
add
xchg
add
add
mov
jno
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
call
xchg
add
add
fstpt
fiadds
add
in
cwtl
push
cmc
fwait
add
test
imul
add
mov
hlt
mov
add
jmp
test
add
out
add
add
add
push
pusha
in
add
push
add
mov
stc
fdivl
pop
cmpsb
pop
mov
lea
pop
add
push
push
lea
push
push
push
push
push
call
mov
add
faddp
add
add
bound
cli
jle
hlt
cmpsl
add
js
add
ret
mov
les
xchg
add
xchg
int
add
add
sti
cwtl
out
fsubl
xchg
jae
add
push
add
add
jmp
add
faddl
add
add
jnp
mov
lea
pop
mov
xor
push
push
add
push
push
pop
add
lea
sub
sub
pop
add
shl
add
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
fwait
data16
xchg
add
add
mov
fiaddl
fcoml
iret
cmpsb
shr
add
pushf
call
mov
add
mov
add
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
test
add
fwait
js
add
in
push
xchg
in
sar
add
addl
add
add
add
popa
orl
out
mov
push
jae
jl
add
push
add
in
add
pusha
add
jnp
add
xchg
stos
jle
lods
movsb
add
iret
outsl
add
sahf
add
mov
lea
pop
call
push
push
push
push
push
call
add
cmpsb
fstl
mov
loop
test
push
add
xchg
icebp
jmp
add
add
add
in
add
in
pop
fadds
faddl
push
pop
pop
movsl
adc
add
add
push
lods
jo
add
push
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
pop
add
push
lcall
xchg
mov
add
add
push
add
add
jl
call
mov
add
into
jge
add
shrb
jge
popa
add
into
add
add
add
push
add
push
add
mov
sahf
jl
ficoml
out
push
mov
lea
pop
movl
push
push
push
push
push
lea
push
call
add
add
pop
mov
add
jne
add
sarl
add
add
add
loopne
movsb
imulb
add
cmpsb
stc
aam
add
add
cmpsl
cmpsb
add
add
add
add
int
mov
pop
add
xlat
jbe
add
add
add
nop
negb
mov
mov
lea
pop
lea
push
push
push
push
push
push
call
add
add
jae
add
add
add
add
stos
add
add
fidivl
sarl
stos
jp
cwtl
jb
jo
lea
pop
fisubs
jno
call
add
add
add
mov
lea
pop
pushl
push
push
call
add
lahf
icebp
add
je
add
add
add
addb
mov
add
add
add
scas
ret
add
add
lds
fmuls
add
mov
lea
pop
pushl
call
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
mov
add
mov
icebp
add
cmpsb
add
addl
add
push
mov
add
stos
add
xchg
add
stos
add
in
add
leave
add
out
ljmp
add
out
jns
add
add
xchg
mov
adcl
mov
popf
xchg
pop
mov
lea
pop
pushl
pushl
push
push
push
push
call
add
add
add
add
add
push
imul
in
add
add
pop
push
les
add
enter
add
out
mov
hlt
lea
pop
call
push
push
inc
dec
push
push
pop
add
add
xor
sub
add
ror
add
shl
pop
lea
sub
pop
push
push
lea
push
push
call
jno
add
jnp
mov
cmc
add
mov
add
add
add
jae
add
jl
xlat
xchg
add
fiaddl
insb
push
iret
mov
out
add
ret
popa
add
js
add
lea
in
add
iret
add
mov
xchg
cld
lea
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
call
xlat
std
jmp
fadd
fdivrp
jo
add
xchg
add
add
add
add
add
pusha
pop
fadds
fadds
movsb
add
pop
scas
add
fs
jl
cmpsb
push
add
push
xchg
popf
add
xchg
add
cld
mov
mov
sti
pop
add
popa
add
repnz
lret
mov
mov
mov
lea
pop
push
push
push
dec
push
or
inc
add
shl
sub
pop
add
rol
shl
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
xchg
fisttps
lds
add
std
add
arpl
add
add
add
add
add
mov
add
add
add
add
clc
add
movsl
roll
add
add
lret
push
mov
xchg
mov
lea
pop
push
push
push
lea
push
push
call
roll
pushf
add
in
add
mov
push
in
add
jo
iret
add
xchg
add
add
mov
add
rorl
add
add
int3
data16
mov
add
fmull
pop
mov
movsl
stc
js
test
ret
mov
mov
pop
out
out
add
test
add
sbbl
mov
lea
pop
call
mov
push
push
push
push
push
push
push
push
push
call
hlt
xchg
mov
pop
add
add
add
xlat
pop
pop
sti
in
clc
mov
add
stc
movsb
mov
rcr
add
jo
int
add
add
add
pushf
js
jge
pushf
cltd
hlt
lret
les
push
push
push
call
add
add
add
add
ficoml
jb
int
add
add
add
loop
out
iret
out
mov
je
mov
incb
add
pop
push
push
lea
push
call
scas
add
add
notb
mov
add
cmpsl
rorb
add
jecxz
jmp
jecxz
xchg
add
filds
add
cmc
test
mov
jns
icebp
add
cmpsb
xchg
cmpsb
sti
add
xchg
add
shr
add
loopne
movl
add
pusha
mov
rolb
push
add
mov
lea
pop
mov
push
push
call
xchg
addl
hlt
fmull
add
mov
mov
add
add
test
add
cmpsl
test
mov
mov
add
pop
add
add
xchg
cli
push
lea
pop
add
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
fldl
add
jp
jno
mov
add
jne
add
add
add
xchg
add
add
rolb
add
add
xchg
add
stc
nop
je
je
mov
add
pop
add
push
push
call
add
add
lret
lcall
scas
add
lahf
xlat
jnp
add
flds
fcomip
add
add
cmpsb
popa
jne
jecxz
add
pop
pop
addl
add
add
ffree
pop
scas
add
pop
add
push
push
push
push
push
lea
push
call
jae
xlat
push
add
aad
add
flds
cli
mov
negl
cld
out
add
xchg
push
loopne
add
jp
add
pop
popa
rclb
push
add
lea
cwtl
jo
add
pop
mov
popf
lret
mull
add
add
add
push
cld
jge
pop
lahf
add
data16
xchg
jne
hlt
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
add
js
cmpsl
hlt
aam
add
add
loope
cmc
loope
lods
jmp
jo
jge
jb
add
subl
mov
xchg
out
add
mov
pop
fisubs
testb
xor
push
push
push
push
lea
push
lea
push
push
call
mov
pushf
jle
push
clc
icebp
add
ja
add
jmp
mov
addr16
add
add
rcrb
push
add
xorl
push
fmul
add
add
jbe
faddl
add
add
out
mov
pop
add
jns
data16
aam
popf
add
popa
add
add
mov
mov
lea
pop
add
push
push
push
push
call
in
imull
add
mov
add
push
insb
add
add
lret
jl
call
mov
mov
sbbl
loop
add
mov
mov
xchg
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
scas
add
jle
add
push
xchg
add
movsb
leave
nop
sahf
pop
test
ja
stos
add
scas
add
mov
fidivl
lods
add
add
add
add
mov
pop
add
mov
xchg
add
pushf
add
mov
scas
mov
pop
push
mov
xor
push
push
lea
push
call
add
add
lea
lods
add
nop
bound
add
push
pop
out
jae
test
mov
mov
fldl
hlt
add
add
add
add
nop
pop
mov
mov
lea
pop
add
push
push
push
push
push
call
mov
add
add
add
in
jbe
mov
mov
add
add
ljmp
add
loopne
fildl
pop
in
add
mov
add
add
mov
cwtl
add
add
xchg
add
add
int3
lea
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
aad
scas
add
add
xchg
jb
pop
in
jae
add
add
jbe
jle
xlat
add
lods
nop
jl
mov
out
cld
add
add
add
add
cwtl
add
lahf
fsts
add
add
nop
imul
mov
add
add
lock
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
icebp
add
jo
add
add
push
mov
out
add
add
ficomps
int3
add
lods
add
outsl
add
ljmp
add
testb
addr16
jno
add
ret
shrl
popf
cmc
mov
lea
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
call
add
aam
add
iret
fcompl
add
hlt
outsl
jns
add
loopne
out
outsl
pop
push
add
add
les
in
add
aad
xchg
jb
cmc
jmp
add
lret
arpl
jbe
add
imul
add
adcb
add
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
call
jle
add
std
add
add
mov
pusha
mov
jo
rolb
xchg
add
add
mov
add
add
add
std
in
add
les
mov
xor
push
lea
push
push
push
push
push
push
call
mov
add
add
add
clc
add
add
add
frstor
arpl
int3
add
add
push
int
mov
test
sub
mov
add
sahf
add
mov
jl
lds
push
jno
std
stc
xchg
add
in
out
add
jns
pop
mov
shr
add
add
add
add
int
hlt
lea
pop
sub
push
push
call
cli
imul
push
fsubl
jmp
ja
add
pop
stos
jmp
add
pusha
insb
add
scas
fs
add
neg
mov
insb
lahf
mov
add
add
add
lret
leave
add
nop
mov
popf
je
add
mov
mov
push
mov
jae
cltd
data16
add
add
jge
clc
xchg
mov
lea
pop
pop
rep
push
push
call
out
push
out
clc
mov
in
add
add
add
add
add
add
mov
data16
add
mov
add
add
aad
lods
add
add
popf
xchg
cwtl
mov
add
pop
arpl
add
fmull
mov
push
push
push
push
lea
push
call
xchg
add
add
add
mov
add
add
fadds
ficompl
add
loope
mov
mov
add
fldl
add
fcompl
mov
xorl
int3
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
mov
add
add
hlt
fdivrp
fnstcw
je
push
jo
jns
add
sahf
add
add
jb
mov
icebp
add
imul
cmpsb
add
movsl
mov
pushf
cmpsb
idivw
mov
lea
pop
add
push
lea
push
call
add
iret
add
pop
add
add
mov
add
stos
mov
mov
aad
rcll
fnsave
add
sahf
enter
enter
add
add
add
add
hlt
add
xchg
rcrb
add
scas
testb
ret
rclb
mov
icebp
push
lea
lahf
mov
cld
lea
pop
add
mov
push
push
push
push
push
lea
push
push
push
call
mov
add
push
mov
stos
pop
add
add
xchg
add
fldl
std
rolb
push
jp
movsl
fildl
jnp
add
add
movsb
add
add
out
add
data16
clc
fcompl
ja
jns
imul
add
sbb
xor
push
push
push
lea
push
push
push
push
call
add
add
mov
out
add
add
add
add
pop
add
jns
add
mov
add
mov
mov
out
add
lds
jb
cld
add
add
mov
sub
popa
sbb
add
push
push
push
lea
push
push
call
add
jl
iret
or
mov
nop
add
mov
mov
jl
push
clc
mov
add
clc
add
je
ja
movb
add
push
push
add
pop
lret
add
add
addl
pop
add
add
mov
call
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
mov
xchg
mov
jns
push
add
test
add
mov
roll
fadds
jge
add
push
add
add
les
mov
add
pop
add
mov
mov
aam
mov
lea
pop
xor
push
push
lea
push
call
mov
mov
fidivl
cmpsl
push
out
out
add
mov
add
push
jge
pop
mov
add
lock
in
jl
lahf
add
bound
add
add
add
push
add
add
repnz
add
pop
add
push
push
push
call
shr
add
int3
mov
xchg
xchg
lea
add
add
add
push
mov
sti
mov
test
test
cltd
add
add
stc
int
add
add
add
mov
add
int3
xchg
imul
pop
mov
xor
push
push
push
push
lea
push
push
push
call
add
movsb
mov
lds
lea
addr16
add
mov
jp
add
in
add
out
ja
imul
pushf
add
add
ljmp
add
add
push
push
lea
push
push
call
imul
mov
lret
mov
lock
jl
shlb
add
add
push
add
add
add
add
lods
mov
lahf
int
lods
mov
loope
arpl
lea
pop
add
test
bound
pop
mov
push
push
add
inc
push
or
inc
add
sub
pop
xor
not
sub
pop
push
shl
shl
pop
pushl
call
push
shr
shl
add
pop
push
push
push
add
push
or
inc
add
add
sub
dec
pop
rol
pop
push
shl
add
pop
push
push
push
push
call
jae
jnp
xchg
lock
hlt
xchg
jl
imul
add
loop
mov
add
add
addl
add
jo
leave
bound
add
sahf
add
add
jle
add
add
or
rclb
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
call
outsl
sti
mov
mov
add
add
add
pushf
orb
mov
lds
push
mov
mov
push
push
add
add
mov
push
les
fadds
add
add
mov
lea
pop
push
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
pop
add
pop
clc
and
add
imul
add
add
add
xlat
add
jecxz
push
notl
add
testl
mov
add
xchg
mov
mov
pop
mov
in
outsl
insb
jmp
pop
add
pop
add
push
dec
pop
add
push
push
push
lea
push
push
push
push
push
call
sahf
xchg
jne
mull
into
push
add
add
mov
test
movb
pop
rcrb
jl
stos
mov
push
xchg
pop
jle
mov
lea
pop
add
mov
xor
push
add
dec
pop
add
push
push
xor
rol
add
pop
mov
xor
push
push
push
push
call
mov
cwtl
add
xchg
lea
add
aad
add
lds
sar
les
lret
push
roll
jnp
mov
call
popf
js
add
nop
xlat
clc
gs
add
add
mov
mov
lcall
mov
pop
cli
add
scas
shlb
mov
ficoms
jle
fmull
lock
push
push
push
lea
push
call
mov
xlat
jo
mov
std
fiadds
add
rcl
add
jne
ljmp
add
add
jl
cmpsb
les
add
add
lods
add
cwtl
add
mov
xchg
lret
mov
rclb
add
mov
sti
push
add
pop
mov
push
push
push
call
push
add
mov
loope
push
xchg
add
mov
add
mov
add
add
insb
in
leave
test
add
mov
clc
mov
add
mov
pushf
ror
pop
add
loop
add
add
pop
movb
fwait
add
add
ror
pop
push
add
mov
call
add
add
repnz
mov
in
int3
lea
pop
xor
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
in
ror
arpl
hlt
add
pop
add
test
mov
pop
mov
into
lahf
add
cmpsl
jge
jae
icebp
addr16
add
add
add
pop
add
push
push
push
push
call
mov
add
test
je
mov
cld
add
fiadds
add
mov
out
cltd
add
jns
cld
data16
jl
rcr
ret
out
incb
xchg
add
mov
xchg
scas
add
mov
mov
addb
lds
add
clc
xchg
add
fadds
add
xchg
add
testb
test
lea
pop
rep
push
add
shr
pop
mov
push
push
push
push
push
lea
push
push
call
add
xchg
fwait
je
add
add
call
xchg
jge
xchg
mov
add
add
mov
popf
lahf
add
movsb
lret
mov
addb
fiaddl
cltd
push
mov
mov
add
cmpsb
push
in
add
add
je
mov
cmpsb
jmp
sahf
popa
outsl
pop
mov
add
add
add
mov
lea
pop
xor
push
push
lea
push
call
add
mov
mov
add
mov
add
ja
jecxz
mov
push
add
add
mov
add
lods
add
add
ljmp
add
test
add
add
cld
xchg
js
add
or
add
push
shl
pop
or
je
push
sub
shr
pop
mov
push
push
push
push
push
push
push
push
push
call
loopne
jne
add
add
fldt
arpl
add
flds
add
add
stc
add
add
stos
push
fadd
mov
add
rcrl
outsl
jo
mov
std
lret
add
add
push
add
add
pop
cld
add
fdiv
jmp
add
jae
movsl
stos
mov
lea
pop
xor
push
push
push
lea
push
push
call
fstl
sti
add
sarl
add
add
test
mov
mov
rcl
mov
les
mov
pop
add
add
fwait
std
add
incb
pop
jbe
push
add
xlat
arpl
push
add
out
out
jmp
mov
add
add
add
add
out
add
add
fs
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
jl
in
jmp
clc
clc
ficoml
lahf
imul
lea
add
mov
movsl
mov
add
fmul
sti
call
xchg
mov
add
add
arpl
pushf
movb
mov
fistpl
add
mov
notb
jno
cld
lea
pop
mov
xor
push
lea
pop
add
push
dec
add
add
pop
add
push
push
xor
shl
sub
pop
mov
push
push
lea
push
push
push
push
call
add
add
repnz
roll
mov
iret
add
push
mov
jp
jne
xchg
jnp
add
mov
in
test
add
add
add
mov
add
orl
jbe
add
in
enter
mov
add
jo
stos
mov
lea
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
call
into
jge
out
add
add
add
add
jge
clc
call
mov
lock
mov
cld
iret
add
add
jmp
mov
mov
add
add
add
in
roll
pop
add
xchg
std
add
add
mov
lea
pop
add
push
push
push
call
imul
jmp
in
int
push
xchg
add
xlat
fld
loopne
add
add
add
mov
mov
mov
mov
add
in
add
add
jmp
mov
aam
bound
add
push
push
lea
push
call
mov
add
add
add
add
add
jo
cld
lcall
in
faddl
add
out
add
int3
rolb
mov
add
aam
add
mov
mov
add
fwait
add
push
lcall
mov
lea
pop
pop
rep
push
inc
pop
mov
xor
push
push
push
push
call
stos
ficoms
add
loop
add
fldenv
add
add
pop
add
lods
push
add
add
add
clc
stos
add
addl
jae
in
movsb
out
loope
add
fildl
add
scas
xchg
cmpsl
call
add
add
push
xchg
add
fiaddl
scas
addl
adc
leave
je
push
inc
not
shr
shr
pop
mov
push
dec
rol
lea
pop
add
add
push
push
push
lea
push
push
push
call
lret
cmc
add
mov
int
add
cld
add
cmpb
add
sti
add
pop
add
test
lret
ljmp
add
cwtl
cmc
add
scas
out
add
xchg
out
popa
add
data16
add
fs
in
js
lahf
mov
lret
incb
add
add
mov
lea
pop
rep
push
push
push
push
lea
push
push
lea
push
call
outsl
lea
jle
pop
add
in
popf
mov
stos
adcb
add
jae
imul
into
movsl
add
cli
jge
icebp
jnp
fcmovu
add
js
jnp
add
pop
pop
push
push
inc
sub
push
sub
add
sub
sub
sub
add
pop
sub
sub
ror
pop
push
dec
pop
pop
push
push
call
roll
add
add
jb
add
sti
ja
add
add
jecxz
jmp
fdivrs
mov
add
fsub
add
add
mov
push
mov
arpl
int
scas
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
xlat
add
mov
mov
add
mov
add
jnp
pop
jle
fildl
call
mov
add
mov
jmp
push
add
mov
scas
add
add
arpl
mov
push
lea
push
push
push
push
push
push
push
push
call
add
filds
push
fiaddl
imul
push
in
mov
scas
mov
xchg
jb
add
add
add
mov
mov
fidivs
std
mov
int
loop
divb
lcall
add
add
pop
testb
mov
bound
add
iret
xchg
push
std
addr16
add
int3
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
push
push
adcl
test
fucomip
add
mov
xchg
xchg
sub
pusha
push
add
lea
mov
add
lods
add
int3
lea
pop
jmp
push
push
push
call
add
add
sahf
mov
add
add
xchg
imulb
add
std
push
pop
add
add
add
add
imul
jo
notb
add
aad
bound
imul
pop
add
pusha
push
lds
ljmp
scas
loopne
jecxz
add
ja
les
in
add
push
lea
push
push
push
push
call
jb
mov
add
add
stos
pop
fisubl
fs
fs
faddl
xchg
scas
add
int
add
push
imull
push
add
lcall
shl
add
add
int3
movsl
add
fs
add
add
add
mov
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
mov
add
xchg
rcl
add
push
mov
flds
movb
mov
add
add
add
mov
mov
push
addb
add
push
add
add
mov
rorb
cmpb
cld
lea
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
xchg
jnp
add
out
loopne
add
add
sti
add
add
add
add
cli
add
add
add
add
rolb
int3
lea
pop
push
mov
push
push
push
push
push
call
jo
andb
mov
add
fld
cwtl
add
add
add
jns
les
loop
test
add
push
xchg
mov
mov
push
jne
ljmp
les
add
add
jecxz
add
add
roll
pop
pop
add
addr16
add
int3
mov
int3
lea
pop
pop
pop
push
sub
add
pop
pop
push
push
lea
push
push
push
push
push
call
jp
testb
jmp
mov
mov
xchg
add
add
popa
add
add
add
imul
stos
jb
nop
add
add
fdivl
add
arpl
filds
movsl
add
out
add
jecxz
scas
pop
mov
add
add
incb
mov
lea
pop
pop
push
dec
pop
leave
push
rol
shl
lea
shr
pop
ret
push
push
add
pop
mov
add
push
push
push
push
push
push
call
test
gs
scas
add
pop
ret
xchg
add
lret
add
add
add
jge
mov
mov
scas
icebp
lret
jl
add
mov
lea
pop
push
push
add
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
imul
pop
cltd
xlat
neg
arpl
xchg
stc
add
add
add
mov
add
in
leave
add
add
filds
push
std
scas
mov
add
mov
add
shlb
jbe
mov
push
mov
lea
pop
push
push
push
lea
push
lea
push
call
add
jp
je
mov
add
test
stc
add
add
add
fcmovnu
add
push
add
js
add
std
jb
addl
loope
int3
add
stos
xchg
add
add
movsb
popf
add
add
add
add
xlat
cmc
xlat
add
add
scas
aad
mov
add
adc
inc
cld
add
add
push
rol
add
inc
inc
pop
addl
test
je
push
shl
pop
mov
pop
push
push
push
push
push
push
lea
push
push
push
call
cmpsl
pushf
stos
add
out
add
lods
mov
add
add
clc
rcr
add
jle
loop
cltd
add
les
add
into
add
mov
add
add
push
test
stc
mov
lea
pop
pop
pop
push
pop
pop
push
push
push
lea
push
push
lea
push
call
sahf
movsb
cli
mov
add
roll
mov
lret
je
lods
add
add
add
test
jmp
add
mov
pop
lcall
jmp
fldl
add
out
xchg
add
xlat
add
add
mov
add
imul
add
add
cld
push
add
sbb
push
pop
ret
push
push
add
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
push
call
int
jno
js
clc
repnz
add
rorl
xchg
jmp
add
add
lods
lods
push
add
lock
aam
jno
mov
xchg
lea
pop
add
push
add
xor
sub
rol
pop
push
push
push
push
push
push
push
push
push
call
popa
add
mov
add
testl
out
mov
mov
jmp
data16
mov
mov
je
add
lea
add
lcall
jno
add
add
sti
add
pop
mov
mov
mov
les
push
push
sub
shl
shr
ror
pop
push
testl
push
add
shl
not
pop
addl
push
push
push
lea
push
lea
push
call
add
clc
add
xchg
add
pop
enter
xchg
jbe
popf
sahf
orl
add
adc
add
into
stos
addl
movsl
mov
add
add
add
push
roll
add
pop
add
lret
std
mov
xchg
add
in
mov
lea
pop
push
push
push
push
push
call
into
xchg
rolb
add
push
add
mul
imul
loope
fdivrs
add
jl
jp
into
jecxz
jnp
fld
jge
mov
add
enter
fstps
int3
add
testb
mov
add
lea
pop
call
mov
push
add
add
pop
pushl
push
shr
ror
inc
lea
pop
push
push
lea
push
push
lea
push
push
call
mov
add
pop
add
add
add
mov
out
add
jno
add
mov
imul
jbe
push
jbe
push
add
outsl
ret
add
add
add
add
lds
add
add
pop
push
push
xor
pop
call
cmpl
jne
push
push
call
jle
lea
add
out
cmpsl
add
jnp
stc
add
pop
xlat
add
jne
xlat
leave
add
pusha
mov
pop
je
add
int
test
popa
add
arpl
roll
gs
test
mov
lea
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
pusha
add
add
push
fdiv
lods
jbe
add
mov
mov
add
lret
mov
add
mov
lret
add
loopne
mov
cmpsb
jge
lahf
repnz
lret
gs
rolb
data16
leave
pop
add
std
popf
sbbl
stos
add
clc
popa
leave
nop
fstpl
cltd
cltd
bnd
mov
mov
lea
pop
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
pop
iret
push
add
js
add
add
add
data16
movl
add
adc
loope
mov
jge
add
add
add
add
fwait
out
add
addr16
stc
lret
lahf
add
add
insb
arpl
xchg
mov
push
add
pop
pop
pop
push
add
pop
leave
ret
push
ror
not
pop
push
push
shr
inc
pop
mov
push
xor
sub
pop
add
push
push
inc
lea
rol
pop
push
push
push
shl
xor
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
mov
in
push
add
xchg
jbe
scas
iret
add
icebp
mov
mov
add
add
jge
xchg
je
mov
jecxz
jae
imul
gs
add
aam
push
mov
add
loope
nop
cmc
add
leave
leave
add
fsubrl
lock
add
xchg
add
add
mov
mov
jle
lahf
add
add
out
mov
lea
pop
movl
push
push
push
push
lea
push
push
call
add
add
loope
fdivp
push
je
insb
loop
xchg
add
push
add
js
mov
mov
nop
add
icebp
xchg
loop
mov
add
add
xchg
pop
add
add
imul
stc
add
lea
pop
push
call
push
push
push
push
push
push
push
push
lea
push
push
call
mov
loop
jae
mov
pusha
stc
mov
add
movsb
mov
xchg
movsl
add
in
pop
xchg
add
add
popa
lock
push
in
outsl
jbe
add
mov
mov
mov
sarb
stos
add
add
lods
add
xchg
add
clc
into
lods
adc
add
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
mov
push
add
movl
push
jle
mov
add
int3
mov
jo
add
add
jmp
nop
add
cltd
bound
add
rol
add
lret
add
mov
lea
pop
call
push
push
lea
push
lea
push
push
call
fcomip
out
fstl
add
mov
add
fwait
loopne
add
mov
sahf
add
idivb
cmpsl
add
lret
insb
add
add
add
xchg
les
xchg
mov
pop
jle
add
mov
lea
pop
subl
cmpl
jne
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
lahf
stc
xlat
add
out
jo
add
add
add
addr16
add
pop
add
mov
mov
cwtl
scas
cli
test
fcmovbe
add
data16
sbb
push
xchg
testb
nop
mov
lret
addl
add
test
add
mov
cld
add
add
sarl
mov
imul
cld
lea
pop
pop
pop
push
sub
add
pop
pop
push
ror
shl
pop
pop
push
lea
add
pop
leave
push
xor
sub
inc
add
pop
ret
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
js
add
add
lods
sbbl
fsubr
add
add
stos
xchg
scas
mov
nop
add
mov
mov
fsubp
add
xchg
call
cltd
mov
ror
cli
add
call
add
ret
stos
push
aam
add
mov
add
stos
ja
int3
lea
pop
mov
push
dec
xor
pop
add
push
push
sub
pop
push
push
lea
push
push
push
push
push
push
call
iret
aam
movl
push
add
cld
mov
in
mov
add
out
add
add
push
ja
std
int3
nop
loope
add
popf
add
cmp
loopne
popf
add
add
jno
add
mov
add
xchg
shrl
shll
loopne
pushf
les
ljmp
lea
pop
push
push
pop
push
push
ror
pop
mov
push
sub
ror
sub
sub
pop
lea
push
shr
shl
pop
sub
push
add
pop
mov
push
ror
inc
pop
shr
push
pop
add
push
push
push
push
lea
push
lea
push
push
call
add
add
iret
add
add
pop
add
lret
not
scas
add
add
cmpsl
xchg
scas
popa
pop
add
movsl
pop
je
mov
stos
out
jno
add
add
les
add
xchg
push
fldcw
add
push
add
add
add
int
add
add
jl
push
call
mov
cli
cli
cmpsl
add
bound
mov
push
add
pop
mov
push
add
pop
add
add
push
push
push
push
lea
push
push
lea
push
call
add
add
add
pop
push
mov
addb
add
add
lret
xchg
bound
add
je
add
lahf
rclb
xchg
ljmp
stos
push
mov
jno
mov
lahf
push
roll
cwtl
push
mov
jl
add
lea
pop
mov
push
push
push
call
add
add
add
add
pop
jae
xchg
push
push
add
add
add
popa
push
add
add
cld
add
rolb
roll
out
xchg
add
mov
add
jo
add
cld
shll
add
out
add
mov
push
lock
jl
add
lods
out
lods
js
push
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
call
imul
add
add
nop
add
testl
cli
jne
add
xchg
fs
pop
aam
leave
test
rcrb
add
repnz
add
push
mov
jecxz
jo
add
add
lret
test
xchg
mov
lea
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
push
call
lret
test
add
stos
repnz
mov
fwait
add
enter
ja
jmp
cld
push
add
add
xchg
arpl
add
mov
lret
add
add
add
les
jnp
ljmp
les
cwtl
fadds
add
jne
push
push
call
bnd
add
movb
push
add
add
add
icebp
fucomip
aad
stos
add
jnp
scas
mov
add
pop
add
pop
add
jmp
lahf
loopne
in
add
xchg
icebp
add
pop
mov
push
lea
push
push
call
mov
add
pop
add
jmp
popf
xchg
add
mov
shrb
add
add
nop
imul
aam
jmp
add
mov
lea
pop
movl
jmp
push
push
push
call
jmp
add
add
call
fisubs
test
outsl
add
add
xchg
jle
mov
add
xchg
add
mov
fnsave
xchg
add
xchg
xchg
icebp
loop
pop
jle
add
pusha
addr16
call
pop
add
xchg
aad
add
xchg
rcr
add
sti
add
aad
add
add
data16
xchg
jae
std
add
arpl
or
mov
push
push
lea
push
push
call
add
add
in
fldt
cli
add
mulb
ret
fwait
add
push
rcl
out
add
pop
hlt
add
add
add
add
fs
lret
nop
add
gs
add
add
cmc
mov
add
add
stos
in
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
lea
stos
xchg
mov
stc
add
mov
add
add
xchg
add
out
mov
outsl
mov
jb
jmp
add
add
out
loopne
ljmp
xchg
mov
jge
mov
mov
in
add
add
add
jnp
add
add
add
pop
icebp
lcall
add
sub
ljmp
mov
ror
pop
mov
push
sub
shl
lea
pop
movl
push
push
push
push
lea
push
push
call
clc
imul
movl
add
add
add
mov
mov
jp
mov
lahf
add
hlt
add
add
mov
cli
jns
addr16
add
out
aad
mov
xchg
ror
popa
iret
add
add
add
xchg
add
mov
leave
push
in
mov
data16
adc
add
push
shr
pop
mov
mov
push
push
push
call
mov
cmpsb
ljmp
add
movsb
add
xlat
pushf
in
cld
add
mov
scas
add
add
push
add
add
test
add
jp
mov
loop
jb
pop
in
pop
mov
fiaddl
jns
xchg
jle
int
gs
jl
cld
lea
pop
cmp
jne
mov
push
lea
push
lea
push
push
push
call
sbbl
popa
hlt
pop
add
ret
hlt
outsl
add
add
add
add
add
fwait
scas
add
xorb
jns
enter
add
add
add
add
add
testb
movl
jmp
push
push
push
push
push
push
push
push
call
lods
push
popf
add
aad
pop
aad
add
add
add
nop
add
popa
popf
push
lcall
jmp
test
add
jp
pop
add
add
mov
push
pop
pop
shl
aam
push
add
add
data16
sti
jecxz
add
add
int3
outsl
pop
shrl
lea
pop
mov
push
shr
sub
pop
cmpw
jne
mov
push
pop
movl
push
lea
push
push
call
lahf
add
mov
add
add
push
mov
add
out
enter
scas
icebp
xlat
nop
int3
arpl
hlt
add
test
xchg
cmc
xchg
pop
mov
fcoml
push
scas
cltd
mov
lea
pop
jmp
push
lea
push
lea
push
push
push
push
push
call
add
arpl
mov
faddl
add
std
jl
fcompl
jmp
add
add
add
int
cli
movsl
sarb
outsl
push
add
add
add
push
cltd
mov
stos
mov
xchg
cmpsb
movsb
push
lock
rolb
movsl
cli
mov
lea
pop
pushl
pop
push
lea
push
push
push
lea
push
call
mov
add
jae
pop
add
fcompl
ljmp
add
loop
add
loop
enter
add
lret
xchg
scas
aad
out
mov
pop
rolb
mov
adc
mov
mov
push
xor
shr
pop
mov
push
push
add
push
or
inc
add
rol
rol
sub
shl
dec
rol
pop
shr
pop
push
pop
push
call
push
shr
pop
cmpl
je
push
push
sub
add
sub
push
sub
add
inc
dec
sub
sub
add
pop
sub
xor
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
xchg
xlat
mov
mov
add
jl
add
add
add
add
add
jge
stos
push
add
jmp
xchg
icebp
xor
push
out
mov
add
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
fstps
stos
jge
push
pop
mov
add
add
add
add
jbe
pop
mov
lods
rol
jbe
add
add
mov
lret
roll
sti
add
add
xchg
mov
add
mov
mov
add
add
stos
add
sub
in
cmp
add
dec
fsts
push
push
lea
push
push
push
call
add
loope
add
push
stos
out
add
xchg
cld
js
into
push
std
mov
ret
mov
add
add
out
rcr
add
fs
in
in
cmpsl
jno
les
push
xchg
xor
shl
test
add
xchg
sahf
xchg
cli
add
mov
xlat
in
int3
movb
add
mov
leave
int
mov
add
push
fwait
mov
push
add
addr16
lea
pop
cmpl
je
push
push
shl
push
push
pop
add
shr
sub
inc
xor
pop
shl
pop
push
add
not
pop
push
push
shl
add
shr
pop
call
push
inc
xor
pop
cmpl
je
push
push
add
push
or
inc
add
shr
shr
shl
sub
sub
not
rol
inc
pop
add
pop
push
push
lea
push
push
push
push
push
push
push
call
iret
aad
pop
add
mov
movsl
mov
mov
add
into
popf
add
fiadds
add
add
add
cli
aad
xchg
add
mov
lea
mov
lahf
add
subl
and
push
push
not
sub
pop
call
push
push
push
lea
push
push
lea
push
call
pop
lahf
out
add
add
add
add
add
add
add
mov
mov
int3
jge
stos
add
add
add
add
add
add
add
push
push
lods
add
add
les
cmp
test
add
push
push
lea
dec
push
sub
add
dec
add
sub
add
pop
ror
sub
pop
push
lea
push
push
lea
push
push
push
push
push
call
int
add
xchg
mov
add
je
add
sahf
sti
gs
mov
mov
fdiv
mov
ret
push
lret
in
icebp
add
add
cld
add
std
clc
mul
push
repnz
addr16
add
pop
nop
add
mov
push
pop
out
js
add
add
add
rolb
cmpsl
add
add
test
sahf
mov
cld
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
push
fdivrs
mov
mov
lret
test
add
xchg
add
jne
sahf
add
add
mov
add
mov
add
jle
add
add
add
flds
insb
cmpsl
popa
add
mov
fdivp
add
hlt
lea
pop
call
push
pop
cmpl
je
push
push
not
push
and
add
lea
xor
shr
shl
sub
lea
rol
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
data16
addr16
mov
in
add
testb
xchg
lock
add
mov
mov
movb
xchg
add
in
add
sti
hlt
add
cmpsb
pusha
pusha
add
lods
mov
out
test
mov
mov
add
add
sti
jmp
rolb
fdivr
sti
jp
add
mov
and
push
push
push
push
push
push
push
push
push
push
call
add
ja
add
pop
add
mov
mov
add
xchg
mov
loopne
push
test
lock
lock
add
add
fldenv
pop
add
add
add
cwtl
add
stos
insb
mov
loope
add
cli
add
add
push
jns
add
leave
addb
data16
add
mov
scas
icebp
add
in
add
pop
call
push
push
push
lea
push
push
call
lret
cli
popf
push
add
pop
leave
movsl
mov
pop
nop
mov
add
cwtl
addl
out
out
add
jne
add
add
add
insb
add
add
test
lea
pop
cmpl
je
push
push
rol
ror
push
or
not
add
rol
sub
lea
pop
pop
push
push
push
call
pusha
fistpl
jbe
loop
mov
add
add
je
pop
outsl
add
lea
imul
fidivl
ffree
aad
add
flds
clc
mov
lea
pop
push
push
push
push
call
add
fildl
push
cmp
add
jmp
push
add
lds
flds
mov
push
add
mov
add
mov
mov
xabort
add
pushf
insb
ja
jbe
flds
jno
add
mov
lea
pop
call
push
not
ror
pop
cmpl
je
push
push
add
shl
shr
sub
push
and
add
add
rol
inc
sub
pop
not
pop
push
inc
not
dec
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
push
push
fistps
add
mov
call
add
pop
jge
add
rcrb
add
fucomp
jne
add
mov
imul
cmc
mov
in
mov
add
loope
roll
add
les
pop
call
push
sub
pop
cmpl
je
push
push
sub
push
push
pop
add
lea
sub
sub
not
inc
shl
shr
pop
lea
pop
push
sub
shr
pop
push
push
shr
shl
pop
call
cmpl
je
push
push
add
lea
push
push
pop
add
rol
sub
pop
not
pop
push
not
ror
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
lods
add
add
add
xchg
add
add
leave
into
add
add
mov
loopne
push
xchg
in
lret
jne
add
data16
test
je
push
aam
fistps
push
out
sbbl
add
mov
sahf
int3
loop
ljmp
add
add
add
sub
add
data16
call
push
push
push
push
lea
push
call
jle
add
jecxz
jge
lock
jp
lea
popf
add
jle
add
add
test
add
jnp
add
add
andb
sti
add
add
mov
mov
lods
add
xchg
fcmovnb
std
stos
stos
clc
popa
jle
add
xlat
add
leave
in
add
add
add
rorl
pop
cmpl
je
push
push
shl
inc
push
or
inc
add
sub
rol
sub
sub
add
shr
pop
ror
lea
pop
push
not
ror
dec
pop
push
push
not
add
add
pop
call
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
rcll
fwait
add
add
fwait
push
mov
push
std
pop
jmp
jmp
mov
cwtl
mov
mov
cwtl
jecxz
add
in
add
xchg
mov
in
add
mov
add
add
ja
int3
lea
pop
cmpl
je
push
push
sub
ror
push
or
inc
add
xor
sub
lea
shl
sub
pop
add
pop
push
push
push
push
lea
push
push
push
push
call
lahf
hlt
loop
add
mov
add
cli
addr16
mov
mov
add
lret
mov
outsl
add
popf
lock
xchg
insb
add
pusha
jnp
icebp
mov
cltd
add
ljmp
add
cmpsl
add
add
add
add
flds
int3
clc
cmpsl
add
popa
add
xchg
add
cltd
push
push
std
fdivl
add
add
js
add
scas
mov
lea
pop
push
push
shr
add
pop
call
push
push
lea
push
push
push
push
push
push
call
push
add
add
add
xchg
repnz
add
hlt
add
imulb
fwait
test
mov
jmp
jbe
in
add
mov
add
add
pop
sahf
lret
add
ficoms
add
add
add
int
add
lods
add
mov
add
pop
cmpl
je
push
push
rol
sub
not
push
or
not
add
shl
add
sub
sub
xor
not
pop
ror
shr
pop
push
shl
shr
not
lea
pop
push
push
push
push
lea
push
push
call
jb
movsb
fcoms
sbbb
add
pop
pop
lods
add
add
roll
add
add
test
out
xchg
shll
add
add
cmpl
add
test
mov
pop
jge
pop
add
rolb
add
push
lret
nop
add
int3
lea
pop
call
cmpl
jne
push
inc
inc
pop
mov
push
push
push
push
call
add
add
lods
add
stos
jp
xchg
add
add
cmc
clc
add
out
push
xchg
test
mov
xlat
lret
add
mov
xlat
add
add
outsl
add
imul
mov
stc
add
cmpsb
add
pop
out
addr16
cli
fwait
mov
lea
pop
movl
jmp
push
sub
xor
pop
xor
pop
push
sub
sub
rol
pop
pop
pop
push
push
push
push
push
push
push
lea
push
call
roll
jae
movsb
mov
mov
add
pop
add
popf
add
add
pop
jecxz
add
test
add
add
loope
mov
add
enter
add
in
add
lds
add
test
movl
lret
pop
mov
lea
pop
pop
leave
push
add
pop
ret
push
sub
ror
rol
add
pop
push
push
dec
pop
mov
push
not
ror
pop
add
push
push
push
call
out
mov
fs
add
add
add
add
cmpsb
jp
add
add
add
notb
aad
add
pop
scas
add
jecxz
ficoms
push
cld
add
add
jle
out
add
mov
fchs
loop
add
mov
add
add
mov
lea
pop
cmpl
jne
push
push
sub
xor
add
inc
push
push
pop
add
shl
sub
sub
sub
pop
add
ror
sub
pop
push
add
lea
pop
pushl
push
push
push
push
push
push
lea
push
call
les
add
popf
jb
add
jne
pop
lods
add
jge
stos
out
add
out
push
add
stc
add
xchg
add
fildl
outsl
add
add
xchg
lahf
mov
lret
mov
aam
bound
call
push
push
pop
call
push
push
push
push
lea
push
call
mov
jb
lcall
xchg
add
sahf
push
cli
add
lds
jo
jnp
push
iret
add
add
xchg
add
lret
notb
add
in
gs
mov
add
cld
mov
mov
add
fcmove
add
lods
insb
mov
lea
pop
jmp
push
ror
pop
cmpl
je
push
lea
push
lea
push
push
lea
push
push
call
add
roll
rcr
xchg
nop
test
add
mov
les
xchg
push
mov
fisubrs
addr16
add
jmp
leave
add
out
jle
in
push
add
add
add
add
pop
add
push
outsl
mov
nop
xor
fidivrs
leave
cltd
push
lock
int3
add
pop
add
call
sbb
jge
add
add
leave
push
dec
pop
add
push
lea
push
push
call
lret
jnp
add
jnp
add
pushf
fs
add
add
add
add
mov
add
jne
mov
add
int
arpl
movsl
in
imul
add
out
add
mov
push
std
add
or
pop
push
push
push
push
push
push
push
push
push
call
add
fildl
mov
clc
add
in
mov
arpl
mov
loopne
add
xchg
test
mov
xchg
pusha
imul
nop
popf
push
pop
add
and
pop
push
lea
push
push
push
call
add
add
test
jmp
test
shrl
add
push
add
lcall
add
scas
add
rolb
jge
cmpsb
mov
xchg
out
xchg
loope
add
roll
jbe
stc
icebp
xchg
cmpsl
mov
push
fadd
enter
add
jno
icebp
pop
add
loope
scas
add
add
mov
out
lock
mov
mov
lea
pop
pop
push
push
push
push
push
push
call
xchg
loop
add
in
fidivrl
mov
icebp
js
lahf
add
andb
jo
iret
shrb
add
add
test
xchg
add
lods
mov
lea
pop
pop
push
shr
pop
leave
push
lea
push
push
push
push
lea
push
push
lea
push
call
pop
in
in
add
add
add
out
add
add
cwtl
stos
jecxz
pop
add
sti
add
imul
pop
repnz
push
jno
pop
mov
lcall
add
mov
clc
add
iret
add
add
jne
fdivrs
call
add
pop
add
push
sub
rol
pop
ret
push
push
push
push
call
add
add
add
add
arpl
sahf
add
mov
add
mov
xchg
add
jge
clc
movb
out
add
movl
push
mov
add
aam
add
popa
ffreep
add
mov
lea
pop
jmp
cmpl
jne
push
push
shr
not
push
or
inc
add
not
sub
sub
add
pop
not
pop
push
lea
push
call
add
add
mov
mov
std
out
add
add
cmpsb
arpl
movsb
jns
add
add
mov
ja
stos
add
pop
add
add
ja
add
mov
add
data16
jne
push
lea
push
push
push
lea
push
push
push
push
push
call
add
les
testl
add
add
add
mov
add
add
pop
add
xchg
jb
add
jmp
fcmovb
insb
enter
loop
cltd
mov
lea
pop
call
push
shl
xor
pop
push
push
dec
pop
call
push
sub
shl
sub
pop
jmp
push
shr
rol
ror
inc
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
add
imul
addr16
add
add
push
mov
add
add
add
add
js
add
xchg
cmc
add
cld
add
lea
pop
mov
push
push
push
push
lea
push
push
call
add
jnp
xchg
loop
pop
push
mov
jns
add
rcrl
lods
pop
add
mov
gs
jne
out
add
lods
mov
std
push
xor
popa
add
add
mov
add
mov
lea
pop
mov
push
push
push
ror
dec
push
and
add
shr
sub
add
not
pop
shr
add
pop
push
ror
not
add
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
out
add
add
out
mov
add
stos
pusha
add
addl
mov
add
xchg
add
mov
lea
push
add
add
std
sbbb
fwait
leave
jnp
popf
std
sbbb
addb
mov
add
jl
stc
mov
push
add
add
add
add
add
jb
mov
lea
pop
call
push
push
lea
push
lea
push
push
push
push
push
call
add
cwtl
pop
pusha
add
pop
cltd
add
add
cwtl
add
add
add
add
pop
cli
lcall
add
add
loope
jno
imul
mov
add
mov
stos
loop
add
add
pop
call
push
push
sub
xor
push
or
inc
add
rol
add
lea
sub
sub
pop
shl
shl
pop
push
ror
shl
not
pop
pushl
call
push
push
push
call
add
add
jge
mov
add
add
add
aad
movb
xchg
roll
add
mov
push
pop
sti
into
add
add
sahf
add
mov
mov
mov
gs
arpl
add
xchg
lcall
in
add
pop
add
jbe
fs
filds
mov
lea
pop
call
push
push
shl
not
push
push
pop
add
not
inc
shr
sub
rol
shl
pop
add
sub
xor
pop
push
lea
push
call
push
lret
ret
add
pop
add
mov
call
jbe
add
iret
add
lcall
jecxz
add
push
ja
data16
add
add
add
add
stos
add
add
xchg
add
add
les
mov
ret
add
add
add
mov
mov
mov
lea
pop
pushl
push
lea
push
call
jmp
mov
pop
jne
add
imul
xchg
enter
stc
mov
jecxz
je
movl
jae
testb
loop
movl
insb
mov
imul
lea
pop
call
push
lea
lea
pop
call
push
ror
shr
add
pop
lea
push
push
ror
sub
push
or
not
add
xor
sub
inc
pop
sub
shl
add
pop
push
xor
not
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
call
add
pusha
nop
add
mov
fdiv
mov
add
pop
jb
add
lahf
add
lods
pop
aad
add
add
jp
lcall
cmc
jecxz
add
scas
add
fildl
mov
add
mov
lea
pop
push
call
push
push
shr
dec
rol
push
and
add
inc
add
sub
lea
xor
pop
add
pop
push
shr
pop
pushl
call
push
ror
pop
call
mov
push
push
lea
add
push
or
inc
add
ror
sub
inc
pop
lea
lea
add
pop
push
add
ror
pop
pushl
push
push
push
push
push
push
push
lea
push
call
mov
arpl
add
loopne
je
add
add
add
aam
add
jns
add
jmp
add
add
add
mov
add
add
loopne
cmpsb
stc
cmc
add
push
push
pop
add
add
jne
add
mov
aad
rolb
pop
add
add
add
add
mov
lea
pop
call
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
roll
rolb
mov
jns
mov
mov
jae
test
jmp
mov
aam
mov
std
rcll
out
icebp
add
jle
lahf
fimuls
hlt
add
negl
mov
lea
pop
push
push
add
add
xor
not
pop
call
push
push
shr
not
push
sub
add
add
sub
inc
sub
sub
pop
add
dec
pop
push
inc
add
not
sub
pop
pushl
push
push
push
push
call
jmp
lret
fiaddl
xchg
out
pop
add
add
jecxz
js
cld
jae
incb
sti
jno
add
mov
out
push
imul
add
mov
add
stos
jno
mov
lea
pop
call
push
push
push
push
call
out
mov
jmp
add
std
rcr
add
add
add
jge
push
mov
add
cld
pop
add
popa
rolb
cmpsb
add
jp
imul
add
add
jne
test
push
icebp
pop
add
add
xchg
movsl
add
add
jle
int3
mov
cmpsl
xchg
les
stos
xchg
xlat
mov
or
pushl
push
push
lea
push
push
push
call
push
add
push
mov
add
mov
add
add
std
mov
add
aam
add
roll
fbstp
lock
jnp
out
add
pop
out
jne
addl
mov
in
push
test
hlt
jge
add
add
in
add
shl
add
xchg
push
movb
add
jp
aad
std
add
mov
lea
pop
call
push
push
add
shl
shl
shl
push
or
not
add
shr
not
sub
add
pop
not
rol
pop
push
push
push
call
into
popa
movsb
add
aad
std
mov
loope
xchg
mov
stos
add
ja
push
push
push
pop
jae
add
add
add
mov
rolb
shll
cld
popa
add
test
add
add
hlt
add
incb
fstps
mov
lea
pop
pushl
push
sub
sub
sub
pop
call
push
push
ror
inc
shr
push
xor
add
lea
rol
sub
lea
sub
not
add
add
pop
sub
add
add
pop
push
push
shr
sub
not
push
push
pop
add
not
inc
not
lea
sub
ror
xor
lea
inc
pop
lea
not
ror
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
lods
add
push
hlt
out
mov
outsl
and
add
add
pop
add
iret
call
add
xchg
xchg
fldl
mov
cld
cli
add
add
add
add
add
fmull
icebp
add
cli
fidivl
jmp
pop
out
sahf
insb
add
gs
lea
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
add
add
add
ja
mov
repnz
frstor
pop
add
add
in
roll
add
add
scas
xchg
add
pushf
add
add
in
pusha
std
add
add
add
cli
aad
int3
add
add
add
add
add
faddl
mov
lea
pop
pop
push
sub
pop
dec
jne
call
push
push
call
mov
idiv
int
jno
shll
cmc
fidivs
add
add
push
add
leave
add
add
add
push
mov
pop
mov
add
mov
in
movsl
lahf
fcmovbe
add
std
cmpsl
rolb
pop
add
roll
add
lcall
add
pop
jmp
push
add
pop
call
push
push
inc
xor
push
or
inc
add
shr
dec
shr
sub
sub
add
pop
inc
sub
sub
ror
pop
push
push
push
push
call
add
hlt
pop
imul
test
add
add
movsb
cld
add
add
add
stos
fs
scas
add
add
jmp
in
je
add
lds
add
add
jae
add
pop
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
cltd
aad
pop
fs
jnp
mov
stos
aam
add
pop
int3
ja
push
jne
add
mov
shl
mov
jb
icebp
leave
add
add
jne
cld
cmp
mov
add
push
add
add
add
add
mov
pop
call
push
push
push
push
lea
push
lea
push
push
call
mov
add
add
popf
mov
lods
mov
add
mov
add
popf
add
out
scas
mov
stos
add
add
shlb
add
cmc
mov
add
add
cmpsl
mov
add
add
add
cltd
mov
notb
jb
jmp
add
pop
push
push
push
push
push
push
push
push
call
add
test
push
add
mov
add
pop
out
push
add
pop
lock
add
flds
jo
add
outsl
xchg
aam
push
lcall
sbb
call
mov
push
push
push
push
call
add
lock
test
insb
add
les
add
add
push
mov
push
rol
fwait
pop
outsl
push
test
lock
add
mov
test
add
mov
imul
mov
add
add
lea
pop
lea
push
push
not
dec
push
and
add
ror
sub
ror
shl
pop
sub
xor
sub
pop
push
sub
rol
pop
pushl
push
sub
sub
pop
call
push
add
pop
push
push
shl
pop
call
push
push
push
xor
add
dec
rol
sub
shl
pop
add
ror
dec
pop
push
lea
push
call
filds
gs
jecxz
jnp
lcall
xlat
add
pop
jb
cld
add
repnz
mov
add
roll
xchg
add
pop
icebp
add
add
add
pop
pushl
push
add
shl
pop
call
call
push
push
push
push
lea
push
push
push
lea
push
call
add
loop
add
mov
push
add
lcall
add
push
add
jne
orb
mov
add
in
add
aam
bound
pop
mov
push
lea
add
lea
pop
lea
push
push
rol
sub
ror
inc
push
or
not
add
inc
sub
sub
pop
add
not
xor
pop
push
push
call
lods
add
add
clc
mov
add
fadds
xchg
push
clc
lcall
shll
add
add
xchg
push
mov
add
xchg
add
add
add
add
add
lret
push
je
add
add
pop
test
fildl
xchg
push
add
add
add
imul
mov
lea
pop
pushl
push
ror
pop
call
lea
push
pop
push
push
push
push
push
push
push
push
call
add
add
add
add
push
std
in
add
mov
addl
add
roll
cltd
stc
add
fdivrp
add
add
add
stc
add
mov
mov
add
add
xchg
mov
addl
lea
pop
push
push
lea
push
push
call
shrl
mov
add
incb
arpl
lcall
add
out
mov
add
mov
addl
push
xchg
mov
add
pop
lret
sbb
add
bound
push
or
push
push
push
push
call
xchg
movsl
add
add
jns
popf
add
fisubl
roll
lret
push
shr
imul
jb
fcompl
fiadds
in
add
add
jmp
add
add
data16
add
hlt
fistps
insb
lds
in
jl
in
cmp
mov
lea
pop
pushl
push
push
add
push
xor
add
add
sub
shr
xor
add
shr
pop
lea
shl
pop
push
xor
sub
pop
push
call
push
push
lea
push
or
not
add
add
sub
xor
pop
inc
pop
push
dec
ror
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
xchg
nop
add
add
ljmp
je
add
popa
fcmove
test
incb
jnp
mov
mov
mov
push
mov
xchg
flds
jge
in
pusha
add
mov
lea
pop
call
push
not
pop
push
push
push
push
push
push
call
add
rcrl
mov
test
add
add
ja
push
jle
fimull
add
add
add
add
add
add
aad
hlt
mov
fistps
pop
call
push
push
shl
push
or
inc
add
dec
sub
xor
pop
add
pop
push
dec
add
add
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
in
push
out
add
add
test
data16
add
pop
xchg
clc
add
add
xor
sub
add
sti
mov
cli
jl
add
iret
add
add
add
shrl
add
int3
lea
pop
call
call
push
push
lea
push
push
push
call
pop
push
add
mov
add
add
leave
rcr
xchg
mov
add
push
out
cmpsb
add
test
add
mov
lahf
popa
addl
xchg
add
popl
add
popa
pop
test
fiaddl
mov
lea
pop
jmp
pushl
push
xor
sub
not
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
shl
movsl
add
add
add
stos
add
pop
mov
addb
js
mov
mov
lcall
loope
add
mov
mov
ror
adcb
ror
decb
pop
jmp
push
push
xor
push
or
not
add
lea
not
sub
rol
lea
pop
dec
inc
shl
pop
push
pop
pushl
push
lea
pop
call
push
push
pop
call
push
push
sub
sub
push
sub
add
add
sub
lea
xor
sub
ror
pop
not
ror
pop
push
lea
shr
pop
pushl
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
add
movsb
add
add
in
cmc
add
jmp
add
negl
popa
insb
call
add
testb
clc
add
add
add
add
mov
mov
add
add
jo
add
add
ljmp
add
jbe
mov
add
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
add
fcomps
push
add
lahf
push
add
add
pop
add
add
add
jnp
add
out
fiaddl
mov
mov
add
mov
lea
pop
push
push
pop
call
push
lea
push
lea
push
push
call
jno
mov
jbe
add
rorl
mov
test
loope
add
movsb
add
stos
stos
mov
add
mov
add
icebp
mov
lret
add
lods
iret
int3
add
int3
lea
pop
leave
add
push
pop
pop
push
lea
push
push
call
xchg
pushf
cltd
mov
jbe
mov
fwait
add
xchg
add
hlt
scas
ja
add
leave
lcall
in
in
aad
sarl
lahf
mov
in
pop
pushf
hlt
add
jecxz
notb
add
pop
add
add
xchg
test
ret
je
cwtl
add
pop
out
fldl
add
stos
add
fmull
push
lea
push
push
lea
push
push
call
fsubs
add
push
add
mov
add
lret
add
sbbl
mov
xchg
add
xchg
cld
movsb
add
mov
add
test
scas
add
add
pop
add
rclb
faddl
rcrb
xchg
fidivl
gs
mov
xlat
mov
mov
lea
pop
pop
pop
push
inc
lea
pop
leave
push
pop
add
ret
push
inc
shr
pop
leave
ret
push
rol
add
lea
pop
push
mov
push
dec
pop
cmpl
jne
push
rol
lea
pop
mov
jmp
push
push
push
push
push
lea
push
lea
push
call
loope
xchg
mov
add
add
lret
lcall
cmpsl
mov
add
test
add
addb
add
out
mov
add
mov
add
add
add
add
fldpi
add
xlat
pushf
mov
rol
add
pop
mov
and
push
push
push
push
push
push
push
lea
push
push
call
push
roll
enter
add
gs
ret
lret
add
mov
add
popl
out
jp
nop
popa
rcrb
push
add
add
add
pop
add
fiadds
popf
add
mov
movsl
xchg
add
int
out
add
fsubrl
push
add
mov
lea
pop
xor
xor
push
pop
add
xor
push
push
push
call
mov
add
jb
fldl
jne
mov
je
pop
outsl
int3
add
mov
gs
les
test
cltd
add
add
add
fwait
add
popf
add
std
xlat
push
mov
add
mov
jle
add
lods
mov
mov
lea
pop
dec
push
push
push
call
fs
jbe
add
loop
mov
clc
xchg
fnstcw
in
add
data16
fwait
add
add
popa
add
add
cltd
out
mov
mov
push
clc
mov
lea
pop
sub
push
lea
push
push
push
push
push
push
call
int
add
add
aam
add
enter
adc
stos
pop
jge
add
flds
add
add
addr16
jecxz
adcl
loop
bound
add
lods
pop
xchg
fld
add
xchg
icebp
mov
pop
push
add
imul
xlat
add
add
xchg
add
les
lret
add
jl
ficoml
icebp
push
lea
push
call
add
add
add
add
jl
mov
pop
add
jo
push
out
add
add
fucomp
add
roll
jp
mov
lcall
add
push
add
mov
enter
push
mull
mov
lea
pop
sub
pushl
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
add
in
popl
add
cwtl
aad
int3
stos
mov
add
testl
jbe
std
mov
mov
subb
jno
mov
mov
push
fildl
icebp
add
push
mov
add
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
jno
add
into
add
mov
rclb
movsb
adcb
out
js
fadds
jecxz
add
add
add
jns
fiaddl
push
add
add
fildl
push
addr16
add
add
add
add
cli
lds
add
add
test
aad
fdiv
mov
lea
pop
sub
push
push
push
push
push
lea
push
call
add
int
push
pop
add
mov
xchg
push
add
add
mov
shlb
mov
movsb
add
add
mov
imul
testb
add
aam
bound
pop
cmp
jne
mov
push
shr
shr
pop
lea
push
xor
add
pop
sub
mov
push
add
add
sub
pop
shr
push
shl
ror
pop
add
push
shl
inc
pop
sub
push
shl
inc
shr
lea
pop
pushl
push
rol
pop
pop
push
inc
add
inc
dec
pop
shr
and
push
inc
add
pop
sub
push
lea
push
lea
push
push
push
push
lea
push
call
add
fcmovne
add
sbb
pop
mov
jp
lock
lret
lock
jno
arpl
push
addr16
add
repnz
outsl
repnz
add
mov
mov
add
add
test
add
ret
loop
add
cltd
scas
xchg
arpl
sar
add
addr16
cmp
jne
push
dec
inc
add
xor
pop
leave
push
sub
shl
pop
ret
push
inc
add
pop
push
push
shl
shl
pop
mov
push
shr
sub
not
pop
add
push
sub
pop
push
push
shr
add
pop
push
push
push
lea
push
push
push
push
call
mov
add
add
add
mov
add
jecxz
add
add
incb
call
ja
add
push
scas
clc
mov
sbb
push
lea
push
push
lea
push
push
call
add
test
jl
arpl
insb
cli
add
add
jmp
add
lahf
test
gs
xchg
add
faddl
add
add
jnp
add
lods
push
mov
add
mov
lea
pop
push
push
rol
pop
push
push
ror
pop
mov
push
ror
pop
lea
push
xor
pop
sub
mov
push
not
add
pop
shr
push
push
call
pop
outsl
mov
xchg
mov
cld
xchg
test
fcmovu
add
lea
xchg
fmul
xchg
push
nop
mov
ret
mov
pusha
stos
popf
movl
add
adcb
push
popa
mov
jbe
jno
div
mov
add
pop
add
push
inc
add
pop
mov
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
xchg
lea
fistps
add
shlb
add
mov
pop
push
rcl
mov
push
push
test
push
add
loope
add
stos
mov
popa
sub
jnp
push
add
pop
add
push
lea
push
push
call
add
div
add
add
mov
testl
lahf
mov
push
xchg
loopne
add
jmp
add
xchg
mov
add
addb
lds
jmp
pop
jae
shl
add
lock
add
pushf
xchg
mov
fcomip
nop
mov
lea
pop
xor
push
inc
pop
mov
push
inc
dec
pop
and
push
shl
sub
inc
not
pop
rol
rol
push
lea
push
lea
push
lea
push
call
mov
fcoms
cmc
pop
rolb
loope
pop
push
jne
aad
sbbl
les
scas
lds
add
into
mov
jmp
add
loopne
xchg
add
testl
lea
pop
xor
push
pop
inc
push
add
pop
cmpb
jne
push
push
push
push
push
lea
push
push
push
call
add
add
cltd
jecxz
pop
add
add
add
add
test
add
add
popf
jo
outsl
call
add
add
push
push
xchg
cli
and
mov
rolb
clc
jecxz
add
iret
add
add
hlt
lea
pop
add
push
shr
lea
pop
cmp
je
push
inc
ror
add
pop
add
cmpl
jne
push
lea
shr
pop
xor
push
shr
sub
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
call
add
scas
add
bound
fsub
jns
add
add
mov
add
add
add
push
add
mov
hlt
mov
add
arpl
flds
mov
push
cli
fildl
add
add
pop
pop
push
lea
push
push
call
add
imul
jl
add
mov
imul
mov
add
popl
fwait
add
add
add
in
int
lret
add
add
add
add
lcall
pop
pop
push
add
not
ror
pop
pop
pop
push
push
lea
push
push
call
lods
jae
fildll
add
aam
add
add
sti
add
in
push
pop
mov
add
add
cmpsb
in
xchg
jae
addr16
mov
mov
add
pop
mov
add
cltd
add
mov
lea
pop
leave
push
lea
push
push
push
push
push
push
push
push
call
pop
test
imul
lods
add
add
add
jnp
add
mov
add
add
scas
add
ja
mov
pop
add
add
fwait
aam
jo
mov
cld
mov
pushf
int3
xchg
add
in
mov
cwtl
ljmp
pusha
and
ret
push
shl
ror
lea
xor
pop
mov
add
push
sub
pop
push
push
lea
push
lea
push
push
push
push
call
add
movsl
add
add
mov
add
xlat
lahf
icebp
mov
add
stos
lret
jge
negb
pop
roll
int
hlt
add
ljmp
movsb
out
mov
lea
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
lret
jb
jp
mov
into
les
mov
mov
jl
add
std
mov
xchg
mov
add
jae
add
iret
mov
jge
insb
adcb
add
add
lea
pop
add
push
lea
push
push
push
call
push
mov
pop
cltd
pop
roll
mov
in
loope
add
add
mov
mov
subl
aad
push
add
add
add
jne
xchg
sahf
jo
mov
mov
popf
cli
enter
jmp
add
loope
mov
push
add
jns
add
in
add
add
mov
mov
lea
pop
xor
push
push
push
call
mov
add
aad
add
add
arpl
pop
add
add
add
mov
add
add
add
push
mov
add
cltd
pop
js
fmull
add
mov
jae
push
push
call
test
test
jp
push
mov
in
fwait
jecxz
mov
add
scas
jmp
add
add
add
flds
add
fiadds
imul
mov
jae
mov
add
add
add
movsl
add
cmc
add
scas
cwtl
in
jp
mov
adc
testl
push
push
push
push
push
lea
push
lea
push
push
call
adcb
enter
add
nop
mov
add
add
stos
jle
add
mov
cli
jae
rcll
add
mov
lds
loopne
add
jmp
add
jae
add
add
add
add
push
jnp
mov
lea
pop
pop
push
xor
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
push
add
pop
add
cwtl
add
add
push
push
fld
add
add
jno
add
lret
jne
add
mov
add
popf
mov
shl
jo
add
cld
add
jo
add
fdivrs
add
loope
add
cld
lea
pop
mov
push
lea
push
push
call
add
mov
add
jne
aad
push
add
mov
mov
add
add
mov
push
jl
add
popf
out
pop
add
add
pop
cli
add
data16
add
add
test
push
add
xchg
mov
push
add
popa
or
push
push
push
push
push
lea
push
push
push
push
call
ljmp
cltd
pop
add
jae
int
push
mov
mov
add
jmp
add
mov
movsb
add
add
add
add
add
pop
call
xor
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
mov
popl
add
loop
pop
push
mov
outsw
mov
mov
pop
mov
mov
jne
add
xchg
roll
add
ja
jns
int3
add
or
add
add
add
mov
mov
stos
xchg
addb
add
hlt
lea
pop
pop
push
sub
pop
pop
push
shr
pop
pop
push
inc
lea
dec
pop
pop
push
inc
pop
pop
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
push
fstpl
mov
filds
pop
mov
ror
fcmovne
add
mov
add
push
fcompl
std
sahf
add
js
cltd
imul
fld
pop
iret
add
insb
add
lock
add
fmull
push
push
push
lea
push
push
lea
push
call
add
mov
mov
add
xchg
push
push
test
out
add
jmp
lods
mov
rolb
in
shll
mov
mov
fdivp
add
mov
lcall
lods
out
hlt
add
mov
cli
pop
arpl
add
into
divb
popf
cwtl
imul
in
pusha
testb
test
mov
lea
pop
ret
push
push
call
sti
add
pop
add
add
add
enter
insb
add
mov
jb
jae
fsubrs
popa
pop
cmc
std
mov
add
pop
cmpsl
pushf
mov
or
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
fiadds
add
cmc
add
jns
lds
add
out
addb
addl
scas
add
add
pop
add
mov
out
out
push
add
add
add
insb
jle
ret
xchg
add
mov
jne
cmp
loopne
pop
addr16
lea
pop
add
push
push
sub
pop
push
push
pop
push
push
push
push
push
push
push
push
call
lods
call
add
enter
add
mov
add
add
xchg
add
mov
cwtl
je
hlt
push
stos
add
add
lea
add
add
mov
add
pop
push
insb
fadds
add
cltd
out
add
lret
add
mov
mov
pop
imul
out
add
add
pop
push
push
sub
pop
mov
push
push
push
push
call
add
out
test
add
xchg
add
add
add
push
add
cmc
popf
stos
nop
jnp
add
mov
sahf
repnz
add
add
nop
ja
xchg
add
icebp
add
test
add
add
test
add
mov
add
push
int3
lea
pop
push
pop
push
push
lea
push
push
push
push
lea
push
push
call
aad
bound
add
add
lods
add
add
mov
fmulp
mov
pop
fbld
loope
rclb
add
add
add
movsl
jno
movl
lea
pop
lea
push
add
dec
sub
pop
sub
push
lea
push
push
push
push
push
lea
push
call
mov
ret
xchg
cmpsb
add
xchg
mov
scas
fstps
add
jmp
pushf
jne
add
popa
push
add
outsl
push
add
aam
ja
fildl
add
add
add
add
add
add
pop
mov
push
rol
xor
pop
shr
add
push
not
dec
pop
mov
add
push
dec
lea
shr
inc
pop
pushl
push
push
push
lea
push
push
push
call
fs
add
mov
xchg
add
arpl
js
out
add
mov
movsl
sahf
rol
add
add
add
add
push
jge
push
mov
call
lds
lret
add
add
popa
sbb
inc
clc
push
xor
rol
rol
inc
pop
mov
push
ror
pop
add
xor
push
push
call
mov
cmc
shr
aad
add
xchg
push
add
add
pop
arpl
lods
ret
add
add
add
pop
push
mov
bound
add
add
add
pop
loop
add
add
jecxz
mov
add
add
mov
add
add
pushf
add
stos
arpl
jbe
jmp
fisubs
mov
lea
pop
lea
push
push
call
testb
add
in
xchg
add
add
xor
add
cld
add
jbe
jns
push
hlt
add
add
test
cmpsl
loop
mov
add
xchg
push
add
add
incb
in
add
add
mov
lea
pop
mov
push
xor
lea
shl
pop
add
push
shr
pop
xor
push
add
pop
rol
push
push
call
out
xlat
mov
add
add
mov
jae
jmp
clc
mov
pop
add
add
cli
addr16
push
pop
bound
add
add
loope
add
gs
add
add
add
icebp
add
add
icebp
mov
cmc
mov
add
add
add
out
xchg
lea
mov
addl
lea
pop
nop
nop
push
lea
push
push
call
add
aam
lcall
negl
push
add
add
pop
pop
jge
lret
push
int
add
fcomps
lods
add
imul
add
les
push
lahf
jne
add
roll
add
add
jns
add
xchg
xchg
jbe
mov
add
add
add
xchg
roll
lock
iret
mov
les
add
rol
pop
nop
inc
push
sub
xor
pop
nop
nop
push
inc
ror
pop
cmpb
jne
push
xor
pop
add
nop
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
lahf
mov
xchg
sahf
pushf
add
fdivrp
sbbb
add
fsubrl
add
test
out
in
add
push
add
add
push
lahf
add
out
add
add
add
add
add
add
add
add
stc
out
add
std
movb
lcall
add
jns
fmull
cmp
je
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
ljmp
add
xchg
lock
ficoml
add
xchg
imul
repnz
pop
add
gs
jne
jns
data16
hlt
add
mov
mov
imul
xchg
pop
xchg
movsl
add
xchg
out
add
lahf
add
jb
mov
lea
pop
nop
nop
push
lea
push
push
push
call
divb
sti
add
add
mov
add
add
add
test
add
add
mov
add
jge
addb
shl
rolb
lods
mov
push
add
test
les
push
not
add
pop
nop
push
push
push
push
push
push
push
call
aam
lahf
add
cltd
add
popl
enter
add
add
aad
fcmovb
push
add
ret
push
in
rcrb
mov
add
cld
add
cli
leave
jle
add
add
add
add
add
lock
test
aad
in
add
add
sti
loopne
gs
aad
xchg
leave
add
add
out
pusha
add
pop
nop
push
add
lea
pop
cmp
jb
push
sub
shr
add
dec
pop
xor
push
lea
push
push
call
add
xchg
add
add
mov
add
mov
add
mov
fldz
nop
jno
add
add
add
jecxz
faddl
jmp
add
neg
push
add
push
test
testl
data16
mov
leave
xchg
add
into
push
mov
lea
pop
jmp
push
push
call
je
add
add
add
add
add
add
mov
add
mov
add
imul
cmpsb
push
shrb
sti
fiadds
mov
mov
or
push
and
lea
push
push
call
mov
add
xchg
data16
add
add
jl
rcl
xchg
aad
add
xchg
xlat
xchg
mov
add
lods
clc
movsb
add
movb
add
add
pop
add
push
push
push
push
push
push
push
lea
push
push
call
add
add
rolb
mov
add
scas
repnz
add
fwait
mov
imul
add
add
jp
add
js
add
jnp
orl
movzwl
push
inc
add
sub
pop
mov
push
shr
dec
xor
pop
add
mov
push
lea
push
push
push
call
mov
push
lods
pop
add
jno
mov
lock
add
mov
nop
fiadds
xchg
add
add
add
add
fwait
addl
outsl
add
enter
add
test
hlt
lea
pop
xor
push
lea
add
sub
pop
xor
push
sub
shr
shl
dec
pop
shl
push
lea
push
call
add
int3
jmp
add
mov
add
into
fwait
in
addr16
mov
add
mov
lea
cmpsl
add
mov
push
mov
fildl
movsl
movsb
add
mov
int3
loopne
xlat
std
add
add
add
lock
xchg
in
jne
popa
cwtl
add
jno
add
mov
lea
pop
xor
shl
push
not
pop
xor
push
push
call
add
jb
jp
add
add
cld
add
add
add
add
mov
sti
popf
add
out
add
loop
mov
add
add
rorb
add
add
in
fs
scas
fiadds
jne
lret
xchg
pop
js
add
add
add
bound
pop
shl
xor
push
push
push
call
int3
add
add
pop
icebp
in
test
jo
jecxz
mov
jbe
cmpsl
ret
add
add
push
jo
jmp
imul
add
je
incb
mov
popa
or
mov
add
push
add
shr
not
pop
pop
push
push
lea
push
push
lea
push
push
push
call
jecxz
add
idivb
fildll
testl
push
in
add
out
xchg
fildl
out
add
in
add
push
pop
add
pop
add
jge
jmp
add
add
stos
jmp
insb
sahf
mov
add
mov
xchg
test
cmpsl
add
push
pop
divl
loop
mov
addr16
pop
push
shr
pop
pop
push
dec
inc
pop
pop
leave
push
not
not
pop
ret
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
popf
add
add
aam
xchg
add
cmpsb
popf
add
push
add
add
int3
loope
xchg
add
add
pushf
add
movsl
add
bound
iret
mov
ja
stc
mov
hlt
popa
push
mov
lea
pop
mov
push
dec
pop
push
push
add
shr
pop
push
push
push
push
push
push
push
lea
push
call
jns
pop
in
mov
add
ficoms
insb
hlt
sbb
pop
pop
push
add
jb
add
mov
add
jmp
push
add
rol
cli
outsl
incb
subl
mov
lea
pop
push
mov
push
add
sub
shl
add
pop
mov
push
sub
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
lock
add
loop
add
ret
iret
xchg
hlt
xchg
push
movsl
mov
add
popf
repnz
push
add
out
test
mov
add
add
add
fwait
ret
xlat
movsb
insb
js
clc
insb
out
push
ja
add
iret
jbe
mov
add
mov
mov
mov
add
add
xchg
add
aam
cld
lea
pop
test
je
mov
push
shr
pop
test
je
push
lea
push
lea
push
push
lea
push
call
clc
push
pushf
jns
add
add
add
add
add
add
add
pop
jle
mov
add
pop
addl
add
cmpsl
add
mov
sarb
add
je
add
add
mov
add
add
jns
add
add
add
push
xlat
add
pop
mov
push
add
addl
add
fwait
mov
add
mov
lea
pop
mov
push
shr
dec
pop
mov
push
sub
shr
sub
add
pop
mov
inc
push
ror
shl
pop
cmp
je
push
lea
push
call
pop
iret
int
enter
push
add
fsts
pop
push
add
pop
ljmp
imul
lock
imul
add
in
int3
add
enter
add
enter
aam
bound
pop
test
je
push
sub
rol
rol
pop
mov
push
pop
inc
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
add
add
push
mov
jecxz
xchg
test
add
push
jo
popl
add
bound
insb
pop
add
add
xlat
bound
mov
insb
add
xchg
add
cltd
add
pop
clc
add
pop
cmp
je
test
jne
push
push
push
push
push
push
push
push
push
push
call
add
xchg
jbe
xchg
clc
jo
mul
pop
pop
add
sti
pop
js
sarb
mov
in
jne
xchg
nop
add
cltd
add
add
out
push
mov
add
pop
xor
push
shr
not
xor
sub
pop
pop
push
push
push
push
call
sti
insb
add
jnp
add
repnz
add
add
jbe
addb
push
push
hlt
cld
add
faddp
add
cld
int
add
sahf
fdivs
addb
mov
lea
pop
pop
push
shl
sub
shr
pop
pop
pop
push
not
pop
leave
push
add
sub
xor
pop
ret
mov
push
lea
push
lea
push
push
push
call
lods
add
add
push
addl
push
add
add
add
add
add
add
loop
jecxz
mov
push
add
call
fucomip
cmc
add
movsb
stos
pop
add
add
mov
lea
pop
inc
push
push
call
mov
rclb
add
add
push
les
add
rolb
add
popa
fninit
mov
add
push
cltd
enter
add
gs
add
add
cltd
push
lret
rolb
iret
mov
imul
mov
add
add
add
add
bound
leave
push
xchg
mov
mov
mov
add
mov
push
fadds
add
add
pop
cmp
jne
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
lds
jmp
mov
mov
lods
add
add
xchg
out
add
mov
lret
jb
add
incb
mov
add
aad
addr16
mov
push
add
mov
add
lcall
std
lods
add
jecxz
std
add
out
mov
add
rolb
add
cmc
icebp
add
mov
lea
pop
lea
mov
push
push
push
push
push
call
out
mov
add
loope
imul
ja
les
add
imul
pop
add
xchg
jnp
aam
add
imul
add
add
add
push
iret
add
pop
mov
mov
add
div
movb
orb
test
je
push
rol
pop
mov
add
push
push
push
push
push
push
push
lea
push
lea
push
call
cmc
in
mov
imul
xchg
add
push
push
add
xlat
add
add
out
add
filds
lahf
lods
rolb
out
clc
add
lods
add
fistpl
add
pop
add
test
popa
and
cmp
jne
push
push
lea
push
push
lea
push
lea
push
push
push
call
loope
add
fwait
mov
mov
add
jb
add
add
mov
pop
pop
divb
js
imul
pusha
je
jo
in
add
add
mov
add
mov
imul
nop
cltd
cmpb
and
inc
add
add
push
add
pop
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
xchg
fs
in
stos
sarl
add
outsl
testb
mov
addl
add
jp
add
mov
imul
stos
mov
add
xchg
jne
jmp
add
mov
add
mov
mov
int3
add
clc
leave
ror
mov
add
add
add
lds
add
mov
lea
pop
add
push
xor
add
pop
cmp
je
push
dec
xor
rol
pop
jmp
xor
push
push
call
loop
cld
add
add
lods
add
add
pop
in
into
add
shl
mov
xlat
enter
jno
add
add
add
movsb
add
push
add
or
pop
push
dec
inc
xor
pop
pop
pop
push
inc
inc
pop
leave
push
lea
add
add
add
pop
ret
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
je
add
fiaddl
test
jl
push
add
pop
xchg
loop
add
lds
fwait
cltd
add
addl
jle
divl
pop
imulb
add
subb
js
cwtl
in
jb
add
loopne
bound
scas
jp
add
add
add
repnz
jno
add
pushf
mov
lret
add
pop
lea
push
push
lea
push
call
add
add
call
out
add
repnz
mov
add
lea
mov
imul
jae
add
add
in
fnstsw
filds
stc
xlat
add
fninit
add
add
cld
add
outsl
add
bound
lods
out
add
add
les
push
push
push
push
push
lea
push
lea
push
push
call
add
sti
pop
add
rolb
jo
shll
push
bound
add
mov
fsubrp
mov
test
cmpsl
lret
cltd
test
add
pop
rolb
add
lcall
add
add
outsl
xchg
scas
add
add
add
lret
sarb
add
mov
test
mov
movsl
out
add
add
add
mov
lea
pop
pop
push
dec
pop
pop
pop
push
shl
sub
sub
pop
leave
push
add
pop
ret
mov
push
lea
push
push
call
add
pop
add
mov
leave
push
repnz
add
mov
cmpsb
jge
push
add
loop
add
add
mov
push
jp
add
fldl
jnp
xchg
aad
add
lcall
add
cwtl
add
add
add
fmull
pop
push
inc
pop
pop
push
pop
pop
push
ror
shr
pop
leave
push
push
push
push
call
add
addb
add
add
add
add
add
add
shrl
outsl
lret
add
push
add
pop
add
pusha
imul
lock
les
add
les
or
cli
push
pop
jb
push
pop
jb
test
jb
sub
xchg
push
pop
jb
adc
pop
jb
xchg
pop
jb
imul
pop
jb
add
add
inc
dec
popa
mov
cmp
or
iret
ss
mov
imul
or
push
add
add
push
arpl
pop
push
rolb
daa
icebp
loopne
pop
imul
lds
pop
add
mov
mov
pop
fbld
fs
faddl
punpckhwd
out
jne
push
movsl
mov
movsl
jae
pop
imul
xchg
js
ja
icebp
aaa
xchg
xor
popa
or
loop
ret
xchg
or
push
jne
pop
imulb
repnz
jg
inc
stos
cmp
inc
fwait
cmp
adc
lcall
adc
test
decb
pusha
cltd
xor
pop
test
xchg
jmp
test
in
xchg
clc
mov
lcall
out
dec
add
inc
testb
and
nop
jl
outsb
xor
outsl
repz
push
out
clc
scas
mov
xchg
fldl
mov
call
fbld
fwait
fs
scas
xor
insb
pcmpgtd
fdivrl
add
push
push
pop
sbb
into
jg
jnp
push
es
pop
decl
sar
shl
loopne
jae
ljmp
cmpsl
pop
xorl
les
int
das
pop
xchg
add
ret
je
xchg
dec
pop
inc
push
leave
push
lock
movsl
out
xchg
movsb
sbb
and
xchg
jne
stc
rclb
and
dec
mov
mov
and
scas
sub
adc
pop
repnz
mov
cmp
mov
adc
xchg
insb
and
push
arpl
arpl
inc
and
pop
mov
adc
incl
mov
icebp
lock
mov
xchg
mov
mov
mov
xchg
enter
jns
jbe
dec
test
mov
adc
adc
jb
les
mov
jp
add
jmp
les
loope
cli
push
push
dec
ret
lods
sbb
or
inc
stos
mov
cltd
arpl
sarb
xor
icebp
xchg
and
insl
shlb
stc
mov
push
push
fistl
fs
cmc
add
in
push
sti
sti
in
jecxz
sub
stos
mov
push
test
mov
jno
push
xchg
xchg
mov
jne
divb
add
and
cmp
inc
loopne
add
cmp
or
mov
inc
insb
cwtl
rcl
dec
out
imul
inc
dec
int
push
jno
stos
add
jbe
jns
das
insb
lahf
test
push
add
mov
out
jmp
pop
into
not
mov
sub
pop
mov
in
js
scas
shlb
lods
sub
pop
jae
mov
icebp
popf
pusha
sbb
mov
adc
cmpsb
sub
pop
fld
or
sub
mov
xor
or
test
fdivr
push
adc
in
cmp
sbb
mov
icebp
hlt
insl
sti
je
cmp
lock
dec
cwtl
cwtl
lds
daa
mov
sub
cmovl
cmp
dec
cmp
jp
cld
xchg
mov
aam
cmpsb
jne
xchg
jnp
test
add
rcr
sahf
out
int3
push
cmc
ds
ja
sti
lea
subb
jmp
stc
push
cld
ja
jo
and
fcmovnu
in
lret
push
idivb
test
ds
mov
pop
dec
push
scas
inc
dec
adc
cmp
out
mov
notb
add
sbb
insb
cmp
bts
pop
inc
aaa
call
and
adc
dec
pop
lock
test
xchg
mov
aaa
scas
cwtl
shll
jb
sub
out
ret
insb
xor
mov
movb
or
mov
mov
shrb
pop
pop
pop
and
out
es
and
roll
sub
cmp
inc
xor
xchg
jno
movsl
mov
push
xor
stos
aas
and
and
lcall
lock
es
jge
cs
push
call
pop
les
fcompl
outsb
pop
push
xchg
insl
sarb
adcl
push
jns
shl
imul
icebp
ret
adc
and
stos
pusha
sbb
lahf
fndisi(8087
js
shlb
xchg
push
inc
insb
pop
stos
mov
xchg
pop
mov
adc
jb
xchg
out
fcomps
loop
lcall
pusha
mov
push
clc
xchg
mov
lahf
out
add
lret
pop
outsb
inc
in
pop
mov
xor
cmp
jbe
lods
aas
cmp
xchg
sub
mov
hlt
leave
mov
adc
sbb
cmpsb
mov
loopne
pop
xor
push
add
imul
adc
xor
pop
push
push
bnd
loop
stc
stos
lea
push
lods
sbb
pop
es
xor
mov
add
inc
in
bound
repnz
dec
dec
aam
stos
inc
int3
insb
dec
dec
std
jg
test
pop
stc
insb
ds
test
loope
mov
vpclmulqdq
pop
sbb
push
test
pop
int
imul
adc
ja
dec
lret
lcall
or
pop
int
lcall
xchg
fsubp
out
jmp
pusha
shl
mov
sub
sti
lock
jle
pop
pop
or
lahf
jp
sbb
aaa
movsl
and
mov
loopne
jae
push
mov
mov
pop
adc
mov
and
sbb
mov
repz
into
dec
pop
enter
pop
pop
repnz
mov
mov
out
cmp
xchg
in
dec
lds
cmp
add
shlb
into
loopne
push
jnp
jns
int3
scas
push
lcall
in
jge
iret
sub
or
repnz
in
pop
mov
mov
xchg
aas
shl
test
xchg
pop
sub
jae
js
ret
dec
xchg
ret
xchg
das
jecxz
mov
out
aam
out
rcll
outsb
jbe
or
dec
or
sub
fucomip
es
cmpsb
imul
mov
xor
daa
mov
sbb
enter
mov
inc
dec
add
in
int
scas
sbb
inc
pop
pop
jmp
push
ja
sub
inc
fsubr
xchg
dec
xchg
cld
iret
js
ret
xor
jne
jb
popa
mov
push
nop
inc
outsb
lods
inc
jns
lock
loope
cmp
xchg
gs
adc
test
cmp
jg
subl
in
je
push
adc
addb
jecxz
pop
dec
loopne
sub
and
jno
jo
push
aad
mov
addr16
mov
call
xchg
jge
nop
imul
sub
push
lods
push
jp
pop
cmpsb
addl
addr16
gs
mov
xor
pop
mov
ret
pop
sub
loopne
jg
scas
mov
pop
mov
add
ret
mov
xor
fstpl
pop
add
ret
dec
and
push
js
push
xchg
sar
and
nop
cmpb
pop
out
pop
adc
out
xorb
xchg
push
aad
daa
mov
sub
loop
rcl
cmp
lea
adc
adc
es
xor
pop
mov
ds
sbb
inc
push
and
es
arpl
mov
inc
add
aad
fistpll
lods
xchg
adc
ret
xor
arpl
mov
push
and
sbb
adc
aam
mov
ds
shrb
ljmp
cmp
push
and
inc
dec
mov
int
bsr
fwait
adc
mov
std
testl
lods
stos
addr16
add
nop
dec
std
subl
push
sbb
adc
inc
mov
fsts
xchg
ret
clc
loop
sub
fisubrl
push
lock
sub
dec
cwtl
lahf
sub
aas
das
pop
jb
fdivs
xchg
int
cltd
lods
pop
push
xor
cwtl
fimull
xor
pop
dec
sub
in
xor
sahf
mov
dec
loope
push
out
int
dec
cmp
cmp
mov
fs
lret
aas
mov
popa
dec
rorb
scas
pop
inc
dec
ljmp
cli
mov
lds
shlb
dec
mov
or
pop
or
cltd
sub
push
ss
sti
loop
call
ds
je
in
lret
xchg
cmp
pop
mov
push
fsubl
movsl
dec
mov
inc
xlat
out
cmp
xchg
pop
outsl
sub
and
push
ljmp
aas
cmp
xor
mov
push
push
xchg
cmp
mov
inc
push
pop
cmp
fldl
cltd
stc
adc
ja
loopne
sbb
dec
and
fs
push
fcomp
cmp
mov
and
inc
cmp
andl
add
std
xlat
jecxz
mov
lcall
inc
shll
ljmp
adc
and
and
movsb
imul
roll
cmc
data16
cmp
mov
stos
in
adc
mov
push
icebp
lock
js
daa
repnz
lcall
sbb
cmc
mov
add
and
mov
adc
xor
ljmp
mov
stc
or
test
ja
rcll
loopne
arpl
fs
pop
lock
int
fnstcw
xchg
lcall
jl
mov
jg
ss
xchg
sub
fists
rcrl
fstps
or
mov
test
fiaddl
scas
xor
roll
add
out
push
scas
andb
lret
cltd
leave
push
mov
add
jae
sub
and
daa
xchg
xchg
test
mov
fdivl
push
into
lds
sub
loop
inc
out
inc
pop
xchg
adc
loope
pop
mov
loope
push
cltd
cmpsl
cmpsl
ret
inc
int
mov
pop
call
stc
insb
xorb
and
pop
xchg
xor
in
mov
outsb
sbb
mov
mov
sbb
rcrb
dec
shll
hlt
into
pusha
sbb
stc
inc
rcl
pop
das
stc
cmp
ds
dec
push
and
xlat
sub
lahf
and
test
test
test
iret
sahf
lods
fldl
pop
sbb
inc
inc
leave
fwait
imul
mov
fstpt
jbe
sub
inc
pop
out
xchg
les
xor
mov
inc
mov
dec
je
icebp
inc
roll
sarl
inc
jae
pop
out
shr
stc
nop
addr16
inc
fisubs
ja
push
in
mov
sti
sar
repz
sub
xchg
or
roll
sbb
out
pop
pop
cs
add
push
xchg
sbb
cmp
lea
lods
inc
push
icebp
cmp
mov
vmwrite
stos
fbld
cmpsl
dec
test
cmp
xor
ja
xor
outsl
jae
and
in
inc
outsl
cmpsb
jnp
leave
xorl
adc
loopne
std
jle
and
out
ljmp
lret
sbb
mov
roll
dec
lock
dec
mov
and
popa
mov
sbb
jge
insl
in
jge
mov
rolb
out
jns
mov
mov
aaa
mov
adc
mov
iret
mov
push
dec
and
jns
add
sub
fistl
pop
fimull
add
das
sbb
loop
inc
xchg
ret
int3
popa
shll
mov
jp
cmp
movsb
sbb
sti
int
cli
mov
push
adc
mov
ret
or
pop
cmp
or
mov
sub
aas
arpl
dec
ss
xchg
mov
rclb
cld
into
adc
insl
mov
mov
cmp
jl
insl
test
call
les
inc
ret
imul
pop
nop
out
xlat
shl
push
outsl
pop
addr16
ficompl
inc
inc
sbb
ss
clc
or
fdivs
pop
mov
rclb
mov
xchg
and
push
add
fildll
pop
loop
dec
movsl
rcll
test
fnsave
pop
cwtl
aas
mov
jl
fucom
cwtl
jecxz
xor
outsl
out
pop
ficoms
mov
pop
mull
fbstp
mov
mov
xchg
cltd
push
add
fmuls
fiaddl
repnz
and
pop
std
pop
cld
fsubrl
fcmovu
or
fstpt
inc
lea
test
popf
inc
dec
cmp
divl
adc
mov
adc
cli
pop
adc
hlt
xor
das
push
imul
pop
sub
dec
jno
inc
pop
mov
das
out
test
lods
shll
xor
orb
cltd
jnp
cs
out
pop
dec
adc
call
mov
add
int3
cmp
xchg
ljmp
icebp
push
aaa
fcmove
mov
hlt
and
add
mov
ss
fldcw
lea
sahf
into
icebp
loop
ss
pop
cmp
lret
out
call
addr16
das
add
push
aas
cli
fs
xor
repz
push
push
icebp
jge
adc
or
jb
xchg
pop
cmpsl
insb
xor
les
push
dec
outsl
xchg
and
repnz
daa
xchg
mov
mov
mov
inc
repnz
in
mov
xor
test
repz
faddl
loop
mov
push
xchg
pushf
jge
mov
divl
sub
sub
dec
xchg
pop
ss
mov
dec
inc
gs
xor
cvtps2pd
push
add
sbb
mov
out
movsl
mov
and
fadds
push
ficompl
aam
mov
dec
out
lea
out
cmp
ret
fiaddl
hlt
arpl
jmp
adc
fimuls
addr16
sbb
xchg
inc
daa
push
pop
movsb
outsb
movsl
push
popl
push
mov
filds
add
mov
adcl
add
fmull
std
out
xchg
ret
fcompl
fmul
and
xor
add
mov
inc
insl
arpl
jp
mov
jle
jg
pop
incb
stc
push
sti
mov
push
adc
jg
xchg
pushf
jb
or
xor
nop
mov
add
bound
cmp
cmp
arpl
sbb
xlat
into
into
mov
sbb
adc
add
xchg
jae
jo,pt
sub
and
movb
sbb
filds
not
cs
nop
adc
and
lds
mull
movsl
mov
insl
lret
jmp
hlt
pop
push
or
sub
cmpsl
repnz
inc
lea
cmc
xchg
push
lret
icebp
fmul
sbb
dec
add
mov
test
push
in
mov
loopne
push
lock
sub
push
xor
add
repz
inc
cs
push
jb
lods
and
enter
loopew
data16
divb
lret
aad
outsb
test
cmp
in
pop
pop
cmp
or
rcll
or
jb
popf
ficompl
ret
and
ret
adc
mov
mov
mov
fcoms
test
push
lahf
sub
pop
mov
push
mov
mov
sub
mov
cmc
pusha
or
mov
pop
in
je
andb
or
and
jnp
mov
dec
int3
rorl
repz
sti
into
daa
cwtl
js
test
test
ret
xchg
mov
fwait
pop
inc
sbb
cmpsb
sub
mov
mov
jae
cmpl
add
lods
gs
push
pop
aad
push
out
mov
ds
cmp
rcrb
xor
sahf
jp
arpl
jnp
jae
mov
mov
push
dec
push
mov
inc
out
mov
inc
lcall
inc
pop
and
je
jae
rcr
loope
jb,pt
sbb
sahf
xchg
mov
jg
aaa
xchg
mov
lret
pusha
cld
jp
roll
cld
xchg
daa
jne
sbb
pop
inc
inc
sbb
sub
xchg
ret
cmp
jno
lcall
sbb
adc
sar
sbb
scas
push
data16
sarb
xchg
ds
or
stos
negl
mov
cltd
adc
dec
sahf
mov
dec
out
outsb
dec
sub
inc
push
sub
mov
jb
nop
fidivs
mov
adc
sbb
xchg
jb
fadd
dec
adc
push
aaa
imul
xchg
fcmovu
and
push
in
or
sub
sbb
leave
mov
xor
stc
pop
xor
in
mov
decl
in
stc
fcomi
push
movsl
cwtl
test
mul
lock
clc
or
inc
dec
jle
clc
jecxz
xchg
mov
stc
and
rcr
add
out
sarl
pop
xchg
inc
inc
mov
inc
push
out
jg
or
lock
push
mov
add
pop
jnp
cmp
push
mov
dec
ret
rep
cmp
loopne
negl
les
fildl
int3
ds
add
ds
arpl
aas
mov
shrl
ljmp
pusha
xchg
cmp
fsubrl
cwtl
jp
cld
xor
pop
jbe
sbb
pop
adcl
sbb
ljmp
in
sub
addr16
xor
add
repnz
outsb
aad
mov
mov
cmp
out
js
je
pop
pop
adc
push
lods
loopne
aam
pop
mov
into
outsl
and
and
insb
movsb
jge
push
xchg
mov
push
mov
cmp
cmpsb
gs
push
pop
std
sub
pusha
pop
cld
fistl
int3
mov
test
jp
lods
lods
push
mov
xchg
push
mov
das
pop
cld
xor
insl
pop
lds
rcll
leave
adc
jmp
pop
jae
scas
and
js
inc
add
mov
push
aad
and
imul
mov
repz
popa
mov
xor
idivb
test
repz
or
xchg
add
fsubs
insb
jb
das
inc
push
mov
in
mov
jno
push
mov
mov
pop
mov
inc
lock
fwait
or
mov
mov
push
adc
sahf
mov
jno
jl
inc
cmp
add
out
aam
fs
and
das
mov
outsl
cmp
push
hlt
xor
jmp
movsl
dec
lods
cmp
inc
das
and
or
xchg
fdivp
push
sub
adc
sub
lods
sbb
jmp
es
xchg
cs
sbb
sbb
cmp
and
xor
dec
xchg
arpl
jnp
outsl
and
insb
sub
cwtl
outsb
and
jg
ljmp
mov
cltd
lcall
mov
xchg
pop
js
fmull
dec
xchg
cli
xor
push
xor
cmpl
push
inc
leave
cmp
jae
inc
ficompl
cmp
icebp
insl
js
lret
adc
leave
mov
mov
inc
roll
jle
mov
add
mov
xchg
pop
arpl
mov
int
fnsave
pushl
subl
or
cmp
xor
xchg
nop
shlb
adc
push
ljmp
add
pop
xor
frstor
xchg
xor
inc
insl
inc
jge
cli
push
inc
xor
sub
add
push
aad
sti
mov
sbb
xor
pop
inc
mov
xchg
and
mov
negl
jae
adc
lea
mov
pop
mov
jge
cmp
lds
lods
popf
aam
cltd
into
das
push
repnz
pop
cwtl
das
sti
sbb
add
pop
cmp
xor
ret
jge
and
fstps
lods
iret
ret
daa
jns
sub
mov
pusha
test
push
les
or
das
mov
and
jne
scas
stos
insb
movsl
push
pop
push
or
sbb
jl
test
dec
sub
xor
adcb
sub
call
lods
cwtl
and
xchg
insb
sbb
pop
aad
add
jo
mov
arpl
lahf
push
cmpsl
xchg
loop
daa
adc
adc
jb
movsb
scas
pop
and
fstpt
mov
add
mov
bound
push
cmp
jge
data16
cld
pop
inc
push
les
push
xor
out
fldenv
cld
mov
rcl
push
lea
jl
cmpsb
clc
sbb
ror
and
inc
xchg
adc
mov
insl
pop
jp
inc
pusha
push
imul
lock
push
jns
cmp
out
sub
cmc
adc
shlb
push
out
lds
xchg
hlt
movsb
or
dec
aas
loopne
cmp
jecxz
adc
mov
lret
test
rorl
jg
pop
data16
sub
mov
push
cltd
loop
inc
rorb
out
movsb
adc
dec
push
inc
dec
idivb
ret
fdiv
cmpsb
mov
loope
or
aaa
mov
cmp
cmp
ret
or
andb
je
insl
inc
sbb
and
cltd
insb
cmp
add
mull
pop
xchg
lock
adc
das
scas
dec
xchg
sub
add
andl
shll
push
inc
push
adc
mov
xchg
jle
mov
xchg
push
outsb
xchg
es
testl
push
add
fcoms
jo
add
sbb
aaa
pop
sbb
adc
sub
sub
mov
dec
jp
daa
cld
mov
ret
jge
xorl
outsb
or
fisttps
push
or
xchg
ret
cld
repnz
add
in
nop
std
sub
cs
sub
mov
mov
sub
test
sbb
mov
or
andb
popa
mov
push
adc
das
inc
mov
mov
jne
andb
cli
icebp
cli
and
inc
mov
and
xchg
mov
pop
mov
je
or
mov
int3
sub
xlat
jg
sti
fstps
je
jmp
pop
jle
fst
mov
test
rcll
mov
push
ds
in
lret
cmp
pop
aad
jno
in
adc
fisubrl
cmp
lods
test
loope
imulb
mov
icebp
es
mov
xor
lock
nop
mov
jae
popf
fistl
hlt
pop
inc
sub
cwtl
jnp
addr16
mov
imul
sbb
push
popa
sbb
scas
xor
loopne
sar
adc
stos
cmp
sub
lods
cltd
cwtl
mov
inc
shlb
mov
push
pop
cli
popf
mov
or
or
cmc
jge
sub
jno
cli
test
hlt
decb
push
loopne
cmpsl
insl
fsubs
movsl
pop
mov
xor
mov
out
dec
pop
sub
movb
dec
inc
xchg
out
insb
fdivrl
adcl
js
das
push
pushf
jmp
dec
mov
sbb
mulb
push
cmp
xor
bound
jae
std
outsl
dec
and
push
test
rorl
or
clc
dec
das
cmp
pop
dec
jmp
mov
add
out
cs
std
jnp
or
adc
xchg
pop
mov
sbb
sbb
orb
imul
push
push
xlat
sbb
fisttpl
ficompl
cltd
jmp
or
add
push
arpl
cmpsl
insb
pop
or
pushf
add
inc
insb
rorl
and
aad
pop
into
cmp
push
jnp
xor
or
lret
and
mov
sbb
and
notl
add
or
movsl
cmp
mov
or
sbb
mov
adc
enter
push
xor
enter
jmp
mov
dec
push
adc
or
push
add
sub
cmpsl
icebp
into
and
add
fnstenv
lea
xchg
add
aam
mov
stc
imul
movsb
mov
lds
fsubrl
add
and
lods
inc
int
idiv
sbb
lcall
clc
out
xchg
mov
inc
call
popf
jl
adc
pop
test
cmc
rclb
and
test
aas
fstpt
and
fadd
push
stos
addb
pop
out
clc
jmp
data16
or
mov
cwtl
mov
add
iret
int
pop
sbbb
mov
lret
out
cld
mov
shr
dec
inc
push
inc
dec
push
inc
adc
lahf
movsl
sbb
aad
mov
mov
xchg
loop
xor
mul
popa
dec
sarl
iret
xor
fnstcw
in
into
cltd
les
mov
mov
insl
xor
jecxz
jmp
xor
adc
rorl
pop
sbb
dec
pop
fistl
lret
or
jnp
xchg
add
leave
in
jl
sbb
adc
insb
and
rorl
dec
and
adc
scas
xor
iret
mov
mov
out
add
xchg
push
or
ss
imul
movl
adc
mov
mov
stos
jae
sub
mov
aas
lret
mov
test
mov
inc
mov
sub
sbb
outsb
cmc
add
cli
loopne
pop
cld
jne
call
divb
out
jle
mov
or
pushf
fs
inc
mov
shlb
ss
mov
inc
lahf
ljmp
movsb
popl
repnz
gs
sbb
ja
jo
mov
into
ret
pop
cmp
in
mov
mov
popf
push
mov
movsb
repnz
pop
in
mov
dec
stos
call
push
cmp
xchg
jp
push
xchg
insl
imul
jle
xor
mov
mov
sbb
jmp
mov
push
sbb
mov
adc
pushf
jp
push
inc
in
dec
ret
ftst
lock
in
mov
inc
add
or
push
ret
or
ret
repz
adc
and
shl
cmp
mov
jae
popl
repnz
inc
mov
inc
sbb
add
jmp
ret
dec
or
gs
mov
mov
xchg
push
mov
pop
xorb
stos
jle
add
jle
cmp
or
sbb
jnp
jnp
push
inc
xchg
decl
or
jg
gs
scas
cmp
push
jb
add
push
xor
sbb
push
xor
jge
mov
setns
out
cmp
fldt
pop
into
cli
xchg
mov
enter
dec
dec
test
xor
mov
mov
stos
inc
rcrb
push
mov
shrl
fcoml
fwait
push
mov
cmp
pop
pop
loopne
cmpsb
fimull
fucomip
mov
fistpl
pop
adc
mov
insl
push
push
push
loopne
dec
jmp
je
pop
and
leave
out
pop
rcl
in
imul
out
xor
mov
aas
pop
js
mov
xchg
fbstp
mov
dec
imul
add
jo
xchg
pusha
rcl
call
ljmp
xchg
mov
in
cmpsl
jg
mov
es
jp
or
cmpsb
imul
push
lret
push
dec
hlt
jne
movsl
pop
inc
sbb
insl
or
add
pop
shrl
inc
out
popf
pop
sub
sub
imul
lret
mov
mov
mov
cmp
mov
adc
sub
repnz
stc
dec
jge
mov
fdivrs
in
mov
push
fidivs
pop
adc
jnp
jmp
xchg
fildl
mov
ljmp
int
xchg
mov
lcall
dec
stos
pop
popa
jge
sbb
addr16
test
hlt
cltd
jnp
xor
cmp
rol
addl
jle
cs
ret
outsb
adc
ret
cwtl
jmp
mov
mov
mov
xor
lar
repz
cltd
xlat
aaa
mov
loope
jbe
cltd
jl
dec
adc
cmpsb
lds
add
inc
xlat
out
xchg
dec
dec
int3
xchg
xor
cmp
jae
es
xchg
sub
int
adc
and
pushf
or
leave
aad
mov
sahf
cmp
out
lret
pop
jb
ret
hlt
out
cld
mov
stc
push
lds
popa
cmp
test
nop
dec
cmp
pop
and
xchg
push
sub
add
cltd
aad
cmpsb
adc
adc
stos
mov
lea
lods
in
jae
xchg
xor
imul
repz
inc
xchg
mov
stc
scas
sti
and
shll
and
out
sbb
cmp
push
repnz
and
ds
xchg
repz
bound
enter
lea
outsb
mov
out
scas
in
scas
push
jae
cs
pop
scas
js
jecxz
das
filds
jle
mov
mov
mov
inc
xchg
mov
push
incl
nop
enter
push
test
out
jmp
loope
das
inc
sbb
jae
push
jne
pop
sub
xor
sub
add
inc
xor
dec
mov
mov
add
cmpsb
repz
mov
jmp
pusha
cmc
pop
cmc
sbb
xor
cmp
adc
inc
dec
mov
das
inc
jmp
inc
fs
jno
gs
test
mov
cltd
repz
mov
jnp
adc
add
push
gs
add
lods
or
test
negl
jae
inc
jmp
sub
add
cmpsl
js
ljmp
or
fcmovnbe
sub
inc
xor
push
adc
movsl
out
mov
mov
cli
adc
imul
test
jae
rcl
jp
outsl
sbb
sbb
push
pop
xchg
dec
fimuls
ss
test
cwtl
lret
adc
xchg
jo
xchg
fists
test
mov
xor
mov
clc
lods
push
adc
ret
je
call
loopne
fiaddl
mov
sbb
push
cmp
js
xor
sbb
call
addb
into
mov
or
adc
fisttpll
xchg
inc
jae
sub
int3
jno
xchg
pop
pop
sarb
aad
mov
add
arpl
pavgw
sub
dec
test
or
iret
xor
jo
lods
pop
xchg
pop
mov
pop
lret
dec
xor
not
xchg
cmc
mov
mov
adc
cs
iret
cmp
add
inc
cmp
shrb
scas
mov
ds
and
cmp
dec
gs
movsl
stos
mov
or
mov
scas
fdiv
rcr
sub
inc
inc
hlt
mov
rcl
pop
hlt
fiadds
cmp
sbb
cmpsb
sub
test
fs
mov
cli
cwtl
mov
mov
push
ret
rcll
jg
adc
cmp
stos
xchg
std
inc
rcr
movsl
sbb
sahf
lock
aaa
in
ficompl
stc
sbb
dec
mov
or
shrd
outsl
mov
pop
pop
shl
andb
inc
adc
clc
cmp
add
inc
cvtpi2ps
cli
lods
es
repz
ja
xor
ja
jno,pt
sarb
and
lods
lcall
adc
daa
push
pop
insb
js
and
inc
mov
inc
jp
lods
fdivrl
test
dec
xchg
mov
push
subb
cmp
pop
js
or
dec
adc
inc
popa
dec
add
dec
in
aad
add
das
mov
lock
rolb
xchg
mov
enter
sub
lods
sub
add
loopne
stos
xchg
in
push
adc
ret
out
je
cmp
xchg
add
add
adc
lret
daa
mov
mov
dec
ja
jmp
sahf
out
dec
cmp
negb
jbe
cld
cmpsb
or
call
pop
mov
stc
inc
in
pop
lea
js
jecxz
scas
loopne
lods
or
add
sbb
movsl
lret
or
int
out
ficompl
rclb
hlt
dec
jo
movsb
mov
push
lods
cmp
rorl
sub
nop
fadds
push
lret
repz
mov
xor
jl
sub
fdivrl
int3
xor
cmp
dec
dec
insb
adc
js
in
fdivp
mov
cli
sarb
out
popf
cmp
mov
sub
test
punpckldq
sbb
inc
lea
mov
xchg
enter
std
out
insb
sub
xlat
mov
rcrl
shlb
in
pop
daa
aam
std
repz
inc
jle
mov
fwait
and
push
push
or
jecxz
bound
push
popf
aad
in
cli
adc
adc
enter
xchg
cmp
jnp
dec
mov
es
push
mov
loope
mov
xchg
mov
jp
sti
xorb
jecxz
rcrb
jecxz
jp
add
jns
hlt
sub
std
sahf
adc
push
cltd
lahf
cmp
xor
loop
fdivrp
arpl
loope
repz
jnp
jno
sub
inc
push
and
shlb
ret
sbb
mov
inc
lret
jno
and
fisubrs
loop
mov
inc
adc
mov
cltd
fs
lcall
sub
in
test
mov
das
jb
mov
xor
cwtl
test
or
std
popf
push
cmc
xor
xchg
into
and
sar
xchg
pop
sub
xchg
pop
scas
mov
loopne
push
aaa
ret
out
pushf
push
jmp
js
jbe
pushf
and
add
pop
and
jmp
mov
mov
push
mov
mov
popf
add
xchg
stc
adc
int
rclb
sbb
pop
idivl
lds
xor
mov
mov
pop
xor
jbe
mov
dec
mov
ja
push
insl
popa
lods
xchg
and
sub
enter
lret
pop
pushw
dec
xlat
sahf
xor
or
mov
xchg
out
mov
xchg
rolb
jno
mov
nop
shld
movsl
test
pop
mov
scas
stos
jne
outsb
lret
sbb
rcll
mov
mov
and
sarl
lret
jo
loope
jl
jmp
repz
jb
push
repz
movsl
sub
cmp
and
enter
add
ljmp
fwait
sahf
dec
dec
mov
das
loopne
fcom
andb
int3
pop
sub
pop
das
cltd
sbb
sbb
mov
cmpl
pop
inc
in
test
push
xchg
pop
inc
lahf
fstpt
rorl
out
mov
les
mov
loope
in
mov
imul
ret
lcall
shll
stos
sbb
in
push
sub
mov
inc
pop
mov
test
sub
cli
pop
sbb
fcoml
dec
fildll
arpl
lret
stos
sar
and
sub
push
adc
orb
leave
mov
xor
nop
test
jg
pop
sbb
ds
cmc
ljmp
sbb
adc
sbb
fst
mov
jb
cmpl
aas
rolb
cltd
mov
xor
mov
int3
jno
bound
jp
dec
je
bound
lea
add
ljmp
nop
mov
roll
push
add
push
pop
aaa
out
pop
cmc
push
push
sub
imul
jb
mov
ficompl
adc
test
das
xchg
scas
sbb
cli
fmull
sbb
mov
sbb
nop
jle
or
adc
out
in
fmul
adc
imul
mov
sub
cld
and
mov
and
mov
sbb
lahf
add
dec
andb
test
and
and
jmp
jne
jmp
xchg
xchg
cmp
mov
das
hlt
mov
pop
fdivl
sub
add
push
mov
test
loopne
add
int
and
fistps
jno
lock
ljmp
pusha
pop
mov
push
cmpsl
dec
mov
ret
ret
push
xchg
lcall
js
nop
imul
dec
cwtl
into
lds
mov
adc
dec
dec
popf
mov
jmp
aam
loope
inc
sbb
js
push
mov
outsb
rclb
cmpsl
add
das
std
ja
and
shrb
push
je
out
rorl
rcll
pop
push
psubusb
or
adc
ss
data16
shl
cmp
mov
inc
mov
lods
mov
aam
xor
sbb
xchg
mov
iret
ds
test
flds
aas
jb
loopw
mov
xchg
inc
mov
pushf
iret
push
sub
add
iret
lcall
cmp
imul
push
hlt
pop
mov
pop
xorl
movsb
bound
cmpsb
sub
aas
xchg
jb
jae
xchg
jmp
dec
dec
in
roll
cmp
test
dec
popf
add
mov
ret
mov
add
mov
dec
inc
mov
pushf
ficoms
mov
fnsave
push
or
push
or
lcall
xchg
lcallw
inc
sarb
cmp
and
mov
ja
pop
push
inc
add
clc
xchg
xchg
mov
or
xor
cld
inc
xchg
push
daa
jbe
es
cmp
sub
scas
mov
mov
mov
clc
popa
ljmp
push
push
outsl
pop
ds
pop
stos
leave
adc
not
jg
in
stc
cmpsl
pop
insb
fstp
outsl
lods
pop
mov
jne
in
addr16
stos
cmp
insl
mov
push
cmp
mov
aad
pop
mov
dec
icebp
push
jecxz
test
stos
jo
or
pop
push
hlt
rolb
push
sub
sbb
jp
clc
pop
xor
sti
lods
pop
rorl
gs
in
outsl
arpl
mov
lahf
pop
xchg
push
ds
out
fwait
insb
inc
outsb
aad
mov
push
jge
pop
iret
mov
loop
sub
mov
fidivrs
dec
sub
out
inc
and
push
mov
incb
add
pop
clc
ret
push
fsubl
in
lcall
inc
lds
add
sbb
mov
cmc
xchg
push
sahf
push
fwait
insb
shlb
add
fldl
int3
adc
pop
mov
adc
mov
test
cmc
hlt
out
cmp
mov
mov
push
pop
xchg
js
mov
sub
es
adc
rcrb
insb
clc
test
lret
scas
pop
sub
jne
add
pop
inc
jecxz
inc
out
cmp
jmp
mov
jnp
inc
push
adc
cmpsb
popf
add
xchg
mov
adc
mov
jnp
adc
and
cmp
sbb
lret
cli
popa
mov
pop
rclb
push
pop
mov
add
inc
test
arpl
in
rcrl
or
and
inc
dec
pop
scas
mov
loopne
and
lods
inc
bnd
ret
or
adc
and
jecxz
sub
and
add
fdivrs
sbb
test
inc
and
adcb
jno
into
shl
push
in
jnp
and
clc
loop
fidivl
dec
mov
lret
repz
repnz
mov
incb
mov
mov
mov
jns
in
adc
loope
jp
pop
dec
dec
stos
sti
push
imul
cwtl
inc
sbb
and
mov
iret
mov
pusha
add
int3
cwtl
jecxz
mov
xor
stos
mov
lret
and
add
gs
scas
adc
jge
pop
xlat
mov
or
inc
stos
fsubrl
ss
mov
ret
mov
push
push
xchg
or
jp
adc
hlt
lock
test
fldenv
xchg
dec
test
fs
scas
in
pushl
xchg
and
mov
scas
gs
lahf
cltd
std
jb
adc
dec
xchg
mov
std
mov
pop
xchg
pop
push
inc
mov
rcr
enter
mov
adc
adc
add
cmp
or
faddl
shll
push
mov
and
add
fwait
cmpsb
sub
add
ss
sub
imul
cmp
xlat
fstps
sbbl
inc
xlat
cld
add
cmpsl
pop
jno
in
jns
sub
sub
xor
inc
sbb
jp
rclb
orb
loopne
xchg
jnp
addr16
add
and
inc
ficomps
loop
dec
pop
cmp
inc
fisubs
sbb
loopne
mov
popa
loope
dec
bound
pushw
xchg
mov
adc
ret
pop
in
pop
fsubs
mov
xor
pop
mov
mov
dec
in
pop
insb
mov
sbb
decl
mov
inc
sbb
inc
and
sahf
aas
push
out
xor
aam
inc
mov
ret
mov
push
in
ret
pop
mov
das
and
cli
test
jns
inc
mov
sub
sahf
cmp
addb
jg
or
inc
lods
test
jne
fs
xor
cmc
std
shlb
js
test
xor
pusha
xchg
pop
divl
adc
enter
mov
mov
cmc
push
outsl
sbb
popa
popf
push
cltd
jnp
outsl
push
frstor
pop
out
dec
mov
mov
popl
cmp
cltd
testb
mov
clc
shlb
fadd
shr
lods
push
mov
int
mov
ret
mov
data16
leave
arpl
jbe
ljmp
push
lds
xorl
ja
ja
insb
xchg
outsl
lds
je
jbe
rcr
nop
loopne
sub
inc
out
std
pushl
adc
mov
and
inc
out
test
adc
outsb
fldcw
mov
and
mov
ret
xor
mov
faddl
push
data16
mov
or
cmpsl
out
lea
mov
mov
mov
dec
add
aas
jge
jl
sbb
mov
push
cmpsl
sub
aaa
mov
add
andl
pop
mov
mov
lret
jno
cmp
mov
andb
out
mov
loop
xchg
icebp
or
out
dec
and
xchg
shrl
icebp
out
shl
cmp
rcll
lcall
sub
outsb
mov
xor
ret
push
mov
es
int3
in
mov
lahf
adc
adc
ds
jns
inc
mov
dec
dec
xlat
loopne
fdivrl
mov
sarl
or
cmpsb
push
xchg
icebp
out
mov
int3
xor
and
filds
push
les
repnz
in
std
aaa
jle
pushf
cld
enter
sbb
jle
das
aas
clc
movsb
mov
mov
sbbl
sub
push
cwtl
or
push
push
insl
repnz
pop
jae
sbb
popf
movsl
sbb
inc
aam
stos
pop
test
push
xchg
adc
sarb
jnp
in
mov
mov
repnz
outsl
xor
mov
adc
and
cli
in
pop
mov
push
push
pop
out
pop
shll
fildll
xchg
stc
lock
mov
fwait
or
push
pop
mov
add
mov
mov
sbb
dec
and
mov
pop
sub
daa
popf
xchg
push
inc
scas
and
fsubrs
arpl
mov
cltd
hlt
lods
pop
addr16
mov
lods
cmpsb
movsb
stc
out
outsb
sub
sbb
push
loopne
mov
sbb
pop
mov
add
pop
dec
cmp
fistpll
ficoml
xchg
out
xor
jno
fdivrs
aam
ljmp
ss
sbb
out
cwtl
clc
insl
dec
adc
xchg
fadds
sub
sub
repz
repz
xchg
insl
mov
xlat
insb
shlb
fstl
test
aad
and
pop
inc
and
sub
jb
pop
mov
add
jb
sub
jb
pop
xchg
pop
adc
dec
jmp
inc
mov
daa
xchg
mov
push
leave
push
mov
mov
xchg
mov
ficomps
cmpb
jg
push
jl
rcrl
popa
out
insb
jbe
call
pop
xor
fnstcw
mov
push
mov
mov
jnp
lods
lcall
jle
jae
loope
mov
test
dec
cwtl
pop
adc
cmpsl
xchg
add
mov
loop
sbb
xlat
sbb
in
adc
and
and
popf
int
and
movsl
sbb
mov
cmp
cli
xchg
sub
add
pop
pop
leave
out
xchg
imul
out
rolb
pop
sbb
sbb
das
jo
dec
shlb
mov
sub
lods
gs
cld
pop
mov
add
push
insb
sbb
imul
jno
cli
fcmove
into
lods
testl
loop
dec
clc
inc
inc
inc
ret
pop
in
push
push
xor
jnp
cmpsb
sbbl
pop
mov
mov
cli
loopne
shr
mov
jmp
jnp
mov
mov
inc
addr16
sub
ja
cmpsb
shrl
sbb
fistl
pop
push
inc
mov
fcoml
inc
inc
out
fnsave
jle
dec
add
and
pop
sbb
iret
out
xchg
inc
cs
mov
pop
fdivrs
cmp
scas
jo
dec
inc
xchg
inc
addr16
cmpsb
insl
ss
in
dec
mov
lcall
cmp
sbb
xlat
push
fsubl
cmpsb
rcr
push
and
inc
scas
les
test
push
popf
jp
into
lods
push
mov
mov
ss
sub
rcrb
push
sbbb
adc
je
sbb
xor
mov
mov
add
cmp
dec
sub
jle
dec
or
jp
cmpsl
push
xchg
xchg
leave
sbb
cmpsb
rclb
mov
stos
xor
add
jns
push
divb
push
and
add
cltd
sub
lret
push
sbb
push
bnd
mov
sbb
or
repz
repz
xchg
call
popf
pop
aas
mov
dec
adc
jge
movsl
jmp
push
mov
pop
cmp
push
mov
es
mov
iret
push
cmp
mov
xor
pusha
xor
adc
dec
popa
add
test
add
inc
notl
imulb
fidivrs
xor
sub
mov
aaa
in
popf
or
out
pusha
mov
lahf
sahf
sub
in
pop
add
inc
add
sub
push
lock
lret
cmpb
mov
push
jnp
lcall
mov
jbe
out
pusha
sbb
xchg
xchg
mulb
mov
out
xchg
ret
mov
mov
pop
adcl
loopne
sbb
jb
jle
sbb
xchg
aam
xchg
lret
ret
or
ds
cmp
mov
test
daa
mov
sub
jg
push
int3
adc
daa
push
cmpsl
outsb
mov
lret
mov
xchg
cmp
inc
ljmp
pop
sarb
shrb
daa
inc
aad
push
push
out
daa
xor
cltd
into
jo
add
jb
or
daa
adc
cmp
loope
ds
push
cmp
xchg
lds
daa
call
movsl
xlat
add
lcall
push
jb
movsb
jecxz
push
mov
or
add
bound
movsb
inc
movsl
jmp
adc
imul
iret
push
outsl
cmp
std
dec
or
sahf
jno
xor
push
mov
imul
sbb
cld
movsl
test
cmp
add
aas
mov
xor
dec
xor
and
scas
sub
and
in
dec
fistpll
cmpsl
cmpsb
cs
jmp
xor
sbb
xchg
and
fiadds
fsubrl
in
sbb
push
jmp
stos
fcmovne
lock
inc
pop
xorl
mov
mov
pop
mov
and
arpl
pop
or
movsl
sub
jp
mov
icebp
sar
xchg
popa
jp
push
xchg
les
out
adc
cmp
adc
push
push
dec
out
and
sub
movsl
mov
and
push
push
mov
xor
dec
pop
rcrl
xor
test
and
outsl
push
loope
lds
out
insb
outsl
rcrb
ljmp
subl
imul
das
test
movsb
add
xlat
mov
xor
mov
je
mov
push
stc
int
test
and
pusha
sub
mov
repnz
int3
repnz
push
ja
pop
pop
mov
or
movsl
in
rep
xchg
dec
shll
mov
inc
and
or
cmpsl
lcall
xchg
inc
jo
or
jge
iret
shr
push
jecxz
in
jge
push
enter
subb
repnz
in
jnp
add
test
in
push
mov
lods
mov
or
rcl
inc
pop
sub
sbb
cmp
roll
cmp
adc
add
jle
xchg
or
loop
adc
push
inc
fildll
jb
cmp
mov
or
xlat
mov
ret
xor
scas
inc
dec
fiaddl
cwtl
pop
pop
add
pop
insb
pop
and
mov
in
movsb
and
shl
mov
adc
add
hlt
jne
sub
and
mov
push
dec
pop
into
sub
ds
xor
adcl
idivl
inc
stc
lea
dec
mov
fs
or
jecxz
adc
out
mov
mov
or
dec
loope
jno
fistpll
adc
pop
scas
sti
jmp
sbb
insb
psrlq
pop
sbb
cmpsl
js
xchg
stos
dec
mov
rcrl
add
or
pop
xor
pop
or
add
xchg
mov
sub
mov
add
mov
test
jns
push
add
inc
mov
out
enter
movsl
fdiv
or
mov
pop
imul
mov
cmp
sub
xor
xchg
enter
cmp
js
xor
xchg
fidivl
repnz
cmp
call
jae
frstor
add
mov
aam
xor
jg
xor
test
pop
les
jnp
pop
scas
pop
add
push
add
and
imul
icebp
adc
and
mov
sbb
lcall
xor
or
cmp
das
mov
jnp
cmp
pop
out
fisttpl
fldcw
push
out
out
addr16
enter
adc
data16
fsubrl
lahf
inc
test
cmp
lds
popa
mov
rorb
fsubrp
cmp
jge
inc
cli
pop
rorb
icebp
sbb
cltd
arpl
mov
movsl
lcall
mov
test
repnz
lret
jmp
jns
in
mov
mov
mov
movsl
mov
pop
in
sbb
or
fsubl
enter
add
ret
sub
into
fidivrl
pushf
jl
popa
cld
clc
or
mov
repnz
dec
fistpll
dec
into
div
cld
add
mov
inc
je
add
test
in
in
jne
loop
movsl
imul
pop
loopne
push
insb
ljmp
push
and
xor
ss
push
mov
push
sbb
jbe
test
stos
pop
sub
notb
fistpll
jp
rcll
lcall
xor
mov
fnstsw
jae
mov
cmp
fnsave
jae
push
adc
js
movsl
je
adc
outsl
into
stos
jecxz
push
mov
dec
sub
in
jae
mov
in
push
sbb
lock
fsubl
lds
xchg
mov
and
decb
mov
popa
sti
pop
xchg
mov
cmpsl
mull
push
je
jmp
lods
jge
subl
dec
aad
jns
out
sbb
push
lcall
icebp
out
adc
divl
int3
cmp
cwtl
xor
fcomps
cmp
dec
decl
in
outsl
mov
test
jp
cmovbe
push
leave
mov
and
xor
pop
jp
dec
mov
adc
push
mov
out
mov
call
cmp
movsl
or
jmp
sbb
mov
ret
sbb
jb
cwtl
sbb
xor
adc
insb
mov
ret
fmulp
adc
push
shrl
and
imul
shll
push
loopne
sti
aas
inc
scas
test
mov
pop
loope
mov
inc
xchg
push
or
push
sbb
scas
mov
push
enter
xchg
add
out
jae
pop
clc
push
cmp
icebp
in
inc
addb
pop
stc
push
pop
push
lea
or
les
imul
dec
fsubl
xlat
and
hlt
aaa
push
in
or
xor
add
addl
push
push
jmp
shrb
push
sbb
xor
das
shrb
int3
sbb
in
mov
mov
mov
in
and
out
pop
pop
rol
and
push
cmp
fldcw
cltd
fisubrl
xlat
ds
jecxz
xchg
jbe
jl
cld
xchg
push
mov
aam
xchg
mov
mov
add
lret
or
cmp
mov
cmpsl
jmp
divl
cmpsl
std
pusha
loop
push
aaa
push
and
dec
fsts
ds
fidivrs
xlat
push
out
mov
or
and
cmc
inc
fiadds
sub
jecxz
jle
ljmp
dec
mov
fsubl
add
lods
and
pop
push
call
pop
mov
mov
jne
mov
push
cmp
iret
sbb
stc
cwtl
mov
in
mov
mov
sub
ret
insl
cmpsb
ret
sarl
cmp
xorps
aas
js
cli
dec
and
decb
inc
fstpl
xor
out
std
sbb
ljmp
fsubrl
mov
push
into
sti
iret
ror
xchg
inc
xor
xchg
ds
in
aam
mov
add
xchg
dec
loope
cli
dec
loopne
and
inc
fcmovnb
dec
cmp
jp
daa
mov
lcall
or
mov
outsb
jecxz
pop
fldt
xchg
stos
or
xor
jns
lds
scas
and
rorl
fildl
push
or
ja
sti
dec
int
insb
faddl
in
jg
pop
mulb
iret
push
jbe
push
add
jbe
jbe
mov
cmp
das
sbb
xchg
mov
dec
loope
cwtl
adc
jle
push
inc
mov
imul
xchg
dec
es
xor
bound
add
sub
jmp
ljmp
subl
adc
sahf
repz
faddl
aaa
out
mov
fists
dec
jle
rcl
adc
or
sbb
jmp
ja
push
adc
ficomps
insl
out
dec
push
sub
movsl
aad
movsl
lods
popf
pusha
cld
add
pop
xchg
adc
pop
enter
insl
movsb
dec
xchg
fstl
lret
pop
mov
or
movsl
in
fs
fisttps
push
cs
leave
or
icebp
arpl
mov
mov
mov
decb
push
aaa
mov
leave
call
in
jnp
inc
ret
test
stos
push
mov
js
outsb
adc
lcall
xlat
fs
neg
loopne
push
or
in
inc
iret
cwtl
dec
clc
lea
insb
mov
lahf
pop
jle
add
js
and
inc
push
adc
xchg
adc
notl
jo
add
sub
mov
mov
mov
sbb
jge
jb
pushf
pop
fistpll
jns
sub
mov
jno
je
rol
aam
pop
les
fs
push
pop
cmp
sub
dec
xor
jae
pop
and
mov
jmp
sbb
push
repz
enter
mov
hlt
cmp
addr16
std
sub
leave
loope
mov
lds
or
xor
push
add
test
cli
aam
js
pop
or
nop
and
test
pop
mov
outsb
mov
mov
pop
pop
add
insb
addb
push
negl
add
loop
or
in
or
jg
cmp
into
outsb
cmp
mov
cmp
jge
cld
or
cld
or
mov
sbb
sarb
insl
popa
or
add
push
pushf
mov
in
inc
sbb
jle
test
dec
add
and
pop
dec
je
mov
mov
mov
lea
shr
imul
mov
sub
xchg
sub
cltd
mov
inc
sbb
xorl
pushf
sti
and
aas
sbb
adc
insl
pop
rcll
pop
inc
add
push
jno
repnz
mov
adc
mov
and
mov
jae
push
mov
fidivrl
inc
addl
or
mov
mov
ret
or
jns
pushf
jb
mov
mov
mov
inc
loope
and
popf
pop
or
cltd
add
hlt
sbb
divl
inc
xchg
lock
out
loop
jle
shl
out
push
in
or
push
mov
xlat
pop
inc
push
lods
jle
cmp
je
sub
enter
ret
rcl
pop
sub
pusha
divl
jge
fildl
sarl
xor
jmp
adc
or
outsl
imul
cmpsb
loope
arpl
xlat
fbstp
repnz
lahf
dec
cmp
test
pop
mov
fisubl
in
sub
mov
mov
xchg
pop
std
nop
push
insl
dec
inc
or
jp
in
xor
mov
fs
data16
jg
in
dec
scas
fdivl
ljmp
pusha
xchg
scas
push
incb
das
jo
and
aaa
jmp
adc
adc
cs
andb
popa
push
and
push
mov
sub
xchg
xor
xor
add
xchg
cwtl
push
fnop
xchg
xchg
clc
and
sub
lret
jns
mov
out
jno
jmp
lahf
in
in
pushf
jo
lods
xchg
or
mov
and
movsb
inc
cmp
outsl
mov
mov
jge
scas
xor
stos
or
sbb
in
psubq
mov
adcl
sub
inc
add
gs
cltd
test
lock
repz
push
mov
mov
mov
imul
jmp
ret
or
cmp
popa
out
loope
insl
lahf
jo
fisttps
shrb
jno
cmpb
sub
push
or
lods
and
fcoml
sbb
mov
pop
cmp
inc
fbstp
insl
push
pop
inc
sahf
or
sbb
in
imul
ret
sbb
sbb
dec
ret
mov
outsb
dec
xchg
push
int
jmp
sub
js
inc
pop
popf
enter
fisubl
imul
mov
mov
and
push
lock
add
pop
mov
inc
stos
add
aas
xchg
sbb
negb
lahf
sti
sub
in
int3
loopne
and
and
mov
loop
divl
push
sub
movsb
add
mov
cmc
adc
data16
xchg
jmp
and
dec
adc
rcr
cmp
add
repnz
dec
fisttpl
fs
push
roll
push
in
or
xor
mov
js
mov
mov
mov
in
sub
adc
pop
stc
popa
fisubs
push
hlt
fists
jo
add
jecxz
fstpt
imul
ja
jo
mov
inc
dec
and
loope
sbb
or
outsb
ds
cmpsb
jns
sbb
xor
sub
frndint
in
dec
and
xor
add
dec
scas
or
gs
adcb
lea
mov
and
flds
and
ret
push
ja
adc
xchg
sub
add
test
test
xor
cmp
adc
test
lods
movb
shrb
rcl
stos
cmp
mov
mov
pop
aad
xchg
out
xchg
lock
clc
xlat
scas
fldcw
mov
xor
jecxz
in
dec
mov
ret
jo
push
loope
sbbl
loope
inc
cmpsl
mov
dec
mov
jbe
sub
cmpsl
idivb
mov
inc
out
scas
dec
hlt
pop
clc
popa
pop
sbb
sbb
in
sub
pop
imul
jns
call
lret
mov
push
push
pop
mov
inc
jne
cmp
mov
icebp
insl
cmpsb
nop
fs
add
or
testl
jp
mov
fistpl
sub
mov
cmp
or
inc
add
fs
insb
xchg
repnz
cmpsl
pop
xchg
jl
xchg
ss
adc
fists
mov
mov
loopne
nop
add
mov
dec
dec
iret
and
insl
mov
cmp
into
out
pushf
xor
xor
pop
add
stc
ret
pop
mov
add
pop
pop
mov
push
adc
dec
in
or
push
bound
int3
sbb
sti
pop
mov
mov
inc
sub
mov
addr16
mov
pop
pop
mov
mov
stos
push
and
out
gs
jecxz
rcrl
jge
cwtl
xor
stc
cmpsl
das
adc
fiaddl
mov
adc
mov
mov
fiaddl
popa
adc
push
aam
das
fstpt
js
sub
mov
daa
jb
add
xchg
xchg
xor
add
fcoml
stos
cmp
inc
jg
sti
adc
shlb
paddw
mov
add
cld
lcall
jp
fdivrs
adc
fidivrl
std
dec
dec
lahf
sub
setae
ret
push
xchg
xor
shrl
jns
adc
jmp
int3
xor
pop
dec
cs
and
add
mov
aas
aaa
push
and
xchg
icebp
or
adc
xorb
push
sbb
and
iret
test
push
inc
sarb
push
es
icebp
rcll
out
xlat
mov
ja
mov
jns
flds
loope
mov
movsl
and
roll
mov
into
push
shrl
decl
das
pop
or
and
and
jno
adc
outsb
mov
xchg
pusha
cwtl
or
movsb
cmp
into
daa
test
outsb
loop
shr
fstps
mov
push
test
xchg
push
enter
notl
cli
adc
dec
test
inc
inc
inc
jo
dec
and
sti
cmpsb
in
and
inc
cmp
adc
dec
mov
ficoml
jnp
movsb
sbb
inc
sarb
ret
aad
insb
add
aad
mov
into
fisubs
push
and
push
testl
std
xchg
pop
mov
test
jb
xor
in
pop
stos
add
hlt
subb
js
sarb
in
or
xchg
inc
test
adc
je
rorw
mov
sub
push
adc
aam
shll
cli
add
mov
mov
push
xchg
pusha
lret
push
std
inc
mov
ret
cmp
mov
imul
mov
fwait
leave
jl
jmp
lcall
pop
fcomps
fldt
push
or
enter
mov
test
push
adc
jns
xor
push
and
clc
loope
mov
xchg
out
test
gs
cmp
sbb
fnsave
lahf
loope
cltd
push
mov
cmp
out
pop
fs
xor
arpl
dec
add
decb
mov
jne
and
pop
mov
cmpl
xor
sub
stc
mov
lret
stos
fmull
xor
mov
call
lock
cmpsl
lret
cmp
fimuls
ja
or
sahf
pop
jnp
push
lcall
dec
lret
xchg
xlat
pop
loope
mov
gs
int
je
xchg
mov
mov
mov
les
shlb
dec
imul
dec
jle
cmp
out
add
lret
xlat
or
mov
adc
arpl
adc
int3
insl
xor
mov
dec
std
in
or
xor
pop
repz
icebp
dec
xlat
scas
pusha
cmp
mov
jle
dec
out
xchg
ret
movsb
xor
add
test
imull
in
adc
fmuls
inc
imul
push
mov
test
xchg
mov
inc
cli
xor
pop
adc
mov
sub
jns
lahf
repz
inc
xchg
xchg
filds
stos
pusha
pop
cmpl
js
sub
xor
pop
rcrl
pop
js
hlt
adc
xchg
mov
popa
xchg
pand
int
sbb
inc
add
scas
cmp
dec
dec
cmp
outsl
jle
push
pop
push
orl
lock
imul
mov
mov
push
jno
test
fdivl
jmp
int3
and
adc
cmp
jb
jo
subb
sbb
popf
jg
cmpsb
adc
add
pop
xchg
xor
insb
sbbl
lret
daa
clc
xor
popf
in
jno
adc
push
inc
sub
mov
cs
xor
jbe
mov
pop
fcomi
xlat
daa
loope
add
jecxz
fstpt
insl
cmp
cmp
cmp
mov
test
adc
cmp
stos
adc
mov
aam
test
mov
and
fmull
or
ja
enter
addr16
dec
mov
cmp
stos
xchg
cwtl
cmpl
add
xchg
in
pushf
aaa
jb
pop
das
push
daa
inc
xchg
xor
test
mov
nop
push
lret
inc
popf
pushf
je
notb
pop
and
inc
lock
lods
push
adc
jno
insb
aas
leave
lret
xchg
popa
and
sub
std
cli
enter
add
dec
mov
aam
xchg
cs
push
xchg
push
int3
in
mov
adc
arpl
lods
pusha
ds
mov
divb
and
xchg
ficomps
adc
inc
int
insl
xor
adc
adc
insl
cmp
dec
mov
imull
cmc
subl
ficompl
push
sbb
lds
fdivrp
inc
sub
cmc
xchg
call
fwait
sbb
pop
jns
fstl
sub
mov
push
fs
fadd
mov
pushf
js
adc
jl
scas
xor
or
mov
xchg
pop
aad
lahf
add
jno
fwait
pop
mov
push
outsl
lock
lods
insb
or
mov
dec
xor
frstor
dec
fistpll
fwait
sub
aas
xlat
push
mov
out
enter
cmp
xchg
pop
push
push
push
mov
aaa
lds
xlat
and
das
jnp
into
sub
cmc
or
xlat
push
push
addr16
aaa
push
daa
or
cmp
cmc
lret
push
dec
xor
or
addr16
inc
fcompl
lret
out
cmp
cmc
shll
xchg
imul
mov
mov
sub
sbb
fwait
sbb
lea
or
scas
dec
and
push
mov
leave
mov
mov
lock
jg
push
cmpb
hlt
out
mov
sbbl
mov
mov
mov
fs
and
cltd
pop
into
mov
cs
movsb
shlb
stc
jae
sub
das
aaa
jg
loopne
dec
fldl
mov
leave
adcl
std
sti
jge
jbe
imul
mov
inc
aad
lret
jmp
imul
mov
lock
sbb
xchg
mov
outsl
sub
out
cli
repnz
shrw
sub
pop
push
into
add
clc
inc
data16
add
dec
add
sarb
jl
ss
out
inc
sti
dec
pop
xlat
or
xor
out
mov
cmp
and
stos
dec
inc
pushf
int3
and
push
insl
jne
pop
out
sbb
dec
imull
dec
js
int
sub
sub
xchg
push
dec
ret
ljmp
and
sbb
xor
push
test
pop
es
sub
cmp
lock
out
xlat
scas
je
pop
lret
dec
adcb
mov
add
cmc
movsb
or
adc
add
lods
call
mov
sub
je
cltd
cltd
push
mov
inc
pop
push
leave
filds
mov
push
addr16
divl
sub
loope
test
ljmp
lahf
in
mov
mov
mov
sub
jne
inc
clc
inc
cmp
xor
lcall
fildl
addr16
mov
fiaddl
movsb
xchg
inc
mov
push
pop
and
std
loope
mov
and
jo
cwtl
sbb
cmp
inc
ret
push
mov
shll
subl
jae
pop
icebp
cli
sbb
loope
aad
rcl
mov
test
cmc
out
loopne
adc
ja
xor
outsl
aaa
out
xchg
scas
aaa
push
or
in
cltd
cmpb
test
leave
stos
jmp
clc
stc
xor
adc
aaa
cmp
dec
add
movsb
mov
jmp
orb
test
and
les
cwtl
gs
or
shll
pop
sub
movsl
faddl
aas
dec
loop
fs
xchg
mov
imul
push
xchg
cmp
cmp
jge
cli
or
jl
dec
addb
cmp
aas
fs
lock
mov
movsl
mov
test
popf
ljmp
inc
mov
std
lods
daa
int
push
roll
push
push
lock
lret
add
jl
test
dec
ret
mov
xor
push
pop
mov
orb
stos
xor
inc
or
scas
js
sbb
nop
mov
xchg
jnp
lret
ficoms
mov
popf
cmp
mov
in
jbe
hlt
cmc
adc
mov
fs
add
shrl
sub
inc
fcmovb
cmc
popf
imul
mov
xor
pop
dec
fdivl
clc
jg
jle
add
xor
fadds
clc
push
lock
aam
leave
jg
adc
lret
lock
sbb
pop
enter
incb
dec
lds
divl
add
inc
dec
cmpl
scas
or
mov
cmp
out
adc
mov
in
fists
jg
loopne
or
push
jmp
adc
ret
lahf
test
inc
mov
dec
push
dec
jl
ja
mov
lret
call
or
pop
cltd
add
sbb
inc
push
dec
mov
sti
xor
jmp
add
repnz
dec
sahf
sbb
jecxz
popf
mov
dec
in
into
adc
aad
lea
pop
adc
mov
pop
push
push
nop
enter
pop
xlat
xor
mov
loopne
add
fwait
lock
sub
push
lods
inc
jmp
sar
daa
jl
and
roll
xchg
mov
jecxz
les
xchg
jecxz
mov
jp
mov
push
dec
push
cmpsb
mov
jae
in
dec
adc
lock
pop
pop
enter
ret
mov
and
inc
jecxz
out
mov
push
inc
jne
cmp
je
repnz
adc
hlt
ljmp
xor
pop
aad
test
cmpsl
insl
cmova
adc
leave
jmp
push
mov
jmp
pop
imul
add
pop
mov
movsl
jl
jmp
add
push
insb
inc
stc
pop
cmp
ret
cmp
add
lcall
fmuls
xchg
sbb
out
adc
or
cli
mov
jp
mov
repnz
scas
fcoms
xchg
pop
test
pop
out
adcb
add
mov
xchg
loop
aam
data16
sti
lret
test
cmp
iret
mov
pop
aaa
pop
testb
iret
loope
mov
inc
incl
idivl
mov
inc
and
test
lock
pop
inc
ljmp
dec
pop
mov
add
lods
push
mov
inc
sub
popf
fnsave
add
or
adc
mov
insb
cmp
out
out
jns
jl
mov
mov
mov
pusha
or
jns
sahf
into
iret
aam
outsb
mov
jne
mov
lahf
ret
sub
movsb
out
pop
test
dec
push
mov
xor
mov
jb
inc
sub
mov
gs
lods
sbb
and
es
pusha
int3
int3
jg
in
dec
adc
out
mov
adc
mov
movsl
sbb
inc
adc
pop
push
jo
lods
or
mov
sub
out
sub
fcmovnbe
xor
jge,pt
xor
pop
pop
push
aam
cmpsl
mov
outsl
or
movsl
fcomp
pop
cmovae
mov
shrl
sar
inc
movb
loop
mov
call
push
repz
mov
pop
iret
dec
shlb
insb
insl
pushf
fldenv
mov
iret
fwait
js
jb
test
nop
or
mov
sahf
mov
mov
int3
fistps
fs
cmpl
andb
cmp
cli
mov
mov
fpatan
cmp
lret
inc
jmp
ja
stos
add
and
mov
jnp
sti
adc
push
add
adc
jne
cld
sub
cwtl
pusha
std
sahf
fcoml
pop
nop
add
pop
jecxz
mov
sbb
out
or
fsubs
cmp
into
lcall
sub
daa
rcrl
lcall
leave
ds
dec
cmp
and
leave
xchg
fistps
shr
bound
cmp
movsl
xchg
arpl
jl
fnstsw
insb
fstps
xchg
jae
mov
cwtl
pop
dec
add
mov
aaa
push
push
lea
dec
sub
mov
lret
and
fcomi
lods
scas
dec
shl
add
cltd
lds
or
ljmp
aaa
push
jo
test
adc
addl
ror
repz
xchg
repnz
push
arpl
mov
push
mov
test
pop
fisubs
mov
mov
sub
cs
in
pop
mov
push
in
and
inc
push
sub
sub
adc
push
xchg
add
mov
sub
and
sbb
add
fstl
lahf
in
fiadds
jnp
icebp
sbb
sbb
xchg
into
scas
addr16
push
stos
lret
js
leave
orl
lret
int
sti
inc
pop
repnz
sbb
vpackssdw
sbb
leave
insl
cmp
and
push
leave
xor
pusha
neg
cld
cmpsl
sub
xor
movb
xlat
or
push
adc
xchg
push
pop
pop
test
jl
movsl
and
pop
sub
adc
or
cmp
adc
sub
nop
loopne
push
mov
pop
jge
rclb
ja
dec
imul
mov
inc
xor
jbe
mov
mov
lahf
pop
ret
jmp
out
fnstsw
xchg
mov
push
sbb
lret
push
push
sti
shlb
cmp
int
lret
cld
mov
stc
loope
pop
push
rorb
js
cmc
pop
push
push
and
aas
mov
lock
push
mov
adc
stc
lods
sub
jno
sbb
inc
mov
mov
int
cmp
rcll
dec
imul
cmpl
push
pop
sahf
icebp
sahf
adc
cmp
dec
ret
jb
sbb
and
je
fidivl
push
or
mov
fwait
dec
dec
out
or
inc
pop
jne
jno
pop
sbb
arpl
adc
inc
xchg
and
std
jbe
pop
mov
xor
dec
nop
push
mov
pop
mov
hlt
adc
in
add
mov
or
jno
mov
loope
ds
in
xchg
jmp
out
std
cmp
and
out
mov
in
lea
into
lds
in
inc
mov
outsb
sbb
pop
mov
repnz
int
insl
push
fdivrs
daa
xchg
xchg
fisubl
sub
fidivl
mov
sbb
cmpb
inc
test
mov
push
xor
out
lahf
mov
cltd
and
lock
lds
cli
je
inc
or
test
es
jno
adc
fwait
int3
inc
pop
in
movsb
xchg
jnp
mov
pop
test
mov
mov
pop
jge
pop
mov
loope
jnp
push
xor
push
sbb
ss
ret
cmp
cmovno
arpl
cmpsl
cs
adc
jl
in
mov
sub
or
pop
cmc
std
cmpsb
stos
xchg
mov
jg
sub
mov
mov
psubb
sahf
sub
mov
arpl
leave
ret
ret
popa
add
movsl
lret
dec
inc
and
icebp
enter
pop
xchg
aaa
stos
jecxz
mov
xchg
inc
scas
mov
mov
insb
cmpsl
push
cmp
arpl
sub
inc
repz
mov
out
dec
push
mov
fwait
stc
cmp
or
pop
inc
ret
add
sahf
inc
pop
nop
test
jne
imul
mov
jbe
es
xor
mov
cmp
clc
insl
xchg
push
mov
jnp
ret
pop
sbb
xchg
mov
ss
push
jo
in
dec
test
pop
cmpsl
xchg
mov
cmp
adc
lret
inc
dec
cmp
shll
lea
shrl
mul
int3
xchg
les
adc
fsub
jnp
cmp
xor
mov
mov
movsl
fucom
cwtl
mov
dec
movsb
mov
inc
rol
jns
mov
fstps
outsb
xchg
pushf
data16
mov
mov
inc
daa
fsqrt
mov
and
mov
and
pushf
orl
outsl
sti
ljmp
xchg
rorl
jg
in
jle
pushf
jp
jbe
int
addl
imul
adc
lret
das
pop
out
sti
sbb
daa
hlt
sbb
mov
rolb
sub
mov
sbb
mov
xor
test
cmp
lret
hlt
sti
aam
sub
mov
push
sarb
xchg
mov
divb
jns
stc
push
stos
push
xchg
imul
test
xchg
fldl
movsb
scas
cmp
test
out
and
cli
pop
sub
xchg
cmp
int
xor
add
lds
fwait
inc
pop
cmp
xchg
icebp
add
out
mov
push
mov
xor
cmp
gs
fcmovu
sbb
add
mov
push
daa
cmp
aam
imulb
les
cwtl
lods
rol
cmp
push
loopne
adc
sub
inc
stos
jle
inc
jp
inc
andl
mov
mov
xchg
adc
popf
leave
pop
jecxz
mov
xchg
faddl
sbb
mov
mov
je
bnd
dec
jb
inc
das
clc
popa
mov
ljmp
aad
xchg
iret
adc
mov
push
push
cmp
jbe
imul
cmc
je
call
add
sbb
or
stc
xlat
in
test
mov
js
insl
xor
int3
mov
inc
mov
mov
out
into
leave
insb
pop
xor
cmp
cmpb
es
test
arpl
sbb
push
lea
dec
adc
sar
ss
mov
lahf
outsb
lahf
mov
pop
pop
dec
popa
sub
mov
mov
mov
cmp
fildl
jns
call
lods
dec
lcall
xor
aam
pop
xchg
rol
addr16
jmp
cmpsb
pop
lret
cs
out
jg
push
fiaddl
js
mov
adc
sbb
jmp
xchg
lods
jno
xchg
je
out
aam
mov
fidivrs
push
outsl
test
xchg
mov
cld
gs
xchg
leave
push
pop
fstpt
in
inc
or
sbb
dec
or
popa
imul
dec
or
adc
into
push
mov
shll
xchg
xor
add
jmp
add
push
call
pop
fsubrs
mov
out
push
out
inc
fldl
lock
jne
scas
push
sarb
dec
out
lret
pxor
sbb
rolb
loope,pn
pop
imul
xchg
pop
and
icebp
push
cltd
mov
or
fistps
xchg
xchg
in
push
push
out
cmp
cmc
pushf
mov
mov
jle
les
mov
adc
and
pop
or
push
repz
sbb
es
mov
dec
pop
ljmp
mov
rclb
aam
mov
or
and
test
cmp
lea
stc
adc
mov
pop
pop
lret
adc
xorl
repz
xchg
xchg
aas
mov
sar
sub
sbb
cwtl
mov
xor
sbb
clc
sub
xchg
or
inc
sub
dec
pop
jl
xor
jmp
mov
dec
mov
ret
cmp
xor
decb
push
sbb
jb
aad
push
and
gs
dec
arpl
outsl
mov
inc
adc
pop
hlt
mov
lret
push
cmpsb
rcr
imulb
sub
jmp
insb
ret
fidivrs
shrl
testl
jecxz
test
push
je
imul
fstpl
les
sti
out
pop
cmpsl
jno
push
sbb
and
into
loope
dec
test
imull
mov
in
add
shll
cltd
iret
inc
cmp
or
aas
scas
dec
nop
xor
push
pusha
jle
lret
mov
nop
inc
inc
cli
xchg
mov
lret
arpl
js
sarb
shrl
mov
jb
ret
push
fs
les
push
pop
pop
mov
shrb
push
pop
add
mov
add
and
jmp
shl
fdivrl
dec
cmp
pop
xchg
lcall
ret
mov
enter
xor
les
lods
mov
jecxz
ds
stos
inc
call
pop
or
sub
adc
fidivrl
sar
jae
inc
lods
movsb
pop
shl
push
scas
fcompl
and
in
fisttpll
jnp
xchg
lock
xor
dec
pop
stos
adc
dec
jg
mov
push
pop
mov
shlb
and
jnp
xor
addr16
xchg
and
movsl
adc
lret
jle
pop
decb
jo
out
adc
jne
pop
mov
adc
js
stc
loope
outsb
dec
out
lahf
or
inc
pop
inc
and
cmpl
leave
cld
int3
mov
je
xchg
xor
mov
jae
inc
dec
jl
repz
out
js
sub
and
jge
mov
out
xor
mov
xor
dec
dec
repnz
jno
and
jne
icebp
popa
mov
call
in
mov
mov
pushf
ss
jl
es
dec
jmp
cld
mov
xor
xlat
bound
arpl
adc
std
ja
in
push
in
movsl
pop
mov
mov
jb
icebp
inc
shrb
ss
insl
hlt
lea
vmaxps
sub
mov
mov
adc
sub
push
mov
faddl
lods
les
inc
insl
icebp
mov
xchg
jb
movsl
cmc
xlat
repnz
sub
xchg
out
jl
mov
ljmp
add
or
mov
sub
jg
pop
fsubr
inc
sbb
iret
xor
cmp
sbb
cmp
arpl
stos
jne
add
cli
data16
and
xchg
lret
inc
test
pop
dec
daa
ja
inc
xor
sub
pusha
mov
push
push
xor
call
les
addb
jnp
xchg
mov
aad
imulb
and
aam
loopne
mov
pop
pop
fmuls
dec
std
mov
push
fs
mov
ror
arpl
mov
xor
js
mov
cmp
rorl
mov
push
in
add
pop
int
jecxz
jmp
inc
inc
into
clc
push
stc
adc
mov
mov
mov
xlat
xchg
jmp
cmpsl
mov
dec
sbb
mov
fsubr
mov
imul
je
jg
jecxz
sbb
dec
test
mov
jle,pt
inc
or
aaa
enter
outsl
mov
mov
ficoms
jg
dec
nop
mov
pop
fildl
mov
es
outsb
sbb
movsb
je
add
adc
mov
add
xor
jmp
out
and
push
popf
ret
add
push
xor
push
incl
stc
aad
decb
jno
adc
add
test
in
test
or
xchg
xor
cmp
in
orb
mov
jb
and
inc
sbb
xchg
jle
out
out
xchg
mov
cs
rclb
leave
cltd
mov
repz
jle
stos
and
mov
pop
ljmp
push
lret
jle
inc
push
gs
in
or
popa
cmp
mov
cmp
push
loopne
nop
push
mov
lods
cmp
xchg
lds
hlt
push
dec
xlat
fptan
hlt
or
and
xchg
mov
mov
iret
sbb
add
stos
scas
and
mov
testb
es
cs
or
loope
push
pop
jp
lea
add
andb
in
or
or
mov
mov
xchg
arpl
cwtl
lret
sahf
adc
push
xchg
std
aaa
shll
pop
or
or
xchg
cld
fisttpl
xchg
inc
loopne
int
cmp
shrb
out
dec
gs
pop
enter
jmp
or
inc
int
sub
adc
fldl
or
or
cmpsb
adc
testb
aam
push
popa
and
pushf
popf
add
jle
pop
sarb
cmpb
test
dec
out
es
imul
adc
mov
dec
aaa
pop
mov
jo
push
out
push
nop
xchg
hlt
sub
push
mov
aad
loopne
aam
dec
shlb
shl
xchg
into
enter
insb
cmp
push
cwtl
pop
or
outsb
pop
andb
es
lret
enter
cli
inc
lret
outsb
fwait
jae
stos
dec
repz
dec
loopne
jle
mov
xchg
cmp
test
sar
into
stos
scas
mov
out
into
cli
adc
cmp
popf
adc
mov
push
arpl
dec
call
data16
mov
push
sbb
sbb
jae
lods
or
xchg
mov
int3
pop
cmp
pushw
sbb
jo
into
push
cmp
fidivl
cmpsl
sti
pcmpgtd
and
dec
cs
cli
xor
out
mov
js
bound
shl
loopne
mov
jb
cmp
jge
mov
jno
std
push
ficompl
cli
cmc
aaa
fbstp
out
mov
lret
neg
pusha
aas
mov
mov
jb
mov
mov
push
push
sti
mov
jae
push
mov
ss
out
out
sub
mov
xor
mov
mov
jbe
fs
mov
pop
jmp
push
out
dec
xchg
pop
sar
jo
outsl
jae
pop
push
fninit
aas
mov
idivl
pop
test
xor
add
inc
lods
mov
push
lret
mov
pop
xor
xor
lret
lods
xchg
jo
xor
shrl
push
push
mov
fisubs
xchg
shlb
ljmp
jle
cmp
in
lods
movsl
clc
ss
xchg
xchg
mov
pushf
mov
out
ja
andb
loopne
xor
inc
add
roll
push
and
adc
sub
jmp
fnsave
and
and
ja
shll
add
sahf
pop
out
repnz
xorb
mov
dec
sub
inc
and
mov
xchg
add
push
sbb
dec
lcall
mov
and
faddl
and
lea
jbe
mov
lock
imul
sub
pop
adc
rol
movlps
xor
inc
into
jae
mov
call
dec
lods
jecxz
data16
add
orb
add
into
mov
je
push
pop
jns
inc
pop
addr16
and
scas
mov
jl
add
int
mov
hlt
dec
add
subl
dec
jo
daa
lret
dec
cmp
cmp
push
pop
lret
jp
stos
or
adc
in
fcoml
inc
xchg
pop
xor
mov
xor
pop
adc
jnp
sub
dec
sbb
sbb
inc
xchg
mov
pop
gs
mov
cld
inc
int
xor
jle
test
call
jae
out
sbb
sub
adc
adc
cmp
and
xchg
push
inc
outsb
bound
pop
dec
cmp
repnz
cmpsb
loop
loopne
jb
aad
enter
cmp
inc
mov
ss
out
les
imul
fwait
scas
adcb
js
jecxz
dec
push
mov
cld
or
cmpsl
inc
out
lea
dec
sarb
aas
enter
and
popf
or
insb
std
pop
xchg
lods
cmp
xchg
aas
sub
or
fwait
sub
inc
stc
hlt
cltd
ss
push
jbe
pop
cld
clc
cmp
popf
xor
je
stos
mov
ljmp
jge
inc
fimull
pushf
lcall
mov
cmp
xorb
popa
or
push
pop
jg
xchg
xchg
push
pushf
mov
out
cmp
cmp
sub
or
and
in
add
xchg
popa
les
inc
stos
repnz
mov
dec
mov
pop
addr16
fucom
push
stc
push
mov
add
loope
push
insb
mov
cmc
ljmp
or
cmpsl
aaa
cmp
xor
cld
out
adc
test
cmc
inc
xlat
sti
mov
jmp
in
scas
dec
or
sub
lods
lret
and
iret
mov
push
mov
out
mov
loopne
out
xchg
jle
inc
lret
fisttpll
xchg
sub
imul
jne
in
test
cmp
xlat
inc
mov
sbbl
xchg
dec
mov
aas
and
aaa
mov
into
rcll
cmp
push
jmp
test
add
sbb
cmp
pop
daa
cld
jnp
mov
adc
inc
sub
xchg
jno
xchg
adc
and
jg
stos
and
rorb
fsts
loope
pop
or
rorl
orb
xchg
pop
loopne
addl
xor
into
or
mov
add
mov
leave
bound
push
sahf
lret
jb
outsb
and
inc
imul
pop
adc
filds
jne
or
scas
adc
jb
les
movsl
dec
dec
push
mov
out
je
push
ret
mov
ds
out
push
outsl
cmp
mov
push
addr16
in
loope
adc
pushw
sub
pop
push
and
adc
push
in
je
mov
int
or
repz
mov
push
add
movsl
push
xor
jg
dec
mov
push
ret
sbb
mov
fwait
sbb
mov
stos
pop
push
stos
or
loopne
nop
cltd
xchg
lock
or
mov
icebp
js
inc
or
jnp
sbb
aas
sti
stos
mov
cld
ljmp
xor
sub
cwtl
mull
jmp
adc
stc
dec
xchg
lahf
cltd
inc
cmp
push
cmpsb
xor
int3
jecxz
cmp
mov
sbb
mov
push
lock
sub
mov
mov
jmp
shl
out
mov
jne
adc
std
faddp
cwtl
xor
cld
addr16
je
pop
or
mov
mov
stos
push
mov
or
dec
sbb
mov
xor
cltd
jg
add
aas
dec
pop
lahf
pop
mov
ljmp
pop
in
into
add
or
mov
xchg
jmp
lret
ret
add
cmp
fs
push
jl
sti
xor
es
push
and
xchg
sbb
aaa
sbb
jl
jae
aad
imul
stos
mov
sbb
cwtl
jp
cwtl
lcall
fimuls
inc
xchg
nop
mov
lods
pop
sbb
das
inc
fwait
mov
sbb
mov
and
out
xor
mov
cmp
sub
aad
jecxz
inc
pop
inc
sub
ja
roll
jl
mov
out
cld
test
stc
cltd
xor
clc
jae
mov
nop
jo
inc
mov
arpl
js
sti
in
adc
cmp
cmp
ja
mov
ficoms
popa
or
and
xor
mov
or
push
xchg
iret
lock
flds
add
mov
cltd
aam
cs
add
insl
mov
mov
pop
lods
loopne
push
push
ljmp
add
push
sahf
push
inc
sbb
mov
addr16
lcall
sub
aam
scas
nop
xor
inc
lahf
test
popf
shll
push
inc
dec
xor
fcmovb
lds
movsl
out
xchg
inc
and
adc
pop
out
jno
xchg
mov
aam
or
cld
shll
data16
fdivl
stos
lcall
mov
jp
jno
cmpsl
xchg
adc
mov
das
jp
xchg
mov
pop
jne
icebp
out
xor
adc
sbbb
sbb
ja
inc
fdivp
nop
into
fsubrl
pop
sub
mov
mov
and
mov
jae
nop
das
sub
insb
stos
imulb
or
push
inc
out
scas
sub
or
jnp
insl
popf
or
ljmp
jmp
sbb
xchg
lea
mov
sbb
xor
mov
xor
jbe
cmp
loop
dec
andl
int3
cmp
or
sbb
add
xlat
sbbb
pushf
jb
jbe
sbb
gs
inc
cmp
jns
fiaddl
lahf
inc
xchg
aad
test
mov
jo
sbb
rorl
lds
xorw
cmp
scas
and
loop
pop
int3
sti
mov
jno
jne
mov
jns
pop
sarb
adc
mov
sub
mov
lods
inc
push
arpl
ficoms
add
das
scas
test
jns
rolb
add
mov
iret
scas
cmpb
and
adc
fsubrl
jo
jge
aas
aam
iret
ror
jmp
cmp
and
push
or
mov
push
sub
inc
addr16
shl
data16
imul
mov
pop
push
shlb
dec
scas
scas
add
cmpl
jg
and
enter
adc
pop
xor
pop
cwtl
cmp
sarb
sub
lret
stc
cli
insl
repnz
mov
fistpll
clc
orl
push
fldenv
ds
testb
jge
jbe
or
or
fwait
pop
cwtl
aas
push
push
pop
int3
xchg
adc
push
lds
dec
xchg
and
fimull
adc
push
adc
sub
sti
scas
mov
push
jnp
inc
push
sahf
loop
adc
insb
dec
arpl
imul
push
push
or
pop
cli
cld
loop
stc
push
imul
je
mov
sub
lret
xor
stos
aas
adc
sti
inc
lcall
int
inc
jnp
dec
dec
rcrb
mov
popf
ja
mov
jecxz
popf
sete
push
adc
movsl
test
outsb
scas
int3
or
test
nop
in
jno
mov
dec
jo
ljmp
xchg
jb
call
pushf
sub
push
pop
jo
xor
xchg
xchg
xor
sahf
arpl
nop
test
call
bound
fdivr
subl
mov
jmp
enter
imulb
add
mov
out
lea
mov
pop
mov
mov
push
shll
outsb
adc
or
rcll
mov
mov
aas
lahf
in
cmp
jb
fildll
bound
jbe
inc
in
in
lahf
dec
mov
pop
and
orl
jg
testl
iret
cmpl
mov
lods
mov
out
xchg
cmc
arpl
lods
jae
mov
mov
stos
mov
call
sbb
mov
int
call
inc
in
and
mov
jae
jmp
inc
inc
jg
sub
jo
jb
mov
lahf
cmp
xchg
sbb
pop
xchg
pop
and
lods
and
aam
push
rclb
fistpl
dec
sbb
out
jge
icebp
mov
and
cmp
push
xchg
insb
fnstsw
pushf
jl
jmp
mov
sbb
xchg
scas
movsb
cmp
or
out
mov
adc
popa
ljmp
and
adc
mov
adc
or
out
repnz
push
cmp
test
sub
push
outsl
push
push
pop
fadd
int3
sahf
out
js
mov
ljmp
jp
mov
in
repz
fistl
sbb
das
aam
pop
in
pop
sbb
fwait
dec
or
fildl
mov
inc
push
push
mov
and
pop
dec
out
mov
pushf
popa
add
gs
test
push
jne
inc
dec
sbb
daa
outsl
fiaddl
ret
loope
jg
int
jns
sbb
daa
push
inc
icebp
or
add
cmp
sbb
lret
sahf
or
iret
dec
test
inc
sbb
and
jecxz
inc
jle
int3
dec
clc
cmp
fidivrl
mov
or
mov
adc
sbb
cli
xchg
pop
out
ja
push
inc
mov
addr16
sbb
cmp
sub
in
dec
gs
or
lret
lock
adc
mov
push
cmpsb
mov
fidivs
or
idivb
loope
add
add
add
dec
testb
pop
add
lcall
add
psubb
mov
cmc
js
lea
cmp
jp
jnp
pop
add
mov
fisttps
dec
sti
jne
in
enter
sbb
in
sub
fnstsw
out
xchg
mov
mov
push
loopne
dec
lret
and
hlt
inc
mov
push
ja
mov
stos
pop
sub
mov
cmpsb
push
test
flds
cmp
fadd
insb
jp
mov
and
jmp
jle
pop
in
mov
sbb
xor
in
jb
sbb
cmp
movl
sbb
inc
sbb
stc
dec
or
fimuls
enter
dec
add
push
sub
movsb
xor
call
scas
xor
dec
mov
orl
xchg
sub
dec
pop
in
lea
leave
inc
adc
xchg
sbb
cmp
lret
jnp
das
bound
xchg
mov
scas
hlt
arpl
sub
bound
pop
mov
pop
and
lea
aaa
imul
push
cmp
mov
fisttpll
int3
call
sub
adc
xor
sub
insl
and
push
mov
imul
or
lahf
bound
xor
cwtl
adc
shrb
mov
sbb
dec
mov
hlt
lahf
mov
xor
bound
push
xor
sbb
adc
fnstenv
loope
dec
call
or
push
dec
or
adc
mov
stos
inc
sbb
test
cmp
cmp
das
jo
hlt
push
mov
arpl
mov
cmp
int
lret
bound
adc
mov
push
xchg
scas
push
out
add
xlat
int
lahf
ret
fmuls
sbb
je
int
jnp
repnz
and
or
fists
je
and
pop
cmpsl
addr16
loopne
sub
or
push
test
insb
jnp
ja
shlb
test
adc
js
mov
sub
add
iret
jbe
aas
lods
mov
dec
fisttpl
push
in
cwtl
lahf
adc
adc
dec
jecxz
dec
loopne
push
sub
sub
popa
ret
orl
and
pop
repz
sti
jo
or
add
movsb
or
cld
jmp
fdivrs
repz
int
jl
rclb
or
adc
add
fisubl
mov
fistpll
mov
cmovle
insl
mov
aaa
xor
xchg
adc
push
out
inc
movsl
fstpl
inc
and
mov
imul
pop
push
push
sub
ret
and
loopne
loope
roll
cmp
arpl
aaa
xchg
cltd
test
and
outsb
mov
pop
or
xor
and
decl
xor
in
daa
mov
cmp
idivb
jl
out
push
les
lret
insb
cs
ret
mov
int
push
adc
xor
ret
nop
cld
fst
out
push
mov
jns
ret
mov
pop
call
push
inc
push
push
dec
cmp
aaa
mov
rol
out
dec
mov
mov
adcb
aad
cmc
inc
cwtl
adcb
mov
jp
dec
cs
cmp
test
or
cli
sahf
mov
fisubs
jg
fisubrs
and
inc
xchg
lods
push
imul
iret
or
push
int3
mov
and
pop
add
xchg
aaa
jns
cmpb
xchg
xor
and
mov
test
stos
nop
popf
mov
dec
into
mov
icebp
mov
mov
repnz
mov
push
pop
push
test
add
add
lds
popf
xchg
lret
add
dec
xchg
out
fisubrl
les
jmp
cli
sub
clc
out
pop
in
fsubp
fcomp
push
pushf
movsb
dec
enter
or
ds
enter
xlat
sar
fdivrl
or
mov
or
and
pushf
fwait
fs
in
mov
int
int
stc
jns
sbb
ds
stos
repnz
cwtl
sar
cmc
xchg
mov
inc
push
aam
je
mov
stos
fldt
and
pop
jp
shlb
sahf
popf
and
mov
mov
jmp
out
dec
sub
jae
jecxz
jp
xor
inc
pop
not
lret
aas
mov
sub
xor
out
ja
movsb
inc
adc
loope
and
out
or
and
jge
adc
cmpsl
popf
pop
gs
repz
sub
inc
sbbl
mov
lret
imul
stos
movsl
push
imul
xor
mov
rcrb
int3
iret
add
jp
shrl
and
dec
xchg
rorb
es
push
adc
cli
rclb
rolb
mov
lahf
push
mov
fwait
in
cltd
loopne
dec
xlat
mov
mov
fbld
std
cltd
int3
dec
mov
scas
repnz
push
pop
in
mov
insl
pop
inc
cmp
js
scas
inc
addl
mov
jae
mov
sbb
ss
iret
inc
xlat
mov
jbe
pop
adc
in
outsl
fs
stc
imul
jle
inc
leave
push
sub
call
loop
jmp
gs
push
dec
pop
push
outsl
fcmovnb
push
pop
push
rcrl
negb
int3
add
ret
xchg
mov
xor
ljmp
pop
dec
stc
sub
sbb
mov
xor
mov
test
push
and
shlb
sbb
xor
je
add
incb
cmp
jl
pop
pop
mov
ret
sub
mov
stc
xor
sub
je
jne
daa
mov
icebp
clc
push
sub
sbb
dec
push
mov
shlb
jmp
outsl
aad
iret
xor
movsb
shlb
mov
ret
xor
insl
cmp
out
out
aad
mov
adc
aad
pop
in
mov
std
xchg
pop
sbb
push
arpl
lret
cmp
loope
lahf
shl
mov
aaa
add
mov
mov
lods
inc
mov
inc
fstpt
jns
mov
xor
aad
add
lcall
sub
or
bound
dec
into
jo
stos
cmp
nop
test
jne
insb
pop
xor
popf
gs
sbb
lahf
leave
aas
jbe
mov
add
cmp
clc
mov
mov
push
push
sub
xchg
scas
pop
icebp
ret
xchg
adc
in
testl
add
test
adcl
and
andps
adc
add
test
or
lods
pusha
add
jae
push
add
jmp
std
mov
into
mov
mov
insl
mov
pop
or
mov
stos
into
cmc
dec
fisubl
ss
sub
pop
mov
aaa
mov
mov
lcall
jno
inc
inc
fisubrl
add
test
mov
xor
jnp
out
lret
clc
imul
and
sbb
pushf
adc
shlb
pop
insl
mov
loope
pop
push
sbb
imul
push
gs
lock
popa
aad
stos
out
cli
scas
xchg
cltd
inc
mov
fisubrs
sti
jecxz
sahf
lock
mov
test
rolb
inc
es
sub
pop
mov
hlt
push
push
cltd
popa
cmpb
leave
lea
cmp
loope
add
call
sub
stos
mov
movsl
mov
ffreep
xor
filds
int3
insb
push
shlb
ret
pop
cmpb
lods
sahf
repnz
fadds
leave
fld
mov
mov
add
adc
shl
lock
adc
pop
xchg
jmp
cmc
xor
loop
pop
outsb
out
hlt
dec
mov
rcll
pop
ret
and
ret
jl
pop
xchg
loope
cmp
add
lret
jne
fwait
jg
jne
mov
es
push
out
jg
daa
inc
xorl
mov
mov
cmp
lea
enter
jb
punpckhdq
sbb
adc
add
lret
int
mov
pmaxub
push
jecxz
sbb
int
pusha
push
stos
pop
data16
aaa
adc
inc
cmpsl
inc
pop
inc
rorl
in
jmp
iret
pop
fdivs
xor
xorb
and
jle
sti
popf
lcall
fs
loopne
ret
jbe
inc
imul
mov
fwait
mov
mov
arpl
push
inc
sti
scas
pop
jne
mov
fsubs
pop
xchg
xor
inc
in
mov
out
stc
push
outsl
mov
sti
mov
cmp
daa
mov
mov
inc
fdivs
pusha
enter
hlt
add
lret
push
pop
mov
fsubrs
push
cwtl
push
inc
or
fisttps
and
ret
pop
pusha
repz
mov
shlb
mov
xchg
das
pushf
rorl
lret
cmc
xchg
xchg
daa
and
push
jl
inc
cmp
popa
rcrl
and
xor
cld
fdivl
mov
jmp
jl
pop
push
add
jne
int
sbb
sahf
testl
lret
fildl
sahf
xchg
adc
or
rcr
loop
mov
fimull
sub
pop
and
push
in
xor
dec
pop
xor
cmp
jl
ss
aad
mov
add
push
hlt
pop
xchg
jg
pop
and
scas
sub
in
xchg
adc
loopne
jl
insl
and
mov
fisttps
out
lret
sbb
add
dec
sub
cmp
loope
jp
jge
cwtl
stos
repz
adc
mov
add
mov
sub
fildl
aas
out
repz
in
js
dec
sarl
mov
out
in
notl
imul
inc
outsl
test
sbb
arpl
cmp
and
es
cmpsb
ja
in
adc
cli
movsb
add
loopne
xlat
decb
jecxz
mov
dec
inc
cmp
test
pop
jp
inc
or
movsb
mov
pop
mov
inc
inc
mov
outsl
outsb
lret
xor
dec
clc
push
and
lahf
addr16
call
mov
push
loope
fstps
pushf
jmp
adc
out
xor
dec
clc
mov
lret
movmskps
pop
lods
shlb
and
pop
jne
inc
mov
aam
sbbl
lods
adc
dec
and
pop
scas
or
std
xchg
jmp
sar
fstpl
add
filds
or
test
loope
mov
or
jbe
sub
aam
imul
ret
sub
push
xchg
sub
ds
adc
js
xor
gs
arpl
push
xchg
dec
adc
adc
jne
cwtl
jp
stc
xchg
aam
xchg
mov
scas
sub
enter
pushf
push
addb
or
push
xchg
push
mov
in
cwtl
in
sbb
out
hlt
sub
jge
imul
lea
adc
cmc
and
or
lcall
aas
xor
out
push
xor
jge
cltd
insb
int3
ret
test
les
adc
push
loope
jecxz
mov
fildll
outsl
insb
and
sub
and
jnp
es
mov
nop
xor
jno
in
lahf
jae
push
jge
movsb
mov
adc
rorl
scas
or
sbb
mov
or
imulb
adc
mov
pop
xlat
ljmp
outsl
mov
rolb
lret
in
and
fmul
cli
insb
mov
pop
dec
pop
push
mov
jb
and
lahf
dec
mov
hlt
xchg
push
xor
enter
pop
lock
sahf
jno
adc
sub
jmp
lcall
scas
js
fstpt
mov
out
pop
dec
test
jmp
mov
xor
cli
rclb
sub
mov
jg
pop
sbbb
mov
popf
leave
daa
add
jl
dec
lret
push
cmp
jno
test
int
and
push
cmp
mov
in
adc
mov
xchg
xor
mov
dec
and
rcl
movsb
mov
pop
push
ret
push
shrb
fs
mov
cltd
pop
jbe
xchg
les
repz
loop
test
and
gs
adc
or
mov
aam
ja
out
mov
je
cli
xchg
enter
std
push
addr16
sahf
xor
mov
cli
call
mov
outsl
push
repz
dec
orb
js
mov
pop
sub
mov
loop
or
push
ficomps
jge
loopne
mov
test
xchg
inc
loop
jp
pop
fstp
jg
push
mov
lea
or
dec
and
push
nop
xchg
mov
imul
mov
popf
movsl
rep
aad
push
popa
pop
test
jp
dec
sub
leave
lods
shl
xorl
jns
jge
mov
jnp
lock
mov
outsb
loop
data16
sub
insl
xchg
lods
and
popa
mov
sub
push
jo
xchg
in
add
mov
fstl
or
out
stos
bound
cmc
lds
fidivrs
mull
lds
lods
add
mov
and
dec
pop
mov
jne
mov
inc
add
xlat
add
and
dec
add
xchg
scas
out
pop
mov
aam
pusha
adc
mov
ljmp
ficompl
divl
cmp
bound
jnp,pt
test
mov
mov
pop
xlat
leave
and
aam
mov
rcll
in
cmp
and
sub
movsb
fadds
movsl
push
or
hlt
mov
movsl
mov
dec
jle
jns
adc
test
push
xor
inc
add
test
ret
int3
rcl
mov
aaa
jl
aam
outsl
sbb
pop
xchg
xchg
jae
sub
scas
mov
cli
dec
outsb
mov
mov
mov
xchg
mov
lods
loop
insl
int
cwtl
lock
fadds
cmpsb
repnz
cltd
cwtl
test
repz
into
test
push
push
inc
test
fisubrs
mov
pop
mov
add
inc
mov
mov
lods
sub
cmp
xchg
loopne
lcall
in
sub
jp
and
imul
mov
add
add
mov
pusha
inc
dec
mov
add
sti
jg
sub
movsb
add
lds
xor
insl
fidivl
push
imul
nop
into
push
sarb
orl
inc
enter
push
xor
ret
dec
mov
or
push
sub
pop
cmp
pushf
es
into
out
stos
cmp
std
loope
push
lret
and
test
mov
xor
lock
orb
dec
cmc
cmpsb
add
fcoms
fstpt
add
mov
lods
push
lret
add
sbb
lds
mov
jp
push
sahf
cmc
xlat
in
ficoms
into
test
push
mov
rorl
sub
pop
mov
sub
sbb
add
dec
pop
mov
imul
inc
stc
mov
movsl
xor
dec
mov
int3
or
je
mov
loop
loope
mov
lret
jno
out
and
mov
push
pop
cmc
pop
cmc
sub
test
sub
jmp
popa
or
cmc
mov
decl
aam
sub
fstps
xchg
sahf
lret
stos
repz
imul
adc
adc
and
scas
inc
pushf
pop
or
dec
ss
pop
es
fbstp
xor
rorb
sub
xor
push
adc
pop
stc
bound
xor
lds
sbb
mov
ja
mov
push
repz
mov
dec
pop
aam
leave
test
testl
andl
sub
push
push
push
je
rcll
xor
or
pop
enter
cs
or
gs
out
data16
js
mov
pop
or
mov
cmc
pop
or
leave
jp
ds
mov
push
loopne
pushw
and
cmpsl
repnz
cli
mov
mov
pop
mov
out
xor
sub
movsl
dec
test
mov
pop
push
xchg
ja
dec
mov
xchg
add
jnp
xchg
jno
and
cmpsb
dec
das
mov
push
lret
mov
push
gs
inc
shrl
shl
jbe
inc
movsl
fidivrl
adc
insl
adc
jecxz
add
jbe
cmp
std
sbb
inc
test
mov
xchg
xchg
outsl
jle
mov
pop
sbbb
mov
or
jne
mov
aam
int
dec
push
or
sub
les
test
cmp
fs
sbb
int3
ds
stc
arpl
mov
xchg
fdivrl
iret
fs
insl
fldl
push
and
sbb
push
jmp
aad
sub
aam
es
push
sub
pop
inc
jne
or
add
mov
push
or
das
stc
arpl
movsl
mov
mov
sub
dec
cmp
scas
inc
sub
jb
test
xchg
sti
outsl
scas
sbb
ja
pop
cwtl
jns
lret
or
inc
mov
fiaddl
and
mov
mov
dec
and
loop
xor
lods
jmp
out
cmpsl
xchg
add
mov
pushf
cmp
cmc
sub
js
mov
or
push
test
push
dec
dec
cmpsb
int
inc
jl
add
sub
lret
cmp
out
push
cmp
cmpsl
outsb
or
adc
adc
movsb
enter
and
scas
cld
mov
sbb
push
inc
cmpsl
jae
sbb
pop
xchg
mov
ljmp
inc
and
jp
mov
or
xor
jnp
clc
or
push
loope
mov
pusha
movsb
fnstenv
mov
insb
sti
mov
out
sbb
adc
aam
mov
mov
mov
push
lock
mov
stos
jl
push
les
addr16
push
fstpt
cs
sbb
mov
and
imul
in
mov
icebp
data16
push
mov
adc
inc
add
ja
test
cli
or
cmp
mov
subl
xchg
das
sub
push
push
out
pop
movsb
fcmovnu
outsl
dec
mov
mul
cli
rcr
lea
pusha
pop
fcomi
mov
mov
or
popw
xor
add
mov
sbb
pop
mov
and
stos
and
xor
and
cmp
jo
loopne
jnp
cmc
cltd
mov
mov
mov
mov
xor
enter
out
jle
mov
xchg
loope
push
and
enter
mov
jge
push
and
push
mov
push
lret
jg
jb
add
adc
fbstp
push
adc
clc
push
fists
mov
push
or
divl
or
test
std
outsl
xor
dec
ret
and
dec
mov
loop
gs
lods
push
popa
scas
inc
std
jmp
cmc
mov
cmpsl
fisttpll
cmpb
fisubl
or
test
mov
jg
xlat
mov
cld
xchg
into
cli
xor
adc
pop
sbb
pop
mov
jp
popa
lcall
mov
mov
sub
sbb
add
shrb
pop
out
inc
mov
js
and
cmp
or
cmp
repnz
fcmovb
stos
sub
outsb
data16
fistps
bound
loop
jb
inc
icebp
loopne,pn
and
sub
inc
lret
loope
inc
lret
jle
mov
inc
and
lods
inc
movl
push
sub
xor
inc
push
std
sub
pop
int3
jo
adc
mov
xchg
lret
loope
dec
add
gs
mov
adc
xchg
and
sqrtps
nop
out
cltd
pop
push
out
sbb
rcr
cmp
sub
aam
or
cwtl
sbbl
push
je
imulb
mov
adc
pop
xor
or
imul
div
adc
and
mov
mov
inc
cs
jmp
and
lods
push
pop
aas
push
cmpsb
or
js
imul
sub
mov
mov
push
adc
lret
fs
nop
mov
bound
jb
dec
or
cmp
push
mov
mov
lahf
and
jecxz
pop
xor
aas
and
jecxz
mov
pop
rcl
sub
loop
leave
enter
das
inc
jecxz
add
or
cld
test
lods
jle
mov
jae
fsubs
lock
rcrl
nop
jns
jp
filds
sbb
insb
rep
lds
push
xlat
push
cmp
gs
lret
jns
sbb
adc
je
cld
push
stc
rcll
lahf
in
jp
fs
xchg
loope
mov
xchg
and
push
inc
movsb
ljmp
add
lods
sub
pop
loopne
clc
out
in
fstps
std
dec
mov
movsl
mov
jbe
inc
shlb
in
mov
mov
mov
dec
packssdw
adc
push
jno
and
and
xchg
pop
mov
std
mov
mov
pop
cmpsl
ds
aam
xchg
push
cmpsb
and
pop
inc
cmp
fcmovbe
jns
and
cltd
sub
gs
sbb
sti
xor
int
or
add
push
cmp
mov
add
nop
hlt
or
xchg
clc
mov
sahf
fs
adcb
sbb
dec
int3
sti
ds
mov
push
dec
ds
mov
roll
dec
lret
imul
pop
mov
push
mov
lods
outsl
xchg
jbe
jl
cmpsb
add
lahf
scas
fstpt
mov
cmp
lods
lret
stc
mov
fcom
and
inc
rcl
add
mov
lret
icebp
bound
adc
jg
inc
jb
mov
sub
movsl
and
or
sbb
mov
jne
repnz
fsts
jecxz
imull
cmp
pusha
xchg
or
icebp
iret
xchg
inc
mov
fisubrs
lods
push
dec
lock
int3
out
aaa
daa
jle
sbb
repnz
pushf
lret
dec
xor
ja
xlat
or
or
fwait
add
mov
fdivr
mov
lods
add
sbbl
movsb
cmp
and
dec
lods
ljmp
std
inc
jmp
pop
sub
scas
mov
inc
pop
test
xlat
cmp
rorb
mov
out
xor
push
stos
and
pop
push
pushf
xchg
lret
and
loop
clc
or
mov
adcl
fldcw
xlat
js
in
int
cmp
in
and
mov
sbb
xorl
out
pop
pop
loopne
mov
ret
inc
insb
cmp
cmp
jo
loope
rcr
ret
add
mov
and
ficomps
push
data16
push
mov
scas
test
push
call
das
out
or
pop
cmp
hlt
xchg
das
pushf
cld
mov
adc
sar
mov
or
xor
int3
sbb
jne
cmp
xchg
mov
sbb
and
pop
inc
cmpl
push
jp
dec
mov
xor
lods
cmp
pop
gs
xchg
dec
cmp
test
inc
daa
inc
lods
test
sarb
inc
add
std
sbb
adcl
mov
sti
sub
xchg
jmp
pop
or
addr16
sub
xchg
int
mov
sub
into
xchg
lret
iret
repz
js
mov
fdiv
cwtl
dec
clc
lods
xchg
xor
cmp
dec
jns
int
loopne
stos
mov
aad
ficomps
je
fists
xchg
xor
xchg
in
ret
or
xor
scas
ficomps
ja
scas
lds
repnz
cmpsl
stos
lods
push
mov
add
dec
dec
xor
push
and
mov
test
insl
fsubrp
pusha
and
push
xchg
mov
stos
aad
fisttps
sbb
fnsave
sets
pop
dec
sbb
pop
adc
fldenv
sti
add
push
imul
ror
fstpl
jmp
scas
mov
jae
call
fistps
out
add
mov
pop
push
into
sbb
bound
adc
ja
sbb
pop
mov
pop
test
xchg
pop
fwait
aam
lods
or
lret
push
nop
lods
pop
mov
int3
mov
popf
add
pop
mov
fldcw
xorl
in
xor
hlt
pop
xchg
pop
inc
mov
mov
pop
pushf
shrl
cmc
sbb
mov
sarb
fwait
mov
xchg
das
in
pop
sahf
rdtsc
dec
adc
xchg
mov
dec
fdivrs
aaa
lds
daa
dec
movb
outsl
cmp
push
cltd
stc
inc
aas
mov
aam
repnz
lretw
insl
jl
mov
dec
cmp
js
cltd
jb
or
or
jp
fsubs
xor
or
dec
stos
lahf
cmp
cmp
and
aam
daa
call
mov
sbb
nop
xchg
push
pusha
dec
pushf
fstps
icebp
nop
jle
fwait
add
iret
lahf
add
call
xchg
pop
rcr
or
outsb
dec
sbb
clc
cmovae
lret
push
ror
add
insb
mov
ss
scas
sbb
mov
pop
movsb
rol
mov
mov
or
loopne
lea
inc
incb
lods
inc
gs
sub
and
shll
arpl
cmp
or
mov
std
push
dec
cmp
test
es
cli
pop
xor
mov
gs
mov
rcrl
fnstcw
push
test
outsb
fstpl
lods
push
inc
fdivs
repnz
pusha
jg
or
dec
int
add
das
lea
mov
inc
cmp
inc
inc
enter
pop
fidivl
mov
addl
testl
jne
int
iret
dec
repnz
das
jae
mov
fsubr
add
xor
cmp
imul
and
xor
add
pop
nop
cwtl
outsl
and
adc
xorb
or
cmp
test
mov
xchg
and
sbb
test
add
push
stos
push
pop
stc
cmpb
dec
pop
jmp
sbb
mov
push
leave
arpl
or
out
and
sbb
idivl
daa
loop
sub
adc
cmp
cltd
sbb
fnstsw
je
jecxz
and
ja
jp
mov
dec
rcrb
cltd
fdivs
mov
fistl
push
mov
es
jmp
jmp
iret
lcall
pop
test
push
clc
push
dec
out
sbbl
xorl
repnz
shrb
popa
sbb
pop
or
adc
cmpb
push
push
add
ss
inc
or
push
dec
xor
sbb
or
xor
sub
add
xabort
lods
lds
jp
in
out
xor
mov
stc
lret
and
popf
int3
dec
popf
in
add
jnp
fwait
add
mov
adc
jge
int3
push
ljmp
mov
scas
sbb
jnp
jge
mov
pop
xor
aad
mov
sbbb
dec
xor
nop
pop
cmp
mov
pop
sbbb
aam
sahf
xchg
adc
xor
cmpsb
outsb
inc
call
pushf
shrl
clc
and
jbe
lods
cmp
or
and
mov
sbbl
lcall
sub
add
out
mov
push
xchg
pop
push
mov
mov
sbb
gs
and
mov
fmull
out
or
mov
inc
jle
mov
push
xor
fcoms
test
adc
sub
pop
xchg
fsubrl
aaa
mov
and
adc
xor
and
pop
cmp
popa
mov
xor
push
pop
fsubl
into
xchg
pop
sbb
jnp
shll
js
pushf
sub
mov
mov
mov
push
adc
sbb
in
daa
add
jo
xorb
popf
mov
or
pushf
cmpsl
jge
out
inc
mov
push
add
mov
pop
push
lock
divl
mov
cmovle
std
xchg
pushf
aaa
stc
lds
notl
mov
cwtl
icebp
inc
push
loop
ret
or
jne
sahf
adc
cwtl
add
and
es
xor
push
cmp
es
jne
pop
ljmp
ret
jns
sar
lock
dec
mov
mul
out
xor
faddl
inc
aaa
rcll
repz
fucomp
sub
jmp
cmp
mov
aad
pop
pop
mov
mov
lahf
fldcw
call
test
sbb
repz
ja
loope
sub
rorl
aaa
pop
lock
cld
inc
frstor
rclb
add
lret
or
mov
pop
dec
adc
ds
movsl
lahf
imul
insb
scas
jns
mov
adc
fldl
scas
sahf
mov
xchg
mov
mov
push
cmp
cmp
inc
add
int3
addb
and
add
enter
and
stos
test
jmp
jne
adc
and
in
rorl
clc
xor
adc
adc
decl
movsl
pop
xchg
mov
or
and
jae
and
dec
xchg
xor
sbbb
cmp
xor
jnp
shll
push
clc
aam
sti
cmp
mov
mov
jns
insb
hlt
stos
dec
push
movsl
xchg
inc
test
mov
mov
hlt
jecxz
popf
sbb
jne
fisubl
inc
and
push
dec
lock
jmp
mov
xor
sub
mov
xchg
sub
nop
dec
imull
pop
jbe
add
movsb
mov
xor
aam
sbb
adc
sbb
sti
test
movsl
and
scas
dec
sbb
jle
or
xor
pop
pop
push
loope
imul
push
or
or
idiv
insb
jb
insl
out
sbb
shld
fwait
xchg
mov
inc
push
ficoms
mov
pop
xchg
and
imul
pop
js
fsts
pop
aas
out
jg
sbb
sbb
out
cltd
mov
fwait
test
outsl
xor
int3
aas
movsl
faddl
lret
ret
mov
or
pop
cmp
mov
js
jge
add
scas
sub
push
dec
mov
int3
in
mov
std
shlb
pusha
sbb
je
cmp
imul
bound
and
mov
pop
iret
xlat
insb
loope
js
mov
push
dec
insb
daa
dec
stos
cli
adc
sub
inc
cmp
pushf
icebp
push
fnstcw
xchg
popa
add
ret
aad
dec
int3
scas
adc
inc
into
xchg
add
out
test
lcall
jns
mov
push
pop
addb
std
ljmp
jge
and
add
add
xlat
sub
scas
pop
mov
pop
jnp
push
stos
xchg
inc
fnsave
and
mov
ret
aaa
adc
popf
fstl
out
mov
inc
inc
push
lds
add
jecxz
xchg
xchg
push
nop
cmpsl
les
pcmpgtb
fstpt
test
gs
mov
sti
cmc
dec
imul
ss
xor
out
std
hlt
push
sbb
xor
sbb
sub
or
sti
mov
addb
fwait
gs
outsl
mov
decl
sbb
jl
sbb
mov
jle
mov
aas
xchg
andl
mov
cltd
adc
mov
repz
push
xchg
xchg
jnp
cltd
or
es
jecxz
dec
adc
nop
dec
loop
inc
mov
push
inc
inc
adc
mov
loopne
cmp
mov
and
jae
pop
sub
and
pop
cli
push
mov
orl
xor
lcall
sub
fwait
jne
adc
xchg
adc
dec
fildll
repz
add
insl
sbb
adc
xorb
mov
ljmp
xchg
xor
iret
fdivrs
dec
push
and
insl
addr16
or
mov
xchg
int3
dec
mov
repz
sti
push
jge
add
pop
lret
in
shrb
or
pop
xchg
roll
cli
pop
dec
stos
xor
call
push
outsb
cmpsb
add
pushf
imul
mov
xchg
mov
sti
out
mov
leave
hlt
mov
add
cmp
inc
cld
fstps
mov
or
sub
pushf
push
inc
ret
jno
fucomp
je
mov
in
pop
add
jb
push
mov
incl
arpl
in
loopne
xchg
in
adc
cs
cli
xchg
mov
aaa
or
pusha
adc
popf
xor
inc
push
iret
mov
repz
out
jl
hlt
and
fistl
cmp
fwait
xlat
lea
xchg
and
push
in
aam
stos
push
dec
shr
jecxz
out
inc
pop
les
add
jae
loope
mov
xchg
inc
pop
xchg
jge
cmc
insb
repnz
imul
inc
scas
push
pop
bound
jns
rclb
imul
mov
call
mov
ja
or
in
and
push
lds
ror
ds
and
movsb
xchg
sbb
test
lahf
mov
ljmp
cmp
imul
xlat
sub
cmp
push
xor
lods
ds
rcll
sub
dec
dec
shlb
push
mul
adc
int3
in
pusha
xor
cmp
xor
scas
sub
sbb
sbb
mov
jle
mov
popf
mov
mov
fdivl
and
add
mov
add
xchg
pop
sbb
sub
imul
ja
mov
dec
aam
or
sbb
int
mov
push
imul
cli
add
inc
pop
jmp
fstps
xchg
lock
les
stos
xchg
inc
js
sar
inc
fs
sbb
or
mov
shll
test
adc
pop
or
inc
sub
push
in
fsubrl
scas
aaa
mov
pop
and
std
jmp
jno
cs
scas
xchg
dec
push
add
fnstcw
inc
or
testb
lahf
adc
adc
cmp
jae
in
push
mov
test
popa
jbe
pop
cmp
pop
and
cwtl
lods
and
pushw
lret
iret
scas
jns
mov
arpl
mov
mov
mov
or
mov
xchg
add
outsl
dec
add
in
cltd
inc
or
popa
adc
mov
adc
popf
xchg
fsubl
xchg
and
cs
test
adc
mov
mov
inc
testb
sub
add
in
ret
cmp
mov
inc
sub
imul
fucomp
cli
mov
icebp
add
sbb
shr
out
aam
divl
jg
cmpsl
push
cwtl
sbb
clc
int
sub
jb
lcall
pop
pop
xor
loope
mov
jbe
mov
imulb
sub
lea
iret
insl
push
rcrb
cwtl
sbb
loope
dec
movsl
adc
ret
push
xorb
add
xchg
popf
mov
xor
inc
cld
lret
cmp
adc
rolb
dec
cmpb
lahf
cmc
mov
jb
xchg
aas
test
dec
sahf
sbb
xor
adc
xor
mov
inc
movsl
ficoms
cwtl
stos
jmp
inc
in
sahf
cmp
or
jecxz
int3
enter
add
cmp
iret
lahf
stc
or
sub
dec
mov
xor
leave
decb
in
cmp
outsl
cmp
pop
adc
stc
mov
sbb
test
add
dec
mov
fcomps
add
das
and
fwait
mov
test
insl
shrl
dec
xlat
xchg
mov
fdiv
push
sub
les
popw
push
adc
push
sbb
fstpt
out
repnz
test
sahf
scas
icebp
stc
cmc
test
add
aad
inc
nop
rcll
stos
scas
aam
cmp
pushw
sbbb
movsb
imul
and
and
sub
movsl
dec
inc
dec
sbb
and
or
data16
sbb
xchg
lea
jg
out
cmp
xor
mov
lock
jge
push
jmp
in
xor
dec
in
fnstenv
mov
in
ret
in
sbb
sbb
jmp
sbb
into
sbb
cwtl
mov
sub
es
cmp
icebp
int3
dec
or
mov
sbb
adcl
xchg
inc
faddp
lods
aaa
or
sub
hlt
pop
popa
pusha
sub
mov
or
xor
call
subb
nop
pop
js
outsb
jnp
and
mov
mov
jbe
mov
stos
data16
mov
jo
dec
cwtl
fdivl
lods
and
inc
add
lods
outsb
cli
dec
pop
movsl
cld
arpl
lock
or
add
aas
subb
lcall
imul
stos
cld
imul
rclb
subl
sbb
ljmp
nop
je
mov
dec
pop
jnp
and
jmp
pushf
dec
lahf
pop
dec
popf
sub
xchg
ret
outsl
pop
int3
pop
rcr
hlt
sahf
xchg
or
sarb
pusha
sahf
xlat
cmp
jne
xor
mov
in
jns
or
data16
sub
or
pusha
imul
ret
mov
inc
inc
mov
int3
jg
aam
popa
mov
dec
leave
js
mov
jp
cmpsl
xchg
push
sbbb
hlt
xor
aam
xor
mov
and
push
sub
jp,pt
add
jp
out
enter
add
jnp
into
call
jb
ret
adc
mov
cmp
adc
ss
test
push
inc
aas
mov
xlat
sbb
xor
adc
lods
hlt
mov
iret
aaa
adc
push
mov
dec
std
hlt
in
mov
pop
xchg
test
test
aad
cli
push
movsl
lea
testb
mov
sbb
movsl
inc
rcll
pop
mov
into
jmp
adc
stc
call
inc
inc
push
fbstp
pusha
ja
inc
popf
pop
dec
or
stc
jp
insl
loop
jnp
sti
xchg
push
cltd
shlb
das
push
xor
jns
fwait
mov
push
mov
js
shll
xchg
shl
cmp
lret
push
add
imull
or
add
lret
mov
mov
mov
pop
sub
mov
push
add
adc
ljmp
mov
dec
lret
jg
dec
es
iret
mov
mov
je
repz
test
xchg
rcrb
jbe
or
rcrl
xchg
xchg
cld
adc
jle
cs
sbb
ja
pop
jnp,pt
dec
cwtl
jb
sbb
negl
mov
movsb
mov
cmp
or
pop
inc
adc
ficomps
into
xor
je
push
dec
cmp
js
int3
pop
mov
stc
cltd
sbb
cltd
iret
pop
lds
bnd
daa
pop
jmp
shl
inc
cmp
cmpsb
sahf
mov
call
xchg
xor
test
push
js
idivl
sbb
jp
mov
push
rorl
cvttps2pi
dec
xor
sub
fstpl
popa
and
mov
movsl
or
push
mov
adc
xor
inc
pushf
inc
ja
in
in
mov
or
fidivrl
xchg
enter
idivb
loope
cwtl
cmpsb
sbb
or
push
mov
ret
push
into
pushf
cmpsl
dec
fisttps
mov
loop
rcr
xor
pusha
jmp
stos
or
jnp
cmp
adc
sub
jg
cld
bswap
fs
insb
adc
mov
jge
gs
mov
cmp
movsb
test
jle
jecxz
xor
pop
fs
add
rcll
inc
xchg
xor
and
mov
daa
cmp
sub
std
ficoms
out
in
sarl
test
fidivrl
adc
mov
lahf
or
jp
dec
mov
mov
mov
push
out
ret
mov
loope
xchg
imull
or
inc
dec
pop
ja
and
fwait
ljmp
sub
adc
inc
xorb
das
inc
cmpsl
push
xchg
push
mov
mov
push
lea
cli
sbb
mov
js
fbld
add
lods
sar
lds
xor
pop
dec
adc
xchg
in
fdivl
scas
push
test
pop
roll
inc
xchg
cmpsl
orb
andl
shll
mov
add
xor
pop
test
repz
adc
insb
cld
adc
xor
lret
es
shrl
sub
push
adc
xor
push
movsl
sub
cmp
fmuls
data16
inc
fs
lock
in
movsl
xchg
repz
dec
inc
pop
adc
push
fistl
mov
loopne
pop
outsl
xor
or
psrlw
inc
push
cmp
pop
inc
lret
jbe
inc
push
sub
ljmp
or
test
lret
mov
ljmp
into
in
add
lods
shrl
mov
mov
aad
mov
mov
daa
mov
inc
xlat
addr16
xchg
jg,pt
sub
in
or
push
call
loope
aaa
mov
inc
mov
cli
push
xor
xchg
mov
push
sti
or
adc
jp
mov
adc
fdivl
dec
out
fwait
movsl
icebp
fdivrl
push
add
add
repz
sub
xchg
fcoms
inc
sub
adc
xor
inc
frndint
pop
jns
nop
lret
push
rorl
daa
dec
int3
and
loop
mov
and
test
sbb
jno
repz
and
or
rolb
sbb
mov
cwtl
jbe
inc
add
popa
adc
sbb
mov
dec
and
sbb
adc
xor
jne
cwtl
push
xchg
std
movsb
cs
sub
repnz
push
pop
mov
lods
nop
cs
inc
mov
mov
mov
enter
jae
into
mov
xor
add
fwait
sbb
jno
les
add
mov
rclb
bound
mov
cli
enter
add
mov
mov
loopne
popa
xchg
xchg
rcll
jae
xchg
fucomi
sbb
sub
sub
cmpsl
inc
rcl
sar
dec
mov
cmp
jb
adc
adc
lds
test
mov
dec
dec
data16
inc
inc
shrl
test
in
ret
daa
mov
push
gs
shlb
dec
mov
xor
cmpsl
cmp
mov
mov
shrb
inc
arpl
fwait
mov
push
mov
fwait
mov
mov
cmp
or
pop
int
scas
aas
mov
in
cmpsb
dec
push
mov
ds
add
shrl
popf
adc
test
jecxz
enter
fsubl
jge
push
cmp
inc
adc
lret
fwait
dec
pop
mov
sbb
jne
or
movsl
sti
lods
mov
nop
ljmp
xchg
adc
js
sub
shlb
inc
stos
iret
sub
xorb
xor
cmp
test
dec
es
pop
inc
mov
dec
out
nop
lock
stc
cmpsb
sub
push
loopne
in
imul
dec
mov
inc
jns
pushf
xchg
mov
adc
xchg
push
mov
dec
ficomps
stos
jns
sub
push
xchg
cmpsb
in
mov
mov
cmp
jb
or
jl
movsb
cmpsb
add
xchg
mov
imul
int3
rol
pop
inc
das
xor
in
mov
mov
ja
shlb
pop
mov
fdivrp
pop
pusha
push
out
jae
shrb
sbb
cli
das
test
xchg
test
mov
and
popa
sbb
bound
adcb
and
les
xor
jl
sbb
adc
test
adc
fistl
and
loopne
loop
add
xlat
test
sub
movsb
imul
testl
movsb
sub
out
lods
jns
fists
push
test
mov
test
out
jmp
loop
and
and
jle
aas
inc
mov
lcall
test
xchg
mov
push
jp
notl
inc
sbb
cmp
cs
mov
in
cltd
cmp
gs
ds
sub
mov
sbb
mov
mov
sahf
leave
icebp
pop
jne
cmpsl
leave
mov
pop
or
xchg
repnz
filds
and
or
sbb
jno
sub
bound
sbb
mov
sub
jp
std
das
gs
inc
jae
fwait
sbb
inc
inc
lcall
loope
test
inc
dec
data16
jae
shrb
pusha
stos
jno
sub
ss
xchg
out
jnp
out
jl
jae
test
xchg
mov
dec
sbb
test
cmp
fdivs
inc
scas
sub
clc
sbb
iret
ret
pop
push
fisttpl
mov
shl
es
andl
pop
andb
mov
std
push
pop
lods
test
dec
lret
notl
aam
into
cwtl
xchg
jle
nop
xchg
push
insl
jno
or
ret
lods
repz
pop
sub
fcmovnb
mov
pusha
xchg
mov
jmp
sub
insl
shll
pusha
sbb
lds
mov
cwtl
loop
nop
mov
imul
jge
popf
sti
xchg
mov
add
jno
mov
mov
or
stc
out
orb
push
mov
hlt
enter
movsl
cmp
jb
in
jnp
ljmp
sub
sbb
movsb
inc
lcall
jle
xchg
push
enter
xchg
cs
scas
out
cmp
adcb
xchg
bound
jp
fdivl
mov
jle
rcr
pop
popa
mov
loope
daa
in
or
ljmp
insb
push
mov
fwait
push
sub
cs
nop
popf
or
adc
jno
outsl
enter
sub
sub
decl
pop
sub
out
or
icebp
jp
fnstcw
cld
cli
lcall
inc
aad
repz
cmpsl
inc
mov
mov
fst
mov
mov
mov
lret
incb
or
repnz
pop
in
pop
test
lods
lret
xlat
and
ss
push
lds
xchg
inc
flds
xlat
push
mov
fsubs
jns
shrl
ljmp
hlt
mov
clc
xchg
ret
lret
repnz
test
fwait
adc
add
mov
stc
inc
inc
fsubrl
inc
les
fnstcw
xor
daa
dec
cmp
adc
daa
xor
or
add
mov
fsubl
jnp
sti
stos
xchg
inc
pop
andb
sbb
xor
add
fidivrs
cmp
test
adc
sbb
xchg
lea
and
popf
popa
aas
cltd
stc
jp
iret
lods
jp
popf
push
mov
and
inc
add
mov
sbb
lods
fisubl
ja
nop
push
lds
mov
lock
jnp
scas
xor
sbb
jge
cli
fcomi
stos
add
jns
jecxz
push
cmc
lret
cwtl
stos
icebp
js
dec
push
sbb
out
or
outsb
es
mov
test
fiaddl
imul
leave
mov
inc
lea
sub
fbstp
push
aaa
sbb
repz
stos
push
je
push
push
stos
xor
jecxz
xchg
cmp
sbbb
pop
sbb
hlt
adc
aas
jbe
adcb
arpl
ja
ret
in
adc
lock
jecxz
or
lcall
into
js
es
arpl
push
hlt
push
push
push
push
jmp
and
pop
loope
repz
cmp
pop
sub
icebp
sub
and
popa
pop
xor
push
mov
jge
cmp
aas
add
enter
fcmove
xchg
mov
mov
xor
fisttpl
std
adc
mov
es
das
out
pop
push
repz
jmp
or
pop
push
fwait
pop
xchg
cmpb
mov
mov
outsl
out
sbb
mov
fucompp
mov
pop
into
pop
scas
fwait
mov
addl
adc
mov
je
decl
ljmp
loopne
lods
push
mov
adc
sahf
out
jb
rclb
dec
mov
xchg
bswap
shll
jle
cwtl
jle
or
lret
add
cld
mov
repz
adc
shrb
ret
push
sub
test
pavgw
jp
inc
pop
mov
scas
mov
xchg
sbb
in
xor
ds
insb
bound
int3
sbb
pop
into
sarl
frstor
adc
pop
divb
sub
inc
ljmp
pop
aas
in
add
sub
and
aad
and
add
xchg
push
es
pop
imul
les
test
ret
push
jo
pop
mov
icebp
cld
cmp
inc
pushf
adc
add
outsl
cmp
aam
add
sti
mov
outsb
nop
adc
les
dec
cmp
mov
sbb
pop
sub
push
in
adc
sbb
ds
sub
shll
inc
fmull
out
xor
loop
data16
ret
add
rolb
or
imul
arpl
jb
ss
imulb
stos
aad
test
inc
pop
cmp
movsb
scas
lock
fwait
xor
out
rcll
sbb
dec
sub
bound
es
sar
jae
sub
and
cmpsl
adc
out
out
add
fstp
xlat
or
push
sahf
stos
cwtl
push
dec
insb
lock
push
push
popa
pop
mov
mov
leave
jno
mov
pop
pusha
icebp
cwtl
mov
sahf
rcr
filds
ror
jne
dec
lahf
lock
push
push
insb
mov
ss
mov
cwtl
pop
ror
mov
mov
sbb
and
xchg
stc
mov
imul
sub
ds
cli
or
out
and
xchg
jmp
stc
fisttpl
cmc
cmp
fsubrl
in
push
lock
nop
jb
sahf
cmp
or
adcb
mov
outsl
repz
xchg
adc
add
dec
fcomps
in
js
push
jns
cli
fcmovnu
or
arpl
loopne
pop
cmp
sub
mov
inc
or
xorb
push
jp
add
stos
inc
loopne
xchg
cmp
cmp
push
sbb
js
out
dec
in
popl
push
jmp
dec
sub
mov
mov
mov
xchg
popf
push
push
mov
test
mov
dec
push
sub
insb
insl
in
cmpsl
pop
mov
clc
pop
arpl
data16
lds
test
dec
pop
lock
pop
add
shrb
mov
pop
rclb
add
dec
in
test
cs
in
iret
cwtl
in
jbe
stos
push
std
push
xchg
jp
adc
mov
das
loope
lahf
pop
mov
insb
rclb
shl
mov
add
ret
push
push
inc
fsubl
add
and
sbb
xor
lcall
insl
cmpl
add
test
movb
call
shll
xchg
or
imul
sahf
pop
push
sti
lahf
mov
imul
lcall
fisttps
and
test
pop
adc
jg
cld
stos
inc
adc
div
pop
pop
loop
xchg
scas
test
mov
call
sub
sahf
shlb
test
addr16
inc
mov
dec
xchg
out
insb
je
ds
cld
test
xchg
jmp
mov
fsts
dec
inc
clc
pop
aad
enter
cmp
enter
int
mov
lea
lds
mov
outsb
dec
or
sub
sbb
divb
movsb
mov
cld
iret
jb
rol
and
push
inc
push
gs
pop
ja
je
out
sub
cmp
inc
test
xorb
bnd
mov
stos
into
fnsave
popa
out
adc
mov
cmp
outsb
xor
add
js
push
or
jecxz
xchg
jae
scas
inc
xchg
inc
and
cmpsb
dec
test
add
dec
and
push
popa
push
daa
out
mov
add
jge
gs
cmp
mov
lcall
test
mov
xchg
popa
shll
dec
insb
lahf
js
repnz
push
lods
pop
sub
push
or
mov
insl
sbb
testl
mov
sti
dec
cmc
jb
mov
pop
dec
inc
loop
jb
xchg
mov
ljmp
lret
dec
inc
mov
enter
icebp
daa
pop
sbb
or
or
adc
sbb
lret
mov
cs
adc
sbb
arpl
hlt
fsubs
sbb
clc
mov
mov
pusha
scas
add
mov
lahf
xchg
mov
shr
inc
dec
and
sbb
pop
adc
mov
imul
packssdw
lret
movsl
lahf
mov
test
ret
pop
or
push
mov
jge
ficompl
inc
mov
xor
in
fbstp
fstl
xchg
icebp
repnz
ss
jno
inc
movsl
pop
pop
xor
mov
sub
xor
imulb
je
aas
pop
inc
movsb
movsb
lcall
fildll
jl
rol
or
xchg
pop
ret
cmc
lret
ror
pop
outsb
and
xor
mov
aam
lds
add
ret
cmp
mov
mov
inc
mov
xor
pop
call
pop
jns
sub
icebp
btc
or
xlat
push
sbb
cmpsl
ds
push
mov
adc
movsl
clc
scas
dec
std
push
das
xchg
dec
and
mov
push
dec
xchg
fsubrs
xor
dec
sub
or
ja
jg
cmpsl
jae
sub
mov
imul
jge
add
xchg
fs
pop
mov
repz
sti
xchg
xor
roll
fldl
out
pop
lret
movsl
loopne
pop
neg
pop
mov
bound
push
sbb
xor
mov
insb
adc
hlt
lods
cmpsb
call
ja
nop
mov
jnp
aas
add
sub
nop
ficomps
mov
adc
shl
decb
lret
lret
mov
cvtps2pd
paddw
ja
test
add
dec
cmp
sti
jb
out
ds
fsubrl
hlt
inc
xor
xor
cmp
cmpsb
imul
hlt
test
data16
bound
stos
sub
fidivs
xchg
mov
mov
fbld
jbe
into
js
out
shlb
shrb
cmp
test
mov
fildll
jae
mul
sarb
cmpsl
rcl
mov
xchg
imul
sub
std
xchg
in
imul
ret
mov
cmc
icebp
gs
es
jge
mov
adc
ret
stc
in
bound
mov
lods
imul
jmp
mov
pushf
pop
cwtl
xlat
sub
sub
lret
push
stos
rcll
pop
mov
mov
mov
pop
push
sbb
addl
jg
addr16
rcrl
fildl
fcmovnu
in
sbb
dec
aad
lcall
addr16
ret
adc
loope
xor
mov
adc
pop
fsubrs
xchg
hlt
int
out
sub
ror
outsl
or
and
mov
mov
mov
jl
and
mov
div
inc
ja
mov
mov
inc
sarl
mov
mov
xchg
sub
xchg
imul
jo
push
fisubrl
sbb
dec
test
push
pop
jno
lret
popa
ret
push
lahf
push
ss
jmp
ffreep
lret
xorl
decl
mov
xchg
add
add
push
xor
paddsw
push
daa
jne
mov
cmp
or
hlt
aaa
adc
adc
pop
out
sbb
jne
xchg
jge
data16
mov
in
mov
add
xor
call
dec
sti
pop
xchg
dec
in
cwtl
int3
mov
push
mov
std
dec
push
push
insb
fnsave
pop
jns
ds
push
inc
xor
and
mov
fsubrs
push
out
aam
inc
adc
cli
jnp
xchg
inc
aaa
pop
insl
pop
pop
dec
pushf
sub
inc
movsl
jle
push
mov
aaa
push
repnz
jns
cmp
xchg
adc
popa
push
outsb
in
xchg
add
pop
jp
pop
fstps
push
or
adc
mov
test
hlt
mov
and
iret
mov
pop
mov
add
jg
lea
shll
mov
mov
sbb
scas
repnz
popf
inc
xor
icebp
xor
mov
inc
add
mov
loopne
mov
inc
scas
adc
pop
es
dec
add
test
mov
ja
dec
enter
dec
dec
jns
push
push
pusha
rol
cld
out
pop
cmp
mov
add
cmc
mov
inc
xorl
mov
xchg
mov
mov
popa
add
sub
xor
cmp
push
ja
push
push
ss
icebp
rcll
mov
pop
mov
out
ret
sti
push
fiadds
mov
scas
xor
push
xchg
test
jbe
inc
sbbl
repz
and
cwtl
lock
outsl
or
pop
sbb
or
and
pop
aad
into
sti
adc
fs
sarl
and
mov
xor
mov
mov
repz
or
pop
clc
loope
mov
mov
mov
inc
sbb
shrl
xor
or
adc
outsl
and
jle
sbb
out
test
adc
sbb
pop
mov
xor
pusha
or
hlt
xor
xchg
cwtl
sbb
mov
mov
xor
cmp
inc
popf
jae
mov
shll
mov
in
std
loopne
push
ja
add
dec
les
jb
pop
dec
pushf
call
data16
mov
into
and
shl
push
hlt
in
rorb
lret
mov
push
rcl
fmuls
inc
sbb
mov
xor
adc
movsl
sub
mov
cmc
add
enter
mov
pop
ja
inc
xchg
sbb
inc
mov
rol
lcall
pop
mov
fisubrl
push
jb
jae
push
push
sbb
push
mov
cmp
mov
adc
inc
outsl
outsl
add
jnp
js
test
cmpsl
addr16
jecxz
inc
mov
dec
mov
mov
lds
loope
in
cmp
mov
mov
jae
stc
adc
dec
dec
xchg
cli
stos
xor
sub
cltd
ret
mov
sbb
pushf
add
cmp
xchg
pop
jmp
adc
mov
rcrl
in
sbb
nop
cmp
mov
mov
pop
jmp
xchg
adc
push
clc
sbb
das
cmp
inc
push
hlt
dec
push
dec
inc
jbe
fildl
stos
mov
add
movsb
sbb
sub
xchg
sub
pop
in
test
out
and
lcall
aas
lods
and
mov
sbb
push
xor
add
dec
inc
dec
clc
jge
inc
je
ror
sub
jno
loopne
bound
push
sti
mov
adc
mov
aaa
dec
imul
sbb
push
xlat
pop
mov
push
and
pop
mov
cmpsb
xchg
out
sti
pop
mov
push
xorl
mov
sbb
inc
xchg
inc
ds
push
cld
ret
cmp
aaa
pop
ret
add
jle
pop
jns
mov
call
and
std
icebp
or
in
add
mov
sub
pusha
push
mov
fstps
or
pop
and
dec
add
cli
mov
push
test
in
inc
fucom
inc
pop
xor
popf
sbb
test
sbb
test
aaa
pop
pop
andl
jbe
add
jmp
nop
xchg
add
icebp
imul
cmc
sub
mov
xor
movsb
ss
insb
je
xor
push
xor
insl
ret
mov
fldt
dec
loop
lock
inc
xlat
add
cmp
out
mov
dec
adcl
into
test
jmp
mov
mov
and
pop
mov
push
adc
add
hlt
sub
in
loopne
iret
div
aas
ja
xor
ret
popf
pusha
iret
shrb
dec
or
cmc
push
pusha
mov
int
rcrb
mov
ficompl
mov
loop
aaa
fsts
inc
out
mov
jmp
sub
stos
push
cmpsl
xchg
xlat
ljmp
inc
movsb
xchg
push
adc
je
push
jp
sahf
mov
aas
rcll
and
push
mov
push
pop
adc
xchg
outsb
nop
insb
outsl
pop
ja
sub
shr
cwtl
pop
hlt
stc
es
cmpsb
lods
jecxz
mov
cmc
clc
xorl
mov
shlb
in
sbb
addb
sbb
or
in
push
outsl
pop
ss
mov
mov
or
outsb
adc
pusha
sbb
cs
xor
adc
popa
imul
xchg
loope
push
inc
add
test
or
jg
rcll
mov
cmpsb
add
xchg
andl
push
idivb
inc
dec
pop
xor
sub
fisubrs
lret
movsl
inc
out
xchg
dec
and
and
lock
sbb
jo
mov
sahf
jns
rorb
cli
dec
add
jns
mov
add
popa
imul
mov
rcll
ja
imul
js
dec
out
mov
push
dec
lea
mov
add
out
mov
mov
or
pushf
cli
rcll
mov
imul
loope
mov
loope
adc
xor
push
ljmp
sub
adc
add
leave
jne
pop
out
inc
xchg
loopne
ljmp
mov
xor
cmpb
push
adc
fcomps
push
add
pop
bound
in
lret
clc
iret
mov
or
imul
inc
adcb
jbe
sarb
mov
sbb
mov
in
adc
xor
add
mov
out
inc
popf
adc
adc
fs
push
les
and
dec
add
cltd
sub
cmp
sbb
mov
ja
scas
out
sahf
shrl
sub
push
addr16
lret
outsb
jg
inc
xor
xor
popa
adc
cmp
add
cmp
mov
mov
dec
mov
mov
out
ja
jle
lcall
insl
ret
dec
lahf
incl
cwtl
pop
lods
stc
dec
aad
cmpsl
arpl
in
das
pop
into
fbld
cld
hlt
or
cmp
into
xor
mov
mov
ss
popf
jecxz
cwtl
lods
push
jle
or
aas
sbb
and
dec
lcall
and
lret
sbb
sti
fs
fisttpll
xchg
ds
inc
inc
xor
movsb
mov
sbb
outsl
int
mov
pop
pop
pop
inc
pop
pushf
pop
out
loopne
xor
shlb
insl
jae
dec
int
imul
and
stos
and
inc
stos
xchg
mov
in
lcall
jge
fadds
shlb
push
das
jg
jl
pop
fidivl
or
xor
aam
xchg
mov
sbb
xchg
stos
push
popa
adc
aam
aad
push
xlat
scas
xor
pop
insb
mov
dec
psubb
inc
es
mov
loope
bound
lcall
iret
shll
ja
xor
add
hlt
es
jecxz
inc
adc
sahf
or
push
jbe
lahf
sbb
push
inc
xchg
add
pop
movsb
add
cmp
fstl
mov
mov
mov
rep
dec
sub
inc
inc
or
and
jb
mov
xchg
mov
and
lahf
jecxz
mov
mov
jb
fwait
push
adc
psubq
sub
or
mov
into
add
addr16
push
mov
push
cwtl
arpl
jae
in
fbld
scas
daa
sub
call
xchg
inc
mov
out
dec
cmp
pop
dec
je
or
add
insl
ljmp
stc
or
xlat
mov
jns
and
sub
sbb
out
push
xchg
pop
add
je
rcll
lahf
and
xor
aaa
loopne
dec
ds
inc
dec
cwtl
mov
cs
rol
dec
orl
sbb
aas
jno
lcall
push
pusha
push
flds
push
lods
mov
lret
lock
sbb
pop
mov
movl
jo
mov
insb
add
outsb
call
pop
bnd
jbe
xchg
mov
aaa
pop
sahf
cmp
sub
pop
fsubrp
pop
xlat
aad
xchg
xor
mov
xor
lcall
cmc
mov
int3
stos
out
int3
sub
and
push
pusha
rorl
iret
cmpsb
add
scas
iret
add
scas
pop
lea
and
subb
add
cmpsl
add
dec
jbe
ficoms
adc
or
pop
mov
adc
std
push
lcall
jp
shll
mov
add
sti
lret
insb
sub
or
add
loopne
xchg
xchg
loop
cmpsl
pop
and
jno
push
pop
shl
lods
gs
xchg
hlt
jg
std
inc
into
jmp
mov
add
xchg
popa
mov
in
xchg
xor
daa
sub
dec
mov
sti
fisubl
sbb
xchg
adc
movsl
jbe
mov
in
fistl
push
inc
repnz
xchg
stos
notl
cmpsb
js
adc
rorl
mov
jle
stc
jmp
insl
sbb
adc
sub
pop
es
sbb
imul
xchg
fs
je
aad
inc
shlb
and
mov
pop
test
das
shrl
and
mov
dec
and
popf
cmpsl
mov
ret
mov
push
inc
ja
xor
aad
sbb
loop
adc
cmp
in
sbb
mov
cmp
sbb
mov
jb
inc
testb
arpl
push
xchg
movq
sbb
in
filds
mull
sbb
inc
adc
mov
jne
cmp
sbb
shr
scas
sbb
mov
dec
inc
add
jne
sub
cwtl
out
loop
mov
xchg
inc
xchg
ret
fiadds
pop
xor
mov
fldl
cltd
pop
clc
pop
mov
lret
in
into
jmp
sti
mov
xchg
data16
push
ja
push
rcr
lods
xchg
jl
fcomi
cmp
shrb
les
jecxz
mov
cmp
mov
dec
push
push
jns
lcall
add
loopne
mov
jl
shlb
xchg
adc
orb
mov
arpl
mov
xor
cmp
mov
jne
mov
and
xchg
stos
cmc
out
jo
mov
stos
lock
pop
push
xchg
inc
xor
jle
test
push
aas
cmp
hlt
jae
pop
movsb
mov
xchg
jl
or
cmc
sub
sub
add
jge
insl
movsb
stos
sub
pop
hlt
push
jle
lret
pushf
dec
fwait
lahf
jg
add
add
lcall
adc
sbb
nop
push
inc
cmp
incb
jno
mov
sbb
lret
cmp
inc
pop
repnz
insb
and
loope
push
mov
add
add
cmp
mov
lods
xor
or
inc
movsl
int3
xchg
pusha
pop
test
in
dec
xchg
and
dec
mulb
cld
les
pop
adc
cmc
movsl
sbb
rcrl
mov
add
sub
inc
fimuls
pop
mov
addr16
loope
mov
shll
call
sub
imul
fsubrl
stos
ret
int3
push
pushf
std
ja
jns
mov
push
dec
sbb
add
pop
lods
push
push
popa
push
jecxz
stos
xchg
sti
scas
jecxz
and
sahf
cmp
in
popf
cltd
pushf
pop
insl
out
lahf
ret
pop
mov
and
adc
push
bound
and
mov
push
inc
push
mov
or
cmpsb
xchg
test
nop
pushf
mov
rorb
pop
and
es
cmp
sbb
and
inc
pop
pushf
test
push
or
imul
mov
aad
lcall
popa
fldenv
mov
add
mov
stc
lock
mov
int3
adc
sub
xchg
in
sub
repnz
cmova
push
cli
add
sub
stos
push
add
ret
xchg
push
mov
insb
lcall
pop
int3
or
lcall
xchg
jae
popa
jmp
mov
fiadds
int3
rcl
mov
jp
aaa
ljmp
xor
or
or
addr16
adc
popa
cmc
mov
pop
shrl
jns
dec
jae
cmp
add
xchg
jbe
adc
lret
or
je
subb
scas
and
xor
fiaddl
rcll
sub
cmpsb
lret
out
jle
mov
pop
test
scas
inc
sbb
notl
adc
sub
test
add
mov
push
jge
bound
andl
sbb
jmp
push
sub
adc
add
lcall
lods
and
jb
xor
stos
nop
nop
mov
jne
push
mov
xor
test
lock
xor
in
sbb
push
sahf
xchg
sub
mov
fisttps
push
call
pop
mov
loop
jle
dec
mov
push
push
cltd
rorb
or
and
dec
les
adc
mov
inc
in
in
sub
mov
out
cmp
jge
xlat
mov
mov
pop
shll
xchg
call
adc
rorb
fucom
and
cmp
sti
es
inc
insl
sbb
jns
leave
mov
stos
fwait
ja
mov
js
test
lcall
sbb
data16
pop
sbb
adc
js
icebp
sbb
std
jl
loopne
outsl
inc
and
and
xor
movsl
lds
pop
lock
aam
rcll
clc
mov
icebp
loop
sbb
pushl
test
fistpl
iret
repz
pop
adc
xchg
out
loop
fnstsw
xchg
dec
outsl
not
repz
test
push
out
inc
int3
xor
jmp
and
js
test
mov
add
dec
jg
lret
iret
mov
cld
mov
loop
cld
inc
and
push
inc
shlb
mov
repnz
popa
inc
lea
pop
stos
push
push
les
dec
es
pusha
push
xchg
into
imul
mov
out
fcoml
xor
inc
scas
lret
ja
dec
sbbl
fcomp
aas
stc
pop
imul
xchg
mov
test
pop
pop
int
scas
cwtl
cmc
mov
mov
pop
nop
jns
cmpsb
push
mov
ljmp
dec
or
cmp
or
fnstsw
xchg
xor
ret
xchg
cmp
test
cmp
call
scas
jb
loopne
xchg
pop
xor
pusha
dec
cwtl
push
jl
rorl
scas
jle
cmp
add
jl
or
cmpsl
and
sbb
dec
cmp
xchg
or
pop
sub
and
jg
ss
push
mov
lods
in
push
inc
jecxz
mov
shr
xchg
sahf
mov
negb
mov
jbe
cwtl
mov
frstor
sbb
inc
lods
pusha
pop
sub
xchg
fildl
cmp
hlt
jge
add
and
inc
adc
or
sub
pop
lret
out
shrb
pop
pop
out
out
mov
movsb
mov
into
jg
adc
or
push
mov
and
test
std
mov
push
lret
dec
andl
imul
call
outsb
xor
sub
or
mov
cmp
movsb
xchg
pop
stos
stc
push
mov
and
mov
cld
das
aad
mov
outsl
xor
mov
mov
mov
push
mov
popf
cwtl
int
fistps
sub
lds
add
lods
mov
sti
inc
or
inc
fimuls
lds
in
faddl
cltd
inc
movsl
ret
imul
or
into
std
mov
mov
xchg
or
mov
cltd
jae
data16
jge
orl
xlat
xchg
mov
sub
cmp
lret
mov
jb
add
push
ret
cld
loop
fs
push
inc
pushf
sub
in
fsub
sub
mov
daa
insl
xor
xchg
jle
stos
xchg
push
xchg
inc
cmp
lcall
daa
mov
mov
pop
lret
inc
cmp
lds
jg
mov
dec
and
jnp
adc
xor
push
jg
daa
lock
xor
jno,pt
dec
pop
cmc
push
inc
adc
jmp
fdivr
pusha
and
lods
mov
outsl
push
cmp
mov
fisttpll
js
or
xlat
popf
roll
xchg
sub
jl
sub
in
jg
insl
sub
dec
adc
les
enter
add
xorl
mov
in
xchg
outsb
fsqrt
outsb
scas
aas
pop
sbb
clc
mov
in
int3
pop
lea
mov
xchg
ja
dec
dec
sbb
aad
mov
fbld
push
lret
icebp
sbb
cltd
mov
ret
in
cmp
or
push
daa
ja
or
jle
xor
mov
dec
mov
lea
out
mov
cmp
pusha
jg
or
cld
addb
jge
mov
cmp
push
mov
push
inc
xchg
xchg
out
aaa
xchg
mov
pop
aad
mov
jle
addr16
fldenv
ljmp
sbb
in
xlat
xchg
repz
cli
cs
es
mov
cmp
add
and
call
xchg
sub
out
pop
outsl
sarb
xor
clc
repz
add
pop
and
mov
or
popa
jo
lret
jmp
cli
inc
mov
mov
fadds
mov
inc
mov
pop
mov
mov
lods
adc
out
stos
hlt
lahf
jo
or
daa
mov
int3
dec
add
push
test
aaa
int
or
push
sahf
int
mov
enter
std
inc
daa
jb
lock
lcall
loopne
xchg
dec
jp
inc
xchg
js
dec
into
mov
shll
jo
xchg
loopne
xchg
lret
dec
xchg
adc
adc
movsb
ds
xor
jl
sub
mov
lock
dec
xor
or
mov
xchg
dec
test
inc
lret
in
inc
push
push
addr16
cmpsb
shll
bound
pop
shlb
jb
mov
fs
movsb
sbb
testb
int3
cmp
inc
jl
dec
out
aaa
std
push
push
fnsave
pop
mov
mov
sbb
pop
xor
sti
pop
or
aaa
and
sbb
add
or
pop
subb
xchg
insl
inc
pusha
popa
adc
and
imul
xor
jae
enter
fwait
add
jnp
xchg
inc
repnz
ja
int3
lcall
adc
fmulp
aas
ljmp
lahf
xchg
into
pop
cmpsb
sti
in
adc
scas
dec
jne
sbb
and
enter
inc
and
out
push
pop
shrb
cmp
js
pand
mov
adc
mov
aam
lahf
add
mov
rcrl
cli
pop
cli
lret
sbb
test
mov
push
inc
sub
neg
pop
scas
pusha
adc
jns
xlat
xor
mov
bnd
dec
push
sub
and
mov
fld
fcmovne
jnp
cmp
and
ret
push
inc
ret
sbb
pop
pop
pop
nop
sub
xlat
sahf
je
cmp
fcomi
adc
xorl
mov
pop
loope
out
stos
lcall
int
adc
outsb
xchg
xlat
lds
popa
dec
sbb
mov
push
cmpsl
lods
je
xchg
stos
in
fmull
arpl
jecxz
es
sbb
dec
testl
add
jne
push
pop
or
jecxz
mov
sbb
daa
push
pop
mov
pop
mov
mov
inc
jmp
sbb
ss
jno
cmp
call
ljmp
mov
shrl
fcomps
dec
or
popw
and
out
leave
pop
push
sub
negb
jmp
es
leave
mull
lea
xchg
ret
movsl
cmp
sahf
nop
inc
pop
mov
sbb
mov
or
fbld
xchg
add
out
push
sbb
test
mov
push
pusha
mov
and
mov
adc
push
repnz
pop
xor
push
sbb
out
pushf
lea
pusha
cld
aam
dec
ljmp
add
sbb
or
or
mov
mov
sahf
call
push
in
movsl
adc
shrb
push
fs
fstl
or
outsb
dec
lcall
sbb
pushf
lock
out
jl
addr16
xor
mov
xchg
jnp
lock
jne
fldt
adc
movb
inc
jne
jbe
repnz
push
xchg
je
push
or
jecxz
mov
mov
inc
jmp
enter
div
pop
loope
add
xor
shlb
test
or
push
cltd
iret
fcmovu
sbb
xchg
fcoml
testb
ret
outsb
jae
dec
ds
cmc
xor
adc
jb
std
xchg
repnz
mov
adc
call
add
out
xchg
frstor
mov
int3
test
xor
mov
jns
hlt
mov
and
inc
cmc
push
into
jge
and
ret
cmp
andl
es
mov
mov
jmp
jo
ss
jl
xchg
loop
push
push
scas
push
cmpsb
xchg
pushf
stc
in
scas
cs
sub
mov
sbb
fisubrl
push
mov
xchg
xchg
insb
fcoml
push
dec
xchg
xchg
dec
gs
fcomps
movsb
ror
inc
enter
cmovne
rcll
scas
mov
mov
insb
xor
pop
mov
xchg
test
orl
add
or
movsb
fisttps
shrl
xchg
je
and
movsb
pop
push
inc
inc
aas
xor
pop
xor
imul
add
dec
adc
sbb
loope
pop
loop
call
xor
cli
jp
test
sahf
push
dec
fmuls
and
or
stos
cmpsl
cmp
or
sahf
mov
lret
push
addr16
cs
jl
pop
adc
adc
push
mov
pushf
xor
push
movsl
and
xchg
sub
xor
shr
xor
subb
int
leave
in
gs
test
mov
pop
xchg
pusha
inc
pop
gs
or
dec
pushf
fistps
or
or
mov
repnz
mov
loop
jg
leave
push
add
cmp
cwtl
xchg
les
sbb
pop
cmp
lods
mov
jecxz
sarl
inc
or
mov
repz
xchg
push
push
or
sbb
lock
adc
sbb
push
adc
stos
iret
ja
sub
and
cmp
sbb
cmp
aam
sahf
add
adc
xchg
mov
nop
in
xor
xchg
inc
mov
cmp
cs
add
outsl
iret
shll
push
inc
js
std
stos
fidivrs
pop
inc
inc
push
add
mov
push
xor
rcrb
sbb
out
pop
fwait
add
mov
stos
inc
jmp
pop
jmp
add
cmp
add
scas
push
scas
fdivrs
in
xor
dec
je
insb
mov
fdivs
repnz
fwait
mov
push
mov
call
sub
xchg
je
dec
cs
mov
push
leave
jge
xchg
sbb
out
xor
mov
or
popa
mov
jp
cmp
fldcw
pop
inc
leave
adcb
sarb
sub
stc
int3
push
icebp
scas
xchg
out
or
scas
sbb
movsl
pushf
ss
jecxz,pt
nop
or
leave
js
and
addr16
call
aaa
jmp
jno
mov
mov
andl
mov
mov
xchg
sbb
rcll
or
cmp
sbb
xchg
push
in
mov
sub
sbb
movsb
test
in
and
push
push
mov
xchg
insb
push
inc
push
aam
fisttps
dec
or
mov
pushf
outsl
xchg
xchg
lcall
sti
in
mov
lahf
test
sbb
and
or
lock
push
push
in
out
lret
aam
lcall
dec
pop
ljmp
adc
mov
push
call
shrb
sbbl
pusha
out
push
xchg
psubw
flds
sub
outsb
leave
mov
mov
stc
arpl
and
pop
mov
ret
jno
bound
lret
xor
lret
xlat
inc
or
inc
out
pusha
scas
jno
pop
outsb
xchg
xor
adc
inc
push
pop
mov
push
pop
xor
sub
pop
addr16
sti
mov
popa
mov
movsl
cmpsl
rolb
scas
lret
push
call
sub
lahf
push
mov
je
nop
adc
push
lcall
cltd
pop
ret
push
int3
pusha
push
mov
lds
cld
test
xor
loopne
pop
ret
and
mov
cmpsl
inc
les
push
mov
add
xor
dec
packssdw
adc
cmpb
xor
xchg
stos
dec
aaa
mov
pusha
in
and
cmp
jg
roll
scas
xchg
out
mov
sbb
push
enter
outsb
stos
push
addl
js
or
cs
mov
scas
mov
popa
dec
sbb
das
sub
testl
jnp
icebp
leave
fisttpl
fs
mov
inc
mov
dec
adc
call
imul
pushf
fwait
lea
hlt
subl
add
pop
aam
fcmovne
jno
subl
push
pop
mov
pop
sbb
movsl
and
mov
push
stos
notb
pop
or
dec
mov
mov
mov
cmpsl
jmp
jg
inc
inc
clc
push
mov
aas
sub
push
inc
jbe
dec
cmp
insl
popa
cmp
xchg
and
subb
shll
movsl
inc
dec
outsb
pushf
add
pusha
cmp
mov
inc
adc
loopne
insl
popa
or
dec
mov
pop
push
push
lretw
loopne
jno
mov
idivl
mov
shll
or
push
lea
fildll
lods
mull
xchg
adc
fwait
mov
out
mov
into
pop
mov
loop
rcll
stos
out
push
into
fiadds
push
cs
xor
xchg
adc
push
fsubrs
out
shll
scas
flds
xor
lods
test
mov
cmp
addr16
lea
filds
xor
int3
cltd
xchg
outsb
bound
mov
test
in
sub
jecxz
movsb
xor
movsl
hlt
aaa
add
dec
jnp
leave
enter
mov
sbb
cli
frstor
js
imul
jns
push
mov
dec
pxor
push
cmp
fistpl
mov
std
pop
sbb
outsl
fs
mov
cwtl
sub
inc
and
scas
xchg
das
adc
loopne
inc
and
js
pop
leave
xor
cmp
pop
stc
mov
mov
cmp
jnp
or
call
push
in
inc
cmc
aaa
hlt
std
push
sub
jecxz
push
call
dec
arpl
loop
out
fsubrs
loopne
xorb
sahf
out
push
cltd
in
push
cwtl
aaa
jl
jae
xchg
js
in
je
push
inc
jne
test
arpl
pop
dec
enter
cmc
out
and
mov
enter
jnp
inc
or
mov
in
mov
cmpsb
adc
lahf
inc
mov
call
jo
test
xorl
gs
or
out
xchg
xlat
cmp
jg
jmp
mov
inc
notl
lcall
popa
cmp
mov
jae
push
outsb
loopne
stos
mov
enter
mov
scas
test
aas
pop
sub
adc
and
stc
iret
mov
mov
repz
mov
ss
or
sub
bnd
push
iret
test
fadd
push
push
cmpb
fwait
test
mov
jnp
test
movsl
pop
mov
push
outsb
adc
cld
mov
xor
jp
or
push
pop
jl
lret
incl
int3
aam
scas
jbe
xchg
or
dec
sbb
mov
insb
int3
mov
push
mov
jbe
fldcw
xchg
or
adc
jo
int3
push
insb
rcll
mov
xlat
mov
mov
je
int3
ljmp
roll
or
mov
loop
pop
out
loope
jl
iret
shrl
xchg
pop
stos
cmp
push
idivb
dec
sub
pop
pop
repz
loope
in
das
dec
lahf
xchg
pop
mov
mulb
subb
adc
mov
sbb
cltd
imul
inc
ret
test
mov
sbb
lea
in
cmp
popa
jmp
iret
jne
and
xor
js
or
cld
stos
ss
adc
leave
dec
clc
sbb
inc
fwait
jl
pushf
xchg
dec
hlt
sub
mov
or
jg
dec
inc
dec
inc
es
hlt
inc
jecxz
add
lock
push
inc
outsb
push
aaa
cmpsb
daa
das
divl
js
mov
mov
bound
lret
mov
andl
js
xor
sub
test
pop
mov
xor
cmp
push
push
dec
inc
fwait
sbb
out
mov
cli
out
imul
xlat
xchg
fdiv
or
adc
ret
call
jb
push
fstl
ror
push
test
cmc
rcrl
jmp
fwait
daa
mov
rcrl
lods
mov
dec
mov
pop
fiaddl
adc
xchg
fimuls
xchg
or
fwait
aas
mov
dec
in
mov
xchg
call
pusha
lock
mov
into
popf
jb
xchg
push
push
lds
mov
std
lcall
inc
movb
mov
pop
inc
bound
stos
add
aam
out
daa
mov
or
fimuls
xchg
rcl
sbb
xor
and
adcl
out
pop
cwtl
in
sti
cmp
scas
out
call
movsb
test
jns
fs
inc
xor
icebp
sahf
jne
jp
sbbb
pop
popf
out
insl
cmp
imul
lea
data16
dec
and
ss
cmp
lahf
dec
jmp
leave
fs
jno
out
outsl
loopne
and
in
in
jae
aas
sbb
stos
push
in
popf
adc
mov
fcomps
mov
mov
js
lret
jp
ljmp
pop
in
sahf
bound
popf
ja
and
int3
xchg
mov
ss
repz
jg
loopne
mov
lahf
fwait
pushf
lea
out
pop
fwait
pop
xor
and
mov
enter
xchg
popf
repz
push
or
xor
jo
fs
test
rolb
out
nop
insl
out
jp
test
mov
mov
hlt
push
leave
fmulp
adc
xor
jo,pn
pop
pop
inc
or
in
dec
jb
fmuls
xor
mov
sbbl
data16
jmp
mov
sbb
cwtl
cmc
sbb
inc
push
gs
sbb
jne
xchg
pop
ja
mov
mov
mov
fcomps
push
add
sub
pop
xchg
jne
dec
and
les
cmpsb
jp
mov
std
pop
iret
pop
movl
dec
sar
sbb
push
pop
loop
push
call
cmp
stc
add
add
lret
mov
xchg
jb
pushf
int3
cmp
cli
push
int3
ret
out
loopne
mov
sbb
stc
mov
fs
ret
loopne
xor
inc
lahf
cmp
xchg
jnp
inc
push
add
mov
push
pop
test
mov
add
cwtl
fucomi
add
aaa
outsb
add
pop
nop
fisubrs
mov
stos
mov
sub
divl
adc
pop
jns
testl
jle
lret
cmpsl
lods
ja
sub
lahf
or
inc
daa
mov
clc
lcall
arpl
aas
fmul
pop
dec
fisubrl
lret
ljmp
cs
lahf
pop
std
pop
icebp
cmp
rorb
sbbb
inc
cmc
das
cmpsl
in
out
jl
or
adc
mov
mov
xor
mov
rolb
push
pop
or
fcmovu
adc
fmull
pop
mov
add
fadd
in
mov
clc
sbb
leave
pusha
stos
sub
cli
pop
scas
scas
aaa
iret
xor
fbstp
dec
testb
pop
push
test
jne
nop
xchg
inc
sbb
ret
loope
cwtl
or
cmp
and
or
sbbb
pushf
fstpt
dec
push
mov
mov
and
shll
insb
sahf
and
pop
aas
push
add
push
popf
sarb
push
adc
shrb
stos
in
push
in
sub
mov
xchg
cld
addr16
dec
add
cmp
inc
cwtl
push
mov
roll
mov
mov
repz
aam
xor
cld
sub
hlt
add
inc
or
fstps
adc
out
sub
in
stos
cmp
sahf
and
push
mov
je
add
push
cwtl
inc
stc
cs
push
and
imul
in
dec
lret
hlt
orl
adcb
sbb
cmp
add
fisttps
pop
insb
movsb
clc
neg
fistps
push
pop
jmp
pop
lar
pop
mov
fsubrp
pop
inc
lret
cwtl
imul
pop
addr16
mov
push
lahf
inc
xchg
mov
mov
stos
add
and
daa
imul
jle
lods
fld
cmp
data16
sub
push
sbb
jmp
sbb
dec
or
cmp
insb
cld
inc
jp
sub
pop
repz
idivl
push
mov
pop
imul
nop
lahf
mov
or
out
push
add
adc
ret
xchg
aam
ljmp
nop
xchg
or
iret
outsl
mov
push
jge
xchg
add
shll
addb
inc
adc
js
mov
push
mov
roll
xchg
pop
lcall
cmp
or
mov
mov
dec
push
in
hlt
sub
sub
rcr
push
clc
push
aaa
mov
pop
sub
pop
mov
pop
lret
dec
lods
int
push
xchg
data16
xchg
add
pop
in
pop
and
clc
in
in
pop
insb
insl
and
fcoml
push
jno
mov
pushf
mov
cltd
lds
mov
xor
insb
stc
jnp
mov
fcmovnbe
inc
je
cmp
or
cli
adc
nop
dec
test
movsl
movsb
cltd
and
fidivs
fldt
and
push
mov
fs
lods
pop
jge
push
push
sub
inc
cmp
seta
bound
pop
adc
xchg
cmpsl
ds
sahf
lcall
aaa
lock
jbe
adc
add
pop
aad
push
xlat
pop
aad
fistpll
std
mov
mov
jp
xor
dec
aaa
xchg
add
repnz
sbb
orl
arpl
mov
add
pop
mov
sahf
and
iret
mov
sub
into
xor
sarl
xchg
shl
mov
shlb
xchg
mov
xor
mov
repz
outsb
ja
lods
ds
ss
aam
jns
mov
and
cs
lcall
adc
push
dec
icebp
jmp
mov
pusha
push
and
xor
push
adc
sub
mov
dec
pop
call
aam
mov
push
or
and
mov
or
ficompl
sub
sub
or
xchg
xor
pop
pop
rolb
dec
fwait
pop
sbb
mov
mov
and
stos
lret
cmpb
mov
rol
inc
jle
stos
xlat
fmulp
lahf
push
sub
mov
lcall
pushf
das
popa
mov
pop
xlat
sti
mov
inc
cmpb
rol
jecxz
xor
stos
mov
push
mov
dec
loopne
cmc
add
push
mov
test
sti
sbb
aaa
jne
push
sarl
xchg
int3
xchg
stos
dec
cld
movsb
mov
dec
cs
mov
jle
push
sbb
shlb
fdivrs
xor
scas
fwait
loopne
loop
loope
or
lock
mov
cmp
cmp
or
shr
xchg
data16
fbld
inc
jmp
mov
xor
sarl
fsubrs
cwtl
and
adc
jle
je
int3
xor
xchg
loope
xor
shrl
xor
push
mov
pop
fisttpll
sub
jbe
lret
aam
stc
mov
stc
xchg
loop
dec
fstl
push
mov
loopne
jbe
mov
movsb
loope
lea
jge
cmp
jns
pop
addr16
fisubrl
pop
mov
icebp
icebp
adc
je
cmp
das
std
clc
roll
sahf
rsqrtps
and
mov
pop
push
in
jo
mov
pop
xchg
nop
je
test
out
mov
lock
push
jae
inc
inc
insb
ror
popf
add
fsubrl
loopne
inc
cmc
bound
inc
repz
push
adc
dec
and
jo
enter
call
add
mov
mov
pop
sbb
and
and
clc
mov
xor
add
stc
dec
xor
pop
out
cmp
xchg
dec
push
xchg
sahf
aad
inc
xchg
mov
sub
jb
std
and
test
xchg
pop
sub
mov
cmpsb
inc
pop
mov
xor
push
mov
sbb
in
cs
xchg
cmp
add
hlt
mov
loop
xor
int
fucomp
pushf
xor
daa
addr16
je
lret
in
cmp
cmp
rorb
inc
adc
push
movsl
aad
pop
mov
pop
inc
dec
inc
aas
lea
xchg
pop
jb
xor
dec
out
inc
test
outsb
icebp
add
out
dec
xor
dec
cmp
aad
enter
ret
lcall
inc
es
popa
push
mov
push
into
pop
loopne
data16
sub
mov
sbb
pop
mov
rcll
ljmp
xchg
xor
sub
movsb
push
sbb
sbb
xor
jge
iret
dec
pop
xchg
push
adc
xchg
mov
decb
lea
jbe,pt
in
ljmp
lea
xor
sbb
jge
test
cwtl
mov
pusha
nop
mov
loopne
ja
fldt
lods
inc
ja
xor
fidivrs
fs
push
sahf
xor
xchg
push
inc
iret
mov
inc
orl
jg
cwtl
rcrb
jns
add
fidivl
xor
adc
add
xchg
mov
and
int
imul
sbb
fwait
xor
andb
fimuls
or
adc
out
push
adc
fldcw
push
pop
rcll
ja
xchg
aaa
cmp
ret
xchg
and
into
fisttpll
xor
mov
sbb
ds
nop
push
outsb
push
adc
jbe
clc
stos
jae
loop
pushf
xchg
ss
inc
cmpsl
push
lcall
and
add
adc
jl
fistpl
xor
es
movsl
mov
out
test
mov
push
aam
jecxz
add
jns
loope
inc
mov
cmc
mov
es
std
add
jge
xchg
lret
sahf
pop
lret
push
js
cmp
inc
dec
pop
popf
fsubs
inc
cmp
out
imul
int3
fisttpll
and
in
stc
sub
or
mov
andl
xor
insb
std
lock
or
add
das
mov
ret
ja
sbbb
std
dec
cmpsl
jmp
mov
cltd
pushf
pop
mov
and
sbb
push
dec
push
pop
cmp
aaa
daa
and
inc
push
mov
adc
hlt
jp
mov
pop
ret
sbb
ds
stos
out
enter
mov
fmuls
in
pop
push
sbb
test
pushf
mov
mov
xor
shlb
and
xlat
xor
stc
adc
cmc
sub
call
test
sub
cli
push
int3
and
ljmp
inc
scas
std
mov
test
jp
push
repnz
or
jnp
lods
stos
push
cmpsl
cmp
test
stos
xor
les
push
aas
push
nop
insb
push
mov
psubq
scas
hlt
pop
loope
xor
lret
not
mov
repnz
jno
and
inc
mov
icebp
js
xor
ret
inc
outsb
mov
sub
mov
imul
out
imul
sub
aad
pop
lods
xchg
and
push
xlat
cmp
cmpb
call
popa
cmp
adc
mov
jle
je
add
popf
pusha
cmp
cmp
push
cli
push
xlat
repnz
sbb
push
fldcw
or
movsl
out
imul
icebp
xchg
mov
mov
or
sahf
xor
cmc
fidivrl
inc
int3
ds
mov
xchg
xlat
fs
xchg
daa
decl
ljmp
sub
adc
daa
pop
cld
inc
xchg
mov
pop
or
je
jl
aas
gs
push
xor
les
inc
mov
pop
std
mov
out
pop
jle
jo
test
sub
xor
dec
sub
mov
push
ret
jge
dec
push
cmp
xor
popf
pop
inc
sahf
push
jecxz
roll
xchg
ret
lahf
or
mov
inc
mov
xchg
das
jb
jp
cmp
imul
jno
int3
adc
add
es
xor
push
repnz
or
mov
jnp
cmc
mov
cmp
adc
xchg
inc
cmp
in
ds
movsb
daa
js
sahf
enter
outsb
out
in
fsubrs
pop
adcl
mov
ljmp
jne
mov
xor
frstor
and
roll
popf
scas
imul
xor
cmp
iret
jmp
pushf
inc
aaa
icebp
mov
mov
and
or
push
inc
inc
dec
cmp
loopne
fiadds
pop
rol
mov
sbb
mov
inc
xor
aaa
fimull
das
out
shll
mov
fs
neg
mov
jge
ljmp
dec
xchg
add
cmp
lea
mov
sahf
sbb
or
mov
pop
mov
jno
fnstenv
or
jb
leave
rol
add
scas
andl
push
adc
pop
outsl
fildl
mov
mov
jp
pop
lea
push
in
test
test
inc
cmp
in
pop
scas
dec
js
scas
stos
sbb
out
enter
jno
repz
dec
push
mov
inc
jb
in
xchg
jmp
test
add
pop
outsl
push
mov
nop
xchg
jae
iret
addr16
out
inc
sub
mov
orl
inc
mov
fcompl
pop
mov
test
xor
cmpsl
into
mov
enter
jbe
mov
push
adc
adc
sub
mov
in
pop
iret
cmpsb
mov
in
sub
clc
xchg
mov
in
aas
roll
lcall
mov
dec
in
inc
in
mov
cmpl
jle
mov
jecxz
mov
mov
lcall
sbb
cmp
fwait
sub
iret
jne
xchg
and
inc
sbb
pop
mov
sarl
test
jge
cmp
pop
mov
push
movsb
sar
adc
inc
and
sub
icebp
fwait
mov
xor
or
adc
jnp,pt
cmp
imul
das
inc
add
divb
shr
flds
mov
lahf
mov
rclb
xlat
dec
push
mov
and
mov
xchg
inc
mov
jl
in
andb
xor
ljmp
adc
repz
sbb
inc
push
xchg
xor
pop
pop
pop
in
loop
bound
sub
ficompl
mov
pop
mov
sti
sbb
pop
dec
mull
inc
rolb
mov
idivl
mov
out
mov
aas
xor
sbb
jge
lret
mov
setne
test
sti
push
sbb
inc
or
and
sub
cmp
mov
in
insl
xor
adc
sub
nop
lret
push
loop
mov
addr16
dec
push
and
fisubl
add
bound
ftst
gs
mov
mov
jle
cmpb
ss
daa
push
loop
bound
sti
jne
push
insb
dec
addr16
sbb
test
shll
mov
insl
pop
dec
mov
and
mov
mov
inc
dec
arpl
sbb
xor
cmp
xor
insl
popa
cmp
fists
dec
pop
sbb
jnp
aad
into
bswap
ljmp
sub
adc
faddl
pushl
les
aaa
mov
cmpsl
inc
stos
sahf
sbb
sarb
xchg
and
push
jae
cmp
cld
sub
push
cmpl
ss
aaa
insb
lds
mov
stos
stc
cmovne
aas
jno
inc
xchg
ret
push
pop
ja
stc
and
cli
xor
xchg
mov
test
sub
fdivrl
repz
push
in
mov
push
xlat
and
mov
dec
inc
pop
in
pop
jbe
sbb
jb
pop
mov
inc
sbb
out
mov
ret
or
sub
mov
test
push
sahf
or
fisubl
mov
or
push
ret
mov
fcoml
dec
movsl
loop
popa
loop
shl
sub
or
and
inc
rorb
cmp
negb
dec
enter
or
cmpsb
sbb
mov
jns
movsb
ficoml
adc
and
aaa
fwait
mov
das
mov
pop
mov
into
push
les
outsb
mov
inc
daa
outsl
out
lret
adc
repnz
int3
mull
test
scas
insl
cs
adc
movsb
data16
jne
or
push
sbb
adc
loopne
lods
lock
in
add
mov
clc
jle
jb
or
fldcw
loope
dec
sub
fmuls
add
push
push
adc
aad
es
sub
filds
sbb
cmp
cmpsb
dec
int
push
dec
add
rorl
mov
lods
aad
xchg
fbld
das
mov
sti
sbb
arpl
adc
insl
adc
xchg
data16
cmpsl
call
mov
int3
cmp
dec
rcrl
cmp
jae
aaa
aas
sub
sbb
test
xchg
test
aaa
jo
push
les
int
hlt
clc
sahf
xor
xchg
mov
sahf
loopne
xchg
scas
rep
pusha
jo
mov
add
push
or
hlt
mov
cltd
mov
xchg
das
inc
lcall
push
sub
gs
loope
pop
call
pop
push
xor
jnp
test
stos
jb
pop
cmp
jnp
pop
lret
mov
inc
jb
mov
ja
leave
imulb
ficomps
sbb
in
int3
nopl
shll
xadd
adc
jbe,pn
scas
pop
arpl
push
inc
cwtl
loope
out
mov
jmp
inc
and
iret
jno
mov
js
mov
shlb
jmp
cmpsl
jp
ss
dec
inc
and
xor
jmp
jl
cmpsl
lahf
push
sahf
jmp
loop
adc
std
jne
insl
ret
jp
sbb
push
int
flds
mov
jnp
cmp
aaa
insl
inc
jg
mov
js
xchg
push
adc
and
jae
into
xor
aas
es
dec
xchg
dec
sbb
lahf
pushf
pop
lret
add
test
lea
add
xchg
out
push
mov
xchg
sti
pop
mov
movsb
jp
aas
xor
popl
gs
loope
das
in
mov
popa
dec
dec
push
push
jne
mov
les
pop
sub
xor
mov
es
cmp
mov
sub
push
outsl
pop
cmp
or
mov
ljmp
pop
stos
add
or
ja
inc
popa
out
jl
inc
movsb
imul
testl
xor
pop
stc
sub
repz
push
popf
les
cli
test
mov
mov
pop
es
cmp
cli
aam
repz
add
inc
mov
pop
mov
add
shr
sub
dec
rcll
sbbb
adc
stos
out
xchg
idiv
icebp
nop
lds
sbb
mov
add
or
out
mov
dec
bound
pusha
xor
leave
jmp
jo
cmpsl
pop
jp
inc
insl
fnstenv
jmp
or
add
fistps
jnp
jns
inc
jp
inc
or
mov
loop
pop
cmp
pop
jle
and
sbb
icebp
sbb
mov
inc
mov
inc
mov
sub
out
sti
rcl
cmp
out
cmpsl
int
mov
add
aas
adc
pop
ds
jno
dec
cli
ljmp
in
pusha
stc
push
mov
pushf
and
out
lret
packuswb
xor
pop
pop
pop
je
test
cmpsb
mov
jmp
cmp
dec
repz
idivl
ja
daa
or
cli
jbe
mov
cltd
out
push
jecxz
fisubs
mov
dec
insl
ret
inc
inc
pop
adc
lock
repz
mov
xor
hlt
mov
les
inc
mov
cmp
sbbb
je
sbb
orl
das
clc
jno,pn
es
inc
or
add
imul
nop
rolb
cmp
pop
sbb
inc
dec
xor
and
cmp
add
inc
je
xchg
or
mov
test
xchg
subl
js
scas
loope
lock
lahf
mov
cmpsl
cld
sbb
sub
jne
mov
push
xor
mov
mov
pop
cmp
mov
dec
jno
push
xchg
test
adc
xchg
loopne
xor
loope
imul
das
je
and
lods
pop
xchg
ss
mov
fs
push
lret
push
icebp
inc
mov
add
daa
jp
add
pop
sub
inc
loop
sbb
fnstcw
stc
je
mov
push
xor
adc
xlat
and
mov
popa
cmp
sahf
outsl
xchg
mov
out
aad
in
dec
test
jno
mov
fldenv
lods
mov
sbb
jmp
push
inc
jg
loope
loope
std
mov
cs
mov
adc
inc
dec
bound
leave
sbb
in
out
negb
push
jl
jno
dec
lds
jb
fdivrs
jp
sti
out
cmpsb
js
add
scas
fs
ds
shlb
ret
and
scas
xlat
outsb
ljmp
jg
lds
xchg
xchg
mov
mov
insl
mov
cmpsb
out
mov
adc
int
daa
dec
sub
sbb
enter
rolb
pop
icebp
mov
push
rcrb
push
mov
inc
std
pop
cmp
xchg
dec
and
jl
into
xchg
cmpsb
les
mov
jp
cmp
imul
mov
roll
pop
sbb
push
cli
in
xchg
cwtl
outsb
xchg
xchg
mov
std
xchg
adc
ret
in
or
xor
or
shrb
mov
mov
icebp
mov
arpl
fucom
add
mov
cmc
fildll
aad
nop
xchg
test
test
sub
aaa
push
inc
in
pop
or
ja
inc
hlt
sbb
dec
jne
out
mov
dec
iret
push
data16
sub
or
lea
jne
and
popf
pop
sarb
ss
popa
lahf
pop
xor
or
add
or
pushf
stos
shr
fcoms
and
add
adc
inc
and
xor
push
pop
shll
sbbb
loope
or
shrl
cmp
repz
adc
jle
push
cs
mov
dec
or
lcall
dec
dec
hlt
jle
fcmovnu
ret
mov
add
data16
js
sbb
es
mov
xor
sbb
fisubrs
outsb
nop
sbb
jnp
or
add
mov
and
mov
mov
jecxz
repnz
rol
pop
mov
loopne
lods
jae,pt
lock
dec
notb
sbb
imulb
stos
xchg
pop
hlt
adc
mov
sub
xor
cmp
mov
jae
and
je
lds
sbb
scas
int
js
inc
jno
repnz
fbstp
stos
and
cli
cmp
loope
stc
scas
scas
push
inc
push
fs
mov
pop
mov
ja
clc
movsl
enter
inc
xchg
icebp
sbb
jno
cmp
lcall
mov
xchg
lahf
pop
lret
imul
pop
sbb
repz
sbb
xchg
pop
in
btc
mov
loop
fwait
sub
pop
adc
lret
mov
bound
xchg
xchg
xor
mov
fstps
inc
add
outsl
cld
mov
or
cmpsb
shll
fisubs
mov
lock
cmp
jb
inc
in
xchg
icebp
mov
jge
push
test
mov
jb
sbb
push
out
icebp
jle
sti
in
mov
arpl
push
ds
adc
or
imul
sahf
fisttps
shlb
mov
and
add
xlat
sbb
xchg
loopne
test
or
or
clc
cmp
aaa
pop
or
lret
sub
fmuls
gs
and
mov
adc
les
jmp
jp
sbb
jo
loopne
or
jno
cmp
xchg
sarb
aam
loop
mov
fbld
cmp
cmpl
sub
ss
mov
mov
mov
rcll
push
dec
outsl
in
aas
lods
add
pop
push
mov
addb
nop
cmp
andl
ss
dec
fstps
mov
outsb
cmp
iret
fnsave
popf
xchg
ficompl
xchg
mov
test
leave
xor
adc
aad
loopne
mov
jecxz
rorb
sbb
add
or
mov
jae
movsb
les
popa
mov
and
imul
scas
mov
shrl
dec
cmc
imul
jno
ret
fistpll
stc
lea
cmpsb
popa
sub
push
fs
inc
pop
mov
or
push
inc
fsubs
mov
adc
je
cmp
mov
xor
cmp
xchg
inc
lds
jb
adc
pushf
mov
mov
lret
loop
push
icebp
mov
lods
popf
lret
xor
push
jno
sbb
rolb
dec
jp
cmpb
xchg
test
pop
lahf
inc
orb
xchg
dec
jge
xor
push
mov
into
movsb
or
jns
xorl
cmp
mov
add
and
mov
xchg
mov
sahf
xchg
arpl
inc
rol
ds
add
add
add
fisubs
icebp
inc
adc
inc
push
mov
sti
inc
mov
push
mov
adc
inc
js
clc
inc
mov
mov
loop
xor
xor
xor
jno
mov
pop
outsb
fsubl
addr16
add
jl
repz
inc
mov
inc
mov
fcoml
xchg
faddl
pop
cmp
out
push
mov
and
mov
test
loope
ffree
sbb
cmp
mov
lahf
inc
mov
hlt
mov
jecxz
mov
and
scas
inc
cmp
lcall
pop
jmp
jns
cmp
xchg
aad
call
mov
repz
adc
xor
pop
out
nop
pop
dec
push
data16
and
mov
jno
jbe
add
and
clc
mov
inc
loopw
pop
and
cmp
mov
in
arpl
rcrl
je
lods
int3
ja
add
adc
push
or
mov
pop
popf
or
or
dec
sub
mov
call
ss
mov
in
dec
sbb
jns
push
pop
and
or
movsb
push
dec
scas
cmpsb
cmp
jle
push
int
leave
mov
mov
cmp
mov
adc
and
cmpsb
pushf
xchg
add
jns
mov
insw
cmp
inc
or
adc
jl
jmp
adc
jne,pt
pop
add
adc
aam
scas
inc
add
enter
mov
xor
mov
lds
sbb
pop
or
leave
pop
sub
jl
xchg
or
es
popa
sub
cmpb
dec
sar
mov
mov
leave
cmc
inc
stc
xor
imull
jb
jle
mov
and
mov
inc
or
popa
inc
stc
push
std
mov
or
mov
and
mov
mov
fwait
lock
mov
jecxz
add
inc
cmpsl
data16
or
mov
jns
mull
or
lods
loop
mov
mov
sarb
mov
mov
mov
adc
inc
subl
mov
push
and
les
icebp
mov
mov
xor
scas
inc
xchg
pop
popa
xor
cmc
lret
cmp
shl
clc
lock
mov
sbb
push
sub
cmp
sbb
shll
dec
lahf
outsb
js
mov
clc
stos
addr16
mov
pop
int
push
push
repnz
cmc
std
je
test
add
int
lds
test
loopne
adc
dec
fld
or
adc
lret
xor
sub
inc
cmp
xor
jge
sub
gs
aaa
dec
scas
xchg
mov
repnz
mov
jbe
subb
push
jnp
inc
jnp
push
lret
sub
xchg
mov
sti
imul
jo
into
movb
in
jnp
mov
fcmovb
mov
pop
pop
push
push
pop
fwait
jne
jle
test
push
pop
stc
movsb
lret
push
call
sub
movsb
mov
fsubrs
and
lds
ljmp
fwait
jb
loopne
and
jge
or
push
lods
add
adc
push
aad
add
repnz
adc
jg
cmpsl
mov
jle
mov
incl
jg
cmp
pop
rclb
iret
add
sti
pop
clc
sti
pop
imul
mov
xor
lock
call
mov
outsl
fisubrs
push
xorb
fistl
fdivs
sub
add
add
pop
push
add
fimuls
call
aaa
sbb
enter
cmpsl
mov
hlt
push
dec
gs
out
bound
and
inc
int
shl
fiaddl
enter
pop
push
xor
test
shr
add
iret
and
or
scas
sub
or
mov
adc
repz
mov
or
jmp
mov
xchg
pushf
clc
add
cli
mov
fimuls
jmp
cmp
rclb
jmp
push
imul
xchg
mov
sub
adc
ret
lcall
adcl
ret
or
cmp
icebp
addb
lods
in
push
add
push
xchg
xor
jbe
sahf
cli
cmp
rol
cmpsl
in
cs
and
sbb
mov
fs
xor
je
sub
out
sbb
mov
pop
mov
int3
pusha
jae
mov
cmp
or
jae
jmp
stc
push
arpl
scas
jo
dec
je
sub
mov
sub
ret
jne
pop
adc
arpl
loopne
aad
and
push
les
xchg
rcrb
cld
adc
push
fucomp
mov
fdivrs
hlt
dec
ja
into
push
mov
es
mov
xor
pop
sahf
mov
xchg
jle
stos
push
adc
mov
and
ffreep
mov
out
pushf
or
lds
fnstsw
fwait
mov
mov
hlt
cmpl
cs
cmp
hlt
add
sbb
jmp
dec
dec
ret
adc
or
adc
aam
enter
ss
mov
inc
xrelease
jmp
cmp
je
push
mov
das
mov
xchg
push
mov
leave
or
sub
ljmp
les
hlt
ja
cmp
loope
shll
mov
add
pushf
xchg
imul
andb
shrb
xor
es
test
lea
lret
fs
and
fistps
cmpsb
pusha
nop
sbb
ja
push
ret
push
mov
xchg
in
xor
orb
mov
js
daa
push
mov
into
mov
cmp
mov
hlt
adc
lds
pop
test
add
in
mov
mov
movsl
dec
fistps
push
xor
pop
pop
push
les
ds
ja
jns
jne
dec
jb
pusha
mov
and
cmp
mov
push
aam
mov
jp
jo
cwtl
lods
jnp
mov
cmp
lock
inc
xchg
clc
cmp
xchg
jb
push
rcrl
pusha
cmp
clc
testb
sub
pushf
push
orl
push
jne
sbb
repz
push
outsl
loop
lock
cwtl
aad
fs
sti
mov
push
into
jb
push
lahf
andl
daa
ss
ja
in
pop
adc
mov
dec
lret
inc
pop
lahf
movsl
jmp
fwait
add
xchg
xchg
roll
in
std
pop
pusha
mov
adc
push
jmp
mov
and
add
cld
xchg
add
jbe
push
mov
and
mov
push
mov
lcall
pop
stc
inc
sahf
or
sbb
fwait
add
lahf
xchg
loop
pop
dec
or
mov
cmp
in
test
fildll
sub
mov
in
pop
add
sub
push
mov
mov
movsl
push
sarl
xchg
rcll
and
testb
popf
cmp
dec
add
and
mov
insb
mov
xchg
mov
jmp
movb
mov
aad
psrlq
and
orl
jle
xchg
ss
fisubl
aaa
inc
sub
fisttps
pop
insb
add
jmp
test
fistl
sub
mov
push
dec
jg
dec
loop
sbb
push
int3
xor
pop
loopne
xor
sub
mov
inc
loop
sbb
pop
mov
mov
je
xlat
xchg
ss
std
pop
addl
jno
out
sbbb
sbb
pop
xor
and
pop
imul
jns
pop
sti
dec
or
cmpsb
cli
mov
sub
pop
dec
jl
imul
into
mov
inc
and
jae
out
shrl
stc
and
inc
sub
cmc
movsl
jnp
or
cmpsl
cmpsb
jbe
inc
xor
mov
cwtl
aas
mov
icebp
lahf
daa
sbb
fwait
lahf
xor
fwait
sahf
dec
mov
ret
inc
or
mulb
scas
xchg
into
mov
adc
rep
pop
scas
xor
dec
pusha
push
int
ja
xchg
mov
test
mov
cmpsl
xor
aaa
xor
push
jl
loop
gs
mov
cld
add
pop
lds
je
enter
push
xchg
mov
ljmp
daa
or
xor
lcall
jnp
stos
divb
call
adc
movsl
inc
aaa
cs
add
repnz
fwait
insl
lahf
mov
imul
sbb
bound
or
rcll
lods
hlt
std
aas
ficomps
pop
sub
cmpsl
jge
out
jbe
fistps
fdivl
add
jae
xchg
xor
sub
cmp
and
ds
pop
iret
mov
sbb
xchg
xchg
cmp
mov
dec
icebp
jmp
outsl
out
pusha
scas
add
sub
out
in
adc
pop
xor
lods
loopne
jp
lahf
sbb
inc
stos
cmp
inc
or
loope
insl
aad
pop
lret
adc
jo
in
insb
adc
push
sbb
out
lahf
adc
dec
dec
sbb
test
les
mov
lcallw
xor
movsb
popa
pushf
push
push
scas
ja
adc
jp
mov
sub
xchg
mov
adc
rorl
ja
fimull
jle
mov
xor
mov
sub
gs
and
xchg
movsl
ret
cmc
sbb
loope
mov
cmp
mov
ja
mov
pop
nop
imul
js
lods
jne
es
or
repnz
aaa
add
jae
fs
js
shlb
adc
pop
enter
xor
or
pop
fstps
pop
push
insl
cmp
es
pusha
mov
cmpsl
sbbb
and
sub
popa
or
stc
int
pop
iret
ds
scas
aaa
sub
sbb
or
dec
shl
inc
xor
inc
out
pop
sbb
lahf
xchg
fistl
pop
cmpb
and
add
mov
inc
sbb
fwait
insl
repnz
add
daa
inc
into
lods
add
int3
loopne
push
out
push
xor
dec
xor
negl
mov
cmpsb
inc
mov
test
out
shlb
sarl
jge
lret
jae
mov
lea
push
mov
xchg
lahf
aaa
repnz
pop
or
test
jb
subb
push
imul
addr16
jle
sub
repnz
mov
dec
fcom
pop
test
mov
inc
dec
int3
imul
enter
into
dec
rcrl
fdivrs
push
cmp
in
fisttpl
mov
stc
add
das
ret
jb
adc
pop
push
adc
pop
ja
and
out
push
fsts
jmp
sub
fdivl
js
sub
jg
add
cld
mov
mov
sbb
cmp
xor
outsl
bound
push
fsubl
sarb
mov
xchg
cli
lock
and
mov
xchg
dec
retw
movl
movsb
shl
lea
mov
enter
jno
mov
pop
das
xchg
cwtl
mov
pop
or
sbb
jmp
test
lods
cmp
ret
mov
sub
dec
mov
jle
or
sti
hlt
pop
lods
push
push
ss
stos
push
mov
pop
lea
xchg
push
jecxz
dec
adc
lcall
pop
or
mov
xchg
ss
mov
adc
in
xchg
shrl
jo
push
andb
add
sti
clc
dec
sbb
add
mov
mov
mov
cld
aas
xchg
add
fnsave
dec
xchg
or
insb
push
sub
xchg
cmpsb
aaa
lret
lret
jg
jo
in
fstpt
nop
ret
and
xchg
loopne
push
xlat
cmpsb
flds
dec
pushl
scas
inc
cmp
cmp
mov
sbb
mov
mov
outsl
xor
scas
add
and
loopne
das
pop
roll
push
mov
add
mov
loope
jmp
cmc
pusha
pop
mov
mov
lods
mov
cld
jl
xchg
sbb
dec
mov
mov
jmp
add
ljmp
mov
int
jl
cmpb
gs
or
cmp
mov
je
lds
push
and
inc
call
cmp
lods
or
dec
mov
aam
aaa
inc
sub
mov
mov
loope
fwait
insl
dec
cld
les
roll
dec
out
pop
sub
jge
pop
movsb
loope
cmp
jo
mov
push
imul
int3
xchg
cmpsl
andb
push
sbb
push
push
dec
add
in
icebp
lds
lock
out
xor
sbb
movsl
das
push
push
pushf
add
xor
aas
in
jae
push
mov
mov
xor
inc
or
cmpsb
repnz
push
enter
xor
add
out
jl
mov
mov
mov
pop
pop
ficoml
mov
pop
arpl
repnz
lea
and
addr16
xor
bound
push
aam
dec
loopne
mov
popa
jo
or
xchg
mov
clc
popf
and
pop
in
xor
dec
pop
xchg
jne
pop
dec
insl
dec
fistpl
stc
push
adcl
addl
pop
inc
mov
cmc
push
int3
mov
and
jb
pop
stos
loop
cmp
popa
cmpsb
push
push
xor
add
jp
into
addl
cmpb
dec
ds
sbb
or
dec
push
add
cmp
dec
mov
push
and
outsb
scas
aaa
and
int3
push
and
xchg
sbb
sbb
repz
inc
or
jp
adc
mov
cwtl
add
push
pop
mov
gs
jns
sub
ja
push
ja
aas
in
add
sbb
movsb
testb
cmp
add
pop
jno
lds
std
inc
mov
dec
or
lcall
mov
ljmp
cmp
aad
sarb
push
xchg
test
inc
jl
dec
sbb
xchg
loopne
adc
int
inc
push
pop
or
push
cmpsb
or
or
sub
adc
mov
sub
adc
movsb
insl
aad
inc
mov
xchg
int
aas
outsl
xor
push
inc
dec
mov
cltd
fsubrl
sbb
xchg
sahf
ficoml
xchg
sbb
repz
mov
ret
loop
sub
in
mov
arpl
sahf
lahf
loopne
or
cmpsb
dec
adc
mov
iret
mov
sub
push
or
fidivrs
dec
aam
mov
jne
lret
xchg
lcall
sti
dec
outsl
fcompl
nop
and
xor
xchg
rcrl
lea
sarb
fdivp
push
pop
cld
jmp
dec
or
popa
ja
or
clc
ret
push
popf
scas
mov
test
les
cwtl
xor
and
lock
int
inc
push
popf
pop
xchg
shll
mov
sbb
mov
dec
ja
movsl
cmp
sub
aam
imul
test
jo
in
and
cmp
dec
addr16
cmp
in
add
jecxz
les
lods
inc
xor
shll
fdivl
xchg
ss
pushf
push
jmp
vcvttpd2dqx
jge
push
arpl
rcl
adc
cmp
cmp
sub
sbb
inc
in
inc
push
ljmp
test
movsl
add
jo
test
das
pop
sub
inc
cmpb
subl
jnp
and
sar
jmp
loope
push
push
scas
test
mov
icebp
call
dec
pop
call
and
mov
xchg
xchg
sub
cmpsb
mov
mov
push
mov
mov
jl
rclb
push
xchg
test
bound
push
xor
sbb
add
inc
mov
lea
and
subl
xchg
inc
lret
cltd
xchg
movsb
sahf
xchg
test
jg
jp
ret
cmp
out
sbb
push
cmp
pop
out
pop
sub
add
pusha
loopne
mov
enter
stc
aaa
lea
mov
jne
dec
faddl
adc
out
inc
jbe
pop
xchg
mov
jns
dec
jmp
mov
dec
lcall
mov
ret
andl
psubq
in
aad
stos
mov
in
adc
aad
or
enter
mov
push
out
pop
dec
xor
mov
sub
test
movsl
jae
pop
popa
aam
xor
pop
or
push
adc
fistps
aas
sbb
es
repnz
mov
and
and
jmp
or
in
jae
mov
or
cmpsl
xor
mov
sub
xchg
movsl
dec
pop
cmpb
sbb
cmpb
push
les
dec
outsb
in
movsb
push
int
cmp
loope
cmp
mov
pop
insl
adc
and
push
imul
xchg
popa
enter
fprem
andb
lahf
push
push
push
stos
js
xchg
mov
call
iret
loope
mov
cmp
sbb
xchg
jae
jne
cmpsb
pop
cmp
sbb
mov
push
or
cmp
xor
dec
ds
rcl
or
cmpsb
bound
fimuls
xor
and
out
sar
inc
cmpsb
leave
mov
cmp
xor
xor
leave
out
add
cmpsl
sub
inc
mov
nop
xchg
adc
push
fcomi
mov
js
sub
pop
and
mov
add
sbb
inc
loopne
sbb
mov
and
xorb
sbb
sar
cmp
mov
cmp
hlt
pop
sbb
out
add
xor
jae
xchg
jge
mov
mov
jno
pop
lahf
outsl
ljmp
lea
push
push
cmp
mulb
mov
movl
mov
aaa
fucomip
data16
push
testl
inc
test
cld
pusha
add
scas
scas
xor
scas
add
jmp
je
hlt
xchg
inc
push
cmpsl
pop
ljmp
jg
lret
repnz
inc
stc
xchg
mov
cmpsl
mov
in
cmp
adc
fistl
mov
push
jecxz
xchg
ss
dec
ljmp
push
cli
dec
jo
cmpsl
mov
testl
and
imul
sub
outsl
push
lock
and
xorb
xchg
inc
inc
lods
sub
or
sub
push
in
rcrl
lock
cmp
in
notb
jmp
out
push
sbb
add
sti
test
fiadds
stos
lahf
xor
jl
cmpsl
or
push
or
les
subl
mov
add
sbb
xor
sub
ficoml
lahf
nop
mov
xchg
popa
sti
xchg
push
add
mov
sbb
insb
movsl
out
or
or
mov
cwtl
sub
scas
dec
mov
mov
adc
jp
cld
ret
nop
dec
mov
xchg
adc
pop
repz
add
dec
call
mov
pop
sub
jmp
cmp
popf
pusha
add
add
add
repz
mov
stos
stc
push
lock
insb
int3
insb
inc
dec
shlb
arpl
xor
mov
sbb
in
xor
mov
jl
pop
ss
call
xchg
andb
sub
stos
int3
push
sbb
adc
adc
push
dec
sbb
lods
insl
clc
ja
push
cmp
jp
sbb
das
adc
imulb
cmp
xor
subl
jp
push
rorl
stc
in
inc
fnstcw
pop
mov
and
adc
add
lret
inc
les
aad
jae
cld
fucom
stc
pop
xchg
xchg
mov
xchg
popa
ret
lods
dec
fbld
or
iret
push
lds
mov
lcall
shl
and
mov
adc
dec
shrb
dec
or
xchg
clc
leave
cmp
or
cmc
inc
dec
mov
insb
dec
cmp
lret
push
int
icebp
fsubrs
mov
or
lods
or
outsl
cmpsb
push
jmp
popa
test
cmp
loopne
ds
int
popf
in
leave
ja
fistpll
test
or
test
mov
inc
pop
inc
xchg
sarl
outsb
rclb
and
icebp
pop
movsl
scas
orl
mov
mov
mov
adc
mov
lods
mov
out
xor
inc
andb
adc
in
shlb
in
inc
pop
loope
pusha
cmp
xchg
aas
cmp
jg
loopne
cmp
data16
mov
ds
dec
pusha
hlt
adc
adc
sbb
jo
inc
test
jl
push
cs
rcll
pop
fnstcw
pop
rcrl
push
push
push
cmpsl
xor
aaa
dec
sub
andb
and
add
lret
loopne
or
cmp
xor
dec
mov
sbb
enter
jp
fildll
out
std
or
andl
pop
xchg
mov
out
push
and
jmp
cs
mov
dec
out
dec
mov
movsb
push
push
cmpsl
cmovne
mov
pop
push
notl
sub
stos
ret
cmp
in
sub
xor
imul
ljmp
outsb
pop
mov
in
sbb
push
inc
mov
pop
add
cmpsb
push
and
jb
out
add
add
xchg
cmp
inc
cmp
xor
lcall
push
rclb
dec
sub
sbb
push
xlat
subl
int3
mov
xchg
xchg
add
cmp
xorl
inc
cmp
xchg
add
jne
dec
jmp
les
aaa
or
cli
dec
sbb
adc
decl
mov
shrl
fwait
mov
loopne
decb
add
mov
js
push
push
pop
call
out
emms
mov
mov
clc
fisttpll
sar
add
ret
mov
lret
fisubl
test
xchg
leave
cmpsb
adc
push
mov
lods
test
call
cmp
or
push
sbb
inc
fidivrs
mov
add
shr
and
sub
cs
movsl
cld
jae
pop
xchg
in
and
mov
cmp
push
ret
outsl
loopne
adc
testb
ljmp
jns
in
ja
ret
insl
dec
sbb
nop
out
out
sub
movsl
sti
inc
adc
scas
mov
mov
out
push
xchg
in
cs
clc
notl
imul
cmp
test
xor
mov
fnsave
pop
jae
aas
cmpsl
faddl
jb
sbb
outsl
fmul
icebp
xchg
popa
rcrl
out
je
divb
aam
lds
push
push
fnstenv
jb
cltd
xchg
and
cmpsl
je
jne
test
out
divb
fs
cmc
xchg
lcall
pop
xchg
pusha
cmp
addr16
xor
add
fs
sub
cs
dec
les
dec
rclb
mov
mov
fisttpll
scas
cmpsl
leave
pop
cmc
dec
cmpsl
bound
sbbl
jb
mov
fwait
adcb
repnz
ret
or
popa
cmp
push
push
icebp
xorb
in
and
rcrl
jb
inc
ds
lret
push
test
inc
jl
dec
xchg
cmp
subb
test
adc
aaa
stos
dec
cmpb
inc
dec
mov
pop
lds
lret
ja
cmp
cmc
sbb
pop
pop
scas
arpl
enter
jnp
push
lcall
xor
sbb
xor
add
out
lock
add
jmp
insl
adc
push
or
rcr
xor
pop
cmpsl
or
out
xor
or
cmp
gs
xlat
jno
ret
add
push
or
sbb
mov
repnz
pop
imul
hlt
lret
aas
adc
insb
daa
mov
pushf
fiaddl
bound
xchg
inc
dec
mov
xchg
addr16
dec
loope
rclb
es
mov
lods
shl
mulb
loope
ljmp
jnp
jp
inc
pop
aaa
fidivl
ljmp
lret
movsl
mov
rol
lahf
movl
push
test
ss
pop
sub
cltd
or
cmp
stos
arpl
test
mov
and
out
lods
or
popw
lret
movsl
popa
imul
push
push
insl
das
jmp
xchg
add
pop
fdivp
cli
ret
lock
and
or
popa
mov
pusha
std
adcb
arpl
push
adc
insb
je
mov
push
cmpsl
fsubr
sbb
mov
popa
sub
les
out
daa
mul
add
in
lds
pop
push
add
hlt
mov
test
ud1
nop
mov
daa
xor
dec
add
leave
push
cltd
push
aaa
push
push
lea
jb
fs
xchg
xlat
lods
sbb
pop
dec
dec
cmp
popf
add
and
mov
pop
adc
std
sbb
sbb
add
mov
and
mov
imul
or
mov
fcomi
lods
xchg
call
jnp
inc
out
pop
dec
xchg
add
pop
add
shrl
movsl
pop
cmp
rorl
in
push
sarb
bound
pop
cmp
lcall
add
fnstenv
xchg
xor
add
rep
sbb
aas
adc
lods
fcompl
popf
sbb
negl
roll
adc
mov
sahf
lods
push
xor
fsubl
mov
inc
aas
lret
sbb
sbb
les
scas
mov
popa
dec
js
into
ret
inc
rcrl
lods
jmp
dec
or
pcmpgtb
pop
or
scas
repnz
sub
lods
rcrl
lcall
inc
ljmp
repz
xchg
pop
dec
push
into
lds
test
popa
mov
cltd
lcall
sbb
or
dec
dec
mov
shll
mov
mov
loop
pop
lea
pop
sub
xor
loope
push
xor
mov
sbb
push
jno
mov
lods
dec
push
aam
xor
lea
rclb
popl
lret
xor
addr16
jno
xchg
pusha
sahf
into
add
out
fcompl
out
ret
pop
cmp
lods
xlat
xchg
mov
and
inc
jo
lods
xchg
out
or
vprotd
inc
shl
inc
nopl
aas
test
and
mov
xchg
xor
cmp
push
push
xor
pop
adc
cmp
push
sub
cltd
repnz
xchg
cmp
data16
int
lret
lahf
cmp
aam
adc
xor
pop
mov
jb
pop
jle
loopne
loopne
stos
enter
jge
and
ljmp
aad
xchg
dec
inc
jle
rorl
ss
pop
js
gs
cmp
test
loop
xchg
aam
add
mov
shll
adc
negl
out
cmc
dec
scas
cli
cmp
push
push
dec
rcl
test
sbb
mov
test
aaa
mov
jl
push
mov
aad
mov
scas
dec
pop
fimuls
jne
and
jbe
popa
fwait
pop
les
std
gs
push
in
push
xlat
pop
and
and
in
sbb
dec
cmp
in
mov
sbb
shll
adc
mov
call
cmc
push
mov
in
mov
xor
fwait
inc
sub
mov
mov
lret
adc
hlt
push
repnz
in
adc
cld
add
gs
lcall
push
lock
andb
addl
lret
adc
test
pop
loop
push
aaa
inc
add
pusha
imul
sub
enter
dec
and
jp
push
xchg
addr16
cmc
imul
cmp
cmp
cwtl
int
dec
mov
mov
cmp
adc
lret
sbb
mov
cli
xlat
cmp
int
sbb
cs
adc
pop
popf
not
lret
imul
xchg
andl
sub
sbb
cmp
shrb
mov
add
cmp
ds
addr16
add
or
outsb
sub
mov
lret
push
xchg
and
jecxz
mov
scas
add
ret
dec
pop
stos
and
xchg
dec
mov
inc
popf
and
jb
xor
pushf
les
or
sub
push
pop
xchg
mov
in
lea
pop
dec
jmp
pop
sbb
fistpl
and
pop
rcrl
push
test
xchg
js
jns
or
or
jo
sub
or
nop
cmp
sub
dec
and
add
and
push
in
ss
push
mov
mov
push
jo
adc
popl
pop
sbb
ss
dec
icebp
popa
mov
movb
xchg
test
push
push
xor
sbb
push
push
sbb
movsb
je
cs
jae
pop
enter
les
sbb
je
xchg
sub
push
and
dec
bound
bound
xchg
inc
pushf
outsl
sbb
mov
jnp
mov
lds
popa
cld
daa
lods
test
jge
pop
sub
mov
push
mov
nop
sbb
lahf
cmp
inc
clc
jbe
lea
cmp
jb
repnz
dec
orl
cmpsl
ret
pop
pop
fmuls
dec
inc
rcrb
test
xor
lret
push
sub
xor
xor
or
sub
dec
jo
shll
lods
in
xor
xchg
xchg
adc
push
sar
sbb
jp
adc
cmp
dec
jae,pn
into
pop
lret
out
sub
iret
or
cmp
fs
jge
mov
dec
or
cmp
or
ljmp
mov
mov
add
mov
or
lock
mov
add
adc
hlt
stos
mov
cmp
jbe
adc
mov
inc
pop
into
dec
ret
mov
lcall
push
ljmp
or
jno
cmp
scas
mov
lret
pop
insl
adc
pop
sbb
movsl
and
sbb
mov
outsb
fadd
lock
xor
orb
jl
orb
iret
iret
and
repnz
popf
mov
cli
xchg
lods
push
iret
dec
in
xor
lahf
test
or
in
ss
dec
lret
sti
jne
fiadds
ja
inc
hlt
dec
mov
test
je
ret
cmp
outsl
pop
clc
cmovns
sub
test
adcb
mov
or
sarl
dec
inc
mov
xlat
inc
pop
jns
movsl
push
adc
cwtl
pop
pop
hlt
ficoms
lahf
xchg
sbb
mov
int
loop
hlt
push
sahf
or
mov
cli
pop
fisttpll
data16
dec
lock
je
lock
and
mov
sub
mov
jno
jns
fsubrs
fstps
and
hlt
cmp
inc
aaa
lock
pop
sub
sub
mov
sbb
jae
dec
les
inc
mov
fmuls
jb
in
dec
or
outsb
mov
test
mov
dec
push
stos
sub
mov
mov
mov
ror
ss
jp
in
jl
ret
mov
lock
inc
test
jae
sub
testl
popa
cmp
xchg
add
sub
or
or
add
loope
stos
add
cmp
mov
xor
and
inc
cmp
sbb
in
icebp
subb
lea
pop
jecxz
insb
loope
dec
mov
fwait
add
add
or
out
cmpsl
inc
sbbl
inc
mov
repnz
lock
ja
jge
icebp
ret
pushf
adc
jl
lock
push
ds
mov
pushf
inc
arpl
jnp
or
inc
cmp
sub
aas
mov
or
mov
push
mov
mov
and
xorb
movsl
mov
test
loope
inc
or
mov
jecxz
gs
sahf
cmp
clc
bound
pop
lock
and
sub
push
repz
pop
dec
pop
es
jg
or
lds
and
movsb
fisttpl
jno
movsb
jl
mov
and
pop
notl
mov
lods
cld
or
and
je
pop
push
fdivrs
mov
mov
testb
repz
mov
mov
sarb
shlb
mov
xchg
inc
push
adc
cmpsb
pop
fisubl
std
in
push
dec
sbb
sub
push
ds
add
inc
pop
sbb
jp
int
mov
mov
dec
add
enter
dec
daa
cmpb
in
outsb
sub
into
xchg
inc
lods
aas
sbb
addr16
sub
sub
jle
rcl
add
and
mov
fadds
xchg
in
pop
mov
xchg
sub
adc
xchg
icebp
mov
das
sub
and
es
xor
js
dec
adc
cmp
pop
cmp
pop
mov
in
rcrb
pusha
insl
clc
adc
jecxz,pt
and
loope
push
popa
adc
pop
stos
pop
or
dec
scas
jecxz
mov
xchg
shll
mov
mov
push
inc
daa
jmp
in
stc
jmp
js
dec
xchg
nop
and
sbb
cltd
inc
rcrl
dec
cmp
xor
jb
pop
mov
arpl
clc
mov
cmp
sub
shlb
cltd
das
js
inc
pop
dec
dec
daa
mov
je
mov
ss
add
push
es
inc
xor
jns
das
mov
aam
add
add
lcall
aas
sar
sub
fadds
out
mov
push
mov
adcl
pop
sbb
pop
pop
cmp
add
dec
mov
std
mov
in
pop
dec
sti
lcall
inc
into
movd
or
mov
pop
pop
or
pop
jo
xchg
adc
call
inc
jmp
pushf
test
mov
jp
fisttpl
out
pop
mov
fmuls
test
xlat
out
icebp
jno
pop
out
add
inc
xor
cmp
xchg
push
mov
jge
jbe
or
ret
xchg
jbe
and
sub
hlt
xchg
cmp
inc
dec
aas
pop
push
pop
loope
inc
imull
xchg
push
mov
jg
jns
mov
fs
shrb
imulb
xchg
call
jg
sub
ja
testb
popf
outsb
loop
outsb
ret
push
push
lds
rorb
nop
fucomp
jno
ljmp
sub
fiadds
dec
pop
cmp
es
in
pop
dec
push
add
add
call
fldenv
lea
std
loop
add
cmpsl
push
jns
push
sti
mov
push
mov
aad
in
mov
sahf
cltd
add
ljmp
hlt
mov
or
fsubl
xor
repz
adc
mov
in
xor
pusha
jp
mov
dec
scas
jnp
sbb
xchg
mov
or
insl
ret
mov
daa
fidivs
sub
mov
flds
xlat
push
or
jno
mov
insb
lret
rcl
lods
movsl
push
std
rcrb
add
inc
inc
cmp
movsl
mov
negl
add
mov
shll
mov
shl
push
sbbb
js
mov
stc
dec
xchg
xor
iret
cli
lds
sub
dec
gs
pop
shrl
in
pop
ljmp
cmp
ds
pop
out
rorb
cmp
movsb
enter
sbb
jo
inc
xchg
jno
jmp
mov
pushl
xor
imul
lea
jo
ss
cmp
mov
add
fwait
dec
aas
cli
call
hlt
push
jmp
loope
or
xchg
xchg
add
push
mov
lock
jae
xchg
jne
mov
movsl
inc
mov
push
imul
sbb
push
mov
mov
pushf
std
sar
out
nop
sbb
cmp
repz
sarb
push
gs
sbb
adc
call
xchg
data16
sub
and
in
loop
or
cmp
cmp
in
push
test
pop
push
xor
jle
imul
loop
lock
sub
add
fadds
jge
pusha
add
mov
das
push
jge
lds
push
sbb
in
outsl
lods
pop
dec
jns
test
cmp
mov
js
push
rcrb
sbb
lock
add
and
add
pop
pop
or
jp
outsb
mov
jne
jo,pn
add
shrb
push
mov
scas
lods
shrl
fnstcw
lods
xlat
jp
test
sub
aad
cltd
lds
and
push
sti
ss
xor
mov
out
jmp
in
push
dec
sub
test
push
or
test
mov
sub
jp
into
push
test
imul
test
fnsave
pop
add
xor
out
jbe
loop
sarl
push
and
sub
inc
negb
je
jno
pop
pop
mov
fstl
mov
or
mov
orl
sarb
xor
fsubr
push
fsubl
adc
inc
adc
daa
mov
mov
sahf
adc
dec
in
lods
mov
outsl
daa
call
pop
mov
inc
mov
in
xchg
lcall
lea
sbb
dec
push
xor
mov
lret
pop
call
sbb
pusha
push
cmpsb
add
data16
or
pushl
or
test
jae
dec
int3
inc
pop
mov
enter
test
popa
dec
stos
mov
add
hlt
mov
add
loop
mov
jno
les
mov
xchg
xchg
pop
in
fadds
or
aad
aaa
mov
or
fistpl
rcr
xchg
xor
adc
sarl
push
lods
mov
fisubrl
or
or
adc
push
je
test
out
jbe
lret
es
or
clc
into
out
push
outsb
pop
xchg
mov
add
xlat
mov
jb
ja
popf
mov
cli
pop
les
ljmp
repnz
popf
and
jg
xor
stc
push
sub
cmc
add
jbe
lret
into
adc
jbe
fcomps
fimull
xchg
rcrb
ss
mov
sub
jge
adcl
daa
xchg
xor
jne
pop
mov
icebp
popa
inc
cmc
cmp
push
xlat
xor
mov
inc
or
mov
daa
xchg
test
call
xlat
adc
xor
mov
ja
shlb
sarb
push
fidivrs
outsl
enter
push
push
adc
mov
adc
faddl
mov
jp
scas
and
popf
cmp
or
pop
cld
pop
jecxz
push
negl
sub
xchg
jae
sahf
inc
out
dec
jmp
inc
fcomps
push
lds
jnp
jp
xchg
pop
jb
mov
push
out
and
mov
into
mov
std
lods
sub
xchg
inc
dec
into
pop
or
das
mov
rcll
or
std
jg
out
and
inc
sub
aam
test
lods
push
mov
fists
fsubp
cltd
sbb
xor
sti
push
fldenv
push
mov
stc
lret
inc
std
popf
xchg
sbb
jo
int3
push
cmpb
test
dec
cli
pop
xor
out
xchg
cmp
push
in
call
ja
pop
fnsetpm(287
pop
jo
sbb
imul
or
sbb
leave
std
xchg
insl
imul
pop
sarb
dec
aaa
mov
sahf
test
iret
cmp
cmp
xchg
xchg
in
pusha
icebp
jge
dec
add
add
or
movsb
xchg
ljmp
dec
push
push
imul
jns
cwtl
dec
mov
ja
xchg
mov
push
jl
ds
mov
jno
jge
imul
mov
imul
pushf
jmp
lods
ljmp
mov
test
xor
aad
jbe
adc
adc
push
sbb
aas
in
push
rclb
pop
mov
push
scas
out
push
fisubrl
fsubl
outsl
dec
data16
pop
sarb
lock
pusha
stc
rclb
push
test
sti
int3
out
adc
inc
dec
jl
mov
addr16
sbb
mov
int3
fcoml
or
inc
lock
lock
aas
test
pop
jp
mov
jp
adc
dec
rcrl
pop
xchg
sub
adc
jmp
les
mov
cld
fcmovu
push
cmp
ljmp
jp
inc
adc
pop
movsb
mov
pop
mull
mov
and
daa
test
and
xchg
andl
jge
cmc
pop
xor
mov
jecxz
push
push
mov
cli
test
xor
enter
pop
fstpl
call
sbb
aas
sti
cmp
orl
fmul
fdivs
jmp
push
xchg
or
mov
sub
cli
insl
sbb
fsubrs
mov
das
pop
and
inc
pop
inc
or
inc
xchg
jle
fistpl
mov
mov
adc
ficomps
fcoml
xor
adc
ss
and
mov
and
cltd
imul
xchg
jo
xor
mul
daa
lods
cwtl
loopne
or
push
cmpsb
fs
lods
and
pusha
std
pop
fstpt
pop
aam
scas
int3
and
mov
mov
jp
adc
or
pop
jecxz
loope
roll
outsb
testl
xlat
lds
lods
imul
adc
jnp
js
fcmove
dec
or
xor
insb
insb
outsl
sbb
ljmp
adc
in
push
mov
inc
add
push
loope
std
repz
and
dec
hlt
inc
cltd
repz
lret
xor
aas
jecxz
lahf
bound
inc
cmp
xchg
cmp
jp
repz
aad
lea
pop
mov
push
fistl
inc
pop
xor
and
pop
pop
ja
leave
data16
xor
mov
aam
mov
mov
xchg
xchg
cltd
fsubrl
xor
aaa
pop
cs
mov
inc
pop
cld
dec
sahf
popf
cmpsb
dec
pushf
push
push
xchg
jnp
inc
mov
xchg
mov
push
andb
cli
push
test
mov
shrl
mov
test
scas
iret
decl
pop
int
jmp
cmp
fistps
lods
jmp
sbb
add
cwtl
and
ret
dec
orb
jne
cltd
mov
jae
jae
std
in
data16
push
arpl
fdivs
adc
adc
and
dec
daa
ljmp
dec
xor
cltd
xlat
xchg
leave
sub
cmp
dec
pop
mov
push
xchg
je
jl
test
aad
mov
mov
punpckhdq
cmp
imulb
lret
int
cmc
sub
mov
clc
iret
shrb
mov
xchg
lds
xor
shrl
arpl
add
add
out
aaa
mov
mov
and
or
sub
cmp
cli
mov
and
mov
and
js
jg
mov
sub
in
lods
push
pushf
inc
mov
mov
outsb
fists
nop
xchg
es
hlt
fldenv
fidivs
add
inc
inc
fidivrl
ds
loop
push
inc
or
negb
pop
jp
push
mov
pop
mov
or
in
inc
test
inc
push
mov
enter
loope
outsl
mov
out
jne
lret
inc
fdivl
or
cmp
dec
xor
push
inc
mov
adc
push
push
cli
insb
adc
aad
push
mov
arpl
sub
sbb
mov
je
cmp
sbb
jle
mov
mov
jae
mov
xorb
xor
mov
sarl
je
pop
test
cmp
add
fidivrl
or
mov
addl
loope
lahf
fldenv
jo
cmpsl
pop
outsb
add
pop
bnd
jmp
aas
shl
mov
cmp
lds
jbe
jno
jmp
cld
mov
jl
cmp
xor
mov
lods
mov
jecxz
mov
scas
adc
adc
int3
sbb
or
jbe
mov
xchg
add
es
dec
jge
jl
jecxz
imul
imul
loop
mov
sbb
or
inc
adc
aaa
lahf
pop
push
leave
aad
test
pop
mov
cmp
popa
imul
mov
push
pop
mov
je
int
xor
pop
inc
gs
js
xor
gs
stc
dec
sbb
push
pop
mov
or
sub
cmp
outsl
adcb
mov
pop
jmp
dec
scas
insb
jne
fisubl
les
pop
jmp
cmp
pop
addb
aam
popa
push
sub
sbb
pop
outsb
clc
inc
lock
inc
mov
incb
xchg
inc
and
sub
test
lcall
xchg
or
add
jge
add
aas
sbb
pushf
out
int3
mov
outsl
dec
not
aas
sahf
scas
sbb
push
cmp
test
jo
pop
xchg
mov
jo
cmp
jmp
pop
js
and
inc
imulb
push
push
pop
add
xlat
push
shrl
cmpsl
mov
cmp
mov
addr16
outsl
inc
ja
leave
movq
scas
and
stc
arpl
rcll
lahf
out
push
sbb
stc
pop
mov
hlt
data16
mov
cmpb
or
adc
mov
ret
add
cld
dec
jp
rcr
dec
mov
adc
cmp
xor
testb
inc
scas
ljmp
mov
xlat
lds
fsubs
mov
outsb
sbb
es
xor
lods
aas
or
inc
sbb
lds
adc
pop
xchg
adc
test
inc
decl
sarb
pop
fists
mov
push
mov
sub
imul
mov
dec
jns
insb
xchg
loopne
inc
pop
pop
push
and
jb
push
jns
sbb
push
mov
mov
and
xchg
out
xor
mov
clc
out
subb
mov
xsha1
cmpsb
dec
ss
lock
add
jmp
and
loopne
imulb
pop
push
cld
dec
sbb
aas
and
call
or
pushf
test
fwait
scas
mov
inc
push
loopne
cmc
popf
or
rcrb
add
add
pop
adc
cld
inc
test
xor
jbe
mov
lea
inc
and
jo
lret
stos
mov
aad
test
sahf
adc
gs
xor
pop
inc
cmpsl
testb
scas
pop
movb
pop
adc
in
xor
mov
cmp
xor
fildll
aam
or
icebp
call
and
or
cltd
loopne
add
inc
cmc
call
enter
ljmp
icebp
scas
enter
aad
cld
mov
iret
cmp
jmp
push
jb
in
orb
pop
xchg
pop
cmp
aaa
mov
mov
xchg
aad
hlt
nop
call
xor
push
jmp
mov
int3
mulps
jge
lds
xor
push
out
ljmp
xchg
imul
cwtl
out
cmpsl
jl
jns,pt
pop
sub
jg
test
lcall
cld
lock
out
aaa
fistl
pushl
in
jl
repz
add
daa
push
adc
xchg
mov
mov
push
adc
sbb
add
dec
and
sbb
xchg
mov
test
jns
and
call
nop
push
xor
mov
pop
aaa
pusha
inc
loope
pop
pushf
imulb
notl
out
mov
dec
stc
pop
mov
xor
inc
sub
mov
mov
dec
ljmp
cltd
lcall
mov
movsb
sar
mov
stc
cmp
add
push
pop
decl
jl
ret
repnz
push
clc
jecxz
lret
mov
push
pop
or
outsl
mov
sub
scas
push
shlb
mov
scas
push
mov
jne
cs
test
rol
insb
popa
mov
repnz
mov
bound
mov
jg
jb
das
dec
sbb
mulb
gs
in
push
test
div
aad
add
cltd
add
jnp
mov
jmp
outsl
xchg
sbb
lea
call
outsb
lret
pop
mov
les
cmc
rcr
cmp
dec
aas
ljmp
shr
sub
pop
xor
lcall
pushf
out
sbb
dec
daa
pop
stos
je
pop
lahf
pop
push
sbb
loopne
push
pop
sahf
fistpl
or
jae
sbb
push
ljmp
fnstsw
insb
mov
xchg
cmp
push
addr16
int
xchg
bound
aad
leave
xor
shll
scas
icebp
cs
jae
push
add
inc
inc
adc
sub
dec
test
dec
jo
scas
mov
into
cmp
fwait
push
rcll
xorl
pop
mov
add
mov
jo
cwtl
sub
nopl
cmc
add
or
negb
les
sbbl
fistpl
mov
xchg
mov
lods
jne
pop
sub
push
stos
iret
rcrl
pop
cs
push
ss
loop
push
fsubrs
inc
jb
dec
scas
test
or
mov
fsubr
std
sub
pusha
mov
push
pop
add
mov
mov
adc
push
inc
call
push
and
push
mov
or
xor
dec
icebp
jbe
shl
or
pop
mov
jns
cwtl
dec
dec
out
cmpsb
shlb
push
ret
or
mov
pop
push
add
adc
jl
lds
sahf
stos
test
lods
fmul
aam
js
jge
into
add
sbb
repz
add
xor
pop
out
dec
jmp
aam
loop
xor
sub
sub
je
jmp
mov
loopne
les
or
jne
sbb
dec
dec
scas
fnstsw
xchg
xchg
lret
dec
xor
jg
enter
ret
jb
repnz
adc
mov
shlb
repnz
adc
scas
xor
push
sbb
xor
adc
sbb
out
lret
in
pop
mov
and
addl
stos
push
fstps
lret
jecxz
mov
cmp
imul
pop
mov
inc
addb
jmp
mov
insb
pop
mov
inc
adc
push
sub
rcll
loopne
out
mov
adc
mov
cmp
xor
mov
enter
mov
cld
dec
xor
dec
sub
mov
sbbb
or
xchg
xchg
shll
push
inc
add
mul
xlat
cltd
ret
xchg
aad
mov
sti
fwait
and
pop
aaa
sub
push
add
or
adc
cli
stos
xlat
mov
fistpl
popf
negl
xorl
andl
cmc
mov
or
inc
xor
in
cmpsl
sbb
test
jno
aad
stos
sahf
mov
lret
stos
fsts
sbb
leave
pop
aaa
inc
push
sub
fisubrl
stos
outsl
outsl
push
or
sub
mov
fistl
mov
cmpsb
and
adc
cs
in
in
mov
stos
arpl
mov
and
sbb
mov
leave
jns
fistl
test
adc
jg
bound
push
mov
add
inc
les
insb
popf
xor
pop
pop
pop
mov
insl
xchg
imul
jmp
pop
mov
mov
lahf
arpl
ljmp
push
dec
jle
in
imulb
push
jl
sub
arpl
xor
mov
push
test
popl
cli
mov
mov
fs
sbb
pop
jbe
sahf
or
xchg
adc
and
adc
pop
adc
das
jno
xorl
mov
jl
into
adc
jno
out
jo
lea
xchg
cmp
ds
in
notb
jp
out
jle
mov
out
js
neg
add
add
xor
lahf
jmp
and
mov
xor
mov
aaa
inc
hlt
ljmp
mov
daa
pop
adc
outsb
sub
push
imul
push
push
push
mov
stos
ret
mov
sbb
dec
outsl
out
rcrb
jne
cltd
mov
rcr
adc
enter
popf
insl
or
inc
sbb
push
outsb
lock
aam
addr16
inc
mov
iret
inc
enter
notb
or
add
std
cmp
cwtl
push
add
and
dec
and
lock
fiaddl
mov
pop
out
mov
push
push
cmp
fdivrl
lds
adc
pop
cmp
cwtl
mov
inc
cmp
mov
iret
fnstenv
inc
dec
sub
ret
daa
outsl
push
jge
push
inc
jg
fucomi
mov
push
test
cld
call
add
cmpsl
dec
pop
scas
jae
mov
dec
fistl
int3
fadds
dec
or
jo
fstl
aad
ret
cmpsb
jmp
insb
xor
lret
vmovdqu
and
inc
jmp
inc
inc
cmp
out
xchg
push
sbbl
cmp
int3
cmpsl
push
sub
icebp
inc
sahf
xchg
add
jmp
jge
shl
adc
mov
push
sbb
sbb
loope
jl
jno
jg
mov
adc
dec
adc
sbb
fwait
pop
pushf
scas
in
bound
adc
push
icebp
aas
lahf
dec
xchg
pop
rcrl
add
hlt
push
pop
push
cmp
pop
inc
hlt
repnz
imul
sbb
add
mov
lods
inc
pop
pop
data16
xchg
mull
mov
jg
inc
mov
sbb
adc
jle
jb
arpl
mov
iret
dec
into
pushf
cmp
cmp
or
xchg
out
xchg
pop
fiadds
hlt
adc
pop
test
ljmp
rcrl
icebp
jp
pop
test
adc
dec
sub
jo
lods
sbb
jp
and
out
mov
xlat
call
mov
xchg
push
jge
lods
lret
cld
mov
inc
loopne
lret
cmp
iret
cltd
leave
mov
imull
les
or
or
std
mov
pop
repz
testl
inc
adcl
jp
mov
sbb
or
dec
fwait
mov
in
mov
mov
sub
jb
xchg
fs
sbb
dec
negl
inc
in
and
out
pop
cs
pop
scas
push
adc
repz
stos
gs
jae
out
sbb
sbb
xor
add
lahf
xor
sub
fisttpll
clc
int
and
shl
push
xchg
fwait
out
push
inc
bound
sbb
ljmp
sbb
negb
je
push
test
test
js
nop
jnp
sub
mov
xor
stos
movhps
nop
shll
adc
test
out
xchg
jecxz
fldl
jo
mov
repnz
cmpsb
fsubrl
call
xchg
sbb
jmp
or
or
jae
pop
mov
or
ljmp
outsb
sub
pop
xchg
jecxz
sbb
into
orl
cmp
cmp
push
add
dec
dec
scas
cmp
inc
push
jo
mov
in
mov
jmp
imul
sub
mov
or
cmc
adc
lds
inc
out
push
mov
cmp
lahf
fnstenv
cmc
mov
push
dec
shrb
mov
lock
mov
jecxz
sti
cltd
stc
or
je
or
dec
pop
or
fldt
movsb
sbb
add
xchg
cmp
lock
ja
or
aaa
outsl
in
cmp
xchg
sub
leave
pop
stos
mov
adc
push
adcb
dec
or
or
movsl
jne
push
or
lock
xor
mov
filds
call
flds
xchg
mov
cli
inc
dec
inc
sahf
inc
cmpsb
imul
test
pop
cmp
shrb
or
lret
mov
outsb
out
loopne
out
popa
popf
mov
jb
adc
adc
jbe
in
jno
out
mov
inc
stos
mov
shll
addb
cld
xor
push
stos
stos
xchg
mov
hlt
sub
ret
in
adc
pop
sub
xor
aas
mov
add
shll
cld
stos
sbb
loope
jo
test
shrl
xchg
mov
mov
pop
in
rcll
idiv
sbb
cwtl
xchg
insl
bound
and
pop
and
jecxz
mov
sahf
and
aaa
call
push
in
push
aad
repnz
mov
jbe
pop
push
add
mov
ja
jle
psubd
lock
cmp
push
insl
shr
push
icebp
cmp
int3
push
pop
push
xchg
movsl
fs
rcll
push
cmp
scas
and
es
clc
lods
and
clc
fnstsw
lea
mov
mov
adc
mov
cld
mov
add
cmp
aas
notb
xchg
stos
mov
lret
out
mov
popf
loopne
movsb
rcl
neg
scas
outsl
inc
xchg
mov
mov
mov
and
cld
sbb
push
mov
ds
std
mov
frstor
pop
pop
lcall
jae
add
xor
xor
mov
popf
in
or
je
inc
in
jge
in
lret
scas
test
and
sub
push
into
push
sbb
je
inc
in
daa
dec
push
sub
mov
xor
aas
aad
fdivl
and
xchg
pop
adc
lods
push
stos
in
cmp
jmp
mov
stc
je
mov
add
bound
mov
or
dec
jecxz
xor
in
data16
pusha
scas
ret
push
pop
mov
test
pushf
aad
imul
cltd
mov
mov
push
test
repnz
popa
add
cmpsb
dec
inc
adc
jno
lret
inc
mov
jo
cltd
inc
mov
pushf
pushf
jecxz
mov
mov
or
jae
pushf
mov
icebp
mov
mov
fldcw
lods
sub
sub
enter
sub
cmp
xlat
js
cwtl
addr16
cmp
mov
mov
push
insb
mov
jl
mov
insl
std
inc
sti
sbb
scas
ret
daa
mov
outsb
out
xlat
test
push
stc
push
loop
aad
es
cmpsl
in
leave
icebp
adcb
add
xchg
cld
sbb
lods
pushf
mov
iret
and
add
push
mov
pop
or
imulb
jge
out
pop
pusha
xchg
test
cmpsl
dec
orl
pop
stc
sub
cld
cmp
sbb
pushf
rorl
std
movb
pusha
pusha
cs
pop
lahf
mov
pop
inc
gs
stos
sti
jecxz
out
cld
push
pusha
sbb
pop
add
mov
fxch
jnp
sub
cltd
cld
std
and
cmp
arpl
loop
cmp
loope
inc
aaa
ret
fs
xchg
sbb
int
in
repnz
fmulp
or
dec
daa
lods
cwtl
xor
insl
sbb
and
xchg
or
ss
ljmp
or
mov
xlat
add
mov
and
popf
mov
sbb
out
inc
mov
push
mov
hlt
lret
jp
jp
mov
pop
test
and
inc
jne
xor
sbb
fwait
adc
sti
sub
outsl
pop
icebp
cmp
rol
movsb
stos
xlat
adc
lret
mov
jge
les
sbb
add
test
mov
mov
nop
adc
pop
les
hlt
test
shll
or
addl
cmp
icebp
cwtl
and
sub
lcall
lods
popf
cmp
jne
lea
jne
cmp
inc
inc
sbb
sbbb
fwait
jp
or
in
mov
and
test
lods
dec
outsb
mov
loop
daa
mov
lret
cmpsb
cltd
add
and
mov
dec
fsubrs
mov
adc
adc
jo
repnz
and
fidivs
out
xchg
mov
data16
or
lods
sbb
hlt
inc
fsubl
jo
mov
ret
cli
push
jo
mov
push
in
stos
fadds
xchg
arpl
lcall
lret
test
or
mov
in
lcall
and
loopne
stc
xor
push
ret
cmpl
push
adc
mov
pop
xor
mov
and
sub
mov
out
les
push
std
add
dec
in
inc
int3
insb
cwtl
jp
into
lahf
push
xor
cld
or
jns
rclb
jo
adc
jbe
inc
push
jmp
mov
das
sbb
cmc
jbe
fcmovnbe
lds
sbb
sub
jmp
dec
aaa
daa
pop
scas
pusha
jne
es
sub
movsb
sbb
popf
xor
xor
les
adc
fwait
in
jl
cld
adc
loope
rol
push
pop
jl
aad
insb
stc
inc
mov
les
imul
ret
mov
xchg
cs
test
lret
mov
sbb
imul
sbb
mov
es
or
push
cmp
loopne
sbb
es
je
sub
or
shlb
pop
adc
pusha
ret
je
shlb
js
sbb
pop
hlt
mov
arpl
jge
push
pop
rcrb
xchg
das
je
out
xchg
or
daa
insl
inc
xor
jmp
pop
mov
xchg
add
inc
mov
cmp
push
cmp
cmp
stc
sbb
ret
pop
imul
fidivrl
jmp
adc
jmp
shrb
dec
inc
aas
cmp
movsl
shll
insl
cmp
fnstcw
insb
or
xor
add
fadds
inc
fldcw
mov
fiaddl
jge
pop
leave
mov
shll
inc
dec
cli
pop
mov
mov
scas
or
xor
add
jg
and
push
mov
mov
loop
lret
repnz
jecxz
clc
push
test
je
sbb
ljmp
cld
or
lock
shl
mov
out
and
sbb
outsb
repnz
mov
sbbb
sbb
mov
aaa
adc
iret
jmp
adc
lods
inc
repnz
jecxz
dec
jmp
dec
or
push
and
pop
push
outsb
push
mov
fisttpll
les
cmp
int
and
sbb
pop
mov
jb
ret
inc
mov
test
add
insl
test
pop
aad
iret
fcmovnu
mov
lock
pop
insl
aas
les
inc
mov
outsl
ds
ljmp
out
mov
push
pop
adc
into
andl
pop
pop
cmp
scas
les
sub
call
je
jecxz
add
lea
xchg
into
jae
movsb
inc
ljmp
dec
adc
xchg
pusha
imul
jb
add
dec
add
out
repz
stc
fstpt
test
mov
mov
mov
add
fs
xchg
mov
pop
out
add
push
stc
imul
cmp
cmp
out
ljmp
sti
pushf
inc
cmovno
int
add
dec
sar
xchg
jne
repz
push
or
pop
call
xchg
and
out
lret
mov
mov
add
mov
aam
daa
in
nop
lea
xor
or
stos
pop
aad
and
ror
cmp
int3
or
push
mov
push
xchg
fmuls
lahf
mov
pop
lret
cli
out
das
and
mov
enter
arpl
sub
cmpsl
sti
sti
or
movb
enter
jno
mov
xchg
mov
inc
out
add
and
inc
push
xor
sbb
cmp
mov
push
pop
and
movsb
or
mov
mov
addr16
pop
add
sbb
mov
sub
pop
lret
mov
add
xorl
pop
in
inc
rcrl
jnp
sbb
es
push
mov
aaa
sahf
adc
mov
jmp
mov
cmpsb
and
std
inc
inc
mov
dec
and
das
and
test
in
imul
lcall
mov
cmp
or
pusha
add
in
ret
xlat
inc
mov
cld
sahf
iret
inc
push
das
icebp
sbb
das
or
insl
or
mov
ror
int3
out
sbb
arpl
jle
std
es
jl
roll
fcompl
dec
jne
loop
jne
sbb
repnz
push
add
lea
leave
or
adc
adc
dec
mov
add
push
jecxz
int3
imul
jns
mov
std
xor
pop
mov
pop
movsb
call
aad
lcall
pop
inc
sti
lret
jmp
add
xchg
test
xchg
mov
xchg
jb
xchg
adc
inc
stc
jmp
mov
test
mov
out
adc
or
lahf
sti
pop
xlat
mulb
call
adc
cwtl
pop
imul
cmc
shl
dec
repz
into
jmp
xchg
cwtl
mov
repz
xchg
sub
dec
xchg
movsb
pop
mov
cmp
sarb
bound
inc
inc
pop
xor
or
ljmp
and
dec
lret
fcomip
xorb
xchg
push
dec
xorb
mov
or
test
sbb
lcall
stos
inc
xchg
jo
outsb
test
push
fidivl
adc
xor
test
inc
and
mov
jg
scas
lea
scas
cltd
add
or
dec
test
aam
xchg
out
sub
test
and
sbb
out
dec
sub
jno
dec
stos
jg
lods
leave
adc
adc
xor
lods
imul
mov
sbb
sub
lods
icebp
adc
inc
push
cld
dec
push
sbb
sbb
inc
push
fidivs
lcall
push
jns
push
xchg
inc
mov
dec
sub
push
pop
repnz
imul
ss
or
icebp
jbe
shrb
test
sbb
sahf
jae
cs
aam
inc
pop
je
addr16
loope
adc
jl
fcomip
mov
inc
pop
rclb
and
sbb
push
dec
cmp
add
imul
mov
mov
mov
ljmp
dec
pop
cmp
movsb
sbb
inc
mov
and
stc
data16
mov
gs
adc
out
push
mov
ret
ljmp
dec
cmp
sbb
and
mov
or
lret
lock
xchg
les
js
lds
or
mov
test
inc
sbb
cmovl
fldenv
sahf
mov
mov
scas
or
inc
jmp
jne
out
xor
jae
sub
movsl
popf
lea
cmpl
jno
ds
add
mov
mov
push
data16
ss
sbb
push
inc
xchg
xchg
sbb
sub
lock
mov
sbb
sbb
dec
in
fisttps
sbb
in
iret
imul
inc
out
ret
rcl
aam
sbb
shrl
sbb
bound
repnz
stc
inc
daa
mov
popa
sbb
mov
jle
xchg
add
sbb
in
mov
inc
inc
pop
adc
mov
sti
inc
mov
ds
mov
mov
mov
mov
jecxz
stos
adc
orl
or
test
dec
ljmp
adc
stos
cmp
push
rcrb
xchg
sub
scas
rorb
or
mov
cmpsb
inc
cmovns
add
call
imulb
aad
push
aaa
xor
and
es
fcoml
add
inc
or
or
in
jae
mov
lods
adc
xor
lea
mov
adc
pusha
cltd
and
lods
rcrb
pop
ja
xor
cld
sbbl
imul
xor
mov
dec
rorb
cmpl
les
add
dec
or
mov
mov
and
mov
add
imul
fistps
lock
mov
movsb
ljmp
jne
sbb
mov
clc
lret
mov
shll
in
mov
imul
aad
add
roll
dec
imul
mov
dec
rol
lock
push
jnp
add
and
enter
jge
lds
pusha
xchg
loop
shlb
int
jp
repnz
dec
mov
lcall
jge
cli
push
xchg
add
cwtl
xor
in
iret
outsb
inc
adc
fcompl
loopne
jb
fcompl
dec
mov
add
hlt
call
ljmp
fdivr
sub
aas
andb
es
dec
arpl
out
jg
push
rorl
popf
icebp
sti
rcll
and
cmc
xor
xor
cmp
sub
or
and
dec
fisubrs
stos
jmp
jnp
pushf
test
or
mov
dec
cmp
rolb
and
rorb
mov
iret
mov
push
inc
aas
cmpsb
inc
movl
sbb
sbb
shlb
cvtps2pd
les
push
adcb
lret
mov
inc
cmc
xchg
jge
mov
jb
cmpsl
push
lock
lea
dec
aas
fadds
sbb
dec
ss
aam
orb
pop
cmp
cld
shr
lahf
dec
sub
lret
test
mov
aam
test
pop
push
xchg
es
pop
dec
fisttpll
es
lret
das
jmp
sbb
pop
cmp
jp
jl
or
xor
sub
pop
aam
adc
cmpsl
divb
mov
inc
popf
aad
lods
inc
sub
mov
mov
jae
xor
mov
fildl
dec
repz
ds
push
aaa
xor
insl
test
out
addr16
mov
lcall
or
jae
push
sbb
push
mov
mov
jae
lahf
je
ret
dec
mov
div
loope
es
pop
jge
xor
pop
push
xor
orl
push
fmull
xchg
pop
mov
mov
xchg
mov
test
mov
in
nop
aas
pop
push
mov
les
jmp
adc
jecxz
lock
ja
loopne
fs
pop
or
lcall
out
notl
xchg
scas
xor
arpl
gs
jnp
cwtl
and
cmp
mov
idivl
xchg
xor
sbbl
lods
or
mov
lods
sbbl
sub
std
mov
scas
das
fisttpl
mov
movsb
test
or
jp
inc
dec
push
dec
mov
mov
inc
push
aas
aad
ret
and
cmp
lret
cltd
dec
pop
pop
out
in
lods
inc
adc
push
popf
and
test
xchg
and
mov
and
xchg
cmp
cmp
lock
fsubrl
incb
mov
lret
and
mov
pushf
fdivp
or
ret
xchg
mov
cld
xchg
cmpsl
cltd
loope
ljmp
xor
mov
pop
push
adc
cltd
sbb
outsl
aaa
and
sub
inc
or
lret
mov
ss
add
pop
xor
push
inc
rcl
aam
not
fists
pop
addb
mov
inc
outsl
add
out
imul
xchg
daa
xchg
add
sbb
push
cmp
push
add
movsb
cmp
notb
movsl
cmp
push
in
mov
ljmp
mov
pop
push
add
sbbl
sub
jns
std
or
jo
cli
cli
fs
jns
inc
ds
add
les
jo
int3
rorb
fstpl
popa
jnp
sub
sub
or
jo
lea
mov
mov
pop
pop
fstpl
push
ja,pt
jl
mov
out
cmpsb
lds
and
outsl
sahf
xlat
aam
dec
mov
mov
and
mov
xor
pop
and
adc
test
out
subb
js
mov
lahf
loope
xor
xchg
les
and
pop
in
xor
in
fimull
add
sbb
in
adc
dec
push
or
or
fcmovne
popf
adc
or
add
xchg
fs
imul
es
gs
fnstsw
rclb
in
jmp
arpl
lret
and
pushf
int
imul
mov
and
pop
pushf
pop
loope
es
test
pop
adc
xor
mov
pop
jbe
not
in
mov
inc
inc
lret
das
or
mov
outsl
cmp
lret
loopne
insl
xor
fstl
aas
sbb
xor
test
push
sbb
xchg
fcoms
xor
cs
jle
das
ljmp
insl
pop
xchg
test
mov
shlb
test
dec
out
repnz
dec
sbb
insl
ds
jb
mov
xor
and
nop
jns
fsts
repnz
adc
lret
aad
call
shll
push
ret
push
push
imul
xchg
mov
push
and
push
fnsave
add
jp
stc
test
lods
dec
imul
out
aam
dec
push
xchg
outsb
cltd
mov
call
pushf
int
mov
xor
and
xlat
mov
fwait
jo
xchg
in
cmpsl
mov
adc
pop
cmp
pop
push
movsl
test
pushl
roll
aam
test
out
xchg
and
sbb
out
inc
inc
mov
dec
or
lods
add
inc
xor
jge
hlt
popf
mov
jns
test
addb
test
push
mov
xor
movsb
in
cmp
xchg
cmp
push
shrl
fcmovbe
mov
and
xchg
aaa
test
sahf
or
addr16
mov
sub
into
icebp
sbb
imul
cli
jp
mov
inc
sub
popl
mov
jo
jl
inc
ds
jmp
or
push
inc
cld
and
jg
push
test
cmpsb
cltd
daa
xchg
into
shlb
inc
stos
jae
and
mov
rol
jae
in
pusha
jmp
jnp
rcll
inc
ljmp
inc
jns
pushf
out
pop
mov
call
jno
dec
jg
jae
aad
bound
outsl
mov
sbb
sar
push
ja
push
cs
adc
inc
dec
aad
jb
stos
mov
mov
into
bound
sbbl
ret
mov
insb
dec
div
or
xchg
adc
xor
gs
icebp
int3
push
ja
scas
push
insb
loop
les
int3
adc
jne
xchg
mov
mov
jne
inc
and
lret
scas
out
push
mov
adc
mov
movsb
pop
incl
or
push
nop
push
pop
lods
or
mov
push
repnz
sahf
jbe
adc
dec
dec
xchg
cld
push
and
fcmovbe
popf
sarl
test
rorl
mov
sub
aas
and
rclb
inc
dec
pop
and
inc
lock
inc
fistpll
pop
das
sub
shlb
dec
sbb
xchg
ja
pusha
mov
das
xchg
xchg
test
xor
push
ds
adc
nop
xor
jb
cli
aam
xchg
xchg
ljmp
sub
push
cmpsl
and
mov
cmp
stos
mov
scas
mov
mov
adc
fs
movsb
call
sub
xchg
mov
mov
xchg
pop
nop
data16
mov
xchg
or
inc
sbb
mov
inc
into
jle
fs
and
pop
xor
insb
mov
gs
es
stc
mov
pop
test
ret
inc
rorb
mov
fwait
movb
mov
add
pop
cmp
shl
int
ds
ljmp
inc
push
mov
scas
mov
or
fsub
sub
test
push
cmp
jp
inc
clc
jp
pushf
ja
mov
ss
iret
xor
sub
int3
out
addl
repz
add
mov
jp
adc
rol
xor
popf
mov
push
leave
pop
add
mov
lret
mov
or
pop
cltd
sbb
push
xlat
js
test
aad
sbb
jl
xorb
sub
loope
fcmovne
push
mov
adcl
movsb
fs
aam
and
scas
mov
jmp
movsb
rcll
xchg
lds
push
dec
test
xchg
push
or
jno
mov
pop
sbbb
out
pop
mov
test
add
or
mov
nop
xor
fcmovu
xchg
jbe
or
sbb
cmpsl
sub
or
sub
popf
and
sbb
cmp
outsb
jb
push
and
and
inc
lods
stc
stos
xchg
pushf
xchg
or
repz
xor
sub
xchg
in
stos
rcl
add
in
std
dec
sarl
repnz
cmp
cmp
fidivs
aas
mov
inc
in
pusha
cld
fs
mov
pop
mov
push
out
insl
sub
in
or
nop
nop
jg
out
or
xor
pop
xchg
mov
xchg
mov
in
jo
mov
xchg
mov
mov
std
daa
lret
fdivr
dec
in
inc
pop
sahf
ja
out
aad
mov
leave
insl
addr16
cmp
add
and
push
xchg
mov
push
std
jnp
push
mov
inc
fnstenv
or
push
dec
and
divl
mov
faddp
cmpsl
clc
andb
cmpsl
scas
in
sarb
add
add
pop
xchg
sub
lds
in
pop
test
and
insl
sahf
pop
ds
mov
lahf
popa
sub
mov
dec
dec
and
mov
push
ja
pop
mov
and
rcll
lods
sbbb
lods
aas
mov
jecxz
adc
dec
mov
cli
cli
iret
in
inc
data16
scas
scas
insb
mov
xchg
int3
mov
repz
hlt
loope
lods
stos
inc
jmp
and
orl
aas
lret
outsb
je
jno
lods
aaa
push
test
mov
jnp
addl
cmpsl
int
and
orb
imul
imul
cmpsl
sub
insb
sbb
jo
iret
scas
mov
aas
xlat
fsubrl
mov
mov
add
mov
mov
mov
insb
into
xchg
jae
jp
or
mov
adc
cwtl
push
sbb
aad
inc
lds
std
mov
and
repnz
bound
fstps
pusha
clc
fbld
loope
xchg
xchg
push
sbb
inc
add
add
and
xchg
rolb
ss
rcrl
mov
sbb
popa
sbb
inc
mov
mov
lret
pop
push
fs
arpl
mov
imul
loope
frstor
leave
test
inc
xchg
out
jl
xchg
sbb
mov
mov
pop
mov
xchg
into
xchg
mov
ss
cmc
cli
jecxz
pop
mov
ja
ds
push
rolb
addb
and
sbb
add
pop
mov
mov
bound
std
adc
testb
fs
leave
movsl
aam
mov
jecxz
mull
repz
inc
push
outsl
xor
jne
inc
outsl
pop
aad
outsl
mov
ds
xor
push
pusha
aaa
popa
push
add
pushf
push
pop
xlat
xor
add
test
adc
in
aad
cld
mov
dec
xchg
jl
test
xor
sbb
mov
sti
jbe
cltd
push
js
jge
into
dec
lods
sti
mov
push
jae
xchg
hlt
push
bound
lcall
cld
inc
repz
inc
clc
imul
arpl
repnz
shlb
outsl
lret
pop
adc
sahf
push
fwait
std
push
orb
or
push
icebp
jmp
jge
dec
jle
into
xchg
or
mov
cmp
cld
std
sub
pop
clc
pushf
insl
movsb
pop
or
xor
push
pushl
push
inc
mov
in
xorb
aam
fmulp
sub
andl
ss
and
lods
test
pop
xor
pop
repnz
fcomip
repz
outsl
cwtl
sarb
dec
lret
ss
subb
jmp
jmp
shr
xchg
movsl
data16
push
sub
cmpsl
fistpl
add
jo
int
xchg
dec
adc
lret
mov
or
xor
jl
xchg
lds
inc
in
mov
in
push
push
ja
fisttpl
gs
xchg
mov
cwtl
loopne
scas
cmpsb
and
jbe
cmp
fldln2
xrelease
lahf
xor
cmp
clc
in
js
dec
mov
lret
inc
pop
mov
scas
ret
gs
and
lock
inc
mov
adc
mov
addr16
push
adcb
add
cmc
addr16
scas
adcl
sbb
xchg
iret
movsl
jb
add
dec
ja
or
adc
bound
adc
cmc
dec
push
xor
pushf
and
cmp
push
mov
inc
stc
adc
aaa
xor
data16
shlb
and
ja
and
mov
xchg
mov
fs
push
js
mov
aas
pop
arpl
push
push
inc
or
out
pop
cmp
call
and
dec
cmpsb
out
inc
insl
inc
xchg
pop
pop
xchg
pusha
add
js
mov
mov
jb
iret
or
adc
iret
imul
dec
int
xor
scas
cs
xchg
add
jecxz
pop
push
loopw
hlt
lock
repz
inc
add
mov
inc
movsl
movsb
leave
imul
je
fcom
jp
out
test
pop
sub
rcrl
lcall
or
call
clc
in
mov
std
pop
pop
mov
adc
insb
loop
idivl
pop
sub
cmp
out
fcomi
cmpsl
pop
lods
test
cld
jns,pt
cmc
adc
jno
out
mov
dec
movsl
bound
icebp
inc
test
outsb
xchg
cltd
pop
imul
nop
jle
ss
mov
and
dec
xchg
add
dec
and
rorb
jbe
mov
fisubs
test
es
mov
ss
push
lcall
cltd
nop
insb
adc
cmp
jae
movsl
sbb
dec
pop
xchg
push
or
xlat
arpl
add
aas
xchg
sub
mov
in
push
pushf
mov
jmp
in
inc
hlt
rclb
adc
adc
sbb
test
pop
pop
test
repnz
popf
mov
pop
ljmp
xlat
pop
or
fiaddl
sarl
mov
and
mov
xchg
hlt
dec
sbb
sub
jne
jmp
in
jge
shr
xor
cmp
daa
mov
popa
test
adc
movsl
ret
inc
int3
imul
push
xchg
addr16
jp
xchg
xor
adc
push
and
movsl
out
mov
sub
jl
clc
push
stc
xor
dec
je
shr
das
shlb
jp
aad
stc
popf
adc
sub
fldenv
mov
pop
add
mov
in
xchg
cltd
es
inc
imul
push
stos
fisttpll
xchg
xchg
stos
ds
jne
mov
cmpsb
pop
fwait
dec
inc
mov
imul
pop
xchg
pusha
ljmp
mov
mov
js
ja
push
lea
shl
gs
les
push
inc
dec
or
mov
pusha
push
and
jl
push
aam
imul
pop
dec
stos
pop
push
jmp
xchg
jecxz
xchg
add
sbb
xchg
scas
jp
inc
clc
in
dec
jmp
jecxz
out
into
lcall
pop
fdiv
sub
test
aaa
jno
repz
aaa
mov
mov
jae
fdivs
dec
push
cmp
pop
mov
jg
dec
xchg
in
rolb
sarl
cwtl
cli
imul
jge
mov
clc
stos
xor
adc
jne
sbb
mov
sbb
adc
cs
add
xchg
fisttpll
inc
addr16
rolb
ret
cli
xor
ret
add
test
cmpsl
or
and
or
inc
mov
mov
jbe
inc
mov
inc
jecxz
stos
mov
notl
movsb
cmp
scas
cmpsl
nop
pusha
aad
test
and
cltd
int
sub
xchg
xchg
mov
loop
adc
sbb
prefetcht2
adc
daa
xor
pushf
mov
mov
sub
shl
inc
mov
mov
jo
ret
jg
test
pop
and
inc
into
mov
filds
arpl
pusha
rcrl
adc
fiadds
mov
fidivrs
stos
pushf
outsl
pop
das
push
into
xchg
fldenv
dec
sub
scas
pushf
and
pop
mov
jg
xchg
dec
cs
test
dec
test
mov
andnps
xchg
add
jns
push
cmp
push
cmpsl
fcomps
lods
cmpl
imul
and
fisttpll
mov
xlat
iret
gs
stos
daa
cmpsb
cwtl
cli
lea
adc
jo
push
outsb
inc
xchg
int3
xchg
cmp
mov
dec
ret
shlb
xchg
test
sbb
ficomps
cmp
jns
inc
int
mov
pop
mov
daa
mov
clc
lods
in
je
adc
enter
fistl
gs
cmp
bound
cmp
adc
cmp
sub
jb
and
add
cmp
data16
jo
cmp
xchg
pop
mov
test
mov
inc
jle
lret
sub
jge
lock
xchg
rclb
push
or
test
xor
add
movsb
inc
add
aaa
loopne
push
sub
xor
jb
out
in
test
cmpsl
pop
aam
lret
addr16
aas
lods
mov
fwait
sarl
pushf
iret
or
aaa
mov
loop
mov
insb
data16
jo
mov
pop
cltd
sarb
sbbl
mov
sub
pusha
int
mov
pop
ret
lcall
mov
cwtl
fsub
jae
sbb
in
push
mov
or
in
push
int
add
push
mov
call
mov
mov
incl
in
jnp
lret
cmp
inc
dec
adc
fildll
dec
xor
je
sahf
sbb
xor
aas
enter
pop
xor
push
jge
push
jbe
rol
sbb
mov
fnstsw
fdivrs
lcall
repnz
stos
adc
jno
push
inc
push
jnp
nop
roll
sti
mov
jl
mov
xchg
add
add
jo
outsl
xor
loope,pn
xor
sbb
stos
xor
xor
leave
pop
push
andb
pusha
sbb
adc
nop
std
call
xchg
adc
sub
push
sub
cmp
ret
xchg
or
adc
fdivs
sub
sbb
or
lea
xor
dec
sbb
mov
or
xchg
pop
shlb
pop
mov
cmp
add
inc
divl
mov
ljmp
int
into
xchg
dec
push
mov
inc
xchg
andl
pushf
jl
and
cltd
iret
xor
and
sbbb
lret
xchg
je
cmp
xor
gs
xor
cmp
fsubrl
dec
sbb
movsl
flds
xchg
xchg
add
fdivrs
cmp
ret
xchg
xchg
sbb
repnz
mov
js
sbb
jp
jp
cmpsl
pop
push
filds
xchg
pop
mov
add
inc
xchg
add
push
cmc
cs
into
jno
lret
pop
xor
fs
pusha
push
pop
clc
insl
jne
cmp
sti
dec
ljmp
push
neg
aas
xchg
cmpsl
scas
cmp
lahf
mov
or
cmp
imul
jecxz
stc
push
in
fs
mov
xchg
xchg
lods
adc
and
add
fimuls
aad
scas
test
mov
dec
xor
pop
orb
mov
fdivrs
or
mov
jnp
sub
test
push
aaa
scas
fsubs
mov
xlat
jae
fs
loop
je
pop
hlt
or
ret
mov
arpl
cmp
mov
xor
fwait
je
inc
cmp
fcmovnb
adc
sbb
adc
mov
test
add
iret
adc
xorb
ficoms
test
leave
popa
mov
scas
xlat
imul
bnd
lea
push
pop
gs
dec
movsb
popf
imul
insl
jecxz
gs
pop
lcall
mov
fbstp
mov
dec
xor
push
inc
test
xchg
xor
add
mov
mov
pop
int3
fisubl
and
imul
mov
lret
repz
addr16
cli
dec
hlt
orl
pop
testl
mov
xchg
outsb
data16
test
out
insl
pushf
call
pop
mov
push
ss
sbb
sahf
jns
test
pop
cltd
clc
add
add
scas
stos
out
dec
sub
pop
lds
ljmp
out
in
push
adc
xor
je
xchg
cmp
pop
fld
jp
pop
lahf
adc
push
mov
popf
inc
mov
and
or
loope
push
jno
sti
dec
lahf
pop
add
ja
jmp
enter
imul
fcoml
xor
nop
je
jp
lret
xchg
xor
sub
inc
out
in
int
in
test
add
push
js
imull
lret
fsubrl
loope
leave
orl
sbb
popf
push
mov
std
jne
adc
xor
cli
rol
sub
xorb
xor
xor
arpl
testl
hlt
fs
xbegin
inc
popf
sub
icebp
xor
mov
xchg
jo
les
leave
jmp
loop
loop
test
pop
mov
test
repnz
pop
in
inc
fidivrl
test
addb
adc
mov
and
lods
out
dec
andb
jno
inc
clc
sub
hlt
add
popa
xchg
inc
out
dec
outsl
cmpsb
mov
jae
xchg
pop
mov
and
mov
clc
mov
repnz
sub
push
jp
mov
loope
sbb
jge
mov
data16
add
cmpl
lock
clc
iret
xchg
cmc
sub
push
fsubrs
cli
movsl
stc
das
xchg
jb
lret
pop
into
mov
add
sbb
mov
mov
pop
paddusb
test
rclb
dec
das
cs
adc
aad
imul
mov
movb
jno
fimuls
jp
sbb
sbb
and
mov
cltd
pop
dec
jmp
sub
frstor
lods
enter
sbb
ds
out
mov
hlt
jnp
push
stos
xchg
repz
out
or
daa
jmp
mov
mov
xor
flds
rcll
sbb
xor
sbb
mov
inc
int3
and
xchg
sbb
lret
dec
xchg
call
data16
mov
fld1
loope
shlb
popa
add
xchg
push
and
push
pop
ja
loop
mov
pop
cmpsb
and
cmp
lds
cmp
imul
popf
xor
xor
clc
js
sbb
mov
pop
lods
sbb
xchg
add
test
mov
pop
lcall
sbb
cmp
mov
and
into
fiaddl
pop
int
xlat
mov
push
ds
fdivrp
xchg
mov
sti
jae
sbb
aad
lret
mov
aaa
shl
jmp
xchg
insl
icebp
shlb
sbb
cmpsb
sub
dec
adc
inc
scas
fwait
in
pop
xor
mov
outsl
mov
mov
sub
push
mov
mov
cltd
test
stc
movsl
sub
xlat
sbb
subb
fimull
add
push
fiaddl
or
aaa
repnz
insb
aam
mov
test
fimuls
scas
test
xor
repnz
stc
mov
push
aam
in
sub
stos
shll
and
sbb
dec
cmpsl
cmp
adc
mov
sbb
cmp
cmp
rcrl
out
psrlq
push
push
lret
test
xchg
into
popa
in
mov
pop
cli
and
ret
cwtl
mov
jno
xor
jae
adc
hlt
xchg
push
mov
div
aam
int
pop
aaa
dec
pop
and
loopne
enter
into
ss
jo
sub
jl
imul
xchg
adc
aaa
inc
inc
test
xchg
lret
aas
pop
adc
pop
lods
add
addr16
mov
nop
aaa
push
insb
and
orl
aas
xor
lcall
cmp
push
inc
and
mov
movl
imul
movsl
mov
xchg
jg
fwait
loop,pt
mov
lds
les
lods
cmp
ja
shrl
mov
xor
cmpl
idivb
and
stc
mov
popa
mov
scas
jbe
aam
inc
cmp
shlb
popf
cmp
rclb
mov
push
mov
cmpl
dec
ffree
leave
dec
aad
xchg
dec
outsl
clc
mov
cltd
cmp
std
mov
cld
std
cmpsb
sub
lahf
imul
push
mov
ja
into
cmpsb
sbb
adc
int3
or
add
fcompl
pusha
test
fcomp
div
jle
lods
adcb
imul
aaa
push
jecxz
out
fidivs
pop
ds
std
sbb
lret
ss
lcall
addr16
adc
push
mov
push
stos
dec
push
aaa
add
out
and
dec
into
mov
inc
ret
repz
in
adc
sub
xchg
outsb
mov
fiaddl
js
stos
sbb
aaa
stos
sub
fwait
or
inc
scas
cwtl
movsl
pop
mov
pandn
mov
int
in
jae
repz
test
fidivs
push
or
mov
adc
rorl
mov
jne
adc
mov
pop
mov
and
pop
pop
fsubrl
movsl
int3
inc
cwtl
inc
jne
xlat
int3
out
out
cmp
sarl
out
adc
mov
or
jmp
mov
xlat
jp
fcomp
sbb
mov
adc
sub
rclb
xor
push
sbb
mov
in
sti
fwait
popf
lret
lea
push
lock
ret
notb
pop
sub
adc
sub
mov
pushf
push
jmp
inc
jnp
inc
sub
jp
addr16
xor
clc
sub
insb
je
movsl
dec
in
mov
push
cmp
daa
adcb
adc
or
outsl
jo
cmpsl
fdivrs
popl
es
sarb
repnz
ds
xor
add
mov
leave
jp
mov
push
push
mov
xor
mov
lods
in
cltd
sarl
out
lret
push
es
dec
mov
or
xchg
cmp
data16
loopnew
clc
lret
pop
imul
or
pop
pushl
dec
sub
je
imul
push
lahf
and
or
adc
dec
pop
jp
mov
mov
std
cmpsb
dec
adc
cmp
mov
iret
mov
mov
mov
stos
lods
mov
stos
mov
adc
push
cld
push
mov
jae
cmc
repnz
mov
or
aam
scas
xchg
add
pop
insl
cmpsl
cmp
lds
sbb
ja
pushf
mov
stos
mov
xor
pop
fdivrs
xchg
adc
movsl
out
adc
push
in
stos
push
mov
in
jecxz
mov
mov
shrb
sti
lret
movb
aaa
into
lret
or
add
std
in
inc
xchg
sub
xor
inc
push
jae
notb
ss
push
or
pop
cltd
cmpsb
inc
test
xchg
lods
mov
cltd
add
jmp
loop
jmp
inc
popf
int3
or
arpl
and
add
imul
cvttps2pi
int3
insl
cli
scas
fcmovbe
loope
test
inc
mov
jg
inc
jbe
sarb
cs
outsb
fmull
xor
mov
mov
xchg
loop
je
leave
push
repz
bound
stc
popa
mov
popa
lret
rcl
xorl
ret
pop
std
je
jae
mov
outsb
sub
xor
sbb
jbe
dec
jns
or
arpl
mov
mov
jno
xchg
sbb
notl
mov
scas
inc
dec
xchg
loopne
jle
nop
jb
outsb
mov
jg
cmp
xchg
andl
fs
mov
out
pop
mov
gs
mov
fbld
cmp
adc
sub
int
mov
jo
ss
pop
icebp
stc
icebp
sbb
mov
cmp
int
mov
xor
pop
popa
jo
ret
fnsave
movaps
jecxz
es
in
add
repnz
xchg
sub
fstl
adcb
pop
mov
lods
int
orl
mov
xor
fildll
call
sub
mov
jl
arpl
in
sarb
clc
or
in
lock
add
and
jl
cmp
sbb
adc
xor
std
add
addr16
adc
ja
pop
pop
nop
hlt
js
push
loopne
push
push
data16
sub
mov
cmpsl
inc
and
cmp
mov
jne
or
jno
xchg
mov
les
pop
xchg
sbb
dec
push
out
std
int
adc
cmpsb
dec
pop
ret
stc
mov
inc
cmc
cld
lea
js
adc
adc
test
arpl
test
mov
xchg
test
add
ss
inc
push
dec
sub
int3
sbb
outsb
cmp
xor
push
icebp
dec
add
mov
insl
push
fdivrl
ret
bound
inc
dec
push
icebp
das
call
jns
sub
mov
mov
pushf
insb
sub
movsb
rorl
fs
adc
movl
sbb
fsub
ja
jmp
popf
movsl
dec
out
arpl
stos
nop
add
mov
sarl
jns
inc
arpl
aaa
jle
dec
push
cmpb
add
pop
sub
mov
xor
jbe
cltd
mov
mov
dec
xor
stos
or
cmp
inc
jmp
in
cmp
xchg
and
pop
ret
outsl
fdivrs
and
cmc
std
iret
mov
iret
lret
xchg
into
les
sbb
xor
imul
sti
cmpb
fildll
mov
mov
dec
xor
mov
xchg
sbb
mov
jae
insb
mov
cmp
in
adc
pop
inc
shr
and
out
movl
mov
pop
inc
stos
rcl
xchg
ja
mov
pusha
xchg
imull
jecxz
mov
or
scas
notb
orl
test
shr
dec
loop
movl
sub
jnp
xlat
adc
adc
pop
loopne
mov
sbb
xor
mov
imul
les
into
sbbl
add
std
xorb
sbb
jge,pt
inc
dec
out
jbe
std
sub
fiadds
lods
int3
adc
mov
or
js
jecxz
sub
jg
sti
inc
cmc
pop
pop
sub
sub
leave
and
xchg
push
pop
leave
adc
pop
pop
hlt
insl
enter
icebp
test
ljmp
mov
fstpt
lret
aaa
mov
dec
push
scas
cmp
mov
cli
dec
aad
and
mov
mov
cmpsb
push
ss
sub
dec
mov
xor
test
pop
cmp
out
mov
ljmp
arpl
jge
xchg
pop
lahf
fidivs
shlb
cmp
test
ss
addl
jbe
outsl
fldl
or
jmp
xchg
ss
out
je
shrb
jb
push
xchg
roll
adc
cmp
xchg
int
loopne
inc
mov
adc
sbb
pop
inc
cmc
lret
dec
dec
hlt
inc
nop
add
pusha
mov
push
mov
in
repnz
sahf
fs
rclb
rorl
lcall
add
cmpsl
cs
mov
xor
sbb
data16
mov
lcall
cmp
jle
shll
out
sub
lret
push
imul
ljmp
jbe
xor
daa
and
jbe
xchg
xchg
jge
arpl
mov
enter
dec
dec
loope
out
xor
test
in
les
out
xchg
je,pn
mov
frstor
aaa
pushf
push
les
int3
dec
jbe
mov
pusha
testb
xchg
mov
inc
jge
push
xchg
jge
das
pop
fsubl
cltd
and
das
rclb
add
pop
cmp
jne
pusha
cmp
sbb
xor
mov
int
jg
inc
lock
jo
or
cmp
or
or
and
sbb
lods
pop
push
inc
sti
mov
mov
cmc
mov
sub
aad
js
inc
jmp
popf
rcrb
pop
dec
call
decl
jno
mov
push
test
jmp
push
mov
xchg
lcall
nop
jno
movsb
addr16
out
ljmp
or
sbb
je
lea
jb
add
mov
andb
in
adc
test
mov
mov
pusha
out
xchg
mov
popf
dec
cmp
xchg
push
bound
je
jecxz
inc
insl
lds
jbe
mov
call
clc
icebp
inc
or
aas
loop
je
cmpsb
push
mov
shrl
pop
sub
test
js
ret
sbb
bound
test
jbe
dec
jne
insl
jp
into
lret
or
ja
adc
lods
movsb
nop
lods
sub
cwtl
out
gs
cmp
mov
jnp
pop
add
xor
test
jbe
mov
fisttpll
pusha
inc
adc
push
xsha1
cmpsb
dec
cmpsl
push
adc
xchg
fisubs
bound
adc
mov
inc
jno
dec
aad
mov
pop
inc
daa
mov
into
fimuls
xchg
dec
out
mov
stc
flds
movsb
out
sarb
fwait
xchg
into
daa
adc
mov
jae
dec
sub
pop
jecxz
cwtl
jb
incb
fiadds
rclb
popf
dec
das
cmpsl
mov
jbe
daa
xchg
js
or
outsl
push
addr16
sbb
pop
shl
cmp
adc
sbb
xchg
cmp
mov
fdivr
fdivrl
jae
leave
cmp
pop
lods
movzbl
popa
js
ja
mov
stc
in
xchg
mov
cld
inc
sar
jge
enter
lcall
inc
scas
mov
orl
sub
push
sbb
pop
rorl
adc
daa
dec
hlt
lcall
loop
add
dec
cltd
scas
cli
movsl
inc
and
push
loope
aas
aam
xor
jae
clc
cmp
pop
cmp
subl
aam
in
inc
aad
iret
movsl
inc
loopne
push
sbb
leave
sbb
sbb
mov
sysexit
add
fsubrs
arpl
add
cmpsb
adc
or
scas
cmp
push
lea
icebp
jp
sbb
ja
dec
xchg
imul
cmp
cmpsb
sub
fiaddl
xor
jae
xchg
xor
mov
sti
add
out
inc
adc
in
jle
and
pop
push
lods
mov
gs
cmpsb
mov
movsl
test
lahf
mov
jl
inc
sbb
dec
adc
sbb
out
pop
and
in
stc
shrb
mov
dec
negb
lds
lret
call
es
lods
jns
add
lahf
pop
lahf
cmp
ljmp
dec
adc
outsl
cmp
int3
test
les
push
sub
mov
pop
ja
and
bound
jle
xchg
or
sbb
mov
sub
mov
mov
je
cmp
mov
adc
daa
cmpsl
fcom
clc
cmpsl
add
shrb
push
xchg
jns
pop
mov
cmp
push
and
cmp
mov
xchg
inc
adc
jo
add
push
daa
sub
loop
pop
bound
test
mov
xor
pop
xchg
aam
mov
shlb
es
xor
mov
addb
aas
push
push
push
das
xor
lea
ficomps
mov
mov
jo
pusha
cs
outsb
lods
or
fildl
cmp
fsin
sub
aas
jmp
pop
xchg
scas
stos
test
or
mov
pop
lcall
xchg
cli
ljmp
popf
xor
pop
xor
inc
je
fdivl
or
adcb
sbbl
add
xchg
int3
or
ret
or
pop
xchg
cmp
shrl
pop
fs
repnz
sub
sti
jg
xchg
sub
jp
outsl
mov
jb
dec
or
and
xchg
mov
clc
les
push
sbb
out
xorb
je
mov
dec
jmp
gs
mov
add
into
xor
cmp
into
and
mov
add
iret
insb
aas
and
arpl
cmc
stos
cmp
mov
jmp
xor
and
stos
aam
sbb
popf
dec
ljmp
cmc
xor
or
mov
xchg
loop
insb
add
lock
addr16
decl
sbb
icebp
int3
ljmp
dec
icebp
es
mov
pop
pop
dec
xchg
adc
jo
sub
xor
pop
aaa
and
popf
xor
cs
imul
push
xchg
loopne
cmp
fimuls
mov
sub
loopne
pusha
outsb
outsl
pop
fcmovnbe
mov
jmp
pop
cltd
push
cmp
cwtl
iret
inc
ffree
insb
add
xlat
subb
or
dec
dec
test
daa
pop
adc
movsb
jle
inc
or
stc
rorb
pop
test
dec
cmp
out
fs
jmp
int
inc
mov
sbb
xchg
fnsave
inc
push
inc
push
mov
out
dec
fs
sub
nop
imul
adc
cmp
jae
jge
lcall
jg
jl
pop
lods
xchg
int
hlt
dec
pop
mov
flds
xor
push
push
inc
incl
pop
push
mov
push
cmp
lods
jae
loope
dec
js
mov
sub
push
gs
rorb
mov
pop
popa
adc
or
xchg
je
push
outsb
nop
dec
add
mov
dec
or
sti
push
test
inc
pop
xchg
pop
push
hlt
loop
add
cltd
sbb
jl
bt
mov
mov
and
inc
push
cmpsl
jmp
out
push
mov
adc
repnz
and
ss
cmpsl
sbb
outsl
bnd
inc
inc
dec
sbb
cs
cmp
mov
addr16
push
fdivs
or
mov
aas
sbb
and
nop
sbb
mov
jb
cmp
mov
inc
rclb
shr
jns
sbb
xchg
rcr
and
jbe
push
xchg
das
test
idivl
movsb
mov
jmp
shll
out
in
mov
jns
push
dec
mov
sbb
out
xchg
mov
rcrb
push
or
test
mov
lods
into
mov
adc
lock
pop
dec
jg
mov
iret
in
fldcw
xor
cmp
and
or
fbld
lock
movb
stc
xor
jmp
xor
jp
testb
aas
add
fs
mov
cmp
adc
leave
cmp
cmp
and
sub
pop
ds
lret
pop
ret
add
and
in
loope
mov
ss
lods
test
jne
xorl
pop
out
pop
sub
shrb
pop
inc
jmp
testl
mov
xchg
test
sbb
sbb
mov
mov
or
movb
jnp
mov
mov
rcrl
repnz
ficompl
and
mov
add
fwait
mov
lret
add
xor
flds
aas
movsl
stc
pusha
xchg
test
xchg
sbb
inc
sbb
rorb
lds
mov
push
xchg
xchg
mov
lret
add
mov
jo
inc
inc
movsl
outsb
or
iret
pop
and
pop
xlat
xchg
inc
cmp
pushf
imul
push
in
xchg
shrl
lods
ret
inc
stc
pop
sub
mov
dec
mov
inc
push
iret
je
fcmove
outsl
cs
mov
mov
cld
dec
or
or
sbbb
lahf
fdivrl
cld
mov
mov
sub
std
xor
test
clc
xor
mov
jecxz
inc
scas
loope
lahf
pop
insl
in
test
pop
xor
es
js
pusha
ss
insb
outsb
xchg
xchg
cmc
insb
jne
xchg
sub
nop
cld
adc
ret
mov
pop
sub
xchg
add
jns
and
cld
idivl
out
mov
sbb
sti
aad
adc
cmc
xchg
nop
mov
xchg
adc
es
mov
add
fwait
gs
jmp
scas
adc
push
je
or
mov
mov
in
sbbb
scas
mov
stc
iret
pusha
sar
orl
push
adc
mov
notl
mov
xor
adc
call
ljmp
flds
inc
xor
inc
sub
xlat
xchg
sbb
mulb
testl
push
and
cmp
jl
icebp
mov
pop
and
xchg
push
js
add
fld1
dec
daa
ss
xchg
jge
pop
psubw
out
nop
int
cmc
push
aaa
mov
int
int
mov
add
ds
inc
icebp
aam
and
jecxz
xchg
ss
mov
push
push
fcomp
add
push
testl
stc
bound
push
inc
fwait
int
lret
mov
jl
inc
call
push
mov
jg
mov
inc
xchg
pop
stos
cmc
dec
xlat
adc
xchg
loopne
in
insb
mov
mov
call
push
push
or
and
fcmovb
cld
pusha
loop
outsl
arpl
dec
push
jnp
pop
pop
add
and
ja
sub
fldt
test
pop
rclb
out
mov
lods
in
movsl
ds
stos
jp
pop
fadds
scas
mov
lods
mov
inc
and
sbb
pop
ljmp
adc
testl
inc
add
mov
add
sub
lds
xchg
ret
dec
lea
lods
in
mov
in
bound
mov
ja
dec
dec
dec
insb
lods
adc
fdivl
xchg
inc
mov
dec
popf
test
dec
in
jmp
popf
aad
outsl
inc
mov
pop
and
xor
je
pushf
or
adc
jge
add
int3
clc
in
mov
push
push
and
mov
cmpb
cmc
push
adc
push
pop
jmp
mov
shl
dec
call
ret
movsl
cli
jae
imul
pop
lock
jmp
insl
out
test
fs
xchg
xchg
jo
sbb
dec
pop
sbbl
js
sbb
int
loope
fdivs
aam
push
or
jmp
xchg
cmp
sbb
or
shlb
cltd
xchg
lock
xchg
jno
lret
push
push
dec
mov
bt
js
fsubrl
pushf
js
mov
subl
imul
mov
push
inc
test
jmp
outsl
jne
in
sub
stos
cmp
iret
pop
xchg
sbb
mov
fsubr
bound
mov
rol
push
jle
push
daa
xorb
orl
mov
push
mov
push
lods
pushf
aaa
adc
dec
loop
jns
xlat
xchg
mov
sarb
int
mov
rcr
sahf
jae
mov
sti
cmpsb
out
sbb
dec
fucom
add
mov
mov
jl
jmp
and
mov
fimull
xor
push
mov
lahf
lods
loop
lods
adc
inc
pop
add
mov
xor
xchg
scas
lcall
out
call
pop
jo
xorps
ror
enter
inc
inc
cwtl
stos
iret
push
repz
adc
sub
arpl
mov
dec
rorb
fstpl
xor
sub
ljmp
cmpsl
das
push
xchg
inc
dec
cli
lock
cwtl
xchg
pop
push
lock
cwtl
lret
cmp
or
aas
popf
sahf
adc
lcall
mov
rcrl
mov
cmpb
dec
jne
lret
popf
loope
sub
mov
clc
andl
stos
jmp
int
insl
roll
sub
sbb
xor
cmp
jle
ficoms
popa
mov
dec
imul
jo
sti
xchg
outsl
push
testl
aad
mov
xchg
sbb
out
mov
xor
jge
enter
shrl
sbb
outsl
roll
mov
cmp
daa
rorl
iret
push
mov
iret
fcoml
and
push
mov
ss
fwait
sbb
sub
movsb
das
or
repnz
leave
lods
xor
out
adc
inc
cmpsb
bound
inc
sub
xchg
mov
sbb
movsb
or
hlt
push
mov
push
dec
lods
stos
and
movsb
mov
std
mov
cld
std
das
lret
divl
mov
addr16
dec
rclb
enter
jge
pop
pop
xchg
jne
push
add
loope
pop
xchg
outsl
sbb
sub
in
lcall
mov
sahf
pop
sub
call
mov
data16
or
jbe
out
add
jae
shll
jbe
inc
aaa
cmp
push
ja
imul
fdivs
mov
pop
popa
int3
sub
sub
sti
sbb
push
arpl
lret
pop
hlt
out
xorb
pop
lods
fnstenv
ret
mov
mov
xchg
cmp
sub
faddl
int3
iret
cmpsb
or
je
imul
sbb
xor
adc
push
cli
xchg
jns
bound
std
dec
push
push
mov
cmc
fs
call
mov
inc
sbb
mov
adc
ds
lods
into
nop
addps
xchg
aaa
cmpsb
jbe
out
movsb
jnp
ret
cli
loop
mov
dec
out
popf
dec
leave
mov
or
dec
xlat
ror
out
bound
je
jns
call
cmp
fimuls
loopne
out
sbb
arpl
pop
xor
and
xchg
cli
mov
test
mov
popf
pop
lcall
dec
scas
add
test
es
push
stos
and
adc
mov
or
xor
xchg
mov
mov
test
aad
push
in
sub
dec
subl
clc
jo
mov
push
lret
vpsubsw
into
cmp
in
sbb
ljmp
add
out
aaa
mov
clc
loope
push
or
mov
add
pop
adc
inc
jne
inc
push
aaa
imull
push
and
sub
jns
push
int3
les
movsb
mov
jge
lock
daa
jnp
rcll
or
cli
sub
dec
sub
or
pop
je
sub
fstl
and
fidivrl
rcrl
and
mov
jbe
or
insb
xchg
dec
or
out
jg
cmp
sbb
or
xchg
push
pop
setno
push
jne
sbb
rcll
adc
jbe
pop
repz
mov
sub
jbe
xor
ja
push
xor
xor
mov
into
sti
and
std
lcall
xor
aad
jl
mov
cmp
aam
push
push
mov
and
mov
xchg
shll
rcll
insl
rol
adc
std
add
add
jbe
out
je
sahf
dec
sbb
mov
cwtl
nop
push
mov
movsb
xlat
sbb
daa
push
test
test
imul
cmpsl
int3
fcoml
mov
push
inc
xor
sub
jecxz
inc
arpl
adc
sub
fsubl
leave
adc
push
mov
and
push
cmpsl
cmpsb
adc
mov
and
ss
sbb
in
stc
xchg
out
aam
idivl
in
aaa
imul
add
out
ror
in
mov
loope
add
cmc
push
mov
outsb
scas
push
out
test
jl
mov
jb
sub
jl
fiaddl
insb
sbb
pushf
ret
pop
ror
es
stos
inc
imul
pop
pop
loopne
cmp
jle
mov
test
sbb
add
cmp
cmpsl
xor
dec
repz
or
fs
sbb
push
xorl
lock
cmpsb
in
fwait
push
jbe
fwait
jno
loopne
jl
xchg
xchg
sub
mov
inc
dec
inc
or
leave
push
push
jge
inc
fcoms
adc
mov
sub
sub
stos
sbb
repz
lcall
loope
mov
arpl
xor
mov
mov
add
adc
cli
mov
adc
int3
mov
clc
push
push
add
jae
mov
ljmp
inc
test
add
pusha
fnstenv
mov
pushf
push
fstp
mov
das
sbbl
rorb
mov
xor
and
gs
arpl
add
xor
dec
and
pop
jp
pusha
push
push
mov
mov
mov
or
mov
cmp
xor
mov
adc
add
sub
aaa
dec
xchg
or
xor
xchg
aas
sti
xlat
scas
cld
mov
mov
sbb
xorl
or
sub
push
pop
mov
jl
xor
jne
cli
inc
nop
loope
insb
das
cmp
dec
mov
stos
cmp
dec
test
jno
es
pop
pop
jecxz
sarb
jl
lds
lods
mov
mov
mov
movsb
sbb
shlb
adc
repnz
mov
inc
popf
popa
call
inc
icebp
pop
or
orl
xchg
insb
fisubs
pop
cmp
sub
jmp
dec
or
dec
dec
mov
dec
push
xchg
dec
jb
cmp
and
cmp
jmp
sbb
push
add
cli
push
inc
mov
out
xchg
idivl
aam
popa
pushf
popf
cmp
fnstcw
dec
data16
int
aam
and
xchg
incb
pusha
xchg
fwait
sbb
add
sub
cld
test
push
cmpsl
test
jo
mov
addr16
out
aad
int3
shlb
stc
jmp
repz
xchg
jno
jl
aam
push
insb
cmp
push
and
lret
pushf
cwtl
jae
mov
sahf
ret
push
adc
cld
pop
bound
xchg
jecxz
je
loop
cmp
sbb
jecxz
sbb
mov
dec
mov
mov
sbb
insb
mov
fsubrs
and
mov
ljmp
add
stos
or
push
jl
in
mov
data16
ret
in
sbb
leave
jp
mov
daa
arpl
outsb
pop
sbb
add
cmpl
and
ja
sarl
popl
xchg
xchg
jle
sbb
clc
xor
mov
rcrb
fisubl
inc
add
lahf
sub
jo
push
push
fwait
sbb
jno
sbb
rcr
in
inc
jg
or
cmpb
xchg
scas
sbb
mov
fmull
adc
xor
insl
outsb
js
inc
xchg
xchg
xlat
mov
imul
pop
push
loope
cs
enter
pop
mov
push
cmp
iret
pushf
ljmp
push
pusha
clc
test
pop
pop
stc
aad
cmp
inc
in
jle
rclb
std
in
inc
psubd
inc
and
ljmp
je
insb
mov
xchg
pushf
xchg
hlt
sbb
out
sub
sub
test
imul
mov
jae
cmp
sbb
add
xor
imul
rorb
mov
dec
push
daa
and
inc
insl
and
jmp
test
and
stos
sub
push
and
push
aam
inc
cli
stos
mov
arpl
test
pop
fsubrs
dec
ja
sbb
sub
sbb
lods
mov
xchg
imul
insl
cmpsl
sbb
xchg
mov
xchg
inc
pop
and
fsubr
cmp
fcmovu
lds
clc
pop
cmc
pop
enter
xchg
sti
adc
mov
push
or
dec
icebp
cmp
subb
mov
cmpl
dec
sbb
push
mov
jle
rorb
lea
loope
jb
push
fcoml
cmp
loop
repnz
inc
push
mulb
and
push
and
hlt
and
or
mov
cmpb
sbb
cltd
into
call
cwtl
cmp
inc
mov
sbb
repnz
add
scas
mov
cmpsl
lea
mov
pop
xor
out
mov
add
cld
and
and
sti
aas
lea
aas
mov
pop
add
mov
in
xchg
sub
jbe,pt
sub
lret
lock
nop
or
ljmp
subb
fucomip
cmp
push
es
rolb
pop
cmp
orl
inc
pop
pop
add
mov
push
pcmpgtd
mov
jae
push
je
inc
mov
adc
hlt
sti
adc
lcall
dec
mov
push
in
fnsave
fstpt
inc
mov
out
or
in
iret
xlat
jns
jecxz
adc
into
je
pop
testl
pusha
add
xchg
std
call
jbe
cmp
inc
loop
pop
aad
xlat
dec
push
jg
in
stos
cli
and
xor
pop
push
push
into
mov
adc
cmp
mov
outsl
scas
bound
xor
pop
jl
ficompl
scas
aas
fcompl
fisubl
das
cwtl
or
je
pop
mov
nop
int
jno
lods
pusha
popa
mov
pusha
adcb
push
mov
jae
xchg
jp
shrl
push
test
call
fsubrp
scas
gs
rorb
orb
mov
cmp
js
into
arpl
mov
push
mov
sub
mov
cmp
cli
sub
mov
aaa
stc
addr16
fdivp
xchg
shl
push
dec
xchg
jno
mov
jle
loop
jns
rorb
push
pushf
movsl
inc
and
jbe
xor
lods
jle
repz
lret
into
inc
lods
ja
fs
dec
adc
sbbl
add
inc
ja
and
mov
xchg
cmp
and
js
test
fldcw
mov
imul
xchg
xor
and
aas
fnstenv
orl
cwtl
incb
sbb
lods
insb
sbb
rcrl
push
mov
gs
pushf
nop
xchg
mov
cmpsb
filds
jl
pop
inc
cmp
fwait
shlb
cmc
cs
push
push
inc
adc
xchg
dec
mov
test
std
ja
decb
jno
mov
roll
test
pop
es
mov
adc
popa
shrb
stos
push
mov
xchg
mov
aas
pop
leave
mov
inc
jmp
aaa
dec
adc
xor
ret
orl
dec
sub
hlt
movsl
dec
push
clc
jns
mov
add
adc
dec
fildl
dec
mov
jno
cmp
mulb
and
mov
cwtl
data16
popf
pop
and
in
add
lock
lock
xor
cwtl
or
xor
shr
push
cmp
push
cs
push
pop
jno
adc
sbb
adc
sub
sbb
ficomps
and
and
ljmp
test
sub
dec
xor
or
or
mov
insl
fildll
in
int3
testb
outsb
cmpsb
in
out
mov
pop
std
push
fsubrs
jae
push
rsqrtps
clc
scas
sbb
pop
jbe
cs
push
das
inc
shl
adc
lahf
cmc
xchg
add
js
ror
or
lea
dec
push
add
jb
lods
mov
xor
cmp
shrb
inc
xor
outsl
repnz
push
rorb
ret
divl
xchg
cmp
insb
push
jmp
test
inc
outsl
pop
stc
lods
xor
and
cmp
out
pop
daa
xlat
les
add
adc
sub
pop
dec
imul
ds
pop
enter
fdivs
aas
loopne
out
cwtl
test
mov
sti
loop
pusha
popf
sti
fs
jbe
inc
add
pusha
int
sar
out
daa
lea
add
xchg
xchg
fistpll
add
fidivl
xor
scas
les
xlat
inc
pop
xchg
inc
aaa
rcll
dec
mov
scas
insl
jle
pop
into
test
ret
test
popf
pop
idiv
movsl
out
sub
dec
out
repnz
adc
and
popf
fists
push
push
sbb
dec
jmp
jl
and
rclb
ja
jnp
scas
loop
dec
jl
js
ret
cld
pop
lret
inc
mov
pop
out
add
xchg
shlb
mov
sbb
push
mov
sbb
mov
mov
cltd
mov
xchg
ret
xor
jg
pop
popa
scas
mov
sbb
shrl
mov
inc
inc
pop
mov
cs
sub
scas
sub
sub
push
sub
pop
cld
sub
adc
sarl
scas
popf
out
cli
or
andb
std
sbb
mov
xchg
jecxz
lods
mulb
xchg
andl
aad
cld
lahf
mov
add
push
or
sub
gs
popf
mov
orl
movsl
loope
bound
adc
xor
adc
lods
out
and
and
xor
sahf
mov
frstor
xor
les
pop
xchg
aaa
pop
cmp
mulb
jo
adc
enter
enter
loopne
imul
in
jne
int
xchg
xor
fs
mov
cmp
pop
dec
xor
sbb
jecxz
mov
jle
push
jno
in
mov
inc
sub
leave
or
mov
call
xor
and
cmc
add
fdivrs
and
sahf
fs
sub
leave
mov
xchg
pop
lock
popa
pop
pushw
add
inc
jae
pushf
add
jge
ficoml
or
and
leave
enter
mov
jle
xor
adc
iret
and
ja
sub
bound
xor
sti
xchg
or
xor
jecxz
or
fwait
jno
push
mov
int
ret
popa
insl
add
test
lcall
fidivrl
push
lret
stos
inc
stc
and
fwait
mov
cli
shrb
imul
das
push
push
les
pop
fbstp
mov
mov
xor
scas
ss
push
ficoms
lahf
stc
into
or
or
pop
cmp
sub
mov
scas
in
mov
test
xchg
dec
in
sbb
pushf
test
lahf
cmpsl
test
psubusb
jno
adc
xchg
xor
mov
inc
xchg
dec
xchg
mov
mov
or
xchg
out
inc
push
push
fimuls
insl
dec
or
andl
adc
shl
dec
notl
fldt
jne
hlt
into
jnp
inc
mov
dec
mov
dec
sbb
stos
jp
inc
pop
add
push
fwait
cli
out
cli
xchg
bound
cltd
sub
push
data16
cwtl
std
aad
jmp
mov
jae
push
inc
pop
scas
filds
movsb
mov
cmp
hlt
mov
mov
lods
dec
sbb
inc
inc
out
mov
cmp
ja
lea
movsl
add
adc
and
pmuludq
test
pushf
popa
mov
ficompl
inc
icebp
jg
int
jo
jae
cmp
in
push
test
sbb
aas
dec
jle
push
add
lock
lcall
ja
cmc
iret
iret
call
repz
pop
mull
stos
stos
into
mov
gs
add
mov
out
movsl
mov
mov
sub
sbb
and
jo
loopne
sahf
mov
sbb
jge
test
push
mov
push
test
shlb
js
mov
jmp
lock
sub
pop
int
inc
dec
das
addr16
ret
xchg
ret
scas
test
jg
ljmp
shrl
movsl
pusha
rol
dec
sub
test
in
mov
aas
in
cmpsb
mov
stos
cmpsl
and
xlat
jl
dec
adc
push
mov
xlat
push
dec
lret
cld
pusha
pop
shl
cmp
push
fldcw
out
scas
lret
push
lahf
mov
xor
scas
lea
dec
outsl
push
mov
pop
ljmp
inc
push
xchg
inc
xlat
pushf
loopne
dec
or
lock
mov
mov
inc
add
cmc
push
or
fadds
push
add
inc
dec
lds
sbb
xchg
and
jmp
mov
data16
xor
xchg
cmp
mov
mov
testb
sbb
je
sbb
fldcw
and
adc
sbb
divb
dec
jne
sbb
inc
push
dec
outsl
push
repnz
outsl
imul
mov
and
dec
or
popa
sbb
jne
jecxz
jbe
dec
and
dec
fcmovnb
fistps
xchg
pop
mul
sti
cmp
lcall
jp
bnd
mov
push
popf
sub
sbb
push
xchg
cmp
ljmp
jb
rorl
push
mov
and
xchg
aas
cmp
divb
push
leave
or
pop
inc
outsl
int3
paddw
cwtl
xor
mov
in
adc
pop
aam
outsl
popf
aas
jo
xchg
jns
pushf
or
pusha
ret
xchg
push
or
shlb
and
or
push
pop
jnp
jnp
mov
pop
or
popa
cmp
mov
mov
mov
rcll
cmp
push
inc
lret
lret
cmp
je
jno
sarl
pop
mov
xchg
popf
jecxz
loope
movsl
test
xor
popa
fists
out
pop
mov
subl
leave
into
cs
jge
xchg
shrl
jbe
xchg
mov
inc
or
in
in
mov
jle
arpl
mov
aas
scas
lret
test
sub
test
dec
fiadds
mov
sub
es
les
inc
movsb
adc
rcll
nop
sarl
and
dec
call
dec
add
in
cmp
and
dec
inc
push
lea
inc
cltd
pop
jbe
sbb
mov
adc
mov
aaa
push
int
push
dec
daa
cmp
pop
jge
shrl
xchg
int3
and
test
fwait
repz
cmp
mov
les
sub
das
fisttpl
sub
cltd
xor
call
into
call
adc
cmp
pop
js
lcall
fiaddl
or
pop
mov
dec
lret
scas
mov
outsb
lds
pop
dec
pop
mov
icebp
std
pop
test
mov
jg
xchg
xchg
pop
pop
xor
inc
aad
in
add
cmpsb
ret
sub
adc
out
mov
mov
add
dec
hlt
push
push
in
and
mov
cmpsl
xor
icebp
aas
adc
sti
push
popf
push
xchg
cmp
cltd
adc
jnp
adc
fsubr
mov
mov
inc
add
sbb
leave
and
insb
mov
mov
je
daa
or
lret
int
inc
cmp
lretw
push
shll
jmp
mov
pop
aaa
outsb
subl
js
enter
push
inc
xor
cmpsb
imul
es
pushf
fcoms
sub
and
cmp
sbb
out
jg
xor
push
outsl
cs
xchg
mov
push
pop
pop
orb
mov
or
add
cmp
imul
clc
mov
test
cmp
insl
cmp
outsl
ret
mov
adc
mov
stc
ret
mov
aaa
fdivrl
inc
dec
mov
sbb
jae
or
dec
xchg
ss
out
xor
clc
dec
mov
call
pop
shrd
aas
pop
mov
mov
call
ss
mov
mov
push
int
sbb
jb
cmp
pop
outsb
shr
popa
pop
leave
cmp
adc
sub
mov
push
pushf
or
or
ret
out
pop
in
cmp
icebp
sub
push
shlb
shl
jno
into
push
sub
push
pop
mov
adc
push
in
popa
jmp
stc
out
inc
test
lahf
sbb
mov
daa
inc
loop
cltd
dec
iret
or
nop
inc
push
mov
xchg
aam
add
sub
sbb
jmp
sbb
jno
mov
pop
lock
pop
sub
pop
insb
iret
cmp
popa
loopne
pop
push
push
imul
clc
cld
pop
shrb
jl
fwait
jnp
es
sub
testl
sti
je
test
and
nop
in
test
dec
daa
movsl
in
xchg
cmc
or
inc
mov
push
add
push
cmp
pop
stc
jns
jbe
rep
dec
sbb
sub
cmp
and
mov
outsl
cmc
or
rcrb
jb
jo
mov
mov
xchg
arpl
cmpsl
pop
fdivrl
dec
push
out
xchg
inc
add
jb
push
repz
inc
inc
hlt
xor
and
mov
dec
jmp
mov
dec
pushf
ret
imulb
fucomi
pop
jo
pop
mov
cs
push
jmp
stos
pop
testl
in
enter
push
outsl
xchg
aaa
mov
and
jecxz
rorl
ja
mov
mov
ss
bswap
jns
enter
imul
addr16
cltd
xchg
and
add
cmp
jecxz
mov
inc
icebp
pop
add
inc
pop
out
jg,pn
adc
push
aad
and
sbb
pop
ret
or
push
test
mov
push
sbb
xchg
dec
xchg
test
imulb
aaa
sub
or
mov
jnp
andb
insl
push
sub
js
lcall
dec
jge
imull
jp
jae
push
jge
enter
decl
je
mov
or
and
jl
cmp
sub
stos
ss
jge
js
inc
and
sbb
mov
add
iret
int3
xchg
push
aas
xor
mov
push
xor
out
mov
push
mov
cmpsb
bound
pop
cmp
lcall
cli
mov
dec
push
pop
jo
fisubrl
jo
cmp
mov
lcall
shlb
inc
dec
add
dec
pop
fistpll
push
mov
push
or
inc
or
sbb
sbb
mov
adc
jg
push
jno
loopne
in
shr
or
fwait
movsl
notl
adc
pushf
xchg
orl
push
mov
push
jns
jo
xorb
pop
xchg
fstpt
shrb
xchg
pop
push
push
sti
mov
lods
pop
jnp
pop
insb
pop
inc
in
fmull
enter
mov
popf
icebp
mov
sub
mov
or
lods
sub
fiadds
jnp
sahf
jo
loope
add
addb
das
fisubs
arpl
shrb
lea
inc
adc
sahf
jb
push
xor
faddl
jle
sub
jns
inc
cmp
jmp
daa
into
sub
or
jno
adc
jae
sub
mov
aad
or
notl
sbb
inc
ljmp
outsb
fimuls
ret
mov
pop
idiv
std
stos
and
pop
jns
jp
outsl
jb
add
sarl
out
ja
jns
adc
jns
or
sbb
xchg
sub
cs
jo
leave
inc
aas
inc
mov
pop
addr16
gs
adc
idivl
mov
inc
xorb
out
popf
mull
adc
lods
cmpsb
call
pop
add
cmp
mov
pop
pop
inc
lea
push
fcmovnb
xchg
jp
rorb
ret
call
sub
iret
jmp
outsl
and
mov
and
jae
and
fbstp
xor
stc
cmp
sub
mov
jae
sub
lods
leave
insl
mov
nop
test
orb
jb
mov
mov
popa
pop
mov
sahf
sub
cmpsl
or
cmpsl
in
jnp
aaa
mull
addr16
sti
popa
in
mov
sub
iret
daa
outsb
pop
outsl
xchg
xchg
mov
out
mov
cmpl
inc
hlt
or
jns
jmp
jbe
fwait
repz
xchg
and
lea
test
jle
jmp
add
fwait
ror
fisttpll
sahf
jns
adc
stos
push
inc
sub
or
shll
mov
pop
jp
fildll
roll
loope
pop
shl
jno
mov
je
and
lods
and
sarl
pop
xchg
sbb
in
push
popa
mov
ret
xchg
loop
xchg
adc
sbbl
aad
rcrb
test
stos
mov
sbb
call
mov
mov
ds
inc
push
mov
lahf
mov
idivb
adc
lods
sahf
jl
and
or
sahf
add
xor
movsb
out
cli
sbb
lret
xchg
pop
dec
les
mov
push
rorl
iret
fsubrs
add
xchg
mov
pop
sbb
data16
pusha
popl
jge
cmp
cmp
bound
das
enter
hlt
dec
leave
dec
test
jnp
sbb
push
adc
stc
jnp
stc
ficoms
mov
and
fs
mov
mov
inc
loopne
std
test
cmp
pop
jge
mov
adc
or
lea
fisttps
xchg
jp
mov
movsb
outsb
pop
iret
icebp
push
pop
aaa
xor
or
add
arpl
xor
inc
mov
insb
inc
push
pop
mov
fcompl
gs
ljmp
insb
outsl
jge
jmp
or
rcrb
xchg
scas
push
pop
jmp
mov
jmp
lahf
cltd
int3
rcrb
and
jecxz
xorl
rol
and
cwtl
loop
loopne
lcall
jl
xchg
mov
sbb
fnsave
lret
xchg
or
popf
rclb
inc
sub
pop
xchg
inc
inc
pop
jo
xchg
stc
xor
int
test
push
jne
or
adc
imul
cld
mov
maskmovq
idivl
inc
xchg
jno
fcomip
or
jl
xchg
ss
xor
xor
xor
adc
cmpb
pop
cmp
push
mov
mov
cmp
daa
fdivl
into
pop
mov
or
ja
cli
xchg
cmp
lea
loop
mov
lock
out
cwtl
cltd
add
push
push
rcrl
out
ja
repz
out
hlt
adc
test
push
pop
lea
orb
jae
daa
adc
cwtl
pop
or
jle
cld
roll
pop
sub
cmp
sbb
jns
ja
sbb
inc
dec
jnp
pop
dec
test
jecxz
inc
xchg
pop
mov
or
call
enter
dec
adc
push
scas
sbb
push
add
jae
mov
cltd
mov
add
and
testl
pop
cs
cld
jno
outsb
sbb
mov
mov
das
int3
out
int
psrlw
insl
test
xchg
mov
jg
aad
xchg
xchg
mov
or
nop
pop
aam
loop
jnp
test
jl
dec
test
movsb
pop
ja
or
jo
jmp
xchg
aam
dec
inc
cli
pop
lcall
in
push
nop
pop
mov
lret
sbbl
cmp
pushl
popa
sbb
mov
push
cwtl
adc
pop
aam
nop
int3
fsubrp
jle
mov
inc
sarl
in
xchg
cmpsl
jp
sub
fsubs
sbb
cmp
cmpb
cmp
adc
mov
xor
scas
clc
add
test
xchg
inc
add
add
fistps
sub
sub
xor
rcrb
fs
loop
xchg
subl
cwtl
lret
sub
mov
sub
xchg
bound
jle
and
leave
sbbl
gs
mov
jmp
inc
add
dec
dec
js
pop
addr16
xor
loop
in
fchs
pusha
in
pop
stos
mov
mov
mov
inc
cmp
int3
and
sbb
insb
dec
out
mov
movsb
arpl
push
mov
arpl
into
push
add
adc
call
pop
or
adc
inc
xchg
push
aaa
cmp
mov
adc
rcll
aad
xor
insb
es
loopne
fmuls
xchg
pusha
test
mov
icebp
add
das
jp
push
je
push
shrl
cmp
nop
inc
mov
stc
mov
call
xchg
pop
faddl
dec
fildll
cs
pop
fisubl
push
lgs
add
insb
or
movsl
imul
pushf
xor
xor
daa
testb
imul
jecxz
sarl
pop
data16
call
push
mov
ljmp
incl
or
movsl
adc
push
xor
sub
jns
add
je
push
push
jae
je
pop
lods
and
subb
mov
push
mov
cmp
xchg
fimull
sbb
iret
mov
js
sarl
push
push
sub
adc
mov
xchg
push
push
adc
flds
out
cmp
push
leave
or
adc
pop
jle
lds
pop
pop
in
les
add
xchg
jae
sbb
jle
mov
pusha
jp
test
dec
mov
push
mov
adc
bound
push
mov
mov
xchg
fsubl
adc
and
ficoml
mov
lea
pop
pop
aaa
andl
loopne
dec
xchg
push
enter
add
imulb
jne
push
pushf
mov
mov
pop
inc
out
test
das
mov
outsl
bswap
inc
shlb
pusha
inc
pushf
loop
daa
or
pop
xor
not
push
shll
mov
into
loop
pop
lret
test
nop
xchg
mov
hlt
imul
cmovbe
mov
int
and
sbb
rclw
mov
in
and
adc
pop
stc
pop
pop
stc
mov
fildl
add
dec
into
sub
push
mov
jno
loop
mov
inc
leave
jmp
mov
mov
jo
ret
adc
in
dec
adc
in
add
arpl
inc
or
fcomi
movsl
je
jmp
jne
sarl
mov
call
andb
push
xor
mov
push
testl
jmp
rcll
les
aaa
mov
mov
or
movsb
sub
jo
mov
lcall
or
lods
fnstsw
push
dec
pop
fs
xor
pusha
adc
jb
cmp
incl
xor
pop
jb
jge
notl
popf
cmp
ljmp
int
sbb
xor
shll
jnp,pn
xchg
jnp,pn
pushf
pop
ss
scas
push
lret
push
or
push
xlat
xlat
inc
lds
push
in
jmp
xchg
aam
lds
jle
insb
out
push
jno
sub
and
jo
ljmp
mov
jl
sub
jg
scas
mov
ja
adc
xchg
adcb
mov
arpl
or
jne
push
stos
inc
psubusb
mov
xor
dec
sub
call
pushf
cltd
mov
or
test
mov
jbe
jno
hlt
lods
outsl
loope
dec
in
and
mov
lret
test
nop
dec
mov
sbb
fwait
aam
das
andl
lods
stc
sub
dec
inc
adc
loopne
shl
mov
lahf
repz
jmp
xchg
pop
sti
aaa
jno
inc
mov
into
add
lret
dec
hlt
into
and
movsb
fimuls
jecxz
jne
or
cmpsl
bound
mov
nop
test
or
mov
clc
inc
sub
mov
xchg
js
imul
xor
cmpsl
fwait
popf
lods
cmp
adc
cmp
in
push
inc
shlb
mov
out
js
or
rcrl
aaa
hlt
lret
popa
jge
dec
hlt
dec
push
mov
mov
inc
lcall
sbb
xor
hlt
dec
repz
mov
jbe
mov
fdivrs
push
or
or
push
fcmovnu
stc
daa
cmc
enter
lret
ret
push
lcall
aam
hlt
dec
inc
sbb
and
xchg
in
xchg
cmp
sbb
fs
mov
jns
sbb
fwait
pop
push
mov
jmp
clc
lods
imul
mov
sbb
mov
js
inc
add
push
fildll
out
loopne
fisubl
mov
subl
mov
sub
mov
lcall
enter
dec
add
outsl
into
mov
or
mov
stos
push
mov
shlb
test
mov
add
mov
std
push
dec
jmp
mov
inc
out
sub
dec
xchg
ret
out
lret
jns
in
xchg
pop
mov
jmp
leave
fwait
pop
sbb
add
and
sbb
push
sub
outsb
push
sub
jns
cmpsl
add
pop
mov
movsb
fcoms
cmp
sub
stc
dec
hlt
pop
push
mov
dec
data16
shll
imul
add
jbe
pop
imul
mov
lods
inc
dec
xchg
push
in
xchg
test
dec
pop
mov
aad
faddp
xor
test
and
xchg
add
sarl
add
hlt
xchg
jne
ret
sub
and
arpl
int3
test
push
ss
pmullw
xchg
aam
jo
or
dec
movsl
int3
mov
jb
sbb
pop
jl
push
std
xor
in
cmpsb
sub
ffreep
jae
xchg
xchg
xchg
xor
dec
loopne
adc
dec
add
cmpsl
push
scas
in
sbb
cmp
mov
test
dec
push
push
cmp
mov
lods
xchg
mov
iret
jp
lock
dec
or
mov
adc
call
sbb
rclb
xor
pop
jns
enter
rorl
add
stos
mov
sbb
aam
aad
fidivs
or
cmp
inc
cmp
sti
in
jae
mov
jno
cmpsl
jg
stc
hlt
adc
and
jge
aaa
lock
or
add
mov
scas
shrb
jg
mov
or
insb
movsl
bound
cwtl
das
xchg
sub
icebp
mov
and
sub
in
repnz
or
and
mov
dec
lahf
sbb
pusha
shlb
or
xor
fimuls
xor
mov
jns
mov
in
jp
mov
jl
cmp
mov
pop
xchg
lds
testl
in
push
out
repnz
test
call
or
mov
nopl
jp
rcr
rolb
adc
lahf
sub
fs
jge
xor
cltd
pop
lret
repz
fcoml
mov
pop
mov
dec
and
dec
add
fwait
rcrl
rcll
xchg
rcrl
scas
mov
xor
pop
xchg
push
sbb
jge
divps
sbb
cmc
and
mov
fldt
pop
ret
jb
icebp
push
add
sbbl
das
mov
xor
or
push
and
xchg
push
sub
fcomi
js
rcll
cmp
in
decl
or
mov
ret
cltd
xchg
test
in
stos
stos
jle
or
mov
and
push
lods
repnz
xor
outsl
pusha
xchg
aad
sbb
mov
xchg
mov
inc
mov
and
inc
test
insb
mov
test
xchg
pop
iret
imul
cli
lretw
sub
and
jl
dec
mov
vmwrite
mov
inc
cmpsb
aam
jg
add
xor
cmp
mov
push
ror
or
stos
in
shl
jmp
adc
fistpl
fucom
jae
fisttpll
not
shll
add
cld
push
mov
outsl
shlb
ss
cmc
jns
add
ljmp
stos
aam
push
imul
mov
add
jne
out
mov
std
push
cmp
push
movsl
mov
in
jns
cmp
push
mov
adc
sub
decl
pop
mov
mov
pusha
dec
mov
jl
mov
aam
inc
pop
push
push
and
rcll
insl
inc
jle
popa
fwait
adc
push
jne
mov
jno
shlb
pop
adc
leave
jp
pop
int
repz
mov
movl
stos
jae
fbstp
xor
cmp
pop
mov
sarl
or
stos
pop
loopne
pop
pop
sub
jne
and
push
das
inc
cmp
mov
insb
and
xchg
cmp
mov
ret
push
push
movl
cmp
das
cmpsb
and
or
je
fistpll
inc
movsl
clc
push
loopne
cwtl
push
xchg
push
andl
inc
inc
push
adc
std
or
mov
pusha
movsb
mov
inc
out
add
shll
xor
aaa
cli
inc
gs
sub
ss
xor
inc
std
adc
cmpsl
mov
gs
fld
out
ret
stos
xor
inc
xor
jle
inc
popf
lods
int
jp
aas
daa
mov
sub
loope
jbe
pop
inc
test
xor
sbb
pushw
xchg
cld
dec
mov
add
lods
cmc
ret
pop
pop
jge
rclb
outsl
inc
rcrb
cmp
xchg
xchg
pop
jno
mov
jp
js
out
xchg
addl
mov
xchg
rolb
dec
fnsave
lea
adcl
lds
call
hlt
imul
pop
in
lahf
fstpl
fcmovbe
mov
cmp
scas
and
inc
add
mov
cltd
xchg
mov
jle
aaa
xchg
aas
lret
push
dec
cmp
imul
rep
imul
test
not
mov
xor
adc
pop
int3
out
pop
enter
add
insl
int3
xor
mov
pop
push
ds
lds
jae
data16
jns
mov
in
xor
std
jmp
jmp
ljmp
inc
call
in
xor
cli
dec
mov
lcall
outsl
lds
pop
dec
mov
xor
pop
imul
inc
push
sub
xor
or
or
ss
fwait
add
xchg
pushf
mov
mov
aam
pop
pop
mov
pop
std
xchg
into
sub
push
mov
mov
dec
mov
cmpsl
push
jl
aaa
and
sbb
push
pushf
push
jo
mov
pop
pop
dec
mov
mov
adc
or
ror
push
mov
jmp
cmp
lds
inc
cmp
test
inc
repz
jnp
mov
or
jae
shld
mov
fsts
mov
pop
adc
or
mov
shlb
in
inc
and
gs
add
sub
dec
clc
jmp
and
sub
or
out
or
xchg
cmc
sbb
add
mov
rcrl
mov
out
add
lock
mov
pop
testb
xchg
pop
adc
out
nop
repnz
bound
add
mov
arpl
pop
pop
pop
pusha
and
repz
test
inc
mov
jl
hlt
ret
push
cltd
and
and
jp
mov
aad
mov
pop
stc
push
test
sub
lods
test
push
dec
jg
scas
movsl
sub
movsl
call
adc
stos
jge
fdivp
mov
mov
or
popf
repz
mov
shrb
rolb
vpackuswb
in
mov
scas
xlat
or
adc
gs
and
cmp
mov
push
imul
sub
in
adc
into
adc
xchg
add
sarb
ret
mov
fwait
mov
sbb
push
jb
cmpsl
idiv
andl
mov
rorb
adc
xor
push
daa
lret
xchg
dec
loop
mov
test
xor
mov
cmpsl
mov
insb
sbb
adc
daa
lods
xchg
insb
or
or
adc
mov
inc
lret
xchg
push
jo
sbb
lods
dec
mov
mov
frstor
add
pop
gs
call
test
cmp
out
adc
stc
push
pop
out
jne
int
ja
xchg
adc
and
mov
adc
aam
mov
cwtl
jge
inc
mov
xchg
repnz
adc
nop
sub
sbb
mov
add
dec
and
xlat
insl
cltd
popf
sbb
movsl
lret
je
enter
stos
mov
or
ds
mov
fmul
push
inc
jne
in
pop
repz
fadd
adc
jne
in
daa
or
sub
mov
dec
jo
jmp
decl
stos
xchg
cmp
lret
xorb
mov
movsb
sbb
mov
mov
mov
je
sarl
pause
or
lds
push
cmp
jnp
sub
fucomip
xor
pushf
enter
push
adcl
in
xor
pusha
xor
pushf
mov
fsubrp
push
inc
aad
cmc
sbbb
adc
fs
mov
lret
scas
das
xchg
in
jno
push
and
test
inc
daa
sarb
sti
mov
or
ss
fsts
push
test
and
and
jne
mov
ss
daa
jns
jae
test
xor
dec
pop
mov
dec
mov
push
test
leave
ljmp
push
sub
mov
jle
or
in
push
pop
lret
div
add
popa
mov
enter
in
fwait
mov
pop
sub
lcall
mov
inc
insl
leave
sub
sbb
push
aam
pop
rcrl
mov
sahf
dec
outsl
sbb
fistps
xchg
push
sarl
jns
mov
dec
inc
fstpt
mov
push
xor
out
mov
mov
inc
loop
pop
push
sub
jb
fisubl
scas
pusha
les
add
mov
dec
mov
push
push
or
mov
sub
imul
dec
mov
cmp
xor
sbb
fists
pop
jo
mov
ja
mov
clc
inc
ljmp
loop
div
and
int
jecxz
and
mov
cltd
xor
fxch
test
stc
inc
xor
pop
enter
pop
lret
les
cmc
push
fdivr
jmp
dec
dec
js
daa
lcall
mov
mul
sub
andb
clc
mov
dec
lret
or
add
cmp
push
cltd
xlat
jmp
dec
loopne
xchg
fs
mov
mov
outsb
mull
pop
push
pop
addr16
jo
xor
mov
mov
subb
cmc
jmp
push
fs
or
sub
pusha
ljmp
add
push
and
inc
mov
xchg
and
sbb
lret
mov
or
jbe,pn
xchg
movsl
loopne
insb
bound
das
fiadds
adc
adc
sbb
ret
cltd
mov
mov
scas
out
stos
dec
or
dec
push
cmpsb
or
sbb
jg
jae
jo
inc
mov
cmp
push
add
push
out
mov
mov
popf
shlb
aaa
cmp
push
dec
cs
sbb
mov
hlt
imul
enter
cmpsb
fisubl
rol
mov
pop
stos
lods
dec
dec
jg
mov
mov
rcrl
xchg
imul
push
nop
flds
inc
push
jge
data16
loope
mov
jg
in
repnz
and
in
stc
sub
std
inc
and
je
nop
mov
das
loope
and
push
fs
dec
fldl
mov
sarb
cmpsl
jmp
repnz
cmp
enter
mov
push
inc
cmp
push
mov
lcall
mov
or
push
mov
cmp
mov
hlt
cmp
xor
inc
mov
lret
in
inc
imul
insb
aam
cmc
xor
jecxz
mov
sahf
and
or
pop
sbb
insl
xor
sub
mov
add
or
dec
mov
psrlw
stos
sbb
popa
or
xchg
add
fisubrs
ds
mov
vucomiss
adcl
loopne
or
pop
cmp
cmpsl
fimull
lea
mov
mov
fcompl
push
aaa
aam
push
and
movsb
inc
cmp
mov
sbb
adc
xor
lret
ds
test
dec
or
cmp
xchg
ja
pop
pop
mov
push
xchg
mov
loope
xorl
mov
das
and
shll
rcr
clc
nop
mov
mov
mov
pop
cmpxchg
pop
pop
push
fdivrl
lods
push
xor
push
decl
testl
sahf
jg
pop
test
cwtl
lret
ss
scas
mov
sub
sbb
jbe
dec
xor
lahf
insl
jae
sub
lret
jae
jg
icebp
cltd
sbb
lret
in
xchg
into
stos
outsb
bound
fwait
xchg
js
jae
cltd
ss
mov
pop
in
mov
lcall
ljmp
cmpsl
sub
mov
aad
std
cmp
xor
pushf
mov
sub
repz
lods
mov
out
outsb
mov
sub
call
lret
clc
lea
sub
sbb
cmp
iret
lds
lcall
insl
push
into
push
mov
pusha
loopne
push
sub
cmp
xchg
sub
pop
out
mov
repnz
imulb
bswap
test
mov
aas
sahf
insl
das
into
pop
pop
mov
fsubrs
pop
imulb
mov
call
xlat
and
mov
pop
cmp
xchg
mov
jecxz
into
xchg
mov
loop,pn
dec
in
loop
aam
mov
adcb
ljmp
pusha
dec
pop
add
or
stc
mov
and
ja
mov
sbb
sbb
adc
cs
xchg
cmp
cli
mov
inc
mov
mov
sar
aam
rol
in
loop
arpl
daa
jle
test
jb
add
and
mov
mov
dec
jnp
int3
jecxz
mov
iret
notb
repnz
pop
mov
ret
gs
pop
imul
aam
push
jle
mov
vmulss
mov
add
push
imul
mov
ret
mov
and
mov
jg
mov
and
loop
shlb
mov
mov
gs
scas
dec
xlat
pop
add
test
adc
das
lods
xor
xor
in
js
pop
sub
cwtl
in
leave
push
std
xchg
cwtl
xor
lods
inc
cwtl
mov
mov
mov
cmp
sbbb
mov
sub
cmp
das
xchg
pop
push
popa
inc
push
mov
cmp
icebp
add
pop
andb
ret
pop
pop
sbb
nop
cmp
cmc
iret
insl
inc
jo
subb
add
lret
add
gs
mov
test
aam
sti
jmp
lcall
rclb
inc
out
or
mov
push
ja
js
es
sbb
add
push
test
fldcw
push
sbb
cmpsb
lea
push
adc
adc
xorl
addr16
sbbb
loope
xor
arpl
gs
adc
sub
xor
xor
sbb
jge
mov
sbb
lds
adc
ljmp
jb
xlat
jmp
mov
cld
popf
sub
mov
xlat
in
imul
and
pushf
cmp
jnp
jmp
stos
xchg
aam
fsubrl
call
xor
lcall
imul
int3
cmpsb
xor
mov
xchg
emms
lods
pop
xchg
fimuls
lock
xchg
mov
or
and
push
inc
stos
int
push
dec
ljmp
push
sarl
mov
pusha
nop
ret
sbb
cmp
out
push
lahf
out
jecxz
lret
jo
pop
scas
cltd
faddp
mov
out
sbb
in
leave
pusha
xchg
sub
and
adc
and
xor
cwtl
idiv
daa
push
fmull
fwait
aam
push
sub
sbb
xor
cmp
add
ljmp
data16
push
pop
jns
out
or
adc
cmp
pop
pop
jg
xlat
fstps
jl
test
jne
dec
clc
leave
idivl
ljmp
repnz
loop
fwait
pop
stc
pop
in
data16
into
icebp
imulb
jp
jge
cmp
into
lods
or
das
outsb
mov
jo
movsl
jecxz
adc
and
xor
les
push
mov
loopne
es
sub
pop
pop
fwait
int3
sbb
mov
cmp
fidivrs
cli
or
std
scas
mov
dec
jno
insl
cld
shlb
sahf
or
test
mov
cmp
xor
jl
mov
mov
mov
inc
xor
out
out
addr16
mov
or
mov
push
mov
pop
loope
adc
pop
cld
cwtl
in
jne
leave
pop
outsl
lea
jnp
in
push
mov
mov
add
in
xchg
sti
cmp
jmp
movsb
sub
in
jg
ss
add
in
or
cld
jge
test
inc
fstps
inc
pusha
jmp
xor
int
add
adc
pop
mov
or
clc
into
es
and
ret
push
inc
mov
lods
push
aad
sub
mov
pop
or
arpl
jnp
pushf
mov
mov
sub
cs
xchg
pop
cmpsb
or
pop
rcll
mov
cmp
fnsave
mov
cmc
inc
mov
adc
inc
and
ljmp
or
add
fldl
mov
sbb
jne
and
or
jnp
dec
shrd
and
mov
or
cmp
jns
mov
std
mov
adc
dec
xchg
fstpl
pusha
mov
dec
or
adc
fsubp
mov
mov
and
pop
push
out
dec
pop
pushf
lret
outsl
add
out
xchg
xchg
std
lods
cltd
inc
xchg
adcl
push
inc
roll
xor
sbb
and
xor
jmp
fwait
jnp
inc
cmp
mov
loopne
inc
jmp
stos
mov
mov
dec
scas
lcall
call
mov
mov
mov
xlat
in
inc
xchg
enter
add
mul
dec
inc
rcl
mov
cmp
adc
orl
insb
ficoms
sub
pop
mov
es
push
clc
outsb
subb
xchg
ds
fistpl
outsb
lods
mov
mov
xchg
fdiv
dec
or
lcall
dec
nop
cwtl
adc
and
xchg
xor
mov
pop
add
lock
stos
mov
scas
jnp
mov
rol
pop
jmp
pop
xchg
jne
outsb
mov
stos
lret
mov
das
pop
pusha
add
mov
pop
jns
call
insb
jb
mov
insl
out
cmpsl
sbb
ret
lret
pop
loopne
mov
test
out
pop
mov
scas
push
cmp
cmp
leave
insb
scas
stos
add
cs
dec
push
aad
mov
xor
inc
mov
push
or
ja
shll
icebp
push
adc
inc
shrb
jle
add
inc
test
lret
aaa
inc
push
adc
fwait
loop
mov
ret
mov
adc
xor
pop
lcall
test
repz
and
pop
push
out
pop
out
sub
mov
nop
or
pushf
push
inc
mov
xor
xchg
loop
push
pop
adc
cmp
xchg
lret
mov
mull
xor
icebp
xchg
pushf
ss
xchg
cltd
sub
push
xchg
shll
pop
or
sbb
mov
movsb
mov
fdivrs
clc
jnp
mov
or
stos
xchg
mov
jl
xlat
movsb
mov
hlt
aad
ja
pop
lahf
cld
or
mov
mov
shlb
stos
mov
aam
sar
dec
jbe
lds
cmp
push
cmp
dec
test
dec
mov
lcall
adc
inc
mov
inc
xchg
push
push
mov
call
insb
scas
jge
jmp
add
mov
add
pop
les
xchg
hlt
test
stos
inc
push
sub
aaa
pop
test
dec
cli
subl
mov
push
and
imul
and
fstps
push
js
xor
pop
push
add
fs
lods
lcall
push
jle
repz
cli
cs
or
sub
popa
mov
sti
and
push
pop
lds
orl
sub
rorl
adc
int3
adc
outsl
dec
rcll
bts
inc
push
mov
push
adc
push
les
loope
sub
into
push
mov
ror
call
fadds
ficomps
es
inc
ficomps
dec
outsb
je
xlat
jb
xchg
ret
lret
mov
or
test
lahf
cmpsb
cmpsl
daa
clc
movsb
sbb
mov
orb
movsl
mov
push
inc
push
xchg
pop
int
aaa
movsb
or
cmp
ret
sbb
popf
movsl
jg
pop
lods
adc
push
hlt
pop
cmc
aaa
test
aam
push
cmpsl
cli
les
sub
mov
ds
push
icebp
dec
dec
outsl
or
add
clc
and
xchg
movsb
stc
lods
lods
std
inc
loope
repnz
mov
sub
xchg
leave
int
xor
mov
lock
in
push
call
pop
lods
imul
ret
dec
cli
mov
cli
mov
pop
int3
cwtl
inc
xor
sbb
mov
stos
mov
or
notb
iret
adc
cld
mul
out
std
loope
test
push
xor
mov
or
lret
sbb
mov
test
cmp
adc
sti
jp
fsts
pop
insb
xchg
jl
dec
ds
jo
insl
add
dec
push
dec
ret
and
cmpsb
cmc
into
aam
pop
neg
pushf
adc
sub
sub
sub
pop
cmpsb
roll
repz
jo
mov
adc
test
sbb
jne
and
jmp
movsb
das
popa
mov
pop
pop
mov
pusha
and
pop
inc
pop
stos
pop
loop
aad
mov
lret
aaa
mov
push
push
mov
mull
into
ja
fwait
and
push
xor
push
in
out
sub
loop
aad
sbb
addl
and
add
dec
int3
mov
fwait
pop
enter
aam
sbb
adc
push
stc
jp
test
sbb
push
pop
pop
or
ds
xchg
adc
dec
icebp
cld
mov
push
xchg
popf
enter
cmp
pop
pop
decl
std
sub
sub
sarb
adc
out
jo
jnp
adc
mov
add
or
mov
push
pop
cmp
jns
pop
daa
mov
inc
push
andb
xor
jns
out
mov
outsl
repz
add
cwtl
out
call
inc
pushf
mov
inc
hlt
cmpsb
jo
fldenv
std
jge
sbb
sub
jp
bound
xchg
jmp
mov
add
lret
js
lods
sub
gs
xor
mov
or
cli
test
sbb
or
ss
lea
mov
cmp
lret
xor
inc
out
adc
ret
fdivs
xchg
mov
in
movb
jb
jnp
mov
fcmovnbe
sub
cs
inc
insl
xchg
cmp
shl
add
lcall
repnz
rcrl
out
movsl
int3
push
into
lahf
scas
mov
xchg
cmp
enter
idiv
push
icebp
or
jno
addr16
adc
scas
cmp
mov
pop
push
adc
dec
adc
test
ret
xchg
nop
mov
inc
pop
je
jg
fimull
popa
jnp
pusha
imul
imul
dec
cmp
bound
fstl
scas
mov
shrl
daa
jnp
jb
adc
fmuls
orb
ret
sbb
pop
and
lahf
or
or
mov
xchg
pusha
ret
cmp
sbb
divb
mov
aaa
sarb
dec
push
repz
fldt
test
imul
push
or
pop
add
xchg
lcall
hlt
leave
cmp
arpl
sbb
sub
mov
pushl
inc
jae
or
mov
xor
pusha
test
jbe
scas
sub
clc
cwtl
or
or
inc
ret
xchg
aaa
ret
xchg
sub
int3
lcall
cmpsb
loope
push
sbb
shlb
js
addl
rcl
or
lret
bound
cwtl
push
mov
aam
pop
stos
add
dec
call
cmp
fidivrl
das
sub
and
pushf
jmp
lods
push
sahf
dec
ret
and
sahf
rolb
insb
sbb
fs
out
inc
mov
mov
test
xorb
mov
xchg
test
rcrb
dec
pop
mov
sub
xor
popaw
lret
xchg
out
fdivl
testb
xchg
sbb
xchg
push
mov
cmp
mov
test
inc
mov
notb
test
addr16
outsl
lret
and
lods
ss
mov
push
pop
inc
popl
mov
xor
cmpsl
iret
push
pop
in
rcrb
and
mov
imul
insb
dec
pop
or
gs
or
xchg
ret
inc
sub
xlat
cmp
inc
stos
or
inc
in
ja
lret
in
inc
sub
mov
mov
inc
fs
mov
data16
arpl
pop
scas
imul
sahf
das
fs
inc
lock
in
loope
in
jns
and
pop
mov
in
rolb
cli
adc
fcoml
xor
pop
loope
sbb
adc
jge
lcall
jno
cmp
and
daa
std
mov
push
aaa
and
mov
cmp
ja
rorl
loope
add
cmp
or
sti
sbb
ja
addr16
nop
adc
xchg
sub
xchg
or
pop
arpl
lcall
jl
cld
repz
sbb
mov
add
sarl
lret
push
adc
pop
lret
mov
dec
jo
mov
cmp
sbb
test
push
mov
shll
rorb
and
sti
push
outsb
push
xor
fs
xchg
iret
fistl
xlat
inc
sbb
fwait
or
sar
xlat
ja
mov
cmp
jae
les
and
fadd
arpl
daa
add
push
pop
jmp
std
adcb
sub
fnstcw
insl
add
aad
pushf
popa
clc
jns
sbb
mov
push
fbld
jno
mov
dec
ljmp
mov
and
frstor
cmpsl
jb
popa
fidivl
sub
and
scas
int3
movsl
imul
js,pn
imul
les
scas
in
lret
ljmp
filds
insl
or
fistpl
push
lock
xor
or
adc
lret
sbb
push
mov
inc
repz
dec
dec
pushf
into
outsb
mov
xchg
sbb
mov
adc
jo
fisttpl
inc
cmp
lods
xor
imul
out
push
out
fildl
mov
mov
adc
cmp
fcmovbe
pop
mov
sbb
repz
jecxz
js
inc
jb
cmc
cs
xor
lahf
pop
sbb
sub
fisttps
or
iret
das
dec
jnp
mov
mov
or
xor
shrb
pop
in
xchg
mov
pop
in
in
stos
stc
jge
arpl
stos
imul
mov
sub
fisttps
call
arpl
movsb
dec
mov
cmp
in
mov
jl
sbb
sbb
pop
dec
icebp
add
les
mov
cmp
fisubrl
loope
popa
fwait
push
push
mov
sahf
dec
gs
mov
aaa
gs
lret
sub
clc
test
add
sbb
dec
enter
aas
jp
es
arpl
add
push
add
ficoml
cwtl
sbb
loope
stos
cmp
xchg
pop
push
and
inc
jl
push
fildl
je
sub
mov
adc
mov
mov
sub
dec
ds
fcomp
pop
pop
notl
xchg
mov
jg
sbb
inc
lret
cmp
xchg
dec
outsb
and
jmp
mov
and
cltd
adc
roll
and
in
imul
xchg
sub
mov
pop
mov
sbb
cmp
pushl
mov
popf
adc
mov
cmp
jae
std
fs
jnp
xor
outsb
jle
sbb
subl
push
imul
gs
fiaddl
mov
mov
lock
arpl
jle
call
mov
cmp
adc
mov
inc
lcall
test
ljmp
mov
push
imulb
jge
push
test
add
xchg
fnstsw
repz
mov
insl
sub
mov
sub
aaa
mov
aaa
mov
rcrb
ret
xchg
int
sub
data16
mov
mov
seto
cmp
inc
fwait
mov
xor
xchg
dec
nopl
ja
jecxz
out
push
sbb
mov
xchg
pop
movsb
shrb
mov
lods
or
xlat
lret
insb
mov
int
sbb
rorl
mov
movsb
sub
mov
mov
adc
rclb
iret
test
xchg
mov
push
mov
fdivrs
insl
xlat
hlt
lcall
bound
dec
pop
and
jne
add
push
jno
outsb
sbb
jae
fninit
int3
fldcw
pushf
adc
pop
lret
mov
je
out
dec
les
and
mov
dec
pop
pop
ror
inc
mov
dec
cmp
scas
pop
sbb
push
mov
adc
movsb
cmpsl
aam
mov
outsb
cmp
inc
add
cmpsb
push
dec
pop
push
std
mov
nop
add
rcrl
jp
mov
pop
lahf
dec
xchg
fnstsw
push
xchg
dec
frstor
enter
daa
lahf
shlb
in
pop
sbb
or
rcrl
mov
jb
lahf
dec
xor
sub
rep
addr16
jmp
adc
cmp
pusha
enter
adc
mov
bound
inc
sarl
dec
test
fidivl
mov
pop
sahf
dec
out
test
fcomps
or
sbbb
imul
je
iret
stos
repnz
add
sbb
jne
jno
aad
jge
lahf
mov
mov
mov
sbb
jecxz
xchg
cmpsl
mov
jmp
inc
push
xchg
mov
scas
pop
push
xchg
iret
lret
pop
movsl
cwtl
lret
push
cs
push
sbb
or
jne
xchg
pusha
fidivrs
cmp
or
jbe
jns
mov
cmp
cmp
push
fwait
xor
adc
pushf
repnz
mov
pop
dec
mov
fwait
jl
cmpsb
dec
jp
jge
cmpsl
xorb
add
ljmp
pushf
rcrb
cmp
enter
fdivr
xor
fmul
or
iret
gs
push
mov
mov
cmp
aam
insl
lea
push
pushf
lret
mov
cmp
jmp
aam
pusha
fistps
movsl
cli
sub
andl
mov
add
lahf
addr16
xor
sub
pop
mov
jnp
mov
pop
inc
add
nop
movsl
cmc
and
pop
nop
lods
xlat
in
jmp
test
inc
dec
xor
or
rol
or
ret
jl
pop
mov
sbb
xor
test
jnp
addr16
jb
lods
lods
stos
sub
xchg
rcll
and
pop
jle
repz
jle
mov
daa
dec
jge
js
sbb
adc
pop
adc
aam
xchg
outsl
mov
fildl
popf
mov
jo
adc
shll
aad
jnp
ficompl
lahf
sbb
pop
xor
test
xor
cmp
inc
mov
xchg
jmp
adc
jp
les
adc
sbb
xchg
jl
je
ss
inc
mov
cwtl
mov
roll
add
xchg
xor
or
nop
push
jl
sahf
push
pop
dec
std
mov
jp
cmpsb
pushf
xchg
or
mov
iret
lret
push
divb
icebp
ds
insl
pop
cmpsl
dec
jnp
js
jb
jge
or
mov
mov
leave
aad
mov
jmp
or
repnz
iret
mov
insb
mov
aaa
clc
lea
mov
and
sbb
and
insb
dec
out
and
sub
jecxz
mov
push
pop
or
mov
popa
mov
fs
add
outsb
lahf
ja
insb
ja
pop
mov
jl
lea
mov
icebp
pop
mov
sti
hlt
dec
dec
inc
addr16
add
in
cmpsl
add
int
clc
jle
inc
or
fidivs
push
xor
js
hlt
movsb
add
fimull
lret
pop
pop
push
in
cmp
sub
sbb
add
fnstsw
inc
cmp
fsubrl
cmp
clc
xchg
cltd
fdiv
clc
ljmp
jne
mov
loope
dec
cmp
iret
fbld
sti
dec
jne
lahf
int3
test
stc
orl
lret
adc
jnp
pop
jecxz
inc
fadd
imul
punpcklwd
inc
and
sub
lea
shrl
mov
and
enter
and
mov
push
js
mov
xor
jnp
pop
fmulp
xchg
jecxz
sti
loopne
xor
inc
sbb
xchg
sahf
in
aas
outsl
imul
push
and
sub
mov
jb
push
inc
jp
das
ficoml
data16
mov
fldl
inc
lret
cmpsl
mov
xchg
sub
or
cmpsb
add
dec
in
sbb
in
hlt
cltd
jmp
pop
mov
xchg
jge
popa
das
cmc
sub
lods
mov
jl
arpl
divb
dec
xor
lret
js
push
stos
jnp
mov
push
cmp
mov
divl
xchg
into
pop
inc
out
cmp
mov
repnz
fbld
adc
int
loopne
xor
enter
dec
jl
push
xor
adc
daa
fwait
aas
outsb
add
mov
fldt
data16
dec
hlt
push
and
fisubl
outsb
or
mov
pop
sahf
sbb
movsl
test
aaa
enter
shl
sbb
inc
ljmp
iret
jno
je
addr16
fbld
jae
fldt
or
and
jne
adc
mov
jne
pop
xchg
ss
add
push
sub
or
popa
xor
add
call
fisubrs
xchg
adcl
inc
insl
or
sbb
mov
into
jge
xor
mov
test
sbb
pop
pop
pusha
aas
cmpsl
cmp
jl
movsb
or
inc
cmc
push
test
les
dec
jecxz
fsubr
xchg
lea
push
das
dec
ficompl
mov
repz
cltd
test
sbb
shll
fildl
dec
lgs
xor
sbb
cmc
shll
sti
and
pop
mov
cmp
push
mov
into
sub
and
data16
and
movsb
pop
hlt
orl
aad
int
mov
insl
and
xchg
ret
ret
addr16
mov
pop
popa
sub
dec
or
push
adc
cwtl
xor
cmpb
jmp
fcoml
loop
pushf
insb
jge
adc
hlt
jge
cmc
adc
pushf
pop
lcall
je
xor
inc
cli
xchg
mull
jg
rcr
pop
jnp
adc
lods
and
dec
outsl
fisttpll
and
cmp
jmp
cmpl
push
jl
pop
test
pop
jnp
push
jo
jno
imul
cmp
iret
sub
adc
mov
daa
pop
into
scas
mov
and
inc
addb
scas
sbb
or
inc
sub
mov
iret
dec
dec
movsb
inc
mov
mov
pop
cmc
shlb
adc
insb
arpl
jge
xchg
inc
inc
sbb
stos
xor
stos
adc
pop
and
lods
pop
into
sub
xchg
test
jl
leave
inc
movsl
gs
call
data16
mov
cmpsb
inc
sub
add
fistpl
insb
or
sbb
cli
test
cli
mov
push
mov
adc
dec
and
lock
daa
jge
cmp
adc
and
mov
mov
xor
mov
sbb
filds
jo
mov
sbb
and
in
insl
sahf
stos
inc
dec
sbb
push
aaa
cmp
sbb
pop
into
aas
adc
adc
sbb
fldl
mov
mov
outsb
push
divl
test
je
xor
repz
jno
fiadds
cmp
cmp
push
mov
dec
jno
mov
jno
add
lahf
pop
cmp
ret
jmp
xchg
dec
sti
sbb
test
loope
inc
icebp
negb
shr
cmp
push
add
or
imul
push
sarl
fistpl
out
pop
pop
mov
jle
mov
sti
sarl
lods
xor
stos
jp
adc
nop
int3
jo
mov
jg
sbb
cmc
sbb
pop
mov
cmpsl
sub
xor
sarl
inc
cltd
sti
xchg
and
lret
insb
push
sub
xchg
jle
mov
jne
sahf
sbb
adc
ret
cmpsl
sub
icebp
sub
mov
insl
mov
mov
mov
repnz
movsb
insl
mov
jbe
add
pop
jno
outsb
push
and
jns
cmp
incl
xor
fwait
sahf
lock
mov
push
lock
test
call
pop
adcb
lock
cmc
mov
or
fsub
pop
leave
fstps
ds
xchg
stc
cli
daa
inc
test
add
xchg
push
or
mov
adc
daa
inc
lock
adcl
xor
int3
lcall
sahf
xor
daa
jl
int3
pop
hlt
lcall
lods
and
testl
xchg
xor
sbb
push
mov
fstp
lret
mov
pop
push
in
loope
lods
cmp
inc
fldt
scas
add
ror
fdivrs
dec
cmp
add
add
repnz
xchg
jmp
in
aad
out
addr16
sub
xchg
arpl
and
stos
fistps
addb
addb
sub
orb
pop
xor
push
cmp
into
adc
inc
dec
fidivs
pop
inc
jg
cmp
mov
iret
inc
sub
cltd
dec
sbb
cs
mov
dec
xchg
ja
mov
xor
pop
adc
mov
add
idivb
jns
mov
jo
pop
inc
sarl
pop
jns
jb
jmp
inc
repz
mov
jb
jb
adc
ror
mov
iret
mov
pop
lea
xor
dec
int
cmp
rcll
push
jno
cld
movsb
mov
les
dec
xchg
pop
xor
or
xor
pusha
inc
fwait
pop
lea
sub
insl
into
sub
jle
movb
inc
ljmp
xlat
add
bound
pop
nop
xlat
dec
out
dec
pop
je
out
sarl
dec
mov
and
add
lds
dec
bound
push
jb
dec
lock
test
push
sbb
or
and
testl
clc
adc
movsb
adc
pop
xor
sbb
scas
es
jbe
jno
and
cmc
in
data16
lcall
jmp
mov
mov
lret
jg
sub
sub
mov
sbb
add
jmp
faddl
ret
das
mov
sub
xchg
scas
fists
imull
les
repz
test
sub
fmuls
mov
mov
mov
jmp
push
and
fsubrl
inc
xchg
and
arpl
ljmp
xorb
mov
inc
movsl
add
test
jns
fildll
jae
and
test
call
pop
cmp
cs
push
shrl
cld
cmpl
shlb
push
sub
fisubrs
in
mov
fbstp
pop
sbb
ja
mov
and
loop
insl
xchg
dec
xlat
ljmp
sub
sub
jg
pop
push
pop
cmp
loop
lea
jno
mov
pusha
push
add
test
jp
negb
jl
jbe
mov
enter
jge
inc
push
clc
dec
in
in
cmc
pop
push
jecxz
or
sub
lods
dec
pop
cltd
fs
xor
and
test
test
ja
imul
out
pop
cmp
mov
mov
aas
xchg
orl
je
add
pop
cmpsl
and
xor
dec
hlt
and
adc
dec
and
nop
inc
add
mov
inc
xchg
ljmp
mov
mov
dec
pop
loope
push
ss
inc
cmp
in
mov
or
fsubp
out
inc
add
repz
shlb
hlt
cmpsl
mov
ror
lock
pop
popf
sub
les
fistl
test
push
inc
test
stos
push
and
push
adc
mov
iret
sbb
nop
mov
cld
mov
jge
in
test
daa
les
test
cmp
dec
jbe
cltd
mov
mov
cmp
inc
call
enter
nop
scas
pop
int
jmp
adc
push
int3
mov
inc
outsl
lret
std
jne
in
roll
daa
push
mov
jge
out
lods
mov
sbb
push
push
cmc
dec
fldl
test
cmp
addr16
or
scas
jg
inc
rcll
and
enter
mov
xor
push
stos
jbe
cmpl
sub
test
iret
js
out
sub
mov
arpl
jle
arpl
add
mov
xor
sub
outsl
xchg
pop
xor
mov
mov
push
lcall
and
push
imul
cli
outsl
sbb
xchg
hlt
xchg
test
aaa
dec
pushf
adc
xor
inc
cld
imul
add
push
inc
ljmp
sbb
xor
aad
dec
pop
sub
ds
aam
jbe
aas
jno
fsts
test
mov
mov
inc
arpl
fwait
xchg
rolb
xor
pop
imul
ljmp
lret
mov
outsl
inc
aaa
aaa
bound
xchg
mov
and
mov
xchg
sbb
int3
cmpl
fcomps
inc
mov
outsb
ss
jl
pop
out
mov
fsub
pop
mov
sti
add
sarb
addl
adc
outsl
mov
mov
sub
in
jl
mov
push
sub
xlat
mov
imul
xchg
shlb
or
dec
sub
aaa
aam
fs
cld
stc
pushf
or
sbb
repz
decl
repz
xchg
xchg
loopne
mov
mov
sbb
int3
mov
mov
movsl
cmp
js
rcll
outsl
xchg
jne
adc
and
mov
int
jl
jno
arpl
mov
mov
xor
arpl
call
pop
cmp
mov
inc
gs
jbe
bound
push
scas
adc
xchg
sbb
sbb
xchg
mov
add
pop
cmp
out
cld
mov
or
xor
lods
push
frstor
inc
sarb
test
ret
xlat
iret
cmp
mov
inc
in
fs
movsb
mov
stos
inc
dec
aam
mov
lods
into
cvtdq2ps
ret
inc
or
mov
mov
lea
sbbb
fcoml
sar
jp
jns
pop
gs
xchg
repnz
aam
test
lock
jecxz
sbb
icebp
sbb
add
rorb
jle
arpl
mov
push
test
test
iret
inc
adc
and
aad
or
sbb
nop
mov
sub
aaa
xor
jecxz
movl
jo
aaa
sub
sbb
sbb
mov
adc
fcoms
daa
sub
mov
or
jns
add
mov
dec
mov
xchg
cmpsl
popf
fwait
pop
fsubrs
pop
leave
stos
js
jnp
pushf
and
mov
xchg
cmp
jnp
mov
pop
repnz
push
adc
lret
cld
jge
pop
stos
rorb
pop
xchg
int
inc
cmc
lock
ljmp
push
cmp
sbb
movsl
and
in
test
mov
dec
mov
mov
outsl
mov
mov
pop
ds
hlt
cmpsl
mov
add
add
and
cmp
jno
fisttpll
mov
and
jne
and
roll
mov
adc
add
test
mov
mov
imul
push
jg
jp
and
push
test
push
addr16
movsl
daa
adc
xor
mov
push
in
mov
outsl
popa
mov
popf
dec
leave
in
and
imul
cmp
loope
inc
xlat
outsl
mov
lds
inc
jne
ss
jns
sahf
push
out
das
fnstenv
xchg
punpcklbw
aad
pop
mov
lods
pusha
push
in
aad
sub
out
psrld
mov
int3
mov
outsb
mov
push
insb
fisttpl
lahf
test
fldt
test
imul
mov
out
lods
aad
add
mov
mov
shrb
adc
adc
push
or
jp
mov
push
dec
cmp
adc
mov
xor
push
int3
outsl
lret
xlat
movsb
gs
or
mov
iret
shlb
pop
shlb
aad
dec
add
sbb
push
pushf
sbb
pop
sbb
stc
push
push
adc
push
daa
xor
jg
adc
mov
cmc
andb
das
pop
mov
push
xchg
andb
xor
dec
pop
jbe
aam
bound
add
cmp
movsl
cs
jp,pt
jae
adc
pop
push
js
adc
cli
sbb
fwait
insl
sbb
sbb
xor
fisubs
lds
dec
adc
adc
pop
cmpxchg
jae
jg
lds
pop
icebp
out
cmpsl
into
and
mov
pushf
fwait
mov
adc
sub
fwait
push
or
mov
xor
std
mov
fs
xchg
mov
xor
shl
jge
aad
lock
int
test
xchg
cmp
xchg
repnz
insl
ss
in
mov
pop
divb
fs
out
xchg
adc
xor
stos
or
aam
push
mov
test
mov
dec
or
mov
jg
jb
lods
mov
int3
aam
cs
inc
add
mov
movsl
out
dec
pop
daa
push
add
cmp
sarl
fstpl
call
mov
aaa
daa
cwtl
or
pop
test
cmpsl
aad
mov
inc
push
sub
xchg
or
xor
add
add
bound
jnp
lret
fs
dec
roll
jmp
das
sub
push
dec
fldcw
jecxz
fstpl
mov
pop
dec
lds
iret
mov
or
mov
sbb
pop
imul
and
cmpsb
jo
adc
inc
cmp
jae
sti
inc
mov
stc
push
mov
dec
xor
leave
mov
in
xchg
fistpl
mov
cwtl
jns
xor
fucom
fwait
mov
cmp
ret
mov
or
ret
lret
pusha
mov
cmp
mov
jge
ficomps
pop
xchg
outsl
sbb
jl
mov
mov
xchg
mov
dec
testl
inc
mov
ret
xchg
lahf
jnp
cld
or
fnstsw
imul
jbe
stos
arpl
ja
test
sbb
mov
movsl
mov
jmp
or
jbe
and
and
shlb
cmpsl
jo
cmp
sbb
lock
mov
add
xchg
lea
push
inc
jo
dec
aaa
push
clc
or
add
jecxz
aaa
jbe
out
test
adc
pop
pop
push
push
mov
fiaddl
cs
sub
js
ficoms
pop
loop
fsubl
popf
jo
popa
pop
xor
jns
sub
add
aad
lret
or
aad
in
ss
lret
sbb
pop
add
shl
or
and
sbb
jb
cmpsb
notl
pop
dec
cli
idiv
dec
sahf
dec
out
mov
pop
shr
in
xchg
or
and
inc
adc
mov
loopne
inc
xor
ret
mov
cmp
jecxz
ds
je
adc
movsl
les
jne
inc
lock
movsl
xchg
ds
mov
push
mov
fldt
xchg
cs
movsb
xor
jmp
rol
and
cmpsb
out
lock
pop
cmpsl
divl
repz
xchg
jnp
jnp
cmp
xchg
cld
mov
and
lahf
data16
stc
test
pushf
push
pop
push
inc
andb
mov
lods
fistl
lods
fidivrl
mov
dec
dec
inc
jg
add
jmp
or
push
cmp
fs
fstps
dec
adc
xchg
push
add
jl
out
add
hlt
iret
in
pop
xor
sbb
dec
cmp
push
inc
sbb
popa
push
sub
xchg
pusha
mov
cli
xor
jo
mov
lahf
inc
inc
loope
stos
mov
cmpsb
push
jae
ds
cli
les
aad
dec
mov
inc
aaa
roll
cli
cmp
xor
inc
sub
inc
pop
mov
jbe
clc
and
jb
push
and
sbb
lods
dec
ret
andl
and
popa
adc
dec
dec
and
shll
cmp
xor
xor
push
dec
subl
or
cs
lds
inc
jb
mov
mov
jne
mov
xor
dec
sbb
add
and
inc
push
dec
daa
mov
mov
aaa
xchg
push
mov
fstl
fcoml
xor
movsb
aam
cmc
pop
cmp
push
cmpsl
cs
mov
in
jmp
inc
sbb
pop
mov
cs
mov
or
jg
lds
nop
sbb
inc
fldcw
push
es
dec
dec
xor
pop
mov
jae
xor
scas
insl
sbb
out
fisttpll
sti
xor
adc
xchg
mov
addr16
mov
cmp
add
mov
cltd
or
cmp
gs
push
xor
xchg
cwtl
cmp
lods
insl
data16
repnz
ficoms
push
loopne
xlat
sub
mov
inc
adc
xchg
sbb
jne
sub
scas
rcrl
mov
and
or
or
and
push
mov
lret
daa
in
sti
xchg
idivl
mov
lods
pusha
outsl
popa
into
jecxz
pop
imul
outsl
pop
js
imul
andb
int
loope
enter
pop
test
sbb
outsl
pop
insl
adc
add
sub
push
lea
out
and
mov
push
leave
daa
jno
jns
mov
mov
addl
ret
enter
or
aam
sbb
push
out
testl
insl
inc
pop
cmp
dec
insb
decl
sub
mov
loopne
test
ret
mov
xor
loope
rol
out
test
jg
jmp
stos
fbstp
leave
ret
lahf
aam
test
idiv
sub
pop
and
cmpl
and
fdivrs
out
jno
lcall
push
push
adc
fmuls
push
cwtl
minps
sub
lods
mov
ljmp
into
fs
xchg
sbb
xor
into
mov
enter
shrb
or
pop
sbb
sub
push
les
mov
adc
xor
int3
sbb
and
lret
jle
sbb
add
imul
jg
add
and
adc
xor
fdiv
es
lea
xchg
sbb
mov
and
ret
lahf
lods
add
nop
xor
loopne
jae
cmp
pop
fmuls
popa
cmc
fistpll
sarl
lret
stc
jae
jae
sub
shl
icebp
xor
jnp
or
call
fidivl
xor
pop
fisttpl
pusha
gs
jmp
xor
push
pop
out
cmp
cli
das
jge
and
repz
jno
cmp
out
mov
mov
popa
ror
and
mov
add
xor
mov
lds
sub
into
outsb
mov
test
insb
sbb
stos
sbb
popa
xor
mov
jmp
adc
fnstcw
mov
gs
icebp
jp
push
int
lcall
jnp
push
dec
mov
push
std
adc
leave
fisttpll
mov
addr16
fidivrl
aad
rcll
sub
loop
sub
push
pop
pop
orl
sub
jl
xchg
jo
std
xor
mov
inc
xlat
mov
lds
das
ss
push
jle
lods
push
loope
cmc
dec
dec
cmp
loopne
sahf
sahf
repz
mov
inc
inc
lods
add
sbb
dec
xor
dec
jmp
mov
pop
cld
in
dec
push
or
leave
inc
mov
cli
or
mov
adc
or
js
daa
in
xor
out
mov
mov
pusha
xchg
add
mov
mov
xor
cmp
push
int
cmpsb
or
bound
ret
sbb
pop
mov
and
mov
adc
inc
xor
cmc
jge
sbb
lcall
sub
xchg
jno
dec
cwtl
dec
js
daa
test
sahf
repnz
fwait
sbb
shl
push
adc
popf
jne
mov
mov
sub
mov
or
roll
pop
mov
sbb
out
lea
mov
lds
inc
add
lock
cmp
jle
adc
push
subb
sub
mov
leave
movsl
xor
call
in
mov
mov
mov
in
pusha
dec
cmp
test
and
jne
dec
mov
push
or
int
clc
sub
js
and
push
xor
std
mov
cli
popf
imul
ja
aas
jne
rcrb
cmp
cmpsl
dec
shr
mov
fildll
push
lods
mov
je
or
outsl
adc
std
push
xor
rcll
push
mov
mov
push
loop
arpl
jnp
sbb
inc
jp
pop
mov
cmc
ret
out
xor
daa
adc
cmp
xchg
aaa
cmp
shll
movsb
or
out
arpl
dec
mov
adc
mov
scas
pop
or
xchg
out
mov
xchg
mov
daa
movsl
push
adc
xlat
mov
je
psadbw
mov
jp
scas
dec
roll
leave
inc
inc
ljmp
into
movsl
dec
idivl
test
xchg
pop
or
pop
lret
jae
idivb
hlt
mov
dec
clc
aas
lret
pop
adc
xchg
xchg
xchg
push
adc
xchg
addr16
lcall
xor
sbb
mov
push
test
je
rcl
pusha
jno
popa
test
dec
jmp
and
mov
popl
jo
dec
pop
push
pop
mull
jae
cld
pop
sbbb
rcrb
fisubl
pop
sbb
or
mov
jl
push
jg
je
cmpsb
ret
pusha
fsubr
sbb
xchg
xor
add
inc
adcb
dec
add
movups
xor
fsub
lock
mov
pusha
test
addr16
pop
cmp
fwait
enter
imul
je
cwtl
pop
push
fistl
and
cld
mov
mov
das
cmp
pop
sub
jae
ss
fwait
loopne
faddl
lcall
sbb
pop
pushf
out
and
jo
dec
cmp
lock
sbb
and
sbb
das
lret
mov
xchg
fwait
es
jae
sbb
add
inc
dec
mov
sub
xor
nop
sti
jmp
pop
cmp
jnp
and
xchg
in
in
xchg
cmp
testb
push
in
xor
scas
cltd
xchg
sbb
lret
or
addr16
cs
and
dec
test
xchg
int
lock
dec
out
nop
xchg
mov
or
pop
or
aam
cmp
aam
clc
rol
pop
cltd
pop
iret
loop
pop
cmc
fwait
or
mov
repz
sbb
imul
push
pop
and
mov
pusha
xchg
jnp
into
nop
jmp
fs
in
push
sub
mov
mov
inc
loopne
inc
lods
or
cli
dec
inc
iret
xor
dec
and
fsubrs
pop
cmp
xor
jmp
fcoms
cmp
or
dec
pop
and
gs
sbb
scas
pop
dec
add
idiv
icebp
sub
gs
ljmp
xchg
outsb
mov
ret
xchg
and
pushf
push
cmp
bound
aad
incb
or
mov
and
fs
cmp
add
int3
lods
xchg
lods
fnstcw
ljmp
lods
test
and
adc
xchg
stos
push
es
inc
mov
add
pusha
mov
ja
movsb
cwtl
sub
cmp
rcrb
jmp
sbb
jg
or
push
push
cs
mov
lods
into
add
aas
pop
popa
xchg
jmp
sbb
cmp
test
mov
pop
cmp
and
xor
inc
sub
xchg
mov
les
mov
nop
push
and
dec
push
inc
mov
mov
mov
add
sub
push
push
pusha
push
out
sub
cmp
mov
cmp
pushf
nop
cmp
cmp
lahf
inc
mov
xchg
repnz
dec
dec
ljmp
bound
idiv
test
sbbl
adc
xchg
push
dec
and
sbb
xor
push
and
cmpsb
or
or
addr16
jmp
jg
cmpsl
inc
sub
cld
jp
scas
fwait
test
je
cmp
fisttpll
scas
cs
imul
sbb
jmp
aam
arpl
orl
jnp
push
sarl
jb
loop
mov
loopne
xlat
mov
jge
cmp
pop
push
jnp
dec
stos
popa
mov
imul
dec
les
pop
divb
adc
shrl
insl
mov
inc
mov
sbb
jg
or
ds
pop
ret
pop
adc
or
pop
imul
dec
lods
dec
out
mov
cli
mov
mov
aas
test
js
lret
test
mov
cmp
movsl
loop
mov
cmpsb
push
dec
xchg
cld
mov
jp
push
inc
adc
bnd
and
clc
scas
out
sbb
jno
sarl
mov
jl
fsts
sbb
xchg
sbb
sub
enter
pushf
adc
cwtl
or
jne
fwait
sub
sbb
mov
mov
idivb
sahf
sbbl
lea
adc
leave
stos
lahf
fwait
cmp
insl
leave
inc
xchg
call
add
push
jg
lds
aad
jns
add
add
pop
jmp
orb
fidivl
and
popa
xchg
cmpsb
dec
adc
jb
outsl
pop
out
or
ljmp
push
hlt
or
mov
cmp
gs
nop
fildll
andb
pop
lods
lret
inc
pop
mov
fsub
movsb
outsb
and
add
lods
mov
out
mov
jo
movsb
negb
xchg
repnz
cwtl
cld
mov
mov
dec
adc
xchg
xchg
pop
in
add
sbb
data16
pop
test
cli
add
aad
push
pusha
and
outsl
aam
outsl
lahf
pop
sub
loope
mov
push
dec
ljmp
add
fs
repz
pushf
shlb
fnstsw
inc
inc
decl
incl
inc
xchg
pop
cs
aas
push
arpl
sub
jmp
repz
cmp
mov
push
jle
push
adc
iret
aam
in
nop
outsb
sub
shll
cli
jne
push
push
sbb
lcall
mov
lods
divb
jmp
or
dec
sbb
testb
or
pop
imul
insb
xorl
popf
cli
lods
xor
lret
dec
bound
mov
mov
adc
xchg
imul
ja
movups
ret
mov
daa
cmp
imul
jno
mov
xchg
mov
jne
loope
js
sub
cmpsb
add
out
or
addr16
clc
lahf
push
or
fs
je
mov
int3
dec
pop
sbb
adc
or
sub
int
push
cmpsb
sahf
mov
and
popf
insb
out
push
xchg
stc
mov
insl
ret
xor
mov
jno
data16
add
fistl
dec
dec
test
cmp
mull
inc
jl
iret
repz
cld
nop
jbe
pop
mov
push
call
filds
ret
or
jmp
std
dec
ret
mov
push
loope
je
jae
mov
cmpsb
cli
addw
xchg
ret
aas
or
mov
inc
sub
daa
data16
jae
mov
jg
loope,pn
jecxz
push
and
loop
fisubs
cmp
fiaddl
xchg
pop
push
inc
jae
xchg
imul
int
ret
cmpsb
cmp
lret
ds
es
xor
insl
push
imul
cmpl
dec
mov
push
clc
jmp
outsb
out
xchg
cmp
sarb
cmp
mov
mov
jb
std
inc
or
fisubs
fsts
mov
and
sub
mull
mov
xor
push
xor
shl
fsubrl
loope
mov
mov
or
pusha
gs
pusha
mov
sub
jmp
mov
pop
notb
xchg
cmpsb
ss
jno
push
lods
mov
aad
mov
push
nop
out
mov
daa
stc
xchg
xchg
fnstenv
or
hlt
ja
cli
jmp
divb
xchg
js
popf
inc
xor
ja
push
and
push
cmp
faddp
aaa
pop
repz
mov
sub
jge
jl
popa
movsb
push
mov
lds
push
and
in
push
fwait
ljmp
pushf
test
jge
aam
daa
and
test
lret
jae
xchg
mov
sarb
cmp
movl
inc
test
push
ss
add
mov
sbb
or
push
dec
fcmove
outsl
inc
pop
jle
sub
inc
pop
aaa
into
adc
pop
cli
test
jle
insl
and
mov
rcrl
push
out
sbb
sbb
push
bound
mov
imul
mov
push
mov
mov
movsl
daa
add
push
pop
sub
cwtl
lea
add
mov
mov
inc
sbb
xchg
xchg
push
movl
push
aam
pusha
jmp
out
jno
push
inc
lock
orb
out
fs
imull
stc
imul
ret
movsb
mov
mov
popa
mov
push
clc
inc
cmp
and
or
out
dec
jae
mov
mov
jecxz
cltd
cmp
push
ja
pop
xchg
or
jg
mov
inc
lds
ja
outsb
jle
ja
js
sahf
les
stc
and
sti
shrb
push
mov
push
clc
aas
xor
push
aaa
pop
in
pushf
lea
sbb
arpl
dec
mov
jnp
pop
cmpsb
xlat
mov
adc
sti
insl
sub
cs
push
jb
in
push
call
lret
aaa
dec
xchg
jb
ja
popf
adc
xchg
out
sbb
dec
jge
mov
call
push
push
ucomiss
test
mov
push
test
dec
push
loope
pop
dec
addr16
int
xchg
push
jge
mov
cwtl
es
ds
push
cltd
lret
je
dec
xchg
mov
scas
pop
mov
loope
sub
inc
jbe
test
movsb
pop
loopne
les
jnp
fisubrs
ss
xor
xchg
das
flds
test
xchg
mov
mov
fstps
mov
jg
lods
xlat
negb
push
or
fiaddl
adc
out
inc
dec
ljmp
ljmp
nop
lods
ret
dec
out
sti
aas
mov
lret
xor
rorb
cmc
cmp
or
sub
push
hlt
lock
test
sbb
fistl
lock
dec
or
jle
movsl
in
push
inc
sub
push
addr16
movsb
cmp
sub
scas
fbld
cld
aam
fisubl
or
dec
inc
mov
mov
cmp
std
pcmpeqb
std
push
aas
dec
out
cmpsl
sbb
enter
gs
cmp
xchg
fldenv
mov
ja,pn
fcoms
test
mov
test
pop
and
adc
adc
mov
inc
dec
arpl
mov
and
or
push
mov
mov
test
popf
stos
pop
xchg
roll
pop
jne
sub
mov
mov
adc
out
leave
sbb
cs
fldcw
jae
push
xchg
xor
sahf
lret
outsl
mov
pop
pop
push
arpl
aas
sbb
mov
jb
mov
cmp
and
movsb
or
insl
mov
pop
cmpsl
mov
in
iret
adc
xor
clc
jae
mov
jmp
or
sub
jle
cwtl
push
jecxz
arpl
xor
pop
inc
fs
add
pop
ss
popl
pop
mov
int
adc
adc
mov
aaa
pop
outsl
out
cmc
mov
jo
test
aas
andl
and
int3
mov
loopne
out
ret
lret
inc
jno
cmpsl
or
jno
mov
mov
dec
adc
jne
mov
mov
pop
pop
push
movsl
data16
fistl
xor
ret
inc
out
js
insb
cli
ja
jo
mov
push
sub
xchg
sbb
test
mov
shlb
jmp
sub
pop
cmpsl
mov
int
pop
pop
fxch
ret
inc
pop
push
inc
outsl
xchg
push
repz
xchg
xor
jle
xor
lods
xchg
shr
dec
adc
jl
inc
mov
rorb
cs
sbbl
jo
mov
in
inc
and
sarb
mov
mov
scas
pop
jl
lret
pop
repz
add
aad
fidivrl
adc
dec
icebp
sub
enter
pop
sub
push
test
adc
stc
in
repz
xchg
jmp
rol
xchg
xor
cltd
mov
mov
mov
inc
test
shl
popa
and
mov
or
adc
daa
push
rcr
sub
xor
dec
lock
sub
out
out
pop
sub
shll
xor
add
js
jge
out
xor
icebp
shlb
xchg
and
or
fstp
icebp
mov
shll
and
sub
pop
dec
adc
iret
push
pop
adc
fsts
mov
jl
scas
in
pop
mov
pushl
xchg
and
adc
or
pushf
gs
pushf
in
mov
mov
add
cmp
pop
or
dec
inc
xchg
dec
idivb
xchg
and
addr16
cld
xchg
adcb
mov
and
sarb
rcl
mov
adc
jno
pop
imul
aaa
fsubl
movzwl
adc
dec
and
lahf
cmpsl
pop
hlt
adcl
push
lods
das
out
jle
xchg
or
xchg
dec
cli
rolb
inc
cmc
leave
fdivl
or
sub
cmp
leave
shll
adc
xor
rolb
jmp
add
jb
ret
jmp
pop
aas
sbb
dec
mov
sbb
imul
repnz
add
int3
jo
das
adcl
fiadds
jg
cmpsb
cltd
mov
and
repnz
add
into
dec
bound
push
lea
jbe
or
cmp
xor
lret
xchg
lods
sbb
sbb
imul
fisttpll
adc
scas
lahf
cmp
add
jne
xchg
pop
or
mov
sub
xchg
sub
xchg
jo
jb
mov
lret
leave
lods
insl
mov
icebp
jns
inc
arpl
push
pop
mov
mov
or
and
jle
les
dec
or
xchg
lods
les
xor
xchg
adc
mov
add
sbb
mov
pop
xor
xchg
test
xchg
xchg
adc
jle
inc
andb
pop
addl
mov
mov
sbb
adc
jne
mov
and
sub
jmp
cmp
jns
sbb
cli
popf
ret
dec
push
fstl
insl
inc
pop
mov
pop
mov
or
dec
pop
push
xchg
jns
scas
mov
int
test
int3
popa
pop
mov
imul
mov
jns
or
stc
dec
dec
lock
sbb
jns
xchg
daa
and
fimull
scas
mov
std
or
inc
dec
sbb
popf
lods
push
popa
aas
shrb
pop
xor
or
imul
out
scas
pop
mov
add
arpl
mov
ljmp
push
lsl
mov
cmp
jecxz
mov
in
loope
cmp
push
sub
dec
inc
movsl
mov
insb
push
aas
out
iret
adc
push
ljmp
dec
in
mov
outsb
push
sub
sarb
fimuls
xor
sahf
lret
mov
lock
xchg
cli
mov
hlt
dec
ss
sbb
popf
pop
adc
fwait
call
xor
push
and
sub
push
pop
mov
hlt
jo
push
pop
sbb
xchg
rcl
xchg
dec
and
repnz
ffree
inc
mov
xor
inc
or
es
jmp
cmovne
xchg
or
mov
int3
fistpll
pop
sub
mov
push
jmp
mov
ljmp
sbb
out
push
adc
